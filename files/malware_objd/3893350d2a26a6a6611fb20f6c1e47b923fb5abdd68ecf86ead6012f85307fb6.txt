
3893350d2a26a6a6611fb20f6c1e47b923fb5abdd68ecf86ead6012f85307fb6.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x108
  401009:	add    DWORD PTR ds:0x42f000,0x432000
  401013:	push   esi
  401014:	sub    DWORD PTR ds:0x43101c,0x42f018
  40101e:	push   edi
  40101f:	xor    DWORD PTR ds:0x42e020,0x431010
  401029:	lea    eax,[ebp-0xc4]
  40102f:	inc    DWORD PTR ds:0x42f010
  401035:	push   eax
  401036:	push   0xf
  401038:	mov    DWORD PTR ds:0x42e000,0x5c4e
  401042:	call   DWORD PTR ds:0x434913
  401048:	adc    DWORD PTR ds:0x431014,ebx
  40104e:	mov    esi,DWORD PTR ds:0x4348ef
  401054:	and    DWORD PTR ds:0x431008,0x42f010
  40105e:	push   0x4343e7
  401063:	xor    DWORD PTR ds:0x432000,0x42f010
  40106d:	xor    edi,edi
  40106f:	adc    DWORD PTR ds:0x42f01c,0x43201c
  401079:	inc    edi
  40107a:	and    DWORD PTR ds:0x42f00c,0x62f7
  401084:	push   edi
  401085:	adc    DWORD PTR ds:0x432008,0x432000
  40108f:	push   edi
  401090:	xor    DWORD PTR ds:0x430004,0x55
  40109a:	call   esi
  40109c:	xor    DWORD PTR ds:0x42e000,0x137b
  4010a6:	test   eax,eax
  4010a8:	mov    DWORD PTR ds:0x430004,0x482
  4010b2:	je     0x40119d
  4010b8:	push   0x4343ff
  4010bd:	push   edi
  4010be:	push   edi
  4010bf:	and    DWORD PTR ds:0x432008,0x42e018
  4010c9:	call   esi
  4010cb:	test   eax,eax
  4010cd:	mov    DWORD PTR ds:0x432008,0x1562
  4010d7:	je     0x4010ee
  4010dd:	adc    DWORD PTR ds:0x42f008,0x6c9b
  4010e7:	xor    eax,eax
  4010e9:	jmp    0x4026c9
  4010ee:	or     DWORD PTR ds:0x42e018,0x42e01c
  4010f8:	push   0x9
  4010fa:	and    DWORD PTR ds:0x430004,0x42e004
  401104:	push   0x434417
  401109:	add    DWORD PTR ds:0x42f004,0x43000c
  401113:	call   DWORD PTR ds:0x4348e7
  401119:	test   eax,eax
  40111b:	mov    DWORD PTR ds:0x42e008,0xb3c
  401125:	je     0x40113a
  40112b:	lea    eax,[ebp-0x20]
  40112e:	push   eax
  40112f:	call   DWORD PTR ds:0x4348a7
  401135:	jmp    0x4026c9
  40113a:	add    DWORD PTR ds:0x432000,0x7af2
  401144:	push   0x43443b
  401149:	push   edi
  40114a:	add    DWORD PTR ds:0x43100c,0x430018
  401154:	push   edi
  401155:	and    DWORD PTR ds:0x430010,0x466f
  40115f:	call   DWORD PTR ds:0x434903
  401165:	add    DWORD PTR ds:0x430010,0x431018
  40116f:	test   eax,eax
  401171:	mov    DWORD PTR ds:0x43201c,0x38e4
  40117b:	jne    0x40112b
  401181:	push   0xd
  401183:	add    DWORD PTR ds:0x42e004,0x6394
  40118d:	push   0x43444b
  401192:	call   DWORD PTR ds:0x434907
  401198:	jmp    0x4010dd
  40119d:	push   0x9
  40119f:	push   0x43445b
  4011a4:	add    DWORD PTR ds:0x43000c,0x42e000
  4011ae:	call   DWORD PTR ds:0x4348e7
  4011b4:	and    DWORD PTR ds:0x432008,0x42e018
  4011be:	test   eax,eax
  4011c0:	jne    0x401240
  4011c6:	and    DWORD PTR ds:0x430004,0x432010
  4011d0:	push   0x434477
  4011d5:	push   edi
  4011d6:	sub    DWORD PTR ds:0x430010,0x432014
  4011e0:	push   edi
  4011e1:	sbb    DWORD PTR ds:0x42e00c,0x1a43
  4011eb:	call   DWORD PTR ds:0x434903
  4011f1:	add    DWORD PTR ds:0x42f00c,0x430004
  4011fb:	test   eax,eax
  4011fd:	mov    DWORD PTR ds:0x430004,0x2e6d
  401207:	jne    0x40112b
  40120d:	and    DWORD PTR ds:0x42e008,0x43101c
  401217:	push   0xd
  401219:	push   0x434487
  40121e:	call   DWORD PTR ds:0x434907
  401224:	adc    DWORD PTR ds:0x42f018,0x799a
  40122e:	test   eax,eax
  401230:	mov    DWORD PTR ds:0x42f004,0x637d
  40123a:	jne    0x40112b
  401240:	mov    edi,DWORD PTR ds:0x41d082
  401246:	mov    edi,DWORD PTR [edi]
  401248:	and    DWORD PTR ds:0x431008,edi
  40124e:	mov    DWORD PTR [ebp-0x10],0x0
  401255:	and    DWORD PTR ds:0x431004,ebx
  40125b:	mov    eax,DWORD PTR [ebp-0x3c]
  40125e:	mov    DWORD PTR ds:0x42e01c,0x1f
  401268:	cmp    DWORD PTR ds:0x42e01c,0x0
  40126f:	je     0x4012d6
  401275:	cmp    DWORD PTR ds:0x42e01c,0xe
  40127c:	jg     0x4012d6
  401282:	jmp    0x4012aa
  401287:	push   0x431000
  40128c:	push   0x87aa
  401291:	push   0x3cef
  401296:	push   0x5469
  40129b:	push   DWORD PTR [ebp-0x24]
  40129e:	push   DWORD PTR [ebp-0x10]
  4012a1:	push   DWORD PTR [ebp-0x28]
  4012a4:	call   DWORD PTR ds:0x4348df
  4012aa:	cmp    DWORD PTR ds:0x42e01c,0xf
  4012b1:	jne    0x4012c4
  4012b7:	mov    ecx,DWORD PTR ds:0x42e01c
  4012bd:	dec    ecx
  4012be:	mov    DWORD PTR ds:0x42e01c,ecx
  4012c4:	mov    ecx,DWORD PTR ds:0x42e01c
  4012ca:	dec    ecx
  4012cb:	mov    DWORD PTR ds:0x42e01c,ecx
  4012d1:	jmp    0x401268
  4012d6:	mov    DWORD PTR [ebp-0x3c],eax
  4012d9:	mov    ecx,DWORD PTR ds:0x430010
  4012df:	or     DWORD PTR ds:0x431010,ecx
  4012e5:	mov    DWORD PTR [ebp-0x8],0xf89c8581
  4012ec:	sub    ecx,esi
  4012ee:	mov    DWORD PTR [ebp-0xc],0xf89c8580
  4012f5:	xor    edi,edi
  4012f7:	add    edi,DWORD PTR ds:0x42e008
  4012fd:	xor    DWORD PTR ds:0x42f014,edi
  401303:	lea    eax,[ebp-0x44]
  401306:	mov    DWORD PTR [ebp-0x38],eax
  401309:	movzx  esi,BYTE PTR ds:0x42f01c
  401310:	or     esi,DWORD PTR ds:0x431004
  401316:	mov    DWORD PTR ds:0x42f01c,esi
  40131c:	lea    eax,[ebp-0x48]
  40131f:	mov    DWORD PTR [ebp-0x18],eax
  401322:	mov    eax,ds:0x4342d7
  401327:	add    DWORD PTR ds:0x432008,0x58e0
  401331:	mov    eax,DWORD PTR [eax+0x1c8]
  401337:	xor    DWORD PTR ds:0x42e008,edi
  40133d:	mov    eax,DWORD PTR [eax]
  40133f:	add    edi,esi
  401341:	mov    ecx,DWORD PTR [ebp-0x18]
  401344:	or     esi,esi
  401346:	mov    esi,0x751089d
  40134b:	movzx  edi,BYTE PTR ds:0x430008
  401352:	sub    DWORD PTR ds:0x42e024,edi
  401358:	xor    eax,esi
  40135a:	mov    DWORD PTR ds:0x431008,0x1e
  401364:	cmp    DWORD PTR ds:0x431008,0x0
  40136b:	je     0x4013d1
  401371:	cmp    DWORD PTR ds:0x431008,0xc
  401378:	jg     0x4013d1
  40137e:	jmp    0x4013a5
  401383:	push   0x8e8e
  401388:	push   0x0
  40138a:	push   DWORD PTR [ebp-0x10]
  40138d:	push   0x42f008
  401392:	push   DWORD PTR [ebp-0x28]
  401395:	push   0x1613
  40139a:	push   0x69aa
  40139f:	call   DWORD PTR ds:0x4348e3
  4013a5:	cmp    DWORD PTR ds:0x431008,0xd
  4013ac:	jne    0x4013bf
  4013b2:	mov    edi,DWORD PTR ds:0x431008
  4013b8:	dec    edi
  4013b9:	mov    DWORD PTR ds:0x431008,edi
  4013bf:	mov    edi,DWORD PTR ds:0x431008
  4013c5:	dec    edi
  4013c6:	mov    DWORD PTR ds:0x431008,edi
  4013cc:	jmp    0x401364
  4013d1:	mov    edi,0x3272e4
  4013d6:	sub    DWORD PTR ds:0x42e018,0x1414
  4013e0:	add    eax,edi
  4013e2:	mov    DWORD PTR ds:0x42f018,0x348
  4013ec:	mov    DWORD PTR [ecx],eax
  4013ee:	mov    eax,ds:0x43472b
  4013f3:	mov    DWORD PTR ds:0x42f01c,0x2d77
  4013fd:	cmp    eax,0x312bc9f6
  401402:	mov    DWORD PTR ds:0x430008,0x53dc
  40140c:	jne    0x40147c
  401412:	mov    eax,DWORD PTR [ebp-0x8]
  401415:	mov    ecx,DWORD PTR ds:0x4342d7
  40141b:	mov    ecx,DWORD PTR [ecx+0x198]
  401421:	add    DWORD PTR ds:0x43101c,0x42e010
  40142b:	xor    eax,esi
  40142d:	or     DWORD PTR ds:0x430000,0x43201c
  401437:	add    eax,edi
  401439:	and    DWORD PTR ds:0x43100c,0x5e05
  401443:	mov    DWORD PTR [ecx],eax
  401445:	movzx  eax,WORD PTR ds:0x43200c
  40144c:	or     DWORD PTR ds:0x42e004,eax
  401452:	mov    eax,DWORD PTR [ebp-0x8]
  401455:	adc    DWORD PTR ds:0x42e004,0x70db
  40145f:	xor    eax,esi
  401461:	or     DWORD PTR ds:0x432010,0x4354
  40146b:	add    eax,edi
  40146d:	mov    DWORD PTR ds:0x431008,0x6492
  401477:	mov    ds:0x43472b,eax
  40147c:	mov    eax,ds:0x4342d7
  401481:	mov    eax,DWORD PTR [eax+0x18c]
  401487:	sub    DWORD PTR ds:0x431000,0x42e024
  401491:	mov    eax,DWORD PTR [eax]
  401493:	or     DWORD PTR ds:0x42e01c,0x36
  40149d:	mov    DWORD PTR [ebp-0x7c],eax
  4014a0:	neg    DWORD PTR ds:0x42e01c
  4014a6:	mov    eax,0xf89c85bd
  4014ab:	mov    DWORD PTR [ebp-0x10],eax
  4014ae:	adc    DWORD PTR ds:0x431004,0x7bd1
  4014b8:	mov    DWORD PTR [ebp-0x10],eax
  4014bb:	or     DWORD PTR ds:0x42e028,0x5a2b
  4014c5:	mov    DWORD PTR [ebp-0x10],eax
  4014c8:	mov    DWORD PTR [ebp-0x18],0xf89c8581
  4014cf:	push   ebx
  4014d0:	mov    DWORD PTR [ebp-0x10],eax
  4014d3:	mov    ebx,DWORD PTR ds:0x42e024
  4014d9:	xor    DWORD PTR ds:0x42e018,ebx
  4014df:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  4014e6:	xor    DWORD PTR ds:0x430010,0x43100c
  4014f0:	mov    ebx,DWORD PTR [ebp-0x8]
  4014f3:	xor    ebx,esi
  4014f5:	add    ebx,edi
  4014f7:	mov    DWORD PTR ds:0x43100c,0xa17
  401501:	jmp    0x401639
  401506:	not    DWORD PTR ds:0x42e028
  40150c:	mov    eax,DWORD PTR [ebp-0xc]
  40150f:	xor    eax,esi
  401511:	lea    eax,[eax+ebx*1+0x3272e4]
  401518:	adc    DWORD PTR ds:0x43201c,0x42e00c
  401522:	push   eax
  401523:	xor    DWORD PTR ds:0x43200c,0x6ae7
  40152d:	mov    eax,DWORD PTR [ebp-0x18]
  401530:	xor    eax,esi
  401532:	or     DWORD PTR ds:0x42f010,0x432010
  40153c:	lea    eax,[ebp+eax*1+0x3272ec]
  401543:	sbb    DWORD PTR ds:0x42f018,0x7b10
  40154d:	push   eax
  40154e:	mov    DWORD PTR ds:0x431000,0x1b
  401558:	cmp    DWORD PTR ds:0x431000,0x0
  40155f:	je     0x40159f
  401565:	cmp    DWORD PTR ds:0x431000,0x1e
  40156c:	jl     0x40159f
  401572:	jmp    0x40158f
  401577:	push   0x8bad
  40157c:	push   0x43001c
  401581:	push   DWORD PTR [ebp-0x18]
  401584:	push   0x177c
  401589:	call   DWORD PTR ds:0x4348eb
  40158f:	mov    eax,ds:0x431000
  401594:	dec    eax
  401595:	mov    ds:0x431000,eax
  40159a:	jmp    0x401558
  40159f:	mov    eax,ds:0x4342d7
  4015a4:	sbb    DWORD PTR ds:0x42e010,0x430000
  4015ae:	push   DWORD PTR [eax+0x1bc]
  4015b4:	neg    DWORD PTR ds:0x42f008
  4015ba:	call   0x4026dd
  4015bf:	and    DWORD PTR ds:0x42e00c,0x0
  4015c9:	mov    eax,ds:0x42e00c
  4015ce:	inc    eax
  4015cf:	mov    ds:0x42e00c,eax
  4015d4:	cmp    DWORD PTR ds:0x42e00c,0x7
  4015db:	jbe    0x401623
  4015e1:	jmp    0x4015fb
  4015e6:	push   0x3590
  4015eb:	push   0x431004
  4015f0:	push   0x4340ed
  4015f5:	call   DWORD PTR ds:0x4348f3
  4015fb:	cmp    DWORD PTR ds:0x42e00c,0x6
  401602:	jne    0x401616
  401608:	xor    eax,eax
  40160a:	or     eax,DWORD PTR ds:0x42e00c
  401610:	inc    eax
  401611:	mov    ds:0x42e00c,eax
  401616:	cmp    DWORD PTR ds:0x42e00c,0x11
  40161d:	jb     0x4015c9
  401623:	mov    eax,DWORD PTR [ebp-0xc]
  401626:	xor    DWORD PTR ds:0x42e014,0xbbe
  401630:	xor    eax,esi
  401632:	lea    ebx,[ebx+eax*1+0x3272e4]
  401639:	and    DWORD PTR ds:0x431018,0x0
  401643:	jmp    0x401653
  401648:	mov    eax,ds:0x431018
  40164d:	inc    eax
  40164e:	mov    ds:0x431018,eax
  401653:	cmp    DWORD PTR ds:0x431018,0x10
  40165a:	jae    0x401697
  401660:	cmp    DWORD PTR ds:0x431018,0x1c
  401667:	ja     0x401697
  40166d:	jmp    0x401692
  401672:	push   0x490f
  401677:	push   0x4340d1
  40167c:	push   0x783a
  401681:	push   0x4340d1
  401686:	push   DWORD PTR [ebp-0x24]
  401689:	push   DWORD PTR [ebp-0x10]
  40168c:	call   DWORD PTR ds:0x4348f7
  401692:	jmp    0x401648
  401697:	mov    eax,DWORD PTR [ebp-0xc]
  40169a:	and    DWORD PTR ds:0x42e018,0x0
  4016a4:	jmp    0x4016b6
  4016a9:	mov    ecx,DWORD PTR ds:0x42e018
  4016af:	inc    ecx
  4016b0:	mov    DWORD PTR ds:0x42e018,ecx
  4016b6:	cmp    DWORD PTR ds:0x42e018,0x18
  4016bd:	jae    0x4016fd
  4016c3:	cmp    DWORD PTR ds:0x42e018,0xd
  4016ca:	jb     0x4016fd
  4016d0:	jmp    0x4016de
  4016d5:	push   DWORD PTR [ebp-0x10]
  4016d8:	call   DWORD PTR ds:0x4348fb
  4016de:	cmp    DWORD PTR ds:0x42e018,0xc
  4016e5:	jne    0x4016f8
  4016eb:	mov    ecx,DWORD PTR ds:0x42e018
  4016f1:	inc    ecx
  4016f2:	mov    DWORD PTR ds:0x42e018,ecx
  4016f8:	jmp    0x4016a9
  4016fd:	mov    ecx,DWORD PTR [ebp-0xc]
  401700:	sub    DWORD PTR ds:0x431010,0x5342
  40170a:	xor    ecx,esi
  40170c:	and    DWORD PTR ds:0x42e028,0x43001c
  401716:	xor    eax,esi
  401718:	sbb    DWORD PTR ds:0x42f01c,0x42f014
  401722:	add    eax,ecx
  401724:	and    DWORD PTR ds:0x430014,0x0
  40172e:	jmp    0x401740
  401733:	mov    ecx,DWORD PTR ds:0x430014
  401739:	inc    ecx
  40173a:	mov    DWORD PTR ds:0x430014,ecx
  401740:	cmp    DWORD PTR ds:0x430014,0x11
  401747:	jae    0x40178f
  40174d:	cmp    DWORD PTR ds:0x430014,0x9
  401754:	jb     0x40178f
  40175a:	jmp    0x401770
  40175f:	push   DWORD PTR [ebp-0x20]
  401762:	push   0x431010
  401767:	push   DWORD PTR [ebp-0x24]
  40176a:	call   DWORD PTR ds:0x4348ff
  401770:	cmp    DWORD PTR ds:0x430014,0x8
  401777:	jne    0x40178a
  40177d:	mov    ecx,DWORD PTR ds:0x430014
  401783:	inc    ecx
  401784:	mov    DWORD PTR ds:0x430014,ecx
  40178a:	jmp    0x401733
  40178f:	mov    ecx,DWORD PTR [ebp-0xc]
  401792:	add    DWORD PTR ds:0x43000c,0x42f000
  40179c:	xor    ecx,esi
  40179e:	mov    DWORD PTR ds:0x432018,0x6f3a
  4017a8:	lea    eax,[eax+ecx*1+0x9758ac]
  4017af:	mov    DWORD PTR ds:0x42e020,0x2e88
  4017b9:	cmp    ebx,eax
  4017bb:	jbe    0x401506
  4017c1:	mov    eax,DWORD PTR [ebp+0xc]
  4017c4:	sbb    DWORD PTR ds:0x43000c,0x7d71
  4017ce:	mov    ds:0x43415b,eax
  4017d3:	mov    eax,DWORD PTR [ebp+0x10]
  4017d6:	mov    DWORD PTR ds:0x42e000,0x12
  4017e0:	cmp    DWORD PTR ds:0x42e000,0x0
  4017e7:	je     0x401833
  4017ed:	cmp    DWORD PTR ds:0x42e000,0x9
  4017f4:	ja     0x401833
  4017fa:	jmp    0x401805
  4017ff:	call   DWORD PTR ds:0x43490b
  401805:	cmp    DWORD PTR ds:0x42e000,0xa
  40180c:	jne    0x40181f
  401812:	mov    ecx,DWORD PTR ds:0x42e000
  401818:	dec    ecx
  401819:	mov    DWORD PTR ds:0x42e000,ecx
  40181f:	xor    ecx,ecx
  401821:	xor    ecx,DWORD PTR ds:0x42e000
  401827:	dec    ecx
  401828:	mov    DWORD PTR ds:0x42e000,ecx
  40182e:	jmp    0x4017e0
  401833:	mov    ds:0x4343af,eax
  401838:	mov    ecx,DWORD PTR ds:0x41d0b2
  40183e:	mov    eax,ds:0x41d08e
  401843:	sub    eax,ecx
  401845:	or     ecx,DWORD PTR [ecx+eax*1]
  401848:	mov    eax,ds:0x43415b
  40184d:	mov    ecx,DWORD PTR [ebp-0x38]
  401850:	mov    DWORD PTR ds:0x43100c,0x6301
  40185a:	sub    eax,edi
  40185c:	and    DWORD PTR ds:0x431014,0x432000
  401866:	xor    eax,esi
  401868:	mov    DWORD PTR [ecx],eax
  40186a:	mov    eax,0x929
  40186f:	mov    eax,DWORD PTR [ebp-0x3c]
  401872:	cmp    eax,0xf89c8581
  401877:	mov    DWORD PTR ds:0x42f004,0x644a
  401881:	jne    0x401ddb
  401887:	push   0x43449b
  40188c:	xor    DWORD PTR ds:0x42f01c,0x1b49
  401896:	xor    ebx,ebx
  401898:	inc    ebx
  401899:	and    DWORD PTR ds:0x432000,0x430014
  4018a3:	push   ebx
  4018a4:	sub    DWORD PTR ds:0x430004,0x431008
  4018ae:	push   ebx
  4018af:	call   DWORD PTR ds:0x4348ef
  4018b5:	test   eax,eax
  4018b7:	mov    DWORD PTR ds:0x430018,0x4952
  4018c1:	jne    0x40257b
  4018c7:	sbb    DWORD PTR ds:0x430014,0x430018
  4018d1:	push   0x9
  4018d3:	sub    DWORD PTR ds:0x42f00c,0x6999
  4018dd:	push   0x4344b3
  4018e2:	call   DWORD PTR ds:0x4348e7
  4018e8:	or     DWORD PTR ds:0x43100c,0x43001c
  4018f2:	test   eax,eax
  4018f4:	mov    DWORD PTR ds:0x432014,0x2573
  4018fe:	jne    0x402557
  401904:	add    DWORD PTR ds:0x42e01c,0x43001c
  40190e:	push   0x4344cf
  401913:	adc    DWORD PTR ds:0x42f004,0x42f010
  40191d:	push   ebx
  40191e:	adc    DWORD PTR ds:0x42e010,0xbc4
  401928:	push   ebx
  401929:	call   DWORD PTR ds:0x434903
  40192f:	sbb    DWORD PTR ds:0x431004,0x430018
  401939:	test   eax,eax
  40193b:	jne    0x402557
  401941:	sbb    DWORD PTR ds:0x431008,0x42e018
  40194b:	push   0xd
  40194d:	push   0x4344df
  401952:	and    DWORD PTR ds:0x432004,0x5cbf
  40195c:	call   DWORD PTR ds:0x434907
  401962:	xor    DWORD PTR ds:0x431004,0x11cd
  40196c:	test   eax,eax
  40196e:	jne    0x40257b
  401974:	and    DWORD PTR ds:0x42e01c,0x1a36
  40197e:	lea    eax,[ebp-0x34]
  401981:	sbb    DWORD PTR ds:0x43001c,0x43101c
  40198b:	mov    DWORD PTR [ebp-0x9c],eax
  401991:	lea    eax,[ebp+0x4]
  401994:	mov    DWORD PTR [ebp-0x34],eax
  401997:	mov    DWORD PTR ds:0x42f00c,0x1c
  4019a1:	cmp    DWORD PTR ds:0x42f00c,0x0
  4019a8:	je     0x4019dc
  4019ae:	cmp    DWORD PTR ds:0x42f00c,0x23
  4019b5:	jl     0x4019dc
  4019bb:	jmp    0x4019c9
  4019c0:	push   DWORD PTR [ebp-0x20]
  4019c3:	call   DWORD PTR ds:0x43490f
  4019c9:	xor    eax,eax
  4019cb:	add    eax,DWORD PTR ds:0x42f00c
  4019d1:	dec    eax
  4019d2:	mov    ds:0x42f00c,eax
  4019d7:	jmp    0x4019a1
  4019dc:	mov    eax,DWORD PTR [ebp-0x34]
  4019df:	test   eax,eax
  4019e1:	je     0x4026ad
  4019e7:	xor    ecx,0x7030
  4019ed:	mov    eax,DWORD PTR [ebp-0x28]
  4019f0:	mov    ecx,DWORD PTR ds:0x43201c
  4019f6:	add    DWORD PTR ds:0x431014,ecx
  4019fc:	mov    eax,DWORD PTR [ebp-0xc]
  4019ff:	mov    eax,DWORD PTR [ebp-0x8]
  401a02:	add    ecx,0x1ea6
  401a08:	mov    DWORD PTR [ebp+0xc],eax
  401a0b:	inc    DWORD PTR ds:0x431014
  401a11:	mov    eax,eax
  401a13:	sbb    ecx,DWORD PTR ds:0x431010
  401a19:	mov    eax,ds:0x4342d7
  401a1e:	inc    ecx
  401a1f:	mov    eax,DWORD PTR [eax+0x1c8]
  401a25:	movzx  ecx,WORD PTR ds:0x432018
  401a2c:	adc    ecx,DWORD PTR ds:0x42e00c
  401a32:	mov    DWORD PTR ds:0x432018,ecx
  401a38:	mov    eax,DWORD PTR [eax]
  401a3a:	mov    DWORD PTR ds:0x42e028,0x4824
  401a44:	cdq    
  401a45:	mov    ebx,eax
  401a47:	and    DWORD PTR ds:0x42e000,0x7e6d
  401a51:	mov    eax,0xfabdbee5
  401a56:	and    DWORD PTR ds:0x42e000,0x0
  401a60:	jmp    0x401a74
  401a65:	xor    ecx,ecx
  401a67:	or     ecx,DWORD PTR ds:0x42e000
  401a6d:	inc    ecx
  401a6e:	mov    DWORD PTR ds:0x42e000,ecx
  401a74:	cmp    DWORD PTR ds:0x42e000,0x19
  401a7b:	jae    0x401ac2
  401a81:	cmp    DWORD PTR ds:0x42e000,0x4
  401a88:	jg     0x401ac2
  401a8e:	jmp    0x401aa3
  401a93:	push   0x43406f
  401a98:	push   0x400000
  401a9d:	call   DWORD PTR ds:0x434917
  401aa3:	cmp    DWORD PTR ds:0x42e000,0x3
  401aaa:	jne    0x401abd
  401ab0:	mov    ecx,DWORD PTR ds:0x42e000
  401ab6:	inc    ecx
  401ab7:	mov    DWORD PTR ds:0x42e000,ecx
  401abd:	jmp    0x401a65
  401ac2:	add    ebx,eax
  401ac4:	inc    ecx
  401ac5:	adc    edx,0xffffffff
  401ac8:	and    DWORD PTR ds:0x431018,0x0
  401ad2:	mov    ecx,DWORD PTR ds:0x431018
  401ad8:	inc    ecx
  401ad9:	mov    DWORD PTR ds:0x431018,ecx
  401adf:	cmp    DWORD PTR ds:0x431018,0xb
  401ae6:	jbe    0x401b26
  401aec:	jmp    0x401aff
  401af1:	push   DWORD PTR [ebp-0x10]
  401af4:	push   0x8792
  401af9:	call   DWORD PTR ds:0x43491b
  401aff:	cmp    DWORD PTR ds:0x431018,0xa
  401b06:	jne    0x401b19
  401b0c:	mov    ecx,DWORD PTR ds:0x431018
  401b12:	inc    ecx
  401b13:	mov    DWORD PTR ds:0x431018,ecx
  401b19:	cmp    DWORD PTR ds:0x431018,0x16
  401b20:	jb     0x401ad2
  401b26:	and    DWORD PTR [ebp-0x10],0x0
  401b2a:	and    DWORD PTR ds:0x42f01c,0x0
  401b34:	jmp    0x401b46
  401b39:	mov    ecx,DWORD PTR ds:0x42f01c
  401b3f:	inc    ecx
  401b40:	mov    DWORD PTR ds:0x42f01c,ecx
  401b46:	cmp    DWORD PTR ds:0x42f01c,0x13
  401b4d:	jae    0x401b8f
  401b53:	cmp    DWORD PTR ds:0x42f01c,0x5
  401b5a:	jl     0x401b8f
  401b60:	jmp    0x401b70
  401b65:	push   0x434057
  401b6a:	call   DWORD PTR ds:0x43491f
  401b70:	cmp    DWORD PTR ds:0x42f01c,0x4
  401b77:	jne    0x401b8a
  401b7d:	mov    ecx,DWORD PTR ds:0x42f01c
  401b83:	inc    ecx
  401b84:	mov    DWORD PTR ds:0x42f01c,ecx
  401b8a:	jmp    0x401b39
  401b8f:	xor    edx,0x0
  401b92:	or     ecx,DWORD PTR ds:0x430010
  401b98:	mov    DWORD PTR [ebp-0x6c],edx
  401b9b:	mov    edx,DWORD PTR [ebp+0xc]
  401b9e:	mov    DWORD PTR [ebp-0x14],edx
  401ba1:	mov    DWORD PTR ds:0x42f010,0x1d
  401bab:	cmp    DWORD PTR ds:0x42f010,0x0
  401bb2:	je     0x401c17
  401bb8:	cmp    DWORD PTR ds:0x42f010,0x7
  401bbf:	jl     0x401c17
  401bc5:	jmp    0x401beb
  401bca:	push   0x42e020
  401bcf:	push   DWORD PTR [ebp-0x18]
  401bd2:	push   0x8651
  401bd7:	push   0x3db4
  401bdc:	push   DWORD PTR [ebp-0x1c]
  401bdf:	push   DWORD PTR [ebp-0x20]
  401be2:	push   DWORD PTR [ebp-0x1c]
  401be5:	call   DWORD PTR ds:0x4348df
  401beb:	cmp    DWORD PTR ds:0x42f010,0x8
  401bf2:	jne    0x401c05
  401bf8:	mov    ecx,DWORD PTR ds:0x42f010
  401bfe:	dec    ecx
  401bff:	mov    DWORD PTR ds:0x42f010,ecx
  401c05:	mov    ecx,DWORD PTR ds:0x42f010
  401c0b:	dec    ecx
  401c0c:	mov    DWORD PTR ds:0x42f010,ecx
  401c12:	jmp    0x401bab
  401c17:	mov    ecx,0x8a29a12f
  401c1c:	xor    ebx,ecx
  401c1e:	add    DWORD PTR [ebp-0x14],eax
  401c21:	mov    DWORD PTR ds:0x42e018,0xcc4
  401c2b:	mov    edx,DWORD PTR [ebp-0x14]
  401c2e:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401c32:	sub    DWORD PTR ds:0x431010,0x4c88
  401c3c:	xor    edx,ecx
  401c3e:	adc    DWORD PTR ds:0x430004,0x42e018
  401c48:	mov    DWORD PTR [ebp-0x5c],edx
  401c4b:	or     edx,DWORD PTR ds:0x432008
  401c51:	mov    edx,DWORD PTR [ebp-0x10]
  401c54:	sbb    DWORD PTR ds:0x430008,0x42f00c
  401c5e:	xor    edx,0x0
  401c61:	mov    DWORD PTR ds:0x42f00c,0x39c
  401c6b:	mov    DWORD PTR [ebp-0x58],edx
  401c6e:	cmp    DWORD PTR [ebp-0x5c],ebx
  401c71:	jne    0x401c83
  401c77:	mov    edx,DWORD PTR [ebp-0x6c]
  401c7a:	cmp    DWORD PTR [ebp-0x58],edx
  401c7d:	je     0x401ce0
  401c83:	adc    DWORD PTR ds:0x431014,ebx
  401c89:	mov    edx,DWORD PTR ds:0x4342d7
  401c8f:	or     DWORD PTR ds:0x42e024,0x432008
  401c99:	mov    edx,DWORD PTR [edx+0x1c0]
  401c9f:	add    DWORD PTR ds:0x42e018,0x430004
  401ca9:	mov    edx,DWORD PTR [edx]
  401cab:	xor    ebx,ebx
  401cad:	add    edx,eax
  401caf:	adc    ebx,0xffffffff
  401cb2:	xor    edx,ecx
  401cb4:	xor    ebx,0x0
  401cb7:	cmp    edx,0x70941fc9
  401cbd:	mov    DWORD PTR ds:0x432014,0x6222
  401cc7:	jne    0x4026ad
  401ccd:	cmp    ebx,0xffffffff
  401cd0:	mov    DWORD PTR ds:0x430010,0x168c
  401cda:	jne    0x4026ad
  401ce0:	mov    edx,DWORD PTR ds:0x434353
  401ce6:	or     DWORD PTR ds:0x42f01c,0x338f
  401cf0:	mov    ebx,DWORD PTR ds:0x43435b
  401cf6:	sbb    DWORD PTR ds:0x42f01c,0x42e008
  401d00:	xor    edx,ebx
  401d02:	and    DWORD PTR ds:0x432000,0x0
  401d0c:	jmp    0x401d1e
  401d11:	mov    ebx,DWORD PTR ds:0x432000
  401d17:	inc    ebx
  401d18:	mov    DWORD PTR ds:0x432000,ebx
  401d1e:	cmp    DWORD PTR ds:0x432000,0x1a
  401d25:	jae    0x401d62
  401d2b:	cmp    DWORD PTR ds:0x432000,0x29
  401d32:	jle    0x401d62
  401d38:	jmp    0x401d5d
  401d3d:	push   DWORD PTR [ebp-0xc]
  401d40:	push   0x0
  401d42:	push   0x8e65
  401d47:	push   0x432008
  401d4c:	push   0x77f3
  401d51:	push   DWORD PTR [ebp-0x24]
  401d54:	push   DWORD PTR [ebp-0x20]
  401d57:	call   DWORD PTR ds:0x4348e3
  401d5d:	jmp    0x401d11
  401d62:	mov    DWORD PTR ds:0x434353,edx
  401d68:	and    DWORD PTR ds:0x430000,0x0
  401d72:	mov    ebx,DWORD PTR ds:0x430000
  401d78:	inc    ebx
  401d79:	mov    DWORD PTR ds:0x430000,ebx
  401d7f:	cmp    DWORD PTR ds:0x430000,0x21
  401d86:	jge    0x401db8
  401d8c:	jmp    0x401dab
  401d91:	push   0x349e
  401d96:	push   0x42e01c
  401d9b:	push   0x2daf
  401da0:	push   0x5f77
  401da5:	call   DWORD PTR ds:0x4348eb
  401dab:	cmp    DWORD PTR ds:0x430000,0x14
  401db2:	jb     0x401d72
  401db8:	mov    edx,DWORD PTR [ebp-0x34]
  401dbb:	mov    ebx,DWORD PTR ds:0x434353
  401dc1:	add    ebx,DWORD PTR [edx]
  401dc3:	mov    DWORD PTR ds:0x42f004,edx
  401dc9:	mov    edx,DWORD PTR [ebp-0x34]
  401dcc:	mov    DWORD PTR ds:0x432010,0x3a94
  401dd6:	jmp    0x40266c
  401ddb:	mov    DWORD PTR ds:0x43101c,0x62ff
  401de5:	mov    eax,DWORD PTR [ebp-0x44]
  401de8:	mov    DWORD PTR ds:0x432000,0x1e78
  401df2:	cmp    eax,0xf89c8580
  401df7:	je     0x40206b
  401dfd:	xor    eax,eax
  401dff:	xor    eax,DWORD PTR ds:0x41d062
  401e05:	mov    ecx,DWORD PTR ds:0x433004
  401e0b:	sub    ecx,eax
  401e0d:	and    eax,DWORD PTR [eax+ecx*1]
  401e10:	mov    eax,DWORD PTR [ebp-0x8]
  401e13:	mov    ecx,DWORD PTR [ebp-0x48]
  401e16:	xor    eax,esi
  401e18:	or     DWORD PTR ds:0x42f000,0x42e00c
  401e22:	add    eax,edi
  401e24:	mov    DWORD PTR ds:0x431010,0x752e
  401e2e:	cmp    eax,ecx
  401e30:	mov    DWORD PTR ds:0x42e028,0x5f39
  401e3a:	je     0x40206b
  401e40:	and    DWORD PTR ds:0x432018,0x431008
  401e4a:	push   0x4345fb
  401e4f:	xor    esi,esi
  401e51:	adc    DWORD PTR ds:0x431008,0x430008
  401e5b:	inc    esi
  401e5c:	push   esi
  401e5d:	push   esi
  401e5e:	call   DWORD PTR ds:0x4348ef
  401e64:	adc    DWORD PTR ds:0x432018,0x1eff
  401e6e:	test   eax,eax
  401e70:	jne    0x40257b
  401e76:	adc    DWORD PTR ds:0x42f004,0x6493
  401e80:	push   0x9
  401e82:	push   0x434613
  401e87:	sub    DWORD PTR ds:0x432010,0x1cce
  401e91:	call   DWORD PTR ds:0x4348e7
  401e97:	and    DWORD PTR ds:0x42e020,0x42e000
  401ea1:	test   eax,eax
  401ea3:	mov    DWORD PTR ds:0x43000c,0x3dc5
  401ead:	jne    0x402557
  401eb3:	push   0x43462f
  401eb8:	or     DWORD PTR ds:0x43201c,0x7d24
  401ec2:	push   esi
  401ec3:	push   esi
  401ec4:	add    DWORD PTR ds:0x43101c,0x2a6c
  401ece:	call   DWORD PTR ds:0x434903
  401ed4:	or     DWORD PTR ds:0x431008,0x42e01c
  401ede:	test   eax,eax
  401ee0:	mov    DWORD PTR ds:0x430014,0x29eb
  401eea:	jne    0x402557
  401ef0:	add    DWORD PTR ds:0x432014,0x430014
  401efa:	push   0xd
  401efc:	push   0x43463f
  401f01:	neg    DWORD PTR ds:0x43000c
  401f07:	call   DWORD PTR ds:0x434907
  401f0d:	adc    DWORD PTR ds:0x43100c,0x4142
  401f17:	test   eax,eax
  401f19:	mov    DWORD PTR ds:0x43001c,0x44ef
  401f23:	jne    0x40257b
  401f29:	and    DWORD PTR ds:0x42e000,0x0
  401f33:	jmp    0x401f43
  401f38:	mov    eax,ds:0x42e000
  401f3d:	inc    eax
  401f3e:	mov    ds:0x42e000,eax
  401f43:	cmp    DWORD PTR ds:0x42e000,0x1e
  401f4a:	jae    0x401f92
  401f50:	cmp    DWORD PTR ds:0x42e000,0x12
  401f57:	jle    0x401f92
  401f5d:	jmp    0x401f75
  401f62:	push   DWORD PTR [ebp-0x10]
  401f65:	push   0x432004
  401f6a:	push   0x434000
  401f6f:	call   DWORD PTR ds:0x4348f3
  401f75:	cmp    DWORD PTR ds:0x42e000,0x11
  401f7c:	jne    0x401f8d
  401f82:	mov    eax,ds:0x42e000
  401f87:	inc    eax
  401f88:	mov    ds:0x42e000,eax
  401f8d:	jmp    0x401f38
  401f92:	mov    eax,ds:0x4342d7
  401f97:	and    DWORD PTR ds:0x432004,ecx
  401f9d:	mov    eax,DWORD PTR [eax+0x194]
  401fa3:	xor    DWORD PTR ds:0x432010,0x2285
  401fad:	mov    ecx,DWORD PTR [eax]
  401faf:	mov    eax,DWORD PTR [ecx+0x3c]
  401fb2:	push   DWORD PTR ds:0x4343af
  401fb8:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401fbc:	push   DWORD PTR ds:0x43415b
  401fc2:	sub    DWORD PTR ds:0x432018,0x4072
  401fcc:	add    eax,ecx
  401fce:	and    DWORD PTR ds:0x42f008,0x0
  401fd8:	jmp    0x401fea
  401fdd:	mov    ecx,DWORD PTR ds:0x42f008
  401fe3:	inc    ecx
  401fe4:	mov    DWORD PTR ds:0x42f008,ecx
  401fea:	cmp    DWORD PTR ds:0x42f008,0x1e
  401ff1:	jae    0x402048
  401ff7:	cmp    DWORD PTR ds:0x42f008,0x4
  401ffe:	jge    0x402048
  402004:	jmp    0x402029
  402009:	push   0x1e10
  40200e:	push   0x4340a5
  402013:	push   0x6e6c
  402018:	push   0x4340d1
  40201d:	push   DWORD PTR [ebp-0x18]
  402020:	push   DWORD PTR [ebp-0x28]
  402023:	call   DWORD PTR ds:0x4348f7
  402029:	cmp    DWORD PTR ds:0x42f008,0x3
  402030:	jne    0x402043
  402036:	mov    ecx,DWORD PTR ds:0x42f008
  40203c:	inc    ecx
  40203d:	mov    DWORD PTR ds:0x42f008,ecx
  402043:	jmp    0x401fdd
  402048:	mov    ecx,DWORD PTR ds:0x4342d7
  40204e:	mov    ecx,DWORD PTR [ecx+0x194]
  402054:	push   DWORD PTR [ecx]
  402056:	call   eax
  402058:	mov    ecx,DWORD PTR ds:0x4342d7
  40205e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402064:	mov    DWORD PTR [ecx],eax
  402066:	jmp    0x4026ad
  40206b:	push   0x4344f3
  402070:	xor    ebx,ebx
  402072:	inc    ebx
  402073:	push   ebx
  402074:	push   ebx
  402075:	call   DWORD PTR ds:0x4348ef
  40207b:	test   eax,eax
  40207d:	jne    0x40257b
  402083:	push   0x9
  402085:	push   0x43450b
  40208a:	call   DWORD PTR ds:0x4348e7
  402090:	test   eax,eax
  402092:	jne    0x402557
  402098:	push   0x434527
  40209d:	push   ebx
  40209e:	push   ebx
  40209f:	call   DWORD PTR ds:0x434903
  4020a5:	test   eax,eax
  4020a7:	jne    0x402557
  4020ad:	push   0xd
  4020af:	push   0x434537
  4020b4:	call   DWORD PTR ds:0x434907
  4020ba:	test   eax,eax
  4020bc:	jne    0x40257b
  4020c2:	push   0x43454b
  4020c7:	push   ebx
  4020c8:	push   ebx
  4020c9:	call   DWORD PTR ds:0x4348ef
  4020cf:	test   eax,eax
  4020d1:	jne    0x40257b
  4020d7:	push   0x9
  4020d9:	push   0x434563
  4020de:	call   DWORD PTR ds:0x4348e7
  4020e4:	test   eax,eax
  4020e6:	jne    0x402557
  4020ec:	push   0x43457f
  4020f1:	push   ebx
  4020f2:	push   ebx
  4020f3:	call   DWORD PTR ds:0x434903
  4020f9:	test   eax,eax
  4020fb:	jne    0x402557
  402101:	push   0xd
  402103:	push   0x43458f
  402108:	call   DWORD PTR ds:0x434907
  40210e:	test   eax,eax
  402110:	jne    0x40257b
  402116:	mov    eax,DWORD PTR [ebp-0x8]
  402119:	mov    ecx,DWORD PTR [ebp-0x7c]
  40211c:	xor    eax,esi
  40211e:	add    eax,edi
  402120:	cmp    eax,ecx
  402122:	jne    0x4024fe
  402128:	mov    eax,DWORD PTR [ebp-0x8]
  40212b:	mov    ecx,DWORD PTR ds:0x4342d7
  402131:	mov    ecx,DWORD PTR [ecx+0x198]
  402137:	xor    eax,esi
  402139:	add    eax,edi
  40213b:	cmp    eax,DWORD PTR [ecx]
  40213d:	jne    0x402160
  402143:	mov    eax,DWORD PTR [ebp-0x8]
  402146:	push   0xf89c8581
  40214b:	xor    eax,esi
  40214d:	add    eax,edi
  40214f:	push   eax
  402150:	push   0xf89c85bd
  402155:	push   DWORD PTR [ebp-0xc]
  402158:	push   DWORD PTR [ebp-0x8]
  40215b:	call   0x40e5e8
  402160:	mov    eax,DWORD PTR [ebp-0xc]
  402163:	mov    DWORD PTR [ebp-0x4c],eax
  402166:	mov    eax,DWORD PTR [ebp-0x8]
  402169:	mov    DWORD PTR [ebp-0x60],eax
  40216c:	mov    eax,DWORD PTR [ebp-0x60]
  40216f:	xor    eax,esi
  402171:	add    eax,edi
  402173:	mov    DWORD PTR [ebp+0x10],eax
  402176:	mov    eax,ds:0x434157
  40217b:	mov    eax,DWORD PTR [eax]
  40217d:	mov    DWORD PTR [ebp+0x10],eax
  402180:	mov    eax,ds:0x43435f
  402185:	mov    eax,DWORD PTR [eax]
  402187:	mov    DWORD PTR [ebp-0x18],eax
  40218a:	mov    DWORD PTR [ebp+0xc],0xf89c8781
  402191:	mov    eax,DWORD PTR [ebp+0xc]
  402194:	xor    eax,esi
  402196:	add    eax,edi
  402198:	mov    DWORD PTR [ebp+0xc],eax
  40219b:	mov    eax,ds:0x4342d7
  4021a0:	mov    DWORD PTR [ebp+0xc],eax
  4021a3:	mov    eax,DWORD PTR [ebp+0x10]
  4021a6:	mov    DWORD PTR [ebp+0xc],eax
  4021a9:	mov    eax,DWORD PTR [ebp+0xc]
  4021ac:	push   0x4
  4021ae:	pop    ecx
  4021af:	sub    ecx,eax
  4021b1:	add    ecx,DWORD PTR [ebp-0x18]
  4021b4:	mov    DWORD PTR [ebp-0x38],0xf89c85c1
  4021bb:	mov    DWORD PTR [ebp+0x10],ecx
  4021be:	mov    DWORD PTR [ebp-0x108],0xf89c85bd
  4021c8:	mov    eax,DWORD PTR [ebp+0xc]
  4021cb:	mov    DWORD PTR [ebp-0x104],eax
  4021d1:	mov    eax,DWORD PTR [ebp+0x10]
  4021d4:	mov    DWORD PTR [ebp-0x100],eax
  4021da:	mov    eax,DWORD PTR [ebp-0x38]
  4021dd:	xor    eax,esi
  4021df:	add    eax,edi
  4021e1:	mov    DWORD PTR [ebp-0xfc],eax
  4021e7:	lea    eax,[ebp-0x98]
  4021ed:	mov    DWORD PTR [ebp-0xf8],eax
  4021f3:	mov    eax,DWORD PTR [ebp-0x108]
  4021f9:	xor    eax,esi
  4021fb:	add    eax,edi
  4021fd:	mov    DWORD PTR [ebp-0x108],eax
  402203:	lea    eax,[ebp-0x108]
  402209:	push   eax
  40220a:	mov    eax,DWORD PTR [ebp-0x4c]
  40220d:	xor    eax,esi
  40220f:	add    eax,edi
  402211:	push   eax
  402212:	mov    eax,ds:0x4342f7
  402217:	push   0x43424d
  40221c:	push   DWORD PTR [eax]
  40221e:	call   0x409457
  402223:	mov    eax,DWORD PTR [ebp+0xc]
  402226:	mov    ecx,DWORD PTR [ebp+0x10]
  402229:	mov    DWORD PTR [ebp-0x84],ecx
  40222f:	mov    ecx,DWORD PTR [ebp-0x60]
  402232:	xor    ecx,esi
  402234:	mov    DWORD PTR [ebp-0x18],eax
  402237:	add    ecx,edi
  402239:	jmp    0x40249c
  40223e:	lea    edx,[ecx+eax*1]
  402241:	mov    DWORD PTR [ebp+0x10],edx
  402244:	mov    edx,DWORD PTR [ebp-0x84]
  40224a:	sub    edx,ecx
  40224c:	mov    DWORD PTR [ebp+0xc],edx
  40224f:	mov    edx,DWORD PTR [ebp+0xc]
  402252:	mov    DWORD PTR [ebp-0x54],edx
  402255:	mov    edx,DWORD PTR [ebp+0x10]
  402258:	mov    DWORD PTR [ebp-0x50],0xf89c8581
  40225f:	mov    DWORD PTR [ebp-0x6c],edx
  402262:	mov    DWORD PTR [ebp-0x24],0xf89c8580
  402269:	mov    edx,DWORD PTR [ebp-0x50]
  40226c:	xor    edx,esi
  40226e:	add    edx,edi
  402270:	mov    DWORD PTR [ebp+0x10],edx
  402273:	mov    edx,DWORD PTR [ebp-0x50]
  402276:	xor    edx,esi
  402278:	add    edx,edi
  40227a:	mov    DWORD PTR [ebp+0xc],edx
  40227d:	mov    DWORD PTR [ebp-0x68],0xf89c85a1
  402284:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40228b:	mov    edx,DWORD PTR [ebp-0x50]
  40228e:	mov    ebx,DWORD PTR [ebp-0x54]
  402291:	xor    edx,esi
  402293:	add    edx,edi
  402295:	cmp    ebx,edx
  402297:	je     0x402490
  40229d:	mov    eax,DWORD PTR [ebp-0x24]
  4022a0:	xor    eax,esi
  4022a2:	mov    edx,0xffcd8d1c
  4022a7:	sub    edx,eax
  4022a9:	add    edx,DWORD PTR [ebp-0x54]
  4022ac:	mov    eax,DWORD PTR [ebp-0x24]
  4022af:	mov    ebx,DWORD PTR [ebp+0x10]
  4022b2:	xor    eax,esi
  4022b4:	add    eax,edi
  4022b6:	imul   eax,ebx
  4022b9:	cmp    eax,edx
  4022bb:	ja     0x40248d
  4022c1:	mov    edx,DWORD PTR [ebp+0x10]
  4022c4:	mov    eax,DWORD PTR [ebp-0x54]
  4022c7:	mov    ebx,DWORD PTR [ebp-0x68]
  4022ca:	sub    eax,edx
  4022cc:	xor    ebx,esi
  4022ce:	xor    edx,edx
  4022d0:	add    ebx,edi
  4022d2:	div    ebx
  4022d4:	mov    DWORD PTR [ebp+0xc],eax
  4022d7:	mov    eax,DWORD PTR [ebp-0x74]
  4022da:	mov    edx,DWORD PTR [ebp+0xc]
  4022dd:	xor    eax,esi
  4022df:	add    eax,edi
  4022e1:	cmp    edx,eax
  4022e3:	jbe    0x4022f3
  4022e9:	mov    eax,DWORD PTR [ebp-0x74]
  4022ec:	xor    eax,esi
  4022ee:	add    eax,edi
  4022f0:	mov    DWORD PTR [ebp+0xc],eax
  4022f3:	mov    eax,DWORD PTR [ebp-0x68]
  4022f6:	mov    edx,DWORD PTR [ebp+0xc]
  4022f9:	xor    eax,esi
  4022fb:	add    eax,edi
  4022fd:	imul   eax,edx
  402300:	mov    DWORD PTR [ebp+0xc],eax
  402303:	mov    eax,DWORD PTR [ebp-0x50]
  402306:	mov    edx,DWORD PTR [ebp+0xc]
  402309:	xor    eax,esi
  40230b:	add    eax,edi
  40230d:	cmp    edx,eax
  40230f:	je     0x402476
  402315:	mov    eax,DWORD PTR [ebp+0xc]
  402318:	mov    DWORD PTR [ebp-0x3c],eax
  40231b:	mov    eax,DWORD PTR [ebp+0x10]
  40231e:	add    eax,DWORD PTR [ebp-0x6c]
  402321:	mov    DWORD PTR [ebp-0x38],0xf89c8581
  402328:	mov    DWORD PTR [ebp-0x30],eax
  40232b:	mov    eax,0xf89c8580
  402330:	mov    DWORD PTR [ebp-0x64],eax
  402333:	mov    DWORD PTR [ebp-0x58],0xf89c8583
  40233a:	mov    DWORD PTR [ebp-0x10],0xf89c8582
  402341:	mov    DWORD PTR [ebp-0x2c],eax
  402344:	mov    eax,DWORD PTR [ebp-0x38]
  402347:	xor    eax,esi
  402349:	add    eax,edi
  40234b:	jmp    0x402432
  402350:	mov    DWORD PTR [ebp-0x78],0xf89c85bb
  402357:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  40235e:	mov    eax,DWORD PTR [ebp-0x2c]
  402361:	mov    edx,DWORD PTR [ebp+0xc]
  402364:	xor    eax,esi
  402366:	add    eax,edi
  402368:	imul   eax,edx
  40236b:	mov    edx,DWORD PTR [ebp-0x30]
  40236e:	mov    al,BYTE PTR [eax+edx*1]
  402371:	mov    BYTE PTR [ebp-0x1],al
  402374:	mov    eax,DWORD PTR [ebp-0x2c]
  402377:	mov    edx,DWORD PTR [ebp+0xc]
  40237a:	xor    eax,esi
  40237c:	add    eax,edi
  40237e:	imul   eax,edx
  402381:	mov    edx,DWORD PTR [ebp-0x58]
  402384:	xor    edx,esi
  402386:	add    eax,edx
  402388:	mov    edx,DWORD PTR [ebp-0x30]
  40238b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e4]
  402393:	mov    edx,DWORD PTR [ebp-0x78]
  402396:	xor    edx,esi
  402398:	lea    eax,[edx+eax*1+0x3272e4]
  40239f:	movzx  edx,BYTE PTR [ebp-0x1]
  4023a3:	xor    edx,eax
  4023a5:	mov    BYTE PTR [ebp-0x1],dl
  4023a8:	mov    al,BYTE PTR [ebp-0x1]
  4023ab:	mov    edx,DWORD PTR [ebp-0x2c]
  4023ae:	mov    ebx,DWORD PTR [ebp+0xc]
  4023b1:	xor    edx,esi
  4023b3:	add    edx,edi
  4023b5:	imul   edx,ebx
  4023b8:	mov    ebx,DWORD PTR [ebp-0x30]
  4023bb:	mov    BYTE PTR [edx+ebx*1],al
  4023be:	mov    eax,DWORD PTR [ebp-0x2c]
  4023c1:	mov    edx,DWORD PTR [ebp+0xc]
  4023c4:	xor    eax,esi
  4023c6:	add    eax,edi
  4023c8:	imul   eax,edx
  4023cb:	mov    edx,DWORD PTR [ebp-0x30]
  4023ce:	mov    al,BYTE PTR [eax+edx*1]
  4023d1:	mov    BYTE PTR [ebp-0x1],al
  4023d4:	mov    eax,DWORD PTR [ebp-0x2c]
  4023d7:	mov    edx,DWORD PTR [ebp+0xc]
  4023da:	xor    eax,esi
  4023dc:	add    eax,edi
  4023de:	imul   eax,edx
  4023e1:	mov    edx,DWORD PTR [ebp-0x64]
  4023e4:	xor    edx,esi
  4023e6:	add    eax,edx
  4023e8:	mov    edx,DWORD PTR [ebp-0x30]
  4023eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e4]
  4023f3:	mov    edx,DWORD PTR [ebp-0x80]
  4023f6:	xor    edx,esi
  4023f8:	lea    eax,[edx+eax*1+0x3272e4]
  4023ff:	movzx  edx,BYTE PTR [ebp-0x1]
  402403:	xor    edx,eax
  402405:	mov    BYTE PTR [ebp-0x1],dl
  402408:	mov    al,BYTE PTR [ebp-0x1]
  40240b:	mov    edx,DWORD PTR [ebp-0x2c]
  40240e:	mov    ebx,DWORD PTR [ebp+0xc]
  402411:	xor    edx,esi
  402413:	add    edx,edi
  402415:	imul   edx,ebx
  402418:	mov    ebx,DWORD PTR [ebp-0x30]
  40241b:	mov    BYTE PTR [edx+ebx*1],al
  40241e:	mov    eax,DWORD PTR [ebp-0x10]
  402421:	mov    edx,DWORD PTR [ebp-0x64]
  402424:	xor    eax,esi
  402426:	xor    edx,esi
  402428:	add    eax,edi
  40242a:	add    edx,edi
  40242c:	imul   eax,edx
  40242f:	add    eax,DWORD PTR [ebp+0xc]
  402432:	mov    DWORD PTR [ebp+0xc],eax
  402435:	mov    eax,DWORD PTR [ebp+0xc]
  402438:	mov    edx,DWORD PTR [ebp-0x3c]
  40243b:	cmp    edx,eax
  40243d:	jb     0x402350
  402443:	mov    eax,DWORD PTR [ebp-0x64]
  402446:	mov    edx,DWORD PTR [ebp-0x3c]
  402449:	xor    eax,esi
  40244b:	add    eax,edi
  40244d:	imul   eax,edx
  402450:	mov    edx,DWORD PTR [ebp-0x38]
  402453:	xor    edx,esi
  402455:	add    edx,edi
  402457:	or     eax,edx
  402459:	mov    edx,DWORD PTR [ebp-0x24]
  40245c:	xor    edx,esi
  40245e:	add    eax,edx
  402460:	mov    edx,DWORD PTR [ebp-0x24]
  402463:	xor    edx,esi
  402465:	add    eax,edx
  402467:	mov    edx,DWORD PTR [ebp+0x10]
  40246a:	lea    eax,[eax+edx*1+0x64e5c8]
  402471:	jmp    0x402485
  402476:	mov    eax,DWORD PTR [ebp-0x24]
  402479:	mov    edx,DWORD PTR [ebp+0x10]
  40247c:	xor    eax,esi
  40247e:	lea    eax,[eax+edx*1+0x3272e4]
  402485:	mov    DWORD PTR [ebp+0x10],eax
  402488:	jmp    0x40229d
  40248d:	mov    eax,DWORD PTR [ebp-0x18]
  402490:	mov    edx,DWORD PTR [ebp-0x4c]
  402493:	xor    edx,esi
  402495:	lea    ecx,[ecx+edx*1+0x3272e4]
  40249c:	lea    edx,[ecx-0x3272e4]
  4024a2:	xor    edx,esi
  4024a4:	cmp    edx,0xf89c9581
  4024aa:	jne    0x40223e
  4024b0:	mov    ecx,DWORD PTR [ebp-0x60]
  4024b3:	mov    edx,DWORD PTR [ebp-0x4c]
  4024b6:	mov    ebx,DWORD PTR [ebp-0x60]
  4024b9:	xor    edx,esi
  4024bb:	mov    dl,BYTE PTR [edx+eax*1+0x3272e4]
  4024c2:	xor    ecx,esi
  4024c4:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e4]
  4024cb:	xor    ebx,esi
  4024cd:	mov    BYTE PTR [ebx+eax*1+0x3272e4],dl
  4024d4:	mov    edx,DWORD PTR [ebp-0x4c]
  4024d7:	xor    edx,esi
  4024d9:	mov    BYTE PTR [edx+eax*1+0x3272e4],cl
  4024e0:	mov    eax,DWORD PTR [ebp-0x4c]
  4024e3:	mov    eax,DWORD PTR [ebp-0x8]
  4024e6:	xor    eax,esi
  4024e8:	add    eax,edi
  4024ea:	mov    ds:0x43435b,eax
  4024ef:	mov    eax,DWORD PTR [ebp-0x8]
  4024f2:	xor    eax,esi
  4024f4:	add    eax,edi
  4024f6:	xor    ebx,ebx
  4024f8:	mov    ds:0x434353,eax
  4024fd:	inc    ebx
  4024fe:	lea    eax,[ebp-0x40]
  402501:	mov    DWORD PTR [ebp-0x88],eax
  402507:	lea    eax,[ebp+0x4]
  40250a:	mov    DWORD PTR [ebp-0x40],eax
  40250d:	mov    eax,DWORD PTR [ebp-0x40]
  402510:	test   eax,eax
  402512:	je     0x4026ad
  402518:	push   0x4345a3
  40251d:	push   ebx
  40251e:	push   ebx
  40251f:	call   DWORD PTR ds:0x4348ef
  402525:	test   eax,eax
  402527:	jne    0x40257b
  40252d:	push   0x9
  40252f:	push   0x4345bb
  402534:	call   DWORD PTR ds:0x4348e7
  40253a:	test   eax,eax
  40253c:	jne    0x402557
  402542:	push   0x4345d7
  402547:	push   ebx
  402548:	push   ebx
  402549:	call   DWORD PTR ds:0x434903
  40254f:	test   eax,eax
  402551:	je     0x402566
  402557:	lea    eax,[ebp-0x20]
  40255a:	push   eax
  40255b:	call   DWORD PTR ds:0x4348a7
  402561:	jmp    0x4026c8
  402566:	push   0xd
  402568:	push   0x4345e7
  40256d:	call   DWORD PTR ds:0x434907
  402573:	test   eax,eax
  402575:	je     0x402582
  40257b:	xor    eax,eax
  40257d:	jmp    0x4026c8
  402582:	mov    DWORD PTR [ebp-0x94],0xf152c38
  40258c:	mov    DWORD PTR [ebp-0xa0],0x712ed0f
  402596:	mov    DWORD PTR [ebp-0x8c],0x373fc29
  4025a0:	mov    DWORD PTR [ebp-0x90],0x72670a19
  4025aa:	call   0x40e282
  4025af:	mov    eax,DWORD PTR [ebp-0x28]
  4025b2:	mov    eax,DWORD PTR [ebp-0xc]
  4025b5:	mov    eax,DWORD PTR [ebp-0x8]
  4025b8:	mov    DWORD PTR [ebp+0xc],eax
  4025bb:	mov    eax,eax
  4025bd:	mov    eax,ds:0x4342d7
  4025c2:	mov    eax,DWORD PTR [eax+0x1c8]
  4025c8:	mov    eax,DWORD PTR [eax]
  4025ca:	cdq    
  4025cb:	mov    ebx,eax
  4025cd:	mov    eax,0xfabdbee5
  4025d2:	add    ebx,eax
  4025d4:	adc    edx,0xffffffff
  4025d7:	and    DWORD PTR [ebp-0x10],0x0
  4025db:	xor    edx,0x0
  4025de:	mov    DWORD PTR [ebp-0x6c],edx
  4025e1:	mov    edx,DWORD PTR [ebp+0xc]
  4025e4:	mov    DWORD PTR [ebp-0x14],edx
  4025e7:	mov    ecx,0x8a29a12f
  4025ec:	xor    ebx,ecx
  4025ee:	add    DWORD PTR [ebp-0x14],eax
  4025f1:	mov    edx,DWORD PTR [ebp-0x14]
  4025f4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025f8:	xor    edx,ecx
  4025fa:	mov    DWORD PTR [ebp-0x5c],edx
  4025fd:	mov    edx,DWORD PTR [ebp-0x10]
  402600:	xor    edx,0x0
  402603:	mov    DWORD PTR [ebp-0x58],edx
  402606:	cmp    DWORD PTR [ebp-0x5c],ebx
  402609:	jne    0x40261b
  40260f:	mov    edx,DWORD PTR [ebp-0x6c]
  402612:	cmp    DWORD PTR [ebp-0x58],edx
  402615:	je     0x40264a
  40261b:	mov    edx,DWORD PTR ds:0x4342d7
  402621:	mov    edx,DWORD PTR [edx+0x1c0]
  402627:	mov    edx,DWORD PTR [edx]
  402629:	xor    ebx,ebx
  40262b:	add    edx,eax
  40262d:	adc    ebx,0xffffffff
  402630:	xor    edx,ecx
  402632:	xor    ebx,0x0
  402635:	cmp    edx,0x70941fc9
  40263b:	jne    0x4026ad
  402641:	cmp    ebx,0xffffffff
  402644:	jne    0x4026ad
  40264a:	mov    edx,DWORD PTR ds:0x434353
  402650:	mov    ebx,DWORD PTR ds:0x43435b
  402656:	xor    edx,ebx
  402658:	mov    DWORD PTR ds:0x434353,edx
  40265e:	mov    edx,DWORD PTR [ebp-0x40]
  402661:	mov    ebx,DWORD PTR ds:0x434353
  402667:	add    ebx,DWORD PTR [edx]
  402669:	mov    edx,DWORD PTR [ebp-0x40]
  40266c:	mov    DWORD PTR [edx],ebx
  40266e:	mov    edx,DWORD PTR [ebp+0xc]
  402671:	xor    esi,edx
  402673:	mov    edx,DWORD PTR ds:0x434353
  402679:	add    esi,edi
  40267b:	xor    ebx,ebx
  40267d:	add    esi,eax
  40267f:	adc    ebx,0xffffffff
  402682:	xor    edi,edi
  402684:	xor    esi,ecx
  402686:	xor    ebx,0x0
  402689:	add    edx,eax
  40268b:	adc    edi,0xffffffff
  40268e:	xor    edx,ecx
  402690:	xor    edi,0x0
  402693:	cmp    edx,esi
  402695:	jne    0x4026ad
  40269b:	cmp    edi,ebx
  40269d:	jne    0x4026ad
  4026a3:	mov    eax,ds:0x434353
  4026a8:	mov    ds:0x43435b,eax
  4026ad:	mov    eax,ds:0x4342d7
  4026b2:	push   0x4
  4026b4:	add    eax,0x1cc
  4026b9:	push   eax
  4026ba:	lea    eax,[ebp-0x28]
  4026bd:	push   eax
  4026be:	call   0x4026dd
  4026c3:	mov    eax,DWORD PTR [ebp-0x28]
  4026c6:	mov    eax,DWORD PTR [eax]
  4026c8:	pop    ebx
  4026c9:	pop    edi
  4026ca:	pop    esi
  4026cb:	leave  
  4026cc:	ret    0xc
  4026cf:	xor    eax,eax
  4026d1:	or     DWORD PTR ds:0x42e008,0x42e014
  4026db:	inc    eax
  4026dc:	ret    
  4026dd:	push   ebp
  4026de:	mov    ebp,esp
  4026e0:	sub    esp,0x10
  4026e3:	and    DWORD PTR ds:0x42e00c,0x0
  4026ed:	mov    ecx,DWORD PTR ds:0x42e00c
  4026f3:	inc    ecx
  4026f4:	mov    DWORD PTR ds:0x42e00c,ecx
  4026fa:	cmp    DWORD PTR ds:0x42e00c,0x1c
  402701:	jle    0x402724
  402707:	jmp    0x402717
  40270c:	push   0x2587
  402711:	call   DWORD PTR ds:0x4348fb
  402717:	cmp    DWORD PTR ds:0x42e00c,0x12
  40271e:	jb     0x4026ed
  402724:	mov    eax,0xf89c8581
  402729:	mov    DWORD PTR [ebp-0x4],eax
  40272c:	mov    DWORD PTR [ebp-0x8],0xf89c8580
  402733:	mov    ecx,DWORD PTR [ebp-0x4]
  402736:	or     DWORD PTR ds:0x432018,edi
  40273c:	push   esi
  40273d:	or     esi,DWORD PTR ds:0x432010
  402743:	mov    edx,0x751089d
  402748:	not    DWORD PTR ds:0x42f008
  40274e:	xor    ecx,edx
  402750:	mov    esi,0x3272e4
  402755:	push   edi
  402756:	add    DWORD PTR ds:0x42f014,0x430018
  402760:	mov    edi,DWORD PTR [ebp+0x10]
  402763:	adc    DWORD PTR ds:0x43201c,0x42f01c
  40276d:	add    ecx,esi
  40276f:	cmp    ecx,edi
  402771:	je     0x40700e
  402777:	mov    DWORD PTR ds:0x430010,0x10
  402781:	cmp    DWORD PTR ds:0x430010,0x0
  402788:	je     0x4027da
  40278e:	cmp    DWORD PTR ds:0x430010,0x6
  402795:	jge    0x4027da
  40279b:	jmp    0x4027ae
  4027a0:	push   0x66cf
  4027a5:	push   DWORD PTR [ebp-0xc]
  4027a8:	call   DWORD PTR ds:0x4348d7
  4027ae:	cmp    DWORD PTR ds:0x430010,0x7
  4027b5:	jne    0x4027c8
  4027bb:	mov    ecx,DWORD PTR ds:0x430010
  4027c1:	dec    ecx
  4027c2:	mov    DWORD PTR ds:0x430010,ecx
  4027c8:	mov    ecx,DWORD PTR ds:0x430010
  4027ce:	dec    ecx
  4027cf:	mov    DWORD PTR ds:0x430010,ecx
  4027d5:	jmp    0x402781
  4027da:	mov    ecx,DWORD PTR [ebp-0x4]
  4027dd:	mov    edi,DWORD PTR [ebp+0x10]
  4027e0:	xor    eax,eax
  4027e2:	or     DWORD PTR ds:0x431004,0x8da
  4027ec:	xor    ecx,edx
  4027ee:	sub    DWORD PTR ds:0x431000,0x3add
  4027f8:	add    ecx,esi
  4027fa:	add    edi,0xfabdbee5
  402800:	jmp    0x404b88
  402805:	lahf   
  402806:	es xor al,0x90
  402809:	mov    bl,0x70
  40280b:	fwait
  40280c:	icebp  
  40280d:	sub    ecx,DWORD PTR [esi]
  40280f:	adc    ebp,DWORD PTR [esi+0xf]
  402812:	xchg   ecx,eax
  402813:	cmp    al,0xaf
  402815:	jb     0x402889
  402817:	jb     0x40288b
  402819:	pop    es
  40281a:	pop    edi
  40281b:	jb     0x40288f
  40281d:	adc    eax,0x1139172c
  402822:	and    eax,0x36652f13
  402827:	popa   
  402828:	cwd    
  40282a:	js     0x40288e
  40282c:	bound  ebp,QWORD PTR [ebp+0x4a]
  40282f:	(bad)
  402832:	push   0x53796340
  402837:	test   al,0x78
  402839:	ins    DWORD PTR es:[edi],dx
  40283a:	push   ecx
  40283b:	iret   
  40283c:	pop    ebp
  40283d:	inc    edx
  40283e:	cmp    BYTE PTR [edx+esi*8+0x4d577687],cl
  402845:	jg     0x40287e
  402847:	mov    BYTE PTR [esi+0x33bab87f],ah
  40284d:	sub    al,0xff
  40284f:	data16 fdivr st(2),st
  402852:	imul   edi,DWORD PTR [edi+0x1e],0xffffffed
  402856:	xor    ebp,ecx
  402858:	mov    dl,0xed
  40285a:	xchg   DWORD PTR [ebx],ebp
  40285c:	fiadd  WORD PTR [ebx-0x5caef0df]
  402862:	add    ah,0xf7
  402865:	ins    DWORD PTR es:[edi],dx
  402866:	fld    QWORD PTR [esp+edx*8]
  402869:	push   cs
  40286a:	repnz adc BYTE PTR es:[eax+0xc],al
  40286f:	arpl   WORD PTR es:[eax-0x4f],sp
  402873:	scas   eax,DWORD PTR es:[edi]
  402874:	sub    ebx,DWORD PTR [ecx+0x5]
  402877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402878:	jmp    ecx
  40287a:	inc    ecx
  40287b:	and    esi,DWORD PTR [edx+ecx*2-0x40]
  40287f:	push   ebx
  402880:	icebp  
  402881:	adc    dh,dl
  402883:	jo     0x40283e
  402885:	jnp    0x402864
  402887:	nop
  402888:	pop    edi
  402889:	cmp    DWORD PTR [ecx+0x499a1407],0xb
  402890:	sahf   
  402891:	cmp    al,0x8a
  402893:	mov    eax,DWORD PTR [ebx]
  402895:	shr    BYTE PTR ds:0x4b348d6a,cl
  40289b:	push   esp
  40289c:	sti    
  40289d:	iret   
  40289e:	and    BYTE PTR [ecx],0x81
  4028a1:	enter  0xccb7,0x80
  4028a5:	imul   esp,esp,0xc4c6a45
  4028ab:	or     esi,DWORD PTR ds:[esi]
  4028ae:	sbb    ebp,DWORD PTR [ebp+0x48a7c243]
  4028b4:	fadd   DWORD PTR [esi+edx*2]
  4028b7:	std    
  4028b8:	push   0x56
  4028ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028bb:	icebp  
  4028bc:	pusha  
  4028bd:	mov    edi,0x5b1e5af0
  4028c2:	jmp    0xd15b:0xc675dead
  4028c9:	ss (bad) 
  4028cb:	cwde   
  4028cc:	cmp    DWORD PTR [eax],esp
  4028ce:	xchg   ebx,eax
  4028cf:	mov    ebp,0xed27fcf9
  4028d4:	std    
  4028d5:	es add BYTE PTR fs:[ecx+0x5f],bl
  4028da:	jge    0x4028d1
  4028dc:	hlt    
  4028dd:	ja     0x402884
  4028df:	int3   
  4028e0:	mov    al,ds:0x6cc12fce
  4028e5:	sub    eax,0x637d52dc
  4028ea:	sbb    BYTE PTR [edx-0x45f95c2d],0x37
  4028f1:	add    al,0x1
  4028f3:	stos   DWORD PTR es:[edi],eax
  4028f4:	cwde   
  4028f5:	sahf   
  4028f6:	sub    BYTE PTR [edi-0x29],0x8
  4028fa:	scas   eax,DWORD PTR es:[edi]
  4028fb:	stos   BYTE PTR es:[edi],al
  4028fc:	sti    
  4028fd:	stos   BYTE PTR es:[edi],al
  4028fe:	and    eax,0x92a2c01f
  402903:	dec    ebp
  402904:	jmp    0x11c5:0x439615e4
  40290b:	popw   ds
  40290d:	imul   DWORD PTR ds:0xf91f79f3
  402913:	sbb    esi,DWORD PTR [eax+0x7fe4a28d]
  402919:	add    ebx,esi
  40291b:	xor    BYTE PTR [eax+0x4a],al
  40291e:	and    ebp,DWORD PTR [ebx-0x4c]
  402921:	mov    al,ds:0x8ad0b0ae
  402926:	cdq    
  402927:	aas    
  402928:	jnp    0x4028dc
  40292a:	adc    ecx,DWORD PTR [ecx]
  40292c:	cmp    esp,ebx
  40292e:	lods   eax,DWORD PTR ds:[esi]
  40292f:	mov    al,ds:0xba4f42f6
  402934:	gs leave 
  402936:	cld    
  402937:	inc    BYTE PTR [ecx]
  402939:	popf   
  40293a:	je     0x4029b6
  40293c:	mov    ds:0x4b16fa2a,eax
  402941:	or     dl,bl
  402943:	mov    ds:0xfeaa27b2,al
  402948:	(bad)  
  402949:	mov    al,0x7c
  40294b:	rol    ebx,1
  40294d:	push   edx
  40294e:	jg     0x4029c1
  402950:	leave  
  402951:	sbb    ah,ch
  402953:	outs   dx,BYTE PTR ds:[esi]
  402954:	fdivrp st(3),st
  402956:	loop   0x402999
  402958:	jp     0x40291c
  40295a:	mov    esi,0xd4364533
  40295f:	loope  0x4029a2
  402961:	loop   0x4028e9
  402963:	push   eax
  402964:	retf   
  402965:	inc    ebp
  402966:	ss mov dl,0x79
  402969:	xchg   bl,bh
  40296b:	mov    dl,0xf8
  40296d:	mov    ecx,0x151f53dc
  402972:	sbb    ecx,ebp
  402974:	bound  esp,QWORD PTR [ecx-0x41f92f89]
  40297a:	cmp    BYTE PTR [esi],0x9d
  40297d:	das    
  40297e:	and    dh,0x21
  402981:	repz jecxz 0x402936
  402984:	mov    DWORD PTR [eax-0x67],ecx
  402987:	xchg   ebp,eax
  402988:	sub    al,0x7f
  40298a:	std    
  40298b:	and    esi,DWORD PTR [ebx]
  40298d:	jo     0x402950
  40298f:	bound  ebx,QWORD PTR [eax+0x3d]
  402992:	or     BYTE PTR [ebx-0x1d3095f5],bl
  402998:	div    ah
  40299a:	mov    ss,WORD PTR [ebx+eiz*8-0x17]
  40299e:	mov    esi,0x8a2c4f5
  4029a3:	aaa    
  4029a4:	dec    ebx
  4029a5:	mov    al,BYTE PTR [esi-0x7a]
  4029a8:	lods   eax,DWORD PTR ds:[esi]
  4029a9:	jb     0x40298a
  4029ab:	lea    edx,[eax+0x6]
  4029ae:	jmp    0xed2c6e17
  4029b3:	mov    ebx,0x159a306e
  4029b8:	sahf   
  4029b9:	jnp    0x4029ea
  4029bb:	out    0x4b,al
  4029bd:	cdq    
  4029be:	aas    
  4029bf:	test   BYTE PTR [ecx],ah
  4029c1:	xor    BYTE PTR [ebp-0x4a],dh
  4029c4:	xchg   edx,eax
  4029c5:	xchg   edi,eax
  4029c6:	jg     0x402964
  4029c8:	push   edi
  4029c9:	outs   dx,BYTE PTR ds:[esi]
  4029ca:	test   al,0xcf
  4029cc:	pop    esp
  4029cd:	jne    0x402a19
  4029cf:	les    ebp,FWORD PTR [eax+0x34]
  4029d2:	addr16 inc edx
  4029d4:	int    0xf3
  4029d6:	adc    BYTE PTR [ecx-0x52],bh
  4029d9:	mov    ds:0xfb6b2cb0,al
  4029de:	mov    ch,0x9a
  4029e0:	pop    es
  4029e1:	mov    DWORD PTR [edi],edi
  4029e3:	imul   edx,DWORD PTR [edx+0x2f],0xfe302a57
  4029ea:	dec    ebx
  4029eb:	imul   ebx,DWORD PTR [ebp+esi*1-0x78],0x299a1cc6
  4029f3:	mov    edi,0x5ab39881
  4029f8:	inc    BYTE PTR [ecx-0x4d]
  4029fb:	push   eax
  4029fc:	sub    eax,0xf1595fdc
  402a01:	(bad)  
  402a02:	push   edi
  402a03:	(bad)  
  402a04:	es add DWORD PTR ds:0x9a795c1f,0xffffff95
  402a0d:	in     eax,0x75
  402a0f:	ret    
  402a10:	cmp    bl,BYTE PTR [edx+0x5c]
  402a13:	xchg   esp,eax
  402a14:	adc    al,0xd9
  402a16:	cmp    esp,DWORD PTR [edx]
  402a18:	cld    
  402a19:	jmp    0x402a2c
  402a1b:	dec    eax
  402a1c:	add    ah,BYTE PTR [edi]
  402a1e:	rol    DWORD PTR [edi-0x63],cl
  402a21:	sbb    eax,0xcf1c7bd0
  402a26:	ret    
  402a27:	add    al,BYTE PTR [esi+ebx*1]
  402a2a:	loop   0x402a67
  402a2c:	cwde   
  402a2d:	mov    cl,0xe1
  402a2f:	xchg   edx,eax
  402a30:	scas   al,BYTE PTR es:[edi]
  402a31:	fs inc ebx
  402a33:	mov    al,ds:0xcf0a3052
  402a38:	shl    BYTE PTR [esp+ecx*1],cl
  402a3b:	inc    esp
  402a3c:	inc    eax
  402a3d:	lods   al,BYTE PTR ds:[esi]
  402a3e:	dec    esi
  402a3f:	int    0x7c
  402a41:	cs mov esp,0xa820cdc7
  402a47:	mov    ebp,0x49a6f488
  402a4c:	dec    esi
  402a4d:	or     esi,DWORD PTR [edx-0x63]
  402a50:	sar    eax,0xba
  402a53:	jnp    0xab02f3fb
  402a59:	sub    DWORD PTR [ecx+0x61],eax
  402a5c:	aaa    
  402a5d:	or     bl,BYTE PTR cs:[eax+0x35]
  402a61:	loopne 0x4029ee
  402a63:	add    esp,ebp
  402a65:	lock pushf 
  402a67:	aas    
  402a68:	or     BYTE PTR [ebp-0x1afcdb78],dl
  402a6e:	popf   
  402a6f:	cmc    
  402a70:	lahf   
  402a71:	inc    ebx
  402a72:	pop    es
  402a73:	stc    
  402a74:	pop    esi
  402a75:	icebp  
  402a76:	mov    DWORD PTR [eax+edx*4-0x10],edi
  402a7a:	inc    ecx
  402a7b:	call   0xfaf5bd38
  402a80:	jmp    0x4ec00d28
  402a85:	push   0x3403db5d
  402a8a:	test   DWORD PTR [esi-0xf],0x350035e8
  402a91:	out    dx,eax
  402a92:	inc    ebp
  402a93:	mov    dh,0xe8
  402a95:	nop
  402a96:	icebp  
  402a97:	inc    edx
  402a98:	jo     0x402a9a
  402a9a:	dec    edi
  402a9b:	add    DWORD PTR [edx-0x80],ecx
  402a9e:	icebp  
  402a9f:	dec    ecx
  402aa0:	jmp    0xd1d4:0xe6eee906
  402aa7:	(bad)  
  402aa8:	mov    ecx,0x8fce060e
  402aad:	jb     0x402b0e
  402aaf:	sar    DWORD PTR [ebp+0x6e79ab20],cl
  402ab5:	pop    edx
  402ab6:	fs lods al,BYTE PTR fs:[esi]
  402ab9:	fimul  DWORD PTR [edx-0x758d3e77]
  402abf:	add    cl,BYTE PTR [edx]
  402ac1:	push   cs
  402ac2:	retf   0x2535
  402ac5:	fwait
  402ac6:	cwde   
  402ac7:	jp     0x402a97
  402ac9:	(bad)  
  402aca:	sti    
  402acb:	out    0x17,eax
  402acd:	or     bh,al
  402acf:	mov    WORD PTR [edi+0x17],ss
  402ad2:	pop    ds
  402ad3:	lods   al,BYTE PTR ds:[esi]
  402ad4:	or     al,0x20
  402ad6:	cdq    
  402ad7:	sub    bl,ah
  402ad9:	xor    DWORD PTR [esi+0x15],0xffffffb4
  402add:	sub    DWORD PTR [ebx],edi
  402adf:	and    bl,BYTE PTR [eax-0x631c80a]
  402ae5:	add    bh,al
  402ae7:	lea    edx,[ebp-0xc707e4b]
  402aed:	xor    eax,0x4ed99ca
  402af2:	nop
  402af3:	jbe    0x402a7a
  402af5:	paddw  mm5,QWORD PTR [ebx+eiz*8]
  402af9:	into   
  402afa:	jnp    0x402ae5
  402afc:	lods   al,BYTE PTR ds:[esi]
  402afd:	int    0x66
  402aff:	imul   ebp,DWORD PTR [esi+0x66724049],0x6156eb47
  402b09:	dec    edi
  402b0a:	jne    0x402aff
  402b0c:	icebp  
  402b0d:	out    dx,al
  402b0e:	push   ss
  402b0f:	push   ebp
  402b10:	lods   al,BYTE PTR ds:[esi]
  402b11:	dec    ebx
  402b12:	mov    dl,0xa
  402b14:	pusha  
  402b15:	mov    ch,0xaa
  402b17:	xor    DWORD PTR [ebp-0x9],0xffffffc1
  402b1b:	push   ebx
  402b1c:	das    
  402b1d:	inc    esi
  402b1e:	cmp    bl,BYTE PTR [eax-0x48114ca8]
  402b24:	sub    eax,0xeb009c5f
  402b29:	jmp    0x402ae1
  402b2b:	dec    eax
  402b2c:	and    edi,DWORD PTR [ecx+0xaa0c1dc]
  402b32:	lods   eax,DWORD PTR ds:[esi]
  402b33:	pop    ss
  402b34:	adc    DWORD PTR [ecx-0x4fe6e95e],0x6a
  402b3b:	adc    DWORD PTR gs:0x64b0f7b5,0x6970e523
  402b46:	imul   edi,ecx,0xbd5f858a
  402b4c:	and    dh,dh
  402b4e:	es and esi,ecx
  402b51:	push   0xb15bfda3
  402b56:	xor    eax,0xf97e5fdc
  402b5b:	std    
  402b5c:	mov    ch,0x47
  402b5e:	add    BYTE PTR [eax-0x386ee6b0],ch
  402b64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b65:	pop    esi
  402b66:	inc    ebp
  402b67:	ins    BYTE PTR es:[edi],dx
  402b68:	jns    0x402b6e
  402b6a:	pop    edx
  402b6b:	jno    0x402bb5
  402b6d:	push   edx
  402b6e:	out    0xcc,eax
  402b70:	jle    0x402b6f
  402b72:	mov    ebx,0x285ae4bd
  402b77:	xchg   esi,eax
  402b78:	gs into 
  402b7a:	jmp    0x402bca
  402b7c:	add    BYTE PTR [ebx+0x26db180b],bh
  402b82:	mov    edx,0x947c73f1
  402b87:	jae    0x402b51
  402b89:	dec    eax
  402b8a:	inc    esi
  402b8b:	imul   esi,DWORD PTR [ecx+0x7b],0x9a10f6b3
  402b92:	inc    ebp
  402b93:	jl     0x402bf2
  402b95:	push   esp
  402b96:	push   ecx
  402b97:	out    dx,eax
  402b98:	mov    bl,0x4b
  402b9a:	dec    ecx
  402b9b:	sub    ah,BYTE PTR [esi+0x175135cb]
  402ba1:	ss dec ebp
  402ba3:	xchg   ecx,eax
  402ba4:	bnd jb 0x402b38
  402ba7:	or     DWORD PTR [edx+eiz*1+0xc937e90],edi
  402bae:	(bad)  
  402baf:	cmp    edi,esi
  402bb1:	dec    edi
  402bb2:	jge    0x402b85
  402bb4:	xchg   ebx,eax
  402bb5:	out    dx,eax
  402bb6:	mov    ds:0x2ea625ef,al
  402bbb:	add    al,0xe2
  402bbd:	xchg   dh,dh
  402bbf:	lea    ebx,[ebx+0x15530c31]
  402bc5:	(bad)
  402bc8:	ins    DWORD PTR es:[edi],dx
  402bc9:	xor    DWORD PTR [ecx],0x46
  402bcc:	push   0xcceb49a4
  402bd1:	mov    ebx,0x5293f34a
  402bd6:	xor    DWORD PTR [eax+0x7c],ebp
  402bd9:	je     0x402b9d
  402bdb:	out    dx,eax
  402bdc:	sub    BYTE PTR [edx-0x37f30c25],dh
  402be2:	bound  esp,QWORD PTR [edi]
  402be4:	jmp    0x78a3:0x42aaab2b
  402beb:	pop    edi
  402bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bed:	inc    ecx
  402bee:	dec    ecx
  402bef:	stos   DWORD PTR es:[edi],eax
  402bf0:	popf   
  402bf1:	jns    0x402b8b
  402bf3:	pop    ebp
  402bf4:	cmp    BYTE PTR [edi+0x256c01a3],dh
  402bfa:	iret   
  402bfb:	mov    bh,0x8a
  402bfd:	or     eax,eax
  402bff:	dec    ebx
  402c00:	aad    0xee
  402c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c03:	fndisi(8087 only) 
  402c05:	aam    0xb0
  402c07:	mov    ds:0x4b22cd0,eax
  402c0c:	mov    ebx,0x16fab2c5
  402c11:	jo     0x402ba3
  402c13:	call   0x7f5c:0x2cfb85f8
  402c1a:	mov    dl,BYTE PTR [edi]
  402c1c:	popfw  
  402c1e:	cs (bad) 
  402c20:	adc    al,0xf3
  402c22:	in     eax,dx
  402c23:	in     al,dx
  402c24:	icebp  
  402c25:	ins    BYTE PTR es:[edi],dx
  402c26:	mov    bl,0x63
  402c28:	xor    BYTE PTR [edi+eax*8],dh
  402c2b:	in     al,dx
  402c2c:	fldenv [esi-0x14]
  402c2f:	std    
  402c30:	iret   
  402c31:	jno    0x402c01
  402c33:	fstp   st(6)
  402c35:	aaa    
  402c36:	shl    DWORD PTR [ebx],1
  402c38:	and    eax,0xfd1e3763
  402c3d:	loopne 0x402c54
  402c3f:	sbb    BYTE PTR [esi],ah
  402c41:	test   DWORD PTR [ecx-0x18aa6787],edx
  402c47:	inc    ebx
  402c48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c49:	push   ss
  402c4a:	mov    BYTE PTR [ecx-0x1a],dh
  402c4d:	jno    0x402c43
  402c4f:	cmp    al,0xed
  402c51:	in     eax,dx
  402c52:	fcomp  DWORD PTR [edx-0x58]
  402c55:	pop    ecx
  402c56:	adc    BYTE PTR [edx+0x54],al
  402c59:	sub    eax,0x3be846ff
  402c5e:	loopne 0x402c6d
  402c60:	jmp    0x402ccd
  402c62:	fdivr  DWORD PTR [ecx]
  402c64:	test   eax,0x183bc950
  402c69:	pop    ecx
  402c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6b:	scas   al,BYTE PTR es:[edi]
  402c6c:	mov    esi,0xe2218d79
  402c71:	dec    esp
  402c72:	cmp    eax,0xbb0634d7
  402c77:	enter  0x988b,0x28
  402c7b:	pop    esp
  402c7c:	aaa    
  402c7d:	ins    DWORD PTR es:[edi],dx
  402c7e:	dec    esi
  402c7f:	fucomip st,st(2)
  402c81:	mov    BYTE PTR [eax],bh
  402c83:	(bad)  [eax+ebp*2]
  402c86:	push   edi
  402c87:	xchg   DWORD PTR [eax-0x12],ebp
  402c8a:	dec    ebp
  402c8b:	sbb    al,0xf2
  402c8d:	aam    0x6e
  402c8f:	or     al,0xd4
  402c91:	mov    eax,ds:0x21ef2fb3
  402c96:	loope  0x402cbd
  402c98:	pop    es
  402c99:	adc    DWORD PTR [ebx+0x4b],esi
  402c9c:	lock or DWORD PTR [esi+0x2ba08132],ebp
  402ca3:	test   DWORD PTR [edi-0x2],0x72b22b78
  402caa:	aad    0x7
  402cac:	ret    
  402cad:	cmp    al,0x80
  402caf:	inc    eax
  402cb0:	xchg   esp,eax
  402cb1:	mov    DWORD PTR [ecx+ebx*8-0x6a4d083f],edi
  402cb8:	mov    ds:0xb5390b5c,eax
  402cbd:	mov    al,0x7
  402cbf:	fcomp  DWORD PTR [ebx+0x39cb402e]
  402cc5:	push   edx
  402cc6:	pop    esi
  402cc7:	push   esp
  402cc8:	loope  0x402cf6
  402cca:	and    eax,0x832032ca
  402ccf:	cwde   
  402cd0:	test   DWORD PTR [edx-0x23b0bc66],ebx
  402cd6:	jmp    0x402d21
  402cd8:	adc    eax,0x8a0ff5d1
  402cdd:	out    dx,al
  402cde:	fbstp  TBYTE PTR [ebp-0x56]
  402ce1:	fwait
  402ce2:	ds call 0xdaf2:0x4b684d3e
  402cea:	fmul   QWORD PTR [esi-0x4dc5f037]
  402cf0:	pop    edi
  402cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cf2:	fisttp WORD PTR [eax]
  402cf4:	test   eax,0x4ee61d84
  402cf9:	cli    
  402cfa:	dec    eax
  402cfb:	mov    ecx,0x52ab3497
  402d00:	mov    ebp,0xaa19a195
  402d05:	push   es
  402d06:	and    cl,BYTE PTR [esi]
  402d08:	sar    BYTE PTR [esi],1
  402d0a:	cmp    eax,0x5b33ec39
  402d0f:	adc    DWORD PTR [edi],esp
  402d11:	(bad)  
  402d12:	jmp    0x61c5:0x4a47fa4e
  402d19:	fsub   st,st(3)
  402d1b:	loope  0x402cb5
  402d1d:	(bad)  
  402d1e:	imul   esp,edx,0x354336c6
  402d24:	pop    edx
  402d25:	sub    al,0xcd
  402d27:	in     eax,dx
  402d28:	(bad)  
  402d29:	adc    BYTE PTR [ebx+0x6d5c4499],ah
  402d2f:	call   0x1ae3:0xb4208dde
  402d36:	mov    eax,0x8bb6eaec
  402d3b:	test   DWORD PTR [ebp+0x4e50df25],edx
  402d41:	out    0xcd,eax
  402d43:	popf   
  402d44:	sub    bl,BYTE PTR [edi+edx*4+0x1a]
  402d48:	jge    0x402d4a
  402d4a:	sti    
  402d4b:	jecxz  0x402d09
  402d4d:	outs   dx,DWORD PTR ds:[esi]
  402d4e:	das    
  402d4f:	outs   dx,DWORD PTR ds:[esi]
  402d50:	sub    BYTE PTR [eax+0x30],dl
  402d53:	data16 jle 0x402d4d
  402d56:	(bad)
  402d5a:	mov    eax,ds:0xa069be8e
  402d5f:	push   cs
  402d60:	push   cs
  402d61:	xor    ebx,DWORD PTR [ebp+eax*2+0x65cb2f39]
  402d68:	and    dh,BYTE PTR [ebp+0x5f]
  402d6b:	xor    ch,BYTE PTR [edi+ecx*8+0x4b]
  402d6f:	mov    al,0x91
  402d71:	xor    BYTE PTR [ebx-0x4ab0ec33],bh
  402d77:	push   eax
  402d78:	leave  
  402d79:	jo     0x402d02
  402d7b:	mov    al,ds:0x557ba259
  402d80:	test   al,al
  402d82:	or     eax,0x6f216c07
  402d87:	xchg   ebp,eax
  402d88:	and    BYTE PTR [esp+eax*2-0x4],0xbc
  402d8d:	les    ebx,FWORD PTR [eax]
  402d8f:	(bad)  
  402d90:	fidivr WORD PTR [eax]
  402d92:	mov    edi,DWORD PTR [ecx+0x76]
  402d95:	js     0x402d9f
  402d97:	into   
  402d98:	(bad)  
  402d99:	mov    BYTE PTR [ecx+0x3f4b5e86],dl
  402d9f:	sub    DWORD PTR [ebx+edx*8+0x289369d3],0xffffffc7
  402da7:	sbb    BYTE PTR [esi],0x58
  402daa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dab:	cwde   
  402dac:	jno    0x402d33
  402dae:	inc    esi
  402daf:	add    BYTE PTR [ecx+0x12],bh
  402db2:	call   0x9e66:0xd9dcb1c6
  402db9:	sbb    al,0x7d
  402dbb:	ret    0xc46b
  402dbe:	pop    esp
  402dbf:	pop    ecx
  402dc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dc1:	or     al,0x60
  402dc3:	mov    ch,BYTE PTR [ecx-0x71ec449e]
  402dc9:	sahf   
  402dca:	scas   eax,DWORD PTR es:[edi]
  402dcb:	inc    eax
  402dcc:	adc    al,0xb4
  402dce:	mov    eax,ds:0xe2f12793
  402dd3:	lds    ebx,FWORD PTR [ebp+0xa0c6191]
  402dd9:	jo     0x402e19
  402ddb:	jbe    0x402e07
  402ddd:	xor    eax,0x7006ba7c
  402de2:	(bad)  
  402de3:	mov    edi,0x98799b52
  402de8:	adc    eax,0xf2e06109
  402ded:	int    0xac
  402def:	adc    eax,0x6b58b41d
  402df4:	pop    edx
  402df5:	stc    
  402df6:	mov    dh,0x5
  402df8:	sub    BYTE PTR [esi+0x74],bl
  402dfb:	(bad)  
  402dfc:	pop    DWORD PTR [ebx]
  402dfe:	jne    0x402e0d
  402e00:	mov    ecx,0x4f59ce95
  402e05:	xchg   ebp,eax
  402e06:	retf   
  402e07:	push   ss
  402e08:	fcomi  st,st(0)
  402e0a:	mov    edi,0x39ca6e54
  402e0f:	or     edx,0x913e0092
  402e15:	cmp    bl,BYTE PTR [ebp+0x17]
  402e18:	(bad)  
  402e1a:	lock std 
  402e1c:	enter  0x5761,0x10
  402e20:	cmp    al,0x49
  402e22:	stos   BYTE PTR es:[edi],al
  402e23:	dec    esi
  402e24:	adc    edx,DWORD PTR [ecx]
  402e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e27:	stos   BYTE PTR es:[edi],al
  402e28:	mov    ds:0x4169f9d3,al
  402e2d:	adc    BYTE PTR [edx],ch
  402e2f:	and    BYTE PTR ds:0x6e89af9c,al
  402e35:	cld    
  402e36:	dec    ebx
  402e37:	jge    0x402e1f
  402e39:	ror    edi,1
  402e3b:	lahf   
  402e3c:	dec    ebp
  402e3d:	or     BYTE PTR [ebp-0x4f],dl
  402e40:	adc    edi,DWORD PTR [edx]
  402e42:	das    
  402e43:	sbb    ebp,esi
  402e45:	lea    edx,ds:0x50b9747c
  402e4b:	dec    edx
  402e4c:	sbb    eax,0x5d06fed0
  402e51:	int3   
  402e52:	jmp    0xcb88da68
  402e57:	jg     0x402e47
  402e59:	adc    edi,DWORD PTR [eax-0x10d9ae6e]
  402e5f:	jo     0x402e5a
  402e61:	test   al,0xac
  402e63:	sub    DWORD PTR [edx+ebx*4],ebp
  402e66:	in     eax,dx
  402e67:	pop    esi
  402e68:	mov    bl,0xb9
  402e6a:	sbb    DWORD PTR [eax+0x5c433625],eax
  402e70:	mov    ch,BYTE PTR [ecx+eiz*4-0x11d420c5]
  402e77:	pop    ss
  402e78:	ret    0x562f
  402e7b:	dec    eax
  402e7c:	mov    cs,edx
  402e7e:	loopne 0x402e1a
  402e80:	out    0xa0,al
  402e82:	xor    DWORD PTR [ebx+0x2204c79e],ebx
  402e88:	dec    edx
  402e89:	push   0x497a0f1f
  402e8e:	jmp    0xd1859186
  402e93:	scas   al,BYTE PTR es:[edi]
  402e94:	pop    eax
  402e95:	pushf  
  402e96:	in     al,0x5
  402e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e99:	sar    BYTE PTR [ecx+0x18],cl
  402e9c:	push   ebp
  402e9d:	rcl    DWORD PTR [esi-0x55],cl
  402ea0:	sub    eax,0xf5409a3
  402ea5:	mov    edi,0x70ec1795
  402eaa:	fimul  DWORD PTR [edi]
  402eac:	mov    al,0x58
  402eae:	mov    fs,WORD PTR [edi+0x18d2922d]
  402eb4:	fiadd  WORD PTR [esi]
  402eb6:	out    dx,eax
  402eb7:	push   ebp
  402eb8:	dec    eax
  402eb9:	int3   
  402eba:	fstp   TBYTE PTR ds:0x7428926e
  402ec0:	jb     0x402e4f
  402ec2:	std    
  402ec3:	and    al,0xb8
  402ec5:	pop    ds
  402ec6:	pop    DWORD PTR [ecx]
  402ec8:	push   ss
  402ec9:	xor    bl,BYTE PTR ds:0xe8d842eb
  402ecf:	adc    BYTE PTR [ebx-0x21],dl
  402ed2:	pop    eax
  402ed3:	ds sbb al,0xa1
  402ed6:	daa    
  402ed7:	inc    ebp
  402ed8:	arpl   di,si
  402eda:	iret   
  402edb:	ins    DWORD PTR es:[edi],dx
  402edc:	mov    eax,ds:0x784eaded
  402ee1:	mov    bl,0x61
  402ee3:	aad    0x61
  402ee5:	sub    BYTE PTR [eax-0x386a6ceb],al
  402eeb:	or     al,0x59
  402eed:	dec    edx
  402eee:	int    0x66
  402ef0:	push   esp
  402ef1:	hlt    
  402ef2:	rcl    DWORD PTR [esi-0x13],1
  402ef5:	leave  
  402ef6:	test   al,0xf
  402ef8:	sub    bh,BYTE PTR [eax+0x42]
  402efb:	enterw 0xe354,0x83
  402f00:	pop    ebp
  402f01:	(bad)  [edx-0x6c]
  402f04:	mov    eax,ds:0x360d6d2
  402f09:	ja     0x402ec0
  402f0b:	jnp    0x402ecc
  402f0d:	pop    ebx
  402f0e:	mov    eax,ds:0xc9aabac2
  402f13:	xchg   esi,eax
  402f14:	cmp    edx,0xffffffdc
  402f17:	call   0x18ef1cc8
  402f1c:	ret    
  402f1d:	sub    ch,BYTE PTR [ebx+0x6f]
  402f20:	push   edx
  402f21:	mov    dl,0x57
  402f23:	jecxz  0x402f7e
  402f25:	inc    ecx
  402f26:	std    
  402f27:	jae    0x402eb2
  402f29:	pop    ss
  402f2a:	jmp    0x402f1d
  402f2c:	add    DWORD PTR [edx+0x70],edi
  402f2f:	shl    dh,0x49
  402f32:	fild   DWORD PTR [edx+0x19]
  402f35:	xchg   edx,eax
  402f36:	push   edx
  402f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f38:	mov    ah,0xc3
  402f3a:	mov    bl,0x8b
  402f3c:	pushf  
  402f3d:	mov    al,ds:0x765b4590
  402f42:	shl    DWORD PTR [eax-0x25],1
  402f45:	popf   
  402f46:	jbe    0x402eee
  402f48:	fimul  DWORD PTR [ecx-0x2b]
  402f4b:	in     eax,dx
  402f4c:	icebp  
  402f4d:	fcomip st,st(2)
  402f4f:	push   es
  402f50:	xor    eax,0xb3366aac
  402f55:	or     al,0xa2
  402f57:	push   edi
  402f58:	call   0x9d74:0x90fa5307
  402f5f:	aam    0x2d
  402f61:	push   ecx
  402f62:	loopne 0x402fbe
  402f64:	adc    al,0xc8
  402f66:	jb     0x402fd8
  402f68:	ret    0xc852
  402f6b:	loopne 0x402f7b
  402f6d:	clc    
  402f6e:	cmp    esi,DWORD PTR [eax-0x1e036bb0]
  402f74:	adc    edx,esi
  402f76:	jae    0x402f67
  402f78:	push   edi
  402f79:	jns    0x402ff5
  402f7b:	pop    edx
  402f7c:	sub    BYTE PTR [edx],0xba
  402f7f:	arpl   WORD PTR [edi+0x60],bx
  402f82:	mov    ch,0x1b
  402f84:	push   cs
  402f85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f86:	ja     0x402f95
  402f88:	inc    edi
  402f89:	dec    ebx
  402f8a:	int    0xcf
  402f8c:	sub    BYTE PTR [esi-0x576eb1e],dh
  402f92:	ja     0x402f83
  402f94:	daa    
  402f95:	pushf  
  402f96:	hlt    
  402f97:	push   ss
  402f98:	call   0x93b:0x32a88d3c
  402f9f:	mov    cl,0x25
  402fa1:	adc    ecx,DWORD PTR [ecx-0x7467f3d1]
  402fa7:	xchg   ebx,eax
  402fa8:	ins    DWORD PTR es:[edi],dx
  402fa9:	ror    DWORD PTR [edx+eax*1+0x6a],1
  402fad:	mov    al,0xe3
  402faf:	push   ebx
  402fb0:	jmp    0x403016
  402fb2:	cmp    edx,DWORD PTR [edx-0x39]
  402fb5:	inc    esp
  402fb6:	sub    eax,0x1ee9ffbf
  402fbb:	es aaa 
  402fbd:	in     al,0xdc
  402fbf:	inc    edx
  402fc0:	jns    0x402f5d
  402fc2:	pop    edi
  402fc3:	sub    BYTE PTR [ebx],bl
  402fc5:	push   eax
  402fc6:	aam    0xb7
  402fc8:	das    
  402fc9:	inc    edi
  402fca:	inc    edi
  402fcb:	enter  0xff68,0x72
  402fcf:	fsubr  st(7),st
  402fd1:	xchg   esp,eax
  402fd2:	pusha  
  402fd3:	data16 fsubr st,st(4)
  402fd6:	xor    eax,0xcdd0f55f
  402fdb:	test   eax,esi
  402fdd:	dec    edx
  402fde:	mov    ebx,0x5d44846d
  402fe3:	popa   
  402fe4:	or     DWORD PTR [ecx-0x38],ebx
  402fe7:	mov    bl,0x6e
  402fe9:	out    0xbc,eax
  402feb:	xor    BYTE PTR [ecx+0x6f],ch
  402fee:	popa   
  402fef:	pop    edx
  402ff0:	push   edx
  402ff1:	pop    edx
  402ff2:	mov    BYTE PTR [ebx-0x36],ah
  402ff5:	push   edi
  402ff6:	push   edx
  402ff7:	mov    ds:0xcbc3115b,al
  402ffc:	pop    ebx
  402ffd:	sub    cl,ah
  402fff:	dec    ebx
  403000:	mov    ebp,?
  403002:	(bad)
  403005:	test   al,0x45
  403007:	(bad)
  40300b:	lods   eax,DWORD PTR ds:[esi]
  40300c:	ficom  WORD PTR [eax]
  40300e:	ds push edi
  403010:	mov    ds:0x7336ffba,al
  403015:	mov    esp,0x23e3d8f2
  40301a:	inc    esp
  40301b:	js     0x403079
  40301d:	repz lea edx,[ebp+0x1e]
  403021:	mov    al,fs:0xc4d15230
  403027:	inc    ecx
  403028:	(bad)  
  403029:	aam    0x52
  40302b:	lds    esp,FWORD PTR [edx+0x41]
  40302e:	pop    eax
  40302f:	mov    ebp,0xa3f6d941
  403034:	in     eax,0xb3
  403036:	jmp    0x403032
  403038:	in     al,dx
  403039:	inc    eax
  40303a:	pop    eax
  40303b:	scas   al,BYTE PTR es:[edi]
  40303c:	or     al,0x9a
  40303e:	mov    ds:0xf85ca879,al
  403043:	mov    ebp,DWORD PTR [esi-0x79]
  403046:	inc    esp
  403047:	pop    ds
  403048:	loopne 0x40301f
  40304a:	loope  0x402fd4
  40304c:	dec    edi
  40304d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40304e:	jecxz  0x403056
  403050:	xchg   edi,eax
  403051:	out    dx,eax
  403052:	inc    esi
  403053:	xor    eax,0xd9da0810
  403058:	cwde   
  403059:	pop    es
  40305a:	xor    eax,0xfea521b1
  40305f:	sar    DWORD PTR [esp+esi*8],1
  403062:	fwait
  403063:	adc    edx,DWORD PTR [esp+eiz*8]
  403066:	mov    ah,0x30
  403068:	in     al,dx
  403069:	push   eax
  40306a:	addr16 or eax,0x1aa926d4
  403070:	mov    al,ds:0x4cfc6766
  403075:	add    edi,DWORD PTR [eax]
  403077:	(bad)  
  403078:	or     eax,DWORD PTR [ebx+eax*4]
  40307b:	xchg   DWORD PTR [esi+0x74286480],ecx
  403081:	sti    
  403082:	ss cld 
  403084:	jle    0x4030ac
  403086:	cmp    ecx,edi
  403088:	or     al,0xa5
  40308a:	sub    eax,0x2f9d8d9e
  40308f:	push   ecx
  403090:	mov    ch,0xff
  403092:	int    0x48
  403094:	pop    ebx
  403095:	retf   
  403096:	ins    BYTE PTR es:[edi],dx
  403097:	xor    BYTE PTR [ebx+0x2b6e9942],dh
  40309d:	(bad)  
  40309e:	(bad)  
  40309f:	cld    
  4030a0:	sub    bl,bl
  4030a2:	sahf   
  4030a3:	nop
  4030a4:	sbb    ah,BYTE PTR [edx+0x5886e792]
  4030aa:	or     al,0xc
  4030ac:	or     BYTE PTR [esi-0x678fca42],bl
  4030b2:	xchg   ebp,eax
  4030b3:	cdq    
  4030b4:	out    0x93,eax
  4030b6:	ror    DWORD PTR [ecx+0x65],1
  4030b9:	sbb    DWORD PTR [esi-0x3e5db025],ebx
  4030bf:	cs add eax,0xc34b0889
  4030c6:	mov    eax,ds:0x22e80489
  4030cb:	fisubr DWORD PTR [ebx]
  4030cd:	bound  edx,QWORD PTR es:[eax]
  4030d0:	ret    0x397
  4030d3:	in     al,0x13
  4030d5:	int3   
  4030d6:	in     al,dx
  4030d7:	mov    edi,0x68abc929
  4030dc:	xchg   ebp,eax
  4030dd:	pop    edx
  4030de:	sbb    DWORD PTR [edi],ecx
  4030e0:	and    BYTE PTR [esi-0x3e8e1f80],al
  4030e6:	or     DWORD PTR [edi-0x7c],ebx
  4030e9:	pop    edi
  4030ea:	test   DWORD PTR [edx+0x1dfcc0ac],edi
  4030f0:	jmp    0x403098
  4030f2:	cld    
  4030f3:	mov    esp,0xa1fc5b52
  4030f8:	jmp    0x76d8b5ee
  4030fd:	pop    esp
  4030fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030ff:	sbb    ch,al
  403101:	and    edx,DWORD PTR [ebx-0xfc81b8f]
  403107:	add    ch,BYTE PTR [eax+0x3c]
  40310a:	icebp  
  40310b:	iret   
  40310c:	je     0x403168
  40310e:	ffreep st(3)
  403110:	sbb    DWORD PTR [ecx+0x4d],eax
  403113:	xor    eax,0x1383fc0a
  403118:	inc    DWORD PTR [eax]
  40311a:	shr    DWORD PTR [eax-0x686e34cd],cl
  403120:	push   ecx
  403121:	add    bh,dl
  403123:	pushf  
  403124:	in     eax,dx
  403125:	xchg   esp,eax
  403126:	mov    ch,BYTE PTR [edi+ecx*4-0x25]
  40312a:	xor    eax,0x1d160440
  40312f:	mov    ebx,0xbe5c0bff
  403135:	leave  
  403136:	xchg   edi,eax
  403137:	jae    0x4030ee
  403139:	test   eax,0x39ca477b
  40313e:	cmc    
  40313f:	jmp    DWORD PTR ss:[edx]
  403142:	in     al,dx
  403143:	push   esi
  403144:	mov    edi,DWORD PTR [edi]
  403146:	int    0x25
  403148:	sub    dh,ch
  40314a:	test   BYTE PTR [bx+di],0x3
  40314e:	(bad)  
  40314f:	arpl   sp,cx
  403151:	outs   dx,BYTE PTR ds:[esi]
  403152:	aad    0xf9
  403154:	jle    0x403142
  403156:	fisttp DWORD PTR [edx]
  403158:	mov    ch,0x10
  40315a:	mov    al,0x7d
  40315c:	mov    esi,0x99abbcb0
  403161:	and    al,0xaf
  403163:	lods   eax,DWORD PTR ds:[esi]
  403164:	rcr    DWORD PTR [ebp-0x6a232957],0x2a
  40316b:	push   ds
  40316c:	in     al,0xd2
  40316e:	repnz pop edx
  403170:	pop    esi
  403171:	push   0x5a58c02d
  403176:	sti    
  403177:	test   eax,0x2e7edf6f
  40317c:	imul   BYTE PTR [edi+0x7c2b3f07]
  403182:	popf   
  403183:	dec    ebx
  403184:	rcl    BYTE PTR [edx+0x4ff9b7e9],cl
  40318a:	mov    cl,0xd9
  40318c:	jae    0x40314b
  40318e:	ins    BYTE PTR es:[edi],dx
  40318f:	(bad)  
  403190:	xchg   edx,eax
  403191:	jmp    0xc225:0x6191c269
  403198:	push   edi
  403199:	test   eax,0xaace6976
  40319e:	aad    0x90
  4031a0:	sub    ch,dh
  4031a2:	stc    
  4031a3:	mov    eax,ds:0x9faab0e7
  4031a8:	std    
  4031a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031aa:	sbb    cl,BYTE PTR [ebp-0xb]
  4031ad:	mov    esp,DWORD PTR [edx+0x4d19ad36]
  4031b3:	in     al,0x7
  4031b5:	jno    0x4031e1
  4031b7:	or     DWORD PTR [ebp+0x12802d64],ecx
  4031bd:	sub    esp,DWORD PTR [edi+ebp*1+0x78]
  4031c1:	or     ch,0xa5
  4031c4:	ds jp  0x4031f3
  4031c7:	stos   BYTE PTR es:[edi],al
  4031c8:	dec    edi
  4031c9:	jge    0x40323a
  4031cb:	mov    cl,0x54
  4031cd:	xor    esp,ebp
  4031cf:	jbe    0x4031b9
  4031d1:	sahf   
  4031d2:	(bad)  
  4031d3:	sbb    al,0xba
  4031d5:	popf   
  4031d6:	cmp    cl,ah
  4031d8:	sbb    al,0x43
  4031da:	ja     0x403212
  4031dc:	jns    0x403230
  4031de:	fcomp  st(3)
  4031e0:	jmp    0x8ea1:0x9a20f284
  4031e7:	test   al,0x73
  4031e9:	jp     0x40325a
  4031eb:	push   es
  4031ec:	fidiv  DWORD PTR [edx]
  4031ee:	jl     0x4031f4
  4031f0:	shl    BYTE PTR [edi],0x8e
  4031f3:	popa   
  4031f4:	(bad)  
  4031f6:	in     eax,dx
  4031f7:	pop    edi
  4031f8:	cmp    al,0xc5
  4031fa:	mov    edi,0xc588529b
  4031ff:	mov    ecx,DWORD PTR [esi+edx*1+0x7d415677]
  403206:	mov    eax,ds:0x35dec4a5
  40320b:	xor    eax,0x11169384
  403210:	jb     0x403260
  403212:	popf   
  403213:	es push edx
  403215:	retf   
  403216:	arpl   WORD PTR [ecx-0x30],cx
  403219:	jns    0x403210
  40321b:	and    BYTE PTR [esi-0x13],dh
  40321e:	pop    ecx
  40321f:	fsub   DWORD PTR [esi-0x2]
  403222:	pop    edi
  403223:	mov    ebx,0x2bf949a8
  403228:	jp     0x40320e
  40322a:	stc    
  40322b:	cmc    
  40322c:	test   eax,0xb69df70b
  403231:	lea    edi,[esi-0x6b39d492]
  403237:	push   ds
  403238:	push   0x77
  40323a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40323b:	cdq    
  40323c:	rdtsc  
  40323e:	addr16 add esi,esi
  403241:	lea    edx,[ebp-0x22]
  403244:	imul   edx,esi,0x1e
  403247:	lahf   
  403248:	mov    ebx,0x7600d83a
  40324d:	out    0xd3,al
  40324f:	dec    ecx
  403250:	add    ebx,DWORD PTR [esp+ebx*4-0x2b]
  403254:	adc    ah,BYTE PTR [edi-0x1c8ea2a9]
  40325a:	dec    edi
  40325b:	mov    edi,0xaf14cb81
  403260:	dec    eax
  403261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403262:	add    DWORD PTR [esi+0x72],eax
  403265:	push   ss
  403266:	inc    ebx
  403267:	retf   0x2603
  40326a:	jp     0x403265
  40326c:	cmp    al,0x4d
  40326e:	(bad)  
  403270:	test   BYTE PTR [ebp-0x27],ah
  403273:	xlat   BYTE PTR ds:[ebx]
  403274:	ss dec ebx
  403276:	scas   al,BYTE PTR es:[edi]
  403277:	cmp    DWORD PTR [ecx],0x5bbcb999
  40327d:	not    ah
  40327f:	inc    edi
  403280:	dec    ecx
  403281:	jns    0x40322a
  403283:	xchg   esi,eax
  403284:	or     ch,dl
  403286:	xor    BYTE PTR [eax+0x650b1de3],bh
  40328c:	sar    DWORD PTR ds:0x37512100,0x88
  403293:	or     BYTE PTR [ebx],ah
  403295:	adc    eax,0x99f11776
  40329a:	or     BYTE PTR [ebx+edi*8],ah
  40329d:	fcom   st(6)
  40329f:	push   edi
  4032a0:	and    eax,0x64320786
  4032a5:	not    DWORD PTR [esi-0x38]
  4032a8:	addr16 out dx,al
  4032aa:	jmp    0xdfabad31
  4032af:	sub    eax,DWORD PTR [eax+ebp*4+0x12227db3]
  4032b6:	jne    0x4032ac
  4032b8:	add    al,0xc5
  4032ba:	adc    BYTE PTR [edx+eax*1-0x60],cl
  4032be:	sub    dl,BYTE PTR [edx]
  4032c0:	out    0xa1,eax
  4032c2:	adc    eax,ebx
  4032c4:	movq   QWORD PTR [ebp-0x6b],mm5
  4032c8:	scas   eax,DWORD PTR es:[edi]
  4032c9:	ror    DWORD PTR [ecx-0x14ff89e9],1
  4032cf:	sbb    bh,BYTE PTR [ebp+0x41]
  4032d2:	nop
  4032d3:	shl    BYTE PTR [esi+0x25],1
  4032d6:	ror    BYTE PTR [ebx-0x13],0x20
  4032da:	test   DWORD PTR ds:0x99e9c5de,eax
  4032e0:	ret    0x9642
  4032e3:	in     eax,0x80
  4032e5:	rep data16 stos BYTE PTR es:[edi],al
  4032e8:	ds int 0x50
  4032eb:	add    ch,BYTE PTR [ebx+0x44]
  4032ee:	icebp  
  4032ef:	mov    eax,?
  4032f1:	(bad)  
  4032f3:	push   cs
  4032f4:	pop    ecx
  4032f5:	add    DWORD PTR [ebp-0x6563cbc3],0x77
  4032fc:	icebp  
  4032fd:	ja     0x403348
  4032ff:	inc    eax
  403300:	icebp  
  403301:	shr    BYTE PTR [eax-0x2f],1
  403304:	fadd   st(7),st
  403306:	cmp    DWORD PTR [ebx-0x797b855e],esi
  40330c:	push   ebp
  40330d:	test   eax,0xd0351a43
  403312:	sti    
  403313:	sti    
  403314:	out    dx,al
  403315:	mov    edx,0x4d25a951
  40331a:	inc    edi
  40331b:	jmp    0xe988:0x142af382
  403322:	bswap  ebp
  403324:	mov    BYTE PTR [edx+0x1c867385],bh
  40332a:	lock cmp DWORD PTR [edx+0x0],esp
  40332e:	test   al,0x8
  403330:	xor    BYTE PTR [ebx],dl
  403332:	in     eax,0x33
  403334:	pop    ebx
  403335:	(bad)  
  403336:	jp     0x4032c8
  403338:	push   ds
  403339:	sbb    eax,0xaa25d85
  40333e:	adc    al,0xd2
  403340:	fisubr WORD PTR [edx]
  403342:	repnz sbb edi,DWORD PTR ds:0x70d126e6
  403349:	mov    ah,0x1b
  40334b:	cmp    esi,DWORD PTR [edi+0x6d]
  40334e:	jg     0x403357
  403350:	and    BYTE PTR [ecx+0x1e],0xce
  403354:	(bad)  
  403355:	pop    edx
  403356:	inc    edx
  403357:	sbb    ebp,eax
  403359:	fs jecxz 0x403395
  40335c:	jecxz  0x403380
  40335e:	mov    ecx,0x19a39916
  403363:	lock adc ah,BYTE PTR [ebp-0xc088370]
  40336a:	push   ebx
  40336b:	je     0x403332
  40336d:	lods   eax,DWORD PTR ds:[esi]
  40336e:	test   eax,0x3edee587
  403373:	pop    esi
  403374:	dec    ebp
  403375:	mov    dl,0xdd
  403377:	mov    DWORD PTR [edx+0x62],ebp
  40337a:	mov    esi,0xe6f8b94c
  40337f:	retf   
  403380:	bound  esp,QWORD PTR [ebp+0x20]
  403383:	and    esp,DWORD PTR [ecx]
  403385:	mov    esp,0xe11e40fb
  40338a:	ins    DWORD PTR es:[edi],dx
  40338b:	arpl   WORD PTR [edi],si
  40338d:	rol    bl,1
  40338f:	pop    DWORD PTR [ecx+edi*4+0x3a6e605]
  403396:	push   edx
  403397:	icebp  
  403398:	sahf   
  403399:	das    
  40339a:	sbb    eax,0xf5b4967a
  40339f:	dec    edx
  4033a0:	fidiv  WORD PTR [ebx]
  4033a2:	(bad)  [ecx+0xda262bc]
  4033a8:	(bad)  
  4033a9:	lahf   
  4033aa:	jmp    0xa89f764a
  4033af:	outs   dx,BYTE PTR ds:[esi]
  4033b0:	test   BYTE PTR ds:0xb92657c0,bh
  4033b6:	jns    0x403358
  4033b8:	(bad)  
  4033b9:	fcomp  DWORD PTR [eax]
  4033bb:	iret   
  4033bc:	fcmovne st,st(5)
  4033be:	sbb    BYTE PTR [ebx+0x65fc46f1],cl
  4033c4:	sub    DWORD PTR [edx],eax
  4033c6:	mov    ecx,0x15e64d7e
  4033cb:	dec    edx
  4033cc:	call   0x79f7:0xf5fdf582
  4033d3:	xor    cl,BYTE PTR [edi+0x3b]
  4033d6:	ror    DWORD PTR [ecx],0x1e
  4033d9:	sbb    al,0x6a
  4033db:	jge    0x4033ef
  4033dd:	push   ecx
  4033de:	pop    eax
  4033df:	fwait
  4033e0:	repnz xor dh,BYTE PTR [edx+0x3a0326e2]
  4033e7:	sbb    edi,DWORD PTR [eax]
  4033e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033ea:	or     ebx,DWORD PTR [ecx+ebp*8+0xdbc3437]
  4033f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033f2:	mov    edi,0x76ce5f62
  4033f7:	xchg   ecx,eax
  4033f8:	fcom   DWORD PTR [ecx+0x3e460796]
  4033fe:	jno    0x403447
  403400:	mov    esi,0x6390adea
  403405:	bound  ecx,QWORD PTR [ebx+0x66f9d27d]
  40340b:	in     al,0xe1
  40340d:	jno    0x403417
  40340f:	pop    esi
  403410:	imul   edi
  403412:	test   DWORD PTR [esi+0x22],ecx
  403415:	sbb    DWORD PTR [ebx-0x2e52f8af],edi
  40341b:	out    dx,al
  40341c:	mov    ds:0x735e5cbb,al
  403421:	loopne 0x40349f
  403423:	pusha  
  403424:	xor    BYTE PTR ds:0xf1714a28,dl
  40342a:	je     0x403422
  40342c:	fsub   QWORD PTR [edi+0x696b6797]
  403432:	lds    edx,FWORD PTR [ecx+edi*8+0x21]
  403436:	pop    ebp
  403437:	adc    eax,DWORD PTR [esi]
  403439:	dec    edx
  40343a:	dec    esp
  40343b:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40343d:	retf   0x6145
  403440:	ret    0xedc0
  403443:	psubd  mm5,mm4
  403446:	fdiv   QWORD PTR [esi]
  403448:	in     eax,dx
  403449:	jmp    0xd3817bf7
  40344e:	int3   
  40344f:	cwde   
  403450:	enter  0x93bb,0xa2
  403454:	mov    ds:0x72feee01,al
  403459:	add    ebx,DWORD PTR [ebx]
  40345b:	mov    eax,ds:0xf73b2676
  403460:	(bad)  
  403461:	test   eax,0x49935a1e
  403466:	enter  0x7f76,0x46
  40346a:	stos   BYTE PTR es:[edi],al
  40346b:	and    eax,0xf00d4152
  403470:	sbb    esi,edx
  403472:	test   BYTE PTR [ebp+0x746448a6],0x8a
  403479:	cmp    al,0x20
  40347b:	xchg   ebx,eax
  40347c:	in     al,dx
  40347d:	pop    ss
  40347e:	mov    esi,0xa9fb2e69
  403483:	jecxz  0x403438
  403485:	cmp    eax,0x78f74d01
  40348a:	enter  0x51e,0x1c
  40348e:	adc    DWORD PTR [ecx+0x66],eax
  403491:	jns    0x4034b0
  403493:	ret    0xebfb
  403496:	mov    ds:0xb353fcbd,al
  40349b:	inc    ebp
  40349c:	xchg   esp,eax
  40349d:	out    0x5e,eax
  40349f:	or     edx,DWORD PTR [edx]
  4034a1:	test   DWORD PTR [edi],0x3cfc1a8e
  4034a7:	push   ds
  4034a8:	in     al,0x3e
  4034aa:	jo     0x403446
  4034ac:	ret    
  4034ad:	xor    al,0xb4
  4034af:	test   ecx,esi
  4034b1:	mov    ah,0x16
  4034b3:	jo     0x4034d5
  4034b5:	xchg   dh,ch
  4034b7:	or     ebx,esi
  4034b9:	jecxz  0x40347d
  4034bb:	rcl    BYTE PTR [edx+0x2],1
  4034be:	stos   DWORD PTR es:[edi],eax
  4034bf:	push   esi
  4034c0:	rol    BYTE PTR [esi+0x16],0x33
  4034c4:	jb     0x4034e9
  4034c6:	aaa    
  4034c7:	adc    BYTE PTR [edx+0x1bdb1679],ch
  4034cd:	inc    ecx
  4034ce:	(bad)  
  4034cf:	fadd   QWORD PTR [edx-0x60]
  4034d2:	jae    0x4034eb
  4034d4:	or     al,0x29
  4034d6:	test   DWORD PTR [esi+0x4c],edx
  4034d9:	cmp    al,BYTE PTR [esi+0x6c]
  4034dc:	xchg   ebp,eax
  4034dd:	mov    ebp,esi
  4034df:	scas   al,BYTE PTR es:[edi]
  4034e0:	out    dx,al
  4034e1:	xchg   ecx,eax
  4034e2:	sbb    BYTE PTR [ebp-0x15b5bcd5],al
  4034e8:	ds lahf 
  4034ea:	cli    
  4034eb:	into   
  4034ec:	mov    eax,ds:0x7e5489a2
  4034f1:	popa   
  4034f2:	or     eax,0xfe2209bc
  4034f7:	inc    ecx
  4034f8:	or     ecx,DWORD PTR [ecx-0x7db1715d]
  4034fe:	call   0x64e7:0x411322cc
  403505:	jo     0x4034d7
  403507:	inc    ebp
  403508:	retf   0x1960
  40350b:	mov    edi,0xa624b0c8
  403510:	enter  0x54ca,0xea
  403514:	xor    DWORD PTR [ebp+0x0],0x61691336
  40351b:	jo     0x40351d
  40351d:	dec    eax
  40351e:	mov    ecx,0x2df33a96
  403523:	sub    dl,al
  403525:	push   esi
  403526:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403528:	fist   WORD PTR [edi]
  40352a:	leave  
  40352b:	and    al,0x6e
  40352d:	adc    DWORD PTR [ecx-0x1f],eax
  403530:	js     0x403525
  403532:	fwait
  403533:	jl     0x4034fb
  403535:	rcl    BYTE PTR [esi],cl
  403537:	aam    0x5e
  403539:	jmp    DWORD PTR [esp+ebp*4+0x47c21723]
  403540:	mov    esp,0x5d4ff4c3
  403545:	sbb    al,0xc8
  403547:	pop    ebp
  403548:	inc    esi
  403549:	pop    ss
  40354a:	fisubr WORD PTR [ebp-0x2ca414]
  403550:	push   ds
  403551:	or     BYTE PTR ds:0xd747e3bc,dh
  403557:	aas    
  403558:	dec    ecx
  403559:	pop    esp
  40355a:	jg     0x40358b
  40355c:	js     0x403515
  40355e:	xchg   esp,eax
  40355f:	pop    ebp
  403560:	pusha  
  403561:	inc    ecx
  403562:	and    DWORD PTR [ebx-0x7ead22ba],edi
  403568:	sahf   
  403569:	iretw  
  40356b:	sti    
  40356c:	int    0x69
  40356e:	idiv   BYTE PTR [esi+0x4]
  403571:	ret    0x9103
  403574:	sub    DWORD PTR [ecx+0x70],esi
  403577:	ins    BYTE PTR es:[edi],dx
  403578:	icebp  
  403579:	nop
  40357a:	je     0x4035d5
  40357c:	fadd   st,st(0)
  40357e:	dec    eax
  40357f:	add    ebx,DWORD PTR [esi]
  403581:	xchg   esi,eax
  403582:	out    dx,al
  403583:	sar    DWORD PTR [edi-0x244c383a],cl
  403589:	cs sti 
  40358b:	and    DWORD PTR [eax],esi
  40358d:	sti    
  40358e:	jle    0x403565
  403590:	adc    BYTE PTR [eax-0x35],cl
  403593:	or     DWORD PTR [eax],ebp
  403595:	lods   al,BYTE PTR ds:[esi]
  403596:	or     eax,0x339a9ebe
  40359b:	cmp    ebp,DWORD PTR ds:0xb3f8dca7
  4035a1:	push   eax
  4035a2:	sbb    esi,DWORD PTR [ecx-0xae8f88c]
  4035a8:	pop    esi
  4035a9:	fistp  DWORD PTR [ebp+0x1c]
  4035ac:	jae    0x4035f9
  4035ae:	fbld   TBYTE PTR [ecx]
  4035b0:	mov    edx,0x7cf802a8
  4035b5:	in     eax,dx
  4035b6:	fld    QWORD PTR [esi+eax*1+0x2f]
  4035ba:	fwait
  4035bb:	add    edx,ebp
  4035bd:	mov    edi,0xd1f68775
  4035c2:	xchg   ecx,eax
  4035c3:	sbb    eax,0x4d13ca10
  4035c8:	ins    DWORD PTR es:[edi],dx
  4035c9:	xchg   esi,eax
  4035ca:	loopne 0x403599
  4035cc:	xor    edi,DWORD PTR [edi+0x491eb4e2]
  4035d2:	mov    ebp,0xb14e1d03
  4035d7:	pushf  
  4035d8:	sub    eax,0xa396906c
  4035dd:	xchg   esp,eax
  4035de:	jmp    0xebb4:0xdd90f272
  4035e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035e6:	(bad)  [esi+0x23]
  4035e9:	pop    eax
  4035ea:	adc    BYTE PTR [edi],0xf6
  4035ed:	pop    eax
  4035ee:	push   cs
  4035ef:	int    0xe0
  4035f1:	lds    edi,FWORD PTR [edi]
  4035f3:	add    BYTE PTR [ebx],dl
  4035f5:	addr16 int3 
  4035f7:	les    esp,FWORD PTR [eax+0x7a]
  4035fa:	jb     0x4035eb
  4035fc:	mov    ebp,gs
  4035fe:	cmc    
  4035ff:	dec    ebx
  403600:	lods   eax,DWORD PTR ds:[esi]
  403601:	dec    edi
  403602:	push   esi
  403603:	fsub   QWORD PTR [ebx+eax*2+0x75]
  403607:	call   0x852:0xde4d2c0c
  40360e:	aaa    
  40360f:	xor    dh,ch
  403611:	mov    BYTE PTR [edx+0x6e],ch
  403614:	leave  
  403615:	push   cs
  403616:	or     BYTE PTR [ecx+0x58942c8e],al
  40361c:	push   eax
  40361d:	jle    0x403669
  40361f:	dec    edx
  403620:	push   ebx
  403621:	push   esi
  403622:	dec    eax
  403623:	dec    eax
  403624:	es hlt 
  403626:	stc    
  403627:	cmp    esp,ecx
  403629:	repz or esp,ebp
  40362c:	aam    0xb5
  40362e:	int3   
  40362f:	pusha  
  403630:	fnstenv [esi+0x7c]
  403633:	adc    al,0x7
  403635:	adc    DWORD PTR [edi-0x62c0ca63],ebx
  40363b:	adc    eax,0x73054e87
  403640:	out    0x1b,eax
  403642:	les    ebp,FWORD PTR [esi+0x52]
  403645:	std    
  403646:	bound  ecx,QWORD PTR [edi+0xb]
  403649:	out    0x6c,eax
  40364b:	and    eax,0x2db65848
  403650:	popf   
  403651:	mov    ds:0x8f6ab5ed,eax
  403656:	mov    WORD PTR [esi+ebx*4-0x64cd223c],fs
  40365d:	push   ss
  40365e:	sbb    ebp,DWORD PTR [esi+0x43024dc0]
  403664:	sbb    ecx,DWORD PTR [edi]
  403666:	ss lock in eax,dx
  403669:	cwde   
  40366a:	cmp    BYTE PTR [edx+0x71],ch
  40366d:	mov    ds:0x7d665d60,eax
  403672:	dec    edi
  403673:	pop    ss
  403674:	xor    DWORD PTR [esi],0x20c055e1
  40367a:	std    
  40367b:	sub    eax,0xb648f6a3
  403680:	in     al,0x6d
  403682:	(bad)  
  403683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403684:	into   
  403685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403686:	pop    esi
  403687:	mov    edi,0xf328bbd2
  40368c:	dec    ebp
  40368d:	jae    0x403684
  40368f:	adc    edx,0xb9a89dab
  403695:	bound  ebp,QWORD PTR [esi-0x60]
  403698:	cwde   
  403699:	mov    ecx,0x4c7915c0
  40369e:	cmp    DWORD PTR [edx],ebp
  4036a0:	mov    esp,0x97f8617a
  4036a5:	jnp    0x403671
  4036a7:	cld    
  4036a8:	inc    esi
  4036a9:	xchg   esp,eax
  4036aa:	(bad)  
  4036ab:	and    ah,BYTE PTR [ebx]
  4036ad:	dec    esp
  4036ae:	out    0xa2,eax
  4036b0:	fld    TBYTE PTR [edi]
  4036b2:	popa   
  4036b3:	or     BYTE PTR [eax+0x59],0x82
  4036b7:	into   
  4036b8:	sti    
  4036b9:	out    0xcb,al
  4036bb:	sub    DWORD PTR ds:0xe86db279,ecx
  4036c1:	das    
  4036c2:	imul   ebx,DWORD PTR [ebp-0x25],0xfffffff7
  4036c6:	int    0x5c
  4036c8:	sbb    eax,0xb4a145df
  4036cd:	sub    esi,DWORD PTR ds:0xd5854f8e
  4036d3:	inc    eax
  4036d4:	cmp    esp,DWORD PTR [ecx]
  4036d6:	pop    ebx
  4036d7:	push   ecx
  4036d8:	push   ss
  4036d9:	pop    ecx
  4036da:	fild   QWORD PTR [edi+0x66]
  4036dd:	jp     0x403739
  4036df:	das    
  4036e0:	mov    DWORD PTR [edx],edi
  4036e2:	inc    esp
  4036e3:	pop    esp
  4036e4:	das    
  4036e5:	cli    
  4036e6:	push   esp
  4036e7:	iret   
  4036e8:	jge    0x4036d3
  4036ea:	addr16 sbb eax,0xa51c5c3e
  4036f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036f1:	pop    ecx
  4036f2:	mov    ds:0x8929158b,al
  4036f7:	push   esi
  4036f8:	shl    BYTE PTR [esp+edx*2-0x77642dee],cl
  4036ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403700:	in     al,0xe1
  403702:	push   ebx
  403703:	mov    bl,BYTE PTR [eax]
  403705:	int    0x4f
  403707:	outs   dx,DWORD PTR ds:[esi]
  403708:	add    DWORD PTR [ebx+0x4da2440b],esp
  40370e:	and    eax,0x4d1a3805
  403713:	and    BYTE PTR [ebx],cl
  403715:	arpl   WORD PTR [ebp+0x24],cx
  403718:	mov    dh,0x98
  40371a:	fidivr WORD PTR [ecx+0x1e7f81ec]
  403720:	jg     0x403739
  403722:	mov    ds:0xbd0acd51,eax
  403727:	or     ebx,esp
  403729:	pop    eax
  40372a:	shl    BYTE PTR [edx+0x5ccd5a51],1
  403730:	(bad)  
  403731:	(bad)  
  403732:	pop    esp
  403733:	mov    cl,0x2d
  403735:	loope  0x4036ba
  403737:	dec    esi
  403738:	test   al,0xcf
  40373a:	or     bh,BYTE PTR [esp+edi*8+0x3bf5255f]
  403741:	or     bh,al
  403743:	xchg   BYTE PTR [esi+0x33],bl
  403746:	add    BYTE PTR [eax+0x48],ch
  403749:	sbb    eax,0x7e24eb1c
  40374e:	dec    esi
  40374f:	inc    ebx
  403750:	inc    ebp
  403751:	dec    edi
  403752:	adc    bl,bl
  403754:	ins    DWORD PTR es:[edi],dx
  403755:	pop    esp
  403756:	cli    
  403757:	les    ecx,FWORD PTR [esp+edi*2-0x6a]
  40375b:	pop    eax
  40375c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40375d:	mov    eax,0xd0b65ecc
  403762:	xchg   ebp,eax
  403763:	rcl    esi,cl
  403765:	jecxz  0x40377f
  403767:	pop    edi
  403768:	out    dx,eax
  403769:	ins    DWORD PTR es:[edi],dx
  40376a:	sahf   
  40376b:	fdivr  QWORD PTR [esi-0x10741850]
  403771:	sbb    dl,bh
  403773:	cld    
  403774:	ret    0xe842
  403777:	stos   BYTE PTR es:[edi],al
  403778:	inc    edx
  403779:	pushf  
  40377a:	xor    DWORD PTR [edi-0x6b],0xc23ac14b
  403781:	(bad)  
  403782:	aaa    
  403783:	loope  0x4037e2
  403785:	add    DWORD PTR [esi],ebp
  403787:	push   ecx
  403788:	lock test eax,0x39fadbe5
  40378e:	sub    eax,0x30f06c0f
  403793:	push   esi
  403794:	imul   ebp,edx,0xab2cca66
  40379a:	push   cs
  40379b:	pop    ds
  40379c:	pop    esp
  40379d:	sub    BYTE PTR [edx-0x5a2c340e],0xef
  4037a4:	out    dx,al
  4037a5:	dec    edi
  4037a6:	add    esp,DWORD PTR [ecx-0x46964737]
  4037ac:	xlat   BYTE PTR ds:[ebx]
  4037ad:	rol    ah,0x4c
  4037b0:	and    ch,cl
  4037b2:	add    eax,0x408a690f
  4037b7:	sbb    BYTE PTR [esi+0x5a],ch
  4037ba:	or     DWORD PTR [ecx-0x26],0x18
  4037be:	cs icebp 
  4037c0:	test   al,0x4c
  4037c2:	test   al,0x42
  4037c4:	add    edi,ebp
  4037c6:	ins    DWORD PTR es:[edi],dx
  4037c7:	mov    ecx,0x51b4bece
  4037cc:	xchg   edx,eax
  4037cd:	and    DWORD PTR [ecx-0x66],0x78
  4037d1:	nop
  4037d2:	ja     0x4037f8
  4037d4:	daa    
  4037d5:	mov    edx,0xb203cf9
  4037da:	outs   dx,BYTE PTR ds:[esi]
  4037db:	arpl   WORD PTR [ebx-0x1d07d14c],sp
  4037e1:	add    eax,0x80156151
  4037e6:	adc    eax,edx
  4037e8:	shr    DWORD PTR [edx+0x6c],cl
  4037eb:	cmp    BYTE PTR [eax-0x16],dh
  4037ee:	repz in eax,dx
  4037f0:	loopne 0x4037a7
  4037f2:	hlt    
  4037f3:	push   ebx
  4037f4:	inc    esp
  4037f5:	add    eax,0x3a405907
  4037fa:	ret    
  4037fb:	mov    ds:0xd0a2f935,eax
  403800:	xchg   esi,eax
  403801:	dec    ebx
  403802:	retf   
  403803:	xor    BYTE PTR [ecx+0x2a245221],bl
  403809:	lock popa 
  40380b:	ror    BYTE PTR [edi+ebp*2+0x28],0x89
  403810:	repnz in eax,0x26
  403813:	dec    edx
  403814:	push   0xffffffa7
  403816:	sub    DWORD PTR [eax+eax*4+0x7c8244c0],eax
  40381d:	in     al,0x8b
  40381f:	push   edi
  403820:	pop    ss
  403821:	sbb    esi,ebp
  403823:	jbe    0x403890
  403825:	cld    
  403826:	xchg   edx,eax
  403827:	adc    eax,0x1acce95a
  40382c:	in     eax,0xaa
  40382e:	and    ch,BYTE PTR [ebx+0x57ea47ba]
  403834:	or     dh,BYTE PTR [edx+0x35]
  403837:	repnz push ebx
  403839:	imul   BYTE PTR [edi+0xeef0548]
  40383f:	sar    BYTE PTR [eax],cl
  403841:	(bad)  
  403842:	out    dx,eax
  403843:	fs inc ecx
  403845:	call   0xe620:0xe79aeacb
  40384c:	and    al,0xef
  40384e:	popf   
  40384f:	add    al,0x54
  403851:	fiadd  WORD PTR [ebx+esi*2]
  403854:	push   cs
  403855:	sub    DWORD PTR [ecx],esp
  403857:	push   es
  403858:	js     0x403886
  40385a:	add    cl,dh
  40385c:	sbb    al,0x5a
  40385e:	pop    edi
  40385f:	data16 xlat BYTE PTR ds:[ebx]
  403861:	ins    BYTE PTR es:[edi],dx
  403862:	sbb    al,0x97
  403864:	pop    edi
  403865:	popf   
  403866:	call   0x3664:0x37dfbc28
  40386d:	jne    0x4038ed
  40386f:	push   es
  403870:	jmp    0xb4126db5
  403875:	popf   
  403876:	push   ss
  403877:	push   cs
  403878:	sbb    al,BYTE PTR [edi]
  40387a:	adc    bh,dl
  40387c:	jno    0x403853
  40387e:	push   esi
  40387f:	cdq    
  403880:	xor    al,0xcd
  403882:	pop    edx
  403883:	ds cwde 
  403885:	retf   
  403886:	pop    ebx
  403887:	xchg   ebx,eax
  403888:	dec    ebx
  403889:	and    ecx,DWORD PTR [edx+0x49]
  40388c:	gs aad 0xe5
  40388f:	test   BYTE PTR [ebx-0x4a],0xb6
  403893:	lds    edi,FWORD PTR [edx]
  403895:	mov    bh,0x1f
  403897:	leave  
  403898:	xchg   esi,eax
  403899:	jbe    0x403879
  40389b:	push   esp
  40389c:	pop    es
  40389d:	pop    es
  40389e:	cld    
  40389f:	jecxz  0x403839
  4038a1:	lock leave 
  4038a3:	jae    0x403862
  4038a5:	jle    0x40385a
  4038a7:	push   edx
  4038a8:	stos   DWORD PTR es:[edi],eax
  4038a9:	jae    0x403896
  4038ab:	fchs   
  4038ad:	ins    BYTE PTR es:[edi],dx
  4038ae:	add    al,0xd3
  4038b0:	nop
  4038b1:	aam    0xf6
  4038b3:	inc    ebp
  4038b4:	out    0x69,eax
  4038b6:	dec    esi
  4038b7:	push   edx
  4038b8:	pop    ebx
  4038b9:	in     al,0x33
  4038bb:	inc    ebp
  4038bc:	inc    eax
  4038bd:	push   ds
  4038be:	cmp    eax,0x2a824c78
  4038c3:	xor    DWORD PTR [edi],ebx
  4038c5:	push   esp
  4038c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038c7:	inc    edi
  4038c8:	(bad)
  4038cb:	outs   dx,BYTE PTR ds:[esi]
  4038cc:	lds    edi,FWORD PTR [ebx]
  4038ce:	pusha  
  4038cf:	and    DWORD PTR [edx-0x40],0x33
  4038d3:	dec    esi
  4038d4:	jp     0x4038a6
  4038d6:	(bad)  
  4038d7:	(bad)  
  4038d8:	pop    edi
  4038d9:	arpl   bp,bp
  4038db:	in     eax,0xd0
  4038dd:	xor    ecx,DWORD PTR [esi+0x376d09f1]
  4038e3:	rcr    esi,cl
  4038e5:	sbb    DWORD PTR [ecx],esi
  4038e7:	inc    ebx
  4038e8:	lea    edi,[ebx-0x69]
  4038eb:	xchg   edi,eax
  4038ec:	jp     0x4038bd
  4038ee:	vandpd ymm1,ymm6,YMMWORD PTR es:[ecx]
  4038f3:	sub    DWORD PTR [eax-0x39b22e22],esp
  4038f9:	jmp    0x403964
  4038fb:	fsub   DWORD PTR [edx-0x20]
  4038fe:	iret   
  4038ff:	repnz xchg edx,eax
  403901:	sbb    ebx,DWORD PTR [ecx]
  403903:	lods   eax,DWORD PTR ds:[esi]
  403904:	add    al,0xdd
  403906:	shl    dl,1
  403908:	xlat   BYTE PTR ds:[ebx]
  403909:	xor    ebx,edi
  40390b:	imul   ebp,edx,0x7a
  40390e:	mov    ah,0x5
  403910:	mov    al,0x3b
  403912:	jbe    0x40396b
  403914:	xchg   edx,eax
  403915:	retf   0x3947
  403918:	add    eax,0xfbb2757a
  40391d:	repz (bad) 
  40391f:	(bad)
  403923:	and    dl,dl
  403925:	sub    DWORD PTR [edx-0x4c],edx
  403928:	adc    ch,BYTE PTR [ecx]
  40392a:	js     0x40397a
  40392c:	push   cs
  40392d:	rcr    DWORD PTR [esi],cl
  40392f:	dec    edi
  403930:	(bad)  [esi]
  403932:	mov    cl,0x6d
  403934:	push   esi
  403935:	inc    edi
  403936:	mov    bl,0x4e
  403938:	mov    ecx,0x49a1b983
  40393d:	cmp    eax,0x8b60d94a
  403942:	(bad)  
  403944:	xor    DWORD PTR [edi],esi
  403946:	sbb    al,0xfd
  403948:	cmp    BYTE PTR [ecx+eiz*2],bl
  40394b:	test   BYTE PTR [esi+0x4d921f7d],dl
  403951:	int    0x5b
  403953:	nop
  403954:	icebp  
  403955:	jbe    0x403907
  403957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403958:	scas   al,BYTE PTR es:[edi]
  403959:	push   eax
  40395a:	shl    BYTE PTR [edi-0x31d73961],cl
  403960:	jg     0x40396d
  403962:	add    al,0xf9
  403964:	mov    ch,0xf9
  403966:	rcr    dh,1
  403968:	dec    esi
  403969:	dec    edi
  40396a:	aam    0xfc
  40396c:	test   eax,0xd7373ebd
  403971:	cmp    eax,DWORD PTR [esi]
  403973:	xchg   ebp,eax
  403974:	or     al,0x3a
  403976:	and    al,0x22
  403978:	js     0x40394a
  40397a:	loopne 0x4039a8
  40397c:	inc    ebp
  40397d:	shl    BYTE PTR [esi-0x65],1
  403980:	mov    esp,0xc4a5daaa
  403985:	and    BYTE PTR [edx+edx*4-0x7b640c55],al
  40398c:	retf   0xba6f
  40398f:	mov    esi,edx
  403991:	lahf   
  403992:	and    bh,bl
  403994:	shr    BYTE PTR [ebx+esi*2-0x6e],cl
  403998:	bndldx (bad),[ebp-0x2b]
  40399c:	aad    0x56
  40399e:	jecxz  0x403967
  4039a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039a1:	ins    BYTE PTR es:[edi],dx
  4039a2:	(bad)  
  4039a3:	fidivr WORD PTR [eax]
  4039a5:	daa    
  4039a6:	aaa    
  4039a7:	int3   
  4039a8:	xchg   ebx,eax
  4039a9:	xchg   ebx,eax
  4039aa:	sbb    dh,cl
  4039ac:	xchg   esi,eax
  4039ad:	xchg   ebx,eax
  4039ae:	mov    dh,0x11
  4039b0:	ja     0x40399b
  4039b2:	(bad)  
  4039b3:	out    0xe5,al
  4039b5:	xchg   ebp,eax
  4039b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039b7:	imul   esp,DWORD PTR [ebx+ebp*8+0x7bbf2df5],0x54
  4039bf:	push   esi
  4039c0:	lods   al,BYTE PTR ds:[esi]
  4039c1:	je     0x4039d8
  4039c3:	add    DWORD PTR [edi],eax
  4039c5:	jge    0x403a40
  4039c7:	adc    al,0x47
  4039c9:	inc    ebx
  4039ca:	xchg   edi,eax
  4039cb:	jp     0x40394e
  4039cd:	pop    ebp
  4039ce:	and    esi,ebp
  4039d0:	into   
  4039d1:	sub    ch,BYTE PTR [esi-0xb6de9e3]
  4039d7:	aam    0xf8
  4039d9:	xor    BYTE PTR [ebp-0x7f],bl
  4039dc:	cli    
  4039dd:	icebp  
  4039de:	adc    DWORD PTR [edx+0xd],edx
  4039e1:	or     dl,dh
  4039e3:	adc    al,0x5
  4039e5:	mov    edx,0x2b5ecf61
  4039ea:	mov    esi,0x47418002
  4039ef:	or     ebp,DWORD PTR [ebx+edi*2+0x22]
  4039f3:	test   BYTE PTR [ebp-0x36504f27],bl
  4039f9:	xchg   esi,eax
  4039fa:	out    0xa6,eax
  4039fc:	in     eax,dx
  4039fd:	xor    BYTE PTR [ebx+esi*1-0x5767f41],dl
  403a04:	or     eax,0xa47a7b66
  403a09:	and    ah,BYTE PTR [edx+ebp*2]
  403a0c:	dec    edi
  403a0d:	inc    ecx
  403a0e:	loopne 0x403a71
  403a10:	mov    cl,BYTE PTR [edx+0x25]
  403a13:	jg     0x403a6c
  403a15:	cs xor edx,ecx
  403a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a19:	pavgb  mm7,QWORD PTR ds:0x1496a246
  403a20:	lods   eax,DWORD PTR ds:[esi]
  403a21:	jle    0x4039c6
  403a23:	xchg   BYTE PTR [edx-0x6af0eb6e],ch
  403a29:	mov    eax,0x88da024b
  403a2e:	inc    esp
  403a2f:	add    ebx,ebp
  403a31:	lds    esi,FWORD PTR [eax+0x21]
  403a34:	mov    edx,0x2fd1d84f
  403a39:	push   eax
  403a3a:	clc    
  403a3b:	shr    DWORD PTR [ebx],1
  403a3d:	repz imul bp,bx,0x99dc
  403a43:	cli    
  403a44:	pop    edi
  403a45:	enter  0x3278,0xbd
  403a49:	fcomp  QWORD PTR [edi+0xac0645f]
  403a4f:	dec    ebp
  403a50:	test   ebx,edx
  403a52:	sbb    eax,0xb8bbc455
  403a57:	call   0x1305:0x2b0d45b
  403a5e:	rcl    cl,0xd2
  403a61:	cmp    BYTE PTR [esi],ah
  403a63:	enter  0xb2e,0x27
  403a67:	sar    BYTE PTR [ebx],1
  403a69:	xchg   esi,eax
  403a6a:	mov    cl,al
  403a6c:	sub    esi,DWORD PTR fs:[esi+0x56]
  403a70:	dec    eax
  403a71:	xchg   esp,eax
  403a72:	test   ch,ch
  403a74:	pop    ecx
  403a75:	(bad)  
  403a76:	xchg   esi,eax
  403a77:	inc    edi
  403a79:	and    al,0xc9
  403a7b:	sub    al,0x86
  403a7d:	mov    ds:0xb33d3d4b,eax
  403a82:	xchg   BYTE PTR [ebp-0x34],bl
  403a85:	jecxz  0x403ad8
  403a87:	jl     0x403af4
  403a89:	cli    
  403a8a:	pop    es
  403a8b:	retf   0x56ca
  403a8e:	rol    DWORD PTR [eax+ebx*2-0x12476405],0xf
  403a96:	addr16 jmp 0x383cd52e
  403a9c:	das    
  403a9d:	sub    ebx,edi
  403a9f:	mov    ds,WORD PTR [ebp-0x643f40b6]
  403aa5:	xor    eax,0xcfce6c8f
  403aaa:	call   0x2379:0xe70ea3cd
  403ab1:	xor    eax,0xaa4d26e5
  403ab6:	inc    edi
  403ab7:	test   BYTE PTR [ecx+0x6e1da36c],bl
  403abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403abe:	jmp    0x30602207
  403ac3:	lea    esi,[ebx+0x6c6ccd01]
  403ac9:	fist   DWORD PTR [esi+0x6a2cf3e5]
  403acf:	dec    eax
  403ad0:	in     eax,0xc3
  403ad2:	mov    BYTE PTR [edx+0x627cb948],0x81
  403ad9:	call   0x7941:0xa5bba920
  403ae0:	push   edi
  403ae1:	(bad)  
  403ae2:	ds loop 0x403abc
  403ae5:	mov    edx,0x4d874d21
  403aea:	stos   BYTE PTR es:[edi],al
  403aeb:	jmp    0x5a48cd44
  403af0:	adc    al,BYTE PTR [eax+0x6c09cd3]
  403af6:	(bad)  
  403af7:	fidivr DWORD PTR [edi-0x3487c6fe]
  403afd:	hlt    
  403afe:	xlat   BYTE PTR ds:[ebx]
  403aff:	jno    0x403b70
  403b01:	push   ebx
  403b02:	out    0x6a,eax
  403b04:	jae    0x403b72
  403b06:	add    bl,bl
  403b08:	and    DWORD PTR [eax],ecx
  403b0a:	push   ss
  403b0b:	mov    ch,0x47
  403b0d:	icebp  
  403b0e:	cmp    al,0xb3
  403b10:	xor    al,0xce
  403b12:	test   al,0x73
  403b14:	popf   
  403b15:	sbb    DWORD PTR [eax-0xdd8d73d],esi
  403b1b:	loopne 0x403ae6
  403b1d:	push   ecx
  403b1e:	or     edi,DWORD PTR [ecx+0x57c65f6e]
  403b24:	hlt    
  403b25:	dec    esp
  403b26:	mov    dl,0xc7
  403b28:	sbb    eax,0xbb5e59ad
  403b2d:	jns    0x403b0d
  403b2f:	call   0xc0f8bd51
  403b34:	or     BYTE PTR [ebx+0x65],cl
  403b37:	inc    ecx
  403b38:	mov    DWORD PTR [esi+0x19eeafe0],ecx
  403b3e:	mov    dh,0xcb
  403b40:	shl    BYTE PTR [ebp-0x12],1
  403b43:	cmp    al,0x68
  403b45:	fcmovbe st,st(1)
  403b47:	adc    bh,BYTE PTR [ebx]
  403b49:	inc    edx
  403b4a:	jp     0x403b2a
  403b4c:	call   0x8e10b5a8
  403b51:	dec    edx
  403b52:	clc    
  403b53:	push   eax
  403b54:	rcl    BYTE PTR [eax],1
  403b56:	jne    0x403bb1
  403b58:	mov    bl,0x68
  403b5a:	in     eax,0xd
  403b5c:	ret    0xe288
  403b5f:	outs   dx,BYTE PTR ds:[esi]
  403b60:	mov    dl,BYTE PTR [esi+0x2a]
  403b63:	cld    
  403b64:	inc    esi
  403b65:	cmp    BYTE PTR [ecx],bl
  403b67:	gs push es
  403b69:	or     DWORD PTR [ebx+ebp*1-0x1cb4705c],ecx
  403b70:	nop
  403b71:	mov    eax,ss:0x7fa62135
  403b77:	(bad)  
  403b78:	fwait
  403b79:	mov    edi,0x2697ca79
  403b7e:	pop    esi
  403b7f:	enter  0xbb57,0xaf
  403b83:	sub    al,0xcb
  403b85:	ret    
  403b86:	cld    
  403b87:	mov    dl,0x47
  403b89:	sub    eax,0xead11472
  403b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b8f:	ja     0x403b5a
  403b91:	repnz cdq 
  403b93:	(bad)  
  403b94:	mov    ecx,0x1b025eb9
  403b99:	pop    esp
  403b9a:	mov    ds:0x80dbe55b,al
  403b9f:	mov    ah,0xed
  403ba1:	call   0x6bed9512
  403ba6:	sbb    BYTE PTR [edx-0x1],dh
  403ba9:	xor    bl,BYTE PTR [edi-0x44098daa]
  403baf:	jmp    0x498b:0xcf1d2db2
  403bb6:	adc    cl,dl
  403bb8:	test   eax,0x9fe0a3fb
  403bbd:	pushf  
  403bbe:	pop    ebp
  403bbf:	int    0x1e
  403bc1:	jl     0x403c20
  403bc3:	jmp    0x403c1b
  403bc5:	ss loop 0x403c05
  403bc8:	xlat   BYTE PTR ds:[ebx]
  403bc9:	clc    
  403bca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bcb:	jo     0x403c30
  403bcd:	push   0xffffffb9
  403bcf:	xor    esp,DWORD PTR [ebp-0x1e0f8a6d]
  403bd5:	jnp    0x403b73
  403bd7:	push   ss
  403bd8:	inc    eax
  403bd9:	xchg   ebx,eax
  403bda:	sahf   
  403bdb:	pop    esi
  403bdc:	cmc    
  403bdd:	jl     0x403c56
  403bdf:	jno    0x403bc7
  403be1:	inc    ebp
  403be2:	cmp    edx,ebp
  403be4:	inc    esi
  403be5:	or     eax,0x7a8099f8
  403bea:	pushf  
  403beb:	sbb    DWORD PTR [eax+0x502bcc61],esp
  403bf1:	jo     0x403bf6
  403bf3:	and    BYTE PTR [ecx+edi*4+0x66],al
  403bf7:	mov    al,ds:0x195d358d
  403bfc:	jbe    0x403c00
  403bfe:	xor    edx,DWORD PTR [edi]
  403c00:	push   edi
  403c01:	dec    edi
  403c02:	mov    ah,0x12
  403c04:	psrad  mm0,QWORD PTR [ebp+0x5cbe26e7]
  403c0b:	and    ebx,DWORD PTR [eax-0x4d1ce77e]
  403c11:	mov    ch,0x24
  403c13:	call   0xbf8e5968
  403c18:	in     eax,dx
  403c19:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  403c1b:	bnd ja 0x403bdc
  403c1e:	enter  0x4e2d,0xb
  403c22:	mov    bl,0x79
  403c24:	retf   0x99bc
  403c27:	push   eax
  403c28:	and    eax,0x869b2517
  403c2d:	push   es
  403c2e:	or     cl,0xa6
  403c31:	fwait
  403c32:	cld    
  403c33:	out    0x85,al
  403c35:	div    BYTE PTR [ecx-0x49761131]
  403c3b:	int3   
  403c3c:	pop    ds
  403c3d:	fldcw  WORD PTR ss:[edi+0x6673c13]
  403c44:	jg     0x403be5
  403c46:	push   ebp
  403c47:	scas   al,BYTE PTR es:[edi]
  403c48:	dec    edx
  403c49:	xor    edi,esp
  403c4b:	pop    eax
  403c4c:	and    ebx,esp
  403c4e:	mov    bh,0xc2
  403c50:	add    edi,DWORD PTR ds:0x36088f4a
  403c56:	por    mm3,QWORD PTR [ebx+0x1bb71fca]
  403c5d:	jg     0x403be7
  403c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c60:	dec    eax
  403c61:	ret    0x7e50
  403c64:	sahf   
  403c65:	adc    BYTE PTR [ebx+eax*4-0x73],dl
  403c69:	inc    ebx
  403c6a:	cmp    ch,BYTE PTR [edi-0x1f]
  403c6d:	jne    0x403c7b
  403c6f:	jmp    0x317f:0x44429a7b
  403c76:	mov    eax,0x85e7a448
  403c7b:	inc    edi
  403c7c:	push   ebx
  403c7d:	jp     0x403cf2
  403c7f:	leave  
  403c80:	(bad)  
  403c81:	mov    dh,0x22
  403c83:	add    eax,ebx
  403c85:	push   esp
  403c86:	cdq    
  403c87:	cwde   
  403c88:	and    DWORD PTR [esi+0xdc65892],esp
  403c8e:	xchg   ah,al
  403c90:	pusha  
  403c91:	fwait
  403c92:	pop    ecx
  403c93:	xchg   esi,eax
  403c94:	js     0x403cce
  403c96:	stos   BYTE PTR es:[edi],al
  403c97:	inc    edi
  403c98:	jno    0x403cb3
  403c9a:	and    BYTE PTR ds:0xe118b1ba,0x54
  403ca1:	mov    al,0x77
  403ca3:	pop    edi
  403ca4:	test   al,0xa6
  403ca6:	inc    edi
  403ca7:	imul   eax,edx,0x37b22c4d
  403cad:	mov    dl,0xf1
  403caf:	stos   BYTE PTR es:[edi],al
  403cb0:	push   es
  403cb1:	in     eax,dx
  403cb2:	int3   
  403cb3:	cmp    esi,eax
  403cb5:	or     al,0x15
  403cb7:	imul   edi,DWORD PTR [ebp+0x4d39fd90],0xffffffb1
  403cbe:	sub    eax,0xf471710
  403cc3:	inc    eax
  403cc4:	dec    eax
  403cc5:	mov    esi,esp
  403cc7:	aam    0x30
  403cc9:	outs   dx,DWORD PTR ds:[esi]
  403cca:	ss cmp bl,bl
  403ccd:	(bad)  
  403cce:	jmp    0xb56:0xeaee7ecb
  403cd5:	pop    ebx
  403cd6:	clc    
  403cd7:	pop    ds
  403cd8:	cli    
  403cd9:	jbe    0x403c9b
  403cdb:	sub    esp,DWORD PTR cs:[edx-0x48]
  403cdf:	dec    ebx
  403ce0:	jecxz  0x403d3d
  403ce2:	ja     0x403d15
  403ce4:	or     DWORD PTR [edi],ebp
  403ce6:	(bad)  
  403ce8:	pop    es
  403ce9:	and    eax,0x72159b20
  403cee:	aam    0xb1
  403cf0:	inc    edi
  403cf1:	jmp    0x6719f21b
  403cf6:	jne    0x403cd9
  403cf8:	xchg   ecx,eax
  403cf9:	jmp    0xb367:0x804f69fb
  403d00:	pop    ebx
  403d01:	push   ebp
  403d02:	pop    ss
  403d03:	jo     0x403c8a
  403d05:	sbb    eax,0x2860e933
  403d0a:	adc    DWORD PTR [esi],edi
  403d0c:	push   ds
  403d0d:	mov    ecx,0x2ed48124
  403d12:	iret   
  403d13:	retf   
  403d14:	or     edi,esp
  403d16:	mov    bl,0x5d
  403d18:	imul   esi,DWORD PTR [esp+eax*2],0xffffffc3
  403d1c:	jmp    0x3fbf77d1
  403d21:	dec    eax
  403d22:	xor    al,BYTE PTR [ebx]
  403d24:	ror    DWORD PTR [eax-0x1a5de5c4],cl
  403d2a:	push   ss
  403d2b:	lods   eax,DWORD PTR ds:[esi]
  403d2c:	dec    eax
  403d2d:	pop    esp
  403d2e:	imul   esi,DWORD PTR [ebp-0x3b56d8af],0xf02d3ac7
  403d38:	inc    esp
  403d39:	rcl    DWORD PTR [esi+edx*1-0x3e],cl
  403d3d:	xlat   BYTE PTR ds:[ebx]
  403d3e:	sbb    edx,ebp
  403d40:	inc    esi
  403d41:	dec    ebx
  403d42:	pushf  
  403d43:	cmp    esp,ebx
  403d45:	pushf  
  403d46:	jae    0x403ce5
  403d48:	dec    ecx
  403d49:	test   bh,dl
  403d4b:	inc    edi
  403d4c:	xor    BYTE PTR [esi-0xf4436c5],cl
  403d52:	or     al,0x7f
  403d54:	icebp  
  403d55:	dec    eax
  403d56:	test   DWORD PTR [ecx+esi*4+0x2a68fcdd],esp
  403d5d:	stos   DWORD PTR es:[edi],eax
  403d5e:	ror    DWORD PTR [edi+0x363577b6],0x5a
  403d65:	cmp    BYTE PTR [esi],0xe5
  403d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d69:	cmp    ebx,edx
  403d6b:	mov    ds:0x4f50eeea,al
  403d70:	dec    ecx
  403d71:	cdq    
  403d72:	adc    dh,BYTE PTR [eax-0x69bc3dac]
  403d78:	out    0x1d,eax
  403d7a:	mov    DWORD PTR [esi+0xa872ceb],edi
  403d80:	jae    0x403de6
  403d82:	sub    eax,0xe07ec76e
  403d87:	imul   ecx,DWORD PTR [edi+0x7],0x86357e67
  403d8e:	jmp    0x337f6ae6
  403d93:	add    BYTE PTR [ecx],dh
  403d95:	mov    ecx,0x1b928ed4
  403d9a:	or     dl,BYTE PTR [edx+0x74]
  403d9d:	jno    0x403dc9
  403d9f:	xchg   BYTE PTR [eax-0x77adfbbb],dl
  403da5:	jl     0x403daa
  403da7:	dec    esi
  403da8:	int    0x3d
  403daa:	mov    cl,0x7c
  403dac:	adc    al,0x49
  403dae:	sbb    al,0x2c
  403db0:	lahf   
  403db1:	(bad)  
  403db2:	out    dx,eax
  403db3:	sbb    edx,edx
  403db5:	stos   DWORD PTR es:[edi],eax
  403db6:	sbb    al,0x8e
  403db8:	retf   0x5318
  403dbb:	mov    esi,0x5c5f865f
  403dc0:	pop    es
  403dc1:	push   edi
  403dc2:	dec    ebp
  403dc3:	aad    0xa1
  403dc5:	in     eax,dx
  403dc6:	stc    
  403dc7:	jp     0x403d86
  403dc9:	pop    esi
  403dca:	and    DWORD PTR [ebx],ecx
  403dcc:	xchg   edx,eax
  403dcd:	and    BYTE PTR [ecx-0x55],al
  403dd0:	pop    eax
  403dd1:	retf   0xccaf
  403dd4:	lock add BYTE PTR [ecx+0x77],dh
  403dd8:	fcomp  DWORD PTR [esi+ebp*1]
  403ddb:	(bad)  
  403ddc:	rol    BYTE PTR [ecx-0x61],cl
  403ddf:	dec    ecx
  403de0:	push   ecx
  403de1:	leave  
  403de2:	or     DWORD PTR [edx-0x68],0x23
  403de6:	sbb    al,0x6b
  403de8:	loopne 0x403dfb
  403dea:	imul   ecx,DWORD PTR ds:0xd0bf91d8,0x749c9400
  403df4:	xchg   edi,eax
  403df5:	scas   al,BYTE PTR es:[edi]
  403df6:	mov    ch,0xa3
  403df8:	xchg   ecx,eax
  403df9:	jmp    0x403d98
  403dfb:	ret    
  403dfc:	je     0x403dfb
  403dfe:	out    dx,eax
  403dff:	loopne 0x403e1b
  403e01:	mov    ch,0x53
  403e03:	ss mov al,0x4e
  403e06:	push   0xe7cb55e1
  403e0b:	daa    
  403e0c:	dec    ebp
  403e0d:	jns    0x403dcd
  403e0f:	sar    DWORD PTR [ecx],cl
  403e11:	or     eax,0xba967ea6
  403e16:	ret    
  403e17:	push   edx
  403e18:	enter  0x9376,0xe0
  403e1c:	mov    edi,0x30ac78b7
  403e21:	div    BYTE PTR [edi+ebp*4-0x463267d3]
  403e28:	sub    DWORD PTR [ecx-0x18],ebp
  403e2b:	xchg   edi,eax
  403e2d:	cmp    al,cl
  403e2f:	sub    BYTE PTR [ebx],ch
  403e31:	cmp    esi,DWORD PTR [ebx]
  403e33:	mov    eax,ds:0x3916c06d
  403e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e39:	retf   
  403e3a:	loop   0x403e70
  403e3c:	test   eax,0x25aa28ad
  403e41:	adc    ah,al
  403e43:	push   edx
  403e44:	inc    ecx
  403e45:	jmp    0x403e1b
  403e47:	sbb    DWORD PTR [edi+0x41],0xffffff84
  403e4b:	pop    esi
  403e4c:	in     al,0x62
  403e4e:	jp     0x403e93
  403e50:	lods   al,BYTE PTR ds:[esi]
  403e51:	imul   eax,edi,0x6c
  403e54:	sub    esp,0x6b265824
  403e5a:	loopne 0x403e62
  403e5c:	bound  edx,QWORD PTR [ecx]
  403e5e:	sti    
  403e5f:	mov    dl,0x8d
  403e61:	imul   ecx,DWORD PTR cs:[edx],0x17
  403e65:	aad    0xfc
  403e67:	test   eax,0x9c76cfd0
  403e6c:	cmc    
  403e6d:	push   cs
  403e6e:	jbe    0x403e01
  403e70:	pop    ecx
  403e71:	mov    ds:0xd41fe6a1,al
  403e76:	mov    edi,0x5bca6b05
  403e7b:	or     edi,DWORD PTR ds:0x6867711b
  403e81:	clc    
  403e82:	mov    esp,0xf9ae3579
  403e87:	mov    DWORD PTR [edi],eax
  403e89:	push   esp
  403e8a:	xchg   esp,eax
  403e8b:	add    dh,BYTE PTR [eax-0x8]
  403e8e:	jb     0x403e6c
  403e90:	lock and BYTE PTR [esi-0x1e04417a],bh
  403e97:	aad    0x38
  403e99:	sub    bh,BYTE PTR [ebx-0x13]
  403e9c:	push   ecx
  403e9d:	inc    eax
  403e9e:	int3   
  403e9f:	ins    DWORD PTR es:[edi],dx
  403ea0:	xor    al,BYTE PTR [ecx]
  403ea2:	jecxz  0x403ee3
  403ea4:	and    ebp,DWORD PTR [edx+0x2d0fd74b]
  403eaa:	mov    ah,0xfb
  403eac:	push   edx
  403ead:	rol    BYTE PTR [ebx],cl
  403eaf:	in     al,dx
  403eb0:	xchg   edx,eax
  403eb1:	sbb    al,0x26
  403eb3:	sbb    DWORD PTR [esi-0x61],ebp
  403eb6:	cmp    BYTE PTR ss:[edx-0x61],cl
  403eba:	sbb    BYTE PTR [esi],0x28
  403ebd:	out    dx,eax
  403ebe:	pop    edx
  403ebf:	icebp  
  403ec0:	daa    
  403ec1:	lds    ebp,FWORD PTR [edi-0x5d1baf5d]
  403ec7:	mov    esi,0x5c5cc977
  403ecc:	add    dl,bh
  403ece:	jp     0x403f05
  403ed0:	and    al,0x8c
  403ed2:	push   ds
  403ed3:	and    al,BYTE PTR [eax-0x33]
  403ed6:	pop    es
  403ed7:	xchg   ebp,eax
  403ed8:	sub    BYTE PTR [ebp+0x37],al
  403edb:	cmp    eax,0x593e6177
  403ee0:	int3   
  403ee1:	dec    eax
  403ee2:	lahf   
  403ee3:	retf   0x790e
  403ee6:	sbb    eax,0x7b489487
  403eeb:	lea    ecx,[ecx]
  403eed:	out    dx,al
  403eee:	lahf   
  403eef:	and    DWORD PTR [ecx],0x7b5286dc
  403ef5:	jmp    0x403ebb
  403ef7:	pop    edi
  403ef8:	mov    cl,BYTE PTR [eax]
  403efa:	mov    dh,cl
  403efc:	hlt    
  403efd:	jae    0x403ed9
  403eff:	or     BYTE PTR [edx+eiz*8],0x5b
  403f03:	xchg   esp,eax
  403f04:	xchg   edi,eax
  403f05:	inc    ecx
  403f06:	mov    cs:0x5a0dd344,eax
  403f0c:	sbb    DWORD PTR [ebx+0x53d4a0d5],eax
  403f12:	xchg   esp,eax
  403f13:	inc    esp
  403f14:	dec    ebx
  403f15:	rol    BYTE PTR [edx],1
  403f17:	test   DWORD PTR [eax+0x1d],0xc946bec0
  403f1e:	mov    bl,0x41
  403f20:	mov    al,0x39
  403f22:	push   cs
  403f23:	es push ecx
  403f25:	sub    eax,0xde6e1cd8
  403f2a:	std    
  403f2b:	mov    BYTE PTR [esi-0x11c7751],ah
  403f31:	in     eax,0x66
  403f33:	add    eax,0xcfc0ce3a
  403f38:	jne    0x403f5e
  403f3a:	fisubr DWORD PTR [eax-0x7c77f21c]
  403f40:	sub    BYTE PTR [ebx+0x4b1a9e26],bl
  403f46:	repz dec esi
  403f48:	cli    
  403f49:	push   es
  403f4a:	xlat   BYTE PTR ds:[ebx]
  403f4b:	bound  ecx,QWORD PTR [eiz*1-0x5878ee0a]
  403f52:	pop    eax
  403f53:	retf   
  403f54:	inc    edi
  403f55:	mov    ch,0xb7
  403f57:	fcmovne st,st(6)
  403f59:	jg     0x403fd0
  403f5b:	or     eax,0xe8eb230d
  403f60:	xor    bh,BYTE PTR [eax]
  403f62:	push   ebx
  403f63:	clc    
  403f64:	retf   0xca71
  403f67:	ds sub al,0x26
  403f6a:	sbb    eax,0xabfb327a
  403f6f:	sub    al,0xd5
  403f71:	sbb    bl,BYTE PTR [edi]
  403f73:	shl    BYTE PTR [ecx+0x46],cl
  403f76:	adc    eax,0x76c997e9
  403f7b:	jge    0x403fbf
  403f7d:	enter  0xa550,0x93
  403f81:	les    esi,FWORD PTR [edx-0x4bad78d5]
  403f87:	dec    edx
  403f88:	adc    DWORD PTR [ecx-0x31023508],ebx
  403f8e:	xor    al,0x8d
  403f90:	int3   
  403f91:	sti    
  403f92:	cvtps2pi mm1,QWORD PTR [esi]
  403f95:	xchg   ebp,eax
  403f96:	gs mov edx,0x26503fd0
  403f9c:	fnstenv [eax+0x4]
  403f9f:	les    edi,FWORD PTR ds:0x9de3b2b0
  403fa5:	jle    0x403f41
  403fa7:	out    dx,al
  403fa8:	mov    ecx,0xf3c2e7ab
  403fad:	shr    DWORD PTR [eax-0x10],cl
  403fb0:	ret    
  403fb1:	inc    edx
  403fb2:	sbb    ebp,DWORD PTR [esi+0x446b9352]
  403fb8:	fnsave [edi+ebx*2-0x68]
  403fbc:	lea    ebp,[esi]
  403fbe:	jge    0x403fef
  403fc0:	test   DWORD PTR [ebx],ebx
  403fc2:	add    eax,0x36a8a31e
  403fc7:	sti    
  403fc8:	mov    ds,WORD PTR [ebp-0x1f]
  403fcb:	inc    ebx
  403fcc:	dec    edi
  403fcd:	into   
  403fce:	sbb    BYTE PTR [edi],cl
  403fd0:	mov    dh,0x77
  403fd2:	push   ebp
  403fd3:	jmp    0x8a7d:0x6d87ee6
  403fda:	pop    edx
  403fdb:	xor    DWORD PTR [edi+0x1f],edx
  403fde:	ret    
  403fdf:	xchg   ebp,eax
  403fe0:	mov    ah,0xff
  403fe2:	push   esp
  403fe3:	in     eax,0xaa
  403fe5:	pop    es
  403fe6:	gs sub eax,0x1ff12fde
  403fec:	mov    ebx,0x6b5984f1
  403ff1:	adc    dl,ah
  403ff3:	pop    edi
  403ff4:	pop    eax
  403ff5:	ret    0xdcd
  403ff8:	sbb    ebp,ebx
  403ffa:	outs   dx,DWORD PTR ds:[esi]
  403ffb:	es loopne 0x403fa1
  403ffe:	inc    ebx
  403fff:	and    al,0x3a
  404001:	add    DWORD PTR [edx-0x69],0xc7677cb1
  404008:	jb     0x40402b
  40400a:	pop    ds
  40400b:	pop    eax
  40400c:	jge    0x403fdd
  40400e:	add    esi,DWORD PTR [eax+0x1b]
  404011:	push   ecx
  404012:	in     al,dx
  404013:	lahf   
  404014:	mov    dl,0x96
  404016:	out    dx,eax
  404017:	jle    0x403fc9
  404019:	push   edi
  40401a:	jle    0x403ff2
  40401c:	cs rol edi,cl
  40401f:	aaa    
  404020:	stos   BYTE PTR es:[edi],al
  404021:	test   eax,0x866235a7
  404026:	mov    edx,DWORD PTR [ebp-0x27]
  404029:	ss inc edi
  40402b:	outs   dx,DWORD PTR ds:[esi]
  40402c:	jge    0x40408f
  40402e:	das    
  40402f:	push   edx
  404030:	jne    0x404098
  404032:	dec    ecx
  404033:	pop    DWORD PTR [esi+0x5bf53430]
  404039:	mov    ch,0xb3
  40403b:	imul   edx,DWORD PTR cs:[ebx],0xffffff8e
  40403f:	xor    BYTE PTR [edi-0x32],bh
  404042:	enter  0xd0ab,0x5c
  404046:	sbb    eax,0x60c30a90
  40404b:	pop    ds
  40404c:	adc    BYTE PTR [ebx-0x3a],bh
  40404f:	adc    esi,DWORD PTR gs:[ecx+0x6f]
  404053:	sbb    DWORD PTR [ebp+0x1b],eax
  404056:	neg    DWORD PTR [edx-0xd9b5eba]
  40405c:	out    dx,al
  40405d:	mov    ah,0x3e
  40405f:	retf   0xa709
  404062:	inc    ebx
  404063:	(bad)  
  404064:	jnp    0x40405b
  404066:	out    0xb1,al
  404068:	pop    edx
  404069:	bound  esi,QWORD PTR [eax-0x7d61a18f]
  40406f:	and    DWORD PTR [ebx+eiz*2+0x6ebcc4bc],eax
  404076:	mov    ebx,0xa9ea3e2
  40407b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40407c:	xchg   ebx,eax
  40407d:	mov    ah,0x17
  40407f:	cmp    eax,esi
  404081:	add    dl,bh
  404083:	and    eax,0xc06785f3
  404088:	shl    esp,0xbb
  40408b:	push   0x8
  40408d:	jmp    0x4040cb
  40408f:	jmp    0xa5ca:0xe8385535
  404096:	stc    
  404097:	das    
  404098:	in     eax,0x4c
  40409a:	shld   ebp,edx,0x2f
  40409e:	add    DWORD PTR [edi-0xe040ab9],esp
  4040a4:	lea    ebp,[esi-0x5d233866]
  4040aa:	mov    ds:0x3f5d8b58,eax
  4040af:	into   
  4040b0:	ret    
  4040b1:	retf   0xf8d3
  4040b4:	mov    ebx,0xac3a5d06
  4040b9:	sub    ecx,DWORD PTR [ecx+0x31f934db]
  4040bf:	adc    ah,BYTE PTR [edx+0x37]
  4040c2:	(bad)  
  4040c3:	fadd   st,st(5)
  4040c5:	arpl   WORD PTR [esi+0x29],cx
  4040c8:	stos   BYTE PTR es:[edi],al
  4040c9:	lods   eax,DWORD PTR ds:[esi]
  4040ca:	dec    ebx
  4040cb:	dec    esi
  4040cc:	mov    edx,DWORD PTR [eax-0x58]
  4040cf:	or     eax,0xfbd0f102
  4040d4:	mov    bl,0xa0
  4040d6:	dec    esp
  4040d7:	loope  0x404064
  4040d9:	pop    ebp
  4040da:	mov    eax,0x49332210
  4040df:	idiv   edi
  4040e1:	xor    dh,dh
  4040e3:	and    esp,eax
  4040e5:	and    eax,0x57544d34
  4040ea:	add    eax,0xbf1f4de2
  4040ef:	call   0x647f:0x32866fb5
  4040f6:	jmp    0xf048:0x801b1127
  4040fd:	add    edx,DWORD PTR [edx]
  4040ff:	cwde   
  404100:	jg     0x40417a
  404102:	call   0xff8c:0x53e04c18
  404109:	cld    
  40410a:	jmp    0x76e25d7d
  40410f:	pop    ecx
  404110:	fdiv   QWORD PTR [edx+0x2282c42]
  404116:	xor    bl,dh
  404118:	imul   ebx,DWORD PTR [esi-0xcb12b86],0xf664a6c0
  404122:	(bad)  
  404123:	hlt    
  404124:	mov    bh,BYTE PTR [esi+0x45d825d2]
  40412a:	pop    eax
  40412b:	jno    0x4040bc
  40412d:	mov    ebx,0x807e7997
  404132:	(bad)  
  404133:	in     al,0xab
  404135:	dec    esp
  404136:	push   edi
  404137:	jns    0x4040e4
  404139:	mov    dl,0x7
  40413b:	lods   eax,DWORD PTR ds:[esi]
  40413c:	xor    ah,ch
  40413e:	cs into 
  404140:	fwait
  404141:	enter  0x90ba,0xa2
  404145:	inc    edi
  404146:	xor    DWORD PTR [ebx+0x2b328385],ecx
  40414c:	neg    BYTE PTR [edi+0x507abc35]
  404152:	sub    DWORD PTR [esi+0x639dd5b],esp
  404158:	outs   dx,DWORD PTR ds:[esi]
  404159:	aaa    
  40415a:	xchg   esi,eax
  40415b:	sub    al,0x24
  40415d:	xor    DWORD PTR [ecx+0x6bfa2364],ebx
  404163:	add    eax,0x6a604f2
  404168:	mov    BYTE PTR [ebp+ebp*4+0x16e11564],dl
  40416f:	outs   dx,BYTE PTR fs:[esi]
  404171:	push   ds
  404172:	xor    DWORD PTR [edi-0x73067bbf],ebp
  404178:	mov    edi,0x57f73641
  40417d:	pop    edx
  40417e:	pop    es
  40417f:	push   es
  404180:	xor    esi,DWORD PTR [edi]
  404182:	mov    edi,0x85c3b145
  404187:	or     ebx,DWORD PTR [ecx-0x73]
  40418a:	(bad)  
  40418b:	ret    0x7818
  40418e:	pop    es
  40418f:	add    ecx,DWORD PTR [ecx+0x18]
  404192:	loope  0x4041b7
  404194:	imul   ebp,DWORD PTR [edx+0x30],0x47
  404198:	xor    ebx,DWORD PTR [edi-0x68]
  40419b:	push   cs
  40419c:	ins    DWORD PTR es:[edi],dx
  40419d:	or     DWORD PTR [eax-0x54d72056],0x200a1e
  4041a7:	jns    0x404152
  4041a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041aa:	cmp    ebp,0xffffff9a
  4041ad:	call   0x5129:0xea854405
  4041b4:	or     DWORD PTR [eax+0x70a9fc18],eax
  4041ba:	push   ds
  4041bb:	mov    dh,0x95
  4041bd:	xchg   esi,eax
  4041be:	je     0x404206
  4041c0:	lds    esi,FWORD PTR [ebp+0x2d]
  4041c3:	repz pusha 
  4041c5:	mov    esp,0xf6bf81d6
  4041ca:	jmp    0x40415a
  4041cc:	jmp    0xc1c69491
  4041d1:	in     eax,dx
  4041d2:	push   ebx
  4041d3:	xor    DWORD PTR [edx],ebx
  4041d5:	mov    ds:0xa3ae4e41,al
  4041da:	idiv   DWORD PTR [eiz*2+0x155ba601]
  4041e1:	cs add al,0xfd
  4041e4:	mov    dl,0x6b
  4041e6:	cmc    
  4041e7:	or     al,0xf6
  4041e9:	xchg   BYTE PTR [esi-0x5b],bh
  4041ec:	js     0x404246
  4041ee:	xchg   ecx,eax
  4041ef:	ds push edi
  4041f1:	(bad)
  4041f5:	add    eax,DWORD PTR [ebx+eiz*1-0x52]
  4041f9:	and    ecx,ebx
  4041fb:	xchg   ebx,eax
  4041fc:	mov    dh,0x42
  4041fe:	pop    ds
  4041ff:	dec    ebp
  404200:	jmp    0xbfa7:0xe783f162
  404207:	fadd   DWORD PTR [ebp-0x559fa89c]
  40420d:	adc    ch,BYTE PTR gs:0x7c749eba
  404214:	popf   
  404215:	sar    ch,cl
  404217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404218:	nop
  404219:	mov    ds:0xdd6cff10,eax
  40421e:	mov    dh,0x14
  404220:	popa   
  404221:	scas   al,BYTE PTR es:[edi]
  404222:	in     eax,dx
  404223:	mov    dl,0xbc
  404225:	mov    cl,0x53
  404227:	repnz and cl,BYTE PTR [esi-0x11f2579c]
  40422e:	xor    DWORD PTR [ebx-0x7f],0xf3e3416e
  404235:	and    eax,0x74f102fe
  40423b:	and    dh,BYTE PTR [ebx-0x25]
  40423e:	scas   al,BYTE PTR es:[edi]
  40423f:	cmp    DWORD PTR [ebx],ebp
  404241:	mov    dl,0x4
  404243:	lods   al,BYTE PTR ds:[esi]
  404244:	jp     0x4041da
  404246:	gs push esi
  404248:	jmp    0x1518:0xbed6c315
  40424f:	daa    
  404250:	jge    0x4042c7
  404252:	mov    ebx,DWORD PTR [esi]
  404254:	xor    DWORD PTR [ebx+esi*8-0x10],ebx
  404258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404259:	ds aad 0x84
  40425c:	xchg   ebp,eax
  40425d:	jno    0x40421e
  40425f:	add    al,0x5a
  404261:	jmp    0xdb0b:0xcb754e8d
  404268:	mov    eax,DWORD PTR [edi]
  40426a:	push   es
  40426b:	imul   edi,DWORD PTR [ebp+0x398a5aab],0x2ff793d7
  404275:	jo     0x404279
  404277:	mov    WORD PTR [edx+0x37c656ae],gs
  40427d:	sub    BYTE PTR [eax+0x15e5efa8],dh
  404283:	rol    ecx,0x4d
  404286:	push   es
  404287:	cli    
  404288:	push   ecx
  404289:	(bad)  
  40428a:	fisub  DWORD PTR [edx]
  40428c:	neg    DWORD PTR [ecx-0x41]
  40428f:	sbb    esp,DWORD PTR [edi-0x62]
  404292:	sbb    al,0x64
  404294:	mov    cl,0xbd
  404296:	sbb    ch,ah
  404298:	jp     0x404256
  40429a:	adc    al,0x61
  40429c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40429d:	mov    ch,0x6c
  40429f:	stos   DWORD PTR es:[edi],eax
  4042a0:	jecxz  0x404253
  4042a2:	push   ebx
  4042a3:	push   edx
  4042a4:	imul   esp,DWORD PTR [edi],0x3f9656fa
  4042aa:	mov    ebx,0x8398ff67
  4042af:	mov    edx,cs
  4042b1:	cs xor al,0xa7
  4042b4:	dec    eax
  4042b5:	jb     0x404298
  4042b7:	in     al,0x9a
  4042b9:	ins    DWORD PTR es:[edi],dx
  4042ba:	mov    cl,BYTE PTR [eax+0xb24394b]
  4042c0:	inc    edx
  4042c1:	(bad)  
  4042c2:	in     eax,0x2a
  4042c4:	sti    
  4042c5:	push   ecx
  4042c6:	(bad)  
  4042c7:	imul   edx,DWORD PTR [edx+ebx*8-0x7e],0x8c0d108c
  4042cf:	(bad)  
  4042d0:	sti    
  4042d1:	sub    cl,bl
  4042d3:	or     DWORD PTR [edi],edi
  4042d5:	dec    ebx
  4042d6:	mov    ah,0x75
  4042d8:	fild   WORD PTR [edx-0x8]
  4042db:	stos   BYTE PTR es:[edi],al
  4042dc:	xor    ah,cl
  4042de:	ins    DWORD PTR es:[edi],dx
  4042df:	repz sbb BYTE PTR [ebx],ah
  4042e2:	imul   edi,DWORD PTR [esi+0x1b],0x49
  4042e6:	pop    ebx
  4042e7:	or     bh,BYTE PTR [eax]
  4042e9:	or     cl,BYTE PTR [ebp+0x33]
  4042ec:	rol    BYTE PTR [ecx+eax*1-0x4a97b4ea],0xc9
  4042f4:	xor    al,0xb8
  4042f6:	in     al,0xe3
  4042f8:	test   DWORD PTR [ecx-0x60f7e92f],edx
  4042fe:	stos   DWORD PTR es:[edi],eax
  4042ff:	lds    ebp,FWORD PTR [ebp+0x4807dab0]
  404305:	out    dx,al
  404306:	xor    bh,0x6e
  404309:	inc    ebx
  40430a:	ss gs or eax,0xc0eec1d7
  404311:	xchg   BYTE PTR [ebx+0x2b],ch
  404314:	mov    ecx,0xabab787c
  40431a:	fst    DWORD PTR [esi-0x5a]
  40431d:	aaa    
  40431e:	sub    BYTE PTR [esi],ch
  404320:	xchg   DWORD PTR ds:0x315e6b6,eax
  404326:	fist   WORD PTR [esi]
  404328:	push   ds
  404329:	xor    al,0xd5
  40432b:	sbb    bh,BYTE PTR [edi]
  40432d:	dec    esp
  40432e:	cs ds out dx,al
  404331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404332:	mov    ds:0x1b8185bd,al
  404337:	fist   DWORD PTR [ecx-0x8]
  40433a:	mov    DWORD PTR [edi+ecx*8],0x7abf4ef4
  404341:	push   edx
  404342:	ins    DWORD PTR es:[edi],dx
  404343:	jbe    0x404394
  404345:	int    0x97
  404347:	hlt    
  404348:	and    al,0xa
  40434a:	popf   
  40434b:	inc    ebx
  40434c:	imul   eax,DWORD PTR [eax-0x4e],0xb235a1ae
  404353:	dec    esi
  404354:	add    ebx,DWORD PTR [esi-0x5fefecfc]
  40435a:	push   esi
  40435b:	inc    edx
  40435c:	aaa    
  40435d:	and    edi,DWORD PTR [ecx-0x5add071]
  404363:	xor    DWORD PTR [ebx-0x3ae4d5bc],ebp
  404369:	aad    0x57
  40436b:	adc    edi,ecx
  40436d:	les    esp,FWORD PTR [ecx]
  40436f:	pop    esp
  404370:	sti    
  404371:	push   esi
  404372:	(bad)  
  404373:	repnz xor al,0xed
  404376:	inc    esp
  404377:	lods   eax,DWORD PTR ds:[esi]
  404378:	xchg   ebx,eax
  404379:	ror    DWORD PTR [edx-0x24],cl
  40437c:	and    edi,DWORD PTR [esi+0x59]
  40437f:	lods   eax,DWORD PTR ds:[esi]
  404380:	nop
  404381:	je     0x404332
  404383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404385:	xor    dh,BYTE PTR [ebx+0x4aa136d6]
  40438b:	jl     0x4043f2
  40438d:	(bad)  [esi]
  40438f:	jle    0x4043b4
  404391:	xor    eax,0x88122f2b
  404396:	je     0x404413
  404398:	cmc    
  404399:	ret    
  40439a:	sub    ebx,eax
  40439c:	add    DWORD PTR [ecx],0x20
  40439f:	pop    ecx
  4043a0:	aad    0xce
  4043a2:	push   0xfffffffb
  4043a4:	inc    eax
  4043a5:	outs   dx,BYTE PTR gs:[esi]
  4043a7:	test   DWORD PTR [ecx+ebx*4+0x76],esp
  4043ab:	and    esp,esi
  4043ad:	push   cs
  4043ae:	inc    DWORD PTR [ecx-0x1a109fac]
  4043b4:	mov    bh,0xe8
  4043b6:	sbb    eax,0xf8134f18
  4043bb:	rcr    al,1
  4043bd:	mov    eax,ds:0xb1bd5587
  4043c2:	sub    DWORD PTR [esi-0x6a],0xffffff81
  4043c6:	dec    ecx
  4043c7:	cvtps2pd xmm2,QWORD PTR [edi+0x3b46f746]
  4043ce:	scas   al,BYTE PTR es:[edi]
  4043cf:	fld    QWORD PTR [ebp+0x5f2c5a29]
  4043d5:	aas    
  4043d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043d7:	dec    eax
  4043d8:	out    0x22,eax
  4043da:	in     eax,0x6a
  4043dc:	inc    ebx
  4043dd:	adc    ebp,DWORD PTR [edx]
  4043df:	fidivr WORD PTR [ecx-0xd]
  4043e2:	out    dx,al
  4043e3:	out    0x15,eax
  4043e5:	mov    ebp,0x577d0543
  4043ea:	xlat   BYTE PTR ds:[ebx]
  4043eb:	sbb    ah,dl
  4043ed:	cmp    bh,BYTE PTR [edi]
  4043ef:	cwde   
  4043f0:	test   al,0xca
  4043f2:	and    BYTE PTR fs:[ebx],dh
  4043f5:	mov    al,0xdb
  4043f7:	or     ah,al
  4043f9:	ficom  DWORD PTR [ecx+0x14e9b5c2]
  4043ff:	test   al,0x53
  404401:	outs   dx,DWORD PTR ds:[esi]
  404402:	xor    cl,0xf6
  404405:	test   al,0xf9
  404407:	sbb    DWORD PTR [ebx-0x4e7a101f],edx
  40440d:	mov    ch,0x10
  40440f:	pop    esp
  404410:	xchg   edx,eax
  404411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404412:	mov    bl,BYTE PTR ds:0x5deda76
  404418:	push   edi
  404419:	fild   QWORD PTR [edx-0x71]
  40441c:	jno    0x4043ed
  40441e:	add    eax,0x55a0526b
  404423:	sub    BYTE PTR [eax+0x3c85b5f2],bh
  404429:	pop    ebp
  40442a:	clc    
  40442b:	dec    esi
  40442c:	pop    es
  40442d:	xor    dh,cl
  40442f:	lahf   
  404430:	stos   DWORD PTR es:[edi],eax
  404431:	fidiv  WORD PTR [ecx-0x1a]
  404434:	inc    eax
  404435:	jp     0x4043d5
  404437:	lods   eax,DWORD PTR ds:[esi]
  404438:	fsubr  st(3),st
  40443a:	sahf   
  40443b:	call   0x9d9f52b4
  404440:	mov    bh,bh
  404442:	inc    esi
  404443:	gs cld 
  404445:	je     0x404448
  404447:	push   ds
  404448:	iret   
  404449:	(bad)  
  40444a:	pop    edx
  40444b:	mov    esp,DWORD PTR [ebx+ecx*2+0x3]
  40444f:	push   0x55808306
  404454:	mov    esp,0xbb51a86e
  404459:	shl    ebx,1
  40445b:	sub    BYTE PTR [edx-0x69670bc8],dl
  404461:	pop    esp
  404462:	push   ebp
  404463:	pusha  
  404464:	mov    esp,DWORD PTR [ebx-0x9]
  404467:	xchg   edx,eax
  404468:	add    ah,cl
  40446a:	and    eax,0x3a3ac36
  40446f:	push   ebp
  404470:	mov    edi,0x6c5ad8d7
  404475:	in     al,dx
  404476:	es jns 0x404475
  404479:	rcr    BYTE PTR [edx-0x4fd83133],cl
  40447f:	cmp    ecx,0xffffffb1
  404482:	push   ss
  404483:	add    DWORD PTR [esi],ecx
  404485:	xchg   edx,eax
  404486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404487:	sub    eax,DWORD PTR [eax+0x47f44494]
  40448d:	ja     0x404439
  40448f:	jmp    0x614d:0xb3920e5f
  404496:	pop    esp
  404497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404498:	mov    ah,0x3f
  40449a:	xchg   ebp,eax
  40449b:	mov    ds:0x13ddab1f,al
  4044a0:	pop    ebx
  4044a1:	jmp    0x3579d6d6
  4044a6:	gs int3 
  4044a8:	dec    edi
  4044a9:	loop   0x404467
  4044ab:	(bad)  
  4044ac:	add    al,0x75
  4044ae:	push   edi
  4044af:	jns    0x404514
  4044b1:	xchg   ebx,eax
  4044b2:	ins    BYTE PTR es:[edi],dx
  4044b3:	lock sbb al,0x37
  4044b6:	gs in  eax,0x1d
  4044b9:	dec    edx
  4044ba:	lods   eax,DWORD PTR ds:[esi]
  4044bb:	call   FWORD PTR [edi+ecx*1]
  4044be:	add    DWORD PTR [ecx+0x48],eax
  4044c1:	push   ss
  4044c2:	in     eax,dx
  4044c3:	lds    ebx,FWORD PTR [eax]
  4044c5:	jmp    0xd3df1137
  4044ca:	push   edx
  4044cb:	int3   
  4044cc:	inc    ebp
  4044cd:	mov    cl,0x1
  4044cf:	or     al,0x69
  4044d1:	stos   DWORD PTR es:[edi],eax
  4044d2:	test   BYTE PTR [ecx-0xa],dl
  4044d5:	mov    al,0x52
  4044d7:	add    eax,0xe4e2c4fa
  4044dc:	sub    al,0xa1
  4044de:	leave  
  4044df:	fisttp WORD PTR [esi]
  4044e1:	into   
  4044e2:	lock dec ecx
  4044e4:	cmp    eax,0xa084a58b
  4044e9:	leave  
  4044ea:	jo     0x4044a7
  4044ec:	xchg   esp,eax
  4044ed:	jne    0x404552
  4044ef:	adc    DWORD PTR [bx+si+0x77],esp
  4044f3:	sub    eax,0x70d00a21
  4044f8:	retf   
  4044f9:	mov    ds:0xbe1f454,eax
  4044fe:	out    dx,al
  4044ff:	cli    
  404500:	je     0x40457f
  404502:	cmp    eax,0xd3c29367
  404507:	mov    esi,0xe583af68
  40450c:	outs   dx,DWORD PTR ds:[esi]
  40450d:	dec    eax
  40450e:	lock mov DWORD PTR [eax],esp
  404511:	in     eax,0xa4
  404513:	pop    ebx
  404514:	sbb    ch,BYTE PTR [bp+di+0x48]
  404518:	sbb    edx,DWORD PTR [edx+0x46]
  40451b:	cmp    esp,edx
  40451d:	sbb    BYTE PTR [ebx],dl
  40451f:	fadd   DWORD PTR [esi+0x5fc0f9b7]
  404525:	sbb    dl,ah
  404527:	dec    esp
  404528:	jmp    0xd59:0xbf69c266
  40452f:	mov    WORD PTR [edi-0x1ee358d1],fs
  404535:	add    al,0x35
  404537:	add    eax,esi
  404539:	mov    DWORD PTR ds:[ecx+eax*4+0x6d62137c],ebx
  404541:	mov    ds:0x370d4696,al
  404546:	cld    
  404547:	and    DWORD PTR [ecx-0x7b492380],edx
  40454d:	inc    ebp
  40454e:	mov    ds:0x297d44d7,eax
  404553:	sti    
  404554:	ins    BYTE PTR es:[edi],dx
  404555:	mov    ds:0xd9a1fe67,eax
  40455a:	or     BYTE PTR [edx-0x17],0xeb
  40455e:	mov    dh,0x89
  404560:	jnp    0x404579
  404562:	aam    0xfa
  404564:	xchg   ebx,eax
  404565:	xor    DWORD PTR [ecx+edi*2-0x43],ebx
  404569:	popa   
  40456a:	xor    BYTE PTR [ecx+eiz*2],dh
  40456d:	xor    DWORD PTR ds:[ebp-0x6],esi
  404571:	ss leave 
  404573:	test   ah,cl
  404575:	pop    edx
  404576:	fld    st(5)
  404578:	addr16 loope 0x404597
  40457b:	jmp    0x21f3a8dc
  404580:	inc    ebx
  404581:	dec    ebx
  404582:	jae    0x40458c
  404584:	inc    esi
  404585:	mov    cl,0x4a
  404587:	retf   0xbe1d
  40458a:	(bad)  
  40458b:	adc    al,0x20
  40458d:	push   ebp
  40458e:	jecxz  0x40454b
  404590:	(bad)  
  404591:	ds pop esp
  404593:	cmp    DWORD PTR [eax+eax*8],esp
  404596:	and    al,0x2d
  404598:	fld    DWORD PTR [edi]
  40459a:	stc    
  40459b:	lds    edi,FWORD PTR [eax-0x1f95b696]
  4045a1:	std    
  4045a2:	vcvttpd2dq xmm5,YMMWORD PTR [ecx-0x7ea61801]
  4045aa:	sbb    cl,BYTE PTR [ebx-0x5b1442e4]
  4045b0:	push   ds
  4045b1:	or     al,0x79
  4045b3:	(bad)  
  4045b4:	pop    edi
  4045b5:	xchg   DWORD PTR [ebp+edi*8-0x51b8c8c1],edi
  4045bc:	lea    ebx,[edi]
  4045be:	hlt    
  4045bf:	adc    BYTE PTR [ecx+0x672b9bd8],dh
  4045c5:	push   ecx
  4045c6:	lock mov dl,0x7
  4045c9:	push   eax
  4045ca:	stc    
  4045cb:	mov    al,ds:0xa1acec7a
  4045d0:	stc    
  4045d1:	mov    esp,0x7dab0d3d
  4045d6:	mov    dh,0xc4
  4045d8:	mov    al,0x33
  4045da:	cdq    
  4045db:	dec    DWORD PTR [eax+0x3b6d5232]
  4045e1:	sbb    al,0x5b
  4045e3:	and    BYTE PTR [esi+0x3bf2bfe7],dl
  4045e9:	stos   DWORD PTR es:[edi],eax
  4045ea:	div    DWORD PTR [ecx]
  4045ec:	mov    WORD PTR [ebx+0x56],cs
  4045ef:	(bad)  
  4045f1:	mov    es,WORD PTR [ebp-0x4f]
  4045f4:	push   ds
  4045f5:	mov    eax,0x7772028d
  4045fa:	bound  ebp,QWORD PTR ss:[esi-0x3c28aa4]
  404601:	ja     0x404669
  404603:	sbb    DWORD PTR [edx+ecx*1-0x6d],esp
  404607:	jb     0x4045d2
  404609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40460a:	and    al,0xbd
  40460c:	lods   al,BYTE PTR ds:[esi]
  40460d:	mov    ecx,0x89535f99
  404612:	inc    eax
  404613:	xchg   ecx,eax
  404614:	mov    dl,BYTE PTR [ebx]
  404616:	test   DWORD PTR [ebx],esp
  404618:	sub    dl,BYTE PTR [esi+0x3eec0282]
  40461e:	fucom  st(2)
  404620:	stos   DWORD PTR es:[edi],eax
  404621:	call   0x8f376f88
  404626:	sar    bl,0xea
  404629:	imul   eax,DWORD PTR [edx+0x22acddf5],0xffffffc1
  404630:	mov    bl,BYTE PTR [esi+0x76]
  404633:	sbb    al,0x99
  404635:	iret   
  404636:	inc    eax
  404637:	out    dx,eax
  404638:	lock popf 
  40463a:	adc    eax,0x8713d94
  40463f:	mov    edx,DWORD PTR [ebx-0x5a]
  404642:	or     al,0x61
  404644:	sbb    eax,0xad3591f
  404649:	mov    dh,0x41
  40464b:	pop    ss
  40464c:	or     BYTE PTR [eax],ch
  40464e:	add    DWORD PTR [esp+edi*1-0x7e2c3a61],esp
  404655:	sti    
  404656:	arpl   WORD PTR [edi],cx
  404658:	inc    edx
  404659:	leave  
  40465a:	pushw  es
  40465c:	shl    ah,cl
  40465e:	imul   ecx,DWORD PTR [ebp-0x5262333a],0x927b8b91
  404668:	scas   eax,DWORD PTR es:[edi]
  404669:	mov    ecx,0x8beb1953
  40466e:	mov    bl,0xc1
  404670:	inc    edx
  404671:	scas   eax,DWORD PTR es:[edi]
  404672:	in     eax,0x3c
  404674:	mov    DWORD PTR [ebp-0x4d],edi
  404677:	aad    0x1e
  404679:	test   cl,0x7a
  40467c:	add    DWORD PTR [ecx+0x5c],0x41
  404680:	cwde   
  404681:	adc    DWORD PTR [ecx],eax
  404683:	mov    eax,0xf28c2b3f
  404688:	pushw  cs
  40468a:	adc    eax,0xeb9f4ce2
  40468f:	sub    eax,0xf8f78a70
  404694:	loopne 0x404679
  404696:	cmp    BYTE PTR [ebp-0x7f596721],bl
  40469c:	mov    ecx,0x448731c7
  4046a1:	mov    ebx,0x259d2ea6
  4046a6:	clc    
  4046a7:	sub    eax,0xb33dc3c4
  4046ac:	(bad)
  4046af:	jecxz  0x404643
  4046b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046b2:	leave  
  4046b3:	test   DWORD PTR [ecx],ebx
  4046b5:	(bad)  
  4046b6:	pop    esp
  4046b7:	clc    
  4046b8:	dec    esp
  4046b9:	(bad)  [ebx]
  4046bb:	out    0x52,eax
  4046bd:	outs   dx,BYTE PTR ds:[esi]
  4046be:	cwde   
  4046bf:	ja     0x40467f
  4046c1:	add    cl,BYTE PTR ds:0xaa5927a4
  4046c7:	xor    al,0x2c
  4046c9:	pop    ss
  4046ca:	xlat   BYTE PTR ds:[ebx]
  4046cb:	jl     0x404746
  4046cd:	xlat   BYTE PTR ds:[ebx]
  4046ce:	mov    BYTE PTR [ecx-0x34b2352],ah
  4046d4:	fwait
  4046d5:	add    DWORD PTR [edi-0x7ca0a40b],esi
  4046db:	ins    BYTE PTR es:[edi],dx
  4046dc:	(bad)  
  4046dd:	stc    
  4046de:	ds sti 
  4046e0:	cmp    edi,DWORD PTR [ebp+0x3b1ab5d0]
  4046e6:	cdq    
  4046e7:	(bad)  
  4046e8:	push   ecx
  4046e9:	sbb    edi,edi
  4046eb:	out    dx,eax
  4046ec:	scas   eax,DWORD PTR es:[edi]
  4046ed:	mov    bl,0xd
  4046ef:	mov    ch,0xd1
  4046f1:	jb     0x404693
  4046f3:	push   eax
  4046f4:	into   
  4046f5:	rol    DWORD PTR [edi],0xcd
  4046f8:	adc    dl,bl
  4046fa:	mov    ch,0x55
  4046fc:	fist   DWORD PTR [eax-0x58d2db45]
  404702:	xor    ch,BYTE PTR [esp]
  404705:	lds    ebx,FWORD PTR [edi+0x790ab94e]
  40470b:	pop    edx
  40470c:	pop    edx
  40470d:	or     al,0x54
  40470f:	mov    al,ds:0xdd54c355
  404714:	lds    esi,FWORD PTR [ecx-0xc7da0a8]
  40471a:	scas   eax,DWORD PTR es:[edi]
  40471b:	add    al,0xb8
  40471d:	push   edi
  40471e:	loop   0x4046ad
  404720:	aas    
  404721:	mov    dl,0x1f
  404723:	and    bl,BYTE PTR [esi+0x43]
  404726:	(bad)  
  404727:	loop   0x4047a3
  404729:	sub    al,BYTE PTR [eax+0x28f6dd48]
  40472f:	xchg   edi,eax
  404730:	xchg   ebx,eax
  404731:	fst    QWORD PTR ss:[ebx-0x784d01f4]
  404738:	fcom   QWORD PTR [esi+eax*2]
  40473b:	std    
  40473c:	sub    eax,0x4e4e450d
  404741:	pop    esi
  404742:	or     edi,esi
  404744:	imul   ebp,DWORD PTR [eax-0x2f],0xffffff94
  404748:	fcomp  DWORD PTR [ecx+ebx*1-0x5980668d]
  40474f:	push   eax
  404750:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  404752:	mov    cl,0x79
  404754:	sbb    DWORD PTR [edx+0x70452424],esp
  40475a:	mov    esp,0xcf579f5c
  40475f:	arpl   WORD PTR [eax],bx
  404761:	jl     0x404733
  404763:	es loopne 0x4047d4
  404766:	inc    edi
  404767:	enter  0xd0e1,0xff
  40476b:	sbb    al,0x59
  40476d:	push   ebp
  40476e:	test   BYTE PTR [esi+0x3f],0x24
  404772:	pop    esi
  404773:	lock mov ch,0xf9
  404776:	and    eax,0x27accd9d
  40477b:	lods   al,BYTE PTR ds:[esi]
  40477c:	mov    ch,0x37
  40477e:	mov    ah,0x42
  404780:	cwde   
  404781:	sub    al,0xc4
  404783:	mov    dl,0x94
  404785:	sub    DWORD PTR [eax],0xcd253c3e
  40478b:	hlt    
  40478c:	mov    edx,esi
  40478e:	mov    edx,0xebfed4f
  404793:	pop    edx
  404794:	pop    ebx
  404795:	dec    eax
  404796:	jno    0x404718
  404798:	pop    DWORD PTR [edi]
  40479a:	dec    ebp
  40479b:	sti    
  40479c:	sbb    dl,bh
  40479e:	ins    BYTE PTR es:[edi],dx
  40479f:	(bad)  [eax]
  4047a1:	in     al,dx
  4047a2:	sar    BYTE PTR ds:0x7403fd8c,1
  4047a8:	push   eax
  4047a9:	adc    edx,eax
  4047ab:	inc    ebp
  4047ac:	xor    BYTE PTR [eax-0x3c],0x6a
  4047b0:	xchg   ebx,eax
  4047b1:	and    eax,0xbd013f03
  4047b6:	push   ds
  4047b7:	xor    dh,bl
  4047b9:	fs pop esi
  4047bb:	xor    dl,BYTE PTR [esi-0x70cddf4e]
  4047c1:	and    al,0xb2
  4047c3:	jp     0x404758
  4047c5:	cld    
  4047c6:	push   esi
  4047c7:	dec    ebp
  4047c8:	iret   
  4047c9:	int3   
  4047ca:	push   es
  4047cb:	xor    al,0x4d
  4047cd:	in     al,dx
  4047ce:	jnp    0x4047a4
  4047d0:	xlat   BYTE PTR ds:[ebx]
  4047d1:	and    ch,BYTE PTR [ebp+esi*2+0xc1619e6]
  4047d8:	fadd   DWORD PTR [ecx+ecx*1]
  4047db:	inc    edi
  4047dc:	dec    edx
  4047dd:	arpl   WORD PTR [ebx],bx
  4047df:	int    0xc3
  4047e1:	mov    eax,?
  4047e3:	adc    ebp,edi
  4047e5:	push   ebp
  4047e6:	les    eax,FWORD PTR [ebp+ecx*4+0x2c746b06]
  4047ed:	mov    eax,ds:0x640e284b
  4047f2:	sub    eax,DWORD PTR [ebx+ebx*1-0x528c1677]
  4047f9:	mov    dh,0x82
  4047fb:	and    dh,bl
  4047fd:	mov    al,0x7a
  4047ff:	jecxz  0x404844
  404801:	inc    edi
  404802:	mov    fs,WORD PTR [edx+0x45]
  404805:	push   edx
  404806:	outs   dx,DWORD PTR ds:[esi]
  404807:	imul   ebp,ebp,0xfffffff5
  40480a:	int    0xbf
  40480c:	add    al,BYTE PTR [eax+0x54]
  40480f:	retf   0xe402
  404812:	sub    al,0x87
  404814:	repnz inc ebx
  404816:	mul    ebx
  404818:	outs   dx,DWORD PTR ds:[esi]
  404819:	mov    al,ds:0x2fb6b918
  40481e:	or     eax,0x3b8e4769
  404823:	stc    
  404824:	xor    esi,DWORD PTR [edi]
  404826:	cmp    edx,esi
  404828:	xchg   ecx,eax
  404829:	into   
  40482a:	in     eax,dx
  40482b:	push   ebp
  40482c:	mov    ch,0xb7
  40482e:	bound  esp,QWORD PTR ss:[edx-0x4a5a58bf]
  404835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404836:	pushf  
  404837:	xchg   ebp,eax
  404838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404839:	sub    BYTE PTR [ebp+0x2af37155],cl
  40483f:	ficom  DWORD PTR [ecx]
  404841:	and    dl,BYTE PTR [ecx+0x2178c219]
  404847:	in     al,0x69
  404849:	and    eax,0x1fb60c11
  40484e:	int    0x89
  404850:	jmp    FWORD PTR [ebp+0x7dc700bb]
  404856:	push   ebp
  404857:	je     0x4047f5
  404859:	mov    cl,0xbc
  40485b:	clc    
  40485c:	push   esp
  40485d:	out    0xe,eax
  40485f:	das    
  404860:	add    DWORD PTR [esi],esp
  404862:	retf   0x8709
  404865:	ins    DWORD PTR es:[edi],dx
  404866:	std    
  404867:	hlt    
  404868:	cmp    dh,BYTE PTR [ecx]
  40486a:	mul    bl
  40486c:	bswap  edi
  40486e:	out    0x8,al
  404870:	or     DWORD PTR [ebx-0x55],0x41683749
  404877:	lds    eax,FWORD PTR [esp+ebp*4]
  40487a:	mov    ebp,0xe42566f3
  40487f:	mov    cl,0x7a
  404881:	jo     0x4048d1
  404883:	pop    es
  404884:	repz jne 0x4048d0
  404887:	iret   
  404888:	mov    eax,ds:0x17e9db03
  40488d:	fs popa 
  40488f:	pop    es
  404890:	inc    ebp
  404891:	jbe    0x40484f
  404893:	cdq    
  404894:	xchg   ebp,eax
  404895:	mov    ebp,0xd29c2c1c
  40489a:	enter  0xec96,0x71
  40489e:	inc    esi
  40489f:	xchg   ebx,eax
  4048a0:	jo     0x4048aa
  4048a2:	cld    
  4048a3:	jecxz  0x4048cf
  4048a5:	sub    al,0xf
  4048a7:	mov    bl,0xda
  4048a9:	dec    eax
  4048aa:	adc    BYTE PTR [ebx-0xcde49f1],al
  4048b0:	or     BYTE PTR [esi],0x67
  4048b3:	(bad)  
  4048b4:	pop    ds
  4048b5:	adc    ebx,esi
  4048b7:	iret   
  4048b8:	in     eax,dx
  4048b9:	add    eax,DWORD PTR [esi-0x192884bb]
  4048bf:	sbb    al,0x72
  4048c1:	add    BYTE PTR [ecx+0x3f9ae83d],dh
  4048c7:	mov    ds:0x1a995ec7,eax
  4048cc:	pop    edi
  4048cd:	nop
  4048ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048cf:	push   0x9a4c201a
  4048d4:	xchg   ecx,eax
  4048d5:	loopne 0x4048fa
  4048d7:	push   ds
  4048d8:	popa   
  4048d9:	jmp    0x404908
  4048db:	xchg   ebx,eax
  4048dc:	std    
  4048dd:	pop    es
  4048de:	add    cl,cl
  4048e0:	sbb    dh,dh
  4048e2:	xor    BYTE PTR [ecx+0x13],al
  4048e5:	mov    eax,0x1f90186
  4048ea:	xchg   dl,bh
  4048ec:	push   ebp
  4048ed:	aad    0x57
  4048ef:	sar    ch,cl
  4048f1:	ror    DWORD PTR [esi+0x4f],1
  4048f4:	jl     0x404975
  4048f6:	cmp    eax,0xcfb8423c
  4048fb:	sbb    BYTE PTR [ebx],cl
  4048fd:	lahf   
  4048fe:	test   DWORD PTR [edi],esp
  404900:	es inc esi
  404902:	lahf   
  404903:	pop    ebx
  404904:	sub    edx,ebp
  404906:	jbe    0x404973
  404908:	ficom  DWORD PTR [ecx-0xcfca431]
  40490e:	iret   
  40490f:	push   ebp
  404910:	mov    eax,0xf1a5b87
  404915:	je     0x404983
  404917:	in     eax,dx
  404918:	int    0x12
  40491a:	mov    bl,BYTE PTR [ecx+esi*4+0x6a]
  40491e:	adc    ch,dl
  404920:	sbb    BYTE PTR [edx+0x29],dh
  404923:	cdq    
  404924:	and    edx,edi
  404926:	push   es
  404927:	int3   
  404928:	sub    eax,0x6567cfb2
  40492d:	jno    0x4048ec
  40492f:	retf   0x53f1
  404932:	nop
  404933:	adc    BYTE PTR [ebp+0x73],cl
  404936:	inc    esp
  404937:	ficom  WORD PTR [ebx+ebx*2+0x58]
  40493b:	adc    eax,0x96e41d5a
  404940:	es inc ebx
  404942:	mov    ch,0xcc
  404944:	jge    0x4048e7
  404946:	adc    cl,dh
  404948:	jp     0x4049a0
  40494a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40494b:	cmc    
  40494c:	das    
  40494d:	jmp    0x8814d5eb
  404952:	jp     0x404912
  404954:	inc    esp
  404955:	in     al,0x9b
  404957:	jb     0x40493e
  404959:	push   ss
  40495a:	pop    esi
  40495b:	jo     0x4048e3
  40495d:	mov    al,0x4f
  40495f:	mov    ebp,0x47b9624f
  404964:	aaa    
  404965:	es inc edx
  404967:	cmp    eax,0xa73caeee
  40496c:	sub    al,BYTE PTR [esi]
  40496e:	or     esi,ebp
  404970:	ja     0x404917
  404972:	or     al,0xa0
  404974:	lea    esp,[edi+0x1e]
  404977:	jbe    0x404972
  404979:	jmp    0x4336:0x51648004
  404980:	mov    BYTE PTR [eiz*1+0x53694475],dh
  404987:	jge    0x404931
  404989:	xchg   esi,eax
  40498a:	js     0x40496d
  40498c:	adc    eax,0x58906d2b
  404991:	scas   al,BYTE PTR es:[edi]
  404992:	cmp    al,0x27
  404994:	dec    edi
  404995:	imul   eax
  404997:	push   ds
  404998:	jmp    0x25e4a2a7
  40499d:	inc    esi
  40499e:	clc    
  40499f:	and    DWORD PTR [edi+ebx*1-0x17],0x3c
  4049a4:	pop    es
  4049a5:	(bad)  
  4049a6:	clc    
  4049a7:	dec    esi
  4049a8:	fdiv   DWORD PTR [ebx+0x503a7df9]
  4049ae:	(bad)  
  4049af:	gs mov edx,ebp
  4049b2:	inc    edi
  4049b3:	fs clc 
  4049b5:	loop   0x4049c6
  4049b7:	bound  ebx,QWORD PTR [edx-0x1ffc8cc]
  4049bd:	cmp    al,0xdc
  4049bf:	sbb    BYTE PTR [esi+eiz*2+0x1f3e5ea0],ch
  4049c6:	push   edx
  4049c7:	pop    ebx
  4049c8:	xchg   edx,eax
  4049c9:	sub    DWORD PTR [eax-0x2f82aa03],eax
  4049cf:	adc    eax,0x4116ed1e
  4049d4:	shl    BYTE PTR [eax],1
  4049d6:	adc    esp,DWORD PTR [esi]
  4049d8:	test   al,0xa9
  4049da:	add    edi,DWORD PTR [ebx+esi*2+0xc887484]
  4049e1:	mov    ebp,0x9d5eb050
  4049e6:	icebp  
  4049e7:	mov    ds:0x65e6a8ed,eax
  4049ec:	push   esi
  4049ed:	(bad)  
  4049ee:	scas   eax,DWORD PTR es:[edi]
  4049ef:	inc    ecx
  4049f0:	(bad)  
  4049f1:	retf   
  4049f2:	stos   BYTE PTR es:[edi],al
  4049f3:	out    0x19,al
  4049f5:	dec    ecx
  4049f6:	pop    ds
  4049f7:	or     al,0xb8
  4049f9:	jbe    0x404a08
  4049fb:	hlt    
  4049fc:	ss xor ah,cl
  4049ff:	mov    dh,BYTE PTR [ecx+0x4f]
  404a02:	adc    al,0xef
  404a04:	cmp    esi,ecx
  404a06:	icebp  
  404a07:	adc    esp,DWORD PTR [edi]
  404a09:	loope  0x4049db
  404a0b:	inc    edi
  404a0c:	sbb    BYTE PTR [esi],0x31
  404a0f:	mov    edx,DWORD PTR [eax]
  404a11:	cmp    eax,0x2bef9282
  404a16:	sbb    al,0x9f
  404a18:	push   ss
  404a19:	ret    0xcf1d
  404a1c:	mov    ah,0x50
  404a1e:	ret    
  404a1f:	mov    ebp,0xadc37c83
  404a24:	pop    ebx
  404a25:	inc    ebx
  404a26:	mov    BYTE PTR [edi+0x6913379b],dh
  404a2c:	cs ins BYTE PTR es:[edi],dx
  404a2e:	or     eax,0xd31e2f79
  404a33:	add    ecx,DWORD PTR [ecx+eax*1-0x2]
  404a37:	retf   0x6c37
  404a3a:	scas   al,BYTE PTR es:[edi]
  404a3b:	cli    
  404a3c:	jo     0x404aa1
  404a3e:	ror    esp,cl
  404a40:	jno    0x4049ec
  404a42:	push   eax
  404a43:	ror    DWORD PTR [esi+0x68],0xeb
  404a47:	and    edi,DWORD PTR [edi]
  404a49:	loop   0x404a83
  404a4b:	lods   al,BYTE PTR ds:[esi]
  404a4c:	pop    esp
  404a4d:	ds inc ecx
  404a4f:	push   ss
  404a50:	inc    ebp
  404a51:	sub    BYTE PTR [ebx],bh
  404a53:	xor    eax,0xa51e1da2
  404a58:	or     eax,0xe86907f
  404a5d:	ins    DWORD PTR es:[edi],dx
  404a5e:	adc    dl,BYTE PTR [esi]
  404a60:	inc    esi
  404a61:	sub    eax,0x62b1f04b
  404a66:	les    edi,FWORD PTR [ecx-0x3d]
  404a69:	jg     0x404a13
  404a6b:	inc    esp
  404a6c:	dec    ebp
  404a6d:	fistp  QWORD PTR [eax]
  404a6f:	lods   eax,DWORD PTR ds:[esi]
  404a70:	inc    esp
  404a71:	inc    edi
  404a72:	dec    ebp
  404a73:	adc    esi,DWORD PTR [ebp+0x24]
  404a76:	mov    dl,0x8b
  404a78:	adc    ebx,edi
  404a7a:	cmp    DWORD PTR [ecx+0x38],edi
  404a7d:	xchg   edx,eax
  404a7e:	rcl    BYTE PTR [ebp-0x4d],0x49
  404a82:	jmp    0x404a58
  404a84:	dec    esi
  404a85:	xor    eax,0x5ac7020e
  404a8a:	xchg   BYTE PTR [ecx-0x54],bh
  404a8d:	push   ss
  404a8e:	push   ds
  404a8f:	out    0xa3,al
  404a91:	push   cs
  404a92:	ins    DWORD PTR es:[edi],dx
  404a93:	mov    edi,DWORD PTR [eax+eiz*1-0x6d]
  404a97:	es out 0x2,eax
  404a9a:	(bad)  
  404a9b:	pop    ebp
  404a9c:	mov    edi,0x68f257c8
  404aa1:	jns    0x404ade
  404aa3:	test   BYTE PTR [esi+0x4fb2be5e],bh
  404aa9:	dec    edi
  404aaa:	test   al,0x20
  404aac:	fcmovbe st,st(5)
  404aae:	retf   
  404aaf:	js     0x404a4b
  404ab1:	add    bh,BYTE PTR [edi]
  404ab3:	adc    BYTE PTR [esi],ah
  404ab5:	inc    edi
  404ab6:	inc    edx
  404ab7:	ins    BYTE PTR es:[edi],dx
  404ab8:	icebp  
  404ab9:	cmp    ah,BYTE PTR [eax+0x41]
  404abc:	inc    edx
  404abd:	(bad)  
  404abe:	jnp    0x404ada
  404ac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ac1:	mov    eax,0xcd8a2878
  404ac6:	cdq    
  404ac7:	mov    dh,0xc2
  404ac9:	in     eax,0x3c
  404acb:	inc    edi
  404acc:	int    0xd5
  404ace:	inc    esp
  404acf:	inc    ebp
  404ad0:	sbb    al,0x98
  404ad2:	add    esp,DWORD PTR [si+0x11e]
  404ad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ad8:	(bad)  
  404ad9:	pusha  
  404ada:	test   al,0x76
  404adc:	aad    0xce
  404ade:	mov    BYTE PTR [ebx+0x31],dl
  404ae1:	pop    edi
  404ae2:	or     eax,0x6496daf0
  404ae7:	adc    eax,0x9e744d76
  404aec:	mov    DWORD PTR [esi-0x38c1f89],edx
  404af2:	jp     0x404ac5
  404af4:	scas   eax,DWORD PTR es:[edi]
  404af5:	sbb    ebp,0xfffffff4
  404af8:	inc    esi
  404af9:	jge    0x404a86
  404afb:	push   esi
  404afc:	out    dx,al
  404afd:	xchg   ebx,eax
  404afe:	mov    ?,WORD PTR [eax]
  404b00:	dec    ebp
  404b01:	push   ecx
  404b02:	cmp    eax,0x37da00b6
  404b07:	push   ds
  404b08:	mov    ds:0xe71c03f8,al
  404b0d:	call   0xa5958c34
  404b12:	jecxz  0x404ad8
  404b14:	pop    esi
  404b15:	and    eax,0x80d26ae0
  404b1a:	cmp    DWORD PTR [edi-0x52],ecx
  404b1d:	popa   
  404b1e:	mov    esp,0x158d089
  404b23:	jb     0x404ac8
  404b25:	inc    esp
  404b26:	jl     0x404b79
  404b28:	add    al,0xac
  404b2a:	ror    BYTE PTR [edx+eax*8-0x2aa8b5e9],cl
  404b31:	xchg   BYTE PTR [edx+ebx*8],bl
  404b34:	enter  0xb2dc,0xa
  404b38:	(bad)  
  404b39:	sub    DWORD PTR [edi-0x4c],0x76
  404b3d:	jo     0x404bbd
  404b3f:	pop    ebx
  404b40:	jecxz  0x404ac4
  404b42:	sub    BYTE PTR [ebx+0x65],al
  404b45:	mov    ah,0x0
  404b47:	icebp  
  404b48:	scas   al,BYTE PTR es:[edi]
  404b49:	push   esp
  404b4a:	pop    es
  404b4b:	mov    ebx,0xaf659b42
  404b50:	cmp    eax,0xb8d707c0
  404b55:	js     0x404b52
  404b57:	pop    edx
  404b58:	mov    ebp,0xadbd66e
  404b5d:	jg     0x404b26
  404b5f:	lahf   
  404b60:	lock imul dh
  404b63:	add    dh,al
  404b65:	ss daa 
  404b67:	dec    edi
  404b68:	lds    ebp,FWORD PTR [ebx+0xcb3b176]
  404b6e:	push   ebx
  404b6f:	add    edi,DWORD PTR [ebp+0x51]
  404b72:	ds scas al,BYTE PTR es:[edi]
  404b74:	pop    ebp
  404b75:	fnstenv [edi-0x6db3aa33]
  404b7b:	push   ecx
  404b7c:	or     BYTE PTR [eax+0x413e884e],0x73
  404b83:	jns    0x404bd2
  404b85:	ror    DWORD PTR [eax-0x7f],cl
  404b88:	adc    eax,0xffffffff
  404b8b:	xor    eax,0x0
  404b8e:	add    DWORD PTR ds:0x431010,0x415e
  404b98:	mov    DWORD PTR [ebp-0xc],eax
  404b9b:	and    DWORD PTR ds:0x431018,0x0
  404ba5:	mov    eax,ds:0x431018
  404baa:	inc    eax
  404bab:	mov    ds:0x431018,eax
  404bb0:	cmp    DWORD PTR ds:0x431018,0x27
  404bb7:	jbe    0x404be2
  404bbd:	jmp    0x404bd5
  404bc2:	push   0x2a2f
  404bc7:	push   0x42e00c
  404bcc:	push   DWORD PTR [ebp-0x14]
  404bcf:	call   DWORD PTR ds:0x4348ff
  404bd5:	cmp    DWORD PTR ds:0x431018,0x1a
  404bdc:	jb     0x404ba5
  404be2:	push   ebx
  404be3:	xor    ebx,ebx
  404be5:	xor    edi,0x8a29a12f
  404beb:	mov    eax,ecx
  404bed:	add    eax,0xfabdbee5
  404bf2:	adc    ebx,0xffffffff
  404bf5:	xor    eax,0x8a29a12f
  404bfa:	xor    ebx,0x0
  404bfd:	cmp    eax,edi
  404bff:	jne    0x404c18
  404c05:	cmp    ebx,DWORD PTR [ebp-0xc]
  404c08:	je     0x404c80
  404c0e:	jmp    0x404c18
  404c13:	mov    esi,0x3272e4
  404c18:	mov    eax,DWORD PTR [ebp-0x4]
  404c1b:	mov    edi,DWORD PTR [ebp-0x8]
  404c1e:	xor    edi,edx
  404c20:	add    edi,esi
  404c22:	mov    esi,DWORD PTR [ebp+0x8]
  404c25:	imul   edi,ecx
  404c28:	mov    ebx,DWORD PTR [ebp+0xc]
  404c2b:	xor    eax,edx
  404c2d:	add    eax,ecx
  404c2f:	mov    al,BYTE PTR [ebx+eax*1+0x3272e4]
  404c36:	mov    BYTE PTR [edi+esi*1],al
  404c39:	mov    eax,DWORD PTR [ebp-0x8]
  404c3c:	mov    esi,DWORD PTR [ebp+0x10]
  404c3f:	xor    eax,edx
  404c41:	xor    ebx,ebx
  404c43:	add    esi,0xfabdbee5
  404c49:	adc    ebx,0xffffffff
  404c4c:	lea    ecx,[ecx+eax*1+0x3272e4]
  404c53:	xor    edi,edi
  404c55:	xor    esi,0x8a29a12f
  404c5b:	xor    ebx,0x0
  404c5e:	mov    eax,ecx
  404c60:	add    eax,0xfabdbee5
  404c65:	adc    edi,0xffffffff
  404c68:	xor    eax,0x8a29a12f
  404c6d:	xor    edi,0x0
  404c70:	cmp    eax,esi
  404c72:	jne    0x404c13
  404c78:	cmp    edi,ebx
  404c7a:	jne    0x404c13
  404c80:	mov    eax,0xf89c8580
  404c85:	jmp    0x40700d
  404c8a:	das    
  404c8b:	cmp    eax,DWORD PTR [edi]
  404c8d:	test   ebx,esi
  404c8f:	sub    DWORD PTR [edi+0x7717da73],0x37cc5e2c
  404c99:	scas   al,BYTE PTR es:[edi]
  404c9a:	pop    es
  404c9b:	pop    edi
  404c9c:	jb     0x404d10
  404c9e:	pop    es
  404c9f:	pop    edi
  404ca0:	jb     0x404d14
  404ca2:	shl    ecx,0xec
  404ca5:	stos   BYTE PTR es:[edi],al
  404ca6:	jmp    0x4bcc:0x453ec13a
  404cad:	fimul  DWORD PTR [edx+0x1eb2620b]
  404cb3:	(bad)  
  404cb4:	or     ch,BYTE PTR [edx+0x5d]
  404cb7:	mov    ah,0x9b
  404cb9:	mov    ebx,0x49f30f74
  404cbe:	dec    edi
  404cbf:	dec    edi
  404cc0:	call   0x1405:0x1f62c79
  404cc7:	push   eax
  404cc8:	or     bh,al
  404cca:	lds    esp,FWORD PTR [ecx+0x96c9d3]
  404cd0:	mov    esi,0x6314c73e
  404cd5:	mov    cl,cl
  404cd7:	mov    dl,0xd5
  404cd9:	xchg   DWORD PTR [edi],edx
  404cdb:	lods   eax,DWORD PTR ds:[esi]
  404cdc:	push   0xc41b4faa
  404ce1:	in     eax,0x1
  404ce3:	cmc    
  404ce4:	cmp    ebp,DWORD PTR [ebx-0x54fe3f1f]
  404cea:	sub    DWORD PTR [edi],esp
  404cec:	aam    0x8f
  404cee:	mov    ebx,0x59303636
  404cf3:	and    BYTE PTR [edi],dh
  404cf5:	(bad)  
  404cf6:	jb     0x404c8a
  404cf8:	(bad)  
  404cfb:	push   ds
  404cfc:	mov    bl,0xf
  404cfe:	jmp    0x6dac:0xeee2d865
  404d05:	sub    al,BYTE PTR [edx]
  404d07:	fs (bad) 
  404d09:	and    DWORD PTR [edx+0x5edc11b8],ebp
  404d0f:	jle    0x404d00
  404d11:	and    dl,BYTE PTR [ecx+0x74]
  404d14:	sbb    bh,dh
  404d16:	das    
  404d17:	cmp    al,0x9d
  404d19:	mov    ebx,eax
  404d1b:	push   ss
  404d1c:	xchg   edi,eax
  404d1d:	mov    al,ds:0x9a04ea38
  404d22:	pop    ss
  404d23:	loopne 0x404cc8
  404d25:	ret    0x7b9a
  404d28:	xor    al,0x1e
  404d2a:	(bad)  
  404d2b:	aaa    
  404d2c:	inc    edx
  404d2d:	outs   dx,BYTE PTR cs:[esi]
  404d2f:	ret    
  404d30:	fs inc ebp
  404d32:	fsub   DWORD PTR [ebx+0x5de05f5b]
  404d38:	(bad)  
  404d39:	ss xchg edi,eax
  404d3b:	loope  0x404d16
  404d3d:	mov    al,ds:0x36d7593b
  404d42:	fldenv [esi+0x18]
  404d45:	mov    al,ds:0x78f08421
  404d4a:	mov    ch,0x8a
  404d4c:	mov    DWORD PTR [ebp-0x378e1c6a],edx
  404d52:	es enter 0x46c9,0xa2
  404d57:	sbb    al,0xb7
  404d59:	sub    dh,cl
  404d5b:	sub    DWORD PTR [edx+eax*4+0x6498e2c8],esp
  404d62:	sub    al,0xb1
  404d64:	jg     0x404d2b
  404d66:	stc    
  404d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d68:	test   eax,0x52101467
  404d6d:	int    0x8f
  404d6f:	cmp    ah,dl
  404d71:	imul   edx,DWORD PTR [ecx+edi*8+0xc],0xd425f1fa
  404d79:	jo     0x404d54
  404d7b:	retf   0x28d3
  404d7e:	inc    esp
  404d7f:	out    dx,eax
  404d80:	add    DWORD PTR [eax],0x2a85eb82
  404d86:	sbb    al,0xc8
  404d88:	lods   eax,DWORD PTR ds:[esi]
  404d89:	and    BYTE PTR [esi+0x67],ch
  404d8c:	xchg   edi,eax
  404d8d:	inc    edx
  404d8e:	xor    al,0x1f
  404d90:	(bad)  
  404d91:	in     eax,dx
  404d92:	cmp    eax,DWORD PTR [ebx]
  404d94:	sbb    eax,0xc7156d9e
  404d99:	call   0x5d4f99a2
  404d9e:	mov    ebp,0x1c47375b
  404da3:	ror    BYTE PTR [esi+eax*1+0x555717f0],cl
  404daa:	ss jb  0x404d59
  404dad:	adc    al,0xb6
  404daf:	pop    esi
  404db0:	sbb    DWORD PTR [ebx],edx
  404db2:	mov    esp,0x35043286
  404db7:	test   DWORD PTR [ebx],edx
  404db9:	cdq    
  404dba:	mov    ds:0x3edd3023,eax
  404dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dc0:	retf   
  404dc1:	(bad)  
  404dc2:	ds sahf 
  404dc4:	adc    DWORD PTR [ebx],0x2d
  404dc7:	retf   0xf020
  404dca:	pop    ebx
  404dcb:	out    dx,al
  404dcc:	add    eax,0x2b35ca9f
  404dd1:	data16 xor al,0xb8
  404dd4:	cmp    dl,BYTE PTR [edx]
  404dd6:	inc    ebp
  404dd7:	add    eax,0xaae9950c
  404ddc:	(bad)  
  404ddd:	das    
  404dde:	pop    ecx
  404ddf:	mov    ebp,ebp
  404de1:	push   edi
  404de2:	pop    edx
  404de3:	xchg   ecx,eax
  404de4:	mov    edx,0x699345b0
  404de9:	call   0xca591f6a
  404dee:	scas   al,BYTE PTR es:[edi]
  404def:	sub    eax,0x83ebddb1
  404df4:	dec    DWORD PTR [ecx+edx*1]
  404df7:	scas   eax,DWORD PTR es:[edi]
  404df8:	or     DWORD PTR [ecx+0x646b0bc8],esi
  404dfe:	enter  0xfec6,0x78
  404e02:	sti    
  404e03:	and    eax,0xbaafa1b4
  404e08:	sub    eax,0x9708e6a2
  404e0d:	or     BYTE PTR [ebx],0x23
  404e10:	fisubr WORD PTR [bp+si+0x31]
  404e14:	or     eax,0x51d3ec8d
  404e19:	ds loopne 0x404e3c
  404e1c:	or     al,0x77
  404e1e:	jns    0x404e41
  404e20:	xor    DWORD PTR [ebx+0x45],esp
  404e23:	fild   DWORD PTR [ebp+0x293b7d04]
  404e29:	jle    0x404e42
  404e2b:	fbstp  TBYTE PTR [edi]
  404e2d:	cli    
  404e2e:	cs pop eax
  404e30:	mov    bl,0x41
  404e32:	out    0x1e,al
  404e34:	loope  0x404e34
  404e36:	mov    ds,WORD PTR [ecx-0x73]
  404e39:	add    edx,ebp
  404e3b:	into   
  404e3c:	hlt    
  404e3d:	xor    BYTE PTR [edi],bh
  404e3f:	sahf   
  404e40:	add    al,0x3a
  404e42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e43:	and    BYTE PTR [edx+0xb],0xb9
  404e47:	in     al,dx
  404e48:	fisttp WORD PTR [ebx+0x65be425e]
  404e4e:	loope  0x404e90
  404e50:	xchg   ecx,eax
  404e51:	and    dh,BYTE PTR [ecx-0xf]
  404e54:	and    al,dl
  404e56:	sbb    DWORD PTR [ecx],edx
  404e58:	sub    ebx,DWORD PTR [eax+0x2]
  404e5b:	cmp    eax,0xce030f6f
  404e60:	jnp    0x404e75
  404e62:	cmp    BYTE PTR [edi-0x40],ah
  404e65:	aaa    
  404e66:	inc    ebp
  404e67:	cli    
  404e68:	fimul  DWORD PTR [ecx-0x1d]
  404e6b:	je     0x404e94
  404e6d:	lea    edx,[ecx+esi*2]
  404e70:	(bad)  
  404e71:	in     eax,0x70
  404e73:	ins    DWORD PTR es:[edi],dx
  404e74:	loop   0x404e06
  404e76:	push   esi
  404e77:	lods   al,BYTE PTR ds:[esi]
  404e78:	(bad)  
  404e79:	(bad)  
  404e7a:	ror    DWORD PTR [ebx-0x6d],1
  404e7d:	cmp    ebp,DWORD PTR [edx]
  404e7f:	inc    ebp
  404e80:	pop    edx
  404e81:	mov    ch,0xa9
  404e83:	push   ecx
  404e84:	inc    ecx
  404e85:	sub    al,0xaa
  404e87:	mov    ds:0xc9d48e53,al
  404e8c:	pop    esp
  404e8d:	das    
  404e8e:	outs   dx,BYTE PTR ds:[esi]
  404e8f:	jns    0x404e32
  404e91:	xchg   ebx,eax
  404e92:	jns    0x404ed0
  404e94:	retf   
  404e95:	call   0xec7e8d3c
  404e9a:	xchg   esp,eax
  404e9b:	push   esp
  404e9c:	mov    ah,0x3d
  404e9e:	sbb    al,BYTE PTR [esi+0x44]
  404ea1:	push   eax
  404ea2:	xor    al,dh
  404ea4:	iret   
  404ea5:	retf   0x524e
  404ea8:	push   ds
  404ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eaa:	aas    
  404eab:	cdq    
  404eac:	imul   ebx,eax,0x7721abdf
  404eb2:	stos   DWORD PTR es:[edi],eax
  404eb3:	pop    ss
  404eb4:	xchg   esi,eax
  404eb5:	jno    0x404f00
  404eb7:	shl    esi,cl
  404eb9:	(bad)  
  404eba:	mov    bl,0xaf
  404ebc:	cmp    cl,dh
  404ebe:	jns    0x404e6e
  404ec0:	or     eax,0x9486a503
  404ec5:	mov    ah,0xd7
  404ec7:	sar    dh,1
  404ec9:	pop    esi
  404eca:	sub    DWORD PTR [ebx-0x80],ecx
  404ecd:	lods   al,BYTE PTR ds:[esi]
  404ece:	hlt    
  404ecf:	or     cl,BYTE PTR [edx+0x114e140c]
  404ed5:	xor    al,0xc0
  404ed7:	dec    DWORD PTR [ebp-0x75410b5]
  404edd:	xchg   ebp,eax
  404ede:	mov    BYTE PTR [eax+ecx*8+0x3cecb24b],bh
  404ee5:	dec    ebx
  404ee6:	pop    edi
  404ee7:	dec    ebx
  404ee8:	push   edi
  404ee9:	dec    ebp
  404eea:	(bad)  
  404eeb:	cdq    
  404eec:	dec    esi
  404eed:	xor    al,cl
  404eef:	push   ss
  404ef0:	daa    
  404ef1:	cmc    
  404ef2:	mov    ebp,0x7ad0719
  404ef7:	inc    ebx
  404ef8:	jecxz  0x404f1e
  404efa:	clc    
  404efb:	ret    
  404efc:	lds    esp,FWORD PTR [ebp-0x3]
  404eff:	(bad)  
  404f01:	push   cs
  404f02:	mov    ch,0xc2
  404f04:	ja     0x404f55
  404f06:	fldcw  WORD PTR [ebx+0x5]
  404f09:	xchg   esi,eax
  404f0b:	stos   DWORD PTR es:[edi],eax
  404f0c:	mov    ds:0xb5640048,al
  404f11:	not    DWORD PTR [esp+edx*8-0x54]
  404f15:	out    dx,eax
  404f16:	cmovs  esp,eax
  404f19:	out    0x30,al
  404f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f1c:	sub    DWORD PTR [esi+ebx*8+0x5b],ebx
  404f20:	push   edi
  404f21:	mov    al,ds:0xb3f803f0
  404f26:	ds test eax,0xf5185b83
  404f2c:	jecxz  0x404eef
  404f2e:	sar    DWORD PTR [edi+edi*2],0x32
  404f32:	aas    
  404f33:	add    al,0x3c
  404f35:	xchg   ebp,eax
  404f36:	jle    0x404f7e
  404f38:	popf   
  404f39:	jb     0x404fa6
  404f3b:	xor    eax,0xa4bdd03d
  404f40:	or     ch,BYTE PTR [eax-0xa]
  404f43:	arpl   bp,bx
  404f45:	out    0xbf,eax
  404f47:	dec    eax
  404f48:	in     eax,0xf7
  404f4a:	jne    0x404f65
  404f4c:	and    DWORD PTR [esi+edi*1],edx
  404f4f:	mov    eax,ds:0xd7c0137d
  404f54:	fisub  DWORD PTR [esp+eiz*8+0x4a921b37]
  404f5b:	mov    ds:0x20454c0f,al
  404f60:	cwde   
  404f61:	mov    bl,0x56
  404f63:	stos   DWORD PTR es:[edi],eax
  404f64:	inc    edx
  404f65:	into   
  404f66:	mov    BYTE PTR [ecx],dh
  404f68:	scas   al,BYTE PTR es:[edi]
  404f69:	int3   
  404f6a:	xchg   esp,eax
  404f6b:	xor    edi,DWORD PTR [edi+0x11]
  404f6e:	mov    ch,0x15
  404f70:	pop    eax
  404f71:	lock call 0x11252e1f
  404f77:	mov    eax,ds:0x8157ae09
  404f7c:	leave  
  404f7d:	inc    eax
  404f7e:	pop    es
  404f7f:	aad    0x46
  404f81:	cli    
  404f82:	loopne 0x404fd6
  404f84:	gs and al,0x8e
  404f87:	lods   eax,DWORD PTR ds:[esi]
  404f88:	hlt    
  404f89:	dec    eax
  404f8a:	enter  0xbd4,0x30
  404f8e:	sbb    DWORD PTR [edi+0x1b8f6721],ecx
  404f94:	fiadd  DWORD PTR [edi-0x23]
  404f97:	adc    cl,BYTE PTR [eax]
  404f99:	pop    esp
  404f9a:	push   ebx
  404f9b:	in     eax,dx
  404f9c:	inc    esi
  404f9d:	lahf   
  404f9e:	push   ebp
  404f9f:	and    BYTE PTR [edx],dh
  404fa1:	dec    esi
  404fa2:	cmp    edx,DWORD PTR [esi]
  404fa4:	call   0x597f:0x93e73590
  404fab:	out    0x6,al
  404fad:	les    esp,FWORD PTR [eax+edx*1]
  404fb0:	pusha  
  404fb1:	pop    es
  404fb2:	in     al,dx
  404fb3:	loope  0x404fca
  404fb5:	clc    
  404fb6:	enter  0x3f4,0xcf
  404fba:	int3   
  404fbb:	sub    BYTE PTR [eax],dh
  404fbd:	into   
  404fbe:	inc    eax
  404fbf:	dec    eax
  404fc0:	inc    eax
  404fc1:	aam    0xae
  404fc3:	xor    eax,0x1085edb9
  404fc8:	ds out 0x80,eax
  404fcb:	pop    ebp
  404fcc:	aas    
  404fcd:	push   eax
  404fce:	aas    
  404fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fd0:	test   eax,0x318efffc
  404fd5:	aas    
  404fd6:	es pop ebx
  404fd8:	out    dx,al
  404fd9:	jmp    0x405056
  404fdb:	or     edi,edx
  404fdd:	fnstenv [edi+0x68afe1b8]
  404fe3:	jb     0x404fc7
  404fe5:	adc    ch,ch
  404fe7:	jns    0x404fc1
  404fe9:	or     dl,BYTE PTR [ebp-0x14f42f36]
  404fef:	loope  0x404f85
  404ff1:	jmp    0x404f82
  404ff3:	ja     0x40501c
  404ff5:	push   0x74b9a401
  404ffa:	pusha  
  404ffb:	scas   eax,DWORD PTR es:[edi]
  404ffc:	mov    cl,0xb6
  404ffe:	add    ebp,DWORD PTR [ebx+0x14]
  405001:	pop    es
  405002:	push   ds
  405003:	xchg   ebp,eax
  405004:	pop    eax
  405005:	aas    
  405006:	jb     0x404fb4
  405008:	ret    
  405009:	push   0x73
  40500b:	out    0xb7,eax
  40500d:	fcomi  st,st(7)
  40500f:	ja     0x404fb4
  405011:	pop    ecx
  405012:	xchg   ecx,eax
  405013:	lea    eax,[eax]
  405015:	pop    es
  405016:	inc    ebx
  405017:	jle    0x404ffd
  405019:	jp     0x404fad
  40501b:	dec    ebx
  40501c:	outs   dx,DWORD PTR ds:[esi]
  40501d:	adc    BYTE PTR [edx+0x5],0xc9
  405021:	add    eax,0x81fd50ca
  405026:	jmp    0x404fac
  405028:	jo     0x404ff9
  40502a:	pop    ebp
  40502b:	xchg   ebx,eax
  40502c:	stos   BYTE PTR es:[edi],al
  40502d:	and    al,BYTE PTR [ecx]
  40502f:	je     0x405082
  405031:	sbb    DWORD PTR ds:0x4b6da39,0x7c
  405038:	or     esi,ecx
  40503a:	div    BYTE PTR [eax]
  40503c:	jg     0x405026
  40503e:	retf   
  40503f:	imul   edx,DWORD PTR [ebp+0xaf2507a],0x3f
  405046:	add    bh,BYTE PTR [edi]
  405048:	xchg   edi,eax
  405049:	ja     0x405070
  40504b:	(bad)  
  40504c:	stc    
  40504d:	aam    0x72
  40504f:	dec    eax
  405050:	cld    
  405051:	push   edi
  405052:	and    al,0xbf
  405054:	xor    DWORD PTR [ecx],edx
  405056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405057:	push   0x41f8fdde
  40505c:	dec    esi
  40505d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40505e:	sahf   
  40505f:	sbb    DWORD PTR [esi+eiz*8-0x33],ebp
  405063:	ret    
  405064:	adc    dl,dl
  405066:	pop    edi
  405067:	outs   dx,BYTE PTR ds:[esi]
  405068:	mov    cl,BYTE PTR [ebx+0x5813c537]
  40506e:	dec    ecx
  40506f:	inc    ebx
  405070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405071:	lea    esp,[esi+0x51]
  405074:	inc    esi
  405075:	push   edi
  405076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405077:	jecxz  0x404ffd
  405079:	xor    cl,bl
  40507b:	cmp    esi,0xffffff87
  40507e:	cmp    ah,bh
  405080:	mov    ah,0x67
  405082:	mov    esp,0xabe89e26
  405087:	mov    al,ch
  405089:	leave  
  40508a:	ds sub eax,0xc96da795
  405090:	jb     0x4050f1
  405092:	out    dx,al
  405093:	stc    
  405094:	cmc    
  405095:	mov    ecx,DWORD PTR [ebp+0x585be50a]
  40509b:	(bad)  
  40509c:	loop   0x4050af
  40509e:	push   DWORD PTR [ebx+ebp*8-0x5e]
  4050a2:	pop    ecx
  4050a3:	mov    bl,0xcc
  4050a5:	clc    
  4050a6:	aad    0x0
  4050a8:	clc    
  4050a9:	sub    al,BYTE PTR [edx+0x153a6dc6]
  4050af:	mov    ebx,0xcf57b5d0
  4050b4:	or     BYTE PTR [ebx-0x5a62fd16],0x5d
  4050bb:	mov    bh,0x72
  4050bd:	loop   0x4050a7
  4050bf:	ror    DWORD PTR [eax+0x719a3d40],0x56
  4050c6:	push   ecx
  4050c7:	je     0x40507c
  4050c9:	lods   eax,DWORD PTR ds:[esi]
  4050ca:	idiv   DWORD PTR [ecx+0xf]
  4050cd:	push   ds
  4050ce:	icebp  
  4050cf:	or     al,0x61
  4050d1:	fcmovnb st,st(6)
  4050d3:	inc    ebx
  4050d4:	dec    edx
  4050d5:	sbb    eax,0xead54bf6
  4050da:	xchg   ecx,eax
  4050db:	sahf   
  4050dc:	jle    0x4050a3
  4050de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050df:	mov    DWORD PTR [ecx],ecx
  4050e1:	in     al,0x2b
  4050e3:	cmc    
  4050e4:	mov    ds:0x36e4f517,eax
  4050e9:	mov    edx,0xd8237d98
  4050ee:	inc    ebp
  4050ef:	(bad)  
  4050f0:	and    eax,0xeb161e3c
  4050f5:	call   0xb165:0xc27fdcf3
  4050fc:	cdq    
  4050fd:	pop    ebp
  4050fe:	into   
  4050ff:	mov    eax,0xc69bddc6
  405104:	stos   BYTE PTR es:[edi],al
  405105:	cli    
  405106:	mov    dh,0xbe
  405108:	push   ds
  405109:	dec    eax
  40510a:	out    dx,eax
  40510b:	pop    ecx
  40510c:	cmp    eax,0x73b5d051
  405111:	cld    
  405112:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  405114:	sub    al,BYTE PTR ds:0xb49edcdb
  40511a:	jo     0x405128
  40511c:	scas   eax,DWORD PTR es:[edi]
  40511d:	stos   DWORD PTR es:[edi],eax
  40511e:	push   es
  40511f:	and    esp,DWORD PTR [ebp-0x6454cb45]
  405125:	inc    edi
  405126:	fldcw  WORD PTR [edx+0x73]
  405129:	xchg   ebx,eax
  40512a:	icebp  
  40512b:	sub    eax,0x91e05507
  405130:	out    dx,al
  405131:	aam    0xce
  405133:	adc    BYTE PTR cs:[esi],dh
  405136:	arpl   WORD PTR [ebp-0x16b0eebb],ax
  40513c:	sub    esp,DWORD PTR [eax+0x21f16049]
  405142:	lods   eax,DWORD PTR ds:[esi]
  405143:	ret    0x72b
  405146:	dec    ebp
  405147:	loop   0x405137
  405149:	jle    0x405106
  40514b:	cdq    
  40514c:	ds jno 0x4051a8
  40514f:	lea    esp,[eax]
  405151:	adc    al,0x1b
  405153:	xor    esp,eax
  405155:	(bad)  
  405156:	sub    dl,al
  405158:	inc    esi
  405159:	out    0x74,eax
  40515b:	lock scas al,BYTE PTR es:[edi]
  40515d:	add    BYTE PTR [ebp-0x4e],bh
  405160:	pop    es
  405161:	js     0x40511e
  405163:	retf   
  405164:	lock sub dh,dh
  405167:	pop    eax
  405168:	fisubr WORD PTR [ebx+0x63]
  40516b:	cmp    ecx,DWORD PTR [ecx]
  40516d:	(bad)  
  40516e:	jg     0x4051d2
  405170:	adc    BYTE PTR [eax-0x241d5885],al
  405176:	add    al,0x26
  405178:	call   0x2fc47bd0
  40517d:	dec    ebp
  40517e:	in     eax,dx
  40517f:	push   esp
  405180:	retf   
  405181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405183:	xchg   ebp,eax
  405184:	hlt    
  405185:	inc    esi
  405186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405187:	xchg   esp,eax
  405188:	shl    BYTE PTR ds:0x11cb0248,0xa2
  40518f:	inc    esp
  405190:	cmp    BYTE PTR [eax+ebp*8],dl
  405193:	xchg   esi,eax
  405194:	xor    edi,DWORD PTR [ebx+esi*4]
  405197:	cmc    
  405198:	clc    
  405199:	push   ebx
  40519a:	pusha  
  40519b:	or     ebp,esp
  40519d:	cli    
  40519e:	(bad)  
  40519f:	loopne 0x40514e
  4051a1:	push   0xa094c99d
  4051a6:	or     eax,0x62ec8422
  4051ab:	sbb    ah,BYTE PTR [edx-0x6d]
  4051ae:	inc    esi
  4051af:	je     0x405223
  4051b1:	sbb    ebx,esp
  4051b3:	fisttp QWORD PTR [ebx+0x22]
  4051b6:	pop    ebx
  4051b7:	adc    eax,edi
  4051b9:	gs jmp 0x3b05:0x54006ccd
  4051c1:	mov    ah,0x87
  4051c3:	mov    esp,0x247d886a
  4051c8:	or     eax,0xe0c07f45
  4051cd:	out    0x7e,al
  4051cf:	lods   eax,DWORD PTR ds:[esi]
  4051d0:	mov    ds:0x24f42b85,eax
  4051d5:	mov    ecx,0x7fe8df4b
  4051da:	or     DWORD PTR [ebp+0x39e5342],ebp
  4051e0:	sbb    esi,edx
  4051e2:	into   
  4051e3:	aad    0xd7
  4051e5:	sti    
  4051e6:	ins    DWORD PTR es:[edi],dx
  4051e7:	inc    ecx
  4051e8:	(bad)  
  4051e9:	repz pop esi
  4051eb:	xchg   dh,dl
  4051ed:	sub    ah,bl
  4051ef:	xor    bh,BYTE PTR [eax-0x24]
  4051f2:	inc    esp
  4051f3:	sar    DWORD PTR [esi],cl
  4051f5:	sbb    al,al
  4051f7:	sub    DWORD PTR [esi],ebp
  4051f9:	or     DWORD PTR [esi+eiz*8+0x57e85283],0xffffffcc
  405201:	fisubr DWORD PTR [edi+edi*8]
  405204:	test   DWORD PTR [edi+0x3],esp
  405207:	cwde   
  405208:	sub    eax,ecx
  40520a:	inc    ebp
  40520b:	ja     0x40525a
  40520d:	dec    ebp
  40520e:	mov    ebx,0x92eaa612
  405213:	sub    eax,0x31f4d02f
  405218:	add    ah,BYTE PTR [esp+ebx*8-0x4d]
  40521c:	loop   0x40520b
  40521e:	ja     0x405228
  405220:	sbb    al,0x81
  405222:	xor    bl,bh
  405224:	inc    esp
  405225:	test   al,0x58
  405227:	outs   dx,DWORD PTR ds:[esi]
  405228:	(bad)  
  405229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40522a:	adc    ah,bl
  40522c:	leave  
  40522d:	lods   al,BYTE PTR ds:[esi]
  40522e:	adc    BYTE PTR [edx],ah
  405230:	imul   edi,DWORD PTR [edi],0x244f7c41
  405236:	inc    eax
  405237:	imul   edx,DWORD PTR [edi-0x71cb820d],0x4
  40523e:	cld    
  40523f:	adc    BYTE PTR [edi-0x461702dc],0xd0
  405246:	push   edx
  405247:	leave  
  405248:	inc    esi
  405249:	dec    edx
  40524a:	ret    
  40524b:	mov    dh,0xd7
  40524d:	push   ss
  40524e:	pop    ds
  40524f:	mov    ss,WORD PTR [ebx-0x4eecc25c]
  405255:	or     ebp,DWORD PTR [ebx-0x11]
  405258:	mov    ebp,0x58a77bc9
  40525d:	xchg   edi,eax
  40525e:	aaa    
  40525f:	test   al,0xfa
  405261:	loopne 0x405240
  405263:	pushf  
  405264:	pop    eax
  405265:	xchg   ecx,eax
  405266:	jmp    0x2588742e
  40526b:	fs pop ebp
  40526d:	int    0xb6
  40526f:	push   esi
  405270:	aad    0x84
  405272:	hlt    
  405273:	mov    ecx,0x13d0407f
  405278:	adc    dh,BYTE PTR [edi+0x24]
  40527b:	in     eax,0xfa
  40527d:	ret    
  40527e:	jle    0x4052e0
  405280:	inc    edi
  405281:	fwait
  405282:	dec    esp
  405283:	ins    BYTE PTR es:[edi],dx
  405284:	sbb    DWORD PTR [esi-0x2],0x478a8599
  40528b:	cmp    BYTE PTR [ecx+esi*1],dl
  40528e:	stos   BYTE PTR es:[edi],al
  40528f:	push   0x79cf6c3d
  405294:	outs   dx,BYTE PTR ds:[esi]
  405295:	adc    BYTE PTR [edx+0x788cb17d],bh
  40529b:	or     eax,esp
  40529d:	adc    DWORD PTR [edi-0x7b20be49],ecx
  4052a3:	and    DWORD PTR [edx-0x4f],0x562dbdcc
  4052aa:	jp     0x405312
  4052ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052ad:	jbe    0x4052db
  4052af:	pop    ecx
  4052b0:	lds    edi,FWORD PTR [ecx-0x66]
  4052b3:	ins    DWORD PTR es:[edi],dx
  4052b4:	cmp    eax,0x6984cd46
  4052b9:	jb     0x40523b
  4052bb:	push   ebx
  4052bc:	retf   0x1721
  4052bf:	lea    ebp,[ecx+eax*4]
  4052c2:	or     BYTE PTR [edi+esi*2+0x75],dh
  4052c6:	cdq    
  4052c7:	cmp    al,BYTE PTR [edx]
  4052c9:	xor    BYTE PTR [edi-0x4f],0x46
  4052cd:	inc    edx
  4052ce:	xchg   ebx,eax
  4052cf:	(bad)  
  4052d0:	lahf   
  4052d1:	xchg   DWORD PTR [edx+0x12],edx
  4052d4:	fnstcw WORD PTR [edi-0x57c9d0b5]
  4052da:	dec    edx
  4052db:	xor    BYTE PTR [eax-0x2e7ec825],cl
  4052e1:	outs   dx,BYTE PTR ds:[esi]
  4052e2:	adc    esi,edi
  4052e4:	fs sub eax,0xa6b6969c
  4052ea:	push   ebp
  4052eb:	not    BYTE PTR [ecx+eax*4-0x2b2e5531]
  4052f2:	mov    ecx,0x9c2a0220
  4052f7:	mov    ebx,0xcf1b25f1
  4052fc:	fistp  QWORD PTR [edi+0x7c60378f]
  405302:	test   al,0x95
  405304:	push   DWORD PTR [ebx+0x3e]
  405307:	sahf   
  405308:	xchg   ebx,eax
  405309:	addr16 dec ebx
  40530b:	bound  ecx,QWORD PTR [ebx-0x24]
  40530e:	xchg   esp,esp
  405310:	inc    esi
  405311:	fcomp  DWORD PTR [eax+ecx*4]
  405314:	cmp    al,0x5
  405316:	fldenv [ecx+0x2e]
  405319:	push   edi
  40531a:	inc    DWORD PTR [ecx-0x7e59a6b7]
  405320:	popf   
  405321:	pop    eax
  405322:	add    al,0xd9
  405324:	jp     0x405350
  405326:	mov    ds:0x9e03cd7c,eax
  40532b:	test   BYTE PTR [eax+0x3a],dh
  40532e:	xor    BYTE PTR [ebp+0x7b4fbaab],0x58
  405335:	adc    ecx,DWORD PTR [edi+0x21]
  405338:	sub    bl,BYTE PTR [edx+ebx*2+0x33]
  40533c:	out    0xec,eax
  40533e:	gs pusha 
  405340:	mov    cl,0x87
  405342:	add    edi,edx
  405344:	inc    edx
  405345:	cli    
  405346:	sar    DWORD PTR [edx+0x4266a561],0xe3
  40534d:	pushf  
  40534e:	mov    bl,0x80
  405350:	pop    eax
  405351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405352:	xor    eax,DWORD PTR [edi+edx*1-0x56]
  405356:	and    BYTE PTR [edi-0x5b68c9e1],al
  40535c:	ror    BYTE PTR [ebp+0xeaa3495],0x83
  405363:	mov    dl,0x9d
  405365:	add    eax,DWORD PTR [ebx]
  405367:	jbe    0x405300
  405369:	pushf  
  40536a:	lods   eax,DWORD PTR ds:[esi]
  40536b:	jle    0x40539e
  40536d:	pop    eax
  40536e:	xor    BYTE PTR [esi-0x14],cl
  405371:	nop
  405372:	push   0x659889b0
  405377:	sub    ebx,DWORD PTR [edi+0x62a031ea]
  40537d:	mov    esp,0xa095679e
  405382:	and    eax,0xa0740782
  405387:	jecxz  0x4053a6
  405389:	pop    esi
  40538a:	scas   al,BYTE PTR es:[edi]
  40538b:	lds    edx,FWORD PTR [edi]
  40538d:	je     0x4053c2
  40538f:	mov    cl,0xfd
  405391:	out    0xb0,eax
  405393:	adc    DWORD PTR [ecx+0x47],0x75c75966
  40539a:	mov    DWORD PTR [ebp+0x45adda25],ebp
  4053a0:	je     0x4053a1
  4053a2:	inc    ecx
  4053a3:	fs jl  0x4053df
  4053a6:	(bad)  
  4053a7:	js     0x4053ed
  4053a9:	xor    ch,BYTE PTR ss:[eax+0x980cdd7]
  4053b0:	mov    esp,0x71e44b3
  4053b5:	sahf   
  4053b6:	call   0x98382f93
  4053bb:	adc    edi,edi
  4053bd:	mov    cl,0x71
  4053bf:	lods   eax,DWORD PTR ds:[esi]
  4053c0:	adc    eax,0x1880adb9
  4053c5:	adc    DWORD PTR ds:[eax+0x43],esi
  4053c9:	sbb    ah,BYTE PTR [esi-0x160c88e2]
  4053cf:	aad    0xa2
  4053d1:	shr    DWORD PTR [ebx-0x6b1f3182],cl
  4053d7:	mov    al,ds:0x4f094681
  4053dc:	add    dl,BYTE PTR [ebx+0x3e]
  4053df:	jno    0x40545a
  4053e1:	aad    0x3a
  4053e3:	or     bl,BYTE PTR [ebx+0x4f]
  4053e6:	js     0x4053a6
  4053e8:	(bad)  
  4053e9:	push   ds
  4053ea:	mov    eax,0x428edd6
  4053ef:	repz shl DWORD PTR [ecx],1
  4053f2:	(bad)  
  4053f3:	scas   al,BYTE PTR es:[edi]
  4053f4:	mov    bh,0xdd
  4053f6:	or     eax,0x98417971
  4053fb:	mov    edx,0x4daa170d
  405400:	int    0x86
  405402:	inc    ebp
  405403:	ins    BYTE PTR es:[edi],dx
  405404:	das    
  405405:	int    0xbb
  405407:	iret   
  405408:	and    al,0x65
  40540a:	or     DWORD PTR [edi+eax*2],esp
  40540d:	xor    BYTE PTR [eax+0x3c],ah
  405410:	jp     0x40542f
  405412:	pop    ds
  405413:	js     0x405472
  405415:	mov    esi,0xc3974e47
  40541a:	adc    al,0x4
  40541c:	pusha  
  40541d:	js     0x4053e5
  40541f:	and    DWORD PTR [ecx+ebx*8],0xefdc321
  405426:	dec    esp
  405427:	sbb    ecx,edx
  405429:	jne    0x4053e2
  40542b:	mov    ah,BYTE PTR [ebx+0x6c]
  40542e:	cmc    
  40542f:	and    esi,ecx
  405431:	popa   
  405432:	dec    ebp
  405433:	mov    bh,0x47
  405435:	repz mov dl,0x7f
  405438:	mov    esi,0xbfa07f6e
  40543d:	pop    ecx
  40543e:	jge    0x405457
  405440:	or     DWORD PTR [edi-0x6e],esi
  405443:	or     DWORD PTR [edx-0xd09a5f5],esi
  405449:	stos   BYTE PTR es:[edi],al
  40544a:	(bad)  
  40544b:	jl     0x405499
  40544d:	ins    BYTE PTR es:[edi],dx
  40544e:	mov    ds:0x43fb2d8,al
  405453:	cmp    BYTE PTR ds:[edx-0xc1c15af],bl
  40545a:	sar    DWORD PTR [edx],cl
  40545c:	(bad)  
  40545d:	pop    ecx
  40545e:	or     DWORD PTR [ebp-0x47],ecx
  405461:	pop    ecx
  405462:	mov    al,ds:0x1c1a0719
  405467:	mov    bl,0x5
  405469:	inc    esi
  40546a:	(bad)  ds:0xd081bc4e
  405470:	fild   QWORD PTR [esi+0x673e479a]
  405476:	push   ecx
  405477:	xchg   edx,eax
  405478:	cmp    eax,0x475c493c
  40547d:	sbb    al,dh
  40547f:	pop    ebp
  405480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405481:	mov    ebx,0xca40aaeb
  405486:	addr16 jnp 0x405485
  405489:	sbb    eax,0xa03035dd
  40548e:	stos   BYTE PTR es:[edi],al
  40548f:	xor    BYTE PTR [esi+0x3153d90e],0xb8
  405496:	pop    esi
  405497:	fnsave [ecx-0x416a7332]
  40549d:	inc    ebp
  40549e:	cdq    
  40549f:	inc    ebx
  4054a0:	or     BYTE PTR [eax+ecx*1-0x2],dl
  4054a4:	repnz test BYTE PTR [eax-0x27],cl
  4054a8:	fsqrt  
  4054aa:	push   edi
  4054ab:	xchg   ecx,eax
  4054ac:	xchg   esi,eax
  4054ad:	add    al,0x9a
  4054af:	xor    eax,0xf7ccf28b
  4054b4:	rcr    BYTE PTR [edx+0x70],cl
  4054b7:	jmp    0x405460
  4054b9:	pop    ss
  4054ba:	jbe    0x4054f7
  4054bc:	push   esi
  4054bd:	push   0xffffff8c
  4054bf:	loop   0x40545e
  4054c1:	cmp    bh,BYTE PTR [ebp+edx*2-0x29]
  4054c5:	idiv   DWORD PTR [esi-0x5f6a15e9]
  4054cb:	ins    DWORD PTR es:[edi],dx
  4054cc:	loopne 0x40553f
  4054ce:	cli    
  4054cf:	or     eax,0x861911ca
  4054d4:	pop    eax
  4054d5:	push   ss
  4054d6:	adc    DWORD PTR [eax],edx
  4054d8:	scas   al,BYTE PTR es:[edi]
  4054d9:	and    al,al
  4054db:	adc    ebx,DWORD PTR [eax-0x6d]
  4054de:	aad    0x92
  4054e0:	push   0x4a17b482
  4054e5:	lahf   
  4054e6:	sbb    dl,BYTE PTR [ecx]
  4054e8:	ds scas al,BYTE PTR es:[edi]
  4054ea:	mov    dl,0x13
  4054ec:	out    0x49,al
  4054ee:	ja     0x405552
  4054f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054f1:	jae    0x405554
  4054f3:	stos   DWORD PTR es:[edi],eax
  4054f4:	mov    bl,0xbb
  4054f6:	test   dl,dl
  4054f8:	daa    
  4054f9:	stc    
  4054fa:	add    edx,edx
  4054fc:	jo     0x405548
  4054fe:	push   esi
  4054ff:	push   ebx
  405500:	scas   eax,DWORD PTR es:[di]
  405502:	jle    0x40549a
  405504:	push   es
  405505:	into   
  405506:	ror    BYTE PTR [edi+0x13],0x41
  40550a:	or     DWORD PTR [eax-0x637cefc9],edx
  405510:	in     al,0xaa
  405512:	xchg   BYTE PTR [esi+eiz*2],bl
  405515:	ins    BYTE PTR es:[edi],dx
  405516:	sub    ebp,DWORD PTR ds:0x94917982
  40551c:	add    al,BYTE PTR [ebp-0x6b88d62b]
  405522:	or     eax,0xcc28ad21
  405527:	sub    DWORD PTR [ecx-0x59],ecx
  40552a:	fld    QWORD PTR [ebx+0x1e80ce44]
  405530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405531:	jp     0x405539
  405533:	jmp    0xf38e:0x14a150f1
  40553a:	push   ebx
  40553b:	into   
  40553c:	outs   dx,BYTE PTR ds:[esi]
  40553d:	pop    ebp
  40553e:	pushf  
  40553f:	imul   BYTE PTR [esi]
  405541:	sub    BYTE PTR [ebx-0x17457ba3],bh
  405547:	mov    al,0x43
  405549:	push   0xffffffc6
  40554b:	lods   al,BYTE PTR ds:[esi]
  40554c:	sub    cl,BYTE PTR [ecx+edx*8-0x4c]
  405550:	jmp    0xb61f:0x9bea718
  405557:	xor    esp,DWORD PTR [esi-0x59]
  40555a:	stos   BYTE PTR es:[edi],al
  40555b:	(bad)  
  40555c:	fsubp  st(3),st
  40555e:	and    edi,DWORD PTR [ebp-0x48]
  405561:	repz sbb BYTE PTR ds:0x58b6de35,al
  405568:	or     DWORD PTR [ecx-0x66],esi
  40556b:	or     ebx,ebp
  40556d:	mov    esi,0x3e9f68b8
  405572:	into   
  405573:	jns    0x40556e
  405575:	mov    edi,0x3d4b9571
  40557a:	fstp   QWORD PTR [esi]
  40557c:	ss retf 0xce15
  405580:	xchg   esi,edx
  405582:	dec    eax
  405583:	push   ss
  405584:	jge    0x4055cb
  405586:	or     ebp,DWORD PTR [edi+ebx*8-0x7c]
  40558a:	cwde   
  40558b:	lahf   
  40558c:	xor    DWORD PTR [eax+ebp*4-0x29],esi
  405590:	jmp    0xf1d10206
  405595:	stos   BYTE PTR es:[edi],al
  405596:	mov    ds:0x9f4ab5b6,eax
  40559b:	xor    edx,ebp
  40559d:	loopne 0x40558f
  40559f:	aad    0x91
  4055a1:	or     edx,DWORD PTR [ecx]
  4055a3:	pop    eax
  4055a4:	xor    BYTE PTR [edx],bl
  4055a6:	enter  0xa503,0xc
  4055aa:	arpl   WORD PTR [ecx],ax
  4055ac:	sbb    al,0x98
  4055ae:	out    dx,al
  4055af:	icebp  
  4055b0:	adc    edi,edi
  4055b2:	push   esi
  4055b3:	pusha  
  4055b4:	cmp    DWORD PTR [esp+ebx*2],edi
  4055b7:	arpl   WORD PTR [ecx-0x47770b5f],sp
  4055bd:	push   ecx
  4055be:	or     esi,DWORD PTR [ebp-0x47]
  4055c1:	sub    ebx,DWORD PTR [eax]
  4055c3:	(bad)  
  4055c4:	sub    edi,DWORD PTR [eax]
  4055c6:	jmp    0xead7c063
  4055cb:	outs   dx,BYTE PTR ds:[esi]
  4055cc:	pusha  
  4055cd:	jg     0x4055fc
  4055cf:	loop   0x405624
  4055d1:	stos   DWORD PTR es:[edi],eax
  4055d2:	lock cwde 
  4055d4:	je     0x40555b
  4055d6:	sub    BYTE PTR [ecx],dh
  4055d8:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4055da:	jle    0x405603
  4055dc:	cmp    DWORD PTR [esi+0x6],esp
  4055df:	int3   
  4055e0:	sbb    esi,DWORD PTR [edi]
  4055e2:	mov    bl,0x56
  4055e4:	int3   
  4055e5:	dec    esi
  4055e6:	sub    eax,0x77274564
  4055eb:	pop    ds
  4055ec:	mov    esi,0xa2f984d6
  4055f1:	and    dl,BYTE PTR [ecx-0x20]
  4055f4:	cwde   
  4055f5:	add    DWORD PTR [eax+ecx*4+0x6e53ac4e],ebp
  4055fc:	mov    es,edx
  4055fe:	and    edi,DWORD PTR [eax+ecx*1+0x3]
  405602:	(bad)  
  405604:	call   0x55e6:0xe564c958
  40560b:	fistp  QWORD PTR [ebx-0x7b67b12f]
  405611:	std    
  405612:	addr16 out dx,eax
  405614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405615:	xchg   ecx,eax
  405616:	jp     0x4055fe
  405618:	jne    0x405655
  40561a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40561b:	(bad)  
  40561d:	mov    ah,0xf1
  40561f:	fdiv   DWORD PTR [eax+0x3f2525fa]
  405625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405626:	into   
  405627:	jnp    0x405633
  405629:	add    eax,0xfa6882a0
  40562e:	fdivr  st(4),st
  405630:	loope  0x40566e
  405632:	pop    ecx
  405633:	cmp    esp,DWORD PTR ds:0xa272dc33
  405639:	mov    al,0x7b
  40563b:	add    DWORD PTR [ebx-0x1adfd62e],edx
  405641:	out    dx,eax
  405642:	jno    0x40561a
  405644:	sbb    eax,0x23f47e92
  405649:	xlat   BYTE PTR ds:[ebx]
  40564a:	daa    
  40564b:	push   esi
  40564c:	aas    
  40564d:	jo     0x4056a9
  40564f:	in     eax,0x31
  405651:	adc    al,BYTE PTR [edi-0x20]
  405654:	mov    al,ds:0x48f36ff
  405659:	(bad)  
  40565b:	clc    
  40565c:	paddsw mm5,QWORD PTR [ebp+0x77bf7910]
  405663:	frstor [esp+ecx*4+0x56]
  405667:	shr    BYTE PTR [eax-0x1e81a190],cl
  40566d:	xlat   BYTE PTR ds:[ebx]
  40566e:	sbb    DWORD PTR [ecx+0x48c1ca1c],edx
  405674:	jge    0x4056bc
  405676:	jmp    0xe01a:0x233cce0b
  40567d:	sbb    edx,esp
  40567f:	gs loop 0x405616
  405682:	push   ebx
  405683:	inc    esi
  405684:	mov    eax,0xaa159d2b
  405689:	jno    0x405651
  40568b:	push   edx
  40568c:	outs   dx,BYTE PTR ds:[esi]
  40568d:	rol    BYTE PTR [eax-0x6b],cl
  405690:	ret    0x1479
  405693:	popf   
  405694:	mov    eax,edx
  405696:	pop    ecx
  405697:	or     BYTE PTR [ebx+0x48],ch
  40569a:	pusha  
  40569b:	and    ebx,edx
  40569d:	jge    0x405623
  40569f:	(bad)
  4056a3:	stc    
  4056a4:	ss xor al,0x3e
  4056a7:	das    
  4056a8:	shr    BYTE PTR [edi-0x41a2b3d3],0x26
  4056af:	push   esp
  4056b0:	jno    0x405646
  4056b2:	ret    
  4056b3:	stc    
  4056b4:	dec    ebp
  4056b5:	and    BYTE PTR [eax+0xcfd37b],bh
  4056bb:	jecxz  0x4056f2
  4056bd:	mov    WORD PTR ss:[ebx-0x16],ds
  4056c1:	add    ebx,DWORD PTR [edi]
  4056c3:	retf   
  4056c4:	jge    0x405736
  4056c6:	nop
  4056c7:	cmp    al,0x10
  4056c9:	sahf   
  4056ca:	mov    bl,0xa6
  4056cc:	arpl   WORD PTR [eax+0x58],di
  4056cf:	adc    BYTE PTR [esi+0x6b],al
  4056d2:	inc    eax
  4056d3:	lods   al,BYTE PTR ds:[esi]
  4056d4:	mov    al,0x6
  4056d6:	cld    
  4056d7:	sbb    al,0xf
  4056d9:	xchg   edx,eax
  4056da:	and    al,0xd9
  4056dc:	cwde   
  4056dd:	mov    esp,0x27aed7b
  4056e2:	sbb    bh,BYTE PTR ds:0xd820d1e0
  4056e8:	enter  0x234d,0xee
  4056ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ed:	pop    edi
  4056ee:	mov    cl,0x40
  4056f0:	dec    eax
  4056f1:	imul   esi,DWORD PTR [edx+eiz*1+0x7c],0x11
  4056f6:	mov    edx,eax
  4056f8:	mov    edx,0x748e33c9
  4056fd:	push   ecx
  4056fe:	add    DWORD PTR [ebx-0x30f72354],edx
  405704:	int3   
  405705:	in     al,dx
  405706:	pop    ss
  405707:	les    ebp,FWORD PTR [esp-0x38]
  40570b:	sbb    BYTE PTR [edi-0x6427665d],ch
  405711:	sub    ebx,DWORD PTR ds:0x2948efc
  405717:	adc    BYTE PTR [esi+0x66],0x6f
  40571b:	fcomp  DWORD PTR [edi-0x75323b1d]
  405721:	mov    bh,0x50
  405723:	loop   0x4056cf
  405725:	loop   0x4056d2
  405727:	dec    esi
  405728:	xchg   BYTE PTR [edi],dh
  40572a:	out    0x4f,al
  40572c:	push   ebx
  40572d:	(bad)  
  40572e:	(bad)  
  40572f:	popa   
  405730:	cmp    DWORD PTR [edx-0x2b018054],edx
  405736:	outs   dx,BYTE PTR ds:[esi]
  405737:	int    0x63
  405739:	push   0xec229e8d
  40573e:	sub    eax,0x3b1bac80
  405743:	popf   
  405744:	retf   
  405745:	pop    ss
  405746:	outs   dx,BYTE PTR ds:[esi]
  405747:	loope  0x4057c1
  405749:	push   eax
  40574a:	bound  edx,QWORD PTR ds:0xecd8c34b
  405750:	leave  
  405751:	pop    edx
  405752:	retf   
  405753:	stos   DWORD PTR es:[edi],eax
  405754:	jecxz  0x40574f
  405756:	imul   eax,DWORD PTR [eax-0x1e11bffe],0x5
  40575d:	loopne 0x405773
  40575f:	sub    al,0xb8
  405761:	xchg   ebx,eax
  405762:	outs   dx,BYTE PTR ds:[esi]
  405763:	es sbb dh,ch
  405766:	loopne 0x405752
  405768:	dec    eax
  405769:	retf   
  40576a:	scas   al,BYTE PTR es:[edi]
  40576b:	(bad)  
  40576c:	stc    
  40576d:	shr    DWORD PTR [esp+eiz*8+0x39],0x33
  405772:	cld    
  405773:	sbb    eax,ebp
  405775:	(bad)  [edx]
  405777:	mov    esi,0xf161bbbd
  40577c:	(bad)  
  40577d:	mov    edi,0xc8f3a520
  405782:	mov    esp,0xc3c597ba
  405787:	jb     0x405776
  405789:	call   0x8179:0x91754daf
  405790:	cmp    BYTE PTR [esi-0x3c],0xf2
  405794:	jmp    0x40572f
  405796:	popf   
  405797:	mov    dh,0xd7
  405799:	pop    es
  40579a:	push   eax
  40579b:	and    ch,al
  40579d:	cld    
  40579e:	push   ds
  40579f:	pop    edx
  4057a0:	xor    DWORD PTR [ecx],ecx
  4057a2:	test   BYTE PTR [edx-0x16],dh
  4057a5:	in     eax,dx
  4057a6:	jg     0x4057a6
  4057a8:	jb     0x4057e7
  4057aa:	mov    bl,0x9
  4057ad:	and    BYTE PTR [ebx+0x19],ch
  4057b0:	addr16 sahf 
  4057b2:	shufps xmm2,XMMWORD PTR [esp+ecx*4-0x2caabbf],0xbf
  4057bb:	aaa    
  4057bc:	(bad)  
  4057bd:	lea    esi,ds:0x38e4a5f2
  4057c3:	push   0x103deb65
  4057c8:	hlt    
  4057c9:	xchg   esi,eax
  4057ca:	push   es
  4057cb:	adc    BYTE PTR [esi+0x45],0x2
  4057cf:	call   0xbfca:0xaad602cf
  4057d6:	call   0x2630796b
  4057db:	mov    es,WORD PTR [eax+0x5d]
  4057de:	push   ds
  4057df:	mov    esi,0xf648eaab
  4057e4:	outs   dx,DWORD PTR ds:[esi]
  4057e5:	fistp  QWORD PTR [edx-0x2f87082e]
  4057eb:	rcr    esp,0x26
  4057ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057ef:	test   BYTE PTR [ecx+0xc589696],dl
  4057f5:	xchg   ebp,eax
  4057f6:	jl     0x4057ef
  4057f8:	and    BYTE PTR [edi-0x58e24438],al
  4057fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057ff:	in     al,0x1d
  405801:	call   0xe924b54c
  405806:	cmp    DWORD PTR [eax+eax*4-0x33],eax
  40580a:	out    dx,al
  40580b:	fisubr DWORD PTR [esi]
  40580d:	mov    bh,0x8b
  40580f:	addr16 gs or eax,0xb1f07819
  405816:	lock push ebx
  405818:	popa   
  405819:	jg     0x405845
  40581b:	xor    BYTE PTR [ebp+ebx*8-0x2c3fcb22],bl
  405822:	dec    ebp
  405823:	mov    eax,ds:0xa887acc3
  405828:	pop    edx
  405829:	neg    BYTE PTR [ebx+0x54f351f0]
  40582f:	popa   
  405830:	dec    ebp
  405831:	jge    0x40585d
  405833:	mov    eax,cs:0x36bde3b
  405839:	lds    ebp,FWORD PTR ds:0x505f9d75
  40583f:	mov    eax,0xa09bc6e0
  405844:	rcl    BYTE PTR [ebx+0x1be79d75],0xaa
  40584b:	jnp    0x405813
  40584d:	sub    eax,DWORD PTR [eax+0xe2296fd]
  405853:	in     al,dx
  405854:	sub    ebx,edi
  405856:	add    eax,0xab86e385
  40585b:	xchg   DWORD PTR [ebp+esi*4+0x10],edi
  40585f:	pop    es
  405860:	jns    0x405842
  405862:	js     0x4058ac
  405864:	or     edi,DWORD PTR [ebx+0x70]
  405867:	mov    al,0x2a
  405869:	pop    ebx
  40586a:	retf   
  40586b:	pop    ss
  40586c:	in     eax,0x9a
  40586e:	fimul  WORD PTR [edx+0x221188d0]
  405874:	mov    ds:0x66bda319,eax
  405879:	cli    
  40587a:	push   ebx
  40587b:	ret    0x2160
  40587e:	mov    dh,0x30
  405880:	mov    bh,0xe4
  405882:	jae    0x4058f0
  405884:	inc    ebp
  405885:	xor    BYTE PTR [ebx+edi*8],ah
  405888:	mov    edx,0x2e71c118
  40588d:	sbb    al,0x9a
  40588f:	xchg   BYTE PTR [edx-0x7d2580cc],cl
  405895:	ficomp DWORD PTR [edi+eax*8-0x3bf6650b]
  40589c:	adc    al,0xe6
  40589e:	mov    eax,ds:0x57b5d96c
  4058a3:	jecxz  0x405845
  4058a5:	lods   al,BYTE PTR ds:[esi]
  4058a6:	inc    esi
  4058a7:	pop    es
  4058a8:	mov    bl,0x2
  4058aa:	cs push cs
  4058ac:	push   edx
  4058ad:	ja     0x40589a
  4058af:	mov    eax,0xb089e1fe
  4058b4:	mov    bl,0xfe
  4058b6:	out    dx,eax
  4058b7:	adc    BYTE PTR [edx+0x1cbb1765],cl
  4058bd:	sar    DWORD PTR [ebp+0x4d],cl
  4058c0:	adc    eax,0x71d381bd
  4058c5:	jp     0x4058eb
  4058c7:	mov    al,ds:0x8c8598ec
  4058cc:	ss inc ebx
  4058ce:	cmp    ebx,DWORD PTR [esi+0x2e]
  4058d1:	ret    0x9416
  4058d4:	sub    dh,BYTE PTR [eax-0x38]
  4058d7:	imul   edi
  4058d9:	cld    
  4058da:	or     DWORD PTR [edi+0x7a4b7b23],edx
  4058e0:	int3   
  4058e1:	test   al,0xc9
  4058e3:	pop    ds
  4058e4:	mov    ?,WORD PTR [ebp+0x3]
  4058e7:	xor    edi,DWORD PTR [eax]
  4058e9:	shl    BYTE PTR [ebp-0x28],cl
  4058ec:	sub    ebx,ecx
  4058ee:	popa   
  4058ef:	jnp    0x4058f5
  4058f1:	adc    al,0xd4
  4058f3:	adc    ch,BYTE PTR [ecx]
  4058f5:	dec    ecx
  4058f6:	enter  0x5f52,0xe9
  4058fa:	repz retf 0xe30d
  4058fe:	push   ecx
  4058ff:	idiv   DWORD PTR [edi-0x5b]
  405902:	xchg   esi,eax
  405903:	jmp    0x7a49568d
  405908:	xchg   ecx,eax
  405909:	loop   0x405939
  40590b:	or     BYTE PTR [esi],bl
  40590d:	cli    
  40590e:	dec    ecx
  40590f:	iret   
  405910:	dec    esi
  405911:	mov    eax,ds:0x1cc00f82
  405916:	(bad)  
  405917:	push   0x304de597
  40591c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40591d:	or     cl,BYTE PTR [edx]
  40591f:	mov    bh,0xc8
  405921:	mov    eax,0xa5df487c
  405926:	push   esi
  405927:	clc    
  405928:	push   ds
  405929:	loopne 0x4059a3
  40592b:	test   BYTE PTR [ebx-0x2183af8c],al
  405931:	and    BYTE PTR [ebx-0x9],cl
  405934:	fwait
  405935:	push   cs
  405936:	bound  edx,QWORD PTR [edi-0x49964da6]
  40593c:	(bad)  
  40593d:	push   esp
  40593e:	add    al,0x79
  405940:	or     BYTE PTR [edx],0xf9
  405943:	shl    eax,cl
  405945:	mov    ebp,0x9ea368ce
  40594a:	je     0x40593b
  40594c:	mov    al,ds:0x5f03dc9a
  405951:	sbb    esp,DWORD PTR [esi-0x5d]
  405954:	mov    ebx,0xeacc6a5e
  405959:	add    al,0x8b
  40595b:	sub    DWORD PTR [edi],ecx
  40595d:	push   eax
  40595e:	shl    BYTE PTR [edi+eiz*1],0x7a
  405962:	call   DWORD PTR [edi-0x15a34e2a]
  405968:	dec    ebp
  405969:	jno    0x4059da
  40596b:	in     al,0xb2
  40596d:	outs   dx,DWORD PTR ds:[esi]
  40596e:	jo     0x4058f1
  405970:	jecxz  0x4059a2
  405972:	mov    ds:0x1cc6901e,al
  405977:	push   edx
  405978:	mov    ah,0xc3
  40597a:	test   BYTE PTR [edx],bh
  40597c:	fist   DWORD PTR [edx-0x4224c62f]
  405982:	stos   BYTE PTR es:[edi],al
  405983:	pop    ecx
  405984:	mov    ebp,0xd9a70562
  405989:	push   ebp
  40598a:	jno    0x4059d6
  40598c:	add    eax,0xd48e8a40
  405991:	xlat   BYTE PTR ds:[ebx]
  405992:	sbb    DWORD PTR [esi-0x36582d3],ecx
  405998:	sbb    DWORD PTR [edi+edi*1-0x320bac82],eax
  40599f:	cmp    bl,cl
  4059a1:	pop    ds
  4059a2:	(bad)  
  4059a3:	pop    esp
  4059a4:	in     eax,dx
  4059a5:	mov    edx,0xd71319b9
  4059aa:	jmp    0x405934
  4059ac:	xor    ecx,ebp
  4059ae:	cmp    al,0xfb
  4059b0:	fdivr  QWORD PTR [edi]
  4059b2:	sbb    ebp,edx
  4059b4:	mov    eax,0x5666c473
  4059b9:	add    al,0xb4
  4059bb:	inc    edx
  4059bc:	popf   
  4059bd:	dec    eax
  4059be:	(bad)  
  4059bf:	frstor ds:0xa9b1b6d2
  4059c5:	sbb    edx,ecx
  4059c7:	inc    edx
  4059c8:	or     edi,DWORD PTR [ebx]
  4059ca:	mov    ch,0xd5
  4059cc:	push   es
  4059cd:	sub    eax,0x45777c0b
  4059d2:	mov    ebp,edx
  4059d4:	jecxz  0x4059b4
  4059d6:	lock jno 0x405972
  4059d9:	shl    BYTE PTR [esi],cl
  4059db:	or     al,0x52
  4059dd:	shl    ch,0x3e
  4059e0:	dec    eax
  4059e1:	jecxz  0x40597b
  4059e3:	stc    
  4059e4:	pop    esp
  4059e5:	pop    edx
  4059e6:	mov    dh,0xf4
  4059e8:	lea    esi,[ebx-0x3b]
  4059eb:	xor    DWORD PTR [edi],esi
  4059ed:	shr    BYTE PTR [ebp-0x6e],0x5a
  4059f1:	mov    ch,0x74
  4059f3:	sub    DWORD PTR [edi+0x69332831],eax
  4059f9:	mov    bl,0x58
  4059fb:	sar    DWORD PTR [ebp+0x59d8854b],cl
  405a01:	adc    eax,0x8978b322
  405a06:	inc    edx
  405a07:	adc    dl,BYTE PTR [eax+0x10]
  405a0a:	mov    ch,0x27
  405a0c:	shr    BYTE PTR [edi-0xc],0x15
  405a10:	cmp    al,0x71
  405a12:	jns    0x405a78
  405a14:	push   esp
  405a15:	and    edx,DWORD PTR [ebp+eiz*4+0x390869ef]
  405a1c:	test   al,0x42
  405a1e:	jmp    0x7e38:0x29c0c249
  405a25:	rol    DWORD PTR [edi],0x19
  405a28:	push   0xffffffbd
  405a2a:	cmp    BYTE PTR [eax-0x41],al
  405a2d:	pop    ss
  405a2e:	in     al,0xd4
  405a30:	cs popf 
  405a32:	test   eax,0xb856d0f2
  405a37:	fiadd  DWORD PTR [esi+0x6f]
  405a3a:	je     0x4059cf
  405a3c:	test   ebx,0x1ffa38df
  405a42:	aaa    
  405a43:	mov    edi,0x64f73056
  405a48:	icebp  
  405a49:	jnp    0x4059e1
  405a4b:	xchg   ecx,eax
  405a4c:	pop    ebx
  405a4d:	out    0x3e,al
  405a4f:	jnp    0x405a0e
  405a51:	adc    eax,0x8ef25d17
  405a56:	retf   0x9650
  405a59:	sub    al,0x7f
  405a5b:	jno    0x405a78
  405a5d:	push   esp
  405a5e:	jo     0x405a7d
  405a60:	dec    edx
  405a61:	(bad)
  405a66:	out    0x81,eax
  405a68:	test   DWORD PTR [edx+0x31907ae5],ebx
  405a6e:	inc    ebp
  405a6f:	lahf   
  405a70:	push   0x3e
  405a72:	dec    edi
  405a73:	mov    edi,0xf3c623d7
  405a78:	mov    ah,cl
  405a7a:	sbb    ebx,0x38
  405a7d:	xchg   DWORD PTR [esi],ebp
  405a7f:	pop    ecx
  405a80:	lahf   
  405a81:	out    0x65,eax
  405a83:	xor    eax,edi
  405a85:	xor    bh,cl
  405a87:	sbb    eax,0x2cc44f10
  405a8c:	sub    dh,cl
  405a8e:	das    
  405a8f:	sbb    ch,BYTE PTR [ebx-0x3f9d1c4c]
  405a95:	jp     0x405a5c
  405a97:	sar    bl,0xf1
  405a9a:	or     BYTE PTR [eax],cl
  405a9c:	or     edi,DWORD PTR [edx-0x3d]
  405a9f:	dec    ebx
  405aa0:	pop    ebp
  405aa1:	xor    al,0x6f
  405aa3:	cwde   
  405aa4:	jp     0x405a51
  405aa6:	test   DWORD PTR [ecx+ebx*2],esp
  405aa9:	adc    BYTE PTR [ebp-0x7c70bf9f],0xbb
  405ab0:	popf   
  405ab1:	addr16 into 
  405ab3:	add    al,0xf
  405ab5:	xor    esi,ebp
  405ab7:	out    0x2,eax
  405ab9:	mov    dl,BYTE PTR [edx+0x2]
  405abc:	je     0x405a91
  405abe:	js     0x405a6e
  405ac0:	pop    es
  405ac1:	push   ecx
  405ac2:	mov    eax,ds:0xf02ee1f6
  405ac7:	xchg   edi,eax
  405ac8:	xor    BYTE PTR cs:[esi+0x2e101618],bl
  405acf:	hlt    
  405ad0:	es pusha 
  405ad2:	rcr    BYTE PTR [eax+edi*4],0xf7
  405ad6:	(bad)  
  405ad8:	sahf   
  405ad9:	in     eax,0x6f
  405adb:	dec    ebx
  405adc:	daa    
  405add:	cld    
  405ade:	xchg   edi,eax
  405adf:	outs   dx,BYTE PTR ds:[esi]
  405ae0:	and    esi,DWORD PTR [edx+0x5ef23c4d]
  405ae6:	push   cs
  405ae7:	mov    ah,0xd9
  405ae9:	imul   edx,DWORD PTR [edx-0x564774d],0xc6d0b717
  405af3:	or     BYTE PTR [eax-0x2552e57],dl
  405af9:	bound  ecx,QWORD PTR ds:0x274c74d4
  405aff:	cmc    
  405b00:	jmp    0x405ad0
  405b02:	pop    ds
  405b03:	(bad)  
  405b04:	(bad)  
  405b05:	fcom   QWORD PTR [edx-0x5a780ff1]
  405b0b:	punpcklwd mm2,DWORD PTR [edi]
  405b0e:	stos   BYTE PTR es:[edi],al
  405b0f:	loopne 0x405b44
  405b11:	jl     0x405ace
  405b13:	mov    bh,ch
  405b15:	(bad)  
  405b16:	cli    
  405b17:	out    0x3f,eax
  405b19:	inc    ebp
  405b1a:	inc    ecx
  405b1b:	ins    BYTE PTR es:[edi],dx
  405b1c:	cs (bad) 
  405b1e:	ins    BYTE PTR es:[edi],dx
  405b1f:	lahf   
  405b20:	cmc    
  405b21:	dec    edi
  405b22:	mov    cl,0xd4
  405b24:	dec    edi
  405b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b26:	xor    BYTE PTR [edx],dh
  405b28:	leave  
  405b29:	addr16 out dx,al
  405b2b:	loop   0x405ad0
  405b2d:	aam    0xfb
  405b2f:	popa   
  405b30:	popa   
  405b31:	lock aam 0x5e
  405b34:	push   esp
  405b35:	mov    al,0x15
  405b37:	mov    BYTE PTR [eax],dh
  405b39:	(bad)  
  405b3a:	push   ds
  405b3b:	out    dx,al
  405b3c:	pop    esi
  405b3d:	pop    ss
  405b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b3f:	adc    DWORD PTR [eax+0x3c],0xd14e9d6e
  405b46:	add    BYTE PTR [ecx],dh
  405b48:	and    dh,al
  405b4a:	push   es
  405b4b:	test   eax,0xd63159f4
  405b50:	dec    ecx
  405b51:	ficom  WORD PTR [ecx+ecx*1+0xc5002d8]
  405b58:	mov    ebx,0x822ff17d
  405b5d:	xor    eax,0xeb773def
  405b62:	cmp    BYTE PTR [esi+0x5166bba6],bl
  405b68:	popf   
  405b69:	(bad)
  405b6e:	ins    BYTE PTR es:[edi],dx
  405b6f:	jne    0x405b5f
  405b71:	lods   al,BYTE PTR ds:[esi]
  405b72:	imul   edi,edi,0x854af96f
  405b78:	cmp    al,0xb0
  405b7a:	(bad)  
  405b7b:	hlt    
  405b7c:	mov    bl,0xb9
  405b7e:	mov    bl,0x68
  405b80:	stos   BYTE PTR es:[edi],al
  405b81:	xor    DWORD PTR ds:0x2c280fc,eax
  405b87:	stc    
  405b88:	adc    eax,0x72e9f049
  405b8d:	hlt    
  405b8e:	mov    edx,0xa932e8a
  405b93:	mov    edi,0x9fc72b3c
  405b98:	sub    ebx,esi
  405b9a:	cmp    bh,BYTE PTR [edx-0x66]
  405b9d:	sete   BYTE PTR [edi]
  405ba0:	pop    ecx
  405ba1:	mov    dh,0xc
  405ba3:	sbb    BYTE PTR [esi-0x2a163af6],bl
  405ba9:	popf   
  405baa:	xor    dl,BYTE PTR [ecx+0x6b5e3e06]
  405bb0:	call   0xcbf7:0x41e51687
  405bb7:	pop    eax
  405bb8:	push   ebx
  405bb9:	and    ebp,DWORD PTR [edi+0x56]
  405bbc:	bound  edi,QWORD PTR ds:0x2e70103a
  405bc2:	cld    
  405bc3:	push   0x9441a5e9
  405bc8:	stc    
  405bc9:	sub    BYTE PTR [esi],ch
  405bcb:	stc    
  405bcc:	adc    ecx,esi
  405bce:	stos   BYTE PTR es:[edi],al
  405bcf:	xchg   ecx,eax
  405bd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bd1:	in     al,0xdd
  405bd3:	data16 jb 0x405b9d
  405bd6:	sbb    al,0xa0
  405bd8:	inc    edi
  405bd9:	jl     0x405b7f
  405bdb:	push   edx
  405bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bdd:	out    dx,eax
  405bde:	shl    BYTE PTR [ecx],0xab
  405be1:	popa   
  405be2:	adc    ch,al
  405be4:	add    al,0x8c
  405be6:	jb     0x405c3a
  405be8:	mov    edi,DWORD PTR [esi]
  405bea:	sbb    edx,0x3b04f7b6
  405bf0:	cmp    DWORD PTR [edx-0x7ae72a31],0x3ebe53f9
  405bfa:	sbb    BYTE PTR [edi+0x9],bh
  405bfd:	js     0x405ba2
  405bff:	add    eax,0xbd492ee6
  405c04:	cmp    DWORD PTR [edx+esi*1-0x59],edx
  405c08:	fdivr  DWORD PTR [eax-0x448b42aa]
  405c0e:	ficomp WORD PTR ds:0x8443f25a
  405c14:	pop    es
  405c15:	cmovb  edx,DWORD PTR [ebx-0x6e6bd8e]
  405c1c:	aam    0x9f
  405c1e:	mov    bl,0x53
  405c20:	xor    esp,DWORD PTR [ebx+0x9]
  405c23:	mov    eax,ds:0xf2c09d3f
  405c28:	cmp    al,bl
  405c2a:	jmp    0x5984:0x559e7ade
  405c31:	cli    
  405c32:	inc    edx
  405c33:	in     al,0xd2
  405c35:	pop    es
  405c36:	pop    esp
  405c37:	mov    bl,0x3e
  405c39:	aad    0xc6
  405c3b:	inc    esi
  405c3c:	call   0xa36b8fd7
  405c41:	pop    ecx
  405c42:	push   ss
  405c43:	das    
  405c44:	icebp  
  405c45:	pop    edi
  405c46:	or     DWORD PTR [eax+0x5034888e],ecx
  405c4c:	mov    ch,0x2a
  405c4e:	fisttp DWORD PTR [edx+eiz*1+0x69]
  405c52:	cmp    edx,DWORD PTR [edi+edx*4-0x32716a84]
  405c59:	mov    al,0x64
  405c5b:	hlt    
  405c5c:	out    0xb7,eax
  405c5e:	scas   eax,DWORD PTR es:[edi]
  405c5f:	lods   eax,DWORD PTR ds:[esi]
  405c60:	jmp    0xa0de:0x51169851
  405c67:	sbb    eax,0xd5cf0587
  405c6c:	lock and BYTE PTR [edx+eax*1],0xee
  405c71:	mov    ebp,0x9e4109b2
  405c76:	mov    ds,WORD PTR [edi-0x461a018e]
  405c7c:	push   esi
  405c7d:	xchg   edx,eax
  405c7e:	sti    
  405c7f:	xchg   ebp,eax
  405c80:	push   0xffffffa4
  405c82:	fsub   QWORD PTR [ebx]
  405c84:	jp     0x405c9f
  405c86:	inc    edx
  405c87:	rcl    BYTE PTR [edi+0x12],1
  405c8a:	and    al,0xc
  405c8c:	or     eax,0xc5682327
  405c91:	lahf   
  405c92:	push   0xd1ecc020
  405c97:	pop    edi
  405c98:	inc    ebp
  405c99:	push   ss
  405c9a:	push   ebx
  405c9b:	repz out dx,eax
  405c9d:	and    al,0xb9
  405c9f:	jb     0x405c2c
  405ca1:	out    0x7a,al
  405ca3:	mov    al,ds:0x4e49fe2b
  405ca8:	call   0x21ec:0xa08a187c
  405caf:	fnstsw WORD PTR [eiz*1+0x3bae360f]
  405cb6:	add    BYTE PTR [eax+edx*1-0x7dd0e9e4],0x20
  405cbe:	mov    edx,0xd04c2d6c
  405cc3:	in     eax,0x21
  405cc5:	in     eax,0x84
  405cc7:	inc    BYTE PTR [ecx]
  405cc9:	lahf   
  405cca:	ret    0x8b0e
  405ccd:	in     eax,dx
  405cce:	data16 rol ah,0x26
  405cd2:	dec    edi
  405cd3:	xor    eax,0x4313a14e
  405cd8:	(bad)  
  405cd9:	jbe    0x405c9d
  405cdb:	push   esp
  405cdc:	ins    DWORD PTR es:[edi],dx
  405cdd:	aad    0xc4
  405cdf:	inc    esp
  405ce0:	int3   
  405ce1:	adc    DWORD PTR ds:0x872a1560,eax
  405ce7:	fdivr  QWORD PTR [ecx-0x16bafe89]
  405ced:	mov    gs,WORD PTR [ecx-0x58]
  405cf0:	push   ss
  405cf1:	and    DWORD PTR ds:0xddd2536e,edi
  405cf7:	jl     0x405ca9
  405cf9:	sbb    esi,ebx
  405cfb:	fs nop
  405cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cfe:	inc    eax
  405cff:	or     al,BYTE PTR [edx+eax*4+0x4e]
  405d03:	push   esp
  405d04:	aaa    
  405d05:	or     DWORD PTR fs:[edx],eax
  405d08:	jmp    0x5bf905cd
  405d0d:	daa    
  405d0e:	retf   0xc836
  405d11:	mov    esi,0xfe6d2f68
  405d16:	cmp    DWORD PTR [ecx-0xb],0x2d
  405d1a:	cmp    eax,0x3d73377e
  405d1f:	mov    bh,0xf5
  405d21:	mov    bh,0x7e
  405d23:	(bad)  
  405d24:	push   eax
  405d25:	mov    ds:0xb9cf09a2,eax
  405d2a:	dec    esp
  405d2b:	sub    ebx,0xffffffd8
  405d2e:	dec    ebp
  405d2f:	iret   
  405d30:	in     al,dx
  405d31:	sub    cl,dl
  405d33:	and    al,0xa3
  405d35:	mov    DWORD PTR [ebp+0x37ccfb2e],ebp
  405d3b:	icebp  
  405d3c:	aad    0x44
  405d3e:	adc    ah,BYTE PTR [edi-0x29ae73ab]
  405d44:	lock out dx,al
  405d46:	or     esi,DWORD PTR [ebp+0xe]
  405d49:	bound  eax,QWORD PTR ds:0x4f96bf3a
  405d4f:	push   edi
  405d50:	repz jl 0x405ceb
  405d53:	call   0xe35e53ee
  405d58:	int    0xa4
  405d5a:	out    dx,al
  405d5b:	cs jge 0x405d40
  405d5e:	adc    eax,0xdcea435c
  405d63:	in     eax,0x8c
  405d65:	push   cs
  405d66:	sbb    edx,DWORD PTR [edi+ebp*2+0x16]
  405d6a:	xor    dl,al
  405d6c:	(bad)  
  405d6d:	fist   WORD PTR [eax]
  405d6f:	aaa    
  405d70:	jmp    0xae687c3a
  405d75:	and    DWORD PTR [esi],esi
  405d77:	jl     0x405d78
  405d79:	hlt    
  405d7a:	mov    ds:0x97a955b3,eax
  405d7f:	xor    DWORD PTR [ecx+0x662b9c1d],ebx
  405d85:	add    eax,ebp
  405d87:	fimul  DWORD PTR ds:0x876da963
  405d8d:	inc    ebp
  405d8e:	inc    ebx
  405d8f:	stos   BYTE PTR es:[edi],al
  405d90:	sbb    edi,0x56f393f0
  405d96:	mov    dl,0xf
  405d98:	dec    esp
  405d99:	loop   0x405d32
  405d9b:	adc    ah,BYTE PTR [ecx]
  405d9d:	push   esi
  405d9e:	jge    0x405df8
  405da0:	in     al,0x52
  405da2:	leavew 
  405da4:	inc    eax
  405da5:	dec    ecx
  405da6:	cli    
  405da7:	inc    ecx
  405da8:	sub    al,0xf6
  405daa:	jbe    0x405de9
  405dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dad:	mov    edi,0x1008b0a7
  405db2:	mov    esp,0x8976b843
  405db7:	imul   ecx,DWORD PTR [edx+ebx*1+0x1b],0xffffffe7
  405dbc:	aad    0x37
  405dbe:	ins    DWORD PTR es:[edi],dx
  405dbf:	not    BYTE PTR [edi-0x20]
  405dc2:	lea    ebp,[ebx+0x65a4fa6e]
  405dc8:	mov    al,0x15
  405dca:	sub    DWORD PTR [edx-0x3e],esi
  405dcd:	cs push ebx
  405dcf:	int    0x0
  405dd1:	sub    BYTE PTR [ebp-0x1970a6d2],dl
  405dd7:	and    eax,0x911a4f83
  405ddc:	push   ebx
  405ddd:	mov    edx,0x38fb253
  405de2:	push   edi
  405de3:	and    eax,0x51fa9b5
  405de8:	dec    edi
  405de9:	ja     0x405de7
  405deb:	dec    edx
  405dec:	xchg   edx,eax
  405ded:	pop    ss
  405dee:	pop    edi
  405def:	push   0x328ecb5e
  405df4:	inc    edx
  405df5:	and    DWORD PTR [ebp-0x24798d01],eax
  405dfb:	sbb    ebp,0x63
  405dfe:	inc    edi
  405dff:	push   es
  405e00:	cmp    dh,BYTE PTR [ecx]
  405e02:	jl     0x405d99
  405e04:	xor    BYTE PTR [ecx+0x1b],ah
  405e07:	arpl   WORD PTR [eax-0x4f],di
  405e0a:	fisubr DWORD PTR [edi]
  405e0c:	fild   WORD PTR [esi+0x2ae109c0]
  405e12:	push   ds
  405e13:	stc    
  405e14:	add    ebx,0x7e
  405e17:	pop    esi
  405e18:	sbb    al,0x29
  405e1a:	pop    ecx
  405e1b:	fstp   TBYTE PTR [ebx-0x5dde1ea2]
  405e21:	inc    ebp
  405e22:	outs   dx,DWORD PTR ds:[esi]
  405e23:	add    esp,ecx
  405e25:	mov    eax,0x28a8c6c0
  405e2a:	js     0x405dac
  405e2c:	adc    al,0xab
  405e2e:	ret    0x62e8
  405e31:	ficom  DWORD PTR [esi+ebp*8+0x6907a24a]
  405e38:	cmp    eax,DWORD PTR [edi+0x7c]
  405e3b:	jmp    0xd68a:0x100e8fba
  405e42:	data16 cli 
  405e44:	xchg   edx,eax
  405e45:	fnstcw WORD PTR [eax]
  405e47:	test   ebx,ebx
  405e49:	lahf   
  405e4a:	jg     0x405e3c
  405e4c:	(bad)  
  405e4d:	or     BYTE PTR [ecx-0x5ff7ae3f],dh
  405e53:	mov    DWORD PTR [edx+edi*4+0x64a32d66],edx
  405e5a:	jmp    0x405e0d
  405e5c:	imul   eax,DWORD PTR [ebx+0x452fdf15],0x1a
  405e63:	add    DWORD PTR [edx-0x31b49d6e],0x8a14e4d3
  405e6d:	nop
  405e6e:	jnp    0x405e2f
  405e70:	dec    esp
  405e71:	out    dx,al
  405e72:	push   ebx
  405e73:	or     DWORD PTR [ebx],edi
  405e75:	imul   eax,ebx,0x8
  405e78:	ror    BYTE PTR [edx-0x3a],0x2
  405e7c:	sub    DWORD PTR [edx+0xe5372a7],0x55
  405e83:	neg    BYTE PTR [eax+edi*8+0x5c]
  405e87:	je     0x405ea0
  405e89:	add    ah,BYTE PTR [ebp+0x26]
  405e8c:	inc    ebx
  405e8d:	mov    ebp,fs
  405e8f:	loop   0x405f05
  405e91:	push   ebp
  405e92:	and    DWORD PTR [edx+0x467febbb],0xeb007bc
  405e9c:	jmp    0x72db:0xe8c6c7b
  405ea3:	mov    bl,0x25
  405ea5:	pop    esi
  405ea6:	cwde   
  405ea7:	into   
  405ea8:	je     0x405e6f
  405eaa:	int    0x6
  405eac:	xor    bl,BYTE PTR [ecx+0x4cfac6c1]
  405eb2:	aad    0x6c
  405eb4:	push   ds
  405eb5:	sub    edx,DWORD PTR [eax+0x60]
  405eb8:	adc    eax,DWORD PTR [edx-0x42]
  405ebb:	mov    ecx,edi
  405ebd:	xlat   BYTE PTR ds:[ebx]
  405ebe:	xor    BYTE PTR [edx+0x71880ee7],al
  405ec4:	mov    cl,0xb5
  405ec6:	pop    ecx
  405ec7:	std    
  405ec8:	sub    ah,BYTE PTR [ebx+0x449d43e]
  405ece:	pop    ecx
  405ecf:	in     eax,0x9c
  405ed1:	sbb    al,0x4f
  405ed3:	test   al,0x3e
  405ed5:	sbb    eax,0x6bddd0cf
  405eda:	push   ss
  405edb:	jp     0x405e70
  405edd:	xor    al,0x4c
  405edf:	out    0x46,eax
  405ee1:	in     al,dx
  405ee2:	xchg   ecx,eax
  405ee3:	retf   0xe939
  405ee6:	(bad)  
  405ee8:	mov    ebp,0xb3571d10
  405eed:	cmp    esi,esp
  405eef:	stos   DWORD PTR es:[edi],eax
  405ef0:	test   BYTE PTR [esi+0x79e3414a],ch
  405ef6:	rol    ebp,0xf
  405ef9:	jb     0x405ebe
  405efb:	pop    ebx
  405efc:	js     0x405ed2
  405efe:	push   edx
  405eff:	jmp    0xe910:0xee464d16
  405f06:	inc    esp
  405f07:	int    0x53
  405f09:	jne    0x405e8d
  405f0b:	cmp    esp,esp
  405f0d:	lea    esi,[ebx-0x4224bde7]
  405f13:	lock mov ds:0xd3e3e4a8,eax
  405f19:	pop    edx
  405f1a:	outs   dx,DWORD PTR ds:[esi]
  405f1b:	push   eax
  405f1c:	push   esp
  405f1d:	rol    BYTE PTR [ebx],1
  405f1f:	jo     0x405f21
  405f21:	lods   eax,DWORD PTR ds:[esi]
  405f22:	stos   BYTE PTR es:[edi],al
  405f23:	in     al,dx
  405f24:	daa    
  405f25:	jmp    0x405f98
  405f27:	inc    esi
  405f28:	mov    ebx,0xf3d243f6
  405f2d:	jns    0x405f65
  405f2f:	adc    DWORD PTR [ebp-0x71],0x9744213c
  405f36:	pop    ss
  405f37:	test   BYTE PTR [edi],cl
  405f39:	xlat   BYTE PTR ds:[ebx]
  405f3a:	outs   dx,DWORD PTR ds:[esi]
  405f3b:	outs   dx,DWORD PTR ds:[esi]
  405f3c:	test   DWORD PTR [eax+ecx*8+0x42],esp
  405f40:	jae    0x405f90
  405f42:	pop    edx
  405f43:	sub    eax,0xffbc0f74
  405f48:	aad    0x8b
  405f4a:	arpl   dx,bp
  405f4c:	imul   ebx,edi,0x8ac2fdd5
  405f52:	add    al,0x9a
  405f54:	jne    0x405fd5
  405f56:	fsub   DWORD PTR [edx+esi*8-0x257f9469]
  405f5d:	fstp   TBYTE PTR [ebx+0x33d23df7]
  405f63:	adc    BYTE PTR [edx+0x4d25a0ad],ch
  405f69:	(bad)  
  405f6b:	push   ds
  405f6c:	ss out dx,al
  405f6e:	inc    edx
  405f6f:	or     eax,DWORD PTR [ebp+0x1f]
  405f72:	push   esi
  405f73:	mov    WORD PTR [eax+esi*4],?
  405f76:	sbb    ebx,esp
  405f78:	pop    eax
  405f79:	jl     0x405f50
  405f7b:	scas   eax,DWORD PTR es:[edi]
  405f7c:	mov    ds:0x33f27f55,al
  405f81:	pop    eax
  405f82:	cmp    DWORD PTR [edx+0x9c702ba],0x6f5dc168
  405f8c:	fcmovne st,st(7)
  405f8e:	in     al,0xd3
  405f90:	in     al,0x7c
  405f92:	lods   eax,DWORD PTR ds:[esi]
  405f93:	sbb    BYTE PTR [edi+0x4e],ah
  405f96:	ret    
  405f97:	int3   
  405f98:	and    DWORD PTR [esi+0x4b474d8b],eax
  405f9e:	dec    esp
  405f9f:	mov    ecx,0xd5949fe9
  405fa4:	cmp    eax,0xbc22c7d8
  405fa9:	pop    ebp
  405faa:	mov    WORD PTR [ebp+0x65],cs
  405fad:	mov    eax,ds:0x5ad2dd3b
  405fb2:	inc    edi
  405fb3:	call   0xb2b2:0x883ee583
  405fba:	sub    DWORD PTR [ebp-0xa54c751],0x236aa5e7
  405fc4:	in     eax,0x3e
  405fc6:	loope  0x405ffb
  405fc8:	or     al,0xc5
  405fca:	cmp    edi,DWORD PTR [ebp+0x7fed459]
  405fd0:	in     eax,dx
  405fd1:	sti    
  405fd2:	cvtps2pd xmm7,QWORD PTR [eax+0x25]
  405fd6:	imul   esp,DWORD PTR [ecx],0x24a66abb
  405fdc:	fisttp QWORD PTR [edx-0x4d]
  405fdf:	mul    dh
  405fe1:	sbb    eax,0xe5a57203
  405fe6:	sbb    eax,0x48
  405fe9:	jge    0x405fd6
  405feb:	dec    edx
  405fec:	xchg   edx,eax
  405fed:	jns    0x40606c
  405fef:	mov    ?,WORD PTR [esi+0x27]
  405ff2:	enter  0xab8,0xd2
  405ff6:	jp     0x405fe3
  405ff8:	bound  esi,QWORD PTR [eax+0x4f0feab3]
  405ffe:	push   ebx
  405fff:	scas   eax,DWORD PTR es:[edi]
  406000:	in     al,dx
  406001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406002:	sub    BYTE PTR [esi],al
  406004:	cmp    ah,BYTE PTR [ecx]
  406006:	jle    0x406021
  406008:	bound  esp,QWORD PTR [ecx-0x31c1ecb3]
  40600e:	and    esp,edi
  406010:	ins    DWORD PTR es:[edi],dx
  406011:	sbb    BYTE PTR ds:0xf228f915,0xac
  406018:	std    
  406019:	sub    al,0xbe
  40601b:	mul    DWORD PTR [edi+ebx*2]
  40601e:	adc    DWORD PTR [ebx],eax
  406020:	push   ss
  406021:	rcl    DWORD PTR [ecx+0x713b5245],cl
  406027:	mov    esp,0xb1f9a1c1
  40602c:	sbb    al,BYTE PTR [ebx+esi*4]
  40602f:	cdq    
  406030:	add    eax,0x449a3c24
  406035:	in     al,0xdb
  406037:	xchg   ebx,eax
  406038:	mov    DWORD PTR [edx],0xd04d494f
  40603e:	xchg   esp,eax
  40603f:	leave  
  406040:	add    bx,cx
  406043:	push   es
  406044:	xchg   esp,eax
  406045:	retf   0x3d0c
  406048:	imul   edx
  40604a:	mov    eax,ds:0x6bc9c17b
  40604f:	or     dh,BYTE PTR [edi-0x6]
  406052:	ficom  DWORD PTR [ebx+edi*4+0x7f00f232]
  406059:	cmp    bl,cl
  40605b:	and    DWORD PTR [esi-0x78],ecx
  40605e:	cli    
  40605f:	adc    al,0x1c
  406061:	sti    
  406062:	cmp    al,0x18
  406064:	mov    eax,0xbc9231ed
  406069:	icebp  
  40606a:	sub    bh,BYTE PTR [edx]
  40606c:	addr16 (bad) 
  40606f:	call   0xb664:0xb9e093ee
  406076:	push   ss
  406077:	xchg   esp,eax
  406078:	lods   al,BYTE PTR ds:[esi]
  406079:	cwde   
  40607a:	add    ecx,eax
  40607c:	dec    edx
  40607d:	sub    DWORD PTR [ebp+0x47],edx
  406080:	xor    BYTE PTR [eax],0x1b
  406083:	inc    esi
  406084:	dec    esi
  406085:	cmp    DWORD PTR [edi-0x7c],esi
  406088:	arpl   WORD PTR [ebp-0x54],cx
  40608b:	adc    BYTE PTR [edi-0x45298be4],0x63
  406092:	and    ah,BYTE PTR [ebx]
  406094:	ret    0xe299
  406097:	shr    DWORD PTR [ebx+edi*8+0x7b],cl
  40609b:	dec    ebx
  40609c:	(bad)  
  40609d:	(bad)  
  40609e:	repz mov ebx,0x1374187c
  4060a4:	push   ecx
  4060a5:	push   edx
  4060a6:	xchg   esi,eax
  4060a7:	loope  0x40609c
  4060a9:	cld    
  4060aa:	aaa    
  4060ab:	cmp    eax,0x9f83ff17
  4060b0:	imul   ebp,edx,0xd0067ab0
  4060b6:	mov    ebx,0x49ec5af8
  4060bb:	dec    esp
  4060bc:	push   ecx
  4060bd:	cmp    al,0x4a
  4060bf:	mov    edx,edi
  4060c1:	pop    eax
  4060c2:	xor    BYTE PTR [esi+0x5],0x38
  4060c6:	stos   DWORD PTR es:[edi],eax
  4060c7:	clc    
  4060c8:	cmp    al,0x8d
  4060ca:	jmp    0x4060c8
  4060cc:	mov    esp,0x22c8195e
  4060d1:	cmp    al,0x12
  4060d4:	xlat   BYTE PTR ds:[ebx]
  4060d5:	mov    cl,0x6a
  4060d7:	sub    eax,0x314c6268
  4060dc:	dec    DWORD PTR [ebx-0x9]
  4060df:	fistp  QWORD PTR [esi]
  4060e1:	and    al,0xd7
  4060e3:	cmp    ah,cl
  4060e5:	push   cs
  4060e6:	stc    
  4060e7:	xchg   ebx,eax
  4060e8:	dec    edi
  4060e9:	(bad)  
  4060eb:	adc    al,0x7e
  4060ed:	jmp    FWORD PTR [ebp-0x7ced1899]
  4060f3:	(bad)  
  4060f4:	adc    bl,BYTE PTR [edi-0x6bc46ca7]
  4060fa:	xlat   BYTE PTR ds:[ebx]
  4060fb:	and    dh,ah
  4060fd:	test   esi,eax
  4060ff:	add    bh,ah
  406101:	mov    dl,0x7e
  406103:	shr    DWORD PTR [eax+0x7c],cl
  406106:	shr    DWORD PTR [edx-0x2cff0c43],1
  40610c:	ret    
  40610d:	lods   al,BYTE PTR ds:[esi]
  40610e:	lds    ecx,FWORD PTR [edi-0xe]
  406111:	add    al,0xb0
  406113:	dec    edi
  406114:	xchg   esp,eax
  406115:	ret    0xace6
  406118:	stos   BYTE PTR es:[edi],al
  406119:	lods   al,BYTE PTR ds:[esi]
  40611a:	(bad)  
  40611b:	xlat   BYTE PTR ds:[ebx]
  40611c:	rcr    BYTE PTR [bp+si-0x1943],cl
  406121:	push   ds
  406122:	shl    DWORD PTR [eax-0x65d521ae],cl
  406128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406129:	rcr    bl,cl
  40612b:	ss scas eax,DWORD PTR es:[edi]
  40612d:	aas    
  40612e:	es inc ebx
  406130:	xchg   ebp,eax
  406131:	aaa    
  406132:	mov    BYTE PTR [edi-0x17],ch
  406135:	in     al,0x26
  406137:	add    eax,0x5e1ad136
  40613c:	int3   
  40613d:	shl    DWORD PTR [esi+0xd0aee13],1
  406143:	and    esi,DWORD PTR [edi-0x41]
  406146:	test   al,0xa7
  406148:	data16 fmul DWORD PTR [ecx+0x22]
  40614c:	push   ss
  40614d:	lahf   
  40614e:	cmp    ebp,DWORD PTR [esi]
  406150:	std    
  406151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406152:	adc    BYTE PTR [ecx+0xff449e],cl
  406158:	cmp    al,BYTE PTR [edi-0x46]
  40615b:	jge    0x4060f1
  40615d:	push   esi
  40615e:	push   esp
  40615f:	add    DWORD PTR [edi],edi
  406161:	dec    esp
  406162:	sub    ebp,DWORD PTR [ebx]
  406164:	add    bh,cl
  406166:	add    DWORD PTR [eax],ebx
  406168:	jl     0x4061db
  40616a:	loope  0x40612f
  40616c:	mov    edi,0xd72b2793
  406171:	nop
  406172:	mov    cl,0x20
  406174:	push   ds
  406175:	and    al,0x8f
  406177:	or     DWORD PTR [edi+0x25],eax
  40617a:	sub    al,0xa7
  40617c:	and    ebx,eax
  40617e:	jae    0x4061b9
  406180:	stc    
  406181:	ss stc 
  406183:	ss pop esi
  406185:	scas   al,BYTE PTR es:[edi]
  406186:	(bad)  
  406187:	xchg   ecx,eax
  406188:	xor    cl,BYTE PTR [eax+0x6e18c639]
  40618e:	push   ds
  40618f:	bound  ebp,QWORD PTR [esi]
  406191:	retf   
  406192:	lods   al,BYTE PTR ds:[esi]
  406193:	aam    0x6c
  406195:	lahf   
  406196:	in     al,dx
  406197:	and    esp,ebp
  406199:	or     DWORD PTR [eax-0x36],esp
  40619c:	push   ecx
  40619d:	pusha  
  40619e:	add    ecx,edi
  4061a0:	pop    ss
  4061a1:	ins    BYTE PTR es:[edi],dx
  4061a2:	clc    
  4061a3:	xor    DWORD PTR [eax],esp
  4061a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061a6:	int    0xfd
  4061a8:	ins    DWORD PTR es:[edi],dx
  4061a9:	lahf   
  4061aa:	dec    ch
  4061ac:	shl    DWORD PTR [edx+0x5aad9de2],cl
  4061b2:	lods   al,BYTE PTR ds:[esi]
  4061b3:	lods   al,BYTE PTR ds:[esi]
  4061b4:	pop    DWORD PTR [ecx-0x50]
  4061b7:	mov    eax,0xd7238292
  4061bc:	push   ebx
  4061bd:	or     eax,0xc224ceeb
  4061c2:	xchg   edi,eax
  4061c3:	popa   
  4061c4:	in     eax,0x41
  4061c6:	or     cl,BYTE PTR [edx-0x31]
  4061c9:	test   al,0x3c
  4061cb:	mov    cl,BYTE PTR [ecx-0x739033e1]
  4061d1:	jno    0x40616e
  4061d3:	sti    
  4061d4:	lea    edx,[eax+0x5a986c5]
  4061da:	xchg   edi,eax
  4061db:	push   cs
  4061dc:	hlt    
  4061dd:	leave  
  4061de:	pop    es
  4061df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061e0:	popf   
  4061e1:	sbb    eax,0x1441be49
  4061e6:	call   0xd53885e
  4061eb:	push   ebp
  4061ec:	stos   DWORD PTR es:[edi],eax
  4061ed:	sub    eax,0xf356987c
  4061f2:	retf   
  4061f3:	push   edx
  4061f4:	xchg   ebp,eax
  4061f5:	retf   0xf3fd
  4061f8:	ins    BYTE PTR es:[edi],dx
  4061f9:	in     eax,dx
  4061fa:	and    BYTE PTR ds:[esi+0x2a3d0479],0x8
  406202:	adc    DWORD PTR [eax-0x2],0x77
  406206:	cwde   
  406207:	mov    esp,0x4a624004
  40620c:	adc    BYTE PTR [esp+esi*4+0x44edea43],ch
  406213:	sbb    BYTE PTR [ebx+0x16],ah
  406216:	aas    
  406217:	adc    esi,ebp
  406219:	pop    edi
  40621a:	cld    
  40621b:	das    
  40621c:	cmp    DWORD PTR cs:[ecx+0x64],ebp
  406220:	loop   0x4061dd
  406222:	gs sub edi,esi
  406225:	shl    DWORD PTR [ebx-0x61624f8a],cl
  40622b:	fild   QWORD PTR [esi-0xa]
  40622e:	or     eax,0xa292cc0f
  406233:	fwait
  406234:	in     eax,dx
  406235:	popa   
  406236:	call   0xde9:0xa3a53f8a
  40623d:	pop    ss
  40623e:	jmp    0x406287
  406240:	outs   dx,DWORD PTR ds:[esi]
  406241:	dec    esp
  406242:	sbb    edi,ecx
  406244:	pop    edi
  406245:	inc    eax
  406246:	xor    eax,0x5046e542
  40624b:	dec    ecx
  40624c:	xor    al,0xca
  40624e:	pop    ecx
  40624f:	adc    al,0xa8
  406251:	cmp    edx,DWORD PTR [ebx+0xe]
  406254:	cmp    ecx,eax
  406256:	dec    edi
  406257:	mov    edi,DWORD PTR [ebp-0x38da7f1d]
  40625d:	dec    eax
  40625e:	add    BYTE PTR cs:[ebp-0x6f334fb8],dh
  406265:	ret    
  406266:	retf   
  406267:	test   al,0xe3
  406269:	mov    ds:0x23759832,eax
  40626e:	out    0x9c,eax
  406270:	inc    edx
  406271:	adc    dh,BYTE PTR [esi-0x2b]
  406274:	outs   dx,BYTE PTR ds:[esi]
  406275:	in     al,dx
  406276:	in     al,dx
  406277:	hlt    
  406278:	inc    edi
  406279:	xchg   ebp,eax
  40627a:	adc    BYTE PTR ds:0x6b4070a9,dh
  406280:	mov    al,ds:0x3c451342
  406285:	mov    edi,0x2489e6f
  40628a:	daa    
  40628b:	retf   0x580e
  40628e:	nop
  40628f:	xchg   ebp,eax
  406291:	fwait
  406292:	lahf   
  406293:	inc    esp
  406294:	fsubr  DWORD PTR [ecx+0x65]
  406297:	pop    esp
  406298:	es mov ch,0x40
  40629b:	mov    ds:0xf4bdf1fd,eax
  4062a0:	and    edi,esi
  4062a2:	inc    ebp
  4062a3:	mov    ebx,0x4b332edf
  4062a8:	cmp    al,BYTE PTR [edi+edi*8+0x2d3ccd22]
  4062af:	fisubr DWORD PTR [eax-0x2]
  4062b2:	mov    ds:0xe8f71890,eax
  4062b7:	push   ss
  4062b8:	pop    ebx
  4062b9:	nop    DWORD PTR [eax-0x63]
  4062bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062be:	fwait
  4062bf:	mov    dh,0xd8
  4062c1:	out    dx,eax
  4062c2:	mov    al,BYTE PTR [esi-0x61f500b8]
  4062c8:	in     al,dx
  4062c9:	xchg   BYTE PTR [eax-0x6e],ch
  4062cc:	dec    ecx
  4062cd:	lock jae 0x4062d7
  4062d0:	outs   dx,BYTE PTR ds:[esi]
  4062d1:	inc    edx
  4062d2:	mov    ah,0x5
  4062d5:	adc    al,0x32
  4062d7:	pop    eax
  4062d8:	scas   eax,DWORD PTR es:[edi]
  4062d9:	lahf   
  4062da:	push   ebp
  4062db:	jns    0x4062b9
  4062dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062de:	inc    eax
  4062df:	dec    ecx
  4062e0:	fistp  QWORD PTR [edx]
  4062e2:	mov    edx,0xbd50d40
  4062e7:	mov    ch,0xa
  4062e9:	cmp    al,0x4b
  4062eb:	push   edi
  4062ec:	(bad)  
  4062ed:	mov    ds:0x9686210f,eax
  4062f2:	push   ebx
  4062f3:	or     al,0xe
  4062f5:	cli    
  4062f6:	dec    BYTE PTR [ecx]
  4062f8:	lea    esi,[ecx-0x23]
  4062fb:	jecxz  0x406311
  4062fd:	cwde   
  4062fe:	add    BYTE PTR [ebp-0x7f40ffd4],bl
  406304:	adc    esp,esi
  406306:	dec    ebp
  406307:	mov    esi,0xed19ed6b
  40630c:	adc    ah,dl
  40630e:	inc    esp
  40630f:	loope  0x4062e2
  406311:	(bad)  
  406312:	ss je  0x40632c
  406315:	fadd   st,st(2)
  406317:	sub    DWORD PTR [ecx],0x3c
  40631a:	js     0x406361
  40631c:	push   cs
  40631d:	mov    al,cl
  40631f:	jge    0x4062e0
  406321:	mov    al,0x86
  406323:	inc    ecx
  406324:	call   0x4375767f
  406329:	cmp    esi,esi
  40632b:	add    ebp,DWORD PTR [ebp-0x57]
  40632e:	push   edx
  40632f:	daa    
  406330:	lahf   
  406331:	imul   ebx,DWORD PTR [ebp+0x26],0x18
  406335:	dec    edi
  406336:	lahf   
  406337:	sub    esp,DWORD PTR [ecx+0x43]
  40633a:	das    
  40633b:	jnp    0x406370
  40633d:	bound  edx,QWORD PTR [ebx-0x72b74a36]
  406343:	mov    dh,0x87
  406345:	lds    eax,FWORD PTR [eax+0x52]
  406348:	and    dh,bh
  40634a:	in     al,dx
  40634b:	in     eax,0xd4
  40634d:	shl    DWORD PTR [eax],0x62
  406350:	and    bl,bh
  406352:	cmp    eax,0xb004a41b
  406357:	cmp    BYTE PTR [ebx+0x3e],cl
  40635a:	add    BYTE PTR [eax+0x729b940a],bl
  406360:	xchg   edi,eax
  406361:	out    0x7d,al
  406363:	xor    BYTE PTR [edi-0x1bab4827],ah
  406369:	inc    ebx
  40636a:	repnz and BYTE PTR fs:[edx-0x7474f2f9],bl
  406372:	mov    edi,0x4deff397
  406377:	push   ecx
  406378:	mov    bh,0x6b
  40637a:	xchg   edi,eax
  40637b:	inc    edx
  40637c:	je     0x40639e
  40637e:	add    al,0xed
  406380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406381:	mov    al,0x4
  406383:	shl    BYTE PTR [ecx+0x79],1
  406386:	in     al,0x77
  406388:	pop    edi
  406389:	push   0xffffffc7
  40638b:	or     BYTE PTR [eax-0x765e5349],dh
  406391:	xchg   esi,eax
  406392:	and    eax,0x87996109
  406397:	adc    ah,BYTE PTR [esp+ecx*1]
  40639a:	mov    eax,DWORD PTR [edi]
  40639c:	test   DWORD PTR [ebx-0x7683267a],ecx
  4063a2:	cmp    al,0xb6
  4063a4:	sub    esp,DWORD PTR [edx+eax*2]
  4063a7:	cmp    eax,0x75dc2ef3
  4063ac:	lods   al,BYTE PTR ds:[esi]
  4063ad:	mov    cs,WORD PTR [esi]
  4063af:	sub    bh,BYTE PTR [ebp+0x3c]
  4063b2:	inc    eax
  4063b3:	lods   eax,DWORD PTR ss:[esi]
  4063b5:	lds    edx,FWORD PTR [edi-0x64a8f1fe]
  4063bb:	xor    dl,BYTE PTR [edx+0x714e0e73]
  4063c1:	add    eax,0xa8e616e7
  4063c6:	mov    ch,0x30
  4063c8:	jbe    0x4063a5
  4063ca:	loope  0x406433
  4063cc:	dec    edx
  4063cd:	cmp    BYTE PTR [ecx+eax*2+0x61],ah
  4063d1:	loop   0x40635b
  4063d3:	and    bh,BYTE PTR ds:0x955a4315
  4063d9:	xchg   DWORD PTR [esi+0x2269be3e],ebx
  4063df:	sahf   
  4063e0:	outs   dx,BYTE PTR ds:[esi]
  4063e1:	cmp    al,0x64
  4063e3:	aaa    
  4063e4:	cmp    cl,al
  4063e6:	jp     0x406424
  4063e8:	(bad)  
  4063e9:	lahf   
  4063ea:	xchg   BYTE PTR [edx+0xb],dl
  4063ed:	xchg   ecx,eax
  4063ee:	jno    0x40643a
  4063f0:	mov    ds:0xb73bd240,al
  4063f5:	enter  0xea98,0xf9
  4063f9:	push   cs
  4063fa:	in     al,0x9b
  4063fc:	and    BYTE PTR [eax-0x3da5c72d],dh
  406402:	test   dl,ah
  406404:	jg     0x40645e
  406406:	pop    es
  406407:	(bad)  
  406408:	cs mov bl,0xd6
  40640b:	and    eax,0xc6a8e1b7
  406410:	mov    ch,0x56
  406412:	je     0x4063e2
  406414:	stos   BYTE PTR es:[edi],al
  406415:	fmul   QWORD PTR [edi-0x3b807cc5]
  40641b:	test   al,0xb7
  40641d:	or     DWORD PTR [edx-0x4d],0x42
  406421:	sbb    DWORD PTR [edi],ebp
  406423:	add    BYTE PTR [ecx+0x51],ch
  406426:	sub    edi,DWORD PTR [esi+0x2316e43f]
  40642c:	push   ebp
  40642d:	in     al,0x5e
  40642f:	test   dl,dh
  406431:	pushf  
  406432:	nop
  406433:	jns    0x4064b4
  406435:	pop    ebp
  406436:	inc    ebp
  406437:	jbe    0x4063d1
  406439:	pop    ss
  40643a:	push   es
  40643b:	pop    ss
  40643c:	push   0xffffffa4
  40643e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40643f:	and    ah,BYTE PTR es:[eax]
  406442:	rcr    DWORD PTR [eax-0x7a],0x4
  406446:	into   
  406447:	rcr    DWORD PTR [ecx-0x12],0xc8
  40644b:	pusha  
  40644c:	jle    0x406498
  40644e:	test   DWORD PTR [esp+esi*4-0x13b74e12],ebp
  406455:	inc    edx
  406456:	(bad)  
  406458:	sbb    al,0xb2
  40645a:	jp     0x406499
  40645c:	and    ecx,ecx
  40645e:	mov    ebp,DWORD PTR [edi-0x6110800c]
  406464:	adc    dl,ch
  406466:	ds or  cl,cl
  406469:	fild   QWORD PTR [eax+edi*2]
  40646c:	test   eax,0x550c0b5
  406471:	pushf  
  406472:	mov    esi,0xcf009d63
  406477:	mov    esp,0xb5a98132
  40647c:	fidivr WORD PTR [edi+0x1bef90e1]
  406482:	push   ebp
  406483:	cmc    
  406484:	lods   eax,DWORD PTR ds:[esi]
  406485:	ret    
  406486:	arpl   ax,bx
  406488:	popf   
  406489:	ins    BYTE PTR es:[edi],dx
  40648a:	das    
  40648b:	dec    esi
  40648c:	aaa    
  40648d:	hlt    
  40648e:	xor    DWORD PTR [edi-0x33],ebp
  406491:	and    edi,esi
  406493:	pop    ebp
  406494:	pop    esp
  406495:	jmp    0x4064c4
  406497:	loop   0x4064cd
  406499:	dec    ebx
  40649a:	leave  
  40649b:	mov    ah,0x33
  40649d:	pop    ebx
  40649e:	ds pop ecx
  4064a0:	adc    DWORD PTR [esi-0x7026659f],esi
  4064a6:	jmp    0x406516
  4064a8:	jle    0x406498
  4064aa:	add    al,0x1b
  4064ac:	add    edx,DWORD PTR [ecx-0x4c]
  4064af:	cmp    edx,DWORD PTR [ecx+0x5f]
  4064b2:	mov    bl,0xbf
  4064b4:	sub    ah,al
  4064b6:	xchg   ebx,eax
  4064b7:	and    eax,0xc10a49a1
  4064bc:	mov    ebp,0x8da2a0b4
  4064c1:	adc    eax,DWORD PTR [ebp-0x4bf7df98]
  4064c7:	xchg   ecx,eax
  4064c8:	fidiv  DWORD PTR [ecx+ebx*1-0x4b]
  4064cc:	test   al,0xa2
  4064ce:	shl    BYTE PTR [eax-0x7d],cl
  4064d1:	fcmovu st,st(4)
  4064d3:	in     al,0x35
  4064d5:	ja     0x406459
  4064d7:	push   ebx
  4064d8:	or     DWORD PTR [esi-0x9],edx
  4064db:	fadd   QWORD PTR [ecx+0x4e]
  4064de:	es pop edi
  4064e0:	pop    eax
  4064e1:	mov    ah,0x34
  4064e3:	nop
  4064e4:	and    eax,0xa7b3fb2
  4064e9:	cld    
  4064ea:	rcr    DWORD PTR [ebx-0x2a7a0fea],1
  4064f0:	mov    esi,DWORD PTR [ecx]
  4064f2:	sbb    DWORD PTR [ecx-0x60],edx
  4064f5:	std    
  4064f6:	pop    eax
  4064f7:	pop    esi
  4064f8:	add    BYTE PTR [ebx-0x4ff11492],ch
  4064fe:	inc    edx
  4064ff:	sar    BYTE PTR [eax-0x1e],cl
  406502:	retf   
  406503:	js     0x4064d6
  406505:	mov    ebp,0x6c3497c2
  40650a:	mov    al,ds:0x79b32a43
  40650f:	fs pop ss
  406511:	dec    esi
  406512:	ror    DWORD PTR [edx+0x1b5cc757],1
  406518:	inc    edi
  406519:	push   0x24
  40651b:	pop    ds
  40651c:	and    DWORD PTR [ecx+0xc17ff7a],ecx
  406522:	out    dx,eax
  406523:	jp     0x4064bb
  406525:	stc    
  406526:	add    ch,BYTE PTR [edi+esi*2+0x52]
  40652a:	mov    edx,0x82df83a3
  40652f:	daa    
  406530:	(bad)
  406534:	repz add eax,0xf5213820
  40653a:	mov    ah,0x6
  40653c:	retf   0x9a37
  40653f:	call   0xe3e94e8
  406544:	and    edx,DWORD PTR [edx]
  406546:	push   es
  406547:	inc    ebx
  406548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406549:	test   eax,0x73f0404a
  40654e:	enter  0x373a,0xf9
  406552:	inc    esp
  406553:	push   ds
  406554:	push   0x882ae03d
  406559:	lahf   
  40655a:	push   cs
  40655b:	lock mov edi,DWORD PTR [edi-0x30cbc2ac]
  406562:	push   esp
  406563:	gs push esi
  406565:	nop
  406566:	and    dl,0xed
  406569:	ret    
  40656a:	sahf   
  40656b:	fs dec ecx
  40656d:	mov    esp,0x5ddb1823
  406572:	outs   dx,DWORD PTR ds:[esi]
  406573:	dec    ecx
  406574:	cmp    edi,esp
  406576:	scas   eax,DWORD PTR es:[edi]
  406577:	add    dl,BYTE PTR [esi-0x4ed9ef67]
  40657d:	inc    edx
  40657e:	retf   
  40657f:	jo     0x406527
  406581:	and    eax,0x35713e81
  406586:	dec    ebp
  406587:	mul    DWORD PTR [ebx+0x441be01e]
  40658d:	xchg   esi,eax
  40658e:	xchg   ecx,eax
  406590:	dec    esi
  406591:	out    0xa9,al
  406593:	mov    ecx,0xf3534d3a
  406598:	sbb    BYTE PTR [edx+0x31],cl
  40659b:	retf   0xf827
  40659e:	mov    ds:0xa188b319,al
  4065a3:	or     dl,al
  4065a5:	jmp    0x627bce57
  4065aa:	cmp    al,0xe0
  4065ac:	jns    0x4065f8
  4065ae:	mov    ebx,0x273d3ead
  4065b3:	cmp    bh,dh
  4065b5:	stos   DWORD PTR es:[edi],eax
  4065b6:	mov    ebx,0xd2db3c2f
  4065bb:	pop    esi
  4065bc:	enter  0x9b6a,0xa1
  4065c0:	xor    dh,bh
  4065c2:	in     al,0xc1
  4065c4:	outs   dx,DWORD PTR ss:[esi]
  4065c6:	add    ch,BYTE PTR [ebx]
  4065c8:	push   edx
  4065c9:	xchg   edx,eax
  4065ca:	leave  
  4065cb:	mov    ebp,0xbaa0985a
  4065d0:	fisub  WORD PTR [ebx-0xa]
  4065d3:	adc    al,0xe9
  4065d5:	sub    al,0x7b
  4065d7:	(bad)  
  4065d9:	in     eax,0x93
  4065db:	cld    
  4065dc:	jmp    0xc1045516
  4065e1:	jg     0x4065c0
  4065e3:	inc    ebp
  4065e4:	data16 out dx,al
  4065e6:	fs dec ecx
  4065e8:	shl    DWORD PTR [edi+0x1b],cl
  4065eb:	ret    
  4065ec:	jecxz  0x4065fe
  4065ee:	pop    ds
  4065ef:	push   edx
  4065f0:	jecxz  0x4065d6
  4065f2:	or     BYTE PTR [ebp+0x6a12a54f],0xf0
  4065f9:	add    BYTE PTR [edi],0xe1
  4065fc:	xor    bh,BYTE PTR [ecx+ecx*1-0x19848a7]
  406603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406604:	jmp    0xfae:0xd7c88c95
  40660b:	sub    esp,DWORD PTR [esi+0x6e]
  40660e:	test   eax,0xe22abde0
  406613:	sbb    BYTE PTR [edx],al
  406615:	jmp    0x3fa751d7
  40661a:	bnd jo 0x40668b
  40661d:	aas    
  40661e:	ret    0xa1c9
  406621:	test   al,0x82
  406623:	int    0xa7
  406625:	call   0xf3d065e2
  40662a:	dec    edx
  40662b:	sbb    eax,0x84374a00
  406630:	stos   BYTE PTR es:[edi],al
  406631:	(bad)  
  406633:	sahf   
  406634:	jge    0x4066a0
  406636:	repz imul eax,DWORD PTR [edi-0x29],0x11
  40663b:	push   cs
  40663c:	clc    
  40663d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40663e:	stos   DWORD PTR es:[edi],eax
  40663f:	sti    
  406640:	hlt    
  406641:	mov    ds:0xc40fd6a1,al
  406646:	inc    eax
  406647:	xor    ah,BYTE PTR [edx+edi*1]
  40664a:	js     0x40665d
  40664c:	pop    esp
  40664d:	and    al,0x2a
  40664f:	dec    esi
  406650:	adc    bh,dl
  406652:	inc    esi
  406653:	lea    edi,[ecx]
  406655:	daa    
  406656:	out    dx,al
  406657:	dec    edi
  406658:	loop   0x406611
  40665a:	push   edi
  40665b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40665c:	xchg   ecx,eax
  40665d:	dec    edx
  40665e:	lock jmp 0x4066a7
  406661:	sbb    ch,BYTE PTR [esi]
  406663:	je     0x4066c2
  406665:	or     eax,0x6196113f
  40666a:	push   eax
  40666b:	mul    BYTE PTR [edi-0x57ccca0f]
  406671:	das    
  406672:	shr    bl,0x6f
  406675:	leave  
  406676:	or     BYTE PTR [ebp-0x301aff37],cl
  40667c:	lea    ebp,[esi-0x5d]
  40667f:	test   bh,bl
  406681:	scas   eax,DWORD PTR es:[edi]
  406682:	(bad)
  406685:	ins    BYTE PTR es:[edi],dx
  406686:	pop    edx
  406687:	and    dh,BYTE PTR [edi+ebx*8]
  40668a:	sub    al,bh
  40668c:	int    0xa
  40668e:	lods   al,BYTE PTR ds:[esi]
  40668f:	je     0x4066c5
  406691:	test   dh,bh
  406693:	mov    WORD PTR [ecx+edx*2+0x57],fs
  406697:	in     al,0x6b
  406699:	stos   BYTE PTR es:[edi],al
  40669a:	xor    al,0x15
  40669c:	jg     0x4066c2
  40669e:	cdq    
  40669f:	cdq    
  4066a0:	sub    DWORD PTR [eax],edi
  4066a2:	les    ebp,FWORD PTR [edx-0x41]
  4066a5:	jmp    FWORD PTR [esi]
  4066a7:	inc    ebx
  4066a8:	xlat   BYTE PTR ds:[ebx]
  4066a9:	lea    edi,[edx-0x4e]
  4066ac:	xchg   esi,eax
  4066ad:	and    al,0x73
  4066af:	push   ss
  4066b0:	and    DWORD PTR [ebx],esi
  4066b2:	cmp    al,0x1e
  4066b4:	cmp    BYTE PTR [edx+ebx*1],bh
  4066b7:	outs   dx,BYTE PTR gs:[esi]
  4066b9:	mov    eax,0x5dec66be
  4066be:	scas   al,BYTE PTR es:[edi]
  4066bf:	idiv   DWORD PTR [ebp+0x5e]
  4066c2:	or     al,0xc5
  4066c4:	mov    edi,0x38db2a42
  4066c9:	jns    0x4066c6
  4066cb:	mov    edi,0x36484ee3
  4066d0:	mov    dl,0x8b
  4066d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066d3:	pop    ds
  4066d4:	lds    ebx,FWORD PTR [ecx-0x77]
  4066d7:	mov    fs,WORD PTR [ecx+edx*4]
  4066da:	bound  ecx,QWORD PTR [edi-0x21]
  4066dd:	xor    esi,DWORD PTR [edx]
  4066df:	ds add eax,0x3f3b6523
  4066e5:	inc    ebp
  4066e6:	clc    
  4066e7:	sub    ecx,edx
  4066e9:	push   esp
  4066ea:	mov    ebx,0xe39e5736
  4066ef:	mov    dh,0x50
  4066f1:	fimul  WORD PTR [ebp+0x49bf55a2]
  4066f7:	lock es xor cl,bl
  4066fb:	push   edi
  4066fc:	jl     0x406752
  4066fe:	hlt    
  4066ff:	jo     0x406754
  406701:	retf   
  406702:	lods   al,BYTE PTR ss:[esi]
  406704:	rcr    BYTE PTR [ebp-0x5d],cl
  406707:	inc    edx
  406708:	dec    esp
  406709:	stc    
  40670a:	mov    ds:0xba5526ea,eax
  40670f:	pop    esi
  406710:	lock and bl,bl
  406713:	lods   al,BYTE PTR ds:[esi]
  406714:	(bad)  
  406716:	sti    
  406717:	call   0x7f9989dc
  40671c:	lahf   
  40671d:	and    BYTE PTR [edi+0x27],ch
  406720:	scas   al,BYTE PTR es:[edi]
  406721:	pop    esi
  406722:	clc    
  406723:	adc    DWORD PTR [ecx],esp
  406725:	jmp    0x4066e3
  406727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406728:	add    eax,0x7e0ee8a1
  40672d:	adc    dl,BYTE PTR [edi+0x67ed127]
  406733:	jne    0x406795
  406735:	or     eax,0x7e7fdb6
  40673a:	popf   
  40673b:	imul   ecx,DWORD PTR [eax-0x21],0x70
  40673f:	(bad)  
  406740:	inc    ebx
  406741:	sub    al,0x8b
  406743:	sub    eax,0x2fe56902
  406748:	cmp    dl,BYTE PTR [ebx-0x72]
  40674b:	xchg   esp,eax
  40674c:	rol    DWORD PTR [edx+edx*4],1
  40674f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406750:	lock add BYTE PTR [edx+ecx*4-0x28],0xb8
  406756:	sub    BYTE PTR [edx+0x5f],bh
  406759:	push   ss
  40675a:	pusha  
  40675b:	jge    0x40677b
  40675d:	cmp    cl,BYTE PTR [ebx]
  40675f:	pop    ss
  406760:	inc    ebx
  406761:	fldcw  WORD PTR [esi+0x628fec48]
  406767:	or     al,0xe8
  406769:	or     al,0xb
  40676b:	jbe    0x4066f2
  40676d:	jp     0x40671a
  40676f:	rcl    ebp,cl
  406771:	xchg   BYTE PTR [edx+0x1facc687],bh
  406777:	test   DWORD PTR [ecx],eax
  406779:	xor    DWORD PTR [edx-0x69],0x90e7d220
  406780:	jbe    0x406768
  406782:	adc    al,0xa0
  406784:	(bad)
  406787:	cmp    dl,cl
  406789:	test   eax,0xda07295d
  40678e:	out    0x3c,al
  406790:	mov    esp,0x2d035a28
  406795:	lds    ecx,FWORD PTR [edx-0x25]
  406798:	push   esi
  406799:	das    
  40679a:	test   BYTE PTR [esi+ebx*1],dh
  40679d:	retf   0xa055
  4067a0:	inc    esi
  4067a1:	cwde   
  4067a2:	call   0x2d60b9f4
  4067a7:	call   0x306:0x612c29c2
  4067ae:	retf   
  4067af:	ror    BYTE PTR ds:0xd929f12b,1
  4067b5:	test   al,0xf0
  4067b7:	adc    dh,BYTE PTR [ebx-0x76]
  4067ba:	dec    eax
  4067bb:	imul   esi,DWORD PTR [esi+edi*2-0x2a8f55df],0x747fb076
  4067c6:	sbb    al,0xf2
  4067c8:	arpl   dx,cx
  4067ca:	iret   
  4067cb:	les    ecx,FWORD PTR [ebx-0x75fc7c7e]
  4067d1:	xor    al,0x3f
  4067d3:	add    ah,bh
  4067d5:	outs   dx,BYTE PTR ds:[esi]
  4067d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067d7:	pop    ebp
  4067d8:	push   ecx
  4067d9:	inc    eax
  4067da:	out    0xc3,eax
  4067dc:	xor    BYTE PTR [ebp-0x52],dh
  4067df:	je     0x4067b7
  4067e1:	sti    
  4067e2:	(bad)  
  4067e3:	cs add ecx,edi
  4067e6:	clc    
  4067e7:	and    ebx,DWORD PTR [ecx+0x6bbcf89a]
  4067ed:	loope  0x406845
  4067ef:	(bad)  
  4067f0:	jne    0x4067c0
  4067f2:	xor    DWORD PTR ds:0x61a07bd9,edx
  4067f8:	sbb    al,0xbd
  4067fa:	test   al,0x49
  4067fc:	dec    edx
  4067fd:	mov    al,ds:0x9ec55670
  406802:	in     al,dx
  406803:	adc    ebx,DWORD PTR [edx+0x55]
  406806:	lds    ebx,FWORD PTR [edx+0x52]
  406809:	je     0x40680c
  40680b:	xor    BYTE PTR [ecx-0x75],0xb0
  40680f:	call   0xde06:0xee71a9e0
  406816:	and    al,0x63
  406818:	rcl    ch,1
  40681a:	mov    ebp,0x6d737a96
  40681f:	xor    eax,0xbada097b
  406824:	push   esp
  406825:	inc    esp
  406826:	add    dl,BYTE PTR [edx]
  406828:	test   BYTE PTR [eax],dl
  40682a:	add    eax,0xf1d8e95b
  40682f:	jmp    0xd7fd64e8
  406834:	mov    dh,0x9c
  406836:	mov    ch,0x98
  406838:	pop    edx
  406839:	pop    es
  40683a:	mov    edx,DWORD PTR [esi]
  40683c:	test   BYTE PTR ds:0xcbea6225,al
  406842:	leave  
  406843:	xor    DWORD PTR [ebx-0x69],edi
  406846:	sub    BYTE PTR [edx+0x3],bh
  406849:	imul   BYTE PTR [eax+0x1c84dc41]
  40684f:	dec    esp
  406850:	adc    eax,0x4967d636
  406855:	es jae 0x40684d
  406858:	inc    edx
  406859:	push   ebp
  40685a:	mov    ds:0x9b0d4828,al
  40685f:	(bad)  [ecx]
  406861:	aas    
  406862:	push   esp
  406863:	sahf   
  406864:	outs   dx,BYTE PTR ds:[esi]
  406865:	lods   al,BYTE PTR ds:[esi]
  406866:	mov    ebp,0x89dfaf6d
  40686b:	inc    edx
  40686c:	pushf  
  40686d:	adc    eax,0xc258cf3
  406872:	pop    eax
  406873:	test   eax,0x8752c5cb
  406878:	and    DWORD PTR [edx],eax
  40687a:	rol    DWORD PTR [eax],1
  40687c:	out    0x76,al
  40687e:	pop    ebp
  40687f:	imul   ecx,DWORD PTR [esi+0x22],0x5b
  406883:	out    0x9e,al
  406885:	xchg   ecx,eax
  406886:	xor    DWORD PTR [ecx+0x51ae094f],esi
  40688c:	rcr    BYTE PTR [ecx],0x38
  40688f:	popf   
  406890:	mov    dl,0x1d
  406892:	scas   al,BYTE PTR es:[edi]
  406893:	pop    edx
  406894:	cmc    
  406895:	xor    ebx,DWORD PTR [esi-0x43dba1b1]
  40689b:	imul   eax,DWORD PTR [esp+edx*2],0xd9628501
  4068a2:	icebp  
  4068a3:	inc    ebp
  4068a4:	loop   0x4068cb
  4068a6:	push   cs
  4068a7:	lahf   
  4068a8:	ds mov dh,0xff
  4068ab:	loopne 0x40689c
  4068ad:	add    BYTE PTR [ebx+0x428c76d9],dh
  4068b3:	(bad)  
  4068b4:	cmp    dh,cl
  4068b6:	jge    0x40692d
  4068b8:	fsub   DWORD PTR [edx]
  4068ba:	pop    ebx
  4068bb:	or     BYTE PTR ds:0x4763379,dh
  4068c1:	jbe    0x4068b4
  4068c3:	in     al,0x49
  4068c5:	xchg   ebx,eax
  4068c6:	or     al,0x45
  4068c8:	or     DWORD PTR [eax+ebp*1+0x1a],ebx
  4068cc:	les    ebx,FWORD PTR [esi-0x21]
  4068cf:	xor    BYTE PTR [eax+edi*2+0xe],ah
  4068d3:	pop    eax
  4068d4:	inc    edi
  4068d5:	loopne 0x406954
  4068d7:	cmp    cl,BYTE PTR es:[ecx-0xe]
  4068db:	ffree  st(4)
  4068dd:	mov    eax,0x331b9f55
  4068e2:	icebp  
  4068e3:	cmp    DWORD PTR [ebp-0x317bc393],ecx
  4068e9:	(bad)  
  4068ea:	jp     0x40690c
  4068ec:	ja     0x406870
  4068ee:	xlat   BYTE PTR ds:[ebx]
  4068ef:	add    esp,DWORD PTR [ebx]
  4068f1:	(bad)  
  4068f2:	cdq    
  4068f3:	dec    edi
  4068f4:	jle    0x40688b
  4068f6:	or     DWORD PTR [eax],ecx
  4068f8:	mov    ecx,0xced5fed7
  4068fd:	jnp    0x406938
  4068ff:	lds    eax,FWORD PTR [ebx]
  406901:	les    ecx,FWORD PTR [esi+edi*1]
  406904:	call   0x3fb6b820
  406909:	push   esi
  40690a:	div    DWORD PTR [eax+edx*1]
  40690d:	(bad)  
  40690e:	ds inc edx
  406910:	ins    DWORD PTR es:[edi],dx
  406911:	mov    dh,0xb3
  406913:	mov    ds:0xbc5f2860,eax
  406918:	and    ch,bl
  40691a:	(bad)  
  40691b:	push   cs
  40691c:	inc    esi
  40691d:	(bad)  [ebx]
  40691f:	mov    ecx,DWORD PTR [edi]
  406921:	mov    ss,WORD PTR [ebx+0x42]
  406924:	out    dx,eax
  406925:	test   BYTE PTR [ecx+0x15be6763],0x4a
  40692c:	mov    edx,0x25397eb6
  406931:	sbb    al,0x45
  406933:	sar    BYTE PTR [esi+0x76c5dfaa],1
  406939:	mov    bh,0x5
  40693b:	sbb    BYTE PTR [ecx+0x2b],dl
  40693e:	cmc    
  40693f:	push   esp
  406940:	(bad)  
  406941:	cmp    al,0x7f
  406943:	jecxz  0x40691a
  406945:	nop
  406946:	sub    DWORD PTR [edx-0x4680deda],edx
  40694c:	mov    dh,0xaa
  40694e:	rol    esp,1
  406950:	fstp   DWORD PTR [ebp-0x1de03ec6]
  406956:	inc    eax
  406957:	add    edx,edi
  406959:	scas   eax,DWORD PTR es:[edi]
  40695a:	rcl    DWORD PTR [ebp+0x63],0x16
  40695e:	cwde   
  40695f:	sub    eax,edi
  406961:	sar    BYTE PTR [edi-0x1],1
  406964:	out    dx,eax
  406965:	out    dx,al
  406966:	push   ds
  406967:	lods   al,BYTE PTR ds:[esi]
  406968:	mov    WORD PTR [edi+0x38],ds
  40696b:	ds jo  0x4069d4
  40696e:	cld    
  40696f:	test   DWORD PTR [edi+0x68039ef0],esp
  406975:	mov    ecx,0x341aab8a
  40697a:	inc    DWORD PTR [ecx]
  40697c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40697d:	xor    eax,0x72387225
  406982:	pop    es
  406983:	or     eax,0x3b4a4541
  406988:	fisub  DWORD PTR [eax+0x397e607d]
  40698e:	jbe    0x4069ee
  406990:	hlt    
  406991:	les    edi,FWORD PTR [esp+edi*2]
  406994:	jecxz  0x406928
  406996:	cmp    al,0xf5
  406998:	mov    bl,bl
  40699a:	jl     0x4069ff
  40699c:	pop    es
  40699d:	mov    BYTE PTR [eax],0xd0
  4069a0:	rcl    DWORD PTR [esi],1
  4069a2:	dec    esp
  4069a3:	jb     0x4069ed
  4069a5:	rcr    DWORD PTR [esi],0x5b
  4069a8:	push   eax
  4069a9:	pop    ds
  4069aa:	sub    al,0x7e
  4069ac:	cld    
  4069ad:	cmp    esi,DWORD PTR [esi-0x350e8ede]
  4069b3:	dec    esi
  4069b4:	call   0x34ec:0xf86af046
  4069bb:	imul   eax,DWORD PTR [ebx],0x6eed9a04
  4069c1:	mov    eax,ds:0xebae2398
  4069c6:	(bad)  
  4069c8:	jl     0x4069c7
  4069ca:	pop    ss
  4069cb:	or     DWORD PTR [ecx+0x60],esp
  4069ce:	inc    edi
  4069cf:	mov    al,0x5a
  4069d1:	jae    0x4069f5
  4069d3:	xor    esp,DWORD PTR [ebp-0x7f]
  4069d6:	xchg   ebx,eax
  4069d7:	push   edx
  4069d8:	push   es
  4069d9:	inc    ebx
  4069da:	xchg   ebp,eax
  4069db:	shr    DWORD PTR [ecx+0x44],1
  4069de:	(bad)  
  4069df:	out    dx,eax
  4069e0:	pushf  
  4069e1:	in     eax,dx
  4069e2:	fnsave [ebp+edx*8+0x6a]
  4069e6:	pop    es
  4069e7:	sbb    BYTE PTR [edi+edx*1-0x4a],cl
  4069eb:	xor    ebx,DWORD PTR [eax+0xd]
  4069ee:	frstor [esp+ebx*1]
  4069f1:	add    bh,BYTE PTR [eax-0x969fca8]
  4069f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069f8:	adc    BYTE PTR [ebx+0x5fdbb3a],dl
  4069fe:	cld    
  4069ff:	fdiv   DWORD PTR [eax+0x7b]
  406a02:	es clc 
  406a04:	out    0x40,eax
  406a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a07:	loope  0x4069f2
  406a09:	lds    ecx,FWORD PTR [ecx-0x78]
  406a0c:	ds cwde 
  406a0e:	sub    bl,BYTE PTR [ebp+edx*2+0x49ebdebb]
  406a15:	pop    dx
  406a17:	adc    ecx,DWORD PTR [ebx+0x40ddf8c]
  406a1d:	inc    esp
  406a1e:	mov    edx,0x743d0366
  406a23:	add    ebp,DWORD PTR [esi-0x1099973a]
  406a29:	xor    cl,bl
  406a2b:	sub    esp,esi
  406a2d:	jno    0x4069ca
  406a2f:	jmp    0x4069ff
  406a31:	mov    esp,0x76258282
  406a36:	ja     0x406aaa
  406a38:	xor    esp,esi
  406a3a:	lea    eax,[edx]
  406a3c:	mov    ebx,0xcb94ad99
  406a41:	jb     0x406a0f
  406a43:	jl     0x406aa4
  406a45:	test   DWORD PTR [eax+0x74],edi
  406a48:	ss je  0x406a99
  406a4b:	push   eax
  406a4c:	mov    DWORD PTR [edi+0x2fd48f68],0xd27838e0
  406a56:	mov    ah,0xdc
  406a58:	popa   
  406a59:	mov    cl,BYTE PTR [esi+0x4]
  406a5c:	stc    
  406a5d:	test   BYTE PTR [ebx],0xcf
  406a60:	mov    al,0xfc
  406a62:	int    0x87
  406a64:	pop    ds
  406a65:	xlat   BYTE PTR ds:[ebx]
  406a66:	jg     0x406ad0
  406a68:	mov    bh,BYTE PTR [esi]
  406a6a:	mov    ebp,0xcda3b2a3
  406a6f:	aaa    
  406a70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a71:	adc    al,0x6c
  406a73:	xchg   ebp,eax
  406a74:	xchg   esp,eax
  406a75:	clc    
  406a76:	push   cs
  406a77:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a79:	cmc    
  406a7a:	mov    es,WORD PTR ds:0xa30077a5
  406a80:	mov    al,ds:0x7c3e2aac
  406a86:	jp     0x406a31
  406a88:	push   ebp
  406a89:	cmp    al,bh
  406a8b:	ficomp WORD PTR [edi]
  406a8d:	pop    es
  406a8e:	xor    eax,0x6ae4b5e
  406a93:	fdivr  DWORD PTR [esi-0x208c5c03]
  406a99:	je     0x406a68
  406a9b:	jno    0x406ad3
  406a9d:	(bad)  
  406a9e:	pop    DWORD PTR [edi-0x470bb113]
  406aa4:	mov    ebx,0xe2c97ff4
  406aa9:	sbb    ebx,DWORD PTR [edx-0x36]
  406aac:	push   cs
  406aad:	(bad)  
  406aae:	imul   edx,DWORD PTR [esi+0x55547500],0xbc0018fa
  406ab8:	sbb    BYTE PTR ss:[edi-0x7a],dl
  406abc:	leave  
  406abd:	inc    edx
  406abe:	xor    DWORD PTR [ebx-0x9],ebx
  406ac1:	pop    esp
  406ac2:	retf   
  406ac3:	jge    0x406a6d
  406ac5:	dec    esp
  406ac6:	xor    al,0x24
  406ac8:	jl     0x406b1a
  406aca:	lahf   
  406acb:	cli    
  406acc:	xchg   edi,eax
  406acd:	in     eax,0xba
  406acf:	test   BYTE PTR [eax-0x7d045339],0x84
  406ad6:	sbb    al,0xfd
  406ad8:	std    
  406ad9:	int3   
  406ada:	jbe    0x406b40
  406adc:	jno    0x406ae9
  406ade:	xchg   edx,eax
  406adf:	mov    ebx,0x3fe0c78
  406ae4:	push   ebx
  406ae5:	addr16 in eax,dx
  406ae7:	ror    DWORD PTR [ebx],0xfe
  406aea:	mov    dl,0x7e
  406aec:	stos   DWORD PTR es:[edi],eax
  406aed:	sub    eax,0x267e88be
  406af2:	mov    dh,0x70
  406af4:	ds aaa 
  406af6:	inc    eax
  406af7:	xor    al,0x54
  406af9:	xchg   ebp,eax
  406afa:	or     eax,0x97eb9061
  406aff:	mov    esp,DWORD PTR [ebx+0x6b]
  406b02:	out    0x69,eax
  406b04:	xlat   BYTE PTR ds:[ebx]
  406b05:	mov    al,ds:0xab34ae2f
  406b0a:	aad    0x58
  406b0c:	sub    eax,DWORD PTR [ebx-0x32]
  406b0f:	cwde   
  406b10:	mov    BYTE PTR es:[edi+0x62],ch
  406b14:	adc    eax,ecx
  406b16:	inc    edx
  406b17:	adc    eax,0xb9c9e0bf
  406b1c:	adc    eax,0x132a8afa
  406b21:	sub    al,BYTE PTR [edx]
  406b23:	push   ebp
  406b24:	jbe    0x406b9c
  406b26:	dec    ecx
  406b27:	and    al,0xfc
  406b29:	xchg   ecx,eax
  406b2a:	repnz dec BYTE PTR [edi+edx*1-0x35990d8]
  406b32:	and    al,0xeb
  406b34:	popa   
  406b35:	sahf   
  406b36:	dec    ebx
  406b37:	inc    ebx
  406b38:	pop    eax
  406b39:	add    al,0x28
  406b3b:	mov    dh,dl
  406b3d:	retf   
  406b3e:	sbb    dl,bl
  406b40:	sbb    edi,DWORD PTR ds:0x8909740
  406b46:	ret    
  406b47:	adc    DWORD PTR [ecx],edx
  406b49:	xor    BYTE PTR [ecx],0x52
  406b4c:	dec    edi
  406b4d:	xchg   edx,eax
  406b4e:	mov    ebx,0xb33d4b31
  406b53:	xor    al,0x63
  406b55:	outs   dx,DWORD PTR ds:[esi]
  406b56:	jge    0x406b1f
  406b58:	cmp    ch,BYTE PTR ds:0xecebd144
  406b5e:	in     eax,0xae
  406b60:	pop    edi
  406b61:	data16 xor al,bl
  406b64:	dec    ebp
  406b65:	loop   0x406af2
  406b67:	call   0x828c:0x26262d2e
  406b6e:	xchg   ebx,eax
  406b6f:	sbb    al,0xd2
  406b71:	sbb    eax,DWORD PTR [edi+0x7f]
  406b74:	mov    ebx,0x6234b263
  406b79:	pop    ds
  406b7a:	xor    bh,al
  406b7c:	fldcw  WORD PTR [ebx]
  406b7e:	sub    eax,0xf5e19233
  406b83:	(bad)  
  406b85:	imul   eax,ebx,0x16b23b42
  406b8b:	dec    edi
  406b8c:	jne    0x406be1
  406b8e:	mov    ch,BYTE PTR [ecx+0x43]
  406b91:	or     dl,BYTE PTR gs:[edi+0x43]
  406b95:	je     0x406bd4
  406b97:	or     DWORD PTR [esi-0x3e4bd2d],0x2f1e71e8
  406ba1:	cdq    
  406ba2:	jno    0x406b7c
  406ba4:	aaa    
  406ba5:	sub    al,ch
  406ba7:	and    DWORD PTR [ebx],esi
  406ba9:	xor    al,0x73
  406bab:	sbb    BYTE PTR [edx-0x589df4ca],al
  406bb1:	and    BYTE PTR [esi],0x48
  406bb4:	es jb  0x406c00
  406bb7:	xor    cl,0x77
  406bba:	iret   
  406bbb:	addr16 dec ebx
  406bbd:	jge    0x406ba5
  406bbf:	test   BYTE PTR [edi],cl
  406bc1:	cmp    esp,edi
  406bc3:	inc    edi
  406bc4:	call   0x1d3d:0xc53088b
  406bcb:	jge    0x406c40
  406bcd:	ret    
  406bce:	cmp    ebp,esi
  406bd0:	mov    eax,ds:0x5639d110
  406bd5:	cwde   
  406bd6:	push   cs
  406bd7:	push   eax
  406bd8:	ja     0x406c11
  406bda:	test   eax,0x55f90c4
  406bdf:	sub    eax,0x3ab9a672
  406be4:	or     al,0xd9
  406be6:	iret   
  406be7:	add    DWORD PTR [esi],edi
  406be9:	fdiv   DWORD PTR [eax+edx*8-0x63f905f2]
  406bf0:	adc    cl,0x24
  406bf3:	cld    
  406bf4:	inc    ebp
  406bf5:	jno    0x406b95
  406bf7:	mov    eax,0xa81dc9e3
  406bfc:	mul    ebp
  406bfe:	js     0x406c56
  406c00:	sbb    DWORD PTR [ebx],ebx
  406c02:	push   es
  406c03:	adc    ebp,DWORD PTR [ebp+eax*2-0x3156da86]
  406c0a:	push   ebx
  406c0b:	or     al,0xa5
  406c0d:	in     al,0x68
  406c0f:	out    0x44,eax
  406c11:	push   0x33
  406c13:	rcl    BYTE PTR ds:0x7a72ddda,cl
  406c19:	xlat   BYTE PTR ds:[ebx]
  406c1a:	pop    ecx
  406c1b:	jl     0x406c49
  406c1d:	mov    ecx,0xfe00635e
  406c22:	pop    ds
  406c23:	inc    eax
  406c24:	jb     0x406bb1
  406c26:	pop    ss
  406c27:	sbb    bl,BYTE PTR [ebx+0x42]
  406c2a:	(bad)  
  406c2c:	std    
  406c2d:	and    DWORD PTR [ecx+0x60],esp
  406c30:	sbb    ah,dl
  406c32:	retf   0xd65
  406c35:	loope  0x406c9f
  406c37:	or     al,0x95
  406c39:	jg     0x406cae
  406c3b:	mov    dh,0x83
  406c3d:	mov    al,0xf3
  406c3f:	es push eax
  406c41:	test   BYTE PTR [edx],dh
  406c43:	shl    BYTE PTR [ebx+0x6ed0a20b],0xa4
  406c4a:	jb     0x406bd7
  406c4c:	fld    TBYTE PTR [edx-0x6b1abee8]
  406c52:	jo     0x406be2
  406c54:	sub    dh,BYTE PTR ds:0x84a07e34
  406c5a:	xor    ecx,DWORD PTR [ecx+0x1c942fb7]
  406c60:	mov    bl,0x7c
  406c62:	in     al,0x1d
  406c64:	mov    ch,0x44
  406c66:	repz gs mov dh,0x98
  406c6a:	retf   0xb5ac
  406c6d:	xor    DWORD PTR [edi+eax*8],edi
  406c70:	adc    al,0x93
  406c72:	scas   al,BYTE PTR es:[edi]
  406c73:	frstor [eax-0x73963a99]
  406c79:	pop    eax
  406c7a:	(bad)  
  406c7b:	adc    dl,BYTE PTR [ebx+ebp*2+0x5e9fe345]
  406c82:	gs (bad) 
  406c84:	std    
  406c85:	push   ebp
  406c86:	iret   
  406c87:	gs pop edi
  406c89:	stc    
  406c8a:	aas    
  406c8b:	xor    DWORD PTR [edx],edi
  406c8d:	sti    
  406c8e:	cmp    ebp,eax
  406c90:	sub    ah,cl
  406c92:	sahf   
  406c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c94:	into   
  406c95:	xor    ah,al
  406c97:	xchg   esi,eax
  406c98:	repnz mov ds:0xc76c3160,eax
  406c9e:	inc    ebp
  406c9f:	clc    
  406ca0:	and    al,0x12
  406ca2:	inc    edx
  406ca3:	inc    esp
  406ca4:	cmp    DWORD PTR [ecx-0x238ddf38],0x2c
  406cab:	ins    BYTE PTR es:[edi],dx
  406cac:	or     ebx,DWORD PTR [ebx-0x2c34ed77]
  406cb2:	sub    al,0x1a
  406cb4:	sbb    al,0x93
  406cb6:	lahf   
  406cb7:	jae    0x406c56
  406cb9:	ret    0xb241
  406cbc:	ins    DWORD PTR es:[edi],dx
  406cbd:	stc    
  406cbe:	mul    dl
  406cc0:	mov    al,ds:0x19b77bec
  406cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cc6:	mov    edi,0x438334a8
  406ccb:	iret   
  406ccc:	jl     0x406cba
  406cce:	cmp    al,0xf5
  406cd0:	sahf   
  406cd1:	mov    ecx,0x97389108
  406cd6:	pop    esi
  406cd7:	cli    
  406cd8:	and    DWORD PTR [ecx*2+0x2a9fa253],edx
  406cdf:	sub    al,0xab
  406ce1:	pusha  
  406ce2:	dec    ebp
  406ce3:	loop   0x406c91
  406ce5:	push   edi
  406ce6:	sub    ebp,DWORD PTR [ebp+0x7f]
  406ce9:	and    eax,0x78144b34
  406cee:	pop    ecx
  406cef:	xchg   ebx,eax
  406cf0:	addr16 popf 
  406cf2:	in     eax,0x93
  406cf4:	mov    al,es:0x2e5720db
  406cfa:	test   DWORD PTR [ecx-0x73eb00fd],esi
  406d00:	(bad)  ds:0x2a005f64
  406d06:	adc    esp,DWORD PTR [ecx+eax*8-0xc]
  406d0a:	cld    
  406d0b:	aad    0x0
  406d0d:	add    eax,0x4116d97d
  406d12:	jmp    0x4577713e
  406d17:	cmp    al,0xe7
  406d19:	push   0x29
  406d1b:	add    BYTE PTR [esi-0xe],dl
  406d1e:	addr16 inc ecx
  406d20:	adc    al,0x46
  406d22:	mov    ds:0xdc5be914,eax
  406d27:	mov    bh,0xc1
  406d29:	cmp    dl,ch
  406d2b:	les    eax,FWORD PTR [edx]
  406d2d:	adc    esi,DWORD PTR [edi]
  406d2f:	push   cs
  406d30:	pop    ebp
  406d31:	fwait
  406d32:	mov    bl,0x6
  406d34:	sti    
  406d35:	bound  esp,QWORD PTR [ecx]
  406d37:	push   edi
  406d38:	scas   eax,DWORD PTR es:[edi]
  406d39:	sti    
  406d3a:	push   edx
  406d3b:	nop
  406d3c:	fwait
  406d3d:	cdq    
  406d3e:	enter  0xb21c,0xb
  406d42:	in     al,dx
  406d43:	hlt    
  406d44:	push   edx
  406d45:	mov    ebp,DWORD PTR es:[ecx]
  406d48:	inc    esp
  406d49:	in     al,0xc3
  406d4b:	dec    ebx
  406d4c:	sbb    BYTE PTR [ebp-0x2ebb369e],bl
  406d52:	repz loop 0x406d81
  406d55:	sti    
  406d56:	cmp    DWORD PTR fs:[ebp+0x7d],edx
  406d5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d5b:	and    ah,BYTE PTR [ebx-0x6ec9b908]
  406d61:	retf   
  406d62:	in     al,0x2b
  406d64:	inc    ebx
  406d65:	mov    esp,0xa30dee62
  406d6a:	rcr    dh,1
  406d6c:	push   cs
  406d6d:	imul   esi,DWORD PTR [eax-0x58],0xffffffd9
  406d71:	mov    edx,DWORD PTR [ecx+0x3e76ca76]
  406d77:	mov    edx,0x4601b257
  406d7c:	cmp    esi,DWORD PTR [edx]
  406d7e:	sahf   
  406d7f:	fs retf 
  406d81:	mov    ch,0xe0
  406d83:	ret    
  406d84:	jae    0x406d59
  406d86:	int    0x64
  406d88:	mov    WORD PTR [ebp+0x6a],cs
  406d8b:	jnp    0x406d5a
  406d8d:	xor    DWORD PTR [edx-0x3a200acd],edi
  406d93:	adc    al,0x44
  406d95:	xor    dh,ch
  406d97:	sbb    al,0xc9
  406d99:	lds    ebx,FWORD PTR [eax*1+0x23ac48fd]
  406da0:	jp     0x406d6f
  406da2:	dec    esp
  406da3:	mov    ebx,0xfa03c383
  406da8:	add    eax,0xc788ba7a
  406dad:	mov    DWORD PTR [edi],ebx
  406daf:	xor    al,bh
  406db1:	(bad)  
  406db2:	push   esi
  406db3:	into   
  406db4:	es mov cl,0x32
  406db7:	cmp    DWORD PTR [edx],esi
  406db9:	inc    edx
  406dba:	repnz mov ah,0xd0
  406dbd:	(bad)  [edi-0x59f0235e]
  406dc3:	mov    ch,0xfb
  406dc5:	jmp    0x4c59:0x547ddfd9
  406dcc:	lock add DWORD PTR [esp+ecx*8+0x11c5470a],ecx
  406dd4:	inc    edi
  406dd5:	addr16 push edi
  406dd7:	jb     0x406d97
  406dd9:	mov    ecx,0xb0d584f3
  406dde:	popf   
  406ddf:	mov    ch,0xf2
  406de1:	in     al,0xd3
  406de3:	adc    dh,BYTE PTR [ebx-0x4c]
  406de6:	mov    bh,ah
  406de8:	call   0x3552:0xb06251e3
  406def:	pop    es
  406df0:	pusha  
  406df1:	or     BYTE PTR [edx],0xfc
  406df4:	rol    esp,cl
  406df6:	iret   
  406df7:	xor    eax,0xa8721b57
  406dfc:	int3   
  406dfd:	pop    ss
  406dfe:	pop    ecx
  406dff:	sub    ebp,DWORD PTR [edx+0x63]
  406e02:	push   ebp
  406e03:	popa   
  406e04:	xor    eax,0x6ea75f2a
  406e09:	sahf   
  406e0a:	xchg   ebp,eax
  406e0b:	and    esp,esi
  406e0d:	leave  
  406e0e:	pusha  
  406e0f:	mov    DWORD PTR [ecx-0x67e0bf93],ebp
  406e15:	or     eax,0xcd2b58b
  406e1a:	sahf   
  406e1b:	test   DWORD PTR [esi+0x6f],edx
  406e1e:	mov    ds:0x988b83eb,eax
  406e23:	and    eax,0x28925018
  406e28:	stos   BYTE PTR es:[edi],al
  406e29:	sub    al,0xd1
  406e2b:	add    eax,0x93ea5bda
  406e30:	xor    BYTE PTR [esi],cl
  406e32:	sbb    edi,edi
  406e34:	rol    BYTE PTR [edi],0x6f
  406e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e38:	adc    al,0x53
  406e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e3b:	popf   
  406e3c:	rcl    DWORD PTR [ecx+edx*2],cl
  406e3f:	imul   esi,ebp,0xa
  406e42:	loope  0x406e06
  406e44:	mov    ch,0x1
  406e46:	enter  0x347e,0xe3
  406e4a:	les    esp,FWORD PTR [ebx-0xe301a2c]
  406e50:	enter  0x40c5,0xef
  406e54:	les    eax,FWORD PTR [esi]
  406e56:	jle    0x406e77
  406e58:	ret    0x40ee
  406e5b:	sub    DWORD PTR [eax+ebx*4],ebp
  406e5e:	fs out 0x6a,al
  406e61:	jno    0x406e7f
  406e63:	jo     0x406e2b
  406e65:	jle    0x406dee
  406e67:	stos   BYTE PTR es:[edi],al
  406e68:	sti    
  406e69:	ss sti 
  406e6b:	inc    edx
  406e6c:	cld    
  406e6d:	mov    ?,edx
  406e6f:	jb     0x406e8c
  406e71:	cmp    dl,BYTE PTR [esi+0x4cb00648]
  406e77:	sub    dl,bh
  406e79:	mov    ebx,0x77d93b71
  406e7e:	and    al,0xcf
  406e80:	mov    eax,ds:0x4a771e14
  406e85:	aas    
  406e86:	aad    0x68
  406e88:	aas    
  406e89:	pusha  
  406e8a:	outs   dx,BYTE PTR ds:[esi]
  406e8b:	xchg   edi,eax
  406e8c:	(bad)  
  406e8d:	sub    cl,BYTE PTR [eax]
  406e8f:	pop    esp
  406e90:	aaa    
  406e91:	or     DWORD PTR [eax-0x49892b02],edi
  406e97:	adc    ecx,esp
  406e99:	xchg   ebx,eax
  406e9a:	mov    esp,0xc3aa1184
  406e9f:	rol    BYTE PTR [esi],1
  406ea1:	dec    eax
  406ea2:	push   esp
  406ea3:	push   cs
  406ea4:	cmp    eax,0x4776294d
  406ea9:	pop    esp
  406eaa:	or     al,0x4
  406eac:	shl    bl,0xbc
  406eaf:	es pop esi
  406eb1:	nop
  406eb2:	or     al,0xfc
  406eb4:	lds    edi,FWORD PTR [ebx-0x4d]
  406eb7:	jle    0x406e6e
  406eb9:	out    0x2d,eax
  406ebb:	pop    esp
  406ebc:	cmp    DWORD PTR [ebp-0x49],ebx
  406ebf:	pop    ebx
  406ec0:	das    
  406ec1:	mov    WORD PTR [edi+0x5ddc1eb4],?
  406ec7:	(bad)  
  406ec8:	cmc    
  406ec9:	and    BYTE PTR [edi+0x70cb48aa],0xc9
  406ed0:	ins    BYTE PTR es:[edi],dx
  406ed1:	rcl    BYTE PTR [edx+0x86c32ac],cl
  406ed7:	outs   dx,BYTE PTR ds:[esi]
  406ed8:	cwde   
  406ed9:	add    DWORD PTR [ebx],esp
  406edb:	push   edi
  406edc:	jg     0x406ecb
  406ede:	add    BYTE PTR [esi-0x63],al
  406ee1:	xchg   ebp,eax
  406ee2:	pop    eax
  406ee3:	sub    edx,ecx
  406ee5:	mov    esi,0x7aa96694
  406eea:	jg     0x406f49
  406eec:	and    ebx,DWORD PTR ds:0x14befe22
  406ef2:	xchg   ecx,eax
  406ef3:	loopne 0x406f70
  406ef5:	add    BYTE PTR [eax+0x117e2136],cl
  406efb:	out    dx,eax
  406efc:	mov    esi,DWORD PTR [ecx-0x22]
  406eff:	mov    al,0x7a
  406f01:	inc    esi
  406f02:	rol    DWORD PTR [edx-0x39],cl
  406f05:	jo     0x406f4f
  406f07:	mov    al,0xc6
  406f09:	out    0xcc,eax
  406f0b:	mov    WORD PTR [edi],?
  406f0d:	imul   edx,DWORD PTR [ecx+0x22867f07],0x4922845
  406f17:	pop    ebx
  406f18:	nop    DWORD PTR [edx-0x234faeb3]
  406f1f:	sub    esi,esp
  406f21:	add    DWORD PTR [eax*2+0x18834db8],ecx
  406f28:	inc    ebp
  406f29:	xchg   ch,dh
  406f2b:	jae    0x406f77
  406f2d:	(bad)  
  406f2e:	xchg   ebp,eax
  406f2f:	loop   0x406ebe
  406f31:	fmul   QWORD PTR ds:0x7bb7b1d1
  406f37:	inc    ebp
  406f38:	bound  ecx,QWORD PTR [esi-0x31]
  406f3b:	pop    es
  406f3c:	or     al,0xfb
  406f3e:	or     esi,ebx
  406f40:	pop    eax
  406f41:	push   edx
  406f42:	dec    ebx
  406f43:	mov    WORD PTR [edx-0x24],fs
  406f46:	je     0x406f4e
  406f48:	push   eax
  406f49:	sbb    eax,0x355aa735
  406f4e:	push   ebp
  406f4f:	push   0x4ffb36e2
  406f54:	js     0x406ed7
  406f56:	mov    ebp,0x6b10006c
  406f5b:	xchg   ebp,eax
  406f5c:	cwde   
  406f5d:	fdiv   st,st(6)
  406f5f:	daa    
  406f60:	imul   ecx,edx,0x9a198cf1
  406f66:	cmp    dh,BYTE PTR [edi]
  406f68:	jmp    0x18bbda3
  406f6d:	or     DWORD PTR [ebp-0x4d],0x6f
  406f71:	(bad)  
  406f72:	xor    eax,0x4b4c88c6
  406f77:	out    0xcd,al
  406f79:	xor    BYTE PTR [ebx-0x48ae58be],dl
  406f7f:	fidivr WORD PTR [eax]
  406f81:	fnstenv [ecx-0x16]
  406f84:	sub    eax,DWORD PTR [esi+esi*2+0x2b6c5971]
  406f8b:	js     0x406f16
  406f8d:	loope  0x406f13
  406f8f:	jmp    0x406fd3
  406f91:	jmp    0x406f77
  406f93:	or     eax,DWORD PTR [ecx+0x287f9b8a]
  406f99:	cwde   
  406f9a:	neg    DWORD PTR [edi+0x20]
  406f9d:	cmp    cl,BYTE PTR [edx+0x6099682d]
  406fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fa4:	out    dx,al
  406fa5:	and    DWORD PTR [edx],0x63cc0741
  406fab:	cmp    ah,bl
  406fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fae:	shl    BYTE PTR [esi],0x43
  406fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fb2:	bound  esp,QWORD PTR [edx-0x7b9cd8ed]
  406fb8:	sbb    eax,0x30c6c14b
  406fbd:	out    dx,al
  406fbe:	add    DWORD PTR [eax],esi
  406fc0:	cwde   
  406fc1:	sub    al,0x22
  406fc3:	add    al,0xd3
  406fc5:	push   cs
  406fc6:	retf   
  406fc7:	lahf   
  406fc8:	test   eax,0x1e90929
  406fcd:	xor    DWORD PTR [edx],ecx
  406fcf:	aaa    
  406fd0:	in     eax,0x9b
  406fd2:	icebp  
  406fd3:	inc    esp
  406fd4:	aas    
  406fd5:	xchg   edi,ebx
  406fd7:	mov    bl,0x17
  406fd9:	cli    
  406fda:	mov    edi,0xf32b8d60
  406fdf:	or     DWORD PTR [ebx-0x5890c47a],ebp
  406fe5:	and    eax,DWORD PTR ds:0x51d64082
  406feb:	into   
  406fec:	fsub   QWORD PTR [eax+0x7a]
  406fef:	add    DWORD PTR [eax-0x2b],eax
  406ff2:	pop    ss
  406ff3:	pop    edx
  406ff4:	mov    dl,BYTE PTR [eax]
  406ff6:	dec    ebp
  406ff7:	mov    cl,0xbe
  406ff9:	jne    0x406ff3
  406ffb:	call   0x21d:0x76b513d4
  407002:	fnstcw WORD PTR [ebx-0x2e]
  407005:	push   ebp
  407006:	pushf  
  407007:	rcr    dh,cl
  407009:	ins    DWORD PTR es:[edi],dx
  40700a:	fs scas eax,DWORD PTR es:[edi]
  40700c:	sub    ebx,DWORD PTR [ebx+0x5f]
  40700f:	pop    esi
  407010:	leave  
  407011:	ret    0xc
  407014:	push   ebp
  407015:	mov    ebp,esp
  407017:	push   ecx
  407018:	or     eax,eax
  40701a:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  407021:	mov    eax,DWORD PTR [ebp+0x8]
  407024:	not    ecx
  407026:	movsx  eax,BYTE PTR [eax]
  407029:	and    DWORD PTR ds:0x42e000,0x0
  407033:	mov    edx,DWORD PTR ds:0x42e000
  407039:	inc    edx
  40703a:	mov    DWORD PTR ds:0x42e000,edx
  407040:	cmp    DWORD PTR ds:0x42e000,0x21
  407047:	jl     0x407065
  40704d:	jmp    0x407058
  407052:	call   DWORD PTR ds:0x43490b
  407058:	cmp    DWORD PTR ds:0x42e000,0x11
  40705f:	jb     0x407033
  407065:	mov    edx,0x3272e4
  40706a:	sbb    ecx,0x6b74
  407070:	sub    eax,edx
  407072:	mov    ecx,0x751089d
  407077:	xor    eax,ecx
  407079:	mov    DWORD PTR ds:0x42e014,0x2a99
  407083:	cmp    eax,0xf89c85f4
  407088:	mov    DWORD PTR ds:0x42e028,0x5d7f
  407092:	jne    0x40944c
  407098:	xor    DWORD PTR ds:0x42e014,edx
  40709e:	mov    eax,DWORD PTR [ebp+0x8]
  4070a1:	or     DWORD PTR ds:0x432004,0x42f01c
  4070ab:	push   esi
  4070ac:	mov    esi,DWORD PTR [ebp+0x8]
  4070af:	add    esi,DWORD PTR [eax+0x3c]
  4070b2:	mov    DWORD PTR [ebp+0x8],esi
  4070b5:	mov    eax,DWORD PTR [ebp-0x4]
  4070b8:	mov    esi,DWORD PTR [ebp+0x8]
  4070bb:	xor    eax,ecx
  4070bd:	add    eax,edx
  4070bf:	jmp    0x40943a
  4070c4:	mov    edi,0x8bdf5962
  4070c9:	retf   
  4070ca:	mov    ebx,0x614b0602
  4070cf:	mov    ebp,0x849a5d2f
  4070d4:	test   al,0x38
  4070d6:	jb     0x40714a
  4070d8:	adc    BYTE PTR [edi+0x72],bl
  4070db:	jb     0x40711b
  4070dd:	add    ch,BYTE PTR [ebx-0x4b]
  4070e0:	push   esp
  4070e1:	sar    edi,cl
  4070e3:	aaa    
  4070e4:	sub    BYTE PTR [eax-0x1a],ah
  4070e7:	jp     0x407136
  4070e9:	add    ch,bl
  4070eb:	sub    bh,BYTE PTR [edx]
  4070ed:	push   ebp
  4070ee:	mov    eax,ds:0xc7bfb774
  4070f3:	in     eax,0x1f
  4070f5:	lds    eax,FWORD PTR [ebx+0xfb24c02]
  4070fb:	pop    ebx
  4070fc:	mov    dh,0xdb
  4070ff:	cmp    eax,0x8bbc7b62
  407104:	dec    esi
  407105:	xchg   edx,eax
  407106:	fmul   DWORD PTR [eax+0x30]
  407109:	and    DWORD PTR [esi-0x543ddf40],0x50
  407110:	mov    eax,ds:0x3bc77263
  407115:	loop   0x407120
  407117:	adc    BYTE PTR [ebx],0x66
  40711a:	xchg   edi,eax
  40711b:	std    
  40711c:	sub    dl,0x6
  40711f:	sub    al,BYTE PTR [ebp-0x711c928e]
  407125:	out    0x2b,al
  407127:	add    al,0xce
  407129:	or     ah,cl
  40712b:	adc    ebx,esp
  40712d:	jno    0x40719a
  40712f:	fdiv   QWORD PTR [edi-0x3c5b365]
  407135:	jecxz  0x407194
  407137:	ds gs mov ebx,ecx
  40713b:	(bad)  
  40713d:	cmp    BYTE PTR [edx-0x5936c0ba],bh
  407143:	into   
  407144:	ret    0x6500
  407147:	sti    
  407148:	rcl    dl,0x91
  40714b:	or     bh,al
  40714d:	icebp  
  40714e:	ror    DWORD PTR [ebx-0x6d2018a5],0xc1
  407155:	push   0x7efe51e3
  40715a:	cld    
  40715b:	test   BYTE PTR [ecx+ebp*4-0x32fdb021],cl
  407162:	mov    al,ds:0xc08e47e5
  407167:	inc    edx
  407168:	outs   dx,BYTE PTR ds:[esi]
  407169:	addr16 xor ebx,0xffffffda
  40716d:	cwde   
  40716e:	pop    edi
  40716f:	push   esi
  407170:	push   es
  407171:	and    BYTE PTR [ebx],bl
  407173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407174:	xor    ah,BYTE PTR [ebp+0x211f9ebd]
  40717a:	xor    ch,BYTE PTR [edx+ecx*8]
  40717d:	xchg   edx,eax
  40717e:	mov    edx,0x6dcd9c7
  407183:	loope  0x407146
  407185:	adc    al,0xa2
  407187:	in     eax,0x82
  407189:	sub    BYTE PTR [ebx+0x3b3e3d9],ah
  40718f:	pop    ecx
  407190:	jle    0x4071a3
  407192:	hlt    
  407193:	cmp    edi,0xb07becc0
  407199:	sbb    DWORD PTR [edx+0x75aea246],edx
  40719f:	test   BYTE PTR [edi-0x6135798a],0x7
  4071a6:	test   eax,0xea6cd725
  4071ab:	cmp    al,0xe2
  4071ad:	jle    0x4071e7
  4071af:	sti    
  4071b0:	fwait
  4071b1:	out    dx,al
  4071b2:	xchg   ebp,eax
  4071b3:	and    eax,0x8aa4e0eb
  4071b8:	dec    edi
  4071b9:	fcomip st,st(1)
  4071bb:	mov    dh,0xa3
  4071bd:	inc    esi
  4071be:	mov    al,ds:0x32585ff7
  4071c3:	cmp    ebx,DWORD PTR [esi]
  4071c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071c6:	in     al,dx
  4071c7:	es addr16 (bad) 
  4071ca:	pop    esp
  4071cb:	xchg   BYTE PTR [ebx],ah
  4071cd:	mov    ecx,0x8cde87a9
  4071d2:	ins    BYTE PTR es:[edi],dx
  4071d3:	jb     0x4071c3
  4071d5:	jae    0x407214
  4071d7:	std    
  4071d8:	cmp    BYTE PTR [ecx],dh
  4071da:	ds dec eax
  4071dc:	(bad)  
  4071dd:	ss jmp 0x40725b
  4071e0:	loop   0x407214
  4071e2:	inc    ecx
  4071e3:	mov    ecx,0xdb7ac67d
  4071e8:	shr    DWORD PTR [edx],cl
  4071ea:	ret    
  4071eb:	(bad)  
  4071ec:	jg     0x407184
  4071ee:	test   esp,eax
  4071f0:	xlat   BYTE PTR ds:[ebx]
  4071f1:	dec    edx
  4071f2:	jl     0x407272
  4071f4:	pop    esi
  4071f5:	mov    dl,0xea
  4071f7:	mov    BYTE PTR [ecx+0x4c],al
  4071fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071fb:	cmp    ebp,DWORD PTR [ecx+0x69d4665f]
  407201:	mov    dh,0xf
  407203:	sub    eax,DWORD PTR [esi+0x20]
  407206:	iret   
  407207:	rcl    ebp,0x7
  40720a:	lock ficomp WORD PTR [ebx]
  40720d:	outs   dx,DWORD PTR ds:[esi]
  40720e:	cmp    ch,0xd2
  407211:	mov    dl,0x89
  407213:	std    
  407214:	dec    esi
  407215:	sub    BYTE PTR [ebx-0x14a13a80],cl
  40721b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40721c:	xchg   ecx,eax
  40721d:	add    dh,ch
  40721f:	retf   0xf38f
  407222:	jno    0x4071d1
  407224:	add    esi,ebx
  407226:	adc    ebx,DWORD PTR [si+0x78b3]
  40722b:	(bad)  
  40722d:	push   edx
  40722e:	popf   
  40722f:	ins    BYTE PTR es:[edi],dx
  407230:	rcr    DWORD PTR [eax],1
  407232:	sub    al,0xaf
  407234:	sub    edx,DWORD PTR [ebx+0x72]
  407237:	sub    edx,DWORD PTR [edx+eax*4]
  40723a:	push   ebp
  40723b:	mov    fs,ebp
  40723d:	and    eax,0x891904f9
  407242:	fucomip st,st(2)
  407244:	icebp  
  407245:	mov    cs,esp
  407247:	adc    edi,DWORD PTR [ebp-0x7d]
  40724a:	shr    BYTE PTR [edx],1
  40724c:	pushf  
  40724d:	sbb    ch,BYTE PTR [esi]
  40724f:	test   edx,edx
  407251:	or     DWORD PTR [eax],ebx
  407253:	mov    DWORD PTR [ecx-0x1c],edx
  407256:	lea    eax,[ebp-0x1e]
  407259:	cmp    eax,0xc758079a
  40725e:	stos   BYTE PTR es:[edi],al
  40725f:	dec    ecx
  407260:	out    0xc6,al
  407262:	inc    eax
  407263:	or     BYTE PTR [ebp+0x2b],0xdb
  407267:	arpl   dx,ax
  407269:	mov    edx,0xb3b8af91
  40726e:	stos   BYTE PTR es:[edi],al
  40726f:	adc    DWORD PTR [eax+0x1],0x1171f531
  407276:	in     al,0x9f
  407278:	retf   0x6c40
  40727b:	mov    ch,dl
  40727d:	shr    BYTE PTR ds:0x9c7a4f59,0xc7
  407284:	cwde   
  407285:	cld    
  407286:	dec    ecx
  407287:	jbe    0x40721f
  407289:	rcr    dl,1
  40728b:	xor    DWORD PTR [esi-0x269e9782],eax
  407291:	pop    edx
  407292:	adc    al,0x14
  407294:	mov    bh,0xa7
  407296:	mov    BYTE PTR [edi-0x66],al
  407299:	lods   al,BYTE PTR ds:[esi]
  40729a:	xor    ch,BYTE PTR [ecx-0x29]
  40729d:	xchg   ebx,eax
  40729e:	sbb    al,0x26
  4072a0:	ins    DWORD PTR es:[edi],dx
  4072a1:	pop    ebp
  4072a2:	repnz mov eax,0x4b01d9ea
  4072a8:	ret    0x5fdb
  4072ab:	fst    QWORD PTR [edx-0x2]
  4072ae:	pminub mm2,mm7
  4072b1:	loopne 0x40724e
  4072b3:	or     al,BYTE PTR [ebx+0x34]
  4072b6:	and    ch,cl
  4072b8:	or     esp,ecx
  4072ba:	gs popa 
  4072bc:	pop    ecx
  4072bd:	or     BYTE PTR [eax-0x7c],al
  4072c0:	(bad)  
  4072c1:	jnp    0x407313
  4072c3:	push   ss
  4072c4:	jno    0x4072ef
  4072c6:	jbe    0x4072d3
  4072c8:	mov    dl,0xf6
  4072ca:	scas   al,BYTE PTR es:[edi]
  4072cb:	jno    0x407321
  4072cd:	cmp    BYTE PTR [esi],ch
  4072cf:	mov    dl,0x6f
  4072d1:	scas   al,BYTE PTR es:[edi]
  4072d2:	or     BYTE PTR [ebx+edx*1+0x2f7460ab],dl
  4072d9:	adc    DWORD PTR [edi-0x4d],edi
  4072dc:	(bad)  
  4072dd:	cmp    al,0xf0
  4072df:	inc    edi
  4072e0:	add    BYTE PTR [ecx],0xd5
  4072e3:	ss popf 
  4072e5:	aas    
  4072e6:	or     al,0xff
  4072e8:	ss test al,dl
  4072eb:	arpl   WORD PTR [esi],si
  4072ed:	dec    ebp
  4072ee:	jp     0x407294
  4072f0:	outs   dx,BYTE PTR ds:[esi]
  4072f1:	adc    al,BYTE PTR [ebx+0x78b698ff]
  4072f7:	rcl    BYTE PTR [ecx-0x27b9064f],cl
  4072fd:	mov    BYTE PTR [edx-0x46],ch
  407300:	icebp  
  407301:	mov    esp,0x43bb6d82
  407306:	pop    eax
  407307:	out    dx,eax
  407308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407309:	test   BYTE PTR [ecx+ebx*2-0x254dac94],cl
  407310:	call   0x1663:0x676fc5e3
  407317:	shl    BYTE PTR [edx-0x673a1545],0x62
  40731e:	jp     0x40732e
  407320:	in     eax,dx
  407321:	inc    edi
  407322:	daa    
  407323:	push   ds
  407324:	repnz cmp BYTE PTR [edi],0x1e
  407328:	mov    ch,0xda
  40732a:	addr16 call 0xe5cd817a
  407330:	xor    eax,0x19a3dab1
  407335:	pushf  
  407336:	pop    eax
  407337:	out    0x3a,eax
  407339:	sub    BYTE PTR [ebx-0x2d2dd7a4],ah
  40733f:	(bad)  
  407340:	mov    DWORD PTR [eax+0x779e9d4e],esp
  407346:	in     al,0x1a
  407348:	push   eax
  407349:	cdq    
  40734a:	jbe    0x407379
  40734c:	xchg   BYTE PTR ss:[ebx+0x286982df],cl
  407353:	cmp    DWORD PTR [esi+0x17],ebx
  407356:	dec    BYTE PTR [eax-0x2]
  407359:	fistp  QWORD PTR [eax-0x52f784b3]
  40735f:	mov    edi,ss
  407361:	test   DWORD PTR [ebp-0x27],ebx
  407364:	xchg   edx,eax
  407365:	(bad)  [esi-0xe]
  407368:	sbb    eax,0x8672ce82
  40736d:	cmc    
  40736e:	cmc    
  40736f:	shl    ebp,1
  407371:	scas   eax,DWORD PTR es:[edi]
  407372:	pop    esi
  407373:	jge    0x4073cf
  407375:	or     DWORD PTR [edx-0x6990092d],ecx
  40737b:	lods   eax,DWORD PTR ds:[esi]
  40737c:	add    bh,BYTE PTR [ebx]
  40737e:	icebp  
  40737f:	test   eax,0xb85ec6d1
  407384:	xchg   edx,eax
  407385:	sub    BYTE PTR [ecx-0x472f5db7],bl
  40738b:	jmp    0x5b2d:0x6ccb72e1
  407392:	sbb    BYTE PTR [bp+si],dh
  407395:	jmp    0x1d02ea6a
  40739a:	xchg   edi,eax
  40739b:	cdq    
  40739c:	cmc    
  40739d:	test   edx,ebp
  40739f:	push   edi
  4073a0:	mov    bh,0x2a
  4073a2:	fcom   DWORD PTR [ebx+0x322e316f]
  4073a8:	push   ebx
  4073a9:	xor    ebp,DWORD PTR [ecx]
  4073ab:	mov    ebx,DWORD PTR [edi]
  4073ad:	std    
  4073ae:	xor    BYTE PTR [edx],0xe5
  4073b1:	bound  eax,QWORD PTR [edi+0x54]
  4073b4:	sub    eax,0x75148879
  4073b9:	popa   
  4073ba:	pop    eax
  4073bb:	loopne 0x40733d
  4073bd:	mov    al,0x7f
  4073bf:	ret    0xf040
  4073c2:	inc    edx
  4073c3:	xchg   ebp,eax
  4073c4:	jo     0x4073db
  4073c6:	dec    edx
  4073c7:	xchg   DWORD PTR [edx+0x2a],eax
  4073ca:	jno    0x407424
  4073cc:	mov    ds,WORD PTR [edx]
  4073ce:	int3   
  4073cf:	ret    0xe019
  4073d2:	sbb    DWORD PTR [esi],ebx
  4073d4:	leave  
  4073d5:	int    0xc5
  4073d7:	(bad)  
  4073d8:	nop
  4073d9:	pusha  
  4073da:	fst    QWORD PTR [edx-0xf]
  4073dd:	loope  0x4073f1
  4073df:	sub    al,ah
  4073e1:	push   0x76
  4073e3:	and    bl,BYTE PTR [eax+0x5d9e85df]
  4073e9:	mov    ds:0xc81d4ed0,eax
  4073ee:	(bad)  
  4073ef:	retf   
  4073f0:	mov    bh,0xdf
  4073f2:	push   eax
  4073f3:	mov    al,ds:0x82c506fc
  4073f8:	mov    ah,0x1a
  4073fa:	or     DWORD PTR [ebx],eax
  4073fc:	mov    ds:0x3c17f47b,eax
  407401:	das    
  407402:	jbe    0x40742b
  407404:	icebp  
  407405:	inc    ebp
  407406:	pop    ebp
  407407:	div    DWORD PTR [edx-0x638f30a5]
  40740d:	push   ds
  40740e:	xchg   esp,eax
  40740f:	shl    esi,cl
  407411:	push   esi
  407412:	mov    edx,0xdc4d0fca
  407417:	aad    0x69
  407419:	sti    
  40741a:	push   esi
  40741b:	loopne 0x407496
  40741d:	ror    DWORD PTR [ebx+0x32],1
  407420:	sbb    ah,BYTE PTR [ecx]
  407422:	jge    0x4073b7
  407424:	mov    al,ds:0x5b54155e
  407429:	xchg   ebp,eax
  40742a:	and    DWORD PTR [eax-0x763a7747],esp
  407430:	shl    BYTE PTR [edi],1
  407432:	(bad)  
  407433:	jbe    0x407463
  407435:	cdq    
  407436:	pop    ebp
  407437:	cli    
  407438:	push   DWORD PTR [edi-0x36]
  40743b:	jmp    0x407421
  40743d:	repz xor eax,0xe14d60e7
  407443:	sbb    eax,0xffffffe7
  407446:	pop    ebp
  407447:	shr    BYTE PTR [ebp-0x4b],0x77
  40744b:	vmwrite ebp,DWORD PTR [edi+ebp*4]
  40744f:	adc    eax,0x34c11ca1
  407454:	push   ebp
  407455:	push   es
  407456:	in     eax,dx
  407457:	mov    edi,0x51f4f9cd
  40745c:	lods   eax,DWORD PTR ds:[esi]
  40745d:	xor    BYTE PTR [edi+0x64e15b64],ah
  407463:	repz hlt 
  407465:	test   BYTE PTR [ebx+0x3bb20d42],ah
  40746b:	sub    ecx,ebx
  40746d:	ja     0x407440
  40746f:	cmp    ecx,DWORD PTR [ebp-0x5]
  407472:	fist   WORD PTR [esi+esi*4-0x7f]
  407476:	repz popa 
  407478:	icebp  
  407479:	jae    0x4074b1
  40747b:	stc    
  40747c:	add    al,BYTE PTR cs:[esi-0x2]
  407480:	or     esi,ebp
  407482:	jp     0x407450
  407484:	fcomp  QWORD PTR [edx+edi*8+0x1d]
  407488:	mov    ch,0x4b
  40748a:	inc    ecx
  40748b:	jle    0x40747c
  40748d:	xchg   ebp,eax
  40748e:	add    DWORD PTR [edx+0xb0c0823],ebx
  407494:	xor    al,al
  407496:	cld    
  407497:	les    ebp,FWORD PTR [ecx-0x734ed532]
  40749d:	(bad)  
  40749e:	push   0x8d1025a2
  4074a3:	sub    eax,0x6fc6ebf3
  4074a8:	data16 mov bl,0xf9
  4074ab:	cmp    dh,BYTE PTR [ecx+0x45]
  4074ae:	nop
  4074af:	mov    ebx,ecx
  4074b1:	adc    BYTE PTR [edx-0x39b66223],dl
  4074b7:	mov    dl,0xa9
  4074b9:	push   ds
  4074ba:	lods   eax,DWORD PTR ds:[si]
  4074bc:	sahf   
  4074bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074be:	mov    DWORD PTR [eax+0x5c],ebp
  4074c1:	and    eax,0x784ee3ee
  4074c6:	mov    al,0xd
  4074c8:	daa    
  4074c9:	or     DWORD PTR [edx+0x30],ebx
  4074cc:	mov    edi,0x9735efed
  4074d1:	enter  0x8e4e,0xb
  4074d5:	pusha  
  4074d6:	popa   
  4074d7:	je     0x4074fc
  4074d9:	popa   
  4074da:	jbe    0x407513
  4074dc:	xchg   esp,eax
  4074dd:	xchg   esi,eax
  4074de:	push   cs
  4074df:	push   0x43
  4074e1:	fs xchg esp,eax
  4074e3:	ret    0xe69
  4074e6:	and    al,0x49
  4074e8:	sbb    DWORD PTR [eax-0x46],0x8fd4fe19
  4074ef:	fcomp  DWORD PTR [ecx-0x1b]
  4074f2:	cli    
  4074f3:	fstp   st(2)
  4074f5:	and    eax,esi
  4074f7:	aam    0x64
  4074f9:	test   DWORD PTR [edx-0x7026bdfa],0x563f4eee
  407503:	jno    0xf00ea830
  407509:	in     eax,0x17
  40750b:	inc    esp
  40750c:	in     al,0x1
  40750e:	fcmovu st,st(6)
  407510:	xchg   edi,eax
  407511:	arpl   WORD PTR [ebp-0x49],cx
  407514:	in     al,0xb8
  407516:	(bad)  
  407517:	iret   
  407518:	sahf   
  407519:	fmul   st(0),st
  40751b:	mov    cl,0xcb
  40751d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40751e:	int    0xe5
  407520:	out    0x4d,al
  407522:	and    bh,0x89
  407525:	jno    0x407551
  407527:	sub    bh,BYTE PTR [esi-0x657dd6aa]
  40752d:	xor    bl,0x1
  407530:	mov    bl,0x31
  407532:	xchg   ebp,eax
  407533:	(bad)  
  407534:	push   0xc712faaf
  407539:	sar    dl,cl
  40753b:	cmp    ebp,edi
  40753d:	adc    al,0x20
  40753f:	js     0x40752f
  407541:	or     ecx,ebx
  407543:	add    eax,0xe72a3365
  407548:	or     DWORD PTR [ebp-0x6267566],ebp
  40754e:	jno    0x40758f
  407550:	push   ebp
  407551:	fdivr  st(4),st
  407553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407554:	pop    edx
  407555:	mov    bh,0xf3
  407557:	fst    QWORD PTR ss:[edi]
  40755a:	lock mov eax,ds:0xf9e47f9
  407560:	xchg   BYTE PTR ds:0x446234f,cl
  407566:	mov    es,edi
  407568:	leave  
  407569:	pop    ebp
  40756a:	js     0x4075a4
  40756c:	xchg   ecx,eax
  40756d:	dec    esi
  40756e:	xchg   ebp,eax
  40756f:	push   cs
  407570:	aaa    
  407571:	xor    eax,0x736f7238
  407576:	jmp    0x27a37e0e
  40757b:	retf   
  40757c:	jae    0x40759d
  40757e:	xchg   edi,eax
  40757f:	add    eax,0x43bf5b0d
  407584:	adc    BYTE PTR ds:0xe849423c,al
  40758a:	push   ss
  40758b:	mov    ?,WORD PTR [edi]
  40758d:	mov    cl,0x4d
  40758f:	jl     0x407542
  407591:	in     eax,0x82
  407593:	cdq    
  407594:	daa    
  407595:	xchg   esp,eax
  407596:	dec    edi
  407597:	push   ds
  407598:	mov    bl,0xcf
  40759a:	dec    ecx
  40759b:	stos   DWORD PTR es:[edi],eax
  40759c:	add    bl,BYTE PTR [ecx+0x8]
  40759f:	popf   
  4075a0:	in     al,0xcf
  4075a2:	sar    BYTE PTR [ebx+0x69ca18b4],cl
  4075a8:	(bad)  
  4075a9:	fst    DWORD PTR [esi+0x771cbccf]
  4075af:	mov    ss,WORD PTR [ebx]
  4075b1:	fsub   DWORD PTR [edx]
  4075b3:	and    DWORD PTR [eax+0x77],0xffffff94
  4075b7:	inc    edx
  4075b8:	in     al,dx
  4075b9:	ins    DWORD PTR es:[edi],dx
  4075ba:	call   0x6389:0xf6d8c721
  4075c1:	or     eax,0x73761c3a
  4075c6:	rcr    DWORD PTR [edi-0x33],0x17
  4075ca:	fmul   DWORD PTR [ebx]
  4075cc:	fistp  WORD PTR [ecx+0x5dba2055]
  4075d2:	cmp    eax,0xf1010c09
  4075d7:	cmp    eax,0xdebc1c3f
  4075dc:	and    DWORD PTR [esi],esi
  4075de:	mov    cl,0x9b
  4075e0:	push   edi
  4075e1:	xchg   esi,eax
  4075e2:	clc    
  4075e3:	sbb    BYTE PTR [esi],bl
  4075e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075e6:	std    
  4075e7:	mov    ds:0x9662bc,eax
  4075ec:	sti    
  4075ed:	nop
  4075ee:	mov    ch,0xcf
  4075f0:	cwde   
  4075f1:	jmp    0xab9c7
  4075f6:	neg    ch
  4075f8:	mov    eax,0x515483b3
  4075fd:	mov    esi,ebp
  4075ff:	dec    ebx
  407600:	pushf  
  407601:	xchg   ecx,eax
  407602:	lock adc BYTE PTR [ebp+0x68],ch
  407606:	(bad)  
  407607:	call   0x67aa5496
  40760c:	daa    
  40760d:	test   DWORD PTR [ebp+0x7656ead9],edi
  407613:	jne    0x407645
  407615:	pop    esp
  407616:	fcmove st,st(2)
  407618:	cmp    DWORD PTR [ebx],ecx
  40761a:	fnstenv [ecx+0x6a]
  40761d:	xchg   ebx,eax
  40761e:	leave  
  40761f:	and    eax,0xf0f9da3d
  407624:	cmp    BYTE PTR [eax+0x6b],al
  407627:	repnz addr16 out dx,al
  40762a:	sub    al,0x6e
  40762c:	add    al,BYTE PTR [edx-0x11a6c57a]
  407632:	ret    
  407633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407635:	aam    0xf0
  407637:	(bad)  
  407638:	daa    
  407639:	stc    
  40763a:	mul    BYTE PTR [ebx+0x16a37e6a]
  407640:	test   eax,0xfb67a5cd
  407645:	sbb    dh,BYTE PTR ds:0xc45e4a06
  40764b:	jb     0x4076b6
  40764d:	inc    edi
  40764e:	jno    0x407603
  407650:	out    0x9,eax
  407652:	pop    ebx
  407653:	rol    DWORD PTR [ecx+0x46191838],cl
  407659:	addr16 jmp 0x7e9e:0x88ad12f0
  407661:	adc    eax,0x582b2125
  407666:	aad    0x6b
  407668:	syscall 
  40766a:	ret    
  40766b:	ds stos BYTE PTR es:[edi],al
  40766d:	mov    edx,0x5089fe69
  407672:	and    al,0x63
  407674:	(bad)  
  407675:	retf   0xc192
  407678:	mov    edx,0xc4ab2634
  40767d:	jo     0x4076f5
  40767f:	fwait
  407680:	jle    0x40763e
  407682:	and    ebp,DWORD PTR [ecx+esi*8+0x10c25d3]
  407689:	daa    
  40768a:	fisubr DWORD PTR [edx]
  40768c:	cmp    al,0x3e
  40768e:	xchg   edi,eax
  40768f:	adc    BYTE PTR gs:[ebp+0x1ead39a7],bh
  407696:	popa   
  407697:	jge    0x40769e
  407699:	mov    ebp,0xf9f27713
  40769e:	repnz cdq 
  4076a0:	shl    BYTE PTR [ebx],0xda
  4076a3:	jb     0x40768b
  4076a5:	cmp    ah,BYTE PTR [esp+edi*8]
  4076a8:	inc    ebp
  4076a9:	test   DWORD PTR [ebx+0x5b],ebp
  4076ac:	cmp    edi,DWORD PTR [ecx+0xe]
  4076af:	pop    edx
  4076b0:	jne    0x407650
  4076b2:	inc    ebp
  4076b3:	pop    ss
  4076b4:	dec    esi
  4076b5:	jl     0x407687
  4076b7:	mov    DWORD PTR [eax],edi
  4076b9:	mov    DWORD PTR [ebp+0x432d83dc],edx
  4076bf:	mov    edx,0xe0fb1bfd
  4076c4:	inc    edi
  4076c5:	mov    ch,0x75
  4076c7:	xchg   esp,eax
  4076c8:	xor    al,0x7d
  4076ca:	in     eax,dx
  4076cb:	dec    eax
  4076cc:	imul   eax,DWORD PTR [ecx-0x2a],0x6
  4076d0:	and    al,0xdd
  4076d2:	jo     0x4076c4
  4076d4:	sbb    eax,0xc48e5320
  4076d9:	ror    DWORD PTR [ecx+0x42967856],1
  4076df:	mov    al,ds:0x82c30889
  4076e4:	inc    eax
  4076e5:	pop    ebx
  4076e6:	push   esp
  4076e7:	not    DWORD PTR [edx]
  4076e9:	rep lods al,BYTE PTR ds:[esi]
  4076eb:	rcl    DWORD PTR [ebp+0x5ffa0f00],cl
  4076f1:	fwait
  4076f2:	dec    eax
  4076f3:	jo     0x4076d7
  4076f5:	retf   
  4076f6:	rcl    DWORD PTR [ecx-0x5f],cl
  4076f9:	setp   BYTE PTR [ecx-0x517e3c46]
  407700:	(bad)  
  407701:	dec    edi
  407702:	mov    edi,0x83aa29e0
  407707:	(bad)  
  407708:	loop   0x40776b
  40770a:	adc    edx,DWORD PTR [ecx-0x3b]
  40770d:	xchg   ecx,eax
  40770e:	inc    esi
  40770f:	mov    ds:0x9d2fc233,eax
  407714:	jecxz  0x4076a9
  407716:	(bad)  
  407717:	cmp    eax,0x9b717184
  40771c:	arpl   WORD PTR [edx+0x7c],si
  40771f:	xor    DWORD PTR [eax+0xa],edi
  407722:	pop    es
  407723:	sbb    al,0x54
  407725:	mov    edx,0x55ffba98
  40772a:	retf   
  40772b:	aas    
  40772c:	pushf  
  40772d:	(bad)  
  40772e:	pushf  
  40772f:	test   eax,0x81ac8e9f
  407734:	ins    BYTE PTR es:[edi],dx
  407735:	xor    edx,DWORD PTR [ebp-0x58]
  407738:	pop    esp
  407739:	clc    
  40773a:	xchg   ecx,eax
  40773b:	lea    ebx,[edi]
  40773d:	cld    
  40773e:	sub    al,0x7f
  407740:	aas    
  407741:	pop    ss
  407742:	add    esi,DWORD PTR [ebx]
  407744:	loope  0x407739
  407746:	sbb    al,0x9f
  407748:	push   eax
  407749:	dec    esi
  40774a:	aad    0x41
  40774c:	sub    al,0xa9
  40774e:	shl    BYTE PTR [ecx+0x71],cl
  407751:	lods   al,BYTE PTR ds:[esi]
  407752:	aaa    
  407753:	xor    eax,DWORD PTR [ebp+0x20]
  407756:	out    dx,al
  407757:	inc    ebp
  407758:	mov    dl,0xd9
  40775a:	or     eax,0x409ba6b0
  40775f:	(bad)  
  407760:	xor    BYTE PTR [ebx],al
  407762:	outs   dx,DWORD PTR ds:[esi]
  407763:	mov    ds:0xad896518,eax
  407768:	jmp    0x8a4:0x5c49843c
  40776f:	inc    edi
  407770:	stos   DWORD PTR es:[edi],eax
  407771:	mov    eax,0x3d6cbc85
  407776:	or     al,0x46
  407778:	in     al,0xf0
  40777a:	dec    ebx
  40777b:	jmp    0xccda:0xa29d73a5
  407782:	pop    ebp
  407783:	jo     0x4077e1
  407785:	xchg   bh,dh
  407787:	cmp    bh,BYTE PTR [esi+edx*8+0x777acd8f]
  40778e:	mov    BYTE PTR [edi-0x26],dh
  407791:	div    dh
  407793:	inc    esp
  407794:	mov    ebp,0x23bd7017
  407799:	call   0x98f5:0x3027643b
  4077a0:	push   ecx
  4077a1:	rcl    BYTE PTR [ebx+0x45],0xbb
  4077a5:	or     DWORD PTR [edi-0x7],eax
  4077a8:	(bad)  
  4077a9:	jmp    0x4077ee
  4077ab:	mov    DWORD PTR [ebp+0x3515abd4],eax
  4077b1:	cwde   
  4077b2:	outs   dx,BYTE PTR ds:[esi]
  4077b3:	mov    dl,0x17
  4077b5:	mov    edx,fs
  4077b7:	outs   dx,DWORD PTR ds:[esi]
  4077b8:	dec    edx
  4077b9:	pop    ss
  4077ba:	push   edx
  4077bb:	dec    esi
  4077bc:	sub    BYTE PTR [edi-0x12],ch
  4077bf:	popa   
  4077c0:	mov    esi,0x32f406c
  4077c5:	mov    ecx,0x6b0dad5d
  4077ca:	jmp    0x4077e2
  4077cc:	and    ax,si
  4077cf:	ss mov ecx,0x3d345e17
  4077d5:	adc    dh,ch
  4077d7:	sti    
  4077d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077d9:	adc    BYTE PTR ds:0x45b2d059,ah
  4077df:	loopne 0x40782e
  4077e1:	xor    dl,ah
  4077e3:	cmp    al,0x3c
  4077e5:	mov    ebx,0xc27294be
  4077ea:	retf   0x5956
  4077ed:	sub    DWORD PTR [esi],ebx
  4077ef:	imul   ebp,DWORD PTR [edi+ebx*4-0x23924f5f],0x4e
  4077f7:	loop   0x40782f
  4077f9:	lock mov ebx,0xa3590d9d
  4077ff:	jmp    0x7c:0x15dfed20
  407806:	outs   dx,DWORD PTR ds:[esi]
  407807:	shl    DWORD PTR [edi-0x1c197639],1
  40780d:	mov    ebx,0xfbc6b3d6
  407812:	int3   
  407813:	adc    eax,0x60275db2
  407818:	sbb    al,0xae
  40781a:	push   esp
  40781b:	icebp  
  40781c:	sbb    al,0x1e
  40781e:	inc    eax
  40781f:	inc    esp
  407820:	push   ds
  407821:	jge    0x407800
  407823:	je     0x40785b
  407825:	cmp    DWORD PTR [ebx+ebp*2-0x27767d22],esi
  40782c:	or     BYTE PTR [esi],ch
  40782e:	ret    
  40782f:	mov    ch,0x68
  407831:	push   edi
  407832:	rcl    dh,1
  407834:	xor    cl,BYTE PTR [esi+0x4271fb3b]
  40783a:	addr16 push 0xffffffa7
  40783d:	push   edi
  40783e:	jecxz  0x40782c
  407840:	mov    edx,0x821e5633
  407845:	cmp    dl,ch
  407847:	icebp  
  407848:	aaa    
  407849:	sbb    BYTE PTR [ecx+0x3ce0d192],al
  40784f:	in     eax,0xf4
  407851:	adc    dh,BYTE PTR [eax]
  407853:	and    eax,0x78f94eb1
  407858:	retf   
  407859:	gs stos DWORD PTR es:[edi],eax
  40785b:	lods   eax,DWORD PTR ds:[esi]
  40785c:	loope  0x407843
  40785e:	dec    esp
  40785f:	int    0x4a
  407861:	daa    
  407862:	inc    edi
  407863:	dec    ebx
  407864:	cdq    
  407865:	push   0x3e
  407867:	lea    ecx,[edx]
  407869:	xchg   edx,ecx
  40786b:	fsub   QWORD PTR [edx+0x47]
  40786e:	jmp    0xa59e:0xa710ae85
  407875:	stos   DWORD PTR es:[edi],eax
  407876:	int    0x6e
  407878:	out    0xeb,eax
  40787a:	mov    eax,0x8bfb39c4
  40787f:	mov    bh,0xf5
  407881:	jg     0x407895
  407883:	push   ss
  407884:	xor    bh,BYTE PTR [ebx]
  407886:	push   esp
  407887:	ror    DWORD PTR [ebp-0x731c4efb],0x9a
  40788e:	pop    ebx
  40788f:	mov    dl,0x6c
  407891:	sbb    al,0x11
  407893:	shl    BYTE PTR [eax+edx*1+0x1df5085b],0x50
  40789b:	rcl    DWORD PTR [si],1
  40789e:	mov    esi,0x338a3afd
  4078a3:	fsubr  QWORD PTR [ebx-0x70]
  4078a6:	test   al,0xb2
  4078a8:	xor    DWORD PTR [eax-0x5247d7c3],edx
  4078ae:	sub    eax,0xf049591d
  4078b3:	retf   0xf63
  4078b6:	into   
  4078b7:	cmp    eax,0x8accd299
  4078bc:	data16 jecxz 0x407888
  4078bf:	ror    DWORD PTR [esi+0x3d],1
  4078c2:	push   ss
  4078c3:	jmp    0x4078ab
  4078c5:	cmp    al,0xc9
  4078c7:	cwde   
  4078c8:	out    dx,eax
  4078c9:	shl    DWORD PTR [esi+0x77],1
  4078cc:	fst    QWORD PTR [esi+0x471171ed]
  4078d2:	mov    dh,BYTE PTR [ebp-0x36]
  4078d5:	jns    0x40786f
  4078d7:	push   ss
  4078d8:	outs   dx,BYTE PTR ds:[esi]
  4078d9:	or     ch,BYTE PTR [ebp-0x62]
  4078dc:	dec    edx
  4078dd:	dec    ecx
  4078de:	dec    esi
  4078df:	pop    esi
  4078e0:	fcmovb st,st(5)
  4078e2:	nop
  4078e3:	sbb    esi,DWORD PTR [edx]
  4078e5:	ja     0x4078c6
  4078e7:	lock lds ebp,FWORD PTR [esi]
  4078ea:	hlt    
  4078eb:	mov    esp,0x7859eb9e
  4078f0:	jae    0x4078a0
  4078f2:	pop    esp
  4078f3:	mov    DWORD PTR [esi-0xf],edx
  4078f6:	shl    BYTE PTR [esi-0x68],0xa1
  4078fa:	test   DWORD PTR [edx-0x61],eax
  4078fd:	cli    
  4078fe:	inc    esi
  4078ff:	mov    ah,0x54
  407901:	xor    DWORD PTR [esi+0x59e2627d],edi
  407907:	jo     0x407982
  407909:	xchg   edx,eax
  40790a:	cmp    edx,edx
  40790c:	imul   al
  40790e:	jne    0x4078ef
  407910:	add    ebx,DWORD PTR [eax]
  407912:	nop
  407913:	jmp    0x7ba3d756
  407918:	and    BYTE PTR [edi+0x5a8e87b],dl
  40791e:	dec    esp
  40791f:	das    
  407920:	pop    edx
  407921:	lea    esi,[ecx-0x3ce33bdd]
  407927:	pushf  
  407928:	mul    DWORD PTR [esi+0x4e]
  40792b:	fsub   QWORD PTR [edi+ecx*1-0x6b]
  40792f:	fwait
  407930:	inc    esp
  407931:	fidivr WORD PTR [esp+edi*4]
  407934:	int    0x59
  407936:	mov    edi,0xa12bd801
  40793b:	mul    DWORD PTR [edx+0x29680e04]
  407941:	sbb    DWORD PTR [edi],ebx
  407943:	popf   
  407944:	inc    edx
  407945:	jns    0x40792f
  407947:	jle    0x40790e
  407949:	xor    ebp,ebx
  40794b:	shl    al,1
  40794d:	xor    ecx,DWORD PTR [esi-0x73984d08]
  407953:	pop    ebp
  407954:	mov    edx,0xac2d39ae
  407959:	jbe    0x4078e8
  40795b:	mov    esi,DWORD PTR [ebx]
  40795d:	(bad)  
  40795f:	inc    esp
  407960:	out    dx,al
  407961:	nop
  407962:	xchg   ebx,eax
  407963:	call   0x143d:0x6fc9eb73
  40796a:	call   0x348e:0xd27754ce
  407971:	not    BYTE PTR [esi-0x4b6e6e47]
  407977:	jo     0x40796b
  407979:	mov    bh,0x57
  40797b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40797c:	xchg   ecx,eax
  40797d:	xor    BYTE PTR [ebx-0x33],0xc3
  407981:	(bad)  
  407982:	int3   
  407983:	xor    BYTE PTR [ebp-0x43],cl
  407986:	retf   0xcb5
  407989:	scas   eax,DWORD PTR es:[edi]
  40798a:	leave  
  40798b:	and    al,0xa2
  40798d:	ja     0x4079dd
  40798f:	sbb    eax,0xc3f5c2ff
  407994:	xor    BYTE PTR [edx],al
  407996:	sbb    dh,BYTE PTR [esp+ebp*1]
  407999:	add    esp,DWORD PTR gs:[ebx]
  40799c:	pop    eax
  40799d:	push   eax
  40799e:	test   al,0xfa
  4079a0:	dec    eax
  4079a1:	fadd   DWORD PTR [eax+0x450bd742]
  4079a7:	jnp    0x407968
  4079a9:	mov    edi,esi
  4079ab:	clc    
  4079ac:	fnstcw WORD PTR [eax-0x20]
  4079af:	lock mov ebx,0x5665ca6d
  4079b5:	retf   
  4079b6:	xchg   ecx,eax
  4079b7:	mov    edx,0x484af87a
  4079bc:	mov    ebx,0x4ce69c05
  4079c1:	repz cld 
  4079c3:	sti    
  4079c4:	pop    ss
  4079c5:	jmp    0xc00a:0x13174fa
  4079cc:	out    dx,al
  4079cd:	mov    dh,0x4f
  4079cf:	adc    BYTE PTR [esi+0x40ba7c3],bl
  4079d5:	mov    edx,0xd1b8105f
  4079da:	dec    eax
  4079db:	jno    0x4079b7
  4079dd:	fldcw  WORD PTR [eax-0x46760e07]
  4079e3:	pop    esi
  4079e4:	lock jp 0x407a1e
  4079e7:	or     DWORD PTR ds:0x2af7d352,ebx
  4079ed:	add    BYTE PTR cs:[edx],0x48
  4079f1:	lahf   
  4079f2:	ror    bh,1
  4079f4:	je     0x407a54
  4079f6:	push   ecx
  4079f7:	push   ebp
  4079f8:	or     eax,0x9bad4498
  4079fd:	cmp    BYTE PTR [esi-0x60f08186],ah
  407a03:	mov    cl,0x54
  407a05:	xor    dl,BYTE PTR [edx-0x9ee770a]
  407a0b:	xchg   esi,eax
  407a0c:	ins    BYTE PTR es:[edi],dx
  407a0d:	mov    ebx,0x8a224068
  407a12:	repnz stos DWORD PTR es:[edi],eax
  407a14:	mov    eax,0xfe84e05a
  407a19:	lahf   
  407a1a:	sbb    eax,0x8a98216
  407a1f:	adc    esi,DWORD PTR [eax-0xb]
  407a22:	retf   0xc82d
  407a25:	sti    
  407a26:	add    cl,BYTE PTR [edi+0x48]
  407a29:	sti    
  407a2a:	jns    0x4079c5
  407a2c:	and    al,0xc9
  407a2e:	(bad)  
  407a2f:	ins    BYTE PTR es:[edi],dx
  407a30:	retf   
  407a31:	jnp    0x407a93
  407a33:	push   eax
  407a34:	mov    edi,0xe3bc2392
  407a39:	aaa    
  407a3a:	hlt    
  407a3b:	ss sbb eax,0x3f067ef9
  407a41:	dec    ebp
  407a42:	mov    eax,0xb6deda95
  407a47:	pop    edi
  407a48:	pop    edi
  407a49:	pop    edx
  407a4a:	xor    ch,BYTE PTR [esi]
  407a4c:	add    DWORD PTR [edi+0x4a6f3f55],0xcf62cd8d
  407a56:	in     eax,dx
  407a57:	(bad)  
  407a58:	shr    DWORD PTR [edi],cl
  407a5a:	inc    esp
  407a5b:	scas   al,BYTE PTR es:[edi]
  407a5c:	mov    eax,0x24373be3
  407a61:	add    eax,0x75393425
  407a66:	xor    dh,BYTE PTR [esi-0x4fd30606]
  407a6c:	adc    BYTE PTR [edi-0x15],cl
  407a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a70:	icebp  
  407a71:	and    al,0xfd
  407a73:	inc    esi
  407a74:	dec    esi
  407a75:	inc    esp
  407a76:	ds or  al,dl
  407a79:	rcr    BYTE PTR [edx],1
  407a7b:	ins    DWORD PTR es:[edi],dx
  407a7c:	inc    edi
  407a7d:	outs   dx,DWORD PTR ds:[esi]
  407a7e:	xchg   ebx,eax
  407a7f:	xor    bh,BYTE PTR [eax-0x8]
  407a82:	xchg   esp,eax
  407a83:	push   ds
  407a84:	lods   al,BYTE PTR ds:[esi]
  407a85:	adc    eax,DWORD PTR [ebp+0x6d]
  407a88:	xor    ecx,DWORD PTR [ecx+ecx*8-0x381cd917]
  407a8f:	jle    0x407aad
  407a91:	pop    esi
  407a92:	ins    DWORD PTR es:[edi],dx
  407a93:	jmp    0x98500b80
  407a98:	mov    edx,0x7b1586b9
  407a9d:	sti    
  407a9e:	les    eax,FWORD PTR [esp+ebx*1]
  407aa1:	in     al,dx
  407aa2:	sub    ecx,DWORD PTR [eax+0x28]
  407aa5:	dec    esi
  407aa6:	(bad)  
  407aa7:	hlt    
  407aa8:	adc    DWORD PTR [ebx+0x47],ebp
  407aab:	add    al,cl
  407aad:	shl    DWORD PTR [edx+0x38e56f55],0xda
  407ab4:	push   esp
  407ab5:	das    
  407ab6:	data16 jp 0x407b23
  407ab9:	pop    edx
  407aba:	jo     0x407b2c
  407abc:	pushf  
  407abd:	add    eax,DWORD PTR [esi-0x738d791]
  407ac3:	sbb    eax,DWORD PTR [edx]
  407ac5:	push   eax
  407ac6:	xor    BYTE PTR [ebx+eax*8],0xf1
  407aca:	jmp    0x407a96
  407acc:	xchg   DWORD PTR [esi-0x7e],edi
  407acf:	mov    al,0xe2
  407ad1:	add    BYTE PTR [ebx+0x163449e5],dl
  407ad7:	lods   al,BYTE PTR ds:[esi]
  407ad8:	in     eax,dx
  407ad9:	mov    al,ds:0xe172bcb6
  407ade:	jle    0x407ac9
  407ae0:	push   0xffffff9f
  407ae2:	push   ebp
  407ae3:	lock push edi
  407ae5:	inc    ebx
  407ae6:	test   eax,0xe5360b75
  407aeb:	fistp  QWORD PTR [edx]
  407aed:	xchg   ecx,eax
  407aee:	loopne 0x407a9f
  407af0:	ror    DWORD PTR ds:0xd213725,cl
  407af6:	mov    cl,0x29
  407af8:	adc    al,0x1f
  407afa:	dec    ebp
  407afb:	inc    edx
  407afc:	js     0x407af7
  407afe:	cmp    edi,DWORD PTR [eax]
  407b00:	in     eax,dx
  407b01:	push   eax
  407b02:	pop    esi
  407b03:	push   esi
  407b04:	fdivr  st,st(3)
  407b06:	mov    esi,0x5f5c5ee9
  407b0b:	(bad)  
  407b0c:	jmp    0xf1e9:0xf5c0248f
  407b13:	(bad)  
  407b14:	cs sti 
  407b16:	mov    ah,BYTE PTR [eax+0x67fae255]
  407b1c:	jmp    0x407b54
  407b1e:	or     al,0x57
  407b20:	lods   eax,DWORD PTR ds:[esi]
  407b21:	sahf   
  407b22:	push   esi
  407b23:	aaa    
  407b24:	sbb    eax,edx
  407b26:	push   eax
  407b27:	ja     0x407b51
  407b29:	pushf  
  407b2a:	mov    WORD PTR [esi*1+0x625d8c03],ds
  407b31:	lds    ebp,FWORD PTR [eax+0x14]
  407b34:	fs mov dl,0x27
  407b37:	outs   dx,BYTE PTR ds:[esi]
  407b38:	ret    0x6281
  407b3b:	adc    ah,BYTE PTR [ebp+ebp*1-0x4b975a47]
  407b42:	lahf   
  407b43:	in     eax,0x77
  407b45:	test   eax,0xd2933cf3
  407b4a:	es jle 0x407b1d
  407b4d:	retf   0xcc94
  407b50:	loope  0x407b77
  407b52:	dec    ecx
  407b53:	add    eax,0xfaef89a9
  407b58:	jno    0x407b33
  407b5a:	and    BYTE PTR [ecx+0x6fa269e1],0x77
  407b61:	jmp    0x1a5b095a
  407b66:	mov    BYTE PTR [edi+0x70],cl
  407b69:	shl    BYTE PTR [ebx-0x6],0xb
  407b6d:	clc    
  407b6e:	mov    bh,0x89
  407b70:	sbb    ebx,esp
  407b72:	add    BYTE PTR es:[ebx+0x37],bl
  407b76:	int3   
  407b77:	int    0xfc
  407b79:	or     al,0xc0
  407b7b:	fidiv  DWORD PTR [ecx+0x515bd133]
  407b81:	cld    
  407b82:	pop    ds
  407b83:	shl    DWORD PTR [edx],1
  407b85:	stos   DWORD PTR es:[edi],eax
  407b86:	xor    DWORD PTR [edi+0x5b66524d],esp
  407b8c:	jb     0x407b15
  407b8e:	test   BYTE PTR [edi+0x62469b02],dl
  407b94:	imul   ebx,ecx,0x812ac703
  407b9a:	sub    edx,ecx
  407b9c:	popf   
  407b9d:	push   esi
  407b9e:	pop    es
  407b9f:	imul   esi,DWORD PTR ds:0xf9b02657,0xf1cc6ff2
  407ba9:	pop    ss
  407baa:	(bad)  
  407bab:	dec    esp
  407bac:	add    eax,0x272e2b50
  407bb1:	inc    esp
  407bb2:	jp     0x407c19
  407bb4:	mov    ecx,DWORD PTR [edx-0x448abe0c]
  407bba:	pop    esp
  407bbb:	mov    ebx,DWORD PTR [edi-0x3edf3784]
  407bc1:	xlat   BYTE PTR ds:[ebx]
  407bc2:	retf   0x3c9f
  407bc5:	or     al,0xd8
  407bc7:	sbb    al,0xb1
  407bc9:	(bad)
  407bcd:	adc    eax,0x15d99e35
  407bd2:	xor    al,0xca
  407bd4:	push   edi
  407bd5:	ins    BYTE PTR es:[edi],dx
  407bd6:	mov    ds:0xb8701eb,al
  407bdb:	pop    edi
  407bdc:	rcr    dh,0x85
  407bdf:	popa   
  407be0:	aas    
  407be1:	mov    dl,0xca
  407be3:	lds    esi,FWORD PTR [edi-0x5221b0ae]
  407be9:	aaa    
  407bea:	sahf   
  407beb:	dec    edx
  407bec:	jmp    0x407c30
  407bee:	je     0x407bf0
  407bf0:	mov    esp,0x5904b435
  407bf5:	ins    DWORD PTR es:[edi],dx
  407bf6:	aad    0x14
  407bf8:	iret   
  407bf9:	sbb    cl,BYTE PTR [ebp-0x4]
  407bfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bfd:	mov    bl,BYTE PTR ds:0x2f748ea7
  407c03:	mov    ds:0xd15c5a0e,al
  407c08:	sub    eax,0x68db3449
  407c0d:	and    eax,0x48b15f47
  407c12:	jmp    0xb0305531
  407c17:	mov    edx,0xb2ee7925
  407c1c:	in     al,0xf0
  407c1e:	cmp    esi,DWORD PTR [ebx+0x55]
  407c21:	sbb    al,0x59
  407c23:	sub    ebx,DWORD PTR [eax]
  407c25:	fld    QWORD PTR [ebx]
  407c27:	int3   
  407c28:	jle    0x407c51
  407c2a:	xlat   BYTE PTR ds:[ebx]
  407c2b:	xchg   ecx,eax
  407c2c:	cmp    BYTE PTR [ebx+0x3b],0x41
  407c30:	or     eax,0x79d9fb24
  407c35:	les    ebx,FWORD PTR [ebx]
  407c37:	fcmovnu st,st(2)
  407c39:	fld    QWORD PTR [ebx+0x1]
  407c3c:	dec    esp
  407c3d:	push   0xffffffee
  407c3f:	lds    ebp,FWORD PTR [esi-0x6e14c0d3]
  407c45:	mov    dh,0x9f
  407c47:	cmc    
  407c48:	xchg   ebp,eax
  407c49:	pop    edx
  407c4a:	add    eax,0xb9d4060f
  407c4f:	xchg   dl,dl
  407c51:	jae    0x407c7e
  407c53:	cdq    
  407c54:	mov    esi,DWORD PTR [eax+0x2d]
  407c57:	xor    edi,DWORD PTR [esi]
  407c59:	mov    BYTE PTR [ecx-0x34],al
  407c5c:	pop    eax
  407c5d:	adc    bl,dl
  407c5f:	cmp    al,0x35
  407c61:	call   0xaef0a864
  407c66:	cmp    al,0xd
  407c68:	cmp    BYTE PTR [ebx],ch
  407c6a:	jno    0x407c2c
  407c6c:	aad    0x20
  407c6e:	(bad)  
  407c6f:	sub    esi,DWORD PTR [edx-0x34c34141]
  407c75:	je     0x407ca8
  407c77:	and    DWORD PTR [esi],esp
  407c79:	mov    dh,0x5f
  407c7b:	aaa    
  407c7c:	mov    eax,ds:0xf1067b87
  407c81:	mov    edx,0x4ec4ad5b
  407c86:	scas   al,BYTE PTR es:[edi]
  407c87:	jb     0x407c8d
  407c89:	adc    eax,0xa583bde2
  407c8e:	pop    es
  407c8f:	ss hlt 
  407c91:	retf   0x947c
  407c94:	sub    BYTE PTR [eax+edx*1],bh
  407c97:	in     al,0x30
  407c99:	sbb    eax,0xb45075ea
  407c9e:	aaa    
  407c9f:	fld    QWORD PTR [ebx+0x14eafcaa]
  407ca5:	sub    al,0xa7
  407ca7:	pushf  
  407ca8:	xor    esp,DWORD PTR [eax+0x53]
  407cab:	pop    ecx
  407cac:	jecxz  0x407d2c
  407cae:	add    al,0x1e
  407cb0:	sub    DWORD PTR [ebx],esp
  407cb2:	lahf   
  407cb3:	mov    ah,0x99
  407cb5:	ins    DWORD PTR es:[edi],dx
  407cb6:	adc    ebx,edi
  407cb8:	das    
  407cb9:	ret    0x43ac
  407cbc:	dec    eax
  407cbd:	jge    0x407c69
  407cbf:	inc    ecx
  407cc0:	movd   DWORD PTR [edx+0xc51de6f],mm2
  407cc7:	jge    0x407d2d
  407cc9:	cdq    
  407cca:	jge    0x407c81
  407ccc:	push   cs
  407ccd:	test   al,0x1f
  407ccf:	fnstenv [esi]
  407cd1:	int    0x31
  407cd3:	jmp    0x73ec:0x3642b730
  407cda:	pop    esp
  407cdb:	test   al,0x5f
  407cdd:	inc    ebp
  407cde:	xchg   edx,eax
  407cdf:	stc    
  407ce0:	inc    DWORD PTR [eax+0x18]
  407ce3:	scas   al,BYTE PTR es:[edi]
  407ce4:	fwait
  407ce5:	rsqrtps xmm6,xmm3
  407ce8:	and    al,0xfc
  407cea:	dec    ecx
  407ceb:	mov    edx,0x9db83514
  407cf0:	mov    al,ds:0x8ba1dfcd
  407cf5:	or     BYTE PTR [edx+eiz*2-0x5b6d978e],dh
  407cfc:	mov    ebp,0x723978e2
  407d01:	addr16 pusha 
  407d03:	dec    eax
  407d04:	(bad)  
  407d05:	int3   
  407d06:	(bad)  [ebp+0x35]
  407d09:	or     al,0x81
  407d0b:	xor    ecx,ebp
  407d0d:	ins    BYTE PTR es:[edi],dx
  407d0e:	push   ss
  407d0f:	jl     0x407d67
  407d11:	mov    dh,0x85
  407d13:	xchg   edx,eax
  407d14:	add    DWORD PTR [esi+0x3d],eax
  407d17:	and    DWORD PTR [eax+0x42],esp
  407d1a:	das    
  407d1b:	sbb    edx,DWORD PTR [edx+0x1d]
  407d1e:	cmc    
  407d1f:	inc    ebx
  407d20:	mov    dl,0x1a
  407d22:	cld    
  407d23:	(bad)  
  407d24:	dec    edx
  407d25:	std    
  407d26:	inc    ecx
  407d27:	sub    DWORD PTR [ebx-0x22],esp
  407d2a:	ins    DWORD PTR es:[edi],dx
  407d2b:	jl     0x407d31
  407d2d:	jnp    0x407cba
  407d2f:	or     eax,0x21090943
  407d34:	mov    esp,0x6870140b
  407d39:	mov    cl,0x4c
  407d3b:	and    ebp,DWORD PTR [eax-0x7232a61b]
  407d41:	pop    esi
  407d42:	pushf  
  407d43:	es jo  0x407d2d
  407d46:	test   eax,0xd45dbd26
  407d4b:	mov    edi,0xcbfc63e5
  407d50:	push   eax
  407d51:	stos   DWORD PTR es:[edi],eax
  407d52:	bnd jns 0x407d42
  407d55:	dec    ecx
  407d56:	pop    ecx
  407d57:	outs   dx,DWORD PTR ds:[esi]
  407d58:	mov    ds:0xdebb9b3a,eax
  407d5d:	or     eax,esp
  407d5f:	int3   
  407d60:	hlt    
  407d61:	call   DWORD PTR [esi]
  407d63:	pop    ecx
  407d64:	stos   DWORD PTR es:[edi],eax
  407d65:	adc    al,0xa7
  407d67:	ins    BYTE PTR es:[edi],dx
  407d68:	in     eax,0x79
  407d6a:	js     0x407d3a
  407d6c:	sti    
  407d6d:	out    dx,eax
  407d6e:	enter  0xf415,0x20
  407d72:	add    al,0x5c
  407d74:	sub    dl,BYTE PTR [esi]
  407d76:	xor    BYTE PTR [ebp+0x1406b2d],al
  407d7c:	dec    edx
  407d7d:	mov    ds:0xd10ad353,eax
  407d82:	cdq    
  407d83:	(bad)  
  407d84:	sbb    al,0xd3
  407d86:	cmp    DWORD PTR [ebx+0x75],ebx
  407d89:	gs jge 0x407d36
  407d8c:	lahf   
  407d8d:	icebp  
  407d8e:	cmp    BYTE PTR [edi-0x498ea69a],ch
  407d94:	adc    esi,0x57
  407d97:	mov    WORD PTR [edi-0x57e51cd7],ss
  407d9d:	leave  
  407d9e:	sbb    DWORD PTR [eax+0x71],esi
  407da1:	je     0x407d31
  407da3:	ss in  al,dx
  407da5:	or     ebx,DWORD PTR ds:0x9aec8aaa
  407dab:	inc    ebx
  407dac:	or     al,0xe1
  407dae:	xchg   BYTE PTR [ecx-0x6b],ch
  407db1:	scas   al,BYTE PTR es:[edi]
  407db2:	xor    al,0x98
  407db4:	out    dx,eax
  407db5:	xchg   esi,eax
  407db6:	lods   eax,DWORD PTR ds:[esi]
  407db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407db8:	xchg   esi,eax
  407db9:	out    dx,eax
  407dba:	(bad)  
  407dbb:	pop    eax
  407dbc:	push   edx
  407dbd:	cmp    eax,0x96c93a5
  407dc2:	sub    BYTE PTR [eax],ch
  407dc4:	mov    ebx,0x2a0cf525
  407dc9:	add    bh,BYTE PTR [ebx]
  407dcb:	out    dx,al
  407dcc:	sub    bl,BYTE PTR [ebp+0x3a43451e]
  407dd2:	sti    
  407dd3:	inc    edi
  407dd4:	aad    0x4f
  407dd6:	pop    esp
  407dd7:	push   eax
  407dd8:	mov    bl,BYTE PTR ds:0x56294f1b
  407dde:	xchg   edx,eax
  407ddf:	mov    ah,0x45
  407de1:	jg     0x407db6
  407de3:	inc    ecx
  407de4:	xchg   BYTE PTR [edx+0x4b063d7f],bl
  407dea:	js     0x407e27
  407dec:	(bad)  
  407ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dee:	addr16 push ecx
  407df0:	(bad)  
  407df1:	(bad)  
  407df2:	outs   dx,DWORD PTR ds:[esi]
  407df3:	les    ecx,FWORD PTR [ebp+eax*1-0x2d]
  407df7:	xchg   ecx,eax
  407df8:	push   0xffffffb3
  407dfa:	xchg   esp,eax
  407dfb:	imul   eax,ebp,0xffffffe6
  407dfe:	adc    BYTE PTR [ebp+0x6e],cl
  407e01:	cmp    eax,edi
  407e03:	cmp    al,0x28
  407e05:	aad    0x5e
  407e07:	nop
  407e08:	dec    edx
  407e09:	mov    dl,0xe1
  407e0b:	sbb    DWORD PTR [edi+0x19],ebp
  407e0e:	adc    al,0xf4
  407e10:	cmp    al,0xad
  407e12:	mov    ch,0xce
  407e14:	lea    ecx,[edx+ebp*2]
  407e17:	cmp    BYTE PTR [esi],ch
  407e19:	in     al,dx
  407e1a:	or     edx,ecx
  407e1c:	in     al,0x6
  407e1e:	add    ah,BYTE PTR [eax+0x65521e42]
  407e24:	add    esi,eax
  407e26:	int    0x75
  407e28:	mov    esi,0x91aed51
  407e2d:	cli    
  407e2e:	mov    esi,0x1e93a70c
  407e33:	ins    BYTE PTR es:[edi],dx
  407e34:	adc    esi,DWORD PTR [ecx+0x33666d7b]
  407e3a:	adc    DWORD PTR [ebx+0x65],ebp
  407e3d:	fidiv  DWORD PTR ds:0xc1510939
  407e43:	ins    DWORD PTR es:[edi],dx
  407e44:	or     eax,0x3b68b058
  407e49:	jae    0x407ea0
  407e4b:	jge    0x407e20
  407e4d:	cdq    
  407e4e:	outs   dx,DWORD PTR ds:[esi]
  407e4f:	in     al,dx
  407e50:	dec    edx
  407e51:	jo     0x407e98
  407e53:	out    0xa5,al
  407e55:	jmp    0x407de2
  407e57:	mov    edx,0x114ad4cf
  407e5c:	mov    ah,0xa
  407e5e:	cwde   
  407e5f:	or     ah,0x2f
  407e62:	cld    
  407e63:	out    0x91,eax
  407e65:	or     BYTE PTR [ecx],bh
  407e67:	xchg   edx,eax
  407e68:	pop    esi
  407e69:	shl    DWORD PTR [edi],0x10
  407e6c:	dec    ebp
  407e6d:	bound  edx,QWORD PTR [edi]
  407e6f:	cld    
  407e70:	sbb    eax,0x123109aa
  407e75:	dec    ebx
  407e76:	ja     0x407ea1
  407e78:	jb     0x407e8c
  407e7a:	pop    esi
  407e7b:	(bad)  
  407e7c:	das    
  407e7d:	sub    DWORD PTR [edi],0x4d
  407e80:	test   al,0x3f
  407e82:	shl    BYTE PTR ds:0x720cf099,1
  407e88:	enter  0x52f3,0xe6
  407e8c:	or     DWORD PTR [edx],edi
  407e8e:	shl    BYTE PTR [edi],0x5b
  407e91:	setp   BYTE PTR [ebx]
  407e94:	shl    DWORD PTR [ebx+ebx*8+0x55],cl
  407e98:	sub    al,0x4b
  407e9a:	aaa    
  407e9b:	cmp    al,0x27
  407e9d:	xor    eax,DWORD PTR [ecx-0x17f7377f]
  407ea3:	out    0x72,eax
  407ea5:	(bad)  
  407ea6:	sbb    edx,DWORD PTR [esi-0x2cdf161d]
  407eac:	sar    BYTE PTR [eax],1
  407eae:	or     al,0xfa
  407eb0:	pop    ss
  407eb1:	imul   ebx,DWORD PTR [edi+esi*2-0x3b],0xffffffe2
  407eb6:	sub    BYTE PTR [esp+ecx*4+0x5cf351ad],al
  407ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ebe:	mov    eax,0xeef74da9
  407ec3:	in     al,dx
  407ec4:	dec    edi
  407ec5:	mov    esi,0x149a4675
  407eca:	sub    eax,DWORD PTR [edx+0x78]
  407ecd:	cs out dx,eax
  407ecf:	sbb    esp,DWORD PTR ds:0xb9556fe4
  407ed5:	out    dx,eax
  407ed6:	int    0x1f
  407ed8:	shl    BYTE PTR [edx],0x59
  407edb:	pop    ss
  407edc:	mov    BYTE PTR [edi+ebx*1+0x22f8cce9],bh
  407ee3:	xor    DWORD PTR [ebx+0x33],edi
  407ee6:	das    
  407ee7:	xor    eax,edx
  407ee9:	or     al,0xdb
  407eeb:	(bad)  
  407eec:	rcl    BYTE PTR [edi+edi*8],0xd8
  407ef0:	add    BYTE PTR [ecx+ebx*1-0x36],cl
  407ef4:	fadd   QWORD PTR [edi]
  407ef6:	loopne 0x407e99
  407ef8:	mov    eax,0xb67f9c1c
  407efd:	xlat   BYTE PTR ds:[ebx]
  407efe:	lods   al,BYTE PTR ds:[esi]
  407eff:	and    edx,DWORD PTR [esp+ecx*4-0x4c]
  407f03:	pop    edi
  407f04:	lahf   
  407f05:	call   0x20051759
  407f0a:	or     DWORD PTR [ebx-0x48],edx
  407f0d:	test   al,0x4a
  407f0f:	fisubr WORD PTR [ebx]
  407f11:	jle    0x407f46
  407f13:	sbb    al,0x4f
  407f15:	leave  
  407f16:	xchg   BYTE PTR [ebp+0x1828f4cb],cl
  407f1c:	push   esi
  407f1d:	jae    0x407ebd
  407f1f:	mov    BYTE PTR [eax-0x446f9625],dl
  407f25:	inc    ebp
  407f26:	push   esp
  407f27:	add    al,0x4
  407f29:	cmp    DWORD PTR [eax+0x6c],edi
  407f2c:	sbb    ebp,DWORD PTR [eax+0x59]
  407f2f:	dec    esi
  407f30:	test   DWORD PTR [edi],0x866fed37
  407f36:	cmp    eax,0xef7bdb16
  407f3b:	dec    esi
  407f3c:	sub    eax,0xebfb9a77
  407f41:	add    DWORD PTR [eax-0x39],esp
  407f44:	lahf   
  407f45:	shl    DWORD PTR [ebp-0x5f],1
  407f48:	jbe    0x407ed1
  407f4a:	pop    edx
  407f4b:	xchg   esp,eax
  407f4c:	icebp  
  407f4d:	sti    
  407f4e:	inc    esp
  407f4f:	and    esp,DWORD PTR [ecx]
  407f51:	test   eax,0x90f56119
  407f56:	push   ds
  407f57:	fsub   DWORD PTR ds:0x34be2556
  407f5d:	mov    dh,BYTE PTR [eiz*2+0x74872333]
  407f64:	or     BYTE PTR [eax-0x247e403e],bh
  407f6a:	inc    ebx
  407f6b:	push   ecx
  407f6c:	pop    es
  407f6d:	push   edx
  407f6e:	shl    BYTE PTR [ebx],0x4d
  407f71:	sbb    bl,BYTE PTR [eax+0x6226ee54]
  407f77:	pusha  
  407f78:	jp     0x407f48
  407f7a:	lea    esi,[eax]
  407f7c:	test   DWORD PTR [edx+0x2d],ecx
  407f7f:	cli    
  407f80:	(bad)  
  407f81:	xchg   esi,eax
  407f82:	push   edx
  407f83:	mov    ds,ecx
  407f85:	retf   0x1a16
  407f88:	in     al,dx
  407f89:	in     eax,dx
  407f8a:	mov    ebx,0x2df25130
  407f8f:	or     BYTE PTR [ebp+ecx*8+0x13f6bafa],cl
  407f96:	xor    ebp,DWORD PTR [edi]
  407f98:	adc    ah,BYTE PTR cs:[ebx-0x566b9abd]
  407f9f:	aad    0x2a
  407fa1:	or     BYTE PTR [eax+0x9],ah
  407fa4:	js     0x407fe7
  407fa6:	outs   dx,DWORD PTR ds:[esi]
  407fa7:	js     0x407f52
  407fa9:	inc    esp
  407faa:	mov    ds:0x81ca100,al
  407faf:	or     DWORD PTR [ecx],0xffffffd4
  407fb2:	outs   dx,BYTE PTR ds:[esi]
  407fb3:	sub    al,0x18
  407fb5:	inc    ebp
  407fb6:	aas    
  407fb7:	dec    esp
  407fb8:	ins    DWORD PTR es:[edi],dx
  407fb9:	aam    0x1e
  407fbb:	xor    al,0xed
  407fbd:	mov    ah,0x41
  407fbf:	out    dx,eax
  407fc0:	mov    bl,0xdb
  407fc2:	leave  
  407fc3:	pop    ss
  407fc4:	sub    ch,BYTE PTR [ecx]
  407fc6:	dec    bp
  407fc8:	xchg   esi,ecx
  407fca:	dec    eax
  407fcb:	pop    esp
  407fcc:	sub    al,0xd2
  407fce:	repnz cmp dh,ah
  407fd1:	arpl   cx,sp
  407fd3:	inc    edi
  407fd4:	inc    esi
  407fd5:	mov    edi,0x2687e91e
  407fda:	xor    al,0x31
  407fdc:	xchg   edx,eax
  407fdd:	mov    ebx,0xf8325992
  407fe2:	xchg   edi,eax
  407fe3:	cmp    DWORD PTR [ecx+0x0],0xffffffca
  407fe7:	sub    edx,DWORD PTR [edx-0x2fd0721c]
  407fed:	(bad)  
  407fee:	hlt    
  407fef:	(bad)  
  407ff0:	aaa    
  407ff1:	xchg   esp,eax
  407ff2:	mov    esp,0x376ca597
  407ff7:	xor    eax,0xf85f6aea
  407ffc:	xor    al,0x17
  407ffe:	rol    cl,1
  408000:	xor    eax,0x2bcb3
  408005:	in     eax,dx
  408006:	dec    ebp
  408007:	mov    ebx,0xba7cf383
  40800c:	aas    
  40800d:	cli    
  40800e:	ror    BYTE PTR [edi+0x11],cl
  408011:	add    eax,0xfec73ac9
  408016:	retf   0x89c4
  408019:	loope  0x408061
  40801b:	inc    eax
  40801c:	arpl   WORD PTR [ecx+0x42],sp
  40801f:	das    
  408020:	and    eax,DWORD PTR [ecx]
  408022:	mul    DWORD PTR [eax+0xb599b6c]
  408028:	cmc    
  408029:	outs   dx,DWORD PTR ds:[esi]
  40802a:	ja     0x407fdc
  40802c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40802d:	dec    esp
  40802e:	mov    DWORD PTR [ebx-0x3f],ecx
  408031:	retf   
  408032:	pop    ds
  408033:	sbb    al,cl
  408035:	adc    ecx,DWORD PTR [edx]
  408037:	retf   
  408038:	out    dx,eax
  408039:	rcl    ch,0x20
  40803c:	xchg   ebp,eax
  40803d:	shr    BYTE PTR [ecx-0x3a],cl
  408040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408041:	ret    0x8f6
  408044:	jmp    0xc975:0x103e8280
  40804b:	mov    edi,0xa0d71b4d
  408050:	sbb    ebp,edi
  408052:	xor    eax,0xed47ac4f
  408057:	push   esi
  408058:	sbb    DWORD PTR [ecx],ecx
  40805a:	sub    dh,BYTE PTR [eax]
  40805c:	(bad)  
  40805d:	dec    edx
  40805e:	adc    eax,0xf7ce7e4e
  408063:	loopne 0x40808a
  408065:	das    
  408066:	adc    al,0x55
  408068:	out    0x33,eax
  40806a:	mov    bh,BYTE PTR [ecx+0x74]
  40806d:	pop    esp
  40806e:	inc    edi
  40806f:	push   0x6a76c4e8
  408074:	dec    dx
  408076:	pushf  
  408077:	pop    ecx
  408078:	adc    BYTE PTR [esi-0x76a12079],0x67
  40807f:	jp     0x40803e
  408081:	bound  ecx,QWORD PTR [esi-0x56]
  408084:	dec    esp
  408085:	pusha  
  408086:	cdq    
  408087:	loop   0x408108
  408089:	sbb    eax,0x2dfb6d0f
  40808e:	ss in  al,dx
  408090:	je     0x40807c
  408092:	pop    ecx
  408093:	dec    ebx
  408094:	push   esp
  408095:	(bad)  
  408096:	pop    esp
  408097:	imul   ebx,ebx,0x2d12b05a
  40809d:	ror    DWORD PTR [ecx+0x3c343ddd],1
  4080a3:	and    dh,bl
  4080a5:	mov    edx,0xf5386c43
  4080aa:	jl     0x40806a
  4080ac:	aam    0xd6
  4080ae:	mov    al,0xa2
  4080b0:	cdq    
  4080b1:	mov    al,0x70
  4080b3:	ins    BYTE PTR es:[edi],dx
  4080b4:	sbb    esp,DWORD PTR [ecx+0xe43eed9]
  4080ba:	(bad)  
  4080bb:	and    DWORD PTR [edx-0x2bec3afc],esp
  4080c1:	call   FWORD PTR [ebx-0x639ca969]
  4080c7:	les    ecx,FWORD PTR ds:0x3c68a646
  4080cd:	popf   
  4080ce:	sub    ebp,ebx
  4080d0:	ret    
  4080d1:	xchg   edi,eax
  4080d2:	outs   dx,DWORD PTR ds:[esi]
  4080d3:	jnp    0x4080cf
  4080d5:	add    al,0xf0
  4080d7:	cmp    ebx,DWORD PTR [edi-0x44]
  4080da:	mov    ecx,0xd6403dd1
  4080df:	xchg   DWORD PTR [ebx+ebp*1+0x29],edi
  4080e3:	cmp    eax,0x60978485
  4080e8:	imul   edi,DWORD PTR [edx+0x22],0x0
  4080ec:	push   0x50
  4080ee:	cli    
  4080ef:	mov    ds:0xf21e04b1,eax
  4080f4:	cs mov eax,0xfa5ad7b9
  4080fa:	sub    bl,BYTE PTR [eax]
  4080fc:	and    eax,0xc5f0efb1
  408101:	sub    BYTE PTR [esi-0x2d70d866],al
  408107:	jmp    0x4080ac
  408109:	loope  0x40812c
  40810b:	or     DWORD PTR [esi],edi
  40810d:	xchg   esp,eax
  40810e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40810f:	jnp    0x40811b
  408111:	retf   
  408112:	cmp    al,0x14
  408114:	mov    ebx,0x370f31a
  408119:	data16 jmp 0x40811e
  40811c:	mov    dl,BYTE PTR [edi+0x3e544a90]
  408122:	(bad)  
  408123:	xchg   edx,eax
  408124:	cmp    BYTE PTR [esi-0x7d9547d3],cl
  40812a:	ret    
  40812b:	pop    ebx
  40812c:	mov    eax,ds:0x7265f768
  408131:	xor    al,0xd4
  408133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408134:	xor    al,0x9e
  408136:	es ins BYTE PTR es:[edi],dx
  408138:	push   cs
  408139:	std    
  40813a:	cdq    
  40813b:	hlt    
  40813c:	int    0x33
  40813e:	xor    eax,0x6efc0770
  408143:	mov    dl,0x4f
  408145:	sub    al,0xa6
  408147:	mov    eax,0x36dfa3c8
  40814c:	rcr    dh,1
  40814e:	push   ds
  40814f:	pop    ebp
  408150:	mov    ds:0xcf8f5406,eax
  408155:	ret    0x30bf
  408158:	call   0x9f28ecf8
  40815d:	hlt    
  40815e:	(bad)  
  40815f:	dec    esp
  408160:	test   BYTE PTR [ebp+0x65],cl
  408163:	cdq    
  408164:	inc    eax
  408165:	sub    BYTE PTR [ecx-0x5687e12c],0x8b
  40816c:	xchg   esi,eax
  40816d:	pop    ecx
  40816e:	std    
  40816f:	mov    ebx,0x819cd5b6
  408174:	mov    ebx,0x6d3dd3fb
  408179:	and    DWORD PTR [eax],esp
  40817b:	leave  
  40817c:	dec    esp
  40817d:	aam    0xd3
  40817f:	test   al,0x4c
  408181:	and    eax,edx
  408183:	and    BYTE PTR [edx+0x65],cl
  408186:	pop    ss
  408187:	pop    ebp
  408188:	sbb    eax,0x97bee12d
  40818d:	jmp    0xc042:0x24cc3b76
  408194:	sahf   
  408195:	popa   
  408196:	or     ecx,DWORD PTR [ebp-0x66eee22f]
  40819c:	in     al,dx
  40819d:	cmp    eax,0xbc150f19
  4081a2:	stos   DWORD PTR es:[edi],eax
  4081a3:	jno    0x408161
  4081a5:	daa    
  4081a6:	scas   eax,DWORD PTR es:[edi]
  4081a7:	pop    ecx
  4081a8:	sar    BYTE PTR [ebp-0x5f7807f9],0x85
  4081af:	sbb    eax,0xaff0d706
  4081b4:	inc    ecx
  4081b5:	out    dx,eax
  4081b6:	out    0x79,eax
  4081b8:	mov    al,ds:0x5cb2c78c
  4081bd:	mov    WORD PTR [ecx-0x5d893036],gs
  4081c3:	ds loop 0x408235
  4081c6:	mov    bh,0x42
  4081c8:	cmc    
  4081c9:	cmp    eax,0x2c2a3c2d
  4081ce:	pop    ebp
  4081cf:	sub    BYTE PTR [ecx+0x2e],ah
  4081d2:	dec    esi
  4081d3:	add    eax,0x4281a7f6
  4081d8:	xchg   ebp,eax
  4081d9:	pop    ds
  4081da:	stos   DWORD PTR es:[edi],eax
  4081db:	daa    
  4081dc:	pop    ds
  4081dd:	data16 xchg dh,ch
  4081e0:	bound  esi,QWORD PTR [eax-0x49]
  4081e3:	cwde   
  4081e4:	sbb    ebx,DWORD PTR [esi-0x1f4d0766]
  4081ea:	mov    edx,0x18b1c83
  4081ef:	xchg   ebp,eax
  4081f0:	cmc    
  4081f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081f2:	jo     0x40817c
  4081f4:	jbe    0x4081d1
  4081f6:	inc    eax
  4081f7:	or     DWORD PTR [ebp+0x70],edx
  4081fa:	js     0x408212
  4081fc:	aaa    
  4081fd:	mov    ds:0x551322c4,al
  408202:	sbb    al,0x96
  408204:	inc    ebp
  408205:	mov    WORD PTR [ebp+ebp*8-0x6c],ss
  408209:	ds adc al,0x1b
  40820c:	and    DWORD PTR [esi-0x532bb0f7],eax
  408212:	sub    ch,BYTE PTR [edi+0x30c7768c]
  408218:	scas   al,BYTE PTR es:[edi]
  408219:	add    BYTE PTR [edi+eax*8],dh
  40821c:	into   
  40821d:	adc    cl,BYTE PTR [eax+0x66]
  408220:	(bad)  
  408221:	and    DWORD PTR [eax+0x65],ecx
  408224:	dec    ecx
  408225:	or     BYTE PTR [ebp-0x47],cl
  408228:	add    ebp,DWORD PTR [ebx]
  40822a:	mov    cl,0xf4
  40822c:	dec    ecx
  40822d:	adc    DWORD PTR ds:0x61c1d262,eax
  408233:	sar    cl,1
  408235:	in     al,dx
  408236:	sbb    BYTE PTR [ecx-0x742d2cc3],cl
  40823c:	lock sub DWORD PTR [eax+ecx*2-0xa],edi
  408241:	std    
  408242:	test   al,0x42
  408244:	push   ds
  408245:	jecxz  0x4081f2
  408247:	and    eax,0xa3387797
  40824c:	and    ah,BYTE PTR [ebp+0x33]
  40824f:	call   0xbcc4c16b
  408254:	cmp    cl,BYTE PTR [eax+0x2238d0ed]
  40825a:	ins    DWORD PTR es:[edi],dx
  40825b:	inc    ecx
  40825c:	mov    edx,0x6559cd9a
  408261:	aas    
  408262:	das    
  408263:	mov    dh,0xa5
  408265:	inc    edx
  408266:	in     eax,dx
  408267:	out    dx,eax
  408268:	push   esi
  408269:	repnz cdq 
  40826b:	mov    esp,0xf2567c41
  408270:	outs   dx,BYTE PTR ds:[esi]
  408271:	pop    ebx
  408272:	stos   BYTE PTR es:[edi],al
  408273:	stc    
  408274:	mov    ebx,0x7d3f11a4
  408279:	lods   eax,DWORD PTR ds:[esi]
  40827a:	mov    ?,WORD PTR ds:0x958d9746
  408280:	bound  eax,QWORD PTR ds:0x1151415d
  408286:	inc    edx
  408287:	sbb    BYTE PTR [edi+ecx*8],dh
  40828a:	imul   esp,DWORD PTR [eax-0x51],0xffffffb9
  40828e:	(bad)  
  408290:	test   BYTE PTR [ebp-0x62],bl
  408293:	lods   al,BYTE PTR ds:[esi]
  408294:	idiv   BYTE PTR [edi+0x38919088]
  40829a:	pop    ss
  40829b:	jmp    0x7513cb3
  4082a0:	and    eax,0x3ace3ebe
  4082a5:	inc    edx
  4082a6:	das    
  4082a7:	and    DWORD PTR cs:[eax+esi*4],0xe4806a1e
  4082af:	mov    BYTE PTR [esi+eax*8],0xd1
  4082b3:	push   eax
  4082b4:	es aad 0x1c
  4082b7:	sbb    eax,DWORD PTR [edi+0x75]
  4082ba:	cmp    eax,DWORD PTR [edx+0x6191ff5]
  4082c0:	stc    
  4082c1:	push   ecx
  4082c2:	lds    esp,FWORD PTR [esp+eax*8]
  4082c5:	in     al,0xfb
  4082c7:	in     eax,0x99
  4082c9:	adc    al,0x98
  4082cb:	mov    edi,0x55cb1657
  4082d0:	jp     0x408282
  4082d2:	sub    dh,0xdc
  4082d5:	pop    esi
  4082d6:	pushf  
  4082d7:	jmp    0x7192:0x85f6f406
  4082de:	fst    DWORD PTR [edi+0x43]
  4082e1:	xor    edx,ebx
  4082e3:	(bad)  
  4082e4:	imul   edx,DWORD PTR [edx],0xffffff8b
  4082e7:	jmp    0x408360
  4082e9:	xchg   esi,eax
  4082ea:	pop    edi
  4082eb:	inc    ecx
  4082ec:	ss push eax
  4082ee:	cs int 0x47
  4082f1:	and    eax,0x77b71b17
  4082f6:	mov    ds:0xd15b7475,eax
  4082fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082fd:	inc    esi
  4082fe:	ret    0x539c
  408301:	test   esp,edi
  408303:	fs dec ecx
  408305:	adc    eax,0xb5354975
  40830a:	ret    0xb6ed
  40830d:	jmp    0x56275394
  408312:	mov    al,0x2e
  408314:	add    al,0x94
  408316:	mov    eax,0x665fb53c
  40831b:	sub    DWORD PTR [edi+0x7a],edi
  40831e:	stc    
  40831f:	cmp    BYTE PTR [esi],dh
  408321:	sub    eax,0xda0102ff
  408326:	add    bh,BYTE PTR [edx+0x6c]
  408329:	lods   eax,DWORD PTR ds:[esi]
  40832a:	inc    esi
  40832b:	sbb    dl,BYTE PTR [edx-0x4e3e3f45]
  408331:	jmp    0x8467:0x10144e93
  408338:	and    eax,0xc1c7a32c
  40833d:	inc    ebx
  40833e:	(bad)  
  40833f:	jae    0x408301
  408341:	iret   
  408342:	int3   
  408343:	push   0xf95e5ac2
  408348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408349:	push   edx
  40834a:	ficom  DWORD PTR [esi+edx*4+0x44]
  40834e:	rol    DWORD PTR [edi+0x7daf666f],0x69
  408355:	push   esi
  408357:	jle    0x408325
  408359:	and    esi,edx
  40835b:	push   esi
  40835c:	bound  eax,QWORD PTR [ebx+eiz*1]
  40835f:	jae    0x4083bb
  408361:	data16 (bad) 
  408363:	fdivr  DWORD PTR [ecx]
  408365:	out    dx,eax
  408366:	inc    eax
  408367:	pop    esi
  408368:	ds dec edi
  40836a:	ret    0x11ea
  40836d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40836e:	xor    esp,DWORD PTR ds:0x468e01f3
  408374:	add    ebx,ecx
  408376:	shl    cl,cl
  408378:	mov    WORD PTR [ebp-0x6b],ss
  40837b:	sub    DWORD PTR [edi+0x31],eax
  40837e:	xchg   edx,eax
  40837f:	ret    
  408380:	dec    eax
  408381:	dec    edi
  408382:	push   ds
  408383:	clc    
  408384:	cmc    
  408385:	popf   
  408386:	and    DWORD PTR [eax-0x5e],esi
  408389:	stos   DWORD PTR es:[edi],eax
  40838a:	jae    0x4083ba
  40838c:	mov    cl,0x84
  40838e:	adc    al,0x73
  408390:	dec    edx
  408391:	or     eax,0x685be5ba
  408396:	mov    ah,0x1a
  408398:	jae    0x408417
  40839a:	xchg   BYTE PTR [edx-0x83914ae],dl
  4083a0:	rcr    BYTE PTR [edi+esi*2+0x54152f67],cl
  4083a7:	hlt    
  4083a8:	fnstenv [edx-0x727d3e84]
  4083ae:	fmul   QWORD PTR [ecx]
  4083b0:	pop    ss
  4083b1:	mov    al,ds:0xac72cf76
  4083b6:	fbstp  TBYTE PTR [eax+0x19]
  4083b9:	sub    eax,0x5e1fc3cd
  4083be:	sub    BYTE PTR gs:[ebx],dh
  4083c1:	sti    
  4083c2:	push   0x722edea1
  4083c7:	dec    edx
  4083c8:	imul   ecx,DWORD PTR [ecx+0x4a6bd7f4],0xf8e16fbb
  4083d2:	movq   mm0,QWORD PTR [eax-0x5269233f]
  4083d9:	push   esp
  4083da:	mov    cl,0xfa
  4083dc:	mov    ds:0x4090baf1,al
  4083e1:	shr    BYTE PTR [ecx+0x66],1
  4083e4:	cwde   
  4083e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083e6:	sub    ebp,ebx
  4083e8:	mov    BYTE PTR [ebx-0x23891d31],0x77
  4083ef:	xchg   esi,eax
  4083f0:	rol    BYTE PTR [ebx-0x1a],1
  4083f3:	enter  0xbe56,0xe9
  4083f7:	pop    eax
  4083f8:	jnp    0x4083f1
  4083fa:	inc    edx
  4083fb:	xor    al,0xc4
  4083fd:	(bad)  
  4083fe:	xchg   edx,eax
  4083ff:	mov    al,ds:0x52b2cbd4
  408404:	jne    0x408477
  408406:	sub    esp,ebx
  408408:	fsubr  QWORD PTR [ebp+0x2e0b2ec5]
  40840e:	dec    edx
  40840f:	sbb    al,0xdb
  408411:	push   ebx
  408412:	or     cl,0x24
  408415:	imul   edi,DWORD PTR [ecx-0x41344cff],0xffffffb3
  40841c:	inc    edx
  40841d:	xchg   esp,eax
  40841e:	in     eax,dx
  40841f:	add    esi,edi
  408421:	js     0x4083da
  408423:	cs jl  0x408453
  408426:	mov    ebp,0xcefe4277
  40842b:	mov    ebx,DWORD PTR [eax-0x238e801d]
  408431:	aas    
  408432:	push   edi
  408433:	in     al,0xcf
  408435:	push   ebx
  408436:	xchg   esp,eax
  408437:	jne    0x4083bc
  408439:	xor    al,0x96
  40843b:	cmp    al,0x57
  40843d:	pop    ss
  40843e:	and    edx,DWORD PTR [ecx-0x26]
  408441:	sbb    eax,0x97bc97d6
  408446:	pusha  
  408447:	xchg   edx,eax
  408448:	jne    0x408472
  40844a:	push   es
  40844b:	ds ins DWORD PTR es:[edi],dx
  40844d:	add    esi,esi
  40844f:	mov    DWORD PTR [edx+0x2b4835d1],ecx
  408455:	fst    QWORD PTR [ebx]
  408457:	test   BYTE PTR [edi+0x71],dh
  40845a:	fst    QWORD PTR [eax+edi*1-0x6a]
  40845e:	int3   
  40845f:	jne    0x40846a
  408461:	mov    ds:0x35a72c2f,eax
  408466:	cdq    
  408467:	lds    ax,DWORD PTR [ebp-0x53]
  40846b:	(bad)  
  40846d:	cmp    al,0xb3
  40846f:	rol    DWORD PTR [ecx+0x11],cl
  408472:	inc    ebp
  408473:	out    0x7f,al
  408475:	inc    esp
  408476:	add    ebp,DWORD PTR [edx+ecx*2]
  408479:	imul   ebp,DWORD PTR [eax],0xa488205c
  40847f:	nop
  408480:	cmc    
  408481:	ins    DWORD PTR es:[edi],dx
  408482:	cmp    eax,0x50cdacf7
  408487:	ds jns 0x408435
  40848a:	scas   al,BYTE PTR es:[edi]
  40848b:	shr    BYTE PTR [ebx-0x60bb3202],0xc7
  408492:	repnz enter 0x7115,0x1f
  408497:	not    esp
  408499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40849a:	loop   0x408432
  40849c:	and    ch,al
  40849e:	xor    BYTE PTR [ebx],0x4f
  4084a1:	data16 stos BYTE PTR es:[edi],al
  4084a3:	iret   
  4084a4:	push   esi
  4084a5:	jle    0x4084ed
  4084a7:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4084a9:	mov    edx,0xd98c8de4
  4084ae:	icebp  
  4084af:	and    al,0x57
  4084b1:	into   
  4084b2:	inc    ebx
  4084b3:	sub    al,0xbc
  4084b5:	and    DWORD PTR [edx],edi
  4084b7:	add    al,0xff
  4084b9:	adc    BYTE PTR [ebp-0x59ef3ae2],dl
  4084bf:	dec    ecx
  4084c0:	in     eax,0x12
  4084c2:	aaa    
  4084c3:	pop    esp
  4084c4:	imul   esi,DWORD PTR [esi+0x72173528],0xbd24db38
  4084ce:	ret    0x86a8
  4084d1:	rol    BYTE PTR [edx-0x72],0xae
  4084d5:	inc    ecx
  4084d6:	ret    0x14c1
  4084d9:	mov    ebp,0x2c17835f
  4084de:	pop    ss
  4084df:	cmp    BYTE PTR [esp+eax*2-0x48],bl
  4084e3:	jo     0x4084c4
  4084e5:	(bad)  
  4084e6:	shl    BYTE PTR [esi],0x3f
  4084e9:	inc    edi
  4084ea:	out    0xcd,al
  4084ec:	pop    esp
  4084ed:	adc    ecx,DWORD PTR [esi]
  4084ef:	inc    edi
  4084f0:	mov    esp,0x2c859d71
  4084f5:	iret   
  4084f6:	push   edi
  4084f7:	mov    eax,ds:0x5ba1558e
  4084fc:	dec    esp
  4084fd:	fsub   DWORD PTR [edx+0x2b684922]
  408504:	mov    ebx,0x2300bf78
  408509:	cwde   
  40850a:	sub    eax,0xa350928b
  40850f:	clc    
  408510:	comiss xmm7,DWORD PTR [ebp-0x1a81b059]
  408517:	jmp    DWORD PTR [ebp-0x7cb567ad]
  40851d:	lods   eax,DWORD PTR ds:[esi]
  40851e:	jp     0x4084fc
  408520:	rdtsc  
  408522:	in     al,0xe8
  408524:	cmp    al,0xe7
  408526:	xor    eax,0x8bfc86be
  40852b:	xchg   edx,eax
  40852c:	shl    BYTE PTR [edx],0x4f
  40852f:	pop    ds
  408530:	loop   0x408510
  408532:	xor    eax,0xe612663d
  408537:	scas   eax,DWORD PTR es:[edi]
  408538:	gs mov edx,0x379f80c3
  40853e:	(bad)  
  40853f:	ror    edx,0x2d
  408542:	icebp  
  408543:	test   DWORD PTR [eax+0x466e96bf],ebx
  408549:	fwait
  40854a:	pusha  
  40854b:	cld    
  40854c:	mov    eax,DWORD PTR [eax-0x53d1af40]
  408552:	in     al,0xf4
  408554:	xchg   edi,eax
  408555:	jmp    0x4084fa
  408557:	adc    DWORD PTR [eax-0x55],ebp
  40855a:	outs   dx,DWORD PTR ds:[esi]
  40855b:	mov    eax,ds:0x1f20bb2a
  408560:	sub    edx,eax
  408562:	iret   
  408563:	add    eax,0x724ed4d6
  408568:	pop    ebp
  408569:	in     eax,0x28
  40856b:	in     al,0x6c
  40856d:	(bad)  
  40856f:	cmp    BYTE PTR ds:0xe8f4be4c,ah
  408575:	cmp    ebp,DWORD PTR [edx]
  408577:	adc    edx,ebp
  408579:	jno    0x4085f0
  40857b:	pop    edx
  40857c:	std    
  40857d:	in     eax,0x56
  40857f:	xchg   DWORD PTR [esp+edx*4],eax
  408582:	rcl    BYTE PTR [edi],1
  408584:	cli    
  408585:	int    0xf3
  408587:	ins    BYTE PTR es:[edi],dx
  408588:	lahf   
  408589:	in     al,0x3a
  40858b:	xchg   BYTE PTR [esi],ah
  40858d:	repnz gs mov ebx,0xcc42b325
  408594:	test   al,0x4b
  408596:	mov    eax,0x3af7daef
  40859b:	adc    esp,esi
  40859d:	inc    esp
  40859e:	cs repnz inc eax
  4085a1:	cwde   
  4085a2:	mov    WORD PTR [esi-0x7e],es
  4085a5:	mov    ebp,0xefdbe3aa
  4085aa:	mov    edi,DWORD PTR [esi+eiz*4-0x31ff8df7]
  4085b1:	iret   
  4085b2:	mov    esp,0xe2d49ae0
  4085b7:	mov    cl,0x98
  4085b9:	pop    ecx
  4085ba:	and    eax,0x507acc1b
  4085bf:	nop
  4085c0:	(bad)  
  4085c1:	push   0xffffff93
  4085c3:	ficomp WORD PTR [edi+ebp*4]
  4085c6:	aad    0xcc
  4085c8:	push   ecx
  4085ca:	add    eax,0x581a4046
  4085cf:	add    eax,0x2853b16f
  4085d4:	(bad)  
  4085d5:	stos   BYTE PTR es:[edi],al
  4085d6:	je     0x4085af
  4085d8:	shr    BYTE PTR [ecx-0x390fbe53],1
  4085de:	call   FWORD PTR [ecx-0xb3222d0]
  4085e4:	sbb    ecx,DWORD PTR [ebx]
  4085e6:	or     BYTE PTR [ecx-0x5b81b797],ch
  4085ec:	push   ebx
  4085ed:	popa   
  4085ee:	stos   DWORD PTR es:[edi],eax
  4085ef:	in     al,dx
  4085f0:	sub    al,0x39
  4085f2:	repnz xchg ebp,eax
  4085f4:	stos   DWORD PTR es:[edi],eax
  4085f5:	mov    ecx,0xf78243b2
  4085fa:	dec    eax
  4085fb:	dec    edi
  4085fc:	mov    ah,dh
  4085fe:	cmp    eax,0xe30b7c33
  408603:	call   FWORD PTR [edx-0x16]
  408606:	pop    es
  408607:	outs   dx,DWORD PTR ds:[esi]
  408608:	sti    
  408609:	in     eax,dx
  40860a:	scas   al,BYTE PTR es:[edi]
  40860b:	mov    dl,0xeb
  40860d:	jle    0x408689
  40860f:	jl     0x408645
  408611:	jne    0x4085f7
  408613:	ror    DWORD PTR [esi],1
  408615:	jne    0x4085a0
  408617:	rol    BYTE PTR [eax],1
  408619:	xchg   esi,eax
  40861a:	jge    0x408644
  40861c:	ins    DWORD PTR es:[edi],dx
  40861d:	ffreep st(2)
  40861f:	fs jb  0x408622
  408622:	sub    al,0xa2
  408624:	scas   al,BYTE PTR es:[edi]
  408625:	add    DWORD PTR [esi+0x2],ecx
  408628:	mov    edi,cs
  40862a:	mov    dl,0x57
  40862c:	xchg   edi,eax
  40862d:	stos   BYTE PTR es:[edi],al
  40862e:	aam    0x3a
  408630:	pop    ebx
  408631:	nop
  408632:	or     al,0x10
  408634:	sbb    ebx,DWORD PTR [ecx+eiz*1+0x6cae41d7]
  40863b:	popa   
  40863c:	(bad)  
  40863d:	add    DWORD PTR [edi],ebp
  40863f:	(bad)  
  408640:	xchg   edi,eax
  408641:	xchg   esp,eax
  408642:	in     al,dx
  408643:	cmp    al,0x19
  408645:	dec    BYTE PTR [esi-0x4d12b33f]
  40864b:	xchg   BYTE PTR [esi+0x27b75fef],dl
  408651:	jns    0x40869b
  408653:	sbb    DWORD PTR [edi],0xffffffe4
  408656:	push   cs
  408657:	addr16 sahf 
  408659:	sbb    al,0x6d
  40865b:	cdq    
  40865c:	dec    edx
  40865d:	das    
  40865e:	lock mov al,0x2f
  408661:	jmp    0x408600
  408663:	jne    0x4085e5
  408665:	hlt    
  408666:	and    eax,0xc420355c
  40866b:	fcmovnu st,st(3)
  40866d:	cwde   
  40866e:	test   BYTE PTR [ecx],dh
  408670:	call   0x2209:0x4791f782
  408677:	loop   0x408650
  408679:	pop    ebx
  40867a:	xor    edx,DWORD PTR [ecx-0x4461ba23]
  408680:	add    al,al
  408682:	add    al,0x2b
  408684:	mov    ecx,0x260d24c5
  408689:	jo     0x408663
  40868b:	sub    DWORD PTR [ecx],esp
  40868d:	(bad)  
  40868e:	out    0x2e,eax
  408690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408691:	xchg   edi,eax
  408692:	jp     0x408667
  408694:	jb     0x4086a5
  408696:	pop    ebp
  408697:	dec    edx
  408698:	inc    edx
  408699:	sbb    ebp,esi
  40869b:	stos   DWORD PTR es:[edi],eax
  40869c:	xchg   BYTE PTR [ebx+0x308a1083],dl
  4086a2:	jno    0x4086d3
  4086a4:	cmc    
  4086a5:	call   0xaf6ae2c1
  4086aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086ab:	jo     0x4086a2
  4086ad:	mov    dl,0x57
  4086af:	inc    ebp
  4086b0:	mov    ebp,0xd5ed58f9
  4086b5:	fcomi  st,st(5)
  4086b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086b8:	test   eax,0x3b1d6c6a
  4086bd:	stos   BYTE PTR es:[edi],al
  4086be:	mov    bh,0x62
  4086c0:	fcomp  QWORD PTR [edi-0x1cf32d3f]
  4086c6:	fimul  WORD PTR [esi]
  4086c8:	fidiv  WORD PTR [esi]
  4086ca:	mov    ebp,esp
  4086cc:	das    
  4086cd:	dec    ebx
  4086ce:	mov    ah,0xc4
  4086d0:	mov    ebp,fs
  4086d2:	ja     0x408705
  4086d4:	jae    0x408717
  4086d6:	push   esp
  4086d7:	dec    esp
  4086d8:	dec    esp
  4086d9:	cmp    DWORD PTR [eax-0x1d73324c],0xffffffd9
  4086e0:	jo     0x408677
  4086e2:	inc    esp
  4086e3:	retf   0x2a62
  4086e6:	sub    eax,edx
  4086e8:	push   ebx
  4086e9:	jmp    DWORD PTR [edx-0x7ab1bfec]
  4086ef:	scas   al,BYTE PTR es:[edi]
  4086f0:	sbb    DWORD PTR [ebx-0x19],edx
  4086f3:	mov    ds:0xe822721b,eax
  4086f8:	adc    DWORD PTR [ebp-0x5bc63026],esi
  4086fe:	or     eax,0x5a210261
  408703:	jae    0x4086f1
  408705:	dec    edx
  408706:	sbb    DWORD PTR [edx-0x66],esp
  408709:	xchg   ebp,eax
  40870a:	cmp    BYTE PTR [ecx+0x20],bh
  40870d:	cmc    
  40870e:	popa   
  40870f:	or     eax,edi
  408711:	xor    esp,DWORD PTR ds:0x86264e0e
  408717:	inc    eax
  408718:	xor    eax,0xe397706f
  40871d:	neg    BYTE PTR [ebp+0x34]
  408720:	pop    edx
  408721:	pop    ax
  408723:	fild   DWORD PTR [edx+eax*1]
  408726:	dec    esi
  408727:	push   esi
  408728:	fiadd  DWORD PTR [edx+0x6dfaf9a8]
  40872e:	in     al,dx
  40872f:	mov    gs,esp
  408731:	(bad)  
  408732:	shl    DWORD PTR ss:[ebx-0x6c7c6351],1
  408739:	imul   edx,DWORD PTR [edx],0x793c27c7
  40873f:	pusha  
  408740:	addr16 cs xchg edi,eax
  408743:	mov    bh,0xdc
  408745:	add    eax,0x81cdd17a
  40874a:	ret    
  40874b:	mov    eax,0xbe3d2c8c
  408750:	jno    0x408741
  408752:	inc    ebx
  408753:	pop    ss
  408754:	dec    edx
  408755:	inc    edi
  408756:	cmp    DWORD PTR ss:[eax-0x2b],ebx
  40875a:	push   0x2aa05d5f
  40875f:	out    dx,al
  408760:	xor    al,0x5
  408762:	loope  0x408740
  408764:	mov    bl,0x8b
  408766:	xor    DWORD PTR [ebp+0x516c4756],esi
  40876c:	or     al,0x62
  40876e:	dec    eax
  40876f:	add    BYTE PTR [edi+0x1e78c388],bh
  408775:	out    dx,al
  408776:	mov    ebp,DWORD PTR [edi-0x3c]
  408779:	jns    0x4087ac
  40877b:	(bad)  
  40877c:	leave  
  40877d:	in     al,0xac
  40877f:	sti    
  408780:	sbb    edx,DWORD PTR [ebx]
  408782:	and    al,BYTE PTR [eax-0x68bf822c]
  408788:	repz xor cl,cl
  40878b:	and    edi,DWORD PTR [edx]
  40878d:	iret   
  40878e:	leave  
  40878f:	pop    eax
  408790:	ins    BYTE PTR es:[edi],dx
  408791:	sub    BYTE PTR [eiz*4-0x62dbf15a],ah
  408798:	xor    bh,bl
  40879a:	or     eax,0x5e8e8ce4
  40879f:	(bad)  
  4087a0:	imul   esi
  4087a2:	push   ss
  4087a3:	and    eax,0xdf99cd8a
  4087a8:	sub    BYTE PTR [ecx+esi*8],cl
  4087ab:	xchg   edx,eax
  4087ac:	int    0x7e
  4087ae:	out    0xd5,al
  4087b0:	inc    ecx
  4087b1:	int    0xaf
  4087b3:	(bad)  
  4087b5:	leave  
  4087b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087b7:	jecxz  0x40882f
  4087b9:	add    eax,0x1d16bf65
  4087be:	aas    
  4087bf:	or     eax,DWORD PTR [edx]
  4087c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087c2:	mov    ebx,0x5069deb3
  4087c7:	repz mov esi,0xca824439
  4087cd:	mov    ebx,0x412ce7fb
  4087d2:	inc    esp
  4087d3:	adc    esp,DWORD PTR [ebx+0x6b]
  4087d6:	xor    eax,0xec191c48
  4087db:	and    ah,al
  4087dd:	add    edi,DWORD PTR [ebx]
  4087df:	adc    al,ch
  4087e1:	sti    
  4087e2:	(bad)  
  4087e4:	fs or  al,al
  4087e7:	cmp    ch,BYTE PTR [edx]
  4087e9:	xchg   edi,eax
  4087ea:	add    esp,ecx
  4087ec:	or     eax,0x386c121
  4087f1:	ja     0x408781
  4087f3:	pop    ebx
  4087f4:	lock fcomp DWORD PTR [ecx+eax*1+0xd]
  4087f9:	mov    ebp,0xce33943b
  4087fe:	popf   
  4087ff:	cli    
  408800:	xor    eax,0x4831f6c8
  408805:	adc    DWORD PTR [esp+edx*4-0x3836f3f],0xffffffb1
  40880d:	lahf   
  40880e:	and    BYTE PTR [eax],bl
  408810:	test   DWORD PTR [edx+0x3f],edi
  408813:	outs   dx,BYTE PTR ds:[esi]
  408814:	xor    ebx,0xffffff86
  408817:	(bad)  
  408818:	pushf  
  408819:	cmp    BYTE PTR [ecx-0x29c1b90e],bl
  40881f:	mov    dh,0x70
  408821:	inc    eax
  408822:	outs   dx,BYTE PTR ds:[esi]
  408823:	add    BYTE PTR [esi-0x9d16c4d],al
  408829:	mov    al,dh
  40882b:	popf   
  40882c:	rcl    DWORD PTR [ecx+0x7a7e5a30],1
  408832:	add    bl,BYTE PTR [ebx]
  408834:	and    BYTE PTR [esi-0x36],ah
  408837:	test   al,0xc6
  408839:	shr    edi,1
  40883b:	inc    ebp
  40883c:	sbb    ebp,0xffffffca
  40883f:	sbb    eax,eax
  408841:	jl     0x4087fe
  408843:	daa    
  408844:	inc    ecx
  408845:	arpl   dx,ax
  408847:	jo     0x408803
  408849:	outs   dx,DWORD PTR ds:[esi]
  40884a:	cmp    eax,0xa401cb97
  40884f:	xor    DWORD PTR [ecx-0x4b6f7525],0xcbc21948
  408859:	mov    dh,0xa2
  40885b:	clc    
  40885c:	mov    BYTE PTR [eax-0x2ebf6784],bh
  408862:	pop    ebp
  408863:	sti    
  408864:	mov    edx,0x654f4542
  408869:	and    BYTE PTR [edi],dh
  40886b:	je     0x40881f
  40886d:	(bad)
  408871:	cmp    BYTE PTR [ebx],ch
  408873:	jecxz  0x408892
  408875:	jl     0x408848
  408877:	clc    
  408878:	bound  ebx,QWORD PTR [eax+0x67]
  40887b:	ror    BYTE PTR [ebp-0x976a70c],0xe3
  408882:	loopne 0x408882
  408884:	push   0xc3e335c2
  408889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40888a:	sbb    BYTE PTR [ebx],ah
  40888c:	cmp    eax,0xc561f038
  408891:	jnp    0x4088d1
  408893:	call   0xa0e9:0xfda26dad
  40889a:	xchg   esi,eax
  40889b:	(bad)  
  40889c:	xchg   ecx,eax
  40889d:	sub    esi,DWORD PTR [eax]
  40889f:	jmp    0xadc3:0xb259a057
  4088a6:	sub    esp,DWORD PTR [ebp+ebp*2+0x7a01b978]
  4088ad:	and    eax,0x66077ea8
  4088b2:	xor    al,0xc9
  4088b4:	dec    edi
  4088b5:	daa    
  4088b6:	inc    edi
  4088b7:	popa   
  4088b8:	je     0x408842
  4088ba:	fnop   
  4088bc:	loopne 0x40893c
  4088be:	retf   0x16
  4088c1:	cmp    DWORD PTR [ebx+0x66844f22],ebp
  4088c7:	mov    ah,0x73
  4088c9:	jg     0x408929
  4088cb:	cmp    BYTE PTR [eax-0x4f],dl
  4088ce:	xchg   BYTE PTR [edi+0x32313141],al
  4088d4:	icebp  
  4088d5:	hlt    
  4088d6:	dec    BYTE PTR [esi]
  4088d8:	mul    dl
  4088da:	mov    DWORD PTR [edi-0x1bed5f27],eax
  4088e0:	xchg   ebx,eax
  4088e1:	xchg   ebp,eax
  4088e2:	test   eax,0x4de8fdc4
  4088e7:	addr16 lahf 
  4088e9:	jno    0x4088a1
  4088eb:	neg    DWORD PTR [esp+esi*4-0x13]
  4088ef:	dec    ebp
  4088f0:	ret    0x50f4
  4088f3:	outs   dx,BYTE PTR ds:[esi]
  4088f4:	jg     0x408933
  4088f6:	shl    BYTE PTR [ebp+0x61],1
  4088f9:	idiv   BYTE PTR [ebx-0x45822b5d]
  4088ff:	mov    ds:0xde77d556,eax
  408904:	or     eax,DWORD PTR [esi+0x62]
  408907:	lods   al,BYTE PTR ds:[esi]
  408908:	aad    0x36
  40890a:	push   edi
  40890b:	sbb    BYTE PTR [eax+0x39ba11dd],ah
  408911:	mov    al,0xee
  408913:	jne    0x4088c9
  408915:	xchg   ecx,eax
  408916:	push   edx
  408917:	les    eax,FWORD PTR [eax]
  408919:	adc    al,0x77
  40891b:	icebp  
  40891c:	xchg   ebx,eax
  40891d:	pusha  
  40891e:	lods   eax,DWORD PTR ds:[esi]
  40891f:	stos   BYTE PTR es:[edi],al
  408920:	cmp    ah,BYTE PTR [ebx+edi*1]
  408923:	cld    
  408924:	sbb    DWORD PTR [ecx+0x3549ecca],ecx
  40892a:	popf   
  40892b:	push   esi
  40892c:	sub    eax,0xb2099a6c
  408931:	fnstsw WORD PTR [ebx-0x7d]
  408934:	sub    ah,BYTE PTR [eax]
  408936:	bswap  edi
  408938:	xor    BYTE PTR [edx],cl
  40893a:	xchg   edx,eax
  40893b:	test   DWORD PTR [esi-0x35943b76],ebx
  408941:	mov    bl,0x18
  408943:	mov    dl,0xa1
  408945:	dec    esi
  408946:	outs   dx,DWORD PTR ds:[esi]
  408947:	cmp    DWORD PTR [edx+0x33a8243],0xdb758370
  408951:	push   0xffffff9b
  408953:	dec    ebx
  408954:	mov    bl,0x30
  408956:	push   esp
  408957:	pushf  
  408958:	sub    bl,BYTE PTR [esi]
  40895a:	stc    
  40895b:	mov    ah,0xe
  40895d:	adc    ch,BYTE PTR [eax+0x75348918]
  408963:	mov    fs:0x7187297f,eax
  408969:	xor    DWORD PTR ds:0x28f7003e,ebp
  40896f:	adc    ecx,DWORD PTR [edi-0xf4e56f4]
  408975:	into   
  408976:	ins    BYTE PTR es:[edi],dx
  408977:	addr16 cdq 
  408979:	xchg   esp,eax
  40897a:	sub    BYTE PTR [edx+0x7a2c6ff8],0xe2
  408981:	pop    esp
  408982:	xlat   BYTE PTR ds:[ebx]
  408983:	sub    esp,DWORD PTR [esi+ecx*8]
  408986:	jns    0x4089ed
  408988:	div    bl
  40898a:	cmp    cl,BYTE PTR [edi+esi*2-0x54]
  40898e:	mov    ch,0x23
  408990:	mov    dh,ch
  408992:	test   al,0x93
  408994:	pop    esp
  408995:	pop    ds
  408996:	hlt    
  408997:	dec    esp
  408998:	adc    ecx,ebx
  40899a:	mov    al,0x5a
  40899c:	icebp  
  40899d:	ins    BYTE PTR es:[edi],dx
  40899e:	mov    DWORD PTR [ebp-0x7a7626a7],0x9486282e
  4089a8:	mov    dh,0x19
  4089aa:	daa    
  4089ab:	iret   
  4089ac:	add    al,bl
  4089ae:	inc    esp
  4089af:	nop
  4089b0:	lahf   
  4089b1:	in     eax,dx
  4089b2:	add    al,0xf0
  4089b4:	retf   0x3d90
  4089b7:	dec    ebp
  4089b8:	stos   BYTE PTR es:[edi],al
  4089b9:	push   ebx
  4089ba:	sub    esp,DWORD PTR [eax-0x9]
  4089bd:	pop    es
  4089be:	mov    ?,WORD PTR [eax-0x73b5215d]
  4089c4:	pop    edx
  4089c5:	arpl   WORD PTR [esi],di
  4089c7:	icebp  
  4089c8:	and    dl,BYTE PTR [edi+0x79]
  4089cb:	and    eax,0xa078ed30
  4089d0:	(bad)  
  4089d2:	imul   eax,DWORD PTR [esi+0x4303562f],0xe6854d45
  4089dc:	sbb    eax,esp
  4089de:	stc    
  4089df:	sbb    DWORD PTR [esi],edx
  4089e1:	popw   ds
  4089e3:	push   cs
  4089e4:	(bad)  
  4089e5:	ds xchg ebp,eax
  4089e7:	cs pop ecx
  4089e9:	in     al,dx
  4089ea:	js     0x408a3c
  4089ec:	xchg   ecx,eax
  4089ed:	sub    eax,DWORD PTR [edi+0x54f3cf63]
  4089f3:	push   0xffffffae
  4089f5:	inc    ebp
  4089f6:	scas   eax,DWORD PTR es:[edi]
  4089f7:	gs out dx,al
  4089f9:	xchg   esp,eax
  4089fa:	pop    ecx
  4089fb:	data16 aaa 
  4089fd:	xor    al,cl
  4089ff:	outs   dx,DWORD PTR ds:[esi]
  408a00:	sub    esi,ebx
  408a02:	repnz mov dh,ch
  408a05:	stc    
  408a06:	pop    eax
  408a07:	(bad)  
  408a08:	loop   0x408a29
  408a0a:	add    bh,ch
  408a0c:	sbb    al,0xc8
  408a0e:	cmp    al,0xe7
  408a10:	ins    BYTE PTR es:[edi],dx
  408a11:	xor    DWORD PTR [esi+0x50],edx
  408a14:	add    DWORD PTR [edx+0x59ac9f9],0x5ec8337b
  408a1e:	xchg   edx,eax
  408a1f:	leave  
  408a20:	adc    DWORD PTR [ecx+0xe],eax
  408a23:	aas    
  408a24:	outs   dx,DWORD PTR ds:[esi]
  408a25:	mov    es,WORD PTR [eax]
  408a27:	sbb    ebp,DWORD PTR [edx+edi*8+0x775e18ac]
  408a2e:	jg     0x408a5d
  408a30:	push   esp
  408a31:	add    BYTE PTR [eax+0x4d],cl
  408a34:	jnp    0x408a4f
  408a36:	in     eax,0xc6
  408a38:	xor    DWORD PTR [edx+0x5d2ba77f],0xe6589a3
  408a42:	and    cl,bh
  408a44:	mov    dh,0x6d
  408a46:	outs   dx,BYTE PTR ds:[esi]
  408a47:	xchg   ecx,eax
  408a48:	jge    0x408a70
  408a4a:	aas    
  408a4b:	lods   al,BYTE PTR ds:[esi]
  408a4c:	xchg   ch,dh
  408a4e:	sub    al,0x7a
  408a50:	push   ebx
  408a51:	cmp    edx,DWORD PTR [ebx*8-0x2600af15]
  408a58:	xchg   esi,eax
  408a59:	and    ah,dh
  408a5b:	inc    ecx
  408a5c:	mov    DWORD PTR [ecx],ebx
  408a5e:	adc    DWORD PTR [eax+0x3a187722],esi
  408a64:	pop    eax
  408a65:	xor    DWORD PTR [esi],ecx
  408a67:	or     ch,BYTE PTR [esp+edi*1]
  408a6a:	sub    DWORD PTR [edx-0x58],edi
  408a6d:	jl     0x408ad1
  408a6f:	fisubr DWORD PTR [ebp-0x19cb928]
  408a75:	test   BYTE PTR [edx],cl
  408a77:	pop    edx
  408a78:	xchg   ebp,eax
  408a79:	add    cl,BYTE PTR [edi-0x1f]
  408a7c:	clc    
  408a7d:	push   eax
  408a7e:	or     DWORD PTR [ebp-0x4d],edi
  408a81:	sbb    eax,0xd60e4976
  408a86:	xchg   ebp,eax
  408a87:	adc    edx,DWORD PTR [edx]
  408a89:	mov    edx,0x704c0096
  408a8e:	pop    ss
  408a8f:	sub    edx,eax
  408a91:	pop    edi
  408a92:	inc    ebp
  408a93:	push   edi
  408a94:	repnz dec eax
  408a96:	jge    0x408a7c
  408a98:	sbb    edx,DWORD PTR [edi-0x599473d7]
  408a9e:	sti    
  408a9f:	test   dh,al
  408aa1:	sbb    eax,0x601f5c10
  408aa6:	sbb    eax,0x7ecc04f2
  408aab:	jg     0x408a30
  408aad:	push   ebx
  408aae:	cli    
  408aaf:	push   ebx
  408ab0:	stc    
  408ab1:	pop    ds
  408ab2:	ds retf 0x301d
  408ab6:	sbb    al,0xf0
  408ab8:	mov    esi,0xfe4e7195
  408abd:	ds stc 
  408abf:	je     0x408a46
  408ac1:	or     bh,BYTE PTR [edi-0x47]
  408ac4:	cs mov ebp,0x5938adc6
  408aca:	cld    
  408acb:	outs   dx,BYTE PTR ds:[esi]
  408acc:	or     edi,DWORD PTR [edx+0x23]
  408acf:	sbb    ebx,ecx
  408ad1:	lock pop esp
  408ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ad4:	stos   DWORD PTR es:[edi],eax
  408ad5:	mov    eax,0xb29c8049
  408ada:	push   ss
  408adb:	fidivr DWORD PTR [edx-0x4a1a13b0]
  408ae1:	ins    DWORD PTR es:[edi],dx
  408ae2:	sub    esi,ebx
  408ae4:	das    
  408ae5:	sbb    al,0x7d
  408ae7:	and    esi,esi
  408ae9:	sbb    BYTE PTR [eax+0x1d495f18],dh
  408aef:	and    esi,DWORD PTR [edi+0x4eac7954]
  408af5:	cmp    ch,bl
  408af7:	(bad)  
  408af8:	mov    bh,0xea
  408afa:	lock addr16 inc edx
  408afd:	xor    DWORD PTR ds:0x426e5c3b,ebx
  408b03:	sub    eax,0x32d6c84b
  408b08:	pop    ss
  408b09:	mov    ebp,0x1a1675af
  408b0e:	in     eax,dx
  408b0f:	and    DWORD PTR [ebp+0x71a92f62],ecx
  408b15:	(bad)
  408b19:	in     eax,dx
  408b1a:	push   eax
  408b1b:	pop    esi
  408b1c:	sub    eax,0x3d417848
  408b21:	jne    0x408b7a
  408b23:	mov    ds:0xac10fc17,eax
  408b28:	pop    edx
  408b29:	sbb    ch,bl
  408b2b:	fs pusha 
  408b2d:	xchg   ebx,eax
  408b2e:	jmp    0xc6df:0x3cc741a0
  408b35:	push   edi
  408b36:	mov    bl,BYTE PTR [eax]
  408b38:	in     eax,dx
  408b39:	test   eax,0x1f5b1374
  408b3e:	sbb    eax,0x6a9148a2
  408b43:	stos   BYTE PTR es:[edi],al
  408b44:	stc    
  408b45:	jl     0x408ba3
  408b47:	push   ss
  408b48:	mov    edi,es
  408b4a:	adc    al,0x54
  408b4c:	stos   DWORD PTR es:[edi],eax
  408b4d:	(bad)  
  408b4e:	sahf   
  408b4f:	adc    DWORD PTR [ebx+0x5c],ecx
  408b52:	arpl   WORD PTR [eax+0x28e04dfc],bp
  408b58:	jno    0x408bbe
  408b5a:	jne    0x408b4b
  408b5c:	sbb    ebx,DWORD PTR [edi]
  408b5e:	push   0x16011d57
  408b63:	xor    al,0xd
  408b65:	adc    edx,DWORD PTR ds:0x7590f377
  408b6b:	mov    ch,0xc2
  408b6d:	and    al,bh
  408b6f:	ret    0x25a8
  408b72:	in     al,dx
  408b73:	jno    0x408b83
  408b75:	(bad)  
  408b76:	xchg   esp,eax
  408b77:	adc    BYTE PTR [ecx-0x3c],al
  408b7a:	(bad)  
  408b7b:	nop
  408b7c:	adc    al,0x5
  408b7e:	xchg   ebx,eax
  408b7f:	inc    edi
  408b80:	idiv   DWORD PTR [ebx-0x15]
  408b83:	popa   
  408b84:	and    eax,0xee4b37a0
  408b89:	xor    eax,0x68b4105c
  408b8e:	sbb    bl,BYTE PTR [ecx-0x1]
  408b91:	nop
  408b92:	rcr    ah,0x7f
  408b95:	inc    esi
  408b96:	adc    BYTE PTR [eax+0x47],cl
  408b99:	int    0x1a
  408b9b:	dec    ebx
  408b9c:	push   esi
  408b9d:	dec    eax
  408b9e:	(bad)
  408ba1:	outs   dx,BYTE PTR ds:[esi]
  408ba2:	repnz push 0xfffffff9
  408ba5:	xor    al,0x3a
  408ba7:	add    esp,ebp
  408ba9:	xchg   edi,eax
  408baa:	add    BYTE PTR [edi-0x74],cl
  408bad:	js     0x408b5f
  408baf:	repz (bad) 
  408bb1:	push   esi
  408bb2:	mov    ah,0x52
  408bb4:	ja     0x408b41
  408bb6:	call   0x9a198bd7
  408bbb:	outs   dx,DWORD PTR ds:[esi]
  408bbc:	jns    0x408bf6
  408bbe:	sahf   
  408bbf:	lea    eax,[ebx+0x105381a4]
  408bc5:	fild   WORD PTR [edi]
  408bc7:	jge    0x408b80
  408bc9:	adc    ebp,eax
  408bcb:	xor    eax,0x4402f5bf
  408bd0:	repnz addr16 inc esp
  408bd3:	aas    
  408bd4:	inc    esp
  408bd5:	mov    ebx,0x87ae608a
  408bda:	outs   dx,DWORD PTR ds:[esi]
  408bdb:	rcr    BYTE PTR ds:[edx-0x1d055517],cl
  408be2:	outs   dx,DWORD PTR ds:[esi]
  408be3:	sti    
  408be4:	cli    
  408be5:	mov    bh,0x68
  408be7:	adc    esp,eax
  408be9:	pop    ebx
  408bea:	push   ebp
  408beb:	je     0x408c44
  408bed:	inc    edi
  408bee:	out    0x90,eax
  408bf0:	or     dl,0xd8
  408bf3:	and    ch,BYTE PTR [esi-0x42]
  408bf6:	fild   WORD PTR [edi+0x686329ba]
  408bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bfe:	mov    bh,0xd6
  408c00:	pop    ecx
  408c01:	call   0x8328b6e4
  408c06:	cli    
  408c07:	imul   ecx,ecx,0xc
  408c0a:	mov    fs,WORD PTR [esi-0x62]
  408c0d:	cmp    BYTE PTR [esi],dh
  408c0f:	repnz or al,0x25
  408c12:	rcl    ah,cl
  408c14:	adc    bh,ch
  408c16:	ror    al,1
  408c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c19:	shl    DWORD PTR [esi],1
  408c1b:	jne    0x408c7f
  408c1d:	jmp    0x96e4:0xc7768f84
  408c24:	imul   ecx,DWORD PTR ds:0xc50441b0,0x3b9ba481
  408c2e:	sahf   
  408c2f:	and    DWORD PTR [eax],0x3c
  408c32:	pop    eax
  408c33:	sbb    esi,edx
  408c35:	fnop   
  408c37:	cwde   
  408c38:	mov    esp,0x9a39d5b6
  408c3d:	inc    ebp
  408c3e:	mov    ch,bl
  408c40:	fstp   DWORD PTR [ebx]
  408c42:	in     al,dx
  408c43:	aas    
  408c44:	sbb    DWORD PTR [ecx],edx
  408c46:	xchg   esi,eax
  408c47:	xchg   esi,eax
  408c48:	sub    ch,ah
  408c4a:	xor    BYTE PTR [esi],dh
  408c4c:	sahf   
  408c4d:	or     al,0x8d
  408c4f:	push   esp
  408c50:	dec    edx
  408c51:	dec    esp
  408c52:	fst    DWORD PTR [ebp-0xc]
  408c55:	mov    ds:0xe368f584,al
  408c5a:	mov    ecx,edi
  408c5c:	xor    eax,0x7fdc1fc7
  408c61:	in     eax,dx
  408c62:	jae    0x408c52
  408c64:	inc    edx
  408c65:	xchg   ebp,eax
  408c66:	adc    ah,BYTE PTR [eax+0x46e54377]
  408c6c:	cmp    bl,BYTE PTR [ebx+0x3e]
  408c6f:	inc    edx
  408c70:	or     BYTE PTR [ebp-0x7a4aff92],dh
  408c76:	jecxz  0x408c1d
  408c78:	into   
  408c79:	in     eax,dx
  408c7a:	add    DWORD PTR [edx+0x30],ebx
  408c7d:	repnz inc ebx
  408c7f:	jecxz  0x408c4d
  408c81:	push   0x7c675db8
  408c86:	dec    ebp
  408c87:	xor    bl,dh
  408c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c8a:	jmp    0x408d03
  408c8c:	repnz rcl DWORD PTR [eax+eax*8+0x1c],cl
  408c91:	add    ah,dh
  408c93:	xor    bh,BYTE PTR ds:0x3c0cb4fb
  408c99:	push   esi
  408c9a:	cmp    BYTE PTR [edx+eax*8-0x1f],0xf0
  408c9f:	and    eax,0x80f307c4
  408ca4:	pop    ebp
  408ca5:	call   0xc960:0x3542939d
  408cac:	add    DWORD PTR [edx+0xe],esp
  408caf:	pop    ebx
  408cb0:	xor    eax,0x9b680d01
  408cb5:	sbb    eax,edi
  408cb7:	dec    eax
  408cb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cb9:	icebp  
  408cba:	mov    dh,0x31
  408cbc:	fwait
  408cbd:	jo     0x408c89
  408cbf:	mov    eax,0xa10447f3
  408cc4:	rcl    dl,0xf3
  408cc7:	cmp    al,0xf0
  408cc9:	sub    al,0x3b
  408ccb:	dec    edx
  408ccc:	out    0x92,eax
  408cce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ccf:	inc    eax
  408cd0:	scas   eax,DWORD PTR es:[edi]
  408cd1:	inc    esi
  408cd2:	imul   esi,esp,0xfffffffa
  408cd5:	xor    BYTE PTR ds:0xdaee63f2,0x6c
  408cdc:	sar    ebp,0x85
  408cdf:	in     eax,dx
  408ce0:	add    al,0xaa
  408ce2:	mov    ebx,DWORD PTR [esi]
  408ce4:	or     esp,ecx
  408ce6:	dec    esi
  408ce7:	out    dx,al
  408ce8:	push   ecx
  408ce9:	arpl   WORD PTR ds:0x84181f83,bx
  408cef:	test   BYTE PTR [ecx+0x8],bl
  408cf2:	dec    esp
  408cf3:	pop    ebx
  408cf4:	inc    ebx
  408cf5:	mov    ds:0x2fbb4963,al
  408cfa:	out    0x98,eax
  408cfc:	mov    ds:0x960d140,eax
  408d01:	xchg   ecx,eax
  408d02:	je     0x408cb8
  408d04:	add    eax,0x6fc585cb
  408d09:	mov    ch,0xc2
  408d0b:	add    eax,0x7f011d63
  408d10:	ret    
  408d11:	mov    eax,0x4d260534
  408d16:	sub    BYTE PTR [ebp-0x1],ah
  408d19:	aaa    
  408d1a:	adc    BYTE PTR [edx+0x2],al
  408d1d:	mov    bh,0x30
  408d1f:	cs dec eax
  408d21:	push   esi
  408d22:	and    ebx,eax
  408d24:	push   ss
  408d25:	shl    DWORD PTR [eax],cl
  408d27:	xchg   ebx,eax
  408d28:	aam    0x50
  408d2a:	icebp  
  408d2b:	xchg   edi,eax
  408d2c:	jne    0x408cce
  408d2e:	aas    
  408d2f:	jge    0x408cd9
  408d31:	sub    esp,eax
  408d33:	pop    ecx
  408d34:	mov    al,ds:0x4f34b1ef
  408d39:	dec    esi
  408d3a:	or     BYTE PTR [ecx],0xd0
  408d3d:	mov    es,WORD PTR [eax+0x6ff4c721]
  408d43:	jmp    0x226ea5d
  408d48:	jmp    0x408cf5
  408d4a:	stos   BYTE PTR es:[edi],al
  408d4b:	nop
  408d4c:	outs   dx,DWORD PTR ds:[esi]
  408d4d:	and    edx,DWORD PTR [ecx+0x1e]
  408d50:	loope  0x408d64
  408d52:	pop    esp
  408d53:	adc    al,0x39
  408d55:	cmp    dh,dl
  408d57:	add    eax,DWORD PTR [esp+esi*8-0x1de6fd8]
  408d5e:	sbb    DWORD PTR [edi-0x5a],ecx
  408d61:	push   es
  408d62:	rcl    BYTE PTR [eax],1
  408d64:	mov    dl,0x21
  408d66:	repnz jecxz 0x408dc9
  408d69:	mov    edx,esp
  408d6b:	adc    eax,0xa2c10e16
  408d70:	inc    ebp
  408d71:	dec    ecx
  408d72:	jg     0x408d31
  408d74:	jp     0x408cff
  408d76:	jns    0x408d3e
  408d78:	retf   
  408d79:	in     eax,0x78
  408d7b:	xlat   BYTE PTR ds:[ebx]
  408d7c:	push   esi
  408d7d:	jae    0x408d3e
  408d7f:	shl    BYTE PTR [edi+0x5d],cl
  408d82:	(bad)  
  408d83:	cmp    eax,0x2656e9ff
  408d88:	loope  0x408ddb
  408d8a:	adc    dl,BYTE PTR [ebp+esi*4-0x59]
  408d8e:	or     eax,0x9003a7ad
  408d93:	repnz xor BYTE PTR [esi+0x7e],dl
  408d97:	sbb    al,0xf0
  408d99:	push   es
  408d9a:	ds repnz (bad) 
  408d9d:	in     al,dx
  408d9e:	push   ebx
  408d9f:	mov    esp,0x60c4e176
  408da4:	ror    BYTE PTR [ebx-0xb1d1c33],1
  408daa:	cdq    
  408dab:	jns    0x408e18
  408dad:	jmp    0x408d76
  408daf:	xor    eax,0x9ce2ae68
  408db4:	out    dx,eax
  408db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408db6:	sti    
  408db7:	cwde   
  408db8:	mov    ebp,edx
  408dba:	(bad)  
  408dbb:	pop    esp
  408dbc:	sbb    ebx,DWORD PTR [esi+0x7d]
  408dbf:	jmp    0x408e0a
  408dc1:	xchg   esp,eax
  408dc2:	cmp    eax,0x7c0dac8c
  408dc7:	mov    edx,0xacd7452f
  408dcc:	aad    0x95
  408dce:	loop   0x408dc8
  408dd0:	and    eax,0x9a11d272
  408dd5:	addr16 jmp 0x408df7
  408dd8:	mov    dh,al
  408dda:	test   DWORD PTR [ecx-0x459fef62],edi
  408de0:	mov    esi,0xada200f9
  408de5:	daa    
  408de6:	iret   
  408de7:	shl    BYTE PTR [ebx+0x769e44fb],1
  408ded:	lds    ecx,FWORD PTR [edi-0x34664ad0]
  408df3:	push   ss
  408df4:	mov    fs,WORD PTR [ecx+0x39]
  408df7:	shr    DWORD PTR [ebp-0x48],0x5e
  408dfb:	retf   
  408dfc:	pusha  
  408dfd:	mov    ah,0x13
  408dff:	out    0xea,eax
  408e01:	sub    DWORD PTR [eax],esp
  408e03:	jae    0x408dfd
  408e05:	or     dl,al
  408e07:	mov    DWORD PTR [edi+0x24a7f740],esp
  408e0d:	mov    ds:0x6fa67664,al
  408e12:	ja     0x408e36
  408e14:	mov    eax,ds:0x30b8522e
  408e19:	jns    0x408e0a
  408e1b:	mov    ebx,0x63262329
  408e20:	test   bl,ch
  408e22:	and    eax,0x8c4f4dd3
  408e27:	shl    ebx,0x46
  408e2a:	inc    eax
  408e2b:	mov    eax,0x48170986
  408e30:	xorps  xmm3,XMMWORD PTR [ebx+0x6c35c4ec]
  408e37:	pop    esi
  408e38:	push   ebp
  408e39:	push   edi
  408e3a:	fwait
  408e3b:	(bad)  
  408e3c:	jno    0x408de2
  408e3e:	stos   BYTE PTR es:[edi],al
  408e3f:	sbb    DWORD PTR [ecx],ebp
  408e41:	jp     0x408de3
  408e43:	sbb    BYTE PTR [edi],bh
  408e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e46:	pop    ebx
  408e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e48:	addr16 pop edi
  408e4a:	jne    0x408e7a
  408e4c:	int3   
  408e4d:	fstp   QWORD PTR [eax+ebx*2]
  408e50:	(bad)  
  408e51:	push   ebp
  408e52:	shr    DWORD PTR [ebp-0x1d],0x8d
  408e56:	hlt    
  408e57:	mul    cl
  408e59:	sub    DWORD PTR [ebx],eax
  408e5b:	dec    esp
  408e5c:	mov    bl,0x85
  408e5e:	jp     0xe5666205
  408e64:	fcmovnu st,st(2)
  408e66:	adc    al,0x67
  408e68:	xor    BYTE PTR [edi+0x5a3f3e15],bh
  408e6e:	sub    edi,DWORD PTR [ecx-0x2d26718f]
  408e74:	cwde   
  408e75:	pop    ecx
  408e76:	mov    ebp,0x870d6a2c
  408e7b:	sbb    eax,0x871622d2
  408e80:	scas   al,BYTE PTR es:[di]
  408e82:	cmp    edx,DWORD PTR ds:0xcd499917
  408e88:	xor    DWORD PTR [ecx+0x46],ebx
  408e8b:	into   
  408e8c:	add    BYTE PTR [edi-0x16],ah
  408e8f:	pop    ebp
  408e90:	(bad)  
  408e91:	push   0xdf30e72c
  408e96:	sub    dl,BYTE PTR [esi+ebp*4-0x35]
  408e9a:	out    0xae,eax
  408e9c:	cwde   
  408e9d:	fdivr  st,st(0)
  408e9f:	pop    ebp
  408ea0:	test   eax,0x266b18de
  408ea5:	adc    al,0x48
  408ea7:	out    dx,al
  408ea8:	push   edx
  408ea9:	cld    
  408eaa:	gs int3 
  408eac:	neg    DWORD PTR [ebx]
  408eae:	or     eax,DWORD PTR [ebx+eiz*1-0x353959f6]
  408eb5:	clc    
  408eb6:	push   cs
  408eb7:	dec    esp
  408eb8:	out    dx,al
  408eb9:	or     al,BYTE PTR [esi-0x2e]
  408ebc:	addr16 pop ds
  408ebe:	mov    esp,?
  408ec0:	mov    bh,0xc9
  408ec2:	adc    eax,0x2196cdba
  408ec7:	xchg   DWORD PTR [ebx-0x3ff5ca3d],edi
  408ecd:	xor    BYTE PTR ds:0xac321276,bh
  408ed3:	push   edi
  408ed4:	push   ds
  408ed5:	pop    edx
  408ed6:	push   esp
  408ed7:	inc    esp
  408ed8:	lahf   
  408ed9:	cmc    
  408eda:	add    dl,BYTE PTR [ebx]
  408edc:	xchg   ecx,eax
  408edd:	add    ebx,esp
  408edf:	aad    0x30
  408ee1:	jge    0x408e9b
  408ee3:	pop    esp
  408ee4:	jb     0x408ef9
  408ee6:	mov    ch,0x4c
  408ee8:	pop    ds
  408ee9:	jbe    0x408ec0
  408eeb:	xchg   ebx,eax
  408eec:	pop    esp
  408eed:	mov    cl,0xe5
  408eef:	jo     0x408f51
  408ef1:	cmp    DWORD PTR [esi+ebx*8],edi
  408ef4:	mov    edi,0x95f2aea0
  408ef9:	fisub  WORD PTR [ebx+0x12]
  408efc:	rcr    DWORD PTR [edx],cl
  408efe:	imul   eax,DWORD PTR [eax-0xa],0x81426c36
  408f05:	jle    0x408f22
  408f07:	pop    esi
  408f08:	add    BYTE PTR [esi+0x2379db3f],al
  408f0e:	sbb    BYTE PTR [esi-0x2b9c76c],dl
  408f14:	es mov dl,ah
  408f17:	fcomp  DWORD PTR [edi-0x45]
  408f1a:	sub    eax,0x689a1246
  408f1f:	push   cs
  408f20:	xchg   esi,eax
  408f21:	dec    ecx
  408f22:	adc    esi,esi
  408f24:	xchg   sp,ax
  408f26:	xlat   BYTE PTR ds:[ebx]
  408f27:	add    al,BYTE PTR [ecx+0x73434229]
  408f2d:	jb     0x408f88
  408f2f:	shl    BYTE PTR [edi+0x4cbca854],1
  408f35:	or     eax,0xca28f191
  408f3a:	push   ss
  408f3b:	xchg   ebp,eax
  408f3c:	jl     0x408f71
  408f3e:	xor    al,0x1b
  408f40:	enter  0xb0f6,0xf7
  408f44:	push   ebp
  408f45:	fcomp  QWORD PTR [ecx-0x769772ac]
  408f4b:	in     eax,0x29
  408f4d:	pop    ds
  408f4e:	pop    ebp
  408f4f:	lods   eax,DWORD PTR ds:[esi]
  408f51:	pop    ecx
  408f52:	jo     0x408f90
  408f54:	inc    ecx
  408f55:	fistp  WORD PTR [esp-0x74]
  408f59:	call   0x3c92c5e3
  408f5e:	test   BYTE PTR [ebx+0x61],bh
  408f61:	repnz shr BYTE PTR [ebx],cl
  408f64:	add    bh,BYTE PTR [edx]
  408f66:	aaa    
  408f67:	xor    bl,ch
  408f69:	add    esp,DWORD PTR [edi+0x5344c46]
  408f6f:	jmp    0x408fcd
  408f71:	jl     0x408f5d
  408f73:	xchg   DWORD PTR [edx+esi*4+0x18c7b318],edx
  408f7a:	out    0xf2,al
  408f7c:	sub    ebx,DWORD PTR [ecx+0x14]
  408f7f:	popa   
  408f80:	clc    
  408f81:	fwait
  408f82:	out    dx,eax
  408f83:	iret   
  408f84:	dec    ecx
  408f85:	mov    edx,0x81f6499c
  408f8a:	adc    bh,BYTE PTR [ebx]
  408f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f8d:	or     edi,DWORD PTR [ebx-0x7c]
  408f90:	jne    0x40900f
  408f92:	add    al,0xce
  408f94:	mov    bh,0xdd
  408f96:	mov    ebp,DWORD PTR [ebx]
  408f98:	loopne 0x408fed
  408f9a:	or     ebx,edx
  408f9c:	outs   dx,BYTE PTR ds:[si]
  408f9e:	dec    esp
  408f9f:	mov    ?,esp
  408fa1:	leave  
  408fa2:	out    0x47,al
  408fa4:	xchg   ebx,eax
  408fa5:	sbb    BYTE PTR [ecx+0x2f],bl
  408fa8:	push   cs
  408fa9:	jp     0x408ff3
  408fab:	mov    bl,0x63
  408fad:	mov    ebp,0x2fc95105
  408fb2:	jmp    0x649b:0x6b6e89c9
  408fb9:	sbb    BYTE PTR [eax-0x4cbe76cf],0xff
  408fc0:	sbb    DWORD PTR [ecx-0x47],0xe4b17a1a
  408fc7:	cmp    dh,BYTE PTR ds:0x5f6859a7
  408fcd:	mov    cl,0xb9
  408fcf:	retf   0xc7a5
  408fd2:	and    cl,BYTE PTR [esi-0x23f22b76]
  408fd8:	mov    ch,0x35
  408fda:	aad    0x47
  408fdc:	clc    
  408fdd:	add    DWORD PTR [esi],0xe04f1f62
  408fe3:	xor    al,0x4c
  408fe5:	test   edi,ecx
  408fe7:	repnz (bad) 
  408fe9:	ins    DWORD PTR es:[edi],dx
  408fea:	jp     0x409053
  408fec:	add    dl,BYTE PTR [ecx-0x17]
  408fef:	mov    edx,0x9c1e2924
  408ff4:	push   esi
  408ff5:	mov    al,BYTE PTR [esi]
  408ff7:	xor    eax,DWORD PTR [edi]
  408ff9:	sbb    eax,0x5ccabb1f
  408ffe:	iret   
  408fff:	add    ebx,DWORD PTR [ebp+0x37]
  409002:	or     eax,0x8e1c28f4
  409007:	xchg   ebx,eax
  409008:	test   BYTE PTR [edx-0x75],bl
  40900b:	stos   BYTE PTR es:[edi],al
  40900c:	pop    ebp
  40900d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40900e:	or     al,0xcb
  409010:	jnp    0x409023
  409012:	ins    BYTE PTR es:[edi],dx
  409013:	mov    esp,0x635e0e0d
  409018:	add    cl,dl
  40901a:	push   edi
  40901b:	inc    ebx
  40901c:	rcr    esp,1
  40901e:	arpl   WORD PTR [ecx+0x44],dx
  409021:	jle    0x409053
  409023:	mov    DWORD PTR [ecx+0x53],esp
  409026:	cmp    eax,0x9203d6d0
  40902b:	sahf   
  40902c:	cs sti 
  40902e:	push   eax
  40902f:	inc    ebx
  409030:	mov    ebp,0x52f06344
  409035:	out    dx,al
  409036:	call   0xeab0:0x41b874ca
  40903d:	outs   dx,BYTE PTR ds:[esi]
  40903e:	pop    edi
  40903f:	ss xchg esp,eax
  409041:	push   es
  409042:	mov    bl,bl
  409044:	dec    eax
  409045:	fdiv   QWORD PTR [edi-0x1211470b]
  40904b:	mov    DWORD PTR [ebp-0x114cb75e],0x3d472669
  409055:	fcom   DWORD PTR [edx-0x65]
  409058:	aad    0xd9
  40905a:	and    dl,dl
  40905c:	inc    edx
  40905d:	fs sub bh,al
  409060:	mov    DWORD PTR [ebp+ebp*4+0x4d2b7e84],ebp
  409067:	push   ebp
  409068:	(bad)  
  409069:	arpl   sp,ax
  40906b:	push   edx
  40906c:	push   esp
  40906d:	adc    ebp,DWORD PTR [ecx-0x54e6c154]
  409073:	out    0xba,al
  409075:	scas   al,BYTE PTR es:[edi]
  409076:	(bad)  
  409077:	imul   esp,DWORD PTR [eax+0x2b],0xffffffac
  40907b:	adc    al,0x9b
  40907d:	add    bh,cl
  40907f:	adc    BYTE PTR es:[edi+0x4c448974],al
  409086:	imul   esi,DWORD PTR [ebp+0x51],0x922aaf4c
  40908d:	jle    0x40909d
  40908f:	jb     0x40906d
  409091:	add    al,0xc2
  409093:	cmp    DWORD PTR [edx],ebx
  409095:	in     al,dx
  409096:	leave  
  409097:	int    0x55
  409099:	mov    esi,0xb9a66598
  40909e:	int    0x0
  4090a0:	dec    ebx
  4090a1:	push   edi
  4090a2:	cmc    
  4090a3:	push   esp
  4090a4:	mov    eax,0x74bee177
  4090a9:	sti    
  4090aa:	gs out dx,al
  4090ac:	pop    ss
  4090ad:	push   ebp
  4090ae:	cmp    BYTE PTR [eax+0x19125c77],ch
  4090b4:	push   ds
  4090b5:	dec    esp
  4090b6:	adc    dh,dh
  4090b8:	in     al,0x14
  4090ba:	mov    ds:0x769b0d19,al
  4090bf:	(bad)  
  4090c1:	scas   eax,DWORD PTR es:[edi]
  4090c2:	call   0x43bc:0x53837358
  4090c9:	xchg   esp,eax
  4090ca:	xor    BYTE PTR [edx+0x10],dh
  4090cd:	push   ss
  4090ce:	sbb    al,0xfd
  4090d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090d1:	xor    al,0xeb
  4090d3:	mov    bh,0xa6
  4090d5:	cmp    DWORD PTR ds:0x59d9b954,esi
  4090db:	cs mov al,0xad
  4090de:	and    ebx,edx
  4090e0:	pop    ds
  4090e1:	ja     0x40910d
  4090e3:	loope  0x4090f6
  4090e5:	mov    bl,0xa5
  4090e7:	aam    0xb4
  4090e9:	mov    ecx,0x1c9ebf72
  4090ee:	loopne 0x40908d
  4090f0:	push   cs
  4090f1:	iret   
  4090f2:	cs pop es
  4090f4:	pusha  
  4090f5:	pop    ebp
  4090f6:	lods   eax,DWORD PTR ds:[esi]
  4090f7:	mov    eax,0x84768641
  4090fc:	jl     0x40916c
  4090fe:	repnz mov eax,esi
  409101:	out    dx,eax
  409102:	jmp    0x616f1f7
  409107:	dec    ebp
  409108:	shl    BYTE PTR [ecx-0xd],0x51
  40910c:	pop    edx
  40910d:	iret   
  40910e:	inc    edi
  40910f:	adc    al,0xbe
  409111:	scas   al,BYTE PTR es:[edi]
  409112:	push   esp
  409113:	les    esp,FWORD PTR [esp+ebp*8]
  409116:	enter  0x8d65,0x54
  40911a:	mov    ebp,ebp
  40911c:	sbb    eax,0x2d42eeb
  409121:	push   edi
  409122:	inc    ecx
  409123:	fmul   QWORD PTR [edi+ecx*1-0x48]
  409127:	sar    DWORD PTR [ebp+0x590c383f],1
  40912d:	mov    esp,DWORD PTR [edx+0x2e]
  409130:	pusha  
  409131:	mov    al,0x2c
  409133:	rcl    DWORD PTR es:[ecx-0x4e5e556b],1
  40913a:	push   edx
  40913b:	jnp    0x4091bc
  40913d:	and    dl,bh
  40913f:	xlat   BYTE PTR ds:[ebx]
  409140:	jl     0x40914a
  409142:	mov    dh,0x5e
  409144:	inc    ebp
  409145:	push   eax
  409146:	fld    DWORD PTR [eax-0x46]
  409149:	jmp    0x1692:0xc06c57b0
  409150:	fdiv   DWORD PTR [ecx+edi*4+0x2c]
  409154:	pop    ebp
  409155:	icebp  
  409156:	xor    DWORD PTR [edx],esi
  409158:	sbb    edi,DWORD PTR ds:0x3d9a5ce6
  40915e:	and    BYTE PTR [edx],ch
  409160:	rcr    BYTE PTR [edx-0x2d0a158a],0xfb
  409167:	xor    cl,BYTE PTR [edi+edi*4+0x3c3c8d0a]
  40916e:	adc    DWORD PTR ds:0xc201e767,0xd0964db6
  409178:	(bad)  
  409179:	sar    DWORD PTR [eax-0x351c3a44],1
  40917f:	push   0x8dbd8854
  409184:	push   cs
  409185:	jp     0x4091d4
  409187:	and    DWORD PTR [eax+0x38],esp
  40918a:	and    BYTE PTR [edi+esi*4-0x28],ah
  40918e:	add    bl,cl
  409190:	call   0x5a9d591
  409195:	inc    esi
  409196:	xchg   edx,eax
  409197:	or     al,0xb0
  409199:	test   eax,0xc279840c
  40919e:	repz (bad) 
  4091a0:	in     al,0x18
  4091a2:	bound  esp,QWORD PTR [eax+0x7331d4ba]
  4091a8:	fstp   DWORD PTR [ecx+0x1b8bf159]
  4091ae:	push   edi
  4091af:	jo     0x40920d
  4091b1:	sub    al,0x4a
  4091b3:	pop    esi
  4091b4:	imul   ecx,DWORD PTR [ecx+0x7e6dbc63],0x2e3aaa0c
  4091be:	mov    edx,0xcde30d4b
  4091c3:	push   edi
  4091c4:	push   ds
  4091c5:	inc    ebx
  4091c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091c7:	adc    eax,0x250d99e9
  4091cc:	cld    
  4091cd:	xchg   esi,eax
  4091ce:	adc    eax,0xe4254801
  4091d3:	test   eax,0xdefb8762
  4091d8:	jg     0x409206
  4091da:	les    edi,FWORD PTR [ebx+0x5631e0f3]
  4091e0:	loope  0x409255
  4091e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091e3:	jp     0x409216
  4091e5:	mov    edx,DWORD PTR [eax-0x35117f8d]
  4091eb:	mov    al,0x51
  4091ed:	cmp    ch,0x47
  4091f0:	or     ecx,DWORD PTR [edx-0x49]
  4091f3:	arpl   WORD PTR [edx-0x45],bp
  4091f6:	ret    0xbbbf
  4091f9:	sbb    al,0x57
  4091fb:	xor    BYTE PTR [edx-0x7f8c22f],dh
  409201:	pusha  
  409202:	inc    esi
  409203:	sub    eax,0xdbc170d1
  409208:	sbb    al,0xce
  40920a:	xchg   ecx,eax
  40920b:	aas    
  40920c:	or     al,0x2f
  40920e:	dec    ebp
  40920f:	adc    eax,DWORD PTR [ebp+ecx*1+0x47]
  409213:	mov    edi,0xfc144cf5
  409218:	lock repnz icebp 
  40921b:	add    cl,BYTE PTR [ebx]
  40921d:	int    0xf5
  40921f:	cwde   
  409220:	imul   esp,eax,0xffffffb3
  409223:	pop    es
  409224:	push   esi
  409225:	repz iret 
  409227:	mov    dl,0x55
  409229:	inc    eax
  40922a:	xor    edx,DWORD PTR [eax-0x53411b4f]
  409230:	inc    edi
  409231:	loope  0x4091ed
  409233:	scas   al,BYTE PTR es:[edi]
  409234:	fadd   QWORD PTR [ebp+0x45b0d530]
  40923a:	push   ebp
  40923b:	in     eax,dx
  40923c:	test   eax,0x40bd4605
  409241:	gs mov ah,0x6c
  409244:	pop    esp
  409245:	push   ecx
  409246:	mov    ds:0x9f00b6fa,eax
  40924b:	adc    eax,0x588bb330
  409250:	nop
  409251:	mov    ebx,0xdb987502
  409256:	aad    0x47
  409258:	pop    ds
  409259:	adc    ebp,ebx
  40925b:	nop
  40925c:	mov    al,ds:0x7c73c42c
  409261:	sar    BYTE PTR [edi],cl
  409263:	sbb    esp,edi
  409265:	fistp  WORD PTR [edx+0x4c]
  409268:	dec    ebx
  409269:	leave  
  40926a:	push   0xffffff9a
  40926c:	mov    ebx,?
  40926e:	xor    al,0xb6
  409270:	pop    esp
  409271:	ins    DWORD PTR es:[edi],dx
  409272:	dec    edi
  409273:	outs   dx,DWORD PTR ds:[esi]
  409274:	int3   
  409275:	ret    0x6add
  409278:	test   DWORD PTR [eax],edx
  40927a:	stc    
  40927b:	int3   
  40927c:	leave  
  40927d:	add    eax,0x46bd92a3
  409282:	jnp    0x4092c5
  409284:	cmovg  edi,DWORD PTR [ebx]
  409287:	les    esp,FWORD PTR [ebx]
  409289:	dec    esp
  40928a:	inc    ebx
  40928b:	pop    ebp
  40928c:	rcl    DWORD PTR [ebp-0x46],cl
  40928f:	dec    edx
  409290:	out    0x94,al
  409292:	cld    
  409293:	(bad)  
  409294:	mov    dh,0x7
  409296:	sub    eax,0x4c1d9080
  40929b:	mov    ds:0x91c42f94,al
  4092a0:	div    DWORD PTR [ecx+0x15]
  4092a3:	sar    edx,cl
  4092a5:	inc    edx
  4092a6:	pop    ss
  4092a7:	sbb    edx,DWORD PTR [ecx-0x4ea29b56]
  4092ad:	cwde   
  4092ae:	mov    ecx,0xfbe42532
  4092b3:	jnp    0x4092ea
  4092b5:	out    dx,eax
  4092b6:	sub    DWORD PTR [esi-0x639b4d11],edi
  4092bc:	mov    ecx,ebp
  4092be:	sti    
  4092bf:	shr    BYTE PTR [edx],cl
  4092c1:	pop    ebx
  4092c2:	das    
  4092c3:	adc    bl,BYTE PTR [eax+edi*2]
  4092c6:	mov    ebx,0xb79b8dc9
  4092cb:	cld    
  4092cc:	cld    
  4092cd:	int3   
  4092ce:	leave  
  4092cf:	inc    edi
  4092d0:	clc    
  4092d1:	jg     0x4092e6
  4092d3:	mov    dh,0xe
  4092d5:	push   edx
  4092d6:	or     ah,dl
  4092d8:	and    DWORD PTR [eax+0x49],0x6f
  4092dc:	and    DWORD PTR [ebp+0x22f67b75],ebx
  4092e2:	jb     0x4092f1
  4092e4:	clc    
  4092e5:	mov    ah,0x46
  4092e7:	loop   0x4092df
  4092e9:	add    dh,cl
  4092eb:	add    al,0xe5
  4092ed:	ss xchg esi,eax
  4092ef:	enter  0x8096,0x22
  4092f3:	int3   
  4092f4:	sub    ah,BYTE PTR [ecx+0x76]
  4092f7:	lea    ecx,[ebx+0x20]
  4092fa:	ja     0x409314
  4092fc:	dec    edi
  4092fd:	add    DWORD PTR [ecx+0x1f],ebp
  409300:	dec    edi
  409301:	sbb    BYTE PTR [edi],0x4f
  409304:	pop    eax
  409305:	jb     0x4092d3
  409307:	fimul  DWORD PTR [esi-0x776e72f6]
  40930d:	lock adc esi,DWORD PTR [edi-0x4]
  409311:	inc    eax
  409312:	fsubr  QWORD PTR [esi-0x30]
  409315:	mov    bl,0xeb
  409317:	ja     0x409319
  409319:	push   ebp
  40931a:	sub    dh,BYTE PTR [esi-0x3212a9f1]
  409320:	mov    al,0xfc
  409322:	mov    dl,0x75
  409324:	sahf   
  409325:	sar    DWORD PTR [esi],1
  409327:	jle    0x4092d4
  409329:	push   ecx
  40932a:	inc    esi
  40932b:	bound  esp,QWORD PTR [edx-0x77]
  40932e:	adc    DWORD PTR [eax+0x58],ebp
  409331:	jns    0x409352
  409333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409334:	ficom  DWORD PTR [eax]
  409336:	lods   eax,DWORD PTR ds:[esi]
  409337:	and    cl,BYTE PTR [ebp-0x1e]
  40933a:	aad    0xc8
  40933c:	push   ss
  40933d:	adc    ebp,DWORD PTR [esi+ecx*8]
  409340:	or     eax,0xd81f6a27
  409345:	push   ebp
  409346:	and    eax,0x5ba57cfa
  40934b:	stos   BYTE PTR es:[edi],al
  40934c:	xor    eax,0xbf27c269
  409351:	push   cs
  409352:	adc    BYTE PTR [ecx-0x59],ah
  409355:	ja     0x4093cf
  409357:	repz jl 0x40937b
  40935a:	pop    ebx
  40935b:	xchg   BYTE PTR [edx+esi*4+0x2edb3d6],al
  409362:	lods   eax,DWORD PTR ds:[esi]
  409363:	inc    esp
  409364:	push   cs
  409365:	int3   
  409366:	adc    BYTE PTR [ecx-0x65c2d8c2],ah
  40936c:	cwde   
  40936d:	lods   al,BYTE PTR ds:[esi]
  40936e:	mov    ebx,0xed156e61
  409373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409374:	aam    0x71
  409376:	adc    al,0x86
  409378:	div    DWORD PTR ds:0x20aa23dd
  40937e:	shr    DWORD PTR [ebx-0x80],1
  409381:	and    edx,DWORD PTR [edx]
  409383:	ja     0x40934b
  409385:	inc    ebx
  409386:	push   ebp
  409387:	imul   edx,ebp,0xffffffbe
  40938a:	cwde   
  40938b:	stos   DWORD PTR es:[edi],eax
  40938c:	jne    0x40937b
  40938e:	inc    eax
  40938f:	jecxz  0x4093a8
  409391:	adc    BYTE PTR [ebp+0x690666b0],0x7c
  409398:	mov    edi,0xf5425c35
  40939d:	dec    ebx
  40939e:	stc    
  40939f:	push   ss
  4093a0:	cwde   
  4093a1:	push   esp
  4093a2:	xor    bl,cl
  4093a4:	xor    BYTE PTR [ebp-0x2114de04],bl
  4093aa:	mov    esi,0x92f3ff5c
  4093af:	mov    bh,ch
  4093b1:	dec    edi
  4093b2:	in     al,0xe0
  4093b4:	and    BYTE PTR [ecx-0x5f412f3a],0x23
  4093bb:	rcr    DWORD PTR [ebp-0x6b864f60],1
  4093c1:	clc    
  4093c2:	lahf   
  4093c3:	mov    al,ds:0xec7dd3e5
  4093c8:	loope  0x4093a2
  4093ca:	loop   0x409408
  4093cc:	ret    0x63af
  4093cf:	outs   dx,BYTE PTR ds:[esi]
  4093d0:	test   BYTE PTR [edi],al
  4093d2:	inc    eax
  4093d3:	adc    ch,0x75
  4093d6:	sbb    DWORD PTR [ecx-0x38],0x56
  4093da:	in     al,dx
  4093db:	das    
  4093dc:	scas   al,BYTE PTR es:[edi]
  4093dd:	mov    BYTE PTR [eax-0x49],dl
  4093e0:	repz cwde 
  4093e2:	jge    0x40943a
  4093e4:	shr    bh,cl
  4093e6:	inc    ebx
  4093e7:	bound  edi,QWORD PTR [eax+0x5e]
  4093ea:	(bad)  
  4093eb:	rcr    BYTE PTR [ebp+0x3],cl
  4093ee:	imul   BYTE PTR [esp+edi*2-0x57]
  4093f2:	dec    edi
  4093f3:	stc    
  4093f4:	stc    
  4093f5:	repnz call 0xb3da:0xf87c5ab9
  4093fd:	push   ss
  4093fe:	pushf  
  4093ff:	out    0xae,al
  409401:	std    
  409402:	inc    eax
  409403:	xor    dl,ch
  409405:	sbb    BYTE PTR ds:0x5a1f9e,dh
  40940b:	in     al,dx
  40940c:	outs   dx,DWORD PTR ds:[esi]
  40940d:	ins    DWORD PTR es:[edi],dx
  40940e:	push   edi
  40940f:	sahf   
  409410:	adc    BYTE PTR [esi],cl
  409412:	jno    0x4093bf
  409414:	dec    eax
  409415:	lods   al,BYTE PTR ds:[esi]
  409416:	es jno 0x409476
  409419:	es stos DWORD PTR es:[edi],eax
  40941b:	inc    esi
  40941c:	jge    0x409415
  40941e:	nop
  40941f:	mov    BYTE PTR [ebx],ch
  409421:	cmp    al,0x55
  409423:	mov    ds:0xd5849a16,eax
  409428:	in     eax,dx
  409429:	inc    ebp
  40942a:	ret    
  40942b:	(bad)  
  40942c:	fmulp  st(2),st
  40942e:	inc    ecx
  40942f:	mov    esi,0x5d08676f
  409434:	adc    edi,esi
  409436:	(bad)  
  409437:	stos   DWORD PTR es:[edi],eax
  409438:	add    DWORD PTR [edx],0x39
  40943b:	inc    esi
  40943c:	push   esp
  40943d:	pop    esi
  40943e:	je     0x40944c
  409444:	mov    eax,DWORD PTR [ebp+0x8]
  409447:	jmp    0x409453
  40944c:	mov    eax,DWORD PTR [ebp-0x4]
  40944f:	xor    eax,ecx
  409451:	add    eax,edx
  409453:	leave  
  409454:	ret    0x4
  409457:	push   ebp
  409458:	mov    ebp,esp
  40945a:	sub    esp,0x38
  40945d:	mov    DWORD PTR ds:0x42e020,0x15
  409467:	cmp    DWORD PTR ds:0x42e020,0x0
  40946e:	je     0x4094bf
  409474:	cmp    DWORD PTR ds:0x42e020,0xa
  40947b:	jg     0x4094bf
  409481:	jmp    0x409491
  409486:	push   0x1284
  40948b:	call   DWORD PTR ds:0x43490f
  409491:	cmp    DWORD PTR ds:0x42e020,0xb
  409498:	jne    0x4094ac
  40949e:	xor    eax,eax
  4094a0:	xor    eax,DWORD PTR ds:0x42e020
  4094a6:	dec    eax
  4094a7:	mov    ds:0x42e020,eax
  4094ac:	xor    eax,eax
  4094ae:	xor    eax,DWORD PTR ds:0x42e020
  4094b4:	dec    eax
  4094b5:	mov    ds:0x42e020,eax
  4094ba:	jmp    0x409467
  4094bf:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  4094c6:	mov    eax,ds:0x42e020
  4094cb:	sub    DWORD PTR ds:0x42e010,eax
  4094d1:	push   ebx
  4094d2:	sbb    DWORD PTR ds:0x42e018,edx
  4094d8:	mov    DWORD PTR [ebp-0xc],0xf89c8580
  4094df:	mov    DWORD PTR ds:0x430018,0x1c
  4094e9:	cmp    DWORD PTR ds:0x430018,0x0
  4094f0:	je     0x409540
  4094f6:	cmp    DWORD PTR ds:0x430018,0xb
  4094fd:	ja     0x409540
  409503:	jmp    0x409518
  409508:	push   0x434027
  40950d:	push   0x400000
  409512:	call   DWORD PTR ds:0x434917
  409518:	cmp    DWORD PTR ds:0x430018,0xc
  40951f:	jne    0x409530
  409525:	mov    eax,ds:0x430018
  40952a:	dec    eax
  40952b:	mov    ds:0x430018,eax
  409530:	mov    eax,ds:0x430018
  409535:	dec    eax
  409536:	mov    ds:0x430018,eax
  40953b:	jmp    0x4094e9
  409540:	mov    eax,DWORD PTR [ebp-0x4]
  409543:	xor    DWORD PTR ds:0x42f018,0x430004
  40954d:	push   esi
  40954e:	add    DWORD PTR ds:0x430000,0x7b7d
  409558:	mov    esi,0x751089d
  40955d:	xor    eax,esi
  40955f:	or     DWORD PTR ds:0x432010,0x1402
  409569:	push   edi
  40956a:	mov    edi,0x3272e4
  40956f:	dec    DWORD PTR ds:0x42f018
  409575:	add    eax,edi
  409577:	sbb    DWORD PTR ds:0x430010,0x432014
  409581:	mov    DWORD PTR [ebp-0x1c],eax
  409584:	mov    eax,DWORD PTR [ebp+0x14]
  409587:	add    DWORD PTR ds:0x432018,0x30e0
  409591:	test   eax,eax
  409593:	mov    DWORD PTR ds:0x42e014,0x1e76
  40959d:	je     0x4095bb
  4095a3:	mov    eax,DWORD PTR [ebp+0x14]
  4095a6:	and    ebx,DWORD PTR ds:0x43101c
  4095ac:	mov    eax,DWORD PTR [eax]
  4095ae:	add    DWORD PTR ds:0x430014,0x50e4
  4095b8:	mov    DWORD PTR [ebp-0x1c],eax
  4095bb:	and    DWORD PTR ds:0x42e010,0x0
  4095c5:	mov    eax,ds:0x42e010
  4095ca:	inc    eax
  4095cb:	mov    ds:0x42e010,eax
  4095d0:	cmp    DWORD PTR ds:0x42e010,0x10
  4095d7:	jb     0x409615
  4095dd:	jmp    0x4095f0
  4095e2:	push   DWORD PTR [ebp-0x14]
  4095e5:	push   0x371c
  4095ea:	call   DWORD PTR ds:0x43491b
  4095f0:	cmp    DWORD PTR ds:0x42e010,0xf
  4095f7:	jne    0x409608
  4095fd:	mov    eax,ds:0x42e010
  409602:	inc    eax
  409603:	mov    ds:0x42e010,eax
  409608:	cmp    DWORD PTR ds:0x42e010,0x1e
  40960f:	jb     0x4095c5
  409615:	mov    eax,DWORD PTR [ebp-0x4]
  409618:	movzx  ebx,WORD PTR ds:0x432000
  40961f:	sub    ebx,DWORD PTR ds:0x43101c
  409625:	mov    DWORD PTR ds:0x432000,ebx
  40962b:	xor    eax,esi
  40962d:	and    DWORD PTR ds:0x432014,0xc31
  409637:	add    eax,edi
  409639:	mov    DWORD PTR [ebp-0x8],eax
  40963c:	mov    eax,ds:0x41d05a
  409641:	xor    ebx,ebx
  409643:	or     ebx,DWORD PTR ds:0x41d09a
  409649:	sub    eax,ebx
  40964b:	imul   eax,DWORD PTR [eax+ebx*1]
  40964f:	mov    eax,DWORD PTR [ebp-0xc]
  409652:	and    DWORD PTR ds:0x432018,0x0
  40965c:	jmp    0x40966e
  409661:	mov    ebx,DWORD PTR ds:0x432018
  409667:	inc    ebx
  409668:	mov    DWORD PTR ds:0x432018,ebx
  40966e:	cmp    DWORD PTR ds:0x432018,0x19
  409675:	jae    0x4096b7
  40967b:	cmp    DWORD PTR ds:0x432018,0xb
  409682:	ja     0x4096b7
  409688:	jmp    0x409698
  40968d:	push   0x434027
  409692:	call   DWORD PTR ds:0x43491f
  409698:	cmp    DWORD PTR ds:0x432018,0xa
  40969f:	jne    0x4096b2
  4096a5:	mov    ebx,DWORD PTR ds:0x432018
  4096ab:	inc    ebx
  4096ac:	mov    DWORD PTR ds:0x432018,ebx
  4096b2:	jmp    0x409661
  4096b7:	xor    eax,esi
  4096b9:	and    DWORD PTR ds:0x431010,edi
  4096bf:	add    eax,edi
  4096c1:	and    DWORD PTR ds:0x42e010,0x6068
  4096cb:	mov    DWORD PTR [ebp-0x24],eax
  4096ce:	xor    ebx,DWORD PTR ds:0x432014
  4096d4:	mov    eax,DWORD PTR [ebp-0x4]
  4096d7:	add    ebx,DWORD PTR ds:0x42e008
  4096dd:	xor    eax,esi
  4096df:	add    eax,edi
  4096e1:	sub    DWORD PTR ds:0x42e000,ebx
  4096e7:	mov    DWORD PTR [ebp-0x30],eax
  4096ea:	mov    ebx,DWORD PTR [ebp-0x4]
  4096ed:	sub    DWORD PTR ds:0x42e000,ebx
  4096f3:	xor    ebx,esi
  4096f5:	add    ebx,edi
  4096f7:	neg    eax
  4096f9:	mov    eax,DWORD PTR [ebp-0x24]
  4096fc:	sub    eax,edi
  4096fe:	lea    ecx,[ebx-0x3272e4]
  409704:	xor    eax,esi
  409706:	xor    ecx,esi
  409708:	cmp    ecx,eax
  40970a:	mov    DWORD PTR ds:0x42f00c,0xec8
  409714:	je     0x4099a1
  40971a:	mov    eax,DWORD PTR [ebp-0x4]
  40971d:	xor    eax,esi
  40971f:	mov    DWORD PTR ds:0x432000,0x24d7
  409729:	add    eax,edi
  40972b:	cmp    ebx,eax
  40972d:	jne    0x4098f1
  409733:	push   DWORD PTR [ebp+0x8]
  409736:	or     DWORD PTR ds:0x43000c,0x430014
  409740:	call   0x407014
  409745:	movzx  ecx,BYTE PTR ds:0x431008
  40974c:	add    DWORD PTR ds:0x42e01c,ecx
  409752:	mov    DWORD PTR [ebp-0x14],eax
  409755:	movzx  eax,BYTE PTR ds:0x43101c
  40975c:	xor    DWORD PTR ds:0x42e024,eax
  409762:	mov    eax,DWORD PTR [ebp-0x4]
  409765:	add    ecx,DWORD PTR ds:0x432014
  40976b:	mov    ecx,DWORD PTR [ebp-0x14]
  40976e:	xor    eax,esi
  409770:	add    eax,edi
  409772:	cmp    ecx,eax
  409774:	mov    DWORD PTR ds:0x42e01c,0x3286
  40977e:	je     0x409a0c
  409784:	push   DWORD PTR [ebp-0x14]
  409787:	and    DWORD PTR ds:0x431004,0x7397
  409791:	push   DWORD PTR [ebp+0x8]
  409794:	xor    DWORD PTR ds:0x430014,0x42e00c
  40979e:	call   0x40eb4e
  4097a3:	mov    DWORD PTR [ebp-0x14],eax
  4097a6:	or     eax,ecx
  4097a8:	mov    eax,DWORD PTR [ebp-0x4]
  4097ab:	mov    DWORD PTR ds:0x42e010,0x1a
  4097b5:	cmp    DWORD PTR ds:0x42e010,0x0
  4097bc:	je     0x409801
  4097c2:	cmp    DWORD PTR ds:0x42e010,0x27
  4097c9:	jb     0x409801
  4097cf:	jmp    0x4097ed
  4097d4:	push   DWORD PTR [ebp-0x28]
  4097d7:	push   DWORD PTR [ebp-0xc]
  4097da:	push   0x88bd
  4097df:	push   DWORD PTR [ebp-0x28]
  4097e2:	push   0x4a39
  4097e7:	call   DWORD PTR ds:0x4348af
  4097ed:	xor    ecx,ecx
  4097ef:	or     ecx,DWORD PTR ds:0x42e010
  4097f5:	dec    ecx
  4097f6:	mov    DWORD PTR ds:0x42e010,ecx
  4097fc:	jmp    0x4097b5
  409801:	mov    ecx,DWORD PTR [ebp-0x14]
  409804:	xor    eax,esi
  409806:	inc    DWORD PTR ds:0x432008
  40980c:	add    eax,edi
  40980e:	mov    DWORD PTR ds:0x42e028,0x634f
  409818:	cmp    ecx,eax
  40981a:	mov    DWORD PTR ds:0x42f00c,0x55f
  409824:	je     0x409a0c
  40982a:	mov    eax,DWORD PTR [ebp-0x14]
  40982d:	mov    eax,DWORD PTR [eax+0x18]
  409830:	mov    DWORD PTR [ebp-0x24],eax
  409833:	mov    eax,DWORD PTR [ebp-0x14]
  409836:	inc    ecx
  409837:	mov    ecx,DWORD PTR [ebp+0x8]
  40983a:	sub    DWORD PTR ds:0x430000,0x42e008
  409844:	add    ecx,DWORD PTR [eax+0x20]
  409847:	and    DWORD PTR ds:0x431000,0x0
  409851:	jmp    0x409861
  409856:	mov    eax,ds:0x431000
  40985b:	inc    eax
  40985c:	mov    ds:0x431000,eax
  409861:	cmp    DWORD PTR ds:0x431000,0x1d
  409868:	jae    0x409898
  40986e:	cmp    DWORD PTR ds:0x431000,0x27
  409875:	jbe    0x409898
  40987b:	jmp    0x409893
  409880:	push   0x6890
  409885:	push   0x8109
  40988a:	push   DWORD PTR [ebp-0x1c]
  40988d:	call   DWORD PTR ds:0x4348b3
  409893:	jmp    0x409856
  409898:	mov    DWORD PTR [ebp-0x2c],ecx
  40989b:	adc    eax,eax
  40989d:	mov    eax,DWORD PTR [ebp-0x14]
  4098a0:	sbb    ecx,DWORD PTR ds:0x432010
  4098a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4098a9:	xor    DWORD PTR ds:0x42e01c,0x42f000
  4098b3:	add    ecx,DWORD PTR [eax+0x24]
  4098b6:	dec    eax
  4098b7:	mov    DWORD PTR [ebp-0x34],ecx
  4098ba:	sbb    eax,ecx
  4098bc:	mov    eax,DWORD PTR [ebp-0x14]
  4098bf:	or     ecx,DWORD PTR ds:0x42e01c
  4098c5:	mov    ecx,DWORD PTR [ebp+0x8]
  4098c8:	xor    DWORD PTR ds:0x431018,0x773f
  4098d2:	add    ecx,DWORD PTR [eax+0x1c]
  4098d5:	mov    DWORD PTR ds:0x430008,0x460
  4098df:	mov    DWORD PTR [ebp-0x14],ecx
  4098e2:	mov    DWORD PTR ds:0x43000c,0x4e44
  4098ec:	jmp    0x4099d4
  4098f1:	mov    eax,DWORD PTR [ebp-0x2c]
  4098f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4098f7:	add    ecx,DWORD PTR [eax+ebx*4]
  4098fa:	or     DWORD PTR ds:0x42e000,0x7cb4
  409904:	mov    DWORD PTR [ebp-0x28],ecx
  409907:	and    DWORD PTR ds:0x43101c,0x0
  409911:	jmp    0x409925
  409916:	xor    ecx,ecx
  409918:	or     ecx,DWORD PTR ds:0x43101c
  40991e:	inc    ecx
  40991f:	mov    DWORD PTR ds:0x43101c,ecx
  409925:	cmp    DWORD PTR ds:0x43101c,0x16
  40992c:	jae    0x40998a
  409932:	cmp    DWORD PTR ds:0x43101c,0x4
  409939:	ja     0x40998a
  40993f:	jmp    0x40996b
  409944:	push   0x430018
  409949:	push   0x748b
  40994e:	push   DWORD PTR [ebp-0xc]
  409951:	push   0x836d
  409956:	push   0x5d47
  40995b:	push   0x5d0d
  409960:	push   0x3519
  409965:	call   DWORD PTR ds:0x4348df
  40996b:	cmp    DWORD PTR ds:0x43101c,0x3
  409972:	jne    0x409985
  409978:	mov    ecx,DWORD PTR ds:0x43101c
  40997e:	inc    ecx
  40997f:	mov    DWORD PTR ds:0x43101c,ecx
  409985:	jmp    0x409916
  40998a:	mov    eax,DWORD PTR [ebp-0x4]
  40998d:	mov    ecx,DWORD PTR [ebp-0x28]
  409990:	xor    eax,esi
  409992:	add    eax,edi
  409994:	cmp    ecx,eax
  409996:	je     0x4099d4
  40999c:	jmp    0x4099c5
  4099a1:	mov    eax,DWORD PTR [ebp-0x4]
  4099a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a7:	xor    eax,esi
  4099a9:	add    eax,edi
  4099ab:	cmp    ecx,eax
  4099ad:	mov    eax,DWORD PTR [ebp-0x4]
  4099b0:	je     0x409a0f
  4099b6:	mov    ecx,DWORD PTR [ebp-0x30]
  4099b9:	xor    eax,esi
  4099bb:	add    eax,edi
  4099bd:	cmp    ecx,eax
  4099bf:	je     0x409a18
  4099c5:	lea    eax,[ebp-0x8]
  4099c8:	push   eax
  4099c9:	push   DWORD PTR [ebp-0x28]
  4099cc:	push   DWORD PTR [ebp+0xc]
  4099cf:	call   0x41112c
  4099d4:	mov    eax,DWORD PTR [ebp-0x4]
  4099d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4099da:	xor    eax,esi
  4099dc:	add    eax,edi
  4099de:	cmp    ecx,eax
  4099e0:	je     0x4099fb
  4099e6:	mov    eax,DWORD PTR [ebp-0x34]
  4099e9:	movzx  eax,WORD PTR [eax+ebx*2]
  4099ed:	mov    ecx,DWORD PTR [ebp-0x14]
  4099f0:	mov    eax,DWORD PTR [ecx+eax*4]
  4099f3:	mov    DWORD PTR [ebp-0x38],eax
  4099f6:	jmp    0x4099a1
  4099fb:	mov    eax,DWORD PTR [ebp-0xc]
  4099fe:	xor    eax,esi
  409a00:	lea    ebx,[ebx+eax*1+0x3272e4]
  409a07:	jmp    0x4096f7
  409a0c:	mov    eax,DWORD PTR [ebp-0x4]
  409a0f:	xor    eax,esi
  409a11:	add    eax,edi
  409a13:	jmp    0x40e27b
  409a18:	mov    eax,DWORD PTR [ebp-0x38]
  409a1b:	add    eax,DWORD PTR [ebp+0x8]
  409a1e:	mov    DWORD PTR [ebp-0x18],eax
  409a21:	mov    eax,DWORD PTR [ebp-0x1c]
  409a24:	test   eax,eax
  409a26:	je     0x409ac0
  409a2c:	mov    DWORD PTR [ebp-0x20],0x0
  409a33:	push   0x3
  409a35:	xor    edx,edx
  409a37:	pop    edx
  409a38:	add    edx,0x8
  409a3b:	push   edx
  409a3c:	pop    ecx
  409a3d:	push   0x6
  409a3f:	dec    ecx
  409a40:	pop    ebx
  409a41:	dec    ebx
  409a42:	xchg   ebx,ecx
  409a44:	sub    ebx,ecx
  409a46:	xchg   ebx,ecx
  409a48:	dec    ecx
  409a49:	mov    eax,DWORD PTR [ebp-0x1c]
  409a4c:	imul   eax,ecx
  409a4f:	sub    esp,eax
  409a51:	mov    DWORD PTR [ebp-0x20],esp
  409a54:	mov    eax,DWORD PTR [ebp-0x4]
  409a57:	xor    eax,esi
  409a59:	add    eax,edi
  409a5b:	jmp    0x409a99
  409a60:	mov    ecx,DWORD PTR [ebp-0xc]
  409a63:	mov    eax,DWORD PTR [ebp+0x8]
  409a66:	mov    edx,DWORD PTR [ebp+0x14]
  409a69:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409a6d:	xor    ecx,esi
  409a6f:	add    ecx,edi
  409a71:	xor    edx,edx
  409a73:	div    ecx
  409a75:	mov    ecx,DWORD PTR [ebp-0x4]
  409a78:	xor    ecx,esi
  409a7a:	lea    eax,[ecx+eax*1+0x3272e4]
  409a81:	mov    ecx,DWORD PTR [ebp+0x8]
  409a84:	mov    edx,DWORD PTR [ebp-0x20]
  409a87:	mov    DWORD PTR [edx+ecx*4],eax
  409a8a:	mov    eax,DWORD PTR [ebp-0xc]
  409a8d:	mov    ecx,DWORD PTR [ebp+0x8]
  409a90:	xor    eax,esi
  409a92:	lea    eax,[eax+ecx*1+0x3272e4]
  409a99:	mov    DWORD PTR [ebp+0x8],eax
  409a9c:	mov    eax,DWORD PTR [ebp-0xc]
  409a9f:	mov    ecx,DWORD PTR [ebp+0x14]
  409aa2:	xor    eax,esi
  409aa4:	add    eax,edi
  409aa6:	imul   eax,DWORD PTR [ecx]
  409aa9:	mov    ecx,DWORD PTR [ebp-0x4]
  409aac:	mov    edx,DWORD PTR [ebp+0x8]
  409aaf:	xor    ecx,esi
  409ab1:	lea    ecx,[ecx+edx*1+0x3272e4]
  409ab8:	cmp    ecx,eax
  409aba:	jne    0x409a60
  409ac0:	mov    eax,DWORD PTR [ebp-0x4]
  409ac3:	xor    eax,esi
  409ac5:	add    eax,edi
  409ac7:	mov    DWORD PTR [ebp-0x10],eax
  409aca:	mov    ebx,0x65655
  409acf:	add    ebx,0x3234
  409ad5:	xchg   ebx,esi
  409ad7:	xor    ebx,ebx
  409ad9:	push   esi
  409ada:	mov    esi,ebx
  409adc:	pop    ebx
  409add:	mov    edx,esi
  409adf:	add    ebx,0x1002
  409ae5:	lea    eax,[ebp-0x18]
  409ae8:	add    edx,eax
  409aea:	add    edx,0x5
  409aed:	push   edx
  409aee:	inc    esi
  409aef:	pop    ecx
  409af0:	dec    ecx
  409af1:	xchg   ecx,eax
  409af2:	dec    eax
  409af3:	xchg   ecx,eax
  409af4:	dec    ecx
  409af5:	xchg   ecx,edx
  409af7:	dec    edx
  409af8:	push   edx
  409af9:	jmp    0x40be9c
  409afe:	retf   
  409aff:	sbb    BYTE PTR [edi-0x75],dh
  409b02:	ja     0x409b77
  409b04:	mov    bl,0x18
  409b06:	sbb    DWORD PTR [esi+esi*1+0x53],ebp
  409b0a:	xor    DWORD PTR [ebx+0x44e4cd7],ebp
  409b10:	jb     0x409b84
  409b12:	clc    
  409b13:	pop    edi
  409b14:	jb     0x409b88
  409b16:	jb     0x409aa2
  409b18:	push   ecx
  409b19:	and    BYTE PTR [edx-0x5ef31104],0x94
  409b20:	pop    esi
  409b21:	cmp    BYTE PTR [ecx-0x7ecf829b],ah
  409b27:	in     eax,dx
  409b28:	out    dx,al
  409b29:	push   esp
  409b2a:	add    eax,0xc9b92b1b
  409b2f:	or     BYTE PTR ds:0xf0f6214c,bh
  409b35:	inc    esi
  409b36:	int3   
  409b37:	rol    DWORD PTR [ecx-0x7],0xac
  409b3b:	and    DWORD PTR [ecx],esp
  409b3d:	jle    0x409b1f
  409b3f:	xchg   edi,eax
  409b40:	ror    DWORD PTR [edx],cl
  409b42:	sbb    eax,0x8f44123b
  409b47:	into   
  409b48:	dec    ebx
  409b49:	push   eax
  409b4a:	mov    ebx,0x153b889d
  409b4f:	lea    eax,[edi-0x29ca703a]
  409b55:	xchg   ebp,eax
  409b56:	pop    ss
  409b57:	ins    BYTE PTR es:[edi],dx
  409b58:	call   0x80ef61c9
  409b5d:	inc    edi
  409b5e:	jl     0x409b8c
  409b60:	arpl   WORD PTR [edi+0x411ae8c8],bp
  409b66:	btr    esi,edi
  409b69:	pop    es
  409b6a:	cmp    edx,edx
  409b6c:	sub    DWORD PTR [edx+0x77],ebp
  409b6f:	sti    
  409b70:	cs sahf 
  409b72:	cmp    DWORD PTR [edx-0x2c],0xffffffab
  409b76:	push   cs
  409b77:	push   0x15e15580
  409b7c:	sahf   
  409b7d:	push   es
  409b7e:	rcr    esp,1
  409b80:	xor    DWORD PTR [eax],ebx
  409b82:	aas    
  409b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b84:	add    eax,0xdf0c7459
  409b89:	xor    al,0x21
  409b8b:	push   es
  409b8c:	les    eax,FWORD PTR [eax+0x4a]
  409b8f:	sti    
  409b90:	add    BYTE PTR [ebp+0x66],bl
  409b93:	jmp    0x6e0d6f4d
  409b98:	dec    eax
  409b99:	mov    cl,0x20
  409b9b:	mov    ebp,0xf859c408
  409ba0:	les    esp,FWORD PTR [ecx+0x66]
  409ba3:	lahf   
  409ba4:	cmc    
  409ba5:	cmp    al,0x68
  409ba7:	sbb    al,0xcf
  409ba9:	stos   BYTE PTR es:[edi],al
  409baa:	and    al,0x93
  409bac:	into   
  409bad:	fstp   DWORD PTR [ebp-0x73872c01]
  409bb3:	sub    DWORD PTR [eax+0x5152341e],ebx
  409bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bba:	xchg   ebx,eax
  409bbb:	int    0xb7
  409bbd:	ja     0x409b55
  409bbf:	xchg   ecx,eax
  409bc0:	jmp    0x955e:0x5eead383
  409bc7:	rcr    al,0xa6
  409bca:	jns    0x409bbb
  409bcc:	add    BYTE PTR [edi],ch
  409bce:	mov    ch,0x43
  409bd0:	pop    esp
  409bd1:	aam    0x29
  409bd3:	mov    ah,0xbe
  409bd5:	pop    ebx
  409bd6:	and    edi,ecx
  409bd8:	ja     0x409c31
  409bda:	fbstp  TBYTE PTR [eax+0x68]
  409bdd:	sub    eax,0xc2e9136b
  409be2:	call   0xca043246
  409be7:	xchg   edx,eax
  409be8:	dec    ebx
  409be9:	push   esi
  409bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409beb:	push   eax
  409bec:	cmp    DWORD PTR [esi+0x2e],0x34
  409bf0:	scas   eax,DWORD PTR es:[edi]
  409bf1:	push   ecx
  409bf2:	loop   0x409bb1
  409bf4:	xchg   BYTE PTR [esi-0x7e723781],ah
  409bfa:	neg    eax
  409bfc:	ins    BYTE PTR es:[edi],dx
  409bfd:	jo     0x409bec
  409bff:	ins    BYTE PTR es:[edi],dx
  409c00:	test   DWORD PTR [eax-0x1],edi
  409c03:	stos   DWORD PTR es:[edi],eax
  409c04:	mov    dl,BYTE PTR [edi-0x7166590f]
  409c0a:	(bad)  
  409c0c:	sbb    cl,cl
  409c0e:	in     eax,0x79
  409c10:	adc    ah,bh
  409c12:	test   BYTE PTR [ecx],bh
  409c14:	(bad)  
  409c15:	adc    DWORD PTR [eax-0x6d],esp
  409c18:	mov    esp,0x5a545bb0
  409c1d:	ret    0x956d
  409c20:	call   0xede859c
  409c25:	out    dx,al
  409c26:	jg     0x409c69
  409c28:	add    dh,BYTE PTR [esi]
  409c2a:	loopne 0x409c73
  409c2c:	mov    dl,0x48
  409c2e:	or     al,0xa2
  409c30:	scas   eax,DWORD PTR es:[edi]
  409c31:	push   esp
  409c32:	mov    al,ds:0x1e51c055
  409c37:	pushf  
  409c38:	nop
  409c39:	(bad)  
  409c3a:	xchg   esp,eax
  409c3b:	aaa    
  409c3c:	cmp    BYTE PTR [esi+0x58591547],bl
  409c42:	imul   ebx,DWORD PTR [edi-0x14],0xffffffb7
  409c46:	sar    DWORD PTR ds:0xa6154dcc,1
  409c4c:	or     dh,BYTE PTR [ebp-0x66fcb82]
  409c52:	and    eax,0xcd44c1a
  409c57:	dec    edx
  409c58:	push   edi
  409c59:	cli    
  409c5a:	sar    al,0xa7
  409c5d:	sbb    eax,ebx
  409c5f:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c61:	in     al,0xe6
  409c63:	jmp    0xe66cd9e2
  409c68:	out    dx,eax
  409c69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c6a:	ins    DWORD PTR es:[edi],dx
  409c6b:	xchg   DWORD PTR [esi],ebp
  409c6d:	jo     0x409c5b
  409c6f:	xchg   dl,bl
  409c71:	ds cmp ebp,edx
  409c74:	mov    al,ds:0x14306aa3
  409c79:	add    bh,BYTE PTR [esi]
  409c7b:	push   esi
  409c7c:	cmp    al,0xba
  409c7e:	dec    eax
  409c7f:	cmp    eax,0x9934e710
  409c84:	xchg   BYTE PTR [edx+eax*1-0x63f6e2b0],ah
  409c8b:	add    eax,0xdf08b7a0
  409c90:	ins    DWORD PTR es:[edi],dx
  409c91:	iret   
  409c92:	les    ecx,FWORD PTR [esi-0x7e]
  409c95:	mov    ?,eax
  409c97:	out    dx,eax
  409c98:	rol    BYTE PTR [eax+0x4],1
  409c9b:	cmp    dl,BYTE PTR ds:0x9816a2f6
  409ca1:	inc    esp
  409ca2:	adc    eax,0x5a6da76a
  409ca7:	shl    bh,0xe
  409caa:	or     DWORD PTR [ecx-0x56],0xffffff8e
  409cae:	je     0x409d0c
  409cb0:	jo     0x409ca8
  409cb2:	repz push esp
  409cb4:	mov    ds:0xe46326d5,al
  409cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cba:	(bad)  
  409cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cbc:	pop    edx
  409cbd:	(bad)
  409cc0:	sub    edi,DWORD PTR [esi]
  409cc2:	int    0x59
  409cc4:	mov    ebp,0x5bb28695
  409cc9:	popf   
  409cca:	(bad)  [edi+0x12]
  409ccd:	mov    eax,0x9f701c17
  409cd2:	(bad)  [ecx-0x3bedd18b]
  409cd8:	int3   
  409cd9:	push   ds
  409cda:	sub    eax,0x44d5b797
  409cdf:	adc    DWORD PTR [edx+0x9814232],0x448acfa8
  409ce9:	aam    0xbd
  409ceb:	mov    ecx,0x9400eb65
  409cf0:	mov    ch,0xd8
  409cf2:	xor    al,0x28
  409cf4:	push   eax
  409cf5:	jo     0x409d16
  409cf7:	and    BYTE PTR ds:0xb0cf040d,bl
  409cfd:	int3   
  409cfe:	or     DWORD PTR [edx-0x5cbec46],ecx
  409d04:	ins    DWORD PTR es:[edi],dx
  409d05:	pushf  
  409d06:	in     eax,dx
  409d07:	outs   dx,BYTE PTR ds:[esi]
  409d08:	repz call 0xc9d1:0xce07a865
  409d10:	xor    al,0x46
  409d12:	repnz rcr DWORD PTR [ebp+0x2a],0x6d
  409d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d18:	clc    
  409d19:	rcr    DWORD PTR [eax+0x6b],cl
  409d1c:	add    bl,BYTE PTR [esi]
  409d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d1f:	jae    0x409cf0
  409d21:	fcmove st,st(3)
  409d23:	loopne 0x409d90
  409d25:	pcmpgtw mm1,mm0
  409d28:	push   ecx
  409d29:	dec    ebp
  409d2a:	ret    
  409d2b:	dec    ebp
  409d2c:	jo     0x409cb4
  409d2e:	or     ecx,DWORD PTR [ebp+0x4e7e5007]
  409d34:	dec    ebp
  409d35:	scas   eax,DWORD PTR es:[edi]
  409d36:	retf   
  409d37:	(bad)  
  409d38:	mov    esp,0xe7d12a74
  409d3d:	sbb    DWORD PTR [esi-0x3c2583dc],ebx
  409d43:	icebp  
  409d44:	mov    ds:0xc15e1424,eax
  409d49:	pop    esp
  409d4a:	inc    esp
  409d4b:	mov    eax,ds:0xbc67b674
  409d50:	pop    es
  409d51:	mov    edx,DWORD PTR [edx]
  409d53:	shl    BYTE PTR [edi+0x7e6ecdef],0xf6
  409d5a:	sub    edi,DWORD PTR [ecx]
  409d5c:	pop    edi
  409d5d:	mov    al,ds:0xb251416c
  409d62:	test   BYTE PTR [eax-0x3a],bl
  409d65:	cli    
  409d66:	pop    esp
  409d67:	adc    edx,DWORD PTR [edi+edx*8+0x6f264d55]
  409d6e:	push   ebx
  409d6f:	jbe    0x409dc9
  409d71:	out    0xba,al
  409d73:	aaa    
  409d74:	rcr    bh,1
  409d76:	outs   dx,BYTE PTR ds:[esi]
  409d77:	add    al,0xd
  409d79:	mov    bl,0xba
  409d7b:	mov    BYTE PTR [edi-0x47e005d],cl
  409d81:	add    esi,0xffffffc1
  409d84:	inc    ebx
  409d85:	or     al,0x62
  409d87:	mov    esp,0xac88762c
  409d8c:	mov    eax,ds:0x4080bb02
  409d91:	xor    BYTE PTR [edx+0x3913c0e0],ch
  409d97:	cmp    al,0x7b
  409d99:	mov    al,0xcd
  409d9b:	(bad)  
  409d9c:	(bad)  
  409d9d:	jmp    0x409da1
  409d9f:	aad    0x44
  409da1:	test   eax,0x1da3fe96
  409da6:	pop    ecx
  409da7:	or     eax,DWORD PTR [esi-0x73bb2e9a]
  409dad:	pusha  
  409dae:	cdq    
  409daf:	and    al,0x86
  409db1:	ficom  DWORD PTR [ebp-0x19]
  409db4:	mov    eax,0x5a3f80bf
  409db9:	xchg   DWORD PTR [ebx-0x3f],edi
  409dbc:	cmp    BYTE PTR [eax+0x19470f04],cl
  409dc2:	call   0xf584bf73
  409dc7:	stos   BYTE PTR es:[edi],al
  409dc8:	add    DWORD PTR [ebp-0x1c3575da],0x2ae09bb
  409dd2:	loopne 0x409d67
  409dd4:	pop    ecx
  409dd5:	push   es
  409dd6:	(bad)  
  409dd7:	sar    BYTE PTR [ebx-0x5b3f4733],1
  409ddd:	lahf   
  409dde:	add    esp,DWORD PTR [esi-0x10497015]
  409de4:	es mov cl,0x35
  409de7:	jle    0x409d7a
  409de9:	int    0x55
  409deb:	cs mov esi,0x3f69ec24
  409df1:	pop    esi
  409df2:	and    bh,BYTE PTR [ecx+eax*2]
  409df5:	jbe    0x409e13
  409df7:	cmp    BYTE PTR [esi-0x5737f5d6],ah
  409dfd:	(bad)  
  409dfe:	lods   eax,DWORD PTR ds:[esi]
  409dff:	push   edx
  409e00:	(bad)  
  409e01:	out    dx,al
  409e02:	retf   0x3a4b
  409e05:	fadd   QWORD PTR [ecx]
  409e07:	or     eax,0xff5c012a
  409e0c:	mov    BYTE PTR [edx-0xe],dl
  409e0f:	push   ecx
  409e10:	xchg   BYTE PTR [edx-0x38],bh
  409e13:	inc    eax
  409e14:	dec    esi
  409e15:	ucomiss xmm2,xmm6
  409e18:	jne    0x409ddd
  409e1a:	push   0xa83408f0
  409e1f:	cmp    DWORD PTR [edx+0x1f],0xffffffe3
  409e23:	hlt    
  409e24:	mov    esi,0x1e582d5d
  409e29:	push   edi
  409e2a:	pop    ebx
  409e2b:	push   ss
  409e2c:	stc    
  409e2d:	iret   
  409e2e:	fwait
  409e2f:	mov    ebp,0x456ca273
  409e34:	mov    esi,0x1c7827c1
  409e39:	ss pop ecx
  409e3b:	(bad)  
  409e3c:	mov    dh,0x71
  409e3e:	(bad)  
  409e3f:	shr    bl,1
  409e41:	push   esp
  409e42:	or     eax,0x6f630485
  409e47:	add    al,0x77
  409e49:	out    dx,eax
  409e4a:	sub    DWORD PTR [edx-0x5b],ecx
  409e4d:	push   edx
  409e4e:	adc    DWORD PTR [edx+0x12],edi
  409e51:	and    al,0x5f
  409e53:	or     edx,eax
  409e55:	sahf   
  409e56:	adc    ch,BYTE PTR [edx+ebp*8-0x40]
  409e5a:	add    al,0xc2
  409e5c:	mov    dh,0x83
  409e5e:	mov    esi,0x96e8c776
  409e63:	repz mov ds:0x8ed835c5,al
  409e69:	sahf   
  409e6a:	pop    ecx
  409e6b:	mov    ebx,0x6c9c4176
  409e70:	mov    dl,0x24
  409e72:	loope  0x409e12
  409e74:	mov    DWORD PTR [ebx+0x132542a1],0xe0406ab7
  409e7e:	sahf   
  409e7f:	imul   ebx,DWORD PTR [eax],0x67fa34e5
  409e85:	inc    ecx
  409e86:	cmp    cl,ah
  409e88:	mov    ecx,0x7c3f6205
  409e8d:	or     esp,DWORD PTR [edx+0x22]
  409e90:	lods   eax,DWORD PTR ds:[esi]
  409e91:	dec    edx
  409e92:	ds stc 
  409e94:	std    
  409e95:	inc    esp
  409e96:	mov    cl,0xa3
  409e98:	dec    esp
  409e99:	inc    eax
  409e9a:	mov    WORD PTR [ebx],?
  409e9c:	mov    ds:0x5d0fd19d,eax
  409ea1:	pop    es
  409ea2:	and    eax,0xae0176b1
  409ea7:	leave  
  409ea8:	fdivr  DWORD PTR [ebp+eax*1+0x7]
  409eac:	mov    edx,0xa4eac7ea
  409eb1:	icebp  
  409eb2:	call   0x1303cf6d
  409eb7:	cmp    al,0xb8
  409eb9:	lahf   
  409eba:	sbb    al,0x4b
  409ebc:	lock (bad) 
  409ebe:	mov    cl,0xce
  409ec0:	ret    
  409ec1:	retf   
  409ec2:	fwait
  409ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ec4:	pop    ebp
  409ec5:	dec    eax
  409ec6:	les    ebx,FWORD PTR [esi]
  409ec8:	ret    0xdc12
  409ecb:	mov    ecx,0xb1a01a07
  409ed0:	fisub  DWORD PTR [ecx]
  409ed2:	mov    al,0xc3
  409ed4:	jo     0x409e66
  409ed6:	stos   DWORD PTR es:[edi],eax
  409ed7:	inc    ebx
  409ed8:	dec    edi
  409ed9:	sbb    eax,0xda320c7
  409ede:	cld    
  409edf:	pushf  
  409ee0:	jmp    0x7b5b8f56
  409ee5:	mov    dh,dl
  409ee7:	ficom  WORD PTR [ebx+ebx*1+0x3cd24e14]
  409eee:	(bad)  
  409eef:	sar    BYTE PTR gs:[ebp-0x3e],0x9b
  409ef4:	mov    ah,0x45
  409ef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ef7:	fidivr DWORD PTR [ecx-0x7b]
  409efa:	xor    al,0x1b
  409efc:	pop    edi
  409efd:	xchg   ebx,eax
  409efe:	cld    
  409eff:	dec    edi
  409f00:	imul   BYTE PTR [esp+eiz*4-0x67ddde94]
  409f07:	cmp    ch,BYTE PTR [edi]
  409f09:	push   edi
  409f0a:	bound  edi,QWORD PTR [ebp-0x17]
  409f0d:	(bad)  
  409f0f:	dec    ecx
  409f10:	dec    esp
  409f11:	sub    DWORD PTR [edx+0xc31757e],edi
  409f17:	repnz sbb BYTE PTR [esi-0x41],al
  409f1b:	mov    dl,0xc3
  409f1d:	xchg   ebx,eax
  409f1e:	in     al,0x17
  409f20:	add    eax,0x267899d
  409f25:	ins    DWORD PTR es:[edi],dx
  409f26:	daa    
  409f27:	test   eax,0x766fff7b
  409f2c:	push   eax
  409f2d:	mov    dl,0x96
  409f2f:	cwde   
  409f30:	push   es
  409f31:	inc    eax
  409f32:	xchg   ecx,eax
  409f33:	inc    esp
  409f34:	sub    eax,0x48415260
  409f39:	xor    ah,BYTE PTR [eax+0x78]
  409f3c:	add    al,bl
  409f3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f3f:	mov    bh,0x44
  409f41:	push   cs
  409f42:	call   0xb4cf:0x869e9d71
  409f49:	add    edi,DWORD PTR [esi]
  409f4b:	cli    
  409f4c:	xor    eax,0x76b5502e
  409f51:	mov    ebx,0xf903a2f0
  409f56:	leave  
  409f57:	jp     0x409f0b
  409f59:	add    ah,BYTE PTR [esi-0x63d25ef8]
  409f5f:	xor    al,0xf2
  409f61:	cmp    esi,DWORD PTR [ecx-0x7f68526b]
  409f67:	das    
  409f68:	push   esi
  409f69:	xchg   edx,ebp
  409f6b:	jo     0x409fca
  409f6d:	inc    ebp
  409f6e:	jbe    0x409f6e
  409f70:	sahf   
  409f71:	adc    eax,0xede81d5c
  409f76:	ja     0x409fd2
  409f78:	test   eax,0x9dd5f25a
  409f7d:	mov    cl,0x8a
  409f7f:	out    dx,al
  409f80:	jmp    0x4910:0xac94c449
  409f87:	cmp    edx,eax
  409f89:	cli    
  409f8a:	adc    al,BYTE PTR [ebx+0x1b]
  409f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f8e:	in     al,0x85
  409f90:	(bad)  
  409f91:	or     al,0x1c
  409f93:	mov    eax,ds:0x185d1bb4
  409f98:	and    cl,BYTE PTR [edx]
  409f9a:	ret    
  409f9b:	mov    ds:0x2af9b657,eax
  409fa0:	pusha  
  409fa1:	sahf   
  409fa2:	mov    esp,0x6e68258b
  409fa7:	inc    eax
  409fa8:	daa    
  409fa9:	mov    bl,0x80
  409fab:	cs ret 
  409fad:	cmp    eax,0x8fd53fb8
  409fb2:	aad    0x64
  409fb4:	mov    BYTE PTR [eax],ah
  409fb6:	push   esp
  409fb7:	aaa    
  409fb8:	add    ebp,DWORD PTR [eax+0x39c11689]
  409fbe:	lods   eax,DWORD PTR ds:[esi]
  409fbf:	in     al,dx
  409fc0:	add    eax,0x5ad412a7
  409fc5:	jle    0x409f6f
  409fc7:	mov    cl,0xed
  409fc9:	hlt    
  409fca:	adc    eax,0x9a1b64c
  409fcf:	mov    bl,0x8
  409fd1:	cmp    edx,DWORD PTR [eax-0x7f868e8e]
  409fd7:	or     al,BYTE PTR [ebx+0x7f7a13ac]
  409fdd:	ss jns 0x409fcc
  409fe0:	in     eax,dx
  409fe1:	and    dh,dh
  409fe3:	inc    edi
  409fe4:	gs je  0x409fce
  409fe7:	clc    
  409fe8:	sbb    BYTE PTR [edx+0x7d2fe4b8],bh
  409fee:	sbb    al,0xf2
  409ff0:	inc    esp
  409ff1:	mov    ah,BYTE PTR [eax-0x39a706bf]
  409ff7:	(bad)  
  409ff9:	(bad)  
  409ffa:	sub    eax,0xda30fefd
  409fff:	cdq    
  40a000:	fadd   st(3),st
  40a002:	xor    edi,edi
  40a004:	fcmovnu st,st(4)
  40a006:	and    ch,BYTE PTR [eax]
  40a008:	pop    esi
  40a009:	lock stos DWORD PTR es:[edi],eax
  40a00b:	into   
  40a00c:	test   al,0xb2
  40a00e:	add    DWORD PTR [eax-0x75e078e5],edx
  40a014:	add    eax,0x73e6f448
  40a019:	sbb    eax,0xff575736
  40a01e:	enter  0x55b4,0x5
  40a022:	mov    edi,0xb7afb0ef
  40a027:	in     eax,0x45
  40a029:	push   esp
  40a02a:	retf   0x24eb
  40a02d:	call   0x61fa:0xc3f17f5d
  40a034:	ins    BYTE PTR es:[edi],dx
  40a035:	popf   
  40a036:	test   DWORD PTR [eax+0x36b58c2],esp
  40a03c:	sahf   
  40a03d:	cmp    BYTE PTR [esi-0x11],ah
  40a040:	sbb    BYTE PTR [ebx-0x49b8b68a],dl
  40a046:	push   ss
  40a047:	mov    bl,0x14
  40a049:	lahf   
  40a04a:	lahf   
  40a04b:	pushf  
  40a04c:	mov    al,dh
  40a04e:	retf   0x4d23
  40a051:	mov    cs,WORD PTR [edx-0x38cbe455]
  40a057:	shl    DWORD PTR [eax-0x1379992d],cl
  40a05d:	inc    esi
  40a05e:	xchg   esp,eax
  40a05f:	push   0x206b0f6e
  40a064:	push   DWORD PTR [ebp-0x1a]
  40a067:	mov    DWORD PTR [ebx+0x47],ebp
  40a06a:	iret   
  40a06b:	push   ebx
  40a06c:	in     eax,dx
  40a06d:	push   ebx
  40a06e:	mov    al,0x64
  40a070:	mov    ebp,0x356da28
  40a075:	adc    ecx,DWORD PTR [esi+0x15]
  40a078:	fadd   QWORD PTR [edx-0x66da41b2]
  40a07e:	adc    eax,0xed47a6a5
  40a083:	sbb    bl,dh
  40a085:	mov    al,ds:0xd4022ac7
  40a08a:	lock xor al,0x91
  40a08d:	pop    eax
  40a08e:	mov    ds:0xb342c6e,eax
  40a093:	sub    al,0x73
  40a095:	inc    ecx
  40a096:	mov    dl,0x75
  40a098:	fwait
  40a099:	dec    esp
  40a09a:	mov    ebp,0xf21f7156
  40a09f:	out    dx,eax
  40a0a0:	dec    edx
  40a0a1:	scas   eax,DWORD PTR es:[edi]
  40a0a2:	xchg   ecx,eax
  40a0a3:	pop    edi
  40a0a4:	hlt    
  40a0a5:	xor    edi,esp
  40a0a7:	push   esi
  40a0a8:	test   DWORD PTR [esi],0x93852793
  40a0ae:	xchg   ebp,eax
  40a0af:	shl    ebp,cl
  40a0b1:	add    BYTE PTR [esp+ecx*8+0x25],ah
  40a0b5:	cmp    DWORD PTR [edx-0x5ac17471],ecx
  40a0bb:	in     al,dx
  40a0bc:	xchg   edi,eax
  40a0bd:	xchg   ecx,eax
  40a0be:	lea    ebx,[ebp+0x52]
  40a0c1:	in     eax,dx
  40a0c2:	in     eax,dx
  40a0c3:	js     0x40a0b0
  40a0c5:	pop    ebp
  40a0c6:	loopne 0x40a077
  40a0c8:	sbb    BYTE PTR [ecx-0x60],al
  40a0cb:	xor    eax,0x1ec8b4b
  40a0d0:	jno    0x40a102
  40a0d2:	shr    edx,cl
  40a0d4:	add    edi,DWORD PTR [esi-0x76]
  40a0d7:	jb     0x40a0e9
  40a0d9:	mov    ds:0xb4bd7ac9,eax
  40a0de:	push   ebx
  40a0df:	jecxz  0x40a11d
  40a0e1:	scas   al,BYTE PTR es:[edi]
  40a0e2:	dec    esp
  40a0e3:	mov    ecx,DWORD PTR ds:0x77f0c41a
  40a0e9:	jp     0x40a0a8
  40a0eb:	push   ds
  40a0ec:	and    al,0x9
  40a0ee:	fisttp QWORD PTR [eax]
  40a0f0:	std    
  40a0f1:	data16 mov bh,0x97
  40a0f4:	jno    0x40a0f6
  40a0f6:	test   BYTE PTR [ebx-0x1c],bh
  40a0f9:	rcr    BYTE PTR [ecx+0x7f],1
  40a0fc:	jnp    0x40a116
  40a0fe:	jmp    0x40a0a1
  40a100:	jne    0x40a13c
  40a102:	in     eax,0xfa
  40a104:	jecxz  0x40a090
  40a106:	loope  0x40a0cc
  40a108:	add    eax,0xee3e0aaa
  40a10d:	enter  0x4594,0x6
  40a111:	fsubr  QWORD PTR [esi]
  40a113:	fadd   QWORD PTR [ebx+0x6a]
  40a116:	daa    
  40a117:	add    ebp,DWORD PTR [ecx+0x67]
  40a11a:	int3   
  40a11b:	or     esi,ebx
  40a11d:	adc    ah,BYTE PTR [ebx-0x58]
  40a120:	ror    DWORD PTR ds:0xcf0c7f0b,1
  40a126:	ins    BYTE PTR es:[edi],dx
  40a127:	out    dx,eax
  40a128:	es dec ax
  40a12b:	lock outs dx,DWORD PTR ds:[esi]
  40a12d:	sub    esi,DWORD PTR [ebp+0x20]
  40a130:	jmp    0xf628:0x3d74d713
  40a137:	jno    0x40a1b2
  40a139:	fs jle 0x40a0e5
  40a13c:	(bad)  
  40a13f:	xor    BYTE PTR [edx-0x4b],ah
  40a142:	mov    al,ds:0x97900fa4
  40a147:	xor    esi,DWORD PTR [esi-0x3d87284c]
  40a14d:	outs   dx,BYTE PTR ds:[esi]
  40a14e:	sbb    ebp,edi
  40a150:	stos   BYTE PTR es:[edi],al
  40a151:	sub    edi,DWORD PTR [esi+0x3ca05f87]
  40a157:	pop    es
  40a158:	mov    dl,0xfc
  40a15a:	in     al,0xf
  40a15c:	or     BYTE PTR [ebx+0x79d01f9],dl
  40a162:	cmp    al,0x88
  40a164:	lods   eax,DWORD PTR ds:[esi]
  40a165:	repnz lods eax,DWORD PTR ds:[esi]
  40a167:	test   eax,0xf4e8ae62
  40a16c:	fsub   DWORD PTR [eax-0x6619449c]
  40a172:	sub    ah,0x87
  40a175:	mov    edx,0x12e360c9
  40a17a:	sbb    BYTE PTR [esi+0xc],bl
  40a17d:	neg    BYTE PTR ds:0xfc9dc489
  40a183:	jo     0x40a177
  40a185:	push   0xfdf14cf1
  40a18a:	cmp    BYTE PTR [edi+ebp*8+0x44],cl
  40a18e:	inc    ebp
  40a18f:	mov    al,ds:0xab81e751
  40a194:	aas    
  40a195:	cmp    esi,DWORD PTR [edx+eax*1+0x453eed5a]
  40a19c:	cdq    
  40a19d:	jno    0x40a206
  40a19f:	or     ebp,DWORD PTR [ebp+edi*8+0x60e10242]
  40a1a6:	clc    
  40a1a7:	loop   0x40a15c
  40a1a9:	in     al,dx
  40a1aa:	jne    0x40a19a
  40a1ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1ad:	imul   ecx,DWORD PTR [ebx+0x6c],0x711ac824
  40a1b4:	jp     0x40a175
  40a1b6:	and    DWORD PTR [edx+0x22],esi
  40a1b9:	and    DWORD PTR [eax-0x58],esp
  40a1bc:	arpl   bx,bp
  40a1be:	and    DWORD PTR [ebx+0x8],ebx
  40a1c1:	mov    eax,0x1d46cbd4
  40a1c6:	xor    ebp,DWORD PTR [ecx]
  40a1c8:	push   edi
  40a1c9:	hlt    
  40a1ca:	enter  0x3566,0x5f
  40a1ce:	cmp    BYTE PTR [ecx-0x28],dl
  40a1d1:	arpl   WORD PTR [ecx],sp
  40a1d3:	mov    ebp,0x52a365f6
  40a1d8:	jmp    0x40a239
  40a1da:	shl    BYTE PTR [edi],0x90
  40a1dd:	sahf   
  40a1de:	cs loop 0x40a19a
  40a1e1:	out    0xac,al
  40a1e3:	repnz mov esp,0xaac51f11
  40a1e9:	sub    al,0xe7
  40a1eb:	js     0x40a1cb
  40a1ed:	adc    bl,BYTE PTR [esi+0x6a39a949]
  40a1f3:	repz jae 0x40a214
  40a1f6:	out    dx,eax
  40a1f7:	rcr    BYTE PTR es:[ecx],cl
  40a1fa:	or     eax,0x48ba97dc
  40a1ff:	out    dx,eax
  40a200:	xchg   ebx,eax
  40a201:	loop   0x40a24c
  40a203:	imul   ecx,DWORD PTR [ebx+0x3c9a668c],0xfffffff6
  40a20a:	fadd   st(7),st
  40a20c:	xchg   ecx,eax
  40a20d:	xor    cl,BYTE PTR [edx+0x63]
  40a210:	jp     0x40a1df
  40a212:	lods   al,BYTE PTR ds:[esi]
  40a213:	arpl   ax,sp
  40a215:	leave  
  40a216:	neg    BYTE PTR [ecx-0x54]
  40a219:	mov    edx,0x453b80c2
  40a21e:	lahf   
  40a21f:	pop    ss
  40a220:	(bad)  
  40a221:	or     ch,al
  40a223:	enter  0xcd66,0xad
  40a227:	ficom  DWORD PTR [edx]
  40a229:	(bad)  
  40a22a:	test   DWORD PTR [eax-0x5],edi
  40a22d:	mov    ebx,0xa8940d3d
  40a232:	je     0x40a1ca
  40a234:	sbb    eax,0x4b1aa948
  40a239:	adc    eax,0x85be02eb
  40a23e:	jg     0x40a295
  40a240:	inc    ebx
  40a241:	mov    cl,0x8a
  40a243:	loope  0x40a282
  40a245:	or     BYTE PTR [ecx-0x2a23afe6],dh
  40a24b:	jecxz  0x40a2b8
  40a24d:	fnstenv [edx]
  40a24f:	pop    edi
  40a250:	aas    
  40a251:	loop   0x40a239
  40a253:	jno    0x40a240
  40a255:	add    esp,ebx
  40a257:	push   eax
  40a258:	and    edx,DWORD PTR [esp+ebx*1+0x20f750c6]
  40a25f:	out    dx,al
  40a260:	ret    0xb26a
  40a263:	mov    ch,0x60
  40a265:	xchg   ecx,eax
  40a266:	mov    WORD PTR [esi-0x4a],?
  40a269:	repnz pop ss
  40a26b:	push   ds
  40a26c:	arpl   WORD PTR ds:0x8b5b00f7,bx
  40a272:	(bad)
  40a276:	test   DWORD PTR [ebp-0x7eed18e6],edx
  40a27c:	aaa    
  40a27d:	mov    DWORD PTR [ecx-0x7bb5c00a],ecx
  40a283:	in     al,0x59
  40a285:	dec    ecx
  40a286:	scas   eax,DWORD PTR es:[edi]
  40a287:	pop    eax
  40a288:	(bad)  
  40a28a:	neg    BYTE PTR [ebx]
  40a28c:	add    ch,BYTE PTR [esi+0x2]
  40a28f:	cmc    
  40a290:	pop    ss
  40a291:	pop    ss
  40a292:	jmp    0x4a686189
  40a297:	hlt    
  40a298:	mov    esi,0x3eb5cb32
  40a29d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a29e:	adc    esi,DWORD PTR [bx+si]
  40a2a1:	sub    DWORD PTR [esi+0x3e40a1f2],ebx
  40a2a7:	cwde   
  40a2a8:	pop    esi
  40a2a9:	cmp    BYTE PTR [ecx+ecx*2+0x4],0xff
  40a2ae:	dec    ecx
  40a2af:	adc    al,0xcd
  40a2b1:	push   0xe80c5043
  40a2b6:	in     eax,0x92
  40a2b8:	jb     0x40a2f1
  40a2ba:	std    
  40a2bb:	arpl   WORD PTR [ebx-0x75eb47ef],dx
  40a2c1:	gs (bad) 
  40a2c3:	dec    esp
  40a2c4:	shl    edx,cl
  40a2c6:	mov    ah,0x7a
  40a2c8:	sbb    BYTE PTR [ecx+0x7b],al
  40a2cb:	stos   DWORD PTR es:[edi],eax
  40a2cc:	sub    BYTE PTR [ebx],dh
  40a2ce:	sub    ah,bh
  40a2d0:	repnz (bad) 
  40a2d2:	in     eax,0x9f
  40a2d4:	push   ecx
  40a2d5:	(bad)  
  40a2d6:	jg     0x40a2e1
  40a2d8:	cmp    al,0xaf
  40a2da:	push   ecx
  40a2db:	pop    edi
  40a2dc:	mov    dl,0xf7
  40a2de:	test   DWORD PTR [ebp+0x6e],esi
  40a2e1:	cmp    DWORD PTR [edx],0x369e1d20
  40a2e7:	dec    ecx
  40a2e8:	push   ebx
  40a2e9:	xchg   ebp,eax
  40a2ea:	je     0x40a300
  40a2ec:	nop
  40a2ed:	xchg   edi,eax
  40a2ee:	inc    edi
  40a2ef:	and    eax,0x6a21f69b
  40a2f4:	sbb    bh,BYTE PTR [ebx]
  40a2f6:	jne    0x40a2ec
  40a2f8:	(bad)  
  40a2f9:	sbb    bl,BYTE PTR [eax-0x13]
  40a2fc:	in     eax,0xd3
  40a2fe:	scas   al,BYTE PTR es:[edi]
  40a2ff:	xor    eax,0x15d69b36
  40a304:	jecxz  0x40a340
  40a306:	cmp    BYTE PTR [ebp-0x624dc1c3],ch
  40a30c:	ja     0xa343ee4e
  40a312:	sti    
  40a313:	pop    ebx
  40a314:	fwait
  40a315:	mov    dh,0x35
  40a317:	push   es
  40a318:	adc    BYTE PTR [esi],ah
  40a31a:	or     BYTE PTR [esi],bl
  40a31c:	addr16 ret 0x6851
  40a320:	push   eax
  40a321:	mov    dh,0xba
  40a323:	inc    ebp
  40a324:	xchg   esp,eax
  40a325:	cmp    BYTE PTR ds:0x37d04e86,0x35
  40a32c:	mov    esp,DWORD PTR [ecx+0x4928a414]
  40a332:	xlat   BYTE PTR ds:[ebx]
  40a333:	push   0x61c6c19b
  40a338:	test   al,0x46
  40a33a:	cmp    al,0x4b
  40a33c:	loope  0x40a356
  40a33e:	mov    bh,bh
  40a340:	retf   0x38f1
  40a343:	jecxz  0x40a349
  40a345:	div    BYTE PTR [edi-0x62]
  40a348:	add    al,0x74
  40a34a:	outs   dx,DWORD PTR ds:[esi]
  40a34b:	mov    ebp,0x856b4fd5
  40a350:	xor    ch,ch
  40a352:	jecxz  0x40a3bd
  40a354:	or     eax,0x259a34d9
  40a359:	jbe    0x40a2f3
  40a35b:	popa   
  40a35c:	cdq    
  40a35d:	inc    ah
  40a35f:	sbb    cl,ah
  40a361:	lock push 0x1c
  40a364:	cwde   
  40a365:	add    bh,BYTE PTR [edi+edx*1-0x55]
  40a369:	dec    BYTE PTR [edi-0x2f]
  40a36c:	adc    DWORD PTR [eax-0x25],esp
  40a36f:	ficom  DWORD PTR [bp+si+0x18]
  40a373:	(bad)  
  40a374:	mov    ebp,0x4287340d
  40a379:	std    
  40a37a:	cs loope 0x40a3a6
  40a37d:	push   ds
  40a37e:	mov    edi,edi
  40a380:	jp     0x40a386
  40a382:	in     al,0x53
  40a384:	cmp    eax,0xe10617f
  40a389:	dec    edi
  40a38a:	(bad)  
  40a38b:	shl    dl,1
  40a38d:	mov    ds:0x9e450604,al
  40a392:	sbb    al,0x90
  40a394:	iret   
  40a395:	ss xchg ebp,eax
  40a397:	ds xchg edi,eax
  40a399:	add    DWORD PTR [eax],ebp
  40a39b:	jle    0x40a411
  40a39d:	sub    BYTE PTR [edx+0x22275137],ah
  40a3a3:	(bad)  [edx-0x32]
  40a3a6:	scas   eax,DWORD PTR es:[edi]
  40a3a7:	leave  
  40a3a8:	adc    al,0xf9
  40a3aa:	xchg   ebx,eax
  40a3ab:	xchg   ebp,eax
  40a3ac:	call   0x9e36:0xf8699534
  40a3b3:	test   BYTE PTR [edi],ah
  40a3b5:	loop   0x40a3bb
  40a3b7:	add    al,0xda
  40a3b9:	leave  
  40a3ba:	dec    edi
  40a3bb:	outs   dx,BYTE PTR ds:[si]
  40a3bd:	fstp   QWORD PTR [ecx-0x64ab39b0]
  40a3c3:	pop    esp
  40a3c4:	sub    BYTE PTR [eax+edx*2+0x45],ah
  40a3c8:	dec    ebx
  40a3c9:	sub    al,0x37
  40a3cb:	push   ecx
  40a3cc:	mov    edi,0xdb222af7
  40a3d1:	jg     0x40a425
  40a3d3:	sub    dl,bl
  40a3d5:	push   ecx
  40a3d6:	sbb    BYTE PTR [ecx-0x56],0x67
  40a3da:	push   ebp
  40a3db:	mov    edi,0xb1db58d5
  40a3e0:	sbb    ebp,edx
  40a3e2:	data16 sbb cl,bh
  40a3e5:	call   0xda7f:0x54869fc5
  40a3ec:	inc    eax
  40a3ed:	xchg   edi,eax
  40a3ee:	repnz (bad) 
  40a3f0:	into   
  40a3f1:	cli    
  40a3f2:	mov    BYTE PTR [edi+esi*4+0xf],ch
  40a3f6:	in     eax,dx
  40a3f7:	sbb    edx,edx
  40a3f9:	dec    ecx
  40a3fa:	inc    ebx
  40a3fb:	std    
  40a3fc:	cmp    eax,0x45465e30
  40a401:	stc    
  40a402:	jo     0x40a3c0
  40a404:	mov    edx,0x83a0a048
  40a409:	retf   0x9ef0
  40a40c:	pop    ecx
  40a40d:	into   
  40a40e:	xchg   ecx,eax
  40a40f:	push   ebp
  40a410:	push   eax
  40a411:	test   eax,0xe8b6715
  40a416:	push   0xa93e863d
  40a41b:	mov    al,ds:0xa9fa0039
  40a420:	cmc    
  40a421:	les    esp,FWORD PTR [edi]
  40a423:	xor    ebx,DWORD PTR [ecx+0x62]
  40a426:	jns    0x40a3f9
  40a428:	enter  0x5f31,0xab
  40a42c:	idiv   DWORD PTR [ebx]
  40a42e:	cmp    BYTE PTR [eax+0x5cfdc381],bh
  40a434:	das    
  40a435:	ret    
  40a436:	jg     0x40a3d2
  40a438:	bound  esp,QWORD PTR [eax-0x40]
  40a43b:	dec    edi
  40a43c:	shr    DWORD PTR [ebx+ebx*2-0x7b69a7d3],cl
  40a443:	stc    
  40a444:	aas    
  40a445:	push   cs
  40a446:	mov    ds:0xbb9c500c,al
  40a44b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a44c:	iret   
  40a44d:	cmp    dl,dh
  40a44f:	popf   
  40a450:	jl     0x40a450
  40a452:	out    dx,al
  40a453:	jae    0x40a480
  40a455:	push   ds
  40a456:	adc    esp,0xa23d717d
  40a45c:	sub    al,0x80
  40a45e:	hlt    
  40a45f:	std    
  40a460:	shl    BYTE PTR [edi+ebp*8-0x636a7c4],cl
  40a467:	adc    al,0xa8
  40a46a:	cmp    BYTE PTR [eax+0x5f980850],0x9b
  40a471:	mov    ebp,DWORD PTR [esi+0x79]
  40a474:	adc    eax,esi
  40a476:	lea    eax,[ecx+0x25]
  40a479:	popa   
  40a47a:	je     0x40a40f
  40a47c:	cmp    esi,DWORD PTR [edi]
  40a47e:	add    BYTE PTR [esi+0x27],cl
  40a481:	push   ebp
  40a482:	ja     0x40a4a0
  40a484:	or     al,0x31
  40a486:	cdq    
  40a487:	das    
  40a488:	test   eax,0xe9ef722d
  40a48d:	lahf   
  40a48e:	outs   dx,BYTE PTR ds:[esi]
  40a48f:	fwait
  40a490:	mov    esp,0xe24f80b4
  40a495:	loope  0x40a4c7
  40a497:	icebp  
  40a498:	lds    ebp,FWORD PTR [ebp+esi*1+0xeb2fd96]
  40a49f:	shl    BYTE PTR [edi+0x1423df66],cl
  40a4a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4a6:	mov    esi,0x83ad67a
  40a4ab:	lea    ebp,[eax-0x3d]
  40a4ae:	imul   eax,esp,0xfe1dd901
  40a4b4:	ret    
  40a4b5:	push   es
  40a4b6:	jmp    0x6772:0xa611685a
  40a4bd:	inc    edx
  40a4be:	test   DWORD PTR [ebp-0x731a2915],ebx
  40a4c4:	dec    edi
  40a4c5:	inc    ebx
  40a4c6:	inc    ecx
  40a4c7:	push   ss
  40a4c8:	xlat   BYTE PTR ds:[ebx]
  40a4c9:	scas   eax,DWORD PTR es:[edi]
  40a4ca:	jle    0x40a46b
  40a4cc:	add    eax,0xebe19990
  40a4d1:	xor    ecx,DWORD PTR [ecx]
  40a4d3:	in     al,dx
  40a4d4:	gs mov edi,0x6b6ccdf7
  40a4da:	cmp    BYTE PTR [ebx-0x26],0xdf
  40a4de:	mov    ?,WORD PTR [esi-0x2]
  40a4e1:	adc    DWORD PTR [eax+0x32],esp
  40a4e4:	and    al,0xa7
  40a4e6:	or     BYTE PTR [esp+edi*1-0x75461845],ch
  40a4ed:	inc    ecx
  40a4ee:	xchg   esi,eax
  40a4ef:	pop    edi
  40a4f0:	int3   
  40a4f1:	test   BYTE PTR [ebp-0xf],al
  40a4f4:	sub    BYTE PTR [eax-0x15],0x3c
  40a4f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4f9:	scas   al,BYTE PTR es:[edi]
  40a4fa:	stos   DWORD PTR es:[edi],eax
  40a4fb:	and    eax,0x9c635dcb
  40a500:	sub    bl,BYTE PTR [edx-0x70803c89]
  40a506:	rcr    bh,cl
  40a508:	cmp    dl,BYTE PTR [edx-0x75638669]
  40a50e:	in     al,dx
  40a50f:	mov    ebx,0xdcf6b9ce
  40a514:	cmp    edx,DWORD PTR [eax-0x7093dce2]
  40a51a:	dec    eax
  40a51b:	mov    eax,0x90df1689
  40a520:	lods   al,BYTE PTR ds:[esi]
  40a521:	(bad)  
  40a522:	call   0x10d38620
  40a527:	push   esi
  40a528:	pop    esp
  40a529:	arpl   di,ax
  40a52b:	ja     0x40a4b4
  40a52d:	pop    esp
  40a52e:	push   ss
  40a52f:	mov    ecx,0x7b6b4dae
  40a534:	fwait
  40a535:	mov    esp,0xf8228a54
  40a53a:	arpl   WORD PTR [edx+0x2b],cx
  40a53d:	sub    eax,0x7dadb3b9
  40a542:	mov    WORD PTR [edx-0xdf05477],?
  40a548:	fisttp QWORD PTR [ecx-0x69ba928]
  40a54e:	hlt    
  40a54f:	lods   al,BYTE PTR cs:[esi]
  40a551:	mov    eax,ds:0x1ecbcbf9
  40a556:	xor    al,0xf9
  40a558:	fidiv  DWORD PTR [ebp+0x78]
  40a55b:	adc    esi,DWORD PTR [edx-0x766b7059]
  40a561:	mov    cl,0xd0
  40a563:	jp     0x40a583
  40a565:	test   al,0x7e
  40a567:	xchg   esp,eax
  40a568:	ret    
  40a569:	mov    ebp,0xb8dac946
  40a56e:	sahf   
  40a56f:	push   ebp
  40a570:	xchg   edx,edx
  40a572:	pop    eax
  40a573:	test   BYTE PTR cs:[edi-0x4e],bh
  40a577:	cmp    bh,BYTE PTR [ebx+ecx*1+0x4b]
  40a57b:	test   DWORD PTR [edx+ecx*2],esi
  40a57e:	push   ss
  40a57f:	fcom   QWORD PTR [ebp+0x73aa46f5]
  40a585:	or     BYTE PTR [edx-0x29],dl
  40a588:	push   eax
  40a589:	repz repz xor DWORD PTR es:[eax-0x6a],0x60
  40a590:	or     ebp,esi
  40a592:	push   0xf95942b8
  40a597:	and    edx,DWORD PTR [esi+eiz*8-0x3d]
  40a59b:	add    DWORD PTR [esi+0xa],edi
  40a59e:	call   FWORD PTR [ebx]
  40a5a0:	fldcw  WORD PTR [esi]
  40a5a2:	cld    
  40a5a3:	pop    ebx
  40a5a4:	push   esi
  40a5a5:	outs   dx,BYTE PTR ds:[esi]
  40a5a6:	not    edx
  40a5a8:	xor    al,0x92
  40a5aa:	ret    
  40a5ab:	ins    BYTE PTR es:[edi],dx
  40a5ac:	sbb    al,0x14
  40a5ae:	jle    0x40a560
  40a5b0:	and    BYTE PTR [ebp-0x8],al
  40a5b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5b5:	aad    0x36
  40a5b7:	xchg   esi,eax
  40a5b8:	or     bl,cl
  40a5ba:	sti    
  40a5bb:	(bad)  
  40a5bc:	push   ebp
  40a5bd:	cmp    DWORD PTR [esi],ebx
  40a5bf:	add    bh,cl
  40a5c1:	cmp    DWORD PTR [eax+eax*1-0x6a3244ba],edx
  40a5c8:	dec    edi
  40a5c9:	outs   dx,BYTE PTR ds:[esi]
  40a5ca:	dec    esp
  40a5cb:	fcom   QWORD PTR [ebx]
  40a5cd:	inc    ebp
  40a5ce:	push   cs
  40a5cf:	das    
  40a5d0:	inc    eax
  40a5d1:	add    DWORD PTR [ecx],esp
  40a5d3:	je     0x40a5f0
  40a5d5:	push   es
  40a5d6:	pop    edx
  40a5d7:	pop    ebp
  40a5d8:	mov    edi,0x6b3bdab3
  40a5dd:	jmp    0x40a569
  40a5df:	dec    ecx
  40a5e0:	jmp    0xce57296e
  40a5e5:	add    al,0xc1
  40a5e7:	and    al,0x6
  40a5e9:	pushf  
  40a5ea:	jmp    0x9c44:0x2c7d9ab9
  40a5f1:	ss xor dl,al
  40a5f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5f5:	xchg   esi,eax
  40a5f6:	(bad)  
  40a5f7:	(bad)  
  40a5f8:	out    0xeb,al
  40a5fa:	push   esp
  40a5fb:	outs   dx,DWORD PTR ds:[esi]
  40a5fc:	add    cl,BYTE PTR [ebx]
  40a5fe:	cmc    
  40a5ff:	push   0xffffffcc
  40a601:	and    dh,BYTE PTR [eax-0x40]
  40a604:	jge    0x40a5a5
  40a606:	add    BYTE PTR [eax+0x2c397de6],0x8b
  40a60d:	test   DWORD PTR [esi-0x2b],edi
  40a610:	fucomp st(3)
  40a612:	loope  0x40a5b4
  40a614:	(bad)  
  40a615:	in     eax,0x82
  40a617:	sub    eax,0x82b62b6b
  40a61c:	sub    DWORD PTR [edi-0x68],esp
  40a61f:	mov    dh,0x8a
  40a621:	jge    0x40a664
  40a623:	inc    bp
  40a625:	stc    
  40a626:	xor    ah,BYTE PTR [edi-0xd]
  40a629:	addr16 mov dh,0xee
  40a62c:	ins    BYTE PTR es:[edi],dx
  40a62d:	in     al,0x8c
  40a62f:	mov    eax,0x3e570e5f
  40a634:	sub    ah,BYTE PTR [ecx-0xb2be7c7]
  40a63a:	rcr    al,cl
  40a63c:	adc    BYTE PTR [edx-0x3dce99ee],0x1c
  40a643:	pop    esp
  40a644:	add    DWORD PTR [ebx],eax
  40a646:	sub    eax,0x962c315d
  40a64b:	hlt    
  40a64c:	cmp    BYTE PTR [eax+0x3cf04f28],dl
  40a652:	pop    eax
  40a653:	jle    0x40a5e5
  40a655:	lock add BYTE PTR [ebx],bl
  40a658:	push   edi
  40a659:	mov    ebx,0x59ba96b7
  40a65e:	aam    0xb9
  40a660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a661:	enter  0x8773,0x8b
  40a665:	test   eax,0xc2438419
  40a66a:	adc    esi,esi
  40a66c:	sub    BYTE PTR [esi-0x6912e183],0x77
  40a673:	(bad)  
  40a674:	xor    al,0xec
  40a676:	cmp    DWORD PTR [ecx-0x38],0xffffff84
  40a67a:	jns    0x40a664
  40a67c:	sbb    bh,BYTE PTR [edi]
  40a67e:	push   ecx
  40a67f:	out    0x8c,al
  40a681:	(bad)  
  40a683:	fadd   DWORD PTR [ebx+0x7a]
  40a686:	xor    DWORD PTR [ebx-0x21],edi
  40a689:	push   esi
  40a68a:	daa    
  40a68b:	lock sub DWORD PTR [ecx+0x2a],esi
  40a68f:	push   ds
  40a690:	push   ds
  40a691:	dec    eax
  40a692:	or     bl,cl
  40a694:	pushf  
  40a695:	sbb    DWORD PTR [ebx-0x4f1e13d8],0xfaff23ad
  40a69f:	lods   eax,DWORD PTR ds:[esi]
  40a6a0:	std    
  40a6a1:	loopne 0x40a64d
  40a6a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6a4:	repnz in al,dx
  40a6a6:	xor    eax,DWORD PTR [ebx-0x39d032dd]
  40a6ac:	and    cl,BYTE PTR [eax+0x47c63966]
  40a6b2:	cmp    BYTE PTR [ebp+0x40],bh
  40a6b5:	lahf   
  40a6b6:	jmp    0x671b8195
  40a6bb:	ins    DWORD PTR es:[edi],dx
  40a6bc:	push   ebp
  40a6bd:	out    dx,eax
  40a6be:	ds cmc 
  40a6c0:	(bad)  
  40a6c1:	(bad)  
  40a6c2:	lods   eax,DWORD PTR ds:[esi]
  40a6c3:	pop    ebx
  40a6c4:	div    DWORD PTR [ebx]
  40a6c6:	nop
  40a6c7:	sub    al,0xdd
  40a6c9:	or     eax,0x342b203a
  40a6ce:	cmp    DWORD PTR [edi+0x75],eax
  40a6d1:	push   0xffffffe7
  40a6d3:	lea    esi,ds:0x70fbe4c7
  40a6d9:	jge    0x40a726
  40a6db:	pop    ds
  40a6dc:	test   DWORD PTR [edi-0x1b764e46],esi
  40a6e2:	adc    eax,0xa04063e4
  40a6e7:	loop   0x40a732
  40a6e9:	jnp    0x40a6be
  40a6eb:	mov    ch,0x68
  40a6ed:	mov    eax,0x5d8fee7d
  40a6f2:	xchg   edx,eax
  40a6f3:	jae    0x40a6c8
  40a6f5:	test   DWORD PTR [edi+0xe0c4a3f],edi
  40a6fb:	push   ecx
  40a6fc:	sub    eax,0x2f562b1e
  40a701:	sub    al,0xa5
  40a703:	test   BYTE PTR [edi],0x18
  40a706:	mov    ecx,0x7ef38ec1
  40a70b:	int3   
  40a70c:	sbb    DWORD PTR [ecx-0x3a],ebp
  40a70f:	mov    ah,0xfe
  40a711:	into   
  40a712:	xor    DWORD PTR [ebx-0x6f],ebp
  40a715:	sbb    eax,0xc6ccb373
  40a71a:	dec    eax
  40a71b:	out    0x31,al
  40a71d:	xchg   BYTE PTR [edi+ecx*4-0x19],ah
  40a721:	fild   QWORD PTR [ebx-0x2e]
  40a724:	dec    ecx
  40a725:	or     esp,DWORD PTR [edi+0x5024d5d2]
  40a72b:	inc    esp
  40a72c:	sub    BYTE PTR [esi+edi*2+0x8],bl
  40a730:	in     eax,dx
  40a731:	adc    BYTE PTR [edi],bl
  40a733:	enter  0x9109,0xb9
  40a737:	fs push 0xffffffac
  40a73a:	popf   
  40a73b:	or     eax,0xd3cbbaa2
  40a740:	test   eax,0x513c7f43
  40a745:	xchg   ebx,eax
  40a746:	test   al,0x9f
  40a748:	jge    0x40a794
  40a74a:	cmp    eax,0x9dff356f
  40a74f:	sub    edx,edi
  40a751:	cld    
  40a752:	cmp    ebx,DWORD PTR [ecx]
  40a754:	pop    ebp
  40a755:	jmp    0x2a63780c
  40a75a:	xchg   DWORD PTR [ecx+0x49a52b2f],ebx
  40a760:	cmp    al,0x71
  40a762:	push   ebx
  40a763:	retf   0xef59
  40a766:	push   0x4f
  40a768:	fcomp  QWORD PTR [eax+edi*1+0x5f8d27e0]
  40a76f:	jo     0x40a7c3
  40a771:	dec    ebp
  40a772:	test   BYTE PTR [edi],0xdc
  40a775:	sbb    esi,DWORD PTR [ebx]
  40a777:	xchg   edi,eax
  40a778:	xor    DWORD PTR [esi],eax
  40a77a:	push   0x30
  40a77c:	outs   dx,BYTE PTR ds:[esi]
  40a77d:	test   eax,0xb816f2de
  40a782:	(bad)  
  40a783:	lods   eax,DWORD PTR ds:[esi]
  40a784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a785:	jmp    0x40a72e
  40a787:	lods   eax,DWORD PTR ds:[esi]
  40a789:	mov    edi,0xf656ab8b
  40a78e:	pop    edx
  40a78f:	mov    edx,0x5b798a4a
  40a794:	mov    edx,0xb47bbf3f
  40a799:	and    ebp,DWORD PTR [edi]
  40a79b:	inc    esi
  40a79c:	lods   al,BYTE PTR ds:[esi]
  40a79d:	dec    ebp
  40a79e:	push   cs
  40a79f:	jp     0x40a76d
  40a7a1:	pop    es
  40a7a2:	and    al,0x36
  40a7a4:	into   
  40a7a5:	cmp    eax,0x4f9cb4c6
  40a7aa:	out    0xf,eax
  40a7ac:	pop    eax
  40a7ad:	pop    edi
  40a7ae:	test   edi,ecx
  40a7b0:	pop    ebp
  40a7b1:	pop    eax
  40a7b2:	sub    ah,BYTE PTR [edx]
  40a7b4:	fsub   st,st(1)
  40a7b6:	jle    0x40a77b
  40a7b8:	(bad)  
  40a7b9:	mov    DWORD PTR [ecx+0x791c1412],0xf2110027
  40a7c3:	dec    DWORD PTR [eax+edi*1-0x103f24c4]
  40a7ca:	sti    
  40a7cb:	shl    dh,1
  40a7cd:	mov    dh,0xc
  40a7cf:	or     BYTE PTR [ebx],ah
  40a7d1:	ret    0xca90
  40a7d4:	inc    esi
  40a7d5:	shl    DWORD PTR [ecx+ebp*1],0x9c
  40a7d9:	test   eax,0xab0d3aad
  40a7de:	mov    bh,0xee
  40a7e0:	cs inc edx
  40a7e2:	adc    eax,0x879134ad
  40a7e7:	pop    esi
  40a7e8:	rol    DWORD PTR [edx+0x24],1
  40a7eb:	pop    edx
  40a7ec:	mov    WORD PTR [ecx-0x490b6091],gs
  40a7f2:	lds    edi,FWORD PTR [esi+0x64]
  40a7f5:	mov    cl,0xbf
  40a7f7:	dec    edi
  40a7f8:	mov    ebp,0x45e625b6
  40a7fd:	ja     0x40a79f
  40a7ff:	dec    esi
  40a800:	push   ss
  40a801:	cmp    BYTE PTR [ebp-0x3c0de8b3],bh
  40a807:	add    BYTE PTR [eax+0x3fb6a2aa],bl
  40a80d:	outs   dx,BYTE PTR ds:[esi]
  40a80e:	add    DWORD PTR [ebx],0x8
  40a811:	cmc    
  40a812:	stos   DWORD PTR es:[edi],eax
  40a813:	lods   al,BYTE PTR ds:[esi]
  40a814:	cmp    BYTE PTR [esi-0x768266cd],0xe6
  40a81b:	cwde   
  40a81c:	xchg   esp,eax
  40a81d:	pop    edi
  40a81e:	shl    BYTE PTR [eax-0x2b22a6d8],0x39
  40a825:	adc    edx,DWORD PTR [esi+edi*4]
  40a828:	ins    DWORD PTR es:[edi],dx
  40a829:	mov    cl,0xce
  40a82b:	daa    
  40a82c:	mov    ebx,0xc12b83d5
  40a831:	hlt    
  40a832:	sub    al,0x6a
  40a834:	lahf   
  40a835:	inc    ecx
  40a836:	cmp    bh,BYTE PTR [ebx+0x151681e]
  40a83c:	test   eax,0xa2b5beb4
  40a841:	xchg   esi,eax
  40a842:	jns    0x40a8a0
  40a844:	(bad)  
  40a845:	nop
  40a846:	push   cs
  40a847:	xor    ah,BYTE PTR ds:0xd9e630c
  40a84d:	mov    bl,0xe2
  40a84f:	fmul   DWORD PTR [ecx+0x79f2f593]
  40a855:	popf   
  40a856:	ss cwde 
  40a858:	dec    ecx
  40a859:	test   ah,bl
  40a85b:	out    0xb1,eax
  40a85d:	stc    
  40a85e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a85f:	scas   eax,DWORD PTR es:[edi]
  40a860:	js     0x40a861
  40a862:	mov    edx,0xadc7c05a
  40a867:	call   0x39389f2f
  40a86c:	cwde   
  40a86d:	pop    ds
  40a86e:	and    DWORD PTR [ebp-0x7],ebp
  40a871:	fsub   DWORD PTR [edx-0x28]
  40a874:	cmc    
  40a875:	jae    0x40a874
  40a877:	add    esp,DWORD PTR [ebx]
  40a879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a87a:	xchg   esp,eax
  40a87b:	mov    BYTE PTR [esi-0x10f1d76],bl
  40a881:	icebp  
  40a882:	jmp    0x40a84e
  40a884:	nop
  40a885:	loop   0x40a8e5
  40a887:	(bad)  
  40a888:	sbb    BYTE PTR ds:0x93fa357f,ch
  40a88e:	outs   dx,BYTE PTR ds:[esi]
  40a88f:	maskmovq mm5,(bad)
  40a890:	imul   DWORD PTR [esi-0x75]
  40a893:	mov    al,0xa6
  40a895:	aas    
  40a896:	(bad)  
  40a897:	rol    BYTE PTR [eax+ebp*2],1
  40a89a:	push   ebx
  40a89b:	shr    cl,0x24
  40a89e:	test   DWORD PTR [ebx],esi
  40a8a0:	outs   dx,DWORD PTR ds:[esi]
  40a8a1:	fistp  WORD PTR [ecx-0x12]
  40a8a4:	(bad)  
  40a8a6:	adc    eax,DWORD PTR es:[ecx-0x6779d625]
  40a8ad:	mov    esi,0x3b544760
  40a8b2:	xor    BYTE PTR [edx-0x32a04da6],dh
  40a8b8:	jecxz  0x40a867
  40a8ba:	inc    edi
  40a8bb:	cmp    ah,bh
  40a8bd:	div    BYTE PTR [edi+ebx*1-0x68]
  40a8c1:	fisub  WORD PTR [edx]
  40a8c3:	sti    
  40a8c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8c5:	add    DWORD PTR [edx+0x5e0c9c6f],edi
  40a8cb:	test   eax,0x1ee99c76
  40a8d0:	lods   eax,DWORD PTR ds:[esi]
  40a8d1:	and    al,0x2c
  40a8d3:	mov    ds:0x5612931,al
  40a8d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8d9:	je     0x40a8cc
  40a8db:	pop    eax
  40a8dc:	(bad)  
  40a8de:	sti    
  40a8df:	in     eax,0x71
  40a8e1:	adc    esi,esi
  40a8e3:	fisub  DWORD PTR [edx+esi*8+0x526110d6]
  40a8ea:	aas    
  40a8eb:	addr16 (bad) 
  40a8ed:	xchg   esp,eax
  40a8ee:	or     eax,0x51acda1
  40a8f3:	jp     0x40a90d
  40a8f5:	int3   
  40a8f6:	(bad)  
  40a8f7:	push   0x29
  40a8f9:	sbb    al,0x90
  40a8fb:	aaa    
  40a8fc:	mov    gs,WORD PTR [edx+ebx*2+0x7d]
  40a900:	out    dx,al
  40a901:	test   al,0x73
  40a903:	xchg   ebx,eax
  40a904:	shr    al,cl
  40a906:	inc    edx
  40a907:	rol    DWORD PTR [edx+ebx*8-0x55fccca4],cl
  40a90e:	retf   
  40a90f:	jmp    0x8468aab7
  40a914:	dec    ebp
  40a915:	jno    0x40a922
  40a917:	lods   al,BYTE PTR ds:[esi]
  40a918:	mov    edi,0x849cfe0f
  40a91d:	lock adc cl,0x2
  40a921:	mov    edx,0xa4359563
  40a926:	sti    
  40a927:	add    cl,0x81
  40a92a:	jmp    0x63529d16
  40a92f:	lods   al,BYTE PTR ds:[esi]
  40a930:	adc    ebx,DWORD PTR ds:0x2cf96db4
  40a936:	jmp    0xea31d5be
  40a93b:	mov    dl,0x5a
  40a93d:	pop    ecx
  40a93e:	loop   0x40a948
  40a940:	or     al,BYTE PTR [ebp+0x6b]
  40a943:	stos   BYTE PTR es:[edi],al
  40a944:	add    eax,0x8791df87
  40a949:	(bad)  
  40a94a:	ds loopne 0x40a971
  40a94d:	sub    esp,DWORD PTR [edi-0x6fd189b7]
  40a953:	(bad)  
  40a954:	fbld   TBYTE PTR [ecx]
  40a956:	cld    
  40a957:	test   BYTE PTR [ebp-0x38a7104],0x43
  40a95e:	mov    esp,0xf3f11f35
  40a963:	je     0x40a97a
  40a965:	out    0x48,eax
  40a967:	jbe    0x40a900
  40a969:	leave  
  40a96a:	cmp    eax,0x3d57653a
  40a96f:	arpl   si,di
  40a971:	xor    bh,BYTE PTR [ebp-0x55676a71]
  40a977:	fdivp  st(0),st
  40a979:	in     eax,dx
  40a97a:	push   eax
  40a97b:	repz pop ds
  40a97d:	push   ss
  40a97e:	test   eax,0xce438428
  40a983:	mov    edi,0xfc7e02ba
  40a988:	imul   eax,ebx,0x6166ca07
  40a98e:	ficom  WORD PTR [ecx+0x79]
  40a991:	mov    ds:0x4d286fdb,al
  40a996:	adc    ecx,DWORD PTR [ecx-0x4a9d4bb3]
  40a99c:	and    eax,0x502d5fe8
  40a9a1:	mov    eax,0x97e4ecca
  40a9a6:	and    esp,DWORD PTR [esi+0x39]
  40a9a9:	dec    ecx
  40a9aa:	nop
  40a9ab:	aad    0x7c
  40a9ad:	popf   
  40a9ae:	mov    ebx,0x4cb59de9
  40a9b3:	cdq    
  40a9b4:	into   
  40a9b5:	jl     0x40a958
  40a9b7:	out    dx,eax
  40a9b8:	fidiv  DWORD PTR [ebp-0x75e17a60]
  40a9be:	iret   
  40a9bf:	int    0x2
  40a9c1:	push   ebp
  40a9c2:	push   esp
  40a9c3:	sahf   
  40a9c4:	push   0x40
  40a9c6:	adc    edi,DWORD PTR [edx+0x6ca038bd]
  40a9cc:	push   cs
  40a9cd:	dec    ecx
  40a9ce:	pop    esi
  40a9cf:	clc    
  40a9d0:	(bad)  
  40a9d1:	fld    TBYTE PTR [edx-0x2]
  40a9d4:	jge    0x40aa48
  40a9d6:	cli    
  40a9d7:	test   al,0x1e
  40a9d9:	fmul   DWORD PTR [edi]
  40a9db:	mov    esi,0x6c1afdbe
  40a9e0:	test   DWORD PTR [edi+eiz*1-0x5f],esp
  40a9e4:	jo     0x40aa59
  40a9e6:	pop    ecx
  40a9e7:	outs   dx,BYTE PTR ds:[esi]
  40a9e8:	cmc    
  40a9e9:	lea    esp,[ebx-0x7a]
  40a9ec:	sbb    ch,BYTE PTR [eax+0x5f3b30f2]
  40a9f2:	push   edi
  40a9f3:	dec    esi
  40a9f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9f5:	std    
  40a9f6:	imul   esi,DWORD PTR [esi-0x6a6cc3a8],0x8b2a423b
  40aa00:	sbb    al,BYTE PTR [ebx+0x18339103]
  40aa06:	push   ebp
  40aa07:	or     edx,ecx
  40aa09:	or     eax,0x4795890e
  40aa0e:	(bad)  
  40aa10:	mov    gs,WORD PTR [ecx-0x25d7e6c5]
  40aa16:	dec    ecx
  40aa17:	in     al,0xcf
  40aa19:	or     al,0x15
  40aa1b:	push   esp
  40aa1c:	or     dh,dl
  40aa1e:	lea    eax,[ebp+0x66]
  40aa21:	out    0x60,al
  40aa23:	fcom   QWORD PTR [eax+0x2764c169]
  40aa29:	rol    esp,cl
  40aa2b:	aaa    
  40aa2c:	dec    edi
  40aa2d:	(bad)  
  40aa2f:	and    eax,0x9d670230
  40aa34:	cmp    cl,bl
  40aa36:	push   ecx
  40aa37:	and    edi,DWORD PTR [eax+0x5f]
  40aa3a:	js     0x40aa00
  40aa3c:	jnp    0x40aa7c
  40aa3e:	or     cl,0xb1
  40aa41:	dec    ebp
  40aa42:	fidiv  DWORD PTR [esi-0x34cfcefb]
  40aa48:	adc    edi,DWORD PTR [ebx-0x14]
  40aa4b:	mov    ebx,0x86393dac
  40aa50:	jp     0x40aa8b
  40aa52:	xchg   edx,eax
  40aa53:	jmp    0x1644:0xb22da25b
  40aa5a:	add    dh,BYTE PTR [esi+0x74df5ae5]
  40aa60:	push   ebx
  40aa61:	or     eax,DWORD PTR [esi]
  40aa63:	out    0x61,eax
  40aa65:	std    
  40aa66:	push   0x3
  40aa68:	dec    esp
  40aa69:	sti    
  40aa6a:	xchg   edx,eax
  40aa6b:	xchg   BYTE PTR [edi],dl
  40aa6d:	add    ebp,edx
  40aa6f:	loop   0x40aa69
  40aa71:	mov    ah,cl
  40aa73:	fs and esi,esp
  40aa76:	test   al,0x6
  40aa78:	lock push 0xfe223d58
  40aa7e:	int3   
  40aa7f:	ds mov ch,0xec
  40aa82:	(bad)  
  40aa83:	cmp    ah,BYTE PTR [ebx+edi*1+0x52]
  40aa87:	add    ch,BYTE PTR [edx-0x53]
  40aa8a:	outs   dx,BYTE PTR ds:[esi]
  40aa8b:	cmp    eax,0x7e7cd722
  40aa90:	jmp    0x88bc38d2
  40aa95:	push   es
  40aa96:	xchg   ecx,eax
  40aa97:	or     ebx,DWORD PTR es:[edi]
  40aa9a:	sbb    dl,cl
  40aa9c:	pop    esi
  40aa9d:	push   edi
  40aa9e:	pop    ss
  40aa9f:	sahf   
  40aaa0:	popa   
  40aaa1:	je     0x40aa4b
  40aaa3:	push   edi
  40aaa4:	mov    ah,0x21
  40aaa6:	mov    ah,0x45
  40aaa8:	lahf   
  40aaa9:	int3   
  40aaaa:	jmp    0x6660ed04
  40aaaf:	adc    esp,DWORD PTR [eax-0x51]
  40aab2:	xchg   BYTE PTR [esi+edi*2],ch
  40aab5:	mov    ds:0x17218ae3,al
  40aaba:	rol    ebx,1
  40aabc:	push   ebp
  40aabd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aabe:	jo     0x40aac0
  40aac0:	lds    edi,FWORD PTR [ebx+0x48f9eed0]
  40aac6:	and    al,0xf8
  40aac8:	mov    ecx,0xcde773f5
  40aacd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aace:	dec    esp
  40aacf:	xchg   DWORD PTR [ebx],ecx
  40aad1:	and    DWORD PTR [ebx],0x36f68e9e
  40aad7:	sti    
  40aad8:	test   eax,0xdd1a1852
  40aadd:	inc    ebx
  40aade:	lock push eax
  40aae0:	imul   edx,ebx,0xfffffffa
  40aae3:	ror    BYTE PTR [ebp+ecx*4+0x1c],cl
  40aae7:	push   eax
  40aae8:	dec    ebx
  40aae9:	add    ch,BYTE PTR [ecx+0x47]
  40aaec:	rcr    BYTE PTR [ecx-0x6c7fbf90],1
  40aaf2:	fs inc edi
  40aaf4:	push   esi
  40aaf5:	jmp    0x202d:0xcd764d66
  40aafc:	pop    eax
  40aafd:	pop    ebp
  40aafe:	cmp    DWORD PTR [ecx-0x584b8791],ebp
  40ab04:	xchg   ecx,eax
  40ab05:	retf   
  40ab06:	or     ah,dl
  40ab08:	pushf  
  40ab09:	fst    DWORD PTR cs:[ebx]
  40ab0c:	xchg   ebx,eax
  40ab0d:	sar    BYTE PTR [edx-0x2cc5055a],cl
  40ab13:	loopne 0x40aadc
  40ab15:	stos   DWORD PTR es:[edi],eax
  40ab16:	xor    DWORD PTR [ecx-0x59],eax
  40ab19:	mov    eax,0x456f757a
  40ab1e:	ror    DWORD PTR [esi],1
  40ab20:	mov    cl,BYTE PTR [edi]
  40ab22:	out    0xcf,al
  40ab24:	lods   eax,DWORD PTR ds:[esi]
  40ab25:	mov    cl,0x8b
  40ab27:	mov    ?,WORD PTR ds:0x969135b1
  40ab2d:	pushf  
  40ab2e:	mov    esi,0x3b8474b8
  40ab33:	data16 mov ah,0x41
  40ab36:	les    esi,FWORD PTR [ebx+eiz*8-0x36e013b6]
  40ab3d:	lods   eax,DWORD PTR ds:[esi]
  40ab3e:	push   ecx
  40ab3f:	stos   BYTE PTR es:[edi],al
  40ab40:	mov    edi,0xc6b7ee6d
  40ab45:	int    0x94
  40ab47:	add    dl,ah
  40ab49:	in     al,dx
  40ab4a:	add    eax,0x1524ebd7
  40ab4f:	sti    
  40ab50:	fdivp  st(1),st
  40ab52:	popa   
  40ab53:	mov    bl,0x75
  40ab55:	std    
  40ab56:	or     cl,BYTE PTR [ebx-0x17]
  40ab59:	add    eax,0x225e070d
  40ab5e:	in     eax,0x71
  40ab60:	retf   
  40ab61:	mov    ds:0x36e15425,eax
  40ab66:	aas    
  40ab67:	or     al,0xb5
  40ab69:	imul   ebx,ebp,0x6c
  40ab6c:	addr16 enter 0xcc38,0x1f
  40ab71:	in     al,dx
  40ab72:	dec    eax
  40ab73:	sbb    BYTE PTR [ecx+0x67],cl
  40ab76:	inc    ecx
  40ab77:	es mov ebp,0x69fde5a9
  40ab7d:	or     cl,dl
  40ab7f:	clc    
  40ab80:	add    BYTE PTR [ebp+0x0],0x35
  40ab84:	frstor [ebx+0x35]
  40ab87:	jmp    0x40ab65
  40ab89:	out    0xe9,eax
  40ab8b:	adc    BYTE PTR [esi+0x14],bh
  40ab8e:	fldcw  WORD PTR [esi+0x746d49e6]
  40ab94:	jb     0x40ac12
  40ab96:	inc    edi
  40ab97:	cli    
  40ab98:	inc    ecx
  40ab99:	mov    ebp,0x458e1695
  40ab9e:	push   esp
  40ab9f:	fld    st(7)
  40aba1:	pop    esp
  40aba2:	cmp    eax,0x23c9f434
  40aba7:	and    ah,0x22
  40abaa:	add    ebp,DWORD PTR [ebx+0x1e711c79]
  40abb0:	mov    ch,0xe3
  40abb2:	jecxz  0x40ab46
  40abb4:	xor    DWORD PTR [ecx+ebp*2+0x34],ecx
  40abb8:	imul   esp,DWORD PTR [ecx+0x3e],0xffffff82
  40abbc:	aam    0xed
  40abbe:	fwait
  40abbf:	jmp    0x16b4e72c
  40abc4:	mov    eax,ds:0x28832090
  40abc9:	cld    
  40abca:	stc    
  40abcb:	(bad)  
  40abcc:	mov    ch,BYTE PTR ds:0x74fee573
  40abd2:	jmp    0x40ac3c
  40abd4:	test   eax,0xb73c523a
  40abd9:	jmp    0x40ac56
  40abdb:	jg     0x40ab68
  40abdd:	sbb    eax,0x5a51f3a2
  40abe2:	jbe    0x40ab87
  40abe4:	mov    ebx,0x83a88778
  40abe9:	lea    esp,[edi+0x69]
  40abec:	push   es
  40abed:	mov    edi,0x979310a1
  40abf2:	xchg   edi,eax
  40abf3:	out    dx,al
  40abf4:	lds    edi,FWORD PTR [ecx+0x2a]
  40abf7:	sub    DWORD PTR [ebx],ebx
  40abf9:	lods   eax,DWORD PTR ds:[esi]
  40abfa:	js     0x40abe6
  40abfc:	mov    esp,0x3bb27d73
  40ac01:	(bad)  
  40ac02:	mov    ds:0x27fed94a,eax
  40ac07:	xor    bh,BYTE PTR [edi+edx*1+0x66]
  40ac0b:	cmp    eax,0xed27d8c5
  40ac10:	rep ins BYTE PTR es:[edi],dx
  40ac12:	jle    0x40ac80
  40ac14:	lea    edi,[ebp-0x65346067]
  40ac1a:	add    BYTE PTR [ecx+ebp*1-0x552d21b3],dl
  40ac21:	inc    ebx
  40ac22:	xchg   esp,eax
  40ac23:	mov    cl,ah
  40ac25:	stc    
  40ac26:	push   esi
  40ac27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac28:	lock std 
  40ac2a:	out    dx,eax
  40ac2b:	fwait
  40ac2c:	into   
  40ac2d:	jl     0x40ac26
  40ac2f:	pop    ss
  40ac30:	mov    al,0xd8
  40ac32:	inc    eax
  40ac33:	cwde   
  40ac34:	cmp    eax,0x8225342f
  40ac39:	mov    esp,0x6ede882a
  40ac3e:	loop   0x40abf5
  40ac40:	cmp    DWORD PTR [ecx],0x18993620
  40ac46:	fsub   st(6),st
  40ac48:	pop    ebp
  40ac49:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40ac4c:	dec    ecx
  40ac4d:	jmp    0x5cee:0x32bab28b
  40ac54:	xchg   esi,eax
  40ac55:	je     0x40abf1
  40ac57:	test   eax,0x9a6d807a
  40ac5c:	jb     0x40acdd
  40ac5e:	jae    0x40acd3
  40ac60:	rcr    DWORD PTR [ebp-0x1b7f113e],1
  40ac66:	adc    BYTE PTR [edi+0x5a3efd6f],cl
  40ac6c:	push   ss
  40ac6d:	mov    ds:0x43f55c47,al
  40ac72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac73:	dec    edi
  40ac74:	adc    bl,dh
  40ac76:	mov    ?,esi
  40ac78:	mov    dl,BYTE PTR [ebx+0x7c03de0e]
  40ac7e:	sbb    BYTE PTR [edx],bl
  40ac80:	mov    bl,ch
  40ac82:	gs out dx,al
  40ac84:	rol    edx,0x15
  40ac87:	xor    ebp,DWORD PTR [eax+0x65]
  40ac8a:	inc    ebx
  40ac8b:	pop    ecx
  40ac8c:	mov    WORD PTR ds:0xe0e7c472,ds
  40ac92:	in     al,dx
  40ac93:	mov    al,0x3e
  40ac95:	xchg   DWORD PTR [edx+esi*1+0x16],ebp
  40ac99:	aaa    
  40ac9a:	mov    edi,0x72deecb3
  40ac9f:	jl     0x40ad01
  40aca1:	and    DWORD PTR [edi],eax
  40aca3:	push   0x19
  40aca5:	in     eax,0x17
  40aca7:	mov    ch,0x6c
  40aca9:	or     al,0xd0
  40acab:	push   DWORD PTR [ecx]
  40acad:	aas    
  40acae:	js     0x40acd1
  40acb0:	jmp    0xf7cb734b
  40acb5:	pop    edx
  40acb6:	mov    dh,0x97
  40acb8:	pusha  
  40acb9:	fs jmp 0x40ace6
  40acbc:	or     DWORD PTR ds:0x33f1da0e,0x6b
  40acc3:	es pusha 
  40acc5:	pop    eax
  40acc6:	jmp    DWORD PTR [edx+0x6d0b6c20]
  40accc:	test   BYTE PTR [eax+0x30],0x92
  40acd0:	fist   DWORD PTR [ebx]
  40acd2:	sbb    al,al
  40acd4:	inc    esp
  40acd5:	xchg   esi,eax
  40acd6:	(bad)
  40acda:	xor    eax,0x805958fc
  40acdf:	rcr    DWORD PTR [eax-0x41],1
  40ace2:	add    edx,DWORD PTR [edx+0x30]
  40ace5:	imul   ebp,edx,0xffffffdb
  40ace8:	out    dx,eax
  40ace9:	stos   DWORD PTR es:[edi],eax
  40acea:	add    BYTE PTR [ecx+ecx*2-0x3a],0x6a
  40acef:	xchg   ebx,eax
  40acf0:	pop    ss
  40acf1:	push   edi
  40acf2:	clc    
  40acf3:	mov    cl,0x49
  40acf5:	and    edi,DWORD PTR [edx]
  40acf7:	push   edx
  40acf8:	add    edi,DWORD PTR [edx]
  40acfa:	pop    edi
  40acfb:	(bad)  
  40acfc:	cmp    ebp,DWORD PTR [ebx]
  40acfe:	es loop 0x40ad7d
  40ad01:	ror    BYTE PTR [ebp+0x1],cl
  40ad04:	pop    ebp
  40ad05:	sbb    DWORD PTR [ebx+esi*2-0x60],0xffffffb6
  40ad0a:	jb     0x40aca3
  40ad0c:	test   edi,edi
  40ad0e:	push   0xfffffff6
  40ad10:	and    ebp,edi
  40ad12:	xlat   BYTE PTR ds:[ebx]
  40ad13:	leave  
  40ad14:	push   esp
  40ad15:	mov    ebx,gs
  40ad17:	ret    0x4206
  40ad1a:	stc    
  40ad1b:	cmc    
  40ad1c:	adc    al,0xea
  40ad1e:	jne    0x40ace0
  40ad20:	call   0xc4ec3e2
  40ad25:	sub    ch,BYTE PTR [edx+0x8]
  40ad28:	xor    ch,BYTE PTR ss:[esi]
  40ad2b:	and    DWORD PTR [edi+0x38352f35],ebp
  40ad31:	loop   0x40ad72
  40ad33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad34:	pop    ecx
  40ad35:	out    dx,eax
  40ad36:	jns    0x40ad05
  40ad38:	lea    edi,[eax]
  40ad3a:	dec    ebp
  40ad3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad3c:	mov    ebx,DWORD PTR [edi+0x76]
  40ad3f:	inc    ebx
  40ad40:	push   ds
  40ad41:	fcos   
  40ad43:	push   ebp
  40ad44:	popa   
  40ad45:	xchg   edi,eax
  40ad46:	aaa    
  40ad47:	stos   DWORD PTR es:[edi],eax
  40ad48:	aas    
  40ad49:	sbb    ch,BYTE PTR [edi+0x6aefb835]
  40ad4f:	mov    ds:0xe7bea90b,eax
  40ad54:	adc    BYTE PTR [edi-0x2ef0e02],dh
  40ad5a:	(bad)  
  40ad5b:	xchg   esp,eax
  40ad5c:	cdq    
  40ad5d:	mov    bh,0x0
  40ad5f:	mov    ds:0x7faf7423,al
  40ad64:	and    al,0x88
  40ad66:	lock jmp 0x4734:0x90cc1dd8
  40ad6e:	cwde   
  40ad6f:	call   0x2d7d:0x19d7758c
  40ad76:	sbb    esi,DWORD PTR [eax]
  40ad78:	dec    esi
  40ad79:	sub    DWORD PTR [ecx+0x67],ebp
  40ad7c:	mov    bh,0xbf
  40ad7e:	repz jp 0x40ad2b
  40ad81:	sti    
  40ad82:	stc    
  40ad83:	add    BYTE PTR [ebp-0x7],al
  40ad86:	rcr    DWORD PTR [edi+0xdf8cfde],cl
  40ad8c:	xchg   edi,eax
  40ad8d:	fadd   QWORD PTR [edi]
  40ad8f:	mov    cl,0x9f
  40ad91:	mov    cl,dh
  40ad93:	repnz mov ebp,0x1ac25219
  40ad99:	mov    edx,0xdc5eeccd
  40ad9e:	test   DWORD PTR [ebp-0x34c5316],esi
  40ada4:	dec    esi
  40ada5:	stos   DWORD PTR es:[edi],eax
  40ada6:	pop    esp
  40ada7:	push   esi
  40ada8:	and    al,al
  40adaa:	add    al,BYTE PTR [ecx]
  40adac:	outs   dx,DWORD PTR ds:[esi]
  40adad:	and    edi,DWORD PTR [eax+0x57f40c12]
  40adb3:	xor    BYTE PTR [esi+esi*4-0x5975008a],0x4b
  40adbb:	push   0x91761381
  40adc0:	jns    0x40ad51
  40adc2:	call   0x93b5:0x6e6ee5a8
  40adc9:	ss push ecx
  40adcb:	cld    
  40adcc:	cmp    bl,ch
  40adce:	jno    0x40adb8
  40add0:	jecxz  0x40ae2a
  40add2:	das    
  40add3:	mov    edx,0xf79d460c
  40add8:	test   esp,esi
  40adda:	lds    esp,FWORD PTR [ebp+0x7f6834ec]
  40ade0:	pop    ebx
  40ade1:	dec    ebp
  40ade2:	adc    eax,0xb1897676
  40ade7:	mov    ds:0x9bc9f252,eax
  40adec:	adc    BYTE PTR [edx],bl
  40adee:	mov    dl,0xbf
  40adf0:	idiv   DWORD PTR [esi-0x24]
  40adf3:	xchg   BYTE PTR [esi+0x2f],ah
  40adf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adf7:	cli    
  40adf8:	pop    ebx
  40adf9:	dec    eax
  40adfa:	shl    BYTE PTR [eax],cl
  40adfc:	out    0xfb,al
  40adfe:	pop    edi
  40adff:	daa    
  40ae00:	sbb    al,0xcd
  40ae02:	mov    esi,0x1470ed25
  40ae07:	aaa    
  40ae08:	pop    eax
  40ae09:	test   eax,0x68d55f8d
  40ae0e:	jge    0x40ae6f
  40ae10:	loope  0x40ae51
  40ae12:	mov    ds:0x91eef011,eax
  40ae17:	(bad)  
  40ae18:	(bad)  
  40ae19:	popf   
  40ae1a:	pushf  
  40ae1b:	mov    BYTE PTR [ebp+edx*2-0x4959e1a5],bh
  40ae22:	adc    ah,ch
  40ae24:	scas   al,BYTE PTR es:[edi]
  40ae25:	icebp  
  40ae26:	stos   BYTE PTR es:[edi],al
  40ae27:	clc    
  40ae28:	ss jmp 0x8c67:0xc32b2575
  40ae30:	mov    esi,0x26ff318b
  40ae35:	fisub  WORD PTR [eax-0x73368490]
  40ae3b:	cli    
  40ae3c:	push   ebp
  40ae3d:	loopne 0x40ae31
  40ae3f:	popf   
  40ae40:	adc    al,0xcd
  40ae42:	jl     0x40aebc
  40ae44:	adc    al,0x72
  40ae47:	pop    ds
  40ae48:	outs   dx,BYTE PTR ds:[esi]
  40ae49:	add    BYTE PTR [ecx-0x2],dl
  40ae4c:	ss sub al,0xf4
  40ae4f:	ss push ebx
  40ae51:	adc    BYTE PTR [ebp+0x3467248b],0xdd
  40ae58:	push   0x42
  40ae5a:	cli    
  40ae5b:	ret    0xca4b
  40ae5e:	add    eax,0x95198742
  40ae63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae64:	add    ebx,esi
  40ae66:	cli    
  40ae67:	adc    al,0x54
  40ae69:	lahf   
  40ae6a:	and    edx,esi
  40ae6c:	inc    edi
  40ae6d:	sub    DWORD PTR [edx],0x3e
  40ae70:	dec    edi
  40ae71:	lock iret 
  40ae73:	push   esi
  40ae74:	je     0x40aea2
  40ae76:	mul    BYTE PTR [ebx]
  40ae78:	dec    edi
  40ae79:	(bad)  
  40ae7a:	jle    0x40ae95
  40ae7c:	push   0xd38dc81e
  40ae81:	add    eax,DWORD PTR ds:0xdee598a9
  40ae87:	shl    BYTE PTR [ebp+0x53],1
  40ae8a:	jno    0x40ae9f
  40ae8c:	pop    es
  40ae8d:	cli    
  40ae8e:	or     edx,DWORD PTR [ebp+edi*8-0x74]
  40ae92:	loop   0x40ae53
  40ae94:	jl     0x40ae2c
  40ae96:	cmp    BYTE PTR [esi+0x7b6aee52],cl
  40ae9c:	(bad)  [ebx-0x2071e2b2]
  40aea2:	(bad)  
  40aea3:	ror    BYTE PTR [edi+0x46333ff8],cl
  40aea9:	sub    eax,0xe1caecbb
  40aeae:	lds    ebp,FWORD PTR [edx+eiz*2+0x64]
  40aeb2:	lea    edx,[eax-0x6a]
  40aeb5:	mov    esp,ebx
  40aeb7:	ror    DWORD PTR [ebp+0x2c],0xa9
  40aebb:	or     DWORD PTR [esp],ebp
  40aebe:	cmp    cl,0x80
  40aec1:	imul   eax,DWORD PTR [edi-0x312bcb2a],0x7c
  40aec8:	mov    dl,dh
  40aeca:	ficomp DWORD PTR [ecx]
  40aecc:	mov    ds:0x5dc0dc26,al
  40aed1:	dec    eax
  40aed2:	adc    al,0x11
  40aed4:	mov    ecx,0xcf9a152
  40aed9:	push   ebx
  40aeda:	sahf   
  40aedb:	add    DWORD PTR [edi-0x6b],esi
  40aede:	enter  0x9fbe,0x22
  40aee2:	(bad)  
  40aee3:	add    eax,0xae14dc16
  40aee8:	iret   
  40aee9:	(bad)  
  40aeea:	cdq    
  40aeeb:	aad    0x63
  40aeed:	std    
  40aeee:	push   ds
  40aeef:	pop    ds
  40aef0:	or     al,0xf7
  40aef2:	ja     0x40af62
  40aef4:	push   cs
  40aef5:	add    al,0xdf
  40aef7:	xor    dl,ah
  40aef9:	(bad)  
  40aefb:	xchg   edi,eax
  40aefc:	fisttp QWORD PTR [ebx-0x7dcd3753]
  40af02:	pop    esp
  40af03:	pop    ss
  40af04:	xor    dl,ch
  40af06:	adc    BYTE PTR [ebx-0x2],0x28
  40af0a:	sahf   
  40af0b:	ja     0x40aeb6
  40af0d:	add    DWORD PTR [esi-0x2ea179d9],ecx
  40af13:	in     eax,dx
  40af14:	add    al,0x6d
  40af16:	sbb    al,0x6f
  40af18:	lods   eax,DWORD PTR ds:[esi]
  40af19:	xor    eax,0xf581db52
  40af1e:	jp     0x40af05
  40af20:	adc    DWORD PTR [edx],esi
  40af22:	adc    al,0x58
  40af24:	pop    esp
  40af25:	jecxz  0x40aef6
  40af27:	scas   al,BYTE PTR es:[edi]
  40af28:	and    dh,BYTE PTR [ecx+0x70]
  40af2b:	lds    ecx,FWORD PTR [ebp+eiz*1-0x16]
  40af2f:	test   DWORD PTR [edx+edi*8],esi
  40af32:	xchg   ebx,eax
  40af33:	idiv   ah
  40af35:	test   DWORD PTR [ebp-0x4b8eca48],ebp
  40af3b:	push   ebp
  40af3c:	push   esp
  40af3d:	sub    ebx,ecx
  40af3f:	sbb    ah,BYTE PTR [edi+0x16103fb9]
  40af45:	int3   
  40af46:	ins    BYTE PTR es:[di],dx
  40af48:	xchg   ecx,eax
  40af49:	lds    ebp,FWORD PTR [eax]
  40af4b:	pop    eax
  40af4c:	int    0x92
  40af4e:	test   DWORD PTR [ebx+0x6b],ebp
  40af51:	repz adc esp,ebx
  40af54:	fsubrp st(1),st
  40af56:	mov    dl,0x7f
  40af58:	and    DWORD PTR [ebx],edi
  40af5a:	xchg   esp,eax
  40af5b:	pop    DWORD PTR [esi]
  40af5d:	dec    ebp
  40af5e:	into   
  40af5f:	push   es
  40af60:	dec    edi
  40af61:	mov    al,0x46
  40af63:	push   0xb1bab245
  40af68:	dec    ecx
  40af69:	loop   0x40af20
  40af6b:	mov    al,cl
  40af6d:	cli    
  40af6e:	mov    al,0xaa
  40af70:	icebp  
  40af71:	test   DWORD PTR [esi],edi
  40af73:	outs   dx,BYTE PTR ds:[esi]
  40af74:	inc    eax
  40af75:	pop    esp
  40af76:	cmc    
  40af77:	(bad)  
  40af78:	sbb    DWORD PTR [ebx+0x64dbbc85],0xdfb1ebd3
  40af82:	adc    ah,cl
  40af84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af85:	cmp    ch,BYTE PTR [ecx]
  40af87:	or     DWORD PTR [ebx+0x1],0xffffffad
  40af8b:	loopne 0x40af45
  40af8d:	mov    ch,0xec
  40af8f:	jb     0x40afb1
  40af91:	lahf   
  40af92:	jmp    0x1cf7:0x786de40e
  40af99:	mov    ebx,0x6ae3a7b5
  40af9e:	sbb    eax,esp
  40afa0:	popf   
  40afa1:	repz or eax,DWORD PTR [edi+eiz*4-0x391331e5]
  40afa9:	jb     0x40af36
  40afab:	xor    eax,DWORD PTR [eax+eax*1-0xbb43471]
  40afb2:	stos   BYTE PTR es:[edi],al
  40afb3:	int3   
  40afb4:	ret    0x3f27
  40afb7:	mov    esi,DWORD PTR [eax+0x42]
  40afba:	stos   BYTE PTR es:[edi],al
  40afbb:	gs push ds
  40afbd:	retf   0xd55c
  40afc0:	cmp    BYTE PTR [ecx-0x5d59d52],ah
  40afc6:	dec    ebx
  40afc7:	push   ss
  40afc8:	xchg   esp,eax
  40afc9:	mov    eax,0xbf7e6d49
  40afce:	or     ebp,edi
  40afd0:	(bad)  
  40afd1:	and    esi,DWORD PTR [edi-0x78247ddb]
  40afd7:	mov    ah,0xa1
  40afd9:	setnp  al
  40afdc:	or     DWORD PTR [ebp-0x7f],ecx
  40afdf:	std    
  40afe0:	xor    bl,BYTE PTR [ecx]
  40afe2:	or     eax,edi
  40afe4:	jno    0x40afad
  40afe6:	nop
  40afe7:	pop    eax
  40afe8:	adc    al,BYTE PTR [edx]
  40afea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afec:	lahf   
  40afed:	mov    BYTE PTR [eax+esi*4-0x52],al
  40aff1:	mov    DWORD PTR [edi+0x28],eax
  40aff4:	dec    ecx
  40aff5:	sbb    edx,edi
  40aff7:	xor    eax,0xacea830e
  40affc:	xchg   al,al
  40affe:	mov    ebx,0x46b2245f
  40b003:	push   ecx
  40b004:	push   esp
  40b005:	push   cs
  40b006:	ins    DWORD PTR es:[edi],dx
  40b007:	mov    al,0x8b
  40b009:	mov    bl,0xbf
  40b00b:	pop    ds
  40b00c:	pop    esp
  40b00d:	in     eax,dx
  40b00e:	into   
  40b00f:	and    ecx,DWORD PTR [edi]
  40b011:	dec    esp
  40b012:	mov    DWORD PTR [ebp+0x43884f64],edx
  40b018:	mul    BYTE PTR [esi+0xc63c7ca]
  40b01e:	sub    BYTE PTR [esi+edi*8+0x12a6ceb0],dh
  40b025:	dec    eax
  40b026:	sub    edi,DWORD PTR [ebp-0x750b561e]
  40b02c:	push   ebx
  40b02d:	loope  0x40afc2
  40b02f:	push   edx
  40b030:	jl     0x40afe3
  40b032:	jnp    0x40b032
  40b034:	call   0x266ea66
  40b039:	mov    esp,0x93f1e616
  40b03e:	sbb    DWORD PTR [esi],ebx
  40b040:	gs push es
  40b042:	add    DWORD PTR [ebx-0x1],edx
  40b045:	inc    esp
  40b046:	jne    0x40b031
  40b048:	test   bl,0x15
  40b04b:	jg     0x40b04d
  40b04d:	jo     0x40b0b3
  40b04f:	jge    0x40b0b7
  40b051:	dec    ebp
  40b052:	xor    eax,0xa7fb877
  40b057:	fs jmp 0x40b01a
  40b05a:	mov    ebp,0xb05d4a00
  40b05f:	rcl    BYTE PTR [ebp+0x4d35529f],1
  40b065:	test   eax,0x814d7945
  40b06a:	jno    0x40b020
  40b06c:	scas   eax,DWORD PTR es:[edi]
  40b06d:	je     0x40b0b2
  40b06f:	sub    bl,bh
  40b071:	sti    
  40b072:	jmp    FWORD PTR [esi-0x1d]
  40b075:	dec    esi
  40b076:	mov    ch,BYTE PTR [ebp+0x69cfbc1b]
  40b07c:	sub    al,0xfe
  40b07e:	sbb    ebp,DWORD PTR [ebp+0x518b3d94]
  40b084:	and    edx,DWORD PTR [eax+eiz*2+0x4b]
  40b088:	outs   dx,DWORD PTR ds:[esi]
  40b089:	sahf   
  40b08a:	(bad)  
  40b08b:	ins    DWORD PTR es:[edi],dx
  40b08c:	retf   
  40b08d:	add    eax,0x4a9150b1
  40b092:	out    0x3,al
  40b094:	repz sub BYTE PTR [edi],bl
  40b097:	sbb    ebx,DWORD PTR [edi]
  40b099:	lods   al,BYTE PTR gs:[esi]
  40b09b:	mov    ebp,0x4789308d
  40b0a0:	dec    esp
  40b0a1:	imul   esp,DWORD PTR [edx-0x4c],0xffffff8d
  40b0a5:	pop    edx
  40b0a6:	dec    ebp
  40b0a7:	sbb    BYTE PTR [edi-0x6d],0x51
  40b0ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0ac:	mov    bh,0xe1
  40b0ae:	mov    ?,WORD PTR [ebp+ebp*4-0x2cb5cf9b]
  40b0b5:	jne    0x40b0c0
  40b0b7:	mov    al,ds:0x8f4c91e7
  40b0bc:	adc    DWORD PTR [edx],esp
  40b0be:	pop    edi
  40b0bf:	add    ecx,DWORD PTR [ecx-0x4aa6f6a1]
  40b0c5:	ja     0x40b136
  40b0c7:	mov    eax,ds:0x8fb0e00
  40b0cc:	cmp    DWORD PTR [esi-0x65],esi
  40b0cf:	push   ecx
  40b0d0:	test   BYTE PTR [edx],al
  40b0d2:	mov    esp,0x489e8f8
  40b0d7:	sti    
  40b0d8:	(bad)
  40b0dd:	outs   dx,BYTE PTR ds:[esi]
  40b0de:	xchg   ecx,eax
  40b0df:	out    dx,al
  40b0e0:	jbe    0x40b0f9
  40b0e2:	nop
  40b0e3:	push   ds
  40b0e4:	mov    ch,0xf8
  40b0e6:	outs   dx,BYTE PTR ds:[esi]
  40b0e7:	test   BYTE PTR [eax-0x5d],ah
  40b0ea:	ss mov bl,0xc5
  40b0ed:	pusha  
  40b0ee:	rol    BYTE PTR [esi],0x8d
  40b0f1:	add    al,0xd6
  40b0f3:	(bad)  
  40b0f4:	and    al,BYTE PTR [ecx-0x15c74542]
  40b0fa:	data16 or ah,BYTE PTR [edi]
  40b0fd:	cs adc edx,esp
  40b100:	inc    ebx
  40b101:	and    eax,0x27420e1b
  40b106:	xor    al,ch
  40b108:	cmp    ch,ah
  40b10a:	icebp  
  40b10b:	mov    esp,0x28ba5602
  40b111:	mov    ch,0xff
  40b113:	lahf   
  40b114:	cmp    esi,0x65
  40b117:	inc    BYTE PTR [ebx-0x417e1ef8]
  40b11d:	or     bh,0x13
  40b120:	jns    0x40b0c9
  40b122:	pop    es
  40b123:	cdq    
  40b124:	(bad)  
  40b125:	test   ebx,0x80c05882
  40b12b:	in     al,0x1b
  40b12d:	push   ebx
  40b12e:	test   eax,0x7d129e8a
  40b133:	sub    eax,DWORD PTR [eax+0x34ef12e8]
  40b139:	mov    esp,0xf840aead
  40b13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b13f:	add    DWORD PTR [esi-0x32],ebp
  40b142:	push   ds
  40b143:	adc    eax,0x6dafa822
  40b148:	inc    eax
  40b149:	add    DWORD PTR [edx-0x62],ecx
  40b14c:	adc    DWORD PTR [edi+0x4b4cb904],edi
  40b152:	sbb    al,0xd9
  40b154:	data16 or al,0x38
  40b157:	imul   edi,esi,0x84746f4e
  40b15d:	mul    BYTE PTR [edi-0x29]
  40b160:	data16 sub BYTE PTR [edi],bl
  40b163:	dec    eax
  40b164:	and    DWORD PTR [esi],ebx
  40b166:	xor    esp,esi
  40b168:	in     al,dx
  40b169:	mov    ch,BYTE PTR [eax]
  40b16b:	cmp    al,dl
  40b16d:	fsub   st,st(0)
  40b16f:	jne    0x40b168
  40b171:	push   ebp
  40b172:	ds dec ecx
  40b174:	dec    edi
  40b175:	lods   al,BYTE PTR ds:[esi]
  40b176:	mov    al,ds:0x9410e76a
  40b17b:	sbb    esi,esp
  40b17d:	mov    ch,0xb2
  40b17f:	call   0x879f8515
  40b184:	scas   eax,DWORD PTR es:[edi]
  40b185:	push   ebp
  40b186:	lock cmc 
  40b188:	pop    esp
  40b189:	push   0xffffff84
  40b18b:	bound  esi,QWORD PTR [edi-0x780f085e]
  40b191:	sub    DWORD PTR [edx+0x29c13854],edi
  40b197:	or     al,0x31
  40b199:	mov    esp,0x4c729b25
  40b19e:	and    esi,ecx
  40b1a0:	int    0x83
  40b1a2:	pusha  
  40b1a3:	in     al,dx
  40b1a4:	adc    BYTE PTR [ecx],0xed
  40b1a7:	push   ebp
  40b1a8:	ins    BYTE PTR es:[edi],dx
  40b1a9:	loopne 0x40b1bd
  40b1ab:	mov    al,0xa3
  40b1ad:	sbb    edi,esi
  40b1af:	in     al,dx
  40b1b0:	adc    DWORD PTR [ebx-0x49],ebx
  40b1b3:	ja     0x40b13b
  40b1b5:	shl    DWORD PTR [ecx-0x52],0xf8
  40b1b9:	add    esp,ecx
  40b1bb:	adc    DWORD PTR [ebx+0x1],ebp
  40b1be:	into   
  40b1bf:	aas    
  40b1c0:	je     0x40b1d8
  40b1c2:	adc    esi,DWORD PTR [ebx]
  40b1c4:	mov    bh,0xa8
  40b1c6:	cli    
  40b1c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1c8:	stos   DWORD PTR es:[edi],eax
  40b1c9:	adc    eax,0x783f83b0
  40b1ce:	mov    dl,BYTE PTR [edi+eax*1+0x4f31f51a]
  40b1d5:	mov    dh,0xa8
  40b1d7:	xchg   esp,eax
  40b1d8:	xor    al,0x41
  40b1da:	sar    ch,0xaa
  40b1dd:	cmp    al,0xb3
  40b1df:	into   
  40b1e0:	call   0x419d:0x82ca394a
  40b1e7:	inc    edi
  40b1e8:	cmp    al,0x10
  40b1ea:	fisubr DWORD PTR [ebx]
  40b1ec:	stos   BYTE PTR es:[edi],al
  40b1ed:	sbb    eax,0x23f96e8f
  40b1f2:	pop    edx
  40b1f3:	mov    ds:0x4a742fb3,eax
  40b1f8:	xor    al,0xff
  40b1fa:	cmp    DWORD PTR [esi+eax*2+0x38],edx
  40b1fe:	add    al,0x16
  40b200:	cwde   
  40b201:	je     0x40b20d
  40b203:	pop    ds
  40b204:	int3   
  40b205:	add    al,0x3b
  40b207:	jp     0x40b1c3
  40b209:	sbb    al,0x25
  40b20b:	cmp    esp,DWORD PTR [eax+0x64]
  40b20e:	ins    BYTE PTR es:[edi],dx
  40b20f:	adc    esp,esp
  40b211:	xor    al,0x73
  40b213:	adc    edx,DWORD PTR [edx-0x17]
  40b216:	call   0x7d204ca4
  40b21b:	push   ds
  40b21c:	xchg   esi,eax
  40b21d:	xor    edi,esi
  40b21f:	push   ebx
  40b220:	lock imul esi,DWORD PTR [ebx],0x15
  40b224:	call   0xbb21:0x831c3b15
  40b22b:	inc    ebp
  40b22c:	sbb    ch,BYTE PTR [eax]
  40b22e:	xchg   DWORD PTR [edx],eax
  40b230:	test   esi,ebp
  40b232:	cmp    BYTE PTR [edi],dl
  40b234:	sub    DWORD PTR [edx],edx
  40b236:	cmp    BYTE PTR [ecx],bl
  40b238:	dec    ebx
  40b239:	fcom   QWORD PTR [esi+0x61beca6]
  40b23f:	add    bl,bh
  40b241:	adc    BYTE PTR [ebx+esi*2+0x7c71ff9c],ch
  40b248:	je     0x40b1d2
  40b24a:	sysret 
  40b24c:	outs   dx,DWORD PTR ds:[esi]
  40b24d:	fimul  WORD PTR [esi-0x1a]
  40b250:	pusha  
  40b251:	clc    
  40b252:	inc    esi
  40b253:	in     al,0xb3
  40b255:	push   es
  40b256:	push   ebx
  40b257:	pop    ss
  40b258:	sub    DWORD PTR [ebx-0x1ea34031],esi
  40b25e:	push   ebx
  40b25f:	and    eax,DWORD PTR [esp+edx*8+0x7d]
  40b263:	ins    DWORD PTR es:[edi],dx
  40b264:	or     al,0x91
  40b266:	js     0x40b28c
  40b268:	into   
  40b269:	fs shl bh,1
  40b26c:	sub    al,0x88
  40b26e:	mov    dh,0x98
  40b270:	in     al,0xa8
  40b272:	mov    BYTE PTR [edx+0x5feaaad2],ah
  40b278:	mov    ecx,0xa2e6505c
  40b27d:	or     BYTE PTR [esi-0x57],al
  40b280:	xchg   BYTE PTR [ebx+0xe8f8c91],bh
  40b286:	sub    al,0x77
  40b288:	mov    bl,0x87
  40b28a:	pop    esp
  40b28b:	mov    esp,0x571d0b62
  40b290:	push   es
  40b291:	adc    bh,BYTE PTR [ecx-0xd569dce]
  40b297:	cmp    BYTE PTR [esi+0x51efb3d8],ch
  40b29d:	xchg   ebx,ecx
  40b29f:	and    BYTE PTR [esi+0x5f],ah
  40b2a2:	sbb    ebp,ebx
  40b2a4:	xor    eax,0x63f0bcb4
  40b2a9:	sub    BYTE PTR ds:[ecx-0x36c079eb],ah
  40b2b0:	or     BYTE PTR [edx],ch
  40b2b2:	fsubr  QWORD PTR [ecx]
  40b2b4:	push   edi
  40b2b5:	jecxz  0x40b263
  40b2b7:	test   al,0x1
  40b2b9:	sub    BYTE PTR [edx+0x1d],0xb3
  40b2bd:	jg     0x40b2e0
  40b2bf:	es (bad) 
  40b2c1:	cwde   
  40b2c2:	jmp    0x40b31b
  40b2c4:	add    eax,0xd4e977b5
  40b2c9:	neg    eax
  40b2cb:	scas   al,BYTE PTR es:[edi]
  40b2cc:	dec    edx
  40b2cd:	dec    edi
  40b2ce:	or     eax,0xef0e70a6
  40b2d3:	jne    0x40b264
  40b2d5:	mov    eax,ds:0xc2e2945f
  40b2da:	xor    ebp,ecx
  40b2dc:	lods   eax,DWORD PTR ds:[esi]
  40b2dd:	or     ah,BYTE PTR [edx]
  40b2df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e0:	push   DWORD PTR [edi]
  40b2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e3:	(bad)  
  40b2e4:	cmp    eax,0xa1a6e87f
  40b2e9:	sub    DWORD PTR [edx+0x1e848fe3],ecx
  40b2ef:	jno    0x40b357
  40b2f1:	cwde   
  40b2f2:	lea    edi,gs:[ecx]
  40b2f5:	cmc    
  40b2f6:	xchg   esi,eax
  40b2f7:	bound  edi,QWORD PTR [ebx-0x61f97789]
  40b2fd:	test   al,0x31
  40b2ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b300:	inc    ecx
  40b301:	mov    eax,DWORD PTR [eax]
  40b303:	imul   ecx,DWORD PTR [eax],0xb80bb340
  40b309:	jae    0x40b2ac
  40b30b:	stc    
  40b30c:	add    DWORD PTR [eax-0x25115b30],0xffffffc1
  40b313:	mov    BYTE PTR [edx],cl
  40b315:	add    esi,DWORD PTR [edx+eax*8-0x28428a27]
  40b31c:	stos   DWORD PTR es:[edi],eax
  40b31d:	fmul   st(0),st
  40b31f:	or     ah,BYTE PTR [edi+0x79]
  40b322:	inc    edi
  40b323:	out    0x38,eax
  40b325:	(bad)  
  40b326:	sub    al,0xbf
  40b328:	sub    ecx,ebp
  40b32a:	js     0x40b2e0
  40b32c:	test   esp,eax
  40b32e:	push   edi
  40b32f:	loope  0x40b31e
  40b331:	or     cl,bh
  40b333:	jecxz  0x40b34e
  40b335:	jg     0x40b33e
  40b337:	fistp  QWORD PTR [esi]
  40b339:	push   edx
  40b33a:	jle    0x77b25e26
  40b340:	in     eax,0x11
  40b342:	and    eax,0xfb8cc3cc
  40b347:	jl     0x40b36e
  40b349:	dec    esp
  40b34a:	pop    edx
  40b34b:	mov    esp,0x57769445
  40b350:	sub    eax,0xf7cac8fb
  40b355:	out    dx,eax
  40b356:	fdiv   QWORD PTR [ecx]
  40b358:	(bad)  
  40b35a:	inc    eax
  40b35b:	cs cli 
  40b35d:	push   ebx
  40b35e:	cmp    ch,bh
  40b360:	push   ebp
  40b361:	js     0x40b3c0
  40b363:	push   esp
  40b364:	xchg   esi,eax
  40b365:	in     eax,0x2f
  40b367:	not    BYTE PTR cs:[ecx+0x1d9acdfe]
  40b36e:	mov    eax,0xde3bb3ce
  40b373:	aad    0x7b
  40b375:	dec    ecx
  40b376:	sbb    eax,0xc0209e99
  40b37b:	retf   0xa14e
  40b37e:	push   ebp
  40b37f:	inc    ebx
  40b380:	lods   al,BYTE PTR ds:[esi]
  40b381:	call   0x84a1b974
  40b386:	xchg   ebp,eax
  40b387:	jg     0x40b318
  40b389:	sbb    BYTE PTR [edi],bh
  40b38b:	adc    BYTE PTR [ebx],al
  40b38d:	in     al,0x5b
  40b38f:	fwait
  40b390:	ret    0xfaf8
  40b393:	sub    BYTE PTR [ebx+0x38],0x6
  40b397:	xor    cl,BYTE PTR [eax]
  40b399:	jo     0x40b352
  40b39b:	push   ds
  40b39c:	stos   BYTE PTR es:[edi],al
  40b39d:	iret   
  40b39e:	jle    0x40b3ff
  40b3a0:	mov    ch,0x3c
  40b3a2:	call   0x1b51:0xdf0c3b4a
  40b3a9:	xor    DWORD PTR [edx-0x1b],ebx
  40b3ac:	stos   DWORD PTR es:[edi],eax
  40b3ad:	cli    
  40b3ae:	stos   DWORD PTR es:[edi],eax
  40b3af:	adc    bh,ch
  40b3b1:	cs aam 0xff
  40b3b4:	ror    BYTE PTR [eax-0x457000c2],1
  40b3ba:	cmovle ebx,DWORD PTR ds:0x1533e371
  40b3c1:	xchg   esp,eax
  40b3c2:	in     al,0xb4
  40b3c4:	or     eax,0x53d492e0
  40b3c9:	mov    ah,0xff
  40b3cb:	mov    ecx,0xc60e0165
  40b3d0:	enter  0x2a75,0xbc
  40b3d4:	(bad)  [eax-0x73]
  40b3d7:	add    eax,0x7928fa8d
  40b3dc:	pop    ds
  40b3dd:	xchg   ebp,eax
  40b3df:	call   0x3f52:0xc91c84cb
  40b3e6:	sub    eax,0x45103e52
  40b3eb:	fdivr  QWORD PTR [edi+0x1dfb2d01]
  40b3f1:	test   DWORD PTR [edx],esp
  40b3f3:	in     al,0xcf
  40b3f5:	jmp    0x40b3bd
  40b3f7:	scas   al,BYTE PTR es:[edi]
  40b3f8:	outs   dx,DWORD PTR ds:[esi]
  40b3f9:	xchg   edi,eax
  40b3fa:	mov    dl,0x33
  40b3fc:	div    DWORD PTR [ecx-0x48]
  40b3ff:	push   ecx
  40b400:	dec    ebx
  40b401:	into   
  40b402:	jbe    0x40b3e3
  40b404:	(bad)  
  40b405:	jl     0x40b394
  40b407:	test   al,0x90
  40b409:	retf   
  40b40a:	imul   ecx,DWORD PTR [eax],0xffffffb7
  40b40d:	sbb    bh,BYTE PTR [eax-0x44fc3d6e]
  40b413:	mov    al,0x71
  40b415:	and    al,0xcd
  40b417:	push   0xfffffffd
  40b419:	jp     0x40b412
  40b41b:	sbb    al,0xc0
  40b41d:	sbb    eax,0xff77fe42
  40b422:	test   al,0xd
  40b424:	mov    esp,0x1f90e22a
  40b429:	mov    ebp,0xd0d08796
  40b42e:	(bad)  
  40b42f:	out    0x0,al
  40b431:	jnp    0x40b4b0
  40b433:	out    0x6a,eax
  40b435:	rol    BYTE PTR [edx+0x2a],0xcd
  40b439:	std    
  40b43a:	xor    DWORD PTR [ebx+0x60a7cb9b],ebx
  40b440:	js     0x40b4a1
  40b442:	cmp    dl,al
  40b444:	mov    cl,0x11
  40b446:	nop
  40b447:	test   BYTE PTR [edx-0x2f],ah
  40b44a:	jmp    0x40b3ee
  40b44c:	mov    al,ds:0xa3f498c7
  40b451:	fcom   QWORD PTR ds:0xde7d770e
  40b457:	cmovns eax,DWORD PTR [ebx]
  40b45a:	jp     0x40b40f
  40b45c:	(bad)  [esi-0x39150c2e]
  40b462:	es iret 
  40b464:	leave  
  40b465:	dec    eax
  40b466:	or     al,0xe
  40b468:	sub    al,0xaa
  40b46a:	sbb    DWORD PTR ds:0xe2af520b,0xffffffa4
  40b471:	sbb    al,0xb7
  40b473:	int3   
  40b474:	mov    al,0x92
  40b476:	or     BYTE PTR [edx],bh
  40b478:	arpl   WORD PTR [ecx],bp
  40b47a:	add    eax,DWORD PTR [edi]
  40b47c:	cld    
  40b47d:	and    BYTE PTR [ebx-0x27],ah
  40b480:	and    DWORD PTR ds:0x77a5be54,ebx
  40b486:	pop    edi
  40b487:	cmp    dl,BYTE PTR [ecx-0x10]
  40b48a:	push   cs
  40b48b:	xchg   ecx,eax
  40b48c:	daa    
  40b48d:	add    esp,DWORD PTR [ebx+0x79]
  40b490:	pop    esi
  40b491:	daa    
  40b492:	sti    
  40b493:	dec    ecx
  40b494:	aam    0xc6
  40b496:	(bad)  
  40b497:	push   cs
  40b498:	push   0x8c4ec508
  40b49d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b49e:	je     0x40b4f6
  40b4a0:	cs sub bh,BYTE PTR ds:[edx]
  40b4a4:	retf   
  40b4a5:	jbe    0x40b49d
  40b4a7:	ret    
  40b4a8:	cmp    BYTE PTR [edx+0x263e3d73],ch
  40b4ae:	mov    edi,0x26ae2fe0
  40b4b3:	out    dx,al
  40b4b4:	xchg   edx,eax
  40b4b5:	or     eax,0x4bd42e93
  40b4ba:	cs fdiv st,st(4)
  40b4bd:	adc    dl,BYTE PTR [esi+0x335756bb]
  40b4c3:	sub    DWORD PTR [esi-0xa],esp
  40b4c6:	test   BYTE PTR [ebp-0x2e],ch
  40b4c9:	aas    
  40b4ca:	sub    DWORD PTR [edx-0x657ca55f],ebp
  40b4d0:	shr    BYTE PTR [ebp+0x1a05e5e9],1
  40b4d6:	sub    ebx,edi
  40b4d8:	stc    
  40b4d9:	jecxz  0x40b4f9
  40b4db:	test   eax,0xaa93493
  40b4e0:	sub    esp,DWORD PTR [esi+ebp*2+0x32]
  40b4e4:	mov    esi,0x423680d
  40b4e9:	push   eax
  40b4ea:	mov    esp,0x3aeee67e
  40b4ef:	mov    ds:0x59e9aadd,eax
  40b4f4:	add    dl,dh
  40b4f6:	(bad)  
  40b4f7:	mov    esp,0xbd1ce6ad
  40b4fc:	or     al,0x77
  40b4fe:	call   0xf341:0x77e4ca57
  40b505:	pop    edi
  40b506:	mov    ah,0x3e
  40b508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b509:	sub    al,0xeb
  40b50b:	mov    dh,0x66
  40b50d:	and    eax,DWORD PTR [eax+edi*2+0x1bee6044]
  40b514:	mov    al,ds:0x6b627d27
  40b519:	leave  
  40b51a:	test   eax,0x6f4f3b1d
  40b51f:	pop    edx
  40b520:	xchg   ebx,eax
  40b521:	ins    BYTE PTR es:[edi],dx
  40b522:	cmp    bl,BYTE PTR [ebx-0x5c]
  40b525:	int    0x11
  40b527:	and    al,0x97
  40b529:	cdq    
  40b52a:	dec    ebx
  40b52b:	pop    ebx
  40b52c:	add    al,0x96
  40b52e:	ss sahf 
  40b530:	pop    es
  40b531:	outs   dx,DWORD PTR ds:[esi]
  40b532:	ins    DWORD PTR es:[edi],dx
  40b533:	lds    ebp,FWORD PTR [eax-0x73]
  40b536:	loop   0x40b559
  40b538:	jbe    0x40b4f3
  40b53a:	push   esi
  40b53b:	mov    esi,0x168bf35e
  40b540:	cmc    
  40b541:	hlt    
  40b542:	leave  
  40b543:	add    al,0xd2
  40b545:	ja     0x40b57f
  40b547:	ss dec esp
  40b549:	in     al,dx
  40b54a:	and    al,0x87
  40b54c:	mov    al,0x38
  40b54e:	fcomp  QWORD PTR [edx+edx*4]
  40b551:	jmp    0x8ee9:0xd2801e98
  40b558:	mov    ecx,0x7865e6b3
  40b55d:	add    BYTE PTR [ebx+eiz*1+0x5f],al
  40b561:	xchg   DWORD PTR [edx],edx
  40b563:	cmp    BYTE PTR [eax+0x73de988c],0x70
  40b56a:	pop    esi
  40b56b:	pop    ecx
  40b56c:	inc    edi
  40b56d:	nop
  40b56e:	push   esi
  40b56f:	jge    0x40b4f2
  40b571:	jnp    0x40b56a
  40b573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b574:	jno    0x40b57a
  40b576:	mov    al,BYTE PTR [ebx]
  40b578:	pop    DWORD PTR [esi]
  40b57a:	stc    
  40b57b:	cmp    bh,BYTE PTR [edx+0x333d2fa0]
  40b581:	or     eax,0x501d9aa5
  40b586:	sub    cl,BYTE PTR [edi]
  40b588:	dec    ebp
  40b589:	fwait
  40b58a:	test   BYTE PTR [edi+0x5642b749],bh
  40b590:	jmp    0x4d0d6f47
  40b595:	and    al,0xea
  40b597:	scas   eax,DWORD PTR es:[edi]
  40b598:	push   ss
  40b599:	and    eax,0xd2d3a3fb
  40b59e:	push   esi
  40b59f:	add    ecx,DWORD PTR [edi-0x48]
  40b5a2:	jnp    0x40b596
  40b5a4:	bound  ebx,QWORD PTR [ebx+0x3e]
  40b5a7:	sub    eax,0x9df2986
  40b5ac:	xor    eax,0x33d3e09
  40b5b1:	xchg   ebp,eax
  40b5b2:	pop    ecx
  40b5b3:	add    DWORD PTR [edx],0xe75bd8e3
  40b5b9:	arpl   WORD PTR [ecx+0x96ef817],cx
  40b5bf:	mov    al,ds:0xadf801ec
  40b5c4:	popa   
  40b5c5:	out    0x7a,al
  40b5c7:	mov    edx,esi
  40b5c9:	retf   
  40b5ca:	ja     0x40b5fb
  40b5cc:	push   ds
  40b5cd:	and    al,0x24
  40b5cf:	jg     0x40b599
  40b5d1:	imul   eax,DWORD PTR [ebx-0x222dd64a],0xe767037e
  40b5db:	cmp    eax,0x18d7c117
  40b5e0:	adc    eax,edx
  40b5e2:	stos   BYTE PTR es:[edi],al
  40b5e3:	mov    esi,0x2f6e2c66
  40b5e8:	mov    al,BYTE PTR [ebx+ebp*1]
  40b5eb:	mov    ebx,0xc1571528
  40b5f0:	mov    ah,0xbf
  40b5f2:	sbb    al,BYTE PTR [edi-0x12]
  40b5f5:	stos   DWORD PTR es:[edi],eax
  40b5f6:	iret   
  40b5f7:	xor    BYTE PTR [edx-0x72dabd0c],ch
  40b5fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5fe:	xchg   ebx,eax
  40b5ff:	xchg   BYTE PTR [esi-0x66],dh
  40b602:	loop   0x40b651
  40b604:	push   edi
  40b605:	sub    edi,ecx
  40b607:	cmp    esi,DWORD PTR [ebp*2+0x612f55eb]
  40b60e:	enter  0x8c0a,0xc9
  40b612:	cmp    ah,dl
  40b614:	jnp    0x40b5b5
  40b616:	mov    cl,0x33
  40b618:	and    ah,bl
  40b61a:	adc    DWORD PTR [eax],edx
  40b61c:	push   ds
  40b61d:	xor    ebp,DWORD PTR [esi]
  40b61f:	ja     0x40b648
  40b621:	enter  0x5965,0x30
  40b625:	push   0x589b2b85
  40b62a:	add    eax,0x30ae2b4b
  40b62f:	out    dx,al
  40b630:	adc    DWORD PTR [ecx-0x664132a2],ebx
  40b636:	dec    esp
  40b637:	cdq    
  40b638:	sub    esp,DWORD PTR ds:0xe061f767
  40b63e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b63f:	xchg   ebx,eax
  40b640:	pop    ds
  40b641:	jmp    0x40b5dc
  40b643:	iret   
  40b644:	jmp    0x40b664
  40b646:	push   eax
  40b647:	bndldx bnd2,[edi+esi*2]
  40b64b:	scas   eax,DWORD PTR es:[edi]
  40b64c:	cmp    eax,0xe9f25271
  40b651:	data16 xlat BYTE PTR ds:[ebx]
  40b653:	pop    ebp
  40b654:	stos   DWORD PTR es:[edi],eax
  40b655:	adc    al,0xf6
  40b657:	jnp    0x40b60b
  40b659:	adc    DWORD PTR [esi-0x3ca92621],ebp
  40b65f:	pop    es
  40b660:	xchg   edi,eax
  40b661:	push   edx
  40b662:	mov    dh,0x66
  40b664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b665:	pop    esi
  40b666:	dec    ebp
  40b667:	push   ss
  40b668:	jae    0x40b6d1
  40b66a:	push   edx
  40b66b:	cwde   
  40b66c:	cmp    ch,BYTE PTR [edx-0x80]
  40b66f:	cmp    al,0x38
  40b671:	pushw  0x61
  40b674:	mov    ah,0x87
  40b676:	xchg   DWORD PTR [esi-0x6c],ebx
  40b679:	dec    eax
  40b67a:	pop    ss
  40b67b:	pusha  
  40b67c:	fs cmp ebp,ebx
  40b67f:	dec    esi
  40b680:	icebp  
  40b681:	fiadd  WORD PTR [edx+eiz*1+0x2af8a18f]
  40b688:	stos   DWORD PTR es:[edi],eax
  40b689:	dec    eax
  40b68a:	cmc    
  40b68b:	(bad)  
  40b68c:	test   al,0x57
  40b68e:	pop    es
  40b68f:	lds    edx,FWORD PTR [ecx+0x55]
  40b692:	or     BYTE PTR ds:0x8123c4db,dh
  40b698:	ins    DWORD PTR es:[edi],dx
  40b699:	imul   BYTE PTR [edi+eax*4]
  40b69c:	mov    ecx,0xf7648a4a
  40b6a1:	sbb    al,0x79
  40b6a3:	out    0x20,eax
  40b6a5:	push   edx
  40b6a6:	pop    edi
  40b6a7:	mov    esi,0x4992c8b7
  40b6ac:	aas    
  40b6ad:	pushf  
  40b6ae:	sub    BYTE PTR [eax+0x68],al
  40b6b1:	push   cs
  40b6b2:	mov    ecx,0xd4c098ba
  40b6b7:	sub    bl,dh
  40b6b9:	jbe    0x40b6e7
  40b6bb:	xlat   BYTE PTR ds:[ebx]
  40b6bc:	fst    QWORD PTR [edi+0x68]
  40b6bf:	or     esp,DWORD PTR [edx]
  40b6c1:	xchg   esp,eax
  40b6c2:	ja     0x40b739
  40b6c4:	ror    BYTE PTR [ebp-0x4787b947],0x91
  40b6cb:	push   esi
  40b6cc:	dec    esp
  40b6cd:	out    dx,al
  40b6ce:	in     eax,0x8b
  40b6d0:	popa   
  40b6d1:	push   edi
  40b6d2:	add    eax,ebx
  40b6d4:	inc    ebx
  40b6d5:	stos   BYTE PTR es:[edi],al
  40b6d6:	mov    WORD PTR [edi-0x7b],gs
  40b6d9:	jo     0x40b72d
  40b6db:	shl    BYTE PTR [ecx+0x3e],1
  40b6de:	mov    al,0x58
  40b6e0:	out    dx,al
  40b6e1:	sbb    eax,0xcadfe16f
  40b6e6:	inc    esi
  40b6e7:	inc    esi
  40b6e8:	mov    dl,BYTE PTR [esp+edi*1-0x1884b24b]
  40b6ef:	jns    0x40b675
  40b6f1:	fnstsw WORD PTR [ecx-0x1354a091]
  40b6f7:	loopne 0x40b770
  40b6f9:	popa   
  40b6fa:	jae    0x40b732
  40b6fc:	fnstcw WORD PTR es:[eax+esi*1-0x6e30bbfa]
  40b704:	xor    eax,0xf022df84
  40b709:	cmp    BYTE PTR [ecx],dl
  40b70b:	fs mov al,0xba
  40b70e:	inc    esp
  40b70f:	or     ebx,edx
  40b711:	es (bad) 
  40b713:	xchg   ebp,eax
  40b714:	cmp    eax,0xcd5d0723
  40b719:	sti    
  40b71a:	out    0x80,al
  40b71c:	mov    ds:0x4d1ebf1b,eax
  40b721:	mov    ds:0x8e1d4959,eax
  40b726:	pop    esp
  40b727:	std    
  40b728:	not    BYTE PTR [ebx-0x66340391]
  40b72e:	ss std 
  40b730:	mov    bl,0xe1
  40b732:	shl    DWORD PTR [ebp+0x758a68f4],cl
  40b738:	iret   
  40b739:	jmp    0x40b78a
  40b73b:	leave  
  40b73c:	pop    es
  40b73d:	shr    ebx,0xf7
  40b740:	cmp    eax,0x821ec02
  40b745:	ja     0x40b720
  40b747:	pop    bp
  40b749:	repz aaa 
  40b74b:	dec    ebp
  40b74c:	sahf   
  40b74d:	jbe    0x40b74e
  40b74f:	push   esi
  40b750:	jns    0x40b70b
  40b752:	sub    BYTE PTR [edi+0x1bcba17c],dl
  40b758:	push   0xffffffea
  40b75a:	push   esp
  40b75b:	jb     0x40b703
  40b75d:	adc    DWORD PTR [edx+esi*2-0x76d30f2a],esp
  40b764:	dec    ebx
  40b765:	pop    ebp
  40b766:	mov    ?,WORD PTR [edx]
  40b768:	clc    
  40b769:	push   ecx
  40b76a:	enter  0xc74f,0x5e
  40b76e:	mov    fs,WORD PTR [edi+0x4f]
  40b771:	or     ebx,DWORD PTR [ebx+0x4e7a4c3c]
  40b777:	pop    ecx
  40b779:	jae    0x40b736
  40b77b:	mov    esi,0x7d63d2d1
  40b780:	cmp    ecx,DWORD PTR [ecx+0x36]
  40b783:	add    eax,0xad25ab96
  40b788:	dec    eax
  40b789:	fadd   QWORD PTR [edi+0x66]
  40b78c:	mov    ebp,0x9335a874
  40b791:	push   esp
  40b792:	push   edx
  40b793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b794:	mov    ch,0xc2
  40b796:	pop    edx
  40b797:	pop    es
  40b798:	dec    ebx
  40b799:	inc    eax
  40b79a:	push   ebp
  40b79b:	fild   QWORD PTR [edi+0xf]
  40b79e:	inc    ebp
  40b79f:	sti    
  40b7a0:	sbb    al,0xcd
  40b7a2:	push   esi
  40b7a3:	cmp    BYTE PTR [ebx-0x69],ch
  40b7a6:	cs xchg ebp,eax
  40b7a8:	retf   0xd516
  40b7ab:	push   0x904b5abd
  40b7b0:	push   eax
  40b7b1:	and    eax,0x8d0a5bab
  40b7b6:	jp     0x40b759
  40b7b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7b9:	lds    edx,FWORD PTR [edi+0x50560c2d]
  40b7bf:	(bad)  
  40b7c0:	cmp    bh,BYTE PTR [ebx-0x3ed5b801]
  40b7c6:	test   DWORD PTR [ecx+edx*1+0x23],ebp
  40b7ca:	mov    ah,0x62
  40b7cc:	inc    ecx
  40b7cd:	jge    0x40b813
  40b7cf:	adc    al,0x11
  40b7d1:	jecxz  0x40b803
  40b7d3:	pusha  
  40b7d4:	loope  0x40b84f
  40b7d6:	jo     0x40b7dd
  40b7d8:	xor    esi,ecx
  40b7da:	in     eax,0x67
  40b7dc:	shl    cl,1
  40b7de:	mov    dl,0x57
  40b7e0:	push   ecx
  40b7e1:	fnstcw WORD PTR [eax+0x2c]
  40b7e4:	(bad)  
  40b7e5:	mov    edx,DWORD PTR [ebx-0xc]
  40b7e8:	cmp    al,0xc8
  40b7ea:	imul   esi,DWORD PTR [eax],0xffffffc0
  40b7ed:	les    edi,FWORD PTR [esi-0x22]
  40b7f0:	push   eax
  40b7f1:	xchg   BYTE PTR [eax-0x5c],dh
  40b7f4:	(bad)  
  40b7f5:	pop    ds
  40b7f6:	push   ebp
  40b7f7:	xchg   ebp,eax
  40b7f8:	bnd call 0x10eded67
  40b7fe:	and    BYTE PTR [edi],ch
  40b800:	mov    al,0x10
  40b802:	xor    eax,0x36d017b2
  40b807:	scas   al,BYTE PTR es:[edi]
  40b808:	jnp    0x40b836
  40b80a:	inc    esp
  40b80b:	sub    BYTE PTR [ebp+0x4721a299],dl
  40b811:	adc    edi,eax
  40b813:	sub    al,0x45
  40b815:	mov    ah,0x11
  40b817:	in     al,dx
  40b818:	jmp    0x4599:0xdcc36d5f
  40b81f:	xor    cl,BYTE PTR [edx-0x6b2c47db]
  40b825:	add    al,0xb2
  40b827:	ret    
  40b828:	and    DWORD PTR [edx],esi
  40b82a:	jmp    0xa74a:0xbc628880
  40b831:	loopne 0x40b839
  40b833:	push   cs
  40b834:	es jns 0x40b83e
  40b837:	out    0x74,eax
  40b839:	shl    BYTE PTR [ebx+0x7a5b05d8],1
  40b83f:	mov    esi,0x9dbe5681
  40b844:	sbb    BYTE PTR [edx],cl
  40b846:	retf   0x149a
  40b849:	dec    esi
  40b84a:	fnstsw WORD PTR [ebx+edx*4]
  40b84d:	inc    ebx
  40b84e:	sbb    ebp,0xffffff9d
  40b851:	in     eax,0x72
  40b853:	iret   
  40b854:	out    0xdd,al
  40b856:	je     0x40b8bf
  40b858:	mov    esp,0x87854703
  40b85d:	dec    eax
  40b85e:	repnz lea esi,ss:[eax+0x65c602d5]
  40b866:	sbb    ch,BYTE PTR [esi]
  40b868:	xor    esp,DWORD PTR [eax]
  40b86a:	inc    edx
  40b86b:	mov    eax,0x5bcd43c2
  40b870:	addr16 cdq 
  40b872:	ja     0x40b7f4
  40b874:	lahf   
  40b875:	fistp  WORD PTR [ebp-0x5e]
  40b878:	mov    al,0xc
  40b87a:	or     bl,BYTE PTR [eax-0x13]
  40b87d:	dec    esp
  40b87e:	push   cs
  40b87f:	je     0x40b880
  40b881:	xchg   edi,eax
  40b882:	test   al,0xfc
  40b885:	inc    esp
  40b886:	scas   eax,DWORD PTR es:[edi]
  40b887:	bound  ebx,QWORD PTR [esi+0x298b296a]
  40b88d:	out    0xe7,al
  40b88f:	inc    ebx
  40b890:	out    dx,al
  40b891:	test   BYTE PTR [ebx+ecx*4-0x25f9f7fc],cl
  40b898:	lea    ebp,[esp+ecx*1+0x2a403f96]
  40b89f:	jecxz  0x40b8c6
  40b8a1:	dec    ebx
  40b8a2:	pop    esp
  40b8a3:	mov    ecx,0x179dba6c
  40b8a8:	xchg   ecx,eax
  40b8a9:	mov    esp,0x285976fb
  40b8ae:	mov    esi,0xdf64e42b
  40b8b3:	inc    eax
  40b8b4:	jecxz  0x40b8fe
  40b8b6:	adc    al,0xa4
  40b8b8:	or     BYTE PTR [ecx+0x31],dh
  40b8bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8bc:	addr16 dec edx
  40b8be:	test   al,0x2d
  40b8c0:	inc    esi
  40b8c1:	ja     0x40b939
  40b8c3:	scas   al,BYTE PTR es:[edi]
  40b8c4:	jg     0x40b941
  40b8c6:	stc    
  40b8c7:	les    ebp,FWORD PTR [ebp-0x2a]
  40b8ca:	push   edi
  40b8cb:	fist   WORD PTR [eax]
  40b8cd:	mov    dl,0x1e
  40b8cf:	arpl   dx,bx
  40b8d1:	mov    dl,0x8c
  40b8d3:	sar    DWORD PTR [esi+0x2de9bfa1],0x6f
  40b8da:	shl    BYTE PTR [ebx+eiz*1-0x1],1
  40b8de:	in     eax,0x41
  40b8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8e1:	gs or  al,0x7d
  40b8e4:	sbb    DWORD PTR [eax+0x7f30ebff],edx
  40b8ea:	imul   eax,DWORD PTR [edx],0x4f
  40b8ed:	std    
  40b8ee:	pushw  ds
  40b8f0:	fwait
  40b8f1:	lods   al,BYTE PTR ds:[esi]
  40b8f2:	push   ebx
  40b8f3:	cmp    al,0x1f
  40b8f5:	sub    DWORD PTR [ebx+0x4b],ebp
  40b8f8:	inc    eax
  40b8f9:	in     eax,0xa7
  40b8fb:	dec    esp
  40b8fc:	and    eax,0x1ac32e37
  40b901:	mov    eax,ds:0xb8c72d08
  40b906:	sbb    DWORD PTR [ebx+eiz*2],0xcaec2d57
  40b90d:	jnp    0x40b8bd
  40b90f:	in     eax,dx
  40b910:	je     0x40b89a
  40b912:	pop    ds
  40b913:	(bad)  
  40b914:	sub    DWORD PTR [eax],ebx
  40b916:	(bad)  
  40b917:	loop   0x40b95e
  40b919:	mov    ah,BYTE PTR [edx-0x6ffae69]
  40b91f:	adc    ebp,DWORD PTR [eax]
  40b921:	push   ss
  40b922:	jb     0x40b8a9
  40b924:	clc    
  40b925:	pop    esp
  40b926:	xor    BYTE PTR [ecx-0x5610774b],cl
  40b92c:	repnz int 0xf2
  40b92f:	shl    BYTE PTR [eax-0x71],1
  40b932:	lods   eax,DWORD PTR ds:[esi]
  40b933:	inc    ecx
  40b934:	imul   ebp,DWORD PTR [esi+0xb9da182],0x12610398
  40b93e:	ja     0x40b930
  40b940:	sub    DWORD PTR [ebp+0x19],ecx
  40b943:	ss stc 
  40b945:	cmp    BYTE PTR [esi-0x1f],cl
  40b948:	xchg   edi,eax
  40b949:	sbb    eax,0x1e69a4d9
  40b94e:	nop
  40b94f:	add    dl,BYTE PTR [eax-0x64bd0f15]
  40b955:	sub    bh,al
  40b957:	scas   eax,DWORD PTR es:[edi]
  40b958:	and    DWORD PTR [edi],0xa646c174
  40b95e:	pop    ecx
  40b95f:	lea    ebx,[esp+eax*2]
  40b962:	cmp    al,0xa0
  40b964:	cld    
  40b965:	xchg   DWORD PTR [ebp+0x74f2c394],ebp
  40b96b:	xchg   ebp,eax
  40b96c:	mov    al,ds:0xa3c7963
  40b971:	fidivr DWORD PTR [edi+edi*4]
  40b974:	(bad)  [esi+ebx*8-0x78]
  40b978:	lods   eax,DWORD PTR ds:[esi]
  40b979:	xor    al,dl
  40b97b:	loop   0x40b9d5
  40b97d:	(bad)  
  40b97e:	out    0xbf,al
  40b980:	push   ebx
  40b981:	add    eax,edi
  40b983:	xchg   BYTE PTR [esi],bl
  40b985:	ret    0xb351
  40b988:	jp     0x40b9b1
  40b98a:	jg     0x40ba04
  40b98c:	mov    ebp,0x596c2979
  40b991:	jecxz  0x40b9f9
  40b993:	mov    bl,0xe
  40b995:	bound  ebx,QWORD PTR [esi]
  40b997:	sub    BYTE PTR [esi+0x5],0xbd
  40b99b:	jae    0x40b97b
  40b99d:	dec    ecx
  40b99e:	xchg   esp,eax
  40b99f:	sub    BYTE PTR ds:0x6004e96,bl
  40b9a5:	inc    esi
  40b9a6:	ss push ebp
  40b9a8:	clc    
  40b9a9:	xchg   ecx,eax
  40b9aa:	loope  0x40b9dd
  40b9ac:	lods   al,BYTE PTR ds:[esi]
  40b9ad:	xor    DWORD PTR [ecx+0x69],0x52
  40b9b1:	int3   
  40b9b2:	imul   ebx,DWORD PTR [edx+0x48f21a17],0xa3bf2286
  40b9bc:	add    eax,0x664e68e0
  40b9c1:	jo     0x40b9b8
  40b9c3:	ret    
  40b9c4:	jns    0x40b95c
  40b9c6:	add    BYTE PTR [ebp+0x7ca5a214],bh
  40b9cc:	adc    al,0x8
  40b9ce:	xor    bh,al
  40b9d0:	pop    es
  40b9d1:	pop    ebp
  40b9d2:	jp     0x40ba36
  40b9d4:	popf   
  40b9d5:	repnz pop es
  40b9d7:	mov    al,0xad
  40b9d9:	dec    edi
  40b9da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9db:	and    eax,0x7e0ec8c
  40b9e0:	mov    eax,ds:0x9ed2ee42
  40b9e5:	mov    WORD PTR [ebx],ds
  40b9e7:	dec    ebx
  40b9e8:	mov    ecx,0xb002ed61
  40b9ed:	mov    ah,BYTE PTR [edx-0x40]
  40b9f0:	sbb    ebx,DWORD PTR [ebp+edx*2+0x22]
  40b9f4:	push   0x3f
  40b9f6:	pushf  
  40b9f7:	xchg   esp,eax
  40b9f8:	std    
  40b9f9:	outs   dx,DWORD PTR ds:[esi]
  40b9fa:	arpl   WORD PTR [ecx+0x70af6ba6],sp
  40ba00:	aad    0x1a
  40ba02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba03:	fidivr WORD PTR [edi+0x7a]
  40ba06:	jo     0x40ba41
  40ba08:	mov    al,ds:0x27c2b399
  40ba0d:	mov    esi,0xdc40a9a2
  40ba12:	cmp    eax,0xb68edef3
  40ba17:	pop    ss
  40ba18:	mov    edi,0xcfd2d42d
  40ba1d:	jmp    0xcb80:0xbf4677b4
  40ba24:	jl     0x40b9ea
  40ba26:	ret    
  40ba27:	xor    al,0x9f
  40ba29:	fld    TBYTE PTR [ebx+ebp*2]
  40ba2c:	sbb    ebp,DWORD PTR [edx-0x6e]
  40ba2f:	(bad)  
  40ba30:	xchg   si,ax
  40ba32:	push   esp
  40ba33:	bound  ebp,QWORD PTR [ebx-0x68]
  40ba36:	fisub  DWORD PTR [edx+edx*2+0x5eb337d8]
  40ba3d:	test   DWORD PTR [ebx+0x15936737],esi
  40ba43:	dec    esi
  40ba44:	xchg   ebp,eax
  40ba45:	xor    DWORD PTR [ebx+ebx*4+0x2c],ebx
  40ba49:	mov    dl,0x9a
  40ba4b:	aad    0x64
  40ba4d:	lods   eax,DWORD PTR ds:[esi]
  40ba4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba4f:	xchg   edi,eax
  40ba50:	in     eax,0x37
  40ba52:	fsubp  st(6),st
  40ba54:	dec    ebp
  40ba55:	aad    0x70
  40ba57:	mov    ebx,0x3c54419e
  40ba5c:	xchg   esi,eax
  40ba5d:	aaa    
  40ba5e:	add    ah,bh
  40ba60:	cmc    
  40ba61:	js     0x40bad3
  40ba63:	mov    eax,0x1c8a4ef
  40ba68:	sbb    BYTE PTR [ebp-0x1ed57e7a],dl
  40ba6e:	leave  
  40ba6f:	sahf   
  40ba70:	int    0x46
  40ba72:	jae    0x40baa4
  40ba74:	cmp    DWORD PTR [ebp+edi*2-0xb254ae5],ebp
  40ba7b:	out    0x95,eax
  40ba7d:	ins    BYTE PTR es:[edi],dx
  40ba7e:	and    eax,DWORD PTR [edx]
  40ba80:	mov    ebp,DWORD PTR [ebx+ecx*1]
  40ba83:	mov    DWORD PTR [edi],edx
  40ba85:	fdiv   DWORD PTR [eax+eiz*4]
  40ba88:	xchg   esp,eax
  40ba89:	add    al,0xec
  40ba8b:	xor    DWORD PTR [ebx],ecx
  40ba8d:	sbb    bh,BYTE PTR [eax]
  40ba8f:	xchg   BYTE PTR [ebp-0x52],dl
  40ba92:	push   esp
  40ba93:	or     esp,esi
  40ba95:	sub    ch,bh
  40ba97:	dec    esp
  40ba98:	sub    esi,ecx
  40ba9a:	or     eax,0x12ea262c
  40ba9f:	jg     0x40bb1e
  40baa1:	lahf   
  40baa2:	aaa    
  40baa3:	xor    edx,DWORD PTR [esi+edi*4-0x16]
  40baa7:	(bad)  
  40baa8:	dec    edx
  40baa9:	inc    esp
  40baaa:	cdq    
  40baab:	jle    0x40bab0
  40baad:	or     cl,al
  40baaf:	popf   
  40bab0:	in     eax,0x20
  40bab2:	fisub  WORD PTR [edi+0x2ada2127]
  40bab8:	jbe    0x40baa3
  40baba:	in     eax,0xdc
  40babc:	aad    0x39
  40babe:	bnd jne 0x40ba9b
  40bac1:	shl    BYTE PTR [eax+ebp*1],cl
  40bac4:	push   es
  40bac5:	xchg   BYTE PTR [esi+ebp*2],cl
  40bac8:	xor    dh,BYTE PTR [edi+0x53]
  40bacb:	stos   BYTE PTR es:[edi],al
  40bacc:	in     al,0x3
  40bace:	daa    
  40bacf:	pop    edx
  40bad0:	hlt    
  40bad1:	xchg   BYTE PTR [esi],dh
  40bad3:	mul    BYTE PTR [edx+0x1990288b]
  40bad9:	call   0xbb6c985b
  40bade:	xlat   BYTE PTR ds:[ebx]
  40badf:	test   al,0x28
  40bae1:	mov    ds:0x666ca3c9,al
  40bae6:	dec    ebp
  40bae7:	lods   al,BYTE PTR ds:[esi]
  40bae8:	mov    ds:0x7fa74f4e,eax
  40baee:	je     0x40ba82
  40baf0:	imul   ecx,DWORD PTR [edx+0x17aebc44],0xfffffff7
  40baf7:	xchg   edi,eax
  40baf8:	pop    es
  40baf9:	mov    ds:0xba0d592b,al
  40bafe:	mov    esp,0x28e052a9
  40bb03:	inc    edi
  40bb04:	sbb    eax,0x87b4c3c0
  40bb09:	(bad)  
  40bb0a:	stos   BYTE PTR es:[edi],al
  40bb0b:	push   eax
  40bb0c:	addr16 mov ecx,0x12d1c75f
  40bb12:	xor    bl,BYTE PTR [eax+0x58f19d0c]
  40bb18:	mov    al,ds:0x710ee09d
  40bb1d:	std    
  40bb1e:	cmp    al,BYTE PTR [esi+0x1]
  40bb21:	cmp    DWORD PTR [eax-0x32c8af8],0xe
  40bb28:	push   cs
  40bb29:	call   0x423b5428
  40bb2e:	add    DWORD PTR [eax+edx*1],esi
  40bb31:	pop    esi
  40bb32:	in     eax,dx
  40bb33:	hlt    
  40bb34:	out    dx,al
  40bb35:	je     0x40bad3
  40bb37:	jns    0x40bac8
  40bb39:	daa    
  40bb3a:	mov    ds,WORD PTR [esp+ebp*2]
  40bb3d:	pop    esi
  40bb3e:	cli    
  40bb3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb40:	shl    DWORD PTR [ebx+eiz*2-0x5f],cl
  40bb44:	fsub   DWORD PTR [ebx]
  40bb46:	push   ds
  40bb47:	push   esi
  40bb48:	jns    0x40baed
  40bb4a:	mov    BYTE PTR [esi-0x341e468d],ch
  40bb50:	xchg   edx,eax
  40bb51:	adc    al,0xf5
  40bb53:	out    dx,eax
  40bb54:	or     BYTE PTR [ebp-0x30],ah
  40bb57:	add    BYTE PTR [ecx+0x36],al
  40bb5a:	xchg   esp,eax
  40bb5b:	and    esp,DWORD PTR [edx-0x7e46bf2d]
  40bb61:	hlt    
  40bb62:	(bad)  
  40bb63:	(bad)  
  40bb64:	gs stos DWORD PTR es:[edi],eax
  40bb66:	add    BYTE PTR [ebx],0x7c
  40bb69:	aas    
  40bb6a:	out    dx,al
  40bb6b:	fwait
  40bb6c:	jmp    0x67aab54f
  40bb71:	mov    al,0x2
  40bb73:	out    0x2a,eax
  40bb75:	and    eax,0xbac2b3fb
  40bb7a:	add    eax,0x66c2d06
  40bb7f:	mov    ds:0x77c9423,eax
  40bb84:	inc    ecx
  40bb85:	cmp    DWORD PTR [ebp-0x69573082],esi
  40bb8b:	or     ch,BYTE PTR [ebp+0x1d5b6ba2]
  40bb91:	inc    edi
  40bb92:	out    dx,al
  40bb93:	push   ecx
  40bb94:	fdivr  DWORD PTR [ecx+edi*8]
  40bb97:	js     0x40bc03
  40bb99:	ss mov bl,0xcf
  40bb9c:	jb     0x40bc09
  40bb9e:	dec    ecx
  40bb9f:	mov    ds:0x9bf723f4,al
  40bba4:	shl    DWORD PTR [edi-0x77],cl
  40bba7:	jecxz  0x40bb5a
  40bba9:	mov    edi,0x26fe480d
  40bbae:	out    0xe,al
  40bbb0:	xor    al,0xcc
  40bbb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbb3:	inc    edx
  40bbb4:	clc    
  40bbb5:	jo     0x40bc13
  40bbb7:	shl    DWORD PTR [edx+0x6a188602],0xa
  40bbbe:	mov    bh,0x73
  40bbc0:	and    al,0x96
  40bbc2:	and    BYTE PTR [edi+edx*2+0x35],cl
  40bbc6:	fnstcw WORD PTR [esi]
  40bbc8:	sbb    al,0xe0
  40bbca:	iret   
  40bbcb:	ins    BYTE PTR es:[edi],dx
  40bbcc:	mov    WORD PTR [edx-0x50b435e0],fs
  40bbd2:	xchg   esi,eax
  40bbd3:	rol    BYTE PTR [ecx+0x5fe85950],1
  40bbd9:	cwde   
  40bbda:	in     al,dx
  40bbdb:	push   esi
  40bbdc:	scas   eax,DWORD PTR es:[edi]
  40bbdd:	pop    ebx
  40bbde:	in     al,0xed
  40bbe0:	into   
  40bbe1:	dec    ebx
  40bbe2:	gs (bad) 
  40bbe5:	mov    esp,0x5e674b66
  40bbea:	sub    eax,0xe17a9a2b
  40bbef:	in     al,0x65
  40bbf1:	mov    edx,edx
  40bbf3:	dec    ecx
  40bbf4:	fcomi  st,st(0)
  40bbf6:	daa    
  40bbf7:	push   es
  40bbf8:	mov    esp,0x9752bebc
  40bbfd:	idiv   DWORD PTR [esi]
  40bbff:	xchg   BYTE PTR [ebx],al
  40bc01:	push   esi
  40bc02:	out    0x6a,eax
  40bc04:	pop    ebx
  40bc05:	sub    edx,edi
  40bc07:	sub    DWORD PTR [esi+0x38],ebx
  40bc0a:	fmul   QWORD PTR [ecx-0x584e952d]
  40bc10:	inc    DWORD PTR [edi+0x8]
  40bc13:	cld    
  40bc14:	dec    ecx
  40bc15:	xor    al,0xc4
  40bc17:	das    
  40bc18:	push   cs
  40bc19:	mov    esi,0xfb565eb2
  40bc1e:	or     BYTE PTR [edi+0x5de2b0c8],dl
  40bc24:	push   edx
  40bc25:	cdq    
  40bc26:	inc    ecx
  40bc27:	pop    ebp
  40bc28:	mov    edi,0x76f3d147
  40bc2d:	push   cs
  40bc2e:	(bad)  
  40bc2f:	or     ch,BYTE PTR [edx+0x72bdbcd6]
  40bc35:	gs jns 0x40bc00
  40bc38:	push   edi
  40bc39:	jge    0x40bcb4
  40bc3b:	xchg   edi,eax
  40bc3c:	ror    DWORD PTR [edx+0x3d],cl
  40bc3f:	jae    0x40bc83
  40bc41:	hlt    
  40bc42:	arpl   WORD PTR [edi],bp
  40bc44:	adc    BYTE PTR [edi+edx*1],cl
  40bc47:	jg     0x40bc37
  40bc49:	stos   DWORD PTR es:[edi],eax
  40bc4a:	mov    edi,0xe79ec996
  40bc4f:	cmp    cl,BYTE PTR [esp+eax*2]
  40bc52:	out    0x40,eax
  40bc54:	jecxz  0x40bc4b
  40bc56:	test   eax,edi
  40bc58:	adc    DWORD PTR [ebx],eax
  40bc5a:	dec    ebp
  40bc5b:	mov    bh,BYTE PTR [esi]
  40bc5d:	(bad)  
  40bc5e:	and    DWORD PTR [edx],ebp
  40bc60:	jns    0x40bc3a
  40bc62:	jmp    0x96ed2a83
  40bc67:	inc    edx
  40bc68:	jmp    0xc423:0xbaef79de
  40bc6f:	fs cdq 
  40bc71:	ror    DWORD PTR [esi-0x20],cl
  40bc74:	mov    al,BYTE PTR ds:0x9d8e7081
  40bc7a:	ret    0x5fd3
  40bc7d:	mov    ds:0xaefe4d01,eax
  40bc82:	lods   eax,DWORD PTR ds:[esi]
  40bc83:	call   FWORD PTR ds:0x9e8da73d
  40bc89:	test   DWORD PTR [esi+0x4e],0xb47bb139
  40bc90:	je     0x40bc8c
  40bc92:	data16 mov cl,0x4c
  40bc95:	mov    ebx,0xd9ac6992
  40bc9a:	inc    ebx
  40bc9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc9c:	xor    BYTE PTR [eax-0x5dc0dd0b],0x25
  40bca3:	and    DWORD PTR [esi],0xa52de332
  40bca9:	pusha  
  40bcaa:	adc    al,0xa6
  40bcac:	inc    ebp
  40bcad:	push   esp
  40bcae:	adc    al,0x40
  40bcb0:	mov    bl,0xd6
  40bcb2:	xchg   esi,eax
  40bcb3:	xchg   edx,eax
  40bcb4:	fwait
  40bcb5:	push   es
  40bcb6:	call   0xefe0909e
  40bcbb:	std    
  40bcbc:	sub    BYTE PTR [ebp-0x37d6b2ba],bh
  40bcc2:	repz mov bh,0x6c
  40bcc5:	fs jb  0x40bd19
  40bcc8:	addr16 in al,0x19
  40bccb:	xor    eax,0xa6958ea8
  40bcd0:	jmp    0x5c4b:0x663a6e51
  40bcd7:	out    dx,al
  40bcd8:	push   es
  40bcd9:	mov    BYTE PTR [ecx+ecx*8],dh
  40bcdc:	repnz xchg esi,eax
  40bcde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcdf:	or     bh,ch
  40bce1:	int    0x98
  40bce3:	ss xor al,0x9c
  40bce6:	push   eax
  40bce7:	sbb    al,0xa9
  40bce9:	(bad)
  40bcec:	cmp    esi,ebx
  40bcee:	imul   eax,DWORD PTR [edi],0x75
  40bcf1:	(bad)  
  40bcf2:	repnz and DWORD PTR [edi+0x50],esp
  40bcf6:	pusha  
  40bcf7:	lods   eax,DWORD PTR ds:[esi]
  40bcf8:	aas    
  40bcf9:	jmp    0x40bc92
  40bcfb:	into   
  40bcfc:	add    eax,0x136dd669
  40bd01:	stos   DWORD PTR es:[edi],eax
  40bd02:	cmp    eax,0xe5b90849
  40bd07:	aam    0xe5
  40bd09:	inc    eax
  40bd0a:	iret   
  40bd0b:	pop    esp
  40bd0c:	clc    
  40bd0d:	mov    al,ds:0xbdf30d25
  40bd12:	mov    bh,0x9e
  40bd14:	adc    bh,bl
  40bd16:	cmc    
  40bd17:	push   es
  40bd18:	sub    eax,0x1b7e9000
  40bd1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd1e:	sahf   
  40bd1f:	push   edx
  40bd20:	test   eax,0x14262826
  40bd25:	mov    ah,0xff
  40bd27:	jae    0x40bd00
  40bd29:	pop    ebx
  40bd2a:	out    0x7,eax
  40bd2c:	gs pop esp
  40bd2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd2f:	or     BYTE PTR [edx-0x5d],bh
  40bd32:	sar    dh,0x7c
  40bd35:	fmul   QWORD PTR ds:0x249af265
  40bd3b:	dec    edx
  40bd3c:	out    0x4b,al
  40bd3e:	jnp    0x40bd11
  40bd40:	mov    edi,0x9d2ce7e1
  40bd45:	das    
  40bd46:	dec    edx
  40bd47:	lds    eax,FWORD PTR [ebp-0x5a]
  40bd4a:	xor    eax,0x298c3847
  40bd4f:	jnp    0x40bcf1
  40bd51:	cmp    ebp,edi
  40bd53:	push   ebx
  40bd54:	cmp    dh,BYTE PTR [edi+0x72]
  40bd57:	pop    edi
  40bd58:	aam    0x77
  40bd5a:	push   eax
  40bd5b:	fsub   DWORD PTR [ebx+edx*4+0x64ffd0]
  40bd62:	retf   
  40bd63:	daa    
  40bd64:	sbb    al,ch
  40bd66:	adc    DWORD PTR [edx],edi
  40bd68:	cmp    eax,0x41e50dda
  40bd6d:	fwait
  40bd6e:	mov    ebp,0x8cb889f6
  40bd73:	dec    esi
  40bd74:	nop
  40bd75:	jmp    0x9665:0x6959648f
  40bd7c:	loope  0x40bd24
  40bd7e:	or     BYTE PTR [ecx],bh
  40bd80:	jb     0x40bdfe
  40bd82:	into   
  40bd83:	cmp    edx,DWORD PTR [edx+0x50]
  40bd86:	inc    eax
  40bd87:	mov    WORD PTR [esp+ecx*2-0x38770257],gs
  40bd8e:	sbb    eax,0x71e6599e
  40bd93:	dec    ecx
  40bd94:	add    eax,0xc8c27d14
  40bd99:	xor    al,bl
  40bd9b:	test   al,0xe6
  40bd9d:	push   edx
  40bd9e:	fs hlt 
  40bda0:	jo     0x40bd2e
  40bda2:	inc    ecx
  40bda3:	push   edx
  40bda4:	sbb    eax,0x8205a7fc
  40bda9:	push   edx
  40bdaa:	loop   0x40bdbd
  40bdac:	sbb    DWORD PTR [esi+0x7e],ebp
  40bdaf:	call   0xcd83:0x2a74262e
  40bdb6:	jmp    0x8f5b:0xa2097a3a
  40bdbd:	lods   al,BYTE PTR ds:[esi]
  40bdbe:	rcr    DWORD PTR ds:0x2f557b0d,cl
  40bdc4:	popa   
  40bdc5:	xchg   ebx,eax
  40bdc6:	inc    eax
  40bdc7:	lea    esp,[ecx-0x6f]
  40bdca:	dec    eax
  40bdcb:	in     al,0x79
  40bdcd:	push   es
  40bdce:	imul   ebp,DWORD PTR [edx+0x7a],0x22
  40bdd2:	out    0x80,al
  40bdd4:	test   BYTE PTR [ecx-0x3e],0xc3
  40bdd8:	jb     0x40bddc
  40bdda:	call   DWORD PTR [edx]
  40bddc:	mov    esp,0x5dd14b57
  40bde1:	sub    BYTE PTR [esi+ebp*8+0x2b],ah
  40bde5:	mov    esp,ecx
  40bde7:	xor    al,dl
  40bde9:	fsub   DWORD PTR [ebx+edx*8]
  40bdec:	retf   0xdfa3
  40bdef:	repnz adc eax,0x77cccbc7
  40bdf5:	pusha  
  40bdf6:	sbb    eax,ebp
  40bdf8:	daa    
  40bdf9:	jo     0x40bdbb
  40bdfb:	jae    0x40be28
  40bdfd:	test   DWORD PTR [edx+0x65],ecx
  40be00:	jle    0x40be3b
  40be02:	ja     0x40bdce
  40be04:	jo     0x40be3b
  40be06:	sub    eax,esp
  40be08:	pop    ecx
  40be09:	ins    DWORD PTR es:[edi],dx
  40be0a:	sbb    DWORD PTR [esi+edi*1-0x2f736c08],edx
  40be11:	sub    eax,0xd8d1bf65
  40be16:	imul   ecx,DWORD PTR [ebp-0x29],0x6b
  40be1a:	or     edi,DWORD PTR [ecx-0x6a3a1655]
  40be20:	jmp    0x40be2f
  40be22:	out    0x5a,al
  40be24:	jnp    0x40bda9
  40be26:	aam    0x12
  40be28:	sbb    eax,0x116ddc8
  40be2d:	mov    WORD PTR [edi+eax*2+0x5],cs
  40be31:	retf   0xab23
  40be34:	jns    0x40be93
  40be36:	mov    bh,0xda
  40be38:	adc    esi,DWORD PTR [ecx]
  40be3a:	xor    al,0xd2
  40be3c:	xchg   ebp,eax
  40be3d:	sub    edx,edi
  40be3f:	sub    DWORD PTR [edi],0x79
  40be42:	push   ss
  40be43:	je     0x40be66
  40be45:	push   0xffffffce
  40be47:	jp     0x40be37
  40be49:	ficom  DWORD PTR ss:[esi]
  40be4c:	push   esp
  40be4d:	lahf   
  40be4e:	adc    dl,BYTE PTR [edi+0x1d]
  40be51:	mov    edi,0x997f5f8b
  40be56:	test   al,0x7a
  40be58:	xchg   esi,eax
  40be59:	dec    esi
  40be5a:	xchg   esi,eax
  40be5b:	jp     0x40bde6
  40be5d:	jmp    0x1b743dce
  40be62:	loopne 0x40bea2
  40be64:	icebp  
  40be65:	ror    DWORD PTR [edx-0x2b838322],0x8
  40be6c:	pop    ss
  40be6d:	ja     0x40be15
  40be6f:	outs   dx,DWORD PTR ds:[esi]
  40be70:	out    0xa5,al
  40be72:	mov    dl,0xbd
  40be74:	neg    ecx
  40be76:	mov    esi,0x3fc64e46
  40be7b:	rcl    bl,0xf8
  40be7e:	das    
  40be7f:	(bad)  
  40be80:	pop    ecx
  40be81:	sbb    eax,0x9a77fe3
  40be86:	das    
  40be87:	out    0x31,eax
  40be89:	add    eax,0xe77e6ea
  40be8f:	xlat   BYTE PTR ds:[ebx]
  40be90:	xchg   BYTE PTR [ebx-0x25],ch
  40be93:	(bad)  
  40be94:	push   esp
  40be95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be96:	dec    eax
  40be97:	ss mov bh,0x48
  40be9a:	and    DWORD PTR [eax+0x4b5bd38b],esp
  40bea0:	call   DWORD PTR [ebx]
  40bea2:	cmp    DWORD PTR [ebp+0x10],esi
  40bea5:	je     0x40e267
  40beab:	xchg   edx,eax
  40beac:	push   0xb
  40beae:	pop    ecx
  40beaf:	push   0x4
  40beb1:	pop    ebx
  40beb2:	inc    ebx
  40beb3:	xchg   ebx,ecx
  40beb5:	sub    ebx,ecx
  40beb7:	xchg   ebx,ecx
  40beb9:	dec    ecx
  40beba:	dec    ecx
  40bebb:	mov    eax,DWORD PTR [ebp-0x1c]
  40bebe:	imul   eax,ecx
  40bec1:	add    esp,eax
  40bec3:	jmp    0x40e266
  40bec8:	xchg   esi,eax
  40bec9:	cli    
  40beca:	test   DWORD PTR [esi],0xca9373f3
  40bed0:	jae    0x40beb5
  40bed2:	adc    eax,0x10f00d96
  40bed7:	mov    ds:0x7272e1b4,al
  40bedc:	clc    
  40bedd:	pop    edi
  40bede:	jb     0x40bf52
  40bee0:	and    eax,0x2811dd3b
  40bee5:	clc    
  40bee6:	les    esi,FWORD PTR [ebx-0x6b3f2e9e]
  40beec:	sbb    BYTE PTR [ecx+eax*4],bl
  40beef:	mov    BYTE PTR [ecx+0x348b8a11],dh
  40bef5:	fcomp  DWORD PTR [edi]
  40bef7:	cs dec eax
  40bef9:	cmc    
  40befa:	shl    al,0xc7
  40befd:	test   eax,0x57fbfae8
  40bf02:	jns    0x40be9a
  40bf04:	sar    ebp,1
  40bf06:	fsubr  QWORD PTR [eax-0x377830d]
  40bf0c:	sbb    dl,cl
  40bf0e:	hlt    
  40bf0f:	jmp    0x40bea7
  40bf11:	and    ecx,0xccb4c907
  40bf17:	jae    0x40bede
  40bf19:	int3   
  40bf1a:	pop    edi
  40bf1b:	ja     0x40bf70
  40bf1d:	cmp    BYTE PTR [ebp+0x65],cl
  40bf20:	or     eax,0x8450217
  40bf25:	ss int 0xc2
  40bf28:	inc    ebp
  40bf29:	in     eax,0xdd
  40bf2b:	mov    eax,ds:0x9eab47cc
  40bf30:	push   0x547fd996
  40bf35:	sub    eax,DWORD PTR [edi]
  40bf37:	mov    dl,0x4c
  40bf39:	dec    esp
  40bf3a:	call   0xdc93051f
  40bf3f:	jl     0x40bf1c
  40bf41:	sbb    dl,BYTE PTR [esi-0x79]
  40bf44:	cmp    DWORD PTR ds:0x5dce3c5c,ebx
  40bf4a:	mov    ebp,0xaa859640
  40bf4f:	test   DWORD PTR [edi+0x1ee9e84],esi
  40bf55:	dec    edx
  40bf56:	int    0xaf
  40bf58:	cmp    eax,0x2946a356
  40bf5d:	or     al,0xb1
  40bf5f:	mov    al,0xa3
  40bf61:	das    
  40bf62:	and    bl,dl
  40bf64:	in     al,dx
  40bf65:	cld    
  40bf66:	rcr    BYTE PTR [edi+0x58b1722b],0xa2
  40bf6d:	cmp    eax,0xd5d10a06
  40bf72:	sbb    BYTE PTR [esi-0x45],dh
  40bf75:	mov    edx,0xa0b886ad
  40bf7a:	jl     0x40bf8b
  40bf7c:	ss sahf 
  40bf7e:	(bad)  
  40bf7f:	mov    BYTE PTR [ecx],al
  40bf81:	jge    0x40bfbc
  40bf83:	into   
  40bf84:	jge    0x40bfe4
  40bf86:	pop    esp
  40bf87:	pop    ebp
  40bf88:	repz rcr ch,1
  40bf8b:	push   es
  40bf8c:	add    DWORD PTR [edi-0x60308b42],ebx
  40bf92:	inc    eax
  40bf93:	in     eax,0xe6
  40bf95:	out    0xaa,al
  40bf97:	(bad)  
  40bf98:	cmp    eax,0x2a5b2f3e
  40bf9d:	test   eax,0x1842334b
  40bfa2:	dec    ebp
  40bfa3:	push   esp
  40bfa4:	xchg   ebx,eax
  40bfa5:	test   ah,ah
  40bfa7:	or     ebp,DWORD PTR [esi+0x4a]
  40bfaa:	jle    0x40bfb4
  40bfac:	lods   eax,DWORD PTR ds:[esi]
  40bfad:	out    dx,eax
  40bfae:	and    esp,DWORD PTR [ebx]
  40bfb0:	inc    eax
  40bfb1:	jmp    0x9bb1efdd
  40bfb6:	xor    DWORD PTR [edi-0x6c7625eb],edi
  40bfbc:	fsubr  DWORD PTR [ecx+ebp*2]
  40bfbf:	push   esp
  40bfc0:	xor    eax,0xda74c617
  40bfc5:	xor    al,0xf0
  40bfc7:	hlt    
  40bfc8:	sbb    al,0x93
  40bfca:	push   eax
  40bfcb:	stos   BYTE PTR es:[edi],al
  40bfcc:	mov    ch,0xe8
  40bfce:	and    BYTE PTR [ecx],dl
  40bfd0:	shr    BYTE PTR [eax-0x75],cl
  40bfd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfd4:	mov    esi,0x7b5b4ce4
  40bfd9:	pushf  
  40bfda:	jns    0x40c025
  40bfdc:	cmp    ebx,esi
  40bfde:	test   al,0x8f
  40bfe0:	repnz dec edx
  40bfe2:	les    edi,FWORD PTR [edx]
  40bfe4:	xor    eax,0xe4f508bb
  40bfe9:	xchg   DWORD PTR [ecx],esi
  40bfeb:	aas    
  40bfec:	test   BYTE PTR [eax+0x52],ch
  40bfef:	pop    ebp
  40bff0:	xchg   ebp,eax
  40bff1:	add    eax,0xecd1db5
  40bff6:	xlat   BYTE PTR ds:[ebx]
  40bff7:	jo     0x40c042
  40bff9:	push   ebp
  40bffa:	es sti 
  40bffc:	arpl   WORD PTR [ebp-0x555715a3],dx
  40c002:	popf   
  40c003:	repz cmp BYTE PTR [esi-0x1f84e211],bh
  40c00a:	xor    DWORD PTR [esi],esp
  40c00c:	ret    0xfd08
  40c00f:	retf   0x56e1
  40c012:	shl    DWORD PTR [ecx-0x396aede5],cl
  40c018:	sbb    al,BYTE PTR [eax+eiz*8]
  40c01b:	add    BYTE PTR [edi],0x37
  40c01e:	imul   DWORD PTR [edi-0x6058169f]
  40c024:	mov    ah,0x9b
  40c026:	shl    al,0x9e
  40c029:	dec    eax
  40c02a:	call   0x8c13ad57
  40c02f:	pusha  
  40c030:	jnp    0x40c0a6
  40c032:	aaa    
  40c033:	xchg   esi,eax
  40c034:	jg     0x40c01d
  40c036:	pop    ss
  40c037:	or     dh,BYTE PTR [edx+0x7a]
  40c03a:	enter  0x47c,0x4
  40c03e:	in     al,dx
  40c03f:	mov    eax,0x8fbba0d6
  40c044:	ss pushf 
  40c046:	int3   
  40c047:	ins    DWORD PTR es:[edi],dx
  40c048:	dec    ecx
  40c049:	sub    al,BYTE PTR [ecx-0x12]
  40c04c:	dec    edx
  40c04d:	imul   ebp,DWORD PTR [esi+0x71],0x904c3f54
  40c054:	mov    ss,WORD PTR [edi+0x4e6e5899]
  40c05a:	jp     0x40c070
  40c05c:	adc    al,BYTE PTR [ebp+0x7a]
  40c05f:	iret   
  40c060:	data16 outs dx,BYTE PTR ds:[esi]
  40c062:	xchg   ebp,eax
  40c063:	imul   edx,edx,0xb3b958ea
  40c069:	leave  
  40c06a:	ins    DWORD PTR es:[edi],dx
  40c06b:	mov    ecx,0x75815072
  40c070:	ficomp DWORD PTR [eax+0x79b5c33c]
  40c076:	mov    edx,0xa20e80f2
  40c07b:	aas    
  40c07c:	sar    DWORD PTR [edx+ecx*8-0x4e3b13f],1
  40c083:	cs pop ebx
  40c085:	hlt    
  40c086:	scas   eax,DWORD PTR es:[edi]
  40c087:	dec    edi
  40c088:	fild   WORD PTR ds:[esi-0x75168fbe]
  40c08f:	cld    
  40c090:	and    BYTE PTR [ebp+0x45],ah
  40c093:	push   esp
  40c094:	mov    edi,0x484ac384
  40c099:	in     al,0x8b
  40c09b:	xor    BYTE PTR [ecx+esi*1],ah
  40c09e:	lahf   
  40c09f:	jmp    0xfba2:0x853613e5
  40c0a6:	(bad)
  40c0aa:	(bad)  
  40c0ab:	arpl   WORD PTR [edx+eiz*8-0x237c6e0],bx
  40c0b2:	ret    
  40c0b3:	adc    ax,0xa907
  40c0b7:	mov    DWORD PTR [ebx+esi*8+0x1ab10c43],ebx
  40c0be:	jecxz  0x40c0c3
  40c0c0:	test   eax,0x8ee54f0f
  40c0c5:	add    bh,BYTE PTR [edx+eax*2-0x39011ebf]
  40c0cc:	xchg   DWORD PTR [eax-0x65],ebx
  40c0cf:	sub    ch,BYTE PTR [edx+0x24]
  40c0d2:	xchg   ecx,esi
  40c0d4:	xchg   ebp,eax
  40c0d5:	or     eax,0xf6b7a6b7
  40c0da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0db:	arpl   WORD PTR [eax],bx
  40c0dd:	add    eax,0x7a3c729e
  40c0e2:	jbe    0x40c096
  40c0e4:	hlt    
  40c0e5:	iret   
  40c0e6:	sub    eax,0x12813290
  40c0eb:	pop    ss
  40c0ec:	dec    ebp
  40c0ed:	cmc    
  40c0ee:	cwde   
  40c0ef:	into   
  40c0f0:	idiv   BYTE PTR ds:0x448474cf
  40c0f6:	xchg   ecx,eax
  40c0f7:	sbb    BYTE PTR [eax+0x7d7962e],dh
  40c0fd:	xchg   esp,eax
  40c0fe:	xchg   DWORD PTR [edi-0x7f4a748],edi
  40c104:	mov    dh,0x83
  40c106:	out    dx,al
  40c107:	sbb    BYTE PTR [edi-0x5c],dl
  40c10a:	loopne 0x40c0fb
  40c10c:	cmp    ecx,DWORD PTR [edx+ecx*8+0x4b48a76]
  40c113:	pop    esi
  40c114:	jb     0x40c0f7
  40c116:	add    BYTE PTR [ecx],cl
  40c118:	sub    dl,BYTE PTR [edi]
  40c11a:	loope  0x40c104
  40c11c:	jo     0x40c0a0
  40c11e:	adc    al,0x92
  40c120:	mov    DWORD PTR ds:0x1c5c3f95,ecx
  40c126:	nop
  40c127:	mov    al,0x8
  40c129:	xchg   ebx,eax
  40c12a:	pop    edi
  40c12b:	jp     0x40c19c
  40c12d:	pop    ebx
  40c12e:	popa   
  40c12f:	je     0x40c0fd
  40c131:	adc    DWORD PTR [ecx-0x5d616a0d],0x5a
  40c138:	in     eax,dx
  40c139:	sub    esi,edi
  40c13b:	and    DWORD PTR [esi+0xd7172da],esp
  40c141:	push   0x511a64de
  40c146:	ins    DWORD PTR es:[edi],dx
  40c147:	fisttp DWORD PTR [edx-0xd57b1a6]
  40c14d:	mov    dl,0xd9
  40c14f:	leave  
  40c150:	(bad)  
  40c151:	mov    edi,0xc77f9370
  40c156:	repz sub al,0xdf
  40c159:	fdivr  DWORD PTR [ebx]
  40c15b:	jmp    0xfb7b:0x82ce9215
  40c162:	xor    DWORD PTR [ecx-0x4f56e8ff],0x16edc98f
  40c16c:	(bad)  
  40c16e:	add    eax,0xa81880bd
  40c173:	add    eax,0x6d79c012
  40c178:	fsub   DWORD PTR [eax+ecx*8-0x65]
  40c17c:	das    
  40c17d:	lahf   
  40c17e:	jl     0x40c179
  40c180:	daa    
  40c181:	jl     0x40c14b
  40c183:	call   DWORD PTR [edx-0x1c]
  40c186:	out    dx,eax
  40c187:	adc    al,bl
  40c189:	(bad)  
  40c18b:	lds    esp,FWORD PTR [ecx-0x15]
  40c18e:	adc    DWORD PTR [edx+0x27],esi
  40c191:	dec    eax
  40c192:	pop    edi
  40c193:	fsub   DWORD PTR es:[edi]
  40c196:	lock pop ebp
  40c198:	out    dx,al
  40c199:	mov    ebx,esp
  40c19b:	jo     0x40c154
  40c19d:	test   DWORD PTR [eax+0x225b9b90],ebx
  40c1a3:	sahf   
  40c1a4:	or     DWORD PTR [ecx+0x35c4b8f7],edi
  40c1aa:	jb     0x40c155
  40c1ac:	push   ss
  40c1ad:	sbb    BYTE PTR [eax],al
  40c1af:	xchg   ebp,edx
  40c1b1:	mov    cl,0xe0
  40c1b3:	cmp    dl,bh
  40c1b5:	imul   edx,DWORD PTR [ebp-0x39ba4e7f],0x2e61f990
  40c1bf:	loopne 0x40c172
  40c1c1:	sub    DWORD PTR [ecx],ecx
  40c1c3:	mov    dh,0xf8
  40c1c5:	adc    DWORD PTR [eax-0x6a],ebp
  40c1c8:	xchg   bh,al
  40c1ca:	call   edi
  40c1cc:	call   0x354ff86
  40c1d1:	shr    BYTE PTR [ebp-0x2281f531],0x27
  40c1d8:	sti    
  40c1d9:	iret   
  40c1da:	jge    0x40c23a
  40c1dc:	lahf   
  40c1dd:	mov    ecx,0x88c5aa25
  40c1e2:	inc    BYTE PTR es:[ebx-0x79]
  40c1e6:	pop    es
  40c1e7:	fwait
  40c1e8:	push   cs
  40c1e9:	lds    eax,FWORD PTR fs:0x10e8578
  40c1f0:	jmp    0x40c261
  40c1f2:	sbb    esp,DWORD PTR [ecx]
  40c1f4:	jbe    0x40c218
  40c1f6:	push   0x23b093ec
  40c1fb:	add    dl,BYTE PTR ds:0xb73e153
  40c201:	stc    
  40c202:	rol    DWORD PTR [edi],cl
  40c204:	xchg   ecx,eax
  40c205:	pop    ecx
  40c206:	mov    WORD PTR [ecx+0x4c3210f2],?
  40c20c:	jge    0x40c23b
  40c20e:	cmp    esi,DWORD PTR [edi]
  40c210:	test   BYTE PTR [ecx],bl
  40c212:	xor    BYTE PTR [edi+0x40],bh
  40c215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c216:	lods   al,BYTE PTR ds:[esi]
  40c217:	pop    ebp
  40c218:	(bad)  
  40c219:	int3   
  40c21a:	jmp    0x40c21e
  40c21c:	lods   al,BYTE PTR ds:[esi]
  40c21d:	dec    ecx
  40c21e:	sar    BYTE PTR ds:[edi],cl
  40c221:	iret   
  40c222:	aad    0x8d
  40c224:	add    BYTE PTR [edx-0x23],ch
  40c227:	ja     0x40c28a
  40c229:	loope  0x40c209
  40c22b:	mov    dh,0x57
  40c22d:	xor    dl,BYTE PTR [edx+0x5712824e]
  40c233:	pop    edx
  40c234:	or     DWORD PTR [edx+eax*1+0x57f62d3e],edx
  40c23b:	loopne 0x40c220
  40c23d:	imul   ebp,DWORD PTR [esi],0x64cb165a
  40c243:	lods   al,BYTE PTR ds:[esi]
  40c244:	mov    cl,0x99
  40c246:	sub    al,0x31
  40c248:	sub    ch,BYTE PTR cs:[esi+0x5604e331]
  40c24f:	xchg   edi,eax
  40c250:	pop    ebx
  40c251:	lds    ebx,FWORD PTR [ebp+0x486609e9]
  40c257:	or     eax,0xe2737b16
  40c25c:	push   ebx
  40c25d:	mov    ?,WORD PTR [esi-0xf]
  40c260:	dec    edx
  40c261:	loope  0x40c25d
  40c263:	shl    DWORD PTR [edx-0x5dc603c4],cl
  40c269:	mov    ds:0x8d4caac5,al
  40c26e:	cdq    
  40c26f:	sub    edx,DWORD PTR [eax+0xa]
  40c272:	test   DWORD PTR [ecx],edx
  40c274:	dec    edi
  40c275:	out    0xb8,eax
  40c277:	in     eax,dx
  40c278:	je     0x40c2be
  40c27a:	jp     0x40c22a
  40c27c:	pop    ecx
  40c27d:	hlt    
  40c27e:	add    eax,0xc1d0b3f2
  40c283:	push   eax
  40c284:	sbb    BYTE PTR [ecx-0x30],bl
  40c287:	in     al,0x1e
  40c289:	shl    BYTE PTR [ecx],0x75
  40c28c:	mov    esi,DWORD PTR [eax+0x78]
  40c28f:	xor    DWORD PTR [ecx+0x5b3fbf6],esp
  40c295:	or     cl,ch
  40c297:	add    al,BYTE PTR [ebx+edi*2]
  40c29a:	pop    ds
  40c29b:	dec    ebx
  40c29c:	cmp    DWORD PTR [eax-0x20570839],ecx
  40c2a2:	mov    bh,BYTE PTR [ecx-0x3c]
  40c2a5:	daa    
  40c2a6:	lock xchg edi,eax
  40c2a8:	adc    al,0xde
  40c2aa:	pop    esp
  40c2ab:	pop    ebp
  40c2ac:	mov    ebx,0x36f313be
  40c2b1:	mov    ah,0xfa
  40c2b3:	mov    ch,0x8e
  40c2b5:	mov    esi,0x40c407c3
  40c2ba:	in     al,dx
  40c2bb:	pop    es
  40c2bc:	call   0xc143:0x55437654
  40c2c3:	(bad)  
  40c2c4:	lods   eax,DWORD PTR ds:[esi]
  40c2c5:	imul   ebp,DWORD PTR [edi-0x1ab9724b],0xa687850
  40c2cf:	jbe    0x40c2f5
  40c2d1:	arpl   di,sp
  40c2d3:	add    ebp,DWORD PTR [edi]
  40c2d5:	pop    ss
  40c2d6:	sar    BYTE PTR [ebx],cl
  40c2d8:	cmp    ah,BYTE PTR [edi+0x0]
  40c2db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2dc:	xchg   ebx,eax
  40c2dd:	outs   dx,BYTE PTR es:[esi]
  40c2df:	jo     0x40c34f
  40c2e1:	jmp    0x40c2c7
  40c2e3:	dec    eax
  40c2e4:	jmp    0xa3707e66
  40c2e9:	mov    eax,ds:0xdba6be60
  40c2ee:	shr    DWORD PTR [edi+0x85645a4],1
  40c2f4:	push   ebx
  40c2f5:	fisttp WORD PTR [eax-0x14a34401]
  40c2fb:	cmp    bl,ch
  40c2fd:	shl    DWORD PTR [edi],cl
  40c2ff:	jmp    0x248:0x9500805d
  40c306:	test   esp,0x487f26a
  40c30c:	mov    edx,0x1675c56e
  40c311:	iret   
  40c312:	mov    dh,0xab
  40c314:	imul   ebp,eax,0xffffffd5
  40c317:	xchg   ebp,eax
  40c318:	cli    
  40c319:	into   
  40c31a:	jmp    0x5c1:0xf649296a
  40c321:	fldenv [ecx+eax*4+0x21e35c7f]
  40c328:	inc    esp
  40c329:	in     eax,dx
  40c32a:	int3   
  40c32b:	xchg   esp,eax
  40c32c:	push   ebx
  40c32d:	pop    ecx
  40c32e:	jp     0x40c35a
  40c330:	lods   al,BYTE PTR ds:[esi]
  40c331:	push   edx
  40c332:	arpl   WORD PTR [ebx-0x14],dx
  40c335:	and    bl,cl
  40c337:	xchg   DWORD PTR [edx+0x32],edx
  40c33a:	call   0xd982:0xb2eceb98
  40c341:	xchg   edi,eax
  40c342:	aas    
  40c343:	add    bl,BYTE PTR [ebp+0x3a]
  40c346:	jle    0x40c3c2
  40c348:	in     al,0x8f
  40c34a:	add    BYTE PTR [eax+0x682915f],cl
  40c350:	inc    edi
  40c351:	rcr    BYTE PTR [ecx-0x7a0e7ba9],1
  40c357:	inc    ebx
  40c358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c359:	inc    ebx
  40c35a:	dec    edx
  40c35b:	pushf  
  40c35c:	jmp    0xa05c:0xff590cce
  40c363:	xor    BYTE PTR [edx-0x48eca97e],dl
  40c369:	retf   0x4b09
  40c36c:	or     edi,eax
  40c36e:	mov    WORD PTR [ebx-0x174e977c],es
  40c374:	mov    ?,WORD PTR [ebx-0x6]
  40c377:	out    dx,eax
  40c378:	outs   dx,BYTE PTR ds:[esi]
  40c379:	pop    ecx
  40c37a:	cwde   
  40c37b:	fsub   QWORD PTR [ebx+ebp*4]
  40c37e:	(bad)  
  40c37f:	in     eax,dx
  40c380:	pushf  
  40c381:	rol    ebp,1
  40c383:	mov    al,0x75
  40c385:	das    
  40c386:	daa    
  40c387:	icebp  
  40c388:	adc    ah,dl
  40c38a:	test   eax,0xb8496964
  40c38f:	and    eax,0xcc15e199
  40c394:	pop    esi
  40c395:	sub    edi,DWORD PTR [ebx-0x38]
  40c398:	in     al,dx
  40c399:	mov    cl,cl
  40c39b:	mov    eax,0x1c5bbf73
  40c3a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3a1:	cmp    ebx,ebx
  40c3a3:	mov    bh,dh
  40c3a5:	cs cmp dl,ah
  40c3a8:	fsub   DWORD PTR [ecx+0x0]
  40c3ab:	cmp    ebx,edi
  40c3ad:	jg     0x40c36a
  40c3af:	jne    0x40c41a
  40c3b1:	sub    al,0xa2
  40c3b3:	sbb    DWORD PTR [ecx-0x1d0f2914],0xff359d39
  40c3bd:	push   ebx
  40c3be:	(bad)  
  40c3bf:	cmp    edx,DWORD PTR [edx+esi*8-0x77]
  40c3c3:	hlt    
  40c3c4:	ins    BYTE PTR es:[edi],dx
  40c3c5:	mov    ds:0xe92a788d,eax
  40c3ca:	loope  0x40c441
  40c3cc:	push   eax
  40c3cd:	inc    esi
  40c3ce:	std    
  40c3cf:	and    DWORD PTR [ebp+0x38],edx
  40c3d2:	mov    bl,0x46
  40c3d4:	std    
  40c3d5:	or     eax,0xda3bb02e
  40c3da:	push   0xcfafd8ec
  40c3df:	cmc    
  40c3e0:	pop    ds
  40c3e1:	(bad)  
  40c3e2:	cvtps2pi mm6,QWORD PTR [eax+esi*1]
  40c3e6:	(bad)  
  40c3e7:	pop    edx
  40c3e8:	pop    esp
  40c3e9:	adc    eax,0x881a6c80
  40c3ee:	pop    ss
  40c3ef:	xor    bl,BYTE PTR [ebx+0x74]
  40c3f2:	out    dx,eax
  40c3f3:	cmp    DWORD PTR [esi-0x44],0x1f
  40c3f7:	or     DWORD PTR [edi-0x2c3a78f0],edi
  40c3fd:	xor    eax,0xe65b3886
  40c402:	dec    esi
  40c403:	outs   dx,DWORD PTR ds:[esi]
  40c404:	mov    ds:0xc163a43b,eax
  40c409:	fs gs push ds
  40c40c:	(bad)  
  40c40d:	js     0x40c47a
  40c40f:	sar    BYTE PTR [ebx+edi*4],1
  40c412:	jecxz  0x40c3a7
  40c414:	(bad)  
  40c415:	and    al,0x87
  40c417:	lds    edx,FWORD PTR [ebx+ebp*8+0x65fb2ad9]
  40c41e:	push   0x8042fc9a
  40c423:	test   DWORD PTR [esi],ebp
  40c425:	test   al,0x43
  40c427:	lock jg 0x40c434
  40c42a:	lods   eax,DWORD PTR ds:[esi]
  40c42b:	(bad)  
  40c42c:	pop    ds
  40c42d:	daa    
  40c42e:	aad    0x57
  40c430:	mov    bh,0x7d
  40c432:	sub    al,BYTE PTR [esi+ebx*2+0xa608d62]
  40c439:	inc    esp
  40c43a:	rol    BYTE PTR [ebp*1+0x8ba8763],0xde
  40c442:	data16 and dl,BYTE PTR [ebp+ecx*2+0x73d87ee2]
  40c44a:	push   ebp
  40c44b:	ds push eax
  40c44d:	mov    ebp,0x84ff679e
  40c452:	mov    esp,0x155533f8
  40c457:	mov    ds:0x5b5eaf45,eax
  40c45c:	sub    bl,BYTE PTR [esi]
  40c45e:	shl    DWORD PTR [ecx],cl
  40c460:	mov    ch,0x47
  40c462:	dec    esp
  40c463:	ja     0x40c4a6
  40c465:	pop    ecx
  40c466:	mov    ah,0x9
  40c468:	push   esp
  40c469:	add    DWORD PTR [eax],ebx
  40c46b:	push   ebx
  40c46c:	div    DWORD PTR [edx]
  40c46e:	dec    esi
  40c46f:	sub    cl,BYTE PTR [eax-0x5c]
  40c472:	pop    ds
  40c473:	sbb    al,BYTE PTR ds:0x98ab2f6b
  40c479:	test   eax,0xe8b060dc
  40c47e:	fsubr  QWORD PTR [edx-0x5c75dead]
  40c484:	push   esi
  40c485:	jbe    0x40c49e
  40c487:	fldcw  WORD PTR [ebx-0x12a4b07a]
  40c48d:	mov    dl,0x59
  40c48f:	ins    BYTE PTR es:[edi],dx
  40c490:	inc    edi
  40c491:	inc    esi
  40c492:	sbb    BYTE PTR [ecx],0xa9
  40c495:	sub    al,0x68
  40c497:	adc    dh,BYTE PTR [ebp-0x64]
  40c49a:	add    eax,0x5273f49c
  40c49f:	sub    eax,0x316e019b
  40c4a4:	jecxz  0x40c519
  40c4a6:	push   ss
  40c4a7:	xchg   ecx,eax
  40c4a8:	(bad)  
  40c4aa:	(bad)  
  40c4ab:	push   0x2a
  40c4ad:	mov    esp,0xc4e0b486
  40c4b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4b3:	push   0x7a
  40c4b5:	mov    cl,0x4f
  40c4b7:	cmp    al,0x18
  40c4b9:	test   BYTE PTR [ecx+edx*8-0x11],bl
  40c4bd:	nop
  40c4be:	jp     0x40c44c
  40c4c0:	pop    edi
  40c4c1:	dec    ebp
  40c4c2:	repz sub DWORD PTR [eax-0x68673752],0xffffffe9
  40c4ca:	neg    edx
  40c4cc:	xchg   esi,eax
  40c4cd:	xchg   dh,dl
  40c4cf:	sbb    DWORD PTR [edi+0x44d484a2],edx
  40c4d5:	push   ss
  40c4d6:	cdq    
  40c4d7:	rcr    BYTE PTR [ebp+0x3213c0c7],0x2b
  40c4de:	xchg   esi,eax
  40c4df:	and    ebx,DWORD PTR [ebx]
  40c4e1:	inc    ebx
  40c4e2:	fdivp  st(3),st
  40c4e4:	push   ebp
  40c4e5:	adc    al,0xfd
  40c4e7:	icebp  
  40c4e8:	jne    0x40c4ac
  40c4ea:	ret    
  40c4eb:	add    BYTE PTR [ecx],0xf9
  40c4ee:	(bad)  
  40c4ef:	clc    
  40c4f0:	push   cs
  40c4f1:	mov    eax,0x50e9dfca
  40c4f6:	cmc    
  40c4f7:	sbb    ch,BYTE PTR [esi+0x29]
  40c4fa:	sahf   
  40c4fb:	jno    0x40c564
  40c4fd:	int3   
  40c4fe:	imul   DWORD PTR ds:0x4bb6280f
  40c504:	bound  ecx,QWORD PTR ds:0x621264d5
  40c50a:	dec    edi
  40c50b:	imul   esp,edx,0xffffffd0
  40c50e:	aam    0x9a
  40c510:	inc    eax
  40c511:	call   0xb379c1a4
  40c516:	das    
  40c517:	jge    0x40c4d5
  40c519:	shl    ch,cl
  40c51b:	and    BYTE PTR [esi],dl
  40c51d:	leave  
  40c51e:	mov    BYTE PTR [edi+0x27],al
  40c521:	loop   0x40c545
  40c523:	(bad)  
  40c524:	cmp    bp,WORD PTR [ecx-0x34d4f1a8]
  40c52b:	mov    ebx,0x49e685a0
  40c530:	fwait
  40c531:	mov    WORD PTR [ecx],?
  40c533:	inc    edi
  40c534:	stos   BYTE PTR es:[edi],al
  40c535:	in     al,dx
  40c536:	and    BYTE PTR [ebx+0x7c],cl
  40c539:	sbb    edi,esp
  40c53b:	inc    esp
  40c53c:	mov    ah,BYTE PTR ds:0xb4112638
  40c542:	add    BYTE PTR [edx-0x4656f4a],ah
  40c548:	repnz mov edi,?
  40c54b:	mov    ebp,0x27b02ab3
  40c550:	fcom   DWORD PTR [ecx]
  40c552:	adc    edi,0x2793ccd8
  40c558:	mov    eax,0xdc908653
  40c55d:	(bad)  
  40c55e:	(bad)  
  40c560:	stos   BYTE PTR es:[edi],al
  40c561:	and    al,0x82
  40c563:	test   al,0xf3
  40c565:	loopne 0x40c580
  40c567:	push   ebx
  40c568:	in     al,dx
  40c569:	sahf   
  40c56a:	ret    0x3f
  40c56d:	rcr    DWORD PTR [ebp-0x19],0x0
  40c571:	inc    ebx
  40c572:	call   0xca55b746
  40c577:	push   ss
  40c578:	jmp    0xf9c7:0xe5196403
  40c57f:	pusha  
  40c580:	out    0x9f,eax
  40c582:	and    eax,0xc0aeef7b
  40c587:	iret   
  40c588:	call   0x44b8:0x6cd998b0
  40c58f:	mov    al,ds:0xe2e90e44
  40c594:	je     0x40c543
  40c596:	fs and al,0x2f
  40c599:	pop    eax
  40c59a:	aam    0xc7
  40c59c:	sbb    BYTE PTR [ebx-0x2a],ah
  40c59f:	into   
  40c5a0:	lock icebp 
  40c5a2:	cmp    BYTE PTR [ecx-0x7d],0x34
  40c5a6:	adc    dh,cl
  40c5a8:	pop    ds
  40c5a9:	sub    DWORD PTR [eax-0x62c9edfb],edi
  40c5af:	sbb    eax,0xb65316f2
  40c5b4:	out    0x6d,al
  40c5b6:	mov    ds:0xedcff019,al
  40c5bb:	sub    eax,esi
  40c5bd:	pop    esi
  40c5be:	jb     0x40c583
  40c5c0:	arpl   bx,di
  40c5c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5c3:	jnp    0x40c5c7
  40c5c5:	adc    al,0xfd
  40c5c7:	pop    esp
  40c5c8:	push   cs
  40c5c9:	xchg   edi,eax
  40c5ca:	jnp    0x40c5f8
  40c5cc:	pop    ds
  40c5cd:	leave  
  40c5ce:	fst    DWORD PTR [ebp+ebp*1-0x3c]
  40c5d2:	pop    ebp
  40c5d3:	jle    0x40c571
  40c5d5:	sub    al,0xd
  40c5d7:	pop    edx
  40c5d8:	popa   
  40c5d9:	pop    ecx
  40c5da:	jae    0x40c5d4
  40c5dc:	pop    edi
  40c5dd:	(bad)  
  40c5de:	in     al,0x6
  40c5e0:	aaa    
  40c5e1:	(bad)  
  40c5e2:	fwait
  40c5e3:	jl     0x40c611
  40c5e5:	sbb    al,0xa4
  40c5e7:	push   ecx
  40c5e8:	lahf   
  40c5e9:	daa    
  40c5ea:	hlt    
  40c5eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5ec:	in     eax,0x77
  40c5ee:	int3   
  40c5ef:	stos   BYTE PTR es:[edi],al
  40c5f0:	bound  eax,QWORD PTR [ecx-0x40e44bf4]
  40c5f6:	cdq    
  40c5f7:	pop    esp
  40c5f8:	mov    esp,edx
  40c5fa:	mov    esi,0x17133915
  40c5ff:	(bad)  
  40c600:	push   edx
  40c601:	sbb    BYTE PTR [eax],ch
  40c603:	mov    ds,WORD PTR [ebp+0x27835213]
  40c609:	dec    ebp
  40c60a:	jnp    0x40c623
  40c60c:	xchg   esi,eax
  40c60d:	pop    edx
  40c60e:	popa   
  40c60f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c610:	push   esp
  40c611:	stc    
  40c612:	and    ecx,DWORD PTR [eax+0x5100d911]
  40c618:	fincstp 
  40c61a:	sub    esi,DWORD PTR [edi]
  40c61c:	popf   
  40c61d:	popa   
  40c61e:	adc    al,ch
  40c620:	sub    DWORD PTR [edx],0xc29cab49
  40c626:	mov    eax,0xe4a2f1e9
  40c62b:	xchg   ecx,eax
  40c62c:	push   ebp
  40c62d:	rep ins BYTE PTR es:[edi],dx
  40c62f:	mov    DWORD PTR [esi-0x7ca392fe],edi
  40c635:	sysexit 
  40c637:	(bad)  
  40c638:	mov    al,ds:0xe93cc2ec
  40c63d:	cmp    al,0xba
  40c63f:	aad    0xa4
  40c641:	test   eax,0x27b717b
  40c646:	in     eax,0xe5
  40c648:	xor    al,BYTE PTR [ecx+0x79319f23]
  40c64e:	jae    0x40c5d5
  40c650:	inc    eax
  40c651:	inc    edx
  40c652:	cmp    BYTE PTR [esi-0x3a1a9c6e],ch
  40c658:	or     dh,BYTE PTR [esi+ebp*8]
  40c65b:	shl    edx,0x5f
  40c65e:	in     al,0xac
  40c660:	inc    esp
  40c661:	sub    BYTE PTR [edi+0x26c256c],dl
  40c667:	retf   
  40c668:	cld    
  40c669:	repnz sahf 
  40c66b:	cmc    
  40c66c:	xor    DWORD PTR [ebp-0x8],esi
  40c66f:	repz or eax,0x2bcf0c15
  40c675:	push   edx
  40c676:	pusha  
  40c677:	(bad)  
  40c679:	xchg   DWORD PTR [ecx+ebx*8],ecx
  40c67c:	icebp  
  40c67d:	inc    edi
  40c67e:	int    0x90
  40c680:	pop    ebx
  40c681:	iret   
  40c682:	rol    esi,1
  40c684:	push   cs
  40c685:	lea    ecx,[edi+edx*2-0x38]
  40c689:	mov    eax,ds:0x132642e
  40c68e:	popf   
  40c68f:	fdivr  DWORD PTR [eax+ebp*1+0x6b]
  40c693:	dec    edi
  40c694:	push   ecx
  40c695:	mov    ch,0x5a
  40c697:	in     al,0x53
  40c699:	aaa    
  40c69a:	stos   DWORD PTR es:[edi],eax
  40c69b:	hlt    
  40c69c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c69d:	fs jp  0x40c6e0
  40c6a0:	clc    
  40c6a1:	pusha  
  40c6a2:	sub    ebp,edx
  40c6a4:	sbb    al,0x25
  40c6a6:	ror    ch,0xeb
  40c6a9:	add    DWORD PTR [ecx-0x6f6027cc],edi
  40c6af:	xor    al,0x28
  40c6b1:	dec    esp
  40c6b2:	sbb    eax,0x89242f1c
  40c6b7:	cmp    al,0x9
  40c6b9:	call   FWORD PTR [edi-0x21]
  40c6bc:	cmp    al,0x65
  40c6be:	dec    esp
  40c6bf:	xchg   ebx,eax
  40c6c0:	imul   edx,DWORD PTR [edx-0x4f4e9495],0x5
  40c6c7:	les    ebx,FWORD PTR [edx+0x29]
  40c6ca:	or     cl,ch
  40c6cc:	mov    dh,BYTE PTR [ecx+esi*4]
  40c6cf:	fdivr  QWORD PTR [ecx]
  40c6d1:	test   BYTE PTR [ebx],bl
  40c6d3:	fisttp QWORD PTR [esp+edi*2-0x73]
  40c6d7:	in     eax,dx
  40c6d8:	xchg   ebx,eax
  40c6d9:	add    esi,DWORD PTR [edi]
  40c6db:	loope  0x40c663
  40c6dd:	inc    edx
  40c6de:	or     eax,0xd3a36a9b
  40c6e3:	fimul  WORD PTR [ebx]
  40c6e5:	jp     0x40c681
  40c6e7:	cmp    DWORD PTR [edi-0x7f16f572],ebp
  40c6ed:	div    cl
  40c6ef:	aaa    
  40c6f0:	jno    0x40c755
  40c6f2:	jecxz  0x40c75d
  40c6f4:	jecxz  0x40c71c
  40c6f6:	es jle 0x40c683
  40c6f9:	mov    WORD PTR [esi-0x7c],gs
  40c6fc:	sbb    BYTE PTR [eax+0x34409b16],ch
  40c702:	push   ds
  40c703:	pop    esp
  40c704:	out    dx,eax
  40c705:	cmp    eax,0x5b119f97
  40c70a:	cs pop edi
  40c70c:	or     eax,0xbd227661
  40c711:	jo     0x40c74a
  40c713:	std    
  40c714:	jl     0x40c74e
  40c716:	fsub   DWORD PTR [edi-0x38]
  40c719:	fild   WORD PTR [ecx-0x8fcd576]
  40c71f:	in     al,dx
  40c720:	add    BYTE PTR [ecx-0x28],0x72
  40c724:	in     al,0xb2
  40c726:	fnsave ds:0xb00173b5
  40c72c:	pop    esi
  40c72d:	pop    ebp
  40c72e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c72f:	xchg   esi,eax
  40c730:	sbb    al,0xd7
  40c732:	outs   dx,DWORD PTR ds:[esi]
  40c733:	out    0x1f,al
  40c735:	test   al,0x5a
  40c737:	fmul   QWORD PTR ds:0x55a67763
  40c73d:	stc    
  40c73e:	mov    eax,0x8d59447
  40c743:	dec    edx
  40c744:	lods   eax,DWORD PTR ds:[esi]
  40c745:	mov    fs,WORD PTR [edx-0x6b89ab37]
  40c74b:	jne    0x40c755
  40c74d:	push   ds
  40c74e:	aam    0xf0
  40c750:	fdivr  st(2),st
  40c752:	push   ecx
  40c753:	mov    ebp,0xff48d566
  40c758:	int3   
  40c759:	rcl    BYTE PTR [ebx],1
  40c75b:	add    al,0x98
  40c75d:	push   DWORD PTR [edx+0x2dc9fc2b]
  40c763:	cmc    
  40c764:	push   edx
  40c765:	pop    ecx
  40c766:	xor    dl,BYTE PTR [eax+0x1a91b96]
  40c76c:	outs   dx,DWORD PTR ds:[esi]
  40c76d:	popf   
  40c76e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c76f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c770:	rcl    BYTE PTR [edx+0x79],0xaf
  40c774:	mov    ds:0x8e63c373,al
  40c779:	sbb    eax,0x36f8f1de
  40c77e:	sbb    al,0xfb
  40c780:	in     eax,0x4a
  40c782:	push   es
  40c783:	aam    0x98
  40c785:	xor    eax,0x7fb53671
  40c78a:	rcr    BYTE PTR [eax-0x41],1
  40c78d:	test   al,0xff
  40c78f:	arpl   WORD PTR ds:0xde8d9c58,si
  40c795:	mov    bh,0xe7
  40c797:	in     al,dx
  40c798:	les    ecx,FWORD PTR [eax]
  40c79a:	ret    
  40c79b:	fisttp WORD PTR [ecx-0x7b98de00]
  40c7a1:	aas    
  40c7a2:	call   DWORD PTR [ebp-0x4e]
  40c7a5:	data16 or BYTE PTR [edi+0x67e3b6a8],bh
  40c7ac:	adc    DWORD PTR [ebp-0x1c9bd200],edi
  40c7b2:	push   ebx
  40c7b3:	stos   BYTE PTR es:[edi],al
  40c7b4:	das    
  40c7b5:	frstor [ebp+ebx*8-0x5]
  40c7b9:	sub    eax,0x7a84ec3
  40c7be:	in     eax,dx
  40c7bf:	gs and dh,al
  40c7c2:	mov    ebp,ebp
  40c7c4:	jne    0x40c769
  40c7c6:	test   eax,0x297ecc19
  40c7cb:	(bad)  
  40c7cc:	pop    ecx
  40c7cd:	and    BYTE PTR [ebx],bh
  40c7cf:	xchg   edx,eax
  40c7d0:	push   esi
  40c7d1:	mov    ebp,0xffd9964e
  40c7d6:	fidiv  DWORD PTR [eax+0x38]
  40c7d9:	shl    DWORD PTR [ebx],1
  40c7db:	cmp    al,0x54
  40c7dd:	inc    ecx
  40c7de:	enter  0xfea8,0x6b
  40c7e2:	ret    
  40c7e3:	adc    eax,0x1fa35446
  40c7e8:	mov    bl,0x51
  40c7ea:	ins    BYTE PTR es:[edi],dx
  40c7eb:	cs ret 0x9ef
  40c7ef:	out    dx,al
  40c7f0:	dec    edi
  40c7f1:	dec    ebx
  40c7f2:	xchg   edx,eax
  40c7f3:	(bad)  
  40c7f4:	in     al,dx
  40c7f5:	and    DWORD PTR [eax-0x7a91339],esp
  40c7fb:	push   ebx
  40c7fc:	jge    0x40c795
  40c7fe:	mov    cl,0xaf
  40c800:	popf   
  40c801:	adc    ecx,DWORD PTR [ebx]
  40c803:	cmc    
  40c804:	retf   0x4e6e
  40c807:	xchg   ebp,ebx
  40c809:	or     al,0x2c
  40c80b:	(bad)  
  40c80c:	es in  eax,dx
  40c80e:	mov    edx,0x862c929
  40c813:	clc    
  40c814:	dec    eax
  40c815:	xchg   edx,eax
  40c816:	xchg   esp,eax
  40c817:	sahf   
  40c818:	xchg   BYTE PTR [ebp-0x51082be6],ah
  40c81e:	repnz sbb eax,0x97c57190
  40c824:	fnsave [esi]
  40c826:	ror    DWORD PTR [edi-0x142df41f],1
  40c82c:	cmp    eax,0x74f83aae
  40c831:	dec    edx
  40c832:	push   cs
  40c833:	xor    ebx,edi
  40c835:	(bad)
  40c839:	cmp    al,0x4d
  40c83b:	je     0x40c87f
  40c83d:	push   cs
  40c83e:	fisub  WORD PTR [edi+0x4d1621e8]
  40c844:	jae    0x40c8b4
  40c846:	fiadd  WORD PTR [ebx+0x40]
  40c849:	hlt    
  40c84a:	add    bh,BYTE PTR [ebp-0x51b51cfe]
  40c850:	xor    DWORD PTR [esi],ebx
  40c852:	aas    
  40c853:	ins    BYTE PTR es:[edi],dx
  40c854:	fld    QWORD PTR [ebx+eax*4+0x21]
  40c858:	sub    al,0x1e
  40c85a:	mov    bl,bh
  40c85c:	mov    ds:0xbedd9491,al
  40c861:	cmp    eax,0xb2fc1bc9
  40c866:	adc    al,0x5a
  40c868:	bound  eax,QWORD PTR [edi-0xd7faec8]
  40c86e:	fild   QWORD PTR [esi+0x5fe47263]
  40c874:	xchg   edx,eax
  40c875:	arpl   WORD PTR [ecx+0x3a],di
  40c878:	xor    ah,BYTE PTR [ebx-0x5c]
  40c87b:	adc    eax,0x72af7b16
  40c880:	mov    al,ds:0xa1599668
  40c885:	add    esi,edi
  40c887:	mov    edx,0xc57234c6
  40c88c:	dec    esp
  40c88d:	enter  0xff5b,0x1
  40c891:	jl     0x40c848
  40c893:	cmp    BYTE PTR [esi+eiz*1+0x6b32c7b6],ah
  40c89a:	fstp   DWORD PTR [ebx+0x68]
  40c89d:	enter  0xc0b3,0xae
  40c8a1:	push   eax
  40c8a2:	bound  edi,QWORD PTR [ebx]
  40c8a4:	cmp    esi,DWORD PTR [esp+edi*2+0x66b79379]
  40c8ab:	jg     0x40c89d
  40c8ad:	mov    eax,ds:0xf6d02da9
  40c8b2:	xlat   BYTE PTR ds:[ebx]
  40c8b3:	aad    0x5d
  40c8b5:	jb     0x40c916
  40c8b7:	sub    BYTE PTR [edi-0x35da3d75],bl
  40c8bd:	pop    ss
  40c8be:	mov    al,ds:0xe82abafb
  40c8c3:	pushf  
  40c8c4:	nop
  40c8c5:	xor    ah,BYTE PTR [esi]
  40c8c7:	fidiv  WORD PTR [edi]
  40c8c9:	mov    cl,0x35
  40c8cb:	repz pop ds
  40c8cd:	add    edi,DWORD PTR [edx+esi*1-0x1e043df0]
  40c8d4:	imul   DWORD PTR [ecx-0xe07ea2d]
  40c8da:	pop    esp
  40c8db:	or     bh,BYTE PTR [edi+0x2b6a010]
  40c8e1:	sbb    esp,DWORD PTR [ebp+0xb]
  40c8e4:	mov    BYTE PTR [ebx-0x5a],al
  40c8e7:	out    0x38,al
  40c8e9:	cmp    al,bh
  40c8eb:	mov    cl,bh
  40c8ed:	fst    DWORD PTR [edi]
  40c8ef:	icebp  
  40c8f0:	cli    
  40c8f1:	shr    DWORD PTR [esi+0xe95a731],cl
  40c8f7:	push   ebp
  40c8f8:	inc    edi
  40c8f9:	push   ecx
  40c8fa:	inc    edi
  40c8fb:	icebp  
  40c8fc:	mov    bl,0xb8
  40c8fe:	add    eax,0x19e96487
  40c903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c904:	adc    eax,0xc5946070
  40c909:	dec    ecx
  40c90a:	xor    DWORD PTR [eax+0x48],edi
  40c90d:	or     BYTE PTR [eax-0xb],ah
  40c910:	stc    
  40c911:	xchg   DWORD PTR [ecx],ecx
  40c913:	rcr    DWORD PTR [ebx-0x1f154178],cl
  40c919:	mov    DWORD PTR [esi+eax*2-0x1b],eax
  40c91d:	aad    0xeb
  40c91f:	out    0xec,eax
  40c921:	jbe    0x40c8bb
  40c923:	cdq    
  40c924:	sub    eax,0x1544a1f9
  40c929:	jl     0x40c999
  40c92b:	(bad)  [esp+edi*1+0x4b]
  40c92f:	sub    esi,DWORD PTR [edi+ebp*1]
  40c932:	mov    ch,0xda
  40c934:	xchg   BYTE PTR [ebx+edx*8+0x63b24dbf],al
  40c93b:	pop    esi
  40c93c:	mov    ebx,0x99eabad6
  40c941:	push   ebx
  40c942:	dec    eax
  40c943:	data16 jge 0x40c90a
  40c946:	mov    ds:0xc33aace1,al
  40c94c:	adc    cl,BYTE PTR [eax+0x4b]
  40c94f:	jbe    0x40c9bf
  40c951:	adc    al,0xa1
  40c953:	jbe    0x40c8ed
  40c955:	sbb    DWORD PTR [ebx],esp
  40c957:	not    dh
  40c959:	push   es
  40c95a:	mov    dl,0xfa
  40c95c:	imul   ebx,DWORD PTR [ebx+0x6],0xffffffbd
  40c960:	mov    bl,0xc7
  40c962:	jne    0x40c987
  40c964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c965:	adc    cl,dh
  40c967:	and    al,0xdc
  40c969:	and    al,0x1c
  40c96b:	adc    BYTE PTR [ebp+esi*4-0x55],bh
  40c96f:	or     bl,BYTE PTR [ebx-0x6f]
  40c972:	out    dx,al
  40c973:	pop    eax
  40c974:	mov    bl,0x6f
  40c976:	out    0x8,al
  40c978:	lock pop ds
  40c97a:	popa   
  40c97b:	pop    ebx
  40c97c:	in     eax,dx
  40c97d:	rcl    WORD PTR [edx],cl
  40c980:	neg    ah
  40c982:	cmc    
  40c983:	dec    ebp
  40c984:	push   cs
  40c985:	sub    eax,0xd2cf2271
  40c98a:	xchg   esi,eax
  40c98b:	inc    ecx
  40c98c:	shl    BYTE PTR [ebx-0x6197b93a],0xe9
  40c993:	fwait
  40c994:	rcr    DWORD PTR [ebx],1
  40c996:	cmp    DWORD PTR [ecx+0x4fb4e5cd],ecx
  40c99c:	mov    edx,0xf2754bf4
  40c9a1:	pusha  
  40c9a2:	or     eax,0xf83aeeef
  40c9a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9a8:	pop    ss
  40c9a9:	push   cs
  40c9aa:	ss xchg ebp,eax
  40c9ac:	add    edi,DWORD PTR [eax]
  40c9ae:	push   ecx
  40c9af:	sub    edx,DWORD PTR [esi]
  40c9b1:	arpl   WORD PTR [eax-0x39925997],cx
  40c9b7:	fst    QWORD PTR [edx+0x4a]
  40c9ba:	adc    dl,bl
  40c9bc:	or     al,BYTE PTR [ebx+0x3ffa284e]
  40c9c2:	std    
  40c9c3:	ss dec ecx
  40c9c5:	sub    ebx,DWORD PTR [ecx]
  40c9c7:	push   ss
  40c9c8:	pop    esp
  40c9c9:	sub    edx,ebp
  40c9cb:	imul   edx,DWORD PTR [esi],0x34
  40c9ce:	xchg   ebp,eax
  40c9cf:	xchg   ebp,eax
  40c9d0:	push   edx
  40c9d1:	push   esi
  40c9d2:	mov    edx,0xbb028067
  40c9d7:	out    dx,al
  40c9d8:	mov    esi,0x21353a33
  40c9dd:	mov    ah,0x2f
  40c9df:	loop   0x40c9c9
  40c9e1:	or     al,BYTE PTR [edx+0x7ddf69e3]
  40c9e7:	rcr    BYTE PTR [ebp+0x0],1
  40c9ea:	cmp    BYTE PTR [esi-0x8ef9284],0x6b
  40c9f1:	dec    edx
  40c9f2:	jg     0x40c9af
  40c9f4:	adc    ebp,DWORD PTR [ebp+0x3e0e310d]
  40c9fa:	dec    esp
  40c9fb:	push   esi
  40c9fc:	ret    
  40c9fd:	popf   
  40c9fe:	ret    0x9c
  40ca01:	fbld   TBYTE PTR [ebx]
  40ca03:	ror    DWORD PTR [esi],0x5b
  40ca06:	pop    esi
  40ca07:	xor    BYTE PTR [eax],bl
  40ca09:	icebp  
  40ca0a:	add    edx,DWORD PTR [ebx+edi*4+0x4c7bacf6]
  40ca11:	jl     0x40c9df
  40ca13:	mov    ebp,0xaecb2c9c
  40ca18:	sbb    ecx,DWORD PTR [ecx-0x7a]
  40ca1b:	jp     0x40ca65
  40ca1d:	cmp    dl,cl
  40ca1f:	push   ebx
  40ca20:	in     eax,0x9a
  40ca22:	jae    0x40c9e9
  40ca24:	pop    ebp
  40ca25:	(bad)  
  40ca26:	imul   ecx,DWORD PTR [eax-0x12],0xffffffc9
  40ca2a:	mov    ss,WORD PTR [edx+ebp*4]
  40ca2d:	mov    esp,0xcd90af68
  40ca32:	jge    0x40ca32
  40ca34:	xor    DWORD PTR [esi+eiz*4],0x7b
  40ca38:	dec    esi
  40ca39:	out    0xe3,eax
  40ca3b:	mov    eax,esi
  40ca3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca3e:	jmp    0x40ca70
  40ca40:	xchg   ecx,eax
  40ca41:	or     eax,0xbead4fa9
  40ca46:	sbb    dl,BYTE PTR es:[edi]
  40ca49:	xor    DWORD PTR [ecx+0x2c],esp
  40ca4c:	(bad)  [edx]
  40ca4e:	dec    eax
  40ca4f:	mov    esp,ds
  40ca51:	jge    0x40ca15
  40ca53:	es jae 0x40ca89
  40ca56:	sbb    eax,ebx
  40ca58:	sub    BYTE PTR [edx],cl
  40ca5a:	inc    esp
  40ca5b:	add    eax,0xc6bd5106
  40ca60:	cmp    dl,al
  40ca62:	or     dl,BYTE PTR [ebp-0x48]
  40ca65:	jno    0x40cae1
  40ca67:	and    al,0x24
  40ca69:	mov    bh,0x4
  40ca6b:	mov    edi,0x22e75c66
  40ca70:	xorps  xmm2,XMMWORD PTR [ebp+0x1e2213ee]
  40ca77:	sbb    dh,BYTE PTR [edx-0x4b]
  40ca7a:	and    al,0xcb
  40ca7c:	das    
  40ca7d:	xor    esi,DWORD PTR [ebp-0x36d1e04c]
  40ca83:	(bad)  
  40ca84:	jnp    0x40cae4
  40ca86:	jmp    FWORD PTR es:[eax+esi*4+0x6e]
  40ca8b:	cmp    ah,al
  40ca8d:	push   ds
  40ca8e:	sahf   
  40ca8f:	mov    dl,0xb5
  40ca91:	adc    BYTE PTR [esi],0x8
  40ca94:	out    0x2c,al
  40ca96:	mov    dl,0x86
  40ca98:	push   edx
  40ca99:	cmp    DWORD PTR [edi+0x3436de3],ebx
  40ca9f:	pop    esp
  40caa0:	jne    0x40cafd
  40caa2:	jmp    0xce83:0xab229274
  40caa9:	push   esi
  40caaa:	add    bh,BYTE PTR [esi+0x5fb98e7]
  40cab0:	mov    al,0x6e
  40cab2:	sbb    DWORD PTR [edx],ebx
  40cab4:	dec    ebx
  40cab5:	leave  
  40cab6:	push   ebp
  40cab7:	mov    ebp,0xb423c38f
  40cabc:	cmc    
  40cabd:	inc    esi
  40cabe:	mov    ecx,0xa2b9d3d4
  40cac3:	jne    0x40cafa
  40cac5:	or     al,BYTE PTR [edi+0x3658aa00]
  40cacb:	inc    edx
  40cacc:	les    esi,FWORD PTR ds:0xfaa7ec98
  40cad2:	adc    BYTE PTR [esp+ebp*2-0x36],0xee
  40cad7:	xchg   edi,eax
  40cad8:	adc    BYTE PTR [ecx+esi*1-0x64122750],dl
  40cadf:	(bad)  
  40cae0:	and    eax,0x407f1f37
  40cae5:	gs (bad) 
  40cae7:	in     eax,dx
  40cae8:	mov    cl,0xf8
  40caea:	xor    al,0xc7
  40caec:	pop    es
  40caed:	in     al,0xa2
  40caef:	lea    edi,[esi-0x799e558a]
  40caf5:	push   ss
  40caf6:	fiadd  DWORD PTR [edi+0x62b472c9]
  40cafc:	xlat   BYTE PTR ds:[ebx]
  40cafd:	inc    esi
  40cafe:	jbe    0x40cac2
  40cb00:	scas   eax,DWORD PTR es:[edi]
  40cb01:	push   ebx
  40cb02:	into   
  40cb03:	mov    ds:0x71f4cd75,al
  40cb08:	leave  
  40cb09:	lahf   
  40cb0a:	push   0x2df72eae
  40cb0f:	mov    DWORD PTR [ebp-0xa7dd407],esp
  40cb15:	and    eax,0x640e2184
  40cb1a:	repz jl 0x40cb1b
  40cb1d:	rol    al,1
  40cb1f:	xchg   edx,eax
  40cb20:	jmp    0xb93846f5
  40cb25:	fld    QWORD PTR [edx-0x5f50b451]
  40cb2b:	outs   dx,DWORD PTR ds:[esi]
  40cb2c:	(bad)  
  40cb2d:	fwait
  40cb2e:	xor    al,0xa8
  40cb30:	xor    al,0x3c
  40cb32:	push   ebx
  40cb33:	leave  
  40cb34:	and    eax,esi
  40cb36:	loope  0x40cb14
  40cb38:	or     BYTE PTR [ebx+0x25b281d6],0xb2
  40cb3f:	sbb    bh,dh
  40cb41:	fs pop esi
  40cb43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb44:	das    
  40cb45:	sbb    dl,BYTE PTR [ebx]
  40cb47:	cs ins BYTE PTR es:[edi],dx
  40cb49:	addr16 jmp 0xdd62:0x9183711e
  40cb51:	scas   al,BYTE PTR es:[edi]
  40cb52:	push   esp
  40cb53:	ja     0x40cbce
  40cb55:	fstp   QWORD PTR [edi]
  40cb57:	pop    ss
  40cb58:	lds    esi,FWORD PTR [ebp-0x5b74f9ca]
  40cb5e:	loop   0x40cbbc
  40cb60:	mov    esi,0xf645fc05
  40cb65:	(bad)
  40cb69:	inc    eax
  40cb6a:	dec    edi
  40cb6b:	fucom  st(3)
  40cb6d:	mov    bh,0xab
  40cb6f:	cmp    DWORD PTR [eax-0x32c85355],esi
  40cb75:	data16 xchg dl,al
  40cb78:	add    BYTE PTR ds:0xd7d10d3b,0xcb
  40cb7f:	ret    
  40cb80:	push   edx
  40cb81:	cli    
  40cb82:	div    edx
  40cb84:	mul    DWORD PTR [ebp+0x547511cd]
  40cb8a:	mov    dl,0xb2
  40cb8c:	out    0xa8,eax
  40cb8e:	(bad)  
  40cb90:	rol    BYTE PTR [edx],0xca
  40cb93:	ins    DWORD PTR es:[edi],dx
  40cb94:	icebp  
  40cb95:	dec    ebp
  40cb96:	pop    edx
  40cb97:	adc    ecx,DWORD PTR [esi-0x5c]
  40cb9a:	jo     0x40cb7b
  40cb9c:	retf   
  40cb9d:	jmp    0x94f1:0xada5306b
  40cba4:	xchg   ecx,eax
  40cba5:	sub    edx,DWORD PTR [ecx+0x2dc5cd01]
  40cbab:	inc    DWORD PTR [ecx-0x43f99b4d]
  40cbb1:	retf   
  40cbb2:	test   WORD PTR [eax+0x50f83d4e],cx
  40cbb9:	xlat   BYTE PTR ds:[ebx]
  40cbba:	mov    ds:0xb9da0ea9,eax
  40cbbf:	inc    eax
  40cbc0:	ss stos BYTE PTR es:[edi],al
  40cbc2:	mov    eax,ds:0xf9ca1b38
  40cbc7:	test   al,0x4e
  40cbc9:	aam    0xdc
  40cbcb:	loop   0x40cc3e
  40cbcd:	ja     0x40cbd6
  40cbcf:	cld    
  40cbd0:	dec    esp
  40cbd1:	leave  
  40cbd2:	call   0xb3f9:0xa257d5c
  40cbd9:	push   esi
  40cbda:	jo     0x40cc46
  40cbdc:	or     BYTE PTR [edx+0x23],0x21
  40cbe0:	ins    BYTE PTR es:[edi],dx
  40cbe1:	pop    eax
  40cbe2:	and    eax,0x591d9f42
  40cbe7:	lea    esi,[edi]
  40cbe9:	jns    0x40cc46
  40cbeb:	add    DWORD PTR [edx+0x2f4cbdcd],ebp
  40cbf1:	pop    edx
  40cbf2:	sub    dh,al
  40cbf4:	add    DWORD PTR [eax],edi
  40cbf6:	jg     0x40cba4
  40cbf8:	cmc    
  40cbf9:	pop    ss
  40cbfa:	xchg   ebx,eax
  40cbfb:	mov    es,WORD PTR [ecx-0x624fc205]
  40cc01:	mov    bh,0x9b
  40cc03:	cmp    bl,cl
  40cc05:	loop   0x40cc85
  40cc07:	rol    ebx,1
  40cc09:	xchg   DWORD PTR es:[ecx+0x24],edx
  40cc0d:	sbb    al,0x14
  40cc0f:	in     eax,0xdc
  40cc11:	fistp  DWORD PTR [esi+0x28]
  40cc14:	aaa    
  40cc15:	mov    edx,ebx
  40cc17:	xor    BYTE PTR [ecx+ebp*8+0x17a782af],dl
  40cc1e:	hlt    
  40cc1f:	aaa    
  40cc20:	sbb    BYTE PTR [edi+0xd1814d5],0xc
  40cc27:	push   ebp
  40cc28:	out    dx,al
  40cc29:	mov    bh,0x9e
  40cc2b:	or     DWORD PTR [edi-0x17b66fbf],eax
  40cc31:	add    al,0x74
  40cc33:	dec    edi
  40cc34:	xchg   BYTE PTR [ebp-0xbe4df99],dl
  40cc3a:	jp     0x40cc5a
  40cc3c:	stos   DWORD PTR es:[edi],eax
  40cc3d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40cc3f:	lahf   
  40cc40:	clc    
  40cc41:	add    al,0x40
  40cc43:	inc    ebp
  40cc44:	or     ecx,ecx
  40cc46:	push   eax
  40cc47:	push   ds
  40cc48:	sahf   
  40cc49:	mov    dl,0xfa
  40cc4b:	ret    0xd67b
  40cc4e:	dec    edx
  40cc4f:	es xchg edi,eax
  40cc51:	mov    al,ds:0xc1b15c53
  40cc56:	sbb    ch,BYTE PTR [edi-0x34]
  40cc59:	sub    dh,BYTE PTR [esp+ebp*4+0x7aeee0dc]
  40cc60:	arpl   WORD PTR [ebp+0x7839292b],bp
  40cc66:	repz leave 
  40cc68:	mov    DWORD PTR [esi],esp
  40cc6a:	xlat   BYTE PTR ds:[ebx]
  40cc6b:	adc    al,0xca
  40cc6d:	sub    al,0x9e
  40cc6f:	(bad)  
  40cc71:	xor    eax,DWORD PTR [edi+0x62]
  40cc74:	cmp    bl,0x4
  40cc77:	pop    esi
  40cc78:	call   0x146c:0x45f21298
  40cc7f:	xchg   ebp,eax
  40cc80:	nop
  40cc81:	jne    0x40cc0c
  40cc83:	(bad)  
  40cc84:	lds    ebp,FWORD PTR [edx+ebx*4-0x5e]
  40cc88:	push   edx
  40cc89:	mov    bh,dh
  40cc8b:	lock cmp DWORD PTR [esi],edi
  40cc8e:	or     al,0x82
  40cc90:	dec    edx
  40cc91:	int3   
  40cc92:	lds    eax,FWORD PTR [eax-0x7372d32e]
  40cc98:	push   0x385fdb6b
  40cc9d:	or     al,0x52
  40cc9f:	xor    DWORD PTR [esi+0x57],edx
  40cca2:	or     eax,DWORD PTR [edx-0x2]
  40cca5:	(bad)  
  40cca6:	mov    ds:0xcdf54380,eax
  40ccab:	(bad)  
  40ccac:	int3   
  40ccad:	and    edx,ecx
  40ccaf:	(bad)  
  40ccb0:	loopne 0x40ccd3
  40ccb2:	mov    cl,0xc9
  40ccb4:	dec    esi
  40ccb5:	xchg   edi,eax
  40ccb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccb7:	retf   
  40ccb8:	sbb    BYTE PTR [edi],ah
  40ccba:	and    eax,ebp
  40ccbc:	push   ebp
  40ccbd:	pop    esi
  40ccbe:	shl    bh,1
  40ccc0:	nop
  40ccc1:	(bad)  
  40ccc2:	gs clc 
  40ccc4:	out    dx,eax
  40ccc5:	adc    ebx,DWORD PTR [edi]
  40ccc7:	or     eax,0xab12bae8
  40cccc:	and    al,0x9b
  40ccce:	xchg   ebp,eax
  40cccf:	ja     0x40cc5e
  40ccd1:	clc    
  40ccd2:	xor    eax,0xedb3795a
  40ccd7:	dec    ebx
  40ccd8:	mov    edi,0x24d94461
  40ccdd:	inc    edi
  40ccde:	mov    eax,DWORD PTR [ecx-0x32fafa35]
  40cce4:	loop   0x40cd09
  40cce6:	(bad)  
  40cce7:	aad    0xcd
  40cce9:	inc    edx
  40ccea:	scas   al,BYTE PTR es:[edi]
  40cceb:	ins    DWORD PTR es:[edi],dx
  40ccec:	sbb    bl,bl
  40ccee:	xchg   esi,eax
  40ccef:	retf   0x7e12
  40ccf2:	enter  0xe701,0x64
  40ccf6:	hlt    
  40ccf7:	repz retf 0xa083
  40ccfb:	fisub  WORD PTR [edx+0x49]
  40ccfe:	jae    0x40cc85
  40cd00:	add    edx,0xffffffc5
  40cd03:	xor    al,0xf7
  40cd05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd06:	pop    edx
  40cd07:	repz mov ch,0x39
  40cd0a:	leave  
  40cd0b:	data16 sbb al,0xf9
  40cd0e:	pop    esi
  40cd0f:	mov    bl,0x58
  40cd11:	inc    esp
  40cd12:	mov    dh,0x75
  40cd14:	nop
  40cd15:	out    0xb0,al
  40cd17:	push   esp
  40cd18:	scas   al,BYTE PTR es:[edi]
  40cd19:	jp     0x40cd11
  40cd1b:	xchg   ecx,eax
  40cd1c:	push   ss
  40cd1d:	add    BYTE PTR ds:0xc99c500,ch
  40cd23:	and    esp,DWORD PTR [ebp-0x5113e629]
  40cd29:	rol    BYTE PTR [ecx],1
  40cd2b:	arpl   WORD PTR [eax],di
  40cd2d:	adc    BYTE PTR [ebp+0x4],ah
  40cd30:	mov    ebp,0x2e8d324
  40cd35:	stc    
  40cd36:	inc    edx
  40cd37:	xchg   ebp,eax
  40cd38:	shl    DWORD PTR [esi+esi*8+0x25980d16],cl
  40cd3f:	jbe    0x40cce3
  40cd41:	dec    esi
  40cd42:	dec    eax
  40cd43:	sub    edi,ecx
  40cd45:	retf   0x37ae
  40cd48:	loope  0x40cd99
  40cd4a:	(bad)  
  40cd4b:	popf   
  40cd4c:	or     ebp,DWORD PTR [ecx-0x34]
  40cd4f:	dec    esp
  40cd50:	pop    edi
  40cd51:	push   0x88e24543
  40cd56:	aaa    
  40cd57:	xor    ecx,DWORD PTR [ebp-0x313912cb]
  40cd5d:	aaa    
  40cd5e:	cwde   
  40cd5f:	push   ebp
  40cd60:	xchg   esi,eax
  40cd61:	mov    edi,0xcf00320c
  40cd66:	fwait
  40cd67:	das    
  40cd68:	dec    esi
  40cd69:	xchg   ebp,eax
  40cd6a:	out    dx,al
  40cd6b:	mov    WORD PTR [edx-0x41],fs
  40cd6e:	hlt    
  40cd6f:	sbb    DWORD PTR [esi+eiz*1+0x2be29faa],eax
  40cd76:	jnp    0x40cda5
  40cd78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd79:	ret    
  40cd7a:	sub    edx,DWORD PTR [ecx-0x5aa50d78]
  40cd80:	cmp    al,BYTE PTR [esi-0x24]
  40cd83:	jge    0x40cd33
  40cd85:	mov    ebp,0x89c5a607
  40cd8a:	mov    ds:0x6897174a,eax
  40cd8f:	push   0xfffffff8
  40cd91:	jecxz  0x40ce0c
  40cd93:	fst    QWORD PTR [eax+0x2a]
  40cd96:	int    0x4f
  40cd98:	push   esp
  40cd99:	push   eax
  40cd9a:	jecxz  0x40cd60
  40cd9c:	pop    edi
  40cd9d:	jo     0x40cd3c
  40cd9f:	adc    al,0xa6
  40cda1:	sub    al,0xad
  40cda3:	arpl   WORD PTR [ebx-0x5d93ce20],sp
  40cda9:	sub    dh,BYTE PTR [ecx+0x43]
  40cdac:	mov    ah,0xb5
  40cdae:	xor    al,0x62
  40cdb0:	or     BYTE PTR [ebx+0x55fe6c94],cl
  40cdb6:	les    ecx,FWORD PTR [ecx]
  40cdb8:	xor    al,0x95
  40cdba:	lods   al,BYTE PTR ds:[esi]
  40cdbb:	bound  edi,QWORD PTR ds:0xa1ec5717
  40cdc1:	(bad)  
  40cdc2:	shl    DWORD PTR [edx],cl
  40cdc4:	jp     0x40cd49
  40cdc6:	in     eax,dx
  40cdc7:	ins    BYTE PTR es:[edi],dx
  40cdc8:	pop    es
  40cdc9:	and    ebp,DWORD PTR [esp+edx*4+0x54]
  40cdcd:	aas    
  40cdce:	sub    eax,0x1fa92153
  40cdd3:	retf   
  40cdd4:	xchg   edx,eax
  40cdd5:	lahf   
  40cdd6:	or     eax,0x5390e8e0
  40cddb:	stc    
  40cddc:	xchg   BYTE PTR [edi-0x7a],bl
  40cddf:	inc    edi
  40cde0:	mov    bl,0x53
  40cde2:	punpcklwd mm1,DWORD PTR [edi-0x7]
  40cde6:	mov    cl,0xd5
  40cde8:	aaa    
  40cde9:	je     0x40ce55
  40cdeb:	dec    esp
  40cdec:	dec    esp
  40cded:	dec    esp
  40cdee:	loop   0x40cd7b
  40cdf0:	(bad)  
  40cdf1:	clc    
  40cdf2:	das    
  40cdf3:	dec    edi
  40cdf4:	int    0x9
  40cdf6:	sbb    bl,ah
  40cdf8:	mov    ds:0x2a8d951,al
  40cdfd:	lahf   
  40cdfe:	shl    bl,1
  40ce00:	ja     0x40ce17
  40ce02:	stc    
  40ce03:	mov    ebp,0x64cc73dd
  40ce08:	(bad)  
  40ce09:	sbb    al,0x2f
  40ce0b:	ins    BYTE PTR es:[edi],dx
  40ce0c:	xchg   ecx,eax
  40ce0d:	sbb    BYTE PTR [eax+0x633d47fb],ch
  40ce13:	test   al,0xf1
  40ce15:	xor    eax,0xafb9b57c
  40ce1a:	stos   DWORD PTR es:[edi],eax
  40ce1b:	sub    esp,eax
  40ce1d:	push   eax
  40ce1e:	mov    cl,0x8e
  40ce20:	ins    BYTE PTR es:[edi],dx
  40ce21:	(bad)  
  40ce22:	shl    BYTE PTR [ebx],1
  40ce24:	cmp    BYTE PTR [edi-0x4fbdaab0],al
  40ce2a:	and    BYTE PTR [esi],dl
  40ce2c:	push   0x6a
  40ce2e:	mov    edx,0x25cb10da
  40ce33:	push   edx
  40ce34:	pop    edx
  40ce35:	xor    DWORD PTR [edi-0x7aba8bcf],ecx
  40ce3b:	(bad)  
  40ce3c:	lock dec ebp
  40ce3e:	pop    esi
  40ce3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce40:	mov    cl,0xd7
  40ce42:	(bad)  
  40ce43:	(bad)  
  40ce44:	dec    DWORD PTR [edx]
  40ce46:	xlat   BYTE PTR ds:[ebx]
  40ce47:	mov    ds:0x5561da48,eax
  40ce4c:	adc    BYTE PTR [edx],ch
  40ce4e:	add    al,0xcc
  40ce50:	mov    WORD PTR [eax-0x11],es
  40ce53:	jne    0x40ce56
  40ce55:	cwde   
  40ce56:	mov    edi,0x3ab821f0
  40ce5b:	jge    0x40ce5a
  40ce5d:	clc    
  40ce5e:	cmp    dh,dh
  40ce60:	into   
  40ce61:	out    0xa6,al
  40ce63:	cmp    DWORD PTR [ebp+0x130c5f53],ebx
  40ce69:	aaa    
  40ce6a:	popf   
  40ce6b:	or     DWORD PTR [edx],ecx
  40ce6d:	call   0xba56:0x20f4c244
  40ce74:	inc    esi
  40ce75:	add    DWORD PTR [ebp+ebx*2-0x69b71dd8],ebx
  40ce7c:	mov    dl,0x78
  40ce7e:	adc    BYTE PTR [ecx],cl
  40ce80:	ds inc edx
  40ce82:	retf   
  40ce83:	or     bh,al
  40ce85:	lods   al,BYTE PTR ds:[esi]
  40ce86:	sub    BYTE PTR [eax-0x6ca6cdaa],cl
  40ce8c:	push   0x2c
  40ce8e:	js     0x40ce55
  40ce90:	popa   
  40ce91:	imul   ebx,DWORD PTR [edx-0x6b8cb64d],0x40
  40ce98:	add    al,BYTE PTR [edi]
  40ce9a:	les    ebp,FWORD PTR [esi+0xf4966e9]
  40cea0:	mov    eax,ds:0x6f91efee
  40cea5:	in     al,dx
  40cea6:	push   ebp
  40cea7:	push   ebp
  40cea8:	fsub   QWORD PTR ds:0x4bcf2339
  40ceae:	sti    
  40ceaf:	push   cs
  40ceb0:	mov    ecx,0x6b388709
  40ceb5:	sti    
  40ceb6:	ins    BYTE PTR es:[edi],dx
  40ceb7:	jnp    0x40cf28
  40ceb9:	jge    0x40ceeb
  40cebb:	sbb    eax,DWORD PTR [edi+0x3c]
  40cebe:	dec    eax
  40cebf:	inc    ebx
  40cec0:	push   0x77c69ece
  40cec5:	pop    ebx
  40cec6:	ret    0x95a
  40cec9:	xchg   edx,eax
  40ceca:	cdq    
  40cecb:	adc    ecx,esp
  40cecd:	push   ebp
  40cece:	gs sti 
  40ced0:	adc    eax,0xe8beead9
  40ced5:	scas   eax,DWORD PTR es:[edi]
  40ced6:	mov    ebp,0xb41565a0
  40cedb:	dec    ecx
  40cedc:	pop    ss
  40cedd:	test   eax,0x639ce6e2
  40cee2:	aas    
  40cee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cee4:	sub    DWORD PTR [edi+0x79c9b8a1],0x2d24a8d2
  40ceee:	mov    ss,esp
  40cef0:	xchg   BYTE PTR [edi],ch
  40cef2:	or     esi,eax
  40cef4:	(bad)  
  40cef5:	cmp    BYTE PTR [ecx],bh
  40cef7:	xor    ebp,DWORD PTR [eax]
  40cef9:	pop    edx
  40cefa:	test   eax,0xea6af668
  40ceff:	es ror edi,1
  40cf02:	push   0x7cf56db6
  40cf07:	mov    edi,0xe12c57e6
  40cf0c:	repz jmp 0x69d8:0xd55bc0c1
  40cf14:	inc    esi
  40cf15:	xor    DWORD PTR [esi],edx
  40cf17:	loop   0x40cf36
  40cf19:	daa    
  40cf1a:	xchg   edi,eax
  40cf1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf1c:	and    bh,ah
  40cf1e:	dec    ebp
  40cf1f:	int3   
  40cf20:	je     0x40cec6
  40cf22:	cmp    BYTE PTR [edi],ah
  40cf24:	jns    0x40cf82
  40cf26:	dec    edi
  40cf27:	cmp    esp,DWORD PTR [ebp-0x16]
  40cf2a:	pop    esp
  40cf2b:	fdiv   QWORD PTR ds:0xa7b90837
  40cf31:	pusha  
  40cf32:	(bad)  [edx+esi*2]
  40cf35:	sbb    eax,0x8b5018ef
  40cf3a:	fiadd  DWORD PTR [eax-0x16353bf0]
  40cf40:	inc    ecx
  40cf41:	fbld   TBYTE PTR [ecx+0xc]
  40cf44:	or     DWORD PTR [eax+0x43db26b4],edx
  40cf4a:	test   al,0x18
  40cf4c:	xchg   ebx,eax
  40cf4d:	jle    0x40cf4d
  40cf4f:	out    0xa0,eax
  40cf51:	fisub  DWORD PTR [ecx-0x3a838ca9]
  40cf57:	bound  edx,QWORD PTR [edi]
  40cf59:	xor    eax,0x61259bd9
  40cf5e:	test   eax,0x888def09
  40cf63:	push   ecx
  40cf64:	pop    es
  40cf65:	fimul  WORD PTR [esi]
  40cf67:	cs xchg ecx,eax
  40cf69:	xchg   edx,eax
  40cf6a:	mov    eax,ds:0x2702012e
  40cf6f:	jb     0x40cf19
  40cf71:	cmp    bl,BYTE PTR [ebx-0x79f0a78c]
  40cf77:	add    eax,eax
  40cf79:	aas    
  40cf7a:	mov    BYTE PTR [eax],bl
  40cf7c:	mov    ch,0xaf
  40cf7e:	sbb    al,0xff
  40cf80:	es ja  0x40cf28
  40cf83:	pop    ecx
  40cf84:	fucomp st(6)
  40cf86:	jo     0x40cfba
  40cf88:	mov    edi,0xfcf76559
  40cf8d:	cmp    eax,0xfe08e9eb
  40cf92:	ret    
  40cf93:	mov    edi,0xfc2c957a
  40cf98:	add    eax,0x7afa7278
  40cf9d:	out    dx,al
  40cf9e:	xchg   DWORD PTR [ebp-0x10d5e611],edx
  40cfa4:	loop   0x40cfb5
  40cfa6:	test   DWORD PTR ds:0xead58694,edi
  40cfac:	dec    edx
  40cfad:	lahf   
  40cfae:	gs mov ch,0x94
  40cfb1:	outs   dx,DWORD PTR ds:[esi]
  40cfb2:	ins    DWORD PTR es:[edi],dx
  40cfb3:	inc    eax
  40cfb4:	pop    esp
  40cfb5:	outs   dx,BYTE PTR ds:[esi]
  40cfb6:	mov    edi,0x70fe8a5d
  40cfbb:	shr    DWORD PTR [ecx],cl
  40cfbd:	ins    BYTE PTR es:[edi],dx
  40cfbe:	mov    edx,0x3f710957
  40cfc3:	mov    ecx,0x4be0695d
  40cfc8:	xchg   esi,eax
  40cfc9:	mov    ch,0x9c
  40cfcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfcc:	lds    ebp,FWORD PTR [ecx+ebp*8-0x7be592ae]
  40cfd3:	mov    ecx,0x35ea809e
  40cfd8:	mov    esp,0x7dd4539e
  40cfdd:	add    ch,BYTE PTR [ecx+ecx*2-0xaf9ae0e]
  40cfe4:	int3   
  40cfe5:	lahf   
  40cfe6:	stos   BYTE PTR es:[edi],al
  40cfe7:	cmp    BYTE PTR [edx],bl
  40cfe9:	pop    ebx
  40cfea:	jecxz  0x40cfba
  40cfec:	pushf  
  40cfed:	enter  0x7322,0x70
  40cff1:	dec    edx
  40cff2:	and    esp,ebp
  40cff4:	repnz mov ss,WORD PTR ss:[edx]
  40cff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cff9:	sub    BYTE PTR ds:0x60af28f1,ch
  40cfff:	mov    edx,esi
  40d001:	mov    al,gs:0x24b13535
  40d007:	push   edi
  40d008:	jp     0x40d032
  40d00a:	imul   ebp,DWORD PTR [ebx-0x1f],0x4ba33f6f
  40d011:	pop    ebx
  40d012:	jmp    FWORD PTR [eax+eiz*2]
  40d015:	pop    es
  40d016:	scas   eax,DWORD PTR es:[edi]
  40d017:	cmp    BYTE PTR [ecx+edx*8],ah
  40d01a:	lods   al,BYTE PTR ds:[esi]
  40d01b:	iret   
  40d01c:	std    
  40d01d:	mov    ds:0x38c739b3,al
  40d022:	adc    DWORD PTR [eax-0x7d064c19],esp
  40d028:	adc    al,0x97
  40d02a:	sar    BYTE PTR [edx+esi*2+0x2f],1
  40d02e:	add    al,0x5a
  40d030:	and    dh,BYTE PTR [eax-0x4a]
  40d033:	pushf  
  40d034:	inc    esp
  40d035:	inc    DWORD PTR [esi]
  40d037:	(bad)  
  40d038:	out    0xbe,al
  40d03a:	sub    eax,DWORD PTR [ecx+eiz*8-0x58]
  40d03e:	out    dx,eax
  40d03f:	xor    al,0x3a
  40d041:	or     dh,BYTE PTR [ecx]
  40d043:	enter  0xdf82,0x95
  40d047:	inc    ecx
  40d048:	test   eax,0xc6a02938
  40d04d:	mov    dl,0x9c
  40d04f:	xor    DWORD PTR [ebp-0x5aff4992],edx
  40d055:	jnp    0x40d06b
  40d057:	push   eax
  40d058:	outs   dx,DWORD PTR ds:[esi]
  40d059:	repnz sbb DWORD PTR [edi+0x79273f47],ebp
  40d060:	mov    DWORD PTR [ecx+0x23],ebx
  40d063:	adc    al,0x79
  40d065:	or     ebx,edi
  40d067:	arpl   WORD PTR gs:[ebx-0x52],bx
  40d06b:	mov    ecx,0xa26a7828
  40d070:	jae    0x40d00d
  40d072:	pop    es
  40d073:	pushf  
  40d074:	add    eax,0x3f547ba3
  40d079:	gs (bad) 
  40d07b:	aaa    
  40d07c:	(bad)
  40d07f:	push   0xffffff83
  40d081:	fist   WORD PTR [esi]
  40d083:	inc    edx
  40d084:	add    BYTE PTR [esi-0x27],0x32
  40d088:	mov    bh,0xb8
  40d08a:	ret    
  40d08b:	sub    edi,DWORD PTR [ecx+0x4baf55ae]
  40d091:	loopne 0x40d09c
  40d093:	and    cl,BYTE PTR [bp+si]
  40d096:	mov    edx,0xdfbfb7a1
  40d09b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d09c:	jmp    0xebb60d84
  40d0a1:	pop    ebx
  40d0a2:	loop   0x40d049
  40d0a4:	mov    DWORD PTR [ebp+0x25],edx
  40d0a7:	mov    bl,0x33
  40d0a9:	xchg   edi,eax
  40d0aa:	loopne 0x40d07a
  40d0ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0ad:	int    0x9
  40d0af:	jg     0x40d112
  40d0b1:	xor    DWORD PTR [eax+0x7765abe7],ecx
  40d0b7:	xor    DWORD PTR [edx],esp
  40d0b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0ba:	and    eax,0xd2b8dabf
  40d0bf:	xchg   ebp,eax
  40d0c0:	lds    eax,FWORD PTR [ebx]
  40d0c2:	das    
  40d0c3:	jne    0x40d086
  40d0c5:	mov    ebx,0x481b0f47
  40d0ca:	mov    ecx,0xd66e0100
  40d0cf:	pop    esi
  40d0d0:	and    ecx,DWORD PTR [ebp-0x4aaac6ec]
  40d0d6:	xor    DWORD PTR [ebp-0x7860d2cd],esi
  40d0dc:	push   ebp
  40d0dd:	sti    
  40d0de:	xor    al,0x23
  40d0e0:	xor    DWORD PTR [ecx-0x54],esi
  40d0e3:	rcr    BYTE PTR [ecx],0x31
  40d0e6:	lods   al,BYTE PTR ds:[esi]
  40d0e7:	fs das 
  40d0e9:	mov    eax,ds:0xa3a8ce49
  40d0ee:	xchg   ecx,eax
  40d0ef:	call   0xd9d1:0xc5e5c362
  40d0f6:	xchg   BYTE PTR [ebx+0x53b867b8],ch
  40d0fc:	xlat   BYTE PTR ds:[ebx]
  40d0fd:	pop    esp
  40d0fe:	add    al,0x2b
  40d100:	shr    dh,1
  40d102:	push   ebx
  40d103:	cs cmc 
  40d105:	daa    
  40d106:	adc    al,0xd7
  40d108:	fld    TBYTE PTR [esp+eax*2]
  40d10b:	mov    BYTE PTR [esi],0x78
  40d10e:	mov    esi,0x5a69539f
  40d113:	pop    ebx
  40d114:	sub    al,0x84
  40d116:	mov    edi,0x5e8e0786
  40d11b:	adc    BYTE PTR [edi],ch
  40d11d:	cmp    dh,dh
  40d11f:	mov    al,0xa5
  40d121:	repnz (bad) 
  40d123:	cmp    DWORD PTR [ecx],edi
  40d125:	pop    eax
  40d126:	mov    dl,0x5
  40d128:	popa   
  40d129:	lea    esi,ds:0xd56a4545
  40d12f:	mov    ecx,0x1e259f67
  40d134:	popf   
  40d135:	mov    DWORD PTR [edx+0x31c0c8a9],0x32778b6d
  40d13f:	in     eax,0x8b
  40d141:	jno    0x40d149
  40d143:	and    BYTE PTR [edi+ebx*2+0x3e],dl
  40d147:	shl    BYTE PTR [edx],1
  40d149:	dec    ebp
  40d14a:	and    al,0xed
  40d14c:	rcr    BYTE PTR [ebp-0x28],cl
  40d14f:	(bad)  
  40d151:	pop    ds
  40d152:	hlt    
  40d153:	(bad)  
  40d155:	jg     0x40d190
  40d157:	push   esi
  40d158:	jmp    0x55aa:0x3e9ca9ad
  40d15f:	test   al,0x22
  40d161:	ds push edi
  40d163:	pop    ss
  40d164:	jne    0x40d15f
  40d166:	icebp  
  40d167:	lods   eax,DWORD PTR ds:[esi]
  40d168:	(bad)  
  40d169:	(bad)  
  40d16a:	dec    esi
  40d16b:	icebp  
  40d16c:	push   edx
  40d16d:	jns    0x40d127
  40d16f:	xchg   edx,ebx
  40d171:	inc    edx
  40d172:	ins    BYTE PTR es:[edi],dx
  40d173:	or     esp,DWORD PTR [eax+0x461368b1]
  40d179:	aaa    
  40d17a:	or     BYTE PTR [ecx+0x6b36b846],dh
  40d180:	xor    al,0x17
  40d182:	adc    DWORD PTR [edx+0x5c],eax
  40d185:	fwait
  40d186:	je     0x40d13b
  40d188:	scas   al,BYTE PTR es:[edi]
  40d189:	sbb    esp,DWORD PTR [edi+0x24]
  40d18c:	cs (bad) 
  40d18e:	xor    eax,0xc5721850
  40d193:	push   ss
  40d194:	lods   eax,DWORD PTR ds:[esi]
  40d195:	or     bl,BYTE PTR [edx-0x670c7403]
  40d19b:	xchg   al,bl
  40d19d:	fcom   DWORD PTR [esi-0x424383db]
  40d1a3:	cmp    esp,esp
  40d1a5:	or     bh,BYTE PTR [eax+0x73c0df93]
  40d1ab:	adc    edx,DWORD PTR [ecx+0x3494834]
  40d1b1:	(bad)  
  40d1b2:	jecxz  0x40d223
  40d1b4:	mov    ebp,0xdef48139
  40d1b9:	loop   0x40d1be
  40d1bb:	ret    
  40d1bc:	sub    eax,0x248f0d5b
  40d1c1:	add    eax,0x7425b2b8
  40d1c6:	fist   WORD PTR [eax+0x4e73a901]
  40d1cc:	or     eax,0x458e60ae
  40d1d1:	enter  0x4e6d,0x1a
  40d1d5:	imul   ebp,DWORD PTR [ebx],0x1d
  40d1d8:	sub    al,0x4e
  40d1da:	inc    ebx
  40d1db:	push   esp
  40d1dc:	pusha  
  40d1dd:	popa   
  40d1de:	sbb    al,BYTE PTR fs:[edi+ecx*8]
  40d1e2:	mov    ebp,0xf9605810
  40d1e7:	push   esp
  40d1e8:	loopne 0x40d228
  40d1ea:	inc    esi
  40d1eb:	mov    ebx,DWORD PTR [ecx]
  40d1ed:	ins    DWORD PTR es:[edi],dx
  40d1ee:	(bad)  
  40d1ef:	stos   BYTE PTR es:[edi],al
  40d1f0:	je     0x40d1a2
  40d1f2:	test   ebx,eax
  40d1f4:	or     al,0x35
  40d1f6:	adc    al,0xc3
  40d1f8:	cli    
  40d1f9:	add    BYTE PTR [edx+0x6ebd8a92],ah
  40d1ff:	xchg   edi,eax
  40d200:	jb     0x40d1c4
  40d202:	push   DWORD PTR [esi]
  40d204:	outs   dx,DWORD PTR ds:[esi]
  40d205:	jne    0x40d198
  40d207:	(bad)  
  40d208:	sub    bh,cl
  40d20a:	fild   QWORD PTR [eax]
  40d20c:	mov    BYTE PTR [edi-0x236f3d28],ch
  40d212:	(bad)  
  40d213:	sbb    bl,BYTE PTR [eax]
  40d215:	or     eax,DWORD PTR [edi-0x55]
  40d218:	xor    DWORD PTR [eax+0x123e194e],0xfa7050ef
  40d222:	sbb    eax,0xdfe00bbc
  40d227:	sbb    DWORD PTR [ebp+0x50],esi
  40d22a:	push   0x68
  40d22c:	imul   esp,DWORD PTR [ebx],0x7709c0e5
  40d232:	fisubr WORD PTR [eax-0x2]
  40d235:	xor    DWORD PTR [esi],edi
  40d237:	test   al,0xc0
  40d239:	push   0xac0ee570
  40d23e:	test   al,0x31
  40d240:	js     0x40d272
  40d242:	xor    BYTE PTR [esp+ecx*2-0x1e925dc0],ch
  40d249:	sub    dl,BYTE PTR [ebx-0x1db0e07c]
  40d24f:	mov    ds:0x49bb4913,al
  40d254:	mov    dh,0x48
  40d256:	and    eax,0xf5d8dcc8
  40d25b:	sbb    ebp,esp
  40d25d:	mul    BYTE PTR [eax]
  40d25f:	adc    DWORD PTR [ebp+0x1dd82aec],edx
  40d265:	(bad)  ds:0xa8c3de3c
  40d26b:	xchg   ebp,eax
  40d26c:	cdq    
  40d26d:	mov    ds:0xe7d07d15,eax
  40d272:	sbb    DWORD PTR [edx-0x60],0x62de49f8
  40d279:	push   ebx
  40d27a:	pop    esi
  40d27b:	mov    dl,0x40
  40d27d:	pop    ds
  40d27e:	mov    eax,ds:0x9c5e4520
  40d283:	(bad)  
  40d285:	dec    esp
  40d286:	and    al,0x68
  40d288:	mov    dl,0xb0
  40d28a:	cmp    BYTE PTR [ebx+edx*8+0x7bf7a19e],ah
  40d291:	xchg   ecx,eax
  40d292:	and    eax,0xcefb529
  40d297:	fnstcw WORD PTR [ecx+0x6b]
  40d29a:	push   esi
  40d29b:	out    dx,eax
  40d29c:	cmp    dh,0xa4
  40d29f:	mov    edx,0xf1cacb2f
  40d2a4:	jae    0x40d24c
  40d2a6:	mov    bh,0xd1
  40d2a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2a9:	inc    ebx
  40d2aa:	repz out 0x52,al
  40d2ad:	mov    edi,DWORD PTR [edx+0x75]
  40d2b0:	add    al,0xd5
  40d2b2:	push   edx
  40d2b3:	jge    0x40d2e6
  40d2b5:	fldpi  
  40d2b7:	dec    esi
  40d2b8:	iret   
  40d2b9:	(bad)  
  40d2ba:	push   0xffffffd4
  40d2bc:	test   al,0xdb
  40d2be:	outs   dx,DWORD PTR ds:[esi]
  40d2bf:	iret   
  40d2c0:	sar    DWORD PTR [eax+0x74ae1d7e],1
  40d2c6:	inc    ecx
  40d2c7:	loopne 0x40d336
  40d2c9:	lock ret 0x90a0
  40d2cd:	xlat   BYTE PTR ds:[ebx]
  40d2ce:	add    eax,0x481e0949
  40d2d3:	test   DWORD PTR [edi],ebp
  40d2d5:	lods   al,BYTE PTR cs:[esi]
  40d2d7:	js     0x40d2b0
  40d2d9:	lock pop ecx
  40d2db:	fs mov al,0x15
  40d2de:	pusha  
  40d2df:	pop    ebx
  40d2e0:	fidiv  DWORD PTR es:[ecx]
  40d2e3:	push   ebp
  40d2e4:	cwde   
  40d2e5:	sub    edx,ecx
  40d2e7:	and    ah,BYTE PTR [edx]
  40d2e9:	arpl   WORD PTR [ecx],bx
  40d2eb:	ror    DWORD PTR [edx+0x12],cl
  40d2ee:	loopne 0x40d2e5
  40d2f0:	cwde   
  40d2f1:	lods   eax,DWORD PTR ds:[esi]
  40d2f2:	dec    ebp
  40d2f3:	lahf   
  40d2f4:	ds ret 
  40d2f6:	lock daa 
  40d2f8:	ins    BYTE PTR es:[edi],dx
  40d2f9:	(bad)  
  40d2fa:	mov    WORD PTR [esi+0x63b90559],?
  40d300:	xchg   esi,eax
  40d301:	ins    BYTE PTR es:[edi],dx
  40d302:	mov    cl,0x2d
  40d304:	gs add al,cl
  40d307:	xor    BYTE PTR [eax-0x65],0xe5
  40d30b:	dec    esi
  40d30c:	(bad)  
  40d30d:	aad    0xce
  40d30f:	mov    dl,0x40
  40d311:	add    BYTE PTR [edx],bl
  40d313:	fcmovnbe st,st(1)
  40d315:	mov    bl,0x85
  40d317:	or     BYTE PTR [ebx],0x24
  40d31a:	jmp    0xe49ac87f
  40d31f:	xor    BYTE PTR [ebx+0x66],cl
  40d322:	and    ecx,ecx
  40d324:	cmp    eax,0x1f9b08f3
  40d329:	pop    edi
  40d32a:	std    
  40d32b:	out    0xd7,al
  40d32d:	jae    0x40d359
  40d32f:	das    
  40d330:	sub    edx,DWORD PTR [eax+0x2b]
  40d333:	inc    edi
  40d334:	je     0x40d35a
  40d336:	or     al,0xac
  40d338:	mov    ah,0x82
  40d33a:	jmp    0x40d35c
  40d33c:	cmp    bl,BYTE PTR [edi+ecx*1]
  40d33f:	test   eax,esp
  40d341:	mov    BYTE PTR [ecx],cl
  40d343:	aas    
  40d344:	push   esi
  40d345:	imul   edx,DWORD PTR [ebp-0x2],0x8fa53e4b
  40d34c:	(bad)  
  40d34d:	mov    eax,ds:0x40c0865f
  40d352:	mov    edx,0xe1e08003
  40d357:	mov    esi,0x60e09f10
  40d35c:	mov    ds:0x1c738b3f,eax
  40d361:	retf   
  40d362:	mov    cs,WORD PTR [eax-0x1951ed5]
  40d368:	cmp    al,0x9a
  40d36a:	shr    BYTE PTR ds:0x52e6e68a,cl
  40d370:	fs hlt 
  40d372:	cld    
  40d373:	pop    ds
  40d374:	push   ebp
  40d375:	je     0x40d340
  40d377:	xchg   bh,cl
  40d379:	js     0x40d350
  40d37b:	xchg   ebx,eax
  40d37c:	inc    eax
  40d37d:	sub    DWORD PTR [ebp+0x4d6b3512],0x99a0b52b
  40d387:	mov    esp,0xdf835c06
  40d38c:	xchg   ebx,eax
  40d38d:	sbb    eax,DWORD PTR [ecx]
  40d38f:	push   edi
  40d390:	retf   0x2fef
  40d393:	test   eax,0xbe66960f
  40d398:	sub    DWORD PTR [ebx-0x3b6d5c25],esp
  40d39e:	jp     0x40d3ca
  40d3a0:	mov    fs,esp
  40d3a2:	test   eax,0xb8c2df86
  40d3a7:	cli    
  40d3a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3a9:	mov    al,ds:0xb9c6cfd3
  40d3ae:	xor    cl,ah
  40d3b0:	mov    WORD PTR [ecx],cs
  40d3b2:	cmp    eax,0x927708b2
  40d3b7:	mov    al,BYTE PTR [edi-0x4d]
  40d3ba:	xor    al,0x8a
  40d3bc:	outs   dx,DWORD PTR ds:[esi]
  40d3bd:	fisubr WORD PTR [eax+edx*4-0x416e6aa3]
  40d3c4:	push   edx
  40d3c5:	pop    ebp
  40d3c6:	push   edx
  40d3c7:	out    dx,eax
  40d3c8:	push   edx
  40d3c9:	xlat   BYTE PTR ds:[ebx]
  40d3ca:	mov    gs,eax
  40d3cc:	dec    esi
  40d3cd:	and    bh,BYTE PTR [esp+ebp*4-0x59]
  40d3d1:	add    eax,ebp
  40d3d3:	sar    DWORD PTR [eax+0x4a],cl
  40d3d6:	sbb    esi,DWORD PTR [edi+0x51]
  40d3d9:	add    bl,BYTE PTR [ebx+0xfc1963a]
  40d3df:	pop    es
  40d3e0:	jg     0x40d39d
  40d3e2:	adc    al,0x5e
  40d3e4:	push   esi
  40d3e5:	mov    ch,al
  40d3e7:	jns    0x40d42d
  40d3e9:	test   BYTE PTR [eax],0x14
  40d3ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3ed:	call   0xbac3ab63
  40d3f2:	push   ebp
  40d3f3:	daa    
  40d3f4:	xor    edx,ebx
  40d3f6:	adc    eax,0x239b53d8
  40d3fb:	adc    eax,0xd4ec0946
  40d400:	xor    ebp,edx
  40d402:	push   DWORD PTR [ecx+0x77]
  40d405:	mov    dh,0xd6
  40d407:	add    cl,ah
  40d409:	sar    BYTE PTR [esi-0x15cddbf7],1
  40d40f:	xor    eax,0x16cffe47
  40d414:	and    DWORD PTR [ecx],ebx
  40d416:	(bad)  
  40d417:	xchg   ebp,eax
  40d418:	lds    esi,FWORD PTR [ebx-0x42]
  40d41b:	fst    DWORD PTR [edi+0x58ed45d1]
  40d421:	sbb    dl,cl
  40d423:	dec    ecx
  40d424:	lea    ecx,[ebp+0x2ca517e4]
  40d42a:	pop    ss
  40d42b:	scas   al,BYTE PTR es:[edi]
  40d42c:	lss    ecx,FWORD PTR [ecx-0x9]
  40d430:	xor    cl,BYTE PTR [ebx]
  40d432:	adc    al,0x8e
  40d434:	call   0x45ce2345
  40d439:	dec    edx
  40d43a:	or     ecx,esi
  40d43c:	adc    BYTE PTR [eax+0x1f8cbb2b],al
  40d442:	into   
  40d443:	jecxz  0x40d3f1
  40d445:	imul   ecx,DWORD PTR [esi-0x4db45e15],0xa96d3c1b
  40d44f:	imul   edi,DWORD PTR [ecx-0x5d],0xaefb71
  40d456:	gs in  eax,0xff
  40d459:	mov    eax,ds:0x18327042
  40d45e:	add    BYTE PTR [edx+eiz*4],0xee
  40d462:	adc    DWORD PTR [ebp-0x74],ecx
  40d465:	popa   
  40d466:	outs   dx,DWORD PTR ds:[esi]
  40d467:	and    eax,0xae53893e
  40d46c:	fdiv   st,st(2)
  40d46f:	xchg   ecx,eax
  40d470:	bound  ecx,QWORD PTR [eax+eiz*4+0x3191c4c7]
  40d477:	adc    eax,0x96a4593a
  40d47c:	and    ah,BYTE PTR [edi-0x5cdcc60d]
  40d482:	or     DWORD PTR [eax-0x26b0ac77],ebp
  40d488:	sahf   
  40d489:	push   0x12
  40d48b:	cdq    
  40d48c:	pusha  
  40d48d:	pushf  
  40d48e:	popf   
  40d48f:	sbb    BYTE PTR [esi],dh
  40d491:	or     DWORD PTR [ecx-0x1835f599],edx
  40d497:	cld    
  40d498:	scas   eax,DWORD PTR es:[edi]
  40d499:	pop    eax
  40d49a:	cmp    DWORD PTR [ebx],ebx
  40d49c:	add    DWORD PTR [ebx+0x4e],esp
  40d49f:	mov    ah,0x7
  40d4a1:	(bad)  
  40d4a2:	push   esi
  40d4a3:	xchg   edi,eax
  40d4a4:	ja     0x40d4b0
  40d4a6:	push   edi
  40d4a7:	pop    ecx
  40d4a8:	push   ebx
  40d4a9:	out    0xb0,eax
  40d4ab:	stc    
  40d4ac:	jecxz  0x40d473
  40d4ae:	cld    
  40d4af:	mov    eax,ds:0x3b4bc55b
  40d4b4:	pop    ss
  40d4b5:	(bad)  
  40d4b6:	aam    0x9
  40d4b8:	(bad)  
  40d4b9:	lods   al,BYTE PTR ds:[esi]
  40d4ba:	mov    tr7,ebx
  40d4bd:	and    ebp,DWORD PTR [ecx]
  40d4bf:	and    edx,esp
  40d4c1:	jne    0x40d485
  40d4c3:	jg     0x40d4dd
  40d4c5:	pop    ebx
  40d4c6:	sahf   
  40d4c7:	in     al,dx
  40d4c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4c9:	mov    esi,0x496ed437
  40d4ce:	or     DWORD PTR [edx-0x13472632],eax
  40d4d4:	inc    edi
  40d4d5:	mov    bh,0xe
  40d4d7:	loopne 0x40d4b5
  40d4d9:	mov    ch,0xa
  40d4db:	prefetch BYTE PTR [esi+0x1304b25d]
  40d4e2:	push   esp
  40d4e3:	pop    ecx
  40d4e4:	and    dl,BYTE PTR [edi]
  40d4e6:	popaw  
  40d4e8:	add    ch,dl
  40d4ea:	push   ebp
  40d4eb:	xor    eax,0xd6e1d970
  40d4f0:	mov    ds:0xba3dc1e7,eax
  40d4f5:	mov    edi,0xc13c95e4
  40d4fa:	and    BYTE PTR [edi+0x7205bd11],ah
  40d500:	mov    dl,0xbb
  40d502:	ja     0x40d488
  40d504:	(bad)  
  40d505:	mov    ch,0xa9
  40d507:	adc    al,0xf
  40d509:	add    dh,0x92
  40d50c:	pop    es
  40d50d:	aam    0xb0
  40d50f:	mov    BYTE PTR [ecx+0x4d8c369d],al
  40d515:	sahf   
  40d516:	sub    DWORD PTR [bp+si],ecx
  40d519:	pop    ecx
  40d51a:	push   edx
  40d51b:	repnz imul esp,DWORD PTR [edx],0xffffff8c
  40d51f:	dec    ebx
  40d520:	dec    ebx
  40d521:	ins    BYTE PTR es:[edi],dx
  40d522:	data16 xor bl,BYTE PTR [ecx-0x70e3cd36]
  40d529:	or     DWORD PTR [edx+eiz*1],esp
  40d52c:	jo     0x40d510
  40d52e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d52f:	loopne 0x40d59a
  40d531:	popa   
  40d532:	mov    eax,ebp
  40d534:	inc    ebx
  40d535:	push   ss
  40d536:	dec    esi
  40d537:	aam    0x2f
  40d539:	and    edi,edi
  40d53b:	xor    al,0xac
  40d53d:	add    dl,BYTE PTR [ebx-0x42]
  40d540:	dec    ebx
  40d541:	inc    ebx
  40d542:	ret    
  40d543:	out    0xc0,al
  40d545:	leave  
  40d546:	mov    ds:0x1d751c17,eax
  40d54b:	pop    esi
  40d54c:	hlt    
  40d54d:	inc    ecx
  40d54e:	aas    
  40d54f:	xlat   BYTE PTR ds:[ebx]
  40d550:	mov    esp,0xb46026ef
  40d555:	push   ecx
  40d556:	inc    ebx
  40d557:	push   cs
  40d558:	pop    es
  40d559:	aas    
  40d55a:	lea    ebp,[esi]
  40d55c:	fst    QWORD PTR [edi+ebx*4+0x13]
  40d560:	jecxz  0x40d59b
  40d562:	mov    ds:0xcc2fdff6,eax
  40d567:	push   edi
  40d568:	mov    DWORD PTR [edx+ecx*4-0x144bf345],esp
  40d56f:	and    DWORD PTR [ebx],esi
  40d571:	pop    edi
  40d572:	dec    edi
  40d573:	and    eax,ecx
  40d575:	int    0x5e
  40d577:	loopne 0x40d56a
  40d579:	mov    dl,0x9f
  40d57b:	or     ch,bl
  40d57d:	icebp  
  40d57e:	pop    ebp
  40d57f:	jge    0x40d5a0
  40d581:	shl    DWORD PTR [eax+0x5c],0x80
  40d585:	jns    0x40d5ff
  40d587:	jnp    0x40d50a
  40d589:	jns    0x40d567
  40d58b:	mov    ebx,0x5b212f80
  40d590:	sub    BYTE PTR [esi-0x305be31f],bh
  40d596:	xor    al,0xe5
  40d598:	call   0xf405e6f1
  40d59d:	cdq    
  40d59e:	push   ebp
  40d59f:	hlt    
  40d5a0:	ss inc esp
  40d5a2:	iret   
  40d5a3:	retf   
  40d5a4:	aam    0x52
  40d5a6:	es cs mov ecx,0xe1c9ec12
  40d5ad:	jmp    0x40d60f
  40d5af:	mov    edi,0xd349f928
  40d5b4:	shl    DWORD PTR [edx+0x60],cl
  40d5b7:	dec    eax
  40d5b8:	sub    al,0x12
  40d5ba:	loop   0x40d611
  40d5bc:	push   ebx
  40d5bd:	popw   es
  40d5bf:	jnp    0x40d5c9
  40d5c1:	outs   dx,DWORD PTR ds:[esi]
  40d5c2:	aas    
  40d5c3:	test   cl,dh
  40d5c5:	neg    DWORD PTR ss:[edx]
  40d5c8:	mov    eax,0x8e888076
  40d5cd:	(bad)  
  40d5ce:	cmc    
  40d5cf:	sbb    DWORD PTR ds:0xb42fc357,ebp
  40d5d5:	pop    eax
  40d5d6:	jb     0x40d584
  40d5d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5d9:	jmp    FWORD PTR [edi]
  40d5db:	inc    ebx
  40d5dc:	and    al,0x55
  40d5de:	cmp    BYTE PTR [esi-0x147de5e2],ch
  40d5e4:	mov    ebx,0x77bd5c03
  40d5e9:	outs   dx,DWORD PTR ds:[esi]
  40d5ea:	inc    edi
  40d5eb:	mov    cl,0xaf
  40d5ed:	mov    ds:0x3abec501,al
  40d5f2:	mov    edi,0x813c9ce3
  40d5f7:	loope  0x40d60c
  40d5f9:	es retf 0x7504
  40d5fd:	xchg   DWORD PTR [ecx+0x714d25b7],ecx
  40d603:	jg     0x40d640
  40d605:	imul   ecx,DWORD PTR [ebp-0x164c524b],0x91da6bed
  40d60f:	pop    ebp
  40d610:	pop    ecx
  40d611:	adc    ebx,esp
  40d613:	cdq    
  40d614:	or     BYTE PTR [edi+0x3fb3de2c],ch
  40d61a:	call   0x5c252f98
  40d61f:	cs jns 0x40d682
  40d622:	jnp    0x40d660
  40d624:	fstp   QWORD PTR [edx-0x12df6df6]
  40d62a:	add    ebp,DWORD PTR [eax+esi*2]
  40d62d:	push   eax
  40d62e:	(bad)  
  40d62f:	jp     0x40d660
  40d631:	test   eax,0xe55c3822
  40d636:	test   ebp,eax
  40d638:	xor    dl,BYTE PTR [ebp-0x66]
  40d63b:	fcomp  DWORD PTR [ecx]
  40d63d:	sti    
  40d63e:	clc    
  40d63f:	push   0xa5e7226e
  40d644:	addr16 popa 
  40d646:	mov    ds:0x5a2cb2a,eax
  40d64b:	add    BYTE PTR [ebx-0x6f],ch
  40d64e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d64f:	sub    cl,bl
  40d651:	clc    
  40d652:	adc    bh,BYTE PTR [edx]
  40d654:	pusha  
  40d655:	sti    
  40d656:	pushf  
  40d657:	(bad)  
  40d658:	add    esp,edx
  40d65a:	xor    esi,DWORD PTR [edx-0x28]
  40d65d:	outs   dx,DWORD PTR ds:[esi]
  40d65e:	add    BYTE PTR [eax+0x6287189],ch
  40d664:	(bad)  
  40d665:	sub    dl,BYTE PTR [ecx+0x1b]
  40d668:	dec    edi
  40d669:	clc    
  40d66a:	fs push cs
  40d66c:	sbb    ah,BYTE PTR [ecx]
  40d66e:	int    0x88
  40d670:	in     eax,dx
  40d671:	mov    bh,0xb9
  40d673:	pop    edi
  40d674:	sub    al,0x1d
  40d676:	repz stc 
  40d678:	pop    ebp
  40d679:	jns    0x40d614
  40d67b:	sbb    ah,BYTE PTR [ebx-0x6d]
  40d67e:	and    DWORD PTR [esp+edx*4-0x3246b559],esi
  40d685:	outs   dx,BYTE PTR ds:[esi]
  40d686:	and    eax,0x26bdeb1a
  40d68b:	pop    eax
  40d68c:	in     al,0xa2
  40d68e:	jmp    0x68b3:0x95dc52f7
  40d695:	rol    bl,cl
  40d697:	add    DWORD PTR [esi-0x70],ebp
  40d69a:	xor    dl,BYTE PTR [edi]
  40d69c:	xor    BYTE PTR [edi+0x11c9e808],bl
  40d6a2:	add    dh,BYTE PTR [esi-0x2]
  40d6a5:	pop    edi
  40d6a6:	cwde   
  40d6a7:	cli    
  40d6a8:	icebp  
  40d6a9:	sbb    bh,BYTE PTR [eax-0x3a]
  40d6ac:	test   BYTE PTR [esi+0x7115ff9a],bl
  40d6b2:	push   ds
  40d6b3:	and    DWORD PTR [esi],ecx
  40d6b5:	rcr    DWORD PTR [esi-0xf56dcd5],0x3f
  40d6bc:	fadd   QWORD PTR [edx+0x3]
  40d6bf:	sahf   
  40d6c0:	cwde   
  40d6c1:	int    0xca
  40d6c3:	ret    
  40d6c4:	and    DWORD PTR [ebp+0x19],edx
  40d6c7:	es pop ds
  40d6c9:	popa   
  40d6ca:	in     al,0xbf
  40d6cc:	int    0x9a
  40d6ce:	xchg   edx,eax
  40d6cf:	nop
  40d6d0:	mov    ch,BYTE PTR [ebx+0x42]
  40d6d3:	test   DWORD PTR [esi+ecx*2],ecx
  40d6d6:	fsub   DWORD PTR [esi]
  40d6d8:	jbe    0x40d663
  40d6da:	jno    0x40d748
  40d6dc:	ficom  DWORD PTR [ebp-0x5c]
  40d6df:	sub    al,0xcb
  40d6e1:	push   esp
  40d6e2:	mov    ecx,0xe13f1738
  40d6e7:	mov    BYTE PTR [edx+0x5f1abb64],ch
  40d6ed:	dec    ebx
  40d6ee:	pop    ds
  40d6ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6f0:	in     al,0x7b
  40d6f2:	aaa    
  40d6f3:	in     eax,0xb
  40d6f5:	and    eax,0x9f011296
  40d6fa:	neg    BYTE PTR [eax]
  40d6fc:	sbb    DWORD PTR [eax+ebx*8],edi
  40d6ff:	jae    0x40d68b
  40d701:	sub    al,0x1c
  40d703:	inc    ebx
  40d704:	popf   
  40d705:	sbb    cl,cl
  40d707:	mov    eax,ecx
  40d709:	mov    BYTE PTR [edx+0x18],al
  40d70c:	jo     0x40d6d8
  40d70e:	es dec ecx
  40d710:	xor    al,0x11
  40d712:	pop    eax
  40d713:	add    DWORD PTR [edx],ebp
  40d715:	test   DWORD PTR [eax+0x3b6624d4],edi
  40d71b:	add    dl,al
  40d71d:	mov    esp,DWORD PTR [esi]
  40d71f:	sar    BYTE PTR [ebp-0x1aba52d9],0x52
  40d726:	loopne 0x40d6d9
  40d728:	xor    BYTE PTR [ebp+0x94d0816],0xa3
  40d72f:	out    0x3f,eax
  40d731:	jl     0x40d6b7
  40d733:	xchg   edi,eax
  40d734:	sub    BYTE PTR [esi],ah
  40d736:	shl    DWORD PTR [ecx],cl
  40d738:	jg     0x40d79b
  40d73a:	in     eax,dx
  40d73b:	mov    BYTE PTR [eax+ecx*4],cl
  40d73e:	(bad)  
  40d73f:	out    0xfa,al
  40d741:	aaa    
  40d742:	mov    esi,0x54b17c1c
  40d747:	and    DWORD PTR [edx+0x3b],0xaf1de78f
  40d74e:	loope  0x40d723
  40d750:	sahf   
  40d751:	mov    esi,DWORD PTR [ebx+esi*8+0x24]
  40d755:	mov    ebp,0xbc8bc9cd
  40d75a:	iret   
  40d75b:	leave  
  40d75c:	loopne 0x40d6f9
  40d75e:	dec    eax
  40d75f:	pop    edx
  40d760:	pop    ds
  40d761:	(bad)  
  40d762:	frstor [edx+0x4d9bc71e]
  40d768:	jae    0x40d75c
  40d76a:	sub    BYTE PTR [ecx],dl
  40d76c:	jmp    0x40d7b0
  40d76e:	cmp    BYTE PTR [esi],0x92
  40d771:	inc    edx
  40d772:	repnz add DWORD PTR [ebx+0x9fa5e4a],esi
  40d779:	call   0xbdc6:0x7216425
  40d780:	(bad)  
  40d781:	sub    al,BYTE PTR [edi]
  40d783:	mov    esi,0xf19a1a84
  40d788:	repz xor esi,ecx
  40d78b:	es jbe 0x40d7e4
  40d78e:	fcomp  DWORD PTR [ebx]
  40d790:	data16 loopne 0x40d766
  40d793:	cs (bad) 
  40d795:	in     al,dx
  40d796:	iret   
  40d797:	stos   DWORD PTR es:[edi],eax
  40d798:	push   edx
  40d799:	adc    eax,DWORD PTR ds:0xd024f8a
  40d79f:	fcos   
  40d7a1:	push   ecx
  40d7a2:	aam    0x4e
  40d7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7a5:	(bad)
  40d7a9:	bound  ecx,QWORD PTR [edi+0x8ab89bb]
  40d7af:	fnstcw WORD PTR [ebx-0x69]
  40d7b2:	test   BYTE PTR [ebp+0x59],dl
  40d7b5:	shl    DWORD PTR [edx],cl
  40d7b7:	adc    esp,ebp
  40d7b9:	inc    edi
  40d7ba:	and    edi,eax
  40d7bc:	int    0x79
  40d7be:	ror    DWORD PTR ds:0xded76b10,0xd
  40d7c5:	jne    0x40d795
  40d7c7:	mov    esi,0x859e55dd
  40d7cc:	leave  
  40d7cd:	stc    
  40d7ce:	dec    edi
  40d7cf:	xor    ecx,edx
  40d7d1:	je     0x40d779
  40d7d3:	pop    edx
  40d7d4:	mov    cl,BYTE PTR [ecx+0x60a6a0f1]
  40d7da:	test   eax,0xe088d415
  40d7df:	out    dx,eax
  40d7e0:	call   0x86ae:0x9a25b141
  40d7e7:	jne    0x40d84e
  40d7e9:	dec    esp
  40d7ea:	push   0x305c5e66
  40d7ef:	or     BYTE PTR [esi],bl
  40d7f1:	sbb    eax,0x65866498
  40d7f6:	fwait
  40d7f7:	pop    ebp
  40d7f8:	pusha  
  40d7f9:	sbb    BYTE PTR [esi],dh
  40d7fb:	sub    BYTE PTR [ebp+ebp*1-0x69],bh
  40d7ff:	mov    ebp,0xe4fa8d07
  40d804:	cmp    esi,DWORD PTR ds:0x71f85c8f
  40d80a:	mov    esp,0xf67dd996
  40d80f:	xlat   BYTE PTR ds:[ebx]
  40d810:	sub    ch,0x8b
  40d813:	jbe    0x40d7a9
  40d815:	sbb    DWORD PTR [ecx+0x2b],ecx
  40d818:	iret   
  40d819:	sbb    BYTE PTR [eax-0x5e],ah
  40d81c:	mov    WORD PTR ds:[esi-0x2c],?
  40d820:	jmp    0x43b8:0x1ac39db4
  40d827:	mov    WORD PTR [ecx+edi*4-0x2c],gs
  40d82b:	jbe    0x40d80b
  40d82d:	in     eax,dx
  40d82e:	push   esi
  40d82f:	adc    dh,BYTE PTR ds:0x8c46c661
  40d836:	inc    ebx
  40d837:	add    eax,0x556b822
  40d83c:	jge    0x40d82d
  40d83e:	pop    esp
  40d83f:	sub    edi,DWORD PTR [edi+0x5e9e5464]
  40d845:	fwait
  40d846:	cmp    al,0xa6
  40d848:	pop    ebx
  40d849:	xor    DWORD PTR [esi-0x6b],esp
  40d84c:	push   ebx
  40d84d:	xor    al,0xff
  40d84f:	mul    DWORD PTR [ecx]
  40d851:	or     DWORD PTR [ebx],esi
  40d853:	mov    ebx,0xa19476b5
  40d858:	or     ch,BYTE PTR [esi-0x5f]
  40d85b:	mov    ebp,0xe3dc2db5
  40d860:	repz in eax,0x42
  40d863:	dec    eax
  40d864:	mov    bh,al
  40d866:	mov    WORD PTR [ebx],es
  40d868:	sbb    ch,ch
  40d86a:	mul    BYTE PTR [edx]
  40d86c:	in     al,dx
  40d86d:	dec    edx
  40d86e:	out    0x1d,al
  40d870:	(bad)
  40d873:	mov    dh,0x2c
  40d875:	iret   
  40d876:	dec    esi
  40d877:	adc    BYTE PTR [ecx-0x38],al
  40d87a:	es iret 
  40d87c:	xlat   BYTE PTR ds:[ebx]
  40d87d:	add    DWORD PTR [edx],0x5d
  40d880:	jmp    0x40d8b7
  40d882:	adc    DWORD PTR [esi],ecx
  40d884:	dec    ecx
  40d885:	push   eax
  40d886:	pop    es
  40d887:	cmp    edx,DWORD PTR [esi-0x56]
  40d88a:	outs   dx,DWORD PTR ds:[esi]
  40d88b:	test   al,0x92
  40d88d:	dec    ecx
  40d88e:	fmul   QWORD PTR [ecx]
  40d890:	jp     0x40d84d
  40d892:	cmc    
  40d893:	sahf   
  40d894:	pop    ds
  40d895:	jg     0x40d834
  40d897:	dec    cx
  40d899:	daa    
  40d89a:	adc    eax,0x19ae9ea8
  40d89f:	or     ch,BYTE PTR [edx]
  40d8a1:	jmp    edi
  40d8a3:	lds    esi,FWORD PTR [esi-0x64bc582b]
  40d8a9:	jb     0x40d928
  40d8ab:	cmp    eax,DWORD PTR [ebx+0x1182adba]
  40d8b1:	loope  0x40d88b
  40d8b3:	add    eax,0x36d0453f
  40d8b8:	out    dx,eax
  40d8b9:	ror    al,0xf
  40d8bc:	scas   eax,DWORD PTR es:[edi]
  40d8bd:	jmp    FWORD PTR [ebp+esi*4-0x55]
  40d8c1:	inc    edx
  40d8c2:	retf   
  40d8c3:	in     al,dx
  40d8c4:	enter  0x4715,0x2
  40d8c8:	mov    al,0x21
  40d8ca:	dec    ecx
  40d8cb:	push   esi
  40d8cc:	call   0x549e8b14
  40d8d1:	call   0xbbcfe434
  40d8d6:	ret    0xd979
  40d8d9:	fs fwait
  40d8db:	test   eax,0x85a985b7
  40d8e0:	sub    edx,DWORD PTR [esi-0x3ead5730]
  40d8e6:	inc    edx
  40d8e7:	add    BYTE PTR ds:0x5aeeab52,0xa
  40d8ee:	dec    ebp
  40d8ef:	xor    eax,DWORD PTR [edx]
  40d8f1:	imul   eax,DWORD PTR [ebx+edi*1-0x43],0xdd3ab4ef
  40d8f9:	addr16 loop 0x40d898
  40d8fc:	sub    DWORD PTR [eax],ebp
  40d8fe:	and    BYTE PTR [esi],cl
  40d900:	or     ebp,esi
  40d902:	xchg   ebp,eax
  40d903:	scas   al,BYTE PTR es:[edi]
  40d904:	(bad)  
  40d905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d906:	jno    0x40d888
  40d908:	jnp    0x40d96c
  40d90a:	neg    DWORD PTR [esi-0x72df3772]
  40d910:	rcr    DWORD PTR [ebx+0x4a83f6ea],cl
  40d916:	mov    esi,0xfb6210b7
  40d91b:	jnp    0x40d969
  40d91d:	ret    
  40d91e:	sbb    BYTE PTR [eax+0x1069982e],cl
  40d924:	(bad)  
  40d925:	ins    BYTE PTR es:[edi],dx
  40d926:	stc    
  40d927:	rcl    ah,cl
  40d929:	dec    esi
  40d92a:	push   edx
  40d92b:	push   es
  40d92c:	pusha  
  40d92d:	fld    QWORD PTR [ebp+0x22275c92]
  40d933:	jae    0x40d94b
  40d935:	js     0x40d8ec
  40d937:	pusha  
  40d938:	xor    eax,edi
  40d93a:	xor    eax,0x91018eb8
  40d93f:	outs   dx,BYTE PTR ds:[esi]
  40d940:	mov    ecx,0x4e172a07
  40d945:	out    dx,eax
  40d946:	stc    
  40d947:	mov    ch,0x1b
  40d949:	in     al,dx
  40d94a:	jns    0x40d983
  40d94c:	pop    ebx
  40d94d:	and    dh,dl
  40d94f:	out    dx,eax
  40d950:	inc    ebp
  40d951:	mul    DWORD PTR [esi+0x68]
  40d954:	retf   
  40d955:	lods   eax,DWORD PTR ds:[esi]
  40d956:	mov    edi,0x54730da5
  40d95b:	fld    DWORD PTR [eax]
  40d95d:	(bad)  [esi+eax*8-0x5e]
  40d961:	xchg   ebp,eax
  40d962:	inc    edi
  40d963:	iret   
  40d964:	xor    dh,BYTE PTR [ebp-0x46]
  40d967:	cs leave 
  40d969:	ret    
  40d96a:	pop    esp
  40d96b:	loop   0x40d945
  40d96d:	xchg   ebx,eax
  40d96e:	or     ecx,edi
  40d970:	mov    eax,ds:0xe65b53c8
  40d975:	scas   eax,DWORD PTR es:[di]
  40d977:	popa   
  40d978:	inc    esp
  40d979:	or     al,0xc9
  40d97b:	sub    eax,0x82ba1342
  40d980:	sub    al,0xf2
  40d982:	adc    DWORD PTR [ecx],0x58cdc4f1
  40d988:	push   ds
  40d989:	pop    esp
  40d98a:	mov    ebp,0x75d96f82
  40d98f:	(bad)  
  40d991:	mov    al,ds:0xf431ac73
  40d996:	xchg   esi,eax
  40d997:	scas   eax,DWORD PTR es:[edi]
  40d998:	popf   
  40d999:	sbb    al,0xf6
  40d99b:	sub    ebp,DWORD PTR [esi+0x40]
  40d99e:	cmp    eax,0x95b984d0
  40d9a3:	inc    edi
  40d9a4:	popa   
  40d9a5:	mov    cl,0xfb
  40d9a7:	inc    esp
  40d9a8:	xchg   ebp,eax
  40d9a9:	xor    al,0x97
  40d9ab:	outs   dx,BYTE PTR ds:[esi]
  40d9ac:	adc    esi,eax
  40d9ae:	leave  
  40d9af:	arpl   WORD PTR ds:0x810967f5,di
  40d9b5:	mov    bl,bl
  40d9b7:	out    0x37,al
  40d9b9:	pusha  
  40d9ba:	ss xor al,0xd7
  40d9bd:	or     DWORD PTR [eax],ecx
  40d9bf:	dec    esp
  40d9c0:	inc    eax
  40d9c1:	mov    dl,0xd8
  40d9c3:	aaa    
  40d9c4:	ins    BYTE PTR es:[edi],dx
  40d9c5:	dec    esi
  40d9c6:	xchg   DWORD PTR [edi],esi
  40d9c8:	push   eax
  40d9c9:	rol    DWORD PTR [eax+edi*1+0x7a],0x25
  40d9ce:	in     eax,0x1
  40d9d0:	jae    0x40da47
  40d9d2:	jg     0x40d9cb
  40d9d4:	dec    esi
  40d9d5:	mov    WORD PTR [ecx],gs
  40d9d7:	jl     0x40d9e7
  40d9d9:	dec    edx
  40d9da:	outs   dx,BYTE PTR ds:[esi]
  40d9db:	nop
  40d9dc:	cli    
  40d9dd:	jne    0x40d99b
  40d9df:	shl    dh,1
  40d9e1:	imul   edx,DWORD PTR [edi-0xfcdd093],0x6c
  40d9e8:	jmp    0x16ec5253
  40d9ed:	aad    0x70
  40d9ef:	mov    ebp,0x9b20b5e6
  40d9f4:	les    edx,FWORD PTR [ebp+edx*8-0x2b]
  40d9f8:	mov    cs,WORD PTR [esi-0x115551d6]
  40d9fe:	enter  0x9910,0x10
  40da02:	lock inc edi
  40da04:	dec    eax
  40da05:	mov    al,0xc1
  40da07:	(bad)  
  40da09:	inc    esp
  40da0a:	xor    DWORD PTR [eax+0x200179d5],ebp
  40da10:	fmul   QWORD PTR [ebx-0x29]
  40da13:	xchg   esp,eax
  40da14:	xor    al,bh
  40da16:	addr16 pop esp
  40da18:	dec    edx
  40da19:	sbb    edx,ecx
  40da1b:	sbb    dh,cl
  40da1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da1f:	jp     0x40da82
  40da21:	loope  0x40da18
  40da23:	std    
  40da24:	outs   dx,DWORD PTR ds:[esi]
  40da25:	dec    ecx
  40da26:	jle    0x40da19
  40da28:	jno    0x40da61
  40da2a:	scas   al,BYTE PTR es:[edi]
  40da2b:	jecxz  0x40d9e3
  40da2d:	das    
  40da2e:	pop    edi
  40da2f:	xor    BYTE PTR [esi],bl
  40da31:	add    BYTE PTR [ebp+0x7e],dh
  40da34:	test   eax,0x63875b4c
  40da39:	lock jp 0x40d9c9
  40da3c:	ss scas eax,DWORD PTR es:[edi]
  40da3e:	in     eax,dx
  40da3f:	out    0x12,al
  40da41:	fs cs dec eax
  40da44:	cmp    ebx,DWORD PTR [eax-0x2e]
  40da47:	inc    esi
  40da48:	pop    ds
  40da49:	push   0x912bfd55
  40da4e:	xor    DWORD PTR [ecx+0x655839b9],0x47da51f
  40da58:	or     esp,DWORD PTR [ecx-0x456d5d49]
  40da5e:	push   esp
  40da5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da60:	out    dx,eax
  40da61:	jo     0x40dadc
  40da63:	out    0xa2,eax
  40da65:	jecxz  0x40da45
  40da67:	xor    BYTE PTR [ebx],ah
  40da69:	sbb    cl,BYTE PTR [edx+0x6add7671]
  40da6f:	jecxz  0x40da2f
  40da71:	mov    ah,0x5d
  40da73:	inc    eax
  40da74:	aaa    
  40da75:	xor    ecx,0xa
  40da78:	in     eax,0x95
  40da7a:	jecxz  0x40da7a
  40da7c:	(bad)  [edx]
  40da7e:	jne    0x40dab3
  40da80:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40da82:	add    eax,0x8377cd05
  40da87:	pop    esp
  40da88:	test   al,0x59
  40da8a:	int3   
  40da8b:	adc    al,0x9a
  40da8d:	leave  
  40da8e:	push   edx
  40da8f:	fist   DWORD PTR [ebp+0x66]
  40da92:	div    ecx
  40da94:	dec    eax
  40da95:	xchg   esp,eax
  40da96:	test   DWORD PTR [esi],0xb521e1ff
  40da9c:	test   DWORD PTR [ecx+0x26],0x5c80bb0d
  40daa3:	push   ss
  40daa4:	ja     0x40da49
  40daa6:	jno    0x40dada
  40daa8:	es cmp al,0x15
  40daab:	xor    BYTE PTR [ebx-0x24fbf6f6],dl
  40dab1:	fcomi  st,st(6)
  40dab3:	mov    ebx,DWORD PTR [edi-0x1cfad89f]
  40dab9:	push   ds
  40daba:	mov    ds:0xa08d78a5,eax
  40dabf:	adc    al,0xc2
  40dac1:	mov    eax,0x3a9fe25e
  40dac6:	xor    bl,bl
  40dac8:	adc    edi,ebx
  40daca:	sbb    ch,bh
  40dacc:	ss jnp 0x40da83
  40dacf:	iret   
  40dad0:	and    dh,BYTE PTR [esi+0x61e775b]
  40dad6:	mov    dh,0xc
  40dad8:	and    bh,BYTE PTR [eax+eiz*1]
  40dadb:	push   eax
  40dadc:	imul   edx,DWORD PTR [eax-0x20c892d4],0xe2f3163d
  40dae6:	ja     0x40db62
  40dae8:	in     eax,0x4
  40daea:	mov    bl,0x31
  40daec:	mov    bl,0xf4
  40daee:	daa    
  40daef:	sub    eax,0x54f560db
  40daf4:	mov    ah,0xfe
  40daf6:	sbb    ebp,esi
  40daf8:	(bad)  
  40daf9:	xchg   esp,eax
  40dafa:	fwait
  40dafb:	or     eax,esi
  40dafd:	mov    esp,0xd488df96
  40db02:	inc    ebp
  40db03:	add    al,0x0
  40db05:	adc    esp,DWORD PTR [ecx]
  40db07:	adc    dl,BYTE PTR [ebp-0x1a]
  40db0a:	jmp    0x5b34455e
  40db0f:	icebp  
  40db10:	xchg   edx,esi
  40db12:	in     al,dx
  40db13:	push   esi
  40db14:	xor    BYTE PTR [ecx],ah
  40db16:	xor    BYTE PTR [eax-0x68],bl
  40db19:	lock ficom WORD PTR [ecx-0x19]
  40db1d:	stos   DWORD PTR es:[edi],eax
  40db1e:	cmp    al,0x55
  40db20:	push   ebp
  40db21:	cmp    al,0x92
  40db23:	imul   esi,esp,0xfd84b4c2
  40db29:	xor    bl,dh
  40db2b:	xor    BYTE PTR [edi],dl
  40db2d:	loope  0x40db49
  40db2f:	mov    WORD PTR [ebp+0x6738d0c7],?
  40db35:	rcl    esp,1
  40db37:	pop    esi
  40db38:	cmp    DWORD PTR ds:[esi],edx
  40db3b:	xlat   BYTE PTR ds:[ebx]
  40db3c:	aad    0xc3
  40db3e:	xchg   edi,eax
  40db3f:	in     eax,dx
  40db40:	cmp    dh,bl
  40db42:	gs jae 0x40db7a
  40db45:	sar    BYTE PTR [edx-0x7e39a467],cl
  40db4b:	inc    esp
  40db4c:	jmp    0x3bf0:0xd4942849
  40db53:	lock push ecx
  40db55:	in     al,0x36
  40db57:	fist   WORD PTR ss:[ebp+0x4d]
  40db5b:	stos   BYTE PTR es:[edi],al
  40db5c:	push   edi
  40db5d:	mov    esi,0x215d0414
  40db62:	mov    cl,0x7c
  40db64:	lahf   
  40db65:	call   0x24f3f0ef
  40db6a:	inc    edi
  40db6b:	fidivr DWORD PTR [ecx]
  40db6d:	jb     0x40db67
  40db6f:	shr    BYTE PTR [edx-0x765a54be],1
  40db75:	push   0x6b
  40db77:	inc    ecx
  40db78:	mov    dh,0xe0
  40db7a:	xchg   esi,eax
  40db7b:	cmp    BYTE PTR [edi],bl
  40db7d:	adc    ah,BYTE PTR [ecx-0x67]
  40db80:	int3   
  40db81:	xchg   DWORD PTR [ecx],edx
  40db83:	loop   0x40dbae
  40db85:	push   edi
  40db86:	loop   0x40dbd7
  40db88:	push   esp
  40db89:	std    
  40db8a:	xor    eax,0xd1fc40a9
  40db8f:	mov    ds:0x5b5dbeb4,eax
  40db94:	xor    al,BYTE PTR ds:0xb70f2836
  40db9a:	xchg   esi,eax
  40db9b:	jb     0x40db7d
  40db9d:	imul   edi,DWORD PTR [eax],0x40
  40dba0:	popf   
  40dba1:	sbb    DWORD PTR [ebp+0x692ba9bd],esi
  40dba7:	shl    edi,cl
  40dba9:	sti    
  40dbaa:	nop
  40dbab:	mov    al,ds:0x759a60b1
  40dbb0:	push   esp
  40dbb1:	sub    eax,0xca2f5038
  40dbb6:	and    DWORD PTR [esi+0x5b82d097],esi
  40dbbc:	sub    ch,BYTE PTR [ebp+0x3d]
  40dbbf:	les    ebp,FWORD PTR [eax]
  40dbc1:	cmp    BYTE PTR [esi-0x194e12d9],0x27
  40dbc8:	ss inc edx
  40dbca:	inc    ebx
  40dbcb:	arpl   WORD PTR [ebx],di
  40dbcd:	cli    
  40dbce:	bound  edx,QWORD PTR [esi-0x8]
  40dbd1:	inc    ebp
  40dbd2:	test   DWORD PTR [ebp-0x39],0xd0646bb4
  40dbd9:	pop    eax
  40dbda:	xor    DWORD PTR [ebp+0x75b02ab6],ecx
  40dbe0:	sar    BYTE PTR [edi],1
  40dbe2:	bound  eax,QWORD PTR ds:0xc37b5af7
  40dbe8:	int3   
  40dbe9:	xchg   esi,eax
  40dbea:	cmp    al,0x7
  40dbec:	xchg   esi,eax
  40dbed:	mov    eax,ds:0x3b47da7b
  40dbf2:	(bad)  
  40dbf3:	jmp    0x411a:0x3b3a215b
  40dbfa:	leave  
  40dbfb:	icebp  
  40dbfc:	std    
  40dbfd:	rcr    BYTE PTR [esi-0x1b4b06b3],0x17
  40dc04:	mov    dl,0xc6
  40dc06:	xchg   edi,eax
  40dc07:	ficomp DWORD PTR [ecx-0x23]
  40dc0a:	mov    dh,0x88
  40dc0c:	out    0x4a,eax
  40dc0e:	xchg   esi,eax
  40dc0f:	std    
  40dc10:	mov    esp,0x49fb8867
  40dc15:	sbb    DWORD PTR [ecx+0x62],esi
  40dc18:	and    edi,DWORD PTR [edx+0x59]
  40dc1b:	loop   0x40dbf4
  40dc1d:	jg     0x40dc49
  40dc1f:	lds    edi,FWORD PTR ds:0xf81c2e0f
  40dc25:	mov    bh,0x19
  40dc27:	stc    
  40dc28:	not    DWORD PTR [ecx-0x3677f6e6]
  40dc2e:	mov    esp,0x1ca098a7
  40dc33:	mov    edi,0xb019ce17
  40dc38:	or     eax,0xaae5cd86
  40dc3d:	imul   eax,DWORD PTR [edi+0x3133c3fe],0x68658b96
  40dc47:	psrld  mm4,QWORD PTR [esi]
  40dc4a:	jb     0x40dc15
  40dc4c:	aas    
  40dc4d:	xchg   edi,ecx
  40dc4f:	test   al,0x21
  40dc51:	xchg   ebp,eax
  40dc52:	jae    0x40dc77
  40dc54:	pusha  
  40dc55:	inc    edi
  40dc56:	fadd   st,st(3)
  40dc58:	(bad)  
  40dc59:	jl     0x40dc5a
  40dc5b:	out    dx,al
  40dc5c:	mov    bl,bl
  40dc5e:	std    
  40dc5f:	mov    ds:0xd98f30e8,al
  40dc64:	rcr    ch,0x6c
  40dc67:	loope  0x40dc68
  40dc69:	mov    ch,0x6e
  40dc6b:	ds cwde 
  40dc6d:	mov    ds:0x93acf869,eax
  40dc72:	xor    BYTE PTR [edi],dl
  40dc74:	cmp    DWORD PTR [edi+eax*4+0x7d],ebx
  40dc78:	imul   edi,DWORD PTR [esi+0x3c339a0f],0xffffffc5
  40dc7f:	add    al,0xea
  40dc81:	hlt    
  40dc82:	mov    dh,BYTE PTR [edx]
  40dc84:	add    eax,0xe7ccf144
  40dc89:	icebp  
  40dc8a:	fnstsw WORD PTR [edi-0x5f]
  40dc8d:	cmp    DWORD PTR [esi-0x3d],0x4f
  40dc91:	or     al,al
  40dc93:	rcr    DWORD PTR [edi+eiz*8+0x7cb1e684],1
  40dc9a:	imul   edx
  40dc9c:	adc    BYTE PTR [edx+edi*2-0x61],al
  40dca0:	inc    ecx
  40dca1:	pop    ebp
  40dca2:	int    0x63
  40dca4:	mov    al,0x1f
  40dca6:	shl    DWORD PTR [esi+0x972cb0e],1
  40dcac:	inc    edx
  40dcad:	int3   
  40dcae:	je     0x40dc77
  40dcb0:	mov    esp,0x7dde14c3
  40dcb5:	mov    WORD PTR [esi],ds
  40dcb7:	(bad)  
  40dcb8:	mov    al,ds:0x242b2071
  40dcbd:	inc    ecx
  40dcbf:	aaa    
  40dcc0:	pop    esp
  40dcc1:	ja     0x40dc66
  40dcc3:	push   ebx
  40dcc4:	nop
  40dcc5:	out    dx,al
  40dcc6:	fisub  DWORD PTR [eax-0x7160238d]
  40dccc:	fwait
  40dccd:	imul   edi,DWORD PTR [eax-0x4d],0x50
  40dcd1:	push   edx
  40dcd2:	xchg   ebx,eax
  40dcd3:	ss imul bl
  40dcd6:	pusha  
  40dcd7:	fnstenv [ebp+edi*4-0x71]
  40dcdb:	dec    ebp
  40dcdc:	dec    bx
  40dcde:	cdq    
  40dcdf:	out    0x88,eax
  40dce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dce2:	pushf  
  40dce3:	loope  0x40dcd2
  40dce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dce6:	shr    DWORD PTR [eax+0x9],cl
  40dce9:	jle    0x40dd33
  40dceb:	mov    ?,WORD PTR [esi+0x2ecf0ac8]
  40dcf1:	cmp    eax,0x6799269a
  40dcf6:	(bad)
  40dcfa:	or     cl,bl
  40dcfc:	pop    esi
  40dcfd:	pop    ecx
  40dcfe:	(bad)  
  40dcff:	jmp    0x3e1b7533
  40dd04:	push   ebp
  40dd05:	and    ebp,DWORD PTR [esi+esi*8]
  40dd08:	mov    ds:0xac8ec7f9,al
  40dd0d:	sbb    edx,DWORD PTR [edi-0x3a]
  40dd10:	cdq    
  40dd11:	inc    ebx
  40dd12:	rcl    DWORD PTR [edx+ecx*4+0x21],1
  40dd16:	int    0x83
  40dd18:	sbb    edi,ebx
  40dd1a:	add    cl,BYTE PTR [eax-0x67]
  40dd1d:	sub    eax,0xbe90e752
  40dd22:	and    al,0xf
  40dd25:	adc    ecx,ebx
  40dd27:	imul   edx,DWORD PTR [edi-0x5b25275c],0xc1e9d594
  40dd31:	push   edi
  40dd32:	dec    esi
  40dd33:	ja     0x40dcfc
  40dd35:	data16 addr16 aas 
  40dd38:	arpl   WORD PTR [ecx-0xf46010c],di
  40dd3e:	inc    edi
  40dd3f:	pop    eax
  40dd40:	sub    BYTE PTR [edx-0x24],bh
  40dd43:	push   cs
  40dd44:	mov    ebx,0x6922220
  40dd49:	dec    ebx
  40dd4a:	mov    dh,0x5d
  40dd4c:	or     cl,BYTE PTR [edx-0x63]
  40dd4f:	or     DWORD PTR [edx],0x4fffe3ad
  40dd55:	les    edi,FWORD PTR [edx+edx*8]
  40dd58:	inc    ebx
  40dd59:	rol    DWORD PTR [ebx-0x4f],1
  40dd5c:	jnp    0x40ddce
  40dd5e:	dec    edi
  40dd5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd60:	call   0x377ebaad
  40dd65:	(bad)  
  40dd66:	daa    
  40dd67:	int3   
  40dd68:	xchg   ecx,eax
  40dd69:	hlt    
  40dd6a:	jecxz  0x40ddb2
  40dd6c:	lock add al,0x2f
  40dd6f:	xchg   ebx,eax
  40dd70:	je     0x40dd82
  40dd72:	nop
  40dd73:	cdq    
  40dd74:	push   edi
  40dd75:	leave  
  40dd76:	push   esi
  40dd77:	cli    
  40dd78:	ins    BYTE PTR es:[edi],dx
  40dd79:	test   BYTE PTR [eax-0x70],al
  40dd7c:	cmp    eax,0xfdca0ccd
  40dd81:	cld    
  40dd82:	pusha  
  40dd83:	xor    dl,BYTE PTR [ebp+0x36e6bd3d]
  40dd89:	cmc    
  40dd8a:	iret   
  40dd8b:	out    0x3d,eax
  40dd8d:	psllw  mm0,QWORD PTR [eax-0x4a]
  40dd91:	xor    DWORD PTR [ebp+0x4b2ea392],0x49c21750
  40dd9b:	push   edx
  40dd9c:	pop    ss
  40dd9d:	arpl   WORD PTR [esi-0x4c1f8a44],bx
  40dda3:	mov    al,0x54
  40dda5:	push   ebp
  40dda6:	sbb    eax,0xd841e2
  40ddab:	fisub  WORD PTR [eax-0x4421e6ea]
  40ddb1:	cmc    
  40ddb2:	inc    edx
  40ddb3:	(bad)  
  40ddb4:	dec    ecx
  40ddb6:	mov    ds:0x1ef5081f,eax
  40ddbb:	out    0xcd,eax
  40ddbd:	jl     0x40dd7c
  40ddbf:	xchg   esp,eax
  40ddc0:	jnp    0x40dd94
  40ddc2:	imul   bh
  40ddc4:	jmp    0x40ddfa
  40ddc6:	push   es
  40ddc7:	jl     0x40dd6e
  40ddc9:	or     esp,DWORD PTR [edi+eiz*8-0x2f]
  40ddcd:	lahf   
  40ddce:	mov    DWORD PTR [eax],edi
  40ddd0:	iret   
  40ddd1:	xor    eax,0x68c109cc
  40ddd6:	inc    ecx
  40ddd7:	push   ds
  40ddd8:	(bad)  
  40ddd9:	int3   
  40ddda:	stos   DWORD PTR es:[edi],eax
  40dddb:	or     BYTE PTR [ecx+0x5c29d2f1],ah
  40dde1:	jmp    0xbf9a:0xdbc81d6b
  40dde8:	ds aam 0x72
  40ddeb:	pop    eax
  40ddec:	mov    edx,fs
  40ddee:	ss aad 0xc7
  40ddf1:	add    BYTE PTR [esi],0xbf
  40ddf4:	lods   al,BYTE PTR ds:[esi]
  40ddf5:	ds imul edx,edi,0xffffffa6
  40ddf9:	mov    ebx,0x5f2b7a55
  40ddfe:	out    dx,eax
  40ddff:	mov    al,0xe1
  40de01:	popa   
  40de02:	jns    0x40de06
  40de04:	inc    ecx
  40de05:	xor    bl,dh
  40de07:	(bad)  [eax-0x2200de42]
  40de0d:	icebp  
  40de0e:	sbb    BYTE PTR [edi-0x20],0x8f
  40de12:	test   al,0x18
  40de14:	outs   dx,DWORD PTR ds:[esi]
  40de15:	gs or  al,0xb1
  40de18:	ins    BYTE PTR es:[edi],dx
  40de19:	sti    
  40de1a:	xlat   BYTE PTR ds:[ebx]
  40de1b:	adc    al,0x69
  40de1d:	ret    
  40de1e:	mov    eax,0x1d2edb4d
  40de23:	lods   eax,DWORD PTR ds:[esi]
  40de24:	stc    
  40de25:	adc    BYTE PTR [edi-0x57],bh
  40de28:	test   bl,ah
  40de2a:	pop    ebx
  40de2b:	add    cl,dl
  40de2d:	leave  
  40de2e:	in     al,0xcc
  40de30:	jae    0x40dea6
  40de32:	add    bh,BYTE PTR [edx+0x15]
  40de35:	add    DWORD PTR [ebp-0x6132cd65],eax
  40de3b:	cmp    BYTE PTR [esi-0x38],0xf4
  40de3f:	jge    0x40de24
  40de41:	sbb    DWORD PTR [edi-0x16],eax
  40de44:	sbb    dl,ch
  40de46:	mov    WORD PTR [edx],?
  40de48:	and    BYTE PTR [eax+0x26],ah
  40de4b:	mov    gs,WORD PTR [ebx-0x2c]
  40de4e:	mov    bh,0xb5
  40de50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de51:	stc    
  40de52:	or     dl,0x46
  40de55:	fistp  WORD PTR [edx+0x79]
  40de58:	rdmsr  
  40de5a:	adc    DWORD PTR [ecx],ebp
  40de5c:	mov    ecx,gs
  40de5e:	les    edx,FWORD PTR [ebp+esi*4+0x68]
  40de62:	pop    ds
  40de63:	cmp    ebp,DWORD PTR [ecx+edi*8-0x4d830cdd]
  40de6a:	in     al,dx
  40de6b:	addr16 pop edx
  40de6d:	std    
  40de6e:	adc    edi,DWORD PTR [ebp-0x7ae1813b]
  40de74:	pop    ss
  40de75:	loopne 0x40ded2
  40de77:	int    0xc7
  40de79:	add    cl,dl
  40de7b:	test   DWORD PTR [esi-0x39008b48],0xfe9241bd
  40de85:	or     dh,ah
  40de87:	sar    BYTE PTR ds:0xccf2a9c9,1
  40de8d:	loope  0x40de13
  40de8f:	int3   
  40de90:	mov    eax,ds:0x117782b5
  40de95:	scas   eax,DWORD PTR es:[edi]
  40de96:	adc    bh,BYTE PTR [esp+esi*1]
  40de99:	nop
  40de9a:	jmp    0x2140:0xac007923
  40dea1:	cld    
  40dea2:	xchg   ebp,eax
  40dea3:	pop    ds
  40dea4:	out    0xb1,eax
  40dea6:	push   edi
  40dea7:	push   eax
  40dea8:	fist   DWORD PTR [edx+0x49]
  40deab:	or     bh,BYTE PTR [ebp+0x2ea88bff]
  40deb1:	lock fidiv WORD PTR gs:[edx-0x2ff8f236]
  40deb9:	ret    
  40deba:	inc    edi
  40debb:	dec    ecx
  40debc:	shr    DWORD PTR [ecx-0x67],1
  40debf:	sbb    bh,BYTE PTR [esi-0x14]
  40dec2:	mov    cs,ebp
  40dec4:	xor    eax,0x37276f68
  40dec9:	add    BYTE PTR [edx],ah
  40decb:	push   edx
  40decc:	jae    0x40df0f
  40dece:	add    dl,0xec
  40ded1:	cmp    al,0xc9
  40ded3:	mov    ah,0x32
  40ded5:	mov    ebx,0x4ca7cb6d
  40deda:	cdq    
  40dedb:	mov    bh,0xc5
  40dedd:	test   bh,bl
  40dedf:	jecxz  0x40deb4
  40dee1:	jmp    FWORD PTR [ebp-0x4f]
  40dee4:	arpl   WORD PTR [ecx+0x36],si
  40dee7:	mul    BYTE PTR [ebx-0x129028ed]
  40deed:	pop    es
  40deee:	loope  0x40dee1
  40def0:	sbb    eax,0x7c0d167d
  40def5:	out    dx,eax
  40def6:	mov    al,ds:0x2490092c
  40defb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40defc:	or     dl,dh
  40defe:	cmc    
  40deff:	mov    edi,0x42402555
  40df04:	scas   al,BYTE PTR es:[edi]
  40df05:	loope  0x40df3a
  40df07:	and    ah,BYTE PTR [ebp-0x64]
  40df0a:	sub    eax,0x44a8d64c
  40df0f:	xchg   ebp,eax
  40df10:	add    eax,0x3fcfb0de
  40df15:	inc    esp
  40df16:	scas   eax,DWORD PTR es:[edi]
  40df17:	push   cs
  40df18:	outs   dx,BYTE PTR ds:[esi]
  40df19:	push   edx
  40df1a:	std    
  40df1b:	jb     0x40dedf
  40df1d:	sbb    eax,0xb6390fee
  40df22:	loop   0x40deb0
  40df24:	and    BYTE PTR [esi],al
  40df26:	(bad)  
  40df27:	mov    ds,esi
  40df29:	addr16 push esp
  40df2b:	imul   esi,DWORD PTR [edx],0x5c
  40df2e:	jns    0x40df88
  40df30:	adc    al,0x85
  40df32:	push   ebx
  40df33:	pop    ebp
  40df34:	jecxz  0x40df6c
  40df36:	dec    edi
  40df37:	inc    ecx
  40df38:	mov    ah,0x98
  40df3a:	aad    0xc2
  40df3c:	or     esi,DWORD PTR [edx]
  40df3e:	push   edi
  40df3f:	test   al,0xf2
  40df41:	sbb    DWORD PTR [ebx+eax*4],ecx
  40df44:	fs jb  0x40df00
  40df47:	clc    
  40df48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df49:	test   DWORD PTR [edi+0x2d],0xeb97dbff
  40df50:	das    
  40df51:	lock (bad) 
  40df53:	(bad)  
  40df54:	into   
  40df55:	mov    ch,BYTE PTR [edi-0x4fcb2dc5]
  40df5b:	(bad)  
  40df5c:	shl    DWORD PTR [esi-0xb],cl
  40df5f:	not    esp
  40df61:	adc    ah,BYTE PTR [ecx-0x45]
  40df64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df65:	dec    esp
  40df66:	inc    edx
  40df67:	jmp    0x496d:0x3a0a3d94
  40df6e:	cmp    esi,DWORD PTR ds:0x44810d65
  40df74:	push   0xffffffa6
  40df76:	les    ecx,FWORD PTR [edi+ecx*4-0xe7a4b6d]
  40df7d:	loop   0x40df04
  40df7f:	cmp    dl,ch
  40df81:	sub    BYTE PTR [edx],cl
  40df83:	xor    DWORD PTR [edi-0x6c6f943],ebx
  40df89:	mov    ah,0xcb
  40df8b:	pop    edx
  40df8c:	mov    esp,0xdd0eea3
  40df91:	pop    ebx
  40df92:	pop    esi
  40df93:	sub    DWORD PTR [edi-0x18654dfc],0x2c
  40df9a:	stos   DWORD PTR es:[edi],eax
  40df9b:	cmp    BYTE PTR [edi-0x6d216be9],ah
  40dfa1:	jmp    0x40df92
  40dfa3:	inc    BYTE PTR [eax]
  40dfa5:	or     DWORD PTR [edx+edx*4-0x24],edi
  40dfa9:	mov    cs,WORD PTR [eax]
  40dfab:	mov    ah,0x2a
  40dfad:	mov    ah,0x59
  40dfaf:	lahf   
  40dfb0:	mov    ebx,0x5dcb2b23
  40dfb5:	js     0x40df6e
  40dfb7:	test   DWORD PTR [ecx+0x4a],ecx
  40dfba:	xchg   ebp,eax
  40dfbb:	ret    
  40dfbc:	jp     0x40dfbb
  40dfbe:	add    DWORD PTR [edx+0x86ef372],esi
  40dfc4:	cmp    DWORD PTR [ebp-0x2c],edi
  40dfc7:	push   cs
  40dfc8:	inc    esi
  40dfc9:	inc    esi
  40dfca:	retf   0xb4a3
  40dfcd:	xor    al,0xa6
  40dfcf:	push   esi
  40dfd0:	push   ss
  40dfd1:	jns    0x40df6e
  40dfd3:	not    BYTE PTR [ecx+0x6cdb9668]
  40dfd9:	jle    0x40dfb9
  40dfdb:	popf   
  40dfdc:	test   esp,eax
  40dfde:	mov    edi,0x6d5a568
  40dfe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfe4:	mov    edi,0xe838767d
  40dfe9:	(bad)  [edi+edx*8+0x2c8fa7c6]
  40dff0:	out    0xe7,eax
  40dff2:	sub    DWORD PTR [esi-0xe],edi
  40dff5:	sbb    eax,0xd92df6ac
  40dffa:	sbb    al,0x56
  40dffc:	jg     0x40e025
  40dffe:	aad    0xcb
  40e000:	pop    esp
  40e001:	inc    edi
  40e002:	mov    dh,0x7
  40e004:	mov    ds:0xbcff9070,eax
  40e009:	mov    eax,0x8daf93bd
  40e00e:	int3   
  40e00f:	dec    ebp
  40e010:	jle    0x40e03b
  40e012:	or     BYTE PTR [edx],0x6
  40e015:	and    dl,BYTE PTR [ecx-0x7adf05e6]
  40e01b:	add    eax,0xe135575c
  40e020:	cmp    DWORD PTR [edx],ecx
  40e022:	shl    BYTE PTR ds:0x571f00c3,cl
  40e028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e029:	sub    edi,esp
  40e02b:	pshufw mm6,QWORD PTR [edx-0x3],0x95
  40e030:	test   al,0x45
  40e032:	inc    edx
  40e033:	lock stos DWORD PTR es:[edi],eax
  40e035:	push   ecx
  40e036:	sbb    edx,ebx
  40e038:	mov    eax,ds:0x8489e338
  40e03d:	inc    edx
  40e03e:	xor    bl,bl
  40e040:	ret    0x4e0
  40e043:	cmc    
  40e044:	fsub   QWORD PTR [edi+eiz*8+0x5ac38241]
  40e04b:	adc    al,0xf3
  40e04d:	push   ecx
  40e04e:	push   esp
  40e04f:	test   al,0x51
  40e051:	popf   
  40e052:	ja     0x40dfda
  40e054:	xor    eax,0xef2ded9f
  40e059:	mov    dl,0xe0
  40e05b:	mov    ?,WORD PTR [eax+0x1e]
  40e05e:	and    edx,esi
  40e060:	daa    
  40e061:	add    DWORD PTR [ebx-0x54],edi
  40e064:	gs jns 0x40e02d
  40e067:	dec    edi
  40e068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e069:	cmp    esi,DWORD PTR [ebx]
  40e06b:	add    al,0xed
  40e06d:	and    eax,0x3de395e7
  40e072:	xchg   eax,eax
  40e074:	inc    esi
  40e075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e077:	jp     0x40e03f
  40e079:	addr16 add al,0x74
  40e07c:	dec    ecx
  40e07d:	pop    ebp
  40e07e:	shl    ah,1
  40e080:	or     DWORD PTR [esp+ebx*2+0x463a4077],esp
  40e087:	dec    esi
  40e088:	cs ja  0x40e075
  40e08b:	test   eax,0x954f4fcb
  40e090:	div    bl
  40e092:	push   edi
  40e093:	ins    BYTE PTR es:[edi],dx
  40e094:	fimul  WORD PTR ds:0x497c5a4b
  40e09a:	mov    ebx,0xf3628afe
  40e09f:	(bad)  
  40e0a0:	mov    ch,0xdc
  40e0a2:	stos   DWORD PTR es:[edi],eax
  40e0a3:	cmp    eax,0xf3836ac3
  40e0a8:	jp     0x40e119
  40e0aa:	lds    ebx,FWORD PTR [edx+0x5b539f67]
  40e0b0:	sqrtps xmm2,xmm0
  40e0b3:	enter  0xa3fd,0x7d
  40e0b7:	push   esi
  40e0b8:	jp     0x40e0ab
  40e0ba:	cmp    DWORD PTR [ecx-0x79],ecx
  40e0bd:	rcr    DWORD PTR [ebx],0xcd
  40e0c0:	shl    BYTE PTR [esi+0x7e56ad44],cl
  40e0c6:	mov    BYTE PTR [ecx+edi*1],cl
  40e0c9:	push   cs
  40e0ca:	add    BYTE PTR [edi+0x58],al
  40e0cd:	loope  0x40e0a4
  40e0cf:	fst    QWORD PTR [edi+0xcbdd12f]
  40e0d5:	out    0xde,eax
  40e0d7:	and    eax,DWORD PTR [edi+0x1b5ad02a]
  40e0dd:	(bad)  
  40e0df:	(bad)  
  40e0e0:	dec    esi
  40e0e1:	jns    0x40e10b
  40e0e3:	in     eax,dx
  40e0e4:	add    eax,0xdcf78497
  40e0e9:	cwde   
  40e0ea:	pusha  
  40e0eb:	hlt    
  40e0ec:	xchg   edi,eax
  40e0ed:	daa    
  40e0ee:	inc    esp
  40e0ef:	sbb    al,0x42
  40e0f1:	dec    ebp
  40e0f2:	stos   DWORD PTR es:[edi],eax
  40e0f3:	inc    edx
  40e0f4:	mov    edi,0xd5e48ee0
  40e0f9:	mov    fs,WORD PTR [eax+eiz*8-0x5a]
  40e0fd:	jmp    0xbc3e:0x7680bd41
  40e104:	inc    esp
  40e105:	push   esi
  40e106:	sbb    ebx,ecx
  40e108:	and    edi,DWORD PTR [esi]
  40e10a:	mov    esp,0x5d319745
  40e10f:	jmp    0x4d0d:0x306fd748
  40e116:	jb     0x40e09a
  40e118:	lock mov bh,0x7c
  40e11b:	stos   BYTE PTR es:[edi],al
  40e11c:	es or  al,0x3e
  40e11f:	stos   DWORD PTR es:[edi],eax
  40e120:	dec    BYTE PTR [edi-0x6617c9ae]
  40e126:	(bad)  
  40e127:	aaa    
  40e128:	je     0x40e13a
  40e12a:	ffree  st(6)
  40e12c:	pop    ebp
  40e12d:	fcmovnu st,st(0)
  40e12f:	loop   0x40e19c
  40e131:	push   edi
  40e132:	iret   
  40e133:	ror    cl,1
  40e135:	shl    dl,1
  40e137:	and    al,0x8c
  40e139:	and    dh,cl
  40e13b:	push   es
  40e13c:	and    DWORD PTR [ecx-0x69],0xffffff9e
  40e140:	add    DWORD PTR [edi-0x71fd56bf],0x4c
  40e147:	dec    esp
  40e148:	cmc    
  40e149:	cdq    
  40e14a:	xor    ecx,ecx
  40e14c:	mov    WORD PTR [ebp-0x1155aab2],ds
  40e152:	es (bad) 
  40e154:	addr16 mov ds:0x1cd3,eax
  40e158:	aam    0xa2
  40e15a:	ficomp DWORD PTR [eax+ecx*2-0x36]
  40e15e:	cs pop ecx
  40e160:	fdiv   QWORD PTR ds:0xa1d04752
  40e166:	add    BYTE PTR [edx+0x7062b134],dh
  40e16c:	cmp    BYTE PTR [esp+esi*8+0x73a71876],ch
  40e173:	or     edi,DWORD PTR ds:0xa87dfaf3
  40e179:	ffreep st(5)
  40e17b:	sahf   
  40e17c:	test   dl,dh
  40e17e:	(bad)  
  40e17f:	dec    edi
  40e180:	jae    0x40e19a
  40e182:	add    ecx,DWORD PTR [eax+0x16]
  40e185:	or     edi,DWORD PTR [edi+0x68]
  40e188:	sahf   
  40e189:	and    eax,0xde242ce2
  40e18e:	mov    dh,0x6
  40e190:	(bad)  
  40e191:	cmp    al,0xfb
  40e193:	pusha  
  40e194:	jbe    0x40e18a
  40e196:	sti    
  40e197:	mov    esi,0xcb36c875
  40e19c:	dec    esp
  40e19d:	and    ah,bh
  40e19f:	cmc    
  40e1a0:	jle    0x40e21c
  40e1a2:	scas   eax,DWORD PTR es:[edi]
  40e1a3:	or     dh,BYTE PTR ds:0x65bf7ca8
  40e1a9:	cmp    DWORD PTR [ecx+0x7a],ebp
  40e1ac:	imul   ebp,DWORD PTR [ebx+0x79b9b81a],0x18374840
  40e1b6:	loopne 0x40e1df
  40e1b8:	or     ebx,DWORD PTR [edi-0x30]
  40e1bb:	test   esp,0xb70b23c4
  40e1c1:	test   BYTE PTR [ebp+0x26],bl
  40e1c4:	ins    BYTE PTR es:[edi],dx
  40e1c5:	gs hlt 
  40e1c7:	arpl   WORD PTR [edx+0xa902951],ax
  40e1cd:	sar    WORD PTR [ecx+0x4f2ddb71],cl
  40e1d4:	in     al,dx
  40e1d5:	pop    ecx
  40e1d6:	out    dx,eax
  40e1d7:	jle    0x40e258
  40e1d9:	pop    ebp
  40e1da:	push   esi
  40e1db:	ret    
  40e1dc:	inc    eax
  40e1dd:	stos   DWORD PTR es:[edi],eax
  40e1de:	push   edi
  40e1df:	stos   BYTE PTR es:[edi],al
  40e1e0:	shl    ebp,1
  40e1e2:	sub    eax,0x27b239e6
  40e1e7:	mov    eax,0xa9908756
  40e1ec:	stc    
  40e1ed:	sub    eax,0xc7080f42
  40e1f2:	pop    ss
  40e1f3:	xor    DWORD PTR [eax+0x74f1348b],esp
  40e1f9:	fst    QWORD PTR [esi+0x2841e572]
  40e1ff:	idiv   esi
  40e201:	and    eax,esi
  40e203:	jno    0x40e1f2
  40e205:	hlt    
  40e206:	jmp    0xd1a9f32c
  40e20b:	adc    ecx,DWORD PTR [esi-0x3d7bbef2]
  40e211:	add    DWORD PTR [edi-0x2569842e],esi
  40e217:	sahf   
  40e218:	jmp    0x66d0dc47
  40e21d:	jnp    0x40e249
  40e21f:	xchg   BYTE PTR [esi+0x10],ah
  40e222:	xlat   BYTE PTR ds:[ebx]
  40e223:	add    eax,0xa1dc5c7d
  40e228:	add    BYTE PTR [edx],bh
  40e22a:	dec    edx
  40e22b:	xchg   esi,eax
  40e22c:	mov    es,edi
  40e22e:	sbb    edi,esp
  40e230:	shl    edx,0x1f
  40e233:	mov    ecx,0xa17ff39b
  40e238:	pop    esi
  40e239:	jo     0x40e1cb
  40e23b:	cdq    
  40e23c:	push   edi
  40e23d:	pushf  
  40e23e:	inc    esp
  40e23f:	sbb    eax,0x2e9c7715
  40e244:	cmp    eax,0x80649c7f
  40e249:	sbb    DWORD PTR [edx+0x67],edx
  40e24c:	xchg   esp,eax
  40e24d:	inc    edx
  40e24e:	adc    eax,0xcaf7b21d
  40e253:	lea    ebp,[esi+0x36370ed9]
  40e259:	fisubr DWORD PTR [ebp-0x53]
  40e25c:	sbb    al,0x3f
  40e25e:	test   al,0xf3
  40e260:	loopne 0x40e21a
  40e262:	sbb    DWORD PTR [ebx-0x74],edx
  40e265:	inc    ebp
  40e266:	xchg   edx,eax
  40e267:	push   eax
  40e268:	xor    ebx,ebx
  40e26a:	mov    edx,esp
  40e26c:	dec    edx
  40e26d:	inc    ebx
  40e26e:	add    ebx,DWORD PTR [edx+ebx*1]
  40e271:	dec    ebx
  40e272:	xor    edx,edx
  40e274:	add    DWORD PTR [ebp-0x10],ebx
  40e277:	pop    ebx
  40e278:	mov    eax,DWORD PTR [ebp-0x10]
  40e27b:	pop    edi
  40e27c:	pop    esi
  40e27d:	pop    ebx
  40e27e:	leave  
  40e27f:	ret    0x10
  40e282:	push   ebp
  40e283:	mov    ebp,esp
  40e285:	sub    esp,0x7c
  40e288:	mov    ecx,DWORD PTR ds:0x42e008
  40e28e:	or     ecx,DWORD PTR ds:0x42f004
  40e294:	mov    DWORD PTR ds:0x42e008,ecx
  40e29a:	push   esi
  40e29b:	push   edi
  40e29c:	mov    eax,ds:0x4342d7
  40e2a1:	sbb    edi,ecx
  40e2a3:	mov    DWORD PTR [ebp-0x24],eax
  40e2a6:	and    DWORD PTR ds:0x42f00c,edx
  40e2ac:	mov    eax,ds:0x4343e3
  40e2b1:	adc    DWORD PTR ds:0x431014,edi
  40e2b7:	mov    DWORD PTR [ebp-0x34],eax
  40e2ba:	mov    edi,DWORD PTR ds:0x430018
  40e2c0:	and    DWORD PTR ds:0x42e004,edi
  40e2c6:	and    DWORD PTR [ebp-0x30],0x0
  40e2ca:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  40e2d1:	sbb    esi,0xb54
  40e2d7:	mov    DWORD PTR [ebp-0x28],0xf89c8580
  40e2de:	sbb    DWORD PTR ds:0x42e000,ecx
  40e2e4:	mov    eax,DWORD PTR [ebp-0x10]
  40e2e7:	mov    ecx,DWORD PTR [ebp-0x10]
  40e2ea:	neg    esi
  40e2ec:	sub    eax,ecx
  40e2ee:	xor    ecx,ecx
  40e2f0:	add    ecx,DWORD PTR ds:0x41d056
  40e2f6:	mov    esi,DWORD PTR ds:0x433018
  40e2fc:	sub    ecx,esi
  40e2fe:	add    ecx,DWORD PTR [ecx+esi*1]
  40e301:	mov    DWORD PTR [ebp-0x10],eax
  40e304:	xor    ecx,ecx
  40e306:	xor    DWORD PTR [ebp-0x10],0xf89cb581
  40e30d:	sub    edi,ecx
  40e30f:	mov    eax,DWORD PTR [ebp-0x18]
  40e312:	and    DWORD PTR ds:0x42e01c,0x0
  40e31c:	mov    esi,DWORD PTR ds:0x42e01c
  40e322:	inc    esi
  40e323:	mov    DWORD PTR ds:0x42e01c,esi
  40e329:	cmp    DWORD PTR ds:0x42e01c,0xe
  40e330:	ja     0x40e387
  40e336:	jmp    0x40e360
  40e33b:	push   DWORD PTR [ebp-0x10]
  40e33e:	push   DWORD PTR [ebp-0x1c]
  40e341:	push   0x636c
  40e346:	push   0x42e004
  40e34b:	push   0x225f
  40e350:	push   0x5da7
  40e355:	push   0x835e
  40e35a:	call   DWORD PTR ds:0x4348e3
  40e360:	cmp    DWORD PTR ds:0x42e01c,0xd
  40e367:	jne    0x40e37a
  40e36d:	mov    esi,DWORD PTR ds:0x42e01c
  40e373:	inc    esi
  40e374:	mov    DWORD PTR ds:0x42e01c,esi
  40e37a:	cmp    DWORD PTR ds:0x42e01c,0x1e
  40e381:	jb     0x40e31c
  40e387:	mov    ecx,DWORD PTR [ebp-0x18]
  40e38a:	and    DWORD PTR ds:0x431010,0x0
  40e394:	jmp    0x40e3a8
  40e399:	xor    edi,edi
  40e39b:	xor    edi,DWORD PTR ds:0x431010
  40e3a1:	inc    edi
  40e3a2:	mov    DWORD PTR ds:0x431010,edi
  40e3a8:	cmp    DWORD PTR ds:0x431010,0x16
  40e3af:	jae    0x40e3e6
  40e3b5:	cmp    DWORD PTR ds:0x431010,0x1b
  40e3bc:	jle    0x40e3e6
  40e3c2:	jmp    0x40e3e1
  40e3c7:	push   0x430014
  40e3cc:	push   0x208f
  40e3d1:	push   0x8122
  40e3d6:	push   0x265c
  40e3db:	call   DWORD PTR ds:0x4348b7
  40e3e1:	jmp    0x40e399
  40e3e6:	sub    eax,ecx
  40e3e8:	mov    DWORD PTR [ebp-0x18],eax
  40e3eb:	and    DWORD PTR ds:0x42f018,0x0
  40e3f5:	xor    ecx,ecx
  40e3f7:	xor    ecx,DWORD PTR ds:0x42f018
  40e3fd:	inc    ecx
  40e3fe:	mov    DWORD PTR ds:0x42f018,ecx
  40e404:	cmp    DWORD PTR ds:0x42f018,0x2a
  40e40b:	jbe    0x40e439
  40e411:	jmp    0x40e42c
  40e416:	push   0x432014
  40e41b:	push   DWORD PTR [ebp-0x14]
  40e41e:	push   0x7281
  40e423:	push   DWORD PTR [ebp-0x1c]
  40e426:	call   DWORD PTR ds:0x4348bb
  40e42c:	cmp    DWORD PTR ds:0x42f018,0x1a
  40e433:	jb     0x40e3f5
  40e439:	or     DWORD PTR [ebp-0x18],0xf89f0581
  40e440:	and    DWORD PTR ds:0x43200c,0x0
  40e44a:	mov    esi,DWORD PTR ds:0x43200c
  40e450:	inc    esi
  40e451:	mov    DWORD PTR ds:0x43200c,esi
  40e457:	cmp    DWORD PTR ds:0x43200c,0x8
  40e45e:	jg     0x40e49b
  40e464:	jmp    0x40e472
  40e469:	push   DWORD PTR [ebp-0x24]
  40e46c:	call   DWORD PTR ds:0x4348bf
  40e472:	cmp    DWORD PTR ds:0x43200c,0x7
  40e479:	jne    0x40e48e
  40e47f:	xor    esi,esi
  40e481:	or     esi,DWORD PTR ds:0x43200c
  40e487:	inc    esi
  40e488:	mov    DWORD PTR ds:0x43200c,esi
  40e48e:	cmp    DWORD PTR ds:0x43200c,0x1d
  40e495:	jb     0x40e44a
  40e49b:	mov    eax,DWORD PTR [ebp-0xc]
  40e49e:	mov    ecx,DWORD PTR [ebp-0xc]
  40e4a1:	sub    DWORD PTR ds:0x42e020,0x4ecf
  40e4ab:	sub    eax,ecx
  40e4ad:	sub    DWORD PTR ds:0x430004,edx
  40e4b3:	mov    DWORD PTR [ebp-0xc],eax
  40e4b6:	or     ecx,ecx
  40e4b8:	or     DWORD PTR [ebp-0xc],0xf89c85c1
  40e4bf:	sbb    eax,edi
  40e4c1:	mov    eax,DWORD PTR [ebp-0x1c]
  40e4c4:	and    DWORD PTR ds:0x431018,ebx
  40e4ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e4cd:	sub    eax,ecx
  40e4cf:	mov    DWORD PTR [ebp-0x1c],eax
  40e4d2:	or     DWORD PTR [ebp-0x1c],0xf89c85a1
  40e4d9:	mov    eax,DWORD PTR [ebp-0x20]
  40e4dc:	mov    ecx,DWORD PTR [ebp-0x20]
  40e4df:	sub    eax,ecx
  40e4e1:	mov    DWORD PTR [ebp-0x20],eax
  40e4e4:	mov    eax,DWORD PTR [ebp-0x2c]
  40e4e7:	mov    ecx,DWORD PTR [ebp-0x20]
  40e4ea:	mov    esi,0x751089d
  40e4ef:	xor    eax,esi
  40e4f1:	mov    edi,0x3272e4
  40e4f6:	add    eax,edi
  40e4f8:	or     eax,ecx
  40e4fa:	mov    DWORD PTR [ebp-0x20],eax
  40e4fd:	mov    eax,DWORD PTR [ebp-0x4]
  40e500:	mov    ecx,DWORD PTR [ebp-0x4]
  40e503:	sub    eax,ecx
  40e505:	mov    DWORD PTR [ebp-0x4],eax
  40e508:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  40e50f:	mov    eax,DWORD PTR [ebp-0xc]
  40e512:	xor    eax,esi
  40e514:	add    eax,edi
  40e516:	push   eax
  40e517:	mov    eax,DWORD PTR [ebp-0x10]
  40e51a:	xor    eax,esi
  40e51c:	add    eax,edi
  40e51e:	push   eax
  40e51f:	mov    eax,DWORD PTR [ebp-0x4]
  40e522:	xor    eax,esi
  40e524:	add    eax,edi
  40e526:	push   eax
  40e527:	lea    eax,[ebp-0x7c]
  40e52a:	push   eax
  40e52b:	push   DWORD PTR [ebp-0x2c]
  40e52e:	push   DWORD PTR [ebp-0x28]
  40e531:	call   0x41104a
  40e536:	test   eax,eax
  40e538:	je     0x40e566
  40e53e:	lea    eax,[ebp-0x7c]
  40e541:	push   eax
  40e542:	mov    eax,DWORD PTR [ebp-0x28]
  40e545:	xor    eax,esi
  40e547:	add    eax,edi
  40e549:	push   eax
  40e54a:	mov    eax,DWORD PTR [ebp-0x24]
  40e54d:	add    eax,0xaa
  40e552:	push   eax
  40e553:	mov    eax,DWORD PTR [ebp-0x24]
  40e556:	mov    eax,DWORD PTR [eax+0x198]
  40e55c:	push   DWORD PTR [eax]
  40e55e:	call   0x409457
  40e563:	mov    DWORD PTR [ebp-0x14],eax
  40e566:	lea    eax,[ebp+0x4]
  40e569:	mov    DWORD PTR [ebp-0x30],eax
  40e56c:	mov    eax,DWORD PTR [ebp-0x14]
  40e56f:	test   eax,eax
  40e571:	je     0x40e5d9
  40e577:	lea    eax,[ebp-0x8]
  40e57a:	mov    DWORD PTR [ebp-0x38],eax
  40e57d:	mov    eax,DWORD PTR [ebp-0x34]
  40e580:	mov    DWORD PTR [ebp-0x8],eax
  40e583:	mov    eax,DWORD PTR [ebp-0x8]
  40e586:	mov    ecx,DWORD PTR [ebp-0x14]
  40e589:	sub    eax,ecx
  40e58b:	mov    DWORD PTR [ebp-0x8],eax
  40e58e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e591:	xor    ecx,esi
  40e593:	mov    eax,0xffcd8d1c
  40e598:	sub    eax,ecx
  40e59a:	add    DWORD PTR [ebp-0x8],eax
  40e59d:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a0:	mov    ecx,DWORD PTR [ebp-0x14]
  40e5a3:	mov    DWORD PTR [ecx+0x1],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x14]
  40e5a9:	push   DWORD PTR [ebp-0x24]
  40e5ac:	mov    BYTE PTR [eax],0xe9
  40e5af:	mov    eax,ds:0x434153
  40e5b4:	push   DWORD PTR [eax]
  40e5b6:	push   DWORD PTR ds:0x4343af
  40e5bc:	push   DWORD PTR ds:0x43415b
  40e5c2:	push   DWORD PTR ds:0x43438f
  40e5c8:	push   DWORD PTR ds:0x43465b
  40e5ce:	push   DWORD PTR [ebp-0x28]
  40e5d1:	push   DWORD PTR [ebp-0x2c]
  40e5d4:	mov    eax,DWORD PTR [ebp-0x14]
  40e5d7:	call   eax
  40e5d9:	mov    eax,DWORD PTR [ebp-0x30]
  40e5dc:	mov    ecx,DWORD PTR ds:0x434353
  40e5e2:	add    DWORD PTR [eax],ecx
  40e5e4:	pop    edi
  40e5e5:	pop    esi
  40e5e6:	leave  
  40e5e7:	ret    
  40e5e8:	push   ebp
  40e5e9:	mov    ebp,esp
  40e5eb:	sub    esp,0x18
  40e5ee:	xor    DWORD PTR ds:0x431008,ecx
  40e5f4:	mov    DWORD PTR [ebp-0x10],0xf89f8581
  40e5fb:	lea    eax,[ebp+0x14]
  40e5fe:	mov    DWORD PTR [ebp-0x4],eax
  40e601:	mov    DWORD PTR ds:0x42e000,0x18
  40e60b:	cmp    DWORD PTR ds:0x42e000,0x0
  40e612:	je     0x40e669
  40e618:	cmp    DWORD PTR ds:0x42e000,0x8
  40e61f:	jge    0x40e669
  40e625:	jmp    0x40e63b
  40e62a:	push   DWORD PTR [ebp-0x20]
  40e62d:	push   DWORD PTR [ebp-0x20]
  40e630:	push   0x8017
  40e635:	call   DWORD PTR ds:0x4348c3
  40e63b:	cmp    DWORD PTR ds:0x42e000,0x9
  40e642:	jne    0x40e657
  40e648:	xor    edx,edx
  40e64a:	or     edx,DWORD PTR ds:0x42e000
  40e650:	dec    edx
  40e651:	mov    DWORD PTR ds:0x42e000,edx
  40e657:	mov    edx,DWORD PTR ds:0x42e000
  40e65d:	dec    edx
  40e65e:	mov    DWORD PTR ds:0x42e000,edx
  40e664:	jmp    0x40e60b
  40e669:	push   esi
  40e66a:	and    DWORD PTR ds:0x43101c,0x0
  40e674:	jmp    0x40e686
  40e679:	mov    edx,DWORD PTR ds:0x43101c
  40e67f:	inc    edx
  40e680:	mov    DWORD PTR ds:0x43101c,edx
  40e686:	cmp    DWORD PTR ds:0x43101c,0x1d
  40e68d:	jae    0x40e6c2
  40e693:	cmp    DWORD PTR ds:0x43101c,0x25
  40e69a:	jg     0x40e6c2
  40e6a0:	jmp    0x40e6bd
  40e6a5:	push   0x7038
  40e6aa:	push   0x42f000
  40e6af:	push   0x153b
  40e6b4:	push   DWORD PTR [ebp-0x20]
  40e6b7:	call   DWORD PTR ds:0x4348eb
  40e6bd:	jmp    0x40e679
  40e6c2:	mov    esi,0xf89c8581
  40e6c7:	mov    DWORD PTR [ebp-0xc],esi
  40e6ca:	mov    DWORD PTR ds:0x430014,0x1e
  40e6d4:	cmp    DWORD PTR ds:0x430014,0x0
  40e6db:	je     0x40e718
  40e6e1:	cmp    DWORD PTR ds:0x430014,0x2c
  40e6e8:	jb     0x40e718
  40e6ee:	jmp    0x40e706
  40e6f3:	push   0x5604
  40e6f8:	push   DWORD PTR [ebp-0x10]
  40e6fb:	push   0x5bf9
  40e700:	call   DWORD PTR ds:0x4348c7
  40e706:	mov    edx,DWORD PTR ds:0x430014
  40e70c:	dec    edx
  40e70d:	mov    DWORD PTR ds:0x430014,edx
  40e713:	jmp    0x40e6d4
  40e718:	lea    eax,[ebp-0xc]
  40e71b:	sub    ecx,ecx
  40e71d:	mov    DWORD PTR [ebp-0x14],eax
  40e720:	sbb    edx,ecx
  40e722:	mov    eax,DWORD PTR [ebp-0xc]
  40e725:	mov    edx,DWORD PTR [ebp-0x14]
  40e728:	xor    ecx,0x2f7f
  40e72e:	mov    ecx,0x751089d
  40e733:	sbb    DWORD PTR ds:0x42e010,0xf56
  40e73d:	xor    eax,ecx
  40e73f:	xor    DWORD PTR ds:0x431010,0x42f00c
  40e749:	add    eax,0x3272e4
  40e74e:	mov    DWORD PTR [edx],eax
  40e750:	mov    eax,ds:0x43414f
  40e755:	mov    edx,DWORD PTR [ebp-0x4]
  40e758:	mov    eax,DWORD PTR [eax]
  40e75a:	add    eax,DWORD PTR [edx]
  40e75c:	adc    edx,DWORD PTR ds:0x42f00c
  40e762:	push   edi
  40e763:	mov    edx,DWORD PTR ds:0x42e010
  40e769:	adc    DWORD PTR ds:0x42f010,edx
  40e76f:	mov    DWORD PTR [ebp-0x8],eax
  40e772:	sbb    edx,eax
  40e774:	mov    edi,DWORD PTR [ebp+0x8]
  40e777:	mov    edx,DWORD PTR ds:0x42e01c
  40e77d:	sub    DWORD PTR ds:0x431018,edx
  40e783:	mov    eax,ds:0x4342d7
  40e788:	mov    eax,DWORD PTR [eax+0x198]
  40e78e:	xor    edi,ecx
  40e790:	mov    edx,0x3272e4
  40e795:	add    DWORD PTR ds:0x432000,0x559c
  40e79f:	add    edi,edx
  40e7a1:	mov    DWORD PTR ds:0x42f01c,0x7a9a
  40e7ab:	cmp    DWORD PTR [eax],edi
  40e7ad:	mov    DWORD PTR ds:0x432018,0x2065
  40e7b7:	je     0x40e7c4
  40e7bd:	mov    eax,DWORD PTR [eax]
  40e7bf:	jmp    0x40eb48
  40e7c4:	mov    DWORD PTR ds:0x430014,0x19b0
  40e7ce:	mov    eax,DWORD PTR [ebp+0x18]
  40e7d1:	cmp    eax,esi
  40e7d3:	mov    DWORD PTR ds:0x430010,0x5283
  40e7dd:	jne    0x40e7f7
  40e7e3:	push   0xf89c8580
  40e7e8:	mov    DWORD PTR ds:0x42e008,0x5561
  40e7f2:	jmp    0x40eb37
  40e7f7:	mov    esi,DWORD PTR [ebp+0x18]
  40e7fa:	mov    DWORD PTR ds:0x431014,0x325b
  40e804:	mov    eax,0xf89c8583
  40e809:	mov    DWORD PTR ds:0x430010,0x6ef3
  40e813:	cmp    esi,eax
  40e815:	mov    DWORD PTR ds:0x43100c,0x3861
  40e81f:	jne    0x40eb27
  40e825:	and    DWORD PTR ds:0x431014,0x0
  40e82f:	mov    eax,ds:0x431014
  40e834:	inc    eax
  40e835:	mov    ds:0x431014,eax
  40e83a:	cmp    DWORD PTR ds:0x431014,0xc
  40e841:	jl     0x40e889
  40e847:	jmp    0x40e861
  40e84c:	push   0x7302
  40e851:	push   0x43200c
  40e856:	push   0x434105
  40e85b:	call   DWORD PTR ds:0x4348f3
  40e861:	cmp    DWORD PTR ds:0x431014,0xb
  40e868:	jne    0x40e87c
  40e86e:	xor    eax,eax
  40e870:	or     eax,DWORD PTR ds:0x431014
  40e876:	inc    eax
  40e877:	mov    ds:0x431014,eax
  40e87c:	cmp    DWORD PTR ds:0x431014,0x1a
  40e883:	jb     0x40e82f
  40e889:	mov    eax,DWORD PTR [ebp+0x10]
  40e88c:	xor    eax,ecx
  40e88e:	add    esi,0x7467
  40e894:	add    eax,edx
  40e896:	and    DWORD PTR ds:0x431004,0x42e014
  40e8a0:	mov    DWORD PTR [ebp-0x18],eax
  40e8a3:	or     DWORD PTR ds:0x42f010,0x747e
  40e8ad:	mov    eax,DWORD PTR [ebp+0xc]
  40e8b0:	adc    esi,0x7f18
  40e8b6:	mov    esi,DWORD PTR [ebp-0x8]
  40e8b9:	xor    eax,ecx
  40e8bb:	or     DWORD PTR ds:0x430014,0x1014
  40e8c5:	add    eax,edx
  40e8c7:	mov    DWORD PTR ds:0x432000,0x725d
  40e8d1:	imul   eax,DWORD PTR [esi]
  40e8d4:	and    DWORD PTR ds:0x42f004,0x0
  40e8de:	jmp    0x40e8f0
  40e8e3:	mov    esi,DWORD PTR ds:0x42f004
  40e8e9:	inc    esi
  40e8ea:	mov    DWORD PTR ds:0x42f004,esi
  40e8f0:	cmp    DWORD PTR ds:0x42f004,0x1f
  40e8f7:	jae    0x40e94e
  40e8fd:	cmp    DWORD PTR ds:0x42f004,0x4
  40e904:	jge    0x40e94e
  40e90a:	jmp    0x40e92f
  40e90f:	push   0x1e35
  40e914:	push   0x4340ed
  40e919:	push   0x4e7c
  40e91e:	push   0x434105
  40e923:	push   DWORD PTR [ebp-0x28]
  40e926:	push   DWORD PTR [ebp-0x10]
  40e929:	call   DWORD PTR ds:0x4348f7
  40e92f:	cmp    DWORD PTR ds:0x42f004,0x3
  40e936:	jne    0x40e949
  40e93c:	mov    esi,DWORD PTR ds:0x42f004
  40e942:	inc    esi
  40e943:	mov    DWORD PTR ds:0x42f004,esi
  40e949:	jmp    0x40e8e3
  40e94e:	mov    esi,DWORD PTR [ebp+0x8]
  40e951:	adc    DWORD PTR ds:0x43201c,0x42e01c
  40e95b:	xor    esi,ecx
  40e95d:	mov    DWORD PTR ds:0x42e028,0x65d7
  40e967:	add    esi,edx
  40e969:	cmp    esi,eax
  40e96b:	not    DWORD PTR ds:0x42f008
  40e971:	mov    eax,DWORD PTR [ebp-0x4]
  40e974:	mov    DWORD PTR ds:0x432000,0x15b7
  40e97e:	push   ebx
  40e97f:	je     0x40e9c8
  40e985:	adc    DWORD PTR ds:0x42e004,edx
  40e98b:	mov    esi,DWORD PTR [ebp-0x18]
  40e98e:	adc    DWORD PTR ds:0x432008,0x42e020
  40e998:	add    DWORD PTR [eax],esi
  40e99a:	add    DWORD PTR ds:0x431018,0x5c37
  40e9a4:	mov    eax,DWORD PTR [ebp-0x4]
  40e9a7:	or     esi,0x3712
  40e9ad:	mov    esi,DWORD PTR [ebp+0xc]
  40e9b0:	xor    DWORD PTR ds:0x431004,0x42e000
  40e9ba:	xor    esi,ecx
  40e9bc:	add    esi,edx
  40e9be:	imul   esi,DWORD PTR [eax]
  40e9c1:	mov    DWORD PTR [eax],esi
  40e9c3:	jmp    0x40e9cd
  40e9c8:	mov    esi,DWORD PTR [ebp+0x14]
  40e9cb:	xor    DWORD PTR [eax],esi
  40e9cd:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d0:	mov    edi,DWORD PTR [ebp+0x10]
  40e9d3:	xor    edi,ecx
  40e9d5:	mov    esi,0xffcd8d1c
  40e9da:	mov    ebx,esi
  40e9dc:	sub    ebx,edi
  40e9de:	add    DWORD PTR [eax],ebx
  40e9e0:	mov    eax,DWORD PTR [ebp-0x4]
  40e9e3:	mov    edi,DWORD PTR [ebp-0x8]
  40e9e6:	add    edi,DWORD PTR [eax]
  40e9e8:	mov    DWORD PTR [ebp-0x8],edi
  40e9eb:	mov    eax,DWORD PTR [ebp+0xc]
  40e9ee:	mov    edi,DWORD PTR [ebp+0xc]
  40e9f1:	xor    edi,ecx
  40e9f3:	xor    eax,ecx
  40e9f5:	lea    eax,[eax+edi*1+0x64e5c8]
  40e9fc:	mov    edi,DWORD PTR [ebp+0xc]
  40e9ff:	xor    edi,ecx
  40ea01:	add    edi,edx
  40ea03:	imul   eax,edi
  40ea06:	mov    edi,DWORD PTR [ebp+0xc]
  40ea09:	xor    edi,ecx
  40ea0b:	sub    edi,eax
  40ea0d:	mov    eax,DWORD PTR [ebp-0x4]
  40ea10:	add    edi,edx
  40ea12:	cmp    DWORD PTR [eax],edi
  40ea14:	mov    eax,DWORD PTR [ebp-0x4]
  40ea17:	mov    edi,DWORD PTR [ebp+0x10]
  40ea1a:	jg     0x40ea2d
  40ea20:	xor    edi,ecx
  40ea22:	mov    ebx,esi
  40ea24:	sub    ebx,edi
  40ea26:	add    DWORD PTR [eax],ebx
  40ea28:	jmp    0x40ea33
  40ea2d:	xor    edi,ecx
  40ea2f:	add    edi,edx
  40ea31:	add    DWORD PTR [eax],edi
  40ea33:	mov    eax,DWORD PTR [ebp-0x8]
  40ea36:	mov    edi,DWORD PTR [ebp-0x10]
  40ea39:	mov    eax,DWORD PTR [eax]
  40ea3b:	xor    edi,ecx
  40ea3d:	add    edi,0x3272e3
  40ea43:	not    edi
  40ea45:	and    eax,edi
  40ea47:	movsx  di,BYTE PTR [eax+0x1]
  40ea4c:	mov    ebx,0x3b52
  40ea51:	sub    di,bx
  40ea54:	mov    ebx,0x8a8e
  40ea59:	xor    di,bx
  40ea5c:	mov    ebx,0x4f86
  40ea61:	cmp    di,bx
  40ea64:	jne    0x40ea8c
  40ea6a:	movsx  di,BYTE PTR [eax]
  40ea6e:	mov    ebx,0x3b52
  40ea73:	sub    di,bx
  40ea76:	mov    ebx,0x8a8e
  40ea7b:	xor    di,bx
  40ea7e:	mov    ebx,0x4e75
  40ea83:	cmp    di,bx
  40ea86:	je     0x40ea9c
  40ea8c:	mov    edi,DWORD PTR [ebp-0x10]
  40ea8f:	xor    edi,ecx
  40ea91:	mov    ebx,esi
  40ea93:	sub    ebx,edi
  40ea95:	add    eax,ebx
  40ea97:	jmp    0x40ea47
  40ea9c:	mov    esi,DWORD PTR [ebp-0x14]
  40ea9f:	mov    esi,DWORD PTR [esi]
  40eaa1:	mov    edi,DWORD PTR [eax+0x3c]
  40eaa4:	lea    esi,[edi+esi*8+0x78]
  40eaa8:	mov    esi,DWORD PTR [esi+eax*1]
  40eaab:	mov    DWORD PTR [ebp-0x8],esi
  40eaae:	mov    esi,DWORD PTR [ebp+0x8]
  40eab1:	xor    esi,ecx
  40eab3:	add    esi,edx
  40eab5:	mov    DWORD PTR [ebp-0x14],esi
  40eab8:	mov    esi,DWORD PTR [ebp+0x8]
  40eabb:	mov    edi,DWORD PTR [ebp-0x8]
  40eabe:	xor    esi,ecx
  40eac0:	add    esi,edx
  40eac2:	pop    ebx
  40eac3:	cmp    edi,esi
  40eac5:	jne    0x40eae3
  40eacb:	mov    eax,DWORD PTR [ebp+0xc]
  40eace:	xor    eax,ecx
  40ead0:	mov    ecx,DWORD PTR [ebp-0x8]
  40ead3:	add    eax,edx
  40ead5:	imul   eax,ecx
  40ead8:	mov    DWORD PTR [ebp-0x8],eax
  40eadb:	push   DWORD PTR [ebp+0x18]
  40eade:	jmp    0x40eb37
  40eae3:	mov    ecx,DWORD PTR [ebp-0x8]
  40eae6:	add    ecx,eax
  40eae8:	mov    DWORD PTR [ebp-0x14],ecx
  40eaeb:	mov    ecx,DWORD PTR [ebp-0x14]
  40eaee:	mov    ecx,DWORD PTR [ecx+0xc]
  40eaf1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40eaf6:	mov    edx,0x3b52
  40eafb:	sub    cx,dx
  40eafe:	mov    edx,0x8a8e
  40eb03:	xor    cx,dx
  40eb06:	mov    edx,0x4e77
  40eb0b:	cmp    cx,dx
  40eb0e:	jne    0x40eadb
  40eb14:	mov    ecx,DWORD PTR ds:0x4342d7
  40eb1a:	mov    ecx,DWORD PTR [ecx+0x198]
  40eb20:	mov    DWORD PTR [ecx],eax
  40eb22:	jmp    0x40eb48
  40eb27:	mov    ecx,DWORD PTR [ebp+0x18]
  40eb2a:	cmp    ecx,0xf89c8580
  40eb30:	jne    0x40eb48
  40eb36:	push   eax
  40eb37:	push   DWORD PTR [ebp+0x14]
  40eb3a:	push   DWORD PTR [ebp+0x10]
  40eb3d:	push   DWORD PTR [ebp+0xc]
  40eb40:	push   DWORD PTR [ebp+0x8]
  40eb43:	call   0x40e5e8
  40eb48:	pop    edi
  40eb49:	pop    esi
  40eb4a:	leave  
  40eb4b:	ret    0x14
  40eb4e:	push   ebp
  40eb4f:	mov    ebp,esp
  40eb51:	sub    esp,0xc
  40eb54:	sbb    edx,edx
  40eb56:	push   esi
  40eb57:	add    DWORD PTR ds:0x42e028,ebx
  40eb5d:	mov    esi,0xf89c8581
  40eb62:	mov    DWORD PTR ds:0x430014,0x17
  40eb6c:	cmp    DWORD PTR ds:0x430014,0x0
  40eb73:	je     0x40ebd3
  40eb79:	cmp    DWORD PTR ds:0x430014,0x4
  40eb80:	jg     0x40ebd3
  40eb86:	jmp    0x40eba3
  40eb8b:	push   0x42f018
  40eb90:	push   0x49bf
  40eb95:	push   0x8fc2
  40eb9a:	push   DWORD PTR [ebp-0x10]
  40eb9d:	call   DWORD PTR ds:0x4348cb
  40eba3:	cmp    DWORD PTR ds:0x430014,0x5
  40ebaa:	jne    0x40ebbf
  40ebb0:	xor    edx,edx
  40ebb2:	xor    edx,DWORD PTR ds:0x430014
  40ebb8:	dec    edx
  40ebb9:	mov    DWORD PTR ds:0x430014,edx
  40ebbf:	xor    edx,edx
  40ebc1:	add    edx,DWORD PTR ds:0x430014
  40ebc7:	dec    edx
  40ebc8:	mov    DWORD PTR ds:0x430014,edx
  40ebce:	jmp    0x40eb6c
  40ebd3:	mov    DWORD PTR [ebp-0x8],esi
  40ebd6:	mov    DWORD PTR [ebp-0x4],0xf89c8580
  40ebdd:	push   edi
  40ebde:	inc    edi
  40ebdf:	mov    eax,eax
  40ebe1:	mov    eax,DWORD PTR [ebp-0x4]
  40ebe4:	and    DWORD PTR ds:0x43201c,0x0
  40ebee:	mov    edx,DWORD PTR ds:0x43201c
  40ebf4:	inc    edx
  40ebf5:	mov    DWORD PTR ds:0x43201c,edx
  40ebfb:	cmp    DWORD PTR ds:0x43201c,0x6
  40ec02:	jge    0x40ec3f
  40ec08:	jmp    0x40ec18
  40ec0d:	push   0x29a4
  40ec12:	call   DWORD PTR ds:0x4348cf
  40ec18:	cmp    DWORD PTR ds:0x43201c,0x5
  40ec1f:	jne    0x40ec32
  40ec25:	mov    edx,DWORD PTR ds:0x43201c
  40ec2b:	inc    edx
  40ec2c:	mov    DWORD PTR ds:0x43201c,edx
  40ec32:	cmp    DWORD PTR ds:0x43201c,0x1f
  40ec39:	jb     0x40ebee
  40ec3f:	mov    edi,DWORD PTR [ebp-0x8]
  40ec42:	mov    ecx,0x751089d
  40ec47:	mov    edx,DWORD PTR ds:0x42f000
  40ec4d:	sub    DWORD PTR ds:0x43000c,edx
  40ec53:	jmp    0x410fbf
  40ec58:	xor    BYTE PTR [eax],cl
  40ec5a:	(bad)  
  40ec5c:	test   DWORD PTR [ebx+0x73],esi
  40ec5f:	or     BYTE PTR [ebx],bl
  40ec61:	loope  0x40ec3d
  40ec63:	lds    esi,FWORD PTR [eax+0x18]
  40ec66:	sub    BYTE PTR [ebx],0x32
  40ec69:	int    0x72
  40ec6b:	jb     0x40ec90
  40ec6d:	pop    edi
  40ec6e:	jb     0x40ece2
  40ec70:	pop    ss
  40ec71:	xchg   BYTE PTR [ecx-0x36],dl
  40ec74:	push   esp
  40ec75:	and    al,0xe2
  40ec77:	(bad)  
  40ec78:	shl    DWORD PTR [ebx+ebp*2],1
  40ec7b:	idiv   al
  40ec7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec7e:	mov    cl,0xb7
  40ec80:	ds sub bh,ah
  40ec83:	pop    esi
  40ec84:	in     al,dx
  40ec85:	mov    ebp,0x2f8c0cd3
  40ec8a:	into   
  40ec8b:	scas   eax,DWORD PTR es:[edi]
  40ec8c:	lods   eax,DWORD PTR ds:[esi]
  40ec8d:	icebp  
  40ec8e:	sbb    BYTE PTR [ebx+0x414c2bcf],bl
  40ec94:	rep stos BYTE PTR es:[edi],al
  40ec96:	pop    ds
  40ec97:	jmp    0x40ecd6
  40ec99:	jmp    0x3d61:0x56397064
  40eca0:	or     al,0x18
  40eca2:	mov    edx,0x50aa5370
  40eca7:	daa    
  40eca8:	adc    al,0x35
  40ecaa:	jge    0x40ecb2
  40ecac:	mov    ds,WORD PTR [ecx-0x3d]
  40ecaf:	ficomp WORD PTR [ebx-0x6db3da92]
  40ecb5:	sbb    dh,bl
  40ecb7:	in     eax,0xfb
  40ecb9:	cmp    al,0x60
  40ecbb:	jp     0x40ec95
  40ecbd:	icebp  
  40ecbe:	inc    edx
  40ecbf:	or     eax,0xe52cb63e
  40ecc4:	out    dx,eax
  40ecc5:	mov    WORD PTR [ebx],?
  40ecc7:	repz idiv DWORD PTR [esi+0x17a1de7]
  40ecce:	dec    ebx
  40eccf:	and    dh,BYTE PTR [ecx]
  40ecd1:	loopne 0x40ec72
  40ecd3:	sbb    eax,0x8beb6f66
  40ecd8:	jnp    0x40eca2
  40ecda:	pop    edx
  40ecdb:	pop    esp
  40ecdc:	add    al,0x81
  40ecde:	xchg   edi,eax
  40ecdf:	sub    eax,0x2aa14949
  40ece4:	sub    BYTE PTR [edi-0x59cad66b],ch
  40ecea:	jecxz  0x40ed0f
  40ecec:	cmp    bh,bh
  40ecee:	(bad)  
  40ecf0:	xor    eax,0x16521905
  40ecf5:	jbe    0x40ed70
  40ecf7:	pop    es
  40ecf8:	mov    esi,ebx
  40ecfa:	push   edi
  40ecfb:	enter  0x8c02,0xa0
  40ecff:	popf   
  40ed00:	pusha  
  40ed01:	lods   al,BYTE PTR ds:[esi]
  40ed02:	shld   ebp,ebx,0x46
  40ed06:	xchg   DWORD PTR [ebx+0x6157e862],eax
  40ed0c:	push   edx
  40ed0d:	pop    ds
  40ed0e:	sbb    BYTE PTR [edi],bh
  40ed10:	loop   0x40ecd5
  40ed12:	add    BYTE PTR ds:0x61427e22,ah
  40ed18:	xchg   DWORD PTR [esp+ebx*8],ebx
  40ed1b:	ror    DWORD PTR [edi],0x16
  40ed1e:	mov    esp,edx
  40ed20:	push   DWORD PTR ds:0x304a729f
  40ed26:	jnp    0x40ecd4
  40ed28:	dec    ebx
  40ed29:	pop    es
  40ed2a:	push   0x5c
  40ed2c:	xchg   ebp,eax
  40ed2d:	cmc    
  40ed2e:	jb     0x40ed86
  40ed30:	lds    eax,FWORD PTR [ebp-0x2c]
  40ed33:	mov    edx,0xc9e3ac6e
  40ed38:	sbb    ebx,ebp
  40ed3a:	cld    
  40ed3b:	pop    ecx
  40ed3c:	mov    eax,0x54e454b1
  40ed41:	repnz out dx,al
  40ed43:	shl    BYTE PTR [ebp+0x54],1
  40ed46:	adc    edi,DWORD PTR [edx]
  40ed48:	int    0x70
  40ed4a:	inc    ebp
  40ed4b:	stos   BYTE PTR es:[edi],al
  40ed4c:	stos   BYTE PTR es:[edi],al
  40ed4d:	and    dl,BYTE PTR [esp+eax*4+0x4cd40b00]
  40ed54:	fs pop ebx
  40ed56:	int    0xe8
  40ed58:	test   DWORD PTR [ebx-0x76],ecx
  40ed5b:	call   0xe39fbc87
  40ed60:	cmp    ah,BYTE PTR [ecx+0x7730a31a]
  40ed66:	pop    edx
  40ed67:	es jo  0x40ed7e
  40ed6a:	popf   
  40ed6b:	fadd   st,st(5)
  40ed6d:	adc    ch,BYTE PTR [edx+0x74fde113]
  40ed73:	ins    DWORD PTR es:[edi],dx
  40ed74:	cli    
  40ed75:	sbb    cl,BYTE PTR [edx+0x54]
  40ed78:	add    al,0x38
  40ed7a:	repz and ah,BYTE PTR ss:[eax+0x521c7d26]
  40ed82:	fwait
  40ed83:	loopne 0x40ed99
  40ed85:	inc    eax
  40ed86:	jae    0x40edeb
  40ed88:	lahf   
  40ed89:	mov    ds:0x1d967889,eax
  40ed8e:	and    BYTE PTR [ebx+0x36],ch
  40ed91:	xor    esp,DWORD PTR [ebp+0x3670024c]
  40ed97:	loopne 0x40ee0c
  40ed99:	test   DWORD PTR [eax-0x39],eax
  40ed9c:	cmp    ah,BYTE PTR fs:[esp+ebp*1-0x5532c47a]
  40eda4:	lea    ebp,[ecx+0xdfa767]
  40edaa:	fild   WORD PTR [ebx+0xe86f25f]
  40edb0:	dec    esp
  40edb1:	shr    BYTE PTR [eax+0xf],0xa1
  40edb5:	outs   dx,DWORD PTR ds:[esi]
  40edb6:	adc    DWORD PTR [esi+0xe],eax
  40edb9:	mov    bl,0x49
  40edbb:	push   eax
  40edbc:	aam    0x37
  40edbe:	jge    0x40ed5e
  40edc0:	inc    ebp
  40edc1:	mov    ch,0xce
  40edc3:	inc    edx
  40edc4:	add    bl,al
  40edc6:	(bad)  
  40edc7:	fldcw  WORD PTR [edx+0x6]
  40edca:	push   0xffffffdc
  40edcc:	push   eax
  40edcd:	adc    eax,0xd4c1ce52
  40edd2:	mov    dh,0x6a
  40edd4:	in     al,0xc5
  40edd6:	mov    dh,BYTE PTR [edi+0x29f6bbc5]
  40eddc:	xor    BYTE PTR ds:0x4d8aa24b,cl
  40ede2:	pop    edi
  40ede3:	xor    eax,0xb6537f7a
  40ede8:	xchg   edx,eax
  40ede9:	out    dx,al
  40edea:	push   esp
  40edeb:	inc    esp
  40edec:	fstp   QWORD PTR [esi-0x59caf060]
  40edf2:	sub    ch,BYTE PTR [esi+0x64cac81]
  40edf8:	pushf  
  40edf9:	add    eax,DWORD PTR [esi+0x73]
  40edfc:	dec    eax
  40edfd:	bswap  esi
  40edff:	ret    
  40ee00:	pushf  
  40ee01:	cmp    BYTE PTR [edi+eiz*2-0x70],al
  40ee05:	in     al,dx
  40ee06:	sub    BYTE PTR [esi*4+0x552a3ec8],bl
  40ee0d:	xor    eax,0xb8a310f8
  40ee12:	xchg   esi,eax
  40ee13:	pminsw mm0,QWORD PTR [eax]
  40ee16:	sbb    BYTE PTR [esi+0x5db57537],ch
  40ee1c:	rcr    BYTE PTR [eax-0x5bab5ba3],0x74
  40ee23:	cdq    
  40ee24:	jo     0x40eddc
  40ee26:	fnstenv [eax-0x75]
  40ee29:	popf   
  40ee2a:	loope  0x40ee08
  40ee2c:	mov    ecx,0xba3cb18d
  40ee31:	cmp    dl,al
  40ee33:	popf   
  40ee34:	add    al,0x53
  40ee36:	leave  
  40ee37:	lods   eax,DWORD PTR ds:[esi]
  40ee38:	or     ebp,edi
  40ee3a:	sbb    eax,0xb119f318
  40ee3f:	rcr    DWORD PTR [ecx-0x34],0x64
  40ee43:	jp     0x40eebe
  40ee45:	test   BYTE PTR [esi],cl
  40ee47:	or     ch,BYTE PTR [edi]
  40ee49:	lea    ecx,[ebx-0x1d]
  40ee4c:	je     0x40eeb7
  40ee4e:	inc    ebx
  40ee4f:	retf   0xe1f2
  40ee52:	sbb    esp,ebp
  40ee54:	mov    dl,0x9f
  40ee56:	xchg   ebp,eax
  40ee57:	mov    ?,WORD PTR [edi]
  40ee59:	(bad)  
  40ee5a:	int    0x27
  40ee5c:	xchg   edi,eax
  40ee5d:	pushf  
  40ee5e:	rol    DWORD PTR [ebp-0x203d514d],1
  40ee64:	add    BYTE PTR [eax],dh
  40ee66:	(bad)  
  40ee68:	adc    eax,0xfc8d19e8
  40ee6d:	sub    DWORD PTR [eax-0x5aa33f3d],eax
  40ee73:	int3   
  40ee74:	lock adc dl,BYTE PTR [esi+0x35]
  40ee78:	popf   
  40ee79:	inc    esp
  40ee7a:	jo     0x40ee3e
  40ee7c:	mov    cl,0x0
  40ee7e:	sbb    ebp,esp
  40ee80:	ror    DWORD PTR [bp+si+0x2684],cl
  40ee85:	fcom   st(1)
  40ee87:	icebp  
  40ee88:	repz pop edi
  40ee8a:	das    
  40ee8b:	pop    ebp
  40ee8c:	neg    DWORD PTR [ecx+0x6562299f]
  40ee92:	jae    0x40ef13
  40ee94:	push   0xdd73b230
  40ee99:	mov    edx,0xcd0991c3
  40ee9e:	mov    ecx,0x43131c07
  40eea3:	hlt    
  40eea4:	add    eax,0x68677153
  40eea9:	sub    DWORD PTR [ecx-0x24],edi
  40eeac:	jb     0x40ee8c
  40eeae:	ficom  WORD PTR [esi]
  40eeb0:	pop    edi
  40eeb1:	in     eax,dx
  40eeb2:	mov    bl,0xb9
  40eeb4:	dec    edi
  40eeb5:	es push 0xffffff83
  40eeb8:	aam    0xea
  40eeba:	inc    ebp
  40eebb:	sub    DWORD PTR [ebp+0x23d05452],esp
  40eec1:	es jo  0x40eefe
  40eec4:	mov    esi,DWORD PTR ds:0x8619ab91
  40eeca:	or     DWORD PTR [ebx-0x493aa9a9],eax
  40eed0:	iret   
  40eed1:	mov    esp,0x9a141237
  40eed6:	lods   ax,WORD PTR ds:[esi]
  40eed8:	and    DWORD PTR [ecx],edi
  40eeda:	shl    esi,cl
  40eedc:	sbb    eax,0xeb70caa
  40eee1:	repz add dh,ah
  40eee4:	dec    DWORD PTR [edi+ecx*1]
  40eee7:	jecxz  0x40ef1a
  40eee9:	pop    ecx
  40eeea:	xor    BYTE PTR [esi],bl
  40eeec:	jp     0x40eecb
  40eeee:	(bad)  
  40eeef:	lock test DWORD PTR [esi+eiz*2-0x3c],edi
  40eef4:	leave  
  40eef5:	cmp    eax,0x8929591c
  40eefa:	mov    ebx,DWORD PTR [ebp+0xc8dd161]
  40ef00:	mov    al,0x9f
  40ef02:	jb     0x40ef29
  40ef04:	dec    ebp
  40ef05:	fnstcw WORD PTR [ebx+0x2604d6a5]
  40ef0b:	js     0x40ef0e
  40ef0d:	test   eax,0x65de0127
  40ef12:	xor    esp,DWORD PTR es:[edi]
  40ef15:	mov    ebx,0x3f4927ab
  40ef1a:	add    DWORD PTR [esi+0x5d],ebx
  40ef1d:	cmp    edx,ebp
  40ef1f:	test   DWORD PTR [ebp-0x2c],edi
  40ef22:	pop    ebx
  40ef23:	adc    dh,cl
  40ef25:	jecxz  0x40ef76
  40ef27:	jns    0x40ef4f
  40ef29:	fwait
  40ef2a:	scas   eax,DWORD PTR es:[edi]
  40ef2b:	bound  ecx,QWORD PTR [ecx+edx*1]
  40ef2e:	repnz fcomp QWORD PTR [esi+0x5d3fff4e]
  40ef35:	sbb    al,BYTE PTR [edi-0x5c5e9852]
  40ef3b:	out    0x3e,al
  40ef3d:	mov    bh,0x9
  40ef3f:	mov    eax,0xd5c7324a
  40ef44:	add    edi,DWORD PTR ds:0x64a3b088
  40ef4a:	push   esp
  40ef4b:	inc    ebp
  40ef4c:	inc    ebp
  40ef4d:	xor    BYTE PTR [edi+0x4b5838d0],bh
  40ef53:	aas    
  40ef54:	jns    0x40ef46
  40ef56:	xchg   BYTE PTR [ecx+0x70],bh
  40ef59:	xor    BYTE PTR [ebx-0x4dbfc89],ch
  40ef5f:	sub    eax,0xccb129c5
  40ef64:	xor    al,0x59
  40ef66:	shr    ah,0x12
  40ef69:	gs dec edx
  40ef6b:	mov    esp,DWORD PTR [edi+0x3f]
  40ef6e:	xchg   DWORD PTR [ebx-0x25badb79],ebp
  40ef74:	sbb    dh,dh
  40ef76:	lea    edi,[edx-0x19de609a]
  40ef7c:	scas   al,BYTE PTR es:[edi]
  40ef7d:	add    al,0x67
  40ef7f:	sub    edx,DWORD PTR [eax-0x528a446]
  40ef85:	cdq    
  40ef86:	cmp    BYTE PTR ds:0xeff00517,bh
  40ef8c:	adc    eax,0xbc8f518c
  40ef91:	lahf   
  40ef92:	icebp  
  40ef93:	pop    ds
  40ef94:	dec    esi
  40ef95:	rol    DWORD PTR [edi+0x70],1
  40ef98:	out    dx,al
  40ef99:	xchg   edx,eax
  40ef9a:	xor    al,0x8c
  40ef9c:	mov    ds:0xa04be2dd,eax
  40efa1:	out    dx,eax
  40efa2:	cmp    eax,0x62058088
  40efa7:	xchg   ebp,eax
  40efa8:	jmp    0x98513504
  40efad:	test   al,0x28
  40efaf:	ins    DWORD PTR es:[edi],dx
  40efb0:	ss cs loope 0x40efc3
  40efb4:	xchg   ecx,eax
  40efb5:	leave  
  40efb6:	sar    BYTE PTR [edi+0x459bf707],cl
  40efbc:	imul   ebp,DWORD PTR [eax+edi*8+0x10],0xcff57a6c
  40efc4:	sub    BYTE PTR [edx+0x66],bl
  40efc7:	xchg   esi,eax
  40efc8:	js     0x40f008
  40efca:	scas   al,BYTE PTR es:[edi]
  40efcb:	ss jp  0x40ef7c
  40efce:	dec    esi
  40efcf:	(bad)  
  40efd0:	push   eax
  40efd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efd2:	test   eax,0x133542fb
  40efd7:	leave  
  40efd8:	sub    DWORD PTR [eax+0x16eea332],esp
  40efde:	gs (bad) 
  40efe0:	mov    edi,0xf62311c7
  40efe5:	sahf   
  40efe6:	scas   al,BYTE PTR es:[edi]
  40efe7:	cmp    dl,BYTE PTR [esi+0x55]
  40efea:	mov    esp,0x249dbbca
  40efef:	or     BYTE PTR [ebx-0x3c4a3546],dl
  40eff5:	ss add ah,ch
  40eff8:	cmp    al,0x73
  40effa:	dec    esp
  40effb:	inc    dx
  40effd:	xor    al,0x98
  40efff:	das    
  40f000:	jl     0x40efe8
  40f002:	mov    bh,0x35
  40f004:	add    eax,0x9a903e5c
  40f009:	aas    
  40f00a:	jns    0x40efdc
  40f00c:	test   al,0xe3
  40f00e:	lods   eax,DWORD PTR ds:[esi]
  40f00f:	ja     0x40f037
  40f011:	sub    al,0xb
  40f013:	dec    ebp
  40f014:	lahf   
  40f015:	or     esi,DWORD PTR [edx+0x266b6084]
  40f01b:	mov    al,0xb0
  40f01d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f01e:	mov    ebx,0xc9ce6abe
  40f023:	retf   0x60fc
  40f026:	pop    edi
  40f027:	in     eax,dx
  40f028:	sub    al,ah
  40f02a:	les    edx,FWORD PTR [ebp-0x1793b9a5]
  40f030:	nop
  40f031:	mov    cs,WORD PTR [eax-0x8]
  40f034:	sub    BYTE PTR [ecx],0x1c
  40f037:	jg     0x40f0a3
  40f039:	mov    ebx,0x46b546e2
  40f03e:	scas   al,BYTE PTR es:[edi]
  40f03f:	or     eax,DWORD PTR [ebx]
  40f041:	ja     0x40f0b5
  40f043:	fwait
  40f044:	cmp    eax,0x9604cffa
  40f049:	ins    DWORD PTR es:[edi],dx
  40f04a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f04c:	mov    edx,0xa74c1b17
  40f051:	mov    edx,0xbe83f16e
  40f056:	sub    eax,0x4ba2b5a2
  40f05b:	dec    edx
  40f05c:	lods   al,BYTE PTR ds:[esi]
  40f05d:	mov    esp,0xb88d5349
  40f062:	pushf  
  40f063:	push   ebx
  40f064:	add    esp,ecx
  40f066:	popf   
  40f067:	adc    BYTE PTR [ebx+ecx*8],bl
  40f06a:	imul   esi,esp,0x6381df44
  40f070:	mov    edi,0x17eac61b
  40f075:	jbe    0x40f050
  40f077:	adc    eax,0x6bd016c7
  40f07c:	lea    esi,[edi+ebx*8+0x3c]
  40f080:	jno    0x40f03a
  40f082:	shr    DWORD PTR [ebx-0x28],cl
  40f085:	xor    cl,BYTE PTR [ecx+0x2aecfc0b]
  40f08b:	(bad)  
  40f08d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f08e:	sbb    BYTE PTR [esi+0x21],ah
  40f091:	or     eax,0xca41bd95
  40f096:	rcr    DWORD PTR [edx+0x22],1
  40f099:	shl    DWORD PTR [ecx-0x20b9e3fd],0x5f
  40f0a0:	cdq    
  40f0a1:	je     0x40f0ee
  40f0a3:	pop    es
  40f0a4:	je     0x40f057
  40f0a6:	pusha  
  40f0a7:	jmp    0x1123:0xd02d7630
  40f0ae:	sar    ebp,cl
  40f0b0:	cmp    ah,BYTE PTR [edi-0x6b726147]
  40f0b6:	das    
  40f0b7:	nop
  40f0b8:	imul   eax,DWORD PTR [esi],0x6c74681e
  40f0be:	and    al,0x4
  40f0c0:	xor    ebp,esi
  40f0c2:	mov    al,0x30
  40f0c4:	adc    dh,ch
  40f0c6:	lods   al,BYTE PTR ds:[esi]
  40f0c7:	xor    eax,0x6f637490
  40f0cc:	sub    al,cl
  40f0ce:	jle    0x40f07d
  40f0d0:	sub    ch,BYTE PTR [ebx+0x640d1c4e]
  40f0d6:	loopne 0x40f078
  40f0d8:	das    
  40f0d9:	jle    0x40f05e
  40f0db:	inc    ebx
  40f0dc:	jl     0x40f147
  40f0de:	add    al,0xd7
  40f0e0:	aad    0xae
  40f0e2:	and    ebx,DWORD PTR [edx+edi*8+0x44fc33c9]
  40f0e9:	jno    0x40f08a
  40f0eb:	pop    ebp
  40f0ec:	inc    eax
  40f0ed:	xlat   BYTE PTR ds:[ebx]
  40f0ee:	or     BYTE PTR [esi+0x1c25d897],cl
  40f0f4:	dec    ebx
  40f0f5:	and    edi,ecx
  40f0f7:	ret    0x111c
  40f0fa:	inc    ebx
  40f0fb:	mov    edx,0x9aa20f2f
  40f100:	cdq    
  40f101:	mov    cs,WORD PTR [edx-0xcee0172]
  40f107:	clc    
  40f108:	pop    ss
  40f109:	cmc    
  40f10a:	test   eax,0x975ef97
  40f10f:	fwait
  40f110:	sbb    dl,BYTE PTR [esi-0x1f1d6d50]
  40f116:	cli    
  40f117:	nop
  40f118:	mov    eax,DWORD PTR [esi]
  40f11a:	mov    ebx,0x571c9433
  40f11f:	adc    BYTE PTR [edi+ecx*2+0x2bb0400e],ch
  40f126:	xor    DWORD PTR [ebp+edx*2+0x75],edx
  40f12a:	imul   edx,DWORD PTR [esi],0xfffffff7
  40f12d:	sti    
  40f12e:	inc    edi
  40f12f:	xor    al,0x5b
  40f131:	fild   DWORD PTR [ebp-0x1f6fa70d]
  40f137:	add    al,0x41
  40f139:	test   edx,ebx
  40f13b:	lsl    esp,cx
  40f13e:	adc    esi,DWORD PTR [esi]
  40f140:	jl     0x40f147
  40f142:	and    esi,DWORD PTR [ecx+0x500dc47d]
  40f148:	and    DWORD PTR [edi+eiz*1-0xa1c1b39],0x43
  40f150:	shl    bh,1
  40f152:	pop    esi
  40f153:	mov    cl,BYTE PTR [edx]
  40f155:	sub    al,0x46
  40f157:	daa    
  40f158:	cmp    ah,dh
  40f15a:	clc    
  40f15b:	push   0xbe052046
  40f160:	inc    esp
  40f161:	(bad)  
  40f162:	fmul   QWORD PTR [esi-0xb]
  40f165:	aad    0xce
  40f167:	fidiv  WORD PTR [esi]
  40f169:	mulps  xmm5,XMMWORD PTR es:[ebx+0x72d01434]
  40f171:	popa   
  40f172:	hlt    
  40f173:	mov    esi,DWORD PTR [ebp-0x6345648]
  40f179:	lahf   
  40f17a:	fwait
  40f17b:	stos   DWORD PTR es:[edi],eax
  40f17c:	sar    BYTE PTR [ebx],1
  40f17e:	or     edx,DWORD PTR [esi+esi*8]
  40f181:	retf   0x2453
  40f184:	mov    esi,0xb0e242ef
  40f189:	jle    0x40f127
  40f18b:	(bad)  
  40f18d:	les    eax,FWORD PTR [esi+0x9]
  40f190:	(bad)  
  40f191:	popa   
  40f192:	dec    edi
  40f193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f194:	mov    ss,WORD PTR [eax-0x42]
  40f197:	jb     0x40f121
  40f199:	pop    es
  40f19a:	test   ch,dh
  40f19c:	push   esi
  40f19e:	sbb    BYTE PTR [edx-0x14],bh
  40f1a1:	aas    
  40f1a2:	test   al,0x7f
  40f1a4:	pop    ds
  40f1a5:	in     al,0xb7
  40f1a7:	push   0x1ba3d819
  40f1ac:	sbb    BYTE PTR [ebp-0x2daafd83],al
  40f1b2:	arpl   WORD PTR [edi],ax
  40f1b4:	inc    esp
  40f1b5:	mov    dh,0xb7
  40f1b7:	mov    dh,0xbd
  40f1b9:	out    dx,eax
  40f1ba:	adc    ebp,DWORD PTR [ebp+0x578bea6c]
  40f1c0:	dec    esi
  40f1c1:	adc    BYTE PTR [edi-0x71f121bb],0x51
  40f1c8:	mov    ebx,edx
  40f1ca:	(bad)
  40f1ce:	mov    dh,0x1b
  40f1d0:	push   0xe26b2c
  40f1d5:	pop    edx
  40f1d6:	leave  
  40f1d7:	gs (bad) 
  40f1d9:	xlat   BYTE PTR ds:[ebx]
  40f1da:	int3   
  40f1db:	push   edi
  40f1dc:	rcr    BYTE PTR ds:0x9b4e7d9e,cl
  40f1e2:	es in  eax,dx
  40f1e4:	repnz loopne 0x40f1ef
  40f1e7:	int    0xf2
  40f1e9:	int    0xc1
  40f1eb:	ret    
  40f1ec:	jbe    0x40f218
  40f1ee:	pop    ds
  40f1ef:	test   al,0x84
  40f1f1:	sub    esp,DWORD PTR [eax+0x18]
  40f1f4:	pop    edi
  40f1f5:	into   
  40f1f6:	icebp  
  40f1f7:	dec    eax
  40f1f8:	push   0x5a64cfaf
  40f1fd:	gs sub dl,bh
  40f200:	retf   0x9626
  40f203:	dec    edi
  40f204:	jno    0x40f25b
  40f206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f207:	jge    0x40f241
  40f209:	jae    0x40f263
  40f20b:	in     eax,0x88
  40f20d:	sbb    eax,DWORD PTR [esi]
  40f20f:	xlat   BYTE PTR ds:[ebx]
  40f210:	inc    ecx
  40f211:	sbb    al,BYTE PTR [ecx+0x71]
  40f214:	jmp    0x3273ab16
  40f219:	mov    al,0x0
  40f21b:	fcmovne st,st(6)
  40f21d:	dec    esi
  40f21e:	rcr    DWORD PTR [ecx+0x7efee052],0x55
  40f225:	xor    DWORD PTR [ebp+0x3d826d15],eax
  40f22b:	mov    eax,ds:0x83106b57
  40f230:	jno    0x40f23f
  40f232:	mov    bh,0x5e
  40f234:	cmp    BYTE PTR [edi+0x59],ch
  40f237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f238:	adc    dl,BYTE PTR [ebp+0x61]
  40f23b:	sti    
  40f23c:	mov    ebp,ebp
  40f23e:	dec    ah
  40f240:	push   ds
  40f241:	mov    al,ds:0xb76128e3
  40f246:	pop    esp
  40f247:	loop   0x40f245
  40f249:	outs   dx,DWORD PTR ds:[esi]
  40f24a:	div    DWORD PTR [ebx+edi*8]
  40f24d:	std    
  40f24e:	and    ch,BYTE PTR [edx-0x62]
  40f251:	mov    edx,0xafa85263
  40f256:	sbb    DWORD PTR [ebx+0x60],esi
  40f259:	scas   eax,DWORD PTR es:[edi]
  40f25a:	lock pop esp
  40f25c:	cmp    DWORD PTR [ebp-0x6980fb7f],esi
  40f262:	jge    0x40f29d
  40f264:	pop    ebx
  40f265:	fwait
  40f266:	dec    esi
  40f267:	call   0x468a:0x529dc024
  40f26e:	inc    eax
  40f26f:	inc    ebx
  40f270:	popf   
  40f271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f272:	push   esi
  40f273:	jno    0x40f240
  40f275:	push   ds
  40f276:	xor    cl,BYTE PTR [edi+0x4c85e66a]
  40f27c:	adc    al,BYTE PTR [ebp+0x30e5bc07]
  40f282:	mov    ah,0xb9
  40f284:	mov    eax,0x9fd6a5b2
  40f289:	add    eax,0xd62c9861
  40f28e:	push   es
  40f28f:	scas   eax,DWORD PTR es:[edi]
  40f290:	inc    ebp
  40f291:	cmc    
  40f292:	das    
  40f293:	outs   dx,DWORD PTR ds:[esi]
  40f294:	shl    BYTE PTR [esi-0x5f5d3928],cl
  40f29a:	jbe    0x40f27e
  40f29c:	repz sub dh,ah
  40f29f:	mov    al,0x1a
  40f2a1:	cmp    al,dh
  40f2a3:	add    al,0x54
  40f2a5:	call   0x95c40ace
  40f2aa:	or     edi,ecx
  40f2ac:	aad    0x6
  40f2ae:	or     al,ah
  40f2b0:	test   al,0x75
  40f2b2:	xchg   ah,cl
  40f2b4:	or     cl,al
  40f2b6:	lea    eax,[edx+0x2a]
  40f2b9:	mov    cl,0xb6
  40f2bb:	xor    eax,0x695a9364
  40f2c0:	ret    0x5c9a
  40f2c3:	icebp  
  40f2c4:	push   ebp
  40f2c5:	inc    ebp
  40f2c6:	and    edi,0x0
  40f2c9:	loop   0x40f262
  40f2cb:	imul   esi,DWORD PTR [edx],0xdd5bb38e
  40f2d1:	cmp    eax,0x7950f08e
  40f2d6:	add    al,0xeb
  40f2d8:	(bad)
  40f2db:	outs   dx,BYTE PTR ds:[esi]
  40f2dc:	mov    ds:0x153a0b2d,al
  40f2e1:	bound  esi,QWORD PTR [ebx+ebx*2+0x30]
  40f2e5:	aad    0x11
  40f2e7:	rcl    BYTE PTR ds:0xdee7bf5c,1
  40f2ed:	add    BYTE PTR ds:0xf6a9817b,bl
  40f2f3:	dec    esp
  40f2f4:	xchg   ebp,eax
  40f2f5:	mul    DWORD PTR [ebx-0x13]
  40f2f8:	sub    ebx,DWORD PTR [edi-0x67899747]
  40f2fe:	sbb    eax,0xf5b5ac62
  40f303:	out    0x21,al
  40f305:	and    eax,0xedf23a8b
  40f30a:	jbe    0x40f2d5
  40f30c:	fucomp st(4)
  40f30e:	not    BYTE PTR [esp+ebx*1-0x51]
  40f312:	mov    al,0xe6
  40f314:	mov    ah,0x8a
  40f316:	ins    DWORD PTR es:[edi],dx
  40f317:	mov    edi,0xf218f619
  40f31c:	lds    ebp,FWORD PTR [edx]
  40f31e:	sub    edx,edx
  40f320:	or     eax,DWORD PTR [ebx]
  40f322:	inc    ebp
  40f323:	add    DWORD PTR [edx+edi*2],esi
  40f326:	bound  eax,QWORD PTR [eax]
  40f328:	ror    BYTE PTR [eax-0xbed913d],1
  40f32e:	je     0x40f33f
  40f330:	xchg   ebx,eax
  40f331:	cmp    eax,0x3b506173
  40f336:	in     eax,0x10
  40f338:	scas   eax,DWORD PTR es:[edi]
  40f339:	(bad)  
  40f33a:	sbb    DWORD PTR [ebx+ecx*2-0x3949057f],eax
  40f341:	inc    esp
  40f342:	idiv   BYTE PTR [ecx-0x6b]
  40f345:	add    al,0x7d
  40f347:	das    
  40f348:	call   0xb28c:0x2d4a9619
  40f34f:	lds    edi,FWORD PTR [edi]
  40f351:	nop
  40f352:	inc    ecx
  40f353:	in     al,0x1
  40f355:	push   eax
  40f356:	call   0x7bf7f185
  40f35b:	std    
  40f35c:	outs   dx,BYTE PTR ds:[esi]
  40f35d:	loope  0x40f2fd
  40f35f:	test   al,0xc3
  40f361:	rcr    BYTE PTR ds:0x7da9607,cl
  40f367:	jg     0x40f3ae
  40f369:	xor    eax,0xa1741840
  40f36e:	test   DWORD PTR [ebx],eax
  40f370:	test   DWORD PTR [esi+eiz*2],0x5501e268
  40f377:	gs data16 loopne 0x40f311
  40f37b:	jmp    0x40f322
  40f37d:	lds    ebp,FWORD PTR [edx-0x2f86c9f0]
  40f383:	test   eax,0x1130705e
  40f388:	mov    al,0x83
  40f38a:	test   eax,0xf6dc8fdc
  40f38f:	dec    ecx
  40f390:	lds    edi,FWORD PTR [eax-0x41]
  40f393:	scas   eax,DWORD PTR es:[edi]
  40f394:	inc    esi
  40f395:	test   al,0x6e
  40f397:	xor    ch,0xf6
  40f39a:	add    ebp,DWORD PTR [esi+ebx*8-0x4eb2c72d]
  40f3a1:	sub    al,0xd3
  40f3a3:	test   eax,0x401082dc
  40f3a8:	hlt    
  40f3a9:	cli    
  40f3aa:	mov    esp,ecx
  40f3ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3ad:	jmp    0x40f422
  40f3af:	lahf   
  40f3b0:	xchg   esi,eax
  40f3b1:	pop    es
  40f3b2:	xor    ebp,DWORD PTR [edi]
  40f3b4:	pop    ebp
  40f3b5:	xchg   ebx,eax
  40f3b6:	inc    eax
  40f3b7:	or     bl,al
  40f3b9:	aaa    
  40f3ba:	pop    esi
  40f3bb:	repz push ecx
  40f3bd:	pop    edi
  40f3be:	pop    ds
  40f3bf:	push   esi
  40f3c0:	xor    DWORD PTR [edi],esi
  40f3c2:	sub    al,0xfa
  40f3c4:	pop    ss
  40f3c5:	test   BYTE PTR [ebx+ebx*4+0x10],cl
  40f3c9:	dec    ebx
  40f3ca:	mov    edi,0xeb32b06f
  40f3cf:	jo     0x40f419
  40f3d1:	mov    bh,dh
  40f3d3:	daa    
  40f3d4:	fld    QWORD PTR [esi-0x6e406b36]
  40f3da:	retf   0x1d27
  40f3dd:	data16 jle 0x40f3ea
  40f3e0:	pop    eax
  40f3e1:	rol    DWORD PTR [esi-0x5d23b242],0x62
  40f3e8:	test   al,0x5e
  40f3ea:	enter  0xf528,0x50
  40f3ee:	adc    al,0x74
  40f3f0:	jge    0x40f40c
  40f3f2:	jmp    0xb4a5f89
  40f3f7:	mov    al,0xbc
  40f3f9:	inc    ebx
  40f3fa:	ins    DWORD PTR es:[edi],dx
  40f3fb:	and    al,cl
  40f3fd:	sbb    ah,BYTE PTR [esi-0x76]
  40f400:	mov    bh,0x6f
  40f402:	pusha  
  40f403:	fnstsw WORD PTR ds:0x5d48be9a
  40f409:	clc    
  40f40a:	data16 cmp bl,BYTE PTR ds:0xc791961
  40f411:	dec    ecx
  40f412:	rcr    DWORD PTR [esi+0x51440369],0xe0
  40f419:	adc    esi,eax
  40f41b:	out    dx,eax
  40f41c:	jb     0x40f40b
  40f41e:	xor    DWORD PTR [ebp-0x70],eax
  40f421:	clc    
  40f422:	in     al,dx
  40f423:	stc    
  40f424:	aad    0x36
  40f426:	gs inc ebp
  40f428:	call   0x232e:0xb1929be4
  40f42f:	mov    ebx,0x6063d57e
  40f434:	jb     0x40f42c
  40f436:	lds    esp,FWORD PTR [eax-0x5e]
  40f439:	lahf   
  40f43a:	aas    
  40f43b:	adc    BYTE PTR [ecx+edx*2+0x64778891],ah
  40f442:	xchg   edx,eax
  40f443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f444:	out    0x79,eax
  40f446:	dec    edi
  40f447:	bound  ebp,QWORD PTR [edx-0x5f8cc00d]
  40f44d:	fmul   DWORD PTR es:[ebp+0x3f4630fd]
  40f454:	mov    dh,0x83
  40f456:	mov    esi,0xc6512d7a
  40f45b:	push   0x3c
  40f45d:	dec    eax
  40f45e:	sbb    BYTE PTR [esi+ebx*2+0x40],dh
  40f462:	jne    0x40f415
  40f464:	iret   
  40f465:	sub    esi,0x6f082c90
  40f46b:	mov    edi,0x57ca9675
  40f470:	or     al,0xae
  40f472:	sbb    al,0x1b
  40f474:	sub    ecx,ebp
  40f476:	dec    eax
  40f477:	push   0xcec42d8f
  40f47c:	in     eax,dx
  40f47d:	push   ecx
  40f47e:	(bad)  
  40f47f:	mov    esi,0x418a67a6
  40f484:	out    dx,eax
  40f485:	(bad)  
  40f486:	outs   dx,DWORD PTR ds:[esi]
  40f487:	cmp    al,0x6c
  40f489:	push   eax
  40f48a:	jg     0x40f425
  40f48c:	cld    
  40f48d:	inc    eax
  40f48e:	inc    eax
  40f48f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f490:	and    eax,0x9ac0a948
  40f495:	rcl    al,0x84
  40f498:	les    esp,FWORD PTR [esi]
  40f49a:	cld    
  40f49b:	repnz call 0xe3c0:0xfd76b09b
  40f4a3:	xor    al,0x8f
  40f4a5:	mov    BYTE PTR [ebp-0x32],dh
  40f4a8:	jo     0x40f49c
  40f4aa:	loop   0x40f4f2
  40f4ac:	repnz mov al,ds:0xf19e5c73
  40f4b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4b3:	or     BYTE PTR [edi+0x9],ah
  40f4b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4b7:	outs   dx,BYTE PTR ds:[esi]
  40f4b8:	aad    0x8c
  40f4ba:	nop
  40f4bb:	inc    ecx
  40f4bc:	sub    edx,edx
  40f4be:	jp     0x40f48a
  40f4c0:	call   0x2bd2:0xa315476a
  40f4c7:	sbb    ebx,DWORD PTR ds:0xd3b6ef4f
  40f4cd:	jbe    0x40f4c7
  40f4cf:	jae    0x40f513
  40f4d1:	aad    0x78
  40f4d3:	data16 xor BYTE PTR [ebx],dl
  40f4d6:	div    DWORD PTR [eax+0x1d2ae49d]
  40f4dc:	fwait
  40f4dd:	or     BYTE PTR [ebp-0x484a962a],cl
  40f4e3:	fucomip st,st(3)
  40f4e5:	test   BYTE PTR [ebp+ebx*1-0x28534784],cl
  40f4ec:	sub    BYTE PTR [edi+ebp*1+0x613a3c35],dh
  40f4f3:	or     bh,0xc6
  40f4f6:	cmc    
  40f4f7:	mov    edi,0x233152c1
  40f4fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4fd:	aaa    
  40f4fe:	call   0x7df5f2e5
  40f503:	lahf   
  40f504:	xchg   DWORD PTR [ecx+0x62],ebx
  40f507:	sahf   
  40f508:	xor    DWORD PTR [esi-0x3c],eax
  40f50b:	dec    bh
  40f50d:	(bad)  
  40f50e:	jbe    0x40f55c
  40f510:	popf   
  40f511:	xor    bh,BYTE PTR [edi+0x11ebf5a6]
  40f517:	lods   eax,DWORD PTR ds:[esi]
  40f518:	iret   
  40f519:	or     DWORD PTR [edx+edi*8],eax
  40f51c:	jecxz  0x40f503
  40f51e:	pop    ebp
  40f51f:	(bad)  
  40f520:	or     al,0x72
  40f522:	jg     0x40f4ee
  40f524:	mov    ah,0x9
  40f526:	aad    0x9e
  40f528:	jl     0x40f4ff
  40f52a:	sbb    eax,0x44ae2d3b
  40f52f:	pop    eax
  40f530:	sbb    cl,ch
  40f532:	and    DWORD PTR [eax+0x278c20d3],esi
  40f538:	and    BYTE PTR [edi+0x7],0x92
  40f53c:	adc    al,dl
  40f53e:	loope  0x40f4e5
  40f540:	mov    ?,edx
  40f542:	jecxz  0x40f4e8
  40f544:	loop   0x40f54d
  40f546:	push   edi
  40f547:	retf   0x755a
  40f54a:	xor    ch,dl
  40f54c:	mul    al
  40f54e:	cmp    DWORD PTR [esi],edi
  40f550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f551:	ins    DWORD PTR es:[edi],dx
  40f552:	out    dx,al
  40f553:	sub    esp,DWORD PTR [edx+0x1a7a18a8]
  40f559:	ror    DWORD PTR [edi],1
  40f55b:	add    eax,0xc7f74034
  40f560:	arpl   WORD PTR [ecx+0x2f],cx
  40f563:	repz and eax,eax
  40f566:	mov    eax,0x629d5326
  40f56b:	inc    edx
  40f56c:	shl    DWORD PTR [esi+0x1d],0xaf
  40f570:	add    ebp,ebp
  40f572:	das    
  40f573:	daa    
  40f574:	inc    ecx
  40f575:	inc    eax
  40f576:	fstp   TBYTE PTR [edi+0x6b]
  40f579:	js     0x40f54c
  40f57b:	push   es
  40f57c:	es jp  0x40f54b
  40f57f:	shr    BYTE PTR [ebx+0x76e0a6e8],1
  40f585:	out    0xdc,eax
  40f587:	cmp    eax,0x25cfc685
  40f58c:	or     bl,ah
  40f58e:	adc    DWORD PTR [edi],edx
  40f590:	push   esp
  40f591:	mov    esi,0xcbaf2c65
  40f596:	in     al,dx
  40f597:	push   cs
  40f598:	test   BYTE PTR [edi+0x54],bl
  40f59b:	pop    ss
  40f59c:	add    DWORD PTR [ecx],0x192c000e
  40f5a2:	pop    edx
  40f5a3:	mov    esi,0x238d873c
  40f5a8:	xor    dl,BYTE PTR [edx]
  40f5aa:	sbb    DWORD PTR [ebp+0x49],edx
  40f5ad:	das    
  40f5ae:	mov    ecx,0x850d9ea5
  40f5b3:	xchg   DWORD PTR [eax],edi
  40f5b5:	cmp    edi,DWORD PTR [eax-0x638e54ac]
  40f5bb:	pop    ss
  40f5bc:	outs   dx,BYTE PTR ds:[esi]
  40f5bd:	int    0x28
  40f5bf:	mov    esi,0xcdf14b7f
  40f5c4:	mov    bh,0x97
  40f5c6:	aaa    
  40f5c7:	inc    ecx
  40f5c8:	or     DWORD PTR [edx-0x10ee703d],eax
  40f5ce:	push   ebx
  40f5cf:	lea    ebx,[edx+0x65]
  40f5d2:	imul   ecx,DWORD PTR [esi],0x98a6190b
  40f5d8:	lods   al,BYTE PTR ds:[esi]
  40f5d9:	fcomp  QWORD PTR [esi]
  40f5db:	sbb    eax,0xff4e866f
  40f5e0:	loope  0x40f5b0
  40f5e2:	xchg   edx,eax
  40f5e3:	dec    ebp
  40f5e4:	repz sbb DWORD PTR [esi+0x79],ecx
  40f5e8:	mov    bh,0xb7
  40f5ea:	aad    0x46
  40f5ec:	add    ecx,DWORD PTR [eax-0x659cebb8]
  40f5f2:	pop    edx
  40f5f3:	push   es
  40f5f4:	outs   dx,DWORD PTR ds:[esi]
  40f5f5:	call   0x3ef9:0xc5d4aaa4
  40f5fc:	outs   dx,BYTE PTR ds:[esi]
  40f5fd:	hlt    
  40f5fe:	pop    esi
  40f5ff:	lea    ecx,[eax]
  40f601:	imul   ebp,DWORD PTR [edi],0x5f
  40f604:	push   ds
  40f605:	in     eax,0x70
  40f607:	mov    BYTE PTR [ebp+0x2d],dh
  40f60a:	mov    BYTE PTR [eax],bh
  40f60c:	arpl   WORD PTR [ebp+ecx*2+0x3568aa23],sp
  40f613:	test   al,0x1c
  40f615:	packssdw mm6,mm3
  40f618:	cmp    DWORD PTR [edi],esi
  40f61a:	push   edx
  40f61b:	jecxz  0x40f5dd
  40f61d:	push   es
  40f61e:	xor    ebp,DWORD PTR [edx]
  40f620:	add    eax,0x3e2315c1
  40f625:	cmp    esp,DWORD PTR [ebx+0x40608a0e]
  40f62b:	jmp    ecx
  40f62d:	or     eax,0xc51b6b01
  40f632:	inc    edx
  40f633:	cwde   
  40f634:	cli    
  40f635:	(bad)  
  40f637:	scas   al,BYTE PTR es:[edi]
  40f638:	outs   dx,BYTE PTR fs:[esi]
  40f63a:	mov    esp,0xeea2626
  40f63f:	(bad)  
  40f641:	dec    ecx
  40f642:	in     al,dx
  40f643:	ret    
  40f644:	sbb    dh,bl
  40f646:	ja     0x40f5d4
  40f648:	lods   al,BYTE PTR ds:[esi]
  40f649:	or     BYTE PTR [ecx],al
  40f64b:	or     eax,0x3988980
  40f650:	push   esp
  40f651:	clc    
  40f652:	(bad)  
  40f653:	outs   dx,BYTE PTR ds:[esi]
  40f654:	aad    0x81
  40f656:	and    al,0x48
  40f658:	add    DWORD PTR [si-0x53],esp
  40f65c:	pop    ebx
  40f65d:	dec    edx
  40f65e:	dec    ebp
  40f65f:	add    BYTE PTR [edx+edi*8-0x63c0f400],bh
  40f666:	push   cs
  40f667:	mov    ebp,0xfaef9e55
  40f66c:	ja     0x40f633
  40f66e:	sbb    al,0xa9
  40f670:	int3   
  40f671:	pop    ecx
  40f672:	(bad)  
  40f673:	hlt    
  40f674:	adc    bh,ah
  40f676:	jb     0x40f62d
  40f678:	dec    edx
  40f679:	mov    eax,0x47156f03
  40f67e:	enter  0x1cfe,0x57
  40f682:	or     eax,0xcc01d88a
  40f687:	xor    DWORD PTR [ebx+0x3e],0x84737efc
  40f68e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f68f:	retf   
  40f690:	xchg   DWORD PTR [esi],esp
  40f692:	dec    DWORD PTR [ebx]
  40f694:	dec    eax
  40f695:	in     eax,dx
  40f696:	dec    edi
  40f697:	in     al,0x8
  40f699:	cmp    BYTE PTR [edx],bh
  40f69b:	call   0x1b1aa46d
  40f6a0:	add    ebx,ebx
  40f6a2:	out    dx,eax
  40f6a3:	jg     0x40f6ea
  40f6a5:	inc    edx
  40f6a6:	loopne 0x40f675
  40f6a8:	rol    DWORD PTR [ecx-0x59],0xf6
  40f6ac:	retf   
  40f6ad:	mov    cl,0x4d
  40f6af:	(bad)  
  40f6b0:	out    0x9,eax
  40f6b2:	dec    ecx
  40f6b3:	dec    esp
  40f6b4:	(bad)  
  40f6b5:	push   edi
  40f6b6:	bound  eax,QWORD PTR [eax]
  40f6b8:	ja     0x40f6e0
  40f6ba:	jmp    0x40f6c3
  40f6bc:	adc    edi,DWORD PTR [ebx+0x37b8ed2b]
  40f6c2:	test   BYTE PTR [edi],0x1d
  40f6c5:	popa   
  40f6c6:	sbb    ch,bl
  40f6c8:	(bad)  
  40f6ca:	gs repz ds mov ebx,0xf1b80384
  40f6d2:	sub    al,0xa4
  40f6d4:	jbe    0x40f6d3
  40f6d6:	imul   eax,edx,0x64
  40f6d9:	sub    dl,BYTE PTR [ebp-0x160d0f54]
  40f6df:	sbb    BYTE PTR [edi],0x7d
  40f6e2:	cwde   
  40f6e3:	or     BYTE PTR [eax+0x57],0xc5
  40f6e7:	xchg   edx,eax
  40f6e8:	xor    ah,bh
  40f6ea:	fs jb  0x40f684
  40f6ed:	adc    ah,BYTE PTR [edi+edi*1]
  40f6f0:	sub    al,0xb2
  40f6f2:	cmp    ebp,DWORD PTR [ecx+0x63]
  40f6f5:	pop    ss
  40f6f6:	xor    BYTE PTR [ecx+0x4e],al
  40f6f9:	call   0x4af6fdce
  40f6fe:	jbe    0x40f6c7
  40f700:	adc    al,0x6d
  40f702:	pop    ds
  40f703:	mov    ch,0x85
  40f705:	inc    esp
  40f706:	mov    ds:0x747ac994,eax
  40f70b:	bound  ebx,QWORD PTR [ecx+ecx*2+0x66]
  40f70f:	aad    0xa
  40f711:	pop    eax
  40f712:	or     esi,ebp
  40f714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f715:	xor    BYTE PTR [ecx+0x5],ch
  40f718:	test   eax,0x43d31cb0
  40f71d:	jo     0x40f73e
  40f71f:	xchg   DWORD PTR [ecx],ecx
  40f721:	outs   dx,DWORD PTR ds:[esi]
  40f722:	hlt    
  40f723:	fild   WORD PTR [esi]
  40f725:	cdq    
  40f726:	fild   WORD PTR [esi-0x61]
  40f729:	(bad)  
  40f72a:	(bad)  
  40f72b:	iret   
  40f72c:	loopne 0x40f738
  40f72e:	popf   
  40f72f:	mov    ecx,DWORD PTR [edx-0x14036362]
  40f735:	add    ah,bh
  40f737:	mov    edx,0xf544899c
  40f73c:	cmp    bl,ch
  40f73e:	les    ebx,FWORD PTR [edx]
  40f740:	cdq    
  40f741:	out    0xd3,eax
  40f743:	inc    ebp
  40f744:	loop   0x40f773
  40f746:	pop    esp
  40f747:	dec    esi
  40f748:	cmc    
  40f749:	jp     0x40f7c7
  40f74b:	(bad)  
  40f74c:	push   ecx
  40f74d:	lods   eax,DWORD PTR ds:[esi]
  40f74e:	cwde   
  40f74f:	int    0x9a
  40f751:	mov    bl,0x74
  40f753:	sbb    ebp,eax
  40f755:	sbb    edx,DWORD PTR [edi+ebp*8]
  40f758:	or     dl,0xb9
  40f75b:	loopne 0x40f7cc
  40f75d:	popa   
  40f75e:	pop    ebp
  40f75f:	mov    ?,ebx
  40f761:	and    esp,DWORD PTR [ebx]
  40f763:	push   ecx
  40f764:	test   al,0x57
  40f766:	cmp    BYTE PTR [edx-0x5],al
  40f769:	mov    cl,0x6c
  40f76b:	mov    bh,0xab
  40f76d:	jo     0x40f6f6
  40f76f:	sub    eax,0xd1c87cd1
  40f774:	imul   esp,DWORD PTR [eax],0x9ae55f90
  40f77a:	mov    al,0x5b
  40f77c:	mov    BYTE PTR [ebx+ebx*4+0x5a1f0910],ch
  40f783:	addr16 pop es
  40f785:	mov    eax,0x87266df0
  40f78a:	inc    ebx
  40f78b:	inc    ebx
  40f78c:	fist   WORD PTR [ecx+ebp*4+0x60]
  40f790:	xor    dl,ah
  40f792:	mov    dl,0xff
  40f794:	scas   al,BYTE PTR es:[edi]
  40f795:	and    ch,al
  40f797:	mov    ch,0x13
  40f799:	and    DWORD PTR [ebp+0x73],ecx
  40f79c:	(bad)  [eax-0x4258637b]
  40f7a2:	shl    BYTE PTR ss:[eax-0x3262557a],cl
  40f7a9:	adc    bh,BYTE PTR [ecx+0x41673ef9]
  40f7af:	hlt    
  40f7b0:	or     bl,BYTE PTR [edi+0x25e8a572]
  40f7b6:	adc    ah,bh
  40f7b8:	dec    esi
  40f7b9:	xchg   esi,eax
  40f7ba:	rol    BYTE PTR [eax-0x34e24312],1
  40f7c0:	sbb    DWORD PTR [ebp-0x3d],0x50
  40f7c4:	les    ebp,FWORD PTR [esi-0x566daa19]
  40f7ca:	xor    eax,0x6143220f
  40f7cf:	mov    esi,0x7884ff61
  40f7d4:	adc    ecx,DWORD PTR [esi]
  40f7d6:	out    dx,al
  40f7d7:	retf   
  40f7d8:	mov    ?,WORD PTR [edi+edx*1+0x1340ddcf]
  40f7df:	xor    BYTE PTR [ebx],bh
  40f7e1:	sub    al,0xea
  40f7e3:	aaa    
  40f7e4:	out    0x34,al
  40f7e6:	xchg   edx,eax
  40f7e7:	sub    ah,BYTE PTR [edi]
  40f7e9:	dec    edi
  40f7ea:	fwait
  40f7eb:	push   ss
  40f7ec:	jb     0x40f814
  40f7ee:	lds    eax,FWORD PTR [esi]
  40f7f0:	jnp    0x40f7d0
  40f7f2:	(bad)  
  40f7f4:	xor    BYTE PTR [esp+eax*8+0x30],0x5a
  40f7f9:	cld    
  40f7fa:	in     al,0x51
  40f7fc:	daa    
  40f7fd:	xor    DWORD PTR [ebx+0x34],eax
  40f800:	adc    al,0x70
  40f802:	mov    ss,WORD PTR [edi-0x3a19c60f]
  40f808:	sbb    bh,BYTE PTR cs:[edi+eiz*2-0x33]
  40f80d:	ss (bad) 
  40f80f:	sbb    edx,DWORD PTR [ebx+0x549c8bf9]
  40f815:	or     BYTE PTR ds:0xe0f6d592,ah
  40f81b:	je     0x40f7ec
  40f81d:	mov    BYTE PTR [esi],dh
  40f81f:	sahf   
  40f820:	(bad)  
  40f821:	push   ss
  40f822:	pop    esp
  40f823:	sub    BYTE PTR [esi-0x16775596],bh
  40f829:	push   ebx
  40f82a:	es pusha 
  40f82c:	xchg   ebx,eax
  40f82d:	js     0x40f7c2
  40f82f:	jmp    0xcf5b:0x1f5a9a3d
  40f836:	mov    ds:0xa9ea0ad6,al
  40f83b:	cli    
  40f83c:	mov    eax,0xd8b7f885
  40f841:	jg     0x40f899
  40f843:	rep lods eax,DWORD PTR ds:[esi]
  40f845:	aas    
  40f846:	pop    ebx
  40f847:	cmp    DWORD PTR [ecx+ecx*2-0x2df77c9d],edx
  40f84e:	push   ss
  40f84f:	shr    BYTE PTR [esi-0x6703e5f4],1
  40f855:	std    
  40f856:	adc    eax,0x22e32a20
  40f85b:	popf   
  40f85c:	in     al,dx
  40f85d:	(bad)  
  40f85e:	retf   
  40f85f:	loope  0x40f83b
  40f861:	ds xchg esi,eax
  40f863:	fist   WORD PTR [ecx+0x4baaa414]
  40f869:	pop    es
  40f86a:	repz push ds
  40f86c:	sbb    DWORD PTR [ebx-0x7c],0xffffffbd
  40f870:	jmp    0x8e6ca554
  40f875:	push   ecx
  40f876:	lods   eax,DWORD PTR ds:[esi]
  40f877:	adc    esp,ebp
  40f879:	rol    BYTE PTR [eax-0x13],0xda
  40f87d:	repnz out 0x84,al
  40f880:	imul   ebx,DWORD PTR [edi+0xd],0x72
  40f884:	mov    eax,ds:0x6f77e91c
  40f889:	push   es
  40f88a:	sar    BYTE PTR [ecx],0xc5
  40f88d:	mov    esp,0xaac5940
  40f892:	and    ebx,DWORD PTR [esi-0x49]
  40f895:	dec    edi
  40f896:	jmp    0x40f893
  40f898:	sar    BYTE PTR [edi+ebx*4+0xe],0x47
  40f89d:	sub    DWORD PTR [edi+0x2d585982],ebx
  40f8a3:	jnp    0x40f91f
  40f8a5:	test   eax,0x31c8b7f7
  40f8aa:	(bad)  
  40f8ab:	jmp    0x40f88c
  40f8ad:	ins    BYTE PTR es:[edi],dx
  40f8ae:	loop   0x40f87a
  40f8b0:	aaa    
  40f8b1:	test   al,0xd5
  40f8b3:	jecxz  0x40f89b
  40f8b5:	cmp    eax,0x98c5814d
  40f8ba:	mov    esp,0x3ec6a3ff
  40f8bf:	shl    DWORD PTR [edi+ebx*2-0x4df722bc],cl
  40f8c6:	(bad)  
  40f8c7:	jae    0x40f8d0
  40f8c9:	aam    0xb9
  40f8cb:	int3   
  40f8cc:	outs   dx,DWORD PTR ds:[esi]
  40f8cd:	dec    eax
  40f8ce:	addr16 pushf 
  40f8d0:	mov    ecx,0xe5738726
  40f8d5:	outs   dx,BYTE PTR ds:[esi]
  40f8d6:	enter  0x6c39,0xcc
  40f8da:	jecxz  0x40f946
  40f8dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8dd:	dec    eax
  40f8de:	sahf   
  40f8df:	xor    eax,0xac4585ff
  40f8e4:	shr    DWORD PTR ds:0xa0f3bf5f,cl
  40f8ea:	iret   
  40f8eb:	popf   
  40f8ec:	pop    es
  40f8ed:	xchg   ecx,eax
  40f8ee:	add    DWORD PTR [ebx-0x3e0d7858],ebx
  40f8f4:	mov    al,0x4c
  40f8f6:	ins    BYTE PTR es:[edi],dx
  40f8f7:	ror    BYTE PTR [edx+edi*2+0x53647ffd],0x5d
  40f8ff:	mov    ecx,0x289de3f0
  40f904:	scas   eax,DWORD PTR es:[edi]
  40f905:	fisttp WORD PTR [esi+0x26925d31]
  40f90b:	test   eax,0x5d0f513a
  40f910:	and    eax,0x4e6ddd52
  40f915:	or     BYTE PTR [esp+eiz*8+0x40],0xdb
  40f91a:	pminub mm7,mm4
  40f91d:	dec    esp
  40f91e:	sub    ch,ch
  40f920:	dec    edx
  40f921:	(bad)  
  40f922:	xchg   edx,eax
  40f923:	xchg   ecx,eax
  40f924:	ds xchg ecx,eax
  40f926:	cmp    DWORD PTR [edx-0xe],ebp
  40f929:	les    eax,FWORD PTR ds:0xb2f35295
  40f92f:	pop    es
  40f930:	imul   eax,DWORD PTR [ecx-0x30],0xffffffaf
  40f934:	jle    0x40f987
  40f936:	xchg   ebp,eax
  40f937:	stos   DWORD PTR es:[edi],eax
  40f938:	imul   eax,edx,0x59
  40f93b:	xchg   ebx,eax
  40f93c:	(bad)  
  40f93d:	call   0x1421:0x51589a1c
  40f944:	int    0x80
  40f946:	pop    es
  40f947:	sub    al,0xc6
  40f949:	jbe    0x40f91e
  40f94b:	pop    ebp
  40f94c:	jl     0x40f954
  40f94e:	(bad)  
  40f94f:	sbb    BYTE PTR [ebx],ah
  40f951:	in     eax,0xe8
  40f953:	cmp    al,0x14
  40f955:	mov    al,ds:0x277ebdd1
  40f95a:	fisubr WORD PTR [ecx+0x44]
  40f95d:	inc    esp
  40f95e:	scas   eax,DWORD PTR es:[edi]
  40f95f:	fs aam 0x32
  40f962:	icebp  
  40f963:	adc    eax,0x12b82b2e
  40f968:	call   0x320d:0x4c28abd3
  40f96f:	into   
  40f970:	push   ecx
  40f971:	pop    esp
  40f972:	in     al,0xdc
  40f974:	inc    esp
  40f975:	int3   
  40f976:	push   edi
  40f977:	push   ss
  40f978:	xor    ah,BYTE PTR [edi+0x71]
  40f97b:	and    BYTE PTR [edi-0x26490b7],0x62
  40f982:	xchg   BYTE PTR [ebp+0x54],dh
  40f985:	gs mov bl,0x47
  40f988:	xchg   ebp,eax
  40f989:	mov    bh,BYTE PTR [ebp+0x1ff3872f]
  40f98f:	(bad)  [ebx-0x7]
  40f992:	mov    eax,ds:0x9ad442e0
  40f997:	and    eax,0x908b9f2c
  40f99c:	or     bh,BYTE PTR [edx]
  40f99e:	aad    0x1a
  40f9a0:	jle    0x40f929
  40f9a2:	cmp    al,0xfd
  40f9a4:	mov    bl,ah
  40f9a6:	adc    BYTE PTR [eax+ebx*2],bh
  40f9a9:	jnp    0x40f9b5
  40f9ab:	imul   ecx,DWORD PTR [esi],0xaf7ca02a
  40f9b1:	xor    al,0x4c
  40f9b3:	mov    ah,0xfd
  40f9b5:	out    0x1d,eax
  40f9b7:	xor    bh,BYTE PTR [esp+edx*4]
  40f9ba:	test   eax,0x5f254f58
  40f9bf:	cmc    
  40f9c0:	js     0x40f947
  40f9c2:	inc    ecx
  40f9c3:	xor    al,BYTE PTR [ecx-0x36e0a4f6]
  40f9c9:	xchg   BYTE PTR [ecx],dh
  40f9cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9cc:	push   ecx
  40f9cd:	jg     0x40f970
  40f9cf:	jmp    0x38d0e51e
  40f9d4:	sbb    bl,BYTE PTR [ebp-0x674aeadc]
  40f9da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9db:	push   ebp
  40f9dc:	shl    WORD PTR [edx-0x3b],0x70
  40f9e1:	inc    edi
  40f9e2:	xchg   ecx,eax
  40f9e3:	cmp    esp,DWORD PTR [eax-0x291d71f5]
  40f9e9:	pop    es
  40f9ea:	push   esp
  40f9eb:	dec    edx
  40f9ec:	fist   DWORD PTR [esi+0x598dde80]
  40f9f2:	inc    esi
  40f9f3:	add    BYTE PTR [eax-0x61ee1c66],dh
  40f9f9:	outs   dx,BYTE PTR ds:[si]
  40f9fb:	mov    al,ds:0xd4cbd449
  40fa00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa01:	fwait
  40fa02:	ss add edx,edx
  40fa05:	retf   
  40fa06:	fstp   DWORD PTR [eax-0xa142ad1]
  40fa0c:	inc    ecx
  40fa0d:	test   BYTE PTR ds:0x46f2b6cb,0xe6
  40fa14:	mov    esi,0x29f7b8f5
  40fa19:	adc    DWORD PTR [esi+0x60],ecx
  40fa1c:	(bad)  
  40fa1d:	loop   0x40fa93
  40fa1f:	pop    esi
  40fa20:	add    edi,DWORD PTR [eax+0x1f]
  40fa23:	adc    dl,BYTE PTR [eax-0x36f1582c]
  40fa29:	lds    esp,FWORD PTR [ecx-0x174d73f7]
  40fa2f:	and    eax,0x93fa9a08
  40fa34:	xor    esp,ebp
  40fa36:	add    edx,DWORD PTR [esi-0x6]
  40fa39:	xchg   edi,eax
  40fa3a:	test   eax,edx
  40fa3c:	call   0xee0de216
  40fa41:	push   esi
  40fa42:	es mov al,0x90
  40fa45:	xlat   BYTE PTR es:[ebx]
  40fa47:	inc    ebp
  40fa48:	shl    DWORD PTR [ecx+0x4b],cl
  40fa4b:	cmp    dl,BYTE PTR [esi+0x7ab7b6be]
  40fa51:	xchg   esp,eax
  40fa52:	dec    esp
  40fa53:	pop    eax
  40fa54:	xor    eax,0x46d5fc87
  40fa59:	cld    
  40fa5a:	mov    eax,ds:0x3c1092cc
  40fa5f:	sbb    BYTE PTR [ebx],0x6f
  40fa62:	mov    al,0x15
  40fa64:	sbb    al,0x13
  40fa66:	test   eax,0x167720b1
  40fa6b:	xor    eax,0x450e745d
  40fa70:	js     0x40fa10
  40fa72:	inc    edi
  40fa73:	fild   DWORD PTR [ecx]
  40fa75:	sbb    eax,0xf54b0919
  40fa7a:	pop    ecx
  40fa7b:	xchg   BYTE PTR [esi+0x5b4217f0],cl
  40fa81:	inc    ebp
  40fa82:	mov    ch,0x62
  40fa84:	add    ecx,edi
  40fa86:	xor    DWORD PTR [ebp+0x7e],edx
  40fa89:	jo     0x40fa36
  40fa8b:	pop    esi
  40fa8c:	call   0x99df:0xad350fa4
  40fa93:	sub    bl,BYTE PTR [ebx]
  40fa95:	pop    es
  40fa96:	jae    0x40fa99
  40fa98:	ins    BYTE PTR es:[edi],dx
  40fa99:	bound  esp,QWORD PTR [eax+0x18]
  40fa9c:	push   ecx
  40fa9d:	out    0xc2,eax
  40fa9f:	push   ecx
  40faa0:	(bad)  
  40faa1:	and    al,0x17
  40faa3:	scas   al,BYTE PTR es:[edi]
  40faa4:	cwde   
  40faa5:	call   0xd978:0x8c9d6e43
  40faac:	mov    esp,0xe8f752a1
  40fab1:	lahf   
  40fab2:	jmp    0x67e0:0x79af0c42
  40fab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faba:	xor    DWORD PTR [edi-0x54],ebx
  40fabd:	ins    DWORD PTR es:[edi],dx
  40fabe:	xchg   DWORD PTR [eax+0x3c],edi
  40fac1:	ror    BYTE PTR [eax],0x7a
  40fac4:	or     eax,0x6db2b02d
  40fac9:	(bad)  
  40faca:	xor    BYTE PTR [eax-0x76],dl
  40facd:	mov    BYTE PTR [ebx-0x68],al
  40fad0:	fisub  WORD PTR fs:[ecx+0x62]
  40fad4:	aam    0xed
  40fad6:	rcr    edi,0x73
  40fad9:	inc    ebp
  40fada:	jmp    0x5eb6d8c6
  40fadf:	cmp    eax,0xe6a62e80
  40fae4:	or     BYTE PTR [eax+0x7],0x4e
  40fae8:	or     dl,BYTE PTR [eax+ebp*2]
  40faeb:	dec    esp
  40faec:	(bad)  
  40faed:	popf   
  40faee:	or     DWORD PTR [edi-0x42],ecx
  40faf1:	call   0x7ff2447e
  40faf6:	test   al,ch
  40faf8:	aas    
  40faf9:	mov    cl,0xd
  40fafb:	data16 jl 0x40fb74
  40fafe:	and    eax,0xe060b0bd
  40fb03:	push   ss
  40fb04:	mov    dh,0x13
  40fb06:	push   edi
  40fb07:	inc    edx
  40fb08:	sysret 
  40fb0a:	sub    eax,0x986af660
  40fb0f:	jb     0x40fb33
  40fb11:	inc    esp
  40fb12:	mov    bl,ah
  40fb14:	mov    esi,0xe821af8e
  40fb19:	jbe    0x40fb67
  40fb1b:	sub    eax,DWORD PTR [edi]
  40fb1d:	mov    ds:0x20b58497,eax
  40fb22:	pop    edi
  40fb23:	mov    ecx,0x76d9eb0
  40fb28:	cmp    al,0xe2
  40fb2a:	pusha  
  40fb2b:	lahf   
  40fb2c:	aam    0x4d
  40fb2e:	ret    
  40fb2f:	outs   dx,DWORD PTR ds:[esi]
  40fb30:	push   edx
  40fb31:	add    edi,DWORD PTR ds:0x9daa7069
  40fb37:	sub    BYTE PTR [esi],0x70
  40fb3a:	test   eax,0x2dcb69f1
  40fb3f:	add    dl,BYTE PTR [ebp-0x30f74d17]
  40fb45:	sbb    DWORD PTR [edi-0xf90ed2],edi
  40fb4b:	push   0xe03d4eac
  40fb50:	sar    DWORD PTR [esi+0x2a9528dd],cl
  40fb56:	sub    ah,BYTE PTR [eax-0x6a]
  40fb59:	mov    ch,0x80
  40fb5b:	addr16 mov ch,0x2c
  40fb5e:	add    eax,0x5dd2cc7
  40fb63:	mov    WORD PTR [esi+0x3b],ds
  40fb66:	add    BYTE PTR [edi+0x63],ch
  40fb69:	loope  0x40fbca
  40fb6b:	cmp    edi,DWORD PTR [edi+0x650b97a]
  40fb71:	sbb    DWORD PTR [ecx],edx
  40fb73:	adc    BYTE PTR [ebx+0x4a],0x49
  40fb77:	adc    eax,0x78a8a95a
  40fb7c:	frstor [edx+0x4]
  40fb7f:	div    BYTE PTR [edx-0x4c]
  40fb82:	sub    DWORD PTR ss:[edx+0x70],ebx
  40fb86:	cmc    
  40fb87:	mov    ecx,0x95cadd07
  40fb8c:	loop   0x40fb3c
  40fb8e:	int3   
  40fb8f:	lods   al,BYTE PTR ds:[esi]
  40fb90:	in     al,dx
  40fb91:	inc    ebx
  40fb92:	sahf   
  40fb93:	movsx  esi,bl
  40fb96:	hlt    
  40fb97:	int    0x4f
  40fb99:	test   al,0x8d
  40fb9b:	mov    esp,esp
  40fb9d:	(bad)  
  40fb9e:	repz pusha 
  40fba0:	(bad)  
  40fba1:	test   eax,0xf6c7b9c2
  40fba6:	sbb    BYTE PTR [ebp-0x80],0xf8
  40fbaa:	add    eax,0xe7183012
  40fbaf:	aam    0xd2
  40fbb1:	mov    DWORD PTR [eax+0x62def395],esi
  40fbb7:	loope  0x40fbd1
  40fbb9:	daa    
  40fbba:	and    BYTE PTR [ebx-0x4d1c456a],ah
  40fbc0:	push   cs
  40fbc1:	and    eax,DWORD PTR [esp+esi*1+0x4c7cc67c]
  40fbc8:	enter  0x7f78,0x28
  40fbcc:	cmp    DWORD PTR [ebx-0xb72dc44],ecx
  40fbd2:	(bad)  
  40fbd3:	out    0x66,eax
  40fbd5:	retf   0xa0d
  40fbd8:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40fbda:	jo     0x40fc3a
  40fbdc:	and    BYTE PTR [eax+ecx*8-0x1],dl
  40fbe0:	fcom   DWORD PTR [esi]
  40fbe2:	pop    ss
  40fbe3:	inc    ebx
  40fbe4:	mov    edi,0x633d5ad7
  40fbe9:	or     BYTE PTR [esi+0x675ac13b],bh
  40fbef:	sti    
  40fbf0:	fdivr  QWORD PTR [ebx-0x6afe26c0]
  40fbf6:	ret    0xe42b
  40fbf9:	ins    BYTE PTR es:[edi],dx
  40fbfa:	inc    esi
  40fbfb:	jmp    0x753db574
  40fc00:	mov    ds:0x7d24ac90,eax
  40fc05:	sbb    BYTE PTR ds:0xbf7793ae,dl
  40fc0b:	jg     0x40fc5b
  40fc0d:	jle    0x40fbcd
  40fc0f:	inc    ecx
  40fc10:	(bad)  
  40fc12:	dec    edx
  40fc13:	mov    ebp,0x1efd6ca1
  40fc18:	xchg   BYTE PTR [esi+0x4b92dd53],ch
  40fc1e:	sub    ecx,esi
  40fc20:	pop    edx
  40fc21:	inc    eax
  40fc22:	cwde   
  40fc23:	test   DWORD PTR [esi],ebx
  40fc25:	stos   BYTE PTR es:[edi],al
  40fc26:	jnp    0x40fc66
  40fc28:	arpl   dx,ax
  40fc2a:	or     eax,0x91cf2658
  40fc2f:	cmp    DWORD PTR [ebp-0x3],ebp
  40fc32:	cmp    DWORD PTR [edx+0x5f095bbd],edx
  40fc38:	and    al,0x5b
  40fc3a:	data16 jo 0x40fbc3
  40fc3d:	test   BYTE PTR [ebp+0x37a33937],dl
  40fc43:	or     dl,BYTE PTR [ecx+0x2bb6c182]
  40fc49:	or     edi,DWORD PTR [ebx]
  40fc4b:	dec    edx
  40fc4c:	cmp    BYTE PTR [edi+0x22],cl
  40fc4f:	sar    ch,0xa9
  40fc52:	xor    DWORD PTR [eax*8+0x350c96dd],0xfffffffb
  40fc5a:	inc    ebx
  40fc5b:	sbb    al,0x94
  40fc5d:	add    BYTE PTR [ebp*4+0x4e7ddeac],dh
  40fc64:	int3   
  40fc65:	inc    esi
  40fc66:	inc    edx
  40fc67:	xchg   esi,eax
  40fc68:	out    dx,eax
  40fc69:	lds    edi,FWORD PTR [edi]
  40fc6b:	dec    esi
  40fc6c:	xchg   ebp,eax
  40fc6d:	std    
  40fc6e:	cmp    eax,0x5755cd14
  40fc73:	rcl    DWORD PTR [edx+0x48f32cd1],0x98
  40fc7a:	addr16 pop eax
  40fc7c:	nop
  40fc7d:	(bad)  
  40fc7f:	jae    0x40fcf3
  40fc81:	aas    
  40fc82:	push   edi
  40fc83:	xor    dl,bh
  40fc85:	xor    eax,0x8dbe8463
  40fc8a:	push   ecx
  40fc8b:	jnp    0x40fc97
  40fc8d:	inc    esi
  40fc8e:	push   eax
  40fc8f:	addr16 jo 0x40fd0b
  40fc92:	ins    BYTE PTR es:[edi],dx
  40fc93:	mov    ebp,edi
  40fc95:	lahf   
  40fc96:	cmp    esp,DWORD PTR [ecx+edi*8-0x428452e7]
  40fc9d:	sar    BYTE PTR [esi+0x46],1
  40fca0:	repz jl 0x40fc81
  40fca3:	mov    al,BYTE PTR [eax+0x1cc7f5ac]
  40fca9:	hlt    
  40fcaa:	fcomp  st(2)
  40fcac:	shl    cl,1
  40fcae:	sbb    ch,bh
  40fcb0:	pusha  
  40fcb1:	ret    
  40fcb2:	pop    ecx
  40fcb3:	fld    DWORD PTR [ecx]
  40fcb5:	mov    ecx,0x5a1a56f0
  40fcba:	xor    eax,0xbfaaa3c5
  40fcbf:	sbb    ecx,edx
  40fcc1:	mov    edx,fs
  40fcc3:	dec    ecx
  40fcc4:	imul   ecx,edx,0x5a
  40fcc7:	xor    BYTE PTR [edi+0x27],dh
  40fcca:	ss icebp 
  40fccc:	dec    eax
  40fccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcce:	inc    edi
  40fccf:	enter  0x63d8,0xa0
  40fcd3:	cmp    eax,0xa1fc3725
  40fcd8:	cmp    DWORD PTR [eax+0x740d268a],0x21
  40fcdf:	dec    ebp
  40fce0:	and    BYTE PTR [esi+ebx*2-0x7f94a859],dh
  40fce7:	jo     0x40fca7
  40fce9:	xor    ebx,0xb958afa4
  40fcef:	into   
  40fcf0:	call   0xfb8f:0x5085ed72
  40fcf7:	lds    ebx,FWORD PTR [edi-0x5a]
  40fcfa:	out    0x2c,al
  40fcfc:	sbb    eax,0x676894bc
  40fd01:	or     al,0xc4
  40fd03:	pushf  
  40fd04:	out    dx,al
  40fd05:	ficom  WORD PTR [esi]
  40fd07:	ds retf 
  40fd09:	and    al,0x3c
  40fd0b:	aam    0x88
  40fd0d:	jg     0x40fd5a
  40fd0f:	loope  0x40fc9e
  40fd11:	test   al,0x85
  40fd13:	or     eax,0xd6e93c81
  40fd18:	dec    edx
  40fd19:	dec    ecx
  40fd1a:	dec    edx
  40fd1b:	adc    BYTE PTR [eax-0x1140a702],0xc9
  40fd22:	stos   BYTE PTR es:[edi],al
  40fd23:	dec    eax
  40fd24:	je     0x40fd0a
  40fd26:	pop    esp
  40fd27:	iret   
  40fd28:	xchg   dl,bl
  40fd2a:	fmulp  st(4),st
  40fd2c:	push   ebp
  40fd2d:	test   al,0x5
  40fd2f:	dec    eax
  40fd30:	xor    esp,DWORD PTR [ecx+0x7aebd10f]
  40fd36:	pop    esi
  40fd37:	fist   DWORD PTR [eax+0x549a3c09]
  40fd3d:	mov    edi,0xace485c6
  40fd42:	cmp    eax,0xba0186b9
  40fd47:	cmp    al,0x91
  40fd49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd4a:	xchg   esp,eax
  40fd4b:	jecxz  0x40fd64
  40fd4d:	inc    DWORD PTR [ecx-0x48]
  40fd50:	xor    eax,0xd9b31ab4
  40fd55:	lea    ebp,[edi]
  40fd57:	stc    
  40fd58:	xchg   edi,eax
  40fd59:	sub    ebx,edi
  40fd5b:	pop    ebp
  40fd5c:	mov    al,ds:0xf2e71fbf
  40fd61:	xlat   BYTE PTR ds:[ebx]
  40fd62:	or     eax,0x4598688b
  40fd67:	stos   DWORD PTR es:[edi],eax
  40fd68:	mov    dh,0x7c
  40fd6a:	sub    eax,0xacb3fc3f
  40fd6f:	adc    DWORD PTR [ebp+0x67],edx
  40fd72:	cmp    BYTE PTR [edx+0xa481251],al
  40fd78:	adc    al,0x17
  40fd7a:	pop    ecx
  40fd7b:	aaa    
  40fd7c:	jbe    0x40fd13
  40fd7e:	xor    DWORD PTR [edx-0x16e93ae4],0xebb7ee3b
  40fd88:	mov    edi,0xa4391c62
  40fd8d:	inc    eax
  40fd8e:	repz cs sahf 
  40fd91:	mov    ebx,ebx
  40fd93:	and    DWORD PTR [edi],ebx
  40fd95:	je     0x40fe0a
  40fd97:	repz mov cs,WORD PTR [ebx+0x2f4ca675]
  40fd9e:	pop    edx
  40fd9f:	(bad)  
  40fda0:	(bad)  
  40fda1:	jg     0x40fd98
  40fda3:	cmp    BYTE PTR [edi+0x2ce9d2e7],al
  40fda9:	int    0x4
  40fdab:	dec    esp
  40fdac:	ds push esp
  40fdae:	or     BYTE PTR [ebp+ecx*4+0x13],cl
  40fdb2:	mov    ecx,0xc26202b1
  40fdb7:	inc    ecx
  40fdb8:	dec    ecx
  40fdb9:	inc    ecx
  40fdba:	and    edi,esi
  40fdbc:	setp   al
  40fdbf:	aaa    
  40fdc0:	outs   dx,DWORD PTR ds:[esi]
  40fdc1:	das    
  40fdc2:	mov    cl,0x58
  40fdc4:	not    BYTE PTR [edi]
  40fdc6:	jae    0x40fe37
  40fdc8:	test   eax,0xd91b43f9
  40fdcd:	xchg   ah,ch
  40fdcf:	call   0xbbdbca3f
  40fdd4:	rol    DWORD PTR [eax+0x37],1
  40fdd7:	mov    bh,0x8e
  40fdd9:	dec    ebp
  40fdda:	and    ecx,DWORD PTR [esi-0x19]
  40fddd:	lea    edx,[ebx]
  40fddf:	pusha  
  40fde0:	shl    DWORD PTR [eax+eax*1+0x6a3316d2],0x17
  40fde8:	xlat   BYTE PTR ds:[ebx]
  40fde9:	or     al,0xa
  40fdeb:	push   ss
  40fdec:	pop    ebx
  40fded:	xchg   esi,eax
  40fdee:	push   cs
  40fdef:	cmp    al,0x71
  40fdf1:	jbe    0x40fe0c
  40fdf3:	mov    ah,0x4a
  40fdf5:	in     al,0x1c
  40fdf7:	inc    eax
  40fdf8:	mov    ds:0xe106ec,al
  40fdfd:	xchg   edx,eax
  40fdfe:	loope  0x40fde2
  40fe00:	leave  
  40fe01:	addr16 xchg ecx,eax
  40fe03:	sub    eax,0x75bdc6f0
  40fe08:	xchg   ebp,eax
  40fe09:	inc    esi
  40fe0a:	jae    0x40fdf2
  40fe0c:	mov    eax,0x4c3c2c1a
  40fe11:	ret    
  40fe12:	in     eax,0xbe
  40fe14:	xor    esp,ebp
  40fe16:	cmp    eax,0x216137c9
  40fe1b:	pop    esi
  40fe1c:	dec    ecx
  40fe1d:	fild   WORD PTR [ecx+0x6c333739]
  40fe23:	pushf  
  40fe24:	mov    bl,0x68
  40fe26:	ins    DWORD PTR es:[edi],dx
  40fe27:	jbe    0x40fe2b
  40fe29:	mov    ?,WORD PTR [ebx*8+0x1760e1d]
  40fe30:	jne    0x40fe57
  40fe32:	mov    esp,0x905b0b03
  40fe37:	push   ds
  40fe38:	aad    0xea
  40fe3a:	mov    WORD PTR [ebp-0x16],gs
  40fe3d:	jbe    0x40fdf2
  40fe3f:	out    dx,al
  40fe40:	sar    BYTE PTR [esi+0x6afafd25],1
  40fe46:	mov    ah,0xab
  40fe48:	cmp    DWORD PTR [eax-0x670e3a83],ebx
  40fe4e:	push   0x6fafbe3b
  40fe53:	add    al,0x7c
  40fe55:	std    
  40fe56:	pop    edi
  40fe57:	ret    0x1e6c
  40fe5a:	or     DWORD PTR [esi+0x64145ba4],esp
  40fe60:	mov    ds,WORD PTR [eax+0x7e93c992]
  40fe66:	loop   0x40fe58
  40fe68:	jmp    0x5985:0xc9327ae1
  40fe6f:	inc    eax
  40fe70:	std    
  40fe71:	sub    BYTE PTR [ecx-0x57],cl
  40fe74:	gs dec ebp
  40fe76:	cli    
  40fe77:	mov    edx,0x4114780f
  40fe7c:	bound  edi,QWORD PTR [edi-0x55e245]
  40fe82:	mov    dl,0xff
  40fe84:	popa   
  40fe85:	and    eax,0x2eedfe3f
  40fe8a:	mov    ah,0x2b
  40fe8c:	test   BYTE PTR [edi+eiz*1+0x6f],cl
  40fe90:	jmp    0x40fe13
  40fe92:	int3   
  40fe93:	add    al,0xcf
  40fe95:	xor    ah,ch
  40fe97:	xchg   bh,al
  40fe99:	pop    ds
  40fe9a:	hlt    
  40fe9b:	dec    esi
  40fe9c:	mov    dh,0xfe
  40fe9e:	pop    eax
  40fe9f:	dec    eax
  40fea0:	jp     0x40fedf
  40fea2:	push   0x10
  40fea4:	outs   dx,DWORD PTR ds:[esi]
  40fea5:	push   ebx
  40fea6:	mov    DWORD PTR [esi],ebp
  40fea8:	mov    fs,WORD PTR [ebp-0x1381eb3f]
  40feae:	jle    0x40fee5
  40feb0:	xor    ecx,ebp
  40feb2:	mov    al,0x3d
  40feb4:	inc    esp
  40feb5:	inc    ecx
  40feb6:	out    dx,eax
  40feb7:	inc    ebp
  40feb8:	mov    esi,0xb02cf960
  40febd:	push   0xa968059e
  40fec2:	rcr    bl,1
  40fec4:	sub    ebx,DWORD PTR [ecx+0x72]
  40fec7:	in     eax,0x15
  40fec9:	and    dl,al
  40fecb:	inc    esi
  40fecc:	add    DWORD PTR [ebx-0x417403d9],esp
  40fed2:	pop    ebx
  40fed3:	adc    eax,0x85e98de8
  40fed8:	mul    dh
  40feda:	repnz shr BYTE PTR [ecx+0x60],1
  40fede:	pop    es
  40fedf:	jge    0x40ff49
  40fee1:	push   esi
  40fee2:	xor    al,BYTE PTR [edx-0x5d60e4df]
  40fee8:	jg     0x40ff60
  40feea:	pop    edx
  40feeb:	sub    ebp,ebp
  40feed:	pop    esi
  40feee:	mov    al,ds:0x960ff299
  40fef3:	pmaxub mm0,QWORD PTR [ecx+edi*8+0x2c]
  40fef8:	out    dx,eax
  40fef9:	daa    
  40fefa:	ret    0x3be1
  40fefd:	mov    BYTE PTR [ebx+0x3aa69e2c],dl
  40ff03:	sbb    DWORD PTR [esi+edx*2+0x64],ecx
  40ff07:	daa    
  40ff08:	adc    BYTE PTR [edi-0x40],dl
  40ff0b:	sub    BYTE PTR [ebx-0x122b4718],al
  40ff11:	outs   dx,DWORD PTR ds:[esi]
  40ff12:	sub    DWORD PTR [esi-0x7ab2f53a],esi
  40ff18:	hlt    
  40ff19:	or     al,0x5a
  40ff1b:	add    eax,0x87f69b
  40ff20:	xchg   edi,eax
  40ff21:	je     0x40ff0e
  40ff23:	mov    DWORD PTR [eax],esp
  40ff25:	mov    DWORD PTR [esp+edi*2+0x35ff8ea9],0xcdcfdcbf
  40ff30:	arpl   WORD PTR [edx-0x7e],di
  40ff33:	ficomp DWORD PTR [ebx+esi*8]
  40ff36:	out    dx,eax
  40ff37:	aam    0xcc
  40ff39:	and    eax,0x19f61f5b
  40ff3e:	push   ecx
  40ff3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff40:	push   ss
  40ff41:	fisttp DWORD PTR [eax]
  40ff43:	ret    0x3b6e
  40ff46:	mov    dh,BYTE PTR [edx-0xd]
  40ff49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff4a:	cmp    eax,0xe43c3890
  40ff4f:	add    al,0x2a
  40ff51:	jbe    0x40ff73
  40ff53:	and    al,0xe1
  40ff55:	sub    al,cl
  40ff57:	daa    
  40ff58:	es stc 
  40ff5a:	jns    0x40ff21
  40ff5c:	or     ecx,edi
  40ff5e:	in     al,0xca
  40ff60:	sbb    ecx,eax
  40ff62:	adc    BYTE PTR [ebp-0x2328db03],ah
  40ff68:	pop    ebp
  40ff69:	stc    
  40ff6a:	xchg   esp,eax
  40ff6b:	lods   eax,DWORD PTR ds:[esi]
  40ff6c:	jmp    0x460e:0x6c30555b
  40ff73:	dec    ebx
  40ff74:	pop    edi
  40ff75:	and    al,0x38
  40ff77:	std    
  40ff78:	and    bl,0xdd
  40ff7b:	fld    QWORD PTR [esi+0x6c594038]
  40ff81:	cmp    al,0x3e
  40ff83:	mov    al,0x94
  40ff85:	push   0x28
  40ff87:	inc    ebx
  40ff88:	jl     0x40ffb1
  40ff8a:	xchg   edx,eax
  40ff8b:	pop    es
  40ff8c:	or     eax,0x9b75eb7e
  40ff91:	(bad)  
  40ff92:	rcr    BYTE PTR [ebp-0x6],cl
  40ff95:	sub    al,0x83
  40ff97:	aaa    
  40ff98:	imul   esi,edx,0x6509421d
  40ff9e:	(bad)  
  40ff9f:	mov    edi,esi
  40ffa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffa2:	scas   al,BYTE PTR es:[edi]
  40ffa3:	push   ds
  40ffa4:	arpl   WORD PTR [edx+edx*2],dx
  40ffa7:	dec    esi
  40ffa8:	cmc    
  40ffa9:	xchg   esi,eax
  40ffaa:	das    
  40ffab:	push   edx
  40ffac:	push   es
  40ffad:	or     al,0xf1
  40ffaf:	cmp    bl,bh
  40ffb1:	shl    DWORD PTR [ebx+eiz*4-0x72],0xa7
  40ffb6:	jmp    0x4112:0x3d45f3f5
  40ffbd:	cmp    bl,dh
  40ffbf:	ja     0x41002f
  40ffc1:	pushf  
  40ffc2:	sbb    BYTE PTR [edi+0x3aed648e],dh
  40ffc8:	push   0x5aaa97c4
  40ffcd:	jns    0x40ff6c
  40ffcf:	push   0x4e88c414
  40ffd4:	test   eax,0xfe409286
  40ffda:	mov    al,0x69
  40ffdc:	or     eax,0x428b32f0
  40ffe1:	and    BYTE PTR [edx-0x46dce500],ah
  40ffe7:	push   esi
  40ffe8:	fnstsw WORD PTR [edi+0x68]
  40ffeb:	not    DWORD PTR [esi-0x5025f68f]
  40fff1:	mov    bl,0xb4
  40fff3:	adc    eax,0x3a487052
  40fff8:	xchg   ecx,eax
  40fff9:	jae    0x40ffa1
  40fffb:	mov    ds:0x9af8b07a,al
  410000:	out    dx,al
  410001:	(bad)  
  410002:	mov    DWORD PTR [edx],ecx
  410004:	pop    es
  410005:	jbe    0x40ffa7
  410007:	dec    esp
  410008:	cli    
  410009:	fs inc ecx
  41000b:	ds push es
  41000d:	pop    ebx
  41000e:	sub    ah,dl
  410010:	mov    DWORD PTR [ebx-0x37d007fd],ecx
  410016:	retf   
  410017:	les    eax,FWORD PTR [eax]
  410019:	mov    dh,0x63
  41001b:	adc    eax,0x1d1c5a5f
  410020:	xlat   BYTE PTR ds:[ebx]
  410021:	and    ecx,ebx
  410023:	out    0xab,eax
  410025:	popf   
  410026:	sub    DWORD PTR [edx-0x7f],ebx
  410029:	dec    ecx
  41002a:	and    ecx,DWORD PTR ds:0xe7e9b979
  410030:	loop   0x410054
  410032:	or     al,ah
  410034:	aaa    
  410035:	rcr    BYTE PTR [edx],1
  410037:	push   0xfd3b0b2e
  41003c:	adc    DWORD PTR [edx+0x32593ef4],edi
  410042:	bound  esi,QWORD PTR [ebx]
  410044:	add    ch,BYTE PTR [ecx+edx*2-0x20d47437]
  41004b:	mov    esi,0x537bcf46
  410050:	jne    0x4100c0
  410052:	xor    eax,DWORD PTR [eax]
  410054:	in     al,0x7c
  410056:	fcom   QWORD PTR [esi]
  410058:	fcmovnbe st,st(2)
  41005a:	adc    ebp,ebp
  41005c:	inc    ecx
  41005d:	or     dh,bh
  41005f:	jmp    0x4100af
  410061:	pop    eax
  410062:	or     edi,ebp
  410064:	popf   
  410065:	aad    0x40
  410067:	rol    edi,1
  410069:	jae    0x4100b4
  41006b:	and    al,0x2f
  41006d:	and    eax,0xa8eebf60
  410072:	xchg   DWORD PTR [ebx],esp
  410074:	(bad)  
  410075:	in     eax,0x78
  410077:	jmp    0x685f5c1
  41007c:	call   0xad71cb66
  410081:	adc    DWORD PTR cs:[ebx],esi
  410084:	into   
  410085:	sbb    al,0x80
  410087:	and    BYTE PTR [edx-0xab8483e],bl
  41008d:	sbb    BYTE PTR [esi-0x39e40543],0x9d
  410094:	sub    eax,DWORD PTR [edi-0x5d]
  410097:	sbb    bl,BYTE PTR [eax]
  410099:	push   ss
  41009a:	adc    ah,0x35
  41009d:	test   ah,0x6f
  4100a0:	mov    ecx,0xd0fe616e
  4100a5:	bound  ecx,QWORD PTR [eax+esi*2+0x2485016d]
  4100ac:	imul   esi,DWORD PTR [edx+eiz*1-0x43],0x793a51e3
  4100b4:	call   0x2ba5c53
  4100b9:	push   edi
  4100ba:	retf   
  4100bb:	or     bl,dh
  4100bd:	cmp    edx,DWORD PTR [ebx-0x68282f0f]
  4100c3:	idiv   bh
  4100c5:	adc    BYTE PTR [edx+0x1f8c2c7],dh
  4100cb:	aas    
  4100cc:	stc    
  4100cd:	pop    edi
  4100ce:	les    esi,FWORD PTR [ebx]
  4100d0:	mov    edx,0x38d3901a
  4100d5:	add    DWORD PTR [ebx-0x64],ebp
  4100d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100d9:	sbb    al,0xd3
  4100db:	or     dh,ch
  4100dd:	xor    DWORD PTR [ebx-0x26],eax
  4100e0:	lods   al,BYTE PTR ds:[esi]
  4100e1:	xchg   edx,eax
  4100e2:	test   eax,0xf4dfba11
  4100e7:	scas   al,BYTE PTR es:[edi]
  4100e8:	pop    ss
  4100e9:	mov    cl,0xbb
  4100eb:	xchg   BYTE PTR [edi-0xb3f2a80],bh
  4100f1:	mov    al,0xb1
  4100f3:	loopne 0x4100fe
  4100f5:	jnp    0x410078
  4100f7:	xor    BYTE PTR [edx+0x7f],al
  4100fa:	xor    esp,DWORD PTR [edi-0x62]
  4100fd:	xchg   ebp,eax
  4100fe:	inc    esi
  4100ff:	xor    edi,DWORD PTR [edx]
  410101:	icebp  
  410102:	adc    BYTE PTR [edi],0xa
  410105:	adc    dl,bh
  410107:	imul   ebx,esi,0xffffffd2
  41010a:	sbb    ebp,edx
  41010c:	sbb    DWORD PTR [edi+0x233251ad],esi
  410112:	mov    edx,0xd5596cef
  410117:	loop   0x410104
  410119:	sub    eax,DWORD PTR [esi+0x6373682]
  41011f:	mov    BYTE PTR ds:0x3e4b8844,bh
  410125:	je     0x410112
  410127:	pop    esp
  410128:	pop    ebx
  410129:	sub    BYTE PTR [edi-0x23da2c49],dl
  41012f:	leave  
  410130:	xchg   esi,eax
  410131:	rcl    ah,cl
  410133:	lds    ebp,FWORD PTR [ebp-0x139853e5]
  410139:	sbb    ch,ah
  41013b:	bnd jns 0x4101a7
  41013e:	pop    edx
  41013f:	pop    esi
  410140:	xor    ch,BYTE PTR [ecx]
  410142:	rsqrtps xmm6,XMMWORD PTR [esi+0x49]
  410146:	(bad)  
  410147:	pop    ecx
  410148:	pusha  
  410149:	aas    
  41014a:	jo     0x41016a
  41014c:	js     0x41011d
  41014e:	ret    
  41014f:	push   esp
  410150:	sbb    DWORD PTR [ecx-0x27c187ad],edx
  410156:	and    DWORD PTR [ebp+0x3b],esi
  410159:	std    
  41015a:	mov    esp,ebp
  41015c:	jmp    0xb13ebf0a
  410161:	test   eax,0xeb4aa762
  410166:	jnp    0x41012f
  410168:	fbstp  TBYTE PTR [edx]
  41016a:	xor    BYTE PTR [eax],bl
  41016c:	xchg   edi,eax
  41016d:	imul   eax,DWORD PTR [edi+0x2490d20e],0x5c
  410174:	and    DWORD PTR [ebx-0x2b5ea0f6],esi
  41017a:	inc    ebx
  41017b:	repnz cmc 
  41017d:	mov    DWORD PTR [edx+0x65a5527b],edi
  410183:	push   eax
  410184:	adc    BYTE PTR ds:[edi],al
  410187:	xor    eax,0x9c5970c8
  41018c:	popf   
  41018d:	dec    edi
  41018e:	in     al,0xc9
  410190:	call   0x6dd32f24
  410195:	into   
  410196:	sbb    BYTE PTR [edi+0x3c0bd9e6],0x45
  41019d:	(bad)  
  41019e:	cmp    dh,BYTE PTR [ebx+0xfcd93f2]
  4101a4:	cld    
  4101a5:	(bad)  
  4101a6:	cmc    
  4101a7:	imul   esp,DWORD PTR [ecx],0xb07b04c2
  4101ad:	int    0x38
  4101af:	mov    edi,0x43c2d886
  4101b4:	xor    ecx,DWORD PTR [esi]
  4101b6:	adc    dl,dl
  4101b8:	and    DWORD PTR cs:[edi+0x58d8687d],edi
  4101bf:	call   0xb1e2:0x7a550f22
  4101c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101c7:	sbb    eax,0x6138ace8
  4101cc:	imul   ebx,DWORD PTR [eax+0x53],0xfffffff7
  4101d0:	adc    esp,ebp
  4101d2:	xor    al,0x8e
  4101d4:	dec    edx
  4101d5:	repnz ins DWORD PTR es:[edi],dx
  4101d7:	mov    eax,0xb75d0fb8
  4101dc:	ret    
  4101dd:	cdq    
  4101de:	out    0x31,al
  4101e0:	call   0xffbb:0xd5cb13aa
  4101e7:	icebp  
  4101e8:	xchg   ebp,eax
  4101e9:	out    0xe3,eax
  4101eb:	sub    DWORD PTR [ebp+edx*2-0x5c43f0b3],esi
  4101f2:	stos   DWORD PTR es:[edi],eax
  4101f3:	stos   BYTE PTR es:[edi],al
  4101f4:	mov    cs,esp
  4101f6:	mov    ds:0xc4f60b70,al
  4101fb:	in     al,dx
  4101fc:	and    BYTE PTR [ecx],cl
  4101fe:	cdq    
  4101ff:	xchg   DWORD PTR [ecx-0x452dd65e],eax
  410205:	out    dx,al
  410206:	inc    esi
  410207:	jmp    0xefd0:0xd616bde4
  41020e:	jecxz  0x4101be
  410210:	and    ebp,DWORD PTR [edx-0x7f489fb4]
  410216:	dec    ebp
  410217:	sbb    BYTE PTR [esi],ah
  410219:	add    eax,0x6d1b526
  41021e:	jp     0x41028d
  410220:	sbb    DWORD PTR [ecx-0x68],ebp
  410223:	sbb    eax,0x41867558
  410228:	inc    ebp
  410229:	retf   0x34e7
  41022c:	imul   ebp,edi,0x577a78a3
  410232:	adc    eax,0x1bd5a89e
  410237:	fwait
  410238:	or     dh,dl
  41023a:	into   
  41023b:	mov    dh,0xaf
  41023d:	jmp    0x6206:0xbf4e8c64
  410244:	lahf   
  410245:	(bad)  
  410246:	(bad)  
  410248:	xor    bl,BYTE PTR [edi+0x77776601]
  41024e:	sahf   
  41024f:	ss gs mov edx,0x8aade49d
  410256:	pop    es
  410257:	retf   0xde36
  41025a:	dec    eax
  41025b:	and    DWORD PTR [ebx-0x3e],0x41
  41025f:	cld    
  410260:	lds    esp,FWORD PTR [ebx+edi*1-0x32aeb694]
  410267:	push   esp
  410268:	push   esi
  410269:	xor    al,0x10
  41026b:	push   edx
  41026c:	les    eax,FWORD PTR [ebx]
  41026e:	out    0x1c,eax
  410270:	jge    0x4101f5
  410272:	fisubr WORD PTR [ebx+0x3]
  410275:	mov    ebp,0xbf2c8614
  41027a:	adc    ch,BYTE PTR [eax+0x38d6ce5a]
  410280:	xor    BYTE PTR [edi+0xff38643],0xd5
  410287:	loope  0x410280
  410289:	(bad)  
  41028a:	cmp    ebx,edi
  41028c:	std    
  41028d:	sub    al,0x16
  41028f:	xor    dh,BYTE PTR [esi+0x20]
  410292:	mov    cl,0x34
  410294:	mov    al,BYTE PTR [edx+eax*4+0x5]
  410298:	cmp    cl,cl
  41029a:	inc    edx
  41029b:	xchg   DWORD PTR [ecx-0x74],eax
  41029e:	xor    edx,DWORD PTR [ebx-0x4d]
  4102a1:	aad    0x39
  4102a3:	pop    esp
  4102a4:	mov    dl,0x60
  4102a6:	jge    0x410263
  4102a8:	mov    ebx,0x5c704a46
  4102ad:	add    BYTE PTR [ecx-0x6d],dl
  4102b0:	into   
  4102b1:	mov    cl,0xa
  4102b3:	dec    eax
  4102b4:	adc    al,BYTE PTR [edi-0x3b]
  4102b7:	test   dh,0xda
  4102ba:	push   0xffffffa6
  4102bc:	add    DWORD PTR [edx-0x7538f4f3],eax
  4102c2:	dec    ebx
  4102c3:	das    
  4102c4:	mov    ds:0x2e4c1a6e,eax
  4102c9:	inc    esp
  4102ca:	enter  0xee95,0xd1
  4102ce:	call   0xe97619a3
  4102d3:	jg     0x410298
  4102d5:	pushf  
  4102d6:	jne    0x410262
  4102d8:	loop   0x410319
  4102da:	mov    edx,0x401cd974
  4102df:	dec    edx
  4102e0:	cmp    bl,BYTE PTR [edx+0x555567b0]
  4102e6:	jbe    0x410340
  4102e8:	jns    0x410357
  4102ea:	cmp    BYTE PTR [ebx],bh
  4102ec:	cmp    cl,BYTE PTR [ecx+0x2b027297]
  4102f2:	lock lock fidiv DWORD PTR ds:0x4b56c3bb
  4102fa:	pop    ebp
  4102fb:	ja     0x410357
  4102fd:	cld    
  4102fe:	pop    ds
  4102ff:	sub    bh,ah
  410301:	loop   0x410305
  410303:	repnz cmp ebx,DWORD PTR [esi+0x1b]
  410307:	lods   al,BYTE PTR ds:[esi]
  410308:	arpl   WORD PTR [esi-0x6e],cx
  41030b:	mov    eax,edx
  41030d:	inc    esi
  41030e:	and    eax,0x9616d81e
  410313:	push   esi
  410314:	neg    ah
  410316:	scas   eax,DWORD PTR es:[edi]
  410317:	sahf   
  410318:	fs out dx,al
  41031a:	add    al,0xee
  41031c:	cs jp  0x410376
  41031f:	sub    BYTE PTR ds:0xfa9118e0,0xda
  410326:	stc    
  410327:	imul   ebx,DWORD PTR [eax+0x58],0x38
  41032b:	mov    bl,0xc2
  41032d:	cmp    al,dl
  41032f:	aas    
  410330:	shl    BYTE PTR [edi],0x2a
  410333:	mov    bh,0x77
  410335:	dec    edi
  410336:	retf   0x7d8
  410339:	xchg   esp,eax
  41033a:	pop    esp
  41033b:	lea    esp,[edx-0x80]
  41033e:	add    al,0x65
  410340:	fcomp  QWORD PTR [edx-0x1a]
  410343:	repz mov cl,0xac
  410346:	(bad)  [eax]
  410348:	int    0xce
  41034a:	retf   0x3ac7
  41034d:	cmp    dl,BYTE PTR [edx*4+0x14dde938]
  410354:	mov    ebx,0x6df2dfcc
  410359:	outs   dx,BYTE PTR ds:[esi]
  41035a:	inc    esp
  41035b:	dec    esi
  41035c:	neg    BYTE PTR [ecx+0x30]
  41035f:	pop    ebp
  410360:	and    bh,al
  410362:	popf   
  410363:	shl    al,1
  410365:	jmp    0x4e2ea465
  41036a:	pushf  
  41036b:	jmp    0x185a40db
  410370:	xchg   ecx,eax
  410371:	xlat   BYTE PTR ds:[ebx]
  410372:	ins    BYTE PTR es:[edi],dx
  410373:	cs mov eax,0x375561e7
  410379:	dec    esi
  41037a:	sbb    eax,0x37c93462
  41037f:	je     0x410396
  410381:	pop    esp
  410382:	sub    BYTE PTR [ebx],ch
  410384:	sbb    esi,DWORD PTR [ecx-0x4d460b37]
  41038a:	dec    ecx
  41038b:	int3   
  41038c:	mov    dl,0xd0
  41038e:	mov    bh,0x7d
  410390:	mov    ecx,0xf2741279
  410395:	jne    0x4103e8
  410397:	(bad)  [edx+0x3d]
  41039a:	mov    esi,0xae4bea4a
  41039f:	push   edx
  4103a0:	in     eax,dx
  4103a1:	xchg   ebp,eax
  4103a2:	inc    edx
  4103a3:	push   edx
  4103a4:	or     dl,BYTE PTR [ebx-0xda3d50f]
  4103aa:	ret    
  4103ab:	in     al,0x4a
  4103ad:	pop    eax
  4103ae:	mov    ch,0x99
  4103b0:	jle    0x4103b2
  4103b2:	out    dx,al
  4103b3:	fs into 
  4103b5:	enter  0xdb52,0x5f
  4103b9:	mov    ecx,0xcff33ea0
  4103be:	dec    esp
  4103bf:	xor    ebp,eax
  4103c1:	dec    esi
  4103c2:	push   edi
  4103c3:	xchg   edi,eax
  4103c4:	jge    0x410377
  4103c6:	cli    
  4103c7:	ins    DWORD PTR es:[edi],dx
  4103c8:	push   ebx
  4103c9:	loope  0x410390
  4103cb:	pop    edi
  4103cc:	in     al,0x3a
  4103ce:	mov    eax,ds:0x54592af2
  4103d3:	arpl   WORD PTR [ebx-0x2f],dx
  4103d6:	daa    
  4103d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103d8:	add    DWORD PTR [ecx+0x0],esi
  4103db:	and    esi,DWORD PTR [esi]
  4103dd:	inc    esi
  4103de:	inc    esp
  4103df:	add    DWORD PTR [ebx+0x56ec26af],eax
  4103e5:	in     al,dx
  4103e6:	popa   
  4103e7:	jb     0x41043f
  4103e9:	jnp    0x41038f
  4103eb:	lahf   
  4103ec:	pushf  
  4103ed:	call   0xdc5ff337
  4103f2:	jae    0x410427
  4103f4:	(bad)  
  4103f5:	push   ds
  4103f6:	pop    ecx
  4103f7:	fdivrp st(2),st
  4103f9:	(bad)  
  4103fa:	pop    ecx
  4103fb:	outs   dx,DWORD PTR ds:[esi]
  4103fc:	xchg   BYTE PTR [edx-0x8],dh
  4103ff:	jbe    0x410383
  410401:	std    
  410402:	imul   ebx,DWORD PTR [edi],0x9224e941
  410408:	out    dx,eax
  410409:	pushf  
  41040a:	cmc    
  41040b:	add    eax,0xbbaf5e5
  410410:	das    
  410411:	shl    BYTE PTR [esi],cl
  410413:	add    al,BYTE PTR [esi-0x5f]
  410416:	xlat   BYTE PTR ds:[ebx]
  410417:	pop    ds
  410418:	mov    esi,0x87dd99a2
  41041d:	xchg   ebx,eax
  41041e:	inc    ecx
  41041f:	dec    edx
  410420:	inc    ebx
  410421:	imul   esi,DWORD PTR [edx],0x1f61e00c
  410427:	jo     0x410458
  410429:	mov    ah,0x33
  41042b:	sti    
  41042c:	icebp  
  41042d:	lods   eax,DWORD PTR ds:[esi]
  41042e:	dec    edi
  41042f:	jae    0x410412
  410431:	dec    ebx
  410432:	xlat   BYTE PTR ds:[ebx]
  410433:	ret    0x5198
  410436:	add    ecx,DWORD PTR [eax]
  410438:	fucomi st,st(3)
  41043a:	jmp    0x410405
  41043c:	sub    al,al
  41043e:	xlat   BYTE PTR ds:[ebx]
  41043f:	push   es
  410440:	or     esi,ebx
  410442:	mov    dh,0xce
  410444:	test   eax,0x3b1349e3
  410449:	ins    DWORD PTR es:[edi],dx
  41044a:	mov    ecx,0x8204b672
  41044f:	(bad)  
  410450:	addr16 mov eax,0x2f69c1a3
  410456:	test   BYTE PTR [ecx-0x28],ch
  410459:	sbb    BYTE PTR ds:0xfd71c400,dh
  41045f:	pop    esp
  410460:	adc    ecx,edi
  410462:	(bad)  
  410463:	call   0x4ab7a120
  410468:	ret    0xf218
  41046b:	add    eax,0x3bd7648a
  410470:	out    0xd7,eax
  410472:	ds daa 
  410474:	in     eax,dx
  410475:	gs (bad) 
  410477:	mov    WORD PTR [eax+0x58],fs
  41047a:	ficom  DWORD PTR [ebp+0x16606b9a]
  410480:	nop
  410481:	daa    
  410482:	xor    DWORD PTR [esi-0x64720eee],esp
  410488:	ins    DWORD PTR es:[edi],dx
  410489:	jne    0x41045b
  41048b:	xchg   esp,eax
  41048c:	cmp    bh,ch
  41048e:	add    BYTE PTR [ebp-0x17],dl
  410491:	in     eax,0xf5
  410493:	inc    edx
  410494:	xor    BYTE PTR ds:0xcb06e399,ch
  41049a:	xchg   esp,eax
  41049b:	test   BYTE PTR [eax+0x7c],ah
  41049e:	outs   dx,BYTE PTR ds:[esi]
  41049f:	mov    bh,0xbc
  4104a1:	add    DWORD PTR [eax-0x5cd918a4],edx
  4104a7:	call   0xf096:0x21449723
  4104ae:	xchg   ebp,eax
  4104af:	jb     0x4104b5
  4104b1:	mov    dl,0x8b
  4104b3:	jg     0x4104da
  4104b5:	mov    ds:0x56f25fc3,al
  4104ba:	aam    0x97
  4104bc:	ss jg  0x4104b6
  4104bf:	or     esi,ecx
  4104c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104c2:	add    DWORD PTR [ebx+eiz*1-0x6e],ebp
  4104c6:	imul   edi,DWORD PTR ds:0x75c1cf8,0xbb81805a
  4104d0:	xor    al,0xa5
  4104d2:	push   es
  4104d3:	in     eax,dx
  4104d4:	aaa    
  4104d5:	add    BYTE PTR [bp-0x721],bh
  4104da:	add    edi,DWORD PTR [esi+0x186b4329]
  4104e0:	(bad)  
  4104e1:	xchg   esi,eax
  4104e2:	xchg   ebx,eax
  4104e3:	jmp    0x4104ac
  4104e5:	and    al,0xec
  4104e7:	int3   
  4104e8:	mov    al,ds:0xb164b56
  4104ed:	mov    ah,0xfd
  4104ef:	test   BYTE PTR [ecx],dh
  4104f1:	in     eax,dx
  4104f2:	fdivr  QWORD PTR [edi]
  4104f4:	int    0x48
  4104f6:	fdiv   QWORD PTR [ecx]
  4104f8:	jnp    0x410560
  4104fa:	and    DWORD PTR [eax],esi
  4104fc:	mov    bl,0x9d
  4104fe:	or     al,0x90
  410500:	(bad)  
  410501:	push   eax
  410502:	daa    
  410503:	add    ebp,eax
  410505:	xor    eax,0x4578fa9b
  41050a:	adc    al,0x79
  41050c:	cmp    eax,0xa873c460
  410511:	add    DWORD PTR [eax-0x75],esp
  410514:	repz pop ecx
  410516:	rol    BYTE PTR [ebx],cl
  410518:	xor    al,0x97
  41051a:	out    0x8f,al
  41051c:	aad    0xce
  41051e:	cmp    DWORD PTR [edx-0x31],eax
  410521:	mov    edi,0x8fcf4fb7
  410526:	aaa    
  410527:	mov    ds:0xa075e3b3,eax
  41052c:	fisub  DWORD PTR [eax+0x1e]
  41052f:	xchg   esi,eax
  410530:	sub    esi,DWORD PTR [edx+edi*1+0x58d74b3d]
  410537:	ins    DWORD PTR es:[edi],dx
  410538:	pop    esp
  410539:	int3   
  41053a:	cli    
  41053b:	inc    esi
  41053c:	loop   0x41052a
  41053e:	gs pop es
  410540:	iret   
  410541:	(bad)  
  410542:	dec    edi
  410543:	push   esp
  410545:	sbb    ebx,DWORD PTR [edi+esi*8+0x6ebabcbc]
  41054c:	jmp    0x22147022
  410551:	out    dx,al
  410552:	inc    esi
  410553:	xchg   esi,eax
  410554:	inc    ebx
  410555:	adc    eax,0x7959dc77
  41055a:	add    DWORD PTR [ebx],0x51eaea75
  410560:	push   0xffffff88
  410562:	cmp    DWORD PTR [edx-0x7b],ebp
  410565:	mov    ah,bh
  410567:	lds    esp,FWORD PTR [esp+esi*2-0x54]
  41056b:	lods   eax,DWORD PTR ds:[esi]
  41056c:	mov    eax,ds:0xaa90dc61
  410571:	dec    esi
  410572:	and    al,0xfe
  410574:	push   ecx
  410575:	jecxz  0x4105c5
  410577:	int3   
  410578:	mov    dh,0x3f
  41057a:	fs push 0x6462caba
  410580:	adc    DWORD PTR [ebp-0x6a],edi
  410583:	sbb    al,0x2
  410585:	in     al,0x62
  410587:	aas    
  410588:	test   eax,0x5a5d3266
  41058d:	test   BYTE PTR [edi+0x46],bh
  410590:	pop    esp
  410591:	dec    edx
  410592:	adc    al,0xf4
  410594:	stos   BYTE PTR es:[edi],al
  410595:	lds    esp,FWORD PTR [ebp-0x9ea38b4]
  41059b:	lock scas eax,DWORD PTR es:[edi]
  41059d:	nop
  41059e:	ret    0xd721
  4105a1:	mov    esi,0x993eebb0
  4105a6:	and    BYTE PTR [ebp-0x74a9663d],dl
  4105ac:	mov    dl,0x4d
  4105ae:	mov    bl,ch
  4105b0:	inc    esi
  4105b1:	fs push 0x470ae669
  4105b7:	rol    BYTE PTR [ecx],0xb3
  4105ba:	jbe    0x4105d1
  4105bc:	jae    0x4105f2
  4105be:	jns    0x4105f1
  4105c0:	inc    ebx
  4105c1:	stc    
  4105c2:	gs adc al,al
  4105c5:	cmp    DWORD PTR [edi],ecx
  4105c7:	and    dl,BYTE PTR [edi-0xb]
  4105ca:	lahf   
  4105cb:	call   0x4929b72c
  4105d0:	push   edx
  4105d1:	enter  0x9703,0x17
  4105d5:	xor    al,0xa3
  4105d7:	jnp    0x41059e
  4105d9:	push   es
  4105da:	aad    0xba
  4105dc:	pushf  
  4105dd:	leave  
  4105de:	imul   edi,DWORD PTR [ecx-0x24],0x1a98816d
  4105e5:	test   dl,bl
  4105e7:	jg     0x41065f
  4105e9:	lea    eax,[edx]
  4105eb:	xchg   edx,eax
  4105ec:	sub    edi,DWORD PTR [edx]
  4105ee:	xor    BYTE PTR [edx],dh
  4105f0:	or     eax,0xdfcbf300
  4105f5:	sbb    bh,cl
  4105f7:	and    DWORD PTR [edi-0x7f],0x1d
  4105fb:	stos   DWORD PTR es:[edi],eax
  4105fc:	arpl   sp,si
  4105fe:	inc    ebx
  4105ff:	jmp    0x4105d6
  410601:	sar    edx,cl
  410603:	call   0xb5aec699
  410608:	je     0x4105b2
  41060a:	inc    eax
  41060b:	fucom  st(2)
  41060d:	aam    0xc5
  41060f:	mov    al,0x7e
  410611:	inc    ebp
  410612:	push   ss
  410613:	retf   0x4c2e
  410616:	xor    ebx,DWORD PTR [ecx+0x39]
  410619:	test   DWORD PTR [ecx],ebx
  41061b:	jle    0x4105bb
  41061d:	int3   
  41061e:	pop    ebx
  41061f:	push   edi
  410620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410621:	ds jno 0x41061c
  410624:	fsubr  DWORD PTR [ecx]
  410626:	inc    ebp
  410627:	fidiv  WORD PTR [ebx]
  410629:	jbe    0x41069f
  41062b:	cmc    
  41062c:	stos   DWORD PTR es:[edi],eax
  41062d:	or     dl,bh
  41062f:	std    
  410630:	pop    eax
  410631:	stc    
  410632:	and    eax,0x72e44e23
  410637:	or     eax,0xd3729455
  41063c:	outs   dx,DWORD PTR ds:[esi]
  41063d:	shr    BYTE PTR [esi-0x25710381],1
  410643:	fs nop
  410645:	sti    
  410646:	cld    
  410647:	pop    es
  410648:	nop
  410649:	popa   
  41064a:	mov    bh,0x65
  41064c:	cmp    bl,BYTE PTR [esi]
  41064e:	jecxz  0x410624
  410650:	push   esi
  410651:	(bad)  
  410652:	xor    edx,esp
  410654:	mov    BYTE PTR [ebx],ah
  410656:	cmc    
  410657:	imul   esi,edx,0xdac6546e
  41065d:	bound  eax,QWORD PTR [ecx+esi*8]
  410660:	mov    eax,0x7f353f18
  410665:	cmp    eax,0xf5f04516
  41066a:	out    0x28,eax
  41066c:	fwait
  41066d:	hlt    
  41066e:	test   BYTE PTR [edx],bl
  410670:	idiv   esp
  410672:	push   es
  410673:	or     al,0x3f
  410675:	xchg   ebx,eax
  410676:	xchg   cl,al
  410678:	xchg   edx,eax
  410679:	es dec ebp
  41067b:	sti    
  41067c:	test   DWORD PTR ds:0x618e358d,ebx
  410682:	in     eax,dx
  410683:	inc    edi
  410684:	ja     0x410658
  410686:	push   edi
  410687:	out    dx,eax
  410688:	jno    0x410698
  41068a:	or     DWORD PTR [eax],esp
  41068c:	popf   
  41068d:	mov    ds:0x81fd3444,al
  410692:	mov    ch,0xb8
  410694:	xchg   BYTE PTR [eax+edi*2-0x15],al
  410698:	mov    DWORD PTR [esp+0x3d],eax
  41069c:	sub    al,0xe2
  41069e:	sbb    esi,esp
  4106a0:	out    0x4c,eax
  4106a2:	jmp    0x4106a8
  4106a4:	sbb    ebp,DWORD PTR [edi+ebp*1+0x266e67b8]
  4106ab:	mov    ebx,0x586fa59b
  4106b0:	(bad)  
  4106b1:	sbb    eax,0x5b89fb92
  4106b6:	dec    edi
  4106b7:	dec    ebx
  4106b9:	dec    ecx
  4106ba:	loop   0x41070e
  4106bc:	xor    ah,ah
  4106be:	add    dl,BYTE PTR [edi+0x1e0f8655]
  4106c4:	jle    0x4106db
  4106c6:	in     al,dx
  4106c7:	cli    
  4106c8:	pop    esp
  4106c9:	add    BYTE PTR [edi+ebp*8],0x71
  4106cd:	sub    eax,DWORD PTR [eax-0x26]
  4106d0:	xor    esp,esi
  4106d2:	aam    0xc0
  4106d4:	sbb    al,0x23
  4106d6:	outs   dx,DWORD PTR ds:[esi]
  4106d7:	lods   al,BYTE PTR ds:[esi]
  4106d8:	lahf   
  4106d9:	or     DWORD PTR [edi-0xb7f250],ebx
  4106df:	repnz sub esp,DWORD PTR [eax-0x638769bf]
  4106e6:	fnstenv [esi+ebp*8]
  4106e9:	push   edx
  4106ea:	into   
  4106eb:	fdiv   QWORD PTR [ebp+0x67]
  4106ee:	mov    DWORD PTR [ecx+ecx*4+0x79bdd02a],esi
  4106f5:	fiadd  DWORD PTR [ecx+0x49ad8042]
  4106fb:	leave  
  4106fc:	and    BYTE PTR [ebp+0x3d895431],bh
  410702:	cmp    eax,0x131c65ed
  410707:	mov    eax,0xf9cd7bbb
  41070c:	repz dec esi
  41070e:	xchg   BYTE PTR [edx],ah
  410710:	push   ss
  410711:	fs addr16 mov cl,ch
  410715:	pop    ebp
  410716:	mov    ch,0xa6
  410718:	sub    DWORD PTR ds:0xa277a3ec,edx
  41071e:	pop    edx
  41071f:	addr16 pop es
  410721:	int3   
  410722:	fild   WORD PTR [edi]
  410724:	add    al,BYTE PTR [esi+0x6c]
  410727:	cmp    BYTE PTR [edi],ah
  410729:	ja     0x41074d
  41072b:	inc    eax
  41072c:	pop    ebx
  41072d:	mov    db5,ebx
  410730:	popa   
  410731:	cmp    DWORD PTR [esp+edi*1-0x66],ecx
  410735:	xchg   DWORD PTR [edi-0x54],esi
  410738:	sub    esp,esp
  41073a:	ins    DWORD PTR es:[edi],dx
  41073b:	outs   dx,BYTE PTR ds:[esi]
  41073c:	shr    esi,1
  41073e:	fadd   DWORD PTR [esi-0x25]
  410741:	scas   eax,DWORD PTR es:[edi]
  410742:	loopne 0x410702
  410744:	push   esp
  410745:	xchg   DWORD PTR [ecx+0x664e7b75],ecx
  41074b:	not    edi
  41074d:	sbb    eax,0xb01aa466
  410752:	inc    ecx
  410753:	adc    ecx,edi
  410755:	fcmovne st,st(5)
  410757:	jmp    0x1beb71c
  41075c:	add    DWORD PTR [edx-0x1330ec17],ebp
  410762:	push   ss
  410763:	loopne 0x41070f
  410765:	test   eax,0x9d3e61c0
  41076a:	sub    dh,0xf1
  41076d:	pop    ecx
  41076e:	test   DWORD PTR [ebx+0x14],0x4f3b68d5
  410775:	imul   esi,esp,0x7
  410778:	fld    DWORD PTR [eax-0x5613c01d]
  41077e:	ds push ds
  410780:	mov    ebx,0x3336b358
  410785:	or     al,0xe3
  410787:	sbb    DWORD PTR [esi+ebp*2],0xc75a2c29
  41078e:	mov    WORD PTR [ebx+0x47eaacf1],fs
  410794:	jno    0x4107c0
  410796:	jp     0x4107bf
  410798:	test   BYTE PTR [eax-0x71],cl
  41079b:	std    
  41079c:	call   0x1aa102ec
  4107a1:	int3   
  4107a2:	aam    0x4b
  4107a4:	mov    ecx,0xca8cb479
  4107a9:	mov    edi,0xabc1ed8c
  4107ae:	into   
  4107af:	pusha  
  4107b0:	jne    0x41074e
  4107b2:	or     BYTE PTR [ecx],0x2b
  4107b5:	je     0x410808
  4107b7:	pushf  
  4107b8:	cmp    BYTE PTR ds:0x26f1be01,al
  4107be:	xchg   ebx,eax
  4107bf:	shl    DWORD PTR [ebx+0x66],0xf2
  4107c3:	inc    ebp
  4107c4:	jo     0x410820
  4107c6:	stos   DWORD PTR es:[edi],eax
  4107c7:	aaa    
  4107c8:	push   ss
  4107c9:	rol    edx,1
  4107cb:	stos   DWORD PTR es:[edi],eax
  4107cc:	add    BYTE PTR [ecx+0x1d],bl
  4107cf:	lock dec ecx
  4107d1:	push   0x64f4b482
  4107d6:	sbb    BYTE PTR [ebp+0x4],al
  4107d9:	xor    BYTE PTR [ebx-0x63],ch
  4107dc:	int    0xf2
  4107de:	sub    eax,0x8b17f159
  4107e3:	cmp    DWORD PTR [edx],ecx
  4107e5:	fcmovnu st,st(2)
  4107e7:	sbb    al,0x7b
  4107e9:	cwde   
  4107ea:	push   edi
  4107eb:	fstp   DWORD PTR [edx+0x2e]
  4107ee:	aad    0x2a
  4107f0:	jmp    0x41079f
  4107f2:	fadd   DWORD PTR [esi-0x34]
  4107f5:	sbb    dh,bl
  4107f7:	adc    DWORD PTR [ecx+0xa7ae386],esp
  4107fd:	xlat   BYTE PTR ds:[ebx]
  4107fe:	xchg   edi,eax
  4107ff:	sub    DWORD PTR [esi-0x21],esp
  410802:	add    BYTE PTR [ecx+0x1c1dea6a],bl
  410808:	mov    cl,0xe9
  41080a:	fwait
  41080b:	jbe    0x4107c0
  41080d:	test   BYTE PTR [ebx],bl
  41080f:	push   0x3443b061
  410814:	mov    BYTE PTR [ebx-0x79],ah
  410817:	fwait
  410818:	into   
  410819:	in     al,0x2a
  41081b:	mov    cl,ch
  41081d:	pop    ss
  41081e:	sub    BYTE PTR [esi+ebp*1],dh
  410821:	popf   
  410822:	sti    
  410823:	mov    edi,0x4bee9fe5
  410828:	dec    esi
  410829:	jnp    0x410853
  41082b:	clc    
  41082c:	imul   ebx,DWORD PTR [ecx+esi*4-0xdb74437],0xe044c5b0
  410837:	push   ss
  410838:	bound  edx,QWORD PTR ds:0x27c195c1
  41083e:	stc    
  41083f:	in     al,dx
  410840:	and    BYTE PTR [edx+0xb],0xfc
  410844:	push   ebx
  410845:	shr    DWORD PTR [edx-0x3f],0x10
  410849:	out    0x71,al
  41084b:	test   dh,al
  41084d:	mov    ds:0x668c9935,al
  410852:	bound  ebx,QWORD PTR [eax]
  410854:	sar    BYTE PTR [eax+0x6fd44cf0],0x4a
  41085b:	dec    eax
  41085c:	imul   esp,DWORD PTR [eax+0x76],0x43d269ae
  410863:	adc    BYTE PTR [esi-0x6b],bh
  410866:	rcr    BYTE PTR [edx+0x4ba03d22],0x3e
  41086d:	lods   al,BYTE PTR ds:[esi]
  41086e:	push   edx
  41086f:	ja     0x41085b
  410871:	push   edi
  410872:	fidivr WORD PTR [ebx]
  410874:	fild   QWORD PTR [ecx-0x73d0ce2b]
  41087a:	jbe    0x41086f
  41087c:	jg     0x410890
  41087e:	call   0x9104:0x7272ce27
  410885:	cmp    BYTE PTR ds:0x372e693f,dl
  41088b:	mov    eax,0xb6c5b1d1
  410890:	cmp    esi,edi
  410892:	es (bad) 
  410894:	imul   esp,DWORD PTR ds:0x4ee1cb7d,0x47
  41089b:	xchg   edx,eax
  41089c:	sub    ebx,DWORD PTR [edi+0x43be0eaf]
  4108a2:	adc    cl,BYTE PTR [ecx+eiz*1-0x2]
  4108a6:	ss nop
  4108a8:	xchg   edi,eax
  4108a9:	mov    esp,0x2fe10a82
  4108ae:	aad    0x97
  4108b0:	mov    ecx,DWORD PTR [ebx-0x2b]
  4108b3:	inc    edx
  4108b4:	test   al,0x6b
  4108b6:	(bad)  
  4108b7:	mov    cl,BYTE PTR [edx]
  4108b9:	xchg   edi,eax
  4108ba:	(bad)  
  4108bc:	xchg   BYTE PTR [edi],bh
  4108be:	popa   
  4108bf:	inc    ebx
  4108c0:	in     al,0x65
  4108c2:	cmc    
  4108c3:	xchg   edx,eax
  4108c4:	mov    BYTE PTR [esi+0x54],ch
  4108c7:	fnstenv [ebp+0x51]
  4108ca:	pop    ebx
  4108cb:	mov    ecx,cs
  4108cd:	and    ebx,edi
  4108cf:	mov    BYTE PTR [esi-0x15],dh
  4108d2:	aad    0xd4
  4108d4:	imul   ebx,ebx,0xef065157
  4108da:	mov    dh,BYTE PTR [ebx-0x19]
  4108dd:	stos   BYTE PTR es:[edi],al
  4108de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108df:	inc    esp
  4108e0:	cdq    
  4108e1:	aad    0x6f
  4108e3:	fwait
  4108e4:	add    DWORD PTR [ecx-0x1c],ebp
  4108e7:	pop    ss
  4108e8:	mov    cl,0x9f
  4108ea:	push   eax
  4108eb:	jnp    0x4108eb
  4108ed:	cwde   
  4108ee:	xor    bl,cl
  4108f0:	pop    edx
  4108f1:	dec    ebp
  4108f2:	or     ecx,DWORD PTR [eax-0x14aaf80b]
  4108f8:	cmp    BYTE PTR [esi-0x55],0xdb
  4108fc:	out    0x4d,al
  4108fe:	mov    ds:0xaa66d0d5,al
  410903:	retf   0x52cc
  410906:	pop    edx
  410907:	cs mov ch,0x25
  41090a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41090b:	imul   ebx,ecx,0x833e5419
  410911:	nop
  410912:	ds int3 
  410914:	ss jl  0x41091c
  410917:	adc    dl,BYTE PTR [esi-0xdb48b8d]
  41091d:	mov    bl,0xb8
  41091f:	lods   eax,DWORD PTR ds:[esi]
  410920:	int3   
  410921:	mov    DWORD PTR [edi+0x18],0x9fec9068
  410928:	xchg   ebx,eax
  410929:	adc    eax,0x28a48a48
  41092e:	hlt    
  41092f:	dec    esp
  410930:	je     0x410956
  410932:	(bad)  
  410933:	jmp    0x4108f9
  410935:	cli    
  410936:	data16 fisub WORD PTR ds:0x188088c6
  41093d:	inc    eax
  41093e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41093f:	xchg   BYTE PTR [edx-0x35],bl
  410942:	outs   dx,BYTE PTR ds:[esi]
  410943:	adc    al,0x84
  410945:	(bad)  
  410946:	or     BYTE PTR [edx-0x556cce8e],al
  41094c:	mov    bl,0x4d
  41094e:	xchg   ebx,eax
  41094f:	cs in  al,dx
  410951:	or     edi,DWORD PTR [ecx+0x46ae56db]
  410957:	or     eax,0xa219bdac
  41095c:	je     0x4109da
  41095e:	out    0xb7,al
  410960:	and    DWORD PTR [ebx-0x5b],eax
  410963:	stos   DWORD PTR es:[edi],eax
  410964:	pop    ecx
  410965:	pop    ecx
  410966:	mov    eax,ds:0xd02e2e0e
  41096b:	adc    ebp,ebp
  41096d:	or     esi,DWORD PTR [edi-0x24c8f09f]
  410973:	ffree  st(1)
  410975:	xchg   edi,eax
  410976:	cmp    DWORD PTR [esi],0xf3c5da40
  41097c:	out    dx,eax
  41097d:	fistp  DWORD PTR [eax+ebx*1+0x5a]
  410981:	push   ss
  410982:	sub    dl,dh
  410984:	and    edi,DWORD PTR [ebp+0x5b29b3c7]
  41098a:	adc    eax,0x63eca2f1
  41098f:	push   edx
  410990:	xchg   edx,eax
  410992:	addr16 and al,0x1
  410995:	jmp    0x41097a
  410997:	push   ecx
  410998:	mov    cs,esi
  41099a:	mov    eax,ds:0xcb587b22
  41099f:	or     eax,0x8cc779a8
  4109a4:	sbb    edx,DWORD PTR [ecx]
  4109a6:	pop    ecx
  4109a7:	dec    ebp
  4109a8:	ret    
  4109a9:	out    dx,eax
  4109aa:	(bad)  
  4109ab:	cmp    al,0x7a
  4109ad:	ds cs mov cl,0xee
  4109b1:	cmp    eax,ebx
  4109b3:	jle    0x41098a
  4109b5:	pushf  
  4109b6:	fbstp  TBYTE PTR [esi-0x70]
  4109b9:	xchg   edx,eax
  4109ba:	cli    
  4109bb:	into   
  4109bc:	xchg   ecx,eax
  4109bd:	out    0x88,al
  4109bf:	pop    ebx
  4109c0:	cmp    DWORD PTR [esp+edx*8],esp
  4109c3:	test   eax,0x2e75b42f
  4109c8:	in     al,dx
  4109c9:	in     al,0x94
  4109cb:	xchg   esp,eax
  4109cc:	mov    esp,0x67e0ca16
  4109d1:	(bad)  
  4109d2:	out    dx,eax
  4109d3:	cmp    eax,0xcfeeae8f
  4109d8:	push   0xffffffee
  4109da:	inc    ebp
  4109db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109dc:	dec    eax
  4109dd:	xchg   edx,eax
  4109de:	and    al,0x5c
  4109e0:	push   es
  4109e1:	fiadd  DWORD PTR [eax+0x31]
  4109e4:	aaa    
  4109e5:	xchg   esp,eax
  4109e6:	mov    edi,0x5e4aaf9c
  4109eb:	jl     0x4109e5
  4109ed:	int    0x5b
  4109ef:	mul    al
  4109f1:	in     al,dx
  4109f2:	pop    eax
  4109f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109f4:	ret    
  4109f5:	jae    0x41098c
  4109f7:	in     eax,dx
  4109f8:	or     al,0x22
  4109fa:	rcr    DWORD PTR [edx],cl
  4109fc:	stos   BYTE PTR es:[edi],al
  4109fd:	xchg   ebp,eax
  4109fe:	arpl   WORD PTR [ebx-0x3c],si
  410a01:	data16 sahf 
  410a03:	add    esi,DWORD PTR [ebp+ebp*2+0x4b]
  410a07:	add    edx,DWORD PTR [esi]
  410a09:	pop    ss
  410a0a:	adc    DWORD PTR [esi-0x29e4b841],edi
  410a10:	inc    edx
  410a11:	mov    eax,ds:0x901c8b2a
  410a16:	and    al,0x38
  410a18:	jae    0x4109d8
  410a1a:	cmp    ebp,DWORD PTR [ebp+0x62]
  410a1d:	or     ebx,DWORD PTR [ecx]
  410a1f:	add    DWORD PTR ds:0x3c7a79a8,edi
  410a25:	(bad)  
  410a26:	sbb    eax,0x5dd1429d
  410a2b:	fstp   TBYTE PTR ds:0x3272ee66
  410a31:	imul   esp,DWORD PTR [ebx-0x58708875],0xffffffad
  410a38:	(bad)  
  410a39:	stc    
  410a3a:	cmp    ecx,DWORD PTR [ebx+esi*2-0x2030e5d3]
  410a41:	rcr    BYTE PTR [eax],cl
  410a43:	test   al,0xaf
  410a45:	aad    0x92
  410a47:	scas   eax,DWORD PTR es:[edi]
  410a48:	(bad)  
  410a4b:	mov    ecx,0x429a1dcb
  410a50:	adc    BYTE PTR [ebp+0x2ed5ab8c],ah
  410a56:	in     al,dx
  410a57:	fiadd  WORD PTR [ecx+0x29]
  410a5a:	aad    0x81
  410a5c:	cmp    edx,DWORD PTR [edx-0x29faa8f6]
  410a62:	inc    eax
  410a63:	sub    BYTE PTR [eax+0x636f048b],bh
  410a69:	imul   esp,DWORD PTR ds:0xb8b4ed51,0x6a
  410a70:	out    0x79,eax
  410a72:	repnz dec ecx
  410a74:	add    edx,ecx
  410a76:	enter  0x81e6,0x14
  410a7a:	sub    edi,DWORD PTR [edi]
  410a7c:	aam    0xe1
  410a7e:	je     0x410ae8
  410a80:	xchg   esi,eax
  410a81:	and    BYTE PTR [edx-0x4f11adc3],dl
  410a87:	dec    edx
  410a88:	test   al,0xbf
  410a8a:	imul   esi,DWORD PTR [ebx+0x2696bed1],0x6948bd46
  410a94:	dec    esp
  410a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a96:	hlt    
  410a97:	mov    ah,0x1e
  410a99:	xchg   al,dl
  410a9b:	mov    ebp,0x7df9820e
  410aa0:	xchg   edx,eax
  410aa1:	fisttp QWORD PTR [ebp-0x61]
  410aa4:	ret    0x64e5
  410aa7:	sti    
  410aa8:	repz xchg esp,eax
  410aaa:	xchg   edx,eax
  410aab:	cld    
  410aac:	adc    DWORD PTR [ebp-0x4eb9c3aa],0xffffffc7
  410ab3:	adc    esp,ebx
  410ab5:	pop    eax
  410ab6:	xchg   esi,eax
  410ab7:	div    BYTE PTR [edx+0x4f]
  410aba:	test   al,0xde
  410abc:	jecxz  0x410b38
  410abe:	inc    eax
  410abf:	mov    ds,WORD PTR [edi+0x2a]
  410ac2:	push   cs
  410ac3:	mov    ecx,0x3f81be8d
  410ac8:	add    bl,al
  410aca:	cdq    
  410acb:	or     eax,0x2b9f8f52
  410ad0:	jno    0x410af5
  410ad2:	and    eax,0x1c2ce5b0
  410ad7:	pop    ebx
  410ad8:	sbb    al,0x65
  410ada:	das    
  410adb:	pop    ss
  410adc:	ficomp WORD PTR [edx]
  410ade:	enter  0x6841,0xa5
  410ae2:	out    dx,al
  410ae3:	mov    ecx,0x8cc88a69
  410ae8:	push   0x30
  410aea:	sub    al,0xba
  410aec:	popf   
  410aed:	out    dx,al
  410aee:	push   edi
  410aef:	gs clc 
  410af1:	aas    
  410af2:	cmp    al,0x5c
  410af4:	nop
  410af5:	test   al,0x85
  410af7:	gs aas 
  410af9:	sub    esi,esp
  410afb:	dec    eax
  410afc:	xchg   edx,eax
  410afd:	sbb    DWORD PTR [ecx+0x63],edx
  410b00:	jg     0x410b2d
  410b02:	rcl    BYTE PTR [edi-0x3fea53a2],0x57
  410b09:	pop    esi
  410b0a:	xchg   edi,eax
  410b0b:	cmc    
  410b0c:	or     eax,0x7ccd018
  410b11:	icebp  
  410b12:	cdq    
  410b13:	bound  esp,QWORD PTR [edx]
  410b15:	xor    edx,edi
  410b17:	cmp    eax,0xa28f6dae
  410b1c:	push   ds
  410b1d:	sub    esp,edx
  410b1f:	sub    BYTE PTR [edx],dl
  410b21:	repz mov esp,0xaa4734d4
  410b27:	jb     0x410b3f
  410b29:	jbe    0x410b23
  410b2b:	cmp    al,0xfb
  410b2d:	ret    0x5a0a
  410b30:	sub    eax,0x56db3891
  410b35:	cld    
  410b36:	jns    0x410aef
  410b38:	gs ret 
  410b3a:	xchg   esi,eax
  410b3b:	adc    bh,bl
  410b3d:	jl     0x410b3e
  410b3f:	repz clc 
  410b41:	imul   ebx,esi,0x40482a1f
  410b47:	lds    ebx,FWORD PTR ds:0xd1555b78
  410b4d:	hlt    
  410b4e:	push   ecx
  410b4f:	mov    DWORD PTR [ebp+0x1c],esi
  410b52:	xchg   BYTE PTR [edi+0x6eb41e92],ah
  410b58:	mov    ebx,0xaf263741
  410b5d:	xchg   esi,eax
  410b5e:	mov    ebp,0xa8fbd992
  410b63:	and    edi,DWORD PTR [edi-0x4367f2a9]
  410b69:	and    eax,0x64b1194
  410b6e:	and    ch,BYTE PTR ds:0xdb10307e
  410b74:	mov    bh,0x3e
  410b76:	cwde   
  410b77:	lea    ecx,[edi+0x1d]
  410b7a:	push   0x9c2c1f24
  410b7f:	push   ss
  410b80:	pop    ebx
  410b81:	xchg   ecx,eax
  410b82:	frstor [edx+0x15fba2e0]
  410b88:	sbb    eax,0xda37e58d
  410b8d:	aad    0x85
  410b8f:	out    0x70,al
  410b91:	scas   eax,DWORD PTR es:[edi]
  410b92:	add    esi,DWORD PTR [esi-0x737b0388]
  410b98:	cmp    esi,DWORD PTR [ecx+0x6bc5f35c]
  410b9e:	and    eax,0x319be4a1
  410ba3:	in     eax,dx
  410ba4:	shl    DWORD PTR [esi],0xe9
  410ba7:	mov    cl,0x4f
  410ba9:	sar    DWORD PTR [edx+edi*4-0x7b98df14],1
  410bb0:	test   ebx,0x9fda2eef
  410bb6:	jl     0x410bc3
  410bb8:	push   ebp
  410bb9:	ja     0x410bfb
  410bbb:	mov    dh,0x44
  410bbd:	mov    bh,0x8c
  410bbf:	add    DWORD PTR [ebx],ebx
  410bc1:	sbb    dh,BYTE PTR [ebx+eax*4]
  410bc4:	shl    DWORD PTR [eax-0x4bf2570a],1
  410bca:	and    bh,dl
  410bcc:	mov    BYTE PTR [esi],0xc
  410bcf:	sbb    ebp,DWORD PTR [edx-0x91e81ee]
  410bd5:	adc    DWORD PTR [edx],ecx
  410bd7:	enter  0x3085,0x55
  410bdb:	or     eax,0x9f52521e
  410be0:	jnp    0x410ba0
  410be2:	fstp   TBYTE PTR [ebx]
  410be4:	cmp    al,0x11
  410be6:	inc    esi
  410be7:	in     al,dx
  410be8:	xor    esi,edi
  410bea:	jmp    0x410c02
  410bec:	lods   eax,DWORD PTR ds:[esi]
  410bed:	pop    edx
  410bee:	loop   0x410bb9
  410bf0:	xor    al,0x47
  410bf2:	add    BYTE PTR [ebp-0x1],al
  410bf5:	leave  
  410bf6:	pop    esp
  410bf7:	cmp    cl,al
  410bf9:	out    dx,al
  410bfa:	lods   al,BYTE PTR ds:[esi]
  410bfb:	xchg   esp,eax
  410bfc:	enter  0x27c7,0xbc
  410c00:	sbb    ebp,DWORD PTR [eax-0x63575953]
  410c06:	sub    ebp,ecx
  410c08:	pop    esp
  410c09:	or     esi,eax
  410c0b:	repz jge 0x410b9f
  410c0e:	sub    BYTE PTR [ebp+esi*1-0x26],ah
  410c12:	cli    
  410c13:	pop    ecx
  410c14:	das    
  410c15:	sar    BYTE PTR [esi+0x44],cl
  410c18:	mov    gs,WORD PTR [ecx+0x1]
  410c1b:	fimul  DWORD PTR [ecx+0x48e66d8c]
  410c21:	repnz add BYTE PTR [ebx],0xb1
  410c25:	outs   dx,BYTE PTR ds:[esi]
  410c26:	leave  
  410c27:	lahf   
  410c28:	xor    eax,0x26eedc8a
  410c2d:	pop    ss
  410c2e:	jp     0x410bfb
  410c30:	push   ebp
  410c31:	hlt    
  410c32:	das    
  410c33:	xor    esp,DWORD PTR [eax+0x668dd5fc]
  410c39:	aas    
  410c3a:	pop    esp
  410c3b:	sub    BYTE PTR [eax],0x72
  410c3e:	push   es
  410c3f:	xor    eax,0x26be6aa8
  410c44:	stc    
  410c45:	dec    esp
  410c46:	dec    edx
  410c47:	dec    eax
  410c48:	inc    eax
  410c49:	or     bh,BYTE PTR [ebx]
  410c4b:	xchg   esi,eax
  410c4c:	lods   al,BYTE PTR ds:[esi]
  410c4d:	test   cl,dl
  410c4f:	mov    esp,es
  410c51:	or     dh,bl
  410c53:	pushf  
  410c54:	ins    DWORD PTR es:[edi],dx
  410c55:	je     0x410c28
  410c57:	jg     0x410c54
  410c59:	add    DWORD PTR [ebx-0x303208c4],esi
  410c5f:	push   es
  410c60:	fld    DWORD PTR [ecx+0x6a]
  410c63:	mov    ecx,0x625d427a
  410c68:	(bad)  
  410c69:	je     0x410bfa
  410c6b:	pop    ebp
  410c6c:	test   DWORD PTR [edx+0x14ddaa9a],ecx
  410c72:	in     al,0x39
  410c74:	inc    ebp
  410c75:	or     bl,BYTE PTR [eax-0x2d7262cc]
  410c7b:	pusha  
  410c7c:	mov    bl,0x4e
  410c7e:	popa   
  410c7f:	xor    eax,0x7b17c3a5
  410c84:	mov    cl,0xdd
  410c86:	les    ebp,FWORD PTR [esp+edi*8-0x46]
  410c8a:	push   0x54f36f
  410c8f:	cwde   
  410c90:	mov    al,0xe1
  410c92:	or     ecx,DWORD PTR [edx+ebp*4]
  410c95:	dec    ebp
  410c96:	mov    eax,esi
  410c98:	rol    ch,0xe6
  410c9b:	sbb    al,0x4b
  410c9d:	cmp    DWORD PTR [ebx],0x2591ba6a
  410ca3:	adc    DWORD PTR [edi],esi
  410ca5:	aam    0x56
  410ca7:	dec    edi
  410ca8:	sbb    eax,DWORD PTR [esi]
  410caa:	adc    eax,0xf7511a15
  410caf:	aaa    
  410cb0:	mov    esi,0xbfa80a53
  410cb5:	push   ebp
  410cb6:	inc    ecx
  410cb7:	push   0xcf875e64
  410cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cbd:	dec    esi
  410cbe:	fadd   QWORD PTR [ebx]
  410cc0:	mov    ebx,0x57f105ec
  410cc5:	in     al,0x75
  410cc7:	shl    BYTE PTR [ebp+0x7b],0x1
  410ccb:	sti    
  410ccc:	xor    al,0x86
  410cce:	jge    0x410cdc
  410cd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cd1:	xchg   ebp,eax
  410cd2:	pop    ds
  410cd3:	lock imul esi,DWORD PTR [esi-0x7b952854],0x34423c04
  410cde:	dec    ebx
  410cdf:	gs add eax,0xa80ad35a
  410ce5:	fcom   QWORD PTR [ecx+edi*2]
  410ce8:	fsub   QWORD PTR [edx]
  410cea:	ins    DWORD PTR es:[edi],dx
  410ceb:	cmp    eax,0xafc5c8b8
  410cf0:	lock xchg edx,eax
  410cf2:	mov    ah,0xe2
  410cf4:	and    eax,0xc9e83cec
  410cf9:	mov    eax,ecx
  410cfb:	js     0x410d1f
  410cfd:	sbb    dl,BYTE PTR [edx-0xd]
  410d00:	loopne 0x410d62
  410d02:	js     0x410ccb
  410d04:	pop    edi
  410d05:	jo     0x410c9a
  410d07:	loope  0x410d7b
  410d09:	jmp    0x4642c2e7
  410d0e:	cmp    esi,DWORD PTR [ecx+0x43a06421]
  410d14:	psubd  mm7,QWORD PTR [ebx+edi*4-0x77]
  410d19:	lock pop ds
  410d1b:	stc    
  410d1c:	loopne 0x410d66
  410d1e:	dec    esp
  410d1f:	dec    ecx
  410d20:	rcr    DWORD PTR [edi+0x73],0xff
  410d24:	ficomp WORD PTR [eax+eax*4+0xbf09ee7]
  410d2b:	ja     0x410d7d
  410d2d:	xor    ch,BYTE PTR [edi+esi*2-0x8]
  410d31:	mov    eax,ds:0x293682e8
  410d36:	add    ecx,DWORD PTR [edx]
  410d38:	fmul   QWORD PTR [ebx-0x3795dbb2]
  410d3e:	push   ss
  410d3f:	sahf   
  410d40:	loopne 0x410d48
  410d42:	xchg   ebp,ebp
  410d44:	mov    esi,0x75267be4
  410d49:	mov    esp,0x18d481bb
  410d4e:	mov    ecx,0xce258005
  410d53:	mov    eax,ds:0x842b5889
  410d58:	cwde   
  410d59:	xchg   ebp,eax
  410d5a:	mov    ebp,0x482264eb
  410d5f:	mov    al,0xb
  410d61:	cli    
  410d62:	dec    edi
  410d63:	arpl   WORD PTR [ecx-0x27],di
  410d66:	ja     0x410ced
  410d68:	jmp    0xfe91:0xbd37dd1
  410d6f:	iret   
  410d70:	add    al,0x4
  410d72:	add    BYTE PTR [esi],bl
  410d74:	xor    ebp,esp
  410d76:	push   cs
  410d77:	je     0x410de1
  410d79:	jecxz  0x410df1
  410d7b:	and    DWORD PTR [esp+eiz*2],0x2
  410d7f:	add    al,0x6
  410d81:	arpl   WORD PTR [ebx-0x9b39b18],dx
  410d87:	pop    esi
  410d88:	shl    DWORD PTR [esi+0x31],0x12
  410d8c:	mov    dh,0x63
  410d8e:	dec    esp
  410d8f:	xchg   edx,eax
  410d90:	cs ja  0x410dcf
  410d93:	aas    
  410d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d95:	daa    
  410d96:	ror    dh,cl
  410d98:	add    dl,BYTE PTR [edx-0x479d5ffd]
  410d9e:	aad    0x35
  410da0:	(bad)  
  410da1:	mov    bl,0xea
  410da3:	lds    ebx,FWORD PTR [edi-0x41606e22]
  410da9:	cdq    
  410daa:	inc    esp
  410dab:	push   esi
  410dac:	lahf   
  410dad:	inc    ebx
  410dae:	clc    
  410daf:	jl     0x410d9c
  410db1:	test   eax,0x7084c794
  410db6:	hlt    
  410db7:	arpl   WORD PTR fs:[ebp-0x56],ax
  410dbb:	push   ecx
  410dbc:	(bad)  
  410dbd:	hlt    
  410dbe:	push   0x65c9937f
  410dc3:	jae    0x410dfd
  410dc5:	bound  ebx,QWORD PTR [ebx]
  410dc7:	pop    esp
  410dc8:	fcom   QWORD PTR [eax+0x1df50664]
  410dce:	add    eax,0xd66f89ea
  410dd3:	adc    al,0x27
  410dd5:	clc    
  410dd6:	inc    esp
  410dd7:	mov    DWORD PTR [esi*4+0x39c66260],ebx
  410dde:	(bad)  
  410ddf:	shr    DWORD PTR [eax],1
  410de1:	mov    ebx,0x5dee6c5b
  410de6:	ss jecxz 0x410e57
  410de9:	cmp    al,0xe6
  410deb:	aas    
  410dec:	xchg   ecx,eax
  410ded:	ins    BYTE PTR es:[edi],dx
  410dee:	leave  
  410def:	sub    al,0x26
  410df1:	enter  0x922e,0x93
  410df5:	iret   
  410df6:	cld    
  410df7:	dec    ecx
  410df8:	mov    esp,0x30fa3c76
  410dfd:	arpl   WORD PTR [esi],sp
  410dff:	stos   DWORD PTR es:[edi],eax
  410e00:	adc    edx,0x2992a5e0
  410e06:	push   ebp
  410e07:	pop    eax
  410e08:	xor    BYTE PTR [ebx],bh
  410e0a:	sti    
  410e0b:	push   ebx
  410e0c:	sbb    BYTE PTR [ebx+0x35f2b7c2],0xab
  410e13:	jge    0x410dce
  410e15:	ja     0x410e52
  410e17:	iret   
  410e18:	dec    edi
  410e19:	pushf  
  410e1a:	push   esi
  410e1b:	mov    eax,DWORD PTR [ebx-0xd040d87]
  410e21:	frstor [ecx]
  410e23:	ret    0x42bd
  410e26:	mov    cl,0x70
  410e28:	cdq    
  410e29:	cdq    
  410e2a:	not    BYTE PTR [ebx-0x213654f]
  410e30:	cmp    BYTE PTR [edi-0x6ebeba53],ch
  410e36:	loopne 0x410e4e
  410e38:	mov    ?,WORD PTR [ecx]
  410e3a:	retf   0xaaf4
  410e3d:	xor    ebx,DWORD PTR [ebx+0x6b]
  410e40:	jno    0x410dc9
  410e42:	in     al,0xb6
  410e44:	bnd jns 0x410e19
  410e47:	adc    ah,BYTE PTR [esi-0xe]
  410e4a:	in     al,dx
  410e4b:	push   ds
  410e4c:	sub    BYTE PTR [edx-0x62cb0f88],dl
  410e52:	xor    BYTE PTR [eax-0x6d],bl
  410e55:	or     esi,esp
  410e57:	mov    si,?
  410e5a:	sbb    esp,DWORD PTR [esp+edx*1+0x18]
  410e5e:	xchg   edx,eax
  410e5f:	fs jmp 0xecf6:0x610f283
  410e67:	stc    
  410e68:	cld    
  410e69:	mov    dl,0x84
  410e6b:	mov    WORD PTR [ebx+0x34],es
  410e6e:	scas   eax,DWORD PTR es:[edi]
  410e6f:	dec    edx
  410e70:	xlat   BYTE PTR es:[ebx]
  410e72:	jb     0x410e38
  410e74:	daa    
  410e75:	and    ebx,DWORD PTR [esi-0x14be55d3]
  410e7b:	dec    ebp
  410e7c:	sbb    DWORD PTR [edx],edx
  410e7e:	call   0x40f:0x6d84a15b
  410e85:	aad    0x60
  410e87:	sub    cl,BYTE PTR [eax-0x3c6236d4]
  410e8d:	stos   BYTE PTR es:[edi],al
  410e8e:	xor    BYTE PTR [ecx-0x54],ch
  410e91:	xor    edx,DWORD PTR [edi-0x4cdb847e]
  410e97:	or     BYTE PTR [edx-0x2],ch
  410e9a:	sbb    al,0xf8
  410e9c:	sar    DWORD PTR [edx],0x4f
  410e9f:	std    
  410ea0:	sahf   
  410ea1:	js     0x410ea8
  410ea3:	leave  
  410ea4:	sbb    ecx,DWORD PTR [edi-0x35]
  410ea7:	pop    edi
  410ea8:	imul   eax,DWORD PTR [eax+ebp*1+0x79],0x16
  410ead:	xchg   ebx,eax
  410eae:	dec    edx
  410eaf:	call   0xe3b7ab71
  410eb4:	adc    edi,eax
  410eb6:	out    dx,al
  410eb7:	xchg   edi,eax
  410eb8:	int3   
  410eb9:	cmp    bl,dl
  410ebb:	jmp    0x410e54
  410ebd:	xor    DWORD PTR [edi+ecx*8],esi
  410ec0:	ss loopne 0x410f40
  410ec3:	dec    ebp
  410ec4:	pushf  
  410ec5:	stos   DWORD PTR es:[edi],eax
  410ec6:	push   0x1eae58a4
  410ecb:	aas    
  410ecc:	mov    bh,0x52
  410ece:	push   edi
  410ecf:	and    ecx,DWORD PTR [edi]
  410ed1:	loope  0x410f30
  410ed3:	popa   
  410ed4:	sub    DWORD PTR [eax],esp
  410ed6:	(bad)  
  410ed7:	sahf   
  410ed8:	push   ecx
  410ed9:	setbe  cl
  410edc:	out    0x31,al
  410ede:	fidivr DWORD PTR [esi+0x63]
  410ee1:	repnz sti 
  410ee3:	jns    0xee7d5549
  410ee9:	mov    WORD PTR [ecx-0x47cc9fb3],ds
  410eef:	add    eax,0x66cc590f
  410ef4:	push   ss
  410ef5:	or     eax,0x83bad9ac
  410efa:	pusha  
  410efb:	int3   
  410efc:	pop    ebx
  410efd:	fnsave [edx+0x64]
  410f00:	push   cs
  410f01:	stos   DWORD PTR es:[edi],eax
  410f02:	popa   
  410f03:	add    BYTE PTR [eax],dh
  410f05:	dec    edx
  410f06:	dec    ebx
  410f07:	iret   
  410f08:	push   esi
  410f09:	jno    0x410ef6
  410f0b:	mov    esp,0xc4661559
  410f10:	call   0x4d300063
  410f15:	leave  
  410f16:	aad    0x12
  410f18:	sub    esp,DWORD PTR [esi+0x30]
  410f1b:	sub    eax,0xe8d649ff
  410f20:	aad    0xf1
  410f22:	xchg   esp,eax
  410f23:	xchg   edx,eax
  410f24:	lock xchg ecx,eax
  410f26:	out    0x9b,eax
  410f28:	call   0x3e08:0xcdc286f3
  410f2f:	jae    0x410ed5
  410f31:	mov    WORD PTR [ebx+0x4b828ddb],?
  410f37:	pusha  
  410f38:	fabs   
  410f3a:	cld    
  410f3b:	add    eax,0x945ce79a
  410f40:	fwait
  410f41:	mov    edi,DWORD PTR [edi+0x6e]
  410f44:	xor    DWORD PTR [edx+0x20],esi
  410f47:	in     eax,dx
  410f48:	int3   
  410f49:	jge    0x410ed2
  410f4b:	stos   DWORD PTR es:[edi],eax
  410f4c:	dec    esp
  410f4d:	fdiv   DWORD PTR [esi+0x37]
  410f50:	pop    eax
  410f51:	dec    ebx
  410f52:	repz mov esp,0x3f6cf93a
  410f58:	jecxz  0x410f8b
  410f5a:	jmp    0x410fcf
  410f5c:	xor    DWORD PTR [ebx],ebx
  410f5e:	repz (bad) 
  410f60:	jmp    0xea56:0x1b0b34ca
  410f67:	sub    cx,WORD PTR ss:[ebp+0x13a89434]
  410f6f:	inc    edi
  410f70:	jle    0x410f86
  410f72:	data16 cmp bh,al
  410f75:	aad    0x4c
  410f77:	das    
  410f78:	or     dl,bl
  410f7a:	ins    DWORD PTR es:[edi],dx
  410f7b:	out    0x78,eax
  410f7d:	dec    ebp
  410f7e:	mov    al,ds:0xe46968d2
  410f83:	xchg   edx,eax
  410f84:	sbb    cl,BYTE PTR [edx+0x3291ecef]
  410f8a:	sbb    eax,0x4c974f4
  410f8f:	jno    0x410f7e
  410f91:	cmp    esp,ebx
  410f93:	jo     0x410faf
  410f95:	jno    0x410f3a
  410f97:	push   cs
  410f98:	push   edx
  410f99:	inc    edi
  410f9a:	inc    edx
  410f9b:	sbb    al,ch
  410f9d:	fst    st(3)
  410f9f:	sahf   
  410fa0:	and    eax,DWORD PTR [ebx+esi*4+0x53]
  410fa4:	push   eax
  410fa5:	pop    ebx
  410fa6:	lods   al,BYTE PTR ds:[esi]
  410fa7:	popf   
  410fa8:	popf   
  410fa9:	jle    0x41100a
  410fab:	sbb    eax,0xc7966fc4
  410fb0:	add    eax,0x17e8efaa
  410fb5:	ss mov ebp,0xcab1715
  410fbb:	mov    esp,0x335197b3
  410fc0:	shl    DWORD PTR [ebx],0xf9
  410fc3:	sub    DWORD PTR ds:0x42f01c,0x4b20
  410fcd:	mov    edx,0x3272e4
  410fd2:	add    edi,edx
  410fd4:	add    eax,edx
  410fd6:	imul   eax,edi
  410fd9:	mov    edi,DWORD PTR [ebp+0xc]
  410fdc:	cmp    edi,eax
  410fde:	je     0x411033
  410fe4:	mov    DWORD PTR [ebp-0xc],esi
  410fe7:	mov    eax,DWORD PTR [ebp-0xc]
  410fea:	mov    esi,DWORD PTR [ebp+0xc]
  410fed:	xor    eax,ecx
  410fef:	lea    eax,[eax*8+0x1939798]
  410ff6:	mov    eax,DWORD PTR [esi+eax*1]
  410ff9:	mov    DWORD PTR [ebp+0xc],eax
  410ffc:	mov    eax,DWORD PTR [ebp-0x4]
  410fff:	mov    esi,DWORD PTR [ebp-0x8]
  411002:	xor    eax,ecx
  411004:	xor    esi,ecx
  411006:	add    esi,edx
  411008:	add    eax,edx
  41100a:	imul   eax,esi
  41100d:	mov    esi,DWORD PTR [ebp+0xc]
  411010:	cmp    esi,eax
  411012:	je     0x411033
  411018:	mov    eax,DWORD PTR [ebp-0x4]
  41101b:	xor    eax,ecx
  41101d:	mov    ecx,DWORD PTR [ebp+0xc]
  411020:	add    eax,edx
  411022:	imul   eax,ecx
  411025:	add    eax,DWORD PTR [ebp+0x8]
  411028:	mov    DWORD PTR [ebp+0xc],eax
  41102b:	mov    eax,DWORD PTR [ebp+0xc]
  41102e:	jmp    0x411044
  411033:	mov    eax,DWORD PTR [ebp-0x4]
  411036:	mov    esi,DWORD PTR [ebp-0x8]
  411039:	xor    esi,ecx
  41103b:	xor    eax,ecx
  41103d:	add    esi,edx
  41103f:	add    eax,edx
  411041:	imul   eax,esi
  411044:	pop    edi
  411045:	pop    esi
  411046:	leave  
  411047:	ret    0x8
  41104a:	push   ebp
  41104b:	mov    ebp,esp
  41104d:	push   ecx
  41104e:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411055:	mov    eax,DWORD PTR [ebp-0x4]
  411058:	mov    ecx,DWORD PTR ds:0x42f00c
  41105e:	sub    ecx,DWORD PTR ds:0x432000
  411064:	mov    DWORD PTR ds:0x42f00c,ecx
  41106a:	mov    edx,DWORD PTR [ebp+0x10]
  41106d:	and    DWORD PTR ds:0x431000,0x0
  411077:	mov    ecx,DWORD PTR ds:0x431000
  41107d:	inc    ecx
  41107e:	mov    DWORD PTR ds:0x431000,ecx
  411084:	cmp    DWORD PTR ds:0x431000,0x9
  41108b:	jb     0x4110c6
  411091:	jmp    0x41109f
  411096:	push   DWORD PTR [ebp-0x10]
  411099:	call   DWORD PTR ds:0x4348d3
  41109f:	cmp    DWORD PTR ds:0x431000,0x8
  4110a6:	jne    0x4110b9
  4110ac:	mov    ecx,DWORD PTR ds:0x431000
  4110b2:	inc    ecx
  4110b3:	mov    DWORD PTR ds:0x431000,ecx
  4110b9:	cmp    DWORD PTR ds:0x431000,0x15
  4110c0:	jb     0x411077
  4110c6:	mov    ecx,0x751089d
  4110cb:	adc    DWORD PTR ds:0x42e01c,0x1fe6
  4110d5:	xor    eax,ecx
  4110d7:	sub    DWORD PTR ds:0x431014,0x42e018
  4110e1:	add    eax,0x3272e4
  4110e6:	adc    DWORD PTR ds:0x42f01c,0x6968
  4110f0:	mov    DWORD PTR [edx],eax
  4110f2:	mov    eax,DWORD PTR [ebp+0xc]
  4110f5:	xor    eax,ecx
  4110f7:	push   esi
  4110f8:	mov    esi,DWORD PTR [ebp+0x10]
  4110fb:	mov    edx,0x3272e4
  411100:	add    eax,edx
  411102:	mov    DWORD PTR [esi+0x4],eax
  411105:	mov    eax,DWORD PTR [ebp+0x14]
  411108:	mov    esi,DWORD PTR [ebp+0x10]
  41110b:	mov    DWORD PTR [esi+0x8],eax
  41110e:	mov    eax,DWORD PTR [ebp+0x18]
  411111:	mov    esi,DWORD PTR [ebp+0x10]
  411114:	mov    DWORD PTR [esi+0xc],eax
  411117:	mov    eax,DWORD PTR [ebp+0x1c]
  41111a:	mov    esi,DWORD PTR [ebp+0x10]
  41111d:	mov    DWORD PTR [esi+0x10],eax
  411120:	mov    eax,DWORD PTR [ebp+0x8]
  411123:	xor    eax,ecx
  411125:	add    eax,edx
  411127:	pop    esi
  411128:	leave  
  411129:	ret    0x18
  41112c:	push   ebp
  41112d:	mov    ebp,esp
  41112f:	sub    esp,0x9c
  411135:	mov    ecx,DWORD PTR [ebp+0x8]
  411138:	mov    eax,0x8a8e
  41113d:	adc    DWORD PTR ds:0x42f01c,0x2442
  411147:	xor    ax,WORD PTR [ecx+0x20]
  41114b:	mov    ecx,0x3b52
  411150:	add    ax,cx
  411153:	inc    ecx
  411154:	movzx  eax,ax
  411157:	mov    DWORD PTR [ebp-0x10],eax
  41115a:	xor    ecx,DWORD PTR ds:0x43201c
  411160:	mov    BYTE PTR [ebp-0x1],0x7d
  411164:	lea    eax,[ebp-0x1]
  411167:	or     DWORD PTR ds:0x42f010,edi
  41116d:	mov    DWORD PTR [ebp-0xc],eax
  411170:	sbb    ecx,DWORD PTR ds:0x42e008
  411176:	mov    al,BYTE PTR [ebp-0x1]
  411179:	mov    ecx,DWORD PTR [ebp-0xc]
  41117c:	add    DWORD PTR ds:0x43000c,0x430000
  411186:	xor    al,0x75
  411188:	or     DWORD PTR ds:0x43200c,0x43201c
  411192:	sub    al,0x7
  411194:	or     DWORD PTR ds:0x43000c,0x43101c
  41119e:	mov    BYTE PTR [ecx],al
  4111a0:	and    DWORD PTR ds:0x42e00c,0x0
  4111aa:	mov    ecx,DWORD PTR ds:0x42e00c
  4111b0:	inc    ecx
  4111b1:	mov    DWORD PTR ds:0x42e00c,ecx
  4111b7:	cmp    DWORD PTR ds:0x42e00c,0xa
  4111be:	jg     0x4111fb
  4111c4:	jmp    0x4111d4
  4111c9:	push   0x5c91
  4111ce:	call   DWORD PTR ds:0x4348fb
  4111d4:	cmp    DWORD PTR ds:0x42e00c,0x9
  4111db:	jne    0x4111ee
  4111e1:	mov    ecx,DWORD PTR ds:0x42e00c
  4111e7:	inc    ecx
  4111e8:	mov    DWORD PTR ds:0x42e00c,ecx
  4111ee:	cmp    DWORD PTR ds:0x42e00c,0x1b
  4111f5:	jb     0x4111aa
  4111fb:	mov    DWORD PTR [ebp-0x18],0xf89c8581
  411202:	push   ebx
  411203:	mov    DWORD PTR [ebp-0x8],0xf89c8580
  41120a:	xor    eax,eax
  41120c:	mov    ecx,DWORD PTR [ebp-0x18]
  41120f:	movzx  eax,WORD PTR ds:0x42f004
  411216:	sbb    DWORD PTR ds:0x43200c,eax
  41121c:	push   esi
  41121d:	adc    DWORD PTR ds:0x431010,0x64e6
  411227:	mov    eax,0x751089d
  41122c:	adc    DWORD PTR ds:0x430018,0x6491
  411236:	xor    ecx,eax
  411238:	mov    esi,0x3272e4
  41123d:	push   edi
  41123e:	add    ecx,esi
  411240:	mov    DWORD PTR ds:0x431018,0x6541
  41124a:	jmp    0x411278
  41124f:	mov    DWORD PTR ds:0x43000c,0x737f
  411259:	mov    dl,BYTE PTR [ebp-0x1]
  41125c:	mov    DWORD PTR ds:0x43201c,0x6aad
  411266:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126d:	mov    DWORD PTR ds:0x431008,0x1add
  411277:	inc    ecx
  411278:	mov    DWORD PTR ds:0x42f00c,0x3a2
  411282:	cmp    ecx,0x40
  411285:	jb     0x41124f
  41128b:	mov    edx,DWORD PTR [ebp-0x18]
  41128e:	mov    DWORD PTR ds:0x430000,0xd2a
  411298:	xor    edx,eax
  41129a:	sbb    DWORD PTR ds:0x430004,0x538e
  4112a4:	jmp    0x41365f
  4112a9:	and    ebx,DWORD PTR [ebx]
  4112ab:	mov    ecx,0x23c481e4
  4112b0:	fwait
  4112b1:	sbb    eax,0x7cf7fae8
  4112b6:	dec    esp
  4112b7:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4112b9:	jecxz  0x411269
  4112bb:	jb     0x41132f
  4112bd:	rcr    BYTE PTR [edi+0x72],1
  4112c0:	jb     0x41124a
  4112c2:	call   0x81f:0xbad9ef88
  4112c9:	int    0xb
  4112cb:	popf   
  4112cc:	xchg   ebp,eax
  4112cd:	dec    ebp
  4112ce:	mov    eax,0x33b973a3
  4112d3:	jle    0x4112ef
  4112d5:	inc    esi
  4112d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112d8:	mov    bh,BYTE PTR [eax+0x7f]
  4112db:	mov    ebp,0xbcffd5d0
  4112e0:	inc    esi
  4112e1:	adc    ecx,ebp
  4112e3:	push   ebx
  4112e4:	call   0xfd379d65
  4112e9:	repnz fwait
  4112eb:	mov    ebp,0xf6f8950d
  4112f0:	pop    edi
  4112f1:	(bad)  
  4112f2:	xlat   BYTE PTR ds:[ebx]
  4112f3:	or     DWORD PTR [ebx],edi
  4112f5:	add    DWORD PTR [esi-0x4],ebp
  4112f8:	out    0x7b,al
  4112fa:	outs   dx,DWORD PTR ds:[esi]
  4112fb:	std    
  4112fc:	push   cs
  4112fd:	popf   
  4112fe:	rcl    dl,0xc9
  411301:	mov    esp,0x9c2b844e
  411306:	lock mov eax,0xe64be075
  41130c:	in     eax,0x1d
  41130e:	test   BYTE PTR [eax+eiz*4+0x35],dl
  411312:	inc    esp
  411313:	out    0xa4,al
  411315:	outs   dx,DWORD PTR ds:[esi]
  411316:	add    eax,0x226e151a
  41131b:	test   BYTE PTR [edi],cl
  41131d:	lock cmp edx,edi
  411320:	(bad)  
  411321:	loope  0x4112d5
  411323:	mov    al,ds:0xee3512a4
  411328:	fild   QWORD PTR [edx]
  41132a:	cld    
  41132b:	(bad)  
  41132c:	int3   
  41132d:	mov    ch,0x47
  41132f:	mov    edi,0x1dc1582a
  411334:	xlat   BYTE PTR ds:[ebx]
  411335:	mov    dh,BYTE PTR [edx+0x536cc296]
  41133b:	pop    ss
  41133c:	mov    ?,WORD PTR [edx]
  41133e:	jp     0x41138b
  411340:	add    ah,BYTE PTR [edx-0x10]
  411343:	mov    cl,0xea
  411345:	push   ebp
  411346:	fnstcw WORD PTR [edx+edi*2]
  411349:	inc    ebp
  41134a:	mov    eax,0xd78728d5
  41134f:	pop    ebx
  411350:	push   eax
  411351:	or     ebp,DWORD PTR [eax-0x1d]
  411354:	mov    dh,0xcd
  411356:	jecxz  0x41132a
  411358:	div    DWORD PTR [ecx+0x1d2b6a3]
  41135e:	sub    dl,al
  411360:	aam    0x1b
  411362:	test   eax,0xcf5378c5
  411367:	rol    dh,cl
  411369:	push   ss
  41136a:	jmp    0xb1e4:0xc5ee9056
  411371:	push   edx
  411372:	cmp    dh,BYTE PTR [edi+ebx*2]
  411375:	mov    esp,0xd2e5f41e
  41137a:	or     ebp,DWORD PTR [ebx+0x66]
  41137d:	dec    ecx
  41137e:	shl    DWORD PTR es:0xa72f26ce,1
  411385:	jae    0x4113dc
  411387:	push   ebx
  411388:	aaa    
  411389:	mov    al,0x28
  41138b:	pop    edi
  41138c:	scas   al,BYTE PTR es:[edi]
  41138d:	add    DWORD PTR [ebp+ecx*8-0x2b547eac],0x3308b2d
  411398:	or     ah,BYTE PTR [ebx-0x79117691]
  41139e:	push   edi
  41139f:	pop    edx
  4113a0:	xchg   esp,eax
  4113a1:	ds in  eax,dx
  4113a3:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4113a5:	in     eax,dx
  4113a6:	sbb    cl,dh
  4113a8:	pop    ebp
  4113a9:	js     0x411427
  4113ab:	popa   
  4113ac:	lea    esi,[esi-0x4ce755ad]
  4113b2:	je     0x4113aa
  4113b4:	pop    es
  4113b5:	cwde   
  4113b6:	jecxz  0x41134c
  4113b8:	mov    cs,ecx
  4113ba:	scas   al,BYTE PTR es:[edi]
  4113bb:	(bad)  
  4113bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113bd:	int    0x9f
  4113bf:	scas   eax,DWORD PTR es:[edi]
  4113c0:	jle    0x411374
  4113c2:	or     DWORD PTR [edx+edx*4-0x36c2bc1],ebx
  4113c9:	icebp  
  4113ca:	sahf   
  4113cb:	sub    bh,bl
  4113cd:	sub    al,cl
  4113cf:	cmp    bh,dh
  4113d1:	hlt    
  4113d2:	test   esi,eax
  4113d4:	imul   edi,eax,0x1a
  4113d7:	jo     0x411399
  4113d9:	jl     0x4113c5
  4113db:	inc    edi
  4113dc:	mul    BYTE PTR [edx]
  4113de:	mov    bl,0x5
  4113e0:	push   edi
  4113e1:	(bad)  
  4113e2:	repnz loop 0x41140e
  4113e5:	call   DWORD PTR ds:0x914a5be6
  4113eb:	sub    DWORD PTR [ecx],eax
  4113ed:	push   es
  4113ee:	xchg   BYTE PTR [eax],dh
  4113f0:	inc    ebx
  4113f1:	loop   0x41143f
  4113f3:	in     eax,0xef
  4113f5:	(bad)  
  4113f6:	sti    
  4113f7:	and    eax,0x60a83643
  4113fc:	mov    ch,0xe2
  4113fe:	cwde   
  4113ff:	mov    esp,0x344a3e79
  411404:	lods   eax,DWORD PTR ds:[esi]
  411405:	cmp    bh,ch
  411407:	stos   WORD PTR es:[edi],ax
  411409:	sahf   
  41140a:	gs sbb ebx,esi
  41140d:	jno    0x4113a3
  41140f:	mov    esi,0x7ec99666
  411414:	mov    esi,0xbfaab08a
  411419:	stc    
  41141a:	push   eax
  41141b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41141c:	mul    DWORD PTR [ebp+0x4268ede]
  411422:	(bad)  
  411423:	test   eax,0x7d21fb5f
  411428:	pop    esp
  411429:	jecxz  0x4113eb
  41142b:	jnp    0x4113c4
  41142d:	ins    DWORD PTR es:[edi],dx
  41142e:	stos   DWORD PTR es:[edi],eax
  41142f:	daa    
  411430:	push   eax
  411431:	dec    edx
  411432:	loop   0x4113c0
  411434:	jecxz  0x411428
  411436:	push   es
  411437:	ds inc eax
  411439:	ffree  st(5)
  41143b:	in     eax,dx
  41143c:	xlat   BYTE PTR ds:[ebx]
  41143d:	push   esi
  41143e:	gs pop ebx
  411440:	outs   dx,BYTE PTR ds:[esi]
  411441:	add    BYTE PTR [ecx+0x2e],dl
  411444:	nop
  411445:	(bad)  
  411446:	stos   DWORD PTR es:[edi],eax
  411447:	ja     0x4114c3
  411449:	sbb    al,0x1d
  41144b:	mov    ebp,0x8e0eeb6d
  411450:	xor    edx,eax
  411452:	or     DWORD PTR [esi-0x9],0x65
  411456:	sbb    al,0x70
  411458:	das    
  411459:	fld    QWORD PTR gs:[ebx+0x67f69e69]
  411460:	clc    
  411461:	neg    DWORD PTR [eax]
  411463:	pusha  
  411464:	(bad)  
  411465:	(bad)  
  411466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411467:	cmp    eax,0x99d68ccf
  41146c:	or     BYTE PTR [edi+ecx*2],dl
  41146f:	das    
  411470:	lock adc bl,BYTE PTR ds:0x775a2e16
  411477:	push   eax
  411478:	hlt    
  411479:	lods   eax,DWORD PTR ds:[esi]
  41147a:	not    BYTE PTR [edi-0x14dd3048]
  411480:	in     eax,dx
  411481:	mov    esi,0x5821d5de
  411486:	pushf  
  411487:	jg     0x4114a5
  411489:	nop
  41148a:	mov    bh,0xfc
  41148c:	(bad)  
  41148d:	mov    eax,ds:0x656a3d69
  411492:	xor    eax,0x73ddd978
  411497:	sub    BYTE PTR [edi+0x42],dl
  41149a:	out    dx,al
  41149b:	mov    ebx,0x73232ba6
  4114a0:	mov    edi,DWORD PTR [edi]
  4114a2:	icebp  
  4114a3:	or     al,0xcc
  4114a5:	push   edi
  4114a6:	xor    al,BYTE PTR [ebp-0x2e]
  4114a9:	push   ecx
  4114aa:	repnz (bad) 
  4114ad:	push   edx
  4114ae:	xchg   ebp,eax
  4114af:	int3   
  4114b0:	push   ebx
  4114b1:	adc    al,BYTE PTR [edx]
  4114b3:	add    eax,0xed02292
  4114b8:	xchg   edi,eax
  4114b9:	enter  0xbd48,0x8
  4114bd:	adc    cl,BYTE PTR [edx-0x55e5ea98]
  4114c3:	mov    dh,ah
  4114c5:	dec    esp
  4114c6:	jno    0x4114be
  4114c8:	mov    al,ds:0xbfa7b723
  4114cd:	push   ebp
  4114ce:	shl    DWORD PTR [edx+0x65],cl
  4114d1:	dec    ebx
  4114d2:	shl    edi,0xef
  4114d5:	popf   
  4114d6:	lds    esi,FWORD PTR [esi-0x4d]
  4114d9:	mov    esi,0x50d4f76d
  4114de:	jns    0xe512984e
  4114e4:	sti    
  4114e5:	pop    ebp
  4114e6:	cmp    dl,0x80
  4114e9:	push   ebp
  4114ea:	mov    cs,WORD PTR [ebp-0x140748c0]
  4114f0:	dec    ebx
  4114f1:	cdq    
  4114f2:	and    ecx,DWORD PTR [edx-0x2d]
  4114f5:	fnsave [ebx]
  4114f7:	out    dx,eax
  4114f8:	mov    es,WORD PTR [edx+ebp*2-0x1fcf7d4f]
  4114ff:	les    ebx,FWORD PTR [ecx-0x44]
  411502:	or     DWORD PTR [eax+edx*1],0xf926dad1
  411509:	jno    0x411584
  41150b:	push   ebx
  41150c:	add    al,0xcf
  41150e:	fisttp QWORD PTR [eax]
  411510:	pop    edx
  411511:	cwde   
  411512:	cwde   
  411513:	inc    ebx
  411514:	loop   0x4114c5
  411516:	and    al,0x96
  411518:	stos   DWORD PTR es:[edi],eax
  411519:	pop    ecx
  41151a:	es out dx,al
  41151c:	lea    edx,[edi-0x62]
  41151f:	ret    
  411520:	ret    
  411521:	jns    0x411549
  411523:	sbb    BYTE PTR [eax],bl
  411525:	sbb    BYTE PTR [esi+0xc178116],ah
  41152b:	mov    esi,0x2601110a
  411530:	retf   
  411531:	ins    DWORD PTR es:[edi],dx
  411532:	add    al,0x9f
  411534:	adc    edx,ebx
  411536:	call   0xec3c:0x1d9c486e
  41153d:	mov    eax,0x6082e73a
  411542:	ret    0xc8c4
  411545:	add    DWORD PTR [esi-0xd],edx
  411548:	push   edi
  411549:	pop    eax
  41154a:	js     0x411587
  41154c:	or     BYTE PTR [edx+0x7a],0x43
  411550:	out    dx,al
  411551:	or     eax,0x4d7b47c8
  411556:	div    bl
  411558:	outs   dx,BYTE PTR ds:[esi]
  411559:	test   BYTE PTR [ecx+0x2c],dh
  41155c:	mov    esi,0x213bbd56
  411561:	mov    ecx,0x707e1bdb
  411566:	inc    ecx
  411567:	xchg   DWORD PTR [ecx],ebp
  411569:	into   
  41156a:	out    dx,eax
  41156b:	sbb    ebp,DWORD PTR [ecx+0x2e]
  41156e:	(bad)  
  41156f:	sbb    ebx,DWORD PTR [ebx]
  411571:	xchg   ebp,eax
  411572:	retf   
  411573:	sub    ebx,DWORD PTR [ecx+0x5f3c6c9d]
  411579:	das    
  41157a:	fiadd  WORD PTR [eax-0x6b]
  41157d:	mov    ds:0xa4d10e03,al
  411582:	pop    eax
  411583:	xor    edi,DWORD PTR [eax-0x67ad47f2]
  411589:	ret    
  41158a:	or     BYTE PTR [edi+0x63],cl
  41158d:	sbb    DWORD PTR [esi+0x3cd16672],ecx
  411593:	in     al,0x34
  411595:	jmp    0x2a31be3c
  41159a:	into   
  41159b:	add    eax,0x4d9fd88a
  4115a0:	retf   
  4115a1:	sub    al,cl
  4115a3:	imul   edi,DWORD PTR [edi],0xffffff81
  4115a6:	jmp    0x8cec:0x98ac0bdd
  4115ad:	ror    esp,0x2e
  4115b0:	icebp  
  4115b1:	outs   dx,DWORD PTR ds:[esi]
  4115b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115b3:	adc    DWORD PTR [esi-0x68],esi
  4115b6:	jle    0x4115f8
  4115b8:	dec    edi
  4115b9:	retf   0x6de8
  4115bc:	ror    BYTE PTR [esi-0x5c],1
  4115bf:	cmp    DWORD PTR [eax-0x2d0d26a5],ebp
  4115c5:	or     BYTE PTR [edi+ebx*4-0x175c57ca],ch
  4115cc:	pop    esi
  4115cd:	adc    al,BYTE PTR [eax]
  4115cf:	lods   al,BYTE PTR ds:[esi]
  4115d0:	int3   
  4115d1:	test   eax,0xecec76db
  4115d6:	mov    DWORD PTR [ecx+eiz*1],esi
  4115d9:	clc    
  4115da:	cmp    al,0x19
  4115dc:	sbb    DWORD PTR [ebx+0x23c4c0],eax
  4115e2:	fs pop ebx
  4115e4:	sbb    DWORD PTR [ebx-0x7e],esp
  4115e7:	or     eax,0xf1ee9f76
  4115ec:	lods   eax,DWORD PTR ds:[esi]
  4115ed:	mov    WORD PTR [eax+0x67e3dae5],ds
  4115f3:	(bad)  
  4115f4:	in     eax,0xfc
  4115f6:	dec    edx
  4115f7:	in     eax,0xc5
  4115f9:	hlt    
  4115fa:	fild   QWORD PTR [ebx-0x3e37d488]
  411600:	adc    eax,0x6f980aa1
  411605:	out    0x66,al
  411607:	inc    ebx
  411608:	pop    ebp
  411609:	mov    eax,0x8b847ae6
  41160e:	cdq    
  41160f:	lds    esi,FWORD PTR [eax+ebx*4-0x2ca410a4]
  411616:	iret   
  411617:	ret    
  411618:	sbb    DWORD PTR [ebp-0x6980ed48],ebp
  41161e:	call   0x374c:0x2eaf0775
  411625:	das    
  411626:	pop    ebx
  411627:	aad    0xb8
  411629:	jne    0x411680
  41162b:	mov    edi,DWORD PTR ds:0xf1b0fe5f
  411631:	jg     0x41164a
  411633:	int    0x52
  411635:	sbb    dh,BYTE PTR [ebp*2-0x3cbb1ee5]
  41163c:	adc    DWORD PTR [edx-0x742e854a],edi
  411642:	xlat   BYTE PTR ds:[ebx]
  411643:	repnz test BYTE PTR [edi+0x50a794bc],dh
  41164a:	mov    eax,0xc5b85eca
  41164f:	stos   BYTE PTR es:[edi],al
  411650:	(bad)
  411653:	inc    eax
  411654:	(bad)  
  411656:	addr16 enter 0xb03d,0x7f
  41165b:	mov    al,0xaa
  41165d:	pop    esi
  41165e:	imul   ecx,edx,0xffffffed
  411661:	and    DWORD PTR ss:[ebp+0x40e45b59],ecx
  411668:	nop    DWORD PTR [esi+ebx*1+0x4a]
  41166d:	je     0x411642
  41166f:	xchg   edi,eax
  411670:	ret    
  411671:	jg     0x411699
  411673:	jne    0x411677
  411675:	cmp    al,0x5
  411677:	xor    BYTE PTR [esi-0x77],bh
  41167a:	sub    eax,0xa61c81b
  41167f:	sub    eax,0xd66d31af
  411684:	mov    eax,0x6309ba33
  411689:	or     BYTE PTR [esi+0x42],al
  41168c:	mov    ah,0x1
  41168e:	push   ecx
  41168f:	jae    0x41162f
  411691:	arpl   cx,sp
  411693:	inc    esi
  411694:	std    
  411695:	pop    ebp
  411696:	pop    ss
  411697:	cmp    al,0x6f
  411699:	sub    ebp,esi
  41169b:	repz push 0xf0d6cbfa
  4116a1:	retf   0x6ba3
  4116a4:	rcl    cl,cl
  4116a6:	push   eax
  4116a7:	rol    DWORD PTR [esi],1
  4116a9:	adc    eax,0xab7ccc18
  4116ae:	shl    DWORD PTR ds:0x8718050c,0x1e
  4116b5:	lods   al,BYTE PTR ds:[esi]
  4116b6:	sub    esp,ecx
  4116b8:	push   0x47
  4116ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116bb:	pop    eax
  4116bc:	inc    dx
  4116be:	arpl   WORD PTR [ebp+edx*8+0x41fce649],bx
  4116c5:	adc    edx,ebp
  4116c7:	ins    DWORD PTR es:[edi],dx
  4116c8:	adc    BYTE PTR [edi],bh
  4116ca:	mov    cl,0x8e
  4116cc:	jmp    0x4116bc
  4116ce:	pop    edi
  4116cf:	in     al,dx
  4116d0:	adc    ebp,0xd1e197a0
  4116d6:	jmp    0x4116e4
  4116d8:	fiadd  DWORD PTR [ecx]
  4116da:	and    eax,0x9227cfd1
  4116df:	mov    ebp,0x4754b12c
  4116e4:	mov    cl,0xd6
  4116e6:	sbb    DWORD PTR ds:[ebp+edx*8+0x2878d673],esi
  4116ee:	push   ecx
  4116ef:	jle    0x411730
  4116f1:	mov    edx,0x88062469
  4116f6:	sub    BYTE PTR [si-0x33],ch
  4116fa:	push   ds
  4116fb:	dec    ebp
  4116fc:	fld    TBYTE PTR [ecx+esi*8+0x4f9e1e23]
  411703:	xchg   esp,eax
  411704:	cmp    ebp,0xffffffc2
  411707:	call   0x44d86813
  41170c:	dec    esi
  41170d:	ins    DWORD PTR es:[edi],dx
  41170e:	push   0xffffff85
  411710:	(bad)  
  411711:	xchg   ebx,eax
  411712:	xor    al,0x77
  411714:	shr    BYTE PTR [edx-0x3d],1
  411717:	pop    cx
  411719:	jb     0x411776
  41171b:	push   ebp
  41171c:	rcr    ebp,0xa0
  41171f:	aaa    
  411720:	fmul   QWORD PTR [ebp-0x73]
  411723:	cmp    ebx,edi
  411725:	jge    0x411708
  411727:	sar    ebp,cl
  411729:	xchg   esp,eax
  41172a:	adc    esi,ecx
  41172c:	adc    al,0xf3
  41172e:	lea    eax,[eax-0x5b]
  411731:	inc    esp
  411732:	retf   
  411733:	xor    al,0x1b
  411735:	fcomi  st,st(2)
  411737:	and    eax,0x39acee13
  41173c:	cmp    ebp,DWORD PTR [esi+ecx*2-0x20c929e9]
  411743:	inc    esi
  411744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411745:	retf   0x5420
  411748:	sub    al,0x93
  41174a:	retf   
  41174b:	mov    cs,WORD PTR [edi+esi*1]
  41174e:	pushf  
  41174f:	lea    edx,[esi-0x4ace846e]
  411755:	sub    al,0x51
  411757:	adc    eax,0x337231f9
  41175c:	pop    eax
  41175d:	stos   DWORD PTR es:[edi],eax
  41175e:	ins    BYTE PTR es:[edi],dx
  41175f:	stos   DWORD PTR es:[edi],eax
  411760:	shr    DWORD PTR [eax+ecx*1],1
  411763:	jbe    0x41174e
  411765:	inc    esi
  411766:	shl    eax,cl
  411768:	fild   WORD PTR [ebx-0x1e09c123]
  41176e:	ins    DWORD PTR es:[edi],dx
  41176f:	mov    eax,0x5fd443cd
  411774:	xchg   edi,eax
  411775:	imul   ecx,ecx,0x976d3b72
  41177b:	je     0x4117f5
  41177d:	fild   WORD PTR [ecx-0x5d]
  411780:	fcmovu st,st(2)
  411782:	popf   
  411783:	or     cl,BYTE PTR [edx]
  411785:	jnp    0x4117b1
  411787:	call   FWORD PTR [ebp-0x349910c4]
  41178d:	xchg   ebx,eax
  41178e:	mov    WORD PTR [edi+edi*8+0x439f995c],ds
  411795:	add    DWORD PTR [esi-0x758eac95],ebp
  41179b:	pop    ss
  41179c:	test   eax,0x3f2ea957
  4117a1:	out    0xf1,eax
  4117a3:	std    
  4117a4:	out    0xd9,eax
  4117a6:	fst    DWORD PTR [edi]
  4117a8:	jecxz  0x4117fb
  4117aa:	sbb    BYTE PTR [esi+0x5e63beb6],dh
  4117b0:	xchg   ecx,eax
  4117b1:	clc    
  4117b2:	inc    eax
  4117b3:	pop    ebx
  4117b4:	pop    eax
  4117b5:	out    dx,eax
  4117b6:	stc    
  4117b7:	mov    DWORD PTR [edx-0x6661f450],ebp
  4117bd:	test   eax,0x301b2dfe
  4117c2:	jbe    0x4117e3
  4117c4:	popf   
  4117c5:	and    eax,0x2d1217e8
  4117ca:	adc    ecx,ecx
  4117cc:	sbb    BYTE PTR [ecx-0x111f6f5a],bh
  4117d2:	jo     0x411791
  4117d4:	or     eax,0x5544ebb6
  4117d9:	jns    0x411820
  4117db:	sbb    dl,al
  4117dd:	dec    edi
  4117de:	inc    esi
  4117df:	in     al,dx
  4117e0:	mov    edx,DWORD PTR [eax+0x5686204]
  4117e6:	sub    eax,0xa8fa16fc
  4117eb:	mov    eax,ds:0x271b4350
  4117f0:	adc    DWORD PTR [edi-0x14],eax
  4117f3:	mov    ebx,0x70fe5c4a
  4117f8:	mov    ds:0x52097b34,al
  4117fd:	dec    ecx
  4117fe:	ret    
  4117ff:	es adc eax,0x20559a3d
  411805:	cli    
  411806:	ins    BYTE PTR es:[edi],dx
  411807:	jmp    0xf027:0x2f2bf589
  41180e:	push   ebx
  41180f:	adc    BYTE PTR [eax+0x54],dl
  411812:	aaa    
  411813:	pop    ebp
  411814:	mov    al,bh
  411816:	test   eax,0x5caf6708
  41181b:	dec    ebp
  41181c:	rcl    BYTE PTR [ebp+0x18],cl
  41181f:	jnp    0x411839
  411821:	scas   al,BYTE PTR es:[edi]
  411822:	les    esi,FWORD PTR [ecx+0x34]
  411825:	mov    esp,0x1854f5fd
  41182a:	ss mov ebx,0xf71e03aa
  411830:	in     eax,0xe1
  411832:	mov    ch,0x20
  411834:	inc    edx
  411835:	dec    esp
  411836:	mov    dh,0xd4
  411838:	jl     0x411849
  41183a:	into   
  41183b:	imul   BYTE PTR [ebx+eax*8+0x1dd21b24]
  411842:	es jp  0x4118a6
  411845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411846:	inc    esp
  411847:	cmp    DWORD PTR [ecx+0x22dbd490],0x86f90888
  411851:	dec    edi
  411852:	daa    
  411853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411854:	push   eax
  411855:	loope  0x411880
  411857:	loope  0x4118c7
  411859:	mov    edx,0x6d71eff2
  41185e:	enter  0x622f,0x25
  411862:	test   eax,0x7d6123a8
  411867:	mov    es,WORD PTR [edx-0x22]
  41186a:	icebp  
  41186b:	pop    ecx
  41186c:	gs es sbb eax,0x2b1968d5
  411873:	cdq    
  411874:	sub    al,0x65
  411876:	pop    ds
  411877:	xor    esp,ebx
  411879:	cmc    
  41187a:	adc    BYTE PTR ds:0x7a42d0a7,ah
  411880:	dec    esi
  411881:	call   0x7673027a
  411886:	ins    BYTE PTR es:[edi],dx
  411887:	push   esp
  411888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411889:	jecxz  0x4118ba
  41188b:	push   0x65
  41188d:	rcr    ebp,cl
  41188f:	pop    ss
  411890:	int    0x10
  411892:	jns    0x4118e2
  411894:	sub    BYTE PTR [ebx+0x4587d3fb],cl
  41189a:	addr16 test eax,0x7490e248
  4118a0:	dec    ecx
  4118a1:	mov    al,ds:0xaca4e350
  4118a6:	xlat   BYTE PTR ds:[ebx]
  4118a7:	fidivr WORD PTR [eax+0x1c1b13c2]
  4118ad:	pop    esi
  4118ae:	mov    ch,BYTE PTR [ecx]
  4118b0:	add    eax,0x151f4947
  4118b5:	mov    dh,0xbd
  4118b7:	stc    
  4118b8:	cdq    
  4118b9:	pop    ebx
  4118ba:	imul   esp,DWORD PTR [edi],0x47
  4118bd:	pop    esi
  4118be:	in     eax,0xdb
  4118c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118c1:	inc    edi
  4118c2:	fwait
  4118c3:	mov    ds:0x1ae37396,al
  4118c8:	or     al,0x7b
  4118cb:	fdivr  DWORD PTR [edi-0x50]
  4118ce:	in     al,dx
  4118cf:	pop    edi
  4118d0:	jo     0x411917
  4118d2:	and    al,0x58
  4118d4:	jl     0x411927
  4118d6:	enter  0xf466,0x3f
  4118da:	ins    DWORD PTR es:[edi],dx
  4118db:	add    BYTE PTR [eax+0xf],0xad
  4118df:	sbb    DWORD PTR [eax-0xd],esi
  4118e2:	cwde   
  4118e3:	pop    esi
  4118e4:	xchg   BYTE PTR [ebx+0x72],cl
  4118e7:	adc    BYTE PTR [ebx+0x4b],cl
  4118ea:	popa   
  4118eb:	sub    DWORD PTR [edi-0x2a],0x8f45ff36
  4118f2:	sbb    eax,0xb6d0841
  4118f7:	mov    ebx,0x6465b07f
  4118fc:	dec    ebp
  4118fd:	jmp    0x6c00:0x4eabae74
  411904:	sub    bl,BYTE PTR [esp+ebx*2+0x41]
  411908:	test   al,0x5f
  41190a:	lock mov BYTE PTR [edi],dl
  41190d:	xor    edi,ebx
  41190f:	popf   
  411910:	xor    DWORD PTR [esi],ebx
  411912:	inc    eax
  411913:	(bad)  
  411914:	popf   
  411915:	lods   al,BYTE PTR ds:[esi]
  411916:	es mov dl,0x24
  411919:	lock scas al,BYTE PTR es:[edi]
  41191b:	dec    bl
  41191d:	stc    
  41191e:	mov    edi,0x6bcc7d59
  411923:	xchg   esi,eax
  411924:	or     DWORD PTR [edi-0x6ef6bbe0],ebp
  41192a:	les    ecx,FWORD PTR [edx+0x1efad4dd]
  411930:	sub    ebx,edi
  411932:	sub    ebx,ecx
  411934:	dec    ecx
  411935:	(bad)  
  411936:	rcl    DWORD PTR [edx+eax*4+0x52],cl
  41193a:	aaa    
  41193b:	cmp    DWORD PTR [eax],ebp
  41193d:	fwait
  41193e:	push   0xfffffffc
  411940:	out    0xb5,eax
  411942:	out    0x7c,eax
  411944:	jne    0x411933
  411946:	xchg   BYTE PTR [edi+0x48a393d2],bh
  41194c:	test   al,0x0
  41194e:	rol    DWORD PTR fs:[edi-0x2a],0xe
  411953:	mov    ch,0x57
  411955:	shl    DWORD PTR [edx+0x77],cl
  411958:	mov    ecx,0x802eccd9
  41195d:	xchg   ebx,eax
  41195e:	add    dh,bl
  411960:	mov    al,ds:0xfa03d825
  411965:	stos   BYTE PTR es:[edi],al
  411966:	fist   DWORD PTR [ecx]
  411968:	sbb    cl,BYTE PTR [ebx-0x61220902]
  41196e:	adc    al,0xc5
  411970:	add    eax,DWORD PTR [ebp+0x7f]
  411973:	xchg   esp,eax
  411974:	idiv   BYTE PTR [ebp-0x11c66f5e]
  41197a:	fcomp  DWORD PTR [edx]
  41197c:	inc    esi
  41197d:	test   DWORD PTR [eax-0x6eb1195f],ebx
  411983:	ins    DWORD PTR es:[edi],dx
  411984:	and    al,0x59
  411986:	pusha  
  411987:	daa    
  411988:	shr    DWORD PTR [ebp+0x149a8881],1
  41198e:	dec    edi
  41198f:	pop    ebp
  411990:	add    al,0x5
  411992:	xchg   esp,eax
  411993:	out    dx,al
  411994:	sub    al,0x43
  411996:	mov    WORD PTR [esi+0x50],gs
  411999:	popa   
  41199a:	mov    ebp,0xef7620e4
  41199f:	or     ebp,DWORD PTR [ebx-0x603cbde9]
  4119a5:	cmc    
  4119a6:	fldenv [edi+0x35]
  4119a9:	rol    BYTE PTR [esi],1
  4119ab:	mov    cl,0x89
  4119ad:	sub    DWORD PTR [ecx],esp
  4119af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119b0:	or     eax,0x8dbe9ca7
  4119b5:	stos   BYTE PTR es:[edi],al
  4119b6:	and    esi,ebx
  4119b8:	loopne 0x41196c
  4119ba:	adc    BYTE PTR [eax-0x53dca217],0xe4
  4119c1:	sbb    DWORD PTR [ecx],ebx
  4119c3:	or     bh,dl
  4119c5:	jno    0x4119f1
  4119c7:	dec    eax
  4119c8:	inc    eax
  4119c9:	test   eax,0x2c65a7f9
  4119ce:	rcl    DWORD PTR [esp+esi*2-0x78],cl
  4119d2:	dec    edi
  4119d3:	pop    ebp
  4119d4:	xchg   esi,eax
  4119d5:	loope  0x4119c2
  4119d7:	popf   
  4119d8:	and    DWORD PTR [esi+edx*4-0x39d21df3],ebx
  4119df:	sbb    ah,BYTE PTR [edx-0x71a9350f]
  4119e5:	jecxz  0x411a60
  4119e7:	ret    0x55d0
  4119ea:	jmp    0xec80:0xa2bb90d9
  4119f1:	cld    
  4119f2:	cmp    eax,0xc7d4ad67
  4119f7:	pop    eax
  4119f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119f9:	xor    al,0x91
  4119fb:	or     edi,DWORD PTR [ecx]
  4119fd:	call   0xe652:0x1c3eff04
  411a04:	scas   al,BYTE PTR es:[edi]
  411a05:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a07:	imul   edx,edi,0x8323347e
  411a0d:	(bad)  
  411a0f:	push   ecx
  411a10:	call   0x7d31ec6b
  411a15:	or     BYTE PTR [edx+ecx*1-0x6cb916b7],dl
  411a1c:	fsub   QWORD PTR [ebx+0x1eaa6109]
  411a22:	mov    edx,0xd7fb1f3d
  411a27:	sub    ch,BYTE PTR [ecx+0x1927ad15]
  411a2d:	cmp    dh,bl
  411a2f:	call   0x34fb:0x466eef96
  411a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a37:	add    eax,DWORD PTR [eax-0x8dd8503]
  411a3d:	mov    ebx,0x3c55e0e9
  411a42:	xchg   DWORD PTR [ebp-0x223318c],esp
  411a48:	outs   dx,BYTE PTR ds:[esi]
  411a49:	inc    eax
  411a4a:	(bad)  
  411a4b:	retf   
  411a4c:	outs   dx,BYTE PTR ds:[esi]
  411a4d:	xlat   BYTE PTR ds:[ebx]
  411a4e:	repnz sbb al,0x8a
  411a51:	mov    al,0x41
  411a53:	dec    eax
  411a54:	cdq    
  411a55:	cmp    BYTE PTR [ecx],0x1
  411a58:	mov    ebp,0xec970b1
  411a5d:	fisub  WORD PTR [edi+0x65]
  411a60:	pop    esp
  411a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a62:	push   edi
  411a63:	pop    eax
  411a64:	cli    
  411a65:	test   al,0x18
  411a67:	xlat   BYTE PTR ds:[ebx]
  411a68:	or     BYTE PTR [edx],ch
  411a6a:	test   eax,0xe01f550f
  411a70:	into   
  411a71:	pop    edx
  411a72:	jl     0x411a05
  411a74:	xchg   esp,eax
  411a75:	sbb    BYTE PTR [edi-0x61],0xa
  411a79:	mov    ebp,0xb7717f83
  411a7e:	out    dx,al
  411a7f:	push   ebx
  411a80:	pop    esp
  411a81:	push   edi
  411a82:	push   0x9aeaa9ba
  411a87:	test   DWORD PTR [ecx+0x32],edi
  411a8a:	sbb    dh,al
  411a8c:	nop
  411a8d:	or     DWORD PTR [ebx],0x19
  411a90:	xor    al,0xc0
  411a92:	mov    ch,0x8e
  411a94:	leave  
  411a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a96:	mov    al,ds:0xbf7f91a0
  411a9b:	jnp    0x411a3d
  411a9d:	adc    al,0x50
  411a9f:	jne    0x411a3b
  411aa1:	fcomp  QWORD PTR [edx+0x5336d813]
  411aa7:	jg     0x411aea
  411aa9:	dec    ebp
  411aaa:	ins    BYTE PTR es:[edi],dx
  411aab:	cmp    BYTE PTR [ecx+0x44],bh
  411aae:	or     al,0x1d
  411ab0:	rol    bl,cl
  411ab2:	and    BYTE PTR [edi+0x3b],al
  411ab5:	sbb    dl,BYTE PTR [ebx+0x2f8d9eaa]
  411abb:	jl     0x411b33
  411abd:	pop    edi
  411abe:	inc    esi
  411abf:	pushf  
  411ac0:	add    BYTE PTR [esi+0x427669e],0xb4
  411ac7:	aam    0x4c
  411ac9:	out    dx,eax
  411aca:	in     eax,0x99
  411acc:	fxch   st(1)
  411ace:	aad    0xa1
  411ad0:	add    cl,BYTE PTR [edi]
  411ad2:	add    al,0x25
  411ad4:	cmc    
  411ad5:	mov    ah,0x46
  411ad7:	scas   eax,DWORD PTR es:[edi]
  411ad8:	inc    ebp
  411ad9:	cs pop edi
  411adb:	ror    DWORD PTR [edi],0xc6
  411ade:	out    0xb,eax
  411ae0:	ins    BYTE PTR es:[edi],dx
  411ae1:	adc    BYTE PTR [ecx+0x2e],cl
  411ae4:	xchg   esi,eax
  411ae5:	out    0x65,al
  411ae7:	pop    edi
  411ae8:	pop    esi
  411ae9:	push   0x27
  411aeb:	popf   
  411aec:	jmp    0x411b42
  411aee:	in     al,dx
  411aef:	lea    esp,[ebx-0x28b7c7ec]
  411af5:	jns    0x411b6f
  411af7:	and    al,0xda
  411af9:	lods   eax,DWORD PTR es:[esi]
  411afb:	push   ebp
  411afc:	(bad)  
  411afd:	mov    bl,0x40
  411aff:	pop    es
  411b00:	repnz lods al,BYTE PTR ds:[esi]
  411b02:	mov    ah,0xc1
  411b04:	xor    BYTE PTR [ebx+ebx*1],cl
  411b07:	int3   
  411b08:	dec    eax
  411b09:	pop    edx
  411b0a:	lea    ebp,[esi+0x52022aaf]
  411b10:	adc    ah,bl
  411b12:	retf   0x63af
  411b15:	(bad)  
  411b16:	jno    0x411a99
  411b18:	aad    0x83
  411b1a:	jg     0x411b6c
  411b1c:	inc    edx
  411b1d:	outs   dx,BYTE PTR ds:[esi]
  411b1e:	addr16 and ecx,edi
  411b21:	imul   esp,DWORD PTR [ebp+0x74490ed7],0x30
  411b28:	mov    al,0xb
  411b2a:	jns    0x411b65
  411b2c:	or     al,0xcf
  411b2e:	and    al,0x87
  411b30:	add    eax,DWORD PTR [edx]
  411b32:	dec    esi
  411b33:	test   al,0xa0
  411b35:	into   
  411b36:	sti    
  411b37:	cmp    eax,0x278db232
  411b3c:	lock mov bl,0x1b
  411b3f:	sbb    esi,eax
  411b41:	inc    edi
  411b42:	fs mov esi,0xbbb339fe
  411b48:	fs mov ch,0x5a
  411b4b:	and    DWORD PTR [esi+ebx*1-0x55],ebp
  411b4f:	popf   
  411b50:	pop    esp
  411b51:	div    BYTE PTR [esp+ebx*8]
  411b54:	mov    bl,0xdc
  411b56:	fwait
  411b57:	add    BYTE PTR [esi+0x367ac732],al
  411b5d:	call   0x34ae:0xb6f32b0a
  411b64:	xchg   BYTE PTR [ecx],bh
  411b66:	sbb    bh,BYTE PTR [ebp-0x33]
  411b69:	mov    ebp,0x3698229d
  411b6e:	xor    BYTE PTR [eax],0x9e
  411b71:	lods   al,BYTE PTR ds:[esi]
  411b72:	aam    0x25
  411b74:	or     eax,0x99641153
  411b79:	dec    ebp
  411b7a:	js     0x411bc8
  411b7c:	jae    0x411b5c
  411b7e:	sbb    edi,ebp
  411b80:	out    0x7a,eax
  411b82:	pop    es
  411b83:	jle    0x411b3f
  411b85:	sbb    dl,BYTE PTR ds:0x39414bc
  411b8b:	push   ebp
  411b8c:	sti    
  411b8d:	and    edi,eax
  411b8f:	dec    edi
  411b90:	js     0x411b83
  411b92:	pop    ss
  411b93:	loope  0x411bea
  411b95:	push   0x75
  411b97:	js     0x411bb3
  411b99:	ret    
  411b9a:	shl    DWORD PTR [ecx-0x5e],0x40
  411b9e:	pop    es
  411b9f:	(bad)  
  411ba0:	sar    BYTE PTR [eax],cl
  411ba2:	adc    ebx,ebp
  411ba4:	mov    ebx,0x24f95cb
  411ba9:	sub    al,0x2a
  411bab:	jnp    0x411c1e
  411bad:	test   DWORD PTR [eax-0x19],esp
  411bb0:	sbb    al,0xb7
  411bb2:	scas   eax,DWORD PTR es:[edi]
  411bb3:	ins    DWORD PTR es:[edi],dx
  411bb4:	push   0x7c
  411bb6:	dec    esp
  411bb7:	retf   
  411bb8:	or     ebp,0x4b
  411bbb:	std    
  411bbc:	jmp    0xda5e:0xd041dd45
  411bc3:	sbb    esp,esp
  411bc5:	outs   dx,BYTE PTR ds:[esi]
  411bc6:	xor    ecx,eax
  411bc8:	(bad)  
  411bc9:	fisub  DWORD PTR [edi+0x35]
  411bcc:	or     BYTE PTR [ecx],bh
  411bce:	rol    DWORD PTR [ebx],cl
  411bd0:	outs   dx,BYTE PTR ds:[esi]
  411bd1:	cmp    eax,0x21f9fb0f
  411bd6:	aaa    
  411bd7:	mov    BYTE PTR [ebx-0x242155d3],bl
  411bdd:	jmp    0x63b87b3
  411be2:	arpl   WORD PTR [ebx],cx
  411be4:	push   ebx
  411be5:	cli    
  411be6:	pop    eax
  411be7:	pop    edx
  411be8:	leave  
  411be9:	add    ch,BYTE PTR [esi-0xc33651b]
  411bef:	inc    ecx
  411bf0:	scas   eax,DWORD PTR es:[edi]
  411bf1:	push   ebp
  411bf2:	daa    
  411bf3:	push   ebp
  411bf4:	xor    eax,0x1d20604e
  411bf9:	jne    0x411bc0
  411bfb:	add    esp,DWORD PTR fs:[edi+eiz*4]
  411bff:	out    dx,eax
  411c00:	out    dx,al
  411c01:	and    DWORD PTR [ecx-0x524e4a3e],ecx
  411c07:	ror    ebp,0x8e
  411c0a:	leave  
  411c0b:	mov    ebx,0xab29cf2f
  411c10:	in     al,dx
  411c11:	xchg   edi,eax
  411c12:	inc    ebp
  411c13:	repnz sahf 
  411c15:	jle    0x411c45
  411c17:	std    
  411c18:	push   0xb35d798e
  411c1d:	push   ds
  411c1e:	out    dx,al
  411c1f:	int    0x5a
  411c21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c22:	test   al,0x96
  411c24:	mov    esi,0x788e06e6
  411c29:	push   0x7e
  411c2b:	clc    
  411c2c:	leave  
  411c2d:	xchg   ebp,eax
  411c2e:	bound  edx,QWORD PTR [ebx-0x70]
  411c31:	xlat   BYTE PTR ds:[ebx]
  411c32:	sub    BYTE PTR [edi-0x120d4850],dl
  411c38:	shr    BYTE PTR [ebp+0x695a3702],1
  411c3e:	push   edi
  411c3f:	out    dx,eax
  411c40:	push   ebp
  411c41:	jecxz  0x411be5
  411c43:	ss loopne 0x411bd0
  411c46:	jecxz  0x411bcb
  411c48:	add    al,0x5e
  411c4a:	mov    ch,0xd6
  411c4c:	cwde   
  411c4d:	mov    bl,0xa1
  411c4f:	mov    eax,ds:0xd34d7f00
  411c54:	sahf   
  411c55:	jbe    0x411c5e
  411c57:	jmp    0xa5c9:0xec6ca5f9
  411c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c5f:	sub    BYTE PTR [edi],bl
  411c61:	cmp    BYTE PTR [edx+0xb],al
  411c64:	rol    DWORD PTR [edx],cl
  411c66:	(bad)  
  411c67:	or     edi,esp
  411c69:	sub    BYTE PTR [edx-0x43e2a298],dl
  411c6f:	shl    cl,cl
  411c71:	and    eax,0x7d0389bf
  411c76:	sbb    DWORD PTR [edx+0xf],esp
  411c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c7a:	mov    cl,0x6e
  411c7c:	icebp  
  411c7d:	jb     0x411cdb
  411c7f:	int3   
  411c80:	dec    ecx
  411c81:	outs   dx,BYTE PTR ds:[esi]
  411c82:	int    0x4
  411c84:	pop    edi
  411c85:	adc    edi,ebx
  411c87:	pop    edx
  411c88:	(bad)  
  411c89:	clc    
  411c8a:	inc    edx
  411c8b:	jmp    FWORD PTR [eax]
  411c8d:	sub    BYTE PTR [ebp-0x6c555507],ch
  411c93:	cmp    BYTE PTR [ebp-0x3685e45d],al
  411c99:	scas   eax,DWORD PTR es:[edi]
  411c9a:	int    0xa2
  411c9c:	call   0xf7ea:0x67a99c88
  411ca3:	mov    cl,0xa5
  411ca5:	aaa    
  411ca6:	cld    
  411ca7:	xor    DWORD PTR [ebx+0x1a],0xffffffae
  411cab:	add    BYTE PTR [ecx],bl
  411cad:	jmp    0x82d3:0x645cdbb7
  411cb4:	dec    esi
  411cb5:	addr16 in eax,dx
  411cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cb8:	xchg   esi,eax
  411cb9:	and    ecx,DWORD PTR [edx+0x27]
  411cbc:	fs lahf 
  411cbe:	and    al,0x6f
  411cc0:	pop    edx
  411cc1:	mov    edx,0x4a5dc3ab
  411cc6:	out    dx,al
  411cc7:	xlat   BYTE PTR ds:[ebx]
  411cc8:	cmp    bh,BYTE PTR [edx+0x1c]
  411ccb:	cmp    eax,0x4328b59a
  411cd0:	pop    ebp
  411cd1:	stos   BYTE PTR es:[edi],al
  411cd2:	inc    edx
  411cd3:	pop    ss
  411cd4:	pop    esp
  411cd5:	lock fs hlt 
  411cd8:	ja     0x411d3f
  411cda:	outs   dx,DWORD PTR ds:[esi]
  411cdb:	adc    ch,BYTE PTR [eax-0x73]
  411cde:	repnz in eax,0xef
  411ce1:	mov    DWORD PTR [ebx-0x56],ecx
  411ce4:	xchg   esp,eax
  411ce5:	(bad)  
  411ce6:	out    dx,al
  411ce7:	adc    BYTE PTR [edx+edx*1],0xd6
  411ceb:	nop
  411cec:	mov    al,0x30
  411cee:	vpsubusw ymm1,ymm6,ymm5
  411cf2:	loop   0x411d1f
  411cf4:	call   0x6c3e7f34
  411cf9:	rcr    BYTE PTR [ecx+0x4e],1
  411cfc:	push   esi
  411cfd:	loopne 0x411d57
  411cff:	imul   edi,DWORD PTR [esi],0xffffffd9
  411d02:	adc    eax,0x5b4f9007
  411d07:	adc    DWORD PTR [edx-0xa26fb46],ecx
  411d0d:	(bad)  
  411d0f:	js     0x411cff
  411d11:	fild   DWORD PTR [edi-0x55]
  411d14:	sbb    bl,BYTE PTR [ebp+eax*1-0x56]
  411d18:	loope  0x411ccf
  411d1a:	lds    ecx,FWORD PTR [ebx+0x47]
  411d1d:	sbb    ah,BYTE PTR ds:0xf8345826
  411d23:	or     al,BYTE PTR [edi+0x64]
  411d26:	sbb    ah,BYTE PTR [edx]
  411d28:	push   edx
  411d29:	shr    al,1
  411d2b:	xor    DWORD PTR [ecx-0x15],ebx
  411d2e:	jecxz  0x411cf9
  411d30:	inc    eax
  411d31:	sbb    ch,BYTE PTR [edi]
  411d33:	sti    
  411d34:	cwde   
  411d35:	retf   0x8519
  411d38:	cwde   
  411d39:	(bad)  
  411d3b:	rcl    DWORD PTR [eax+0x41],cl
  411d3e:	bound  edi,QWORD PTR [ecx+0x6d]
  411d41:	into   
  411d42:	mov    al,0xb8
  411d44:	mov    BYTE PTR [esi+0x75],dl
  411d47:	push   ds
  411d48:	(bad)  
  411d4a:	es push edx
  411d4c:	out    0x69,al
  411d4e:	rol    DWORD PTR [esi+eiz*4],1
  411d51:	xor    ebp,0x6cc31bce
  411d57:	xchg   esp,eax
  411d58:	mov    al,ds:0xf781fd8b
  411d5d:	dec    eax
  411d5e:	mov    dh,0xcd
  411d60:	cmp    eax,0x5906a1d3
  411d65:	jmp    0x411cf4
  411d67:	xchg   esp,eax
  411d68:	mov    edi,0x159efd08
  411d6d:	in     al,dx
  411d6e:	sub    DWORD PTR [edx-0x5],edi
  411d71:	or     ah,BYTE PTR [eax+0x2cb20164]
  411d77:	retf   
  411d78:	and    DWORD PTR [esi-0x387ec3d2],ebx
  411d7e:	rol    BYTE PTR [ebx+0x67],cl
  411d81:	mov    ds:0xb101d190,eax
  411d86:	call   0x75e3:0x1db8a49e
  411d8d:	gs xchg ebx,eax
  411d8f:	push   ebp
  411d90:	cmc    
  411d91:	retf   
  411d92:	lea    ebx,[esi+0x46]
  411d95:	fmul   DWORD PTR [edi+0x34]
  411d98:	jns    0x411d5f
  411d9a:	mov    ecx,0xe172f9e8
  411d9f:	xor    cl,BYTE PTR [ecx-0x511482a2]
  411da5:	pop    ebp
  411da6:	fstp   DWORD PTR [edi]
  411da8:	clc    
  411da9:	dec    ebp
  411daa:	(bad)  
  411dad:	in     al,dx
  411dae:	imul   esp,edi,0xffffffe8
  411db1:	xchg   ebx,eax
  411db2:	lahf   
  411db3:	pop    ebx
  411db4:	mov    ds:0xf4be0ec3,al
  411db9:	das    
  411dba:	iret   
  411dbb:	repnz dec edx
  411dbd:	mov    edx,0xf5e1de54
  411dc2:	sbb    BYTE PTR [ecx*2-0x2648b5a6],cl
  411dc9:	mov    bh,cl
  411dcb:	mov    cl,0x4b
  411dcd:	das    
  411dce:	cmp    al,0xc
  411dd0:	cld    
  411dd1:	std    
  411dd2:	sub    BYTE PTR [esi],al
  411dd4:	mov    ebp,0xb1d3e90c
  411dd9:	icebp  
  411dda:	xor    eax,0x9d9e2b9f
  411ddf:	push   eax
  411de0:	cdq    
  411de1:	je     0x411d94
  411de3:	inc    edi
  411de4:	mov    eax,ds:0x5e7c0752
  411de9:	pop    ss
  411dea:	adc    DWORD PTR [eax-0x29],0xebce68b8
  411df1:	mov    ecx,0x7700bfe0
  411df6:	mov    ecx,0xc4695e30
  411dfb:	jnp    0x411e0d
  411dfd:	cwde   
  411dfe:	out    dx,eax
  411dff:	xchg   ecx,eax
  411e00:	sub    bh,BYTE PTR [edx-0x2ec913fa]
  411e06:	xor    ebx,esp
  411e08:	sbb    esi,ecx
  411e0a:	jbe    0x411dda
  411e0c:	xchg   ebp,eax
  411e0d:	and    eax,DWORD PTR [ecx]
  411e0f:	stos   DWORD PTR es:[edi],eax
  411e10:	adc    bl,BYTE PTR [esi-0x6fd20800]
  411e16:	and    DWORD PTR [eax+ecx*8+0x15],esi
  411e1a:	mov    dl,0x23
  411e1c:	adc    al,0xb0
  411e1e:	inc    esi
  411e1f:	mov    ds:0xf40bbe8,al
  411e24:	outs   dx,DWORD PTR ds:[esi]
  411e25:	loopne 0x411dd9
  411e27:	cwde   
  411e28:	adc    BYTE PTR ds:0xd6686727,0x8
  411e2f:	cld    
  411e30:	inc    ecx
  411e31:	inc    eax
  411e32:	ret    0x8039
  411e35:	add    DWORD PTR [ebx],0xffffffa6
  411e38:	lods   al,BYTE PTR ds:[esi]
  411e39:	xlat   BYTE PTR ds:[ebx]
  411e3a:	cmp    eax,0x5eea46bc
  411e3f:	pop    ecx
  411e40:	js     0x411dd8
  411e42:	fwait
  411e43:	inc    eax
  411e44:	addr16 dec esp
  411e46:	sar    DWORD PTR [eax+0x6dabd9a8],0xaa
  411e4d:	fs mov esi,0x13cfd5c8
  411e53:	dec    ebx
  411e54:	fld    QWORD PTR [ebp-0x12bfdf2f]
  411e5a:	(bad)  
  411e5b:	jne    0x411eb6
  411e5d:	addr16 or eax,0x4c65f21b
  411e63:	inc    eax
  411e64:	add    ecx,DWORD PTR [eax-0x7b44dba2]
  411e6a:	mul    BYTE PTR [eax]
  411e6c:	aam    0xb2
  411e6e:	call   0x8c430dfd
  411e73:	mul    dl
  411e75:	pop    esp
  411e76:	mov    bl,0x2f
  411e78:	adc    eax,0x4d5ada24
  411e7d:	cmc    
  411e7e:	sbb    ebp,ebp
  411e80:	(bad)  
  411e81:	jb     0x411ec8
  411e83:	mov    edx,0xea9650fd
  411e88:	mov    edi,0x356e3747
  411e8d:	shr    cl,1
  411e8f:	ja     0x411e62
  411e91:	pop    ebp
  411e92:	jae    0x411ef3
  411e94:	bound  ebx,QWORD PTR [esi-0x4a598fb4]
  411e9a:	inc    ecx
  411e9b:	xor    al,0xba
  411e9d:	pop    eax
  411e9e:	mov    cl,0xf3
  411ea0:	mov    bh,0xa8
  411ea2:	neg    DWORD PTR gs:[ecx-0x7a]
  411ea6:	aad    0x1
  411ea8:	bound  esi,QWORD PTR [eax]
  411eaa:	mov    ebx,0x61ff86ac
  411eaf:	fwait
  411eb0:	call   0xc285:0x5eedd939
  411eb7:	pusha  
  411eb8:	dec    ebp
  411eb9:	repz jne 0x411e50
  411ebc:	and    esp,esp
  411ebe:	mov    fs,esp
  411ec0:	in     eax,0x99
  411ec2:	dec    ebx
  411ec3:	inc    ebp
  411ec4:	mov    ebp,0xef95ce85
  411ec9:	(bad)  
  411eca:	repz jno 0x411f02
  411ecd:	pop    ss
  411ece:	mov    bh,ah
  411ed0:	dec    ecx
  411ed1:	stc    
  411ed2:	push   0xce33226a
  411ed7:	pop    edi
  411ed8:	ins    DWORD PTR es:[edi],dx
  411ed9:	lea    edx,ds:0xdac94757
  411edf:	cmp    BYTE PTR [eax-0x43147496],al
  411ee5:	dec    ecx
  411ee6:	std    
  411ee7:	ret    
  411ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eea:	jmp    0xf996:0x413b6df2
  411ef1:	lods   al,BYTE PTR ds:[esi]
  411ef2:	leave  
  411ef3:	add    eax,0x97c80d9c
  411ef8:	out    dx,al
  411ef9:	dec    edx
  411efa:	popf   
  411efb:	mov    al,BYTE PTR [ecx-0x26]
  411efe:	pop    es
  411eff:	loope  0x411edb
  411f01:	stc    
  411f02:	and    BYTE PTR [edi+ecx*8+0x33],al
  411f06:	ret    0xd055
  411f09:	call   0xeb3f:0x91deb5e9
  411f10:	mov    ah,0xc
  411f12:	add    BYTE PTR [ecx],dh
  411f14:	jmp    0x656b:0x7c78e4b5
  411f1b:	mov    ds:0x47d22048,al
  411f20:	add    eax,0x277a3f1a
  411f25:	push   0xffffffac
  411f27:	xchg   edi,ebp
  411f29:	mov    dl,0xc1
  411f2b:	call   0x3af2:0x726005fe
  411f32:	xchg   edx,eax
  411f33:	call   0x5d60:0x300e6137
  411f3a:	repnz fldcw WORD PTR [ecx+0x50]
  411f3e:	and    al,0x68
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	aaa    
  411f42:	iret   
  411f43:	sbb    DWORD PTR [ebx-0x2f],eax
  411f46:	gs and al,0xd5
  411f49:	clc    
  411f4a:	adc    BYTE PTR [edx],bl
  411f4c:	xchg   edi,eax
  411f4d:	lods   al,BYTE PTR ds:[esi]
  411f4e:	(bad)  
  411f4f:	loopne 0x411f4c
  411f51:	xchg   BYTE PTR [eax],dh
  411f53:	xchg   esp,eax
  411f54:	sub    ch,BYTE PTR [edi]
  411f56:	repnz and ecx,ecx
  411f59:	scas   eax,DWORD PTR es:[edi]
  411f5a:	push   edi
  411f5b:	dec    esi
  411f5c:	and    edx,eax
  411f5e:	inc    edi
  411f5f:	outs   dx,BYTE PTR ds:[esi]
  411f60:	rcr    BYTE PTR [ebp+0x1f],cl
  411f63:	or     bh,BYTE PTR [ebx+eax*1-0x2a2a1ea6]
  411f6a:	icebp  
  411f6b:	int3   
  411f6c:	xchg   ebx,eax
  411f6d:	mov    esp,0x81338a54
  411f72:	inc    edx
  411f73:	jl     0x411f93
  411f75:	add    ebp,ebp
  411f77:	(bad)  
  411f78:	jge    0x411fab
  411f7a:	jl     0x411fd1
  411f7c:	dec    edx
  411f7d:	in     eax,0x55
  411f7f:	ret    
  411f80:	int    0xb4
  411f82:	jb     0x411f5d
  411f84:	xor    DWORD PTR [ebx],0xffffffa0
  411f87:	ins    BYTE PTR es:[edi],dx
  411f88:	inc    edx
  411f89:	test   eax,0xc022799e
  411f8e:	test   DWORD PTR [eax-0x3c],edi
  411f91:	mov    bh,0xd1
  411f93:	div    dh
  411f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f96:	inc    edi
  411f97:	rcl    cl,1
  411f99:	(bad)  
  411f9a:	fldenvw [ecx+ebx*1]
  411f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f9f:	pushf  
  411fa0:	or     ah,cl
  411fa2:	mov    ebx,DWORD PTR [ebp-0x55]
  411fa5:	call   0x36e06848
  411faa:	enter  0xa05b,0x88
  411fae:	fstp   TBYTE PTR [ebp-0x1a]
  411fb1:	jnp    0x411fac
  411fb3:	sbb    DWORD PTR [edi],eax
  411fb5:	lods   al,BYTE PTR ds:[esi]
  411fb6:	inc    ebp
  411fb7:	ins    BYTE PTR es:[edi],dx
  411fb8:	or     al,BYTE PTR [edx-0x75]
  411fbb:	and    al,0xf4
  411fbd:	pushf  
  411fbe:	fadd   st(3),st
  411fc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fc1:	mov    eax,0x52407d07
  411fc6:	and    al,0x78
  411fc8:	stc    
  411fc9:	lds    esp,FWORD PTR [eax-0x77e6776d]
  411fcf:	mov    bl,0x4c
  411fd1:	mov    cl,0x40
  411fd3:	inc    esp
  411fd4:	imul   esp,DWORD PTR [edi+0x44],0xd28ba672
  411fdb:	mov    al,ds:0xcdc5fcc5
  411fe0:	ss push eax
  411fe2:	clc    
  411fe3:	dec    eax
  411fe4:	sti    
  411fe5:	int3   
  411fe6:	les    ecx,FWORD PTR [ecx]
  411fe8:	fcom   DWORD PTR [ecx+eax*1]
  411feb:	outs   dx,BYTE PTR ds:[esi]
  411fec:	adc    DWORD PTR cs:[ebp-0x223295a1],0x7
  411ff4:	jmp    0x7e8a:0x186760d2
  411ffb:	fldenv [edx]
  411ffd:	sahf   
  411ffe:	mov    al,ss:0xe02ff63e
  412004:	jl     0x411fb4
  412006:	jecxz  0x411f99
  412008:	fcom   DWORD PTR [eax]
  41200a:	outs   dx,BYTE PTR ds:[esi]
  41200b:	dec    edi
  41200c:	xchg   esi,eax
  41200d:	aaa    
  41200e:	int    0x55
  412010:	jne    0x411fc3
  412012:	ja     0x411fb0
  412014:	xchg   edi,eax
  412015:	rol    bl,1
  412017:	adc    edx,ebx
  412019:	add    dh,BYTE PTR [esi-0x45]
  41201c:	rcl    ch,1
  41201e:	shr    DWORD PTR [edi],cl
  412020:	adc    BYTE PTR [ebx-0x71b70f5c],al
  412026:	and    BYTE PTR [ebp+0x5a],ah
  412029:	int3   
  41202a:	mov    ebx,0x1ee44765
  41202f:	test   BYTE PTR [eax],0x45
  412032:	loope  0x41201e
  412034:	aad    0xc9
  412036:	inc    ebp
  412037:	test   eax,0x268af6e8
  41203c:	mov    es,WORD PTR [eax-0x299fb9b8]
  412042:	lds    ecx,FWORD PTR [edi+ebp*4]
  412045:	adc    DWORD PTR [eax-0x3e],ebp
  412048:	jnp    0x41204a
  41204a:	pop    ecx
  41204b:	fdiv   DWORD PTR [ebp+0x13]
  41204e:	repnz cdq 
  412050:	and    al,0xab
  412052:	ret    
  412053:	aas    
  412054:	sbb    ah,al
  412056:	sub    BYTE PTR [eax+eiz*4-0x7d],0xde
  41205b:	sbb    esi,DWORD PTR [eax+0x77]
  41205e:	adc    DWORD PTR [ecx+0x46],0xce94e0d4
  412065:	push   eax
  412066:	loope  0x412039
  412068:	ins    DWORD PTR es:[edi],dx
  412069:	inc    esi
  41206a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41206b:	out    0xa4,eax
  41206d:	mov    DWORD PTR [eax+0x5b],esi
  412070:	xor    DWORD PTR [ebp-0x52ac174c],0x54
  412077:	sbb    dh,BYTE PTR [edi]
  412079:	imul   ebx,DWORD PTR [esi-0xe],0x57
  41207d:	inc    ebp
  41207e:	retf   
  41207f:	lea    ecx,[edx]
  412081:	fild   DWORD PTR [edi-0x588ad261]
  412087:	xchg   DWORD PTR [ecx-0xb],edx
  41208a:	imul   ebx,ebx,0xe6c9ab26
  412090:	fcomp  st(4)
  412092:	fisub  DWORD PTR [edi-0x78]
  412095:	or     eax,eax
  412097:	pop    ebx
  412098:	adc    eax,0x71af4914
  41209d:	and    esi,DWORD PTR [ecx]
  41209f:	ror    ah,1
  4120a1:	stos   BYTE PTR es:[edi],al
  4120a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120a3:	retf   0xb838
  4120a6:	mov    ebp,0xbc4d2e1e
  4120ab:	mov    ecx,0x8b775c89
  4120b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120b1:	repnz add eax,0xe4de3a11
  4120b7:	xchg   ebx,eax
  4120b8:	(bad)  
  4120b9:	arpl   WORD PTR [ebp-0x3a],cx
  4120bc:	and    BYTE PTR [esi],bh
  4120be:	ins    DWORD PTR es:[edi],dx
  4120bf:	lahf   
  4120c0:	push   ebp
  4120c1:	mov    ch,0x13
  4120c3:	mov    ds:0x1885747c,eax
  4120c8:	out    dx,eax
  4120c9:	add    edx,edx
  4120cb:	xor    eax,0x5854272a
  4120d0:	lahf   
  4120d1:	add    BYTE PTR [ecx+0x5f0b8865],0xc6
  4120d8:	fdiv   DWORD PTR [eax-0x28]
  4120db:	jnp    0x41211b
  4120dd:	jbe    0x4120c7
  4120df:	enter  0xd0f9,0x10
  4120e3:	push   0xffffffd9
  4120e5:	or     BYTE PTR [edi+0x48f141f3],al
  4120eb:	daa    
  4120ec:	or     al,0x72
  4120ee:	(bad)  
  4120ef:	jmp    0x96ad7e99
  4120f4:	xchg   ebx,eax
  4120f5:	cmp    eax,0xc1194f19
  4120fa:	mov    esp,0xd39de1c0
  4120ff:	fs pop esi
  412101:	mov    cl,BYTE PTR [ecx]
  412103:	mov    ebx,0x86216c0e
  412108:	adc    al,0xf3
  41210a:	leave  
  41210b:	int    0x37
  41210d:	xor    esi,DWORD PTR [eax+0x49]
  412110:	sub    ah,BYTE PTR [ebp+0x5]
  412113:	out    0xfe,al
  412115:	pushf  
  412116:	popf   
  412117:	daa    
  412118:	stos   BYTE PTR es:[edi],al
  412119:	retf   0xc392
  41211c:	mov    cl,0x29
  41211e:	outs   dx,DWORD PTR ds:[esi]
  41211f:	mov    bh,0x29
  412121:	fst    DWORD PTR [esi]
  412123:	jns    0x4120d2
  412125:	mov    cl,0xa6
  412127:	jne    0x4120f6
  412129:	loope  0x412164
  41212b:	icebp  
  41212c:	out    0x26,eax
  41212e:	sbb    al,0x3f
  412130:	mov    cl,0x1f
  412132:	adc    cl,BYTE PTR [esi]
  412134:	pop    ebx
  412135:	addr16 mov edi,0xb47f2753
  41213b:	sahf   
  41213c:	(bad)  
  41213d:	push   esi
  41213e:	shl    BYTE PTR [edi-0x70],1
  412141:	pop    esi
  412142:	add    DWORD PTR [ecx+0x17],eax
  412145:	imul   ebx,DWORD PTR [ebx+ecx*8],0x4b
  412149:	cwde   
  41214a:	dec    edx
  41214b:	jge    0x41214d
  41214d:	(bad)  
  41214e:	cmp    eax,0x464432e5
  412153:	out    dx,eax
  412154:	iret   
  412155:	jbe    0x4121ab
  412157:	sub    DWORD PTR [ecx-0x2a],0xffffffd5
  41215b:	push   ebx
  41215c:	mov    bl,0xf2
  41215e:	int3   
  41215f:	pop    ebp
  412160:	js     0x41212f
  412162:	push   esp
  412163:	in     al,0x2d
  412165:	add    dl,ch
  412167:	sub    al,0xc5
  412169:	inc    esp
  41216a:	sub    DWORD PTR [edi+0x7f2773d8],ebp
  412170:	adc    al,0x0
  412172:	mov    edx,0x3607ca39
  412177:	push   es
  412178:	stos   DWORD PTR es:[edi],eax
  412179:	int3   
  41217a:	cmp    al,0xe3
  41217c:	in     al,0xd7
  41217e:	aaa    
  41217f:	in     eax,dx
  412180:	dec    ebp
  412181:	popf   
  412182:	outs   dx,BYTE PTR ds:[esi]
  412183:	dec    edx
  412184:	retf   0xf1c1
  412187:	mov    ecx,0x992bf787
  41218c:	pop    ebx
  41218d:	cmp    al,0x2f
  41218f:	jns    0x412152
  412191:	jns    0x4121ba
  412193:	cli    
  412194:	push   cs
  412195:	adc    bl,dh
  412197:	(bad)  
  412198:	retf   
  412199:	mov    es,esi
  41219b:	mov    esi,0x9a61dc36
  4121a0:	cmp    esp,ebx
  4121a2:	hlt    
  4121a3:	jle    0x412186
  4121a5:	mov    esp,0x509f1ec
  4121aa:	push   0xafcdd539
  4121af:	(bad)  
  4121b0:	pop    ds
  4121b1:	pop    ebp
  4121b2:	scas   al,BYTE PTR es:[edi]
  4121b3:	(bad)  
  4121b4:	sbb    ch,BYTE PTR [eax+0x54]
  4121b7:	(bad)  
  4121b8:	adc    al,0x3f
  4121ba:	aaa    
  4121bb:	loopne 0x412227
  4121bd:	js     0x412234
  4121bf:	or     esp,DWORD PTR [eax+eiz*2+0x3e]
  4121c3:	arpl   WORD PTR [ecx+0x12],bx
  4121c6:	into   
  4121c7:	xchg   esp,eax
  4121c8:	push   ds
  4121c9:	mov    dl,0xd8
  4121cb:	frstor [edi-0x8]
  4121ce:	jae    0x412183
  4121d0:	dec    ebp
  4121d1:	leave  
  4121d2:	fnsave [ecx+eax*4-0x7a]
  4121d6:	sub    DWORD PTR [ecx-0x424b13a8],edi
  4121dc:	jbe    0x4121e7
  4121de:	pop    ds
  4121df:	dec    edx
  4121e0:	mov    edi,0x9d22aec9
  4121e5:	addr16 jmp 0x41218f
  4121e8:	leave  
  4121e9:	jne    0x4121b5
  4121eb:	mov    ah,0xbd
  4121ed:	(bad)  
  4121ee:	addr16 dec ebx
  4121f0:	and    bl,BYTE PTR [eax-0x484be45f]
  4121f6:	or     DWORD PTR [edi-0x5bf6d5f],edi
  4121fc:	mov    eax,0x57dde91d
  412201:	cli    
  412202:	jmp    0x8b68:0x9486e1c7
  412209:	pop    ss
  41220a:	xchg   ebp,eax
  41220b:	mov    cl,0xd4
  41220d:	mov    eax,ds:0x4f1402d2
  412212:	pop    es
  412213:	mov    edx,0x247d1169
  412218:	sub    DWORD PTR [ecx+edx*4-0x37705502],ebx
  41221f:	dec    ecx
  412220:	(bad)  [esi-0x78]
  412223:	mov    ebp,DWORD PTR [edi+0x4aeac9ea]
  412229:	fs into 
  41222b:	daa    
  41222c:	addr16 mov eax,0x50c51008
  412232:	jmp    0x4121db
  412234:	stc    
  412235:	fst    DWORD PTR [eax+0x71]
  412238:	jb     0x4121de
  41223a:	push   esp
  41223b:	cwde   
  41223c:	clc    
  41223d:	test   eax,0xcf8d50cc
  412242:	xchg   BYTE PTR [ebx+eiz*4],ch
  412245:	(bad)  
  412246:	fdiv   st(1),st
  412248:	imul   esp,DWORD PTR [ecx+edi*8+0x3d3035af],0xffffffff
  412250:	adc    bl,BYTE PTR [ebx-0xc]
  412253:	(bad)  
  412254:	(bad)  
  412255:	loopne 0x4121e1
  412257:	retf   0xfb1e
  41225a:	inc    esp
  41225b:	and    DWORD PTR [ebx],edx
  41225d:	jae    0x41220f
  41225f:	rcr    DWORD PTR [edi+0x37],cl
  412262:	idiv   DWORD PTR [edi+0x59e20aa1]
  412268:	loope  0x412283
  41226a:	enter  0x5623,0x1
  41226e:	jmp    0xdd1ab086
  412273:	mov    WORD PTR [edi+edx*1-0x44],gs
  412277:	push   0x4c
  412279:	xchg   DWORD PTR [ebx-0x67733ea5],ebp
  41227f:	rcl    BYTE PTR [esi],0x6a
  412282:	xchg   ebx,eax
  412283:	adc    DWORD PTR [eax],ebx
  412285:	in     eax,0xfe
  412287:	fdiv   QWORD PTR [eax+0x35]
  41228a:	xchg   edx,eax
  41228b:	add    esp,0x6e
  41228e:	xlat   BYTE PTR ds:[ebx]
  41228f:	mov    dl,al
  412291:	std    
  412292:	inc    esi
  412293:	add    BYTE PTR [edx],al
  412295:	jo     0x41230e
  412297:	sub    eax,0xd4108581
  41229c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41229d:	pop    es
  41229e:	(bad)  
  41229f:	inc    edx
  4122a0:	scas   al,BYTE PTR es:[edi]
  4122a1:	in     al,dx
  4122a2:	cwde   
  4122a3:	xor    BYTE PTR [edi+0x4a],dh
  4122a6:	arpl   WORD PTR [bp+di+0x28fa],bp
  4122ab:	aaa    
  4122ac:	outs   dx,DWORD PTR ds:[esi]
  4122ad:	mov    dl,0xae
  4122af:	aaa    
  4122b0:	cdq    
  4122b1:	loope  0x412262
  4122b3:	sub    al,0x37
  4122b5:	dec    edx
  4122b6:	daa    
  4122b7:	in     al,dx
  4122b8:	adc    al,0x0
  4122ba:	imul   BYTE PTR [edi+0x2b]
  4122bd:	and    al,BYTE PTR gs:[esi]
  4122c0:	imul   ebp,DWORD PTR [eax+edi*8-0x1a5722c1],0x78de32f3
  4122cb:	pop    ecx
  4122cc:	jb     0x41231f
  4122ce:	pop    ebp
  4122cf:	stos   DWORD PTR es:[edi],eax
  4122d0:	sbb    ch,BYTE PTR [edx-0x4c84288c]
  4122d6:	dec    ecx
  4122d7:	cmp    al,0x28
  4122d9:	rcr    BYTE PTR [ecx-0x1d92a825],0x32
  4122e0:	stos   DWORD PTR es:[edi],eax
  4122e1:	or     DWORD PTR [edx-0x4f],edi
  4122e4:	sahf   
  4122e5:	push   0x6a
  4122e7:	adc    BYTE PTR ds:0x9f953be9,dl
  4122ed:	fsub   QWORD PTR [esi-0x5cb84d53]
  4122f3:	push   esp
  4122f4:	ds dec ebp
  4122f6:	mov    ebp,0x3daeedf6
  4122fb:	(bad)  [edi+0xe]
  4122fe:	ss mov ecx,0xe3bfdde4
  412304:	aam    0xb7
  412306:	test   BYTE PTR [edx+edx*1],ch
  412309:	sti    
  41230a:	fidivr DWORD PTR [esi+eax*2]
  41230d:	pop    ds
  41230e:	dec    eax
  41230f:	rol    BYTE PTR [ecx+0x32c137a],0x99
  412316:	shl    DWORD PTR [ecx-0x2a],1
  412319:	test   eax,0xda0059f5
  41231e:	out    dx,eax
  41231f:	frstor [edx+0x6917dd1f]
  412325:	mov    edx,fs
  412327:	retf   0x5151
  41232a:	pop    ebx
  41232b:	fbld   TBYTE PTR [edi]
  41232d:	es pop es
  41232f:	sbb    eax,0x7af3bbc5
  412334:	adc    BYTE PTR ds:0xdbfecebb,dl
  41233a:	arpl   cx,bp
  41233c:	dec    eax
  41233d:	int    0xe3
  41233f:	jbe    0x41238f
  412341:	dec    ebx
  412342:	sub    esi,DWORD PTR [ebx]
  412344:	fisttp DWORD PTR [edx]
  412346:	jb     0x412370
  412348:	in     al,0xdb
  41234a:	jnp    0x4123bb
  41234c:	xchg   ebx,eax
  41234d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41234e:	hlt    
  41234f:	in     al,dx
  412350:	pop    ecx
  412351:	neg    BYTE PTR [ebp+0x7e1b09b6]
  412357:	fiadd  WORD PTR [ebx-0x17]
  41235a:	cmp    ebx,ecx
  41235c:	test   al,0xa3
  41235e:	ret    
  41235f:	or     eax,0x34ba1721
  412364:	xchg   edx,eax
  412365:	sbb    DWORD PTR [edi+0x5f],esi
  412368:	adc    bh,bh
  41236a:	scas   eax,DWORD PTR es:[edi]
  41236b:	jg     0x41234b
  41236d:	mov    eax,ds:0x99d7376c
  412372:	jle    0x41233c
  412374:	pop    edx
  412375:	mov    cl,0x2e
  412377:	adc    al,0x6f
  412379:	dec    ebx
  41237a:	ret    0x15af
  41237d:	sbb    BYTE PTR [eax+0x6cf780bb],dl
  412383:	and    eax,0xfb7f88de
  412388:	popa   
  412389:	imul   ecx,DWORD PTR [eax+ebx*8-0x3d],0x9e575b7
  412391:	push   esi
  412392:	xor    al,0xd1
  412394:	mov    al,0xe1
  412396:	sti    
  412397:	mov    es,WORD PTR [edx]
  412399:	sbb    BYTE PTR [ebx-0x7dccc7b0],0x65
  4123a0:	std    
  4123a1:	xor    BYTE PTR [ebp+0x7bc67c98],ah
  4123a7:	jb     0x412368
  4123a9:	xchg   esi,eax
  4123aa:	mov    ebp,0xd91c09cd
  4123af:	cmp    BYTE PTR [esi],ah
  4123b1:	push   0xbdd228f5
  4123b6:	ret    0x9605
  4123b9:	hlt    
  4123ba:	dec    esi
  4123bb:	ins    DWORD PTR es:[edi],dx
  4123bc:	pop    ebx
  4123bd:	cld    
  4123be:	sub    al,0x11
  4123c0:	or     DWORD PTR [edx],0xcdd1767c
  4123c6:	pop    ss
  4123c7:	addr16 pop esi
  4123c9:	jmp    0x4123b9
  4123cb:	cmp    BYTE PTR [ebx],0xc3
  4123ce:	adc    BYTE PTR [ebx],bl
  4123d0:	and    edi,DWORD PTR [ecx+0x4b]
  4123d3:	cld    
  4123d4:	les    esp,FWORD PTR [eax-0x49]
  4123d7:	in     al,dx
  4123d8:	fwait
  4123d9:	les    ebx,FWORD PTR [ecx-0x4]
  4123dc:	repz or eax,0x1babbea9
  4123e2:	gs push 0x575dc794
  4123e8:	(bad)  
  4123e9:	jo     0x4123af
  4123eb:	dec    eax
  4123ec:	xchg   esp,eax
  4123ed:	out    dx,al
  4123ee:	aad    0x55
  4123f0:	(bad)  
  4123f1:	jle    0x412396
  4123f3:	loope  0x412384
  4123f5:	adc    eax,0xfe0c7f70
  4123fa:	out    0x28,al
  4123fc:	jo     0x412426
  4123fe:	outs   dx,BYTE PTR ds:[esi]
  4123ff:	cld    
  412400:	sub    eax,0xbb8f8475
  412405:	add    BYTE PTR [ecx+0x3303c119],dh
  41240b:	sbb    al,0x45
  41240d:	loop   0x4123fb
  41240f:	je     0x41248b
  412411:	ins    BYTE PTR es:[edi],dx
  412412:	dec    edx
  412413:	push   ebx
  412414:	xchg   ecx,eax
  412415:	lahf   
  412416:	xchg   esp,eax
  412417:	into   
  412418:	popa   
  412419:	dec    eax
  41241a:	icebp  
  41241b:	das    
  41241c:	sahf   
  41241d:	imul   ecx,ecx,0xffffffb3
  412420:	test   eax,0x3235efe3
  412425:	sar    ecx,1
  412427:	sub    DWORD PTR [ebx-0x70],edi
  41242a:	pop    ss
  41242b:	inc    edi
  41242c:	ret    
  41242d:	mov    bh,0xcc
  41242f:	jg     0x412462
  412431:	pop    ebp
  412432:	jg     0x41241d
  412434:	xor    edi,edi
  412436:	cwde   
  412437:	mov    ebx,0xa6886c1a
  41243c:	mov    eax,0x2466659e
  412441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412442:	mov    ss,WORD PTR [edx]
  412444:	push   0xf6a8b13a
  412449:	cwde   
  41244a:	mov    ebp,0x79a00005
  41244f:	and    al,BYTE PTR [edx]
  412451:	dec    ecx
  412452:	mov    eax,ds:0xfde41c34
  412457:	scas   eax,DWORD PTR es:[edi]
  412458:	mov    ah,0x12
  41245a:	jge    0x412463
  41245c:	(bad)  
  41245d:	aas    
  41245e:	and    dl,BYTE PTR [ecx+ecx*8]
  412461:	es add al,0x11
  412464:	bts    DWORD PTR [ecx+0x57c98585],0xb8
  41246c:	mov    ds,WORD PTR [esi+eax*1-0x9]
  412470:	imul   eax,DWORD PTR [ecx+0x1381e417],0xffffffc7
  412477:	mov    bl,0x5d
  412479:	stc    
  41247a:	xor    DWORD PTR [edi+edi*1+0x43],0x46
  41247f:	rol    BYTE PTR [edx+eiz*8-0x71],0x69
  412484:	mov    esi,0x29148304
  412489:	in     eax,0x21
  41248b:	push   eax
  41248c:	inc    ecx
  41248d:	pop    edi
  41248e:	mov    cl,0x6f
  412490:	iret   
  412491:	pushf  
  412492:	(bad)  
  412493:	enter  0x4991,0x76
  412497:	dec    esi
  412498:	xchg   edx,eax
  412499:	test   BYTE PTR [ecx],0xf9
  41249c:	push   es
  41249d:	sub    ah,BYTE PTR [ebx-0x5d6aa7a4]
  4124a3:	retf   0x8c81
  4124a6:	in     al,dx
  4124a7:	xchg   esp,eax
  4124a8:	ss fs xchg ecx,eax
  4124ab:	or     esp,DWORD PTR [esi]
  4124ad:	xchg   esp,eax
  4124ae:	xlat   BYTE PTR ds:[ebx]
  4124af:	int    0x42
  4124b1:	mov    eax,0x8cde9a4c
  4124b6:	aaa    
  4124b7:	shr    BYTE PTR [eax-0x5684073a],cl
  4124bd:	(bad)  
  4124be:	loope  0x41249f
  4124c0:	dec    esp
  4124c1:	dec    BYTE PTR [esi-0x24]
  4124c4:	dec    edi
  4124c5:	cmp    ch,BYTE PTR [esi+0x4bfbf4c0]
  4124cb:	ja     0x412521
  4124cd:	je     0x4124a5
  4124cf:	pop    ecx
  4124d0:	stos   DWORD PTR es:[edi],eax
  4124d1:	data16 jg 0x412531
  4124d4:	retf   0x370
  4124d7:	pushf  
  4124d8:	pop    ebx
  4124d9:	mov    DWORD PTR [edx],ecx
  4124db:	shl    DWORD PTR ds:0xa3d22227,0x56
  4124e2:	sbb    BYTE PTR [edx],cl
  4124e4:	call   0xc95c7395
  4124e9:	ds push esi
  4124eb:	xor    al,0x41
  4124ed:	hlt    
  4124ee:	sahf   
  4124ef:	and    DWORD PTR [eax+0x40d246ff],ebp
  4124f5:	mov    bl,0x33
  4124f7:	cs push ebx
  4124f9:	mov    esp,0x3edd1ad8
  4124fe:	repz xor DWORD PTR [eax],eax
  412501:	ins    BYTE PTR es:[edi],dx
  412502:	sub    al,0xf3
  412504:	mov    es,WORD PTR [edx]
  412506:	jle    0x412565
  412508:	scas   eax,DWORD PTR es:[edi]
  412509:	dec    esp
  41250a:	mov    edi,ecx
  41250c:	push   ds
  41250d:	shl    BYTE PTR [esi],1
  41250f:	xchg   BYTE PTR [edi+0x66],ch
  412512:	xchg   edi,eax
  412513:	and    al,0x1b
  412515:	and    edx,DWORD PTR [eax-0x7ef9d198]
  41251b:	mov    bl,0x68
  41251d:	jmp    0x4124f9
  41251f:	fld    st(1)
  412521:	jmp    0x4124fd
  412523:	adc    esi,esi
  412525:	xchg   al,dh
  412527:	dec    ebx
  412528:	push   eax
  412529:	cwde   
  41252a:	shl    DWORD PTR [ecx-0x1eae0977],cl
  412530:	dec    esp
  412531:	jno    0x4125ad
  412533:	pop    ebp
  412534:	daa    
  412535:	clc    
  412536:	mov    edi,0x90f6aa0d
  41253b:	pop    ss
  41253c:	aam    0x73
  41253e:	cdq    
  41253f:	jmp    0xaf9e:0x2778
  412545:	ins    DWORD PTR es:[edi],dx
  412546:	int    0xd1
  412548:	loope  0x412522
  41254a:	call   0x5ca2:0x85dfc8d7
  412551:	and    edi,DWORD PTR [esp+ecx*4-0x69]
  412555:	push   eax
  412556:	mov    edi,0x15de4b6e
  41255b:	jnp    0x412542
  41255d:	xor    al,0xcf
  41255f:	push   ss
  412560:	shl    DWORD PTR [ebp+eax*1+0x15ed89f2],cl
  412567:	jmp    0x5537:0x8f50eacb
  41256e:	pop    ecx
  41256f:	leave  
  412570:	pop    ss
  412571:	push   ecx
  412572:	pop    esp
  412573:	push   esi
  412574:	outs   dx,BYTE PTR ds:[esi]
  412575:	out    0x96,al
  412577:	push   edx
  412578:	mov    ds,WORD PTR [ebx-0x1f]
  41257b:	in     eax,0x8f
  41257d:	cmp    ch,dh
  41257f:	sets   BYTE PTR [edx+esi*8]
  412583:	mov    ebx,0xf42c9bf5
  412588:	mov    bh,0xb6
  41258a:	sbb    al,0xf6
  41258c:	push   edx
  41258d:	es mov al,0x37
  412590:	mov    ds:0xbaedad30,al
  412595:	inc    ecx
  412596:	cmp    cl,0x28
  412599:	(bad)  
  41259a:	shr    DWORD PTR [edx-0x6b],cl
  41259d:	mov    bl,0x1d
  41259f:	mov    DWORD PTR [ebp+0x69b09b67],edi
  4125a5:	not    dl
  4125a7:	mov    ebp,fs
  4125a9:	sub    edx,esi
  4125ab:	ret    
  4125ac:	adc    DWORD PTR [ecx],edi
  4125ae:	mov    bh,0xde
  4125b0:	popf   
  4125b1:	pop    ds
  4125b2:	aam    0x4d
  4125b4:	hlt    
  4125b5:	pop    es
  4125b6:	(bad)  
  4125b7:	sbb    al,0x28
  4125b9:	cmc    
  4125ba:	and    eax,0xb8db02bb
  4125bf:	cmp    eax,0xd5b024e6
  4125c4:	cmc    
  4125c5:	pcmpeqb mm5,QWORD PTR [ebx+0x30]
  4125c9:	daa    
  4125ca:	cmp    BYTE PTR [edx-0x48],ch
  4125cd:	popa   
  4125ce:	push   ss
  4125cf:	pop    ebx
  4125d0:	or     edx,esp
  4125d2:	cwde   
  4125d3:	call   0xcf9420ab
  4125d8:	mov    dl,0xbe
  4125da:	pop    edi
  4125db:	push   cs
  4125dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125dd:	add    BYTE PTR ss:[ebp-0x7709980],ch
  4125e4:	test   eax,0xbf85daa7
  4125e9:	mov    dl,0xa4
  4125eb:	inc    ebx
  4125ec:	sub    DWORD PTR [edx+0x53],esi
  4125ef:	mov    ds:0xadcb5d7f,eax
  4125f4:	out    0xd7,eax
  4125f6:	retf   
  4125f7:	stos   BYTE PTR es:[edi],al
  4125f8:	(bad)  
  4125f9:	jae    0x41262d
  4125fb:	hlt    
  4125fc:	int    0xd0
  4125fe:	push   es
  4125ff:	push   ebx
  412600:	or     eax,0x27f787b4
  412605:	mov    bl,0x5
  412607:	sub    al,0xf6
  412609:	mov    eax,0xeb8eb149
  41260e:	or     eax,0xbecdaf8a
  412613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412614:	mov    dh,0xf4
  412616:	fsub   QWORD PTR [ebx]
  412618:	add    DWORD PTR [ebp-0x58],ebx
  41261b:	pop    edx
  41261c:	xchg   esp,edx
  41261e:	sbb    eax,0x876f84cf
  412623:	fsubr  QWORD PTR [edi*1-0x1f0475d9]
  41262a:	shl    DWORD PTR [ecx+edi*8],cl
  41262d:	aam    0x1f
  41262f:	xchg   esp,eax
  412630:	pop    ebx
  412631:	gs dec edx
  412633:	aaa    
  412634:	and    al,0xde
  412636:	stos   DWORD PTR es:[edi],eax
  412637:	pop    eax
  412638:	repnz add DWORD PTR [ebx],eax
  41263b:	loop   0x4126b5
  41263d:	test   al,0x17
  41263f:	cmp    al,0x99
  412641:	pop    edi
  412642:	mov    WORD PTR [ecx],ds
  412644:	push   cs
  412645:	(bad)  
  412646:	mov    ch,0x11
  412648:	lods   eax,DWORD PTR ds:[esi]
  412649:	(bad)  
  41264a:	scas   al,BYTE PTR es:[edi]
  41264b:	ficom  DWORD PTR [ebx-0x1f]
  41264e:	xchg   esp,eax
  41264f:	ins    BYTE PTR es:[edi],dx
  412650:	sti    
  412651:	sbb    ebp,DWORD PTR [esi]
  412653:	push   cs
  412654:	mov    ecx,0xf3e387da
  412659:	mov    ds:0xbdaef779,eax
  41265e:	lods   al,BYTE PTR ds:[esi]
  41265f:	mov    al,0xc2
  412661:	repnz mov dl,0xf2
  412664:	cdq    
  412665:	lock dec eax
  412667:	fs dec eax
  412669:	shr    DWORD PTR [ebx+esi*4-0x3f3a5524],cl
  412670:	dec    esp
  412671:	xchg   esp,eax
  412672:	and    DWORD PTR [ecx],ebx
  412674:	fdiv   st,st(2)
  412676:	inc    ebp
  412677:	pop    es
  412678:	push   edx
  412679:	push   edi
  41267a:	mov    ebx,0xd4d0aae8
  41267f:	cli    
  412680:	add    bl,BYTE PTR [esi-0x58177f6]
  412686:	loopne 0x412699
  412688:	lods   eax,DWORD PTR ds:[esi]
  412689:	out    dx,eax
  41268a:	in     eax,0x56
  41268c:	sahf   
  41268d:	cmp    BYTE PTR [ebp+0x31b90882],bh
  412693:	mov    dl,0x3
  412695:	je     0x41268b
  412697:	rcr    BYTE PTR [ebx],0xb4
  41269a:	jge    0x412653
  41269c:	fdivr  QWORD PTR [ebp-0x16]
  41269f:	jmp    0x412661
  4126a1:	cmp    esp,edi
  4126a3:	call   0x621a:0xab196ef3
  4126aa:	jbe    0x4126ec
  4126ac:	outs   dx,DWORD PTR ds:[esi]
  4126ad:	mov    DWORD PTR [ebp-0x53],esi
  4126b0:	(bad)  
  4126b1:	iret   
  4126b2:	pmullw mm0,QWORD PTR [esi]
  4126b5:	xchg   ecx,eax
  4126b6:	fs push 0x3
  4126b9:	cmp    eax,0xdce670ff
  4126be:	lods   eax,DWORD PTR ds:[esi]
  4126bf:	adc    al,BYTE PTR [ebp+0x3a]
  4126c2:	sub    al,0x3c
  4126c4:	mov    eax,0x44e5c76b
  4126c9:	clc    
  4126ca:	adc    eax,0xe5c9f12a
  4126cf:	in     al,0xe1
  4126d1:	js     0x4126a3
  4126d3:	loopne 0x4126dd
  4126d5:	cld    
  4126d6:	sti    
  4126d7:	sub    al,al
  4126d9:	and    BYTE PTR [esi],0xd3
  4126dc:	or     bl,BYTE PTR [esp+ebx*8]
  4126df:	push   ebx
  4126e0:	sbb    DWORD PTR [edi+0x5a],edi
  4126e3:	aam    0xd0
  4126e5:	jg     0x412744
  4126e7:	add    DWORD PTR [edx],0xa59a6c45
  4126ed:	out    0xb7,al
  4126ef:	pop    ds
  4126f0:	pushf  
  4126f1:	pop    DWORD PTR [eax+0x53]
  4126f4:	xchg   esp,eax
  4126f5:	and    ch,BYTE PTR [ebp+0xf]
  4126f8:	dec    esp
  4126f9:	mov    ds,ebx
  4126fb:	fstp   TBYTE PTR [ebx]
  4126fd:	retf   
  4126fe:	jb     0x412763
  412700:	pop    esi
  412701:	pop    eax
  412702:	in     al,dx
  412703:	cld    
  412704:	xchg   esi,eax
  412705:	jae    0x4126b8
  412707:	cld    
  412708:	fimul  DWORD PTR [ebx]
  41270a:	iret   
  41270b:	lahf   
  41270c:	cmp    ch,ah
  41270e:	aaa    
  41270f:	(bad)  
  412710:	xchg   esp,eax
  412711:	inc    BYTE PTR [edi+0x2d1e097b]
  412717:	adc    esp,edx
  412719:	lea    ebx,[edi-0x43]
  41271c:	call   0xb07a:0xc24f1361
  412723:	aad    0x62
  412725:	jg     0x41272c
  412727:	adc    al,0x53
  412729:	sqrtps xmm5,XMMWORD PTR [ebp-0x48]
  41272d:	mov    cl,bh
  41272f:	sbb    edx,DWORD PTR [ebp-0x27]
  412732:	imul   BYTE PTR [ebx]
  412734:	push   ebp
  412735:	sub    al,0x73
  412737:	lds    esp,FWORD PTR [ebx]
  412739:	or     ah,BYTE PTR [edi+0x6a]
  41273c:	xor    eax,0xa720f228
  412741:	hlt    
  412742:	push   0xe456d09c
  412747:	sbb    BYTE PTR [edx],ch
  412749:	adc    eax,0x2e38f437
  41274e:	outs   dx,DWORD PTR ds:[esi]
  41274f:	clc    
  412750:	inc    edx
  412751:	mov    ah,0xc3
  412753:	imul   ebp,DWORD PTR [edi],0xffffff80
  412756:	fwait
  412757:	cmp    ecx,DWORD PTR [ecx-0x259949c9]
  41275d:	pop    ss
  41275e:	inc    ecx
  41275f:	enter  0xb094,0xe3
  412763:	fsubr  st(2),st
  412765:	and    al,BYTE PTR [edi+0x580f22]
  41276b:	push   ebp
  41276c:	push   esi
  41276d:	(bad)  
  412770:	retf   0x43b3
  412773:	xchg   ebp,eax
  412774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412775:	iret   
  412776:	sub    dh,al
  412778:	pushf  
  412779:	loopne 0x4127db
  41277b:	test   DWORD PTR [eax+0x34],edx
  41277e:	and    eax,0x1a2a4cfc
  412783:	stos   DWORD PTR es:[edi],eax
  412784:	jae    0x412753
  412786:	pusha  
  412787:	mov    cl,0xfb
  412789:	shr    BYTE PTR [ebp+ebx*1+0x3e2837a3],1
  412790:	inc    edx
  412791:	pop    esi
  412792:	or     ebp,ebx
  412794:	jo     0x412738
  412796:	mov    DWORD PTR [ecx-0x13e7288b],ebx
  41279c:	xchg   ebp,eax
  41279d:	mov    cs,WORD PTR [edi]
  41279f:	aas    
  4127a0:	inc    edi
  4127a1:	ds push ebp
  4127a3:	cld    
  4127a4:	sbb    BYTE PTR [edx+0x2918469],dl
  4127aa:	adc    BYTE PTR [edi+0x21d63164],ah
  4127b0:	fsubr  QWORD PTR [edx]
  4127b2:	addr16 nop
  4127b4:	push   ds
  4127b5:	fstp   TBYTE PTR [ebp-0x37]
  4127b8:	repz jmp 0x1ca4ece3
  4127be:	and    BYTE PTR [ecx+0x78],bl
  4127c1:	addr16 add al,0x51
  4127c4:	outs   dx,DWORD PTR ds:[esi]
  4127c5:	sti    
  4127c6:	ret    0x9814
  4127c9:	les    eax,FWORD PTR [edi-0x79]
  4127cc:	sbb    eax,0x6465dd9d
  4127d1:	sub    BYTE PTR [edx+0x3c],al
  4127d4:	inc    ebp
  4127d5:	fcomp  DWORD PTR [ebx]
  4127d7:	xor    DWORD PTR [edi+0x42d0566d],eax
  4127dd:	scas   eax,DWORD PTR es:[edi]
  4127de:	inc    edi
  4127df:	xchg   esi,eax
  4127e0:	leave  
  4127e1:	test   eax,0x1f65d83c
  4127e6:	sub    eax,0x206dd14e
  4127eb:	add    esi,DWORD PTR [esi-0x4b]
  4127ee:	jae    0x412819
  4127f0:	xlat   BYTE PTR ds:[ebx]
  4127f1:	cs cwde 
  4127f3:	cs in  al,dx
  4127f5:	jge    0x412870
  4127f7:	loope  0x4127e4
  4127f9:	inc    edi
  4127fa:	push   eax
  4127fb:	jb     0x412780
  4127fd:	dec    edi
  4127fe:	dec    esp
  4127ff:	arpl   WORD PTR [edi+0x1f7bc6f0],ax
  412805:	xchg   ebx,eax
  412806:	adc    esp,DWORD PTR [ebx-0x54]
  412809:	xchg   edx,eax
  41280a:	dec    edx
  41280b:	dec    ecx
  41280c:	sub    bh,bl
  41280e:	add    eax,0x3681f7fe
  412813:	xlat   BYTE PTR ds:[ebx]
  412814:	ins    BYTE PTR es:[edi],dx
  412815:	xlat   BYTE PTR ds:[ebx]
  412816:	mov    edi,0x571e6e20
  41281b:	in     eax,0xcb
  41281d:	mov    al,ds:0x78e5ece2
  412822:	inc    esi
  412823:	or     dh,BYTE PTR [edi+0x59a512a0]
  412829:	dec    esp
  41282a:	leave  
  41282b:	xor    edi,DWORD PTR ds:[ecx-0x24]
  41282f:	popa   
  412830:	retf   0x9c9
  412833:	arpl   WORD PTR ds:0xba503cb1,sp
  412839:	fsub   QWORD PTR [ebx+ebx*8+0x497340f0]
  412840:	dec    ebx
  412841:	or     eax,0xb944e2d9
  412846:	or     ah,BYTE PTR [esi+ebx*8-0x63]
  41284a:	or     DWORD PTR [ecx],esi
  41284c:	dec    ecx
  41284d:	inc    ebp
  41284e:	jl     0x41286e
  412850:	sbb    BYTE PTR [ebx-0x42],dh
  412853:	das    
  412854:	in     eax,dx
  412855:	nop
  412856:	pop    eax
  412857:	sbb    eax,0xd7eeac8a
  41285c:	test   DWORD PTR ds:[ebp+esi*2-0x6b],0xc1d7e3a9
  412865:	arpl   WORD PTR [edx],si
  412867:	lds    esi,FWORD PTR [ebp-0x40]
  41286a:	iret   
  41286b:	cmp    BYTE PTR [edx+ebx*8-0x45],ch
  41286f:	and    eax,0x6b7864e8
  412874:	div    BYTE PTR [esi+edx*8+0x3]
  412878:	xchg   ebx,eax
  412879:	ret    0x8691
  41287c:	lods   eax,DWORD PTR ds:[esi]
  41287d:	sub    al,0xc0
  41287f:	lds    esi,FWORD PTR [ecx-0x4349ed2a]
  412885:	lock sub ah,BYTE PTR [esi-0x2c]
  412889:	mov    ecx,0x1922194a
  41288e:	xchg   edi,eax
  41288f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412890:	je     0x4128d5
  412892:	jae    0x41288b
  412894:	xchg   esi,eax
  412895:	jg     0x41289f
  412897:	daa    
  412898:	retf   
  412899:	xchg   edi,eax
  41289a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41289c:	idiv   ch
  41289e:	push   edi
  41289f:	cwde   
  4128a0:	and    eax,0xae8fca86
  4128a5:	test   bh,dh
  4128a7:	xor    ah,0xfd
  4128aa:	xchg   edi,eax
  4128ab:	add    DWORD PTR [esi-0x1d],ecx
  4128ae:	(bad)  
  4128af:	xor    ah,BYTE PTR [ebp-0x40]
  4128b2:	loop   0x412864
  4128b4:	xchg   esp,eax
  4128b5:	dec    edx
  4128b6:	and    al,0x2b
  4128b8:	sbb    edi,ecx
  4128ba:	aas    
  4128bb:	push   0xf1293985
  4128c0:	cld    
  4128c1:	repz mov bh,0xeb
  4128c4:	jmp    0x412857
  4128c6:	pop    ecx
  4128c7:	xchg   edi,eax
  4128c8:	rcr    BYTE PTR [ebp-0x44],0x58
  4128cc:	int    0xe9
  4128ce:	shl    edx,cl
  4128d0:	leave  
  4128d1:	or     DWORD PTR [edi-0x38],ebp
  4128d4:	mov    ebp,0xc4d9e5f8
  4128d9:	lods   eax,DWORD PTR ds:[esi]
  4128da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dc:	push   edi
  4128dd:	clc    
  4128de:	push   ss
  4128df:	sahf   
  4128e0:	push   esp
  4128e1:	outs   dx,DWORD PTR ds:[esi]
  4128e2:	mov    WORD PTR [ebp+0x4ad6829],cs
  4128e8:	mov    al,0x6e
  4128ea:	cli    
  4128eb:	add    al,0xba
  4128ed:	and    BYTE PTR [ebp-0x325e5ae8],ch
  4128f3:	sbb    esp,DWORD PTR ds:0x62bbef88
  4128f9:	lahf   
  4128fa:	cld    
  4128fb:	jno    0x4128d0
  4128fd:	jl     0x41294a
  4128ff:	cmp    eax,0x2d012c27
  412904:	dec    ebx
  412905:	fistp  DWORD PTR ds:0x43417292
  41290b:	push   es
  41290c:	mov    ds:0x4be079cc,eax
  412911:	aas    
  412912:	jae    0x412939
  412914:	mov    bh,0x95
  412916:	mov    ds:0xaf50310c,eax
  41291b:	sar    DWORD PTR [eax+0x253eaaf9],cl
  412921:	adc    ebp,0xffffffa8
  412924:	xchg   esi,eax
  412925:	sar    BYTE PTR [edx],0x9c
  412928:	mov    ch,BYTE PTR [eax+ebp*1+0x551236b7]
  41292f:	cdq    
  412930:	pop    ecx
  412931:	mov    ecx,DWORD PTR [esi+0x46]
  412934:	xor    BYTE PTR [edi],dh
  412936:	in     al,0x61
  412938:	ror    BYTE PTR [ebp+ebx*1-0x1c1bbe38],0xf0
  412940:	jg     0x412996
  412942:	jne    0x4128e6
  412944:	retf   
  412945:	out    dx,al
  412946:	adc    ebp,esp
  412948:	jnp    0x4129bf
  41294a:	mov    ch,0x16
  41294c:	dec    ebp
  41294d:	xor    edi,ebx
  41294f:	out    dx,eax
  412950:	inc    edi
  412951:	sub    BYTE PTR [ebp-0x3fc229f6],0x6d
  412958:	or     ah,BYTE PTR [esi-0x74e5c33c]
  41295e:	jmp    0xd0246289
  412963:	jmp    0x9ca6:0x5f015dbb
  41296a:	lds    ecx,FWORD PTR [edx]
  41296c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41296d:	in     al,0x7e
  41296f:	add    BYTE PTR [ecx],ah
  412971:	add    BYTE PTR [edi],0x7d
  412974:	jl     0x412911
  412976:	xlat   BYTE PTR ds:[ebx]
  412977:	js     0x412953
  412979:	xor    ebx,edx
  41297b:	xchg   ebp,eax
  41297c:	scas   eax,DWORD PTR es:[edi]
  41297d:	mov    al,0x37
  41297f:	dec    edx
  412980:	or     ebx,ebp
  412982:	mov    al,ds:0x21cde332
  412987:	mov    WORD PTR [eax+0x4705f16c],fs
  41298d:	leave  
  41298e:	call   0xff5c295d
  412993:	adc    bh,0x6a
  412996:	pusha  
  412997:	pop    esi
  412998:	sub    ecx,ecx
  41299a:	das    
  41299b:	fimul  DWORD PTR [ecx+0x65]
  41299e:	mul    DWORD PTR [edx]
  4129a0:	cmp    dl,al
  4129a2:	cmp    al,0x54
  4129a4:	add    edi,edi
  4129a6:	arpl   ax,dx
  4129a8:	(bad)  
  4129a9:	test   eax,0x86a66416
  4129ae:	scas   al,BYTE PTR es:[edi]
  4129af:	cmp    eax,ebx
  4129b1:	cmp    DWORD PTR [ecx],eax
  4129b3:	enter  0x3f0b,0x6
  4129b7:	je     0x4129f4
  4129b9:	mov    esi,0x886e63cc
  4129be:	imul   edx,DWORD PTR ds:0x833b84ab,0xffffffcf
  4129c5:	fst    QWORD PTR [ebx+eiz*8+0x5cb7eae7]
  4129cc:	shl    al,0xab
  4129cf:	ror    DWORD PTR [esi-0x723e215c],1
  4129d5:	pop    esi
  4129d6:	enter  0x8b43,0xa3
  4129da:	sub    eax,0x81f44902
  4129df:	cmp    eax,0xa379fc5d
  4129e4:	or     ebp,esp
  4129e6:	mul    BYTE PTR [ebp-0x27d3b34e]
  4129ec:	bound  eax,QWORD PTR [eax+0x612688cf]
  4129f2:	add    eax,0xfffffff7
  4129f5:	cmp    al,0x84
  4129f7:	pop    eax
  4129f8:	(bad)  
  4129f9:	pop    ecx
  4129fa:	sub    DWORD PTR [ecx-0x12ba7996],ebx
  412a00:	xchg   esp,eax
  412a01:	adc    DWORD PTR [ecx-0x16],ecx
  412a04:	(bad)  
  412a05:	and    eax,DWORD PTR [edx-0x17]
  412a08:	pop    edi
  412a09:	cld    
  412a0a:	test   DWORD PTR [ecx+0x6095a6eb],esp
  412a10:	dec    ebp
  412a11:	mov    cl,0xf0
  412a13:	popa   
  412a14:	xchg   esi,eax
  412a15:	dec    edx
  412a16:	ss dec edx
  412a18:	add    BYTE PTR ds:0xec97d2a9,0x7d
  412a1f:	cli    
  412a20:	or     cl,bl
  412a22:	fsubrp st(3),st
  412a24:	arpl   ax,bx
  412a26:	ja     0x4129a9
  412a28:	mov    esi,DWORD PTR [edx+eiz*8+0x22]
  412a2c:	xchg   BYTE PTR [edi-0x6b995dd1],ch
  412a32:	pop    esi
  412a33:	mov    al,0x85
  412a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a36:	or     DWORD PTR [edi],0xdc519238
  412a3c:	loopne 0x412a97
  412a3e:	lds    ebp,FWORD PTR [ecx+eiz*1+0x73b9dfbd]
  412a45:	xor    DWORD PTR [edi+0x59d7a74f],ebp
  412a4b:	fild   QWORD PTR [esi+0x3bcf530a]
  412a51:	or     ebx,DWORD PTR [edi+edx*2-0x25dfb394]
  412a58:	adc    al,BYTE PTR [esi+0x8]
  412a5b:	jg     0x412ac8
  412a5d:	shl    ch,cl
  412a5f:	add    ah,BYTE PTR [edx+0x7e17a247]
  412a65:	or     eax,0x1c296f50
  412a6a:	inc    eax
  412a6b:	les    ebx,FWORD PTR [ecx-0x3f]
  412a6e:	out    0x56,al
  412a70:	inc    ecx
  412a71:	std    
  412a72:	dec    ebx
  412a73:	push   es
  412a74:	cmc    
  412a75:	fistp  QWORD PTR ds:0xefbfe6f9
  412a7b:	sahf   
  412a7c:	lds    esi,FWORD PTR [ecx]
  412a7e:	test   bh,0x22
  412a81:	dec    ebx
  412a82:	dec    esi
  412a83:	or     al,0x7
  412a85:	add    al,0xa8
  412a87:	xchg   BYTE PTR [eax+0x7d75fe79],cl
  412a8d:	cmp    DWORD PTR [eax],edx
  412a8f:	sub    DWORD PTR [eax],edx
  412a91:	stos   DWORD PTR es:[edi],eax
  412a92:	std    
  412a93:	(bad)  
  412a95:	fmul   QWORD PTR [ebx]
  412a97:	gs jecxz 0x412ac4
  412a9a:	push   es
  412a9b:	xchg   ebp,eax
  412a9c:	and    DWORD PTR [ebp-0x5db16060],eax
  412aa2:	pushf  
  412aa3:	and    BYTE PTR [ecx+0x1],0xc7
  412aa7:	sbb    dh,bh
  412aa9:	adc    DWORD PTR [edx],ecx
  412aab:	fxch   st(3)
  412aad:	retw   0x6f6d
  412ab1:	stos   BYTE PTR es:[edi],al
  412ab2:	jbe    0x412adb
  412ab4:	cmp    eax,0xb69a524c
  412ab9:	fmul   st(2),st
  412abb:	ss ret 0x7d1b
  412abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ac0:	call   0xad9838c9
  412ac5:	mov    bl,0xf6
  412ac7:	cmc    
  412ac8:	jae    0x412a65
  412aca:	add    al,0xd1
  412acc:	jge    0x412ab7
  412ace:	ret    0x9bff
  412ad1:	ficomp DWORD PTR [ecx-0x56]
  412ad4:	fild   WORD PTR [eax]
  412ad6:	dec    edi
  412ad7:	pop    eax
  412ad8:	out    0xc0,al
  412ada:	lahf   
  412adb:	pop    ebx
  412adc:	imul   edx,ebx,0xffffffc7
  412adf:	jl     0x412aa7
  412ae1:	aad    0xf2
  412ae3:	or     ebp,eax
  412ae5:	xchg   ebx,ebp
  412ae7:	js     0x412b01
  412ae9:	add    al,dl
  412aeb:	inc    DWORD PTR [ecx-0x2e4c8dd4]
  412af1:	icebp  
  412af2:	sub    DWORD PTR [eax+edi*1+0x196ea134],eax
  412af9:	inc    eax
  412afa:	inc    edi
  412afb:	jge    0x412b3e
  412afd:	fcom   QWORD PTR [edi]
  412aff:	stos   DWORD PTR es:[edi],eax
  412b00:	in     al,0xb8
  412b02:	push   edi
  412b03:	mov    ch,0x7c
  412b05:	out    dx,al
  412b06:	out    0xd9,al
  412b08:	jb     0x412ac0
  412b0a:	add    cl,cl
  412b0c:	xor    BYTE PTR [edx+0x24590021],ah
  412b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b13:	or     al,0xc4
  412b15:	mov    eax,ds:0x17271054
  412b1a:	into   
  412b1b:	retf   
  412b1c:	pop    ebx
  412b1d:	or     DWORD PTR [edi],eax
  412b1f:	cmp    eax,0x864ec5b8
  412b24:	les    ebp,FWORD PTR [esi+0x2765e90b]
  412b2a:	xchg   edx,edx
  412b2c:	jo     0x412b34
  412b2e:	cld    
  412b2f:	push   ecx
  412b30:	add    DWORD PTR [eax],edx
  412b32:	int    0x2
  412b34:	adc    bh,BYTE PTR [ecx+0x2e]
  412b37:	outs   dx,BYTE PTR ds:[esi]
  412b38:	push   ds
  412b39:	adc    bh,BYTE PTR [ecx+0x23167085]
  412b3f:	std    
  412b40:	jp     0x412aca
  412b42:	jns    0x412b05
  412b44:	mov    dh,0x69
  412b46:	push   0x40f01c22
  412b4b:	cmp    DWORD PTR [edx],ebx
  412b4d:	mov    edx,0x41bac5c
  412b52:	add    DWORD PTR ds:0x93246344,0x29949192
  412b5c:	mov    esp,0x854a7296
  412b61:	inc    esp
  412b62:	push   ebp
  412b63:	push   ds
  412b64:	xor    eax,0x4952b96e
  412b69:	je     0x412b2d
  412b6b:	xchg   BYTE PTR [eax+0x7f],bh
  412b6e:	push   cs
  412b6f:	in     eax,0x51
  412b71:	adc    DWORD PTR ds:0xf3ef12c8,esp
  412b77:	mov    edx,DWORD PTR [esi]
  412b79:	or     ah,BYTE PTR [edx]
  412b7b:	mov    bh,0xa6
  412b7d:	sqrtps xmm5,XMMWORD PTR [ecx-0x2cdca582]
  412b84:	stos   DWORD PTR es:[edi],eax
  412b85:	mov    edi,0x777bcd4d
  412b8a:	mov    BYTE PTR [edi+edx*8-0x19e6fb7],bl
  412b91:	lea    ebp,[edx+0x3c]
  412b94:	add    BYTE PTR [edx],0x3
  412b97:	inc    esp
  412b98:	and    dl,cl
  412b9a:	dec    ebx
  412b9b:	push   cs
  412b9c:	hlt    
  412b9d:	or     DWORD PTR [ecx-0x788aaf1],ebx
  412ba3:	enter  0x9808,0x35
  412ba7:	mov    BYTE PTR [edx-0x4c58e90f],dl
  412bad:	xor    DWORD PTR [edi+0x20fcda88],ebp
  412bb3:	lock mov edx,0x591a8f5
  412bb9:	not    BYTE PTR [ecx+0x2d864bf8]
  412bbf:	popf   
  412bc0:	xchg   BYTE PTR [edx-0xf165351],al
  412bc6:	fisubr DWORD PTR [esi+0x15]
  412bc9:	jmp    0x412bda
  412bcb:	cvtpi2ps xmm6,QWORD PTR [edx]
  412bce:	mov    edi,0x222be530
  412bd3:	add    al,0xc
  412bd5:	shl    al,1
  412bd7:	jp     0x412c4f
  412bd9:	test   eax,esp
  412bdb:	(bad)  
  412bdc:	shl    edx,cl
  412bde:	popf   
  412bdf:	dec    bh
  412be1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412be2:	push   eax
  412be3:	in     eax,0xe0
  412be5:	scas   al,BYTE PTR es:[edi]
  412be6:	inc    eax
  412be7:	xchg   edx,eax
  412be8:	adc    dh,dh
  412bea:	ss mov ch,0xb3
  412bed:	fs xchg esp,eax
  412bef:	or     BYTE PTR [edx-0x32],ch
  412bf2:	outs   dx,DWORD PTR ds:[esi]
  412bf3:	rcl    bl,cl
  412bf5:	es sbb bl,dl
  412bf8:	jns    0x412bd3
  412bfa:	and    DWORD PTR [edx-0x17],ebp
  412bfd:	mov    esi,0x66be310d
  412c02:	add    dl,bh
  412c04:	pop    esi
  412c05:	xchg   DWORD PTR [ecx+0x7a],esi
  412c08:	mov    eax,ds:0xbefc30ef
  412c0d:	xor    eax,0xdae3492c
  412c12:	arpl   WORD PTR [eax+ebx*8+0x20],ax
  412c16:	mov    ebx,0x30bb3017
  412c1b:	fisubr DWORD PTR [edi]
  412c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c1e:	popa   
  412c1f:	sbb    eax,ebp
  412c21:	add    DWORD PTR [ebx],edi
  412c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c24:	jge    0x412bd7
  412c26:	adc    edi,ecx
  412c28:	pop    ebx
  412c29:	push   ebx
  412c2a:	cmp    bh,ch
  412c2c:	clc    
  412c2d:	(bad)  
  412c2e:	mov    ebx,0x3998a0af
  412c33:	test   al,cl
  412c35:	cmp    bh,ch
  412c37:	push   ebp
  412c38:	popf   
  412c39:	jmp    0x96cc:0xf84d0d16
  412c40:	int3   
  412c41:	shr    ch,cl
  412c43:	scas   eax,DWORD PTR es:[edi]
  412c44:	xchg   DWORD PTR [ebx],eax
  412c46:	into   
  412c47:	push   ebp
  412c48:	xlat   BYTE PTR ds:[ebx]
  412c49:	mov    es,WORD PTR [edx]
  412c4b:	mov    eax,0x9e8ccf52
  412c50:	frstor [edx-0x4c390409]
  412c56:	xor    esp,DWORD PTR [ebx]
  412c58:	retf   0xad3e
  412c5b:	and    al,0x3d
  412c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c5e:	popa   
  412c5f:	imul   edi,DWORD PTR [edx-0x2ca35cfe],0xde358eb3
  412c69:	hlt    
  412c6a:	pop    ebp
  412c6b:	cdq    
  412c6c:	mov    ds:0x256e943c,al
  412c71:	dec    esp
  412c72:	and    ch,BYTE PTR [ebx]
  412c74:	sub    dl,dl
  412c76:	cmp    cl,al
  412c78:	daa    
  412c79:	cmp    ebp,DWORD PTR [ebp-0x76]
  412c7c:	jmp    0x412c02
  412c7e:	mov    BYTE PTR [eax-0xcd6711f],ah
  412c84:	in     al,dx
  412c85:	aam    0x1d
  412c87:	push   ds
  412c88:	in     eax,0x39
  412c8a:	shl    DWORD PTR [edi],1
  412c8c:	out    0xbe,al
  412c8e:	jmp    DWORD PTR [edx]
  412c90:	cmp    eax,0xc18f1052
  412c95:	xchg   ebp,eax
  412c96:	out    0xc3,eax
  412c98:	add    eax,0xc1365da1
  412c9d:	cli    
  412c9e:	push   ss
  412c9f:	push   edx
  412ca0:	retf   
  412ca1:	data16 icebp 
  412ca3:	dec    ecx
  412ca4:	stc    
  412ca5:	push   ebp
  412ca7:	jecxz  0x412c2e
  412ca9:	inc    edi
  412caa:	mov    edi,0xfd59a881
  412caf:	dec    ebx
  412cb0:	std    
  412cb1:	add    BYTE PTR [ebx+esi*2],ch
  412cb4:	outs   dx,BYTE PTR ds:[esi]
  412cb5:	jmp    0x2e73:0x367755a6
  412cbc:	stos   DWORD PTR es:[edi],eax
  412cbd:	mov    dh,0xd7
  412cbf:	mov    DWORD PTR [edx-0x1b2f6e57],0xafde4f1
  412cc9:	mov    ah,0x19
  412ccb:	pop    ebx
  412ccc:	scas   eax,DWORD PTR es:[edi]
  412ccd:	imul   ebx,DWORD PTR [eax],0xf72142ea
  412cd3:	shl    BYTE PTR [esi-0x683a507b],0xc0
  412cda:	stc    
  412cdb:	xchg   esi,eax
  412cdc:	bound  eax,QWORD PTR [esi+0x232c6ddd]
  412ce2:	loop   0x412d4b
  412ce4:	pusha  
  412ce5:	or     eax,0xe26cf5f9
  412cea:	lock push ebp
  412cec:	pop    edi
  412ced:	and    DWORD PTR [esi+0x2],0x850d3c6f
  412cf4:	scas   eax,DWORD PTR es:[edi]
  412cf5:	cld    
  412cf6:	out    dx,eax
  412cf7:	adc    DWORD PTR [ecx+0x114a5c27],ebp
  412cfd:	mov    bl,0x5a
  412cff:	xchg   edx,eax
  412d00:	out    0x2,eax
  412d02:	xchg   esi,eax
  412d03:	jns    0x412d15
  412d05:	out    dx,al
  412d06:	fcom   DWORD PTR [ebx-0xde648e8]
  412d0c:	xchg   edi,eax
  412d0d:	pop    eax
  412d0e:	test   al,0xfa
  412d10:	rol    BYTE PTR [edi+0x67],1
  412d13:	(bad)  
  412d14:	mov    esi,0x655f603d
  412d19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d1a:	mov    ebx,0x5a9a1d8e
  412d1f:	imul   edi,DWORD PTR [ebp+0x61],0x62096511
  412d26:	repnz fucomip st,st(7)
  412d29:	add    DWORD PTR [edi+0x2b],0x3a
  412d2d:	aaa    
  412d2e:	adc    DWORD PTR [edx],esi
  412d30:	fs je  0x412d81
  412d33:	push   es
  412d34:	mov    cl,BYTE PTR [eax+0x564920d9]
  412d3a:	mov    fs,WORD PTR [edx]
  412d3c:	mov    bh,0xd4
  412d3e:	fcom   DWORD PTR [esi-0x5d]
  412d41:	jmp    0x9aae:0x998e6937
  412d48:	rdpmc  
  412d4a:	or     ecx,eax
  412d4c:	(bad)  
  412d4d:	mov    edi,0x33207c52
  412d52:	pop    ebx
  412d53:	retf   0x5730
  412d56:	cs inc BYTE PTR cs:[ebx+0x7788c25a]
  412d5e:	xor    ebx,DWORD PTR [edi]
  412d60:	scas   eax,DWORD PTR es:[edi]
  412d61:	pop    ss
  412d62:	add    eax,0x264b4cd4
  412d67:	out    0xbb,eax
  412d69:	sub    DWORD PTR [ecx+0x1f],eax
  412d6c:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  412d6e:	mov    dh,0x95
  412d70:	xchg   ebx,eax
  412d71:	xor    al,0x4b
  412d73:	push   es
  412d74:	push   ds
  412d75:	sbb    edx,edi
  412d77:	cmc    
  412d78:	fcmovnu st,st(5)
  412d7a:	mov    es,WORD PTR [eax]
  412d7c:	push   esi
  412d7d:	pushf  
  412d7e:	cmp    eax,0x48fe6b33
  412d83:	aad    0x4e
  412d85:	xchg   esi,eax
  412d86:	in     eax,dx
  412d87:	add    BYTE PTR [esi+0x4f240832],dh
  412d8d:	lahf   
  412d8e:	inc    edx
  412d8f:	popa   
  412d90:	push   0xffffffd6
  412d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d93:	lahf   
  412d94:	xor    al,0x1b
  412d96:	jbe    0x412d33
  412d98:	dec    edi
  412d99:	xor    bl,BYTE PTR [esi-0x2b]
  412d9c:	push   ss
  412d9d:	out    0xc3,eax
  412d9f:	push   esp
  412da0:	outs   dx,DWORD PTR ds:[esi]
  412da1:	and    eax,0x43c63780
  412da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412da7:	or     eax,0x5a4cdbbd
  412dac:	xchg   edx,eax
  412dad:	fist   DWORD PTR [esp+ebx*1]
  412db0:	or     al,0x8d
  412db2:	ror    BYTE PTR [edi-0x6b3f9a12],0x7b
  412db9:	mov    esi,0xce627a7
  412dbe:	fcmovb st,st(3)
  412dc0:	sub    DWORD PTR [ecx],0x5f1b476a
  412dc6:	js     0x412dd8
  412dc8:	push   esi
  412dc9:	cmc    
  412dca:	jbe    0x412d92
  412dcc:	mov    eax,DWORD PTR [ecx-0xd6f93a9]
  412dd2:	sub    ebp,DWORD PTR [edx-0x3e20314c]
  412dd8:	inc    ebx
  412dd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dda:	call   0xad6d:0x47857db3
  412de1:	lock gs cmp eax,0x7945e48a
  412de8:	mov    bh,0x5a
  412dea:	xor    eax,0x26aa81e8
  412def:	scas   eax,DWORD PTR es:[edi]
  412df0:	ficom  WORD PTR [edx+0x58]
  412df3:	pop    ds
  412df4:	mov    bl,0x7d
  412df6:	add    DWORD PTR [ecx-0x27a3b6c],ecx
  412dfc:	pop    edi
  412dfd:	pop    edi
  412dfe:	arpl   WORD PTR [ecx-0x162ec737],di
  412e04:	push   es
  412e05:	ficom  DWORD PTR [ebx-0x6e303efb]
  412e0b:	inc    ebp
  412e0c:	push   ebx
  412e0d:	cld    
  412e0e:	push   0xffffffa1
  412e10:	jnp    0x412d94
  412e12:	mov    bl,0x38
  412e14:	dec    ecx
  412e15:	mov    fs,WORD PTR [ecx]
  412e17:	xchg   ebp,eax
  412e18:	inc    esi
  412e19:	adc    dl,ch
  412e1b:	and    ebp,DWORD PTR [edx+0x75c439d4]
  412e21:	inc    eax
  412e22:	(bad)  
  412e23:	sti    
  412e24:	sti    
  412e25:	xor    al,0x2
  412e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e28:	es cmc 
  412e2a:	stc    
  412e2b:	sub    DWORD PTR [esi-0x4468bebf],ebp
  412e31:	add    eax,edx
  412e33:	mov    BYTE PTR [ecx],bl
  412e35:	js     0x412e36
  412e37:	fstp   QWORD PTR [ecx]
  412e39:	fs push 0xafba0c81
  412e3f:	pop    edx
  412e40:	mov    ebx,0x33e0f81d
  412e45:	sub    BYTE PTR [ebx],al
  412e47:	push   0x55
  412e49:	div    esp
  412e4b:	(bad)  
  412e4c:	pcmpgtd mm3,QWORD PTR [esp+edx*8]
  412e50:	(bad)  
  412e51:	ror    BYTE PTR [esi+0x3d],1
  412e54:	rcr    BYTE PTR [edi+0x1c],1
  412e57:	shl    BYTE PTR [eax-0x76],0x4e
  412e5b:	sub    esp,DWORD PTR [esi-0x7cc38753]
  412e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e62:	jns    0x412e55
  412e64:	fimul  WORD PTR [esp+ebx*2+0x6f3c02f]
  412e6b:	push   0x1a4c495
  412e70:	aas    
  412e71:	xor    esi,DWORD PTR [ecx-0x2fbd928d]
  412e77:	xor    BYTE PTR [esi+0x74],dl
  412e7a:	(bad)  
  412e7b:	imul   esi,ebp,0x3a
  412e7e:	data16 std 
  412e80:	cmp    cl,BYTE PTR [ecx+0x19d42aaf]
  412e86:	sbb    DWORD PTR [eax],esi
  412e88:	adc    BYTE PTR [eax],bh
  412e8a:	xchg   edx,eax
  412e8b:	add    DWORD PTR [esi],ebx
  412e8d:	mov    bh,0xd
  412e8f:	rcl    al,1
  412e91:	inc    edx
  412e92:	fldcw  WORD PTR [edx]
  412e94:	xlat   BYTE PTR ds:[ebx]
  412e95:	pop    ax
  412e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e98:	out    0x92,al
  412e9a:	push   ebp
  412e9b:	inc    esp
  412e9c:	pop    ss
  412e9d:	cs cs in eax,dx
  412ea0:	and    ebp,edx
  412ea2:	(bad)  
  412ea3:	popa   
  412ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ea5:	mov    eax,?
  412ea7:	or     BYTE PTR [edx+0x41],dl
  412eaa:	les    esi,FWORD PTR [eax]
  412eac:	scas   eax,DWORD PTR es:[edi]
  412ead:	cs in  eax,0x8f
  412eb0:	add    cl,BYTE PTR [edx+0x53]
  412eb3:	fadd   QWORD PTR [ecx-0x3a31229]
  412eb9:	scas   eax,DWORD PTR es:[edi]
  412eba:	xchg   esi,eax
  412ebb:	push   ebp
  412ebc:	sub    esp,DWORD PTR [edx]
  412ebe:	push   cs
  412ebf:	inc    ecx
  412ec0:	pop    es
  412ec1:	mov    eax,ds:0x972d679b
  412ec6:	call   0x9ef065fb
  412ecb:	leave  
  412ecc:	clc    
  412ecd:	in     eax,dx
  412ece:	es xchg esi,eax
  412ed0:	data16 sub BYTE PTR [ecx-0x27],0xe9
  412ed5:	mov    ah,0xd
  412ed7:	push   0xffffff98
  412ed9:	scas   eax,DWORD PTR es:[edi]
  412eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412edb:	push   eax
  412edc:	push   ds
  412edd:	pushf  
  412ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412edf:	cmp    eax,0xbb888cc2
  412ee4:	les    ebx,FWORD PTR [edx]
  412ee6:	scas   eax,DWORD PTR es:[edi]
  412ee7:	push   esi
  412ee8:	mov    bh,ch
  412eea:	fidivr WORD PTR [edi+0x1a]
  412eed:	and    DWORD PTR [edx-0x51],ecx
  412ef0:	outs   dx,DWORD PTR ds:[esi]
  412ef1:	mov    bl,0xe9
  412ef3:	mov    es,WORD PTR [edi]
  412ef5:	ins    DWORD PTR es:[edi],dx
  412ef6:	pop    ss
  412ef7:	xor    DWORD PTR [esi+0x7861603f],ebp
  412efd:	inc    ecx
  412efe:	cmp    BYTE PTR [ebx+0x7dd84800],ah
  412f04:	inc    eax
  412f05:	inc    edx
  412f06:	imul   ebp,DWORD PTR [ebx-0x2e923316],0xa2ed4030
  412f10:	int    0x49
  412f12:	or     eax,0xf4218a93
  412f17:	cdq    
  412f18:	inc    edi
  412f19:	add    cl,BYTE PTR [edi-0x34fbbe09]
  412f1f:	xor    ebp,DWORD PTR [esi]
  412f21:	add    eax,ecx
  412f23:	les    ax,DWORD PTR ds:0xbcd44532
  412f2a:	jmp    0x14ea:0x735d162a
  412f31:	ficomp DWORD PTR ds:0x3ea6c95c
  412f37:	mov    ebx,0xa2bfb1b7
  412f3c:	sub    bl,BYTE PTR [ebx+ebx*8-0x1e2bf952]
  412f43:	(bad)  
  412f44:	mov    edi,0xa9e56f02
  412f49:	je     0x412ee1
  412f4b:	dec    edi
  412f4c:	jecxz  0x412f44
  412f4e:	mov    WORD PTR [eax],cs
  412f50:	adc    DWORD PTR [ebx],ecx
  412f52:	pusha  
  412f53:	dec    eax
  412f54:	mov    ah,0xc1
  412f56:	xchg   esi,eax
  412f57:	jno    0x412f83
  412f59:	mov    ds:0xddd63563,eax
  412f5e:	inc    ebp
  412f5f:	outs   dx,BYTE PTR ds:[esi]
  412f60:	arpl   WORD PTR [edi+0x729b8146],ax
  412f66:	neg    BYTE PTR [esi-0x24]
  412f69:	mov    ecx,0x52984038
  412f6e:	mov    fs,WORD PTR [edi]
  412f70:	add    BYTE PTR [ecx-0x2a],al
  412f73:	xchg   esp,eax
  412f74:	xor    BYTE PTR [edi+edi*2+0x6dc20cf5],ch
  412f7b:	mov    ebp,ebx
  412f7d:	loopne 0x412f7a
  412f7f:	iret   
  412f80:	loopne 0x412fcc
  412f82:	lahf   
  412f83:	jge    0x412fb6
  412f85:	scas   eax,DWORD PTR es:[edi]
  412f86:	fistp  QWORD PTR [esi+0xca44b18]
  412f8c:	sbb    eax,0xe8b84848
  412f91:	gs aas 
  412f93:	cli    
  412f94:	mov    al,0x7a
  412f96:	push   cs
  412f97:	retf   0x7298
  412f9a:	or     esi,ebx
  412f9c:	pop    esi
  412f9d:	inc    esi
  412f9e:	mov    esi,0xeae8eca1
  412fa3:	test   edi,eax
  412fa5:	adc    edx,DWORD PTR [ecx-0x2d77e685]
  412fab:	clc    
  412fac:	mov    dh,0xff
  412fae:	mov    al,ds:0xccff2ea4
  412fb3:	dec    eax
  412fb4:	cld    
  412fb5:	inc    ebx
  412fb6:	xchg   edx,eax
  412fb7:	les    eax,FWORD PTR [edx+0x42]
  412fba:	sub    DWORD PTR [esi],edi
  412fbc:	imul   ecx,DWORD PTR [eax-0x2766a914],0x30975fac
  412fc6:	sbb    al,BYTE PTR [edi+eax*2+0x78]
  412fca:	pop    edx
  412fcb:	aas    
  412fcc:	inc    esi
  412fcd:	add    DWORD PTR [ebx],eax
  412fcf:	repnz pop esi
  412fd1:	xchg   esp,eax
  412fd2:	mov    ecx,DWORD PTR [edx-0x3342d35b]
  412fd8:	mov    ah,0x83
  412fda:	(bad)  
  412fdb:	faddp  st(5),st
  412fdd:	out    0x4e,al
  412fdf:	add    dl,BYTE PTR [ecx]
  412fe1:	cwde   
  412fe2:	test   DWORD PTR [ecx-0x76ce0214],0xb6bfe5c6
  412fec:	fdivr  QWORD PTR [ebx+0x40d9bfe4]
  412ff2:	push   ebx
  412ff3:	icebp  
  412ff4:	jg     0x412fd9
  412ff6:	sub    al,0x54
  412ff8:	inc    ecx
  412ff9:	push   esp
  412ffa:	and    edx,ebp
  412ffc:	sti    
  412ffd:	aam    0xf7
  412fff:	je     0x412f99
  413001:	sar    BYTE PTR [ebx+0x37e46821],0x43
  413008:	mov    WORD PTR [esi+0x2c],es
  41300b:	imul   ebx,DWORD PTR [edx-0x6c],0xfffffffd
  41300f:	fsubrp st(7),st
  413011:	cld    
  413012:	(bad)
  413016:	frstor [ebx-0x22]
  413019:	clc    
  41301a:	imul   edi,DWORD PTR [edi],0x22
  41301d:	ja     0x412fbb
  41301f:	icebp  
  413020:	pop    edx
  413021:	sbb    esi,ebx
  413023:	neg    DWORD PTR [ebx+0x6ee49ced]
  413029:	rcl    BYTE PTR [edx-0x5d63f7a3],1
  41302f:	fadd   DWORD PTR [edx]
  413031:	pop    es
  413032:	stos   BYTE PTR es:[edi],al
  413033:	cld    
  413034:	dec    edx
  413035:	sub    eax,0xe1d3fc5a
  41303a:	fisttp WORD PTR [eax-0x45]
  41303d:	push   eax
  41303e:	jmp    0x585:0xd8220250
  413045:	dec    esi
  413046:	dec    esi
  413047:	cmp    ch,BYTE PTR [ecx]
  413049:	shr    DWORD PTR [esi],1
  41304b:	mov    esi,0xc6c8f4bc
  413050:	test   eax,0x6ba19a94
  413055:	mov    ch,0x23
  413057:	iret   
  413058:	dec    edi
  413059:	add    DWORD PTR [ecx-0x698b4f3a],0xf2a0941a
  413063:	icebp  
  413064:	stos   BYTE PTR es:[edi],al
  413065:	sbb    al,0x1
  413067:	xor    BYTE PTR [ebx+0x2c],cl
  41306a:	repz imul BYTE PTR fs:0x8402f309
  413072:	inc    eax
  413073:	icebp  
  413074:	sub    al,0x74
  413076:	sub    al,0xd9
  413078:	test   DWORD PTR [ebx+eiz*2-0x56f9d064],ecx
  41307f:	cli    
  413080:	jl     0x413021
  413082:	cmp    BYTE PTR [edx+0x1b],bh
  413085:	inc    esi
  413086:	mov    al,0xf6
  413088:	and    eax,esp
  41308a:	xchg   ebp,eax
  41308b:	(bad)  
  41308c:	jmp    0xaaea:0xdc126762
  413093:	lods   al,BYTE PTR ds:[si]
  413095:	mov    eax,ds:0x34e4143c
  41309a:	mov    eax,ds:0x70ad3a
  41309f:	repnz hlt 
  4130a1:	and    ch,BYTE PTR [edx-0x442782fd]
  4130a7:	dec    edi
  4130a8:	clc    
  4130a9:	fs int3 
  4130ab:	arpl   sp,si
  4130ad:	arpl   WORD PTR [ecx-0x2d],bx
  4130b0:	and    BYTE PTR [edx],bl
  4130b2:	lea    edi,[ecx+0x75]
  4130b5:	mov    WORD PTR [edi+eiz*4-0x7c43c66c],cs
  4130bc:	adc    eax,0xe9be1f84
  4130c1:	inc    ebp
  4130c2:	(bad)
  4130c6:	dec    ecx
  4130c7:	cdq    
  4130c8:	xor    BYTE PTR [eax],al
  4130ca:	mov    gs,WORD PTR [ebx+ebx*2-0x52972f00]
  4130d1:	xchg   ebx,eax
  4130d2:	in     eax,0x3f
  4130d4:	xchg   edx,eax
  4130d5:	jle    0x41314e
  4130d7:	xchg   ecx,eax
  4130d8:	xchg   edx,eax
  4130d9:	test   BYTE PTR [edx],dh
  4130db:	mov    eax,ds:0x7b7a2ea6
  4130e0:	bnd jge 0x413150
  4130e3:	pop    ebx
  4130e4:	xchg   esp,eax
  4130e5:	jo     0x413099
  4130e7:	(bad)  
  4130e8:	adc    eax,0x252acc9
  4130ed:	pop    edx
  4130ee:	cs popa 
  4130f0:	and    DWORD PTR ds:0x11fbcd7d,edx
  4130f6:	mov    bh,0xaf
  4130f8:	addr16 pop ebp
  4130fa:	call   DWORD PTR [edx]
  4130fc:	aaa    
  4130fd:	popf   
  4130fe:	jp     0x413151
  413100:	push   edi
  413101:	sbb    al,BYTE PTR [ecx]
  413103:	jmp    0xedb:0xacfe4b38
  41310a:	jbe    0x4130c4
  41310c:	push   esp
  41310d:	mov    al,0x13
  41310f:	ret    0x233d
  413112:	into   
  413113:	jbe    0x4130e2
  413115:	dec    ebp
  413116:	jp     0x4130ed
  413118:	mov    bl,0xfa
  41311a:	inc    esp
  41311b:	pop    edx
  41311c:	js     0x4130f0
  41311e:	mov    bl,dh
  413120:	mov    al,dh
  413122:	pop    ebx
  413123:	xor    BYTE PTR [edi+ebp*1-0x58],bl
  413127:	fisttp QWORD PTR [ecx-0x7fd42ad2]
  41312d:	inc    ecx
  41312e:	add    eax,0x2113e883
  413133:	add    DWORD PTR [edx],edx
  413135:	dec    ebp
  413136:	es (bad) 
  413138:	call   0x1adf1a81
  41313d:	aad    0xf5
  41313f:	repz or al,0x5c
  413142:	xchg   edi,eax
  413143:	retf   
  413144:	jnp    0x4130dc
  413146:	jg     0x413177
  413148:	retf   
  413149:	ins    DWORD PTR es:[edi],dx
  41314a:	lahf   
  41314b:	adc    DWORD PTR ds:0x61684ca,edi
  413151:	les    esi,FWORD PTR [edx+0xc4be22]
  413157:	fadd   DWORD PTR [ebx-0x3e27ee27]
  41315d:	fucomip st,st(6)
  41315f:	hlt    
  413160:	in     eax,0x65
  413162:	es jmp 0x4131a8
  413165:	and    eax,0x9e6485b
  41316a:	inc    ebx
  41316b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41316c:	mov    ebx,0x3443fab4
  413171:	pop    ebp
  413172:	mov    WORD PTR [eax],ds
  413174:	nop
  413175:	jb     0x413196
  413177:	lods   al,BYTE PTR ds:[esi]
  413178:	shl    DWORD PTR [eax+0x7a31de1c],cl
  41317e:	ins    BYTE PTR es:[edi],dx
  41317f:	test   al,0x9b
  413181:	fsubp  st(1),st
  413183:	sub    eax,0x3fbcd876
  413188:	pop    es
  413189:	stos   BYTE PTR es:[edi],al
  41318a:	push   0xffffffd5
  41318c:	(bad)
  41318f:	sbb    esi,DWORD PTR [ebx]
  413191:	sub    ebx,eax
  413193:	sub    dl,BYTE PTR ds:0x48be41a5
  413199:	adc    dl,cl
  41319b:	ret    0x2465
  41319e:	or     al,BYTE PTR [esi]
  4131a0:	adc    al,0x79
  4131a2:	mov    esp,0xfd9e016e
  4131a7:	loop   0x413143
  4131a9:	adc    ecx,ecx
  4131ab:	and    BYTE PTR [esi-0x11],0x25
  4131af:	adc    al,BYTE PTR [esi+ebp*2-0x40]
  4131b3:	ror    BYTE PTR [ebp-0x2f24007d],cl
  4131b9:	inc    ebx
  4131ba:	mov    al,ds:0xb6134bf7
  4131bf:	cmp    ebx,edx
  4131c1:	inc    ecx
  4131c2:	mov    edx,DWORD PTR [eax+0x754aa552]
  4131c8:	in     al,0xa7
  4131ca:	jb     0x41320d
  4131cc:	push   0x16a0a777
  4131d1:	inc    edi
  4131d2:	mov    ebx,0x5a3d34e9
  4131d7:	test   al,0x5e
  4131d9:	sbb    bh,BYTE PTR [edx-0x8]
  4131dc:	in     eax,dx
  4131dd:	jmp    0x38a8:0xff38735
  4131e4:	ret    0x9bc1
  4131e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131e8:	pop    ebp
  4131e9:	xchg   ebx,eax
  4131ea:	or     al,0x9
  4131ec:	add    al,al
  4131ee:	repnz push esi
  4131f0:	dec    esi
  4131f1:	dec    edi
  4131f2:	xchg   esp,eax
  4131f3:	push   cs
  4131f4:	bound  esi,QWORD PTR [ebp-0x19]
  4131f7:	das    
  4131f8:	leave  
  4131f9:	loopne 0x413259
  4131fb:	jmp    0x41084c32
  413200:	or     ebp,DWORD PTR [ecx+ecx*2]
  413203:	hlt    
  413204:	loopne 0x413256
  413206:	mov    al,0xbb
  413208:	das    
  413209:	pop    ebp
  41320a:	sub    ebx,esi
  41320c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41320d:	jbe    0x4131ea
  41320f:	push   esi
  413210:	or     edx,edi
  413212:	nop
  413213:	rcl    BYTE PTR [ebx+0x681fadfc],0xe4
  41321a:	stos   DWORD PTR es:[edi],eax
  41321b:	inc    ebx
  41321c:	sub    dl,bh
  41321e:	cmp    BYTE PTR [esi+0x2b],ah
  413221:	jl     0x4131fc
  413223:	dec    ebp
  413224:	shr    DWORD PTR [esp+ebx*8-0x596ba3a3],cl
  41322b:	mov    cl,0x1a
  41322d:	in     eax,dx
  41322e:	adc    ch,BYTE PTR [esi-0x436a1dba]
  413234:	mov    ds:0x78638cdf,eax
  413239:	pop    ecx
  41323a:	ja     0x413213
  41323c:	sar    DWORD PTR [ebx+0x6c0c742],1
  413242:	and    al,0x1e
  413244:	adc    BYTE PTR [ebx+0x544ddbef],dl
  41324a:	cmp    al,0x2c
  41324c:	dec    ebx
  41324d:	sbb    eax,0x138a42fa
  413252:	sbb    eax,0x2ec16af5
  413257:	xchg   ebx,eax
  413258:	xchg   ebx,eax
  413259:	(bad)  
  41325a:	jl     0x413217
  41325c:	pop    ecx
  41325d:	push   ss
  41325e:	int3   
  41325f:	ret    0x7a70
  413262:	push   eax
  413263:	dec    eax
  413264:	mov    edi,DWORD PTR [eax]
  413266:	xchg   ecx,eax
  413267:	xchg   esi,eax
  413268:	test   al,0xb3
  41326a:	add    BYTE PTR [ebp+0x1dc0cc85],0x9e
  413271:	shr    DWORD PTR [ecx],0xdb
  413274:	rcl    esi,1
  413276:	mov    ch,BYTE PTR [eax]
  413278:	and    eax,0x1cccfc21
  41327d:	and    dh,bh
  41327f:	repnz sub ecx,edi
  413282:	loop   0x4132d8
  413284:	dec    esp
  413285:	fsub   QWORD PTR [eax+0x1f5b439b]
  41328b:	pusha  
  41328c:	jne    0x4132fd
  41328e:	or     al,BYTE PTR [esi+0x424284e8]
  413294:	fimul  WORD PTR [ebp+0x562fd7ed]
  41329a:	mov    ebp,0x39e2ebad
  41329f:	fstp   DWORD PTR [edi-0x2066076a]
  4132a5:	adc    al,0x20
  4132a7:	push   cs
  4132a8:	pop    eax
  4132a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132aa:	xor    DWORD PTR [edi],ecx
  4132ac:	jnp    0x4132c4
  4132ae:	ror    BYTE PTR [esi],cl
  4132b0:	mov    dh,0x30
  4132b2:	jle    0x4132ad
  4132b4:	inc    edx
  4132b5:	jo     0x413272
  4132b7:	mov    esp,0xe5311a33
  4132bc:	sbb    DWORD PTR [ebp+0x5d801c55],ecx
  4132c2:	repnz mov edi,0xb9e11da2
  4132c8:	xor    ah,cl
  4132ca:	xor    esp,edx
  4132cc:	push   ebp
  4132cd:	mov    ebp,0x6f287e92
  4132d2:	cmp    ch,bh
  4132d4:	sbb    BYTE PTR [ebp+ebp*4+0x7aa0ddd8],0x88
  4132dc:	out    0xfc,al
  4132de:	(bad)  
  4132df:	pop    edx
  4132e0:	or     edx,edx
  4132e2:	(bad)  
  4132e3:	mov    eax,ds:0xbd93580a
  4132e8:	mov    ecx,0xe1e09e57
  4132ed:	aad    0x43
  4132ef:	or     ch,dl
  4132f1:	jmp    0x4fa99ae6
  4132f6:	cmp    ch,BYTE PTR [esi]
  4132f8:	or     eax,0xaaf44c24
  4132fd:	popf   
  4132fe:	add    bh,BYTE PTR [esi+0x7c]
  413301:	or     ah,bl
  413303:	fisubr WORD PTR [edx+0x32321ad0]
  413309:	mov    dl,0xb7
  41330b:	add    cl,BYTE PTR [ebx+0x2c1cd3b6]
  413311:	ins    DWORD PTR es:[edi],dx
  413312:	loope  0x413345
  413314:	mov    dh,0x2c
  413316:	loop   0x4132f7
  413318:	retf   
  413319:	xor    BYTE PTR [ebx+0x43],bl
  41331c:	fdivr  QWORD PTR ss:[ebx]
  41331f:	mov    WORD PTR [edi+eiz*2+0x73],cs
  413323:	mov    ecx,0x637c2056
  413328:	imul   ecx,DWORD PTR [ecx-0x41],0xa9994084
  41332f:	mov    DWORD PTR [ecx],0xb8fd5b6c
  413335:	fsubp  st(3),st
  413337:	rcl    BYTE PTR [esi],0x93
  41333a:	or     DWORD PTR [ebx-0x31],esi
  41333d:	add    edx,DWORD PTR [ecx+edi*2]
  413340:	loop   0x413342
  413342:	push   eax
  413343:	mov    WORD PTR [esi+0x492947d8],ss
  413349:	repnz or BYTE PTR [edi+0x6a],al
  41334d:	pop    ecx
  41334e:	vandps xmm7,xmm1,XMMWORD PTR ds:0xe2b0a21
  413357:	fdivr  QWORD PTR [ecx-0x2a095794]
  41335d:	pop    eax
  41335e:	in     eax,dx
  41335f:	call   DWORD PTR [ecx-0x1f]
  413362:	jnp    0x413364
  413364:	jl     0x413308
  413366:	lods   eax,DWORD PTR ds:[esi]
  413367:	xor    BYTE PTR [edi-0x36],bh
  41336a:	and    ah,cl
  41336c:	or     esp,DWORD PTR [eax-0x62d71dd8]
  413372:	push   ds
  413373:	leave  
  413374:	sbb    DWORD PTR [ebp+0xe],0x21
  413378:	fcom   DWORD PTR [edx]
  41337a:	test   BYTE PTR [ebx+0x61],cl
  41337d:	outs   dx,BYTE PTR ds:[esi]
  41337e:	mov    ?,WORD PTR ss:[ecx-0x68fcb8dd]
  413385:	xor    al,0x58
  413387:	iret   
  413388:	dec    edx
  413389:	push   es
  41338a:	lock adc BYTE PTR [eax+0x732404b4],dl
  413391:	stc    
  413392:	loop   0x4133f2
  413394:	fdivrp st(0),st
  413396:	ret    
  413397:	adc    eax,ebp
  413399:	xor    bh,BYTE PTR [esi]
  41339b:	jno    0x413339
  41339d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41339e:	shld   DWORD PTR [ebp-0x3153b3b7],esi,0xcd
  4133a6:	test   BYTE PTR [edi+0xa1b5397],al
  4133ac:	dec    esp
  4133ad:	(bad)  
  4133af:	add    BYTE PTR [ecx-0x4fe72633],al
  4133b5:	adc    DWORD PTR [ecx-0x5c],eax
  4133b8:	push   edi
  4133b9:	aam    0x75
  4133bb:	jb     0x41334b
  4133bd:	shr    DWORD PTR [esp+edi*8-0x7f50afdc],cl
  4133c4:	sbb    BYTE PTR [edx+0x25],dl
  4133c7:	les    ebx,FWORD PTR [ebp-0x58d6d10c]
  4133cd:	mov    ebx,0x2599568f
  4133d2:	push   ebp
  4133d3:	jl     0x4133f2
  4133d5:	loopne 0x413405
  4133d7:	pop    ax
  4133d9:	push   eax
  4133da:	sub    DWORD PTR [ecx],ebx
  4133dc:	std    
  4133dd:	xor    bh,BYTE PTR [ebx+edi*1]
  4133e0:	adc    edi,edx
  4133e2:	jbe    0x4133c1
  4133e4:	data16 sbb bh,BYTE PTR [edi]
  4133e7:	fst    QWORD PTR [edx-0x3e805270]
  4133ed:	cli    
  4133ee:	xchg   esp,eax
  4133ef:	xor    esi,edi
  4133f1:	push   edx
  4133f2:	ret    0xefe5
  4133f5:	adc    eax,0x1709d3a7
  4133fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133fb:	repz sbb DWORD PTR [esi-0x4e54a90a],edi
  413402:	dec    edi
  413403:	loop   0x4133a4
  413405:	xor    ch,dl
  413407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413408:	push   0x23b0febb
  41340d:	pop    ecx
  41340e:	fidiv  WORD PTR [edx]
  413410:	ins    DWORD PTR es:[edi],dx
  413411:	popf   
  413412:	and    al,0x96
  413414:	jmp    0x51b6:0x292994f3
  41341b:	pop    ecx
  41341c:	xchg   ebp,eax
  41341d:	dec    esi
  41341e:	sbb    dl,0x7e
  413421:	fcmove st,st(6)
  413423:	into   
  413424:	aaa    
  413425:	(bad)  
  413426:	xchg   edx,eax
  413427:	dec    ebp
  413428:	ficomp WORD PTR [ecx+edx*8]
  41342b:	inc    edi
  41342c:	icebp  
  41342d:	out    dx,eax
  41342e:	add    esi,edx
  413430:	mov    al,ds:0x27390658
  413435:	push   ebx
  413436:	and    BYTE PTR [edi-0x75],0x84
  41343a:	adc    eax,0x50facd25
  41343f:	dec    edx
  413440:	ror    BYTE PTR ds:0x84028ea8,0xa5
  413447:	retf   
  413448:	push   ds
  413449:	cmp    edi,DWORD PTR [esi-0x947f693]
  41344f:	pop    es
  413450:	mov    dl,0x3d
  413452:	mov    ds,WORD PTR [ecx-0x73]
  413455:	ret    
  413456:	aas    
  413457:	(bad)  
  413458:	loopne 0x413447
  41345a:	mov    ecx,0xe3b618dd
  41345f:	mov    bl,0x3a
  413461:	stos   DWORD PTR es:[edi],eax
  413462:	cwde   
  413463:	sbb    ah,BYTE PTR [ecx]
  413465:	je     0x413426
  413467:	sub    al,0xaa
  413469:	icebp  
  41346a:	pop    ds
  41346b:	ins    BYTE PTR es:[edi],dx
  41346c:	mov    dl,BYTE PTR [edx]
  41346e:	dec    edi
  41346f:	(bad)
  413472:	pop    DWORD PTR [eax]
  413474:	cld    
  413475:	shl    DWORD PTR ds:0x5b918bb9,1
  41347b:	inc    ecx
  41347c:	inc    edi
  41347d:	das    
  41347e:	lea    esp,[ebp+0x6e08915f]
  413484:	fnstcw WORD PTR [ebx+0x531b0f8c]
  41348a:	dec    edi
  41348b:	sub    BYTE PTR [edx+0x11],0xb7
  41348f:	das    
  413490:	cmp    dl,BYTE PTR [edi-0x2b1c08f2]
  413496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413497:	fwait
  413498:	in     al,0xf6
  41349a:	sub    cl,dl
  41349c:	push   esi
  41349d:	rcr    edx,cl
  41349f:	pop    eax
  4134a0:	push   0x3f6b0f99
  4134a5:	(bad)  
  4134a7:	shl    DWORD PTR [ebx-0x2da23cb4],0xe9
  4134ae:	or     BYTE PTR [ecx-0x35277efa],al
  4134b4:	call   DWORD PTR [edx+0x59]
  4134b7:	(bad)  [eax+ebp*8]
  4134ba:	dec    edx
  4134bb:	inc    eax
  4134bc:	repz push es
  4134be:	inc    ebx
  4134bf:	adc    dh,BYTE PTR [ebp-0x3f]
  4134c2:	dec    edi
  4134c3:	add    eax,0x1718776
  4134c8:	mov    DWORD PTR [ecx+0x5a],edi
  4134cb:	sbb    BYTE PTR [edi],bl
  4134cd:	mov    dh,0x22
  4134cf:	and    BYTE PTR [ebp+0x230cdd1d],bl
  4134d5:	int    0x91
  4134d7:	rep ins BYTE PTR es:[edi],dx
  4134d9:	lock dec edi
  4134db:	in     eax,0x9f
  4134dd:	scas   al,BYTE PTR es:[edi]
  4134de:	cld    
  4134df:	jp     0x41355f
  4134e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134e2:	outs   dx,BYTE PTR ds:[esi]
  4134e3:	jns    0x413493
  4134e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134e6:	and    al,0x56
  4134e8:	in     eax,dx
  4134e9:	push   ebx
  4134ea:	ds gs int3 
  4134ed:	cmp    al,0xd7
  4134ef:	fisttp WORD PTR [edx+0x2451d3c0]
  4134f5:	push   ebp
  4134f6:	ja     0x4134f2
  4134f8:	mov    ds:0x8b195b33,eax
  4134fd:	test   eax,0xc22416cf
  413502:	clc    
  413503:	aam    0x9e
  413505:	je     0x413546
  413507:	clc    
  413508:	arpl   WORD PTR [ebp-0x2b],bx
  41350b:	sub    eax,0x141d9a61
  413510:	mov    al,ds:0x7af32cd2
  413515:	push   edi
  413516:	jns    0x41350f
  413518:	mov    dh,0x6a
  41351a:	pop    ds
  41351b:	sbb    esi,ecx
  41351d:	jl     0x413584
  41351f:	popf   
  413520:	xor    al,0xe8
  413522:	jl     0x413563
  413524:	dec    edx
  413525:	std    
  413526:	shl    DWORD PTR [ecx-0x16],0xd
  41352a:	mov    DWORD PTR [ebp-0x15],ebp
  41352d:	je     0x41355a
  41352f:	jnp    0x4134b4
  413531:	addr16 dec edx
  413533:	push   ebx
  413534:	push   eax
  413535:	icebp  
  413536:	xchg   esi,eax
  413537:	sub    eax,0x21e71162
  41353c:	not    BYTE PTR [edi-0x38]
  41353f:	xor    eax,0xcd0aef53
  413544:	scas   al,BYTE PTR es:[edi]
  413545:	mov    edi,0x65cd56a
  41354a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41354b:	mov    al,ds:0x4d0d3cc3
  413550:	sti    
  413551:	sbb    DWORD PTR [ebx+0x7e],esp
  413554:	inc    esi
  413555:	es loop 0x4135af
  413558:	jmp    0xa472e602
  41355d:	pop    ds
  41355e:	fidiv  WORD PTR [esi+0x200fb72d]
  413564:	mov    DWORD PTR [eax-0x15],eax
  413567:	sahf   
  413568:	mov    bl,0x3f
  41356a:	sub    cl,BYTE PTR ds:0x7b67ad93
  413570:	in     eax,0xe4
  413572:	fld    st(0)
  413574:	jle    0x41350b
  413576:	cmp    al,0x91
  413578:	adc    dh,bh
  41357a:	and    BYTE PTR [ecx+0x40],bl
  41357d:	sub    bh,BYTE PTR [ecx-0x4e]
  413580:	out    dx,al
  413581:	mov    al,ds:0x64b868cc
  413586:	scas   al,BYTE PTR es:[edi]
  413587:	lahf   
  413588:	in     al,0x2c
  41358a:	mov    eax,ds:0xef17d3bb
  41358f:	int    0xda
  413591:	pop    ecx
  413592:	mov    edx,0xecbf1169
  413597:	push   0xffffff91
  413599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41359a:	dec    edi
  41359b:	lea    eax,[ecx+0x28]
  41359e:	add    dh,BYTE PTR [ecx]
  4135a0:	xchg   BYTE PTR [ebp-0x28],dl
  4135a3:	imul   edi,DWORD PTR [ecx-0x28],0xfffffff6
  4135a7:	sub    eax,0xa5b5ed6a
  4135ac:	inc    ebx
  4135ad:	sbb    eax,0xab1c940a
  4135b2:	fwait
  4135b3:	scas   al,BYTE PTR es:[edi]
  4135b4:	and    DWORD PTR [edx-0x1d],edi
  4135b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135b8:	fst    DWORD PTR ds:0xb5829c82
  4135be:	xchg   DWORD PTR ds:0xe8548e64,eax
  4135c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135c5:	mov    DWORD PTR [ebx+0x63],esi
  4135c8:	fisttp DWORD PTR [ebx]
  4135ca:	jle    0x413572
  4135cc:	in     eax,0x9a
  4135ce:	pop    eax
  4135cf:	ret    
  4135d0:	out    dx,eax
  4135d1:	mov    al,0x7f
  4135d3:	les    esi,FWORD PTR [edi-0x3a]
  4135d6:	xlat   BYTE PTR ds:[ebx]
  4135d7:	cwde   
  4135d8:	xor    al,0x7c
  4135da:	(bad)  
  4135db:	lock nop
  4135dd:	jmp    0x4135b4
  4135df:	ror    DWORD PTR [edx],cl
  4135e1:	popf   
  4135e2:	ja     0x41358c
  4135e4:	xchg   esp,eax
  4135e5:	mov    ecx,0x440ded95
  4135ea:	mov    esi,0x8a967376
  4135ef:	push   cs
  4135f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135f1:	fcmovnu st,st(6)
  4135f3:	popa   
  4135f4:	loopne 0x4135b7
  4135f6:	mul    DWORD PTR [ecx+0x7ec6b7cd]
  4135fc:	sub    al,0xe7
  4135fe:	adc    al,0x80
  413600:	dec    esp
  413601:	cmp    BYTE PTR [edx],al
  413603:	mov    esp,0x87d2d087
  413608:	ins    BYTE PTR es:[edi],dx
  413609:	int3   
  41360a:	lea    eax,[ebx-0x1470dc37]
  413610:	mov    dl,0xc3
  413612:	ffreep st(6)
  413614:	mov    edx,0x3b415588
  413619:	test   eax,0x811e568a
  41361e:	scas   eax,DWORD PTR es:[edi]
  41361f:	stc    
  413620:	rcr    bh,1
  413622:	xor    eax,0x665aad9
  413627:	arpl   WORD PTR [edi+0x5e437b94],di
  41362d:	add    ecx,esp
  41362f:	xor    DWORD PTR [eax],ebp
  413631:	add    eax,0x8a605f55
  413636:	jno    0x413607
  413638:	sub    bl,dh
  41363a:	jbe    0x413699
  41363c:	lahf   
  41363d:	mov    DWORD PTR [ecx],esi
  41363f:	into   
  413640:	lds    edx,FWORD PTR [eax+0x7f325e69]
  413646:	test   al,0x87
  413648:	sbb    eax,0x31946346
  41364d:	cs dec edx
  41364f:	push   ebp
  413650:	repnz mov ds:0x1fff5653,al
  413656:	mov    ch,0x41
  413658:	add    bh,BYTE PTR ds:0x42c95f11
  41365e:	arpl   WORD PTR [ebx],ax
  413660:	(bad)  
  413661:	jmp    0x4136fe
  413666:	mov    edi,DWORD PTR ds:0x432010
  41366c:	or     edi,DWORD PTR ds:0x43101c
  413672:	mov    DWORD PTR ds:0x432010,edi
  413678:	mov    edi,DWORD PTR [ebp+0x8]
  41367b:	xor    ecx,0x33c4
  413681:	mov    ecx,0x8a8e
  413686:	sub    DWORD PTR ds:0x42f018,0x431000
  413690:	xor    cx,WORD PTR [edi+edx*4+0x2]
  413695:	movzx  edi,WORD PTR ds:0x431008
  41369c:	or     edi,DWORD PTR ds:0x43201c
  4136a2:	mov    DWORD PTR ds:0x431008,edi
  4136a8:	mov    edi,0x3b52
  4136ad:	xor    DWORD PTR ds:0x42f014,0x42e00c
  4136b7:	add    cx,di
  4136ba:	add    DWORD PTR ds:0x42e008,0x7149
  4136c4:	movzx  ecx,cx
  4136c7:	mov    DWORD PTR [ebp-0xc],ecx
  4136ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4136cd:	movzx  ecx,WORD PTR [ecx+edx*4]
  4136d1:	sbb    DWORD PTR ds:0x42f00c,0x431000
  4136db:	xor    ecx,0x8a8e
  4136e1:	sbb    DWORD PTR ds:0x432010,0x432000
  4136eb:	add    ecx,edi
  4136ed:	mov    edi,DWORD PTR [ebp-0xc]
  4136f0:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  4136f7:	mov    ecx,DWORD PTR ds:0x42f004
  4136fd:	inc    edx
  4136fe:	mov    ecx,DWORD PTR [ebp-0x10]
  413701:	cmp    edx,ecx
  413703:	mov    DWORD PTR ds:0x430010,0x10d
  41370d:	jne    0x413666
  413713:	mov    ecx,DWORD PTR [ebp-0x18]
  413716:	mov    edx,DWORD PTR [ebp+0x10]
  413719:	or     DWORD PTR ds:0x430000,0x4712
  413723:	xor    ecx,eax
  413725:	and    DWORD PTR ds:0x42f004,0x0
  41372f:	jmp    0x413743
  413734:	xor    edi,edi
  413736:	add    edi,DWORD PTR ds:0x42f004
  41373c:	inc    edi
  41373d:	mov    DWORD PTR ds:0x42f004,edi
  413743:	cmp    DWORD PTR ds:0x42f004,0x13
  41374a:	jae    0x413796
  413750:	cmp    DWORD PTR ds:0x42f004,0xc
  413757:	jbe    0x413796
  41375d:	jmp    0x413777
  413762:	push   0x7f36
  413767:	push   0x430004
  41376c:	push   0x6180
  413771:	call   DWORD PTR ds:0x4348ff
  413777:	cmp    DWORD PTR ds:0x42f004,0xb
  41377e:	jne    0x413791
  413784:	mov    edi,DWORD PTR ds:0x42f004
  41378a:	inc    edi
  41378b:	mov    DWORD PTR ds:0x42f004,edi
  413791:	jmp    0x413734
  413796:	add    ecx,esi
  413798:	dec    edi
  413799:	mov    DWORD PTR [edx],ecx
  41379b:	mov    ecx,DWORD PTR [ebp-0x18]
  41379e:	xor    DWORD PTR ds:0x430000,ecx
  4137a4:	xor    ecx,eax
  4137a6:	sub    edi,0x1615
  4137ac:	add    ecx,esi
  4137ae:	mov    DWORD PTR [ebp-0xc],ecx
  4137b1:	mov    edi,DWORD PTR ds:0x432008
  4137b7:	add    DWORD PTR ds:0x42e014,edi
  4137bd:	mov    DWORD PTR [ebp+0x8],0xf89c8581
  4137c4:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  4137cb:	mov    DWORD PTR [ebp-0x10],0xf89c9581
  4137d2:	xor    DWORD PTR ds:0x432010,edx
  4137d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4137db:	xor    DWORD PTR ds:0x432000,edi
  4137e1:	mov    DWORD PTR [ebp+0x8],ecx
  4137e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4137e7:	adc    DWORD PTR ds:0x43001c,0x42e01c
  4137f1:	xor    ecx,eax
  4137f3:	add    ecx,esi
  4137f5:	mov    ecx,0x242ebed
  4137fa:	mov    DWORD PTR ds:0x42f01c,0x2580
  413804:	mov    edi,0xf641bf2
  413809:	je     0x41ab5c
  41380f:	and    DWORD PTR ds:0x432014,0x57c2
  413819:	mov    edx,DWORD PTR [ebp+0x8]
  41381c:	adc    ebx,0x6e0a
  413822:	mov    ebx,DWORD PTR [ebp-0x8]
  413825:	xor    edx,eax
  413827:	or     DWORD PTR ds:0x42e020,0x11fc
  413831:	xor    ebx,eax
  413833:	adc    DWORD PTR ds:0x430010,0x2848
  41383d:	sub    edx,ebx
  41383f:	sbb    DWORD PTR ds:0x431010,0x4ed3
  413849:	sub    edx,esi
  41384b:	adc    ebx,DWORD PTR ds:0x431018
  413851:	xor    edx,eax
  413853:	mov    DWORD PTR [ebp+0x8],edx
  413856:	mov    edx,DWORD PTR [ebp+0x8]
  413859:	mov    ebx,DWORD PTR [ebp-0x58]
  41385c:	sub    DWORD PTR ds:0x42e018,0xd4c
  413866:	add    edx,0x5708c0
  41386c:	imul   edx,ebx
  41386f:	and    DWORD PTR ds:0x432010,0x0
  413879:	jmp    0x41388b
  41387e:	mov    ebx,DWORD PTR ds:0x432010
  413884:	inc    ebx
  413885:	mov    DWORD PTR ds:0x432010,ebx
  41388b:	cmp    DWORD PTR ds:0x432010,0x16
  413892:	jae    0x4138bd
  413898:	cmp    DWORD PTR ds:0x432010,0x20
  41389f:	jg     0x4138bd
  4138a5:	jmp    0x4138b8
  4138aa:	push   0x58a4
  4138af:	push   DWORD PTR [ebp-0x10]
  4138b2:	call   DWORD PTR ds:0x4348d7
  4138b8:	jmp    0x41387e
  4138bd:	mov    DWORD PTR [ebp-0x58],edx
  4138c0:	movzx  ebx,BYTE PTR ds:0x42f01c
  4138c7:	sbb    ebx,DWORD PTR ds:0x42e018
  4138cd:	mov    DWORD PTR ds:0x42f01c,ebx
  4138d3:	mov    edx,DWORD PTR [ebp+0x8]
  4138d6:	and    DWORD PTR ds:0x430014,0x0
  4138e0:	mov    ebx,DWORD PTR ds:0x430014
  4138e6:	inc    ebx
  4138e7:	mov    DWORD PTR ds:0x430014,ebx
  4138ed:	cmp    DWORD PTR ds:0x430014,0xc
  4138f4:	ja     0x41392c
  4138fa:	jmp    0x413905
  4138ff:	call   DWORD PTR ds:0x43490b
  413905:	cmp    DWORD PTR ds:0x430014,0xb
  41390c:	jne    0x41391f
  413912:	mov    ebx,DWORD PTR ds:0x430014
  413918:	inc    ebx
  413919:	mov    DWORD PTR ds:0x430014,ebx
  41391f:	cmp    DWORD PTR ds:0x430014,0x19
  413926:	jb     0x4138e0
  41392c:	mov    ebx,DWORD PTR [ebp-0x54]
  41392f:	xor    DWORD PTR ds:0x42e01c,0x42f010
  413939:	add    edx,0x64f8a2
  41393f:	or     edx,ebx
  413941:	dec    ebx
  413942:	mov    DWORD PTR [ebp-0x54],edx
  413945:	mov    edx,DWORD PTR [ebp+0x8]
  413948:	mov    ebx,DWORD PTR [ebp-0x50]
  41394b:	add    edx,ecx
  41394d:	not    DWORD PTR ds:0x42e018
  413953:	xor    edx,ebx
  413955:	mov    DWORD PTR [ebp-0x50],edx
  413958:	xor    ebx,ebx
  41395a:	add    ebx,DWORD PTR ds:0x41d072
  413960:	xor    edx,edx
  413962:	or     edx,DWORD PTR ds:0x41d092
  413968:	sub    ebx,edx
  41396a:	imul   ebx,DWORD PTR [ebx+edx*1]
  41396e:	mov    edx,DWORD PTR [ebp+0x8]
  413971:	mov    ebx,DWORD PTR [ebp-0x4c]
  413974:	or     DWORD PTR ds:0x42e024,0x7bc8
  41397e:	add    edx,edi
  413980:	and    edx,ebx
  413982:	adc    DWORD PTR ds:0x432000,ecx
  413988:	mov    DWORD PTR [ebp-0x4c],edx
  41398b:	mov    edx,DWORD PTR [ebp+0x8]
  41398e:	add    DWORD PTR ds:0x431000,ebx
  413994:	mov    ebx,DWORD PTR [ebp-0x48]
  413997:	add    DWORD PTR ds:0x431004,0x3491
  4139a1:	lea    edx,[ebx+edx*1+0x241fc1f]
  4139a8:	mov    DWORD PTR [ebp-0x48],edx
  4139ab:	mov    DWORD PTR ds:0x42e020,0x13
  4139b5:	cmp    DWORD PTR ds:0x42e020,0x0
  4139bc:	je     0x413a09
  4139c2:	cmp    DWORD PTR ds:0x42e020,0x5
  4139c9:	jl     0x413a09
  4139cf:	jmp    0x4139dd
  4139d4:	push   DWORD PTR [ebp-0x10]
  4139d7:	call   DWORD PTR ds:0x43490f
  4139dd:	cmp    DWORD PTR ds:0x42e020,0x6
  4139e4:	jne    0x4139f7
  4139ea:	mov    ebx,DWORD PTR ds:0x42e020
  4139f0:	dec    ebx
  4139f1:	mov    DWORD PTR ds:0x42e020,ebx
  4139f7:	mov    ebx,DWORD PTR ds:0x42e020
  4139fd:	dec    ebx
  4139fe:	mov    DWORD PTR ds:0x42e020,ebx
  413a04:	jmp    0x4139b5
  413a09:	mov    edx,DWORD PTR [ebp+0x8]
  413a0c:	xor    ebx,DWORD PTR ds:0x42e018
  413a12:	mov    ebx,0xfa5e15e2
  413a17:	sub    DWORD PTR ds:0x42e028,0x60ce
  413a21:	sub    ebx,edx
  413a23:	add    ebx,DWORD PTR [ebp-0x44]
  413a26:	mov    DWORD PTR ds:0x43100c,0x16
  413a30:	cmp    DWORD PTR ds:0x43100c,0x0
  413a37:	je     0x413a8b
  413a3d:	cmp    DWORD PTR ds:0x43100c,0xc
  413a44:	ja     0x413a8b
  413a4a:	jmp    0x413a5f
  413a4f:	push   0x434082
  413a54:	push   0x400000
  413a59:	call   DWORD PTR ds:0x434917
  413a5f:	cmp    DWORD PTR ds:0x43100c,0xd
  413a66:	jne    0x413a79
  413a6c:	mov    edx,DWORD PTR ds:0x43100c
  413a72:	dec    edx
  413a73:	mov    DWORD PTR ds:0x43100c,edx
  413a79:	mov    edx,DWORD PTR ds:0x43100c
  413a7f:	dec    edx
  413a80:	mov    DWORD PTR ds:0x43100c,edx
  413a86:	jmp    0x413a30
  413a8b:	mov    DWORD PTR [ebp-0x44],ebx
  413a8e:	movzx  edx,BYTE PTR ds:0x431018
  413a95:	or     DWORD PTR ds:0x42e01c,edx
  413a9b:	mov    edx,DWORD PTR [ebp+0x8]
  413a9e:	xor    edx,eax
  413aa0:	or     DWORD PTR ds:0x42e00c,0x432004
  413aaa:	add    edx,esi
  413aac:	mov    DWORD PTR ds:0x43000c,0x316a
  413ab6:	jne    0x41380f
  413abc:	mov    DWORD PTR ds:0x431010,0x2279
  413ac6:	jmp    0x41ab5c
  413acb:	and    DWORD PTR ds:0x43100c,0x0
  413ad5:	mov    edx,DWORD PTR ds:0x43100c
  413adb:	inc    edx
  413adc:	mov    DWORD PTR ds:0x43100c,edx
  413ae2:	cmp    DWORD PTR ds:0x43100c,0x11
  413ae9:	jle    0x413b2d
  413aef:	jmp    0x413b04
  413af4:	push   0x80c1
  413af9:	push   0x8496
  413afe:	call   DWORD PTR ds:0x43491b
  413b04:	cmp    DWORD PTR ds:0x43100c,0x10
  413b0b:	jne    0x413b20
  413b11:	xor    edx,edx
  413b13:	or     edx,DWORD PTR ds:0x43100c
  413b19:	inc    edx
  413b1a:	mov    DWORD PTR ds:0x43100c,edx
  413b20:	cmp    DWORD PTR ds:0x43100c,0x1c
  413b27:	jb     0x413ad5
  413b2d:	mov    edx,DWORD PTR [ebp-0xc]
  413b30:	movzx  ebx,BYTE PTR ds:0x43201c
  413b37:	xor    DWORD PTR ds:0x42e00c,ebx
  413b3d:	sub    edx,esi
  413b3f:	sbb    DWORD PTR ds:0x42f014,ecx
  413b45:	xor    edx,eax
  413b47:	neg    ebx
  413b49:	mov    DWORD PTR [ebp-0x5c],edx
  413b4c:	mov    ebx,DWORD PTR ds:0x41d0b2
  413b52:	mov    ebx,DWORD PTR [ebx]
  413b54:	sbb    DWORD PTR ds:0x43100c,ebx
  413b5a:	mov    edx,DWORD PTR [ebp-0x10]
  413b5d:	mov    DWORD PTR ds:0x432008,0x14
  413b67:	cmp    DWORD PTR ds:0x432008,0x0
  413b6e:	je     0x413ba3
  413b74:	cmp    DWORD PTR ds:0x432008,0x19
  413b7b:	jb     0x413ba3
  413b81:	jmp    0x413b91
  413b86:	push   0x434009
  413b8b:	call   DWORD PTR ds:0x43491f
  413b91:	mov    ebx,DWORD PTR ds:0x432008
  413b97:	dec    ebx
  413b98:	mov    DWORD PTR ds:0x432008,ebx
  413b9e:	jmp    0x413b67
  413ba3:	mov    ebx,DWORD PTR [ebp-0x8]
  413ba6:	xor    edx,eax
  413ba8:	adc    DWORD PTR ds:0x430000,0x6f74
  413bb2:	xor    ebx,eax
  413bb4:	sub    edx,ebx
  413bb6:	xor    DWORD PTR ds:0x43000c,0x3be
  413bc0:	sub    edx,esi
  413bc2:	adc    DWORD PTR ds:0x432018,0x6de5
  413bcc:	xor    edx,eax
  413bce:	mov    DWORD PTR ds:0x431008,0x236c
  413bd8:	mov    DWORD PTR [ebp-0x10],edx
  413bdb:	not    edx
  413bdd:	mov    edx,DWORD PTR [ebp-0x14]
  413be0:	mov    DWORD PTR [ebp+0x8],edx
  413be3:	mov    DWORD PTR ds:0x431014,0x5696
  413bed:	jmp    0x4161ca
  413bf2:	mov    edx,DWORD PTR [ebp+0x8]
  413bf5:	and    DWORD PTR ds:0x42f014,0x0
  413bff:	jmp    0x413c13
  413c04:	xor    ebx,ebx
  413c06:	or     ebx,DWORD PTR ds:0x42f014
  413c0c:	inc    ebx
  413c0d:	mov    DWORD PTR ds:0x42f014,ebx
  413c13:	cmp    DWORD PTR ds:0x42f014,0x1e
  413c1a:	jae    0x413c50
  413c20:	cmp    DWORD PTR ds:0x42f014,0x2e
  413c27:	jb     0x413c50
  413c2d:	jmp    0x413c4b
  413c32:	push   DWORD PTR [ebp-0x10]
  413c35:	push   0x8926
  413c3a:	push   DWORD PTR [ebp-0x10]
  413c3d:	push   0x6bd5
  413c42:	push   DWORD PTR [ebp-0x10]
  413c45:	call   DWORD PTR ds:0x4348af
  413c4b:	jmp    0x413c04
  413c50:	mov    ebx,DWORD PTR [ebp-0x8]
  413c53:	xor    DWORD PTR ds:0x42e000,0x431018
  413c5d:	jmp    0x416018
  413c62:	fnstsw WORD PTR [esi+0x771bb57b]
  413c68:	mov    bl,0x96
  413c6a:	aam    0x9b
  413c6c:	aas    
  413c6d:	push   ebp
  413c6e:	push   0x4175c0bf
  413c73:	mov    dh,BYTE PTR [edx+0x72]
  413c76:	rcr    BYTE PTR [edi+0x72],1
  413c79:	jb     0x413c19
  413c7b:	je     0x413c63
  413c7d:	add    BYTE PTR [edx+0x29c5373e],al
  413c83:	sub    ebp,eax
  413c85:	sbb    BYTE PTR [edx+0x735a5d7f],ch
  413c8b:	shl    DWORD PTR [ecx+0x724546b7],cl
  413c91:	popf   
  413c92:	dec    ecx
  413c93:	cmp    eax,0x6fe2ef13
  413c98:	out    dx,eax
  413c99:	xor    dh,ah
  413c9b:	adc    al,0xd4
  413c9d:	adc    BYTE PTR [edx+0x1],cl
  413ca0:	lods   eax,DWORD PTR ds:[esi]
  413ca1:	and    eax,DWORD PTR [esi+0x70]
  413ca4:	adc    eax,0x1405d53f
  413ca9:	xchg   DWORD PTR [ebp+0x3a],esi
  413cac:	popa   
  413cad:	shr    DWORD PTR [ecx-0x74431db8],1
  413cb3:	add    edx,eax
  413cb5:	nop
  413cb6:	fidivr DWORD PTR [edi+0x50]
  413cb9:	mov    bl,0xa1
  413cbb:	je     0x413cc8
  413cbd:	lgs    eax,FWORD PTR [esi-0x5f2a3805]
  413cc4:	test   DWORD PTR [edx+0x51],ebx
  413cc7:	div    DWORD PTR [ecx]
  413cc9:	mov    bh,0x5c
  413ccb:	cmp    eax,0x2a4a8b28
  413cd0:	adc    esi,DWORD PTR [edx]
  413cd2:	adc    al,BYTE PTR [ebx]
  413cd4:	dec    ebx
  413cd5:	ins    BYTE PTR es:[edi],dx
  413cd6:	mov    ecx,0xad718bc6
  413cdb:	dec    ebp
  413cdc:	dec    ebx
  413cdd:	loopne 0x413d22
  413cdf:	inc    ebp
  413ce0:	sub    al,0xae
  413ce2:	mov    esi,DWORD PTR [esi-0x42e2a40c]
  413ce8:	xchg   ebp,eax
  413ce9:	pop    esp
  413cea:	xchg   esp,eax
  413ceb:	mov    edx,DWORD PTR [edx]
  413ced:	xor    BYTE PTR [edi+0x8],ch
  413cf0:	mov    ecx,0x3c435063
  413cf5:	sub    eax,0x4121f8b6
  413cfa:	loop   0x413d24
  413cfc:	outs   dx,DWORD PTR ds:[esi]
  413cfd:	push   es
  413cfe:	add    esi,DWORD PTR [edx+0x15]
  413d01:	and    eax,DWORD PTR [esp+eax*8+0xe175f44]
  413d08:	outs   dx,DWORD PTR ds:[esi]
  413d09:	and    esi,esi
  413d0b:	repz hlt 
  413d0d:	(bad)  
  413d0e:	mov    ebp,0x409a2b65
  413d13:	cmp    DWORD PTR [edx],0xffffffdd
  413d16:	(bad)  
  413d17:	cmp    dl,BYTE PTR [esi-0x31]
  413d1a:	cwde   
  413d1b:	fabs   
  413d1d:	cmc    
  413d1e:	dec    edi
  413d1f:	mov    ah,0x66
  413d21:	inc    ebp
  413d22:	test   dh,bh
  413d24:	push   eax
  413d25:	cmp    ch,BYTE PTR [esp+eax*1-0x1a40c3e4]
  413d2c:	sbb    BYTE PTR [edx],0xc8
  413d2f:	out    0x1b,al
  413d31:	mov    ah,0x6b
  413d33:	aad    0x65
  413d35:	fwait
  413d36:	js     0x413da4
  413d38:	(bad)  
  413d39:	jbe    0x413d69
  413d3b:	mov    edx,0xad5ad1a8
  413d40:	loop   0x413dba
  413d42:	pop    esi
  413d43:	dec    ebx
  413d44:	mov    ebp,esp
  413d46:	add    esi,DWORD PTR [eax]
  413d48:	out    0x46,eax
  413d4a:	cmp    al,0xe1
  413d4c:	mov    eax,eax
  413d4e:	sub    DWORD PTR [ebx],ebp
  413d50:	and    eax,0x47ea4376
  413d55:	es dec ebp
  413d57:	or     ch,cl
  413d59:	ret    
  413d5a:	jle    0x413d0f
  413d5c:	jge    0x413cfb
  413d5e:	mov    eax,0x2bae6f78
  413d63:	dec    ebx
  413d64:	scas   eax,DWORD PTR es:[edi]
  413d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d66:	xchg   edx,eax
  413d67:	or     ch,0xf
  413d6a:	mov    ds:0x3169a57a,eax
  413d6f:	repnz inc ebx
  413d71:	in     eax,0xe5
  413d73:	loope  0x413d5e
  413d75:	xchg   ebp,eax
  413d76:	loop   0x413d4c
  413d78:	outs   dx,DWORD PTR ds:[esi]
  413d79:	inc    ecx
  413d7a:	leave  
  413d7b:	sar    bh,cl
  413d7d:	js     0x413d08
  413d7f:	stc    
  413d80:	mov    ds:0x6bbed67a,al
  413d85:	(bad)  
  413d86:	sbb    BYTE PTR [ebx],ah
  413d88:	scas   eax,DWORD PTR es:[edi]
  413d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d8a:	inc    edi
  413d8b:	sub    ah,BYTE PTR [edx]
  413d8d:	fcomp  DWORD PTR [ecx+0x1c2694ef]
  413d93:	maxps  xmm4,XMMWORD PTR [ebp-0x2a]
  413d97:	xchg   DWORD PTR [eax],edi
  413d99:	and    eax,ebp
  413d9b:	inc    ax
  413d9d:	fidivr DWORD PTR [edi]
  413d9f:	mov    bh,0x4c
  413da1:	aaa    
  413da2:	fnsave [eax]
  413da4:	ds popf 
  413da6:	mov    DWORD PTR [ebx-0x216dd200],0xa65d3dbf
  413db0:	inc    esi
  413db1:	xor    esi,DWORD PTR [edi-0x5b94017e]
  413db7:	fcmovb st,st(2)
  413db9:	mul    DWORD PTR [esp+ebp*2+0x78]
  413dbd:	jl     0x413dc7
  413dbf:	cmp    BYTE PTR [eax],0x46
  413dc2:	push   esi
  413dc3:	jle    0x413dc9
  413dc5:	sbb    BYTE PTR [edx+0x2bf753c5],dl
  413dcb:	xor    DWORD PTR [ecx+eax*1-0x2a],ecx
  413dcf:	inc    edi
  413dd0:	dec    esi
  413dd1:	in     al,0x6e
  413dd3:	xor    al,0xd7
  413dd5:	ret    0x2339
  413dd8:	xlat   BYTE PTR ds:[ebx]
  413dd9:	adc    eax,DWORD PTR [edi+edx*8-0x5cb5e311]
  413de0:	jle    0x413dd0
  413de2:	cmp    al,0xff
  413de4:	cmp    BYTE PTR [ecx+0x3a],0x1a
  413de8:	xchg   esi,eax
  413de9:	fwait
  413dea:	scas   al,BYTE PTR es:[edi]
  413deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dec:	jae    0x413dcb
  413dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413def:	mov    DWORD PTR [ebp+0x1c],esi
  413df2:	xor    ecx,edx
  413df4:	sub    ebx,DWORD PTR [ebx+ecx*4-0x47]
  413df8:	add    ch,BYTE PTR [ebx]
  413dfa:	xchg   esp,eax
  413dfb:	sub    esi,DWORD PTR [edx]
  413dfd:	retf   0x2a03
  413e00:	sbb    dl,al
  413e02:	retf   0x4c5b
  413e05:	sub    al,0xec
  413e07:	shl    DWORD PTR [edi-0x16],0x79
  413e0b:	sub    edx,0xfffffffa
  413e0e:	mov    ecx,0x427a36f1
  413e13:	xchg   ecx,eax
  413e14:	adc    DWORD PTR ds:0x83668c65,esp
  413e1a:	or     dl,cl
  413e1c:	jecxz  0x413e64
  413e1e:	stos   BYTE PTR es:[edi],al
  413e1f:	mov    ebp,0xe66f02c5
  413e24:	push   esp
  413e25:	or     BYTE PTR [edx+0xe],cl
  413e28:	lea    ebp,[edi-0x4373beba]
  413e2e:	jg     0x413db7
  413e30:	ret    
  413e31:	sub    eax,0x8b939ad
  413e36:	in     eax,0xe1
  413e38:	cmp    dl,BYTE PTR [ecx+ecx*1-0x5a]
  413e3c:	sub    BYTE PTR [eax],bl
  413e3e:	sar    ebp,cl
  413e40:	stos   BYTE PTR es:[edi],al
  413e41:	mov    bh,0x90
  413e43:	add    BYTE PTR [edi-0x88ad8e],ch
  413e49:	dec    esi
  413e4a:	jbe    0x413e31
  413e4c:	mov    DWORD PTR [esi-0x36],edx
  413e4f:	fist   WORD PTR [edi-0x2deb01c4]
  413e55:	retf   
  413e56:	xchg   esp,eax
  413e57:	mov    ebx,ebx
  413e59:	mov    DWORD PTR [esi],ebx
  413e5b:	fsub   QWORD PTR [ecx-0x7a32bb75]
  413e61:	cli    
  413e62:	loop   0x413ec7
  413e64:	cmp    bh,0x7e
  413e67:	fbld   TBYTE PTR [edi]
  413e69:	lods   eax,DWORD PTR ds:[esi]
  413e6a:	or     esp,DWORD PTR [eax-0x4d]
  413e6d:	outs   dx,BYTE PTR ds:[esi]
  413e6e:	stc    
  413e6f:	fcmovnbe st,st(4)
  413e71:	daa    
  413e72:	jb     0x413e0d
  413e74:	cmp    eax,0xfb801309
  413e79:	jmp    0x2728:0x9b21f1f6
  413e80:	cli    
  413e81:	adc    edi,DWORD PTR [eax]
  413e83:	js     0x413ef7
  413e85:	push   esi
  413e86:	xchg   ebp,eax
  413e87:	xchg   ebx,eax
  413e88:	mov    al,ds:0x29630c44
  413e8d:	test   BYTE PTR [ecx],dl
  413e8f:	sahf   
  413e90:	call   0x74d0:0x7f25cda9
  413e97:	ja     0x413ed2
  413e99:	adc    BYTE PTR [ebx+eiz*2+0x268cda12],al
  413ea0:	mov    ch,0x72
  413ea2:	dec    esi
  413ea3:	mov    BYTE PTR [ecx+0x42147226],0x41
  413eaa:	imul   ebp,edi,0x4f
  413ead:	(bad)  
  413eae:	push   esi
  413eaf:	cmp    al,0xa4
  413eb1:	ror    ebx,1
  413eb3:	inc    esi
  413eb4:	inc    ebx
  413eb5:	repz mov esi,0xa24cc3d
  413ebb:	adc    DWORD PTR ds:0x7abdcc04,0x5c1cf0c4
  413ec5:	cmp    esp,DWORD PTR [ebp+0x7a]
  413ec8:	mov    eax,ds:0x7e21949d
  413ecd:	test   ch,ch
  413ecf:	jne    0x413e9b
  413ed1:	std    
  413ed2:	xor    bh,bh
  413ed4:	mov    ds:0x4181c4b7,al
  413ed9:	sahf   
  413eda:	or     BYTE PTR [esi+0x0],bl
  413edd:	mov    DWORD PTR [eax],ecx
  413edf:	xchg   edi,eax
  413ee0:	(bad)  
  413ee1:	rcl    dh,1
  413ee3:	sbb    eax,0xb2a6d6f6
  413ee8:	cs xchg esp,eax
  413eea:	fdiv   QWORD PTR [esi+0x46]
  413eed:	pop    ecx
  413eee:	cli    
  413eef:	xor    BYTE PTR [eax+0x68be71d2],dh
  413ef5:	push   0x4de4c702
  413efa:	xor    al,0xbf
  413efc:	sbb    ebx,esi
  413efe:	enter  0x149d,0xc6
  413f02:	xchg   esi,eax
  413f03:	xlat   BYTE PTR ds:[ebx]
  413f04:	add    eax,0x3556a391
  413f09:	(bad)  
  413f0a:	mov    DWORD PTR [ecx*4-0x6fbf9cf1],ebx
  413f11:	retf   0x1321
  413f14:	popa   
  413f15:	mov    ebp,0x929ab762
  413f1a:	pop    ds
  413f1b:	out    0xb3,eax
  413f1d:	cmp    eax,0x8122756
  413f22:	or     eax,0xf9c51f23
  413f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f28:	mov    WORD PTR [edi],?
  413f2a:	inc    esp
  413f2b:	dec    esp
  413f2c:	stos   BYTE PTR es:[edi],al
  413f2d:	fucomip st,st(6)
  413f2f:	imul   DWORD PTR [edi]
  413f31:	push   ss
  413f32:	mov    ds:0x24ee2414,al
  413f37:	mov    BYTE PTR [ebp+0x192c33fb],bh
  413f3d:	fwait
  413f3e:	mov    ds,ebp
  413f40:	leave  
  413f41:	fisttp DWORD PTR [eax+0x1190b5ff]
  413f47:	sbb    bh,BYTE PTR [ebx]
  413f49:	sub    eax,0xa930886d
  413f4e:	ret    
  413f4f:	pop    ecx
  413f50:	test   eax,0x7f0729ec
  413f55:	lock jle 0x413f8c
  413f58:	ins    BYTE PTR es:[edi],dx
  413f59:	repz and esp,DWORD PTR [ebp-0x7e]
  413f5d:	loop   0x413f48
  413f5f:	call   DWORD PTR [ebx+0x24f0d87d]
  413f65:	shr    BYTE PTR [edi+0x3e],1
  413f68:	sub    bh,dh
  413f6a:	push   ecx
  413f6b:	xchg   ebx,eax
  413f6c:	xchg   BYTE PTR [edi-0x5ebe8bc4],ah
  413f72:	(bad)  [edx+0x3a]
  413f75:	lods   eax,DWORD PTR ds:[esi]
  413f76:	int    0xd
  413f78:	rcr    ebx,0xec
  413f7b:	pusha  
  413f7c:	xlat   BYTE PTR ds:[ebx]
  413f7d:	iret   
  413f7e:	dec    edx
  413f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f80:	sub    al,0xe
  413f82:	mov    edi,0x7d4e7cc3
  413f87:	retf   
  413f88:	dec    ecx
  413f89:	lds    ebx,FWORD PTR [ebx+0x50]
  413f8c:	inc    ecx
  413f8d:	inc    esp
  413f8e:	leave  
  413f8f:	dec    esi
  413f90:	cs cli 
  413f92:	outs   dx,BYTE PTR ds:[esi]
  413f93:	inc    eax
  413f94:	gs dec eax
  413f96:	retf   
  413f97:	jnp    0x413fb8
  413f99:	ror    DWORD PTR ds:0x511f9ff3,0x7d
  413fa0:	neg    BYTE PTR [eax-0x335b3d9d]
  413fa6:	jae    0x413f5b
  413fa8:	mov    cl,0x83
  413faa:	xor    ch,BYTE PTR [eax+0x3c575804]
  413fb0:	mov    eax,0xc4a39c2
  413fb5:	cld    
  413fb6:	mov    edi,DWORD PTR [ecx-0x7eec60a4]
  413fbc:	jmp    0x413f41
  413fbe:	and    ah,ch
  413fc0:	scas   eax,DWORD PTR es:[edi]
  413fc1:	or     eax,0x4855d379
  413fc6:	ds mov dh,0xf6
  413fc9:	data16 sti 
  413fcb:	sbb    ch,BYTE PTR [esi]
  413fcd:	dec    eax
  413fce:	cld    
  413fcf:	xor    al,0x91
  413fd1:	mov    WORD PTR [edi+0x36],cs
  413fd4:	leave  
  413fd5:	in     eax,0x59
  413fd7:	stos   DWORD PTR es:[edi],eax
  413fd8:	jmp    0xbf7f26a
  413fdd:	mov    cl,BYTE PTR [esi]
  413fdf:	pop    ebp
  413fe0:	xchg   BYTE PTR [edi+ebp*4-0x6d247adb],dl
  413fe7:	pop    es
  413fe8:	add    al,0xfa
  413fea:	inc    esi
  413feb:	add    ecx,ebp
  413fed:	test   BYTE PTR [ebx-0xc24326d],bl
  413ff3:	and    BYTE PTR [esi],0x29
  413ff6:	pop    eax
  413ff7:	mov    cl,0x3c
  413ff9:	(bad)  
  413ffb:	xchg   edx,eax
  413ffc:	pop    esi
  413ffd:	(bad)  
  413fff:	mov    esi,0xf5c15e3d
  414004:	xor    edi,DWORD PTR [ebx-0x64]
  414007:	out    dx,al
  414008:	pushf  
  414009:	pop    edi
  41400a:	dec    DWORD PTR [ecx+edx*1+0x3c848075]
  414011:	cld    
  414012:	popa   
  414013:	jbe    0x414003
  414015:	ror    BYTE PTR [ebp-0x550dd72e],cl
  41401b:	xchg   esp,eax
  41401c:	xor    ecx,edx
  41401e:	push   edx
  41401f:	mov    ebx,0xa44e1a2f
  414024:	sub    BYTE PTR [edi-0x3831d716],dl
  41402a:	mov    WORD PTR [ebx-0x38],gs
  41402d:	sub    BYTE PTR [eax],dh
  41402f:	js     0x414086
  414031:	jp     0x414075
  414033:	pushaw 
  414035:	cmp    eax,0xd721d66a
  41403a:	or     edx,DWORD PTR [ecx-0x5c3cc672]
  414040:	cli    
  414041:	jb     0x4140ab
  414043:	xsaves [ebx-0x3a]
  414047:	call   0x5a76965f
  41404c:	push   ds
  41404d:	mov    ebp,0x7d750c1c
  414052:	xchg   ebp,eax
  414053:	sti    
  414054:	aaa    
  414055:	adc    ch,BYTE PTR [edi]
  414057:	aam    0x60
  414059:	in     eax,dx
  41405a:	xchg   ebx,eax
  41405b:	push   cs
  41405c:	pop    ss
  41405d:	dec    edi
  41405e:	shl    ch,0x32
  414061:	mov    ah,0x6c
  414063:	jbe    0x41408b
  414065:	sub    edx,DWORD PTR [edx]
  414067:	jbe    0x414043
  414069:	mov    esi,0x72099239
  41406e:	fmul   QWORD PTR [ecx-0x4b320079]
  414074:	sbb    al,0x70
  414076:	sub    eax,DWORD PTR [ecx+0x28]
  414079:	cmp    dh,ch
  41407b:	mov    WORD PTR [esi],?
  41407d:	sar    bh,0x0
  414080:	repz std 
  414082:	sub    dh,dh
  414084:	mov    ecx,0x7fdfc18e
  414089:	xchg   edx,eax
  41408a:	inc    esp
  41408b:	xor    eax,0x233bec50
  414090:	dec    esi
  414091:	xchg   esi,eax
  414092:	popa   
  414093:	push   esp
  414094:	icebp  
  414095:	das    
  414096:	mov    ebp,0x1c10d51e
  41409b:	mov    edx,0x72f26c3d
  4140a0:	inc    edx
  4140a1:	dec    esi
  4140a2:	ds sti 
  4140a4:	jge    0x414059
  4140a6:	adc    ebp,DWORD PTR [ebp-0x3ffe0172]
  4140ac:	xchg   edx,eax
  4140ad:	push   eax
  4140ae:	or     DWORD PTR [ecx+0x55],edx
  4140b1:	pop    ecx
  4140b2:	fmul   DWORD PTR [esi]
  4140b4:	(bad)  
  4140b5:	shr    DWORD PTR [ebp-0x128eb0b0],0xa0
  4140bc:	leave  
  4140bd:	imul   edx,DWORD PTR [esi+0x17],0xf1ffedc3
  4140c4:	test   DWORD PTR [esi-0x1a26ffac],esi
  4140ca:	mov    esi,0x8861af90
  4140cf:	std    
  4140d0:	jb     0x414087
  4140d2:	adc    BYTE PTR [ebp-0xc],bh
  4140d5:	test   DWORD PTR [edi-0x70],esp
  4140d8:	xchg   edi,eax
  4140d9:	mov    bh,0xfa
  4140db:	add    BYTE PTR [esi],cl
  4140dd:	shl    al,cl
  4140df:	cmp    al,0x8c
  4140e1:	jns    0x41411b
  4140e3:	dec    edx
  4140e4:	cmp    edi,0x58
  4140e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140e8:	ins    DWORD PTR es:[edi],dx
  4140e9:	pop    eax
  4140ea:	out    0xf5,al
  4140ec:	loope  0x4140cb
  4140ee:	or     al,BYTE PTR [esi+0xe79c5d8]
  4140f4:	addr16 hlt 
  4140f6:	cmp    al,0xe6
  4140f8:	inc    edx
  4140f9:	xlat   BYTE PTR ds:[ebx]
  4140fa:	rep lods al,BYTE PTR ds:[esi]
  4140fc:	fbstp  TBYTE PTR [edx]
  4140fe:	mov    ecx,0xd9b28e95
  414103:	push   cs
  414104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414105:	hlt    
  414106:	and    eax,0x3ec798f8
  41410b:	mov    ?,ebx
  41410d:	push   0x3
  41410f:	repz test BYTE PTR [ebp+0x17d22ac3],bh
  414116:	pop    esi
  414117:	mov    ds:0x2041fb53,eax
  41411c:	dec    esi
  41411d:	out    0xb2,eax
  41411f:	lahf   
  414120:	fsubp  st(4),st
  414122:	push   ds
  414123:	(bad)  
  414124:	and    eax,0x16de58f9
  414129:	ins    DWORD PTR es:[edi],dx
  41412a:	add    ebx,DWORD PTR [eax]
  41412c:	and    esi,DWORD PTR [edx-0x78]
  41412f:	xor    ecx,DWORD PTR [esi-0x157f0ef1]
  414135:	cmp    dl,BYTE PTR [ebx+0x206b9ac5]
  41413b:	jbe    0x414193
  41413d:	lahf   
  41413e:	push   edx
  41413f:	jne    0x4141b4
  414141:	lahf   
  414142:	push   esi
  414143:	jp     0x41417f
  414145:	lods   al,BYTE PTR ds:[esi]
  414146:	pusha  
  414147:	and    esi,DWORD PTR [eax+esi*8+0x2c]
  41414b:	pop    edx
  41414d:	pop    ds
  41414e:	lahf   
  41414f:	int3   
  414150:	hlt    
  414151:	xchg   esp,eax
  414152:	test   al,0x57
  414154:	hlt    
  414155:	cdq    
  414156:	lock mov dl,0x5d
  414159:	mov    al,ds:0xc0408977
  41415e:	mov    eax,ds:0x319847b2
  414163:	sbb    ch,dl
  414165:	mov    WORD PTR [esi],bx
  414168:	ror    BYTE PTR [eax-0x407ae69b],cl
  41416e:	sub    eax,ebx
  414170:	fstp   st(7)
  414172:	mov    ah,BYTE PTR [eax]
  414174:	mov    cl,bl
  414176:	cmp    BYTE PTR [ebx-0x4b],cl
  414179:	or     eax,0x20a58c31
  41417e:	les    ecx,FWORD PTR [ebx+eiz*2]
  414181:	xchg   ebp,eax
  414182:	out    dx,al
  414183:	xor    ebp,DWORD PTR [ebp+0xb]
  414186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414187:	imul   esi,DWORD PTR [ebp-0x10],0x303ea31a
  41418e:	fnsave [edi-0x1ee97dfa]
  414194:	sub    edx,esp
  414196:	xchg   BYTE PTR [edx],bl
  414198:	sub    eax,0x95de6cc7
  41419d:	push   ds
  41419e:	sbb    DWORD PTR [edx+0x6e1afc11],eax
  4141a4:	loope  0x414205
  4141a6:	xchg   DWORD PTR [ebp+ebp*1-0x55],edi
  4141aa:	data16 stos BYTE PTR es:[edi],al
  4141ac:	je     0x41416a
  4141ae:	nop
  4141af:	cmp    al,0xcf
  4141b1:	pop    ebx
  4141b2:	mov    bh,0x56
  4141b4:	mov    bl,0xc8
  4141b6:	inc    edx
  4141b7:	sahf   
  4141b8:	cs (bad) 
  4141ba:	in     eax,0xe6
  4141bc:	aas    
  4141bd:	loope  0x41418a
  4141bf:	jmp    0x7c69:0x6a9ef14f
  4141c6:	shr    DWORD PTR [ecx],cl
  4141c8:	leave  
  4141c9:	inc    esp
  4141ca:	sub    eax,0xf1e1bafe
  4141cf:	retf   
  4141d0:	jge    0x4141b1
  4141d2:	xchg   edx,eax
  4141d3:	pop    eax
  4141d4:	push   ds
  4141d5:	sub    al,ah
  4141d7:	or     edi,DWORD PTR [edi+0x4c744b5f]
  4141dd:	mov    edi,0x86cfe2dd
  4141e2:	xor    ah,BYTE PTR [edi+ebp*1+0x41cefe2e]
  4141e9:	mov    ah,0xdf
  4141eb:	in     eax,0xae
  4141ed:	lods   al,BYTE PTR ds:[esi]
  4141ee:	add    ebx,DWORD PTR [ebp-0x14]
  4141f1:	(bad)  
  4141f2:	push   esp
  4141f3:	push   0x30ed82db
  4141f8:	ins    DWORD PTR es:[edi],dx
  4141f9:	add    ebp,DWORD PTR [ecx+0x34]
  4141fc:	retf   
  4141fd:	xchg   ebx,eax
  4141fe:	(bad)  
  4141ff:	(bad)
  414202:	push   0x938e9ecd
  414207:	cmp    BYTE PTR [ecx-0x20],cl
  41420a:	js     0x41420a
  41420c:	fadd   QWORD PTR [edi-0xa686870]
  414212:	jno    0x4141a4
  414214:	js     0x4141cb
  414216:	or     DWORD PTR [edx],ecx
  414218:	jae    0x414285
  41421a:	cmp    eax,0x5af44bff
  41421f:	and    ecx,DWORD PTR [eax-0x1a]
  414222:	aas    
  414223:	ficomp WORD PTR [ebx-0x68]
  414226:	lods   al,BYTE PTR ss:[esi]
  414228:	outs   dx,DWORD PTR ds:[esi]
  414229:	lahf   
  41422a:	jmp    0x6cdb651e
  41422f:	pop    es
  414230:	(bad)  [edi-0xa]
  414233:	mov    ecx,DWORD PTR [esi-0x398792ab]
  414239:	pusha  
  41423a:	cmp    DWORD PTR [ebx],ebx
  41423c:	mov    ebx,0xbc08bbd2
  414241:	pop    ss
  414242:	dec    ebp
  414243:	mov    esp,0x33809bd1
  414248:	(bad)  
  414249:	push   ebx
  41424a:	rol    cl,1
  41424c:	adc    esi,DWORD PTR [si-0x3]
  414250:	les    esp,FWORD PTR [esi]
  414252:	xchg   DWORD PTR [edi+0x3f],esp
  414255:	push   ebx
  414256:	scas   eax,DWORD PTR es:[edi]
  414257:	sub    eax,0x79bb509a
  41425c:	mov    al,0x9b
  41425e:	aam    0x1
  414260:	sar    dl,0x82
  414263:	push   ds
  414264:	sbb    bl,ch
  414266:	xchg   DWORD PTR [edx],eax
  414268:	add    al,0x7d
  41426a:	dec    esp
  41426b:	sub    eax,DWORD PTR [esp+edx*2]
  41426e:	ins    BYTE PTR es:[edi],dx
  41426f:	ret    
  414270:	leave  
  414271:	mov    ecx,0x886f9276
  414276:	sub    esi,DWORD PTR [ecx-0x5b]
  414279:	mov    ecx,ebp
  41427b:	scas   al,BYTE PTR es:[edi]
  41427c:	adc    cl,BYTE PTR [edi]
  41427e:	mov    eax,0x9620d252
  414283:	push   ebx
  414284:	jmp    0xfea68b2f
  414289:	imul   ebp,ecx,0xde5b4fe0
  41428f:	js     0x41429f
  414291:	inc    edx
  414292:	inc    ecx
  414293:	jmp    0x47d5a6bd
  414298:	sbb    BYTE PTR [ecx*4+0x3d0eddaa],ch
  41429f:	xchg   esi,eax
  4142a0:	inc    esi
  4142a1:	cdq    
  4142a2:	paddq  mm4,QWORD PTR [ecx+esi*4+0x56973ad4]
  4142aa:	icebp  
  4142ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142ac:	inc    esi
  4142ad:	dec    edx
  4142ae:	mov    ebp,0xec63aa9c
  4142b3:	jg     0x4142da
  4142b5:	fstp   QWORD PTR [ebp+0x4]
  4142b8:	nop
  4142b9:	adc    ah,ah
  4142bb:	shr    DWORD PTR [ecx-0x5a97d80],1
  4142c1:	or     DWORD PTR ds:0xe2f78973,edi
  4142c7:	mov    ebp,ecx
  4142c9:	loop   0x4142dc
  4142cb:	ror    eax,0xa1
  4142ce:	loope  0x41429d
  4142d0:	push   esp
  4142d1:	and    eax,0x476fe34
  4142d6:	mov    cs,WORD PTR [ecx+edx*1-0x1d]
  4142da:	or     DWORD PTR [ebx-0x6c],ebx
  4142dd:	push   0x260ce170
  4142e2:	dec    ebp
  4142e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142e4:	(bad)  
  4142e5:	imul   esp,DWORD PTR [bp+si],0x4f
  4142e9:	xchg   ebx,eax
  4142ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142eb:	fwait
  4142ec:	test   BYTE PTR [ebp+eiz*4-0x35d226f1],0xd8
  4142f4:	dec    ebx
  4142f5:	pop    es
  4142f6:	push   cs
  4142f7:	(bad)  [esi+edx*1-0x7f]
  4142fb:	popf   
  4142fc:	dec    eax
  4142fd:	xor    eax,0xe7c4bdb4
  414302:	fcomp  QWORD PTR [esi+0x3f]
  414305:	out    0x7d,al
  414307:	sub    BYTE PTR [eax+0x1d],bh
  41430a:	xor    bh,BYTE PTR [ebp*4+0x2c5c2a80]
  414311:	dec    ebp
  414312:	lock shl DWORD PTR [ebx-0x6722b55e],cl
  414319:	fsubr  QWORD PTR [ebx+ebp*4+0xbe24c01]
  414320:	retf   
  414321:	or     eax,0xa8a32d88
  414326:	dec    ecx
  414327:	push   ebx
  414328:	(bad)  
  414329:	test   BYTE PTR [edx],0xee
  41432c:	test   eax,0x326618b6
  414331:	dec    edi
  414332:	pop    ecx
  414333:	fistp  DWORD PTR [eax+0x5084ca9f]
  414339:	push   ebp
  41433a:	mov    BYTE PTR [edx-0x10],dh
  41433d:	dec    esi
  41433e:	xor    al,0xb3
  414340:	lea    edx,[edi+0x24]
  414343:	fs pop esi
  414345:	dec    eax
  414346:	or     DWORD PTR [edi],ebp
  414348:	gs mov edi,0xc58a8b92
  41434e:	in     al,dx
  41434f:	xor    ebx,ebp
  414351:	test   eax,0x24681636
  414356:	shr    al,1
  414358:	dec    edx
  414359:	sub    DWORD PTR [ecx+eiz*4-0x6f],esp
  41435d:	pop    esi
  41435e:	cld    
  41435f:	outs   dx,BYTE PTR ds:[esi]
  414360:	push   ebp
  414361:	push   cs
  414362:	mov    ebp,0x989906eb
  414367:	mov    ds:0x39b50283,al
  41436c:	mov    bl,0xb9
  41436e:	div    DWORD PTR [edx]
  414370:	inc    ecx
  414371:	push   esp
  414372:	fisttp QWORD PTR [eax]
  414374:	loop   0x414394
  414376:	out    0x63,eax
  414378:	sub    BYTE PTR [edx+0x52],ah
  41437b:	jne    0x414358
  41437d:	dec    eax
  41437e:	inc    ebx
  41437f:	pop    ebp
  414380:	test   al,0xea
  414382:	xchg   DWORD PTR [ebx+0x23],ebp
  414385:	inc    eax
  414386:	add    dh,al
  414388:	popf   
  414389:	xor    DWORD PTR [esi+edx*2+0x484c6e0],ebx
  414390:	(bad)  
  414392:	je     0x414361
  414394:	mov    bh,BYTE PTR [ebx+0x68c261c2]
  41439a:	and    bl,ah
  41439c:	js     0x414395
  41439e:	mov    esi,0x5b805695
  4143a3:	add    BYTE PTR [ebx],dl
  4143a5:	imul   ebp,DWORD PTR [ebx-0x6b],0xf5f1a3a
  4143ac:	jmp    0x72eb:0xc0f27cfa
  4143b3:	test   dh,0xc4
  4143b6:	inc    ecx
  4143b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143b8:	sbb    BYTE PTR [ebp-0x54],0x86
  4143bc:	adc    edi,DWORD PTR [esi+ebx*1]
  4143bf:	mov    bl,0x7
  4143c1:	jle    0x41434e
  4143c3:	push   cs
  4143c4:	push   edi
  4143c5:	dec    ebp
  4143c6:	and    ecx,ebp
  4143c8:	mov    DWORD PTR [edx+ebx*1+0x10],esp
  4143cc:	clc    
  4143cd:	sub    al,0x9
  4143cf:	(bad)  
  4143d0:	fucomp st(6)
  4143d2:	rol    DWORD PTR [eax],1
  4143d4:	retf   0xf982
  4143d7:	imul   esp,DWORD PTR [edx-0x71],0x7b
  4143db:	pop    ds
  4143dc:	add    DWORD PTR [esi-0x43],0xf
  4143e0:	xor    eax,0x88966152
  4143e5:	inc    ecx
  4143e6:	ret    0x8971
  4143e9:	fimul  DWORD PTR ds:0x429b9917
  4143ef:	mov    bh,0x75
  4143f1:	mov    al,0xd0
  4143f3:	xchg   ebp,eax
  4143f4:	aam    0x1b
  4143f6:	mov    edi,0xcad73d99
  4143fb:	in     al,0x76
  4143fd:	scas   al,BYTE PTR es:[edi]
  4143fe:	pop    ss
  4143ff:	imul   ebp,edi,0xfffffffa
  414402:	(bad)  
  414403:	(bad)  
  414405:	not    edi
  414407:	adc    al,0xa6
  414409:	push   ecx
  41440a:	mov    ecx,0xee601aa0
  41440f:	ror    BYTE PTR [eax+0x79],1
  414412:	jl     0x4143c0
  414414:	mov    ebx,0x59ca7878
  414419:	lea    esp,[eax+ebp*8]
  41441c:	adc    BYTE PTR [ecx],dl
  41441e:	test   eax,0x8c3bd0a9
  414423:	dec    ebp
  414424:	enter  0x52aa,0x21
  414428:	cmp    dl,dl
  41442a:	lahf   
  41442b:	xchg   ebx,eax
  41442c:	add    BYTE PTR [edi],ch
  41442e:	jmp    0x9ae:0x65633765
  414435:	adc    esi,DWORD PTR [ecx+0x51a8dd08]
  41443b:	and    eax,esp
  41443d:	xchg   DWORD PTR [esp+edi*4],esi
  414440:	lock pushf 
  414442:	pop    eax
  414443:	dec    edi
  414444:	lds    edi,FWORD PTR es:[eax]
  414447:	pop    esp
  414448:	jne    0x414479
  41444a:	int    0x33
  41444c:	xchg   esi,eax
  41444d:	iret   
  41444e:	mov    edx,0x202b7f8
  414453:	mov    DWORD PTR [esi-0x454356e7],esi
  414459:	jns    0x414402
  41445b:	aam    0xa
  41445d:	popf   
  41445e:	jl     0x414482
  414460:	in     al,0xde
  414462:	push   0x60
  414464:	mov    ds:0xe0598225,al
  414469:	mov    BYTE PTR [edx+0x23],0xf
  41446d:	jb     0x4144de
  41446f:	push   DWORD PTR [ecx+0x3a1bb326]
  414475:	mov    edi,0x7ce3ca42
  41447a:	cmp    dh,cl
  41447c:	jmp    0x9f8af9c3
  414481:	in     eax,dx
  414482:	(bad)  [eax*2-0x24bfe331]
  414489:	mov    ebp,0xf5d4c6b0
  41448e:	add    edx,DWORD PTR [esi+0x8f71c6c]
  414494:	rcr    DWORD PTR [edx],0xb2
  414497:	in     al,dx
  414498:	mov    ebp,0x5b6658d2
  41449d:	sbb    ecx,DWORD PTR [eax+0x3d]
  4144a0:	mov    ebx,0x163cd465
  4144a5:	addr16 mov bh,0x2f
  4144a8:	(bad)  
  4144a9:	in     eax,0xeb
  4144ab:	inc    ecx
  4144ac:	(bad)  
  4144ad:	jmp    0x41451b
  4144af:	data16 in al,dx
  4144b1:	ret    
  4144b2:	and    eax,DWORD PTR [ebp-0x6e01aec4]
  4144b8:	popf   
  4144b9:	(bad)  
  4144ba:	lods   al,BYTE PTR ds:[esi]
  4144bb:	push   esi
  4144bc:	dec    ecx
  4144bd:	lods   al,BYTE PTR ds:[esi]
  4144be:	mov    dl,0xbb
  4144c0:	pop    esp
  4144c1:	clc    
  4144c2:	mov    al,ds:0x953dabae
  4144c7:	add    ecx,edi
  4144c9:	in     al,0xca
  4144cb:	pop    esi
  4144cc:	cmp    edx,ebx
  4144ce:	aaa    
  4144cf:	aaa    
  4144d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144d1:	lods   al,BYTE PTR ds:[esi]
  4144d2:	ret    0x61e
  4144d5:	jle    0x414492
  4144d7:	repnz xchg ebp,eax
  4144d9:	rcl    DWORD PTR [edi+0x32],cl
  4144dc:	and    eax,0x84de9354
  4144e1:	dec    eax
  4144e2:	sbb    al,0xd5
  4144e4:	(bad)  
  4144e5:	fnstenv [edx-0x4e4c800a]
  4144eb:	dec    ecx
  4144ec:	fldenv [edi-0x1551ddc4]
  4144f2:	adc    edx,DWORD PTR [ecx+edi*2]
  4144f5:	clc    
  4144f6:	imul   esi,esi,0x6de549ed
  4144fc:	shl    BYTE PTR [eax-0x2e],1
  4144ff:	mov    ah,0x7e
  414501:	push   ecx
  414502:	xchg   ebp,eax
  414503:	xlat   BYTE PTR ds:[ebx]
  414504:	clc    
  414505:	cs xchg esi,eax
  414507:	lea    eax,[edi+edi*2+0x2b]
  41450b:	js     0x41452c
  41450d:	stc    
  41450e:	inc    ebx
  41450f:	xor    ah,BYTE PTR [ebp-0x48]
  414512:	dec    ecx
  414513:	ins    DWORD PTR es:[edi],dx
  414514:	fst    QWORD PTR [edx+0x65]
  414517:	clc    
  414518:	xchg   BYTE PTR [ecx-0x281e9103],ch
  41451e:	les    edx,FWORD PTR [ebx+0xc]
  414521:	out    0x3d,eax
  414523:	gs push cs
  414525:	jecxz  0x41455d
  414527:	stc    
  414528:	fld    DWORD PTR [eax-0x25]
  41452b:	xor    al,0x3c
  41452d:	aaa    
  41452e:	sub    bh,BYTE PTR [bx+di-0x1d]
  414532:	xchg   esi,eax
  414533:	dec    esp
  414534:	(bad)  [edi-0x67]
  414537:	in     eax,dx
  414538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414539:	dec    eax
  41453a:	aam    0x81
  41453c:	std    
  41453d:	mov    eax,0x33004855
  414542:	inc    ebp
  414543:	push   ss
  414544:	push   ecx
  414545:	frstor [edi+0x28]
  414548:	adc    eax,0x94704526
  41454d:	mov    BYTE PTR [ebp+0x63],dl
  414550:	sub    BYTE PTR ds:0xa59259cb,al
  414556:	mov    eax,ds:0xe3de81c0
  41455b:	inc    ebp
  41455c:	ret    0x1912
  41455f:	stc    
  414560:	fwait
  414561:	pushf  
  414562:	adc    eax,0x19aa2f5
  414567:	xchg   DWORD PTR [ecx-0x38],esi
  41456a:	mov    esp,0x80c2f2e
  41456f:	cmp    DWORD PTR ds:0xaac57433,0x4b
  414576:	push   esi
  414577:	sbb    al,0xfa
  414579:	lods   eax,DWORD PTR ds:[esi]
  41457a:	scas   eax,DWORD PTR es:[edi]
  41457b:	or     BYTE PTR [edx],al
  41457d:	cmp    BYTE PTR [esi-0x78c146e0],0x45
  414584:	int    0x41
  414586:	mov    ch,0xb
  414588:	scas   al,BYTE PTR es:[edi]
  414589:	popa   
  41458a:	add    cl,BYTE PTR [edx]
  41458c:	jae    0x414578
  41458e:	xor    BYTE PTR ds:[ebp-0x55],dh
  414592:	xchg   esi,eax
  414593:	mov    eax,ds:0x630ffce3
  414598:	outs   dx,BYTE PTR ds:[esi]
  414599:	sbb    eax,eax
  41459b:	inc    edx
  41459c:	ficomp WORD PTR [eax+0x6983c8d2]
  4145a2:	clc    
  4145a3:	leave  
  4145a4:	imul   eax,DWORD PTR [ebx-0x73],0xbdad6346
  4145ab:	mov    ds:0xa7dbdd18,al
  4145b0:	mov    bl,0x4f
  4145b2:	add    bl,BYTE PTR [ebx+ebp*8]
  4145b5:	imul   esi,DWORD PTR [eax],0xffffffdd
  4145b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145b9:	jno    0x414566
  4145bb:	(bad)  
  4145bc:	pop    esp
  4145bd:	inc    eax
  4145be:	out    dx,eax
  4145bf:	not    BYTE PTR [ebx]
  4145c1:	popf   
  4145c2:	sbb    bh,BYTE PTR [esi-0x53]
  4145c5:	mov    eax,0xedb5eaf7
  4145ca:	xchg   edi,eax
  4145cb:	push   ecx
  4145cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145cd:	inc    ebx
  4145ce:	dec    esp
  4145cf:	ss adc al,0x6c
  4145d2:	adc    eax,0xb3b01220
  4145d7:	or     edx,DWORD PTR [esi-0x3eb2e420]
  4145dd:	sub    DWORD PTR [edi+0x54],esp
  4145e0:	fs xchg edi,eax
  4145e2:	sbb    ebp,ebp
  4145e4:	loop   0x4145f3
  4145e6:	dec    esp
  4145e7:	bound  esi,QWORD PTR [ecx]
  4145e9:	ss push edi
  4145eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145ec:	jo     0x414578
  4145ee:	dec    esi
  4145ef:	lahf   
  4145f0:	dec    edx
  4145f1:	dec    DWORD PTR [esi-0x624cc19c]
  4145f7:	pop    ebx
  4145f8:	add    eax,0x990db16d
  4145fd:	or     al,0x60
  4145ff:	mov    ebx,0x58ea9eb8
  414604:	cmp    DWORD PTR [edx+0x486aef66],edi
  41460a:	das    
  41460b:	mov    ax,ds:0x264f4c30
  414611:	sbb    eax,0x5d5e430e
  414616:	inc    edi
  414617:	push   edi
  414618:	add    al,0x0
  41461a:	ret    0xbe4d
  41461d:	xchg   edi,eax
  41461e:	or     al,0xa8
  414620:	dec    esp
  414621:	div    dh
  414623:	bound  ebp,QWORD PTR [eax-0x49]
  414626:	cs not edx
  414629:	(bad)  
  41462a:	pop    eax
  41462b:	in     eax,dx
  41462c:	clc    
  41462d:	sub    al,0x3f
  41462f:	data16 mov cs,WORD PTR [ecx-0x21]
  414633:	lds    esi,FWORD PTR ds:0x2de73cb9
  414639:	sar    DWORD PTR [esi+0x351c4f7],0x9a
  414640:	adc    al,0xee
  414642:	pop    ebx
  414643:	sti    
  414644:	loope  0x414635
  414646:	dec    edi
  414647:	bound  ebp,QWORD PTR [ebx]
  414649:	inc    ebx
  41464a:	lea    edx,ds:0x4166ef11
  414650:	push   esp
  414651:	addr16 sbb eax,0xb5844a50
  414657:	jns    0x4146c3
  414659:	and    al,0xd1
  41465b:	push   edi
  41465c:	jp     0x414641
  41465e:	test   eax,0x7ef8112d
  414663:	jp     0x4146ce
  414665:	jb     0x414683
  414667:	imul   edx,DWORD PTR [edi],0x3964d815
  41466d:	inc    edi
  41466e:	jl     0x414600
  414670:	gs daa 
  414672:	lea    ebp,[ebp+0x13a75985]
  414678:	cdq    
  414679:	and    cl,dh
  41467b:	add    eax,0xb360c254
  414680:	dec    esi
  414681:	int    0x54
  414683:	or     ebp,DWORD PTR [edi-0x24329ea5]
  414689:	push   esp
  41468a:	daa    
  41468b:	jp     0x414621
  41468d:	ins    BYTE PTR es:[edi],dx
  41468e:	repz pop edx
  414690:	xchg   esi,eax
  414691:	jmp    0x5dff050d
  414696:	pop    ebp
  414697:	sub    DWORD PTR [eax+ecx*4-0x3f],ebx
  41469b:	adc    ebp,DWORD PTR [edi]
  41469d:	jecxz  0x41464d
  41469f:	and    ah,BYTE PTR [edi-0x71d493ae]
  4146a5:	mov    dl,0xa
  4146a7:	das    
  4146a8:	xor    DWORD PTR [edx-0x6f],ecx
  4146ab:	retf   
  4146ac:	not    DWORD PTR [ebx]
  4146ae:	inc    ecx
  4146af:	adc    BYTE PTR [ebx],dh
  4146b1:	fcmovbe st,st(7)
  4146b3:	jnp    0x4146c9
  4146b5:	push   eax
  4146b6:	mov    al,ds:0x1e1018dc
  4146bb:	in     al,dx
  4146bc:	push   ds
  4146bd:	mov    bh,0xf2
  4146bf:	jmp    0xe4bdf73f
  4146c4:	cdq    
  4146c5:	xchg   edx,eax
  4146c6:	jbe    0x414697
  4146c8:	fadd   DWORD PTR [edx]
  4146ca:	xchg   esp,eax
  4146cb:	test   DWORD PTR [esp+ebp*1],edi
  4146ce:	div    BYTE PTR [esi]
  4146d0:	(bad)  
  4146d1:	loopne 0x4146e5
  4146d3:	(bad)  
  4146d4:	mov    dh,0x63
  4146d6:	aaa    
  4146d7:	xchg   ebx,eax
  4146d8:	adc    al,BYTE PTR [esi+0x41452f1b]
  4146de:	ja     0x414744
  4146e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146e1:	dec    edi
  4146e2:	jnp    0x414739
  4146e4:	aaa    
  4146e5:	aad    0x38
  4146e7:	sbb    al,0x46
  4146e9:	ins    BYTE PTR es:[edi],dx
  4146ea:	xchg   edx,eax
  4146eb:	scas   al,BYTE PTR es:[edi]
  4146ec:	in     eax,dx
  4146ed:	sbb    edx,DWORD PTR [esi+0xef8a1c1]
  4146f3:	stc    
  4146f4:	imul   esp,DWORD PTR [ebp-0x61],0xeff8ffec
  4146fb:	shr    edx,1
  4146fd:	mov    esp,0xbfdc3e8b
  414702:	nop
  414703:	std    
  414704:	icebp  
  414705:	in     al,dx
  414706:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  414708:	pop    es
  414709:	jno    0x414732
  41470b:	sub    BYTE PTR [di+0x5f],bh
  41470f:	(bad)  
  414710:	dec    ebp
  414711:	mov    ebx,0x53489a4
  414716:	xchg   bl,bl
  414718:	xchg   esi,eax
  414719:	test   DWORD PTR [ebp-0x25],ebx
  41471c:	add    eax,0xb452f362
  414721:	loop   0x414796
  414723:	loope  0x414715
  414725:	repnz cmp BYTE PTR [edi],cl
  414728:	jnp    0x4146e1
  41472a:	cmp    eax,0xc3c1227a
  41472f:	sub    BYTE PTR [esp+ebp*8-0x3],ah
  414733:	leave  
  414734:	int3   
  414735:	ins    BYTE PTR es:[edi],dx
  414736:	test   al,0xd8
  414738:	repz mov edx,0xff0c1a2
  41473e:	popf   
  41473f:	mov    bh,bl
  414741:	or     al,0x54
  414743:	jmp    0x4147a2
  414745:	xor    eax,ebx
  414747:	adc    al,0xf1
  414749:	inc    ebp
  41474a:	mov    edx,0x482d288c
  41474f:	retf   
  414750:	xor    al,cl
  414752:	mov    cs,WORD PTR [eax+0x762722d2]
  414758:	adc    bl,bl
  41475a:	into   
  41475b:	xchg   ecx,eax
  41475c:	loopne 0x4147cf
  41475e:	push   edx
  41475f:	mov    BYTE PTR [eax-0x72df42b2],dl
  414765:	xor    ecx,DWORD PTR [edx+0x31]
  414768:	jae    0x414764
  41476a:	mov    ch,0x5c
  41476c:	mov    al,ds:0xf9274d16
  414771:	outs   dx,BYTE PTR ds:[esi]
  414772:	mov    esp,ebp
  414774:	cmp    dl,cl
  414776:	mov    ch,0x4c
  414778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414779:	data16 shl BYTE PTR [edi-0x3a3b77e8],0x3e
  414781:	mov    bl,0x27
  414783:	cli    
  414784:	jmp    FWORD PTR [eax*2+0x4566866b]
  41478b:	and    al,0xee
  41478d:	add    DWORD PTR [esi],0x3aeee414
  414793:	jbe    0x414720
  414795:	bound  ecx,QWORD PTR [eax+edi*1+0x3]
  414799:	sub    DWORD PTR [ecx+ebx*4],ecx
  41479c:	pop    edi
  41479d:	int3   
  41479e:	bound  edi,QWORD PTR [esi-0x5c]
  4147a1:	outs   dx,BYTE PTR ds:[esi]
  4147a2:	out    0xf8,eax
  4147a4:	and    bh,BYTE PTR [ebx+0x4abd8b9a]
  4147aa:	push   esi
  4147ab:	push   ecx
  4147ac:	std    
  4147ad:	ror    BYTE PTR [esp+eax*1],1
  4147b0:	iret   
  4147b1:	cmp    ch,BYTE PTR [edx+0x1e6b9bec]
  4147b7:	or     eax,0x6e8178f5
  4147bc:	retf   0x40b7
  4147bf:	push   ebp
  4147c0:	sar    DWORD PTR [esi-0x7641dd0a],cl
  4147c6:	cmp    esi,DWORD PTR [ebp+0x7edf0abf]
  4147cc:	scas   al,BYTE PTR es:[edi]
  4147cd:	add    BYTE PTR [ecx],ah
  4147cf:	dec    edx
  4147d0:	mov    edi,0xdea380c0
  4147d5:	icebp  
  4147d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147d7:	xchg   esi,eax
  4147d8:	mov    al,ds:0x442f3fe4
  4147dd:	inc    esp
  4147de:	scas   al,BYTE PTR es:[edi]
  4147df:	xor    BYTE PTR [eax],bh
  4147e1:	cli    
  4147e2:	and    DWORD PTR [eax],ecx
  4147e4:	xchg   DWORD PTR [ecx-0x7d],eax
  4147e7:	cli    
  4147e8:	mov    cl,0xe7
  4147ea:	jecxz  0x4147f3
  4147ec:	stos   BYTE PTR es:[edi],al
  4147ed:	in     al,0x1f
  4147ef:	pushf  
  4147f0:	mov    ds:0x6a1d6780,eax
  4147f5:	add    BYTE PTR [esi+0x41],bl
  4147f8:	(bad)  
  4147f9:	stos   DWORD PTR es:[edi],eax
  4147fa:	(bad)  
  4147fb:	xchg   BYTE PTR [ecx+0x72],bh
  4147fe:	mov    al,ds:0xca9387de
  414803:	pop    ebp
  414804:	add    eax,0x2ee07e13
  414809:	ja     0x414866
  41480b:	jge    0x414798
  41480d:	fldenv [eax-0x56]
  414810:	adc    ecx,DWORD PTR [ebx-0x5e]
  414813:	mov    ebp,0x2c57b582
  414818:	pop    edx
  414819:	ret    0xb1ba
  41481c:	clc    
  41481d:	or     bl,BYTE PTR [ebp-0x57]
  414820:	(bad)  
  414821:	test   al,0x52
  414823:	mov    ch,0x33
  414825:	or     esp,DWORD PTR [edx]
  414827:	adc    DWORD PTR [esp+eax*4-0x13],edi
  41482b:	adc    cl,BYTE PTR [ebx+edx*1-0x7e]
  41482f:	pop    esp
  414830:	outs   dx,DWORD PTR ds:[esi]
  414831:	inc    edx
  414832:	repnz xchg esp,eax
  414834:	daa    
  414835:	xchg   ebx,eax
  414836:	mov    edx,0x729dc5a7
  41483b:	push   esp
  41483c:	call   0x9e36:0x2eb6193a
  414843:	jp     0x414805
  414845:	dec    ebx
  414846:	push   es
  414847:	jge    0x41486c
  414849:	(bad)  
  41484a:	fadd   QWORD PTR [ebp-0x7978b3ec]
  414850:	outs   dx,BYTE PTR ds:[esi]
  414851:	popf   
  414852:	(bad)  
  414854:	hlt    
  414855:	fistp  QWORD PTR [edi]
  414857:	leave  
  414858:	mov    ds:0x70e54752,al
  41485d:	inc    esp
  41485e:	adc    edx,DWORD PTR [esp+ebx*8]
  414861:	jle    0x414877
  414863:	mov    esp,0x7f9ff1ba
  414868:	mov    dl,0x39
  41486a:	das    
  41486b:	call   0xeb06:0x79f3faaf
  414872:	mov    DWORD PTR [edx+esi*1],0x3d9f5d24
  414879:	or     eax,0xb9029c90
  41487e:	sub    al,0xf7
  414880:	div    BYTE PTR [ebx]
  414882:	sub    cl,BYTE PTR [ebp+0x54]
  414885:	cmp    ch,BYTE PTR [edx+0x1a1c9ba5]
  41488b:	sub    DWORD PTR [esi],esp
  41488d:	in     eax,0x30
  41488f:	outs   dx,BYTE PTR ds:[esi]
  414890:	jmp    0xfb65d7f6
  414895:	jnp    0x41487a
  414897:	dec    ebp
  414898:	imul   esi,DWORD PTR [ebp-0x48],0xffffffd8
  41489c:	test   al,0x29
  41489e:	mov    edx,0x9375403c
  4148a3:	pop    ebx
  4148a4:	inc    eax
  4148a5:	dec    eax
  4148a6:	mov    esp,?
  4148a8:	inc    edx
  4148a9:	cld    
  4148aa:	and    BYTE PTR [ecx+0x56],0x91
  4148ae:	xor    BYTE PTR [eax],0xe3
  4148b1:	je     0x414892
  4148b3:	mov    ds:0xd1b51494,al
  4148b8:	cmp    al,0x5f
  4148ba:	test   DWORD PTR [eax+edx*2-0x33da3661],ebx
  4148c1:	mov    al,0xce
  4148c3:	out    dx,al
  4148c4:	mov    bh,0x77
  4148c6:	xor    BYTE PTR [edi+0x7ae15a59],dh
  4148cc:	mov    bh,0x44
  4148ce:	add    ecx,ecx
  4148d0:	arpl   WORD PTR [ebx+ebp*1+0x5f],si
  4148d4:	xor    edx,DWORD PTR gs:[edx]
  4148d7:	jp     0x414897
  4148d9:	inc    ebx
  4148da:	sub    ecx,DWORD PTR [ebx+0x5f]
  4148dd:	aaa    
  4148de:	sbb    BYTE PTR [esi-0x68f5b0bc],bh
  4148e4:	and    BYTE PTR [edi-0x71db725c],al
  4148ea:	or     edx,esi
  4148ec:	mov    ch,0x24
  4148ee:	stos   BYTE PTR es:[edi],al
  4148ef:	xchg   edx,eax
  4148f0:	and    al,0xfd
  4148f2:	fnsave cs:[edi+0x1d]
  4148f6:	mov    cl,0x35
  4148f8:	cpuid  
  4148fa:	jmp    0x4148f7
  4148fc:	adc    esp,edi
  4148fe:	loop   0x4148d0
  414900:	pop    esi
  414901:	push   0xffffff94
  414903:	adc    DWORD PTR [ebx],ebx
  414905:	push   edi
  414906:	call   0x9110:0x751a0110
  41490d:	xchg   ebx,eax
  41490e:	aad    0x13
  414910:	jnp    0x4148b4
  414912:	dec    eax
  414913:	jns    0x4148e4
  414915:	aad    0x7b
  414917:	adc    bh,BYTE PTR [ecx+0x635c8e58]
  41491d:	in     eax,dx
  41491e:	jo     0x41497d
  414920:	out    0x49,al
  414922:	icebp  
  414923:	mov    esp,0xfe8894b
  414928:	mov    cl,0x32
  41492a:	or     ch,al
  41492c:	mov    ebp,0x1bf74ce3
  414931:	sahf   
  414932:	mov    dl,0x90
  414934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414935:	and    eax,0xe9625f50
  41493a:	mov    cl,0xea
  41493c:	loop   0x414998
  41493e:	xor    esp,edi
  414940:	pop    edx
  414941:	iret   
  414942:	inc    ebx
  414943:	adc    ah,BYTE PTR fs:0x50aae748
  41494a:	dec    esi
  41494b:	sbb    edi,DWORD PTR [ebx]
  41494d:	add    ecx,DWORD PTR [esi-0x43]
  414950:	cwde   
  414951:	(bad)
  414954:	xchg   edi,eax
  414955:	int    0xd4
  414957:	mul    BYTE PTR [edx]
  414959:	jno    0x41497d
  41495b:	or     eax,0x1106fb8f
  414960:	pop    esi
  414961:	scas   al,BYTE PTR es:[edi]
  414962:	mov    esi,0x73f21fb6
  414967:	sub    al,BYTE PTR [ebp+0x25]
  41496a:	hlt    
  41496b:	out    0x0,al
  41496d:	mov    bh,0x45
  41496f:	test   dh,bl
  414971:	sbb    cl,BYTE PTR [edi]
  414973:	jo     0x41490f
  414975:	and    ebp,eax
  414977:	stos   BYTE PTR es:[edi],al
  414978:	mov    esp,0x525300d5
  41497d:	jnp    0x41495b
  41497f:	jno    0x4149aa
  414981:	call   0xc75b:0x21d3dfba
  414988:	retf   0x3622
  41498b:	pop    ds
  41498c:	mov    eax,0x1c7c4fe3
  414991:	fs jae 0x414934
  414994:	push   0x2a
  414996:	in     al,0x19
  414998:	pusha  
  414999:	dec    esi
  41499a:	mov    esi,0x39bc5122
  41499f:	jge    0x414992
  4149a1:	adc    eax,0xbf1fd752
  4149a6:	fst    st(1)
  4149a8:	call   0x6d02:0x5a36f6b
  4149af:	fs mov bl,0xc6
  4149b2:	and    edx,0x22
  4149b5:	hlt    
  4149b6:	retf   0xd6b4
  4149b9:	mov    esp,0xaa71a069
  4149be:	ret    0x79fa
  4149c1:	sbb    DWORD PTR [ecx+0x38],edi
  4149c4:	sahf   
  4149c5:	call   0x54c0be8a
  4149ca:	sub    edi,DWORD PTR [ecx-0x67]
  4149cd:	cli    
  4149ce:	inc    esp
  4149cf:	inc    eax
  4149d0:	stos   DWORD PTR es:[edi],eax
  4149d1:	ret    
  4149d2:	scas   eax,DWORD PTR es:[edi]
  4149d3:	das    
  4149d4:	jmp    0x856c2fa6
  4149d9:	popf   
  4149da:	sub    ebp,DWORD PTR [edi-0xb]
  4149dd:	or     BYTE PTR [edx+0x3383209d],0xcc
  4149e4:	sar    DWORD PTR ds:[ebx+eax*4-0x2c],0xb6
  4149ea:	cmp    al,0x85
  4149ec:	xor    ah,bl
  4149ee:	(bad)  
  4149ef:	xlat   BYTE PTR ds:[ebx]
  4149f0:	xor    BYTE PTR [eax],ah
  4149f2:	mov    ebp,gs
  4149f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149f5:	repz sar BYTE PTR [esi-0x271941c5],1
  4149fc:	dec    ecx
  4149fd:	enter  0x9c43,0xf3
  414a01:	pop    ebx
  414a02:	xchg   edi,eax
  414a03:	push   0xda78fc04
  414a08:	xchg   ecx,eax
  414a09:	dec    edx
  414a0a:	rcr    BYTE PTR [edi],cl
  414a0c:	scas   al,BYTE PTR es:[edi]
  414a0d:	mov    eax,0x5bda15c1
  414a12:	xor    esi,DWORD PTR [ebp-0xe]
  414a15:	mov    al,ds:0x516fec10
  414a1a:	retf   
  414a1b:	mov    esp,0xf064a236
  414a20:	add    BYTE PTR [edx+0x15],ah
  414a23:	ins    DWORD PTR es:[edi],dx
  414a24:	cmp    al,0x3a
  414a26:	pusha  
  414a27:	adc    DWORD PTR [edi+edx*2-0x68010c55],esp
  414a2e:	out    dx,eax
  414a2f:	push   esp
  414a30:	std    
  414a31:	scas   eax,DWORD PTR es:[edi]
  414a32:	int3   
  414a33:	xchg   BYTE PTR [eax-0x6e4d3833],ah
  414a39:	xor    al,0x54
  414a3b:	push   esi
  414a3c:	jnp    0x414a45
  414a3e:	dec    edi
  414a3f:	cmp    al,0x7a
  414a41:	and    BYTE PTR [ebp+0x5a],ah
  414a44:	adc    ch,BYTE PTR [ebp-0x72]
  414a47:	xor    al,0x44
  414a49:	loop   0x414a8d
  414a4b:	imul   ebp,DWORD PTR [esi-0x7f1633dd],0xfffffff9
  414a52:	sbb    cl,ah
  414a54:	mov    al,0x30
  414a56:	lods   eax,DWORD PTR ds:[esi]
  414a57:	mov    ch,0x7c
  414a59:	cdq    
  414a5a:	jp     0x414a7c
  414a5c:	push   eax
  414a5d:	xor    al,0xd1
  414a5f:	cmc    
  414a60:	mov    esi,DWORD PTR [esi-0x37c6c33b]
  414a66:	push   es
  414a67:	fcomp  QWORD PTR [edx-0x2bbca205]
  414a6d:	std    
  414a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a6f:	xor    dh,dl
  414a71:	sbb    ch,dl
  414a73:	pop    ds
  414a74:	in     al,dx
  414a75:	aas    
  414a76:	mov    DWORD PTR [edx+0x596a1941],edi
  414a7c:	mov    cl,0xc
  414a7e:	fdivr  QWORD PTR [edi+ebp*2-0x30b4629d]
  414a85:	xchg   edx,eax
  414a86:	dec    eax
  414a87:	cmc    
  414a88:	mov    WORD PTR [ebx-0x1e],es
  414a8b:	sub    DWORD PTR [esi-0x28139177],ebx
  414a91:	sub    ecx,edx
  414a93:	jo     0x414ad7
  414a95:	fnstsw WORD PTR [ecx+eax*1+0x5c1a748e]
  414a9c:	mov    al,ds:0x2dc4f549
  414aa1:	adc    DWORD PTR [edi],ebp
  414aa3:	sahf   
  414aa4:	sbb    ah,al
  414aa6:	mov    ebx,0xebfd7fc5
  414aab:	dec    esi
  414aac:	or     edi,DWORD PTR [edi-0x33]
  414aaf:	xchg   edi,eax
  414ab0:	sbb    DWORD PTR [ecx+0x1a],0x68
  414ab4:	mov    ch,0x34
  414ab6:	mov    ah,0x8f
  414ab8:	lock cli 
  414aba:	dec    esp
  414abb:	pop    ds
  414abc:	mov    ebx,0x11669776
  414ac1:	and    al,0x2a
  414ac3:	(bad)  
  414ac4:	jl     0x414b3c
  414ac6:	pop    esi
  414ac7:	mov    WORD PTR [esi-0x47508888],ds
  414acd:	sbb    al,0x1f
  414acf:	add    al,0x92
  414ad1:	aas    
  414ad2:	stc    
  414ad3:	rol    bl,1
  414ad5:	test   al,0xe7
  414ad7:	test   eax,0x74937654
  414adc:	sub    esi,ebx
  414ade:	les    eax,FWORD PTR [ecx+ebx*8+0x77]
  414ae2:	fwait
  414ae3:	push   0x6355fcf0
  414ae8:	pop    eax
  414ae9:	inc    esi
  414aea:	(bad)  
  414aeb:	fist   DWORD PTR [edx+0x6c1066be]
  414af1:	sub    cl,BYTE PTR [eax+0x7a5e21e4]
  414af7:	pop    sp
  414af9:	sahf   
  414afa:	arpl   WORD PTR [eax+0x51aecc1b],di
  414b00:	xor    bl,BYTE PTR [edi+0x579e8efd]
  414b06:	xor    BYTE PTR [edx-0x1fd02206],ch
  414b0c:	jecxz  0x414b61
  414b0e:	inc    eax
  414b0f:	push   0xa72a95ee
  414b14:	aaa    
  414b15:	pop    edx
  414b16:	sbb    ebx,ebx
  414b18:	test   eax,0x4e71a367
  414b1d:	jae    0x414b10
  414b1f:	sbb    dh,0x5d
  414b22:	and    al,0x57
  414b24:	gs sbb al,0x9a
  414b27:	xor    edi,DWORD PTR [esi]
  414b29:	(bad)  [esi-0x6db99333]
  414b2f:	dec    ebp
  414b30:	aas    
  414b31:	add    ebp,eax
  414b33:	nop
  414b34:	pushf  
  414b35:	adc    BYTE PTR ds:0x3c22498e,0x5b
  414b3c:	add    eax,0xd93e4711
  414b41:	adc    BYTE PTR [eax-0x3c],bl
  414b44:	mov    ds:0xea997789,eax
  414b49:	pop    ebx
  414b4a:	cmp    BYTE PTR [ecx+0x7c],bl
  414b4d:	int    0x44
  414b4f:	mov    eax,ds:0xbffcef33
  414b54:	das    
  414b55:	adc    BYTE PTR [esi+0x2965a74c],dh
  414b5b:	dec    ebx
  414b5c:	xor    DWORD PTR ds:0x9116d32a,esp
  414b62:	cmp    al,0x89
  414b64:	mov    eax,ds:0x8a88ea99
  414b69:	jl     0x414b3a
  414b6b:	push   ebp
  414b6c:	popf   
  414b6d:	test   eax,0xcad71129
  414b72:	xchg   esi,eax
  414b73:	popf   
  414b74:	mov    eax,0xa5f76dbc
  414b79:	push   ecx
  414b7a:	test   DWORD PTR [ecx],0xd0b02a54
  414b80:	mov    ebp,0x17041b31
  414b85:	(bad)  
  414b86:	cld    
  414b87:	pop    ss
  414b88:	lea    esp,[esp+ebp*8-0x1a550aa0]
  414b8f:	rol    bl,1
  414b91:	jbe    0x414b34
  414b93:	cmp    eax,0x204934f8
  414b98:	lds    esi,FWORD PTR [edi]
  414b9a:	popf   
  414b9b:	xchg   esi,eax
  414b9c:	fimul  WORD PTR [eax]
  414b9e:	les    edi,FWORD PTR [esi]
  414ba0:	addr16 mov dh,0xf2
  414ba3:	push   esp
  414ba4:	mov    dl,BYTE PTR [eax]
  414ba6:	imul   edi,DWORD PTR [edi-0x19],0x50
  414baa:	jbe    0x414b91
  414bac:	pop    ecx
  414bad:	ret    0xcfd3
  414bb0:	in     al,0xad
  414bb2:	add    BYTE PTR [ebx+0x2e48fe47],0x95
  414bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bba:	add    esp,DWORD PTR [ebp-0x52]
  414bbd:	dec    ecx
  414bbe:	push   ss
  414bbf:	add    BYTE PTR [eax],dh
  414bc1:	imul   ebx,ecx,0x38
  414bc4:	mov    esp,0xfca48a13
  414bc9:	stos   BYTE PTR es:[edi],al
  414bca:	inc    ebx
  414bcb:	cmc    
  414bcc:	jecxz  0x414c34
  414bce:	dec    edi
  414bcf:	pushf  
  414bd0:	xor    BYTE PTR [edx+0x9],dh
  414bd3:	pop    ebp
  414bd4:	iret   
  414bd5:	aaa    
  414bd6:	xchg   edi,eax
  414bd7:	and    DWORD PTR [eax-0x64f907b1],eax
  414bdd:	cmp    dl,BYTE PTR [edx]
  414bdf:	and    al,0xe5
  414be1:	retf   
  414be2:	xchg   edi,eax
  414be3:	dec    ebx
  414be4:	jmp    0x496:0xa478fb5
  414beb:	loopne 0x414b97
  414bed:	stos   BYTE PTR es:[edi],al
  414bee:	push   edi
  414bef:	scas   eax,DWORD PTR es:[edi]
  414bf0:	sbb    BYTE PTR [eax+0x16],cl
  414bf3:	int3   
  414bf4:	or     edx,DWORD PTR [ecx-0x3e14d67c]
  414bfa:	inc    ebx
  414bfb:	push   0xffffffb6
  414bfd:	jb     0x414c60
  414bff:	js     0x414b88
  414c01:	(bad)  
  414c03:	mov    eax,DWORD PTR [esp+edi*1+0x514d229]
  414c0a:	and    BYTE PTR [esi-0x6e],dl
  414c0d:	add    eax,0x415183dc
  414c12:	xor    esp,DWORD PTR [eax-0x2d]
  414c15:	mov    edx,0xb184f7d1
  414c1a:	je     0x414c6b
  414c1c:	lods   al,BYTE PTR ds:[esi]
  414c1d:	test   ax,0xa9e5
  414c21:	adc    BYTE PTR [ecx+0x148ee602],bh
  414c27:	push   edx
  414c28:	dec    eax
  414c29:	in     al,dx
  414c2a:	cmp    bl,BYTE PTR [edx+edx*8-0x16]
  414c2e:	add    al,0x9c
  414c30:	jg     0x414bb3
  414c32:	mov    cl,0x76
  414c34:	mov    WORD PTR [ebx+0x5a124279],gs
  414c3a:	clc    
  414c3b:	imul   edi,DWORD PTR [esi+0x57],0x68d1c21
  414c42:	sbb    ch,al
  414c44:	lds    esp,FWORD PTR [eax]
  414c46:	and    ebp,DWORD PTR [edi]
  414c48:	out    dx,eax
  414c49:	adc    al,0x4b
  414c4b:	xor    eax,0x3d762132
  414c50:	cmp    dl,0x13
  414c53:	aas    
  414c54:	lods   eax,DWORD PTR ds:[esi]
  414c55:	(bad)  
  414c56:	fsubr  QWORD PTR [eax+0x7c]
  414c59:	xor    ebp,DWORD PTR [eax-0x12]
  414c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c5d:	and    DWORD PTR [esi+ebx*4-0x28],ebx
  414c61:	mov    bl,0xfe
  414c63:	ds icebp 
  414c65:	daa    
  414c66:	mov    ebx,ebx
  414c68:	and    al,0x74
  414c6a:	daa    
  414c6b:	(bad)
  414c6f:	push   ecx
  414c70:	and    cl,BYTE PTR [ebx+edx*2+0x1b2d948e]
  414c77:	arpl   WORD PTR [ebp+0x7c],di
  414c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c7b:	sbb    DWORD PTR [edi],0xf65503fd
  414c81:	ins    DWORD PTR es:[edi],dx
  414c82:	sub    DWORD PTR [esi+0x16],edx
  414c85:	ds pop ebp
  414c87:	mov    dl,0x96
  414c89:	daa    
  414c8a:	push   eax
  414c8b:	adc    ch,dl
  414c8d:	retf   0x3671
  414c90:	xchg   edi,eax
  414c91:	inc    ebp
  414c92:	lahf   
  414c93:	or     al,0x8c
  414c95:	lods   al,BYTE PTR ds:[esi]
  414c96:	ret    
  414c97:	add    bh,BYTE PTR [edi+0x66300579]
  414c9d:	xchg   esi,eax
  414c9e:	and    al,0x35
  414ca0:	cmp    DWORD PTR [edx+0x7e],esi
  414ca3:	cmp    DWORD PTR [ecx-0x4ef5e6ed],edi
  414ca9:	shl    BYTE PTR [ecx+0x241231d6],cl
  414caf:	mov    ebx,0x7a1649db
  414cb4:	arpl   bx,dx
  414cb6:	inc    ebp
  414cb7:	jmp    0x414c8e
  414cb9:	test   DWORD PTR [edi],edi
  414cbb:	out    dx,eax
  414cbc:	jno    0x414c99
  414cbe:	mov    BYTE PTR [ebx-0x51],dh
  414cc1:	inc    ecx
  414cc2:	pop    esp
  414cc3:	mov    eax,0x4213a63d
  414cc8:	(bad)  
  414cca:	mov    al,0x62
  414ccc:	xchg   ebx,eax
  414ccd:	aad    0xd
  414ccf:	sub    al,0x37
  414cd1:	add    BYTE PTR [edi],al
  414cd3:	test   eax,0x5df98833
  414cd8:	aad    0x5f
  414cda:	and    bh,dl
  414cdc:	stc    
  414cdd:	cmp    ecx,eax
  414cdf:	cwde   
  414ce0:	lods   eax,DWORD PTR ds:[esi]
  414ce1:	lock and edi,esi
  414ce4:	bound  ebx,QWORD PTR [ebx-0x68a83e50]
  414cea:	add    dh,BYTE PTR [edi]
  414cec:	sbb    BYTE PTR [ebx],bh
  414cee:	add    eax,0x278fbda3
  414cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cf4:	jo     0x414ca1
  414cf6:	stos   DWORD PTR es:[edi],eax
  414cf7:	mov    dl,0xfe
  414cf9:	cwde   
  414cfa:	in     al,0xb8
  414cfc:	push   edx
  414cfd:	pop    ds
  414cfe:	mov    ds:0x81a136c0,al
  414d03:	(bad)  
  414d04:	call   0xbba9:0xbf9c0437
  414d0b:	cmp    eax,0xf9b6582e
  414d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d11:	push   0x1d2d88cd
  414d16:	test   esi,edi
  414d18:	icebp  
  414d19:	add    bl,dh
  414d1b:	nop
  414d1c:	inc    ebp
  414d1d:	inc    eax
  414d1e:	shr    DWORD PTR [esi-0x12],1
  414d21:	jns    0x414cdc
  414d23:	pop    eax
  414d24:	pop    ecx
  414d25:	xor    al,0xba
  414d27:	lahf   
  414d28:	sub    BYTE PTR [ebx+0x34],cl
  414d2b:	push   ecx
  414d2c:	fbld   TBYTE PTR [ebx+0x6cd93cd8]
  414d32:	inc    ecx
  414d33:	xor    BYTE PTR [esi],ah
  414d35:	dec    ebp
  414d36:	jne    0x414d9e
  414d38:	adc    edx,DWORD PTR [edx-0xc]
  414d3b:	pop    esi
  414d3c:	or     DWORD PTR ds:0xbe625eca,esi
  414d42:	sahf   
  414d43:	and    ecx,DWORD PTR [ebx-0xa2d6d6d]
  414d49:	and    DWORD PTR [esi+0xf87206d],0x4f
  414d50:	iret   
  414d51:	push   ebx
  414d52:	out    dx,al
  414d53:	ins    BYTE PTR es:[edi],dx
  414d54:	push   ecx
  414d55:	fbstp  TBYTE PTR [ecx]
  414d57:	addr16 xchg ebp,eax
  414d59:	cs cwde 
  414d5b:	mov    al,0xd
  414d5d:	lods   al,BYTE PTR cs:[esi]
  414d5f:	pop    es
  414d60:	jo     0x414d3e
  414d62:	add    cl,BYTE PTR [edi-0x3b]
  414d65:	lock outs dx,BYTE PTR ds:[esi]
  414d67:	xor    bh,al
  414d69:	jecxz  0x414d27
  414d6b:	jle    0x414db4
  414d6d:	call   0xe18b:0x3ae05d52
  414d74:	dec    ebp
  414d75:	sbb    DWORD PTR ds:0xc7f10cfb,edx
  414d7b:	ja     0x414d21
  414d7d:	and    DWORD PTR [ebp-0x68],ecx
  414d80:	clc    
  414d81:	pop    ds
  414d82:	pop    ebx
  414d83:	ds inc esi
  414d85:	cld    
  414d86:	jae    0x414d5c
  414d88:	ins    DWORD PTR es:[edi],dx
  414d89:	mov    cl,0x95
  414d8b:	neg    edx
  414d8d:	outs   dx,BYTE PTR ds:[esi]
  414d8e:	repnz cs cli 
  414d91:	pop    esp
  414d92:	int    0x2b
  414d94:	xor    DWORD PTR [esp+edi*2-0x5c],eax
  414d98:	sbb    BYTE PTR [ecx-0x45aafb34],bl
  414d9e:	das    
  414d9f:	mov    eax,DWORD PTR es:0x89ff9ad1
  414da6:	ins    DWORD PTR es:[edi],dx
  414da7:	cwde   
  414da8:	push   edi
  414da9:	xchg   esp,eax
  414daa:	pop    eax
  414dab:	cwde   
  414dac:	(bad)
  414daf:	ret    
  414db0:	xor    dh,BYTE PTR [esi]
  414db2:	push   eax
  414db3:	nop
  414db4:	test   eax,0x102cee02
  414db9:	add    al,0xa0
  414dbb:	mov    ds:0x955811ae,al
  414dc0:	lds    ecx,FWORD PTR [ebp+edi*8+0x72]
  414dc4:	pop    ds
  414dc5:	and    edi,DWORD PTR [ebx+0x24]
  414dc8:	sub    edi,DWORD PTR [edx+0x224e7d67]
  414dce:	and    al,0xea
  414dd0:	test   BYTE PTR [esi+0x66],0xc1
  414dd4:	out    dx,al
  414dd5:	mov    eax,ds:0xd03031fa
  414dda:	cld    
  414ddb:	dec    eax
  414ddc:	stos   BYTE PTR es:[edi],al
  414ddd:	out    0xe,eax
  414ddf:	jmp    0x414dd1
  414de1:	stos   BYTE PTR es:[edi],al
  414de2:	inc    ebp
  414de3:	clc    
  414de4:	popf   
  414de5:	fldcw  WORD PTR [ecx+0xa]
  414de8:	rcl    DWORD PTR [eax],0x75
  414deb:	dec    esi
  414dec:	fsubr  QWORD PTR [ebp-0x4fc2d73f]
  414df2:	rcl    ecx,1
  414df4:	inc    ebp
  414df5:	or     bl,BYTE PTR [ebx+0x4206c052]
  414dfb:	mov    bl,bh
  414dfd:	ss test eax,0x2fb25f1c
  414e03:	dec    edi
  414e04:	inc    esi
  414e05:	dec    DWORD PTR [ebx+0x7d18bec7]
  414e0b:	call   0xafb5:0xbd893528
  414e12:	jmp    0x264a:0x1a2b4a77
  414e19:	hlt    
  414e1a:	xor    DWORD PTR [edx-0x3a9e88c1],esp
  414e20:	add    cl,bl
  414e22:	mov    edx,0x2d45f3ca
  414e27:	sbb    ch,cl
  414e29:	gs push 0xe42d15ee
  414e2f:	test   DWORD PTR ds:0xbba28583,ebp
  414e35:	scas   al,BYTE PTR es:[edi]
  414e36:	mov    cl,0x45
  414e38:	jp     0x414e2f
  414e3a:	aaa    
  414e3b:	fiadd  DWORD PTR [esi-0x40]
  414e3e:	mov    al,0x22
  414e40:	sti    
  414e41:	jb     0x414e3e
  414e43:	push   ebp
  414e44:	inc    ebp
  414e45:	inc    eax
  414e46:	jle    0x414e83
  414e48:	lahf   
  414e49:	repnz push edx
  414e4b:	cld    
  414e4c:	(bad)  
  414e4d:	xchg   esp,eax
  414e4e:	mov    BYTE PTR ds:0x968e71b9,ch
  414e54:	mov    BYTE PTR [esi+0x6666d2fb],0xc8
  414e5b:	data16 outs dx,BYTE PTR es:[esi]
  414e5e:	fcmovnu st,st(7)
  414e60:	jmp    0x414e09
  414e62:	push   ds
  414e63:	xor    al,0xb7
  414e65:	into   
  414e66:	ins    BYTE PTR es:[edi],dx
  414e67:	fwait
  414e68:	retf   0x5ef7
  414e6b:	inc    eax
  414e6c:	adc    cl,BYTE PTR [edx+0x407ef54]
  414e72:	and    BYTE PTR [edi-0x1c],ch
  414e75:	arpl   WORD PTR [edi+esi*2-0x40],di
  414e79:	or     bh,dh
  414e7b:	ret    
  414e7c:	test   al,0x56
  414e7e:	lahf   
  414e7f:	pop    ecx
  414e80:	and    BYTE PTR [ebx],ah
  414e82:	xchg   DWORD PTR [ebx],ecx
  414e84:	fiadd  DWORD PTR [ebp*4+0x205ac8de]
  414e8b:	scas   al,BYTE PTR es:[edi]
  414e8c:	aam    0xa0
  414e8e:	(bad)  
  414e8f:	dec    DWORD PTR [ecx-0x1d584cfc]
  414e95:	or     al,0x87
  414e97:	jae    0x414f14
  414e99:	dec    ebp
  414e9a:	ins    BYTE PTR es:[edi],dx
  414e9b:	mov    dh,0x4f
  414e9d:	imul   ebx,DWORD PTR [ebp+0x4],0xc97d0719
  414ea4:	cmp    DWORD PTR [ecx],ecx
  414ea6:	loopne 0x414e61
  414ea8:	sbb    al,dh
  414eaa:	add    DWORD PTR [ecx-0x23],0xed0039ce
  414eb1:	push   ss
  414eb2:	push   ss
  414eb3:	ficom  WORD PTR [ebx+edi*1+0x605e6c00]
  414eba:	xchg   edi,eax
  414ebb:	gs jno 0x414e85
  414ebe:	mov    esp,0xe41074a5
  414ec3:	xchg   ebx,eax
  414ec4:	test   eax,0x3db8032c
  414ec9:	mov    bl,0xc7
  414ecb:	fwait
  414ecc:	pop    esp
  414ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ece:	mov    esi,0x9b07f5e4
  414ed3:	imul   ecx
  414ed5:	fisubr DWORD PTR [esi+0x68]
  414ed8:	mov    dh,BYTE PTR ds:0x588d3d6a
  414ede:	inc    esp
  414edf:	dec    ebp
  414ee0:	out    0x50,al
  414ee2:	(bad)  
  414ee3:	sbb    cl,BYTE PTR [ebx-0x7915b410]
  414ee9:	xor    cl,BYTE PTR [eax]
  414eeb:	cwde   
  414eec:	pop    edx
  414eed:	(bad)  
  414eee:	arpl   WORD PTR [ebx-0x644e4707],si
  414ef4:	fistp  QWORD PTR [ebx+edx*2]
  414ef7:	sub    BYTE PTR [edx+0x368e7dbf],al
  414efd:	mov    al,0x4
  414eff:	in     eax,dx
  414f00:	lock push ss
  414f02:	out    0x20,eax
  414f04:	enter  0x3e66,0xbd
  414f08:	popf   
  414f09:	mov    WORD PTR [esi],gs
  414f0b:	xchg   ecx,eax
  414f0c:	scas   eax,DWORD PTR es:[edi]
  414f0d:	mov    al,0x23
  414f0f:	and    dh,dl
  414f11:	pop    esi
  414f12:	outs   dx,DWORD PTR ds:[esi]
  414f13:	sbb    bl,bh
  414f15:	and    eax,0x5f3114e
  414f1a:	mov    edi,0xa916070
  414f1f:	push   ds
  414f20:	pop    es
  414f21:	shl    ah,0x1b
  414f24:	xor    ch,BYTE PTR [ecx-0x4f]
  414f27:	test   BYTE PTR ds:0x3348fa56,ch
  414f2d:	out    dx,eax
  414f2e:	imul   ebp,DWORD PTR ds:0x21974abb,0xffffffa4
  414f35:	pop    edi
  414f36:	icebp  
  414f37:	dec    ecx
  414f38:	lea    ebp,[eax-0x3]
  414f3b:	mov    esi,0xafbb13e9
  414f40:	pop    edx
  414f41:	mov    ah,0xd6
  414f43:	mov    fs,WORD PTR [edx+ebp*1+0x1b]
  414f47:	in     al,0x71
  414f49:	scas   eax,DWORD PTR es:[edi]
  414f4a:	sub    al,0x23
  414f4c:	xchg   ebp,eax
  414f4d:	pop    es
  414f4e:	push   cs
  414f4f:	ja     0x414faa
  414f51:	dec    eax
  414f52:	in     al,0x35
  414f54:	inc    esp
  414f55:	inc    esi
  414f56:	nop
  414f57:	lea    edx,[ecx+eiz*2]
  414f5a:	pusha  
  414f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f5c:	mov    edi,0x8cd34ddd
  414f61:	aas    
  414f62:	mov    DWORD PTR [esi+0x6808656a],edi
  414f68:	(bad)  
  414f6a:	(bad)  
  414f6b:	enter  0x1764,0x53
  414f6f:	xor    DWORD PTR [esi],ebx
  414f71:	test   eax,0x219451f9
  414f76:	cmp    esp,DWORD PTR [edx+ebp*2+0x3651b64f]
  414f7d:	mov    WORD PTR [ebp+0x4f],?
  414f80:	adc    BYTE PTR [eax+0x1c],dl
  414f83:	imul   eax,DWORD PTR [bp+si-0x2cb1],0x653971a2
  414f8c:	daa    
  414f8d:	out    0x75,al
  414f8f:	mov    al,0x5b
  414f91:	jge    0x41500a
  414f93:	jl     0x414f6f
  414f95:	mov    al,0x11
  414f97:	and    eax,0xf4dca1e1
  414f9c:	mov    esi,0x96e7fbb9
  414fa1:	mov    WORD PTR [eax],?
  414fa3:	jle    0x414fe7
  414fa5:	or     al,0x9b
  414fa7:	lea    ecx,[esi]
  414fa9:	mov    ch,0x4e
  414fab:	or     eax,0xb186af93
  414fb0:	jecxz  0x415003
  414fb2:	adc    dh,0x5b
  414fb5:	mov    al,ds:0x190fa862
  414fba:	(bad)
  414fbf:	jge    0x414f7d
  414fc1:	sbb    dh,BYTE PTR ds:0x5efc01b6
  414fc7:	int    0xb8
  414fc9:	pop    edi
  414fca:	call   0x21265acf
  414fcf:	pop    edx
  414fd0:	push   0x30
  414fd2:	mov    esp,0xd2a1446f
  414fd7:	sbb    eax,0x9bb10904
  414fdc:	das    
  414fdd:	adc    bh,dl
  414fdf:	out    0xed,al
  414fe1:	das    
  414fe2:	adc    bl,BYTE PTR [edi-0x53]
  414fe5:	cmp    DWORD PTR [edx],esp
  414fe7:	cwde   
  414fe8:	sbb    edi,edx
  414fea:	mov    ebx,DWORD PTR [eax-0x41]
  414fed:	cli    
  414fee:	jno    0x414fa7
  414ff0:	add    eax,0xa09d18c0
  414ff5:	push   esi
  414ff6:	aam    0xea
  414ff8:	mov    edx,0x16dbce4e
  414ffd:	in     eax,dx
  414ffe:	inc    edi
  414fff:	push   ecx
  415000:	ret    0xb6f5
  415003:	sbb    DWORD PTR [ecx+0x4e],esp
  415006:	in     eax,0x1c
  415008:	dec    edi
  415009:	adc    BYTE PTR [ebx+0x58],ah
  41500c:	pop    ebp
  41500d:	push   0xffffff84
  41500f:	adc    bh,dl
  415011:	mov    ss,WORD PTR [ebp+0x52559d00]
  415017:	into   
  415018:	mul    DWORD PTR [eax+0x67]
  41501b:	and    bh,BYTE PTR [ebx-0x33]
  41501e:	test   al,0x3f
  415020:	and    cl,BYTE PTR [edi]
  415022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415023:	xor    ah,BYTE PTR [ecx+ebx*2+0x6db56f41]
  41502a:	fisubr DWORD PTR [ebp+0x7f88997]
  415030:	cmp    BYTE PTR [edx],dh
  415032:	jno    0x415014
  415034:	and    bh,BYTE PTR [edi]
  415036:	xchg   edi,eax
  415037:	push   0x6b
  415039:	pop    ss
  41503a:	or     esi,DWORD PTR [edi+edi*8]
  41503d:	rcl    BYTE PTR [ebp-0x60],0x1c
  415041:	cmp    DWORD PTR [edx-0x79],esi
  415044:	out    dx,eax
  415045:	xchg   esp,eax
  415046:	in     al,dx
  415047:	cmp    bh,BYTE PTR [edi+ecx*1+0x1db98c0c]
  41504e:	or     al,0xd1
  415050:	ins    DWORD PTR es:[edi],dx
  415051:	sbb    BYTE PTR [ecx],0x2a
  415054:	hlt    
  415055:	lock cli 
  415057:	pop    es
  415058:	xchg   esi,eax
  415059:	les    esi,FWORD PTR [edx-0x712bc1bf]
  41505f:	mov    cl,0xb8
  415061:	sub    dh,bh
  415063:	shr    DWORD PTR [ecx+esi*1-0xeb2010b],cl
  41506a:	push   ebp
  41506b:	daa    
  41506c:	call   0x3633:0x4473fc18
  415073:	fs gs mov ebx,0x7727b574
  41507a:	xor    edx,eax
  41507c:	jnp    0x415067
  41507e:	mov    bl,0xd7
  415080:	push   es
  415081:	imul   edi,DWORD PTR [ecx],0x26685278
  415087:	je     0x4150eb
  415089:	pop    ds
  41508a:	call   0x7319:0xbf1585f5
  415091:	push   ebx
  415092:	mov    al,0xd2
  415094:	or     al,0xe2
  415096:	mov    esi,0xa1b66c03
  41509b:	xor    bh,BYTE PTR [eax+ecx*4]
  41509e:	not    cx
  4150a1:	sbb    DWORD PTR [esi-0x12795a5],edx
  4150a7:	inc    eax
  4150a8:	inc    edi
  4150a9:	jb     0x4150db
  4150ab:	or     ch,BYTE PTR [ebx]
  4150ad:	ror    BYTE PTR ds:0xd18ddfc2,cl
  4150b3:	dec    esi
  4150b4:	cmp    eax,DWORD PTR [edi+0x94330f2]
  4150ba:	daa    
  4150bb:	cmp    al,0x2
  4150bd:	xchg   edi,eax
  4150be:	jg     0x415060
  4150c0:	inc    ebx
  4150c1:	pop    ecx
  4150c2:	adc    esi,DWORD PTR [ecx]
  4150c4:	adc    ebx,DWORD PTR [edx-0x51ed75a6]
  4150ca:	adc    ebx,DWORD PTR [ebp+0x24aa8a0c]
  4150d0:	jae    0x41514f
  4150d2:	dec    esp
  4150d3:	jae    0x415139
  4150d5:	fdivr  st(4),st
  4150d7:	fldenv [eax+0x16c8fd9c]
  4150de:	inc    edi
  4150df:	pusha  
  4150e0:	mov    WORD PTR [eax-0x762863c1],ds
  4150e6:	xchg   esp,eax
  4150e7:	dec    edi
  4150e8:	leave  
  4150e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150ea:	jnp    0x41506f
  4150ec:	shr    DWORD PTR [edx],0x71
  4150ef:	outs   dx,BYTE PTR ds:[esi]
  4150f0:	sti    
  4150f1:	int    0x92
  4150f3:	and    DWORD PTR [ecx+edx*1+0x65116ccd],esp
  4150fa:	clc    
  4150fb:	popf   
  4150fc:	sbb    ebp,ebx
  4150fe:	push   ecx
  4150ff:	mov    edx,0xbea24fbb
  415104:	gs ret 0x19dd
  415108:	cmp    eax,0x7ae88251
  41510d:	scas   al,BYTE PTR es:[edi]
  41510e:	mov    edx,0xe138b85
  415113:	jp     0x415128
  415115:	stc    
  415116:	mov    esi,0x306483cc
  41511b:	or     al,0xbd
  41511d:	jp     0x415149
  41511f:	push   0x3a6a8e25
  415124:	mov    dl,BYTE PTR [esi-0x5456b1bf]
  41512a:	mov    edi,DWORD PTR [ecx-0x112addec]
  415130:	mov    bl,0x4a
  415132:	cmp    al,0xdf
  415134:	cmp    esp,DWORD PTR [edx]
  415136:	fidivr WORD PTR [edi-0x7f9d58df]
  41513c:	pop    eax
  41513d:	sahf   
  41513e:	int3   
  41513f:	imul   ecx,DWORD PTR [ecx+0x40],0x3441dd8
  415146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415147:	fistp  WORD PTR [ebx]
  415149:	das    
  41514a:	add    edi,DWORD PTR [eax+esi*1+0x7a7fc3a0]
  415151:	xor    al,0x5f
  415153:	adc    edi,esi
  415155:	dec    edi
  415156:	es mov bl,0x36
  415159:	je     0x41519c
  41515b:	inc    esp
  41515c:	jp     0x415161
  41515e:	mov    WORD PTR [edi-0x32e26c5d],?
  415164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415165:	cmp    al,0x5f
  415167:	adc    ah,BYTE PTR [edi-0x7d356f8c]
  41516d:	cli    
  41516e:	arpl   WORD PTR [ebp-0x6a],di
  415171:	ret    0x160a
  415174:	sahf   
  415175:	retf   0xb8b8
  415178:	pop    ss
  415179:	jmp    0x415141
  41517b:	adc    eax,0xbc358e81
  415180:	js     0x415129
  415182:	jo     0x4151a7
  415184:	aaa    
  415185:	idiv   edi
  415187:	push   edx
  415188:	inc    esi
  415189:	pop    ebx
  41518a:	std    
  41518b:	add    al,0x84
  41518d:	int3   
  41518e:	popa   
  41518f:	pop    ecx
  415190:	jle    0x41517f
  415192:	jmp    0xaeda:0x103133fe
  415199:	mov    edi,0x64f32d0
  41519e:	fnstcw WORD PTR [esi-0x69]
  4151a1:	shr    BYTE PTR [ebx-0x1],1
  4151a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151a5:	scas   al,BYTE PTR es:[edi]
  4151a6:	mov    ebx,0xae2b6819
  4151ab:	xor    BYTE PTR [ecx-0x74],ch
  4151ae:	xchg   ebx,eax
  4151af:	xchg   esi,eax
  4151b0:	scas   al,BYTE PTR es:[edi]
  4151b1:	div    BYTE PTR ds:[edx]
  4151b4:	fcmovnb st,st(3)
  4151b6:	push   ecx
  4151b7:	mov    sp,0x978d
  4151bb:	xor    ch,BYTE PTR [edi+0x41]
  4151be:	mov    DWORD PTR [esi-0x57],edx
  4151c1:	sbb    eax,0x29e3faad
  4151c6:	mov    eax,0x71428a8c
  4151cb:	cli    
  4151cc:	mov    eax,ds:0x5db417ea
  4151d1:	stos   DWORD PTR es:[edi],eax
  4151d2:	retf   0x9d68
  4151d5:	push   es
  4151d6:	enter  0x1e18,0xb8
  4151da:	(bad)  
  4151db:	in     al,dx
  4151dc:	lock enter 0x35fa,0x43
  4151e1:	push   edi
  4151e2:	and    eax,0x1f0033f6
  4151e7:	les    esi,FWORD PTR [esi-0x227bcf87]
  4151ed:	and    BYTE PTR [ebp-0x7a],ah
  4151f0:	mov    esi,0xce1131e
  4151f5:	mov    ecx,DWORD PTR [ebx-0x331dac49]
  4151fb:	cdq    
  4151fc:	mov    ecx,0xd5cea16
  415201:	mov    esi,0x22b6c924
  415206:	mov    DWORD PTR [esi-0x44],esi
  415209:	imul   edx,DWORD PTR [eax-0x21],0xffffffdc
  41520d:	(bad)  
  41520f:	cwde   
  415210:	popf   
  415211:	stc    
  415212:	sub    DWORD PTR [eax],esp
  415214:	les    ebx,FWORD PTR [edx]
  415216:	retf   0xa1ca
  415219:	imul   esi,DWORD PTR [ebx-0x6687bb89],0x3
  415220:	mov    bl,0x71
  415222:	add    al,0x4c
  415224:	aas    
  415225:	push   esi
  415226:	repnz (bad) 
  415228:	mov    ecx,0x894c7e8b
  41522d:	push   esp
  41522e:	mov    esp,0x540ece85
  415233:	xlat   BYTE PTR ds:[ebx]
  415234:	ss push ebx
  415236:	cmp    ah,bh
  415238:	jle    0x415227
  41523a:	leave  
  41523b:	mov    edx,0x298f195c
  415240:	jle    0x415258
  415242:	idiv   DWORD PTR ds:0xb2447664
  415248:	cmp    BYTE PTR [edi+0x37c15d0c],ah
  41524e:	sbb    dl,al
  415250:	daa    
  415251:	xor    DWORD PTR [ecx],esp
  415253:	adc    edx,edx
  415255:	cmp    eax,edx
  415257:	mov    fs,WORD PTR [esi-0x7f]
  41525a:	lods   eax,DWORD PTR ds:[esi]
  41525b:	in     eax,0x9f
  41525d:	mov    bl,0xd1
  41525f:	out    0xa1,al
  415261:	cmp    ecx,eax
  415263:	pop    esi
  415264:	stc    
  415265:	outs   dx,DWORD PTR ds:[esi]
  415266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415267:	mov    edi,0x59413d4c
  41526c:	dec    edx
  41526d:	sbb    BYTE PTR [ecx+0x3b3b791e],ah
  415273:	(bad)  
  415275:	ss das 
  415277:	push   cs
  415278:	xchg   ebp,eax
  415279:	aaa    
  41527a:	or     BYTE PTR [ecx+ecx*4],bh
  41527d:	dec    ebp
  41527e:	xor    edx,DWORD PTR [ebx]
  415280:	jb     0x415204
  415282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415283:	ins    BYTE PTR es:[edi],dx
  415284:	fisubr DWORD PTR gs:[ecx-0x7e]
  415288:	ins    BYTE PTR es:[edi],dx
  415289:	lds    eax,FWORD PTR [edx+0xada2955]
  41528f:	cmp    eax,0x3f0f6be
  415294:	int    0x38
  415296:	repz mov esi,0x3447088e
  41529c:	sbb    eax,DWORD PTR [edi-0x4a0f089b]
  4152a2:	push   ds
  4152a3:	push   ss
  4152a4:	jae    0x4152ef
  4152a6:	gs jecxz 0x4152eb
  4152a9:	sub    bl,ah
  4152ab:	pop    ss
  4152ac:	mov    ds:0x8f0b9b09,eax
  4152b1:	sub    DWORD PTR [eax+0x66],ebx
  4152b4:	adc    BYTE PTR [edi-0x1f7b088b],cl
  4152ba:	jmp    0xcfb9:0x40b82bfc
  4152c1:	ja     0x4152c7
  4152c3:	sbb    BYTE PTR [ecx+0x614676ae],0x88
  4152ca:	sbb    ah,BYTE PTR [ebp-0x24]
  4152cd:	fnstcw WORD PTR [edx+ecx*1]
  4152d0:	and    BYTE PTR [edi-0xa22386d],bh
  4152d6:	or     al,0xa6
  4152d8:	xor    cl,dh
  4152da:	push   ecx
  4152db:	xchg   ebp,eax
  4152dc:	add    eax,0x88e1f090
  4152e1:	xchg   ebx,eax
  4152e2:	sub    bh,BYTE PTR ds:0x8c6ffc77
  4152e8:	dec    esi
  4152e9:	in     eax,0xc
  4152eb:	mov    ch,0x14
  4152ed:	stos   DWORD PTR es:[edi],eax
  4152ee:	mov    eax,0x8579730b
  4152f3:	les    esi,FWORD PTR [esi]
  4152f5:	mov    bl,0xa6
  4152f7:	xor    al,0x3
  4152f9:	stc    
  4152fa:	xor    cl,BYTE PTR ds:0x6fc28cf
  415300:	outs   dx,BYTE PTR ds:[esi]
  415301:	in     eax,0x43
  415303:	mov    esp,DWORD PTR [ecx+esi*4-0x8]
  415307:	dec    edx
  415308:	push   ds
  415309:	mov    BYTE PTR [eax+0x2a],bh
  41530c:	push   ebp
  41530d:	xor    eax,0xade6346a
  415312:	bnd jo 0x415306
  415315:	add    ax,0x54d5
  415319:	pop    eax
  41531a:	int    0xd8
  41531c:	in     al,dx
  41531d:	and    bl,BYTE PTR [edi+0x60]
  415320:	xor    eax,0xa5f4a7da
  415325:	mov    dh,0xb
  415327:	call   DWORD PTR [eax+ebp*2-0x4c5c135c]
  41532e:	jo     0x415379
  415330:	fisub  WORD PTR [eax+0xe]
  415333:	inc    edx
  415334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415335:	cmp    BYTE PTR [esi+ecx*2-0x430de6b0],dl
  41533c:	mov    esp,0xc3932c2c
  415341:	add    eax,0x5d401a1d
  415346:	push   0x6b
  415348:	pushf  
  415349:	sbb    al,0xee
  41534b:	les    esi,FWORD PTR [edi-0x549f76b]
  415351:	ss scas al,BYTE PTR es:[edi]
  415353:	lods   al,BYTE PTR ds:[esi]
  415354:	mov    al,ds:0x5c83cf8
  415359:	cwde   
  41535a:	pop    edx
  41535b:	push   eax
  41535c:	das    
  41535d:	mov    eax,ds:0xc320b0f6
  415362:	mov    es,ebp
  415364:	enter  0xa7e1,0xed
  415368:	inc    ebx
  415369:	xor    BYTE PTR [ebp+0x16],dl
  41536c:	sbb    DWORD PTR [ecx],edx
  41536e:	dec    eax
  41536f:	imul   esp,ebx,0xa33749d3
  415375:	or     al,0xc5
  415377:	cmc    
  415378:	fidiv  WORD PTR [eax-0x4a]
  41537b:	xchg   esp,eax
  41537c:	jbe    0x41533a
  41537e:	adc    ah,BYTE PTR [ecx]
  415380:	das    
  415381:	int3   
  415382:	scas   eax,DWORD PTR es:[edi]
  415383:	scas   eax,DWORD PTR es:[edi]
  415384:	sub    eax,DWORD PTR [ebx-0xb2c0753]
  41538a:	lahf   
  41538b:	or     al,0xcd
  41538d:	pminub mm1,QWORD PTR [ebx]
  415390:	inc    ebp
  415391:	aas    
  415392:	and    al,0xfc
  415394:	in     al,dx
  415395:	xchg   DWORD PTR ds:0xb3c694e2,esi
  41539b:	dec    ebx
  41539c:	test   eax,0x2aba6e90
  4153a1:	mov    dh,0xed
  4153a3:	call   0xb2e9:0xc6b6df81
  4153aa:	iret   
  4153ab:	les    edx,FWORD PTR [ebx]
  4153ad:	cmp    BYTE PTR [eax],ah
  4153af:	sub    BYTE PTR fs:[edi-0x522a5fe],0x52
  4153b7:	into   
  4153b8:	into   
  4153b9:	mov    eax,ds:0x561f824c
  4153be:	jns    0x41538f
  4153c0:	shl    edi,1
  4153c2:	xchg   ecx,eax
  4153c3:	push   0x5d
  4153c5:	(bad)  
  4153c6:	xor    esi,DWORD PTR [edi+0x73fc8cbb]
  4153cc:	jno    0x4153c4
  4153ce:	into   
  4153cf:	cli    
  4153d0:	bound  esp,QWORD PTR [eax+edi*2]
  4153d3:	cld    
  4153d4:	mov    ds:0xac102d5b,al
  4153d9:	and    ebx,esi
  4153db:	mov    esi,0x99e93cfb
  4153e0:	popf   
  4153e1:	sub    bl,BYTE PTR [ebp+eiz*8-0x7b]
  4153e5:	cdq    
  4153e6:	stc    
  4153e7:	repnz lds esp,FWORD PTR [ecx+0x57]
  4153eb:	inc    ebx
  4153ec:	aas    
  4153ed:	dec    esi
  4153ee:	clc    
  4153ef:	pop    eax
  4153f0:	pop    ecx
  4153f1:	sbb    bh,BYTE PTR [edx-0xf]
  4153f4:	inc    edi
  4153f5:	jbe    0x415469
  4153f7:	jp     0x41539c
  4153f9:	add    al,0xb1
  4153fc:	int    0x7f
  4153fe:	imul   edi,DWORD PTR [edx-0x4e],0x53
  415402:	jo     0x415446
  415404:	(bad)  
  415405:	add    edx,edx
  415407:	jno    0x4153bd
  415409:	sbb    al,0x22
  41540b:	or     al,0x11
  41540d:	inc    ebp
  41540e:	repz mov dl,0x3b
  415411:	test   eax,0x74a9034b
  415416:	ret    
  415417:	les    edi,FWORD PTR [eax+ebp*8+0x7f]
  41541b:	jne    0x415436
  41541d:	push   esi
  41541e:	stos   DWORD PTR es:[edi],eax
  41541f:	push   edx
  415420:	jmp    0x93ae3a28
  415425:	nop
  415426:	jmp    0xe91e:0x5c6f2709
  41542d:	push   0xffffffd1
  41542f:	pop    eax
  415430:	mov    cl,0xbc
  415432:	inc    ebp
  415433:	loope  0x41548e
  415435:	lds    edx,FWORD PTR [edx+0x55]
  415438:	imul   ecx,DWORD PTR [eax],0x77
  41543b:	scas   al,BYTE PTR es:[edi]
  41543c:	xchg   edi,eax
  41543d:	xchg   ebp,eax
  41543e:	fsubr  st,st(4)
  415440:	imul   esp,DWORD PTR [edi],0xd06753c0
  415446:	dec    eax
  415447:	mul    DWORD PTR [ebp-0x13]
  41544a:	cs and al,0x8d
  41544d:	(bad)  
  41544e:	je     0x4154bd
  415450:	repnz xchg ecx,eax
  415452:	or     DWORD PTR [ebx],ebx
  415454:	mov    ds:0xcb867c7c,eax
  415459:	sti    
  41545a:	shl    DWORD PTR [esi+ebp*1-0x70],cl
  41545e:	aam    0xc2
  415460:	mov    ?,WORD PTR [edx-0x5ceb2227]
  415466:	inc    esi
  415467:	jp     0x415472
  415469:	data16 or BYTE PTR [ecx+0x62b8c759],0x3e
  415471:	jae    0x4154a1
  415473:	retf   
  415474:	or     dh,BYTE PTR [edx]
  415476:	mov    eax,DWORD PTR [ebx]
  415478:	dec    edx
  415479:	and    edx,DWORD PTR [eax+0x1b1a9794]
  41547f:	mov    cl,0x4b
  415481:	mov    fs,WORD PTR [esi-0x515a4be7]
  415487:	daa    
  415488:	pop    edi
  415489:	mov    ebx,0xe06f57aa
  41548e:	out    0x4e,al
  415490:	dec    eax
  415491:	dec    edi
  415492:	and    DWORD PTR [ebp+0x135388d3],eax
  415498:	jae    0x41543b
  41549a:	aas    
  41549b:	mov    esp,0xdd373b42
  4154a0:	inc    edi
  4154a1:	mov    ebx,0x68710714
  4154a6:	iret   
  4154a7:	aaa    
  4154a8:	outs   dx,DWORD PTR ds:[esi]
  4154a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154aa:	inc    esi
  4154ab:	mov    al,ds:0x86ab9bee
  4154b0:	cld    
  4154b1:	dec    ebp
  4154b2:	ret    
  4154b3:	xchg   ebp,eax
  4154b4:	or     DWORD PTR ds:0xfb1234d1,ecx
  4154ba:	xchg   ebx,eax
  4154bb:	cmp    BYTE PTR [esi],0x7
  4154be:	xor    eax,0xb4624a38
  4154c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154c4:	adc    cl,BYTE PTR [ecx+0x17]
  4154c7:	int3   
  4154c8:	(bad)  
  4154c9:	std    
  4154ca:	add    dh,BYTE PTR [ebp+0x1ca013cb]
  4154d0:	adc    ch,ah
  4154d2:	popf   
  4154d3:	out    0x6,eax
  4154d5:	lods   al,BYTE PTR ds:[esi]
  4154d6:	cmp    eax,0x1bc87164
  4154db:	imul   bl
  4154dd:	aaa    
  4154de:	out    dx,al
  4154df:	ds adc eax,0x4511f0db
  4154e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154e6:	jl     0x415500
  4154e8:	aas    
  4154e9:	add    eax,0x4abd950c
  4154ee:	pop    edi
  4154ef:	jmp    0x7f3a2947
  4154f4:	inc    esp
  4154f5:	cs pop ecx
  4154f7:	mov    dl,BYTE PTR [ebx+0x55a9616f]
  4154fd:	and    BYTE PTR ss:0xb228d5b0,0x41
  415505:	jbe    0x41548a
  415507:	inc    eax
  415508:	retf   0x7026
  41550b:	dec    edx
  41550c:	jae    0x415528
  41550e:	out    dx,eax
  41550f:	and    eax,0x316b2c8f
  415514:	mov    al,0x58
  415516:	mov    bl,0xf4
  415518:	cs aad 0xcc
  41551b:	gs dec edx
  41551d:	cdq    
  41551e:	mov    WORD PTR [edx+0x2d],ss
  415521:	sub    eax,esi
  415523:	jmp    0x4154eb
  415525:	jo     0x415507
  415527:	add    DWORD PTR [eax+0x483bd947],esi
  41552d:	addr16 and al,0x4d
  415530:	(bad)  
  415531:	fs enter 0xdb04,0x93
  415536:	jl     0x41555e
  415538:	rcl    edx,cl
  41553a:	das    
  41553b:	and    cl,BYTE PTR [ebx-0x79]
  41553e:	pushf  
  41553f:	xchg   edi,eax
  415540:	add    eax,DWORD PTR [ebx+0xa02f465]
  415546:	std    
  415547:	push   cs
  415548:	mov    eax,0xea17a354
  41554d:	pop    ecx
  41554e:	stos   DWORD PTR es:[edi],eax
  41554f:	xchg   ebx,eax
  415550:	rcl    BYTE PTR [esi+0x5d5119f1],1
  415556:	lods   al,BYTE PTR ds:[esi]
  415557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415558:	add    edi,esp
  41555a:	or     BYTE PTR [ecx],dh
  41555c:	arpl   WORD PTR [ecx-0x5ba2cac4],bp
  415562:	sar    DWORD PTR [ecx+esi*1+0x3dd4fc7b],1
  415569:	push   ss
  41556a:	push   ebx
  41556b:	mov    al,ds:0xbb940941
  415570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415571:	jle    0x415591
  415573:	xchg   esp,eax
  415574:	iret   
  415575:	ds inc edx
  415577:	das    
  415578:	xor    ecx,eax
  41557a:	mov    esi,0x93977ebb
  41557f:	dec    esp
  415580:	das    
  415581:	and    BYTE PTR [eax],bh
  415583:	and    eax,0x59b6a56
  415588:	or     eax,0xca17767d
  41558d:	aas    
  41558e:	push   ds
  41558f:	adc    ecx,DWORD PTR [ebx+0x6a811dea]
  415595:	(bad)  
  415596:	out    dx,eax
  415597:	xchg   edx,eax
  415598:	mov    dl,0xd5
  41559a:	inc    esi
  41559b:	inc    ebx
  41559c:	pop    ds
  41559d:	sbb    dh,BYTE PTR [ebx+esi*4]
  4155a0:	or     dh,BYTE PTR [ebp-0x594f8f4e]
  4155a6:	call   0x54d4:0x498ec054
  4155ad:	in     al,0x4f
  4155af:	jp     0x415586
  4155b1:	(bad)  
  4155b2:	or     dh,BYTE PTR [eax+ecx*1-0x61]
  4155b6:	cmp    dl,BYTE PTR [esp+edx*1+0x30435180]
  4155bd:	mov    esp,0x40a66ed
  4155c2:	add    BYTE PTR [esi-0x17a5eb5d],bh
  4155c8:	jg     0x415619
  4155ca:	xchg   esp,eax
  4155cb:	mov    al,ds:0xa379711
  4155d0:	xchg   edx,eax
  4155d1:	scas   al,BYTE PTR es:[edi]
  4155d2:	add    ch,BYTE PTR [esi+0x2c]
  4155d5:	leave  
  4155d6:	lahf   
  4155d7:	inc    ecx
  4155d8:	call   DWORD PTR [esi-0x31]
  4155db:	xchg   edi,eax
  4155dc:	repz idiv esi
  4155df:	push   0x2b
  4155e1:	imul   edx,DWORD PTR [edi-0x76],0xfffffffa
  4155e5:	sbb    esi,DWORD PTR [eax+esi*4+0x4c]
  4155e9:	invd   
  4155eb:	pop    esp
  4155ec:	xchg   ebp,eax
  4155ed:	adc    dl,BYTE PTR [eax]
  4155ef:	jb     0x4155de
  4155f1:	dec    eax
  4155f2:	bound  edx,QWORD PTR [ebx-0x2be10cd7]
  4155f8:	gs retf 
  4155fa:	mov    esp,DWORD PTR [esi+eax*1]
  4155fd:	xchg   dl,al
  4155ff:	xchg   edx,eax
  415600:	neg    BYTE PTR [edx+edx*8+0x26]
  415604:	clc    
  415605:	dec    eax
  415606:	dec    ebx
  415607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415608:	cwde   
  415609:	test   DWORD PTR [ecx-0xb],edx
  41560c:	mov    dh,0x33
  41560e:	xchg   esp,eax
  41560f:	das    
  415610:	xchg   ebx,eax
  415611:	xlat   BYTE PTR ds:[ebx]
  415612:	jne    0x4155a0
  415614:	sub    al,0x16
  415616:	sbb    dl,BYTE PTR [eax+0x5c38d164]
  41561c:	mov    eax,0xac6de64b
  415621:	les    edx,FWORD PTR [esi+0x13ea8981]
  415627:	fsubr  DWORD PTR [ebp-0x50dd84bc]
  41562d:	scas   al,BYTE PTR es:[edi]
  41562e:	inc    edi
  41562f:	mov    ebp,0xad94769
  415634:	ds ja  0x4155fe
  415637:	aaa    
  415638:	mov    edi,edi
  41563a:	sub    BYTE PTR [ebp+0x4ba7faa4],ah
  415640:	hlt    
  415641:	(bad)  
  415643:	jl     0x4156c3
  415645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415646:	push   0xffffff9b
  415648:	push   edi
  415649:	test   bl,ah
  41564b:	mov    dl,0xcf
  41564d:	cmc    
  41564e:	test   ebx,edi
  415650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415651:	leave  
  415652:	leave  
  415653:	and    al,0x4a
  415655:	jns    0x4155e4
  415657:	nop
  415658:	dec    ecx
  415659:	shl    BYTE PTR [ebx-0x3b49d6f6],1
  41565f:	xor    eax,DWORD PTR [edi-0x4ff0b4d8]
  415665:	add    BYTE PTR [edi],cl
  415667:	test   BYTE PTR [edi+0x136b08b3],0xd6
  41566e:	mov    esi,0x19f6a70a
  415673:	cmp    BYTE PTR [ebx+ebp*1],dl
  415676:	icebp  
  415677:	mov    ebp,0x8ac650ec
  41567c:	pop    ecx
  41567d:	xchg   esp,eax
  41567e:	(bad)  
  41567f:	(bad)  
  415680:	sbb    eax,0x67e9891a
  415685:	jg     0x41566a
  415687:	and    al,0xe0
  415689:	jo     0x41567b
  41568b:	inc    BYTE PTR [esi]
  41568d:	jnp    0x415663
  41568f:	mov    dl,0xd3
  415691:	ret    0xd547
  415694:	inc    eax
  415695:	fisttp DWORD PTR [edx]
  415697:	lea    edx,[ecx-0x37]
  41569a:	jne    0x4156f2
  41569c:	or     al,0x8e
  41569e:	ins    DWORD PTR es:[edi],dx
  41569f:	test   DWORD PTR [edi+0x39648cca],ebp
  4156a5:	dec    ecx
  4156a6:	out    dx,al
  4156a7:	nop
  4156a8:	pop    ebx
  4156a9:	(bad)
  4156ac:	scas   al,BYTE PTR es:[edi]
  4156ad:	mov    dl,0x28
  4156af:	ret    
  4156b0:	jge    0x415638
  4156b2:	push   edi
  4156b3:	jno    0x41570e
  4156b5:	bound  ecx,QWORD PTR [esi+0xb]
  4156b8:	(bad)  
  4156b9:	push   eax
  4156ba:	pop    ebp
  4156bb:	sub    ebp,DWORD PTR [ebx]
  4156bd:	push   cs
  4156be:	(bad)  
  4156bf:	push   edi
  4156c0:	mov    ds:0x70b67ec1,eax
  4156c5:	sbb    eax,0xcf3ab7a2
  4156ca:	pop    esi
  4156cb:	inc    edx
  4156cc:	sub    al,0xe3
  4156ce:	outs   dx,DWORD PTR ds:[esi]
  4156cf:	add    esp,DWORD PTR [esi-0x77369d00]
  4156d5:	pop    ecx
  4156d6:	mov    BYTE PTR [eax+0x41],bl
  4156d9:	dec    ebp
  4156da:	call   0x66ca:0xc1fc
  4156e0:	adc    al,0x83
  4156e2:	adc    al,0x6c
  4156e4:	add    BYTE PTR [ecx],0x5d
  4156e7:	pop    ecx
  4156e8:	rcr    DWORD PTR [esi+edi*1],0xd1
  4156ec:	cmp    esi,DWORD PTR [ecx+0x44]
  4156ef:	lock repz and al,0x95
  4156f3:	sub    ebp,DWORD PTR [esi]
  4156f5:	dec    ecx
  4156f6:	fisubr WORD PTR ds:0x5bc24396
  4156fc:	add    eax,0x9832f2f8
  415701:	sub    DWORD PTR [ebx-0x5f34b070],ebp
  415707:	xor    ah,BYTE PTR [esi+0x51]
  41570a:	xchg   esp,eax
  41570b:	(bad)  
  41570c:	dec    ebx
  41570d:	das    
  41570e:	lods   al,BYTE PTR ds:[esi]
  41570f:	ins    DWORD PTR es:[edi],dx
  415710:	add    bh,dl
  415712:	add    dh,ch
  415714:	mov    ds:0x5b2cbaf,al
  415719:	xchg   ebx,eax
  41571a:	std    
  41571b:	out    dx,eax
  41571c:	out    dx,eax
  41571d:	test   al,0x7a
  41571f:	push   ebx
  415720:	(bad)  
  415721:	jnp    0x4156a4
  415723:	aas    
  415724:	mov    cl,0xbe
  415726:	push   edi
  415727:	sub    eax,0x373bc853
  41572c:	sub    edx,DWORD PTR [esi]
  41572e:	popa   
  41572f:	or     eax,0x1f7462d5
  415734:	cmc    
  415735:	xchg   edi,eax
  415736:	inc    ebx
  415737:	xchg   ebx,eax
  415738:	add    BYTE PTR [eax+0x6a],dh
  41573b:	cld    
  41573c:	jmp    0xf2d6:0xdecb38e0
  415743:	hlt    
  415744:	sti    
  415745:	dec    eax
  415746:	mov    bl,0x9f
  415748:	fs xchg esi,eax
  41574a:	xchg   DWORD PTR [ebx],ebp
  41574c:	mov    bl,BYTE PTR [esi+eiz*8]
  41574f:	mov    bh,0x34
  415751:	and    al,0x8
  415753:	xchg   esp,eax
  415754:	cmp    BYTE PTR [esi-0x7289e4d3],0x7
  41575b:	test   eax,0x6a543aaf
  415760:	cld    
  415761:	sub    ebp,DWORD PTR [edx]
  415763:	test   al,0x84
  415765:	sbb    cl,dl
  415767:	out    dx,al
  415768:	sbb    bh,BYTE PTR [ebx-0x19]
  41576b:	push   cs
  41576c:	sub    al,0xd7
  41576e:	push   ss
  41576f:	in     al,0x4d
  415771:	(bad)  
  415772:	mov    edi,0xadbe23f1
  415777:	ret    
  415778:	and    eax,0x80044cba
  41577d:	pop    ds
  41577e:	push   0x16db3349
  415783:	mov    cl,0x82
  415785:	mov    WORD PTR [ebp-0x75],?
  415788:	add    BYTE PTR [eax+edx*8],0x71
  41578c:	push   eax
  41578d:	and    ebp,DWORD PTR [ebp+0x60]
  415790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415792:	in     al,dx
  415793:	pop    esp
  415794:	scas   al,BYTE PTR es:[edi]
  415795:	test   al,0x13
  415797:	cmp    ebx,ecx
  415799:	pusha  
  41579a:	cmp    al,0xc6
  41579c:	xchg   edi,eax
  41579d:	(bad)  
  41579e:	(bad)  [ecx+0x2901ed86]
  4157a4:	add    edx,edx
  4157a6:	addr16 mov bl,bh
  4157a9:	aad    0xd
  4157ab:	out    0xb4,eax
  4157ad:	in     eax,0x31
  4157af:	xchg   edi,eax
  4157b0:	pcmpgtw mm5,mm5
  4157b3:	out    0xae,al
  4157b5:	pusha  
  4157b6:	cmp    BYTE PTR [esi],cl
  4157b8:	cs mov bh,0x9a
  4157bb:	in     eax,0x41
  4157bd:	sar    DWORD PTR [esi+edi*1],1
  4157c0:	mov    bl,0xc0
  4157c2:	out    dx,eax
  4157c3:	hlt    
  4157c4:	sub    DWORD PTR [edx-0x196fc393],ebp
  4157ca:	mov    ch,0xfe
  4157cc:	mov    ecx,0x552e669b
  4157d1:	xchg   ecx,eax
  4157d2:	neg    cl
  4157d4:	push   esi
  4157d5:	dec    eax
  4157d6:	mov    bh,0xb
  4157d8:	das    
  4157d9:	pop    ss
  4157da:	fadd   st(1),st
  4157dd:	ret    0xa778
  4157e0:	retf   
  4157e1:	outs   dx,DWORD PTR ds:[esi]
  4157e2:	mov    ds:0x21d3138f,al
  4157e7:	or     DWORD PTR [eax+0x3d7f8945],edi
  4157ed:	test   DWORD PTR [edi],eax
  4157ef:	mov    bh,0xab
  4157f1:	push   ds
  4157f2:	icebp  
  4157f3:	rol    BYTE PTR [ecx],cl
  4157f5:	or     BYTE PTR [edx-0x1f174db5],bl
  4157fb:	mov    ah,0xdf
  4157fd:	push   ds
  4157fe:	push   ebp
  4157ff:	leave  
  415800:	scas   eax,DWORD PTR es:[edi]
  415801:	mov    al,ds:0x35537bb4
  415806:	mov    ecx,DWORD PTR [edx+eiz*8-0x38052e1e]
  41580d:	dec    ecx
  41580e:	shl    DWORD PTR [esi-0x10],0xce
  415812:	outs   dx,DWORD PTR ds:[esi]
  415813:	push   edi
  415814:	jl     0x415887
  415816:	popf   
  415817:	push   ss
  415818:	mov    ch,0x9d
  41581a:	addr16 je 0x415894
  41581d:	test   DWORD PTR [esi-0x2b],edi
  415820:	pop    eax
  415821:	xchg   ecx,eax
  415822:	call   0x368969ad
  415827:	and    BYTE PTR [ebp+0x67133845],0xc1
  41582e:	and    al,0x54
  415830:	das    
  415831:	into   
  415832:	bound  ebp,QWORD PTR [esp+ebp*4-0x7a78abb4]
  415839:	data16 sahf 
  41583b:	xor    al,0xa1
  41583d:	mov    edx,0x880b43a
  415842:	pop    ecx
  415843:	daa    
  415844:	js     0x4157f8
  415846:	jge    0x4157fe
  415848:	cmp    eax,0x13ef6e1a
  41584d:	cmp    dl,BYTE PTR [eax-0xa129d7c]
  415853:	jae    0x415853
  415855:	and    DWORD PTR [eax+0x6563483b],ecx
  41585b:	rol    BYTE PTR ds:0x8c71bebc,cl
  415861:	add    al,0xb
  415863:	mov    DWORD PTR [eax],edi
  415865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415866:	push   cs
  415867:	adc    ch,dl
  415869:	jnp    0x4158d7
  41586b:	clc    
  41586c:	jno    0x4158ad
  41586e:	cmp    eax,0x703bff03
  415873:	inc    esp
  415874:	out    0xf2,eax
  415876:	in     eax,dx
  415877:	fsub   st(2),st
  415879:	in     al,dx
  41587a:	fsubr  st,st(6)
  41587c:	mov    eax,ds:0xdae60571
  415881:	test   bh,dh
  415883:	sti    
  415884:	shr    DWORD PTR [edx],cl
  415886:	popf   
  415887:	inc    ebx
  415888:	arpl   WORD PTR [eax+0x76],ax
  41588b:	mov    bl,0xb2
  41588d:	dec    edi
  41588e:	jmp    0x41590e
  415890:	push   0x88a1759
  415895:	iret   
  415896:	sbb    ch,BYTE PTR [eax-0x1]
  415899:	shl    ebx,0x6
  41589c:	fcmovne st,st(0)
  41589e:	ins    DWORD PTR es:[edi],dx
  41589f:	mov    eax,ds:0xb5cd30aa
  4158a4:	stos   DWORD PTR es:[edi],eax
  4158a5:	dec    esp
  4158a6:	aam    0x54
  4158a8:	jl     0x415924
  4158aa:	fwait
  4158ab:	in     eax,0xde
  4158ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158ae:	aam    0x24
  4158b0:	push   eax
  4158b1:	jmp    0x3e16d566
  4158b6:	add    ah,ch
  4158b8:	jecxz  0x4158a3
  4158ba:	or     BYTE PTR [edx+ebp*1-0x69],ch
  4158be:	jl     0x415896
  4158c0:	mov    ch,0x95
  4158c2:	xchg   edi,eax
  4158c3:	imul   BYTE PTR [edi+0x1a]
  4158c6:	fmul   DWORD PTR [ebp-0x3c]
  4158c9:	mov    ebx,esi
  4158cb:	je     0x4158a7
  4158cd:	adc    al,0xb9
  4158cf:	push   0x29cc33e6
  4158d4:	mov    eax,ds:0x4e529fda
  4158d9:	mov    ecx,0xfd5f4ffd
  4158de:	pop    ecx
  4158df:	ins    DWORD PTR es:[edi],dx
  4158e0:	lods   al,BYTE PTR ds:[esi]
  4158e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158e2:	scas   eax,DWORD PTR es:[edi]
  4158e3:	stos   DWORD PTR es:[edi],eax
  4158e4:	ficom  DWORD PTR [ecx+0x5f]
  4158e7:	pop    esi
  4158e8:	int    0x2b
  4158ea:	mov    ebp,0x533568cc
  4158ef:	std    
  4158f0:	call   0x4253:0x68aac0ee
  4158f7:	cmp    edx,DWORD PTR [edi]
  4158f9:	adc    eax,0x8dabc213
  4158fe:	ja     0x4158a6
  415900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415901:	in     al,dx
  415902:	xor    BYTE PTR [edi],cl
  415904:	fwait
  415905:	mov    ecx,0xffb37bae
  41590a:	repnz pop ebx
  41590c:	push   0xfffffff5
  41590e:	xor    eax,0x244908b5
  415913:	and    edx,DWORD PTR [eax+0x19]
  415916:	scas   al,BYTE PTR es:[edi]
  415917:	rcr    DWORD PTR [esi+0x2a],0xfe
  41591b:	sbb    DWORD PTR [eax+eiz*2+0x4732680b],0x1a6c0717
  415926:	leave  
  415927:	pusha  
  415928:	(bad)  
  415929:	xlat   BYTE PTR ds:[ebx]
  41592a:	call   0xd509db5f
  41592f:	inc    ecx
  415930:	push   esp
  415931:	or     BYTE PTR [eax-0x6e],dl
  415934:	inc    eax
  415935:	and    al,BYTE PTR [esi+0x4b]
  415938:	adc    cl,bl
  41593a:	mov    dl,0xf1
  41593c:	pop    eax
  41593d:	add    eax,0x3031bafa
  415942:	fldenv [eax]
  415944:	push   0xffffffc8
  415946:	push   edi
  415947:	inc    edi
  415948:	inc    eax
  415949:	loope  0x4158d4
  41594b:	(bad)
  41594f:	(bad)
  415952:	add    cl,BYTE PTR [ebp-0x6e157633]
  415958:	out    dx,eax
  415959:	mov    esp,0xb84216ba
  41595e:	dec    ecx
  41595f:	ja     0x4159ab
  415961:	bound  ebp,QWORD PTR [ecx+edi*2+0x2d]
  415965:	mov    bl,0x5c
  415967:	mov    DWORD PTR [esi+eiz*1+0x4e],ebx
  41596b:	cmp    bh,cl
  41596d:	bound  ebp,QWORD PTR ds:0xc2c66bda
  415973:	mov    ebp,0x591b8bc6
  415978:	xchg   edi,eax
  415979:	sahf   
  41597a:	add    al,0xc1
  41597c:	aas    
  41597d:	in     eax,0xbe
  41597f:	inc    edi
  415980:	(bad)  
  415981:	mov    bh,0xde
  415983:	iret   
  415984:	jmp    0x4159e8
  415986:	mov    al,0xf2
  415988:	fld    DWORD PTR [eax-0x18]
  41598b:	xchg   esi,eax
  41598c:	mov    bh,0xce
  41598e:	jg     0x41595e
  415990:	jle    0x4159c9
  415992:	mov    bl,BYTE PTR [esp+eax*1+0x115f0310]
  415999:	mov    ebx,0xbd7d683
  41599e:	add    ah,BYTE PTR [edi+edi*1-0x32]
  4159a2:	fiadd  DWORD PTR [eax-0x79d6eade]
  4159a8:	loope  0x41597c
  4159aa:	clc    
  4159ab:	sub    BYTE PTR [edi],ah
  4159ad:	das    
  4159ae:	xchg   ecx,eax
  4159af:	shl    DWORD PTR [ecx-0x4fe97854],cl
  4159b5:	out    dx,eax
  4159b6:	jle    0x415a1a
  4159b8:	(bad)  
  4159b9:	push   eax
  4159ba:	stos   BYTE PTR es:[edi],al
  4159bb:	xor    al,0x5b
  4159bd:	leave  
  4159be:	mov    esp,0x61ff1844
  4159c3:	outs   dx,DWORD PTR ds:[esi]
  4159c4:	fstp   TBYTE PTR [edi-0x65]
  4159c7:	aam    0xc8
  4159c9:	mov    esi,0x14f5d6fc
  4159ce:	ja     0x415a46
  4159d0:	aam    0xdc
  4159d2:	(bad)  
  4159d3:	jg     0x415a4b
  4159d5:	cmp    dl,BYTE PTR [edi+0x3cb265e1]
  4159db:	inc    esp
  4159dc:	pop    es
  4159dd:	mov    ds:0x63936333,eax
  4159e2:	and    dl,BYTE PTR [ecx-0x5ba65c7c]
  4159e8:	xchg   ebx,eax
  4159e9:	and    BYTE PTR [edi-0x66],ah
  4159ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159ed:	xor    DWORD PTR [ecx+0x2c1f6d4c],esp
  4159f3:	in     al,dx
  4159f4:	pop    ecx
  4159f5:	stos   BYTE PTR es:[edi],al
  4159f6:	out    0x49,eax
  4159f8:	mov    esp,0xc1402a2c
  4159fd:	imul   esp,ebp,0xc8e60256
  415a03:	lahf   
  415a04:	fdivrp st(1),st
  415a06:	pop    ebx
  415a07:	add    cl,BYTE PTR [esi-0x64]
  415a0a:	popf   
  415a0b:	daa    
  415a0c:	hlt    
  415a0d:	pop    ds
  415a0e:	mov    edi,0xb7ecca6a
  415a13:	retf   
  415a14:	dec    ecx
  415a15:	inc    ecx
  415a16:	fwait
  415a17:	push   ds
  415a18:	test   BYTE PTR [edi],0x6a
  415a1b:	int    0xa2
  415a1d:	stos   DWORD PTR es:[edi],eax
  415a1e:	pop    ecx
  415a1f:	or     BYTE PTR [edx],dh
  415a21:	xchg   edx,eax
  415a22:	dec    edx
  415a23:	sbb    esp,DWORD PTR [esi]
  415a25:	sti    
  415a26:	pop    esp
  415a27:	xor    edi,edi
  415a29:	push   eax
  415a2a:	ss and esi,esi
  415a2d:	(bad)  
  415a2f:	cmp    al,0xb
  415a31:	das    
  415a32:	bnd call 0x99bc2324
  415a38:	shr    BYTE PTR ds:0xe0ba5ec7,0xc9
  415a3f:	call   0x4c29602d
  415a44:	inc    esi
  415a46:	push   eax
  415a47:	loop   0x415a02
  415a49:	(bad)  
  415a4a:	loope  0x415a4a
  415a4c:	mov    ?,WORD PTR [esi+edi*8+0x2837eeb0]
  415a53:	jp     0x415a9f
  415a55:	inc    ecx
  415a56:	inc    edx
  415a57:	into   
  415a58:	sar    dl,1
  415a5a:	fcmove st,st(7)
  415a5c:	shl    ecx,1
  415a5e:	dec    ecx
  415a5f:	retf   
  415a60:	(bad)  
  415a61:	shl    BYTE PTR [ebp+0x2e8ee45d],cl
  415a67:	dec    eax
  415a68:	sbb    eax,0xef276346
  415a6d:	outs   dx,DWORD PTR ds:[esi]
  415a6e:	jecxz  0x415a0d
  415a70:	lods   eax,DWORD PTR ds:[esi]
  415a71:	inc    esp
  415a72:	mov    ecx,0x950a7ae4
  415a77:	das    
  415a78:	sbb    al,0x23
  415a7a:	mov    esp,DWORD PTR [edi+0x7e]
  415a7d:	stos   BYTE PTR es:[edi],al
  415a7e:	add    BYTE PTR [edi],al
  415a80:	sti    
  415a81:	jno    0x415a6a
  415a83:	aaa    
  415a84:	arpl   dx,di
  415a86:	popf   
  415a87:	fcomp  DWORD PTR [ebp+0x1a]
  415a8a:	ss jl  0x415b0c
  415a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a8e:	fld    QWORD PTR [ecx+0x542e3961]
  415a94:	sbb    eax,0x2591ff38
  415a99:	fwait
  415a9a:	push   cs
  415a9b:	fbld   TBYTE PTR [ecx-0x1bb6e6ee]
  415aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aa2:	pushf  
  415aa3:	sub    cl,bl
  415aa5:	jbe    0x415ae0
  415aa7:	shl    BYTE PTR [ebp+esi*8-0x62b1ef1c],cl
  415aae:	sbb    eax,0xdd7852b7
  415ab3:	mov    dl,0x60
  415ab5:	and    eax,0x9c65d84c
  415aba:	jle    0x415aac
  415abc:	jmp    0x1b12:0xd74df862
  415ac3:	enter  0xb5a1,0x2c
  415ac7:	(bad)  
  415ac9:	popf   
  415aca:	lock in eax,dx
  415acc:	js     0x415b3e
  415ace:	scas   eax,DWORD PTR es:[edi]
  415acf:	in     eax,0x6c
  415ad1:	repz dec ebp
  415ad3:	xor    al,0xf7
  415ad5:	pushw  0x3043
  415ad9:	inc    esp
  415ada:	cmp    esp,DWORD PTR [edi-0x60]
  415add:	retf   0x4749
  415ae0:	adc    DWORD PTR [ebx],esi
  415ae2:	inc    ecx
  415ae3:	push   esi
  415ae4:	pop    ds
  415ae5:	sbb    ebp,DWORD PTR [ebp-0x165dc278]
  415aeb:	cld    
  415aec:	adc    al,0xe8
  415aee:	add    BYTE PTR [ebx],dh
  415af0:	adc    eax,0xe3377d9d
  415af5:	xchg   ebp,eax
  415af6:	sbb    eax,0xefd4169b
  415afb:	loope  0x415a82
  415afd:	lds    ebp,FWORD PTR [ebp+0x47]
  415b00:	out    dx,eax
  415b01:	data16 jbe 0x415aa5
  415b04:	xor    eax,0x51553c7d
  415b09:	dec    esi
  415b0a:	repnz fnstsw WORD PTR fs:[esi+0x1b]
  415b0f:	icebp  
  415b10:	mov    ds:0xfcfbdc4f,al
  415b15:	jnp    0x415abb
  415b17:	fdivr  QWORD PTR [eax-0x2aacd89e]
  415b1d:	inc    esp
  415b1e:	repnz xchg edi,eax
  415b20:	imul   edx,edx,0x5f
  415b23:	or     DWORD PTR [eax+0x34],ecx
  415b26:	add    bl,BYTE PTR [eax]
  415b28:	jae    0x415b2c
  415b2a:	pop    esi
  415b2b:	clc    
  415b2c:	cmc    
  415b2d:	in     al,0x91
  415b2f:	or     al,0x62
  415b31:	xlat   BYTE PTR ds:[ebx]
  415b32:	push   ecx
  415b33:	sub    BYTE PTR [eax+0x77],dh
  415b36:	or     edx,DWORD PTR ds:0x4b8aff9e
  415b3c:	cmp    ebp,DWORD PTR [ecx]
  415b3e:	sub    BYTE PTR [edx+0xd],0xca
  415b42:	stos   DWORD PTR es:[edi],eax
  415b43:	iret   
  415b44:	(bad)  
  415b45:	aam    0xa8
  415b47:	pop    esp
  415b48:	rol    BYTE PTR [eax-0x77],0xe
  415b4c:	xor    eax,0x377b1800
  415b51:	lock jnp 0x415b60
  415b54:	retf   
  415b55:	push   0x6daaa8dd
  415b5a:	test   BYTE PTR [ecx+0x3b],dh
  415b5d:	mov    esi,0x4fdbcfd8
  415b62:	push   ss
  415b63:	or     eax,0x68e27fe3
  415b68:	push   esi
  415b69:	push   esi
  415b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b6b:	xor    eax,0x1c2dadc6
  415b70:	pop    ebp
  415b71:	aad    0x84
  415b73:	jmp    0xc5d9:0x6ccccb5a
  415b7a:	enter  0xae6e,0x91
  415b7e:	jmp    0x415b25
  415b80:	adc    BYTE PTR [edi],bl
  415b82:	pop    ds
  415b83:	inc    ebx
  415b84:	and    DWORD PTR [eax],edx
  415b86:	shr    BYTE PTR [eax-0x896673b],cl
  415b8c:	xor    BYTE PTR [edi],ch
  415b8e:	shr    ecx,1
  415b90:	jecxz  0x415b39
  415b92:	cmc    
  415b93:	xchg   ecx,eax
  415b94:	sub    al,0xd0
  415b96:	out    0x41,al
  415b98:	mov    ah,0x92
  415b9a:	mov    ah,0x9c
  415b9c:	(bad)  
  415b9d:	out    dx,al
  415b9e:	and    al,0x87
  415ba0:	xchg   ebp,eax
  415ba1:	sar    DWORD PTR [edi+0x3a],1
  415ba4:	mov    ch,0xd5
  415ba6:	xchg   ebp,eax
  415ba7:	push   ebp
  415ba8:	inc    ecx
  415ba9:	fisttp WORD PTR [edi]
  415bab:	iret   
  415bac:	iret   
  415bad:	push   0xffffffce
  415baf:	ins    DWORD PTR es:[edi],dx
  415bb0:	mov    bl,0xdf
  415bb2:	test   DWORD PTR [ebx],ebx
  415bb4:	outs   dx,DWORD PTR ds:[esi]
  415bb5:	mov    dh,0xe
  415bb7:	mov    dh,0xa0
  415bb9:	(bad)  
  415bba:	loop   0x415b8a
  415bbc:	jo     0x415be2
  415bbe:	cmp    eax,0xc7244b30
  415bc3:	lods   eax,DWORD PTR ds:[esi]
  415bc4:	pop    eax
  415bc5:	mov    DWORD PTR [eax-0x17978190],eax
  415bcb:	(bad)  
  415bcc:	ja     0x415b4e
  415bce:	call   0x8439a7bc
  415bd3:	call   0xf14e:0x9716360d
  415bda:	mov    esp,0xc4d55cb4
  415bdf:	popf   
  415be0:	push   cs
  415be1:	jns    0x415c49
  415be3:	push   cs
  415be4:	gs aaa 
  415be6:	push   ss
  415be7:	sahf   
  415be8:	jg     0x415c09
  415bea:	lods   al,BYTE PTR ds:[esi]
  415beb:	gs xchg edx,eax
  415bed:	into   
  415bee:	pop    ebx
  415bef:	ins    DWORD PTR es:[edi],dx
  415bf0:	cli    
  415bf1:	jbe    0x415ba7
  415bf3:	es lahf 
  415bf5:	add    al,dh
  415bf7:	mov    eax,ds:0x2f6e4cbe
  415bfc:	test   DWORD PTR [ebp-0x76],0xbb4dd0b8
  415c03:	jb     0x415bc3
  415c05:	mul    DWORD PTR [eax+edx*8+0x2432adb3]
  415c0c:	fidiv  DWORD PTR [ebp+0x64]
  415c0f:	or     BYTE PTR [eax+eax*1+0xc],dl
  415c13:	gs mov esp,0x2cd75047
  415c19:	mov    eax,0x50b708e6
  415c1e:	cmp    al,0xcf
  415c20:	imul   eax,DWORD PTR [edi],0x7bb8db62
  415c26:	push   cs
  415c27:	inc    edi
  415c28:	ret    0x84b6
  415c2b:	sub    DWORD PTR [ecx],eax
  415c2d:	cmp    DWORD PTR [ecx],ebx
  415c2f:	je     0x415c26
  415c31:	hlt    
  415c32:	fcmove st,st(5)
  415c34:	adc    BYTE PTR [ebx+0x501cfea4],0xc
  415c3b:	xchg   esi,eax
  415c3c:	dec    edx
  415c3d:	push   ss
  415c3e:	push   edi
  415c3f:	adc    BYTE PTR [edx+edx*1],0x46
  415c43:	mov    dl,0xe1
  415c45:	rcr    bl,cl
  415c47:	mov    ds:0x449b6a92,eax
  415c4c:	and    BYTE PTR [edx],bl
  415c4e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  415c50:	dec    eax
  415c51:	push   edi
  415c52:	inc    ebx
  415c53:	sbb    ch,al
  415c55:	mul    BYTE PTR [esi+ebp*4]
  415c58:	xor    al,0x41
  415c5a:	imul   edx,DWORD PTR [ecx+0x6ddd8dfc],0x71
  415c61:	jge    0x415bed
  415c63:	jecxz  0x415c0f
  415c65:	mov    al,0x86
  415c67:	push   ss
  415c68:	stos   DWORD PTR es:[edi],eax
  415c69:	jb     0x415c05
  415c6b:	sbb    eax,0x262e054b
  415c70:	xor    ecx,DWORD PTR [ecx-0x53]
  415c73:	xchg   BYTE PTR [eax+0x6a],bh
  415c76:	loopne 0x415c7d
  415c78:	loopne 0x415cda
  415c7a:	mov    esi,0x2dfd670
  415c7f:	jecxz  0x415c66
  415c81:	div    bh
  415c83:	sbb    DWORD PTR [esi-0x6a],0x239e0702
  415c8a:	inc    ebp
  415c8b:	mov    esp,0xa679d7d
  415c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c91:	shr    DWORD PTR [ecx-0x6de5d0fd],0x67
  415c98:	sub    al,dl
  415c9a:	cli    
  415c9b:	sub    BYTE PTR [esi],al
  415c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c9e:	push   es
  415c9f:	pop    ss
  415ca0:	inc    ecx
  415ca1:	repz fisub DWORD PTR [ebx-0x8]
  415ca5:	mov    ss,WORD PTR [ebp-0x66c524c9]
  415cab:	pop    ecx
  415cac:	push   0xcd726986
  415cb1:	sbb    DWORD PTR [esi],eax
  415cb3:	int    0x36
  415cb5:	mov    eax,ds:0xa164a709
  415cba:	xchg   esp,eax
  415cbb:	loope  0x415c58
  415cbd:	out    dx,al
  415cbe:	imul   cl
  415cc0:	cmp    DWORD PTR [edx+0x41],esp
  415cc3:	aam    0xfb
  415cc5:	push   ecx
  415cc6:	inc    edx
  415cc7:	out    dx,eax
  415cc8:	in     al,0xdf
  415cca:	sub    al,cl
  415ccc:	mov    eax,DWORD PTR [ecx-0x72ece79f]
  415cd2:	test   eax,0xf32e2e2b
  415cd7:	gs mov dh,0x7f
  415cda:	mov    esp,DWORD PTR [edx-0x50192c8d]
  415ce0:	mov    ecx,0xed29b096
  415ce5:	sahf   
  415ce6:	or     edi,DWORD PTR [edx-0x7e]
  415ce9:	fwait
  415cea:	xchg   ebx,eax
  415ceb:	scas   al,BYTE PTR es:[edi]
  415cec:	arpl   WORD PTR [ecx+0x3a],cx
  415cef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cf0:	sbb    al,0xae
  415cf2:	retf   0x7419
  415cf5:	or     DWORD PTR [esi-0x66aa0298],esp
  415cfb:	mov    BYTE PTR [edx+0x516eabd1],ah
  415d01:	dec    esi
  415d02:	adc    ecx,DWORD PTR [edi-0x67]
  415d05:	das    
  415d06:	sub    dh,BYTE PTR [edx+0x942e39f]
  415d0c:	mov    WORD PTR [eax+0x1e],?
  415d0f:	push   0xffffff85
  415d11:	ret    0xc390
  415d14:	add    BYTE PTR [eax+0x6bb6fa30],cl
  415d1a:	jge    0x415ce1
  415d1c:	cmp    eax,0xf0c40e4d
  415d21:	rol    DWORD PTR [eax+esi*8-0x5fd53fd5],cl
  415d28:	sub    eax,DWORD PTR [ebp+0x36]
  415d2b:	mov    edi,0x883db5db
  415d30:	jo     0x415d4b
  415d32:	retf   
  415d33:	shr    BYTE PTR [ecx],cl
  415d35:	addr16 pushf 
  415d37:	cmp    eax,0xa0847ae8
  415d3c:	push   ds
  415d3d:	daa    
  415d3e:	hlt    
  415d3f:	xor    al,0xee
  415d41:	hlt    
  415d42:	fmul   st(2),st
  415d44:	and    BYTE PTR es:[ebp+0x15d07270],0xdc
  415d4c:	gs push edi
  415d4e:	push   0xc40f47b6
  415d53:	out    0x4a,al
  415d55:	fbld   TBYTE PTR [ecx+0x15d2e336]
  415d5b:	dec    ecx
  415d5c:	popf   
  415d5d:	pusha  
  415d5e:	jo     0x415d0b
  415d60:	ror    DWORD PTR [ebx],cl
  415d62:	stos   DWORD PTR es:[edi],eax
  415d63:	pusha  
  415d64:	or     dl,ch
  415d66:	scas   al,BYTE PTR es:[edi]
  415d67:	mov    DWORD PTR [edi+esi*4+0x56],esp
  415d6b:	outs   dx,BYTE PTR ds:[esi]
  415d6c:	dec    ebp
  415d6d:	push   esi
  415d6e:	lds    edi,FWORD PTR [edi-0x52]
  415d71:	adc    al,0x31
  415d73:	mov    ah,0xb6
  415d75:	jno    0x415d93
  415d77:	push   0x5b
  415d79:	mov    ah,0xe
  415d7b:	(bad)  
  415d7c:	adc    al,0x74
  415d7e:	jge    0x415dc9
  415d80:	aaa    
  415d81:	mov    dl,ch
  415d83:	aaa    
  415d84:	ins    BYTE PTR es:[edi],dx
  415d85:	push   ecx
  415d86:	out    0x77,al
  415d88:	mov    ah,0x8
  415d8a:	clc    
  415d8b:	inc    eax
  415d8c:	push   0xffffffae
  415d8e:	inc    eax
  415d8f:	dec    ebp
  415d90:	in     al,0x75
  415d92:	fs pop ecx
  415d94:	sbb    al,0x8c
  415d96:	popf   
  415d97:	sbb    eax,0xfc906eec
  415d9c:	jmp    0x415dbe
  415d9e:	inc    esp
  415d9f:	cmp    edi,DWORD PTR [edi-0x5f]
  415da2:	sub    al,bl
  415da4:	pushf  
  415da5:	pusha  
  415da6:	mov    ebx,0x57893024
  415dab:	mov    edi,0xc433dbca
  415db0:	loope  0x415db9
  415db2:	jne    0x415d49
  415db4:	xchg   edi,eax
  415db5:	ficom  DWORD PTR [ebx+0x24bc5199]
  415dbb:	push   ebp
  415dbc:	shl    DWORD PTR [ecx-0x217b646e],cl
  415dc2:	lea    esi,[esi]
  415dc4:	les    ebx,FWORD PTR [ebx]
  415dc6:	adc    eax,0x9a905967
  415dcb:	mov    ecx,0x39271c7d
  415dd0:	out    0xc0,al
  415dd2:	mov    esp,0xcc2aab4f
  415dd7:	ds push ss
  415dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dda:	adc    al,0xd7
  415ddc:	mov    esp,0x4b31d1c0
  415de1:	mov    bh,0x5c
  415de3:	out    0x99,al
  415de5:	fmulp  st(6),st
  415de7:	mov    dh,0x32
  415de9:	call   0x4bad:0x2bdd065a
  415df0:	pop    ds
  415df1:	std    
  415df2:	mov    edx,0xf94dd9ac
  415df7:	push   esp
  415df8:	(bad)  
  415dfa:	test   dh,bl
  415dfc:	dec    esi
  415dfd:	inc    edi
  415dfe:	repz aad 0xae
  415e01:	push   ss
  415e02:	add    esp,DWORD PTR [edi+0x64]
  415e05:	dec    esi
  415e06:	jmp    0x5873ead1
  415e0b:	jmp    0xecf3f722
  415e10:	mov    ebp,0xfabe299e
  415e15:	or     dh,BYTE PTR [edx]
  415e17:	fstp   DWORD PTR [ebp-0x5a10b879]
  415e1d:	cmc    
  415e1e:	punpckldq mm3,DWORD PTR [edx]
  415e21:	not    BYTE PTR [ebx+ebx*4]
  415e24:	aas    
  415e25:	test   edi,ecx
  415e27:	pop    esp
  415e28:	lea    edx,ds:0x8cf7d7b5
  415e2e:	dec    ebx
  415e2f:	dec    ebp
  415e30:	pop    ds
  415e31:	data16 stc 
  415e33:	mov    WORD PTR [ebx-0xc],ds
  415e36:	mov    esi,0x5923ee7b
  415e3b:	pushf  
  415e3c:	popf   
  415e3d:	sar    DWORD PTR [ebp+0x0],cl
  415e40:	push   eax
  415e41:	dec    ecx
  415e42:	and    al,cl
  415e44:	sub    DWORD PTR [esi+0x33],esi
  415e47:	iret   
  415e48:	ja     0x415e2d
  415e4a:	scas   al,BYTE PTR es:[edi]
  415e4b:	fisubr DWORD PTR [ebp+0x0]
  415e4e:	xchg   esi,eax
  415e4f:	jnp    0x415e8f
  415e51:	adc    al,0x6d
  415e53:	shr    BYTE PTR [esi+eiz*2],cl
  415e56:	ret    
  415e57:	test   DWORD PTR ds:0x1f6b1cd8,0xd0d24a05
  415e61:	mov    fs,WORD PTR [ebp-0x5]
  415e64:	ds cmp ecx,esp
  415e67:	sbb    ebp,edi
  415e69:	out    0x8b,eax
  415e6b:	push   ecx
  415e6c:	daa    
  415e6d:	cmp    eax,DWORD PTR [ebx+0x7395c842]
  415e73:	or     DWORD PTR [edi-0x78],0xffffffbe
  415e77:	mov    ch,0x14
  415e79:	sbb    ch,bh
  415e7b:	sar    DWORD PTR [edx+0x17b09841],0x72
  415e82:	mov    edi,0x646e7f67
  415e87:	jmp    0x1ad5:0xb74b3643
  415e8e:	addr16 jne 0x415e3e
  415e91:	shr    eax,1
  415e93:	test   BYTE PTR [eax+0x101e6c12],bl
  415e99:	adc    BYTE PTR [ebx],cl
  415e9b:	sbb    DWORD PTR [ebp-0x2d],edx
  415e9e:	(bad)  
  415e9f:	xlat   BYTE PTR ds:[ebx]
  415ea0:	mov    dh,BYTE PTR [esi+0x1d]
  415ea3:	sub    al,0x74
  415ea5:	and    ch,BYTE PTR [ebp-0x5f]
  415ea8:	imul   esp,DWORD PTR [eax-0x44],0x46
  415eac:	int3   
  415ead:	in     eax,dx
  415eae:	sub    al,0x32
  415eb0:	push   ecx
  415eb1:	stos   BYTE PTR es:[edi],al
  415eb2:	(bad)  
  415eb3:	ja     0x415e3d
  415eb5:	pop    eax
  415eb6:	xchg   edi,eax
  415eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eb8:	popf   
  415eb9:	cmp    bh,ah
  415ebb:	push   ecx
  415ebc:	push   edi
  415ebd:	pop    edx
  415ebe:	push   ss
  415ebf:	rcl    DWORD PTR [edi+0x5c931b75],0x80
  415ec6:	push   es
  415ec7:	jl     0x415ede
  415ec9:	inc    ebx
  415eca:	jb     0x415f33
  415ecc:	scas   eax,DWORD PTR es:[edi]
  415ecd:	dec    ebp
  415ece:	es ret 0xf7a6
  415ed2:	mov    ah,0xc1
  415ed4:	fadd   DWORD PTR [ebx+0x51]
  415ed7:	inc    eax
  415ed8:	add    DWORD PTR [esi-0x4d0144c6],esp
  415ede:	out    0xbd,eax
  415ee0:	mov    ds:0x76fa479b,eax
  415ee5:	into   
  415ee6:	xchg   al,dh
  415ee8:	jge    0x415edb
  415eea:	ret    
  415eeb:	dec    edi
  415eec:	push   esp
  415eed:	mov    ch,0x9f
  415eef:	cwde   
  415ef0:	xchg   ebp,eax
  415ef1:	popa   
  415ef2:	lahf   
  415ef3:	das    
  415ef4:	xor    eax,0x108ea63e
  415ef9:	loop   0x415ece
  415efb:	xchg   ebx,eax
  415efc:	jnp    0x415f16
  415efe:	pop    ds
  415eff:	inc    edi
  415f00:	dec    ebx
  415f01:	or     DWORD PTR [ecx+edx*4-0x19],esi
  415f05:	ror    DWORD PTR [ecx+ebp*4],cl
  415f08:	push   ds
  415f09:	sbb    eax,0x5fdad5dd
  415f0e:	adc    al,0x7b
  415f10:	add    DWORD PTR gs:[ecx-0x648ce4ed],edi
  415f17:	xchg   ecx,eax
  415f18:	test   al,0x59
  415f1a:	mov    bh,0xd
  415f1c:	scas   al,BYTE PTR es:[edi]
  415f1d:	sub    eax,0x6d0a08a1
  415f22:	xchg   esi,eax
  415f23:	pop    ds
  415f24:	call   0x6ba8:0x679896a
  415f2b:	xor    edx,0xada98701
  415f31:	push   es
  415f32:	out    dx,eax
  415f33:	xchg   BYTE PTR [edi-0x74],dh
  415f36:	sub    al,0x74
  415f38:	mov    eax,ds:0xa9d3db6d
  415f3d:	or     DWORD PTR [esi],edx
  415f3f:	sub    eax,0x32d5aa20
  415f44:	add    DWORD PTR ds:0x98d566b9,esp
  415f4a:	clc    
  415f4b:	jle    0x415f3d
  415f4d:	xlat   BYTE PTR ds:[ebx]
  415f4e:	push   ebx
  415f4f:	dec    esp
  415f50:	jecxz  0x415ee0
  415f52:	cwde   
  415f53:	cdq    
  415f54:	fldz   
  415f56:	mov    bh,ch
  415f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f59:	adc    edi,DWORD PTR [esi]
  415f5b:	dec    esp
  415f5c:	(bad)  
  415f5d:	dec    edi
  415f5e:	js     0x415f5d
  415f60:	call   0xa84f:0x72982a66
  415f67:	frstor [ebx+ebp*8-0x60]
  415f6b:	out    0xd0,al
  415f6d:	gs (bad) 
  415f6f:	sti    
  415f70:	cmc    
  415f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f72:	jg     0x415f8f
  415f74:	aad    0xcc
  415f76:	mov    ds:0xe40a9343,eax
  415f7b:	mul    DWORD PTR [edx+edi*4-0x3]
  415f7f:	mov    esi,0xfb695a75
  415f84:	aad    0x98
  415f86:	imul   edx,DWORD PTR [esi-0x77f92209],0x55
  415f8d:	xor    edx,edx
  415f8f:	je     0x415f22
  415f91:	out    0x11,al
  415f93:	push   esp
  415f95:	jg     0x415f6c
  415f97:	repz pop es
  415f99:	inc    esi
  415f9a:	dec    ebp
  415f9b:	les    edx,FWORD PTR [eax+0x3e4ced32]
  415fa1:	and    eax,0x9f9fcaa8
  415fa6:	leave  
  415fa7:	jmp    0x416007
  415fa9:	mov    esi,DWORD PTR [ecx]
  415fab:	push   cs
  415fac:	adc    edx,eax
  415fae:	push   ss
  415faf:	push   cs
  415fb0:	ins    BYTE PTR es:[edi],dx
  415fb1:	lock sbb al,0x64
  415fb4:	sub    BYTE PTR [ebp+0x6d],ch
  415fb7:	add    eax,DWORD PTR [esi*2-0x294aa2e8]
  415fbe:	xchg   esp,eax
  415fbf:	(bad)  
  415fc0:	push   ecx
  415fc1:	push   eax
  415fc2:	rcr    DWORD PTR [ebp-0x2bf4efaa],1
  415fc8:	xchg   edi,eax
  415fc9:	sbb    bh,dl
  415fcb:	in     eax,dx
  415fcc:	sub    eax,ecx
  415fce:	xor    edx,DWORD PTR [ebp+0x4a98507c]
  415fd4:	cmp    ah,bh
  415fd6:	icebp  
  415fd7:	mov    cl,0xd4
  415fd9:	xor    al,BYTE PTR [edx-0x77]
  415fdc:	in     al,dx
  415fdd:	test   al,0x8f
  415fdf:	mov    al,al
  415fe1:	add    BYTE PTR [ecx-0x3a508a4a],bl
  415fe7:	mov    al,ds:0xc876cc63
  415fec:	jae    0x415f97
  415fee:	inc    edi
  415fef:	leave  
  415ff0:	adc    DWORD PTR [ecx-0x152efc4c],ecx
  415ff6:	fst    DWORD PTR ss:[eax-0x41bcd376]
  415ffd:	sub    eax,0x9e890d30
  416002:	sbb    eax,0x3085053b
  416007:	lahf   
  416008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416009:	fucom  st(2)
  41600b:	mov    dh,0xf6
  41600d:	ja     0x415f9f
  41600f:	inc    ecx
  416010:	xchg   esp,eax
  416011:	aam    0x43
  416013:	fnop   
  416015:	adc    al,BYTE PTR [eax+ecx*2+0x33]
  416019:	rol    BYTE PTR [ecx+0x4310142d],1
  41601f:	add    BYTE PTR [eax+eiz*8],al
  416022:	inc    edx
  416023:	add    BYTE PTR [ebx],dh
  416025:	fsubr  DWORD PTR [ebx]
  416027:	rcr    DWORD PTR [ecx],cl
  416029:	cmp    eax,0x432018
  41602e:	sub    edx,esi
  416030:	xor    edx,eax
  416032:	mov    DWORD PTR [ebp+0x8],edx
  416035:	mov    edx,DWORD PTR [ebp+0x8]
  416038:	mov    ebx,DWORD PTR [ebp-0x58]
  41603b:	add    edx,0x5708c0
  416041:	sub    DWORD PTR ds:0x432008,0x431010
  41604b:	imul   edx,ebx
  41604e:	add    DWORD PTR ds:0x431004,edi
  416054:	mov    DWORD PTR [ebp-0x58],edx
  416057:	add    ebx,DWORD PTR ds:0x431018
  41605d:	mov    edx,DWORD PTR [ebp+0x8]
  416060:	mov    ebx,DWORD PTR [ebp-0x54]
  416063:	and    DWORD PTR ds:0x42e028,0x430008
  41606d:	add    edx,0x64f8a2
  416073:	add    DWORD PTR ds:0x42e010,0x125e
  41607d:	or     edx,ebx
  41607f:	mov    DWORD PTR [ebp-0x54],edx
  416082:	adc    ebx,edx
  416084:	mov    edx,DWORD PTR [ebp+0x8]
  416087:	sub    DWORD PTR ds:0x42e018,ecx
  41608d:	mov    ebx,DWORD PTR [ebp-0x50]
  416090:	inc    DWORD PTR ds:0x42e010
  416096:	add    edx,ecx
  416098:	xor    edx,ebx
  41609a:	adc    DWORD PTR ds:0x430010,edx
  4160a0:	mov    DWORD PTR [ebp-0x50],edx
  4160a3:	mov    edx,DWORD PTR [ebp+0x8]
  4160a6:	add    ebx,0x699b
  4160ac:	mov    ebx,DWORD PTR [ebp-0x4c]
  4160af:	sub    DWORD PTR ds:0x431000,0x2b77
  4160b9:	add    edx,edi
  4160bb:	or     DWORD PTR ds:0x430004,0x35b8
  4160c5:	and    edx,ebx
  4160c7:	and    DWORD PTR ds:0x430000,0x0
  4160d1:	jmp    0x4160e3
  4160d6:	mov    ebx,DWORD PTR ds:0x430000
  4160dc:	inc    ebx
  4160dd:	mov    DWORD PTR ds:0x430000,ebx
  4160e3:	cmp    DWORD PTR ds:0x430000,0x1f
  4160ea:	jae    0x416134
  4160f0:	cmp    DWORD PTR ds:0x430000,0xd
  4160f7:	jl     0x416134
  4160fd:	jmp    0x416115
  416102:	push   DWORD PTR [ebp-0x1c]
  416105:	push   0x6567
  41610a:	push   0x7580
  41610f:	call   DWORD PTR ds:0x4348b3
  416115:	cmp    DWORD PTR ds:0x430000,0xc
  41611c:	jne    0x41612f
  416122:	mov    ebx,DWORD PTR ds:0x430000
  416128:	inc    ebx
  416129:	mov    DWORD PTR ds:0x430000,ebx
  41612f:	jmp    0x4160d6
  416134:	mov    DWORD PTR [ebp-0x4c],edx
  416137:	and    DWORD PTR ds:0x42e018,0x0
  416141:	mov    edx,DWORD PTR ds:0x42e018
  416147:	inc    edx
  416148:	mov    DWORD PTR ds:0x42e018,edx
  41614e:	cmp    DWORD PTR ds:0x42e018,0x7
  416155:	jb     0x4161aa
  41615b:	jmp    0x416183
  416160:	push   0x430018
  416165:	push   0x8477
  41616a:	push   0x38e9
  41616f:	push   DWORD PTR [ebp-0x20]
  416172:	push   DWORD PTR [ebp-0x24]
  416175:	push   0x5246
  41617a:	push   DWORD PTR [ebp-0x1c]
  41617d:	call   DWORD PTR ds:0x4348df
  416183:	cmp    DWORD PTR ds:0x42e018,0x6
  41618a:	jne    0x41619d
  416190:	mov    edx,DWORD PTR ds:0x42e018
  416196:	inc    edx
  416197:	mov    DWORD PTR ds:0x42e018,edx
  41619d:	cmp    DWORD PTR ds:0x42e018,0x1f
  4161a4:	jb     0x416141
  4161aa:	mov    edx,DWORD PTR [ebp+0x8]
  4161ad:	mov    ebx,DWORD PTR [ebp-0x48]
  4161b0:	lea    edx,[ebx+edx*1+0x241fc1f]
  4161b7:	mov    DWORD PTR [ebp-0x48],edx
  4161ba:	mov    edx,DWORD PTR [ebp+0x8]
  4161bd:	mov    ebx,0xfa5e15e2
  4161c2:	sub    ebx,edx
  4161c4:	add    ebx,DWORD PTR [ebp-0x44]
  4161c7:	mov    DWORD PTR [ebp-0x44],ebx
  4161ca:	mov    edx,DWORD PTR [ebp+0x8]
  4161cd:	xor    edx,eax
  4161cf:	add    edx,esi
  4161d1:	jne    0x413bf2
  4161d7:	mov    edx,DWORD PTR [ebp-0xc]
  4161da:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4161e1:	mov    bl,BYTE PTR [ebp-0x1]
  4161e4:	cmp    dl,bl
  4161e6:	je     0x4162c4
  4161ec:	mov    ecx,DWORD PTR [ebp-0x5c]
  4161ef:	mov    edx,DWORD PTR [ebp-0xc]
  4161f2:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4161f9:	mov    ebx,DWORD PTR [ebp+0xc]
  4161fc:	xor    ecx,eax
  4161fe:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e4]
  416205:	jne    0x41ab6e
  41620b:	mov    ecx,DWORD PTR [ebp-0x5c]
  41620e:	mov    edx,DWORD PTR [ebp+0xc]
  416211:	xor    ecx,eax
  416213:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e4]
  41621b:	mov    edx,DWORD PTR [ebp-0x18]
  41621e:	xor    edx,eax
  416220:	add    edx,esi
  416222:	cmp    ecx,edx
  416224:	mov    ecx,DWORD PTR [ebp-0x14]
  416227:	mov    DWORD PTR [ebp+0x8],ecx
  41622a:	mov    ecx,DWORD PTR [ebp+0x8]
  41622d:	je     0x41d031
  416233:	xor    ecx,eax
  416235:	add    ecx,esi
  416237:	mov    ecx,0x242ebed
  41623c:	je     0x41aac2
  416242:	mov    edx,DWORD PTR [ebp+0x8]
  416245:	mov    ebx,DWORD PTR [ebp-0x8]
  416248:	xor    edx,eax
  41624a:	xor    ebx,eax
  41624c:	sub    edx,ebx
  41624e:	sub    edx,esi
  416250:	xor    edx,eax
  416252:	mov    DWORD PTR [ebp+0x8],edx
  416255:	mov    edx,DWORD PTR [ebp+0x8]
  416258:	mov    ebx,DWORD PTR [ebp-0x58]
  41625b:	add    edx,0x5708c0
  416261:	imul   edx,ebx
  416264:	mov    DWORD PTR [ebp-0x58],edx
  416267:	mov    edx,DWORD PTR [ebp+0x8]
  41626a:	mov    ebx,DWORD PTR [ebp-0x54]
  41626d:	add    edx,0x64f8a2
  416273:	or     edx,ebx
  416275:	mov    DWORD PTR [ebp-0x54],edx
  416278:	mov    edx,DWORD PTR [ebp+0x8]
  41627b:	mov    ebx,DWORD PTR [ebp-0x50]
  41627e:	add    edx,ecx
  416280:	xor    edx,ebx
  416282:	mov    DWORD PTR [ebp-0x50],edx
  416285:	mov    edx,DWORD PTR [ebp+0x8]
  416288:	mov    ebx,DWORD PTR [ebp-0x4c]
  41628b:	add    edx,edi
  41628d:	and    edx,ebx
  41628f:	mov    DWORD PTR [ebp-0x4c],edx
  416292:	mov    edx,DWORD PTR [ebp+0x8]
  416295:	mov    ebx,DWORD PTR [ebp-0x48]
  416298:	lea    edx,[ebx+edx*1+0x241fc1f]
  41629f:	mov    DWORD PTR [ebp-0x48],edx
  4162a2:	mov    edx,DWORD PTR [ebp+0x8]
  4162a5:	mov    ebx,0xfa5e15e2
  4162aa:	sub    ebx,edx
  4162ac:	add    ebx,DWORD PTR [ebp-0x44]
  4162af:	mov    DWORD PTR [ebp-0x44],ebx
  4162b2:	mov    edx,DWORD PTR [ebp+0x8]
  4162b5:	xor    edx,eax
  4162b7:	add    edx,esi
  4162b9:	jne    0x416242
  4162bf:	jmp    0x41aac2
  4162c4:	mov    edx,DWORD PTR [ebp-0x14]
  4162c7:	mov    DWORD PTR [ebp+0x8],edx
  4162ca:	jmp    0x41aab5
  4162cf:	mov    edx,DWORD PTR [ebp+0x8]
  4162d2:	mov    ebx,DWORD PTR [ebp-0x8]
  4162d5:	xor    edx,eax
  4162d7:	xor    ebx,eax
  4162d9:	sub    edx,ebx
  4162db:	sub    edx,esi
  4162dd:	jmp    0x418698
  4162e2:	inc    esi
  4162e3:	xor    ecx,DWORD PTR ds:0xc3900f94
  4162e9:	jae    0x4162ae
  4162eb:	mov    esi,0xdc4635a
  4162f0:	sbb    al,0x6
  4162f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162f3:	push   edi
  4162f4:	jge    0x416368
  4162f6:	rcr    BYTE PTR [edi+0x72],1
  4162f9:	jb     0x4162d8
  4162fb:	mov    ch,0x63
  4162fd:	pop    ds
  4162fe:	mov    eax,ds:0x507ac6b5
  416303:	repz push ss
  416305:	sub    al,0xaf
  416307:	addr16 sti 
  416309:	jp     0x4162cb
  41630b:	cdq    
  41630c:	sbb    DWORD PTR [eax],edi
  41630e:	js     0x4162b1
  416310:	gs push 0x56
  416313:	mov    ds:0x63e9e3e3,al
  416318:	in     al,dx
  416319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41631a:	inc    edx
  41631b:	lds    ecx,FWORD PTR [edx+edi*4]
  41631e:	mov    dl,0x9
  416320:	sbb    esp,DWORD PTR ds:0x6477815c
  416326:	pop    esi
  416327:	ins    DWORD PTR es:[edi],dx
  416328:	xor    al,0x82
  41632a:	and    al,0xea
  41632c:	in     al,dx
  41632d:	stc    
  41632e:	pop    ebp
  41632f:	adc    cl,dl
  416331:	int    0xfd
  416333:	popf   
  416334:	popf   
  416335:	adc    al,0xd5
  416337:	data16 xor al,0x84
  41633a:	outs   dx,DWORD PTR ds:[esi]
  41633b:	push   edx
  41633c:	push   0xd
  41633e:	int    0xe
  416340:	jmp    0x21e0e350
  416345:	fs push edi
  416347:	mov    al,BYTE PTR [ecx-0x46b9b5ab]
  41634d:	lahf   
  41634e:	dec    edx
  41634f:	adc    cl,BYTE PTR [ebx+0x3e83f6f0]
  416355:	push   eax
  416356:	add    ch,BYTE PTR [ebx+0x57d6cb48]
  41635c:	mov    DWORD PTR [ecx-0x536eb256],0xa19df3d9
  416366:	rcl    DWORD PTR [ebp+0x1d300d38],0x49
  41636d:	add    BYTE PTR [eax-0x6c878897],bh
  416373:	in     eax,0x2a
  416375:	cmp    edi,DWORD PTR [esi-0x78]
  416378:	pop    ss
  416379:	out    0xda,eax
  41637b:	loope  0x41633c
  41637d:	jle    0x41638a
  41637f:	mov    al,ds:0xc27aecca
  416384:	fist   DWORD PTR [ecx+0x5bd61ee4]
  41638a:	xor    al,BYTE PTR [esi-0x51a5f76a]
  416390:	add    eax,0x6b584803
  416395:	dec    ebp
  416396:	loop   0x4163eb
  416398:	test   dh,ch
  41639a:	mov    cl,0x24
  41639c:	ror    BYTE PTR [ebx-0x52],1
  41639f:	in     eax,dx
  4163a0:	sahf   
  4163a1:	(bad)  
  4163a2:	iret   
  4163a3:	in     al,0xf
  4163a5:	xor    eax,0xa173e8cb
  4163aa:	push   ds
  4163ab:	and    BYTE PTR [esi-0x17],0xdb
  4163af:	test   al,0xba
  4163b2:	inc    eax
  4163b3:	nop
  4163b4:	sub    DWORD PTR [ecx+0x59fefd22],ebp
  4163ba:	push   0x5041602b
  4163bf:	adc    DWORD PTR [eax-0x63],esi
  4163c2:	aaa    
  4163c3:	rcr    BYTE PTR [ecx],cl
  4163c5:	jecxz  0x4163b7
  4163c7:	inc    esp
  4163c8:	push   ds
  4163c9:	add    ebp,esi
  4163cb:	push   ss
  4163cc:	mov    esi,0x81aac699
  4163d1:	std    
  4163d2:	fmul   QWORD PTR [ecx-0x6681a7c7]
  4163d8:	push   edx
  4163d9:	out    dx,al
  4163da:	fcom   QWORD PTR [edx+0x6fbcc706]
  4163e0:	dec    eax
  4163e1:	push   cs
  4163e2:	dec    eax
  4163e3:	enter  0x6d09,0x39
  4163e7:	jbe    0x41638a
  4163e9:	inc    edi
  4163ea:	lahf   
  4163eb:	mov    ds:0xb5c4503b,eax
  4163f0:	push   ebx
  4163f1:	xlat   BYTE PTR ds:[ebx]
  4163f2:	add    dh,bl
  4163f4:	mov    al,ds:0x117ca45a
  4163f9:	imul   esp,DWORD PTR [esi+0x5f360fb6],0x4f
  416400:	and    ecx,DWORD PTR ds:0x9c945b0
  416406:	inc    ecx
  416407:	xor    al,BYTE PTR [ebx]
  416409:	cs pop es
  41640b:	imul   esp,ebp,0x8
  41640e:	sahf   
  41640f:	mov    ebx,0xb17f1b6b
  416414:	aam    0xf8
  416416:	cmp    DWORD PTR [eax],ebp
  416418:	jp     0x4163d3
  41641a:	xchg   edx,eax
  41641b:	lea    edi,[edi+0x69]
  41641e:	das    
  41641f:	ror    DWORD PTR [ebx],1
  416421:	and    BYTE PTR [eax-0x4d7424],dl
  416427:	jge    0x416487
  416429:	adc    al,0x44
  41642b:	addr16 jno 0x416466
  41642e:	mov    cl,0x60
  416430:	sub    ebx,DWORD PTR [eax+eax*1-0x7d81f25]
  416437:	xchg   esp,eax
  416438:	xchg   edx,eax
  416439:	xchg   esp,eax
  41643a:	and    eax,0x13429d78
  41643f:	(bad)  
  416440:	into   
  416441:	test   BYTE PTR [esi-0x3f],bl
  416444:	pushf  
  416445:	out    dx,al
  416446:	pop    ebx
  416447:	fstp   DWORD PTR [ebx-0x18]
  41644a:	lds    esp,FWORD PTR [ecx]
  41644c:	repz jmp 0xbe4a87dd
  416452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416453:	popa   
  416454:	inc    eax
  416455:	test   al,0xf7
  416457:	mov    ch,BYTE PTR [ebp-0x24]
  41645a:	add    ebx,eax
  41645c:	sti    
  41645d:	inc    ebp
  41645e:	enter  0xa75,0x4b
  416462:	loope  0x416414
  416464:	push   ss
  416465:	cdq    
  416466:	fiadd  WORD PTR [edi-0x65]
  416469:	pop    es
  41646a:	adc    dh,bh
  41646c:	int    0x57
  41646e:	pmulhrsw mm1,QWORD PTR [ebx-0x7ddaf636]
  416476:	jns    0x416421
  416478:	jp     0x41649e
  41647a:	and    ah,al
  41647c:	pop    esp
  41647d:	pushf  
  41647e:	jns    0x416445
  416480:	lock inc DWORD PTR [eax+0xd]
  416484:	cmp    esp,DWORD PTR [ebx]
  416486:	cld    
  416487:	sub    ah,al
  416489:	fld    DWORD PTR [edx]
  41648b:	int3   
  41648c:	ins    BYTE PTR es:[edi],dx
  41648d:	(bad)  
  41648e:	mov    dh,0x69
  416490:	pushf  
  416491:	xlat   BYTE PTR ds:[ebx]
  416492:	sti    
  416493:	xchg   esi,eax
  416494:	mov    al,0x57
  416496:	popa   
  416497:	lea    eax,[ebp-0x2976b9b1]
  41649d:	and    al,BYTE PTR [edx+0x5e85bdf]
  4164a3:	outs   dx,BYTE PTR ds:[esi]
  4164a4:	out    dx,al
  4164a5:	sub    DWORD PTR [ebx+0x17],esi
  4164a8:	sahf   
  4164a9:	stc    
  4164aa:	mov    ebp,0x88234d3e
  4164af:	jns    0x41645d
  4164b1:	test   DWORD PTR [edx-0x70],esi
  4164b4:	fs pop es
  4164b6:	retf   0x88a1
  4164b9:	xchg   ecx,eax
  4164ba:	outs   dx,DWORD PTR ds:[esi]
  4164bb:	repz xor al,0x12
  4164be:	push   cs
  4164bf:	(bad)  
  4164c0:	lea    eax,[edx+esi*1-0x2773da14]
  4164c7:	mov    ch,0x87
  4164c9:	and    ch,bl
  4164cb:	fsubrp st(5),st
  4164cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164ce:	mov    ds:0x51713c0f,al
  4164d3:	push   ss
  4164d4:	add    cl,0xa7
  4164d7:	or     ebp,ecx
  4164d9:	hlt    
  4164da:	fisub  DWORD PTR ds:0x2b8607f3
  4164e0:	xchg   edx,eax
  4164e1:	push   ebp
  4164e2:	xchg   ecx,eax
  4164e3:	stos   DWORD PTR es:[edi],eax
  4164e4:	inc    eax
  4164e5:	jp     0x416473
  4164e7:	test   BYTE PTR [eax+0xe],bh
  4164ea:	shl    ecx,1
  4164ec:	cmp    edi,edx
  4164ee:	aas    
  4164ef:	xchg   edx,eax
  4164f0:	jecxz  0x4164df
  4164f2:	inc    esi
  4164f3:	sbb    DWORD PTR [edx-0x1b],eax
  4164f6:	xchg   BYTE PTR [esi-0x50],bl
  4164f9:	cmp    al,0x83
  4164fb:	sbb    esp,DWORD PTR [edi+0x31d44c38]
  416501:	xchg   esp,eax
  416502:	loopne 0x41656b
  416504:	mov    ah,0x11
  416506:	mov    ebp,0xc50bc2
  41650b:	nop
  41650c:	pop    edx
  41650d:	je     0x416585
  41650f:	dec    edi
  416510:	dec    edi
  416511:	in     al,dx
  416512:	call   0xf29456c5
  416517:	fmul   DWORD PTR [eax]
  416519:	pop    es
  41651a:	inc    eax
  41651b:	xor    ecx,DWORD PTR [edi+0x35a949f0]
  416521:	add    al,0x80
  416523:	ins    DWORD PTR es:[edi],dx
  416524:	ja     0x4164a8
  416526:	push   esp
  416527:	popa   
  416528:	inc    ecx
  416529:	jno    0x41659d
  41652b:	lock (bad) 
  41652e:	lea    eax,[edi]
  416530:	hlt    
  416531:	ins    DWORD PTR es:[edi],dx
  416532:	jne    0x41653a
  416534:	lods   al,BYTE PTR ds:[esi]
  416535:	jmp    FWORD PTR [eax-0x1cfe2bfa]
  41653b:	sti    
  41653c:	sub    dh,bh
  41653e:	dec    ebp
  41653f:	xor    al,0x9f
  416541:	mov    DWORD PTR [edi-0x2355dac9],ecx
  416547:	(bad)  
  416548:	icebp  
  416549:	push   0x5e
  41654b:	and    ah,0x82
  41654e:	dec    edi
  41654f:	pop    es
  416550:	or     al,0xe1
  416552:	or     ebx,DWORD PTR [edi]
  416554:	js     0x416517
  416556:	jge    0x41654d
  416558:	daa    
  416559:	and    BYTE PTR [ecx+ebp*4+0x2c9c4f91],bh
  416560:	fwait
  416561:	ins    DWORD PTR es:[edi],dx
  416562:	fwait
  416563:	mov    ebx,0x5cc1e9d2
  416568:	aaa    
  416569:	inc    edi
  41656a:	jmp    0xcdc3:0x20d725af
  416571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416572:	or     bh,bl
  416574:	dec    esp
  416575:	retf   
  416576:	xchg   esp,eax
  416577:	sbb    DWORD PTR [edx+0x21],edx
  41657a:	jecxz  0x4165b3
  41657c:	inc    ebp
  41657d:	or     esi,DWORD PTR [edi+ecx*1]
  416580:	adc    eax,0x8deaa680
  416585:	add    DWORD PTR [ecx+ecx*4],esp
  416588:	leave  
  416589:	and    cl,BYTE PTR [edi-0x78]
  41658c:	xchg   DWORD PTR [edx+0x3c],esp
  41658f:	xchg   edi,eax
  416590:	fmul   st,st(2)
  416592:	mov    esi,0x909fdb19
  416597:	dec    esi
  416598:	rcl    ebx,cl
  41659a:	inc    edi
  41659b:	mov    ch,0x6a
  41659d:	sbb    al,0xe2
  41659f:	or     eax,0x5901e8d6
  4165a4:	in     al,0x53
  4165a6:	les    ebx,FWORD PTR [edx+0x5d]
  4165a9:	scas   eax,DWORD PTR es:[edi]
  4165aa:	leave  
  4165ab:	mov    bl,0xd4
  4165ad:	std    
  4165ae:	add    ch,cl
  4165b0:	mov    dh,bh
  4165b2:	xchg   BYTE PTR [eax+0x46],bl
  4165b5:	js     0x4165a8
  4165b7:	xor    ch,BYTE PTR [eax+0x35acd27a]
  4165bd:	jmp    0xf4d8:0xd5c4e4b7
  4165c4:	inc    edx
  4165c5:	jg     0x4165af
  4165c7:	or     ecx,DWORD PTR [edx+esi*2+0x26]
  4165cb:	idiv   ch
  4165cd:	cmp    al,0xcb
  4165cf:	push   es
  4165d0:	jbe    0x4165b9
  4165d2:	push   0x5ad86846
  4165d7:	dec    ebx
  4165d8:	and    BYTE PTR [edi-0x4c42428a],bl
  4165de:	scas   al,BYTE PTR es:[edi]
  4165df:	iret   
  4165e0:	aaa    
  4165e1:	add    cl,0xb0
  4165e4:	inc    edx
  4165e5:	scas   al,BYTE PTR es:[edi]
  4165e6:	out    dx,eax
  4165e7:	loope  0x4165bc
  4165e9:	pop    eax
  4165ea:	pop    eax
  4165eb:	dec    ebp
  4165ec:	out    0xe9,al
  4165ee:	je     0x416614
  4165f0:	pusha  
  4165f1:	fcom   st(3)
  4165f3:	(bad)  
  4165f5:	add    BYTE PTR [edi+0x1f],cl
  4165f8:	(bad)  
  4165f9:	repz (bad) 
  4165fb:	push   0xffffff84
  4165fd:	mov    al,ds:0xb49bc4a4
  416602:	outs   dx,BYTE PTR ds:[esi]
  416603:	mov    eax,0xa62d56b3
  416608:	add    eax,0xccba4d26
  41660d:	mov    al,ds:0xb3de16f9
  416612:	into   
  416613:	rcl    DWORD PTR [ebp+0x32],0x9f
  416617:	sub    cl,ch
  416619:	pop    esi
  41661a:	mov    al,ds:0x959a578
  41661f:	jns    0x416645
  416621:	pop    es
  416622:	int3   
  416623:	push   edi
  416624:	je     0x4165f8
  416626:	fdiv   QWORD PTR [ecx+0x30]
  416629:	lds    eax,FWORD PTR [ecx+0x6230d458]
  41662f:	(bad)
  416633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416634:	inc    edi
  416635:	enter  0x2944,0x69
  416639:	push   esp
  41663a:	(bad)  
  41663b:	xor    BYTE PTR [ebx-0x37],al
  41663e:	push   edi
  41663f:	test   BYTE PTR [esi-0x3b6d1128],cl
  416645:	jnp    0x4165c9
  416647:	xor    eax,0x5fc41a57
  41664c:	stos   BYTE PTR es:[edi],al
  41664d:	push   ecx
  41664e:	push   cs
  41664f:	push   ebp
  416650:	inc    ebx
  416651:	aaa    
  416652:	fisttp QWORD PTR [ebp+0x7ad35808]
  416658:	hlt    
  416659:	inc    ecx
  41665a:	cld    
  41665b:	outs   dx,DWORD PTR ds:[esi]
  41665c:	ins    BYTE PTR es:[edi],dx
  41665d:	xor    DWORD PTR [eax],ebx
  41665f:	rol    BYTE PTR [eax-0x69],0xde
  416663:	loopne 0x4166c5
  416665:	inc    edx
  416666:	push   edx
  416667:	pop    ds
  416668:	lea    ebx,[ebp+0x730cfd89]
  41666e:	nop
  41666f:	(bad)  
  416670:	pusha  
  416671:	cmp    ah,BYTE PTR [ebp+0x7bd8b47a]
  416677:	int    0xf3
  416679:	xor    BYTE PTR [esi-0x7b],ah
  41667c:	add    ecx,DWORD PTR [ebx+0x8]
  41667f:	clc    
  416680:	cmp    edi,DWORD PTR [esp+ecx*4-0x59a80be4]
  416687:	jp     0x4166c0
  416689:	push   cs
  41668a:	inc    eax
  41668b:	and    eax,0xae6e4a12
  416690:	pop    edx
  416691:	mov    ebp,0xe8e87ee4
  416696:	add    al,0x15
  416698:	enter  0x22c8,0x5d
  41669c:	fcom   QWORD PTR [edi-0x7d]
  41669f:	cmp    bh,BYTE PTR [ebx-0xac65a9e]
  4166a5:	push   esp
  4166a6:	sbb    eax,0x79f68cb4
  4166ab:	stos   DWORD PTR es:[edi],eax
  4166ac:	dec    ebp
  4166ad:	or     ecx,edi
  4166af:	and    DWORD PTR [ecx+0x2d],edi
  4166b2:	mov    fs,esp
  4166b4:	ins    BYTE PTR es:[edi],dx
  4166b5:	stos   BYTE PTR es:[edi],al
  4166b6:	cmp    eax,0x867fdc17
  4166bb:	and    BYTE PTR [ebx-0x11e5796a],al
  4166c1:	push   cs
  4166c2:	hlt    
  4166c3:	sub    BYTE PTR [eax+0x13e80254],cl
  4166c9:	(bad)  
  4166ca:	je     0x416683
  4166cc:	in     eax,0xbc
  4166ce:	push   0xd9d89678
  4166d3:	lahf   
  4166d4:	rcl    eax,0x4e
  4166d7:	fwait
  4166d8:	dec    edx
  4166d9:	leave  
  4166da:	mov    ds:0x736ea407,eax
  4166df:	sti    
  4166e0:	retf   0xafcc
  4166e3:	aam    0xf3
  4166e5:	inc    ebx
  4166e6:	and    eax,0x265c559
  4166eb:	scas   al,BYTE PTR es:[edi]
  4166ec:	retf   0xa2d3
  4166ef:	(bad)  
  4166f0:	out    0x78,al
  4166f2:	psubw  mm4,mm4
  4166f5:	cmp    BYTE PTR [ecx-0x5c],0x14
  4166f9:	(bad)  
  4166fa:	and    DWORD PTR [eax],esp
  4166fc:	outs   dx,DWORD PTR ds:[esi]
  4166fd:	ja     0x41675e
  4166ff:	cs loop 0x41674b
  416702:	clc    
  416703:	and    BYTE PTR [ecx+0xf2191cb],0x50
  41670a:	dec    edi
  41670b:	dec    ebx
  41670c:	jecxz  0x416720
  41670e:	mov    dh,0xfd
  416710:	jae    0x4166cd
  416712:	adc    esp,DWORD PTR [eax]
  416714:	xchg   ecx,eax
  416715:	cs jo  0x4166d4
  416718:	cdq    
  416719:	call   0x5c7dacad
  41671e:	outs   dx,BYTE PTR ds:[esi]
  41671f:	(bad)  
  416720:	or     eax,0xff7d1a58
  416725:	adc    BYTE PTR [ebp-0x3b0261a1],cl
  41672b:	mov    edi,0xb98c0738
  416730:	shl    DWORD PTR [edx],cl
  416732:	lds    ebx,FWORD PTR [ecx-0x43db57d0]
  416738:	lds    edi,FWORD PTR [ecx-0x41]
  41673b:	xor    cl,BYTE PTR [edi+0x69bdf13a]
  416741:	sbb    eax,0xa182ea04
  416746:	mov    cs,WORD PTR [ebp-0xa]
  416749:	xchg   esp,eax
  41674a:	loop   0x4166e7
  41674c:	sar    BYTE PTR [esi],cl
  41674e:	or     dh,BYTE PTR [edx-0x908bf89]
  416754:	mov    ebp,0x2e3a323f
  416759:	dec    eax
  41675a:	std    
  41675b:	jo     0x4166fc
  41675d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41675e:	mov    al,BYTE PTR [edx-0x67]
  416761:	aas    
  416762:	and    ch,cl
  416764:	or     esi,DWORD PTR [ecx+edi*2]
  416767:	xchg   DWORD PTR [ebp+0x342a5a27],eax
  41676d:	rcr    BYTE PTR [edi+ebp*2-0x7405252f],0xb6
  416775:	fadd   DWORD PTR [edx+0x528474ab]
  41677b:	loopne 0x4167d5
  41677d:	dec    ecx
  41677e:	pop    eax
  41677f:	cmc    
  416780:	aaa    
  416781:	int    0x76
  416783:	jns    0x41678d
  416785:	shr    DWORD PTR [edi-0x5b],0x1e
  416789:	rol    ebx,1
  41678b:	pop    ebx
  41678c:	sti    
  41678d:	adc    cl,BYTE PTR [edx]
  41678f:	and    ecx,DWORD PTR [ebp+eiz*4-0x73]
  416793:	jecxz  0x41680f
  416795:	sub    ah,BYTE PTR [ecx]
  416797:	cld    
  416798:	ret    
  416799:	cmp    bl,BYTE PTR [esi-0x35]
  41679c:	or     eax,0xe793da75
  4167a1:	dec    eax
  4167a2:	push   esi
  4167a3:	adc    BYTE PTR [ecx],al
  4167a5:	rol    BYTE PTR [ebx],cl
  4167a7:	push   0xffffffb2
  4167a9:	out    0x2e,al
  4167ab:	in     eax,0x1f
  4167ad:	mov    ebp,0x947dde75
  4167b2:	(bad)  
  4167b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167b4:	add    eax,0x7e546864
  4167b9:	daa    
  4167ba:	inc    edi
  4167bb:	mov    WORD PTR [edx+ebp*2],cs
  4167be:	lds    ebp,FWORD PTR [edi]
  4167c0:	(bad)  [ebx]
  4167c2:	cdq    
  4167c3:	gs loopne 0x4167bd
  4167c6:	aad    0xd9
  4167c8:	jle    0x4167c9
  4167ca:	sar    BYTE PTR ds:0xe86c080d,0xdd
  4167d1:	xor    eax,DWORD PTR [ecx]
  4167d3:	mov    DWORD PTR [edi],edi
  4167d5:	jle    0x4167b5
  4167d7:	test   al,0xb2
  4167d9:	add    BYTE PTR [eax+0x0],dh
  4167dc:	sti    
  4167dd:	aas    
  4167de:	jle    0x4167c1
  4167e0:	add    DWORD PTR [eax-0x9fdc3ef],0x72
  4167e7:	and    eax,0x38046d9b
  4167ec:	xchg   ecx,eax
  4167ed:	mov    ebx,0x8ff1da1a
  4167f2:	(bad)  
  4167f3:	mov    dl,0xd2
  4167f5:	push   ebx
  4167f6:	imul   esi,edi,0x1e
  4167f9:	mov    ds:0xc2da19f,al
  4167fe:	div    DWORD PTR [ebp-0x1ccaaf61]
  416804:	pop    eax
  416805:	neg    ch
  416807:	and    DWORD PTR [edx],esi
  416809:	add    BYTE PTR [esi+0x70cf14cb],dl
  41680f:	ret    0xa2c
  416812:	inc    ecx
  416813:	dec    esi
  416814:	mov    al,ds:0x77a913fb
  416819:	push   ebx
  41681a:	(bad)  
  41681c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41681d:	test   BYTE PTR [ebp-0x3e],dh
  416820:	jmp    0x41683a
  416822:	mov    bl,0xff
  416824:	out    dx,eax
  416825:	retf   0xe632
  416828:	dec    edx
  416829:	dec    eax
  41682a:	sub    eax,0x9926f735
  41682f:	mov    BYTE PTR [ebp-0x2e0be6c5],bl
  416835:	lock mov dl,0xeb
  416838:	je     0x4167cb
  41683a:	mov    WORD PTR [edx],?
  41683c:	pop    edi
  41683d:	mov    ch,0xbb
  41683f:	push   eax
  416840:	sbb    al,0x54
  416842:	adc    BYTE PTR [ebx],0xf5
  416845:	les    ecx,FWORD PTR [edx+0x5a1c8699]
  41684b:	cwde   
  41684c:	imul   ebx,DWORD PTR [esi-0x42],0xfffffff5
  416850:	bound  edi,QWORD PTR [esi+0x6f2af5e4]
  416856:	mov    ecx,0x31386c8e
  41685b:	test   DWORD PTR [ecx+0x3],ebp
  41685e:	cmp    bl,dh
  416860:	or     cl,cl
  416862:	fsub   st(6),st
  416864:	dec    esi
  416865:	dec    eax
  416866:	dec    edi
  416867:	retf   0x8f21
  41686a:	or     ebx,edi
  41686c:	and    DWORD PTR [eax+ebx*4],ebp
  41686f:	lea    ecx,[eax+0x47656ec0]
  416875:	ja     0x4168ed
  416877:	add    BYTE PTR [edx+edi*2-0x44],dl
  41687b:	mov    ds:0x3054708,eax
  416880:	rcl    BYTE PTR [ebx+eax*1+0x7b],0x23
  416885:	nop
  416886:	xchg   edi,eax
  416887:	shl    BYTE PTR [eax*2-0x7498b79e],0x58
  41688f:	dec    ebx
  416890:	and    dh,ch
  416892:	shl    ebp,cl
  416894:	mov    dh,0xe0
  416896:	data16 cmp bh,BYTE PTR [edx-0x199dd112]
  41689d:	push   ebx
  41689e:	sbb    BYTE PTR [esi-0xfe7f05d],0x3f
  4168a5:	(bad)  
  4168a6:	call   DWORD PTR [ebx-0x55a3b363]
  4168ac:	lock jle 0x416885
  4168af:	ins    DWORD PTR es:[edi],dx
  4168b0:	je     0x4168ee
  4168b2:	leave  
  4168b3:	xchg   edi,eax
  4168b4:	xor    al,bl
  4168b6:	sbb    WORD PTR [ebx+esi*8+0x48659f0b],cx
  4168be:	int    0x21
  4168c0:	arpl   WORD PTR [edi],dx
  4168c2:	inc    edi
  4168c3:	scas   al,BYTE PTR es:[edi]
  4168c4:	(bad)  
  4168c5:	cmp    eax,0xe6461923
  4168ca:	pusha  
  4168cb:	pop    ds
  4168cc:	sub    DWORD PTR [edx-0x34],ecx
  4168cf:	ins    BYTE PTR es:[edi],dx
  4168d0:	std    
  4168d1:	add    BYTE PTR [ebx-0x51],ah
  4168d4:	push   ebp
  4168d5:	gs push esi
  4168d7:	fwait
  4168d8:	out    0xcc,eax
  4168da:	sbb    ah,ah
  4168dc:	stos   DWORD PTR es:[edi],eax
  4168dd:	mov    ecx,0x314eaecc
  4168e2:	pusha  
  4168e3:	dec    eax
  4168e4:	je     0x4168ef
  4168e6:	xlat   BYTE PTR ds:[ebx]
  4168e7:	in     al,dx
  4168e8:	push   eax
  4168e9:	inc    ecx
  4168ea:	dec    esp
  4168eb:	or     DWORD PTR [eax],ecx
  4168ed:	fsub   QWORD PTR [esi-0xa9e8c23]
  4168f3:	bound  ebx,QWORD PTR [esi+0x7]
  4168f6:	adc    DWORD PTR [esi+ecx*8+0x323e0f51],eax
  4168fd:	in     al,dx
  4168fe:	inc    esi
  4168ff:	ret    
  416900:	inc    ebp
  416901:	add    BYTE PTR [esi-0x4cc563d7],0x78
  416908:	das    
  416909:	adc    al,0x93
  41690b:	sbb    dl,dh
  41690d:	cwde   
  41690e:	mov    cl,0xfe
  416910:	je     0x4168f9
  416912:	inc    ebx
  416913:	in     eax,dx
  416914:	retf   
  416915:	push   cs
  416916:	sub    DWORD PTR [ebx],ebp
  416918:	jle    0x4168dc
  41691a:	adc    bl,BYTE PTR [ecx-0x80]
  41691d:	inc    esp
  41691e:	jl     0x41690a
  416920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416921:	in     al,dx
  416922:	inc    edx
  416923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416924:	aas    
  416925:	mov    ecx,0xac7f7b45
  41692a:	lahf   
  41692b:	add    al,0xec
  41692d:	je     0x416987
  41692f:	and    dh,bl
  416931:	and    eax,0xad0e90e4
  416936:	inc    esi
  416937:	(bad)  
  416939:	cwde   
  41693a:	inc    edi
  41693b:	mul    DWORD PTR [edx]
  41693d:	mov    bh,0x3
  41693f:	cmp    ah,dl
  416941:	aad    0xe3
  416943:	mov    ds:0x5ce35620,eax
  416948:	pop    esi
  416949:	imul   ecx,DWORD PTR [edi],0x51937dd3
  41694f:	cmp    BYTE PTR [esi-0x3edd027d],bh
  416955:	cmp    al,0x73
  416957:	push   DWORD PTR [ebp+0x379deb2b]
  41695d:	jl     0x41697c
  41695f:	popf   
  416960:	ret    0xc409
  416963:	sbb    BYTE PTR [ebx+0x32],ah
  416966:	ja     0x416912
  416968:	push   edx
  416969:	mov    DWORD PTR ds:[ebp+0xd7d80d9],edx
  416970:	push   esi
  416971:	sub    al,BYTE PTR [eax]
  416973:	bound  ebp,QWORD PTR [ebx]
  416975:	xchg   DWORD PTR [eax-0x3755bf7e],ebp
  41697b:	mov    ?,WORD PTR [ecx+esi*4+0x6874c124]
  416982:	push   esi
  416983:	retf   0x840e
  416986:	and    esi,DWORD PTR [edi+0x584932b6]
  41698c:	and    eax,0x197b5e5b
  416991:	retf   0xc8c2
  416994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416995:	rcr    DWORD PTR [eax],cl
  416997:	lods   al,BYTE PTR ds:[esi]
  416998:	xor    eax,0x7e35542
  41699d:	push   ebx
  41699e:	cmp    esp,esi
  4169a0:	dec    edx
  4169a1:	stos   BYTE PTR es:[edi],al
  4169a2:	mov    ds:0x489bc98a,al
  4169a7:	ja     0x41699a
  4169a9:	xchg   esi,eax
  4169aa:	push   edi
  4169ab:	gs mov ecx,0xe5af6c34
  4169b1:	xor    DWORD PTR [esi-0x1029e97e],0x31
  4169b8:	add    eax,0x1f6f1b24
  4169bd:	push   esi
  4169be:	ja     0x416a0c
  4169c0:	ja     0x41699a
  4169c2:	stc    
  4169c3:	fild   DWORD PTR [edx-0x1f]
  4169c6:	lea    edx,[edi+0x60]
  4169c9:	or     ebp,DWORD PTR [edx]
  4169cb:	mov    esp,0x8c155efd
  4169d0:	mov    cl,0xb6
  4169d2:	mov    ch,0x62
  4169d4:	or     BYTE PTR [ecx+0x42],ah
  4169d7:	cdq    
  4169d8:	mov    eax,ds:0x55a5ee2b
  4169dd:	pop    edi
  4169de:	adc    ah,ah
  4169e0:	mov    ebx,cr2
  4169e3:	adc    BYTE PTR [eax],dl
  4169e5:	sti    
  4169e6:	mov    cl,0x8d
  4169e8:	sbb    al,0xb9
  4169ea:	mov    WORD PTR [eax+esi*8],es
  4169ed:	into   
  4169ee:	or     cl,bl
  4169f0:	push   eax
  4169f1:	inc    ecx
  4169f2:	test   al,0x11
  4169f4:	sub    dl,BYTE PTR [edx-0x17]
  4169f7:	add    esi,ebp
  4169f9:	xchg   bh,cl
  4169fb:	fs xor dl,dl
  4169fe:	lahf   
  4169ff:	stos   DWORD PTR es:[edi],eax
  416a00:	jge    0x4169a9
  416a02:	adc    DWORD PTR [eax+0x7d],eax
  416a05:	nop
  416a06:	push   edx
  416a07:	scas   eax,DWORD PTR es:[edi]
  416a08:	cli    
  416a09:	shrd   edx,edx,0x3b
  416a0d:	(bad)  
  416a0e:	out    0x45,al
  416a10:	loop   0x416a31
  416a12:	mov    BYTE PTR [eax],dl
  416a14:	test   dh,bh
  416a16:	fist   DWORD PTR [ecx]
  416a18:	push   ebp
  416a19:	adc    al,0x5c
  416a1b:	outs   dx,BYTE PTR ds:[esi]
  416a1c:	iret   
  416a1d:	add    bl,al
  416a1f:	idiv   BYTE PTR [esp+esi*4-0x2f15a823]
  416a26:	addr16 dec esi
  416a28:	xlat   BYTE PTR ds:[ebx]
  416a29:	jge    0x4169e3
  416a2b:	fwait
  416a2c:	shl    DWORD PTR [edx-0x55],0xf6
  416a30:	int    0x25
  416a32:	sbb    BYTE PTR [ecx],bh
  416a34:	inc    eax
  416a35:	dec    esi
  416a36:	inc    eax
  416a37:	cwde   
  416a38:	push   ebp
  416a39:	cmp    ebp,ecx
  416a3b:	or     BYTE PTR [esi],dl
  416a3d:	(bad)  
  416a3e:	push   ebp
  416a3f:	mov    ds:0x7dd052d5,eax
  416a44:	and    DWORD PTR [ebx-0x5d9e7c9e],0x5e
  416a4b:	inc    ecx
  416a4c:	(bad)
  416a4f:	fwait
  416a50:	pusha  
  416a51:	xchg   ebp,eax
  416a52:	idiv   DWORD PTR [ebx+ecx*1-0x59]
  416a56:	nop
  416a57:	dec    esi
  416a58:	sahf   
  416a59:	pop    ss
  416a5a:	mov    dl,0xc1
  416a5c:	int3   
  416a5d:	aaa    
  416a5e:	mov    ah,0x8c
  416a60:	stos   DWORD PTR es:[edi],eax
  416a61:	cmp    edx,esp
  416a63:	mov    edi,esp
  416a65:	in     al,0xf8
  416a67:	jae    0x416a65
  416a69:	shl    BYTE PTR [ebp-0x6feff231],0xad
  416a70:	mov    edx,0xfb0078ad
  416a75:	xchg   esi,eax
  416a76:	arpl   si,di
  416a78:	and    dl,al
  416a7a:	iret   
  416a7b:	and    bl,BYTE PTR [edx-0x5d]
  416a7e:	mov    ds:0x92318f93,eax
  416a83:	sub    DWORD PTR [edx+0x15],edi
  416a86:	inc    ebp
  416a87:	mov    bh,0x16
  416a89:	push   0x2a
  416a8b:	fadd   QWORD PTR [ecx-0x30c4cc75]
  416a91:	mov    al,0x5e
  416a93:	inc    ebp
  416a94:	mov    ebx,edx
  416a96:	outs   dx,BYTE PTR ds:[esi]
  416a97:	dec    edx
  416a98:	push   ebp
  416a99:	lahf   
  416a9a:	fs je  0x416a89
  416a9d:	loope  0x416a5d
  416a9f:	call   0x7dc765fc
  416aa4:	ret    0x6fde
  416aa7:	push   eax
  416aa8:	pop    es
  416aa9:	(bad)  
  416aaa:	into   
  416aab:	inc    ebp
  416aac:	mul    DWORD PTR [esp+eax*1-0x10]
  416ab0:	or     al,BYTE PTR [edi+ebx*4+0x42]
  416ab4:	mov    edx,0x1d058654
  416ab9:	xor    bh,ah
  416abb:	adc    edi,eax
  416abd:	adc    al,0x60
  416abf:	repnz sbb DWORD PTR [ebp-0x49],ebp
  416ac3:	adc    DWORD PTR [ebp+0x4f],edi
  416ac6:	fdivr  DWORD PTR [edx]
  416ac8:	in     eax,0x7e
  416aca:	xchg   esp,eax
  416acb:	sub    ebp,DWORD PTR [ecx+ebp*4+0x5c25819a]
  416ad2:	(bad)  
  416ad3:	mov    al,0xac
  416ad5:	fsincos 
  416ad7:	and    ebx,DWORD PTR [ebx]
  416ad9:	fwait
  416ada:	jbe    0x416ab6
  416adc:	dec    esi
  416add:	mov    ebx,0x558f63ed
  416ae2:	fidivr WORD PTR [eax-0x71]
  416ae5:	repz aam 0xf6
  416ae8:	inc    edi
  416ae9:	imul   eax,DWORD PTR [eax],0xe7b571c3
  416aef:	sbb    eax,0xc1747c78
  416af4:	sbb    bh,cl
  416af6:	xchg   edx,eax
  416af7:	gs (bad) 
  416afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416afb:	mov    ebx,0xe98185e8
  416b00:	mov    DWORD PTR [esi-0x32720bf3],esp
  416b06:	(bad)  
  416b07:	in     eax,dx
  416b08:	or     al,0x9b
  416b0a:	mov    ah,BYTE PTR [edx+0x4f]
  416b0d:	pop    ds
  416b0e:	fs retf 0xf056
  416b12:	dec    esp
  416b13:	leave  
  416b14:	and    DWORD PTR [esi+0x4ce6ee59],eax
  416b1a:	sbb    esi,ebp
  416b1c:	adc    DWORD PTR [edx-0x2f],ebx
  416b1f:	sbb    ebx,esp
  416b21:	mov    ecx,0xbbaa8c08
  416b26:	xchg   ebp,eax
  416b27:	push   es
  416b28:	out    dx,eax
  416b29:	sbb    DWORD PTR [eax-0x138c816b],edi
  416b2f:	data16 fst DWORD PTR [eax+0x7b]
  416b33:	dec    ebp
  416b34:	rol    BYTE PTR [eax],0x0
  416b37:	in     al,dx
  416b38:	sti    
  416b39:	push   esi
  416b3a:	lea    edx,[ebp-0x74cb9425]
  416b40:	addr16 xchg ebp,eax
  416b42:	cmp    DWORD PTR [esi+eax*8],esi
  416b45:	ins    BYTE PTR es:[edi],dx
  416b46:	jp     0x416bb1
  416b48:	dec    edx
  416b49:	fcom   QWORD PTR [ebp+0x73c39b78]
  416b4f:	mov    edi,0xf18cb950
  416b54:	xchg   ebx,eax
  416b55:	lods   al,BYTE PTR ds:[esi]
  416b56:	inc    ebx
  416b57:	test   DWORD PTR [edi],edx
  416b59:	mov    ch,0x30
  416b5b:	ja     0x416af1
  416b5d:	out    dx,eax
  416b5e:	(bad)  
  416b5f:	mov    edx,0xbd266ce7
  416b64:	into   
  416b65:	xchg   BYTE PTR [esi+0x7c],dl
  416b68:	jle    0x416be6
  416b6a:	inc    eax
  416b6b:	stos   DWORD PTR es:[edi],eax
  416b6c:	xlat   BYTE PTR ds:[ebx]
  416b6d:	mov    cl,0xf8
  416b6f:	pop    ds
  416b70:	adc    DWORD PTR [edi+0x3d],ebp
  416b73:	loopne 0x416b2c
  416b75:	sbb    BYTE PTR [eax-0x298d95cd],dl
  416b7b:	sub    DWORD PTR [ecx],edx
  416b7d:	or     eax,0x94755e33
  416b82:	ds cdq 
  416b84:	into   
  416b85:	cmc    
  416b86:	dec    esi
  416b87:	mov    ah,0xe2
  416b89:	daa    
  416b8a:	or     al,0xed
  416b8c:	int3   
  416b8d:	mov    bl,0x85
  416b8f:	sbb    DWORD PTR [ebp-0x43],esp
  416b92:	in     eax,dx
  416b93:	cwde   
  416b94:	xchg   ebx,eax
  416b95:	pop    ds
  416b96:	popa   
  416b97:	int    0x58
  416b99:	mov    eax,ds:0x437e31db
  416b9e:	fs dec ebx
  416ba0:	push   es
  416ba1:	rol    BYTE PTR [eax+ebp*1],1
  416ba4:	pop    ds
  416ba5:	aaa    
  416ba6:	sbb    edi,DWORD PTR [ecx+edi*4+0x330edd56]
  416bad:	xchg   ecx,eax
  416bae:	ret    
  416baf:	scas   al,BYTE PTR es:[edi]
  416bb0:	xor    al,0xb9
  416bb2:	xchg   esp,eax
  416bb3:	mov    ch,0xd
  416bb5:	push   edi
  416bb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bb7:	inc    esi
  416bb8:	icebp  
  416bb9:	loopne 0x416c34
  416bbb:	push   cs
  416bbc:	fcomi  st,st(0)
  416bbe:	add    esi,DWORD PTR [ebx-0x47]
  416bc1:	cmp    ecx,DWORD PTR [edi-0x51]
  416bc4:	rcr    BYTE PTR [ebx+0x70147ac],0x9b
  416bcb:	push   ecx
  416bcc:	scas   al,BYTE PTR es:[edi]
  416bcd:	dec    esp
  416bce:	xor    bl,al
  416bd0:	(bad)  
  416bd2:	sar    cl,0xd6
  416bd5:	test   edi,ebp
  416bd7:	add    ch,BYTE PTR [eax+0x16a3c846]
  416bdd:	and    bh,dh
  416bdf:	mov    edx,0xb2997fcc
  416be4:	lds    ebx,FWORD PTR [edi]
  416be6:	mov    ds:0x6efad20c,eax
  416beb:	loopne 0x416bdc
  416bed:	mov    edi,0xfc3e7d14
  416bf2:	jecxz  0x416bfc
  416bf4:	inc    BYTE PTR [esi]
  416bf6:	xchg   ebx,eax
  416bf7:	mov    WORD PTR [edi+0x3e899943],ds
  416bfd:	pop    es
  416bfe:	aas    
  416bff:	scas   al,BYTE PTR es:[edi]
  416c00:	dec    esp
  416c01:	mov    WORD PTR [edi+0x2f3632e2],ds
  416c07:	repz and esp,DWORD PTR [edi+0x1c5052f0]
  416c0e:	cwde   
  416c0f:	mov    dl,0x65
  416c11:	repnz add al,0x68
  416c14:	lahf   
  416c15:	inc    eax
  416c16:	pusha  
  416c17:	cli    
  416c18:	push   es
  416c19:	mov    esi,0xe275a495
  416c1e:	push   edi
  416c1f:	popa   
  416c20:	lds    esi,FWORD PTR [ebp-0xc954774]
  416c26:	test   DWORD PTR [ecx-0x731551d1],ebp
  416c2c:	in     eax,dx
  416c2d:	inc    ecx
  416c2e:	enter  0x5dd0,0xc
  416c32:	rol    DWORD PTR ds:0x7e7a1060,cl
  416c38:	fisub  DWORD PTR [edi]
  416c3a:	aaa    
  416c3b:	mov    al,ds:0xd14d3caa
  416c40:	pop    eax
  416c41:	(bad)  
  416c43:	out    dx,eax
  416c44:	xchg   esi,eax
  416c45:	push   esp
  416c46:	fs iret 
  416c48:	mov    esp,0x62408a9e
  416c4d:	mov    DWORD PTR [edx+0xbc988af],edi
  416c53:	xchg   esi,eax
  416c54:	mov    esi,0x531e312f
  416c59:	(bad)  [edx]
  416c5b:	adc    cl,BYTE PTR [ecx+ebx*8-0x2a]
  416c5f:	fsub   QWORD PTR [esi]
  416c61:	jbe    0x416c3b
  416c63:	sti    
  416c64:	sbb    eax,0xea784f09
  416c69:	out    0x53,al
  416c6b:	jmp    0xb08c:0xa96a85fe
  416c72:	stos   BYTE PTR es:[edi],al
  416c73:	hlt    
  416c74:	adc    eax,0x587b332f
  416c79:	pop    edi
  416c7a:	lahf   
  416c7b:	xor    ch,ah
  416c7d:	mov    edx,0xd87d1763
  416c82:	pop    esi
  416c83:	outs   dx,DWORD PTR ds:[esi]
  416c84:	test   BYTE PTR [eax+eiz*4],bh
  416c87:	addr16 jnp 0x416c6c
  416c8a:	scas   al,BYTE PTR es:[edi]
  416c8b:	push   ebp
  416c8c:	jmp    0x567a3d61
  416c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c92:	retf   
  416c93:	pop    esi
  416c94:	xchg   ebx,eax
  416c95:	jb     0x416c8b
  416c97:	test   BYTE PTR [ebx*2-0x3a5c1d52],ch
  416c9e:	shl    bl,0x42
  416ca1:	gs hlt 
  416ca3:	mov    esi,0x70e72562
  416ca8:	xor    eax,0x75308799
  416cad:	dec    edi
  416cae:	retf   0x651c
  416cb1:	fwait
  416cb2:	jbe    0x416d30
  416cb4:	pusha  
  416cb5:	int3   
  416cb6:	frstor [eax+0x31]
  416cb9:	push   ebp
  416cba:	sbb    al,0xfa
  416cbc:	inc    ebp
  416cbd:	and    eax,0xc64c6714
  416cc2:	bound  edi,QWORD PTR [eax+0x76]
  416cc5:	les    ecx,FWORD PTR [ebp+0x780ac046]
  416ccb:	xor    eax,0x56d266a3
  416cd0:	and    edi,DWORD PTR [esi+0x72366b45]
  416cd6:	std    
  416cd7:	cmp    eax,0xd5957b80
  416cdc:	in     al,dx
  416cdd:	pusha  
  416cde:	sbb    ebx,DWORD PTR [ebx-0x9]
  416ce1:	inc    esi
  416ce2:	cs sub al,0x2
  416ce5:	aam    0xcc
  416ce7:	or     cl,BYTE PTR [eax+0x2]
  416cea:	(bad)  
  416cec:	xor    ebx,DWORD PTR [esi+ebx*1+0x770f1980]
  416cf3:	mov    al,0x87
  416cf5:	sbb    BYTE PTR [ecx],dl
  416cf7:	mov    BYTE PTR [edx+0x4fdb3809],dl
  416cfd:	inc    esp
  416cfe:	lods   eax,DWORD PTR ds:[esi]
  416cff:	adc    al,0x51
  416d01:	jmp    0x36ab:0x5f9c02e9
  416d08:	fdivrp st(3),st
  416d0a:	popa   
  416d0b:	mov    dl,0xa6
  416d0d:	xchg   edx,eax
  416d0e:	sbb    al,0xfc
  416d10:	shl    DWORD PTR [edi+0x7],1
  416d13:	dec    ebp
  416d14:	mov    al,0xb4
  416d16:	jae    0x416cf3
  416d18:	cld    
  416d19:	inc    ebp
  416d1a:	inc    edi
  416d1b:	sti    
  416d1c:	pop    ds
  416d1d:	jmp    0xb2b5:0x2669fee9
  416d24:	dec    ebx
  416d25:	mov    ebx,0x979193ce
  416d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d2b:	mov    ch,0xdd
  416d2d:	icebp  
  416d2e:	shl    DWORD PTR [eax],0xb5
  416d31:	mov    cl,0x65
  416d33:	inc    edi
  416d34:	aas    
  416d35:	arpl   WORD PTR [ebx-0x2a7b5cfb],sp
  416d3b:	(bad)  
  416d3c:	push   ss
  416d3d:	not    BYTE PTR [esi]
  416d3f:	je     0x416d29
  416d41:	stc    
  416d42:	push   0xfffffffd
  416d44:	ss xchg edx,eax
  416d46:	jmp    0x3d45:0xd12cd077
  416d4d:	sbb    ah,cl
  416d4f:	xchg   ebp,eax
  416d50:	repz cdq 
  416d52:	jnp    0x416dd3
  416d54:	xor    BYTE PTR [edi-0x2ebc2aa4],al
  416d5a:	(bad)
  416d5e:	(bad)  
  416d5f:	and    BYTE PTR [eax+0x5ed01259],dl
  416d65:	add    bh,BYTE PTR [edx]
  416d67:	push   esp
  416d68:	push   edi
  416d69:	shr    DWORD PTR [eax],cl
  416d6b:	mov    esi,0xfeb948e3
  416d70:	jae    0x416d6a
  416d72:	mov    al,ds:0x38884be0
  416d77:	jp     0x416d09
  416d79:	xadd   edx,eax
  416d7c:	mov    bh,BYTE PTR [esi-0x37f5c7b1]
  416d82:	add    eax,0x339de43b
  416d87:	xor    dl,dl
  416d89:	gs jno 0x416d75
  416d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d8d:	das    
  416d8e:	clc    
  416d8f:	into   
  416d90:	or     al,0x7
  416d92:	dec    ebx
  416d93:	cmp    eax,0x47e304d2
  416d98:	or     BYTE PTR [edx+0x3c],ch
  416d9b:	xchg   BYTE PTR [ecx],ah
  416d9d:	(bad)  
  416d9e:	cli    
  416d9f:	pushf  
  416da0:	mov    ecx,edi
  416da2:	inc    esi
  416da3:	mov    ecx,0x82c2435a
  416da8:	sub    esp,DWORD PTR [ebp-0x31ecf3fb]
  416dae:	sub    al,0x15
  416db0:	sbb    eax,0xdc2079c0
  416db5:	pop    ebx
  416db6:	cmp    eax,0xf06766ca
  416dbc:	cmp    al,0xd7
  416dbe:	sbb    DWORD PTR [ebx-0x60],0xffffffac
  416dc2:	(bad)  
  416dc3:	push   ebx
  416dc4:	xor    BYTE PTR [eax+0x56],al
  416dc7:	cs test ecx,edx
  416dca:	repz into 
  416dcc:	inc    BYTE PTR [eax-0x4c]
  416dcf:	inc    esi
  416dd0:	div    esp
  416dd2:	ror    DWORD PTR [edi-0xaa77859],0xc8
  416dd9:	and    DWORD PTR [eax+0xb],ecx
  416ddc:	repnz mov ebx,0xcceaefa6
  416de2:	cs cdq 
  416de4:	fcmovu st,st(7)
  416de6:	pop    ebp
  416de7:	ret    0x8561
  416dea:	es mov dl,0x96
  416ded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dee:	pusha  
  416def:	pushf  
  416df0:	test   BYTE PTR [esi-0x57],bl
  416df3:	(bad)  
  416df4:	cmc    
  416df5:	je     0x416e21
  416df7:	add    dh,BYTE PTR [edi+eiz*2-0x3c5c91da]
  416dfe:	in     eax,0x9
  416e00:	pop    esi
  416e01:	bound  eax,QWORD PTR [esi+ebx*4-0x54a2f1f9]
  416e08:	dec    ebp
  416e09:	(bad)  
  416e0b:	in     al,dx
  416e0c:	retf   
  416e0d:	push   ebx
  416e0e:	out    0x6f,eax
  416e10:	xchg   edx,eax
  416e11:	jae    0x416da5
  416e13:	mov    ebx,0x692e0834
  416e18:	imul   DWORD PTR [edx-0x6589aed0]
  416e1e:	pop    edx
  416e1f:	push   edi
  416e20:	lods   al,BYTE PTR ds:[esi]
  416e21:	pusha  
  416e22:	loopne 0x416e51
  416e24:	(bad)  
  416e25:	pop    edx
  416e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e27:	dec    edi
  416e28:	push   esi
  416e29:	sub    eax,ebp
  416e2b:	xor    ah,BYTE PTR [ebp+0x18]
  416e2e:	dec    ecx
  416e2f:	inc    ebp
  416e30:	mov    ds:0x20a04a80,al
  416e35:	sahf   
  416e36:	popa   
  416e37:	dec    edx
  416e38:	add    dh,BYTE PTR [esi]
  416e3a:	lds    esi,FWORD PTR [edi-0x2486e2da]
  416e40:	aam    0x7
  416e42:	and    BYTE PTR ds:[ebx],cl
  416e45:	inc    ecx
  416e46:	jg     0x416e0a
  416e48:	mov    BYTE PTR [ecx-0x4b9cf4e2],bh
  416e4e:	aad    0xc4
  416e50:	fbstp  TBYTE PTR [esi]
  416e52:	test   esi,eax
  416e54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e55:	das    
  416e56:	sbb    eax,0xdfe2bb3c
  416e5b:	pop    es
  416e5c:	mov    esp,0x82588503
  416e61:	addr16 cld 
  416e63:	scas   eax,DWORD PTR es:[edi]
  416e64:	inc    esp
  416e65:	lock push cs
  416e67:	idiv   dh
  416e69:	dec    esp
  416e6a:	cmp    ebp,esp
  416e6c:	fnstenv [ebp-0x21936531]
  416e72:	es mov dh,0xc9
  416e75:	out    0xaf,eax
  416e77:	cmp    BYTE PTR [eax-0x4619407],ah
  416e7d:	mov    bh,0x88
  416e7f:	add    bh,ah
  416e81:	and    bh,dl
  416e83:	jb     0x416e90
  416e85:	pop    es
  416e86:	xchg   edx,esp
  416e88:	or     al,0xc0
  416e8a:	iret   
  416e8b:	enter  0x6318,0xf1
  416e8f:	pusha  
  416e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e91:	scas   eax,DWORD PTR es:[edi]
  416e92:	cmp    eax,0xbcce1b69
  416e97:	sbb    eax,0x8ae002ba
  416e9c:	mov    al,ds:0x66a7fa6c
  416ea1:	jbe    0x416f08
  416ea3:	mov    esi,0xfeb01b5d
  416ea8:	adc    DWORD PTR [eax-0x74c53355],ebx
  416eae:	sbb    BYTE PTR ds:0x533a2ca1,bh
  416eb4:	mov    dh,0xc1
  416eb6:	dec    esi
  416eb7:	sbb    DWORD PTR [ebx-0x35],esp
  416eba:	or     BYTE PTR [edi-0x6f8aac10],ch
  416ec0:	addr16 in eax,0xbd
  416ec3:	cmp    ch,BYTE PTR [edx+0x62de22e6]
  416ec9:	adc    al,0x8b
  416ecb:	push   ebp
  416ecc:	jge    0x416e97
  416ece:	adc    eax,0xe0b81187
  416ed3:	mov    dl,0x2
  416ed5:	push   cs
  416ed6:	sub    esp,0xffffffb1
  416ed9:	aas    
  416eda:	jg     0x416f17
  416edc:	repz mov ebp,0x1cc2a95b
  416ee2:	add    BYTE PTR [edx+0x401fde56],bh
  416ee8:	imul   edi,DWORD PTR [esi+0x70],0x46d31ef7
  416eef:	mov    eax,ds:0x1b12aba5
  416ef4:	test   BYTE PTR [edx],bh
  416ef6:	pushf  
  416ef7:	in     eax,dx
  416ef8:	push   eax
  416ef9:	div    BYTE PTR [eax+eiz*2+0x182352b4]
  416f00:	push   esi
  416f01:	dec    esi
  416f02:	cmp    eax,0x44d9e53d
  416f07:	cmp    ah,BYTE PTR [ebx]
  416f09:	or     DWORD PTR [ebx+0x53],esp
  416f0c:	adc    BYTE PTR [ecx-0x1b4a2b7],dh
  416f12:	or     DWORD PTR [ecx],ecx
  416f14:	scas   al,BYTE PTR es:[edi]
  416f15:	stos   DWORD PTR es:[edi],eax
  416f16:	call   0xc049a624
  416f1b:	inc    ebx
  416f1c:	inc    ebx
  416f1d:	stos   DWORD PTR es:[edi],eax
  416f1e:	pushf  
  416f1f:	retf   
  416f20:	repz lahf 
  416f22:	in     al,0x33
  416f24:	and    eax,0xc7b2bb2c
  416f29:	aam    0x6f
  416f2b:	sub    eax,0x202bf4b8
  416f30:	mov    edi,0xd9497840
  416f35:	sub    ebx,DWORD PTR [esi+ecx*8+0x6289b70]
  416f3c:	sub    DWORD PTR [eax],ebp
  416f3e:	push   cs
  416f3f:	sub    edx,DWORD PTR [edx-0x64891a38]
  416f45:	xrstors ds:0x4d86a155
  416f4c:	sub    cl,BYTE PTR [edi+0x35]
  416f4f:	sbb    al,0x5c
  416f51:	xchg   esp,eax
  416f52:	rcl    BYTE PTR [edx],0x15
  416f55:	xchg   ecx,eax
  416f56:	xchg   ebx,eax
  416f57:	out    0xb6,eax
  416f59:	(bad)  
  416f5a:	int    0xfe
  416f5c:	cmc    
  416f5d:	push   0xffffffab
  416f5f:	test   al,0x79
  416f61:	dec    ebp
  416f62:	jb     0x416eff
  416f64:	hlt    
  416f65:	bound  ebp,QWORD PTR [ebp+0x28]
  416f68:	lock push ebx
  416f6a:	fsubr  DWORD PTR [edx]
  416f6c:	ss dec esi
  416f6e:	scas   al,BYTE PTR es:[edi]
  416f6f:	test   eax,0xa7d191c7
  416f74:	jmp    0x416ff1
  416f76:	icebp  
  416f77:	mov    bh,0x57
  416f79:	fst    DWORD PTR [ebp-0x26]
  416f7c:	push   0x5195e0b8
  416f81:	push   ebx
  416f82:	xor    ah,BYTE PTR [ecx+eiz*2]
  416f85:	call   0xf3faaef2
  416f8a:	add    eax,0x96c73b00
  416f8f:	fld    TBYTE PTR [ebp-0x4d]
  416f92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f93:	jge    0x416f60
  416f95:	adc    eax,0xe85a3123
  416f9a:	cmp    DWORD PTR [edx+0x26],ecx
  416f9d:	add    cl,BYTE PTR [ebp+0x1e6d6e43]
  416fa3:	add    ax,0xd926
  416fa7:	call   FWORD PTR [ecx+0x32127c1f]
  416fad:	mov    ecx,0xa81f2800
  416fb2:	lods   al,BYTE PTR ds:[esi]
  416fb3:	or     DWORD PTR [eax+0x3ed5b620],eax
  416fb9:	and    BYTE PTR [esi],ah
  416fbb:	pushf  
  416fbc:	inc    esi
  416fbd:	adc    al,0x13
  416fbf:	mov    eax,0x8f4f905c
  416fc4:	sub    dh,BYTE PTR [esi-0x10]
  416fc7:	scas   eax,DWORD PTR es:[edi]
  416fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fc9:	test   al,0xa8
  416fcb:	push   ecx
  416fcc:	out    dx,eax
  416fcd:	dec    ebp
  416fce:	aam    0xb4
  416fd0:	ss jae 0x417038
  416fd3:	push   esi
  416fd4:	pop    ebp
  416fd5:	jb     0x416fa2
  416fd7:	xor    edi,ecx
  416fd9:	or     bl,BYTE PTR [ecx+0x2b]
  416fdc:	or     ch,BYTE PTR [edx+0xd5b0e7b]
  416fe2:	rol    BYTE PTR [edx+0x2],0xf6
  416fe6:	jp     0x417054
  416fe8:	jbe    0x416fa7
  416fea:	lods   eax,DWORD PTR ds:[esi]
  416feb:	cmp    al,0x34
  416fed:	nop
  416fee:	hlt    
  416fef:	mov    ds,WORD PTR ds:0xa3196d39
  416ff5:	xor    eax,0x587d2abc
  416ffa:	test   cl,dh
  416ffc:	sub    BYTE PTR [edx+0x1c],bh
  416fff:	xor    eax,0xe45fc1b5
  417004:	aam    0xaa
  417006:	dec    edi
  417007:	mov    edi,DWORD PTR [ecx-0x24]
  41700a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41700b:	jmp    0xbd93:0xa4ba9d8a
  417012:	retf   0xb2e8
  417015:	mov    bl,0x39
  417017:	or     esi,DWORD PTR [edi+0x3a]
  41701a:	push   ds
  41701b:	xadd   esi,ebx
  41701e:	add    DWORD PTR [ebp+0x4c79cacb],0x3e73ffea
  417028:	popf   
  417029:	mov    eax,0x7d4486b8
  41702e:	rcr    al,1
  417030:	cmp    ecx,DWORD PTR [ebx+edx*1-0x3be9d82e]
  417037:	xchg   esp,eax
  417038:	push   es
  417039:	je     0x416fd1
  41703b:	mov    eax,ds:0xd88a412f
  417040:	or     DWORD PTR [ecx-0x33],esp
  417043:	xor    BYTE PTR ds:0xb09a,cl
  417048:	enter  0xd80f,0x84
  41704c:	outs   dx,DWORD PTR ds:[esi]
  41704d:	fsubr  st(6),st
  41704f:	not    DWORD PTR [ecx+eax*8]
  417052:	push   edi
  417053:	pop    ecx
  417054:	aaa    
  417055:	sub    edx,DWORD PTR [edi-0x58d3da82]
  41705b:	cmp    ah,cl
  41705d:	idiv   DWORD PTR gs:[esi+0x7]
  417061:	arpl   WORD PTR [edi-0x5d],dx
  417064:	gs aam 0x70
  417067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417068:	mov    esi,0xe88c5967
  41706d:	xchg   ecx,eax
  41706e:	jg     0x4170e4
  417070:	cs push esp
  417072:	or     BYTE PTR [ebx-0x63],ah
  417075:	xchg   edi,eax
  417076:	pop    ecx
  417077:	std    
  417078:	mov    ebp,ebx
  41707a:	sbb    BYTE PTR [edi-0x3e],dh
  41707d:	out    0xeb,eax
  41707f:	repnz dec eax
  417081:	mov    WORD PTR [ebx+edx*4+0xf],gs
  417085:	pop    es
  417086:	je     0x4170a0
  417088:	adc    DWORD PTR [esi-0x385ad81c],ebp
  41708e:	jl     0x417046
  417090:	mov    ds:0x65876ecd,eax
  417095:	jle    0x417055
  417097:	jmp    0xf08d:0x1659ddbb
  41709e:	add    al,0xd6
  4170a0:	ror    ebx,1
  4170a2:	lods   eax,DWORD PTR ds:[esi]
  4170a3:	lods   eax,DWORD PTR ds:[esi]
  4170a4:	jae    0x417094
  4170a6:	sbb    cl,al
  4170a8:	faddp  st(6),st
  4170aa:	add    eax,0x326037f4
  4170af:	in     eax,dx
  4170b0:	jbe    0x417050
  4170b2:	mov    eax,0x85ca9c7e
  4170b7:	pushf  
  4170b8:	xchg   ebx,eax
  4170b9:	fmul   QWORD PTR [edi]
  4170bb:	das    
  4170bc:	mov    bl,0xa1
  4170be:	loope  0x41706c
  4170c0:	jl     0x4170f3
  4170c2:	xor    ah,BYTE PTR [esi-0x46]
  4170c5:	adc    ebp,DWORD PTR [edx-0x3a2f20c3]
  4170cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170cc:	(bad)  
  4170cd:	fs xchg ebp,eax
  4170cf:	outs   dx,BYTE PTR ds:[esi]
  4170d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170d2:	es aad 0x3b
  4170d5:	push   cs
  4170d6:	push   eax
  4170d7:	adc    BYTE PTR [eax+0x5f],dl
  4170da:	rcl    DWORD PTR [edx-0x28e99589],1
  4170e0:	xchg   edi,eax
  4170e1:	dec    edi
  4170e2:	jae    0x41706c
  4170e4:	mov    bh,0x62
  4170e6:	ret    
  4170e7:	(bad)  
  4170e8:	std    
  4170e9:	jp     0x4170c6
  4170eb:	push   ebx
  4170ec:	pop    ss
  4170ed:	hlt    
  4170ee:	xchg   ecx,eax
  4170ef:	mov    ebp,0x3e393083
  4170f4:	xor    al,0xc3
  4170f6:	aaa    
  4170f7:	or     ebp,edx
  4170f9:	je     0x41715d
  4170fb:	test   eax,0x219ecf1b
  417100:	mov    bl,0x80
  417102:	xchg   esi,eax
  417103:	test   eax,0xb6b407f1
  417108:	dec    edi
  417109:	pop    esp
  41710a:	ret    
  41710b:	sbb    dh,BYTE PTR [ebp-0x3]
  41710e:	dec    edi
  41710f:	pop    ebp
  417110:	sahf   
  417111:	std    
  417112:	imul   edi,DWORD PTR [edi-0x24d0d408],0xffffffae
  417119:	dec    DWORD PTR [edi+0x29183ad0]
  41711f:	push   edx
  417120:	pushf  
  417121:	xor    ch,BYTE PTR fs:[ebp-0x1f6646eb]
  417128:	jmp    0x41716f
  41712a:	xlat   BYTE PTR ds:[ebx]
  41712b:	xchg   edi,eax
  41712c:	dec    ecx
  41712d:	cmp    al,0x70
  41712f:	repz cdq 
  417131:	iret   
  417132:	inc    esi
  417133:	xchg   esp,eax
  417134:	pushf  
  417135:	sbb    eax,0x3ed1500b
  41713a:	mov    ebp,0x3486b166
  41713f:	mov    eax,ds:0x1d964df7
  417144:	jle    0x41710c
  417146:	inc    ecx
  417147:	xor    al,0x51
  417149:	das    
  41714a:	imul   edx,DWORD PTR [esi],0x8de4cd79
  417150:	dec    eax
  417151:	stos   DWORD PTR es:[edi],eax
  417152:	cmp    BYTE PTR [ebx],ch
  417154:	xor    DWORD PTR [edx],eax
  417156:	jnp    0x417192
  417158:	cdq    
  417159:	sbb    al,0xa3
  41715b:	jp     0x417190
  41715d:	and    BYTE PTR [ecx],dl
  41715f:	bound  edx,QWORD PTR [esi*8+0x3e6f4763]
  417166:	rcl    BYTE PTR [eax-0x14],1
  417169:	inc    edx
  41716a:	or     BYTE PTR [ebp-0x4c],ah
  41716d:	ret    0x9fc3
  417170:	hlt    
  417171:	add    bl,BYTE PTR [eax]
  417173:	push   edi
  417174:	add    BYTE PTR [eax+ecx*1],ch
  417177:	inc    ebp
  417178:	jb     0x417128
  41717a:	ud0    esp,DWORD PTR [ecx+0xe]
  41717e:	jmp    0xbe7ed1c3
  417183:	xor    edx,DWORD PTR [ebp+0x69]
  417186:	(bad)  
  417187:	bswap  edx
  417189:	sbb    DWORD PTR [edi-0x5c27bf7f],ecx
  41718f:	jmp    FWORD PTR [esi+0x77]
  417192:	test   al,0x86
  417194:	adc    DWORD PTR [ebx],0x27
  417197:	aas    
  417198:	into   
  417199:	scas   eax,DWORD PTR es:[edi]
  41719a:	add    DWORD PTR [eax-0x29],eax
  41719d:	in     eax,0x66
  41719f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171a0:	shr    DWORD PTR [edi+0x40],0x6f
  4171a4:	jmp    0x417156
  4171a6:	mov    DWORD PTR [edx+0xf],esi
  4171a9:	and    eax,0x82cee286
  4171ae:	(bad)  [esi-0x21111dfc]
  4171b4:	xor    al,BYTE PTR ds:[edi-0x798b994]
  4171bb:	add    eax,0x7f7b9e26
  4171c0:	jno    0x41715f
  4171c2:	push   cs
  4171c3:	pushf  
  4171c4:	hlt    
  4171c5:	mov    edi,0x41d13779
  4171ca:	inc    edx
  4171cb:	iret   
  4171cc:	mov    edi,0xc3d5eaa7
  4171d1:	lea    ecx,[ecx]
  4171d3:	or     eax,0x5fc883e7
  4171d8:	mov    cl,0x24
  4171da:	pop    esi
  4171db:	jmp    0x417205
  4171dd:	lods   al,BYTE PTR ds:[esi]
  4171de:	sbb    BYTE PTR [edi],bl
  4171e0:	mov    eax,0xdd42d68c
  4171e5:	push   cs
  4171e6:	xchg   BYTE PTR [ebx-0x1cb1b829],bl
  4171ec:	in     al,dx
  4171ed:	mov    bl,0xc8
  4171ef:	aaa    
  4171f0:	fisub  DWORD PTR [eax-0x26]
  4171f3:	cmp    ch,BYTE PTR [esi+0x22397360]
  4171f9:	inc    edi
  4171fa:	xor    eax,0xcaf7833f
  4171ff:	pop    es
  417200:	pop    ss
  417201:	pop    ecx
  417202:	shl    dh,0x44
  417205:	jge    0x417216
  417207:	nop
  417208:	mov    DWORD PTR [ebp+0xb],esi
  41720b:	rcr    dh,0x37
  41720e:	lods   eax,DWORD PTR ds:[esi]
  41720f:	jecxz  0x41721b
  417211:	ins    DWORD PTR es:[edi],dx
  417212:	into   
  417213:	mov    ss,WORD PTR [esi+0x77]
  417216:	and    BYTE PTR [ebp+ebp*4+0x1e],al
  41721a:	shl    BYTE PTR [edx],0x97
  41721d:	add    al,0xe5
  41721f:	adc    eax,0xb02ad61c
  417224:	or     BYTE PTR [edi-0x3a7ad683],al
  41722a:	sti    
  41722b:	sub    dl,BYTE PTR [ecx]
  41722d:	fs jno 0x417282
  417230:	(bad)  
  417231:	xor    DWORD PTR [edi+ebp*2+0x4d],esp
  417235:	ret    0xdefb
  417238:	jmp    0x417265
  41723a:	aad    0x77
  41723c:	nop
  41723d:	adc    edi,ebx
  41723f:	push   ss
  417240:	add    ebx,DWORD PTR [ebx+0x22]
  417243:	fwait
  417244:	xchg   BYTE PTR [ebp+0x42],cl
  417247:	or     DWORD PTR [esi+0x3cde36d4],0x6aafda1
  417251:	out    dx,eax
  417252:	adc    BYTE PTR [edi+0x6d],0x3a
  417256:	dec    ecx
  417257:	(bad)  
  417258:	cld    
  417259:	xor    ecx,DWORD PTR [eax]
  41725b:	adc    eax,0x41ac6179
  417260:	repz rol DWORD PTR [edx-0x30],1
  417264:	test   DWORD PTR [ebx],edx
  417266:	mov    bh,0x55
  417268:	mov    al,0x50
  41726a:	or     ebx,DWORD PTR [edi]
  41726c:	pop    edx
  41726d:	call   0xcbaa3142
  417272:	sbb    BYTE PTR [eax+eiz*2],ah
  417275:	xor    eax,0xac3c433a
  41727a:	stc    
  41727b:	rol    esp,cl
  41727d:	and    esi,DWORD PTR [eax]
  41727f:	jne    0x417252
  417281:	or     BYTE PTR [esi+0x42],ch
  417284:	(bad)  
  417286:	pop    ebx
  417287:	call   0x52f25248
  41728c:	es xchg ecx,edi
  41728f:	cmp    eax,0x663db368
  417294:	ret    
  417295:	jmp    0xd6a3e8c6
  41729a:	je     0x417300
  41729c:	fldcw  WORD PTR [edx+0x13]
  41729f:	mov    dh,0x71
  4172a1:	sahf   
  4172a2:	idiv   ah
  4172a4:	fst    QWORD PTR [edx-0x27cf0790]
  4172aa:	mov    ds:0xcd3108ca,eax
  4172af:	jbe    0x417253
  4172b1:	adc    al,0x72
  4172b3:	or     dh,BYTE PTR [edx]
  4172b5:	ins    BYTE PTR es:[edi],dx
  4172b6:	or     DWORD PTR [edi-0x1d],ecx
  4172b9:	mov    fs,WORD PTR [ebp-0xd1b0892]
  4172bf:	lea    esp,[ecx+0x6a57ff97]
  4172c5:	and    esp,DWORD PTR [eax-0x4ba1b80b]
  4172cb:	sbb    cl,BYTE PTR [ebx-0x796d58fd]
  4172d1:	xchg   BYTE PTR [esi+0x3f],bh
  4172d4:	clc    
  4172d5:	lds    edi,FWORD PTR [ebx-0x56dec2bc]
  4172db:	push   eax
  4172dc:	dec    eax
  4172dd:	ins    BYTE PTR es:[edi],dx
  4172de:	jl     0x41735b
  4172e0:	dec    ebx
  4172e1:	mov    eax,0x88de3fe3
  4172e6:	xchg   ebp,eax
  4172e7:	dec    esp
  4172e8:	retf   
  4172e9:	cmp    dh,BYTE PTR [eax]
  4172eb:	cmc    
  4172ec:	jne    0x4172ea
  4172ee:	jecxz  0x4172fa
  4172f0:	adc    DWORD PTR [esi-0x6a],esp
  4172f3:	push   0x46518ee1
  4172f8:	daa    
  4172f9:	cmp    ebp,edx
  4172fb:	fs adc al,0xe
  4172fe:	test   eax,0x8e8dd321
  417303:	sahf   
  417304:	sbb    esi,DWORD PTR [ebp-0x3af5dcde]
  41730a:	jno    0x41737c
  41730c:	data16 mov bh,0x37
  41730f:	call   0xafd2:0xf4694116
  417316:	idiv   BYTE PTR [ecx-0x2b]
  417319:	out    0x8,al
  41731b:	jecxz  0x41732f
  41731d:	loop   0x417379
  41731f:	xor    edx,DWORD PTR [edx]
  417321:	xchg   edi,eax
  417322:	js     0x417358
  417324:	push   ebx
  417325:	push   eax
  417326:	or     eax,esi
  417328:	cmc    
  417329:	push   ecx
  41732a:	mov    ds:0xa1b4a0ad,al
  41732f:	pop    ebp
  417330:	test   al,0xd5
  417332:	jecxz  0x41732e
  417334:	rol    BYTE PTR [edi],1
  417336:	sub    edx,DWORD PTR [esp+eiz*4+0xc]
  41733a:	data16 jp 0x417359
  41733d:	imul   bh
  41733f:	dec    esp
  417340:	retf   0x173
  417343:	add    BYTE PTR [ebp-0x6a944391],bh
  417349:	xor    DWORD PTR [ebx+0x7deac1d2],esi
  41734f:	in     eax,0x89
  417351:	sbb    al,0x8f
  417353:	addr16 xor esp,edi
  417356:	out    0x9a,al
  417358:	push   edi
  417359:	adc    cl,bl
  41735b:	mov    bl,0x2f
  41735d:	mov    eax,0x198996a2
  417362:	sbb    ecx,DWORD PTR [edx+0x12ee8ed6]
  417368:	sbb    BYTE PTR [ecx],dl
  41736a:	jns    0x41731e
  41736c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41736d:	jae    0x4173b3
  41736f:	mov    bh,0x7e
  417371:	and    eax,0x62da870d
  417376:	jne    0x417395
  417378:	hlt    
  417379:	fist   WORD PTR [esp+ebp*2-0x4c9926f3]
  417380:	dec    edi
  417381:	stos   BYTE PTR es:[edi],al
  417382:	cld    
  417383:	cld    
  417384:	arpl   WORD PTR [edi],di
  417386:	bound  esp,QWORD PTR [edi-0x6d]
  417389:	pop    es
  41738a:	addr16 fcmovnb st,st(0)
  41738d:	not    DWORD PTR [ebx-0x5]
  417390:	jmp    0x26a8056d
  417395:	out    0x19,al
  417397:	cmp    eax,0x1d71f54a
  41739c:	aad    0x30
  41739e:	sub    dl,BYTE PTR [esi]
  4173a0:	sub    eax,0x2042bb60
  4173a5:	loopne 0x41741f
  4173a7:	xchg   ebp,eax
  4173a8:	sub    BYTE PTR ds:0x95e9583b,al
  4173ae:	jge    0x417384
  4173b0:	xor    bh,cl
  4173b2:	mov    eax,0xf4abf8bc
  4173b7:	jl     0x4173a0
  4173b9:	adc    al,ah
  4173bb:	mov    cl,0xca
  4173bd:	jns    0x417433
  4173bf:	fdivr  st,st(1)
  4173c1:	cmp    esi,DWORD PTR [eax-0x5]
  4173c4:	fimul  DWORD PTR [ebx-0x19]
  4173c7:	cmp    BYTE PTR [esi-0x22],0xd2
  4173cb:	lods   al,BYTE PTR ds:[esi]
  4173cc:	pushf  
  4173cd:	out    dx,al
  4173ce:	adc    DWORD PTR [ebx],0x3845229
  4173d4:	xor    bl,BYTE PTR [edi+0x40]
  4173d7:	(bad)  
  4173d9:	mov    esi,DWORD PTR [eax+eiz*1]
  4173dc:	call   0xcac58fad
  4173e1:	out    0xe9,al
  4173e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173e4:	jp     0x417370
  4173e6:	push   ds
  4173e7:	adc    BYTE PTR [esi-0x16],al
  4173ea:	mov    dh,0xc1
  4173ec:	bound  eax,QWORD PTR [ebx]
  4173ee:	xchg   DWORD PTR [ebx+0x673f162b],esi
  4173f4:	jl     0x41743d
  4173f6:	push   es
  4173f7:	jns    0x417425
  4173f9:	push   ss
  4173fa:	dec    edi
  4173fb:	into   
  4173fc:	jmp    0xce2b2677
  417401:	xor    bl,ah
  417403:	jo     0x4173b3
  417405:	(bad)  [edx-0x42]
  417408:	xchg   ebp,eax
  417409:	addr16 mov ebx,0xf0376c82
  41740f:	out    dx,al
  417410:	leave  
  417411:	and    al,0x70
  417413:	xor    BYTE PTR [eax-0x19994844],bh
  417419:	and    ebp,DWORD PTR [ecx+0x46c89f6f]
  41741f:	pushf  
  417420:	(bad)  
  417422:	clc    
  417423:	cmp    BYTE PTR [ebx+0x1e],dl
  417426:	dec    ecx
  417427:	ss hlt 
  417429:	sahf   
  41742a:	mov    bl,0xcb
  41742c:	ss pop ebx
  41742e:	adc    eax,0xd7315962
  417433:	lahf   
  417434:	outs   dx,DWORD PTR ds:[esi]
  417435:	aas    
  417436:	sahf   
  417437:	mov    al,ds:0xb3cc0423
  41743c:	mov    al,0xff
  41743e:	xchg   esp,eax
  41743f:	test   BYTE PTR [ecx+0x59],al
  417442:	dec    eax
  417443:	scas   eax,DWORD PTR es:[edi]
  417444:	inc    ecx
  417445:	out    0x3d,eax
  417447:	scas   eax,DWORD PTR es:[edi]
  417448:	pop    ebx
  417449:	pop    ecx
  41744a:	int3   
  41744b:	add    eax,0x168278fc
  417450:	outs   dx,BYTE PTR ds:[esi]
  417451:	jo     0x417442
  417453:	xchg   ebx,eax
  417454:	jg     0x4174bc
  417456:	jno    0x417412
  417458:	adc    eax,0xc88d0163
  41745d:	jecxz  0x4174ce
  41745f:	aas    
  417460:	cmc    
  417461:	jge    0x4174ba
  417463:	mov    BYTE PTR [esi+0x13],dh
  417466:	cld    
  417467:	out    dx,eax
  417468:	loope  0x417406
  41746a:	and    BYTE PTR [edx+0x476778d5],ch
  417470:	stos   BYTE PTR es:[edi],al
  417471:	fidivr WORD PTR [ebx]
  417473:	adc    dl,BYTE PTR [esi]
  417475:	jp     0x417451
  417477:	(bad)  
  417478:	into   
  417479:	icebp  
  41747a:	retf   0xaacc
  41747d:	sahf   
  41747e:	push   esp
  41747f:	add    dh,0x77
  417482:	dec    ebp
  417483:	mov    dl,0x2
  417485:	xor    al,0x2d
  417487:	jl     0x4174ac
  417489:	bound  esp,QWORD PTR ds:0x8ab7ca5b
  41748f:	add    DWORD PTR [ecx],ebx
  417491:	mov    ecx,0x67159ebf
  417496:	jmp    0x41742c
  417498:	pushf  
  417499:	sub    ecx,ecx
  41749b:	shl    BYTE PTR [eax],1
  41749d:	mov    ds:0x9d6f994d,al
  4174a2:	xchg   ebp,eax
  4174a3:	scas   eax,DWORD PTR es:[edi]
  4174a4:	mov    ebp,DWORD PTR [ebx]
  4174a6:	(bad)  
  4174a7:	rcr    BYTE PTR [bx+si-0x76],0x8
  4174ac:	pop    es
  4174ad:	mov    al,ds:0x714a2213
  4174b2:	pop    ebx
  4174b3:	out    dx,al
  4174b4:	cmp    al,bh
  4174b6:	mov    bl,0x1c
  4174b8:	push   eax
  4174b9:	(bad)  
  4174ba:	lock push ebx
  4174bc:	push   ss
  4174bd:	test   DWORD PTR [esi+0x30],eax
  4174c0:	aaa    
  4174c1:	int3   
  4174c2:	sbb    esi,DWORD PTR [esi]
  4174c4:	cmp    eax,0xa1bef81c
  4174c9:	les    esp,FWORD PTR [ebp-0x4b828a00]
  4174cf:	dec    ecx
  4174d0:	cmp    dl,bl
  4174d2:	in     al,0xd5
  4174d4:	imul   esp,DWORD PTR [esi],0x6d
  4174d7:	adc    DWORD PTR [esi+0x41],0x32
  4174db:	jae    0x417462
  4174dd:	pop    ecx
  4174de:	xchg   ebp,eax
  4174df:	pop    esp
  4174e0:	inc    ebp
  4174e1:	rcr    DWORD PTR [ebx+0x654bb081],0x49
  4174e8:	or     eax,0xaa970be8
  4174ed:	mov    BYTE PTR [edi-0x43],ah
  4174f0:	sub    BYTE PTR [ecx+0x17],bh
  4174f3:	xchg   edi,eax
  4174f4:	pop    ebx
  4174f5:	scas   eax,DWORD PTR es:[edi]
  4174f6:	popa   
  4174f7:	push   esi
  4174f8:	fstp   QWORD PTR [edx+0x47]
  4174fb:	jne    0x4174cf
  4174fd:	mov    al,0xec
  4174ff:	call   0xf6c95274
  417504:	xchg   ebp,eax
  417505:	xchg   edx,eax
  417506:	arpl   WORD PTR [ecx],dx
  417508:	mov    dh,0x35
  41750a:	inc    edx
  41750b:	sahf   
  41750c:	hlt    
  41750d:	mov    ch,0x9d
  41750f:	sub    al,0x79
  417511:	mov    dh,0xe3
  417513:	push   ebx
  417514:	inc    ecx
  417515:	repz fwait
  417517:	dec    eax
  417518:	inc    edi
  417519:	add    DWORD PTR [edx-0x14],esp
  41751c:	fs retf 0x9bf3
  417520:	repnz test al,0x85
  417523:	and    al,0xef
  417525:	sub    al,al
  417527:	sti    
  417528:	sbb    DWORD PTR [edi+0x39],ebp
  41752b:	loop   0x417517
  41752d:	cmp    al,0x9f
  41752f:	inc    edx
  417530:	pop    es
  417531:	mov    al,0xc4
  417533:	cmp    ebp,DWORD PTR [ebp+eax*2-0x571896f6]
  41753a:	mov    ds:0xb3dee7f3,eax
  41753f:	arpl   WORD PTR [edx],bp
  417541:	pop    ebx
  417542:	(bad)  [ebx+0x5d]
  417545:	jecxz  0x4175a3
  417547:	pushf  
  417548:	mov    bh,bl
  41754a:	pop    es
  41754b:	inc    ebp
  41754c:	popf   
  41754d:	jne    0x4174e3
  41754f:	in     eax,dx
  417550:	xchg   esp,eax
  417551:	dec    edx
  417552:	test   eax,0xcea9eacc
  417558:	rcr    DWORD PTR [esp+edi*2],1
  41755b:	xor    eax,0x822dea2b
  417560:	or     eax,0x46e2fd90
  417565:	pop    esp
  417566:	mov    WORD PTR [esi+0x66927112],?
  41756c:	popa   
  41756d:	dec    esi
  41756e:	cdq    
  41756f:	cmp    BYTE PTR [eax],dl
  417571:	mov    WORD PTR [esi-0x12dc7777],?
  417577:	xor    edi,DWORD PTR [edi]
  417579:	enter  0xb520,0x5a
  41757d:	dec    esp
  41757e:	(bad)  
  41757f:	leave  
  417580:	dec    ebp
  417581:	xchg   ebp,eax
  417582:	arpl   WORD PTR ds:0x11f3cf6c,bp
  417588:	call   0x4f9b6429
  41758d:	lahf   
  41758e:	pop    edi
  41758f:	enter  0xdf90,0x27
  417593:	push   eax
  417594:	fstp   TBYTE PTR [edx-0x6b]
  417597:	pop    edx
  417598:	stos   BYTE PTR es:[edi],al
  417599:	pop    ds
  41759a:	(bad)  [eax]
  41759c:	outs   dx,DWORD PTR ds:[esi]
  41759d:	iret   
  41759e:	mov    al,ah
  4175a0:	in     eax,0xc5
  4175a2:	and    DWORD PTR [eax-0x31aae5fb],ebx
  4175a8:	pop    ss
  4175a9:	jae    0x417589
  4175ab:	sub    edi,DWORD PTR gs:[ecx]
  4175ae:	add    DWORD PTR [eax-0x865e8ca],eax
  4175b4:	xor    esi,edi
  4175b6:	push   ecx
  4175b7:	xor    al,0xc1
  4175b9:	xchg   ebx,eax
  4175ba:	in     eax,0x17
  4175bc:	inc    ebx
  4175bd:	add    ecx,DWORD PTR [eax-0x46]
  4175c0:	push   0xb4652915
  4175c5:	xchg   esi,eax
  4175c6:	dec    ebp
  4175c7:	loop   0x41763c
  4175c9:	sbb    esi,esp
  4175cb:	into   
  4175cc:	stos   BYTE PTR es:[edi],al
  4175cd:	cwde   
  4175ce:	xchg   DWORD PTR [esi-0x58],ecx
  4175d1:	dec    ebx
  4175d2:	sbb    dh,BYTE PTR [edi-0x65]
  4175d5:	iret   
  4175d6:	retf   0x82f5
  4175d9:	neg    edi
  4175db:	push   es
  4175dc:	out    0x93,eax
  4175de:	pop    ds
  4175df:	sar    DWORD PTR [edi-0x7f552dbb],1
  4175e5:	mov    al,0xdf
  4175e7:	mov    ds:0x9687ea94,al
  4175ec:	test   ebp,edx
  4175ee:	jne    0x4175f1
  4175f0:	pop    ds
  4175f1:	and    esp,DWORD PTR [edi+0x76]
  4175f4:	dec    esp
  4175f5:	add    DWORD PTR [esi+0x43],eax
  4175f8:	call   0x741f2d2e
  4175fd:	scas   eax,DWORD PTR es:[edi]
  4175fe:	int3   
  4175ff:	fcom   QWORD PTR [eax]
  417601:	xor    ebp,0xffffffb7
  417604:	xchg   edi,eax
  417605:	add    DWORD PTR [edx-0x76a2141d],ebx
  41760b:	xchg   ecx,eax
  41760c:	or     esi,ebp
  41760e:	das    
  41760f:	test   al,0x56
  417611:	fisttp WORD PTR [edx]
  417613:	or     ebp,DWORD PTR [ebx+0x50948e0e]
  417619:	add    DWORD PTR [esi],0x8fa65d57
  41761f:	daa    
  417620:	dec    ebx
  417621:	sbb    eax,0x56dc76db
  417626:	pop    es
  417627:	adc    eax,0x33ebeafe
  41762c:	inc    eax
  41762d:	sbb    BYTE PTR [edi],0xee
  417630:	push   cs
  417631:	pusha  
  417632:	add    DWORD PTR [ebx+0x3a693cb],ebp
  417638:	or     al,0x5d
  41763a:	je     0x417627
  41763c:	jmp    esp
  41763e:	pop    es
  41763f:	and    edx,ebp
  417641:	repz xchg ebx,eax
  417643:	and    cl,BYTE PTR [ecx+0x6d]
  417646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417647:	pop    ebx
  417648:	ret    0x9a16
  41764b:	mov    eax,eax
  41764d:	mov    ds:0x1a2eb55e,al
  417652:	inc    ecx
  417653:	inc    esp
  417654:	xor    DWORD PTR ds:0xbadc683b,ebp
  41765a:	jmp    0x16e0ca80
  41765f:	xor    ecx,DWORD PTR ds:0x546759da
  417665:	xor    al,0x85
  417667:	aad    0xb1
  417669:	xchg   edx,eax
  41766a:	push   0x3f1bd88f
  41766f:	xor    esp,ebx
  417671:	ret    
  417672:	ss test bh,ah
  417675:	dec    ebx
  417676:	pop    ss
  417677:	push   0x9c57d477
  41767c:	ja     0x417695
  41767e:	adc    eax,0x5a57b23a
  417683:	xor    dh,BYTE PTR [esi-0x7b53fbb6]
  417689:	jmp    0xc4e:0x80180cc2
  417690:	mov    ebx,0xe5da8085
  417695:	push   esp
  417696:	lods   al,BYTE PTR ds:[esi]
  417697:	mov    ecx,0x83103232
  41769c:	dec    ebp
  41769d:	sbb    ebx,DWORD PTR [edi+0x2168f9bd]
  4176a3:	mov    esp,0x8913af3a
  4176a8:	add    ch,ch
  4176aa:	dec    ecx
  4176ab:	sbb    ecx,DWORD PTR [esi-0x45d4e983]
  4176b1:	ss loopne 0x4176f2
  4176b4:	adc    al,0x7a
  4176b6:	pop    edx
  4176b7:	scas   eax,DWORD PTR es:[edi]
  4176b8:	sahf   
  4176b9:	xchg   ebp,eax
  4176ba:	inc    esi
  4176bb:	jae    0x41766d
  4176bd:	or     edi,DWORD PTR [eax]
  4176bf:	je     0x417684
  4176c1:	je     0x41767d
  4176c3:	call   0xa4de8143
  4176c8:	push   edx
  4176c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176ca:	sbb    ebp,DWORD PTR [edx+ebx*2-0x3021b956]
  4176d1:	inc    edx
  4176d2:	mov    eax,ds:0xb2d9faf
  4176d7:	scas   al,BYTE PTR es:[edi]
  4176d8:	adc    esp,esp
  4176da:	jp     0x4176ac
  4176dc:	and    al,0x5
  4176de:	mov    bh,0xdd
  4176e0:	push   es
  4176e1:	loope  0x417743
  4176e3:	jl     0x417689
  4176e5:	int3   
  4176e6:	ins    BYTE PTR es:[edi],dx
  4176e7:	mov    BYTE PTR [edx-0x3099bfcf],bh
  4176ed:	sbb    eax,0xd306bccb
  4176f2:	cmp    eax,DWORD PTR [edx+0x3e]
  4176f5:	or     ah,bh
  4176f7:	and    eax,0x5924d15d
  4176fc:	dec    esi
  4176fd:	cmp    al,0xd4
  4176ff:	jmp    0x7c6e:0x743a3a33
  417706:	adc    DWORD PTR [ecx-0x11011d13],esi
  41770c:	les    edi,FWORD PTR [eax-0xf69c7e4]
  417712:	sub    DWORD PTR [edx],esp
  417714:	(bad)  
  417715:	mov    ecx,0x8f1457af
  41771a:	add    al,0x80
  41771c:	xchg   edi,eax
  41771d:	and    eax,0x4ed31a6d
  417722:	push   DWORD PTR [ecx]
  417724:	or     BYTE PTR [edx-0x1be78d67],0xe8
  41772b:	mov    ecx,0x5ba4b986
  417730:	test   eax,0x6a079038
  417735:	inc    ebx
  417736:	or     esp,edi
  417738:	fisttp DWORD PTR [esi-0x1f]
  41773b:	dec    esi
  41773c:	dec    esp
  41773d:	test   BYTE PTR [ecx-0x176e12d],bl
  417743:	xor    ecx,DWORD PTR [edx]
  417745:	out    0xe8,eax
  417747:	fisttp QWORD PTR [ecx+eiz*1]
  41774a:	sub    edx,DWORD PTR [eax-0x1b]
  41774d:	xor    BYTE PTR [eax],0x2e
  417750:	or     DWORD PTR gs:[ecx+ebp*1+0x61],ebp
  417755:	imul   ebp,DWORD PTR [esi],0xb3fbdbc4
  41775b:	sbb    al,0xfc
  41775d:	fwait
  41775e:	lods   eax,DWORD PTR ds:[esi]
  41775f:	or     dl,BYTE PTR [ebx+0x4386192b]
  417765:	jmp    0x4df074d2
  41776a:	repz lea esp,[ebx]
  41776d:	ret    0xdd79
  417770:	in     eax,0x4d
  417772:	xchg   esi,eax
  417773:	sar    BYTE PTR [edx*1+0x593e3a0a],cl
  41777a:	pop    ebx
  41777b:	xchg   esp,eax
  41777c:	test   BYTE PTR [edi-0x270624e2],ch
  417782:	dec    esp
  417783:	ret    0x5942
  417786:	sbb    ebp,DWORD PTR [eax+0xe5c6d3d]
  41778c:	jae    0x4177d4
  41778e:	ja     0x417769
  417790:	inc    ecx
  417791:	adc    al,0x7d
  417793:	pop    ebx
  417794:	sbb    al,0xb4
  417796:	jnp    0x41779e
  417798:	in     eax,0x8d
  41779a:	and    al,ch
  41779c:	test   al,0xa9
  41779e:	sbb    eax,0xf436b929
  4177a3:	fcomp  QWORD PTR [ebx]
  4177a5:	pop    edx
  4177a6:	in     eax,dx
  4177a7:	inc    ebx
  4177a8:	push   0xffffff81
  4177aa:	adc    esp,DWORD PTR [eax+eax*4]
  4177ad:	or     eax,0xa7355eb2
  4177b2:	adc    bl,cl
  4177b4:	inc    ebp
  4177b5:	gs mov dh,0xf6
  4177b8:	imul   edx,DWORD PTR [eax+0x5cf0a0f6],0xdba98662
  4177c2:	sar    DWORD PTR [ebx+ebx*2-0x51],1
  4177c6:	gs out dx,al
  4177c8:	arpl   WORD PTR ds:0x4a3293f4,ax
  4177ce:	aas    
  4177cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177d0:	jmp    0x62a8:0x8d519004
  4177d7:	sub    al,0x86
  4177d9:	out    0x7a,eax
  4177db:	push   edi
  4177dc:	cmp    eax,0xd1ce414b
  4177e1:	retf   
  4177e2:	aaa    
  4177e3:	mov    ah,0xcc
  4177e5:	pop    ds
  4177e6:	sti    
  4177e7:	jno    0x41777f
  4177e9:	out    0xdc,eax
  4177eb:	(bad)  
  4177ec:	xor    eax,0xd2c6b8bf
  4177f1:	xchg   DWORD PTR [ecx+edi*4-0x6fef520f],esi
  4177f8:	stos   DWORD PTR es:[edi],eax
  4177f9:	xchg   ecx,eax
  4177fa:	add    al,0x55
  4177fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177fd:	xchg   BYTE PTR cs:[edx+eiz*4-0x6b],al
  417802:	lahf   
  417803:	test   DWORD PTR [ecx-0x36a62f7e],0x749e8372
  41780d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41780e:	dec    edx
  41780f:	aad    0xec
  417811:	xchg   ecx,eax
  417812:	inc    esp
  417813:	aaa    
  417814:	xchg   ecx,eax
  417815:	pop    ebx
  417816:	lahf   
  417817:	cli    
  417818:	cmp    DWORD PTR [ebp+0x3b581198],edi
  41781e:	xchg   edx,eax
  41781f:	jns    0x4177bf
  417821:	in     eax,dx
  417822:	pop    ebx
  417823:	xchg   BYTE PTR [edi+0x64b1fbd3],ah
  417829:	in     eax,0xf
  41782b:	push   eax
  41782c:	add    al,BYTE PTR [esi-0x566afc06]
  417832:	push   ebx
  417833:	xchg   edi,eax
  417834:	outs   dx,BYTE PTR ds:[esi]
  417835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417836:	jmp    0x417877
  417838:	fist   WORD PTR [esp+eax*8-0x45]
  41783c:	js     0x417868
  41783e:	repz loop 0x41789f
  417841:	xor    al,0xfb
  417843:	into   
  417844:	fldcw  WORD PTR [esi+ecx*2-0x2c]
  417848:	inc    edi
  417849:	(bad)  
  41784a:	mov    cl,0xfc
  41784c:	xchg   esi,eax
  41784d:	mov    edx,DWORD PTR [ebp-0x78]
  417850:	in     al,dx
  417851:	and    BYTE PTR [ebx],bh
  417853:	sub    eax,0x536c8565
  417858:	fsubr  DWORD PTR [edi-0x77]
  41785b:	(bad)
  41785e:	sub    esi,DWORD PTR [ecx-0x32938134]
  417864:	xor    ah,ch
  417866:	xor    eax,DWORD PTR [edx-0x7a038c9f]
  41786c:	mov    esp,0xa34a263a
  417871:	cld    
  417872:	mov    ebp,0xee124e0d
  417877:	jmp    0x51e1:0x1f7ff5ce
  41787e:	sbb    cl,dh
  417880:	nop
  417881:	sbb    BYTE PTR [esi-0xd],al
  417884:	test   eax,0x686cded1
  417889:	popf   
  41788a:	xchg   ecx,eax
  41788b:	sbb    esp,esp
  41788d:	add    edi,DWORD PTR [edi]
  41788f:	cmp    esi,DWORD PTR [edx-0x3]
  417892:	js     0x417864
  417894:	addr16 (bad) 
  417896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417897:	or     eax,0x7f65d690
  41789c:	pop    ecx
  41789d:	jg     0x417889
  41789f:	call   0x398:0x487eea6e
  4178a6:	sar    DWORD PTR [esi+0x4ba0f71d],0x8c
  4178ad:	push   0xb49c64b8
  4178b2:	push   esp
  4178b3:	inc    edx
  4178b4:	push   ebp
  4178b5:	cmp    eax,0x88408a1b
  4178ba:	call   0x488e:0xf953bbdd
  4178c1:	cs or  dh,al
  4178c4:	cwde   
  4178c5:	xchg   DWORD PTR [edi+0x1a2cd827],eax
  4178cb:	sbb    DWORD PTR [ebx+0x60],0xea638417
  4178d2:	jbe    0x41789f
  4178d4:	add    al,0x1c
  4178d6:	xchg   esi,eax
  4178d7:	push   edi
  4178d8:	or     BYTE PTR [ecx+0x27],al
  4178db:	bound  edx,QWORD PTR [eax-0x42ceed25]
  4178e1:	push   esi
  4178e2:	mov    BYTE PTR [eax-0x76],dl
  4178e5:	out    dx,al
  4178e6:	sub    eax,0xe2ae4555
  4178eb:	pop    ecx
  4178ec:	stos   DWORD PTR es:[edi],eax
  4178ed:	mov    ebp,0x35b0b70b
  4178f2:	mov    ebp,0x95e3a08
  4178f7:	daa    
  4178f8:	cli    
  4178f9:	mov    al,ds:0x669d2e1b
  4178fe:	lods   al,BYTE PTR ds:[esi]
  4178ff:	scas   al,BYTE PTR es:[edi]
  417900:	xor    eax,0x74e48143
  417905:	mov    ah,0x49
  417907:	test   BYTE PTR [ebp-0x353d0e8d],bh
  41790d:	mov    DWORD PTR [eax-0x4f],ebx
  417910:	les    eax,FWORD PTR [eax]
  417912:	push   edx
  417913:	jl     0x4178ca
  417915:	sub    edi,DWORD PTR [ebx]
  417917:	mov    dl,0x9c
  417919:	mov    al,0x7
  41791b:	jne    0x4178d4
  41791d:	mov    eax,ds:0x82b528ce
  417922:	jecxz  0x417944
  417924:	xor    al,BYTE PTR [edi+0x19]
  417927:	call   0x41:0xfcf4c9c5
  41792e:	jecxz  0x4178f4
  417930:	mov    dh,0x29
  417932:	out    0x83,al
  417934:	fisubr DWORD PTR [eax-0x44af1876]
  41793a:	push   ebp
  41793b:	add    al,cl
  41793d:	xchg   esp,edi
  41793f:	xchg   ebx,eax
  417940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417941:	cmp    dl,BYTE PTR [ecx-0x72]
  417944:	ds jmp 0xd8311197
  41794a:	jns    0x41791c
  41794c:	fnstsw WORD PTR [edx+0x4326dd4]
  417952:	add    DWORD PTR ds:[esi],eax
  417955:	ja     0x4179c1
  417957:	jl     0x41797b
  417959:	mov    ebx,0x3814a139
  41795e:	adc    ebx,ecx
  417960:	test   eax,0x9b173d48
  417965:	sub    BYTE PTR [ebp+0x601b4ee3],cl
  41796b:	pop    es
  41796c:	adc    bh,dl
  41796e:	push   es
  41796f:	or     DWORD PTR [esp+ebx*8-0x64771e3e],esp
  417976:	cli    
  417977:	ja     0x41791c
  417979:	nop
  41797a:	mov    eax,ds:0x4859bb74
  41797f:	pop    ebp
  417980:	xchg   esi,eax
  417981:	test   eax,0x881dfeb5
  417986:	push   esi
  417987:	or     ebp,edx
  417989:	lds    edx,FWORD PTR ds:[esi+0x68]
  41798d:	add    DWORD PTR [eax],edx
  41798f:	pusha  
  417990:	mov    cl,0x4b
  417992:	xchg   ebp,eax
  417993:	ja     0x41793d
  417995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417996:	scas   al,BYTE PTR es:[edi]
  417997:	lods   eax,DWORD PTR ds:[esi]
  417998:	test   eax,0x5c600fae
  41799d:	adc    ch,BYTE PTR [edx+0x64]
  4179a0:	mov    cl,al
  4179a2:	sub    esp,DWORD PTR [ebp+0x53]
  4179a5:	enter  0xf5f7,0x11
  4179a9:	xchg   edx,eax
  4179aa:	xor    cl,BYTE PTR [ebx-0x61861fcb]
  4179b0:	push   ebp
  4179b1:	cmp    BYTE PTR ds:0x9cc869f2,bh
  4179b7:	dec    edx
  4179b8:	dec    ecx
  4179b9:	pop    ebx
  4179ba:	mov    esp,0xbb295f3e
  4179bf:	and    dl,al
  4179c1:	pop    ecx
  4179c2:	popf   
  4179c3:	fsubp  st(0),st
  4179c5:	jns    0x4179e9
  4179c7:	add    bh,BYTE PTR [ecx]
  4179c9:	mov    eax,0x6ce65307
  4179ce:	push   edx
  4179cf:	clc    
  4179d0:	sub    bl,BYTE PTR [eax-0x56f818fd]
  4179d6:	call   0xa16646e4
  4179db:	out    0xd2,al
  4179dd:	adc    ch,BYTE PTR [ebx-0x38]
  4179e0:	(bad)  
  4179e1:	xor    esp,DWORD PTR [ebp-0x5bb97511]
  4179e7:	dec    esp
  4179e8:	dec    edx
  4179e9:	dec    esi
  4179ea:	add    edi,eax
  4179ec:	inc    ebx
  4179ed:	lods   eax,DWORD PTR ds:[esi]
  4179ee:	pop    ecx
  4179ef:	dec    edx
  4179f0:	sub    DWORD PTR [edi-0x1],esi
  4179f3:	jp     0x417978
  4179f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179f6:	mov    WORD PTR [eax+0x37],?
  4179f9:	cld    
  4179fa:	or     DWORD PTR [eax],ebx
  4179fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179fd:	leave  
  4179fe:	arpl   WORD PTR [edi],ax
  417a00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a01:	shl    DWORD PTR [edx+ecx*4],0x5d
  417a05:	adc    eax,ebp
  417a07:	popa   
  417a08:	das    
  417a09:	inc    esp
  417a0a:	nop
  417a0b:	jp     0x417a11
  417a0d:	xchg   esi,eax
  417a0e:	ins    DWORD PTR es:[edi],dx
  417a0f:	ins    BYTE PTR es:[edi],dx
  417a10:	cmp    esi,DWORD PTR [ebp+0x6]
  417a13:	push   esi
  417a14:	xchg   DWORD PTR ds:0x4ebee2d8,edx
  417a1a:	aaa    
  417a1b:	or     al,0x6d
  417a1d:	lea    ecx,[eax]
  417a1f:	push   0x43c1c39
  417a24:	xchg   ebx,eax
  417a25:	pushf  
  417a26:	or     esi,DWORD PTR [ebx-0x4e]
  417a29:	(bad)  
  417a2a:	mov    DWORD PTR [eax+0x1a],ebp
  417a2d:	sbb    esp,0x1a248cfa
  417a33:	dec    ebx
  417a34:	and    DWORD PTR [esi+eax*2],0xdfe977bd
  417a3b:	(bad)  
  417a3c:	jo     0x417a9e
  417a3e:	push   esp
  417a3f:	pop    ebx
  417a40:	xchg   esi,eax
  417a41:	dec    edi
  417a42:	stos   BYTE PTR es:[edi],al
  417a43:	or     dl,dh
  417a45:	cmp    ebp,DWORD PTR ss:0x4068338e
  417a4c:	ret    0xc845
  417a4f:	leave  
  417a50:	popf   
  417a51:	sbb    ah,BYTE PTR [ecx+0x3f]
  417a54:	in     eax,dx
  417a55:	(bad)  
  417a57:	sbb    esp,DWORD PTR [esi+0x5e]
  417a5a:	imul   ecx,DWORD PTR [edi],0xffffffef
  417a5d:	cmp    al,0x9
  417a5f:	mov    edx,0xee7c1252
  417a64:	dec    edi
  417a65:	(bad)  
  417a67:	aam    0x31
  417a69:	imul   esi,DWORD PTR [esi],0x30
  417a6c:	lahf   
  417a6d:	je     0x8048bdd4
  417a73:	cli    
  417a74:	pop    esi
  417a75:	xchg   esi,eax
  417a76:	pop    eax
  417a77:	mov    ebp,0x1936ea73
  417a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a7d:	stos   BYTE PTR es:[edi],al
  417a7e:	adc    al,0xff
  417a80:	jp     0x417a81
  417a82:	add    ch,al
  417a84:	hlt    
  417a85:	gs mov ch,0xef
  417a88:	cwde   
  417a89:	cdq    
  417a8a:	pop    ds
  417a8b:	fdecstp 
  417a8d:	stc    
  417a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a8f:	cmp    BYTE PTR [ecx+0x77],dl
  417a92:	fsub   QWORD PTR [esi+0x5c50d6a6]
  417a98:	test   DWORD PTR [ecx],ebp
  417a9a:	mov    DWORD PTR [ecx-0x36],ecx
  417a9d:	pop    si
  417a9f:	dec    esp
  417aa0:	lea    esi,ds:0x2779ee9d
  417aa6:	xor    al,0x1d
  417aa8:	int    0x3d
  417aaa:	inc    ebp
  417aab:	fmul   QWORD PTR [esi]
  417aad:	in     al,dx
  417aae:	jno    0x417a3b
  417ab0:	stos   DWORD PTR es:[edi],eax
  417ab1:	fsub   QWORD PTR ss:[eax+0x5]
  417ab5:	out    0x24,al
  417ab7:	mov    ch,0xda
  417ab9:	aad    0xb0
  417abb:	rcr    DWORD PTR [ebp-0x73e077cd],0x4a
  417ac2:	rcr    DWORD PTR [edx-0x437cde6e],cl
  417ac8:	pop    esp
  417ac9:	or     al,0xf1
  417acb:	sbb    ebx,DWORD PTR [ecx]
  417acd:	push   cs
  417ace:	in     al,0x90
  417ad0:	mov    bh,0x43
  417ad2:	mov    ecx,ebx
  417ad4:	cdq    
  417ad5:	lahf   
  417ad6:	cwde   
  417ad7:	rcr    BYTE PTR [ebx],cl
  417ad9:	pop    edx
  417ada:	inc    edi
  417adb:	pop    edx
  417adc:	or     eax,0xbb4fc3aa
  417ae1:	cmp    al,0x3a
  417ae3:	vpsubd xmm2,xmm0,XMMWORD PTR [edi-0x5e]
  417ae9:	hlt    
  417aea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aeb:	pop    ebx
  417aec:	inc    esi
  417aed:	and    al,0x84
  417aef:	xchg   esi,eax
  417af0:	xor    eax,0x4c9b9400
  417af5:	mov    esp,0x66173926
  417afa:	adc    BYTE PTR [eax-0x3d4e6296],bl
  417b00:	cmc    
  417b01:	sbb    al,0xf1
  417b03:	inc    eax
  417b04:	xchg   esp,eax
  417b05:	lods   al,BYTE PTR ds:[esi]
  417b06:	test   al,0x8a
  417b08:	sar    BYTE PTR [edi+0x7b],1
  417b0b:	pop    esi
  417b0c:	mov    BYTE PTR [ebx],cl
  417b0e:	nop
  417b0f:	hlt    
  417b10:	ret    0x7d79
  417b13:	sub    al,0x1
  417b15:	icebp  
  417b16:	fld    TBYTE PTR [ebx]
  417b18:	push   eax
  417b19:	(bad)  
  417b1a:	rol    bh,0x8d
  417b1d:	lahf   
  417b1e:	lahf   
  417b1f:	sub    BYTE PTR [ebp-0x47],dh
  417b22:	or     al,0x3b
  417b24:	jp     0x417b27
  417b26:	(bad)  
  417b27:	cmp    esi,DWORD PTR [edi+eax*8-0x67]
  417b2b:	mov    esi,0xd00e99b0
  417b30:	sub    dl,BYTE PTR [ecx]
  417b32:	in     al,0x37
  417b34:	ins    BYTE PTR es:[edi],dx
  417b35:	sti    
  417b36:	inc    eax
  417b37:	push   es
  417b38:	push   0xffffff80
  417b3a:	(bad)  
  417b3b:	cmc    
  417b3c:	sub    BYTE PTR [ebx],dh
  417b3e:	ss iret 
  417b40:	or     DWORD PTR [edi],0x5bda0336
  417b46:	dec    esi
  417b47:	inc    eax
  417b48:	xchg   esi,ebx
  417b4a:	push   cs
  417b4b:	adc    al,0x52
  417b4d:	mov    ds:0x8ffeec29,eax
  417b52:	lods   al,BYTE PTR ds:[esi]
  417b53:	mov    eax,ds:0x792d310e
  417b58:	out    0x40,al
  417b5a:	clc    
  417b5b:	xchg   edi,eax
  417b5c:	stos   BYTE PTR es:[edi],al
  417b5d:	pop    ds
  417b5e:	int    0x27
  417b60:	or     dh,bh
  417b62:	into   
  417b63:	or     DWORD PTR [eax-0x16e9ab9a],ecx
  417b69:	rcl    BYTE PTR [ebp+0x5a],cl
  417b6c:	stos   BYTE PTR es:[edi],al
  417b6d:	mov    al,ds:0xa8d0eb7a
  417b72:	jno    0x417b84
  417b74:	xchg   esp,eax
  417b75:	dec    esp
  417b76:	add    eax,ebx
  417b78:	mov    esp,0x982238de
  417b7d:	xchg   ebp,eax
  417b7e:	test   BYTE PTR [ebx-0x4bfeb123],dl
  417b84:	push   ebx
  417b85:	or     esi,DWORD PTR [ecx-0x9b9a1b7]
  417b8b:	retf   0x4e61
  417b8e:	mov    eax,ds:0xf92a2edb
  417b93:	stos   DWORD PTR es:[edi],eax
  417b94:	inc    edx
  417b95:	out    0x62,al
  417b97:	mov    bh,0x26
  417b99:	mov    bh,0xb3
  417b9b:	ror    BYTE PTR [edi],cl
  417b9d:	mov    ch,0x80
  417b9f:	aaa    
  417ba0:	outs   dx,BYTE PTR ds:[esi]
  417ba1:	dec    ebp
  417ba2:	mov    bh,BYTE PTR [ebx]
  417ba4:	bound  edx,QWORD PTR [edi]
  417ba6:	xor    edx,DWORD PTR [edi]
  417ba8:	add    ebx,esi
  417baa:	ror    BYTE PTR [esi],0xee
  417bad:	sar    edx,cl
  417baf:	fs mov al,0x84
  417bb2:	mov    dh,bl
  417bb4:	(bad)  
  417bb5:	xchg   esi,eax
  417bb6:	mov    esp,0xb9d747a3
  417bbb:	xor    al,0x83
  417bbd:	icebp  
  417bbe:	aaa    
  417bbf:	mov    edx,DWORD PTR [eax]
  417bc1:	inc    ecx
  417bc2:	stc    
  417bc3:	jmp    0x1dde15cc
  417bc8:	out    dx,eax
  417bc9:	mov    ebx,DWORD PTR [ecx]
  417bcb:	(bad)  
  417bcc:	repz test eax,0xf77d0f66
  417bd2:	ins    DWORD PTR es:[edi],dx
  417bd3:	js     0x417c1b
  417bd5:	adc    al,BYTE PTR [ecx+0x58]
  417bd8:	int    0xbb
  417bda:	xchg   esp,eax
  417bdb:	lock retf 
  417bdd:	les    eax,FWORD PTR [edi+0xeacb0dd]
  417be3:	out    dx,al
  417be4:	aam    0x63
  417be6:	gs cmps BYTE PTR cs:[esi],BYTE PTR es:[edi]
  417be9:	sbb    BYTE PTR [esi-0x65],dl
  417bec:	imul   esp,DWORD PTR [ecx-0x14717b59],0xffffff8c
  417bf3:	not    BYTE PTR [ecx+0x76f60516]
  417bf9:	iret   
  417bfa:	mov    WORD PTR [edi],?
  417bfc:	stos   DWORD PTR es:[edi],eax
  417bfd:	sbb    DWORD PTR [edi-0x28f2bc45],ebp
  417c03:	sbb    edi,ecx
  417c05:	or     ebx,DWORD PTR [ebx-0x3a193f14]
  417c0b:	mov    al,0xd7
  417c0d:	pop    ss
  417c0e:	mov    ebp,0xf33816c3
  417c13:	popf   
  417c14:	mov    bl,0xd5
  417c16:	mov    edi,0xf16c3979
  417c1b:	fisubr DWORD PTR [ebx+0x53]
  417c1e:	dec    eax
  417c1f:	mov    ds:0x9be86ee5,eax
  417c24:	inc    esp
  417c25:	xchg   esi,eax
  417c26:	dec    eax
  417c27:	daa    
  417c28:	jbe    0x417c5d
  417c2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c2b:	adc    eax,0xe79c4fe4
  417c30:	push   ss
  417c31:	pop    eax
  417c32:	out    0xb2,al
  417c34:	push   ebx
  417c35:	cdq    
  417c36:	jno    0x417c9e
  417c38:	mov    ah,dh
  417c3a:	call   0xdf3e6312
  417c3f:	ret    
  417c40:	in     eax,0xe2
  417c42:	pop    ss
  417c43:	std    
  417c44:	icebp  
  417c45:	push   ss
  417c46:	jb     0x417c07
  417c48:	std    
  417c49:	sahf   
  417c4a:	mov    ebx,fs
  417c4c:	(bad)  
  417c4d:	sbb    ah,BYTE PTR [ecx]
  417c4f:	xchg   ebp,eax
  417c50:	xchg   ebx,eax
  417c51:	xchg   esi,eax
  417c52:	sbb    DWORD PTR [esi+0x33eacd9e],edx
  417c58:	sbb    al,0x70
  417c5a:	arpl   WORD PTR [esi+edx*8-0x80],ax
  417c5e:	jge    0x417c0f
  417c60:	xchg   edi,eax
  417c61:	fwait
  417c62:	aas    
  417c63:	cld    
  417c64:	ret    0x9559
  417c67:	and    bh,BYTE PTR [ecx+0x498697b7]
  417c6d:	cmp    edi,DWORD PTR [edi+0x7d25a3fd]
  417c73:	sbb    eax,0xf0b725a7
  417c78:	(bad)  
  417c7b:	popa   
  417c7c:	push   es
  417c7d:	inc    ebp
  417c7e:	mov    eax,ds:0xedd02b1a
  417c83:	call   0x7c64:0xd70c16db
  417c8a:	push   ebx
  417c8b:	mov    ?,WORD PTR [ecx-0x6]
  417c8e:	mov    BYTE PTR [edi],0x2c
  417c91:	xchg   ebx,eax
  417c92:	jecxz  0x417c54
  417c94:	xor    al,0xc9
  417c96:	and    DWORD PTR [esp+ebx*8-0x50],esi
  417c9a:	xchg   esp,eax
  417c9b:	ds jb  0x417c7a
  417c9e:	gs pop ebx
  417ca0:	xchg   ecx,eax
  417ca1:	mov    dh,0xae
  417ca3:	loop   0x417c80
  417ca5:	cdq    
  417ca6:	inc    edi
  417ca7:	xor    ebp,DWORD PTR fs:[ebx+0x6d]
  417cab:	mov    ds:0x322d26e0,eax
  417cb0:	outs   dx,DWORD PTR ds:[esi]
  417cb1:	jl     0x417c45
  417cb3:	push   eax
  417cb4:	sahf   
  417cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cb6:	hlt    
  417cb7:	add    al,0x8b
  417cb9:	dec    ecx
  417cba:	imul   ecx,DWORD PTR [esi+0x5f3a0e84],0x16
  417cc1:	iret   
  417cc2:	xchg   BYTE PTR [edi+0x7872d5ef],al
  417cc8:	nop
  417cc9:	sbb    al,0xed
  417ccb:	and    BYTE PTR [eax-0x78],0xed
  417ccf:	stos   BYTE PTR es:[edi],al
  417cd0:	(bad)  
  417cd1:	and    ch,BYTE PTR [esi]
  417cd3:	jmp    0x34cf:0xa69c1651
  417cda:	sbb    cl,bh
  417cdc:	push   cs
  417cdd:	fiadd  DWORD PTR [ecx]
  417cdf:	pop    eax
  417ce0:	das    
  417ce1:	iret   
  417ce2:	aaa    
  417ce3:	or     DWORD PTR [esi+0x56],esi
  417ce6:	mov    cs,WORD PTR [ebp+edi*1+0x48]
  417cea:	mov    eax,ds:0x1dc6087b
  417cef:	sub    ah,BYTE PTR [ecx+0x5]
  417cf2:	xchg   edi,eax
  417cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cf4:	or     eax,0x63d1d65a
  417cf9:	inc    eax
  417cfa:	ins    DWORD PTR es:[edi],dx
  417cfb:	loop   0x417cf6
  417cfd:	int    0xc1
  417cff:	or     esi,DWORD PTR [eax-0x61]
  417d02:	stos   DWORD PTR es:[edi],eax
  417d03:	xor    dl,BYTE PTR [ecx-0x24bd8c7d]
  417d09:	jp     0x417c94
  417d0b:	sbb    DWORD PTR [edx],esi
  417d0d:	ret    0x3e8c
  417d10:	adc    eax,0x7139e277
  417d15:	daa    
  417d16:	lods   al,BYTE PTR ds:[esi]
  417d17:	ja     0x417c9e
  417d19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d1a:	jne    0x417cca
  417d1c:	pop    es
  417d1d:	call   0x2d61126d
  417d22:	mov    al,ds:0x5b5e0561
  417d27:	mov    BYTE PTR [ebx],bh
  417d29:	int    0x4c
  417d2b:	lods   eax,DWORD PTR ds:[esi]
  417d2c:	cs push esi
  417d2e:	lods   eax,DWORD PTR ds:[esi]
  417d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d30:	xor    dl,BYTE PTR [eax]
  417d32:	inc    BYTE PTR [esi]
  417d34:	push   esi
  417d35:	cmp    BYTE PTR [eax-0x72],dh
  417d38:	xlat   BYTE PTR ds:[ebx]
  417d39:	dec    edx
  417d3a:	jae    0x417d41
  417d3c:	and    cl,bh
  417d3e:	imul   ax,WORD PTR gs:[ecx-0x34],0x4d
  417d44:	pop    ebx
  417d45:	sti    
  417d46:	into   
  417d47:	aam    0x45
  417d49:	scas   al,BYTE PTR es:[edi]
  417d4a:	stos   BYTE PTR es:[edi],al
  417d4b:	mov    bl,0x2b
  417d4d:	and    edi,edx
  417d4f:	inc    dh
  417d51:	outs   dx,BYTE PTR ds:[esi]
  417d52:	cmp    BYTE PTR [ecx],cl
  417d54:	or     DWORD PTR [edi-0x12],ebx
  417d57:	jecxz  0x417dbc
  417d59:	inc    edi
  417d5a:	je     0x417d1e
  417d5c:	imul   edx,DWORD PTR [ebp-0x3d],0xffffff97
  417d60:	in     eax,dx
  417d61:	and    al,bh
  417d63:	lea    esi,[eax]
  417d65:	lods   al,BYTE PTR ds:[esi]
  417d66:	mov    edi,0x3ca7e0e0
  417d6b:	pop    esp
  417d6c:	(bad)  
  417d6d:	pop    esp
  417d6e:	xchg   ebx,eax
  417d6f:	jne    0x417d88
  417d71:	iret   
  417d72:	std    
  417d73:	adc    al,0xd
  417d75:	mov    dl,0xad
  417d77:	out    dx,eax
  417d78:	mov    WORD PTR [esi-0x6cd30d17],?
  417d7e:	out    0x7b,al
  417d80:	(bad)  
  417d81:	enter  0x5813,0x48
  417d85:	fidivr DWORD PTR [eax-0x41edc73d]
  417d8b:	xor    DWORD PTR [eax-0x3db29347],0x32
  417d92:	and    al,0xbb
  417d94:	fnsave [ecx+0x55]
  417d97:	lods   al,BYTE PTR ds:[esi]
  417d98:	sar    BYTE PTR [edi],1
  417d9a:	rcr    BYTE PTR ds:0x82a33216,0xee
  417da1:	rcl    DWORD PTR [ecx+0x62],0xf
  417da5:	mov    ebx,0x89e95b9c
  417daa:	std    
  417dab:	jp     0x417e26
  417dad:	jp     0x417da6
  417daf:	pop    ecx
  417db0:	cmp    eax,0x1c7172b1
  417db5:	jb     0x417d79
  417db7:	daa    
  417db8:	psubq  mm5,QWORD PTR [edi]
  417dbb:	xlat   BYTE PTR ds:[ebx]
  417dbc:	dec    ebx
  417dbd:	cmp    eax,0xb5579543
  417dc2:	push   ebx
  417dc3:	in     eax,dx
  417dc4:	fst    DWORD PTR [edi+0x3b]
  417dc7:	dec    edx
  417dc8:	ret    
  417dc9:	mov    edx,0x7e5b64c0
  417dce:	mov    esi,0x5cec252e
  417dd3:	loop   0x417e4b
  417dd5:	cmp    eax,0xa86f0090
  417dda:	jle    0x417e09
  417ddc:	mov    al,0xb
  417dde:	sbb    DWORD PTR [edi-0x2a91459a],0xe1847e97
  417de8:	cli    
  417de9:	adc    eax,0x83ab22da
  417dee:	inc    edi
  417def:	fcmovnbe st,st(5)
  417df1:	cmp    al,0xdb
  417df3:	sti    
  417df4:	dec    esi
  417df5:	enter  0x509d,0xd6
  417df9:	mov    WORD PTR [edx],?
  417dfb:	cdq    
  417dfc:	adc    bl,BYTE PTR [ebx-0xb3c0412]
  417e02:	(bad)  
  417e03:	mov    bl,0xc7
  417e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e06:	pop    ebp
  417e07:	xor    al,0x8
  417e09:	aas    
  417e0a:	fst    DWORD PTR [ebx+eiz*2]
  417e0d:	bnd call esp
  417e10:	(bad)  
  417e12:	out    0x5,al
  417e14:	cmc    
  417e15:	mov    edx,0x8c4f810c
  417e1a:	mov    fs,WORD PTR [ebx]
  417e1c:	mov    al,ds:0xf8c94ded
  417e21:	xchg   edi,eax
  417e22:	push   ecx
  417e23:	push   esi
  417e24:	push   es
  417e25:	sub    BYTE PTR [esi-0x51],al
  417e28:	cmp    BYTE PTR [ecx-0x1d],dh
  417e2b:	adc    DWORD PTR [edi],eax
  417e2d:	jl     0x417e45
  417e2f:	or     DWORD PTR [edx+edi*8-0x547182c0],esp
  417e36:	ds cli 
  417e38:	ficomp WORD PTR [edx+0x40]
  417e3b:	mov    edx,0x6b1bd6af
  417e40:	lock inc edx
  417e42:	sub    eax,0xfb810575
  417e47:	mov    eax,0x507bd2b3
  417e4c:	inc    edx
  417e4d:	out    dx,eax
  417e4e:	jns    0x417eb6
  417e50:	mov    bl,0xfb
  417e52:	outs   dx,DWORD PTR ds:[esi]
  417e53:	ret    0x83cf
  417e56:	push   esi
  417e57:	out    0xb9,eax
  417e59:	push   ss
  417e5a:	or     al,0x7
  417e5c:	cmp    BYTE PTR [ecx],cl
  417e5e:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  417e60:	dec    edi
  417e61:	adc    dh,bl
  417e63:	sub    BYTE PTR [esi+esi*4-0x269d7707],bh
  417e6a:	mov    ss:0x4079cf10,al
  417e70:	push   0xcb31bc71
  417e75:	stos   DWORD PTR es:[edi],eax
  417e76:	push   ebp
  417e77:	cmc    
  417e78:	pushf  
  417e79:	ds iret 
  417e7b:	fdivr  DWORD PTR [eax+edi*4]
  417e7e:	jecxz  0x417eff
  417e80:	push   0x51f0c197
  417e85:	or     bl,BYTE PTR [ebp-0x4d72b83]
  417e8b:	ins    BYTE PTR es:[edi],dx
  417e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e8d:	adc    bl,BYTE PTR [edx-0x36]
  417e90:	add    edx,DWORD PTR [eax]
  417e92:	cmp    esi,DWORD PTR [esi+ebp*4+0x1ce0edf5]
  417e99:	ins    DWORD PTR es:[edi],dx
  417e9a:	data16 jp 0x417eb5
  417e9d:	fstp   DWORD PTR [edx-0x5e68dcaa]
  417ea3:	mov    dl,0x72
  417ea5:	add    DWORD PTR ds:0x833a9c7d,0x114e167
  417eaf:	fsubr  QWORD PTR [edx]
  417eb1:	outs   dx,BYTE PTR ds:[esi]
  417eb2:	stos   BYTE PTR es:[edi],al
  417eb3:	in     eax,dx
  417eb4:	sbb    BYTE PTR [edi-0x6cc875c9],bl
  417eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ebc:	iret   
  417ebd:	outs   dx,DWORD PTR ds:[esi]
  417ebe:	xor    esp,DWORD PTR [esi+0x2019e9df]
  417ec4:	enter  0x1a2a,0xe4
  417ec8:	cmp    bl,BYTE PTR [ebx]
  417eca:	cwde   
  417ecb:	sub    eax,0xa02d6a07
  417ed0:	ja     0x417f4d
  417ed2:	dec    edi
  417ed3:	(bad)  
  417ed4:	or     eax,DWORD PTR [esi+0x17241876]
  417eda:	mov    edx,0x5c2d77cb
  417edf:	inc    ecx
  417ee0:	mov    dl,0xc6
  417ee2:	jle    0x417f0e
  417ee4:	nop
  417ee5:	mov    BYTE PTR [ecx],dl
  417ee7:	cmp    bl,bl
  417ee9:	fist   DWORD PTR [esi-0x41]
  417eec:	add    DWORD PTR [esi],esp
  417eee:	pop    edx
  417eef:	cmp    ebx,DWORD PTR [ecx]
  417ef1:	not    DWORD PTR [ebx-0x39]
  417ef4:	imul   edx,edx,0xe66af26a
  417efa:	fmul   st,st(3)
  417efc:	mov    ax,0xb579
  417f00:	fs and esp,esp
  417f03:	call   0x99e6e70b
  417f08:	mov    esp,0xa0908f2b
  417f0d:	mov    ebx,DWORD PTR [esi+0x63c4529a]
  417f13:	mov    bh,0x9e
  417f15:	add    eax,DWORD PTR [ecx-0x14]
  417f18:	jp     0x417f8e
  417f1a:	(bad)  
  417f1b:	into   
  417f1c:	jnp    0x417f29
  417f1e:	push   ebp
  417f1f:	mov    al,0xa4
  417f21:	loope  0x417f12
  417f23:	mov    ah,ch
  417f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f26:	daa    
  417f27:	jmp    0x81bf:0xbf9ff187
  417f2e:	xchg   edi,eax
  417f2f:	(bad)  
  417f30:	test   BYTE PTR [ecx+esi*2-0x5f6a1468],0xd5
  417f38:	jae    0x417f36
  417f3a:	jge    0x417f1d
  417f3c:	cmp    eax,0xa549c36a
  417f41:	lods   eax,DWORD PTR ds:[esi]
  417f42:	push   eax
  417f43:	xchg   edi,eax
  417f44:	sahf   
  417f45:	jecxz  0x417f4d
  417f47:	fadd   QWORD PTR [edi-0x30]
  417f4a:	shr    BYTE PTR [edi-0x770c1f07],0x10
  417f51:	sti    
  417f52:	out    0xef,eax
  417f54:	popf   
  417f55:	inc    ebx
  417f56:	retf   0xf5c6
  417f59:	cli    
  417f5a:	js     0x417fd4
  417f5c:	mov    al,0xb6
  417f5e:	push   ebx
  417f5f:	mov    al,ds:0x2d38c4a
  417f64:	jmp    0x27cf48e9
  417f69:	pushf  
  417f6a:	xor    cl,0xaf
  417f6d:	into   
  417f6e:	(bad)  
  417f6f:	or     eax,0xd86c23fa
  417f74:	xchg   ecx,eax
  417f75:	push   esi
  417f76:	push   0x1d
  417f78:	fild   WORD PTR [esi]
  417f7a:	mov    dl,0xf3
  417f7c:	test   edi,ecx
  417f7e:	rcl    BYTE PTR [eax-0x2321298],1
  417f84:	push   0xffffffe9
  417f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f87:	cwde   
  417f88:	gs aas 
  417f8a:	mov    esi,0x9490ddc9
  417f8f:	dec    ebp
  417f90:	inc    edx
  417f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f92:	aas    
  417f93:	mov    BYTE PTR [ecx],cl
  417f95:	inc    edi
  417f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f97:	jae    0x418018
  417f99:	xor    dh,BYTE PTR [edi+0x5004e14a]
  417f9f:	or     ebx,eax
  417fa1:	fsubr  DWORD PTR [edi]
  417fa3:	mov    eax,fs
  417fa5:	push   0x9f44760c
  417faa:	pop    es
  417fab:	in     al,0x2e
  417fad:	call   0xc8cebc3d
  417fb2:	xor    al,0xb2
  417fb4:	cld    
  417fb5:	add    DWORD PTR [eax],ebx
  417fb7:	aam    0x9f
  417fb9:	sub    DWORD PTR [edi-0x1a],edi
  417fbc:	push   0x564293c
  417fc1:	test   ebx,0x8ceae4c
  417fc7:	push   edx
  417fc8:	addr16 pop ss
  417fca:	es inc edx
  417fcc:	enter  0x40e3,0x9f
  417fd0:	stc    
  417fd1:	dec    edx
  417fd2:	ins    DWORD PTR es:[edi],dx
  417fd3:	hlt    
  417fd4:	xor    dl,ch
  417fd6:	adc    al,0x94
  417fd8:	test   eax,0xb9987ae8
  417fdd:	jno    0x417f90
  417fdf:	xor    DWORD PTR [esi],eax
  417fe1:	push   ss
  417fe2:	les    edx,FWORD PTR [edx-0x76]
  417fe5:	sahf   
  417fe6:	mov    ah,BYTE PTR [eax+0x5c0c35f4]
  417fec:	loope  0x417fbf
  417fee:	xor    DWORD PTR [esi+0x4c],ecx
  417ff1:	stc    
  417ff2:	mov    dh,0x79
  417ff4:	dec    ebp
  417ff5:	scas   eax,DWORD PTR es:[edi]
  417ff6:	cmp    ebx,DWORD PTR [eax+ecx*4]
  417ff9:	or     BYTE PTR [ecx-0x49],dh
  417ffc:	xor    BYTE PTR [ecx+0x30],al
  417fff:	sar    BYTE PTR [ebx-0x2a],0xe
  418003:	adc    eax,0xf5d49bc8
  418008:	hlt    
  418009:	dec    edi
  41800a:	or     BYTE PTR [esi+0x5a],ah
  41800d:	jno    0x41806b
  41800f:	dec    esi
  418010:	mov    ebx,0xb6d35e9a
  418015:	outs   dx,DWORD PTR ds:[esi]
  418016:	hlt    
  418017:	sbb    BYTE PTR [ebx-0x40],bl
  41801a:	jno    0x417f9c
  41801c:	call   0xc3f3ae87
  418021:	or     BYTE PTR [eax+0x3f10ce4],bl
  418027:	sub    al,0xc0
  418029:	or     edx,DWORD PTR ds:[esi-0x8]
  41802d:	pop    eax
  41802e:	xchg   ebx,eax
  41802f:	push   eax
  418030:	(bad)  
  418031:	sar    DWORD PTR [eax],1
  418033:	stos   DWORD PTR es:[edi],eax
  418034:	pop    ebp
  418035:	cmp    dl,dh
  418037:	mov    al,ds:0xb86a8f10
  41803c:	pop    esi
  41803d:	jne    0x41801c
  41803f:	outs   dx,DWORD PTR ds:[esi]
  418040:	cmp    eax,0x271a2078
  418045:	(bad)  
  418046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418047:	call   0xb949a14b
  41804c:	add    ebx,DWORD PTR [esi+0x7d8f7c95]
  418052:	call   0xd252:0x5061c99b
  418059:	dec    esi
  41805a:	fsub   DWORD PTR [ebp-0x30dd0402]
  418060:	sub    ebx,edx
  418062:	stos   DWORD PTR es:[edi],eax
  418063:	jle    0x4180c0
  418065:	clc    
  418066:	daa    
  418067:	retf   0xa97
  41806a:	popf   
  41806b:	add    BYTE PTR ds:[edx+0x58a86481],ah
  418072:	out    dx,al
  418073:	pop    ebp
  418074:	dec    eax
  418075:	xchg   BYTE PTR ds:0x2fef73f0,bh
  41807b:	les    esi,FWORD PTR [edx+0x4fc86c64]
  418081:	mov    ebp,0xae6d9356
  418086:	pop    ecx
  418087:	add    al,0xea
  418089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41808a:	fisubr DWORD PTR [edi-0x6f]
  41808d:	cmp    BYTE PTR [ebp+0x36],ah
  418090:	adc    DWORD PTR [eax],eax
  418092:	mov    edi,0x5c4d4fbc
  418097:	xchg   esp,eax
  418098:	sbb    dl,BYTE PTR [ecx+0x172fa3b6]
  41809e:	mov    ah,0x7
  4180a0:	add    DWORD PTR [edx],edx
  4180a2:	data16 ins BYTE PTR es:[edi],dx
  4180a4:	(bad)  
  4180a5:	adc    ah,BYTE PTR [eax*2-0x81c58c4]
  4180ac:	nop
  4180ad:	pop    ebx
  4180ae:	pop    eax
  4180af:	dec    ecx
  4180b0:	(bad)  [ebx+0x77]
  4180b3:	xor    al,0x7e
  4180b5:	mov    dl,0xb8
  4180b7:	push   ss
  4180b8:	push   esp
  4180b9:	shr    DWORD PTR [ebx+0x1d24ec02],cl
  4180bf:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4180c1:	or     BYTE PTR [ebx-0x2ebfacc2],0x7f
  4180c8:	inc    edi
  4180c9:	pushf  
  4180ca:	pop    ds
  4180cb:	repnz pop ds
  4180cd:	push   ds
  4180ce:	xor    eax,0xee391a36
  4180d3:	std    
  4180d4:	je     0x418104
  4180d6:	jg     0x4180a4
  4180d8:	push   eax
  4180d9:	cmc    
  4180da:	outs   dx,DWORD PTR ds:[esi]
  4180db:	outs   dx,BYTE PTR ds:[esi]
  4180dc:	dec    BYTE PTR ds:0x47305dcd
  4180e2:	sar    esi,cl
  4180e4:	cmp    al,0x36
  4180e6:	shl    ebp,0x69
  4180e9:	jo     0x418115
  4180eb:	jno    0x4180b2
  4180ed:	inc    eax
  4180ee:	jnp    0x418079
  4180f0:	(bad)  
  4180f1:	push   ss
  4180f2:	dec    edi
  4180f3:	cli    
  4180f4:	xchg   edx,eax
  4180f5:	out    dx,eax
  4180f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180f7:	addr16 mov edi,0xaf755b56
  4180fd:	lahf   
  4180fe:	outs   dx,DWORD PTR ds:[esi]
  4180ff:	inc    esi
  418100:	imul   edi,esp,0xffffffec
  418103:	dec    eax
  418104:	mov    al,ds:0x8ae989f5
  418109:	out    0xde,eax
  41810b:	xchg   ecx,eax
  41810c:	fld    QWORD PTR [esi-0x5ae4b0d6]
  418112:	or     eax,0xf0f0d30f
  418117:	mov    ds:0x5b4dc84d,eax
  41811c:	ins    DWORD PTR es:[edi],dx
  41811d:	pop    esi
  41811e:	call   0x62fb:0x16800af2
  418125:	jne    0x418118
  418127:	loope  0x4180dd
  418129:	dec    ebx
  41812a:	adc    BYTE PTR [eax+edx*2-0x68a1a6ac],bl
  418131:	out    dx,al
  418132:	aam    0x48
  418134:	cmp    BYTE PTR [ebx],bl
  418136:	(bad)  
  418137:	fisub  WORD PTR [ebp-0x7e27f51e]
  41813d:	cmp    ecx,edi
  41813f:	mov    esi,0x193ad990
  418144:	je     0x4181a9
  418146:	xchg   BYTE PTR [ebx+0x74a6b4d9],cl
  41814c:	adc    eax,0xf0c955a2
  418151:	inc    edx
  418152:	push   edi
  418153:	test   al,0x79
  418155:	inc    esp
  418156:	mov    ch,0xdc
  418158:	arpl   WORD PTR [ebp-0x5dac4e57],si
  41815e:	jb     0x41818a
  418160:	out    dx,eax
  418161:	sub    cl,ah
  418163:	or     eax,0x54b5da37
  418168:	jmp    0x29860961
  41816d:	out    0x98,eax
  41816f:	leave  
  418170:	mov    ds:0xe6313342,eax
  418175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418176:	int    0xf4
  418178:	pop    ss
  418179:	ja     0x418193
  41817b:	cli    
  41817c:	add    al,0x21
  41817e:	mov    cl,0x59
  418180:	mov    al,0xa1
  418182:	cmp    esp,DWORD PTR [eax]
  418184:	push   eax
  418185:	out    dx,al
  418186:	pop    ds
  418187:	push   ds
  418188:	jnp    0x418158
  41818a:	stc    
  41818b:	aam    0x2f
  41818d:	int3   
  41818e:	sbb    bl,al
  418190:	(bad)  
  418191:	call   0x8cfa47b1
  418196:	inc    edx
  418197:	fcomp  DWORD PTR [ecx]
  418199:	jae    0x4181a1
  41819b:	pop    edi
  41819c:	les    ebx,FWORD PTR [eax]
  41819e:	mov    ebp,0x1485474b
  4181a3:	enter  0x8313,0xc5
  4181a7:	mov    esp,0x67609a74
  4181ac:	retf   
  4181ad:	lahf   
  4181ae:	xchg   esp,eax
  4181af:	jg     0x41820d
  4181b1:	xchg   ecx,eax
  4181b2:	xor    BYTE PTR [eax],0x53
  4181b5:	sbb    al,0x6b
  4181b7:	cmp    BYTE PTR [edx-0xb7eceda],ah
  4181bd:	mov    bl,0x7f
  4181bf:	pop    ebp
  4181c0:	inc    ecx
  4181c1:	sbb    BYTE PTR [esi+0x9],0xc5
  4181c5:	pop    eax
  4181c6:	ror    BYTE PTR [esi-0x52ec652d],1
  4181cc:	adc    eax,0x5c0b1acd
  4181d1:	pop    ebx
  4181d2:	xor    DWORD PTR [edi+0x6b],esi
  4181d5:	and    dl,BYTE PTR [edx-0x43bb832d]
  4181db:	mov    edx,0x8b21980f
  4181e0:	cmp    BYTE PTR [esi+ecx*2+0xdf54763],ch
  4181e7:	out    0xae,eax
  4181e9:	leave  
  4181ea:	jns    0x418247
  4181ec:	mov    bh,0x1f
  4181ee:	xchg   edx,eax
  4181ef:	loope  0x41824d
  4181f1:	dec    eax
  4181f2:	jbe    0x4181ba
  4181f4:	mov    ecx,0xc95ecda4
  4181f9:	out    dx,al
  4181fa:	mov    ds:0x80a86555,eax
  4181ff:	hlt    
  418200:	out    dx,eax
  418201:	mov    cl,0x9e
  418203:	cmp    al,0x8f
  418205:	retf   
  418206:	or     eax,0x562763a0
  41820b:	icebp  
  41820c:	rol    DWORD PTR [ebx+0x1f],cl
  41820f:	arpl   WORD PTR [eax-0x3a4fab4d],ax
  418215:	lods   al,BYTE PTR ds:[esi]
  418216:	loope  0x4181e6
  418218:	xchg   edx,eax
  418219:	popf   
  41821a:	shr    eax,0x67
  41821d:	mov    eax,esi
  41821f:	mov    bl,dh
  418221:	rol    ah,1
  418223:	test   BYTE PTR [edx],bh
  418225:	push   esi
  418226:	call   FWORD PTR [esi]
  418228:	add    al,0x19
  41822a:	lods   eax,DWORD PTR ds:[esi]
  41822b:	sub    cl,BYTE PTR [ecx]
  41822d:	imul   ecx,DWORD PTR [edx],0x65
  418230:	xor    DWORD PTR [ecx-0x729a13af],0xd4dcb87e
  41823a:	call   0x19d7:0x6abaf878
  418241:	dec    ecx
  418242:	outs   dx,DWORD PTR ds:[esi]
  418243:	frstor [esi+0x4d]
  418246:	or     eax,DWORD PTR [edx-0x8a90fb7]
  41824c:	and    DWORD PTR [edi-0x7fa9b04d],0x36
  418253:	sbb    edx,DWORD PTR [ecx-0x6924c822]
  418259:	enter  0xb97c,0x5d
  41825d:	push   esi
  41825e:	push   es
  41825f:	(bad)  
  418260:	adc    ebx,DWORD PTR [ecx+ebx*4]
  418263:	ins    DWORD PTR es:[edi],dx
  418264:	fstp   TBYTE PTR [eax+eax*2+0x5924b274]
  41826b:	xlat   BYTE PTR ds:[ebx]
  41826c:	cdq    
  41826d:	mov    ebp,0xb1ed465d
  418272:	fld    QWORD PTR [ecx+0x25]
  418275:	retf   0x270a
  418278:	loope  0x418298
  41827a:	xor    ebp,DWORD PTR [edx]
  41827c:	scas   al,BYTE PTR es:[edi]
  41827d:	mov    ebp,gs
  41827f:	bound  esi,QWORD PTR [esi+0x71]
  418282:	pop    esi
  418283:	push   esp
  418284:	sbb    al,0x56
  418286:	test   eax,0x6b10206d
  41828b:	sub    eax,edi
  41828d:	xchg   ebx,eax
  41828e:	xor    al,BYTE PTR [esi+0x16a6f374]
  418294:	push   0xffffff87
  418296:	xor    DWORD PTR [edi+0x39],0x6344f670
  41829d:	mov    ah,0x54
  41829f:	aas    
  4182a0:	jns    0x418239
  4182a2:	stos   BYTE PTR es:[edi],al
  4182a3:	stc    
  4182a4:	dec    ecx
  4182a5:	pushf  
  4182a6:	mov    WORD PTR [edi+0x58],gs
  4182a9:	xchg   ecx,eax
  4182aa:	je     0x4182d8
  4182ac:	outs   dx,DWORD PTR ds:[esi]
  4182ad:	inc    esi
  4182ae:	jne    0x418248
  4182b0:	popf   
  4182b1:	cdq    
  4182b2:	or     edx,ebp
  4182b4:	icebp  
  4182b5:	xchg   ebx,eax
  4182b6:	ins    DWORD PTR es:[edi],dx
  4182b7:	inc    DWORD PTR [edi-0x71]
  4182ba:	(bad)  
  4182bb:	aad    0x47
  4182bd:	cli    
  4182be:	add    dh,BYTE PTR [ebx]
  4182c0:	mov    bl,0x83
  4182c2:	fld    QWORD PTR [ebx]
  4182c4:	pop    ecx
  4182c5:	clc    
  4182c6:	retf   0xa28a
  4182c9:	xor    bh,bl
  4182cb:	mov    edx,0xd554996b
  4182d0:	mov    esi,0xb09c0955
  4182d5:	sub    ebx,DWORD PTR [edx*2-0x6c579e23]
  4182dc:	mov    bh,0xd9
  4182de:	sbb    eax,0x9bf534f0
  4182e3:	inc    eax
  4182e4:	inc    ebx
  4182e5:	call   0x429181f1
  4182ea:	or     edx,DWORD PTR [edx-0x74bcb57d]
  4182f0:	jle    0x418317
  4182f2:	sub    DWORD PTR [edx],edi
  4182f4:	add    eax,0xf4892553
  4182f9:	and    dl,ch
  4182fb:	mov    WORD PTR [ecx],ds
  4182fd:	add    ch,BYTE PTR [esi+0x57]
  418300:	mov    ch,BYTE PTR [edi+0x47]
  418303:	and    eax,0x23b8485d
  418308:	(bad)  
  418309:	test   eax,0xa3fd4d09
  41830e:	lahf   
  41830f:	cmp    ecx,0x4c
  418312:	jmp    0xc4d0aede
  418317:	mov    dh,0x5b
  418319:	cmp    BYTE PTR [edi+0x36],cl
  41831c:	lods   al,BYTE PTR ds:[esi]
  41831d:	mov    bl,0xbb
  41831f:	addr16 cdq 
  418321:	jle    0x4182a4
  418323:	or     bh,BYTE PTR [ebp+0x6c]
  418326:	fdiv   QWORD PTR [eax]
  418328:	int3   
  418329:	pusha  
  41832a:	mov    cl,0x8c
  41832c:	mov    bh,0x44
  41832e:	mov    al,ds:0x5ded99cf
  418333:	mov    ds:0x9d16c586,al
  418338:	xor    DWORD PTR [eax],edx
  41833a:	test   DWORD PTR ds:0x38a444f5,0x75226d10
  418344:	idiv   bl
  418346:	mov    dh,0x17
  418348:	cli    
  418349:	(bad)  
  41834a:	xchg   edx,eax
  41834b:	addr16 sbb eax,0x5c766ff4
  418351:	shl    DWORD PTR [edi],0x6d
  418354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418356:	mov    ds:0x12aef9e0,eax
  41835b:	or     ebp,DWORD PTR [eax-0x4dd4a331]
  418361:	jmp    0xcec6b950
  418366:	cdq    
  418367:	cmp    eax,0xe37ede03
  41836c:	inc    ebp
  41836d:	mov    edx,0xd49eb159
  418372:	mov    WORD PTR [ebx+0x4a],?
  418375:	fsub   DWORD PTR [edi-0x3b744d43]
  41837b:	xchg   ebp,eax
  41837c:	jo     0x4183c2
  41837e:	iret   
  41837f:	ror    DWORD PTR [edi+ebx*4+0x2a1779d8],cl
  418386:	and    DWORD PTR [ebx],ebx
  418388:	shr    dl,0x2a
  41838b:	jo     0x4183fc
  41838d:	and    dh,BYTE PTR [edx+0x71a6a100]
  418393:	test   DWORD PTR [ecx-0x4e5d70ea],esp
  418399:	(bad)  
  41839a:	(bad)  
  41839b:	xchg   esp,eax
  41839c:	mov    al,ah
  41839e:	cmp    ebx,DWORD PTR [ecx]
  4183a0:	lock inc ecx
  4183a2:	sub    ebp,DWORD PTR [edx+ecx*2]
  4183a5:	cmp    eax,0x6815a7c8
  4183aa:	enter  0x8ea9,0x1d
  4183ae:	mov    eax,ds:0x9ffae9c4
  4183b3:	sbb    esi,DWORD PTR [edx+0x7f]
  4183b6:	jg     0x41835a
  4183b8:	push   ds
  4183b9:	sbb    DWORD PTR [eax+eiz*2+0x678c5c3d],ecx
  4183c0:	repnz adc DWORD PTR [edi+0x38],edi
  4183c4:	imul   edi,DWORD PTR [edx+0xa],0x41c9d0f1
  4183cb:	push   eax
  4183cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183cd:	test   DWORD PTR [esi-0xe],esi
  4183d0:	aas    
  4183d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183d2:	fucom  st(4)
  4183d4:	add    edi,DWORD PTR [ebx+0x7c]
  4183d7:	adc    esp,DWORD PTR [edi-0x341857c0]
  4183dd:	in     eax,dx
  4183de:	sub    ah,BYTE PTR [ecx]
  4183e0:	and    esp,eax
  4183e2:	iret   
  4183e3:	xor    eax,0x7b8bb95c
  4183e8:	mov    ebp,0x583f2167
  4183ed:	jae    0x418438
  4183ef:	lds    ebp,FWORD PTR fs:[ebx-0x66]
  4183f3:	(bad)
  4183f6:	cmp    edi,DWORD PTR gs:[edx-0x79]
  4183fa:	data16 jnp 0x41843a
  4183fd:	cwde   
  4183fe:	adc    eax,0x2b40026f
  418403:	xor    al,0xe8
  418405:	repnz adc eax,0xb50719a9
  41840b:	int    0xc
  41840d:	mov    dh,0x26
  41840f:	cli    
  418410:	sub    esi,DWORD PTR [eax-0xc]
  418413:	dec    edx
  418414:	pop    edi
  418415:	dec    ebx
  418416:	gs push eax
  418418:	rep lods eax,DWORD PTR ds:[esi]
  41841a:	outs   dx,BYTE PTR ds:[esi]
  41841b:	aam    0xbf
  41841d:	pop    edx
  41841e:	push   edi
  41841f:	ins    DWORD PTR es:[edi],dx
  418420:	fstp   st(5)
  418422:	imul   edx,DWORD PTR [edi+0xe],0x27404ea5
  418429:	sbb    esi,DWORD PTR [ecx]
  41842b:	call   0xf5f0:0x798e86dc
  418432:	sar    BYTE PTR [eax-0x2bbfa119],cl
  418438:	xchg   ebp,eax
  418439:	retf   0x1e2c
  41843c:	clc    
  41843d:	sbb    edi,edx
  41843f:	jmp    0x41849b
  418441:	cmp    eax,0xe4aeaf73
  418446:	dec    edx
  418447:	sbb    ch,cl
  418449:	inc    esi
  41844a:	cmp    ebx,DWORD PTR [edx+0x30]
  41844d:	mov    edx,0x19242bd5
  418452:	fucomp st(4)
  418454:	sub    eax,DWORD PTR [ecx]
  418456:	push   eax
  418457:	cmp    eax,DWORD PTR [ebx-0x56]
  41845a:	shl    BYTE PTR [ecx+0x28],1
  41845d:	mov    gs,esi
  41845f:	mul    BYTE PTR [ecx-0x60]
  418462:	data16 jbe 0x41843e
  418465:	out    dx,eax
  418466:	or     bl,BYTE PTR [eax-0x3958364e]
  41846c:	inc    edi
  41846d:	mov    esp,ebx
  41846f:	cmp    BYTE PTR [ecx-0x22],0xf9
  418473:	cmp    ebx,ebx
  418475:	and    DWORD PTR [ecx-0x5a],esi
  418478:	xchg   ebp,eax
  418479:	shl    esp,cl
  41847b:	popf   
  41847c:	jbe    0x4184b0
  41847e:	fldcw  WORD PTR [edx]
  418480:	pop    ebx
  418481:	push   ebx
  418482:	daa    
  418483:	mov    eax,ds:0x30425dd3
  418488:	gs test al,0xc9
  41848b:	mov    ah,0x1
  41848d:	rcl    BYTE PTR [ecx+0x6880023b],1
  418493:	mov    cl,0x40
  418495:	mov    dl,0x73
  418497:	jecxz  0x418436
  418499:	xor    ecx,edx
  41849b:	jb     0x418464
  41849d:	(bad)  
  41849f:	pop    ecx
  4184a0:	jo     0x418504
  4184a2:	or     BYTE PTR [eax-0x67],bl
  4184a5:	and    DWORD PTR [edi+0x7c],edx
  4184a8:	xor    DWORD PTR [edx],esp
  4184aa:	iret   
  4184ab:	mov    ds:0xa47c156a,eax
  4184b0:	jle    0x4184f4
  4184b2:	xor    BYTE PTR [eax+0x8],al
  4184b5:	in     eax,0x7
  4184b7:	add    ebp,esi
  4184b9:	data16 adc BYTE PTR [edx-0x32],0x55
  4184be:	dec    esi
  4184bf:	int    0x5
  4184c1:	pop    edi
  4184c2:	cs xor eax,0xce1ef47
  4184c8:	mov    ds:0xb08199e0,al
  4184cd:	in     eax,dx
  4184ce:	std    
  4184cf:	pop    esi
  4184d0:	fwait
  4184d1:	sbb    edx,DWORD PTR [ecx]
  4184d3:	in     eax,dx
  4184d4:	call   0x2a71cbdd
  4184d9:	aaa    
  4184da:	push   0xffffffa3
  4184dc:	(bad)  [eax+0x4179af62]
  4184e2:	leave  
  4184e3:	(bad)  
  4184e4:	push   ds
  4184e5:	sar    ebx,0x14
  4184e8:	mov    eax,ds:0x75cac925
  4184ed:	out    dx,eax
  4184ee:	mov    BYTE PTR [ebp+0x31],bh
  4184f1:	loopne 0x41853a
  4184f3:	sub    esp,ebp
  4184f5:	mov    ds:0x39bd6580,al
  4184fa:	mov    al,ds:0xa5fad514
  4184ff:	and    BYTE PTR [ecx],bl
  418501:	mov    WORD PTR [esi+0x6f86c953],?
  418507:	jmp    0x4184c3
  418509:	adc    dh,bh
  41850b:	test   BYTE PTR [esi],dh
  41850d:	adc    BYTE PTR [edi],0xdd
  418510:	xor    BYTE PTR [eax],dl
  418512:	mov    gs:0x45a50e7c,al
  418518:	ror    esi,0x24
  41851b:	lock std 
  41851d:	pushf  
  41851e:	or     BYTE PTR [ebx-0x7e76081f],0xf9
  418525:	jae    0x4184cd
  418527:	adc    DWORD PTR [ebx+edi*4],edi
  41852a:	dec    edx
  41852b:	sti    
  41852c:	dec    ebx
  41852d:	daa    
  41852e:	sti    
  41852f:	jbe    0x41850f
  418531:	(bad)  
  418533:	aad    0x3
  418535:	lods   al,BYTE PTR ds:[esi]
  418536:	push   es
  418537:	mov    ebp,0x8681a2dc
  41853c:	test   DWORD PTR [edx+esi*8-0x3d],ecx
  418540:	xlat   BYTE PTR ds:[ebx]
  418541:	imul   esp,DWORD PTR [ecx-0x60],0xffffffde
  418545:	push   0x2b
  418547:	xchg   esp,eax
  418548:	hlt    
  418549:	push   cs
  41854a:	xchg   ebx,eax
  41854b:	or     cl,BYTE PTR [esi+0x77e23108]
  418551:	add    al,0xb
  418553:	mov    ?,WORD PTR [eax+0x4e8d84e0]
  418559:	push   ecx
  41855a:	dec    esp
  41855b:	test   DWORD PTR [ebx-0x4f],esi
  41855e:	or     cl,dl
  418560:	mov    dh,0x88
  418562:	mov    al,BYTE PTR [edx+0x10f5aabb]
  418568:	xor    bl,ah
  41856a:	push   cs
  41856b:	cs call 0xa69e:0xc6808725
  418573:	fwait
  418574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418575:	sub    ah,BYTE PTR [eax]
  418577:	jmp    0x2edcb977
  41857c:	jp     0x418525
  41857e:	sub    ah,BYTE PTR [esi+0x59]
  418581:	cmp    al,0xa2
  418583:	popa   
  418584:	loopne 0x418537
  418586:	cli    
  418587:	sub    eax,0x4f3d64f
  41858c:	icebp  
  41858d:	outs   dx,DWORD PTR ds:[esi]
  41858e:	mov    BYTE PTR [edx],0x6e
  418591:	lods   eax,DWORD PTR ds:[esi]
  418592:	xchg   ecx,eax
  418593:	lock push ds
  418595:	and    ebx,DWORD PTR [ecx+0x19]
  418598:	call   0x283e9ca7
  41859d:	sub    al,0xd4
  41859f:	call   0xc5a18cd7
  4185a4:	and    DWORD PTR [esp+eax*4+0x5e],esp
  4185a8:	mov    ds:0xece9a1aa,al
  4185ad:	loop   0x4185c2
  4185af:	stc    
  4185b0:	pop    ebp
  4185b1:	test   BYTE PTR [esi-0x73],0xf
  4185b5:	jle    0x41854a
  4185b7:	sub    eax,DWORD PTR [esi+ebp*8-0x1a]
  4185bb:	sar    DWORD PTR [ebx+0x23],cl
  4185be:	pushf  
  4185bf:	or     al,0x8f
  4185c1:	stos   DWORD PTR es:[edi],eax
  4185c2:	leave  
  4185c3:	xor    eax,0x659b8c7c
  4185c8:	inc    edx
  4185c9:	sbb    al,0xff
  4185cb:	in     eax,0x63
  4185cd:	ret    
  4185ce:	add    ebp,ebx
  4185d0:	pop    esp
  4185d1:	sbb    DWORD PTR [esi],ebx
  4185d3:	daa    
  4185d4:	pop    ebx
  4185d5:	pop    es
  4185d6:	ret    0x1746
  4185d9:	dec    ebp
  4185da:	shl    DWORD PTR [edi-0x485db0df],1
  4185e0:	push   0xe412a892
  4185e5:	mov    bl,0x7
  4185e7:	pop    ds
  4185e8:	cwde   
  4185e9:	call   0x7a952f51
  4185ee:	(bad)  
  4185ef:	aas    
  4185f0:	ins    BYTE PTR es:[edi],dx
  4185f1:	daa    
  4185f2:	jl     0x41859c
  4185f4:	mov    edx,0xeefeeaa7
  4185f9:	rcl    ecx,0x1d
  4185fc:	jl     0x4185db
  4185fe:	xchg   esi,eax
  4185ff:	jg     0x41858d
  418601:	ds jle 0x4185da
  418604:	in     al,dx
  418605:	hlt    
  418606:	and    esp,ebx
  418608:	les    ecx,FWORD PTR [ecx-0xe42b7ef]
  41860e:	sahf   
  41860f:	jae    0x4185a8
  418611:	cwde   
  418612:	or     ah,bh
  418614:	fdivr  st,st(5)
  418616:	sbb    eax,0xa6849a0b
  41861b:	ffreep st(0)
  41861d:	jb     0x418600
  41861f:	repnz mov ebp,ecx
  418622:	cmp    edx,edx
  418624:	test   BYTE PTR [eax-0x522437e8],bl
  41862a:	pushf  
  41862b:	sti    
  41862c:	add    bh,BYTE PTR [eax]
  41862e:	adc    BYTE PTR [ecx+0x56],al
  418631:	test   DWORD PTR [ebp-0x31],ebp
  418634:	mov    esi,0xbdb78af0
  418639:	sub    cl,BYTE PTR [edi+0x77]
  41863c:	jg     0x4185f2
  41863e:	sar    al,1
  418640:	outs   dx,DWORD PTR ds:[esi]
  418641:	and    ebp,esp
  418643:	xchg   esi,eax
  418644:	xor    eax,0x3c8e8f84
  418649:	stos   DWORD PTR es:[edi],eax
  41864a:	pop    ebx
  41864b:	lahf   
  41864c:	adc    ebp,DWORD PTR [ecx+0x34]
  41864f:	pop    ds
  418650:	mov    edx,0x7ff12fe1
  418655:	xor    DWORD PTR [esi+0x4011cef3],0x65
  41865c:	mov    edi,DWORD PTR [ecx+ebp*8]
  41865f:	test   al,0xf6
  418661:	cmp    BYTE PTR [eax-0x5f87f1f3],cl
  418667:	jp     0x418640
  418669:	inc    edx
  41866a:	sbb    eax,0xa0b6b795
  41866f:	test   eax,0x366ef67c
  418674:	pop    ecx
  418675:	out    0x9,eax
  418677:	leave  
  418678:	xor    esi,ecx
  41867a:	sub    edi,ecx
  41867c:	into   
  41867d:	lea    esp,[ebp-0x63]
  418680:	dec    ebx
  418681:	xchg   ecx,eax
  418682:	stc    
  418683:	daa    
  418684:	ja     0x418633
  418686:	xor    bl,BYTE PTR [edi+0x4c]
  418689:	leave  
  41868a:	jmp    0x1f8b:0x58a90f1c
  418691:	or     al,0x29
  418693:	sti    
  418694:	mov    dl,0xc1
  418696:	pop    eax
  418697:	push   ebp
  418698:	xor    edx,eax
  41869a:	mov    DWORD PTR [ebp+0x8],edx
  41869d:	mov    edx,DWORD PTR [ebp+0x8]
  4186a0:	mov    ebx,DWORD PTR [ebp-0x58]
  4186a3:	add    edx,0x5708c0
  4186a9:	imul   edx,ebx
  4186ac:	mov    DWORD PTR [ebp-0x58],edx
  4186af:	mov    edx,DWORD PTR [ebp+0x8]
  4186b2:	mov    ebx,DWORD PTR [ebp-0x54]
  4186b5:	add    edx,0x64f8a2
  4186bb:	or     edx,ebx
  4186bd:	mov    DWORD PTR [ebp-0x54],edx
  4186c0:	mov    edx,DWORD PTR [ebp+0x8]
  4186c3:	mov    ebx,DWORD PTR [ebp-0x50]
  4186c6:	add    edx,ecx
  4186c8:	xor    edx,ebx
  4186ca:	mov    DWORD PTR [ebp-0x50],edx
  4186cd:	mov    edx,DWORD PTR [ebp+0x8]
  4186d0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4186d3:	add    edx,edi
  4186d5:	and    edx,ebx
  4186d7:	mov    DWORD PTR [ebp-0x4c],edx
  4186da:	mov    edx,DWORD PTR [ebp+0x8]
  4186dd:	mov    ebx,DWORD PTR [ebp-0x48]
  4186e0:	lea    edx,[ebx+edx*1+0x241fc1f]
  4186e7:	mov    DWORD PTR [ebp-0x48],edx
  4186ea:	mov    edx,DWORD PTR [ebp+0x8]
  4186ed:	mov    ebx,0xfa5e15e2
  4186f2:	sub    ebx,edx
  4186f4:	add    ebx,DWORD PTR [ebp-0x44]
  4186f7:	jmp    0x41aab2
  4186fc:	or     ch,BYTE PTR [edi+0x35]
  4186ff:	aad    0xf7
  418701:	mov    bh,0x8a
  418703:	(bad)  
  418704:	sahf   
  418705:	fidivr DWORD PTR [ecx-0x35cb4405]
  41870b:	test   BYTE PTR ds:0xd0727d33,0x5f
  418712:	jb     0x418786
  418714:	test   BYTE PTR ds:0x56af5bd9,al
  41871a:	jns    0x418784
  41871c:	xor    DWORD PTR [ecx-0x154c28b3],edi
  418722:	add    al,0xd2
  418724:	mov    gs,ecx
  418726:	int3   
  418727:	cmp    ch,BYTE PTR [edi+0x5a]
  41872a:	xchg   BYTE PTR [ecx-0x5a0fbd3e],dl
  418730:	mov    ch,0x39
  418732:	sbb    BYTE PTR [ecx-0x29],bh
  418735:	popa   
  418736:	or     al,BYTE PTR [ecx+0x22aa04fc]
  41873c:	popf   
  41873d:	ins    DWORD PTR es:[edi],dx
  41873e:	cmp    dh,BYTE PTR ds:0x6402e6b4
  418744:	adc    edx,DWORD PTR [esi+0x75]
  418747:	fbstp  TBYTE PTR [edi+0x53]
  41874a:	mov    al,0xa3
  41874c:	in     eax,dx
  41874d:	pushf  
  41874e:	aas    
  41874f:	inc    ebx
  418750:	mov    ebx,0x9f2f1010
  418756:	jno    0x418783
  418758:	mov    edx,0xb4ab6bae
  41875d:	rcl    DWORD PTR [ebp+0x1],1
  418760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418761:	dec    eax
  418762:	pusha  
  418763:	inc    edx
  418764:	xchg   ecx,eax
  418765:	or     eax,0x9fd2fd2c
  41876a:	out    0xa3,eax
  41876c:	xor    DWORD PTR [ebx+0x8],esp
  41876f:	push   ss
  418770:	or     BYTE PTR [ecx],cl
  418772:	xchg   ah,al
  418774:	out    dx,eax
  418775:	sbb    dh,BYTE PTR [edi]
  418777:	out    0xd3,al
  418779:	cmp    ebx,DWORD PTR [ecx]
  41877b:	daa    
  41877c:	ret    
  41877d:	sub    BYTE PTR [edx+eiz*4],cl
  418780:	pop    ss
  418781:	ins    DWORD PTR es:[edi],dx
  418782:	jmp    FWORD PTR [esi+0x19ee402b]
  418788:	jmp    0xa331ca13
  41878d:	xchg   edx,eax
  41878e:	call   0x49e0:0xc9746ecc
  418795:	jo     0x418777
  418797:	(bad)  
  418799:	mov    DWORD PTR [edx],edi
  41879b:	or     DWORD PTR [edx],0x309c5491
  4187a1:	mov    edx,0x9c057ab3
  4187a6:	pop    esi
  4187a7:	std    
  4187a8:	aam    0x22
  4187aa:	sbb    eax,0x7735970b
  4187af:	dec    edi
  4187b0:	ret    0x68d7
  4187b3:	shl    BYTE PTR [ecx-0x58],cl
  4187b6:	push   0x12
  4187b8:	in     al,0x4f
  4187ba:	jp     0x41880d
  4187bc:	mov    edi,0x1d6243d
  4187c1:	in     eax,dx
  4187c2:	dec    ebx
  4187c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187c4:	sbb    eax,0xf072acb0
  4187c9:	into   
  4187ca:	dec    esp
  4187cb:	mov    ebp,0x5047b0bc
  4187d0:	jns    0x418850
  4187d2:	or     eax,0x4de4a9af
  4187d7:	xchg   edi,eax
  4187d8:	stos   BYTE PTR es:[edi],al
  4187d9:	fwait
  4187da:	inc    eax
  4187db:	push   eax
  4187dc:	dec    ebp
  4187dd:	pushf  
  4187de:	dec    ebx
  4187df:	arpl   WORD PTR [ebp+0x43],si
  4187e2:	push   eax
  4187e3:	and    DWORD PTR [eax],edi
  4187e5:	ins    BYTE PTR es:[edi],dx
  4187e6:	test   al,0xb3
  4187e8:	mov    eax,ds:0xa92b70dd
  4187ed:	or     DWORD PTR [esi+0x1a],0xf
  4187f1:	xor    eax,0xfcf0501d
  4187f6:	cmp    dh,BYTE PTR [ecx]
  4187f8:	lds    ebp,FWORD PTR ds:0xcbcebf1c
  4187fe:	pop    esi
  4187ff:	mov    dl,0xed
  418801:	xchg   ecx,eax
  418802:	nop
  418803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418804:	lds    esp,FWORD PTR [eax]
  418806:	hlt    
  418807:	clc    
  418808:	add    DWORD PTR [ecx],esp
  41880a:	pop    esi
  41880b:	mov    bh,BYTE PTR ds:0x762cedf8
  418811:	adc    eax,0x1798ed3a
  418816:	pop    edx
  418817:	xchg   ebp,eax
  418818:	xor    al,BYTE PTR [ecx+0x6b]
  41881b:	adc    bl,al
  41881d:	xchg   esp,eax
  41881e:	(bad)  
  41881f:	sbb    eax,0x87e2eba6
  418824:	xchg   edi,eax
  418825:	test   bh,bh
  418827:	mov    eax,ds:0x5d46ca89
  41882c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41882d:	jecxz  0x4187ca
  41882f:	lea    esp,[ecx+0x130c6f74]
  418835:	fidiv  DWORD PTR [edx+0x53b238c4]
  41883b:	pusha  
  41883c:	pop    ecx
  41883d:	loope  0x418893
  41883f:	jo     0x4188bf
  418841:	and    ebx,edx
  418843:	sub    al,0xd2
  418845:	mov    ds:0x3d2e2256,eax
  41884a:	js     0x418817
  41884c:	call   FWORD PTR [edx-0x128ea51f]
  418852:	mov    al,BYTE PTR [ecx+ebp*4]
  418855:	dec    edi
  418856:	fstp   TBYTE PTR [edx]
  418858:	dec    edi
  418859:	xchg   BYTE PTR [esi],al
  41885b:	inc    esp
  41885c:	xchg   edx,eax
  41885d:	adc    bl,BYTE PTR [bp+di+0x7d]
  418861:	rcl    DWORD PTR [esi-0x1937a8bd],0x80
  418868:	dec    ebx
  418869:	sbb    al,ah
  41886b:	sbb    eax,0xa476335
  418870:	mov    ebp,0x76ec604f
  418875:	nop
  418876:	xor    DWORD PTR [ecx],ecx
  418878:	pop    es
  418879:	aas    
  41887a:	out    dx,eax
  41887b:	sub    BYTE PTR [esi+edi*4+0x66],ah
  41887f:	jmp    0x41880b
  418881:	mov    dl,0xf1
  418883:	xorps  xmm7,XMMWORD PTR [esi]
  418886:	es jb  0x41886d
  418889:	inc    ecx
  41888a:	into   
  41888b:	daa    
  41888c:	mov    ss,eax
  41888e:	leave  
  41888f:	xor    cl,bh
  418891:	test   al,0x8d
  418893:	loopne 0x418838
  418895:	cld    
  418896:	je     0x418876
  418898:	call   FWORD PTR [eax+edx*2+0x6708d3c1]
  41889f:	into   
  4188a0:	mov    eax,0x29ad911f
  4188a5:	jne    0x4188ae
  4188a7:	push   eax
  4188a8:	bnd js 0x41888a
  4188ab:	adc    al,0xb3
  4188ad:	into   
  4188ae:	ds addr16 pop edx
  4188b1:	mov    ah,0xe1
  4188b3:	(bad)  
  4188b4:	dec    ebp
  4188b5:	dec    ecx
  4188b6:	sub    edx,DWORD PTR [ebp-0x28]
  4188b9:	clc    
  4188ba:	cmp    al,0x7
  4188bc:	imul   esi,DWORD PTR [eax],0xffffff9c
  4188bf:	leave  
  4188c0:	pop    ebp
  4188c1:	pop    ebx
  4188c2:	pop    ebp
  4188c3:	pop    ecx
  4188c4:	add    cl,BYTE PTR [eax]
  4188c6:	fld    DWORD PTR ds:0xc97eb1ed
  4188cc:	mov    ebx,0x7def162a
  4188d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188d2:	mov    al,0x94
  4188d4:	je     0x4188cf
  4188d6:	push   esp
  4188d7:	test   DWORD PTR [eax+eax*4-0x1ed3b66d],edx
  4188de:	cs add al,0x6c
  4188e1:	mov    al,ds:0xe5804cc9
  4188e6:	loop   0x4188d4
  4188e8:	dec    ebx
  4188e9:	call   FWORD PTR [edi+0x55d6e0b1]
  4188ef:	xchg   ecx,eax
  4188f0:	xor    eax,0xc1145947
  4188f5:	push   cs
  4188f6:	xchg   ebp,eax
  4188f7:	outs   dx,DWORD PTR ds:[esi]
  4188f8:	sub    al,0xbc
  4188fa:	shl    eax,cl
  4188fc:	pop    eax
  4188fd:	jb     0x418939
  4188ff:	out    0x9c,eax
  418901:	add    DWORD PTR [edi],ecx
  418903:	out    0x59,eax
  418905:	cdq    
  418906:	cmp    dl,BYTE PTR [esi+0x6b]
  418909:	into   
  41890a:	fmul   QWORD PTR [eax-0x8f76ca0]
  418910:	test   DWORD PTR [esi],ebp
  418912:	enter  0xac8a,0xe8
  418916:	push   0x8836f463
  41891b:	inc    esi
  41891c:	mov    al,0x77
  41891e:	adc    BYTE PTR [eax+0x6d820af7],0x99
  418925:	sbb    al,0x3a
  418927:	fxch   st(3)
  418929:	jmp    DWORD PTR [ebp-0x7]
  41892c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41892d:	test   DWORD PTR [ebp-0x11],esi
  418930:	repnz pop edx
  418932:	loopne 0x4188d1
  418934:	xchg   edx,eax
  418935:	sbb    eax,0xb56bc87c
  41893a:	mov    WORD PTR [ecx],es
  41893c:	sub    eax,0x39528bec
  418941:	or     al,0x0
  418943:	fisub  DWORD PTR [ebx+ebp*1-0x26]
  418947:	pop    ecx
  418948:	sar    edi,cl
  41894a:	push   ss
  41894b:	rcl    DWORD PTR [edx-0x254b40b8],1
  418951:	inc    ebx
  418952:	push   ecx
  418953:	inc    edx
  418954:	test   DWORD PTR [edi],0x4c12bcb2
  41895a:	inc    esp
  41895b:	mov    cl,0xd5
  41895d:	test   eax,0xf22ca4b5
  418962:	mov    dl,0x22
  418964:	and    ch,BYTE PTR [edx+0x7a3a971f]
  41896a:	mov    al,ds:0xf1411fa7
  41896f:	cmp    al,0xc7
  418971:	loop   0x4189ed
  418973:	jp     0x4189cd
  418975:	sub    DWORD PTR [edi],ebp
  418977:	lods   eax,DWORD PTR ds:[esi]
  418978:	setl   BYTE PTR [edx-0x57]
  41897c:	jecxz  0x4188fe
  41897e:	mov    al,ds:0xa0fceb15
  418983:	fsubr  st,st(1)
  418985:	and    eax,0x7ec2c682
  41898a:	fcom   QWORD PTR [ecx+0x15d82ae0]
  418990:	je     0x4189f9
  418992:	push   cs
  418993:	adc    BYTE PTR ds:0x377ba617,al
  418999:	dec    esi
  41899a:	adc    al,0xe4
  41899c:	les    ebx,FWORD PTR [ebp+0x39ddf888]
  4189a2:	xor    ecx,DWORD PTR [ecx-0xa69d133]
  4189a8:	jne    0x418980
  4189aa:	std    
  4189ab:	(bad)  
  4189ac:	xchg   esp,eax
  4189ad:	rol    edx,1
  4189af:	jbe    0x4189ae
  4189b1:	pusha  
  4189b2:	out    dx,eax
  4189b3:	mov    ebx,0x3ebe2938
  4189b8:	pop    ebx
  4189b9:	aaa    
  4189ba:	aas    
  4189bb:	retf   
  4189bc:	mov    edx,0x3065f7bd
  4189c1:	sahf   
  4189c2:	test   al,0x78
  4189c4:	sahf   
  4189c5:	aaa    
  4189c6:	icebp  
  4189c7:	nop
  4189c8:	fld    DWORD PTR [ebx+0x22]
  4189cb:	or     ah,cl
  4189cd:	pop    eax
  4189ce:	jecxz  0x4189f1
  4189d0:	push   ebp
  4189d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189d2:	fwait
  4189d3:	adc    edi,DWORD PTR [esi+0x6d]
  4189d6:	adc    al,BYTE PTR [ecx]
  4189d8:	jmp    0x1978:0x1c26dc2f
  4189df:	sub    DWORD PTR [ecx],esp
  4189e1:	mov    eax,0x4802ee8c
  4189e6:	outs   dx,BYTE PTR ds:[esi]
  4189e7:	in     al,dx
  4189e8:	nop
  4189e9:	or     eax,edx
  4189eb:	sahf   
  4189ec:	and    BYTE PTR [esi],ah
  4189ee:	cmp    eax,0x42c898ae
  4189f3:	or     esp,DWORD PTR [esi-0x65ac004a]
  4189f9:	stos   DWORD PTR es:[edi],eax
  4189fa:	xchg   edi,eax
  4189fb:	pushf  
  4189fc:	pop    esi
  4189fd:	mov    ah,0x46
  4189ff:	sti    
  418a00:	mov    al,ds:0x3a2c9513
  418a05:	push   edi
  418a06:	and    BYTE PTR [ebx],0x1e
  418a09:	out    0x1a,al
  418a0b:	enter  0xbe95,0x38
  418a0f:	in     al,0x14
  418a11:	cmp    bh,ah
  418a13:	inc    ebp
  418a14:	sbb    ebx,esi
  418a16:	call   0x59e9:0x6293def1
  418a1d:	outs   dx,DWORD PTR gs:[esi]
  418a1f:	and    BYTE PTR [eax+0x63],al
  418a22:	jl     0x4189de
  418a24:	mov    eax,0x5cdd798b
  418a29:	aam    0xb6
  418a2b:	xchg   ebx,eax
  418a2c:	div    DWORD PTR [eax+0x120822f3]
  418a32:	out    dx,eax
  418a33:	inc    eax
  418a34:	or     al,0x4b
  418a36:	dec    edx
  418a37:	inc    esi
  418a38:	push   ds
  418a39:	xlat   BYTE PTR ds:[ebx]
  418a3a:	fldcw  WORD PTR [ecx+0xf93e0b8]
  418a40:	sbb    dl,dh
  418a42:	xor    eax,0xcc0c78f9
  418a47:	bound  esp,QWORD PTR [ebp+0x33]
  418a4a:	xchg   DWORD PTR [ebx+0x3fc2f371],esi
  418a50:	jo     0x418ac0
  418a52:	inc    ebp
  418a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a54:	fs int 0x4b
  418a57:	fwait
  418a58:	ror    BYTE PTR es:[ebx],cl
  418a5b:	sbb    DWORD PTR [edx+0x602a258e],0x63a34917
  418a65:	dec    ebp
  418a66:	sbb    al,0x8b
  418a68:	fprem  
  418a6a:	mov    DWORD PTR [edx-0x7464394e],esi
  418a70:	jp     0x418ab6
  418a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a73:	ror    ebp,cl
  418a75:	push   cs
  418a76:	cmp    BYTE PTR [eax+0x17],0x34
  418a7a:	pop    ebp
  418a7b:	mov    ss,WORD PTR [esp+eiz*8-0x26]
  418a7f:	or     BYTE PTR [ecx+0x37],dh
  418a82:	dec    ebx
  418a83:	adc    bl,ch
  418a85:	cmp    esp,DWORD PTR [eax+0x32]
  418a88:	adc    al,0x3d
  418a8a:	push   esi
  418a8b:	dec    edi
  418a8c:	fsubrp st(6),st
  418a8e:	sahf   
  418a8f:	xor    al,0xba
  418a91:	mov    ch,0x76
  418a93:	pop    eax
  418a94:	inc    ebx
  418a95:	sahf   
  418a96:	mov    dh,0xc1
  418a98:	mov    edi,0x51dbd5a1
  418a9d:	loope  0x418aa9
  418a9f:	inc    edx
  418aa0:	pop    edx
  418aa1:	imul   BYTE PTR [ebp+0x2a]
  418aa4:	test   BYTE PTR [edx-0x54],ch
  418aa7:	mov    ah,0x40
  418aa9:	dec    edi
  418aab:	test   BYTE PTR [edi+0x75eec0a8],0xb3
  418ab2:	mov    ebp,0x2808d038
  418ab7:	dec    esp
  418ab8:	push   ebx
  418ab9:	jl     0x418a69
  418abb:	addr16 mov ecx,0x1174597e
  418ac1:	or     eax,0xaa128e6
  418ac6:	shl    DWORD PTR ds:0xab0165d2,cl
  418acc:	popa   
  418acd:	mov    ds:0x43008e20,eax
  418ad2:	push   ss
  418ad3:	out    0x5c,eax
  418ad5:	sbb    DWORD PTR [esi],eax
  418ad7:	pop    ecx
  418ad8:	dec    ebp
  418ad9:	push   ebp
  418ada:	mov    esi,fs
  418adc:	cmp    ah,ah
  418ade:	add    edi,esi
  418ae0:	or     bl,BYTE PTR [esi-0x4ea79543]
  418ae6:	inc    ebp
  418ae7:	out    0x40,al
  418ae9:	or     bh,al
  418aeb:	rcl    DWORD PTR [eax-0x1d2a8e04],1
  418af1:	lea    edi,[esi+0x780561fc]
  418af7:	sub    dl,BYTE PTR [edx]
  418af9:	fst    DWORD PTR [ecx-0x58]
  418afc:	fwait
  418afd:	push   eax
  418afe:	imul   ebp,DWORD PTR [edi],0x8c3787a2
  418b04:	(bad)  
  418b05:	jp     0x418b61
  418b07:	xor    BYTE PTR [ebp+0x4f],dl
  418b0a:	(bad)  
  418b0b:	lea    ebx,[edi+0x34]
  418b0e:	sahf   
  418b0f:	jg     0x418b08
  418b11:	adc    dl,BYTE PTR [ebp-0x45]
  418b14:	and    BYTE PTR [edi+esi*4-0x72],al
  418b18:	fwait
  418b19:	sub    edi,DWORD PTR [edx+0xb]
  418b1c:	push   edx
  418b1d:	push   es
  418b1e:	in     al,dx
  418b1f:	lea    edi,[edx+edi*4+0x40dbef99]
  418b26:	frstor [ebx+0x78]
  418b29:	xchg   ebp,eax
  418b2a:	nop
  418b2b:	inc    ecx
  418b2c:	or     ebx,0x19f5cf71
  418b32:	mov    edi,0xd47b830b
  418b37:	push   esp
  418b38:	sub    eax,DWORD PTR [esi]
  418b3a:	pop    esi
  418b3b:	push   0xde1f5e43
  418b40:	adc    DWORD PTR [edx],esp
  418b42:	xchg   esp,eax
  418b43:	xchg   ecx,eax
  418b44:	jle    0x418b41
  418b46:	int    0xea
  418b48:	ds iret 
  418b4a:	mov    edi,0x2c4f1809
  418b4f:	loopne 0x418b9b
  418b51:	sar    dl,0xf7
  418b54:	mov    WORD PTR [edx+edi*4-0x2f8ad3dd],fs
  418b5b:	mov    esp,0x5c801652
  418b60:	add    eax,0xa36cd6dc
  418b65:	jg     0x418b84
  418b67:	daa    
  418b68:	or     DWORD PTR [ecx+esi*8-0x66f4190a],ebx
  418b6f:	stc    
  418b70:	inc    edx
  418b71:	cmp    DWORD PTR [eax-0x7b6b32e6],eax
  418b77:	mov    ebp,0x343ad8c7
  418b7c:	push   ds
  418b7d:	pop    ecx
  418b7e:	adc    cl,BYTE PTR [edi-0xb98f484]
  418b84:	nop
  418b85:	scas   eax,DWORD PTR es:[edi]
  418b86:	mov    edx,ebx
  418b88:	out    dx,eax
  418b89:	js     0x418b21
  418b8b:	add    cl,BYTE PTR [ebx]
  418b8d:	add    eax,0xba87a320
  418b92:	and    BYTE PTR [esp+edx*8+0x78],cl
  418b96:	mov    gs,esp
  418b98:	jae    0x418b47
  418b9a:	jb     0x418c03
  418b9c:	mov    cl,0xb4
  418b9e:	mov    DWORD PTR [edi-0x1933bbf0],eax
  418ba4:	sbb    al,0xbc
  418ba6:	(bad)  
  418ba7:	dec    edx
  418ba8:	sbb    al,0xcf
  418baa:	xchg   esi,eax
  418bab:	cli    
  418bac:	(bad)  
  418bad:	lahf   
  418bae:	push   0xffffffc7
  418bb0:	adc    DWORD PTR [esi],esp
  418bb2:	mov    ebp,0x7adf8f6b
  418bb7:	add    eax,DWORD PTR [eax]
  418bb9:	push   ds
  418bba:	nop
  418bbb:	push   0xc9fd1011
  418bc0:	in     eax,dx
  418bc1:	mov    bl,BYTE PTR ds:0x86e2b01c
  418bc7:	dec    ebp
  418bc8:	imul   esi,DWORD PTR [eax+0x34b7cc80],0x6a6ecf9d
  418bd2:	in     al,dx
  418bd3:	mov    bh,bh
  418bd5:	cmp    DWORD PTR ds:0xec13f06a,esi
  418bdb:	mov    bl,0xef
  418bdd:	inc    esp
  418bde:	jp     0x418bd3
  418be0:	lea    ecx,[eax-0x2f9b961f]
  418be6:	mov    DWORD PTR ds:0xee9537ff,esp
  418bec:	adc    DWORD PTR [edx],ecx
  418bee:	mov    cl,0xcb
  418bf0:	jae    0x418c5c
  418bf2:	test   eax,0x7a6d930a
  418bf7:	out    0x1c,eax
  418bf9:	inc    esi
  418bfa:	sbb    BYTE PTR [bx+0x57a],dl
  418bff:	je     0x418c1a
  418c01:	xchg   ebx,eax
  418c02:	hlt    
  418c03:	pop    eax
  418c04:	das    
  418c05:	test   DWORD PTR [esi+0x4890c0af],ebx
  418c0b:	cmp    ah,BYTE PTR [ebx]
  418c0d:	jg     0x418bb2
  418c0f:	xor    bh,al
  418c11:	sahf   
  418c12:	xor    eax,0x89f2d0c2
  418c17:	or     BYTE PTR [edx],bh
  418c19:	xchg   ebp,eax
  418c1a:	push   es
  418c1b:	(bad)  
  418c1c:	fmul   DWORD PTR [ecx]
  418c1e:	jmp    0x586077bc
  418c23:	fidiv  DWORD PTR [eax-0x6add2e99]
  418c29:	jo     0x418c3a
  418c2b:	sti    
  418c2c:	(bad)  
  418c2d:	and    dl,BYTE PTR [edx]
  418c2f:	fstp   TBYTE PTR [ecx+0x5f]
  418c32:	pop    ecx
  418c33:	fsubr  DWORD PTR ds:0x260810e5
  418c39:	(bad)  
  418c3b:	fs push ebx
  418c3d:	push   es
  418c3e:	dec    ecx
  418c3f:	cmc    
  418c40:	mov    bl,0xe2
  418c42:	std    
  418c43:	mov    WORD PTR [ecx+eiz*8],es
  418c46:	dec    edi
  418c47:	(bad)  
  418c48:	push   edi
  418c49:	pop    es
  418c4a:	cld    
  418c4b:	push   ss
  418c4c:	inc    edi
  418c4d:	jecxz  0x418c3b
  418c4f:	sub    al,0xa3
  418c51:	out    dx,eax
  418c52:	jne    0x418c46
  418c54:	jnp    0x418ca6
  418c56:	lea    ecx,[ebx+0x3f76e42b]
  418c5c:	xchg   esi,eax
  418c5d:	mov    ebx,0xd7db4175
  418c62:	aad    0x5
  418c64:	out    dx,eax
  418c65:	sbb    DWORD PTR [esi+ebp*1+0x68b2c2fb],0x84d46e51
  418c70:	call   0xca80:0x9ff23fb6
  418c77:	inc    ebp
  418c78:	mov    DWORD PTR [ebx+0xaa9b166],0xe6fdd175
  418c82:	lahf   
  418c83:	stc    
  418c84:	add    ch,0x9d
  418c87:	xchg   ebp,eax
  418c88:	pop    ebx
  418c89:	mov    ch,0x63
  418c8b:	cmp    BYTE PTR [eax+0x19],cl
  418c8e:	jae    0x418c65
  418c90:	add    cl,al
  418c92:	adc    eax,0x49cf6160
  418c97:	adc    DWORD PTR [eax+0x15],ecx
  418c9a:	add    ecx,ebx
  418c9c:	push   edi
  418c9d:	xor    ah,dh
  418c9f:	call   0x540433c6
  418ca4:	mov    al,ds:0x93cd1e7c
  418ca9:	sbb    DWORD PTR [ebp-0x35],edi
  418cac:	arpl   WORD PTR [ecx+0x321195f4],bx
  418cb2:	out    0x92,al
  418cb4:	das    
  418cb5:	(bad)  
  418cb6:	fsubr  DWORD PTR [eax+ebx*4+0x6650984b]
  418cbd:	out    0xc8,al
  418cbf:	sti    
  418cc0:	mov    bl,0xe5
  418cc2:	add    DWORD PTR [edx+0x2b],esi
  418cc5:	mov    ?,WORD PTR [ebx]
  418cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cc8:	enter  0x30e7,0xce
  418ccc:	aas    
  418ccd:	les    ebp,FWORD PTR [edx+0x39]
  418cd0:	mov    esi,0xf977d793
  418cd5:	push   cs
  418cd6:	mov    cl,0x91
  418cd8:	popa   
  418cd9:	scas   eax,DWORD PTR es:[edi]
  418cda:	push   0x14
  418cdc:	in     eax,0x5
  418cde:	sub    DWORD PTR [esi],0xffffff8c
  418ce1:	pop    esi
  418ce2:	pop    esp
  418ce3:	cs jecxz 0x418cae
  418ce6:	cli    
  418ce7:	lds    ecx,FWORD PTR [eax-0x5f]
  418cea:	jne    0x418cf3
  418cec:	retf   
  418ced:	scas   al,BYTE PTR es:[edi]
  418cee:	pushf  
  418cef:	mov    cl,0xe6
  418cf1:	pushf  
  418cf2:	popf   
  418cf3:	das    
  418cf4:	mov    bh,BYTE PTR [ebp+0x33cb8102]
  418cfa:	arpl   dx,sp
  418cfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cfd:	jp     0x418d6f
  418cff:	jecxz  0x418cc3
  418d01:	sub    edi,DWORD PTR [ebx]
  418d03:	into   
  418d04:	dec    ecx
  418d05:	rol    cl,cl
  418d07:	es lahf 
  418d09:	adc    ah,dl
  418d0b:	mov    edx,DWORD PTR [edi+0x2d]
  418d0e:	(bad)  
  418d10:	sbb    BYTE PTR [ecx+edx*2+0x7b],dl
  418d14:	adc    dh,ah
  418d16:	fwait
  418d17:	pop    ss
  418d18:	repz sub dh,BYTE PTR [esi-0x27f909a9]
  418d1f:	out    0x97,eax
  418d21:	clc    
  418d22:	cwde   
  418d23:	repnz test BYTE PTR [ebx-0x37],cl
  418d27:	jb     0x418ccd
  418d29:	mov    ecx,0xb51358b0
  418d2e:	or     eax,0x9338d9a
  418d33:	jbe    0x418d5b
  418d35:	cld    
  418d36:	cmp    esi,DWORD PTR [edi-0x68]
  418d39:	jecxz  0x418d16
  418d3b:	cwde   
  418d3c:	push   0x52
  418d3e:	dec    esp
  418d3f:	add    ah,BYTE PTR [esi]
  418d41:	cmp    DWORD PTR [edi],eax
  418d43:	and    DWORD PTR [ecx+0x7e4bff6b],esi
  418d49:	xor    ah,bh
  418d4b:	clc    
  418d4c:	adc    al,0x1e
  418d4e:	push   0x87708a21
  418d53:	pop    edi
  418d54:	push   edi
  418d55:	mov    edx,0xd8a595ce
  418d5a:	in     al,0x7e
  418d5c:	nop
  418d5d:	or     al,0x79
  418d5f:	mov    DWORD PTR [esi+eiz*4],ecx
  418d62:	add    ecx,DWORD PTR [eax]
  418d64:	mov    ds:0xf5316b5,al
  418d69:	push   0xbb7457f2
  418d6e:	push   ebx
  418d6f:	dec    esp
  418d70:	push   es
  418d71:	xchg   ecx,eax
  418d72:	xchg   DWORD PTR [edi],edi
  418d74:	aas    
  418d75:	ins    DWORD PTR es:[edi],dx
  418d76:	rcl    BYTE PTR [esi],0x2
  418d79:	push   es
  418d7a:	sti    
  418d7b:	call   0x8a59b92f
  418d80:	inc    ecx
  418d81:	adc    al,0x44
  418d83:	xor    esp,0x2e36239b
  418d89:	cmp    eax,0x7a72c885
  418d8e:	and    eax,0xdcaa55f5
  418d93:	push   cs
  418d94:	test   DWORD PTR [ebp-0x23f70767],edi
  418d9a:	cwde   
  418d9b:	adc    al,0xf4
  418d9d:	and    ebp,DWORD PTR ds:0x19d1a436
  418da3:	xchg   edx,eax
  418da4:	cmp    ebx,DWORD PTR [ecx+0x3083087b]
  418daa:	push   eax
  418dab:	nop
  418dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dad:	mov    edi,0x346d9d48
  418db2:	cld    
  418db3:	jmp    0x95db578e
  418db8:	and    DWORD PTR [edi],ecx
  418dba:	add    ch,BYTE PTR [edi+0x5a9b28c0]
  418dc0:	sti    
  418dc1:	pop    edx
  418dc2:	push   ss
  418dc3:	push   0xffffff90
  418dc5:	fwait
  418dc6:	sub    DWORD PTR [edx+0xf526d9e],ecx
  418dcc:	(bad)  
  418dcd:	outs   dx,BYTE PTR ds:[esi]
  418dce:	pop    eax
  418dcf:	push   ss
  418dd0:	leave  
  418dd1:	mov    ebp,0x31820065
  418dd6:	add    DWORD PTR [ebp+0x1a918189],ecx
  418ddc:	add    DWORD PTR [edi],esp
  418dde:	jne    0x418de2
  418de0:	push   edi
  418de1:	jne    0x418dd9
  418de3:	(bad)  
  418de4:	not    BYTE PTR [ecx+0x43]
  418de7:	pop    esi
  418de8:	adc    BYTE PTR [esi+0x10],0x12
  418dec:	sub    bl,ah
  418dee:	xlat   BYTE PTR ds:[ebx]
  418def:	jecxz  0x418dbe
  418df1:	push   esp
  418df2:	lock addr16 mov al,ds:0xc15f
  418df7:	mov    al,0xc0
  418df9:	mov    esp,0xf77a68e7
  418dfe:	popa   
  418dff:	jno    0x418d94
  418e01:	mov    al,BYTE PTR [edx-0x28a799a0]
  418e07:	enter  0x1c94,0x49
  418e0b:	clc    
  418e0c:	ja     0x418e51
  418e0e:	cmp    DWORD PTR [edx+0x1e],ebx
  418e11:	xchg   esp,eax
  418e12:	xor    eax,0xfc1f9674
  418e17:	jmp    0x418e81
  418e19:	dec    esi
  418e1a:	das    
  418e1b:	sub    BYTE PTR [ebx-0x6e],al
  418e1e:	xor    BYTE PTR [ecx-0x723edea0],0xe4
  418e25:	jne    0x418e69
  418e27:	cs mov ecx,0x333f3523
  418e2d:	in     al,0xba
  418e2f:	mov    dh,0x4b
  418e31:	jecxz  0x418e82
  418e33:	inc    eax
  418e34:	lock (bad) 
  418e36:	push   esi
  418e37:	cmp    al,0x63
  418e39:	mov    ds:0x7c6776,eax
  418e3e:	and    eax,0xf055770
  418e43:	mov    cl,bl
  418e45:	ror    BYTE PTR [edi-0x5ec307f9],1
  418e4b:	(bad)  
  418e4d:	jo     0x418ddb
  418e4f:	mov    bh,0xc8
  418e51:	xor    eax,0xdf8ab65f
  418e56:	daa    
  418e57:	int    0xca
  418e59:	loopne 0x418e21
  418e5b:	and    al,BYTE PTR [ecx-0x21]
  418e5e:	jo     0x418e4f
  418e60:	les    esi,FWORD PTR [edi+0x1f]
  418e63:	out    0xcc,eax
  418e65:	loope  0x418e3d
  418e67:	jle    0x418ed0
  418e69:	into   
  418e6a:	test   DWORD PTR [edx+eiz*8],edx
  418e6d:	inc    edx
  418e6e:	popf   
  418e6f:	clc    
  418e70:	leave  
  418e71:	cmp    DWORD PTR ds:[ebp+0x6cd9ef52],esi
  418e78:	adc    edi,esp
  418e7a:	mov    al,0xbf
  418e7c:	mov    ds:0x77fab015,al
  418e81:	pop    edx
  418e82:	scas   al,BYTE PTR es:[edi]
  418e83:	or     bl,BYTE PTR [esi+eax*4+0x2]
  418e87:	inc    ecx
  418e88:	ja     0x418e6e
  418e8a:	cli    
  418e8b:	les    eax,FWORD PTR [ebx+0x4ee1d15c]
  418e91:	cmp    edx,DWORD PTR [ebx+0x59ee1162]
  418e97:	and    ecx,esi
  418e99:	in     eax,dx
  418e9a:	xchg   edx,eax
  418e9b:	aaa    
  418e9c:	fdivrp st(7),st
  418e9e:	pop    ds
  418e9f:	mov    dh,BYTE PTR [eax+0x3cf5f697]
  418ea5:	jae    0x418e57
  418ea7:	mov    ebx,DWORD PTR [edx-0x3d]
  418eaa:	clc    
  418eab:	push   es
  418eac:	bswap  ebx
  418eae:	cmp    al,0x52
  418eb0:	rol    bh,cl
  418eb2:	adc    BYTE PTR [edx-0x2e],0x70
  418eb6:	adc    eax,0xc2ff3157
  418ebb:	ss push eax
  418ebd:	lods   al,BYTE PTR ds:[esi]
  418ebe:	out    dx,eax
  418ebf:	cmp    ch,BYTE PTR [ebx+0x5c2bd2a]
  418ec5:	adc    ch,dl
  418ec7:	dec    edx
  418ec8:	cmc    
  418ec9:	das    
  418eca:	add    esi,0xffffff8e
  418ecd:	xchg   BYTE PTR [esi+ebx*4+0x20d47cf7],dl
  418ed4:	push   0xf29c8e36
  418ed9:	jnp    0x418eed
  418edb:	test   eax,0x42010346
  418ee0:	outs   dx,BYTE PTR ds:[esi]
  418ee1:	enter  0x70a5,0x73
  418ee5:	mov    WORD PTR [esi],?
  418ee7:	dec    ebp
  418ee8:	out    dx,al
  418ee9:	jecxz  0x418e7a
  418eeb:	clc    
  418eec:	sbb    esp,DWORD PTR [edx+0x51]
  418eef:	rcl    ebx,cl
  418ef1:	adc    eax,0x5ab3ce5c
  418ef6:	pop    edx
  418ef7:	addr16 mov ebp,0xe79789db
  418efd:	xchg   BYTE PTR [eax],bh
  418eff:	ss jl  0x418e84
  418f02:	pusha  
  418f03:	cmp    esp,DWORD PTR [edx-0x57]
  418f06:	int3   
  418f07:	fwait
  418f08:	(bad)  
  418f09:	pop    esp
  418f0a:	dec    ebx
  418f0b:	outs   dx,DWORD PTR ds:[esi]
  418f0c:	jns    0x418f02
  418f0e:	int    0xe9
  418f10:	mov    ecx,0x83e7a3d0
  418f15:	pop    eax
  418f16:	lods   eax,DWORD PTR ds:[esi]
  418f17:	dec    ecx
  418f18:	icebp  
  418f19:	rcr    BYTE PTR [edi-0xcefa7f9],cl
  418f1f:	or     BYTE PTR [eax-0x2047fc06],ch
  418f25:	leave  
  418f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f27:	out    0x80,eax
  418f29:	dec    edx
  418f2a:	jnp    0x418eb3
  418f2c:	ds aam 0x33
  418f2f:	inc    esp
  418f30:	mov    eax,0x76f2f141
  418f35:	xchg   esp,eax
  418f36:	pop    ecx
  418f37:	mov    al,0x5d
  418f39:	imul   ebp,DWORD PTR [ebx],0xffffffe4
  418f3c:	jp     0x418f7f
  418f3e:	mov    esp,0x69b794a9
  418f43:	fnstcw WORD PTR [eax]
  418f45:	and    BYTE PTR [edi],dl
  418f47:	rol    BYTE PTR [ecx+0x63],0xdf
  418f4b:	fdivr  st,st(2)
  418f4d:	imul   ah
  418f4f:	gs mov ebx,0x42b60a3
  418f55:	loope  0x418f19
  418f57:	fmulp  st(2),st
  418f59:	lahf   
  418f5a:	adc    DWORD PTR [ecx+0x3f],ebp
  418f5d:	loope  0x418fc7
  418f5f:	in     eax,dx
  418f60:	cs pop eax
  418f62:	std    
  418f63:	ins    DWORD PTR es:[edi],dx
  418f64:	int3   
  418f65:	and    DWORD PTR [ebp+ebp*1-0x77617b27],0xffffffab
  418f6d:	mov    ebx,0x2a048eb2
  418f72:	inc    eax
  418f73:	les    edi,FWORD PTR [eax]
  418f75:	outs   dx,DWORD PTR ds:[esi]
  418f76:	retf   
  418f77:	xor    esi,DWORD PTR [ecx+0x14]
  418f7a:	add    al,0xa8
  418f7c:	cwde   
  418f7d:	pop    ebx
  418f7e:	leave  
  418f7f:	adc    ah,BYTE PTR [ecx-0x5]
  418f82:	aaa    
  418f83:	les    esp,FWORD PTR [eax]
  418f85:	stos   BYTE PTR es:[edi],al
  418f86:	mov    ah,0x83
  418f88:	mov    eax,ds:0xf1379fcd
  418f8d:	hlt    
  418f8e:	lea    ebp,ds:0x18690f9b
  418f94:	xor    eax,0x7912b9aa
  418f99:	clc    
  418f9a:	test   DWORD PTR [eax-0x797a78ee],edx
  418fa0:	xchg   esi,eax
  418fa1:	ds mov edi,0x71862a7f
  418fa7:	outs   dx,DWORD PTR ds:[esi]
  418fa8:	int    0x2e
  418faa:	cmp    DWORD PTR [edi-0x6b],esp
  418fad:	data16 cld 
  418faf:	jo     0x418f6f
  418fb1:	(bad)  
  418fb2:	cs mov eax,0xeef75b5d
  418fb8:	cmp    al,dh
  418fba:	adc    BYTE PTR [ecx-0x73],cl
  418fbd:	mov    ch,0x30
  418fbf:	mov    ch,0xd2
  418fc1:	ja     0x418fd6
  418fc3:	pop    ebx
  418fc4:	xor    esp,DWORD PTR [edx+0x33fc35a8]
  418fca:	cld    
  418fcb:	sub    eax,DWORD PTR [ebx-0x1c]
  418fce:	dec    edi
  418fcf:	pop    es
  418fd0:	es out 0xa7,eax
  418fd3:	dec    edi
  418fd4:	adc    DWORD PTR [ecx-0x293b093e],eax
  418fda:	out    dx,al
  418fdb:	add    ebp,DWORD PTR [ecx]
  418fdd:	shl    DWORD PTR [ecx],1
  418fdf:	les    edi,FWORD PTR [edi+0x2d]
  418fe2:	stos   DWORD PTR es:[edi],eax
  418fe3:	dec    ecx
  418fe4:	adc    BYTE PTR [esi+0x6afe409d],al
  418fea:	sbb    DWORD PTR es:[eax+0x3110494d],esi
  418ff1:	mov    cl,0xc8
  418ff3:	add    DWORD PTR [ecx],esi
  418ff5:	mov    bl,0x9
  418ff7:	jl     0x419041
  418ff9:	cwde   
  418ffa:	cli    
  418ffb:	mov    ecx,0x76d86f0f
  419000:	add    al,0x9a
  419002:	dec    BYTE PTR [edx+0x28]
  419005:	or     al,bl
  419007:	cmp    eax,0xc440d815
  41900c:	lods   eax,DWORD PTR ds:[esi]
  41900d:	sbb    dh,bl
  41900f:	popa   
  419010:	and    DWORD PTR [edx+0x37d695a2],0x6a
  419017:	clc    
  419018:	push   ds
  419019:	sbb    BYTE PTR [edi+0x2],ch
  41901c:	in     al,dx
  41901d:	xchg   DWORD PTR [ecx-0x47f24ab1],ebp
  419023:	enter  0xc739,0x29
  419027:	daa    
  419028:	popf   
  419029:	pop    ebx
  41902a:	jp     0x418fd3
  41902c:	dec    edx
  41902d:	pop    edi
  41902e:	add    BYTE PTR [ebx-0x7a],bl
  419031:	mov    WORD PTR [eax+0x2f33790c],fs
  419037:	sbb    al,BYTE PTR [esi-0x30]
  41903a:	fstp   st(7)
  41903c:	mov    dh,0xe2
  41903e:	xor    BYTE PTR [ebp-0x26],0x38
  419042:	bound  edi,QWORD PTR [ecx]
  419044:	dec    eax
  419045:	adc    BYTE PTR [edx-0x71],ch
  419048:	call   0xd0e0:0xdaaad963
  41904f:	jmp    FWORD PTR [ebx-0x6f40a3b5]
  419055:	imul   ecx,ecx,0xffffff81
  419058:	jecxz  0x4190aa
  41905a:	(bad)  
  41905b:	push   edi
  41905c:	lock xchg ecx,eax
  41905e:	arpl   WORD PTR [edx],di
  419060:	mov    dh,0x16
  419062:	mov    WORD PTR [esi+0x17],es
  419065:	xchg   edi,eax
  419066:	enter  0x6552,0x9b
  41906a:	daa    
  41906b:	jle    0x419037
  41906d:	xchg   esi,eax
  41906e:	push   ecx
  41906f:	test   DWORD PTR [esi],edi
  419071:	or     edi,DWORD PTR [ebx+ecx*4+0x4b720fbd]
  419078:	jo     0x4190a0
  41907a:	inc    edx
  41907b:	lods   eax,DWORD PTR ds:[esi]
  41907c:	jnp    0x41904a
  41907e:	popf   
  41907f:	push   ebp
  419080:	popf   
  419081:	add    ch,BYTE PTR [esi]
  419083:	imul   edi,DWORD PTR [ebx-0x6d656dd5],0xffffffa9
  41908a:	cmp    eax,0x42fba3c6
  41908f:	retf   0x9421
  419092:	mov    al,ds:0x54d4c720
  419097:	and    DWORD PTR [edi],0xb3cde47b
  41909d:	mov    bl,0xb7
  41909f:	aas    
  4190a0:	mov    ecx,0xd2abc8a1
  4190a5:	stos   DWORD PTR es:[edi],eax
  4190a6:	cli    
  4190a7:	xlat   BYTE PTR ds:[ebx]
  4190a8:	in     al,0x36
  4190aa:	lods   al,BYTE PTR ds:[esi]
  4190ab:	xlat   BYTE PTR ds:[ebx]
  4190ac:	daa    
  4190ad:	leave  
  4190ae:	pop    ds
  4190af:	jno    0x419111
  4190b1:	xlat   BYTE PTR ds:[ebx]
  4190b2:	out    0xb9,al
  4190b4:	add    bl,BYTE PTR [ebx]
  4190b6:	cmc    
  4190b7:	cmp    BYTE PTR [esi+0x3af6ccb8],0xe
  4190be:	clc    
  4190bf:	mov    BYTE PTR [edi+ecx*8],bh
  4190c2:	jne    0x41908e
  4190c4:	push   ss
  4190c5:	pop    ds
  4190c6:	mov    esi,0xecff935
  4190cb:	fs je  0x41905e
  4190ce:	jae    0x41914f
  4190d0:	push   edx
  4190d1:	lock mov ch,0x70
  4190d4:	or     eax,0x11c2d408
  4190d9:	loope  0x41913c
  4190db:	push   esp
  4190dc:	out    dx,eax
  4190dd:	aam    0xf0
  4190df:	inc    edx
  4190e0:	pop    esp
  4190e1:	push   0x3e9dd0a2
  4190e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190e7:	pop    esi
  4190e8:	dec    esp
  4190e9:	push   0x9463a489
  4190ee:	cs jecxz 0x4190d9
  4190f1:	enter  0xb87c,0xd4
  4190f5:	loope  0x41907f
  4190f7:	(bad)  
  4190f8:	sbb    eax,DWORD PTR [ecx+0x21]
  4190fb:	call   0x95dc7ed8
  419100:	retf   
  419101:	mov    esp,0x8f1b7a49
  419106:	jp     0x419098
  419108:	scas   al,BYTE PTR es:[edi]
  419109:	data16 stc 
  41910b:	mov    al,BYTE PTR [esp+edi*1-0x34b49ef6]
  419112:	int3   
  419113:	xor    BYTE PTR [edi],cl
  419115:	call   0x3433:0xfb5a2e36
  41911c:	mov    dl,0xca
  41911e:	push   esi
  41911f:	in     al,0x2a
  419121:	and    edx,DWORD PTR [edx-0x6c]
  419124:	pop    esi
  419125:	ss mov edx,0x5603cd69
  41912b:	sub    edx,eax
  41912d:	push   esi
  41912e:	scas   eax,DWORD PTR es:[edi]
  41912f:	(bad)  
  419130:	jns    0x419189
  419132:	(bad)  
  419133:	dec    esp
  419134:	jecxz  0x41910b
  419136:	mov    edx,0x48b00bc6
  41913b:	cld    
  41913c:	lods   al,BYTE PTR ds:[esi]
  41913d:	das    
  41913e:	dec    edx
  41913f:	fadd   QWORD PTR [esi-0x2d]
  419142:	or     BYTE PTR [ebx+0x3fec6183],ah
  419148:	adc    eax,0xc18b0df2
  41914d:	test   eax,0xba76013e
  419152:	fdiv   QWORD PTR [edx-0x66]
  419155:	test   BYTE PTR [ebx],cl
  419157:	addr16 jb 0x419177
  41915a:	sub    al,0x89
  41915c:	shl    BYTE PTR [esi+esi*2+0x3d30fc94],1
  419163:	loope  0x419191
  419165:	dec    ebp
  419166:	in     eax,0x5a
  419168:	mov    ch,0x56
  41916a:	inc    ebx
  41916b:	mov    ecx,0x423facb6
  419170:	jmp    DWORD PTR [ebp-0x67dd0628]
  419176:	and    DWORD PTR [ecx+0x52],0xd59f89b8
  41917d:	add    esp,ebp
  41917f:	and    esp,DWORD PTR [ebp-0x41]
  419182:	dec    esp
  419183:	sub    DWORD PTR [edi+0x3d],ebx
  419186:	dec    ebx
  419187:	cs push edi
  419189:	and    esp,ecx
  41918b:	push   cs
  41918c:	dec    edx
  41918d:	gs pop ss
  41918f:	fwait
  419190:	dec    ecx
  419191:	rol    bh,1
  419193:	mov    edx,0x8895c24e
  419198:	not    BYTE PTR [ebx-0x40ba620b]
  41919e:	xor    al,0x14
  4191a0:	add    al,0xdd
  4191a2:	inc    DWORD PTR [ecx+0x466537bd]
  4191a8:	or     al,0x55
  4191aa:	and    al,0x3
  4191ac:	pop    edx
  4191ad:	lods   al,BYTE PTR ds:[esi]
  4191ae:	ret    
  4191af:	scas   al,BYTE PTR es:[edi]
  4191b0:	pop    ebx
  4191b1:	sti    
  4191b2:	xor    BYTE PTR [eax],cl
  4191b4:	xchg   edi,eax
  4191b5:	or     al,0x31
  4191b7:	xor    al,0xf7
  4191b9:	aam    0x55
  4191bb:	dec    edi
  4191bc:	pop    ss
  4191bd:	push   eax
  4191be:	and    esi,DWORD PTR [ebx+0x34f080c9]
  4191c4:	iret   
  4191c5:	pop    ebp
  4191c6:	push   0xa96f37d
  4191cb:	mov    ebp,0x3254b03e
  4191d0:	das    
  4191d1:	xchg   ebp,eax
  4191d2:	pop    edx
  4191d3:	push   esi
  4191d4:	ja     0x419249
  4191d6:	sbb    BYTE PTR [ebx],ah
  4191d8:	les    edx,FWORD PTR [ecx]
  4191da:	jbe    0x419175
  4191dc:	ficomp DWORD PTR ds:0xdd201687
  4191e2:	mov    dl,0x7b
  4191e4:	ins    DWORD PTR es:[edi],dx
  4191e5:	arpl   di,bx
  4191e7:	leave  
  4191e8:	fsubr  DWORD PTR [esi]
  4191ea:	fld    QWORD PTR [edi+0x6a54393c]
  4191f0:	sbb    BYTE PTR [edx],ah
  4191f2:	xchg   BYTE PTR [edi+ecx*4],ah
  4191f5:	es jmp 0x419250
  4191f8:	push   esp
  4191f9:	cmp    edx,DWORD PTR [esi+0x2d]
  4191fc:	dec    ebx
  4191fd:	add    al,0xf9
  4191ff:	jge    0x41921d
  419201:	and    bh,BYTE PTR [edi+0xbaf8a85]
  419207:	dec    edi
  419208:	cmp    al,0xf2
  41920a:	js     0x419204
  41920c:	sbb    BYTE PTR [edi+0x1519e8e5],0xa2
  419213:	out    dx,eax
  419214:	imul   esp,DWORD PTR [eax],0xffffffd4
  419217:	enter  0x8de1,0x50
  41921b:	and    ecx,edi
  41921d:	sbb    ah,BYTE PTR [ebx+0xdd5a9bd]
  419223:	shr    BYTE PTR [edi+0x49],0x74
  419227:	push   ebx
  419228:	int3   
  419229:	sub    al,BYTE PTR [ecx+edi*1-0x5]
  41922d:	pop    ebp
  41922e:	fistp  WORD PTR [edi]
  419230:	mov    DWORD PTR [edi-0x135897e3],edx
  419236:	fs push ds
  419238:	test   al,al
  41923a:	mov    ah,bh
  41923c:	sti    
  41923d:	jp     0x4191ed
  41923f:	in     eax,dx
  419240:	dec    BYTE PTR [edi]
  419242:	push   eax
  419243:	ss inc esi
  419245:	stos   DWORD PTR es:[edi],eax
  419246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419247:	dec    ecx
  419248:	xchg   edx,ebp
  41924a:	mov    BYTE PTR [eax],dl
  41924c:	ds cmp al,0x10
  41924f:	mov    WORD PTR [esi-0x19],ss
  419252:	jl     0x419235
  419254:	lds    ecx,FWORD PTR [esi]
  419256:	bound  edi,QWORD PTR [esp+ebx*8-0x47e08d63]
  41925d:	call   0xac2b:0xabf30257
  419264:	mov    bh,0xa
  419266:	sub    al,0xf7
  419268:	push   0xc33acb0c
  41926d:	call   0xb879f2fd
  419272:	jl     0x41922d
  419274:	fldcw  WORD PTR [ecx-0x15ba1a95]
  41927a:	adc    ebp,ebx
  41927c:	ins    BYTE PTR es:[edi],dx
  41927d:	xlat   BYTE PTR ds:[ebx]
  41927e:	lahf   
  41927f:	push   0x21f78b55
  419284:	push   ecx
  419285:	int3   
  419286:	mov    ch,0x2
  419288:	jno    0x4192b5
  41928a:	push   ecx
  41928b:	andnps xmm2,XMMWORD PTR [eax-0x12767237]
  419292:	retf   
  419293:	pop    ds
  419294:	fmul   DWORD PTR fs:[ebx+esi*1]
  419298:	push   ecx
  419299:	push   ebp
  41929a:	es cli 
  41929c:	popf   
  41929d:	mov    eax,ds:0x5f5f1487
  4192a2:	out    dx,al
  4192a3:	push   ebp
  4192a4:	rol    eax,cl
  4192a6:	and    esp,DWORD PTR [edi]
  4192a8:	sbb    bh,dh
  4192aa:	ins    DWORD PTR es:[edi],dx
  4192ab:	mov    eax,0xceb16c78
  4192b0:	xchg   edi,eax
  4192b1:	xor    eax,0x7f59bc24
  4192b6:	adc    DWORD PTR [ebp-0x734d0aab],ecx
  4192bc:	rcr    DWORD PTR [ecx-0x3f412c30],0xef
  4192c3:	bound  ebx,QWORD PTR [eax+0x5]
  4192c6:	cld    
  4192c7:	dec    ecx
  4192c8:	ror    ch,0x0
  4192cb:	cli    
  4192cc:	fwait
  4192cd:	or     BYTE PTR [eax],0x82
  4192d0:	inc    edx
  4192d1:	push   ecx
  4192d2:	retf   
  4192d3:	jns    0x4192c8
  4192d5:	(bad)  es:[edi-0x59e746b8]
  4192dc:	ror    ebp,cl
  4192de:	(bad)  
  4192e0:	outs   dx,DWORD PTR ds:[esi]
  4192e1:	pop    esp
  4192e2:	push   ecx
  4192e3:	dec    edx
  4192e4:	xchg   esi,eax
  4192e5:	(bad)  
  4192e6:	adc    al,dh
  4192e8:	xchg   edi,eax
  4192e9:	add    ch,BYTE PTR [esi-0x6d]
  4192ec:	adc    edx,eax
  4192ee:	rcr    ch,1
  4192f0:	mov    dl,BYTE PTR [ebx+0xc40da63]
  4192f6:	pop    esi
  4192f7:	sbb    eax,0x58506841
  4192fc:	mov    bl,BYTE PTR [edx]
  4192fe:	fwait
  4192ff:	scas   eax,DWORD PTR es:[edi]
  419300:	daa    
  419301:	outs   dx,DWORD PTR ds:[esi]
  419302:	iret   
  419303:	jne    0x4192c5
  419305:	outs   dx,DWORD PTR ds:[esi]
  419306:	rcl    DWORD PTR [eax-0x3d606d6a],cl
  41930c:	fyl2xp1 
  41930e:	sbb    al,BYTE PTR [eax+0x12]
  419311:	arpl   WORD PTR [ebx],bp
  419313:	enter  0x6706,0xed
  419317:	loope  0x41933c
  419319:	mov    ebx,0x455076df
  41931e:	sbb    BYTE PTR [ebp+0x16],ah
  419321:	fmulp  st(3),st
  419323:	jb     0x4192a7
  419325:	in     al,0x34
  419327:	hlt    
  419328:	mov    al,ds:0x6a3c9798
  41932d:	mov    ch,0xdd
  41932f:	jl     0x4192ee
  419331:	dec    ebp
  419332:	(bad)
  419336:	ins    BYTE PTR es:[edi],dx
  419337:	jns    0x4192b9
  419339:	das    
  41933a:	lock cmp DWORD PTR [ebx+0x6636f73d],esi
  419341:	call   0x13b5f96c
  419346:	pop    eax
  419347:	push   esp
  419348:	inc    eax
  419349:	outs   dx,BYTE PTR ds:[esi]
  41934a:	ins    BYTE PTR es:[edi],dx
  41934b:	sub    eax,0x1a6e5a69
  419350:	aam    0x43
  419352:	jmp    0xb0bf:0xaae687e4
  419359:	adc    al,0xaa
  41935b:	and    BYTE PTR [ecx],bh
  41935d:	int3   
  41935e:	xlat   BYTE PTR ds:[ebx]
  41935f:	mov    esi,es
  419361:	pop    es
  419362:	dec    edi
  419363:	jle    0x4192e8
  419365:	xor    esi,DWORD PTR [edx-0x69c7fbd2]
  41936b:	popf   
  41936c:	(bad)  
  41936d:	(bad)  
  41936e:	stos   DWORD PTR es:[edi],eax
  41936f:	xchg   esi,eax
  419370:	aas    
  419371:	popa   
  419372:	jns    0x419375
  419374:	sti    
  419375:	and    ah,BYTE PTR [ebx]
  419377:	jbe    0x4193e4
  419379:	pop    edx
  41937a:	and    bh,BYTE PTR [esi-0x7f0ffdb4]
  419380:	adc    ch,BYTE PTR [ebx]
  419382:	xchg   ebp,eax
  419383:	sbb    BYTE PTR [eax+0x36523932],ch
  419389:	push   cs
  41938a:	rol    BYTE PTR [esi-0x5860016b],0xc6
  419391:	jne    0x419399
  419393:	popf   
  419394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419395:	ja     0x419330
  419397:	cmp    edx,DWORD PTR [esi-0x25]
  41939a:	jbe    0x4193d6
  41939c:	dec    edx
  41939d:	jns    0x41939d
  41939f:	mov    bh,0xff
  4193a1:	add    BYTE PTR [ebp+0x7f],ch
  4193a4:	xchg   ebp,eax
  4193a5:	xor    bh,BYTE PTR [edi]
  4193a7:	dec    ecx
  4193a8:	xor    eax,0x3f6d772c
  4193ad:	jmp    0x58b7:0x7836c5e4
  4193b4:	xchg   edi,eax
  4193b5:	popa   
  4193b6:	clc    
  4193b7:	in     al,dx
  4193b8:	pop    edx
  4193b9:	std    
  4193ba:	add    eax,DWORD PTR [edx+0x3d]
  4193bd:	retf   0xa152
  4193c0:	ins    BYTE PTR es:[edi],dx
  4193c1:	sti    
  4193c2:	cmp    BYTE PTR [ecx+0x6b],0x4e
  4193c6:	mov    eax,ds:0x1193be97
  4193cb:	aam    0xfe
  4193cd:	loope  0x4193c8
  4193cf:	or     ebp,ebx
  4193d1:	jo     0x41944b
  4193d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193d4:	jecxz  0x4193c3
  4193d6:	push   ebx
  4193d7:	mov    al,0xd3
  4193d9:	and    al,0xa7
  4193db:	jg     0x4193c0
  4193dd:	add    al,0x44
  4193df:	loop   0x419377
  4193e1:	lds    edx,FWORD PTR [ebx-0x4b]
  4193e4:	dec    DWORD PTR [edx-0xb4fe423]
  4193ea:	sbb    ebx,DWORD PTR [esp+ebp*8-0x226bb446]
  4193f1:	pushf  
  4193f2:	dec    edi
  4193f3:	jmp    DWORD PTR [eax+0x3d]
  4193f6:	mov    esi,ss
  4193f8:	push   ds
  4193f9:	sub    edx,0x878cf881
  4193ff:	fadd   QWORD PTR ds:0xa876a3b4
  419405:	scas   al,BYTE PTR es:[edi]
  419406:	arpl   WORD PTR [ecx-0x37],ax
  419409:	add    DWORD PTR [edx+0x4da13ace],0xb5424275
  419413:	mov    ebx,0x4c897ed4
  419418:	dec    edi
  419419:	and    bl,0x62
  41941c:	shl    bh,cl
  41941e:	add    eax,0x677e1437
  419423:	and    al,0xc3
  419425:	pmuludq mm5,QWORD PTR [edi-0x5c]
  419429:	cld    
  41942a:	dec    esp
  41942b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41942c:	sub    al,0x89
  41942e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41942f:	cmp    eax,0x490f0187
  419434:	fs stc 
  419436:	jp     0x4193be
  419438:	daa    
  419439:	retf   0x9b1c
  41943c:	add    DWORD PTR [esi-0x5beceab9],edi
  419442:	mov    ah,0x6a
  419444:	sbb    ebp,ebp
  419446:	mov    esi,0xcb2283ac
  41944b:	push   es
  41944c:	mov    eax,ds:0xff08193a
  419451:	inc    esi
  419452:	sbb    ebx,edx
  419454:	dec    ebp
  419455:	cmp    eax,0xf4203c15
  41945a:	adc    eax,0xbee9cddb
  41945f:	sub    eax,0xf6117178
  419464:	cmp    dl,BYTE PTR [eax-0x15]
  419467:	out    0x55,al
  419469:	sbb    al,0x1a
  41946b:	mov    al,ds:0xa61f6a81
  419470:	sub    cl,BYTE PTR [ebp+0x262d852e]
  419476:	xchg   edx,eax
  419477:	pop    eax
  419478:	dec    ebp
  419479:	cwde   
  41947a:	call   0xf1cc:0xdbaa9b00
  419481:	lea    edi,[edx]
  419483:	jns    0x419424
  419485:	push   ecx
  419486:	shl    BYTE PTR [eax],1
  419488:	add    eax,0x48c55cfd
  41948d:	sub    al,0x79
  41948f:	push   0x34
  419491:	outs   dx,BYTE PTR ds:[esi]
  419492:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419493:	adc    BYTE PTR [edi+0x4f54c683],0xdf
  41949a:	inc    edx
  41949b:	aas    
  41949c:	rcr    DWORD PTR [edx+eax*2-0x6b],1
  4194a0:	jnp    0x419426
  4194a2:	jecxz  0x419431
  4194a4:	repnz fsubp st(3),st
  4194a7:	imul   esp,DWORD PTR [ecx-0x5d65c7da],0x56
  4194ae:	ja     0x4194d3
  4194b0:	cli    
  4194b1:	xor    ebx,DWORD PTR [edi-0x5c759630]
  4194b7:	pop    edi
  4194b8:	test   DWORD PTR ds:0x670e41c2,esp
  4194be:	pop    edx
  4194bf:	call   0xc9274c28
  4194c4:	imul   esp,DWORD PTR [edi-0xf],0x1
  4194c8:	fnstcw WORD PTR [eax]
  4194ca:	nop
  4194cb:	fld    TBYTE PTR [esi+0x2c525967]
  4194d1:	xlat   BYTE PTR ds:[ebx]
  4194d2:	mov    ebp,0x27a73d90
  4194d7:	pop    edi
  4194d8:	xor    bh,BYTE PTR [eax+0x62cfa339]
  4194de:	les    ebp,FWORD PTR [eax+0x6f94f480]
  4194e4:	out    dx,al
  4194e5:	test   eax,0x752d0a7b
  4194eb:	lea    ebx,[ebx]
  4194ed:	sar    ebx,cl
  4194ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194f0:	repz xchg esi,eax
  4194f2:	popf   
  4194f3:	repz shl cl,1
  4194f6:	lahf   
  4194f7:	or     BYTE PTR [edi-0x7a],ah
  4194fa:	mov    edx,0x17ef472e
  4194ff:	and    bh,BYTE PTR [esi]
  419501:	adc    BYTE PTR [edx-0xb],0x14
  419505:	mov    eax,0xb3ed159b
  41950a:	add    ah,BYTE PTR [ebp+0x14187e37]
  419510:	cmp    eax,0xafd59ab
  419515:	sbb    DWORD PTR [esi],ebx
  419517:	and    bh,bh
  419519:	cmp    eax,0xfc6f25d9
  41951e:	ss pop esi
  419520:	fs in  al,0x18
  419523:	lock push 0xbddaa149
  419529:	xchg   ebp,ebp
  41952b:	daa    
  41952c:	leave  
  41952d:	(bad)  
  41952e:	mov    ah,0x85
  419530:	test   al,0xdf
  419532:	and    edx,ecx
  419534:	xchg   ebx,eax
  419535:	ret    0xe290
  419538:	dec    ebp
  419539:	jl     0x41951e
  41953b:	mov    edi,0xdb004d14
  419540:	int    0x56
  419542:	xor    edi,DWORD PTR [ebx+0x4e]
  419545:	aas    
  419546:	push   0xa6084af5
  41954b:	pop    ebx
  41954c:	inc    ebp
  41954d:	add    ah,ah
  41954f:	push   ebp
  419550:	out    dx,eax
  419551:	test   eax,0xd16333e8
  419556:	clc    
  419557:	adc    BYTE PTR [esi-0x5fb9e5fd],dl
  41955d:	popa   
  41955e:	dec    esi
  41955f:	rcl    BYTE PTR [eax-0xe],1
  419562:	inc    eax
  419563:	jns    0x419562
  419565:	mov    dh,0x73
  419567:	push   cs
  419568:	mov    ebx,0x2cbf4b8f
  41956d:	gs int3 
  41956f:	imul   ebp,DWORD PTR [edx],0xf69badf3
  419575:	jp     0x41952c
  419577:	popf   
  419578:	mov    ds:0x3fdf30ab,eax
  41957d:	rcr    BYTE PTR [esi+0x46ffc7a3],1
  419583:	jp     0x41953b
  419585:	jbe    0x4195b4
  419587:	dec    ecx
  419588:	and    ch,BYTE PTR [esi]
  41958a:	push   edx
  41958b:	mov    dh,0xa2
  41958d:	adc    DWORD PTR [ecx+0x9],ecx
  419590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419591:	xor    ecx,DWORD PTR [edi+eax*8+0x861ef22]
  419598:	fsub   DWORD PTR [eax-0x5eeeb444]
  41959e:	xchg   DWORD PTR [ecx],edi
  4195a0:	jg     0x41960f
  4195a2:	fwait
  4195a3:	in     al,0xe2
  4195a5:	ficom  DWORD PTR [ebx+0x2a]
  4195a8:	outs   dx,BYTE PTR ds:[esi]
  4195a9:	and    al,0x96
  4195ab:	cwde   
  4195ac:	mov    es,WORD PTR [esp+edx*2+0x145f14f4]
  4195b3:	aam    0x58
  4195b5:	fisttp DWORD PTR [edi]
  4195b7:	mov    esp,0xef18aefa
  4195bc:	gs pop edi
  4195be:	shl    esp,cl
  4195c0:	aam    0x5a
  4195c2:	ins    DWORD PTR es:[edi],dx
  4195c3:	sbb    dh,dl
  4195c5:	stos   BYTE PTR es:[edi],al
  4195c6:	and    ecx,DWORD PTR [edx]
  4195c8:	jge    0x4195db
  4195ca:	scas   al,BYTE PTR es:[edi]
  4195cb:	push   edi
  4195cc:	stc    
  4195cd:	mov    al,0xa7
  4195cf:	outs   dx,BYTE PTR ds:[esi]
  4195d0:	and    eax,0x8de5deec
  4195d5:	out    dx,al
  4195d6:	mov    edi,0x6b7e5e71
  4195db:	push   0x4
  4195dd:	popf   
  4195de:	cmp    edi,DWORD PTR [esi-0x2c]
  4195e1:	jne    0x419662
  4195e3:	int    0xf
  4195e5:	leave  
  4195e6:	jne    0x419642
  4195e8:	nop
  4195e9:	sub    bl,0xca
  4195ec:	jae    0x419597
  4195ee:	mov    ecx,0xaae60a2d
  4195f3:	push   ebp
  4195f4:	pop    ebp
  4195f5:	iret   
  4195f6:	jbe    0x419625
  4195f8:	enter  0xd007,0x73
  4195fc:	dec    ecx
  4195fd:	(bad)  
  4195fe:	bound  edx,QWORD PTR [ebx+edx*1]
  419601:	rcl    BYTE PTR [esi+0x32c97163],cl
  419607:	xchg   esp,eax
  419608:	sbb    dl,dl
  41960a:	dec    edi
  41960b:	js     0x4195fa
  41960d:	stos   DWORD PTR es:[edi],eax
  41960e:	and    al,0x94
  419610:	xor    BYTE PTR [edx+0x55],bl
  419613:	xor    bl,BYTE PTR [esi]
  419615:	pop    ecx
  419616:	pop    ebp
  419617:	loop   0x41967d
  419619:	icebp  
  41961a:	outs   dx,DWORD PTR ds:[esi]
  41961b:	cmp    DWORD PTR [ebx],0x6f9a9cd5
  419621:	and    BYTE PTR [edi-0x45123533],0xe9
  419628:	xchg   esp,eax
  419629:	icebp  
  41962a:	jp     0x4195de
  41962c:	and    BYTE PTR [edx],al
  41962e:	mov    cl,BYTE PTR [ecx+0x33f262fe]
  419634:	jl     0x4196a8
  419636:	cdq    
  419637:	mov    bl,0x2a
  419639:	retf   
  41963a:	mov    ch,0xba
  41963c:	fmul   QWORD PTR [ebp+ebx*8-0x47b46977]
  419643:	xor    BYTE PTR [edi+0x40],ch
  419646:	push   cs
  419647:	js     0x41969b
  419649:	add    DWORD PTR [ebx-0x5e],esi
  41964c:	mov    esi,DWORD PTR [eax]
  41964e:	(bad)  
  41964f:	fistp  DWORD PTR [ebx]
  419651:	lods   eax,DWORD PTR ds:[esi]
  419652:	fstp   DWORD PTR [ebx+ebp*1-0xf]
  419656:	cmp    bh,dl
  419658:	sbb    bh,ah
  41965a:	dec    ebx
  41965b:	cmp    al,0x5d
  41965d:	(bad)  
  41965e:	pop    ebx
  41965f:	and    esp,ebp
  419661:	inc    ecx
  419662:	imul   edx,DWORD PTR [ecx+0x7dafa313],0x20
  419669:	pop    esi
  41966a:	push   esp
  41966b:	inc    ecx
  41966c:	mov    al,bh
  41966e:	xchg   BYTE PTR [edi],ch
  419670:	repnz pop edx
  419672:	(bad)  
  419673:	mov    gs,WORD PTR [ebx-0x1e]
  419676:	(bad)  
  419677:	fisttp DWORD PTR [ecx+edx*2-0x4cbf4980]
  41967e:	cwde   
  41967f:	sub    eax,0x990788cc
  419684:	pop    ss
  419685:	(bad)  
  419686:	jmp    0x14d2:0xaf1d7913
  41968d:	pop    ecx
  41968e:	add    cl,ah
  419690:	lahf   
  419691:	in     eax,dx
  419692:	jae    0x419705
  419694:	in     eax,dx
  419695:	mov    ds:0x4505093c,al
  41969a:	dec    esi
  41969b:	jnp    0x4196b6
  41969d:	xchg   DWORD PTR [ebx],ebp
  41969f:	xor    al,0x95
  4196a1:	sbb    edx,DWORD PTR [edx]
  4196a3:	add    esp,DWORD PTR [ecx+0x41]
  4196a6:	iret   
  4196a7:	add    DWORD PTR [eax-0x69686477],0x58228264
  4196b1:	inc    ebx
  4196b2:	dec    ecx
  4196b3:	xchg   esi,ecx
  4196b5:	bnd jle 0x419711
  4196b8:	ret    0xe01e
  4196bb:	adc    DWORD PTR [edi+0x6b630f40],esi
  4196c1:	out    dx,eax
  4196c2:	in     eax,0xfa
  4196c4:	retf   0x9140
  4196c7:	lahf   
  4196c8:	mov    ah,0x53
  4196ca:	inc    esp
  4196cb:	fisubr DWORD PTR [ebx]
  4196cd:	outs   dx,BYTE PTR ds:[esi]
  4196ce:	jb     0x419660
  4196d0:	imul   edi,ecx,0x19
  4196d3:	nop
  4196d4:	inc    BYTE PTR [ecx]
  4196d6:	in     al,0xf8
  4196d8:	inc    edi
  4196d9:	push   0x16f8c89e
  4196de:	(bad)  [ecx]
  4196e0:	ret    0x595d
  4196e3:	js     0x4196d7
  4196e5:	(bad)  
  4196e7:	mov    esi,0xd71358e8
  4196ec:	jecxz  0x419685
  4196ee:	ror    DWORD PTR [ebp+0x5e20bf3d],1
  4196f4:	(bad)  [edi-0x23]
  4196f7:	mov    eax,0x92aa1702
  4196fc:	dec    ebx
  4196fd:	jl     0x419703
  4196ff:	inc    edx
  419700:	leave  
  419701:	mov    eax,ds:0xe626a3e4
  419706:	jecxz  0x419730
  419708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419709:	in     eax,0x5f
  41970b:	xchg   BYTE PTR [ebx+0x12343730],bh
  419711:	dec    edx
  419712:	mov    bl,0xca
  419714:	and    bl,BYTE PTR [edi+eax*1]
  419717:	inc    eax
  419718:	sbb    DWORD PTR [edx-0x343ea0f8],edx
  41971e:	jae    0x419797
  419720:	jb     0x41975c
  419722:	mov    ah,0x77
  419724:	cmp    BYTE PTR [ebx+eiz*2-0x377d9987],dl
  41972b:	mov    bl,0x52
  41972d:	mov    ecx,0x81989a28
  419732:	push   ebp
  419733:	mov    dh,BYTE PTR [ebp-0x200eacc3]
  419739:	cwde   
  41973a:	rcl    BYTE PTR [esi-0x165637fe],1
  419740:	cmc    
  419741:	cmc    
  419742:	sub    al,0xd3
  419744:	xchg   esi,eax
  419745:	popf   
  419746:	and    bh,BYTE PTR [ecx+0x45]
  419749:	xor    al,0x86
  41974b:	call   0xdbef:0xf8542da8
  419752:	sbb    DWORD PTR [ecx+ebx*1+0x4c],ebp
  419756:	add    ebp,edx
  419758:	not    esi
  41975a:	hlt    
  41975b:	ja     0x41977c
  41975d:	fcom   DWORD PTR [edx+ebx*4]
  419760:	cmp    BYTE PTR [edx+ebp*8+0x1f],dh
  419764:	mov    al,0xf9
  419766:	loope  0x419784
  419768:	adc    eax,0xead90869
  41976d:	adc    bh,BYTE PTR [ecx]
  41976f:	xor    edi,DWORD PTR [ebx+0x4a8fd2dd]
  419775:	push   ds
  419776:	or     al,0xbf
  419778:	sar    DWORD PTR [ecx],0xad
  41977b:	or     edx,DWORD PTR [edx+0x28c01b45]
  419781:	aaa    
  419782:	sbb    al,0x30
  419784:	cmc    
  419785:	xchg   edi,eax
  419786:	add    BYTE PTR [edx],0xad
  419789:	in     eax,dx
  41978a:	mov    esp,0x25c9d43c
  41978f:	sbb    al,0xfc
  419791:	xor    dl,ah
  419793:	cs ins DWORD PTR es:[edi],dx
  419795:	sbb    BYTE PTR [eax],dl
  419797:	pushf  
  419798:	in     al,0x0
  41979a:	scas   eax,DWORD PTR es:[edi]
  41979b:	dec    DWORD PTR [ecx-0x2c]
  41979e:	adc    eax,0xb55e8942
  4197a3:	dec    eax
  4197a4:	popa   
  4197a5:	mov    ebp,0x7a483cb4
  4197aa:	inc    edi
  4197ab:	adc    al,0xd0
  4197ad:	jle    0x41982c
  4197af:	mov    cl,0x1b
  4197b1:	jg     0x4197a5
  4197b3:	mov    WORD PTR [ecx-0x12bbd546],gs
  4197b9:	je     0x419811
  4197bb:	retf   0xd885
  4197be:	pop    edx
  4197bf:	addr16 inc ebx
  4197c1:	push   edi
  4197c2:	jne    0x41982c
  4197c4:	fnsave [esi]
  4197c6:	inc    ebp
  4197c7:	addr16 add esi,esp
  4197ca:	or     dh,BYTE PTR [ebx-0x2d]
  4197cd:	pop    ecx
  4197ce:	add    al,0xce
  4197d0:	rol    DWORD PTR [edi+0x1a267a3f],0xa2
  4197d7:	sbb    BYTE PTR [ecx-0x4cdcc0c],0x5d
  4197de:	jnp    0x419781
  4197e0:	mov    ds:0xb864c934,eax
  4197e5:	and    DWORD PTR [ecx],ebx
  4197e7:	sub    eax,0x5d5c3bc7
  4197ec:	and    al,0x1d
  4197ee:	pop    edi
  4197ef:	add    DWORD PTR [ecx+0x10],0xa99a7b4d
  4197f6:	add    cl,BYTE PTR [edx*1+0x7ae4d95c]
  4197fd:	mov    bl,0xa2
  4197ff:	xlat   BYTE PTR ds:[ebx]
  419800:	add    ebp,DWORD PTR [ebx]
  419802:	dec    edx
  419803:	clc    
  419804:	mov    esp,0x68f88a5
  419809:	push   ss
  41980a:	or     ebx,DWORD PTR [edi+0x6f]
  41980d:	jecxz  0x419869
  41980f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419810:	or     DWORD PTR [esi-0x15],esi
  419813:	or     edi,DWORD PTR [ecx-0x75b919a7]
  419819:	(bad)  
  41981a:	jmp    0x419837
  41981c:	sahf   
  41981d:	bound  esp,QWORD PTR [edi-0x31]
  419820:	cmp    BYTE PTR [esp+ecx*1+0x195a67ae],0x1
  419828:	cs out 0x27,al
  41982b:	lods   al,BYTE PTR ds:[esi]
  41982c:	ret    0x3899
  41982f:	jecxz  0x4197ca
  419831:	mov    eax,ds:0x107de346
  419836:	jb     0x419857
  419838:	aas    
  419839:	mov    al,0x88
  41983b:	test   DWORD PTR [edi-0x3cf31454],edi
  419841:	into   
  419842:	imul   edx,edx,0xffffffd3
  419845:	xlat   BYTE PTR ds:[ebx]
  419846:	in     al,dx
  419847:	cmp    BYTE PTR [esi],dh
  419849:	fdivr  st(7),st
  41984b:	cmp    al,0xb7
  41984d:	fs int 0x6
  419850:	js     0x4198ce
  419852:	loopne 0x4198c7
  419854:	add    DWORD PTR [esp+ecx*2],eax
  419857:	lods   al,BYTE PTR ds:[esi]
  419858:	fdivr  DWORD PTR [ecx+0x327130ad]
  41985e:	addr16 jns 0x4198dd
  419861:	int    0xf5
  419863:	or     cl,BYTE PTR [edx]
  419865:	add    al,0x2c
  419867:	sbb    DWORD PTR [ebp-0x41a4f580],esi
  41986d:	pop    esp
  41986e:	call   DWORD PTR [ecx+edx*8-0x7062cfdd]
  419875:	iret   
  419876:	jg     0x41980f
  419878:	mov    DWORD PTR [ebp+0x4214aa29],ecx
  41987e:	mov    dh,0xd6
  419880:	rcl    bl,0xe0
  419883:	sbb    esi,DWORD PTR [ecx-0x3f967eee]
  419889:	outs   dx,BYTE PTR ds:[esi]
  41988a:	out    dx,al
  41988b:	cmp    DWORD PTR ds:0xb8e6acb8,eax
  419891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419892:	jecxz  0x4198c8
  419894:	out    0x28,al
  419896:	pop    ds
  419897:	mov    edx,0x8fad514a
  41989c:	pop    edi
  41989d:	in     eax,dx
  41989e:	outs   dx,BYTE PTR ds:[esi]
  41989f:	mov    bl,0x4
  4198a1:	scas   eax,DWORD PTR es:[edi]
  4198a2:	cmp    eax,0x3146e15a
  4198a7:	lock popf 
  4198a9:	add    edi,edx
  4198ab:	cmc    
  4198ac:	iret   
  4198ad:	add    esi,DWORD PTR [eax]
  4198af:	xor    DWORD PTR [edx+0x30],esi
  4198b2:	call   FWORD PTR [edx+ebx*4+0x5f1f6ab2]
  4198b9:	xchg   esi,eax
  4198ba:	mov    esp,0x6fbd8c3a
  4198bf:	fmul   DWORD PTR [eax]
  4198c1:	xor    eax,edi
  4198c3:	add    BYTE PTR [esi],dl
  4198c5:	push   es
  4198c6:	shl    BYTE PTR [ebp-0xb],cl
  4198c9:	mov    eax,0xc9f782b6
  4198ce:	das    
  4198cf:	jg     0x419874
  4198d1:	cmp    BYTE PTR [ebp-0x2ab34f71],bh
  4198d7:	outs   dx,DWORD PTR ds:[esi]
  4198d8:	ror    BYTE PTR ds:0x3c49e9f8,0x75
  4198df:	mov    edi,0x1b8bf864
  4198e4:	sub    al,0xe3
  4198e6:	loope  0x419947
  4198e8:	pop    edi
  4198e9:	leave  
  4198ea:	inc    eax
  4198eb:	jp     0x4198d7
  4198ed:	xor    al,0x1f
  4198ef:	sbb    ecx,esi
  4198f1:	mov    ebx,0x9b32bdc6
  4198f6:	retf   0x18fc
  4198f9:	jnp    0x4198d1
  4198fb:	out    dx,al
  4198fc:	lds    ebp,FWORD PTR [eax+0x3991b2ef]
  419902:	ins    BYTE PTR es:[edi],dx
  419903:	es in  al,0xc5
  419906:	loop   0x4198d5
  419908:	dec    ebp
  419909:	daa    
  41990a:	jl     0x419939
  41990c:	or     al,0x84
  41990e:	add    eax,0xfbbb3742
  419913:	adc    ebx,ebx
  419915:	adc    edi,DWORD PTR [edx+0x7d]
  419918:	stos   BYTE PTR es:[edi],al
  419919:	sahf   
  41991a:	mov    DWORD PTR [ebx+eiz*1-0x59ca4397],0xaa8b7bb8
  419925:	fld    DWORD PTR [ebx+0x43]
  419928:	xchg   edx,eax
  419929:	cmp    eax,0xc697fd82
  41992e:	adc    BYTE PTR [esi+0x655922e2],ch
  419934:	mov    WORD PTR [eax+0x7afd0ad],gs
  41993a:	leave  
  41993b:	add    eax,ecx
  41993d:	stos   DWORD PTR es:[edi],eax
  41993e:	sbb    bh,BYTE PTR [eax-0x7010cf7c]
  419944:	stc    
  419945:	inc    ecx
  419946:	mov    cl,0x50
  419948:	ja     0x419950
  41994a:	push   edx
  41994b:	inc    eax
  41994c:	stc    
  41994d:	cmp    ebp,DWORD PTR [eax]
  41994f:	sbb    ah,BYTE PTR [ebx+0x28cef9b]
  419955:	xchg   BYTE PTR [esp+edi*8-0x3d75bd52],ah
  41995c:	mov    eax,ds:0xd4491847
  419961:	cs xor al,0xe7
  419964:	outs   dx,DWORD PTR ds:[esi]
  419965:	sub    BYTE PTR [esi-0x1259f38a],bl
  41996b:	add    BYTE PTR [edi],0x46
  41996e:	dec    esp
  41996f:	sbb    al,0xca
  419971:	pop    es
  419972:	das    
  419973:	xlat   BYTE PTR ds:[ebx]
  419974:	ret    
  419975:	hlt    
  419976:	jbe    0x41996c
  419978:	rol    DWORD PTR [eax+0x4],0x83
  41997c:	stos   BYTE PTR es:[edi],al
  41997d:	aas    
  41997e:	mov    es,WORD PTR [edi+edi*8]
  419981:	jmp    DWORD PTR [ebx+edx*8]
  419984:	leave  
  419985:	mov    cl,ah
  419987:	in     al,dx
  419988:	shr    WORD PTR [ecx],0xa6
  41998c:	lds    ecx,FWORD PTR [edi-0x30980f7c]
  419992:	mov    dl,0xc6
  419994:	imul   BYTE PTR [edi+0x7843cfd8]
  41999a:	pushf  
  41999b:	pop    edi
  41999c:	dec    ebx
  41999d:	in     eax,dx
  41999e:	les    ebx,FWORD PTR [esi]
  4199a0:	jbe    0x419953
  4199a2:	pop    ecx
  4199a3:	inc    ecx
  4199a4:	xor    eax,0x56b92623
  4199aa:	jae    0x4199f4
  4199ac:	and    dl,bh
  4199ae:	std    
  4199af:	push   ss
  4199b0:	pop    ds
  4199b1:	jno    0x419a10
  4199b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199b4:	cdq    
  4199b5:	test   BYTE PTR [ecx],bl
  4199b7:	mov    ebx,0x2e2c7df5
  4199bc:	retf   0xe4ae
  4199bf:	or     al,0x50
  4199c1:	aam    0x2b
  4199c3:	dec    esi
  4199c4:	mov    cl,0xab
  4199c6:	cdq    
  4199c7:	dec    esp
  4199c8:	sar    ah,0x22
  4199cb:	ins    DWORD PTR es:[edi],dx
  4199cc:	(bad)  
  4199cd:	or     ch,BYTE PTR [ebx+esi*4+0x4f]
  4199d1:	jge    0x419995
  4199d3:	xlat   BYTE PTR ds:[ebx]
  4199d4:	jo     0x41999b
  4199d6:	rcl    DWORD PTR [ebp-0x10],0xf4
  4199da:	cld    
  4199db:	mov    WORD PTR [edi],es
  4199dd:	popa   
  4199de:	int3   
  4199df:	(bad)  
  4199e0:	sub    eax,0x4aad5c12
  4199e5:	push   0x2e
  4199e7:	cwde   
  4199e8:	loope  0x4199fc
  4199ea:	sub    BYTE PTR [ebx+edi*1+0x1326f4be],ch
  4199f1:	js     0x4199f5
  4199f3:	jl     0x419a1b
  4199f5:	fdivr  QWORD PTR [edx-0x1a]
  4199f8:	setbe  BYTE PTR [eax-0x23]
  4199fc:	loopne 0x419a22
  4199fe:	pushf  
  4199ff:	pop    esp
  419a00:	sbb    ah,BYTE PTR [ecx+ebp*4-0x7e4014c0]
  419a07:	dec    ebp
  419a08:	clc    
  419a09:	in     al,dx
  419a0a:	cmc    
  419a0b:	add    eax,0x87cedc4e
  419a10:	lahf   
  419a11:	ins    BYTE PTR es:[edi],dx
  419a12:	dec    edx
  419a13:	rol    DWORD PTR [esi+0x14],cl
  419a16:	jb     0x419a23
  419a18:	leave  
  419a19:	pop    ecx
  419a1a:	and    eax,0x755b7d7d
  419a1f:	and    esp,eax
  419a21:	mov    DWORD PTR [esi],0xa8710c02
  419a27:	fistp  DWORD PTR [esi]
  419a29:	popf   
  419a2a:	push   ecx
  419a2b:	inc    esp
  419a2c:	mov    esp,0x23ff29ea
  419a31:	adc    BYTE PTR [edx],0x8a
  419a34:	aas    
  419a35:	or     ch,cl
  419a37:	xchg   edi,eax
  419a38:	jno    0x419a76
  419a3a:	addr16 inc edi
  419a3c:	fnstcw WORD PTR [ebx-0x7503bc62]
  419a42:	daa    
  419a43:	fiadd  DWORD PTR [esi]
  419a45:	mov    ah,0x33
  419a47:	or     DWORD PTR [eax+0x1f8d90da],eax
  419a4d:	xor    dh,BYTE PTR [edi]
  419a4f:	cmp    esp,DWORD PTR [eax-0x75]
  419a52:	cmc    
  419a53:	call   0xd683:0xb404973c
  419a5a:	ja     0x419a81
  419a5c:	adc    al,0x2a
  419a5e:	jle    0x419a21
  419a60:	pop    es
  419a61:	outs   dx,DWORD PTR ds:[esi]
  419a62:	nop
  419a63:	lods   eax,DWORD PTR ds:[esi]
  419a64:	cmp    bl,BYTE PTR [eax+0x1f52b9da]
  419a6a:	nop
  419a6b:	pop    esp
  419a6c:	or     eax,0xf08f094b
  419a71:	push   cs
  419a72:	push   edi
  419a73:	into   
  419a74:	push   cs
  419a75:	xchg   ecx,eax
  419a76:	push   esi
  419a77:	sahf   
  419a78:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  419a7a:	arpl   WORD PTR [ebp-0x62f71e8e],dx
  419a80:	imul   eax,DWORD PTR [ebp+0x3c],0xfd189eda
  419a87:	ficom  DWORD PTR [ebp-0x6]
  419a8a:	aad    0xa0
  419a8c:	or     edx,DWORD PTR [eax-0x52a645c1]
  419a92:	(bad)  
  419a93:	div    BYTE PTR [esi]
  419a95:	scas   al,BYTE PTR es:[edi]
  419a96:	mov    bl,0xa8
  419a98:	cdq    
  419a99:	xor    al,0x72
  419a9b:	mov    bh,0x85
  419a9d:	sar    DWORD PTR [esi+0xc],cl
  419aa0:	ror    ch,1
  419aa2:	fild   QWORD PTR [edx+0x74]
  419aa5:	add    DWORD PTR ds:0x59f08fba,0x5f
  419aac:	push   esi
  419aad:	fwait
  419aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419aaf:	ret    
  419ab0:	pop    edx
  419ab1:	push   es
  419ab2:	(bad)  
  419ab4:	push   esi
  419ab5:	sub    bh,BYTE PTR [esi]
  419ab7:	in     al,0x20
  419ab9:	out    0x9a,al
  419abb:	div    DWORD PTR [eax+0x2b]
  419abe:	pusha  
  419abf:	stos   DWORD PTR es:[edi],eax
  419ac0:	push   ebp
  419ac1:	shr    eax,1
  419ac3:	stos   BYTE PTR es:[edi],al
  419ac4:	adc    ecx,0xffffffaa
  419ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ac8:	imul   BYTE PTR [ebx-0x40a0e83f]
  419ace:	add    edx,DWORD PTR [ebp*4-0x5ca2d764]
  419ad5:	loope  0x419aab
  419ad7:	pusha  
  419ad8:	arpl   WORD PTR [esi],bx
  419ada:	stos   BYTE PTR es:[edi],al
  419adb:	sub    DWORD PTR [esp+esi*4],edx
  419ade:	or     al,BYTE PTR [ecx-0x73513e3f]
  419ae4:	sahf   
  419ae5:	and    ecx,esi
  419ae7:	or     DWORD PTR [ebx-0x15],ebp
  419aea:	scas   al,BYTE PTR es:[edi]
  419aeb:	xchg   edx,eax
  419aec:	push   eax
  419aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419aee:	es push eax
  419af1:	idiv   BYTE PTR [edi]
  419af3:	leave  
  419af4:	jecxz  0x419b54
  419af6:	and    esi,DWORD PTR [ebx+0x5c]
  419af9:	cmp    BYTE PTR [edi-0x6],ah
  419afc:	dec    eax
  419afd:	fsub   DWORD PTR [ecx]
  419aff:	and    bh,BYTE PTR [edx]
  419b01:	mov    bl,0xd
  419b03:	bound  esi,QWORD PTR [ecx]
  419b05:	(bad)  
  419b06:	jmp    0x54c4b23e
  419b0b:	push   0xd5c5bccb
  419b10:	mov    ecx,0xb0416148
  419b15:	mov    ebp,0x84b2a6c1
  419b1a:	stos   DWORD PTR es:[edi],eax
  419b1b:	xchg   ebx,eax
  419b1c:	jmp    0x1195f597
  419b21:	out    dx,eax
  419b22:	(bad)  
  419b25:	int    0x8f
  419b27:	pusha  
  419b28:	jge    0x419abb
  419b2a:	and    eax,0x3baae83c
  419b2f:	(bad)  
  419b30:	mov    bl,0xa6
  419b32:	cwde   
  419b33:	mov    dl,0xaa
  419b35:	push   0x4e
  419b37:	dec    esi
  419b38:	imul   esi,DWORD PTR [ebp+0x5592476],0xffffff90
  419b3f:	push   ebp
  419b40:	or     al,0xd0
  419b42:	xchg   ecx,eax
  419b43:	adc    ebx,esi
  419b45:	mov    ecx,0xb9d1de38
  419b4a:	fs pop esi
  419b4c:	test   BYTE PTR [esi+ebp*8+0x5e],cl
  419b50:	adc    eax,0xdde07d42
  419b55:	fs call 0x29a3:0x949d91cb
  419b5d:	sahf   
  419b5e:	aad    0xcc
  419b60:	mov    esp,0x95726210
  419b65:	es inc ecx
  419b67:	xchg   esi,eax
  419b68:	inc    ebp
  419b69:	outs   dx,BYTE PTR ds:[esi]
  419b6a:	push   ss
  419b6b:	sub    ebp,edx
  419b6d:	sbb    edx,edx
  419b6f:	xor    edi,edx
  419b71:	cmc    
  419b72:	int3   
  419b73:	dec    ecx
  419b74:	xchg   edx,eax
  419b75:	pop    edx
  419b76:	or     al,0xb1
  419b78:	shl    BYTE PTR [ebx+0x25],0xbb
  419b7c:	ins    BYTE PTR es:[edi],dx
  419b7d:	and    DWORD PTR [ebp-0x7855106d],edx
  419b83:	xchg   esp,eax
  419b84:	sbb    al,0x95
  419b86:	pop    ss
  419b87:	jp     0x419b51
  419b89:	push   0xe02ed8e1
  419b8e:	pop    edi
  419b8f:	cmp    DWORD PTR [edx+esi*8],esi
  419b92:	arpl   WORD PTR [edx],bp
  419b94:	lods   al,BYTE PTR ds:[esi]
  419b95:	outs   dx,DWORD PTR ds:[esi]
  419b96:	add    ah,BYTE PTR [ecx]
  419b98:	adc    BYTE PTR [esi-0x45],0x8c
  419b9c:	stos   DWORD PTR es:[edi],eax
  419b9d:	retf   
  419b9e:	and    dh,bh
  419ba0:	pop    ecx
  419ba1:	push   edx
  419ba2:	mov    dl,BYTE PTR [edi]
  419ba4:	jns    0x419b63
  419ba6:	daa    
  419ba7:	test   ebp,ebp
  419ba9:	leave  
  419baa:	sbb    ecx,DWORD PTR [ecx+0x58aad3f3]
  419bb0:	sbb    DWORD PTR [esi-0x69],ebx
  419bb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bb4:	push   esi
  419bb5:	and    DWORD PTR [edi-0x5],eax
  419bb8:	mul    esi
  419bba:	outs   dx,BYTE PTR ds:[esi]
  419bbb:	mov    edx,0x8cfe7fb8
  419bc0:	rol    DWORD PTR [esi+0x59],0x5b
  419bc4:	loope  0x419b9f
  419bc6:	fcomp  DWORD PTR [ebx+0xe24df3b]
  419bcc:	push   eax
  419bcd:	stos   BYTE PTR es:[edi],al
  419bce:	xchg   esi,eax
  419bcf:	add    BYTE PTR [ebp+0x11],dh
  419bd2:	or     al,BYTE PTR ds:0x49dd0934
  419bd8:	sub    DWORD PTR [esi-0x60],eax
  419bdb:	clc    
  419bdc:	jbe    0x419b6e
  419bde:	in     al,dx
  419bdf:	ficom  WORD PTR [edx-0x7c309509]
  419be5:	fdivp  st(3),st
  419be7:	jmp    0x48b2:0xaf23f559
  419bee:	sbb    eax,0xf5f1af6b
  419bf3:	arpl   sp,bx
  419bf5:	out    0xfd,al
  419bf7:	push   esp
  419bf8:	aad    0xfb
  419bfa:	jge    0x419be5
  419bfc:	jmp    0xbe7f:0x1b33cffa
  419c03:	lea    esp,[edi-0x77]
  419c06:	test   al,0x49
  419c08:	sub    al,0xb0
  419c0a:	out    dx,al
  419c0b:	stos   DWORD PTR es:[edi],eax
  419c0c:	mov    dh,0x5f
  419c0e:	mov    esi,0x260dac2a
  419c13:	das    
  419c14:	mov    edx,DWORD PTR [esi]
  419c16:	adc    BYTE PTR [ebx],ah
  419c18:	mov    WORD PTR [ebp-0x38a84831],?
  419c1e:	ss jne 0x419c50
  419c21:	inc    edx
  419c22:	repz bound esp,QWORD PTR [ebp+0x14]
  419c26:	fldcw  WORD PTR [edx]
  419c28:	call   0x60abacde
  419c2d:	dec    esi
  419c2e:	leave  
  419c2f:	push   0xc9f42c0d
  419c34:	and    edi,DWORD PTR [eax+edx*4+0x66]
  419c38:	fstp   QWORD PTR [edi-0x58]
  419c3b:	add    ebx,DWORD PTR [esi-0x7f858bd2]
  419c41:	push   edi
  419c42:	rol    BYTE PTR [edi],1
  419c44:	popf   
  419c45:	or     ah,0x2f
  419c48:	fwait
  419c49:	jp     0x419be8
  419c4b:	test   eax,0x6e707eea
  419c50:	lea    esi,[eax]
  419c52:	outs   dx,DWORD PTR ds:[esi]
  419c53:	loopne 0x419cb8
  419c55:	mov    esp,0x562cc5f7
  419c5a:	adc    BYTE PTR [edx],ah
  419c5c:	int3   
  419c5d:	in     eax,0x94
  419c5f:	fst    DWORD PTR [ebp+ecx*2+0x58]
  419c63:	pop    edi
  419c64:	pop    ebp
  419c65:	sbb    al,0x23
  419c67:	scas   al,BYTE PTR es:[edi]
  419c68:	push   edi
  419c69:	mov    es,edi
  419c6b:	inc    edi
  419c6c:	(bad)
  419c70:	sub    eax,0x1bbc95f9
  419c75:	mov    ebp,0x9edef007
  419c7a:	dec    edx
  419c7b:	sbb    eax,0x7bbda25a
  419c80:	inc    ebx
  419c81:	jb     0x419c1e
  419c83:	jae    0x419cd7
  419c85:	test   al,0x6e
  419c87:	imul   ebx,ebp,0xffffffff
  419c8a:	(bad)  
  419c8b:	adc    DWORD PTR [edx+ebp*4],edx
  419c8e:	xchg   edx,eax
  419c8f:	jo     0x419cce
  419c91:	cmc    
  419c92:	cmp    ecx,DWORD PTR ds:0x4c6758ae
  419c98:	je     0x419c3c
  419c9a:	imul   ebx,ebx,0x2c
  419c9d:	scas   al,BYTE PTR es:[edi]
  419c9e:	ror    DWORD PTR [eax-0x78f3b732],0x61
  419ca5:	mul    dl
  419ca7:	stc    
  419ca8:	mov    ebx,0x3c6823fc
  419cad:	cmp    BYTE PTR [ebx+0x51fd2bc6],0xbc
  419cb4:	jmp    0x419c50
  419cb6:	gs sbb edx,ebx
  419cb9:	adc    ebx,edi
  419cbb:	cwde   
  419cbc:	cmp    esi,DWORD PTR [eax+0x317e0c41]
  419cc2:	cmp    DWORD PTR [ecx-0x6],0xffffffdd
  419cc6:	pop    ebx
  419cc7:	clc    
  419cc8:	xor    ah,BYTE PTR [esi+ecx*1+0x7850bff2]
  419ccf:	dec    ebp
  419cd0:	or     eax,0x943f1681
  419cd5:	(bad)  
  419cd6:	push   edx
  419cd7:	cmp    bl,BYTE PTR [edx+edx*1+0x3e]
  419cdb:	mov    esp,0x51b2bc58
  419ce0:	iret   
  419ce1:	mov    edi,0xaa3568eb
  419ce6:	std    
  419ce7:	pop    DWORD PTR [ebp-0x3a]
  419cea:	mov    dl,0x9b
  419cec:	out    dx,eax
  419ced:	lahf   
  419cee:	out    0xa2,eax
  419cf0:	inc    ebx
  419cf1:	iret   
  419cf2:	and    bl,BYTE PTR [ebp+0x4cbc269]
  419cf8:	(bad)  
  419cf9:	retf   0xb10c
  419cfc:	push   ecx
  419cfd:	cs pusha 
  419cff:	mov    dl,0xaf
  419d01:	shl    DWORD PTR [esi-0x3a9e6128],1
  419d07:	push   ebp
  419d08:	in     eax,dx
  419d09:	mov    ecx,0xe6730667
  419d0e:	adc    al,0xb4
  419d10:	imul   esi,DWORD PTR ds:0xa2c57b86,0xb0f8e738
  419d1a:	ja     0x419d78
  419d1c:	(bad)  
  419d1d:	and    al,0x3
  419d1f:	hlt    
  419d20:	into   
  419d21:	les    esi,FWORD PTR [edx-0x4]
  419d24:	pop    esp
  419d25:	test   BYTE PTR [edx],cl
  419d27:	mov    al,ds:0x7bdf36ee
  419d2c:	mov    esp,0xfb6ca38d
  419d31:	push   esp
  419d32:	inc    edi
  419d33:	dec    ecx
  419d34:	add    eax,0xb3e4bf62
  419d39:	ret    
  419d3a:	lods   eax,DWORD PTR ds:[esi]
  419d3b:	adc    DWORD PTR [ebx-0x215a8fd4],ecx
  419d41:	clc    
  419d42:	lahf   
  419d43:	test   al,dl
  419d45:	pop    es
  419d46:	xchg   esp,eax
  419d47:	or     eax,0x56059429
  419d4c:	retf   0xc43
  419d4f:	dec    eax
  419d50:	and    DWORD PTR [ebx+0x25],eax
  419d53:	test   edx,ebx
  419d55:	xor    al,0x6f
  419d57:	jmp    0x4514:0x105d3f3d
  419d5e:	out    dx,al
  419d5f:	inc    edx
  419d60:	(bad)  
  419d61:	cli    
  419d62:	mov    bl,0xe3
  419d64:	inc    ecx
  419d65:	inc    esi
  419d66:	cmp    eax,0x1af59866
  419d6b:	jp     0x419d6d
  419d6d:	mov    al,0x9d
  419d6f:	add    ah,BYTE PTR [ebp-0x7e]
  419d72:	jo     0x419d67
  419d74:	mov    bl,0x81
  419d76:	adc    BYTE PTR [edx],dl
  419d78:	dec    ecx
  419d79:	retf   
  419d7a:	test   al,0xa4
  419d7c:	inc    edx
  419d7d:	cmp    DWORD PTR [edx],eax
  419d7f:	sbb    dh,BYTE PTR [esi+0x57]
  419d82:	test   DWORD PTR [edi],ebx
  419d84:	jno    0x419d1c
  419d86:	jb     0x419dbe
  419d88:	ret    0x5167
  419d8b:	xchg   ebp,eax
  419d8c:	mov    bl,0x38
  419d8e:	push   0xffffffe0
  419d90:	xchg   dl,dl
  419d92:	dec    ebp
  419d93:	sub    esp,ecx
  419d95:	sub    al,0x8
  419d97:	dec    esp
  419d98:	mov    dh,BYTE PTR ss:[edi+0x42]
  419d9c:	pop    dx
  419d9e:	mov    ecx,0x235d5d0b
  419da3:	add    eax,0x73ee6803
  419da8:	jg     0x419dcb
  419daa:	fwait
  419dab:	xor    DWORD PTR [ebx],ebx
  419dad:	dec    edx
  419dae:	sub    al,0x83
  419db0:	add    eax,ebp
  419db2:	(bad)  
  419db4:	adc    eax,0xc87f6aaa
  419db9:	mov    ebp,0x210eb4f6
  419dbe:	les    esi,FWORD PTR [ebp-0x7b99aee6]
  419dc4:	mov    edx,0xadfd0bea
  419dc9:	adc    al,ah
  419dcb:	aas    
  419dcc:	xchg   edi,eax
  419dcd:	mov    esi,0xca0e7a12
  419dd2:	test   BYTE PTR [eax],ah
  419dd4:	enter  0x665a,0x6e
  419dd8:	imul   ebp,esi,0xebaaeee5
  419dde:	rcl    bh,cl
  419de0:	stc    
  419de1:	pop    edx
  419de2:	ror    bl,1
  419de4:	push   esp
  419de5:	mov    DWORD PTR ss:[esp+ebp*8-0x6d9644a0],ebx
  419ded:	out    0xc2,al
  419def:	push   edx
  419df0:	dec    esi
  419df1:	int3   
  419df2:	pop    es
  419df3:	shr    DWORD PTR [edi+0x50],0x4e
  419df7:	mov    ds:0xfd1390b7,al
  419dfc:	gs in  al,0x2c
  419dff:	pushf  
  419e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e01:	stc    
  419e02:	add    al,0x81
  419e04:	cmc    
  419e05:	es and dl,dl
  419e08:	sbb    edi,ebx
  419e0a:	gs jp  0x419e29
  419e0d:	loop   0x419df1
  419e0f:	(bad)  
  419e10:	loopne 0x419da3
  419e12:	popf   
  419e13:	or     edx,DWORD PTR [ebp-0x29]
  419e16:	inc    edi
  419e17:	loope  0x419e88
  419e19:	jmp    0x68074f7e
  419e1e:	sub    BYTE PTR [ebp+ecx*2-0x7c],dl
  419e22:	(bad)  
  419e23:	jmp    0x419e65
  419e25:	imul   ebp,DWORD PTR [eax+ebp*1],0x990a5179
  419e2c:	stos   WORD PTR es:[edi],ax
  419e2e:	pop    eax
  419e2f:	outs   dx,BYTE PTR ds:[esi]
  419e30:	scas   al,BYTE PTR es:[edi]
  419e31:	or     eax,esi
  419e33:	out    dx,al
  419e34:	(bad)  
  419e35:	mov    edi,0xc5d2aa24
  419e3a:	jle    0x419e7f
  419e3c:	pop    eax
  419e3d:	mul    bh
  419e3f:	(bad)  
  419e40:	push   edx
  419e41:	popa   
  419e42:	xor    eax,0x49fd4bf7
  419e47:	pop    esp
  419e48:	ret    
  419e49:	jne    0x419e71
  419e4b:	call   0xe9c2:0x87dcbd1
  419e52:	rcr    DWORD PTR ds:0x7d7c898,1
  419e58:	add    bh,al
  419e5a:	int3   
  419e5b:	sub    al,0xa0
  419e5d:	(bad)  
  419e5f:	push   esp
  419e60:	nop
  419e61:	inc    edx
  419e62:	minps  xmm7,XMMWORD PTR [edx+edi*2+0x16a17550]
  419e6a:	xchg   esp,eax
  419e6b:	lock inc ebp
  419e6d:	cmp    esi,ebp
  419e6f:	pop    es
  419e70:	inc    edx
  419e71:	jg     0x419e31
  419e73:	jb     0x419e9a
  419e75:	push   ss
  419e76:	in     al,dx
  419e77:	jnp    0x419e77
  419e79:	lods   al,BYTE PTR ds:[esi]
  419e7a:	and    DWORD PTR [esi-0x1e],0xf72c03cc
  419e81:	adc    DWORD PTR [esi+0x57],0x78
  419e85:	ret    0xb5db
  419e88:	push   eax
  419e89:	lock inc eax
  419e8b:	cmp    esp,DWORD PTR [ecx]
  419e8d:	push   0xffffff97
  419e8f:	mov    BYTE PTR [edi+edx*4+0x1ea8ab86],cl
  419e96:	push   cs
  419e97:	mov    dl,BYTE PTR [ebx+0x780e8b21]
  419e9d:	sub    ch,BYTE PTR [ebp-0x414be732]
  419ea3:	jmp    0x37ac:0x8477a8a9
  419eaa:	loop   0x419f00
  419eac:	leave  
  419ead:	arpl   WORD PTR [ecx],cx
  419eaf:	inc    ebx
  419eb0:	dec    ecx
  419eb1:	xchg   cl,dl
  419eb3:	dec    ebx
  419eb4:	lods   eax,DWORD PTR ds:[esi]
  419eb5:	and    esp,DWORD PTR [esi-0x6e]
  419eb8:	jnp    0x419e84
  419eba:	cmp    BYTE PTR [eax],ch
  419ebc:	loope  0x419e5f
  419ebe:	test   eax,0x14981d8
  419ec3:	arpl   WORD PTR [ecx+0x7],di
  419ec6:	retf   0x44a1
  419ec9:	mov    esi,0xa65c6078
  419ece:	retf   
  419ecf:	ret    0x7ba8
  419ed2:	int    0xac
  419ed4:	call   0xba9d:0xe20ddc44
  419edb:	mov    eax,0xf1dbf76
  419ee0:	jge    0x419ea4
  419ee2:	push   ds
  419ee3:	jbe    0x419e8e
  419ee5:	or     dl,bl
  419ee7:	cld    
  419ee8:	es xchg esi,eax
  419eea:	dec    ecx
  419eeb:	mov    ebp,0xc9ae6947
  419ef0:	inc    ebp
  419ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ef2:	cdq    
  419ef3:	dec    edi
  419ef4:	cwde   
  419ef5:	xor    esp,ecx
  419ef7:	xor    BYTE PTR [edx],cl
  419ef9:	loop   0x419f1b
  419efb:	cmp    eax,0xa1d960fb
  419f00:	icebp  
  419f01:	sti    
  419f02:	mov    ecx,0xc1dd4acf
  419f07:	xor    edx,DWORD PTR [eax+0x73c04bb1]
  419f0d:	push   ebp
  419f0e:	jns    0x419eb6
  419f10:	data16 or dl,BYTE PTR [ecx+0x7a]
  419f14:	pop    esi
  419f15:	lds    edx,FWORD PTR [edx]
  419f17:	cs clc 
  419f19:	cli    
  419f1a:	push   0xffffff8b
  419f1c:	pop    ss
  419f1d:	lahf   
  419f1e:	jae    0x419ed3
  419f20:	fmul   QWORD PTR [ebx]
  419f22:	add    dl,BYTE PTR [ebp-0x5d398679]
  419f28:	pop    ebx
  419f29:	mov    esi,0xe9b3a848
  419f2e:	mov    al,0xe7
  419f30:	jb     0x419f81
  419f32:	cli    
  419f33:	leave  
  419f34:	sbb    ecx,esp
  419f36:	test   DWORD PTR es:[ebx-0x45f8ffe1],0xbef569f9
  419f41:	push   es
  419f42:	or     DWORD PTR [edx-0x5176c584],ebp
  419f48:	xchg   ebp,esi
  419f4a:	sbb    bl,al
  419f4c:	push   0xffffffb3
  419f4e:	lods   eax,DWORD PTR ds:[esi]
  419f4f:	mov    ebx,DWORD PTR [edx+eax*2-0x5a]
  419f53:	inc    ebp
  419f54:	in     al,0xd7
  419f56:	sub    cl,bl
  419f58:	dec    ebx
  419f59:	push   ebx
  419f5a:	mov    BYTE PTR [ebp+0x49],dl
  419f5d:	inc    edx
  419f5e:	sub    ah,BYTE PTR [ecx]
  419f60:	jae    0x419ef2
  419f62:	jle    0x419f06
  419f64:	fs mov ah,0xbc
  419f67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f68:	push   ebx
  419f69:	fldcw  WORD PTR ds:0xb64976c0
  419f6f:	inc    ecx
  419f70:	pop    ebp
  419f71:	nop
  419f72:	call   0x1c42c75
  419f77:	ins    BYTE PTR es:[edi],dx
  419f78:	dec    ecx
  419f79:	or     BYTE PTR [ebx+0x2c],dh
  419f7c:	xchg   al,dh
  419f7e:	sbb    ch,BYTE PTR [edx-0x14]
  419f81:	repnz add eax,0x187b3e55
  419f87:	mov    eax,0xf45465c1
  419f8c:	pop    es
  419f8d:	retf   0x5c2b
  419f90:	jl     0x419f67
  419f92:	and    BYTE PTR [eax-0xe],ch
  419f95:	in     eax,0xfd
  419f97:	xchg   ebx,eax
  419f98:	call   0x95835fe9
  419f9d:	push   edx
  419f9e:	test   DWORD PTR [ecx+0x47],ebp
  419fa1:	xchg   edx,eax
  419fa2:	mov    ch,0xfa
  419fa4:	jp     0x419f2a
  419fa6:	pop    edi
  419fa7:	cmc    
  419fa8:	inc    eax
  419fa9:	bound  eax,QWORD PTR [esi-0x6c]
  419fac:	in     eax,0xde
  419fae:	fdivrp st(7),st
  419fb0:	retf   
  419fb1:	pop    edx
  419fb2:	xchg   ebx,eax
  419fb3:	test   DWORD PTR [ebp-0x30d1a4ee],ebx
  419fb9:	aaa    
  419fba:	sub    esi,esi
  419fbc:	imul   ebp,ecx,0x465300a6
  419fc2:	test   eax,0xbcca98dc
  419fc7:	je     0x41a034
  419fc9:	mul    BYTE PTR [ebp-0x12]
  419fcc:	fbstp  TBYTE PTR [ebx]
  419fce:	mov    ebp,0x74414879
  419fd3:	adc    bl,dl
  419fd5:	jb     0x419fea
  419fd7:	add    DWORD PTR [edx+0x13],0xffffff93
  419fdb:	outs   dx,BYTE PTR ds:[esi]
  419fdc:	rcr    DWORD PTR [esi+0x24b2e6d6],cl
  419fe2:	inc    ebp
  419fe3:	pop    ss
  419fe4:	pop    ss
  419fe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fe6:	push   0x46e25b96
  419feb:	stc    
  419fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fed:	int3   
  419fee:	xchg   esp,eax
  419fef:	mov    bh,0xbf
  419ff1:	iret   
  419ff2:	sbb    DWORD PTR [ecx+0x2c],ecx
  419ff5:	test   BYTE PTR [edi-0x2a6009e1],bl
  419ffb:	lea    ebx,[edi+eax*8-0x601c2f0c]
  41a002:	in     al,dx
  41a003:	xor    BYTE PTR [edx],ch
  41a005:	jnp    0x41a03c
  41a007:	dec    eax
  41a008:	inc    esi
  41a009:	push   ebx
  41a00a:	ja     0x41a045
  41a00c:	pop    ecx
  41a00d:	inc    edi
  41a00e:	pop    edi
  41a00f:	stos   DWORD PTR es:[edi],eax
  41a010:	test   BYTE PTR [eax],ah
  41a012:	stc    
  41a013:	xor    BYTE PTR [edx+eax*2-0xc0ee9e4],bh
  41a01a:	jle    0x419fe6
  41a01c:	mov    edi,0x4ba17bf8
  41a021:	xchg   esp,eax
  41a022:	mov    fs:0xb51a38fe,al
  41a028:	mov    edi,0x339f08e2
  41a02d:	fld    QWORD PTR [esi]
  41a02f:	fdiv   QWORD PTR [esi]
  41a031:	repz neg DWORD PTR [edi]
  41a034:	out    0xd2,eax
  41a036:	push   cs
  41a037:	mov    bh,0xa5
  41a039:	push   0x6982eb98
  41a03e:	call   0x1299bd49
  41a043:	cmp    DWORD PTR [ebp+ebp*8+0x19],edi
  41a047:	xor    al,0xe9
  41a049:	fnstsw WORD PTR [eax]
  41a04b:	jl     0x419fe6
  41a04d:	dec    ebp
  41a04e:	mov    eax,0xeecd4452
  41a053:	idiv   DWORD PTR [edx+0x7]
  41a056:	lods   al,BYTE PTR ds:[esi]
  41a057:	fist   DWORD PTR [edx]
  41a059:	cmp    DWORD PTR [eax+0x784fa273],ebp
  41a05f:	dec    dx
  41a061:	add    cl,ah
  41a063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a064:	out    dx,eax
  41a065:	adc    ch,BYTE PTR [edi]
  41a067:	out    0x9b,eax
  41a069:	or     ch,BYTE PTR ds:[ebp+0x16]
  41a06d:	adc    BYTE PTR [esp+ebp*4],0x8a
  41a071:	out    dx,eax
  41a072:	daa    
  41a073:	pop    eax
  41a074:	xchg   edx,eax
  41a075:	inc    eax
  41a076:	(bad)  
  41a077:	jae    0x41a04a
  41a079:	push   es
  41a07a:	mov    BYTE PTR [edx-0x5b],cl
  41a07d:	call   FWORD PTR [esi-0x531caa3b]
  41a083:	push   cs
  41a084:	inc    edi
  41a085:	pusha  
  41a086:	mov    eax,0xeb669f41
  41a08b:	inc    DWORD PTR [ecx-0xc]
  41a08e:	xchg   edx,eax
  41a08f:	cmc    
  41a090:	xor    edx,edx
  41a092:	lock jne 0x41a060
  41a095:	pop    ebx
  41a096:	pop    edi
  41a097:	push   ss
  41a098:	jae    0x41a0ba
  41a09a:	adc    ah,BYTE PTR [esi]
  41a09c:	fsub   st,st(6)
  41a09e:	add    ch,dh
  41a0a0:	sbb    eax,0x6e1f8c66
  41a0a5:	push   ecx
  41a0a6:	inc    ebp
  41a0a7:	push   ebx
  41a0a8:	jne    0x41a074
  41a0aa:	stos   DWORD PTR es:[edi],eax
  41a0ab:	rcl    DWORD PTR [esi+esi*1+0x69],1
  41a0af:	outs   dx,DWORD PTR ds:[esi]
  41a0b0:	push   ebp
  41a0b1:	add    edi,DWORD PTR [eax-0x57]
  41a0b4:	not    BYTE PTR [edx]
  41a0b6:	or     edx,ecx
  41a0b8:	int3   
  41a0b9:	or     DWORD PTR [esi],ecx
  41a0bb:	popa   
  41a0bc:	mov    bl,BYTE PTR [esi+ecx*8-0x56]
  41a0c0:	lods   al,BYTE PTR ds:[esi]
  41a0c1:	push   ecx
  41a0c2:	xchg   edx,eax
  41a0c3:	fucomi st,st(0)
  41a0c5:	cld    
  41a0c6:	mov    eax,0x338cea13
  41a0cb:	retf   
  41a0cc:	sbb    eax,0xb898fc57
  41a0d1:	pop    ebx
  41a0d2:	(bad)  
  41a0d3:	sub    esp,DWORD PTR [ebx]
  41a0d5:	pusha  
  41a0d6:	inc    ebx
  41a0d7:	xchg   ebp,eax
  41a0d8:	jle    0x41a158
  41a0da:	ss xchg ebp,eax
  41a0dc:	push   esi
  41a0dd:	mov    edi,0x62e5683f
  41a0e2:	in     eax,0x3c
  41a0e4:	retf   
  41a0e5:	add    DWORD PTR [ebp-0x79e110ea],0xd3bce479
  41a0ef:	int    0x10
  41a0f1:	and    ch,BYTE PTR [esi+ebp*2-0x240ffc34]
  41a0f8:	jl     0x41a159
  41a0fa:	xlat   BYTE PTR ds:[ebx]
  41a0fb:	sar    DWORD PTR [ecx+0x4275bd9a],0xd2
  41a102:	xchg   DWORD PTR [eax],ebp
  41a104:	bound  ebp,QWORD PTR [edi]
  41a106:	mov    al,0xf
  41a108:	or     eax,0xabd2a8cf
  41a10d:	mov    dh,0xea
  41a10f:	fidiv  WORD PTR [edx+edi*2+0x5a]
  41a113:	adc    esi,DWORD PTR [ebx]
  41a115:	fnsave [edi]
  41a117:	aaa    
  41a118:	mov    ch,0x17
  41a11a:	hlt    
  41a11b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a11c:	cmp    eax,0x78082374
  41a121:	nop
  41a122:	add    ebx,DWORD PTR [edx-0x5038651d]
  41a128:	mov    WORD PTR [esi-0x43],?
  41a12b:	and    BYTE PTR [esi-0x4aa9273],al
  41a131:	cs push es
  41a133:	lea    ecx,[edi+0x49]
  41a136:	or     dh,BYTE PTR [esi+0x18]
  41a139:	arpl   di,bx
  41a13b:	jp     0x41a19f
  41a13d:	bound  eax,QWORD PTR [eax]
  41a13f:	lahf   
  41a140:	pusha  
  41a141:	jmp    0xf81e:0x130d0057
  41a148:	xchg   ebx,eax
  41a149:	cmp    eax,0x9affcbe9
  41a14e:	mov    ss:0xbcf84cd6,eax
  41a154:	mov    edi,0x57266352
  41a159:	arpl   WORD PTR [ebp-0x55],sp
  41a15c:	imul   ecx,DWORD PTR [edx],0xa474f2ce
  41a162:	sub    al,0x43
  41a164:	mov    ah,0x24
  41a166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a167:	adc    DWORD PTR [edi],esi
  41a169:	sub    eax,0x60fa3b56
  41a16e:	rol    DWORD PTR ss:[ebp+0x69],0x58
  41a173:	lods   eax,DWORD PTR ds:[esi]
  41a174:	test   DWORD PTR [ebx+0x7b],0x23e6e9db
  41a17b:	icebp  
  41a17c:	dec    ecx
  41a17d:	outs   dx,DWORD PTR ds:[esi]
  41a17e:	cmp    eax,DWORD PTR [ebx]
  41a180:	test   eax,0x687290fc
  41a185:	iret   
  41a186:	lods   eax,DWORD PTR ss:[esi]
  41a188:	and    eax,0xfce4df46
  41a18d:	clc    
  41a18e:	icebp  
  41a18f:	xor    BYTE PTR [edi+0x2bd1c303],dh
  41a195:	cmp    al,0xb2
  41a197:	fadd   QWORD PTR cs:[ecx+0x59]
  41a19b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a19c:	mov    edi,0xb04cacaa
  41a1a1:	nop
  41a1a2:	mov    esi,0x3873fce4
  41a1a7:	call   0x2e49cf34
  41a1ac:	mov    dh,0xbc
  41a1ae:	outs   dx,BYTE PTR ds:[esi]
  41a1af:	sub    al,0x7a
  41a1b1:	(bad)  
  41a1b2:	jmp    0x41a229
  41a1b4:	jno    0x41a216
  41a1b6:	aam    0x7c
  41a1b8:	mov    bh,BYTE PTR [edx-0x60]
  41a1bb:	add    BYTE PTR [eax+ebx*8+0x1d],cl
  41a1bf:	popa   
  41a1c0:	or     BYTE PTR [ebx],ah
  41a1c2:	nop
  41a1c3:	cmp    DWORD PTR [eax],0x2daf24bf
  41a1c9:	pushf  
  41a1ca:	inc    esp
  41a1cb:	jmp    0x41a1e6
  41a1cd:	push   eax
  41a1ce:	in     eax,dx
  41a1cf:	sbb    ecx,DWORD PTR [ebx+0x32]
  41a1d2:	out    dx,al
  41a1d3:	pop    esp
  41a1d4:	jle    0x41a1c3
  41a1d6:	(bad)  
  41a1d7:	cmp    eax,DWORD PTR [esi-0x1d]
  41a1da:	adc    ebx,DWORD PTR [edi-0x14]
  41a1dd:	fwait
  41a1de:	and    ah,BYTE PTR [ebx-0x32]
  41a1e1:	outs   dx,BYTE PTR ds:[esi]
  41a1e2:	shr    DWORD PTR [ecx+eiz*1],1
  41a1e5:	xlat   BYTE PTR ds:[ebx]
  41a1e6:	cld    
  41a1e7:	and    ebp,DWORD PTR [ecx]
  41a1e9:	mov    WORD PTR ds:0x4aae0f04,es
  41a1ef:	adc    eax,0xb978b98c
  41a1f4:	outs   dx,BYTE PTR ds:[esi]
  41a1f5:	push   ecx
  41a1f6:	xlat   BYTE PTR ds:[ebx]
  41a1f7:	mov    bl,0x5
  41a1f9:	push   ss
  41a1fa:	sub    esi,esp
  41a1fc:	cdq    
  41a1fd:	(bad)  [ecx-0x2e]
  41a200:	ins    BYTE PTR es:[edi],dx
  41a201:	cli    
  41a202:	in     al,dx
  41a203:	jb     0x41a270
  41a205:	fisub  WORD PTR [edx]
  41a207:	icebp  
  41a208:	jecxz  0x41a289
  41a20a:	fimul  DWORD PTR [ebx-0x38653252]
  41a210:	mov    gs,WORD PTR [eax-0x52]
  41a213:	add    al,0xf8
  41a215:	sar    DWORD PTR [ebp-0x37],1
  41a218:	sub    eax,0x64eac70e
  41a21d:	loopne 0x41a1f6
  41a21f:	cmp    ch,BYTE PTR [eax-0x6bd9d0a8]
  41a225:	add    edi,DWORD PTR [ebp-0x3a]
  41a228:	jo     0x41a1f6
  41a22a:	daa    
  41a22b:	out    dx,eax
  41a22c:	jno    0x41a261
  41a22e:	and    al,0x8f
  41a230:	pop    ebx
  41a231:	add    DWORD PTR [ebp+0x46],ebp
  41a234:	and    al,BYTE PTR [ecx+0x3f]
  41a237:	mov    ds:0x93ccff61,eax
  41a23c:	dec    edx
  41a23d:	sbb    al,0x17
  41a23f:	jns    0x41a268
  41a241:	popa   
  41a242:	add    cl,BYTE PTR [eax]
  41a244:	xchg   DWORD PTR [ebx-0x20],edx
  41a247:	xor    eax,DWORD PTR [ebx+0x35]
  41a24a:	push   edx
  41a24b:	cmp    eax,0x9dbe7f6b
  41a250:	mov    bl,0xbe
  41a252:	(bad)  
  41a253:	in     eax,0xe9
  41a255:	(bad)  
  41a257:	xor    BYTE PTR [ebx-0x66388611],0x8c
  41a25e:	xlat   BYTE PTR ds:[ebx]
  41a25f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a260:	jae    0x41a249
  41a262:	mov    eax,ds:0xed521bac
  41a267:	repnz pop ebp
  41a269:	and    eax,0x15ca3312
  41a26e:	xchg   DWORD PTR [edi-0x5d],esi
  41a271:	pushf  
  41a272:	into   
  41a273:	adc    esi,esp
  41a275:	or     bh,BYTE PTR [ebx]
  41a277:	popa   
  41a278:	jle    0x41a2c0
  41a27a:	lock jb 0x41a284
  41a27d:	cwde   
  41a27e:	std    
  41a27f:	sbb    al,0xfe
  41a281:	push   ebp
  41a282:	lods   eax,DWORD PTR ds:[esi]
  41a283:	sbb    esp,DWORD PTR [ecx+0x63]
  41a286:	xchg   BYTE PTR [ecx-0x55],bh
  41a289:	jo     0x41a23e
  41a28b:	xor    esp,esp
  41a28d:	imul   esp,DWORD PTR [ecx+eax*2-0x7068e466],0x55bf9e64
  41a298:	inc    ebp
  41a299:	call   0x2846:0xa2d328e3
  41a2a0:	jne    0x41a2c0
  41a2a2:	inc    edx
  41a2a3:	rol    ebp,1
  41a2a5:	hlt    
  41a2a6:	jbe    0x41a2f2
  41a2a8:	addr16 enter 0x698f,0x24
  41a2ad:	rcr    dh,cl
  41a2af:	das    
  41a2b0:	push   eax
  41a2b1:	pop    es
  41a2b2:	into   
  41a2b3:	sti    
  41a2b4:	sbb    ecx,DWORD PTR [ecx+esi*4]
  41a2b7:	ds nop
  41a2b9:	pop    ebx
  41a2ba:	das    
  41a2bb:	in     al,0x6c
  41a2bd:	push   esi
  41a2be:	inc    edx
  41a2bf:	push   esi
  41a2c0:	sti    
  41a2c1:	int    0xda
  41a2c3:	or     bl,dh
  41a2c5:	(bad)  
  41a2c6:	sbb    al,0x6f
  41a2c8:	inc    ebx
  41a2c9:	or     edx,DWORD PTR ds:0x22d03094
  41a2cf:	inc    edx
  41a2d0:	cmp    al,0xb4
  41a2d2:	repz dec ebp
  41a2d4:	mov    esp,0x275c62fc
  41a2d9:	ss push 0xe8b1eca2
  41a2df:	fiadd  DWORD PTR [ebx+0x1f]
  41a2e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2e3:	fsubp  st(1),st
  41a2e5:	test   DWORD PTR [ecx+0x62a6e2d8],0x74fadc70
  41a2ef:	pop    edx
  41a2f0:	not    DWORD PTR [eax-0x1267db10]
  41a2f6:	mov    dh,0x49
  41a2f8:	xchg   edi,eax
  41a2f9:	fwait
  41a2fa:	in     eax,dx
  41a2fb:	bound  esp,QWORD PTR [ebx+0x5e]
  41a2fe:	cmp    ecx,DWORD PTR [ebp-0x6b35f583]
  41a304:	in     al,0x99
  41a306:	or     eax,0xeb698fad
  41a30b:	ins    BYTE PTR es:[edi],dx
  41a30c:	jbe    0x41a2d9
  41a30e:	sub    eax,0xa076341f
  41a313:	lods   eax,DWORD PTR ds:[esi]
  41a314:	or     ah,BYTE PTR [edx]
  41a316:	mov    ds,ebx
  41a318:	call   0xcd69d14a
  41a31d:	sbb    esi,ebx
  41a31f:	inc    esp
  41a320:	pop    ds
  41a321:	dec    ebp
  41a322:	stos   BYTE PTR es:[edi],al
  41a323:	xchg   BYTE PTR [ebp+0x54],cl
  41a326:	shl    esp,0x2f
  41a329:	js     0x41a38e
  41a32b:	test   DWORD PTR [ecx],0x6a1d998b
  41a331:	fs dec ecx
  41a333:	sbb    DWORD PTR [edi-0x61],edx
  41a336:	rcr    bh,0x3f
  41a339:	cli    
  41a33a:	mov    ds:0x2d5ee62d,al
  41a33f:	fistp  DWORD PTR [edi+ebx*8-0x443caaf2]
  41a346:	js     0x41a2d5
  41a348:	aas    
  41a349:	lahf   
  41a34a:	das    
  41a34b:	mov    edi,0xaed08c64
  41a350:	into   
  41a351:	retf   
  41a352:	ret    0x8b06
  41a355:	adc    ch,BYTE PTR [edi-0x48]
  41a358:	das    
  41a359:	dec    ecx
  41a35a:	arpl   WORD PTR [esi+0x379cccf0],dx
  41a360:	out    dx,al
  41a361:	leave  
  41a362:	(bad)  
  41a363:	push   cs
  41a364:	xchg   esi,eax
  41a365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a366:	(bad)  
  41a367:	or     esi,esi
  41a369:	cmp    DWORD PTR [ebx],esi
  41a36b:	fwait
  41a36c:	inc    BYTE PTR [esi+0x7a]
  41a36f:	retf   
  41a370:	rcl    eax,0x71
  41a373:	cmp    BYTE PTR [eax+0x5628120a],al
  41a379:	sbb    bh,dl
  41a37b:	adc    DWORD PTR [ebx-0x19303991],esi
  41a381:	mov    eax,ds:0x5d15295
  41a386:	repz out 0x2e,al
  41a389:	ss xchg edx,eax
  41a38b:	fld    TBYTE PTR [esi-0x64]
  41a38e:	pusha  
  41a38f:	mov    dh,0xa6
  41a391:	ins    BYTE PTR es:[edi],dx
  41a392:	ret    0x4e17
  41a395:	sub    DWORD PTR [eax],eax
  41a397:	ret    0xb12a
  41a39a:	pop    esp
  41a39b:	pop    ebp
  41a39c:	ret    0x4156
  41a39f:	cmp    eax,0x1febe7
  41a3a4:	push   DWORD PTR [esi+0xf]
  41a3a7:	jbe    0x41a37e
  41a3a9:	or     edi,ebx
  41a3ab:	inc    esi
  41a3ac:	xor    eax,0xe9cb5334
  41a3b1:	lds    edx,FWORD PTR ds:0x3167146e
  41a3b7:	cmp    DWORD PTR [eax+0x66],esp
  41a3ba:	push   esp
  41a3bb:	addr16 pop ds
  41a3bd:	test   BYTE PTR [eax-0x18d02aaa],0x9a
  41a3c4:	sub    al,0x79
  41a3c6:	xchg   ebx,eax
  41a3c7:	xchg   DWORD PTR [ebx],esp
  41a3c9:	outs   dx,BYTE PTR ds:[esi]
  41a3ca:	xlat   BYTE PTR ds:[ebx]
  41a3cb:	leave  
  41a3cc:	cmp    edi,ecx
  41a3ce:	and    cl,BYTE PTR [ecx-0x1841819f]
  41a3d4:	test   al,0xed
  41a3d6:	fild   DWORD PTR [eax-0x6d57194]
  41a3dc:	test   BYTE PTR [esi-0x3e7a29e],bh
  41a3e2:	and    DWORD PTR [edi-0x5d],ebp
  41a3e5:	sub    al,BYTE PTR [ebx+ebx*2-0x2f3f9403]
  41a3ec:	test   BYTE PTR [ebx+ebp*8-0x7b9259a],0x95
  41a3f4:	pop    ebp
  41a3f5:	pusha  
  41a3f6:	push   edi
  41a3f7:	mov    dl,0x8b
  41a3f9:	xlat   BYTE PTR ds:[ebx]
  41a3fa:	adc    al,0x82
  41a3fc:	mov    ah,0x5
  41a3fe:	mov    DWORD PTR [ecx],eax
  41a400:	call   0x19a0fa9e
  41a405:	add    eax,0x1a53a8b3
  41a40a:	je     0x41a416
  41a40c:	(bad)  
  41a40d:	jge    0x41a3e6
  41a40f:	repz fnstsw WORD PTR [esi-0x5298be6a]
  41a416:	jmp    0x41a3ae
  41a418:	add    eax,0x4b2c5e26
  41a41d:	aam    0x86
  41a41f:	sbb    BYTE PTR [ebx-0xfc1293e],dl
  41a425:	mov    gs,WORD PTR [esi+0xe]
  41a428:	nop
  41a429:	cwde   
  41a42a:	mov    bh,0x2c
  41a42c:	mov    ecx,DWORD PTR [edx-0x52]
  41a42f:	nop
  41a430:	jb     0x41a3e7
  41a432:	mov    cl,0x1f
  41a434:	iret   
  41a435:	call   0x2cf38257
  41a43a:	adc    al,0x1b
  41a43c:	adc    eax,0x34c08517
  41a441:	add    BYTE PTR [ecx],dh
  41a443:	out    0xb7,al
  41a445:	out    0xe7,eax
  41a447:	dec    esp
  41a448:	push   ds
  41a449:	and    DWORD PTR [eax+0x70],edx
  41a44c:	mov    ecx,ebp
  41a44e:	and    BYTE PTR [edi],ah
  41a450:	icebp  
  41a451:	jno    0x41a456
  41a453:	sub    al,0x6e
  41a455:	enter  0x5efd,0xe7
  41a459:	test   al,0xd5
  41a45b:	and    ch,0xb6
  41a45e:	ret    0xcfde
  41a461:	and    eax,0x81c49eca
  41a466:	or     DWORD PTR [eax+ebp*8],ebp
  41a469:	jl     0x41a415
  41a46b:	in     al,dx
  41a46c:	mov    ds:0x2f4f71ed,eax
  41a471:	xchg   edi,eax
  41a472:	push   ds
  41a473:	lock xacquire sub DWORD PTR [eax],0xffffff91
  41a478:	enter  0x6f31,0xc9
  41a47c:	out    dx,eax
  41a47d:	ss mov bh,0xac
  41a480:	rcr    BYTE PTR [edx],1
  41a482:	cmp    eax,0xe78530ed
  41a487:	aad    0x7d
  41a489:	imul   edi,DWORD PTR ds:0x15c6463e,0xffffffd2
  41a490:	jb     0x41a47d
  41a492:	or     al,0xfb
  41a494:	adc    BYTE PTR [edi-0x71],bl
  41a497:	push   edx
  41a498:	cld    
  41a499:	pop    ebx
  41a49a:	ror    bh,cl
  41a49c:	jmp    0x41a470
  41a49e:	lahf   
  41a49f:	cmp    bl,ch
  41a4a1:	mov    eax,ds:0x555cc6f4
  41a4a6:	int    0x64
  41a4a8:	add    bl,BYTE PTR [edi]
  41a4aa:	mov    ah,0x1b
  41a4ac:	xor    ch,BYTE PTR [edi+0xf]
  41a4af:	lods   al,BYTE PTR ds:[esi]
  41a4b0:	add    ebx,DWORD PTR [esi+edx*8]
  41a4b3:	dec    BYTE PTR [esi+0x27]
  41a4b6:	popf   
  41a4b7:	int    0x3c
  41a4b9:	and    eax,DWORD PTR [ebx-0x65]
  41a4bc:	js     0x41a455
  41a4be:	enter  0x3fa5,0x97
  41a4c2:	out    dx,eax
  41a4c3:	jbe    0x41a465
  41a4c5:	lea    ecx,[edi+0x293466dc]
  41a4cb:	mov    edi,0xe17d9287
  41a4d0:	push   ds
  41a4d1:	mov    bl,0xc6
  41a4d3:	cmp    DWORD PTR [eax+0x23038117],edx
  41a4d9:	push   edi
  41a4da:	loope  0x41a54f
  41a4dc:	add    ebx,DWORD PTR [ecx]
  41a4de:	into   
  41a4df:	inc    edi
  41a4e0:	mov    BYTE PTR [edi],ah
  41a4e2:	sbb    DWORD PTR [ebp-0x2b],0x75
  41a4e6:	xlat   BYTE PTR ds:[ebx]
  41a4e7:	fiadd  WORD PTR [edi+esi*2+0x442a5512]
  41a4ee:	dec    esi
  41a4ef:	xchg   BYTE PTR [ecx-0x301cb1eb],ch
  41a4f5:	call   0x3db5e6a0
  41a4fa:	addr16 mov fs:0x5481,eax
  41a4ff:	push   0x87559661
  41a504:	and    al,0xe7
  41a506:	leave  
  41a507:	adc    edi,0xffffff80
  41a50a:	xchg   edx,eax
  41a50b:	inc    ebx
  41a50c:	mov    esi,0xb6db3553
  41a511:	pushf  
  41a512:	cld    
  41a513:	cmp    BYTE PTR ds:0x63083d8f,ch
  41a519:	pop    esi
  41a51a:	lsl    eax,sp
  41a51d:	mov    edi,0x489aa2d9
  41a522:	inc    ecx
  41a523:	sub    esp,esp
  41a525:	(bad)  
  41a526:	into   
  41a527:	(bad)  
  41a528:	mov    dh,0x4e
  41a52a:	add    BYTE PTR [ecx+0x20f62c36],ah
  41a530:	aas    
  41a531:	into   
  41a532:	push   ds
  41a533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a534:	int    0x2c
  41a536:	jmp    0x4619:0xf43e0a65
  41a53d:	add    eax,0xb6c068ee
  41a542:	test   BYTE PTR [ebx],0xa7
  41a545:	int    0xe
  41a547:	push   ecx
  41a548:	sbb    al,0xfa
  41a54a:	(bad)  [eax+0x1fe9721]
  41a550:	sbb    al,0xcb
  41a552:	mov    edi,0x75689d75
  41a557:	(bad)  
  41a558:	mov    eax,ds:0xfde10bdc
  41a55d:	mov    ebp,DWORD PTR [ebx-0x3101d11b]
  41a563:	loopne 0x41a53e
  41a565:	je     0x41a594
  41a567:	test   al,0x81
  41a569:	xor    eax,edx
  41a56b:	test   cl,dl
  41a56d:	imul   edi,esp,0x2941baec
  41a573:	inc    eax
  41a574:	fsubr  QWORD PTR [ebx]
  41a576:	pop    esi
  41a577:	xor    al,0x85
  41a579:	pop    esp
  41a57a:	inc    esi
  41a57b:	add    al,0x91
  41a57d:	pop    edx
  41a57e:	aas    
  41a57f:	jle    0x41a5a0
  41a581:	dec    ebp
  41a582:	rol    BYTE PTR [ebx-0x7d],0x12
  41a586:	pop    ebp
  41a587:	adc    DWORD PTR [edx+0x5e03aa30],edi
  41a58d:	int    0x7b
  41a58f:	test   edx,esp
  41a591:	xchg   edx,eax
  41a592:	push   es
  41a593:	mov    cl,0xe0
  41a595:	loope  0x41a567
  41a597:	jle    0x41a58d
  41a599:	add    eax,0x4b69f7cf
  41a59e:	pop    edi
  41a59f:	jns    0x41a605
  41a5a1:	sub    DWORD PTR [esi],ecx
  41a5a3:	pop    ds
  41a5a4:	lea    ebp,[eax+ebx*4+0x64]
  41a5a8:	jg     0x41a5e7
  41a5aa:	jp     0x41a571
  41a5ac:	inc    edx
  41a5ad:	call   0xc5e0:0x63025d70
  41a5b4:	aam    0xae
  41a5b6:	mov    eax,ds:0x24d06863
  41a5bb:	dec    edi
  41a5bc:	add    edx,ebp
  41a5be:	mov    cl,0x84
  41a5c0:	xchg   ebx,eax
  41a5c1:	repnz arpl di,sp
  41a5c4:	lea    esi,[edi+ecx*4-0x48]
  41a5c8:	pusha  
  41a5c9:	add    esp,DWORD PTR [ebp+0x33b26709]
  41a5cf:	sahf   
  41a5d0:	inc    edi
  41a5d1:	aas    
  41a5d2:	ficom  DWORD PTR [eax-0x16]
  41a5d5:	sysexit 
  41a5d7:	xchg   ecx,eax
  41a5d8:	xchg   edi,eax
  41a5d9:	cmp    eax,DWORD PTR [ebp-0x4c748b5a]
  41a5df:	(bad)  
  41a5e0:	push   ecx
  41a5e1:	xor    al,0x72
  41a5e3:	xchg   esp,eax
  41a5e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5e5:	iret   
  41a5e6:	jnp    0x41a5e4
  41a5e8:	cmp    bh,BYTE PTR [eax-0x5f]
  41a5eb:	imul   eax,DWORD PTR [ebp+0x42],0x17
  41a5ef:	push   ebx
  41a5f0:	mov    cl,0x54
  41a5f2:	jge    0x41a656
  41a5f4:	fs xchg edi,eax
  41a5f6:	mov    ah,0xe0
  41a5f8:	xor    DWORD PTR [edx],eax
  41a5fa:	xor    eax,0x4536a6ba
  41a5ff:	jle    0x41a657
  41a601:	inc    edi
  41a602:	clc    
  41a603:	in     eax,0x29
  41a605:	mov    BYTE PTR [esp-0x7d],ch
  41a609:	shr    DWORD PTR [ebp-0x2e9c8666],1
  41a60f:	cwde   
  41a610:	xchg   DWORD PTR [ebx-0x7e],ecx
  41a613:	jmp    0x87d5:0xef97661e
  41a61a:	fistp  WORD PTR [edi+0x129b17a9]
  41a620:	sub    edx,DWORD PTR [edi-0x4ddfbb7c]
  41a626:	movzx  ecx,WORD PTR [eax+0x36af0057]
  41a62d:	jle    0x41a65d
  41a62f:	bound  edx,QWORD PTR [esi+esi*8-0x279feecb]
  41a636:	dec    esp
  41a637:	repz shl DWORD PTR [edi+0x72],cl
  41a63b:	push   edi
  41a63c:	outs   dx,BYTE PTR ds:[esi]
  41a63d:	(bad)  
  41a63e:	mov    ds:0xf6a4a10,al
  41a643:	pop    esi
  41a644:	inc    ebx
  41a645:	out    dx,eax
  41a646:	mov    ds:0x7ae42006,eax
  41a64b:	sub    al,0xbc
  41a64d:	ror    BYTE PTR [edi+0x1390b886],1
  41a653:	call   0xdfe1:0x4fd34eb9
  41a65a:	xchg   esi,eax
  41a65b:	fisttp DWORD PTR [edx]
  41a65d:	sar    DWORD PTR [ebp-0x217e5408],1
  41a663:	sub    al,0x47
  41a665:	es jmp 0x41a663
  41a668:	mov    cl,0x39
  41a66a:	xrelease mov DWORD PTR [edx-0x31],ecx
  41a66e:	lahf   
  41a66f:	(bad)  
  41a671:	mov    ebp,0x1f7ef48c
  41a676:	xor    ah,BYTE PTR [eax+0x1e]
  41a679:	ret    0x363e
  41a67c:	sbb    ch,BYTE PTR [eax-0x5727df7c]
  41a682:	xchg   WORD PTR [esi],si
  41a685:	pop    eax
  41a686:	or     ah,ah
  41a688:	dec    ecx
  41a689:	(bad)  
  41a68a:	add    al,0x68
  41a68c:	pop    es
  41a68d:	and    eax,0xa77417a0
  41a692:	xor    edx,DWORD PTR [edx]
  41a694:	fistp  DWORD PTR [eax]
  41a696:	adc    ecx,ebp
  41a698:	cmp    al,0x6c
  41a69a:	sbb    DWORD PTR [esp+edi*1+0x63a4cdd8],esp
  41a6a1:	clc    
  41a6a2:	jp     0x41a70f
  41a6a4:	std    
  41a6a5:	and    cl,0xf3
  41a6a8:	jmp    0x41a68e
  41a6aa:	lods   al,BYTE PTR ds:[esi]
  41a6ab:	sub    dh,ah
  41a6ad:	jecxz  0x41a64f
  41a6af:	xor    eax,0x82200ffb
  41a6b4:	mov    dh,0x93
  41a6b6:	popf   
  41a6b7:	mov    dl,0x8c
  41a6b9:	(bad)  
  41a6ba:	std    
  41a6bb:	jbe    0x41a6a6
  41a6bd:	inc    esp
  41a6be:	pusha  
  41a6bf:	or     DWORD PTR [ecx],esi
  41a6c1:	xor    al,0xfd
  41a6c3:	mov    cs,WORD PTR [esi]
  41a6c5:	outs   dx,BYTE PTR ds:[esi]
  41a6c6:	stos   BYTE PTR es:[edi],al
  41a6c7:	add    DWORD PTR ds:[ebx-0x3],ebx
  41a6cb:	lea    edx,[edi+0x2f]
  41a6ce:	loopne 0x41a651
  41a6d0:	popa   
  41a6d1:	hlt    
  41a6d2:	mov    eax,0x5a978a51
  41a6d7:	cmp    DWORD PTR [eax+0xb3d7b25],esi
  41a6dd:	xor    DWORD PTR [ebx+0x6dfceee3],edx
  41a6e3:	or     BYTE PTR [ebp+0x2e7daeb8],ah
  41a6e9:	shl    BYTE PTR [ebx+0x2a3faaeb],0x7c
  41a6f0:	dec    esi
  41a6f1:	mov    cl,0x22
  41a6f3:	mov    edi,0x11d262c
  41a6f8:	es xor dl,bl
  41a6fb:	jmp    0x41a6c4
  41a6fd:	(bad)  
  41a6fe:	in     al,dx
  41a6ff:	fwait
  41a700:	push   ds
  41a701:	inc    esi
  41a702:	imul   esp,DWORD PTR [ebx-0x29],0xd7f0c0c5
  41a709:	stos   BYTE PTR es:[edi],al
  41a70a:	jecxz  0x41a724
  41a70c:	jle    0x41a6e1
  41a70e:	add    DWORD PTR ds:0xa0b1ef57,eax
  41a714:	clc    
  41a715:	fs inc eax
  41a717:	push   0x7
  41a719:	pushf  
  41a71a:	(bad)  
  41a71b:	jae    0x41a6d5
  41a71d:	push   eax
  41a71e:	jnp    0x41a787
  41a720:	cmp    BYTE PTR [ebp+0x3c],cl
  41a723:	iret   
  41a724:	pop    ebx
  41a725:	clc    
  41a726:	jg     0x41a6ae
  41a728:	fisub  DWORD PTR [esi]
  41a72a:	int3   
  41a72b:	mov    ss,WORD PTR [ebp+0x6c]
  41a72e:	jmp    0x4a45:0xb655b46
  41a735:	dec    ebx
  41a736:	xchg   ebp,eax
  41a737:	xchg   ebx,eax
  41a739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a73a:	(bad)  
  41a73b:	add    DWORD PTR [edx-0x6ad92ac],edi
  41a741:	jnp    0x41a745
  41a743:	mov    al,0xe5
  41a745:	ficomp WORD PTR ss:[edi-0x63]
  41a749:	xor    BYTE PTR gs:[edi+0x7b],dh
  41a74d:	test   eax,0xf1e48ebe
  41a752:	dec    edi
  41a753:	loopne 0x41a73f
  41a755:	out    0xe5,al
  41a757:	outs   dx,DWORD PTR ds:[esi]
  41a758:	add    ebp,DWORD PTR [ebp-0x37d43a12]
  41a75e:	xchg   esp,eax
  41a75f:	jo     0x41a7bb
  41a761:	scas   eax,DWORD PTR es:[edi]
  41a762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a763:	adc    eax,esi
  41a765:	in     eax,0xac
  41a767:	xor    esp,edi
  41a769:	or     bl,bl
  41a76b:	out    0x1b,al
  41a76d:	add    esp,DWORD PTR [eax+0x1835131d]
  41a773:	ret    
  41a774:	inc    edi
  41a775:	int3   
  41a776:	dec    ebx
  41a777:	push   esp
  41a778:	push   ss
  41a779:	lahf   
  41a77a:	mov    al,al
  41a77c:	push   esi
  41a77d:	loope  0x41a782
  41a77f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a780:	pop    esp
  41a781:	push   esp
  41a782:	lock stos BYTE PTR es:[edi],al
  41a784:	cmc    
  41a785:	adc    dl,BYTE PTR [esi]
  41a787:	sbb    eax,0x6ba00f74
  41a78c:	jb     0x41a77a
  41a78e:	outs   dx,BYTE PTR ds:[esi]
  41a78f:	hlt    
  41a790:	stc    
  41a791:	repnz mov esp,0xbaaaed5b
  41a797:	repz loop 0x41a813
  41a79a:	or     DWORD PTR [esi],eax
  41a79c:	ins    BYTE PTR es:[edi],dx
  41a79d:	lahf   
  41a79e:	cmp    eax,0x1c9f2a3c
  41a7a3:	xor    eax,0x3f3f0066
  41a7a8:	push   0x6329abdd
  41a7ad:	arpl   bx,di
  41a7af:	push   0xa7dcf754
  41a7b4:	sbb    ch,BYTE PTR [ebx-0x34030975]
  41a7ba:	sbb    DWORD PTR [ecx],eax
  41a7bc:	xchg   edi,eax
  41a7bd:	dec    esi
  41a7be:	xlat   BYTE PTR ds:[ebx]
  41a7bf:	in     al,0x2d
  41a7c1:	sbb    DWORD PTR [ebp+eiz*1+0x28d1ebf0],esi
  41a7c8:	dec    ebp
  41a7c9:	inc    ebp
  41a7ca:	ret    0x86b0
  41a7cd:	out    0xe7,al
  41a7cf:	in     al,0x58
  41a7d1:	fldln2 
  41a7d3:	mov    ah,al
  41a7d5:	repnz leave 
  41a7d7:	jl     0x41a81d
  41a7d9:	daa    
  41a7da:	iret   
  41a7db:	clc    
  41a7dc:	or     DWORD PTR [esi],esp
  41a7de:	xor    al,0x9
  41a7e0:	or     BYTE PTR [ebp-0x6f49f0b9],al
  41a7e6:	aad    0x55
  41a7e8:	add    esp,esi
  41a7ea:	mov    cl,0x71
  41a7ec:	outs   dx,BYTE PTR ds:[esi]
  41a7ed:	std    
  41a7ee:	(bad)  
  41a7ef:	add    ebx,DWORD PTR [ecx+0x55]
  41a7f2:	retf   
  41a7f3:	pop    ss
  41a7f4:	loop   0x41a7f6
  41a7f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7f7:	sar    BYTE PTR [ebx+esi*4+0x5bfdc209],cl
  41a7fe:	imul   ebp,edx,0xffffffd2
  41a801:	rcr    BYTE PTR [eax-0x6359648c],0xfb
  41a808:	je     0x41a86b
  41a80a:	enter  0xde1b,0xa2
  41a80e:	sub    bl,0xcc
  41a811:	lock es pop edi
  41a814:	mov    sp,bx
  41a817:	add    al,0x1a
  41a819:	sub    cl,BYTE PTR [ecx]
  41a81b:	push   cs
  41a81c:	cmp    bh,dh
  41a81e:	cmp    cl,BYTE PTR [esi]
  41a820:	adc    ecx,DWORD PTR [ebp-0x5b]
  41a823:	clc    
  41a824:	push   ebp
  41a825:	xchg   ebx,eax
  41a826:	mov    ds:0xdeef0d89,eax
  41a82b:	in     al,0xa4
  41a82d:	and    dh,BYTE PTR [ebp+0x3477253c]
  41a833:	cli    
  41a834:	nop
  41a835:	outs   dx,DWORD PTR ds:[esi]
  41a836:	(bad)  
  41a838:	dec    ebx
  41a839:	mov    ds:0x77178c48,eax
  41a83e:	or     ch,dh
  41a840:	aam    0xbc
  41a842:	push   eax
  41a843:	xchg   ecx,eax
  41a844:	dec    esp
  41a845:	dec    eax
  41a846:	inc    ebp
  41a847:	pop    ebx
  41a848:	xor    ah,al
  41a84a:	ins    BYTE PTR es:[edi],dx
  41a84b:	or     BYTE PTR [esi+ecx*4-0x4f15388f],ah
  41a852:	arpl   WORD PTR [eax+0x1031e11e],bx
  41a858:	rol    esi,1
  41a85a:	rcl    al,cl
  41a85c:	pop    ebp
  41a85d:	push   0x7a
  41a85f:	(bad)  
  41a860:	jg     0x41a82b
  41a862:	inc    eax
  41a863:	ds jae 0x41a84b
  41a866:	popf   
  41a867:	mov    eax,0x90534ec4
  41a86c:	fsub   st,st(3)
  41a86e:	mov    esp,0xa7db6904
  41a873:	aas    
  41a874:	jp     0x41a883
  41a876:	pop    ds
  41a877:	scas   eax,DWORD PTR es:[edi]
  41a878:	mov    edi,eax
  41a87a:	mov    esi,0xad62453f
  41a87f:	shl    DWORD PTR [ebp+ecx*8-0x405a13df],0xf8
  41a887:	or     esp,DWORD PTR [esp+ebp*1+0x62]
  41a88b:	lds    edx,FWORD PTR [eax+ebp*1]
  41a88e:	mov    WORD PTR [eax+0x53],cs
  41a891:	xchg   BYTE PTR [edi],dh
  41a893:	and    ah,BYTE PTR [ebx-0x3c4cae49]
  41a899:	sahf   
  41a89a:	jmp    DWORD PTR [ebp-0x23]
  41a89d:	adc    ebx,edx
  41a89f:	pop    ecx
  41a8a0:	cmp    ebx,DWORD PTR [eax]
  41a8a2:	jmp    0xf6771d67
  41a8a7:	(bad)  
  41a8a8:	cwde   
  41a8a9:	(bad)  
  41a8aa:	jmp    0x6fe5d92d
  41a8af:	iret   
  41a8b0:	int    0xfe
  41a8b2:	jp     0x41a8d8
  41a8b4:	fstp   QWORD PTR [ecx-0x71316118]
  41a8ba:	jnp    0x41a8d3
  41a8bc:	dec    ebx
  41a8bd:	ret    0xe4f0
  41a8c0:	test   al,0x1c
  41a8c2:	outs   dx,DWORD PTR ds:[esi]
  41a8c3:	mov    ebp,0x33271127
  41a8c8:	pop    edi
  41a8c9:	add    dh,0xb9
  41a8cc:	jb     0x41a8a7
  41a8ce:	cli    
  41a8cf:	test   BYTE PTR [edx+eiz*1],dh
  41a8d2:	sub    BYTE PTR [ecx+0x798e0979],ah
  41a8d8:	inc    ebp
  41a8d9:	jo     0x41a85b
  41a8db:	aas    
  41a8dc:	leave  
  41a8dd:	xchg   edx,eax
  41a8de:	outs   dx,DWORD PTR ds:[esi]
  41a8df:	sub    al,BYTE PTR [ebx+0x1b863f65]
  41a8e5:	arpl   WORD PTR [eax-0x35],ax
  41a8e8:	out    dx,eax
  41a8e9:	sbb    dh,BYTE PTR [eax-0x7c]
  41a8ec:	push   edx
  41a8ed:	sub    eax,0x4c1d4326
  41a8f2:	mov    cl,0xf2
  41a8f4:	xchg   ebx,eax
  41a8f5:	cmp    edx,ebx
  41a8f7:	das    
  41a8f8:	shr    DWORD PTR [ecx+0x7f],0xb9
  41a8fc:	jno    0x41a93f
  41a8fe:	dec    ebx
  41a8ff:	cmp    BYTE PTR [ebx-0x372c0c28],cl
  41a905:	scas   eax,DWORD PTR es:[edi]
  41a906:	or     DWORD PTR ds:0x1781c0de,ecx
  41a90c:	mov    edx,0x22e304b1
  41a911:	add    BYTE PTR [ecx+0x7be8709],ch
  41a917:	cmc    
  41a918:	test   eax,edi
  41a91a:	outs   dx,DWORD PTR ds:[esi]
  41a91b:	xor    ah,BYTE PTR [edi]
  41a91d:	jmp    0xe2b6324c
  41a922:	ss lahf 
  41a924:	and    dl,BYTE PTR [edx+0x7b0022d1]
  41a92a:	adc    BYTE PTR [esi+0x2d95f074],dh
  41a930:	mov    cl,0x50
  41a932:	xor    al,0xfa
  41a934:	test   al,0x8d
  41a936:	mov    edx,0x30bb4db
  41a93b:	cdq    
  41a93c:	cli    
  41a93d:	ds dec ebp
  41a93f:	cmp    DWORD PTR [ebx],edx
  41a941:	xor    cl,al
  41a943:	inc    BYTE PTR [ecx-0x41]
  41a946:	repz test al,0xbf
  41a949:	lods   al,BYTE PTR ds:[esi]
  41a94a:	push   esi
  41a94b:	adc    eax,0xc2546b78
  41a950:	sbb    eax,DWORD PTR [eax+0xf]
  41a953:	add    ecx,DWORD PTR [edi]
  41a955:	jb     0x41a973
  41a957:	add    ebp,edx
  41a959:	push   0xc8b6f5f
  41a95e:	sbb    BYTE PTR [edx],cl
  41a960:	scas   al,BYTE PTR es:[edi]
  41a961:	call   0x389030bf
  41a966:	jmp    FWORD PTR [ebx]
  41a968:	fs nop
  41a96a:	xchg   al,ch
  41a96c:	mov    ecx,0x55c4f0ea
  41a971:	es xchg edi,eax
  41a973:	pop    es
  41a974:	loopne 0x41a95f
  41a976:	xchg   edx,eax
  41a977:	or     DWORD PTR [edi],0xaade1387
  41a97d:	fs push eax
  41a97f:	ror    edx,cl
  41a981:	loope  0x41a9ef
  41a983:	int    0x6f
  41a985:	pop    ss
  41a986:	aas    
  41a987:	inc    edx
  41a988:	mov    ds:0xb2fc90dc,al
  41a98d:	(bad)  
  41a98e:	fidivr DWORD PTR [ecx-0xe5db7b4]
  41a994:	jne    0x41aa04
  41a996:	lods   al,BYTE PTR ds:[esi]
  41a997:	push   0xffffff94
  41a999:	repnz mov al,ds:0xa1274ba9
  41a99f:	cmc    
  41a9a0:	mov    cl,0x84
  41a9a2:	ss or  dh,bh
  41a9a5:	div    BYTE PTR [ecx+0x18c1e748]
  41a9ab:	pop    ebp
  41a9ac:	pop    edx
  41a9ad:	enter  0x9b9e,0x67
  41a9b1:	int3   
  41a9b2:	setle  BYTE PTR [edi-0x7ab1b444]
  41a9b9:	and    DWORD PTR ds:0x14c88864,eax
  41a9bf:	mov    al,0x3a
  41a9c1:	xchg   ebp,eax
  41a9c2:	aam    0x15
  41a9c4:	xor    eax,0xc535a3dd
  41a9c9:	and    edi,DWORD PTR [ebp-0x764ad1ce]
  41a9cf:	add    DWORD PTR [edi+ebp*1-0x7e27e725],edi
  41a9d6:	dec    ebp
  41a9d7:	mov    eax,0xd5f738c9
  41a9dc:	sub    eax,0x4f6b674c
  41a9e1:	stc    
  41a9e2:	fucom  st(4)
  41a9e4:	outs   dx,DWORD PTR ds:[esi]
  41a9e5:	stc    
  41a9e6:	ss inc eax
  41a9e8:	ja     0x41a99e
  41a9ea:	xor    bl,dl
  41a9ec:	lock jge 0x41a9d7
  41a9ef:	add    eax,0xcbf7e75f
  41a9f4:	push   esp
  41a9f5:	cdq    
  41a9f6:	sar    edx,0x5c
  41a9f9:	pop    ebx
  41a9fa:	inc    esp
  41a9fb:	ret    0xbff0
  41a9fe:	add    bh,BYTE PTR ss:[eax+eiz*1+0x3f]
  41aa03:	jnp    0x41a9ad
  41aa05:	and    ah,bl
  41aa07:	adc    eax,0x585d3e2e
  41aa0c:	mov    dh,0xdf
  41aa0e:	cwde   
  41aa0f:	imul   eax,DWORD PTR [esi],0xffffffb2
  41aa12:	shl    BYTE PTR [edx+edx*8+0x4f13006],0x84
  41aa1a:	cmp    eax,0xe6bffda1
  41aa1f:	enter  0xb085,0xc8
  41aa23:	pop    esi
  41aa24:	push   ebx
  41aa25:	(bad)  
  41aa27:	mov    ah,BYTE PTR [ecx-0x2d]
  41aa2a:	loop   0x41aa13
  41aa2c:	pop    esi
  41aa2d:	aad    0x87
  41aa2f:	add    ch,ah
  41aa31:	sub    BYTE PTR [esi-0x5315d487],ah
  41aa37:	rol    BYTE PTR [ebp+eax*2+0x45da89b],cl
  41aa3e:	sbb    BYTE PTR [esp+eax*1],0x34
  41aa42:	dec    ecx
  41aa43:	sub    dl,ch
  41aa45:	jmp    0x41a9cb
  41aa47:	pop    ds
  41aa48:	outs   dx,BYTE PTR ds:[esi]
  41aa49:	push   edx
  41aa4a:	cmp    eax,0x1198fffa
  41aa4f:	stos   DWORD PTR es:[edi],eax
  41aa50:	(bad)  
  41aa51:	cld    
  41aa52:	std    
  41aa53:	call   0xcfeb:0xe344def6
  41aa5a:	pop    edx
  41aa5b:	fiadd  DWORD PTR [ecx]
  41aa5d:	les    ebx,FWORD PTR [edx+0x6e5993ad]
  41aa63:	in     al,dx
  41aa64:	sub    DWORD PTR [esi+0x4009f427],ecx
  41aa6a:	(bad)  
  41aa6b:	mov    esp,0x8d1e6bf1
  41aa70:	adc    eax,0xf7d24301
  41aa75:	test   al,0xd5
  41aa77:	pop    ecx
  41aa78:	sub    ebx,DWORD PTR [ebx]
  41aa7a:	cmp    ah,ah
  41aa7c:	fwait
  41aa7d:	and    ecx,DWORD PTR [eax+eax*1]
  41aa80:	popa   
  41aa81:	inc    ebx
  41aa82:	sbb    BYTE PTR [edx+esi*1],0x5
  41aa86:	mov    ds:0x5632ed8a,eax
  41aa8b:	shl    dh,0xc6
  41aa8e:	(bad)  
  41aa8f:	jmp    0x9c09:0xfce669a8
  41aa96:	cmp    DWORD PTR [esi],ebp
  41aa98:	xor    bh,dh
  41aa9a:	mov    ds:0x5951087a,al
  41aa9f:	and    eax,0xb1079c0a
  41aaa4:	or     edi,DWORD PTR [eax-0x36]
  41aaa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaa8:	js     0x41ab0e
  41aaaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaab:	ficomp WORD PTR [edi+ebp*1]
  41aaae:	inc    ecx
  41aaaf:	mov    ch,0x84
  41aab1:	retf   0x5d89
  41aab4:	mov    esp,0x3308558b
  41aab9:	rol    BYTE PTR [ebx],1
  41aabb:	(bad)  
  41aabc:	jne    0x4162cf
  41aac2:	mov    edx,DWORD PTR [ebp-0x14]
  41aac5:	mov    DWORD PTR [ebp+0x8],edx
  41aac8:	jmp    0x41ab3d
  41aacd:	mov    edx,DWORD PTR [ebp+0x8]
  41aad0:	mov    ebx,DWORD PTR [ebp-0x8]
  41aad3:	xor    edx,eax
  41aad5:	xor    ebx,eax
  41aad7:	sub    edx,ebx
  41aad9:	sub    edx,esi
  41aadb:	xor    edx,eax
  41aadd:	mov    DWORD PTR [ebp+0x8],edx
  41aae0:	mov    edx,DWORD PTR [ebp+0x8]
  41aae3:	mov    ebx,DWORD PTR [ebp-0x58]
  41aae6:	add    edx,0x5708c0
  41aaec:	imul   edx,ebx
  41aaef:	mov    DWORD PTR [ebp-0x58],edx
  41aaf2:	mov    edx,DWORD PTR [ebp+0x8]
  41aaf5:	mov    ebx,DWORD PTR [ebp-0x54]
  41aaf8:	add    edx,0x64f8a2
  41aafe:	or     edx,ebx
  41ab00:	mov    DWORD PTR [ebp-0x54],edx
  41ab03:	mov    edx,DWORD PTR [ebp+0x8]
  41ab06:	mov    ebx,DWORD PTR [ebp-0x50]
  41ab09:	add    edx,ecx
  41ab0b:	xor    edx,ebx
  41ab0d:	mov    DWORD PTR [ebp-0x50],edx
  41ab10:	mov    edx,DWORD PTR [ebp+0x8]
  41ab13:	mov    ebx,DWORD PTR [ebp-0x4c]
  41ab16:	add    edx,edi
  41ab18:	and    edx,ebx
  41ab1a:	mov    DWORD PTR [ebp-0x4c],edx
  41ab1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ab20:	mov    ebx,DWORD PTR [ebp-0x48]
  41ab23:	lea    edx,[ebx+edx*1+0x241fc1f]
  41ab2a:	mov    DWORD PTR [ebp-0x48],edx
  41ab2d:	mov    edx,DWORD PTR [ebp+0x8]
  41ab30:	mov    ebx,0xfa5e15e2
  41ab35:	sub    ebx,edx
  41ab37:	add    ebx,DWORD PTR [ebp-0x44]
  41ab3a:	mov    DWORD PTR [ebp-0x44],ebx
  41ab3d:	mov    edx,DWORD PTR [ebp+0x8]
  41ab40:	xor    edx,eax
  41ab42:	add    edx,esi
  41ab44:	jne    0x41aacd
  41ab4a:	mov    edx,DWORD PTR [ebp-0x8]
  41ab4d:	mov    ebx,DWORD PTR [ebp-0xc]
  41ab50:	xor    edx,eax
  41ab52:	lea    edx,[edx+ebx*1+0x3272e4]
  41ab59:	mov    DWORD PTR [ebp-0xc],edx
  41ab5c:	mov    edx,DWORD PTR [ebp-0x10]
  41ab5f:	xor    edx,eax
  41ab61:	add    edx,esi
  41ab63:	jne    0x413acb
  41ab69:	jmp    0x41d03b
  41ab6e:	mov    ecx,DWORD PTR [ebp-0x14]
  41ab71:	mov    DWORD PTR [ebp+0x8],ecx
  41ab74:	jmp    0x41abed
  41ab79:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab7c:	mov    edx,DWORD PTR [ebp-0x8]
  41ab7f:	xor    ecx,eax
  41ab81:	xor    edx,eax
  41ab83:	sub    ecx,edx
  41ab85:	sub    ecx,esi
  41ab87:	xor    ecx,eax
  41ab89:	mov    DWORD PTR [ebp+0x8],ecx
  41ab8c:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab8f:	mov    edx,DWORD PTR [ebp-0x58]
  41ab92:	add    ecx,0x5708c0
  41ab98:	imul   ecx,edx
  41ab9b:	mov    DWORD PTR [ebp-0x58],ecx
  41ab9e:	mov    ecx,DWORD PTR [ebp+0x8]
  41aba1:	mov    edx,DWORD PTR [ebp-0x54]
  41aba4:	add    ecx,0x64f8a2
  41abaa:	or     ecx,edx
  41abac:	mov    DWORD PTR [ebp-0x54],ecx
  41abaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41abb2:	mov    edx,DWORD PTR [ebp-0x50]
  41abb5:	add    ecx,0x242ebed
  41abbb:	xor    ecx,edx
  41abbd:	mov    DWORD PTR [ebp-0x50],ecx
  41abc0:	mov    ecx,DWORD PTR [ebp+0x8]
  41abc3:	mov    edx,DWORD PTR [ebp-0x4c]
  41abc6:	add    ecx,edi
  41abc8:	and    ecx,edx
  41abca:	mov    DWORD PTR [ebp-0x4c],ecx
  41abcd:	mov    ecx,DWORD PTR [ebp+0x8]
  41abd0:	mov    edx,DWORD PTR [ebp-0x48]
  41abd3:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41abda:	mov    DWORD PTR [ebp-0x48],ecx
  41abdd:	mov    ecx,DWORD PTR [ebp+0x8]
  41abe0:	mov    edx,0xfa5e15e2
  41abe5:	sub    edx,ecx
  41abe7:	add    edx,DWORD PTR [ebp-0x44]
  41abea:	mov    DWORD PTR [ebp-0x44],edx
  41abed:	mov    ecx,DWORD PTR [ebp+0x8]
  41abf0:	xor    ecx,eax
  41abf2:	add    ecx,esi
  41abf4:	jne    0x41ab79
  41abfa:	jmp    0x41d047
  41abff:	mov    ecx,DWORD PTR [ebp+0x8]
  41ac02:	mov    edx,DWORD PTR [ebp-0x8]
  41ac05:	xor    ecx,eax
  41ac07:	xor    edx,eax
  41ac09:	sub    ecx,edx
  41ac0b:	sub    ecx,esi
  41ac0d:	xor    ecx,eax
  41ac0f:	mov    DWORD PTR [ebp+0x8],ecx
  41ac12:	mov    ecx,DWORD PTR [ebp+0x8]
  41ac15:	mov    edx,DWORD PTR [ebp-0x58]
  41ac18:	jmp    0x41cfd3
  41ac1d:	sbb    DWORD PTR [eax+0x2e],esp
  41ac20:	xrelease lock add DWORD PTR ss:[ebx],edx
  41ac25:	push   esi
  41ac26:	mov    dl,0xc6
  41ac28:	aaa    
  41ac29:	icebp  
  41ac2a:	imul   ecx,DWORD PTR [esi+0x47],0x7b
  41ac2e:	pop    ds
  41ac2f:	jge    0x41aca3
  41ac31:	rcr    BYTE PTR [edi+0x72],1
  41ac34:	jb     0x41ac6b
  41ac36:	js     0x41abf4
  41ac38:	std    
  41ac39:	xor    al,0x23
  41ac3b:	shr    BYTE PTR [edi-0x13a99416],1
  41ac41:	stos   BYTE PTR es:[edi],al
  41ac42:	fdiv   QWORD PTR [edx-0x6b]
  41ac45:	mov    ch,0x63
  41ac47:	or     eax,0x8007c567
  41ac4c:	mov    bh,0x57
  41ac4e:	ret    
  41ac4f:	cdq    
  41ac50:	fnstsw WORD PTR [ecx+0x65]
  41ac53:	ins    DWORD PTR es:[edi],dx
  41ac54:	push   0xabe16eec
  41ac59:	cmp    BYTE PTR ds:[ebp+0x6d198340],ch
  41ac60:	xchg   esp,eax
  41ac61:	xlat   BYTE PTR ds:[ebx]
  41ac62:	cmpps  xmm1,XMMWORD PTR [edx+0x76c6955c],0xb7
  41ac6a:	(bad)  
  41ac6b:	pop    ds
  41ac6c:	fisubr WORD PTR [edi+0x62]
  41ac6f:	pusha  
  41ac70:	ja     0x41ac49
  41ac72:	std    
  41ac73:	cmc    
  41ac74:	mov    fs,WORD PTR [ebx+0x18]
  41ac77:	out    dx,eax
  41ac78:	adc    al,0xe9
  41ac7a:	fild   WORD PTR [esi-0x363a31d8]
  41ac80:	cli    
  41ac81:	or     eax,0x19d70eaa
  41ac86:	jne    0x41ac8a
  41ac88:	div    esp
  41ac8a:	xor    al,0x2b
  41ac8c:	les    esp,FWORD PTR [ebx+0x79]
  41ac8f:	and    esp,DWORD PTR [ebp+ebp*2+0x20]
  41ac93:	std    
  41ac94:	pop    edx
  41ac95:	lods   eax,DWORD PTR ds:[esi]
  41ac96:	push   edi
  41ac97:	cdq    
  41ac98:	adc    al,0xe1
  41ac9a:	jbe    0x41ad13
  41ac9c:	jns    0x41ac62
  41ac9e:	or     esi,edx
  41aca0:	xchg   edi,eax
  41aca1:	xlat   BYTE PTR ds:[ebx]
  41aca2:	mov    ds:0x64057812,eax
  41aca7:	hlt    
  41aca8:	fwait
  41aca9:	stc    
  41acaa:	push   ss
  41acab:	jmp    0x4cff:0x58d71e
  41acb2:	outs   dx,BYTE PTR ds:[esi]
  41acb3:	jno    0x41ac40
  41acb5:	sti    
  41acb6:	sar    DWORD PTR [ebp+0x56058131],1
  41acbc:	or     eax,0xc666e61a
  41acc1:	dec    esp
  41acc2:	jmp    0xed1e:0xf0d6900b
  41acc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acca:	cmp    eax,DWORD PTR [eax]
  41accc:	jns    0x41ac67
  41acce:	adc    DWORD PTR [ebx],0xb7cd17df
  41acd4:	adc    BYTE PTR [edx-0x44b4281d],0x4f
  41acdb:	call   FWORD PTR [esi+0x19832625]
  41ace1:	mov    eax,0xec9a5e12
  41ace6:	cmp    BYTE PTR [ecx-0x388fb8e7],dh
  41acec:	popa   
  41aced:	xchg   BYTE PTR [ebp-0x11],bh
  41acf0:	cmp    eax,0xfd93373c
  41acf5:	mov    eax,0xdd58343c
  41acfa:	jge    0x41acf9
  41acfc:	addr16 jg 0x41ac8d
  41acff:	mov    ss,ebp
  41ad01:	jecxz  0x41ad44
  41ad03:	jae    0x41ad82
  41ad05:	(bad)  
  41ad08:	scas   al,BYTE PTR es:[edi]
  41ad09:	nop
  41ad0a:	leave  
  41ad0b:	ficomp WORD PTR [esi]
  41ad0d:	cmc    
  41ad0e:	sbb    ch,BYTE PTR [eax+0x75]
  41ad11:	stos   DWORD PTR es:[edi],eax
  41ad12:	sub    eax,0x346a4bd2
  41ad17:	sbb    eax,0xbf6c7a2a
  41ad1c:	icebp  
  41ad1d:	icebp  
  41ad1e:	pop    esi
  41ad1f:	icebp  
  41ad20:	mov    ch,0xf4
  41ad22:	(bad)  
  41ad23:	cli    
  41ad24:	jl     0x41ad00
  41ad26:	test   DWORD PTR [esi],0x238e0f3f
  41ad2c:	enter  0x4cde,0x22
  41ad30:	xor    ebp,esi
  41ad32:	in     al,0x6
  41ad34:	add    ecx,DWORD PTR [esi-0x73]
  41ad37:	jle    0x41ada0
  41ad39:	pop    ss
  41ad3a:	repz add al,0x31
  41ad3d:	clc    
  41ad3e:	das    
  41ad3f:	mov    ebp,0x18cda7fe
  41ad44:	bound  edx,QWORD PTR [eax+0x6f]
  41ad47:	sbb    DWORD PTR [esi-0x247407ba],0xacd1342
  41ad51:	das    
  41ad52:	xchg   dl,bl
  41ad54:	xor    esi,edi
  41ad56:	and    al,BYTE PTR [eax-0x78]
  41ad59:	mov    DWORD PTR [ebx+0x7dd82aa7],edi
  41ad5f:	rcpps  xmm0,XMMWORD PTR [eax+0x3ab6da6d]
  41ad66:	test   al,0xb7
  41ad68:	jae    0x41ad52
  41ad6a:	jecxz  0x41ade0
  41ad6c:	push   ds
  41ad6d:	jle    0x41ad20
  41ad6f:	pop    edx
  41ad70:	inc    esi
  41ad71:	pop    esi
  41ad72:	in     eax,0xd
  41ad74:	lock sbb DWORD PTR [ebx+0x4a],edx
  41ad78:	test   al,0x19
  41ad7a:	xchg   ebp,eax
  41ad7b:	fwait
  41ad7c:	ret    0xd116
  41ad7f:	and    BYTE PTR [ecx],bl
  41ad81:	mov    al,ds:0x660f107e
  41ad86:	xchg   ebp,eax
  41ad88:	push   esi
  41ad89:	mov    ch,0x87
  41ad8b:	mov    ah,0x4
  41ad8d:	mov    DWORD PTR [esi+0x36],0xca010fa2
  41ad94:	and    ebx,DWORD PTR [ecx]
  41ad96:	cmp    eax,0xe67b40fe
  41ad9b:	dec    BYTE PTR ds:0x7e14cbc6
  41ada1:	sub    bl,BYTE PTR [edi]
  41ada3:	(bad)  
  41ada4:	jp     0x41adce
  41ada6:	mov    bh,0x37
  41ada8:	push   esp
  41ada9:	add    ebp,esp
  41adab:	jae    0x41ad4c
  41adad:	out    dx,al
  41adae:	push   ds
  41adaf:	sub    eax,0x31cccd9b
  41adb4:	sahf   
  41adb5:	mov    dl,0x95
  41adb7:	in     al,dx
  41adb8:	outs   dx,DWORD PTR ds:[esi]
  41adb9:	adc    ch,bh
  41adbb:	pop    eax
  41adbc:	fcmovnu st,st(5)
  41adbe:	or     BYTE PTR [eax],ch
  41adc0:	out    0xab,eax
  41adc2:	mov    esi,0x1e458de4
  41adc7:	inc    ebp
  41adc8:	loope  0x41adee
  41adca:	rcl    BYTE PTR [eax-0x66215c3d],1
  41add0:	xchg   edi,eax
  41add1:	loop   0x41adfc
  41add3:	push   ebx
  41add4:	xor    DWORD PTR [esp+ecx*8+0x4f],ecx
  41add8:	add    DWORD PTR [eax+0x47867551],ebp
  41adde:	pop    edx
  41addf:	fs add al,0xe7
  41ade2:	jle    0x41ae00
  41ade4:	ja     0x41addc
  41ade6:	mov    bh,BYTE PTR [eax-0x28e75ca1]
  41adec:	jb     0x41ad72
  41adee:	dec    esi
  41adef:	dec    edi
  41adf0:	je     0x41adcf
  41adf2:	mov    ds:0xb228b390,al
  41adf7:	in     eax,0xb2
  41adf9:	push   ds
  41adfa:	xchg   edi,eax
  41adfb:	and    ah,BYTE PTR [ebx]
  41adfd:	jne    0x41adc4
  41adff:	xchg   edx,eax
  41ae00:	or     al,0x53
  41ae02:	mov    ds:0x9839debc,eax
  41ae07:	adc    ah,ch
  41ae09:	dec    esp
  41ae0a:	mov    ebp,0x8658b9d4
  41ae0f:	mov    dh,0x21
  41ae11:	loope  0x41ae3f
  41ae13:	in     eax,dx
  41ae14:	call   0x861007a5
  41ae19:	mov    BYTE PTR [ebx],0xeb
  41ae1c:	pop    ebx
  41ae1d:	pop    ecx
  41ae1e:	or     al,0x96
  41ae20:	mov    ebx,0x1559a6a
  41ae25:	nop
  41ae26:	nop
  41ae27:	push   esp
  41ae28:	lock xor eax,0x6bf19f55
  41ae2e:	push   esi
  41ae2f:	mov    bh,0x17
  41ae31:	mov    ebp,0x2ec73df9
  41ae36:	xchg   BYTE PTR [edx-0x1effee55],al
  41ae3c:	xor    BYTE PTR ds:0xbc951721,0x80
  41ae43:	cli    
  41ae44:	push   0x67
  41ae46:	cld    
  41ae47:	int    0x12
  41ae49:	add    eax,0x79f201d3
  41ae4e:	sub    eax,0x2aef75da
  41ae53:	inc    eax
  41ae54:	sar    DWORD PTR [edx+edx*8+0x7a],cl
  41ae58:	dec    esp
  41ae59:	jge    0x41ae94
  41ae5b:	mov    ds:0xdeca05d4,al
  41ae60:	jbe    0x41aec4
  41ae62:	(bad)  
  41ae63:	sub    eax,0xa95cc101
  41ae68:	add    DWORD PTR [edx],0x3c22aa91
  41ae6e:	inc    esp
  41ae6f:	jb     0x41ae35
  41ae71:	add    ebp,DWORD PTR [bp+di]
  41ae74:	add    BYTE PTR ds:0x77b4c5db,cl
  41ae7a:	mov    ebp,0x2d7580a2
  41ae7f:	jl     0x41aea3
  41ae81:	fdivr  DWORD PTR [edi]
  41ae83:	add    DWORD PTR [ebp+0x1ecbff92],edx
  41ae89:	and    al,cl
  41ae8b:	dec    eax
  41ae8c:	(bad)  
  41ae8d:	repz popf 
  41ae8f:	sbb    al,0xaf
  41ae91:	jg     0x41ae7c
  41ae93:	inc    esi
  41ae94:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41ae96:	cmp    al,BYTE PTR [ebp+0x3]
  41ae99:	sub    DWORD PTR [eax-0x75db1336],ebp
  41ae9f:	pop    ebp
  41aea0:	fs dec esi
  41aea2:	sub    al,0xe1
  41aea4:	xor    bl,bh
  41aea6:	fld    QWORD PTR [esi]
  41aea8:	mov    bh,0x98
  41aeaa:	adc    ah,dl
  41aeac:	add    al,0x24
  41aeae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeaf:	data16 jmp 0x41af31
  41aeb2:	mov    ds:0x98658abf,eax
  41aeb7:	fnstenv [edx+0x54]
  41aeba:	jle    0x41ae59
  41aebc:	lock (bad) 
  41aebf:	in     eax,0x5e
  41aec1:	cmp    cl,BYTE PTR [ebx-0x1e]
  41aec4:	clc    
  41aec5:	and    eax,DWORD PTR [edi]
  41aec7:	loopne 0x41ae83
  41aec9:	test   BYTE PTR [edi+0x46459204],cl
  41aecf:	sbb    BYTE PTR [edi+0x5f],ah
  41aed2:	adc    ch,BYTE PTR [ecx-0x4c]
  41aed5:	mov    esp,0x37823182
  41aeda:	in     eax,0x4c
  41aedc:	cdq    
  41aedd:	adc    eax,0xfd3a69dc
  41aee2:	(bad)  
  41aee3:	fmul   st(5),st
  41aee5:	or     edi,DWORD PTR [ebp-0x75]
  41aee8:	lods   eax,DWORD PTR ds:[esi]
  41aee9:	dec    ebp
  41aeea:	sub    eax,0x9079d6df
  41aeef:	dec    esi
  41aef0:	icebp  
  41aef1:	jmp    0xc70d:0x1504ac29
  41aef8:	leave  
  41aef9:	xchg   esp,eax
  41aefa:	push   0xfffffff5
  41aefc:	xor    DWORD PTR [ecx],esp
  41aefe:	add    BYTE PTR [ebp+0x700ae66c],dh
  41af04:	ss inc ecx
  41af06:	mov    al,0x75
  41af08:	test   BYTE PTR [esi+eax*2],bh
  41af0b:	hlt    
  41af0c:	fidiv  DWORD PTR [esi+0x1e472171]
  41af12:	dec    ebx
  41af13:	pop    eax
  41af14:	cwde   
  41af15:	mov    esp,0xe324a8e3
  41af1a:	aad    0x2
  41af1c:	ror    ch,cl
  41af1e:	pop    ebp
  41af1f:	mov    esi,0xe99b5af0
  41af24:	stos   DWORD PTR es:[edi],eax
  41af25:	cli    
  41af26:	mov    dl,0x55
  41af28:	ins    DWORD PTR es:[edi],dx
  41af29:	xor    bl,ch
  41af2b:	leave  
  41af2c:	push   0x8492448
  41af31:	mov    ah,0xf
  41af33:	sub    BYTE PTR [edi+0x563c9a2e],al
  41af39:	mov    dh,0xda
  41af3b:	adc    al,0xda
  41af3d:	mov    edi,0x8c7e22e1
  41af42:	js     0x41afa2
  41af44:	mov    edx,0xbd584a3b
  41af49:	cli    
  41af4a:	loopne 0x41afc6
  41af4c:	push   0x26
  41af4e:	nop
  41af4f:	sbb    DWORD PTR [ebp-0x4],edi
  41af52:	hlt    
  41af53:	(bad)  
  41af54:	outs   dx,DWORD PTR ds:[esi]
  41af55:	scas   eax,DWORD PTR es:[edi]
  41af56:	test   al,0x78
  41af58:	test   DWORD PTR [eax+0x2336cf05],0xd1683b7f
  41af62:	es push ebp
  41af64:	femms  
  41af66:	mov    eax,ss
  41af68:	shl    BYTE PTR [edi+0x5f],cl
  41af6b:	loope  0x41afae
  41af6d:	sahf   
  41af6e:	pop    es
  41af6f:	out    dx,al
  41af70:	in     al,dx
  41af71:	jno    0x41afd3
  41af73:	sbb    al,0xd4
  41af76:	les    esp,FWORD PTR [ebx+0x16]
  41af79:	pop    edx
  41af7a:	repnz mov ah,0x72
  41af7d:	cmp    ecx,DWORD PTR cs:[ebp+0x1a]
  41af81:	push   0xffffffd0
  41af83:	sbb    BYTE PTR [ebx],0xd7
  41af86:	add    eax,0xbd0705de
  41af8b:	xchg   ebx,eax
  41af8c:	in     al,0x74
  41af8e:	out    0xb4,al
  41af90:	lods   eax,DWORD PTR ds:[esi]
  41af91:	push   ss
  41af92:	mov    ebx,0x8ec6d106
  41af97:	rcl    BYTE PTR [edx],cl
  41af99:	jl     0x41afef
  41af9b:	mov    bl,0x38
  41af9d:	imul   DWORD PTR [esi-0x5c4a4ddf]
  41afa3:	fisub  DWORD PTR [edx]
  41afa5:	out    0x3e,al
  41afa7:	xor    dl,BYTE PTR [eax]
  41afa9:	dec    BYTE PTR [esi]
  41afab:	xchg   BYTE PTR [edx+0x7a843efc],bh
  41afb1:	loopne 0x41afe6
  41afb3:	or     al,0xc2
  41afb5:	pop    ds
  41afb6:	mov    bl,0xf1
  41afb8:	cld    
  41afb9:	outs   dx,BYTE PTR ds:[esi]
  41afba:	cmp    al,0x54
  41afbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afbd:	push   ecx
  41afbe:	add    BYTE PTR [edi-0x39],ch
  41afc1:	fbld   TBYTE PTR [esi-0x278aafac]
  41afc7:	mov    ds:0xccddec51,eax
  41afcc:	in     eax,dx
  41afcd:	pop    ebp
  41afce:	vpcmpeqb ymm3,ymm6,YMMWORD PTR [eax]
  41afd2:	push   eax
  41afd3:	mov    cl,0xf4
  41afd5:	rol    BYTE PTR [edi],1
  41afd7:	and    ah,BYTE PTR [ecx+0x5d771b6c]
  41afdd:	into   
  41afde:	dec    edi
  41afdf:	loopne 0x41afb0
  41afe1:	(bad)  
  41afe2:	xchg   ebx,eax
  41afe3:	int3   
  41afe4:	cs jmp 0x41b02f
  41afe7:	out    0x3a,al
  41afe9:	push   edi
  41afea:	sar    BYTE PTR [esi],cl
  41afec:	push   ebx
  41afed:	int3   
  41afee:	mov    dl,ah
  41aff0:	jb     0x41b026
  41aff2:	popa   
  41aff3:	loopne 0x41b02a
  41aff5:	sbb    bh,dl
  41aff7:	jmp    0x3096ddb4
  41affc:	cdq    
  41affd:	clc    
  41affe:	xchg   BYTE PTR ds:0xb9259264,bh
  41b004:	bound  ecx,QWORD PTR [eax+0x11]
  41b007:	je     0x41affd
  41b009:	je     0x41afe8
  41b00b:	fdiv   st,st(0)
  41b00d:	out    0x6b,al
  41b00f:	scas   eax,DWORD PTR es:[edi]
  41b010:	jmp    0xd602:0xf74a1e26
  41b017:	call   DWORD PTR [ebp+0x343ab205]
  41b01d:	fadd   QWORD PTR [eax+0x5c58f1e1]
  41b023:	inc    esp
  41b024:	fiadd  WORD PTR [edi-0x267e3b4]
  41b02a:	ret    
  41b02b:	stc    
  41b02c:	and    al,0xbd
  41b02e:	lahf   
  41b02f:	xchg   esp,eax
  41b030:	fisttp QWORD PTR [edi+ebx*1]
  41b033:	leave  
  41b034:	fiadd  WORD PTR [eax+0x4e]
  41b037:	mov    bl,0xd4
  41b039:	ror    DWORD PTR [ecx+esi*8+0x34f4274f],0xeb
  41b041:	cld    
  41b042:	lods   eax,DWORD PTR ds:[esi]
  41b043:	or     al,0x90
  41b045:	sahf   
  41b046:	add    edx,DWORD PTR [ebp+0x5afeb55e]
  41b04c:	cwde   
  41b04d:	neg    BYTE PTR [ecx]
  41b04f:	mov    eax,ds:0x464e3319
  41b054:	mov    bh,0x73
  41b056:	leave  
  41b057:	lahf   
  41b058:	jo     0x41b0d2
  41b05a:	mov    bl,0x65
  41b05c:	out    dx,eax
  41b05d:	mov    eax,ds:0x535a0390
  41b062:	scas   eax,DWORD PTR es:[edi]
  41b063:	inc    esi
  41b064:	push   edi
  41b065:	jns    0x41b01f
  41b067:	pop    ebx
  41b068:	bound  edi,QWORD PTR [edi-0x14]
  41b06b:	in     eax,dx
  41b06c:	adc    bl,bh
  41b06e:	stos   DWORD PTR es:[edi],eax
  41b06f:	nop
  41b070:	jecxz  0x41b042
  41b072:	shl    DWORD PTR [edi+0x3f],cl
  41b075:	(bad)  
  41b076:	(bad)  
  41b077:	cld    
  41b078:	xor    al,0xc5
  41b07a:	(bad)  
  41b07b:	jmp    0x946e:0xa0862588
  41b082:	add    eax,0x6592c844
  41b087:	push   ebp
  41b088:	sbb    DWORD PTR [ebx],edx
  41b08a:	mov    BYTE PTR [edi+ebp*4],ch
  41b08d:	mov    bh,0xe5
  41b08f:	jmp    0xe03f:0xde95c2
  41b096:	and    BYTE PTR [eax+0x201ffbc4],cl
  41b09c:	push   cs
  41b09d:	jnp    0x41b0a3
  41b09f:	gs call 0xf616:0xb99dcd3d
  41b0a7:	lods   al,BYTE PTR ds:[esi]
  41b0a8:	inc    edi
  41b0a9:	push   eax
  41b0aa:	ret    0xf2d2
  41b0ad:	add    BYTE PTR [ebx],ah
  41b0af:	mov    bl,0xf6
  41b0b1:	mov    al,ds:0xe89c024e
  41b0b6:	loop   0x41b126
  41b0b8:	push   ds
  41b0b9:	sbb    cl,BYTE PTR [eax]
  41b0bb:	cwde   
  41b0bc:	adc    BYTE PTR ds:[ebp-0x25],ch
  41b0c0:	inc    ebx
  41b0c1:	in     eax,dx
  41b0c2:	in     al,0x5
  41b0c4:	into   
  41b0c5:	sub    ch,BYTE PTR ds:0xa01b3f91
  41b0cb:	dec    esp
  41b0cc:	mov    esi,0xda403bb1
  41b0d1:	popa   
  41b0d2:	jbe    0x41b124
  41b0d4:	sub    ecx,esi
  41b0d6:	pop    esi
  41b0d7:	call   ecx
  41b0d9:	mov    esi,DWORD PTR [esi+0x72]
  41b0dc:	sub    DWORD PTR [edx+0x1b],edx
  41b0df:	(bad)  
  41b0e0:	stos   DWORD PTR es:[edi],eax
  41b0e1:	add    al,0xd6
  41b0e3:	dec    esp
  41b0e4:	outs   dx,DWORD PTR ds:[esi]
  41b0e5:	cli    
  41b0e6:	cmc    
  41b0e7:	retf   0xb326
  41b0ea:	leave  
  41b0eb:	fxch   st(7)
  41b0ed:	jg     0x41b091
  41b0ef:	and    eax,0x9193afdb
  41b0f4:	push   eax
  41b0f5:	or     eax,0x4e8219f7
  41b0fa:	leave  
  41b0fb:	cmc    
  41b0fc:	inc    ebx
  41b0fd:	adc    cl,BYTE PTR ds:0xe9c8ad03
  41b103:	xchg   edx,eax
  41b104:	test   dl,dh
  41b106:	shl    bh,1
  41b108:	loope  0x41b0b1
  41b10a:	adc    eax,0x1157cfb4
  41b10f:	test   al,0xe0
  41b111:	fild   DWORD PTR [eax-0x417ef68e]
  41b117:	xor    DWORD PTR [edx+0x71],ebp
  41b11a:	mov    ah,0xce
  41b11c:	mov    bh,0xa6
  41b11e:	in     al,0x7f
  41b120:	inc    esi
  41b121:	outs   dx,BYTE PTR ds:[esi]
  41b122:	imul   esp,DWORD PTR [edi+0x7f],0x73d6c2a1
  41b129:	dec    ecx
  41b12a:	int3   
  41b12b:	aaa    
  41b12c:	xchg   edi,eax
  41b12d:	pusha  
  41b12e:	inc    eax
  41b12f:	xor    al,0x2d
  41b131:	xor    al,0x53
  41b133:	dec    esi
  41b134:	cmp    DWORD PTR ds:0xe69cc75a,ebp
  41b13a:	hlt    
  41b13b:	or     eax,DWORD PTR [edx-0x49]
  41b13e:	sub    DWORD PTR [esi-0x26],esi
  41b141:	stos   BYTE PTR es:[edi],al
  41b142:	enter  0x7879,0x73
  41b146:	(bad)  
  41b147:	xor    eax,0x1ddb2d7f
  41b14c:	daa    
  41b14d:	push   ds
  41b14e:	mov    ebx,0x4a5ac09f
  41b153:	cld    
  41b154:	rol    BYTE PTR [edi+0x668b6631],1
  41b15a:	cld    
  41b15b:	and    ebp,edx
  41b15d:	add    DWORD PTR [edx],eax
  41b15f:	ret    0x3a5b
  41b162:	or     eax,0x913694f4
  41b167:	(bad)  
  41b168:	repz popf 
  41b16a:	je     0x41b0ec
  41b16c:	add    al,0x24
  41b16e:	xchg   esi,eax
  41b16f:	add    eax,0x6eade86f
  41b174:	jl     0x41b136
  41b176:	mov    edx,0x1fd925f6
  41b17b:	push   ecx
  41b17c:	or     BYTE PTR [edi-0x2cae9891],cl
  41b182:	lods   al,BYTE PTR ds:[esi]
  41b183:	hlt    
  41b184:	jecxz  0x41b167
  41b186:	add    al,0x8e
  41b188:	mov    bl,0x5f
  41b18a:	mov    ah,0x94
  41b18c:	lock mov BYTE PTR [edx],bh
  41b18f:	mov    edx,edx
  41b191:	pushf  
  41b192:	pop    edi
  41b193:	js     0x41b181
  41b195:	mov    eax,0x5810c9e7
  41b19a:	lds    esp,FWORD PTR [eax]
  41b19c:	sbb    edx,DWORD PTR [ecx+0x7d]
  41b19f:	dec    esp
  41b1a0:	popa   
  41b1a1:	mov    ebx,0xde96b70b
  41b1a6:	adc    BYTE PTR [ebx+0x58],al
  41b1a9:	in     eax,dx
  41b1aa:	fcom   st(0)
  41b1ac:	ins    BYTE PTR es:[edi],dx
  41b1ad:	inc    eax
  41b1ae:	push   edx
  41b1af:	adc    BYTE PTR [ecx-0x6b],0x31
  41b1b3:	dec    ecx
  41b1b4:	and    DWORD PTR [edx+0x56],esi
  41b1b7:	arpl   cx,cx
  41b1b9:	dec    esp
  41b1ba:	push   edi
  41b1bb:	adc    edx,DWORD PTR [edx+0x1dc3f261]
  41b1c1:	or     al,0xbc
  41b1c3:	and    ch,dl
  41b1c5:	and    dl,al
  41b1c7:	ds loopne 0x41b244
  41b1ca:	pusha  
  41b1cb:	inc    edx
  41b1cc:	stos   BYTE PTR es:[edi],al
  41b1cd:	test   eax,0x8621798c
  41b1d2:	(bad)  
  41b1d3:	cmovb  ecx,DWORD PTR ds:0x1a12e210
  41b1da:	push   ebx
  41b1db:	imul   ecx,DWORD PTR [edi+0x38141cfc],0xb8a85616
  41b1e5:	adc    ecx,DWORD PTR [ebx+0x5f21eaf3]
  41b1eb:	pop    ebx
  41b1ec:	mov    ebp,DWORD PTR [esi+0x770ca2af]
  41b1f2:	dec    ebp
  41b1f3:	inc    ecx
  41b1f4:	aam    0xcb
  41b1f6:	push   ss
  41b1f7:	mov    dh,0xdb
  41b1f9:	or     BYTE PTR [edx-0xa],ah
  41b1fc:	arpl   WORD PTR [ecx-0x37],di
  41b1ff:	or     BYTE PTR ds:0x4c158791,dl
  41b205:	or     BYTE PTR [edx-0xe],ah
  41b208:	in     al,dx
  41b209:	ja     0x41b20d
  41b20b:	push   ds
  41b20c:	dec    ebp
  41b20d:	sbb    al,BYTE PTR [ebp-0x1ef4aedf]
  41b213:	sbb    al,0x71
  41b215:	pop    ebp
  41b216:	in     eax,dx
  41b217:	jmp    0x16b8c032
  41b21c:	and    DWORD PTR [edi+0x76],esp
  41b21f:	lds    edx,FWORD PTR [edi]
  41b221:	out    dx,al
  41b222:	mov    ebp,0x36100045
  41b227:	repnz push 0x34
  41b22a:	and    al,0x8b
  41b22c:	mov    edx,0x8f0dfeda
  41b231:	push   cs
  41b232:	xchg   esi,eax
  41b233:	data16 adc al,0xe7
  41b236:	imul   ecx,DWORD PTR [ebx-0xee56cd3],0xce501ae2
  41b240:	(bad)  
  41b242:	xor    DWORD PTR [edi],edx
  41b244:	push   ebp
  41b245:	mov    dl,0x33
  41b247:	mov    bl,0xee
  41b249:	adc    BYTE PTR [edi+0x3ab21faf],dh
  41b24f:	out    0x18,eax
  41b251:	add    ebp,edi
  41b253:	lock cld 
  41b255:	cmp    bl,BYTE PTR [ecx]
  41b257:	mov    esp,0x1892c8b
  41b25c:	rcr    BYTE PTR ds:0xc24ba8bf,cl
  41b262:	sbb    eax,0xa5778565
  41b267:	rol    DWORD PTR [ebp+0x211d39c5],cl
  41b26d:	retf   
  41b26e:	xchg   esp,eax
  41b26f:	stos   DWORD PTR es:[edi],eax
  41b270:	rol    DWORD PTR [ecx],1
  41b272:	js     0x41b24e
  41b274:	(bad)  [edi+0x40]
  41b277:	inc    ebp
  41b278:	repnz lahf 
  41b27a:	test   ecx,0x57ec201e
  41b280:	loop   0x41b22a
  41b282:	cld    
  41b283:	int3   
  41b284:	mov    esp,0x2ae0eb1e
  41b289:	out    0x93,eax
  41b28b:	push   edx
  41b28c:	sub    al,0xfd
  41b28e:	jns    0x41b25e
  41b290:	xor    edx,DWORD PTR [ebp+edi*1+0x7d]
  41b294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b295:	xchg   DWORD PTR [edx+edi*4+0x5f4d0ab7],edx
  41b29c:	aaa    
  41b29d:	outs   dx,BYTE PTR ds:[esi]
  41b29e:	push   ebx
  41b29f:	gs pop es
  41b2a1:	push   ebp
  41b2a2:	daa    
  41b2a3:	pop    edx
  41b2a4:	je     0x41b24b
  41b2a6:	xor    al,0x6c
  41b2a8:	dec    ebx
  41b2a9:	cs push esp
  41b2ab:	pushf  
  41b2ac:	cwde   
  41b2ad:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41b2af:	mov    al,0xaf
  41b2b1:	inc    edi
  41b2b2:	lds    esp,FWORD PTR ds:0x1e222479
  41b2b8:	mov    DWORD PTR [ecx],esp
  41b2ba:	mov    esp,0xe78d6ded
  41b2bf:	in     al,dx
  41b2c0:	xchg   edi,eax
  41b2c1:	mov    ecx,0x5e4db809
  41b2c6:	stos   BYTE PTR es:[edi],al
  41b2c7:	cs or  al,0xf4
  41b2ca:	call   0x8b1d81ce
  41b2cf:	repz add DWORD PTR [esi],esp
  41b2d2:	cmp    DWORD PTR [eax+0x8],edi
  41b2d5:	out    dx,al
  41b2d6:	scas   eax,DWORD PTR es:[edi]
  41b2d7:	fisub  DWORD PTR [esi+ecx*2]
  41b2da:	jle    0x41b33d
  41b2dc:	loop   0x41b2fb
  41b2de:	imul   BYTE PTR [edi-0xb]
  41b2e1:	jle    0x41b2f5
  41b2e3:	jno    0x41b33e
  41b2e5:	inc    eax
  41b2e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2e7:	aas    
  41b2e8:	ret    0x9f05
  41b2eb:	jns    0x41b327
  41b2ed:	mov    bh,BYTE PTR [edi+ebx*4-0x1112f6f0]
  41b2f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2f5:	(bad)  
  41b2f6:	pop    ebx
  41b2f7:	adc    al,BYTE PTR [ebp+0x60dd7ea6]
  41b2fd:	mov    cl,0x84
  41b2ff:	jg     0x41b29a
  41b301:	scas   eax,DWORD PTR es:[edi]
  41b302:	mov    cl,0xbc
  41b304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b305:	imul   ebx,DWORD PTR [edi-0x15],0x4e335a37
  41b30c:	adc    ch,BYTE PTR [esp+esi*2-0x2c]
  41b310:	cs and ebp,edx
  41b313:	arpl   WORD PTR [edx+0x27b88f07],sp
  41b319:	aam    0x7e
  41b31b:	mov    edi,0xcf2ac176
  41b320:	mov    ds:0x99227551,al
  41b325:	shr    BYTE PTR [eax-0x463143fe],cl
  41b32b:	loope  0x41b2e6
  41b32d:	fisttp QWORD PTR [edx+0x57]
  41b330:	jecxz  0x41b2f2
  41b332:	cmp    eax,0x2c65c887
  41b337:	fdiv   QWORD PTR [ecx+0x404c93b1]
  41b33d:	sub    al,0x31
  41b33f:	and    ah,BYTE PTR [esi-0x14]
  41b342:	xlat   BYTE PTR ds:[ebx]
  41b343:	mov    BYTE PTR [eax+0x73],0xd8
  41b347:	test   BYTE PTR [esp+eax*1-0x67],bh
  41b34b:	aas    
  41b34c:	sbb    cl,BYTE PTR [edi-0xf]
  41b34f:	loopne 0x41b39e
  41b351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b352:	fdivr  st,st(5)
  41b354:	push   eax
  41b355:	in     al,dx
  41b356:	ror    DWORD PTR [ebx+0x42],0x49
  41b35a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b35b:	adc    BYTE PTR [edx-0x1ffb4a70],ah
  41b361:	arpl   dx,sp
  41b363:	pusha  
  41b364:	gs adc esp,ebx
  41b367:	cmp    BYTE PTR [edi],dl
  41b369:	mov    ebx,0x6d3da59f
  41b36e:	pop    ebx
  41b36f:	clc    
  41b370:	inc    ebx
  41b371:	test   DWORD PTR [ebx],ebp
  41b373:	push   ds
  41b374:	adc    BYTE PTR [ebx],dh
  41b376:	lahf   
  41b377:	add    eax,0x49975642
  41b37c:	out    0x69,al
  41b37e:	(bad)  [ebx+ecx*1]
  41b381:	es push 0xfc65693
  41b387:	imul   esp,esi,0x6d067ee0
  41b38d:	add    BYTE PTR [esi+0x5f27318],al
  41b393:	jge    0x41b325
  41b395:	dec    ebp
  41b396:	jmp    0x41b3a1
  41b398:	push   0xffffffe2
  41b39a:	cmp    ch,BYTE PTR [ebp+0x2207d72c]
  41b3a0:	add    edi,edx
  41b3a2:	and    cl,BYTE PTR [ecx-0x4c]
  41b3a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3a6:	stc    
  41b3a7:	xor    dl,BYTE PTR [edi+ecx*1-0x64]
  41b3ab:	(bad)  
  41b3ad:	dec    ebp
  41b3ae:	adc    esp,eax
  41b3b0:	xchg   edi,eax
  41b3b1:	shl    BYTE PTR [ebx-0x7febe40],0x5a
  41b3b8:	loop   0x41b398
  41b3ba:	jo     0x41b358
  41b3bc:	sub    eax,0xd2e3050a
  41b3c1:	push   ecx
  41b3c2:	adc    BYTE PTR [ebp+0x71469d6a],0x76
  41b3c9:	fs sti 
  41b3cb:	mov    ah,0x76
  41b3cd:	mov    cl,0x20
  41b3cf:	inc    BYTE PTR [eax+ebx*2+0x17e22f0d]
  41b3d6:	fwait
  41b3d7:	pop    edi
  41b3d8:	in     al,dx
  41b3d9:	pop    ebx
  41b3da:	xchg   ebx,eax
  41b3db:	and    edi,ebp
  41b3dd:	ins    DWORD PTR es:[edi],dx
  41b3de:	(bad)  [eax]
  41b3e0:	adc    BYTE PTR [eax+0x17],ah
  41b3e3:	jno    0x41b3ba
  41b3e5:	pop    edi
  41b3e6:	cmp    bh,BYTE PTR [esi-0x5a]
  41b3e9:	jge    0x41b450
  41b3eb:	(bad)  
  41b3ec:	lds    ecx,FWORD PTR [esi]
  41b3ee:	je     0x41b371
  41b3f0:	(bad)  
  41b3f1:	frstor [edx-0x7cbaf4e3]
  41b3f7:	std    
  41b3f8:	arpl   WORD PTR [edx],ax
  41b3fa:	cmp    eax,0xe844668f
  41b3ff:	pop    ebp
  41b400:	pop    ds
  41b401:	clc    
  41b402:	jge    0x41b38d
  41b404:	and    BYTE PTR [ebp+0x28],dl
  41b407:	add    DWORD PTR [ebx+0x5e],ebp
  41b40a:	xchg   ebx,eax
  41b40b:	icebp  
  41b40c:	lock jl 0x41b40e
  41b40f:	popa   
  41b410:	adc    esp,DWORD PTR [edx]
  41b412:	mov    bl,0x99
  41b414:	addr16 ja 0x41b3cd
  41b417:	into   
  41b418:	std    
  41b419:	scas   eax,DWORD PTR es:[edi]
  41b41a:	and    al,0x12
  41b41c:	cld    
  41b41d:	add    DWORD PTR [ecx],ebx
  41b41f:	xchg   BYTE PTR [edi-0x1249b790],dh
  41b425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b426:	js     0x41b48c
  41b428:	xchg   edx,eax
  41b429:	rcl    BYTE PTR [ebp+0x528d2b57],0x56
  41b430:	mov    ah,0x1
  41b432:	div    BYTE PTR [eax+0x31]
  41b435:	dec    esi
  41b436:	and    eax,ecx
  41b438:	ins    DWORD PTR es:[edi],dx
  41b439:	inc    edi
  41b43a:	(bad)  
  41b43b:	pop    es
  41b43c:	mov    ah,0x3a
  41b43e:	push   esp
  41b43f:	bound  ebx,QWORD PTR [edx+0x695fcc69]
  41b445:	add    al,0x8d
  41b447:	xor    DWORD PTR [esi],ecx
  41b449:	aad    0x1b
  41b44b:	(bad)  
  41b44c:	aam    0x32
  41b44e:	inc    ecx
  41b44f:	pop    edx
  41b450:	or     ah,al
  41b452:	out    0x32,eax
  41b454:	adc    eax,0x2ad279d8
  41b459:	cli    
  41b45a:	or     BYTE PTR [ecx-0x3385a3ae],dl
  41b460:	out    dx,eax
  41b461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b462:	push   0xffffffe5
  41b464:	ret    
  41b465:	xchg   esp,eax
  41b466:	push   ds
  41b467:	std    
  41b468:	div    ebx
  41b46a:	xchg   esi,eax
  41b46b:	mov    eax,ds:0x7fb3480d
  41b470:	xchg   DWORD PTR [ebp+0x77],esp
  41b473:	in     eax,0xb8
  41b475:	fisttp DWORD PTR [ebx]
  41b477:	sbb    esi,DWORD PTR [edx-0x2c]
  41b47a:	and    al,0x10
  41b47c:	pop    es
  41b47d:	not    dl
  41b47f:	dec    eax
  41b480:	in     eax,dx
  41b481:	arpl   WORD PTR [ecx],bp
  41b483:	add    dl,0x40
  41b486:	stos   DWORD PTR es:[edi],eax
  41b487:	ret    0x8e61
  41b48a:	test   BYTE PTR [edx+ebx*4],ch
  41b48d:	std    
  41b48e:	bound  esi,QWORD PTR [esi+0x9]
  41b491:	fdiv   st(3),st
  41b493:	dec    edi
  41b495:	ret    0xf70f
  41b498:	push   ecx
  41b49a:	or     eax,0x4bd85408
  41b49f:	sub    BYTE PTR [ebx+0x548e232c],dh
  41b4a5:	lods   al,BYTE PTR ds:[esi]
  41b4a6:	sahf   
  41b4a7:	dec    cx
  41b4a9:	xor    al,0x8a
  41b4ab:	adc    ch,dh
  41b4ad:	jle    0x41b474
  41b4af:	xchg   esi,eax
  41b4b0:	cmp    DWORD PTR [eax+0x4],edi
  41b4b3:	adc    eax,0x3eec06e2
  41b4b8:	sahf   
  41b4b9:	fcmovu st,st(4)
  41b4bb:	sub    edi,ecx
  41b4bd:	(bad)  
  41b4be:	mov    esi,0x3c9b456
  41b4c3:	xchg   edx,eax
  41b4c4:	sti    
  41b4c5:	not    DWORD PTR [edx]
  41b4c7:	and    al,0x55
  41b4c9:	xor    BYTE PTR [edi-0x29e62896],0xce
  41b4d0:	aaa    
  41b4d1:	xor    al,0x95
  41b4d3:	jle    0x41b4ff
  41b4d5:	rol    DWORD PTR [edx-0x73],cl
  41b4d8:	call   0xfd39d4da
  41b4dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4de:	ret    
  41b4df:	xchg   ebx,eax
  41b4e0:	add    al,0xc6
  41b4e2:	xchg   esi,eax
  41b4e3:	sbb    DWORD PTR [eax-0x6d79a4d4],0x5fb962be
  41b4ed:	inc    edi
  41b4ee:	and    edi,ebx
  41b4f0:	les    ecx,FWORD PTR [ebp-0x4e8617e7]
  41b4f6:	mov    dh,0x95
  41b4f8:	into   
  41b4f9:	pop    ecx
  41b4fa:	shl    DWORD PTR [ebx-0x61e68a72],0x9e
  41b501:	mov    eax,0x1a9b02b9
  41b506:	or     eax,0x841bfc5e
  41b50b:	ja     0x41b4a0
  41b50d:	ret    
  41b50e:	imul   BYTE PTR [esi+0x63]
  41b511:	arpl   WORD PTR [esi],dx
  41b513:	dec    eax
  41b514:	adc    eax,0x8f5c5ad5
  41b519:	dec    ebx
  41b51a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b51b:	pop    esp
  41b51c:	fadd   QWORD PTR [eax+0xa3e2397]
  41b522:	mov    fs,WORD PTR fs:[edi]
  41b525:	ret    
  41b526:	push   ss
  41b527:	adc    ecx,ecx
  41b529:	(bad)  
  41b52b:	dec    edi
  41b52c:	daa    
  41b52d:	hlt    
  41b52e:	cs jl  0x41b4d0
  41b531:	cs or  eax,0x9fb7941d
  41b537:	push   es
  41b538:	cmp    eax,0x580317b4
  41b53d:	addr16 jns 0x41b526
  41b540:	sub    DWORD PTR [edi],esp
  41b542:	mov    edi,0x4ab00f0e
  41b547:	cwde   
  41b548:	xor    ebx,DWORD PTR ds:0x80e5302a
  41b54e:	sahf   
  41b54f:	jnp    0x41b4da
  41b551:	or     edi,esi
  41b553:	and    ah,BYTE PTR [ecx]
  41b555:	aam    0x53
  41b557:	fwait
  41b558:	mov    eax,0x15ecc096
  41b55d:	outs   dx,DWORD PTR ds:[esi]
  41b55e:	call   0xb754:0x860f0d4
  41b565:	xor    ch,dl
  41b567:	hlt    
  41b568:	ficom  DWORD PTR [eax-0xdb396de]
  41b56e:	daa    
  41b56f:	inc    esi
  41b570:	bound  eax,QWORD PTR [ebp-0x3]
  41b573:	sbb    DWORD PTR [ecx-0x5d52bae7],edi
  41b579:	ss cmp eax,0x6fdabb7a
  41b57f:	xor    ecx,ebp
  41b581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b582:	lods   al,BYTE PTR ds:[esi]
  41b583:	pop    ecx
  41b584:	fsub   QWORD PTR [eax-0x74]
  41b587:	test   DWORD PTR [esi+0x46],esp
  41b58a:	pushf  
  41b58b:	xchg   edi,eax
  41b58c:	scas   eax,DWORD PTR es:[edi]
  41b58d:	repnz les ecx,FWORD PTR [esi+0x9]
  41b591:	sbb    eax,0x63346fd2
  41b596:	ret    0xbcc3
  41b599:	outs   dx,DWORD PTR ds:[esi]
  41b59a:	cmp    bl,BYTE PTR [ecx-0x58948e67]
  41b5a0:	cmp    eax,0x5b16f558
  41b5a5:	sub    al,0x88
  41b5a7:	lds    edx,FWORD PTR cs:[ecx-0x78]
  41b5ab:	sub    DWORD PTR [ebp+eiz*2-0x22],ebx
  41b5af:	ja     0x41b548
  41b5b1:	stos   BYTE PTR es:[edi],al
  41b5b2:	jg     0x41b5c1
  41b5b4:	and    eax,0xc1c4adb
  41b5b9:	pusha  
  41b5ba:	bound  ebx,QWORD PTR [edi-0x2d1d255e]
  41b5c0:	push   es
  41b5c1:	test   DWORD PTR [ebx],0xd04dfac8
  41b5c7:	mov    DWORD PTR [edi],esp
  41b5c9:	scas   eax,DWORD PTR es:[edi]
  41b5ca:	push   esi
  41b5cb:	inc    edx
  41b5cc:	or     DWORD PTR [esp+eax*8-0x80],esp
  41b5d0:	adc    al,0xb6
  41b5d2:	mov    dl,0x63
  41b5d4:	sub    al,0xb1
  41b5d6:	leave  
  41b5d7:	xor    BYTE PTR [eax-0x6e],ah
  41b5da:	ds aad 0xf9
  41b5dd:	std    
  41b5de:	inc    esi
  41b5df:	jg     0x41b56c
  41b5e1:	xor    esp,DWORD PTR [ebp-0x6732369]
  41b5e7:	add    BYTE PTR [eax+0x27],dh
  41b5ea:	ret    0x7ba1
  41b5ed:	jbe    0x41b593
  41b5ef:	sbb    edi,eax
  41b5f1:	sbb    bh,ah
  41b5f3:	sbb    eax,0xeb3eba25
  41b5f8:	jg     0x41b5a7
  41b5fa:	xchg   ecx,eax
  41b5fb:	xor    ah,BYTE PTR [edi+eax*1-0x181bc2ff]
  41b602:	pop    eax
  41b603:	xchg   ebx,eax
  41b604:	aas    
  41b605:	or     BYTE PTR [eax],dl
  41b607:	or     DWORD PTR [eax-0xa],eax
  41b60a:	or     cl,bl
  41b60c:	mov    ch,BYTE PTR [ebx-0x6d116c50]
  41b612:	push   eax
  41b613:	ins    DWORD PTR es:[edi],dx
  41b614:	sub    ebp,esi
  41b616:	mov    ebp,cs
  41b618:	xchg   esp,eax
  41b619:	mov    esp,0x2ce85d94
  41b61e:	lea    ecx,[edx-0x73a7bfc1]
  41b624:	arpl   WORD PTR [ebx+0x19c502a6],sp
  41b62a:	add    ah,dl
  41b62c:	mov    esi,0xe4a33d7
  41b631:	and    eax,0x676440bc
  41b636:	push   edi
  41b637:	stos   BYTE PTR es:[edi],al
  41b638:	inc    esp
  41b639:	cli    
  41b63a:	jl     0x41b607
  41b63c:	aad    0x61
  41b63e:	retf   0x16f9
  41b641:	jne    0x41b66e
  41b643:	in     eax,dx
  41b644:	add    al,0x8c
  41b646:	pop    edi
  41b647:	xor    al,0x85
  41b649:	cwde   
  41b64a:	push   edi
  41b64b:	xor    eax,0x23203d5e
  41b650:	aaa    
  41b651:	xor    edi,DWORD PTR [esi]
  41b653:	jmp    0x41b6ab
  41b655:	clc    
  41b656:	inc    ecx
  41b657:	jp     0x41b671
  41b659:	xchg   edx,eax
  41b65a:	ror    bh,1
  41b65c:	call   DWORD PTR fs:[ecx-0x82a0fae]
  41b663:	or     BYTE PTR [edx+0x5],ah
  41b666:	jecxz  0x41b6ab
  41b668:	dec    edx
  41b669:	leave  
  41b66a:	adc    ecx,DWORD PTR [esi-0x419b9565]
  41b670:	mov    edx,esp
  41b672:	pop    edi
  41b673:	bound  edi,QWORD PTR [eax+0x4f]
  41b676:	hlt    
  41b677:	cmp    al,0x7c
  41b679:	sbb    BYTE PTR [eax+0x6f],ah
  41b67c:	icebp  
  41b67d:	pop    esp
  41b67e:	cli    
  41b67f:	shl    BYTE PTR [ebx+ebp*2+0x6534912b],1
  41b686:	push   ebp
  41b687:	cld    
  41b688:	mov    es,WORD PTR [eax-0x4c059279]
  41b68e:	sbb    esp,DWORD PTR [ebx+0x2d]
  41b691:	fadd   QWORD PTR [ebx-0x142b5351]
  41b697:	mov    ebx,0xbbdad01
  41b69c:	in     eax,dx
  41b69d:	fcmovnbe st,st(5)
  41b69f:	add    ebx,DWORD PTR [edx]
  41b6a1:	push   0x4f52e8f6
  41b6a6:	push   cs
  41b6a7:	test   BYTE PTR [edx-0x328037a1],0xa4
  41b6ae:	mov    ah,0x5
  41b6b0:	ror    BYTE PTR [edx+0x58421834],1
  41b6b6:	xor    BYTE PTR [edi-0x33],dl
  41b6b9:	call   0x664ecf2c
  41b6be:	pop    esi
  41b6bf:	ja     0x41b649
  41b6c1:	mov    es,WORD PTR [ecx]
  41b6c3:	mov    cl,0x9a
  41b6c5:	mov    edx,0x78322b43
  41b6ca:	pushf  
  41b6cb:	hlt    
  41b6cc:	sub    BYTE PTR [ebp+0x64],ah
  41b6cf:	ds shr esi,cl
  41b6d2:	xchg   ebp,eax
  41b6d3:	test   al,0xf4
  41b6d5:	xor    DWORD PTR [esi+0x34],edx
  41b6d8:	jnp    0x41b702
  41b6da:	in     eax,0xda
  41b6dc:	lods   eax,DWORD PTR ds:[esi]
  41b6dd:	and    DWORD PTR [eax+0x62b3b4b],0x2bd370c3
  41b6e7:	mov    bl,0xf1
  41b6e9:	jmp    0xc3c:0xcac07527
  41b6f0:	in     al,0x30
  41b6f2:	lea    ecx,[ebx]
  41b6f4:	call   0x1acd5fad
  41b6f9:	in     eax,0xa4
  41b6fb:	pop    esp
  41b6fc:	cmp    al,0xcd
  41b6fe:	repnz in eax,dx
  41b700:	pop    edx
  41b701:	mov    ah,0xaf
  41b703:	repz enter 0x2795,0x4e
  41b708:	adc    eax,0xb085dd43
  41b70d:	retf   
  41b70e:	hlt    
  41b70f:	cmp    BYTE PTR [esi-0x6b81411c],ah
  41b715:	push   cs
  41b716:	mov    bh,0xbc
  41b718:	jbe    0x41b69a
  41b71a:	adc    cl,BYTE PTR [ebp+0x5688989]
  41b720:	mov    ah,0xdb
  41b722:	mov    edx,0x28475ac2
  41b727:	(bad)  
  41b728:	dec    eax
  41b729:	aam    0x3f
  41b72b:	lods   al,BYTE PTR ds:[esi]
  41b72c:	jmp    0xbef5f8ef
  41b731:	jne    0x41b7ad
  41b733:	and    esp,DWORD PTR [eax]
  41b735:	xchg   ebp,eax
  41b736:	test   DWORD PTR [esi+0x1e],edx
  41b739:	adc    al,0x7e
  41b73b:	pop    ebp
  41b73c:	js     0x41b6f9
  41b73e:	stos   DWORD PTR es:[edi],eax
  41b73f:	jp     0x41b72d
  41b741:	push   cs
  41b742:	jnp    0x41b6ca
  41b744:	push   edi
  41b745:	push   esp
  41b746:	add    BYTE PTR [ebp+0x68381904],dl
  41b74c:	xchg   ebp,eax
  41b74d:	jmp    0x1549a9d2
  41b752:	aas    
  41b753:	sbb    esp,ebx
  41b755:	or     edx,DWORD PTR [edi+ebp*8+0x7d]
  41b759:	enter  0x3f57,0xf3
  41b75d:	outs   dx,BYTE PTR ds:[esi]
  41b75e:	ror    ah,cl
  41b760:	push   ebp
  41b761:	sub    eax,0x67d68497
  41b766:	jmp    0x59b4:0xfa7772b7
  41b76d:	fld    TBYTE PTR ds:0x7eb82cf3
  41b773:	sub    eax,0xce93984c
  41b778:	data16 xchg cl,cl
  41b77b:	pop    ebx
  41b77c:	mov    ?,WORD PTR [eax-0x2c]
  41b77f:	sbb    BYTE PTR [ebx-0x2b9d1845],dh
  41b785:	test   ch,dl
  41b787:	repnz repnz sub ecx,DWORD PTR [esp+edi*1-0x410d067a]
  41b790:	ja     0x41b789
  41b792:	scas   eax,DWORD PTR es:[edi]
  41b793:	dec    ebp
  41b794:	dec    esp
  41b795:	pop    edi
  41b796:	adc    edi,ecx
  41b798:	pop    ebx
  41b799:	jl     0x41b7e3
  41b79b:	mov    eax,ds:0x48ec5389
  41b7a0:	data16 into 
  41b7a2:	inc    ebx
  41b7a3:	mov    BYTE PTR [ebp+0x6f],bl
  41b7a6:	mov    dl,bh
  41b7a8:	aad    0x8a
  41b7aa:	and    BYTE PTR [ebp-0x1e],cl
  41b7ad:	(bad)  
  41b7ae:	(bad)  [edi+0x74]
  41b7b1:	in     al,dx
  41b7b2:	ret    
  41b7b3:	in     al,0x59
  41b7b5:	shl    bl,0xc1
  41b7b8:	cdq    
  41b7b9:	rcr    DWORD PTR [edx+0x7bd1db78],cl
  41b7bf:	xchg   esp,eax
  41b7c0:	out    0x3b,al
  41b7c2:	and    dh,BYTE PTR [edi+0x3866d013]
  41b7c8:	stc    
  41b7c9:	and    BYTE PTR [ebx],ch
  41b7cb:	stc    
  41b7cc:	aam    0x91
  41b7ce:	loop   0x41b81c
  41b7d0:	mov    ds:0xa64a6b29,al
  41b7d5:	pop    es
  41b7d6:	pop    ecx
  41b7d7:	sub    bh,BYTE PTR [edx]
  41b7d9:	adc    al,0xbe
  41b7db:	jne    0x41b77f
  41b7dd:	xor    DWORD PTR [ebp+0x6f81331f],edi
  41b7e3:	and    BYTE PTR [ebx],bh
  41b7e5:	push   ebp
  41b7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7e7:	push   0xffffff97
  41b7e9:	jl     0x41b7be
  41b7eb:	jle    0x41b7f5
  41b7ed:	iret   
  41b7ee:	xor    BYTE PTR [edx+0x62768324],0x62
  41b7f5:	in     al,0xf3
  41b7f7:	adc    BYTE PTR [esi-0x261c31dd],cl
  41b7fd:	cmp    eax,0xb58fb188
  41b802:	push   edx
  41b803:	(bad)  [esi]
  41b805:	adc    edi,ecx
  41b807:	mov    edx,0x2fd153ea
  41b80c:	xchg   edx,eax
  41b80d:	jmp    0x41b87d
  41b80f:	pop    ss
  41b810:	sub    cl,BYTE PTR [ebx+0x576269a5]
  41b816:	and    edx,esp
  41b818:	xchg   DWORD PTR [edx+edx*8+0x57d976d7],eax
  41b81f:	xchg   edi,eax
  41b820:	add    eax,0x703741ba
  41b825:	add    ah,ah
  41b827:	sub    esp,DWORD PTR [edi]
  41b829:	sti    
  41b82a:	lea    ecx,[ebx+0x1a7463ee]
  41b830:	test   eax,0xf0eef379
  41b835:	mov    al,0xc
  41b837:	ss aas 
  41b839:	mov    ebx,esi
  41b83b:	retf   
  41b83c:	mov    cs,WORD PTR [ecx+0x48]
  41b83f:	mov    esp,0xfa9b0b4d
  41b844:	outs   dx,DWORD PTR ds:[esi]
  41b845:	fimul  WORD PTR [ecx-0x3283b1a9]
  41b84b:	mov    ebp,0x75fb0585
  41b850:	mov    ds:0xc3b47080,al
  41b855:	pop    ecx
  41b856:	pop    ebp
  41b857:	jmp    edi
  41b859:	sbb    edx,DWORD PTR [eax]
  41b85b:	pusha  
  41b85c:	sti    
  41b85d:	aaa    
  41b85e:	lock fisubr DWORD PTR [edx+0x52]
  41b862:	outs   dx,BYTE PTR ds:[esi]
  41b863:	mov    ds:0x8044d28f,al
  41b868:	shr    DWORD PTR [edi+0xd],0x87
  41b86c:	pushf  
  41b86d:	push   0x78
  41b86f:	or     dl,BYTE PTR [eax-0x42c871ff]
  41b875:	or     bl,BYTE PTR [ebp-0x7]
  41b878:	adc    al,0xb2
  41b87a:	pop    es
  41b87b:	cld    
  41b87c:	add    edi,ecx
  41b87e:	mov    edi,0xb4f6e7b0
  41b883:	cmp    dl,al
  41b885:	mov    al,0x3
  41b887:	sbb    al,0x91
  41b889:	xchg   cl,dh
  41b88b:	inc    edx
  41b88c:	cwde   
  41b88d:	outs   dx,DWORD PTR ds:[esi]
  41b88e:	and    DWORD PTR ds:0x33e72b6d,eax
  41b894:	or     al,0x73
  41b896:	add    al,0x22
  41b898:	mov    bl,0x2d
  41b89a:	jmp    0x2883:0x6fb4f562
  41b8a1:	popf   
  41b8a2:	out    0x3e,al
  41b8a4:	jecxz  0x41b891
  41b8a6:	jge    0x41b83a
  41b8a8:	cdq    
  41b8a9:	out    0x73,eax
  41b8ab:	mov    BYTE PTR [edi-0x6d],al
  41b8ae:	sub    al,0xef
  41b8b0:	mov    ebx,0x21aebf9d
  41b8b5:	dec    ebp
  41b8b6:	popa   
  41b8b7:	retf   0xd4f
  41b8ba:	pop    esi
  41b8bb:	sbb    bh,BYTE PTR [ebp-0x29]
  41b8be:	iret   
  41b8bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8c0:	sar    bh,cl
  41b8c2:	sbb    ecx,DWORD PTR [esi-0x7c9b7cdf]
  41b8c8:	pop    ds
  41b8c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8ca:	mov    ds:0x9e95e7af,al
  41b8cf:	dec    edi
  41b8d0:	pushf  
  41b8d1:	push   ebx
  41b8d2:	inc    edx
  41b8d3:	mov    ebx,0x28014411
  41b8d8:	adc    eax,0xf3919a8
  41b8dd:	popa   
  41b8de:	cmp    eax,0xbd683582
  41b8e3:	lock test DWORD PTR [ebx],eax
  41b8e6:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8e8:	mov    ds:0x8ad5307,al
  41b8ed:	add    BYTE PTR [edi],0xdd
  41b8f0:	sub    BYTE PTR [edx],bh
  41b8f2:	mov    ecx,0x7db01c9c
  41b8f7:	xor    ch,BYTE PTR [ebx]
  41b8f9:	cdq    
  41b8fa:	(bad)  
  41b8fb:	call   0x110cbe2e
  41b900:	retf   
  41b901:	jle    0x41b971
  41b903:	clc    
  41b904:	data16 (bad) 
  41b907:	mov    cs,WORD PTR [ecx]
  41b909:	mov    eax,0x8dceb72b
  41b90e:	cmp    edi,DWORD PTR [ebp+edx*8-0x3acb6432]
  41b915:	(bad)  
  41b917:	inc    edi
  41b918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b919:	aad    0x77
  41b91b:	daa    
  41b91c:	pushf  
  41b91d:	outs   dx,BYTE PTR ds:[esi]
  41b91e:	(bad)  
  41b91f:	das    
  41b920:	sti    
  41b921:	mov    bh,0xe2
  41b923:	mov    ds:0x55804e38,eax
  41b928:	sub    eax,0x28e419a2
  41b92d:	and    DWORD PTR [ebx],0xd9bcf310
  41b933:	(bad)  
  41b934:	push   ecx
  41b935:	inc    ebp
  41b936:	inc    ecx
  41b937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b938:	dec    edx
  41b939:	retf   
  41b93a:	dec    ebx
  41b93b:	aaa    
  41b93c:	(bad)  
  41b93d:	fiadd  WORD PTR [ebx+0xbfb0a2b]
  41b943:	mov    edx,0x7337f00f
  41b948:	test   BYTE PTR [edx+eiz*4-0xcae4b77],dl
  41b94f:	mov    cl,BYTE PTR [edx-0x27]
  41b952:	dec    edx
  41b953:	call   0x3c2504fb
  41b958:	je     0x41b8dd
  41b95a:	mov    al,0xc8
  41b95c:	nop
  41b95d:	std    
  41b95e:	inc    BYTE PTR [ebp+0x63]
  41b961:	sub    DWORD PTR [eax],edx
  41b963:	imul   esi,DWORD PTR [eax-0x2a],0x9c1289c5
  41b96a:	stos   BYTE PTR es:[edi],al
  41b96b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b96c:	push   ebp
  41b96d:	in     al,dx
  41b96e:	retf   0xbef8
  41b971:	int3   
  41b972:	jne    0x41b9ac
  41b974:	in     eax,0xec
  41b976:	lds    ebx,FWORD PTR [esi-0x7b320e24]
  41b97c:	jle    0x41b9a9
  41b97e:	jb     0x41b9d7
  41b980:	xchg   esp,eax
  41b981:	cmp    DWORD PTR [ebp+0x19fc6cf9],eax
  41b987:	sbb    DWORD PTR [edx+0x3b],esp
  41b98a:	fcom   st(5)
  41b98c:	push   ebp
  41b98d:	and    al,0x59
  41b98f:	lods   eax,DWORD PTR ds:[esi]
  41b990:	cmp    esp,esi
  41b992:	and    ebp,ebp
  41b994:	sbb    ecx,DWORD PTR ds:0x73ad8926
  41b99a:	call   0x73c9:0xa5f48cff
  41b9a1:	add    bl,BYTE PTR [edi]
  41b9a3:	adc    BYTE PTR [eax+0x19f2a96f],ah
  41b9a9:	stc    
  41b9aa:	bound  esp,QWORD PTR [esi+0x48]
  41b9ad:	or     eax,0xe143299
  41b9b2:	test   al,0x56
  41b9b4:	das    
  41b9b5:	cld    
  41b9b6:	test   al,0xd
  41b9b8:	sub    BYTE PTR ds:0x41a2a334,0xe3
  41b9bf:	xor    dh,ch
  41b9c1:	jbe    0x41b9c6
  41b9c3:	std    
  41b9c4:	icebp  
  41b9c5:	ret    0x5f3
  41b9c8:	cs and al,bl
  41b9cb:	call   0x271e943c
  41b9d0:	mov    ds:0xd6409abc,al
  41b9d5:	in     eax,dx
  41b9d6:	dec    ecx
  41b9d7:	jl     0x41b967
  41b9d9:	pop    edx
  41b9da:	and    eax,0x1bed2466
  41b9df:	sar    BYTE PTR [edx-0x2],0xc2
  41b9e3:	popf   
  41b9e4:	fcom   QWORD PTR [ecx]
  41b9e6:	push   edi
  41b9e7:	or     cl,BYTE PTR [edi-0x7f]
  41b9ea:	and    edx,eax
  41b9ec:	cmp    eax,0x1dbfb562
  41b9f1:	xor    edi,0x321cc574
  41b9f7:	or     al,0xdc
  41b9f9:	inc    edx
  41b9fa:	push   ds
  41b9fb:	(bad)  
  41b9fc:	std    
  41b9fd:	xor    eax,0xb2000576
  41ba02:	clc    
  41ba03:	or     ebx,edi
  41ba05:	int    0x86
  41ba07:	pop    edx
  41ba08:	pop    ebx
  41ba09:	mov    al,0x6b
  41ba0b:	mov    al,ds:0x87955d23
  41ba10:	hlt    
  41ba11:	stc    
  41ba12:	jae    0x41ba0e
  41ba14:	in     eax,dx
  41ba15:	in     eax,dx
  41ba16:	repnz mov eax,ds:0x1957c1e5
  41ba1c:	add    esp,esi
  41ba1e:	xor    ecx,esi
  41ba20:	das    
  41ba21:	pushf  
  41ba22:	push   esp
  41ba23:	mov    esp,0xcb3e408
  41ba28:	pop    edi
  41ba29:	repnz rcl BYTE PTR [eax+0x54],0x16
  41ba2e:	sub    dl,BYTE PTR fs:[edx+0x2c]
  41ba32:	lahf   
  41ba33:	lock cmp bh,BYTE PTR [edi]
  41ba36:	cmp    ch,BYTE PTR [edi]
  41ba38:	inc    eax
  41ba39:	xchg   ebx,eax
  41ba3a:	mov    ah,bl
  41ba3c:	sbb    al,0x2d
  41ba3e:	(bad)
  41ba42:	pop    ebp
  41ba43:	pop    ss
  41ba44:	fst    st(4)
  41ba46:	sub    eax,0xa773a721
  41ba4b:	bound  esp,QWORD PTR [edx-0x6942a3e2]
  41ba51:	pop    ebp
  41ba52:	adc    BYTE PTR [edi+edx*8],cl
  41ba55:	lea    esp,[ecx]
  41ba57:	inc    ebx
  41ba58:	mov    edx,0xe1049818
  41ba5d:	std    
  41ba5e:	pop    edx
  41ba5f:	or     ebp,ecx
  41ba61:	jb     0x41ba4b
  41ba63:	mov    dl,bh
  41ba65:	mov    ah,0x1b
  41ba67:	inc    esp
  41ba68:	addr16 dec ebp
  41ba6a:	call   0xd40b:0xccfdcec1
  41ba71:	(bad)  
  41ba72:	shr    DWORD PTR [esi+ecx*1],1
  41ba75:	ss dec esp
  41ba77:	(bad)  
  41ba78:	sti    
  41ba79:	jmp    0x41ba4b
  41ba7b:	pop    eax
  41ba7c:	sbb    DWORD PTR [ebp-0x3e07c749],ecx
  41ba82:	add    esp,DWORD PTR [edx-0x4e]
  41ba85:	mov    DWORD PTR [ecx+eiz*8-0x37],edx
  41ba89:	pop    ds
  41ba8a:	sub    eax,0xc4af37e2
  41ba8f:	aad    0x9f
  41ba91:	aas    
  41ba92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba93:	imul   edx,DWORD PTR [edx],0xb17e78f4
  41ba99:	add    esp,DWORD PTR [ebx+0x62407ac1]
  41ba9f:	cmp    BYTE PTR [ecx],dl
  41baa1:	sti    
  41baa2:	(bad)  
  41baa3:	cmp    BYTE PTR [edi+0x24c3ad28],ch
  41baa9:	cmp    al,0x0
  41baab:	dec    edi
  41baac:	lods   eax,DWORD PTR ds:[esi]
  41baad:	scas   al,BYTE PTR es:[edi]
  41baae:	mov    ?,WORD PTR [edi-0xbcabd88]
  41bab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bab5:	and    BYTE PTR [edi],bh
  41bab7:	ror    BYTE PTR [eax-0x145e1850],cl
  41babd:	das    
  41babe:	pop    esi
  41babf:	push   ds
  41bac0:	call   ebx
  41bac2:	push   edx
  41bac3:	adc    eax,0xeb1c52aa
  41bac8:	dec    ebp
  41bac9:	adc    esi,ecx
  41bacb:	hlt    
  41bacc:	repnz in al,dx
  41bace:	call   FWORD PTR [edx+0x7a9617e1]
  41bad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bad5:	inc    ecx
  41bad6:	and    DWORD PTR [ebx-0x65],0xbc54d068
  41badd:	ss xchg esi,eax
  41badf:	popa   
  41bae0:	jns    0x41bb05
  41bae2:	lods   al,BYTE PTR ds:[esi]
  41bae3:	dec    esp
  41bae4:	or     DWORD PTR [eax+0x21a3aa19],ebx
  41baea:	jle    0x41ba8a
  41baec:	xchg   ebp,eax
  41baed:	xlat   BYTE PTR ds:[ebx]
  41baee:	lods   al,BYTE PTR ds:[esi]
  41baef:	push   0x33
  41baf1:	dec    ecx
  41baf2:	hlt    
  41baf3:	xchg   ecx,eax
  41baf4:	leave  
  41baf5:	fst    QWORD PTR [eax]
  41baf7:	jp     0x41ba8b
  41baf9:	cs xchg ebp,eax
  41bafb:	fild   WORD PTR [ebp-0x71]
  41bafe:	xlat   BYTE PTR ds:[ebx]
  41baff:	add    DWORD PTR [edx],edx
  41bb01:	cdq    
  41bb02:	jno    0x41bb7a
  41bb04:	sub    BYTE PTR [eax+0x58],dh
  41bb07:	enter  0x9630,0x11
  41bb0b:	add    al,0xf1
  41bb0d:	push   eax
  41bb0e:	arpl   WORD PTR [ebx+0x15da85e0],bp
  41bb14:	pop    edx
  41bb15:	dec    esi
  41bb16:	xor    ecx,DWORD PTR [esi-0x21eebc4d]
  41bb1c:	mov    ebx,0xfb4a8f4a
  41bb21:	mov    esi,0x493d3d02
  41bb26:	ins    DWORD PTR es:[edi],dx
  41bb27:	sbb    eax,DWORD PTR [eax]
  41bb29:	jae    0x41bb1e
  41bb2b:	pusha  
  41bb2c:	sub    edi,DWORD PTR ds:0xe41d8592
  41bb32:	lmsw   ax
  41bb35:	(bad)  [esi]
  41bb37:	sub    edx,esi
  41bb39:	lods   eax,DWORD PTR ds:[esi]
  41bb3a:	sbb    dl,BYTE PTR [edx+0xa]
  41bb3d:	add    cl,BYTE PTR [ecx]
  41bb3f:	sub    eax,DWORD PTR [edx+0x2d96a948]
  41bb45:	sbb    dl,BYTE PTR ds:[edi-0x37]
  41bb49:	cs adc al,0xc0
  41bb4c:	xor    esp,DWORD PTR [edx-0x33]
  41bb4f:	outs   dx,BYTE PTR ds:[esi]
  41bb50:	jmp    0x3cab:0x3a2e356f
  41bb57:	xor    ah,BYTE PTR [edx]
  41bb59:	lock out 0x1f,eax
  41bb5c:	xchg   DWORD PTR [ecx+esi*8+0x51],eax
  41bb60:	pop    ecx
  41bb61:	adc    eax,0xf025a07d
  41bb66:	aam    0x19
  41bb68:	aad    0xd9
  41bb6a:	jnp    0x41bb64
  41bb6c:	sar    BYTE PTR [edi-0x4946b1b8],1
  41bb72:	call   0x6d82:0x3c1ea3e3
  41bb79:	adc    DWORD PTR [ebp+ebx*4-0x56],ebx
  41bb7d:	or     BYTE PTR [eax-0x72c94063],bl
  41bb83:	xchg   esp,eax
  41bb85:	xor    eax,0xb2dc95fa
  41bb8a:	inc    esp
  41bb8b:	mov    BYTE PTR [ebx],dh
  41bb8d:	mov    bh,0x10
  41bb8f:	add    DWORD PTR [esi],ebp
  41bb91:	test   al,0xdb
  41bb93:	or     al,0x70
  41bb95:	or     eax,0x706c28b0
  41bb9a:	rcr    bh,cl
  41bb9c:	cdq    
  41bb9d:	cmp    cl,0x8d
  41bba0:	fldcw  WORD PTR [esp+edi*2-0x3c166769]
  41bba7:	adc    al,0x4b
  41bba9:	push   esi
  41bbaa:	retf   0x465e
  41bbad:	cli    
  41bbae:	or     DWORD PTR [esi+0x28a20d45],ebx
  41bbb4:	push   0x4d1f9032
  41bbb9:	jl     0x41bbae
  41bbbb:	loop   0x41bbab
  41bbbd:	jge    0x41bb64
  41bbbf:	dec    eax
  41bbc0:	add    al,0x15
  41bbc2:	pop    esi
  41bbc3:	jg     0xaf11fe48
  41bbc9:	jb     0x41bb4e
  41bbcb:	(bad)  
  41bbcc:	int3   
  41bbcd:	jl     0x41bbe4
  41bbcf:	and    eax,0x8faf5911
  41bbd4:	sbb    DWORD PTR [ebx-0x2c],edi
  41bbd7:	fidivr DWORD PTR [eax]
  41bbd9:	daa    
  41bbda:	js     0x41bc36
  41bbdc:	retf   
  41bbdd:	outs   dx,DWORD PTR ds:[esi]
  41bbde:	das    
  41bbdf:	add    al,0x57
  41bbe1:	jmp    0xf5faed4a
  41bbe6:	push   cs
  41bbe7:	lods   eax,DWORD PTR ss:[esi]
  41bbe9:	xor    bh,bh
  41bbeb:	pushf  
  41bbec:	fsubr  QWORD PTR [ebp+0x5e]
  41bbef:	inc    esi
  41bbf0:	or     ch,BYTE PTR [eax-0x5]
  41bbf3:	add    al,0x78
  41bbf5:	sub    al,0x6e
  41bbf7:	(bad)  
  41bbf8:	mov    ecx,0xbd1309a4
  41bbfd:	adc    esi,DWORD PTR [edx-0x43a812db]
  41bc03:	jmp    0x18299060
  41bc08:	inc    esi
  41bc09:	in     eax,dx
  41bc0a:	test   DWORD PTR [ebp+0x2f54bf65],ecx
  41bc10:	cmc    
  41bc11:	stos   DWORD PTR es:[edi],eax
  41bc12:	jns    0x41bc3e
  41bc14:	(bad)  
  41bc15:	sbb    eax,0xbe9973fa
  41bc1a:	mov    al,ds:0xf285328c
  41bc1f:	jne    0x41bc61
  41bc21:	cmp    dh,BYTE PTR ds:0xf4972650
  41bc27:	jno    0x41bc81
  41bc29:	pop    ss
  41bc2a:	sub    cl,BYTE PTR [edx-0x71]
  41bc2d:	fdivp  st(2),st
  41bc2f:	push   ds
  41bc30:	stos   BYTE PTR es:[edi],al
  41bc31:	rol    BYTE PTR [ebp+edx*4-0x5],1
  41bc35:	daa    
  41bc36:	dec    edx
  41bc37:	adc    eax,DWORD PTR [edx-0x6243aa1a]
  41bc3d:	loope  0x41bc97
  41bc3f:	xchg   ebx,eax
  41bc40:	call   0x2ffc0876
  41bc45:	and    esp,DWORD PTR [esp+ebp*2]
  41bc48:	and    al,0x94
  41bc4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc4b:	mov    esi,0xff053468
  41bc50:	xor    bh,BYTE PTR [esi]
  41bc52:	xor    eax,0xf90f2639
  41bc57:	xor    ch,dl
  41bc59:	dec    esi
  41bc5a:	daa    
  41bc5b:	mov    al,ds:0x6dc204f0
  41bc60:	aam    0x82
  41bc62:	loopne 0x41bbe5
  41bc64:	sub    DWORD PTR [ecx+ecx*1-0x75c36534],esp
  41bc6b:	mov    edx,0x1fd07aa5
  41bc70:	pop    ecx
  41bc71:	stos   BYTE PTR es:[edi],al
  41bc72:	and    al,0x37
  41bc74:	out    dx,al
  41bc75:	add    BYTE PTR [esi+0xd],cl
  41bc78:	add    BYTE PTR [edx],ah
  41bc7a:	mov    al,ds:0xea2fd91f
  41bc7f:	xchg   ebx,eax
  41bc80:	nop
  41bc81:	pop    ebp
  41bc82:	mov    al,0xa7
  41bc84:	xchg   ebp,eax
  41bc85:	leave  
  41bc86:	loope  0x41bc29
  41bc88:	dec    esp
  41bc89:	sahf   
  41bc8a:	mov    ch,cl
  41bc8c:	push   es
  41bc8d:	retf   0xb3bb
  41bc90:	int3   
  41bc91:	cmp    bh,ah
  41bc93:	out    0xac,al
  41bc95:	fiadd  WORD PTR [eax-0x68c0e03c]
  41bc9b:	mov    ebp,0x7bd48820
  41bca0:	rcl    BYTE PTR [esi+0x55],cl
  41bca3:	and    eax,0xd2d90a59
  41bca8:	push   es
  41bca9:	sti    
  41bcaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcab:	or     eax,0x8dd30960
  41bcb0:	mov    dl,0xad
  41bcb2:	sub    eax,0x1ce1e381
  41bcb7:	mov    edx,0x78bcb8cb
  41bcbc:	jecxz  0x41bc90
  41bcbe:	hlt    
  41bcbf:	ds mov bl,0xcb
  41bcc2:	(bad)  
  41bcc4:	adc    bh,0x20
  41bcc7:	adc    eax,0xf07a3ca0
  41bccc:	mov    bh,0xee
  41bcce:	cmp    edx,DWORD PTR [ecx+eax*2]
  41bcd1:	push   0xffffffd9
  41bcd3:	ret    0x3592
  41bcd6:	sub    BYTE PTR [edi+0x1b],0xeb
  41bcda:	test   al,0x74
  41bcdc:	inc    edi
  41bcdd:	inc    eax
  41bcde:	imul   eax,DWORD PTR [esi+0x77],0xffffffe2
  41bce2:	fs xchg ebp,eax
  41bce4:	push   ecx
  41bce5:	add    al,bl
  41bce7:	sti    
  41bce8:	xchg   ecx,eax
  41bce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcea:	xor    eax,0x5b73d294
  41bcef:	loop   0x41bd58
  41bcf1:	jg     0x41bd58
  41bcf3:	add    cl,BYTE PTR [edi-0x14]
  41bcf6:	jno    0x41bcfd
  41bcf8:	rcr    BYTE PTR [ebp+0x70bd04b2],0x95
  41bcff:	xchg   BYTE PTR [eax],dh
  41bd01:	pop    ss
  41bd02:	pushf  
  41bd03:	aam    0xbb
  41bd05:	fnstsw WORD PTR [esi]
  41bd07:	push   es
  41bd08:	add    al,0xa8
  41bd0a:	outs   dx,DWORD PTR ds:[esi]
  41bd0b:	jl     0x41bd5f
  41bd0d:	imul   ebp,esp,0x33
  41bd10:	sub    eax,0x99a6db81
  41bd15:	jge    0x41bd75
  41bd17:	std    
  41bd18:	cmp    eax,0xe740771a
  41bd1d:	bound  ebx,QWORD PTR [edi+0x5a]
  41bd20:	mov    BYTE PTR [ebx+0x55],al
  41bd23:	jge    0x41bd80
  41bd25:	inc    ebp
  41bd26:	fild   WORD PTR [edi+0x61]
  41bd29:	sar    ebp,0x1d
  41bd2c:	fs push edi
  41bd2e:	and    bl,bl
  41bd30:	enter  0x3b26,0x23
  41bd34:	icebp  
  41bd35:	repnz mov ds:0xf3a0531f,al
  41bd3b:	push   edx
  41bd3c:	jns    0x41bd14
  41bd3e:	clc    
  41bd3f:	xchg   edx,eax
  41bd40:	inc    esi
  41bd41:	lds    edx,FWORD PTR ds:0x87fb805b
  41bd47:	(bad)  
  41bd49:	sbb    DWORD PTR ds:0xabbc6470,eax
  41bd4f:	(bad)  
  41bd50:	std    
  41bd51:	push   0xb576c4cd
  41bd56:	push   ebp
  41bd57:	mov    ah,0xe7
  41bd59:	add    DWORD PTR [esi+0x5adf2f7d],esi
  41bd5f:	test   dl,dh
  41bd61:	mov    dh,0x7a
  41bd63:	out    dx,al
  41bd64:	fsubr  DWORD PTR [edx-0x2]
  41bd67:	jb     0x41bd6c
  41bd69:	repz push edx
  41bd6b:	hlt    
  41bd6c:	pop    ebx
  41bd6d:	add    DWORD PTR [esi-0x3753463],eax
  41bd73:	fldcw  WORD PTR [ebp-0x61]
  41bd76:	(bad)  
  41bd77:	sbb    eax,0x4cf6029a
  41bd7c:	inc    edx
  41bd7d:	add    esp,DWORD PTR [edx-0x3a928be9]
  41bd83:	pop    eax
  41bd84:	sbb    BYTE PTR [edi-0x80],cl
  41bd87:	ficom  WORD PTR [ebx-0x2d]
  41bd8a:	push   ss
  41bd8b:	inc    ebp
  41bd8c:	jg     0x41bd78
  41bd8e:	mov    al,0xb
  41bd90:	pop    ss
  41bd91:	jle    0x41bd6d
  41bd93:	loop   0x41bdd9
  41bd95:	inc    edi
  41bd96:	mov    ebp,0x3b2450f4
  41bd9b:	push   edx
  41bd9c:	cld    
  41bd9d:	retf   0x16c2
  41bda0:	ss aas 
  41bda2:	cli    
  41bda3:	shl    BYTE PTR [ecx+0x3207f1c8],1
  41bda9:	jecxz  0x41bd51
  41bdab:	jge    0x41bdf7
  41bdad:	es dec ebx
  41bdaf:	iret   
  41bdb0:	xlat   BYTE PTR ds:[ebx]
  41bdb1:	ret    
  41bdb2:	in     eax,dx
  41bdb3:	or     ebp,DWORD PTR [ebx]
  41bdb5:	mov    ebp,0x57f0b7ed
  41bdba:	std    
  41bdbb:	cwde   
  41bdbc:	xor    DWORD PTR [edx+0x4fb27408],ebx
  41bdc2:	repz cmc 
  41bdc4:	ror    ebp,0x7c
  41bdc7:	popf   
  41bdc8:	es jg  0x41bd9a
  41bdcb:	mov    ds:0x6be9c06c,al
  41bdd0:	mov    ds:0x5192a469,al
  41bdd5:	and    eax,0xc149f61e
  41bdda:	in     al,dx
  41bddb:	icebp  
  41bddc:	xchg   edi,eax
  41bddd:	lock pop edi
  41bddf:	adc    ebp,ebx
  41bde1:	and    esp,DWORD PTR [edx+0x4806abbf]
  41bde7:	ja     0x41bd73
  41bde9:	and    edx,edx
  41bdeb:	gs das 
  41bded:	mov    edx,0x36831435
  41bdf2:	mov    dh,BYTE PTR [ebp+0x67dca03b]
  41bdf8:	(bad)  
  41bdf9:	aad    0x3c
  41bdfb:	ja     0x41be2e
  41bdfd:	sbb    BYTE PTR [ebp+0x31],bl
  41be00:	fisubr DWORD PTR [edi-0x50]
  41be03:	into   
  41be04:	mov    al,0xca
  41be06:	and    DWORD PTR [ecx+eiz*2-0x5d43ff1b],eax
  41be0d:	adc    BYTE PTR [esi+0x19],0xe8
  41be11:	jmp    0xde41dfd2
  41be16:	cld    
  41be17:	or     cl,BYTE PTR [eax]
  41be19:	add    esi,DWORD PTR ds:0x22d4e52f
  41be1f:	aad    0x4
  41be21:	mov    ds:0xdc50ab0f,al
  41be26:	(bad)  
  41be27:	int3   
  41be28:	sahf   
  41be29:	neg    DWORD PTR [edi+edi*4-0x69701a7f]
  41be30:	and    eax,0x27402d58
  41be35:	icebp  
  41be36:	xchg   ah,al
  41be38:	push   eax
  41be39:	test   cl,0x95
  41be3c:	dec    edi
  41be3d:	clc    
  41be3e:	mov    esp,0xdddcf7c5
  41be43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be44:	int3   
  41be45:	jmp    ebx
  41be47:	loope  0x41be1f
  41be49:	imul   edx,esi,0xffffffc5
  41be4c:	cli    
  41be4d:	jmp    0x977e5885
  41be52:	out    dx,eax
  41be53:	fcomp  DWORD PTR [edx+0x6be33d70]
  41be59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be5a:	xchg   BYTE PTR [esi+0x4b],dl
  41be5d:	int    0xa
  41be5f:	xlat   BYTE PTR ds:[ebx]
  41be60:	rol    DWORD PTR [edi],1
  41be62:	fs dec esi
  41be64:	std    
  41be65:	dec    esp
  41be66:	jecxz  0x41be8b
  41be68:	in     al,0xcc
  41be6a:	pushf  
  41be6b:	lahf   
  41be6c:	xchg   BYTE PTR [eax],dl
  41be6e:	adc    cl,bl
  41be70:	int    0xc8
  41be72:	xchg   BYTE PTR [ebp+ebp*2+0x4d3a6814],ch
  41be79:	push   ecx
  41be7a:	sbb    esi,esi
  41be7c:	or     al,ah
  41be7e:	push   eax
  41be7f:	jo     0x41be82
  41be81:	mov    ecx,0x76a10f04
  41be86:	xor    DWORD PTR [ebx],esp
  41be88:	add    ch,BYTE PTR [edx-0x28]
  41be8b:	mov    BYTE PTR [edx+0x730e758f],bh
  41be91:	aad    0x7b
  41be93:	add    dh,cl
  41be95:	jmp    0x96e38bd3
  41be9a:	jmp    0x41be77
  41be9c:	xor    eax,0x1f1cc085
  41bea1:	mov    esi,0x37cb33d2
  41bea6:	stos   BYTE PTR es:[edi],al
  41bea7:	hlt    
  41bea8:	in     al,dx
  41bea9:	pop    ss
  41beaa:	fidiv  WORD PTR [edx]
  41beac:	inc    ebp
  41bead:	out    0x99,eax
  41beaf:	lods   eax,DWORD PTR ds:[esi]
  41beb0:	mov    bl,0xb7
  41beb2:	jmp    0xd72e:0xaf59f07e
  41beb9:	or     ch,bl
  41bebb:	mov    eax,ds:0xf9bbe023
  41bec0:	and    DWORD PTR [edx+edx*8],edx
  41bec3:	add    DWORD PTR [esi],ebp
  41bec5:	pop    edx
  41bec6:	mov    ebp,0x7a8aa373
  41becb:	in     eax,0x16
  41becd:	mov    edi,0x7c1ea57f
  41bed2:	(bad)  
  41bed3:	pop    eax
  41bed4:	sar    DWORD PTR [ecx+0x36ca73cf],1
  41beda:	js     0x41be9e
  41bedc:	jecxz  0x41be8a
  41bede:	(bad)  
  41bedf:	fadd   st,st(5)
  41bee1:	js     0x41bf61
  41bee3:	je     0x41bead
  41bee5:	pop    esi
  41bee6:	(bad)  
  41bee7:	out    dx,eax
  41bee8:	fcomp  st(6)
  41beea:	(bad)  
  41beeb:	inc    eax
  41beec:	xor    eax,0xf9c92fff
  41bef1:	mov    ah,BYTE PTR [esi]
  41bef3:	leave  
  41bef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bef5:	sti    
  41bef6:	inc    esi
  41bef7:	cdq    
  41bef8:	and    esi,DWORD PTR [ebx]
  41befa:	aad    0x7c
  41befc:	and    dl,BYTE PTR [ecx-0xa]
  41beff:	test   BYTE PTR [esi],bh
  41bf01:	in     al,0x48
  41bf03:	ret    0x1b3a
  41bf06:	add    dl,BYTE PTR ds:0x8a507bff
  41bf0c:	shr    BYTE PTR [edx-0x39],1
  41bf0f:	mov    bl,0x1
  41bf11:	jbe    0x41bf5c
  41bf13:	lods   eax,DWORD PTR ds:[esi]
  41bf14:	inc    edx
  41bf15:	push   edi
  41bf16:	cdq    
  41bf17:	aaa    
  41bf18:	jmp    0x27883127
  41bf1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf1e:	rcl    dh,cl
  41bf20:	xchg   edi,eax
  41bf21:	rcr    ah,1
  41bf23:	mov    esi,0xe7d18665
  41bf28:	fsubr  DWORD PTR [edi]
  41bf2a:	fs push edi
  41bf2c:	mov    BYTE PTR [ecx],dl
  41bf2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf2f:	and    edi,DWORD PTR [ebp-0x26]
  41bf32:	ror    bl,1
  41bf34:	xchg   ebp,eax
  41bf35:	push   0x9042fc96
  41bf3a:	(bad)  
  41bf3b:	into   
  41bf3c:	xchg   DWORD PTR [esi],ecx
  41bf3e:	mov    ah,0x9
  41bf40:	mov    DWORD PTR [edx+eax*8+0x3b],esp
  41bf44:	inc    edx
  41bf45:	retf   
  41bf46:	jecxz  0x41bf23
  41bf48:	mov    dl,0x94
  41bf4a:	gs call 0x147a:0xa6b85333
  41bf52:	out    dx,eax
  41bf53:	dec    ebx
  41bf54:	outs   dx,DWORD PTR ds:[esi]
  41bf55:	(bad)
  41bf59:	push   cs
  41bf5a:	dec    ebx
  41bf5b:	outs   dx,BYTE PTR ds:[esi]
  41bf5c:	scas   eax,DWORD PTR es:[edi]
  41bf5d:	rol    bh,0x30
  41bf60:	dec    ecx
  41bf61:	fisttp QWORD PTR [eax-0x7d]
  41bf64:	xor    ebp,ebx
  41bf66:	push   edi
  41bf67:	jge    0x41bfe2
  41bf69:	jl     0x41bf09
  41bf6b:	aaa    
  41bf6c:	addr16 mov esp,0x80fed2
  41bf72:	inc    ebx
  41bf73:	inc    eax
  41bf74:	inc    ebp
  41bf75:	mov    ebp,0x9c2706
  41bf7a:	push   0x59600c86
  41bf7f:	inc    edi
  41bf80:	clc    
  41bf81:	mov    dh,0xb4
  41bf83:	retf   
  41bf84:	push   ebp
  41bf85:	jne    0x41bf89
  41bf87:	dec    ebp
  41bf88:	daa    
  41bf89:	fnstenv [esi]
  41bf8b:	ja     0x41bfad
  41bf8d:	aaa    
  41bf8e:	push   ebx
  41bf8f:	pop    esp
  41bf90:	and    edx,DWORD PTR [edi+0x1f]
  41bf93:	cmp    BYTE PTR [esi],0x63
  41bf96:	mov    ds:0xaee7bca9,al
  41bf9b:	test   BYTE PTR gs:[edx-0x6e2eca09],al
  41bfa2:	pop    ecx
  41bfa3:	jge    0x41bf9e
  41bfa5:	pop    edi
  41bfa6:	out    0xe0,eax
  41bfa8:	jp     0x41bfd0
  41bfaa:	sti    
  41bfab:	aam    0xa2
  41bfad:	inc    ebx
  41bfae:	push   ds
  41bfaf:	adc    al,0x2b
  41bfb1:	push   esi
  41bfb3:	loop   0x41bf35
  41bfb5:	mov    al,ds:0xb19a5958
  41bfba:	sbb    BYTE PTR [esi+0xe],bh
  41bfbd:	and    BYTE PTR [esi+esi*1],0x87
  41bfc1:	into   
  41bfc2:	pop    ss
  41bfc3:	test   eax,0xaa971dea
  41bfc8:	dec    ebp
  41bfc9:	and    cl,cl
  41bfcb:	ret    0x551e
  41bfce:	mov    DWORD PTR [ecx+0x23],edi
  41bfd1:	jns    0x41bfd1
  41bfd3:	stc    
  41bfd4:	cs aaa 
  41bfd6:	std    
  41bfd7:	in     eax,dx
  41bfd8:	mov    esi,0xc27b1c80
  41bfdd:	push   es
  41bfde:	mov    edx,0xa035e70b
  41bfe3:	pop    ebp
  41bfe4:	int3   
  41bfe5:	test   BYTE PTR [esi],0xef
  41bfe8:	test   BYTE PTR [ecx-0x37],ch
  41bfeb:	jae    0x41bfd3
  41bfed:	inc    ecx
  41bfee:	stos   DWORD PTR es:[edi],eax
  41bfef:	mov    ecx,0xca1b4db3
  41bff4:	mov    eax,ds:0x284f5d53
  41bff9:	mov    eax,ds:0x97db4c33
  41bffe:	jp     0x41c050
  41c000:	xchg   edx,eax
  41c001:	inc    esi
  41c002:	sbb    edx,edx
  41c004:	dec    esp
  41c005:	jp     0x41bfaa
  41c007:	in     al,0xfb
  41c009:	cs (bad) 
  41c00b:	in     al,dx
  41c00c:	pop    DWORD PTR [esi+edx*2+0x50]
  41c010:	add    edx,DWORD PTR [edi]
  41c012:	pop    ecx
  41c013:	leave  
  41c014:	mov    bl,0x64
  41c016:	mov    ebp,0xddcd8b2
  41c01b:	test   eax,0x31411fda
  41c020:	mov    DWORD PTR [esi],eax
  41c022:	xor    eax,0xcdfe9fee
  41c027:	dec    edx
  41c028:	mov    eax,0x883713c5
  41c02d:	outs   dx,BYTE PTR ds:[esi]
  41c02e:	and    al,0xcf
  41c030:	push   esi
  41c031:	mov    ds:0x476a5034,eax
  41c036:	shl    DWORD PTR [ebx],cl
  41c038:	xlat   BYTE PTR ds:[bx]
  41c03a:	jg     0x41c019
  41c03c:	cmp    BYTE PTR [edi-0x3b],bl
  41c03f:	mov    BYTE PTR [ebp+0x5e],ah
  41c042:	inc    ebp
  41c043:	cwde   
  41c044:	stc    
  41c045:	or     eax,0xbed951ae
  41c04a:	pop    edx
  41c04b:	pushf  
  41c04c:	xchg   BYTE PTR es:[edi],cl
  41c04f:	add    al,0x46
  41c051:	xchg   edi,eax
  41c052:	in     eax,dx
  41c053:	punpckhwd mm4,QWORD PTR ds:0xa830f194
  41c05a:	jnp    0x41c01f
  41c05c:	mov    eax,ds:0xc0be627b
  41c061:	or     eax,0x8f77778e
  41c066:	adc    al,0xc1
  41c068:	(bad)  
  41c069:	pop    ss
  41c06a:	ss cli 
  41c06c:	push   esp
  41c06d:	xor    cl,BYTE PTR [ebp-0x21480f65]
  41c073:	jmp    0xaa160ce2
  41c078:	push   eax
  41c079:	test   BYTE PTR [ebx+0x44],dh
  41c07c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c07d:	push   ebp
  41c07e:	mov    bl,0x10
  41c080:	jne    0x41c0a6
  41c082:	es adc al,0xc4
  41c085:	imul   ebx,DWORD PTR [ebp-0x3b331006],0xffffffc7
  41c08c:	lock das 
  41c08e:	mov    ch,0x5c
  41c090:	cmp    ah,BYTE PTR [eax-0x1f]
  41c093:	and    dl,BYTE PTR [edi]
  41c095:	push   edx
  41c096:	push   edi
  41c097:	mov    al,ds:0xd3855d6
  41c09c:	dec    edi
  41c09d:	mov    dl,0x18
  41c09f:	not    BYTE PTR [esi-0x1c]
  41c0a2:	imul   ecx,DWORD PTR [eax-0x6d],0x4
  41c0a6:	ror    BYTE PTR [ebp-0x5173bc92],1
  41c0ac:	fnsave [ebp+0x11]
  41c0af:	popf   
  41c0b0:	ret    0x8ac6
  41c0b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0b4:	mov    DWORD PTR [edx],eax
  41c0b6:	or     al,0xbc
  41c0b8:	loop   0x41c0b9
  41c0ba:	aas    
  41c0bb:	(bad)  
  41c0bd:	sahf   
  41c0be:	add    esi,DWORD PTR [edi-0x6a2946da]
  41c0c4:	adc    eax,DWORD PTR [ecx]
  41c0c6:	scas   eax,DWORD PTR es:[edi]
  41c0c7:	pusha  
  41c0c8:	pusha  
  41c0c9:	mov    edi,0xaf0b28e4
  41c0ce:	jmp    0x41c061
  41c0d0:	sbb    al,0xfa
  41c0d2:	inc    edi
  41c0d3:	aad    0x6c
  41c0d5:	mov    edx,0xe84bc078
  41c0da:	sbb    DWORD PTR [esi],ecx
  41c0dc:	pop    ebp
  41c0dd:	cs inc ebx
  41c0df:	xchg   ebx,eax
  41c0e0:	sub    BYTE PTR [esi+ecx*8],al
  41c0e3:	mov    dl,0xbc
  41c0e5:	popf   
  41c0e6:	pop    esi
  41c0e7:	xor    al,0x31
  41c0e9:	ret    
  41c0ea:	jae    0x41c08d
  41c0ec:	mov    WORD PTR [esi-0xe],?
  41c0ef:	adc    DWORD PTR [esp+eiz*4-0x70d5e3cd],esp
  41c0f6:	shl    bh,1
  41c0f8:	sbb    BYTE PTR [ebx],0x25
  41c0fb:	pop    esi
  41c0fc:	inc    edi
  41c0fd:	pop    ebp
  41c0fe:	rcr    BYTE PTR [ebx-0x60],1
  41c101:	jno    0x41c0b1
  41c103:	mov    esp,0x4cc6c58
  41c108:	(bad)  [esp+esi*1+0x30]
  41c10c:	pushf  
  41c10d:	push   0x5d
  41c10f:	aaa    
  41c110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c111:	push   es
  41c112:	ins    BYTE PTR es:[edi],dx
  41c113:	test   DWORD PTR ds:0x21458c89,edi
  41c119:	add    BYTE PTR [eax-0xe32ef5a],ah
  41c11f:	mov    ebp,0xba69fdde
  41c124:	xlat   BYTE PTR ds:[ebx]
  41c125:	mov    edx,0x73611537
  41c12a:	fst    DWORD PTR [ecx-0x5bc43d7a]
  41c130:	leave  
  41c131:	test   ecx,esi
  41c133:	mov    edi,0xb8838cc4
  41c138:	pop    edx
  41c139:	lock out dx,eax
  41c13b:	mov    eax,ds:0x6e777982
  41c140:	fs pop ebx
  41c142:	fadd   QWORD PTR [ecx-0x18fe1611]
  41c148:	retf   0x4978
  41c14b:	and    dl,al
  41c14d:	xchg   esp,eax
  41c14e:	retf   0xc01c
  41c151:	mov    ds:0xbac41cd5,al
  41c156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c157:	test   eax,0x8457ceaf
  41c15c:	scas   al,BYTE PTR es:[edi]
  41c15d:	fwait
  41c15e:	sbb    DWORD PTR [esi-0x72919aa5],ecx
  41c164:	mov    edx,0xc5be8f72
  41c169:	lds    ebp,FWORD PTR [edx-0x2f]
  41c16c:	pop    edi
  41c16d:	fsub   QWORD PTR [ecx]
  41c16f:	sbb    esp,DWORD PTR [edx+0x7fae3ebb]
  41c175:	ror    BYTE PTR [ebx-0x6e],cl
  41c178:	sub    bl,ch
  41c17a:	mov    ecx,0x31b6d5c1
  41c17f:	mov    al,0xfd
  41c181:	daa    
  41c182:	xor    cl,BYTE PTR [ebx-0x62]
  41c185:	jmp    0x7e63:0x33206973
  41c18c:	nop
  41c18d:	mov    cs:0x28af4ae0,eax
  41c193:	cld    
  41c194:	stos   DWORD PTR es:[edi],eax
  41c195:	add    eax,0x140932a
  41c19a:	xchg   DWORD PTR [ecx-0x55acdfd7],edx
  41c1a0:	gs push 0x8aed7653
  41c1a6:	int    0x15
  41c1a8:	loop   0x41c13c
  41c1aa:	inc    edx
  41c1ab:	dec    ebx
  41c1ac:	xor    BYTE PTR [eax+0x62],bh
  41c1af:	out    dx,eax
  41c1b0:	jne    0x41c1bc
  41c1b2:	mov    ebx,0x48169aab
  41c1b7:	jp     0x41c1aa
  41c1b9:	or     ebp,ebp
  41c1bb:	shr    DWORD PTR [edx-0x1b8f5f0c],0xfa
  41c1c2:	inc    edi
  41c1c3:	sub    dl,BYTE PTR [ecx-0x3f]
  41c1c6:	adc    eax,0xe65ceacf
  41c1cb:	(bad)  
  41c1cc:	mov    ah,0x12
  41c1ce:	sub    edx,DWORD PTR [esi]
  41c1d0:	push   ss
  41c1d1:	ror    DWORD PTR [edi],0x60
  41c1d4:	outs   dx,BYTE PTR ds:[esi]
  41c1d5:	sti    
  41c1d6:	adc    DWORD PTR ds:0x970db2f1,esi
  41c1dc:	sub    edx,DWORD PTR [eax+0x454ce1d6]
  41c1e2:	add    dl,BYTE PTR [ebx+0x5b80292b]
  41c1e8:	mov    ebp,0xefcb88dc
  41c1ed:	hlt    
  41c1ee:	jmp    0x41c1ba
  41c1f0:	sbb    DWORD PTR [edi+0x7c],ebp
  41c1f3:	fsubrp st(4),st
  41c1f5:	ret    0xa7d5
  41c1f8:	jmp    0x41c221
  41c1fa:	outs   dx,BYTE PTR ds:[esi]
  41c1fb:	out    dx,eax
  41c1fc:	popa   
  41c1fd:	mov    ch,ch
  41c1ff:	add    cl,dl
  41c201:	setne  BYTE PTR [esi-0x3]
  41c205:	cdq    
  41c206:	hlt    
  41c207:	dec    edx
  41c208:	div    ecx
  41c20a:	xor    al,0xed
  41c20c:	push   ebx
  41c20d:	mov    WORD PTR [ecx],gs
  41c20f:	mov    bl,0x85
  41c211:	mov    ebp,0x8709e650
  41c216:	cdq    
  41c217:	repz and esi,edi
  41c21a:	or     ebp,DWORD PTR [ebp-0x37f957b2]
  41c220:	xchg   esi,eax
  41c221:	xchg   esp,eax
  41c222:	and    edx,DWORD PTR [edi+0x3e]
  41c225:	sub    BYTE PTR [ebx],dh
  41c227:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41c229:	test   al,0x37
  41c22b:	xchg   edx,eax
  41c22c:	jo     0x41c211
  41c22e:	sub    al,0x8e
  41c230:	jno    0x41c241
  41c232:	enter  0xbf50,0x9e
  41c236:	inc    ebp
  41c237:	test   eax,0x8685a13a
  41c23c:	jne    0x41c1de
  41c23e:	inc    edi
  41c23f:	jecxz  0x41c270
  41c241:	mov    DWORD PTR [edx],0x65ba7b3f
  41c247:	cmp    BYTE PTR [edi+0x348ee00c],ch
  41c24d:	sub    BYTE PTR [ecx],dl
  41c24f:	loope  0x41c262
  41c251:	push   ecx
  41c252:	and    esp,ecx
  41c254:	pop    ebx
  41c255:	sub    eax,0x9cc331db
  41c25a:	rcl    ecx,1
  41c25c:	in     al,0x1e
  41c25e:	add    al,bh
  41c260:	cmp    ch,cl
  41c262:	mov    ah,0x5e
  41c264:	dec    ecx
  41c265:	adc    al,0x5b
  41c267:	cli    
  41c268:	outs   dx,BYTE PTR ds:[esi]
  41c269:	mov    dl,0x93
  41c26b:	push   esp
  41c26c:	call   0x12234f92
  41c271:	mov    bl,0x6a
  41c273:	xchg   edx,eax
  41c274:	adc    DWORD PTR [ebx-0x2d057050],edx
  41c27a:	test   eax,0xea30521a
  41c27f:	or     DWORD PTR [ebp-0x74],esi
  41c282:	mov    ebp,DWORD PTR [esi-0x506058c2]
  41c288:	bts    DWORD PTR ds:0x70c249f2,ebp
  41c28f:	(bad)  
  41c290:	and    DWORD PTR [edx+esi*4+0x4864d035],ecx
  41c297:	dec    ecx
  41c298:	jp     0x41c30c
  41c29a:	out    dx,eax
  41c29b:	shr    DWORD PTR [ecx+0x44],1
  41c29e:	adc    BYTE PTR [eax+0x9],ch
  41c2a1:	dec    edi
  41c2a2:	stos   BYTE PTR es:[edi],al
  41c2a3:	es mov ebx,0x73756a00
  41c2a9:	jge    0x41c313
  41c2ab:	retf   0xfb1b
  41c2ae:	sbb    DWORD PTR [eax-0x4e8e7504],esp
  41c2b4:	cli    
  41c2b5:	xor    ch,BYTE PTR [eax]
  41c2b7:	addr16 ss daa 
  41c2ba:	and    bl,BYTE PTR [eax]
  41c2bc:	data16 lahf 
  41c2be:	dec    DWORD PTR [ecx]
  41c2c0:	dec    DWORD PTR [ecx]
  41c2c2:	aaa    
  41c2c3:	add    al,0x5b
  41c2c5:	pop    es
  41c2c6:	int3   
  41c2c7:	cmp    DWORD PTR [edi],0x7e
  41c2ca:	inc    edx
  41c2cb:	xchg   ebp,eax
  41c2cc:	sbb    BYTE PTR [eax-0x40a27487],dl
  41c2d2:	adc    esi,ecx
  41c2d4:	mov    eax,0x6945168b
  41c2d9:	jnp    0x41c27d
  41c2db:	(bad)  
  41c2dc:	sahf   
  41c2dd:	or     al,0x1e
  41c2df:	xchg   ecx,eax
  41c2e0:	dec    ecx
  41c2e1:	out    0x5b,al
  41c2e3:	sbb    al,0xdd
  41c2e5:	inc    ebx
  41c2e6:	shl    ecx,1
  41c2e8:	jno    0x41c26c
  41c2ea:	jbe    0x41c2e0
  41c2ec:	int3   
  41c2ed:	mov    ah,0xde
  41c2ef:	cs mov ah,0x29
  41c2f2:	push   ebp
  41c2f3:	add    esi,ecx
  41c2f5:	iret   
  41c2f6:	cwde   
  41c2f7:	sbb    al,0x4f
  41c2f9:	sahf   
  41c2fa:	scas   eax,DWORD PTR es:[edi]
  41c2fb:	pop    esi
  41c2fc:	arpl   WORD PTR [edx-0x6a5d244c],sp
  41c302:	push   cs
  41c303:	sub    ecx,DWORD PTR [edx+edi*1+0x59]
  41c307:	push   eax
  41c308:	or     al,0x88
  41c30a:	sub    al,0x31
  41c30c:	pop    esi
  41c30d:	mov    ch,0x34
  41c30f:	lahf   
  41c310:	adc    DWORD PTR ds:0x778b5014,0xffffffba
  41c317:	enter  0xbe73,0x64
  41c31b:	jmp    0x41c353
  41c31d:	push   cs
  41c31e:	pop    ebx
  41c31f:	out    0x8e,eax
  41c321:	hlt    
  41c322:	sub    dh,bh
  41c324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c325:	push   esi
  41c326:	repnz pop esp
  41c328:	mov    bl,BYTE PTR [edx+0x36f9ef19]
  41c32e:	xchg   edi,eax
  41c32f:	out    dx,al
  41c330:	(bad)  
  41c332:	retf   
  41c333:	addr16 fstp st(2)
  41c336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c337:	pusha  
  41c338:	scas   eax,DWORD PTR es:[edi]
  41c339:	or     edx,ecx
  41c33b:	lds    esp,FWORD PTR [eax-0x28f899a5]
  41c341:	sbb    DWORD PTR [esi],eax
  41c343:	adc    BYTE PTR [edx],0x33
  41c346:	adc    ah,BYTE PTR [ecx+0x58e01739]
  41c34c:	mov    BYTE PTR [ebx],ah
  41c34e:	test   cl,0x86
  41c351:	icebp  
  41c352:	push   eax
  41c353:	sar    ah,cl
  41c355:	imul   ebx,DWORD PTR [edi],0x7f595684
  41c35b:	outs   dx,DWORD PTR ds:[esi]
  41c35c:	or     eax,DWORD PTR [edx-0x4f71d395]
  41c362:	loopne 0x41c37e
  41c364:	mov    al,0xf2
  41c366:	mov    dh,0xf3
  41c368:	mov    bl,0xe5
  41c36a:	lock add dh,cl
  41c36d:	inc    esi
  41c36e:	pop    ss
  41c36f:	out    0xb,eax
  41c371:	out    dx,eax
  41c372:	fcom   QWORD PTR [ebx-0x23efa4e]
  41c378:	das    
  41c379:	jbe    0x41c38a
  41c37b:	lock jno 0x41c3aa
  41c37e:	icebp  
  41c37f:	dec    edi
  41c380:	cmp    BYTE PTR [ecx-0x21],bh
  41c383:	dec    ebx
  41c384:	lods   eax,DWORD PTR ds:[esi]
  41c385:	mov    DWORD PTR [eax+0x4b2c2075],edx
  41c38b:	test   eax,0x6ae87cde
  41c390:	xor    al,0xf
  41c392:	ins    BYTE PTR es:[edi],dx
  41c393:	dec    DWORD PTR [edx-0x42]
  41c396:	xlat   BYTE PTR ds:[ebx]
  41c397:	fsubp  st(2),st
  41c399:	es out dx,al
  41c39b:	cmp    esi,DWORD PTR [esi-0x2]
  41c39e:	xlat   BYTE PTR ds:[ebx]
  41c39f:	xor    al,BYTE PTR [eax]
  41c3a1:	leave  
  41c3a2:	adc    esp,edi
  41c3a4:	cmc    
  41c3a5:	or     eax,0xabb604f2
  41c3aa:	push   edi
  41c3ab:	mov    eax,ds:0x4bf88906
  41c3b0:	pop    ss
  41c3b1:	mov    esp,0x4190cf9b
  41c3b6:	and    ebp,DWORD PTR [esp+edx*1-0x42]
  41c3ba:	or     al,0x5e
  41c3bc:	mov    bh,0x3e
  41c3be:	sub    edi,DWORD PTR [ebx+0x58]
  41c3c1:	mov    cl,0xd0
  41c3c3:	rcr    BYTE PTR [ebx+0x47],0x18
  41c3c7:	cmp    al,0x25
  41c3c9:	popa   
  41c3ca:	xchg   ecx,eax
  41c3cb:	adc    eax,0xbe71a4bb
  41c3d0:	mov    cs,WORD PTR [eax-0x6d621d61]
  41c3d6:	cmp    ebp,DWORD PTR [esi+0x5e]
  41c3d9:	out    0xec,eax
  41c3db:	sub    cl,ah
  41c3dd:	out    dx,al
  41c3de:	cmp    ah,BYTE PTR [eax]
  41c3e0:	sahf   
  41c3e1:	lods   eax,DWORD PTR ds:[esi]
  41c3e2:	out    0x12,eax
  41c3e4:	cmp    BYTE PTR [ecx+0x7cca2a68],cl
  41c3ea:	es push eax
  41c3ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3ed:	pop    ss
  41c3ee:	je     0x41c3a4
  41c3f0:	sub    DWORD PTR [ecx+0x6a555158],ebx
  41c3f6:	cmc    
  41c3f7:	sbb    bh,dh
  41c3f9:	push   ebx
  41c3fa:	xlat   BYTE PTR ds:[ebx]
  41c3fb:	and    DWORD PTR [ebx],esi
  41c3fd:	cmp    al,0x8c
  41c3ff:	adc    eax,0x9efa392a
  41c404:	xchg   esi,eax
  41c405:	nop
  41c406:	(bad)  
  41c407:	repz ret 
  41c409:	sbb    BYTE PTR [ebx+eax*4+0x26],bh
  41c40d:	push   0x8979cb10
  41c412:	les    edx,FWORD PTR [edx+ebp*1]
  41c415:	bound  eax,QWORD PTR [edx+0x5b]
  41c418:	push   ecx
  41c419:	shr    BYTE PTR [eax],0xa1
  41c41c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c41d:	les    ebp,FWORD PTR [ebx]
  41c41f:	dec    esp
  41c420:	es in  eax,dx
  41c422:	xlat   BYTE PTR ds:[ebx]
  41c423:	dec    ebx
  41c424:	enter  0x18a0,0x78
  41c428:	ror    DWORD PTR [edi-0x19],0x89
  41c42c:	mov    dl,0xfd
  41c42e:	pop    ecx
  41c42f:	lahf   
  41c430:	idiv   ebx
  41c432:	ret    0x6030
  41c435:	jne    0x41c443
  41c437:	leave  
  41c438:	mov    ds:0xd7134f6f,al
  41c43d:	jle    0x41c4b6
  41c43f:	cmp    esp,edx
  41c441:	jecxz  0x41c407
  41c443:	loope  0x41c3c5
  41c445:	retf   0x89a5
  41c448:	mov    ebx,0x8dd17a70
  41c44d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c44e:	pop    edi
  41c44f:	adc    BYTE PTR [edx+0x8],dh
  41c452:	and    ebx,edx
  41c454:	jno    0x41c4b5
  41c456:	inc    edi
  41c457:	lods   al,BYTE PTR ds:[esi]
  41c458:	jmp    0x6053558d
  41c45d:	call   0x1eeaf881
  41c462:	dec    edx
  41c463:	mov    ?,WORD PTR [ecx+ebx*1]
  41c466:	js     0x41c45e
  41c468:	es mov ah,0x32
  41c46b:	test   BYTE PTR [ebp+eiz*8+0x6c],al
  41c46f:	loope  0x41c4ac
  41c471:	mov    eax,ds:0xf7581316
  41c476:	cmp    bl,BYTE PTR [eax-0x78]
  41c479:	adc    esp,DWORD PTR [eax+0x6]
  41c47c:	sbb    DWORD PTR [eax+edx*1+0x47],ebp
  41c480:	fwait
  41c481:	pop    ss
  41c482:	and    cl,0xf4
  41c485:	ja     0x41c496
  41c487:	jb     0x41c494
  41c489:	aad    0xf9
  41c48b:	fsubr  st(0),st
  41c48d:	sahf   
  41c48e:	lods   eax,DWORD PTR ds:[esi]
  41c48f:	imul   ecx,DWORD PTR [edi+ecx*2-0x8e54a2f],0xb3b97b36
  41c49a:	adc    DWORD PTR [eax-0x13],edi
  41c49d:	add    BYTE PTR [bx-0x5c],al
  41c4a1:	sbb    DWORD PTR [ebp+0x5b714c7e],0x2d
  41c4a8:	and    DWORD PTR [ebx-0x66],esi
  41c4ab:	mov    al,0x12
  41c4ad:	ret    0x2737
  41c4b0:	xlat   BYTE PTR ds:[ebx]
  41c4b1:	cmc    
  41c4b2:	cld    
  41c4b3:	out    dx,eax
  41c4b4:	mov    al,ds:0x6b27168b
  41c4b9:	push   esi
  41c4ba:	pop    eax
  41c4bb:	xor    edi,esp
  41c4bd:	pop    eax
  41c4be:	jbe    0x41c499
  41c4c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4c1:	sti    
  41c4c2:	inc    eax
  41c4c3:	loop   0x41c520
  41c4c5:	sub    edi,esp
  41c4c7:	xchg   BYTE PTR [ecx-0x52ac0184],ch
  41c4cd:	mov    ecx,0x235b03cb
  41c4d2:	cdq    
  41c4d3:	jl     0x41c543
  41c4d5:	mov    dl,bl
  41c4d7:	scas   al,BYTE PTR es:[edi]
  41c4d8:	mov    DWORD PTR [ebp-0x270bf6dc],ecx
  41c4de:	mov    edi,DWORD PTR [ebx+0x7b5e3a5d]
  41c4e4:	dec    esp
  41c4e5:	pop    ds
  41c4e6:	pop    esi
  41c4e7:	mov    edx,0x6a0144da
  41c4ec:	lock add eax,0x1fd96224
  41c4f2:	xor    al,0xd7
  41c4f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4f5:	scas   al,BYTE PTR es:[edi]
  41c4f6:	shr    ch,0x47
  41c4f9:	test   DWORD PTR [edx],edi
  41c4fb:	popa   
  41c4fc:	mov    DWORD PTR [ebp-0xb3e3bb5],eax
  41c502:	int3   
  41c503:	rcr    BYTE PTR [ebp-0x1dcf951],0x36
  41c50a:	adc    ecx,DWORD PTR [edx]
  41c50c:	sbb    DWORD PTR [edi+0x18],0x70f729d7
  41c513:	in     eax,dx
  41c514:	push   ds
  41c515:	cdq    
  41c516:	or     dl,BYTE PTR [esi]
  41c518:	addr16 or al,0x8f
  41c51b:	push   edx
  41c51c:	in     al,0x31
  41c51e:	jnp    0x41c4d1
  41c520:	xchg   BYTE PTR [edx-0x6],bl
  41c523:	repz mov ecx,0x34588aec
  41c529:	mov    ebp,0x996069f6
  41c52e:	add    DWORD PTR es:[esi+0x46],ecx
  41c532:	pop    edx
  41c533:	pop    esi
  41c534:	popa   
  41c535:	inc    ebx
  41c536:	mov    cl,0xf
  41c538:	pop    esp
  41c539:	sti    
  41c53a:	push   0x43
  41c53c:	(bad)  
  41c53d:	ds xchg ecx,eax
  41c53f:	popf   
  41c540:	inc    edx
  41c541:	cli    
  41c542:	pop    ebx
  41c543:	push   esp
  41c544:	into   
  41c545:	scas   eax,DWORD PTR es:[edi]
  41c546:	ins    DWORD PTR es:[edi],dx
  41c547:	sbb    DWORD PTR [eax-0x2e],edi
  41c54a:	loope  0x41c4d1
  41c54c:	rcl    DWORD PTR [edi+0x3],0x54
  41c550:	(bad)  
  41c551:	scas   al,BYTE PTR es:[edi]
  41c552:	ret    
  41c553:	icebp  
  41c554:	lea    esp,[esi-0x46]
  41c557:	add    al,0x32
  41c559:	(bad)  
  41c55b:	add    BYTE PTR [edi-0x72],dh
  41c55e:	or     dl,BYTE PTR [ebx+edi*1+0x6e875827]
  41c565:	push   cs
  41c566:	in     eax,dx
  41c567:	dec    esi
  41c568:	icebp  
  41c569:	mov    bh,BYTE PTR [esi+0x108ff3b0]
  41c56f:	outs   dx,DWORD PTR ds:[esi]
  41c570:	or     eax,0x268d9202
  41c575:	fstp   DWORD PTR [ebx-0x6d]
  41c578:	mov    WORD PTR ds:0x7012a9c6,gs
  41c57e:	sub    BYTE PTR [ebx+0x55],0x26
  41c582:	inc    edi
  41c583:	mov    WORD PTR [eax+edx*1],?
  41c586:	sub    eax,ebx
  41c588:	fcmove st,st(0)
  41c58a:	lds    bx,DWORD PTR [ecx]
  41c58d:	ficom  WORD PTR [ebx]
  41c58f:	ror    ecx,1
  41c591:	jmp    0x41c5b5
  41c593:	(bad)  
  41c595:	ja     0x41c5f3
  41c597:	test   eax,0x33b34609
  41c59c:	arpl   WORD PTR [edx],sp
  41c59e:	add    edi,edi
  41c5a0:	inc    esp
  41c5a1:	jbe    0x41c581
  41c5a3:	retf   
  41c5a4:	pop    esi
  41c5a5:	test   dl,ah
  41c5a7:	into   
  41c5a8:	lock mov ch,0xcf
  41c5ab:	jmp    FWORD PTR [ebx+0x77494e79]
  41c5b1:	dec    esi
  41c5b2:	xor    ebp,DWORD PTR [ecx+0x75]
  41c5b5:	(bad)  
  41c5b6:	jns    0x41c586
  41c5b8:	bound  ebx,QWORD PTR [eax]
  41c5ba:	push   ecx
  41c5bb:	sti    
  41c5bc:	push   cs
  41c5bd:	push   edx
  41c5be:	inc    edx
  41c5bf:	imul   esp,DWORD PTR [edx+0x61209e5e],0xd0e346d8
  41c5c9:	adc    BYTE PTR [edi+ecx*8],0x81
  41c5cd:	imul   esp,DWORD PTR [edi],0x75f5709c
  41c5d3:	mov    ecx,0xb3412511
  41c5d8:	call   0x1432:0x9133e6ba
  41c5df:	dec    edx
  41c5e0:	test   al,0x78
  41c5e2:	mov    eax,ds:0xd0fe4d4b
  41c5e7:	jmp    0x6a375fd6
  41c5ec:	adc    eax,0xd117e274
  41c5f1:	popa   
  41c5f2:	fwait
  41c5f3:	loope  0x41c58f
  41c5f5:	xchg   ebx,eax
  41c5f6:	ror    DWORD PTR [ebp-0xd],0x14
  41c5fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5fb:	add    BYTE PTR [edi],dh
  41c5fd:	ins    DWORD PTR es:[edi],dx
  41c5fe:	scas   eax,DWORD PTR es:[edi]
  41c5ff:	pop    edx
  41c600:	or     bh,BYTE PTR [ebx+0x1acd28af]
  41c606:	and    DWORD PTR [esi],ebx
  41c608:	loop   0x41c5da
  41c60a:	mov    edi,0xa8b7b4e1
  41c60f:	(bad)  
  41c611:	test   al,0x82
  41c613:	test   BYTE PTR [ecx],dh
  41c615:	push   es
  41c616:	adc    DWORD PTR [eax+0x21276a97],ebx
  41c61c:	xchg   ebp,eax
  41c61d:	pop    ecx
  41c61e:	retf   
  41c61f:	fcomp  DWORD PTR [esi-0x199f17e5]
  41c625:	pop    esp
  41c626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c627:	pop    eax
  41c628:	cdq    
  41c629:	nop
  41c62a:	cmp    ch,BYTE PTR [ecx]
  41c62c:	xor    ebx,esi
  41c62e:	(bad)  
  41c62f:	ds dec esi
  41c631:	mov    ebp,0xac4eebfa
  41c636:	xchg   esp,eax
  41c637:	mov    al,0x64
  41c639:	dec    ecx
  41c63a:	sbb    eax,0x9ced68c7
  41c63f:	js     0x41c664
  41c641:	shl    DWORD PTR [eax],cl
  41c643:	fdivr  QWORD PTR [ebx-0x58]
  41c646:	cmp    DWORD PTR [ecx-0x71a4ee2f],0x7fcb466b
  41c650:	ins    DWORD PTR es:[edi],dx
  41c651:	cmp    bl,ch
  41c653:	pop    eax
  41c654:	in     al,0x4
  41c656:	icebp  
  41c657:	cmp    al,0xfc
  41c659:	inc    ebp
  41c65a:	adc    dh,al
  41c65c:	mov    bl,0x3f
  41c65e:	mov    eax,ds:0x92be2360
  41c663:	bound  ebp,QWORD PTR [edi+ebp*8+0x24]
  41c667:	out    0x8b,al
  41c669:	in     al,0xd5
  41c66b:	or     cl,dl
  41c66d:	dec    ecx
  41c66e:	stos   BYTE PTR es:[edi],al
  41c66f:	pop    ebx
  41c670:	fdivr  QWORD PTR [edx-0x37b26d79]
  41c676:	push   eax
  41c677:	xchg   ebx,eax
  41c678:	lods   al,BYTE PTR ds:[esi]
  41c679:	lods   al,BYTE PTR ds:[si]
  41c67b:	push   0x849ea077
  41c680:	test   eax,0xe85cde98
  41c685:	out    dx,eax
  41c686:	fnstcw WORD PTR [ebp+0x37316eaa]
  41c68c:	push   0x9c60cfba
  41c691:	lea    ebp,[edi+0x57]
  41c694:	sub    edi,DWORD PTR [esi-0x44]
  41c697:	jmp    FWORD PTR [esi+0x60728adf]
  41c69d:	xchg   BYTE PTR [edi+0x34],al
  41c6a0:	out    0x33,eax
  41c6a2:	int    0x40
  41c6a4:	dec    esi
  41c6a5:	pop    esp
  41c6a6:	in     eax,dx
  41c6a7:	xor    al,0x1f
  41c6a9:	and    eax,0xe3761d5e
  41c6ae:	sbb    eax,DWORD PTR [eax+0x5e]
  41c6b1:	aad    0xb1
  41c6b3:	and    bl,BYTE PTR [ebx]
  41c6b5:	xchg   DWORD PTR [ebp+0x12],ecx
  41c6b8:	shl    dl,1
  41c6ba:	dec    ecx
  41c6bb:	or     ebx,0xffffffb5
  41c6be:	push   esp
  41c6bf:	pop    esi
  41c6c0:	dec    ebx
  41c6c1:	and    BYTE PTR [edi+0x6],0xa
  41c6c5:	push   esp
  41c6c6:	sahf   
  41c6c7:	call   0xb68c29a4
  41c6cc:	sub    eax,0x163d3d27
  41c6d1:	pusha  
  41c6d2:	ja     0x41c664
  41c6d4:	and    dh,BYTE PTR [edx-0x40]
  41c6d7:	push   eax
  41c6d8:	mov    esp,0x49ff255a
  41c6dd:	xor    ecx,DWORD PTR ds:0x95e0b613
  41c6e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6e4:	and    ebp,DWORD PTR [esi-0x1e]
  41c6e7:	mov    bl,0x8d
  41c6e9:	ret    
  41c6ea:	mov    es,WORD PTR [edi]
  41c6ec:	call   0x6caea9dd
  41c6f1:	lds    ecx,FWORD PTR [esi-0x1d23430e]
  41c6f7:	xchg   ebx,eax
  41c6f8:	das    
  41c6f9:	push   esp
  41c6fa:	int    0xa7
  41c6fc:	(bad)  
  41c6fe:	jne    0x41c698
  41c700:	pop    edi
  41c701:	or     DWORD PTR [edx-0x27],eax
  41c704:	fdivr  QWORD PTR [ebp-0x54]
  41c707:	adc    ebp,DWORD PTR [eax]
  41c709:	pop    ecx
  41c70a:	mov    WORD PTR [edx-0xe8eda41],cs
  41c710:	in     al,0x8a
  41c712:	dec    esp
  41c713:	jns    0x41c6c4
  41c715:	rol    BYTE PTR [ebp+0x2],cl
  41c718:	push   esp
  41c719:	xchg   ebx,eax
  41c71a:	mov    ecx,0x7c55c0a6
  41c71f:	jne    0x41c727
  41c721:	std    
  41c722:	sbb    DWORD PTR [edx+edi*2+0x72],esi
  41c726:	xlat   BYTE PTR ds:[ebx]
  41c727:	jge    0x41c6e2
  41c729:	popa   
  41c72a:	retf   0xdcd1
  41c72d:	out    0x1c,al
  41c72f:	jecxz  0x41c747
  41c731:	push   ecx
  41c732:	(bad)  
  41c734:	push   ecx
  41c735:	dec    esp
  41c736:	sbb    DWORD PTR [edx],ecx
  41c738:	pop    ecx
  41c739:	mov    WORD PTR [esi-0x6],cs
  41c73c:	lea    ebp,[ecx-0x58]
  41c73f:	jecxz  0x41c758
  41c741:	push   ecx
  41c742:	pop    edi
  41c743:	mov    ebx,0x3d44066f
  41c748:	sub    DWORD PTR [ecx+0x11],0x9c9f2f6d
  41c74f:	push   ebx
  41c750:	or     BYTE PTR [ecx-0x2d],ch
  41c753:	adc    DWORD PTR [ebx],0x4b
  41c756:	mov    gs:0xbb9b4c3f,eax
  41c75c:	sub    edx,eax
  41c75e:	inc    ebx
  41c75f:	and    edi,DWORD PTR [ebp-0x7]
  41c762:	lods   eax,DWORD PTR ds:[esi]
  41c763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c764:	cmp    al,0x31
  41c766:	and    eax,0xfa5c8f88
  41c76b:	sbb    al,0x2f
  41c76d:	(bad)  
  41c76e:	sqrtps xmm5,XMMWORD PTR [ebp+0x3f9e982a]
  41c775:	rcl    DWORD PTR [esi+0xaf83dcd],cl
  41c77b:	sbb    BYTE PTR [eax-0x7bc48d6],0x3e
  41c782:	and    ecx,ebp
  41c784:	xor    ah,BYTE PTR [ebx-0x3b17f763]
  41c78a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c78b:	and    edx,ebx
  41c78d:	inc    eax
  41c78e:	test   al,0xac
  41c790:	outs   dx,DWORD PTR ds:[esi]
  41c791:	sbb    eax,0x6f829d42
  41c796:	test   DWORD PTR [edx+edx*1-0x76],edx
  41c79a:	fsubr  st,st(2)
  41c79c:	ror    DWORD PTR [edx+0x3a],cl
  41c79f:	call   DWORD PTR ds:0x718db4aa
  41c7a5:	nop
  41c7a6:	std    
  41c7a7:	jle    0x41c77e
  41c7a9:	xchg   al,ah
  41c7ab:	je     0x41c779
  41c7ad:	or     eax,0xa3f76f17
  41c7b2:	out    dx,al
  41c7b3:	pop    es
  41c7b4:	in     al,dx
  41c7b5:	and    edx,DWORD PTR [ebx-0x7b]
  41c7b8:	mov    ah,0x4c
  41c7ba:	push   esi
  41c7bb:	or     ebx,DWORD PTR [ebx]
  41c7bd:	(bad)  
  41c7be:	out    dx,eax
  41c7bf:	xor    al,0xfd
  41c7c1:	pop    ebx
  41c7c3:	dec    esp
  41c7c4:	mov    al,ds:0x4882074c
  41c7c9:	cld    
  41c7ca:	leave  
  41c7cb:	xchg   ebp,eax
  41c7cc:	daa    
  41c7cd:	call   0x43c:0xbad6505a
  41c7d4:	mov    dh,0x4c
  41c7d6:	jbe    0x41c810
  41c7d8:	pop    eax
  41c7d9:	rcl    DWORD PTR [ecx-0x1b569871],1
  41c7df:	jp     0x41c7c4
  41c7e1:	xor    al,0xa1
  41c7e3:	inc    edi
  41c7e4:	push   0x1a
  41c7e6:	xor    BYTE PTR [edi-0x282e0b28],ch
  41c7ec:	mov    ds:0x99179397,al
  41c7f1:	dec    esp
  41c7f2:	loop   0x41c7cc
  41c7f4:	(bad)  
  41c7f5:	sub    DWORD PTR [ebp-0x73],esp
  41c7f8:	rcl    ah,1
  41c7fa:	lock push ds
  41c7fc:	and    bl,BYTE PTR [edx]
  41c7fe:	scas   eax,DWORD PTR es:[edi]
  41c7ff:	sbb    eax,0x3673c85c
  41c804:	and    DWORD PTR [ebx],ecx
  41c806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c807:	jo     0x41c838
  41c809:	pop    ebp
  41c80a:	jmp    0xc562:0x29535d9
  41c811:	mov    cl,0x77
  41c813:	lock div DWORD PTR [edi-0x3e3660ef]
  41c81a:	cmp    al,0xa
  41c81c:	xor    eax,0x69d5d464
  41c821:	dec    esi
  41c822:	push   edx
  41c823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c824:	sub    al,0xc4
  41c826:	enter  0xaaa9,0x26
  41c82a:	sub    al,0x19
  41c82c:	sub    al,0xc9
  41c82e:	mov    al,al
  41c830:	pop    ebp
  41c831:	je     0x41c840
  41c833:	loope  0x41c7e1
  41c835:	dec    ebp
  41c836:	jg     0x41c844
  41c838:	mov    ch,ch
  41c83a:	in     al,dx
  41c83b:	ins    BYTE PTR es:[edi],dx
  41c83c:	data16 out 0x47,al
  41c83f:	sub    dh,ah
  41c841:	push   edx
  41c842:	mov    edx,0xabb0914e
  41c847:	js     0x41c825
  41c849:	xchg   DWORD PTR [di-0x6c53],ebx
  41c84e:	adc    BYTE PTR [edx],dh
  41c850:	sahf   
  41c851:	je     0x41c829
  41c853:	jns    0x41c829
  41c855:	test   DWORD PTR [ebp-0x4b57b419],edi
  41c85b:	lods   eax,DWORD PTR ds:[esi]
  41c85c:	inc    ecx
  41c85d:	retf   
  41c85e:	cld    
  41c85f:	push   DWORD PTR [ecx+edx*1]
  41c862:	xchg   edx,eax
  41c863:	lahf   
  41c864:	retf   
  41c865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c866:	sbb    eax,0x93e44f9a
  41c86b:	jo     0x41c808
  41c86d:	xor    al,BYTE PTR ds:0x2fff79ac
  41c873:	sbb    BYTE PTR [edx],ah
  41c875:	adc    ax,WORD PTR [eax-0x6f]
  41c879:	les    eax,FWORD PTR [eax-0x6d]
  41c87c:	mov    cl,0x96
  41c87e:	out    0xfe,al
  41c880:	dec    ecx
  41c881:	dec    edi
  41c882:	pusha  
  41c883:	adc    BYTE PTR [ebp+0x48],dh
  41c886:	push   ebp
  41c887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c888:	dec    esi
  41c889:	stos   DWORD PTR es:[edi],eax
  41c88a:	sbb    ebp,ebx
  41c88c:	(bad)  
  41c88d:	in     eax,0x7
  41c88f:	out    0xe4,eax
  41c891:	xchg   edi,eax
  41c892:	mov    ecx,0xe767e76c
  41c897:	dec    esp
  41c898:	fild   QWORD PTR [ecx-0x4d]
  41c89b:	sub    al,0xd0
  41c89d:	fisttp WORD PTR ss:[edi]
  41c8a0:	ficom  DWORD PTR [edi-0x68]
  41c8a3:	ss push cs
  41c8a5:	int3   
  41c8a6:	sbb    ecx,DWORD PTR [edx+0x2e]
  41c8a9:	mov    eax,0xf8434b0e
  41c8ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8af:	aad    0xcc
  41c8b1:	nop
  41c8b2:	ja     0x41c91c
  41c8b4:	or     DWORD PTR [edx-0x7f],0x18aed434
  41c8bb:	loope  0x41c883
  41c8bd:	imul   edx,DWORD PTR [edi-0x46],0x90557efe
  41c8c4:	enter  0x1ea0,0xd5
  41c8c8:	jecxz  0x41c882
  41c8ca:	sub    al,0xa0
  41c8cc:	jns    0x41c875
  41c8ce:	inc    ebx
  41c8cf:	mov    ?,WORD PTR [ebp-0xb]
  41c8d2:	cmp    DWORD PTR [edi+ecx*1+0x3d],ebp
  41c8d6:	jnp    0x41c8bd
  41c8d8:	add    BYTE PTR [edi+0x61a6505f],bl
  41c8de:	or     DWORD PTR [ebx+0x301889f],ebp
  41c8e4:	add    edi,ebp
  41c8e6:	arpl   WORD PTR [esi+0x3],sp
  41c8e9:	in     eax,dx
  41c8ea:	jnp    0x41c95e
  41c8ec:	cmp    eax,0x4f53b053
  41c8f1:	pushf  
  41c8f2:	mov    BYTE PTR [esi+0x688eeb1e],ah
  41c8f8:	mov    esi,0xab1acd57
  41c8fd:	(bad)  
  41c8fe:	bound  edi,QWORD PTR [esi+0x41]
  41c901:	test   DWORD PTR [edi],0xed89b2af
  41c907:	mov    ch,0x8d
  41c909:	inc    ebp
  41c90a:	(bad)
  41c90e:	mov    al,BYTE PTR [ecx-0x2f]
  41c911:	sbb    cl,dl
  41c913:	add    eax,0xa7cf2cf3
  41c918:	cmp    eax,0xa59b1cbf
  41c91d:	fs je  0x41c8ab
  41c920:	jmp    0x41c8db
  41c922:	cs xor al,0xb1
  41c925:	mov    edi,0x2404eca
  41c92a:	dec    edx
  41c92b:	sti    
  41c92c:	retf   0x138b
  41c92f:	aas    
  41c930:	xor    ebp,ecx
  41c932:	pop    ebx
  41c933:	push   cs
  41c934:	and    cl,BYTE PTR [ebp-0x3a]
  41c937:	jno    0x41c963
  41c939:	test   eax,0x53d7fc79
  41c93e:	mov    bh,0x4a
  41c940:	and    ebx,ecx
  41c942:	call   0x103f:0xa04e2d13
  41c949:	cmp    ch,BYTE PTR ds:0x2afdb481
  41c94f:	sub    al,0xdc
  41c951:	rcl    BYTE PTR [eax-0x7c],cl
  41c954:	jnp    0x41c8e8
  41c956:	jmp    0x41c951
  41c958:	das    
  41c959:	jge    0x41c971
  41c95b:	sbb    BYTE PTR [ebp-0x5d528f52],al
  41c961:	pusha  
  41c962:	adc    BYTE PTR fs:[esi-0x16a7f995],0x72
  41c96a:	ja     0x41c950
  41c96c:	xchg   ecx,eax
  41c96d:	add    BYTE PTR ds:0x6bc06397,dh
  41c973:	sti    
  41c974:	ss (bad) 
  41c976:	or     BYTE PTR [ebx],bl
  41c978:	and    BYTE PTR [esi],0xc2
  41c97b:	lock pop ebx
  41c97d:	mov    edi,0xa14ced06
  41c982:	shl    bl,cl
  41c984:	gs dec edi
  41c986:	lds    edi,FWORD PTR [ecx]
  41c988:	div    BYTE PTR [ebp+0x383d058b]
  41c98e:	xchg   ecx,eax
  41c98f:	cmc    
  41c990:	mov    cl,0xdc
  41c992:	and    bl,BYTE PTR cs:[ecx-0x5fa62db7]
  41c999:	inc    esi
  41c99a:	lods   al,BYTE PTR ds:[esi]
  41c99b:	adc    eax,0x61264dd7
  41c9a0:	dec    ebp
  41c9a1:	jg     0x41c9e6
  41c9a3:	test   eax,0x3916001
  41c9a8:	mov    edi,DWORD PTR [ebx]
  41c9aa:	or     edx,DWORD PTR [edx]
  41c9ac:	repz dec esp
  41c9ae:	xchg   ebp,eax
  41c9af:	mov    dh,0xc0
  41c9b1:	mov    edi,0x63425ca8
  41c9b6:	xor    eax,0x58cbdd65
  41c9bb:	push   esi
  41c9bc:	sub    eax,0xcbed6ed5
  41c9c1:	fmul   QWORD PTR [ebp+0x1]
  41c9c4:	add    al,0x70
  41c9c6:	imul   edx,DWORD PTR [eax+0x28],0x3d
  41c9ca:	jmp    0x9f1fb226
  41c9cf:	pop    esp
  41c9d0:	mov    es,WORD PTR [edi-0x3c]
  41c9d3:	es in  eax,dx
  41c9d5:	ret    
  41c9d6:	imul   esp,DWORD PTR [ecx],0xe82d3351
  41c9dc:	neg    DWORD PTR [ecx+0x1a3f6d39]
  41c9e2:	daa    
  41c9e3:	push   es
  41c9e4:	out    0xe4,eax
  41c9e6:	pop    ds
  41c9e7:	cmp    eax,DWORD PTR [ebx-0x27c07fac]
  41c9ed:	leave  
  41c9ee:	pop    ss
  41c9ef:	push   esi
  41c9f0:	inc    esp
  41c9f1:	and    BYTE PTR [ebx],dh
  41c9f3:	ja     0x41c9c3
  41c9f5:	aas    
  41c9f6:	dec    eax
  41c9f7:	pop    edi
  41c9f8:	and    ah,dl
  41c9fa:	and    edx,ecx
  41c9fc:	adc    BYTE PTR [edi+ebp*1-0x779b13d0],bh
  41ca03:	and    esp,eax
  41ca05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca06:	les    esi,FWORD PTR [ebp+0x289ab903]
  41ca0c:	lahf   
  41ca0d:	popa   
  41ca0e:	jb     0x41ca4d
  41ca10:	cwde   
  41ca11:	icebp  
  41ca12:	jae    0x41ca4b
  41ca14:	iret   
  41ca15:	in     al,dx
  41ca16:	cmp    eax,0xc1fe6560
  41ca1b:	fimul  WORD PTR [ebp-0x56]
  41ca1e:	cs adc cl,ah
  41ca21:	jp     0x41ca23
  41ca23:	dec    ebx
  41ca24:	sub    BYTE PTR [edx+0x453349f0],dl
  41ca2a:	(bad)  
  41ca2b:	sbb    cl,al
  41ca2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca2e:	int3   
  41ca2f:	sbb    eax,0x9b6943b9
  41ca34:	rcl    ebx,1
  41ca36:	push   edi
  41ca37:	lds    ebx,FWORD PTR [ebp-0x4eb8c48c]
  41ca3d:	loop   0x41cab9
  41ca3f:	jecxz  0x41ca99
  41ca41:	bound  edi,QWORD PTR [eax-0x43]
  41ca44:	hlt    
  41ca45:	sti    
  41ca46:	out    dx,al
  41ca47:	mov    bh,0xbe
  41ca49:	enter  0xb029,0x19
  41ca4d:	dec    eax
  41ca4e:	xchg   ecx,eax
  41ca4f:	xchg   esp,eax
  41ca50:	push   ss
  41ca51:	sbb    BYTE PTR [edi],bl
  41ca53:	xor    BYTE PTR [ebp+0x4e],bh
  41ca56:	cmp    BYTE PTR [eax+0x70],0x82
  41ca5a:	test   al,0xd2
  41ca5c:	cmp    al,BYTE PTR [ecx]
  41ca5e:	sbb    al,BYTE PTR [edx]
  41ca60:	add    al,0x54
  41ca62:	lock or al,0xfd
  41ca65:	jbe    0x41ca0a
  41ca67:	pop    edi
  41ca68:	adc    DWORD PTR ds:0x531bfc34,0xc7108d36
  41ca72:	int    0xad
  41ca74:	xchg   esi,eax
  41ca75:	mov    ebp,0xee9d35e8
  41ca7a:	pop    ss
  41ca7b:	fisubr WORD PTR [edx]
  41ca7d:	rcr    eax,1
  41ca7f:	mov    bh,0xd8
  41ca81:	push   ecx
  41ca82:	push   esp
  41ca83:	jecxz  0x41ca99
  41ca85:	in     eax,0x99
  41ca87:	in     al,dx
  41ca88:	push   es
  41ca89:	pop    edi
  41ca8a:	sbb    eax,0xde9466f7
  41ca8f:	sbb    esp,DWORD PTR [ecx+0x248b597a]
  41ca95:	mov    dl,0x9d
  41ca97:	sbb    eax,0x335ae1a7
  41ca9c:	xchg   DWORD PTR [ebx-0x4e],esi
  41ca9f:	mov    bl,0x7c
  41caa1:	mov    BYTE PTR [ecx],dl
  41caa3:	adc    eax,0xb839af74
  41caa8:	jne    0x41cb07
  41caaa:	mov    DWORD PTR [ecx-0x5e],esi
  41caad:	daa    
  41caae:	xchg   bl,ah
  41cab0:	enter  0x42d3,0xfe
  41cab4:	ja     0x41ca72
  41cab6:	and    esi,eax
  41cab8:	int    0x69
  41caba:	dec    ebp
  41cabb:	sbb    DWORD PTR [ecx],ecx
  41cabd:	sbb    dh,bh
  41cabf:	(bad)  
  41cac0:	mov    eax,ds:0xf7511674
  41cac5:	imul   edi,DWORD PTR [ebp-0x7bfa357e],0xb917d669
  41cacf:	stos   DWORD PTR es:[edi],eax
  41cad0:	mov    eax,ds:0x47b4d2d1
  41cad5:	sbb    eax,0xad3abea0
  41cada:	mov    ch,BYTE PTR [ebp+0x50]
  41cadd:	sbb    ah,bh
  41cadf:	daa    
  41cae0:	arpl   WORD PTR [eax+0x6802ebcc],bp
  41cae6:	(bad)  [esi+0x9]
  41cae9:	test   eax,0x614975a1
  41caee:	mov    dh,0x26
  41caf0:	sbb    eax,0x86fcef1
  41caf5:	in     eax,dx
  41caf6:	mov    DWORD PTR [eax-0x4],esi
  41caf9:	test   eax,0xbe6e23d2
  41cafe:	stos   BYTE PTR es:[edi],al
  41caff:	loope  0x41cb51
  41cb01:	bound  esp,QWORD PTR [ecx-0x45212d7]
  41cb07:	sahf   
  41cb08:	xor    DWORD PTR [ecx+eax*1+0x503f3ba0],0xb6ec4dbf
  41cb13:	xor    DWORD PTR [eax],edi
  41cb15:	into   
  41cb16:	dec    ebp
  41cb17:	jno    0x41cb06
  41cb19:	and    esi,DWORD PTR [ebx+0x26]
  41cb1c:	lahf   
  41cb1d:	lock and DWORD PTR ds:0xe8f0fe84,ebp
  41cb24:	das    
  41cb25:	xor    dl,BYTE PTR [edi*8+0x33a484a9]
  41cb2c:	mov    al,ds:0xe9969265
  41cb31:	push   esi
  41cb32:	jecxz  0x41cb56
  41cb34:	or     BYTE PTR [eax+0x7e],ch
  41cb37:	push   esi
  41cb38:	sbb    DWORD PTR [edi+0x3b53efa5],edi
  41cb3e:	sub    ecx,DWORD PTR [ebx]
  41cb40:	lods   eax,DWORD PTR ds:[esi]
  41cb41:	shr    BYTE PTR [ebp+0x2],1
  41cb44:	or     dl,BYTE PTR [edx-0x70]
  41cb47:	push   0xffffffd2
  41cb49:	imul   esp,DWORD PTR [esi+0x2c]
  41cb4d:	dec    edx
  41cb4e:	and    al,0x8b
  41cb50:	xor    BYTE PTR [edi-0x6c85cd7d],cl
  41cb56:	addr16 (bad) 
  41cb58:	push   eax
  41cb59:	fwait
  41cb5a:	xchg   edi,eax
  41cb5b:	add    al,0x8f
  41cb5d:	ret    0x883e
  41cb60:	sub    DWORD PTR [ebx+0xe],0xf
  41cb64:	popa   
  41cb65:	hlt    
  41cb66:	or     BYTE PTR ds:0x33a06a09,ch
  41cb6c:	mov    esi,0xfe7ab36b
  41cb71:	lock jmp 0x192e:0x880538f0
  41cb79:	sbb    esi,edx
  41cb7b:	adc    esi,DWORD PTR [ecx+0x406181fa]
  41cb81:	lds    edi,FWORD PTR [ebx+0x2d]
  41cb84:	imul   ebx,DWORD PTR [esi],0x49
  41cb87:	or     ebp,DWORD PTR [esi-0x63]
  41cb8a:	mov    bl,0x53
  41cb8c:	call   0x7edc:0x6a965fd
  41cb93:	xchg   ebp,eax
  41cb94:	(bad)  
  41cb95:	pop    esp
  41cb96:	mov    al,ds:0x57d6ff23
  41cb9b:	into   
  41cb9c:	pop    eax
  41cb9d:	adc    BYTE PTR [esi+ebx*8-0x301ee1cc],dl
  41cba4:	inc    ebx
  41cba5:	int    0x48
  41cba7:	(bad)  
  41cba8:	(bad)  
  41cbaa:	or     DWORD PTR [edx],edi
  41cbac:	jbe    0x41cb32
  41cbae:	shr    cl,1
  41cbb0:	cld    
  41cbb1:	fucom  st(1)
  41cbb3:	adc    al,0xe9
  41cbb5:	mov    ebp,0xf26335c8
  41cbba:	loope  0x41cc33
  41cbbc:	jbe    0x41cbdf
  41cbbe:	frstor [edi]
  41cbc0:	mov    ds:0xf3f79162,al
  41cbc5:	inc    ebx
  41cbc6:	jle    0x41cbbc
  41cbc8:	lahf   
  41cbc9:	jp     0x41cb64
  41cbcb:	loop   0x41cb73
  41cbcd:	sar    DWORD PTR [si-0x80],1
  41cbd1:	jle    0x41cc4c
  41cbd3:	outs   dx,DWORD PTR ds:[esi]
  41cbd4:	jne    0x41cbc9
  41cbd6:	test   eax,0xe99406dc
  41cbdb:	fimul  WORD PTR [edi]
  41cbdd:	xor    edx,DWORD PTR [eax+0x48a96562]
  41cbe3:	pop    ebp
  41cbe4:	dec    eax
  41cbe5:	xor    bl,cl
  41cbe7:	es test al,0xda
  41cbea:	lods   eax,DWORD PTR ds:[esi]
  41cbeb:	adc    eax,0x97490a1d
  41cbf0:	push   esi
  41cbf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbf2:	imul   DWORD PTR [esi]
  41cbf4:	lock fdiv QWORD PTR [edi]
  41cbf7:	xchg   ebx,eax
  41cbf8:	inc    ecx
  41cbf9:	xchg   esp,eax
  41cbfa:	sbb    eax,DWORD PTR [ecx-0x3b]
  41cbfd:	aam    0x17
  41cbff:	xchg   DWORD PTR [ebx-0x51d531d5],edi
  41cc05:	add    BYTE PTR [ebx],al
  41cc07:	jmp    0xe101:0xa22134f0
  41cc0e:	sbb    esi,DWORD PTR [edx-0x62]
  41cc11:	sub    al,0x70
  41cc13:	mov    eax,ds:0x9ec15175
  41cc18:	mov    dl,0x21
  41cc1a:	loop   0x41cbfe
  41cc1c:	cwde   
  41cc1d:	mov    cl,0xe5
  41cc1f:	shld   DWORD PTR [ebx+0x59c97387],ebp,cl
  41cc26:	sub    al,0x81
  41cc28:	adc    esp,edx
  41cc2a:	jecxz  0x41cca3
  41cc2c:	(bad)  
  41cc2d:	xor    al,0x88
  41cc2f:	div    BYTE PTR [ecx+ebx*2-0x16dbc931]
  41cc36:	cld    
  41cc37:	mov    ch,BYTE PTR [ecx-0x3b]
  41cc3a:	xchg   ebx,eax
  41cc3b:	or     ebp,DWORD PTR [eax]
  41cc3d:	pop    esp
  41cc3e:	inc    ebp
  41cc3f:	scas   al,BYTE PTR es:[edi]
  41cc40:	sub    al,0x10
  41cc42:	fbld   TBYTE PTR [ebx-0x741efa56]
  41cc48:	or     ebx,eax
  41cc4a:	pop    edx
  41cc4b:	into   
  41cc4c:	inc    DWORD PTR [ecx]
  41cc4e:	pop    ebx
  41cc4f:	mov    ds:0x42d8cdb9,al
  41cc54:	retf   0x682f
  41cc57:	xor    eax,0x944504af
  41cc5c:	sub    al,0xea
  41cc5e:	clc    
  41cc5f:	scas   al,BYTE PTR es:[edi]
  41cc60:	cwde   
  41cc61:	daa    
  41cc62:	call   0xb9c14510
  41cc67:	mov    al,0xc1
  41cc69:	bound  ebp,QWORD PTR [edx]
  41cc6b:	adc    DWORD PTR [ebx-0x74],eax
  41cc6e:	xor    eax,0xc3d371d6
  41cc73:	mov    BYTE PTR [eax],cl
  41cc75:	mov    esp,0x33556a75
  41cc7a:	lods   al,BYTE PTR ds:[esi]
  41cc7b:	fld    QWORD PTR [ebx]
  41cc7d:	aam    0xc2
  41cc7f:	rcl    DWORD PTR [eax],cl
  41cc81:	xchg   DWORD PTR [eax-0x3bdd627d],esi
  41cc87:	pop    es
  41cc88:	jge    0x41cce6
  41cc8a:	repnz dec ecx
  41cc8c:	xor    edx,edi
  41cc8e:	sub    al,0x14
  41cc90:	inc    edx
  41cc91:	jno    0x41ccab
  41cc93:	aad    0x65
  41cc95:	retf   0x21c
  41cc98:	mov    ah,0x51
  41cc9a:	imul   edx,edi,0xa5b61797
  41cca0:	adc    BYTE PTR [ecx-0x7c0c73fa],al
  41cca6:	(bad)  
  41cca7:	jo     0x41ccc9
  41cca9:	inc    ebx
  41ccaa:	and    esp,DWORD PTR [ebx+esi*1]
  41ccad:	int    0x92
  41ccaf:	push   esi
  41ccb0:	mov    bl,0xee
  41ccb2:	xchg   ebx,eax
  41ccb3:	div    esi
  41ccb5:	mov    dl,0xb9
  41ccb7:	mov    ebx,0x71cafa47
  41ccbc:	mov    al,ds:0xebcc4ecc
  41ccc1:	shl    BYTE PTR [ebp+0x21],cl
  41ccc4:	xchg   edx,eax
  41ccc5:	mov    ebp,0xb70afb26
  41ccca:	aam    0x53
  41cccc:	mov    bl,0x30
  41ccce:	mov    BYTE PTR [ebx],dl
  41ccd0:	(bad)  [edi+0x253e7259]
  41ccd6:	inc    edx
  41ccd7:	aam    0x29
  41ccd9:	sar    DWORD PTR [edi-0x2e],1
  41ccdc:	fs jmp 0x41cd3c
  41ccdf:	mov    dh,0x5d
  41cce1:	outs   dx,BYTE PTR ds:[esi]
  41cce2:	and    eax,0x55927e1a
  41cce7:	in     al,dx
  41cce8:	push   esi
  41cce9:	pop    es
  41ccea:	cmp    ch,BYTE PTR [ecx+edx*8]
  41cced:	adc    ah,0xd1
  41ccf0:	jns    0x41cd4a
  41ccf2:	sub    eax,0x8b27a53a
  41ccf7:	in     al,0x36
  41ccf9:	sub    eax,edi
  41ccfb:	aas    
  41ccfc:	repz (bad) 
  41ccfe:	out    0xee,eax
  41cd00:	jo     0x41cc8d
  41cd02:	push   edi
  41cd03:	(bad)  
  41cd04:	les    esi,FWORD PTR [eax+ecx*2-0x415fdc35]
  41cd0b:	test   al,0x39
  41cd0d:	sub    BYTE PTR [ebx],0x87
  41cd10:	mov    ch,0x3b
  41cd12:	rcl    BYTE PTR [ebx-0x1a932b81],0x4
  41cd19:	mov    es,WORD PTR [ecx+eiz*4]
  41cd1c:	mov    esi,0x1ba8272e
  41cd21:	jnp    0x41cd38
  41cd23:	shr    BYTE PTR [esi],cl
  41cd25:	outs   dx,DWORD PTR ds:[esi]
  41cd26:	push   esp
  41cd27:	or     BYTE PTR [ebp-0x53],dl
  41cd2a:	fs fwait
  41cd2c:	jae    0x41cd0d
  41cd2e:	mov    edx,0x7a146d91
  41cd33:	xor    cl,bh
  41cd35:	dec    eax
  41cd36:	daa    
  41cd37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd38:	mov    dh,0x1f
  41cd3a:	inc    eax
  41cd3b:	mov    ebx,0xed43c827
  41cd40:	cwde   
  41cd41:	mov    ebx,0x6247cc54
  41cd46:	xchg   ecx,eax
  41cd47:	retf   
  41cd48:	push   ss
  41cd49:	push   ss
  41cd4a:	fiadd  WORD PTR [eax+0x3e]
  41cd4d:	adc    al,0x4a
  41cd4f:	mov    esi,0x8c09adc2
  41cd54:	dec    eax
  41cd55:	pop    ss
  41cd56:	iret   
  41cd57:	adc    BYTE PTR [ecx],0x46
  41cd5a:	in     al,0x59
  41cd5c:	sub    al,0x30
  41cd5e:	push   edi
  41cd5f:	es mov cs:0xc8f63619,eax
  41cd66:	hlt    
  41cd67:	xor    DWORD PTR [edi+ebx*1-0x76],edx
  41cd6b:	adc    ecx,edi
  41cd6d:	inc    dx
  41cd6f:	jmp    0x41cd4f
  41cd71:	xchg   ecx,eax
  41cd72:	test   BYTE PTR [ebp-0x5d],dl
  41cd75:	sbb    al,0x5b
  41cd77:	or     eax,0x8d4b03a4
  41cd7c:	popa   
  41cd7d:	loopne 0x41cdac
  41cd7f:	mov    eax,?
  41cd81:	sbb    cl,ah
  41cd83:	lock cmp al,0x6c
  41cd86:	sbb    dh,0x85
  41cd89:	xchg   ecx,eax
  41cd8a:	(bad)  
  41cd8b:	push   ds
  41cd8c:	sub    al,0x8d
  41cd8e:	pusha  
  41cd8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd90:	imul   ebp,DWORD PTR [edi-0x4],0x6169d594
  41cd97:	and    al,0xef
  41cd99:	ins    DWORD PTR es:[edi],dx
  41cd9a:	pop    ebx
  41cd9b:	mov    dh,0xdc
  41cd9d:	(bad)  
  41cd9e:	shl    BYTE PTR ds:0xc6edb7be,1
  41cda4:	xchg   ebp,eax
  41cda5:	sahf   
  41cda6:	fsubrp st(7),st
  41cda8:	stc    
  41cda9:	in     al,dx
  41cdaa:	rcl    BYTE PTR [esi],0x7e
  41cdad:	call   0x22e9:0xb432ed44
  41cdb4:	fcom   QWORD PTR [edx]
  41cdb6:	jo     0x41cdf6
  41cdb8:	sub    ebx,DWORD PTR [edi-0x13b37317]
  41cdbe:	aam    0xc0
  41cdc0:	(bad)  
  41cdc1:	enter  0x18df,0xb9
  41cdc5:	add    ecx,DWORD PTR [ebx]
  41cdc7:	out    0x3f,al
  41cdc9:	fiadd  WORD PTR [ebx+eax*4-0x10c2ab4f]
  41cdd0:	pop    ebp
  41cdd1:	sbb    al,0x49
  41cdd3:	jne    0x41cddd
  41cdd5:	push   es
  41cdd6:	in     eax,dx
  41cdd7:	cs push ecx
  41cdd9:	aaa    
  41cdda:	retf   
  41cddb:	in     eax,0xc8
  41cddd:	pop    ecx
  41cdde:	pop    ebp
  41cddf:	jp     0x41ce39
  41cde1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cde2:	(bad)  
  41cde3:	adc    dl,BYTE PTR [ebx]
  41cde5:	stos   BYTE PTR es:[edi],al
  41cde6:	mov    ?,WORD PTR [edi]
  41cde8:	xchg   BYTE PTR [eax-0x6f],bh
  41cdeb:	(bad)  
  41cdec:	mov    al,0x5c
  41cdee:	push   ebx
  41cdef:	ret    0xd5ba
  41cdf2:	nop
  41cdf3:	das    
  41cdf4:	out    0xe4,eax
  41cdf6:	push   edi
  41cdf7:	pop    ecx
  41cdf8:	push   ebp
  41cdf9:	cmp    bl,BYTE PTR [ecx+0x59d528a1]
  41cdff:	push   eax
  41ce00:	mov    eax,ds:0xabcdeb3d
  41ce05:	loope  0x41cdeb
  41ce07:	lock pop es
  41ce09:	cmp    al,0x47
  41ce0b:	pop    es
  41ce0c:	out    dx,al
  41ce0d:	call   0xce192e96
  41ce12:	cmp    esi,ebp
  41ce14:	fwait
  41ce15:	(bad)  
  41ce16:	cmp    al,0x55
  41ce18:	adc    al,0x52
  41ce1a:	or     BYTE PTR [eax-0x7],cl
  41ce1d:	loopne 0x41cdc8
  41ce1f:	lods   eax,DWORD PTR ds:[esi]
  41ce20:	mov    BYTE PTR [edi+eax*1-0x541c7851],cl
  41ce27:	or     al,0x3b
  41ce29:	pushf  
  41ce2a:	aad    0xd0
  41ce2c:	aad    0xc3
  41ce2e:	in     eax,dx
  41ce2f:	imul   esp,edx,0xffffff84
  41ce32:	imul   eax,DWORD PTR [ebx+edx*4+0x19],0xffffffdc
  41ce37:	add    DWORD PTR [edx],ecx
  41ce39:	leave  
  41ce3a:	adc    eax,0x54d0729d
  41ce3f:	mov    ?,WORD PTR [ebp+0x33a2c8bf]
  41ce45:	and    DWORD PTR [esi-0x80],ebp
  41ce48:	int3   
  41ce49:	pushf  
  41ce4a:	shl    BYTE PTR [edx+ebx*1],1
  41ce4d:	mov    WORD PTR [ecx+ebp*2],gs
  41ce50:	ins    BYTE PTR es:[edi],dx
  41ce51:	push   es
  41ce52:	cld    
  41ce53:	sbb    eax,0x8d541198
  41ce58:	ja     0x41ceb0
  41ce5a:	and    DWORD PTR [ecx-0xb],edx
  41ce5d:	in     eax,0x10
  41ce5f:	bound  edx,QWORD PTR [ebx]
  41ce61:	xchg   ecx,eax
  41ce62:	pop    eax
  41ce63:	ror    BYTE PTR [edi+0x70],1
  41ce66:	xchg   ebx,eax
  41ce67:	outs   dx,BYTE PTR ds:[esi]
  41ce68:	mov    esi,0xb99ac446
  41ce6d:	add    al,0xab
  41ce6f:	add    BYTE PTR [esi],dh
  41ce71:	add    ebx,edi
  41ce73:	aad    0x14
  41ce75:	push   ebx
  41ce76:	popa   
  41ce77:	or     DWORD PTR [ebx],ebx
  41ce79:	lods   al,BYTE PTR ds:[esi]
  41ce7a:	pop    ds
  41ce7b:	mov    ds:0x7e12379,eax
  41ce80:	push   ss
  41ce81:	and    DWORD PTR [esi],ebx
  41ce83:	imul   eax,DWORD PTR [ecx],0xfffffffb
  41ce86:	ret    0x8482
  41ce89:	mov    edx,0x1cf65880
  41ce8e:	shr    esp,1
  41ce90:	xor    al,0x3e
  41ce92:	addr16 fdivr st(4),st
  41ce95:	aam    0x94
  41ce97:	and    al,0x95
  41ce99:	into   
  41ce9a:	outs   dx,DWORD PTR ds:[esi]
  41ce9b:	jmp    0x3e41:0xd5402e1e
  41cea2:	shr    DWORD PTR [eax],0x71
  41cea5:	add    ecx,DWORD PTR [ebx]
  41cea7:	and    al,0xdc
  41cea9:	push   cs
  41ceaa:	dec    DWORD PTR [ebx-0x8]
  41cead:	sahf   
  41ceae:	ret    
  41ceaf:	out    0x48,eax
  41ceb1:	or     al,0xf5
  41ceb3:	sbb    al,0xb4
  41ceb5:	mov    ds:0xe172ec1a,eax
  41ceba:	mov    ebx,0xabd45f77
  41cebf:	das    
  41cec0:	add    esp,esi
  41cec2:	shl    DWORD PTR gs:[ebx-0x3e],0xc3
  41cec7:	push   0xa91a08b7
  41cecc:	test   BYTE PTR [edx-0x14592730],bl
  41ced2:	lock inc eax
  41ced4:	dec    eax
  41ced5:	mov    ah,0xfd
  41ced7:	jae    0x41cf08
  41ced9:	ins    DWORD PTR es:[edi],dx
  41ceda:	loope  0x41cf03
  41cedc:	xor    al,0xaf
  41cede:	inc    esi
  41cedf:	add    eax,0xd4a9e223
  41cee4:	jecxz  0x41cf55
  41cee6:	jne    0x41ceb2
  41cee8:	lds    edi,FWORD PTR [eax]
  41ceea:	pusha  
  41ceeb:	out    dx,eax
  41ceec:	fwait
  41ceed:	xor    BYTE PTR [esi+0x82f91f4],dh
  41cef3:	dec    eax
  41cef4:	jbe    0x41cedf
  41cef6:	jno    0x41ce94
  41cef8:	mov    al,ds:0xe93f9347
  41cefd:	jl     0x41cf67
  41ceff:	(bad)  
  41cf00:	stos   BYTE PTR es:[edi],al
  41cf01:	mov    esp,gs
  41cf03:	jl     0x41cf1a
  41cf05:	sub    edx,DWORD PTR [ebx-0x7ce29a08]
  41cf0b:	fs push 0xa98e0763
  41cf11:	and    dl,al
  41cf13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf14:	pop    ecx
  41cf15:	fdiv   QWORD PTR [edi+0x54d513ab]
  41cf1b:	rol    DWORD PTR [ecx+0x52156cec],cl
  41cf21:	fcomp  QWORD PTR [edx]
  41cf23:	hlt    
  41cf24:	loopne 0x41ced9
  41cf26:	lock rcr BYTE PTR [edi+esi*4],0x4d
  41cf2b:	cld    
  41cf2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf2d:	push   ss
  41cf2e:	add    ah,BYTE PTR [ebx-0x1a737e3b]
  41cf34:	shl    DWORD PTR [ecx+0x238ce635],1
  41cf3a:	sbb    DWORD PTR [edx],ecx
  41cf3c:	jb     0x41cf29
  41cf3e:	inc    esp
  41cf3f:	mov    ebp,0x4eb814a9
  41cf44:	js     0x41cf27
  41cf46:	out    dx,al
  41cf47:	push   0xffffff83
  41cf49:	pop    edi
  41cf4a:	div    DWORD PTR [edi]
  41cf4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf4e:	xor    al,0x28
  41cf50:	cmc    
  41cf51:	std    
  41cf52:	sub    eax,0x61a4b345
  41cf57:	mov    al,0xd2
  41cf59:	test   BYTE PTR [eax+0x3a],cl
  41cf5c:	push   eax
  41cf5d:	and    BYTE PTR [ecx],0x31
  41cf60:	push   0x5e
  41cf62:	inc    ebx
  41cf63:	xor    ecx,DWORD PTR [edx-0x7]
  41cf66:	sahf   
  41cf67:	push   es
  41cf68:	sub    al,0xd
  41cf6a:	clc    
  41cf6b:	and    BYTE PTR [edi-0x7f],cl
  41cf6e:	sub    DWORD PTR [ecx-0x6ac8e0c1],0xfffffffa
  41cf75:	xchg   ebp,eax
  41cf76:	stos   DWORD PTR es:[edi],eax
  41cf77:	inc    DWORD PTR [ecx-0x42]
  41cf7a:	cs or  eax,0xe32d70e5
  41cf80:	push   esp
  41cf81:	mov    eax,0x4565bb10
  41cf86:	xor    eax,0x1e8a6955
  41cf8b:	sbb    eax,0xb9989daa
  41cf90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf91:	call   0xa3c4:0xaeb76073
  41cf98:	or     BYTE PTR [ecx-0x25],dh
  41cf9b:	adc    al,BYTE PTR [edx-0x20]
  41cf9e:	into   
  41cf9f:	in     eax,dx
  41cfa0:	not    DWORD PTR [edx+edx*2]
  41cfa3:	adc    BYTE PTR [esi+0x4170373b],ch
  41cfa9:	mov    al,0x17
  41cfab:	or     dl,dh
  41cfad:	in     al,dx
  41cfae:	jg     0x41d013
  41cfb0:	add    al,0x2e
  41cfb2:	fcomp  DWORD PTR [ebp+0x50]
  41cfb5:	cmp    bh,ah
  41cfb7:	cmp    al,0xa1
  41cfb9:	or     al,0x46
  41cfbb:	mov    dl,0xe1
  41cfbd:	xchg   bh,bl
  41cfbf:	cmp    DWORD PTR [ecx-0x44ea9f69],eax
  41cfc5:	mov    ch,0xa1
  41cfc7:	mov    ?,WORD PTR [edx]
  41cfc9:	icebp  
  41cfca:	dec    edi
  41cfcb:	dec    bh
  41cfcd:	cmp    BYTE PTR [edx+ebx*4],dl
  41cfd0:	aas    
  41cfd1:	shl    DWORD PTR [edx],0x81
  41cfd4:	rol    eax,0x8
  41cfd7:	push   edi
  41cfd8:	add    BYTE PTR [edi],cl
  41cfda:	scas   eax,DWORD PTR es:[edi]
  41cfdb:	retf   0x4d89
  41cfde:	test   al,0x8b
  41cfe0:	dec    ebp
  41cfe1:	or     BYTE PTR [ebx-0x3e7e53ab],cl
  41cfe7:	mov    ds:0xb0064f8,al
  41cfec:	retf   0x4d89
  41cfef:	lods   al,BYTE PTR ds:[esi]
  41cff0:	mov    ecx,DWORD PTR [ebp+0x8]
  41cff3:	mov    edx,DWORD PTR [ebp-0x50]
  41cff6:	add    ecx,0x242ebed
  41cffc:	xor    ecx,edx
  41cffe:	mov    DWORD PTR [ebp-0x50],ecx
  41d001:	mov    ecx,DWORD PTR [ebp+0x8]
  41d004:	mov    edx,DWORD PTR [ebp-0x4c]
  41d007:	add    ecx,edi
  41d009:	and    ecx,edx
  41d00b:	mov    DWORD PTR [ebp-0x4c],ecx
  41d00e:	mov    ecx,DWORD PTR [ebp+0x8]
  41d011:	mov    edx,DWORD PTR [ebp-0x48]
  41d014:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41d01b:	mov    DWORD PTR [ebp-0x48],ecx
  41d01e:	mov    ecx,DWORD PTR [ebp+0x8]
  41d021:	mov    edx,0xfa5e15e2
  41d026:	sub    edx,ecx
  41d028:	add    edx,DWORD PTR [ebp-0x44]
  41d02b:	mov    DWORD PTR [ebp-0x44],edx
  41d02e:	mov    ecx,DWORD PTR [ebp+0x8]
  41d031:	xor    ecx,eax
  41d033:	add    ecx,esi
  41d035:	jne    0x41abff
  41d03b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d03e:	xor    ecx,eax
  41d040:	mov    eax,DWORD PTR [ebp+0x10]
  41d043:	add    ecx,esi
  41d045:	mov    DWORD PTR [eax],ecx
  41d047:	pop    edi
  41d048:	pop    esi
  41d049:	pop    ebx
  41d04a:	leave  
  41d04b:	ret    0xc
  41d04e:	add    al,ah
  41d050:	inc    edx
  41d051:	add    BYTE PTR [eax+eiz*8],al
  41d054:	inc    edx
  41d055:	add    BYTE PTR [eax],cl
  41d057:	loopne 0x41d09b
  41d059:	add    BYTE PTR [eax+eiz*8],cl
  41d05c:	inc    edx
  41d05d:	add    BYTE PTR [eax],dl
  41d05f:	loopne 0x41d0a3
  41d061:	add    BYTE PTR [eax+eiz*8],dl
  41d064:	inc    edx
  41d065:	add    BYTE PTR [eax],bl
  41d067:	loopne 0x41d0ab
  41d069:	add    BYTE PTR [eax+eiz*8],bl
  41d06c:	inc    edx
  41d06d:	add    BYTE PTR [eax],ah
  41d06f:	loopne 0x41d0b3
  41d071:	add    BYTE PTR [eax+eiz*8],ah
  41d074:	inc    edx
  41d075:	add    BYTE PTR [eax],ch
  41d077:	loopne 0x41d0bb
  41d079:	add    BYTE PTR [eax],al
  41d07b:	add    BYTE PTR [ebx+0x0],al
  41d07e:	add    al,0x0
  41d080:	inc    ebx
  41d081:	add    BYTE PTR [eax],cl
  41d083:	add    BYTE PTR [ebx+0x0],al
  41d086:	or     al,0x0
  41d088:	inc    ebx
  41d089:	add    BYTE PTR [eax],dl
  41d08b:	add    BYTE PTR [ebx+0x0],al
  41d08e:	adc    al,0x0
  41d090:	inc    ebx
  41d091:	add    BYTE PTR [eax],bl
  41d093:	add    BYTE PTR [ebx+0x0],al
  41d096:	sbb    al,0x0
  41d098:	inc    ebx
  41d099:	add    BYTE PTR [eax],al
  41d09b:	lock inc edx
  41d09d:	add    BYTE PTR [eax+esi*8],al
  41d0a0:	inc    edx
  41d0a1:	add    BYTE PTR [eax],cl
  41d0a3:	lock inc edx
  41d0a5:	add    BYTE PTR [eax+esi*8],cl
  41d0a8:	inc    edx
  41d0a9:	add    BYTE PTR [eax],dl
  41d0ab:	lock inc edx
  41d0ad:	add    BYTE PTR [eax+esi*8],dl
  41d0b0:	inc    edx
  41d0b1:	add    BYTE PTR [eax],bl
  41d0b3:	lock inc edx
  41d0b5:	add    BYTE PTR [eax+esi*8],bl
  41d0b8:	inc    edx
	...
  41d0c1:	add    BYTE PTR [eax],al
  41d0c3:	add    BYTE PTR [ecx+0x4d35d8],al
  41d0c9:	add    BYTE PTR [eax],al
  41d0cb:	add    BYTE PTR [edx],al
  41d0cd:	add    BYTE PTR [eax],al
  41d0cf:	add    BYTE PTR [esi],bh
  41d0d1:	add    BYTE PTR [eax],al
  41d0d3:	add    BYTE PTR [eax],al
  41d0d5:	rol    DWORD PTR [ecx],1
  41d0d7:	add    BYTE PTR [eax],al
  41d0d9:	lds    eax,FWORD PTR [ecx]
  41d0db:	add    BYTE PTR [eax],al
  41d0dd:	adc    BYTE PTR [ebx+0x0],al
  41d0e0:	add    al,0x10
  41d0e2:	inc    ebx
  41d0e3:	add    BYTE PTR [eax],cl
  41d0e5:	adc    BYTE PTR [ebx+0x0],al
  41d0e8:	or     al,0x10
  41d0ea:	inc    ebx
  41d0eb:	add    BYTE PTR [eax],dl
  41d0ed:	adc    BYTE PTR [ebx+0x0],al
  41d0f0:	adc    al,0x10
  41d0f2:	inc    ebx
  41d0f3:	add    BYTE PTR [eax],bl
  41d0f5:	adc    BYTE PTR [ebx+0x0],al
  41d0f8:	sbb    al,0x10
  41d0fa:	inc    ebx
  41d0fb:	add    BYTE PTR [eax],al
  41d0fd:	add    BYTE PTR [eax],al
  41d0ff:	add    BYTE PTR [edx+0x53],dl
  41d102:	inc    esp
  41d103:	push   ebx
  41d104:	dec    ebx
  41d105:	xor    ebx,esi
  41d107:	xchg   edi,eax
  41d108:	push   ebx
  41d109:	jne    0x41d0d5
  41d10b:	inc    ecx
  41d10c:	call   0x1cc6:0xcebab769
  41d113:	xchg   ebp,eax
  41d114:	add    DWORD PTR [eax],eax
  41d116:	add    BYTE PTR [eax],al
  41d118:	inc    esp
  41d119:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  41d11d:	outs   dx,WORD PTR ds:[esi]
  41d11f:	inc    esi
  41d120:	outs   dx,DWORD PTR ds:[esi]
  41d121:	ins    BYTE PTR es:[edi],dx
  41d122:	fs gs jb 0x41d16a
  41d126:	popa   
  41d127:	je     0x41d18a
  41d129:	pop    esp
  41d12a:	push   edi
  41d12b:	imul   ebp,DWORD PTR [esi+0x64],0x4973776f
  41d132:	outs   dx,BYTE PTR ds:[esi]
  41d133:	je     0x41d19a
  41d135:	jb     0x41d1a5
  41d137:	popa   
  41d138:	ins    BYTE PTR es:[edi],dx
  41d139:	inc    esi
  41d13a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x81ec558b
  41d142:	in     al,dx
  41d143:	or     BYTE PTR [ecx],al
  41d145:	add    BYTE PTR [eax],al
  41d147:	push   ebx
  41d148:	mov    eax,ebx
  41d14a:	xchg   ecx,eax
  41d14b:	mov    eax,DWORD PTR [ebp+0x8]
  41d14e:	cmp    eax,0xf89c8581
  41d153:	jne    0x41d5d8
  41d159:	mov    eax,DWORD PTR [ebp+0xc]
  41d15c:	cmp    eax,0xf89c8580
  41d161:	jne    0x41d5d8
  41d167:	mov    eax,DWORD PTR [ebp+0x24]
  41d16a:	mov    DWORD PTR [ebp-0x4],eax
  41d16d:	mov    BYTE PTR [ebp-0x18],0x1b
  41d171:	mov    BYTE PTR [ebp-0x17],0x1e
  41d175:	mov    BYTE PTR [ebp-0x16],0x5
  41d179:	mov    BYTE PTR [ebp-0x15],0x4f
  41d17d:	mov    BYTE PTR [ebp-0x14],0x4c
  41d181:	mov    BYTE PTR [ebp-0x13],0x72
  41d185:	mov    BYTE PTR [ebp-0x20],0x9
  41d189:	mov    BYTE PTR [ebp-0x1f],0xf
  41d18d:	mov    BYTE PTR [ebp-0x1e],0x19
  41d191:	mov    BYTE PTR [ebp-0x1d],0xc
  41d195:	mov    BYTE PTR [ebp-0x1c],0x4f
  41d199:	mov    BYTE PTR [ebp-0x1b],0x4c
  41d19d:	mov    BYTE PTR [ebp-0x1a],0x72
  41d1a1:	mov    BYTE PTR [ebp-0x28],0xf
  41d1a5:	mov    BYTE PTR [ebp-0x27],0x1a
  41d1a9:	mov    BYTE PTR [ebp-0x26],0x6
  41d1ad:	mov    BYTE PTR [ebp-0x25],0xb
  41d1b1:	mov    BYTE PTR [ebp-0x24],0x1d
  41d1b5:	mov    BYTE PTR [ebp-0x23],0x2
  41d1b9:	push   esi
  41d1ba:	mov    BYTE PTR [ebp-0x22],0x5
  41d1be:	mov    BYTE PTR [ebp-0x21],0x72
  41d1c2:	xor    esi,esi
  41d1c4:	mov    eax,0xf9
  41d1c9:	lea    ecx,[ebp+esi*1-0x18]
  41d1cd:	movzx  edx,BYTE PTR [ecx]
  41d1d0:	xor    edx,0x75
  41d1d3:	add    edx,eax
  41d1d5:	inc    esi
  41d1d6:	mov    BYTE PTR [ecx],dl
  41d1d8:	cmp    esi,0x6
  41d1db:	jb     0x41d1c9
  41d1dd:	xor    esi,esi
  41d1df:	lea    ecx,[ebp+esi*1-0x20]
  41d1e3:	movzx  edx,BYTE PTR [ecx]
  41d1e6:	xor    edx,0x75
  41d1e9:	add    edx,eax
  41d1eb:	inc    esi
  41d1ec:	mov    BYTE PTR [ecx],dl
  41d1ee:	cmp    esi,0x7
  41d1f1:	jb     0x41d1df
  41d1f3:	xor    esi,esi
  41d1f5:	lea    ecx,[ebp+esi*1-0x28]
  41d1f9:	movzx  edx,BYTE PTR [ecx]
  41d1fc:	xor    edx,0x75
  41d1ff:	add    edx,eax
  41d201:	inc    esi
  41d202:	mov    BYTE PTR [ecx],dl
  41d204:	cmp    esi,0x8
  41d207:	jb     0x41d1f5
  41d209:	lea    eax,[ebp-0x2c]
  41d20c:	mov    DWORD PTR [ebp-0x8],eax
  41d20f:	mov    ecx,DWORD PTR [ebp-0x8]
  41d212:	mov    eax,0x7113fcef
  41d217:	mov    DWORD PTR [ecx],eax
  41d219:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d21c:	push   edi
  41d21d:	mov    esi,0x4e20
  41d222:	mov    ebx,0x3272e4
  41d227:	cmp    ecx,eax
  41d229:	jne    0x41d2f4
  41d22f:	lea    eax,[esi+0x59]
  41d232:	mov    WORD PTR [ebp-0x78],ax
  41d236:	mov    eax,esi
  41d238:	mov    WORD PTR [ebp-0x76],ax
  41d23c:	add    eax,0x5f
  41d23f:	mov    WORD PTR [ebp-0x74],ax
  41d243:	lea    eax,[esi+0x1e]
  41d246:	mov    WORD PTR [ebp-0x72],ax
  41d24a:	add    eax,0x23
  41d24d:	mov    ecx,eax
  41d24f:	lea    eax,[esi+0x17]
  41d252:	mov    WORD PTR [ebp-0x66],ax
  41d256:	mov    eax,esi
  41d258:	mov    WORD PTR [ebp-0x64],ax
  41d25c:	add    eax,0x14
  41d25f:	mov    WORD PTR [ebp-0x62],ax
  41d263:	mov    eax,0x46d
  41d268:	mov    WORD PTR [ebp-0x60],ax
  41d26c:	mov    eax,0x567a
  41d271:	mov    WORD PTR [ebp-0x5e],ax
  41d275:	mov    eax,0x611a
  41d27a:	mov    WORD PTR [ebp-0x5c],ax
  41d27e:	lea    eax,[ebp-0xe0]
  41d284:	push   eax
  41d285:	mov    eax,DWORD PTR [ebp+0xc]
  41d288:	mov    edi,0x751089d
  41d28d:	xor    eax,edi
  41d28f:	add    eax,ebx
  41d291:	push   eax
  41d292:	mov    WORD PTR [ebp-0x70],cx
  41d296:	lea    ecx,[esi+0x1a]
  41d299:	mov    edx,ecx
  41d29b:	lea    eax,[ebp-0x78]
  41d29e:	push   eax
  41d29f:	mov    eax,DWORD PTR [ebp-0x4]
  41d2a2:	mov    eax,DWORD PTR [eax+0x198]
  41d2a8:	mov    WORD PTR [ebp-0x6e],dx
  41d2ac:	mov    edx,0x4f94
  41d2b1:	mov    WORD PTR [ebp-0x6c],dx
  41d2b5:	mov    DWORD PTR [ebp-0x6a],0x4e614e3b
  41d2bc:	mov    DWORD PTR [ebp-0x5a],0x4e3af108
  41d2c3:	mov    DWORD PTR [ebp-0xe0],0x1
  41d2cd:	mov    DWORD PTR [ebp-0xdc],0x255
  41d2d7:	push   DWORD PTR [eax]
  41d2d9:	mov    eax,DWORD PTR [ebp+0x10]
  41d2dc:	call   eax
  41d2de:	mov    DWORD PTR [ebp-0x8],eax
  41d2e1:	mov    eax,DWORD PTR [ebp-0x8]
  41d2e4:	test   eax,eax
  41d2e6:	je     0x41d2f9
  41d2e8:	xor    DWORD PTR ds:0x76586876,0x87687666
  41d2f2:	jmp    0x41d2f9
  41d2f4:	mov    edi,0x751089d
  41d2f9:	mov    eax,DWORD PTR [ebp-0x4]
  41d2fc:	mov    ecx,DWORD PTR [eax+0x18c]
  41d302:	xor    eax,eax
  41d304:	cmp    DWORD PTR [ecx],eax
  41d306:	jne    0x41d573
  41d30c:	mov    ecx,DWORD PTR [ebp-0x4]
  41d30f:	mov    ecx,DWORD PTR [ecx+0x17c]
  41d315:	mov    DWORD PTR [ecx],eax
  41d317:	mov    ecx,DWORD PTR [ebp-0x4]
  41d31a:	mov    ecx,DWORD PTR [ecx+0x180]
  41d320:	mov    DWORD PTR [ecx],eax
  41d322:	mov    eax,0x4f8f
  41d327:	mov    WORD PTR [ebp-0x9c],ax
  41d32e:	mov    eax,esi
  41d330:	mov    WORD PTR [ebp-0x9a],ax
  41d337:	mov    eax,0x4e7f
  41d33c:	mov    WORD PTR [ebp-0x98],ax
  41d343:	add    eax,0xffffffc0
  41d346:	mov    WORD PTR [ebp-0x96],ax
  41d34d:	mov    eax,0x4f90
  41d352:	mov    WORD PTR [ebp-0x94],ax
  41d359:	mov    eax,0x4e3c
  41d35e:	mov    WORD PTR [ebp-0x92],ax
  41d365:	add    eax,0x25
  41d368:	mov    WORD PTR [ebp-0x90],ax
  41d36f:	mov    eax,0x4e3a
  41d374:	mov    WORD PTR [ebp-0x8e],ax
  41d37b:	mov    eax,esi
  41d37d:	mov    WORD PTR [ebp-0x8c],ax
  41d384:	mov    eax,0x4e3b
  41d389:	mov    WORD PTR [ebp-0x8a],ax
  41d390:	mov    eax,0x99ff
  41d395:	mov    WORD PTR [ebp-0x88],ax
  41d39c:	mov    eax,0x828c
  41d3a1:	mov    WORD PTR [ebp-0x86],ax
  41d3a8:	mov    eax,0xd671
  41d3ad:	mov    WORD PTR [ebp-0x84],ax
  41d3b4:	mov    eax,0xd7ad
  41d3b9:	mov    WORD PTR [ebp-0x82],ax
  41d3c0:	mov    eax,0x27aa
  41d3c5:	mov    WORD PTR [ebp-0x80],ax
  41d3c9:	mov    eax,0x47aa
  41d3ce:	mov    WORD PTR [ebp-0x7e],ax
  41d3d2:	mov    eax,0x4e3d
  41d3d7:	push   0x8
  41d3d9:	mov    WORD PTR [ebp-0x7c],ax
  41d3dd:	mov    DWORD PTR [ebp-0x10],0xb061a0f
  41d3e4:	mov    DWORD PTR [ebp-0xc],0x7205021d
  41d3eb:	lea    eax,[ebp-0x10]
  41d3ee:	pop    ecx
  41d3ef:	mov    dl,BYTE PTR [eax]
  41d3f1:	xor    dl,0x75
  41d3f4:	sub    dl,0x7
  41d3f7:	mov    BYTE PTR [eax],dl
  41d3f9:	inc    eax
  41d3fa:	dec    ecx
  41d3fb:	jne    0x41d3ef
  41d3fd:	lea    eax,[ebp-0x10]
  41d400:	mov    DWORD PTR [ebp-0xdc],eax
  41d406:	lea    eax,[ebp-0xe0]
  41d40c:	push   eax
  41d40d:	mov    eax,DWORD PTR [ebp+0xc]
  41d410:	xor    eax,edi
  41d412:	add    eax,ebx
  41d414:	push   eax
  41d415:	mov    eax,DWORD PTR [ebp-0x4]
  41d418:	add    eax,0x66
  41d41b:	push   eax
  41d41c:	mov    eax,DWORD PTR [ebp-0x4]
  41d41f:	mov    eax,DWORD PTR [eax+0x198]
  41d425:	mov    DWORD PTR [ebp-0xe0],0x1
  41d42f:	push   DWORD PTR [eax]
  41d431:	mov    eax,DWORD PTR [ebp+0x10]
  41d434:	call   eax
  41d436:	mov    ecx,DWORD PTR [ebp+0x8]
  41d439:	xor    ecx,edi
  41d43b:	add    ecx,ebx
  41d43d:	mov    DWORD PTR [ebp-0x8],eax
  41d440:	cmp    eax,ecx
  41d442:	jne    0x41d45d
  41d444:	mov    eax,ds:0x33730bee
  41d449:	or     eax,0x22150bef
  41d44e:	mov    ds:0x33730bee,eax
  41d453:	add    eax,0x3372e90f
  41d458:	mov    ds:0x33730bee,eax
  41d45d:	mov    ecx,0x4f88
  41d462:	mov    eax,ecx
  41d464:	mov    WORD PTR [ebp-0x40],ax
  41d468:	mov    eax,0x4e75
  41d46d:	mov    edx,eax
  41d46f:	mov    WORD PTR [ebp-0x3e],dx
  41d473:	lea    edx,[ecx+0x15]
  41d476:	mov    WORD PTR [ebp-0x3c],dx
  41d47a:	add    edx,0xfffffff8
  41d47d:	mov    WORD PTR [ebp-0x3a],dx
  41d481:	lea    edx,[ecx+0xb]
  41d484:	mov    WORD PTR [ebp-0x38],dx
  41d488:	add    edx,0x1b
  41d48b:	mov    WORD PTR [ebp-0x36],dx
  41d48f:	lea    edx,[ecx+0x21]
  41d492:	mov    WORD PTR [ebp-0x34],dx
  41d496:	mov    WORD PTR [ebp-0x32],cx
  41d49a:	mov    ecx,esi
  41d49c:	mov    WORD PTR [ebp-0x30],cx
  41d4a0:	lea    ecx,[edx-0x1]
  41d4a3:	mov    edx,ecx
  41d4a5:	mov    WORD PTR [ebp-0x54],dx
  41d4a9:	mov    edx,eax
  41d4ab:	mov    WORD PTR [ebp-0x52],dx
  41d4af:	add    edx,0x8
  41d4b2:	mov    WORD PTR [ebp-0x50],dx
  41d4b6:	mov    WORD PTR [ebp-0x4e],ax
  41d4ba:	add    eax,0xfffffffe
  41d4bd:	mov    WORD PTR [ebp-0x4c],ax
  41d4c1:	lea    eax,[ecx-0x1a]
  41d4c4:	mov    WORD PTR [ebp-0x4a],ax
  41d4c8:	add    eax,0xfffffffb
  41d4cb:	mov    WORD PTR [ebp-0x48],ax
  41d4cf:	mov    WORD PTR [ebp-0x46],cx
  41d4d3:	mov    WORD PTR [ebp-0x44],si
  41d4d7:	mov    eax,DWORD PTR [ebp+0x8]
  41d4da:	movzx  ecx,WORD PTR [ebp-0x54]
  41d4de:	xor    eax,edi
  41d4e0:	add    eax,ebx
  41d4e2:	xor    eax,ecx
  41d4e4:	mov    WORD PTR [ebp-0x54],ax
  41d4e8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4eb:	movzx  ecx,WORD PTR [ebp-0x40]
  41d4ef:	xor    eax,edi
  41d4f1:	add    eax,ebx
  41d4f3:	xor    eax,ecx
  41d4f5:	mov    WORD PTR [ebp-0x40],ax
  41d4f9:	xor    eax,eax
  41d4fb:	mov    WORD PTR [ebp-0xf4],ax
  41d502:	mov    WORD PTR [ebp-0x108],ax
  41d509:	mov    edi,DWORD PTR [ebp+0x24]
  41d50c:	lea    eax,[ebp-0xf4]
  41d512:	lea    edx,[ebp-0x54]
  41d515:	mov    DWORD PTR [ebp-0xe0],0x2
  41d51f:	mov    DWORD PTR [ebp-0xdc],eax
  41d525:	call   0x41ff39
  41d52a:	mov    DWORD PTR [ebp-0xd8],eax
  41d530:	lea    eax,[ebp-0xe0]
  41d536:	push   eax
  41d537:	mov    eax,DWORD PTR [ebp+0xc]
  41d53a:	xor    eax,0x751089d
  41d53f:	add    eax,ebx
  41d541:	push   eax
  41d542:	lea    eax,[ebp-0x9c]
  41d548:	push   eax
  41d549:	push   DWORD PTR [ebp-0x8]
  41d54c:	mov    eax,DWORD PTR [ebp+0x10]
  41d54f:	call   eax
  41d551:	mov    edi,DWORD PTR [ebp+0x24]
  41d554:	lea    eax,[ebp-0x108]
  41d55a:	lea    edx,[ebp-0x40]
  41d55d:	mov    DWORD PTR [ebp-0xdc],eax
  41d563:	call   0x41ff39
  41d568:	mov    DWORD PTR [ebp-0xd8],eax
  41d56e:	mov    edi,0x751089d
  41d573:	mov    eax,DWORD PTR [ebp+0x14]
  41d576:	push   DWORD PTR [ebp-0x4]
  41d579:	push   DWORD PTR [ebp+0x20]
  41d57c:	push   DWORD PTR [ebp+0x1c]
  41d57f:	push   DWORD PTR [ebp+0x18]
  41d582:	push   DWORD PTR [ebp+0x10]
  41d585:	push   DWORD PTR [ebp+0x8]
  41d588:	push   DWORD PTR [ebp+0xc]
  41d58b:	call   0x41e7d8
  41d590:	test   eax,eax
  41d592:	je     0x41d5d6
  41d594:	add    DWORD PTR [ebp-0x4],eax
  41d597:	push   DWORD PTR [ebp-0x4]
  41d59a:	lea    esi,[ebp+0x4]
  41d59d:	call   0x41d9c6
  41d5a2:	mov    eax,DWORD PTR [ebp-0x4]
  41d5a5:	mov    eax,DWORD PTR [eax+0x1c8]
  41d5ab:	mov    eax,DWORD PTR [eax]
  41d5ad:	xor    eax,edi
  41d5af:	add    eax,ebx
  41d5b1:	mov    eax,DWORD PTR [ebp-0x4]
  41d5b4:	jne    0x41d5cc
  41d5b6:	mov    ecx,DWORD PTR [ebp-0x4]
  41d5b9:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d5bf:	push   DWORD PTR [ecx]
  41d5c1:	mov    eax,DWORD PTR [eax+0x1d8]
  41d5c7:	call   DWORD PTR [eax+0x28]
  41d5ca:	jmp    0x41d5d6
  41d5cc:	mov    eax,DWORD PTR [eax+0x17c]
  41d5d2:	mov    eax,DWORD PTR [eax]
  41d5d4:	add    DWORD PTR [esi],eax
  41d5d6:	pop    edi
  41d5d7:	pop    esi
  41d5d8:	pop    ebx
  41d5d9:	leave  
  41d5da:	ret    0x20
  41d5dd:	push   edi
  41d5de:	push   esi
  41d5df:	push   ebx
  41d5e0:	push   ebp
  41d5e1:	mov    ebp,esp
  41d5e3:	mov    eax,DWORD PTR [ebp+0x24]
  41d5e6:	add    DWORD PTR [ebp+0x28],eax
  41d5e9:	push   eax
  41d5ea:	cld    
  41d5eb:	mov    esi,DWORD PTR [ebp+0x18]
  41d5ee:	add    DWORD PTR [ebp+0x1c],esi
  41d5f1:	push   esi
  41d5f2:	mov    esi,DWORD PTR [ebp+0x14]
  41d5f5:	lods   eax,DWORD PTR ds:[esi]
  41d5f6:	xchg   edx,eax
  41d5f7:	push   edx
  41d5f8:	mov    cl,BYTE PTR [esi-0x2]
  41d5fb:	or     eax,0xffffffff
  41d5fe:	shl    eax,cl
  41d600:	not    eax
  41d602:	push   eax
  41d603:	mov    cl,dh
  41d605:	or     eax,0xffffffff
  41d608:	shl    eax,cl
  41d60a:	not    eax
  41d60c:	push   eax
  41d60d:	add    cl,dl
  41d60f:	mov    edi,esi
  41d611:	sub    esp,0xc
  41d614:	sub    eax,eax
  41d616:	inc    eax
  41d617:	push   eax
  41d618:	push   eax
  41d619:	push   eax
  41d61a:	push   eax
  41d61b:	push   eax
  41d61c:	push   edi
  41d61d:	sub    esi,esi
  41d61f:	push   esi
  41d620:	or     ebx,0xffffffff
  41d623:	mov    eax,0x300
  41d628:	shl    eax,cl
  41d62a:	lea    ecx,[eax+0x736]
  41d630:	mov    eax,0x4000400
  41d635:	shr    ecx,1
  41d637:	rep stos DWORD PTR es:[edi],eax
  41d639:	push   0x5
  41d63b:	pop    ecx
  41d63c:	call   0x41d927
  41d641:	loop   0x41d63c
  41d643:	lea    esi,[esi]
  41d645:	lea    edi,[edi]
  41d647:	mov    edi,DWORD PTR [ebp-0x4]
  41d64a:	mov    eax,DWORD PTR [ebp-0x10]
  41d64d:	sub    edi,DWORD PTR [ebp+0x24]
  41d650:	and    eax,edi
  41d652:	mov    DWORD PTR [ebp-0x18],eax
  41d655:	mov    al,0x0
  41d657:	call   0x41d93f
  41d65c:	jne    0x41d6f7
  41d662:	mov    cl,BYTE PTR [ebp-0xc]
  41d665:	and    edi,DWORD PTR [ebp-0x14]
  41d668:	shl    edi,cl
  41d66a:	sub    cl,0x8
  41d66d:	neg    cl
  41d66f:	shr    esi,cl
  41d671:	pop    eax
  41d672:	add    edi,esi
  41d674:	pop    esi
  41d675:	lea    edi,[edi+edi*2]
  41d678:	shl    edi,0x8
  41d67b:	cmp    al,0x7
  41d67d:	pop    edx
  41d67e:	lea    ecx,[esi+edi*2+0xe6c]
  41d685:	push   ecx
  41d686:	push   esi
  41d687:	mov    esi,0x100
  41d68c:	push   eax
  41d68d:	mov    al,0x1
  41d68f:	jb     0x41d6c5
  41d691:	mov    edi,DWORD PTR [ebp-0x4]
  41d694:	sub    edi,DWORD PTR [ebp-0x24]
  41d697:	movzx  edi,BYTE PTR [edi]
  41d69a:	mov    ebp,DWORD PTR [ebp-0x34]
  41d69d:	shl    edi,1
  41d69f:	mov    ecx,esi
  41d6a1:	and    esi,edi
  41d6a3:	add    ecx,esi
  41d6a5:	lea    ebp,[ebp+ecx*2+0x0]
  41d6a9:	call   0x41d95e
  41d6ae:	mov    ecx,eax
  41d6b0:	shr    esi,0x8
  41d6b3:	and    ecx,0x1
  41d6b6:	cmp    esi,ecx
  41d6b8:	mov    esi,0x100
  41d6bd:	jne    0x41d6cd
  41d6bf:	cmp    eax,esi
  41d6c1:	jb     0x41d69a
  41d6c3:	jmp    0x41d6d9
  41d6c5:	mov    ebp,DWORD PTR [ebp-0x34]
  41d6c8:	call   0x41d95e
  41d6cd:	inc    eax
  41d6ce:	inc    esi
  41d6cf:	sub    eax,0x1
  41d6d2:	sub    esi,0x1
  41d6d5:	cmp    eax,esi
  41d6d7:	jb     0x41d6c5
  41d6d9:	pop    edx
  41d6da:	inc    edx
  41d6db:	cmp    edx,0x5
  41d6de:	dec    edx
  41d6df:	mov    ecx,edx
  41d6e1:	jb     0x41d6f2
  41d6e3:	inc    edx
  41d6e4:	cmp    edx,0xb
  41d6e7:	dec    edx
  41d6e8:	mov    cl,0x4
  41d6ea:	dec    cl
  41d6ec:	jb     0x41d6f2
  41d6ee:	mov    cl,0x7
  41d6f0:	dec    cl
  41d6f2:	sub    edx,ecx
  41d6f4:	push   edx
  41d6f5:	jmp    0x41d746
  41d6f7:	mov    al,0xc1
  41d6f9:	dec    al
  41d6fb:	call   0x41d94f
  41d700:	jne    0x41d716
  41d702:	pop    eax
  41d703:	pop    edi
  41d704:	pop    edx
  41d705:	pop    ecx
  41d706:	pop    edx
  41d707:	pop    ecx
  41d708:	push   DWORD PTR [esp]
  41d70b:	push   ecx
  41d70c:	push   edx
  41d70d:	mov    edx,0x664
  41d712:	mov    cl,0x0
  41d714:	jmp    0x41d789
  41d716:	mov    al,0xcd
  41d718:	dec    al
  41d71a:	call   0x41d94f
  41d71f:	jne    0x41d74f
  41d721:	mov    al,0xf1
  41d723:	dec    al
  41d725:	call   0x41d93f
  41d72a:	jne    0x41d77f
  41d72c:	pop    eax
  41d72d:	cmp    al,0x7
  41d72f:	mov    al,0x9
  41d731:	jb     0x41d735
  41d733:	mov    al,0xb
  41d735:	push   eax
  41d736:	mov    esi,DWORD PTR [ebp-0x4]
  41d739:	sub    esi,DWORD PTR [ebp-0x24]
  41d73c:	cmp    esi,DWORD PTR [ebp+0x24]
  41d73f:	jb     0x41d916
  41d745:	lods   al,BYTE PTR ds:[esi]
  41d746:	mov    edi,DWORD PTR [ebp-0x4]
  41d749:	stos   BYTE PTR es:[edi],al
  41d74a:	jmp    0x41d8dd
  41d74f:	mov    al,0xd8
  41d751:	call   0x41d94f
  41d756:	mov    esi,DWORD PTR [ebp-0x28]
  41d759:	je     0x41d776
  41d75b:	mov    al,0xe4
  41d75d:	call   0x41d94f
  41d762:	mov    esi,DWORD PTR [ebp-0x2c]
  41d765:	je     0x41d770
  41d767:	mov    esi,DWORD PTR [ebp-0x30]
  41d76a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d76d:	mov    DWORD PTR [ebp-0x30],ecx
  41d770:	mov    ecx,DWORD PTR [ebp-0x28]
  41d773:	mov    DWORD PTR [ebp-0x2c],ecx
  41d776:	mov    ecx,DWORD PTR [ebp-0x24]
  41d779:	mov    DWORD PTR [ebp-0x28],ecx
  41d77c:	mov    DWORD PTR [ebp-0x24],esi
  41d77f:	pop    eax
  41d780:	pop    edi
  41d781:	pop    ecx
  41d782:	mov    edx,0xa68
  41d787:	mov    cl,0x8
  41d789:	add    edx,edi
  41d78b:	push   edx
  41d78c:	push   edi
  41d78d:	cmp    al,0x7
  41d78f:	mov    al,cl
  41d791:	jb     0x41d795
  41d793:	add    al,0x3
  41d795:	push   eax
  41d796:	mov    ebp,DWORD PTR [ebp-0x34]
  41d799:	call   0x41d95c
  41d79e:	jne    0x41d7b4
  41d7a0:	mov    eax,DWORD PTR [ebp-0x18]
  41d7a3:	mov    edi,DWORD PTR [ebp-0x34]
  41d7a6:	shl    eax,0x3
  41d7a9:	sub    ecx,ecx
  41d7ab:	push   0x8
  41d7ad:	pop    esi
  41d7ae:	lea    edi,[edi+eax*2+0x4]
  41d7b2:	jmp    0x41d7e9
  41d7b4:	mov    ebp,DWORD PTR [ebp-0x34]
  41d7b7:	add    ebp,0x2
  41d7ba:	call   0x41d95c
  41d7bf:	jne    0x41d7d9
  41d7c1:	mov    eax,DWORD PTR [ebp-0x18]
  41d7c4:	mov    edi,DWORD PTR [ebp-0x34]
  41d7c7:	shl    eax,0x3
  41d7ca:	push   0x8
  41d7cc:	pop    ecx
  41d7cd:	push   0x8
  41d7cf:	pop    esi
  41d7d0:	lea    edi,[edi+eax*2+0x104]
  41d7d7:	jmp    0x41d7e9
  41d7d9:	mov    edi,0x204
  41d7de:	add    edi,DWORD PTR [ebp-0x34]
  41d7e1:	push   0x10
  41d7e3:	pop    ecx
  41d7e4:	mov    esi,0x100
  41d7e9:	mov    DWORD PTR [ebp-0x1c],ecx
  41d7ec:	sub    eax,eax
  41d7ee:	inc    eax
  41d7ef:	mov    ebp,edi
  41d7f1:	call   0x41d95e
  41d7f6:	mov    ecx,eax
  41d7f8:	sub    ecx,esi
  41d7fa:	jb     0x41d7ef
  41d7fc:	add    DWORD PTR [ebp-0x1c],ecx
  41d7ff:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d803:	jae    0x41d8b9
  41d809:	add    DWORD PTR [ebp-0x3c],0x7
  41d80d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d810:	cmp    ecx,0x4
  41d813:	jb     0x41d818
  41d815:	push   0x3
  41d817:	pop    ecx
  41d818:	mov    edi,DWORD PTR [ebp-0x38]
  41d81b:	shl    ecx,0x6
  41d81e:	sub    eax,eax
  41d820:	inc    eax
  41d821:	push   0x40
  41d823:	pop    esi
  41d824:	lea    edi,[edi+ecx*2+0x360]
  41d82b:	mov    ebp,edi
  41d82d:	call   0x41d95e
  41d832:	mov    ecx,eax
  41d834:	sub    ecx,esi
  41d836:	jb     0x41d82b
  41d838:	mov    DWORD PTR [ebp-0x18],ecx
  41d83b:	mov    DWORD PTR [ebp-0x24],ecx
  41d83e:	cmp    ecx,0x4
  41d841:	jb     0x41d8b6
  41d843:	mov    esi,ecx
  41d845:	and    DWORD PTR [ebp-0x24],0x1
  41d849:	shr    esi,1
  41d84b:	or     DWORD PTR [ebp-0x24],0x2
  41d84f:	dec    esi
  41d850:	cmp    ecx,0xe
  41d853:	jae    0x41d86e
  41d855:	mov    eax,0x2af
  41d85a:	sub    eax,ecx
  41d85c:	mov    ecx,esi
  41d85e:	shl    BYTE PTR [ebp-0x24],cl
  41d861:	add    eax,DWORD PTR [ebp-0x24]
  41d864:	shl    eax,1
  41d866:	add    eax,DWORD PTR [ebp-0x38]
  41d869:	mov    DWORD PTR [ebp-0x34],eax
  41d86c:	jmp    0x41d89b
  41d86e:	sub    esi,0x4
  41d871:	call   0x41d91b
  41d876:	shr    ebx,1
  41d878:	shl    DWORD PTR [ebp-0x24],1
  41d87b:	cmp    DWORD PTR [ebp-0x20],ebx
  41d87e:	jb     0x41d886
  41d880:	inc    DWORD PTR [ebp-0x24]
  41d883:	sub    DWORD PTR [ebp-0x20],ebx
  41d886:	dec    esi
  41d887:	jne    0x41d871
  41d889:	mov    eax,0x644
  41d88e:	add    eax,DWORD PTR [ebp-0x38]
  41d891:	mov    DWORD PTR [ebp-0x34],eax
  41d894:	shl    DWORD PTR [ebp-0x24],0x4
  41d898:	push   0x4
  41d89a:	pop    esi
  41d89b:	sub    edi,edi
  41d89d:	inc    edi
  41d89e:	mov    eax,edi
  41d8a0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d8a3:	call   0x41d95e
  41d8a8:	test   al,0x1
  41d8aa:	je     0x41d8af
  41d8ac:	or     DWORD PTR [ebp-0x24],edi
  41d8af:	shl    edi,1
  41d8b1:	dec    esi
  41d8b2:	jne    0x41d8a0
  41d8b4:	jmp    0x41d8b6
  41d8b6:	inc    DWORD PTR [ebp-0x24]
  41d8b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d8bc:	add    ecx,0x2
  41d8bf:	mov    edi,DWORD PTR [ebp-0x4]
  41d8c2:	mov    eax,edi
  41d8c4:	sub    eax,DWORD PTR [ebp+0x24]
  41d8c7:	cmp    DWORD PTR [ebp-0x24],eax
  41d8ca:	ja     0x41d916
  41d8cc:	mov    esi,edi
  41d8ce:	sub    esi,DWORD PTR [ebp-0x24]
  41d8d1:	mov    edx,DWORD PTR [ebp+0x28]
  41d8d4:	lods   al,BYTE PTR ds:[esi]
  41d8d5:	stos   BYTE PTR es:[edi],al
  41d8d6:	cmp    edi,edx
  41d8d8:	jae    0x41d8dd
  41d8da:	dec    ecx
  41d8db:	jne    0x41d8d4
  41d8dd:	mov    DWORD PTR [ebp-0x4],edi
  41d8e0:	movzx  esi,al
  41d8e3:	cmp    edi,DWORD PTR [ebp+0x28]
  41d8e6:	jb     0x41d647
  41d8ec:	call   0x41d91b
  41d8f1:	sub    eax,eax
  41d8f3:	lea    ebp,[esp+0x3c]
  41d8f7:	mov    edx,DWORD PTR [ebp+0x20]
  41d8fa:	mov    esi,DWORD PTR [ebp-0x8]
  41d8fd:	sub    esi,DWORD PTR [ebp+0x18]
  41d900:	mov    DWORD PTR [edx],esi
  41d902:	mov    edx,DWORD PTR [ebp+0x2c]
  41d905:	mov    edi,DWORD PTR [ebp-0x4]
  41d908:	sub    edi,DWORD PTR [ebp+0x24]
  41d90b:	mov    DWORD PTR [edx],edi
  41d90d:	leave  
  41d90e:	pop    ebx
  41d90f:	pop    esi
  41d910:	pop    edi
  41d911:	ret    0x1c
  41d914:	pop    esi
  41d915:	pop    eax
  41d916:	sub    eax,eax
  41d918:	inc    eax
  41d919:	jmp    0x41d8f3
  41d91b:	cmp    ebx,0x1000000
  41d921:	jb     0x41d924
  41d923:	ret    
  41d924:	shl    ebx,0x8
  41d927:	push   esi
  41d928:	mov    esi,DWORD PTR [ebp-0x8]
  41d92b:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d92e:	jae    0x41d914
  41d930:	mov    eax,DWORD PTR [ebp-0x20]
  41d933:	shl    eax,0x8
  41d936:	lods   al,BYTE PTR ds:[esi]
  41d937:	mov    DWORD PTR [ebp-0x20],eax
  41d93a:	mov    DWORD PTR [ebp-0x8],esi
  41d93d:	pop    esi
  41d93e:	ret    
  41d93f:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d942:	movzx  eax,al
  41d945:	shl    ecx,0x4
  41d948:	add    eax,DWORD PTR [ebp-0x18]
  41d94b:	add    eax,ecx
  41d94d:	jmp    0x41d955
  41d94f:	movzx  eax,al
  41d952:	add    eax,DWORD PTR [ebp-0x3c]
  41d955:	mov    ebp,DWORD PTR [ebp-0x38]
  41d958:	lea    ebp,[ebp+eax*2+0x0]
  41d95c:	sub    eax,eax
  41d95e:	lea    ebp,[ebp+eax*2+0x0]
  41d962:	cmp    ebx,0x1000000
  41d968:	jae    0x41d986
  41d96a:	mov    ecx,DWORD PTR [esp+0x38]
  41d96e:	shl    DWORD PTR [esp+0x20],0x8
  41d973:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d977:	jae    0x41d915
  41d979:	mov    dl,BYTE PTR [ecx]
  41d97b:	inc    DWORD PTR [esp+0x38]
  41d97f:	shl    ebx,0x8
  41d982:	mov    BYTE PTR [esp+0x20],dl
  41d986:	mov    ecx,ebx
  41d988:	movzx  edx,WORD PTR [ebp+0x0]
  41d98c:	shr    ecx,0xb
  41d98f:	imul   ecx,edx
  41d992:	cmp    DWORD PTR [esp+0x20],ecx
  41d996:	jae    0x41d9af
  41d998:	mov    ebx,ecx
  41d99a:	mov    ecx,0x800
  41d99f:	sub    ecx,edx
  41d9a1:	shr    ecx,0x5
  41d9a4:	add    WORD PTR [ebp+0x0],cx
  41d9a8:	add    eax,eax
  41d9aa:	lea    ebp,[esp+0x40]
  41d9ae:	ret    
  41d9af:	shr    edx,0x5
  41d9b2:	sub    DWORD PTR [esp+0x20],ecx
  41d9b6:	sub    ebx,ecx
  41d9b8:	sub    WORD PTR [ebp+0x0],dx
  41d9bc:	add    eax,eax
  41d9be:	add    eax,0x1
  41d9c1:	lea    ebp,[esp+0x40]
  41d9c5:	ret    
  41d9c6:	push   ebp
  41d9c7:	mov    ebp,esp
  41d9c9:	sub    esp,0x12c
  41d9cf:	push   ebx
  41d9d0:	push   esi
  41d9d1:	push   edi
  41d9d2:	mov    DWORD PTR [ebp-0x10],0xf89c8581
  41d9d9:	mov    DWORD PTR [ebp-0x18],0xf89c8580
  41d9e0:	mov    eax,DWORD PTR [ebp+0x8]
  41d9e3:	mov    DWORD PTR [ebp+0x8],eax
  41d9e6:	mov    ecx,DWORD PTR [ebp-0x10]
  41d9e9:	mov    ebx,0x751089d
  41d9ee:	xor    ecx,ebx
  41d9f0:	mov    eax,0x3272e4
  41d9f5:	add    ecx,eax
  41d9f7:	mov    DWORD PTR [ebp-0x2c],ecx
  41d9fa:	mov    ecx,DWORD PTR [ebp-0x10]
  41d9fd:	xor    ecx,ebx
  41d9ff:	add    ecx,eax
  41da01:	mov    DWORD PTR [ebp-0x3c],ecx
  41da04:	mov    ecx,DWORD PTR [ebp-0x10]
  41da07:	xor    ecx,ebx
  41da09:	add    ecx,eax
  41da0b:	mov    DWORD PTR [ebp-0x40],ecx
  41da0e:	mov    ecx,DWORD PTR [ebp-0x10]
  41da11:	xor    ecx,ebx
  41da13:	add    ecx,eax
  41da15:	mov    DWORD PTR [ebp-0xd8],ecx
  41da1b:	mov    DWORD PTR [ebp-0x50],0xf89f0581
  41da22:	mov    DWORD PTR [ebp-0x40],0xf89cb581
  41da29:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  41da30:	push   0x25
  41da32:	pop    ecx
  41da33:	mov    DWORD PTR [ebp-0x38],ecx
  41da36:	mov    DWORD PTR [ebp-0x38],ecx
  41da39:	push   0x65
  41da3b:	pop    ecx
  41da3c:	mov    DWORD PTR [ebp-0x38],ecx
  41da3f:	mov    DWORD PTR [ebp-0x38],ecx
  41da42:	mov    DWORD PTR [ebp-0x38],0x4d
  41da49:	mov    DWORD PTR [ebp-0x38],0x43
  41da50:	mov    ecx,DWORD PTR [ebp-0x10]
  41da53:	xor    ecx,ebx
  41da55:	add    ecx,eax
  41da57:	mov    DWORD PTR [ebp-0x38],ecx
  41da5a:	mov    ecx,DWORD PTR [ebp-0x10]
  41da5d:	xor    ecx,ebx
  41da5f:	add    ecx,eax
  41da61:	mov    DWORD PTR [ebp-0x38],ecx
  41da64:	mov    DWORD PTR [ebp-0x28],0x258
  41da6b:	mov    DWORD PTR [ebp-0x20],0x36
  41da72:	mov    DWORD PTR [ebp-0x14],0x7a
  41da79:	lea    edi,[ebp-0x10c]
  41da7f:	lea    esi,[ebp-0x12c]
  41da85:	call   0x41e747
  41da8a:	dec    DWORD PTR [ebp-0x14]
  41da8d:	jne    0x41da79
  41da8f:	dec    DWORD PTR [ebp-0x20]
  41da92:	jne    0x41da72
  41da94:	dec    DWORD PTR [ebp-0x28]
  41da97:	jne    0x41da6b
  41da99:	mov    DWORD PTR [ebp-0x28],0x400e
  41daa0:	mov    eax,DWORD PTR [ebp-0x10]
  41daa3:	xor    eax,ebx
  41daa5:	mov    esi,0x3272e4
  41daaa:	add    eax,esi
  41daac:	mov    DWORD PTR [ebp-0x1c],eax
  41daaf:	mov    eax,DWORD PTR [ebp-0x10]
  41dab2:	and    DWORD PTR [ebp-0x94],0x0
  41dab9:	xor    eax,ebx
  41dabb:	add    eax,esi
  41dabd:	mov    DWORD PTR [ebp-0x34],eax
  41dac0:	mov    eax,fs:0x18
  41dac6:	mov    DWORD PTR [ebp-0x94],eax
  41dacc:	mov    eax,DWORD PTR [eax+0x30]
  41dacf:	mov    DWORD PTR [ebp-0xcc],eax
  41dad5:	mov    eax,DWORD PTR [eax+0xc]
  41dad8:	mov    DWORD PTR [ebp-0xc0],eax
  41dade:	mov    eax,DWORD PTR [ebp+0x8]
  41dae1:	lea    ecx,[ebp-0x94]
  41dae7:	mov    DWORD PTR [eax+0x1a0],ecx
  41daed:	mov    eax,DWORD PTR [ebp+0x8]
  41daf0:	lea    ecx,[ebp-0xcc]
  41daf6:	mov    DWORD PTR [eax+0x1a4],ecx
  41dafc:	mov    eax,DWORD PTR [ebp+0x8]
  41daff:	push   DWORD PTR [ebp+0x8]
  41db02:	lea    ecx,[ebp-0xc0]
  41db08:	mov    DWORD PTR [eax+0x1a8],ecx
  41db0e:	call   0x41ff0a
  41db13:	mov    ecx,DWORD PTR [ebp-0x10]
  41db16:	xor    ecx,ebx
  41db18:	add    ecx,esi
  41db1a:	cmp    ecx,eax
  41db1c:	je     0x41de9f
  41db22:	mov    eax,DWORD PTR [ebp+0x8]
  41db25:	mov    eax,DWORD PTR [eax+0x194]
  41db2b:	mov    ecx,DWORD PTR [eax]
  41db2d:	mov    eax,DWORD PTR [ebp+0x8]
  41db30:	mov    eax,DWORD PTR [eax+0x194]
  41db36:	mov    eax,DWORD PTR [eax]
  41db38:	add    eax,DWORD PTR [ecx+0x3c]
  41db3b:	mov    ecx,DWORD PTR [ebp+0x8]
  41db3e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41db44:	lea    edx,[ebp-0xec]
  41db4a:	push   edx
  41db4b:	mov    edx,DWORD PTR [ebp+0x8]
  41db4e:	mov    edx,DWORD PTR [edx+0x18c]
  41db54:	mov    edx,DWORD PTR [edx]
  41db56:	add    edx,DWORD PTR [eax+0x88]
  41db5c:	push   0x4
  41db5e:	push   DWORD PTR [eax+0x8c]
  41db64:	push   edx
  41db65:	call   DWORD PTR [ecx+0x1c]
  41db68:	push   DWORD PTR [ebp+0x8]
  41db6b:	xor    eax,eax
  41db6d:	mov    DWORD PTR [ebp-0xa8],0x1a3f0f25
  41db77:	mov    DWORD PTR [ebp-0xa4],0x3260c1d
  41db81:	mov    DWORD PTR [ebp-0xa0],0x3d0c190b
  41db8b:	mov    BYTE PTR [ebp-0x9c],0x72
  41db92:	lea    edi,[ebp-0x9b]
  41db98:	stos   DWORD PTR es:[edi],eax
  41db99:	stos   WORD PTR es:[edi],ax
  41db9b:	stos   BYTE PTR es:[edi],al
  41db9c:	xor    eax,eax
  41db9e:	mov    DWORD PTR [ebp-0xbc],0x1a3f0f25
  41dba8:	mov    DWORD PTR [ebp-0xb8],0x3260c1d
  41dbb2:	mov    DWORD PTR [ebp-0xb4],0x2b0c190b
  41dbbc:	mov    BYTE PTR [ebp-0xb0],0x72
  41dbc3:	lea    edi,[ebp-0xaf]
  41dbc9:	stos   DWORD PTR es:[edi],eax
  41dbca:	stos   WORD PTR es:[edi],ax
  41dbcc:	stos   BYTE PTR es:[edi],al
  41dbcd:	mov    edi,DWORD PTR [ebp+0x8]
  41dbd0:	mov    eax,DWORD PTR [ebp+0x8]
  41dbd3:	mov    edx,DWORD PTR [eax+0x1b8]
  41dbd9:	mov    DWORD PTR [ebp-0x68],0xc0e0f06
  41dbe0:	mov    DWORD PTR [ebp-0x64],0x502011f
  41dbe7:	mov    WORD PTR [ebp-0x60],0x723d
  41dbed:	mov    DWORD PTR [ebp-0x90],0x1a3f0f25
  41dbf7:	mov    DWORD PTR [ebp-0x8c],0x63d0c1d
  41dc01:	mov    DWORD PTR [ebp-0x88],0x201d1a02
  41dc0b:	mov    DWORD PTR [ebp-0x84],0xc190109
  41dc15:	mov    DWORD PTR [ebp-0x80],0x723d1f05
  41dc1c:	mov    DWORD PTR [ebp-0x7c],0x1a3f0f25
  41dc23:	mov    DWORD PTR [ebp-0x78],0x63d0c1d
  41dc2a:	mov    DWORD PTR [ebp-0x74],0x201d1a02
  41dc31:	mov    DWORD PTR [ebp-0x70],0xc190109
  41dc38:	mov    DWORD PTR [ebp-0x6c],0x722b1f05
  41dc3f:	call   0x41ff39
  41dc44:	push   eax
  41dc45:	mov    eax,DWORD PTR [ebp+0x8]
  41dc48:	mov    eax,DWORD PTR [eax+0x1a8]
  41dc4e:	push   DWORD PTR [eax]
  41dc50:	call   0x41fbda
  41dc55:	test   eax,eax
  41dc57:	jne    0x41dca9
  41dc59:	mov    eax,DWORD PTR [ebp+0x8]
  41dc5c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dc62:	mov    edi,DWORD PTR [ebp+0x8]
  41dc65:	add    eax,0x4
  41dc68:	mov    DWORD PTR [ebp-0x24],eax
  41dc6b:	mov    eax,DWORD PTR [ebp+0x8]
  41dc6e:	mov    edx,DWORD PTR [eax+0x1b8]
  41dc74:	call   0x41ff39
  41dc79:	push   eax
  41dc7a:	mov    eax,DWORD PTR [ebp-0x24]
  41dc7d:	call   DWORD PTR [eax]
  41dc7f:	test   eax,eax
  41dc81:	jne    0x41dca9
  41dc83:	mov    eax,DWORD PTR [ebp+0x8]
  41dc86:	mov    eax,DWORD PTR [eax+0x1d8]
  41dc8c:	mov    edi,DWORD PTR [ebp+0x8]
  41dc8f:	add    eax,0x10
  41dc92:	mov    DWORD PTR [ebp-0x24],eax
  41dc95:	mov    eax,DWORD PTR [ebp+0x8]
  41dc98:	mov    edx,DWORD PTR [eax+0x1b8]
  41dc9e:	call   0x41ff39
  41dca3:	push   eax
  41dca4:	mov    eax,DWORD PTR [ebp-0x24]
  41dca7:	call   DWORD PTR [eax]
  41dca9:	mov    eax,DWORD PTR [ebp-0x10]
  41dcac:	mov    ecx,DWORD PTR [ebp-0x28]
  41dcaf:	xor    eax,ebx
  41dcb1:	add    eax,esi
  41dcb3:	cmp    eax,ecx
  41dcb5:	je     0x41de78
  41dcbb:	mov    eax,DWORD PTR [ebp-0x18]
  41dcbe:	xor    eax,ebx
  41dcc0:	mov    ecx,0xffcd8d1c
  41dcc5:	sub    ecx,eax
  41dcc7:	add    ecx,DWORD PTR [ebp-0x28]
  41dcca:	mov    eax,DWORD PTR [ebp-0x1c]
  41dccd:	cmp    eax,ecx
  41dccf:	ja     0x41de78
  41dcd5:	mov    DWORD PTR [ebp-0x20],0x0
  41dcdc:	push   DWORD PTR [ebp+0x8]
  41dcdf:	mov    edi,DWORD PTR [ebp+0x8]
  41dce2:	mov    eax,DWORD PTR [ebp+0x8]
  41dce5:	mov    edx,DWORD PTR [eax+0x1b4]
  41dceb:	call   0x41ff39
  41dcf0:	push   eax
  41dcf1:	mov    eax,DWORD PTR [ebp+0x8]
  41dcf4:	mov    eax,DWORD PTR [eax+0x1a8]
  41dcfa:	push   DWORD PTR [eax]
  41dcfc:	call   0x41fbda
  41dd01:	mov    ecx,DWORD PTR [ebp+0x8]
  41dd04:	mov    ecx,DWORD PTR [ecx+0x19c]
  41dd0a:	mov    DWORD PTR [ecx],eax
  41dd0c:	mov    eax,DWORD PTR [ebp+0x8]
  41dd0f:	mov    edi,DWORD PTR [eax+0x1d8]
  41dd15:	mov    esi,DWORD PTR [ebp+0x8]
  41dd18:	xor    eax,eax
  41dd1a:	lea    edx,[ebp-0x7c]
  41dd1d:	call   0x41ff6f
  41dd22:	push   eax
  41dd23:	mov    eax,DWORD PTR [ebp+0x8]
  41dd26:	mov    eax,DWORD PTR [eax+0x19c]
  41dd2c:	push   DWORD PTR [eax]
  41dd2e:	call   DWORD PTR [edi+0x8]
  41dd31:	mov    DWORD PTR [ebp-0x24],eax
  41dd34:	mov    eax,DWORD PTR [ebp+0x8]
  41dd37:	mov    edi,DWORD PTR [eax+0x1d8]
  41dd3d:	mov    esi,DWORD PTR [ebp+0x8]
  41dd40:	xor    eax,eax
  41dd42:	lea    edx,[ebp-0x90]
  41dd48:	call   0x41ff6f
  41dd4d:	push   eax
  41dd4e:	mov    eax,DWORD PTR [ebp+0x8]
  41dd51:	mov    eax,DWORD PTR [eax+0x19c]
  41dd57:	push   DWORD PTR [eax]
  41dd59:	call   DWORD PTR [edi+0x8]
  41dd5c:	mov    eax,DWORD PTR [ebp+0x8]
  41dd5f:	mov    edi,DWORD PTR [eax+0x1d8]
  41dd65:	mov    esi,DWORD PTR [ebp+0x8]
  41dd68:	xor    eax,eax
  41dd6a:	lea    edx,[ebp-0xa8]
  41dd70:	call   0x41ff6f
  41dd75:	push   eax
  41dd76:	mov    eax,DWORD PTR [ebp+0x8]
  41dd79:	mov    eax,DWORD PTR [eax+0x19c]
  41dd7f:	push   DWORD PTR [eax]
  41dd81:	call   DWORD PTR [edi+0x8]
  41dd84:	and    DWORD PTR [ebp-0x8],0x0
  41dd88:	mov    DWORD PTR [ebp-0x44],eax
  41dd8b:	mov    eax,DWORD PTR [ebp-0x8]
  41dd8e:	and    eax,0x7
  41dd91:	add    eax,0x31
  41dd94:	push   eax
  41dd95:	call   DWORD PTR [ebp-0x24]
  41dd98:	test   eax,eax
  41dd9a:	je     0x41ddde
  41dd9c:	mov    eax,DWORD PTR [ebp-0x8]
  41dd9f:	push   0x19
  41dda1:	xor    edx,edx
  41dda3:	pop    ecx
  41dda4:	div    ecx
  41dda6:	add    dl,0x41
  41dda9:	movzx  eax,dl
  41ddac:	push   eax
  41ddad:	call   DWORD PTR [ebp-0x44]
  41ddb0:	test   eax,eax
  41ddb2:	jne    0x41ddde
  41ddb4:	mov    eax,DWORD PTR [ebp+0x8]
  41ddb7:	mov    edi,DWORD PTR [eax+0x1d8]
  41ddbd:	mov    esi,DWORD PTR [ebp+0x8]
  41ddc0:	xor    eax,eax
  41ddc2:	lea    edx,[ebp-0x68]
  41ddc5:	call   0x41ff6f
  41ddca:	push   eax
  41ddcb:	mov    eax,DWORD PTR [ebp+0x8]
  41ddce:	mov    eax,DWORD PTR [eax+0x198]
  41ddd4:	push   DWORD PTR [eax]
  41ddd6:	call   DWORD PTR [edi+0x8]
  41ddd9:	mov    DWORD PTR [ebp-0x14],eax
  41dddc:	jmp    0x41dde2
  41ddde:	and    DWORD PTR [ebp-0x14],0x0
  41dde2:	inc    DWORD PTR [ebp-0x8]
  41dde5:	cmp    DWORD PTR [ebp-0x8],0x10
  41dde9:	jb     0x41dd8b
  41ddeb:	mov    eax,DWORD PTR [ebp-0x18]
  41ddee:	mov    esi,DWORD PTR [ebp+0x8]
  41ddf1:	xor    eax,ebx
  41ddf3:	mov    edi,0x3272e4
  41ddf8:	add    eax,edi
  41ddfa:	lea    edx,[ebp-0x10c]
  41de00:	call   0x41ff6f
  41de05:	push   eax
  41de06:	mov    eax,DWORD PTR [ebp-0x10]
  41de09:	mov    esi,DWORD PTR [ebp+0x8]
  41de0c:	xor    eax,ebx
  41de0e:	add    eax,edi
  41de10:	lea    edx,[ebp-0x12c]
  41de16:	call   0x41ff6f
  41de1b:	push   eax
  41de1c:	call   DWORD PTR [ebp-0x14]
  41de1f:	mov    ecx,DWORD PTR [ebp-0x10]
  41de22:	xor    ecx,ebx
  41de24:	add    ecx,edi
  41de26:	cmp    ecx,eax
  41de28:	jne    0x41de31
  41de2a:	mov    DWORD PTR [ebp-0x20],0x1
  41de31:	mov    eax,DWORD PTR [ebp-0x18]
  41de34:	mov    ecx,DWORD PTR [ebp-0x1c]
  41de37:	xor    eax,ebx
  41de39:	lea    eax,[eax+ecx*1+0x3272e4]
  41de40:	mov    DWORD PTR [ebp-0x1c],eax
  41de43:	mov    eax,DWORD PTR [ebp-0x20]
  41de46:	test   eax,eax
  41de48:	je     0x41de5c
  41de4a:	mov    eax,DWORD PTR [ebp-0x18]
  41de4d:	mov    ecx,DWORD PTR [ebp-0x34]
  41de50:	xor    eax,ebx
  41de52:	lea    eax,[eax+ecx*1+0x3272e4]
  41de59:	mov    DWORD PTR [ebp-0x34],eax
  41de5c:	mov    eax,DWORD PTR [ebp-0x18]
  41de5f:	xor    eax,ebx
  41de61:	mov    ecx,0xffcd8d1c
  41de66:	sub    ecx,eax
  41de68:	add    ecx,DWORD PTR [ebp-0x28]
  41de6b:	mov    eax,DWORD PTR [ebp-0x1c]
  41de6e:	cmp    eax,ecx
  41de70:	jbe    0x41dcd5
  41de76:	mov    esi,edi
  41de78:	mov    eax,DWORD PTR [ebp-0x34]
  41de7b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41de7e:	cmp    ecx,eax
  41de80:	jne    0x41de93
  41de82:	push   DWORD PTR [ebp+0x8]
  41de85:	lea    eax,[ebp-0x3c]
  41de88:	push   eax
  41de89:	call   0x4209df
  41de8e:	mov    DWORD PTR [ebp-0x2c],eax
  41de91:	jmp    0x41de9f
  41de93:	mov    eax,DWORD PTR [ebp-0x2c]
  41de96:	mov    ecx,DWORD PTR [ebp-0x18]
  41de99:	xor    ecx,ebx
  41de9b:	add    ecx,esi
  41de9d:	xor    DWORD PTR [eax],ecx
  41de9f:	mov    eax,DWORD PTR [ebp-0x10]
  41dea2:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dea5:	xor    eax,ebx
  41dea7:	add    eax,esi
  41dea9:	cmp    eax,ecx
  41deab:	je     0x41e625
  41deb1:	mov    eax,DWORD PTR [ebp-0x10]
  41deb4:	mov    ecx,DWORD PTR [ebp-0x3c]
  41deb7:	xor    eax,ebx
  41deb9:	add    eax,esi
  41debb:	cmp    eax,ecx
  41debd:	je     0x41e625
  41dec3:	mov    eax,DWORD PTR [ebp-0x10]
  41dec6:	xor    eax,ebx
  41dec8:	add    eax,esi
  41deca:	jmp    0x41dee8
  41decc:	mov    edi,DWORD PTR [ebp-0x2c]
  41decf:	mov    cl,al
  41ded1:	and    cl,0x1f
  41ded4:	or     dl,0xff
  41ded7:	sub    dl,cl
  41ded9:	add    BYTE PTR [edi+eax*1],dl
  41dedc:	mov    ecx,DWORD PTR [ebp-0x18]
  41dedf:	xor    ecx,ebx
  41dee1:	lea    eax,[eax+ecx*1+0x3272e4]
  41dee8:	mov    ecx,DWORD PTR [ebp-0x3c]
  41deeb:	cmp    eax,ecx
  41deed:	jb     0x41decc
  41deef:	mov    eax,DWORD PTR [ebp-0x3c]
  41def2:	mov    DWORD PTR [ebp-0x28],eax
  41def5:	mov    eax,DWORD PTR [ebp-0x2c]
  41def8:	mov    DWORD PTR [ebp-0x34],0xf89c8581
  41deff:	mov    DWORD PTR [ebp-0xd4],eax
  41df05:	mov    edi,0xf89c8580
  41df0a:	mov    DWORD PTR [ebp-0x30],edi
  41df0d:	mov    eax,DWORD PTR [ebp-0x34]
  41df10:	xor    eax,ebx
  41df12:	add    eax,esi
  41df14:	mov    DWORD PTR [ebp-0xc],eax
  41df17:	mov    eax,DWORD PTR [ebp-0x34]
  41df1a:	xor    eax,ebx
  41df1c:	add    eax,esi
  41df1e:	mov    DWORD PTR [ebp-0x8],eax
  41df21:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  41df28:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  41df2f:	mov    eax,DWORD PTR [ebp-0x34]
  41df32:	mov    ecx,DWORD PTR [ebp-0x28]
  41df35:	xor    eax,ebx
  41df37:	add    eax,esi
  41df39:	cmp    ecx,eax
  41df3b:	je     0x41e13a
  41df41:	jmp    0x41e116
  41df46:	mov    ecx,DWORD PTR [ebp-0xc]
  41df49:	mov    eax,DWORD PTR [ebp-0x28]
  41df4c:	sub    eax,ecx
  41df4e:	mov    ecx,DWORD PTR [ebp-0x44]
  41df51:	xor    ecx,ebx
  41df53:	add    ecx,esi
  41df55:	xor    edx,edx
  41df57:	div    ecx
  41df59:	mov    DWORD PTR [ebp-0x8],eax
  41df5c:	mov    eax,DWORD PTR [ebp-0x4c]
  41df5f:	mov    ecx,DWORD PTR [ebp-0x8]
  41df62:	xor    eax,ebx
  41df64:	add    eax,esi
  41df66:	cmp    ecx,eax
  41df68:	jbe    0x41df74
  41df6a:	mov    eax,DWORD PTR [ebp-0x4c]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0x8],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x44]
  41df77:	mov    ecx,DWORD PTR [ebp-0x8]
  41df7a:	xor    eax,ebx
  41df7c:	add    eax,esi
  41df7e:	imul   eax,ecx
  41df81:	mov    DWORD PTR [ebp-0x8],eax
  41df84:	mov    eax,DWORD PTR [ebp-0x34]
  41df87:	mov    ecx,DWORD PTR [ebp-0x8]
  41df8a:	xor    eax,ebx
  41df8c:	add    eax,esi
  41df8e:	cmp    ecx,eax
  41df90:	je     0x41e104
  41df96:	mov    eax,DWORD PTR [ebp-0x8]
  41df99:	mov    DWORD PTR [ebp-0x14],eax
  41df9c:	mov    eax,DWORD PTR [ebp-0xc]
  41df9f:	add    eax,DWORD PTR [ebp-0xd4]
  41dfa5:	mov    DWORD PTR [ebp-0x24],0xf89c8581
  41dfac:	mov    DWORD PTR [ebp-0x20],edi
  41dfaf:	mov    DWORD PTR [ebp-0xe8],0xf89c8583
  41dfb9:	mov    DWORD PTR [ebp-0x8],eax
  41dfbc:	mov    DWORD PTR [ebp-0x38],0xf89c8582
  41dfc3:	mov    DWORD PTR [ebp-0x1c],edi
  41dfc6:	mov    eax,DWORD PTR [ebp-0x24]
  41dfc9:	xor    eax,ebx
  41dfcb:	add    eax,esi
  41dfcd:	jmp    0x41e0c3
  41dfd2:	mov    DWORD PTR [ebp-0xe0],0xf89c85bb
  41dfdc:	mov    DWORD PTR [ebp-0xc4],0xf89c85ad
  41dfe6:	mov    eax,DWORD PTR [ebp-0x1c]
  41dfe9:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfec:	xor    eax,ebx
  41dfee:	add    eax,esi
  41dff0:	imul   eax,ecx
  41dff3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dff6:	mov    al,BYTE PTR [eax+ecx*1]
  41dff9:	mov    BYTE PTR [ebp-0x2],al
  41dffc:	mov    eax,DWORD PTR [ebp-0x1c]
  41dfff:	mov    ecx,DWORD PTR [ebp-0x48]
  41e002:	xor    eax,ebx
  41e004:	add    eax,esi
  41e006:	imul   eax,ecx
  41e009:	mov    ecx,DWORD PTR [ebp-0xe8]
  41e00f:	xor    ecx,ebx
  41e011:	add    eax,ecx
  41e013:	mov    ecx,DWORD PTR [ebp-0x8]
  41e016:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e4]
  41e01e:	mov    ecx,DWORD PTR [ebp-0xe0]
  41e024:	xor    ecx,ebx
  41e026:	lea    eax,[ecx+eax*1+0x3272e4]
  41e02d:	movzx  ecx,BYTE PTR [ebp-0x2]
  41e031:	xor    ecx,eax
  41e033:	mov    BYTE PTR [ebp-0x2],cl
  41e036:	mov    al,BYTE PTR [ebp-0x2]
  41e039:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e03c:	mov    edx,DWORD PTR [ebp-0x48]
  41e03f:	xor    ecx,ebx
  41e041:	add    ecx,esi
  41e043:	imul   ecx,edx
  41e046:	mov    edx,DWORD PTR [ebp-0x8]
  41e049:	mov    BYTE PTR [ecx+edx*1],al
  41e04c:	mov    eax,DWORD PTR [ebp-0x1c]
  41e04f:	mov    ecx,DWORD PTR [ebp-0x48]
  41e052:	xor    eax,ebx
  41e054:	add    eax,esi
  41e056:	imul   eax,ecx
  41e059:	mov    ecx,DWORD PTR [ebp-0x8]
  41e05c:	mov    al,BYTE PTR [eax+ecx*1]
  41e05f:	mov    BYTE PTR [ebp-0x2],al
  41e062:	mov    eax,DWORD PTR [ebp-0x1c]
  41e065:	mov    ecx,DWORD PTR [ebp-0x48]
  41e068:	xor    eax,ebx
  41e06a:	add    eax,esi
  41e06c:	imul   eax,ecx
  41e06f:	mov    ecx,DWORD PTR [ebp-0x20]
  41e072:	xor    ecx,ebx
  41e074:	add    eax,ecx
  41e076:	mov    ecx,DWORD PTR [ebp-0x8]
  41e079:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e4]
  41e081:	mov    ecx,DWORD PTR [ebp-0xc4]
  41e087:	xor    ecx,ebx
  41e089:	lea    eax,[ecx+eax*1+0x3272e4]
  41e090:	movzx  ecx,BYTE PTR [ebp-0x2]
  41e094:	xor    ecx,eax
  41e096:	mov    BYTE PTR [ebp-0x2],cl
  41e099:	mov    al,BYTE PTR [ebp-0x2]
  41e09c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e09f:	mov    edx,DWORD PTR [ebp-0x48]
  41e0a2:	xor    ecx,ebx
  41e0a4:	add    ecx,esi
  41e0a6:	imul   ecx,edx
  41e0a9:	mov    edx,DWORD PTR [ebp-0x8]
  41e0ac:	mov    BYTE PTR [ecx+edx*1],al
  41e0af:	mov    eax,DWORD PTR [ebp-0x38]
  41e0b2:	mov    ecx,DWORD PTR [ebp-0x20]
  41e0b5:	xor    eax,ebx
  41e0b7:	xor    ecx,ebx
  41e0b9:	add    eax,esi
  41e0bb:	add    ecx,esi
  41e0bd:	imul   eax,ecx
  41e0c0:	add    eax,DWORD PTR [ebp-0x48]
  41e0c3:	mov    DWORD PTR [ebp-0x48],eax
  41e0c6:	mov    eax,DWORD PTR [ebp-0x48]
  41e0c9:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0cc:	cmp    ecx,eax
  41e0ce:	jb     0x41dfd2
  41e0d4:	mov    eax,DWORD PTR [ebp-0x20]
  41e0d7:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0da:	xor    eax,ebx
  41e0dc:	add    eax,esi
  41e0de:	imul   eax,ecx
  41e0e1:	mov    ecx,DWORD PTR [ebp-0x24]
  41e0e4:	xor    ecx,ebx
  41e0e6:	add    ecx,esi
  41e0e8:	or     eax,ecx
  41e0ea:	mov    ecx,DWORD PTR [ebp-0x30]
  41e0ed:	xor    ecx,ebx
  41e0ef:	add    eax,ecx
  41e0f1:	mov    ecx,DWORD PTR [ebp-0x30]
  41e0f4:	xor    ecx,ebx
  41e0f6:	add    eax,ecx
  41e0f8:	mov    ecx,DWORD PTR [ebp-0xc]
  41e0fb:	lea    eax,[eax+ecx*1+0x64e5c8]
  41e102:	jmp    0x41e113
  41e104:	mov    eax,DWORD PTR [ebp-0x30]
  41e107:	mov    ecx,DWORD PTR [ebp-0xc]
  41e10a:	xor    eax,ebx
  41e10c:	lea    eax,[eax+ecx*1+0x3272e4]
  41e113:	mov    DWORD PTR [ebp-0xc],eax
  41e116:	mov    eax,DWORD PTR [ebp-0x30]
  41e119:	xor    eax,ebx
  41e11b:	mov    ecx,0xffcd8d1c
  41e120:	sub    ecx,eax
  41e122:	add    ecx,DWORD PTR [ebp-0x28]
  41e125:	mov    eax,DWORD PTR [ebp-0x30]
  41e128:	mov    edx,DWORD PTR [ebp-0xc]
  41e12b:	xor    eax,ebx
  41e12d:	add    eax,esi
  41e12f:	imul   eax,edx
  41e132:	cmp    eax,ecx
  41e134:	jbe    0x41df46
  41e13a:	mov    eax,DWORD PTR [ebp-0x10]
  41e13d:	mov    ecx,DWORD PTR [ebp-0x3c]
  41e140:	mov    eax,DWORD PTR [ebp+0x8]
  41e143:	mov    edx,DWORD PTR [ebp-0x54]
  41e146:	mov    eax,DWORD PTR [eax+0x1d8]
  41e14c:	xor    edx,ebx
  41e14e:	add    edx,esi
  41e150:	push   edx
  41e151:	mov    edx,DWORD PTR [ebp-0x40]
  41e154:	xor    edx,ebx
  41e156:	add    edx,esi
  41e158:	push   edx
  41e159:	push   ecx
  41e15a:	mov    DWORD PTR [ebp-0x38],ecx
  41e15d:	mov    ecx,DWORD PTR [ebp-0x10]
  41e160:	xor    ecx,ebx
  41e162:	add    ecx,esi
  41e164:	push   ecx
  41e165:	call   DWORD PTR [eax+0x14]
  41e168:	mov    edi,eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x10]
  41e16d:	xor    eax,ebx
  41e16f:	add    eax,esi
  41e171:	cmp    eax,edi
  41e173:	je     0x41e1ce
  41e175:	mov    eax,DWORD PTR [ebp-0x10]
  41e178:	jmp    0x41e19b
  41e17a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e17d:	xor    eax,ebx
  41e17f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e4]
  41e186:	mov    BYTE PTR [eax+edi*1+0x3272e4],cl
  41e18d:	mov    ecx,DWORD PTR [ebp-0x18]
  41e190:	xor    ecx,ebx
  41e192:	lea    eax,[ecx+eax*1+0x3272e4]
  41e199:	xor    eax,ebx
  41e19b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41e19e:	sub    ecx,esi
  41e1a0:	xor    ecx,ebx
  41e1a2:	cmp    eax,ecx
  41e1a4:	jne    0x41e17a
  41e1a6:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a9:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1ac:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1b2:	xor    ecx,ebx
  41e1b4:	add    ecx,esi
  41e1b6:	push   ecx
  41e1b7:	mov    ecx,DWORD PTR [ebp-0x10]
  41e1ba:	xor    ecx,ebx
  41e1bc:	add    ecx,esi
  41e1be:	push   ecx
  41e1bf:	push   DWORD PTR [ebp-0x2c]
  41e1c2:	call   DWORD PTR [eax+0x18]
  41e1c5:	mov    eax,DWORD PTR [ebp-0x38]
  41e1c8:	mov    DWORD PTR [ebp-0x2c],edi
  41e1cb:	mov    DWORD PTR [ebp-0x3c],eax
  41e1ce:	mov    eax,DWORD PTR [ebp-0x2c]
  41e1d1:	mov    DWORD PTR [ebp-0x14],eax
  41e1d4:	mov    eax,DWORD PTR [ebp-0x18]
  41e1d7:	mov    ecx,DWORD PTR [ebp-0x10]
  41e1da:	xor    eax,ebx
  41e1dc:	add    eax,esi
  41e1de:	mov    DWORD PTR [ebp-0x5c],0x3d2a222a
  41e1e5:	mov    DWORD PTR [ebp-0x58],0x272a3f2a
  41e1ec:	jmp    0x41e21f
  41e1ee:	mov    edx,DWORD PTR [ebp-0x14]
  41e1f1:	mov    edi,ecx
  41e1f3:	xor    edi,ebx
  41e1f5:	mov    cl,BYTE PTR [ebp+edi*1+0x327288]
  41e1fc:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e4]
  41e204:	xor    cl,0x75
  41e207:	sub    cl,0x7
  41e20a:	movzx  ecx,cl
  41e20d:	cmp    edx,ecx
  41e20f:	jne    0x41e229
  41e211:	mov    ecx,DWORD PTR [ebp-0x18]
  41e214:	xor    ecx,ebx
  41e216:	lea    ecx,[ecx+edi*1+0x3272e4]
  41e21d:	xor    ecx,ebx
  41e21f:	cmp    ecx,0xf89c85b9
  41e225:	jne    0x41e1ee
  41e227:	jmp    0x41e230
  41e229:	mov    eax,DWORD PTR [ebp-0x10]
  41e22c:	xor    eax,ebx
  41e22e:	add    eax,esi
  41e230:	mov    ecx,DWORD PTR [ebp-0x10]
  41e233:	xor    ecx,ebx
  41e235:	add    ecx,esi
  41e237:	cmp    ecx,eax
  41e239:	je     0x41e3af
  41e23f:	mov    eax,DWORD PTR [ebp-0x14]
  41e242:	mov    eax,DWORD PTR [eax+0x8]
  41e245:	mov    DWORD PTR [ebp-0xc],0xf89c8581
  41e24c:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41e253:	mov    DWORD PTR [ebp-0x44],0xf89cb581
  41e25a:	mov    DWORD PTR [ebp-0x24],0xf89c85bd
  41e261:	mov    DWORD PTR [ebp-0x20],eax
  41e264:	mov    eax,DWORD PTR [ebp+0x8]
  41e267:	mov    ecx,DWORD PTR [ebp-0x24]
  41e26a:	xor    ecx,ebx
  41e26c:	add    ecx,esi
  41e26e:	push   ecx
  41e26f:	mov    ecx,DWORD PTR [ebp-0x44]
  41e272:	mov    eax,DWORD PTR [eax+0x1d8]
  41e278:	xor    ecx,ebx
  41e27a:	add    ecx,esi
  41e27c:	push   ecx
  41e27d:	mov    ecx,DWORD PTR [ebp-0x40]
  41e280:	xor    ecx,ebx
  41e282:	add    ecx,esi
  41e284:	push   ecx
  41e285:	mov    ecx,DWORD PTR [ebp-0xc]
  41e288:	xor    ecx,ebx
  41e28a:	add    ecx,esi
  41e28c:	push   ecx
  41e28d:	call   DWORD PTR [eax+0x14]
  41e290:	mov    edi,eax
  41e292:	mov    eax,DWORD PTR [ebp+0x8]
  41e295:	mov    ecx,DWORD PTR [ebp-0x24]
  41e298:	mov    eax,DWORD PTR [eax+0x1d8]
  41e29e:	xor    ecx,ebx
  41e2a0:	add    ecx,esi
  41e2a2:	push   ecx
  41e2a3:	mov    ecx,DWORD PTR [ebp-0x44]
  41e2a6:	xor    ecx,ebx
  41e2a8:	add    ecx,esi
  41e2aa:	push   ecx
  41e2ab:	mov    ecx,DWORD PTR [ebp-0xc]
  41e2ae:	push   DWORD PTR [ebp-0x20]
  41e2b1:	xor    ecx,ebx
  41e2b3:	add    ecx,esi
  41e2b5:	push   ecx
  41e2b6:	call   DWORD PTR [eax+0x14]
  41e2b9:	mov    ecx,DWORD PTR [ebp-0xc]
  41e2bc:	xor    ecx,ebx
  41e2be:	add    ecx,esi
  41e2c0:	mov    DWORD PTR [ebp-0x24],eax
  41e2c3:	cmp    ecx,edi
  41e2c5:	je     0x41e652
  41e2cb:	mov    ecx,DWORD PTR [ebp-0xc]
  41e2ce:	xor    ecx,ebx
  41e2d0:	add    ecx,esi
  41e2d2:	cmp    ecx,eax
  41e2d4:	je     0x41e652
  41e2da:	mov    DWORD PTR [ebp-0x40],0xf89c8582
  41e2e1:	mov    DWORD PTR [ebp-0x54],0xf89c8583
  41e2e8:	mov    ecx,DWORD PTR [ebp-0x40]
  41e2eb:	xor    cl,0x9d
  41e2ee:	sub    cl,0x1c
  41e2f1:	mov    BYTE PTR [edi],cl
  41e2f3:	mov    ecx,DWORD PTR [ebp-0xc]
  41e2f6:	xor    cl,0x9d
  41e2f9:	sub    cl,0x1c
  41e2fc:	mov    BYTE PTR [edi+0x1],cl
  41e2ff:	mov    ecx,DWORD PTR [ebp-0x54]
  41e302:	xor    cl,0x9d
  41e305:	sub    cl,0x1c
  41e308:	mov    BYTE PTR [edi+0x2],cl
  41e30b:	and    DWORD PTR [ebp-0xc8],0x0
  41e312:	and    DWORD PTR [ebp-0xdc],0x0
  41e319:	lea    ecx,[ebp-0xdc]
  41e31f:	push   ecx
  41e320:	push   DWORD PTR [ebp-0x20]
  41e323:	push   eax
  41e324:	lea    eax,[ebp-0xc8]
  41e32a:	push   eax
  41e32b:	mov    eax,DWORD PTR [ebp-0x14]
  41e32e:	push   DWORD PTR [eax+0xc]
  41e331:	mov    eax,DWORD PTR [ebp-0x2c]
  41e334:	add    eax,0x10
  41e337:	push   eax
  41e338:	push   edi
  41e339:	call   0x41d5dd
  41e33e:	mov    DWORD PTR [ebp-0x40],eax
  41e341:	mov    eax,DWORD PTR [ebp+0x8]
  41e344:	mov    ecx,DWORD PTR [ebp-0x50]
  41e347:	mov    eax,DWORD PTR [eax+0x1d8]
  41e34d:	xor    ecx,ebx
  41e34f:	add    ecx,esi
  41e351:	push   ecx
  41e352:	mov    ecx,DWORD PTR [ebp-0xc]
  41e355:	xor    ecx,ebx
  41e357:	add    ecx,esi
  41e359:	push   ecx
  41e35a:	push   edi
  41e35b:	call   DWORD PTR [eax+0x18]
  41e35e:	mov    eax,DWORD PTR [ebp-0x40]
  41e361:	add    eax,0xffcd8d1c
  41e366:	xor    eax,ebx
  41e368:	cmp    eax,0xf89c8581
  41e36d:	mov    eax,DWORD PTR [ebp+0x8]
  41e370:	mov    eax,DWORD PTR [eax+0x1d8]
  41e376:	mov    ecx,DWORD PTR [ebp-0x50]
  41e379:	jne    0x41e39c
  41e37b:	xor    ecx,ebx
  41e37d:	add    ecx,esi
  41e37f:	push   ecx
  41e380:	mov    ecx,DWORD PTR [ebp-0xc]
  41e383:	xor    ecx,ebx
  41e385:	add    ecx,esi
  41e387:	push   ecx
  41e388:	push   DWORD PTR [ebp-0x2c]
  41e38b:	call   DWORD PTR [eax+0x18]
  41e38e:	mov    eax,DWORD PTR [ebp-0x24]
  41e391:	mov    DWORD PTR [ebp-0x2c],eax
  41e394:	mov    eax,DWORD PTR [ebp-0x20]
  41e397:	mov    DWORD PTR [ebp-0x3c],eax
  41e39a:	jmp    0x41e3af
  41e39c:	xor    ecx,ebx
  41e39e:	add    ecx,esi
  41e3a0:	push   ecx
  41e3a1:	mov    ecx,DWORD PTR [ebp-0xc]
  41e3a4:	xor    ecx,ebx
  41e3a6:	add    ecx,esi
  41e3a8:	push   ecx
  41e3a9:	push   DWORD PTR [ebp-0x24]
  41e3ac:	call   DWORD PTR [eax+0x18]
  41e3af:	mov    eax,DWORD PTR [ebp-0x3c]
  41e3b2:	mov    DWORD PTR [ebp-0x34],eax
  41e3b5:	mov    eax,DWORD PTR [ebp-0x2c]
  41e3b8:	mov    DWORD PTR [ebp-0x28],0xf89c8581
  41e3bf:	mov    DWORD PTR [ebp-0x40],eax
  41e3c2:	mov    edi,0xf89c8580
  41e3c7:	mov    DWORD PTR [ebp-0x30],edi
  41e3ca:	mov    eax,DWORD PTR [ebp-0x28]
  41e3cd:	xor    eax,ebx
  41e3cf:	add    eax,esi
  41e3d1:	mov    DWORD PTR [ebp-0xc],eax
  41e3d4:	mov    eax,DWORD PTR [ebp-0x28]
  41e3d7:	xor    eax,ebx
  41e3d9:	add    eax,esi
  41e3db:	mov    DWORD PTR [ebp-0x14],eax
  41e3de:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  41e3e5:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41e3ec:	mov    eax,DWORD PTR [ebp-0x28]
  41e3ef:	mov    ecx,DWORD PTR [ebp-0x34]
  41e3f2:	xor    eax,ebx
  41e3f4:	add    eax,esi
  41e3f6:	cmp    ecx,eax
  41e3f8:	je     0x41e5ee
  41e3fe:	jmp    0x41e5ca
  41e403:	mov    ecx,DWORD PTR [ebp-0xc]
  41e406:	mov    eax,DWORD PTR [ebp-0x34]
  41e409:	sub    eax,ecx
  41e40b:	mov    ecx,DWORD PTR [ebp-0x44]
  41e40e:	xor    ecx,ebx
  41e410:	add    ecx,esi
  41e412:	xor    edx,edx
  41e414:	div    ecx
  41e416:	mov    DWORD PTR [ebp-0x14],eax
  41e419:	mov    eax,DWORD PTR [ebp-0x24]
  41e41c:	mov    ecx,DWORD PTR [ebp-0x14]
  41e41f:	xor    eax,ebx
  41e421:	add    eax,esi
  41e423:	cmp    ecx,eax
  41e425:	jbe    0x41e431
  41e427:	mov    eax,DWORD PTR [ebp-0x24]
  41e42a:	xor    eax,ebx
  41e42c:	add    eax,esi
  41e42e:	mov    DWORD PTR [ebp-0x14],eax
  41e431:	mov    eax,DWORD PTR [ebp-0x44]
  41e434:	mov    ecx,DWORD PTR [ebp-0x14]
  41e437:	xor    eax,ebx
  41e439:	add    eax,esi
  41e43b:	imul   eax,ecx
  41e43e:	mov    DWORD PTR [ebp-0x14],eax
  41e441:	mov    eax,DWORD PTR [ebp-0x28]
  41e444:	mov    ecx,DWORD PTR [ebp-0x14]
  41e447:	xor    eax,ebx
  41e449:	add    eax,esi
  41e44b:	cmp    ecx,eax
  41e44d:	je     0x41e5b8
  41e453:	mov    eax,DWORD PTR [ebp-0x14]
  41e456:	mov    DWORD PTR [ebp-0x20],eax
  41e459:	mov    eax,DWORD PTR [ebp-0xc]
  41e45c:	add    eax,DWORD PTR [ebp-0x40]
  41e45f:	mov    DWORD PTR [ebp-0x4c],0xf89c8581
  41e466:	mov    DWORD PTR [ebp-0x14],edi
  41e469:	mov    DWORD PTR [ebp-0x54],0xf89c8583
  41e470:	mov    DWORD PTR [ebp-0x1c],eax
  41e473:	mov    DWORD PTR [ebp-0x38],0xf89c8582
  41e47a:	mov    DWORD PTR [ebp-0x8],edi
  41e47d:	mov    eax,DWORD PTR [ebp-0x4c]
  41e480:	xor    eax,ebx
  41e482:	add    eax,esi
  41e484:	jmp    0x41e577
  41e489:	mov    DWORD PTR [ebp-0xe4],0xf89c85bb
  41e493:	mov    DWORD PTR [ebp-0xd0],0xf89c85ad
  41e49d:	mov    eax,DWORD PTR [ebp-0x8]
  41e4a0:	mov    ecx,DWORD PTR [ebp-0x18]
  41e4a3:	xor    eax,ebx
  41e4a5:	add    eax,esi
  41e4a7:	imul   eax,ecx
  41e4aa:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e4ad:	mov    al,BYTE PTR [eax+ecx*1]
  41e4b0:	mov    BYTE PTR [ebp-0x1],al
  41e4b3:	mov    eax,DWORD PTR [ebp-0x8]
  41e4b6:	mov    ecx,DWORD PTR [ebp-0x18]
  41e4b9:	xor    eax,ebx
  41e4bb:	add    eax,esi
  41e4bd:	imul   eax,ecx
  41e4c0:	mov    ecx,DWORD PTR [ebp-0x54]
  41e4c3:	xor    ecx,ebx
  41e4c5:	add    eax,ecx
  41e4c7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e4ca:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e4]
  41e4d2:	mov    ecx,DWORD PTR [ebp-0xe4]
  41e4d8:	xor    ecx,ebx
  41e4da:	lea    eax,[ecx+eax*1+0x3272e4]
  41e4e1:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e4e5:	xor    ecx,eax
  41e4e7:	mov    BYTE PTR [ebp-0x1],cl
  41e4ea:	mov    al,BYTE PTR [ebp-0x1]
  41e4ed:	mov    ecx,DWORD PTR [ebp-0x8]
  41e4f0:	mov    edx,DWORD PTR [ebp-0x18]
  41e4f3:	xor    ecx,ebx
  41e4f5:	add    ecx,esi
  41e4f7:	imul   ecx,edx
  41e4fa:	mov    edx,DWORD PTR [ebp-0x1c]
  41e4fd:	mov    BYTE PTR [ecx+edx*1],al
  41e500:	mov    eax,DWORD PTR [ebp-0x8]
  41e503:	mov    ecx,DWORD PTR [ebp-0x18]
  41e506:	xor    eax,ebx
  41e508:	add    eax,esi
  41e50a:	imul   eax,ecx
  41e50d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e510:	mov    al,BYTE PTR [eax+ecx*1]
  41e513:	mov    BYTE PTR [ebp-0x1],al
  41e516:	mov    eax,DWORD PTR [ebp-0x8]
  41e519:	mov    ecx,DWORD PTR [ebp-0x18]
  41e51c:	xor    eax,ebx
  41e51e:	add    eax,esi
  41e520:	imul   eax,ecx
  41e523:	mov    ecx,DWORD PTR [ebp-0x14]
  41e526:	xor    ecx,ebx
  41e528:	add    eax,ecx
  41e52a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e52d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e4]
  41e535:	mov    ecx,DWORD PTR [ebp-0xd0]
  41e53b:	xor    ecx,ebx
  41e53d:	lea    eax,[ecx+eax*1+0x3272e4]
  41e544:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e548:	xor    ecx,eax
  41e54a:	mov    BYTE PTR [ebp-0x1],cl
  41e54d:	mov    al,BYTE PTR [ebp-0x1]
  41e550:	mov    ecx,DWORD PTR [ebp-0x8]
  41e553:	mov    edx,DWORD PTR [ebp-0x18]
  41e556:	xor    ecx,ebx
  41e558:	add    ecx,esi
  41e55a:	imul   ecx,edx
  41e55d:	mov    edx,DWORD PTR [ebp-0x1c]
  41e560:	mov    BYTE PTR [ecx+edx*1],al
  41e563:	mov    eax,DWORD PTR [ebp-0x38]
  41e566:	mov    ecx,DWORD PTR [ebp-0x14]
  41e569:	xor    eax,ebx
  41e56b:	xor    ecx,ebx
  41e56d:	add    eax,esi
  41e56f:	add    ecx,esi
  41e571:	imul   eax,ecx
  41e574:	add    eax,DWORD PTR [ebp-0x18]
  41e577:	mov    DWORD PTR [ebp-0x18],eax
  41e57a:	mov    eax,DWORD PTR [ebp-0x18]
  41e57d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e580:	cmp    ecx,eax
  41e582:	jb     0x41e489
  41e588:	mov    eax,DWORD PTR [ebp-0x14]
  41e58b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e58e:	xor    eax,ebx
  41e590:	add    eax,esi
  41e592:	imul   eax,ecx
  41e595:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e598:	xor    ecx,ebx
  41e59a:	add    ecx,esi
  41e59c:	or     eax,ecx
  41e59e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e5a1:	xor    ecx,ebx
  41e5a3:	add    eax,ecx
  41e5a5:	mov    ecx,DWORD PTR [ebp-0x30]
  41e5a8:	xor    ecx,ebx
  41e5aa:	add    eax,ecx
  41e5ac:	mov    ecx,DWORD PTR [ebp-0xc]
  41e5af:	lea    eax,[eax+ecx*1+0x64e5c8]
  41e5b6:	jmp    0x41e5c7
  41e5b8:	mov    eax,DWORD PTR [ebp-0x30]
  41e5bb:	mov    ecx,DWORD PTR [ebp-0xc]
  41e5be:	xor    eax,ebx
  41e5c0:	lea    eax,[eax+ecx*1+0x3272e4]
  41e5c7:	mov    DWORD PTR [ebp-0xc],eax
  41e5ca:	mov    eax,DWORD PTR [ebp-0x30]
  41e5cd:	xor    eax,ebx
  41e5cf:	mov    ecx,0xffcd8d1c
  41e5d4:	sub    ecx,eax
  41e5d6:	add    ecx,DWORD PTR [ebp-0x34]
  41e5d9:	mov    eax,DWORD PTR [ebp-0x30]
  41e5dc:	mov    edx,DWORD PTR [ebp-0xc]
  41e5df:	xor    eax,ebx
  41e5e1:	add    eax,esi
  41e5e3:	imul   eax,edx
  41e5e6:	cmp    eax,ecx
  41e5e8:	jbe    0x41e403
  41e5ee:	push   DWORD PTR [ebp+0x8]
  41e5f1:	mov    eax,DWORD PTR [ebp+0x8]
  41e5f4:	push   DWORD PTR [eax+0x1cc]
  41e5fa:	lea    eax,[ebp-0xd8]
  41e600:	push   eax
  41e601:	mov    eax,DWORD PTR [ebp+0x8]
  41e604:	mov    eax,DWORD PTR [eax+0x1c4]
  41e60a:	push   DWORD PTR [eax]
  41e60c:	mov    eax,DWORD PTR [ebp+0x8]
  41e60f:	mov    eax,DWORD PTR [eax+0x1c0]
  41e615:	push   DWORD PTR [eax]
  41e617:	push   DWORD PTR [ebp-0x3c]
  41e61a:	push   DWORD PTR [ebp-0x2c]
  41e61d:	call   0x41f0b4
  41e622:	mov    DWORD PTR [ebp-0x40],eax
  41e625:	mov    eax,DWORD PTR [ebp-0x10]
  41e628:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e62b:	xor    eax,ebx
  41e62d:	add    eax,esi
  41e62f:	cmp    eax,ecx
  41e631:	je     0x41e652
  41e633:	mov    eax,DWORD PTR [ebp+0x8]
  41e636:	mov    ecx,DWORD PTR [ebp-0x50]
  41e639:	mov    eax,DWORD PTR [eax+0x1d8]
  41e63f:	xor    ecx,ebx
  41e641:	add    ecx,esi
  41e643:	push   ecx
  41e644:	mov    ecx,DWORD PTR [ebp-0x10]
  41e647:	xor    ecx,ebx
  41e649:	add    ecx,esi
  41e64b:	push   ecx
  41e64c:	push   DWORD PTR [ebp-0x2c]
  41e64f:	call   DWORD PTR [eax+0x18]
  41e652:	pop    edi
  41e653:	pop    esi
  41e654:	pop    ebx
  41e655:	leave  
  41e656:	ret    0x4
  41e659:	push   ebp
  41e65a:	mov    ebp,esp
  41e65c:	push   ecx
  41e65d:	push   ecx
  41e65e:	lea    eax,[ebp-0x8]
  41e661:	mov    DWORD PTR [ebp-0x4],eax
  41e664:	push   esi
  41e665:	mov    esi,DWORD PTR [ebp-0x4]
  41e668:	mov    eax,0xf881ba0f
  41e66d:	mov    DWORD PTR [esi],eax
  41e66f:	mov    esi,DWORD PTR [ebp-0x8]
  41e672:	cmp    esi,eax
  41e674:	pop    esi
  41e675:	jne    0x41e67f
  41e677:	mov    BYTE PTR [ecx+0xa],0x72
  41e67b:	mov    BYTE PTR [edx+0x8],0x2f
  41e67f:	mov    BYTE PTR [edx+0xa],0x72
  41e683:	mov    BYTE PTR [ecx+0x2],0x0
  41e687:	leave  
  41e688:	ret    
  41e689:	push   ebp
  41e68a:	mov    ebp,esp
  41e68c:	push   ecx
  41e68d:	push   ecx
  41e68e:	lea    eax,[ebp-0x8]
  41e691:	mov    DWORD PTR [ebp-0x4],eax
  41e694:	mov    edx,DWORD PTR [ebp-0x4]
  41e697:	mov    eax,0xf88b0beb
  41e69c:	mov    DWORD PTR [edx],eax
  41e69e:	mov    edx,DWORD PTR [ebp-0x8]
  41e6a1:	cmp    edx,eax
  41e6a3:	jne    0x41e6b4
  41e6a5:	mov    eax,DWORD PTR [ebp+0x8]
  41e6a8:	mov    BYTE PTR [ecx+0x9],0xe
  41e6ac:	mov    BYTE PTR [eax+0x7],0x47
  41e6b0:	mov    BYTE PTR [ecx+0x6],0xf
  41e6b4:	mov    BYTE PTR [ecx+0x3],0x1e
  41e6b8:	leave  
  41e6b9:	ret    0x4
  41e6bc:	push   ebp
  41e6bd:	mov    ebp,esp
  41e6bf:	push   ecx
  41e6c0:	push   ecx
  41e6c1:	lea    eax,[ebp-0x8]
  41e6c4:	mov    DWORD PTR [ebp-0x4],eax
  41e6c7:	mov    edx,DWORD PTR [ebp-0x4]
  41e6ca:	mov    eax,0x7e0da0f
  41e6cf:	mov    DWORD PTR [edx],eax
  41e6d1:	mov    edx,DWORD PTR [ebp-0x8]
  41e6d4:	cmp    edx,eax
  41e6d6:	jne    0x41e6dc
  41e6d8:	mov    BYTE PTR [ecx+0x7],0x47
  41e6dc:	mov    eax,DWORD PTR [ebp+0x8]
  41e6df:	mov    BYTE PTR [ecx+0x1],0x5
  41e6e3:	mov    BYTE PTR [eax+0x9],0x2e
  41e6e7:	leave  
  41e6e8:	ret    0x4
  41e6eb:	push   ebp
  41e6ec:	mov    ebp,esp
  41e6ee:	push   ecx
  41e6ef:	push   ecx
  41e6f0:	lea    eax,[ebp-0x8]
  41e6f3:	mov    DWORD PTR [ebp-0x4],eax
  41e6f6:	push   esi
  41e6f7:	mov    esi,DWORD PTR [ebp-0x4]
  41e6fa:	mov    eax,0x7060e3e
  41e6ff:	mov    DWORD PTR [esi],eax
  41e701:	mov    esi,DWORD PTR [ebp-0x8]
  41e704:	cmp    esi,eax
  41e706:	pop    esi
  41e707:	jne    0x41e713
  41e709:	mov    BYTE PTR [edx+0x4],0x3
  41e70d:	mov    WORD PTR [ecx+0x3],0x31e
  41e713:	mov    BYTE PTR [edx],0x3f
  41e716:	leave  
  41e717:	ret    
  41e718:	push   ebp
  41e719:	mov    ebp,esp
  41e71b:	push   ecx
  41e71c:	push   ecx
  41e71d:	lea    eax,[ebp-0x8]
  41e720:	mov    DWORD PTR [ebp-0x4],eax
  41e723:	mov    edx,DWORD PTR [ebp-0x4]
  41e726:	mov    eax,0xf8870b3f
  41e72b:	mov    DWORD PTR [edx],eax
  41e72d:	mov    edx,DWORD PTR [ebp-0x8]
  41e730:	cmp    edx,eax
  41e732:	jne    0x41e73f
  41e734:	mov    eax,DWORD PTR [ebp+0x8]
  41e737:	mov    BYTE PTR [ecx+0x8],0xf
  41e73b:	mov    BYTE PTR [eax+0x1],0x5
  41e73f:	mov    BYTE PTR [ecx+0x5],0xb
  41e743:	leave  
  41e744:	ret    0x4
  41e747:	push   esi
  41e748:	mov    ecx,edi
  41e74a:	call   0x41e718
  41e74f:	mov    edx,edi
  41e751:	mov    ecx,esi
  41e753:	mov    BYTE PTR [esi],0x1f
  41e756:	call   0x41e6eb
  41e75b:	push   esi
  41e75c:	mov    ecx,edi
  41e75e:	mov    BYTE PTR [esi+0x5],0xb
  41e762:	call   0x41e6bc
  41e767:	push   esi
  41e768:	mov    BYTE PTR [esi+0x6],0xf
  41e76c:	call   0x41e689
  41e771:	mov    BYTE PTR [esi+0x2],0x0
  41e775:	mov    edx,esi
  41e777:	jmp    0x41e659
  41e77c:	push   ebp
  41e77d:	mov    ebp,esp
  41e77f:	push   ecx
  41e780:	mov    ecx,DWORD PTR [edx+0x194]
  41e786:	push   esi
  41e787:	mov    esi,DWORD PTR [ebp+0x8]
  41e78a:	mov    esi,DWORD PTR [esi]
  41e78c:	mov    DWORD PTR [ecx],esi
  41e78e:	mov    ecx,DWORD PTR [edx+0x194]
  41e794:	mov    ecx,DWORD PTR [ecx]
  41e796:	mov    esi,DWORD PTR [edx+0x190]
  41e79c:	mov    DWORD PTR [esi],ecx
  41e79e:	mov    eax,DWORD PTR [edx+0x194]
  41e7a4:	mov    ecx,DWORD PTR [eax]
  41e7a6:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e7a9:	add    ecx,DWORD PTR [eax]
  41e7ab:	mov    DWORD PTR [ebp-0x4],0xf89ca581
  41e7b2:	mov    eax,DWORD PTR [ebp-0x4]
  41e7b5:	movzx  ecx,WORD PTR [ecx+0x16]
  41e7b9:	xor    eax,0x751089d
  41e7be:	add    eax,0x3272e4
  41e7c3:	pop    esi
  41e7c4:	test   ecx,eax
  41e7c6:	je     0x41e7d4
  41e7c8:	mov    eax,DWORD PTR [edx+0x1c8]
  41e7ce:	mov    DWORD PTR [eax],0xf89c8580
  41e7d4:	leave  
  41e7d5:	ret    0x4
  41e7d8:	push   ebp
  41e7d9:	mov    ebp,esp
  41e7db:	sub    esp,0x70
  41e7de:	and    DWORD PTR [ebp-0x20],0x0
  41e7e2:	mov    DWORD PTR [ebp-0x18],0xf89cb581
  41e7e9:	mov    DWORD PTR [ebp-0x1c],0xf89c85c1
  41e7f0:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41e7f7:	mov    DWORD PTR [ebp-0x14],0xf89c8583
  41e7fe:	mov    DWORD PTR [ebp-0x2c],0xf89f0581
  41e805:	mov    eax,DWORD PTR [ebp+0x20]
  41e808:	mov    eax,DWORD PTR [eax+0x194]
  41e80e:	mov    DWORD PTR [ebp-0xc],eax
  41e811:	mov    eax,DWORD PTR [ebp+0x20]
  41e814:	push   ebx
  41e815:	push   esi
  41e816:	mov    esi,DWORD PTR [eax+0x190]
  41e81c:	mov    eax,DWORD PTR [ebp+0x20]
  41e81f:	mov    eax,DWORD PTR [eax+0x18c]
  41e825:	mov    DWORD PTR [ebp-0x8],eax
  41e828:	mov    eax,DWORD PTR [eax]
  41e82a:	push   edi
  41e82b:	mov    DWORD PTR [ebp-0x4],esi
  41e82e:	test   eax,eax
  41e830:	jne    0x41e83d
  41e832:	push   DWORD PTR [ebp+0x1c]
  41e835:	mov    edx,DWORD PTR [ebp+0x20]
  41e838:	call   0x41e77c
  41e83d:	mov    eax,DWORD PTR [esi]
  41e83f:	mov    ebx,DWORD PTR [esi]
  41e841:	add    ebx,DWORD PTR [eax+0x3c]
  41e844:	mov    eax,DWORD PTR [ebp+0xc]
  41e847:	mov    ecx,DWORD PTR [ebp-0x8]
  41e84a:	mov    ecx,DWORD PTR [ecx]
  41e84c:	mov    esi,0x751089d
  41e851:	xor    eax,esi
  41e853:	mov    edi,0x3272e4
  41e858:	add    eax,edi
  41e85a:	cmp    eax,ecx
  41e85c:	jne    0x41ea94
  41e862:	mov    eax,DWORD PTR [ebp-0xc]
  41e865:	mov    eax,DWORD PTR [eax]
  41e867:	mov    DWORD PTR [ebp-0x10],eax
  41e86a:	mov    eax,DWORD PTR [ebx+0x50]
  41e86d:	mov    DWORD PTR [ebp-0x68],eax
  41e870:	mov    eax,DWORD PTR [ebp-0x18]
  41e873:	xor    eax,esi
  41e875:	add    eax,edi
  41e877:	mov    DWORD PTR [ebp-0x64],eax
  41e87a:	mov    eax,DWORD PTR [ebp-0x14]
  41e87d:	and    DWORD PTR [ebp-0x6c],0x0
  41e881:	xor    eax,esi
  41e883:	add    eax,edi
  41e885:	mov    DWORD PTR [ebp-0x60],eax
  41e888:	lea    eax,[ebp-0x70]
  41e88b:	push   eax
  41e88c:	mov    eax,DWORD PTR [ebp+0x8]
  41e88f:	xor    eax,esi
  41e891:	add    eax,edi
  41e893:	push   eax
  41e894:	mov    eax,DWORD PTR [ebp+0x20]
  41e897:	add    eax,0xaa
  41e89c:	push   eax
  41e89d:	mov    eax,DWORD PTR [ebp+0x20]
  41e8a0:	mov    eax,DWORD PTR [eax+0x198]
  41e8a6:	mov    DWORD PTR [ebp-0x70],0x4
  41e8ad:	push   DWORD PTR [eax]
  41e8af:	mov    eax,DWORD PTR [ebp+0x10]
  41e8b2:	call   eax
  41e8b4:	mov    ecx,DWORD PTR [ebp-0xc]
  41e8b7:	mov    ecx,DWORD PTR [ecx]
  41e8b9:	mov    edx,DWORD PTR [ebp-0x8]
  41e8bc:	mov    DWORD PTR [ebp-0x6c],eax
  41e8bf:	mov    DWORD PTR [ebp+0x1c],eax
  41e8c2:	mov    DWORD PTR [edx],ecx
  41e8c4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8c7:	mov    DWORD PTR [ecx],eax
  41e8c9:	mov    eax,DWORD PTR [ebx+0x50]
  41e8cc:	mov    DWORD PTR [ebp-0x68],eax
  41e8cf:	mov    eax,DWORD PTR [ebp-0x1c]
  41e8d2:	xor    eax,esi
  41e8d4:	add    eax,edi
  41e8d6:	mov    DWORD PTR [ebp-0x64],eax
  41e8d9:	lea    eax,[ebp-0x20]
  41e8dc:	mov    DWORD PTR [ebp-0x60],eax
  41e8df:	lea    eax,[ebp-0x70]
  41e8e2:	push   eax
  41e8e3:	mov    eax,DWORD PTR [ebp+0x8]
  41e8e6:	xor    eax,esi
  41e8e8:	add    eax,edi
  41e8ea:	push   eax
  41e8eb:	mov    eax,DWORD PTR [ebp+0x20]
  41e8ee:	add    eax,0xee
  41e8f3:	push   eax
  41e8f4:	mov    eax,DWORD PTR [ebp+0x20]
  41e8f7:	mov    eax,DWORD PTR [eax+0x198]
  41e8fd:	mov    DWORD PTR [ebp-0x70],0x4
  41e904:	push   DWORD PTR [eax]
  41e906:	mov    eax,DWORD PTR [ebp+0x10]
  41e909:	call   eax
  41e90b:	test   eax,eax
  41e90d:	je     0x41e932
  41e90f:	and    DWORD PTR [ebp+0xc],0x0
  41e913:	cmp    DWORD PTR [ebx+0x50],0x0
  41e917:	jbe    0x41e932
  41e919:	mov    eax,DWORD PTR [ebp+0x1c]
  41e91c:	mov    ecx,DWORD PTR [ebp-0x10]
  41e91f:	sub    ecx,eax
  41e921:	mov    dl,BYTE PTR [ecx+eax*1]
  41e924:	inc    DWORD PTR [ebp+0xc]
  41e927:	mov    BYTE PTR [eax],dl
  41e929:	mov    edx,DWORD PTR [ebp+0xc]
  41e92c:	inc    eax
  41e92d:	cmp    edx,DWORD PTR [ebx+0x50]
  41e930:	jb     0x41e921
  41e932:	mov    edx,DWORD PTR [ebp+0x1c]
  41e935:	mov    ecx,DWORD PTR [edx+0x3c]
  41e938:	add    ecx,edx
  41e93a:	mov    eax,DWORD PTR [ecx+0xa0]
  41e940:	mov    ebx,DWORD PTR [ecx+0x28]
  41e943:	add    eax,edx
  41e945:	sub    edx,DWORD PTR [ebp-0x10]
  41e948:	add    ebx,DWORD PTR [ebp+0x1c]
  41e94b:	mov    DWORD PTR [ebp+0xc],edx
  41e94e:	mov    DWORD PTR [ebp-0x2c],ecx
  41e951:	mov    DWORD PTR [ebp-0x14],ebx
  41e954:	mov    DWORD PTR [ebp-0x8],0x0
  41e95b:	jmp    0x41e9d7
  41e95d:	add    edx,0xfffffff8
  41e960:	shr    edx,1
  41e962:	mov    DWORD PTR [ebp-0x18],edx
  41e965:	je     0x41e9c3
  41e967:	lea    edx,[eax+0x8]
  41e96a:	mov    DWORD PTR [ebp-0x4],edx
  41e96d:	mov    edx,DWORD PTR [ebp-0x18]
  41e970:	mov    DWORD PTR [ebp-0x18],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x4]
  41e976:	movzx  edx,WORD PTR [edx]
  41e979:	mov    DWORD PTR [ebp-0x24],edx
  41e97c:	and    edx,0xfff
  41e982:	mov    DWORD PTR [ebp-0x28],edx
  41e985:	mov    edx,DWORD PTR [ebp-0x24]
  41e988:	shr    edx,0xc
  41e98b:	add    edx,0xffcd8d1c
  41e991:	xor    edx,esi
  41e993:	cmp    edx,0xf89c8582
  41e999:	jne    0x41e9ba
  41e99b:	mov    edx,DWORD PTR [ebp-0x28]
  41e99e:	add    edx,DWORD PTR [ebp+0x1c]
  41e9a1:	mov    ebx,DWORD PTR [eax]
  41e9a3:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e9a7:	je     0x41e9b7
  41e9a9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e9ac:	add    ecx,DWORD PTR [ebx+edx*1]
  41e9af:	mov    ebx,DWORD PTR [eax]
  41e9b1:	mov    DWORD PTR [edx+ebx*1],ecx
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e9b7:	mov    ebx,DWORD PTR [ebp-0x14]
  41e9ba:	add    DWORD PTR [ebp-0x4],0x2
  41e9be:	dec    DWORD PTR [ebp-0x18]
  41e9c1:	jne    0x41e973
  41e9c3:	mov    edx,DWORD PTR [ebp-0xc]
  41e9c6:	add    DWORD PTR [ebp-0x8],edx
  41e9c9:	mov    edx,DWORD PTR [ebp-0x8]
  41e9cc:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e9d2:	jae    0x41e9e5
  41e9d4:	add    eax,DWORD PTR [ebp-0xc]
  41e9d7:	mov    edx,DWORD PTR [eax+0x4]
  41e9da:	mov    DWORD PTR [ebp-0xc],edx
  41e9dd:	test   edx,edx
  41e9df:	jne    0x41e95d
  41e9e5:	mov    eax,DWORD PTR [ebp-0x10]
  41e9e8:	mov    DWORD PTR [ebp-0x6c],eax
  41e9eb:	mov    DWORD PTR [ebp-0x70],0x4
  41e9f2:	mov    eax,DWORD PTR [ecx+0x50]
  41e9f5:	mov    DWORD PTR [ebp-0x68],eax
  41e9f8:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9fb:	xor    eax,esi
  41e9fd:	add    eax,edi
  41e9ff:	mov    DWORD PTR [ebp-0x64],eax
  41ea02:	lea    eax,[ebp-0x20]
  41ea05:	mov    DWORD PTR [ebp-0x60],eax
  41ea08:	lea    eax,[ebp-0x70]
  41ea0b:	push   eax
  41ea0c:	mov    eax,DWORD PTR [ebp+0x8]
  41ea0f:	xor    eax,esi
  41ea11:	add    eax,edi
  41ea13:	push   eax
  41ea14:	mov    eax,DWORD PTR [ebp+0x20]
  41ea17:	add    eax,0xee
  41ea1c:	push   eax
  41ea1d:	mov    eax,DWORD PTR [ebp+0x20]
  41ea20:	mov    eax,DWORD PTR [eax+0x198]
  41ea26:	push   DWORD PTR [eax]
  41ea28:	mov    eax,DWORD PTR [ebp+0x10]
  41ea2b:	call   eax
  41ea2d:	mov    eax,DWORD PTR [ebp+0x20]
  41ea30:	mov    eax,DWORD PTR [eax+0x180]
  41ea36:	add    eax,DWORD PTR [ebp+0xc]
  41ea39:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea3c:	push   DWORD PTR [ebp+0x18]
  41ea3f:	mov    DWORD PTR [eax],ecx
  41ea41:	push   DWORD PTR [ebp+0x14]
  41ea44:	push   DWORD PTR [ebp+0x1c]
  41ea47:	call   ebx
  41ea49:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea4c:	add    ecx,DWORD PTR [ebp+0x20]
  41ea4f:	lea    eax,[ebp+0x4]
  41ea52:	mov    DWORD PTR [ebp+0x20],ecx
  41ea55:	mov    ecx,DWORD PTR [ebp+0x20]
  41ea58:	mov    ecx,DWORD PTR [ebp+0x20]
  41ea5b:	mov    edx,DWORD PTR [ecx+0x190]
  41ea61:	mov    ecx,DWORD PTR [ebp+0x20]
  41ea64:	mov    ecx,DWORD PTR [ecx+0x18c]
  41ea6a:	mov    esi,DWORD PTR [ecx]
  41ea6c:	cmp    DWORD PTR [eax],esi
  41ea6e:	jb     0x41ea8f
  41ea70:	mov    esi,DWORD PTR [edx]
  41ea72:	mov    edi,DWORD PTR [edx]
  41ea74:	mov    esi,DWORD PTR [esi+0x3c]
  41ea77:	lea    esi,[edi+esi*1+0x50]
  41ea7b:	mov    edi,DWORD PTR [ecx]
  41ea7d:	add    edi,DWORD PTR [esi]
  41ea7f:	cmp    DWORD PTR [eax],edi
  41ea81:	jae    0x41ea8f
  41ea83:	mov    esi,DWORD PTR [ecx]
  41ea85:	mov    ecx,DWORD PTR [eax]
  41ea87:	mov    edx,DWORD PTR [edx]
  41ea89:	sub    ecx,esi
  41ea8b:	add    edx,ecx
  41ea8d:	mov    DWORD PTR [eax],edx
  41ea8f:	mov    eax,DWORD PTR [ebp+0xc]
  41ea92:	jmp    0x41ea96
  41ea94:	xor    eax,eax
  41ea96:	pop    edi
  41ea97:	pop    esi
  41ea98:	pop    ebx
  41ea99:	leave  
  41ea9a:	ret    0x1c
  41ea9d:	push   ebp
  41ea9e:	mov    ebp,esp
  41eaa0:	sub    esp,0x1c
  41eaa3:	push   esi
  41eaa4:	mov    esi,eax
  41eaa6:	mov    eax,DWORD PTR [ecx+0x190]
  41eaac:	cmp    DWORD PTR [eax],0x0
  41eaaf:	je     0x41ebbf
  41eab5:	test   edx,edx
  41eab7:	je     0x41ebbf
  41eabd:	test   esi,esi
  41eabf:	je     0x41ebbf
  41eac5:	mov    eax,DWORD PTR [esi+0x88]
  41eacb:	test   eax,eax
  41eacd:	je     0x41ebba
  41ead3:	cmp    DWORD PTR [esi+0x8c],0x10
  41eada:	je     0x41ebba
  41eae0:	cmp    DWORD PTR [esi+0x34],edx
  41eae3:	je     0x41ebba
  41eae9:	mov    esi,DWORD PTR [ecx+0x18c]
  41eaef:	and    DWORD PTR [ebp-0x10],0x0
  41eaf3:	mov    ecx,edx
  41eaf5:	sub    ecx,DWORD PTR [esi]
  41eaf7:	add    eax,edx
  41eaf9:	movzx  edx,WORD PTR [eax+0xc]
  41eafd:	mov    DWORD PTR [ebp-0x1c],ecx
  41eb00:	movzx  ecx,WORD PTR [eax+0xe]
  41eb04:	add    ecx,edx
  41eb06:	je     0x41ebba
  41eb0c:	lea    ecx,[eax+0x14]
  41eb0f:	push   ebx
  41eb10:	mov    DWORD PTR [ebp-0x18],ecx
  41eb13:	mov    esi,0x7fffffff
  41eb18:	push   edi
  41eb19:	test   DWORD PTR [ecx],esi
  41eb1b:	je     0x41eb9c
  41eb1d:	mov    edx,DWORD PTR [ecx]
  41eb1f:	and    DWORD PTR [ebp-0xc],0x0
  41eb23:	and    edx,esi
  41eb25:	add    edx,eax
  41eb27:	movzx  edi,WORD PTR [edx+0xe]
  41eb2b:	movzx  ebx,WORD PTR [edx+0xc]
  41eb2f:	add    edi,ebx
  41eb31:	je     0x41eb9c
  41eb33:	lea    ecx,[edx+0x14]
  41eb36:	mov    DWORD PTR [ebp-0x14],ecx
  41eb39:	test   DWORD PTR [ecx],esi
  41eb3b:	je     0x41eb7e
  41eb3d:	mov    ecx,DWORD PTR [ecx]
  41eb3f:	and    DWORD PTR [ebp-0x8],0x0
  41eb43:	and    ecx,esi
  41eb45:	add    ecx,eax
  41eb47:	movzx  edi,WORD PTR [ecx+0xe]
  41eb4b:	movzx  ebx,WORD PTR [ecx+0xc]
  41eb4f:	add    edi,ebx
  41eb51:	je     0x41eb7e
  41eb53:	lea    edi,[ecx+0x14]
  41eb56:	mov    DWORD PTR [ebp-0x4],edi
  41eb59:	mov    edi,DWORD PTR [ebp-0x4]
  41eb5c:	mov    edi,DWORD PTR [edi]
  41eb5e:	test   edi,edi
  41eb60:	je     0x41eb68
  41eb62:	mov    ebx,DWORD PTR [ebp-0x1c]
  41eb65:	add    DWORD PTR [edi+eax*1],ebx
  41eb68:	movzx  edi,WORD PTR [ecx+0xe]
  41eb6c:	movzx  ebx,WORD PTR [ecx+0xc]
  41eb70:	inc    DWORD PTR [ebp-0x8]
  41eb73:	add    DWORD PTR [ebp-0x4],0x8
  41eb77:	add    edi,ebx
  41eb79:	cmp    DWORD PTR [ebp-0x8],edi
  41eb7c:	jb     0x41eb59
  41eb7e:	movzx  edi,WORD PTR [edx+0xe]
  41eb82:	movzx  ebx,WORD PTR [edx+0xc]
  41eb86:	mov    ecx,DWORD PTR [ebp-0x14]
  41eb89:	inc    DWORD PTR [ebp-0xc]
  41eb8c:	add    ecx,0x8
  41eb8f:	add    edi,ebx
  41eb91:	mov    DWORD PTR [ebp-0x14],ecx
  41eb94:	cmp    DWORD PTR [ebp-0xc],edi
  41eb97:	jb     0x41eb39
  41eb99:	mov    ecx,DWORD PTR [ebp-0x18]
  41eb9c:	movzx  edx,WORD PTR [eax+0xe]
  41eba0:	movzx  edi,WORD PTR [eax+0xc]
  41eba4:	inc    DWORD PTR [ebp-0x10]
  41eba7:	add    ecx,0x8
  41ebaa:	add    edx,edi
  41ebac:	mov    DWORD PTR [ebp-0x18],ecx
  41ebaf:	cmp    DWORD PTR [ebp-0x10],edx
  41ebb2:	jb     0x41eb19
  41ebb8:	pop    edi
  41ebb9:	pop    ebx
  41ebba:	xor    eax,eax
  41ebbc:	inc    eax
  41ebbd:	jmp    0x41ebc1
  41ebbf:	xor    eax,eax
  41ebc1:	pop    esi
  41ebc2:	leave  
  41ebc3:	ret    
  41ebc4:	push   ebp
  41ebc5:	mov    ebp,esp
  41ebc7:	mov    ecx,DWORD PTR [ecx+0x190]
  41ebcd:	mov    eax,DWORD PTR [ebp+0xc]
  41ebd0:	sub    esp,0x10
  41ebd3:	push   ebx
  41ebd4:	xor    ebx,ebx
  41ebd6:	push   esi
  41ebd7:	push   edi
  41ebd8:	cmp    DWORD PTR [ecx],ebx
  41ebda:	je     0x41ec62
  41ebe0:	cmp    eax,ebx
  41ebe2:	je     0x41ec62
  41ebe4:	cmp    DWORD PTR [eax+0x78],ebx
  41ebe7:	jne    0x41ebee
  41ebe9:	xor    eax,eax
  41ebeb:	inc    eax
  41ebec:	jmp    0x41ec64
  41ebee:	mov    eax,DWORD PTR [eax+0x78]
  41ebf1:	add    eax,DWORD PTR [ebp+0x8]
  41ebf4:	mov    ecx,DWORD PTR [eax+0x1c]
  41ebf7:	mov    edx,DWORD PTR [eax+0x24]
  41ebfa:	mov    esi,DWORD PTR [eax+0x14]
  41ebfd:	mov    edi,DWORD PTR [eax+0x18]
  41ec00:	add    ecx,DWORD PTR [ebp+0x8]
  41ec03:	add    edx,DWORD PTR [ebp+0x8]
  41ec06:	mov    DWORD PTR [ebp-0x4],esi
  41ec09:	cmp    esi,edi
  41ec0b:	ja     0x41ec10
  41ec0d:	mov    DWORD PTR [ebp-0x4],edi
  41ec10:	mov    DWORD PTR [ebp-0x8],ebx
  41ec13:	cmp    DWORD PTR [ebp-0x4],ebx
  41ec16:	jbe    0x41ebe9
  41ec18:	cmp    ebx,DWORD PTR [eax+0x14]
  41ec1b:	jae    0x41ec23
  41ec1d:	movzx  esi,WORD PTR [edx+ebx*2]
  41ec21:	jmp    0x41ec25
  41ec23:	mov    esi,ebx
  41ec25:	lea    esi,[ecx+esi*4]
  41ec28:	mov    edi,DWORD PTR [esi]
  41ec2a:	test   edi,edi
  41ec2c:	je     0x41ec57
  41ec2e:	add    edi,DWORD PTR [ebp+0x8]
  41ec31:	mov    DWORD PTR [ebp-0x10],edi
  41ec34:	cmp    edi,eax
  41ec36:	jbe    0x41ec48
  41ec38:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec3b:	mov    ebx,DWORD PTR [ebx+0x7c]
  41ec3e:	add    ebx,eax
  41ec40:	cmp    edi,ebx
  41ec42:	jae    0x41ec48
  41ec44:	mov    esi,DWORD PTR [esi]
  41ec46:	jmp    0x41ec50
  41ec48:	sub    edi,DWORD PTR [ebp+0x8]
  41ec4b:	mov    DWORD PTR [esi],edi
  41ec4d:	mov    esi,DWORD PTR [ebp-0x10]
  41ec50:	test   esi,esi
  41ec52:	je     0x41ec62
  41ec54:	mov    ebx,DWORD PTR [ebp-0x8]
  41ec57:	inc    ebx
  41ec58:	mov    DWORD PTR [ebp-0x8],ebx
  41ec5b:	cmp    ebx,DWORD PTR [ebp-0x4]
  41ec5e:	jb     0x41ec18
  41ec60:	jmp    0x41ebe9
  41ec62:	xor    eax,eax
  41ec64:	pop    edi
  41ec65:	pop    esi
  41ec66:	pop    ebx
  41ec67:	leave  
  41ec68:	ret    0x8
  41ec6b:	push   ebp
  41ec6c:	mov    ebp,esp
  41ec6e:	sub    esp,0x2c
  41ec71:	mov    edx,0xf89c8581
  41ec76:	mov    DWORD PTR [ebp-0x4],edx
  41ec79:	mov    DWORD PTR [ebp-0x8],0xf89c8580
  41ec80:	mov    eax,DWORD PTR [ebp-0x4]
  41ec83:	mov    ecx,DWORD PTR [ebp-0x4]
  41ec86:	mov    ecx,DWORD PTR [ebp-0x4]
  41ec89:	mov    ecx,DWORD PTR [ebp-0x4]
  41ec8c:	mov    ecx,DWORD PTR [ebp-0x4]
  41ec8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41ec92:	push   ebx
  41ec93:	mov    ebx,DWORD PTR [ebp+0x10]
  41ec96:	push   esi
  41ec97:	mov    esi,0x751089d
  41ec9c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41eca3:	mov    ecx,DWORD PTR [ebp-0x4]
  41eca6:	mov    ebx,DWORD PTR [ebx+0x190]
  41ecac:	push   edi
  41ecad:	mov    edi,0x3272e4
  41ecb2:	xor    ecx,esi
  41ecb4:	xor    eax,esi
  41ecb6:	add    eax,edi
  41ecb8:	add    ecx,edi
  41ecba:	mov    DWORD PTR [ebp-0x18],eax
  41ecbd:	cmp    ecx,DWORD PTR [ebx]
  41ecbf:	je     0x41ef40
  41ecc5:	mov    ebx,DWORD PTR [ebp-0x4]
  41ecc8:	mov    ecx,DWORD PTR [ebp+0xc]
  41eccb:	xor    ebx,esi
  41eccd:	add    ebx,edi
  41eccf:	cmp    ebx,ecx
  41ecd1:	je     0x41ef40
  41ecd7:	mov    ebx,DWORD PTR [ebp-0x4]
  41ecda:	mov    ecx,DWORD PTR [ecx+0x80]
  41ece0:	xor    ebx,esi
  41ece2:	add    ebx,edi
  41ece4:	cmp    ecx,ebx
  41ece6:	je     0x41ef3b
  41ecec:	add    ecx,DWORD PTR [ebp+0x8]
  41ecef:	mov    DWORD PTR [ebp-0x2c],ecx
  41ecf2:	mov    ebx,edx
  41ecf4:	xor    ebx,esi
  41ecf6:	add    ebx,edi
  41ecf8:	mov    DWORD PTR [ebp-0x10],ebx
  41ecfb:	mov    ebx,DWORD PTR [ebp-0x10]
  41ecfe:	cmp    ebx,edx
  41ed00:	je     0x41ed14
  41ed02:	mov    edx,DWORD PTR [ebp-0x10]
  41ed05:	mov    ebx,DWORD PTR [ebp-0x4]
  41ed08:	imul   edx,edx,0x14
  41ed0b:	xor    ebx,esi
  41ed0d:	add    ebx,edi
  41ed0f:	cmp    DWORD PTR [edx+ecx*1],ebx
  41ed12:	jne    0x41ed2b
  41ed14:	mov    edx,DWORD PTR [ebp-0x10]
  41ed17:	mov    ebx,DWORD PTR [ebp-0x4]
  41ed1a:	imul   edx,edx,0x14
  41ed1d:	xor    ebx,esi
  41ed1f:	add    ebx,edi
  41ed21:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41ed25:	je     0x41ef2d
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ebx,DWORD PTR [ebp-0x4]
  41ed31:	mov    eax,DWORD PTR [ebp-0x10]
  41ed34:	imul   eax,eax,0x14
  41ed37:	add    eax,ecx
  41ed39:	mov    ecx,DWORD PTR [eax+0x10]
  41ed3c:	add    ecx,DWORD PTR [ebp+0x8]
  41ed3f:	xor    ebx,esi
  41ed41:	mov    DWORD PTR [ebp-0x1c],ecx
  41ed44:	mov    ecx,DWORD PTR [ebp-0x4]
  41ed47:	mov    edx,DWORD PTR [ebp-0x4]
  41ed4a:	xor    ecx,esi
  41ed4c:	add    ecx,edi
  41ed4e:	xor    edx,esi
  41ed50:	mov    DWORD PTR [ebp-0x24],ecx
  41ed53:	mov    ecx,DWORD PTR [eax]
  41ed55:	add    edx,edi
  41ed57:	add    ebx,edi
  41ed59:	cmp    ecx,edx
  41ed5b:	je     0x41ed63
  41ed5d:	add    ecx,DWORD PTR [ebp+0x8]
  41ed60:	mov    DWORD PTR [ebp-0x24],ecx
  41ed63:	mov    ecx,DWORD PTR [ebp-0x4]
  41ed66:	xor    ecx,esi
  41ed68:	add    ecx,DWORD PTR [eax+0xc]
  41ed6b:	mov    eax,DWORD PTR [ebp+0x8]
  41ed6e:	lea    eax,[ecx+eax*1+0x3272e4]
  41ed75:	mov    DWORD PTR [ebp+0xc],eax
  41ed78:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41ed7f:	mov    eax,DWORD PTR [ebp+0x10]
  41ed82:	push   DWORD PTR [ebp+0xc]
  41ed85:	mov    eax,DWORD PTR [eax+0x1d8]
  41ed8b:	call   DWORD PTR [eax]
  41ed8d:	mov    ecx,DWORD PTR [ebp-0x4]
  41ed90:	xor    ecx,esi
  41ed92:	add    ecx,edi
  41ed94:	mov    DWORD PTR [ebp-0xc],eax
  41ed97:	cmp    ecx,eax
  41ed99:	jne    0x41edad
  41ed9b:	mov    eax,DWORD PTR [ebp+0x10]
  41ed9e:	push   DWORD PTR [ebp+0xc]
  41eda1:	mov    eax,DWORD PTR [eax+0x1d8]
  41eda7:	call   DWORD PTR [eax+0xc]
  41edaa:	mov    DWORD PTR [ebp-0xc],eax
  41edad:	mov    DWORD PTR [ebp-0x20],0x7f661b08
  41edb4:	mov    DWORD PTR [ebp-0x20],0xf89c9998
  41edbb:	mov    eax,DWORD PTR [ebp-0x4]
  41edbe:	xor    eax,esi
  41edc0:	add    eax,edi
  41edc2:	cmp    eax,DWORD PTR [ebp-0xc]
  41edc5:	jne    0x41edea
  41edc7:	mov    eax,DWORD PTR [ebp-0x8]
  41edca:	mov    ecx,DWORD PTR [ebp-0x20]
  41edcd:	xor    eax,esi
  41edcf:	xor    ecx,esi
  41edd1:	lea    ebx,[ebx+eax*1+0x3272e4]
  41edd8:	mov    eax,DWORD PTR [ebp+0x10]
  41eddb:	mov    eax,DWORD PTR [eax+0x1d8]
  41ede1:	add    ecx,edi
  41ede3:	imul   ecx,ebx
  41ede6:	push   ecx
  41ede7:	call   DWORD PTR [eax+0x24]
  41edea:	mov    eax,DWORD PTR [ebp-0x4]
  41eded:	xor    eax,esi
  41edef:	add    eax,edi
  41edf1:	cmp    eax,DWORD PTR [ebp-0xc]
  41edf4:	jne    0x41ee05
  41edf6:	mov    eax,DWORD PTR [ebp-0x28]
  41edf9:	xor    eax,esi
  41edfb:	add    eax,edi
  41edfd:	cmp    ebx,eax
  41edff:	jbe    0x41ed7f
  41ee05:	mov    eax,DWORD PTR [ebp-0x4]
  41ee08:	xor    eax,esi
  41ee0a:	add    eax,edi
  41ee0c:	cmp    eax,DWORD PTR [ebp-0xc]
  41ee0f:	jne    0x41ee28
  41ee11:	mov    eax,DWORD PTR [ebp-0x8]
  41ee14:	mov    ecx,DWORD PTR [ebp-0x18]
  41ee17:	xor    eax,esi
  41ee19:	lea    eax,[ecx+eax*1+0x3272e4]
  41ee20:	mov    DWORD PTR [ebp-0x18],eax
  41ee23:	jmp    0x41ef17
  41ee28:	mov    DWORD PTR [ebp-0x14],0x1121b09
  41ee2f:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41ee36:	mov    ebx,DWORD PTR [ebp-0x4]
  41ee39:	xor    ebx,esi
  41ee3b:	add    ebx,edi
  41ee3d:	jmp    0x41ef04
  41ee42:	mov    eax,DWORD PTR [ebp-0x4]
  41ee45:	xor    eax,esi
  41ee47:	add    eax,edi
  41ee49:	mov    DWORD PTR [ebp-0x14],eax
  41ee4c:	mov    eax,DWORD PTR [ebp-0x4]
  41ee4f:	xor    eax,esi
  41ee51:	add    eax,edi
  41ee53:	mov    DWORD PTR [ebp+0xc],eax
  41ee56:	mov    ecx,DWORD PTR [ebp-0x4]
  41ee59:	mov    eax,DWORD PTR [ebp-0x24]
  41ee5c:	xor    ecx,esi
  41ee5e:	add    ecx,edi
  41ee60:	cmp    ecx,eax
  41ee62:	je     0x41ee6a
  41ee64:	mov    eax,DWORD PTR [eax+ebx*4]
  41ee67:	mov    DWORD PTR [ebp-0x14],eax
  41ee6a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ee6d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ee70:	mov    DWORD PTR [ebp+0xc],eax
  41ee73:	mov    eax,DWORD PTR [ebp-0x4]
  41ee76:	mov    ecx,DWORD PTR [ebp-0x14]
  41ee79:	xor    eax,esi
  41ee7b:	add    eax,edi
  41ee7d:	cmp    eax,ecx
  41ee7f:	je     0x41eeaa
  41ee81:	mov    eax,DWORD PTR [ebp-0x4]
  41ee84:	mov    ecx,DWORD PTR [ebp-0x14]
  41ee87:	xor    eax,esi
  41ee89:	add    eax,edi
  41ee8b:	shr    ecx,0x1f
  41ee8e:	cmp    eax,ecx
  41ee90:	je     0x41eeaa
  41ee92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ee95:	mov    eax,DWORD PTR [ebp+0x10]
  41ee98:	mov    eax,DWORD PTR [eax+0x1d8]
  41ee9e:	movzx  ecx,cx
  41eea1:	push   ecx
  41eea2:	push   DWORD PTR [ebp-0xc]
  41eea5:	call   DWORD PTR [eax+0x8]
  41eea8:	jmp    0x41eec3
  41eeaa:	mov    eax,DWORD PTR [ebp+0xc]
  41eead:	add    eax,DWORD PTR [ebp+0x8]
  41eeb0:	mov    ecx,DWORD PTR [ebp+0x10]
  41eeb3:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41eeb9:	add    eax,0x2
  41eebc:	push   eax
  41eebd:	push   DWORD PTR [ebp-0xc]
  41eec0:	call   DWORD PTR [ecx+0x8]
  41eec3:	mov    DWORD PTR [ebp+0xc],eax
  41eec6:	mov    eax,DWORD PTR [ebp-0x4]
  41eec9:	mov    ecx,DWORD PTR [ebp+0xc]
  41eecc:	xor    eax,esi
  41eece:	add    eax,edi
  41eed0:	cmp    eax,ecx
  41eed2:	mov    eax,DWORD PTR [ebp-0x8]
  41eed5:	jne    0x41eee8
  41eed7:	mov    ecx,DWORD PTR [ebp-0x18]
  41eeda:	xor    eax,esi
  41eedc:	lea    eax,[ecx+eax*1+0x3272e4]
  41eee3:	mov    DWORD PTR [ebp-0x18],eax
  41eee6:	jmp    0x41eef8
  41eee8:	mov    ecx,DWORD PTR [ebp+0xc]
  41eeeb:	xor    eax,esi
  41eeed:	add    eax,edi
  41eeef:	imul   eax,ecx
  41eef2:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eef5:	mov    DWORD PTR [ecx+ebx*4],eax
  41eef8:	mov    eax,DWORD PTR [ebp-0x8]
  41eefb:	xor    eax,esi
  41eefd:	lea    ebx,[ebx+eax*1+0x3272e4]
  41ef04:	mov    eax,DWORD PTR [ebp-0x4]
  41ef07:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ef0a:	xor    eax,esi
  41ef0c:	add    eax,edi
  41ef0e:	cmp    DWORD PTR [ecx+ebx*4],eax
  41ef11:	jne    0x41ee42
  41ef17:	mov    edx,DWORD PTR [ebp-0x10]
  41ef1a:	mov    eax,DWORD PTR [ebp-0x18]
  41ef1d:	mov    ecx,DWORD PTR [ebp-0x2c]
  41ef20:	sub    edx,0x3272e3
  41ef26:	xor    edx,esi
  41ef28:	jmp    0x41ecf2
  41ef2d:	mov    ecx,DWORD PTR [ebp-0x4]
  41ef30:	xor    ecx,esi
  41ef32:	add    ecx,edi
  41ef34:	cmp    eax,ecx
  41ef36:	mov    eax,DWORD PTR [ebp-0x4]
  41ef39:	jne    0x41ef43
  41ef3b:	mov    eax,DWORD PTR [ebp-0x8]
  41ef3e:	jmp    0x41ef43
  41ef40:	mov    eax,DWORD PTR [ebp-0x4]
  41ef43:	xor    eax,esi
  41ef45:	add    eax,edi
  41ef47:	pop    edi
  41ef48:	pop    esi
  41ef49:	pop    ebx
  41ef4a:	leave  
  41ef4b:	ret    0xc
  41ef4e:	push   ebp
  41ef4f:	mov    ebp,esp
  41ef51:	sub    esp,0x28
  41ef54:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  41ef5b:	mov    DWORD PTR [ebp-0x28],0xf89c8580
  41ef62:	mov    eax,DWORD PTR [ebp+0xc]
  41ef65:	mov    DWORD PTR [ebp+0xc],eax
  41ef68:	push   esi
  41ef69:	mov    eax,eax
  41ef6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ef6e:	mov    esi,DWORD PTR [ebp+0x8]
  41ef71:	mov    ecx,0x751089d
  41ef76:	xor    eax,ecx
  41ef78:	mov    edx,0x3272e4
  41ef7d:	add    eax,edx
  41ef7f:	cmp    esi,eax
  41ef81:	je     0x41f0a8
  41ef87:	mov    eax,DWORD PTR [ebp+0x8]
  41ef8a:	mov    esi,DWORD PTR [ebp+0x8]
  41ef8d:	add    esi,DWORD PTR [eax+0x3c]
  41ef90:	push   edi
  41ef91:	mov    DWORD PTR [ebp+0xc],esi
  41ef94:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41ef9b:	mov    eax,DWORD PTR [ebp-0x1c]
  41ef9e:	mov    esi,DWORD PTR [ebp-0x4]
  41efa1:	mov    edi,DWORD PTR [ebp+0xc]
  41efa4:	xor    esi,ecx
  41efa6:	xor    eax,ecx
  41efa8:	add    esi,edx
  41efaa:	cmp    DWORD PTR [edi+eax*8+0x1939798],esi
  41efb1:	je     0x41f0a2
  41efb7:	mov    esi,DWORD PTR [ebp+0xc]
  41efba:	mov    eax,DWORD PTR [ebp+0x8]
  41efbd:	add    eax,DWORD PTR [esi+0xa0]
  41efc3:	mov    esi,DWORD PTR [ebp+0x8]
  41efc6:	mov    edi,DWORD PTR [ebp+0xc]
  41efc9:	sub    esi,DWORD PTR [edi+0x34]
  41efcc:	mov    edi,DWORD PTR [ebp-0x4]
  41efcf:	xor    edi,ecx
  41efd1:	add    edi,edx
  41efd3:	mov    DWORD PTR [ebp-0x24],esi
  41efd6:	cmp    esi,edi
  41efd8:	je     0x41f0a2
  41efde:	mov    esi,DWORD PTR [ebp-0x4]
  41efe1:	xor    esi,ecx
  41efe3:	add    esi,edx
  41efe5:	mov    DWORD PTR [ebp-0x8],esi
  41efe8:	push   ebx
  41efe9:	mov    DWORD PTR [ebp-0x10],0xf89c8582
  41eff0:	jmp    0x41f08c
  41eff5:	mov    esi,DWORD PTR [ebp-0x4]
  41eff8:	xor    esi,ecx
  41effa:	lea    edi,[ebx-0x8]
  41effd:	add    esi,edx
  41efff:	shr    edi,1
  41f001:	cmp    esi,edi
  41f003:	jae    0x41f072
  41f005:	sub    edi,esi
  41f007:	lea    ebx,[eax+esi*2+0x8]
  41f00b:	mov    DWORD PTR [ebp-0x18],edi
  41f00e:	movzx  esi,WORD PTR [ebx]
  41f011:	and    esi,0xfff
  41f017:	mov    DWORD PTR [ebp-0x14],esi
  41f01a:	mov    edi,DWORD PTR [ebp-0x14]
  41f01d:	mov    esi,DWORD PTR [eax]
  41f01f:	sub    esi,edx
  41f021:	add    edi,esi
  41f023:	movzx  esi,WORD PTR [ebx]
  41f026:	shr    esi,0xc
  41f029:	xor    edi,ecx
  41f02b:	mov    DWORD PTR [ebp-0x20],edi
  41f02e:	mov    DWORD PTR [ebp-0x14],esi
  41f031:	mov    esi,DWORD PTR [ebp-0x20]
  41f034:	mov    edi,DWORD PTR [ebp+0x8]
  41f037:	xor    esi,ecx
  41f039:	lea    esi,[esi+edi*1+0x3272e4]
  41f040:	mov    DWORD PTR [ebp-0x20],esi
  41f043:	mov    esi,DWORD PTR [ebp-0x10]
  41f046:	mov    edi,DWORD PTR [ebp-0x14]
  41f049:	xor    esi,ecx
  41f04b:	add    esi,edx
  41f04d:	cmp    edi,esi
  41f04f:	jne    0x41f067
  41f051:	mov    esi,DWORD PTR [ebp-0x10]
  41f054:	mov    edi,DWORD PTR [ebp-0x14]
  41f057:	xor    esi,ecx
  41f059:	add    esi,edx
  41f05b:	cmp    edi,esi
  41f05d:	jne    0x41f067
  41f05f:	mov    esi,DWORD PTR [ebp-0x20]
  41f062:	mov    edi,DWORD PTR [ebp-0x24]
  41f065:	add    DWORD PTR [esi],edi
  41f067:	add    ebx,0x2
  41f06a:	dec    DWORD PTR [ebp-0x18]
  41f06d:	jne    0x41f00e
  41f06f:	mov    ebx,DWORD PTR [ebp-0xc]
  41f072:	add    DWORD PTR [ebp-0x8],ebx
  41f075:	mov    esi,DWORD PTR [ebp-0x1c]
  41f078:	mov    edi,DWORD PTR [ebp-0x8]
  41f07b:	mov    ebx,DWORD PTR [ebp+0xc]
  41f07e:	xor    esi,ecx
  41f080:	cmp    edi,DWORD PTR [ebx+esi*8+0x193979c]
  41f087:	jae    0x41f0a1
  41f089:	add    eax,DWORD PTR [ebp-0xc]
  41f08c:	mov    esi,DWORD PTR [ebp-0x4]
  41f08f:	mov    ebx,DWORD PTR [eax+0x4]
  41f092:	xor    esi,ecx
  41f094:	add    esi,edx
  41f096:	mov    DWORD PTR [ebp-0xc],ebx
  41f099:	cmp    ebx,esi
  41f09b:	jne    0x41eff5
  41f0a1:	pop    ebx
  41f0a2:	mov    eax,DWORD PTR [ebp-0x28]
  41f0a5:	pop    edi
  41f0a6:	jmp    0x41f0ab
  41f0a8:	mov    eax,DWORD PTR [ebp-0x4]
  41f0ab:	xor    eax,ecx
  41f0ad:	add    eax,edx
  41f0af:	pop    esi
  41f0b0:	leave  
  41f0b1:	ret    0x8
  41f0b4:	push   ebp
  41f0b5:	mov    ebp,esp
  41f0b7:	sub    esp,0xd8
  41f0bd:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  41f0c4:	mov    DWORD PTR [ebp-0x24],0xf89c8580
  41f0cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f0ce:	push   ebx
  41f0cf:	push   esi
  41f0d0:	mov    esi,0x751089d
  41f0d5:	xor    eax,esi
  41f0d7:	push   edi
  41f0d8:	mov    edi,0x3272e4
  41f0dd:	add    eax,edi
  41f0df:	mov    DWORD PTR [ebp-0x18],eax
  41f0e2:	mov    eax,DWORD PTR [ebp-0x4]
  41f0e5:	xor    eax,esi
  41f0e7:	add    eax,edi
  41f0e9:	mov    DWORD PTR [ebp-0x8],eax
  41f0ec:	mov    ebx,DWORD PTR [ebp+0x20]
  41f0ef:	mov    eax,DWORD PTR [ebp-0x1c]
  41f0f2:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f0f5:	xor    eax,ecx
  41f0f7:	mov    DWORD PTR [ebp-0x1c],eax
  41f0fa:	add    DWORD PTR [ebp-0x1c],0xf89cb581
  41f101:	mov    eax,DWORD PTR [ebp-0xc]
  41f104:	mov    ecx,DWORD PTR [ebp-0xc]
  41f107:	xor    eax,ecx
  41f109:	mov    DWORD PTR [ebp-0xc],eax
  41f10c:	add    DWORD PTR [ebp-0xc],0xf89c85c1
  41f113:	mov    eax,DWORD PTR [ebp-0x10]
  41f116:	mov    ecx,DWORD PTR [ebp-0x10]
  41f119:	xor    eax,ecx
  41f11b:	mov    DWORD PTR [ebp-0x10],eax
  41f11e:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41f125:	mov    eax,DWORD PTR [ebp-0x28]
  41f128:	mov    ecx,DWORD PTR [ebp-0x28]
  41f12b:	xor    eax,ecx
  41f12d:	mov    DWORD PTR [ebp-0x28],eax
  41f130:	add    DWORD PTR [ebp-0x28],0xf89f0581
  41f137:	mov    DWORD PTR [ebp+0x20],0xf89ceff4
  41f13e:	mov    eax,DWORD PTR [ebp+0x8]
  41f141:	test   eax,eax
  41f143:	je     0x41f5cc
  41f149:	mov    eax,DWORD PTR [ebp+0xc]
  41f14c:	test   eax,eax
  41f14e:	je     0x41f5cc
  41f154:	mov    eax,DWORD PTR [ebp+0x18]
  41f157:	test   eax,eax
  41f159:	je     0x41f5cc
  41f15f:	mov    eax,DWORD PTR [ebp+0x20]
  41f162:	mov    ecx,DWORD PTR [ebp+0x8]
  41f165:	xor    eax,0x89d
  41f16a:	add    eax,0x72e4
  41f16f:	cmp    WORD PTR [ecx],ax
  41f172:	jne    0x41f5cc
  41f178:	mov    eax,DWORD PTR [ebp-0x4]
  41f17b:	xor    eax,esi
  41f17d:	add    eax,edi
  41f17f:	mov    DWORD PTR [ebp-0x30],eax
  41f182:	mov    eax,DWORD PTR [ebp-0x4]
  41f185:	mov    ecx,DWORD PTR [ebp+0x8]
  41f188:	mov    eax,DWORD PTR [ebp+0x8]
  41f18b:	add    eax,DWORD PTR [ecx+0x3c]
  41f18e:	mov    DWORD PTR [ebp+0xc],eax
  41f191:	mov    eax,DWORD PTR [eax+0x50]
  41f194:	test   eax,eax
  41f196:	je     0x41f5cc
  41f19c:	mov    DWORD PTR [ebp-0x2c],0xf88c8581
  41f1a3:	mov    eax,DWORD PTR [ebp-0x2c]
  41f1a6:	xor    eax,esi
  41f1a8:	add    eax,edi
  41f1aa:	mov    DWORD PTR [ebp-0x2c],eax
  41f1ad:	mov    eax,DWORD PTR [ebp-0x4]
  41f1b0:	mov    eax,DWORD PTR [ebx+0x190]
  41f1b6:	mov    ecx,DWORD PTR [eax]
  41f1b8:	mov    ecx,DWORD PTR [ecx+0x3c]
  41f1bb:	add    ecx,DWORD PTR [eax]
  41f1bd:	mov    eax,DWORD PTR [ebp-0x4]
  41f1c0:	mov    eax,DWORD PTR [ebx+0x18c]
  41f1c6:	mov    edx,DWORD PTR [eax]
  41f1c8:	mov    DWORD PTR [ebp-0x20],ecx
  41f1cb:	mov    DWORD PTR [ebp+0x20],edx
  41f1ce:	cmp    edx,edx
  41f1d0:	jne    0x41f204
  41f1d2:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f1d8:	lea    edx,[ebp-0x18]
  41f1db:	push   edx
  41f1dc:	mov    edx,DWORD PTR [ebp-0xc]
  41f1df:	xor    edx,esi
  41f1e1:	add    edx,edi
  41f1e3:	push   edx
  41f1e4:	push   DWORD PTR [ecx+0x50]
  41f1e7:	push   DWORD PTR [ebp+0x20]
  41f1ea:	call   DWORD PTR [eax+0x1c]
  41f1ed:	mov    eax,DWORD PTR [ebp-0x20]
  41f1f0:	mov    ecx,DWORD PTR [eax+0x54]
  41f1f3:	mov    eax,DWORD PTR [eax+0x50]
  41f1f6:	sub    eax,ecx
  41f1f8:	add    ecx,DWORD PTR [ebp+0x20]
  41f1fb:	push   ecx
  41f1fc:	call   0x41fb69
  41f201:	mov    edx,DWORD PTR [ebp+0x20]
  41f204:	mov    eax,DWORD PTR [ebx+0x194]
  41f20a:	mov    DWORD PTR [eax],edx
  41f20c:	mov    eax,DWORD PTR [ebp+0xc]
  41f20f:	push   DWORD PTR [eax+0x54]
  41f212:	push   DWORD PTR [ebp+0x8]
  41f215:	push   edx
  41f216:	call   0x41fa5f
  41f21b:	mov    ecx,DWORD PTR [ebp+0x20]
  41f21e:	mov    eax,DWORD PTR [ecx+0x3c]
  41f221:	add    eax,ecx
  41f223:	movzx  ecx,WORD PTR [eax+0x14]
  41f227:	lea    ecx,[ecx+eax*1+0x18]
  41f22b:	mov    DWORD PTR [ebp+0x18],ecx
  41f22e:	mov    ecx,DWORD PTR [ebp-0x4]
  41f231:	movzx  edx,WORD PTR [eax+0x6]
  41f235:	xor    ecx,esi
  41f237:	add    ecx,edi
  41f239:	mov    DWORD PTR [ebp+0xc],eax
  41f23c:	cmp    edx,ecx
  41f23e:	je     0x41f2eb
  41f244:	mov    ecx,DWORD PTR [ebp-0x4]
  41f247:	xor    ecx,esi
  41f249:	add    ecx,edi
  41f24b:	mov    DWORD PTR [ebp-0x8],ecx
  41f24e:	mov    ecx,DWORD PTR [ebp-0x24]
  41f251:	movzx  edx,WORD PTR [eax+0x6]
  41f255:	xor    ecx,esi
  41f257:	sub    edx,ecx
  41f259:	sub    edx,edi
  41f25b:	cmp    DWORD PTR [ebp-0x8],edx
  41f25e:	ja     0x41f2eb
  41f264:	mov    edx,DWORD PTR [ebp+0x18]
  41f267:	add    edx,0x8
  41f26a:	mov    DWORD PTR [ebp+0x18],edx
  41f26d:	jmp    0x41f272
  41f26f:	mov    edx,DWORD PTR [ebp+0x18]
  41f272:	mov    eax,DWORD PTR [eax+0x38]
  41f275:	lea    ecx,[eax-0x1]
  41f278:	mov    DWORD PTR [ebp-0x38],eax
  41f27b:	mov    eax,DWORD PTR [edx]
  41f27d:	test   eax,ecx
  41f27f:	je     0x41f288
  41f281:	not    ecx
  41f283:	and    eax,ecx
  41f285:	add    eax,DWORD PTR [ebp-0x38]
  41f288:	mov    ecx,DWORD PTR [edx+0x4]
  41f28b:	add    ecx,DWORD PTR [ebp+0x20]
  41f28e:	push   ecx
  41f28f:	call   0x41fb69
  41f294:	mov    edx,DWORD PTR [ebp-0x4]
  41f297:	mov    eax,DWORD PTR [ebp+0x18]
  41f29a:	mov    ecx,DWORD PTR [eax+0x8]
  41f29d:	xor    edx,esi
  41f29f:	add    edx,edi
  41f2a1:	cmp    ecx,edx
  41f2a3:	je     0x41f2bc
  41f2a5:	push   ecx
  41f2a6:	mov    ecx,DWORD PTR [ebp+0x8]
  41f2a9:	add    ecx,DWORD PTR [eax+0xc]
  41f2ac:	mov    eax,DWORD PTR [eax+0x4]
  41f2af:	add    eax,DWORD PTR [ebp+0x20]
  41f2b2:	push   ecx
  41f2b3:	push   eax
  41f2b4:	call   0x41fa5f
  41f2b9:	mov    eax,DWORD PTR [ebp+0x18]
  41f2bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41f2bf:	mov    edx,DWORD PTR [ebp-0x8]
  41f2c2:	add    eax,0x28
  41f2c5:	xor    ecx,esi
  41f2c7:	lea    ecx,[edx+ecx*1+0x3272e4]
  41f2ce:	mov    edx,DWORD PTR [ebp+0xc]
  41f2d1:	mov    DWORD PTR [ebp+0x18],eax
  41f2d4:	mov    eax,DWORD PTR [ebp-0x24]
  41f2d7:	movzx  edx,WORD PTR [edx+0x6]
  41f2db:	xor    eax,esi
  41f2dd:	sub    edx,eax
  41f2df:	mov    eax,DWORD PTR [ebp+0xc]
  41f2e2:	sub    edx,edi
  41f2e4:	mov    DWORD PTR [ebp-0x8],ecx
  41f2e7:	cmp    ecx,edx
  41f2e9:	jbe    0x41f26f
  41f2eb:	mov    edx,DWORD PTR [ebx+0x18c]
  41f2f1:	mov    ecx,DWORD PTR [ebp+0x20]
  41f2f4:	cmp    ecx,DWORD PTR [edx]
  41f2f6:	jne    0x41f31f
  41f2f8:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f2fe:	lea    edx,[ebp-0x18]
  41f301:	push   edx
  41f302:	mov    edx,DWORD PTR [ebp-0x10]
  41f305:	xor    edx,esi
  41f307:	add    edx,edi
  41f309:	push   edx
  41f30a:	mov    edx,DWORD PTR [ebp-0x20]
  41f30d:	push   DWORD PTR [edx+0x54]
  41f310:	push   ecx
  41f311:	call   DWORD PTR [eax+0x1c]
  41f314:	test   eax,eax
  41f316:	je     0x41f5bd
  41f31c:	mov    eax,DWORD PTR [ebp+0xc]
  41f31f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41f325:	mov    ecx,DWORD PTR [ecx]
  41f327:	xor    ecx,esi
  41f329:	add    ecx,edi
  41f32b:	je     0x41f4e8
  41f331:	mov    eax,DWORD PTR [ebp-0x4]
  41f334:	xor    eax,esi
  41f336:	add    eax,edi
  41f338:	and    DWORD PTR [ebp+0x8],0x0
  41f33c:	mov    DWORD PTR [ebp-0x14],eax
  41f33f:	mov    eax,0xf89c851d
  41f344:	lea    ecx,[eax-0x8]
  41f347:	mov    DWORD PTR [ebp-0x58],0xf89c8517
  41f34e:	mov    DWORD PTR [ebp-0x54],0xf89c850d
  41f355:	mov    DWORD PTR [ebp-0x50],eax
  41f358:	mov    DWORD PTR [ebp-0x4c],ecx
  41f35b:	mov    DWORD PTR [ebp-0x48],ecx
  41f35e:	mov    DWORD PTR [ebp-0x44],0xf89c8581
  41f365:	mov    edx,DWORD PTR [ebp+0x8]
  41f368:	mov    ecx,0x89d
  41f36d:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  41f372:	mov    edx,0x72e4
  41f377:	add    cx,dx
  41f37a:	mov    edx,DWORD PTR [ebp+0x8]
  41f37d:	inc    DWORD PTR [ebp+0x8]
  41f380:	cmp    DWORD PTR [ebp+0x8],0x6
  41f384:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  41f38c:	jb     0x41f365
  41f38e:	mov    ecx,0xf89c8513
  41f393:	mov    DWORD PTR [ebp-0xb0],eax
  41f399:	mov    DWORD PTR [ebp-0x9c],eax
  41f39f:	mov    DWORD PTR [ebp-0x74],eax
  41f3a2:	mov    DWORD PTR [ebp-0x70],eax
  41f3a5:	lea    eax,[ecx-0x1]
  41f3a8:	mov    edx,0xf89c85ff
  41f3ad:	mov    DWORD PTR [ebp-0x64],eax
  41f3b0:	mov    DWORD PTR [ebp-0x60],eax
  41f3b3:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  41f3bd:	mov    DWORD PTR [ebp-0xac],ecx
  41f3c3:	mov    DWORD PTR [ebp-0xa8],edx
  41f3c9:	mov    DWORD PTR [ebp-0xa4],0xf89c8518
  41f3d3:	mov    DWORD PTR [ebp-0xa0],0xf89c8517
  41f3dd:	mov    DWORD PTR [ebp-0x98],0xf89c85fc
  41f3e7:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41f3f1:	mov    DWORD PTR [ebp-0x90],0xf89c850d
  41f3fb:	mov    DWORD PTR [ebp-0x8c],ecx
  41f401:	mov    DWORD PTR [ebp-0x88],0xf89c8508
  41f40b:	mov    DWORD PTR [ebp-0x84],edx
  41f411:	mov    DWORD PTR [ebp-0x80],0xf89c8516
  41f418:	mov    DWORD PTR [ebp-0x7c],ecx
  41f41b:	mov    DWORD PTR [ebp-0x78],0xf89c85c0
  41f422:	mov    DWORD PTR [ebp-0x6c],ecx
  41f425:	mov    DWORD PTR [ebp-0x68],0xf89c851c
  41f42c:	mov    DWORD PTR [ebp-0x5c],0xf89c8581
  41f433:	xor    eax,eax
  41f435:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  41f43c:	xor    cl,0x9d
  41f43f:	sub    cl,0x1c
  41f442:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  41f449:	inc    eax
  41f44a:	cmp    eax,0x17
  41f44d:	jb     0x41f435
  41f44f:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f455:	lea    ecx,[ebp-0xc0]
  41f45b:	push   ecx
  41f45c:	call   DWORD PTR [eax+0x4]
  41f45f:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41f465:	lea    edx,[ebp-0xd8]
  41f46b:	push   edx
  41f46c:	push   eax
  41f46d:	call   DWORD PTR [ecx+0x8]
  41f470:	mov    DWORD PTR [ebp-0x40],eax
  41f473:	lea    eax,[ebp-0x14]
  41f476:	push   eax
  41f477:	mov    eax,DWORD PTR [ebx+0x18c]
  41f47d:	push   DWORD PTR [eax]
  41f47f:	mov    eax,DWORD PTR [ebp-0x40]
  41f482:	call   eax
  41f484:	mov    eax,DWORD PTR [ebp-0x4]
  41f487:	xor    eax,esi
  41f489:	add    eax,edi
  41f48b:	mov    DWORD PTR [ebp-0x34],eax
  41f48e:	mov    ecx,DWORD PTR [ebp-0x4]
  41f491:	mov    eax,DWORD PTR [ebp-0x14]
  41f494:	xor    ecx,esi
  41f496:	add    ecx,edi
  41f498:	cmp    eax,ecx
  41f49a:	je     0x41f4e5
  41f49c:	mov    DWORD PTR [ebp-0x3c],eax
  41f49f:	jmp    0x41f4b0
  41f4a1:	mov    eax,DWORD PTR [eax]
  41f4a3:	mov    ecx,DWORD PTR [ebp-0x3c]
  41f4a6:	mov    DWORD PTR [ebp-0x14],eax
  41f4a9:	mov    eax,DWORD PTR [ebp-0x14]
  41f4ac:	cmp    eax,ecx
  41f4ae:	je     0x41f4bd
  41f4b0:	mov    edx,DWORD PTR [eax+0x18]
  41f4b3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f4b9:	cmp    edx,DWORD PTR [ecx]
  41f4bb:	jne    0x41f4a1
  41f4bd:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f4c3:	mov    edx,DWORD PTR [eax+0x18]
  41f4c6:	cmp    edx,DWORD PTR [ecx]
  41f4c8:	jne    0x41f4e5
  41f4ca:	mov    ecx,DWORD PTR [ebx+0x190]
  41f4d0:	mov    edx,DWORD PTR [ebp-0x20]
  41f4d3:	mov    edx,DWORD PTR [edx+0x28]
  41f4d6:	add    edx,DWORD PTR [ecx]
  41f4d8:	mov    DWORD PTR [eax+0x1c],edx
  41f4db:	mov    eax,DWORD PTR [ebp-0x24]
  41f4de:	xor    eax,esi
  41f4e0:	add    eax,edi
  41f4e2:	mov    DWORD PTR [ebp-0x34],eax
  41f4e5:	mov    eax,DWORD PTR [ebp+0xc]
  41f4e8:	push   ebx
  41f4e9:	push   eax
  41f4ea:	push   DWORD PTR [ebp+0x20]
  41f4ed:	call   0x41ec6b
  41f4f2:	test   eax,eax
  41f4f4:	je     0x41f5bd
  41f4fa:	push   DWORD PTR [ebp+0xc]
  41f4fd:	mov    ecx,ebx
  41f4ff:	push   DWORD PTR [ebp+0x20]
  41f502:	call   0x41ebc4
  41f507:	test   eax,eax
  41f509:	je     0x41f5bd
  41f50f:	mov    eax,DWORD PTR [ebp+0xc]
  41f512:	mov    edx,DWORD PTR [ebp+0x20]
  41f515:	mov    ecx,ebx
  41f517:	call   0x41ea9d
  41f51c:	test   eax,eax
  41f51e:	je     0x41f5bd
  41f524:	push   ebx
  41f525:	push   DWORD PTR [ebp+0x20]
  41f528:	call   0x41ef4e
  41f52d:	test   eax,eax
  41f52f:	je     0x41f5bd
  41f535:	mov    eax,DWORD PTR [ebx+0x18c]
  41f53b:	mov    edx,DWORD PTR [ebp+0x20]
  41f53e:	cmp    edx,DWORD PTR [eax]
  41f540:	jne    0x41f55c
  41f542:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f548:	lea    ecx,[ebp-0x18]
  41f54b:	push   ecx
  41f54c:	push   DWORD PTR [ebp-0x18]
  41f54f:	mov    ecx,DWORD PTR [ebp-0x20]
  41f552:	push   DWORD PTR [ecx+0x54]
  41f555:	push   edx
  41f556:	call   DWORD PTR [eax+0x1c]
  41f559:	mov    edx,DWORD PTR [ebp+0x20]
  41f55c:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f562:	mov    eax,DWORD PTR [eax]
  41f564:	xor    eax,esi
  41f566:	add    eax,edi
  41f568:	je     0x41f5a1
  41f56a:	mov    ecx,DWORD PTR [ebp+0xc]
  41f56d:	mov    eax,DWORD PTR [ecx+0x28]
  41f570:	mov    DWORD PTR [ebp+0x8],0xf89ca581
  41f577:	mov    esi,DWORD PTR [ebp+0x8]
  41f57a:	push   DWORD PTR [ebp+0x14]
  41f57d:	xor    esi,0x89d
  41f583:	push   DWORD PTR [ebp+0x10]
  41f586:	add    esi,0x72e4
  41f58c:	or     WORD PTR [ecx+0x16],si
  41f590:	add    eax,edx
  41f592:	push   edx
  41f593:	call   eax
  41f595:	mov    DWORD PTR [ebx+0x1d0],0xf89c8580
  41f59f:	jmp    0x41f5ab
  41f5a1:	mov    eax,DWORD PTR [ebp+0xc]
  41f5a4:	mov    eax,DWORD PTR [eax+0x28]
  41f5a7:	add    eax,edx
  41f5a9:	call   eax
  41f5ab:	mov    DWORD PTR [ebp-0x8],eax
  41f5ae:	mov    eax,DWORD PTR [ebp-0x8]
  41f5b1:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f5b4:	mov    DWORD PTR [ecx],eax
  41f5b6:	mov    DWORD PTR [ebp-0x30],0x1
  41f5bd:	cmp    DWORD PTR [ebp-0x30],0x0
  41f5c1:	jne    0x41f5c7
  41f5c3:	and    DWORD PTR [ebp+0x20],0x0
  41f5c7:	mov    eax,DWORD PTR [ebp+0x20]
  41f5ca:	jmp    0x41f5ce
  41f5cc:	xor    eax,eax
  41f5ce:	pop    edi
  41f5cf:	pop    esi
  41f5d0:	pop    ebx
  41f5d1:	leave  
  41f5d2:	ret    0x1c
  41f5d5:	push   ebp
  41f5d6:	mov    ebp,esp
  41f5d8:	movzx  edx,WORD PTR [ecx+0x6]
  41f5dc:	movzx  eax,WORD PTR [ecx+0x14]
  41f5e0:	push   ebx
  41f5e1:	push   edi
  41f5e2:	xor    edi,edi
  41f5e4:	lea    eax,[eax+ecx*1+0x18]
  41f5e8:	test   edx,edx
  41f5ea:	je     0x41f60b
  41f5ec:	mov    ecx,DWORD PTR [eax+0xc]
  41f5ef:	lea    ebx,[ecx+esi*1]
  41f5f2:	cmp    DWORD PTR [ebp+0x8],ebx
  41f5f5:	jb     0x41f603
  41f5f7:	mov    ebx,DWORD PTR [eax+0x8]
  41f5fa:	add    ebx,ecx
  41f5fc:	add    ebx,esi
  41f5fe:	cmp    DWORD PTR [ebp+0x8],ebx
  41f601:	jb     0x41f60d
  41f603:	add    eax,0x28
  41f606:	inc    edi
  41f607:	cmp    edi,edx
  41f609:	jb     0x41f5ec
  41f60b:	xor    eax,eax
  41f60d:	pop    edi
  41f60e:	pop    ebx
  41f60f:	pop    ebp
  41f610:	ret    0x4
  41f613:	push   ebp
  41f614:	mov    ebp,esp
  41f616:	sub    esp,0x34
  41f619:	mov    DWORD PTR [ebp-0xc],0xf89c8581
  41f620:	mov    DWORD PTR [ebp-0x18],0xf89c8580
  41f627:	mov    DWORD PTR [ebp-0x1c],0xf89c8583
  41f62e:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  41f635:	mov    DWORD PTR [ebp-0x20],0xf89c85c0
  41f63c:	mov    DWORD PTR [ebp-0x2c],0xf89c850b
  41f643:	mov    DWORD PTR [ebp-0x2c],0xf89c85eb
  41f64a:	mov    DWORD PTR [ebp-0x10],eax
  41f64d:	mov    eax,DWORD PTR [ebp+0x8]
  41f650:	mov    DWORD PTR [ebp-0x14],eax
  41f653:	mov    eax,DWORD PTR [ebp-0xc]
  41f656:	push   ebx
  41f657:	mov    ecx,0x751089d
  41f65c:	xor    eax,ecx
  41f65e:	push   esi
  41f65f:	mov    esi,DWORD PTR [ebp-0x10]
  41f662:	mov    edx,0x3272e4
  41f667:	add    eax,edx
  41f669:	push   edi
  41f66a:	cmp    esi,eax
  41f66c:	je     0x41f84b
  41f672:	mov    eax,DWORD PTR [ebp-0xc]
  41f675:	mov    esi,DWORD PTR [ebp-0x14]
  41f678:	xor    eax,ecx
  41f67a:	add    eax,edx
  41f67c:	cmp    esi,eax
  41f67e:	je     0x41f84b
  41f684:	mov    eax,DWORD PTR [ebp-0xc]
  41f687:	xor    eax,ecx
  41f689:	add    eax,edx
  41f68b:	mov    DWORD PTR [ebp-0x24],eax
  41f68e:	mov    eax,DWORD PTR [ebp-0xc]
  41f691:	xor    eax,ecx
  41f693:	add    eax,edx
  41f695:	mov    DWORD PTR [ebp-0x28],eax
  41f698:	mov    edi,DWORD PTR [ebp-0x20]
  41f69b:	mov    ebx,DWORD PTR [ebp-0x8]
  41f69e:	mov    esi,0x89d
  41f6a3:	xor    edi,esi
  41f6a5:	mov    eax,0x72e4
  41f6aa:	xor    ebx,esi
  41f6ac:	add    edi,eax
  41f6ae:	add    ebx,eax
  41f6b0:	sub    ebx,edi
  41f6b2:	mov    WORD PTR [ebp-0x8],bx
  41f6b6:	jmp    0x41f77b
  41f6bb:	mov    edi,DWORD PTR [ebp-0xc]
  41f6be:	mov    bx,WORD PTR [ebp-0x4]
  41f6c2:	xor    edi,esi
  41f6c4:	add    edi,eax
  41f6c6:	cmp    bx,di
  41f6c9:	je     0x41f7bd
  41f6cf:	mov    edi,DWORD PTR [ebp-0xc]
  41f6d2:	mov    ebx,DWORD PTR [ebp+0xc]
  41f6d5:	xor    edi,ecx
  41f6d7:	add    edi,edx
  41f6d9:	cmp    ebx,edi
  41f6db:	mov    di,WORD PTR [ebp-0x4]
  41f6df:	mov    bx,WORD PTR [ebp+0x8]
  41f6e3:	je     0x41f74e
  41f6e5:	cmp    bx,di
  41f6e8:	je     0x41f757
  41f6ea:	mov    edi,DWORD PTR [ebp-0x20]
  41f6ed:	mov    bx,WORD PTR [ebp+0x8]
  41f6f1:	xor    edi,esi
  41f6f3:	add    edi,eax
  41f6f5:	cmp    bx,di
  41f6f8:	jb     0x41f718
  41f6fa:	mov    edi,DWORD PTR [ebp-0x2c]
  41f6fd:	mov    bx,WORD PTR [ebp+0x8]
  41f701:	xor    edi,esi
  41f703:	add    edi,eax
  41f705:	cmp    bx,di
  41f708:	ja     0x41f718
  41f70a:	movzx  edi,WORD PTR [ebp+0x8]
  41f70e:	movzx  ebx,WORD PTR [ebp-0x8]
  41f712:	add    edi,ebx
  41f714:	mov    WORD PTR [ebp+0x8],di
  41f718:	mov    edi,DWORD PTR [ebp-0x20]
  41f71b:	mov    bx,WORD PTR [ebp-0x4]
  41f71f:	xor    edi,esi
  41f721:	add    edi,eax
  41f723:	cmp    bx,di
  41f726:	jb     0x41f746
  41f728:	mov    edi,DWORD PTR [ebp-0x2c]
  41f72b:	mov    bx,WORD PTR [ebp-0x4]
  41f72f:	xor    edi,esi
  41f731:	add    edi,eax
  41f733:	cmp    bx,di
  41f736:	ja     0x41f746
  41f738:	movzx  edi,WORD PTR [ebp-0x4]
  41f73c:	movzx  ebx,WORD PTR [ebp-0x8]
  41f740:	add    edi,ebx
  41f742:	mov    WORD PTR [ebp-0x4],di
  41f746:	mov    di,WORD PTR [ebp-0x4]
  41f74a:	mov    bx,WORD PTR [ebp+0x8]
  41f74e:	cmp    bx,di
  41f751:	jne    0x41f84b
  41f757:	mov    edi,DWORD PTR [ebp-0x1c]
  41f75a:	mov    ebx,DWORD PTR [ebp-0x10]
  41f75d:	xor    edi,ecx
  41f75f:	lea    edi,[edi+ebx*1+0x3272e4]
  41f766:	mov    DWORD PTR [ebp-0x10],edi
  41f769:	mov    edi,DWORD PTR [ebp-0x1c]
  41f76c:	mov    ebx,DWORD PTR [ebp-0x14]
  41f76f:	xor    edi,ecx
  41f771:	lea    edi,[edi+ebx*1+0x3272e4]
  41f778:	mov    DWORD PTR [ebp-0x14],edi
  41f77b:	mov    edi,DWORD PTR [ebp-0x24]
  41f77e:	mov    ebx,DWORD PTR [ebp-0x10]
  41f781:	mov    di,WORD PTR [ebx+edi*2]
  41f785:	mov    WORD PTR [ebp+0x8],di
  41f789:	mov    edi,DWORD PTR [ebp-0x28]
  41f78c:	mov    ebx,DWORD PTR [ebp-0x14]
  41f78f:	mov    di,WORD PTR [ebx+edi*2]
  41f793:	mov    WORD PTR [ebp-0x4],di
  41f797:	mov    edi,DWORD PTR [ebp-0xc]
  41f79a:	mov    bx,WORD PTR [ebp+0x8]
  41f79e:	xor    edi,esi
  41f7a0:	add    edi,eax
  41f7a2:	cmp    bx,di
  41f7a5:	jne    0x41f6bb
  41f7ab:	mov    eax,DWORD PTR [ebp-0x18]
  41f7ae:	mov    esi,DWORD PTR [ebp-0xc]
  41f7b1:	xor    eax,ecx
  41f7b3:	add    eax,edx
  41f7b5:	imul   eax,esi
  41f7b8:	mov    DWORD PTR [ebp-0xc],eax
  41f7bb:	jmp    0x41f7cf
  41f7bd:	mov    eax,DWORD PTR [ebp-0xc]
  41f7c0:	mov    esi,DWORD PTR [ebp-0x18]
  41f7c3:	xor    eax,ecx
  41f7c5:	lea    eax,[eax+esi*1+0x3272e4]
  41f7cc:	mov    DWORD PTR [ebp-0x18],eax
  41f7cf:	mov    eax,DWORD PTR [ebp-0x24]
  41f7d2:	sub    eax,edx
  41f7d4:	xor    eax,ecx
  41f7d6:	mov    DWORD PTR [ebp-0x30],eax
  41f7d9:	mov    eax,DWORD PTR [ebp-0x28]
  41f7dc:	sub    eax,edx
  41f7de:	xor    eax,ecx
  41f7e0:	mov    DWORD PTR [ebp-0x34],eax
  41f7e3:	mov    eax,DWORD PTR [ebp-0x34]
  41f7e6:	mov    esi,DWORD PTR [ebp-0x1c]
  41f7e9:	xor    esi,ecx
  41f7eb:	add    esi,edx
  41f7ed:	xor    eax,ecx
  41f7ef:	add    eax,0x3272e4
  41f7f4:	imul   esi,eax
  41f7f7:	mov    eax,DWORD PTR [ebp-0x14]
  41f7fa:	movzx  eax,WORD PTR [esi+eax*1]
  41f7fe:	mov    esi,DWORD PTR [ebp-0x30]
  41f801:	mov    edi,DWORD PTR [ebp-0x1c]
  41f804:	xor    esi,ecx
  41f806:	add    esi,edx
  41f808:	xor    edi,ecx
  41f80a:	add    edi,edx
  41f80c:	imul   edi,esi
  41f80f:	mov    esi,DWORD PTR [ebp-0x10]
  41f812:	movzx  esi,WORD PTR [edi+esi*1]
  41f816:	sub    eax,edx
  41f818:	sub    esi,edx
  41f81a:	xor    eax,ecx
  41f81c:	xor    esi,ecx
  41f81e:	cmp    esi,eax
  41f820:	jne    0x41f84b
  41f822:	mov    eax,DWORD PTR [ebp-0x30]
  41f825:	mov    esi,DWORD PTR [ebp-0x1c]
  41f828:	xor    eax,ecx
  41f82a:	add    eax,0x3272e4
  41f82f:	xor    esi,ecx
  41f831:	add    esi,edx
  41f833:	imul   esi,eax
  41f836:	mov    eax,DWORD PTR [ebp-0x10]
  41f839:	movzx  eax,WORD PTR [esi+eax*1]
  41f83d:	mov    esi,DWORD PTR [ebp-0xc]
  41f840:	sub    eax,edx
  41f842:	xor    eax,ecx
  41f844:	cmp    eax,esi
  41f846:	mov    eax,DWORD PTR [ebp-0xc]
  41f849:	je     0x41f84e
  41f84b:	mov    eax,DWORD PTR [ebp-0x18]
  41f84e:	pop    edi
  41f84f:	xor    eax,ecx
  41f851:	pop    esi
  41f852:	add    eax,edx
  41f854:	pop    ebx
  41f855:	leave  
  41f856:	ret    0x8
  41f859:	push   ebp
  41f85a:	mov    ebp,esp
  41f85c:	push   ecx
  41f85d:	mov    cx,WORD PTR [eax]
  41f860:	push   esi
  41f861:	mov    esi,0x3b52
  41f866:	sub    cx,si
  41f869:	mov    esi,0x8a8e
  41f86e:	xor    cx,si
  41f871:	mov    esi,0x4e20
  41f876:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f87d:	mov    edx,0xf89c8581
  41f882:	cmp    cx,si
  41f885:	je     0x41f8e4
  41f887:	push   ebx
  41f888:	push   edi
  41f889:	movzx  ecx,cx
  41f88c:	mov    edi,0xffcd8d1c
  41f891:	mov    esi,0x751089d
  41f896:	mov    ebx,0x4f84
  41f89b:	cmp    cx,bx
  41f89e:	jne    0x41f8a3
  41f8a0:	mov    DWORD PTR [ebp-0x4],edx
  41f8a3:	lea    edx,[edi+0x1]
  41f8a6:	xor    edx,esi
  41f8a8:	mov    edi,edx
  41f8aa:	xor    edi,esi
  41f8ac:	mov    cx,WORD PTR [eax+edi*2+0x64e5c8]
  41f8b4:	mov    ebx,0x3b52
  41f8b9:	sub    cx,bx
  41f8bc:	mov    ebx,0x8a8e
  41f8c1:	xor    cx,bx
  41f8c4:	mov    ebx,0x4e20
  41f8c9:	cmp    cx,bx
  41f8cc:	jne    0x41f896
  41f8ce:	mov    ecx,DWORD PTR [ebp-0x4]
  41f8d1:	pop    edi
  41f8d2:	pop    ebx
  41f8d3:	cmp    ecx,0xf89c8586
  41f8d9:	je     0x41f8e4
  41f8db:	xor    ecx,esi
  41f8dd:	lea    eax,[eax+ecx*2+0x64e5ca]
  41f8e4:	pop    esi
  41f8e5:	leave  
  41f8e6:	ret    
  41f8e7:	push   ebp
  41f8e8:	mov    ebp,esp
  41f8ea:	push   ecx
  41f8eb:	push   esi
  41f8ec:	push   edi
  41f8ed:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f8f4:	mov    esi,0xf89c8581
  41f8f9:	call   0x41f859
  41f8fe:	mov    edi,eax
  41f900:	mov    al,BYTE PTR [edi]
  41f902:	add    al,0x7
  41f904:	xor    al,0x75
  41f906:	cmp    al,0x72
  41f908:	je     0x41f96b
  41f90a:	mov    eax,edi
  41f90c:	mov    edx,0xffcd8d1c
  41f911:	mov    ecx,0x751089d
  41f916:	push   ebx
  41f917:	mov    ax,WORD PTR [eax]
  41f91a:	mov    ebx,0x3b52
  41f91f:	sub    ax,bx
  41f922:	mov    ebx,0x8a8e
  41f927:	xor    ax,bx
  41f92a:	mov    ebx,0x4e52
  41f92f:	cmp    ax,bx
  41f932:	jne    0x41f937
  41f934:	mov    DWORD PTR [ebp-0x4],esi
  41f937:	lea    esi,[edx+0x1]
  41f93a:	xor    esi,ecx
  41f93c:	mov    edx,esi
  41f93e:	xor    edx,ecx
  41f940:	lea    eax,[edi+edx*2+0x64e5c8]
  41f947:	mov    bl,BYTE PTR [eax]
  41f949:	add    bl,0x7
  41f94c:	xor    bl,0x75
  41f94f:	cmp    bl,0x72
  41f952:	jne    0x41f917
  41f954:	mov    eax,DWORD PTR [ebp-0x4]
  41f957:	pop    ebx
  41f958:	cmp    eax,0xf89c8586
  41f95d:	je     0x41f96b
  41f95f:	xor    eax,ecx
  41f961:	xor    ecx,ecx
  41f963:	mov    WORD PTR [edi+eax*2+0x64e5c8],cx
  41f96b:	mov    eax,edi
  41f96d:	pop    edi
  41f96e:	pop    esi
  41f96f:	leave  
  41f970:	ret    
  41f971:	push   ebp
  41f972:	mov    ebp,esp
  41f974:	push   ecx
  41f975:	push   esi
  41f976:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f97d:	mov    esi,0xf89c8581
  41f982:	call   0x41f859
  41f987:	mov    cx,WORD PTR [eax]
  41f98a:	mov    edx,0x3b52
  41f98f:	sub    cx,dx
  41f992:	mov    edx,0x8a8e
  41f997:	xor    cx,dx
  41f99a:	mov    edx,0x4e20
  41f99f:	cmp    cx,dx
  41f9a2:	je     0x41f9fb
  41f9a4:	push   ebx
  41f9a5:	push   edi
  41f9a6:	movzx  ecx,cx
  41f9a9:	mov    edx,0xffcd8d1c
  41f9ae:	mov    edi,0x751089d
  41f9b3:	mov    ebx,0x4e52
  41f9b8:	cmp    cx,bx
  41f9bb:	jne    0x41f9c0
  41f9bd:	mov    DWORD PTR [ebp-0x4],esi
  41f9c0:	lea    esi,[edx+0x1]
  41f9c3:	xor    esi,edi
  41f9c5:	mov    edx,esi
  41f9c7:	xor    edx,edi
  41f9c9:	mov    cx,WORD PTR [eax+edx*2+0x64e5c8]
  41f9d1:	mov    ebx,0x3b52
  41f9d6:	sub    cx,bx
  41f9d9:	mov    ebx,0x8a8e
  41f9de:	xor    cx,bx
  41f9e1:	mov    ebx,0x4e20
  41f9e6:	cmp    cx,bx
  41f9e9:	jne    0x41f9b3
  41f9eb:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f9f2:	pop    edi
  41f9f3:	pop    ebx
  41f9f4:	je     0x41f9fb
  41f9f6:	xor    eax,eax
  41f9f8:	inc    eax
  41f9f9:	jmp    0x41f9fd
  41f9fb:	xor    eax,eax
  41f9fd:	pop    esi
  41f9fe:	leave  
  41f9ff:	ret    
  41fa00:	push   ebp
  41fa01:	mov    ebp,esp
  41fa03:	push   ecx
  41fa04:	mov    eax,DWORD PTR [ebp+0x8]
  41fa07:	movzx  ecx,WORD PTR [eax]
  41fa0a:	push   esi
  41fa0b:	lea    eax,[ecx-0x3b52]
  41fa11:	mov    esi,0x8a8e
  41fa16:	push   edi
  41fa17:	xor    eax,esi
  41fa19:	mov    edi,0x4e20
  41fa1e:	mov    DWORD PTR [ebp-0x4],edx
  41fa21:	cmp    ax,di
  41fa24:	je     0x41fa51
  41fa26:	mov    eax,DWORD PTR [ebp+0x8]
  41fa29:	sub    eax,edx
  41fa2b:	mov    DWORD PTR [ebp+0x8],eax
  41fa2e:	jmp    0x41fa33
  41fa30:	mov    eax,DWORD PTR [ebp+0x8]
  41fa33:	mov    WORD PTR [edx],cx
  41fa36:	add    edx,0x2
  41fa39:	movzx  edi,WORD PTR [eax+edx*1]
  41fa3d:	mov    ecx,edi
  41fa3f:	add    edi,0xffffc4ae
  41fa45:	xor    edi,esi
  41fa47:	mov    eax,0x4e20
  41fa4c:	cmp    di,ax
  41fa4f:	jne    0x41fa30
  41fa51:	xor    eax,eax
  41fa53:	pop    edi
  41fa54:	mov    WORD PTR [edx],ax
  41fa57:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5a:	pop    esi
  41fa5b:	leave  
  41fa5c:	ret    0x4
  41fa5f:	push   ebp
  41fa60:	mov    ebp,esp
  41fa62:	sub    esp,0x18
  41fa65:	mov    DWORD PTR [ebp-0x8],0xf89c8581
  41fa6c:	mov    DWORD PTR [ebp-0x18],0xf89c8580
  41fa73:	mov    ecx,DWORD PTR [ebp-0x8]
  41fa76:	push   esi
  41fa77:	mov    eax,0x751089d
  41fa7c:	xor    ecx,eax
  41fa7e:	mov    esi,0x3272e4
  41fa83:	add    ecx,esi
  41fa85:	mov    DWORD PTR [ebp-0x4],ecx
  41fa88:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41fa8f:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41fa96:	push   edi
  41fa97:	mov    DWORD PTR [ebp-0x14],0xf89c8583
  41fa9e:	jmp    0x41fb3f
  41faa3:	mov    ecx,DWORD PTR [ebp-0x4]
  41faa6:	mov    edx,DWORD PTR [ebp+0x10]
  41faa9:	sub    edx,ecx
  41faab:	mov    ecx,DWORD PTR [ebp-0xc]
  41faae:	xor    ecx,eax
  41fab0:	add    ecx,esi
  41fab2:	cmp    edx,ecx
  41fab4:	jbe    0x41fad1
  41fab6:	mov    edx,DWORD PTR [ebp-0x4]
  41fab9:	add    edx,DWORD PTR [ebp+0x8]
  41fabc:	mov    ecx,DWORD PTR [ebp-0x4]
  41fabf:	add    ecx,DWORD PTR [ebp+0xc]
  41fac2:	mov    edi,DWORD PTR [ecx]
  41fac4:	mov    DWORD PTR [edx],edi
  41fac6:	mov    ecx,DWORD PTR [ecx+0x4]
  41fac9:	mov    DWORD PTR [edx+0x4],ecx
  41facc:	mov    ecx,DWORD PTR [ebp-0xc]
  41facf:	jmp    0x41fb1e
  41fad1:	mov    ecx,DWORD PTR [ebp-0x4]
  41fad4:	mov    edx,DWORD PTR [ebp+0x10]
  41fad7:	sub    edx,ecx
  41fad9:	mov    ecx,DWORD PTR [ebp-0x10]
  41fadc:	xor    ecx,eax
  41fade:	add    ecx,esi
  41fae0:	cmp    edx,ecx
  41fae2:	mov    ecx,DWORD PTR [ebp-0x4]
  41fae5:	jbe    0x41faf9
  41fae7:	add    ecx,DWORD PTR [ebp+0x8]
  41faea:	mov    edx,DWORD PTR [ebp-0x4]
  41faed:	add    edx,DWORD PTR [ebp+0xc]
  41faf0:	mov    edx,DWORD PTR [edx]
  41faf2:	mov    DWORD PTR [ecx],edx
  41faf4:	mov    ecx,DWORD PTR [ebp-0x10]
  41faf7:	jmp    0x41fb1e
  41faf9:	mov    edx,DWORD PTR [ebp+0x10]
  41fafc:	sub    edx,ecx
  41fafe:	mov    ecx,DWORD PTR [ebp-0x14]
  41fb01:	xor    ecx,eax
  41fb03:	add    ecx,esi
  41fb05:	cmp    edx,ecx
  41fb07:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb0a:	jbe    0x41fb2f
  41fb0c:	add    ecx,DWORD PTR [ebp+0x8]
  41fb0f:	mov    edx,DWORD PTR [ebp-0x4]
  41fb12:	add    edx,DWORD PTR [ebp+0xc]
  41fb15:	mov    dx,WORD PTR [edx]
  41fb18:	mov    WORD PTR [ecx],dx
  41fb1b:	mov    ecx,DWORD PTR [ebp-0x14]
  41fb1e:	mov    edx,DWORD PTR [ebp-0x4]
  41fb21:	xor    ecx,eax
  41fb23:	lea    ecx,[ecx+edx*1+0x3272e4]
  41fb2a:	mov    DWORD PTR [ebp-0x4],ecx
  41fb2d:	jmp    0x41fb3f
  41fb2f:	add    ecx,DWORD PTR [ebp+0x8]
  41fb32:	mov    edx,DWORD PTR [ebp-0x4]
  41fb35:	add    edx,DWORD PTR [ebp+0xc]
  41fb38:	mov    dl,BYTE PTR [edx]
  41fb3a:	mov    BYTE PTR [ecx],dl
  41fb3c:	inc    DWORD PTR [ebp-0x4]
  41fb3f:	mov    ecx,DWORD PTR [ebp-0x18]
  41fb42:	mov    edx,DWORD PTR [ebp+0x10]
  41fb45:	xor    ecx,eax
  41fb47:	add    ecx,esi
  41fb49:	imul   ecx,edx
  41fb4c:	mov    edx,DWORD PTR [ebp-0x8]
  41fb4f:	mov    edi,DWORD PTR [ebp-0x4]
  41fb52:	xor    edx,eax
  41fb54:	lea    edx,[edx+edi*1+0x3272e4]
  41fb5b:	cmp    edx,ecx
  41fb5d:	jb     0x41faa3
  41fb63:	pop    edi
  41fb64:	pop    esi
  41fb65:	leave  
  41fb66:	ret    0xc
  41fb69:	push   ebp
  41fb6a:	mov    ebp,esp
  41fb6c:	sub    esp,0xc
  41fb6f:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  41fb76:	push   esi
  41fb77:	mov    esi,eax
  41fb79:	mov    DWORD PTR [ebp-0x8],0xf89c8580
  41fb80:	mov    edx,DWORD PTR [ebp-0x4]
  41fb83:	mov    eax,0x751089d
  41fb88:	xor    edx,eax
  41fb8a:	mov    ecx,0x3272e4
  41fb8f:	add    edx,ecx
  41fb91:	cmp    esi,edx
  41fb93:	je     0x41fbd5
  41fb95:	push   ebx
  41fb96:	push   edi
  41fb97:	mov    edx,DWORD PTR [ebp-0x8]
  41fb9a:	mov    ebx,DWORD PTR [ebp+0x8]
  41fb9d:	xor    edx,eax
  41fb9f:	mov    edi,0xffcd8d1c
  41fba4:	sub    edi,edx
  41fba6:	add    esi,edi
  41fba8:	lea    edx,[esi-0x3272e4]
  41fbae:	xor    edx,eax
  41fbb0:	mov    DWORD PTR [ebp-0xc],edx
  41fbb3:	mov    edx,DWORD PTR [ebp-0x4]
  41fbb6:	mov    edi,DWORD PTR [ebp-0xc]
  41fbb9:	xor    dl,0x9d
  41fbbc:	sub    dl,0x1c
  41fbbf:	xor    edi,eax
  41fbc1:	mov    BYTE PTR [edi+ebx*1+0x3272e4],dl
  41fbc8:	mov    edx,DWORD PTR [ebp-0x4]
  41fbcb:	xor    edx,eax
  41fbcd:	add    edx,ecx
  41fbcf:	cmp    esi,edx
  41fbd1:	jne    0x41fb97
  41fbd3:	pop    edi
  41fbd4:	pop    ebx
  41fbd5:	pop    esi
  41fbd6:	leave  
  41fbd7:	ret    0x4
  41fbda:	push   ebp
  41fbdb:	mov    ebp,esp
  41fbdd:	sub    esp,0x21c
  41fbe3:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  41fbea:	mov    DWORD PTR [ebp-0x14],0xf89c8580
  41fbf1:	mov    eax,DWORD PTR [ebp+0x10]
  41fbf4:	mov    eax,DWORD PTR [ebp-0x4]
  41fbf7:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbfa:	push   esi
  41fbfb:	push   edi
  41fbfc:	mov    edi,0x751089d
  41fc01:	xor    eax,edi
  41fc03:	mov    esi,0x3272e4
  41fc08:	add    eax,esi
  41fc0a:	cmp    eax,ecx
  41fc0c:	mov    eax,DWORD PTR [ebp-0x4]
  41fc0f:	jne    0x41fc1a
  41fc11:	xor    eax,edi
  41fc13:	add    eax,esi
  41fc15:	jmp    0x41fcc6
  41fc1a:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc1d:	xor    eax,edi
  41fc1f:	add    eax,esi
  41fc21:	cmp    eax,ecx
  41fc23:	jne    0x41fc2a
  41fc25:	mov    eax,DWORD PTR [ebp-0x4]
  41fc28:	jmp    0x41fc11
  41fc2a:	lea    eax,[ebp-0x21c]
  41fc30:	mov    DWORD PTR [ebp-0x8],eax
  41fc33:	mov    eax,DWORD PTR [ebp+0xc]
  41fc36:	mov    DWORD PTR [ebp-0x10],eax
  41fc39:	mov    eax,DWORD PTR [ebp-0x4]
  41fc3c:	xor    eax,edi
  41fc3e:	add    eax,esi
  41fc40:	mov    DWORD PTR [ebp+0x10],eax
  41fc43:	mov    eax,DWORD PTR [ebp+0xc]
  41fc46:	push   ebx
  41fc47:	call   0x41f971
  41fc4c:	mov    ebx,eax
  41fc4e:	mov    eax,DWORD PTR [ebp+0x8]
  41fc51:	mov    eax,DWORD PTR [eax+0x14]
  41fc54:	jmp    0x41fcae
  41fc56:	mov    eax,DWORD PTR [ebp+0xc]
  41fc59:	sub    eax,0x8
  41fc5c:	mov    DWORD PTR [ebp-0xc],eax
  41fc5f:	mov    eax,DWORD PTR [ebp-0xc]
  41fc62:	mov    eax,DWORD PTR [eax+0x28]
  41fc65:	call   0x41f859
  41fc6a:	mov    DWORD PTR [ebp+0x10],eax
  41fc6d:	push   DWORD PTR [ebp+0x10]
  41fc70:	mov    edx,DWORD PTR [ebp-0x8]
  41fc73:	call   0x41fa00
  41fc78:	mov    eax,DWORD PTR [ebp-0x4]
  41fc7b:	xor    eax,edi
  41fc7d:	add    eax,esi
  41fc7f:	cmp    eax,ebx
  41fc81:	jne    0x41fc8b
  41fc83:	mov    eax,DWORD PTR [ebp-0x8]
  41fc86:	call   0x41f8e7
  41fc8b:	mov    eax,DWORD PTR [ebp-0x14]
  41fc8e:	xor    eax,edi
  41fc90:	add    eax,esi
  41fc92:	push   eax
  41fc93:	push   DWORD PTR [ebp-0x10]
  41fc96:	mov    eax,DWORD PTR [ebp-0x8]
  41fc99:	call   0x41f613
  41fc9e:	mov    ecx,DWORD PTR [ebp-0x4]
  41fca1:	xor    ecx,edi
  41fca3:	add    ecx,esi
  41fca5:	cmp    eax,ecx
  41fca7:	je     0x41fccc
  41fca9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcac:	mov    eax,DWORD PTR [eax]
  41fcae:	mov    DWORD PTR [ebp+0xc],eax
  41fcb1:	mov    eax,DWORD PTR [ebp+0x8]
  41fcb4:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcb7:	add    eax,0x14
  41fcba:	cmp    ecx,eax
  41fcbc:	jne    0x41fc56
  41fcbe:	mov    eax,DWORD PTR [ebp-0x4]
  41fcc1:	xor    eax,edi
  41fcc3:	add    eax,esi
  41fcc5:	pop    ebx
  41fcc6:	pop    edi
  41fcc7:	pop    esi
  41fcc8:	leave  
  41fcc9:	ret    0xc
  41fccc:	mov    eax,DWORD PTR [ebp-0xc]
  41fccf:	mov    eax,DWORD PTR [eax+0x18]
  41fcd2:	jmp    0x41fcc5
  41fcd4:	push   ebp
  41fcd5:	mov    ebp,esp
  41fcd7:	mov    eax,DWORD PTR [ebp+0xc]
  41fcda:	sub    esp,0x10
  41fcdd:	cmp    DWORD PTR [ebp+0x8],0x0
  41fce1:	push   ebx
  41fce2:	push   esi
  41fce3:	push   edi
  41fce4:	je     0x41fd99
  41fcea:	test   eax,eax
  41fcec:	je     0x41fd99
  41fcf2:	movzx  eax,WORD PTR [eax+0x20]
  41fcf6:	mov    ecx,eax
  41fcf8:	mov    DWORD PTR [ebp-0x10],eax
  41fcfb:	xor    edx,edx
  41fcfd:	and    DWORD PTR [ebp-0x8],edx
  41fd00:	mov    eax,0x8a8e
  41fd05:	xor    ecx,eax
  41fd07:	add    ecx,0x3b52
  41fd0d:	mov    DWORD PTR [ebp-0xc],ecx
  41fd10:	and    DWORD PTR [ebp-0x4],0x0
  41fd14:	xor    ecx,ecx
  41fd16:	push   0x7c
  41fd18:	pop    edi
  41fd19:	cmp    cx,WORD PTR [ebp-0xc]
  41fd1d:	jae    0x41fd83
  41fd1f:	lea    esi,[edx-0x3b52]
  41fd25:	xor    esi,eax
  41fd27:	movzx  ecx,WORD PTR [ebp-0x4]
  41fd2b:	mov    ebx,DWORD PTR [ebp+0xc]
  41fd2e:	lea    ecx,[ebx+ecx*4]
  41fd31:	cmp    WORD PTR [ecx+0x2],si
  41fd35:	jne    0x41fd6e
  41fd37:	movzx  ecx,WORD PTR [ecx]
  41fd3a:	mov    edi,0x4e20
  41fd3f:	cmp    cx,di
  41fd42:	jne    0x41fd50
  41fd44:	mov    ebx,DWORD PTR [ebp+0x8]
  41fd47:	movzx  edi,dx
  41fd4a:	cmp    BYTE PTR [edi+ebx*1],0x0
  41fd4e:	je     0x41fd7d
  41fd50:	mov    ebx,DWORD PTR [ebp+0x8]
  41fd53:	movzx  edi,dx
  41fd56:	movsx  di,BYTE PTR [edi+ebx*1]
  41fd5b:	mov    ebx,0x3b52
  41fd60:	sub    di,bx
  41fd63:	xor    di,ax
  41fd66:	cmp    cx,di
  41fd69:	je     0x41fd7d
  41fd6b:	push   0x72
  41fd6d:	pop    edi
  41fd6e:	inc    DWORD PTR [ebp-0x4]
  41fd71:	mov    cx,WORD PTR [ebp-0xc]
  41fd75:	cmp    WORD PTR [ebp-0x4],cx
  41fd79:	jb     0x41fd27
  41fd7b:	jmp    0x41fd83
  41fd7d:	inc    DWORD PTR [ebp-0x8]
  41fd80:	push   0x7d
  41fd82:	pop    edi
  41fd83:	mov    esi,DWORD PTR [ebp+0x8]
  41fd86:	movzx  ecx,dx
  41fd89:	cmp    BYTE PTR [ecx+esi*1],0x0
  41fd8d:	je     0x41fda2
  41fd8f:	inc    edx
  41fd90:	cmp    edi,0x72
  41fd93:	jne    0x41fd10
  41fd99:	xor    eax,eax
  41fd9b:	pop    edi
  41fd9c:	pop    esi
  41fd9d:	pop    ebx
  41fd9e:	leave  
  41fd9f:	ret    0x8
  41fda2:	mov    ecx,DWORD PTR [ebp-0x8]
  41fda5:	add    ecx,0xffffc4ae
  41fdab:	xor    cx,ax
  41fdae:	xor    eax,eax
  41fdb0:	cmp    cx,WORD PTR [ebp-0x10]
  41fdb4:	sete   al
  41fdb7:	jmp    0x41fd9b
  41fdb9:	push   ebp
  41fdba:	mov    ebp,esp
  41fdbc:	sub    esp,0x50
  41fdbf:	push   edi
  41fdc0:	mov    edi,eax
  41fdc2:	mov    eax,DWORD PTR [edi+0x1a8]
  41fdc8:	cmp    DWORD PTR [eax],0x0
  41fdcb:	jne    0x41fdd4
  41fdcd:	xor    eax,eax
  41fdcf:	jmp    0x41ff05
  41fdd4:	push   DWORD PTR [ebp+0x8]
  41fdd7:	push   0x2c
  41fdd9:	pop    eax
  41fdda:	call   0x41fb69
  41fddf:	mov    edx,DWORD PTR [edi+0x1ac]
  41fde5:	lea    eax,[edi+0x22]
  41fde8:	mov    DWORD PTR [ebp-0x4c],eax
  41fdeb:	lea    eax,[edi+0x44]
  41fdee:	mov    DWORD PTR [ebp-0x48],eax
  41fdf1:	lea    eax,[edi+0x66]
  41fdf4:	mov    DWORD PTR [ebp-0x44],eax
  41fdf7:	lea    eax,[edi+0x88]
  41fdfd:	mov    DWORD PTR [ebp-0x40],eax
  41fe00:	lea    eax,[edi+0xaa]
  41fe06:	mov    DWORD PTR [ebp-0x3c],eax
  41fe09:	lea    eax,[edi+0xcc]
  41fe0f:	mov    DWORD PTR [ebp-0x38],eax
  41fe12:	lea    eax,[edi+0xee]
  41fe18:	mov    DWORD PTR [ebp-0x34],eax
  41fe1b:	lea    eax,[edi+0x110]
  41fe21:	mov    DWORD PTR [ebp-0x30],eax
  41fe24:	lea    eax,[edi+0x132]
  41fe2a:	mov    DWORD PTR [ebp-0x2c],eax
  41fe2d:	lea    eax,[edi+0x154]
  41fe33:	push   edi
  41fe34:	mov    DWORD PTR [ebp-0x50],edi
  41fe37:	mov    DWORD PTR [ebp-0x28],eax
  41fe3a:	call   0x41ff39
  41fe3f:	push   eax
  41fe40:	mov    eax,DWORD PTR [edi+0x1a8]
  41fe46:	push   DWORD PTR [eax]
  41fe48:	call   0x41fbda
  41fe4d:	mov    DWORD PTR [ebp-0x10],eax
  41fe50:	test   eax,eax
  41fe52:	je     0x41ff05
  41fe58:	mov    ecx,DWORD PTR [eax+0x3c]
  41fe5b:	push   ebx
  41fe5c:	push   esi
  41fe5d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fe61:	add    esi,eax
  41fe63:	mov    edi,DWORD PTR [esi+0x24]
  41fe66:	mov    ecx,DWORD PTR [esi+0x1c]
  41fe69:	mov    edx,DWORD PTR [esi+0x20]
  41fe6c:	mov    ebx,DWORD PTR [esi+0x18]
  41fe6f:	add    edi,eax
  41fe71:	mov    DWORD PTR [ebp-0x20],edi
  41fe74:	mov    edi,DWORD PTR [esi+0x14]
  41fe77:	add    ecx,eax
  41fe79:	add    edx,eax
  41fe7b:	mov    DWORD PTR [ebp-0xc],ecx
  41fe7e:	mov    DWORD PTR [ebp-0x1c],edx
  41fe81:	mov    DWORD PTR [ebp-0x8],edi
  41fe84:	cmp    edi,ebx
  41fe86:	ja     0x41fe8b
  41fe88:	mov    DWORD PTR [ebp-0x8],ebx
  41fe8b:	xor    ebx,ebx
  41fe8d:	mov    DWORD PTR [ebp-0x18],ebx
  41fe90:	cmp    DWORD PTR [ebp-0x8],ebx
  41fe93:	jbe    0x41ff03
  41fe95:	jmp    0x41fe9a
  41fe97:	mov    edx,DWORD PTR [ebp-0x1c]
  41fe9a:	mov    edi,DWORD PTR [ebp-0x20]
  41fe9d:	movzx  edi,WORD PTR [edi+ebx*2]
  41fea1:	cmp    ebx,DWORD PTR [esi+0x18]
  41fea4:	jae    0x41ff03
  41fea6:	cmp    edi,DWORD PTR [esi+0x14]
  41fea9:	jae    0x41ff03
  41feab:	mov    ebx,DWORD PTR [edx+ebx*4]
  41feae:	mov    edx,DWORD PTR [ebp+0x8]
  41feb1:	mov    edi,DWORD PTR [ecx+edi*4]
  41feb4:	mov    DWORD PTR [ebp-0x4],edx
  41feb7:	lea    edx,[ebp-0x50]
  41feba:	add    ebx,eax
  41febc:	add    edi,eax
  41febe:	sub    edx,DWORD PTR [ebp+0x8]
  41fec1:	mov    DWORD PTR [ebp-0x14],0xb
  41fec8:	mov    DWORD PTR [ebp-0x24],edx
  41fecb:	mov    edx,DWORD PTR [ebp-0x4]
  41fece:	cmp    DWORD PTR [edx],0x0
  41fed1:	jne    0x41feee
  41fed3:	mov    eax,DWORD PTR [ebp-0x24]
  41fed6:	push   DWORD PTR [eax+edx*1]
  41fed9:	push   ebx
  41feda:	call   0x41fcd4
  41fedf:	mov    ecx,DWORD PTR [ebp-0xc]
  41fee2:	test   eax,eax
  41fee4:	je     0x41feeb
  41fee6:	mov    eax,DWORD PTR [ebp-0x4]
  41fee9:	mov    DWORD PTR [eax],edi
  41feeb:	mov    eax,DWORD PTR [ebp-0x10]
  41feee:	add    DWORD PTR [ebp-0x4],0x4
  41fef2:	dec    DWORD PTR [ebp-0x14]
  41fef5:	jne    0x41fecb
  41fef7:	mov    ebx,DWORD PTR [ebp-0x18]
  41fefa:	inc    ebx
  41fefb:	mov    DWORD PTR [ebp-0x18],ebx
  41fefe:	cmp    ebx,DWORD PTR [ebp-0x8]
  41ff01:	jb     0x41fe97
  41ff03:	pop    esi
  41ff04:	pop    ebx
  41ff05:	pop    edi
  41ff06:	leave  
  41ff07:	ret    0x4
  41ff0a:	push   ebp
  41ff0b:	mov    ebp,esp
  41ff0d:	mov    eax,DWORD PTR [ebp+0x8]
  41ff10:	push   esi
  41ff11:	push   DWORD PTR [eax+0x1d8]
  41ff17:	lea    esi,[eax+0x198]
  41ff1d:	mov    eax,DWORD PTR [ebp+0x8]
  41ff20:	call   0x41fdb9
  41ff25:	mov    ecx,DWORD PTR [esi]
  41ff27:	mov    DWORD PTR [ecx],eax
  41ff29:	mov    eax,DWORD PTR [esi]
  41ff2b:	xor    ecx,ecx
  41ff2d:	cmp    DWORD PTR [eax],ecx
  41ff2f:	pop    esi
  41ff30:	setne  cl
  41ff33:	mov    eax,ecx
  41ff35:	pop    ebp
  41ff36:	ret    0x4
  41ff39:	mov    ecx,DWORD PTR [edi+0x188]
  41ff3f:	push   ebx
  41ff40:	jmp    0x41ff55
  41ff42:	xor    eax,0x8a8e
  41ff47:	add    eax,0x3b52
  41ff4c:	mov    WORD PTR [ecx],ax
  41ff4f:	add    ecx,0x2
  41ff52:	add    edx,0x2
  41ff55:	movzx  eax,WORD PTR [edx]
  41ff58:	mov    ebx,0x4e20
  41ff5d:	cmp    ax,bx
  41ff60:	jne    0x41ff42
  41ff62:	xor    eax,eax
  41ff64:	mov    WORD PTR [ecx],ax
  41ff67:	mov    eax,DWORD PTR [edi+0x188]
  41ff6d:	pop    ebx
  41ff6e:	ret    
  41ff6f:	push   edi
  41ff70:	mov    edi,eax
  41ff72:	mov    eax,DWORD PTR [esi+0x188]
  41ff78:	shl    edi,0x6
  41ff7b:	add    eax,edi
  41ff7d:	jmp    0x41ff89
  41ff7f:	xor    cl,0x75
  41ff82:	sub    cl,0x7
  41ff85:	mov    BYTE PTR [eax],cl
  41ff87:	inc    eax
  41ff88:	inc    edx
  41ff89:	mov    cl,BYTE PTR [edx]
  41ff8b:	cmp    cl,0x72
  41ff8e:	jne    0x41ff7f
  41ff90:	mov    BYTE PTR [eax],0x0
  41ff93:	mov    eax,DWORD PTR [esi+0x188]
  41ff99:	add    eax,edi
  41ff9b:	pop    edi
  41ff9c:	ret    
  41ff9d:	push   ebp
  41ff9e:	mov    ebp,esp
  41ffa0:	sub    esp,0x14
  41ffa3:	mov    DWORD PTR [ebp-0x10],0xf89c8581
  41ffaa:	mov    DWORD PTR [ebp-0x4],0xf89c8580
  41ffb1:	mov    eax,DWORD PTR [ebx]
  41ffb3:	mov    DWORD PTR [ebp-0x8],eax
  41ffb6:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41ffbd:	push   esi
  41ffbe:	push   edi
  41ffbf:	mov    DWORD PTR [ebp-0x14],0xead718a1
  41ffc6:	mov    edi,DWORD PTR [ebp-0x4]
  41ffc9:	mov    ecx,DWORD PTR [ebp-0x10]
  41ffcc:	mov    eax,0x751089d
  41ffd1:	xor    edi,eax
  41ffd3:	mov    edx,0x3272e4
  41ffd8:	xor    ecx,eax
  41ffda:	add    edi,edx
  41ffdc:	add    ecx,edx
  41ffde:	imul   edi,ecx
  41ffe1:	jmp    0x420029
  41ffe3:	mov    ecx,DWORD PTR [ebp-0x8]
  41ffe6:	mov    esi,DWORD PTR [ebp-0x4]
  41ffe9:	xor    ecx,eax
  41ffeb:	xor    esi,eax
  41ffed:	add    ecx,edx
  41ffef:	add    esi,edx
  41fff1:	test   esi,ecx
  41fff3:	mov    esi,DWORD PTR [ebp-0x8]
  41fff6:	mov    ecx,DWORD PTR [ebp-0x4]
  41fff9:	je     0x420010
  41fffb:	xor    ecx,eax
  41fffd:	xor    esi,eax
  41ffff:	add    ecx,edx
  420001:	add    esi,edx
  420003:	shr    esi,cl
  420005:	mov    ecx,DWORD PTR [ebp-0x14]
  420008:	xor    ecx,eax
  42000a:	add    ecx,edx
  42000c:	xor    esi,ecx
  42000e:	jmp    0x42001a
  420010:	xor    esi,eax
  420012:	xor    ecx,eax
  420014:	add    esi,edx
  420016:	add    ecx,edx
  420018:	shr    esi,cl
  42001a:	mov    DWORD PTR [ebp-0x8],esi
  42001d:	mov    ecx,DWORD PTR [ebp-0x4]
  420020:	xor    ecx,eax
  420022:	lea    edi,[edi+ecx*1+0x3272e4]
  420029:	mov    ecx,DWORD PTR [ebp-0xc]
  42002c:	mov    esi,DWORD PTR [ebp-0x4]
  42002f:	xor    esi,eax
  420031:	xor    ecx,eax
  420033:	sub    ecx,esi
  420035:	cmp    edi,ecx
  420037:	jbe    0x41ffe3
  420039:	mov    eax,DWORD PTR [ebp-0x8]
  42003c:	pop    edi
  42003d:	mov    DWORD PTR [ebx],eax
  42003f:	mov    eax,DWORD PTR [ebp-0x8]
  420042:	pop    esi
  420043:	leave  
  420044:	ret    
  420045:	push   ebp
  420046:	mov    ebp,esp
  420048:	sub    esp,0x38
  42004b:	push   ebx
  42004c:	mov    ebx,0xf89c8581
  420051:	mov    DWORD PTR [ebp-0x4],ebx
  420054:	lea    eax,[ebx-0x1]
  420057:	push   esi
  420058:	mov    DWORD PTR [ebp-0x24],eax
  42005b:	mov    ecx,DWORD PTR [ebp-0x4]
  42005e:	mov    edx,DWORD PTR [ebp+0x8]
  420061:	mov    esi,0x751089d
  420066:	push   edi
  420067:	xor    ecx,esi
  420069:	mov    edi,0x3272e4
  42006e:	add    ecx,edi
  420070:	cmp    edx,ecx
  420072:	je     0x4201d8
  420078:	mov    ecx,DWORD PTR [ebp-0x4]
  42007b:	mov    edx,DWORD PTR [ebp+0xc]
  42007e:	xor    ecx,esi
  420080:	add    ecx,edi
  420082:	cmp    edx,ecx
  420084:	je     0x4201d8
  42008a:	mov    ecx,DWORD PTR [ebp+0x10]
  42008d:	mov    DWORD PTR [ebp-0x14],ecx
  420090:	mov    ecx,DWORD PTR [ebp+0xc]
  420093:	mov    edx,DWORD PTR [ebp+0x8]
  420096:	mov    DWORD PTR [ebp-0x18],0xf89c8506
  42009d:	mov    DWORD PTR [ebp-0x1c],eax
  4200a0:	mov    DWORD PTR [ebp-0x10],ebx
  4200a3:	mov    DWORD PTR [ebp+0xc],eax
  4200a6:	mov    DWORD PTR [ebp+0x10],0xf89c8583
  4200ad:	mov    eax,DWORD PTR [ebp+0xc]
  4200b0:	xor    eax,esi
  4200b2:	mov    DWORD PTR [ebp-0x20],ecx
  4200b5:	sub    ecx,eax
  4200b7:	sub    ecx,edi
  4200b9:	mov    DWORD PTR [ebp+0x8],ecx
  4200bc:	mov    DWORD PTR [ebp-0xc],edx
  4200bf:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  4200c6:	jmp    0x4201c8
  4200cb:	mov    eax,DWORD PTR [ebp+0xc]
  4200ce:	mov    ecx,DWORD PTR [ebp+0xc]
  4200d1:	xor    eax,esi
  4200d3:	xor    ecx,esi
  4200d5:	lea    ecx,[eax+ecx*1+0x64e5c8]
  4200dc:	mov    eax,DWORD PTR [ebp+0x8]
  4200df:	xor    edx,edx
  4200e1:	div    ecx
  4200e3:	mov    eax,DWORD PTR [ebp+0x10]
  4200e6:	mov    ecx,DWORD PTR [ebp+0xc]
  4200e9:	xor    eax,esi
  4200eb:	xor    ecx,esi
  4200ed:	sub    eax,ecx
  4200ef:	cmp    edx,eax
  4200f1:	jne    0x420187
  4200f7:	mov    eax,DWORD PTR [ebp+0x8]
  4200fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4200fd:	mov    dl,BYTE PTR [eax+ecx*1]
  420100:	mov    eax,DWORD PTR [ebp-0x10]
  420103:	mov    ecx,DWORD PTR [ebp-0x8]
  420106:	xor    eax,esi
  420108:	xor    ecx,esi
  42010a:	add    eax,edi
  42010c:	add    ecx,edi
  42010e:	cmp    eax,ecx
  420110:	jae    0x420158
  420112:	lea    ecx,[eax-0x3272e4]
  420118:	mov    DWORD PTR [ebp-0x4],ecx
  42011b:	mov    ebx,DWORD PTR [ebp-0x4]
  42011e:	xor    ebx,esi
  420120:	add    ebx,0x7f55d8c3
  420126:	lea    ecx,[ebp+eax*4-0x38]
  42012a:	mov    DWORD PTR [ecx],ebx
  42012c:	mov    ebx,DWORD PTR [ecx]
  42012e:	cmp    ebx,0x244ecba2
  420134:	jbe    0x42013e
  420136:	add    DWORD PTR [ecx],0x405fc1d
  42013c:	jmp    0x420144
  42013e:	add    DWORD PTR [ecx],0xfdaf43e3
  420144:	mov    ecx,DWORD PTR [ebp-0x8]
  420147:	xor    ecx,esi
  420149:	inc    eax
  42014a:	inc    DWORD PTR [ebp-0x4]
  42014d:	add    ecx,edi
  42014f:	cmp    eax,ecx
  420151:	jb     0x42011b
  420153:	mov    ebx,0xf89c8581
  420158:	cmp    DWORD PTR [ebp-0x14],0x0
  42015c:	jne    0x420166
  42015e:	xor    dl,0x75
  420161:	sub    dl,0x7
  420164:	jmp    0x42017c
  420166:	mov    eax,DWORD PTR [ebp-0x18]
  420169:	xor    al,0x9d
  42016b:	mov    cl,0x1c
  42016d:	sub    cl,al
  42016f:	add    dl,cl
  420171:	mov    ecx,DWORD PTR [ebp-0x1c]
  420174:	xor    cl,0x9d
  420177:	sub    cl,0x1c
  42017a:	ror    dl,cl
  42017c:	xor    eax,eax
  42017e:	mov    eax,DWORD PTR [ebp+0x8]
  420181:	mov    ecx,DWORD PTR [ebp-0xc]
  420184:	mov    BYTE PTR [eax+ecx*1],dl
  420187:	mov    eax,DWORD PTR [ebp+0x8]
  42018a:	mov    ecx,DWORD PTR [ebp-0x10]
  42018d:	sub    eax,edi
  42018f:	xor    eax,esi
  420191:	cmp    eax,ecx
  420193:	jne    0x4201b6
  420195:	mov    eax,DWORD PTR [ebp+0x10]
  420198:	mov    ecx,DWORD PTR [ebp+0xc]
  42019b:	xor    eax,esi
  42019d:	xor    ecx,esi
  42019f:	sub    eax,ecx
  4201a1:	mov    ecx,DWORD PTR [ebp-0x20]
  4201a4:	sub    eax,edi
  4201a6:	xor    eax,esi
  4201a8:	mov    DWORD PTR [ebp+0x10],eax
  4201ab:	mov    eax,DWORD PTR [ebp+0xc]
  4201ae:	xor    eax,esi
  4201b0:	sub    ecx,eax
  4201b2:	sub    ecx,edi
  4201b4:	jmp    0x4201c5
  4201b6:	mov    eax,DWORD PTR [ebp+0xc]
  4201b9:	xor    eax,esi
  4201bb:	mov    ecx,0xffcd8d1c
  4201c0:	sub    ecx,eax
  4201c2:	add    ecx,DWORD PTR [ebp+0x8]
  4201c5:	mov    DWORD PTR [ebp+0x8],ecx
  4201c8:	mov    eax,DWORD PTR [ebp+0x10]
  4201cb:	cmp    eax,ebx
  4201cd:	jne    0x4200cb
  4201d3:	mov    eax,DWORD PTR [ebp-0x24]
  4201d6:	jmp    0x4201db
  4201d8:	mov    eax,DWORD PTR [ebp-0x4]
  4201db:	xor    eax,esi
  4201dd:	add    eax,edi
  4201df:	pop    edi
  4201e0:	pop    esi
  4201e1:	pop    ebx
  4201e2:	leave  
  4201e3:	ret    0xc
  4201e6:	push   ebp
  4201e7:	mov    ebp,esp
  4201e9:	sub    esp,0x420
  4201ef:	mov    DWORD PTR [ebp-0x14],0xf89c8581
  4201f6:	mov    DWORD PTR [ebp-0xc],0xf89c8580
  4201fd:	mov    DWORD PTR [ebp-0x18],0xf89c8681
  420204:	push   ebx
  420205:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  42020c:	mov    eax,DWORD PTR [ebp-0x14]
  42020f:	push   esi
  420210:	mov    esi,0x751089d
  420215:	push   edi
  420216:	xor    eax,esi
  420218:	mov    edi,0x3272e4
  42021d:	add    eax,edi
  42021f:	mov    DWORD PTR [ebp-0x8],eax
  420222:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  420229:	mov    DWORD PTR [ebp-0x4],0xead718a1
  420230:	mov    DWORD PTR [ebp-0x10],0x8
  420237:	mov    ecx,ecx
  420239:	mov    eax,DWORD PTR [ebp-0xc]
  42023c:	mov    ecx,DWORD PTR [ebp-0x14]
  42023f:	xor    eax,esi
  420241:	xor    ecx,esi
  420243:	add    eax,edi
  420245:	add    ecx,edi
  420247:	imul   eax,ecx
  42024a:	jmp    0x42027d
  42024c:	mov    eax,DWORD PTR [ebp-0x4]
  42024f:	sub    eax,edi
  420251:	xor    eax,esi
  420253:	mov    DWORD PTR [ebp-0x8],eax
  420256:	lea    ebx,[ebp-0x8]
  420259:	call   0x41ff9d
  42025e:	mov    DWORD PTR [ebp-0x8],eax
  420261:	mov    eax,DWORD PTR [ebp-0x8]
  420264:	mov    ecx,DWORD PTR [ebp-0x4]
  420267:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42026e:	mov    eax,DWORD PTR [ebp-0xc]
  420271:	mov    ecx,DWORD PTR [ebp-0x4]
  420274:	xor    eax,esi
  420276:	lea    eax,[eax+ecx*1+0x3272e4]
  42027d:	mov    DWORD PTR [ebp-0x4],eax
  420280:	mov    eax,DWORD PTR [ebp-0x18]
  420283:	mov    ecx,DWORD PTR [ebp-0xc]
  420286:	xor    ecx,esi
  420288:	xor    eax,esi
  42028a:	sub    eax,ecx
  42028c:	mov    ecx,DWORD PTR [ebp-0x4]
  42028f:	cmp    ecx,eax
  420291:	jbe    0x42024c
  420293:	mov    eax,DWORD PTR [ebp-0x1c]
  420296:	xor    eax,esi
  420298:	add    eax,edi
  42029a:	mov    DWORD PTR [ebp-0x8],eax
  42029d:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  4202a4:	mov    ebx,ebx
  4202a6:	jmp    0x420309
  4202a8:	mov    ecx,DWORD PTR [ebp-0x20]
  4202ab:	mov    eax,DWORD PTR [ebp-0x8]
  4202ae:	xor    ecx,esi
  4202b0:	add    ecx,edi
  4202b2:	shr    eax,cl
  4202b4:	mov    DWORD PTR [ebp-0x4],eax
  4202b7:	mov    eax,DWORD PTR [ebp+0x8]
  4202ba:	mov    cl,BYTE PTR [eax]
  4202bc:	mov    BYTE PTR [ebp+0xb],cl
  4202bf:	mov    cl,BYTE PTR [ebp+0xb]
  4202c2:	mov    edx,DWORD PTR [ebp-0x8]
  4202c5:	movzx  ecx,cl
  4202c8:	xor    ecx,edx
  4202ca:	mov    DWORD PTR [ebp+0x8],ecx
  4202cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4202d0:	mov    edx,DWORD PTR [ebp+0x8]
  4202d3:	xor    ecx,esi
  4202d5:	add    ecx,edi
  4202d7:	and    ecx,edx
  4202d9:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  4202e0:	mov    edx,DWORD PTR [ebp-0x4]
  4202e3:	xor    ecx,edx
  4202e5:	mov    DWORD PTR [ebp-0x8],ecx
  4202e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4202eb:	xor    ecx,esi
  4202ed:	lea    eax,[eax+ecx*1+0x3272e4]
  4202f4:	mov    DWORD PTR [ebp+0x8],eax
  4202f7:	mov    eax,DWORD PTR [ebp-0xc]
  4202fa:	xor    eax,esi
  4202fc:	mov    ecx,0xffcd8d1c
  420301:	sub    ecx,eax
  420303:	add    ecx,DWORD PTR [ebp-0x10]
  420306:	mov    DWORD PTR [ebp-0x10],ecx
  420309:	mov    eax,DWORD PTR [ebp-0x14]
  42030c:	mov    ecx,DWORD PTR [ebp-0x10]
  42030f:	xor    eax,esi
  420311:	add    eax,edi
  420313:	cmp    ecx,eax
  420315:	jne    0x4202a8
  420317:	mov    eax,DWORD PTR [ebp-0x1c]
  42031a:	mov    ecx,DWORD PTR [ebp-0x8]
  42031d:	xor    eax,esi
  42031f:	add    eax,edi
  420321:	pop    edi
  420322:	pop    esi
  420323:	xor    eax,ecx
  420325:	pop    ebx
  420326:	leave  
  420327:	ret    0x4
  42032a:	push   ebp
  42032b:	mov    ebp,esp
  42032d:	mov    eax,DWORD PTR [ebp+0x1c]
  420330:	mov    ecx,DWORD PTR [ebp+0x8]
  420333:	mov    edx,DWORD PTR [ebp+0x10]
  420336:	mov    eax,DWORD PTR [eax+0x190]
  42033c:	mov    eax,DWORD PTR [eax]
  42033e:	sub    esp,0x64
  420341:	push   ebx
  420342:	push   esi
  420343:	push   edi
  420344:	mov    edi,0x751089d
  420349:	xor    ecx,edi
  42034b:	mov    ebx,0x3272e4
  420350:	add    ecx,ebx
  420352:	cmp    ecx,edx
  420354:	jne    0x420365
  420356:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  420360:	jmp    0x420861
  420365:	mov    ecx,DWORD PTR [ebp+0x8]
  420368:	mov    esi,DWORD PTR [ebp+0x14]
  42036b:	mov    edx,DWORD PTR [esi]
  42036d:	xor    ecx,edi
  42036f:	add    ecx,ebx
  420371:	cmp    edx,ecx
  420373:	je     0x42081c
  420379:	mov    ecx,DWORD PTR [ebp+0x1c]
  42037c:	mov    DWORD PTR [ebp-0x1c],eax
  42037f:	mov    DWORD PTR [ebp+0x1c],ecx
  420382:	mov    ecx,DWORD PTR [ebp+0x18]
  420385:	mov    eax,DWORD PTR [esi]
  420387:	mov    DWORD PTR [ebp-0x20],eax
  42038a:	mov    DWORD PTR [ebp+0x8],0xf89c8581
  420391:	mov    edx,0xf89c8580
  420396:	mov    DWORD PTR [ebp-0x8],edx
  420399:	mov    eax,DWORD PTR [ebp+0x1c]
  42039c:	mov    DWORD PTR [ebp+0x1c],eax
  42039f:	mov    eax,DWORD PTR [ebp+0x1c]
  4203a2:	mov    eax,DWORD PTR [eax+0x190]
  4203a8:	mov    eax,DWORD PTR [eax]
  4203aa:	mov    DWORD PTR [ebp-0x24],ecx
  4203ad:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203b0:	mov    ecx,DWORD PTR [ecx+0x190]
  4203b6:	mov    ecx,DWORD PTR [ecx]
  4203b8:	add    ecx,DWORD PTR [eax+0x3c]
  4203bb:	mov    DWORD PTR [ebp+0x10],ecx
  4203be:	mov    eax,DWORD PTR [ebp+0x8]
  4203c1:	xor    eax,edi
  4203c3:	add    eax,ebx
  4203c5:	mov    DWORD PTR [ebp-0x4],eax
  4203c8:	mov    eax,DWORD PTR [ebp+0x8]
  4203cb:	xor    eax,edi
  4203cd:	add    eax,ebx
  4203cf:	mov    DWORD PTR [ebp+0x18],eax
  4203d2:	mov    eax,DWORD PTR [ebp+0x10]
  4203d5:	mov    eax,DWORD PTR [eax+0x50]
  4203d8:	sub    eax,0xc
  4203db:	mov    DWORD PTR [ebp-0x28],eax
  4203de:	mov    eax,DWORD PTR [ebp+0x10]
  4203e1:	mov    eax,DWORD PTR [eax+0x38]
  4203e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4203e7:	dec    eax
  4203e8:	test   DWORD PTR [ecx+0x54],eax
  4203eb:	mov    eax,DWORD PTR [ebp+0x10]
  4203ee:	je     0x420408
  4203f0:	mov    eax,DWORD PTR [eax+0x38]
  4203f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4203f6:	mov    ecx,DWORD PTR [ecx+0x54]
  4203f9:	dec    eax
  4203fa:	not    eax
  4203fc:	and    ecx,eax
  4203fe:	mov    eax,DWORD PTR [ebp+0x10]
  420401:	mov    eax,DWORD PTR [eax+0x38]
  420404:	add    eax,ecx
  420406:	jmp    0x42040b
  420408:	mov    eax,DWORD PTR [eax+0x54]
  42040b:	mov    DWORD PTR [ebp+0x1c],eax
  42040e:	mov    eax,DWORD PTR [ebp+0x8]
  420411:	xor    eax,edi
  420413:	add    eax,ebx
  420415:	mov    DWORD PTR [ebp+0x18],eax
  420418:	mov    eax,DWORD PTR [ebp+0x8]
  42041b:	xor    eax,edi
  42041d:	add    eax,ebx
  42041f:	mov    DWORD PTR [ebp+0x18],eax
  420422:	mov    eax,DWORD PTR [ebp+0x8]
  420425:	mov    ecx,DWORD PTR [ebp-0x24]
  420428:	xor    eax,edi
  42042a:	add    eax,ebx
  42042c:	mov    DWORD PTR [ecx],eax
  42042e:	mov    DWORD PTR [ebp+0x18],edx
  420431:	mov    DWORD PTR [ebp+0x18],0xf89c8583
  420438:	mov    DWORD PTR [ebp+0x18],0xf89c8582
  42043f:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  420446:	mov    eax,DWORD PTR [ebp-0x8]
  420449:	mov    ecx,DWORD PTR [ebp+0x1c]
  42044c:	xor    eax,edi
  42044e:	add    eax,ebx
  420450:	imul   eax,ecx
  420453:	mov    ecx,DWORD PTR [ebp+0x8]
  420456:	mov    edx,DWORD PTR [ebp-0x28]
  420459:	xor    ecx,edi
  42045b:	lea    ecx,[ecx+edx*1+0x3272e4]
  420462:	cmp    eax,ecx
  420464:	jae    0x420815
  42046a:	mov    eax,DWORD PTR [ebp+0x8]
  42046d:	xor    eax,edi
  42046f:	add    eax,ebx
  420471:	mov    DWORD PTR [ebp+0x18],eax
  420474:	mov    eax,DWORD PTR [ebp+0x1c]
  420477:	add    eax,DWORD PTR [ebp-0x1c]
  42047a:	mov    DWORD PTR [ebp-0x4],eax
  42047d:	push   DWORD PTR [ebp-0x4]
  420480:	mov    esi,DWORD PTR [ebp-0x1c]
  420483:	mov    ecx,DWORD PTR [ebp+0x10]
  420486:	call   0x41f5d5
  42048b:	mov    DWORD PTR [ebp+0xc],eax
  42048e:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  420495:	mov    eax,DWORD PTR [ebp-0x18]
  420498:	xor    eax,edi
  42049a:	lea    ecx,[ebp-0x40]
  42049d:	add    eax,ebx
  42049f:	push   ecx
  4204a0:	call   0x41fb69
  4204a5:	mov    eax,DWORD PTR [ebp+0xc]
  4204a8:	test   eax,eax
  4204aa:	je     0x4204fa
  4204ac:	mov    eax,DWORD PTR [ebp-0x18]
  4204af:	xor    eax,edi
  4204b1:	add    eax,ebx
  4204b3:	push   eax
  4204b4:	push   DWORD PTR [ebp+0xc]
  4204b7:	lea    eax,[ebp-0x40]
  4204ba:	push   eax
  4204bb:	call   0x41fa5f
  4204c0:	mov    eax,DWORD PTR [ebp-0x4]
  4204c3:	mov    DWORD PTR [ebp-0x18],eax
  4204c6:	mov    eax,DWORD PTR [ebp-0x18]
  4204c9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4204cc:	sub    eax,ecx
  4204ce:	mov    DWORD PTR [ebp-0x18],eax
  4204d1:	mov    eax,DWORD PTR [ebp+0xc]
  4204d4:	mov    ecx,DWORD PTR [ebp+0xc]
  4204d7:	mov    eax,DWORD PTR [eax+0x10]
  4204da:	add    eax,DWORD PTR [ecx+0xc]
  4204dd:	mov    ecx,DWORD PTR [ebp-0x18]
  4204e0:	cmp    ecx,eax
  4204e2:	jb     0x4204fa
  4204e4:	mov    eax,DWORD PTR [ebp+0xc]
  4204e7:	mov    eax,DWORD PTR [eax+0xc]
  4204ea:	mov    ecx,DWORD PTR [ebp+0xc]
  4204ed:	add    eax,DWORD PTR [ecx+0x8]
  4204f0:	mov    ecx,DWORD PTR [ebp-0x18]
  4204f3:	sub    eax,ecx
  4204f5:	jmp    0x4207e8
  4204fa:	push   0xc
  4204fc:	push   DWORD PTR [ebp-0x4]
  4204ff:	lea    eax,[ebp-0x4c]
  420502:	push   eax
  420503:	call   0x41fa5f
  420508:	mov    eax,0xf89c8581
  42050d:	mov    DWORD PTR [ebp-0x2c],eax
  420510:	mov    DWORD PTR [ebp-0x30],0xf89c8580
  420517:	mov    DWORD PTR [ebp-0x34],0xf89c8583
  42051e:	mov    DWORD PTR [ebp-0x38],0xf89c8582
  420525:	lea    ecx,[ebp-0x2c]
  420528:	mov    DWORD PTR [ebp-0xc],ecx
  42052b:	lea    ecx,[ebp-0x30]
  42052e:	mov    DWORD PTR [ebp-0x10],ecx
  420531:	lea    ecx,[ebp-0x34]
  420534:	mov    DWORD PTR [ebp+0xc],ecx
  420537:	lea    ecx,[ebp-0x38]
  42053a:	mov    DWORD PTR [ebp-0x14],ecx
  42053d:	mov    ecx,DWORD PTR [ebp+0x8]
  420540:	xor    ecx,edi
  420542:	add    ecx,ebx
  420544:	mov    DWORD PTR [ebp-0x18],ecx
  420547:	jmp    0x420743
  42054c:	cmp    eax,0xf89c8583
  420551:	je     0x420755
  420557:	mov    ecx,DWORD PTR [ebp-0x8]
  42055a:	xor    ecx,edi
  42055c:	mov    esi,eax
  42055e:	add    ecx,ebx
  420560:	mov    DWORD PTR [ebp+0x18],ecx
  420563:	mov    eax,DWORD PTR [ebp-0x18]
  420566:	xor    esi,edi
  420568:	lea    eax,[eax+esi*1+0x3272e4]
  42056f:	mov    DWORD PTR [ebp-0x18],eax
  420572:	mov    eax,DWORD PTR [ebp-0x8]
  420575:	mov    ecx,DWORD PTR [ebp-0x18]
  420578:	xor    eax,edi
  42057a:	add    eax,ebx
  42057c:	cmp    ecx,eax
  42057e:	jne    0x420593
  420580:	mov    eax,DWORD PTR [ebp+0x8]
  420583:	xor    eax,edi
  420585:	add    eax,ebx
  420587:	push   eax
  420588:	push   0xc
  42058a:	lea    eax,[ebp-0x4c]
  42058d:	push   eax
  42058e:	call   0x420045
  420593:	mov    eax,DWORD PTR [ebp-0xc]
  420596:	mov    eax,DWORD PTR [eax]
  420598:	xor    eax,edi
  42059a:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  4205a1:	mov    ecx,DWORD PTR [ebp+0x8]
  4205a4:	xor    ecx,edi
  4205a6:	movzx  eax,al
  4205a9:	add    ecx,ebx
  4205ab:	cmp    eax,ecx
  4205ad:	je     0x42072b
  4205b3:	mov    eax,DWORD PTR [ebp-0x10]
  4205b6:	mov    eax,DWORD PTR [eax]
  4205b8:	xor    eax,edi
  4205ba:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  4205c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4205c4:	xor    ecx,edi
  4205c6:	movzx  eax,al
  4205c9:	add    ecx,ebx
  4205cb:	cmp    eax,ecx
  4205cd:	je     0x42072b
  4205d3:	mov    eax,DWORD PTR [ebp+0xc]
  4205d6:	mov    eax,DWORD PTR [eax]
  4205d8:	xor    eax,edi
  4205da:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  4205e1:	mov    ecx,DWORD PTR [ebp+0x8]
  4205e4:	xor    ecx,edi
  4205e6:	movzx  eax,al
  4205e9:	add    ecx,ebx
  4205eb:	cmp    eax,ecx
  4205ed:	je     0x42072b
  4205f3:	mov    eax,DWORD PTR [ebp-0x14]
  4205f6:	mov    eax,DWORD PTR [eax]
  4205f8:	xor    eax,edi
  4205fa:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  420601:	mov    ecx,DWORD PTR [ebp+0x8]
  420604:	xor    ecx,edi
  420606:	movzx  eax,al
  420609:	add    ecx,ebx
  42060b:	cmp    eax,ecx
  42060d:	je     0x42072b
  420613:	mov    eax,DWORD PTR [ebp-0x10]
  420616:	mov    eax,DWORD PTR [eax]
  420618:	xor    eax,edi
  42061a:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  420621:	mov    ecx,DWORD PTR [ebp-0xc]
  420624:	mov    ecx,DWORD PTR [ecx]
  420626:	xor    ecx,edi
  420628:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  42062f:	xor    al,cl
  420631:	mov    ecx,DWORD PTR [ebp+0xc]
  420634:	mov    ecx,DWORD PTR [ecx]
  420636:	xor    ecx,edi
  420638:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  42063f:	or     al,cl
  420641:	mov    ecx,DWORD PTR [ebp-0xc]
  420644:	mov    ecx,DWORD PTR [ecx]
  420646:	xor    ecx,edi
  420648:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729c]
  42064f:	cmp    cl,al
  420651:	jne    0x42072b
  420657:	mov    eax,DWORD PTR [ebp+0xc]
  42065a:	mov    eax,DWORD PTR [eax]
  42065c:	xor    eax,edi
  42065e:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  420665:	mov    ecx,DWORD PTR [ebp-0x10]
  420668:	mov    ecx,DWORD PTR [ecx]
  42066a:	xor    ecx,edi
  42066c:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  420673:	xor    al,cl
  420675:	mov    ecx,DWORD PTR [ebp-0x14]
  420678:	mov    ecx,DWORD PTR [ecx]
  42067a:	xor    ecx,edi
  42067c:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  420683:	or     al,cl
  420685:	mov    ecx,DWORD PTR [ebp-0x10]
  420688:	mov    ecx,DWORD PTR [ecx]
  42068a:	xor    ecx,edi
  42068c:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729c]
  420693:	cmp    cl,al
  420695:	jne    0x42072b
  42069b:	mov    eax,DWORD PTR [ebp-0x14]
  42069e:	mov    eax,DWORD PTR [eax]
  4206a0:	xor    eax,edi
  4206a2:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  4206a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4206ac:	mov    ecx,DWORD PTR [ecx]
  4206ae:	xor    ecx,edi
  4206b0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  4206b7:	xor    al,cl
  4206b9:	mov    ecx,DWORD PTR [ebp-0xc]
  4206bc:	mov    ecx,DWORD PTR [ecx]
  4206be:	xor    ecx,edi
  4206c0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  4206c7:	or     al,cl
  4206c9:	mov    ecx,DWORD PTR [ebp+0xc]
  4206cc:	mov    ecx,DWORD PTR [ecx]
  4206ce:	xor    ecx,edi
  4206d0:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729c]
  4206d7:	cmp    cl,al
  4206d9:	jne    0x42072b
  4206db:	mov    eax,DWORD PTR [ebp-0x14]
  4206de:	mov    eax,DWORD PTR [eax]
  4206e0:	xor    eax,edi
  4206e2:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  4206e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4206ec:	mov    ecx,DWORD PTR [ecx]
  4206ee:	xor    ecx,edi
  4206f0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  4206f7:	xor    al,cl
  4206f9:	mov    ecx,DWORD PTR [ebp-0x10]
  4206fc:	mov    ecx,DWORD PTR [ecx]
  4206fe:	xor    ecx,edi
  420700:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  420707:	or     al,cl
  420709:	mov    ecx,DWORD PTR [ebp-0x14]
  42070c:	mov    ecx,DWORD PTR [ecx]
  42070e:	xor    ecx,edi
  420710:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729c]
  420717:	cmp    cl,al
  420719:	jne    0x42072b
  42071b:	lea    eax,[ebp-0x4c]
  42071e:	push   eax
  42071f:	call   0x4201e6
  420724:	mov    ecx,DWORD PTR [ebp-0x44]
  420727:	cmp    eax,ecx
  420729:	je     0x420735
  42072b:	mov    eax,DWORD PTR [ebp+0x8]
  42072e:	xor    eax,edi
  420730:	add    eax,ebx
  420732:	mov    DWORD PTR [ebp+0x18],eax
  420735:	mov    eax,DWORD PTR [ebp-0x8]
  420738:	xor    eax,edi
  42073a:	lea    eax,[eax+esi*1+0x3272e4]
  420741:	xor    eax,edi
  420743:	mov    ecx,DWORD PTR [ebp+0x8]
  420746:	mov    edx,DWORD PTR [ebp+0x18]
  420749:	xor    ecx,edi
  42074b:	add    ecx,ebx
  42074d:	cmp    edx,ecx
  42074f:	je     0x42054c
  420755:	mov    eax,DWORD PTR [ebp+0x8]
  420758:	mov    ecx,DWORD PTR [ebp+0x18]
  42075b:	xor    eax,edi
  42075d:	add    eax,ebx
  42075f:	cmp    ecx,eax
  420761:	jne    0x420774
  420763:	mov    eax,DWORD PTR [ebp-0x8]
  420766:	mov    ecx,DWORD PTR [ebp+0x1c]
  420769:	xor    eax,edi
  42076b:	lea    eax,[eax+ecx*1+0x3272e4]
  420772:	jmp    0x4207eb
  420774:	push   0x18
  420776:	push   DWORD PTR [ebp-0x4]
  420779:	lea    eax,[ebp-0x64]
  42077c:	push   eax
  42077d:	call   0x41fa5f
  420782:	mov    eax,DWORD PTR [ebp+0x8]
  420785:	mov    ecx,DWORD PTR [ebp-0x18]
  420788:	xor    eax,edi
  42078a:	add    eax,ebx
  42078c:	cmp    eax,ecx
  42078e:	je     0x4207a3
  420790:	mov    eax,DWORD PTR [ebp+0x8]
  420793:	xor    eax,edi
  420795:	add    eax,ebx
  420797:	push   eax
  420798:	push   0x18
  42079a:	lea    eax,[ebp-0x64]
  42079d:	push   eax
  42079e:	call   0x420045
  4207a3:	mov    eax,DWORD PTR [ebp-0x4]
  4207a6:	add    eax,0x18
  4207a9:	mov    DWORD PTR [ebp+0x18],eax
  4207ac:	push   DWORD PTR [ebp-0x50]
  4207af:	push   DWORD PTR [ebp+0x18]
  4207b2:	mov    eax,DWORD PTR [ebp-0x54]
  4207b5:	add    eax,DWORD PTR [ebp-0x20]
  4207b8:	push   eax
  4207b9:	call   0x41fa5f
  4207be:	mov    eax,DWORD PTR [ebp+0x8]
  4207c1:	mov    ecx,DWORD PTR [ebp-0x18]
  4207c4:	xor    eax,edi
  4207c6:	add    eax,ebx
  4207c8:	cmp    eax,ecx
  4207ca:	je     0x4207dd
  4207cc:	push   0x0
  4207ce:	push   DWORD PTR [ebp-0x50]
  4207d1:	mov    eax,DWORD PTR [ebp-0x54]
  4207d4:	add    eax,DWORD PTR [ebp-0x20]
  4207d7:	push   eax
  4207d8:	call   0x420045
  4207dd:	mov    eax,DWORD PTR [ebp-0x24]
  4207e0:	mov    ecx,DWORD PTR [ebp-0x50]
  4207e3:	add    DWORD PTR [eax],ecx
  4207e5:	mov    eax,DWORD PTR [ebp-0x50]
  4207e8:	add    eax,DWORD PTR [ebp+0x1c]
  4207eb:	mov    DWORD PTR [ebp+0x1c],eax
  4207ee:	mov    eax,DWORD PTR [ebp-0x8]
  4207f1:	mov    ecx,DWORD PTR [ebp+0x1c]
  4207f4:	xor    eax,edi
  4207f6:	add    eax,ebx
  4207f8:	imul   eax,ecx
  4207fb:	mov    ecx,DWORD PTR [ebp+0x8]
  4207fe:	mov    edx,DWORD PTR [ebp-0x28]
  420801:	xor    ecx,edi
  420803:	lea    ecx,[ecx+edx*1+0x3272e4]
  42080a:	cmp    eax,ecx
  42080c:	jb     0x42046a
  420812:	mov    esi,DWORD PTR [ebp+0x14]
  420815:	mov    eax,DWORD PTR [ebp-0x20]
  420818:	mov    DWORD PTR [esi],eax
  42081a:	jmp    0x420861
  42081c:	mov    ecx,DWORD PTR [ebp+0x8]
  42081f:	mov    edx,DWORD PTR [ebp+0xc]
  420822:	xor    ecx,edi
  420824:	xor    edx,edi
  420826:	add    ecx,ebx
  420828:	add    edx,ebx
  42082a:	cmp    ecx,edx
  42082c:	jne    0x420840
  42082e:	mov    eax,ds:0x7f642d1e
  420833:	imul   eax,eax,0x9f15fcef
  420839:	mov    ds:0x7f642d1e,eax
  42083e:	jmp    0x420861
  420840:	mov    ecx,DWORD PTR [ebp+0x8]
  420843:	xor    ecx,edi
  420845:	add    ecx,ebx
  420847:	cmp    eax,ecx
  420849:	je     0x420857
  42084b:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420855:	jmp    0x420861
  420857:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  420861:	pop    edi
  420862:	pop    esi
  420863:	pop    ebx
  420864:	leave  
  420865:	ret    0x18
  420868:	push   ebp
  420869:	mov    ebp,esp
  42086b:	and    esp,0xfffffff8
  42086e:	mov    eax,DWORD PTR [ebp+0x20]
  420871:	sub    esp,0x14
  420874:	push   ebx
  420875:	mov    ebx,DWORD PTR [ebp+0x14]
  420878:	push   esi
  420879:	push   edi
  42087a:	cmp    eax,0xf89c8581
  42087f:	jne    0x42088b
  420881:	push   0xf89c8580
  420886:	jmp    0x4209bd
  42088b:	mov    eax,DWORD PTR [ebp+0x20]
  42088e:	cmp    eax,0xf89c8580
  420893:	jne    0x42089f
  420895:	push   0xf89c8583
  42089a:	jmp    0x4209bd
  42089f:	mov    eax,DWORD PTR [ebp+0x20]
  4208a2:	cmp    eax,0xf89c8583
  4208a7:	jne    0x4208b3
  4208a9:	push   0xf89c8582
  4208ae:	jmp    0x4209bd
  4208b3:	mov    eax,DWORD PTR [ebp+0x20]
  4208b6:	cmp    eax,0xf89c8582
  4208bb:	jne    0x4208c7
  4208bd:	push   0xf89c85bd
  4208c2:	jmp    0x4209bd
  4208c7:	mov    ecx,DWORD PTR [ebp+0x20]
  4208ca:	mov    eax,0xf89c85be
  4208cf:	cmp    ecx,eax
  4208d1:	jne    0x42098d
  4208d7:	mov    eax,DWORD PTR [ebp+0x10]
  4208da:	mov    DWORD PTR [esp+0xc],eax
  4208de:	mov    eax,DWORD PTR [ebp+0x18]
  4208e1:	mov    DWORD PTR [esp+0x14],eax
  4208e5:	mov    eax,DWORD PTR [ebp+0xc]
  4208e8:	mov    DWORD PTR [esp+0x18],eax
  4208ec:	mov    eax,DWORD PTR [ebp+0x8]
  4208ef:	mov    DWORD PTR [esp+0x10],eax
  4208f3:	mov    eax,DWORD PTR [esp+0x10]
  4208f7:	mov    ecx,DWORD PTR [esp+0x14]
  4208fb:	mov    edi,0x751089d
  420900:	xor    eax,edi
  420902:	mov    esi,0x3272e4
  420907:	add    eax,esi
  420909:	mov    DWORD PTR [ecx],eax
  42090b:	mov    eax,DWORD PTR [esp+0xc]
  42090f:	mov    eax,DWORD PTR [eax+0x194]
  420915:	mov    ecx,DWORD PTR [eax]
  420917:	mov    eax,DWORD PTR [esp+0xc]
  42091b:	mov    eax,DWORD PTR [eax+0x194]
  420921:	mov    eax,DWORD PTR [eax]
  420923:	add    eax,DWORD PTR [ecx+0x3c]
  420926:	mov    ecx,DWORD PTR [esp+0xc]
  42092a:	mov    ecx,DWORD PTR [ecx+0x1d8]
  420930:	mov    ecx,DWORD PTR [ecx+0x14]
  420933:	push   0x4
  420935:	push   0x3000
  42093a:	push   DWORD PTR [eax+0x50]
  42093d:	push   0x0
  42093f:	call   ecx
  420941:	mov    DWORD PTR [ebx],eax
  420943:	mov    eax,DWORD PTR [esp+0x10]
  420947:	push   DWORD PTR [esp+0xc]
  42094b:	xor    eax,edi
  42094d:	add    eax,esi
  42094f:	mov    DWORD PTR [esp+0x20],eax
  420953:	lea    eax,[esp+0x20]
  420957:	push   eax
  420958:	push   ebx
  420959:	push   DWORD PTR [esp+0x20]
  42095d:	push   DWORD PTR [esp+0x28]
  420961:	push   DWORD PTR [esp+0x24]
  420965:	call   0x42032a
  42096a:	mov    eax,DWORD PTR [esp+0x10]
  42096e:	mov    ecx,DWORD PTR [ebx]
  420970:	xor    eax,edi
  420972:	add    eax,esi
  420974:	cmp    ecx,eax
  420976:	je     0x4209d4
  420978:	mov    eax,DWORD PTR [esp+0x18]
  42097c:	mov    ecx,DWORD PTR [esp+0x14]
  420980:	xor    eax,edi
  420982:	add    eax,esi
  420984:	imul   eax,DWORD PTR [esp+0x1c]
  420989:	mov    DWORD PTR [ecx],eax
  42098b:	jmp    0x4209d4
  42098d:	mov    ecx,DWORD PTR [ebp+0x20]
  420990:	cmp    ecx,0xf89c85bd
  420996:	jne    0x42099f
  420998:	push   0xf89c85bc
  42099d:	jmp    0x4209bd
  42099f:	mov    ecx,DWORD PTR [ebp+0x20]
  4209a2:	cmp    ecx,0xf89c85bc
  4209a8:	jne    0x4209b1
  4209aa:	push   0xf89c85bf
  4209af:	jmp    0x4209bd
  4209b1:	mov    ecx,DWORD PTR [ebp+0x20]
  4209b4:	cmp    ecx,0xf89c85bf
  4209ba:	jne    0x4209d4
  4209bc:	push   eax
  4209bd:	push   DWORD PTR [ebp+0x1c]
  4209c0:	push   DWORD PTR [ebp+0x18]
  4209c3:	push   ebx
  4209c4:	push   DWORD PTR [ebp+0x10]
  4209c7:	push   DWORD PTR [ebp+0xc]
  4209ca:	push   DWORD PTR [ebp+0x8]
  4209cd:	call   0x420868
  4209d2:	mov    DWORD PTR [ebx],eax
  4209d4:	mov    eax,DWORD PTR [ebx]
  4209d6:	pop    edi
  4209d7:	pop    esi
  4209d8:	pop    ebx
  4209d9:	mov    esp,ebp
  4209db:	pop    ebp
  4209dc:	ret    0x1c
  4209df:	push   ebp
  4209e0:	mov    ebp,esp
  4209e2:	sub    esp,0xc
  4209e5:	mov    eax,0xf89c8581
  4209ea:	mov    DWORD PTR [ebp-0x8],eax
  4209ed:	mov    DWORD PTR [ebp-0xc],0xf89c8580
  4209f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4209f7:	xor    ecx,0x751089d
  4209fd:	add    ecx,0x3272e4
  420a03:	mov    DWORD PTR [ebp-0x4],ecx
  420a06:	mov    ecx,DWORD PTR [ebp+0xc]
  420a09:	push   eax
  420a0a:	mov    DWORD PTR [ebp+0xc],ecx
  420a0d:	push   DWORD PTR [ebp+0xc]
  420a10:	lea    eax,[ebp-0x4]
  420a13:	push   DWORD PTR [ebp+0x8]
  420a16:	push   eax
  420a17:	push   DWORD PTR [ebp+0xc]
  420a1a:	push   DWORD PTR [ebp-0xc]
  420a1d:	push   DWORD PTR [ebp-0x8]
  420a20:	call   0x420868
  420a25:	mov    DWORD PTR [ebp-0x4],eax
  420a28:	mov    eax,DWORD PTR [ebp-0x4]
  420a2b:	leave  
  420a2c:	ret    0x8
  420a2f:	dec    esp
  420a30:	inc    ecx
  420a31:	mov    ebp,0xeffebd16
  420a36:	pop    ebx
  420a37:	adc    DWORD PTR [eax],eax
  420a39:	ret    0x3d72
  420a3c:	mov    dh,0x43
  420a3e:	dec    edi
  420a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a40:	xchg   BYTE PTR [ecx],al
  420a42:	add    al,ch
  420a44:	add    DWORD PTR [eax],eax
  420a46:	add    BYTE PTR [esi-0x27ea899d],dl
  420a4c:	fcom   st(2)
  420a4e:	xchg   ebx,eax
  420a4f:	sbb    eax,0x868b94da
  420a54:	nop
  420a55:	(bad)  
  420a56:	rol    BYTE PTR [esi+0x3ab9bb98],1
  420a5c:	xor    DWORD PTR [eax-0x63],ebp
  420a5f:	addr16 pop edx
  420a61:	or     dl,BYTE PTR [eax+0x4b]
  420a64:	xchg   edi,eax
  420a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a66:	mov    BYTE PTR [ebp+0x37],ch
  420a69:	mov    esi,0x1a9ad36d
  420a6e:	les    edi,FWORD PTR [eax]
  420a70:	xchg   DWORD PTR [ebx],ecx
  420a72:	cdq    
  420a73:	xlat   BYTE PTR ds:[ebx]
  420a74:	inc    esi
  420a75:	add    BYTE PTR [eax+0x2e],0x26
  420a79:	fs push cs
  420a7b:	jb     0x420a46
  420a7d:	popf   
  420a7e:	adc    BYTE PTR [esi],bh
  420a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a81:	rcr    ah,cl
  420a83:	inc    esi
  420a84:	or     esp,eax
  420a86:	adc    BYTE PTR [ecx-0x75],ch
  420a89:	out    0xf6,eax
  420a8b:	jae    0x420a9b
  420a8d:	imul   esi,DWORD PTR [ecx],0xead58616
  420a93:	mov    BYTE PTR [ebx],al
  420a95:	in     eax,0x43
  420a97:	stos   DWORD PTR es:[edi],eax
  420a98:	dec    ebx
  420a99:	bound  ecx,QWORD PTR [ecx]
  420a9b:	sub    eax,0xb3a4a3b2
  420aa0:	lea    eax,[edx]
  420aa2:	jns    0x420a5d
  420aa4:	(bad)  
  420aa5:	ins    BYTE PTR es:[edi],dx
  420aa6:	jmp    0x22dc:0x67ba242d
  420aad:	(bad)  
  420aae:	repz add al,BYTE PTR [ebp-0x47f18888]
  420ab5:	scas   al,BYTE PTR es:[edi]
  420ab6:	rcl    BYTE PTR [eax+0x3c841a48],1
  420abc:	stos   DWORD PTR es:[edi],eax
  420abd:	out    0x23,eax
  420abf:	xor    al,0x39
  420ac1:	adc    DWORD PTR [edx+0x36],esi
  420ac4:	call   0x2bd0:0xd30606b6
  420acb:	ror    BYTE PTR [eax],1
  420acd:	mov    dl,0x74
  420acf:	rcr    DWORD PTR [ecx],1
  420ad1:	add    BYTE PTR ss:[ecx],dh
  420ad4:	int    0xd4
  420ad6:	mov    edx,0xfc9dd8d4
  420adb:	test   eax,0x92b42d5a
  420ae0:	test   BYTE PTR ds:0xd7803752,ah
  420ae6:	xor    eax,eax
  420ae8:	mov    ch,0x8b
  420aea:	test   al,0x10
  420aec:	push   cs
  420aed:	push   eax
  420aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420aef:	push   ds
  420af0:	lods   al,BYTE PTR ds:[esi]
  420af1:	fisub  DWORD PTR [edi]
  420af3:	push   0x32
  420af5:	push   es
  420af6:	out    0x6d,eax
  420af8:	cmp    BYTE PTR [ecx+0x18ec1a51],cl
  420afe:	add    esp,edx
  420b00:	or     eax,0x7ff44352
  420b05:	push   0x69471c14
  420b0a:	popa   
  420b0b:	ins    DWORD PTR es:[edi],dx
  420b0c:	mov    edx,0xd389ca84
  420b11:	jge    0x420b43
  420b13:	stos   BYTE PTR es:[edi],al
  420b14:	test   BYTE PTR [ebx+ebp*2],cl
  420b17:	ins    BYTE PTR es:[edi],dx
  420b18:	adc    edi,DWORD PTR [edi]
  420b1a:	mov    dl,ch
  420b1c:	daa    
  420b1d:	test   al,0x52
  420b1f:	test   cl,bl
  420b21:	or     esi,DWORD PTR ss:[esi+0x5832ec45]
  420b28:	pusha  
  420b29:	add    dh,BYTE PTR [edi-0x57b03b05]
  420b2f:	cs mov eax,0xe7d027a3
  420b35:	aas    
  420b36:	mov    cl,BYTE PTR [esi-0x1c9d2a89]
  420b3c:	adc    DWORD PTR es:[ecx+0x62faec48],edi
  420b43:	mov    cs,ecx
  420b45:	add    BYTE PTR [ecx],dh
  420b47:	pop    ebp
  420b48:	or     ah,BYTE PTR [edx+0x48]
  420b4b:	cmp    eax,0x7a362bb1
  420b50:	mov    esp,ds
  420b52:	loop   0x420b48
  420b54:	pop    ds
  420b55:	mov    edi,0xa6681dcc
  420b5a:	les    eax,FWORD PTR [edx+eax*8-0x80]
  420b5e:	add    al,0xe
  420b60:	out    dx,eax
  420b61:	enter  0x5641,0x96
  420b65:	xor    ebx,DWORD PTR [ebx-0x530d0ef1]
  420b6b:	sub    edx,DWORD PTR [eax+edx*8+0x6c39011f]
  420b72:	arpl   WORD PTR [ebx],dx
  420b74:	imul   esi,ebx,0xffffffb9
  420b77:	jl     0x420b34
  420b79:	sbb    al,0xd5
  420b7b:	mov    eax,ds:0x84ebf03b
  420b80:	inc    ebp
  420b81:	adc    al,0x3c
  420b83:	pushf  
  420b84:	dec    eax
  420b85:	cmp    dh,BYTE PTR [edx-0x78]
  420b88:	jns    0x420b82
  420b8a:	addr16 ret 0x5fec
  420b8e:	das    
  420b8f:	retf   0xad81
  420b92:	es dec ecx
  420b94:	pop    ds
  420b95:	gs in  al,0xfb
  420b98:	loopne 0x420b94
  420b9a:	push   eax
  420b9b:	xchg   esp,eax
  420b9c:	(bad)  
  420b9d:	outs   dx,BYTE PTR ds:[esi]
  420b9e:	je     0x420b26
  420ba0:	loope  0x420bff
  420ba2:	and    bh,dl
  420ba4:	and    esi,DWORD PTR [edi+0x26]
  420ba7:	pop    ecx
  420ba8:	ins    BYTE PTR es:[edi],dx
  420ba9:	fcomp  DWORD PTR [esi]
  420bab:	aam    0x26
  420bad:	mov    esi,esi
  420baf:	sahf   
  420bb0:	or     eax,0xa5514cc0
  420bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bb6:	(bad)  
  420bb7:	mov    cl,BYTE PTR [eax+0x46355a6d]
  420bbd:	rcr    ch,1
  420bbf:	mov    esi,0x1c5be756
  420bc4:	or     eax,DWORD PTR [ebp+ecx*8+0x4c59bf]
  420bcb:	jmp    0x664daa29
  420bd0:	out    0xb0,eax
  420bd2:	and    BYTE PTR [eax-0x31221480],ah
  420bd8:	adc    al,0xf0
  420bda:	repz mov eax,0x61b8ca68
  420be0:	mov    ah,0x4a
  420be2:	dec    eax
  420be3:	stos   DWORD PTR es:[edi],eax
  420be4:	pop    edx
  420be5:	sub    ecx,DWORD PTR [ebx]
  420be7:	push   ds
  420be8:	cmp    al,0x21
  420bea:	or     dh,BYTE PTR [edi]
  420bec:	and    ebp,ecx
  420bee:	mov    cl,BYTE PTR [edx+0x30393925]
  420bf4:	jl     0x420bdf
  420bf6:	sbb    BYTE PTR [edx+0x7e368a3d],dl
  420bfc:	stos   BYTE PTR es:[edi],al
  420bfd:	fsubr  QWORD PTR [ebx-0x536f1967]
  420c03:	out    0x32,eax
  420c05:	(bad)  
  420c06:	jmp    0x56116323
  420c0b:	ror    BYTE PTR [ebx+0x7b983133],0x25
  420c12:	adc    al,0x32
  420c14:	sub    BYTE PTR [ebp-0x4a],dl
  420c17:	pop    eax
  420c18:	aam    0x13
  420c1a:	pop    ss
  420c1b:	mov    ch,0x91
  420c1d:	fisttp WORD PTR [esi]
  420c1f:	and    al,0x7d
  420c21:	mov    dh,0x59
  420c23:	xchg   ebp,eax
  420c24:	mov    bh,0x43
  420c26:	mov    al,bh
  420c28:	xchg   esp,eax
  420c29:	mov    al,ds:0x9bf14d60
  420c2e:	pop    ss
  420c2f:	scas   al,BYTE PTR es:[edi]
  420c30:	add    ebx,ebp
  420c32:	mov    ds:0xdeeebef,eax
  420c37:	jle    0x420bd4
  420c39:	mov    edi,0xbe7e5cce
  420c3e:	mov    edx,0x1888d
  420c43:	call   0x9a420c49
  420c48:	into   
  420c49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c4a:	(bad)  
  420c4b:	sbb    ch,BYTE PTR [ebx]
  420c4d:	adc    edx,DWORD PTR [ebp+0x3f]
  420c50:	xchg   ecx,eax
  420c51:	inc    esp
  420c52:	add    al,0xf4
  420c54:	test   DWORD PTR [ebp-0x28],edi
  420c57:	sbb    ecx,esp
  420c59:	mov    edx,0x38870cfd
  420c5e:	sbb    al,0xcd
  420c60:	test   eax,0x2ba80125
  420c65:	jo     0x420cd8
  420c67:	mov    esi,ecx
  420c69:	mov    cl,0x6a
  420c6b:	dec    eax
  420c6c:	push   esi
  420c6d:	rdmsr  
  420c6f:	sub    cl,al
  420c71:	idiv   DWORD PTR [ebx-0x3e4979af]
  420c77:	mov    ecx,0xa97eb607
  420c7c:	xchg   BYTE PTR [edi-0x4cec755a],al
  420c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c83:	popf   
  420c84:	mov    eax,ds:0x6eabfb34
  420c89:	js     0x420c6e
  420c8b:	ja     0x420c52
  420c8d:	sub    edx,edi
  420c8f:	lea    esp,[edx+0x3e]
  420c92:	pop    ebp
  420c93:	dec    edi
  420c94:	pop    ss
  420c95:	push   0xfffffff8
  420c97:	shl    BYTE PTR [ebx-0xe],cl
  420c9a:	cld    
  420c9b:	mov    DWORD PTR [ecx],0xde044bde
  420ca1:	mov    esp,0xfd958224
  420ca6:	push   eax
  420ca7:	ss add eax,0xb3e97ff8
  420cad:	dec    esp
  420cae:	mov    ch,0x2d
  420cb0:	pop    ebx
  420cb1:	outs   dx,BYTE PTR ds:[esi]
  420cb2:	add    eax,ebp
  420cb4:	add    DWORD PTR [ebx-0x1f],edx
  420cb7:	cmp    DWORD PTR [eax-0xa324fd],ebp
  420cbd:	push   cs
  420cbe:	lods   eax,DWORD PTR ds:[esi]
  420cbf:	mov    edx,0x20189055
  420cc4:	clc    
  420cc5:	or     edx,ecx
  420cc7:	jp     0x420c53
  420cc9:	fidivr WORD PTR [ecx-0x9]
  420ccc:	aam    0x4a
  420cce:	out    dx,al
  420ccf:	inc    ecx
  420cd0:	cdq    
  420cd1:	and    BYTE PTR [eax+0x60a06e45],dl
  420cd7:	repz add BYTE PTR [edx],bl
  420cda:	xor    eax,0xca805e9b
  420cdf:	imul   edi,DWORD PTR [edx-0x40],0x70
  420ce3:	xor    al,0x72
  420ce6:	mov    esi,0xdd1d0953
  420ceb:	popf   
  420cec:	imul   edx,eax,0xfb359338
  420cf2:	push   ecx
  420cf3:	push   edi
  420cf4:	mov    ecx,DWORD PTR [edi-0x16]
  420cf7:	xchg   esp,eax
  420cf8:	sti    
  420cf9:	hlt    
  420cfa:	cwde   
  420cfb:	test   ebx,esi
  420cfd:	push   ds
  420cfe:	retf   0xe9e2
  420d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d02:	xchg   ebx,eax
  420d03:	nop
  420d04:	dec    ebx
  420d05:	out    dx,eax
  420d06:	test   BYTE PTR [ebp-0x7ff9e9d1],bl
  420d0c:	mov    BYTE PTR [ecx+0x4770c31],0xe1
  420d13:	in     al,dx
  420d14:	mov    bl,0x28
  420d16:	add    eax,0xf5c0b25c
  420d1b:	cwde   
  420d1c:	cwde   
  420d1d:	pop    es
  420d1e:	jb     0x420cb2
  420d20:	push   edx
  420d21:	push   0xfc52f58f
  420d26:	aad    0xe3
  420d28:	lock xor DWORD PTR [ebx+0x43],edx
  420d2c:	fwait
  420d2d:	push   ss
  420d2e:	arpl   bx,ax
  420d30:	call   0xd4bd788d
  420d35:	push   esi
  420d36:	mov    al,0xb2
  420d38:	jle    0x420d2e
  420d3a:	cmp    dh,ah
  420d3c:	arpl   WORD PTR [esi+eiz*4],dx
  420d3f:	add    eax,DWORD PTR [edx]
  420d41:	cli    
  420d42:	stc    
  420d43:	imul   edx,DWORD PTR [edi-0x7c8b6e91],0xfffffff4
  420d4a:	inc    dx
  420d4c:	adc    eax,0xbe858e96
  420d51:	sbb    cl,BYTE PTR [esi]
  420d53:	inc    eax
  420d54:	pop    esi
  420d55:	repz imul edx,edi,0x8e3e0aa7
  420d5c:	and    DWORD PTR [edx-0x4f5d97b2],ebx
  420d62:	mov    esi,0x78e12e5a
  420d67:	(bad)  
  420d68:	repnz push ebx
  420d6a:	cmp    eax,0xbc86a02c
  420d6f:	call   0x219e:0xb432f27a
  420d76:	sbb    al,0xc1
  420d78:	and    esi,DWORD PTR [esi]
  420d7a:	les    edi,FWORD PTR [edi-0x29]
  420d7d:	(bad)  
  420d7e:	jmp    0x420d7a
  420d80:	imul   DWORD PTR ds:0xa16a083a
  420d86:	enter  0x98c9,0x3a
  420d8a:	popa   
  420d8b:	test   BYTE PTR [ebp-0x5cde4bdc],bh
  420d91:	icebp  
  420d92:	dec    ebx
  420d93:	xor    esi,DWORD PTR [edx+0x4b4567a5]
  420d99:	xlat   BYTE PTR ds:[ebx]
  420d9a:	aas    
  420d9b:	jge    0x420d82
  420d9d:	jne    0x420d3f
  420d9f:	out    0x4b,al
  420da1:	push   eax
  420da2:	xchg   edi,eax
  420da3:	cmp    ebx,0xffffff8a
  420da6:	mov    esp,DWORD PTR [edx+esi*1+0x39bbb4e2]
  420dad:	adc    edi,edi
  420daf:	cmp    eax,0x7d6ef3d
  420db4:	std    
  420db5:	cdq    
  420db6:	add    eax,0x1a8cdc8
  420dbb:	loope  0x420e26
  420dbd:	sub    eax,0x8228961e
  420dc2:	cmp    eax,DWORD PTR [esp+ecx*2]
  420dc5:	aad    0xaf
  420dc7:	and    eax,0x399c5afc
  420dcc:	fdivr  QWORD PTR [eax+0x7b4d1ff1]
  420dd2:	cmp    eax,0xb9aec1f8
  420dd7:	adc    bl,0x8
  420dda:	push   ss
  420ddb:	inc    eax
  420ddc:	push   esp
  420ddd:	xor    BYTE PTR [edi+0x44],0xc0
  420de1:	sbb    al,ah
  420de3:	adc    BYTE PTR [esi-0x10ebf137],cl
  420de9:	out    dx,al
  420dea:	call   0x1584a7d8
  420def:	repz push cs
  420df1:	mov    al,ds:0x739b4a71
  420df6:	in     al,0x19
  420df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420df9:	xlat   BYTE PTR ds:[ebx]
  420dfa:	push   ebp
  420dfb:	jmp    0x59dbc119
  420e00:	mov    edx,DWORD PTR [ebp+0x73806015]
  420e06:	in     eax,0x21
  420e08:	test   al,0x7c
  420e0a:	jb     0x420dfa
  420e0c:	dec    ecx
  420e0d:	lds    esi,FWORD PTR [edx+0x67d2a8fd]
  420e13:	test   BYTE PTR [eax-0x2],bh
  420e16:	dec    ebx
  420e17:	jge    0x420e94
  420e19:	out    0x2d,al
  420e1b:	jecxz  0x420e6e
  420e1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e1e:	out    dx,eax
  420e1f:	shl    dl,cl
  420e21:	push   ds
  420e22:	jl     0x420de7
  420e24:	mov    edi,0x7b52fe5c
  420e29:	mov    dl,0x88
  420e2b:	jge    0x420e39
  420e2d:	ja     0x420e72
  420e2f:	aam    0xbf
  420e31:	(bad)  
  420e32:	(bad)  
  420e33:	(bad)  
  420e34:	in     eax,dx
  420e35:	(bad)  
  420e37:	push   edx
  420e38:	js     0x420ead
  420e3a:	mov    esp,0x44d2cf3d
  420e3f:	jne    0x420dcb
  420e41:	add    DWORD PTR [eax],eax
  420e43:	call   0x4420e49
  420e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e49:	lds    ecx,FWORD PTR [edi+0x6c]
  420e4c:	jnp    0x420e15
  420e4e:	test   BYTE PTR [ebp+0x4dbe5427],dh
  420e54:	mov    ds:0x1d91f983,eax
  420e59:	jmp    0xb2b42853
  420e5e:	out    dx,al
  420e5f:	into   
  420e60:	push   cs
  420e61:	enter  0x9b36,0x23
  420e65:	jne    0x420e58
  420e67:	ja     0x420e20
  420e69:	mov    cl,0x49
  420e6b:	and    DWORD PTR [esi-0x7c662a6],ebx
  420e71:	leave  
  420e72:	and    BYTE PTR [ecx-0x295e918f],cl
  420e78:	test   DWORD PTR [edi],ebx
  420e7a:	adc    dl,BYTE PTR ds:0xb9604428
  420e80:	inc    ecx
  420e81:	sahf   
  420e82:	stos   BYTE PTR es:[edi],al
  420e83:	push   ebx
  420e84:	jns    0x420e14
  420e86:	xor    eax,0x8613fa48
  420e8b:	das    
  420e8c:	add    eax,0x994c6f43
  420e91:	cli    
  420e92:	xor    edx,DWORD PTR [edx]
  420e94:	inc    esi
  420e95:	or     esp,DWORD PTR [edx+ecx*2-0x1d]
  420e99:	call   0xaabd64ee
  420e9e:	xchg   BYTE PTR [esi],ah
  420ea0:	mul    dl
  420ea2:	mov    bh,0x92
  420ea4:	inc    ecx
  420ea5:	add    BYTE PTR [edx+0x5f4124f1],dl
  420eab:	shr    BYTE PTR [ebp-0x6b],0x34
  420eaf:	adc    DWORD PTR [ebx+0x23],ebx
  420eb2:	out    dx,al
  420eb3:	sub    BYTE PTR [ebx+0x2b5a03a8],cl
  420eb9:	retf   
  420eba:	jg     0x420e9f
  420ebc:	sub    BYTE PTR [edx+0x6b006632],ah
  420ec2:	adc    eax,DWORD PTR [eax+esi*4]
  420ec5:	cli    
  420ec6:	jle    0x420e94
  420ec8:	and    DWORD PTR [esi+ebp*8-0x31],edi
  420ecc:	adc    DWORD PTR [esi+0x30],eax
  420ecf:	pop    edx
  420ed0:	cli    
  420ed1:	nop
  420ed2:	jecxz  0x420ef6
  420ed4:	shl    BYTE PTR [eax],0x91
  420ed7:	dec    ebp
  420ed8:	call   0x6f98:0x45d3cd40
  420edf:	sar    DWORD PTR [eax+0x48071a4b],1
  420ee5:	mov    dl,0x39
  420ee7:	mov    al,ds:0x3796699a
  420eec:	xchg   ebp,eax
  420eed:	xor    DWORD PTR [edx-0x5c],ebp
  420ef0:	mov    eax,ds:0x5ad465df
  420ef5:	inc    eax
  420ef6:	inc    ebx
  420ef7:	jp     0x420e9a
  420ef9:	jl     0x420e8d
  420efb:	lods   eax,DWORD PTR ds:[esi]
  420efc:	clc    
  420efd:	inc    DWORD PTR [eax]
  420eff:	adc    DWORD PTR [ecx+0x9],eax
  420f02:	jecxz  0x420eea
  420f04:	mov    bh,0x30
  420f06:	sub    BYTE PTR ds:0xe55bc9ba,dh
  420f0c:	sub    ecx,DWORD PTR [ebx]
  420f0e:	xchg   edi,eax
  420f0f:	jge    0x420e9b
  420f11:	adc    al,0x5
  420f13:	and    edi,ecx
  420f15:	repz mov ecx,0xf2ee6587
  420f1b:	rcr    BYTE PTR [ebp+edx*8+0x60],0x51
  420f20:	addr16 sahf 
  420f22:	fdivr  QWORD PTR [ebx+0x1a]
  420f25:	or     al,0xa9
  420f27:	or     dl,ch
  420f29:	xchg   edi,eax
  420f2a:	sbb    ch,dh
  420f2c:	or     BYTE PTR [esi-0x480549f6],bh
  420f32:	sahf   
  420f33:	out    0x59,eax
  420f35:	ins    DWORD PTR es:[di],dx
  420f37:	les    eax,FWORD PTR [ecx-0x427c5c9c]
  420f3d:	xchg   edi,eax
  420f3e:	or     eax,0x3294bd70
  420f43:	mov    bl,0xa8
  420f46:	jae    0x420f37
  420f48:	add    eax,0xa2bf3893
  420f4d:	outs   dx,DWORD PTR ds:[esi]
  420f4e:	jne    0x420f32
  420f50:	jl     0x420fb0
  420f52:	nop
  420f53:	sub    DWORD PTR [ecx-0x4d],ebp
  420f56:	pop    es
  420f57:	adc    eax,0xb86e6816
  420f5c:	shl    DWORD PTR [ebp-0x1f],1
  420f5f:	pushf  
  420f60:	ja     0x420fa0
  420f62:	les    ebx,FWORD PTR [esi-0x5dc5e12c]
  420f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f69:	fwait
  420f6a:	dec    esp
  420f6b:	(bad)  
  420f6c:	in     al,0x3f
  420f6e:	push   edi
  420f6f:	dec    esi
  420f70:	sbb    DWORD PTR [edx+0x31],edi
  420f73:	push   edi
  420f74:	pop    eax
  420f75:	or     bl,BYTE PTR [edi]
  420f77:	pop    esp
  420f78:	lods   eax,DWORD PTR ds:[esi]
  420f79:	cdq    
  420f7a:	cmp    bh,BYTE PTR [ecx+0x68]
  420f7d:	ret    0x129
  420f80:	xor    DWORD PTR [ebp+ecx*2-0xf],ecx
  420f84:	xchg   ebx,eax
  420f85:	xchg   ebp,eax
  420f86:	pusha  
  420f87:	mov    bh,0x51
  420f89:	lods   eax,DWORD PTR ds:[esi]
  420f8a:	ja     0x420ffd
  420f8c:	jb     0x420fa8
  420f8e:	ss es pop ds
  420f91:	xchg   ecx,eax
  420f92:	mov    ds:0x9f3d49b0,eax
  420f97:	push   ebx
  420f98:	mov    WORD PTR [ebx-0x2],?
  420f9b:	xchg   ecx,eax
  420f9c:	xchg   esp,eax
  420f9d:	mov    eax,esi
  420f9f:	mov    bl,0xe4
  420fa1:	or     dl,BYTE PTR [eax-0x7]
  420fa4:	(bad)  
  420fa5:	cld    
  420fa6:	mov    eax,DWORD PTR [ebx-0x44]
  420fa9:	and    eax,0x1827d0d6
  420fae:	adc    cl,dh
  420fb0:	pop    ds
  420fb1:	ja     0x420f48
  420fb3:	push   ecx
  420fb4:	xor    eax,0x9d1eca28
  420fb9:	ret    
  420fba:	ins    DWORD PTR es:[edi],dx
  420fbb:	push   eax
  420fbc:	xchg   esi,eax
  420fbd:	xor    esp,DWORD PTR [ebx+0x3c]
  420fc0:	out    0x9a,eax
  420fc2:	(bad)  
  420fc3:	push   ebx
  420fc4:	jmp    0x42103d
  420fc6:	dec    eax
  420fc7:	scas   eax,DWORD PTR es:[edi]
  420fc8:	mov    ah,0x16
  420fca:	xchg   DWORD PTR [edi],esp
  420fcc:	sub    al,0x20
  420fce:	ret    0x4570
  420fd1:	dec    esp
  420fd2:	call   0xf677e7c1
  420fd7:	mov    al,ds:0xb5184933
  420fdc:	jbe    0x420ffc
  420fde:	pop    ecx
  420fdf:	jmp    0x734f:0x4d46eab
  420fe6:	sub    ecx,DWORD PTR [edx-0x44]
  420fe9:	pusha  
  420fea:	das    
  420feb:	ja     0x42103b
  420fed:	xchg   ebx,eax
  420fee:	jnp    0x420fcf
  420ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ff2:	rcl    DWORD PTR [ecx-0x34],cl
  420ff5:	sub    bl,0xb2
  420ff8:	or     DWORD PTR [edx],edx
  420ffa:	dec    ebp
  420ffb:	hlt    
  420ffc:	ror    DWORD PTR [eax-0x6c],0xd6
  421000:	test   al,0xba
  421002:	mov    ds:0xcf9b02f7,eax
  421007:	loope  0x420fde
  421009:	in     eax,0x57
  42100b:	jne    0x420fda
  42100d:	gs and dl,ah
  421010:	adc    DWORD PTR [esi+0x69],esp
  421013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421014:	jo     0x421085
  421016:	pop    ds
  421017:	pop    ecx
  421018:	ret    
  421019:	jnp    0x421013
  42101b:	xchg   ebp,eax
  42101c:	call   0xffc04fbd
  421021:	mov    bl,0x8b
  421023:	pop    es
  421024:	dec    esp
  421025:	rcr    ebp,cl
  421027:	clc    
  421028:	rol    BYTE PTR [ebx+ebp*1],0xbb
  42102c:	scas   al,BYTE PTR es:[edi]
  42102d:	icebp  
  42102e:	jg     0x421073
  421030:	clc    
  421031:	gs sbb edi,edi
  421034:	popf   
  421035:	jg     0x421031
  421037:	enter  0x5972,0xa2
  42103b:	jns    0x421065
  42103d:	gs inc esp
  42103f:	pop    ebp
  421040:	mov    WORD PTR [ecx],es
  421042:	add    al,ch
  421044:	add    DWORD PTR [eax],eax
  421046:	add    BYTE PTR [esi],dl
  421048:	sar    dh,cl
  42104a:	or     ecx,DWORD PTR [eax+0x7edc6223]
  421050:	sub    al,0xc0
  421052:	imul   esi,DWORD PTR [edx],0xffffffbb
  421055:	ja     0x420fdf
  421057:	inc    esp
  421058:	or     al,0xff
  42105a:	fscale 
  42105c:	sub    al,0x33
  42105e:	mov    DWORD PTR [esi-0x61b41795],0x21750158
  421068:	pop    ecx
  421069:	popf   
  42106a:	mov    bh,0x21
  42106c:	lods   al,BYTE PTR ds:[esi]
  42106d:	sti    
  42106e:	mov    ecx,0xfe01c2a5
  421073:	mov    cl,0xbb
  421075:	sahf   
  421076:	lods   al,BYTE PTR ds:[esi]
  421077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421078:	inc    ecx
  421079:	add    DWORD PTR [ebp-0x13],esp
  42107c:	in     al,dx
  42107d:	les    edx,FWORD PTR [edi]
  42107f:	add    bl,BYTE PTR [edi]
  421081:	pop    es
  421082:	mov    esi,0xa7ad69d8
  421087:	and    al,0xf5
  421089:	mov    edx,0x6e92b274
  42108e:	idiv   BYTE PTR [esi+edx*4+0x2e]
  421092:	inc    ebx
  421093:	sub    eax,0x513a8acd
  421098:	pop    ss
  421099:	lods   al,BYTE PTR ds:[esi]
  42109a:	mov    ebp,0x4f570d47
  42109f:	pop    eax
  4210a0:	pusha  
  4210a1:	enter  0xa778,0xe0
  4210a5:	out    dx,al
  4210a6:	inc    ebp
  4210a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210a8:	or     eax,0x683bf90d
  4210ad:	xchg   ecx,eax
  4210ae:	and    DWORD PTR [ecx-0x111318dc],eax
  4210b4:	sbb    DWORD PTR [ebx-0x78],eax
  4210b7:	jmp    0x4210be
  4210b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210ba:	jecxz  0x4210b9
  4210bc:	mov    al,ds:0xc7fe426b
  4210c1:	je     0x4210ce
  4210c3:	jne    0x4210b3
  4210c5:	std    
  4210c6:	push   es
  4210c7:	inc    edx
  4210c8:	dec    ecx
  4210c9:	das    
  4210ca:	js     0x4210f1
  4210cc:	or     al,0x52
  4210ce:	shl    DWORD PTR [edx],cl
  4210d0:	and    al,0xd0
  4210d2:	pop    edi
  4210d3:	call   0x94cf:0xa4030fae
  4210da:	jmp    0x421136
  4210dc:	lods   al,BYTE PTR ds:[esi]
  4210dd:	or     DWORD PTR ds:0x471dacd7,edx
  4210e3:	cmc    
  4210e4:	cli    
  4210e5:	add    dl,dl
  4210e7:	addr16 in eax,dx
  4210e9:	sbb    DWORD PTR es:[ebx+0x6ab1c112],eax
  4210f0:	aaa    
  4210f1:	fst    QWORD PTR [esp+eax*2+0x46]
  4210f5:	push   0x69
  4210f7:	stc    
  4210f8:	xor    eax,0x5ab9001e
  4210fd:	lods   eax,DWORD PTR ds:[esi]
  4210fe:	add    ah,ch
  421100:	sbb    DWORD PTR [edi-0x53],0x40
  421104:	xchg   BYTE PTR [edx-0x4d17accb],dh
  42110a:	rol    BYTE PTR [edx+ebx*4+0x3c],1
  42110e:	add    al,0x83
  421110:	mov    ah,BYTE PTR [edi+0x18]
  421113:	xor    eax,0x76ac4d9c
  421118:	out    0x78,al
  42111a:	sub    BYTE PTR [esi],al
  42111c:	retf   0xac5a
  42111f:	neg    BYTE PTR [edi]
  421121:	pop    eax
  421122:	call   0xb05:0xe9fd1d45
  421129:	dec    ebp
  42112a:	and    DWORD PTR [ebp-0x70a1f6b8],ebx
  421130:	mov    BYTE PTR [edx-0x1d],0xde
  421134:	scas   al,BYTE PTR es:[edi]
  421135:	xor    BYTE PTR [edi-0x1a],dl
  421138:	cs mov dh,0xaa
  42113b:	adc    cl,BYTE PTR [eax+0x69e40949]
  421141:	jmp    0x2e82:0x984fb7da
  421148:	pop    esp
  421149:	fisttp QWORD PTR [edx-0x5e]
  42114c:	pop    ebx
  42114d:	pop    ecx
  42114e:	aaa    
  42114f:	adc    DWORD PTR [ebp+0x69],ebx
  421152:	jb     0x42119a
  421154:	les    esi,FWORD PTR [eax+0x4dab9bf7]
  42115a:	mov    al,0x4e
  42115c:	push   0x8b596396
  421161:	add    ch,cl
  421163:	and    BYTE PTR [ebx+0x139cf3b0],bl
  421169:	push   ebx
  42116a:	inc    eax
  42116b:	cdq    
  42116c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42116d:	dec    ecx
  42116e:	add    al,0xac
  421170:	(bad)  
  421171:	sar    cl,1
  421173:	bound  edx,QWORD PTR [ebx+0x5a]
  421176:	rcl    BYTE PTR [ebx],0x32
  421179:	mov    ebx,0x670c7f29
  42117e:	fs xchg ecx,eax
  421180:	lea    esp,[eax]
  421182:	mov    edx,0xa61cca2f
  421187:	ret    0x94df
  42118a:	ins    BYTE PTR es:[edi],dx
  42118b:	mov    ah,0x99
  42118d:	or     ebx,edx
  42118f:	push   ebp
  421190:	jl     0x42117a
  421192:	jl     0x4211ec
  421194:	mov    edx,0x67eb4780
  421199:	pop    ebx
  42119a:	push   ss
  42119b:	push   ebp
  42119c:	ficom  DWORD PTR [ebp+0x23]
  42119f:	xchg   BYTE PTR [edi],ah
  4211a1:	dec    ebx
  4211a2:	push   ebx
  4211a3:	xor    ch,BYTE PTR [ebp+ebp*1-0x6e]
  4211a7:	mov    dl,0x44
  4211a9:	fwait
  4211aa:	sbb    eax,0xcf5c8709
  4211af:	icebp  
  4211b0:	(bad)  
  4211b1:	out    0x17,eax
  4211b3:	outs   dx,BYTE PTR ds:[esi]
  4211b4:	out    dx,al
  4211b5:	call   0x4887:0xa9e7f457
  4211bc:	stos   BYTE PTR es:[edi],al
  4211bd:	into   
  4211be:	mov    bh,0xd4
  4211c0:	out    dx,eax
  4211c1:	jp     0x421169
  4211c3:	hlt    
  4211c4:	mov    al,ds:0x81c044b7
  4211c9:	ins    DWORD PTR es:[edi],dx
  4211ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211cb:	je     0x42115a
  4211cd:	imul   esp
  4211cf:	sbb    esp,0xffffffd7
  4211d2:	push   edx
  4211d3:	cmp    bl,BYTE PTR [esi+0x5f]
  4211d6:	xchg   BYTE PTR [edx+ecx*2],ch
  4211d9:	mov    esp,0x84a9fa23
  4211de:	scas   eax,DWORD PTR es:[edi]
  4211df:	adc    eax,DWORD PTR [edi]
  4211e1:	add    dh,dl
  4211e3:	js     0x421246
  4211e5:	call   0x74dc:0x40940cba
  4211ec:	sti    
  4211ed:	mov    bl,0xf1
  4211ef:	les    edx,FWORD PTR [edx]
  4211f1:	pusha  
  4211f2:	push   ds
  4211f3:	or     BYTE PTR [eax+0x7e794193],0xae
  4211fa:	out    dx,al
  4211fb:	js     0x42119d
  4211fd:	pop    ss
  4211fe:	scas   eax,DWORD PTR es:[edi]
  4211ff:	cmovns ecx,edx
  421202:	in     eax,dx
  421203:	mov    eax,0x993f6cbc
  421208:	mov    esi,0xf445fd13
  42120d:	aas    
  42120e:	sbb    DWORD PTR [ebx],0x33
  421211:	hlt    
  421212:	je     0x4211a9
  421214:	dec    esi
  421215:	bound  esp,QWORD PTR [ecx]
  421217:	jmp    0xd45ecf2e
  42121c:	js     0x421264
  42121e:	daa    
  42121f:	dec    edi
  421220:	(bad)  
  421221:	mov    esi,esi
  421223:	jge    0x42126c
  421225:	lahf   
  421226:	sbb    dh,BYTE PTR [ecx+ecx*2]
  421229:	test   eax,0x447c11e6
  42122e:	xchg   edi,eax
  42122f:	pop    es
  421230:	sbb    BYTE PTR [esi+0x3fbf9fa7],0xa2
  421237:	loope  0x421292
  421239:	ss add bl,ah
  42123c:	pushf  
  42123d:	repnz pusha 
  42123f:	inc    ebp
  421240:	mov    es,WORD PTR [ecx]
  421242:	add    al,ch
  421244:	add    DWORD PTR [eax],eax
  421246:	add    BYTE PTR [edx],bl
  421248:	sub    eax,0x659fcc72
  42124d:	push   ecx
  42124e:	jle    0x4212bb
  421250:	cdq    
  421251:	iret   
  421252:	or     ch,BYTE PTR [ebp-0x6f]
  421255:	or     ebp,esi
  421257:	pop    ebx
  421258:	in     al,dx
  421259:	fisubr DWORD PTR [esi+0x1dd46b20]
  42125f:	and    dl,BYTE PTR [edi+0x3d]
  421262:	sub    cl,BYTE PTR [edi]
  421264:	or     ecx,ebx
  421266:	pusha  
  421267:	(bad)  
  421268:	cmc    
  421269:	xchg   ecx,eax
  42126a:	jo     0x42129e
  42126c:	cmp    eax,esp
  42126e:	pop    ebx
  42126f:	pop    ebp
  421270:	push   esp
  421271:	mov    al,ds:0x464aa015
  421276:	and    bl,dh
  421278:	xchg   edx,eax
  421279:	sbb    edx,DWORD PTR [esi]
  42127b:	adc    DWORD PTR [esp+edx*8-0x8],esi
  42127f:	push   0xffffffb2
  421281:	out    dx,eax
  421282:	out    dx,al
  421283:	cli    
  421284:	jmp    0x421224
  421286:	inc    edx
  421287:	inc    esp
  421288:	loope  0x4212cd
  42128a:	xchg   DWORD PTR [eax+0x4f33ea6],ebp
  421290:	and    bh,ch
  421292:	iret   
  421293:	jb     0x4212ad
  421295:	test   bl,bl
  421297:	dec    ebp
  421298:	xchg   ecx,esi
  42129a:	lahf   
  42129b:	and    BYTE PTR [ebx-0x4a0297b5],0x34
  4212a2:	in     eax,0x59
  4212a4:	rcl    DWORD PTR [ebx],1
  4212a6:	mov    edx,0xc3a3a398
  4212ab:	dec    ecx
  4212ac:	push   0xffffff87
  4212ae:	cmp    DWORD PTR [eax+ecx*4],edi
  4212b1:	pop    ebp
  4212b2:	pop    edi
  4212b3:	or     eax,0x5104215f
  4212b8:	xor    eax,0xb08bfa4
  4212bd:	mov    BYTE PTR [ebx+0x75],0x32
  4212c1:	mov    cl,0xfb
  4212c3:	mov    ch,0xfd
  4212c5:	push   eax
  4212c6:	pop    esi
  4212c7:	fwait
  4212c8:	mov    eax,0xfc73be33
  4212cd:	mov    ebp,0xfb1e604c
  4212d2:	ds and al,0x61
  4212d5:	loope  0x4212fc
  4212d7:	gs cli 
  4212d9:	push   ebp
  4212da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212db:	jo     0x421325
  4212dd:	xor    al,0x9d
  4212df:	pop    es
  4212e0:	mov    WORD PTR [edx],fs
  4212e2:	ret    
  4212e3:	jle    0x421359
  4212e5:	add    ch,BYTE PTR [edi+0x22]
  4212e8:	xor    ebx,ebx
  4212ea:	xchg   edx,eax
  4212eb:	or     eax,0x2d3a4c2e
  4212f0:	sahf   
  4212f1:	and    ecx,DWORD PTR [edi+0x66]
  4212f4:	pop    edi
  4212f5:	fucomp st(6)
  4212f7:	dec    esi
  4212f8:	test   al,0x17
  4212fa:	test   DWORD PTR [edi+0x71],edx
  4212fd:	rcr    BYTE PTR [edx-0x6f1ec222],0xac
  421304:	stc    
  421305:	pop    esp
  421306:	mov    eax,ds:0xc4d4fe0c
  42130b:	out    0x34,al
  42130d:	sbb    DWORD PTR [ebp+0x58904ca8],edi
  421313:	jbe    0x4212db
  421315:	push   es
  421316:	dec    esi
  421317:	(bad)  
  421318:	dec    ebx
  421319:	test   BYTE PTR [ebx],ch
  42131b:	lea    ebx,[edx+0x45ad3919]
  421321:	jno    0x4212f4
  421323:	mov    ss,WORD PTR [esi]
  421325:	fld    TBYTE PTR [edi-0x4c]
  421328:	mov    eax,0xaac07fd1
  42132d:	pop    esp
  42132e:	push   0x4f00cb94
  421333:	sub    eax,0x98c3d9bd
  421338:	jnp    0x421330
  42133a:	leave  
  42133b:	test   al,0x9
  42133d:	(bad)  
  42133e:	fnstenv [ebp+0xb]
  421341:	cmp    ebp,edi
  421343:	push   eax
  421344:	call   FWORD PTR [ecx]
  421346:	add    al,0x9f
  421348:	jmp    0xcefedf23
  42134d:	xlat   BYTE PTR ds:[ebx]
  42134e:	test   DWORD PTR [edi+0x2c2b490e],edi
  421354:	ins    BYTE PTR es:[edi],dx
  421355:	frstor [edx+0x5c1c856d]
  42135b:	mov    edx,0x3a3249e0
  421360:	and    eax,0x42cd69b0
  421365:	cmp    BYTE PTR [ebx+edx*8+0x360e2c7d],al
  42136c:	or     DWORD PTR [ebx-0x35],esi
  42136f:	add    DWORD PTR [eax],ebx
  421371:	push   eax
  421372:	dec    ebp
  421373:	adc    al,0xd7
  421375:	push   edx
  421376:	mov    ch,bl
  421378:	outs   dx,DWORD PTR ds:[esi]
  421379:	fstp   DWORD PTR [edi+ebp*4-0x786c2f4c]
  421380:	lds    ebx,FWORD PTR [ebp+0x979f4cb]
  421386:	xor    BYTE PTR [esp+ecx*8],al
  421389:	int3   
  42138a:	inc    ebp
  42138b:	retf   0xf111
  42138e:	loopne 0x42139c
  421390:	and    al,0x8
  421392:	dec    ebx
  421393:	adc    esp,DWORD PTR [esi+0x72]
  421396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421397:	lods   al,BYTE PTR ds:[esi]
  421398:	sar    BYTE PTR [edi],0x73
  42139b:	lahf   
  42139c:	repz mov edx,0x69ca033f
  4213a2:	and    dh,ch
  4213a4:	pop    ebx
  4213a5:	push   esi
  4213a6:	sti    
  4213a7:	stos   BYTE PTR es:[edi],al
  4213a8:	xchg   ebp,eax
  4213a9:	data16 cmp dh,BYTE PTR ds:0x35363b1a
  4213b0:	push   edx
  4213b1:	std    
  4213b2:	sub    al,0x6f
  4213b4:	ss mov BYTE PTR gs:[edi+0x60],al
  4213b9:	xchg   edi,eax
  4213ba:	js     0x42142e
  4213bc:	pop    esi
  4213bd:	test   eax,0x8232ea62
  4213c2:	gs nop
  4213c4:	jl     0x4213c4
  4213c6:	xchg   ebx,eax
  4213c7:	sub    DWORD PTR [ebx+0x4c],edx
  4213ca:	into   
  4213cb:	mov    al,ds:0x4bada48a
  4213d0:	lock inc ecx
  4213d2:	ret    
  4213d3:	mov    eax,0x2b3912d2
  4213d8:	cmp    al,0xee
  4213db:	push   edi
  4213dc:	loop   0x4213e3
  4213de:	inc    eax
  4213df:	xor    ch,BYTE PTR [edi]
  4213e1:	std    
  4213e2:	das    
  4213e3:	fcmove st,st(3)
  4213e5:	push   0xffffff96
  4213e7:	out    0x53,eax
  4213e9:	xchg   ebx,eax
  4213ea:	ja     0x4213cb
  4213ec:	(bad)  
  4213ed:	dec    edi
  4213ee:	or     BYTE PTR [esi-0x2c],al
  4213f1:	pop    ebx
  4213f2:	mov    edx,DWORD PTR [esi+0x39]
  4213f5:	mov    esi,0xda6a80b0
  4213fa:	daa    
  4213fb:	out    dx,al
  4213fc:	xor    eax,0x3c976ada
  421401:	add    DWORD PTR [edi+0x42d54a1b],0x4e
  421408:	and    al,0x6c
  42140a:	loope  0x421423
  42140c:	fld    TBYTE PTR [eax-0x6e]
  42140f:	test   DWORD PTR [edi],eax
  421411:	and    BYTE PTR [esi+edi*1-0x40],0xb6
  421416:	push   eax
  421417:	(bad)  
  421418:	retf   0xe897
  42141b:	dec    edx
  42141c:	jl     0x4213e0
  42141e:	mov    BYTE PTR [edx+0x3c],bh
  421421:	pop    eax
  421422:	lds    esp,FWORD PTR [edx+0x4f]
  421425:	jge    0x421478
  421427:	jmp    0x4213ed
  421429:	mov    cs,WORD PTR [ebx-0x74]
  42142c:	scas   eax,DWORD PTR es:[edi]
  42142d:	pop    ecx
  42142e:	int3   
  42142f:	jecxz  0x421419
  421431:	nop
  421432:	rcr    BYTE PTR [ebx+0x1bfbe3f8],1
  421438:	and    ecx,0x54aee69f
  42143e:	or     al,0x2d
  421440:	nop
  421441:	add    DWORD PTR [eax],eax
  421443:	call   0x1c421449
  421448:	test   BYTE PTR [edi+0x5fcc0ad],ah
  42144e:	pop    eax
  42144f:	stos   BYTE PTR es:[edi],al
  421450:	or     esp,DWORD PTR [ecx+esi*1]
  421453:	sar    DWORD PTR [eax+0x38],1
  421456:	xor    al,0x4a
  421458:	test   BYTE PTR [si],ah
  42145b:	dec    BYTE PTR [eax+0x37]
  42145e:	gs sahf 
  421460:	xlat   BYTE PTR ds:[ebx]
  421461:	sub    ebx,esp
  421463:	(bad)  
  421464:	loopne 0x42140b
  421466:	pop    esi
  421467:	mov    ah,0x16
  421469:	retf   
  42146a:	push   cs
  42146b:	(bad)  
  42146e:	add    edi,edi
  421470:	shl    BYTE PTR [edx-0x1e],1
  421473:	pop    edx
  421474:	push   cs
  421475:	jo     0x421444
  421477:	ins    BYTE PTR es:[edi],dx
  421478:	cmp    DWORD PTR [edx-0xe1cd97f],ebp
  42147e:	(bad)  
  42147f:	xchg   ebp,eax
  421480:	retf   
  421481:	ins    DWORD PTR es:[edi],dx
  421482:	mov    WORD PTR [eax-0x20d16e65],fs
  421488:	inc    esp
  421489:	test   DWORD PTR [esi-0x1ae91ac4],esi
  42148f:	mov    eax,DWORD PTR [edi-0x78]
  421492:	adc    eax,0x6143ce1a
  421497:	std    
  421498:	push   ds
  421499:	mov    eax,0x9c1dbde6
  42149e:	and    dl,bh
  4214a0:	xchg   ebx,eax
  4214a1:	mov    al,ds:0x28fb4ac9
  4214a6:	pop    ecx
  4214a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214a8:	pop    ebx
  4214a9:	fdivr  QWORD PTR [ebx+0x2e]
  4214ac:	es pushf 
  4214ae:	rcr    edx,cl
  4214b0:	cmp    BYTE PTR [ecx-0x4f5c487a],al
  4214b6:	push   0xffffffe0
  4214b8:	mov    eax,ds:0xb2c804d9
  4214bd:	stos   BYTE PTR es:[edi],al
  4214be:	sbb    BYTE PTR [eax-0x623fb43d],bl
  4214c4:	mov    es,WORD PTR [ebp-0x104c58ae]
  4214ca:	cli    
  4214cb:	jbe    0x4214e9
  4214cd:	mov    esp,0xc7afdc6b
  4214d2:	fsub   DWORD PTR [edi-0x59]
  4214d5:	retf   
  4214d6:	push   esp
  4214d7:	jmp    DWORD PTR [ebp-0x67d9cd6f]
  4214dd:	sbb    BYTE PTR [esi],bl
  4214df:	mov    eax,ds:0x55c4b133
  4214e4:	xor    dl,al
  4214e6:	sub    dl,bl
  4214e8:	mov    ebx,0x96f16e3a
  4214ed:	repnz int 0xd7
  4214f0:	dec    edi
  4214f1:	sub    BYTE PTR [ebp+0x1608ffe2],0xe1
  4214f8:	jno    0x4214e1
  4214fa:	call   0x59a3:0xd29c2d12
  421501:	in     eax,0x48
  421503:	ss loopne 0x421577
  421506:	mov    DWORD PTR [eax+0x42975084],eax
  42150c:	sbb    ebx,ebx
  42150e:	xchg   sp,ax
  421510:	jne    0x4214df
  421512:	das    
  421513:	test   al,0x86
  421515:	adc    BYTE PTR [ecx],dl
  421517:	cmp    BYTE PTR [ebx+eiz*4-0x128c9e0],0x57
  42151f:	push   cs
  421520:	stc    
  421521:	and    BYTE PTR [esi],0x86
  421524:	jg     0xe0301cf4
  42152a:	popa   
  42152b:	ficomp WORD PTR [esi+0x6]
  42152e:	jecxz  0x42153f
  421530:	lods   eax,DWORD PTR ds:[esi]
  421531:	pop    esi
  421532:	xor    bl,BYTE PTR [esi-0x37]
  421535:	add    al,0xd1
  421537:	push   ds
  421538:	cld    
  421539:	rcl    DWORD PTR es:[edx],0x71
  42153d:	(bad)
  421540:	mov    edx,0xed4cb593
  421545:	loop   0x42156d
  421547:	fsub   QWORD PTR [esi]
  421549:	jg     0x421514
  42154b:	stos   DWORD PTR es:[edi],eax
  42154c:	xor    eax,0x88394c37
  421551:	mov    ?,esp
  421553:	and    BYTE PTR [ecx-0x5e722d20],cl
  421559:	daa    
  42155a:	das    
  42155b:	xor    DWORD PTR [ebx],0x68
  42155e:	dec    edx
  421560:	push   ecx
  421561:	pop    ebp
  421562:	test   BYTE PTR [esi],dl
  421564:	jo     0x421537
  421566:	mov    edi,0xd4e16cad
  42156b:	shr    BYTE PTR [edx+0x2a],0x87
  42156f:	push   cs
  421570:	gs sbb cl,cl
  421573:	sub    esp,esi
  421575:	das    
  421576:	or     cl,BYTE PTR [ecx-0x5b99cf43]
  42157c:	dec    ecx
  42157d:	(bad)
  421580:	(bad)  
  421581:	test   eax,0xde55d21b
  421586:	mov    al,ds:0x61b7946b
  42158b:	push   edx
  42158c:	mov    ds:0x20029559,al
  421591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421592:	push   eax
  421593:	dec    esi
  421594:	and    eax,0x9e00082d
  421599:	mov    ecx,0x9f84b1c
  42159e:	xor    eax,0x3890d9d1
  4215a3:	mov    bh,0xc
  4215a5:	out    dx,eax
  4215a6:	mov    ah,0x3d
  4215a8:	aam    0x80
  4215aa:	shr    ecx,cl
  4215ac:	sbb    DWORD PTR [ebx],esi
  4215ae:	inc    edi
  4215af:	js     0x42161a
  4215b1:	sub    BYTE PTR [edi],dh
  4215b3:	mov    ebp,0xa7b779f5
  4215b8:	ins    BYTE PTR es:[edi],dx
  4215b9:	lods   eax,DWORD PTR ds:[esi]
  4215ba:	outs   dx,DWORD PTR ds:[esi]
  4215bb:	and    ebx,DWORD PTR [ebx+0x2d]
  4215be:	mov    ecx,0x2b15eb04
  4215c3:	inc    ebp
  4215c4:	js     0x4215fa
  4215c6:	push   eax
  4215c7:	lock jl 0x421628
  4215ca:	jle    0x4215e0
  4215cc:	pop    ecx
  4215cd:	pop    ecx
  4215ce:	imul   BYTE PTR [ecx-0x4a765950]
  4215d4:	mov    edx,0x706e5286
  4215d9:	mov    dl,BYTE PTR [eax]
  4215db:	xchg   ecx,eax
  4215dc:	sub    DWORD PTR [ebx],esp
  4215de:	out    0x6b,eax
  4215e0:	fucomp st(2)
  4215e2:	iret   
  4215e3:	je     0x421635
  4215e5:	popa   
  4215e6:	(bad)  
  4215e7:	out    0xb6,al
  4215e9:	es jne 0x4215a3
  4215ec:	jbe    0x421594
  4215ee:	(bad)  
  4215ef:	pop    edi
  4215f0:	hlt    
  4215f1:	ret    0xec50
  4215f4:	addr16 aas 
  4215f6:	neg    eax
  4215f8:	and    eax,0xbd5a60ee
  4215fd:	data16 mov cl,0xa5
  421600:	test   DWORD PTR [eax-0x2e4997e2],esi
  421606:	push   edx
  421607:	mov    al,0xc9
  421609:	(bad)  
  42160a:	lods   al,BYTE PTR ds:[esi]
  42160b:	xor    BYTE PTR [eax],ch
  42160d:	cmp    ebx,esp
  42160f:	ja     0x4215f8
  421611:	sbb    al,0xf6
  421613:	push   0xffffff95
  421615:	popa   
  421616:	sub    DWORD PTR [ecx+0x753bffd7],eax
  42161c:	mov    edx,0xdb30b79a
  421621:	aad    0x50
  421623:	push   ecx
  421624:	ror    BYTE PTR [esi],cl
  421626:	leave  
  421627:	test   eax,0x43fae8f5
  42162c:	in     al,dx
  42162d:	dec    eax
  42162e:	push   ebx
  42162f:	out    dx,al
  421630:	data16 hlt 
  421632:	lods   eax,DWORD PTR ds:[esi]
  421633:	cld    
  421634:	mov    edi,0x9c9c67ff
  421639:	push   edi
  42163a:	jge    0x421648
  42163c:	out    0x12,al
  42163e:	xchg   edx,eax
  42163f:	adc    eax,0xe8000192
  421644:	add    DWORD PTR [eax],eax
  421646:	add    dh,ah
  421648:	imul   ebx,DWORD PTR [eax+0x4761bcf],0xffffffa6
  42164f:	gs aam 0x6b
  421652:	int    0xc9
  421654:	fucomi st,st(0)
  421656:	or     BYTE PTR ds:0x4ea052d8,ch
  42165c:	das    
  42165d:	loope  0x42166b
  42165f:	and    DWORD PTR [edi],0xec8378bd
  421665:	mov    al,ds:0x8cbb9796
  42166a:	jns    0x42163e
  42166c:	aas    
  42166d:	call   0x52e19369
  421672:	loop   0x42167c
  421674:	pop    edi
  421675:	push   ds
  421676:	out    0xc2,al
  421678:	dec    ebx
  421679:	jnp    0x4216f2
  42167b:	adc    al,0x26
  42167d:	aas    
  42167e:	sbb    BYTE PTR [eax-0x3a],ch
  421681:	pop    esi
  421682:	icebp  
  421683:	stos   DWORD PTR es:[edi],eax
  421684:	repnz repnz mov ch,0x2d
  421688:	daa    
  421689:	test   esi,ebx
  42168b:	loop   0x421632
  42168d:	push   edi
  42168e:	inc    BYTE PTR [ebx]
  421690:	inc    edx
  421691:	jg     0x421626
  421693:	push   esi
  421694:	mov    ch,0x21
  421696:	push   ecx
  421697:	stos   DWORD PTR es:[edi],eax
  421698:	mov    eax,ds:0x18c298fc
  42169d:	pop    esp
  42169e:	cld    
  42169f:	inc    ecx
  4216a0:	mov    ch,dl
  4216a2:	hlt    
  4216a3:	pop    ebx
  4216a4:	pop    ecx
  4216a5:	push   es
  4216a6:	test   DWORD PTR [ebp-0x29],esp
  4216a9:	sbb    al,0xfd
  4216ab:	retf   0x23f1
  4216ae:	cmp    eax,0x651087f4
  4216b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216b4:	pop    ss
  4216b5:	sub    DWORD PTR [eax+0x6c3775ad],esi
  4216bb:	jg     0x4216f5
  4216bd:	fptan  
  4216bf:	pop    edx
  4216c0:	call   0x9f35:0x88f4cebf
  4216c7:	std    
  4216c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216c9:	push   eax
  4216ca:	ss mov bl,0x35
  4216cd:	mov    ebx,0x9b8bf8eb
  4216d2:	pop    edx
  4216d3:	dec    edi
  4216d4:	pop    esi
  4216d5:	xor    esi,esp
  4216d7:	add    eax,0x13576ff9
  4216dc:	xor    dh,0xee
  4216df:	jmp    0x4216d9
  4216e1:	mov    cl,0x20
  4216e3:	clc    
  4216e4:	xor    al,0xdf
  4216e6:	int3   
  4216e7:	dec    ecx
  4216e8:	scas   al,BYTE PTR es:[edi]
  4216e9:	jmp    0x19399e26
  4216ee:	jl     0x42171b
  4216f0:	outs   dx,DWORD PTR ds:[esi]
  4216f1:	ja     0x421708
  4216f3:	xor    al,0x6d
  4216f5:	jo     0x421687
  4216f7:	mov    edx,0x10fe8df0
  4216fc:	xchg   ebx,eax
  4216fd:	mov    dh,0xe5
  4216ff:	outs   dx,BYTE PTR ds:[esi]
  421700:	jo     0x421778
  421702:	hlt    
  421703:	sti    
  421704:	push   ss
  421705:	and    DWORD PTR [esi],esi
  421707:	popf   
  421708:	test   eax,0xdc827c11
  42170d:	leave  
  42170e:	push   eax
  42170f:	jne    0x4216c7
  421711:	bound  edi,QWORD PTR [ecx]
  421713:	ret    0xeb8a
  421716:	inc    ebp
  421717:	mov    esp,0x7c38bb4
  42171c:	sub    eax,0x387d23e6
  421721:	and    eax,0xf1753b63
  421726:	or     dh,ch
  421728:	arpl   WORD PTR [eax],si
  42172a:	cmp    DWORD PTR [ecx+0x9],edx
  42172d:	mov    al,0x8f
  42172f:	adc    esi,DWORD PTR [eax-0x1f74ae4f]
  421735:	xchg   edx,eax
  421736:	fiadd  WORD PTR [ecx-0x787677bd]
  42173c:	jg     0x4217a6
  42173e:	test   BYTE PTR [eax+0x61],ah
  421741:	or     dh,BYTE PTR [ebx]
  421743:	push   cs
  421744:	(bad)  
  421745:	mov    ds:0xd3f7bad1,eax
  42174a:	adc    al,0x31
  42174c:	cmp    esi,DWORD PTR [eax]
  42174e:	pop    ds
  42174f:	dec    edi
  421750:	inc    esi
  421751:	inc    ecx
  421752:	jg     0x42179a
  421754:	stos   BYTE PTR es:[edi],al
  421755:	inc    esi
  421756:	or     al,0xf5
  421758:	cmp    al,0xc4
  42175a:	retf   
  42175b:	jae    0x42173b
  42175d:	mov    DWORD PTR [ecx],ecx
  42175f:	and    ah,BYTE PTR [esi]
  421761:	pop    ss
  421762:	popa   
  421763:	pop    ebx
  421764:	sbb    al,0x31
  421766:	test   BYTE PTR [ebx+0x79],bl
  421769:	mov    dh,0x55
  42176b:	ja     0x421762
  42176d:	mov    bl,0xc4
  42176f:	jge    0x421734
  421771:	mov    BYTE PTR [esi-0x73e6aa25],dh
  421777:	setns  BYTE PTR [ebp+0x42f49742]
  42177e:	pop    eax
  42177f:	pop    ebp
  421780:	mov    eax,ds:0x95cd829
  421785:	into   
  421786:	loop   0x4217f7
  421788:	repnz mov esp,0x229b5db1
  42178e:	jg     0x42179a
  421790:	sub    ebp,ecx
  421792:	push   0x50d50337
  421797:	push   esp
  421798:	and    BYTE PTR [eax],ah
  42179a:	add    al,0xfa
  42179c:	adc    eax,0xa780884
  4217a1:	lds    ebp,FWORD PTR ds:0x77203ca7
  4217a7:	jmp    0xca1d:0xb83402a8
  4217ae:	das    
  4217af:	pop    ecx
  4217b1:	sbb    eax,0xccef2178
  4217b6:	loopne 0x42180c
  4217b8:	bound  eax,QWORD PTR [eax-0x2e]
  4217bb:	pop    edi
  4217bc:	ins    BYTE PTR es:[edi],dx
  4217bd:	pop    esp
  4217be:	xor    DWORD PTR [ecx],0xfffffffb
  4217c1:	push   DWORD PTR ds:[eax+0x50ee7a5]
  4217c8:	hlt    
  4217c9:	daa    
  4217ca:	cmp    eax,0xb01ab4ed
  4217cf:	dec    ebp
  4217d0:	jp     0x421770
  4217d2:	ficom  WORD PTR [edi+0x5b]
  4217d5:	sbb    ebp,edx
  4217d7:	inc    ecx
  4217d8:	in     eax,dx
  4217d9:	aam    0x77
  4217db:	and    bl,BYTE PTR [esi-0x3c45e9a9]
  4217e1:	hlt    
  4217e2:	outs   dx,DWORD PTR ds:[esi]
  4217e3:	out    dx,eax
  4217e4:	enter  0x8c5b,0x54
  4217e8:	jl     0x4217a3
  4217ea:	ficomp DWORD PTR ds:0xec167b10
  4217f0:	popa   
  4217f1:	aaa    
  4217f2:	test   DWORD PTR [edi+eiz*1+0x34],ecx
  4217f6:	ins    DWORD PTR es:[edi],dx
  4217f7:	mov    bh,0xe4
  4217f9:	push   edx
  4217fa:	mov    ecx,0xf534161
  4217ff:	push   ebx
  421800:	call   0x39d4bedf
  421805:	ds push ebx
  421807:	cmp    eax,0x836bace6
  42180c:	dec    edx
  42180d:	dec    ecx
  42180e:	add    ebx,ebp
  421810:	jmp    0xed52193
  421815:	sbb    ebx,DWORD PTR [esi+0xfd414b]
  42181b:	adc    al,0xef
  42181d:	inc    ecx
  42181e:	adc    ecx,edx
  421820:	lea    ecx,[ecx+0x43c4b35f]
  421826:	sbb    eax,0xfc72459e
  42182b:	adc    DWORD PTR [ecx],esp
  42182d:	ret    
  42182e:	mov    DWORD PTR ds:0x7fd60e68,edx
  421834:	neg    ch
  421836:	jmp    0x4217ef
  421838:	popa   
  421839:	test   eax,0x77c41fb1
  42183e:	hlt    
  42183f:	std    
  421840:	xchg   ebx,eax
  421841:	add    DWORD PTR [eax],eax
  421843:	call   0xef421849
  421848:	jle    0x421815
  42184a:	jne    0x421841
  42184c:	or     edi,esi
  42184e:	les    esp,FWORD PTR [ecx]
  421850:	xchg   ebp,eax
  421851:	imul   edx,DWORD PTR [edi],0x43b66979
  421857:	enter  0xee4e,0xca
  42185b:	in     al,dx
  42185c:	jno    0x42185d
  42185e:	xlat   BYTE PTR ds:[ebx]
  42185f:	adc    DWORD PTR [edx+0x4168505b],esi
  421865:	nop
  421866:	inc    eax
  421867:	retf   0x2ee4
  42186a:	hlt    
  42186b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42186c:	(bad)  
  42186e:	std    
  42186f:	popa   
  421870:	mov    ecx,0x87e0ed27
  421875:	sub    al,0xf8
  421877:	inc    ebx
  421878:	fsubr  DWORD PTR [ebp-0x40]
  42187b:	push   ebp
  42187c:	lds    ebx,FWORD PTR [ecx+0x2476ac6]
  421882:	push   edi
  421883:	add    eax,0x5ac01df6
  421888:	sub    eax,0x74c4959e
  42188d:	in     al,0xd6
  42188f:	pop    ss
  421890:	jle    0x421894
  421892:	add    BYTE PTR [ebx-0x7b],bh
  421895:	(bad)  
  421896:	push   eax
  421897:	jnp    0x42186d
  421899:	xor    BYTE PTR [edi],ch
  42189b:	fiadd  DWORD PTR [edx-0x1debc207]
  4218a1:	xor    dl,dl
  4218a3:	rcl    esi,1
  4218a5:	sti    
  4218a6:	stos   DWORD PTR es:[edi],eax
  4218a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218a8:	loop   0x421880
  4218aa:	mov    esi,0x1b15a0f
  4218af:	xor    BYTE PTR [edx+0x76f80886],dh
  4218b5:	je     0x421911
  4218b7:	or     ch,BYTE PTR [ebp-0x76]
  4218ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218bb:	jp     0x42189c
  4218bd:	pop    edx
  4218be:	imul   edx,DWORD PTR [esp+ebx*8],0xffffffd8
  4218c2:	xor    eax,0x6c129926
  4218c7:	jle    0x4218d3
  4218c9:	call   0xe679:0x78de89c0
  4218d0:	mov    dl,0xd8
  4218d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218d3:	lahf   
  4218d4:	and    al,BYTE PTR [ecx+0x6c649f2c]
  4218da:	adc    al,0x4d
  4218dc:	xchg   BYTE PTR [esi+0xb],bl
  4218df:	sbb    dl,BYTE PTR [ebp-0x63255cbc]
  4218e5:	and    esi,eax
  4218e7:	es inc edi
  4218e9:	int3   
  4218ea:	scas   al,BYTE PTR es:[edi]
  4218eb:	enter  0x9197,0x2b
  4218ef:	scas   al,BYTE PTR es:[edi]
  4218f0:	arpl   ax,bx
  4218f2:	mov    ecx,0xbf1355e0
  4218f7:	mov    bh,0xf2
  4218f9:	call   0xc38f:0x4d25897a
  421900:	fldenv [esi+0x56]
  421903:	adc    eax,0xb50ff402
  421908:	sbb    edi,ebx
  42190a:	xchg   esi,eax
  42190b:	dec    esi
  42190c:	jns    0x4218a3
  42190e:	push   0xbf1cfa0d
  421913:	xchg   edi,eax
  421914:	shl    bl,0x7
  421917:	jmp    0xf09f9409
  42191c:	and    al,cl
  42191e:	(bad)  
  42191f:	popa   
  421920:	mov    BYTE PTR [ecx+0x2bf8ddf7],bh
  421926:	mov    dl,0x2c
  421928:	pop    ebx
  421929:	in     al,0x6
  42192b:	sbb    eax,0xbe145bed
  421930:	pushf  
  421931:	mov    ebx,0xcc4a4975
  421936:	idiv   BYTE PTR [eax+0x2b150d9e]
  42193c:	mov    ds:0x5eb4c6b6,al
  421941:	xor    edx,DWORD PTR [edx*2-0x47b632fb]
  421948:	push   cs
  421949:	push   0xffffffe9
  42194b:	out    dx,eax
  42194c:	std    
  42194d:	stos   BYTE PTR es:[edi],al
  42194e:	inc    esp
  42194f:	mov    ecx,0x9164333d
  421954:	addr16 jmp 0x421954
  421957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421958:	jmp    0x421931
  42195a:	pop    ss
  42195b:	repnz sbb ecx,esi
  42195e:	mov    esi,0xf92a95ef
  421963:	repz adc eax,0x1e0754f7
  421969:	xor    al,0x4f
  42196b:	cld    
  42196c:	out    0x19,al
  42196e:	sub    ebx,ebx
  421970:	cld    
  421971:	pop    ds
  421972:	pop    ebp
  421973:	xchg   ecx,eax
  421974:	add    ebp,eax
  421976:	gs add al,0xe1
  421979:	xchg   edi,eax
  42197a:	sbb    eax,DWORD PTR [eax-0x18]
  42197d:	dec    eax
  42197e:	mov    ds:0xff7fd27b,al
  421983:	or     bl,BYTE PTR ss:[esi+0x48265ecd]
  42198a:	inc    ebp
  42198b:	cs dec edi
  42198d:	mov    cl,0xcd
  42198f:	loopne 0x421965
  421991:	xor    al,0xcf
  421993:	std    
  421994:	test   eax,ebx
  421996:	mov    WORD PTR [ebp+0x1f70ebeb],cs
  42199c:	sti    
  42199d:	sub    BYTE PTR [eax-0x26],cl
  4219a0:	mov    cl,0xfb
  4219a2:	or     cl,dh
  4219a4:	and    ecx,DWORD PTR [eax+0x3b]
  4219a7:	(bad)  
  4219a8:	xchg   edx,eax
  4219a9:	jbe    0x421993
  4219ab:	xchg   edx,eax
  4219ac:	sahf   
  4219ad:	pop    esp
  4219ae:	push   edx
  4219af:	jbe    0x421961
  4219b1:	mov    ebx,0x31669a1e
  4219b6:	inc    ebx
  4219b7:	lods   al,BYTE PTR ds:[esi]
  4219b8:	mov    ebx,0x233a036e
  4219bd:	(bad)  
  4219be:	retf   
  4219bf:	bnd jnp 0x42196f
  4219c2:	lods   eax,DWORD PTR ds:[esi]
  4219c3:	aam    0xc8
  4219c5:	cdq    
  4219c6:	push   0x7b
  4219c8:	sti    
  4219c9:	mov    ebp,0x561ff06c
  4219ce:	leavew 
  4219d0:	mov    edx,0xbcff0bad
  4219d5:	mov    ebp,DWORD PTR [ebp-0x48]
  4219d8:	cmc    
  4219d9:	inc    ecx
  4219da:	fidiv  DWORD PTR [edx+0x70198f49]
  4219e0:	inc    eax
  4219e1:	pop    esi
  4219e2:	push   cs
  4219e3:	loope  0x421a4e
  4219e5:	jecxz  0x4219a1
  4219e7:	adc    DWORD PTR [ebp-0x75],esi
  4219ea:	popf   
  4219eb:	pop    eax
  4219ec:	add    dl,cl
  4219ee:	pop    ebp
  4219ef:	add    DWORD PTR [edx],ebp
  4219f1:	sub    DWORD PTR [esp+eax*4],ecx
  4219f4:	push   0xffffff99
  4219f6:	cmp    al,0xd5
  4219f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219f9:	push   0xfffffff4
  4219fb:	mov    dh,0x1
  4219fd:	push   ds
  4219fe:	mov    ecx,0xcd4bca2e
  421a03:	or     ecx,eax
  421a05:	xchg   esi,eax
  421a06:	cmp    DWORD PTR ds:0x96ac67c2,esi
  421a0c:	fs mov esp,0x3d9daf0c
  421a12:	add    al,0xaf
  421a14:	(bad)  
  421a15:	in     al,dx
  421a16:	cmp    DWORD PTR gs:[edx-0x9],edx
  421a1a:	push   ds
  421a1b:	and    al,0x61
  421a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a1e:	cmc    
  421a1f:	dec    ebx
  421a20:	pop    edi
  421a21:	pop    edx
  421a22:	rol    dl,1
  421a24:	xor    DWORD PTR [ecx],esp
  421a26:	repz push esp
  421a28:	xchg   ebp,eax
  421a29:	fisub  WORD PTR [edi-0x40]
  421a2c:	or     DWORD PTR [ebp-0x60],edi
  421a2f:	cld    
  421a30:	mov    WORD PTR [ebx+edx*8-0x5000040c],?
  421a37:	mov    cl,0x8b
  421a39:	repnz das 
  421a3b:	outs   dx,BYTE PTR ds:[esi]
  421a3c:	jmp    0x4219f5
  421a3e:	out    dx,al
  421a3f:	in     eax,0x95
  421a41:	add    DWORD PTR [eax],eax
  421a43:	call   0xbf421a49
  421a48:	jbe    0x421a46
  421a4a:	mov    al,0x90
  421a4c:	fisub  DWORD PTR [ecx+ebx*1]
  421a4f:	aas    
  421a50:	test   eax,0x67e390b0
  421a55:	sbb    al,0x2f
  421a57:	loop   0x421a40
  421a59:	mov    ch,0x88
  421a5b:	xchg   DWORD PTR [esi-0x70],ecx
  421a5e:	fs push edi
  421a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a61:	ins    BYTE PTR es:[edi],dx
  421a62:	pop    ebx
  421a63:	cmp    al,0x16
  421a65:	pop    eax
  421a66:	lods   eax,DWORD PTR ds:[esi]
  421a67:	scas   al,BYTE PTR es:[edi]
  421a68:	pushf  
  421a69:	out    dx,eax
  421a6a:	sub    eax,0x94687223
  421a6f:	mul    DWORD PTR [ebx]
  421a71:	sbb    BYTE PTR [edi],0x41
  421a74:	or     esi,edi
  421a76:	pop    edi
  421a77:	fild   DWORD PTR [ebp+edx*1+0x5b]
  421a7b:	mov    esi,0x389a198c
  421a80:	mov    WORD PTR [ecx+eax*1],es
  421a83:	scas   al,BYTE PTR es:[edi]
  421a84:	or     dh,bl
  421a86:	sub    BYTE PTR [edx+0x14fb539a],bl
  421a8c:	mov    esi,DWORD PTR [edi+0x1d]
  421a8f:	mov    ecx,0xefe3d0de
  421a94:	mov    eax,ds:0x8bd3a4ce
  421a99:	in     eax,dx
  421a9a:	mov    esi,0x33785ed2
  421a9f:	sbb    edi,ecx
  421aa1:	mov    bl,0xff
  421aa3:	pop    ecx
  421aa4:	pop    eax
  421aa5:	test   DWORD PTR [ebp+0x4025e4d],ebp
  421aab:	mov    eax,ds:0xd799d077
  421ab0:	push   edi
  421ab1:	or     BYTE PTR [ebp-0x52],ah
  421ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ab5:	lods   al,BYTE PTR ds:[esi]
  421ab6:	neg    ecx
  421ab8:	imul   edi,DWORD PTR [edi+0x55],0x36
  421abc:	dec    esp
  421abd:	imul   esp,DWORD PTR [ecx+0x53],0x4988f2ac
  421ac4:	inc    esp
  421ac6:	lea    ecx,[edx-0x64739723]
  421acc:	mov    DWORD PTR [edi+eiz*4-0x3e466570],ebp
  421ad3:	sub    BYTE PTR [ecx],ah
  421ad5:	pop    es
  421ad6:	repz lahf 
  421ad8:	sar    BYTE PTR [eax+eiz*1-0x2829cb82],0xd4
  421ae0:	out    dx,eax
  421ae1:	push   esp
  421ae2:	sub    DWORD PTR [eax-0x49],ebp
  421ae5:	retf   
  421ae6:	es inc ebx
  421ae8:	dec    ebx
  421ae9:	cmp    BYTE PTR [ebx],bl
  421aeb:	pusha  
  421aec:	pop    esi
  421aed:	fwait
  421aee:	pop    ebp
  421aef:	xor    BYTE PTR [ecx-0x75],dl
  421af2:	pop    ds
  421af3:	jmp    0x6dae3d5e
  421af8:	jmp    0xd5d:0xaf84de52
  421aff:	inc    eax
  421b00:	add    BYTE PTR [bx+si-0x1f5c],al
  421b05:	hlt    
  421b06:	lods   eax,DWORD PTR ds:[esi]
  421b07:	pop    eax
  421b08:	mov    eax,ds:0x9805c6d3
  421b0d:	stos   BYTE PTR es:[edi],al
  421b0e:	sbb    BYTE PTR [edi+edx*4+0x62],bh
  421b12:	sub    BYTE PTR [ebx-0x14f4da1],al
  421b18:	(bad)  
  421b19:	jl     0x421b6a
  421b1b:	in     ax,0x7e
  421b1e:	jp     0x421b5e
  421b20:	push   ss
  421b21:	retf   
  421b22:	jl     0x421b78
  421b24:	adc    ch,BYTE PTR [edx-0x55]
  421b27:	dec    esp
  421b28:	push   ss
  421b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b2a:	jno    0x421b5b
  421b2c:	dec    ecx
  421b2d:	jbe    0x421ace
  421b2f:	stos   DWORD PTR es:[edi],eax
  421b30:	adc    al,0x39
  421b32:	and    eax,0xbdbc0ec6
  421b37:	loope  0x421af4
  421b39:	test   eax,0x434b93f0
  421b3e:	xchg   ebx,eax
  421b3f:	jmp    0xd78f:0x7d653cac
  421b46:	push   ebx
  421b47:	dec    ecx
  421b48:	fisttp DWORD PTR [edx]
  421b4b:	xchg   edx,eax
  421b4c:	sub    BYTE PTR ds:0x2a5c827e,al
  421b52:	ret    
  421b53:	repnz push edx
  421b55:	cmp    al,0x45
  421b57:	pop    edi
  421b58:	adc    dh,al
  421b5a:	sbb    cl,BYTE PTR [ecx]
  421b5c:	fsubr  QWORD PTR [eax+0x3b]
  421b5f:	push   ebp
  421b60:	bound  edx,QWORD PTR [edi+eax*2]
  421b63:	jne    0x421bb6
  421b65:	data16 sbb BYTE PTR [eax+ebx*8+0x64],0x69
  421b6b:	push   ds
  421b6c:	dec    eax
  421b6d:	outs   dx,BYTE PTR ds:[esi]
  421b6e:	popa   
  421b6f:	push   esi
  421b70:	cmp    edx,esp
  421b72:	mov    bl,0xee
  421b74:	(bad)  [ebx+0x7c]
  421b77:	or     eax,0x1ac55c1b
  421b7c:	cmp    al,0x4d
  421b7e:	push   ss
  421b7f:	jecxz  0x421b3f
  421b81:	or     eax,0x97eefa47
  421b86:	push   eax
  421b87:	or     cl,BYTE PTR [eax+0x4d6fc7a8]
  421b8d:	pushw  0xff81
  421b90:	pop    esp
  421b91:	pushf  
  421b92:	push   ebx
  421b93:	inc    ebx
  421b94:	not    cl
  421b96:	lds    esi,FWORD PTR ds:0xfd4f93ba
  421b9c:	out    dx,eax
  421b9d:	and    al,0x18
  421b9f:	inc    esi
  421ba0:	lock dec esp
  421ba2:	mov    ds:0x81e1984f,eax
  421ba7:	out    0xad,al
  421ba9:	mov    esp,0x61ceebed
  421bae:	xor    dh,0x89
  421bb1:	out    dx,al
  421bb2:	loopne 0x421c0a
  421bb4:	jo     0x421b3f
  421bb6:	sbb    eax,0xf0017141
  421bbb:	pop    edi
  421bbc:	inc    DWORD PTR [eax+0x21]
  421bbf:	out    dx,eax
  421bc0:	imul   eax,ebp,0xb607b86a
  421bc6:	fwait
  421bc7:	test   DWORD PTR [ecx+eiz*8-0x50590991],edx
  421bce:	ins    BYTE PTR es:[edi],dx
  421bcf:	gs mov dl,0x1e
  421bd2:	add    al,dh
  421bd4:	ss aas 
  421bd6:	test   cl,ah
  421bd8:	mov    al,0xd0
  421bda:	add    al,BYTE PTR [eax]
  421bdc:	iret   
  421bdd:	sbb    al,0x7
  421bdf:	mov    eax,ds:0xc250d772
  421be4:	dec    edx
  421be5:	push   eax
  421be6:	dec    edx
  421be7:	dec    esp
  421be8:	out    dx,eax
  421be9:	fstp   st(2)
  421beb:	ficom  WORD PTR [ecx+0x24]
  421bee:	test   eax,0x28837f4e
  421bf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bf4:	test   DWORD PTR [eax+0x67d05932],esi
  421bfa:	mov    al,0xfc
  421bfc:	not    DWORD PTR [esi+0x48c63f4f]
  421c02:	mov    ebp,0x5e1bfc98
  421c07:	push   0x94306f0c
  421c0c:	ret    0xee19
  421c0f:	dec    ebp
  421c10:	fnsave [edx-0x1b]
  421c13:	pusha  
  421c14:	pusha  
  421c15:	add    DWORD PTR [ebp-0x17],esi
  421c18:	test   DWORD PTR [ebp+0x42427ace],ebx
  421c1e:	aad    0xc0
  421c20:	jg     0x421be1
  421c22:	je     0x421c6b
  421c24:	adc    DWORD PTR [esi+0x25],ebp
  421c27:	mov    ds:0xcac45fcc,eax
  421c2c:	adc    bl,BYTE PTR [edi]
  421c2e:	xor    bl,cl
  421c30:	test   al,0x91
  421c32:	sbb    eax,0xfecf3df3
  421c37:	push   esp
  421c38:	jne    0x421ca1
  421c3a:	loop   0x421c95
  421c3c:	in     al,dx
  421c3d:	mov    edi,0x197cdaa
  421c42:	add    al,ch
  421c44:	add    DWORD PTR [eax],eax
  421c46:	add    bl,al
  421c48:	mov    BYTE PTR [ebx+0x3b3fd097],ah
  421c4e:	ins    DWORD PTR es:[edi],dx
  421c4f:	jl     0x421c50
  421c51:	(bad)  
  421c52:	mov    edi,0xadb3933a
  421c57:	rcl    BYTE PTR [edi],1
  421c59:	sbb    ecx,DWORD PTR [esi+eax*8-0x15844d8b]
  421c60:	xor    eax,0x694786bf
  421c65:	and    BYTE PTR [edi],0xd5
  421c68:	icebp  
  421c69:	jns    0x421ca4
  421c6b:	fmul   QWORD PTR [edi+eiz*4+0x27699a9b]
  421c72:	in     eax,0x18
  421c74:	mov    eax,ds:0x8ac4eae3
  421c79:	lea    ebx,[ecx]
  421c7b:	pop    ds
  421c7c:	sar    esi,0x11
  421c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c80:	jb     0x421cb3
  421c82:	fwait
  421c83:	outs   dx,BYTE PTR ds:[esi]
  421c84:	jp     0x421cfc
  421c86:	push   ebx
  421c87:	(bad)  [edi]
  421c89:	xchg   ebp,eax
  421c8a:	pop    esi
  421c8b:	out    0xcd,al
  421c8d:	imul   ebx,edx,0x130e7745
  421c93:	mov    ch,0xf2
  421c95:	les    esi,FWORD PTR [ebx+0x14f1aedf]
  421c9b:	cmp    eax,0x4d0b8072
  421ca0:	mov    ebx,0xca60ded
  421ca5:	xchg   ebx,eax
  421ca6:	and    eax,0x539e209a
  421cab:	xchg   ecx,eax
  421cac:	xchg   esp,eax
  421cad:	mov    WORD PTR [eax+eax*2+0x60124b70],?
  421cb4:	dec    ebx
  421cb5:	mov    ebx,0x3cfbba24
  421cba:	(bad)  
  421cbc:	jg     0x421c49
  421cbe:	add    al,0xe5
  421cc0:	pop    eax
  421cc1:	pop    ecx
  421cc2:	sbb    al,0xf2
  421cc4:	dec    ebp
  421cc5:	cmp    al,0xb
  421cc7:	dec    eax
  421cc8:	int    0xe2
  421cca:	push   ecx
  421ccb:	inc    ebx
  421ccc:	sub    DWORD PTR [edi+0x5e291bf5],edx
  421cd2:	imul   ecx,DWORD PTR [edx+0x38],0xffffffb4
  421cd6:	dec    DWORD PTR [edx]
  421cd8:	sahf   
  421cd9:	into   
  421cda:	rcl    DWORD PTR [esi],cl
  421cdc:	fadd   DWORD PTR [edx-0x55]
  421cdf:	push   0x7b43ca7a
  421ce4:	(bad)  
  421ce5:	imul   BYTE PTR [ebx-0x2693c70e]
  421ceb:	sbb    BYTE PTR [esi+edx*2-0x375f8c8d],0xe7
  421cf3:	ja     0x421cde
  421cf5:	into   
  421cf6:	jns    0x421ce1
  421cf8:	xchg   DWORD PTR [edi],ecx
  421cfa:	jae    0x421ce5
  421cfc:	sub    eax,0x450f70a5
  421d01:	xrstors [esi+0x15]
  421d05:	cmc    
  421d06:	(bad)  
  421d08:	pop    ds
  421d09:	xchg   edx,eax
  421d0a:	or     eax,0xd96d1d77
  421d0f:	in     al,0x68
  421d11:	cmc    
  421d12:	cmp    al,0xdd
  421d14:	das    
  421d15:	mov    esp,0xf95c7e12
  421d1a:	ja     0x421d69
  421d1c:	push   ds
  421d1d:	mov    ecx,0x935a8351
  421d22:	nop
  421d23:	mov    ebx,0x7fba5784
  421d28:	fldenv [ecx-0x4]
  421d2b:	rol    cl,0xf1
  421d2e:	push   ss
  421d2f:	push   edi
  421d30:	imul   esp,DWORD PTR [esi+0x2d],0xffffffc6
  421d34:	mov    edx,0x59bdd7f3
  421d39:	out    0xdd,al
  421d3b:	aas    
  421d3c:	std    
  421d3d:	jecxz  0x421da9
  421d3f:	fstp   TBYTE PTR ds:0x4d519285
  421d45:	xor    DWORD PTR [edi+eiz*8],0x56f58473
  421d4c:	sub    edi,ebp
  421d4e:	mov    bh,0x1a
  421d50:	outs   dx,DWORD PTR ds:[esi]
  421d51:	(bad)  
  421d52:	lsl    esi,sp
  421d55:	sub    DWORD PTR [ebx],0x97ceddbc
  421d5b:	mov    ecx,ecx
  421d5d:	mov    edi,0x11469563
  421d62:	aam    0xcf
  421d64:	aad    0x22
  421d66:	push   edi
  421d67:	clc    
  421d68:	jl     0x421d80
  421d6a:	or     cl,dl
  421d6c:	mov    bh,0x53
  421d6e:	(bad)  
  421d6f:	cmp    edi,DWORD PTR [edx+0x303fc5c8]
  421d75:	(bad)  
  421d76:	jmp    0x421da0
  421d78:	add    eax,0x629a6e97
  421d7d:	dec    edi
  421d7e:	(bad)  
  421d7f:	pop    esp
  421d80:	or     BYTE PTR [edx-0x29],ch
  421d83:	jbe    0x421daf
  421d85:	ret    0x4437
  421d88:	in     al,dx
  421d89:	jns    0x421d86
  421d8b:	push   eax
  421d8c:	leave  
  421d8d:	bound  ebp,QWORD PTR [eax+edx*2+0x487ecc44]
  421d94:	inc    ecx
  421d95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d96:	or     eax,0x6a51af93
  421d9b:	inc    ecx
  421d9c:	bound  esi,QWORD PTR [ebx-0x73a2030c]
  421da2:	pop    es
  421da3:	hlt    
  421da4:	or     esi,esp
  421da6:	cmp    eax,edi
  421da8:	mov    BYTE PTR [esi+0x189b7856],0x13
  421daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421db0:	mul    BYTE PTR [ebp-0x3]
  421db3:	adc    BYTE PTR [ebx-0x48],dh
  421db6:	mov    dl,0x1e
  421db8:	cmp    al,0x4c
  421dba:	jnp    0x421d84
  421dbc:	dec    ebx
  421dbd:	and    BYTE PTR [ecx-0x5b],ah
  421dc0:	inc    ecx
  421dc1:	enter  0x7a3b,0x98
  421dc5:	sub    eax,0x978ff590
  421dca:	aad    0x28
  421dcc:	sahf   
  421dcd:	repnz add al,0x91
  421dd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dd1:	push   edx
  421dd2:	xchg   DWORD PTR es:[eax],ebx
  421dd5:	xor    dh,BYTE PTR [ecx]
  421dd7:	imul   esp,DWORD PTR [esi],0x43c09a37
  421ddd:	rol    DWORD PTR [ebx+0x51e5dbe1],1
  421de3:	pop    ecx
  421de4:	xchg   DWORD PTR [ecx+0x21],edi
  421de7:	inc    edx
  421de8:	pop    es
  421de9:	test   DWORD PTR [ebx+0x279fbf72],0x77bce805
  421df3:	arpl   WORD PTR [eax-0xb],cx
  421df6:	ret    
  421df7:	inc    edx
  421df8:	dec    esi
  421df9:	sbb    BYTE PTR [ecx+0x55bdff0d],dl
  421dff:	(bad)  [eax-0x7a]
  421e02:	sub    BYTE PTR [edi+0x67],0x20
  421e06:	popf   
  421e07:	mov    esi,0xfb272ff0
  421e0c:	add    dl,BYTE PTR [ecx+0x7e]
  421e0f:	lea    edi,[ebp-0x48011364]
  421e15:	lock outs dx,DWORD PTR ds:[esi]
  421e17:	aad    0x6b
  421e19:	and    eax,0xa69d820b
  421e1e:	adc    DWORD PTR [esi-0x41],ebx
  421e21:	enter  0x4fce,0xac
  421e25:	ss push ds
  421e27:	fisttp DWORD PTR [eax+0x1ee50d3b]
  421e2d:	gs jno 0x421de4
  421e30:	dec    edi
  421e31:	sbb    al,0x53
  421e33:	call   DWORD PTR [ebx-0x1]
  421e36:	out    dx,eax
  421e37:	and    BYTE PTR [ecx-0x69],al
  421e3a:	into   
  421e3b:	cmp    al,0x24
  421e3d:	push   es
  421e3e:	pushf  
  421e3f:	mov    ch,0x99
  421e41:	add    DWORD PTR [eax],eax
  421e43:	call   0x93421e49
  421e48:	cli    
  421e49:	fistp  WORD PTR [ecx-0xd186435]
  421e4f:	inc    edx
  421e50:	out    dx,eax
  421e51:	sbb    BYTE PTR [eax+ebx*8-0x177475c7],ah
  421e58:	mov    edx,0x2881f53
  421e5d:	push   cs
  421e5e:	int3   
  421e5f:	xor    BYTE PTR [ecx-0xf7e6150],al
  421e65:	popa   
  421e66:	addr16 mov ebp,0x1d3fc564
  421e6c:	loopne 0x421df3
  421e6e:	dec    ecx
  421e6f:	fs icebp 
  421e71:	mov    ds:0xa2b786ac,eax
  421e76:	jl     0x421eb4
  421e78:	mov    bh,0x9a
  421e7a:	dec    ebx
  421e7b:	fbstp  TBYTE PTR [ecx+0x3decf1af]
  421e81:	inc    edi
  421e82:	push   ebx
  421e83:	sbb    DWORD PTR [eax+0x13],ecx
  421e86:	sbb    ch,dh
  421e88:	pushf  
  421e89:	cmp    DWORD PTR [ecx+0x30],ebx
  421e8c:	lds    eax,FWORD PTR [eax+0x21]
  421e8f:	mov    bl,cl
  421e91:	shr    BYTE PTR [edx+0x4],1
  421e94:	sub    BYTE PTR [eax-0x4708da1b],cl
  421e9a:	imul   edi,DWORD PTR [esi+0x5fafd6a2],0x887089c6
  421ea4:	xlat   BYTE PTR ds:[ebx]
  421ea5:	loopne 0x421f20
  421ea7:	call   0xf05:0xd00f3ecf
  421eae:	xchg   edi,eax
  421eaf:	add    BYTE PTR [eax-0x4a],bh
  421eb2:	jne    0x421e59
  421eb4:	and    BYTE PTR [esi],0x83
  421eb7:	sub    esp,esi
  421eb9:	mov    DWORD PTR [edi-0x66],0xc3f43f90
  421ec0:	sti    
  421ec1:	inc    ebx
  421ec2:	adc    cl,bl
  421ec4:	push   es
  421ec5:	mov    ch,0xac
  421ec7:	inc    ecx
  421ec8:	pop    edi
  421ec9:	add    BYTE PTR [edi+eiz*1],0x8c
  421ecd:	adc    eax,DWORD PTR [edx]
  421ecf:	jmp    0xf1ea:0xdf93a4dd
  421ed6:	out    dx,eax
  421ed7:	jae    0x421f20
  421ed9:	pusha  
  421eda:	sub    eax,0xc9326a72
  421edf:	jnp    0x421ea4
  421ee1:	sbb    al,0xcc
  421ee3:	in     al,dx
  421ee4:	test   BYTE PTR [esi+edi*2],bl
  421ee7:	mov    al,ds:0xf7685d5a
  421eec:	retf   
  421eed:	push   esp
  421eee:	(bad)  
  421eef:	fwait
  421ef0:	ds jp  0x421f67
  421ef3:	dec    ebx
  421ef4:	inc    esi
  421ef5:	xchg   ebp,eax
  421ef6:	and    BYTE PTR [esi+esi*4+0x15],dl
  421efa:	fiadd  DWORD PTR [esi]
  421efc:	call   FWORD PTR ds:0x6b777f9d
  421f02:	dec    ebx
  421f03:	xchg   ecx,eax
  421f04:	sahf   
  421f05:	pop    edx
  421f06:	in     al,0xc5
  421f08:	lahf   
  421f09:	push   ecx
  421f0a:	aad    0x1f
  421f0c:	in     al,0x27
  421f0e:	dec    edi
  421f0f:	mov    eax,0x7962ed18
  421f14:	inc    edx
  421f15:	mov    dh,0xc2
  421f17:	call   0xcd0cf1e8
  421f1c:	mov    DWORD PTR [edi-0x32e0b752],ebp
  421f22:	push   edx
  421f23:	inc    ebp
  421f24:	sub    BYTE PTR [ecx+0x1001940],dl
  421f2a:	cwde   
  421f2b:	int3   
  421f2c:	cmovnp ebx,DWORD PTR [eax+0x25]
  421f30:	or     esi,DWORD PTR [ebx+eax*4]
  421f33:	shr    cl,cl
  421f35:	sbb    DWORD PTR [ecx+eax*8+0x7b3fed18],edi
  421f3c:	sbb    eax,0x633313b3
  421f41:	mov    edx,DWORD PTR [edx+0x6e]
  421f44:	jno    0x421f8a
  421f46:	jno    0x421f4c
  421f48:	xlat   BYTE PTR ds:[ebx]
  421f49:	or     BYTE PTR [edx+0x59a38eba],cl
  421f4f:	xchg   esp,eax
  421f50:	add    al,0xa1
  421f52:	imul   esi,DWORD PTR [ebp-0x6],0xe5bb1b13
  421f59:	daa    
  421f5a:	pop    es
  421f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f5c:	mov    ds:0x7eb7a0a2,al
  421f61:	fyl2x  
  421f63:	ins    DWORD PTR es:[edi],dx
  421f64:	mov    edi,0x6e494f63
  421f69:	cmp    eax,0xb7835b23
  421f6e:	jmp    0x611f:0xdb4186a0
  421f75:	inc    ecx
  421f76:	sub    BYTE PTR [eax],bh
  421f78:	pop    ss
  421f79:	or     bl,bh
  421f7b:	pop    esi
  421f7c:	adc    eax,eax
  421f7e:	dec    ebx
  421f7f:	lahf   
  421f80:	mov    cl,0x14
  421f82:	test   DWORD PTR [edi+0x78563a],esi
  421f88:	mov    ebx,0xbc74f420
  421f8d:	ins    DWORD PTR es:[edi],dx
  421f8e:	dec    eax
  421f8f:	cld    
  421f90:	adc    esp,ebx
  421f92:	test   ebx,0xfb7f0db9
  421f98:	mov    eax,ds:0xa643c033
  421f9d:	xchg   ecx,eax
  421f9e:	test   eax,0xab71eebb
  421fa3:	sub    dh,BYTE PTR [ebx]
  421fa5:	(bad)  [edi+0x642bf4f8]
  421fab:	sub    bh,bh
  421fad:	test   DWORD PTR [eax-0x56],edi
  421fb0:	pushf  
  421fb1:	pop    esi
  421fb2:	xor    al,0x5
  421fb4:	inc    edi
  421fb5:	imul   eax,ebp,0x4cf0edeb
  421fbb:	inc    esp
  421fbc:	lock bound esp,QWORD PTR [ebx]
  421fbf:	or     al,0xcb
  421fc1:	cmp    dh,BYTE PTR [ebx-0x4d]
  421fc4:	lahf   
  421fc5:	add    ah,BYTE PTR [esp+esi*2+0x4d6bdc02]
  421fcc:	xor    BYTE PTR [edi-0x4c4b8cf9],dl
  421fd2:	xchg   edi,eax
  421fd3:	add    ch,BYTE PTR [edi-0x4b]
  421fd6:	inc    ecx
  421fd7:	mov    al,0xc6
  421fd9:	jp     0x421f79
  421fdb:	sbb    cl,BYTE PTR [esi+0x21]
  421fde:	stos   DWORD PTR es:[edi],eax
  421fdf:	mov    dh,BYTE PTR [ecx+0x3edc856]
  421fe5:	je     0x422059
  421fe7:	in     al,0x55
  421fe9:	int3   
  421fea:	inc    edx
  421feb:	call   0xb628:0xc262f00c
  421ff2:	inc    esi
  421ff3:	stos   BYTE PTR es:[edi],al
  421ff4:	das    
  421ff5:	jns    0x421fc1
  421ff7:	sub    ebp,DWORD PTR [eax-0x2405af9a]
  421ffd:	sub    eax,0x96407cc2
  422002:	inc    edi
  422003:	aam    0xad
  422005:	cwde   
  422006:	xor    ecx,edx
  422008:	fmul   st(6),st
  42200a:	in     al,0xb9
  42200c:	mov    edx,0xc0bb7d42
  422011:	or     DWORD PTR [ecx+edx*8-0x1c],ebx
  422015:	push   eax
  422016:	mov    DWORD PTR ds:0x339120ee,eax
  42201c:	loopne 0x421fb1
  42201e:	sbb    eax,0x51a0e65e
  422023:	loopne 0x421fc4
  422025:	pop    edx
  422026:	sub    al,al
  422028:	add    BYTE PTR [edx-0x2b],dh
  42202b:	shl    DWORD PTR [eax-0x363bbd6b],0x8
  422032:	mov    al,ds:0xedece10d
  422037:	xor    al,0x42
  422039:	(bad)  
  42203a:	xor    BYTE PTR [ebp-0x18],ah
  42203d:	inc    ecx
  42203e:	cdq    
  42203f:	popf   
  422040:	fwait
  422041:	add    DWORD PTR [eax],eax
  422043:	call   0x60422049
  422048:	fs stc 
  42204a:	(bad)  
  42204b:	fwait
  42204c:	sar    DWORD PTR [edi+0x73b085d9],1
  422052:	cmp    ch,BYTE PTR [esi+eax*4]
  422055:	push   edi
  422056:	add    BYTE PTR [edi],cl
  422058:	push   eax
  422059:	hlt    
  42205a:	xor    esp,DWORD PTR [ecx+eiz*4+0x2f]
  42205e:	mov    al,ds:0x588c1a97
  422063:	mov    eax,ds:0x3d0f7c3a
  422068:	mov    al,ds:0xb80c40c9
  42206d:	loop   0x422076
  42206f:	(bad)  
  422070:	dec    esi
  422071:	lock loopne 0x42208e
  422074:	jb     0x4220ed
  422076:	jecxz  0x422009
  422078:	jl     0x422052
  42207a:	leave  
  42207b:	int    0x53
  42207d:	mov    edi,0x63bddfee
  422082:	out    dx,eax
  422083:	push   0xff591d69
  422088:	mov    ecx,0x88120790
  42208d:	dec    ebp
  42208e:	push   0x47e69b33
  422093:	pop    ecx
  422094:	or     al,0x77
  422096:	dec    ebx
  422097:	dec    esp
  422098:	xchg   ecx,eax
  422099:	xchg   ebx,eax
  42209a:	push   0x16
  42209c:	imul   ebx,DWORD PTR [esi+0xc599394],0xfffffffb
  4220a3:	jnp    0x422119
  4220a5:	push   ecx
  4220a6:	cmp    al,BYTE PTR [edi+0x1e]
  4220a9:	cmp    bh,BYTE PTR [eax]
  4220ab:	fstp   QWORD PTR [edi+0x79b48827]
  4220b1:	ss mov ecx,0x31918f1b
  4220b7:	ror    DWORD PTR [eax],1
  4220b9:	mov    esp,DWORD PTR [esi-0x391c567a]
  4220bf:	sub    eax,0xa4f92ab5
  4220c4:	enter  0xa9fa,0xf5
  4220c8:	leave  
  4220c9:	leave  
  4220ca:	sar    BYTE PTR [edi-0x2e],0x4d
  4220ce:	cmc    
  4220cf:	cs (bad) 
  4220d1:	imul   DWORD PTR [ebx-0x7e1e495a]
  4220d7:	int    0x8b
  4220d9:	or     eax,0x63
  4220dc:	dec    ecx
  4220dd:	fistp  WORD PTR [edx+0x71aa856d]
  4220e3:	and    al,0x71
  4220e5:	loop   0x422159
  4220e7:	daa    
  4220e8:	in     al,0x2b
  4220ea:	cmp    ebx,DWORD PTR [ebx-0x2]
  4220ed:	in     al,0x60
  4220ef:	push   ebp
  4220f0:	push   ss
  4220f1:	and    BYTE PTR [eax-0x10d1410],bh
  4220f7:	popf   
  4220f8:	and    bh,BYTE PTR [edx+ebp*4-0x162d72d2]
  4220ff:	outs   dx,DWORD PTR ds:[esi]
  422100:	cmp    al,0x64
  422102:	inc    edi
  422103:	pusha  
  422104:	jecxz  0x4220b8
  422106:	test   DWORD PTR ds:0x87534b76,ebp
  42210c:	dec    ebx
  42210d:	loopne 0x42213d
  42210f:	xor    bl,0xbc
  422112:	xchg   ebx,eax
  422113:	cld    
  422114:	retf   0x1e51
  422117:	adc    BYTE PTR [eax+0xb],cl
  42211a:	cmp    al,0x5
  42211c:	mov    bh,BYTE PTR [edi+ebx*8+0xb526486]
  422123:	push   ds
  422124:	sub    al,0xc3
  422126:	or     BYTE PTR [edi+0x30],al
  422129:	cmp    cl,BYTE PTR fs:[ebx+0xaa86b7c]
  422130:	push   ebx
  422131:	loope  0x422128
  422133:	int    0xf
  422135:	add    dl,bl
  422137:	dec    ecx
  422138:	xchg   esi,eax
  422139:	xchg   esi,eax
  42213a:	fnstsw WORD PTR [edx]
  42213c:	adc    eax,esi
  42213e:	mov    esi,0x66201add
  422143:	jmp    0x23ea:0x640ea10b
  42214a:	cmp    edi,DWORD PTR [ecx+0x7e5199e4]
  422150:	push   esp
  422151:	lds    ecx,FWORD PTR [eax+eax*1]
  422154:	mov    dl,0x2d
  422156:	and    eax,0x95344da9
  42215b:	std    
  42215c:	and    BYTE PTR [edx-0x3ccf2dc1],dl
  422162:	xor    bl,dl
  422164:	push   ds
  422165:	shl    DWORD PTR [esi+0x7f],1
  422168:	in     eax,dx
  422169:	sub    ch,dl
  42216b:	cmp    al,0x39
  42216d:	adc    al,0x70
  42216f:	and    BYTE PTR [eax-0x300cae4c],0x57
  422176:	xor    al,0x1
  422178:	sbb    BYTE PTR [ecx],al
  42217a:	ins    DWORD PTR es:[edi],dx
  42217b:	xor    eax,0x1af5093a
  422180:	stc    
  422181:	out    dx,al
  422182:	xchg   ebx,eax
  422183:	pop    ss
  422184:	fcmovb st,st(2)
  422186:	aas    
  422187:	jp     0x4221e1
  422189:	lock add esp,DWORD PTR [ecx]
  42218c:	mov    cl,0x2e
  42218e:	into   
  42218f:	not    BYTE PTR [edx+esi*1-0x776e9efd]
  422196:	inc    edx
  422197:	jmp    0x37ac:0xbeaba60d
  42219e:	shl    DWORD PTR [eax+0x3e],cl
  4221a1:	push   esp
  4221a2:	fstp   TBYTE PTR [eax]
  4221a4:	inc    bh
  4221a6:	jns    0x422128
  4221a8:	mov    eax,ds:0xe7a64f2c
  4221ad:	test   DWORD PTR [esi-0x8],0x4c9b356c
  4221b4:	mov    dl,BYTE PTR [edi+0x65a77b3b]
  4221ba:	and    esi,ebx
  4221bc:	or     DWORD PTR [ebx+0x7255ff5d],ebx
  4221c2:	fldl2t 
  4221c4:	adc    eax,ebx
  4221c6:	imul   edi
  4221c8:	jg     0x42222a
  4221ca:	mov    ecx,0xe2b1d669
  4221cf:	sbb    bl,BYTE PTR [edi-0x42]
  4221d2:	shr    cl,0xa7
  4221d5:	jl     0x42224f
  4221d7:	mov    ds:0x1c2c1187,eax
  4221dc:	ins    DWORD PTR es:[edi],dx
  4221dd:	adc    dl,dh
  4221df:	lock daa 
  4221e1:	mov    ds:0xf5339127,al
  4221e6:	jecxz  0x422197
  4221e8:	add    al,0xd4
  4221ea:	fst    QWORD PTR [ebx-0x30d5ccec]
  4221f0:	mov    cl,0x8b
  4221f2:	sub    eax,edi
  4221f4:	retf   0xf86a
  4221f7:	and    ecx,DWORD PTR [edx]
  4221f9:	ss adc ch,0xa
  4221fd:	cmp    dl,BYTE PTR gs:[esi]
  422200:	inc    esi
  422201:	cld    
  422202:	inc    ebx
  422203:	pop    ebx
  422204:	fadd   QWORD PTR [ecx-0x1f57e205]
  42220a:	jg     0x422236
  42220c:	mov    DWORD PTR [edi-0x34],ecx
  42220f:	add    DWORD PTR [ebx-0x68],0x2f
  422213:	aaa    
  422214:	xchg   esi,eax
  422215:	pop    ebp
  422216:	and    DWORD PTR [ecx+edi*4-0x80],edx
  42221a:	dec    edi
  42221b:	cs retf 
  42221d:	sub    DWORD PTR [ecx],edi
  42221f:	push   esi
  422220:	aas    
  422221:	xchg   edi,eax
  422222:	jne    0x42223b
  422224:	xor    cl,ch
  422226:	das    
  422227:	mov    ebp,0x4950f308
  42222c:	mov    esi,0x7799af89
  422231:	out    dx,eax
  422232:	out    dx,al
  422233:	out    dx,eax
  422234:	(bad)  
  422235:	cdq    
  422236:	ja     0x422240
  422238:	(bad)  
  422239:	daa    
  42223a:	loop   0x422298
  42223c:	mov    eax,0x9d85f30f
  422241:	add    DWORD PTR [eax],eax
  422243:	call   0x5b422249
  422248:	xor    dh,BYTE PTR [edx+0x75e94646]
  42224e:	out    dx,eax
  42224f:	es cli 
  422251:	and    al,0x40
  422253:	inc    esp
  422254:	shl    BYTE PTR [esi-0x1b32550c],cl
  42225a:	mov    edi,0x64d7d61e
  42225f:	loopne 0x42229c
  422261:	xchg   BYTE PTR [eax-0xc],al
  422264:	sar    DWORD PTR [ecx+0x3c],1
  422267:	lahf   
  422268:	daa    
  422269:	xchg   BYTE PTR [eax-0x26fd35da],bl
  42226f:	sahf   
  422270:	cmp    BYTE PTR [esi-0x1],ch
  422273:	(bad)  
  422275:	fdivr  st,st(1)
  422277:	mov    al,ds:0xffadf90d
  42227c:	clc    
  42227d:	xor    ecx,DWORD PTR ds:0x413c3e6a
  422283:	jle    0x422285
  422285:	xor    cl,BYTE PTR [edx-0x3e1c4e7]
  42228b:	in     al,0x69
  42228d:	fwait
  42228e:	and    eax,0xd1fce67d
  422293:	ss clc 
  422295:	xchg   edi,eax
  422296:	and    BYTE PTR [esi-0x1e714307],ah
  42229c:	mov    al,ds:0x2c0bb348
  4222a1:	jl     0x42228e
  4222a3:	clc    
  4222a4:	jb     0x4222cf
  4222a6:	mov    ebx,0x17d1dd5e
  4222ab:	xchg   BYTE PTR [edi],dh
  4222ad:	push   ss
  4222ae:	mov    ebx,0x345193c
  4222b3:	sti    
  4222b4:	out    dx,al
  4222b5:	dec    eax
  4222b6:	mov    ecx,ebp
  4222b8:	pop    edx
  4222b9:	push   edx
  4222ba:	repnz and al,0x47
  4222bd:	sbb    esi,ecx
  4222bf:	xchg   ebp,eax
  4222c0:	(bad)  
  4222c1:	loop   0x422321
  4222c3:	adc    bh,BYTE PTR [eax+0xd]
  4222c6:	jl     0x422257
  4222c8:	dec    esi
  4222c9:	add    eax,ebx
  4222cb:	imul   ebp,DWORD PTR ds:0xa61e0bde,0x8
  4222d2:	push   esi
  4222d3:	out    0x5c,al
  4222d5:	sub    al,0xfb
  4222d7:	jne    0x42227d
  4222d9:	xlat   BYTE PTR ds:[ebx]
  4222da:	mov    eax,0xff0d2fa
  4222df:	mov    ah,0x44
  4222e1:	adc    bl,BYTE PTR [edi+ebx*2]
  4222e4:	and    al,0xd2
  4222e6:	in     eax,dx
  4222e7:	outs   dx,BYTE PTR ds:[esi]
  4222e8:	mov    WORD PTR [edx],?
  4222ea:	cdq    
  4222eb:	xor    BYTE PTR [edx+0xdc3dc45],bl
  4222f1:	aam    0x6a
  4222f3:	popf   
  4222f4:	aad    0x8c
  4222f6:	fs mov cs:0x45afb6b7,eax
  4222fd:	stos   BYTE PTR es:[edi],al
  4222fe:	mov    ah,0x5d
  422300:	jg     0x422373
  422302:	ror    BYTE PTR [edi],0xa7
  422305:	test   BYTE PTR [ecx+0x42],0xe3
  422309:	push   ds
  42230a:	sbb    al,0x7b
  42230c:	out    dx,eax
  42230d:	fisttp QWORD PTR [ebx+0x37]
  422310:	or     BYTE PTR [edi+0x65967d0a],al
  422316:	mov    eax,DWORD PTR [ebx+0x1a]
  422319:	ret    
  42231a:	dec    eax
  42231b:	aaa    
  42231c:	ja     0x42239b
  42231e:	mov    WORD PTR [esi],ss
  422320:	dec    ebp
  422321:	loop   0x422377
  422323:	lods   eax,DWORD PTR ds:[esi]
  422324:	pusha  
  422325:	cli    
  422326:	pop    edi
  422327:	aas    
  422328:	das    
  422329:	cs mov ecx,0x997fcfb1
  42232f:	xchg   BYTE PTR [ebx-0x129555b0],bh
  422335:	(bad)  
  422336:	out    dx,eax
  422337:	lea    esp,[edx]
  422339:	inc    esp
  42233a:	aad    0xb3
  42233c:	rol    BYTE PTR [ebx+0x13ebbd1c],cl
  422342:	(bad)  
  422343:	and    BYTE PTR [edi],bh
  422345:	pop    ds
  422346:	dec    ebp
  422347:	fdivr  QWORD PTR [ecx+0x39]
  42234a:	rol    BYTE PTR [edx],cl
  42234c:	shl    edx,1
  42234e:	popf   
  42234f:	mov    ecx,0xea54c260
  422354:	leave  
  422355:	lods   eax,DWORD PTR ds:[esi]
  422356:	stos   BYTE PTR es:[edi],al
  422357:	push   ecx
  422358:	das    
  422359:	mov    eax,0xcc45cd8
  42235e:	xor    BYTE PTR [edx-0x304afb3b],dl
  422364:	(bad)  
  422365:	and    eax,DWORD PTR [esi-0x16]
  422368:	es loope 0x422372
  42236b:	out    dx,eax
  42236c:	imul   esp,DWORD PTR [edi+0x4abf4506],0xa93a2e56
  422376:	or     BYTE PTR [ecx+0x37],cl
  422379:	lods   eax,DWORD PTR ds:[esi]
  42237a:	loope  0x4223ad
  42237c:	(bad)  
  42237d:	lods   eax,DWORD PTR ds:[esi]
  42237e:	repnz adc dl,BYTE PTR [edx-0x22caa8ea]
  422385:	or     esi,DWORD PTR [edx+ebp*1+0x44]
  422389:	cmp    esp,ebp
  42238b:	into   
  42238c:	add    edx,ebp
  42238e:	push   ebx
  42238f:	sub    ah,al
  422391:	adc    edx,DWORD PTR [ebp-0xd]
  422394:	ficomp DWORD PTR [ebp+0x4d]
  422397:	xchg   ebx,eax
  422398:	mov    esp,0x9162047f
  42239d:	inc    DWORD PTR [esi+0x9d3db72]
  4223a3:	sahf   
  4223a4:	xchg   DWORD PTR [eax+0x448794f7],eax
  4223aa:	sbb    eax,0x3513d60e
  4223af:	cmp    BYTE PTR [edi+0x3f],dl
  4223b2:	add    al,0x13
  4223b4:	lods   eax,DWORD PTR ds:[esi]
  4223b5:	mov    BYTE PTR [eax-0x48ee5128],ch
  4223bb:	add    ebx,DWORD PTR [esi-0x32]
  4223be:	fcmove st,st(4)
  4223c0:	cmp    BYTE PTR [edx-0x670f6dac],bl
  4223c6:	repz mov ah,0xd6
  4223c9:	in     eax,dx
  4223ca:	or     dl,bl
  4223cc:	adc    BYTE PTR [ebp+0x1c545f8],al
  4223d2:	cmc    
  4223d3:	mov    ebp,0x54c2212c
  4223d8:	pop    ss
  4223d9:	jg     0x42242e
  4223db:	(bad)  
  4223dc:	inc    DWORD PTR [edx+0x79]
  4223df:	xor    dh,BYTE PTR [edx+0xd6cfde1]
  4223e5:	jge    0x422400
  4223e7:	adc    al,0xfd
  4223e9:	mov    ebx,0x83a32ae2
  4223ee:	cld    
  4223ef:	pop    edi
  4223f0:	pop    edx
  4223f1:	push   0xb802cda8
  4223f6:	in     al,0x7c
  4223f8:	xor    edx,DWORD PTR [edx+ecx*1]
  4223fb:	push   ebx
  4223fc:	mov    ah,0x89
  4223fe:	fs pop esp
  422400:	popf   
  422401:	pop    esi
  422402:	dec    ecx
  422403:	pop    esp
  422404:	sbb    bl,BYTE PTR [edx]
  422406:	vpunpckhdq xmm2,xmm0,XMMWORD PTR [edx]
  42240a:	pusha  
  42240b:	leave  
  42240c:	or     dl,BYTE PTR [ecx-0x3fbb5b0f]
  422412:	jns    0x422438
  422414:	out    dx,al
  422415:	xchg   ebp,eax
  422416:	push   eax
  422417:	mov    al,0xaa
  422419:	stos   BYTE PTR es:[edi],al
  42241a:	sbb    dl,BYTE PTR [esi]
  42241c:	cmp    BYTE PTR [esi+0x5e6c558b],al
  422422:	jo     0x42241b
  422424:	sub    eax,0xe54e4d03
  422429:	cmp    ah,BYTE PTR [edx+0x68c057d2]
  42242f:	xchg   edx,eax
  422430:	inc    esp
  422431:	mov    al,BYTE PTR [edi+0x559fcfde]
  422437:	or     eax,0x14d229a6
  42243c:	ins    BYTE PTR es:[edi],dx
  42243d:	scas   al,BYTE PTR es:[edi]
  42243e:	sub    DWORD PTR [ebp-0x61],0x1
  422442:	add    al,ch
  422444:	add    DWORD PTR [eax],eax
  422446:	add    BYTE PTR [ebx-0x45],bh
  422449:	mov    DWORD PTR [ebx-0x5fde612c],esi
  42244f:	push   eax
  422450:	push   0x555fb723
  422455:	retf   
  422456:	pushf  
  422457:	(bad)  
  422458:	les    esp,FWORD PTR [edi+ebx*2]
  42245b:	imul   ecx,DWORD PTR [esi+0x59],0x94fc37c6
  422462:	add    bl,BYTE PTR fs:[eax]
  422465:	pop    eax
  422466:	fiadd  WORD PTR gs:[ebx-0xc997dd0]
  42246d:	(bad)  [edx+0x5c]
  422470:	adc    eax,0x172eea1b
  422475:	xor    esi,DWORD PTR [ecx+eax*4]
  422478:	or     dh,BYTE PTR [ebx-0x10]
  42247b:	pop    es
  42247c:	mov    bl,BYTE PTR [esp+eax*2+0x32]
  422480:	aad    0x66
  422482:	stos   DWORD PTR es:[edi],eax
  422483:	nop
  422484:	xor    dl,dh
  422486:	push   0x1078442
  42248b:	test   al,0x1f
  42248d:	mov    eax,0x811cb685
  422492:	push   ecx
  422493:	cmp    cl,bh
  422495:	jl     0x4224c2
  422497:	nop
  422498:	or     DWORD PTR [ebx+edi*8],edx
  42249b:	add    BYTE PTR [edi-0x2],0x79
  42249f:	mov    BYTE PTR [esi],bh
  4224a1:	xor    dh,cl
  4224a3:	jmp    eax
  4224a5:	or     dh,BYTE PTR [ecx-0xf]
  4224a8:	outs   dx,DWORD PTR ds:[esi]
  4224a9:	jae    0x4224c4
  4224ab:	xchg   DWORD PTR [esi],ebx
  4224ad:	(bad)  
  4224ae:	push   edi
  4224af:	xor    eax,0xacc1672c
  4224b4:	mov    al,ds:0x315a5e5b
  4224b9:	popf   
  4224ba:	cld    
  4224bb:	scas   al,BYTE PTR es:[edi]
  4224bc:	jno    0x422463
  4224be:	pushf  
  4224bf:	xor    al,0xc9
  4224c1:	xor    al,ah
  4224c3:	pusha  
  4224c4:	and    eax,0xea2f69b1
  4224c9:	mov    edi,0xa102e23a
  4224ce:	pop    ebx
  4224cf:	pusha  
  4224d0:	and    edx,eax
  4224d2:	(bad)  
  4224d5:	inc    ecx
  4224d6:	imul   edx,esi,0xffffff89
  4224d9:	mov    ch,0xb1
  4224db:	rol    ah,cl
  4224dd:	adc    esi,DWORD PTR [ebx-0x16]
  4224e0:	cdq    
  4224e1:	jl     0x422489
  4224e3:	hlt    
  4224e4:	scas   eax,DWORD PTR es:[edi]
  4224e5:	dec    edi
  4224e6:	push   edx
  4224e7:	jae    0x422481
  4224e9:	mov    ch,0xd
  4224eb:	mov    al,0xf8
  4224ed:	ins    BYTE PTR es:[edi],dx
  4224ee:	(bad)  
  4224ef:	lods   al,BYTE PTR ds:[esi]
  4224f0:	rcr    BYTE PTR [edi],0x26
  4224f3:	mov    edx,0xaad11a9
  4224f8:	jle    0x4224f7
  4224fa:	std    
  4224fb:	dec    ecx
  4224fc:	(bad)  
  4224fd:	fwait
  4224fe:	lea    edi,[edi]
  422500:	aad    0x64
  422502:	in     al,dx
  422503:	std    
  422504:	out    dx,al
  422505:	jnp    0x4224f1
  422507:	adc    BYTE PTR [eax+0x5500b8d7],bh
  42250d:	xchg   esi,eax
  42250e:	xor    ch,0xd4
  422511:	and    edx,DWORD PTR [ebp-0x68]
  422514:	push   cs
  422515:	popf   
  422516:	add    eax,0xe9019790
  42251b:	lea    edx,[esi]
  42251d:	xor    al,0x5d
  42251f:	lds    ebx,FWORD PTR [ecx-0x28b9e7b4]
  422525:	dec    ebx
  422526:	(bad)  
  422527:	cmp    BYTE PTR [eax-0x2fad0281],cl
  42252d:	int    0x6d
  42252f:	mov    eax,0xa7580f52
  422534:	icebp  
  422535:	outs   dx,DWORD PTR ds:[esi]
  422536:	and    DWORD PTR [edi+0x3f],esp
  422539:	popf   
  42253a:	sbb    ch,ch
  42253c:	push   esp
  42253d:	test   DWORD PTR [esi],esp
  42253f:	mov    BYTE PTR [ebp-0x73],cl
  422542:	push   0x55951af5
  422547:	and    BYTE PTR [edx],al
  422549:	mov    al,0xaa
  42254b:	sti    
  42254c:	sbb    al,0xc
  42254e:	test   al,0x67
  422550:	lds    ebp,FWORD PTR [eax]
  422552:	pop    ds
  422553:	jns    0x422556
  422555:	pushf  
  422556:	push   ss
  422557:	int    0xe3
  422559:	push   ss
  42255a:	hlt    
  42255b:	out    dx,al
  42255c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42255d:	fst    QWORD PTR [ebx]
  42255f:	xor    ebp,edi
  422561:	pop    edx
  422562:	fiadd  DWORD PTR [eax-0x3c]
  422565:	(bad)  
  422566:	and    edx,DWORD PTR [ecx]
  422568:	fsub   DWORD PTR [edi-0x7d]
  42256b:	mov    eax,0xc3fd23b
  422570:	sub    bl,BYTE PTR [ecx]
  422572:	xor    DWORD PTR [eax-0x73],esi
  422575:	outs   dx,BYTE PTR ds:[esi]
  422576:	lahf   
  422577:	loope  0x422505
  422579:	and    eax,0x7265863e
  42257e:	popa   
  42257f:	sub    dl,BYTE PTR [ebx-0x33]
  422582:	xchg   DWORD PTR [ecx],esp
  422584:	fidivr WORD PTR [ebp+ecx*1-0x55]
  422588:	mov    cl,0x12
  42258a:	add    BYTE PTR [esi],0x2b
  42258d:	aam    0x29
  42258f:	jle    0x422603
  422591:	loope  0x42257a
  422593:	pop    ss
  422594:	and    edx,DWORD PTR [ebp+ebx*1+0x28]
  422598:	lock jmp 0x42257a
  42259b:	or     BYTE PTR [edi+eiz*1-0x33],al
  42259f:	mov    al,0x45
  4225a1:	dec    ebx
  4225a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225a3:	mov    ch,0x34
  4225a5:	clc    
  4225a6:	mov    esp,0x7678e972
  4225ab:	cmp    DWORD PTR [edx-0x2b],edi
  4225ae:	mov    DWORD PTR [edx+ecx*8+0x24],edx
  4225b2:	push   edi
  4225b3:	mov    bl,0x9e
  4225b5:	loop   0x4225f0
  4225b7:	and    DWORD PTR gs:[esi-0x7980fd5e],ecx
  4225be:	add    esp,ebp
  4225c0:	jno    0x4225f2
  4225c2:	push   0x1ac843d2
  4225c7:	in     eax,0x89
  4225c9:	inc    eax
  4225ca:	cmp    edi,esi
  4225cc:	push   0x18
  4225ce:	mov    WORD PTR [esi+0x26],ss
  4225d1:	inc    edi
  4225d2:	pop    esp
  4225d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225d4:	jae    0x422570
  4225d6:	fsub   st(3),st
  4225d8:	pop    edi
  4225d9:	into   
  4225da:	xchg   esp,eax
  4225db:	jp     0x4225cb
  4225dd:	cmp    ebp,DWORD PTR ds:0x2d6131df
  4225e3:	jns    0x422583
  4225e5:	inc    eax
  4225e6:	jnp    0x42257e
  4225e8:	neg    dh
  4225ea:	int    0x7e
  4225ec:	cmp    ebp,edi
  4225ee:	int3   
  4225ef:	mov    dl,0xce
  4225f1:	repz xchg ebp,eax
  4225f3:	xor    ah,0xc8
  4225f6:	repnz imul esp,DWORD PTR [ebx],0xe536bd56
  4225fd:	daa    
  4225fe:	cmp    DWORD PTR [eax+0x3a],eax
  422601:	enter  0x2855,0x88
  422605:	(bad)  [edx]
  422607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422608:	data16 int 0xb1
  42260b:	dec    edx
  42260c:	(bad)  
  42260d:	rcl    BYTE PTR [edi],cl
  42260f:	mov    WORD PTR [edx+ecx*4-0x33efcd21],fs
  422616:	jnp    0x422646
  422618:	adc    al,0xd0
  42261a:	add    bl,BYTE PTR [ebx]
  42261c:	pusha  
  42261d:	push   0x2e056745
  422622:	mov    cl,0xd
  422624:	pusha  
  422625:	out    dx,eax
  422626:	mov    ds:0x329bbdd2,eax
  42262b:	add    ebx,DWORD PTR [esp+ecx*8]
  42262e:	gs call 0xbef9:0xcff14f56
  422636:	jg     0x4225f1
  422638:	inc    edx
  422639:	outs   dx,DWORD PTR ds:[esi]
  42263a:	loopne 0x422603
  42263c:	mov    dl,dl
  42263e:	jl     0x422695
  422640:	mov    eax,ds:0x1e80001
  422645:	add    BYTE PTR [eax],al
  422647:	sub    BYTE PTR [eax+eiz*2-0x2c],cl
  42264b:	or     al,0xb2
  42264d:	mov    al,0xab
  42264f:	push   ecx
  422650:	iret   
  422651:	dec    ecx
  422652:	iret   
  422653:	ja     0x4226a1
  422655:	push   ebx
  422656:	sbb    al,0xda
  422658:	sbb    ah,BYTE PTR ds:0xc6d4390b
  42265e:	xor    al,0x70
  422660:	jns    0x42265f
  422662:	cmp    esi,DWORD PTR [ebp+0x712b8e20]
  422668:	or     BYTE PTR [ecx+0x5a],ah
  42266b:	add    esp,ecx
  42266d:	int    0x94
  42266f:	cmp    DWORD PTR [ebx],eax
  422671:	dec    eax
  422672:	jge    0x4226d2
  422674:	xor    DWORD PTR [ebx],edx
  422676:	stos   DWORD PTR es:[edi],eax
  422677:	icebp  
  422678:	in     al,0xb7
  42267a:	(bad)  [ebp+0x6f]
  42267d:	pusha  
  42267e:	ins    BYTE PTR es:[edi],dx
  42267f:	ins    BYTE PTR es:[edi],dx
  422680:	cld    
  422681:	mov    dl,0x55
  422683:	fidivr WORD PTR [edi]
  422685:	xchg   ebx,eax
  422686:	ds jne 0x422613
  422689:	shl    BYTE PTR [ecx-0x5a],cl
  42268c:	ds jnp 0x42263b
  42268f:	ja     0x4226eb
  422691:	inc    ebp
  422692:	mov    ah,BYTE PTR [ebx+0x62]
  422695:	inc    edx
  422696:	push   es
  422697:	pop    eax
  422698:	dec    edx
  422699:	mov    BYTE PTR [esi+0x72],al
  42269c:	ins    BYTE PTR es:[edi],dx
  42269d:	dec    ebp
  42269e:	lahf   
  42269f:	and    BYTE PTR ds:0xcc132f76,al
  4226a5:	add    ebp,DWORD PTR [esi]
  4226a7:	add    al,0x6
  4226a9:	ret    
  4226aa:	stc    
  4226ab:	call   0xa500bb1b
  4226b0:	into   
  4226b1:	xor    al,0xc6
  4226b3:	dec    ebp
  4226b4:	fwait
  4226b5:	je     0x4226a3
  4226b7:	cwde   
  4226b8:	or     eax,0x7ddf73e8
  4226bd:	mov    ch,0xbe
  4226bf:	pop    esi
  4226c0:	rol    eax,0x1c
  4226c3:	xchg   edi,eax
  4226c4:	fisttp DWORD PTR [eax+0x50ae5e36]
  4226ca:	test   ebp,0x3f5d66fc
  4226d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226d1:	adc    esp,DWORD PTR [ecx+0x73a56952]
  4226d7:	pop    edi
  4226d8:	inc    eax
  4226d9:	push   ebx
  4226da:	dec    edi
  4226db:	dec    edx
  4226dc:	mov    bl,0x37
  4226de:	pop    edx
  4226df:	rcl    DWORD PTR [edi],cl
  4226e1:	jnp    0x422685
  4226e3:	jnp    0x4226dc
  4226e5:	shl    BYTE PTR es:[edx-0x1ba45e7f],cl
  4226ec:	fsub   DWORD PTR [eax+0x6f2b0a3a]
  4226f2:	imul   ebp,DWORD PTR gs:[edi+eax*8],0xf69dd720
  4226fa:	inc    edx
  4226fb:	xchg   edi,esp
  4226fd:	ret    0x2b18
  422700:	fild   QWORD PTR [ecx+0x51]
  422703:	lods   eax,DWORD PTR ds:[esi]
  422704:	loop   0x422721
  422706:	mov    edi,0x2b9da0e8
  42270b:	pop    ebx
  42270c:	push   edi
  42270d:	dec    eax
  42270e:	jl     0x4226dd
  422710:	inc    esp
  422711:	mov    BYTE PTR [edi-0x71e9a270],bh
  422717:	std    
  422718:	popf   
  422719:	inc    edi
  42271a:	or     bh,0xeb
  42271d:	push   edi
  42271e:	mov    DWORD PTR [ecx-0x25b4df25],ebx
  422724:	jnp    0x42279f
  422726:	inc    ebp
  422727:	inc    ebx
  422728:	imul   edx,DWORD PTR [ebp-0x57],0x63763b9d
  42272f:	icebp  
  422730:	test   al,0x10
  422732:	mov    al,BYTE PTR [esi+0x1f]
  422735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422736:	outs   dx,DWORD PTR ds:[esi]
  422737:	iret   
  422738:	loope  0x42272d
  42273a:	leave  
  42273b:	mov    esi,0x266f7aa6
  422740:	ficomp WORD PTR [ebp+0xe6a5934]
  422746:	mov    ebx,0x399d1a82
  42274b:	xor    BYTE PTR ds:[edi+eiz*8+0x360a274d],bh
  422753:	jae    0x660f5236
  422759:	lahf   
  42275a:	leave  
  42275b:	pop    esi
  42275c:	push   ss
  42275d:	xchg   ebx,eax
  42275e:	test   BYTE PTR [esi+0x6c],dh
  422761:	call   0xd610:0x48422c62
  422768:	sub    cl,0x4d
  42276b:	test   BYTE PTR [eax],ah
  42276d:	jecxz  0x42278a
  42276f:	jnp    0x422795
  422771:	imul   edi,edx,0xbe96f252
  422777:	pop    ebx
  422778:	and    al,0xfa
  42277a:	push   cs
  42277b:	sbb    BYTE PTR [edi+0x3a],ch
  42277e:	fwait
  42277f:	dec    ebx
  422780:	or     al,0x10
  422782:	add    eax,0x6c5d5ffc
  422787:	adc    ah,BYTE PTR [edi+esi*4-0x6cc5593d]
  42278e:	in     al,0x85
  422790:	icebp  
  422791:	and    eax,DWORD PTR [edx+0x25e29924]
  422797:	outs   dx,BYTE PTR ds:[esi]
  422798:	js     0x422796
  42279a:	lock xor BYTE PTR [edx],ah
  42279d:	jle    0x422787
  42279f:	inc    edx
  4227a0:	or     al,0xe7
  4227a2:	xchg   edx,eax
  4227a3:	push   ecx
  4227a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227a5:	call   0x8f27:0x52fa5f6f
  4227ac:	mov    al,BYTE PTR [edi+0x44]
  4227af:	in     eax,0x83
  4227b1:	test   al,0x2f
  4227b3:	cmp    DWORD PTR ds:0xd5bd7543,esp
  4227b9:	add    eax,DWORD PTR [eax-0x62]
  4227bc:	jg     0x422838
  4227be:	test   al,0xf2
  4227c0:	sbb    dl,0x9b
  4227c3:	xor    BYTE PTR [esi+ebx*8+0x4adc77c7],bl
  4227ca:	in     eax,dx
  4227cb:	xchg   DWORD PTR [esi-0x6d],ebx
  4227ce:	jae    0x422759
  4227d0:	sub    eax,0xb32b0a16
  4227d5:	cmc    
  4227d6:	cmp    DWORD PTR [ebp+eax*4+0x61],esi
  4227da:	jmp    0x1fd6d934
  4227df:	scas   al,BYTE PTR es:[edi]
  4227e0:	mov    al,0x2f
  4227e2:	popa   
  4227e3:	ja     0x4227ab
  4227e5:	add    dh,ch
  4227e7:	mov    ecx,0xf3a5140f
  4227ec:	cmp    al,0x6a
  4227ee:	fadd   DWORD PTR [esi+edi*8+0x73226df0]
  4227f5:	imul   ebp,DWORD PTR [eax-0x7d3b8f9a],0xfffffff2
  4227fc:	(bad)  
  4227fd:	jle    0x4227b1
  4227ff:	push   esp
  422800:	xor    BYTE PTR [ebx+eiz*8-0x6e],dl
  422804:	cmp    eax,0x692ed76a
  422809:	fcmovnbe st,st(3)
  42280b:	int3   
  42280c:	pop    ecx
  42280d:	push   es
  42280e:	adc    edi,esp
  422810:	jmp    0x9708:0x2daecaf0
  422817:	adc    al,0xac
  422819:	scas   al,BYTE PTR es:[edi]
  42281a:	dec    esp
  42281b:	adc    DWORD PTR [eax-0x7b6d624d],0x6bb9f62c
  422825:	push   eax
  422826:	(bad)  
  422827:	adc    BYTE PTR [eax+0x7f727cc5],cl
  42282d:	enter  0xfc9f,0xd7
  422831:	dec    esp
  422832:	call   0xd83f23a6
  422837:	loop   0x422880
  422839:	les    esi,FWORD PTR [eax+0x1c]
  42283c:	out    0x70,eax
  42283e:	sti    
  42283f:	cmp    eax,0xe80001a3
  422844:	add    DWORD PTR [eax],eax
  422846:	add    BYTE PTR [edx],bl
  422848:	mov    ds:0x82c70d6f,eax
  42284d:	jecxz  0x422898
  42284f:	int    0x6b
  422851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422852:	push   ecx
  422853:	clc    
  422854:	aas    
  422855:	les    eax,FWORD PTR [edx+0x34]
  422858:	jb     0x422882
  42285a:	cs cwde 
  42285c:	or     ebp,edi
  42285e:	aaa    
  42285f:	ja     0x422837
  422861:	sub    DWORD PTR [edi+ebx*1],ebp
  422864:	out    dx,al
  422865:	stos   BYTE PTR es:[edi],al
  422866:	rcr    BYTE PTR [ebx-0x16a1eb0d],1
  42286c:	mov    cl,0xeb
  42286e:	cmc    
  42286f:	add    dl,BYTE PTR [eax-0x2e1924ba]
  422875:	clc    
  422876:	adc    eax,DWORD PTR [ebp-0x368dde74]
  42287c:	in     al,0x86
  42287e:	mov    ds:0x24670f8f,al
  422883:	cmp    edx,edx
  422885:	pop    esi
  422886:	stos   BYTE PTR es:[edi],al
  422887:	pop    ds
  422888:	or     al,0x6f
  42288a:	retf   0xa841
  42288d:	mov    bh,ch
  42288f:	mov    esi,0x1dc2f78c
  422894:	jle    0x4228f5
  422896:	ret    0x5d78
  422899:	adc    DWORD PTR [edi],edx
  42289b:	xor    bh,BYTE PTR [edx+0x5b]
  42289e:	pusha  
  42289f:	int3   
  4228a0:	(bad)  
  4228a1:	nop
  4228a2:	xor    BYTE PTR [ecx+0x23],ch
  4228a5:	or     al,0x58
  4228a7:	rol    BYTE PTR [edx-0x24],0x9a
  4228ab:	jecxz  0x4228f0
  4228ad:	ret    0x1394
  4228b0:	mov    edx,0xa3089ad6
  4228b5:	push   ds
  4228b6:	into   
  4228b7:	sub    eax,0x83615075
  4228bc:	xchg   esp,eax
  4228bd:	loope  0x422926
  4228bf:	mov    ecx,DWORD PTR ds:0x40921c68
  4228c5:	mov    esi,0x9b1e0aec
  4228ca:	or     dl,cl
  4228cc:	or     ebp,DWORD PTR [ecx+0x1d]
  4228cf:	call   0xa2625152
  4228d4:	iret   
  4228d5:	sti    
  4228d6:	arpl   sp,bx
  4228d8:	xchg   edi,esi
  4228da:	lahf   
  4228db:	xchg   ebx,eax
  4228dc:	and    ebp,DWORD PTR [ecx]
  4228de:	es aaa 
  4228e0:	mov    eax,ds:0x464c4f4d
  4228e5:	out    dx,al
  4228e6:	inc    ebp
  4228e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228e8:	scas   al,BYTE PTR es:[edi]
  4228e9:	in     al,dx
  4228ea:	sbb    ebx,DWORD PTR [eax-0x3b]
  4228ed:	bnd je 0x4228b8
  4228f0:	int3   
  4228f1:	cmp    dl,BYTE PTR [ecx-0x39ee93ac]
  4228f7:	dec    esp
  4228f8:	loopne 0x422881
  4228fa:	loopne 0x422909
  4228fc:	add    al,0xeb
  4228fe:	jno    0x42296f
  422900:	push   es
  422901:	add    eax,0xec7f2bdb
  422906:	inc    edi
  422907:	test   al,0x15
  422909:	aas    
  42290a:	in     eax,0xd2
  42290c:	lds    esp,FWORD PTR [ebp+0x5a]
  42290f:	lahf   
  422910:	add    esp,edi
  422912:	loope  0x42297d
  422914:	adc    BYTE PTR [ebp-0x6f],ah
  422917:	jne    0x4228f2
  422919:	add    BYTE PTR es:[edi+0x1b7f5e21],cl
  422920:	mov    DWORD PTR [ebp+0x2694ad07],esi
  422926:	cld    
  422927:	rcl    BYTE PTR [ebp+0x24852d0],cl
  42292d:	dec    ebp
  42292e:	sub    edx,DWORD PTR [eax+0x17cac8a8]
  422934:	or     al,0x9c
  422936:	adc    BYTE PTR [edx+0x1b6ef632],0x59
  42293d:	push   edx
  42293e:	mov    al,ds:0x918f48e4
  422943:	mov    ebx,0xa0a6e6bf
  422948:	or     DWORD PTR [edi-0x52899a99],ebx
  42294e:	call   FWORD PTR [eax]
  422950:	adc    eax,0x236b3e07
  422955:	pop    es
  422956:	xchg   edx,eax
  422957:	push   esp
  422958:	xchg   edx,eax
  422959:	stos   BYTE PTR es:[edi],al
  42295a:	dec    edx
  42295b:	xor    dl,dh
  42295d:	pop    ebx
  42295f:	or     bl,dl
  422961:	jns    0x42290a
  422963:	fbld   TBYTE PTR [ebp-0x63e125c]
  422969:	dec    ecx
  42296a:	mov    DWORD PTR [eax],0x521f89fb
  422970:	push   ds
  422971:	mov    DWORD PTR [esi],esi
  422973:	push   ebx
  422974:	bswap  edi
  422976:	jmp    0x9285b43a
  42297b:	fwait
  42297c:	out    dx,eax
  42297d:	std    
  42297e:	adc    al,0x7b
  422980:	mov    DWORD PTR [ecx],edi
  422982:	jb     0x42297c
  422984:	pop    ebp
  422985:	inc    esi
  422986:	pop    ds
  422987:	in     al,dx
  422988:	push   eax
  422989:	pusha  
  42298a:	mov    ecx,0x5a802b99
  42298f:	cwde   
  422990:	test   eax,0x94c4da0
  422995:	call   0xf5bf:0x1837909f
  42299c:	shl    DWORD PTR [esi],1
  42299e:	mov    WORD PTR [edx-0x5f02f72e],?
  4229a4:	scas   al,BYTE PTR es:[edi]
  4229a5:	popa   
  4229a6:	xor    al,0x79
  4229a8:	mov    al,0xd9
  4229aa:	fistp  WORD PTR [eax-0x13]
  4229ad:	(bad)  
  4229ae:	jnp    0x422994
  4229b0:	or     al,0x74
  4229b2:	push   ecx
  4229b3:	js     0x422995
  4229b5:	mov    edi,0x63c5c906
  4229ba:	jnp    0x42293d
  4229bc:	inc    BYTE PTR ds:0x8e6c4012
  4229c2:	dec    edx
  4229c3:	iret   
  4229c4:	inc    esi
  4229c5:	cdq    
  4229c6:	into   
  4229c7:	into   
  4229c8:	inc    ebp
  4229c9:	cld    
  4229ca:	outs   dx,BYTE PTR ds:[esi]
  4229cb:	int3   
  4229cc:	(bad)  
  4229cd:	mov    ebp,0xd9d49d75
  4229d2:	outs   dx,DWORD PTR ds:[esi]
  4229d3:	mov    dl,0xf1
  4229d5:	or     BYTE PTR [edi],0x58
  4229d8:	ins    DWORD PTR es:[edi],dx
  4229d9:	mov    al,ds:0xe0279dfc
  4229de:	iret   
  4229df:	add    esi,DWORD PTR [edi+0x28fd9d5f]
  4229e5:	das    
  4229e6:	je     0x42296c
  4229e8:	lahf   
  4229e9:	mov    bh,0x7
  4229eb:	or     ecx,DWORD PTR [edi+0x64]
  4229ee:	std    
  4229ef:	xchg   BYTE PTR [edi+0x6d],al
  4229f2:	dec    esp
  4229f3:	scas   al,BYTE PTR es:[edi]
  4229f4:	pop    edx
  4229f5:	sar    BYTE PTR [eax+ebp*2],0x8f
  4229f9:	inc    esp
  4229fa:	imul   ecx,edx,0x53
  4229fd:	inc    ebx
  4229fe:	neg    BYTE PTR [ebp-0x2575a288]
  422a04:	ds das 
  422a06:	mov    bh,0x59
  422a08:	rol    DWORD PTR [ecx-0x54],1
  422a0b:	push   eax
  422a0c:	inc    esi
  422a0d:	(bad)  [edx+0xe]
  422a10:	icebp  
  422a11:	enter  0x7b86,0x75
  422a15:	fidiv  DWORD PTR [edi+0x7b6e7d50]
  422a1b:	sub    eax,0x5abcc1f4
  422a20:	inc    ebp
  422a21:	rcr    BYTE PTR [edi-0x2c],cl
  422a24:	dec    DWORD PTR [edi-0x67]
  422a27:	(bad)  
  422a28:	sti    
  422a29:	sti    
  422a2a:	in     al,0x89
  422a2c:	and    ch,BYTE PTR [eax-0x7f]
  422a2f:	inc    ecx
  422a30:	out    dx,eax
  422a31:	jnp    0x422a61
  422a33:	(bad)  
  422a34:	mov    esi,0x1864ef55
  422a39:	xlat   BYTE PTR ds:[ebx]
  422a3a:	ldmxcsr DWORD PTR [ecx-0x5ada077f]
  422a41:	add    DWORD PTR [eax],eax
  422a43:	call   0x77422a49
  422a48:	mov    WORD PTR fs:[esi],ss
  422a4b:	adc    al,0x4
  422a4d:	iret   
  422a4e:	xchg   edi,eax
  422a4f:	call   0xba65fffb
  422a54:	int    0xd
  422a56:	jmp    0x422a29
  422a58:	mov    al,BYTE PTR [edx+0x7c]
  422a5b:	sbb    DWORD PTR [eax+0x7296758c],edi
  422a61:	dec    ecx
  422a62:	cmp    dh,BYTE PTR [esi+0x2]
  422a65:	mov    ecx,DWORD PTR [ebp+0x61dc146a]
  422a6b:	jb     0x422a2c
  422a6d:	pop    ebx
  422a6e:	loop   0x422abb
  422a70:	les    eax,FWORD PTR [edx-0x9]
  422a73:	adc    eax,0xb6f6e836
  422a78:	call   0x506324e7
  422a7d:	mov    al,ds:0x3b79ef8d
  422a82:	sub    dl,al
  422a84:	nop
  422a85:	push   0xffffff80
  422a87:	or     al,0xa2
  422a89:	xor    dh,BYTE PTR [eax-0x28b37457]
  422a8f:	(bad)  
  422a90:	xchg   esp,eax
  422a91:	jo     0x422a3c
  422a93:	jmp    0x422a34
  422a95:	add    ebp,ebp
  422a97:	mov    dh,0xba
  422a99:	repz sub edx,DWORD PTR [ebx]
  422a9c:	mov    edx,0xdcf637f5
  422aa1:	inc    edx
  422aa2:	pop    edi
  422aa3:	leave  
  422aa4:	data16 (bad) 
  422aa7:	gs dec esp
  422aa9:	cmp    DWORD PTR [edi],0x8
  422aac:	jne    0x422a37
  422aae:	into   
  422aaf:	stos   DWORD PTR es:[edi],eax
  422ab0:	mov    ds,ecx
  422ab2:	sbb    DWORD PTR [edi],esi
  422ab4:	test   eax,0x217648
  422ab9:	ffreep st(6)
  422abb:	jmp    0x8b60:0xd2450beb
  422ac2:	sbb    al,0x8a
  422ac4:	test   eax,0x887c1981
  422ac9:	push   eax
  422aca:	push   ebx
  422acb:	pop    ds
  422acc:	and    esp,0x61
  422acf:	ret    0x97d2
  422ad2:	or     esp,DWORD PTR [edx]
  422ad4:	jmp    0xfad4:0x6f02a26e
  422adb:	mov    eax,esi
  422add:	lahf   
  422ade:	sub    eax,0x7d6bf863
  422ae3:	mov    cl,cl
  422ae5:	sub    eax,0x40bda36e
  422aea:	pop    ds
  422aeb:	jg     0x422b15
  422aed:	outs   dx,BYTE PTR ds:[esi]
  422aee:	xor    al,0xe9
  422af0:	add    cl,cl
  422af2:	push   cx
  422af4:	idiv   BYTE PTR [ebx-0x68]
  422af7:	sbb    eax,0xcb91b3a1
  422afc:	push   0x85d640b9
  422b01:	mov    ds:0x5242737c,eax
  422b06:	test   DWORD PTR [edx],0x79196915
  422b0c:	xor    DWORD PTR [ebx+0xb],edi
  422b0f:	sar    DWORD PTR [ebp-0x54bc2b0d],1
  422b15:	mov    DWORD PTR ss:0x792acf32,eax
  422b1c:	aas    
  422b1d:	mov    al,0xa
  422b1f:	or     esp,esi
  422b21:	fdivr  DWORD PTR [ebx+ecx*8+0x57ebffed]
  422b28:	dec    eax
  422b29:	inc    esi
  422b2a:	dec    ebx
  422b2b:	mov    esp,0xa38a3429
  422b30:	mov    eax,0xa9fa6738
  422b35:	hlt    
  422b36:	jmp    0x8964d86b
  422b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b3c:	dec    ebp
  422b3d:	mov    esp,0xa014efa2
  422b42:	inc    esp
  422b43:	leave  
  422b44:	xor    ah,BYTE PTR [ecx+eax*2-0x6]
  422b48:	std    
  422b49:	and    DWORD PTR [eax-0x2da24d6d],0xc646077e
  422b53:	les    ebx,FWORD PTR ss:[ebp-0x18f953e1]
  422b5a:	sbb    DWORD PTR [eax+0x72a94704],0x1a39334d
  422b64:	mov    esi,edi
  422b66:	(bad)  
  422b67:	pushf  
  422b68:	imul   BYTE PTR [ecx+0x1f119b4e]
  422b6e:	xchg   edx,eax
  422b6f:	mov    ah,0x4d
  422b71:	mul    DWORD PTR [edi+ecx*8+0x55]
  422b75:	xchg   ebp,eax
  422b76:	jp     0x422b6b
  422b78:	scas   al,BYTE PTR es:[edi]
  422b79:	shl    BYTE PTR [ebx+0x1c9dea5d],0x70
  422b80:	add    dl,BYTE PTR [ecx]
  422b82:	push   esp
  422b83:	mov    eax,0x1ac6a4d2
  422b88:	pop    ecx
  422b89:	mov    bl,0x87
  422b8b:	aad    0xc3
  422b8d:	push   ds
  422b8e:	retf   
  422b8f:	mov    ebp,0xf0f9ebfe
  422b94:	out    dx,al
  422b95:	jg     0x422b57
  422b97:	ja     0x422bd3
  422b99:	jg     0x422c0b
  422b9b:	pop    DWORD PTR [si]
  422b9e:	(bad)  
  422b9f:	push   esi
  422ba0:	mov    DWORD PTR [edx-0x17],edx
  422ba3:	mov    BYTE PTR [ebp-0x3e],ch
  422ba6:	sbb    al,0xba
  422ba8:	cmp    DWORD PTR [eax+0x1653f4a3],esp
  422bae:	(bad)  
  422bb0:	mov    ds:0x9afedbff,al
  422bb5:	cmc    
  422bb6:	cmp    al,0xf4
  422bb8:	cmc    
  422bb9:	test   al,0x9
  422bbb:	mov    ch,0x27
  422bbd:	mov    esi,0x9db93cea
  422bc2:	(bad)  
  422bc3:	sub    eax,0x466e0393
  422bc8:	jp     0x422c3a
  422bca:	ret    
  422bcb:	cmp    eax,0xf4e02662
  422bd0:	data16 ins BYTE PTR es:[edi],dx
  422bd2:	lods   al,BYTE PTR ds:[esi]
  422bd3:	add    al,0xdb
  422bd5:	aam    0x40
  422bd7:	inc    eax
  422bd8:	test   al,0xa
  422bda:	fsub   DWORD PTR [esi+0x65]
  422bdd:	sbb    ecx,DWORD PTR ds:0x239e6941
  422be3:	retf   
  422be4:	mov    esp,0x99383d64
  422be9:	cdq    
  422bea:	repnz (bad)
  422bed:	lea    esi,ds:0x3c25629a
  422bf3:	xor    al,0xc5
  422bf5:	push   es
  422bf6:	mov    esp,0x18f47947
  422bfb:	adc    al,0xa1
  422bfd:	sahf   
  422bfe:	xchg   ebp,eax
  422bff:	xor    DWORD PTR [edx+0x77],ecx
  422c02:	push   ebp
  422c03:	dec    eax
  422c04:	adc    bl,BYTE PTR [ecx-0x46]
  422c07:	leave  
  422c08:	mov    ch,0x72
  422c0a:	je     0x422bd5
  422c0c:	jmp    0x9db14757
  422c11:	in     al,0xa
  422c13:	retf   
  422c14:	xor    esi,DWORD PTR [edx+ebp*4]
  422c17:	inc    esi
  422c18:	(bad)  
  422c19:	scas   al,BYTE PTR es:[edi]
  422c1a:	inc    esp
  422c1b:	xchg   esi,eax
  422c1c:	dec    ebx
  422c1d:	ret    
  422c1e:	dec    esp
  422c1f:	pop    es
  422c20:	and    BYTE PTR [ecx],cl
  422c22:	add    bl,BYTE PTR ds:0x21f5bf7e
  422c28:	sub    eax,0x869b681a
  422c2d:	inc    esp
  422c2e:	sbb    dl,BYTE PTR ds:0x7f7d7f79
  422c34:	jg     0x422c4d
  422c36:	jns    0x422c85
  422c38:	dec    edx
  422c39:	lea    ecx,[ebx+0x4e]
  422c3c:	or     eax,0xa70d5c73
  422c41:	add    DWORD PTR [eax],eax
  422c43:	call   0xcc422c49
  422c48:	fsub   st(2),st
  422c4a:	stos   BYTE PTR es:[edi],al
  422c4b:	adc    ecx,ebp
  422c4d:	sbb    BYTE PTR [edx+ebp*4-0x19],dh
  422c51:	retf   
  422c52:	ret    
  422c53:	dec    ecx
  422c54:	dec    esi
  422c55:	ficom  DWORD PTR [ebp+edi*2-0x6]
  422c59:	sbb    al,0xe6
  422c5b:	xor    ebp,DWORD PTR [edx-0x23]
  422c5e:	push   edi
  422c5f:	jns    0x422c38
  422c61:	lahf   
  422c62:	add    ecx,DWORD PTR [eax-0x55]
  422c65:	(bad)  
  422c66:	xor    BYTE PTR [esi+0x56361895],0x4b
  422c6d:	test   eax,0xdbcd3e40
  422c72:	into   
  422c73:	mov    ds:0x2ea2d2f9,eax
  422c78:	dec    esi
  422c79:	imul   ecx,DWORD PTR [edx-0xb293b73],0xd856842b
  422c83:	mov    edi,0xad40822c
  422c88:	mov    al,BYTE PTR [ebx+0x502c77b]
  422c8e:	mov    ebx,0xf51e33a
  422c93:	fwait
  422c94:	loop   0x422c71
  422c96:	sbb    esi,ecx
  422c98:	arpl   WORD PTR [edi+0x66],dx
  422c9b:	xor    BYTE PTR [esi+0x72],cl
  422c9e:	inc    ecx
  422c9f:	loop   0x422d0e
  422ca1:	xchg   DWORD PTR [edi],ebx
  422ca3:	pusha  
  422ca4:	retf   
  422ca5:	aam    0x11
  422ca7:	outs   dx,BYTE PTR ds:[esi]
  422ca8:	jp     0x422c55
  422caa:	xchg   esi,eax
  422cab:	test   BYTE PTR [ebx],al
  422cad:	(bad)  
  422caf:	sbb    edx,ecx
  422cb1:	aad    0x8c
  422cb3:	int3   
  422cb4:	cmp    eax,0xc5f9e709
  422cb9:	push   edx
  422cba:	and    cl,BYTE PTR [ebx-0x464d3737]
  422cc0:	retf   
  422cc1:	shr    BYTE PTR [edi],1
  422cc3:	icebp  
  422cc4:	sbb    al,0x8c
  422cc6:	push   ebx
  422cc7:	mov    ds:0xd1c240c,eax
  422ccc:	int    0xa0
  422cce:	xor    DWORD PTR [edx],0xffffffc2
  422cd1:	js     0x422d38
  422cd3:	jns    0x422c6f
  422cd5:	mov    bl,0x9b
  422cd7:	pop    esi
  422cd8:	add    eax,0x7a
  422cdb:	xchg   esi,eax
  422cdc:	xchg   esp,esi
  422cde:	test   al,0x1b
  422ce0:	mov    edi,eax
  422ce2:	leave  
  422ce3:	push   esi
  422ce4:	mov    eax,ds:0xa3e534a0
  422ce9:	mov    cl,0x19
  422ceb:	jae    0x422d48
  422ced:	jg     0x422cc7
  422cef:	mov    esp,DWORD PTR [esi-0x4728ebcf]
  422cf5:	inc    esi
  422cf6:	mov    eax,ds:0x164eded4
  422cfb:	fsubr  DWORD PTR [edx+eax*4-0x2e]
  422cff:	fcom   QWORD PTR [ecx]
  422d01:	cmp    al,0xf
  422d03:	push   edi
  422d04:	mov    eax,ds:0xc212d7cd
  422d09:	mov    eax,0x1114ebc
  422d0e:	add    ah,dl
  422d10:	and    al,0x54
  422d12:	push   ebx
  422d13:	test   al,0x4a
  422d15:	sbb    eax,esi
  422d17:	cmp    al,0x28
  422d19:	or     bh,BYTE PTR [edx-0x4ff76468]
  422d1f:	cmp    DWORD PTR ds:0xba7ec970,edx
  422d25:	sub    DWORD PTR [ebp+edx*4-0x4e],esi
  422d29:	jle    0x422d2b
  422d2b:	std    
  422d2c:	dec    ecx
  422d2d:	sbb    al,0x2
  422d2f:	jb     0x422d34
  422d31:	xchg   ecx,eax
  422d32:	and    BYTE PTR [eax+ebp*4],bh
  422d35:	loop   0x422d19
  422d37:	lods   eax,DWORD PTR ds:[esi]
  422d38:	jle    0x422d63
  422d3a:	cld    
  422d3b:	(bad)  
  422d3c:	mov    bl,0x8e
  422d3e:	sbb    al,0xe3
  422d40:	cmc    
  422d41:	ins    DWORD PTR es:[edi],dx
  422d42:	clc    
  422d43:	mov    eax,ds:0xaccf004b
  422d48:	jg     0x422dbd
  422d4a:	fiadd  WORD PTR [esi-0x44]
  422d4d:	cmp    edi,DWORD PTR [ecx+0x6b]
  422d50:	xlat   BYTE PTR ds:[ebx]
  422d51:	sbb    BYTE PTR [eax+0x5a219ef9],al
  422d57:	and    edx,DWORD PTR [esi]
  422d59:	rol    ch,1
  422d5b:	iret   
  422d5c:	ins    BYTE PTR es:[edi],dx
  422d5d:	hlt    
  422d5e:	inc    esi
  422d5f:	xor    BYTE PTR [ebp-0x69],bh
  422d62:	fstp   DWORD PTR [ebp-0x30e4b76f]
  422d68:	shr    BYTE PTR [ecx-0x493ba737],1
  422d6e:	icebp  
  422d6f:	popa   
  422d70:	into   
  422d71:	fwait
  422d72:	mov    al,ds:0xf7b99c85
  422d77:	bswap  esp
  422d79:	arpl   dx,cx
  422d7b:	stc    
  422d7c:	clc    
  422d7d:	adc    bh,BYTE PTR [edi+0x5d]
  422d80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d81:	cwde   
  422d82:	push   edi
  422d83:	pushf  
  422d84:	push   ebp
  422d85:	mov    ds:0x1dff33bf,eax
  422d8a:	(bad)  
  422d8b:	xchg   ebp,eax
  422d8c:	mov    bl,0x5
  422d8e:	(bad)  
  422d8f:	jg     0x422d15
  422d91:	retf   0xd6d6
  422d94:	ins    BYTE PTR es:[edi],dx
  422d95:	out    dx,eax
  422d96:	fwait
  422d97:	imul   edx,ebx,0x6c
  422d9a:	xor    BYTE PTR [ebx+0x62],bl
  422d9d:	mov    edx,0x51b2af79
  422da2:	imul   eax,DWORD PTR [eax*8+0x237b7c0b],0xffffffe8
  422daa:	pop    ebp
  422dab:	pusha  
  422dac:	push   0xffffffa9
  422dae:	and    dl,bl
  422db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422db1:	icebp  
  422db2:	retf   
  422db3:	mov    dh,0xf0
  422db5:	fs icebp 
  422db7:	xor    DWORD PTR [esi-0x3aa3dc0],0x53
  422dbe:	stos   DWORD PTR es:[edi],eax
  422dbf:	and    BYTE PTR [ecx],bh
  422dc1:	sahf   
  422dc2:	dec    ecx
  422dc3:	add    ecx,eax
  422dc5:	mov    edx,0x77ef72a9
  422dca:	test   BYTE PTR [esi],ah
  422dcc:	inc    ebp
  422dcd:	div    BYTE PTR [ebx+ebx*4+0x7d]
  422dd1:	mov    bh,0x28
  422dd3:	push   ebx
  422dd4:	das    
  422dd5:	rol    BYTE PTR [ebp+0x724a0cc5],0x59
  422ddc:	cmp    bl,dl
  422dde:	out    dx,eax
  422ddf:	in     eax,dx
  422de0:	xor    bl,bh
  422de2:	push   cs
  422de3:	push   ebp
  422de4:	scas   al,BYTE PTR es:[edi]
  422de5:	fsub   DWORD PTR [ebp+0x7cc5715e]
  422deb:	and    dh,bh
  422ded:	pop    edi
  422dee:	or     al,0x79
  422df0:	jae    0x422d98
  422df2:	shl    DWORD PTR [esi+0x63],1
  422df5:	mov    ebp,0xe0ef685f
  422dfa:	sbb    eax,0xe4c11625
  422dff:	test   eax,0x39a20681
  422e04:	clc    
  422e05:	mov    esp,0x18aa021c
  422e0a:	inc    DWORD PTR [edi-0x4b]
  422e0d:	inc    ebp
  422e0e:	mov    esp,0xc0cf07d3
  422e13:	adc    eax,0x5eda5a5b
  422e18:	sub    cl,dh
  422e1a:	xor    eax,0xf9e7195
  422e1f:	aad    0xdd
  422e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e22:	(bad)  
  422e23:	call   0x83915c14
  422e28:	dec    esp
  422e29:	push   edx
  422e2a:	loopne 0x422e1b
  422e2c:	(bad)  
  422e2d:	dec    edi
  422e2e:	push   esi
  422e2f:	outs   dx,BYTE PTR ds:[esi]
  422e30:	idiv   DWORD PTR [ebx-0x1924497]
  422e36:	test   DWORD PTR [ebp+0x37153db3],0xf5699b62
  422e40:	test   al,0x1
  422e42:	add    al,ch
  422e44:	add    DWORD PTR [eax],eax
  422e46:	add    BYTE PTR [edi+0x53],bh
  422e49:	(bad)  
  422e4a:	pop    ecx
  422e4b:	imul   eax,ebp,0x5f6c1a29
  422e51:	mov    BYTE PTR [edi],ah
  422e53:	pop    ds
  422e54:	out    0xbf,eax
  422e56:	xor    BYTE PTR [edi+0x5],ch
  422e59:	and    BYTE PTR [edx+ecx*2-0x6a],bh
  422e5d:	retf   
  422e5e:	leave  
  422e5f:	and    DWORD PTR [esi-0x58],edi
  422e62:	ins    DWORD PTR es:[edi],dx
  422e63:	ret    
  422e64:	or     ebx,0xffffff8b
  422e67:	and    esp,DWORD PTR [ebx]
  422e69:	(bad)  
  422e6a:	push   cs
  422e6b:	mov    ds:0x42e8a93f,al
  422e70:	sbb    al,0x5d
  422e72:	mov    eax,ds:0x97822339
  422e77:	xchg   ebx,eax
  422e78:	add    eax,0x3f97186e
  422e7d:	xlat   BYTE PTR ds:[ebx]
  422e7e:	fstp   TBYTE PTR [edx+0x421f8703]
  422e84:	imul   edi,DWORD PTR [esi],0x7901d61a
  422e8a:	fimul  DWORD PTR [ecx+0x7d]
  422e8d:	xchg   ebp,eax
  422e8e:	xchg   ebx,eax
  422e8f:	inc    ecx
  422e90:	mov    ch,0x68
  422e92:	leave  
  422e93:	cmp    al,0xd7
  422e95:	repz xchg esp,eax
  422e97:	shl    BYTE PTR [edi-0x1f],cl
  422e9a:	out    dx,al
  422e9b:	rol    ch,0x2f
  422e9e:	cmp    eax,0xc6d8027c
  422ea3:	jae    0x422f01
  422ea5:	xor    edx,esi
  422ea7:	pop    es
  422ea8:	dec    ebx
  422ea9:	inc    edx
  422eaa:	pushf  
  422eab:	dec    edi
  422eac:	aam    0xa0
  422eae:	nop
  422eaf:	cli    
  422eb0:	pop    edx
  422eb1:	ret    0xf6d8
  422eb4:	xchg   edx,eax
  422eb5:	push   edx
  422eb6:	cmp    eax,DWORD PTR [edx]
  422eb8:	jo     0x422ed0
  422eba:	jae    0x422e82
  422ebc:	inc    ecx
  422ebd:	mov    bl,0x22
  422ebf:	xchg   BYTE PTR [eax-0x2e],ah
  422ec2:	sbb    ch,ah
  422ec4:	and    BYTE PTR [edi+0x13214663],0x79
  422ecb:	es push esi
  422ecd:	xlat   BYTE PTR ds:[ebx]
  422ece:	add    eax,0xe2aa1fd3
  422ed3:	arpl   WORD PTR [ecx+0x78ed818b],si
  422ed9:	mov    cl,ch
  422edb:	sbb    al,0x59
  422edd:	adc    ah,ah
  422edf:	call   FWORD PTR [ebx+0xb]
  422ee2:	inc    ebx
  422ee3:	jb     0x422f36
  422ee5:	dec    edx
  422ee6:	cld    
  422ee7:	or     eax,0x4747212e
  422eec:	popf   
  422eed:	(bad)  
  422eee:	aam    0x84
  422ef0:	adc    ebp,DWORD PTR [eax+ebp*8+0x476ba35f]
  422ef7:	jmp    0xde37:0xbda98367
  422efe:	cmp    BYTE PTR [eax-0x23fb5afa],al
  422f04:	pop    ecx
  422f05:	cs xchg edx,eax
  422f07:	xchg   ebx,eax
  422f08:	or     BYTE PTR [edx+0xe],bh
  422f0b:	lds    edx,FWORD PTR [ecx-0x5adf5388]
  422f11:	and    ebx,DWORD PTR [ebx+0x55]
  422f14:	sub    edx,eax
  422f16:	pop    ecx
  422f17:	dec    eax
  422f18:	cmp    al,0x44
  422f1a:	inc    edx
  422f1b:	adc    esi,DWORD PTR [ebx+0xd]
  422f1e:	add    al,0xf6
  422f20:	repnz mov eax,ds:0x928c6cb8
  422f26:	fsub   QWORD PTR [edi+0x236ad1f2]
  422f2c:	ss or  edx,edx
  422f2f:	or     esi,DWORD PTR [eax]
  422f31:	rcl    DWORD PTR [esi-0x678fcd2f],cl
  422f37:	xlat   BYTE PTR ds:[ebx]
  422f38:	dec    edx
  422f39:	and    eax,0x68f1dd83
  422f3e:	push   cs
  422f3f:	jmp    0xa7656cb0
  422f44:	xor    DWORD PTR ds:0x7039330d,0xdb7b6d9d
  422f4e:	sub    BYTE PTR [ebp+0x61],ah
  422f51:	pop    ss
  422f52:	movntdq XMMWORD PTR [edi],xmm2
  422f56:	mov    bl,0x89
  422f58:	adc    DWORD PTR [edi],ebx
  422f5a:	xor    eax,DWORD PTR [ecx]
  422f5c:	je     0x422f30
  422f5e:	push   ss
  422f5f:	jmp    0xdfded475
  422f64:	fsubr  QWORD PTR [esp+ecx*8-0x365a5731]
  422f6b:	add    BYTE PTR [edx+0x6805fbf1],bh
  422f71:	out    dx,al
  422f72:	fidivr DWORD PTR [ebp-0x6426cc33]
  422f79:	aam    0x6
  422f7b:	icebp  
  422f7c:	lahf   
  422f7d:	push   ebx
  422f7e:	fisttp QWORD PTR [eax+0x7653e262]
  422f84:	adc    BYTE PTR [edi],al
  422f86:	push   ebp
  422f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f88:	mov    dl,BYTE PTR [eax]
  422f8a:	cmp    esp,DWORD PTR [esi]
  422f8c:	cmp    edx,DWORD PTR ds:0x7885bfad
  422f92:	dec    ecx
  422f93:	inc    ebx
  422f94:	in     al,0x7a
  422f96:	jb     0x422f26
  422f98:	cmp    eax,0xcfabd43
  422f9d:	cmp    BYTE PTR [ebx-0x32284099],cl
  422fa3:	add    eax,0x8f86d74
  422fa8:	aam    0x96
  422faa:	push   0x556e164b
  422faf:	and    al,0x56
  422fb1:	mulps  xmm7,XMMWORD PTR [edi-0x79]
  422fb5:	out    0x96,al
  422fb7:	adc    al,BYTE PTR [edx+0x5c]
  422fba:	xchg   BYTE PTR [ebp+0x2d],al
  422fbd:	cdq    
  422fbe:	ins    BYTE PTR es:[edi],dx
  422fbf:	mov    WORD PTR [edx+eax*8-0x26],gs
  422fc3:	jle    0x423037
  422fc5:	ret    0x15aa
  422fc8:	mov    dl,BYTE PTR [esi-0x19f62aeb]
  422fce:	push   cs
  422fcf:	mov    BYTE PTR [edi],dh
  422fd1:	mov    dl,0x5a
  422fd3:	adc    DWORD PTR [ecx],edi
  422fd5:	lea    edi,[eax]
  422fd7:	test   BYTE PTR [edi+0x1d],bh
  422fda:	mov    dl,cl
  422fdc:	out    dx,eax
  422fdd:	sub    si,WORD PTR [edi+esi*8-0x3b]
  422fe2:	aad    0x5f
  422fe4:	(bad)  
  422fe5:	div    BYTE PTR [ebp+0xe17f6b9]
  422feb:	adc    eax,edx
  422fed:	loopne 0x42305c
  422fef:	or     DWORD PTR [ebp+0x67],0x69443b1a
  422ff6:	hlt    
  422ff7:	aam    0xa1
  422ff9:	mov    BYTE PTR [esi],dh
  422ffb:	leave  
  422ffc:	mov    WORD PTR [eax+0x10827f37],fs
  423002:	arpl   WORD PTR [ebx],cx
  423004:	bound  edx,QWORD PTR [ecx-0x2f]
  423007:	dec    eax
  423008:	mov    WORD PTR [ecx+0x6db6a800],cs
  42300e:	fs adc eax,0x42af68b1
  423014:	(bad)  
  423015:	jg     0x423011
  423017:	mov    bh,BYTE PTR [esi+0x10]
  42301a:	mov    eax,ds:0x65c2109d
  42301f:	sub    eax,0x6e0377ed
  423024:	enter  0x51d,0x6
  423028:	or     DWORD PTR [eax-0x7e46dfe4],ecx
  42302e:	jne    0x42305d
  423030:	les    ebx,FWORD PTR [edi-0x5]
  423033:	(bad)  
  423034:	sti    
  423035:	lods   eax,DWORD PTR ds:[esi]
  423036:	(bad)  
  423037:	xchg   ecx,eax
  423038:	loop   0x422fc2
  42303a:	xchg   edx,eax
  42303b:	pop    edi
  42303c:	sti    
  42303d:	ret    
  42303e:	inc    edx
  42303f:	(bad)  [edx+0x1e80001]
  423045:	add    BYTE PTR [eax],al
  423047:	push   ebx
  423048:	pop    ds
  423049:	mov    ds:0x4d4969e1,eax
  42304e:	jp     0x422ff6
  423050:	jge    0x423062
  423052:	lock cmp ebp,ebx
  423055:	dec    edi
  423056:	mov    al,ds:0x97ea2d1c
  42305b:	js     0x422fdd
  42305d:	ret    
  42305e:	repz sbb cl,ch
  423061:	jno    0x4230cc
  423063:	xlat   BYTE PTR ds:[ebx]
  423064:	cdq    
  423065:	jne    0x423047
  423067:	add    esp,DWORD PTR [ebx-0x4850b911]
  42306d:	cmp    BYTE PTR [edi+0x63640c23],ch
  423073:	xchg   ebp,eax
  423074:	dec    esi
  423075:	mov    ecx,0xf41bc1a8
  42307a:	xor    dl,al
  42307c:	push   ecx
  42307d:	jo     0x423088
  42307f:	or     ecx,esi
  423081:	imul   esi,DWORD PTR ds:0x481c58ee,0xffffffa0
  423088:	inc    edi
  423089:	in     eax,dx
  42308a:	pop    esp
  42308b:	mov    ebp,ebx
  42308d:	iret   
  42308e:	sbb    eax,0x66d64c2
  423093:	lock mov esp,0x19dec4df
  423099:	pop    ebx
  42309a:	test   al,0x52
  42309c:	dec    ecx
  42309d:	cmp    al,0x75
  42309f:	ds cdq 
  4230a1:	in     eax,dx
  4230a2:	inc    ebp
  4230a3:	inc    ebp
  4230a4:	(bad)  
  4230a6:	jge    0x423069
  4230a8:	jmp    0x4230ac
  4230aa:	add    BYTE PTR [eax-0x32],0x72
  4230ae:	ins    DWORD PTR es:[edi],dx
  4230af:	call   0xe6eb783c
  4230b4:	jno    0x423056
  4230b6:	inc    eax
  4230b7:	adc    eax,0xf8ea355e
  4230bc:	(bad)  [esi-0x45]
  4230bf:	or     al,0xfb
  4230c1:	aam    0x95
  4230c3:	inc    eax
  4230c4:	cmp    DWORD PTR [ecx+0x23],ecx
  4230c7:	cwde   
  4230c8:	xchg   edx,eax
  4230c9:	int3   
  4230ca:	(bad)  
  4230cb:	jae    0x42306c
  4230cd:	pop    es
  4230ce:	out    0x9a,al
  4230d0:	adc    esp,DWORD PTR [edi-0x151d997c]
  4230d6:	inc    ebp
  4230d7:	xchg   ebx,eax
  4230d8:	mov    dl,0x6
  4230da:	(bad)  
  4230db:	out    0xd1,al
  4230dd:	inc    eax
  4230de:	cmc    
  4230df:	jne    0x42306d
  4230e1:	xchg   edx,eax
  4230e2:	jmp    0x9894:0x42f2a370
  4230e9:	aas    
  4230ea:	popaw  
  4230ec:	aad    0xf5
  4230ee:	lea    edi,ds:0x80c4ef14
  4230f4:	jmp    DWORD PTR [ecx-0x27eac714]
  4230fa:	lsl    ebx,WORD PTR [ebx-0x5c]
  4230fe:	jo     0x4230f1
  423100:	pop    ds
  423101:	aas    
  423102:	xor    bh,BYTE PTR [ecx+eax*2]
  423105:	add    bl,BYTE PTR ds:0xabaef814
  42310b:	dec    DWORD PTR [edx-0x33e1ee4a]
  423111:	fild   DWORD PTR [ecx+edx*1+0x1e]
  423115:	fcomp  QWORD PTR [ebx-0xa]
  423118:	or     al,0x6b
  42311a:	cld    
  42311b:	shr    DWORD PTR [ebx],0xd5
  42311e:	lock ret 0x3d81
  423122:	imul   esp,DWORD PTR [ecx-0x77d383ae],0x73
  423129:	test   esi,esp
  42312b:	mov    cl,0xc3
  42312d:	jns    0x4230c8
  42312f:	(bad)  
  423130:	fidiv  DWORD PTR [ebx+0x6d5fe7b9]
  423136:	test   esi,esi
  423138:	daa    
  423139:	lods   al,BYTE PTR ds:[esi]
  42313a:	ins    DWORD PTR es:[edi],dx
  42313b:	mov    al,0x96
  42313d:	call   0x79a1:0xf73fe5b7
  423144:	mov    ch,0x62
  423146:	aam    0xa7
  423148:	gs push ecx
  42314a:	loop   0x4231b4
  42314c:	outs   dx,BYTE PTR ds:[esi]
  42314d:	call   0x860ec610
  423152:	mov    dl,0x34
  423154:	lods   al,BYTE PTR ds:[esi]
  423155:	pushf  
  423156:	or     DWORD PTR [esp+edx*1-0x4f],esi
  42315a:	sar    BYTE PTR [ecx-0x2],1
  42315d:	repnz mov bh,0x10
  423160:	xor    ecx,esi
  423162:	fwait
  423163:	and    ebx,DWORD PTR [ebp+0x28]
  423166:	fild   WORD PTR [eax]
  423168:	sti    
  423169:	xor    al,BYTE PTR [ecx+0x7c]
  42316c:	ret    0xfaca
  42316f:	fwait
  423170:	push   ebx
  423171:	add    esi,DWORD PTR [edx]
  423173:	mov    al,0x83
  423175:	in     eax,dx
  423176:	jno    0x423101
  423178:	mov    esp,0x83038139
  42317d:	call   0x4e60:0x6567e3ac
  423184:	jns    0x4231e2
  423186:	pop    edx
  423187:	jo     0x423200
  423189:	(bad)  
  42318a:	icebp  
  42318b:	outs   dx,BYTE PTR ds:[esi]
  42318c:	mov    ebp,0x5de3d624
  423191:	test   DWORD PTR [eax+edi*4],0x55af5afc
  423198:	aaa    
  423199:	mov    es,WORD PTR [ebx+0x75]
  42319c:	pop    edi
  42319d:	test   DWORD PTR [ebx],esi
  42319f:	xor    al,0x69
  4231a1:	outs   dx,BYTE PTR ds:[esi]
  4231a2:	dec    ecx
  4231a3:	sbb    DWORD PTR [ecx-0x13],edx
  4231a6:	mov    DWORD PTR [edx],edx
  4231a8:	hlt    
  4231a9:	sub    BYTE PTR [esp+ebx*8-0x30b59c27],bl
  4231b0:	push   es
  4231b1:	bound  dx,DWORD PTR [edx+eax*2-0x4]
  4231b6:	xchg   edi,esi
  4231b8:	mov    BYTE PTR ds:0x2767d927,0x90
  4231bf:	fs dec esp
  4231c1:	dec    ecx
  4231c2:	sbb    cl,BYTE PTR [ebx+0x2fd5a6ae]
  4231c8:	mov    DWORD PTR [esi],edx
  4231ca:	and    al,0x73
  4231cc:	and    eax,0x2602719f
  4231d1:	ins    DWORD PTR es:[edi],dx
  4231d2:	in     eax,dx
  4231d3:	push   esp
  4231d4:	pop    ecx
  4231d5:	ss mov dl,0xec
  4231d8:	pop    es
  4231d9:	mov    bl,al
  4231db:	sub    al,0x9d
  4231dd:	lahf   
  4231de:	jbe    0x4231ca
  4231e0:	(bad)  
  4231e1:	jecxz  0x42316e
  4231e3:	in     al,0x30
  4231e5:	xor    BYTE PTR [edx+ebx*8-0x49],bh
  4231e9:	sub    ebp,DWORD PTR [ebx+0x6e]
  4231ec:	cmp    edx,DWORD PTR [esi]
  4231ee:	jae    0x42324a
  4231f0:	retf   
  4231f1:	scas   al,BYTE PTR es:[edi]
  4231f2:	add    al,0x4d
  4231f4:	loop   0x4231e5
  4231f6:	or     eax,0x3d507502
  4231fb:	sahf   
  4231fc:	(bad)  
  4231fd:	mov    eax,0xa50bc3ab
  423202:	dec    esi
  423203:	fnsave [edx+0x8]
  423206:	add    eax,0x3c0dba2a
  42320b:	fwait
  42320c:	xor    ebx,DWORD PTR [esi-0x7ac36629]
  423212:	mov    DWORD PTR [ecx],esi
  423214:	pop    edx
  423215:	jno    0x423253
  423217:	xchg   esp,eax
  423218:	ret    0x9172
  42321b:	xchg   ecx,eax
  42321c:	lahf   
  42321d:	imul   ecx,DWORD PTR [ebp+ecx*4+0x2b],0xde7985b7
  423225:	jl     0x42329e
  423227:	cmp    esi,esi
  423229:	sub    BYTE PTR [edi],0x8c
  42322c:	enter  0xf180,0x7e
  423230:	ret    0xeec
  423233:	cld    
  423234:	cs (bad) 
  423236:	repnz cld 
  423238:	std    
  423239:	push   ds
  42323a:	retf   0x3bce
  42323d:	add    ah,BYTE PTR [eax*8-0x17fffe54]
  423244:	add    DWORD PTR [eax],eax
  423246:	add    BYTE PTR [ebp+ebx*1-0x6e],bh
  42324a:	outs   dx,BYTE PTR ds:[esi]
  42324b:	rcr    BYTE PTR [eax+0x56],0x42
  42324f:	xchg   esp,eax
  423250:	inc    edi
  423251:	sub    dh,BYTE PTR [ecx]
  423253:	and    BYTE PTR [ebp+0x426944b],ch
  423259:	in     eax,dx
  42325a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42325b:	and    BYTE PTR [esi+0x1f],bl
  42325e:	or     DWORD PTR [eax-0x6162c97f],ecx
  423264:	pop    esp
  423265:	mov    esi,0xafa51de3
  42326a:	mov    al,BYTE PTR [eax]
  42326c:	sub    eax,0x75216d
  423271:	nop
  423272:	js     0x42328d
  423274:	mov    dl,0x4c
  423276:	aad    0xaf
  423278:	ret    
  423279:	xor    bh,cl
  42327b:	(bad)  
  42327c:	nop
  42327d:	fsub   DWORD PTR [edi]
  42327f:	(bad)
  423283:	dec    ebp
  423284:	bound  edx,QWORD PTR [edx+0x28]
  423287:	sbb    dl,BYTE PTR [edx+edx*8]
  42328a:	idiv   BYTE PTR [esi+0x24]
  42328d:	push   ss
  42328e:	mov    dl,0x12
  423290:	je     0x42323f
  423292:	shr    BYTE PTR [ebx],cl
  423294:	jge    0x4232f4
  423296:	sbb    dl,BYTE PTR [edi+ebp*8]
  423299:	adc    edi,DWORD PTR [edi]
  42329b:	mul    DWORD PTR [edx+0x61]
  42329e:	and    DWORD PTR [edx+0x48b8aa33],eax
  4232a4:	xor    DWORD PTR [ecx-0x2c],eax
  4232a7:	mov    BYTE PTR [esi+ebp*8+0x56],bh
  4232ab:	xchg   ecx,eax
  4232ac:	jne    0x4232bc
  4232ae:	jo     0x423279
  4232b0:	xor    DWORD PTR [edx-0x38],edx
  4232b3:	pop    eax
  4232b4:	adc    eax,esi
  4232b6:	pop    esi
  4232b7:	xchg   ecx,eax
  4232b8:	mov    esi,0x5a2030a
  4232bd:	jmp    0x4232e3
  4232bf:	repnz cwde 
  4232c1:	(bad)  
  4232c2:	retf   
  4232c3:	jb     0x4232dd
  4232c5:	cmp    BYTE PTR [ebp+eax*2-0x1a386c00],bl
  4232cc:	mov    edx,ecx
  4232ce:	popa   
  4232cf:	les    eax,FWORD PTR [edi-0xac86583]
  4232d5:	fwait
  4232d6:	inc    edx
  4232d7:	imul   edi,DWORD PTR es:[esi],0x85843309
  4232de:	sub    DWORD PTR [edi-0x4a],edx
  4232e1:	inc    ebp
  4232e2:	inc    esi
  4232e3:	shl    DWORD PTR [ecx-0x74],1
  4232e6:	add    bl,al
  4232e8:	aad    0xf6
  4232ea:	and    al,al
  4232ec:	mov    al,0xec
  4232ee:	push   esi
  4232ef:	pop    eax
  4232f0:	lahf   
  4232f1:	xor    BYTE PTR [edx-0x4bb04b98],bl
  4232f7:	mov    ds:0x3bfee0b4,eax
  4232fc:	jmp    0x10aa7fa9
  423301:	data16 sbb al,0xcb
  423304:	dec    edx
  423305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423306:	popf   
  423307:	fidiv  DWORD PTR [ebx-0x31]
  42330a:	js     0x4232d2
  42330c:	aam    0x5d
  42330e:	xchg   ebx,eax
  42330f:	mov    bl,0x18
  423311:	mov    ecx,0xef3392e7
  423316:	push   ebx
  423317:	test   esi,ecx
  423319:	shr    BYTE PTR [esi-0x71],1
  42331c:	es jne 0x423356
  42331f:	cmp    BYTE PTR [ecx-0x5640b94f],dh
  423325:	arpl   WORD PTR [edi+eax*1-0x7f],si
  423329:	xchg   esi,eax
  42332a:	leave  
  42332b:	lods   al,BYTE PTR ds:[esi]
  42332c:	stos   BYTE PTR es:[edi],al
  42332d:	push   0xffffffb7
  42332f:	pop    eax
  423330:	inc    ecx
  423332:	add    ecx,eax
  423334:	sub    edi,DWORD PTR [esp+edx*4-0x30]
  423338:	add    eax,0xd7d39cb3
  42333d:	arpl   WORD PTR [ebx-0x7d],dx
  423340:	add    ebp,DWORD PTR [edx-0x50fecbcf]
  423346:	sub    BYTE PTR [edi],0xe6
  423349:	push   esp
  42334a:	add    al,0x9c
  42334c:	rol    BYTE PTR [ebx],cl
  42334e:	pop    ecx
  42334f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423350:	push   ss
  423351:	lock sub al,0xf2
  423354:	pop    ebx
  423355:	loop   0x4232fc
  423357:	popa   
  423358:	xchg   edi,eax
  423359:	mov    esi,0x6db55436
  42335e:	pop    edi
  42335f:	inc    ebp
  423360:	fbld   TBYTE PTR [edx+0x41]
  423363:	inc    edi
  423364:	dec    ecx
  423365:	stos   BYTE PTR es:[edi],al
  423366:	scas   al,BYTE PTR es:[edi]
  423367:	in     al,0x75
  423369:	std    
  42336a:	out    dx,al
  42336b:	lahf   
  42336c:	mov    esp,0x44db6a15
  423371:	call   0xfc5e4049
  423376:	sar    BYTE PTR [edx+0x43],cl
  423379:	or     eax,0xa9a15841
  42337e:	jmp    0xb746:0x1b0fc7f1
  423385:	and    DWORD PTR ds:0x7b3e018c,edi
  42338b:	js     0x4233bb
  42338d:	add    eax,0x5ed5ca77
  423392:	xlat   BYTE PTR ds:[ebx]
  423393:	inc    ebx
  423394:	sbb    DWORD PTR [ecx+0x9],edx
  423397:	imul   edi,DWORD PTR ds:0x7d173a2d,0x6ec5faea
  4233a1:	loop   0x423364
  4233a3:	and    al,0xc0
  4233a5:	mov    ah,0xa
  4233a7:	and    BYTE PTR [esi],bh
  4233a9:	mov    al,ds:0x74b2ebe2
  4233ae:	cmp    eax,0x546109fd
  4233b3:	fsubr  st,st(1)
  4233b5:	mov    bl,0xe7
  4233b7:	add    eax,DWORD PTR [ebx-0x379cba85]
  4233bd:	mov    ch,BYTE PTR [esi+0x40]
  4233c0:	leave  
  4233c1:	and    dl,al
  4233c3:	mov    bl,0x3b
  4233c5:	add    al,0x22
  4233c7:	push   edi
  4233c8:	frstor [ebx-0x70e475ae]
  4233ce:	jg     0x4233cf
  4233d0:	pop    ebx
  4233d1:	sub    eax,0x55dcea34
  4233d6:	stos   BYTE PTR es:[edi],al
  4233d7:	or     bh,dl
  4233d9:	xor    esp,DWORD PTR [eax]
  4233db:	cli    
  4233dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233dd:	adc    ch,BYTE PTR [eax]
  4233df:	outs   dx,BYTE PTR ds:[esi]
  4233e0:	cmp    eax,0x10bff320
  4233e5:	sub    eax,0x7141a729
  4233ea:	ret    0xf507
  4233ed:	add    al,0xea
  4233ef:	cmp    esp,DWORD PTR [edi-0xbaae79e]
  4233f5:	push   cs
  4233f6:	cwde   
  4233f7:	idiv   dl
  4233f9:	inc    ebx
  4233fa:	(bad)  
  4233fc:	xchg   edx,eax
  4233fd:	iret   
  4233fe:	xor    DWORD PTR [edx+0x2b],edi
  423401:	adc    bh,BYTE PTR [ebp+0x31]
  423404:	pop    edi
  423405:	dec    esi
  423406:	cld    
  423407:	in     al,0x48
  423409:	jno    0x423422
  42340b:	pop    eax
  42340c:	(bad)  
  42340d:	outs   dx,BYTE PTR ds:[esi]
  42340e:	xor    ebx,0x92231ae5
  423414:	adc    BYTE PTR [edi-0x6b],dl
  423417:	sbb    eax,0x4e605c3b
  42341c:	lea    ecx,[esi+0x2648dd36]
  423422:	or     dh,dh
  423424:	shl    DWORD PTR [ecx-0x58435cfe],1
  42342a:	jo     0x42344c
  42342c:	mov    edx,0xc94e64be
  423431:	(bad)  [edi+ebx*8+0x5c]
  423435:	(bad)  
  423437:	sbb    eax,0x1b70d97a
  42343c:	xchg   ebx,eax
  42343d:	xor    esp,edi
  42343f:	lods   eax,DWORD PTR ds:[esi]
  423440:	scas   al,BYTE PTR es:[edi]
  423441:	add    DWORD PTR [eax],eax
  423443:	call   0xb2423449
  423448:	jp     0x423457
  42344a:	sub    al,0x9
  42344c:	fs test al,0xea
  42344f:	cdq    
  423450:	and    DWORD PTR [ecx+0x3f],esp
  423453:	(bad)
  423456:	repnz retf 
  423458:	idiv   DWORD PTR [ecx+0x567ba22a]
  42345e:	out    dx,eax
  42345f:	adc    al,0xe
  423461:	out    0x6f,eax
  423463:	les    ebx,FWORD PTR [ecx-0xe]
  423466:	out    0x4f,eax
  423468:	js     0x4234e3
  42346a:	aas    
  42346b:	es xor ecx,esp
  42346e:	mov    bh,0xa1
  423470:	pop    ss
  423471:	in     al,0xf
  423473:	mov    cl,0xf4
  423475:	add    BYTE PTR [ebp+0x49],bl
  423478:	cs test ah,ah
  42347b:	out    0x6d,eax
  42347d:	cmp    cl,BYTE PTR [esi-0x1ff14620]
  423483:	mov    ds,ebp
  423485:	aas    
  423486:	cs xchg ecx,eax
  423488:	xchg   esp,eax
  423489:	mov    edi,0x477a2579
  42348e:	pop    esp
  42348f:	stc    
  423490:	dec    esp
  423491:	loope  0x4234e2
  423493:	test   eax,0x9b376b40
  423498:	push   ebp
  423499:	loopne 0x423456
  42349b:	add    eax,0xe251ee2d
  4234a0:	xchg   DWORD PTR [edi-0x76],ebp
  4234a3:	bound  eax,QWORD PTR [edx+eax*2]
  4234a6:	xlat   BYTE PTR ds:[ebx]
  4234a7:	popa   
  4234a8:	stos   BYTE PTR es:[edi],al
  4234a9:	cwde   
  4234aa:	scas   al,BYTE PTR es:[edi]
  4234ab:	imul   ebp,eax,0xffffffb7
  4234ae:	and    bh,ch
  4234b0:	hlt    
  4234b1:	jmp    DWORD PTR [esi-0x522e3de6]
  4234b7:	mov    dl,0xa9
  4234b9:	scas   eax,DWORD PTR es:[edi]
  4234ba:	enter  0x653a,0x2e
  4234be:	cmp    ebx,DWORD PTR [edx+0x8d7fb9f]
  4234c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234c5:	xlat   BYTE PTR ds:[ebx]
  4234c6:	jg     0x423473
  4234c8:	ins    BYTE PTR es:[edi],dx
  4234c9:	mov    esp,0x52037b7e
  4234ce:	inc    esp
  4234cf:	push   es
  4234d0:	pop    ebp
  4234d1:	mov    dl,0x15
  4234d3:	(bad)  [eax]
  4234d5:	test   al,0xaf
  4234d7:	loop   0x4234bd
  4234d9:	and    bl,BYTE PTR [ecx]
  4234db:	(bad)  
  4234dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234dd:	pusha  
  4234de:	mov    bh,0x81
  4234e0:	mov    al,0xdd
  4234e2:	inc    ecx
  4234e3:	push   esi
  4234e4:	inc    DWORD PTR [ebx]
  4234e6:	js     0x42349a
  4234e8:	mov    cl,0x2b
  4234ea:	mov    al,ds:0x1ee8e97e
  4234ef:	or     esi,DWORD PTR [ebp+0x2c]
  4234f2:	pop    ebx
  4234f3:	fisttp WORD PTR [edx+0x162dbd02]
  4234f9:	ss jnp 0x423557
  4234fc:	int3   
  4234fd:	pop    esi
  4234fe:	dec    edi
  4234ff:	test   DWORD PTR [edx+0x15abafa6],eax
  423505:	sahf   
  423506:	dec    ebx
  423507:	fbstp  TBYTE PTR [ebx-0x5a]
  42350a:	sbb    ebx,DWORD PTR [edx-0x7e]
  42350d:	adc    bh,dh
  42350f:	test   al,0x9
  423511:	add    BYTE PTR [ecx-0x33919f44],dh
  423517:	push   ds
  423518:	jecxz  0x42355b
  42351a:	mov    ebp,0x3d424c77
  42351f:	sub    DWORD PTR [edx-0x3e68b3b1],0xb
  423526:	cmp    eax,0x29051ca0
  42352b:	cmp    ah,bl
  42352d:	out    0xbb,eax
  42352f:	repz xchg esi,eax
  423531:	iret   
  423532:	fsub   QWORD PTR [ecx-0x64c0d254]
  423538:	in     al,0x1c
  42353a:	mov    ecx,0xdad2a8a0
  42353f:	adc    ebp,DWORD PTR [ecx+0x6c5255ba]
  423545:	dec    ebx
  423546:	pop    eax
  423547:	push   ebp
  423548:	push   edx
  423549:	repnz mov esp,0x981090b
  42354f:	push   edi
  423550:	int    0xbe
  423552:	xlat   BYTE PTR ds:[ebx]
  423553:	xlat   BYTE PTR ds:[ebx]
  423554:	int3   
  423555:	inc    edx
  423556:	xchg   ebp,eax
  423557:	push   cs
  423558:	mov    DWORD PTR [ebp-0x1c],esp
  42355b:	test   eax,0xbcb554ef
  423560:	pop    ds
  423561:	xchg   edi,eax
  423562:	and    al,0x4b
  423564:	push   ebp
  423565:	(bad)  
  423566:	stc    
  423567:	test   al,0xb
  423569:	pop    esi
  42356a:	ret    
  42356b:	pop    es
  42356c:	ror    DWORD PTR [ebx],1
  42356e:	ja     0x42353d
  423570:	stos   DWORD PTR es:[edi],eax
  423571:	fnstsw ax
  423573:	scas   al,BYTE PTR es:[edi]
  423574:	inc    eax
  423575:	inc    esi
  423576:	sub    al,0x98
  423578:	mov    ds:0x78671032,al
  42357d:	sub    al,0xed
  42357f:	sbb    DWORD PTR [ebp+0x1b626278],esp
  423585:	cdq    
  423586:	add    ch,BYTE PTR [edi-0xd]
  423589:	pop    edx
  42358a:	and    dl,al
  42358c:	sbb    BYTE PTR [ebp+esi*8+0x1648d648],bl
  423593:	inc    edi
  423594:	popf   
  423595:	or     ebx,ebp
  423597:	dec    edx
  423598:	or     eax,0x25286e55
  42359d:	inc    ebx
  42359e:	ins    DWORD PTR es:[edi],dx
  42359f:	fbstp  TBYTE PTR [eax+edi*1+0x19]
  4235a3:	loope  0x423544
  4235a5:	jnp    0x423563
  4235a7:	mov    ecx,0x9ce54c77
  4235ac:	out    0x5d,eax
  4235ae:	ins    BYTE PTR es:[edi],dx
  4235af:	jmp    0xa681b3b7
  4235b4:	xchg   ecx,eax
  4235b5:	mov    bl,BYTE PTR [ebx]
  4235b7:	mov    bh,0x46
  4235b9:	inc    esi
  4235ba:	cmp    BYTE PTR [ebp-0x61530a57],bl
  4235c0:	loop   0x4235c5
  4235c2:	lea    edx,[ebp+0x43]
  4235c5:	jg     0x423626
  4235c7:	sbb    al,0x61
  4235c9:	call   0xd9990ca2
  4235ce:	or     esp,DWORD PTR [edx+0x19925214]
  4235d4:	sbb    ebx,DWORD PTR [eax-0x5f]
  4235d7:	fistp  WORD PTR [edx*1+0x63df8b11]
  4235de:	inc    edi
  4235df:	imul   esp,DWORD PTR [ecx+0x235d1b20],0x74
  4235e6:	inc    esp
  4235e7:	shr    BYTE PTR [ecx],cl
  4235e9:	jb     0x4235b7
  4235eb:	mov    BYTE PTR [esi-0x1797f3eb],dl
  4235f1:	cli    
  4235f2:	pusha  
  4235f3:	pop    ecx
  4235f4:	sub    eax,DWORD PTR [edi+0x7203ca09]
  4235fa:	add    al,0x47
  4235fc:	and    edx,DWORD PTR [edi+0x16]
  4235ff:	jnp    0x42365b
  423601:	adc    BYTE PTR ds:0x958189fe,0x43
  423608:	sub    esi,ebx
  42360a:	cmp    edi,eax
  42360c:	aaa    
  42360d:	mov    bl,0xfc
  42360f:	push   eax
  423610:	mov    esi,0x775ce5fb
  423615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423616:	out    dx,al
  423617:	repz push edi
  423619:	aaa    
  42361a:	push   edi
  42361b:	add    eax,edx
  42361d:	sub    dl,0xcf
  423620:	xchg   DWORD PTR [ecx],esp
  423622:	sti    
  423623:	imul   dl
  423625:	loop   0x4235b1
  423627:	jae    0x42360a
  423629:	jnp    0x4235b5
  42362b:	jmp    0x423670
  42362d:	and    BYTE PTR [edi-0x16de3dd0],al
  423633:	repz jmp 0x42362e
  423636:	fld    TBYTE PTR [ebx+0x42]
  423639:	icebp  
  42363a:	cmp    esp,DWORD PTR gs:[ebx+0x49]
  42363e:	inc    esp
  42363f:	xchg   ebp,eax
  423640:	mov    al,0x1
  423642:	add    al,ch
  423644:	add    DWORD PTR [eax],eax
  423646:	add    BYTE PTR [edx],dh
  423648:	dec    ebp
  423649:	xor    BYTE PTR [edx+edx*4-0x7e8eedfd],dl
  423650:	imul   ebx,DWORD PTR [edx],0xe21ce827
  423656:	sbb    eax,0xca5093c7
  42365b:	cmp    bh,BYTE PTR [edx+eiz*2-0x65]
  42365f:	ret    
  423660:	mov    ds:0x9ffc8a25,eax
  423665:	test   DWORD PTR [ebp-0x32aaf945],edi
  42366b:	out    dx,eax
  42366c:	jns    0x42368c
  42366e:	lock and BYTE PTR [esi],al
  423671:	repnz add eax,0x9e9c63e0
  423677:	imul   esp,DWORD PTR [eax-0x5a34e9ec],0xa672c151
  423681:	fwait
  423682:	xchg   edx,eax
  423683:	(bad)  
  423684:	(bad)  
  423685:	outs   dx,DWORD PTR ds:[esi]
  423686:	in     al,dx
  423687:	add    eax,0x5ba122a5
  42368c:	fbstp  TBYTE PTR [edi-0x7b0fecca]
  423692:	data16 aad 0x54
  423695:	add    DWORD PTR [eax+0x6efd0c91],esp
  42369b:	xor    DWORD PTR [ebp+0x15],esp
  42369e:	pop    edx
  42369f:	setns  BYTE PTR [ecx]
  4236a2:	jo     0x4236f8
  4236a4:	mov    ds:0x495ad2ce,eax
  4236a9:	inc    edi
  4236aa:	pop    edx
  4236ab:	jmp    0x3cc4dadf
  4236b0:	enter  0xcbfd,0xc
  4236b4:	jnp    0x4236ed
  4236b6:	dec    esp
  4236b7:	and    al,0x18
  4236b9:	or     eax,0x352507b7
  4236be:	jge    0x42368f
  4236c0:	inc    edx
  4236c1:	fucomi st,st(6)
  4236c3:	mov    ds:0x65b994b1,al
  4236c8:	mov    edi,0xb9dbdc83
  4236cd:	xlat   BYTE PTR ds:[ebx]
  4236ce:	pop    ss
  4236cf:	jg     0x423723
  4236d1:	ds push esi
  4236d3:	mov    ebx,0x102d11ed
  4236d8:	pusha  
  4236d9:	jae    0x423751
  4236db:	push   ds
  4236dc:	dec    edi
  4236dd:	cmp    bl,BYTE PTR [esi+edx*8+0x76]
  4236e1:	test   edi,eax
  4236e3:	test   BYTE PTR [esi],bh
  4236e5:	add    DWORD PTR [edi],eax
  4236e7:	pop    eax
  4236e8:	dec    edx
  4236e9:	enter  0xf2b4,0x3d
  4236ed:	inc    edx
  4236ee:	sub    DWORD PTR [esi-0x6022093f],ebp
  4236f4:	add    ch,BYTE PTR [ebx]
  4236f6:	call   0x17ee:0x95707111
  4236fd:	lea    esi,[esi-0x54db057]
  423703:	and    BYTE PTR [esi],al
  423705:	bound  esp,QWORD PTR [edx]
  423707:	fild   DWORD PTR [ecx+0x71]
  42370a:	out    0xd4,al
  42370c:	mov    edx,ebp
  42370e:	jns    0x423780
  423710:	lods   al,BYTE PTR ds:[esi]
  423711:	add    ecx,DWORD PTR [esi]
  423713:	and    DWORD PTR ds:0x91a3c335,esp
  423719:	mov    al,ds:0x6b3ed9e2
  42371e:	into   
  42371f:	dec    esp
  423720:	test   BYTE PTR [esi+0x16],al
  423723:	daa    
  423724:	xchg   ebp,eax
  423725:	je     0x42379c
  423727:	xlat   BYTE PTR ds:[ebx]
  423728:	push   esp
  423729:	add    ebx,edx
  42372b:	or     edx,DWORD PTR [edx+edx*1+0x28747425]
  423732:	jge    0x423779
  423734:	mov    ah,0xd
  423736:	cmc    
  423737:	(bad)  
  423738:	leave  
  423739:	jae    0x423799
  42373b:	sub    DWORD PTR [edx-0x7493c47b],eax
  423741:	xchg   BYTE PTR [ebp+0x14],bh
  423744:	push   es
  423745:	addr16 push eax
  423747:	(bad)  [eax]
  423749:	mov    DWORD PTR [ebp-0x4],0x44a527c6
  423750:	push   bp
  423752:	call   0x2d29:0xde8616ec
  423759:	mov    dl,0xde
  42375b:	cmc    
  42375c:	(bad)  
  42375d:	arpl   WORD PTR [ebx-0x51],bx
  423760:	fidiv  WORD PTR [ecx-0x7a0408f9]
  423766:	fnsave [esi]
  423768:	es mov esp,0xf8053855
  42376e:	idiv   BYTE PTR [ecx]
  423770:	mov    edi,0x65a867ac
  423775:	jbe    0x423795
  423777:	outs   dx,DWORD PTR ds:[esi]
  423778:	nop
  423779:	out    0xb5,eax
  42377b:	ja     0x4237c8
  42377d:	out    0x76,al
  42377f:	(bad)  
  423780:	push   eax
  423781:	in     al,dx
  423782:	ret    
  423783:	repz setg BYTE PTR [edx+eax*2]
  423788:	jp     0x423721
  42378a:	fsubr  DWORD PTR [ecx]
  42378c:	arpl   bx,ax
  42378e:	push   ebp
  42378f:	je     0x423771
  423791:	adc    DWORD PTR [ebx+ecx*4],eax
  423794:	loope  0x4237c7
  423796:	mov    al,0xa9
  423798:	dec    ebp
  423799:	ret    
  42379a:	test   eax,0xb980a7b2
  42379f:	sbb    eax,DWORD PTR [eax]
  4237a1:	jge    0x423752
  4237a3:	cmp    eax,DWORD PTR [edi-0x30]
  4237a6:	add    DWORD PTR [edx],0xa
  4237a9:	les    ecx,FWORD PTR [edi-0x60]
  4237ac:	jbe    0x423745
  4237ae:	mov    cl,0x25
  4237b0:	bound  ecx,QWORD PTR [eax-0x779b8581]
  4237b6:	fisubr DWORD PTR [edi+0x1c]
  4237b9:	clc    
  4237ba:	out    0x39,eax
  4237bc:	fnstcw WORD PTR [ebx]
  4237be:	pop    ebp
  4237bf:	push   esi
  4237c0:	imul   ebx,DWORD PTR [ebp+0x2e],0xffffffe8
  4237c4:	or     DWORD PTR [ecx-0x1544c881],ebx
  4237ca:	jae    0x42378e
  4237cc:	jmp    0xb2fbcf82
  4237d1:	enter  0xbea,0x29
  4237d5:	test   al,0xfb
  4237d7:	adc    al,ch
  4237d9:	add    cl,cl
  4237db:	or     DWORD PTR [eax],0xffffffe9
  4237de:	fidiv  DWORD PTR [ebp+0x5]
  4237e1:	push   edi
  4237e2:	in     al,0x65
  4237e4:	mov    al,ds:0xa165105e
  4237e9:	lds    esp,FWORD PTR [ecx-0x7]
  4237ec:	jae    0x42379e
  4237ee:	jl     0x42383f
  4237f0:	mov    dl,0xcf
  4237f2:	adc    DWORD PTR [edi-0x612772cf],esp
  4237f8:	xchg   edi,eax
  4237f9:	fsubr  QWORD PTR [ebx+ebx*2+0x1e2746f3]
  423800:	add    esp,DWORD PTR [ecx]
  423802:	xor    bl,BYTE PTR [eax]
  423804:	pop    ss
  423805:	int    0xfd
  423807:	mov    ch,0xf6
  423809:	jne    0x42384a
  42380b:	jno    0x4237ef
  42380d:	in     al,dx
  42380e:	aas    
  42380f:	push   cs
  423810:	xor    DWORD PTR [ebp-0x30],edi
  423813:	jmp    0x423856
  423815:	(bad)  
  423816:	sub    DWORD PTR [ebp*4+0x595982b2],esi
  42381d:	jle    0x423866
  42381f:	adc    cl,BYTE PTR [esi]
  423821:	push   esp
  423822:	(bad)  
  423823:	jb     0x4238a0
  423825:	and    BYTE PTR [esi],0xfd
  423828:	nop
  423829:	daa    
  42382a:	push   esi
  42382b:	rcl    DWORD PTR [ecx],0x96
  42382e:	pop    edi
  42382f:	inc    edx
  423830:	add    eax,0x65676020
  423835:	inc    edx
  423836:	daa    
  423837:	or     eax,ecx
  423839:	push   esp
  42383a:	jo     0x42384b
  42383c:	imul   ebx,DWORD PTR [ebx+0x1b27d4b],0x1e800
  423846:	add    ah,bl
  423848:	js     0x423858
  42384a:	std    
  42384b:	inc    edx
  42384c:	add    DWORD PTR [esi],0x8617bc97
  423852:	sub    BYTE PTR [edi+0x5ede915d],ch
  423858:	ja     0x423839
  42385a:	ror    BYTE PTR [ecx+0x58],1
  42385d:	std    
  42385e:	call   0xfef5:0x36c9a805
  423865:	daa    
  423866:	cmp    ebp,ecx
  423868:	icebp  
  423869:	lods   al,BYTE PTR ds:[esi]
  42386a:	lahf   
  42386b:	mov    ds:0x662ad46b,al
  423870:	call   0xce99161
  423875:	(bad)  
  423876:	jo     0x423898
  423878:	inc    ebx
  423879:	setb   dl
  42387c:	pushf  
  42387d:	xchg   esi,eax
  42387e:	test   al,0x4b
  423880:	or     eax,0x6c4cdf5e
  423885:	pop    eax
  423886:	aaa    
  423887:	pop    es
  423888:	pop    es
  423889:	adc    bh,ah
  42388b:	ror    bh,0xb8
  42388e:	rcl    DWORD PTR [ebp-0x1a71de19],0xa5
  423895:	lods   al,BYTE PTR ds:[esi]
  423896:	pop    edi
  423897:	loopne 0x4238d7
  423899:	and    ah,BYTE PTR [edi+0x53d6f8b9]
  42389f:	popa   
  4238a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238a1:	outs   dx,BYTE PTR ds:[esi]
  4238a2:	mov    BYTE PTR [esi+0x74],ah
  4238a5:	jo     0x42388d
  4238a7:	ror    BYTE PTR [ebp-0x1ca8a24b],0x69
  4238ae:	mov    eax,0x30137e9c
  4238b3:	ja     0x4238cb
  4238b5:	call   0x2c41:0x6048cc90
  4238bc:	mov    esp,DWORD PTR [ecx]
  4238be:	retf   
  4238bf:	adc    esi,DWORD PTR ds:0xf058208c
  4238c5:	mov    dl,BYTE PTR [ebx+eax*4+0xe]
  4238c9:	fnsave [esi+0x66]
  4238cc:	ficomp DWORD PTR [ebx+edi*1+0x66b70e4c]
  4238d3:	jge    0x42392e
  4238d5:	sub    DWORD PTR [ebx-0x5e],edi
  4238d8:	push   es
  4238d9:	jecxz  0x423864
  4238db:	pushf  
  4238dc:	rol    ebp,0x0
  4238df:	xchg   ebx,eax
  4238e0:	dec    edi
  4238e1:	mov    ds:0x697875fa,al
  4238e6:	pusha  
  4238e7:	(bad)  
  4238e8:	repnz fisttp QWORD PTR [eax]
  4238eb:	(bad)  
  4238ec:	fcmovbe st,st(3)
  4238ee:	(bad)  
  4238ef:	jae    0x4238ab
  4238f1:	fisttp DWORD PTR [edi-0x475aa02f]
  4238f7:	adc    al,0x12
  4238f9:	push   0xd9b9b846
  4238fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238ff:	cmp    al,0x73
  423901:	mov    ebp,0x3ef978c9
  423906:	imul   edx,DWORD PTR ss:[eax+0x61689a6c],0x24f07b75
  423911:	stc    
  423912:	dec    edx
  423914:	inc    edx
  423915:	push   edi
  423916:	sbb    eax,0xfb75fbcf
  42391b:	fdivrp st(2),st
  42391d:	add    al,0xe2
  42391f:	xor    DWORD PTR [ebp-0x2e],esi
  423922:	jb     0x4238a7
  423924:	xor    DWORD PTR [edi-0x72],ecx
  423927:	pop    esi
  423928:	adc    edx,DWORD PTR [edi-0x3c]
  42392b:	int    0xe3
  42392d:	test   edx,ebx
  42392f:	(bad)  
  423930:	out    dx,al
  423931:	jbe    0x423953
  423933:	pop    es
  423934:	fcom   DWORD PTR [eax]
  423936:	jne    0x423935
  423938:	cli    
  423939:	add    al,0x83
  42393b:	pop    ebx
  42393c:	fdiv   DWORD PTR [ecx+0x50c1a248]
  423942:	xchg   esi,eax
  423943:	in     eax,dx
  423944:	mov    edx,0x85463e5a
  423949:	out    0x3c,eax
  42394b:	aas    
  42394c:	adc    ch,BYTE PTR [eax-0x7a458469]
  423952:	add    BYTE PTR [ebx+0x47],cl
  423955:	xor    al,0x30
  423957:	jl     0x423937
  423959:	cmp    DWORD PTR [ebp-0x55],esp
  42395c:	call   ecx
  42395e:	adc    ebp,DWORD PTR [edx+0x379cc1e8]
  423964:	enter  0xe304,0xf0
  423968:	push   ss
  423969:	aaa    
  42396a:	pop    eax
  42396b:	mov    ds:0x1ce55cf8,eax
  423970:	sub    BYTE PTR [ecx],ch
  423972:	xor    ebp,eax
  423974:	and    edi,DWORD PTR [ebp-0x11]
  423977:	jecxz  0x4239ac
  423979:	inc    edi
  42397a:	adc    eax,0x756059a3
  42397f:	xlat   BYTE PTR ds:[ebx]
  423980:	nop
  423981:	stc    
  423982:	jo     0x4239ff
  423984:	(bad)  
  423985:	das    
  423986:	(bad)  
  423987:	clc    
  423988:	sub    esi,DWORD PTR [edi+0x61]
  42398b:	push   ebx
  42398c:	iret   
  42398d:	cmp    bh,cl
  42398f:	mov    ch,0x31
  423991:	leave  
  423992:	scas   eax,DWORD PTR es:[edi]
  423993:	jl     0x4239b4
  423995:	cmp    ebx,DWORD PTR [eax-0x43f0b1bc]
  42399b:	jl     0x4239fe
  42399d:	ret    0x312c
  4239a0:	jecxz  0x423998
  4239a2:	push   ss
  4239a3:	retf   0xc20
  4239a6:	fst    DWORD PTR [ecx+0x67ba8a68]
  4239ac:	div    DWORD PTR [ebx-0x5bc010b5]
  4239b2:	lock popa 
  4239b4:	cmc    
  4239b5:	sub    eax,0xa79010c1
  4239ba:	inc    ebp
  4239bb:	jl     0x4239d0
  4239bd:	fwait
  4239be:	sbb    BYTE PTR [edi+eax*4-0x45],dl
  4239c2:	mov    al,0x52
  4239c4:	xchg   esp,eax
  4239c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239c6:	push   0x2d
  4239c8:	popa   
  4239c9:	inc    edi
  4239ca:	test   BYTE PTR [edx+0x44b8f753],dl
  4239d0:	loopne 0x423994
  4239d2:	outs   dx,DWORD PTR ds:[esi]
  4239d3:	push   0x55
  4239d5:	jg     0x4239fd
  4239d7:	in     eax,0x50
  4239d9:	pop    edi
  4239da:	int    0x3c
  4239dc:	mov    WORD PTR [edx],?
  4239de:	pop    ebx
  4239df:	out    0x3,al
  4239e1:	jg     0x42396b
  4239e3:	mov    eax,DWORD PTR [esp+eiz*4]
  4239e6:	scas   al,BYTE PTR es:[edi]
  4239e7:	out    0x50,eax
  4239e9:	outs   dx,BYTE PTR ds:[esi]
  4239ea:	xchg   ebx,eax
  4239eb:	push   es
  4239ec:	sub    al,0x91
  4239ee:	mov    esp,0xbde4ee64
  4239f3:	daa    
  4239f4:	xor    bl,dl
  4239f6:	sbb    edx,DWORD PTR [esi]
  4239f8:	mov    ds:0xa8b50949,eax
  4239fd:	pop    ss
  4239fe:	enter  0x6157,0xa7
  423a02:	lods   al,BYTE PTR ds:[esi]
  423a03:	retf   0x760
  423a06:	push   esp
  423a07:	inc    ebp
  423a08:	add    al,0x72
  423a0a:	fidiv  DWORD PTR [esi]
  423a0c:	pop    esp
  423a0d:	sub    BYTE PTR [ebx+ecx*1-0x1f9ec177],0x33
  423a15:	and    BYTE PTR [edi+0xa26e65e],dh
  423a1b:	pop    ecx
  423a1c:	jle    0x4239db
  423a1e:	iret   
  423a1f:	imul   edi,DWORD PTR [ebx+0x38cf7b72],0xfd836e91
  423a29:	adc    al,0x64
  423a2b:	fdiv   DWORD PTR [ebp+0x69]
  423a2e:	sbb    al,0xbf
  423a30:	das    
  423a31:	sbb    al,0x80
  423a33:	pushf  
  423a34:	mov    bl,0xbf
  423a36:	aas    
  423a37:	dec    esp
  423a38:	lahf   
  423a39:	mov    esp,0xd89568bc
  423a3e:	stc    
  423a3f:	gs mov ah,0x1
  423a42:	add    al,ch
  423a44:	add    DWORD PTR [eax],eax
  423a46:	add    BYTE PTR [edi+0x2a],ah
  423a49:	mov    bh,0xb2
  423a4b:	shl    BYTE PTR [ebp+0x37033d8f],1
  423a51:	xchg   edx,eax
  423a52:	adc    edi,edi
  423a54:	sbb    al,0x30
  423a56:	sub    DWORD PTR [edi-0x6a],esi
  423a59:	sbb    DWORD PTR [ebx-0x30],ebx
  423a5c:	(bad)  
  423a5d:	mov    al,ds:0x2cc14b26
  423a62:	sti    
  423a63:	inc    edx
  423a64:	dec    BYTE PTR [eax+0x56]
  423a67:	or     DWORD PTR cs:[eax-0x7d4496de],ebp
  423a6e:	lahf   
  423a6f:	repz leave 
  423a71:	cmp    ch,ah
  423a73:	shl    BYTE PTR [edi+0x81f2560],cl
  423a79:	iret   
  423a7a:	js     0x423a19
  423a7c:	fidivr DWORD PTR ds:0xff08e937
  423a82:	out    0x39,eax
  423a84:	xor    ebp,0x10
  423a87:	jl     0x423ab9
  423a89:	pop    ecx
  423a8a:	inc    edi
  423a8b:	mov    eax,0x311d153e
  423a90:	rol    BYTE PTR [eax],1
  423a92:	and    al,0xfd
  423a94:	jp     0x423aa6
  423a96:	add    ch,dl
  423a98:	iret   
  423a99:	push   0xffffffca
  423a9b:	ja     0x423a51
  423a9d:	mov    dl,0x21
  423a9f:	push   esi
  423aa0:	les    eax,FWORD PTR [eax+0x2d]
  423aa3:	pop    ecx
  423aa4:	popf   
  423aa5:	xchg   edi,eax
  423aa6:	dec    ebx
  423aa7:	mov    ss,WORD PTR [ebx+0x25]
  423aaa:	icebp  
  423aab:	push   ds
  423aac:	adc    al,0xc5
  423aae:	mov    ebx,0x763a59ad
  423ab3:	lods   al,BYTE PTR ds:[esi]
  423ab4:	jp     0x423ade
  423ab6:	mov    eax,esi
  423ab8:	aad    0xd5
  423aba:	xor    ebp,ebp
  423abc:	adc    ah,bh
  423abe:	sbb    esp,DWORD PTR [ebp-0x2d]
  423ac1:	lods   eax,DWORD PTR ds:[esi]
  423ac2:	fwait
  423ac3:	dec    DWORD PTR [esi]
  423ac5:	dec    edi
  423ac6:	add    DWORD PTR [edi],0x68
  423ac9:	sbb    DWORD PTR [ecx+ebp*4],esi
  423acc:	imul   esp,esp,0x36
  423acf:	sahf   
  423ad0:	call   0x497bac7d
  423ad5:	xlat   BYTE PTR ds:[ebx]
  423ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ad7:	xor    eax,0xb92f2e84
  423adc:	not    BYTE PTR [ebp+0x2e]
  423adf:	sub    al,0xb
  423ae1:	sbb    ecx,ebp
  423ae3:	mov    DWORD PTR [edi-0x28],ebp
  423ae6:	pop    ss
  423ae7:	jmp    0xc6d099b2
  423aec:	test   al,0x77
  423aee:	xchg   esp,eax
  423aef:	jnp    0x423b23
  423af1:	(bad)  
  423af2:	mov    ecx,0xd574b72a
  423af7:	es xor eax,0x98f689bb
  423afd:	(bad)  
  423afe:	std    
  423aff:	int3   
  423b00:	add    al,0x37
  423b02:	adc    bl,BYTE PTR [esi+0x6]
  423b05:	jle    0x423b39
  423b07:	dec    esi
  423b08:	mov    DWORD PTR [edi-0x25],0x6f15d980
  423b0f:	mov    dl,0x5
  423b11:	les    ebx,FWORD PTR [esi+edi*8-0x2e1e5ef6]
  423b18:	add    edi,esp
  423b1a:	loope  0x423ae6
  423b1c:	std    
  423b1d:	aad    0xe9
  423b1f:	adc    al,0xc9
  423b21:	add    eax,0x79bbd993
  423b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b27:	ror    DWORD PTR [edx],cl
  423b29:	fwait
  423b2a:	mov    al,BYTE PTR [ebx-0x5b]
  423b2d:	scas   al,BYTE PTR es:[edi]
  423b2e:	mov    ah,0xa6
  423b30:	ins    BYTE PTR es:[edi],dx
  423b31:	xor    ebp,esi
  423b33:	dec    eax
  423b34:	dec    edx
  423b35:	inc    edi
  423b36:	je     0x423b4b
  423b38:	fwait
  423b39:	dec    ebp
  423b3a:	inc    esp
  423b3b:	clc    
  423b3c:	pop    ecx
  423b3d:	es sub al,0xf7
  423b40:	dec    ebx
  423b41:	shr    BYTE PTR fs:[ebx-0x29dab120],0x5
  423b49:	call   0xf5f6:0xc020aec7
  423b50:	xchg   ecx,eax
  423b51:	lahf   
  423b52:	or     al,0xb7
  423b54:	imul   esp,DWORD PTR ds:0xb8fa2c62,0xffffff96
  423b5b:	push   esi
  423b5c:	xchg   bh,ch
  423b5e:	pop    esi
  423b5f:	je     0x423af5
  423b61:	mov    ecx,0x91ead05c
  423b66:	retf   
  423b67:	push   0x65
  423b69:	inc    ecx
  423b6a:	mov    ds:0xa8c23407,eax
  423b6f:	mov    WORD PTR [eax],cs
  423b71:	inc    ebx
  423b72:	mul    BYTE PTR [ecx-0x32]
  423b75:	add    DWORD PTR [edi+ebp*8-0x5779c256],edi
  423b7c:	stos   BYTE PTR es:[edi],al
  423b7d:	lea    edi,[ebp-0x1a]
  423b80:	pop    ds
  423b81:	imul   esi,DWORD PTR [esi+0x4f],0xffffffd3
  423b85:	jnp    0x423c04
  423b87:	and    BYTE PTR [ebx],al
  423b89:	sbb    eax,0x583d1ad1
  423b8e:	push   ebx
  423b8f:	out    0x4e,eax
  423b91:	loope  0x423b98
  423b93:	mov    ds:0xa2d4ec1d,eax
  423b98:	ss and dh,ah
  423b9b:	mov    bh,dh
  423b9d:	adc    al,0xf6
  423b9f:	pop    ds
  423ba0:	inc    esp
  423ba1:	sub    dh,bl
  423ba3:	test   al,0x1d
  423ba5:	push   ebp
  423ba6:	rep ins BYTE PTR es:[edi],dx
  423ba8:	stos   DWORD PTR es:[edi],eax
  423ba9:	mov    ebx,0xf83a57f1
  423bae:	sar    dh,cl
  423bb0:	mov    eax,0xb20a597d
  423bb5:	mov    dl,0x25
  423bb7:	call   0x7e1b:0x808ea1ad
  423bbe:	and    al,0xdd
  423bc0:	repz mov dl,0x76
  423bc3:	jp     0x423b58
  423bc5:	les    ecx,FWORD PTR [ecx-0x4d]
  423bc8:	push   esp
  423bc9:	ret    0xdcc0
  423bcc:	(bad)  
  423bcd:	and    al,0xe5
  423bcf:	xor    esp,DWORD PTR ds:0xa7372112
  423bd5:	cwde   
  423bd6:	or     esp,DWORD PTR [esi+0x43]
  423bd9:	add    BYTE PTR [ebx-0x2a],bl
  423bdc:	push   ecx
  423bdd:	pop    ebp
  423bde:	(bad)  [ebx-0x38664549]
  423be4:	loopne 0x423c0c
  423be6:	fs pop ebp
  423be8:	and    eax,0x61619c6d
  423bed:	xchg   edi,eax
  423bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bef:	inc    esi
  423bf0:	dec    esi
  423bf1:	adc    bl,BYTE PTR [esi-0xac9f78c]
  423bf7:	stos   BYTE PTR es:[edi],al
  423bf8:	push   ecx
  423bf9:	mov    ds:0x15ade541,eax
  423bfe:	jnp    0x423bda
  423c00:	popa   
  423c01:	stos   BYTE PTR es:[edi],al
  423c02:	test   bl,ch
  423c04:	not    ebp
  423c06:	call   0xc3d2:0x5204d03f
  423c0d:	cmc    
  423c0e:	retf   0x6f06
  423c11:	mov    DWORD PTR [ecx-0x4b],eax
  423c14:	mov    al,0xbe
  423c16:	test   DWORD PTR [ebx-0x525fb192],edx
  423c1c:	dec    ebp
  423c1d:	xor    dl,0xa9
  423c20:	adc    al,0xee
  423c22:	lds    esi,FWORD PTR [edx]
  423c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c25:	das    
  423c26:	push   es
  423c27:	pop    edx
  423c28:	jg     0x423be0
  423c2a:	mov    dh,0xd3
  423c2c:	push   esp
  423c2d:	jmp    0xbff3:0xb6b48923
  423c34:	repz int 0xfe
  423c37:	jmp    0x765c6e2
  423c3c:	adc    BYTE PTR [eax+0x1b64d6d],ah
  423c42:	add    al,ch
  423c44:	add    DWORD PTR [eax],eax
  423c46:	add    BYTE PTR [edx+0x34435cbd],ch
  423c4c:	fsubr  DWORD PTR [edi+0x17]
  423c4f:	jmp    0x423cc8
  423c51:	mov    cl,0xc2
  423c53:	push   cs
  423c54:	scas   al,BYTE PTR es:[edi]
  423c55:	add    bl,dh
  423c57:	aad    0xa9
  423c59:	push   edx
  423c5a:	jmp    0x96407689
  423c5f:	stc    
  423c60:	dec    ebx
  423c61:	sbb    DWORD PTR [ecx],esi
  423c63:	daa    
  423c64:	mov    ds:0xe7e371fc,al
  423c69:	jmp    0x776a:0x950514be
  423c70:	xchg   edi,eax
  423c71:	std    
  423c72:	push   ebx
  423c73:	popf   
  423c74:	fimul  WORD PTR [ecx]
  423c76:	inc    ecx
  423c77:	cdq    
  423c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c79:	hlt    
  423c7a:	repnz imul edx,DWORD PTR [ebx+0x39],0xe216d78a
  423c82:	ret    
  423c83:	lock ss out 0x86,eax
  423c87:	jg     0x423c28
  423c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c8a:	and    cl,bl
  423c8c:	bound  esi,QWORD PTR [eax+0x1f]
  423c8f:	jmp    FWORD PTR [eax-0x52]
  423c92:	mov    ds:0xa8414497,al
  423c97:	outs   dx,BYTE PTR ds:[esi]
  423c98:	shl    BYTE PTR [edx-0x3f],0x36
  423c9c:	and    DWORD PTR [edi+0x5cc70407],ebx
  423ca2:	or     BYTE PTR [eax-0xb854ef6],bl
  423ca8:	test   eax,0xf200448a
  423cad:	ins    DWORD PTR es:[edi],dx
  423cae:	loop   0x423c93
  423cb0:	ret    0x67c4
  423cb3:	rol    DWORD PTR [eax],1
  423cb5:	ds retf 
  423cb7:	fcmovnu st,st(2)
  423cb9:	xchg   esp,eax
  423cba:	jns    0x423c7d
  423cbc:	sub    DWORD PTR [ebx],edx
  423cbe:	cmp    eax,0xcf3335c9
  423cc3:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  423cc5:	xor    BYTE PTR [ecx+0x7733dae3],al
  423ccb:	xchg   DWORD PTR gs:0x2300632c,ebx
  423cd2:	and    edi,ebx
  423cd4:	push   edx
  423cd5:	mov    ecx,0x761e444c
  423cda:	sahf   
  423cdb:	push   eax
  423cdc:	push   ebx
  423cdd:	xchg   esi,eax
  423cde:	ds dec ecx
  423ce0:	dec    edx
  423ce1:	jle    0x423d28
  423ce3:	add    dl,BYTE PTR [ebp+0xf]
  423ce6:	pop    ss
  423ce7:	xor    DWORD PTR [edi],0xffffff85
  423cea:	dec    ecx
  423ceb:	mov    esi,0x4a13ec98
  423cf0:	stos   BYTE PTR es:[edi],al
  423cf1:	shl    DWORD PTR [edx+0x23],0x34
  423cf5:	iret   
  423cf6:	js     0x423d47
  423cf8:	(bad)  
  423cf9:	mov    dh,0x9
  423cfb:	adc    DWORD PTR [eax],esp
  423cfd:	cmp    cl,BYTE PTR [ecx+0x32]
  423d00:	cli    
  423d01:	je     0x423d5d
  423d03:	pop    esp
  423d04:	add    edx,DWORD PTR [edi+0x37bfaade]
  423d0a:	pushf  
  423d0b:	inc    edi
  423d0c:	push   0x5ae27c17
  423d11:	inc    edx
  423d12:	mov    ah,ah
  423d14:	mov    esi,0xea9325ee
  423d19:	es or  edx,ebp
  423d1c:	scas   al,BYTE PTR es:[edi]
  423d1d:	sbb    bl,BYTE PTR cs:[edx-0x8c90c60]
  423d24:	pop    ebp
  423d25:	pushf  
  423d26:	das    
  423d27:	inc    esp
  423d28:	int3   
  423d29:	sub    edi,0x12
  423d2c:	mov    ecx,esi
  423d2e:	adc    al,0x24
  423d30:	inc    ebx
  423d31:	inc    edi
  423d32:	out    0x7e,al
  423d34:	outs   dx,DWORD PTR ds:[esi]
  423d35:	xchg   ebp,eax
  423d36:	(bad)  
  423d37:	xor    al,0x71
  423d39:	ficomp WORD PTR ds:0x9a9d3898
  423d3f:	xchg   BYTE PTR [ecx-0x6d3df792],bl
  423d45:	dec    edx
  423d46:	jnp    0x423d82
  423d48:	xor    cl,BYTE PTR [ecx+0x7e803ca1]
  423d4e:	xor    ebp,DWORD PTR [esi]
  423d50:	push   esp
  423d51:	sub    eax,eax
  423d53:	stos   BYTE PTR es:[edi],al
  423d54:	sbb    al,0xe9
  423d56:	xor    DWORD PTR [ebx],eax
  423d58:	push   cs
  423d59:	rcr    BYTE PTR [edi+0x348a17ae],0x6
  423d60:	ret    
  423d61:	and    al,0x73
  423d63:	jl     0x423db8
  423d65:	mov    ebp,0xa059434e
  423d6a:	dec    esp
  423d6b:	inc    ah
  423d6d:	shr    BYTE PTR [edi],0x94
  423d70:	push   cs
  423d71:	scas   al,BYTE PTR es:[edi]
  423d72:	push   ds
  423d73:	les    ebx,FWORD PTR [esi-0x6b88df41]
  423d79:	inc    esp
  423d7a:	imul   BYTE PTR [edi]
  423d7c:	mov    esi,0xb1348828
  423d81:	rol    BYTE PTR [esp+ecx*4-0x476ae63e],0x49
  423d89:	out    0x72,eax
  423d8b:	test   DWORD PTR [ecx+0x2e],ebp
  423d8e:	jns    0x423d55
  423d90:	inc    esi
  423d91:	jae    0x423e0b
  423d93:	aad    0x30
  423d95:	jp     0x423d67
  423d97:	or     al,0x24
  423d99:	jmp    0xe3bc086f
  423d9e:	add    bl,dl
  423da0:	mov    ch,0x6f
  423da2:	retf   0x7c25
  423da5:	popa   
  423da6:	es popf 
  423da8:	xchg   ebp,eax
  423da9:	je     0x423ded
  423dab:	and    al,0x93
  423dad:	pusha  
  423dae:	out    0x21,al
  423db0:	(bad)  
  423db1:	mov    dh,0xc8
  423db3:	jnp    0x423dfe
  423db5:	cmp    eax,0xf950b6b
  423dba:	ds fwait
  423dbc:	or     al,0x10
  423dbe:	xchg   BYTE PTR [edi+ebx*4+0x6609aca3],al
  423dc5:	push   edi
  423dc6:	xlat   BYTE PTR ds:[ebx]
  423dc7:	cld    
  423dc8:	retf   0x15cb
  423dcb:	mov    eax,0x51f46ebb
  423dd0:	cmp    bl,BYTE PTR [edx+0x2daab54b]
  423dd6:	(bad)  
  423dd7:	or     eax,0xe828dd9c
  423ddc:	daa    
  423ddd:	iret   
  423dde:	scas   eax,DWORD PTR es:[edi]
  423ddf:	es popf 
  423de1:	add    eax,DWORD PTR [edi+0x440b8b09]
  423de7:	mov    al,ds:0x87d2f948
  423dec:	lods   eax,DWORD PTR ds:[esi]
  423ded:	xor    BYTE PTR [ebp-0x27],ah
  423df0:	rcr    BYTE PTR [eax+eiz*1],1
  423df3:	xor    ecx,DWORD PTR [ebx-0x41716095]
  423df9:	or     al,0x68
  423dfb:	xchg   ecx,eax
  423dfc:	jmp    0x423e6b
  423dfe:	sbb    eax,0xffffffe1
  423e01:	pop    es
  423e02:	sbb    BYTE PTR [esi],cl
  423e04:	jbe    0x423d86
  423e06:	add    cl,ch
  423e08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e09:	lods   eax,DWORD PTR ds:[esi]
  423e0a:	out    0x4a,al
  423e0c:	cmp    eax,0xffe4996e
  423e11:	and    eax,0xd99b7b43
  423e16:	scas   al,BYTE PTR es:[edi]
  423e17:	xor    bl,BYTE PTR ds:0x32c59b33
  423e1d:	and    BYTE PTR [ebp+0x71b497a9],bl
  423e23:	dec    ebx
  423e24:	js     0x423de7
  423e26:	mov    esp,0x9a50d2c5
  423e2b:	dec    edi
  423e2c:	inc    eax
  423e2d:	or     ebp,DWORD PTR [ebp-0x6c]
  423e30:	or     bl,BYTE PTR [ebp-0x6a6060f4]
  423e36:	call   0xe70:0x74aa037d
  423e3d:	mov    esp,0x1b83566
  423e42:	add    al,ch
  423e44:	add    DWORD PTR [eax],eax
  423e46:	add    BYTE PTR [edx-0x77],ch
  423e49:	adc    esi,DWORD PTR [ebp+0x33]
  423e4c:	xchg   ebx,eax
  423e4d:	imul   DWORD PTR [edi]
  423e4f:	rcl    BYTE PTR [eax-0x73],1
  423e52:	mov    esi,0xe0aa0192
  423e57:	push   ecx
  423e58:	retf   0x207c
  423e5b:	pop    ebx
  423e5c:	add    ebp,DWORD PTR [ebp+0x651e03f]
  423e62:	mov    eax,0xf4803f3c
  423e67:	imul   ebp,ecx,0xd09e75ca
  423e6d:	fld    DWORD PTR [ebx+ecx*8]
  423e70:	dec    esp
  423e71:	out    0x48,eax
  423e73:	(bad)  
  423e74:	(bad)  
  423e75:	pop    edi
  423e76:	out    dx,al
  423e77:	and    al,BYTE PTR [esi]
  423e79:	mov    BYTE PTR [esi],al
  423e7b:	push   ebp
  423e7c:	out    0x53,eax
  423e7e:	mov    edi,DWORD PTR [edx+0x36de590e]
  423e84:	dec    ebp
  423e85:	cmp    DWORD PTR [edi+0x5f],ebx
  423e88:	adc    cl,BYTE PTR ds:0xec65afb
  423e8e:	addr16 jbe 0x423eb9
  423e91:	jl     0x423e9a
  423e93:	aad    0x55
  423e95:	jmp    0x423efb
  423e97:	xlat   BYTE PTR ds:[ebx]
  423e98:	pop    es
  423e99:	jecxz  0x423efc
  423e9b:	dec    edi
  423e9c:	mov    eax,0x1af65f5
  423ea1:	mov    bl,0x95
  423ea3:	pop    edi
  423ea4:	arpl   WORD PTR [ebx+0x2dce7f08],sp
  423eaa:	sahf   
  423eab:	xor    bh,BYTE PTR [ebx-0x47]
  423eae:	mov    ds:0x2f6a58c2,al
  423eb3:	jb     0x423e62
  423eb5:	(bad)  
  423eb6:	fisubr WORD PTR [ebx+0x492036de]
  423ebc:	out    0xe2,eax
  423ebe:	cmp    dl,0x84
  423ec1:	cmp    eax,0x395a7168
  423ec6:	xchg   ecx,eax
  423ec7:	pop    ebx
  423ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ec9:	cld    
  423eca:	lahf   
  423ecb:	jb     0x423e96
  423ecd:	cmp    cl,BYTE PTR [esi]
  423ecf:	and    DWORD PTR [ecx+ebx*8],ecx
  423ed2:	fs push cs
  423ed4:	add    eax,DWORD PTR [edi+0x60]
  423ed7:	or     DWORD PTR [edi],edx
  423ed9:	inc    esi
  423eda:	push   ecx
  423edb:	push   ebp
  423edc:	xchg   ebx,eax
  423edd:	fwait
  423ede:	add    ebp,DWORD PTR [edx+0x6c6c5a3a]
  423ee4:	inc    ecx
  423ee5:	cmp    DWORD PTR [edi+0x61],ebp
  423ee8:	(bad)  
  423ee9:	fmul   DWORD PTR [ecx]
  423eeb:	adc    bh,BYTE PTR [ebx-0x621430a]
  423ef1:	into   
  423ef2:	sbb    BYTE PTR [ecx-0x6c],dh
  423ef5:	stos   BYTE PTR es:[edi],al
  423ef6:	push   ebp
  423ef7:	jmp    0xd6a7:0xd006f5ea
  423efe:	ror    BYTE PTR [ecx+0x2c4e83dc],1
  423f04:	sahf   
  423f05:	(bad)  
  423f06:	cmp    eax,0x7541a574
  423f0b:	(bad)  
  423f0c:	mov    edi,0x2a0dfe90
  423f11:	push   ebp
  423f12:	out    dx,al
  423f13:	jbe    0x423eaa
  423f15:	call   0xde75faba
  423f1a:	jo     0x423f5a
  423f1c:	aad    0xab
  423f1e:	add    BYTE PTR [edi+0x14715d60],0xb9
  423f25:	mov    ecx,0x9a66f0d9
  423f2a:	js     0x423ed8
  423f2c:	sbb    eax,DWORD PTR [esi+ecx*4+0x76146264]
  423f33:	sub    eax,0xbf3bd419
  423f38:	pop    edi
  423f39:	mov    esp,0x6d73446f
  423f3e:	add    esp,DWORD PTR ds:0xad1615ed
  423f44:	pop    eax
  423f45:	pop    ebp
  423f46:	pop    ds
  423f47:	mov    dh,0x44
  423f49:	nop
  423f4a:	cmp    eax,0x922fc32a
  423f4f:	repz push 0xb69f621
  423f55:	xor    ebp,0x4
  423f58:	in     eax,dx
  423f59:	jmp    0x470e:0x240f9d63
  423f60:	and    DWORD PTR [ecx],edi
  423f62:	xor    edx,ecx
  423f64:	inc    ebp
  423f65:	int3   
  423f66:	aam    0x5d
  423f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f69:	sbb    ebx,DWORD PTR [ecx]
  423f6b:	inc    ecx
  423f6c:	sub    eax,DWORD PTR [ebx+0x31]
  423f6f:	test   dl,ah
  423f71:	out    0x1f,al
  423f73:	push   edx
  423f74:	stos   BYTE PTR es:[edi],al
  423f75:	lds    esi,FWORD PTR [edi+0x5d0d936a]
  423f7b:	or     dl,dl
  423f7d:	sbb    DWORD PTR [edx+0x6e486093],0x44ffa16a
  423f87:	and    bh,al
  423f89:	cmc    
  423f8a:	jbe    0x423f0f
  423f8c:	iret   
  423f8d:	mov    bh,0x1c
  423f8f:	push   ecx
  423f90:	ins    BYTE PTR es:[edi],dx
  423f91:	xor    BYTE PTR [edi+0xaf4607c],al
  423f97:	mov    bh,0x8f
  423f99:	or     bl,BYTE PTR [edi]
  423f9b:	call   0xb848:0x57d007ea
  423fa2:	jle    0x423f3d
  423fa4:	cmp    eax,eax
  423fa6:	jbe    0x423f3b
  423fa8:	mov    bl,0x82
  423faa:	ins    BYTE PTR es:[edi],dx
  423fab:	sub    dl,cl
  423fad:	fmulp  st(3),st
  423faf:	pop    eax
  423fb0:	pop    eax
  423fb1:	jg     0x423f8c
  423fb3:	(bad)  
  423fb4:	imul   edx,ecx,0x1e561a30
  423fba:	xchg   edi,eax
  423fbb:	xchg   ebx,eax
  423fbc:	iret   
  423fbd:	cs jle 0x423fc5
  423fc0:	xor    dh,BYTE PTR [edi+0x18]
  423fc3:	imul   ecx,esi,0xdfc1c5e1
  423fc9:	out    dx,eax
  423fca:	push   edi
  423fcb:	cs add al,0xb
  423fce:	out    0x20,al
  423fd0:	mov    bl,BYTE PTR [edi+edi*1]
  423fd3:	and    eax,0x4aa05e46
  423fd8:	ja     0x423fe8
  423fda:	mov    edx,0xa69d600a
  423fdf:	add    DWORD PTR [ebp+0x6d06180c],eax
  423fe5:	mov    al,ds:0x8ff0a202
  423fea:	cmp    BYTE PTR [ebp-0x717b31d7],dh
  423ff0:	adc    dh,BYTE PTR [eax]
  423ff2:	adc    al,dh
  423ff4:	mov    ds:0x90d9e8df,al
  423ff9:	push   edx
  423ffa:	cwde   
  423ffb:	dec    ebp
  423ffc:	or     DWORD PTR [edx+0x3ada9a17],ebx
  424002:	or     eax,0x95ca34ac
  424007:	adc    dl,BYTE PTR [edx]
  424009:	bound  ecx,QWORD PTR [esi-0x67]
  42400c:	test   eax,0x13a3caa4
  424011:	je     0x424015
  424013:	ss fld st(0)
  424016:	imul   esi,DWORD PTR [ebp+0x5a47bb30],0x6a3493b5
  424020:	or     al,0x57
  424022:	pop    ds
  424023:	dec    edi
  424024:	fmul   DWORD PTR [edx]
  424026:	jp     0x424020
  424028:	arpl   si,dx
  42402a:	(bad)  
  42402b:	ror    dl,1
  42402d:	jle    0x423ff8
  42402f:	nop
  424030:	mov    bl,0x8c
  424032:	fild   QWORD PTR [edi-0x6e002c01]
  424038:	(bad)  
  42403a:	adc    al,0x6b
  42403c:	pushf  
  42403d:	and    DWORD PTR [edx],0x1d
  424040:	mov    edx,0x1e80001
  424045:	add    BYTE PTR [eax],al
  424047:	mov    edi,0x96c67c8d
  42404c:	leave  
  42404d:	adc    edi,DWORD PTR [edx+ebp*1+0x55]
  424051:	push   esi
  424052:	lock mov ds:0x81328aab,eax
  424058:	stos   BYTE PTR es:[edi],al
  424059:	pop    ebp
  42405a:	push   edi
  42405b:	push   0x4f
  42405d:	jp     0x424022
  42405f:	jp     0x4240d3
  424061:	cmp    DWORD PTR gs:[eax],esp
  424064:	mov    ebx,0xfa263b76
  424069:	mov    eax,ds:0xc6573f01
  42406e:	mov    dh,BYTE PTR [edi+ebx*2+0x37546b44]
  424075:	arpl   WORD PTR [edx+edi*8],ax
  424078:	in     al,0x31
  42407a:	repz leave 
  42407c:	mov    dl,0x1b
  42407e:	in     al,0xa6
  424080:	mov    ch,0xff
  424082:	not    DWORD PTR [esi+ecx*8+0x43]
  424086:	popa   
  424087:	(bad)  
  424088:	clc    
  424089:	mov    esi,0x62f1547a
  42408e:	jg     0x4240bd
  424090:	dec    ebp
  424091:	std    
  424092:	inc    BYTE PTR [eax]
  424094:	out    0x80,eax
  424096:	lods   al,BYTE PTR ds:[esi]
  424097:	repnz pop ebx
  424099:	sbb    al,0x46
  42409b:	mov    ecx,cr1
  42409e:	push   esi
  42409f:	sub    DWORD PTR [ebp+0x55c66ff5],eax
  4240a5:	aad    0xdf
  4240a7:	daa    
  4240a8:	out    dx,eax
  4240a9:	push   esp
  4240aa:	jae    0x424118
  4240ac:	mov    ebx,0xf4fa5a31
  4240b1:	push   cs
  4240b2:	and    dh,BYTE PTR [eax]
  4240b4:	add    al,0xcf
  4240b6:	les    edi,FWORD PTR [ecx+edi*1+0x4d]
  4240ba:	pop    ebp
  4240bb:	lock xor DWORD PTR [ebp-0x6e],eax
  4240bf:	lahf   
  4240c0:	add    ah,BYTE PTR [edi+0x15]
  4240c3:	dec    edx
  4240c4:	retf   
  4240c5:	cld    
  4240c6:	popa   
  4240c7:	xchg   ebx,eax
  4240c8:	sbb    bl,BYTE PTR [edx]
  4240ca:	inc    DWORD PTR [esi+esi*4-0x20c7496d]
  4240d1:	pop    esi
  4240d2:	sbb    al,BYTE PTR [edx+eiz*1]
  4240d5:	sbb    al,0xb
  4240d7:	ficomp DWORD PTR [ebx]
  4240d9:	adc    al,0xa0
  4240db:	or     eax,0x5ff42d18
  4240e0:	popf   
  4240e1:	neg    DWORD PTR [edx-0x7f]
  4240e4:	int3   
  4240e5:	push   ebx
  4240e6:	push   0xffffff82
  4240e8:	lds    ecx,FWORD PTR ds:[edi+0x5d72a863]
  4240ef:	inc    eax
  4240f0:	outs   dx,DWORD PTR ds:[esi]
  4240f1:	or     eax,0x43d3f19f
  4240f6:	call   0xa390:0x5016d085
  4240fd:	inc    esi
  4240fe:	lods   eax,DWORD PTR ds:[esi]
  4240ff:	outs   dx,DWORD PTR ds:[esi]
  424100:	or     DWORD PTR [ebp-0x70b921d7],ebp
  424106:	(bad)  
  424108:	jnp    0x424169
  42410a:	add    esi,eax
  42410c:	cdq    
  42410d:	ficomp WORD PTR [edi-0xf4f92b]
  424114:	dec    ebx
  424115:	fbld   TBYTE PTR [ecx+0x19]
  424118:	shr    DWORD PTR [edi+ecx*1-0x9bbf2cd],cl
  42411f:	xchg   edx,eax
  424120:	inc    esp
  424121:	cmp    ch,BYTE PTR [ecx-0x1be433d8]
  424127:	sub    edx,ebx
  424129:	mov    esp,0x4ac1c713
  42412e:	adc    DWORD PTR [ebx*1+0x64fbeb4e],edi
  424135:	sbb    BYTE PTR [ebx-0x2cfbe660],0x57
  42413c:	in     eax,dx
  42413d:	add    cl,BYTE PTR [esi-0x18]
  424140:	ins    BYTE PTR es:[edi],dx
  424141:	stos   DWORD PTR es:[edi],eax
  424142:	cmp    BYTE PTR ds:0x994b8b6a,cl
  424148:	push   0x66
  42414a:	imul   BYTE PTR [ebp+0x319a5e6c]
  424150:	mov    DWORD PTR [edi+esi*8+0x3b],edi
  424154:	loope  0x424198
  424156:	dec    eax
  424157:	imul   ecx,DWORD PTR [esp+eax*4],0xffffffe9
  42415b:	pop    edi
  42415c:	or     BYTE PTR [ebx],cl
  42415e:	nop
  42415f:	push   esi
  424160:	mov    dh,BYTE PTR [eax-0x78f25ee8]
  424166:	icebp  
  424167:	fdivr  st,st(1)
  424169:	pushf  
  42416a:	cwde   
  42416b:	sub    al,dh
  42416d:	test   eax,0x4607d11a
  424172:	repz dec ebp
  424174:	cmp    BYTE PTR [edi-0x314ef08e],ah
  42417a:	lods   eax,DWORD PTR ds:[esi]
  42417b:	xor    eax,0x8e36b400
  424180:	pop    ds
  424181:	outs   dx,DWORD PTR ds:[esi]
  424182:	pop    edi
  424183:	jne    0x424137
  424185:	sbb    BYTE PTR ds:0xa70975c9,dl
  42418b:	lahf   
  42418c:	jb     0x4241a6
  42418e:	mov    ecx,0xc3496e6f
  424193:	loop   0x424161
  424195:	addr16 add edi,edx
  424198:	loop   0x4241d4
  42419a:	ds jbe 0x424143
  42419d:	jnp    0x4241e9
  42419f:	jo     0x4241bf
  4241a1:	aad    0x8f
  4241a3:	pop    eax
  4241a4:	adc    BYTE PTR [ecx+0x3db7baf2],dl
  4241aa:	repz mov esi,0xa672265c
  4241b0:	sbb    al,0xc8
  4241b2:	pop    edi
  4241b3:	adc    al,0x1c
  4241b5:	xlat   BYTE PTR ds:[ebx]
  4241b6:	mov    ebp,0xb3f13a54
  4241bb:	in     eax,dx
  4241bc:	sbb    DWORD PTR [ebx-0x1b5b49e4],ecx
  4241c2:	(bad)  
  4241c3:	jmp    0x7b63:0x6ffe37dd
  4241ca:	pop    ss
  4241cb:	call   0xc90b451e
  4241d0:	scas   eax,DWORD PTR es:[edi]
  4241d1:	pop    edi
  4241d2:	in     eax,dx
  4241d3:	aas    
  4241d4:	std    
  4241d5:	out    0x36,al
  4241d7:	xchg   edx,eax
  4241d8:	xor    ch,ch
  4241da:	mov    bl,0x89
  4241dc:	jge    0x42416c
  4241de:	adc    al,0xe8
  4241e0:	ds int3 
  4241e2:	dec    eax
  4241e3:	mov    bh,0x3e
  4241e5:	in     al,0xb2
  4241e7:	sub    eax,ecx
  4241e9:	xlat   BYTE PTR ds:[ebx]
  4241ea:	sti    
  4241eb:	jns    0x424250
  4241ed:	not    DWORD PTR [edx+ecx*4+0x18]
  4241f1:	cld    
  4241f2:	dec    edi
  4241f3:	(bad)  
  4241f4:	mov    edx,0x28b549cf
  4241f9:	je     0x4241fb
  4241fb:	push   cs
  4241fc:	mov    cl,0x85
  4241fe:	das    
  4241ff:	stc    
  424200:	cmp    cl,dh
  424202:	jo     0x42427c
  424204:	les    esp,FWORD PTR [eax+0x38b560dc]
  42420a:	ret    
  42420b:	pop    edi
  42420c:	or     edx,edx
  42420e:	jbe    0x4241ca
  424210:	ds out 0x95,al
  424213:	and    eax,0xcf349b78
  424218:	xchg   ebp,eax
  424219:	mov    esp,0x1e52a5b1
  42421e:	inc    edi
  42421f:	adc    eax,0x46e3bb08
  424224:	or     DWORD PTR [eax+0xc08dd9d],esi
  42422a:	iret   
  42422b:	call   0x38a9:0x4903efd5
  424232:	popf   
  424233:	clc    
  424234:	popf   
  424235:	in     eax,dx
  424236:	std    
  424237:	xchg   ebx,eax
  424238:	retf   
  424239:	or     eax,0xef5d4fae
  42423e:	in     al,dx
  42423f:	add    eax,0xe80001bc
  424244:	add    DWORD PTR [eax],eax
  424246:	add    BYTE PTR [eax-0x6e16f2d3],cl
  42424c:	mov    DWORD PTR [ebx+0x499a6132],0x547dd9fe
  424256:	dec    edi
  424257:	loope  0x42424c
  424259:	(bad)  
  42425b:	cli    
  42425c:	mov    ds:0x6556b48d,al
  424261:	mov    ch,0xfe
  424263:	inc    edi
  424264:	fwait
  424265:	popf   
  424266:	xlat   BYTE PTR ds:[ebx]
  424267:	dec    ebp
  424268:	and    al,BYTE PTR [eax+0x7af3f06f]
  42426e:	push   esp
  42426f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424270:	call   0xd7ea13a4
  424275:	inc    edx
  424276:	stos   BYTE PTR es:[edi],al
  424277:	adc    DWORD PTR [ecx],0xffffffcd
  42427a:	(bad)  
  42427b:	jne    0x42428f
  42427d:	mov    ds:0xe3de3840,eax
  424282:	imul   edi,DWORD PTR [edx+0x5ba4f44b],0x34888dfe
  42428c:	xor    ebx,esi
  42428e:	fst    st(3)
  424290:	jnp    0x42430b
  424292:	cmp    bl,0x8d
  424295:	ret    
  424296:	retf   0x4749
  424299:	rcr    ebp,1
  42429b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42429c:	pop    esi
  42429d:	cmp    eax,0x454e165d
  4242a2:	or     eax,0xd76884b1
  4242a7:	cmp    esp,DWORD PTR [esi-0x7a3396e0]
  4242ad:	jecxz  0x4242ff
  4242af:	ret    0xdd7e
  4242b2:	outs   dx,BYTE PTR ds:[esi]
  4242b3:	sub    DWORD PTR [edi-0x5b],ecx
  4242b6:	scas   eax,DWORD PTR es:[edi]
  4242b7:	fldenv [ebx-0x33]
  4242ba:	add    eax,0x9dd28d31
  4242bf:	jl     0x424263
  4242c1:	loopne 0x424301
  4242c3:	push   esi
  4242c4:	inc    ebp
  4242c5:	fdiv   DWORD PTR [esi]
  4242c7:	mov    BYTE PTR [esi+ecx*4-0x405e48a0],dl
  4242ce:	add    eax,0x103477c9
  4242d3:	ja     0x424292
  4242d5:	repz in al,0x20
  4242d8:	dec    eax
  4242d9:	out    0x28,al
  4242db:	js     0x42433c
  4242dd:	push   cs
  4242de:	and    eax,0xd99220c5
  4242e3:	push   ecx
  4242e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242e5:	and    al,0xe6
  4242e7:	pop    edx
  4242e8:	loope  0x4242c0
  4242ea:	xchg   edx,eax
  4242eb:	daa    
  4242ec:	or     al,0x50
  4242ee:	(bad)  
  4242ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242f0:	adc    al,0xf5
  4242f2:	push   ds
  4242f3:	aas    
  4242f4:	xchg   ebx,eax
  4242f5:	adc    eax,0x972f9681
  4242fa:	or     ebp,DWORD PTR [eax+ebp*2+0x54]
  4242fe:	enter  0xed5d,0xb0
  424302:	shl    BYTE PTR [ecx],1
  424304:	outs   dx,DWORD PTR ds:[esi]
  424305:	ror    ah,cl
  424307:	mov    esp,0x1ddd8d20
  42430c:	cmp    ah,BYTE PTR [eax+0x8]
  42430f:	mov    bl,0x7f
  424311:	jl     0x42438b
  424313:	and    DWORD PTR [eax-0x1f],eax
  424316:	dec    edi
  424317:	fs inc edx
  424319:	pop    edi
  42431a:	mov    ds:0xe5958d9e,eax
  42431f:	mov    bl,BYTE PTR [ecx-0x46c0a2ec]
  424325:	retf   
  424326:	pushf  
  424327:	stos   DWORD PTR es:[edi],eax
  424328:	adc    DWORD PTR [edx+0x65],0xfffffffb
  42432c:	popa   
  42432d:	dec    edx
  42432e:	and    ch,ah
  424330:	cli    
  424331:	out    0x32,eax
  424333:	push   ecx
  424334:	inc    DWORD PTR [edi+0x424ba4c7]
  42433a:	lea    edx,[esi-0x1e]
  42433d:	inc    edx
  42433e:	jmp    0xec158a6f
  424343:	in     al,dx
  424344:	ins    BYTE PTR es:[edi],dx
  424345:	push   esp
  424346:	fidivr WORD PTR [eax]
  424348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424349:	or     al,dl
  42434b:	sub    edi,DWORD PTR [eax-0x6f]
  42434e:	inc    edx
  42434f:	aam    0xe3
  424351:	(bad)  
  424352:	clc    
  424353:	cmp    DWORD PTR [edi+0x71],esi
  424356:	sub    edx,DWORD PTR [esi]
  424358:	sahf   
  424359:	xor    eax,0xa562bc68
  42435e:	mov    al,0x8a
  424360:	retf   0xbd58
  424363:	mov    DWORD PTR [edi],ebx
  424365:	jmp    0xcba6689d
  42436a:	aam    0x9f
  42436c:	retf   
  42436d:	jnp    0x4243b3
  42436f:	mov    DWORD PTR [edi-0x57],edi
  424372:	pop    eax
  424373:	cmp    al,0x79
  424375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424376:	dec    ebp
  424377:	ss xchg ecx,eax
  424379:	outs   dx,DWORD PTR ds:[esi]
  42437a:	cwde   
  42437b:	addr16 inc eax
  42437d:	push   ss
  42437e:	cmc    
  42437f:	ficomp DWORD PTR [edi+ebp*4]
  424382:	sub    BYTE PTR [eax-0x50],ah
  424385:	cmp    ebp,eax
  424387:	sub    dl,0x9f
  42438a:	mov    dh,0xed
  42438c:	sub    BYTE PTR [esi-0x7161b619],0x88
  424393:	xor    BYTE PTR [eax-0x5],0x56
  424397:	hlt    
  424398:	lds    esi,FWORD PTR [edi]
  42439a:	push   0x6d
  42439c:	in     eax,0x9d
  42439e:	idiv   DWORD PTR [esi+0x9f4819c]
  4243a4:	mov    dh,0xfd
  4243a6:	int3   
  4243a7:	popf   
  4243a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243a9:	(bad)  
  4243ab:	adc    DWORD PTR [esi+0x41b5e99e],0x73
  4243b2:	enter  0x1718,0xbc
  4243b6:	pop    es
  4243b7:	jle    0x424398
  4243b9:	mov    ch,0x20
  4243bb:	loopne 0x42436a
  4243bd:	mov    esi,0x62224e6b
  4243c2:	mov    eax,0x32978abb
  4243c7:	adc    BYTE PTR [edx],dh
  4243c9:	mov    DWORD PTR [edx],eax
  4243cb:	xchg   ebx,eax
  4243cc:	popf   
  4243cd:	stos   DWORD PTR es:[edi],eax
  4243ce:	fdivp  st(4),st
  4243d0:	daa    
  4243d1:	cmp    dh,BYTE PTR [ebx-0x8962034]
  4243d7:	into   
  4243d8:	loop   0x4243ba
  4243da:	jmp    0x509b:0xc770b0e4
  4243e1:	addr16 xchg edi,eax
  4243e3:	sub    eax,DWORD PTR [ecx]
  4243e5:	icebp  
  4243e6:	xchg   esp,eax
  4243e7:	or     al,0x81
  4243e9:	push   esp
  4243ea:	std    
  4243eb:	jmp    0x2971f89c
  4243f0:	sahf   
  4243f1:	lods   eax,DWORD PTR ds:[esi]
  4243f2:	push   ebp
  4243f3:	jnp    0x4243e7
  4243f5:	iret   
  4243f6:	ret    
  4243f7:	popa   
  4243f8:	mov    ebp,0x8ec87b3b
  4243fd:	test   al,0xb1
  4243ff:	icebp  
  424400:	mov    ah,0xb4
  424402:	(bad)  
  424404:	shr    DWORD PTR [ebx+eax*4-0x3f06c215],0xcd
  42440c:	sub    eax,0x19c507bb
  424411:	loopne 0x4243c6
  424413:	and    dh,ah
  424415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424416:	pushf  
  424417:	daa    
  424418:	add    BYTE PTR [ebp+0x78],ah
  42441b:	scas   eax,DWORD PTR es:[edi]
  42441c:	sbb    BYTE PTR [edx-0x2fd5f795],0x33
  424423:	cmp    eax,0xd250a63d
  424428:	pop    esi
  424429:	inc    ebp
  42442a:	hlt    
  42442b:	inc    edi
  42442c:	out    dx,al
  42442d:	dec    dh
  42442f:	es mov eax,0xbf9f8f0d
  424435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424436:	mov    ecx,0xfc11d972
  42443b:	mov    ecx,DWORD PTR [eax-0x421204ef]
  424441:	add    DWORD PTR [eax],eax
  424443:	call   0x64424449
  424448:	stos   BYTE PTR es:[edi],al
  424449:	or     al,0x31
  42444b:	(bad)  
  42444c:	aam    0x65
  42444e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42444f:	jle    0x4244a9
  424451:	data16 test al,0xf4
  424454:	or     dl,BYTE PTR [ebp+0x4]
  424457:	and    al,BYTE PTR [edx+0x32]
  42445a:	outs   dx,DWORD PTR ds:[esi]
  42445b:	adc    al,0xa3
  42445d:	out    dx,eax
  42445e:	and    al,0x13
  424460:	cmp    dl,bl
  424462:	loopne 0x4243ed
  424464:	and    BYTE PTR [eax-0x56],bl
  424467:	clc    
  424468:	pusha  
  424469:	xchg   ebx,eax
  42446a:	loopne 0x4244cb
  42446c:	ins    DWORD PTR es:[edi],dx
  42446d:	sbb    edi,0xffffff8d
  424470:	push   ebx
  424471:	shl    DWORD PTR [ecx+0x64e5bd86],0x6b
  424478:	in     al,dx
  424479:	cmp    eax,0xf79ff12b
  42447e:	jo     0x4244af
  424480:	and    DWORD PTR [edx+0x1444274e],ebx
  424486:	dec    eax
  424487:	sbb    BYTE PTR [ecx+edx*4-0x40e74dce],ch
  42448e:	push   edi
  42448f:	jbe    0x424421
  424491:	call   0x5254a0c6
  424496:	ins    BYTE PTR es:[edi],dx
  424497:	int3   
  424498:	jge    0x424454
  42449a:	ins    BYTE PTR es:[edi],dx
  42449b:	jns    0x424511
  42449d:	and    ebx,esp
  42449f:	mov    ecx,0xb2867004
  4244a4:	inc    ebx
  4244a5:	push   esp
  4244a6:	rdmsr  
  4244a8:	fidivr DWORD PTR [edi+0x6d1d0af]
  4244ae:	out    0xc3,eax
  4244b0:	or     eax,0x7be52a0
  4244b5:	jmp    0x42449f
  4244b7:	cs xor dl,cl
  4244ba:	xchg   bl,bl
  4244bc:	mov    ecx,0xc943f4d5
  4244c1:	xchg   ecx,eax
  4244c2:	mov    edx,0xc970b66f
  4244c7:	pop    ebx
  4244c8:	fwait
  4244c9:	inc    esp
  4244ca:	pop    ecx
  4244cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244cc:	stc    
  4244cd:	sub    BYTE PTR [edi+0x7b64e477],0xb4
  4244d4:	aam    0x86
  4244d6:	mov    al,ds:0x1b6a5637
  4244db:	jnp    0x4244fe
  4244dd:	fwait
  4244de:	sahf   
  4244df:	hlt    
  4244e0:	pop    ecx
  4244e1:	mov    bl,0x3f
  4244e3:	loop   0x424529
  4244e5:	out    dx,eax
  4244e6:	in     eax,dx
  4244e7:	push   cs
  4244e8:	or     eax,0xef7eea6c
  4244ed:	lock lods eax,DWORD PTR ds:[esi]
  4244ef:	sbb    BYTE PTR [ebx],bl
  4244f1:	adc    DWORD PTR [esi-0x79cfff95],eax
  4244f7:	mov    ebp,0x1502721f
  4244fc:	xor    ebp,esi
  4244fe:	je     0x424542
  424500:	sar    BYTE PTR [edx+0x50521761],1
  424506:	jae    0x4244db
  424508:	arpl   WORD PTR [eax+0x61],bp
  42450b:	mov    cl,0x18
  42450d:	imul   BYTE PTR [edi]
  42450f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424510:	cmp    al,0x66
  424512:	inc    edi
  424513:	js     0x4244cb
  424515:	sub    DWORD PTR [esi-0x41],ebp
  424518:	xlat   BYTE PTR ds:[ebx]
  424519:	scas   eax,DWORD PTR es:[edi]
  42451a:	retf   0x709a
  42451d:	cmp    bh,BYTE PTR [esi*4+0x18aaaf1c]
  424524:	shl    BYTE PTR [ebp-0x72],cl
  424527:	mov    ebp,0x56672e28
  42452c:	jg     0x424511
  42452e:	pop    ss
  42452f:	add    al,0x68
  424531:	fld    QWORD PTR [edx+0x68]
  424534:	loop   0x4245a4
  424536:	leave  
  424537:	jns    0x424522
  424539:	sahf   
  42453a:	rol    BYTE PTR [edx],1
  42453c:	sub    esp,DWORD PTR [esi+eiz*1+0x6074a2d3]
  424543:	jnp    0x4245b5
  424545:	dec    edx
  424546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424547:	mov    gs,WORD PTR [edx+0x60]
  42454a:	dec    BYTE PTR [eax]
  42454c:	aas    
  42454d:	lds    esi,FWORD PTR [edi+0xd]
  424550:	cmp    edx,DWORD PTR [edx]
  424552:	fdiv   DWORD PTR [ebx-0x77a1601c]
  424558:	xchg   edx,eax
  424559:	adc    dh,BYTE PTR [edx]
  42455b:	sub    DWORD PTR [esi-0xcd2c950],ecx
  424561:	dec    ecx
  424562:	adc    edi,DWORD PTR [ecx+0x28]
  424565:	or     BYTE PTR [ecx],ah
  424567:	xor    BYTE PTR [esp+eax*4],bh
  42456a:	jg     0x424523
  42456c:	add    ebx,DWORD PTR [ebx-0x66cc76dd]
  424572:	add    BYTE PTR [edx+esi*4-0xd],cl
  424576:	xchg   ecx,eax
  424577:	lea    ecx,[edx+0x2320fc7c]
  42457d:	adc    bl,BYTE PTR [edi]
  42457f:	std    
  424580:	push   cs
  424581:	mov    DWORD PTR [ebx],0xe93530cc
  424587:	adc    ch,BYTE PTR [eax]
  424589:	fnstcw WORD PTR [eax-0x6615554b]
  42458f:	pop    es
  424590:	imul   ebx,DWORD PTR ds:0xbc9316a1,0x35a0811a
  42459a:	or     ch,BYTE PTR [edx]
  42459c:	cmp    al,0xe6
  42459e:	inc    eax
  42459f:	rcr    DWORD PTR [edi],cl
  4245a1:	push   0x351e2fe4
  4245a6:	xor    BYTE PTR [ebx-0x1b],ah
  4245a9:	pusha  
  4245aa:	test   al,0xe3
  4245ac:	test   DWORD PTR ds:0x1313a175,ecx
  4245b2:	sbb    al,0x3e
  4245b4:	fwait
  4245b5:	retf   
  4245b6:	mov    edi,0x1a305acc
  4245bb:	sti    
  4245bc:	lahf   
  4245bd:	iret   
  4245be:	dec    ebp
  4245bf:	cmp    eax,0xdf12d03b
  4245c4:	sub    edx,DWORD PTR [ecx]
  4245c6:	mov    ah,0xc4
  4245c8:	ret    0x9b94
  4245cb:	mov    BYTE PTR ds:0xe18cccc9,dl
  4245d1:	imul   cx,WORD PTR [ebx+0x7ec3b30e],0x9c3b
  4245da:	sar    DWORD PTR [eax+ecx*4-0x791c2bda],1
  4245e1:	fisubr WORD PTR [ebx]
  4245e3:	xchg   esp,eax
  4245e4:	fs hlt 
  4245e6:	out    0x88,eax
  4245e8:	fsqrt  
  4245ea:	fisttp QWORD PTR [edi-0x72]
  4245ed:	xchg   ebp,eax
  4245ee:	adc    edi,DWORD PTR [eax-0x17186796]
  4245f4:	jno    0x42461d
  4245f6:	mov    esi,0xe2103d0e
  4245fb:	out    dx,al
  4245fc:	xchg   edx,eax
  4245fd:	repz retf 0x5a03
  424601:	and    al,0x9a
  424603:	(bad)  
  424604:	pusha  
  424605:	jb     0x424618
  424607:	inc    eax
  424608:	int3   
  424609:	aam    0x5f
  42460b:	push   es
  42460c:	jmp    0x424672
  42460e:	clc    
  42460f:	xchg   edx,eax
  424610:	mov    bl,0x9d
  424612:	leave  
  424613:	add    ebp,0xc2ddf4bd
  424619:	add    DWORD PTR [eax+0x3b18f480],edi
  42461f:	mov    edx,ebx
  424621:	stos   DWORD PTR es:[edi],eax
  424622:	cmc    
  424623:	mov    esi,cs
  424625:	jae    0x42462b
  424627:	pop    es
  424628:	cmp    al,BYTE PTR [ebx-0x6a6522b7]
  42462e:	aad    0x4a
  424630:	jo     0x42460a
  424632:	jl     0x42462e
  424634:	cld    
  424635:	out    dx,al
  424636:	jbe    0x4245dd
  424638:	mov    eax,0x35a56213
  42463d:	and    DWORD PTR [ebp+0x1bfd5],esp
  424643:	call   0xc1424649
  424648:	(bad)  
  42464a:	lock into 
  42464c:	dec    eax
  42464d:	cmp    DWORD PTR [edi],0xd101403e
  424653:	ds cli 
  424655:	push   DWORD PTR [ebx+0x48]
  424658:	je     0x424646
  42465a:	adc    eax,0x14db1162
  42465f:	sahf   
  424660:	mov    ah,0x68
  424662:	enter  0x2bc2,0x70
  424666:	add    eax,0x84e358f
  42466b:	mov    ds:0xd76e7559,al
  424670:	add    ebp,DWORD PTR [edx]
  424672:	mov    dl,0x7c
  424674:	sbb    eax,0x2d3cf733
  424679:	fs int3 
  42467b:	dec    eax
  42467c:	inc    ebp
  42467d:	lods   al,BYTE PTR ds:[si]
  42467f:	mov    dl,BYTE PTR [esi+0x11]
  424682:	mov    eax,ds:0x65c467f3
  424687:	fwait
  424688:	scas   al,BYTE PTR es:[edi]
  424689:	imul   edx,edx,0x41
  42468c:	xor    eax,0x608f1cd3
  424691:	pop    ds
  424692:	push   eax
  424693:	out    0x88,eax
  424695:	mov    eax,0xc04a66f0
  42469a:	stos   BYTE PTR es:[edi],al
  42469b:	bound  esp,QWORD PTR [ebx]
  42469d:	mov    dl,0x78
  42469f:	cmp    edi,esp
  4246a1:	jne    0x4246b4
  4246a3:	lods   al,BYTE PTR ds:[esi]
  4246a4:	push   ds
  4246a5:	fs jns 0x424715
  4246a8:	pop    es
  4246a9:	mov    al,0xdc
  4246ab:	mov    al,0xb1
  4246ad:	mov    bl,dl
  4246af:	jns    0x4246be
  4246b1:	ror    BYTE PTR [edi-0x17],0x48
  4246b5:	or     ch,BYTE PTR [eax]
  4246b7:	push   ds
  4246b8:	inc    eax
  4246b9:	jg     0x424678
  4246bb:	xor    ecx,DWORD PTR [ecx-0x773d5157]
  4246c1:	sub    BYTE PTR [esi-0x1b],bl
  4246c4:	fcom   DWORD PTR [edi+0x4e]
  4246c7:	and    DWORD PTR [edi-0x6c51f649],ebx
  4246cd:	xor    eax,0x6e2be8a4
  4246d2:	lods   eax,DWORD PTR ds:[esi]
  4246d3:	inc    eax
  4246d4:	iret   
  4246d5:	jnp    0x4246e5
  4246d7:	popf   
  4246d8:	pop    ss
  4246d9:	sub    BYTE PTR [esi],bh
  4246db:	cmp    al,0x87
  4246dd:	and    DWORD PTR [ebp-0x7da6f659],edx
  4246e3:	shl    BYTE PTR [ecx+0x1ffd9bcc],cl
  4246e9:	lea    edx,[edx+0x66]
  4246ec:	test   DWORD PTR [esi-0x58],esp
  4246ef:	push   cs
  4246f0:	or     dh,BYTE PTR [esi+esi*1-0x5e37bd9a]
  4246f7:	mov    eax,0x7cae0dcd
  4246fc:	xchg   esi,eax
  4246fd:	sub    BYTE PTR [ebp-0x34d1e11d],ah
  424703:	adc    eax,0xe9a6cce1
  424708:	mov    esi,0xe8e61044
  42470d:	jp     0x42469f
  42470f:	popa   
  424710:	add    dh,BYTE PTR [ebx-0x25]
  424713:	sub    eax,0x2460cbe9
  424718:	pop    edx
  424719:	(bad)  
  42471a:	out    0x66,eax
  42471c:	(bad)  
  42471d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42471e:	or     eax,0x5efaff96
  424723:	xchg   ebp,eax
  424724:	sub    cl,BYTE PTR [edi+0x5e8c56f0]
  42472a:	cmp    BYTE PTR ds:0xd53d8d36,ch
  424730:	xchg   esp,eax
  424731:	stc    
  424732:	mov    bh,cl
  424734:	in     al,0xfe
  424736:	es inc eax
  424738:	outs   dx,DWORD PTR ds:[esi]
  424739:	call   0x28896f35
  42473e:	das    
  42473f:	sar    DWORD PTR [ebx-0x46],cl
  424742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424743:	lds    ebp,FWORD PTR [edi-0x73]
  424746:	scas   al,BYTE PTR es:[edi]
  424747:	push   eax
  424748:	pop    edi
  424749:	and    BYTE PTR [esi-0x6c],0xf5
  42474d:	jp     0x4246ef
  42474f:	xchg   esi,eax
  424750:	pop    esi
  424751:	inc    esi
  424752:	and    eax,0x3f408932
  424757:	xchg   edx,eax
  424758:	pop    ebp
  424759:	jecxz  0x424739
  42475b:	loope  0x4247ce
  42475d:	and    al,0xb4
  42475f:	dec    esi
  424760:	xor    bl,BYTE PTR [ebx+edx*4-0x7d]
  424764:	repnz sbb BYTE PTR [eax],dl
  424767:	mov    ah,0xc
  424769:	pop    ds
  42476a:	or     esp,DWORD PTR [esi]
  42476c:	(bad)  [edx+0x6d]
  42476f:	cdq    
  424770:	mov    dh,dh
  424772:	xor    esi,DWORD PTR [ebp+0x51]
  424775:	repnz lods eax,DWORD PTR ds:[esi]
  424777:	scas   eax,DWORD PTR es:[edi]
  424778:	and    cl,BYTE PTR [ecx+0x11fb5015]
  42477e:	add    al,0xa
  424780:	jle    0x4247a6
  424782:	sbb    al,0x7b
  424784:	ror    BYTE PTR [ebx+0x7344824f],cl
  42478a:	les    ebx,FWORD PTR [eax]
  42478c:	pop    esi
  42478d:	pop    ebp
  42478e:	ins    DWORD PTR es:[edi],dx
  42478f:	pop    esi
  424790:	icebp  
  424791:	mov    ?,WORD PTR [esi-0x79097455]
  424797:	(bad)
  42479a:	and    eax,0xe267b33
  42479f:	pop    ss
  4247a0:	xchg   esp,eax
  4247a1:	test   al,0x5e
  4247a3:	jno    0x4247fa
  4247a5:	add    eax,0x76db7c97
  4247aa:	pop    ebp
  4247ab:	out    0xa6,al
  4247ad:	inc    esp
  4247ae:	xor    ah,ch
  4247b0:	inc    edx
  4247b1:	aaa    
  4247b2:	arpl   bx,si
  4247b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247b5:	nop
  4247b6:	jle    0x4247c1
  4247b8:	adc    BYTE PTR [ecx],bl
  4247ba:	cli    
  4247bb:	(bad)  [ebx+eax*2-0x3000a3b5]
  4247c2:	xor    ch,BYTE PTR [ebx]
  4247c4:	mov    dh,0x7e
  4247c6:	cmp    DWORD PTR [ebx+ecx*8-0x10528c3e],0xd0cfaaa7
  4247d1:	test   al,0xc4
  4247d3:	mov    dl,0x87
  4247d5:	sti    
  4247d6:	sub    ebx,edx
  4247d8:	dec    ebp
  4247d9:	ror    edx,0x66
  4247dc:	dec    ebp
  4247dd:	int3   
  4247de:	and    DWORD PTR [esi],ebx
  4247e0:	int3   
  4247e1:	retf   0x34cf
  4247e4:	data16 and al,0xa7
  4247e7:	in     eax,dx
  4247e8:	arpl   si,cx
  4247ea:	cmp    BYTE PTR [edi],dh
  4247ec:	mov    esp,DWORD PTR [eax]
  4247ee:	sub    al,0x8
  4247f0:	cmp    bh,BYTE PTR [ebx+0x34]
  4247f3:	jmp    0xaf880ccb
  4247f8:	pop    ds
  4247f9:	clc    
  4247fa:	(bad)  
  4247fb:	imul   ebp,ebx,0xfd7699e8
  424801:	ffree  st(2)
  424803:	mov    DWORD PTR [esi],edi
  424805:	clc    
  424806:	imul   DWORD PTR [ecx+edx*1+0xa]
  42480a:	retf   0x8e21
  42480d:	cmp    cl,BYTE PTR [eax+0x7b8ec163]
  424813:	cmp    ecx,DWORD PTR [esi+0x1b]
  424816:	xchg   esi,eax
  424817:	clc    
  424818:	mov    ah,0x94
  42481a:	jb     0x424834
  42481c:	dec    esi
  42481d:	aaa    
  42481e:	xchg   BYTE PTR [esi],dh
  424820:	mov    DWORD PTR [edi+0x75dd6f0d],0xb4c96639
  42482a:	sbb    eax,0x2ea1a9a0
  42482f:	(bad)  
  424830:	fld    QWORD PTR [ebx-0x70212c74]
  424836:	fld    QWORD PTR [edx]
  424838:	(bad)  
  424839:	mov    dh,0x7
  42483b:	cmp    BYTE PTR [edx+0x2c],cl
  42483e:	out    dx,al
  42483f:	mov    ebp,0xe80001c1
  424844:	add    DWORD PTR [eax],eax
  424846:	add    BYTE PTR [ebp+eiz*2-0x69],bl
  42484a:	adc    al,0x75
  42484c:	push   edi
  42484d:	push   eax
  42484e:	xchg   edx,eax
  42484f:	sbb    esp,0xffffffe1
  424852:	ins    DWORD PTR es:[edi],dx
  424853:	cmp    edx,DWORD PTR [edx-0x34]
  424856:	sbb    dl,dl
  424858:	xor    DWORD PTR [edi-0x80],eax
  42485b:	(bad)  
  42485c:	aas    
  42485d:	mov    al,0xda
  42485f:	addr16 add eax,0xf82a055a
  424865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424866:	cmp    ebp,edi
  424868:	pop    ds
  424869:	ds retfw 
  42486c:	fsub   QWORD PTR [edi-0x28]
  42486f:	das    
  424870:	scas   eax,DWORD PTR es:[edi]
  424871:	pop    ss
  424872:	inc    ebp
  424873:	mov    es,WORD PTR ds:0xfe5719f1
  424879:	ins    BYTE PTR es:[edi],dx
  42487a:	arpl   WORD PTR [esi],si
  42487c:	xor    al,0x49
  42487e:	mov    al,0xc6
  424880:	test   BYTE PTR [ebx+0x5e0f0d47],dh
  424886:	aaa    
  424887:	mov    WORD PTR [edx],es
  424889:	push   ss
  42488a:	daa    
  42488b:	xchg   ebx,eax
  42488c:	test   al,0xb6
  42488e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42488f:	fldl2t 
  424891:	cmc    
  424892:	adc    BYTE PTR [ebx+0x73],0x2f
  424896:	int    0xb4
  424898:	pop    es
  424899:	inc    ebx
  42489a:	push   edi
  42489b:	mov    ecx,0x6f4c7fcb
  4248a0:	(bad)  
  4248a2:	test   ah,ch
  4248a4:	scas   eax,DWORD PTR es:[edi]
  4248a5:	adc    bl,BYTE PTR [eax-0x66]
  4248a8:	mov    ah,0x31
  4248aa:	js     0x424859
  4248ac:	call   0xbf9e:0x96325eb4
  4248b3:	cwde   
  4248b4:	je     0x4248a5
  4248b6:	sbb    eax,esp
  4248b8:	retf   
  4248b9:	dec    esp
  4248ba:	fcomp  QWORD PTR [edi]
  4248bd:	cs dec eax
  4248bf:	fld    DWORD PTR [esp+esi*2+0x4aaa240c]
  4248c6:	mov    bh,0x5e
  4248c8:	in     al,0x44
  4248ca:	pop    eax
  4248cb:	pop    edx
  4248cc:	shl    DWORD PTR [ecx+0x1],cl
  4248cf:	cmp    ch,BYTE PTR [ecx]
  4248d1:	in     eax,dx
  4248d2:	fidivr WORD PTR [eax+0x454851b2]
  4248d8:	and    ebx,DWORD PTR ds:0x784b3601
  4248de:	cwde   
  4248df:	jmp    0x4654f227
  4248e4:	jmp    0xea01b2d5
  4248e9:	out    dx,al
  4248ea:	pop    eax
  4248eb:	addr16 cs inc ecx
  4248ee:	jecxz  0x424891
  4248f0:	pusha  
  4248f1:	retf   
  4248f2:	repnz push edx
  4248f4:	add    bh,BYTE PTR [esi]
  4248f6:	xchg   BYTE PTR es:[edx+0x3e],ah
  4248fa:	mov    dh,0x59
  4248fc:	nop
  4248fd:	pop    es
  4248fe:	xchg   edx,eax
  4248ff:	aas    
  424900:	xchg   edx,eax
  424901:	sub    edi,ebp
  424903:	test   BYTE PTR ds:0xd37f73b4,ah
  424909:	mov    ah,0x41
  42490b:	jle    0x424949
  42490d:	sbb    BYTE PTR [ecx-0x3],bl
  424910:	leave  
  424911:	push   0x4
  424913:	push   esi
  424914:	sbb    edx,DWORD PTR [edi+0x710ffbf8]
  42491a:	mov    eax,ds:0xafcf3b6f
  42491f:	pop    edx
  424920:	xchg   edx,eax
  424921:	mov    bh,0x44
  424923:	mov    WORD PTR [ebp-0x80],cs
  424926:	xchg   esi,eax
  424927:	push   cs
  424928:	loop   0x4248cc
  42492a:	or     esp,DWORD PTR [edi+0x51]
  42492d:	xor    BYTE PTR [ebp+eiz*1-0x12b3ae96],dl
  424934:	or     eax,0xbd990807
  424939:	or     al,0xe8
  42493b:	mov    al,ds:0x78154a32
  424940:	push   ebx
  424941:	adc    al,0xfa
  424943:	mov    dh,0xcb
  424945:	push   esp
  424946:	enter  0xc450,0x7b
  42494a:	and    esi,DWORD PTR [ebp-0x2f]
  42494d:	xor    bl,dh
  42494f:	jo     0x4248f9
  424951:	dec    ebp
  424952:	lea    ebp,[ebx+0x5addafce]
  424958:	inc    ecx
  424959:	xor    dh,BYTE PTR [eax]
  42495b:	jo     0x42498c
  42495d:	xchg   esp,eax
  42495e:	add    ah,al
  424960:	call   FWORD PTR [edx-0x49]
  424963:	push   esp
  424964:	pop    edx
  424965:	sub    eax,0xd0f14f49
  42496a:	sbb    al,0x5c
  42496c:	mov    ecx,0xd554d557
  424971:	stc    
  424972:	popa   
  424973:	push   esp
  424974:	rcr    BYTE PTR [ebp-0x6ff41076],0x82
  42497b:	fld    QWORD PTR [eax+0x5]
  42497e:	add    BYTE PTR [ecx-0x7a],bl
  424981:	aaa    
  424982:	je     0x424920
  424984:	popf   
  424985:	test   eax,0x564e0bae
  42498a:	sub    BYTE PTR [ebx-0xb],cl
  42498d:	cwde   
  42498e:	dec    ecx
  42498f:	mov    ch,0x90
  424991:	mov    esi,0xa0f43b00
  424996:	jns    0x424977
  424998:	jp     0x424940
  42499a:	js     0x42492b
  42499c:	ja     0x4249d3
  42499e:	ret    0x5d07
  4249a1:	cmp    ah,BYTE PTR [eax+0xfba2569]
  4249a7:	inc    ebx
  4249a8:	fadd   DWORD PTR [esi]
  4249aa:	sar    BYTE PTR [ecx],cl
  4249ac:	int    0x3d
  4249ae:	and    BYTE PTR ds:0x4bdffe05,dh
  4249b4:	pop    es
  4249b5:	cmp    DWORD PTR [ebx-0x64410a77],0x57a621b7
  4249bf:	dec    edx
  4249c0:	scas   al,BYTE PTR es:[edi]
  4249c1:	jne    0x424a38
  4249c3:	ins    BYTE PTR es:[edi],dx
  4249c4:	mov    bh,0xdc
  4249c6:	aas    
  4249c7:	pop    esp
  4249c8:	dec    ebp
  4249c9:	jo     0x42496e
  4249cb:	push   es
  4249cc:	pop    edi
  4249cd:	sar    BYTE PTR [ebp+0x25],cl
  4249d0:	sbb    ebx,ebp
  4249d2:	push   0x22
  4249d4:	mov    ch,0x10
  4249d6:	mov    ah,0xaf
  4249d8:	popf   
  4249d9:	lods   al,BYTE PTR ds:[esi]
  4249da:	or     ah,BYTE PTR [esi+esi*4-0x34abe2fc]
  4249e1:	cmp    ch,cl
  4249e3:	fidivr WORD PTR [ecx]
  4249e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249e6:	xchg   edi,eax
  4249e7:	ss push cx
  4249ea:	sub    DWORD PTR [ecx],edi
  4249ec:	pushf  
  4249ed:	outs   dx,BYTE PTR ds:[esi]
  4249ee:	aad    0x66
  4249f0:	sbb    dl,cl
  4249f2:	push   edi
  4249f3:	hlt    
  4249f4:	stc    
  4249f5:	outs   dx,BYTE PTR ds:[esi]
  4249f6:	shr    DWORD PTR [edi-0x61aca022],0xe2
  4249fd:	jmp    0x6432:0x1e497fd4
  424a04:	es int3 
  424a06:	retf   
  424a07:	and    BYTE PTR [ebp+0x1d347407],bh
  424a0d:	push   ebx
  424a0e:	xor    BYTE PTR [eax-0x2f],bl
  424a11:	mov    edi,0x245f0f73
  424a16:	shr    BYTE PTR [ecx],cl
  424a18:	(bad)  
  424a19:	adc    esp,eax
  424a1b:	out    0x12,al
  424a1d:	int    0xd2
  424a1f:	lock pop ebp
  424a21:	jl     0x424a3c
  424a23:	or     eax,0xb128e661
  424a28:	mov    bl,0x1c
  424a2a:	and    al,0xba
  424a2c:	xchg   ecx,eax
  424a2d:	or     eax,0x4a463e0b
  424a32:	mov    ebp,0xc7ffbd7a
  424a37:	xchg   ecx,eax
  424a38:	adc    eax,0xe92f8f33
  424a3d:	sub    al,0xdf
  424a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a40:	ret    
  424a41:	add    DWORD PTR [eax],eax
  424a43:	call   0x95424a49
  424a48:	and    eax,0x16aea7c1
  424a4d:	je     0x424a00
  424a4f:	and    ecx,DWORD PTR [eax]
  424a51:	mov    ch,0x2b
  424a53:	dec    esi
  424a54:	dec    ebp
  424a55:	cmp    eax,0x77c0cc16
  424a5a:	adc    DWORD PTR [ebx-0x5a],0xffffff9a
  424a5e:	mov    bl,0x5b
  424a60:	xor    bl,BYTE PTR [eax-0x75]
  424a63:	jbe    0x424a42
  424a65:	das    
  424a66:	sub    DWORD PTR [ecx],ecx
  424a68:	imul   ecx,ecx,0xe99e7cf0
  424a6e:	pushf  
  424a6f:	mov    ch,BYTE PTR [ecx+0x4]
  424a72:	mov    bl,0xfa
  424a74:	repz int3 
  424a76:	lods   eax,DWORD PTR ds:[esi]
  424a77:	jnp    0x424a9c
  424a79:	add    DWORD PTR [edx-0x59],esp
  424a7c:	xchg   ebp,eax
  424a7d:	icebp  
  424a7e:	push   ecx
  424a7f:	push   ss
  424a80:	sub    DWORD PTR [ebx-0x3e],ecx
  424a83:	inc    ebp
  424a84:	(bad)  
  424a85:	fdiv   QWORD PTR [esi-0x6fbe9eef]
  424a8b:	push   eax
  424a8c:	imul   ebx,DWORD PTR [edi+0x10a952be],0xb446bd41
  424a96:	mov    ecx,0x76cb9cbf
  424a9b:	(bad)  
  424a9c:	in     al,0x6b
  424a9e:	and    esi,DWORD PTR [ebp-0x3]
  424aa1:	fdivr  QWORD PTR [esi+ebx*8]
  424aa4:	mov    cl,0xa7
  424aa6:	add    eax,0x191f0af9
  424aab:	out    dx,eax
  424aac:	in     eax,0x3a
  424aae:	fs mov esp,0xdc989e59
  424ab4:	mov    esp,DWORD PTR [eax+0x7a]
  424ab7:	mov    WORD PTR [edx+esi*4+0x75],cs
  424abb:	push   edx
  424abc:	cmp    al,0x11
  424abe:	jno    0x424b38
  424ac0:	pop    esp
  424ac1:	jns    0x424ac5
  424ac3:	fsubrp st(5),st
  424ac5:	fisttp QWORD PTR [ebp+0x3d]
  424ac8:	daa    
  424ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424aca:	jb     0x424b1a
  424acc:	outs   dx,BYTE PTR ds:[esi]
  424acd:	ror    DWORD PTR [edi+edx*1+0x74],1
  424ad1:	dec    esi
  424ad2:	fwait
  424ad3:	test   eax,0x85174e2f
  424ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ad9:	push   ecx
  424ada:	add    ch,BYTE PTR [edx+0x3d2267c2]
  424ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ae1:	push   ds
  424ae2:	ins    BYTE PTR es:[edi],dx
  424ae3:	in     al,dx
  424ae4:	lahf   
  424ae5:	aas    
  424ae6:	jo     0x424ab4
  424ae8:	push   edx
  424ae9:	cmp    al,0x1e
  424aeb:	fistp  DWORD PTR [esi+0x3131c36]
  424af1:	repnz fdiv DWORD PTR [ebx+0x6703e4db]
  424af8:	in     eax,dx
  424af9:	cdq    
  424afa:	and    dl,BYTE PTR ds:0x64d28008
  424b00:	cmp    BYTE PTR [eax+0x7d],0xe3
  424b04:	mov    ch,0xf1
  424b06:	(bad)  
  424b07:	(bad)  
  424b08:	ss xlat BYTE PTR ds:[ebx]
  424b0b:	(bad)  
  424b0c:	mov    ebx,0xda333883
  424b11:	and    BYTE PTR [esi],0x90
  424b14:	jle    0x424b80
  424b16:	mov    dl,0x1c
  424b18:	push   DWORD PTR [ebp+0x2e]
  424b1b:	xchg   edi,eax
  424b1c:	in     eax,dx
  424b1d:	push   ecx
  424b1e:	out    dx,al
  424b1f:	cli    
  424b20:	pop    ebx
  424b21:	jp     0x424b66
  424b23:	xchg   edi,eax
  424b24:	jbe    0x424b7a
  424b26:	xor    ebp,0x638e9a3e
  424b2c:	xchg   BYTE PTR [ebx],ah
  424b2e:	ins    BYTE PTR es:[edi],dx
  424b2f:	sahf   
  424b30:	aam    0x1f
  424b32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b33:	test   BYTE PTR [eax+0x69],ah
  424b36:	outs   dx,BYTE PTR ds:[esi]
  424b37:	xor    cl,BYTE PTR [ebx+eiz*1]
  424b3a:	sbb    bl,BYTE PTR [ebx-0x1c]
  424b3d:	mov    edi,0xe01c1c60
  424b42:	ret    
  424b43:	clc    
  424b44:	mov    dh,0x18
  424b46:	pop    ebp
  424b47:	xor    DWORD PTR [ecx+ebx*4-0x237e34df],0xffffffdf
  424b4f:	sbb    BYTE PTR [ebx-0x1b492155],al
  424b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b56:	enter  0x38cc,0xb
  424b5a:	es sbb edx,edx
  424b5d:	adc    DWORD PTR [eax+0x4ecefd74],eax
  424b63:	jae    0x424b96
  424b65:	sahf   
  424b66:	mov    al,0xa1
  424b68:	sbb    al,0x4f
  424b6a:	arpl   WORD PTR [edi+0x1a],ax
  424b6d:	cmp    eax,0x8447e93f
  424b72:	scas   al,BYTE PTR es:[edi]
  424b73:	out    dx,al
  424b74:	out    dx,al
  424b75:	fcomip st,st(7)
  424b77:	lahf   
  424b78:	(bad)  
  424b79:	jns    0x424be3
  424b7b:	sub    BYTE PTR [edi+eiz*1-0x67],0xb4
  424b80:	lods   eax,DWORD PTR ds:[esi]
  424b81:	mov    edi,0x245e49e8
  424b86:	xor    bl,BYTE PTR ds:0x9fc8a202
  424b8c:	loopne 0x424be9
  424b8e:	adc    BYTE PTR [ebx],0xe8
  424b91:	push   edi
  424b92:	adc    BYTE PTR [edi],bl
  424b94:	mov    cs,WORD PTR [ecx-0x43b05b0b]
  424b9a:	dec    eax
  424b9b:	pop    esp
  424b9c:	and    bl,bh
  424b9e:	shl    BYTE PTR [eax-0x5abfaac7],1
  424ba4:	ins    BYTE PTR es:[edi],dx
  424ba5:	xchg   ecx,eax
  424ba6:	xchg   ebx,eax
  424ba7:	into   
  424ba8:	jns    0x424b9b
  424baa:	cld    
  424bab:	sbb    DWORD PTR [ecx+ebx*8+0x1b],ebp
  424baf:	imul   ecx,eax,0xffffff96
  424bb2:	pop    ebx
  424bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bb4:	jmp    0xf020564e
  424bb9:	and    ebx,DWORD PTR [esi-0x2874ba52]
  424bbf:	mov    eax,0xcbae8884
  424bc4:	(bad)  
  424bc5:	jns    0x424c2a
  424bc7:	in     al,0x91
  424bc9:	(bad)  
  424bca:	popa   
  424bcb:	xchg   ch,al
  424bcd:	(bad)  
  424bce:	shl    DWORD PTR [esi-0x18],cl
  424bd1:	lea    edi,[ecx]
  424bd3:	pop    ecx
  424bd4:	sub    ebx,edi
  424bd6:	push   eax
  424bd7:	push   ebx
  424bd8:	and    eax,0x2f6814c
  424bdd:	mov    al,BYTE PTR [ebx]
  424bdf:	and    edx,edx
  424be1:	push   es
  424be2:	ins    DWORD PTR es:[edi],dx
  424be3:	pop    ecx
  424be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424be5:	loope  0x424ba3
  424be7:	mov    BYTE PTR [ebx-0x15],bh
  424bea:	xchg   ecx,eax
  424beb:	rol    DWORD PTR [ecx],0x35
  424bee:	fwait
  424bef:	mov    WORD PTR [edi+0x6897f522],?
  424bf5:	fild   DWORD PTR [ecx+ebx*2+0x3c8b7544]
  424bfc:	cmp    BYTE PTR [eax],0x7f
  424bff:	cli    
  424c00:	call   0xc54c8d8d
  424c05:	sub    ch,BYTE PTR [ebx-0x3f57db82]
  424c0b:	imul   ebp,DWORD PTR [esi+ebx*4+0x39d9d4ed],0xffffff87
  424c13:	adc    al,0x7a
  424c15:	push   ds
  424c16:	std    
  424c17:	clc    
  424c18:	adc    eax,0x4b47aab3
  424c1d:	adc    eax,0xa2866395
  424c22:	pop    edi
  424c23:	shr    DWORD PTR [edi-0x784a2b81],cl
  424c29:	xchg   dh,dl
  424c2b:	and    al,0x74
  424c2d:	(bad)  
  424c2e:	std    
  424c2f:	or     al,0xc2
  424c31:	xlat   BYTE PTR ds:[ebx]
  424c32:	and    bl,bh
  424c34:	aaa    
  424c35:	std    
  424c36:	out    dx,al
  424c37:	test   ecx,ebx
  424c39:	inc    edx
  424c3a:	ins    DWORD PTR es:[edi],dx
  424c3b:	in     al,dx
  424c3c:	popf   
  424c3d:	das    
  424c3e:	pop    ebx
  424c3f:	(bad)  
  424c40:	lds    eax,FWORD PTR [ecx]
  424c42:	add    al,ch
  424c44:	add    DWORD PTR [eax],eax
  424c46:	add    BYTE PTR [ebx-0x5c],cl
  424c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c4a:	xchg   BYTE PTR [edx+0x45ee38d4],ch
  424c50:	add    ebx,DWORD PTR [eax+0x245e1cdf]
  424c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c57:	push   eax
  424c58:	add    al,0x46
  424c5a:	mov    cl,0x80
  424c5c:	xor    eax,0x586874c0
  424c61:	or     ax,0x31db
  424c65:	or     esp,DWORD PTR [esi+0x46d953f3]
  424c6b:	xor    eax,edx
  424c6d:	push   ebp
  424c6e:	call   0x27e:0x771bcde7
  424c75:	mov    WORD PTR [ebx],ds
  424c77:	pop    eax
  424c78:	je     0x424c3b
  424c7a:	dec    ebx
  424c7b:	and    DWORD PTR [ecx-0x1aebfb2e],esp
  424c81:	sbb    bh,BYTE PTR [ebx]
  424c83:	add    al,0x19
  424c85:	adc    al,0x40
  424c87:	add    DWORD PTR [eax],0xffffff84
  424c8a:	mov    bh,0xe6
  424c8c:	mov    esp,0x893ec022
  424c91:	cmp    DWORD PTR [esi-0x39],0xffffffac
  424c95:	outs   dx,DWORD PTR ds:[esi]
  424c96:	icebp  
  424c97:	test   BYTE PTR [edx-0x4b],dh
  424c9a:	stos   BYTE PTR es:[edi],al
  424c9b:	xchg   edi,eax
  424c9c:	sub    eax,0x99e6d473
  424ca1:	add    BYTE PTR [edi],dl
  424ca3:	push   ecx
  424ca4:	jae    0x424c78
  424ca6:	jmp    0x424c54
  424ca8:	inc    edi
  424caa:	stc    
  424cab:	loopne 0x424ce6
  424cad:	xlat   BYTE PTR ds:[ebx]
  424cae:	int3   
  424caf:	fcmovnb st,st(6)
  424cb1:	fisttp WORD PTR [ebx]
  424cb3:	push   es
  424cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cb5:	jmp    0x191873b7
  424cba:	mul    DWORD PTR [esp+edi*2]
  424cbd:	in     eax,dx
  424cbe:	fmul   st,st(6)
  424cc0:	sahf   
  424cc1:	sub    BYTE PTR [bx+si],bl
  424cc4:	inc    ecx
  424cc5:	pop    esi
  424cc6:	das    
  424cc7:	sub    ecx,0x37
  424cca:	push   ebx
  424ccb:	and    eax,0xeac73baf
  424cd0:	mov    esi,0x3bd11373
  424cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cd6:	dec    edx
  424cd7:	leave  
  424cd8:	add    al,0x6e
  424cda:	mov    esp,0x4162c575
  424cdf:	rcr    DWORD PTR [esi-0x4b968ec9],1
  424ce5:	mov    BYTE PTR [ebx-0x3b],ah
  424ce8:	xchg   eax,ebp
  424cea:	ja     0x424cdf
  424cec:	test   DWORD PTR [ecx-0x3b],0x50ac2961
  424cf3:	sahf   
  424cf4:	inc    ecx
  424cf5:	adc    ecx,eax
  424cf7:	clc    
  424cf8:	xchg   ebp,eax
  424cf9:	inc    eax
  424cfa:	aam    0x3d
  424cfc:	lahf   
  424cfd:	sbb    al,0xc4
  424cff:	in     eax,dx
  424d00:	(bad)  
  424d02:	xchg   BYTE PTR [esi+ecx*1-0x6ca95fcd],bl
  424d09:	stos   BYTE PTR es:[edi],al
  424d0a:	idiv   DWORD PTR [eax-0x3645544]
  424d10:	imul   eax,DWORD PTR [edx-0x1e887dbe],0xb05ab42b
  424d1a:	mov    ds:0x4c7d2d68,eax
  424d1f:	and    al,0x9b
  424d21:	pop    edi
  424d22:	or     eax,0x8977ef8f
  424d27:	in     al,0x3c
  424d29:	jg     0x424cbc
  424d2b:	pop    esi
  424d2c:	test   esi,eax
  424d2e:	mov    bh,0x8a
  424d30:	jne    0x424cee
  424d32:	sahf   
  424d33:	sub    al,0xef
  424d35:	dec    ebx
  424d36:	fwait
  424d37:	cmc    
  424d38:	int3   
  424d39:	ror    BYTE PTR [eax+0x4a],cl
  424d3c:	sti    
  424d3d:	dec    edx
  424d3e:	(bad)  
  424d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d40:	jb     0x424d4c
  424d42:	fcomp  DWORD PTR [edx]
  424d44:	sub    eax,0x6bca714
  424d49:	jae    0x424ce8
  424d4b:	les    ebp,FWORD PTR [eax+ecx*4-0x57]
  424d4f:	cmp    DWORD PTR [esi-0x41],0x7b
  424d53:	xchg   esi,eax
  424d54:	repz adc BYTE PTR [esi-0x56b1aa5e],ah
  424d5b:	or     ah,BYTE PTR [esi-0x78570744]
  424d61:	cmp    eax,0x55ef70fb
  424d66:	cmp    ecx,DWORD PTR [ecx+0x5b]
  424d69:	test   DWORD PTR [ebp+0x6b362fad],edx
  424d6f:	add    BYTE PTR [ebx+0x16],al
  424d72:	jmp    0x424d68
  424d74:	xlat   BYTE PTR ds:[ebx]
  424d75:	ror    BYTE PTR [ecx],cl
  424d77:	repnz stc 
  424d79:	scas   al,BYTE PTR es:[edi]
  424d7a:	ja     0x424dab
  424d7c:	stos   BYTE PTR es:[edi],al
  424d7d:	lahf   
  424d7e:	push   esp
  424d7f:	jae    0x424d06
  424d81:	and    BYTE PTR [edi+0x20],ah
  424d84:	sub    dh,al
  424d86:	or     esi,eax
  424d88:	fnstenv [esi+ecx*8-0x35cdcb7]
  424d8f:	pop    ecx
  424d90:	cmp    edi,0xe0499a7
  424d96:	jecxz  0x424dec
  424d98:	mov    ds:0x870acf81,eax
  424d9d:	push   0xcae41c1b
  424da2:	in     eax,0x80
  424da4:	jge    0x424d90
  424da6:	mov    ecx,0x181fe3f3
  424dab:	sub    DWORD PTR [ecx+eiz*8],0x6d9106ff
  424db2:	and    al,0xe8
  424db4:	test   ch,0xd
  424db7:	xchg   ebx,eax
  424db8:	lock inc edx
  424dba:	and    ebp,DWORD PTR [edx+eax*8]
  424dbd:	mov    ds:0xa5f1a7af,eax
  424dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424dc3:	sbb    bh,BYTE PTR [ebx-0x15e7d82]
  424dc9:	xor    esi,DWORD PTR [esi]
  424dcb:	add    eax,0xbf37c110
  424dd0:	dec    ecx
  424dd1:	loope  0x424df9
  424dd3:	fidiv  WORD PTR [esi]
  424dd5:	dec    edx
  424dd6:	or     cl,dh
  424dd8:	or     DWORD PTR [ecx],0x12
  424ddb:	or     eax,0xd7eca413
  424de0:	popa   
  424de1:	test   BYTE PTR [ebx-0xf],bh
  424de4:	push   es
  424de5:	push   edx
  424de6:	ss in  eax,dx
  424de8:	push   ss
  424de9:	xchg   edx,eax
  424dea:	sbb    ebx,eax
  424dec:	outs   dx,BYTE PTR ds:[esi]
  424ded:	in     al,0x1d
  424def:	and    al,0xe
  424df1:	push   eax
  424df2:	mov    DWORD PTR [ebx],edi
  424df4:	and    BYTE PTR [ecx+0x68],ah
  424df7:	and    dl,BYTE PTR [eax+0x223d2812]
  424dfd:	push   ds
  424dfe:	pop    ebp
  424dff:	fld    TBYTE PTR [edx+0xb]
  424e02:	mov    DWORD PTR [edx],ebx
  424e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e05:	pop    ecx
  424e06:	clc    
  424e07:	mov    WORD PTR [ebx],ss
  424e09:	int3   
  424e0a:	cmc    
  424e0b:	mov    dl,0xfd
  424e0d:	scas   al,BYTE PTR es:[edi]
  424e0e:	or     edx,edi
  424e10:	ror    BYTE PTR [ebx+0x51],cl
  424e13:	adc    eax,0x244686c7
  424e18:	inc    edi
  424e19:	les    ebx,FWORD PTR [esi+0x13]
  424e1c:	inc    edx
  424e1d:	icebp  
  424e1e:	pop    esi
  424e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e20:	(bad)  [ecx-0x50]
  424e23:	or     dl,BYTE PTR [eax]
  424e25:	outs   dx,BYTE PTR ds:[esi]
  424e26:	push   esi
  424e27:	pop    ebx
  424e28:	cs mov cl,0x54
  424e2b:	test   eax,0x42cbb51f
  424e30:	dec    edi
  424e31:	nop
  424e32:	int3   
  424e33:	popf   
  424e34:	fistp  WORD PTR [esi-0x31]
  424e37:	aad    0xa
  424e39:	pop    esi
  424e3a:	jns    0x424dd8
  424e3c:	clc    
  424e3d:	xchg   edx,eax
  424e3e:	or     DWORD PTR [ebp-0x39],esi
  424e41:	add    DWORD PTR [eax],eax
  424e43:	call   0x4f424e49
  424e48:	sub    edx,DWORD PTR [ebx-0xcbffc5e]
  424e4e:	add    edx,ebp
  424e50:	xor    eax,0x1c3de92d
  424e55:	repnz dec edx
  424e57:	bound  edx,QWORD PTR [edx]
  424e59:	jmp    0xbf10263a
  424e5e:	pop    eax
  424e5f:	sub    eax,0xc7eff603
  424e64:	out    dx,eax
  424e65:	pusha  
  424e66:	cli    
  424e67:	mov    DWORD PTR [edx+0x41],eax
  424e6a:	call   0xa6db:0xce5cc840
  424e71:	loop   0x424e5a
  424e73:	xor    dl,dl
  424e75:	dec    ebp
  424e76:	shl    BYTE PTR [ecx],1
  424e78:	jno    0x424eef
  424e7a:	rcr    BYTE PTR ds:0x9596aa39,0xdb
  424e81:	push   esp
  424e82:	cli    
  424e83:	les    ebx,FWORD PTR [ecx-0x2e]
  424e86:	data16 je 0x424e24
  424e89:	pop    esi
  424e8a:	and    edx,DWORD PTR [esi+0x2b]
  424e8d:	mov    bl,0x4c
  424e8f:	inc    esi
  424e90:	lock cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  424e93:	or     ebx,ebx
  424e95:	daa    
  424e96:	shl    BYTE PTR [esp+ecx*4],0x30
  424e9a:	and    BYTE PTR [edi-0x6e5fe3f4],ah
  424ea0:	lock retf 0x394e
  424ea4:	mov    esi,0x672a3c3d
  424ea9:	loop   0x424eb2
  424eab:	push   eax
  424eac:	jnp    0x424e3e
  424eae:	(bad)  
  424eaf:	or     eax,0xf5c40ed2
  424eb4:	and    DWORD PTR [edi-0x56],ebx
  424eb7:	jmp    0x424eee
  424eb9:	pop    edx
  424eba:	je     0x424f25
  424ebc:	mov    al,ds:0x3043f52d
  424ec1:	shl    dl,0x38
  424ec4:	(bad)  
  424ec5:	fadd   DWORD PTR [eax-0x18]
  424ec8:	mov    dh,0x13
  424eca:	fdivr  QWORD PTR gs:[ecx]
  424ecd:	and    ebp,ebp
  424ecf:	imul   ecx,DWORD PTR [edi],0x49def79b
  424ed5:	shr    BYTE PTR [ebp-0x15],0x3e
  424ed9:	lds    ebp,FWORD PTR [eax+0xa]
  424edc:	jmp    0x50903f95
  424ee1:	pop    ebp
  424ee2:	clc    
  424ee3:	inc    edi
  424ee4:	xchg   edi,eax
  424ee5:	cdq    
  424ee6:	js     0x424f42
  424ee8:	outs   dx,BYTE PTR ds:[esi]
  424ee9:	int3   
  424eea:	pop    ecx
  424eeb:	add    BYTE PTR [eax+eax*2],cl
  424eee:	leave  
  424eef:	bswap  edx
  424ef1:	(bad)  
  424ef2:	sbb    esi,esi
  424ef4:	cdq    
  424ef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ef6:	mov    ds:0x8a70384c,al
  424efb:	inc    ebx
  424efc:	push   0x40
  424efe:	mov    eax,ds:0x6f238d3d
  424f03:	dec    ebp
  424f04:	sub    eax,0xdf771ee7
  424f09:	leave  
  424f0a:	jno    0x424ec9
  424f0c:	test   DWORD PTR [esi+0x303b89ff],edi
  424f12:	addr16 enter 0x7a6f,0xfc
  424f17:	pusha  
  424f18:	fnstcw WORD PTR [edi+0x25]
  424f1b:	cdq    
  424f1c:	cli    
  424f1d:	cmp    edx,DWORD PTR [esi]
  424f1f:	in     al,0x92
  424f21:	dec    edi
  424f22:	shr    BYTE PTR [esp+eax*4-0x6],cl
  424f26:	clc    
  424f27:	out    dx,eax
  424f28:	pop    esi
  424f29:	les    ecx,FWORD PTR [esi+0xb]
  424f2c:	dec    ebx
  424f2d:	push   ebp
  424f2e:	sbb    dh,dh
  424f30:	sbb    DWORD PTR [ebp-0x2d87a611],0xffffffa8
  424f37:	cdq    
  424f38:	pushf  
  424f39:	push   esi
  424f3a:	lods   al,BYTE PTR ds:[esi]
  424f3b:	pushf  
  424f3c:	int3   
  424f3d:	jo     0x424f31
  424f3f:	pop    esi
  424f40:	sti    
  424f41:	xchg   edx,eax
  424f42:	mov    bl,0xd0
  424f44:	push   ebx
  424f45:	jmp    0x424ed7
  424f47:	xchg   BYTE PTR [ebp-0x16b6d3e1],bl
  424f4d:	je     0x424f63
  424f4f:	jae    0x424f22
  424f51:	mov    edi,esp
  424f53:	test   ebx,edi
  424f55:	dec    ebp
  424f56:	(bad)  
  424f57:	jmp    0x424fa3
  424f59:	and    BYTE PTR [esi-0x64],dl
  424f5c:	mov    ebp,0x2eb62ec7
  424f61:	daa    
  424f62:	mov    al,ds:0x7f5a598f
  424f67:	xchg   BYTE PTR [edi-0x69],dl
  424f6a:	xor    eax,0x565e634c
  424f6f:	retf   
  424f70:	cwde   
  424f71:	push   0x728d70e5
  424f76:	mov    eax,ds:0x2fa33e19
  424f7b:	cld    
  424f7c:	iret   
  424f7d:	retf   
  424f7e:	fwait
  424f7f:	mov    edx,0xb17096b0
  424f84:	pop    edi
  424f85:	(bad)
  424f89:	xor    DWORD PTR [ebx],ebx
  424f8b:	icebp  
  424f8c:	sub    BYTE PTR [eax+0x29],dl
  424f8f:	sbb    edi,DWORD PTR [edi]
  424f91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f92:	fisub  WORD PTR [ecx]
  424f94:	mov    al,ds:0xa00709fa
  424f99:	(bad)
  424f9c:	enter  0xb698,0xc5
  424fa0:	jge    0x424f90
  424fa2:	cli    
  424fa3:	or     esp,DWORD PTR [ebx]
  424fa5:	adc    eax,0x51f02bb9
  424faa:	retf   
  424fab:	sti    
  424fac:	push   edi
  424fad:	loop   0x424fbe
  424faf:	int    0x5
  424fb1:	into   
  424fb2:	call   0xac3c37fa
  424fb7:	sti    
  424fb8:	cmp    esp,0xc1e4b463
  424fbe:	mov    al,0x21
  424fc0:	xor    eax,edi
  424fc2:	mov    al,0x1f
  424fc4:	lahf   
  424fc5:	rcr    BYTE PTR [ebp+0x2711ad8c],cl
  424fcb:	push   0x40
  424fcd:	mov    DWORD PTR [ecx],edx
  424fcf:	scas   eax,DWORD PTR es:[edi]
  424fd0:	mov    ah,BYTE PTR [ebp-0x77]
  424fd3:	stos   BYTE PTR es:[edi],al
  424fd4:	bound  edx,QWORD PTR [ecx+0x2c]
  424fd7:	push   0x65
  424fd9:	or     DWORD PTR [esi+eiz*2-0x73],edi
  424fdd:	sahf   
  424fde:	jecxz  0x425050
  424fe0:	and    edx,ebp
  424fe2:	pop    eax
  424fe3:	push   esp
  424fe4:	bound  eax,QWORD PTR [edi-0x7e2eac96]
  424fea:	xchg   esp,eax
  424feb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fec:	pop    esp
  424fed:	cmp    bl,BYTE PTR [edi]
  424fef:	aam    0x6e
  424ff1:	xchg   ecx,eax
  424ff2:	inc    ebx
  424ff3:	ins    DWORD PTR es:[edi],dx
  424ff4:	and    DWORD PTR [esi],ecx
  424ff6:	je     0x425075
  424ff8:	sbb    ebx,DWORD PTR [ecx]
  424ffa:	(bad)  
  424ffb:	xor    edx,DWORD PTR [edx-0x63904fb0]
  425001:	push   ebx
  425002:	imul   edx,DWORD PTR [ecx],0xfffffffa
  425005:	test   eax,0x54fc142a
  42500a:	or     BYTE PTR [edx],dh
  42500c:	mov    eax,ds:0x375617fb
  425011:	leave  
  425012:	add    cl,dh
  425014:	mov    esp,DWORD PTR [esi-0x500ad41b]
  42501a:	mul    DWORD PTR [edi*1-0x6a47376]
  425021:	inc    esp
  425022:	jp     0x42503b
  425024:	mov    bl,0xc7
  425026:	or     al,0x7d
  425028:	ja     0x425041
  42502a:	scas   al,BYTE PTR es:[edi]
  42502b:	lods   eax,DWORD PTR ds:[esi]
  42502c:	inc    esi
  42502d:	inc    edx
  42502e:	aaa    
  42502f:	data16 jl 0x425012
  425032:	mov    ebx,0xfd7fbffa
  425037:	ins    BYTE PTR es:[edi],dx
  425038:	(bad)
  42503b:	das    
  42503c:	mov    dh,0x1b
  42503e:	je     0x42509d
  425040:	leave  
  425041:	add    DWORD PTR [eax],eax
  425043:	call   0xcf425049
  425048:	or     DWORD PTR [edi-0x1],esi
  42504b:	ficomp WORD PTR [ecx+0x6b]
  42504e:	mov    esp,0x518229d7
  425053:	lea    ebx,[ecx-0x71]
  425056:	mov    esp,0x2f4bb055
  42505b:	data16 aaa 
  42505d:	pop    ebp
  42505e:	mov    ds:0xe546b33b,eax
  425063:	dec    ebx
  425064:	adc    ebp,DWORD PTR [ebx]
  425066:	cmc    
  425067:	mov    DWORD PTR [eax],ebp
  425069:	in     al,dx
  42506a:	and    dl,bh
  42506c:	push   ds
  42506d:	or     esi,DWORD PTR [edx-0x47]
  425070:	rcl    BYTE PTR [ebp+ecx*4-0x35ae5402],cl
  425077:	xchg   esp,eax
  425078:	and    cl,BYTE PTR [ecx+0x4f]
  42507b:	dec    edx
  42507c:	jne    0x425042
  42507e:	arpl   WORD PTR [edx+0x24a30350],sp
  425084:	int3   
  425085:	dec    ebx
  425086:	and    dl,ch
  425088:	(bad)  
  425089:	xchg   edx,eax
  42508a:	and    esp,DWORD PTR [eax]
  42508c:	mov    dh,0xf4
  42508e:	and    al,0x5
  425090:	jmp    0xb0df71bc
  425095:	adc    cl,bl
  425097:	jae    0x425077
  425099:	pop    ss
  42509a:	cdq    
  42509b:	adc    esi,DWORD PTR [ecx+eiz*1-0x38674a2e]
  4250a2:	pop    ecx
  4250a3:	js     0x42511a
  4250a5:	inc    esi
  4250a6:	out    dx,al
  4250a7:	ret    
  4250a8:	push   ebp
  4250a9:	and    ah,ah
  4250ab:	cli    
  4250ac:	jecxz  0x42509b
  4250ae:	bsf    ebp,DWORD PTR [edi-0x33738897]
  4250b5:	outs   dx,DWORD PTR ds:[esi]
  4250b6:	addr16 ja 0x425071
  4250b9:	pop    ds
  4250ba:	daa    
  4250bb:	dec    edi
  4250bc:	lock pop ebp
  4250be:	xchg   esi,eax
  4250bf:	in     eax,0x38
  4250c1:	imul   edx,DWORD PTR [esi+esi*8-0x2c13005c],0xfffffffe
  4250c9:	sub    DWORD PTR [eax],esp
  4250cb:	mov    ds:0x67a4d190,al
  4250d0:	jae    0x425070
  4250d2:	xlat   BYTE PTR gs:[ebx]
  4250d4:	and    al,0xb0
  4250d6:	push   edi
  4250d7:	push   ebx
  4250d8:	mov    WORD PTR [esi+esi*4-0x45],?
  4250dc:	push   0xb
  4250de:	jbe    0x425153
  4250e0:	adc    ecx,ebx
  4250e2:	pop    eax
  4250e3:	pop    edi
  4250e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250e5:	daa    
  4250e6:	rcr    DWORD PTR ds:[edx+0x7c],1
  4250ea:	or     ecx,DWORD PTR [esi+eiz*1]
  4250ed:	rcl    BYTE PTR [eax+0x2b],0x7f
  4250f1:	push   eax
  4250f2:	pusha  
  4250f3:	data16 clc 
  4250f5:	xor    al,0x87
  4250f7:	or     bl,BYTE PTR [ebx-0x45]
  4250fa:	ret    0x5c73
  4250fd:	mov    WORD PTR [ebp+0x66],?
  425100:	ret    
  425101:	adc    edi,esi
  425103:	pop    eax
  425104:	sar    edi,cl
  425106:	ret    0xdf74
  425109:	add    ebp,DWORD PTR [eax+0x30e5cd01]
  42510f:	adc    DWORD PTR [ebp+0x20],ecx
  425112:	sub    al,0x8f
  425114:	jae    0x42517f
  425116:	sbb    DWORD PTR [eax+edx*2+0x6fc59695],ecx
  42511d:	add    eax,0xe446a32e
  425122:	add    eax,0x48b1fc42
  425127:	std    
  425128:	loop   0x42516d
  42512a:	adc    al,0xa1
  42512c:	test   DWORD PTR [edi+esi*8-0x1e10ac45],edi
  425133:	or     ecx,DWORD PTR [edi-0x5fff8d58]
  425139:	sti    
  42513a:	je     0x4250c2
  42513c:	sub    cl,BYTE PTR [ecx]
  42513e:	out    0xa,eax
  425140:	ror    DWORD PTR [ebp+ebp*8-0x53d03c2e],1
  425147:	enter  0x5a9c,0xdd
  42514b:	or     edi,DWORD PTR [ecx+0x66]
  42514e:	jne    0x42519f
  425150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425151:	pop    esi
  425152:	mov    bh,0xa0
  425154:	enter  0x91d1,0x11
  425158:	out    dx,al
  425159:	xchg   ebx,eax
  42515a:	dec    eax
  42515b:	mov    bh,0x7d
  42515d:	scas   al,BYTE PTR es:[edi]
  42515e:	out    dx,al
  42515f:	sahf   
  425160:	xor    dh,ah
  425162:	cs repnz retf 
  425165:	sbb    al,0xb
  425167:	or     esp,DWORD PTR [ecx+edi*2+0x78d7bf4f]
  42516e:	fist   WORD PTR [ecx]
  425170:	sbb    cl,ch
  425172:	out    dx,eax
  425173:	and    edx,edx
  425175:	int    0x26
  425177:	dec    BYTE PTR [edi+0xf]
  42517a:	xlat   BYTE PTR ds:[ebx]
  42517b:	push   es
  42517c:	cmp    BYTE PTR [eax+0x320abe73],al
  425182:	add    BYTE PTR [ebp+eax*2+0x34f969fe],al
  425189:	push   ss
  42518a:	or     DWORD PTR [ebx-0x3d773853],eax
  425190:	mov    cl,0x85
  425192:	mov    ecx,DWORD PTR cs:[esi+eax*1]
  425196:	lahf   
  425197:	lahf   
  425198:	dec    eax
  425199:	sbb    al,ch
  42519b:	mov    eax,ds:0xd4991ff6
  4251a0:	data16 in al,dx
  4251a2:	cld    
  4251a3:	dec    ebx
  4251a4:	leave  
  4251a5:	in     al,0xaf
  4251a7:	mov    cl,0x60
  4251a9:	pop    edi
  4251aa:	rol    DWORD PTR [esp+edi*4],cl
  4251ad:	out    0x4d,al
  4251af:	addr16 pop ss
  4251b1:	pop    es
  4251b2:	mov    eax,0xeca6c31
  4251b7:	sub    DWORD PTR [ebx],ebp
  4251b9:	ret    
  4251ba:	loope  0x4251fa
  4251bc:	and    BYTE PTR [edx-0x17c3a2a5],cl
  4251c2:	and    DWORD PTR [ebx-0x33ca321e],esi
  4251c8:	call   0xc7d1d2a3
  4251cd:	ret    
  4251ce:	scas   al,BYTE PTR es:[edi]
  4251cf:	lahf   
  4251d0:	nop
  4251d1:	repz mov bl,0xa9
  4251d4:	push   cs
  4251d5:	pminsw mm1,QWORD PTR [edx]
  4251d8:	lds    eax,FWORD PTR [edx+eiz*8+0x750f67b6]
  4251df:	lods   eax,DWORD PTR ds:[esi]
  4251e0:	in     al,dx
  4251e1:	scas   eax,DWORD PTR es:[edi]
  4251e2:	mov    bh,BYTE PTR ds:0x5b6a77b1
  4251e8:	push   0xff20bf20
  4251ed:	or     eax,0x9977de08
  4251f2:	cmp    BYTE PTR [eax-0x18],bl
  4251f5:	addr16 push esp
  4251f7:	test   al,0xd3
  4251f9:	pop    esp
  4251fa:	enter  0xe025,0x92
  4251fe:	mov    dh,0xb6
  425200:	push   esp
  425201:	adc    eax,0x72dc0515
  425206:	mov    eax,ds:0x77eace52
  42520b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42520c:	jmp    0xcc73:0x66b1714e
  425213:	and    BYTE PTR [eax],bl
  425215:	adc    bh,bl
  425217:	sbb    eax,0x91a54851
  42521c:	mov    ch,0x52
  42521e:	into   
  42521f:	out    dx,al
  425220:	outs   dx,DWORD PTR ds:[esi]
  425221:	out    0xcd,eax
  425223:	push   ecx
  425224:	xchg   esi,eax
  425225:	call   0x3891:0x5c66a6b7
  42522c:	(bad)  [eax-0x338a98d8]
  425232:	inc    eax
  425233:	fdivp  st(1),st
  425235:	out    dx,eax
  425236:	ja     0x425288
  425238:	xor    ebx,DWORD PTR [eax+0x52]
  42523b:	xor    ah,0x6a
  42523e:	aad    0x45
  425240:	retf   
  425241:	add    DWORD PTR [eax],eax
  425243:	call   0x21425249
  425248:	or     cl,ah
  42524a:	sti    
  42524b:	push   cs
  42524c:	pop    ecx
  42524d:	daa    
  42524e:	push   ss
  42524f:	icebp  
  425250:	stos   DWORD PTR es:[edi],eax
  425251:	jle    0x4252d1
  425253:	sub    BYTE PTR [ecx+0xf46981e],bl
  425259:	dec    esi
  42525a:	dec    ebx
  42525b:	sub    eax,0x2f7846f7
  425260:	mov    cl,0x40
  425262:	sub    bl,ah
  425264:	cmp    eax,ebx
  425266:	lods   eax,DWORD PTR ds:[esi]
  425267:	adc    eax,0x93d7ddea
  42526c:	push   ebp
  42526d:	lods   eax,DWORD PTR ds:[esi]
  42526e:	cmp    BYTE PTR [esi-0x22fd06d4],0xae
  425275:	(bad)  
  425277:	jb     0x4252cf
  425279:	fnsave [ebp+0x2d]
  42527c:	sbb    ebp,DWORD PTR [ecx+0x724b3637]
  425282:	outs   dx,DWORD PTR ds:[esi]
  425283:	push   edi
  425284:	adc    al,0xe6
  425286:	pop    ss
  425287:	adc    eax,0x52b6fb27
  42528c:	pop    esi
  42528d:	cmove  ebp,DWORD PTR [eax-0x5f]
  425291:	pop    edi
  425292:	les    ecx,FWORD PTR [bp+si-0x32]
  425296:	into   
  425297:	mov    al,BYTE PTR [ebx+0x1a]
  42529a:	or     BYTE PTR [ecx-0x53],0xdc
  42529e:	jl     0x425319
  4252a0:	rol    BYTE PTR [ebp+0x6d8705ef],1
  4252a6:	scas   al,BYTE PTR es:[edi]
  4252a7:	stos   BYTE PTR es:[edi],al
  4252a8:	int3   
  4252a9:	(bad)  
  4252ab:	lods   al,BYTE PTR ds:[esi]
  4252ac:	mov    ebp,0x1ff469b6
  4252b1:	push   ss
  4252b2:	mov    cl,0x22
  4252b4:	mov    edi,0x67169302
  4252b9:	rcl    bh,cl
  4252bb:	push   ebx
  4252bc:	mov    WORD PTR [ebx],?
  4252be:	ret    
  4252bf:	pop    edi
  4252c0:	dec    ebp
  4252c1:	mov    cl,0xbd
  4252c3:	push   ebp
  4252c4:	xor    al,ch
  4252c6:	xchg   DWORD PTR [ecx+ecx*8-0x1d83cdd7],eax
  4252cd:	add    DWORD PTR [edi],esi
  4252cf:	into   
  4252d0:	jl     0x425346
  4252d2:	stos   DWORD PTR es:[edi],eax
  4252d3:	dec    ebx
  4252d4:	xchg   esp,eax
  4252d5:	data16 or al,BYTE PTR [eax]
  4252d8:	or     eax,ecx
  4252da:	cmp    al,0x3
  4252dc:	add    al,BYTE PTR [esi-0x29]
  4252df:	fld    QWORD PTR fs:[ebx-0x4da0efab]
  4252e6:	rcr    esi,cl
  4252e8:	sbb    BYTE PTR [ebx],0xf0
  4252eb:	test   eax,0x2042f7aa
  4252f0:	push   esi
  4252f1:	out    dx,eax
  4252f2:	div    DWORD PTR ds:0xc5f405ae
  4252f8:	xlat   BYTE PTR ds:[ebx]
  4252f9:	inc    edi
  4252fa:	dec    ebx
  4252fb:	dec    esp
  4252fc:	inc    esp
  4252fd:	xor    bl,BYTE PTR [ecx+0x72a2095a]
  425303:	mov    edx,0xa2b4caad
  425308:	arpl   WORD PTR [ebp-0x16c5bfbc],dx
  42530e:	push   edx
  42530f:	jle    0x4252ef
  425311:	int3   
  425312:	sar    esi,0x90
  425315:	xchg   edx,eax
  425316:	mov    eax,ds:0x44a70198
  42531b:	pop    esp
  42531c:	inc    ebp
  42531d:	jmp    0x73245ee4
  425322:	jne    0x425378
  425324:	jmp    FWORD PTR [esi]
  425326:	inc    ebp
  425327:	loopne 0x42538b
  425329:	and    edx,esi
  42532b:	xor    BYTE PTR [ecx],cl
  42532d:	or     dl,BYTE PTR [ebx-0x57]
  425330:	das    
  425331:	or     eax,0xbe391c56
  425336:	lahf   
  425337:	popa   
  425338:	sub    ah,BYTE PTR [ebx-0x7a]
  42533b:	repnz jmp 0x558:0x61d5b578
  425343:	pusha  
  425344:	nop
  425345:	lods   al,BYTE PTR ds:[esi]
  425346:	(bad)  
  425347:	adc    eax,0x712930a0
  42534c:	outs   dx,DWORD PTR ds:[esi]
  42534d:	ror    DWORD PTR [eax-0x1b706640],cl
  425353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425354:	pop    es
  425355:	adc    DWORD PTR [esi-0x31505e0d],esi
  42535b:	jbe    0x42536c
  42535d:	dec    edi
  42535e:	mov    esi,0x5901ca46
  425363:	ret    0x7b77
  425366:	xchg   edi,eax
  425367:	or     edx,DWORD PTR [esi+0x66ed1b3d]
  42536d:	sbb    BYTE PTR [edi-0x69],ah
  425370:	sbb    BYTE PTR [ebx+0x1a7a5d1d],dh
  425376:	aad    0x12
  425378:	xor    dl,ch
  42537a:	(bad)  
  42537b:	in     al,0x27
  42537d:	pop    es
  42537e:	mov    cl,0xd6
  425380:	fmulp  st(6),st
  425382:	or     BYTE PTR [ebp-0x4e],cl
  425385:	fild   QWORD PTR [ebp+ebp*4-0x77]
  425389:	fwait
  42538a:	in     al,dx
  42538b:	lock test eax,0x45bd5081
  425391:	ret    
  425392:	dec    ebp
  425393:	lods   al,BYTE PTR ds:[esi]
  425394:	les    eax,FWORD PTR [ebx]
  425396:	cdq    
  425397:	xchg   edx,eax
  425398:	jle    0x4253b7
  42539a:	adc    BYTE PTR [esi],dl
  42539c:	loopne 0x425363
  42539e:	xor    BYTE PTR [ecx-0x38560554],bl
  4253a4:	pusha  
  4253a5:	sbb    ah,BYTE PTR [ebp+0x20]
  4253a8:	mov    DWORD PTR [esi+ebp*4],ecx
  4253ab:	jg     0x42532d
  4253ad:	call   0xc90b:0xb118633b
  4253b4:	push   esp
  4253b5:	pushf  
  4253b6:	repz dec eax
  4253b8:	(bad)
  4253be:	jae    0x42536b
  4253c0:	fistp  QWORD PTR [ecx]
  4253c2:	popf   
  4253c3:	lock mov edi,0x8e287138
  4253c9:	call   0x9454:0xa6754568
  4253d0:	pop    ecx
  4253d1:	dec    ebx
  4253d2:	fisubr DWORD PTR [ebx+0x402599fa]
  4253d8:	into   
  4253d9:	pusha  
  4253da:	or     BYTE PTR [edi],al
  4253dc:	pop    es
  4253dd:	popa   
  4253de:	sub    eax,0xad0b1dc
  4253e3:	sbb    esi,ebx
  4253e5:	jae    0x425454
  4253e7:	mov    ebp,0x5e2d815a
  4253ec:	jmp    0xafb99b8d
  4253f1:	stc    
  4253f2:	sbb    cl,BYTE PTR [ebx-0x316b4b3f]
  4253f8:	and    al,BYTE PTR [esi+0x5]
  4253fb:	xor    al,0x63
  4253fd:	mov    cl,0xd9
  4253ff:	dec    esp
  425400:	mov    ds:0x507d7523,eax
  425405:	and    DWORD PTR [ebx+edx*2+0x41c5ba51],edi
  42540c:	push   esi
  42540d:	stc    
  42540e:	add    dl,BYTE PTR [esp+edi*2-0x1941634]
  425415:	xchg   ebp,eax
  425416:	or     DWORD PTR [ebx+0x48],0xffffff93
  42541a:	mov    al,ds:0x4cf42794
  42541f:	mov    edi,0x80e9ba6b
  425424:	inc    edi
  425425:	hlt    
  425426:	mov    ch,ah
  425428:	stos   BYTE PTR es:[edi],al
  425429:	in     eax,0xbe
  42542b:	call   0xa0590851
  425430:	sub    al,0xb4
  425432:	or     DWORD PTR [ecx+ebx*4+0x586aadbd],edi
  425439:	je     0x425454
  42543b:	mov    bl,0xb4
  42543d:	(bad)  
  42543e:	mov    ch,0x2d
  425440:	int    0x1
  425442:	add    al,ch
  425444:	add    DWORD PTR [eax],eax
  425446:	add    BYTE PTR [eax+ebp*4+0x3ccac922],bl
  42544d:	mov    ds:0xaff65f3c,al
  425452:	gs and eax,0x7e3c38d8
  425458:	sahf   
  425459:	jnp    0x425478
  42545b:	retf   0x3dab
  42545e:	scas   al,BYTE PTR es:[edi]
  42545f:	xchg   esp,eax
  425460:	pop    eax
  425461:	or     al,0x9
  425463:	mov    eax,0x2a384ba4
  425468:	hlt    
  425469:	nop
  42546a:	and    BYTE PTR [ebp+0x301c93b3],bl
  425470:	ins    DWORD PTR es:[edi],dx
  425471:	fst    QWORD PTR [edi]
  425473:	ins    BYTE PTR es:[edi],dx
  425474:	outs   dx,DWORD PTR ds:[esi]
  425475:	mov    cl,0x71
  425477:	mov    ebx,0x81666731
  42547c:	je     0x4254d6
  42547e:	scas   eax,DWORD PTR es:[edi]
  42547f:	pop    ebx
  425480:	sahf   
  425481:	stos   BYTE PTR es:[edi],al
  425482:	outs   dx,BYTE PTR ds:[esi]
  425483:	out    0x19,al
  425485:	or     al,0xc
  425487:	bound  edi,QWORD PTR [esi+0x4177af71]
  42548d:	sub    BYTE PTR [ebx],bh
  42548f:	ror    DWORD PTR [eax-0x4ca1c281],0xbd
  425496:	mov    esp,DWORD PTR [edx+0xfb7f969]
  42549c:	addr16 (bad) 
  42549e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42549f:	sub    eax,0xa3138eb5
  4254a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254a5:	int3   
  4254a6:	rcl    DWORD PTR [eax],cl
  4254a8:	inc    dh
  4254aa:	mov    esp,0x5cb8b590
  4254af:	sbb    al,BYTE PTR [eax]
  4254b1:	fs mov eax,0xd4dae893
  4254b7:	and    BYTE PTR [edx],ch
  4254b9:	dec    esp
  4254ba:	(bad)  
  4254bb:	daa    
  4254bc:	jmp    0xc9c91398
  4254c1:	jnp    0x425488
  4254c3:	mov    edx,0x20e154c3
  4254c8:	xor    ah,BYTE PTR [ebx-0x16]
  4254cb:	nop
  4254cc:	inc    ecx
  4254cd:	out    dx,eax
  4254ce:	icebp  
  4254cf:	mov    cl,0x71
  4254d1:	in     al,dx
  4254d2:	icebp  
  4254d3:	add    DWORD PTR [ecx+0x1f37052d],edi
  4254d9:	xor    BYTE PTR [ecx],cl
  4254db:	and    eax,0x9fe7fa22
  4254e0:	pop    cx
  4254e2:	mov    al,ds:0x5866c7e8
  4254e7:	stos   DWORD PTR es:[edi],eax
  4254e8:	pop    ebx
  4254e9:	sbb    BYTE PTR ds:0xc3cf92b2,ah
  4254ef:	mov    ch,0xa3
  4254f1:	push   ss
  4254f2:	adc    eax,0x7acde6a9
  4254f7:	arpl   WORD PTR [eax],ax
  4254f9:	sbb    eax,0x2c0741a2
  4254fe:	mov    ebp,0x523b3a72
  425503:	hlt    
  425504:	and    ah,BYTE PTR [edi]
  425506:	call   0xd5b87a4b
  42550b:	das    
  42550c:	push   ecx
  42550d:	enter  0xf540,0x1b
  425511:	rcr    DWORD PTR [ebx+0x27],cl
  425514:	xlat   BYTE PTR ds:[ebx]
  425515:	jge    0x425525
  425517:	fsubr  st(1),st
  425519:	pop    ebx
  42551a:	push   ebp
  42551b:	and    al,0x51
  42551d:	and    eax,0xa7ed0bba
  425522:	in     al,dx
  425523:	or     eax,0x9106314d
  425528:	sbb    eax,0x228de26f
  42552d:	pop    edx
  42552e:	mov    ebx,0x5812beb8
  425533:	(bad)  
  425534:	pop    DWORD PTR [esi-0x40]
  425537:	and    BYTE PTR [ecx-0x32aa1c63],dl
  42553d:	aaa    
  42553e:	add    edi,ebx
  425540:	mov    al,0x40
  425542:	ins    BYTE PTR es:[edi],dx
  425543:	in     eax,dx
  425544:	jmp    0xd279218b
  425549:	dec    edx
  42554a:	fimul  DWORD PTR [ecx+0x2a897a8c]
  425550:	sub    BYTE PTR [eax+edx*4-0x6179a784],al
  425557:	xchg   edi,eax
  425558:	dec    esp
  425559:	daa    
  42555a:	dec    edx
  42555b:	sar    DWORD PTR [eax+0x7e],0x87
  42555f:	mov    ds:0x819e29a7,al
  425564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425565:	test   BYTE PTR [edi+0x5a],dl
  425568:	bnd jmp 0x4254f0
  42556b:	and    al,0xe1
  42556d:	push   0xaf8cf721
  425572:	or     BYTE PTR [edx-0x5a0fc790],0x0
  425579:	mov    ds:0x1c8f27ac,al
  42557e:	sub    edx,DWORD PTR [esp+ebx*2-0x19]
  425582:	jo     0x425552
  425584:	loop   0x4255ee
  425586:	icebp  
  425587:	mov    ebx,0x44cb4803
  42558c:	inc    esi
  42558d:	xor    ecx,DWORD PTR [esi-0x4e]
  425590:	mov    BYTE PTR [ecx-0x3d87f26d],dh
  425596:	in     eax,0xc4
  425598:	pop    edi
  425599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42559a:	stos   BYTE PTR es:[edi],al
  42559b:	push   cs
  42559c:	jne    0x425588
  42559e:	jp     0x425562
  4255a0:	fs jg  0x425611
  4255a3:	cmp    DWORD PTR [edx+0x5afc2396],ecx
  4255a9:	xor    cl,BYTE PTR [ebx+0x71a9d6d8]
  4255af:	mov    bh,0xad
  4255b1:	sti    
  4255b2:	outs   dx,DWORD PTR fs:[esi]
  4255b4:	nop
  4255b5:	iret   
  4255b6:	jnp    0x4255da
  4255b8:	pop    esi
  4255b9:	int    0xd5
  4255bb:	ss syscall 
  4255be:	jno    0x425557
  4255c0:	sti    
  4255c1:	lds    esp,FWORD PTR ds:0x6ed65366
  4255c7:	push   ecx
  4255c8:	jno    0x425582
  4255ca:	and    bl,al
  4255cc:	adc    DWORD PTR [eax],edx
  4255ce:	xchg   ebp,eax
  4255cf:	xor    ebx,ebx
  4255d1:	ret    
  4255d2:	mov    edi,0x546da839
  4255d7:	sub    al,0x9a
  4255d9:	nop
  4255da:	mov    eax,0x754671f5
  4255df:	or     DWORD PTR [eax+0x1932b16d],ecx
  4255e5:	adc    al,0x4a
  4255e7:	shl    BYTE PTR [edi-0x4e],cl
  4255ea:	xchg   ebp,eax
  4255eb:	xchg   DWORD PTR [edi+ebx*8-0x269fae4a],esp
  4255f2:	push   ds
  4255f3:	retf   
  4255f4:	bound  edi,QWORD PTR [eax]
  4255f6:	retf   
  4255f7:	xchg   esi,eax
  4255f8:	pop    ebx
  4255f9:	retf   0x4e34
  4255fc:	inc    edi
  4255fd:	adc    eax,0x6d09a961
  425602:	enter  0x1a3f,0x4c
  425606:	mov    gs,ebp
  425608:	sub    eax,0xb700380f
  42560d:	popa   
  42560e:	cmp    eax,0xa76b3c75
  425613:	jnp    0x4255ee
  425615:	cmp    edx,ebp
  425617:	and    BYTE PTR [ecx+0x348daaeb],dh
  42561d:	ret    0x8dad
  425620:	ins    BYTE PTR es:[edi],dx
  425621:	dec    esi
  425622:	cmp    eax,0x9f5f32dc
  425627:	or     eax,0xb7703d24
  42562c:	out    0x8e,al
  42562e:	rol    DWORD PTR [edx],0x33
  425631:	mov    edi,DWORD PTR [eax]
  425633:	mov    ebx,0xb13bb3b8
  425638:	sbb    BYTE PTR [edi+0x1d],dh
  42563b:	pop    eax
  42563c:	sbb    DWORD PTR [edx+0x1cf15e8],ebx
  425642:	add    al,ch
  425644:	add    DWORD PTR [eax],eax
  425646:	add    BYTE PTR [edi+0x5b2a4e3a],bh
  42564c:	dec    esp
  42564d:	call   0x952b:0xac3e8988
  425654:	add    al,0x6d
  425656:	and    ebx,DWORD PTR [esi+0x52]
  425659:	sub    al,0xb8
  42565b:	cmp    eax,0x6f0afe80
  425660:	gs pop eax
  425662:	(bad)  [ecx+0x4efae961]
  425668:	sti    
  425669:	pop    ecx
  42566a:	ret    
  42566b:	pusha  
  42566c:	(bad)  ds:0xbdbd4239
  425672:	mov    ecx,0xf101f668
  425677:	es ss push ss
  42567a:	psrad  mm5,QWORD PTR [ecx-0x2719f1b]
  425681:	cld    
  425682:	retf   0x97f8
  425685:	jl     0x4256ca
  425687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425688:	(bad)  
  425689:	xor    ah,BYTE PTR [edx]
  42568b:	cwde   
  42568c:	or     eax,0x9fd1ddea
  425691:	loop   0x425668
  425693:	mov    bl,0x7f
  425695:	inc    ebp
  425696:	std    
  425697:	jge    0x4256b2
  425699:	stc    
  42569a:	jmp    0x4256b1
  42569c:	mov    al,0xfa
  42569e:	jnp    0x4256cc
  4256a0:	lahf   
  4256a1:	mov    al,ds:0x2911b74b
  4256a6:	imul   edx,edi,0xffffffda
  4256a9:	xor    BYTE PTR [edx+0x383339],dl
  4256af:	mov    DWORD PTR [edx+eax*1],ecx
  4256b2:	jns    0x425730
  4256b4:	sbb    DWORD PTR [ebx],edi
  4256b6:	sar    BYTE PTR [esi-0x3e6eb98e],cl
  4256bc:	jne    0x4256fc
  4256be:	push   eax
  4256bf:	popa   
  4256c0:	aaa    
  4256c1:	loopne 0x42564b
  4256c3:	out    dx,eax
  4256c4:	aaa    
  4256c5:	outs   dx,DWORD PTR ds:[esi]
  4256c6:	sbb    al,BYTE PTR [edi+0x6]
  4256c9:	mov    eax,ds:0xe11e9698
  4256ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256cf:	xlat   BYTE PTR ds:[ebx]
  4256d0:	add    eax,0x3a186782
  4256d5:	int3   
  4256d6:	repz out dx,al
  4256d8:	add    al,0x65
  4256da:	(bad)  
  4256db:	sar    edx,1
  4256dd:	mov    cl,0xc6
  4256df:	adc    dh,ah
  4256e1:	inc    ecx
  4256e2:	into   
  4256e3:	jg     0x4256aa
  4256e5:	inc    eax
  4256e6:	aam    0xf1
  4256e8:	sub    cl,ch
  4256ea:	popf   
  4256eb:	inc    edx
  4256ec:	outs   dx,BYTE PTR ds:[esi]
  4256ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256ee:	dec    ebx
  4256ef:	push   edi
  4256f0:	data16 loop 0x42567d
  4256f3:	xor    cl,BYTE PTR [ebp+0x1d129d26]
  4256f9:	mov    ds:0x63d4f453,al
  4256fe:	arpl   dx,dx
  425700:	sbb    BYTE PTR [edx+0x38],ch
  425703:	retf   0x2576
  425706:	ins    DWORD PTR es:[edi],dx
  425707:	mov    ch,0x8a
  425709:	mov    eax,0x342d8d1e
  42570e:	leave  
  42570f:	and    BYTE PTR [edi-0x7d0d251e],ch
  425715:	lds    ebx,FWORD PTR [esp+eiz*4]
  425718:	jecxz  0x425799
  42571a:	fst    st(0)
  42571c:	out    0x31,al
  42571e:	add    al,0xc1
  425720:	(bad)  
  425721:	test   cl,ch
  425723:	imul   ebp,DWORD PTR [eax],0x4867b7d
  425729:	sahf   
  42572a:	dec    esp
  42572b:	mov    WORD PTR [ebx+0x6b32a0cc],fs
  425731:	loop   0x4256ca
  425733:	ins    BYTE PTR es:[edi],dx
  425734:	pop    es
  425735:	fs jns 0x425781
  425738:	and    esi,DWORD PTR [esi]
  42573a:	sbb    DWORD PTR [ebx+0x10541dc9],eax
  425740:	pusha  
  425741:	sbb    dl,ch
  425743:	push   esp
  425744:	sub    DWORD PTR [ecx],ecx
  425746:	add    DWORD PTR [eax+0xd],0x1b80ecee
  42574d:	adc    DWORD PTR [ebp+0x7b],edi
  425750:	cmc    
  425751:	xor    DWORD PTR [ebx],0xd98e2de8
  425757:	rcl    ecx,0x83
  42575a:	es cmp ebx,0x24
  42575e:	jmp    0x7e13:0x439eb08b
  425765:	sub    dl,BYTE PTR [edx+eax*8+0x56]
  425769:	cmc    
  42576a:	(bad)  gs:[ebx]
  42576d:	dec    esi
  42576e:	mov    ah,0xdd
  425770:	fiadd  DWORD PTR [edx+edi*8-0x440a0ba2]
  425777:	add    BYTE PTR [ebx-0x20],dl
  42577a:	cld    
  42577b:	pop    es
  42577c:	popf   
  42577d:	push   ds
  42577e:	jle    0x42576b
  425780:	or     BYTE PTR [esi],ch
  425782:	mov    ds:0x8b343cb8,eax
  425787:	call   0x531c0e8e
  42578c:	lahf   
  42578d:	xlat   BYTE PTR ds:[ebx]
  42578e:	loop   0x4257c7
  425790:	mov    al,ds:0xc770d8b5
  425795:	les    edx,FWORD PTR [edi-0xc97ee9f]
  42579b:	and    BYTE PTR [eax],cl
  42579d:	daa    
  42579e:	inc    ecx
  42579f:	(bad)  
  4257a0:	sub    DWORD PTR [edx-0x23dbe84e],edi
  4257a6:	mov    edi,DWORD PTR [ebx-0x49]
  4257a9:	les    ebp,FWORD PTR [eax+0x73a8bf04]
  4257af:	outs   dx,BYTE PTR ds:[esi]
  4257b0:	and    esp,DWORD PTR [esi+esi*4-0x51f21dbb]
  4257b7:	mov    bl,0x1a
  4257b9:	add    edx,ecx
  4257bb:	sub    al,0xe7
  4257bd:	mov    ds:0xc207bc5c,al
  4257c2:	js     0x4257f5
  4257c4:	jle    0x425828
  4257c6:	mov    dh,0xdc
  4257c9:	stos   DWORD PTR es:[edi],eax
  4257ca:	in     al,0xa8
  4257cc:	xor    eax,0x6116dcfc
  4257d1:	or     eax,0xe70c3399
  4257d6:	(bad)  
  4257d7:	addr16 push esi
  4257d9:	sbb    al,0x85
  4257db:	bound  ebx,QWORD PTR ds:0xdee3f594
  4257e1:	sub    al,0x5a
  4257e3:	(bad)  
  4257e4:	push   ss
  4257e5:	add    dl,BYTE PTR [ecx+0x26]
  4257e8:	pop    ebx
  4257e9:	or     ecx,ebx
  4257eb:	xor    bl,BYTE PTR [ebx+0x57]
  4257ee:	fisub  WORD PTR [edi+0x5a]
  4257f1:	cmp    ah,BYTE PTR [eax-0x2b]
  4257f4:	add    al,0x45
  4257f6:	cmp    DWORD PTR [esi-0x21],esp
  4257f9:	sbb    esp,DWORD PTR [edi+0x27]
  4257fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257fd:	cmp    BYTE PTR [esi+edx*8-0x107647ae],ch
  425804:	and    edi,DWORD PTR ds:0x68bb013e
  42580a:	(bad)  
  42580b:	out    dx,al
  42580c:	(bad)  
  42580d:	jb     0x425858
  42580f:	adc    ebp,esi
  425811:	mov    al,ds:0x5095f3b5
  425816:	xchg   ecx,eax
  425817:	mov    al,ds:0x5973b80f
  42581c:	retf   
  42581d:	(bad)  
  42581f:	sub    esp,0x239f7bc7
  425825:	cmc    
  425826:	std    
  425827:	pop    eax
  425828:	loop   0x425834
  42582a:	cmp    BYTE PTR ds:0xfa134ade,0x4c
  425831:	push   es
  425832:	ret    
  425833:	mov    dh,0xcb
  425835:	(bad)  
  425836:	jge    0x425885
  425838:	shr    BYTE PTR [eax],1
  42583a:	test   eax,0xc69ef4bd
  42583f:	std    
  425840:	rol    BYTE PTR [ecx],1
  425842:	add    al,ch
  425844:	add    DWORD PTR [eax],eax
  425846:	add    BYTE PTR ds:0x3071f16f,dh
  42584c:	bswap  esp
  42584e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42584f:	cwde   
  425850:	sub    eax,0xa30bf982
  425855:	xor    BYTE PTR [edi],al
  425857:	mov    ebx,0x299df18b
  42585c:	push   esi
  42585d:	and    DWORD PTR ds:[ecx],eax
  425860:	daa    
  425861:	loopne 0x425851
  425863:	loopne 0x42585b
  425865:	(bad)  
  425866:	push   cs
  425867:	push   esp
  425868:	(bad)  
  425869:	mov    ebx,0x220cc5f0
  42586e:	outs   dx,DWORD PTR ds:[esi]
  42586f:	out    0xbb,eax
  425871:	pop    es
  425872:	and    ch,bh
  425874:	xor    BYTE PTR [esi],ah
  425876:	ins    DWORD PTR es:[edi],dx
  425877:	ins    DWORD PTR es:[edi],dx
  425878:	leave  
  425879:	push   es
  42587a:	in     eax,0xe1
  42587c:	pop    es
  42587d:	outs   dx,DWORD PTR ds:[esi]
  42587e:	push   ds
  42587f:	add    bh,al
  425881:	stc    
  425882:	mov    ds:0x8a30274,al
  425887:	jno    0x4258e3
  425889:	pop    ds
  42588a:	mov    BYTE PTR [ebp+0x1a],bh
  42588d:	shr    BYTE PTR [ecx-0x376b09e7],cl
  425893:	pop    edi
  425894:	lahf   
  425895:	jmp    0xe036:0xcb577275
  42589c:	pop    ds
  42589d:	xor    edx,DWORD PTR [ebx-0x55]
  4258a0:	out    dx,al
  4258a1:	xchg   esi,eax
  4258a2:	aas    
  4258a3:	mov    dl,0xc9
  4258a5:	xchg   edi,eax
  4258a6:	or     esi,esi
  4258a8:	out    0x23,eax
  4258aa:	mov    bl,BYTE PTR [ebx]
  4258ac:	jge    0x4258b9
  4258ae:	cli    
  4258af:	xchg   dl,al
  4258b1:	xchg   DWORD PTR [esi],ebx
  4258b3:	hlt    
  4258b4:	inc    ebx
  4258b6:	sbb    DWORD PTR [esi+0x6b1e495b],0x16
  4258bd:	or     DWORD PTR [eax],esp
  4258bf:	test   al,0x21
  4258c1:	sub    DWORD PTR [esi+0x63],esi
  4258c4:	push   ebp
  4258c5:	and    al,0xa1
  4258c7:	retf   
  4258c8:	push   esi
  4258c9:	mov    ebp,0x3222e5eb
  4258ce:	std    
  4258cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258d0:	or     al,0x6
  4258d2:	mov    edx,0x9af4e28a
  4258d7:	pop    ss
  4258d8:	lea    edx,[ecx+edx*1+0x6a]
  4258dc:	imul   ebx,DWORD PTR [eax+0x541767a4],0x7c7d459e
  4258e6:	or     ecx,esp
  4258e8:	pop    esi
  4258e9:	jbe    0x4258ed
  4258eb:	push   cs
  4258ec:	sbb    eax,0x7b6a9a3
  4258f1:	clc    
  4258f2:	dec    eax
  4258f3:	and    eax,0x1b34aefd
  4258f8:	inc    edx
  4258f9:	(bad)  
  4258fa:	mov    ds:0x5d234667,eax
  4258ff:	leave  
  425900:	sbb    al,0x12
  425902:	(bad)  
  425903:	adc    BYTE PTR [ecx-0x6dbfe8e7],al
  425909:	sti    
  42590a:	cmc    
  42590b:	pop    edi
  42590c:	sahf   
  42590d:	mov    eax,0x98365504
  425912:	or     BYTE PTR [edx],al
  425914:	in     eax,0x6b
  425916:	push   es
  425917:	outs   dx,BYTE PTR ds:[esi]
  425918:	arpl   WORD PTR [edx-0x57e00ee8],bp
  42591e:	push   ebx
  42591f:	mov    BYTE PTR [ebx],bl
  425921:	ficom  WORD PTR [edi+0x21a5cc4f]
  425927:	mov    esp,0xc799b473
  42592c:	loope  0x42590f
  42592e:	repnz ins DWORD PTR es:[edi],dx
  425930:	arpl   WORD PTR [ecx+0x76],di
  425933:	push   edi
  425934:	push   cs
  425935:	push   edi
  425936:	out    0xec,eax
  425938:	push   ebp
  425939:	add    ah,ah
  42593b:	repnz or edx,ecx
  42593e:	pop    edx
  42593f:	inc    ebx
  425940:	call   0x9c389481
  425945:	cmp    dl,dl
  425947:	retf   
  425948:	int    0x39
  42594a:	fld    QWORD PTR [edi]
  42594c:	adc    bh,bh
  42594e:	push   ecx
  42594f:	jecxz  0x42594a
  425951:	jne    0x4258e7
  425953:	js     0x42598c
  425955:	jecxz  0x425949
  425957:	xchg   DWORD PTR [edx+ecx*8],esi
  42595a:	push   0x5f
  42595c:	pop    esi
  42595d:	jecxz  0x425916
  42595f:	or     cl,bl
  425961:	stos   DWORD PTR es:[edi],eax
  425962:	idiv   cl
  425964:	fiadd  DWORD PTR [edi]
  425966:	sbb    al,0xa8
  425968:	inc    esi
  425969:	fst    DWORD PTR [ecx]
  42596b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42596c:	sub    bl,BYTE PTR [eax-0x15]
  42596f:	sub    DWORD PTR [ecx+0x32e1187e],ecx
  425975:	aad    0x5e
  425977:	mov    eax,ds:0x554ad166
  42597c:	mov    DWORD PTR [esi+eiz*4-0x65],ecx
  425980:	xchg   esp,eax
  425981:	pop    ecx
  425982:	stos   BYTE PTR es:[edi],al
  425983:	xchg   edx,eax
  425984:	imul   ebp,DWORD PTR [ecx+0xf17759e],0x167985c
  42598e:	in     eax,0xfd
  425990:	jg     0x425973
  425992:	xor    DWORD PTR [ecx-0x564796c0],edx
  425998:	mov    ebx,0x231de475
  42599d:	shr    DWORD PTR [ecx+0x2c3e9cf0],cl
  4259a3:	xchg   esi,eax
  4259a4:	mov    ss,edx
  4259a6:	int3   
  4259a7:	pop    ebp
  4259a8:	xchg   edi,eax
  4259a9:	adc    ecx,DWORD PTR [edi+0x61a55e7c]
  4259af:	(bad)  
  4259b1:	dec    eax
  4259b2:	je     0x4259af
  4259b4:	gs test al,0xff
  4259b7:	in     al,dx
  4259b8:	rcl    DWORD PTR [ebx*8+0x6dbffb20],cl
  4259bf:	fcmovnu st,st(7)
  4259c1:	aam    0xd0
  4259c3:	and    BYTE PTR [edi+0xed8e286],dh
  4259c9:	jmp    0x425a3b
  4259cb:	jle    0x425a2b
  4259cd:	jne    0x425a44
  4259cf:	popa   
  4259d0:	xor    eax,0x58b1e0cd
  4259d5:	xchg   edi,eax
  4259d6:	mov    ah,0xa8
  4259d8:	loope  0x4259f5
  4259da:	ins    DWORD PTR es:[edi],dx
  4259db:	shl    ecx,cl
  4259dd:	shl    eax,0xd3
  4259e0:	dec    esp
  4259e1:	imul   ecx,edi,0xffffffd1
  4259e4:	pop    ebp
  4259e5:	mov    DWORD PTR [ebx+ebp*1],0xcfcc0d64
  4259ec:	mov    edi,0x7f5b5432
  4259f1:	in     eax,0x8c
  4259f3:	icebp  
  4259f4:	aaa    
  4259f5:	fidiv  DWORD PTR [edx]
  4259f7:	les    ecx,FWORD PTR [ebp+0x5110e481]
  4259fd:	push   esi
  4259fe:	xchg   ecx,eax
  4259ff:	pop    es
  425a00:	mov    bl,0x8
  425a02:	add    BYTE PTR [eax-0x5efba7a3],ah
  425a08:	jno    0x425a12
  425a0a:	pop    ebp
  425a0b:	xchg   edi,ebx
  425a0d:	jbe    0x4259f1
  425a0f:	cmp    eax,0x987543f9
  425a14:	pop    esp
  425a15:	stos   BYTE PTR es:[edi],al
  425a16:	cmp    ch,BYTE PTR [ecx]
  425a18:	mov    ebp,DWORD PTR [ecx+edx*2-0x5c]
  425a1c:	out    dx,eax
  425a1d:	das    
  425a1e:	add    eax,0x15019407
  425a23:	cli    
  425a24:	ins    BYTE PTR es:[edi],dx
  425a25:	xor    ebx,edi
  425a27:	push   0xc
  425a29:	sbb    ebx,edi
  425a2b:	add    eax,0x1cab3b47
  425a30:	in     ax,0x66
  425a33:	jmp    edi
  425a35:	lahf   
  425a36:	jle    0x425a43
  425a38:	dec    edx
  425a39:	sub    BYTE PTR [esi],bh
  425a3b:	pop    ecx
  425a3c:	popf   
  425a3d:	les    eax,FWORD PTR ds:0x1d2e5
  425a43:	call   0xd7425a49
  425a48:	outs   dx,BYTE PTR ds:[esi]
  425a49:	sbb    dh,BYTE PTR [edi+0x7ff858b3]
  425a4f:	pop    edx
  425a50:	aas    
  425a51:	adc    eax,0xec1b2710
  425a56:	addr16 in eax,dx
  425a58:	or     bh,al
  425a5a:	xchg   edi,eax
  425a5b:	or     ebp,ecx
  425a5d:	out    dx,al
  425a5e:	xor    DWORD PTR [ecx+0xf],ebp
  425a61:	jo     0x425a87
  425a63:	inc    ebx
  425a64:	pusha  
  425a65:	div    BYTE PTR gs:[edi-0x657ef900]
  425a6c:	cdq    
  425a6d:	fldcw  WORD PTR [edx-0x6acda798]
  425a73:	sahf   
  425a74:	outs   dx,DWORD PTR ds:[esi]
  425a75:	or     BYTE PTR [edi-0x4a],ch
  425a78:	inc    BYTE PTR [eax-0x535162bd]
  425a7e:	ror    eax,1
  425a80:	xchg   ebx,eax
  425a81:	mov    al,ds:0x41a001
  425a86:	pop    es
  425a87:	mov    eax,0xaa980570
  425a8c:	push   cs
  425a8d:	mov    bh,0x22
  425a8f:	sub    al,0x14
  425a91:	adc    ch,BYTE PTR [ebx]
  425a93:	adc    BYTE PTR [edx],0xb6
  425a96:	das    
  425a97:	jo     0x425ada
  425a99:	neg    DWORD PTR [edx]
  425a9b:	lods   eax,DWORD PTR ds:[esi]
  425a9c:	(bad)  
  425a9d:	mov    eax,ds:0x85c192e
  425aa2:	push   es
  425aa3:	and    ah,BYTE PTR ss:[eax-0x79]
  425aa7:	add    eax,0xc5cb501c
  425aac:	fincstp 
  425aae:	sbb    DWORD PTR [edx+0x1c],eax
  425ab1:	push   ds
  425ab2:	add    DWORD PTR [ecx],esi
  425ab4:	inc    ebp
  425ab5:	sbb    ecx,ebp
  425ab7:	(bad)  
  425ab9:	dec    edi
  425aba:	xor    al,0x4c
  425abc:	xor    al,BYTE PTR [edx-0x31]
  425abf:	inc    ebp
  425ac0:	jo     0x425a5f
  425ac2:	jnp    0x425b00
  425ac4:	pop    ebp
  425ac5:	cs repnz push 0xffffffa4
  425ac9:	jg     0x425aae
  425acb:	lea    ebp,[ecx]
  425acd:	daa    
  425ace:	pop    ecx
  425acf:	mov    ?,ebp
  425ad1:	pop    esi
  425ad2:	push   eax
  425ad3:	sub    al,0xaf
  425ad5:	push   eax
  425ad6:	arpl   WORD PTR [eax+0x2e],sp
  425ad9:	push   esi
  425ada:	add    eax,0xee58fd14
  425adf:	scas   eax,DWORD PTR es:[edi]
  425ae0:	(bad)
  425ae3:	or     DWORD PTR [edi+0x1e],ebp
  425ae6:	cmp    al,0x63
  425ae8:	jnp    0x425b68
  425aea:	fmul   DWORD PTR [ebp-0x4b]
  425aed:	or     eax,0x290b3506
  425af2:	sbb    cl,0x66
  425af5:	dec    ebx
  425af6:	(bad)  
  425af7:	jb     0x425abd
  425af9:	xchg   ebx,eax
  425afa:	sub    DWORD PTR [ecx-0x72],0xa
  425afe:	ins    BYTE PTR es:[edi],dx
  425aff:	sub    ecx,eax
  425b01:	sub    DWORD PTR [ebp+ebp*2-0x25],0x5d0220b5
  425b09:	pop    es
  425b0a:	mov    cl,BYTE PTR [ecx]
  425b0c:	push   edi
  425b0d:	mov    ebx,0xf9cd7c52
  425b12:	clc    
  425b13:	lods   eax,DWORD PTR fs:[esi]
  425b15:	xchg   esp,eax
  425b16:	push   edx
  425b17:	pop    ebp
  425b18:	or     edx,DWORD PTR [ebx-0x35]
  425b1b:	push   ss
  425b1c:	fcmovu st,st(3)
  425b1e:	mov    WORD PTR [ecx-0x438a6331],es
  425b24:	push   ebx
  425b25:	outs   dx,DWORD PTR ds:[esi]
  425b26:	push   ss
  425b27:	xchg   esi,eax
  425b28:	leave  
  425b29:	inc    ecx
  425b2a:	pop    es
  425b2b:	pop    ebp
  425b2c:	cmc    
  425b2d:	or     BYTE PTR [edi+esi*1-0x166e0698],dl
  425b34:	sar    DWORD PTR [ecx+edx*4-0x70],cl
  425b38:	pop    edi
  425b39:	mov    esp,0x5457603a
  425b3e:	call   0xbe17:0x235dbec8
  425b45:	sar    DWORD PTR [edx+0x3db5903c],cl
  425b4b:	test   BYTE PTR [edx+eiz*4-0x3e67f217],ah
  425b52:	shl    BYTE PTR fs:[ecx],1
  425b55:	lods   eax,DWORD PTR ds:[esi]
  425b56:	mov    ebx,DWORD PTR [eax-0x42e093f8]
  425b5c:	jp     0x425bad
  425b5e:	xchg   edx,eax
  425b5f:	test   eax,0x1bd29039
  425b64:	cwde   
  425b65:	pop    ss
  425b66:	xchg   edx,eax
  425b67:	dec    esi
  425b68:	ret    
  425b69:	pop    eax
  425b6a:	push   ecx
  425b6b:	jo     0x425bb9
  425b6d:	shl    ecx,0xee
  425b70:	mov    ebp,0x9cad0e20
  425b75:	pop    esi
  425b76:	sar    DWORD PTR [eax],0x4a
  425b79:	and    cl,ah
  425b7b:	mov    bh,0x85
  425b7d:	fldcw  WORD PTR [edx-0x3b]
  425b80:	mov    ebp,0xa78cb96f
  425b85:	arpl   si,bx
  425b87:	jg     0x425bc9
  425b89:	(bad)  
  425b8a:	or     eax,DWORD PTR [edi]
  425b8c:	mov    bl,0x61
  425b8e:	inc    esp
  425b8f:	or     esi,DWORD PTR [esi+0x5e075c63]
  425b95:	jge    0x425b29
  425b97:	inc    ebp
  425b98:	outs   dx,BYTE PTR ds:[esi]
  425b99:	popf   
  425b9a:	stos   DWORD PTR es:[edi],eax
  425b9b:	xchg   esi,eax
  425b9c:	pop    ebp
  425b9d:	mov    WORD PTR [edi],?
  425b9f:	(bad)  
  425ba1:	test   eax,0x620231be
  425ba6:	adc    ebp,DWORD PTR [ebx-0x34ee395c]
  425bac:	add    ecx,DWORD PTR [edx+ebx*1+0x35]
  425bb0:	outs   dx,BYTE PTR ds:[esi]
  425bb1:	cld    
  425bb2:	data16 aam 0x3b
  425bb5:	ret    0x10b7
  425bb8:	cmp    BYTE PTR [esi-0x65],ch
  425bbb:	xor    al,0xec
  425bbd:	adc    BYTE PTR [ebx-0x20],dl
  425bc0:	popf   
  425bc1:	cwde   
  425bc2:	loope  0x425bee
  425bc4:	aas    
  425bc5:	mov    bh,0x4f
  425bc7:	stos   DWORD PTR es:[edi],eax
  425bc8:	call   0x44f5:0xd39ec18b
  425bcf:	push   ecx
  425bd0:	cli    
  425bd1:	ror    BYTE PTR [esi],1
  425bd3:	sbb    eax,DWORD PTR [ecx]
  425bd5:	(bad)
  425bd9:	retf   
  425bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425bdb:	sbb    esp,esi
  425bdd:	pop    es
  425bde:	jge    0x425c58
  425be0:	call   0x1572255c
  425be5:	and    eax,DWORD PTR [edx+0x15]
  425be8:	lds    ecx,FWORD PTR ds:0x5444b89b
  425bee:	adc    DWORD PTR [ecx],0x278bb703
  425bf4:	push   ebx
  425bf5:	sub    eax,0x65ae6dda
  425bfa:	sti    
  425bfb:	add    DWORD PTR [esi-0x2455343],edx
  425c01:	(bad)  
  425c02:	int3   
  425c03:	xchg   ebp,edi
  425c05:	push   0x4a770c3d
  425c0a:	fadd   st,st(4)
  425c0c:	lods   eax,DWORD PTR ds:[esi]
  425c0d:	clc    
  425c0e:	push   ds
  425c0f:	pop    ebp
  425c10:	pop    ss
  425c11:	mov    edi,0x854f8fc0
  425c16:	ja     0x425c25
  425c18:	xchg   ebx,eax
  425c19:	out    0x30,eax
  425c1b:	mov    WORD PTR [ebx],ds
  425c1d:	and    bl,BYTE PTR [eax+ecx*4+0x9]
  425c21:	aas    
  425c22:	rcr    DWORD PTR [edi+eiz*8-0x7a3fc01a],1
  425c29:	mov    eax,ds:0x3b461b37
  425c2e:	pop    ss
  425c2f:	dec    ecx
  425c30:	cli    
  425c31:	mov    ebx,0xfd4fbb4e
  425c36:	inc    DWORD PTR [edx-0x4dd83ea7]
  425c3c:	cs test cl,ch
  425c3f:	int    0xd4
  425c41:	add    DWORD PTR [eax],eax
  425c43:	call   0x8f425c49
  425c48:	shl    DWORD PTR [ebp-0x40b4a783],1
  425c4e:	(bad)  
  425c4f:	and    DWORD PTR [ebp-0x7d],ebx
  425c52:	push   ecx
  425c53:	leave  
  425c54:	stc    
  425c55:	cmc    
  425c56:	das    
  425c57:	mov    dh,0x91
  425c59:	aad    0x9f
  425c5b:	xchg   esp,eax
  425c5c:	repnz inc ebx
  425c5e:	hlt    
  425c5f:	mov    ebx,0xdcd40ae5
  425c64:	mov    ebp,?
  425c66:	cwde   
  425c67:	push   esi
  425c68:	rcl    BYTE PTR [edx-0x40],cl
  425c6b:	mov    ah,0x69
  425c6d:	jo     0x425cc4
  425c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c70:	leave  
  425c71:	fwait
  425c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c73:	popf   
  425c74:	xchg   DWORD PTR es:[ecx+0x67091bbb],ebx
  425c7b:	xor    DWORD PTR [ebp+esi*1-0x65],eax
  425c7f:	pop    ebp
  425c80:	sbb    eax,0x33292038
  425c85:	sub    bh,BYTE PTR [ecx+0x259f807c]
  425c8b:	ss jb  0x425c71
  425c8e:	xchg   edi,eax
  425c8f:	xchg   ecx,eax
  425c90:	jmp    0x2d7d:0xfa6009c4
  425c97:	call   0x35d:0x40710747
  425c9e:	xor    DWORD PTR [ebp+0xb],esp
  425ca1:	mov    es,WORD PTR [esi+0x18]
  425ca4:	imul   ebp,DWORD PTR [eax-0x7c],0x5771dd3c
  425cab:	jns    0x425c56
  425cad:	mov    edi,0x56909542
  425cb2:	mov    ebp,0xd11bc257
  425cb7:	ss dec esp
  425cb9:	pop    edx
  425cba:	lahf   
  425cbb:	xor    ch,BYTE PTR [eax]
  425cbd:	xchg   ecx,eax
  425cbe:	sbb    DWORD PTR [esi+0x366558e7],0xf582ef65
  425cc8:	das    
  425cc9:	les    edi,FWORD PTR [edx+0x63]
  425ccc:	mov    ebp,DWORD PTR [ebp+0x5b]
  425ccf:	in     al,0xf4
  425cd1:	(bad)  
  425cd2:	jne    0x425d27
  425cd4:	(bad)  
  425cd5:	repz sbb bl,BYTE PTR [ecx-0x79c9b5be]
  425cdc:	inc    ecx
  425cdd:	mov    al,0x7a
  425cdf:	xor    edx,DWORD PTR ss:[eax]
  425ce2:	imul   esi,DWORD PTR [eiz*1-0xabbf7d],0xb
  425cea:	test   ebx,eax
  425cec:	call   0x53ed:0x709c4bd3
  425cf3:	sahf   
  425cf4:	inc    ebx
  425cf5:	fadd   QWORD PTR [esp+ebp*8+0x47]
  425cf9:	sbb    al,0x8c
  425cfb:	push   esi
  425cfc:	gs ds popa 
  425cff:	cdq    
  425d00:	dec    edi
  425d01:	push   0xffffffc0
  425d03:	mov    ebx,0x28087833
  425d08:	aas    
  425d09:	out    dx,al
  425d0a:	and    eax,0x12210df2
  425d0f:	sub    DWORD PTR [ebp+0x58],edi
  425d12:	adc    DWORD PTR [eax],edx
  425d14:	push   ds
  425d15:	pop    eax
  425d16:	push   ds
  425d17:	lods   eax,DWORD PTR ds:[esi]
  425d18:	mov    edx,0x10247e2f
  425d1d:	add    al,0xf4
  425d1f:	or     cl,BYTE PTR [ebp+0x6e]
  425d22:	stos   BYTE PTR es:[edi],al
  425d23:	ret    0xb361
  425d26:	jne    0x425d40
  425d28:	jno    0x425d54
  425d2a:	test   DWORD PTR [ebp-0x5282f77d],ecx
  425d30:	icebp  
  425d31:	pop    ebp
  425d32:	repnz push edx
  425d34:	fs sub esi,ebp
  425d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d38:	push   esp
  425d39:	fst    DWORD PTR [eax-0x494a4f10]
  425d3f:	dec    esi
  425d40:	push   cs
  425d41:	dec    ecx
  425d42:	in     al,dx
  425d43:	mov    ds:0x6c83ffec,al
  425d48:	xchg   ebx,eax
  425d49:	pop    esp
  425d4a:	sbb    cl,BYTE PTR ds:0x607fb713
  425d50:	imul   eax,DWORD PTR [edi+eiz*1],0xffffffb1
  425d54:	mov    al,BYTE PTR [esi]
  425d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d57:	popf   
  425d58:	sub    dl,BYTE PTR [esi]
  425d5a:	dec    eax
  425d5b:	pop    ds
  425d5c:	push   ecx
  425d5d:	aad    0x8f
  425d5f:	(bad)  
  425d60:	fnsave [ebp+0x23a50a14]
  425d66:	in     al,dx
  425d67:	ins    BYTE PTR es:[edi],dx
  425d68:	mov    dh,0x40
  425d6a:	sub    al,0x76
  425d6c:	push   0xffffff85
  425d6e:	sbb    eax,0x43480090
  425d73:	sub    bl,cl
  425d75:	mov    al,0x3d
  425d77:	dec    eax
  425d78:	mov    edi,0x6b6d8948
  425d7d:	stc    
  425d7e:	pop    es
  425d7f:	add    DWORD PTR [esi+0x6a3878a2],esp
  425d85:	shl    BYTE PTR [esi-0x2c0aaf8a],1
  425d8b:	sahf   
  425d8c:	mov    ?,WORD PTR [ebx-0x14]
  425d8f:	jl     0x425d2e
  425d91:	pop    edx
  425d92:	mov    ds:0x2c03d118,eax
  425d97:	sub    BYTE PTR [eax-0x43],bh
  425d9a:	rol    eax,0xf8
  425d9d:	in     al,0x61
  425d9f:	mov    eax,ds:0x2ef442ce
  425da4:	mov    bh,0x23
  425da6:	sbb    eax,0x46e2fe31
  425dab:	and    al,0x79
  425dad:	or     esi,DWORD PTR [esi+0x2f]
  425db0:	jl     0x425d95
  425db2:	mov    al,0xc5
  425db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425db5:	mov    cl,0x68
  425db7:	xor    bh,BYTE PTR [edx]
  425db9:	xchg   ebx,eax
  425dba:	pop    ecx
  425dbb:	mov    al,ds:0x270cec9c
  425dc0:	pop    esp
  425dc1:	nop
  425dc2:	je     0x425dd3
  425dc4:	sbb    BYTE PTR [ebp-0x25],0x3e
  425dc8:	js     0x425dab
  425dca:	or     eax,DWORD PTR [eax+0x3d]
  425dcd:	and    esi,DWORD PTR [edi+ebx*2-0x3e5b350b]
  425dd4:	gs mov al,0xd9
  425dd7:	in     al,0x6e
  425dd9:	inc    eax
  425dda:	dec    ebx
  425ddb:	lods   eax,DWORD PTR ds:[esi]
  425ddc:	adc    edx,0x65fdf9dc
  425de2:	loop   0x425d76
  425de4:	xchg   esp,eax
  425de5:	adc    DWORD PTR [ebx+0x5f],edx
  425de8:	push   edx
  425de9:	pop    edi
  425dea:	sar    BYTE PTR [ebx+0x1d],cl
  425ded:	push   ebp
  425dee:	push   ebp
  425def:	xor    cl,cl
  425df1:	cmp    eax,0x979454f1
  425df6:	(bad)  
  425df7:	push   esi
  425df8:	mov    ebp,0x594ed201
  425dfd:	idiv   ebx
  425dff:	sub    DWORD PTR [ecx+0x783126ae],edx
  425e05:	inc    edi
  425e06:	cdq    
  425e07:	int3   
  425e08:	or     ch,BYTE PTR [edi-0x25]
  425e0b:	stc    
  425e0c:	popa   
  425e0d:	sbb    ecx,DWORD PTR [ecx-0x2]
  425e10:	pop    edi
  425e11:	xchg   ebx,eax
  425e12:	hlt    
  425e13:	jns    0x425e1d
  425e15:	jle    0x425e22
  425e17:	out    0x27,al
  425e19:	js     0x425e2e
  425e1b:	xor    eax,0xdd601943
  425e20:	cdq    
  425e21:	lock xchg ecx,eax
  425e23:	mov    DWORD PTR [ebx+0x31],edi
  425e26:	daa    
  425e27:	mov    cl,BYTE PTR [eax-0x7e]
  425e2a:	fldcw  WORD PTR [ebx+0x5e]
  425e2d:	(bad)  
  425e2e:	cld    
  425e2f:	xor    ebx,ecx
  425e31:	xor    BYTE PTR [ebx-0x6],0x7b
  425e35:	icebp  
  425e36:	retf   
  425e37:	cld    
  425e38:	adc    al,0x79
  425e3a:	(bad)  
  425e3b:	outs   dx,BYTE PTR ds:[esi]
  425e3c:	dec    edi
  425e3d:	je     0x425e5b
  425e3f:	mov    ch,0xd6
  425e41:	add    DWORD PTR [eax],eax
  425e43:	call   0x48425e49
  425e48:	fs sbb dh,cl
  425e4b:	mov    ah,0x5e
  425e4d:	push   edi
  425e4e:	jle    0x425de4
  425e50:	je     0x425e8c
  425e52:	mov    al,0x34
  425e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e55:	xor    BYTE PTR [esi+0x30442bd0],ch
  425e5b:	in     eax,dx
  425e5c:	call   0xcb4e:0x18f07388
  425e63:	test   eax,0xc564c76a
  425e68:	mov    ds:0x30821077,eax
  425e6d:	or     BYTE PTR [edx+ebp*1+0x7b],0x72
  425e72:	add    eax,0xa9f98653
  425e77:	sar    DWORD PTR [edx],0x84
  425e7a:	jecxz  0x425ec0
  425e7c:	mov    dh,0x5e
  425e7e:	outs   dx,BYTE PTR ds:[esi]
  425e7f:	jo     0x425ef5
  425e81:	mov    esp,gs
  425e83:	pop    ecx
  425e84:	addr16 loope 0x425e63
  425e87:	test   al,0x35
  425e8a:	adc    eax,0x8205de2
  425e8f:	and    DWORD PTR [eax],edx
  425e91:	ins    DWORD PTR es:[edi],dx
  425e92:	imul   ebp,DWORD PTR [eax+0x3c],0x5bcc8bf1
  425e99:	push   es
  425e9a:	adc    cl,al
  425e9c:	out    0x74,al
  425e9e:	cmp    al,0xa3
  425ea0:	ins    BYTE PTR es:[edi],dx
  425ea1:	stos   DWORD PTR es:[edi],eax
  425ea2:	inc    eax
  425ea3:	dec    eax
  425ea4:	or     eax,0x577169d0
  425ea9:	lods   eax,DWORD PTR ds:[esi]
  425eaa:	mov    ah,0xe4
  425eac:	mov    bh,0x92
  425eae:	sbb    eax,0x5e509c44
  425eb3:	sahf   
  425eb4:	mov    al,0x16
  425eb6:	dec    ebx
  425eb7:	fs and dl,bh
  425eba:	sbb    DWORD PTR [esi+ecx*8],0xffffffb1
  425ebe:	call   0x295ca6ac
  425ec3:	shr    BYTE PTR [edi],1
  425ec5:	jp     0x425e79
  425ec7:	enter  0xf8a8,0x7f
  425ecb:	inc    esi
  425ecc:	imul   edi,DWORD PTR [ecx],0x9ca857aa
  425ed2:	sub    DWORD PTR [esi-0x4d2a130e],esp
  425ed8:	mov    edx,0x42a2089e
  425edd:	daa    
  425ede:	jp     0x425f28
  425ee0:	dec    ecx
  425ee1:	(bad)  
  425ee3:	idiv   DWORD PTR [eax+0x651a35b3]
  425ee9:	dec    ebx
  425eea:	xchg   ebx,eax
  425eeb:	call   0xca34:0x353770bd
  425ef2:	pop    ebp
  425ef3:	call   edx
  425ef5:	pop    ecx
  425ef6:	pop    es
  425ef7:	sub    BYTE PTR [esi-0x5],dl
  425efa:	bound  ebp,QWORD PTR [edx-0xa]
  425efd:	sbb    edx,DWORD PTR [esi]
  425eff:	jne    0x425e8a
  425f01:	repnz lods eax,DWORD PTR ds:[esi]
  425f03:	aas    
  425f04:	adc    bl,BYTE PTR [edi]
  425f06:	adc    DWORD PTR [eax],edi
  425f08:	and    ebx,DWORD PTR [ecx]
  425f0a:	ja     0x425f55
  425f0c:	xchg   ebp,eax
  425f0d:	jmp    0x4ebb328e
  425f12:	push   ebx
  425f13:	mul    DWORD PTR [eax]
  425f15:	fdivr  QWORD PTR [ecx+0x57b307fc]
  425f1b:	ret    0x533d
  425f1e:	out    0x53,al
  425f20:	adc    BYTE PTR [esi],dl
  425f22:	mov    ds:0x47fbfad,al
  425f27:	in     al,0x78
  425f29:	mov    edx,0x33ae5e54
  425f2e:	dec    BYTE PTR [eax-0x47eeda68]
  425f34:	jmp    0x2582331b
  425f39:	sar    DWORD PTR [esi],0x9
  425f3c:	sbb    DWORD PTR [ecx+ebx*8-0x516f234e],ebp
  425f43:	nop
  425f44:	or     DWORD PTR [edx],eax
  425f46:	xor    bh,bl
  425f48:	imul   edx,DWORD PTR [ebx+0x42],0x95307335
  425f4f:	mov    ds:0xb8dfa2e,al
  425f54:	(bad)
  425f58:	leave  
  425f59:	call   0x58a0:0x9366e046
  425f60:	ins    DWORD PTR es:[edi],dx
  425f61:	jnp    0x425fce
  425f63:	sbb    eax,0x4dbaab96
  425f68:	into   
  425f69:	lds    ebx,FWORD PTR [ecx-0x739cdcdb]
  425f6f:	fdiv   QWORD PTR [ebx]
  425f71:	mov    ch,0x8a
  425f73:	loope  0x425fc4
  425f75:	inc    ah
  425f77:	xchg   edx,eax
  425f78:	ret    0x9402
  425f7b:	jl     0x425ff9
  425f7d:	push   esp
  425f7e:	leave  
  425f7f:	fist   DWORD PTR ds:0x86e36c60
  425f85:	rol    BYTE PTR [ebx+0x52d4e8cb],0xc9
  425f8c:	inc    esi
  425f8d:	popa   
  425f8e:	or     DWORD PTR [esi-0x3eda1df4],ecx
  425f94:	lahf   
  425f95:	and    BYTE PTR [edi-0x156d0c87],ah
  425f9b:	mov    ah,0x9d
  425f9d:	jne    0x426018
  425f9f:	dec    ebx
  425fa0:	sbb    eax,DWORD PTR [esi]
  425fa2:	add    al,ch
  425fa4:	sti    
  425fa5:	jnp    0x425fd9
  425fa7:	cld    
  425fa8:	sub    BYTE PTR [edi+ebx*1+0x74],ah
  425fac:	dec    esi
  425fad:	cmc    
  425fae:	push   ebp
  425faf:	or     al,0xef
  425fb1:	stc    
  425fb2:	push   cs
  425fb3:	mov    es,WORD PTR [edx]
  425fb5:	or     esp,DWORD PTR [ecx+edx*8+0x7a]
  425fb9:	das    
  425fba:	xchg   esp,eax
  425fbb:	inc    DWORD PTR [eax]
  425fbd:	jmp    0x425fc1
  425fbf:	outs   dx,BYTE PTR ds:[esi]
  425fc0:	mov    eax,ds:0x69cb4597
  425fc5:	loopne 0x425f83
  425fc7:	fbld   TBYTE PTR [esi]
  425fc9:	xchg   ebx,eax
  425fca:	xor    dl,BYTE PTR [ecx]
  425fcc:	adc    DWORD PTR [eax-0x74fa4f14],edi
  425fd2:	jo     0x426041
  425fd4:	push   cs
  425fd5:	push   esp
  425fd6:	inc    edx
  425fd7:	mov    esp,0xe2f6a584
  425fdc:	repz xchg ecx,eax
  425fde:	repz xor DWORD PTR [edx],0x3be0725
  425fe5:	into   
  425fe6:	jmp    0x254aa177
  425feb:	pop    esi
  425fec:	out    dx,eax
  425fed:	fs std 
  425fef:	into   
  425ff0:	push   0x29
  425ff2:	mov    edi,0x53a1ced6
  425ff7:	add    edx,DWORD PTR [ebx]
  425ff9:	xchg   edi,eax
  425ffa:	push   ss
  425ffb:	ja     0x426038
  425ffd:	dec    edi
  425ffe:	sbb    BYTE PTR [esi+esi*4-0x219b47f3],0x3
  426006:	mul    ecx
  426008:	ror    DWORD PTR [eax],0xb0
  42600b:	clc    
  42600c:	jg     0x425f94
  42600e:	inc    eax
  42600f:	(bad)  
  426011:	loope  0x425fe0
  426013:	aaa    
  426014:	inc    esp
  426015:	dec    esp
  426016:	cld    
  426017:	pop    ds
  426018:	xor    dl,ah
  42601a:	fisttp QWORD PTR [ebp+0x29]
  42601d:	xor    esi,eax
  42601f:	xchg   ebx,eax
  426020:	dec    eax
  426021:	add    al,0x56
  426023:	outs   dx,BYTE PTR ds:[esi]
  426024:	in     al,dx
  426025:	loope  0x426023
  426027:	and    DWORD PTR [eax+ebx*8-0x10],ecx
  42602b:	imul   edi,DWORD PTR [esi+esi*4],0x75
  42602f:	mul    ebp
  426031:	lahf   
  426032:	jp     0x425fd3
  426034:	jp     0x42602d
  426036:	in     eax,dx
  426037:	xor    al,dl
  426039:	xor    cl,ch
  42603b:	cwde   
  42603c:	inc    esp
  42603d:	stc    
  42603e:	mov    ebp,0x1d89d
  426043:	call   0x55426049
  426048:	push   0x64
  42604a:	pop    edi
  42604b:	push   ss
  42604c:	push   cs
  42604d:	into   
  42604e:	jg     0x425fde
  426050:	and    BYTE PTR [edx+0x249a0e6],cl
  426056:	mov    ah,0x9a
  426058:	adc    BYTE PTR [esi-0x6c250b95],0xc
  42605f:	mov    dh,0xf6
  426061:	jmp    0xba3c:0x8a946f75
  426068:	dec    eax
  426069:	xchg   eax,esi
  42606b:	push   edi
  42606c:	stos   BYTE PTR es:[edi],al
  42606d:	ficomp DWORD PTR [ecx+0x21]
  426070:	adc    al,0xc0
  426072:	pavgb  mm6,QWORD PTR [ecx-0x9e6cb9e]
  426079:	ret    0x4715
  42607c:	push   ebx
  42607d:	xchg   DWORD PTR [eax+edx*4],edx
  426080:	add    DWORD PTR [edi+0x1b37f986],edx
  426086:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426088:	mov    cl,0xa7
  42608a:	addr16 mov cl,0xdc
  42608d:	repz lds ebp,FWORD PTR [eax+0x4109e063]
  426094:	jp     0x42601f
  426096:	push   0x62c99b03
  42609b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42609c:	xchg   DWORD PTR [edx-0x4dbfb88f],ebp
  4260a2:	sbb    BYTE PTR [ebx-0x310ec547],dh
  4260a8:	sbb    al,0x5f
  4260aa:	int3   
  4260ab:	xor    al,0xc2
  4260ad:	pop    ds
  4260ae:	inc    edi
  4260af:	call   0xa9c5:0xc2cbca40
  4260b6:	push   es
  4260b7:	mov    ch,dl
  4260b9:	push   edx
  4260ba:	mov    ebx,DWORD PTR [esi]
  4260bc:	retf   0xcca1
  4260bf:	imul   DWORD PTR ds:0xb4976010
  4260c5:	iret   
  4260c6:	aas    
  4260c7:	pop    esi
  4260c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260c9:	outs   dx,BYTE PTR ds:[esi]
  4260ca:	pusha  
  4260cb:	pop    ds
  4260cc:	into   
  4260cd:	xchg   BYTE PTR [esi+0x64b0d18b],ch
  4260d3:	mov    ebx,0x5e107937
  4260d8:	pop    ecx
  4260d9:	add    eax,0xda69044b
  4260de:	adc    DWORD PTR [ebx],eax
  4260e0:	pop    esp
  4260e1:	add    DWORD PTR [ecx-0x3b874399],eax
  4260e7:	dec    edi
  4260e8:	es push esi
  4260ea:	mov    cs:0xc62bb657,eax
  4260f0:	stos   DWORD PTR es:[edi],eax
  4260f1:	dec    ebx
  4260f2:	bound  esi,QWORD PTR [eax+0x339c261f]
  4260f8:	pop    ebp
  4260f9:	mov    edi,0x870733d9
  4260fe:	mov    cl,0x33
  426100:	and    bl,BYTE PTR [edx-0x3b]
  426103:	push   edx
  426104:	jmp    0x19cd8af3
  426109:	push   es
  42610a:	call   0x9ffe6a62
  42610f:	and    eax,0x669f08dc
  426114:	push   ds
  426115:	(bad)  
  426116:	in     al,dx
  426117:	(bad)  
  426119:	pop    ds
  42611a:	add    bl,BYTE PTR [edx]
  42611c:	xchg   ebp,eax
  42611d:	ret    0x591a
  426120:	jns    0x426171
  426122:	popf   
  426123:	iret   
  426124:	push   0xffffffb8
  426126:	xor    BYTE PTR [edi+eiz*2-0x474cb774],bh
  42612d:	leave  
  42612e:	sub    ch,ah
  426130:	mov    ebp,0xbb849493
  426135:	fist   DWORD PTR [edx+edx*8]
  426138:	adc    bl,BYTE PTR [esp+ebp*1-0x76]
  42613c:	and    DWORD PTR [esi],0xffffffa0
  42613f:	dec    edi
  426140:	add    eax,0x97f406af
  426145:	pop    eax
  426146:	imul   edi,esp,0x6f
  426149:	scas   al,BYTE PTR es:[edi]
  42614a:	hlt    
  42614b:	(bad)  [edi+0x37]
  42614e:	rol    DWORD PTR [esi+ecx*4-0x5485cc81],0x52
  426156:	imul   edi,DWORD PTR [ecx+eax*8],0x7173042e
  42615d:	xor    ebx,0x68
  426160:	xchg   cx,ax
  426162:	mov    cl,BYTE PTR [edx+0x14]
  426165:	test   eax,0x13c8fc4b
  42616a:	sar    BYTE PTR [ebx],cl
  42616c:	lahf   
  42616d:	push   ebx
  42616e:	pop    edi
  42616f:	cs xor al,0xe6
  426172:	xor    eax,0x1f64241
  426177:	arpl   WORD PTR gs:[esi-0x256943d4],ax
  42617e:	test   DWORD PTR [edx-0x57],esp
  426181:	mov    dl,0x1b
  426183:	test   al,0x6b
  426185:	call   FWORD PTR ds:0x48abaf69
  42618b:	mov    BYTE PTR [edi+0x31],dl
  42618e:	fcmovnbe st,st(1)
  426190:	dec    edi
  426191:	and    BYTE PTR [edx],ah
  426193:	push   cs
  426194:	shl    DWORD PTR [edi-0x72],cl
  426197:	xchg   ebx,eax
  426198:	xor    eax,0x53ebf76b
  42619d:	jge    0x4261df
  42619f:	push   esp
  4261a0:	xor    bh,cl
  4261a2:	aaa    
  4261a3:	sub    BYTE PTR [ebp-0x1a],al
  4261a6:	bsr    ebp,DWORD PTR [ebx-0x34]
  4261aa:	mov    dl,0xed
  4261ac:	js     0x426208
  4261ae:	hlt    
  4261af:	jl     0x4261b2
  4261b1:	test   al,0xf8
  4261b3:	inc    esi
  4261b4:	jecxz  0x42617b
  4261b6:	mov    ebx,0x4d8615e6
  4261bb:	out    dx,al
  4261bc:	adc    esi,DWORD PTR ds:0x6378cc7f
  4261c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261c3:	out    0x2a,eax
  4261c5:	adc    al,0xf6
  4261c7:	stos   BYTE PTR es:[edi],al
  4261c8:	push   ds
  4261c9:	jmp    0xd2ea6532
  4261ce:	(bad)  
  4261cf:	pop    esp
  4261d0:	fwait
  4261d1:	shl    ecx,cl
  4261d3:	pop    esp
  4261d4:	cmp    ebp,DWORD PTR [edi+0xd]
  4261d7:	and    al,0xbc
  4261d9:	xchg   esp,eax
  4261da:	rcl    DWORD PTR ds:0x9ff9acbf,1
  4261e0:	sub    DWORD PTR [eax-0x27],ebx
  4261e3:	xchg   edi,eax
  4261e4:	rcr    BYTE PTR [eax+0x66],1
  4261e7:	jl     0x426241
  4261e9:	bnd jno 0x426170
  4261ec:	pusha  
  4261ed:	cwde   
  4261ee:	fstp   st(1)
  4261f0:	fiadd  WORD PTR [edi+0x45f502df]
  4261f6:	sar    esi,0x87
  4261f9:	stc    
  4261fa:	xor    al,0x7
  4261fc:	push   edi
  4261fd:	sbb    al,0x36
  426200:	inc    cx
  426202:	mov    bh,BYTE PTR [eax-0x6c]
  426205:	push   ecx
  426206:	int    0x53
  426208:	das    
  426209:	and    BYTE PTR [ecx+0x37707fa7],0xd6
  426210:	jmp    0x42619d
  426212:	adc    esp,edx
  426214:	aad    0x9c
  426216:	push   DWORD PTR [ebx+0xd]
  426219:	mov    DWORD PTR [esi+ebp*2+0x69],edx
  42621d:	ret    
  42621e:	mov    cl,0xbe
  426220:	or     DWORD PTR [ebp+0x6c7386a1],edx
  426226:	in     eax,0xa7
  426228:	dec    esi
  426229:	mov    al,0xe4
  42622b:	adc    eax,0x6b727d1f
  426230:	(bad)  
  426234:	jge    0x426235
  426236:	lahf   
  426237:	loope  0x426240
  426239:	adc    al,0x86
  42623b:	mov    ebp,0x85a91364
  426240:	fiadd  DWORD PTR [ecx]
  426242:	add    al,ch
  426244:	add    DWORD PTR [eax],eax
  426246:	add    BYTE PTR ds:0x33fffcfd,dh
  42624c:	mov    edx,0xe87deddf
  426251:	sub    eax,0xdf2eb6a5
  426256:	fimul  DWORD PTR [edx]
  426258:	jne    0x426244
  42625a:	(bad)  
  42625b:	cld    
  42625c:	fmul   st,st(5)
  42625e:	jmp    0x426248
  426260:	or     BYTE PTR ds:0x3f3eff6d,0xfd
  426267:	loop   0x426263
  426269:	clc    
  42626a:	jnp    0x426245
  42626c:	test   DWORD PTR [esi-0x3e],ecx
  42626f:	shr    BYTE PTR [esi+0x7f7e63cf],0x53
  426276:	adc    DWORD PTR [edx+0x771732d2],edi
  42627c:	add    eax,0x6c5ce9f9
  426281:	das    
  426282:	jge    0x426301
  426284:	das    
  426285:	mov    ebp,0x4f38a4f8
  42628a:	rol    BYTE PTR [eax],0x89
  42628d:	dec    eax
  42628e:	inc    esi
  42628f:	aaa    
  426290:	bnd jge 0x426239
  426293:	scas   al,BYTE PTR es:[edi]
  426294:	imul   edx,eax,0x832737e4
  42629a:	jne    0x426230
  42629c:	ins    BYTE PTR es:[edi],dx
  42629d:	jmp    0x4262a5
  42629f:	pop    es
  4262a0:	mov    dl,0x40
  4262a2:	push   cs
  4262a3:	addr16 mov ch,0x4b
  4262a6:	repz push edi
  4262a8:	je     0x4262e1
  4262aa:	cwde   
  4262ab:	inc    esp
  4262ac:	xorps  xmm0,xmm7
  4262af:	addr16 mov ebx,0x6720b772
  4262b5:	adc    BYTE PTR [ebp-0x24],al
  4262b8:	shl    DWORD PTR [eax-0x394f53f8],cl
  4262be:	xlat   BYTE PTR ds:[ebx]
  4262bf:	inc    esp
  4262c0:	aaa    
  4262c1:	adc    ebx,DWORD PTR [eax+0x4e]
  4262c4:	push   esp
  4262c5:	retf   
  4262c6:	mov    esp,0xd2067162
  4262cb:	pop    eax
  4262cc:	push   ds
  4262cd:	cmp    BYTE PTR es:[ebp-0x665faf80],0x18
  4262d5:	mov    edx,0x77a76b85
  4262da:	sbb    cl,bl
  4262dc:	mov    al,ds:0xad3114f6
  4262e1:	or     al,0x7
  4262e3:	rcr    DWORD PTR [edx-0x1ca906cb],cl
  4262e9:	pusha  
  4262ea:	add    eax,0x48cafb88
  4262ef:	cdq    
  4262f0:	and    al,0x9a
  4262f2:	cmp    al,0x1
  4262f4:	or     al,0xc3
  4262f6:	rcr    BYTE PTR [edi-0x725c95b9],1
  4262fc:	adc    al,0xd7
  4262fe:	push   ebx
  4262ff:	inc    ebx
  426300:	cmp    DWORD PTR [esi],esi
  426302:	and    DWORD PTR [ebp-0x5],ebx
  426305:	pop    esp
  426306:	push   cs
  426307:	cmp    al,0x34
  426309:	(bad)  
  42630a:	jl     0x4262a9
  42630c:	mov    ebx,0x140ca5c9
  426311:	(bad)  
  426312:	adc    al,0xc4
  426314:	mov    BYTE PTR [ebp-0x153987d2],ch
  42631a:	sbb    bh,bh
  42631c:	inc    ebp
  42631d:	mov    bl,0x92
  42631f:	push   ds
  426320:	(bad)  
  426321:	jmp    0x185061e9
  426326:	les    edi,FWORD PTR [eax-0x7ca62e38]
  42632c:	sbb    BYTE PTR [ebp-0x57],0xbf
  426330:	sub    eax,0x5f764d87
  426335:	inc    edi
  426336:	sar    DWORD PTR [edx-0x626dff5f],cl
  42633c:	bound  eax,QWORD PTR [edi-0x6f]
  42633f:	mov    edi,0x32d085e1
  426344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426345:	lahf   
  426346:	es jge 0x4262f4
  426349:	pop    ebp
  42634a:	and    DWORD PTR [ebx+0x1479fcec],edx
  426350:	jbe    0x42637e
  426352:	xchg   esp,eax
  426353:	pop    eax
  426354:	outs   dx,BYTE PTR ds:[esi]
  426355:	fcomp  DWORD PTR [esi-0x1c190741]
  42635b:	stos   DWORD PTR es:[edi],eax
  42635c:	ds inc edx
  42635e:	retf   0x452e
  426361:	dec    ecx
  426362:	dec    eax
  426363:	in     eax,dx
  426364:	pusha  
  426365:	sub    bh,al
  426367:	pop    eax
  426368:	aaa    
  426369:	xchg   ebx,eax
  42636a:	pushf  
  42636b:	les    eax,FWORD PTR [eax+0x3593af01]
  426371:	jg     0x42638a
  426373:	rcr    BYTE PTR [ebx],cl
  426375:	xchg   BYTE PTR [edx+edi*4+0x4c],dh
  426379:	dec    esp
  42637a:	sbb    BYTE PTR [esi-0x28],bl
  42637d:	sahf   
  42637e:	imul   esi,DWORD PTR [edi-0xca34fbc],0x6d0f88e4
  426388:	push   edx
  426389:	jge    0x426338
  42638b:	xchg   bh,dl
  42638d:	rol    ah,0x74
  426390:	fmul   DWORD PTR [eax]
  426392:	sbb    DWORD PTR [edx-0x175ea239],ebx
  426398:	or     BYTE PTR [eax+0x3b],dh
  42639b:	xor    al,0xf9
  42639d:	pusha  
  42639e:	daa    
  42639f:	xchg   esp,eax
  4263a0:	repz scas eax,DWORD PTR es:[edi]
  4263a2:	das    
  4263a3:	jb     0x426338
  4263a5:	pmaddwd mm0,mm6
  4263a8:	dec    edi
  4263a9:	(bad)  
  4263aa:	or     BYTE PTR [eax+0x4a],cl
  4263ad:	mov    ah,0xec
  4263af:	add    al,0xb0
  4263b1:	inc    ebx
  4263b2:	sahf   
  4263b3:	push   0xf4440bf2
  4263b8:	fcom   DWORD PTR [edx]
  4263ba:	rol    bh,1
  4263bc:	mov    BYTE PTR [ecx+ebx*4-0x4d5ac157],ch
  4263c3:	dec    edx
  4263c4:	xchg   edi,eax
  4263c5:	sub    ebx,DWORD PTR [ecx+0x4e798b8c]
  4263cb:	pushf  
  4263cc:	test   DWORD PTR [edi],eax
  4263ce:	mov    ecx,0x85fbee2b
  4263d3:	or     dl,al
  4263d5:	mov    gs,esp
  4263d7:	jb     0x426426
  4263d9:	sbb    BYTE PTR [ebx+0x52],bh
  4263dc:	push   es
  4263dd:	add    bl,bl
  4263df:	stc    
  4263e0:	dec    ebx
  4263e1:	jo     0x4263f3
  4263e3:	sbb    DWORD PTR [ebp-0x236a06e1],edx
  4263e9:	(bad)  
  4263ea:	retf   
  4263eb:	test   DWORD PTR [edx],ebx
  4263ed:	mov    cl,0x1f
  4263ef:	and    al,0x88
  4263f1:	cmp    al,0x12
  4263f3:	int3   
  4263f4:	mov    bh,0x2
  4263f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263f7:	inc    ebx
  4263f8:	or     esi,ebp
  4263fa:	(bad)  ds:0xf9be952b
  426400:	scas   al,BYTE PTR es:[edi]
  426401:	push   ecx
  426402:	adc    eax,0xfba28bf9
  426407:	popa   
  426408:	xchg   esp,eax
  426409:	paddd  mm3,QWORD PTR [esi+0x5392534e]
  426410:	ret    0x80ea
  426413:	test   eax,0xf2b2a2dc
  426418:	ds dec ecx
  42641a:	shl    esp,1
  42641c:	push   ecx
  42641d:	rol    DWORD PTR [edx],1
  42641f:	add    eax,0xbed14263
  426424:	mov    bl,0x5d
  426426:	jle    0x426439
  426428:	sub    eax,0xe394fb6e
  42642d:	in     eax,0x56
  42642f:	push   ebp
  426430:	push   0xffffffe6
  426432:	mov    bl,0xff
  426434:	mov    edi,0xa2aee55
  426439:	idiv   DWORD PTR [eax]
  42643b:	std    
  42643c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42643d:	outs   dx,DWORD PTR ds:[esi]
  42643e:	aad    0x6d
  426440:	fadd   QWORD PTR [ecx]
  426442:	add    al,ch
  426444:	add    DWORD PTR [eax],eax
  426446:	add    BYTE PTR [esi+ebx*2],bh
  426449:	retf   
  42644a:	mov    dh,0x2e
  42644c:	out    dx,eax
  42644d:	jb     0x4264b6
  42644f:	imul   eax,DWORD PTR [eax+0x7691d3f1],0x990bac08
  426459:	mov    dh,0xbb
  42645b:	das    
  42645c:	hlt    
  42645d:	dec    edi
  42645e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42645f:	push   ebx
  426460:	loop   0x426418
  426462:	stc    
  426463:	jle    0x4264db
  426465:	or     ah,BYTE PTR ds:0xeb39dd73
  42646b:	inc    di
  42646d:	shl    BYTE PTR [ecx+0x1931015],0xee
  426474:	mov    al,0xa5
  426476:	sub    ah,BYTE PTR [ebp-0x80]
  426479:	and    al,0x2d
  42647b:	repnz mov edi,0xedaa86f8
  426481:	mov    edx,0x7a3f817b
  426486:	mov    ss,esi
  426488:	mov    eax,ds:0x8c3f1730
  42648d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42648e:	sub    bl,BYTE PTR [ebp+0x68]
  426491:	pop    ss
  426492:	add    dh,BYTE PTR ds:0x4f04bb44
  426498:	xor    BYTE PTR [esi-0x5e1d1a37],bh
  42649e:	loopne 0x426473
  4264a0:	jb     0x4264ab
  4264a2:	sti    
  4264a3:	cwde   
  4264a4:	ins    DWORD PTR es:[edi],dx
  4264a5:	stos   BYTE PTR es:[edi],al
  4264a6:	ins    BYTE PTR es:[edi],dx
  4264a7:	sub    eax,0x925fc5dc
  4264ac:	mov    ah,0x9d
  4264ae:	dec    ebp
  4264af:	into   
  4264b0:	pop    esi
  4264b1:	out    0x66,al
  4264b3:	data16 xor bh,bl
  4264b6:	fild   DWORD PTR [edi-0x1d]
  4264b9:	cmp    BYTE PTR [ebx+edi*2-0x31057fa9],dh
  4264c0:	jge    0x42651b
  4264c2:	pop    ebp
  4264c3:	jno    0x426524
  4264c5:	cmc    
  4264c6:	cmc    
  4264c7:	push   esp
  4264c8:	inc    ecx
  4264c9:	scas   eax,DWORD PTR es:[edi]
  4264ca:	mov    edi,DWORD PTR [edx]
  4264cc:	scas   eax,DWORD PTR es:[edi]
  4264cd:	sahf   
  4264ce:	cmp    al,0x24
  4264d0:	retf   
  4264d1:	or     bh,BYTE PTR [edx]
  4264d3:	sub    BYTE PTR [edi+edx*8],bh
  4264d6:	les    si,DWORD PTR [edi+ebp*1-0x61]
  4264db:	jle    0x4264c6
  4264dd:	add    ebp,DWORD PTR [esi+0x632a00d8]
  4264e3:	test   eax,0x53736824
  4264e8:	jno    0x42653e
  4264ea:	shl    DWORD PTR [esi+0x2ddfbbf],1
  4264f0:	(bad)  
  4264f1:	xlat   BYTE PTR ds:[ebx]
  4264f2:	or     eax,0xf52388cf
  4264f7:	lahf   
  4264f8:	sbb    DWORD PTR [edi+0x3cc61848],0x8124493b
  426502:	sub    BYTE PTR [edi],bh
  426504:	scas   eax,DWORD PTR es:[edi]
  426505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426506:	mov    cl,0x26
  426508:	pop    ebx
  426509:	int    0xf8
  42650b:	daa    
  42650c:	cli    
  42650d:	mov    ah,0xe7
  42650f:	popf   
  426510:	mov    ebp,0x46b381ab
  426515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426516:	test   eax,0x88c7760c
  42651b:	rol    BYTE PTR [esi+0x20eb4341],0x21
  426522:	pop    ss
  426523:	xor    BYTE PTR [esi+ebx*1],dh
  426526:	mov    esp,0x8af54ef3
  42652b:	mov    dl,0xc1
  42652d:	sbb    bh,BYTE PTR [eax-0x65]
  426530:	enter  0x3128,0xa0
  426534:	cdq    
  426535:	and    ebx,esp
  426537:	or     al,0x41
  426539:	adc    BYTE PTR [ecx],ch
  42653b:	mov    esi,0x5fcdc10f
  426540:	mov    ah,0x44
  426542:	repnz loopne 0x4265c4
  426545:	mov    DWORD PTR [eax-0x54],ebx
  426548:	xchg   ebp,eax
  426549:	fnstsw WORD PTR [ebp-0x4]
  42654c:	es aas 
  42654e:	out    0xd5,al
  426550:	xchg   esp,eax
  426551:	adc    cl,BYTE PTR [esi+0x2d]
  426554:	xor    DWORD PTR [ebp-0x15],ebp
  426557:	cdq    
  426558:	jne    0x426546
  42655a:	arpl   WORD PTR [ebx+0x7d],di
  42655d:	cmp    bh,BYTE PTR [eax]
  42655f:	test   eax,0xb029e958
  426564:	adc    al,0xbe
  426566:	add    DWORD PTR ds:0xf5082974,edi
  42656c:	pop    ss
  42656d:	out    dx,al
  42656e:	aam    0x11
  426570:	pop    edi
  426571:	sub    BYTE PTR [ebp-0x30],dh
  426574:	dec    edi
  426575:	lea    ecx,[edi+0x6f50cacf]
  42657b:	out    dx,al
  42657c:	sub    ah,BYTE PTR [esi+0x710ffa5e]
  426582:	cmp    BYTE PTR ds:0xdda73c38,al
  426588:	add    eax,0x3f7d213f
  42658d:	jno    0x4265b8
  42658f:	add    dl,bl
  426591:	sub    eax,DWORD PTR [ebp-0x5e3b0868]
  426597:	adc    eax,0x9d2bd65b
  42659c:	mov    edx,0x3b9b1872
  4265a1:	adc    ebx,edx
  4265a3:	cmp    BYTE PTR [eax],dl
  4265a5:	cmp    BYTE PTR [esi-0x72eb5a64],0xd2
  4265ac:	cmp    bh,BYTE PTR [edi]
  4265ae:	sbb    al,0xd5
  4265b0:	enter  0xd2e9,0x1f
  4265b4:	mov    al,ds:0xa24c5029
  4265b9:	pop    ds
  4265ba:	xlat   BYTE PTR ds:[ebx]
  4265bb:	retf   
  4265bc:	mov    edx,0xa65ff603
  4265c1:	(bad)  
  4265c2:	xchg   ecx,eax
  4265c3:	xor    bx,bp
  4265c6:	shl    DWORD PTR ds:0xc6c778dc,0xb
  4265cd:	xchg   ebp,eax
  4265ce:	jne    0x426596
  4265d0:	adc    al,0xfc
  4265d2:	ds mov BYTE PTR fs:[eax],dl
  4265d6:	ja     0x42663f
  4265d8:	mov    al,0x8f
  4265da:	jb     0x426653
  4265dc:	test   BYTE PTR [edx-0x67a5bd72],dl
  4265e2:	xchg   esp,eax
  4265e3:	xchg   BYTE PTR [ecx],ah
  4265e5:	mov    esp,0x85ae4580
  4265ea:	cmp    eax,0x7b5d6e
  4265ef:	or     BYTE PTR [eax+0x626198b0],ch
  4265f5:	jp     0x4265eb
  4265f7:	outs   dx,BYTE PTR ds:[esi]
  4265f8:	jmp    0x5344d721
  4265fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265fe:	sbb    al,0x9b
  426600:	adc    cl,dl
  426602:	aam    0x62
  426604:	push   0x59ee4b24
  426609:	and    ebp,DWORD PTR [ebp+0x3bfa84b1]
  42660f:	dec    ecx
  426610:	push   edx
  426611:	adc    dl,BYTE PTR [esp+ecx*2]
  426614:	inc    esp
  426615:	retf   0x4185
  426618:	in     al,0xe7
  42661a:	loop   0x4265e3
  42661c:	dec    ebp
  42661d:	icebp  
  42661e:	ds mov eax,0x1cf6dc92
  426624:	and    al,0x46
  426626:	lea    eax,[ebx+0x21ed8707]
  42662c:	popa   
  42662d:	fmul   QWORD PTR [eax-0x2494e272]
  426633:	sti    
  426634:	(bad)  
  426635:	mov    esi,0xa4979b5d
  42663a:	adc    ebx,DWORD PTR [ebx-0x67]
  42663d:	out    dx,eax
  42663e:	pop    edx
  42663f:	push   ebp
  426640:	fiadd  WORD PTR [ecx]
  426642:	add    al,ch
  426644:	add    DWORD PTR [eax],eax
  426646:	add    BYTE PTR [edi+0x2ddf437b],dl
  42664c:	sbb    eax,ecx
  42664e:	jmp    0x5447:0xa80434ec
  426655:	pop    ds
  426656:	sub    al,0x4d
  426658:	test   eax,0x3bf800b6
  42665d:	sub    DWORD PTR [ebp-0x29],edx
  426660:	cld    
  426661:	jmp    0x310e:0x706f1778
  426668:	push   ecx
  426669:	retf   
  42666a:	sbb    al,BYTE PTR [ebx+0x657101b5]
  426670:	(bad)  
  426671:	loopne 0x42666c
  426673:	cmp    DWORD PTR ds:0xdb51b216,edx
  426679:	clc    
  42667a:	or     BYTE PTR [ecx+ebp*2-0x1f],bl
  42667e:	es mov ch,0xf0
  426681:	mov    edi,gs
  426683:	je     0x426691
  426685:	mov    dl,0x3f
  426687:	pop    ebx
  426688:	addr16 out dx,al
  42668a:	dec    esp
  42668b:	ds (bad) 
  42668d:	pusha  
  42668e:	jb     0x42661a
  426690:	daa    
  426691:	mov    cl,0xef
  426693:	movaps xmm5,XMMWORD PTR [edi-0x6c5ad248]
  42669a:	daa    
  42669b:	imul   esi,ebp,0x3d5ec6b0
  4266a1:	push   ebp
  4266a2:	and    ah,BYTE PTR [edi-0x4c4398a2]
  4266a8:	shr    BYTE PTR [ebp-0x66b2b485],1
  4266ae:	dec    esi
  4266af:	adc    eax,0x13e2f8d7
  4266b4:	and    BYTE PTR [eax+0x480f674f],dl
  4266ba:	sbb    DWORD PTR [eax+0x3],edi
  4266bd:	adc    ebx,DWORD PTR [ebx]
  4266bf:	loop   0x426714
  4266c1:	sub    al,0x61
  4266c3:	fisttp DWORD PTR ds:0xddb133b8
  4266c9:	sub    esp,eax
  4266cb:	inc    esp
  4266cc:	mov    cs,WORD PTR [edx]
  4266ce:	pusha  
  4266cf:	shr    DWORD PTR [eax],0x85
  4266d2:	pop    edx
  4266d3:	push   ecx
  4266d4:	rol    esp,0x4a
  4266d7:	nop
  4266d8:	scas   al,BYTE PTR es:[edi]
  4266d9:	mov    dh,0xbf
  4266db:	mov    cl,0xb6
  4266dd:	or     eax,0x644527f
  4266e2:	jne    0x4266f1
  4266e4:	pop    edx
  4266e5:	inc    ebp
  4266e6:	inc    eax
  4266e7:	neg    DWORD PTR [edx+0x48]
  4266ea:	cdq    
  4266eb:	cld    
  4266ec:	and    al,0x4b
  4266ee:	gs aas 
  4266f0:	sar    BYTE PTR [edx-0x16],cl
  4266f3:	test   DWORD PTR [edi],edx
  4266f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266f6:	nop
  4266f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266f8:	jnp    0x426728
  4266fa:	push   edx
  4266fb:	stos   DWORD PTR es:[edi],eax
  4266fc:	pop    esp
  4266fd:	xor    DWORD PTR [edx+ebp*8+0x51],edx
  426701:	fmul   st(3),st
  426703:	xchg   esi,eax
  426704:	stos   BYTE PTR es:[edi],al
  426705:	mov    bl,0x78
  426707:	inc    ecx
  426708:	call   0x50af2cd2
  42670d:	mov    esi,0xf2307dc2
  426712:	jae    0x4266de
  426714:	and    eax,0x847afd1a
  426719:	and    al,0x66
  42671b:	ins    DWORD PTR es:[edi],dx
  42671c:	pop    eax
  42671d:	sbb    al,BYTE PTR es:0x4a2bb2cc
  426724:	sub    al,0xef
  426726:	das    
  426727:	pushf  
  426728:	jo     0x42673f
  42672a:	sub    al,0x48
  42672c:	(bad)  
  42672e:	popa   
  42672f:	test   BYTE PTR [edx-0x349181e1],ah
  426735:	or     dl,bl
  426737:	pop    ebp
  426738:	icebp  
  426739:	add    bl,BYTE PTR [edi+ecx*2-0x69]
  42673d:	sbb    ecx,DWORD PTR [edi-0x29db5611]
  426743:	push   eax
  426744:	lds    ebx,FWORD PTR fs:[esi]
  426747:	mov    cl,ch
  426749:	pop    es
  42674a:	mov    eax,0x9f837bee
  42674f:	sub    DWORD PTR [eax+0x20],eax
  426752:	cld    
  426753:	out    0xb5,eax
  426755:	scas   al,BYTE PTR es:[edi]
  426756:	jae    0x42673f
  426758:	repz xchg esp,eax
  42675a:	mov    dh,0xad
  42675c:	jno    0x426752
  42675e:	dec    ebp
  42675f:	jle    0x4267b5
  426761:	dec    eax
  426762:	mov    al,0x54
  426764:	sbb    ecx,DWORD PTR [ebx]
  426766:	jg     0x4267c4
  426768:	mov    esp,0x362dcc5e
  42676d:	aaa    
  42676e:	mov    edx,0xb0259026
  426773:	xlat   BYTE PTR ds:[ebx]
  426774:	dec    esp
  426775:	push   ebp
  426776:	push   edx
  426777:	pop    ss
  426778:	dec    edx
  426779:	mov    ebp,edi
  42677b:	bound  esp,QWORD PTR [esi+ecx*4+0x32]
  42677f:	aam    0x11
  426781:	inc    ebx
  426782:	xchg   edx,eax
  426783:	adc    al,0xb0
  426785:	test   DWORD PTR ds:0x31e4dd3,ecx
  42678b:	addr16 mov dl,0xa6
  42678e:	sbb    al,0x23
  426790:	or     BYTE PTR [edx],cl
  426792:	xchg   BYTE PTR [ecx+ecx*1+0x7],bl
  426796:	mov    ebx,0xdd70a18d
  42679b:	fsub   QWORD PTR [ecx+edx*4]
  42679e:	lock and ecx,edx
  4267a1:	sti    
  4267a2:	inc    ebp
  4267a3:	mov    al,ds:0xeae176fb
  4267a8:	mov    eax,ds:0x10e1da44
  4267ad:	jg     0x426785
  4267af:	cld    
  4267b0:	inc    eax
  4267b1:	inc    ebp
  4267b2:	jl     0x4267f8
  4267b4:	call   0x2ecb:0x71ab811e
  4267bb:	in     eax,0x4a
  4267bd:	sbb    BYTE PTR [eax+edi*2-0x6ac5c67f],bl
  4267c4:	or     BYTE PTR [ebp-0x57080696],ch
  4267ca:	push   ecx
  4267cb:	cmp    BYTE PTR [edi],0xc2
  4267ce:	jns    0x426758
  4267d0:	inc    esi
  4267d1:	mov    edi,0x46b18881
  4267d6:	xlat   BYTE PTR ds:[ebx]
  4267d7:	xchg   DWORD PTR [ebx+ebp*8-0x7c725b6b],ebx
  4267de:	cmc    
  4267df:	cmc    
  4267e0:	nop
  4267e1:	js     0x42685a
  4267e3:	inc    esp
  4267e4:	repz in al,dx
  4267e6:	ret    
  4267e7:	or     eax,0x97e78930
  4267ec:	fnstcw WORD PTR [ecx+0x38]
  4267ef:	lock jmp 0xc59d:0x2ce93068
  4267f7:	mov    ecx,0x3c6950e1
  4267fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267fd:	stos   DWORD PTR es:[edi],eax
  4267fe:	add    bl,cl
  426800:	loop   0x426847
  426802:	and    al,0xe5
  426804:	int3   
  426805:	out    0xfa,eax
  426807:	out    dx,al
  426808:	je     0x4267f8
  42680a:	in     al,dx
  42680b:	add    bp,WORD PTR [eax]
  42680e:	xchg   esp,eax
  42680f:	or     dh,BYTE PTR [ebx-0x24]
  426812:	mov    BYTE PTR ds:0x2c20d8c0,dl
  426818:	mov    DWORD PTR [ebx+0x739d834c],ebp
  42681e:	xchg   edi,eax
  42681f:	push   es
  426820:	scas   eax,DWORD PTR es:[edi]
  426821:	or     al,0x17
  426823:	mov    es,ecx
  426825:	int    0x47
  426827:	lock push es
  426829:	adc    DWORD PTR [ebp-0x8],ebx
  42682c:	mov    ah,0x4e
  42682e:	ins    BYTE PTR es:[edi],dx
  42682f:	imul   edi,DWORD PTR [esi-0x480049c5],0x2b83ffed
  426839:	scas   al,BYTE PTR es:[edi]
  42683a:	shl    BYTE PTR ds:[ebp+edi*1+0x61],0x3d
  426840:	loopne 0x426843
  426842:	add    al,ch
  426844:	add    DWORD PTR [eax],eax
  426846:	add    BYTE PTR [esi-0x71],bl
  426849:	into   
  42684a:	pop    edi
  42684b:	out    dx,al
  42684c:	push   ss
  42684d:	ret    0xb62c
  426850:	(bad)  
  426851:	mov    esp,edi
  426853:	or     BYTE PTR [edx+0x6a],bh
  426856:	adc    ch,bh
  426858:	sbb    edi,DWORD PTR [ebp-0x1ea193e4]
  42685e:	gs xchg esi,eax
  426860:	add    esi,DWORD PTR [ebx+0x662e2224]
  426866:	cmp    eax,0x2c249af9
  42686b:	mov    WORD PTR [eax],ss
  42686d:	sti    
  42686e:	xchg   edi,eax
  42686f:	cwde   
  426870:	retf   
  426871:	fdivp  st(3),st
  426873:	iret   
  426874:	push   esi
  426875:	in     al,0x83
  426877:	popf   
  426878:	ret    0x9d6c
  42687b:	ins    DWORD PTR es:[edi],dx
  42687c:	mov    esp,DWORD PTR [edx-0x7893cb04]
  426882:	stos   DWORD PTR es:[edi],eax
  426883:	inc    ecx
  426884:	scas   eax,DWORD PTR es:[edi]
  426885:	xor    ecx,edi
  426887:	test   BYTE PTR [edi],0x41
  42688a:	pop    ss
  42688b:	xchg   edi,eax
  42688c:	inc    esp
  42688d:	jle    0x426880
  42688f:	or     eax,0x9526d13a
  426894:	adc    BYTE PTR [ebx],dh
  426896:	sub    BYTE PTR [ebx+0x18],bl
  426899:	dec    edi
  42689a:	xor    al,0x78
  42689c:	mov    bl,0xd7
  42689e:	mov    esp,0x142fe9ab
  4268a3:	jbe    0x4268dc
  4268a5:	(bad)  [eax]
  4268a7:	mov    ds:0x8b59f399,eax
  4268ac:	lds    esp,FWORD PTR [edi]
  4268ae:	(bad)  
  4268af:	push   0x3b
  4268b1:	add    ah,cl
  4268b3:	and    esp,edx
  4268b5:	jle    0x4268e6
  4268b7:	inc    eax
  4268b8:	jmp    0x88dd:0x559daff1
  4268bf:	sub    BYTE PTR [eax-0x3a],ch
  4268c2:	leave  
  4268c3:	into   
  4268c4:	pusha  
  4268c5:	jmp    0x42687a
  4268c7:	sub    edx,DWORD PTR [esi+0x3c]
  4268ca:	xchg   ebx,eax
  4268cb:	jp     0x4268a4
  4268cd:	fcomp  st(1)
  4268cf:	cmp    DWORD PTR [ebp+ecx*8+0x74],esp
  4268d3:	jg     0x426936
  4268d5:	mov    bh,0x15
  4268d7:	mov    edx,0x4dab39ae
  4268dc:	cli    
  4268dd:	pop    es
  4268de:	push   edi
  4268df:	push   cs
  4268e0:	push   0xf650bdbf
  4268e5:	repnz fwait
  4268e7:	mov    eax,ds:0x111560d2
  4268ec:	mov    dh,0xca
  4268ee:	out    dx,eax
  4268ef:	add    esp,DWORD PTR [edi]
  4268f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268f2:	sbb    ah,dh
  4268f4:	sbb    al,0xd
  4268f6:	pop    es
  4268f7:	add    al,bh
  4268f9:	cmp    al,0x10
  4268fb:	or     eax,0xad83fb94
  426900:	dec    ebx
  426901:	jge    0x426930
  426903:	jecxz  0x42696d
  426905:	imul   BYTE PTR [ebx]
  426907:	(bad)  [edx+0x7]
  42690a:	fild   WORD PTR [esp+eax*4+0x3e05ee7]
  426911:	int    0x3c
  426913:	std    
  426914:	fwait
  426915:	out    0xb6,eax
  426917:	not    BYTE PTR [edx]
  426919:	push   ds
  42691a:	ins    DWORD PTR es:[di],dx
  42691c:	retf   
  42691d:	mov    dl,0x13
  42691f:	xchg   BYTE PTR [edx-0x7],cl
  426922:	xor    bh,BYTE PTR [ebx]
  426924:	aaa    
  426925:	xchg   DWORD PTR [ebx],ecx
  426927:	pushf  
  426928:	mov    edx,0xeac3d82e
  42692d:	push   edi
  42692e:	je     0x4268ce
  426930:	push   cs
  426931:	sub    ebp,DWORD PTR [eax-0x3f]
  426934:	int    0xf0
  426936:	cmp    al,0x50
  426938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426939:	jb     0x426926
  42693b:	and    BYTE PTR [esi-0x540f7661],bl
  426941:	add    DWORD PTR ds:0xc3ff8e1e,0xffffffc5
  426948:	rep lods al,BYTE PTR ds:[esi]
  42694a:	dec    ecx
  42694b:	and    eax,0x4d5473e
  426950:	gs data16 test al,0xb
  426954:	(bad)  
  426956:	mov    ebp,0xd1446ab9
  42695b:	add    bl,dl
  42695d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695e:	mov    dh,0xaa
  426960:	push   ecx
  426961:	inc    edi
  426962:	xor    cl,BYTE PTR [edx+0x29]
  426965:	add    al,0xd3
  426967:	push   ebx
  426968:	add    al,0x90
  42696a:	dec    ecx
  42696b:	jle    0x426930
  42696d:	imul   esi,DWORD PTR [ebx],0xb6aeb9a
  426973:	sbb    eax,0xb4b75d74
  426978:	or     dl,BYTE PTR [ebx-0x55]
  42697b:	rol    DWORD PTR [ebx+ecx*8-0x3b9d9c0c],cl
  426982:	shl    BYTE PTR [eax-0x54bcf1b],cl
  426988:	lock and ebx,ebp
  42698b:	and    bl,BYTE PTR [edi-0x58a01e5d]
  426991:	mov    WORD PTR [esp+ebx*2-0x7e],cs
  426995:	ret    
  426996:	repnz bound ebp,QWORD PTR [ebx+0x0]
  42699a:	or     al,0xfd
  42699c:	in     al,0xab
  42699e:	sub    al,0x63
  4269a0:	(bad)  
  4269a1:	mov    ah,0x93
  4269a3:	enter  0xd0b6,0xfc
  4269a7:	aas    
  4269a8:	add    ch,BYTE PTR [ebx-0x4deef2f]
  4269ae:	jmp    0x401c:0x98631124
  4269b5:	and    BYTE PTR [esi-0xe4a52a0],cl
  4269bb:	shr    BYTE PTR [esi+edi*4+0x41f70207],1
  4269c2:	pop    es
  4269c3:	or     al,0x36
  4269c5:	not    DWORD PTR [esi+0x3d]
  4269c8:	xchg   esi,eax
  4269c9:	mov    esi,0x54499da2
  4269ce:	mov    edi,0x920dfe25
  4269d3:	push   cs
  4269d4:	lock or eax,0xb647444a
  4269da:	or     dh,ah
  4269dc:	pop    edx
  4269dd:	out    dx,eax
  4269de:	xchg   esi,eax
  4269df:	push   ds
  4269e0:	xor    ebp,DWORD PTR [edx-0x76]
  4269e3:	je     0x426a45
  4269e5:	inc    eax
  4269e6:	xor    al,0xc0
  4269e8:	or     BYTE PTR [ebx+ebx*1],0x6c
  4269ec:	pop    edi
  4269ed:	std    
  4269ee:	or     al,BYTE PTR [esi-0x71ef9341]
  4269f4:	test   DWORD PTR [esp+ebp*1+0x2e989082],esi
  4269fb:	scas   al,BYTE PTR es:[edi]
  4269fc:	call   0xf931a8f4
  426a01:	in     al,0x6c
  426a03:	into   
  426a04:	(bad)  
  426a05:	cdq    
  426a06:	cdq    
  426a07:	mov    DWORD PTR [esi+0x2e],ecx
  426a0a:	xor    ebx,ebx
  426a0c:	repnz pop ds
  426a0e:	nop
  426a0f:	loopne 0x4269e2
  426a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a12:	xchg   DWORD PTR [edi-0x69],ebp
  426a15:	js     0x426a3b
  426a17:	dec    edx
  426a18:	stos   BYTE PTR es:[edi],al
  426a19:	mov    gs,WORD PTR [ebp-0x32b17f0a]
  426a1f:	lds    esp,FWORD PTR [edx-0x38691e00]
  426a25:	pusha  
  426a26:	imul   ecx,DWORD PTR [eax],0xbf274e26
  426a2c:	dec    ebp
  426a2d:	lods   eax,DWORD PTR ds:[esi]
  426a2e:	jle    0x426a1b
  426a30:	dec    eax
  426a31:	or     al,0xc7
  426a33:	scas   eax,DWORD PTR es:[edi]
  426a34:	(bad)  
  426a35:	jmp    0x426aa3
  426a37:	arpl   WORD PTR [ebx+edx*4+0x50889948],bx
  426a3e:	cmp    DWORD PTR ds:0xe80001e2,esp
  426a44:	add    DWORD PTR [eax],eax
  426a46:	add    BYTE PTR [ecx],al
  426a48:	sub    DWORD PTR [edi+eiz*4-0x22e2a455],0xfffffffd
  426a50:	aaa    
  426a51:	mul    esp
  426a53:	push   edi
  426a54:	test   DWORD PTR [ebx-0x58],ecx
  426a57:	popf   
  426a58:	jb     0x426a36
  426a5a:	pop    edx
  426a5b:	mov    ds:0x933c97b6,eax
  426a60:	push   esi
  426a61:	cwde   
  426a62:	mov    ch,BYTE PTR [eax+0x20]
  426a65:	push   ebx
  426a66:	push   ebx
  426a67:	xor    DWORD PTR [ecx+0x8],ebp
  426a6a:	je     0x426ac0
  426a6c:	aam    0xf1
  426a6e:	sub    BYTE PTR [ecx-0x7694c232],ah
  426a74:	cmp    ebp,DWORD PTR [ecx+edi*4]
  426a77:	or     DWORD PTR [esi],ebp
  426a79:	retf   
  426a7a:	mov    cs,WORD PTR [ebp+esi*1+0x1084e7f5]
  426a81:	jge    0x426acd
  426a83:	mov    BYTE PTR [edx+0x406fef40],0x2a
  426a8a:	leave  
  426a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a8c:	in     al,dx
  426a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a8e:	push   edi
  426a8f:	shl    DWORD PTR [eax+0x7e],0xe2
  426a93:	shl    DWORD PTR [edx+ebp*8-0x6a61ef1b],1
  426a9a:	(bad)  
  426a9b:	and    eax,0x6d82b725
  426aa0:	icebp  
  426aa1:	pop    es
  426aa2:	mov    al,0x79
  426aa4:	scas   al,BYTE PTR es:[edi]
  426aa5:	add    ch,bh
  426aa7:	adc    BYTE PTR [edi],ah
  426aa9:	(bad)  
  426aaa:	jne    0x426acb
  426aac:	das    
  426aad:	ins    BYTE PTR es:[edi],dx
  426aae:	lahf   
  426aaf:	xor    al,0x89
  426ab1:	mov    eax,ds:0x6e072357
  426ab6:	out    0x28,eax
  426ab8:	cmp    ch,BYTE PTR [eax+0x59]
  426abb:	inc    eax
  426abc:	jmp    0x426aa2
  426abe:	cdq    
  426abf:	add    al,BYTE PTR [esi]
  426ac1:	inc    edi
  426ac2:	pop    edx
  426ac3:	mov    al,ds:0xf72c2756
  426ac8:	shl    ah,0xf5
  426acb:	adc    DWORD PTR [ecx-0x4f],0xf0fac09d
  426ad2:	sbb    al,0x4e
  426ad4:	push   edx
  426ad5:	out    dx,eax
  426ad6:	call   0x3a2e:0x3ccdba03
  426add:	enter  0x8019,0xe9
  426ae1:	inc    ebp
  426ae2:	jns    0x426b58
  426ae4:	pop    eax
  426ae5:	in     al,dx
  426ae6:	(bad)  
  426ae7:	std    
  426ae8:	mov    ecx,0x6c813589
  426aed:	rcl    esi,cl
  426aef:	punpckhwd mm1,QWORD PTR [esi-0x3d]
  426af3:	push   ebx
  426af4:	fld    DWORD PTR [ebp+0x63296290]
  426afa:	pusha  
  426afb:	jg     0x426b1d
  426afd:	lfs    eax,FWORD PTR [edi+0x3959b88]
  426b04:	dec    ebp
  426b05:	push   ds
  426b06:	xchg   DWORD PTR [ebx-0x1820716f],eax
  426b0c:	mov    ebx,0xbd743ee7
  426b11:	(bad)  
  426b12:	pushf  
  426b13:	repnz mov ch,0xb0
  426b16:	aas    
  426b17:	mov    bh,0x4e
  426b19:	pop    eax
  426b1a:	aam    0xac
  426b1c:	push   ss
  426b1d:	adc    dl,ah
  426b1f:	cmp    edx,edx
  426b21:	jp     0x426b5c
  426b23:	in     al,0x8b
  426b25:	cmp    BYTE PTR es:[esi-0x21],ch
  426b29:	(bad)  
  426b2a:	sar    ch,1
  426b2c:	std    
  426b2d:	scas   eax,DWORD PTR es:[edi]
  426b2e:	pop    ebx
  426b2f:	sub    eax,0x9e7d4677
  426b34:	sub    DWORD PTR [eax-0x23b1faa],esi
  426b3a:	inc    esp
  426b3c:	ins    BYTE PTR es:[edi],dx
  426b3d:	icebp  
  426b3e:	mov    ecx,0x4c8542bf
  426b43:	xor    ah,0x5c
  426b46:	and    DWORD PTR [eax],ebx
  426b48:	cmp    DWORD PTR [ecx+0x36212e95],esp
  426b4e:	jmp    0x7685:0x3a5e8250
  426b55:	mov    ebp,0x8b999d98
  426b5a:	out    0x89,al
  426b5c:	pop    eax
  426b5d:	xchg   ecx,eax
  426b5e:	fld    QWORD PTR [ebx+0x12aebeb2]
  426b64:	add    al,0xf7
  426b66:	sbb    ecx,ebx
  426b68:	pop    es
  426b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b6a:	adc    bl,BYTE PTR [ebx]
  426b6c:	in     al,0xbb
  426b6e:	stc    
  426b6f:	push   eax
  426b70:	adc    ebx,ecx
  426b72:	cmp    BYTE PTR [edx+0x47],bh
  426b75:	popa   
  426b76:	les    bx,DWORD PTR [esi+0x52]
  426b7a:	and    BYTE PTR [edi+0x39fdd9de],bh
  426b80:	cli    
  426b81:	shl    ch,0xca
  426b84:	inc    esp
  426b85:	ins    BYTE PTR es:[edi],dx
  426b86:	or     BYTE PTR [eax],ah
  426b88:	mov    ah,0x4f
  426b8a:	cmp    BYTE PTR [edi-0x44],ah
  426b8d:	inc    esp
  426b8e:	cmp    esp,ecx
  426b90:	fwait
  426b91:	dec    esi
  426b92:	xchg   esi,eax
  426b93:	mov    gs,WORD PTR [ecx-0x30fc1f10]
  426b99:	sti    
  426b9a:	(bad)  [ebx]
  426b9c:	outs   dx,DWORD PTR ds:[esi]
  426b9d:	sub    dl,BYTE PTR [ebp-0x38]
  426ba0:	fistp  QWORD PTR [esi]
  426ba2:	mov    esp,0xfc092d1c
  426ba7:	dec    ebx
  426ba8:	sub    al,0x4
  426baa:	or     al,0x59
  426bac:	mov    esp,0x13714f7c
  426bb1:	in     eax,dx
  426bb2:	dec    ebp
  426bb3:	ret    0xd1c8
  426bb6:	sbb    ah,BYTE PTR [esi-0x10]
  426bb9:	lahf   
  426bba:	xchg   al,dl
  426bbc:	add    bh,BYTE PTR [ecx+ebx*8+0x7676850c]
  426bc3:	push   0x39
  426bc5:	scas   al,BYTE PTR es:[edi]
  426bc6:	pop    eax
  426bc7:	fmul   DWORD PTR [edx]
  426bc9:	push   ebx
  426bca:	sbb    eax,DWORD PTR [ebx-0x21]
  426bcd:	sahf   
  426bce:	pop    esi
  426bcf:	xor    BYTE PTR [edx+0x6c809b0f],ah
  426bd5:	mov    ah,0x47
  426bd7:	pop    es
  426bd8:	inc    eax
  426bd9:	(bad)  
  426bda:	stc    
  426bdb:	stos   DWORD PTR es:[edi],eax
  426bdc:	xchg   ebp,eax
  426bdd:	and    bh,cl
  426bdf:	jl     0x426b70
  426be1:	jbe    0x426c4f
  426be3:	jmp    0xe3d6:0xa1a109ca
  426bea:	sbb    ebx,ecx
  426bec:	out    dx,eax
  426bed:	call   0x6ff93f2b
  426bf2:	lea    ecx,[edx]
  426bf4:	push   edi
  426bf5:	out    0x4b,eax
  426bf7:	addr16 pop ecx
  426bf9:	fwait
  426bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bfb:	(bad)  
  426bff:	and    edx,DWORD PTR [esi+eiz*1-0x47896c0f]
  426c06:	jns    0x426c1f
  426c08:	retf   
  426c09:	dec    esp
  426c0a:	pop    ecx
  426c0b:	enter  0xe87c,0x7a
  426c0f:	add    al,0x64
  426c11:	in     eax,dx
  426c12:	scas   al,BYTE PTR es:[edi]
  426c13:	sub    DWORD PTR [esi-0x77],eax
  426c16:	pusha  
  426c17:	jbe    0x426bb3
  426c19:	xor    al,0x3
  426c1b:	dec    ecx
  426c1c:	adc    eax,0x2602a0d8
  426c21:	cwde   
  426c22:	inc    ecx
  426c23:	arpl   WORD PTR [ebp+eiz*8-0x62],bx
  426c27:	adc    ebp,DWORD PTR [esi-0x6]
  426c2a:	cld    
  426c2b:	nop
  426c2c:	jle    0x426bc3
  426c2e:	icebp  
  426c2f:	in     al,dx
  426c30:	test   BYTE PTR [eax-0x5f],ah
  426c33:	push   0xd0cdede5
  426c38:	imul   ebp,DWORD PTR [ebx],0x16476603
  426c3e:	lahf   
  426c3f:	or     eax,0xe80001e4
  426c44:	add    DWORD PTR [eax],eax
  426c46:	add    BYTE PTR [esi],al
  426c48:	xchg   ebx,eax
  426c49:	or     ecx,DWORD PTR [edi]
  426c4b:	jno    0x426bfa
  426c4d:	gs jmp 0x426bd5
  426c50:	xchg   DWORD PTR ss:[ebp-0x20],esp
  426c54:	mov    al,0x3f
  426c56:	in     eax,0xb6
  426c58:	push   es
  426c59:	std    
  426c5a:	shr    DWORD PTR [ebp-0x4a],cl
  426c5d:	cwde   
  426c5e:	or     BYTE PTR [edx],dh
  426c60:	mov    ah,0x93
  426c62:	xchg   ebx,eax
  426c63:	push   0x73
  426c65:	mov    dh,0xe9
  426c67:	xchg   ebp,eax
  426c68:	call   0x1a13:0x616d0457
  426c6f:	outs   dx,BYTE PTR ds:[esi]
  426c70:	xchg   DWORD PTR [edx+0x20],esp
  426c73:	fsub   QWORD PTR [esi-0x1]
  426c76:	arpl   bp,cx
  426c78:	mov    eax,0x810d45fb
  426c7d:	gs fcom st(3)
  426c80:	and    BYTE PTR [ecx],bl
  426c82:	cmp    BYTE PTR [ecx],0x50
  426c85:	lahf   
  426c86:	mov    dh,0x60
  426c88:	sbb    al,0xce
  426c8a:	rdtsc  
  426c8c:	retf   
  426c8d:	inc    eax
  426c8e:	call   0xfab0:0xf347c9fb
  426c95:	push   ebp
  426c96:	out    0xb9,al
  426c98:	lods   al,BYTE PTR ds:[esi]
  426c99:	pushf  
  426c9a:	adc    ah,BYTE PTR [eax-0x50dd9c6e]
  426ca0:	addr16 dec esp
  426ca2:	adc    al,BYTE PTR [edi-0x4563a2aa]
  426ca8:	mov    esp,0x4549cfca
  426cad:	mov    al,0x5b
  426caf:	add    BYTE PTR [ecx],0xd7
  426cb2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426cb4:	in     al,dx
  426cb5:	(bad)  [esi-0x5db1bb9b]
  426cbb:	das    
  426cbc:	retf   0xcc74
  426cbf:	mov    bh,BYTE PTR [edx]
  426cc1:	ins    BYTE PTR es:[edi],dx
  426cc2:	push   ebp
  426cc3:	mov    BYTE PTR [edi],cl
  426cc5:	pop    ss
  426cc6:	xor    esp,DWORD PTR [edi+eax*4+0x3ced291]
  426ccd:	sar    esi,cl
  426ccf:	add    bl,0x5d
  426cd2:	and    esp,0x36
  426cd5:	adc    BYTE PTR [ebx],0xe2
  426cd8:	ja     0x426c83
  426cda:	mov    ds:0x61022f5,al
  426cdf:	jae    0x426d38
  426ce1:	sti    
  426ce2:	shl    BYTE PTR [edx+0x60344c0d],0x7d
  426ce9:	bndstx gs:[edi+0x122e06af],bnd2
  426cf1:	dec    esi
  426cf2:	adc    al,dl
  426cf4:	pop    ds
  426cf5:	sbb    eax,0x587cebbd
  426cfa:	icebp  
  426cfb:	and    eax,0xf6abf584
  426d00:	adc    ch,BYTE PTR [esi+0x2c]
  426d03:	fisttp WORD PTR [edi+0x26]
  426d06:	sub    ebp,DWORD PTR [ebp-0x194075b9]
  426d0c:	ins    DWORD PTR es:[edi],dx
  426d0d:	jp     0x426cb2
  426d0f:	sbb    al,0x91
  426d11:	push   ds
  426d12:	bound  edi,QWORD PTR [esi-0x4a]
  426d15:	adc    esp,DWORD PTR ds:0xc8b1b4a6
  426d1b:	cmp    dl,dl
  426d1d:	push   ds
  426d1e:	cmc    
  426d1f:	mov    ds:0x8ecf084d,eax
  426d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d25:	xor    BYTE PTR ds:0x66f890fd,ch
  426d2b:	shl    BYTE PTR [ecx-0x46],1
  426d2e:	mov    fs,WORD PTR [edi-0x91584b1]
  426d34:	sub    ebx,esi
  426d36:	push   0x58e5a7e0
  426d3b:	fcom   DWORD PTR [edi]
  426d3d:	test   eax,0x403ede3
  426d42:	fsubr  QWORD PTR [edx+0x294a062d]
  426d48:	dec    eax
  426d49:	ss stos BYTE PTR es:[edi],al
  426d4b:	jle    0x426d8f
  426d4d:	call   0x86c8:0x6ca397ba
  426d54:	js     0x426da7
  426d56:	or     ecx,ebx
  426d58:	fsub   QWORD PTR [ecx-0x49]
  426d5b:	rcr    bh,1
  426d5d:	push   ecx
  426d5e:	pop    edi
  426d5f:	cmp    al,0x5
  426d61:	inc    eax
  426d62:	call   0xb2fd7278
  426d67:	cli    
  426d68:	int    0x2c
  426d6a:	lea    ebx,[edx-0x21]
  426d6d:	xchg   DWORD PTR [ebx],ebx
  426d6f:	test   eax,0x199d8438
  426d74:	inc    esi
  426d75:	icebp  
  426d76:	fnsave [ebx+0x69]
  426d79:	rol    DWORD PTR [ebp+0x22],0x70
  426d7d:	shl    edi,1
  426d7f:	add    esp,DWORD PTR [edi]
  426d81:	pop    es
  426d82:	mov    al,ds:0x5f47477e
  426d87:	into   
  426d88:	cld    
  426d89:	lds    esp,FWORD PTR [ebp-0x12a57fe0]
  426d8f:	ins    BYTE PTR es:[edi],dx
  426d90:	and    eax,0x9e18b0e2
  426d95:	mov    dl,0xde
  426d97:	loope  0x426d2a
  426d99:	mov    ah,0x85
  426d9b:	xor    BYTE PTR [ecx-0x3e4ef078],bl
  426da1:	mov    dl,0xa
  426da3:	mov    ds:0xb7a317d2,al
  426da8:	fcmove st,st(6)
  426daa:	hlt    
  426dab:	sahf   
  426dac:	fsub   QWORD PTR [edx+0x1f2fdae1]
  426db2:	mov    bh,0x5
  426db4:	mov    ds:0xe7fb5a41,al
  426db9:	push   0x425c0cd7
  426dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426dbf:	inc    ecx
  426dc0:	mov    dl,dh
  426dc2:	retf   
  426dc3:	in     eax,dx
  426dc4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426dc6:	mov    ebx,0xff5b7445
  426dcb:	out    dx,al
  426dcc:	fwait
  426dcd:	push   ebp
  426dce:	sub    eax,0x556912e9
  426dd3:	stc    
  426dd4:	nop
  426dd5:	push   esi
  426dd6:	ret    0xb10a
  426dd9:	stos   BYTE PTR es:[edi],al
  426dda:	mov    ds:0x14d937ed,eax
  426ddf:	outs   dx,DWORD PTR ds:[esi]
  426de0:	lock cli 
  426de2:	dec    ebx
  426de3:	(bad)  
  426de5:	mov    eax,0x7ddda7dd
  426dea:	sbb    DWORD PTR [ecx],esp
  426dec:	fiadd  WORD PTR [edi]
  426dee:	sbb    DWORD PTR [ecx],ecx
  426df0:	jnp    0x426d9e
  426df2:	das    
  426df3:	repnz test al,0x5c
  426df6:	popf   
  426df7:	mov    cl,0x36
  426df9:	sub    BYTE PTR [esi-0x4ef2ff80],cl
  426dff:	(bad)  
  426e00:	sbb    DWORD PTR [eax],ebx
  426e02:	test   DWORD PTR [ebp+0x3bdd4891],eax
  426e08:	lods   eax,DWORD PTR ds:[esi]
  426e09:	js     0x426db9
  426e0b:	bound  esi,QWORD PTR [eax-0x1e]
  426e0e:	imul   eax
  426e10:	add    al,0xb
  426e12:	aam    0x47
  426e14:	pop    ebx
  426e15:	sbb    DWORD PTR [edi+0x7d],ebp
  426e18:	out    0xde,eax
  426e1a:	(bad)  
  426e1b:	inc    eax
  426e1c:	iret   
  426e1d:	jnp    0x426e5e
  426e1f:	ror    BYTE PTR [ebp+0x3e774787],cl
  426e25:	ins    DWORD PTR es:[edi],dx
  426e26:	scas   eax,DWORD PTR es:[edi]
  426e27:	rcr    DWORD PTR [esi],cl
  426e29:	scas   al,BYTE PTR es:[edi]
  426e2a:	mov    al,ds:0x2d6ff860
  426e2f:	pop    edx
  426e30:	push   ecx
  426e31:	leave  
  426e32:	popf   
  426e33:	retf   
  426e34:	popf   
  426e35:	pop    esi
  426e36:	xlat   BYTE PTR ds:[ebx]
  426e37:	aaa    
  426e38:	add    bl,ch
  426e3a:	arpl   WORD PTR [ecx-0xa2f50fe],sp
  426e40:	in     eax,0x1
  426e42:	add    al,ch
  426e44:	add    DWORD PTR [eax],eax
  426e46:	add    BYTE PTR ds:0x7e6ef96b,dh
  426e4c:	sub    eax,0x9e925437
  426e51:	mov    esp,0x7cc5bd89
  426e56:	xchg   esi,eax
  426e57:	rol    dh,1
  426e59:	xor    dl,cl
  426e5b:	mov    dl,0x83
  426e5d:	push   esi
  426e5e:	mov    eax,0x85259712
  426e63:	mov    edi,0x88dc4bf2
  426e68:	(bad)  
  426e69:	(bad)  
  426e6a:	out    dx,al
  426e6b:	out    dx,al
  426e6c:	or     ebx,0x3a
  426e6f:	(bad)  
  426e70:	out    dx,al
  426e71:	or     al,0x88
  426e73:	inc    edx
  426e74:	jns    0x426e0f
  426e76:	push   edi
  426e77:	test   BYTE PTR [esi+esi*2],dh
  426e7a:	test   al,0xb4
  426e7c:	dec    ecx
  426e7d:	push   es
  426e7e:	mov    ebp,fs
  426e80:	pop    edx
  426e81:	push   DWORD PTR [ecx]
  426e83:	jae    0x426ead
  426e85:	test   BYTE PTR [edx-0x4d],cl
  426e88:	popa   
  426e89:	aam    0xbe
  426e8b:	adc    eax,edx
  426e8d:	retf   
  426e8e:	sbb    BYTE PTR [eax],ah
  426e90:	lods   eax,DWORD PTR ds:[esi]
  426e91:	mov    ebp,0x15f9d95a
  426e96:	jae    0x426e96
  426e98:	hlt    
  426e99:	call   FWORD PTR [ebp-0xc2e2446]
  426e9f:	scas   al,BYTE PTR es:[edi]
  426ea0:	nop
  426ea1:	cwde   
  426ea2:	mov    al,ds:0x54c9640
  426ea7:	cmc    
  426ea8:	in     eax,0xf2
  426eaa:	jo     0x426f15
  426eac:	or     DWORD PTR [edi-0x5ee76302],esi
  426eb2:	xor    ecx,ebx
  426eb4:	dec    eax
  426eb5:	sti    
  426eb6:	loope  0x426ea0
  426eb8:	mov    ebx,DWORD PTR [eax+0x3f445bc2]
  426ebe:	push   edi
  426ebf:	push   ecx
  426ec0:	les    ecx,FWORD PTR [ebp+0x30]
  426ec3:	pop    es
  426ec4:	mov    bl,0x8f
  426ec6:	mov    eax,ds:0x8167741d
  426ecb:	leave  
  426ecc:	push   edx
  426ecd:	push   ebx
  426ece:	cmp    al,0xf3
  426ed0:	or     DWORD PTR [eax],esp
  426ed2:	stos   BYTE PTR es:[edi],al
  426ed3:	xchg   edx,eax
  426ed4:	push   ebx
  426ed5:	mul    BYTE PTR [eax+0x30bcfddb]
  426edb:	mov    esp,0x97067e91
  426ee0:	loopne 0x426f55
  426ee2:	ins    BYTE PTR es:[edi],dx
  426ee3:	loopne 0x426ef6
  426ee5:	les    edi,FWORD PTR [ecx+0x511b22b5]
  426eeb:	pop    ebx
  426eec:	xchg   ecx,eax
  426eed:	fbld   TBYTE PTR [ecx]
  426eef:	stos   DWORD PTR es:[edi],eax
  426ef0:	sbb    dl,ch
  426ef2:	or     eax,0x71b959d
  426ef7:	and    DWORD PTR [ebx],ecx
  426ef9:	push   es
  426efa:	loopne 0x426e80
  426efc:	cmp    edi,DWORD PTR [edx-0x4f445f0]
  426f02:	mov    eax,0x17eb71aa
  426f07:	arpl   cx,si
  426f09:	dec    eax
  426f0a:	fwait
  426f0b:	pop    ebx
  426f0c:	cmp    al,0x81
  426f0e:	clc    
  426f0f:	outs   dx,DWORD PTR ds:[esi]
  426f10:	fcmovu st,st(7)
  426f12:	out    0xb2,al
  426f14:	daa    
  426f15:	sub    eax,0x8cfe2ac6
  426f1a:	cmc    
  426f1b:	jnp    0x426ef4
  426f1d:	sub    DWORD PTR [edi+0x63f2176c],esp
  426f23:	out    dx,eax
  426f24:	jmp    0x46d4:0x916b4acf
  426f2b:	retf   
  426f2c:	fmul   QWORD PTR [ecx]
  426f2e:	jo     0x426ec6
  426f30:	pusha  
  426f31:	push   edi
  426f32:	call   0xcd65931
  426f37:	aam    0xb
  426f39:	jmp    0xd381:0xdc76f5ed
  426f40:	enter  0x4ee6,0x34
  426f44:	add    ebp,edi
  426f46:	sub    BYTE PTR [eax-0x3c],cl
  426f49:	jecxz  0x426fb7
  426f4b:	in     eax,dx
  426f4c:	push   cs
  426f4d:	stos   DWORD PTR es:[edi],eax
  426f4e:	pop    es
  426f4f:	push   ebp
  426f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f51:	fs out 0x3b,al
  426f54:	mov    DWORD PTR [edi-0x6aec9ac],ecx
  426f5a:	sbb    eax,0xaafa96ed
  426f5f:	and    bh,BYTE PTR [edx+0x66]
  426f62:	inc    ebp
  426f63:	lea    ecx,[edi+eiz*2-0x35b1dfc9]
  426f6a:	fist   DWORD PTR [edx+0x4be6d69a]
  426f70:	loope  0x426f01
  426f72:	add    DWORD PTR ds:0x88704334,edi
  426f78:	lods   al,BYTE PTR ds:[esi]
  426f79:	repnz push eax
  426f7b:	call   0xbe9cda1
  426f80:	ins    DWORD PTR es:[edi],dx
  426f81:	jno    0x426fef
  426f83:	dec    ecx
  426f84:	push   cs
  426f85:	lods   al,BYTE PTR ds:[esi]
  426f86:	dec    ebp
  426f87:	scas   al,BYTE PTR es:[edi]
  426f88:	mov    fs,WORD PTR [edx-0x7c8334f7]
  426f8e:	jmp    0x426f60
  426f90:	xchg   BYTE PTR [edi+0x23],bl
  426f93:	or     cl,BYTE PTR [ebx+edx*1-0x1f]
  426f97:	push   edx
  426f98:	out    0x88,al
  426f9a:	and    eax,0xf2062c55
  426f9f:	outs   dx,DWORD PTR ds:[esi]
  426fa0:	jo     0x426fdc
  426fa2:	aaa    
  426fa3:	(bad)  
  426fa4:	es in  al,dx
  426fa6:	pop    ebx
  426fa7:	pop    ebx
  426fa8:	sbb    al,0xb2
  426faa:	pop    ebx
  426fab:	push   ebx
  426fac:	mov    ebp,0x6adbb883
  426fb1:	popa   
  426fb2:	cwde   
  426fb3:	cmp    DWORD PTR ds:0xcb4a5466,esi
  426fb9:	das    
  426fba:	jge    0x426f75
  426fbc:	jle    0x1a4f47f1
  426fc2:	jecxz  0x427021
  426fc4:	jle    0x426fa7
  426fc6:	repz adc dh,BYTE PTR [ecx-0x3793c5bf]
  426fcd:	ret    
  426fce:	test   al,0xc2
  426fd0:	enter  0xf828,0xd1
  426fd4:	mov    edx,0x38e157b1
  426fd9:	jmp    0x97e3:0x2eca97c8
  426fe0:	test   BYTE PTR [esi-0x67],dh
  426fe3:	ret    
  426fe4:	adc    ecx,DWORD PTR [ebp-0x4a]
  426fe7:	xchg   edx,eax
  426fe8:	push   ecx
  426fe9:	xchg   esp,eax
  426fea:	jbe    0x426f92
  426fec:	sbb    eax,0x99b7029
  426ff1:	pop    ebp
  426ff2:	dec    ecx
  426ff3:	sti    
  426ff4:	test   eax,0xe4eaa9ef
  426ff9:	retf   0x8530
  426ffc:	sub    edx,DWORD PTR [edx-0xf6fe5ae]
  427002:	xchg   ebx,eax
  427003:	xlat   BYTE PTR ds:[ebx]
  427004:	inc    edx
  427005:	lock fs cmp eax,0x7db5596f
  42700c:	out    dx,al
  42700d:	and    ebx,DWORD PTR [esi-0x444e7c09]
  427013:	enter  0x6494,0x5e
  427017:	aas    
  427018:	out    0xa8,al
  42701a:	les    esi,FWORD PTR [edx+eax*2]
  42701d:	add    ecx,DWORD PTR [eax]
  42701f:	mov    esi,0xbdf1ce88
  427024:	popf   
  427025:	jecxz  0x426ffa
  427027:	div    esi
  427029:	inc    esi
  42702a:	pop    eax
  42702b:	dec    ecx
  42702c:	dec    eax
  42702d:	popa   
  42702e:	test   al,0x1a
  427030:	call   0x3e4cc0
  427035:	pop    edi
  427036:	out    dx,al
  427037:	and    ebp,DWORD PTR [ebx+0x9685a1b]
  42703d:	aam    0x57
  42703f:	fucom  st(7)
  427041:	add    DWORD PTR [eax],eax
  427043:	call   0xa9427049
  427048:	xor    DWORD PTR [eax],ebp
  42704a:	not    DWORD PTR [edx]
  42704c:	popf   
  42704d:	or     dh,BYTE PTR ds:0x4799a4db
  427053:	retf   0x9331
  427056:	sbb    esi,DWORD PTR [edi-0x79a0e255]
  42705c:	(bad)  
  42705d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42705e:	xor    al,0xac
  427060:	aam    0x61
  427062:	cmp    eax,0xd76fd2fa
  427067:	enter  0x13eb,0x8f
  42706b:	and    bl,BYTE PTR [ebx-0x7b1d0242]
  427071:	xchg   ebx,eax
  427072:	stos   DWORD PTR es:[edi],eax
  427073:	pop    edx
  427074:	mov    cl,0x5
  427076:	test   BYTE PTR [eax],bl
  427078:	ret    0xeded
  42707b:	cmp    edx,DWORD PTR [ecx+edx*8+0xf]
  42707f:	and    eax,0xc900caa7
  427084:	xor    bl,dh
  427086:	jmp    0x427012
  427088:	aas    
  427089:	xchg   ebp,eax
  42708a:	cwde   
  42708b:	in     eax,0x1b
  42708d:	fiadd  WORD PTR [ecx+eiz*2+0x3e8b0378]
  427094:	sbb    eax,edx
  427096:	mov    es,ecx
  427098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427099:	(bad)  
  42709a:	jmp    0x427067
  42709c:	in     al,dx
  42709d:	and    eax,0x817fba54
  4270a2:	jb     0x4270c9
  4270a4:	daa    
  4270a5:	push   esp
  4270a6:	adc    ah,BYTE PTR [edi-0x5f]
  4270a9:	nop
  4270aa:	jg     0x427060
  4270ac:	cmp    al,0xbd
  4270ae:	add    ebx,DWORD PTR [edi+0x5d2b1e91]
  4270b4:	jb     0x427054
  4270b6:	cmovne edx,DWORD PTR [esi]
  4270b9:	sub    dl,BYTE PTR [eax]
  4270bb:	cmova  ebx,DWORD PTR [ebx-0x6f75fcdf]
  4270c2:	add    dh,BYTE PTR [ebx+edx*4+0x11]
  4270c6:	test   eax,0x8b73691e
  4270cb:	dec    ecx
  4270cc:	xor    dh,BYTE PTR [ebp-0x6f]
  4270cf:	xchg   DWORD PTR [edx+0x1],esp
  4270d2:	mov    ebp,0xaaa33431
  4270d7:	xor    eax,0x73ba2166
  4270dc:	or     al,0x9d
  4270de:	jl     0x427159
  4270e0:	mov    esi,0xccfca3ff
  4270e5:	jno    0x427128
  4270e7:	add    DWORD PTR [esi+edx*8],esp
  4270ea:	mov    ah,0xde
  4270ec:	lock or al,0xdc
  4270ef:	dec    edx
  4270f0:	int    0x14
  4270f2:	repnz pusha 
  4270f4:	(bad)  
  4270f5:	lods   al,BYTE PTR ds:[esi]
  4270f6:	arpl   WORD PTR [ebx-0x63924a],bx
  4270fc:	push   edx
  4270fd:	jl     0x427114
  4270ff:	or     eax,0x49ace3e0
  427104:	dec    eax
  427105:	dec    edx
  427106:	daa    
  427107:	lahf   
  427108:	mov    WORD PTR [ecx+0x612d5a80],?
  42710e:	(bad)  
  42710f:	stc    
  427110:	fstp   DWORD PTR [edi-0x56591287]
  427116:	xor    al,0x3
  427118:	jp     0x42712f
  42711a:	xor    al,0x3a
  42711c:	stos   BYTE PTR es:[edi],al
  42711d:	or     bh,BYTE PTR [edx]
  42711f:	clc    
  427120:	dec    esp
  427121:	cs cmp al,0x18
  427124:	test   DWORD PTR [ebx],ecx
  427126:	xor    BYTE PTR [eax+0x574cfb3c],dh
  42712c:	xor    eax,0x4ba2fe32
  427131:	aas    
  427132:	frstor [ecx]
  427134:	in     al,0xda
  427136:	(bad)  
  427139:	loopne 0x42717b
  42713b:	or     BYTE PTR [edx],0xa
  42713e:	sbb    al,0xe
  427140:	and    al,0xb3
  427143:	(bad)  
  427144:	stos   BYTE PTR es:[edi],al
  427145:	(bad)  
  427146:	mov    dh,0xf6
  427148:	cmp    al,0xf0
  42714a:	sbb    BYTE PTR [edx-0x74],0x5a
  42714e:	js     0x4270df
  427150:	mov    cl,0xb1
  427152:	add    eax,edi
  427154:	and    cl,BYTE PTR [edi+0x2f4f10c9]
  42715a:	or     bl,al
  42715c:	dec    edx
  42715d:	xchg   esi,eax
  42715e:	xlat   BYTE PTR ds:[ebx]
  42715f:	dec    ecx
  427160:	sahf   
  427161:	cmp    eax,0x8a2f1b34
  427166:	mov    edx,0xcbea3c9f
  42716b:	dec    ebp
  42716c:	rcr    DWORD PTR [ebp+0x45],1
  42716f:	fldcw  WORD PTR [eax+0x309975fe]
  427175:	test   DWORD PTR [ebx+0x7627a73a],esi
  42717b:	mov    eax,0x24ff0fee
  427180:	sub    esi,edi
  427182:	pop    es
  427183:	sub    dh,BYTE PTR [ebp-0x3f]
  427186:	sbb    ebp,DWORD PTR [esi]
  427188:	iret   
  427189:	seto   BYTE PTR ds:0xaa1e0eda
  427190:	into   
  427191:	sub    edx,eax
  427193:	push   ebx
  427194:	or     BYTE PTR ds:0xf7fb7fef,al
  42719a:	jno    0x427190
  42719c:	lahf   
  42719d:	push   ebx
  42719e:	imul   edx,DWORD PTR [ecx+esi*8],0x67
  4271a2:	pop    edi
  4271a3:	cwde   
  4271a4:	jo     0x42718d
  4271a6:	lea    esp,[esi-0x66309e11]
  4271ac:	dec    ecx
  4271ad:	inc    esp
  4271ae:	mov    ds:0x3d82451d,eax
  4271b3:	xchg   edx,eax
  4271b4:	mov    al,0xf3
  4271b6:	and    eax,0x2166109d
  4271bb:	dec    esi
  4271bc:	test   al,0x8f
  4271be:	call   0x2d700dfa
  4271c3:	jbe    0x427227
  4271c5:	or     al,0xc6
  4271c7:	xchg   esp,eax
  4271c8:	(bad)  
  4271c9:	push   esi
  4271ca:	xor    bl,BYTE PTR [edi]
  4271cc:	out    0x79,eax
  4271ce:	repz aam 0x6c
  4271d1:	cmp    al,0x89
  4271d3:	mov    esp,0x2de91c6
  4271d8:	pusha  
  4271d9:	sub    bh,BYTE PTR [ecx]
  4271db:	(bad)  
  4271dc:	mov    ah,0x97
  4271de:	inc    ebp
  4271df:	stos   DWORD PTR es:[edi],eax
  4271e0:	nop
  4271e1:	mov    ss,WORD PTR [eax]
  4271e3:	test   DWORD PTR [eax],esi
  4271e5:	mov    ch,0xe9
  4271e7:	dec    ecx
  4271e8:	add    al,ah
  4271ea:	outs   dx,DWORD PTR ds:[esi]
  4271eb:	lods   al,BYTE PTR ds:[esi]
  4271ec:	sbb    al,0x9a
  4271ee:	mov    eax,ds:0xb809b8a1
  4271f3:	lds    ecx,FWORD PTR [ecx+0x26]
  4271f6:	popf   
  4271f7:	lods   eax,DWORD PTR ds:[esi]
  4271f8:	scas   al,BYTE PTR es:[edi]
  4271f9:	jl     0x4271ab
  4271fb:	mov    ah,0x55
  4271fd:	in     eax,0x86
  4271ff:	lahf   
  427200:	inc    edi
  427201:	shl    al,0x47
  427204:	ins    BYTE PTR es:[edi],dx
  427205:	and    esi,ebp
  427207:	and    eax,0x63f3a14
  42720c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42720d:	test   DWORD PTR [ecx-0x7b926276],ebx
  427213:	fninit 
  427215:	fisttp WORD PTR [ebp+0x1ca49066]
  42721b:	sub    edi,DWORD PTR [eax]
  42721d:	imul   edi,DWORD PTR [ecx-0x18],0x1ccf892d
  427224:	imul   esp,DWORD PTR [eax-0x3d],0x6e193f81
  42722b:	dec    ebx
  42722c:	jle    0x4272a4
  42722e:	fsubr  st(2),st
  427230:	jnp    0x427283
  427232:	data16 fldcw WORD PTR [esi-0x9]
  427236:	dec    ecx
  427238:	imul   edx,DWORD PTR [ecx-0x20e9ab9e],0xffffffb6
  42723f:	(bad)
  427242:	add    al,ch
  427244:	add    DWORD PTR [eax],eax
  427246:	add    ah,ah
  427248:	into   
  427249:	hlt    
  42724a:	mov    edi,0x71e40a21
  42724f:	fs ins DWORD PTR es:[edi],dx
  427251:	xchg   DWORD PTR [edx+eiz*2+0x555546b7],esi
  427258:	in     eax,0xa8
  42725a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42725b:	or     bh,BYTE PTR [edi]
  42725d:	push   ebp
  42725e:	cmp    eax,0xffaee3f9
  427263:	pop    edx
  427264:	dec    ecx
  427265:	pushf  
  427266:	or     DWORD PTR [ebp+ebx*1+0x664e6e0d],ecx
  42726d:	call   0xeee3:0x394182df
  427274:	sub    ecx,esp
  427276:	push   eax
  427277:	jg     0x42720f
  427279:	iret   
  42727a:	ret    
  42727b:	sbb    BYTE PTR [edi-0x5fa530fe],ah
  427281:	jge    0x427237
  427283:	pushf  
  427284:	scas   al,BYTE PTR es:[edi]
  427285:	push   ebx
  427286:	or     ch,ch
  427288:	stos   BYTE PTR es:[edi],al
  427289:	push   edx
  42728a:	fstp   QWORD PTR [esi+0xc]
  42728d:	stc    
  42728e:	add    al,0xa3
  427290:	mov    dh,0x43
  427292:	jg     0x4272a6
  427294:	das    
  427295:	adc    eax,0xb650e72f
  42729a:	test   BYTE PTR [edi],dl
  42729c:	test   al,0x4c
  42729e:	sub    edx,DWORD PTR [edi]
  4272a0:	push   es
  4272a1:	or     eax,0x312f59bc
  4272a6:	pusha  
  4272a7:	dec    edi
  4272a8:	mov    ds:0x212a74b8,eax
  4272ad:	lods   al,BYTE PTR ds:[esi]
  4272ae:	sub    edx,ebp
  4272b0:	aam    0xfb
  4272b2:	scas   al,BYTE PTR es:[edi]
  4272b3:	aad    0x82
  4272b5:	pop    es
  4272b6:	outs   dx,DWORD PTR ds:[esi]
  4272b7:	xor    DWORD PTR [ebp-0x17b9b629],edx
  4272bd:	push   ecx
  4272be:	xchg   ebx,eax
  4272bf:	pop    ds
  4272c0:	cdq    
  4272c1:	ja     0x4272e5
  4272c3:	pop    edi
  4272c4:	(bad)  
  4272c6:	or     al,0x86
  4272c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272c9:	int    0x8f
  4272cb:	pop    edi
  4272cc:	mov    al,0xcf
  4272ce:	mov    dl,BYTE PTR [ebp+0xc349254]
  4272d4:	sbb    al,BYTE PTR [ebp-0x37]
  4272d7:	leave  
  4272d8:	push   0xd53d11c3
  4272dd:	mov    bl,0xa6
  4272df:	adc    eax,0xc4a3b061
  4272e4:	mov    eax,ds:0xce091cfa
  4272e9:	fwait
  4272ea:	sub    ecx,edi
  4272ec:	add    eax,0xdd5aa28f
  4272f1:	mov    al,0xcd
  4272f3:	bound  esp,QWORD PTR [ecx+0x49]
  4272f6:	xchg   ebp,eax
  4272f7:	mov    ecx,0xd0e77ef1
  4272fc:	mov    eax,ds:0x21e838d9
  427301:	in     al,dx
  427302:	pop    es
  427303:	bound  edx,QWORD PTR [edi-0x11]
  427306:	mov    bh,ch
  427308:	xor    DWORD PTR [eax-0x7d9d492b],esi
  42730e:	mov    esi,DWORD PTR [ebx+0x5d]
  427311:	fdivr  QWORD PTR [ebx+0x69]
  427314:	jb     0x4272ce
  427316:	daa    
  427317:	push   ebx
  427318:	(bad)  
  427319:	jge    0x42736e
  42731b:	inc    edx
  42731c:	loope  0x427346
  42731e:	out    0xd6,al
  427320:	aas    
  427321:	dec    eax
  427322:	mov    al,ds:0xde538db1
  427327:	push   0xae2df236
  42732c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42732d:	jo     0x42735f
  42732f:	ins    BYTE PTR es:[edi],dx
  427330:	(bad)  
  427331:	mov    edx,0x19ae6b0a
  427336:	mov    eax,0x5884976a
  42733b:	int    0x2f
  42733d:	in     al,0x2c
  42733f:	add    eax,0x27fb91a9
  427344:	add    al,0xfe
  427346:	and    dh,BYTE PTR [ecx+0x5606fa7f]
  42734c:	mov    ch,0x55
  42734e:	and    BYTE PTR [esp+eax*1-0x3ad5ab20],al
  427355:	and    BYTE PTR [ecx-0x2f],dh
  427358:	les    ebp,FWORD PTR [edx]
  42735a:	sub    BYTE PTR [esi-0x65],ch
  42735d:	dec    eax
  42735e:	dec    ebx
  42735f:	cmp    al,dl
  427361:	mov    ds:0x64d527eb,al
  427366:	in     al,dx
  427367:	es dec eax
  427369:	push   0x8e1971e6
  42736e:	shl    BYTE PTR [esi],0x79
  427371:	xor    al,0x1f
  427373:	inc    ebp
  427374:	mov    ecx,0x77247e1b
  427379:	sbb    eax,0xbf7fb0cb
  42737e:	jle    0x42737d
  427380:	pushf  
  427381:	je     0x427356
  427383:	mov    eax,ds:0xb126356
  427388:	cmc    
  427389:	push   es
  42738a:	mov    ecx,0x61dd6e6c
  42738f:	cmp    eax,0x9e13ac61
  427394:	add    edi,DWORD PTR [ebx]
  427396:	cmp    bl,BYTE PTR [edx-0x5fcc5443]
  42739c:	das    
  42739d:	xor    eax,0xd0ce84b4
  4273a2:	adc    BYTE PTR [edi-0x287c518f],al
  4273a8:	xchg   ebx,eax
  4273a9:	ins    DWORD PTR es:[edi],dx
  4273aa:	sub    bh,dh
  4273ac:	test   eax,0x5c7c61d1
  4273b2:	cmp    bh,ah
  4273b4:	in     al,dx
  4273b5:	std    
  4273b6:	sub    eax,0xeb4db2e
  4273bb:	enter  0xe381,0x25
  4273bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4273c0:	xchg   edi,eax
  4273c1:	repnz adc cl,0xf0
  4273c5:	fmul   st(4),st
  4273c7:	sub    DWORD PTR [edi+0x18],esi
  4273ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273cb:	jecxz  0x427393
  4273cd:	pop    esp
  4273ce:	fmulp  st(1),st
  4273d0:	es xchg edx,eax
  4273d2:	jmp    0xc16de90f
  4273d7:	clc    
  4273d8:	xlat   BYTE PTR ds:[ebx]
  4273d9:	ret    
  4273da:	mov    ebx,0x2221cb66
  4273df:	and    eax,0xab954109
  4273e4:	call   0x781d:0x274ce20a
  4273eb:	inc    ebx
  4273ec:	mov    al,0x6d
  4273ee:	repnz inc esp
  4273f0:	mov    esi,0x94fbedb5
  4273f5:	shl    dl,0xfa
  4273f8:	push   0xaf7dee0a
  4273fd:	cmp    al,0x1a
  4273ff:	add    esp,edx
  427401:	fstp   QWORD PTR [ebp-0x7b]
  427404:	add    eax,0xc7b0ff23
  427409:	fld    st(5)
  42740b:	inc    esi
  42740c:	jl     0x4273cb
  42740e:	push   ss
  42740f:	out    dx,al
  427410:	or     DWORD PTR [ebx-0x49],0xffffffee
  427414:	and    DWORD PTR [edx+eiz*8+0x88badac],edx
  42741b:	push   ds
  42741c:	shl    bl,0x52
  42741f:	add    al,0xd5
  427421:	push   ebp
  427422:	dec    eax
  427423:	dec    esp
  427424:	nop
  427425:	out    0x13,eax
  427427:	dec    ecx
  427428:	and    esp,DWORD PTR [ecx+ecx*8]
  42742b:	cmp    BYTE PTR [eax],ah
  42742d:	cmp    DWORD PTR [ebx-0x3f],ebx
  427430:	into   
  427431:	psrld  mm1,QWORD PTR [edi]
  427434:	rcr    ebp,cl
  427436:	fistp  WORD PTR [edi+0x1a9a13f0]
  42743c:	mov    dh,BYTE PTR [esi+0x1ebad03]
  427442:	add    al,ch
  427444:	add    DWORD PTR [eax],eax
  427446:	add    BYTE PTR [ecx],bh
  427448:	call   0xd923:0xcb4d3e5d
  42744f:	inc    ecx
  427450:	add    bh,BYTE PTR [edx+0x71e9ea1e]
  427456:	loope  0x427471
  427458:	pop    eax
  427459:	icebp  
  42745a:	adc    al,BYTE PTR [esi]
  42745c:	aas    
  42745d:	or     BYTE PTR [ecx+eiz*2+0x3db0a3a9],cl
  427464:	add    ch,BYTE PTR [ebp+edx*2-0x67]
  427468:	cli    
  427469:	fmul   st(2),st
  42746b:	mov    ah,0x6d
  42746d:	ins    BYTE PTR es:[edi],dx
  42746e:	jns    0x427481
  427470:	in     eax,dx
  427471:	cld    
  427472:	adc    DWORD PTR [ebp+0x40],eax
  427475:	mov    al,ds:0xb0499108
  42747a:	or     ah,ah
  42747c:	cmp    ebx,DWORD PTR [edi]
  42747e:	adc    DWORD PTR [ecx],0x9ac44c15
  427484:	jge    0x427448
  427486:	mov    ds:0xe10041d3,al
  42748b:	int3   
  42748c:	outs   dx,BYTE PTR ds:[esi]
  42748d:	jle    0x427451
  42748f:	fiadd  WORD PTR [edx-0x5b2649da]
  427495:	out    dx,eax
  427496:	pop    ebx
  427497:	inc    esi
  427498:	leave  
  427499:	push   ss
  42749a:	hlt    
  42749b:	xchg   ebp,eax
  42749c:	aas    
  42749d:	mov    ebp,0x6992fcd8
  4274a2:	inc    BYTE PTR [ebp-0x69]
  4274a5:	sbb    eax,0xb36da5cf
  4274aa:	push   0x5e
  4274ac:	mov    dh,BYTE PTR [ebp-0xd21e35b]
  4274b2:	out    0xa2,eax
  4274b4:	inc    esi
  4274b5:	sbb    BYTE PTR [edi+0x13914f40],dh
  4274bb:	jb     0x427526
  4274bd:	out    dx,al
  4274be:	cmp    al,0x4c
  4274c0:	pop    ebx
  4274c1:	imul   edi,DWORD PTR [ebx+0x305561cc],0xffffffb4
  4274c8:	xchg   ebx,eax
  4274c9:	outs   dx,BYTE PTR ds:[esi]
  4274ca:	xor    ah,al
  4274cc:	dec    ebx
  4274cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274ce:	push   es
  4274cf:	mov    BYTE PTR [esi+0x3d],bl
  4274d2:	hlt    
  4274d3:	push   edx
  4274d4:	call   0xf9f8cf18
  4274d9:	outs   dx,DWORD PTR ds:[esi]
  4274da:	shl    DWORD PTR [eax+0x4c352456],1
  4274e0:	jecxz  0x4274cc
  4274e2:	lods   eax,DWORD PTR ds:[esi]
  4274e3:	dec    esp
  4274e4:	mov    edx,0xcb854720
  4274e9:	nop
  4274ea:	gs xchg edx,eax
  4274ec:	outs   dx,BYTE PTR ds:[esi]
  4274ed:	test   eax,0x118ee467
  4274f2:	nop
  4274f3:	hlt    
  4274f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274f5:	xor    ecx,ebp
  4274f7:	bound  edx,QWORD PTR [ecx+esi*8+0x64]
  4274fb:	je     0x42751d
  4274fd:	test   al,0xc5
  4274ff:	jno    0x4274f7
  427501:	adc    edi,0xffffff9a
  427504:	dec    esi
  427505:	sub    ch,BYTE PTR [edx]
  427507:	jb     0x427576
  427509:	bound  ecx,QWORD PTR [edx-0x14354ec9]
  42750f:	ins    DWORD PTR es:[edi],dx
  427510:	dec    eax
  427511:	mov    ebp,0x34ac536
  427516:	in     eax,0xbf
  427518:	dec    ebp
  427519:	xor    DWORD PTR [esp+eiz*2+0x4e],ebx
  42751d:	(bad)  
  42751e:	leave  
  42751f:	ss xchg esp,eax
  427521:	add    ebp,esi
  427523:	mov    esp,0x8def2876
  427528:	jmp    0x61a0c3f6
  42752d:	call   DWORD PTR [ecx+0x6a810fe5]
  427533:	out    0x8d,al
  427535:	lock je 0x427514
  427538:	pop    edx
  427539:	sub    cl,BYTE PTR [eax]
  42753b:	cdq    
  42753c:	call   0x33349ee2
  427541:	ret    0x4278
  427544:	scas   al,BYTE PTR es:[edi]
  427545:	ficom  DWORD PTR [ecx-0x5ad10cb2]
  42754b:	cwde   
  42754c:	adc    bl,0xa1
  42754f:	xchg   edx,eax
  427550:	pop    esi
  427551:	data16 jno 0x42753e
  427554:	xor    eax,0xfbfe1a44
  427559:	stos   BYTE PTR es:[edi],al
  42755a:	inc    eax
  42755b:	(bad)  
  42755c:	in     al,0xfb
  42755e:	rol    BYTE PTR [edi+0x7],1
  427561:	in     eax,0x4e
  427563:	adc    DWORD PTR [edi],esi
  427565:	sbb    bl,BYTE PTR [edi+0x5dd26387]
  42756b:	inc    ebp
  42756c:	inc    esi
  42756d:	mov    ebp,0xa5eda0b9
  427572:	lea    esi,[esi]
  427574:	outs   dx,BYTE PTR ds:[esi]
  427575:	(bad)  
  427576:	and    ebp,ebp
  427578:	clc    
  427579:	dec    ebp
  42757a:	in     eax,0xfe
  42757c:	shr    DWORD PTR [edx-0x313a6b5c],0x60
  427583:	or     esi,edx
  427585:	dec    DWORD PTR [ebx-0x60dfb5c]
  42758b:	inc    ebx
  42758c:	jns    0x427513
  42758e:	and    eax,0x5246afce
  427593:	lods   al,BYTE PTR ds:[esi]
  427594:	pushf  
  427595:	xchg   esi,eax
  427596:	xlat   BYTE PTR ds:[ebx]
  427597:	xor    esp,edi
  427599:	mov    fs,WORD PTR [edx-0x74]
  42759c:	in     eax,dx
  42759d:	sbb    al,BYTE PTR [ebp+0x67111299]
  4275a3:	inc    eax
  4275a4:	xchg   ebp,eax
  4275a5:	icebp  
  4275a6:	(bad)  
  4275a7:	fdivr  DWORD PTR [ecx]
  4275a9:	je     0x4275a6
  4275ab:	cmp    al,0x73
  4275ad:	push   cs
  4275ae:	sbb    edx,ebp
  4275b0:	lods   al,BYTE PTR ds:[esi]
  4275b1:	adc    bh,BYTE PTR [eax+0x6da3fafb]
  4275b7:	sti    
  4275b8:	mov    WORD PTR [edx+eax*1-0x21],ds
  4275bc:	(bad)  
  4275bd:	das    
  4275be:	fs pop edx
  4275c0:	sbb    eax,ecx
  4275c2:	outs   dx,BYTE PTR ds:[esi]
  4275c3:	xor    BYTE PTR [ecx],ch
  4275c5:	push   es
  4275c6:	pop    ebx
  4275c7:	fs jbe 0x4275d6
  4275ca:	sub    al,BYTE PTR [ebp+0x2d59d733]
  4275d0:	dec    esi
  4275d1:	cmp    esi,DWORD PTR [ecx+ebp*8+0x28688904]
  4275d8:	push   ebp
  4275d9:	retf   0xadfe
  4275dc:	test   DWORD PTR [eax-0x30],edi
  4275df:	aas    
  4275e0:	sub    BYTE PTR [esi+0x1bbd5d2],bl
  4275e6:	dec    ebx
  4275e7:	adc    ebx,DWORD PTR [edx+0x2f]
  4275ea:	addr16 je 0x4275ef
  4275ed:	daa    
  4275ee:	mov    ebx,0x839112ff
  4275f3:	pop    eax
  4275f4:	push   cs
  4275f5:	sar    BYTE PTR ds:0x8a98b7a5,1
  4275fb:	inc    ebp
  4275fc:	lahf   
  4275fd:	add    bl,ah
  4275ff:	mov    eax,ds:0xe29e36b9
  427604:	jp     0x4275ea
  427606:	stc    
  427607:	idiv   BYTE PTR [edi-0x61]
  42760a:	push   edi
  42760b:	out    0xf8,al
  42760d:	or     dl,al
  42760f:	mov    ch,dh
  427611:	and    bh,bh
  427613:	repz jb 0x427687
  427616:	mov    dl,0xb3
  427618:	push   ebx
  427619:	call   0xd31d4278
  42761e:	outs   dx,BYTE PTR ds:[esi]
  42761f:	dec    ebx
  427620:	mov    ebx,0x91d67d27
  427625:	adc    eax,0x4324790c
  42762a:	xor    BYTE PTR [ebx-0x2],dl
  42762d:	stos   BYTE PTR es:[edi],al
  42762e:	xor    dh,al
  427630:	lock pusha 
  427632:	pushf  
  427633:	pusha  
  427634:	pushf  
  427635:	cld    
  427636:	cld    
  427637:	mov    cl,0xdf
  427639:	aaa    
  42763a:	or     ecx,esp
  42763c:	push   esi
  42763d:	and    al,0xed
  42763f:	xchg   ebp,eax
  427640:	in     eax,dx
  427641:	add    DWORD PTR [eax],eax
  427643:	call   0x60427649
  427648:	mov    ds:0x97377a60,al
  42764d:	add    esp,esi
  42764f:	sub    DWORD PTR [ebx+0x6f6407c4],ebx
  427655:	mov    ds:0x7d027612,eax
  42765a:	dec    edx
  42765b:	iret   
  42765c:	fimul  WORD PTR es:[esi+0x43]
  427660:	div    BYTE PTR [eax-0x32df10e6]
  427666:	ja     0x427621
  427668:	mov    ds:0x1ea07c76,al
  42766d:	cwde   
  42766e:	cmp    edx,DWORD PTR [esp+edx*4+0x14]
  427672:	cmp    cl,bl
  427674:	inc    eax
  427675:	and    DWORD PTR [ecx+0x4bf43d89],0xac4baa44
  42767f:	fnsave [ecx]
  427681:	sub    BYTE PTR [esi],al
  427683:	xor    eax,0x34d2056
  427688:	aaa    
  427689:	inc    edx
  42768a:	jae    0x42770b
  42768c:	adc    eax,0xc61d8cfa
  427691:	cs (bad) 
  427693:	adc    eax,0x239b01b7
  427698:	lahf   
  427699:	neg    DWORD PTR [edi-0x3cb51834]
  42769f:	push   cs
  4276a0:	jb     0x4276a9
  4276a2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276a4:	ja     0x427675
  4276a6:	gs mov ch,0x7
  4276a9:	test   eax,0x80afb618
  4276ae:	mov    edi,0xe0ee23db
  4276b3:	cmp    eax,0x60b13be3
  4276b8:	or     eax,0xba041c04
  4276bd:	xchg   esi,eax
  4276be:	or     eax,0xf87d8e3a
  4276c3:	out    dx,eax
  4276c4:	jo     0x4276ec
  4276c6:	mov    ebx,0xfc8788e8
  4276cb:	das    
  4276cc:	sbb    eax,0x19519633
  4276d1:	test   al,0xd0
  4276d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276d4:	out    0xec,al
  4276d6:	mov    eax,edi
  4276d8:	sahf   
  4276d9:	jg     0x4276dc
  4276db:	imul   esi,DWORD PTR [edi],0xf
  4276de:	scas   al,BYTE PTR es:[edi]
  4276df:	adc    al,0x1d
  4276e1:	sub    edi,esi
  4276e3:	pop    ss
  4276e4:	shr    BYTE PTR [eax+0x68],0x85
  4276e8:	scas   eax,DWORD PTR es:[edi]
  4276e9:	inc    esi
  4276ea:	hlt    
  4276eb:	(bad)
  4276ef:	sub    ch,dh
  4276f1:	test   DWORD PTR ds:[edi-0x3181d597],ebp
  4276f8:	or     al,0x65
  4276fa:	leave  
  4276fb:	xor    eax,DWORD PTR [esi-0x68]
  4276fe:	cmp    eax,0xfa8707a5
  427703:	enter  0x919a,0x29
  427707:	sub    al,0x43
  427709:	fmul   DWORD PTR ds:0xb2965c01
  42770f:	adc    eax,0x8b41f130
  427714:	mov    DWORD PTR [eax],ebx
  427716:	xor    ebp,DWORD PTR [ebx-0x6e]
  427719:	sti    
  42771a:	push   edx
  42771b:	xchg   esp,eax
  42771c:	inc    esp
  42771d:	pop    es
  42771e:	das    
  42771f:	adc    dl,bl
  427721:	dec    eax
  427722:	loope  0x4276b0
  427724:	inc    eax
  427725:	arpl   WORD PTR ds:0x54b2bf4d,bx
  42772b:	cwde   
  42772c:	neg    BYTE PTR [ebx-0x3c]
  42772f:	rol    BYTE PTR [ebx+0x620de253],1
  427735:	mov    si,0x544e
  427739:	push   0x6e
  42773b:	cmp    ebp,esp
  42773d:	std    
  42773e:	xchg   BYTE PTR [esi],bh
  427740:	not    edi
  427742:	mov    DWORD PTR gs:[edi+0x1affb036],ebx
  427749:	out    dx,eax
  42774a:	fdivr  DWORD PTR [edx+0x50afc071]
  427750:	xor    eax,0x8e9a514a
  427755:	sub    BYTE PTR [edx],al
  427757:	and    al,0xe5
  427759:	out    dx,al
  42775a:	sbb    eax,0xa2b525a7
  42775f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427760:	sti    
  427761:	retf   0xab1
  427764:	dec    esp
  427765:	sbb    eax,0xe518bf0e
  42776a:	es jne 0x4277de
  42776d:	xor    BYTE PTR [eax+0x6],0x0
  427771:	loope  0x427716
  427773:	add    dl,al
  427775:	sub    edi,ecx
  427777:	daa    
  427778:	adc    eax,0xee48f139
  42777d:	cmc    
  42777e:	xchg   esi,eax
  42777f:	mov    al,ds:0xb0a4070a
  427784:	scas   al,BYTE PTR es:[edi]
  427785:	pop    ecx
  427786:	pop    ebp
  427787:	jne    0x427718
  427789:	sub    ah,ah
  42778b:	or     al,0x29
  42778d:	mov    ds:0x895a550b,eax
  427792:	pop    edi
  427793:	add    ch,al
  427795:	in     eax,0xbd
  427797:	aam    0x73
  427799:	push   0xffffffac
  42779b:	mov    dl,bh
  42779d:	shr    BYTE PTR [edx+0x3a3bd63],cl
  4277a3:	sub    DWORD PTR [ebp+0x1d046166],esp
  4277a9:	scas   eax,DWORD PTR es:[edi]
  4277aa:	and    esp,0x7f9e93b6
  4277b0:	ss nop
  4277b2:	mov    edi,0xa967735e
  4277b7:	loope  0x4277f1
  4277b9:	push   ebp
  4277ba:	sub    eax,DWORD PTR [edi+ecx*8-0x60bd7ba1]
  4277c1:	or     dh,BYTE PTR [edi]
  4277c3:	pop    ebx
  4277c4:	fcom   DWORD PTR [ecx+0x7e]
  4277c7:	xchg   edi,eax
  4277c8:	xor    DWORD PTR [edi+esi*2+0x16],esp
  4277cc:	inc    esp
  4277cd:	inc    esi
  4277ce:	jecxz  0x42780a
  4277d0:	xchg   esi,eax
  4277d1:	(bad)
  4277d5:	add    ebp,DWORD PTR [ebx-0x68]
  4277d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277d9:	imul   ecx,DWORD PTR [ebp+0x2d80be5f],0x9554e5d0
  4277e3:	aam    0xe6
  4277e5:	add    bh,BYTE PTR [esi+0x25dbb069]
  4277eb:	add    al,0x28
  4277ed:	inc    esi
  4277ee:	out    dx,eax
  4277ef:	xor    eax,0xcdad852c
  4277f4:	adc    eax,0xfd3112d1
  4277f9:	out    0xdb,eax
  4277fb:	mov    esp,0x43fc8d01
  427800:	push   ss
  427801:	mov    bh,0xef
  427803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427804:	cmp    edi,DWORD PTR [esi+0x59]
  427807:	out    0x3e,eax
  427809:	mov    bl,0x69
  42780b:	clc    
  42780c:	cmp    DWORD PTR [eax],esi
  42780e:	jae    0x427886
  427810:	mov    esp,0x61d4dffe
  427815:	mov    bl,0x71
  427817:	mov    ch,0xe9
  427819:	pop    es
  42781a:	inc    eax
  42781b:	jne    0x42781b
  42781d:	cld    
  42781e:	pop    eax
  42781f:	lea    ebx,[edi-0x25]
  427822:	(bad)  
  427823:	aaa    
  427824:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  427826:	and    dl,cl
  427828:	outs   dx,DWORD PTR ds:[esi]
  427829:	daa    
  42782a:	lahf   
  42782b:	daa    
  42782c:	add    eax,0x451b75f8
  427831:	gs ret 
  427833:	jg     0x427818
  427835:	mov    edi,0xbc0396dd
  42783a:	sbb    DWORD PTR [eax+0x64],ecx
  42783d:	xor    esp,DWORD PTR [edi]
  42783f:	jge    0x427830
  427841:	add    DWORD PTR [eax],eax
  427843:	call   0xb427849
  427848:	push   eax
  427849:	mov    ch,0x1e
  42784b:	fld    TBYTE PTR [esi-0x1c]
  42784e:	aas    
  42784f:	xchg   edx,eax
  427850:	and    eax,eax
  427852:	sub    al,0x24
  427854:	test   eax,0x67beda4f
  427859:	xchg   ecx,eax
  42785a:	mov    WORD PTR [ecx-0x523349f0],?
  427860:	mov    gs,esp
  427862:	data16 ja 0x427871
  427865:	scas   eax,DWORD PTR es:[edi]
  427866:	ret    
  427867:	enter  0xdd86,0x98
  42786b:	popa   
  42786c:	sub    DWORD PTR [edi+0x7b95673e],edi
  427872:	imul   ebp,DWORD PTR [ecx],0x24
  427875:	ret    
  427876:	inc    eax
  427877:	inc    ebx
  427878:	jecxz  0x427839
  42787a:	jp     0x427825
  42787c:	sub    dh,bl
  42787e:	test   BYTE PTR [esi+edx*8+0x22210d27],ah
  427885:	xchg   esi,eax
  427886:	hlt    
  427887:	test   eax,0x93bfa510
  42788c:	test   eax,0x68badbcc
  427891:	in     eax,0x3b
  427893:	pop    ebx
  427894:	dec    dl
  427896:	sub    BYTE PTR [edi],cl
  427898:	(bad)  
  427899:	call   DWORD PTR [ebx-0x5296602e]
  42789f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278a0:	push   esp
  4278a1:	push   eax
  4278a2:	sub    eax,DWORD PTR [ecx]
  4278a4:	in     al,dx
  4278a5:	std    
  4278a6:	repnz fabs 
  4278a9:	jne    0x4278b1
  4278ab:	ja     0x4278f1
  4278ad:	ret    0x647e
  4278b0:	hlt    
  4278b1:	out    0x37,eax
  4278b3:	push   cs
  4278b4:	dec    ebp
  4278b5:	push   esp
  4278b6:	mov    dh,0x22
  4278b8:	push   ecx
  4278b9:	adc    dl,BYTE PTR [ecx]
  4278bb:	xchg   ecx,eax
  4278bc:	fsubp  st(3),st
  4278be:	in     al,0xc
  4278c0:	loop   0x42790b
  4278c2:	jmp    0x9da5f4e3
  4278c7:	jbe    0x42789f
  4278c9:	push   ss
  4278ca:	aas    
  4278cb:	adc    bl,ch
  4278cd:	inc    ebx
  4278ce:	xchg   ebx,eax
  4278cf:	cs mov ebx,0xc661e0b9
  4278d5:	fisttp QWORD PTR [eax]
  4278d7:	mov    ebp,0x8af9fd23
  4278dc:	fst    QWORD PTR [edx+ebp*2+0x227a2916]
  4278e3:	out    dx,al
  4278e4:	jmp    0x427890
  4278e6:	inc    DWORD PTR [ebx+edi*8-0x56]
  4278ea:	ret    0xd259
  4278ed:	aas    
  4278ee:	icebp  
  4278ef:	jecxz  0x427919
  4278f1:	rcr    DWORD PTR [edx],cl
  4278f3:	cs (bad) 
  4278f5:	mov    cl,0xd2
  4278f7:	or     bh,bl
  4278f9:	fcom   st(0)
  4278fb:	dec    edx
  4278fc:	inc    edx
  4278fd:	pop    edi
  4278fe:	vandps xmm6,xmm5,xmm3
  427902:	daa    
  427903:	xor    DWORD PTR [edi-0x5178411f],0x3b
  42790a:	mov    dl,BYTE PTR [ebx]
  42790c:	jne    0x4278d3
  42790e:	adc    BYTE PTR [esi-0x5f6ee119],0x7f
  427915:	out    0x2e,al
  427917:	adc    BYTE PTR [edx],cl
  427919:	test   BYTE PTR ss:[ecx-0x48],cl
  42791d:	scas   eax,DWORD PTR es:[edi]
  42791e:	cmp    bh,dl
  427920:	pop    esp
  427921:	jmp    0x42792d
  427923:	(bad)
  427927:	jne    0x42790b
  427929:	pop    edx
  42792a:	mov    edi,0x88bab363
  42792f:	test   edx,ebp
  427931:	jnp    0x42792a
  427933:	or     BYTE PTR [eax+0x3e],al
  427936:	mov    esp,0xa8b3dea3
  42793b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42793d:	(bad)  
  42793e:	mov    DWORD PTR [eax],0x246cd75f
  427944:	sub    esp,DWORD PTR [edx]
  427946:	add    al,0x53
  427948:	out    0x9e,al
  42794a:	addr16 push ds
  42794c:	dec    esp
  42794d:	in     eax,0x35
  42794f:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  427951:	in     al,0x40
  427953:	add    edi,eax
  427955:	fnstenv ss:[ecx+0x5a]
  427959:	sbb    edx,edi
  42795b:	mov    edx,0xfbb4c8ad
  427960:	pop    ecx
  427961:	leave  
  427962:	or     al,0xf
  427964:	in     eax,dx
  427965:	out    0x98,al
  427967:	shl    DWORD PTR [ebx],1
  427969:	in     eax,dx
  42796a:	(bad)  
  42796b:	push   edi
  42796c:	cli    
  42796d:	sub    ch,dh
  42796f:	pop    ds
  427970:	or     al,0x3b
  427972:	push   ds
  427973:	cdq    
  427974:	adc    ah,BYTE PTR [ebp+ebp*1-0x37ea4a3b]
  42797b:	(bad)  
  42797c:	or     ebx,ecx
  42797e:	sbb    ebp,ecx
  427980:	test   BYTE PTR [ebx+edx*1],bh
  427983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427984:	and    DWORD PTR [edi],0x6aac0418
  42798a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42798b:	(bad)  
  42798c:	stos   BYTE PTR es:[edi],al
  42798d:	arpl   WORD PTR [ebx],cx
  42798f:	scas   eax,DWORD PTR es:[edi]
  427990:	(bad)  
  427991:	lods   eax,DWORD PTR ds:[esi]
  427992:	pop    esi
  427993:	hlt    
  427994:	and    ecx,DWORD PTR [esi+edi*4-0x7d59399b]
  42799b:	xrelease xchg DWORD PTR [ecx],ecx
  42799e:	inc    ebx
  42799f:	cmc    
  4279a0:	and    DWORD PTR [edx-0x12],edi
  4279a3:	and    DWORD PTR [ebx*4+0x5c2d93af],ebp
  4279aa:	or     dl,dh
  4279ac:	xchg   ebp,eax
  4279ad:	dec    ebp
  4279ae:	shl    al,cl
  4279b0:	mov    ds:0x3ed50227,al
  4279b5:	ss mov esi,0x58ad71ac
  4279bb:	into   
  4279bc:	jmp    0xae119245
  4279c1:	scas   eax,DWORD PTR es:[edi]
  4279c2:	pushf  
  4279c3:	dec    edx
  4279c4:	mov    edx,edi
  4279c6:	jge    0x4279e1
  4279c8:	push   es
  4279c9:	sub    ebx,DWORD PTR [edi]
  4279cb:	sub    eax,0x38cea822
  4279d0:	push   0x4f1de7d5
  4279d5:	add    eax,0x96909c33
  4279da:	or     bl,BYTE PTR [edx-0x65]
  4279dd:	mov    ebx,0xcb502405
  4279e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279e3:	sbb    ebp,DWORD PTR [edx-0x58]
  4279e6:	in     eax,dx
  4279e7:	dec    eax
  4279e8:	lds    ecx,FWORD PTR [ecx+0x70]
  4279eb:	mov    dl,0x15
  4279ed:	xor    eax,0x71a5915
  4279f2:	xchg   esp,eax
  4279f3:	cmp    eax,ebx
  4279f5:	fcomp  DWORD PTR [ecx]
  4279f7:	sar    DWORD PTR [ecx],1
  4279f9:	shl    DWORD PTR [esi-0x3],1
  4279fc:	mov    bl,0x4c
  4279fe:	js     0x4279a9
  427a00:	jae    0x4279c5
  427a02:	mov    ebx,0x58dd6a32
  427a07:	sub    eax,0xe1b49084
  427a0c:	cwde   
  427a0d:	retf   
  427a0e:	das    
  427a0f:	test   eax,0x2c21d5bd
  427a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a15:	jle    0x427a8e
  427a17:	cmp    dh,BYTE PTR [edi+0x30]
  427a1a:	mov    eax,ds:0xff6dadbb
  427a1f:	call   0x911e:0x11c999d
  427a26:	das    
  427a27:	test   eax,0xa1c2a57e
  427a2c:	mov    al,0x83
  427a2e:	sub    BYTE PTR [edi+eax*2],cl
  427a31:	inc    ebx
  427a32:	xchg   esp,eax
  427a33:	dec    ebx
  427a34:	xchg   esp,eax
  427a35:	(bad)  
  427a37:	dec    eax
  427a38:	into   
  427a39:	adc    bl,BYTE PTR [ebp+0x1c8a5d35]
  427a3f:	gs icebp 
  427a41:	add    DWORD PTR [eax],eax
  427a43:	call   0xbd427a49
  427a48:	jne    0x427ac7
  427a4a:	icebp  
  427a4b:	out    0x2a,eax
  427a4d:	or     dl,bh
  427a4f:	mov    WORD PTR [ecx+edi*2+0x7b7ef612],es
  427a56:	pushf  
  427a57:	cmp    al,0x39
  427a59:	xchg   edi,eax
  427a5a:	sbb    al,0x77
  427a5c:	jl     0x427a74
  427a5e:	xchg   BYTE PTR [eax+eiz*2+0x7],ch
  427a62:	xor    BYTE PTR [ebx-0x4d37cf72],0x36
  427a69:	dec    esi
  427a6a:	mov    ch,0x92
  427a6c:	popf   
  427a6d:	sub    BYTE PTR [esi],ah
  427a6f:	out    0xc9,al
  427a71:	cmovae ecx,ebx
  427a74:	pop    edx
  427a75:	loop   0x427a5d
  427a77:	rcl    BYTE PTR [esi-0x175219c9],cl
  427a7d:	retf   
  427a7e:	mov    eax,ds:0x46152756
  427a83:	sbb    ecx,esi
  427a85:	dec    esi
  427a86:	push   ds
  427a87:	test   al,0x66
  427a89:	(bad)  
  427a8a:	sub    al,0x7a
  427a8c:	mov    esi,0x882693c4
  427a91:	and    eax,0x7e029134
  427a96:	inc    ebp
  427a97:	sti    
  427a98:	scas   eax,DWORD PTR es:[edi]
  427a99:	pop    edx
  427a9a:	dec    esp
  427a9b:	es dec eax
  427a9d:	leave  
  427a9e:	cmc    
  427a9f:	inc    edx
  427aa0:	jns    0x427aed
  427aa2:	and    eax,0x63f1f645
  427aa7:	dec    esi
  427aa8:	mov    dl,0x41
  427aaa:	push   cs
  427aab:	out    dx,eax
  427aac:	mov    eax,0x4acfa00d
  427ab1:	and    al,0xeb
  427ab3:	pop    eax
  427ab4:	xor    BYTE PTR [edx],0xc0
  427ab7:	mov    ah,0x12
  427ab9:	enter  0x6410,0x71
  427abd:	gs cld 
  427abf:	push   esi
  427ac0:	inc    eax
  427ac1:	icebp  
  427ac2:	fisubr DWORD PTR [eax-0x4d9fc472]
  427ac8:	dec    eax
  427ac9:	fs inc edi
  427acb:	push   ebx
  427acc:	dec    ecx
  427acd:	sub    BYTE PTR [edx],bh
  427acf:	mov    ah,0x6b
  427ad1:	imul   ebx,DWORD PTR [eax+0x73],0xffffffd7
  427ad5:	fisubr DWORD PTR [eax-0x744ddfec]
  427adb:	dec    esp
  427adc:	fmul   DWORD PTR [esp+ebp*8]
  427adf:	cmp    BYTE PTR [eax+0x472f524f],bl
  427ae5:	mov    eax,ds:0xb6634e9b
  427aea:	add    esi,eax
  427aec:	dec    edi
  427aed:	mul    eax
  427aef:	fsub   DWORD PTR [ebx+0x6d]
  427af2:	sub    BYTE PTR [ebx+0x4930a252],ch
  427af8:	repnz mov ah,bl
  427afb:	push   es
  427afc:	(bad)  
  427afd:	push   eax
  427afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427aff:	in     al,0xce
  427b01:	xor    ecx,DWORD PTR [eax+0x79]
  427b04:	sahf   
  427b05:	test   edi,ebx
  427b07:	ds pop edx
  427b09:	popf   
  427b0a:	pop    ecx
  427b0b:	loop   0x427a9a
  427b0d:	div    dl
  427b0f:	(bad)  
  427b10:	test   BYTE PTR [ebx+eiz*1-0x2d31cc50],0x26
  427b18:	iret   
  427b19:	and    eax,0xeb72845c
  427b1e:	repz adc DWORD PTR [ecx],0xffffff90
  427b22:	xor    BYTE PTR [ecx+0x11],bl
  427b25:	std    
  427b26:	add    dh,BYTE PTR [edx]
  427b28:	sbb    eax,0x4a38e0a4
  427b2d:	push   eax
  427b2e:	loope  0x427add
  427b30:	retf   
  427b31:	aas    
  427b32:	lods   eax,DWORD PTR ds:[esi]
  427b33:	or     DWORD PTR [eax],edx
  427b35:	es popf 
  427b37:	sbb    eax,0x2bfceab9
  427b3c:	push   ebp
  427b3d:	inc    edi
  427b3e:	add    DWORD PTR [ebp+ecx*2-0x31],ebx
  427b42:	or     eax,0x7215c29f
  427b47:	mov    edx,0x71d4ac2
  427b4c:	in     al,dx
  427b4d:	inc    ebp
  427b4e:	sub    al,0xc6
  427b50:	or     DWORD PTR [esi+0x6ea5b6e1],esi
  427b56:	jne    0x427b83
  427b58:	aad    0x6b
  427b5a:	mov    DWORD PTR [edx+ecx*8-0x4eb2cb51],esi
  427b61:	xor    eax,0xcfebd886
  427b66:	sub    al,0xcc
  427b68:	mov    DWORD PTR [ebx+ebp*8-0x2bc1ebef],edi
  427b6f:	daa    
  427b70:	stc    
  427b71:	and    ecx,DWORD PTR [ebp+ecx*4-0x4382c0d5]
  427b78:	or     eax,0xb9c2e0e3
  427b7d:	dec    edi
  427b7e:	divps  xmm4,XMMWORD PTR [ecx]
  427b81:	dec    esi
  427b82:	loopne 0x427b26
  427b84:	or     edi,DWORD PTR [ebp+0x53]
  427b87:	arpl   si,bp
  427b89:	je     0x427b0d
  427b8b:	xlat   BYTE PTR ds:[ebx]
  427b8c:	push   eax
  427b8d:	sbb    eax,0x96ba34d6
  427b92:	mov    esp,0x1f2fe532
  427b97:	jl     0x427b3b
  427b99:	outs   dx,DWORD PTR ds:[esi]
  427b9a:	adc    al,0x2e
  427b9c:	jmp    0x7e758e38
  427ba1:	(bad)  [edi+ebx*2-0x6a]
  427ba5:	addr16 mov bh,0x12
  427ba8:	pop    ss
  427ba9:	dec    edx
  427baa:	nop
  427bab:	mov    dh,0x92
  427bad:	cli    
  427bae:	xor    al,0xa3
  427bb0:	lods   al,BYTE PTR gs:[esi]
  427bb2:	mov    ds:0xcecefbda,eax
  427bb7:	pop    ecx
  427bb8:	mov    bh,0x75
  427bba:	mov    ecx,0x215fb1fb
  427bbf:	mov    ah,0xb7
  427bc1:	leave  
  427bc2:	sub    eax,0x99ffaebd
  427bc7:	and    eax,0x7d066cc4
  427bcc:	int    0xdd
  427bce:	das    
  427bcf:	push   0xfffffffa
  427bd1:	mov    al,BYTE PTR [ebx+0x5e]
  427bd4:	cmp    eax,0x742cecee
  427bd9:	int    0x10
  427bdb:	dec    ebx
  427bdc:	jns    0x427b77
  427bde:	push   0x73
  427be0:	call   0xc9be58e7
  427be5:	jg     0x427beb
  427be7:	ins    BYTE PTR es:[edi],dx
  427be8:	sub    eax,0xf78b9906
  427bed:	fldcw  WORD PTR [ebx+ecx*4]
  427bf0:	(bad)  
  427bf1:	(bad)  
  427bf2:	xor    DWORD PTR [ebx-0x1c006f3],eax
  427bf8:	or     BYTE PTR [edi+ebx*2+0x4f],ah
  427bfc:	mov    ch,0xe
  427bfe:	repnz or eax,0xd4249f33
  427c04:	fbld   TBYTE PTR [edx+0x1e]
  427c07:	or     eax,0x6df6c357
  427c0c:	jno    0x427c74
  427c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c10:	lods   eax,DWORD PTR ds:[esi]
  427c11:	leave  
  427c12:	add    eax,0x29787fae
  427c18:	aas    
  427c19:	in     al,0x64
  427c1b:	out    dx,eax
  427c1c:	mov    al,ds:0xadac2a0f
  427c21:	and    DWORD PTR [ebx],eax
  427c23:	jp     0x427c7b
  427c25:	cmp    al,0xd0
  427c27:	xchg   edi,eax
  427c28:	aad    0x63
  427c2a:	not    BYTE PTR [ecx-0x3f]
  427c2d:	fistp  WORD PTR [ecx]
  427c2f:	sub    al,0x44
  427c31:	and    edi,DWORD PTR [eax+0x6b]
  427c34:	jg     0x427cb5
  427c36:	push   esp
  427c37:	mov    WORD PTR [eax-0x43],fs
  427c3a:	outs   dx,BYTE PTR ds:[esi]
  427c3b:	inc    eax
  427c3c:	xor    BYTE PTR [eiz*8+0x1f34d],ch
  427c43:	call   0x66427c49
  427c48:	out    0xee,eax
  427c4a:	ins    DWORD PTR es:[edi],dx
  427c4b:	or     ch,BYTE PTR [esi-0x32]
  427c4e:	std    
  427c4f:	jmp    0xe5dd2a38
  427c54:	(bad)  
  427c55:	sti    
  427c56:	xchg   edi,eax
  427c57:	sub    cl,BYTE PTR [esi+ebp*2-0x14975c61]
  427c5e:	mov    al,ds:0x2c0f3bd1
  427c63:	mov    bl,0xf0
  427c65:	xchg   ecx,eax
  427c66:	outs   dx,BYTE PTR ds:[esi]
  427c67:	cli    
  427c68:	and    BYTE PTR [edx+0x1],0xc7
  427c6c:	and    DWORD PTR [esi-0x6c28df05],ecx
  427c72:	pop    ds
  427c73:	aad    0x98
  427c75:	jbe    0x427cb1
  427c77:	mov    edi,0xfe60f79f
  427c7c:	dec    esp
  427c7d:	or     ebp,edi
  427c7f:	pop    es
  427c80:	dec    eax
  427c81:	retf   0xbb56
  427c84:	mov    es,WORD PTR [esi+0x7e]
  427c87:	push   ss
  427c88:	cmp    dl,BYTE PTR [ebx+0xe]
  427c8b:	mov    dh,0xf7
  427c8d:	push   0xe0b23b4a
  427c92:	repz push esp
  427c94:	mov    al,0xfa
  427c96:	jae    0x427c3e
  427c98:	add    al,0x60
  427c9a:	push   0xdcf67fc5
  427c9f:	add    al,0xab
  427ca1:	dec    edi
  427ca2:	ret    
  427ca3:	lea    edi,ds:0x21c863f
  427ca9:	mov    ebx,0xdd960d58
  427cae:	pop    eax
  427caf:	sbb    al,0xc
  427cb1:	loop   0x427c57
  427cb3:	mov    ds:0xeeebdd28,eax
  427cb8:	ds mov al,0xc
  427cbb:	and    BYTE PTR ds:0x2593,dl
  427cc0:	sub    DWORD PTR [eax+0x406eaef6],0x2b
  427cc7:	fimul  DWORD PTR [ebp-0x69]
  427cca:	and    dl,BYTE PTR [esi+eax*2+0x6f]
  427cce:	xor    ah,BYTE PTR [edx-0x3652defa]
  427cd4:	rep outs dx,DWORD PTR ss:[esi]
  427cd7:	ins    BYTE PTR es:[edi],dx
  427cd8:	adc    BYTE PTR ds:0x9174fccc,cl
  427cde:	fwait
  427cdf:	into   
  427ce0:	aas    
  427ce1:	ins    DWORD PTR es:[edi],dx
  427ce2:	cmp    al,0xbc
  427ce4:	std    
  427ce5:	loope  0x427cac
  427ce7:	outs   dx,DWORD PTR ds:[esi]
  427ce8:	adc    al,0xf0
  427cea:	int3   
  427ceb:	out    0x4c,eax
  427ced:	lea    ecx,[esp+eax*4]
  427cf0:	js     0x427d35
  427cf2:	sbb    eax,0xe94dc547
  427cf7:	fidivr WORD PTR [ebx+0x29a09ed1]
  427cfd:	cli    
  427cfe:	gs (bad) 
  427d00:	sbb    DWORD PTR [ebx+0x64],ebp
  427d03:	push   esi
  427d04:	cmp    ebx,DWORD PTR [ecx]
  427d06:	jo     0x427ca8
  427d08:	out    0xd4,eax
  427d0a:	mov    bl,0xd3
  427d0c:	bound  edi,QWORD PTR [edi]
  427d0e:	sub    dl,BYTE PTR [edi-0x6c451288]
  427d14:	ds dec edx
  427d16:	hlt    
  427d17:	les    edx,FWORD PTR [ecx+0x0]
  427d1a:	fld    st(6)
  427d1c:	dec    ebx
  427d1d:	adc    cl,BYTE PTR [ebx+0x19]
  427d20:	xlat   BYTE PTR ds:[ebx]
  427d21:	mov    BYTE PTR [ebp+0x7b],bh
  427d24:	dec    edi
  427d25:	cs popa 
  427d27:	cmp    dh,BYTE PTR [ebx]
  427d29:	mov    eax,0x968bfa27
  427d2e:	xchg   esp,eax
  427d2f:	inc    esp
  427d30:	repnz push ebx
  427d32:	mov    ch,0x44
  427d34:	xor    DWORD PTR [ecx],eax
  427d36:	test   BYTE PTR [edi+0x1825dff6],0x73
  427d3d:	leave  
  427d3e:	sbb    eax,0x79489045
  427d43:	test   BYTE PTR [ecx+0x3e],bl
  427d46:	and    ah,BYTE PTR [esi-0x6e2d7ee7]
  427d4c:	or     eax,0x1d6f8930
  427d51:	(bad)  
  427d53:	pusha  
  427d54:	sbb    eax,0xd4a96f2a
  427d59:	push   ds
  427d5a:	xchg   ebx,eax
  427d5b:	xor    al,0xf8
  427d5d:	push   ss
  427d5e:	je     0x427d0e
  427d60:	cli    
  427d61:	fld    DWORD PTR ds:0x71973dc9
  427d67:	push   0x5ca6d61b
  427d6c:	jne    0x427d63
  427d6e:	push   es
  427d6f:	pop    ebp
  427d70:	sub    BYTE PTR [edx+ebx*1-0x52],dh
  427d74:	inc    ecx
  427d75:	cwde   
  427d76:	inc    ebx
  427d77:	mov    ah,dh
  427d79:	sahf   
  427d7a:	gs and al,0x29
  427d7d:	cmp    dl,BYTE PTR [eax]
  427d7f:	pop    ebp
  427d80:	into   
  427d81:	(bad)  
  427d82:	pop    ebx
  427d83:	out    0x5e,eax
  427d85:	fnsetpm(287 only) 
  427d87:	leave  
  427d88:	fiadd  DWORD PTR [ecx-0x32]
  427d8b:	ja     0x427da6
  427d8d:	out    0x97,al
  427d8f:	cs push 0x7b50c40c
  427d95:	(bad)  [edx]
  427d97:	and    al,0xba
  427d99:	and    esp,DWORD PTR [esi+0x4e01306c]
  427d9f:	mov    ecx,0x18515a84
  427da4:	cmp    al,BYTE PTR [edi]
  427da6:	cmp    dl,al
  427da8:	fld    QWORD PTR [edx-0x2b020894]
  427dae:	fild   QWORD PTR [edx+0x6]
  427db1:	ins    BYTE PTR es:[edi],dx
  427db2:	out    0xa1,eax
  427db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427db5:	mov    dh,0xd5
  427db7:	loopne 0x427d48
  427db9:	enter  0x9eb4,0xc8
  427dbd:	loope  0x427d59
  427dbf:	sub    DWORD PTR [esi-0x51ed0668],0xffffffa8
  427dc6:	or     eax,0x9a574b94
  427dcb:	aad    0xad
  427dcd:	sub    dh,BYTE PTR [eax]
  427dcf:	push   DWORD PTR [eax+ebx*1]
  427dd2:	iret   
  427dd3:	outs   dx,DWORD PTR ds:[esi]
  427dd4:	in     eax,dx
  427dd5:	push   0x32374fc8
  427dda:	push   edx
  427ddb:	and    al,0x14
  427ddd:	rdmsr  
  427ddf:	dec    ebx
  427de0:	(bad)  
  427de1:	outs   dx,BYTE PTR ds:[esi]
  427de2:	ja     0x427db4
  427de4:	aad    0x29
  427de6:	sub    al,BYTE PTR [esi+0x2c]
  427de9:	inc    BYTE PTR ds:0x508da47b
  427def:	cdq    
  427df0:	cs jns 0x427dfd
  427df3:	inc    ebp
  427df4:	das    
  427df5:	fnsave [eax-0x18]
  427df8:	fbld   TBYTE PTR [edx-0x11]
  427dfb:	mov    bh,0x79
  427dfd:	test   DWORD PTR [eax],ebx
  427dff:	arpl   dx,di
  427e01:	shl    BYTE PTR [edi+0x28],1
  427e04:	dec    ebx
  427e05:	push   0x522ed88b
  427e0a:	push   0x2f8010f8
  427e0f:	mov    ebp,ecx
  427e11:	popa   
  427e12:	imul   BYTE PTR [ecx-0x1af4c2e0]
  427e18:	lock clc 
  427e1a:	or     BYTE PTR [ebx+esi*1-0x80],ch
  427e1e:	xchg   ebx,eax
  427e1f:	xor    al,0x24
  427e21:	mov    bl,0xc2
  427e23:	sub    eax,0xf0717145
  427e28:	mov    esi,eax
  427e2a:	ss addr16 jge 0x427e1d
  427e2e:	mov    dl,0x2b
  427e30:	loopne 0x427ead
  427e32:	cmp    bl,bh
  427e34:	mov    ebx,0x2946f36b
  427e39:	in     al,dx
  427e3a:	cmp    BYTE PTR [edi],cl
  427e3c:	jae    0x427e1a
  427e3e:	xor    DWORD PTR ds:0xe80001f5,0x1
  427e45:	add    BYTE PTR [eax],al
  427e47:	or     ecx,DWORD PTR [esi-0x28]
  427e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e4b:	fld    TBYTE PTR [ebx+0x17e0146e]
  427e51:	push   ebx
  427e52:	add    al,0xeb
  427e54:	add    BYTE PTR [edi+0x13],cl
  427e57:	mov    eax,ds:0x4306ab2e
  427e5c:	ss addr16 mov ebx,0x3e5b9d7a
  427e63:	dec    eax
  427e64:	mov    ds:0x5bbae79f,al
  427e69:	sub    BYTE PTR [ebp+0x70],bh
  427e6c:	sub    DWORD PTR [ecx+esi*2+0x48],esp
  427e70:	or     al,0xa5
  427e72:	dec    ebx
  427e73:	jnp    0x427e62
  427e75:	sub    cl,BYTE PTR [ecx]
  427e77:	inc    eax
  427e78:	addr16 (bad) 
  427e7a:	mov    eax,ds:0xb3e9dbd6
  427e7f:	pop    eax
  427e80:	inc    edx
  427e81:	xchg   edi,eax
  427e82:	fxtract 
  427e84:	ja     0x427e80
  427e86:	adc    BYTE PTR [edx],0x42
  427e89:	ins    BYTE PTR es:[edi],dx
  427e8a:	push   ebx
  427e8b:	and    DWORD PTR [ebx],ebx
  427e8d:	xchg   BYTE PTR [ebx],bl
  427e8f:	sbb    BYTE PTR [edi-0x612d9f1c],cl
  427e95:	cwde   
  427e96:	dec    esi
  427e97:	and    DWORD PTR [ecx],ebx
  427e99:	gs popa 
  427e9b:	mov    al,ds:0x3963cc1d
  427ea0:	dec    ecx
  427ea1:	div    DWORD PTR [esi-0x5e989f29]
  427ea7:	sub    al,0x5f
  427ea9:	pop    eax
  427eaa:	imul   edi,DWORD PTR [esp+ebx*4-0x4e],0xabaae928
  427eb2:	xchg   ebp,eax
  427eb3:	dec    edx
  427eb4:	xchg   ebp,eax
  427eb5:	pop    ss
  427eb6:	or     ebp,DWORD PTR [edx+ebx*8-0x23]
  427eba:	xor    BYTE PTR [esi+0x70f6726f],bh
  427ec0:	push   ds
  427ec1:	push   ds
  427ec2:	or     eax,0x2856e816
  427ec7:	mov    esi,0xc04e3463
  427ecc:	pop    ss
  427ecd:	les    esi,FWORD PTR [ebx+0x51]
  427ed0:	jo     0x427ef3
  427ed2:	jge    0x427ef5
  427ed4:	aam    0x70
  427ed6:	mov    edx,0x7a6929a6
  427edb:	sub    esp,DWORD PTR [esi+0x5bcabfb0]
  427ee1:	pop    ebp
  427ee2:	xchg   ebp,eax
  427ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ee4:	pushf  
  427ee5:	cmp    ch,BYTE PTR [ecx-0x3a]
  427ee8:	dec    ebp
  427ee9:	mov    dl,0x60
  427eeb:	push   esi
  427eec:	fld    st(7)
  427eee:	imul   esi,ecx,0x40
  427ef1:	sbb    DWORD PTR [eax+0x51],edi
  427ef4:	div    DWORD PTR [ebx]
  427ef6:	push   esp
  427ef7:	and    ch,BYTE PTR [esp+ebx*2-0x72f0d714]
  427efe:	(bad)  
  427eff:	fbstp  TBYTE PTR [ecx-0x54e3ae9c]
  427f05:	pop    ss
  427f06:	jns    0x427f4b
  427f08:	xor    al,0x43
  427f0b:	not    DWORD PTR [ebx+ecx*8-0x12da2217]
  427f12:	dec    ecx
  427f13:	mov    ch,0x3a
  427f15:	jmp    0x427f59
  427f17:	pop    esi
  427f18:	jp     0x427f57
  427f1a:	std    
  427f1b:	pop    DWORD PTR [ebx-0x32]
  427f1e:	mov    eax,ss:0xc7cf0133
  427f24:	jns    0x427fa2
  427f26:	mov    ecx,0xdd51f5eb
  427f2b:	pushf  
  427f2c:	fisub  WORD PTR [edx]
  427f2e:	dec    esi
  427f2f:	test   DWORD PTR [esi+ebp*4],ebp
  427f32:	jp     0x427f40
  427f34:	pop    ss
  427f35:	data16 sub cl,BYTE PTR [eax+0xd9fbfbe]
  427f3c:	mov    edi,DWORD PTR [edi]
  427f3e:	pushf  
  427f3f:	fld    QWORD PTR [edi+0x1e]
  427f42:	jp     0x427f28
  427f44:	(bad)  
  427f45:	fcomp  QWORD PTR [edx-0x61]
  427f48:	js     0x427eed
  427f4a:	out    0x15,eax
  427f4c:	push   cs
  427f4d:	dec    ecx
  427f4e:	aam    0x26
  427f50:	and    ch,BYTE PTR [edx-0x3a09e2e3]
  427f56:	push   edi
  427f57:	ret    
  427f58:	jae    0x427f74
  427f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f5b:	cs jo  0x427f02
  427f5e:	ret    
  427f5f:	dec    ebx
  427f61:	js     0x427f72
  427f63:	sub    ebx,ebp
  427f65:	pop    ebp
  427f66:	(bad)  
  427f67:	ds dec ebp
  427f69:	inc    eax
  427f6a:	adc    al,0x24
  427f6c:	lock loopne 0x427fcc
  427f6f:	push   ebx
  427f70:	sahf   
  427f71:	mov    ebx,0xc0f0f201
  427f76:	lods   al,BYTE PTR ds:[esi]
  427f77:	push   ss
  427f78:	stos   DWORD PTR es:[edi],eax
  427f79:	mov    ds:0xc2dffd4f,eax
  427f7e:	test   BYTE PTR [edx+ecx*4],dh
  427f81:	adc    eax,0x4a035db8
  427f86:	or     bl,BYTE PTR [ecx]
  427f88:	hlt    
  427f89:	dec    ecx
  427f8a:	add    ah,BYTE PTR [eax+ecx*1-0x7800b14d]
  427f91:	lods   al,BYTE PTR ds:[esi]
  427f92:	inc    edi
  427f93:	jns    0x427f35
  427f95:	adc    BYTE PTR [edi+0x31df3a11],ch
  427f9b:	std    
  427f9c:	mov    bl,0x6c
  427f9e:	ja     0x427f39
  427fa0:	cli    
  427fa1:	mov    ah,0x19
  427fa3:	jl     0x427f50
  427fa5:	inc    esp
  427fa6:	inc    bx
  427fa8:	mov    ?,edi
  427faa:	or     al,0xcc
  427fac:	out    dx,al
  427fad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427fae:	dec    ebp
  427faf:	fbld   TBYTE PTR [edx-0x7a715dd3]
  427fb5:	xchg   bh,bh
  427fb7:	stos   BYTE PTR es:[edi],al
  427fb8:	mov    esp,DWORD PTR [ebx]
  427fba:	add    ah,al
  427fbc:	popf   
  427fbd:	and    eax,0xafd60d27
  427fc2:	mov    bh,0x78
  427fc4:	pushf  
  427fc5:	mov    eax,0xe2925544
  427fca:	cmp    BYTE PTR [esi-0x6b],dh
  427fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fcf:	and    eax,0x4f30dd9a
  427fd4:	mov    bl,0xec
  427fd6:	sub    al,0x76
  427fd8:	inc    edi
  427fd9:	lods   al,BYTE PTR ds:[esi]
  427fda:	xor    BYTE PTR [ecx],0xfc
  427fdd:	not    bh
  427fdf:	loope  0x42801e
  427fe1:	push   esp
  427fe2:	push   edx
  427fe3:	cdq    
  427fe4:	test   eax,0x42965f48
  427fe9:	hlt    
  427fea:	push   edi
  427feb:	pop    ds
  427fec:	fist   DWORD PTR [ecx+esi*1]
  427fef:	fild   QWORD PTR [edi]
  427ff1:	fcmovnb st,st(3)
  427ff3:	push   eax
  427ff4:	stos   DWORD PTR es:[edi],eax
  427ff5:	jnp    0x42800f
  427ff7:	stos   DWORD PTR es:[edi],eax
  427ff8:	mov    bh,0x30
  427ffa:	mov    ebp,0x3fde2976
  427fff:	ins    DWORD PTR es:[edi],dx
  428000:	je     0x427faf
  428002:	setae  BYTE PTR [ebx+0x694a2aca]
  428009:	mov    eax,DWORD PTR [edx+0x1c6f904d]
  42800f:	lahf   
  428010:	sub    cl,BYTE PTR [edi]
  428012:	inc    edi
  428013:	adc    eax,0xaf1752c9
  428018:	cmp    eax,0x84e33bb0
  42801d:	repz jp 0x428056
  428020:	jmp    0x427fc8
  428022:	and    esp,DWORD PTR ds:0xa5459e62
  428028:	pop    ebx
  428029:	idiv   BYTE PTR [esi]
  42802b:	(bad)  [eax+0x4c]
  42802e:	inc    ebx
  42802f:	mov    ah,0x8b
  428031:	(bad)
  428034:	fbstp  TBYTE PTR [esi-0x5bc5bc15]
  42803a:	fs std 
  42803c:	retf   
  42803d:	cdq    
  42803e:	clc    
  42803f:	sbb    eax,0xcb0001f7
  428044:	add    DWORD PTR [eax],eax
  428046:	add    BYTE PTR [esi-0x788a58d5],cl
  42804c:	jle    0x427ff3
  42804e:	ds stos BYTE PTR es:[edi],al
  428050:	mov    bl,dh
  428052:	add    ecx,ebx
  428054:	sbb    al,0x3c
  428056:	add    BYTE PTR [edx-0x45],bh
  428059:	xchg   ebp,eax
  42805a:	repz mov WORD PTR [ecx],?
  42805d:	in     eax,dx
  42805e:	pop    ecx
  42805f:	imul   edi,DWORD PTR [edi+0x3e],0x954105cb
  428066:	iret   
  428067:	mov    DWORD PTR [ebx],edi
  428069:	ret    0xc808
  42806c:	sub    al,BYTE PTR [esi+0x23]
  42806f:	mov    dl,0xf5
  428071:	push   esp
  428072:	adc    DWORD PTR [edx+0x7f],ebp
  428075:	clc    
  428076:	es mov ch,0x9
  428079:	imul   edi,ebx,0xffffff94
  42807c:	jmp    0xa7f0:0xe14e2f9
  428083:	xor    edx,DWORD PTR [edx-0x2a]
  428086:	xchg   edi,eax
  428087:	adc    eax,ecx
  428089:	dec    eax
  42808a:	fdivrp st(2),st
  42808c:	or     ecx,ebp
  42808e:	das    
  42808f:	inc    edx
  428090:	test   DWORD PTR [edi+0x27],0xa3c701ba
  428097:	aam    0xad
  428099:	mov    ah,0x67
  42809b:	adc    eax,0x89d65f04
  4280a0:	sub    ecx,DWORD PTR [edi+0x1c]
  4280a3:	inc    esp
  4280a4:	mov    esi,0xdeccb117
  4280a9:	(bad)  
  4280aa:	into   
  4280ab:	loopne 0x4280b9
  4280ad:	adc    al,0xf9
  4280af:	fcmovb st,st(5)
  4280b1:	test   eax,0x5c63846a
  4280b6:	or     ecx,ebp
  4280b8:	mov    ?,WORD PTR ds:0x9e011a05
  4280be:	jecxz  0x428072
  4280c0:	sbb    al,0x72
  4280c2:	(bad)  
  4280c4:	stos   BYTE PTR es:[edi],al
  4280c5:	fwait
  4280c6:	add    ecx,DWORD PTR [esp+ecx*1+0x79c134cb]
  4280cd:	inc    esi
  4280ce:	fst    DWORD PTR [edi-0x5b7e77f3]
  4280d4:	add    edx,DWORD PTR [esi]
  4280d6:	cmc    
  4280d7:	xor    eax,0x6e01730e
  4280dc:	inc    esi
  4280dd:	add    DWORD PTR [ebx+ecx*1+0x63c2977c],ebp
  4280e4:	or     bl,al
  4280e6:	aad    0xf7
  4280e8:	stc    
  4280e9:	mov    ebp,0x252834f5
  4280ee:	scas   al,BYTE PTR es:[edi]
  4280ef:	fcomi  st,st(1)
  4280f1:	jne    0x428116
  4280f3:	xchg   esi,eax
  4280f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280f5:	and    eax,0x511cb646
  4280fa:	daa    
  4280fb:	sbb    BYTE PTR [eax+0x297ee365],dh
  428101:	or     dh,BYTE PTR [eax+0x15]
  428104:	dec    edi
  428105:	pop    ss
  428106:	dec    ebx
  428107:	sbb    eax,DWORD PTR [ebp+0x7ebf9baa]
  42810d:	pop    eax
  42810e:	in     eax,dx
  42810f:	xor    DWORD PTR [eax],ebx
  428111:	stc    
  428112:	stos   DWORD PTR es:[edi],eax
  428113:	(bad)  
  428114:	push   ecx
  428115:	(bad)  
  428116:	dec    edi
  428117:	stc    
  428118:	fsqrt  
  42811a:	adc    DWORD PTR [edx],0x485dd665
  428120:	xor    BYTE PTR [esi],ah
  428122:	jge    0x428100
  428124:	mov    ecx,0xa81fd8bc
  428129:	pop    edx
  42812a:	shr    DWORD PTR [eax+0x5892b188],cl
  428130:	xchg   ebx,eax
  428131:	xor    DWORD PTR [esp+esi*2],ebp
  428134:	cmc    
  428135:	mov    edi,0xeb4b54a7
  42813a:	sbb    DWORD PTR [ebx-0x6ab9d083],edi
  428140:	(bad)  
  428142:	xchg   esi,eax
  428143:	fstp   QWORD PTR [edi]
  428145:	in     al,0xe4
  428147:	rol    BYTE PTR [ebx],cl
  428149:	shl    ebp,1
  42814b:	push   ecx
  42814c:	mov    dl,0xd5
  42814e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42814f:	out    dx,al
  428150:	inc    DWORD PTR [edi+0x785045c6]
  428156:	outs   dx,BYTE PTR ds:[esi]
  428157:	mov    ebp,0x38a1b482
  42815c:	mov    esi,ebx
  42815e:	rcr    BYTE PTR [esi+ecx*8-0x67ae131d],1
  428165:	xor    DWORD PTR [esi-0x79],esp
  428168:	dec    edx
  428169:	mov    ecx,0xf8e56913
  42816e:	cmp    esi,esp
  428170:	into   
  428171:	sub    edi,DWORD PTR [esi]
  428173:	cwde   
  428174:	stos   BYTE PTR es:[edi],al
  428175:	jle    0x42813f
  428177:	inc    esi
  428178:	or     eax,0x5dad6923
  42817d:	cmp    al,0x87
  42817f:	mov    ebx,DWORD PTR [edx+0x39]
  428182:	je     0x428172
  428184:	dec    edx
  428185:	les    esp,FWORD PTR [ebx+0x63]
  428188:	jg     0x4281b0
  42818a:	dec    eax
  42818b:	sti    
  42818c:	xor    BYTE PTR [eax-0x6cb1fe3],ch
  428192:	push   esp
  428193:	cmp    al,0x48
  428195:	(bad)  
  428196:	cmp    ecx,DWORD PTR [esi-0x2306a39e]
  42819c:	icebp  
  42819d:	fisubr DWORD PTR [esp+ecx*1+0x59]
  4281a1:	data16 js 0x4281a4
  4281a4:	(bad)  
  4281a5:	fbstp  TBYTE PTR [edx]
  4281a7:	lods   al,BYTE PTR ds:[esi]
  4281a8:	inc    ecx
  4281a9:	add    DWORD PTR [ebx-0x61763254],ebx
  4281af:	add    ch,BYTE PTR [edi-0x55]
  4281b2:	mov    eax,0xa72c90b7
  4281b7:	jg     0x428177
  4281b9:	imul   ecx,ebp,0xffffff96
  4281bc:	stos   BYTE PTR es:[edi],al
  4281bd:	(bad)  
  4281be:	fwait
  4281bf:	jp     0x428181
  4281c1:	xor    esi,DWORD PTR [ecx+0x445c4157]
  4281c7:	hlt    
  4281c8:	adc    DWORD PTR [ebp-0x7c],edx
  4281cb:	push   edx
  4281cc:	jg     0x4281f4
  4281ce:	mov    BYTE PTR [eax+0x35],al
  4281d1:	call   0xdb418c59
  4281d6:	pop    edx
  4281d7:	inc    ebx
  4281d8:	jecxz  0x428251
  4281da:	stos   BYTE PTR es:[edi],al
  4281db:	shl    DWORD PTR [eax-0x7a],cl
  4281de:	rcr    eax,cl
  4281e0:	loope  0x42817d
  4281e2:	pop    es
  4281e3:	or     dl,BYTE PTR [edi-0x30b27e96]
  4281e9:	je     0x4281b2
  4281eb:	dec    edi
  4281ec:	ret    0x762f
  4281ef:	xchg   ebp,eax
  4281f0:	fidivr DWORD PTR [ebp+0x63]
  4281f3:	dec    eax
  4281f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281f5:	mov    al,0xd4
  4281f7:	jecxz  0x428278
  4281f9:	or     al,0xd4
  4281fb:	xchg   esp,eax
  4281fc:	retf   0x9612
  4281ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428200:	cmp    eax,0xd63c87d
  428205:	mov    edx,0x13aad89b
  42820a:	bswap  ecx
  42820c:	mov    DWORD PTR [esi+0x5a],ebp
  42820f:	sbb    edi,eax
  428211:	or     BYTE PTR [eax],al
	...
