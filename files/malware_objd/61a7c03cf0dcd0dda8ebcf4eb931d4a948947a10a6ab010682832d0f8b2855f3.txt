
61a7c03cf0dcd0dda8ebcf4eb931d4a948947a10a6ab010682832d0f8b2855f3.exe:     file format pei-i386


Disassembly of section .text:

10001000 <.text>:
10001000:	push   DWORD PTR [eax]
10001002:	call   DWORD PTR ds:0x100662b4
10001008:	ret    
10001009:	push   DWORD PTR [ecx]
1000100b:	call   DWORD PTR ds:0x100662b4
10001011:	ret    
10001012:	mov    DWORD PTR [ecx],0x100665c8
10001018:	jmp    0x10042fd0
1000101d:	push   esi
1000101e:	mov    esi,ecx
10001020:	mov    DWORD PTR [esi],0x100665c8
10001026:	call   0x10042fd0
1000102b:	test   BYTE PTR [esp+0x8],0x1
10001030:	je     0x10001039
10001032:	push   esi
10001033:	call   0x10042e92
10001038:	pop    ecx
10001039:	mov    eax,esi
1000103b:	pop    esi
1000103c:	ret    0x4
1000103f:	push   ebp
10001040:	mov    ebp,esp
10001042:	push   DWORD PTR [ebp+0x14]
10001045:	push   DWORD PTR [ebp+0x10]
10001048:	push   DWORD PTR [ebp+0xc]
1000104b:	push   DWORD PTR [ebp+0x8]
1000104e:	call   0x100433c5
10001053:	mov    eax,DWORD PTR [ebp+0x8]
10001056:	add    esp,0x10
10001059:	pop    ebp
1000105a:	ret    
1000105b:	push   ebp
1000105c:	mov    ebp,esp
1000105e:	push   DWORD PTR [ebp+0x14]
10001061:	push   DWORD PTR [ebp+0x10]
10001064:	push   DWORD PTR [ebp+0xc]
10001067:	push   DWORD PTR [ebp+0x8]
1000106a:	call   0x10042ea6
1000106f:	mov    eax,DWORD PTR [ebp+0x8]
10001072:	add    esp,0x10
10001075:	pop    ebp
10001076:	ret    
10001077:	push   0x4
10001079:	mov    eax,0x1005f924
1000107e:	call   0x10059a35
10001083:	mov    esi,ecx
10001085:	mov    DWORD PTR [ebp-0x10],esi
10001088:	call   0x10042f01
1000108d:	and    DWORD PTR [ebp-0x4],0x0
10001091:	push   DWORD PTR [ebp+0x8]
10001094:	lea    ecx,[esi+0xc]
10001097:	mov    DWORD PTR [esi],0x1006b960
1000109d:	call   0x100011a7
100010a2:	mov    eax,esi
100010a4:	call   0x10059b0d
100010a9:	ret    0x4
100010ac:	push   esi
100010ad:	mov    esi,ecx
100010af:	push   0x0
100010b1:	push   0x1
100010b3:	lea    ecx,[esi+0xc]
100010b6:	mov    DWORD PTR [esi],0x1006b960
100010bc:	call   0x100012f0
100010c1:	mov    ecx,esi
100010c3:	pop    esi
100010c4:	jmp    0x10042fd0
100010c9:	push   esi
100010ca:	mov    esi,ecx
100010cc:	call   0x100010ac
100010d1:	test   BYTE PTR [esp+0x8],0x1
100010d6:	je     0x100010df
100010d8:	push   esi
100010d9:	call   0x10042e92
100010de:	pop    ecx
100010df:	mov    eax,esi
100010e1:	pop    esi
100010e2:	ret    0x4
100010e5:	mov    DWORD PTR [ecx],0x1006b978
100010eb:	jmp    0x100010ac
100010f0:	push   esi
100010f1:	mov    esi,ecx
100010f3:	mov    DWORD PTR [esi],0x1006b978
100010f9:	call   0x100010ac
100010fe:	test   BYTE PTR [esp+0x8],0x1
10001103:	je     0x1000110c
10001105:	push   esi
10001106:	call   0x10042e92
1000110b:	pop    ecx
1000110c:	mov    eax,esi
1000110e:	pop    esi
1000110f:	ret    0x4
10001112:	push   esi
10001113:	push   DWORD PTR [esp+0x8]
10001117:	mov    esi,ecx
10001119:	call   0x1000112a
1000111e:	mov    DWORD PTR [esi],0x1006b978
10001124:	mov    eax,esi
10001126:	pop    esi
10001127:	ret    0x4
1000112a:	push   0x4
1000112c:	mov    eax,0x1005f924
10001131:	call   0x10059a35
10001136:	mov    esi,ecx
10001138:	mov    DWORD PTR [ebp-0x10],esi
1000113b:	mov    edi,DWORD PTR [ebp+0x8]
1000113e:	push   edi
1000113f:	call   0x10042f78
10001144:	and    DWORD PTR [ebp-0x4],0x0
10001148:	add    edi,0xc
1000114b:	push   edi
1000114c:	lea    ecx,[esi+0xc]
1000114f:	mov    DWORD PTR [esi],0x1006b960
10001155:	call   0x100011a7
1000115a:	mov    eax,esi
1000115c:	call   0x10059b0d
10001161:	ret    0x4
10001164:	push   0x28
10001166:	mov    eax,0x10063165
1000116b:	call   0x10059a9e
10001170:	mov    eax,DWORD PTR [ebp+0x8]
10001173:	lea    edx,[ebp-0x34]
10001176:	push   edx
10001177:	push   eax
10001178:	call   0x1001986b
1000117d:	and    DWORD PTR [ebp-0x4],0x0
10001181:	lea    edi,[ebp-0x34]
10001184:	call   0x10019710
10001189:	mov    bl,al
1000118b:	neg    bl
1000118d:	push   0x0
1000118f:	sbb    bl,bl
10001191:	push   0x1
10001193:	lea    ecx,[ebp-0x30]
10001196:	inc    bl
10001198:	call   0x100012f0
1000119d:	mov    al,bl
1000119f:	call   0x10059b21
100011a4:	ret    0x4
100011a7:	push   esi
100011a8:	mov    esi,ecx
100011aa:	push   0x0
100011ac:	mov    DWORD PTR [esi+0x18],0xf
100011b3:	call   0x1000141c
100011b8:	push   0xffffffff
100011ba:	push   0x0
100011bc:	push   DWORD PTR [esp+0x10]
100011c0:	mov    ecx,esi
100011c2:	call   0x10001241
100011c7:	mov    eax,esi
100011c9:	pop    esi
100011ca:	ret    0x4
100011cd:	push   esi
100011ce:	mov    esi,ecx
100011d0:	push   0x0
100011d2:	mov    DWORD PTR [esi+0x18],0xf
100011d9:	call   0x1000141c
100011de:	push   DWORD PTR [esp+0x8]
100011e2:	mov    ecx,esi
100011e4:	call   0x100012d3
100011e9:	mov    eax,esi
100011eb:	pop    esi
100011ec:	ret    0x4
100011ef:	cmp    DWORD PTR [ecx+0x18],0x10
100011f3:	jb     0x100011f9
100011f5:	mov    eax,DWORD PTR [ecx+0x4]
100011f8:	ret    
100011f9:	lea    eax,[ecx+0x4]
100011fc:	ret    
100011fd:	push   0x0
100011ff:	mov    eax,0x10061d31
10001204:	call   0x10059a35
10001209:	mov    esi,DWORD PTR [ebp+0x8]
1000120c:	and    DWORD PTR [ebp-0x4],0x0
10001210:	push   DWORD PTR [esi+0x18]
10001213:	call   DWORD PTR ds:0x10066070
10001219:	lea    eax,[esi+0xc]
1000121c:	call   0x10001496
10001221:	or     DWORD PTR [ebp-0x4],0xffffffff
10001225:	mov    eax,esi
10001227:	call   0x100014cb
1000122c:	call   0x10059b0d
10001231:	ret    0x4
10001234:	jmp    0x100014cb
10001239:	push   ecx
1000123a:	call   0x10001496
1000123f:	pop    ecx
10001240:	ret    
10001241:	push   ebp
10001242:	mov    ebp,esp
10001244:	mov    eax,DWORD PTR [ebp+0xc]
10001247:	push   ebx
10001248:	push   esi
10001249:	push   edi
1000124a:	mov    edi,DWORD PTR [ebp+0x8]
1000124d:	cmp    DWORD PTR [edi+0x14],eax
10001250:	mov    ebx,ecx
10001252:	jae    0x10001259
10001254:	call   0x100571df
10001259:	mov    esi,DWORD PTR [edi+0x14]
1000125c:	mov    eax,DWORD PTR [ebp+0xc]
1000125f:	sub    esi,eax
10001261:	cmp    DWORD PTR [ebp+0x10],esi
10001264:	jae    0x10001269
10001266:	mov    esi,DWORD PTR [ebp+0x10]
10001269:	cmp    ebx,edi
1000126b:	mov    ecx,ebx
1000126d:	jne    0x10001287
1000126f:	push   0xffffffff
10001271:	add    esi,eax
10001273:	push   esi
10001274:	call   0x100013ad
10001279:	push   DWORD PTR [ebp+0xc]
1000127c:	mov    ecx,ebx
1000127e:	push   0x0
10001280:	call   0x100013ad
10001285:	jmp    0x100012ca
10001287:	push   0x0
10001289:	push   esi
1000128a:	call   0x10001438
1000128f:	test   al,al
10001291:	je     0x100012ca
10001293:	cmp    DWORD PTR [edi+0x18],0x10
10001297:	jb     0x1000129e
10001299:	mov    edi,DWORD PTR [edi+0x4]
1000129c:	jmp    0x100012a1
1000129e:	add    edi,0x4
100012a1:	mov    ecx,DWORD PTR [ebx+0x18]
100012a4:	cmp    ecx,0x10
100012a7:	jb     0x100012ae
100012a9:	mov    eax,DWORD PTR [ebx+0x4]
100012ac:	jmp    0x100012b1
100012ae:	lea    eax,[ebx+0x4]
100012b1:	mov    edx,DWORD PTR [ebp+0xc]
100012b4:	push   esi
100012b5:	add    edi,edx
100012b7:	push   edi
100012b8:	push   ecx
100012b9:	push   eax
100012ba:	call   0x1000103f
100012bf:	add    esp,0x10
100012c2:	push   esi
100012c3:	mov    ecx,ebx
100012c5:	call   0x1000141c
100012ca:	pop    edi
100012cb:	pop    esi
100012cc:	mov    eax,ebx
100012ce:	pop    ebx
100012cf:	pop    ebp
100012d0:	ret    0xc
100012d3:	push   esi
100012d4:	push   DWORD PTR [esp+0x8]
100012d8:	mov    esi,ecx
100012da:	call   0x10043010
100012df:	pop    ecx
100012e0:	push   eax
100012e1:	push   DWORD PTR [esp+0xc]
100012e5:	mov    ecx,esi
100012e7:	call   0x1000133b
100012ec:	pop    esi
100012ed:	ret    0x4
100012f0:	cmp    BYTE PTR [esp+0x4],0x0
100012f5:	push   esi
100012f6:	mov    esi,ecx
100012f8:	je     0x10001325
100012fa:	cmp    DWORD PTR [esi+0x18],0x10
100012fe:	jb     0x10001325
10001300:	cmp    DWORD PTR [esp+0xc],0x0
10001305:	lea    eax,[esi+0x4]
10001308:	push   edi
10001309:	mov    edi,DWORD PTR [eax]
1000130b:	jbe    0x1000131d
1000130d:	push   DWORD PTR [esp+0x10]
10001311:	push   edi
10001312:	push   0x10
10001314:	push   eax
10001315:	call   0x1000103f
1000131a:	add    esp,0x10
1000131d:	push   edi
1000131e:	call   0x10042e92
10001323:	pop    ecx
10001324:	pop    edi
10001325:	push   DWORD PTR [esp+0xc]
10001329:	mov    ecx,esi
1000132b:	mov    DWORD PTR [esi+0x18],0xf
10001332:	call   0x1000141c
10001337:	pop    esi
10001338:	ret    0x8
1000133b:	push   ebp
1000133c:	mov    ebp,esp
1000133e:	push   esi
1000133f:	push   edi
10001340:	mov    edi,DWORD PTR [ebp+0x8]
10001343:	push   edi
10001344:	mov    esi,ecx
10001346:	call   0x100015e2
1000134b:	test   al,al
1000134d:	je     0x1000136d
1000134f:	cmp    DWORD PTR [esi+0x18],0x10
10001353:	jb     0x1000135a
10001355:	mov    eax,DWORD PTR [esi+0x4]
10001358:	jmp    0x1000135d
1000135a:	lea    eax,[esi+0x4]
1000135d:	push   DWORD PTR [ebp+0xc]
10001360:	sub    edi,eax
10001362:	push   edi
10001363:	push   esi
10001364:	mov    ecx,esi
10001366:	call   0x10001241
1000136b:	jmp    0x100013a7
1000136d:	push   0x0
1000136f:	push   DWORD PTR [ebp+0xc]
10001372:	mov    ecx,esi
10001374:	call   0x10001438
10001379:	test   al,al
1000137b:	je     0x100013a5
1000137d:	mov    ecx,DWORD PTR [esi+0x18]
10001380:	cmp    ecx,0x10
10001383:	jb     0x1000138a
10001385:	mov    eax,DWORD PTR [esi+0x4]
10001388:	jmp    0x1000138d
1000138a:	lea    eax,[esi+0x4]
1000138d:	push   DWORD PTR [ebp+0xc]
10001390:	push   edi
10001391:	push   ecx
10001392:	push   eax
10001393:	call   0x1000103f
10001398:	add    esp,0x10
1000139b:	push   DWORD PTR [ebp+0xc]
1000139e:	mov    ecx,esi
100013a0:	call   0x1000141c
100013a5:	mov    eax,esi
100013a7:	pop    edi
100013a8:	pop    esi
100013a9:	pop    ebp
100013aa:	ret    0x8
100013ad:	push   ebp
100013ae:	mov    ebp,esp
100013b0:	push   esi
100013b1:	push   edi
100013b2:	mov    edi,DWORD PTR [ebp+0x8]
100013b5:	mov    esi,ecx
100013b7:	cmp    DWORD PTR [esi+0x14],edi
100013ba:	jae    0x100013c1
100013bc:	call   0x100571df
100013c1:	mov    eax,DWORD PTR [esi+0x14]
100013c4:	sub    eax,edi
100013c6:	cmp    eax,DWORD PTR [ebp+0xc]
100013c9:	jae    0x100013ce
100013cb:	mov    DWORD PTR [ebp+0xc],eax
100013ce:	cmp    DWORD PTR [ebp+0xc],0x0
100013d2:	jbe    0x10001414
100013d4:	mov    ecx,DWORD PTR [esi+0x18]
100013d7:	cmp    ecx,0x10
100013da:	push   ebx
100013db:	lea    edx,[esi+0x4]
100013de:	jb     0x100013e4
100013e0:	mov    ebx,DWORD PTR [edx]
100013e2:	jmp    0x100013e6
100013e4:	mov    ebx,edx
100013e6:	cmp    ecx,0x10
100013e9:	jb     0x100013ed
100013eb:	mov    edx,DWORD PTR [edx]
100013ed:	sub    eax,DWORD PTR [ebp+0xc]
100013f0:	add    ebx,edi
100013f2:	add    ebx,DWORD PTR [ebp+0xc]
100013f5:	push   eax
100013f6:	push   ebx
100013f7:	sub    ecx,edi
100013f9:	push   ecx
100013fa:	add    edx,edi
100013fc:	push   edx
100013fd:	call   0x1000105b
10001402:	mov    eax,DWORD PTR [esi+0x14]
10001405:	sub    eax,DWORD PTR [ebp+0xc]
10001408:	add    esp,0x10
1000140b:	push   eax
1000140c:	mov    ecx,esi
1000140e:	call   0x1000141c
10001413:	pop    ebx
10001414:	pop    edi
10001415:	mov    eax,esi
10001417:	pop    esi
10001418:	pop    ebp
10001419:	ret    0x8
1000141c:	cmp    DWORD PTR [ecx+0x18],0x10
10001420:	mov    eax,DWORD PTR [esp+0x4]
10001424:	mov    DWORD PTR [ecx+0x14],eax
10001427:	jb     0x1000142e
10001429:	mov    ecx,DWORD PTR [ecx+0x4]
1000142c:	jmp    0x10001431
1000142e:	add    ecx,0x4
10001431:	mov    BYTE PTR [ecx+eax*1],0x0
10001435:	ret    0x4
10001438:	push   esi
10001439:	push   edi
1000143a:	mov    edi,DWORD PTR [esp+0xc]
1000143e:	cmp    edi,0xfffffffe
10001441:	mov    esi,ecx
10001443:	jbe    0x1000144a
10001445:	call   0x100571a0
1000144a:	cmp    DWORD PTR [esi+0x18],edi
1000144d:	jae    0x1000145c
1000144f:	push   DWORD PTR [esi+0x14]
10001452:	mov    ecx,esi
10001454:	push   edi
10001455:	call   0x10001500
1000145a:	jmp    0x10001489
1000145c:	cmp    BYTE PTR [esp+0x10],0x0
10001461:	je     0x1000147d
10001463:	cmp    edi,0x10
10001466:	jae    0x1000147d
10001468:	mov    eax,DWORD PTR [esi+0x14]
1000146b:	cmp    edi,eax
1000146d:	jae    0x10001471
1000146f:	mov    eax,edi
10001471:	push   eax
10001472:	push   0x1
10001474:	mov    ecx,esi
10001476:	call   0x100012f0
1000147b:	jmp    0x10001489
1000147d:	test   edi,edi
1000147f:	jne    0x10001489
10001481:	push   edi
10001482:	mov    ecx,esi
10001484:	call   0x1000141c
10001489:	xor    eax,eax
1000148b:	cmp    eax,edi
1000148d:	sbb    eax,eax
1000148f:	pop    edi
10001490:	neg    eax
10001492:	pop    esi
10001493:	ret    0x8
10001496:	push   ebp
10001497:	mov    ebp,esp
10001499:	and    esp,0xfffffff8
1000149c:	push   ecx
1000149d:	push   ecx
1000149e:	push   ebx
1000149f:	push   edi
100014a0:	mov    edi,eax
100014a2:	mov    eax,DWORD PTR [edi+0x4]
100014a5:	mov    ecx,DWORD PTR [eax]
100014a7:	push   eax
100014a8:	push   edi
100014a9:	push   ecx
100014aa:	push   edi
100014ab:	lea    ebx,[esp+0x18]
100014af:	call   0x10001616
100014b4:	push   DWORD PTR [edi+0x4]
100014b7:	call   0x10042e92
100014bc:	and    DWORD PTR [edi+0x4],0x0
100014c0:	and    DWORD PTR [edi+0x8],0x0
100014c4:	pop    ecx
100014c5:	pop    edi
100014c6:	pop    ebx
100014c7:	mov    esp,ebp
100014c9:	pop    ebp
100014ca:	ret    
100014cb:	push   ebp
100014cc:	mov    ebp,esp
100014ce:	and    esp,0xfffffff8
100014d1:	push   ecx
100014d2:	push   ecx
100014d3:	push   ebx
100014d4:	push   edi
100014d5:	mov    edi,eax
100014d7:	mov    eax,DWORD PTR [edi+0x4]
100014da:	mov    ecx,DWORD PTR [eax]
100014dc:	push   eax
100014dd:	push   edi
100014de:	push   ecx
100014df:	push   edi
100014e0:	lea    ebx,[esp+0x18]
100014e4:	call   0x100016c2
100014e9:	push   DWORD PTR [edi+0x4]
100014ec:	call   0x10042e92
100014f1:	and    DWORD PTR [edi+0x4],0x0
100014f5:	and    DWORD PTR [edi+0x8],0x0
100014f9:	pop    ecx
100014fa:	pop    edi
100014fb:	pop    ebx
100014fc:	mov    esp,ebp
100014fe:	pop    ebp
100014ff:	ret    
10001500:	push   0xc
10001502:	mov    eax,0x1005f901
10001507:	call   0x10059a68
1000150c:	mov    edi,ecx
1000150e:	mov    DWORD PTR [ebp-0x18],edi
10001511:	mov    esi,DWORD PTR [ebp+0x8]
10001514:	or     esi,0xf
10001517:	cmp    esi,0xfffffffe
1000151a:	jbe    0x10001521
1000151c:	mov    esi,DWORD PTR [ebp+0x8]
1000151f:	jmp    0x10001546
10001521:	xor    edx,edx
10001523:	push   0x3
10001525:	mov    eax,esi
10001527:	pop    ebx
10001528:	div    ebx
1000152a:	mov    ecx,DWORD PTR [edi+0x18]
1000152d:	mov    DWORD PTR [ebp-0x14],ecx
10001530:	shr    DWORD PTR [ebp-0x14],1
10001533:	mov    edx,DWORD PTR [ebp-0x14]
10001536:	cmp    eax,edx
10001538:	jae    0x10001546
1000153a:	push   0xfffffffe
1000153c:	pop    eax
1000153d:	sub    eax,edx
1000153f:	cmp    ecx,eax
10001541:	ja     0x10001546
10001543:	lea    esi,[edx+ecx*1]
10001546:	and    DWORD PTR [ebp-0x4],0x0
1000154a:	lea    eax,[esi+0x1]
1000154d:	push   0x0
1000154f:	push   eax
10001550:	call   0x10001ebe
10001555:	pop    ecx
10001556:	pop    ecx
10001557:	mov    ebx,eax
10001559:	jmp    0x10001585
1000155b:	mov    eax,DWORD PTR [ebp+0x8]
1000155e:	mov    DWORD PTR [ebp-0x10],esp
10001561:	mov    DWORD PTR [ebp+0x8],eax
10001564:	inc    eax
10001565:	push   0x0
10001567:	push   eax
10001568:	mov    BYTE PTR [ebp-0x4],0x2
1000156c:	call   0x10001ebe
10001571:	pop    ecx
10001572:	mov    DWORD PTR [ebp-0x14],eax
10001575:	pop    ecx
10001576:	mov    eax,0x1000157c
1000157b:	ret    
1000157c:	mov    edi,DWORD PTR [ebp-0x18]
1000157f:	mov    esi,DWORD PTR [ebp+0x8]
10001582:	mov    ebx,DWORD PTR [ebp-0x14]
10001585:	cmp    DWORD PTR [ebp+0xc],0x0
10001589:	jbe    0x100015aa
1000158b:	cmp    DWORD PTR [edi+0x18],0x10
1000158f:	jb     0x10001596
10001591:	mov    eax,DWORD PTR [edi+0x4]
10001594:	jmp    0x10001599
10001596:	lea    eax,[edi+0x4]
10001599:	push   DWORD PTR [ebp+0xc]
1000159c:	push   eax
1000159d:	lea    eax,[esi+0x1]
100015a0:	push   eax
100015a1:	push   ebx
100015a2:	call   0x1000103f
100015a7:	add    esp,0x10
100015aa:	push   0x0
100015ac:	push   0x1
100015ae:	mov    ecx,edi
100015b0:	call   0x100012f0
100015b5:	push   DWORD PTR [ebp+0xc]
100015b8:	mov    ecx,edi
100015ba:	mov    DWORD PTR [edi+0x4],ebx
100015bd:	mov    DWORD PTR [edi+0x18],esi
100015c0:	call   0x1000141c
100015c5:	call   0x10059b0d
100015ca:	ret    0x8
100015cd:	mov    ecx,DWORD PTR [ebp-0x18]
100015d0:	xor    esi,esi
100015d2:	push   esi
100015d3:	push   0x1
100015d5:	call   0x100012f0
100015da:	push   esi
100015db:	push   esi
100015dc:	call   0x100479b4
100015e1:	int3   
100015e2:	push   esi
100015e3:	mov    esi,DWORD PTR [ecx+0x18]
100015e6:	cmp    esi,0x10
100015e9:	lea    eax,[ecx+0x4]
100015ec:	jb     0x100015f2
100015ee:	mov    edx,DWORD PTR [eax]
100015f0:	jmp    0x100015f4
100015f2:	mov    edx,eax
100015f4:	cmp    DWORD PTR [esp+0x8],edx
100015f8:	jb     0x10001610
100015fa:	cmp    esi,0x10
100015fd:	jb     0x10001601
100015ff:	mov    eax,DWORD PTR [eax]
10001601:	mov    ecx,DWORD PTR [ecx+0x14]
10001604:	add    ecx,eax
10001606:	cmp    ecx,DWORD PTR [esp+0x8]
1000160a:	jbe    0x10001610
1000160c:	mov    al,0x1
1000160e:	jmp    0x10001612
10001610:	xor    al,al
10001612:	pop    esi
10001613:	ret    0x4
10001616:	push   ebp
10001617:	mov    ebp,esp
10001619:	mov    eax,DWORD PTR [edi+0x4]
1000161c:	sub    esp,0x14
1000161f:	cmp    DWORD PTR [ebp+0x8],0x0
10001623:	push   esi
10001624:	mov    esi,DWORD PTR [eax]
10001626:	je     0x1000162d
10001628:	cmp    DWORD PTR [ebp+0x8],edi
1000162b:	je     0x10001632
1000162d:	call   0x100433b0
10001632:	cmp    DWORD PTR [ebp+0xc],esi
10001635:	jne    0x1000167a
10001637:	cmp    DWORD PTR [ebp+0x10],0x0
1000163b:	mov    esi,DWORD PTR [edi+0x4]
1000163e:	je     0x10001645
10001640:	cmp    DWORD PTR [ebp+0x10],edi
10001643:	je     0x1000164a
10001645:	call   0x100433b0
1000164a:	cmp    DWORD PTR [ebp+0x14],esi
1000164d:	jne    0x1000167a
1000164f:	mov    eax,DWORD PTR [edi+0x4]
10001652:	push   DWORD PTR [eax+0x4]
10001655:	mov    ecx,edi
10001657:	call   0x10001c9c
1000165c:	mov    eax,DWORD PTR [edi+0x4]
1000165f:	mov    DWORD PTR [eax+0x4],eax
10001662:	mov    eax,DWORD PTR [edi+0x4]
10001665:	and    DWORD PTR [edi+0x8],0x0
10001669:	mov    DWORD PTR [eax],eax
1000166b:	mov    eax,DWORD PTR [edi+0x4]
1000166e:	mov    DWORD PTR [eax+0x8],eax
10001671:	mov    eax,DWORD PTR [edi+0x4]
10001674:	mov    eax,DWORD PTR [eax]
10001676:	mov    DWORD PTR [ebx],edi
10001678:	jmp    0x100016b8
1000167a:	mov    eax,DWORD PTR [ebp+0x8]
1000167d:	test   eax,eax
1000167f:	je     0x10001686
10001681:	cmp    eax,DWORD PTR [ebp+0x10]
10001684:	je     0x1000168b
10001686:	call   0x100433b0
1000168b:	mov    eax,DWORD PTR [ebp+0xc]
1000168e:	cmp    eax,DWORD PTR [ebp+0x14]
10001691:	mov    ecx,DWORD PTR [ebp+0x8]
10001694:	je     0x100016b6
10001696:	lea    esi,[ebp+0x8]
10001699:	mov    DWORD PTR [ebp-0x8],ecx
1000169c:	mov    DWORD PTR [ebp-0x4],eax
1000169f:	call   0x10001e71
100016a4:	push   DWORD PTR [ebp-0x4]
100016a7:	lea    eax,[ebp-0x10]
100016aa:	push   DWORD PTR [ebp-0x8]
100016ad:	push   eax
100016ae:	push   edi
100016af:	call   0x1000176e
100016b4:	jmp    0x1000167a
100016b6:	mov    DWORD PTR [ebx],ecx
100016b8:	mov    DWORD PTR [ebx+0x4],eax
100016bb:	mov    eax,ebx
100016bd:	pop    esi
100016be:	leave  
100016bf:	ret    0x10
100016c2:	push   ebp
100016c3:	mov    ebp,esp
100016c5:	mov    eax,DWORD PTR [edi+0x4]
100016c8:	sub    esp,0x14
100016cb:	cmp    DWORD PTR [ebp+0x8],0x0
100016cf:	push   esi
100016d0:	mov    esi,DWORD PTR [eax]
100016d2:	je     0x100016d9
100016d4:	cmp    DWORD PTR [ebp+0x8],edi
100016d7:	je     0x100016de
100016d9:	call   0x100433b0
100016de:	cmp    DWORD PTR [ebp+0xc],esi
100016e1:	jne    0x10001726
100016e3:	cmp    DWORD PTR [ebp+0x10],0x0
100016e7:	mov    esi,DWORD PTR [edi+0x4]
100016ea:	je     0x100016f1
100016ec:	cmp    DWORD PTR [ebp+0x10],edi
100016ef:	je     0x100016f6
100016f1:	call   0x100433b0
100016f6:	cmp    DWORD PTR [ebp+0x14],esi
100016f9:	jne    0x10001726
100016fb:	mov    eax,DWORD PTR [edi+0x4]
100016fe:	push   DWORD PTR [eax+0x4]
10001701:	mov    ecx,edi
10001703:	call   0x10001d50
10001708:	mov    eax,DWORD PTR [edi+0x4]
1000170b:	mov    DWORD PTR [eax+0x4],eax
1000170e:	mov    eax,DWORD PTR [edi+0x4]
10001711:	and    DWORD PTR [edi+0x8],0x0
10001715:	mov    DWORD PTR [eax],eax
10001717:	mov    eax,DWORD PTR [edi+0x4]
1000171a:	mov    DWORD PTR [eax+0x8],eax
1000171d:	mov    eax,DWORD PTR [edi+0x4]
10001720:	mov    eax,DWORD PTR [eax]
10001722:	mov    DWORD PTR [ebx],edi
10001724:	jmp    0x10001764
10001726:	mov    eax,DWORD PTR [ebp+0x8]
10001729:	test   eax,eax
1000172b:	je     0x10001732
1000172d:	cmp    eax,DWORD PTR [ebp+0x10]
10001730:	je     0x10001737
10001732:	call   0x100433b0
10001737:	mov    eax,DWORD PTR [ebp+0xc]
1000173a:	cmp    eax,DWORD PTR [ebp+0x14]
1000173d:	mov    ecx,DWORD PTR [ebp+0x8]
10001740:	je     0x10001762
10001742:	lea    esi,[ebp+0x8]
10001745:	mov    DWORD PTR [ebp-0x8],ecx
10001748:	mov    DWORD PTR [ebp-0x4],eax
1000174b:	call   0x10001e24
10001750:	push   DWORD PTR [ebp-0x4]
10001753:	lea    eax,[ebp-0x10]
10001756:	push   DWORD PTR [ebp-0x8]
10001759:	push   eax
1000175a:	push   edi
1000175b:	call   0x100019f8
10001760:	jmp    0x10001726
10001762:	mov    DWORD PTR [ebx],ecx
10001764:	mov    DWORD PTR [ebx+0x4],eax
10001767:	mov    eax,ebx
10001769:	pop    esi
1000176a:	leave  
1000176b:	ret    0x10
1000176e:	push   0x44
10001770:	mov    eax,0x1006071f
10001775:	call   0x10059a35
1000177a:	mov    ebx,DWORD PTR [ebp+0x14]
1000177d:	cmp    BYTE PTR [ebx+0x11],0x0
10001781:	je     0x100017b5
10001783:	push   0x1006ccec
10001788:	lea    ecx,[ebp-0x28]
1000178b:	call   0x100011cd
10001790:	and    DWORD PTR [ebp-0x4],0x0
10001794:	lea    eax,[ebp-0x28]
10001797:	push   eax
10001798:	lea    ecx,[ebp-0x50]
1000179b:	call   0x10001077
100017a0:	push   0x10074cc0
100017a5:	lea    eax,[ebp-0x50]
100017a8:	push   eax
100017a9:	mov    DWORD PTR [ebp-0x50],0x1006b978
100017b0:	call   0x100479b4
100017b5:	lea    esi,[ebp+0x10]
100017b8:	call   0x10001e71
100017bd:	mov    ecx,DWORD PTR [ebx]
100017bf:	cmp    BYTE PTR [ecx+0x11],0x0
100017c3:	je     0x100017ca
100017c5:	mov    edi,DWORD PTR [ebx+0x8]
100017c8:	jmp    0x100017e1
100017ca:	mov    eax,DWORD PTR [ebx+0x8]
100017cd:	cmp    BYTE PTR [eax+0x11],0x0
100017d1:	je     0x100017d7
100017d3:	mov    edi,ecx
100017d5:	jmp    0x100017e1
100017d7:	mov    eax,DWORD PTR [ebp+0x14]
100017da:	cmp    eax,ebx
100017dc:	mov    edi,DWORD PTR [eax+0x8]
100017df:	jne    0x10001857
100017e1:	cmp    BYTE PTR [edi+0x11],0x0
100017e5:	mov    esi,DWORD PTR [ebx+0x4]
100017e8:	jne    0x100017ed
100017ea:	mov    DWORD PTR [edi+0x4],esi
100017ed:	mov    ecx,DWORD PTR [ebp+0x8]
100017f0:	mov    eax,DWORD PTR [ecx+0x4]
100017f3:	cmp    DWORD PTR [eax+0x4],ebx
100017f6:	jne    0x100017fd
100017f8:	mov    DWORD PTR [eax+0x4],edi
100017fb:	jmp    0x10001808
100017fd:	cmp    DWORD PTR [esi],ebx
100017ff:	jne    0x10001805
10001801:	mov    DWORD PTR [esi],edi
10001803:	jmp    0x10001808
10001805:	mov    DWORD PTR [esi+0x8],edi
10001808:	mov    edx,DWORD PTR [ecx+0x4]
1000180b:	cmp    DWORD PTR [edx],ebx
1000180d:	jne    0x1000182b
1000180f:	cmp    BYTE PTR [edi+0x11],0x0
10001813:	je     0x10001819
10001815:	mov    ecx,esi
10001817:	jmp    0x10001829
10001819:	mov    eax,DWORD PTR [edi]
1000181b:	mov    ecx,edi
1000181d:	jmp    0x10001823
1000181f:	mov    ecx,eax
10001821:	mov    eax,DWORD PTR [ecx]
10001823:	cmp    BYTE PTR [eax+0x11],0x0
10001827:	je     0x1000181f
10001829:	mov    DWORD PTR [edx],ecx
1000182b:	mov    eax,DWORD PTR [ebp+0x8]
1000182e:	mov    edx,DWORD PTR [eax+0x4]
10001831:	cmp    DWORD PTR [edx+0x8],ebx
10001834:	jne    0x100018b1
10001836:	cmp    BYTE PTR [edi+0x11],0x0
1000183a:	je     0x10001840
1000183c:	mov    ecx,esi
1000183e:	jmp    0x10001852
10001840:	mov    eax,DWORD PTR [edi+0x8]
10001843:	mov    ecx,edi
10001845:	jmp    0x1000184c
10001847:	mov    ecx,eax
10001849:	mov    eax,DWORD PTR [ecx+0x8]
1000184c:	cmp    BYTE PTR [eax+0x11],0x0
10001850:	je     0x10001847
10001852:	mov    DWORD PTR [edx+0x8],ecx
10001855:	jmp    0x100018b1
10001857:	mov    DWORD PTR [ecx+0x4],eax
1000185a:	mov    ecx,DWORD PTR [ebx]
1000185c:	mov    DWORD PTR [eax],ecx
1000185e:	cmp    eax,DWORD PTR [ebx+0x8]
10001861:	jne    0x10001867
10001863:	mov    esi,eax
10001865:	jmp    0x10001881
10001867:	cmp    BYTE PTR [edi+0x11],0x0
1000186b:	mov    esi,DWORD PTR [eax+0x4]
1000186e:	jne    0x10001873
10001870:	mov    DWORD PTR [edi+0x4],esi
10001873:	mov    DWORD PTR [esi],edi
10001875:	mov    ecx,DWORD PTR [ebx+0x8]
10001878:	mov    DWORD PTR [eax+0x8],ecx
1000187b:	mov    ecx,DWORD PTR [ebx+0x8]
1000187e:	mov    DWORD PTR [ecx+0x4],eax
10001881:	mov    ecx,DWORD PTR [ebp+0x8]
10001884:	mov    ecx,DWORD PTR [ecx+0x4]
10001887:	cmp    DWORD PTR [ecx+0x4],ebx
1000188a:	jne    0x10001891
1000188c:	mov    DWORD PTR [ecx+0x4],eax
1000188f:	jmp    0x1000189f
10001891:	mov    ecx,DWORD PTR [ebx+0x4]
10001894:	cmp    DWORD PTR [ecx],ebx
10001896:	jne    0x1000189c
10001898:	mov    DWORD PTR [ecx],eax
1000189a:	jmp    0x1000189f
1000189c:	mov    DWORD PTR [ecx+0x8],eax
1000189f:	mov    ecx,DWORD PTR [ebx+0x4]
100018a2:	mov    DWORD PTR [eax+0x4],ecx
100018a5:	mov    dl,BYTE PTR [ebx+0x10]
100018a8:	mov    cl,BYTE PTR [eax+0x10]
100018ab:	mov    BYTE PTR [eax+0x10],dl
100018ae:	mov    BYTE PTR [ebx+0x10],cl
100018b1:	cmp    BYTE PTR [ebx+0x10],0x1
100018b5:	jne    0x100019cd
100018bb:	jmp    0x10001981
100018c0:	cmp    BYTE PTR [edi+0x10],0x1
100018c4:	jne    0x100019c9
100018ca:	mov    ecx,DWORD PTR [esi]
100018cc:	cmp    edi,ecx
100018ce:	jne    0x10001947
100018d0:	mov    ecx,DWORD PTR [esi+0x8]
100018d3:	cmp    BYTE PTR [ecx+0x10],0x0
100018d7:	jne    0x100018ee
100018d9:	push   DWORD PTR [ebp+0x8]
100018dc:	mov    BYTE PTR [ecx+0x10],0x1
100018e0:	mov    ecx,esi
100018e2:	mov    BYTE PTR [esi+0x10],0x0
100018e6:	call   0x10001cce
100018eb:	mov    ecx,DWORD PTR [esi+0x8]
100018ee:	cmp    BYTE PTR [ecx+0x11],0x0
100018f2:	jne    0x1000197c
100018f8:	mov    eax,DWORD PTR [ecx]
100018fa:	cmp    BYTE PTR [eax+0x10],0x1
100018fe:	jne    0x10001909
10001900:	mov    eax,DWORD PTR [ecx+0x8]
10001903:	cmp    BYTE PTR [eax+0x10],0x1
10001907:	je     0x10001978
10001909:	mov    eax,DWORD PTR [ecx+0x8]
1000190c:	cmp    BYTE PTR [eax+0x10],0x1
10001910:	jne    0x10001927
10001912:	mov    eax,DWORD PTR [ecx]
10001914:	push   DWORD PTR [ebp+0x8]
10001917:	mov    BYTE PTR [eax+0x10],0x1
1000191b:	mov    BYTE PTR [ecx+0x10],0x0
1000191f:	call   0x10001d0e
10001924:	mov    ecx,DWORD PTR [esi+0x8]
10001927:	mov    al,BYTE PTR [esi+0x10]
1000192a:	push   DWORD PTR [ebp+0x8]
1000192d:	mov    BYTE PTR [ecx+0x10],al
10001930:	mov    BYTE PTR [esi+0x10],0x1
10001934:	mov    eax,DWORD PTR [ecx+0x8]
10001937:	mov    ecx,esi
10001939:	mov    BYTE PTR [eax+0x10],0x1
1000193d:	call   0x10001cce
10001942:	jmp    0x100019c9
10001947:	cmp    BYTE PTR [ecx+0x10],0x0
1000194b:	jne    0x10001961
1000194d:	push   DWORD PTR [ebp+0x8]
10001950:	mov    BYTE PTR [ecx+0x10],0x1
10001954:	mov    ecx,esi
10001956:	mov    BYTE PTR [esi+0x10],0x0
1000195a:	call   0x10001d0e
1000195f:	mov    ecx,DWORD PTR [esi]
10001961:	cmp    BYTE PTR [ecx+0x11],0x0
10001965:	jne    0x1000197c
10001967:	mov    eax,DWORD PTR [ecx+0x8]
1000196a:	cmp    BYTE PTR [eax+0x10],0x1
1000196e:	jne    0x10001992
10001970:	mov    eax,DWORD PTR [ecx]
10001972:	cmp    BYTE PTR [eax+0x10],0x1
10001976:	jne    0x10001992
10001978:	mov    BYTE PTR [ecx+0x10],0x0
1000197c:	mov    edi,esi
1000197e:	mov    esi,DWORD PTR [esi+0x4]
10001981:	mov    eax,DWORD PTR [ebp+0x8]
10001984:	mov    eax,DWORD PTR [eax+0x4]
10001987:	cmp    edi,DWORD PTR [eax+0x4]
1000198a:	jne    0x100018c0
10001990:	jmp    0x100019c9
10001992:	mov    eax,DWORD PTR [ecx]
10001994:	cmp    BYTE PTR [eax+0x10],0x1
10001998:	jne    0x100019af
1000199a:	mov    eax,DWORD PTR [ecx+0x8]
1000199d:	push   DWORD PTR [ebp+0x8]
100019a0:	mov    BYTE PTR [eax+0x10],0x1
100019a4:	mov    BYTE PTR [ecx+0x10],0x0
100019a8:	call   0x10001cce
100019ad:	mov    ecx,DWORD PTR [esi]
100019af:	mov    al,BYTE PTR [esi+0x10]
100019b2:	push   DWORD PTR [ebp+0x8]
100019b5:	mov    BYTE PTR [ecx+0x10],al
100019b8:	mov    BYTE PTR [esi+0x10],0x1
100019bc:	mov    eax,DWORD PTR [ecx]
100019be:	mov    ecx,esi
100019c0:	mov    BYTE PTR [eax+0x10],0x1
100019c4:	call   0x10001d0e
100019c9:	mov    BYTE PTR [edi+0x10],0x1
100019cd:	push   ebx
100019ce:	call   0x10042e92
100019d3:	pop    ecx
100019d4:	mov    ecx,DWORD PTR [ebp+0x8]
100019d7:	mov    eax,DWORD PTR [ecx+0x8]
100019da:	test   eax,eax
100019dc:	jbe    0x100019e2
100019de:	dec    eax
100019df:	mov    DWORD PTR [ecx+0x8],eax
100019e2:	mov    ecx,DWORD PTR [ebp+0x10]
100019e5:	mov    eax,DWORD PTR [ebp+0xc]
100019e8:	mov    DWORD PTR [eax],ecx
100019ea:	mov    ecx,DWORD PTR [ebp+0x14]
100019ed:	mov    DWORD PTR [eax+0x4],ecx
100019f0:	call   0x10059b0d
100019f5:	ret    0x10
100019f8:	push   0x44
100019fa:	mov    eax,0x1006071f
100019ff:	call   0x10059a35
10001a04:	mov    edi,DWORD PTR [ebp+0x14]
10001a07:	cmp    BYTE PTR [edi+0x4d],0x0
10001a0b:	je     0x10001a3f
10001a0d:	push   0x1006ccec
10001a12:	lea    ecx,[ebp-0x28]
10001a15:	call   0x100011cd
10001a1a:	and    DWORD PTR [ebp-0x4],0x0
10001a1e:	lea    eax,[ebp-0x28]
10001a21:	push   eax
10001a22:	lea    ecx,[ebp-0x50]
10001a25:	call   0x10001077
10001a2a:	push   0x10074cc0
10001a2f:	lea    eax,[ebp-0x50]
10001a32:	push   eax
10001a33:	mov    DWORD PTR [ebp-0x50],0x1006b978
10001a3a:	call   0x100479b4
10001a3f:	lea    esi,[ebp+0x10]
10001a42:	call   0x10001e24
10001a47:	mov    ecx,DWORD PTR [edi]
10001a49:	cmp    BYTE PTR [ecx+0x4d],0x0
10001a4d:	je     0x10001a54
10001a4f:	mov    ebx,DWORD PTR [edi+0x8]
10001a52:	jmp    0x10001a6b
10001a54:	mov    eax,DWORD PTR [edi+0x8]
10001a57:	cmp    BYTE PTR [eax+0x4d],0x0
10001a5b:	je     0x10001a61
10001a5d:	mov    ebx,ecx
10001a5f:	jmp    0x10001a6b
10001a61:	mov    eax,DWORD PTR [ebp+0x14]
10001a64:	cmp    eax,edi
10001a66:	mov    ebx,DWORD PTR [eax+0x8]
10001a69:	jne    0x10001ae1
10001a6b:	cmp    BYTE PTR [ebx+0x4d],0x0
10001a6f:	mov    esi,DWORD PTR [edi+0x4]
10001a72:	jne    0x10001a77
10001a74:	mov    DWORD PTR [ebx+0x4],esi
10001a77:	mov    ecx,DWORD PTR [ebp+0x8]
10001a7a:	mov    eax,DWORD PTR [ecx+0x4]
10001a7d:	cmp    DWORD PTR [eax+0x4],edi
10001a80:	jne    0x10001a87
10001a82:	mov    DWORD PTR [eax+0x4],ebx
10001a85:	jmp    0x10001a92
10001a87:	cmp    DWORD PTR [esi],edi
10001a89:	jne    0x10001a8f
10001a8b:	mov    DWORD PTR [esi],ebx
10001a8d:	jmp    0x10001a92
10001a8f:	mov    DWORD PTR [esi+0x8],ebx
10001a92:	mov    edx,DWORD PTR [ecx+0x4]
10001a95:	cmp    DWORD PTR [edx],edi
10001a97:	jne    0x10001ab5
10001a99:	cmp    BYTE PTR [ebx+0x4d],0x0
10001a9d:	je     0x10001aa3
10001a9f:	mov    ecx,esi
10001aa1:	jmp    0x10001ab3
10001aa3:	mov    eax,DWORD PTR [ebx]
10001aa5:	mov    ecx,ebx
10001aa7:	jmp    0x10001aad
10001aa9:	mov    ecx,eax
10001aab:	mov    eax,DWORD PTR [ecx]
10001aad:	cmp    BYTE PTR [eax+0x4d],0x0
10001ab1:	je     0x10001aa9
10001ab3:	mov    DWORD PTR [edx],ecx
10001ab5:	mov    eax,DWORD PTR [ebp+0x8]
10001ab8:	mov    edx,DWORD PTR [eax+0x4]
10001abb:	cmp    DWORD PTR [edx+0x8],edi
10001abe:	jne    0x10001b3b
10001ac0:	cmp    BYTE PTR [ebx+0x4d],0x0
10001ac4:	je     0x10001aca
10001ac6:	mov    ecx,esi
10001ac8:	jmp    0x10001adc
10001aca:	mov    eax,DWORD PTR [ebx+0x8]
10001acd:	mov    ecx,ebx
10001acf:	jmp    0x10001ad6
10001ad1:	mov    ecx,eax
10001ad3:	mov    eax,DWORD PTR [ecx+0x8]
10001ad6:	cmp    BYTE PTR [eax+0x4d],0x0
10001ada:	je     0x10001ad1
10001adc:	mov    DWORD PTR [edx+0x8],ecx
10001adf:	jmp    0x10001b3b
10001ae1:	mov    DWORD PTR [ecx+0x4],eax
10001ae4:	mov    ecx,DWORD PTR [edi]
10001ae6:	mov    DWORD PTR [eax],ecx
10001ae8:	cmp    eax,DWORD PTR [edi+0x8]
10001aeb:	jne    0x10001af1
10001aed:	mov    esi,eax
10001aef:	jmp    0x10001b0b
10001af1:	cmp    BYTE PTR [ebx+0x4d],0x0
10001af5:	mov    esi,DWORD PTR [eax+0x4]
10001af8:	jne    0x10001afd
10001afa:	mov    DWORD PTR [ebx+0x4],esi
10001afd:	mov    DWORD PTR [esi],ebx
10001aff:	mov    ecx,DWORD PTR [edi+0x8]
10001b02:	mov    DWORD PTR [eax+0x8],ecx
10001b05:	mov    ecx,DWORD PTR [edi+0x8]
10001b08:	mov    DWORD PTR [ecx+0x4],eax
10001b0b:	mov    ecx,DWORD PTR [ebp+0x8]
10001b0e:	mov    ecx,DWORD PTR [ecx+0x4]
10001b11:	cmp    DWORD PTR [ecx+0x4],edi
10001b14:	jne    0x10001b1b
10001b16:	mov    DWORD PTR [ecx+0x4],eax
10001b19:	jmp    0x10001b29
10001b1b:	mov    ecx,DWORD PTR [edi+0x4]
10001b1e:	cmp    DWORD PTR [ecx],edi
10001b20:	jne    0x10001b26
10001b22:	mov    DWORD PTR [ecx],eax
10001b24:	jmp    0x10001b29
10001b26:	mov    DWORD PTR [ecx+0x8],eax
10001b29:	mov    ecx,DWORD PTR [edi+0x4]
10001b2c:	mov    DWORD PTR [eax+0x4],ecx
10001b2f:	mov    dl,BYTE PTR [edi+0x4c]
10001b32:	mov    cl,BYTE PTR [eax+0x4c]
10001b35:	mov    BYTE PTR [eax+0x4c],dl
10001b38:	mov    BYTE PTR [edi+0x4c],cl
10001b3b:	cmp    BYTE PTR [edi+0x4c],0x1
10001b3f:	jne    0x10001c57
10001b45:	jmp    0x10001c0b
10001b4a:	cmp    BYTE PTR [ebx+0x4c],0x1
10001b4e:	jne    0x10001c53
10001b54:	mov    ecx,DWORD PTR [esi]
10001b56:	cmp    ebx,ecx
10001b58:	jne    0x10001bd1
10001b5a:	mov    ecx,DWORD PTR [esi+0x8]
10001b5d:	cmp    BYTE PTR [ecx+0x4c],0x0
10001b61:	jne    0x10001b78
10001b63:	push   DWORD PTR [ebp+0x8]
10001b66:	mov    BYTE PTR [ecx+0x4c],0x1
10001b6a:	mov    ecx,esi
10001b6c:	mov    BYTE PTR [esi+0x4c],0x0
10001b70:	call   0x10001da2
10001b75:	mov    ecx,DWORD PTR [esi+0x8]
10001b78:	cmp    BYTE PTR [ecx+0x4d],0x0
10001b7c:	jne    0x10001c06
10001b82:	mov    eax,DWORD PTR [ecx]
10001b84:	cmp    BYTE PTR [eax+0x4c],0x1
10001b88:	jne    0x10001b93
10001b8a:	mov    eax,DWORD PTR [ecx+0x8]
10001b8d:	cmp    BYTE PTR [eax+0x4c],0x1
10001b91:	je     0x10001c02
10001b93:	mov    eax,DWORD PTR [ecx+0x8]
10001b96:	cmp    BYTE PTR [eax+0x4c],0x1
10001b9a:	jne    0x10001bb1
10001b9c:	mov    eax,DWORD PTR [ecx]
10001b9e:	push   DWORD PTR [ebp+0x8]
10001ba1:	mov    BYTE PTR [eax+0x4c],0x1
10001ba5:	mov    BYTE PTR [ecx+0x4c],0x0
10001ba9:	call   0x10001de2
10001bae:	mov    ecx,DWORD PTR [esi+0x8]
10001bb1:	mov    al,BYTE PTR [esi+0x4c]
10001bb4:	push   DWORD PTR [ebp+0x8]
10001bb7:	mov    BYTE PTR [ecx+0x4c],al
10001bba:	mov    BYTE PTR [esi+0x4c],0x1
10001bbe:	mov    eax,DWORD PTR [ecx+0x8]
10001bc1:	mov    ecx,esi
10001bc3:	mov    BYTE PTR [eax+0x4c],0x1
10001bc7:	call   0x10001da2
10001bcc:	jmp    0x10001c53
10001bd1:	cmp    BYTE PTR [ecx+0x4c],0x0
10001bd5:	jne    0x10001beb
10001bd7:	push   DWORD PTR [ebp+0x8]
10001bda:	mov    BYTE PTR [ecx+0x4c],0x1
10001bde:	mov    ecx,esi
10001be0:	mov    BYTE PTR [esi+0x4c],0x0
10001be4:	call   0x10001de2
10001be9:	mov    ecx,DWORD PTR [esi]
10001beb:	cmp    BYTE PTR [ecx+0x4d],0x0
10001bef:	jne    0x10001c06
10001bf1:	mov    eax,DWORD PTR [ecx+0x8]
10001bf4:	cmp    BYTE PTR [eax+0x4c],0x1
10001bf8:	jne    0x10001c1c
10001bfa:	mov    eax,DWORD PTR [ecx]
10001bfc:	cmp    BYTE PTR [eax+0x4c],0x1
10001c00:	jne    0x10001c1c
10001c02:	mov    BYTE PTR [ecx+0x4c],0x0
10001c06:	mov    ebx,esi
10001c08:	mov    esi,DWORD PTR [esi+0x4]
10001c0b:	mov    eax,DWORD PTR [ebp+0x8]
10001c0e:	mov    eax,DWORD PTR [eax+0x4]
10001c11:	cmp    ebx,DWORD PTR [eax+0x4]
10001c14:	jne    0x10001b4a
10001c1a:	jmp    0x10001c53
10001c1c:	mov    eax,DWORD PTR [ecx]
10001c1e:	cmp    BYTE PTR [eax+0x4c],0x1
10001c22:	jne    0x10001c39
10001c24:	mov    eax,DWORD PTR [ecx+0x8]
10001c27:	push   DWORD PTR [ebp+0x8]
10001c2a:	mov    BYTE PTR [eax+0x4c],0x1
10001c2e:	mov    BYTE PTR [ecx+0x4c],0x0
10001c32:	call   0x10001da2
10001c37:	mov    ecx,DWORD PTR [esi]
10001c39:	mov    al,BYTE PTR [esi+0x4c]
10001c3c:	push   DWORD PTR [ebp+0x8]
10001c3f:	mov    BYTE PTR [ecx+0x4c],al
10001c42:	mov    BYTE PTR [esi+0x4c],0x1
10001c46:	mov    eax,DWORD PTR [ecx]
10001c48:	mov    ecx,esi
10001c4a:	mov    BYTE PTR [eax+0x4c],0x1
10001c4e:	call   0x10001de2
10001c53:	mov    BYTE PTR [ebx+0x4c],0x1
10001c57:	push   0x0
10001c59:	lea    esi,[edi+0xc]
10001c5c:	push   0x1
10001c5e:	lea    ecx,[esi+0x20]
10001c61:	call   0x100012f0
10001c66:	push   0x0
10001c68:	push   0x1
10001c6a:	mov    ecx,esi
10001c6c:	call   0x100012f0
10001c71:	push   edi
10001c72:	call   0x10042e92
10001c77:	pop    ecx
10001c78:	mov    ecx,DWORD PTR [ebp+0x8]
10001c7b:	mov    eax,DWORD PTR [ecx+0x8]
10001c7e:	test   eax,eax
10001c80:	jbe    0x10001c86
10001c82:	dec    eax
10001c83:	mov    DWORD PTR [ecx+0x8],eax
10001c86:	mov    ecx,DWORD PTR [ebp+0x10]
10001c89:	mov    eax,DWORD PTR [ebp+0xc]
10001c8c:	mov    DWORD PTR [eax],ecx
10001c8e:	mov    ecx,DWORD PTR [ebp+0x14]
10001c91:	mov    DWORD PTR [eax+0x4],ecx
10001c94:	call   0x10059b0d
10001c99:	ret    0x10
10001c9c:	push   ebx
10001c9d:	push   esi
10001c9e:	push   edi
10001c9f:	mov    edi,DWORD PTR [esp+0x10]
10001ca3:	cmp    BYTE PTR [edi+0x11],0x0
10001ca7:	mov    ebx,ecx
10001ca9:	mov    esi,edi
10001cab:	jne    0x10001cc8
10001cad:	push   DWORD PTR [esi+0x8]
10001cb0:	mov    ecx,ebx
10001cb2:	call   0x10001c9c
10001cb7:	mov    esi,DWORD PTR [esi]
10001cb9:	push   edi
10001cba:	call   0x10042e92
10001cbf:	cmp    BYTE PTR [esi+0x11],0x0
10001cc3:	pop    ecx
10001cc4:	mov    edi,esi
10001cc6:	je     0x10001cad
10001cc8:	pop    edi
10001cc9:	pop    esi
10001cca:	pop    ebx
10001ccb:	ret    0x4
10001cce:	mov    eax,DWORD PTR [ecx+0x8]
10001cd1:	mov    edx,DWORD PTR [eax]
10001cd3:	mov    DWORD PTR [ecx+0x8],edx
10001cd6:	mov    edx,DWORD PTR [eax]
10001cd8:	cmp    BYTE PTR [edx+0x11],0x0
10001cdc:	jne    0x10001ce1
10001cde:	mov    DWORD PTR [edx+0x4],ecx
10001ce1:	mov    edx,DWORD PTR [ecx+0x4]
10001ce4:	mov    DWORD PTR [eax+0x4],edx
10001ce7:	mov    edx,DWORD PTR [esp+0x4]
10001ceb:	mov    edx,DWORD PTR [edx+0x4]
10001cee:	cmp    ecx,DWORD PTR [edx+0x4]
10001cf1:	jne    0x10001cf8
10001cf3:	mov    DWORD PTR [edx+0x4],eax
10001cf6:	jmp    0x10001d06
10001cf8:	mov    edx,DWORD PTR [ecx+0x4]
10001cfb:	cmp    ecx,DWORD PTR [edx]
10001cfd:	jne    0x10001d03
10001cff:	mov    DWORD PTR [edx],eax
10001d01:	jmp    0x10001d06
10001d03:	mov    DWORD PTR [edx+0x8],eax
10001d06:	mov    DWORD PTR [eax],ecx
10001d08:	mov    DWORD PTR [ecx+0x4],eax
10001d0b:	ret    0x4
10001d0e:	mov    eax,DWORD PTR [ecx]
10001d10:	mov    edx,DWORD PTR [eax+0x8]
10001d13:	mov    DWORD PTR [ecx],edx
10001d15:	mov    edx,DWORD PTR [eax+0x8]
10001d18:	cmp    BYTE PTR [edx+0x11],0x0
10001d1c:	jne    0x10001d21
10001d1e:	mov    DWORD PTR [edx+0x4],ecx
10001d21:	mov    edx,DWORD PTR [ecx+0x4]
10001d24:	mov    DWORD PTR [eax+0x4],edx
10001d27:	mov    edx,DWORD PTR [esp+0x4]
10001d2b:	mov    edx,DWORD PTR [edx+0x4]
10001d2e:	cmp    ecx,DWORD PTR [edx+0x4]
10001d31:	jne    0x10001d38
10001d33:	mov    DWORD PTR [edx+0x4],eax
10001d36:	jmp    0x10001d47
10001d38:	mov    edx,DWORD PTR [ecx+0x4]
10001d3b:	cmp    ecx,DWORD PTR [edx+0x8]
10001d3e:	jne    0x10001d45
10001d40:	mov    DWORD PTR [edx+0x8],eax
10001d43:	jmp    0x10001d47
10001d45:	mov    DWORD PTR [edx],eax
10001d47:	mov    DWORD PTR [eax+0x8],ecx
10001d4a:	mov    DWORD PTR [ecx+0x4],eax
10001d4d:	ret    0x4
10001d50:	push   ebp
10001d51:	mov    ebp,esp
10001d53:	push   ecx
10001d54:	push   esi
10001d55:	push   edi
10001d56:	mov    edi,DWORD PTR [ebp+0x8]
10001d59:	cmp    BYTE PTR [edi+0x4d],0x0
10001d5d:	mov    DWORD PTR [ebp-0x4],ecx
10001d60:	mov    esi,edi
10001d62:	jne    0x10001d9c
10001d64:	push   ebx
10001d65:	push   DWORD PTR [esi+0x8]
10001d68:	mov    ecx,DWORD PTR [ebp-0x4]
10001d6b:	call   0x10001d50
10001d70:	mov    esi,DWORD PTR [esi]
10001d72:	push   0x0
10001d74:	lea    ebx,[edi+0xc]
10001d77:	push   0x1
10001d79:	lea    ecx,[ebx+0x20]
10001d7c:	call   0x100012f0
10001d81:	push   0x0
10001d83:	push   0x1
10001d85:	mov    ecx,ebx
10001d87:	call   0x100012f0
10001d8c:	push   edi
10001d8d:	call   0x10042e92
10001d92:	cmp    BYTE PTR [esi+0x4d],0x0
10001d96:	pop    ecx
10001d97:	mov    edi,esi
10001d99:	je     0x10001d65
10001d9b:	pop    ebx
10001d9c:	pop    edi
10001d9d:	pop    esi
10001d9e:	leave  
10001d9f:	ret    0x4
10001da2:	mov    eax,DWORD PTR [ecx+0x8]
10001da5:	mov    edx,DWORD PTR [eax]
10001da7:	mov    DWORD PTR [ecx+0x8],edx
10001daa:	mov    edx,DWORD PTR [eax]
10001dac:	cmp    BYTE PTR [edx+0x4d],0x0
10001db0:	jne    0x10001db5
10001db2:	mov    DWORD PTR [edx+0x4],ecx
10001db5:	mov    edx,DWORD PTR [ecx+0x4]
10001db8:	mov    DWORD PTR [eax+0x4],edx
10001dbb:	mov    edx,DWORD PTR [esp+0x4]
10001dbf:	mov    edx,DWORD PTR [edx+0x4]
10001dc2:	cmp    ecx,DWORD PTR [edx+0x4]
10001dc5:	jne    0x10001dcc
10001dc7:	mov    DWORD PTR [edx+0x4],eax
10001dca:	jmp    0x10001dda
10001dcc:	mov    edx,DWORD PTR [ecx+0x4]
10001dcf:	cmp    ecx,DWORD PTR [edx]
10001dd1:	jne    0x10001dd7
10001dd3:	mov    DWORD PTR [edx],eax
10001dd5:	jmp    0x10001dda
10001dd7:	mov    DWORD PTR [edx+0x8],eax
10001dda:	mov    DWORD PTR [eax],ecx
10001ddc:	mov    DWORD PTR [ecx+0x4],eax
10001ddf:	ret    0x4
10001de2:	mov    eax,DWORD PTR [ecx]
10001de4:	mov    edx,DWORD PTR [eax+0x8]
10001de7:	mov    DWORD PTR [ecx],edx
10001de9:	mov    edx,DWORD PTR [eax+0x8]
10001dec:	cmp    BYTE PTR [edx+0x4d],0x0
10001df0:	jne    0x10001df5
10001df2:	mov    DWORD PTR [edx+0x4],ecx
10001df5:	mov    edx,DWORD PTR [ecx+0x4]
10001df8:	mov    DWORD PTR [eax+0x4],edx
10001dfb:	mov    edx,DWORD PTR [esp+0x4]
10001dff:	mov    edx,DWORD PTR [edx+0x4]
10001e02:	cmp    ecx,DWORD PTR [edx+0x4]
10001e05:	jne    0x10001e0c
10001e07:	mov    DWORD PTR [edx+0x4],eax
10001e0a:	jmp    0x10001e1b
10001e0c:	mov    edx,DWORD PTR [ecx+0x4]
10001e0f:	cmp    ecx,DWORD PTR [edx+0x8]
10001e12:	jne    0x10001e19
10001e14:	mov    DWORD PTR [edx+0x8],eax
10001e17:	jmp    0x10001e1b
10001e19:	mov    DWORD PTR [edx],eax
10001e1b:	mov    DWORD PTR [eax+0x8],ecx
10001e1e:	mov    DWORD PTR [ecx+0x4],eax
10001e21:	ret    0x4
10001e24:	push   ebx
10001e25:	xor    ebx,ebx
10001e27:	cmp    DWORD PTR [esi],ebx
10001e29:	jne    0x10001e30
10001e2b:	call   0x100433b0
10001e30:	mov    eax,DWORD PTR [esi+0x4]
10001e33:	cmp    BYTE PTR [eax+0x4d],bl
10001e36:	je     0x10001e3f
10001e38:	call   0x100433b0
10001e3d:	jmp    0x10001e6d
10001e3f:	mov    ecx,DWORD PTR [eax+0x8]
10001e42:	cmp    BYTE PTR [ecx+0x4d],bl
10001e45:	jne    0x10001e62
10001e47:	jmp    0x10001e4b
10001e49:	mov    ecx,eax
10001e4b:	mov    eax,DWORD PTR [ecx]
10001e4d:	cmp    BYTE PTR [eax+0x4d],bl
10001e50:	je     0x10001e49
10001e52:	mov    DWORD PTR [esi+0x4],ecx
10001e55:	jmp    0x10001e6d
10001e57:	mov    ecx,DWORD PTR [esi+0x4]
10001e5a:	cmp    ecx,DWORD PTR [eax+0x8]
10001e5d:	jne    0x10001e6a
10001e5f:	mov    DWORD PTR [esi+0x4],eax
10001e62:	mov    eax,DWORD PTR [eax+0x4]
10001e65:	cmp    BYTE PTR [eax+0x4d],bl
10001e68:	je     0x10001e57
10001e6a:	mov    DWORD PTR [esi+0x4],eax
10001e6d:	mov    eax,esi
10001e6f:	pop    ebx
10001e70:	ret    
10001e71:	push   ebx
10001e72:	xor    ebx,ebx
10001e74:	cmp    DWORD PTR [esi],ebx
10001e76:	jne    0x10001e7d
10001e78:	call   0x100433b0
10001e7d:	mov    eax,DWORD PTR [esi+0x4]
10001e80:	cmp    BYTE PTR [eax+0x11],bl
10001e83:	je     0x10001e8c
10001e85:	call   0x100433b0
10001e8a:	jmp    0x10001eba
10001e8c:	mov    ecx,DWORD PTR [eax+0x8]
10001e8f:	cmp    BYTE PTR [ecx+0x11],bl
10001e92:	jne    0x10001eaf
10001e94:	jmp    0x10001e98
10001e96:	mov    ecx,eax
10001e98:	mov    eax,DWORD PTR [ecx]
10001e9a:	cmp    BYTE PTR [eax+0x11],bl
10001e9d:	je     0x10001e96
10001e9f:	mov    DWORD PTR [esi+0x4],ecx
10001ea2:	jmp    0x10001eba
10001ea4:	mov    ecx,DWORD PTR [esi+0x4]
10001ea7:	cmp    ecx,DWORD PTR [eax+0x8]
10001eaa:	jne    0x10001eb7
10001eac:	mov    DWORD PTR [esi+0x4],eax
10001eaf:	mov    eax,DWORD PTR [eax+0x4]
10001eb2:	cmp    BYTE PTR [eax+0x11],bl
10001eb5:	je     0x10001ea4
10001eb7:	mov    DWORD PTR [esi+0x4],eax
10001eba:	mov    eax,esi
10001ebc:	pop    ebx
10001ebd:	ret    
10001ebe:	push   ebp
10001ebf:	mov    ebp,esp
10001ec1:	mov    ecx,DWORD PTR [ebp+0x8]
10001ec4:	sub    esp,0xc
10001ec7:	test   ecx,ecx
10001ec9:	ja     0x10001ed6
10001ecb:	xor    ecx,ecx
10001ecd:	push   ecx
10001ece:	call   0x1004349e
10001ed3:	pop    ecx
10001ed4:	leave  
10001ed5:	ret    
10001ed6:	or     eax,0xffffffff
10001ed9:	xor    edx,edx
10001edb:	div    ecx
10001edd:	cmp    eax,0x1
10001ee0:	jae    0x10001ecd
10001ee2:	and    DWORD PTR [ebp+0x8],0x0
10001ee6:	lea    eax,[ebp+0x8]
10001ee9:	push   eax
10001eea:	lea    ecx,[ebp-0xc]
10001eed:	call   0x10042f12
10001ef2:	push   0x10074cf8
10001ef7:	lea    eax,[ebp-0xc]
10001efa:	push   eax
10001efb:	mov    DWORD PTR [ebp-0xc],0x100665c8
10001f02:	call   0x100479b4
10001f07:	int3   
10001f08:	push   esi
10001f09:	push   DWORD PTR [esp+0x8]
10001f0d:	mov    esi,ecx
10001f0f:	call   0x10042f78
10001f14:	mov    DWORD PTR [esi],0x100665c8
10001f1a:	mov    eax,esi
10001f1c:	pop    esi
10001f1d:	ret    0x4
10001f20:	push   0x0
10001f22:	push   0x1
10001f24:	lea    ecx,[esi+0x20]
10001f27:	call   0x100012f0
10001f2c:	push   0x0
10001f2e:	push   0x1
10001f30:	mov    ecx,esi
10001f32:	call   0x100012f0
10001f37:	ret    
10001f38:	push   0x0
10001f3a:	push   0x1
10001f3c:	add    ecx,0x4
10001f3f:	call   0x100012f0
10001f44:	ret    
10001f45:	push   ebp
10001f46:	mov    ebp,esp
10001f48:	mov    eax,DWORD PTR [ebp+0x8]
10001f4b:	mov    DWORD PTR [ebp+0x8],eax
10001f4e:	push   0x10074d2c
10001f53:	lea    eax,[ebp+0x8]
10001f56:	push   eax
10001f57:	call   0x100479b4
10001f5c:	int3   
10001f5d:	mov    eax,DWORD PTR [esp+0x4]
10001f61:	test   eax,eax
10001f63:	je     0x10001f91
10001f65:	cmp    eax,0xc
10001f68:	je     0x10001f8a
10001f6a:	cmp    eax,0x16
10001f6d:	je     0x10001f83
10001f6f:	cmp    eax,0x22
10001f72:	je     0x10001f83
10001f74:	cmp    eax,0x50
10001f77:	je     0x10001f91
10001f79:	push   0x80004005
10001f7e:	call   0x10001f45
10001f83:	push   0x80070057
10001f88:	jmp    0x10001f7e
10001f8a:	push   0x8007000e
10001f8f:	jmp    0x10001f7e
10001f91:	ret    
10001f92:	push   esi
10001f93:	push   DWORD PTR [esp+0xc]
10001f97:	mov    esi,eax
10001f99:	push   DWORD PTR [esp+0xc]
10001f9d:	call   DWORD PTR ds:0x10066080
10001fa3:	test   eax,eax
10001fa5:	jne    0x10001fa9
10001fa7:	pop    esi
10001fa8:	ret    
10001fa9:	push   edi
10001faa:	push   eax
10001fab:	call   DWORD PTR ds:0x10066090
10001fb1:	mov    edi,eax
10001fb3:	test   edi,edi
10001fb5:	je     0x10001fde
10001fb7:	push   DWORD PTR [esp+0x10]
10001fbb:	push   DWORD PTR [esp+0x10]
10001fbf:	call   DWORD PTR ds:0x10066088
10001fc5:	add    eax,edi
10001fc7:	and    esi,0xf
10001fca:	jbe    0x10001fda
10001fcc:	cmp    edi,eax
10001fce:	jae    0x10001fde
10001fd0:	dec    esi
10001fd1:	movzx  ecx,WORD PTR [edi]
10001fd4:	lea    edi,[edi+ecx*2+0x2]
10001fd8:	jne    0x10001fcc
10001fda:	cmp    edi,eax
10001fdc:	jb     0x10001fe2
10001fde:	xor    eax,eax
10001fe0:	jmp    0x10001fec
10001fe2:	mov    ax,WORD PTR [edi]
10001fe5:	neg    ax
10001fe8:	sbb    eax,eax
10001fea:	and    eax,edi
10001fec:	pop    edi
10001fed:	pop    esi
10001fee:	ret    
10001fef:	mov    eax,DWORD PTR [esp+0x8]
10001ff3:	shr    eax,0x4
10001ff6:	inc    eax
10001ff7:	movzx  eax,ax
10001ffa:	push   0x6
10001ffc:	push   eax
10001ffd:	push   DWORD PTR [esp+0xc]
10002001:	call   DWORD PTR ds:0x1006607c
10002007:	test   eax,eax
10002009:	jne    0x1000200c
1000200b:	ret    
1000200c:	push   eax
1000200d:	push   DWORD PTR [esp+0x8]
10002011:	mov    eax,DWORD PTR [esp+0x10]
10002015:	call   0x10001f92
1000201a:	pop    ecx
1000201b:	pop    ecx
1000201c:	ret    
1000201d:	push   ebx
1000201e:	push   ebp
1000201f:	push   esi
10002020:	push   edi
10002021:	xor    edi,edi
10002023:	mov    ebx,0x10080a00
10002028:	push   edi
10002029:	mov    ecx,ebx
1000202b:	call   0x10056ce5
10002030:	xor    ebp,ebp
10002032:	inc    ebp
10002033:	jmp    0x1000206f
10002035:	test   edi,edi
10002037:	jne    0x10002075
10002039:	mov    eax,DWORD PTR [esp+0x14]
1000203d:	shr    eax,0x4
10002040:	inc    eax
10002041:	push   edi
10002042:	movzx  eax,ax
10002045:	push   eax
10002046:	push   0x6
10002048:	push   esi
10002049:	call   DWORD PTR ds:0x10066078
1000204f:	test   eax,eax
10002051:	je     0x10002066
10002053:	push   eax
10002054:	mov    eax,DWORD PTR [esp+0x18]
10002058:	push   esi
10002059:	call   0x10001f92
1000205e:	mov    edi,eax
10002060:	test   edi,edi
10002062:	pop    ecx
10002063:	pop    ecx
10002064:	jne    0x1000207c
10002066:	push   ebp
10002067:	mov    ecx,ebx
10002069:	call   0x10056ce5
1000206e:	inc    ebp
1000206f:	mov    esi,eax
10002071:	test   esi,esi
10002073:	jne    0x10002035
10002075:	xor    eax,eax
10002077:	pop    edi
10002078:	pop    esi
10002079:	pop    ebp
1000207a:	pop    ebx
1000207b:	ret    
1000207c:	mov    eax,esi
1000207e:	jmp    0x10002077
10002080:	ret    
10002081:	lea    ecx,[eax+0xc]
10002084:	or     edx,0xffffffff
10002087:	lock xadd DWORD PTR [ecx],edx
1000208b:	dec    edx
1000208c:	test   edx,edx
1000208e:	jg     0x10002098
10002090:	mov    ecx,DWORD PTR [eax]
10002092:	mov    edx,DWORD PTR [ecx]
10002094:	push   eax
10002095:	call   DWORD PTR [edx+0x4]
10002098:	ret    
10002099:	mov    eax,DWORD PTR [esp+0x4]
1000209d:	push   esi
1000209e:	mov    esi,DWORD PTR [eax]
100020a0:	and    DWORD PTR [eax],0x0
100020a3:	mov    eax,DWORD PTR [edi]
100020a5:	cmp    esi,eax
100020a7:	je     0x100020b0
100020a9:	push   eax
100020aa:	call   0x10042e92
100020af:	pop    ecx
100020b0:	mov    DWORD PTR [edi],esi
100020b2:	mov    eax,edi
100020b4:	pop    esi
100020b5:	ret    0x4
100020b8:	push   ebp
100020b9:	mov    ebp,esp
100020bb:	push   ebx
100020bc:	mov    ebx,DWORD PTR ds:0x1006608c
100020c2:	push   esi
100020c3:	xor    esi,esi
100020c5:	cmp    DWORD PTR [ebp+0xc],esi
100020c8:	push   edi
100020c9:	je     0x100020e1
100020cb:	call   DWORD PTR ds:0x1007efec
100020d1:	push   esi
100020d2:	push   esi
100020d3:	push   0xffffffff
100020d5:	push   DWORD PTR [ebp+0xc]
100020d8:	push   esi
100020d9:	push   eax
100020da:	call   ebx
100020dc:	mov    edi,eax
100020de:	dec    edi
100020df:	jmp    0x100020e3
100020e1:	xor    edi,edi
100020e3:	cmp    edi,esi
100020e5:	mov    esi,DWORD PTR [ebp+0x8]
100020e8:	jle    0x1000210d
100020ea:	push   edi
100020eb:	call   0x100021b6
100020f0:	push   edi
100020f1:	push   eax
100020f2:	push   0xffffffff
100020f4:	push   DWORD PTR [ebp+0xc]
100020f7:	push   0x0
100020f9:	call   DWORD PTR ds:0x1007efec
100020ff:	push   eax
10002100:	call   ebx
10002102:	mov    eax,edi
10002104:	mov    edx,esi
10002106:	call   0x10002241
1000210b:	jmp    0x10002112
1000210d:	call   0x10002176
10002112:	mov    eax,DWORD PTR [ebp+0x8]
10002115:	pop    edi
10002116:	pop    esi
10002117:	pop    ebx
10002118:	pop    ebp
10002119:	ret    0x8
1000211c:	xor    al,al
1000211e:	cmp    DWORD PTR [esp+0x8],0x0
10002123:	je     0x1000214e
10002125:	test   DWORD PTR [esp+0x8],0xffff0000
1000212d:	jne    0x1000214e
1000212f:	push   esi
10002130:	movzx  esi,WORD PTR [esp+0xc]
10002135:	push   esi
10002136:	call   0x1000201d
1000213b:	test   eax,eax
1000213d:	pop    ecx
1000213e:	je     0x1000214b
10002140:	push   esi
10002141:	push   eax
10002142:	push   DWORD PTR [esp+0x10]
10002146:	call   0x100021dc
1000214b:	mov    al,0x1
1000214d:	pop    esi
1000214e:	ret    0x8
10002151:	test   ecx,ecx
10002153:	jne    0x1000215f
10002155:	push   0x80004005
1000215a:	call   0x10001f45
1000215f:	mov    eax,DWORD PTR [ecx]
10002161:	call   DWORD PTR [eax+0xc]
10002164:	add    eax,0x10
10002167:	mov    DWORD PTR [esi],eax
10002169:	mov    eax,esi
1000216b:	ret    
1000216c:	mov    eax,DWORD PTR [eax]
1000216e:	sub    eax,0x10
10002171:	jmp    0x10002081
10002176:	mov    ecx,DWORD PTR [esi]
10002178:	lea    eax,[ecx-0x10]
1000217b:	xor    edx,edx
1000217d:	cmp    DWORD PTR [eax+0x4],edx
10002180:	push   edi
10002181:	mov    edi,DWORD PTR [eax]
10002183:	je     0x100021b4
10002185:	cmp    DWORD PTR [eax+0xc],edx
10002188:	jge    0x100021a3
1000218a:	cmp    DWORD PTR [ecx-0x8],edx
1000218d:	jge    0x10002199
1000218f:	push   0x80070057
10002194:	call   0x10001f45
10002199:	mov    DWORD PTR [ecx-0xc],edx
1000219c:	mov    eax,DWORD PTR [esi]
1000219e:	mov    WORD PTR [eax],dx
100021a1:	pop    edi
100021a2:	ret    
100021a3:	call   0x10002081
100021a8:	mov    eax,DWORD PTR [edi]
100021aa:	mov    ecx,edi
100021ac:	call   DWORD PTR [eax+0xc]
100021af:	add    eax,0x10
100021b2:	mov    DWORD PTR [esi],eax
100021b4:	pop    edi
100021b5:	ret    
100021b6:	mov    eax,DWORD PTR [esi]
100021b8:	xor    ecx,ecx
100021ba:	sub    eax,0x10
100021bd:	inc    ecx
100021be:	sub    ecx,DWORD PTR [eax+0xc]
100021c1:	mov    eax,DWORD PTR [eax+0x8]
100021c4:	sub    eax,DWORD PTR [esp+0x4]
100021c8:	or     ecx,eax
100021ca:	jge    0x100021d7
100021cc:	mov    eax,DWORD PTR [esp+0x4]
100021d0:	mov    ecx,esi
100021d2:	call   0x10002262
100021d7:	mov    eax,DWORD PTR [esi]
100021d9:	ret    0x4
100021dc:	push   edi
100021dd:	push   DWORD PTR [esp+0x10]
100021e1:	push   DWORD PTR [esp+0x10]
100021e5:	call   0x10001fef
100021ea:	mov    edi,eax
100021ec:	test   edi,edi
100021ee:	pop    ecx
100021ef:	pop    ecx
100021f0:	je     0x1000223d
100021f2:	push   ebx
100021f3:	movzx  ebx,WORD PTR [edi]
100021f6:	push   esi
100021f7:	mov    esi,DWORD PTR [esp+0x10]
100021fb:	push   ebx
100021fc:	call   0x100021b6
10002201:	mov    esi,eax
10002203:	movzx  eax,WORD PTR [edi]
10002206:	add    edi,0x2
10002209:	cmp    eax,0xffffffff
1000220c:	jne    0x10002216
1000220e:	push   edi
1000220f:	call   0x100436f3
10002214:	pop    ecx
10002215:	inc    eax
10002216:	add    eax,eax
10002218:	push   eax
10002219:	push   edi
1000221a:	lea    eax,[ebx+ebx*1]
1000221d:	push   eax
1000221e:	push   esi
1000221f:	call   0x100433c5
10002224:	push   eax
10002225:	call   0x10001f5d
1000222a:	mov    edx,DWORD PTR [esp+0x24]
1000222e:	add    esp,0x14
10002231:	mov    eax,ebx
10002233:	call   0x10002241
10002238:	xor    eax,eax
1000223a:	pop    esi
1000223b:	inc    eax
1000223c:	pop    ebx
1000223d:	pop    edi
1000223e:	ret    0xc
10002241:	test   eax,eax
10002243:	jl     0x10002257
10002245:	mov    ecx,DWORD PTR [edx]
10002247:	cmp    eax,DWORD PTR [ecx-0x8]
1000224a:	jg     0x10002257
1000224c:	mov    DWORD PTR [ecx-0xc],eax
1000224f:	mov    ecx,DWORD PTR [edx]
10002251:	and    WORD PTR [ecx+eax*2],0x0
10002256:	ret    
10002257:	push   0x80070057
1000225c:	call   0x10001f45
10002261:	int3   
10002262:	push   esi
10002263:	mov    esi,ecx
10002265:	push   edi
10002266:	mov    edi,eax
10002268:	mov    eax,DWORD PTR [esi]
1000226a:	mov    ecx,DWORD PTR [eax-0xc]
1000226d:	sub    eax,0x10
10002270:	cmp    ecx,edi
10002272:	jle    0x10002276
10002274:	mov    edi,ecx
10002276:	cmp    DWORD PTR [eax+0xc],0x1
1000227a:	jle    0x10002285
1000227c:	push   edi
1000227d:	push   esi
1000227e:	call   0x100022ab
10002283:	jmp    0x100022a8
10002285:	mov    eax,DWORD PTR [eax+0x8]
10002288:	cmp    eax,edi
1000228a:	jge    0x100022a8
1000228c:	mov    edx,eax
1000228e:	mov    eax,0x400
10002293:	cmp    edx,eax
10002295:	jle    0x1000229b
10002297:	add    edx,eax
10002299:	jmp    0x1000229d
1000229b:	add    edx,edx
1000229d:	cmp    edx,edi
1000229f:	jge    0x100022a3
100022a1:	mov    edx,edi
100022a3:	call   0x10002311
100022a8:	pop    edi
100022a9:	pop    esi
100022aa:	ret    
100022ab:	push   ebp
100022ac:	mov    ebp,esp
100022ae:	push   ecx
100022af:	mov    eax,DWORD PTR [ebp+0x8]
100022b2:	push   ebx
100022b3:	push   esi
100022b4:	mov    esi,DWORD PTR [eax]
100022b6:	mov    ebx,DWORD PTR [esi-0xc]
100022b9:	sub    esi,0x10
100022bc:	mov    ecx,DWORD PTR [esi]
100022be:	mov    eax,DWORD PTR [ecx]
100022c0:	push   edi
100022c1:	mov    DWORD PTR [ebp-0x4],ebx
100022c4:	call   DWORD PTR [eax+0x10]
100022c7:	mov    edx,DWORD PTR [eax]
100022c9:	push   0x2
100022cb:	push   DWORD PTR [ebp+0xc]
100022ce:	mov    ecx,eax
100022d0:	call   DWORD PTR [edx]
100022d2:	mov    edi,eax
100022d4:	test   edi,edi
100022d6:	jne    0x100022dd
100022d8:	call   0x10002356
100022dd:	mov    eax,DWORD PTR [ebp+0xc]
100022e0:	cmp    ebx,eax
100022e2:	jge    0x100022e6
100022e4:	mov    eax,ebx
100022e6:	lea    ecx,[esi+0x10]
100022e9:	push   ecx
100022ea:	inc    eax
100022eb:	push   eax
100022ec:	lea    ebx,[edi+0x10]
100022ef:	push   ebx
100022f0:	call   0x1000233b
100022f5:	mov    eax,DWORD PTR [ebp-0x4]
100022f8:	mov    DWORD PTR [edi+0x4],eax
100022fb:	add    esp,0xc
100022fe:	mov    eax,esi
10002300:	call   0x10002081
10002305:	mov    eax,DWORD PTR [ebp+0x8]
10002308:	pop    edi
10002309:	pop    esi
1000230a:	mov    DWORD PTR [eax],ebx
1000230c:	pop    ebx
1000230d:	leave  
1000230e:	ret    0x8
10002311:	mov    eax,DWORD PTR [esi]
10002313:	sub    eax,0x10
10002316:	cmp    DWORD PTR [eax+0x8],edx
10002319:	mov    ecx,DWORD PTR [eax]
1000231b:	jge    0x10002330
1000231d:	test   edx,edx
1000231f:	jle    0x10002330
10002321:	push   edi
10002322:	mov    edi,DWORD PTR [ecx]
10002324:	push   0x2
10002326:	push   edx
10002327:	push   eax
10002328:	call   DWORD PTR [edi+0x8]
1000232b:	test   eax,eax
1000232d:	pop    edi
1000232e:	jne    0x10002335
10002330:	jmp    0x10002356
10002335:	add    eax,0x10
10002338:	mov    DWORD PTR [esi],eax
1000233a:	ret    
1000233b:	add    eax,eax
1000233d:	push   eax
1000233e:	push   DWORD PTR [esp+0x10]
10002342:	mov    eax,DWORD PTR [esp+0x10]
10002346:	add    eax,eax
10002348:	push   eax
10002349:	push   DWORD PTR [esp+0x10]
1000234d:	call   0x100433c5
10002352:	add    esp,0x10
10002355:	ret    
10002356:	push   0x8007000e
1000235b:	call   0x10001f45
10002360:	int3   
10002361:	push   0x0
10002363:	mov    eax,0x100623f4
10002368:	call   0x10059a35
1000236d:	mov    esi,DWORD PTR [ebp+0x8]
10002370:	mov    ecx,0x10080a74
10002375:	call   0x10002151
1000237a:	push   DWORD PTR [ebp+0xc]
1000237d:	and    DWORD PTR [ebp-0x4],0x0
10002381:	push   esi
10002382:	call   0x1000211c
10002387:	test   al,al
10002389:	jne    0x10002394
1000238b:	push   DWORD PTR [ebp+0xc]
1000238e:	push   esi
1000238f:	call   0x1000239e
10002394:	mov    eax,esi
10002396:	call   0x10059b0d
1000239b:	ret    0x8
1000239e:	push   ebp
1000239f:	mov    ebp,esp
100023a1:	xor    eax,eax
100023a3:	cmp    DWORD PTR [ebp+0xc],eax
100023a6:	je     0x100023b1
100023a8:	push   DWORD PTR [ebp+0xc]
100023ab:	call   0x100436f3
100023b0:	pop    ecx
100023b1:	push   ebx
100023b2:	push   DWORD PTR [ebp+0xc]
100023b5:	mov    ebx,eax
100023b7:	mov    eax,DWORD PTR [ebp+0x8]
100023ba:	call   0x100023c7
100023bf:	mov    eax,DWORD PTR [ebp+0x8]
100023c2:	pop    ebx
100023c3:	pop    ebp
100023c4:	ret    0x8
100023c7:	push   ebp
100023c8:	mov    ebp,esp
100023ca:	push   ecx
100023cb:	test   ebx,ebx
100023cd:	push   esi
100023ce:	mov    esi,eax
100023d0:	jne    0x100023d9
100023d2:	call   0x10002176
100023d7:	jmp    0x1000242f
100023d9:	push   edi
100023da:	mov    edi,DWORD PTR [ebp+0x8]
100023dd:	test   edi,edi
100023df:	jne    0x100023eb
100023e1:	push   0x80070057
100023e6:	call   0x10001f45
100023eb:	mov    eax,DWORD PTR [esi]
100023ed:	mov    ecx,DWORD PTR [eax-0xc]
100023f0:	sub    edi,eax
100023f2:	push   ebx
100023f3:	mov    DWORD PTR [ebp-0x4],ecx
100023f6:	sar    edi,1
100023f8:	call   0x100021b6
100023fd:	cmp    edi,DWORD PTR [ebp-0x4]
10002400:	ja     0x10002416
10002402:	lea    ecx,[ebx+ebx*1]
10002405:	push   ecx
10002406:	lea    edx,[eax+edi*2]
10002409:	push   edx
1000240a:	push   ecx
1000240b:	push   eax
1000240c:	call   0x10042ea6
10002411:	add    esp,0x10
10002414:	jmp    0x10002425
10002416:	push   DWORD PTR [ebp+0x8]
10002419:	push   ebx
1000241a:	push   eax
1000241b:	mov    eax,ebx
1000241d:	call   0x1000233b
10002422:	add    esp,0xc
10002425:	mov    eax,ebx
10002427:	mov    edx,esi
10002429:	call   0x10002241
1000242e:	pop    edi
1000242f:	pop    esi
10002430:	leave  
10002431:	ret    0x4
10002434:	xor    eax,eax
10002436:	cmp    esi,eax
10002438:	je     0x10002462
1000243a:	cmp    DWORD PTR [esp+0x4],eax
1000243e:	je     0x10002462
10002440:	push   eax
10002441:	push   eax
10002442:	push   DWORD PTR [esp+0x10]
10002446:	mov    BYTE PTR [esi],al
10002448:	push   esi
10002449:	push   0xffffffff
1000244b:	push   DWORD PTR [esp+0x18]
1000244f:	push   eax
10002450:	push   DWORD PTR [esp+0x28]
10002454:	call   DWORD PTR ds:0x100660b8
1000245a:	neg    eax
1000245c:	sbb    eax,eax
1000245e:	and    eax,esi
10002460:	jmp    0x10002464
10002462:	xor    eax,eax
10002464:	ret    0xc
10002467:	push   0x4
10002469:	mov    eax,0x1005f66c
1000246e:	call   0x10059a35
10002473:	push   0xc
10002475:	call   0x1004349e
1000247a:	mov    esi,eax
1000247c:	pop    ecx
1000247d:	mov    DWORD PTR [ebp-0x10],esi
10002480:	and    DWORD PTR [ebp-0x4],0x0
10002484:	test   esi,esi
10002486:	je     0x1000249f
10002488:	push   DWORD PTR [ebp+0x8]
1000248b:	and    DWORD PTR [esi+0x4],0x0
1000248f:	mov    DWORD PTR [esi+0x8],0x1
10002496:	call   0x100508a0
1000249b:	mov    DWORD PTR [esi],eax
1000249d:	jmp    0x100024a1
1000249f:	xor    esi,esi
100024a1:	or     DWORD PTR [ebp-0x4],0xffffffff
100024a5:	test   esi,esi
100024a7:	mov    DWORD PTR [edi],esi
100024a9:	jne    0x100024b5
100024ab:	push   0x8007000e
100024b0:	call   0x10050b90
100024b5:	mov    eax,edi
100024b7:	call   0x10059b0d
100024bc:	ret    0x4
100024bf:	push   0x4
100024c1:	mov    eax,0x1005f66c
100024c6:	call   0x10059a35
100024cb:	push   0xc
100024cd:	call   0x1004349e
100024d2:	mov    esi,eax
100024d4:	pop    ecx
100024d5:	mov    DWORD PTR [ebp-0x10],esi
100024d8:	and    DWORD PTR [ebp-0x4],0x0
100024dc:	test   esi,esi
100024de:	je     0x100024ea
100024e0:	push   DWORD PTR [ebp+0x8]
100024e3:	call   0x10002602
100024e8:	jmp    0x100024ec
100024ea:	xor    eax,eax
100024ec:	or     DWORD PTR [ebp-0x4],0xffffffff
100024f0:	test   eax,eax
100024f2:	mov    DWORD PTR [edi],eax
100024f4:	jne    0x10002500
100024f6:	push   0x8007000e
100024fb:	call   0x10050b90
10002500:	mov    eax,edi
10002502:	call   0x10059b0d
10002507:	ret    0x4
1000250a:	jmp    0x100025c2
1000250f:	push   0x4
10002511:	mov    eax,0x1005f66c
10002516:	call   0x10059a35
1000251b:	push   0xc
1000251d:	call   0x1004349e
10002522:	mov    edi,eax
10002524:	pop    ecx
10002525:	mov    DWORD PTR [ebp-0x10],edi
10002528:	xor    esi,esi
1000252a:	cmp    edi,esi
1000252c:	mov    DWORD PTR [ebp-0x4],esi
1000252f:	je     0x1000253c
10002531:	push   DWORD PTR [ebp+0x8]
10002534:	push   ebx
10002535:	call   0x10002632
1000253a:	mov    esi,eax
1000253c:	or     DWORD PTR [ebp-0x4],0xffffffff
10002540:	test   esi,esi
10002542:	jne    0x10002550
10002544:	push   0x8007000e
10002549:	call   0x10050b90
1000254e:	jmp    0x10002559
10002550:	mov    edi,ebx
10002552:	call   0x100025c2
10002557:	mov    DWORD PTR [ebx],esi
10002559:	mov    eax,ebx
1000255b:	call   0x10059b0d
10002560:	ret    0x4
10002563:	push   0x4
10002565:	mov    eax,0x1005f8e6
1000256a:	call   0x10059a35
1000256f:	mov    ebx,DWORD PTR [ebp+0x8]
10002572:	and    DWORD PTR [ebp-0x4],0x0
10002576:	push   DWORD PTR [ebp+0xc]
10002579:	and    DWORD PTR [ebp-0x10],0x0
1000257d:	mov    edi,ebx
1000257f:	call   0x100024bf
10002584:	and    DWORD PTR [ebp-0x4],0x0
10002588:	push   DWORD PTR [ebp+0x10]
1000258b:	mov    DWORD PTR [ebp-0x10],0x1
10002592:	call   0x1000250f
10002597:	mov    eax,ebx
10002599:	call   0x10059b0d
1000259e:	ret    
1000259f:	mov    eax,DWORD PTR [eax]
100025a1:	test   eax,eax
100025a3:	je     0x100025a8
100025a5:	mov    eax,DWORD PTR [eax]
100025a7:	ret    
100025a8:	xor    eax,eax
100025aa:	ret    
100025ab:	mov    eax,DWORD PTR [eax]
100025ad:	test   eax,eax
100025af:	je     0x100025bf
100025b1:	mov    eax,DWORD PTR [eax]
100025b3:	test   eax,eax
100025b5:	je     0x100025bf
100025b7:	push   eax
100025b8:	call   DWORD PTR ds:0x100662ac
100025be:	ret    
100025bf:	xor    eax,eax
100025c1:	ret    
100025c2:	push   esi
100025c3:	mov    esi,DWORD PTR [edi]
100025c5:	test   esi,esi
100025c7:	je     0x10002600
100025c9:	lea    eax,[esi+0x8]
100025cc:	push   eax
100025cd:	call   DWORD PTR ds:0x100660ac
100025d3:	test   eax,eax
100025d5:	jne    0x100025fd
100025d7:	test   esi,esi
100025d9:	je     0x100025fd
100025db:	mov    eax,DWORD PTR [esi]
100025dd:	test   eax,eax
100025df:	je     0x100025e8
100025e1:	push   eax
100025e2:	call   DWORD PTR ds:0x100662b4
100025e8:	mov    eax,DWORD PTR [esi+0x4]
100025eb:	test   eax,eax
100025ed:	je     0x100025f6
100025ef:	push   eax
100025f0:	call   0x100433c0
100025f5:	pop    ecx
100025f6:	push   esi
100025f7:	call   0x10042e92
100025fc:	pop    ecx
100025fd:	and    DWORD PTR [edi],0x0
10002600:	pop    esi
10002601:	ret    
10002602:	push   DWORD PTR [esp+0x4]
10002606:	and    DWORD PTR [esi+0x4],0x0
1000260a:	mov    DWORD PTR [esi+0x8],0x1
10002611:	call   DWORD PTR ds:0x100662b0
10002617:	test   eax,eax
10002619:	mov    DWORD PTR [esi],eax
1000261b:	jne    0x1000262d
1000261d:	cmp    DWORD PTR [esp+0x4],eax
10002621:	je     0x1000262d
10002623:	push   0x8007000e
10002628:	call   0x10050b90
1000262d:	mov    eax,esi
1000262f:	ret    0x4
10002632:	push   ebp
10002633:	mov    ebp,esp
10002635:	push   ecx
10002636:	mov    eax,DWORD PTR [ebp+0x8]
10002639:	and    DWORD PTR [edi+0x4],0x0
1000263d:	push   ebx
1000263e:	push   esi
1000263f:	mov    DWORD PTR [edi+0x8],0x1
10002646:	call   0x100025ab
1000264b:	mov    ebx,eax
1000264d:	mov    eax,DWORD PTR [ebp+0xc]
10002650:	call   0x100025ab
10002655:	lea    esi,[eax+ebx*1]
10002658:	add    esi,esi
1000265a:	push   esi
1000265b:	push   0x0
1000265d:	mov    DWORD PTR [ebp-0x4],eax
10002660:	call   DWORD PTR ds:0x100662a8
10002666:	test   eax,eax
10002668:	mov    DWORD PTR [edi],eax
1000266a:	jne    0x10002678
1000266c:	push   0x8007000e
10002671:	call   0x10050b90
10002676:	jmp    0x100026c9
10002678:	mov    ecx,DWORD PTR [ebp+0x8]
1000267b:	mov    ecx,DWORD PTR [ecx]
1000267d:	test   ecx,ecx
1000267f:	je     0x10002685
10002681:	mov    ecx,DWORD PTR [ecx]
10002683:	jmp    0x10002687
10002685:	xor    ecx,ecx
10002687:	test   ecx,ecx
10002689:	je     0x1000269e
1000268b:	lea    edx,[ebx+ebx*1+0x2]
1000268f:	push   edx
10002690:	push   ecx
10002691:	add    esi,0x2
10002694:	push   esi
10002695:	push   eax
10002696:	call   0x100433c5
1000269b:	add    esp,0x10
1000269e:	mov    eax,DWORD PTR [ebp+0xc]
100026a1:	mov    eax,DWORD PTR [eax]
100026a3:	test   eax,eax
100026a5:	je     0x100026ab
100026a7:	mov    ecx,DWORD PTR [eax]
100026a9:	jmp    0x100026ad
100026ab:	xor    ecx,ecx
100026ad:	test   ecx,ecx
100026af:	je     0x100026c9
100026b1:	mov    eax,DWORD PTR [ebp-0x4]
100026b4:	lea    eax,[eax+eax*1+0x2]
100026b8:	push   eax
100026b9:	push   ecx
100026ba:	push   eax
100026bb:	mov    eax,DWORD PTR [edi]
100026bd:	lea    eax,[eax+ebx*2]
100026c0:	push   eax
100026c1:	call   0x100433c5
100026c6:	add    esp,0x10
100026c9:	pop    esi
100026ca:	mov    eax,edi
100026cc:	pop    ebx
100026cd:	leave  
100026ce:	ret    0x8
100026d1:	mov    DWORD PTR [ecx],0x1006b96c
100026d7:	jmp    0x100010ac
100026dc:	push   esi
100026dd:	mov    esi,ecx
100026df:	mov    DWORD PTR [esi],0x1006b96c
100026e5:	call   0x100010ac
100026ea:	test   BYTE PTR [esp+0x8],0x1
100026ef:	je     0x100026f8
100026f1:	push   esi
100026f2:	call   0x10042e92
100026f7:	pop    ecx
100026f8:	mov    eax,esi
100026fa:	pop    esi
100026fb:	ret    0x4
100026fe:	push   0x0
10002700:	mov    eax,0x1005fdd9
10002705:	call   0x10059a35
1000270a:	mov    esi,DWORD PTR [ebp+0x8]
1000270d:	mov    ecx,esi
1000270f:	call   0x10042f01
10002714:	and    DWORD PTR [ebp-0x4],0x0
10002718:	push   DWORD PTR [ebp+0xc]
1000271b:	lea    ecx,[esi+0xc]
1000271e:	mov    DWORD PTR [esi],0x10073574
10002724:	call   0x100011a7
10002729:	mov    eax,esi
1000272b:	call   0x10059b0d
10002730:	ret    0x8
10002733:	push   esi
10002734:	mov    esi,ecx
10002736:	push   0x0
10002738:	push   0x1
1000273a:	lea    ecx,[esi+0xc]
1000273d:	mov    DWORD PTR [esi],0x10073574
10002743:	call   0x100012f0
10002748:	mov    ecx,esi
1000274a:	pop    esi
1000274b:	jmp    0x10042fd0
10002750:	cmp    DWORD PTR [ecx+0x24],0x10
10002754:	jb     0x1000275a
10002756:	mov    eax,DWORD PTR [ecx+0x10]
10002759:	ret    
1000275a:	lea    eax,[ecx+0x10]
1000275d:	ret    
1000275e:	push   esi
1000275f:	mov    esi,ecx
10002761:	call   0x10002733
10002766:	test   BYTE PTR [esp+0x8],0x1
1000276b:	je     0x10002774
1000276d:	push   esi
1000276e:	call   0x10042e92
10002773:	pop    ecx
10002774:	mov    eax,esi
10002776:	pop    esi
10002777:	ret    0x4
1000277a:	push   0x4
1000277c:	mov    eax,0x1005f924
10002781:	call   0x10059a35
10002786:	mov    esi,ecx
10002788:	mov    DWORD PTR [ebp-0x10],esi
1000278b:	mov    edi,DWORD PTR [ebp+0x8]
1000278e:	push   edi
1000278f:	call   0x10042f78
10002794:	and    DWORD PTR [ebp-0x4],0x0
10002798:	add    edi,0xc
1000279b:	push   edi
1000279c:	lea    ecx,[esi+0xc]
1000279f:	mov    DWORD PTR [esi],0x10073574
100027a5:	call   0x100011a7
100027aa:	mov    eax,esi
100027ac:	call   0x10059b0d
100027b1:	ret    0x4
100027b4:	push   0x0
100027b6:	mov    eax,0x1005fdb6
100027bb:	call   0x10059a35
100027c0:	mov    esi,DWORD PTR [ebp+0x8]
100027c3:	push   DWORD PTR [ebp+0xc]
100027c6:	mov    ecx,esi
100027c8:	call   0x100011a7
100027cd:	push   DWORD PTR [ebp+0x10]
100027d0:	and    DWORD PTR [ebp-0x4],0x0
100027d4:	lea    ecx,[esi+0x1c]
100027d7:	call   0x100011a7
100027dc:	push   DWORD PTR [ebp+0x14]
100027df:	lea    ecx,[esi+0x38]
100027e2:	mov    BYTE PTR [ebp-0x4],0x1
100027e6:	call   0x100011a7
100027eb:	push   DWORD PTR [ebp+0x18]
100027ee:	lea    ecx,[esi+0x54]
100027f1:	mov    BYTE PTR [ebp-0x4],0x2
100027f5:	call   0x100011a7
100027fa:	mov    eax,DWORD PTR [ebp+0x1c]
100027fd:	mov    DWORD PTR [esi+0x70],eax
10002800:	mov    eax,DWORD PTR [edi]
10002802:	mov    DWORD PTR [esi+0x80],eax
10002808:	mov    eax,DWORD PTR [edi+0x4]
1000280b:	mov    DWORD PTR [esi+0x84],eax
10002811:	mov    eax,DWORD PTR [ebx]
10002813:	mov    DWORD PTR [esi+0x78],eax
10002816:	mov    eax,DWORD PTR [ebx+0x4]
10002819:	mov    DWORD PTR [esi+0x7c],eax
1000281c:	mov    eax,esi
1000281e:	call   0x10059b0d
10002823:	ret    0x18
10002826:	push   0x4
10002828:	mov    eax,0x1005fd7d
1000282d:	call   0x10059a35
10002832:	mov    esi,ecx
10002834:	mov    DWORD PTR [ebp-0x10],esi
10002837:	and    DWORD PTR [ebp-0x4],0x0
1000283b:	call   0x10004059
10002840:	push   0xffffffff
10002842:	push   0x0
10002844:	lea    eax,[ebp+0x8]
10002847:	push   eax
10002848:	mov    ecx,esi
1000284a:	mov    BYTE PTR [ebp-0x4],0x1
1000284e:	call   0x10001241
10002853:	mov    eax,DWORD PTR [ebp+0x24]
10002856:	push   0x0
10002858:	push   0x1
1000285a:	lea    ecx,[ebp+0x8]
1000285d:	mov    DWORD PTR [esi+0x1c],eax
10002860:	call   0x100012f0
10002865:	mov    eax,esi
10002867:	call   0x10059b0d
1000286c:	ret    0x20
1000286f:	push   0x0
10002871:	mov    eax,0x10062102
10002876:	call   0x10059a35
1000287b:	mov    edi,DWORD PTR [ebp+0x8]
1000287e:	mov    esi,edi
10002880:	call   0x10004059
10002885:	mov    esi,DWORD PTR [ebp+0x10]
10002888:	xor    eax,eax
1000288a:	mov    DWORD PTR [ebp-0x4],eax
1000288d:	mov    DWORD PTR [edi+0x1c],eax
10002890:	mov    DWORD PTR [edi+0x20],eax
10002893:	mov    DWORD PTR [edi+0x24],eax
10002896:	mov    eax,DWORD PTR [ebp+0xc]
10002899:	mov    ecx,edi
1000289b:	call   0x10039e50
100028a0:	mov    eax,edi
100028a2:	call   0x10059b0d
100028a7:	ret    0xc
100028aa:	push   0x8
100028ac:	mov    eax,0x10062467
100028b1:	call   0x10059a35
100028b6:	and    DWORD PTR [ebp-0x14],0x0
100028ba:	push   0x4
100028bc:	call   0x1004349e
100028c1:	pop    ecx
100028c2:	mov    DWORD PTR [ebp-0x14],eax
100028c5:	and    DWORD PTR [ebp-0x4],0x0
100028c9:	test   eax,eax
100028cb:	je     0x100028da
100028cd:	push   DWORD PTR [ebp+0xc]
100028d0:	push   eax
100028d1:	call   0x100349f0
100028d6:	mov    esi,eax
100028d8:	jmp    0x100028dc
100028da:	xor    esi,esi
100028dc:	mov    edi,esi
100028de:	mov    DWORD PTR [ebp-0x14],edi
100028e1:	push   0x4
100028e3:	mov    DWORD PTR [ebp-0x4],0x1
100028ea:	call   0x1004349e
100028ef:	test   eax,eax
100028f1:	pop    ecx
100028f2:	je     0x100028fa
100028f4:	xor    edi,edi
100028f6:	mov    DWORD PTR [eax],esi
100028f8:	jmp    0x100028fc
100028fa:	xor    eax,eax
100028fc:	mov    esi,DWORD PTR [ebp+0x8]
100028ff:	and    DWORD PTR [ebp-0x10],0x0
10002903:	mov    DWORD PTR [esi],eax
10002905:	lea    eax,[ebp-0x10]
10002908:	call   0x1000421f
1000290d:	test   edi,edi
1000290f:	je     0x10002920
10002911:	push   DWORD PTR [edi]
10002913:	call   DWORD PTR ds:0x10066070
10002919:	push   edi
1000291a:	call   0x10042e92
1000291f:	pop    ecx
10002920:	mov    eax,esi
10002922:	call   0x10059b0d
10002927:	ret    
10002928:	push   ebp
10002929:	mov    ebp,esp
1000292b:	and    esp,0xfffffff8
1000292e:	push   ecx
1000292f:	push   ecx
10002930:	push   esi
10002931:	push   edi
10002932:	call   0x1002fa00
10002937:	mov    edi,eax
10002939:	mov    eax,DWORD PTR [ebp+0x8]
1000293c:	mov    eax,DWORD PTR [eax]
1000293e:	push   0x1
10002940:	push   eax
10002941:	lea    ecx,[esp+0x10]
10002945:	mov    esi,edx
10002947:	call   0x10035ac0
1000294c:	mov    ecx,DWORD PTR [eax]
1000294e:	mov    eax,DWORD PTR [eax+0x4]
10002951:	add    ecx,0x9534e000
10002957:	adc    eax,0x64
1000295a:	cmp    esi,eax
1000295c:	ja     0x10002969
1000295e:	jb     0x10002964
10002960:	cmp    edi,ecx
10002962:	jae    0x10002969
10002964:	xor    eax,eax
10002966:	inc    eax
10002967:	jmp    0x1000296b
10002969:	xor    eax,eax
1000296b:	pop    edi
1000296c:	pop    esi
1000296d:	mov    esp,ebp
1000296f:	pop    ebp
10002970:	ret    0x4
10002973:	xor    eax,eax
10002975:	push   eax
10002976:	push   eax
10002977:	push   eax
10002978:	push   0x10002986
1000297d:	push   eax
1000297e:	push   eax
1000297f:	call   DWORD PTR ds:0x10066098
10002985:	ret    
10002986:	push   ebp
10002987:	sub    esp,0x8c
1000298d:	lea    ebp,[esp-0x4]
10002991:	mov    eax,ds:0x1007e030
10002996:	xor    eax,ebp
10002998:	mov    DWORD PTR [ebp+0x8c],eax
1000299e:	push   0xa4
100029a3:	mov    eax,0x10064973
100029a8:	call   0x10059a68
100029ad:	lea    eax,[ebp-0x21]
100029b0:	push   eax
100029b1:	call   0x10037950
100029b6:	push   0x1
100029b8:	lea    eax,[ebp-0x14]
100029bb:	xor    ebx,ebx
100029bd:	mov    DWORD PTR [ebp-0x4],ebx
100029c0:	push   eax
100029c1:	mov    BYTE PTR [ebp-0x4],0x1
100029c5:	call   0x100349f0
100029ca:	mov    BYTE PTR [ebp-0x4],0x2
100029ce:	call   0x1002fa00
100029d3:	mov    edi,eax
100029d5:	push   0x4
100029d7:	lea    eax,[ebp-0x14]
100029da:	push   eax
100029db:	lea    ecx,[ebp-0x20]
100029de:	mov    esi,edx
100029e0:	call   0x10035ac0
100029e5:	mov    ecx,DWORD PTR [eax]
100029e7:	mov    eax,DWORD PTR [eax+0x4]
100029ea:	add    ecx,0x65a0bc00
100029f0:	adc    eax,0x1
100029f3:	cmp    esi,eax
100029f5:	ja     0x10002a38
100029f7:	jb     0x100029fd
100029f9:	cmp    edi,ecx
100029fb:	jae    0x10002a38
100029fd:	push   DWORD PTR [ebp-0x14]
10002a00:	call   DWORD PTR ds:0x10066070
10002a06:	call   0x10037970
10002a0b:	xor    eax,eax
10002a0d:	lea    esp,[ebp-0xc0]
10002a13:	mov    ecx,DWORD PTR [ebp-0xc]
10002a16:	mov    DWORD PTR fs:0x0,ecx
10002a1d:	pop    ecx
10002a1e:	pop    edi
10002a1f:	pop    esi
10002a20:	pop    ebx
10002a21:	mov    ecx,DWORD PTR [ebp+0x8c]
10002a27:	xor    ecx,ebp
10002a29:	call   0x10042e97
10002a2e:	add    ebp,0x90
10002a34:	leave  
10002a35:	ret    0x4
10002a38:	call   0x1002fa00
10002a3d:	mov    DWORD PTR [ebp-0x20],eax
10002a40:	lea    eax,[ebp-0x20]
10002a43:	push   eax
10002a44:	lea    eax,[ebp-0x14]
10002a47:	push   eax
10002a48:	push   0x4
10002a4a:	pop    ecx
10002a4b:	mov    DWORD PTR [ebp-0x1c],edx
10002a4e:	call   0x10035bf0
10002a53:	push   DWORD PTR [ebp-0x14]
10002a56:	call   DWORD PTR ds:0x10066070
10002a5c:	push   0xf
10002a5e:	pop    esi
10002a5f:	push   ebx
10002a60:	lea    ecx,[ebp+0x70]
10002a63:	mov    DWORD PTR [ebp+0x88],esi
10002a69:	call   0x1000141c
10002a6e:	mov    BYTE PTR [ebp-0x4],0x3
10002a72:	cmp    BYTE PTR ds:0x10080c3c,bl
10002a78:	jne    0x10002aa3
10002a7a:	lea    eax,[ebp-0x14]
10002a7d:	push   eax
10002a7e:	call   0x10037e70
10002a83:	mov    eax,DWORD PTR [eax]
10002a85:	cmp    DWORD PTR [eax-0xc],ebx
10002a88:	pop    ecx
10002a89:	setne  al
10002a8c:	mov    ds:0x10080c3d,al
10002a91:	mov    eax,DWORD PTR [ebp-0x14]
10002a94:	add    eax,0xfffffff0
10002a97:	call   0x10002081
10002a9c:	mov    BYTE PTR ds:0x10080c3c,0x1
10002aa3:	cmp    BYTE PTR ds:0x10080c3d,bl
10002aa9:	mov    edi,0x1006cce8
10002aae:	jne    0x10002ab5
10002ab0:	mov    edi,0x1006cd0c
10002ab5:	push   0x1297222a
10002aba:	push   0x1006cd10
10002abf:	call   0x10004246
10002ac4:	pop    ecx
10002ac5:	pop    ecx
10002ac6:	push   0x7618ec8
10002acb:	push   eax
10002acc:	call   0x10004246
10002ad1:	pop    ecx
10002ad2:	pop    ecx
10002ad3:	push   eax
10002ad4:	push   0x3
10002ad6:	push   0x1006cd34
10002adb:	call   0x10004258
10002ae0:	add    esp,0xc
10002ae3:	push   eax
10002ae4:	lea    ecx,[ebp-0x5c]
10002ae7:	call   0x100011cd
10002aec:	push   edi
10002aed:	push   eax
10002aee:	lea    eax,[ebp-0x94]
10002af4:	push   eax
10002af5:	mov    BYTE PTR [ebp-0x4],0x4
10002af9:	call   0x10006490
10002afe:	add    esp,0xc
10002b01:	push   0xffffffff
10002b03:	push   ebx
10002b04:	push   eax
10002b05:	lea    ecx,[ebp+0x70]
10002b08:	mov    BYTE PTR [ebp-0x4],0x5
10002b0c:	call   0x10001241
10002b11:	push   ebx
10002b12:	push   0x1
10002b14:	lea    ecx,[ebp-0x94]
10002b1a:	call   0x100012f0
10002b1f:	push   ebx
10002b20:	push   0x1
10002b22:	lea    ecx,[ebp-0x5c]
10002b25:	call   0x100012f0
10002b2a:	push   ebx
10002b2b:	lea    ecx,[ebp+0x1c]
10002b2e:	mov    DWORD PTR [ebp+0x34],esi
10002b31:	call   0x1000141c
10002b36:	push   ebx
10002b37:	lea    ecx,[ebp+0x0]
10002b3a:	mov    DWORD PTR [ebp+0x18],esi
10002b3d:	call   0x1000141c
10002b42:	push   ebx
10002b43:	lea    ecx,[ebp+0x38]
10002b46:	mov    DWORD PTR [ebp+0x50],esi
10002b49:	call   0x1000141c
10002b4e:	mov    BYTE PTR [ebp-0x4],0x8
10002b52:	lea    eax,[ebp+0x1c]
10002b55:	mov    DWORD PTR [ebp-0x20],ebx
10002b58:	mov    DWORD PTR [ebp-0x1c],ebx
10002b5b:	push   eax
10002b5c:	lea    ebx,[ebp-0x20]
10002b5f:	lea    ecx,[ebp+0x38]
10002b62:	call   0x10038790
10002b67:	xor    ebx,ebx
10002b69:	cmp    al,bl
10002b6b:	pop    ecx
10002b6c:	je     0x10002cfe
10002b72:	lea    eax,[ebp+0x38]
10002b75:	push   eax
10002b76:	lea    ecx,[ebp-0x78]
10002b79:	call   0x10031000
10002b7e:	pop    ecx
10002b7f:	mov    esi,eax
10002b81:	push   0x1006cd38
10002b86:	push   0x5
10002b88:	push   0x1006cd64
10002b8d:	mov    BYTE PTR [ebp-0x4],0x9
10002b91:	call   0x10004258
10002b96:	add    esp,0xc
10002b99:	push   eax
10002b9a:	lea    ecx,[ebp-0x94]
10002ba0:	call   0x100011cd
10002ba5:	push   esi
10002ba6:	push   eax
10002ba7:	lea    eax,[ebp-0x5c]
10002baa:	push   eax
10002bab:	mov    BYTE PTR [ebp-0x4],0xa
10002baf:	call   0x100064d6
10002bb4:	add    esp,0xc
10002bb7:	push   0xffffffff
10002bb9:	push   ebx
10002bba:	lea    esi,[ebp+0x70]
10002bbd:	mov    BYTE PTR [ebp-0x4],0xb
10002bc1:	call   0x10004c80
10002bc6:	xor    edi,edi
10002bc8:	push   ebx
10002bc9:	inc    edi
10002bca:	push   edi
10002bcb:	lea    ecx,[ebp-0x5c]
10002bce:	call   0x100012f0
10002bd3:	push   ebx
10002bd4:	push   edi
10002bd5:	lea    ecx,[ebp-0x94]
10002bdb:	call   0x100012f0
10002be0:	push   ebx
10002be1:	push   edi
10002be2:	lea    ecx,[ebp-0x78]
10002be5:	mov    BYTE PTR [ebp-0x4],0x8
10002be9:	call   0x100012f0
10002bee:	lea    eax,[ebp+0x1c]
10002bf1:	push   eax
10002bf2:	lea    ecx,[ebp-0x94]
10002bf8:	call   0x10031000
10002bfd:	pop    ecx
10002bfe:	mov    esi,eax
10002c00:	push   0x1006cd6c
10002c05:	push   0x7
10002c07:	push   0x1006cda4
10002c0c:	mov    BYTE PTR [ebp-0x4],0xc
10002c10:	call   0x10004258
10002c15:	add    esp,0xc
10002c18:	push   eax
10002c19:	lea    ecx,[ebp-0x5c]
10002c1c:	call   0x100011cd
10002c21:	push   esi
10002c22:	push   eax
10002c23:	lea    eax,[ebp-0x78]
10002c26:	push   eax
10002c27:	mov    BYTE PTR [ebp-0x4],0xd
10002c2b:	call   0x100064d6
10002c30:	add    esp,0xc
10002c33:	push   0xffffffff
10002c35:	push   ebx
10002c36:	lea    esi,[ebp+0x70]
10002c39:	mov    BYTE PTR [ebp-0x4],0xe
10002c3d:	call   0x10004c80
10002c42:	push   ebx
10002c43:	push   edi
10002c44:	lea    ecx,[ebp-0x78]
10002c47:	call   0x100012f0
10002c4c:	push   ebx
10002c4d:	push   edi
10002c4e:	lea    ecx,[ebp-0x5c]
10002c51:	call   0x100012f0
10002c56:	push   ebx
10002c57:	push   edi
10002c58:	lea    ecx,[ebp-0x94]
10002c5e:	mov    BYTE PTR [ebp-0x4],0x8
10002c62:	call   0x100012f0
10002c67:	mov    eax,ds:0x10080a74
10002c6c:	mov    ecx,0x10080a74
10002c71:	call   DWORD PTR [eax+0xc]
10002c74:	add    eax,0x10
10002c77:	mov    DWORD PTR [ebp-0x14],eax
10002c7a:	push   0x1006cdac
10002c7f:	push   0xc
10002c81:	push   0x1006cdd0
10002c86:	mov    BYTE PTR [ebp-0x4],0xf
10002c8a:	call   0x10004417
10002c8f:	add    esp,0xc
10002c92:	push   DWORD PTR [ebp-0x1c]
10002c95:	push   DWORD PTR [ebp-0x20]
10002c98:	push   eax
10002c99:	lea    eax,[ebp-0x14]
10002c9c:	call   0x10006445
10002ca1:	add    esp,0xc
10002ca4:	call   DWORD PTR ds:0x1007efec
10002caa:	lea    esi,[ebp-0x14]
10002cad:	mov    DWORD PTR [ebp-0x18],eax
10002cb0:	call   0x10004178
10002cb5:	mov    edi,eax
10002cb7:	cmp    edi,ebx
10002cb9:	je     0x10002cca
10002cbb:	push   edi
10002cbc:	call   DWORD PTR ds:0x100660c4
10002cc2:	inc    eax
10002cc3:	cmp    eax,0x3fffffff
10002cc8:	jle    0x10002cce
10002cca:	xor    eax,eax
10002ccc:	jmp    0x10002ce9
10002cce:	lea    esi,[eax+eax*1]
10002cd1:	mov    eax,esi
10002cd3:	call   0x1004b6f0
10002cd8:	mov    eax,esp
10002cda:	mov    DWORD PTR [ebp-0x10],esp
10002cdd:	push   DWORD PTR [ebp-0x18]
10002ce0:	push   esi
10002ce1:	push   edi
10002ce2:	mov    esi,eax
10002ce4:	call   0x10002434
10002ce9:	push   eax
10002cea:	lea    eax,[ebp+0x70]
10002ced:	push   eax
10002cee:	call   0x10004090
10002cf3:	mov    eax,DWORD PTR [ebp-0x14]
10002cf6:	add    eax,0xfffffff0
10002cf9:	call   0x10002081
10002cfe:	mov    DWORD PTR [ebp-0x3c],ebx
10002d01:	mov    DWORD PTR [ebp-0x38],ebx
10002d04:	mov    DWORD PTR [ebp-0x34],ebx
10002d07:	lea    eax,[ebp-0x40]
10002d0a:	push   eax
10002d0b:	mov    BYTE PTR [ebp-0x4],0x10
10002d0f:	call   0x10038970
10002d14:	pop    ecx
10002d15:	mov    DWORD PTR [ebp-0x14],ebx
10002d18:	lea    eax,[ebp-0x40]
10002d1b:	call   0x100045e9
10002d20:	cmp    DWORD PTR [ebp-0x14],eax
10002d23:	je     0x10002dbd
10002d29:	push   0x53842bb0
10002d2e:	push   0x1006cdec
10002d33:	call   0x10004246
10002d38:	pop    ecx
10002d39:	pop    ecx
10002d3a:	push   0x539034aa
10002d3f:	push   eax
10002d40:	call   0x10004246
10002d45:	pop    ecx
10002d46:	pop    ecx
10002d47:	push   0x1cf63d8a
10002d4c:	push   eax
10002d4d:	call   0x10004246
10002d52:	pop    ecx
10002d53:	pop    ecx
10002d54:	push   eax
10002d55:	push   0x5
10002d57:	push   0x1006ce2c
10002d5c:	call   0x10004258
10002d61:	add    esp,0xc
10002d64:	push   eax
10002d65:	lea    ecx,[ebp-0x5c]
10002d68:	call   0x100011cd
10002d6d:	mov    edi,eax
10002d6f:	mov    BYTE PTR [ebp-0x4],0x11
10002d73:	push   DWORD PTR [ebp-0x14]
10002d76:	lea    esi,[ebp-0x40]
10002d79:	call   0x100045ff
10002d7e:	push   eax
10002d7f:	lea    eax,[ebp-0x78]
10002d82:	push   edi
10002d83:	push   eax
10002d84:	call   0x100064d6
10002d89:	add    esp,0xc
10002d8c:	push   0xffffffff
10002d8e:	push   ebx
10002d8f:	lea    esi,[ebp+0x70]
10002d92:	mov    BYTE PTR [ebp-0x4],0x12
10002d96:	call   0x10004c80
10002d9b:	push   ebx
10002d9c:	push   0x1
10002d9e:	lea    ecx,[ebp-0x78]
10002da1:	call   0x100012f0
10002da6:	push   ebx
10002da7:	push   0x1
10002da9:	lea    ecx,[ebp-0x5c]
10002dac:	mov    BYTE PTR [ebp-0x4],0x10
10002db0:	call   0x100012f0
10002db5:	inc    DWORD PTR [ebp-0x14]
10002db8:	jmp    0x10002d18
10002dbd:	lea    eax,[ebp-0xb0]
10002dc3:	push   eax
10002dc4:	call   0x100390e0
10002dc9:	pop    ecx
10002dca:	push   eax
10002dcb:	lea    ecx,[ebp-0x94]
10002dd1:	mov    BYTE PTR [ebp-0x4],0x13
10002dd5:	call   0x10031000
10002dda:	pop    ecx
10002ddb:	mov    esi,eax
10002ddd:	push   0x1006ce34
10002de2:	push   0x7
10002de4:	push   0x1006ce58
10002de9:	mov    BYTE PTR [ebp-0x4],0x14
10002ded:	call   0x10004258
10002df2:	add    esp,0xc
10002df5:	push   eax
10002df6:	lea    ecx,[ebp-0x5c]
10002df9:	call   0x100011cd
10002dfe:	push   esi
10002dff:	push   eax
10002e00:	lea    eax,[ebp-0x78]
10002e03:	push   eax
10002e04:	mov    BYTE PTR [ebp-0x4],0x15
10002e08:	call   0x100064d6
10002e0d:	add    esp,0xc
10002e10:	push   0xffffffff
10002e12:	push   ebx
10002e13:	lea    esi,[ebp+0x70]
10002e16:	mov    BYTE PTR [ebp-0x4],0x16
10002e1a:	call   0x10004c80
10002e1f:	xor    esi,esi
10002e21:	push   ebx
10002e22:	inc    esi
10002e23:	push   esi
10002e24:	lea    ecx,[ebp-0x78]
10002e27:	call   0x100012f0
10002e2c:	push   ebx
10002e2d:	push   esi
10002e2e:	lea    ecx,[ebp-0x5c]
10002e31:	call   0x100012f0
10002e36:	push   ebx
10002e37:	push   esi
10002e38:	lea    ecx,[ebp-0x94]
10002e3e:	call   0x100012f0
10002e43:	push   ebx
10002e44:	push   esi
10002e45:	lea    ecx,[ebp-0xb0]
10002e4b:	mov    BYTE PTR [ebp-0x4],0x10
10002e4f:	call   0x100012f0
10002e54:	call   DWORD PTR ds:0x1007efec
10002e5a:	mov    DWORD PTR [ebp-0x18],eax
10002e5d:	mov    eax,ds:0x10080a74
10002e62:	mov    ecx,0x10080a74
10002e67:	call   DWORD PTR [eax+0xc]
10002e6a:	add    eax,0x10
10002e6d:	mov    DWORD PTR [ebp-0x14],eax
10002e70:	push   0x8247742
10002e75:	push   0x1006ce60
10002e7a:	mov    BYTE PTR [ebp-0x4],0x17
10002e7e:	call   0x10004246
10002e83:	pop    ecx
10002e84:	pop    ecx
10002e85:	push   0x18010838
10002e8a:	push   eax
10002e8b:	call   0x10004246
10002e90:	pop    ecx
10002e91:	pop    ecx
10002e92:	mov    esi,eax
10002e94:	call   0x10033490
10002e99:	push   esi
10002e9a:	push   0x4
10002e9c:	push   0x1006ce94
10002ea1:	mov    edi,eax
10002ea3:	call   0x10004417
10002ea8:	add    esp,0xc
10002eab:	push   edi
10002eac:	push   eax
10002ead:	lea    eax,[ebp-0x14]
10002eb0:	call   0x10006445
10002eb5:	pop    ecx
10002eb6:	pop    ecx
10002eb7:	push   0xffffffff
10002eb9:	lea    esi,[ebp-0x14]
10002ebc:	call   0x100021b6
10002ec1:	mov    edi,eax
10002ec3:	cmp    edi,ebx
10002ec5:	je     0x10002ed6
10002ec7:	push   edi
10002ec8:	call   DWORD PTR ds:0x100660c4
10002ece:	inc    eax
10002ecf:	cmp    eax,0x3fffffff
10002ed4:	jle    0x10002eda
10002ed6:	xor    eax,eax
10002ed8:	jmp    0x10002ef5
10002eda:	lea    esi,[eax+eax*1]
10002edd:	mov    eax,esi
10002edf:	call   0x1004b6f0
10002ee4:	mov    eax,esp
10002ee6:	mov    DWORD PTR [ebp-0x10],esp
10002ee9:	push   DWORD PTR [ebp-0x18]
10002eec:	push   esi
10002eed:	push   edi
10002eee:	mov    esi,eax
10002ef0:	call   0x10002434
10002ef5:	push   eax
10002ef6:	lea    ecx,[ebp-0x78]
10002ef9:	call   0x100011cd
10002efe:	mov    esi,eax
10002f00:	push   0x49790c2a
10002f05:	push   0x1006cea0
10002f0a:	mov    BYTE PTR [ebp-0x4],0x18
10002f0e:	call   0x10004246
10002f13:	pop    ecx
10002f14:	pop    ecx
10002f15:	push   0x5cab17de
10002f1a:	push   eax
10002f1b:	call   0x10004246
10002f20:	pop    ecx
10002f21:	pop    ecx
10002f22:	push   eax
10002f23:	push   0x5
10002f25:	push   0x1006cecc
10002f2a:	call   0x10004258
10002f2f:	add    esp,0xc
10002f32:	push   esi
10002f33:	push   eax
10002f34:	lea    eax,[ebp-0xb0]
10002f3a:	push   eax
10002f3b:	call   0x10006521
10002f40:	add    esp,0xc
10002f43:	push   0xffffffff
10002f45:	push   ebx
10002f46:	lea    esi,[ebp+0x70]
10002f49:	mov    BYTE PTR [ebp-0x4],0x19
10002f4d:	call   0x10004c80
10002f52:	push   ebx
10002f53:	push   0x1
10002f55:	lea    ecx,[ebp-0xb0]
10002f5b:	call   0x100012f0
10002f60:	push   ebx
10002f61:	push   0x1
10002f63:	lea    ecx,[ebp-0x78]
10002f66:	call   0x100012f0
10002f6b:	mov    BYTE PTR [ebp-0x4],0x10
10002f6f:	mov    eax,DWORD PTR [ebp-0x14]
10002f72:	add    eax,0xfffffff0
10002f75:	call   0x10002081
10002f7a:	lea    ecx,[ebp+0x54]
10002f7d:	call   0x100183f1
10002f82:	mov    BYTE PTR [ebp-0x4],0x1a
10002f86:	cmp    DWORD PTR [ebp+0x6c],0x10
10002f8a:	mov    eax,DWORD PTR [ebp+0x58]
10002f8d:	jae    0x10002f92
10002f8f:	lea    eax,[ebp+0x58]
10002f92:	push   eax
10002f93:	call   0x10002080
10002f98:	pop    ecx
10002f99:	push   DWORD PTR ds:0x10080d8c
10002f9f:	lea    ecx,[ebp-0x94]
10002fa5:	mov    DWORD PTR [ebp-0x14],ebx
10002fa8:	call   0x100011cd
10002fad:	push   0xffffffff
10002faf:	lea    eax,[ebp-0x14]
10002fb2:	push   eax
10002fb3:	lea    eax,[ebp+0x70]
10002fb6:	push   eax
10002fb7:	lea    eax,[ebp+0x54]
10002fba:	push   eax
10002fbb:	lea    eax,[ebp-0x18]
10002fbe:	push   eax
10002fbf:	lea    edx,[ebp-0x94]
10002fc5:	mov    BYTE PTR [ebp-0x4],0x1b
10002fc9:	call   0x10030ee0
10002fce:	mov    ecx,DWORD PTR [eax]
10002fd0:	mov    edi,ecx
10002fd2:	add    esp,0x14
10002fd5:	mov    DWORD PTR [eax],ebx
10002fd7:	mov    DWORD PTR [ebp-0x1c],edi
10002fda:	push   DWORD PTR [ebp-0x18]
10002fdd:	call   0x10042e92
10002fe2:	pop    ecx
10002fe3:	push   ebx
10002fe4:	push   0x1
10002fe6:	lea    ecx,[ebp-0x94]
10002fec:	mov    BYTE PTR [ebp-0x4],0x1d
10002ff0:	call   0x100012f0
10002ff5:	cmp    edi,ebx
10002ff7:	jne    0x10003004
10002ff9:	call   0x10018370
10002ffe:	push   ebx
10002fff:	jmp    0x100030c2
10003004:	mov    eax,DWORD PTR [ebp-0x14]
10003007:	mov    DWORD PTR [ebp-0x2c],eax
1000300a:	lea    eax,[ebp-0x30]
1000300d:	push   eax
1000300e:	mov    DWORD PTR [ebp-0x30],ebx
10003011:	mov    DWORD PTR [ebp-0x28],edi
10003014:	call   0x100377e0
10003019:	sub    eax,ebx
1000301b:	je     0x10003094
1000301d:	dec    eax
1000301e:	je     0x10003071
10003020:	dec    eax
10003021:	je     0x10003056
10003023:	dec    eax
10003024:	je     0x10003038
10003026:	call   0x10002080
1000302b:	push   0x5
1000302d:	call   0x10037980
10003032:	pop    ecx
10003033:	jmp    0x100030c1
10003038:	lea    eax,[ebp-0x30]
1000303b:	push   eax
1000303c:	lea    esi,[ebp-0xb0]
10003042:	call   0x100374a0
10003047:	push   eax
10003048:	mov    BYTE PTR [ebp-0x4],0x21
1000304c:	call   0x10003d96
10003051:	pop    ecx
10003052:	mov    ecx,esi
10003054:	jmp    0x1000308a
10003056:	lea    eax,[ebp-0x30]
10003059:	push   eax
1000305a:	lea    esi,[ebp-0x78]
1000305d:	call   0x100374a0
10003062:	push   eax
10003063:	mov    BYTE PTR [ebp-0x4],0x20
10003067:	call   0x10003b77
1000306c:	pop    ecx
1000306d:	mov    ecx,esi
1000306f:	jmp    0x1000308a
10003071:	lea    eax,[ebp-0x30]
10003074:	push   eax
10003075:	lea    esi,[ebp-0x5c]
10003078:	call   0x100374a0
1000307d:	push   eax
1000307e:	mov    BYTE PTR [ebp-0x4],0x1f
10003082:	call   0x100039eb
10003087:	pop    ecx
10003088:	mov    ecx,esi
1000308a:	push   ebx
1000308b:	push   0x1
1000308d:	call   0x100012f0
10003092:	jmp    0x100030c1
10003094:	call   0x10002080
10003099:	lea    eax,[ebp-0x14]
1000309c:	push   0x1
1000309e:	push   eax
1000309f:	call   0x100028aa
100030a4:	pop    ecx
100030a5:	pop    ecx
100030a6:	mov    BYTE PTR [ebp-0x4],0x1e
100030aa:	mov    esi,DWORD PTR [eax]
100030ac:	lea    eax,[ebp-0x30]
100030af:	call   0x1000312e
100030b4:	lea    eax,[ebp-0x14]
100030b7:	call   0x1000421f
100030bc:	call   0x10002080
100030c1:	push   edi
100030c2:	call   0x10042e92
100030c7:	pop    ecx
100030c8:	push   ebx
100030c9:	push   0x1
100030cb:	lea    ecx,[ebp+0x54]
100030ce:	call   0x100012f0
100030d3:	lea    esi,[ebp-0x40]
100030d6:	call   0x10004964
100030db:	xor    esi,esi
100030dd:	push   ebx
100030de:	inc    esi
100030df:	push   esi
100030e0:	lea    ecx,[ebp+0x38]
100030e3:	call   0x100012f0
100030e8:	push   ebx
100030e9:	push   esi
100030ea:	lea    ecx,[ebp+0x0]
100030ed:	call   0x100012f0
100030f2:	push   ebx
100030f3:	push   esi
100030f4:	lea    ecx,[ebp+0x1c]
100030f7:	call   0x100012f0
100030fc:	push   ebx
100030fd:	push   esi
100030fe:	lea    ecx,[ebp+0x70]
10003101:	call   0x100012f0
10003106:	jmp    0x10002a06
1000310b:	call   0x10018370
10003110:	mov    eax,0x10003116
10003115:	ret    
10003116:	jmp    0x10002a06
1000311b:	push   0x4
1000311d:	call   0x10037980
10003122:	pop    ecx
10003123:	call   0x10018370
10003128:	mov    eax,0x10002a06
1000312d:	ret    
1000312e:	push   ebp
1000312f:	mov    ebp,esp
10003131:	and    esp,0xfffffff8
10003134:	push   ecx
10003135:	push   ecx
10003136:	mov    ecx,DWORD PTR [esi]
10003138:	push   ebx
10003139:	push   edi
1000313a:	mov    ebx,eax
1000313c:	call   0x10034d40
10003141:	and    DWORD PTR [esp+0x8],0x0
10003146:	xor    eax,eax
10003148:	lea    edi,[esp+0xc]
1000314c:	stos   DWORD PTR es:[edi],eax
1000314d:	lea    eax,[esp+0x8]
10003151:	push   eax
10003152:	push   DWORD PTR [esi]
10003154:	xor    ecx,ecx
10003156:	inc    ecx
10003157:	call   0x10035bf0
1000315c:	push   esi
1000315d:	mov    ecx,ebx
1000315f:	call   0x100031d6
10003164:	push   esi
10003165:	mov    ecx,ebx
10003167:	call   0x1000369d
1000316c:	push   esi
1000316d:	call   0x100033dc
10003172:	call   0x100034db
10003177:	push   esi
10003178:	call   0x1000360b
1000317d:	push   ebx
1000317e:	call   0x100377e0
10003183:	push   ebx
10003184:	mov    edi,eax
10003186:	call   0x100377e0
1000318b:	push   edi
1000318c:	push   DWORD PTR [esi]
1000318e:	mov    ecx,eax
10003190:	call   0x10035d00
10003195:	push   ebx
10003196:	call   0x100377e0
1000319b:	push   ebx
1000319c:	mov    edi,eax
1000319e:	call   0x100377e0
100031a3:	push   edi
100031a4:	push   DWORD PTR [esi]
100031a6:	mov    ecx,eax
100031a8:	call   0x10035f50
100031ad:	call   0x1002fa00
100031b2:	mov    DWORD PTR [esp+0x8],eax
100031b6:	lea    eax,[esp+0x8]
100031ba:	push   eax
100031bb:	push   DWORD PTR [esi]
100031bd:	xor    ecx,ecx
100031bf:	inc    ecx
100031c0:	mov    DWORD PTR [esp+0x14],edx
100031c4:	call   0x10035bf0
100031c9:	mov    ecx,ebx
100031cb:	call   0x1000395d
100031d0:	pop    edi
100031d1:	pop    ebx
100031d2:	mov    esp,ebp
100031d4:	pop    ebp
100031d5:	ret    
100031d6:	push   0x140
100031db:	mov    eax,0x10063135
100031e0:	call   0x10059a9e
100031e5:	mov    eax,DWORD PTR [ebp+0x8]
100031e8:	mov    edi,ecx
100031ea:	push   edi
100031eb:	mov    DWORD PTR [ebp-0x9c],eax
100031f1:	mov    DWORD PTR [ebp-0x98],edi
100031f7:	call   0x100377e0
100031fc:	xor    ebx,ebx
100031fe:	cmp    eax,ebx
10003200:	je     0x100033a4
10003206:	mov    DWORD PTR [ebp-0x90],eax
1000320c:	jmp    0x10003216
1000320e:	mov    edi,DWORD PTR [ebp-0x98]
10003214:	xor    ebx,ebx
10003216:	push   edi
10003217:	lea    esi,[ebp-0xc0]
1000321d:	call   0x100374a0
10003222:	push   eax
10003223:	lea    esi,[ebp-0x30]
10003226:	mov    DWORD PTR [ebp-0x4],ebx
10003229:	call   0x1002fa30
1000322e:	pop    ecx
1000322f:	push   ebx
10003230:	push   0x1
10003232:	lea    ecx,[ebp-0xc0]
10003238:	mov    BYTE PTR [ebp-0x4],0x2
1000323c:	call   0x100012f0
10003241:	push   edi
10003242:	lea    esi,[ebp-0x4c]
10003245:	call   0x100374a0
1000324a:	push   edi
1000324b:	lea    esi,[ebp-0x68]
1000324e:	mov    BYTE PTR [ebp-0x4],0x3
10003252:	call   0x100374a0
10003257:	push   edi
10003258:	lea    esi,[ebp-0x84]
1000325e:	mov    BYTE PTR [ebp-0x4],0x4
10003262:	call   0x100374a0
10003267:	push   edi
10003268:	mov    BYTE PTR [ebp-0x4],0x5
1000326c:	call   0x100377e0
10003271:	push   edi
10003272:	mov    DWORD PTR [ebp-0x94],eax
10003278:	call   0x100377e0
1000327d:	push   ebx
1000327e:	cdq    
1000327f:	mov    esi,0x2710
10003284:	push   esi
10003285:	push   edx
10003286:	push   eax
10003287:	call   0x1004f400
1000328c:	push   edi
1000328d:	mov    DWORD PTR [ebp-0xa4],eax
10003293:	mov    DWORD PTR [ebp-0xa0],edx
10003299:	call   0x100377e0
1000329e:	push   ebx
1000329f:	cdq    
100032a0:	push   esi
100032a1:	push   edx
100032a2:	push   eax
100032a3:	call   0x1004f400
100032a8:	mov    DWORD PTR [ebp-0x8c],eax
100032ae:	mov    DWORD PTR [ebp-0x88],edx
100032b4:	call   0x1002fa00
100032b9:	add    DWORD PTR [ebp-0x8c],eax
100032bf:	mov    eax,DWORD PTR [ebp-0x94]
100032c5:	lea    ecx,[ebp-0x30]
100032c8:	adc    DWORD PTR [ebp-0x88],edx
100032ce:	shr    eax,0x2
100032d1:	test   al,0x1
100032d3:	lea    eax,[ebp-0xc0]
100032d9:	push   eax
100032da:	je     0x100032e8
100032dc:	call   0x10030b10
100032e1:	pop    ecx
100032e2:	mov    BYTE PTR [ebp-0x4],0x6
100032e6:	jmp    0x100032f2
100032e8:	call   0x1002fb70
100032ed:	pop    ecx
100032ee:	mov    BYTE PTR [ebp-0x4],0x7
100032f2:	push   0xffffffff
100032f4:	push   ebx
100032f5:	push   eax
100032f6:	lea    ecx,[ebp-0x30]
100032f9:	call   0x10001241
100032fe:	push   ebx
100032ff:	push   0x1
10003301:	lea    ecx,[ebp-0xc0]
10003307:	mov    BYTE PTR [ebp-0x4],0x5
1000330b:	call   0x100012f0
10003310:	push   DWORD PTR [ebp-0x94]
10003316:	lea    eax,[ebp-0x84]
1000331c:	push   eax
1000331d:	lea    eax,[ebp-0x68]
10003320:	push   eax
10003321:	lea    eax,[ebp-0x4c]
10003324:	push   eax
10003325:	lea    eax,[ebp-0x30]
10003328:	push   eax
10003329:	lea    eax,[ebp-0x14c]
1000332f:	push   eax
10003330:	lea    edi,[ebp-0x8c]
10003336:	lea    ebx,[ebp-0xa4]
1000333c:	call   0x100027b4
10003341:	mov    ecx,DWORD PTR [ebp-0x9c]
10003347:	mov    BYTE PTR [ebp-0x4],0x8
1000334b:	mov    edx,DWORD PTR [ecx]
1000334d:	lea    ecx,[ebp-0x30]
10003350:	push   ecx
10003351:	push   edx
10003352:	mov    ecx,eax
10003354:	call   0x10034e60
10003359:	lea    esi,[ebp-0x14c]
1000335f:	call   0x100033ac
10003364:	xor    edi,edi
10003366:	xor    esi,esi
10003368:	push   edi
10003369:	inc    esi
1000336a:	push   esi
1000336b:	lea    ecx,[ebp-0x84]
10003371:	call   0x100012f0
10003376:	push   edi
10003377:	push   esi
10003378:	lea    ecx,[ebp-0x68]
1000337b:	call   0x100012f0
10003380:	push   edi
10003381:	push   esi
10003382:	lea    ecx,[ebp-0x4c]
10003385:	call   0x100012f0
1000338a:	or     DWORD PTR [ebp-0x4],0xffffffff
1000338e:	push   edi
1000338f:	push   esi
10003390:	lea    ecx,[ebp-0x30]
10003393:	call   0x100012f0
10003398:	dec    DWORD PTR [ebp-0x90]
1000339e:	jne    0x1000320e
100033a4:	call   0x10059b21
100033a9:	ret    0x4
100033ac:	push   0x0
100033ae:	push   0x1
100033b0:	lea    ecx,[esi+0x54]
100033b3:	call   0x100012f0
100033b8:	push   0x0
100033ba:	push   0x1
100033bc:	lea    ecx,[esi+0x38]
100033bf:	call   0x100012f0
100033c4:	push   0x0
100033c6:	push   0x1
100033c8:	lea    ecx,[esi+0x1c]
100033cb:	call   0x100012f0
100033d0:	push   0x0
100033d2:	push   0x1
100033d4:	mov    ecx,esi
100033d6:	call   0x100012f0
100033db:	ret    
100033dc:	push   0x50
100033de:	mov    eax,0x100630c1
100033e3:	call   0x10059a9e
100033e8:	mov    eax,DWORD PTR [ebp+0x8]
100033eb:	mov    DWORD PTR [ebp-0x34],eax
100033ee:	mov    eax,DWORD PTR [ebx]
100033f0:	push   0x4
100033f2:	pop    edi
100033f3:	mov    DWORD PTR [ebp-0x3c],ebx
100033f6:	mov    DWORD PTR [ebp-0x38],eax
100033f9:	and    DWORD PTR [ebp-0x4],0x0
100033fd:	push   ebx
100033fe:	call   0x100377e0
10003403:	test   eax,eax
10003405:	je     0x10003497
1000340b:	mov    DWORD PTR [ebp-0x30],eax
1000340e:	push   ebx
1000340f:	lea    esi,[ebp-0x2c]
10003412:	call   0x100374a0
10003417:	mov    BYTE PTR [ebp-0x4],0x1
1000341b:	mov    eax,DWORD PTR [ebp-0x18]
1000341e:	push   ebx
1000341f:	lea    esi,[ebp-0x58]
10003422:	lea    edi,[edi+eax*1+0x1]
10003426:	call   0x100374a0
1000342b:	push   0xffffffff
1000342d:	push   0x0
1000342f:	push   eax
10003430:	lea    ecx,[ebp-0x2c]
10003433:	mov    BYTE PTR [ebp-0x4],0x2
10003437:	call   0x10001241
1000343c:	push   0x0
1000343e:	push   0x1
10003440:	mov    ecx,esi
10003442:	mov    BYTE PTR [ebp-0x4],0x1
10003446:	call   0x100012f0
1000344b:	mov    eax,DWORD PTR [ebp-0x18]
1000344e:	push   ebx
1000344f:	lea    esi,[ebp-0x58]
10003452:	lea    edi,[edi+eax*1+0x1]
10003456:	call   0x100374a0
1000345b:	push   0xffffffff
1000345d:	push   0x0
1000345f:	push   eax
10003460:	lea    ecx,[ebp-0x2c]
10003463:	mov    BYTE PTR [ebp-0x4],0x3
10003467:	call   0x10001241
1000346c:	push   0x0
1000346e:	push   0x1
10003470:	mov    ecx,esi
10003472:	call   0x100012f0
10003477:	mov    eax,DWORD PTR [ebp-0x18]
1000347a:	push   0x0
1000347c:	push   0x1
1000347e:	lea    ecx,[ebp-0x2c]
10003481:	lea    edi,[edi+eax*1+0x1]
10003485:	mov    BYTE PTR [ebp-0x4],0x0
10003489:	call   0x100012f0
1000348e:	dec    DWORD PTR [ebp-0x30]
10003491:	jne    0x1000340e
10003497:	or     DWORD PTR [ebp-0x4],0xffffffff
1000349b:	mov    eax,DWORD PTR [ebp-0x38]
1000349e:	push   edi
1000349f:	mov    DWORD PTR [ebx],eax
100034a1:	call   0x10043721
100034a6:	pop    ecx
100034a7:	mov    DWORD PTR [ebp-0x30],eax
100034aa:	push   eax
100034ab:	mov    esi,ebx
100034ad:	mov    DWORD PTR [ebp-0x4],0x4
100034b4:	call   0x100378f0
100034b9:	push   DWORD PTR [ebp-0x30]
100034bc:	mov    eax,DWORD PTR [ebp-0x34]
100034bf:	push   0x1
100034c1:	push   DWORD PTR [eax]
100034c3:	mov    ecx,edi
100034c5:	call   0x100369e0
100034ca:	push   DWORD PTR [ebp-0x30]
100034cd:	call   0x10042e92
100034d2:	pop    ecx
100034d3:	call   0x10059b21
100034d8:	ret    0x4
100034db:	push   0x7c
100034dd:	mov    eax,0x10063d84
100034e2:	call   0x10059a9e
100034e7:	push   ebx
100034e8:	call   0x100377e0
100034ed:	xor    edi,edi
100034ef:	mov    esi,eax
100034f1:	mov    DWORD PTR [ebp-0x54],esi
100034f4:	mov    DWORD PTR [ebp-0x60],edi
100034f7:	mov    DWORD PTR [ebp-0x5c],edi
100034fa:	mov    DWORD PTR [ebp-0x58],edi
100034fd:	lea    ecx,[ebp-0x30]
10003500:	mov    DWORD PTR [ebp-0x4],edi
10003503:	call   0x100183f1
10003508:	cmp    esi,edi
1000350a:	mov    BYTE PTR [ebp-0x4],0x1
1000350e:	jle    0x10003595
10003514:	mov    DWORD PTR [ebp-0x50],esi
10003517:	push   ebx
10003518:	lea    esi,[ebp-0x4c]
1000351b:	call   0x100374a0
10003520:	push   ebx
10003521:	mov    BYTE PTR [ebp-0x4],0x2
10003525:	call   0x100377e0
1000352a:	push   eax
1000352b:	sub    esp,0x1c
1000352e:	mov    eax,esi
10003530:	mov    ecx,esp
10003532:	mov    DWORD PTR [ebp-0x68],esp
10003535:	push   eax
10003536:	call   0x100011a7
1000353b:	lea    ecx,[ebp-0x88]
10003541:	call   0x10002826
10003546:	push   eax
10003547:	lea    esi,[ebp-0x64]
1000354a:	mov    BYTE PTR [ebp-0x4],0x3
1000354e:	call   0x100041c0
10003553:	push   edi
10003554:	push   0x1
10003556:	lea    ecx,[ebp-0x88]
1000355c:	mov    BYTE PTR [ebp-0x4],0x2
10003560:	call   0x100012f0
10003565:	lea    ecx,[ebp-0x30]
10003568:	lea    eax,[ebp-0x4c]
1000356b:	call   0x1000656c
10003570:	test   al,al
10003572:	je     0x10003581
10003574:	push   0x1006cd08
10003579:	lea    ecx,[ebp-0x30]
1000357c:	call   0x100012d3
10003581:	push   edi
10003582:	push   0x1
10003584:	lea    ecx,[ebp-0x4c]
10003587:	mov    BYTE PTR [ebp-0x4],0x1
1000358b:	call   0x100012f0
10003590:	dec    DWORD PTR [ebp-0x50]
10003593:	jne    0x10003517
10003595:	cmp    DWORD PTR [ebp-0x54],edi
10003598:	je     0x100035db
1000359a:	push   0x3e8
1000359f:	push   DWORD PTR ds:0x10080ec8
100035a5:	call   DWORD PTR ds:0x10066084
100035ab:	test   eax,eax
100035ad:	jne    0x100035db
100035af:	call   0x10018644
100035b4:	lea    eax,[ebp-0x64]
100035b7:	mov    ecx,0x10080eb8
100035bc:	call   0x10018b33
100035c1:	movzx  eax,BYTE PTR ds:0x1007f6b0
100035c8:	push   eax
100035c9:	call   0x10018940
100035ce:	pop    ecx
100035cf:	push   DWORD PTR ds:0x10080ec8
100035d5:	call   DWORD PTR ds:0x10066094
100035db:	push   0x1006cd08
100035e0:	lea    esi,[ebp-0x30]
100035e3:	call   0x1000658e
100035e8:	test   al,al
100035ea:	pop    ecx
100035eb:	jne    0x100035f2
100035ed:	call   0x10018370
100035f2:	push   edi
100035f3:	push   0x1
100035f5:	lea    ecx,[ebp-0x30]
100035f8:	call   0x100012f0
100035fd:	lea    esi,[ebp-0x64]
10003600:	call   0x10004743
10003605:	call   0x10059b21
1000360a:	ret    
1000360b:	push   0x30
1000360d:	mov    eax,0x10063074
10003612:	call   0x10059a9e
10003617:	mov    eax,DWORD PTR [ebp+0x8]
1000361a:	mov    DWORD PTR [ebp-0x34],eax
1000361d:	mov    eax,DWORD PTR [ebx]
1000361f:	push   0x4
10003621:	pop    edi
10003622:	mov    DWORD PTR [ebp-0x3c],ebx
10003625:	mov    DWORD PTR [ebp-0x38],eax
10003628:	and    DWORD PTR [ebp-0x4],0x0
1000362c:	push   ebx
1000362d:	call   0x100377e0
10003632:	test   eax,eax
10003634:	je     0x10003659
10003636:	mov    DWORD PTR [ebp-0x30],eax
10003639:	push   ebx
1000363a:	lea    esi,[ebp-0x2c]
1000363d:	call   0x100374a0
10003642:	mov    eax,DWORD PTR [ebp-0x18]
10003645:	push   0x0
10003647:	push   0x1
10003649:	mov    ecx,esi
1000364b:	lea    edi,[edi+eax*1+0x1]
1000364f:	call   0x100012f0
10003654:	dec    DWORD PTR [ebp-0x30]
10003657:	jne    0x10003639
10003659:	or     DWORD PTR [ebp-0x4],0xffffffff
1000365d:	mov    eax,DWORD PTR [ebp-0x38]
10003660:	push   edi
10003661:	mov    DWORD PTR [ebx],eax
10003663:	call   0x10043721
10003668:	pop    ecx
10003669:	mov    DWORD PTR [ebp-0x30],eax
1000366c:	push   eax
1000366d:	mov    esi,ebx
1000366f:	mov    DWORD PTR [ebp-0x4],0x1
10003676:	call   0x100378f0
1000367b:	push   DWORD PTR [ebp-0x30]
1000367e:	mov    eax,DWORD PTR [ebp-0x34]
10003681:	push   0x3
10003683:	push   DWORD PTR [eax]
10003685:	mov    ecx,edi
10003687:	call   0x100369e0
1000368c:	push   DWORD PTR [ebp-0x30]
1000368f:	call   0x10042e92
10003694:	pop    ecx
10003695:	call   0x10059b21
1000369a:	ret    0x4
1000369d:	push   0x58
1000369f:	mov    eax,0x1006303f
100036a4:	call   0x10059a9e
100036a9:	mov    eax,DWORD PTR [ebp+0x8]
100036ac:	mov    edi,ecx
100036ae:	push   edi
100036af:	lea    esi,[ebp-0x2c]
100036b2:	mov    DWORD PTR [ebp-0x34],eax
100036b5:	call   0x100374a0
100036ba:	xor    ebx,ebx
100036bc:	push   edi
100036bd:	mov    DWORD PTR [ebp-0x4],ebx
100036c0:	call   0x100377e0
100036c5:	mov    esi,eax
100036c7:	push   0x34
100036c9:	mov    DWORD PTR [ebp-0x38],esi
100036cc:	call   0x1004349e
100036d1:	pop    ecx
100036d2:	mov    DWORD PTR [ebp-0x30],eax
100036d5:	cmp    eax,ebx
100036d7:	mov    BYTE PTR [ebp-0x4],0x1
100036db:	je     0x100036f9
100036dd:	lea    ecx,[ebp-0x44]
100036e0:	push   ecx
100036e1:	lea    ecx,[ebp-0x2c]
100036e4:	push   ecx
100036e5:	push   eax
100036e6:	mov    DWORD PTR [ebp-0x44],ebx
100036e9:	mov    DWORD PTR [ebp-0x40],ebx
100036ec:	mov    DWORD PTR [ebp-0x3c],esi
100036ef:	call   0x1000286f
100036f4:	mov    DWORD PTR [ebp-0x30],eax
100036f7:	jmp    0x100036fe
100036f9:	mov    DWORD PTR [ebp-0x30],ebx
100036fc:	mov    eax,ebx
100036fe:	mov    DWORD PTR [ebp-0x48],eax
10003701:	mov    BYTE PTR [ebp-0x4],0x2
10003705:	mov    eax,DWORD PTR [eax+0x30]
10003708:	mov    edi,0x1006cd08
1000370d:	push   edi
1000370e:	mov    esi,eax
10003710:	call   0x1000658e
10003715:	test   al,al
10003717:	pop    ecx
10003718:	je     0x1000372d
1000371a:	mov    eax,DWORD PTR [ebp-0x34]
1000371d:	push   DWORD PTR [ebp-0x38]
10003720:	mov    eax,DWORD PTR [eax]
10003722:	push   eax
10003723:	lea    ecx,[ebp-0x2c]
10003726:	call   0x10036290
1000372b:	jmp    0x10003754
1000372d:	push   edi
1000372e:	lea    ecx,[ebp-0x64]
10003731:	call   0x100011cd
10003736:	mov    eax,DWORD PTR [ebp-0x34]
10003739:	mov    BYTE PTR [ebp-0x4],0x3
1000373d:	mov    eax,DWORD PTR [eax]
1000373f:	push   ebx
10003740:	push   eax
10003741:	lea    ecx,[ebp-0x64]
10003744:	call   0x10036290
10003749:	push   ebx
1000374a:	push   0x1
1000374c:	lea    ecx,[ebp-0x64]
1000374f:	call   0x100012f0
10003754:	mov    BYTE PTR [ebp-0x4],bl
10003757:	push   DWORD PTR [ebp-0x30]
1000375a:	call   0x10039f30
1000375f:	push   DWORD PTR [ebp-0x30]
10003762:	call   0x10042e92
10003767:	pop    ecx
10003768:	push   ebx
10003769:	push   0x1
1000376b:	lea    ecx,[ebp-0x2c]
1000376e:	call   0x100012f0
10003773:	call   0x10059b21
10003778:	ret    0x4
1000377b:	push   0x18
1000377d:	mov    eax,0x100606fc
10003782:	call   0x10059a35
10003787:	mov    eax,ds:0x10080a74
1000378c:	mov    ebx,0x10080a74
10003791:	mov    ecx,ebx
10003793:	call   DWORD PTR [eax+0xc]
10003796:	add    eax,0x10
10003799:	mov    DWORD PTR [ebp-0x10],eax
1000379c:	and    DWORD PTR [ebp-0x4],0x0
100037a0:	mov    edi,0x104
100037a5:	push   edi
100037a6:	lea    esi,[ebp-0x10]
100037a9:	call   0x100021b6
100037ae:	push   eax
100037af:	push   edi
100037b0:	call   DWORD PTR ds:0x100660c8
100037b6:	test   eax,eax
100037b8:	je     0x100038e7
100037be:	cmp    eax,edi
100037c0:	ja     0x100038e7
100037c6:	cmp    DWORD PTR [ebp-0x10],0x0
100037ca:	jne    0x100037d0
100037cc:	xor    eax,eax
100037ce:	jmp    0x100037d9
100037d0:	push   DWORD PTR [ebp-0x10]
100037d3:	call   0x100436f3
100037d8:	pop    ecx
100037d9:	lea    edx,[ebp-0x10]
100037dc:	call   0x10002241
100037e1:	mov    eax,ds:0x10080a74
100037e6:	mov    ecx,ebx
100037e8:	call   DWORD PTR [eax+0xc]
100037eb:	add    eax,0x10
100037ee:	mov    DWORD PTR [ebp-0x14],eax
100037f1:	push   edi
100037f2:	lea    esi,[ebp-0x14]
100037f5:	mov    BYTE PTR [ebp-0x4],0x1
100037f9:	call   0x100021b6
100037fe:	mov    esi,DWORD PTR [ebp-0x10]
10003801:	push   eax
10003802:	xor    ebx,ebx
10003804:	push   ebx
10003805:	push   0x1006ced4
1000380a:	push   esi
1000380b:	call   DWORD PTR ds:0x1006609c
10003811:	test   eax,eax
10003813:	jne    0x10003828
10003815:	mov    eax,DWORD PTR [ebp-0x14]
10003818:	add    eax,0xfffffff0
1000381b:	call   0x10002081
10003820:	lea    eax,[esi-0x10]
10003823:	jmp    0x100038ed
10003828:	mov    esi,DWORD PTR [ebp-0x14]
1000382b:	cmp    esi,ebx
1000382d:	jne    0x10003833
1000382f:	xor    eax,eax
10003831:	jmp    0x1000383a
10003833:	push   esi
10003834:	call   0x100436f3
10003839:	pop    ecx
1000383a:	lea    edx,[ebp-0x14]
1000383d:	call   0x10002241
10003842:	push   esi
10003843:	call   DWORD PTR ds:0x100660d0
10003849:	push   ebx
1000384a:	push   esi
1000384b:	call   DWORD PTR ds:0x100660b0
10003851:	push   0x1006ced8
10003856:	lea    edi,[ebp-0x1c]
10003859:	call   0x10002467
1000385e:	mov    eax,edi
10003860:	push   eax
10003861:	lea    eax,[ebp-0x20]
10003864:	push   esi
10003865:	push   eax
10003866:	mov    BYTE PTR [ebp-0x4],0x2
1000386a:	call   0x10002563
1000386f:	add    esp,0xc
10003872:	mov    BYTE PTR [ebp-0x4],0x3
10003876:	mov    eax,DWORD PTR [eax]
10003878:	cmp    eax,ebx
1000387a:	je     0x10003880
1000387c:	mov    eax,DWORD PTR [eax]
1000387e:	jmp    0x10003882
10003880:	xor    eax,eax
10003882:	mov    ecx,DWORD PTR [ebp+0x10]
10003885:	push   eax
10003886:	lea    eax,[ebp-0x18]
10003889:	push   eax
1000388a:	call   0x100040ec
1000388f:	pop    ecx
10003890:	pop    ecx
10003891:	lea    edi,[ebp-0x20]
10003894:	call   0x100025c2
10003899:	lea    edi,[ebp-0x1c]
1000389c:	call   0x100025c2
100038a1:	push   ebx
100038a2:	push   0x80
100038a7:	push   0x2
100038a9:	push   ebx
100038aa:	push   ebx
100038ab:	push   0x40000000
100038b0:	push   DWORD PTR [ebp-0x18]
100038b3:	call   DWORD PTR ds:0x100660c0
100038b9:	mov    edi,eax
100038bb:	mov    DWORD PTR [ebp-0x1c],edi
100038be:	cmp    edi,0xffffffff
100038c1:	mov    BYTE PTR [ebp-0x4],0x7
100038c5:	jne    0x100038fa
100038c7:	call   DWORD PTR ds:0x100660cc
100038cd:	push   edi
100038ce:	call   DWORD PTR ds:0x10066070
100038d4:	mov    eax,DWORD PTR [ebp-0x18]
100038d7:	add    eax,0xfffffff0
100038da:	call   0x10002081
100038df:	lea    eax,[esi-0x10]
100038e2:	call   0x10002081
100038e7:	mov    eax,DWORD PTR [ebp-0x10]
100038ea:	add    eax,0xfffffff0
100038ed:	call   0x10002081
100038f2:	xor    al,al
100038f4:	call   0x10059b0d
100038f9:	ret    
100038fa:	push   ebx
100038fb:	lea    eax,[ebp-0x24]
100038fe:	push   eax
100038ff:	push   DWORD PTR [ebp+0xc]
10003902:	push   DWORD PTR [ebp+0x8]
10003905:	push   edi
10003906:	call   DWORD PTR ds:0x100660b4
1000390c:	test   eax,eax
1000390e:	jne    0x10003917
10003910:	cmp    edi,ebx
10003912:	je     0x100038d4
10003914:	push   edi
10003915:	jmp    0x100038ce
10003917:	mov    edi,DWORD PTR [ebp+0x18]
1000391a:	lea    eax,[ebp-0x18]
1000391d:	call   0x100040ab
10003922:	mov    edi,DWORD PTR [ebp+0x14]
10003925:	lea    eax,[ebp-0x14]
10003928:	call   0x100040ab
1000392d:	cmp    DWORD PTR [ebp-0x1c],ebx
10003930:	je     0x1000393b
10003932:	push   DWORD PTR [ebp-0x1c]
10003935:	call   DWORD PTR ds:0x10066070
1000393b:	mov    eax,DWORD PTR [ebp-0x18]
1000393e:	add    eax,0xfffffff0
10003941:	call   0x10002081
10003946:	lea    eax,[esi-0x10]
10003949:	call   0x10002081
1000394e:	mov    eax,DWORD PTR [ebp-0x10]
10003951:	add    eax,0xfffffff0
10003954:	call   0x10002081
10003959:	mov    al,0x1
1000395b:	jmp    0x100038f4
1000395d:	push   0x24
1000395f:	mov    eax,0x10063737
10003964:	call   0x10059ad4
10003969:	and    DWORD PTR [ebp-0x4],0x0
1000396d:	mov    esi,ecx
1000396f:	push   esi
10003970:	call   0x100377e0
10003975:	lea    edi,[ebp-0x30]
10003978:	mov    ebx,eax
1000397a:	call   0x100375d0
1000397f:	mov    eax,ebx
10003981:	dec    eax
10003982:	mov    BYTE PTR [ebp-0x4],0x1
10003986:	je     0x100039bc
10003988:	dec    eax
10003989:	je     0x100039a5
1000398b:	dec    eax
1000398c:	jne    0x100039d3
1000398e:	cmp    DWORD PTR [ebp-0x18],0x10
10003992:	mov    eax,DWORD PTR [ebp-0x2c]
10003995:	jae    0x1000399a
10003997:	lea    eax,[ebp-0x2c]
1000399a:	push   DWORD PTR [ebp-0x1c]
1000399d:	push   eax
1000399e:	call   0x10003e22
100039a3:	jmp    0x100039d1
100039a5:	cmp    DWORD PTR [ebp-0x18],0x10
100039a9:	mov    eax,DWORD PTR [ebp-0x2c]
100039ac:	jae    0x100039b1
100039ae:	lea    eax,[ebp-0x2c]
100039b1:	push   DWORD PTR [ebp-0x1c]
100039b4:	push   eax
100039b5:	call   0x10003c03
100039ba:	jmp    0x100039d1
100039bc:	cmp    DWORD PTR [ebp-0x18],0x10
100039c0:	mov    eax,DWORD PTR [ebp-0x2c]
100039c3:	jae    0x100039c8
100039c5:	lea    eax,[ebp-0x2c]
100039c8:	push   DWORD PTR [ebp-0x1c]
100039cb:	push   eax
100039cc:	call   0x10003a77
100039d1:	pop    ecx
100039d2:	pop    ecx
100039d3:	push   0x0
100039d5:	push   0x1
100039d7:	lea    ecx,[ebp-0x30]
100039da:	call   0x100012f0
100039df:	call   0x10059b30
100039e4:	ret    
100039e5:	mov    eax,0x100039df
100039ea:	ret    
100039eb:	push   0x2c
100039ed:	mov    eax,0x10064843
100039f2:	call   0x10059a35
100039f7:	call   0x10002080
100039fc:	xor    ebx,ebx
100039fe:	mov    DWORD PTR [ebp-0x14],ebx
10003a01:	mov    DWORD PTR [ebp-0x10],ebx
10003a04:	lea    ecx,[ebp-0x38]
10003a07:	mov    DWORD PTR [ebp-0x4],ebx
10003a0a:	call   0x100183f1
10003a0f:	push   0xffffffff
10003a11:	lea    ecx,[ebp-0x14]
10003a14:	push   ecx
10003a15:	push   DWORD PTR [ebp+0x8]
10003a18:	lea    esi,[ebp-0x18]
10003a1b:	push   eax
10003a1c:	mov    BYTE PTR [ebp-0x4],0x1
10003a20:	call   0x10030e20
10003a25:	add    esp,0x10
10003a28:	push   eax
10003a29:	lea    edi,[ebp-0x10]
10003a2c:	call   0x10002099
10003a31:	push   DWORD PTR [ebp-0x18]
10003a34:	call   0x10042e92
10003a39:	pop    ecx
10003a3a:	push   ebx
10003a3b:	push   0x1
10003a3d:	lea    ecx,[ebp-0x38]
10003a40:	mov    BYTE PTR [ebp-0x4],bl
10003a43:	call   0x100012f0
10003a48:	cmp    DWORD PTR [ebp-0x10],ebx
10003a4b:	jne    0x10003a5b
10003a4d:	call   0x10018370
10003a52:	push   ebx
10003a53:	call   0x10042e92
10003a58:	pop    ecx
10003a59:	jmp    0x10003a71
10003a5b:	push   DWORD PTR [ebp-0x14]
10003a5e:	push   DWORD PTR [ebp-0x10]
10003a61:	call   0x10003a77
10003a66:	push   DWORD PTR [ebp-0x10]
10003a69:	call   0x10042e92
10003a6e:	add    esp,0xc
10003a71:	call   0x10059b0d
10003a76:	ret    
10003a77:	push   0xc
10003a79:	mov    eax,0x10063002
10003a7e:	call   0x10059a35
10003a83:	mov    eax,ds:0x10080a74
10003a88:	mov    edi,0x10080a74
10003a8d:	mov    ecx,edi
10003a8f:	call   DWORD PTR [eax+0xc]
10003a92:	add    eax,0x10
10003a95:	mov    DWORD PTR [ebp-0x18],eax
10003a98:	xor    esi,esi
10003a9a:	mov    DWORD PTR [ebp-0x4],esi
10003a9d:	mov    eax,ds:0x10080a74
10003aa2:	mov    ecx,edi
10003aa4:	call   DWORD PTR [eax+0xc]
10003aa7:	add    eax,0x10
10003aaa:	mov    DWORD PTR [ebp-0x14],eax
10003aad:	push   0x5f8f3af8
10003ab2:	push   0x1006cedc
10003ab7:	mov    BYTE PTR [ebp-0x4],0x1
10003abb:	call   0x10004246
10003ac0:	push   eax
10003ac1:	push   0x9
10003ac3:	push   0x1006cf18
10003ac8:	call   0x10004417
10003acd:	add    esp,0x14
10003ad0:	push   eax
10003ad1:	lea    eax,[ebp-0x10]
10003ad4:	push   eax
10003ad5:	call   0x10002361
10003ada:	lea    eax,[ebp-0x14]
10003add:	push   eax
10003ade:	lea    eax,[ebp-0x18]
10003ae1:	push   eax
10003ae2:	lea    eax,[ebp-0x10]
10003ae5:	push   eax
10003ae6:	push   DWORD PTR [ebp+0xc]
10003ae9:	mov    BYTE PTR [ebp-0x4],0x2
10003aed:	push   DWORD PTR [ebp+0x8]
10003af0:	call   0x1000377b
10003af5:	mov    bl,al
10003af7:	add    esp,0x14
10003afa:	neg    bl
10003afc:	mov    BYTE PTR [ebp-0x4],0x1
10003b00:	mov    eax,DWORD PTR [ebp-0x10]
10003b03:	sbb    bl,bl
10003b05:	add    eax,0xfffffff0
10003b08:	inc    bl
10003b0a:	call   0x10002081
10003b0f:	test   bl,bl
10003b11:	je     0x10003b18
10003b13:	call   0x10002080
10003b18:	call   0x10003f86
10003b1d:	call   0x10002080
10003b22:	push   0x1
10003b24:	lea    eax,[ebp-0x10]
10003b27:	push   eax
10003b28:	call   0x100349f0
10003b2d:	mov    BYTE PTR [ebp-0x4],0x3
10003b31:	call   DWORD PTR ds:0x1007efec
10003b37:	mov    edi,DWORD PTR [ebp-0x14]
10003b3a:	lea    eax,[ebp-0x10]
10003b3d:	push   eax
10003b3e:	call   0x10037080
10003b43:	push   DWORD PTR [ebp-0x10]
10003b46:	call   DWORD PTR ds:0x10066070
10003b4c:	mov    ebx,DWORD PTR ds:0x100660a8
10003b52:	push   0x4
10003b54:	push   esi
10003b55:	push   edi
10003b56:	call   ebx
10003b58:	push   0x4
10003b5a:	push   esi
10003b5b:	mov    esi,DWORD PTR [ebp-0x18]
10003b5e:	push   esi
10003b5f:	call   ebx
10003b61:	lea    eax,[edi-0x10]
10003b64:	call   0x10002081
10003b69:	lea    eax,[esi-0x10]
10003b6c:	call   0x10002081
10003b71:	call   0x10059b0d
10003b76:	ret    
10003b77:	push   0x2c
10003b79:	mov    eax,0x10064843
10003b7e:	call   0x10059a35
10003b83:	call   0x10002080
10003b88:	xor    ebx,ebx
10003b8a:	mov    DWORD PTR [ebp-0x14],ebx
10003b8d:	mov    DWORD PTR [ebp-0x10],ebx
10003b90:	lea    ecx,[ebp-0x38]
10003b93:	mov    DWORD PTR [ebp-0x4],ebx
10003b96:	call   0x100183f1
10003b9b:	push   0xffffffff
10003b9d:	lea    ecx,[ebp-0x14]
10003ba0:	push   ecx
10003ba1:	push   DWORD PTR [ebp+0x8]
10003ba4:	lea    esi,[ebp-0x18]
10003ba7:	push   eax
10003ba8:	mov    BYTE PTR [ebp-0x4],0x1
10003bac:	call   0x10030e20
10003bb1:	add    esp,0x10
10003bb4:	push   eax
10003bb5:	lea    edi,[ebp-0x10]
10003bb8:	call   0x10002099
10003bbd:	push   DWORD PTR [ebp-0x18]
10003bc0:	call   0x10042e92
10003bc5:	pop    ecx
10003bc6:	push   ebx
10003bc7:	push   0x1
10003bc9:	lea    ecx,[ebp-0x38]
10003bcc:	mov    BYTE PTR [ebp-0x4],bl
10003bcf:	call   0x100012f0
10003bd4:	cmp    DWORD PTR [ebp-0x10],ebx
10003bd7:	jne    0x10003be7
10003bd9:	call   0x10018370
10003bde:	push   ebx
10003bdf:	call   0x10042e92
10003be4:	pop    ecx
10003be5:	jmp    0x10003bfd
10003be7:	push   DWORD PTR [ebp-0x14]
10003bea:	push   DWORD PTR [ebp-0x10]
10003bed:	call   0x10003c03
10003bf2:	push   DWORD PTR [ebp-0x10]
10003bf5:	call   0x10042e92
10003bfa:	add    esp,0xc
10003bfd:	call   0x10059b0d
10003c02:	ret    
10003c03:	push   ebp
10003c04:	mov    ebp,esp
10003c06:	and    esp,0xfffffff8
10003c09:	push   0xffffffff
10003c0b:	push   0x10062fc7
10003c10:	mov    eax,fs:0x0
10003c16:	push   eax
10003c17:	sub    esp,0x70
10003c1a:	push   ebx
10003c1b:	push   esi
10003c1c:	push   edi
10003c1d:	mov    eax,ds:0x1007e030
10003c22:	xor    eax,esp
10003c24:	push   eax
10003c25:	lea    eax,[esp+0x80]
10003c2c:	mov    fs:0x0,eax
10003c32:	push   0x1006cf2c
10003c37:	push   0xc
10003c39:	push   0x1006cf64
10003c3e:	call   0x10004417
10003c43:	add    esp,0xc
10003c46:	push   eax
10003c47:	lea    eax,[esp+0x18]
10003c4b:	push   eax
10003c4c:	call   0x10002361
10003c51:	xor    ebx,ebx
10003c53:	mov    DWORD PTR [esp+0x88],ebx
10003c5a:	mov    eax,ds:0x10080a74
10003c5f:	mov    esi,0x10080a74
10003c64:	mov    ecx,esi
10003c66:	call   DWORD PTR [eax+0xc]
10003c69:	add    eax,0x10
10003c6c:	mov    DWORD PTR [esp+0x20],eax
10003c70:	mov    BYTE PTR [esp+0x88],0x1
10003c78:	mov    eax,ds:0x10080a74
10003c7d:	mov    ecx,esi
10003c7f:	call   DWORD PTR [eax+0xc]
10003c82:	add    eax,0x10
10003c85:	mov    DWORD PTR [esp+0x1c],eax
10003c89:	lea    eax,[esp+0x1c]
10003c8d:	push   eax
10003c8e:	lea    eax,[esp+0x24]
10003c92:	push   eax
10003c93:	lea    eax,[esp+0x1c]
10003c97:	push   eax
10003c98:	push   DWORD PTR [ebp+0xc]
10003c9b:	mov    BYTE PTR [esp+0x98],0x2
10003ca3:	push   DWORD PTR [ebp+0x8]
10003ca6:	call   0x1000377b
10003cab:	add    esp,0x14
10003cae:	test   al,al
10003cb0:	jne    0x10003cb7
10003cb2:	call   0x10002080
10003cb7:	call   0x10003f86
10003cbc:	call   0x10002080
10003cc1:	push   0x1
10003cc3:	lea    eax,[esp+0x1c]
10003cc7:	push   eax
10003cc8:	call   0x100349f0
10003ccd:	mov    BYTE PTR [esp+0x88],0x3
10003cd5:	mov    ecx,DWORD PTR [esp+0x14]
10003cd9:	lea    edx,[esp+0x18]
10003cdd:	call   0x10036e30
10003ce2:	push   DWORD PTR [esp+0x18]
10003ce6:	mov    esi,DWORD PTR ds:0x10066070
10003cec:	call   esi
10003cee:	push   0x40
10003cf0:	lea    eax,[esp+0x3c]
10003cf4:	push   ebx
10003cf5:	push   eax
10003cf6:	call   0x10045c00
10003cfb:	xor    eax,eax
10003cfd:	mov    DWORD PTR [esp+0x30],ebx
10003d01:	lea    edi,[esp+0x34]
10003d05:	stos   DWORD PTR es:[edi],eax
10003d06:	add    esp,0xc
10003d09:	stos   DWORD PTR es:[edi],eax
10003d0a:	stos   DWORD PTR es:[edi],eax
10003d0b:	mov    edi,DWORD PTR [esp+0x1c]
10003d0f:	lea    eax,[esp+0x24]
10003d13:	push   eax
10003d14:	lea    eax,[esp+0x38]
10003d18:	push   eax
10003d19:	push   ebx
10003d1a:	push   ebx
10003d1b:	push   ebx
10003d1c:	push   ebx
10003d1d:	push   ebx
10003d1e:	push   ebx
10003d1f:	push   ebx
10003d20:	push   edi
10003d21:	mov    DWORD PTR [esp+0x5c],0x44
10003d29:	call   DWORD PTR ds:0x100660a0
10003d2f:	test   eax,eax
10003d31:	je     0x10003d41
10003d33:	push   DWORD PTR [esp+0x28]
10003d37:	call   esi
10003d39:	push   DWORD PTR [esp+0x24]
10003d3d:	call   esi
10003d3f:	jmp    0x10003d4e
10003d41:	call   DWORD PTR ds:0x100660cc
10003d47:	push   eax
10003d48:	call   0x10002080
10003d4d:	pop    ecx
10003d4e:	mov    esi,DWORD PTR ds:0x100660a8
10003d54:	push   0x4
10003d56:	push   ebx
10003d57:	push   edi
10003d58:	call   esi
10003d5a:	push   0x4
10003d5c:	push   ebx
10003d5d:	mov    ebx,DWORD PTR [esp+0x28]
10003d61:	push   ebx
10003d62:	call   esi
10003d64:	lea    eax,[edi-0x10]
10003d67:	call   0x10002081
10003d6c:	lea    eax,[ebx-0x10]
10003d6f:	call   0x10002081
10003d74:	mov    eax,DWORD PTR [esp+0x14]
10003d78:	add    eax,0xfffffff0
10003d7b:	call   0x10002081
10003d80:	mov    ecx,DWORD PTR [esp+0x80]
10003d87:	mov    DWORD PTR fs:0x0,ecx
10003d8e:	pop    ecx
10003d8f:	pop    edi
10003d90:	pop    esi
10003d91:	pop    ebx
10003d92:	mov    esp,ebp
10003d94:	pop    ebp
10003d95:	ret    
10003d96:	push   0x2c
10003d98:	mov    eax,0x10064843
10003d9d:	call   0x10059a35
10003da2:	call   0x10002080
10003da7:	xor    ebx,ebx
10003da9:	mov    DWORD PTR [ebp-0x14],ebx
10003dac:	mov    DWORD PTR [ebp-0x10],ebx
10003daf:	lea    ecx,[ebp-0x38]
10003db2:	mov    DWORD PTR [ebp-0x4],ebx
10003db5:	call   0x100183f1
10003dba:	push   0xffffffff
10003dbc:	lea    ecx,[ebp-0x14]
10003dbf:	push   ecx
10003dc0:	push   DWORD PTR [ebp+0x8]
10003dc3:	lea    esi,[ebp-0x18]
10003dc6:	push   eax
10003dc7:	mov    BYTE PTR [ebp-0x4],0x1
10003dcb:	call   0x10030e20
10003dd0:	add    esp,0x10
10003dd3:	push   eax
10003dd4:	lea    edi,[ebp-0x10]
10003dd7:	call   0x10002099
10003ddc:	push   DWORD PTR [ebp-0x18]
10003ddf:	call   0x10042e92
10003de4:	pop    ecx
10003de5:	push   ebx
10003de6:	push   0x1
10003de8:	lea    ecx,[ebp-0x38]
10003deb:	mov    BYTE PTR [ebp-0x4],bl
10003dee:	call   0x100012f0
10003df3:	cmp    DWORD PTR [ebp-0x10],ebx
10003df6:	jne    0x10003e06
10003df8:	call   0x10018370
10003dfd:	push   ebx
10003dfe:	call   0x10042e92
10003e03:	pop    ecx
10003e04:	jmp    0x10003e1c
10003e06:	push   DWORD PTR [ebp-0x14]
10003e09:	push   DWORD PTR [ebp-0x10]
10003e0c:	call   0x10003e22
10003e11:	push   DWORD PTR [ebp-0x10]
10003e14:	call   0x10042e92
10003e19:	add    esp,0xc
10003e1c:	call   0x10059b0d
10003e21:	ret    
10003e22:	push   ebp
10003e23:	mov    ebp,esp
10003e25:	and    esp,0xfffffff8
10003e28:	push   0xffffffff
10003e2a:	push   0x10062f8c
10003e2f:	mov    eax,fs:0x0
10003e35:	push   eax
10003e36:	sub    esp,0x10
10003e39:	push   ebx
10003e3a:	push   esi
10003e3b:	push   edi
10003e3c:	mov    eax,ds:0x1007e030
10003e41:	xor    eax,esp
10003e43:	push   eax
10003e44:	lea    eax,[esp+0x20]
10003e48:	mov    fs:0x0,eax
10003e4e:	mov    eax,ds:0x10080a74
10003e53:	mov    esi,0x10080a74
10003e58:	mov    ecx,esi
10003e5a:	call   DWORD PTR [eax+0xc]
10003e5d:	add    eax,0x10
10003e60:	mov    DWORD PTR [esp+0x18],eax
10003e64:	xor    edi,edi
10003e66:	mov    DWORD PTR [esp+0x28],edi
10003e6a:	mov    eax,ds:0x10080a74
10003e6f:	mov    ecx,esi
10003e71:	call   DWORD PTR [eax+0xc]
10003e74:	add    eax,0x10
10003e77:	mov    DWORD PTR [esp+0x14],eax
10003e7b:	push   0x6db6e22
10003e80:	push   0x1006cf80
10003e85:	mov    BYTE PTR [esp+0x30],0x1
10003e8a:	call   0x10004246
10003e8f:	push   0x4d5c176e
10003e94:	push   eax
10003e95:	call   0x10004246
10003e9a:	push   0x6b81d35e
10003e9f:	push   eax
10003ea0:	call   0x10004246
10003ea5:	push   eax
10003ea6:	push   0x8
10003ea8:	push   0x1006cfbc
10003ead:	call   0x10004417
10003eb2:	add    esp,0x24
10003eb5:	push   eax
10003eb6:	lea    eax,[esp+0x14]
10003eba:	push   eax
10003ebb:	call   0x10002361
10003ec0:	lea    eax,[esp+0x14]
10003ec4:	push   eax
10003ec5:	lea    eax,[esp+0x1c]
10003ec9:	push   eax
10003eca:	lea    eax,[esp+0x18]
10003ece:	push   eax
10003ecf:	push   DWORD PTR [ebp+0xc]
10003ed2:	mov    BYTE PTR [esp+0x38],0x2
10003ed7:	push   DWORD PTR [ebp+0x8]
10003eda:	call   0x1000377b
10003edf:	mov    bl,al
10003ee1:	add    esp,0x14
10003ee4:	neg    bl
10003ee6:	mov    BYTE PTR [esp+0x28],0x1
10003eeb:	mov    eax,DWORD PTR [esp+0x10]
10003eef:	sbb    bl,bl
10003ef1:	add    eax,0xfffffff0
10003ef4:	inc    bl
10003ef6:	call   0x10002081
10003efb:	test   bl,bl
10003efd:	je     0x10003f04
10003eff:	call   0x10002080
10003f04:	call   0x10003f86
10003f09:	call   0x10002080
10003f0e:	push   0x1
10003f10:	lea    eax,[esp+0x14]
10003f14:	push   eax
10003f15:	call   0x100349f0
10003f1a:	push   0x1006cfd0
10003f1f:	push   0xb
10003f21:	push   0x1006cffc
10003f26:	mov    BYTE PTR [esp+0x34],0x3
10003f2b:	call   0x10004417
10003f30:	mov    ebx,DWORD PTR [esp+0x20]
10003f34:	add    esp,0xc
10003f37:	push   eax
10003f38:	push   ebx
10003f39:	lea    eax,[esp+0x18]
10003f3d:	push   eax
10003f3e:	call   0x10037100
10003f43:	push   DWORD PTR [esp+0x10]
10003f47:	call   DWORD PTR ds:0x10066070
10003f4d:	mov    esi,DWORD PTR ds:0x100660a8
10003f53:	push   0x4
10003f55:	push   edi
10003f56:	push   ebx
10003f57:	call   esi
10003f59:	push   0x4
10003f5b:	push   edi
10003f5c:	mov    edi,DWORD PTR [esp+0x20]
10003f60:	push   edi
10003f61:	call   esi
10003f63:	lea    eax,[ebx-0x10]
10003f66:	call   0x10002081
10003f6b:	lea    eax,[edi-0x10]
10003f6e:	call   0x10002081
10003f73:	mov    ecx,DWORD PTR [esp+0x20]
10003f77:	mov    DWORD PTR fs:0x0,ecx
10003f7e:	pop    ecx
10003f7f:	pop    edi
10003f80:	pop    esi
10003f81:	pop    ebx
10003f82:	mov    esp,ebp
10003f84:	pop    ebp
10003f85:	ret    
10003f86:	push   ebp
10003f87:	mov    ebp,esp
10003f89:	and    esp,0xfffffff8
10003f8c:	push   0xffffffff
10003f8e:	push   0x1006243a
10003f93:	mov    eax,fs:0x0
10003f99:	push   eax
10003f9a:	sub    esp,0x14
10003f9d:	mov    eax,ds:0x1007e030
10003fa2:	xor    eax,esp
10003fa4:	push   eax
10003fa5:	lea    eax,[esp+0x18]
10003fa9:	mov    fs:0x0,eax
10003faf:	push   0x1
10003fb1:	lea    eax,[esp+0xc]
10003fb5:	push   eax
10003fb6:	call   0x100349f0
10003fbb:	and    DWORD PTR [esp+0x20],0x0
10003fc0:	call   0x1002fa00
10003fc5:	add    eax,0x78c6c000
10003fca:	mov    DWORD PTR [esp+0xc],eax
10003fce:	lea    eax,[esp+0xc]
10003fd2:	push   eax
10003fd3:	lea    eax,[esp+0xc]
10003fd7:	push   eax
10003fd8:	push   0x4
10003fda:	adc    edx,0x11ed1
10003fe0:	pop    ecx
10003fe1:	mov    DWORD PTR [esp+0x18],edx
10003fe5:	call   0x10035bf0
10003fea:	push   DWORD PTR [esp+0x8]
10003fee:	call   DWORD PTR ds:0x10066070
10003ff4:	mov    ecx,DWORD PTR [esp+0x18]
10003ff8:	mov    DWORD PTR fs:0x0,ecx
10003fff:	pop    ecx
10004000:	mov    esp,ebp
10004002:	pop    ebp
10004003:	ret    
10004004:	push   0xc
10004006:	mov    eax,0x10064cc9
1000400b:	call   0x10059a68
10004010:	xor    ebx,ebx
10004012:	lea    eax,[ebp-0x14]
10004015:	push   ebx
10004016:	push   eax
10004017:	mov    DWORD PTR [ebp-0x4],ebx
1000401a:	call   0x100028aa
1000401f:	pop    ecx
10004020:	pop    ecx
10004021:	mov    ecx,DWORD PTR [eax]
10004023:	mov    esi,ecx
10004025:	mov    DWORD PTR [eax],ebx
10004027:	mov    DWORD PTR [ebp-0x18],esi
1000402a:	lea    eax,[ebp-0x14]
1000402d:	mov    BYTE PTR [ebp-0x4],0x1
10004031:	call   0x1000421f
10004036:	push   esi
10004037:	call   0x10002928
1000403c:	cmp    al,bl
1000403e:	jne    0x10004045
10004040:	call   0x10002973
10004045:	lea    eax,[ebp-0x18]
10004048:	call   0x1000421f
1000404d:	call   0x10059b0d
10004052:	ret    
10004053:	mov    eax,0x1000404d
10004058:	ret    
10004059:	push   0x0
1000405b:	mov    ecx,esi
1000405d:	mov    DWORD PTR [esi+0x18],0xf
10004064:	call   0x1000141c
10004069:	mov    eax,esi
1000406b:	ret    
1000406c:	push   0x0
1000406e:	mov    ecx,esi
10004070:	mov    DWORD PTR [esi+0x18],0xf
10004077:	call   0x1000141c
1000407c:	push   DWORD PTR [esp+0x8]
10004080:	mov    ecx,esi
10004082:	push   DWORD PTR [esp+0x8]
10004086:	call   0x1000133b
1000408b:	mov    eax,esi
1000408d:	ret    0x8
10004090:	push   DWORD PTR [esp+0x8]
10004094:	call   0x10043010
10004099:	pop    ecx
1000409a:	push   eax
1000409b:	push   DWORD PTR [esp+0xc]
1000409f:	mov    eax,DWORD PTR [esp+0xc]
100040a3:	call   0x10004d24
100040a8:	ret    0x8
100040ab:	mov    ecx,DWORD PTR [eax]
100040ad:	push   esi
100040ae:	mov    esi,DWORD PTR [edi]
100040b0:	lea    eax,[ecx-0x10]
100040b3:	sub    esi,0x10
100040b6:	cmp    eax,esi
100040b8:	je     0x100040e8
100040ba:	cmp    DWORD PTR [esi+0xc],0x0
100040be:	push   ebx
100040bf:	jl     0x100040dc
100040c1:	mov    edx,DWORD PTR [eax]
100040c3:	cmp    edx,DWORD PTR [esi]
100040c5:	jne    0x100040dc
100040c7:	call   0x10004dbe
100040cc:	mov    ebx,eax
100040ce:	mov    eax,esi
100040d0:	call   0x10002081
100040d5:	add    ebx,0x10
100040d8:	mov    DWORD PTR [edi],ebx
100040da:	jmp    0x100040e7
100040dc:	mov    ebx,DWORD PTR [ecx-0xc]
100040df:	push   ecx
100040e0:	mov    eax,edi
100040e2:	call   0x100023c7
100040e7:	pop    ebx
100040e8:	mov    eax,edi
100040ea:	pop    esi
100040eb:	ret    
100040ec:	push   0xc
100040ee:	mov    eax,0x1005fd52
100040f3:	call   0x10059a35
100040f8:	mov    ebx,ecx
100040fa:	xor    edi,edi
100040fc:	mov    DWORD PTR [ebp-0x4],edi
100040ff:	mov    eax,ebx
10004101:	mov    DWORD PTR [ebp-0x10],edi
10004104:	call   0x1000468d
10004109:	mov    esi,DWORD PTR [ebp+0x8]
1000410c:	mov    ecx,eax
1000410e:	call   0x10002151
10004113:	cmp    DWORD PTR [ebp+0xc],edi
10004116:	mov    DWORD PTR [ebp-0x4],edi
10004119:	mov    eax,DWORD PTR [ebx]
1000411b:	mov    ebx,DWORD PTR [eax-0xc]
1000411e:	mov    DWORD PTR [ebp-0x10],0x1
10004125:	mov    DWORD PTR [ebp-0x14],eax
10004128:	je     0x10004135
1000412a:	push   DWORD PTR [ebp+0xc]
1000412d:	call   0x100436f3
10004132:	pop    ecx
10004133:	mov    edi,eax
10004135:	mov    esi,DWORD PTR [ebp+0x8]
10004138:	lea    eax,[edi+ebx*1]
1000413b:	push   eax
1000413c:	mov    DWORD PTR [ebp-0x18],eax
1000413f:	call   0x100021b6
10004144:	push   DWORD PTR [ebp+0xc]
10004147:	mov    esi,eax
10004149:	push   edi
1000414a:	push   esi
1000414b:	mov    eax,edi
1000414d:	call   0x1000233b
10004152:	push   DWORD PTR [ebp-0x14]
10004155:	lea    eax,[esi+edi*2]
10004158:	push   ebx
10004159:	push   eax
1000415a:	mov    eax,ebx
1000415c:	call   0x1000233b
10004161:	mov    eax,DWORD PTR [ebp-0x18]
10004164:	mov    edx,DWORD PTR [ebp+0x8]
10004167:	add    esp,0x18
1000416a:	call   0x10002241
1000416f:	mov    eax,DWORD PTR [ebp+0x8]
10004172:	call   0x10059b0d
10004177:	ret    
10004178:	mov    eax,DWORD PTR [esi]
1000417a:	sub    eax,0x10
1000417d:	cmp    DWORD PTR [eax+0xc],0x1
10004181:	jle    0x1000418c
10004183:	push   DWORD PTR [eax+0x4]
10004186:	push   esi
10004187:	call   0x100022ab
1000418c:	mov    eax,DWORD PTR [esi]
1000418e:	ret    
1000418f:	mov    eax,DWORD PTR [esi]
10004191:	test   eax,eax
10004193:	je     0x1000419c
10004195:	push   eax
10004196:	call   0x100436f3
1000419b:	pop    ecx
1000419c:	mov    edx,esi
1000419e:	jmp    0x10002241
100041a3:	push   esi
100041a4:	mov    esi,DWORD PTR [eax]
100041a6:	test   esi,esi
100041a8:	je     0x100041b9
100041aa:	push   DWORD PTR [esi]
100041ac:	call   DWORD PTR ds:0x10066070
100041b2:	push   esi
100041b3:	call   0x10042e92
100041b8:	pop    ecx
100041b9:	pop    esi
100041ba:	ret    
100041bb:	jmp    0x10004743
100041c0:	push   ebp
100041c1:	mov    ebp,esp
100041c3:	and    esp,0xfffffff8
100041c6:	push   ecx
100041c7:	push   ecx
100041c8:	push   ebx
100041c9:	mov    ebx,DWORD PTR [esi+0x4]
100041cc:	test   ebx,ebx
100041ce:	push   edi
100041cf:	jne    0x100041d5
100041d1:	xor    edi,edi
100041d3:	jmp    0x100041dd
100041d5:	mov    edi,DWORD PTR [esi+0xc]
100041d8:	sub    edi,ebx
100041da:	sar    edi,0x5
100041dd:	mov    eax,esi
100041df:	call   0x100046b1
100041e4:	cmp    eax,edi
100041e6:	jae    0x100041fa
100041e8:	push   DWORD PTR [ebp+0x8]
100041eb:	push   0x1
100041ed:	push   DWORD PTR [esi+0x8]
100041f0:	call   0x10004768
100041f5:	mov    DWORD PTR [esi+0x8],eax
100041f8:	jmp    0x10004217
100041fa:	mov    edi,DWORD PTR [esi+0x8]
100041fd:	cmp    ebx,edi
100041ff:	jbe    0x10004206
10004201:	call   0x100433b0
10004206:	push   edi
10004207:	push   esi
10004208:	push   DWORD PTR [ebp+0x8]
1000420b:	lea    eax,[esp+0x14]
1000420f:	push   eax
10004210:	mov    eax,esi
10004212:	call   0x100046c4
10004217:	pop    edi
10004218:	pop    ebx
10004219:	mov    esp,ebp
1000421b:	pop    ebp
1000421c:	ret    0x4
1000421f:	push   esi
10004220:	mov    esi,DWORD PTR [eax]
10004222:	test   esi,esi
10004224:	je     0x10004244
10004226:	push   edi
10004227:	mov    edi,DWORD PTR [esi]
10004229:	test   edi,edi
1000422b:	je     0x1000423c
1000422d:	push   DWORD PTR [edi]
1000422f:	call   DWORD PTR ds:0x10066070
10004235:	push   edi
10004236:	call   0x10042e92
1000423b:	pop    ecx
1000423c:	push   esi
1000423d:	call   0x10042e92
10004242:	pop    ecx
10004243:	pop    edi
10004244:	pop    esi
10004245:	ret    
10004246:	jmp    0x1000424c
10004248:	dec    DWORD PTR [esp+0x8]
1000424c:	test   BYTE PTR [esp+0x8],0x1
10004251:	jne    0x10004248
10004253:	mov    eax,DWORD PTR [esp+0x4]
10004257:	ret    
10004258:	push   ebp
10004259:	mov    ebp,esp
1000425b:	and    esp,0xfffffff8
1000425e:	push   0xffffffff
10004260:	push   0x100611fc
10004265:	mov    eax,fs:0x0
1000426b:	push   eax
1000426c:	sub    esp,0x78
1000426f:	mov    eax,ds:0x1007e030
10004274:	xor    eax,esp
10004276:	mov    DWORD PTR [esp+0x70],eax
1000427a:	push   ebx
1000427b:	push   esi
1000427c:	push   edi
1000427d:	mov    eax,ds:0x1007e030
10004282:	xor    eax,esp
10004284:	push   eax
10004285:	lea    eax,[esp+0x88]
1000428c:	mov    fs:0x0,eax
10004292:	push   DWORD PTR [ebp+0xc]
10004295:	mov    eax,DWORD PTR [ebp+0x8]
10004298:	push   eax
10004299:	lea    esi,[esp+0x50]
1000429d:	call   0x1000406c
100042a2:	mov    eax,esi
100042a4:	push   eax
100042a5:	lea    eax,[esp+0x1c]
100042a9:	xor    ebx,ebx
100042ab:	push   eax
100042ac:	mov    DWORD PTR [esp+0x98],ebx
100042b3:	call   0x10004798
100042b8:	push   eax
100042b9:	call   0x10004a73
100042be:	call   0x10004798
100042c3:	mov    ecx,DWORD PTR [eax+0x4]
100042c6:	lea    edi,[esp+0x10]
100042ca:	lea    esi,[esp+0x18]
100042ce:	mov    DWORD PTR [esp+0x14],ecx
100042d2:	mov    DWORD PTR [esp+0x10],eax
100042d6:	call   0x10004ada
100042db:	test   al,al
100042dd:	je     0x10004337
100042df:	sub    esp,0x1c
100042e2:	lea    eax,[esp+0x64]
100042e6:	mov    ecx,esp
100042e8:	mov    DWORD PTR [esp+0x2c],esp
100042ec:	push   eax
100042ed:	call   0x100011a7
100042f2:	lea    esi,[esp+0x80]
100042f9:	call   0x100047fb
100042fe:	add    esp,0x1c
10004301:	lea    eax,[esp+0x48]
10004305:	push   eax
10004306:	mov    BYTE PTR [esp+0x94],0x1
1000430e:	call   0x10004798
10004313:	push   eax
10004314:	call   0x1000499f
10004319:	push   0xffffffff
1000431b:	push   ebx
1000431c:	mov    ecx,esi
1000431e:	push   ecx
1000431f:	mov    ecx,eax
10004321:	call   0x10001241
10004326:	push   ebx
10004327:	push   0x1
10004329:	mov    ecx,esi
1000432b:	mov    BYTE PTR [esp+0x98],bl
10004332:	call   0x100012f0
10004337:	mov    eax,DWORD PTR [ebp+0x10]
1000433a:	movzx  eax,BYTE PTR [eax]
1000433d:	cmp    eax,0x100
10004342:	jge    0x10004368
10004344:	lea    eax,[esp+0x48]
10004348:	push   eax
10004349:	lea    eax,[esp+0x14]
1000434d:	push   eax
1000434e:	call   0x10004798
10004353:	push   eax
10004354:	call   0x10004a73
10004359:	mov    ecx,DWORD PTR [eax]
1000435b:	mov    ebx,DWORD PTR [eax+0x4]
1000435e:	mov    DWORD PTR [esp+0x18],ecx
10004362:	mov    DWORD PTR [esp+0x1c],ebx
10004366:	jmp    0x1000436c
10004368:	mov    ebx,DWORD PTR [esp+0x1c]
1000436c:	call   0x10004798
10004371:	mov    ecx,DWORD PTR [eax+0x4]
10004374:	lea    edi,[esp+0x10]
10004378:	lea    esi,[esp+0x18]
1000437c:	mov    DWORD PTR [esp+0x14],ecx
10004380:	mov    DWORD PTR [esp+0x10],eax
10004384:	call   0x10004ada
10004389:	test   al,al
1000438b:	jne    0x100043e2
1000438d:	mov    esi,DWORD PTR [esp+0x18]
10004391:	test   esi,esi
10004393:	jne    0x1000439a
10004395:	call   0x100433b0
1000439a:	cmp    ebx,DWORD PTR [esi+0x4]
1000439d:	jne    0x100043a4
1000439f:	call   0x100433b0
100043a4:	cmp    DWORD PTR [ebx+0x40],0x10
100043a8:	jb     0x100043af
100043aa:	mov    ebx,DWORD PTR [ebx+0x2c]
100043ad:	jmp    0x100043b2
100043af:	add    ebx,0x2c
100043b2:	push   0x0
100043b4:	push   0x1
100043b6:	lea    ecx,[esp+0x50]
100043ba:	call   0x100012f0
100043bf:	mov    eax,ebx
100043c1:	mov    ecx,DWORD PTR [esp+0x88]
100043c8:	mov    DWORD PTR fs:0x0,ecx
100043cf:	pop    ecx
100043d0:	pop    edi
100043d1:	pop    esi
100043d2:	pop    ebx
100043d3:	mov    ecx,DWORD PTR [esp+0x70]
100043d7:	xor    ecx,esp
100043d9:	call   0x10042e97
100043de:	mov    esp,ebp
100043e0:	pop    ebp
100043e1:	ret    
100043e2:	push   0x1006d014
100043e7:	lea    ecx,[esp+0x68]
100043eb:	call   0x100011cd
100043f0:	lea    eax,[esp+0x64]
100043f4:	push   eax
100043f5:	lea    eax,[esp+0x24]
100043f9:	push   eax
100043fa:	mov    BYTE PTR [esp+0x98],0x2
10004402:	call   0x100026fe
10004407:	push   0x10074d64
1000440c:	lea    eax,[esp+0x24]
10004410:	push   eax
10004411:	call   0x100479b4
10004416:	int3   
10004417:	push   ebp
10004418:	mov    ebp,esp
1000441a:	and    esp,0xfffffff8
1000441d:	push   0xffffffff
1000441f:	push   0x1006069e
10004424:	mov    eax,fs:0x0
1000442a:	push   eax
1000442b:	sub    esp,0x78
1000442e:	mov    eax,ds:0x1007e030
10004433:	xor    eax,esp
10004435:	mov    DWORD PTR [esp+0x70],eax
10004439:	push   ebx
1000443a:	push   esi
1000443b:	push   edi
1000443c:	mov    eax,ds:0x1007e030
10004441:	xor    eax,esp
10004443:	push   eax
10004444:	lea    eax,[esp+0x88]
1000444b:	mov    fs:0x0,eax
10004451:	mov    eax,DWORD PTR [ebp+0x8]
10004454:	xor    edi,edi
10004456:	push   eax
10004457:	mov    eax,DWORD PTR [ebp+0xc]
1000445a:	lea    esi,[esp+0x4c]
1000445e:	mov    DWORD PTR [esp+0x64],0x7
10004466:	mov    DWORD PTR [esp+0x60],edi
1000446a:	mov    WORD PTR [esp+0x50],di
1000446f:	call   0x10005149
10004474:	mov    eax,esi
10004476:	push   eax
10004477:	lea    eax,[esp+0x1c]
1000447b:	push   eax
1000447c:	mov    DWORD PTR [esp+0x98],edi
10004483:	call   0x10004859
10004488:	push   eax
10004489:	call   0x10004be7
1000448e:	call   0x10004859
10004493:	mov    ecx,DWORD PTR [eax+0x4]
10004496:	lea    edi,[esp+0x10]
1000449a:	lea    esi,[esp+0x18]
1000449e:	mov    DWORD PTR [esp+0x14],ecx
100044a2:	mov    DWORD PTR [esp+0x10],eax
100044a6:	call   0x10004ada
100044ab:	test   al,al
100044ad:	je     0x10004504
100044af:	sub    esp,0x1c
100044b2:	lea    eax,[esp+0x64]
100044b6:	mov    esi,esp
100044b8:	mov    DWORD PTR [esp+0x2c],esp
100044bc:	call   0x10004af5
100044c1:	lea    edi,[esp+0x80]
100044c8:	call   0x100048bc
100044cd:	add    esp,0x1c
100044d0:	lea    eax,[esp+0x48]
100044d4:	push   eax
100044d5:	mov    BYTE PTR [esp+0x94],0x1
100044dd:	call   0x10004859
100044e2:	push   eax
100044e3:	call   0x10004b14
100044e8:	push   0xffffffff
100044ea:	push   eax
100044eb:	xor    ebx,ebx
100044ed:	mov    eax,edi
100044ef:	call   0x100050c3
100044f4:	push   0x1
100044f6:	mov    esi,edi
100044f8:	mov    BYTE PTR [esp+0x94],bl
100044ff:	call   0x100051ce
10004504:	mov    eax,DWORD PTR [ebp+0x10]
10004507:	movzx  eax,BYTE PTR [eax]
1000450a:	cmp    eax,0x100
1000450f:	jge    0x10004535
10004511:	lea    eax,[esp+0x48]
10004515:	push   eax
10004516:	lea    eax,[esp+0x14]
1000451a:	push   eax
1000451b:	call   0x10004859
10004520:	push   eax
10004521:	call   0x10004be7
10004526:	mov    ecx,DWORD PTR [eax]
10004528:	mov    ebx,DWORD PTR [eax+0x4]
1000452b:	mov    DWORD PTR [esp+0x18],ecx
1000452f:	mov    DWORD PTR [esp+0x1c],ebx
10004533:	jmp    0x10004539
10004535:	mov    ebx,DWORD PTR [esp+0x1c]
10004539:	call   0x10004859
1000453e:	mov    ecx,DWORD PTR [eax+0x4]
10004541:	lea    edi,[esp+0x10]
10004545:	lea    esi,[esp+0x18]
10004549:	mov    DWORD PTR [esp+0x14],ecx
1000454d:	mov    DWORD PTR [esp+0x10],eax
10004551:	call   0x10004ada
10004556:	test   al,al
10004558:	jne    0x100045af
1000455a:	mov    esi,DWORD PTR [esp+0x18]
1000455e:	test   esi,esi
10004560:	jne    0x10004567
10004562:	call   0x100433b0
10004567:	cmp    ebx,DWORD PTR [esi+0x4]
1000456a:	jne    0x10004571
1000456c:	call   0x100433b0
10004571:	cmp    DWORD PTR [ebx+0x40],0x8
10004575:	jb     0x1000457c
10004577:	mov    edi,DWORD PTR [ebx+0x2c]
1000457a:	jmp    0x1000457f
1000457c:	lea    edi,[ebx+0x2c]
1000457f:	push   0x1
10004581:	xor    ebx,ebx
10004583:	lea    esi,[esp+0x4c]
10004587:	call   0x100051ce
1000458c:	mov    eax,edi
1000458e:	mov    ecx,DWORD PTR [esp+0x88]
10004595:	mov    DWORD PTR fs:0x0,ecx
1000459c:	pop    ecx
1000459d:	pop    edi
1000459e:	pop    esi
1000459f:	pop    ebx
100045a0:	mov    ecx,DWORD PTR [esp+0x70]
100045a4:	xor    ecx,esp
100045a6:	call   0x10042e97
100045ab:	mov    esp,ebp
100045ad:	pop    ebp
100045ae:	ret    
100045af:	push   0x1006d014
100045b4:	lea    ecx,[esp+0x68]
100045b8:	call   0x100011cd
100045bd:	lea    eax,[esp+0x64]
100045c1:	push   eax
100045c2:	lea    eax,[esp+0x24]
100045c6:	push   eax
100045c7:	mov    BYTE PTR [esp+0x98],0x2
100045cf:	call   0x100026fe
100045d4:	push   0x10074d64
100045d9:	lea    eax,[esp+0x24]
100045dd:	push   eax
100045de:	call   0x100479b4
100045e3:	int3   
100045e4:	jmp    0x10004964
100045e9:	mov    ecx,DWORD PTR [eax+0x4]
100045ec:	test   ecx,ecx
100045ee:	jne    0x100045f3
100045f0:	xor    eax,eax
100045f2:	ret    
100045f3:	mov    eax,DWORD PTR [eax+0x8]
100045f6:	sub    eax,ecx
100045f8:	push   0x1c
100045fa:	cdq    
100045fb:	pop    ecx
100045fc:	idiv   ecx
100045fe:	ret    
100045ff:	mov    eax,esi
10004601:	call   0x100045e9
10004606:	cmp    DWORD PTR [esp+0x4],eax
1000460a:	jb     0x10004611
1000460c:	call   0x100433b0
10004611:	mov    eax,DWORD PTR [esp+0x4]
10004615:	imul   eax,eax,0x1c
10004618:	add    eax,DWORD PTR [esi+0x4]
1000461b:	ret    0x4
1000461e:	push   esi
1000461f:	mov    esi,DWORD PTR [eax]
10004621:	test   esi,esi
10004623:	je     0x10004632
10004625:	push   esi
10004626:	call   0x10039f30
1000462b:	push   esi
1000462c:	call   0x10042e92
10004631:	pop    ecx
10004632:	pop    esi
10004633:	ret    
10004634:	mov    eax,DWORD PTR [esi]
10004636:	test   eax,eax
10004638:	je     0x10004641
1000463a:	push   eax
1000463b:	call   DWORD PTR ds:0x10066070
10004641:	and    DWORD PTR [esi],0x0
10004644:	ret    
10004645:	push   esi
10004646:	mov    esi,ecx
10004648:	mov    ecx,DWORD PTR [eax+0x14]
1000464b:	cmp    ecx,esi
1000464d:	jae    0x10004651
1000464f:	mov    esi,ecx
10004651:	cmp    esi,edi
10004653:	mov    ecx,esi
10004655:	jb     0x10004659
10004657:	mov    ecx,edi
10004659:	cmp    DWORD PTR [eax+0x18],0x10
1000465d:	jb     0x10004664
1000465f:	mov    eax,DWORD PTR [eax+0x4]
10004662:	jmp    0x10004667
10004664:	add    eax,0x4
10004667:	push   ecx
10004668:	push   DWORD PTR [esp+0xc]
1000466c:	push   eax
1000466d:	call   0x10043726
10004672:	add    esp,0xc
10004675:	test   eax,eax
10004677:	jne    0x10004689
10004679:	cmp    esi,edi
1000467b:	jae    0x10004682
1000467d:	or     eax,0xffffffff
10004680:	jmp    0x10004689
10004682:	xor    eax,eax
10004684:	cmp    esi,edi
10004686:	setne  al
10004689:	pop    esi
1000468a:	ret    0x4
1000468d:	mov    eax,DWORD PTR [eax]
1000468f:	mov    ecx,DWORD PTR [eax-0x10]
10004692:	test   ecx,ecx
10004694:	je     0x1000469d
10004696:	mov    eax,DWORD PTR [ecx]
10004698:	call   DWORD PTR [eax+0x10]
1000469b:	jmp    0x1000469f
1000469d:	xor    eax,eax
1000469f:	test   eax,eax
100046a1:	jne    0x100046b0
100046a3:	mov    ecx,0x10080a74
100046a8:	mov    eax,ds:0x10080a74
100046ad:	jmp    DWORD PTR [eax+0x10]
100046b0:	ret    
100046b1:	mov    ecx,DWORD PTR [eax+0x4]
100046b4:	test   ecx,ecx
100046b6:	jne    0x100046bb
100046b8:	xor    eax,eax
100046ba:	ret    
100046bb:	mov    eax,DWORD PTR [eax+0x8]
100046be:	sub    eax,ecx
100046c0:	sar    eax,0x5
100046c3:	ret    
100046c4:	push   ebp
100046c5:	mov    ebp,esp
100046c7:	push   ecx
100046c8:	push   ebx
100046c9:	push   esi
100046ca:	push   edi
100046cb:	mov    esi,eax
100046cd:	call   0x100046b1
100046d2:	test   eax,eax
100046d4:	jne    0x100046da
100046d6:	xor    edi,edi
100046d8:	jmp    0x100046ff
100046da:	mov    ebx,DWORD PTR [esi+0x4]
100046dd:	cmp    ebx,DWORD PTR [esi+0x8]
100046e0:	jbe    0x100046e7
100046e2:	call   0x100433b0
100046e7:	cmp    DWORD PTR [ebp+0x10],0x0
100046eb:	je     0x100046f2
100046ed:	cmp    DWORD PTR [ebp+0x10],esi
100046f0:	je     0x100046f7
100046f2:	call   0x100433b0
100046f7:	mov    edi,DWORD PTR [ebp+0x14]
100046fa:	sub    edi,ebx
100046fc:	sar    edi,0x5
100046ff:	push   DWORD PTR [ebp+0x14]
10004702:	mov    edx,DWORD PTR [ebp+0xc]
10004705:	push   DWORD PTR [ebp+0x10]
10004708:	mov    ecx,esi
1000470a:	call   0x1000a531
1000470f:	mov    ebx,DWORD PTR [esi+0x4]
10004712:	cmp    ebx,DWORD PTR [esi+0x8]
10004715:	jbe    0x1000471c
10004717:	call   0x100433b0
1000471c:	shl    edi,0x5
1000471f:	add    edi,ebx
10004721:	cmp    edi,DWORD PTR [esi+0x8]
10004724:	mov    DWORD PTR [ebp+0x14],ebx
10004727:	ja     0x1000472e
10004729:	cmp    edi,DWORD PTR [esi+0x4]
1000472c:	jae    0x10004733
1000472e:	call   0x100433b0
10004733:	mov    eax,DWORD PTR [ebp+0x8]
10004736:	mov    DWORD PTR [eax+0x4],edi
10004739:	pop    edi
1000473a:	mov    DWORD PTR [eax],esi
1000473c:	pop    esi
1000473d:	pop    ebx
1000473e:	pop    ecx
1000473f:	pop    ebp
10004740:	ret    0x10
10004743:	mov    eax,DWORD PTR [esi+0x4]
10004746:	test   eax,eax
10004748:	je     0x1000475b
1000474a:	push   DWORD PTR [esi+0x8]
1000474d:	call   0x10004e16
10004752:	push   DWORD PTR [esi+0x4]
10004755:	call   0x10042e92
1000475a:	pop    ecx
1000475b:	and    DWORD PTR [esi+0x4],0x0
1000475f:	and    DWORD PTR [esi+0x8],0x0
10004763:	and    DWORD PTR [esi+0xc],0x0
10004767:	ret    
10004768:	push   ebp
10004769:	mov    ebp,esp
1000476b:	push   ecx
1000476c:	push   edi
1000476d:	xor    eax,eax
1000476f:	lea    edi,[ebp-0x4]
10004772:	stos   BYTE PTR es:[edi],al
10004773:	push   DWORD PTR [ebp-0x4]
10004776:	push   DWORD PTR [ebp+0xc]
10004779:	push   DWORD PTR [ebp+0x10]
1000477c:	push   DWORD PTR [ebp+0xc]
1000477f:	push   DWORD PTR [ebp+0x8]
10004782:	call   0x10006632
10004787:	mov    eax,DWORD PTR [ebp+0xc]
1000478a:	add    esp,0x14
1000478d:	shl    eax,0x5
10004790:	add    eax,DWORD PTR [ebp+0x8]
10004793:	pop    edi
10004794:	leave  
10004795:	ret    0xc
10004798:	push   0x0
1000479a:	mov    eax,0x1006066b
1000479f:	call   0x10059a35
100047a4:	test   BYTE PTR ds:0x10080c38,0x1
100047ab:	jne    0x100047f0
100047ad:	or     DWORD PTR ds:0x10080c38,0x1
100047b4:	and    DWORD PTR [esp+0x18],0x0
100047b9:	call   0x100062f3
100047be:	mov    ds:0x10080c30,eax
100047c3:	mov    BYTE PTR [eax+0x45],0x1
100047c7:	mov    eax,ds:0x10080c30
100047cc:	mov    DWORD PTR [eax+0x4],eax
100047cf:	mov    eax,ds:0x10080c30
100047d4:	mov    DWORD PTR [eax],eax
100047d6:	mov    eax,ds:0x10080c30
100047db:	mov    DWORD PTR [eax+0x8],eax
100047de:	and    DWORD PTR ds:0x10080c34,0x0
100047e5:	push   0x100656f1
100047ea:	call   0x10043274
100047ef:	pop    ecx
100047f0:	mov    eax,0x10080c2c
100047f5:	call   0x10059b0d
100047fa:	ret    
100047fb:	push   0x4
100047fd:	mov    eax,0x1005fd1e
10004802:	call   0x10059a35
10004807:	and    DWORD PTR [ebp-0x10],0x0
1000480b:	and    DWORD PTR [ebp-0x4],0x0
1000480f:	lea    eax,[ebp+0x8]
10004812:	push   eax
10004813:	mov    ecx,esi
10004815:	call   0x100011a7
1000481a:	xor    ebx,ebx
1000481c:	inc    ebx
1000481d:	cmp    DWORD PTR [esi+0x14],ebx
10004820:	jbe    0x10004845
10004822:	mov    edi,ebx
10004824:	mov    eax,esi
10004826:	call   0x10011e07
1000482b:	mov    DWORD PTR [ebp-0x10],eax
1000482e:	lea    edi,[ebx-0x1]
10004831:	mov    eax,esi
10004833:	call   0x10011e07
10004838:	mov    cl,BYTE PTR [eax]
1000483a:	mov    eax,DWORD PTR [ebp-0x10]
1000483d:	xor    BYTE PTR [eax],cl
1000483f:	inc    ebx
10004840:	cmp    ebx,DWORD PTR [esi+0x14]
10004843:	jb     0x10004822
10004845:	push   0x0
10004847:	push   0x1
10004849:	lea    ecx,[ebp+0x8]
1000484c:	call   0x100012f0
10004851:	mov    eax,esi
10004853:	call   0x10059b0d
10004858:	ret    
10004859:	push   0x0
1000485b:	mov    eax,0x10060642
10004860:	call   0x10059a35
10004865:	test   BYTE PTR ds:0x10080c1c,0x1
1000486c:	jne    0x100048b1
1000486e:	or     DWORD PTR ds:0x10080c1c,0x1
10004875:	and    DWORD PTR [esp+0x18],0x0
1000487a:	call   0x100062f3
1000487f:	mov    ds:0x10080c24,eax
10004884:	mov    BYTE PTR [eax+0x45],0x1
10004888:	mov    eax,ds:0x10080c24
1000488d:	mov    DWORD PTR [eax+0x4],eax
10004890:	mov    eax,ds:0x10080c24
10004895:	mov    DWORD PTR [eax],eax
10004897:	mov    eax,ds:0x10080c24
1000489c:	mov    DWORD PTR [eax+0x8],eax
1000489f:	and    DWORD PTR ds:0x10080c28,0x0
100048a6:	push   0x100656ec
100048ab:	call   0x10043274
100048b0:	pop    ecx
100048b1:	mov    eax,0x10080c20
100048b6:	call   0x10059b0d
100048bb:	ret    
100048bc:	push   0x4
100048be:	mov    eax,0x1005fcfb
100048c3:	call   0x10059a35
100048c8:	and    DWORD PTR [ebp-0x10],0x0
100048cc:	and    DWORD PTR [ebp-0x4],0x0
100048d0:	lea    eax,[ebp+0x8]
100048d3:	mov    esi,edi
100048d5:	call   0x10004af5
100048da:	mov    eax,DWORD PTR [edi+0x14]
100048dd:	xor    ebx,ebx
100048df:	inc    ebx
100048e0:	cmp    ebx,eax
100048e2:	jae    0x10004927
100048e4:	jbe    0x100048eb
100048e6:	call   0x100433b0
100048eb:	cmp    DWORD PTR [edi+0x18],0x8
100048ef:	jb     0x100048f6
100048f1:	mov    esi,DWORD PTR [edi+0x4]
100048f4:	jmp    0x100048f9
100048f6:	lea    esi,[edi+0x4]
100048f9:	lea    eax,[ebx-0x1]
100048fc:	cmp    eax,DWORD PTR [edi+0x14]
100048ff:	lea    esi,[esi+ebx*2]
10004902:	jbe    0x10004909
10004904:	call   0x100433b0
10004909:	cmp    DWORD PTR [edi+0x18],0x8
1000490d:	jb     0x10004914
1000490f:	mov    eax,DWORD PTR [edi+0x4]
10004912:	jmp    0x10004917
10004914:	lea    eax,[edi+0x4]
10004917:	mov    ax,WORD PTR [eax+ebx*2-0x2]
1000491c:	xor    WORD PTR [esi],ax
1000491f:	mov    eax,DWORD PTR [edi+0x14]
10004922:	inc    ebx
10004923:	cmp    ebx,eax
10004925:	jb     0x100048eb
10004927:	push   0x1
10004929:	xor    ebx,ebx
1000492b:	lea    esi,[ebp+0x8]
1000492e:	call   0x100051ce
10004933:	mov    eax,edi
10004935:	call   0x10059b0d
1000493a:	ret    
1000493b:	push   esi
1000493c:	mov    esi,eax
1000493e:	cmp    esi,0x9249249
10004944:	jbe    0x1000494b
10004946:	jmp    0x1000a740
1000494b:	mov    ecx,esi
1000494d:	call   0x10004e33
10004952:	imul   esi,esi,0x1c
10004955:	add    esi,eax
10004957:	mov    DWORD PTR [edi+0x4],eax
1000495a:	mov    DWORD PTR [edi+0x8],eax
1000495d:	mov    DWORD PTR [edi+0xc],esi
10004960:	mov    al,0x1
10004962:	pop    esi
10004963:	ret    
10004964:	mov    eax,DWORD PTR [esi+0x4]
10004967:	test   eax,eax
10004969:	je     0x1000497c
1000496b:	push   DWORD PTR [esi+0x8]
1000496e:	call   0x10004ea3
10004973:	push   DWORD PTR [esi+0x4]
10004976:	call   0x10042e92
1000497b:	pop    ecx
1000497c:	and    DWORD PTR [esi+0x4],0x0
10004980:	and    DWORD PTR [esi+0x8],0x0
10004984:	and    DWORD PTR [esi+0xc],0x0
10004988:	ret    
10004989:	mov    eax,DWORD PTR [esi]
1000498b:	test   eax,eax
1000498d:	je     0x10004996
1000498f:	push   eax
10004990:	call   DWORD PTR ds:0x10066070
10004996:	mov    eax,DWORD PTR [esp+0x4]
1000499a:	mov    DWORD PTR [esi],eax
1000499c:	ret    0x4
1000499f:	push   0x64
100049a1:	mov    eax,0x10060619
100049a6:	call   0x10059a35
100049ab:	push   DWORD PTR [ebp+0xc]
100049ae:	mov    edi,DWORD PTR [ebp+0x8]
100049b1:	lea    ebx,[ebp-0x14]
100049b4:	call   0x10005085
100049b9:	mov    eax,DWORD PTR [edi+0x4]
100049bc:	mov    DWORD PTR [ebp-0x1c],edi
100049bf:	lea    edi,[ebp-0x1c]
100049c2:	mov    esi,ebx
100049c4:	mov    DWORD PTR [ebp-0x18],eax
100049c7:	call   0x10004ada
100049cc:	mov    ebx,DWORD PTR [ebp-0x10]
100049cf:	xor    esi,esi
100049d1:	test   al,al
100049d3:	jne    0x100049e4
100049d5:	mov    eax,DWORD PTR [ebp+0xc]
100049d8:	lea    ecx,[ebx+0xc]
100049db:	call   0x10004e7d
100049e0:	test   al,al
100049e2:	je     0x10004a52
100049e4:	push   esi
100049e5:	lea    ecx,[ebp-0x38]
100049e8:	mov    DWORD PTR [ebp-0x20],0xf
100049ef:	call   0x1000141c
100049f4:	push   DWORD PTR [ebp+0xc]
100049f7:	lea    ecx,[ebp-0x70]
100049fa:	mov    DWORD PTR [ebp-0x4],esi
100049fd:	call   0x100011a7
10004a02:	lea    eax,[ebp-0x38]
10004a05:	push   eax
10004a06:	lea    ecx,[ebp-0x54]
10004a09:	mov    BYTE PTR [ebp-0x4],0x1
10004a0d:	call   0x100011a7
10004a12:	push   ebx
10004a13:	mov    BYTE PTR [ebp-0x4],0x2
10004a17:	push   DWORD PTR [ebp-0x14]
10004a1a:	lea    eax,[ebp-0x70]
10004a1d:	push   eax
10004a1e:	lea    eax,[ebp-0x1c]
10004a21:	push   eax
10004a22:	mov    eax,DWORD PTR [ebp+0x8]
10004a25:	call   0x10004f02
10004a2a:	mov    edi,DWORD PTR [eax]
10004a2c:	mov    ebx,DWORD PTR [eax+0x4]
10004a2f:	push   esi
10004a30:	push   0x1
10004a32:	lea    ecx,[ebp-0x54]
10004a35:	call   0x100012f0
10004a3a:	push   esi
10004a3b:	push   0x1
10004a3d:	lea    ecx,[ebp-0x70]
10004a40:	call   0x100012f0
10004a45:	push   esi
10004a46:	push   0x1
10004a48:	lea    ecx,[ebp-0x38]
10004a4b:	call   0x100012f0
10004a50:	jmp    0x10004a55
10004a52:	mov    edi,DWORD PTR [ebp-0x14]
10004a55:	cmp    edi,esi
10004a57:	jne    0x10004a5e
10004a59:	call   0x100433b0
10004a5e:	cmp    ebx,DWORD PTR [edi+0x4]
10004a61:	jne    0x10004a68
10004a63:	call   0x100433b0
10004a68:	lea    eax,[ebx+0x28]
10004a6b:	call   0x10059b0d
10004a70:	ret    0x8
10004a73:	push   ebp
10004a74:	mov    ebp,esp
10004a76:	sub    esp,0x18
10004a79:	push   ebx
10004a7a:	push   esi
10004a7b:	push   edi
10004a7c:	push   DWORD PTR [ebp+0x10]
10004a7f:	mov    edi,DWORD PTR [ebp+0x8]
10004a82:	lea    ebx,[ebp-0xc]
10004a85:	call   0x10005085
10004a8a:	mov    eax,DWORD PTR [edi+0x4]
10004a8d:	mov    DWORD PTR [ebp-0x14],edi
10004a90:	lea    edi,[ebp-0x14]
10004a93:	mov    esi,ebx
10004a95:	mov    DWORD PTR [ebp-0x10],eax
10004a98:	call   0x10004ada
10004a9d:	test   al,al
10004a9f:	jne    0x10004ab7
10004aa1:	mov    ecx,DWORD PTR [ebp-0x8]
10004aa4:	mov    eax,DWORD PTR [ebp+0x10]
10004aa7:	add    ecx,0xc
10004aaa:	call   0x10004e7d
10004aaf:	test   al,al
10004ab1:	jne    0x10004ab7
10004ab3:	mov    ecx,ebx
10004ab5:	jmp    0x10004ac6
10004ab7:	mov    eax,DWORD PTR [ebp+0x8]
10004aba:	mov    ecx,DWORD PTR [eax+0x4]
10004abd:	mov    DWORD PTR [ebp-0x10],ecx
10004ac0:	mov    DWORD PTR [ebp-0x14],eax
10004ac3:	lea    ecx,[ebp-0x14]
10004ac6:	mov    edx,DWORD PTR [ecx]
10004ac8:	mov    eax,DWORD PTR [ebp+0xc]
10004acb:	mov    ecx,DWORD PTR [ecx+0x4]
10004ace:	pop    edi
10004acf:	pop    esi
10004ad0:	mov    DWORD PTR [eax],edx
10004ad2:	mov    DWORD PTR [eax+0x4],ecx
10004ad5:	pop    ebx
10004ad6:	leave  
10004ad7:	ret    0xc
10004ada:	mov    eax,DWORD PTR [esi]
10004adc:	test   eax,eax
10004ade:	je     0x10004ae4
10004ae0:	cmp    eax,DWORD PTR [edi]
10004ae2:	je     0x10004ae9
10004ae4:	call   0x100433b0
10004ae9:	mov    eax,DWORD PTR [esi+0x4]
10004aec:	sub    eax,DWORD PTR [edi+0x4]
10004aef:	neg    eax
10004af1:	sbb    eax,eax
10004af3:	inc    eax
10004af4:	ret    
10004af5:	and    DWORD PTR [esi+0x14],0x0
10004af9:	push   ebx
10004afa:	push   0xffffffff
10004afc:	mov    DWORD PTR [esi+0x18],0x7
10004b03:	and    WORD PTR [esi+0x4],0x0
10004b08:	push   esi
10004b09:	xor    ebx,ebx
10004b0b:	call   0x100050c3
10004b10:	mov    eax,esi
10004b12:	pop    ebx
10004b13:	ret    
10004b14:	push   0x64
10004b16:	mov    eax,0x100605e6
10004b1b:	call   0x10059a35
10004b20:	push   DWORD PTR [ebp+0xc]
10004b23:	mov    edi,DWORD PTR [ebp+0x8]
10004b26:	lea    ebx,[ebp-0x14]
10004b29:	call   0x100053d8
10004b2e:	mov    eax,DWORD PTR [edi+0x4]
10004b31:	mov    DWORD PTR [ebp-0x1c],edi
10004b34:	lea    edi,[ebp-0x1c]
10004b37:	mov    esi,ebx
10004b39:	mov    DWORD PTR [ebp-0x18],eax
10004b3c:	call   0x10004ada
10004b41:	test   al,al
10004b43:	mov    ebx,DWORD PTR [ebp-0x10]
10004b46:	jne    0x10004b57
10004b48:	mov    eax,DWORD PTR [ebp+0xc]
10004b4b:	lea    ecx,[ebx+0xc]
10004b4e:	call   0x10005416
10004b53:	test   al,al
10004b55:	je     0x10004bc6
10004b57:	xor    eax,eax
10004b59:	mov    DWORD PTR [ebp-0x20],0x7
10004b60:	mov    DWORD PTR [ebp-0x24],eax
10004b63:	mov    WORD PTR [ebp-0x34],ax
10004b67:	mov    DWORD PTR [ebp-0x4],eax
10004b6a:	mov    eax,DWORD PTR [ebp+0xc]
10004b6d:	lea    esi,[ebp-0x70]
10004b70:	call   0x10004af5
10004b75:	lea    eax,[ebp-0x38]
10004b78:	lea    esi,[ebp-0x54]
10004b7b:	mov    BYTE PTR [ebp-0x4],0x1
10004b7f:	call   0x10004af5
10004b84:	push   ebx
10004b85:	mov    BYTE PTR [ebp-0x4],0x2
10004b89:	push   DWORD PTR [ebp-0x14]
10004b8c:	lea    eax,[ebp-0x70]
10004b8f:	push   eax
10004b90:	lea    eax,[ebp-0x1c]
10004b93:	push   eax
10004b94:	mov    eax,DWORD PTR [ebp+0x8]
10004b97:	call   0x10005255
10004b9c:	mov    edi,DWORD PTR [eax]
10004b9e:	mov    eax,DWORD PTR [eax+0x4]
10004ba1:	push   0x1
10004ba3:	xor    ebx,ebx
10004ba5:	mov    DWORD PTR [ebp-0x10],eax
10004ba8:	call   0x100051ce
10004bad:	push   0x1
10004baf:	lea    esi,[ebp-0x70]
10004bb2:	call   0x100051ce
10004bb7:	push   0x1
10004bb9:	lea    esi,[ebp-0x38]
10004bbc:	call   0x100051ce
10004bc1:	mov    ebx,DWORD PTR [ebp-0x10]
10004bc4:	jmp    0x10004bc9
10004bc6:	mov    edi,DWORD PTR [ebp-0x14]
10004bc9:	test   edi,edi
10004bcb:	jne    0x10004bd2
10004bcd:	call   0x100433b0
10004bd2:	cmp    ebx,DWORD PTR [edi+0x4]
10004bd5:	jne    0x10004bdc
10004bd7:	call   0x100433b0
10004bdc:	lea    eax,[ebx+0x28]
10004bdf:	call   0x10059b0d
10004be4:	ret    0x8
10004be7:	push   ebp
10004be8:	mov    ebp,esp
10004bea:	sub    esp,0x18
10004bed:	push   ebx
10004bee:	push   esi
10004bef:	push   edi
10004bf0:	push   DWORD PTR [ebp+0x10]
10004bf3:	mov    edi,DWORD PTR [ebp+0x8]
10004bf6:	lea    ebx,[ebp-0xc]
10004bf9:	call   0x100053d8
10004bfe:	mov    eax,DWORD PTR [edi+0x4]
10004c01:	mov    DWORD PTR [ebp-0x14],edi
10004c04:	lea    edi,[ebp-0x14]
10004c07:	mov    esi,ebx
10004c09:	mov    DWORD PTR [ebp-0x10],eax
10004c0c:	call   0x10004ada
10004c11:	test   al,al
10004c13:	jne    0x10004c2b
10004c15:	mov    ecx,DWORD PTR [ebp-0x8]
10004c18:	mov    eax,DWORD PTR [ebp+0x10]
10004c1b:	add    ecx,0xc
10004c1e:	call   0x10005416
10004c23:	test   al,al
10004c25:	jne    0x10004c2b
10004c27:	mov    ecx,ebx
10004c29:	jmp    0x10004c3a
10004c2b:	mov    eax,DWORD PTR [ebp+0x8]
10004c2e:	mov    ecx,DWORD PTR [eax+0x4]
10004c31:	mov    DWORD PTR [ebp-0x10],ecx
10004c34:	mov    DWORD PTR [ebp-0x14],eax
10004c37:	lea    ecx,[ebp-0x14]
10004c3a:	mov    edx,DWORD PTR [ecx]
10004c3c:	mov    eax,DWORD PTR [ebp+0xc]
10004c3f:	mov    ecx,DWORD PTR [ecx+0x4]
10004c42:	pop    edi
10004c43:	pop    esi
10004c44:	mov    DWORD PTR [eax],edx
10004c46:	mov    DWORD PTR [eax+0x4],ecx
10004c49:	pop    ebx
10004c4a:	leave  
10004c4b:	ret    0xc
10004c4e:	push   0x0
10004c50:	push   0x1
10004c52:	lea    ecx,[esi+0x1c]
10004c55:	call   0x100012f0
10004c5a:	push   0x0
10004c5c:	push   0x1
10004c5e:	mov    ecx,esi
10004c60:	call   0x100012f0
10004c65:	ret    
10004c66:	push   ebx
10004c67:	push   esi
10004c68:	push   0x1
10004c6a:	lea    esi,[edi+0x1c]
10004c6d:	xor    ebx,ebx
10004c6f:	call   0x100051ce
10004c74:	push   0x1
10004c76:	mov    esi,edi
10004c78:	call   0x100051ce
10004c7d:	pop    esi
10004c7e:	pop    ebx
10004c7f:	ret    
10004c80:	push   ebp
10004c81:	mov    ebp,esp
10004c83:	push   ecx
10004c84:	push   ebx
10004c85:	mov    ebx,DWORD PTR [ebp+0xc]
10004c88:	push   edi
10004c89:	mov    edi,eax
10004c8b:	mov    eax,DWORD PTR [edi+0x14]
10004c8e:	cmp    eax,DWORD PTR [ebp+0x8]
10004c91:	jae    0x10004c98
10004c93:	call   0x100571df
10004c98:	mov    eax,DWORD PTR [edi+0x14]
10004c9b:	sub    eax,DWORD PTR [ebp+0x8]
10004c9e:	cmp    eax,ebx
10004ca0:	jae    0x10004ca7
10004ca2:	mov    ebx,eax
10004ca4:	mov    DWORD PTR [ebp+0xc],ebx
10004ca7:	or     eax,0xffffffff
10004caa:	sub    eax,DWORD PTR [esi+0x14]
10004cad:	cmp    eax,ebx
10004caf:	jbe    0x10004cbb
10004cb1:	mov    eax,DWORD PTR [esi+0x14]
10004cb4:	lea    ecx,[eax+ebx*1]
10004cb7:	cmp    ecx,eax
10004cb9:	jae    0x10004cc0
10004cbb:	call   0x100571a0
10004cc0:	test   ebx,ebx
10004cc2:	jbe    0x10004d1c
10004cc4:	mov    eax,DWORD PTR [esi+0x14]
10004cc7:	add    eax,ebx
10004cc9:	push   0x0
10004ccb:	push   eax
10004ccc:	mov    ecx,esi
10004cce:	mov    DWORD PTR [ebp-0x4],eax
10004cd1:	call   0x10001438
10004cd6:	test   al,al
10004cd8:	je     0x10004d1c
10004cda:	cmp    DWORD PTR [edi+0x18],0x10
10004cde:	jb     0x10004ce5
10004ce0:	mov    edi,DWORD PTR [edi+0x4]
10004ce3:	jmp    0x10004ce8
10004ce5:	add    edi,0x4
10004ce8:	mov    eax,DWORD PTR [esi+0x18]
10004ceb:	cmp    eax,0x10
10004cee:	jb     0x10004cf5
10004cf0:	mov    edx,DWORD PTR [esi+0x4]
10004cf3:	jmp    0x10004cf8
10004cf5:	lea    edx,[esi+0x4]
10004cf8:	push   DWORD PTR [ebp+0xc]
10004cfb:	mov    ecx,DWORD PTR [esi+0x14]
10004cfe:	mov    ebx,DWORD PTR [ebp+0x8]
10004d01:	add    edi,ebx
10004d03:	sub    eax,ecx
10004d05:	push   edi
10004d06:	push   eax
10004d07:	add    ecx,edx
10004d09:	push   ecx
10004d0a:	call   0x1000103f
10004d0f:	add    esp,0x10
10004d12:	push   DWORD PTR [ebp-0x4]
10004d15:	mov    ecx,esi
10004d17:	call   0x1000141c
10004d1c:	pop    edi
10004d1d:	mov    eax,esi
10004d1f:	pop    ebx
10004d20:	leave  
10004d21:	ret    0x8
10004d24:	push   ebx
10004d25:	mov    ebx,DWORD PTR [esp+0xc]
10004d29:	push   esi
10004d2a:	push   edi
10004d2b:	mov    edi,DWORD PTR [esp+0x10]
10004d2f:	mov    esi,eax
10004d31:	push   edi
10004d32:	mov    ecx,esi
10004d34:	call   0x100015e2
10004d39:	test   al,al
10004d3b:	je     0x10004d58
10004d3d:	cmp    DWORD PTR [esi+0x18],0x10
10004d41:	jb     0x10004d48
10004d43:	mov    eax,DWORD PTR [esi+0x4]
10004d46:	jmp    0x10004d4b
10004d48:	lea    eax,[esi+0x4]
10004d4b:	sub    edi,eax
10004d4d:	push   ebx
10004d4e:	push   edi
10004d4f:	mov    eax,esi
10004d51:	call   0x10004c80
10004d56:	jmp    0x10004db8
10004d58:	or     eax,0xffffffff
10004d5b:	sub    eax,DWORD PTR [esi+0x14]
10004d5e:	cmp    eax,ebx
10004d60:	jbe    0x10004d6c
10004d62:	mov    eax,DWORD PTR [esi+0x14]
10004d65:	lea    ecx,[eax+ebx*1]
10004d68:	cmp    ecx,eax
10004d6a:	jae    0x10004d71
10004d6c:	call   0x100571a0
10004d71:	test   ebx,ebx
10004d73:	jbe    0x10004db6
10004d75:	mov    edi,DWORD PTR [esi+0x14]
10004d78:	push   0x0
10004d7a:	add    edi,ebx
10004d7c:	push   edi
10004d7d:	mov    ecx,esi
10004d7f:	call   0x10001438
10004d84:	test   al,al
10004d86:	je     0x10004db6
10004d88:	mov    eax,DWORD PTR [esi+0x18]
10004d8b:	cmp    eax,0x10
10004d8e:	jb     0x10004d95
10004d90:	mov    edx,DWORD PTR [esi+0x4]
10004d93:	jmp    0x10004d98
10004d95:	lea    edx,[esi+0x4]
10004d98:	mov    ecx,DWORD PTR [esi+0x14]
10004d9b:	push   ebx
10004d9c:	push   DWORD PTR [esp+0x14]
10004da0:	sub    eax,ecx
10004da2:	push   eax
10004da3:	add    ecx,edx
10004da5:	push   ecx
10004da6:	call   0x1000103f
10004dab:	add    esp,0x10
10004dae:	push   edi
10004daf:	mov    ecx,esi
10004db1:	call   0x1000141c
10004db6:	mov    eax,esi
10004db8:	pop    edi
10004db9:	pop    esi
10004dba:	pop    ebx
10004dbb:	ret    0x8
10004dbe:	push   esi
10004dbf:	mov    esi,eax
10004dc1:	mov    ecx,DWORD PTR [esi]
10004dc3:	mov    eax,DWORD PTR [ecx]
10004dc5:	push   edi
10004dc6:	call   DWORD PTR [eax+0x10]
10004dc9:	lea    edx,[esi+0xc]
10004dcc:	cmp    DWORD PTR [edx],0x0
10004dcf:	jl     0x10004de0
10004dd1:	cmp    eax,DWORD PTR [esi]
10004dd3:	jne    0x10004de0
10004dd5:	xor    eax,eax
10004dd7:	mov    edi,esi
10004dd9:	inc    eax
10004dda:	lock xadd DWORD PTR [edx],eax
10004dde:	jmp    0x10004e11
10004de0:	mov    edx,DWORD PTR [eax]
10004de2:	push   0x2
10004de4:	push   DWORD PTR [esi+0x4]
10004de7:	mov    ecx,eax
10004de9:	call   DWORD PTR [edx]
10004deb:	mov    edi,eax
10004ded:	test   edi,edi
10004def:	jne    0x10004df6
10004df1:	jmp    0x10002356
10004df6:	mov    eax,DWORD PTR [esi+0x4]
10004df9:	mov    DWORD PTR [edi+0x4],eax
10004dfc:	mov    eax,DWORD PTR [esi+0x4]
10004dff:	add    esi,0x10
10004e02:	inc    eax
10004e03:	push   esi
10004e04:	push   eax
10004e05:	lea    ecx,[edi+0x10]
10004e08:	push   ecx
10004e09:	call   0x1000233b
10004e0e:	add    esp,0xc
10004e11:	mov    eax,edi
10004e13:	pop    edi
10004e14:	pop    esi
10004e15:	ret    
10004e16:	push   esi
10004e17:	mov    esi,eax
10004e19:	jmp    0x10004e29
10004e1b:	push   0x0
10004e1d:	push   0x1
10004e1f:	mov    ecx,esi
10004e21:	call   0x100012f0
10004e26:	add    esi,0x20
10004e29:	cmp    esi,DWORD PTR [esp+0x8]
10004e2d:	jne    0x10004e1b
10004e2f:	pop    esi
10004e30:	ret    0x4
10004e33:	push   ebp
10004e34:	mov    ebp,esp
10004e36:	sub    esp,0x10
10004e39:	test   ecx,ecx
10004e3b:	ja     0x10004e4b
10004e3d:	xor    ecx,ecx
10004e3f:	imul   ecx,ecx,0x1c
10004e42:	push   ecx
10004e43:	call   0x1004349e
10004e48:	pop    ecx
10004e49:	leave  
10004e4a:	ret    
10004e4b:	or     eax,0xffffffff
10004e4e:	xor    edx,edx
10004e50:	div    ecx
10004e52:	cmp    eax,0x1c
10004e55:	jae    0x10004e3f
10004e57:	and    DWORD PTR [ebp-0x4],0x0
10004e5b:	lea    eax,[ebp-0x4]
10004e5e:	push   eax
10004e5f:	lea    ecx,[ebp-0x10]
10004e62:	call   0x10042f12
10004e67:	push   0x10074cf8
10004e6c:	lea    eax,[ebp-0x10]
10004e6f:	push   eax
10004e70:	mov    DWORD PTR [ebp-0x10],0x100665c8
10004e77:	call   0x100479b4
10004e7c:	int3   
10004e7d:	cmp    DWORD PTR [ecx+0x18],0x10
10004e81:	push   edi
10004e82:	mov    edi,DWORD PTR [ecx+0x14]
10004e85:	jb     0x10004e8c
10004e87:	mov    ecx,DWORD PTR [ecx+0x4]
10004e8a:	jmp    0x10004e8f
10004e8c:	add    ecx,0x4
10004e8f:	push   ecx
10004e90:	mov    ecx,DWORD PTR [eax+0x14]
10004e93:	call   0x10004645
10004e98:	xor    ecx,ecx
10004e9a:	test   eax,eax
10004e9c:	setl   cl
10004e9f:	mov    al,cl
10004ea1:	pop    edi
10004ea2:	ret    
10004ea3:	push   esi
10004ea4:	mov    esi,eax
10004ea6:	jmp    0x10004eb3
10004ea8:	push   0x0
10004eaa:	push   esi
10004eab:	call   0x10006686
10004eb0:	add    esi,0x1c
10004eb3:	cmp    esi,DWORD PTR [esp+0x8]
10004eb7:	jne    0x10004ea8
10004eb9:	pop    esi
10004eba:	ret    0x4
10004ebd:	push   ebp
10004ebe:	mov    ebp,esp
10004ec0:	and    esp,0xfffffff8
10004ec3:	mov    eax,ds:0x10080c30
10004ec8:	mov    edx,DWORD PTR [eax]
10004eca:	sub    esp,0xc
10004ecd:	push   esi
10004ece:	push   eax
10004ecf:	mov    ecx,0x10080c2c
10004ed4:	mov    esi,ecx
10004ed6:	push   esi
10004ed7:	push   edx
10004ed8:	push   ecx
10004ed9:	lea    eax,[esp+0x18]
10004edd:	push   eax
10004ede:	call   0x100059f1
10004ee3:	push   DWORD PTR ds:0x10080c30
10004ee9:	call   0x10042e92
10004eee:	and    DWORD PTR ds:0x10080c30,0x0
10004ef5:	and    DWORD PTR ds:0x10080c34,0x0
10004efc:	pop    ecx
10004efd:	pop    esi
10004efe:	mov    esp,ebp
10004f00:	pop    ebp
10004f01:	ret    
10004f02:	push   ebp
10004f03:	mov    ebp,esp
10004f05:	sub    esp,0x14
10004f08:	push   ebx
10004f09:	mov    ebx,eax
10004f0b:	xor    eax,eax
10004f0d:	cmp    DWORD PTR [ebx+0x8],eax
10004f10:	push   esi
10004f11:	push   edi
10004f12:	mov    DWORD PTR [ebp-0x8],eax
10004f15:	mov    DWORD PTR [ebp-0x4],eax
10004f18:	jne    0x10004f34
10004f1a:	mov    ecx,DWORD PTR [ebx+0x4]
10004f1d:	push   DWORD PTR [ebp+0xc]
10004f20:	push   0x1
10004f22:	mov    esi,ebx
10004f24:	push   DWORD PTR [ebp+0x8]
10004f27:	call   0x10005515
10004f2c:	mov    eax,DWORD PTR [ebp+0x8]
10004f2f:	jmp    0x1000507e
10004f34:	mov    eax,DWORD PTR [ebx+0x4]
10004f37:	mov    eax,DWORD PTR [eax]
10004f39:	lea    edi,[ebp-0x10]
10004f3c:	lea    esi,[ebp+0x10]
10004f3f:	mov    DWORD PTR [ebp-0xc],eax
10004f42:	mov    DWORD PTR [ebp-0x10],ebx
10004f45:	call   0x10004ada
10004f4a:	test   al,al
10004f4c:	je     0x10004f68
10004f4e:	mov    esi,DWORD PTR [ebp+0x14]
10004f51:	mov    eax,DWORD PTR [ebp+0xc]
10004f54:	lea    ecx,[esi+0xc]
10004f57:	call   0x10004e7d
10004f5c:	test   al,al
10004f5e:	je     0x10005063
10004f64:	mov    ecx,esi
10004f66:	jmp    0x10004f1d
10004f68:	mov    eax,DWORD PTR [ebx+0x4]
10004f6b:	lea    edi,[ebp-0x10]
10004f6e:	lea    esi,[ebp+0x10]
10004f71:	mov    DWORD PTR [ebp-0xc],eax
10004f74:	mov    DWORD PTR [ebp-0x10],ebx
10004f77:	call   0x10004ada
10004f7c:	test   al,al
10004f7e:	je     0x10004fa9
10004f80:	mov    eax,DWORD PTR [ebx+0x4]
10004f83:	mov    eax,DWORD PTR [eax+0x8]
10004f86:	mov    ecx,DWORD PTR [ebp+0xc]
10004f89:	add    eax,0xc
10004f8c:	call   0x10004e7d
10004f91:	test   al,al
10004f93:	je     0x10005063
10004f99:	push   DWORD PTR [ebp+0xc]
10004f9c:	mov    eax,DWORD PTR [ebx+0x4]
10004f9f:	mov    ecx,DWORD PTR [eax+0x8]
10004fa2:	push   0x0
10004fa4:	jmp    0x10004f22
10004fa9:	mov    edi,DWORD PTR [ebp+0x14]
10004fac:	mov    eax,DWORD PTR [ebp+0xc]
10004faf:	lea    ecx,[edi+0xc]
10004fb2:	call   0x10004e7d
10004fb7:	test   al,al
10004fb9:	je     0x10004fff
10004fbb:	mov    eax,DWORD PTR [ebp+0x10]
10004fbe:	lea    esi,[ebp-0x8]
10004fc1:	mov    DWORD PTR [ebp-0x8],eax
10004fc4:	mov    DWORD PTR [ebp-0x4],edi
10004fc7:	call   0x10005990
10004fcc:	mov    eax,DWORD PTR [eax+0x4]
10004fcf:	mov    ecx,DWORD PTR [ebp+0xc]
10004fd2:	add    eax,0xc
10004fd5:	call   0x10004e7d
10004fda:	test   al,al
10004fdc:	je     0x10004fff
10004fde:	mov    ecx,DWORD PTR [ebp-0x4]
10004fe1:	mov    eax,DWORD PTR [ecx+0x8]
10004fe4:	cmp    BYTE PTR [eax+0x45],0x0
10004fe8:	push   DWORD PTR [ebp+0xc]
10004feb:	mov    esi,ebx
10004fed:	je     0x10004ff6
10004fef:	push   0x0
10004ff1:	jmp    0x10004f24
10004ff6:	push   0x1
10004ff8:	mov    ecx,edi
10004ffa:	jmp    0x10004f24
10004fff:	mov    ecx,DWORD PTR [ebp+0xc]
10005002:	lea    eax,[edi+0xc]
10005005:	call   0x10004e7d
1000500a:	test   al,al
1000500c:	je     0x10005063
1000500e:	mov    eax,DWORD PTR [ebp+0x10]
10005011:	mov    DWORD PTR [ebp-0x8],eax
10005014:	mov    eax,DWORD PTR [ebx+0x4]
10005017:	lea    esi,[ebp-0x8]
1000501a:	mov    DWORD PTR [ebp-0x4],edi
1000501d:	mov    DWORD PTR [ebp-0xc],eax
10005020:	mov    DWORD PTR [ebp-0x10],ebx
10005023:	call   0x10005660
10005028:	lea    edi,[ebp-0x10]
1000502b:	mov    esi,eax
1000502d:	call   0x10004ada
10005032:	test   al,al
10005034:	jne    0x10005048
10005036:	mov    ecx,DWORD PTR [ebp-0x4]
10005039:	mov    eax,DWORD PTR [ebp+0xc]
1000503c:	add    ecx,0xc
1000503f:	call   0x10004e7d
10005044:	test   al,al
10005046:	je     0x10005063
10005048:	mov    ecx,DWORD PTR [ebp+0x14]
1000504b:	mov    eax,DWORD PTR [ecx+0x8]
1000504e:	cmp    BYTE PTR [eax+0x45],0x0
10005052:	push   DWORD PTR [ebp+0xc]
10005055:	mov    esi,ebx
10005057:	jne    0x10004fef
10005059:	mov    ecx,DWORD PTR [ebp-0x4]
1000505c:	push   0x1
1000505e:	jmp    0x10004f24
10005063:	push   DWORD PTR [ebp+0xc]
10005066:	push   ebx
10005067:	lea    ebx,[ebp-0x14]
1000506a:	call   0x10005454
1000506f:	mov    edx,DWORD PTR [eax]
10005071:	mov    ecx,DWORD PTR [ebp+0x8]
10005074:	mov    DWORD PTR [ecx],edx
10005076:	mov    eax,DWORD PTR [eax+0x4]
10005079:	mov    DWORD PTR [ecx+0x4],eax
1000507c:	mov    eax,ecx
1000507e:	pop    edi
1000507f:	pop    esi
10005080:	pop    ebx
10005081:	leave  
10005082:	ret    0x10
10005085:	push   ebp
10005086:	mov    ebp,esp
10005088:	push   ecx
10005089:	mov    eax,DWORD PTR [edi+0x4]
1000508c:	push   esi
1000508d:	mov    esi,DWORD PTR [eax+0x4]
10005090:	mov    DWORD PTR [ebp-0x4],eax
10005093:	jmp    0x100050ae
10005095:	mov    ecx,DWORD PTR [ebp+0x8]
10005098:	lea    eax,[esi+0xc]
1000509b:	call   0x10004e7d
100050a0:	test   al,al
100050a2:	je     0x100050a9
100050a4:	mov    esi,DWORD PTR [esi+0x8]
100050a7:	jmp    0x100050ae
100050a9:	mov    DWORD PTR [ebp-0x4],esi
100050ac:	mov    esi,DWORD PTR [esi]
100050ae:	cmp    BYTE PTR [esi+0x45],0x0
100050b2:	je     0x10005095
100050b4:	mov    eax,DWORD PTR [ebp-0x4]
100050b7:	mov    DWORD PTR [ebx+0x4],eax
100050ba:	mov    DWORD PTR [ebx],edi
100050bc:	mov    eax,ebx
100050be:	pop    esi
100050bf:	leave  
100050c0:	ret    0x4
100050c3:	push   ebp
100050c4:	mov    ebp,esp
100050c6:	push   esi
100050c7:	mov    esi,eax
100050c9:	cmp    DWORD PTR [esi+0x14],ebx
100050cc:	push   edi
100050cd:	jae    0x100050d4
100050cf:	call   0x100571df
100050d4:	mov    edi,DWORD PTR [esi+0x14]
100050d7:	sub    edi,ebx
100050d9:	cmp    DWORD PTR [ebp+0xc],edi
100050dc:	jae    0x100050e1
100050de:	mov    edi,DWORD PTR [ebp+0xc]
100050e1:	mov    eax,DWORD PTR [ebp+0x8]
100050e4:	cmp    eax,esi
100050e6:	jne    0x100050fd
100050e8:	push   0xffffffff
100050ea:	add    edi,ebx
100050ec:	mov    esi,eax
100050ee:	call   0x100056ad
100050f3:	push   ebx
100050f4:	xor    edi,edi
100050f6:	call   0x100056ad
100050fb:	jmp    0x10005140
100050fd:	call   0x1000573f
10005102:	test   al,al
10005104:	je     0x10005140
10005106:	cmp    DWORD PTR [esi+0x18],0x8
1000510a:	jb     0x10005111
1000510c:	mov    eax,DWORD PTR [esi+0x4]
1000510f:	jmp    0x10005114
10005111:	lea    eax,[esi+0x4]
10005114:	mov    esi,DWORD PTR [ebp+0x8]
10005117:	mov    edx,DWORD PTR [esi+0x18]
1000511a:	cmp    edx,0x8
1000511d:	jb     0x10005124
1000511f:	mov    ecx,DWORD PTR [esi+0x4]
10005122:	jmp    0x10005127
10005124:	lea    ecx,[esi+0x4]
10005127:	lea    eax,[eax+ebx*2]
1000512a:	push   eax
1000512b:	push   edx
1000512c:	push   ecx
1000512d:	mov    eax,edi
1000512f:	call   0x100065b0
10005134:	add    esp,0xc
10005137:	mov    ecx,edi
10005139:	mov    eax,esi
1000513b:	call   0x10005728
10005140:	mov    eax,DWORD PTR [ebp+0x8]
10005143:	pop    edi
10005144:	pop    esi
10005145:	pop    ebp
10005146:	ret    0x8
10005149:	mov    ecx,DWORD PTR [esi+0x18]
1000514c:	cmp    ecx,0x8
1000514f:	push   ebx
10005150:	push   edi
10005151:	mov    edi,eax
10005153:	lea    ebx,[esi+0x4]
10005156:	jb     0x1000515c
10005158:	mov    eax,DWORD PTR [ebx]
1000515a:	jmp    0x1000515e
1000515c:	mov    eax,ebx
1000515e:	cmp    DWORD PTR [esp+0xc],eax
10005162:	jb     0x10005199
10005164:	cmp    ecx,0x8
10005167:	jb     0x1000516d
10005169:	mov    eax,DWORD PTR [ebx]
1000516b:	jmp    0x1000516f
1000516d:	mov    eax,ebx
1000516f:	mov    edx,DWORD PTR [esi+0x14]
10005172:	lea    eax,[eax+edx*2]
10005175:	cmp    eax,DWORD PTR [esp+0xc]
10005179:	jbe    0x10005199
1000517b:	cmp    ecx,0x8
1000517e:	jb     0x10005184
10005180:	mov    eax,DWORD PTR [ebx]
10005182:	jmp    0x10005186
10005184:	mov    eax,ebx
10005186:	mov    ebx,DWORD PTR [esp+0xc]
1000518a:	sub    ebx,eax
1000518c:	push   edi
1000518d:	sar    ebx,1
1000518f:	push   esi
10005190:	mov    eax,esi
10005192:	call   0x100050c3
10005197:	jmp    0x100051c9
10005199:	mov    eax,esi
1000519b:	call   0x1000573f
100051a0:	test   al,al
100051a2:	je     0x100051c7
100051a4:	mov    eax,DWORD PTR [esi+0x18]
100051a7:	cmp    eax,0x8
100051aa:	jb     0x100051ae
100051ac:	mov    ebx,DWORD PTR [ebx]
100051ae:	push   DWORD PTR [esp+0xc]
100051b2:	push   eax
100051b3:	push   ebx
100051b4:	mov    eax,edi
100051b6:	call   0x100065b0
100051bb:	add    esp,0xc
100051be:	mov    ecx,edi
100051c0:	mov    eax,esi
100051c2:	call   0x10005728
100051c7:	mov    eax,esi
100051c9:	pop    edi
100051ca:	pop    ebx
100051cb:	ret    0x4
100051ce:	cmp    BYTE PTR [esp+0x4],0x0
100051d3:	je     0x100051fd
100051d5:	cmp    DWORD PTR [esi+0x18],0x8
100051d9:	jb     0x100051fd
100051db:	test   ebx,ebx
100051dd:	lea    eax,[esi+0x4]
100051e0:	push   edi
100051e1:	mov    edi,DWORD PTR [eax]
100051e3:	jbe    0x100051f5
100051e5:	lea    ecx,[ebx+ebx*1]
100051e8:	push   ecx
100051e9:	push   edi
100051ea:	push   0x10
100051ec:	push   eax
100051ed:	call   0x100433c5
100051f2:	add    esp,0x10
100051f5:	push   edi
100051f6:	call   0x10042e92
100051fb:	pop    ecx
100051fc:	pop    edi
100051fd:	mov    ecx,ebx
100051ff:	mov    eax,esi
10005201:	mov    DWORD PTR [esi+0x18],0x7
10005208:	call   0x10005728
1000520d:	ret    0x4
10005210:	push   ebp
10005211:	mov    ebp,esp
10005213:	and    esp,0xfffffff8
10005216:	mov    eax,ds:0x10080c24
1000521b:	mov    edx,DWORD PTR [eax]
1000521d:	sub    esp,0xc
10005220:	push   esi
10005221:	push   eax
10005222:	mov    ecx,0x10080c20
10005227:	mov    esi,ecx
10005229:	push   esi
1000522a:	push   edx
1000522b:	push   ecx
1000522c:	lea    eax,[esp+0x18]
10005230:	push   eax
10005231:	call   0x10005bdc
10005236:	push   DWORD PTR ds:0x10080c24
1000523c:	call   0x10042e92
10005241:	and    DWORD PTR ds:0x10080c24,0x0
10005248:	and    DWORD PTR ds:0x10080c28,0x0
1000524f:	pop    ecx
10005250:	pop    esi
10005251:	mov    esp,ebp
10005253:	pop    ebp
10005254:	ret    
10005255:	push   ebp
10005256:	mov    ebp,esp
10005258:	sub    esp,0x14
1000525b:	push   ebx
1000525c:	mov    ebx,eax
1000525e:	xor    eax,eax
10005260:	cmp    DWORD PTR [ebx+0x8],eax
10005263:	push   esi
10005264:	push   edi
10005265:	mov    DWORD PTR [ebp-0x8],eax
10005268:	mov    DWORD PTR [ebp-0x4],eax
1000526b:	jne    0x10005287
1000526d:	mov    ecx,DWORD PTR [ebx+0x4]
10005270:	push   DWORD PTR [ebp+0xc]
10005273:	push   0x1
10005275:	mov    esi,ebx
10005277:	push   DWORD PTR [ebp+0x8]
1000527a:	call   0x10005845
1000527f:	mov    eax,DWORD PTR [ebp+0x8]
10005282:	jmp    0x100053d1
10005287:	mov    eax,DWORD PTR [ebx+0x4]
1000528a:	mov    eax,DWORD PTR [eax]
1000528c:	lea    edi,[ebp-0x10]
1000528f:	lea    esi,[ebp+0x10]
10005292:	mov    DWORD PTR [ebp-0xc],eax
10005295:	mov    DWORD PTR [ebp-0x10],ebx
10005298:	call   0x10004ada
1000529d:	test   al,al
1000529f:	je     0x100052bb
100052a1:	mov    esi,DWORD PTR [ebp+0x14]
100052a4:	mov    eax,DWORD PTR [ebp+0xc]
100052a7:	lea    ecx,[esi+0xc]
100052aa:	call   0x10005416
100052af:	test   al,al
100052b1:	je     0x100053b6
100052b7:	mov    ecx,esi
100052b9:	jmp    0x10005270
100052bb:	mov    eax,DWORD PTR [ebx+0x4]
100052be:	lea    edi,[ebp-0x10]
100052c1:	lea    esi,[ebp+0x10]
100052c4:	mov    DWORD PTR [ebp-0xc],eax
100052c7:	mov    DWORD PTR [ebp-0x10],ebx
100052ca:	call   0x10004ada
100052cf:	test   al,al
100052d1:	je     0x100052fc
100052d3:	mov    eax,DWORD PTR [ebx+0x4]
100052d6:	mov    eax,DWORD PTR [eax+0x8]
100052d9:	mov    ecx,DWORD PTR [ebp+0xc]
100052dc:	add    eax,0xc
100052df:	call   0x10005416
100052e4:	test   al,al
100052e6:	je     0x100053b6
100052ec:	push   DWORD PTR [ebp+0xc]
100052ef:	mov    eax,DWORD PTR [ebx+0x4]
100052f2:	mov    ecx,DWORD PTR [eax+0x8]
100052f5:	push   0x0
100052f7:	jmp    0x10005275
100052fc:	mov    edi,DWORD PTR [ebp+0x14]
100052ff:	mov    eax,DWORD PTR [ebp+0xc]
10005302:	lea    ecx,[edi+0xc]
10005305:	call   0x10005416
1000530a:	test   al,al
1000530c:	je     0x10005352
1000530e:	mov    eax,DWORD PTR [ebp+0x10]
10005311:	lea    esi,[ebp-0x8]
10005314:	mov    DWORD PTR [ebp-0x8],eax
10005317:	mov    DWORD PTR [ebp-0x4],edi
1000531a:	call   0x10005990
1000531f:	mov    eax,DWORD PTR [eax+0x4]
10005322:	mov    ecx,DWORD PTR [ebp+0xc]
10005325:	add    eax,0xc
10005328:	call   0x10005416
1000532d:	test   al,al
1000532f:	je     0x10005352
10005331:	mov    ecx,DWORD PTR [ebp-0x4]
10005334:	mov    eax,DWORD PTR [ecx+0x8]
10005337:	cmp    BYTE PTR [eax+0x45],0x0
1000533b:	push   DWORD PTR [ebp+0xc]
1000533e:	mov    esi,ebx
10005340:	je     0x10005349
10005342:	push   0x0
10005344:	jmp    0x10005277
10005349:	push   0x1
1000534b:	mov    ecx,edi
1000534d:	jmp    0x10005277
10005352:	mov    ecx,DWORD PTR [ebp+0xc]
10005355:	lea    eax,[edi+0xc]
10005358:	call   0x10005416
1000535d:	test   al,al
1000535f:	je     0x100053b6
10005361:	mov    eax,DWORD PTR [ebp+0x10]
10005364:	mov    DWORD PTR [ebp-0x8],eax
10005367:	mov    eax,DWORD PTR [ebx+0x4]
1000536a:	lea    esi,[ebp-0x8]
1000536d:	mov    DWORD PTR [ebp-0x4],edi
10005370:	mov    DWORD PTR [ebp-0xc],eax
10005373:	mov    DWORD PTR [ebp-0x10],ebx
10005376:	call   0x10005660
1000537b:	lea    edi,[ebp-0x10]
1000537e:	mov    esi,eax
10005380:	call   0x10004ada
10005385:	test   al,al
10005387:	jne    0x1000539b
10005389:	mov    ecx,DWORD PTR [ebp-0x4]
1000538c:	mov    eax,DWORD PTR [ebp+0xc]
1000538f:	add    ecx,0xc
10005392:	call   0x10005416
10005397:	test   al,al
10005399:	je     0x100053b6
1000539b:	mov    ecx,DWORD PTR [ebp+0x14]
1000539e:	mov    eax,DWORD PTR [ecx+0x8]
100053a1:	cmp    BYTE PTR [eax+0x45],0x0
100053a5:	push   DWORD PTR [ebp+0xc]
100053a8:	mov    esi,ebx
100053aa:	jne    0x10005342
100053ac:	mov    ecx,DWORD PTR [ebp-0x4]
100053af:	push   0x1
100053b1:	jmp    0x10005277
100053b6:	push   DWORD PTR [ebp+0xc]
100053b9:	push   ebx
100053ba:	lea    ebx,[ebp-0x14]
100053bd:	call   0x10005784
100053c2:	mov    edx,DWORD PTR [eax]
100053c4:	mov    ecx,DWORD PTR [ebp+0x8]
100053c7:	mov    DWORD PTR [ecx],edx
100053c9:	mov    eax,DWORD PTR [eax+0x4]
100053cc:	mov    DWORD PTR [ecx+0x4],eax
100053cf:	mov    eax,ecx
100053d1:	pop    edi
100053d2:	pop    esi
100053d3:	pop    ebx
100053d4:	leave  
100053d5:	ret    0x10
100053d8:	push   ebp
100053d9:	mov    ebp,esp
100053db:	push   ecx
100053dc:	mov    eax,DWORD PTR [edi+0x4]
100053df:	push   esi
100053e0:	mov    esi,DWORD PTR [eax+0x4]
100053e3:	mov    DWORD PTR [ebp-0x4],eax
100053e6:	jmp    0x10005401
100053e8:	mov    ecx,DWORD PTR [ebp+0x8]
100053eb:	lea    eax,[esi+0xc]
100053ee:	call   0x10005416
100053f3:	test   al,al
100053f5:	je     0x100053fc
100053f7:	mov    esi,DWORD PTR [esi+0x8]
100053fa:	jmp    0x10005401
100053fc:	mov    DWORD PTR [ebp-0x4],esi
100053ff:	mov    esi,DWORD PTR [esi]
10005401:	cmp    BYTE PTR [esi+0x45],0x0
10005405:	je     0x100053e8
10005407:	mov    eax,DWORD PTR [ebp-0x4]
1000540a:	mov    DWORD PTR [ebx+0x4],eax
1000540d:	mov    DWORD PTR [ebx],edi
1000540f:	mov    eax,ebx
10005411:	pop    esi
10005412:	leave  
10005413:	ret    0x4
10005416:	cmp    DWORD PTR [ecx+0x18],0x8
1000541a:	push   edi
1000541b:	mov    edi,DWORD PTR [ecx+0x14]
1000541e:	jb     0x10005425
10005420:	mov    ecx,DWORD PTR [ecx+0x4]
10005423:	jmp    0x10005428
10005425:	add    ecx,0x4
10005428:	push   ecx
10005429:	mov    ecx,DWORD PTR [eax+0x14]
1000542c:	call   0x100065cf
10005431:	xor    ecx,ecx
10005433:	test   eax,eax
10005435:	setl   cl
10005438:	mov    al,cl
1000543a:	pop    edi
1000543b:	ret    
1000543c:	push   esi
1000543d:	push   DWORD PTR [esp+0x8]
10005441:	mov    esi,ecx
10005443:	call   0x1000112a
10005448:	mov    DWORD PTR [esi],0x1006b96c
1000544e:	mov    eax,esi
10005450:	pop    esi
10005451:	ret    0x4
10005454:	push   ebp
10005455:	mov    ebp,esp
10005457:	sub    esp,0x18
1000545a:	push   esi
1000545b:	mov    esi,DWORD PTR [ebp+0x8]
1000545e:	mov    eax,DWORD PTR [esi+0x4]
10005461:	push   edi
10005462:	mov    edi,DWORD PTR [eax+0x4]
10005465:	mov    DWORD PTR [ebp-0x4],eax
10005468:	mov    al,0x1
1000546a:	mov    BYTE PTR [ebp-0x8],al
1000546d:	jmp    0x1000548b
1000546f:	mov    eax,DWORD PTR [ebp+0xc]
10005472:	lea    ecx,[edi+0xc]
10005475:	mov    DWORD PTR [ebp-0x4],edi
10005478:	call   0x10004e7d
1000547d:	test   al,al
1000547f:	mov    BYTE PTR [ebp-0x8],al
10005482:	je     0x10005488
10005484:	mov    edi,DWORD PTR [edi]
10005486:	jmp    0x1000548b
10005488:	mov    edi,DWORD PTR [edi+0x8]
1000548b:	cmp    BYTE PTR [edi+0x45],0x0
1000548f:	je     0x1000546f
10005491:	test   al,al
10005493:	mov    edi,DWORD PTR [ebp-0x4]
10005496:	mov    DWORD PTR [ebp-0xc],edi
10005499:	mov    DWORD PTR [ebp-0x10],esi
1000549c:	je     0x100054ea
1000549e:	mov    eax,DWORD PTR [esi+0x4]
100054a1:	mov    eax,DWORD PTR [eax]
100054a3:	mov    DWORD PTR [ebp-0x18],esi
100054a6:	lea    edi,[ebp-0x18]
100054a9:	lea    esi,[ebp-0x10]
100054ac:	mov    DWORD PTR [ebp-0x14],eax
100054af:	call   0x10004ada
100054b4:	test   al,al
100054b6:	je     0x100054dc
100054b8:	push   DWORD PTR [ebp+0xc]
100054bb:	mov    esi,DWORD PTR [ebp+0x8]
100054be:	push   0x1
100054c0:	mov    ecx,DWORD PTR [ebp-0x4]
100054c3:	lea    eax,[ebp-0x18]
100054c6:	push   eax
100054c7:	call   0x10005515
100054cc:	mov    ecx,DWORD PTR [eax]
100054ce:	mov    eax,DWORD PTR [eax+0x4]
100054d1:	mov    DWORD PTR [ebx],ecx
100054d3:	mov    DWORD PTR [ebx+0x4],eax
100054d6:	mov    BYTE PTR [ebx+0x8],0x1
100054da:	jmp    0x1000550d
100054dc:	lea    esi,[ebp-0x10]
100054df:	call   0x10005990
100054e4:	mov    edi,DWORD PTR [ebp-0xc]
100054e7:	mov    esi,DWORD PTR [ebp+0x8]
100054ea:	mov    ecx,DWORD PTR [ebp+0xc]
100054ed:	lea    eax,[edi+0xc]
100054f0:	call   0x10004e7d
100054f5:	test   al,al
100054f7:	je     0x10005501
100054f9:	push   DWORD PTR [ebp+0xc]
100054fc:	push   DWORD PTR [ebp-0x8]
100054ff:	jmp    0x100054c0
10005501:	mov    eax,DWORD PTR [ebp-0x10]
10005504:	mov    DWORD PTR [ebx],eax
10005506:	mov    DWORD PTR [ebx+0x4],edi
10005509:	mov    BYTE PTR [ebx+0x8],0x0
1000550d:	pop    edi
1000550e:	mov    eax,ebx
10005510:	pop    esi
10005511:	leave  
10005512:	ret    0x8
10005515:	push   0x48
10005517:	mov    eax,0x100605b3
1000551c:	call   0x10059a35
10005521:	mov    edi,ecx
10005523:	cmp    DWORD PTR [esi+0x8],0x4924923
1000552a:	jb     0x1000555e
1000552c:	push   0x1006d030
10005531:	lea    ecx,[ebp-0x2c]
10005534:	call   0x100011cd
10005539:	and    DWORD PTR [ebp-0x4],0x0
1000553d:	lea    eax,[ebp-0x2c]
10005540:	push   eax
10005541:	lea    ecx,[ebp-0x54]
10005544:	call   0x10001077
10005549:	push   0x10074da0
1000554e:	lea    eax,[ebp-0x54]
10005551:	push   eax
10005552:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10005559:	call   0x100479b4
1000555e:	push   DWORD PTR [ebp+0x10]
10005561:	mov    eax,DWORD PTR [esi+0x4]
10005564:	push   eax
10005565:	push   edi
10005566:	push   eax
10005567:	call   0x10005aad
1000556c:	inc    DWORD PTR [esi+0x8]
1000556f:	mov    ebx,eax
10005571:	mov    eax,DWORD PTR [esi+0x4]
10005574:	cmp    edi,eax
10005576:	jne    0x10005585
10005578:	mov    DWORD PTR [eax+0x4],ebx
1000557b:	mov    eax,DWORD PTR [esi+0x4]
1000557e:	mov    DWORD PTR [eax],ebx
10005580:	mov    eax,DWORD PTR [esi+0x4]
10005583:	jmp    0x100055a3
10005585:	cmp    BYTE PTR [ebp+0xc],0x0
10005589:	je     0x10005598
1000558b:	mov    DWORD PTR [edi],ebx
1000558d:	mov    eax,DWORD PTR [esi+0x4]
10005590:	cmp    edi,DWORD PTR [eax]
10005592:	jne    0x100055a6
10005594:	mov    DWORD PTR [eax],ebx
10005596:	jmp    0x100055a6
10005598:	mov    DWORD PTR [edi+0x8],ebx
1000559b:	mov    eax,DWORD PTR [esi+0x4]
1000559e:	cmp    edi,DWORD PTR [eax+0x8]
100055a1:	jne    0x100055a6
100055a3:	mov    DWORD PTR [eax+0x8],ebx
100055a6:	mov    edi,ebx
100055a8:	lea    eax,[ebx+0x4]
100055ab:	jmp    0x1000563a
100055b0:	mov    ecx,DWORD PTR [eax]
100055b2:	mov    edx,DWORD PTR [ecx+0x4]
100055b5:	cmp    ecx,DWORD PTR [edx]
100055b7:	jne    0x100055ee
100055b9:	mov    edx,DWORD PTR [edx+0x8]
100055bc:	cmp    BYTE PTR [edx+0x44],0x0
100055c0:	je     0x100055f6
100055c2:	cmp    edi,DWORD PTR [ecx+0x8]
100055c5:	jne    0x100055cf
100055c7:	push   esi
100055c8:	mov    edi,ecx
100055ca:	call   0x10005c98
100055cf:	mov    eax,DWORD PTR [edi+0x4]
100055d2:	mov    BYTE PTR [eax+0x44],0x1
100055d6:	mov    eax,DWORD PTR [edi+0x4]
100055d9:	mov    eax,DWORD PTR [eax+0x4]
100055dc:	mov    BYTE PTR [eax+0x44],0x0
100055e0:	mov    eax,DWORD PTR [edi+0x4]
100055e3:	mov    ecx,DWORD PTR [eax+0x4]
100055e6:	push   esi
100055e7:	call   0x10005cd8
100055ec:	jmp    0x10005637
100055ee:	mov    edx,DWORD PTR [edx]
100055f0:	cmp    BYTE PTR [edx+0x44],0x0
100055f4:	jne    0x1000560e
100055f6:	mov    BYTE PTR [ecx+0x44],0x1
100055fa:	mov    BYTE PTR [edx+0x44],0x1
100055fe:	mov    ecx,DWORD PTR [eax]
10005600:	mov    ecx,DWORD PTR [ecx+0x4]
10005603:	mov    BYTE PTR [ecx+0x44],0x0
10005607:	mov    eax,DWORD PTR [eax]
10005609:	mov    edi,DWORD PTR [eax+0x4]
1000560c:	jmp    0x10005637
1000560e:	cmp    edi,DWORD PTR [ecx]
10005610:	jne    0x1000561a
10005612:	push   esi
10005613:	mov    edi,ecx
10005615:	call   0x10005cd8
1000561a:	mov    eax,DWORD PTR [edi+0x4]
1000561d:	mov    BYTE PTR [eax+0x44],0x1
10005621:	mov    eax,DWORD PTR [edi+0x4]
10005624:	mov    eax,DWORD PTR [eax+0x4]
10005627:	mov    BYTE PTR [eax+0x44],0x0
1000562b:	mov    eax,DWORD PTR [edi+0x4]
1000562e:	mov    ecx,DWORD PTR [eax+0x4]
10005631:	push   esi
10005632:	call   0x10005c98
10005637:	lea    eax,[edi+0x4]
1000563a:	mov    ecx,DWORD PTR [eax]
1000563c:	cmp    BYTE PTR [ecx+0x44],0x0
10005640:	je     0x100055b0
10005646:	mov    eax,DWORD PTR [esi+0x4]
10005649:	mov    eax,DWORD PTR [eax+0x4]
1000564c:	mov    BYTE PTR [eax+0x44],0x1
10005650:	mov    eax,DWORD PTR [ebp+0x8]
10005653:	mov    DWORD PTR [eax+0x4],ebx
10005656:	mov    DWORD PTR [eax],esi
10005658:	call   0x10059b0d
1000565d:	ret    0xc
10005660:	push   ebx
10005661:	xor    ebx,ebx
10005663:	cmp    DWORD PTR [esi],ebx
10005665:	jne    0x1000566c
10005667:	call   0x100433b0
1000566c:	mov    eax,DWORD PTR [esi+0x4]
1000566f:	cmp    BYTE PTR [eax+0x45],bl
10005672:	je     0x1000567b
10005674:	call   0x100433b0
10005679:	jmp    0x100056a9
1000567b:	mov    ecx,DWORD PTR [eax+0x8]
1000567e:	cmp    BYTE PTR [ecx+0x45],bl
10005681:	jne    0x1000569e
10005683:	jmp    0x10005687
10005685:	mov    ecx,eax
10005687:	mov    eax,DWORD PTR [ecx]
10005689:	cmp    BYTE PTR [eax+0x45],bl
1000568c:	je     0x10005685
1000568e:	mov    DWORD PTR [esi+0x4],ecx
10005691:	jmp    0x100056a9
10005693:	mov    ecx,DWORD PTR [esi+0x4]
10005696:	cmp    ecx,DWORD PTR [eax+0x8]
10005699:	jne    0x100056a6
1000569b:	mov    DWORD PTR [esi+0x4],eax
1000569e:	mov    eax,DWORD PTR [eax+0x4]
100056a1:	cmp    BYTE PTR [eax+0x45],bl
100056a4:	je     0x10005693
100056a6:	mov    DWORD PTR [esi+0x4],eax
100056a9:	mov    eax,esi
100056ab:	pop    ebx
100056ac:	ret    
100056ad:	push   ebp
100056ae:	mov    ebp,esp
100056b0:	push   ecx
100056b1:	push   ecx
100056b2:	cmp    DWORD PTR [esi+0x14],edi
100056b5:	jae    0x100056bc
100056b7:	call   0x100571df
100056bc:	mov    eax,DWORD PTR [esi+0x14]
100056bf:	sub    eax,edi
100056c1:	cmp    eax,DWORD PTR [ebp+0x8]
100056c4:	jae    0x100056c9
100056c6:	mov    DWORD PTR [ebp+0x8],eax
100056c9:	cmp    DWORD PTR [ebp+0x8],0x0
100056cd:	jbe    0x10005722
100056cf:	mov    ecx,DWORD PTR [esi+0x18]
100056d2:	cmp    ecx,0x8
100056d5:	push   ebx
100056d6:	lea    edx,[esi+0x4]
100056d9:	jb     0x100056e2
100056db:	mov    ebx,DWORD PTR [edx]
100056dd:	mov    DWORD PTR [ebp-0x4],ebx
100056e0:	jmp    0x100056e5
100056e2:	mov    DWORD PTR [ebp-0x4],edx
100056e5:	cmp    ecx,0x8
100056e8:	jb     0x100056ec
100056ea:	mov    edx,DWORD PTR [edx]
100056ec:	mov    ebx,DWORD PTR [ebp+0x8]
100056ef:	sub    eax,ebx
100056f1:	add    eax,eax
100056f3:	push   eax
100056f4:	mov    DWORD PTR [ebp-0x8],edx
100056f7:	mov    edx,DWORD PTR [ebp-0x4]
100056fa:	lea    eax,[edi+ebx*1]
100056fd:	lea    eax,[edx+eax*2]
10005700:	push   eax
10005701:	mov    eax,DWORD PTR [ebp-0x8]
10005704:	sub    ecx,edi
10005706:	add    ecx,ecx
10005708:	push   ecx
10005709:	lea    eax,[eax+edi*2]
1000570c:	push   eax
1000570d:	call   0x10042ea6
10005712:	mov    ecx,DWORD PTR [esi+0x14]
10005715:	add    esp,0x10
10005718:	sub    ecx,ebx
1000571a:	mov    eax,esi
1000571c:	call   0x10005728
10005721:	pop    ebx
10005722:	mov    eax,esi
10005724:	leave  
10005725:	ret    0x4
10005728:	cmp    DWORD PTR [eax+0x18],0x8
1000572c:	mov    DWORD PTR [eax+0x14],ecx
1000572f:	jb     0x10005736
10005731:	mov    eax,DWORD PTR [eax+0x4]
10005734:	jmp    0x10005739
10005736:	add    eax,0x4
10005739:	and    WORD PTR [eax+ecx*2],0x0
1000573e:	ret    
1000573f:	cmp    edi,0x7ffffffe
10005745:	push   esi
10005746:	mov    esi,eax
10005748:	jbe    0x1000574f
1000574a:	call   0x100571a0
1000574f:	mov    eax,DWORD PTR [esi+0x18]
10005752:	cmp    eax,edi
10005754:	jae    0x10005762
10005756:	push   DWORD PTR [esi+0x14]
10005759:	push   edi
1000575a:	push   esi
1000575b:	call   0x10005aff
10005760:	jmp    0x1000577a
10005762:	test   edi,edi
10005764:	jne    0x1000577a
10005766:	and    DWORD PTR [esi+0x14],edi
10005769:	cmp    eax,0x8
1000576c:	jb     0x10005773
1000576e:	mov    esi,DWORD PTR [esi+0x4]
10005771:	jmp    0x10005776
10005773:	add    esi,0x4
10005776:	and    WORD PTR [esi],0x0
1000577a:	xor    eax,eax
1000577c:	cmp    eax,edi
1000577e:	sbb    eax,eax
10005780:	neg    eax
10005782:	pop    esi
10005783:	ret    
10005784:	push   ebp
10005785:	mov    ebp,esp
10005787:	sub    esp,0x18
1000578a:	push   esi
1000578b:	mov    esi,DWORD PTR [ebp+0x8]
1000578e:	mov    eax,DWORD PTR [esi+0x4]
10005791:	push   edi
10005792:	mov    edi,DWORD PTR [eax+0x4]
10005795:	mov    DWORD PTR [ebp-0x4],eax
10005798:	mov    al,0x1
1000579a:	mov    BYTE PTR [ebp-0x8],al
1000579d:	jmp    0x100057bb
1000579f:	mov    eax,DWORD PTR [ebp+0xc]
100057a2:	lea    ecx,[edi+0xc]
100057a5:	mov    DWORD PTR [ebp-0x4],edi
100057a8:	call   0x10005416
100057ad:	test   al,al
100057af:	mov    BYTE PTR [ebp-0x8],al
100057b2:	je     0x100057b8
100057b4:	mov    edi,DWORD PTR [edi]
100057b6:	jmp    0x100057bb
100057b8:	mov    edi,DWORD PTR [edi+0x8]
100057bb:	cmp    BYTE PTR [edi+0x45],0x0
100057bf:	je     0x1000579f
100057c1:	test   al,al
100057c3:	mov    edi,DWORD PTR [ebp-0x4]
100057c6:	mov    DWORD PTR [ebp-0xc],edi
100057c9:	mov    DWORD PTR [ebp-0x10],esi
100057cc:	je     0x1000581a
100057ce:	mov    eax,DWORD PTR [esi+0x4]
100057d1:	mov    eax,DWORD PTR [eax]
100057d3:	mov    DWORD PTR [ebp-0x18],esi
100057d6:	lea    edi,[ebp-0x18]
100057d9:	lea    esi,[ebp-0x10]
100057dc:	mov    DWORD PTR [ebp-0x14],eax
100057df:	call   0x10004ada
100057e4:	test   al,al
100057e6:	je     0x1000580c
100057e8:	push   DWORD PTR [ebp+0xc]
100057eb:	mov    esi,DWORD PTR [ebp+0x8]
100057ee:	push   0x1
100057f0:	mov    ecx,DWORD PTR [ebp-0x4]
100057f3:	lea    eax,[ebp-0x18]
100057f6:	push   eax
100057f7:	call   0x10005845
100057fc:	mov    ecx,DWORD PTR [eax]
100057fe:	mov    eax,DWORD PTR [eax+0x4]
10005801:	mov    DWORD PTR [ebx],ecx
10005803:	mov    DWORD PTR [ebx+0x4],eax
10005806:	mov    BYTE PTR [ebx+0x8],0x1
1000580a:	jmp    0x1000583d
1000580c:	lea    esi,[ebp-0x10]
1000580f:	call   0x10005990
10005814:	mov    edi,DWORD PTR [ebp-0xc]
10005817:	mov    esi,DWORD PTR [ebp+0x8]
1000581a:	mov    ecx,DWORD PTR [ebp+0xc]
1000581d:	lea    eax,[edi+0xc]
10005820:	call   0x10005416
10005825:	test   al,al
10005827:	je     0x10005831
10005829:	push   DWORD PTR [ebp+0xc]
1000582c:	push   DWORD PTR [ebp-0x8]
1000582f:	jmp    0x100057f0
10005831:	mov    eax,DWORD PTR [ebp-0x10]
10005834:	mov    DWORD PTR [ebx],eax
10005836:	mov    DWORD PTR [ebx+0x4],edi
10005839:	mov    BYTE PTR [ebx+0x8],0x0
1000583d:	pop    edi
1000583e:	mov    eax,ebx
10005840:	pop    esi
10005841:	leave  
10005842:	ret    0x8
10005845:	push   0x48
10005847:	mov    eax,0x100605b3
1000584c:	call   0x10059a35
10005851:	mov    edi,ecx
10005853:	cmp    DWORD PTR [esi+0x8],0x4924923
1000585a:	jb     0x1000588e
1000585c:	push   0x1006d030
10005861:	lea    ecx,[ebp-0x2c]
10005864:	call   0x100011cd
10005869:	and    DWORD PTR [ebp-0x4],0x0
1000586d:	lea    eax,[ebp-0x2c]
10005870:	push   eax
10005871:	lea    ecx,[ebp-0x54]
10005874:	call   0x10001077
10005879:	push   0x10074da0
1000587e:	lea    eax,[ebp-0x54]
10005881:	push   eax
10005882:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10005889:	call   0x100479b4
1000588e:	push   DWORD PTR [ebp+0x10]
10005891:	mov    eax,DWORD PTR [esi+0x4]
10005894:	push   eax
10005895:	push   edi
10005896:	push   eax
10005897:	call   0x10005d1a
1000589c:	inc    DWORD PTR [esi+0x8]
1000589f:	mov    ebx,eax
100058a1:	mov    eax,DWORD PTR [esi+0x4]
100058a4:	cmp    edi,eax
100058a6:	jne    0x100058b5
100058a8:	mov    DWORD PTR [eax+0x4],ebx
100058ab:	mov    eax,DWORD PTR [esi+0x4]
100058ae:	mov    DWORD PTR [eax],ebx
100058b0:	mov    eax,DWORD PTR [esi+0x4]
100058b3:	jmp    0x100058d3
100058b5:	cmp    BYTE PTR [ebp+0xc],0x0
100058b9:	je     0x100058c8
100058bb:	mov    DWORD PTR [edi],ebx
100058bd:	mov    eax,DWORD PTR [esi+0x4]
100058c0:	cmp    edi,DWORD PTR [eax]
100058c2:	jne    0x100058d6
100058c4:	mov    DWORD PTR [eax],ebx
100058c6:	jmp    0x100058d6
100058c8:	mov    DWORD PTR [edi+0x8],ebx
100058cb:	mov    eax,DWORD PTR [esi+0x4]
100058ce:	cmp    edi,DWORD PTR [eax+0x8]
100058d1:	jne    0x100058d6
100058d3:	mov    DWORD PTR [eax+0x8],ebx
100058d6:	mov    edi,ebx
100058d8:	lea    eax,[ebx+0x4]
100058db:	jmp    0x1000596a
100058e0:	mov    ecx,DWORD PTR [eax]
100058e2:	mov    edx,DWORD PTR [ecx+0x4]
100058e5:	cmp    ecx,DWORD PTR [edx]
100058e7:	jne    0x1000591e
100058e9:	mov    edx,DWORD PTR [edx+0x8]
100058ec:	cmp    BYTE PTR [edx+0x44],0x0
100058f0:	je     0x10005926
100058f2:	cmp    edi,DWORD PTR [ecx+0x8]
100058f5:	jne    0x100058ff
100058f7:	push   esi
100058f8:	mov    edi,ecx
100058fa:	call   0x10005c98
100058ff:	mov    eax,DWORD PTR [edi+0x4]
10005902:	mov    BYTE PTR [eax+0x44],0x1
10005906:	mov    eax,DWORD PTR [edi+0x4]
10005909:	mov    eax,DWORD PTR [eax+0x4]
1000590c:	mov    BYTE PTR [eax+0x44],0x0
10005910:	mov    eax,DWORD PTR [edi+0x4]
10005913:	mov    ecx,DWORD PTR [eax+0x4]
10005916:	push   esi
10005917:	call   0x10005cd8
1000591c:	jmp    0x10005967
1000591e:	mov    edx,DWORD PTR [edx]
10005920:	cmp    BYTE PTR [edx+0x44],0x0
10005924:	jne    0x1000593e
10005926:	mov    BYTE PTR [ecx+0x44],0x1
1000592a:	mov    BYTE PTR [edx+0x44],0x1
1000592e:	mov    ecx,DWORD PTR [eax]
10005930:	mov    ecx,DWORD PTR [ecx+0x4]
10005933:	mov    BYTE PTR [ecx+0x44],0x0
10005937:	mov    eax,DWORD PTR [eax]
10005939:	mov    edi,DWORD PTR [eax+0x4]
1000593c:	jmp    0x10005967
1000593e:	cmp    edi,DWORD PTR [ecx]
10005940:	jne    0x1000594a
10005942:	push   esi
10005943:	mov    edi,ecx
10005945:	call   0x10005cd8
1000594a:	mov    eax,DWORD PTR [edi+0x4]
1000594d:	mov    BYTE PTR [eax+0x44],0x1
10005951:	mov    eax,DWORD PTR [edi+0x4]
10005954:	mov    eax,DWORD PTR [eax+0x4]
10005957:	mov    BYTE PTR [eax+0x44],0x0
1000595b:	mov    eax,DWORD PTR [edi+0x4]
1000595e:	mov    ecx,DWORD PTR [eax+0x4]
10005961:	push   esi
10005962:	call   0x10005c98
10005967:	lea    eax,[edi+0x4]
1000596a:	mov    ecx,DWORD PTR [eax]
1000596c:	cmp    BYTE PTR [ecx+0x44],0x0
10005970:	je     0x100058e0
10005976:	mov    eax,DWORD PTR [esi+0x4]
10005979:	mov    eax,DWORD PTR [eax+0x4]
1000597c:	mov    BYTE PTR [eax+0x44],0x1
10005980:	mov    eax,DWORD PTR [ebp+0x8]
10005983:	mov    DWORD PTR [eax+0x4],ebx
10005986:	mov    DWORD PTR [eax],esi
10005988:	call   0x10059b0d
1000598d:	ret    0xc
10005990:	push   ebx
10005991:	xor    ebx,ebx
10005993:	cmp    DWORD PTR [esi],ebx
10005995:	jne    0x1000599c
10005997:	call   0x100433b0
1000599c:	mov    eax,DWORD PTR [esi+0x4]
1000599f:	cmp    BYTE PTR [eax+0x45],bl
100059a2:	je     0x100059b1
100059a4:	mov    eax,DWORD PTR [eax+0x8]
100059a7:	mov    DWORD PTR [esi+0x4],eax
100059aa:	cmp    BYTE PTR [eax+0x45],bl
100059ad:	je     0x100059ed
100059af:	jmp    0x100059e3
100059b1:	mov    ecx,DWORD PTR [eax]
100059b3:	cmp    BYTE PTR [ecx+0x45],bl
100059b6:	jne    0x100059d3
100059b8:	jmp    0x100059bc
100059ba:	mov    ecx,eax
100059bc:	mov    eax,DWORD PTR [ecx+0x8]
100059bf:	cmp    BYTE PTR [eax+0x45],bl
100059c2:	je     0x100059ba
100059c4:	mov    DWORD PTR [esi+0x4],ecx
100059c7:	jmp    0x100059ed
100059c9:	mov    ecx,DWORD PTR [esi+0x4]
100059cc:	cmp    ecx,DWORD PTR [eax]
100059ce:	jne    0x100059db
100059d0:	mov    DWORD PTR [esi+0x4],eax
100059d3:	mov    eax,DWORD PTR [eax+0x4]
100059d6:	cmp    BYTE PTR [eax+0x45],bl
100059d9:	je     0x100059c9
100059db:	mov    ecx,DWORD PTR [esi+0x4]
100059de:	cmp    BYTE PTR [ecx+0x45],bl
100059e1:	je     0x100059ea
100059e3:	call   0x100433b0
100059e8:	jmp    0x100059ed
100059ea:	mov    DWORD PTR [esi+0x4],eax
100059ed:	mov    eax,esi
100059ef:	pop    ebx
100059f0:	ret    
100059f1:	push   ebp
100059f2:	mov    ebp,esp
100059f4:	sub    esp,0x10
100059f7:	mov    eax,ds:0x10080c30
100059fc:	mov    eax,DWORD PTR [eax]
100059fe:	push   ebx
100059ff:	push   esi
10005a00:	push   edi
10005a01:	mov    ebx,0x10080c2c
10005a06:	lea    edi,[ebp-0xc]
10005a09:	lea    esi,[ebp+0xc]
10005a0c:	mov    DWORD PTR [ebp-0x8],eax
10005a0f:	mov    DWORD PTR [ebp-0xc],ebx
10005a12:	call   0x10004ada
10005a17:	test   al,al
10005a19:	je     0x10005a89
10005a1b:	mov    eax,ds:0x10080c30
10005a20:	lea    edi,[ebp-0xc]
10005a23:	lea    esi,[ebp+0x14]
10005a26:	mov    DWORD PTR [ebp-0x8],eax
10005a29:	mov    DWORD PTR [ebp-0xc],ebx
10005a2c:	call   0x10004ada
10005a31:	test   al,al
10005a33:	je     0x10005a89
10005a35:	mov    eax,ds:0x10080c30
10005a3a:	push   DWORD PTR [eax+0x4]
10005a3d:	mov    ecx,ebx
10005a3f:	call   0x100063b7
10005a44:	mov    eax,ds:0x10080c30
10005a49:	mov    DWORD PTR [eax+0x4],eax
10005a4c:	mov    eax,ds:0x10080c30
10005a51:	and    DWORD PTR ds:0x10080c34,0x0
10005a58:	mov    DWORD PTR [eax],eax
10005a5a:	mov    eax,ds:0x10080c30
10005a5f:	mov    DWORD PTR [eax+0x8],eax
10005a62:	mov    eax,ds:0x10080c30
10005a67:	mov    ecx,DWORD PTR [eax]
10005a69:	mov    eax,DWORD PTR [ebp+0x8]
10005a6c:	mov    DWORD PTR [eax],ebx
10005a6e:	jmp    0x10005aa3
10005a70:	mov    edi,DWORD PTR [ebp+0xc]
10005a73:	mov    ebx,DWORD PTR [ebp+0x10]
10005a76:	lea    esi,[ebp+0xc]
10005a79:	call   0x10005660
10005a7e:	push   ebx
10005a7f:	push   edi
10005a80:	lea    eax,[ebp-0xc]
10005a83:	push   eax
10005a84:	call   0x10005d6c
10005a89:	lea    edi,[ebp+0x14]
10005a8c:	lea    esi,[ebp+0xc]
10005a8f:	call   0x10004ada
10005a94:	test   al,al
10005a96:	je     0x10005a70
10005a98:	mov    ecx,DWORD PTR [ebp+0xc]
10005a9b:	mov    eax,DWORD PTR [ebp+0x8]
10005a9e:	mov    DWORD PTR [eax],ecx
10005aa0:	mov    ecx,DWORD PTR [ebp+0x10]
10005aa3:	pop    edi
10005aa4:	pop    esi
10005aa5:	mov    DWORD PTR [eax+0x4],ecx
10005aa8:	pop    ebx
10005aa9:	leave  
10005aaa:	ret    0x14
10005aad:	push   0x8
10005aaf:	mov    eax,0x1005fcd8
10005ab4:	call   0x10059a68
10005ab9:	push   0x48
10005abb:	call   0x1004349e
10005ac0:	mov    esi,eax
10005ac2:	pop    ecx
10005ac3:	mov    DWORD PTR [ebp-0x14],esi
10005ac6:	test   esi,esi
10005ac8:	mov    DWORD PTR [ebp-0x4],0x1
10005acf:	je     0x10005ae2
10005ad1:	push   DWORD PTR [ebp+0x10]
10005ad4:	mov    ecx,DWORD PTR [ebp+0x14]
10005ad7:	push   DWORD PTR [ebp+0xc]
10005ada:	push   DWORD PTR [ebp+0x8]
10005add:	call   0x1000631d
10005ae2:	mov    eax,esi
10005ae4:	call   0x10059b0d
10005ae9:	ret    0x10
10005aec:	push   DWORD PTR [ebp-0x14]
10005aef:	call   0x10042e92
10005af4:	pop    ecx
10005af5:	push   0x0
10005af7:	push   0x0
10005af9:	call   0x100479b4
10005afe:	int3   
10005aff:	push   0x8
10005b01:	mov    eax,0x1005fcb8
10005b06:	call   0x10059a68
10005b0b:	mov    esi,DWORD PTR [ebp+0x8]
10005b0e:	mov    edi,DWORD PTR [ebp+0xc]
10005b11:	or     edi,0x7
10005b14:	cmp    edi,0x7ffffffe
10005b1a:	jbe    0x10005b21
10005b1c:	mov    edi,DWORD PTR [ebp+0xc]
10005b1f:	jmp    0x10005b48
10005b21:	xor    edx,edx
10005b23:	push   0x3
10005b25:	mov    eax,edi
10005b27:	pop    ebx
10005b28:	div    ebx
10005b2a:	mov    ecx,DWORD PTR [esi+0x18]
10005b2d:	mov    DWORD PTR [ebp-0x14],ecx
10005b30:	shr    DWORD PTR [ebp-0x14],1
10005b33:	mov    edx,DWORD PTR [ebp-0x14]
10005b36:	cmp    eax,edx
10005b38:	jae    0x10005b48
10005b3a:	mov    eax,0x7ffffffe
10005b3f:	sub    eax,edx
10005b41:	cmp    ecx,eax
10005b43:	ja     0x10005b48
10005b45:	lea    edi,[edx+ecx*1]
10005b48:	and    DWORD PTR [ebp-0x4],0x0
10005b4c:	lea    ecx,[edi+0x1]
10005b4f:	call   0x10006012
10005b54:	mov    DWORD PTR [ebp+0xc],eax
10005b57:	jmp    0x10005b7d
10005b59:	mov    eax,DWORD PTR [ebp+0xc]
10005b5c:	lea    ecx,[eax+0x1]
10005b5f:	mov    DWORD PTR [ebp-0x10],esp
10005b62:	mov    DWORD PTR [ebp-0x14],eax
10005b65:	mov    BYTE PTR [ebp-0x4],0x2
10005b69:	call   0x10006012
10005b6e:	mov    DWORD PTR [ebp+0xc],eax
10005b71:	mov    eax,0x10005b77
10005b76:	ret    
10005b77:	mov    esi,DWORD PTR [ebp+0x8]
10005b7a:	mov    edi,DWORD PTR [ebp-0x14]
10005b7d:	cmp    DWORD PTR [ebp+0x10],0x0
10005b81:	jbe    0x10005ba4
10005b83:	cmp    DWORD PTR [esi+0x18],0x8
10005b87:	jb     0x10005b8e
10005b89:	mov    eax,DWORD PTR [esi+0x4]
10005b8c:	jmp    0x10005b91
10005b8e:	lea    eax,[esi+0x4]
10005b91:	push   eax
10005b92:	lea    eax,[edi+0x1]
10005b95:	push   eax
10005b96:	push   DWORD PTR [ebp+0xc]
10005b99:	mov    eax,DWORD PTR [ebp+0x10]
10005b9c:	call   0x100065b0
10005ba1:	add    esp,0xc
10005ba4:	push   0x1
10005ba6:	xor    ebx,ebx
10005ba8:	call   0x100051ce
10005bad:	mov    eax,DWORD PTR [ebp+0xc]
10005bb0:	mov    ecx,DWORD PTR [ebp+0x10]
10005bb3:	mov    DWORD PTR [esi+0x4],eax
10005bb6:	mov    eax,esi
10005bb8:	mov    DWORD PTR [esi+0x18],edi
10005bbb:	call   0x10005728
10005bc0:	call   0x10059b0d
10005bc5:	ret    0xc
10005bc8:	mov    esi,DWORD PTR [ebp+0x8]
10005bcb:	push   0x1
10005bcd:	xor    ebx,ebx
10005bcf:	call   0x100051ce
10005bd4:	push   ebx
10005bd5:	push   ebx
10005bd6:	call   0x100479b4
10005bdb:	int3   
10005bdc:	push   ebp
10005bdd:	mov    ebp,esp
10005bdf:	sub    esp,0x10
10005be2:	mov    eax,ds:0x10080c24
10005be7:	mov    eax,DWORD PTR [eax]
10005be9:	push   ebx
10005bea:	push   esi
10005beb:	push   edi
10005bec:	mov    ebx,0x10080c20
10005bf1:	lea    edi,[ebp-0xc]
10005bf4:	lea    esi,[ebp+0xc]
10005bf7:	mov    DWORD PTR [ebp-0x8],eax
10005bfa:	mov    DWORD PTR [ebp-0xc],ebx
10005bfd:	call   0x10004ada
10005c02:	test   al,al
10005c04:	je     0x10005c74
10005c06:	mov    eax,ds:0x10080c24
10005c0b:	lea    edi,[ebp-0xc]
10005c0e:	lea    esi,[ebp+0x14]
10005c11:	mov    DWORD PTR [ebp-0x8],eax
10005c14:	mov    DWORD PTR [ebp-0xc],ebx
10005c17:	call   0x10004ada
10005c1c:	test   al,al
10005c1e:	je     0x10005c74
10005c20:	mov    eax,ds:0x10080c24
10005c25:	push   DWORD PTR [eax+0x4]
10005c28:	mov    ecx,ebx
10005c2a:	call   0x10006409
10005c2f:	mov    eax,ds:0x10080c24
10005c34:	mov    DWORD PTR [eax+0x4],eax
10005c37:	mov    eax,ds:0x10080c24
10005c3c:	and    DWORD PTR ds:0x10080c28,0x0
10005c43:	mov    DWORD PTR [eax],eax
10005c45:	mov    eax,ds:0x10080c24
10005c4a:	mov    DWORD PTR [eax+0x8],eax
10005c4d:	mov    eax,ds:0x10080c24
10005c52:	mov    ecx,DWORD PTR [eax]
10005c54:	mov    eax,DWORD PTR [ebp+0x8]
10005c57:	mov    DWORD PTR [eax],ebx
10005c59:	jmp    0x10005c8e
10005c5b:	mov    edi,DWORD PTR [ebp+0xc]
10005c5e:	mov    ebx,DWORD PTR [ebp+0x10]
10005c61:	lea    esi,[ebp+0xc]
10005c64:	call   0x10005660
10005c69:	push   ebx
10005c6a:	push   edi
10005c6b:	lea    eax,[ebp-0xc]
10005c6e:	push   eax
10005c6f:	call   0x1000605c
10005c74:	lea    edi,[ebp+0x14]
10005c77:	lea    esi,[ebp+0xc]
10005c7a:	call   0x10004ada
10005c7f:	test   al,al
10005c81:	je     0x10005c5b
10005c83:	mov    ecx,DWORD PTR [ebp+0xc]
10005c86:	mov    eax,DWORD PTR [ebp+0x8]
10005c89:	mov    DWORD PTR [eax],ecx
10005c8b:	mov    ecx,DWORD PTR [ebp+0x10]
10005c8e:	pop    edi
10005c8f:	pop    esi
10005c90:	mov    DWORD PTR [eax+0x4],ecx
10005c93:	pop    ebx
10005c94:	leave  
10005c95:	ret    0x14
10005c98:	mov    eax,DWORD PTR [ecx+0x8]
10005c9b:	mov    edx,DWORD PTR [eax]
10005c9d:	mov    DWORD PTR [ecx+0x8],edx
10005ca0:	mov    edx,DWORD PTR [eax]
10005ca2:	cmp    BYTE PTR [edx+0x45],0x0
10005ca6:	jne    0x10005cab
10005ca8:	mov    DWORD PTR [edx+0x4],ecx
10005cab:	mov    edx,DWORD PTR [ecx+0x4]
10005cae:	mov    DWORD PTR [eax+0x4],edx
10005cb1:	mov    edx,DWORD PTR [esp+0x4]
10005cb5:	mov    edx,DWORD PTR [edx+0x4]
10005cb8:	cmp    ecx,DWORD PTR [edx+0x4]
10005cbb:	jne    0x10005cc2
10005cbd:	mov    DWORD PTR [edx+0x4],eax
10005cc0:	jmp    0x10005cd0
10005cc2:	mov    edx,DWORD PTR [ecx+0x4]
10005cc5:	cmp    ecx,DWORD PTR [edx]
10005cc7:	jne    0x10005ccd
10005cc9:	mov    DWORD PTR [edx],eax
10005ccb:	jmp    0x10005cd0
10005ccd:	mov    DWORD PTR [edx+0x8],eax
10005cd0:	mov    DWORD PTR [eax],ecx
10005cd2:	mov    DWORD PTR [ecx+0x4],eax
10005cd5:	ret    0x4
10005cd8:	mov    eax,DWORD PTR [ecx]
10005cda:	mov    edx,DWORD PTR [eax+0x8]
10005cdd:	mov    DWORD PTR [ecx],edx
10005cdf:	mov    edx,DWORD PTR [eax+0x8]
10005ce2:	cmp    BYTE PTR [edx+0x45],0x0
10005ce6:	jne    0x10005ceb
10005ce8:	mov    DWORD PTR [edx+0x4],ecx
10005ceb:	mov    edx,DWORD PTR [ecx+0x4]
10005cee:	mov    DWORD PTR [eax+0x4],edx
10005cf1:	mov    edx,DWORD PTR [esp+0x4]
10005cf5:	mov    edx,DWORD PTR [edx+0x4]
10005cf8:	cmp    ecx,DWORD PTR [edx+0x4]
10005cfb:	jne    0x10005d02
10005cfd:	mov    DWORD PTR [edx+0x4],eax
10005d00:	jmp    0x10005d11
10005d02:	mov    edx,DWORD PTR [ecx+0x4]
10005d05:	cmp    ecx,DWORD PTR [edx+0x8]
10005d08:	jne    0x10005d0f
10005d0a:	mov    DWORD PTR [edx+0x8],eax
10005d0d:	jmp    0x10005d11
10005d0f:	mov    DWORD PTR [edx],eax
10005d11:	mov    DWORD PTR [eax+0x8],ecx
10005d14:	mov    DWORD PTR [ecx+0x4],eax
10005d17:	ret    0x4
10005d1a:	push   0x8
10005d1c:	mov    eax,0x10060590
10005d21:	call   0x10059a68
10005d26:	push   0x48
10005d28:	call   0x1004349e
10005d2d:	mov    edi,eax
10005d2f:	pop    ecx
10005d30:	mov    DWORD PTR [ebp-0x14],edi
10005d33:	test   edi,edi
10005d35:	mov    DWORD PTR [ebp-0x4],0x1
10005d3c:	je     0x10005d4f
10005d3e:	push   DWORD PTR [ebp+0x10]
10005d41:	mov    ebx,DWORD PTR [ebp+0x14]
10005d44:	push   DWORD PTR [ebp+0xc]
10005d47:	push   DWORD PTR [ebp+0x8]
10005d4a:	call   0x1000636c
10005d4f:	mov    eax,edi
10005d51:	call   0x10059b0d
10005d56:	ret    0x10
10005d59:	push   DWORD PTR [ebp-0x14]
10005d5c:	call   0x10042e92
10005d61:	pop    ecx
10005d62:	push   0x0
10005d64:	push   0x0
10005d66:	call   0x100479b4
10005d6b:	int3   
10005d6c:	push   0x48
10005d6e:	mov    eax,0x100605b3
10005d73:	call   0x10059a35
10005d78:	mov    edi,DWORD PTR [ebp+0x10]
10005d7b:	cmp    BYTE PTR [edi+0x45],0x0
10005d7f:	je     0x10005db3
10005d81:	push   0x1006ccec
10005d86:	lea    ecx,[ebp-0x2c]
10005d89:	call   0x100011cd
10005d8e:	and    DWORD PTR [ebp-0x4],0x0
10005d92:	lea    eax,[ebp-0x2c]
10005d95:	push   eax
10005d96:	lea    ecx,[ebp-0x54]
10005d99:	call   0x10001077
10005d9e:	push   0x10074cc0
10005da3:	lea    eax,[ebp-0x54]
10005da6:	push   eax
10005da7:	mov    DWORD PTR [ebp-0x54],0x1006b978
10005dae:	call   0x100479b4
10005db3:	lea    esi,[ebp+0xc]
10005db6:	mov    DWORD PTR [ebp-0x10],edi
10005db9:	call   0x10005660
10005dbe:	mov    ecx,DWORD PTR [edi]
10005dc0:	cmp    BYTE PTR [ecx+0x45],0x0
10005dc4:	je     0x10005dcb
10005dc6:	mov    ebx,DWORD PTR [edi+0x8]
10005dc9:	jmp    0x10005de2
10005dcb:	mov    eax,DWORD PTR [edi+0x8]
10005dce:	cmp    BYTE PTR [eax+0x45],0x0
10005dd2:	je     0x10005dd8
10005dd4:	mov    ebx,ecx
10005dd6:	jmp    0x10005de2
10005dd8:	mov    eax,DWORD PTR [ebp+0x10]
10005ddb:	cmp    eax,edi
10005ddd:	mov    ebx,DWORD PTR [eax+0x8]
10005de0:	jne    0x10005e5a
10005de2:	cmp    BYTE PTR [ebx+0x45],0x0
10005de6:	mov    esi,DWORD PTR [edi+0x4]
10005de9:	jne    0x10005dee
10005deb:	mov    DWORD PTR [ebx+0x4],esi
10005dee:	mov    eax,ds:0x10080c30
10005df3:	cmp    DWORD PTR [eax+0x4],edi
10005df6:	jne    0x10005dfd
10005df8:	mov    DWORD PTR [eax+0x4],ebx
10005dfb:	jmp    0x10005e08
10005dfd:	cmp    DWORD PTR [esi],edi
10005dff:	jne    0x10005e05
10005e01:	mov    DWORD PTR [esi],ebx
10005e03:	jmp    0x10005e08
10005e05:	mov    DWORD PTR [esi+0x8],ebx
10005e08:	mov    edx,DWORD PTR ds:0x10080c30
10005e0e:	cmp    DWORD PTR [edx],edi
10005e10:	jne    0x10005e2e
10005e12:	cmp    BYTE PTR [ebx+0x45],0x0
10005e16:	je     0x10005e1c
10005e18:	mov    ecx,esi
10005e1a:	jmp    0x10005e2c
10005e1c:	mov    eax,DWORD PTR [ebx]
10005e1e:	mov    ecx,ebx
10005e20:	jmp    0x10005e26
10005e22:	mov    ecx,eax
10005e24:	mov    eax,DWORD PTR [ecx]
10005e26:	cmp    BYTE PTR [eax+0x45],0x0
10005e2a:	je     0x10005e22
10005e2c:	mov    DWORD PTR [edx],ecx
10005e2e:	mov    edx,DWORD PTR ds:0x10080c30
10005e34:	cmp    DWORD PTR [edx+0x8],edi
10005e37:	jne    0x10005eb4
10005e39:	cmp    BYTE PTR [ebx+0x45],0x0
10005e3d:	je     0x10005e43
10005e3f:	mov    ecx,esi
10005e41:	jmp    0x10005e55
10005e43:	mov    eax,DWORD PTR [ebx+0x8]
10005e46:	mov    ecx,ebx
10005e48:	jmp    0x10005e4f
10005e4a:	mov    ecx,eax
10005e4c:	mov    eax,DWORD PTR [ecx+0x8]
10005e4f:	cmp    BYTE PTR [eax+0x45],0x0
10005e53:	je     0x10005e4a
10005e55:	mov    DWORD PTR [edx+0x8],ecx
10005e58:	jmp    0x10005eb4
10005e5a:	mov    DWORD PTR [ecx+0x4],eax
10005e5d:	mov    ecx,DWORD PTR [edi]
10005e5f:	mov    DWORD PTR [eax],ecx
10005e61:	cmp    eax,DWORD PTR [edi+0x8]
10005e64:	jne    0x10005e6a
10005e66:	mov    esi,eax
10005e68:	jmp    0x10005e84
10005e6a:	cmp    BYTE PTR [ebx+0x45],0x0
10005e6e:	mov    esi,DWORD PTR [eax+0x4]
10005e71:	jne    0x10005e76
10005e73:	mov    DWORD PTR [ebx+0x4],esi
10005e76:	mov    DWORD PTR [esi],ebx
10005e78:	mov    ecx,DWORD PTR [edi+0x8]
10005e7b:	mov    DWORD PTR [eax+0x8],ecx
10005e7e:	mov    ecx,DWORD PTR [edi+0x8]
10005e81:	mov    DWORD PTR [ecx+0x4],eax
10005e84:	mov    ecx,DWORD PTR ds:0x10080c30
10005e8a:	cmp    DWORD PTR [ecx+0x4],edi
10005e8d:	jne    0x10005e94
10005e8f:	mov    DWORD PTR [ecx+0x4],eax
10005e92:	jmp    0x10005ea2
10005e94:	mov    ecx,DWORD PTR [edi+0x4]
10005e97:	cmp    DWORD PTR [ecx],edi
10005e99:	jne    0x10005e9f
10005e9b:	mov    DWORD PTR [ecx],eax
10005e9d:	jmp    0x10005ea2
10005e9f:	mov    DWORD PTR [ecx+0x8],eax
10005ea2:	mov    ecx,DWORD PTR [edi+0x4]
10005ea5:	mov    DWORD PTR [eax+0x4],ecx
10005ea8:	mov    dl,BYTE PTR [edi+0x44]
10005eab:	mov    cl,BYTE PTR [eax+0x44]
10005eae:	mov    BYTE PTR [eax+0x44],dl
10005eb1:	mov    BYTE PTR [edi+0x44],cl
10005eb4:	cmp    BYTE PTR [edi+0x44],0x1
10005eb8:	jne    0x10005fcd
10005ebe:	mov    eax,ds:0x10080c30
10005ec3:	cmp    ebx,DWORD PTR [eax+0x4]
10005ec6:	je     0x10005fc9
10005ecc:	mov    edi,0x10080c2c
10005ed1:	cmp    BYTE PTR [ebx+0x44],0x1
10005ed5:	jne    0x10005fc6
10005edb:	mov    ecx,DWORD PTR [esi]
10005edd:	cmp    ebx,ecx
10005edf:	jne    0x10005f4b
10005ee1:	mov    ecx,DWORD PTR [esi+0x8]
10005ee4:	cmp    BYTE PTR [ecx+0x44],0x0
10005ee8:	jne    0x10005efd
10005eea:	mov    BYTE PTR [ecx+0x44],0x1
10005eee:	push   edi
10005eef:	mov    ecx,esi
10005ef1:	mov    BYTE PTR [esi+0x44],0x0
10005ef5:	call   0x10005c98
10005efa:	mov    ecx,DWORD PTR [esi+0x8]
10005efd:	cmp    BYTE PTR [ecx+0x45],0x0
10005f01:	jne    0x10005f7e
10005f03:	mov    eax,DWORD PTR [ecx]
10005f05:	cmp    BYTE PTR [eax+0x44],0x1
10005f09:	jne    0x10005f14
10005f0b:	mov    eax,DWORD PTR [ecx+0x8]
10005f0e:	cmp    BYTE PTR [eax+0x44],0x1
10005f12:	je     0x10005f7a
10005f14:	mov    eax,DWORD PTR [ecx+0x8]
10005f17:	cmp    BYTE PTR [eax+0x44],0x1
10005f1b:	jne    0x10005f30
10005f1d:	mov    eax,DWORD PTR [ecx]
10005f1f:	mov    BYTE PTR [eax+0x44],0x1
10005f23:	push   edi
10005f24:	mov    BYTE PTR [ecx+0x44],0x0
10005f28:	call   0x10005cd8
10005f2d:	mov    ecx,DWORD PTR [esi+0x8]
10005f30:	mov    al,BYTE PTR [esi+0x44]
10005f33:	mov    BYTE PTR [ecx+0x44],al
10005f36:	mov    BYTE PTR [esi+0x44],0x1
10005f3a:	mov    eax,DWORD PTR [ecx+0x8]
10005f3d:	push   edi
10005f3e:	mov    ecx,esi
10005f40:	mov    BYTE PTR [eax+0x44],0x1
10005f44:	call   0x10005c98
10005f49:	jmp    0x10005fc6
10005f4b:	cmp    BYTE PTR [ecx+0x44],0x0
10005f4f:	jne    0x10005f63
10005f51:	mov    BYTE PTR [ecx+0x44],0x1
10005f55:	push   edi
10005f56:	mov    ecx,esi
10005f58:	mov    BYTE PTR [esi+0x44],0x0
10005f5c:	call   0x10005cd8
10005f61:	mov    ecx,DWORD PTR [esi]
10005f63:	cmp    BYTE PTR [ecx+0x45],0x0
10005f67:	jne    0x10005f7e
10005f69:	mov    eax,DWORD PTR [ecx+0x8]
10005f6c:	cmp    BYTE PTR [eax+0x44],0x1
10005f70:	jne    0x10005f93
10005f72:	mov    eax,DWORD PTR [ecx]
10005f74:	cmp    BYTE PTR [eax+0x44],0x1
10005f78:	jne    0x10005f93
10005f7a:	mov    BYTE PTR [ecx+0x44],0x0
10005f7e:	mov    eax,ds:0x10080c30
10005f83:	mov    ebx,esi
10005f85:	cmp    ebx,DWORD PTR [eax+0x4]
10005f88:	mov    esi,DWORD PTR [esi+0x4]
10005f8b:	jne    0x10005ed1
10005f91:	jmp    0x10005fc6
10005f93:	mov    eax,DWORD PTR [ecx]
10005f95:	cmp    BYTE PTR [eax+0x44],0x1
10005f99:	jne    0x10005fae
10005f9b:	mov    eax,DWORD PTR [ecx+0x8]
10005f9e:	mov    BYTE PTR [eax+0x44],0x1
10005fa2:	push   edi
10005fa3:	mov    BYTE PTR [ecx+0x44],0x0
10005fa7:	call   0x10005c98
10005fac:	mov    ecx,DWORD PTR [esi]
10005fae:	mov    al,BYTE PTR [esi+0x44]
10005fb1:	mov    BYTE PTR [ecx+0x44],al
10005fb4:	mov    BYTE PTR [esi+0x44],0x1
10005fb8:	mov    eax,DWORD PTR [ecx]
10005fba:	push   edi
10005fbb:	mov    ecx,esi
10005fbd:	mov    BYTE PTR [eax+0x44],0x1
10005fc1:	call   0x10005cd8
10005fc6:	mov    edi,DWORD PTR [ebp-0x10]
10005fc9:	mov    BYTE PTR [ebx+0x44],0x1
10005fcd:	xor    ebx,ebx
10005fcf:	push   ebx
10005fd0:	lea    esi,[edi+0xc]
10005fd3:	push   0x1
10005fd5:	lea    ecx,[esi+0x1c]
10005fd8:	call   0x100012f0
10005fdd:	push   ebx
10005fde:	push   0x1
10005fe0:	mov    ecx,esi
10005fe2:	call   0x100012f0
10005fe7:	push   edi
10005fe8:	call   0x10042e92
10005fed:	cmp    DWORD PTR ds:0x10080c34,ebx
10005ff3:	pop    ecx
10005ff4:	jbe    0x10005ffc
10005ff6:	dec    DWORD PTR ds:0x10080c34
10005ffc:	mov    ecx,DWORD PTR [ebp+0xc]
10005fff:	mov    eax,DWORD PTR [ebp+0x8]
10006002:	mov    DWORD PTR [eax],ecx
10006004:	mov    ecx,DWORD PTR [ebp+0x10]
10006007:	mov    DWORD PTR [eax+0x4],ecx
1000600a:	call   0x10059b0d
1000600f:	ret    0xc
10006012:	push   ebp
10006013:	mov    ebp,esp
10006015:	sub    esp,0x10
10006018:	test   ecx,ecx
1000601a:	ja     0x1000602a
1000601c:	xor    ecx,ecx
1000601e:	lea    eax,[ecx+ecx*1]
10006021:	push   eax
10006022:	call   0x1004349e
10006027:	pop    ecx
10006028:	leave  
10006029:	ret    
1000602a:	or     eax,0xffffffff
1000602d:	xor    edx,edx
1000602f:	div    ecx
10006031:	cmp    eax,0x2
10006034:	jae    0x1000601e
10006036:	and    DWORD PTR [ebp-0x4],0x0
1000603a:	lea    eax,[ebp-0x4]
1000603d:	push   eax
1000603e:	lea    ecx,[ebp-0x10]
10006041:	call   0x10042f12
10006046:	push   0x10074cf8
1000604b:	lea    eax,[ebp-0x10]
1000604e:	push   eax
1000604f:	mov    DWORD PTR [ebp-0x10],0x100665c8
10006056:	call   0x100479b4
1000605b:	int3   
1000605c:	push   0x48
1000605e:	mov    eax,0x100605b3
10006063:	call   0x10059a35
10006068:	mov    edi,DWORD PTR [ebp+0x10]
1000606b:	cmp    BYTE PTR [edi+0x45],0x0
1000606f:	je     0x100060a3
10006071:	push   0x1006ccec
10006076:	lea    ecx,[ebp-0x2c]
10006079:	call   0x100011cd
1000607e:	and    DWORD PTR [ebp-0x4],0x0
10006082:	lea    eax,[ebp-0x2c]
10006085:	push   eax
10006086:	lea    ecx,[ebp-0x54]
10006089:	call   0x10001077
1000608e:	push   0x10074cc0
10006093:	lea    eax,[ebp-0x54]
10006096:	push   eax
10006097:	mov    DWORD PTR [ebp-0x54],0x1006b978
1000609e:	call   0x100479b4
100060a3:	lea    esi,[ebp+0xc]
100060a6:	mov    DWORD PTR [ebp-0x10],edi
100060a9:	call   0x10005660
100060ae:	mov    ecx,DWORD PTR [edi]
100060b0:	cmp    BYTE PTR [ecx+0x45],0x0
100060b4:	je     0x100060bb
100060b6:	mov    ebx,DWORD PTR [edi+0x8]
100060b9:	jmp    0x100060d2
100060bb:	mov    eax,DWORD PTR [edi+0x8]
100060be:	cmp    BYTE PTR [eax+0x45],0x0
100060c2:	je     0x100060c8
100060c4:	mov    ebx,ecx
100060c6:	jmp    0x100060d2
100060c8:	mov    eax,DWORD PTR [ebp+0x10]
100060cb:	cmp    eax,edi
100060cd:	mov    ebx,DWORD PTR [eax+0x8]
100060d0:	jne    0x1000614a
100060d2:	cmp    BYTE PTR [ebx+0x45],0x0
100060d6:	mov    esi,DWORD PTR [edi+0x4]
100060d9:	jne    0x100060de
100060db:	mov    DWORD PTR [ebx+0x4],esi
100060de:	mov    eax,ds:0x10080c24
100060e3:	cmp    DWORD PTR [eax+0x4],edi
100060e6:	jne    0x100060ed
100060e8:	mov    DWORD PTR [eax+0x4],ebx
100060eb:	jmp    0x100060f8
100060ed:	cmp    DWORD PTR [esi],edi
100060ef:	jne    0x100060f5
100060f1:	mov    DWORD PTR [esi],ebx
100060f3:	jmp    0x100060f8
100060f5:	mov    DWORD PTR [esi+0x8],ebx
100060f8:	mov    edx,DWORD PTR ds:0x10080c24
100060fe:	cmp    DWORD PTR [edx],edi
10006100:	jne    0x1000611e
10006102:	cmp    BYTE PTR [ebx+0x45],0x0
10006106:	je     0x1000610c
10006108:	mov    ecx,esi
1000610a:	jmp    0x1000611c
1000610c:	mov    eax,DWORD PTR [ebx]
1000610e:	mov    ecx,ebx
10006110:	jmp    0x10006116
10006112:	mov    ecx,eax
10006114:	mov    eax,DWORD PTR [ecx]
10006116:	cmp    BYTE PTR [eax+0x45],0x0
1000611a:	je     0x10006112
1000611c:	mov    DWORD PTR [edx],ecx
1000611e:	mov    edx,DWORD PTR ds:0x10080c24
10006124:	cmp    DWORD PTR [edx+0x8],edi
10006127:	jne    0x100061a4
10006129:	cmp    BYTE PTR [ebx+0x45],0x0
1000612d:	je     0x10006133
1000612f:	mov    ecx,esi
10006131:	jmp    0x10006145
10006133:	mov    eax,DWORD PTR [ebx+0x8]
10006136:	mov    ecx,ebx
10006138:	jmp    0x1000613f
1000613a:	mov    ecx,eax
1000613c:	mov    eax,DWORD PTR [ecx+0x8]
1000613f:	cmp    BYTE PTR [eax+0x45],0x0
10006143:	je     0x1000613a
10006145:	mov    DWORD PTR [edx+0x8],ecx
10006148:	jmp    0x100061a4
1000614a:	mov    DWORD PTR [ecx+0x4],eax
1000614d:	mov    ecx,DWORD PTR [edi]
1000614f:	mov    DWORD PTR [eax],ecx
10006151:	cmp    eax,DWORD PTR [edi+0x8]
10006154:	jne    0x1000615a
10006156:	mov    esi,eax
10006158:	jmp    0x10006174
1000615a:	cmp    BYTE PTR [ebx+0x45],0x0
1000615e:	mov    esi,DWORD PTR [eax+0x4]
10006161:	jne    0x10006166
10006163:	mov    DWORD PTR [ebx+0x4],esi
10006166:	mov    DWORD PTR [esi],ebx
10006168:	mov    ecx,DWORD PTR [edi+0x8]
1000616b:	mov    DWORD PTR [eax+0x8],ecx
1000616e:	mov    ecx,DWORD PTR [edi+0x8]
10006171:	mov    DWORD PTR [ecx+0x4],eax
10006174:	mov    ecx,DWORD PTR ds:0x10080c24
1000617a:	cmp    DWORD PTR [ecx+0x4],edi
1000617d:	jne    0x10006184
1000617f:	mov    DWORD PTR [ecx+0x4],eax
10006182:	jmp    0x10006192
10006184:	mov    ecx,DWORD PTR [edi+0x4]
10006187:	cmp    DWORD PTR [ecx],edi
10006189:	jne    0x1000618f
1000618b:	mov    DWORD PTR [ecx],eax
1000618d:	jmp    0x10006192
1000618f:	mov    DWORD PTR [ecx+0x8],eax
10006192:	mov    ecx,DWORD PTR [edi+0x4]
10006195:	mov    DWORD PTR [eax+0x4],ecx
10006198:	mov    dl,BYTE PTR [edi+0x44]
1000619b:	mov    cl,BYTE PTR [eax+0x44]
1000619e:	mov    BYTE PTR [eax+0x44],dl
100061a1:	mov    BYTE PTR [edi+0x44],cl
100061a4:	cmp    BYTE PTR [edi+0x44],0x1
100061a8:	jne    0x100062bd
100061ae:	mov    eax,ds:0x10080c24
100061b3:	cmp    ebx,DWORD PTR [eax+0x4]
100061b6:	je     0x100062b9
100061bc:	mov    edi,0x10080c20
100061c1:	cmp    BYTE PTR [ebx+0x44],0x1
100061c5:	jne    0x100062b6
100061cb:	mov    ecx,DWORD PTR [esi]
100061cd:	cmp    ebx,ecx
100061cf:	jne    0x1000623b
100061d1:	mov    ecx,DWORD PTR [esi+0x8]
100061d4:	cmp    BYTE PTR [ecx+0x44],0x0
100061d8:	jne    0x100061ed
100061da:	mov    BYTE PTR [ecx+0x44],0x1
100061de:	push   edi
100061df:	mov    ecx,esi
100061e1:	mov    BYTE PTR [esi+0x44],0x0
100061e5:	call   0x10005c98
100061ea:	mov    ecx,DWORD PTR [esi+0x8]
100061ed:	cmp    BYTE PTR [ecx+0x45],0x0
100061f1:	jne    0x1000626e
100061f3:	mov    eax,DWORD PTR [ecx]
100061f5:	cmp    BYTE PTR [eax+0x44],0x1
100061f9:	jne    0x10006204
100061fb:	mov    eax,DWORD PTR [ecx+0x8]
100061fe:	cmp    BYTE PTR [eax+0x44],0x1
10006202:	je     0x1000626a
10006204:	mov    eax,DWORD PTR [ecx+0x8]
10006207:	cmp    BYTE PTR [eax+0x44],0x1
1000620b:	jne    0x10006220
1000620d:	mov    eax,DWORD PTR [ecx]
1000620f:	mov    BYTE PTR [eax+0x44],0x1
10006213:	push   edi
10006214:	mov    BYTE PTR [ecx+0x44],0x0
10006218:	call   0x10005cd8
1000621d:	mov    ecx,DWORD PTR [esi+0x8]
10006220:	mov    al,BYTE PTR [esi+0x44]
10006223:	mov    BYTE PTR [ecx+0x44],al
10006226:	mov    BYTE PTR [esi+0x44],0x1
1000622a:	mov    eax,DWORD PTR [ecx+0x8]
1000622d:	push   edi
1000622e:	mov    ecx,esi
10006230:	mov    BYTE PTR [eax+0x44],0x1
10006234:	call   0x10005c98
10006239:	jmp    0x100062b6
1000623b:	cmp    BYTE PTR [ecx+0x44],0x0
1000623f:	jne    0x10006253
10006241:	mov    BYTE PTR [ecx+0x44],0x1
10006245:	push   edi
10006246:	mov    ecx,esi
10006248:	mov    BYTE PTR [esi+0x44],0x0
1000624c:	call   0x10005cd8
10006251:	mov    ecx,DWORD PTR [esi]
10006253:	cmp    BYTE PTR [ecx+0x45],0x0
10006257:	jne    0x1000626e
10006259:	mov    eax,DWORD PTR [ecx+0x8]
1000625c:	cmp    BYTE PTR [eax+0x44],0x1
10006260:	jne    0x10006283
10006262:	mov    eax,DWORD PTR [ecx]
10006264:	cmp    BYTE PTR [eax+0x44],0x1
10006268:	jne    0x10006283
1000626a:	mov    BYTE PTR [ecx+0x44],0x0
1000626e:	mov    eax,ds:0x10080c24
10006273:	mov    ebx,esi
10006275:	cmp    ebx,DWORD PTR [eax+0x4]
10006278:	mov    esi,DWORD PTR [esi+0x4]
1000627b:	jne    0x100061c1
10006281:	jmp    0x100062b6
10006283:	mov    eax,DWORD PTR [ecx]
10006285:	cmp    BYTE PTR [eax+0x44],0x1
10006289:	jne    0x1000629e
1000628b:	mov    eax,DWORD PTR [ecx+0x8]
1000628e:	mov    BYTE PTR [eax+0x44],0x1
10006292:	push   edi
10006293:	mov    BYTE PTR [ecx+0x44],0x0
10006297:	call   0x10005c98
1000629c:	mov    ecx,DWORD PTR [esi]
1000629e:	mov    al,BYTE PTR [esi+0x44]
100062a1:	mov    BYTE PTR [ecx+0x44],al
100062a4:	mov    BYTE PTR [esi+0x44],0x1
100062a8:	mov    eax,DWORD PTR [ecx]
100062aa:	push   edi
100062ab:	mov    ecx,esi
100062ad:	mov    BYTE PTR [eax+0x44],0x1
100062b1:	call   0x10005cd8
100062b6:	mov    edi,DWORD PTR [ebp-0x10]
100062b9:	mov    BYTE PTR [ebx+0x44],0x1
100062bd:	add    edi,0xc
100062c0:	call   0x10004c66
100062c5:	push   DWORD PTR [ebp-0x10]
100062c8:	call   0x10042e92
100062cd:	cmp    DWORD PTR ds:0x10080c28,0x0
100062d4:	pop    ecx
100062d5:	jbe    0x100062dd
100062d7:	dec    DWORD PTR ds:0x10080c28
100062dd:	mov    ecx,DWORD PTR [ebp+0xc]
100062e0:	mov    eax,DWORD PTR [ebp+0x8]
100062e3:	mov    DWORD PTR [eax],ecx
100062e5:	mov    ecx,DWORD PTR [ebp+0x10]
100062e8:	mov    DWORD PTR [eax+0x4],ecx
100062eb:	call   0x10059b0d
100062f0:	ret    0xc
100062f3:	push   0x48
100062f5:	call   0x1004349e
100062fa:	xor    edx,edx
100062fc:	cmp    eax,edx
100062fe:	pop    ecx
100062ff:	je     0x10006303
10006301:	mov    DWORD PTR [eax],edx
10006303:	lea    ecx,[eax+0x4]
10006306:	cmp    ecx,edx
10006308:	je     0x1000630c
1000630a:	mov    DWORD PTR [ecx],edx
1000630c:	lea    ecx,[eax+0x8]
1000630f:	cmp    ecx,edx
10006311:	je     0x10006315
10006313:	mov    DWORD PTR [ecx],edx
10006315:	mov    BYTE PTR [eax+0x44],0x1
10006319:	mov    BYTE PTR [eax+0x45],dl
1000631c:	ret    
1000631d:	push   0x0
1000631f:	mov    eax,0x10062102
10006324:	call   0x10059a35
10006329:	mov    ebx,ecx
1000632b:	mov    eax,DWORD PTR [ebp+0x8]
1000632e:	mov    DWORD PTR [esi],eax
10006330:	mov    eax,DWORD PTR [ebp+0xc]
10006333:	mov    DWORD PTR [esi+0x4],eax
10006336:	mov    eax,DWORD PTR [ebp+0x10]
10006339:	lea    edi,[esi+0xc]
1000633c:	push   ebx
1000633d:	mov    ecx,edi
1000633f:	mov    DWORD PTR [esi+0x8],eax
10006342:	mov    DWORD PTR [ebp+0x8],edi
10006345:	call   0x100011a7
1000634a:	and    DWORD PTR [ebp-0x4],0x0
1000634e:	add    ebx,0x1c
10006351:	push   ebx
10006352:	lea    ecx,[edi+0x1c]
10006355:	call   0x100011a7
1000635a:	mov    BYTE PTR [esi+0x44],0x0
1000635e:	mov    BYTE PTR [esi+0x45],0x0
10006362:	mov    eax,esi
10006364:	call   0x10059b0d
10006369:	ret    0xc
1000636c:	push   0x0
1000636e:	mov    eax,0x10060570
10006373:	call   0x10059a35
10006378:	mov    eax,DWORD PTR [ebp+0x8]
1000637b:	mov    DWORD PTR [edi],eax
1000637d:	mov    eax,DWORD PTR [ebp+0xc]
10006380:	mov    DWORD PTR [edi+0x4],eax
10006383:	mov    eax,DWORD PTR [ebp+0x10]
10006386:	mov    DWORD PTR [edi+0x8],eax
10006389:	lea    esi,[edi+0xc]
1000638c:	mov    eax,ebx
1000638e:	mov    DWORD PTR [ebp+0x8],esi
10006391:	call   0x10004af5
10006396:	and    DWORD PTR [ebp-0x4],0x0
1000639a:	lea    eax,[ebx+0x1c]
1000639d:	add    esi,0x1c
100063a0:	call   0x10004af5
100063a5:	mov    BYTE PTR [edi+0x44],0x0
100063a9:	mov    BYTE PTR [edi+0x45],0x0
100063ad:	mov    eax,edi
100063af:	call   0x10059b0d
100063b4:	ret    0xc
100063b7:	push   ebp
100063b8:	mov    ebp,esp
100063ba:	push   ecx
100063bb:	push   esi
100063bc:	push   edi
100063bd:	mov    edi,DWORD PTR [ebp+0x8]
100063c0:	cmp    BYTE PTR [edi+0x45],0x0
100063c4:	mov    DWORD PTR [ebp-0x4],ecx
100063c7:	mov    esi,edi
100063c9:	jne    0x10006403
100063cb:	push   ebx
100063cc:	push   DWORD PTR [esi+0x8]
100063cf:	mov    ecx,DWORD PTR [ebp-0x4]
100063d2:	call   0x100063b7
100063d7:	mov    esi,DWORD PTR [esi]
100063d9:	push   0x0
100063db:	lea    ebx,[edi+0xc]
100063de:	push   0x1
100063e0:	lea    ecx,[ebx+0x1c]
100063e3:	call   0x100012f0
100063e8:	push   0x0
100063ea:	push   0x1
100063ec:	mov    ecx,ebx
100063ee:	call   0x100012f0
100063f3:	push   edi
100063f4:	call   0x10042e92
100063f9:	cmp    BYTE PTR [esi+0x45],0x0
100063fd:	pop    ecx
100063fe:	mov    edi,esi
10006400:	je     0x100063cc
10006402:	pop    ebx
10006403:	pop    edi
10006404:	pop    esi
10006405:	leave  
10006406:	ret    0x4
10006409:	push   ebx
1000640a:	mov    ebx,DWORD PTR [esp+0x8]
1000640e:	cmp    BYTE PTR [ebx+0x45],0x0
10006412:	push   ebp
10006413:	push   esi
10006414:	mov    ebp,ecx
10006416:	mov    esi,ebx
10006418:	jne    0x1000643f
1000641a:	push   edi
1000641b:	push   DWORD PTR [esi+0x8]
1000641e:	mov    ecx,ebp
10006420:	call   0x10006409
10006425:	mov    esi,DWORD PTR [esi]
10006427:	lea    edi,[ebx+0xc]
1000642a:	call   0x10004c66
1000642f:	push   ebx
10006430:	call   0x10042e92
10006435:	cmp    BYTE PTR [esi+0x45],0x0
10006439:	pop    ecx
1000643a:	mov    ebx,esi
1000643c:	je     0x1000641b
1000643e:	pop    edi
1000643f:	pop    esi
10006440:	pop    ebp
10006441:	pop    ebx
10006442:	ret    0x4
10006445:	push   ebx
10006446:	mov    ebx,DWORD PTR [esp+0x8]
1000644a:	test   ebx,ebx
1000644c:	push   esi
1000644d:	mov    esi,eax
1000644f:	jne    0x1000645b
10006451:	push   0x80070057
10006456:	call   0x10001f45
1000645b:	push   edi
1000645c:	lea    eax,[esp+0x14]
10006460:	push   eax
10006461:	push   ebx
10006462:	call   0x10043709
10006467:	pop    ecx
10006468:	pop    ecx
10006469:	mov    edi,eax
1000646b:	push   edi
1000646c:	call   0x100021b6
10006471:	lea    ecx,[esp+0x14]
10006475:	push   ecx
10006476:	push   ebx
10006477:	lea    ecx,[edi+0x1]
1000647a:	push   ecx
1000647b:	push   eax
1000647c:	call   0x10044f23
10006481:	add    esp,0x10
10006484:	mov    eax,edi
10006486:	pop    edi
10006487:	mov    edx,esi
10006489:	pop    esi
1000648a:	pop    ebx
1000648b:	jmp    0x10002241
10006490:	push   0x20
10006492:	mov    eax,0x1005ffad
10006497:	call   0x10059a35
1000649c:	push   DWORD PTR [ebp+0xc]
1000649f:	and    DWORD PTR [ebp-0x10],0x0
100064a3:	lea    ecx,[ebp-0x2c]
100064a6:	call   0x100011a7
100064ab:	push   DWORD PTR [ebp+0x10]
100064ae:	and    DWORD PTR [ebp-0x4],0x0
100064b2:	push   eax
100064b3:	call   0x10004090
100064b8:	mov    ecx,DWORD PTR [ebp+0x8]
100064bb:	push   eax
100064bc:	call   0x100011a7
100064c1:	push   0x0
100064c3:	push   0x1
100064c5:	lea    ecx,[ebp-0x2c]
100064c8:	call   0x100012f0
100064cd:	mov    eax,DWORD PTR [ebp+0x8]
100064d0:	call   0x10059b0d
100064d5:	ret    
100064d6:	push   0x20
100064d8:	mov    eax,0x1005ffad
100064dd:	call   0x10059a35
100064e2:	push   DWORD PTR [ebp+0xc]
100064e5:	and    DWORD PTR [ebp-0x10],0x0
100064e9:	lea    ecx,[ebp-0x2c]
100064ec:	call   0x100011a7
100064f1:	mov    esi,eax
100064f3:	mov    eax,DWORD PTR [ebp+0x10]
100064f6:	and    DWORD PTR [ebp-0x4],0x0
100064fa:	push   0xffffffff
100064fc:	push   0x0
100064fe:	call   0x10004c80
10006503:	mov    ecx,DWORD PTR [ebp+0x8]
10006506:	push   eax
10006507:	call   0x100011a7
1000650c:	push   0x0
1000650e:	push   0x1
10006510:	lea    ecx,[ebp-0x2c]
10006513:	call   0x100012f0
10006518:	mov    eax,DWORD PTR [ebp+0x8]
1000651b:	call   0x10059b0d
10006520:	ret    
10006521:	push   0x20
10006523:	mov    eax,0x1005ffad
10006528:	call   0x10059a35
1000652d:	push   DWORD PTR [ebp+0xc]
10006530:	and    DWORD PTR [ebp-0x10],0x0
10006534:	lea    ecx,[ebp-0x2c]
10006537:	call   0x100011cd
1000653c:	mov    esi,eax
1000653e:	mov    eax,DWORD PTR [ebp+0x10]
10006541:	and    DWORD PTR [ebp-0x4],0x0
10006545:	push   0xffffffff
10006547:	push   0x0
10006549:	call   0x10004c80
1000654e:	mov    ecx,DWORD PTR [ebp+0x8]
10006551:	push   eax
10006552:	call   0x100011a7
10006557:	push   0x0
10006559:	push   0x1
1000655b:	lea    ecx,[ebp-0x2c]
1000655e:	call   0x100012f0
10006563:	mov    eax,DWORD PTR [ebp+0x8]
10006566:	call   0x10059b0d
1000656b:	ret    
1000656c:	cmp    DWORD PTR [ecx+0x18],0x10
10006570:	push   edi
10006571:	mov    edi,DWORD PTR [ecx+0x14]
10006574:	jb     0x1000657b
10006576:	mov    ecx,DWORD PTR [ecx+0x4]
10006579:	jmp    0x1000657e
1000657b:	add    ecx,0x4
1000657e:	push   ecx
1000657f:	mov    ecx,DWORD PTR [eax+0x14]
10006582:	call   0x10004645
10006587:	neg    eax
10006589:	sbb    eax,eax
1000658b:	inc    eax
1000658c:	pop    edi
1000658d:	ret    
1000658e:	push   edi
1000658f:	push   DWORD PTR [esp+0x8]
10006593:	call   0x10043010
10006598:	pop    ecx
10006599:	push   DWORD PTR [esp+0x8]
1000659d:	mov    ecx,DWORD PTR [esi+0x14]
100065a0:	mov    edi,eax
100065a2:	mov    eax,esi
100065a4:	call   0x10004645
100065a9:	neg    eax
100065ab:	sbb    eax,eax
100065ad:	inc    eax
100065ae:	pop    edi
100065af:	ret    
100065b0:	add    eax,eax
100065b2:	push   eax
100065b3:	push   DWORD PTR [esp+0x10]
100065b7:	mov    eax,DWORD PTR [esp+0x10]
100065bb:	add    eax,eax
100065bd:	push   eax
100065be:	push   DWORD PTR [esp+0x10]
100065c2:	call   0x100433c5
100065c7:	mov    eax,DWORD PTR [esp+0x14]
100065cb:	add    esp,0x10
100065ce:	ret    
100065cf:	push   esi
100065d0:	mov    esi,ecx
100065d2:	mov    ecx,DWORD PTR [eax+0x14]
100065d5:	cmp    ecx,esi
100065d7:	jae    0x100065db
100065d9:	mov    esi,ecx
100065db:	cmp    esi,edi
100065dd:	mov    edx,esi
100065df:	jb     0x100065e3
100065e1:	mov    edx,edi
100065e3:	cmp    DWORD PTR [eax+0x18],0x8
100065e7:	jb     0x100065ee
100065e9:	mov    eax,DWORD PTR [eax+0x4]
100065ec:	jmp    0x100065f1
100065ee:	add    eax,0x4
100065f1:	test   edx,edx
100065f3:	mov    ecx,DWORD PTR [esp+0x8]
100065f7:	push   ebx
100065f8:	jbe    0x10006609
100065fa:	mov    bx,WORD PTR [eax]
100065fd:	cmp    bx,WORD PTR [ecx]
10006600:	jne    0x10006619
10006602:	inc    eax
10006603:	inc    eax
10006604:	inc    ecx
10006605:	inc    ecx
10006606:	dec    edx
10006607:	jne    0x100065fa
10006609:	xor    eax,eax
1000660b:	test   eax,eax
1000660d:	pop    ebx
1000660e:	jne    0x1000662e
10006610:	cmp    esi,edi
10006612:	jae    0x10006627
10006614:	or     eax,0xffffffff
10006617:	jmp    0x1000662e
10006619:	movzx  eax,WORD PTR [eax]
1000661c:	cmp    ax,WORD PTR [ecx]
1000661f:	sbb    eax,eax
10006621:	and    eax,0xfffffffe
10006624:	inc    eax
10006625:	jmp    0x1000660b
10006627:	xor    eax,eax
10006629:	cmp    esi,edi
1000662b:	setne  al
1000662e:	pop    esi
1000662f:	ret    0x4
10006632:	push   0x8
10006634:	mov    eax,0x1006054d
10006639:	call   0x10059a68
1000663e:	mov    esi,DWORD PTR [ebp+0x8]
10006641:	and    DWORD PTR [ebp-0x4],0x0
10006645:	mov    DWORD PTR [ebp-0x14],esi
10006648:	cmp    DWORD PTR [ebp+0xc],0x0
1000664c:	jbe    0x10006680
1000664e:	mov    edi,DWORD PTR [ebp+0x10]
10006651:	call   0x1000a95d
10006656:	dec    DWORD PTR [ebp+0xc]
10006659:	add    esi,0x20
1000665c:	mov    DWORD PTR [ebp+0x8],esi
1000665f:	jmp    0x10006648
10006661:	mov    esi,DWORD PTR [ebp-0x14]
10006664:	jmp    0x10006672
10006666:	push   0x1
10006668:	mov    ecx,esi
1000666a:	call   0x100012f0
1000666f:	add    esi,0x20
10006672:	cmp    esi,DWORD PTR [ebp+0x8]
10006675:	push   0x0
10006677:	jne    0x10006666
10006679:	push   0x0
1000667b:	call   0x100479b4
10006680:	call   0x10059b0d
10006685:	ret    
10006686:	mov    ecx,DWORD PTR [esp+0x4]
1000668a:	push   0x0
1000668c:	push   0x1
1000668e:	call   0x100012f0
10006693:	test   BYTE PTR [esp+0x8],0x1
10006698:	je     0x100066a4
1000669a:	push   DWORD PTR [esp+0x4]
1000669e:	call   0x10042e92
100066a3:	pop    ecx
100066a4:	mov    eax,DWORD PTR [esp+0x4]
100066a8:	ret    0x8
100066ab:	call   DWORD PTR ds:0x100660cc
100066b1:	test   eax,eax
100066b3:	jle    0x100066bf
100066b5:	and    eax,0xffff
100066ba:	or     eax,0x80070000
100066bf:	ret    
100066c0:	push   ebp
100066c1:	mov    ebp,esp
100066c3:	push   0x0
100066c5:	push   DWORD PTR [ebp+0x1c]
100066c8:	push   DWORD PTR [ebp+0x18]
100066cb:	push   0x0
100066cd:	push   DWORD PTR [ebp+0x14]
100066d0:	push   DWORD PTR [ebp+0x10]
100066d3:	push   DWORD PTR [ebp+0xc]
100066d6:	call   DWORD PTR ds:0x100660c0
100066dc:	cmp    eax,0xffffffff
100066df:	jne    0x100066e8
100066e1:	call   0x100066ab
100066e6:	jmp    0x100066ef
100066e8:	mov    ecx,DWORD PTR [ebp+0x8]
100066eb:	mov    DWORD PTR [ecx],eax
100066ed:	xor    eax,eax
100066ef:	pop    ebp
100066f0:	ret    0x18
100066f3:	mov    eax,DWORD PTR [esi]
100066f5:	test   eax,eax
100066f7:	je     0x10006703
100066f9:	push   eax
100066fa:	call   DWORD PTR ds:0x10066070
10006700:	and    DWORD PTR [esi],0x0
10006703:	ret    
10006704:	push   0x254
10006709:	mov    eax,0x10063d39
1000670e:	call   0x10059a9e
10006713:	test   BYTE PTR ds:0x10081434,0x1
1000671a:	jne    0x10006a81
10006720:	or     DWORD PTR ds:0x10081434,0x1
10006727:	and    DWORD PTR ds:0x10081428,0x0
1000672e:	push   0x100656f6
10006733:	call   0x10043274
10006738:	pop    ecx
10006739:	jmp    0x10006a81
1000673e:	lea    eax,[ebp-0x218]
10006744:	push   eax
10006745:	mov    esi,0x100
1000674a:	push   esi
1000674b:	mov    BYTE PTR ds:0x10080c3e,0x1
10006752:	call   DWORD PTR ds:0x100660c8
10006758:	cmp    eax,esi
1000675a:	ja     0x10006b24
10006760:	lea    eax,[ebp-0x218]
10006766:	push   eax
10006767:	lea    eax,[ebp-0x21c]
1000676d:	push   eax
1000676e:	call   0x10002361
10006773:	xor    ebx,ebx
10006775:	lea    eax,[ebp-0x21c]
1000677b:	mov    DWORD PTR [ebp-0x4],ebx
1000677e:	call   0x10006c18
10006783:	lea    edi,[ebp-0x260]
10006789:	call   0x100336d0
1000678e:	mov    BYTE PTR [ebp-0x4],0x1
10006792:	cmp    DWORD PTR [eax+0x18],0x10
10006796:	jb     0x1000679d
10006798:	mov    eax,DWORD PTR [eax+0x4]
1000679b:	jmp    0x100067a0
1000679d:	add    eax,0x4
100067a0:	push   eax
100067a1:	lea    eax,[ebp-0x21c]
100067a7:	push   eax
100067a8:	call   0x10006b3d
100067ad:	push   ebx
100067ae:	push   0x1
100067b0:	lea    ecx,[ebp-0x260]
100067b6:	mov    BYTE PTR [ebp-0x4],0x0
100067ba:	call   0x100012f0
100067bf:	push   0x4a58908c
100067c4:	push   0x1006d150
100067c9:	call   0x10004246
100067ce:	push   eax
100067cf:	push   0x4
100067d1:	push   0x1006d184
100067d6:	call   0x10004258
100067db:	add    esp,0x14
100067de:	push   eax
100067df:	lea    eax,[ebp-0x21c]
100067e5:	push   eax
100067e6:	call   0x10006b3d
100067eb:	mov    DWORD PTR [ebp-0x220],ebx
100067f1:	push   ebx
100067f2:	push   0x4
100067f4:	push   0x7
100067f6:	push   0xc0000000
100067fb:	lea    esi,[ebp-0x21c]
10006801:	mov    BYTE PTR [ebp-0x4],0x2
10006805:	call   0x10004178
1000680a:	push   eax
1000680b:	lea    eax,[ebp-0x220]
10006811:	push   eax
10006812:	call   0x100066c0
10006817:	test   eax,eax
10006819:	je     0x10006956
1000681f:	call   DWORD PTR ds:0x100660cc
10006825:	cmp    eax,0x20
10006828:	jne    0x10006afe
1000682e:	push   ebx
1000682f:	push   0x4
10006831:	push   0x7
10006833:	push   0x80000000
10006838:	call   0x10004178
1000683d:	push   eax
1000683e:	lea    eax,[ebp-0x220]
10006844:	push   eax
10006845:	call   0x100066c0
1000684a:	test   eax,eax
1000684c:	jne    0x10006afe
10006852:	mov    eax,ds:0x10080d34
10006857:	push   0xa
10006859:	push   0x12c
1000685e:	push   eax
1000685f:	mov    ebx,eax
10006861:	call   DWORD PTR ds:0x1006607c
10006867:	test   eax,eax
10006869:	je     0x10006a93
1000686f:	lea    ecx,[ebp-0x234]
10006875:	push   ecx
10006876:	mov    edi,eax
10006878:	call   0x10033790
1000687d:	test   eax,eax
1000687f:	pop    ecx
10006880:	je     0x10006a93
10006886:	xor    edi,edi
10006888:	push   edi
10006889:	push   DWORD PTR ds:0x10080db8
1000688f:	lea    edx,[ebp-0x225]
10006895:	push   DWORD PTR [ebp-0x234]
1000689b:	lea    ecx,[ebp-0x224]
100068a1:	push   eax
100068a2:	lea    eax,[ebp-0x238]
100068a8:	push   eax
100068a9:	mov    DWORD PTR [ebp-0x224],edi
100068af:	call   0x10039740
100068b4:	mov    ecx,DWORD PTR [eax]
100068b6:	mov    esi,ecx
100068b8:	add    esp,0x14
100068bb:	mov    DWORD PTR [eax],edi
100068bd:	mov    DWORD PTR [ebp-0x230],esi
100068c3:	mov    BYTE PTR [ebp-0x4],0x3
100068c7:	push   DWORD PTR [ebp-0x238]
100068cd:	call   0x10042e92
100068d2:	mov    ebx,DWORD PTR [ebp-0x224]
100068d8:	cmp    ebx,edi
100068da:	pop    ecx
100068db:	je     0x10006ac0
100068e1:	cmp    esi,edi
100068e3:	je     0x10006ac0
100068e9:	lea    edi,[ebx+0x1]
100068ec:	push   edi
100068ed:	call   0x10043721
100068f2:	and    DWORD PTR [ebp-0x22c],0x0
100068f9:	pop    ecx
100068fa:	push   0x0
100068fc:	lea    ecx,[ebp-0x22c]
10006902:	push   ecx
10006903:	push   edi
10006904:	mov    edi,DWORD PTR [ebp-0x220]
1000690a:	push   eax
1000690b:	push   edi
1000690c:	mov    DWORD PTR [ebp-0x224],eax
10006912:	call   DWORD PTR ds:0x100660d4
10006918:	test   eax,eax
1000691a:	jne    0x10006921
1000691c:	call   0x100066ab
10006921:	cmp    DWORD PTR [ebp-0x22c],ebx
10006927:	jne    0x10006aa1
1000692d:	push   ebx
1000692e:	push   esi
1000692f:	push   DWORD PTR [ebp-0x224]
10006935:	call   0x10043726
1000693a:	add    esp,0xc
1000693d:	test   eax,eax
1000693f:	jne    0x10006aa1
10006945:	push   DWORD PTR [ebp-0x224]
1000694b:	call   0x10042e92
10006950:	pop    ecx
10006951:	jmp    0x10006a40
10006956:	mov    eax,ds:0x10080d34
1000695b:	push   0xa
1000695d:	push   0x12c
10006962:	push   eax
10006963:	mov    ebx,eax
10006965:	call   DWORD PTR ds:0x1006607c
1000696b:	test   eax,eax
1000696d:	je     0x10006a93
10006973:	lea    ecx,[ebp-0x240]
10006979:	push   ecx
1000697a:	mov    edi,eax
1000697c:	call   0x10033790
10006981:	test   eax,eax
10006983:	pop    ecx
10006984:	je     0x10006a93
1000698a:	xor    ebx,ebx
1000698c:	push   ebx
1000698d:	push   DWORD PTR ds:0x10080db8
10006993:	lea    edx,[ebp-0x226]
10006999:	push   DWORD PTR [ebp-0x240]
1000699f:	lea    ecx,[ebp-0x224]
100069a5:	push   eax
100069a6:	lea    eax,[ebp-0x23c]
100069ac:	push   eax
100069ad:	mov    DWORD PTR [ebp-0x224],ebx
100069b3:	call   0x10039740
100069b8:	mov    ecx,DWORD PTR [eax]
100069ba:	add    esp,0x14
100069bd:	mov    DWORD PTR [eax],ebx
100069bf:	push   DWORD PTR [ebp-0x23c]
100069c5:	mov    esi,ecx
100069c7:	call   0x10042e92
100069cc:	cmp    DWORD PTR [ebp-0x224],ebx
100069d2:	pop    ecx
100069d3:	je     0x10006af2
100069d9:	cmp    esi,ebx
100069db:	je     0x10006af2
100069e1:	mov    edi,DWORD PTR [ebp-0x220]
100069e7:	push   ebx
100069e8:	lea    eax,[ebp-0x244]
100069ee:	push   eax
100069ef:	push   DWORD PTR [ebp-0x224]
100069f5:	push   esi
100069f6:	push   edi
100069f7:	call   DWORD PTR ds:0x100660b4
100069fd:	cmp    eax,ebx
100069ff:	jne    0x10006a08
10006a01:	call   0x100066ab
10006a06:	jmp    0x10006a0a
10006a08:	xor    eax,eax
10006a0a:	cmp    eax,ebx
10006a0c:	jl     0x10006ad4
10006a12:	mov    eax,DWORD PTR [ebp-0x224]
10006a18:	cmp    DWORD PTR [ebp-0x244],eax
10006a1e:	jne    0x10006aeb
10006a24:	push   edi
10006a25:	call   DWORD PTR ds:0x100660d8
10006a2b:	test   eax,eax
10006a2d:	jne    0x10006a36
10006a2f:	call   0x100066ab
10006a34:	jmp    0x10006a38
10006a36:	xor    eax,eax
10006a38:	cmp    eax,ebx
10006a3a:	jl     0x10006ae1
10006a40:	push   esi
10006a41:	call   0x10042e92
10006a46:	test   edi,edi
10006a48:	pop    ecx
10006a49:	mov    BYTE PTR [ebp-0x4],0x0
10006a4d:	je     0x10006a56
10006a4f:	push   edi
10006a50:	call   DWORD PTR ds:0x10066070
10006a56:	push   0x10081428
10006a5b:	push   0x2
10006a5d:	lea    esi,[ebp-0x21c]
10006a63:	call   0x10004178
10006a68:	push   eax
10006a69:	call   DWORD PTR ds:0x100662a4
10006a6f:	or     DWORD PTR [ebp-0x4],0xffffffff
10006a73:	mov    eax,DWORD PTR [ebp-0x21c]
10006a79:	add    eax,0xfffffff0
10006a7c:	call   0x10002081
10006a81:	cmp    BYTE PTR ds:0x10080c3e,0x0
10006a88:	je     0x1000673e
10006a8e:	jmp    0x10006b24
10006a93:	call   0x10002080
10006a98:	cmp    DWORD PTR [ebp-0x220],0x0
10006a9f:	jmp    0x10006b04
10006aa1:	call   0x10002080
10006aa6:	push   DWORD PTR [ebp-0x224]
10006aac:	call   0x10042e92
10006ab1:	pop    ecx
10006ab2:	push   esi
10006ab3:	call   0x10042e92
10006ab8:	test   edi,edi
10006aba:	pop    ecx
10006abb:	je     0x10006b12
10006abd:	push   edi
10006abe:	jmp    0x10006b0c
10006ac0:	call   0x10002080
10006ac5:	push   esi
10006ac6:	call   0x10042e92
10006acb:	cmp    DWORD PTR [ebp-0x220],edi
10006ad1:	pop    ecx
10006ad2:	jmp    0x10006b04
10006ad4:	call   DWORD PTR ds:0x100660cc
10006ada:	push   eax
10006adb:	call   0x10002080
10006ae0:	pop    ecx
10006ae1:	push   esi
10006ae2:	call   0x10042e92
10006ae7:	cmp    edi,ebx
10006ae9:	jmp    0x10006aba
10006aeb:	call   0x10002080
10006af0:	jmp    0x10006ae1
10006af2:	call   0x10002080
10006af7:	push   esi
10006af8:	call   0x10042e92
10006afd:	pop    ecx
10006afe:	cmp    DWORD PTR [ebp-0x220],ebx
10006b04:	je     0x10006b12
10006b06:	push   DWORD PTR [ebp-0x220]
10006b0c:	call   DWORD PTR ds:0x10066070
10006b12:	or     DWORD PTR [ebp-0x4],0xffffffff
10006b16:	mov    eax,DWORD PTR [ebp-0x21c]
10006b1c:	add    eax,0xfffffff0
10006b1f:	call   0x10002081
10006b24:	mov    eax,ds:0x10081428
10006b29:	test   eax,eax
10006b2b:	mov    esi,eax
10006b2d:	je     0x10006b35
10006b2f:	mov    ecx,DWORD PTR [eax]
10006b31:	push   eax
10006b32:	call   DWORD PTR [ecx+0x4]
10006b35:	mov    eax,esi
10006b37:	call   0x10059b21
10006b3c:	ret    
10006b3d:	push   0x4
10006b3f:	mov    eax,0x10062417
10006b44:	call   0x10059a35
10006b49:	mov    eax,DWORD PTR [ebp+0x8]
10006b4c:	call   0x1000468d
10006b51:	push   DWORD PTR [ebp+0xc]
10006b54:	lea    ecx,[ebp-0x10]
10006b57:	push   ecx
10006b58:	mov    ecx,eax
10006b5a:	call   0x10006b85
10006b5f:	mov    ecx,DWORD PTR [ebp+0x8]
10006b62:	and    DWORD PTR [ebp-0x4],0x0
10006b66:	lea    eax,[ebp-0x10]
10006b69:	call   0x10006bbd
10006b6e:	mov    esi,eax
10006b70:	mov    eax,DWORD PTR [ebp-0x10]
10006b73:	add    eax,0xfffffff0
10006b76:	call   0x10002081
10006b7b:	mov    eax,esi
10006b7d:	call   0x10059b0d
10006b82:	ret    0x8
10006b85:	push   0x0
10006b87:	mov    eax,0x100623f4
10006b8c:	call   0x10059a35
10006b91:	mov    esi,DWORD PTR [ebp+0x8]
10006b94:	call   0x10002151
10006b99:	push   DWORD PTR [ebp+0xc]
10006b9c:	and    DWORD PTR [ebp-0x4],0x0
10006ba0:	push   esi
10006ba1:	call   0x1000211c
10006ba6:	test   al,al
10006ba8:	jne    0x10006bb3
10006baa:	push   DWORD PTR [ebp+0xc]
10006bad:	push   esi
10006bae:	call   0x100020b8
10006bb3:	mov    eax,esi
10006bb5:	call   0x10059b0d
10006bba:	ret    0x8
10006bbd:	push   ebp
10006bbe:	mov    ebp,esp
10006bc0:	sub    esp,0xc
10006bc3:	mov    eax,DWORD PTR [eax]
10006bc5:	push   ebx
10006bc6:	push   esi
10006bc7:	push   edi
10006bc8:	mov    edi,eax
10006bca:	mov    esi,ecx
10006bcc:	mov    ecx,DWORD PTR [eax-0xc]
10006bcf:	mov    eax,DWORD PTR [esi]
10006bd1:	mov    ebx,DWORD PTR [eax-0xc]
10006bd4:	mov    DWORD PTR [ebp-0x8],edi
10006bd7:	sub    edi,eax
10006bd9:	lea    eax,[ebx+ecx*1]
10006bdc:	push   eax
10006bdd:	mov    DWORD PTR [ebp-0x4],ecx
10006be0:	sar    edi,1
10006be2:	mov    DWORD PTR [ebp-0xc],eax
10006be5:	call   0x100021b6
10006bea:	cmp    edi,ebx
10006bec:	lea    edi,[eax+edi*2]
10006bef:	jbe    0x10006bf4
10006bf1:	mov    edi,DWORD PTR [ebp-0x8]
10006bf4:	push   edi
10006bf5:	push   DWORD PTR [ebp-0x4]
10006bf8:	lea    eax,[eax+ebx*2]
10006bfb:	push   eax
10006bfc:	mov    eax,DWORD PTR [ebp-0x4]
10006bff:	call   0x1000233b
10006c04:	mov    eax,DWORD PTR [ebp-0xc]
10006c07:	add    esp,0xc
10006c0a:	mov    edx,esi
10006c0c:	call   0x10002241
10006c11:	pop    edi
10006c12:	mov    eax,esi
10006c14:	pop    esi
10006c15:	pop    ebx
10006c16:	leave  
10006c17:	ret    
10006c18:	push   ebx
10006c19:	push   esi
10006c1a:	mov    esi,eax
10006c1c:	mov    eax,DWORD PTR [esi]
10006c1e:	push   edi
10006c1f:	mov    edi,DWORD PTR [eax-0xc]
10006c22:	lea    ebx,[edi+0x1]
10006c25:	push   ebx
10006c26:	call   0x100021b6
10006c2b:	mov    WORD PTR [eax+edi*2],0x5c
10006c31:	pop    edi
10006c32:	mov    edx,esi
10006c34:	pop    esi
10006c35:	mov    eax,ebx
10006c37:	pop    ebx
10006c38:	jmp    0x10002241
10006c3d:	push   0x14
10006c3f:	push   0x10074e20
10006c44:	call   0x1005f3ec
10006c49:	mov    BYTE PTR [ebp-0x1d],0x1
10006c4d:	xor    ebx,ebx
10006c4f:	mov    DWORD PTR [ebp-0x4],ebx
10006c52:	mov    DWORD PTR [ebp-0x24],ebx
10006c55:	push   0x2000
10006c5a:	push   DWORD PTR [ebp+0x8]
10006c5d:	lea    eax,[ebp-0x24]
10006c60:	push   eax
10006c61:	call   0x10007619
10006c66:	add    esp,0xc
10006c69:	cmp    eax,ebx
10006c6b:	jge    0x10006c72
10006c6d:	mov    BYTE PTR [ebp-0x1d],bl
10006c70:	jmp    0x10006c9f
10006c72:	mov    eax,DWORD PTR [ebp-0x24]
10006c75:	call   0x1004b6f0
10006c7a:	mov    DWORD PTR [ebp-0x18],esp
10006c7d:	jmp    0x10006c9f
10006c7f:	mov    eax,DWORD PTR [ebp-0x14]
10006c82:	mov    eax,DWORD PTR [eax]
10006c84:	mov    eax,DWORD PTR [eax]
10006c86:	xor    ecx,ecx
10006c88:	cmp    eax,0xc00000fd
10006c8d:	sete   cl
10006c90:	mov    eax,ecx
10006c92:	ret    
10006c93:	mov    esp,DWORD PTR [ebp-0x18]
10006c96:	mov    BYTE PTR [ebp-0x1d],0x0
10006c9a:	call   0x10045050
10006c9f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10006ca6:	mov    al,BYTE PTR [ebp-0x1d]
10006ca9:	lea    esp,[ebp-0x34]
10006cac:	call   0x1005f434
10006cb1:	ret    
10006cb2:	xor    eax,eax
10006cb4:	cmp    esi,eax
10006cb6:	je     0x10006cdf
10006cb8:	cmp    DWORD PTR [esp+0x4],eax
10006cbc:	je     0x10006cdf
10006cbe:	push   DWORD PTR [esp+0x8]
10006cc2:	mov    WORD PTR [esi],ax
10006cc5:	push   esi
10006cc6:	push   0xffffffff
10006cc8:	push   DWORD PTR [esp+0x10]
10006ccc:	push   eax
10006ccd:	push   DWORD PTR [esp+0x20]
10006cd1:	call   DWORD PTR ds:0x1006608c
10006cd7:	neg    eax
10006cd9:	sbb    eax,eax
10006cdb:	and    eax,esi
10006cdd:	jmp    0x10006ce1
10006cdf:	xor    eax,eax
10006ce1:	ret    0xc
10006ce4:	mov    edx,DWORD PTR [ecx]
10006ce6:	mov    eax,DWORD PTR [esp+0x4]
10006cea:	cmp    edx,DWORD PTR [eax]
10006cec:	jne    0x10006d0b
10006cee:	mov    edx,DWORD PTR [ecx+0x4]
10006cf1:	cmp    edx,DWORD PTR [eax+0x4]
10006cf4:	jne    0x10006d0b
10006cf6:	mov    edx,DWORD PTR [ecx+0x8]
10006cf9:	cmp    edx,DWORD PTR [eax+0x8]
10006cfc:	jne    0x10006d0b
10006cfe:	mov    ecx,DWORD PTR [ecx+0xc]
10006d01:	cmp    ecx,DWORD PTR [eax+0xc]
10006d04:	jne    0x10006d0b
10006d06:	xor    eax,eax
10006d08:	inc    eax
10006d09:	jmp    0x10006d0d
10006d0b:	xor    eax,eax
10006d0d:	ret    0x4
10006d10:	push   DWORD PTR [esp+0x4]
10006d14:	call   0x10050def
10006d19:	pop    ecx
10006d1a:	ret    0x4
10006d1d:	push   ecx
10006d1e:	call   0x10050e32
10006d23:	pop    ecx
10006d24:	ret    
10006d25:	push   0x20
10006d27:	mov    eax,0x10060528
10006d2c:	call   0x10059a9e
10006d31:	mov    eax,DWORD PTR [ebp+0x8]
10006d34:	xor    edi,edi
10006d36:	mov    DWORD PTR [ebp-0x18],eax
10006d39:	mov    esi,ecx
10006d3b:	mov    DWORD PTR [ebp-0x1c],edi
10006d3e:	call   DWORD PTR ds:0x1007efec
10006d44:	mov    DWORD PTR [ebp-0x24],eax
10006d47:	mov    DWORD PTR [ebp-0x14],edi
10006d4a:	push   edi
10006d4b:	lea    eax,[ebp-0x20]
10006d4e:	push   eax
10006d4f:	push   esi
10006d50:	mov    DWORD PTR [ebp-0x4],edi
10006d53:	call   0x10050dfb
10006d58:	push   edi
10006d59:	lea    eax,[ebp-0x28]
10006d5c:	push   eax
10006d5d:	push   esi
10006d5e:	call   0x10050dfb
10006d63:	mov    eax,DWORD PTR [ebp-0x20]
10006d66:	add    esp,0x18
10006d69:	cmp    eax,edi
10006d6b:	mov    DWORD PTR [ebp-0x1c],eax
10006d6e:	je     0x10006d96
10006d70:	push   eax
10006d71:	call   DWORD PTR ds:0x100660c4
10006d77:	push   edi
10006d78:	inc    eax
10006d79:	cdq    
10006d7a:	push   0x2
10006d7c:	push   edx
10006d7d:	push   eax
10006d7e:	call   0x1004f400
10006d83:	mov    ebx,eax
10006d85:	add    eax,0x80000000
10006d8a:	adc    edx,edi
10006d8c:	mov    DWORD PTR [ebp-0x28],edx
10006d8f:	jne    0x10006d96
10006d91:	cmp    eax,0xffffffff
10006d94:	jbe    0x10006d9a
10006d96:	xor    eax,eax
10006d98:	jmp    0x10006dcf
10006d9a:	cmp    ebx,0x400
10006da0:	jg     0x10006db8
10006da2:	push   ebx
10006da3:	call   0x10006c3d
10006da8:	test   al,al
10006daa:	pop    ecx
10006dab:	je     0x10006db8
10006dad:	mov    eax,ebx
10006daf:	call   0x1004b6f0
10006db4:	mov    eax,esp
10006db6:	jmp    0x10006dc1
10006db8:	push   ebx
10006db9:	lea    esi,[ebp-0x14]
10006dbc:	call   0x100075b6
10006dc1:	push   DWORD PTR [ebp-0x24]
10006dc4:	mov    esi,eax
10006dc6:	push   ebx
10006dc7:	push   DWORD PTR [ebp-0x1c]
10006dca:	call   0x10002434
10006dcf:	mov    ecx,DWORD PTR [ebp-0x18]
10006dd2:	push   eax
10006dd3:	call   0x100011cd
10006dd8:	cmp    DWORD PTR [ebp-0x14],edi
10006ddb:	je     0x10006df0
10006ddd:	mov    eax,DWORD PTR [ebp-0x14]
10006de0:	mov    esi,DWORD PTR [eax]
10006de2:	push   eax
10006de3:	mov    DWORD PTR [ebp-0x14],esi
10006de6:	call   0x10043508
10006deb:	cmp    esi,edi
10006ded:	pop    ecx
10006dee:	jne    0x10006ddd
10006df0:	mov    eax,DWORD PTR [ebp-0x18]
10006df3:	lea    esp,[ebp-0x3c]
10006df6:	call   0x10059b21
10006dfb:	ret    
10006dfc:	push   0xc
10006dfe:	mov    eax,0x100611c9
10006e03:	call   0x10059a35
10006e08:	xor    edi,edi
10006e0a:	mov    esi,ecx
10006e0c:	mov    DWORD PTR [ebp-0x10],edi
10006e0f:	call   DWORD PTR ds:0x1007efec
10006e15:	mov    DWORD PTR [ebp-0x18],edi
10006e18:	push   edi
10006e19:	lea    eax,[ebp-0x10]
10006e1c:	push   eax
10006e1d:	push   ebx
10006e1e:	mov    DWORD PTR [ebp-0x4],edi
10006e21:	call   0x10050e3e
10006e26:	push   edi
10006e27:	lea    eax,[ebp-0x14]
10006e2a:	push   eax
10006e2b:	push   ebx
10006e2c:	call   0x10050e3e
10006e31:	mov    ecx,DWORD PTR [ebp-0x14]
10006e34:	add    eax,ecx
10006e36:	sub    eax,DWORD PTR [ebp-0x10]
10006e39:	add    esp,0x18
10006e3c:	push   eax
10006e3d:	push   DWORD PTR [ebp-0x10]
10006e40:	call   0x1000406c
10006e45:	mov    eax,esi
10006e47:	call   0x10059b0d
10006e4c:	ret    
10006e4d:	push   0x74
10006e4f:	mov    eax,0x10062f44
10006e54:	call   0x10059a9e
10006e59:	mov    eax,DWORD PTR [ebp+0xc]
10006e5c:	mov    esi,DWORD PTR [ebp+0x8]
10006e5f:	push   eax
10006e60:	push   esi
10006e61:	mov    DWORD PTR [ebp-0x34],eax
10006e64:	call   DWORD PTR ds:0x10080c4c
10006e6a:	mov    ebx,eax
10006e6c:	mov    edi,0x80000000
10006e71:	test   edi,ebx
10006e73:	mov    DWORD PTR [ebp-0x38],ebx
10006e76:	jne    0x10006f8c
10006e7c:	lea    eax,[ebp-0x48]
10006e7f:	push   eax
10006e80:	call   0x10050dde
10006e85:	pop    ecx
10006e86:	and    DWORD PTR [ebp-0x4],0x0
10006e8a:	mov    eax,DWORD PTR [esi]
10006e8c:	lea    ecx,[ebp-0x48]
10006e8f:	push   ecx
10006e90:	push   esi
10006e91:	call   DWORD PTR [eax+0xc4]
10006e97:	test   edi,eax
10006e99:	je     0x10006eab
10006e9b:	lea    eax,[ebp-0x48]
10006e9e:	push   eax
10006e9f:	call   0x10050def
10006ea4:	mov    eax,ebx
10006ea6:	jmp    0x10006f8b
10006eab:	lea    eax,[ebp-0x80]
10006eae:	push   eax
10006eaf:	lea    ecx,[ebp-0x48]
10006eb2:	call   0x10006d25
10006eb7:	pop    ecx
10006eb8:	lea    ecx,[ebp-0x30]
10006ebb:	push   ecx
10006ebc:	push   0x10080ee8
10006ec1:	mov    ecx,eax
10006ec3:	mov    BYTE PTR [ebp-0x4],0x1
10006ec7:	call   0x1001986b
10006ecc:	push   0x0
10006ece:	push   0x1
10006ed0:	lea    ecx,[ebp-0x80]
10006ed3:	mov    BYTE PTR [ebp-0x4],0x3
10006ed7:	call   0x100012f0
10006edc:	lea    edi,[ebp-0x30]
10006edf:	call   0x10019710
10006ee4:	test   al,al
10006ee6:	jne    0x10006f73
10006eec:	call   DWORD PTR ds:0x1007efec
10006ef2:	mov    ebx,eax
10006ef4:	mov    eax,DWORD PTR [ebp-0x30]
10006ef7:	dec    eax
10006ef8:	je     0x10006f11
10006efa:	dec    eax
10006efb:	jne    0x10006f73
10006efd:	push   0xffffffff
10006eff:	push   0x1006d18c
10006f04:	push   DWORD PTR [ebp-0x34]
10006f07:	call   0x10050e10
10006f0c:	add    esp,0xc
10006f0f:	jmp    0x10006f73
10006f11:	lea    eax,[ebp-0x64]
10006f14:	push   eax
10006f15:	lea    eax,[ebp-0x30]
10006f18:	call   0x10019730
10006f1d:	cmp    DWORD PTR [eax+0x18],0x10
10006f21:	jb     0x10006f28
10006f23:	mov    esi,DWORD PTR [eax+0x4]
10006f26:	jmp    0x10006f2b
10006f28:	lea    esi,[eax+0x4]
10006f2b:	test   esi,esi
10006f2d:	je     0x10006f41
10006f2f:	push   esi
10006f30:	call   DWORD PTR ds:0x100660dc
10006f36:	mov    edi,eax
10006f38:	inc    edi
10006f39:	cmp    edi,0x3fffffff
10006f3f:	jle    0x10006f45
10006f41:	xor    eax,eax
10006f43:	jmp    0x10006f59
10006f45:	lea    eax,[edi+edi*1]
10006f48:	call   0x1004b6f0
10006f4d:	mov    eax,esp
10006f4f:	push   ebx
10006f50:	push   edi
10006f51:	push   esi
10006f52:	mov    esi,eax
10006f54:	call   0x10006cb2
10006f59:	push   0xffffffff
10006f5b:	push   eax
10006f5c:	push   DWORD PTR [ebp-0x34]
10006f5f:	call   0x10050e10
10006f64:	add    esp,0xc
10006f67:	push   0x0
10006f69:	push   0x1
10006f6b:	lea    ecx,[ebp-0x64]
10006f6e:	call   0x100012f0
10006f73:	push   0x0
10006f75:	push   0x1
10006f77:	lea    ecx,[ebp-0x2c]
10006f7a:	call   0x100012f0
10006f7f:	lea    eax,[ebp-0x48]
10006f82:	push   eax
10006f83:	call   0x10050def
10006f88:	mov    eax,DWORD PTR [ebp-0x38]
10006f8b:	pop    ecx
10006f8c:	lea    esp,[ebp-0x90]
10006f92:	call   0x10059b21
10006f97:	ret    0x8
10006f9a:	push   0x30
10006f9c:	mov    eax,0x1006370a
10006fa1:	call   0x10059a9e
10006fa6:	mov    esi,DWORD PTR [ebp+0x18]
10006fa9:	mov    edx,DWORD PTR [ebp+0x14]
10006fac:	mov    ecx,DWORD PTR [ebp+0x10]
10006faf:	mov    edi,DWORD PTR [ebp+0xc]
10006fb2:	mov    eax,DWORD PTR [ebp+0x8]
10006fb5:	push   esi
10006fb6:	push   edx
10006fb7:	push   ecx
10006fb8:	push   edi
10006fb9:	push   eax
10006fba:	mov    DWORD PTR [ebp-0x3c],esi
10006fbd:	call   DWORD PTR ds:0x10080c44
10006fc3:	xor    ebx,ebx
10006fc5:	push   ebx
10006fc6:	mov    esi,0x10080d94
10006fcb:	push   esi
10006fcc:	mov    DWORD PTR [ebp-0x38],eax
10006fcf:	call   DWORD PTR ds:0x100660e4
10006fd5:	test   eax,eax
10006fd7:	jne    0x100070a8
10006fdd:	lea    eax,[ebp-0x20]
10006fe0:	push   eax
10006fe1:	mov    ecx,edi
10006fe3:	mov    DWORD PTR [ebp-0x20],0x5d0fcdd0
10006fea:	mov    WORD PTR [ebp-0x1c],0x4daa
10006ff0:	mov    WORD PTR [ebp-0x1a],0x11d2
10006ff6:	mov    BYTE PTR [ebp-0x18],0xb3
10006ffa:	mov    BYTE PTR [ebp-0x17],0x28
10006ffe:	mov    BYTE PTR [ebp-0x16],bl
10007001:	mov    BYTE PTR [ebp-0x15],0x80
10007005:	mov    BYTE PTR [ebp-0x14],0x5f
10007009:	mov    BYTE PTR [ebp-0x13],0x8a
1000700d:	mov    BYTE PTR [ebp-0x12],0x38
10007011:	mov    BYTE PTR [ebp-0x11],0x59
10007015:	mov    DWORD PTR [ebp-0x30],0xa6cf9084
1000701c:	mov    WORD PTR [ebp-0x2c],0x15b3
10007022:	mov    WORD PTR [ebp-0x2a],0x11d2
10007028:	mov    BYTE PTR [ebp-0x28],0x93
1000702c:	mov    BYTE PTR [ebp-0x27],0x2e
10007030:	mov    BYTE PTR [ebp-0x26],bl
10007033:	mov    BYTE PTR [ebp-0x25],0x80
10007037:	mov    BYTE PTR [ebp-0x24],0x5f
1000703b:	mov    BYTE PTR [ebp-0x23],0x8a
1000703f:	mov    BYTE PTR [ebp-0x22],0xdd
10007043:	mov    BYTE PTR [ebp-0x21],0x32
10007047:	call   0x10006ce4
1000704c:	test   eax,eax
1000704e:	je     0x100070a8
10007050:	mov    eax,DWORD PTR [ebp-0x3c]
10007053:	lea    edx,[ebp-0x34]
10007056:	push   edx
10007057:	mov    DWORD PTR [ebp-0x4],ebx
1000705a:	mov    eax,DWORD PTR [eax]
1000705c:	lea    edx,[ebp-0x30]
1000705f:	push   edx
10007060:	mov    DWORD PTR [ebp-0x34],ebx
10007063:	mov    ecx,DWORD PTR [eax]
10007065:	push   eax
10007066:	call   DWORD PTR [ecx]
10007068:	test   eax,eax
1000706a:	js     0x1000709c
1000706c:	mov    eax,DWORD PTR [ebp-0x34]
1000706f:	mov    eax,DWORD PTR [eax]
10007071:	push   0x10006e4d
10007076:	push   DWORD PTR [eax+0xbc]
1000707c:	call   0x10057470
10007081:	push   ebx
10007082:	push   0x1
10007084:	push   esi
10007085:	mov    esi,DWORD PTR ds:0x100660e0
1000708b:	mov    ds:0x10080c4c,eax
10007090:	call   esi
10007092:	push   ebx
10007093:	push   0x1
10007095:	push   0x10080da0
1000709a:	call   esi
1000709c:	or     DWORD PTR [ebp-0x4],0xffffffff
100070a0:	lea    ecx,[ebp-0x34]
100070a3:	call   0x10050e64
100070a8:	mov    eax,DWORD PTR [ebp-0x38]
100070ab:	call   0x10059b21
100070b0:	ret    0x14
100070b3:	jmp    0x10050e64
100070b8:	push   0x4
100070ba:	mov    eax,0x10063cf2
100070bf:	call   0x10059a35
100070c4:	push   0x0
100070c6:	mov    esi,0x10080d9c
100070cb:	push   esi
100070cc:	call   DWORD PTR ds:0x100660e4
100070d2:	test   eax,eax
100070d4:	jne    0x1000711e
100070d6:	push   eax
100070d7:	push   0x1
100070d9:	push   esi
100070da:	call   DWORD PTR ds:0x100660e0
100070e0:	and    DWORD PTR [ebp-0x10],0x0
100070e4:	and    DWORD PTR [ebp-0x4],0x0
100070e8:	lea    ecx,[ebp-0x10]
100070eb:	call   0x10007603
100070f0:	push   eax
100070f1:	call   0x10050dbc
100070f6:	test   eax,eax
100070f8:	pop    ecx
100070f9:	js     0x10007112
100070fb:	mov    eax,DWORD PTR [ebp-0x10]
100070fe:	mov    eax,DWORD PTR [eax]
10007100:	push   0x10006f9a
10007105:	push   DWORD PTR [eax+0x14]
10007108:	call   0x10057470
1000710d:	mov    ds:0x10080c44,eax
10007112:	or     DWORD PTR [ebp-0x4],0xffffffff
10007116:	lea    ecx,[ebp-0x10]
10007119:	call   0x10050e64
1000711e:	call   0x10059b0d
10007123:	ret    
10007124:	push   esi
10007125:	push   DWORD PTR [esp+0x10]
10007129:	push   DWORD PTR [esp+0x10]
1000712d:	push   DWORD PTR [esp+0x10]
10007131:	call   DWORD PTR ds:0x10080c50
10007137:	mov    esi,eax
10007139:	add    esp,0xc
1000713c:	test   esi,esi
1000713e:	js     0x10007147
10007140:	call   0x100070b8
10007145:	mov    eax,esi
10007147:	pop    esi
10007148:	ret    
10007149:	push   0x78
1000714b:	mov    eax,0x100623c4
10007150:	call   0x10059a9e
10007155:	mov    eax,DWORD PTR [ebp+0x8]
10007158:	mov    DWORD PTR [ebp-0x48],eax
1000715b:	lea    eax,[ebp-0x68]
1000715e:	xor    esi,esi
10007160:	push   eax
10007161:	mov    DWORD PTR [edi],esi
10007163:	call   0x10050e21
10007168:	push   0xffffffff
1000716a:	lea    eax,[ebp-0x68]
1000716d:	push   0x1006d190
10007172:	push   eax
10007173:	mov    DWORD PTR [ebp-0x4],esi
10007176:	call   0x10050e53
1000717b:	mov    eax,ds:0x10080c78
10007180:	mov    ecx,DWORD PTR [eax]
10007182:	add    esp,0x10
10007185:	lea    edx,[ebp-0x44]
10007188:	push   edx
10007189:	push   esi
1000718a:	push   esi
1000718b:	lea    edx,[ebp-0x68]
1000718e:	push   edx
1000718f:	push   eax
10007190:	call   DWORD PTR [ecx+0x14]
10007193:	cmp    eax,esi
10007195:	je     0x100071a9
10007197:	lea    eax,[ebp-0x68]
1000719a:	push   eax
1000719b:	call   0x10050e32
100071a0:	pop    ecx
100071a1:	xor    al,al
100071a3:	call   0x10059b21
100071a8:	ret    
100071a9:	lea    edx,[ebp-0x30]
100071ac:	push   edx
100071ad:	xor    ebx,ebx
100071af:	push   esi
100071b0:	inc    ebx
100071b1:	mov    BYTE PTR [ebp-0x4],bl
100071b4:	mov    eax,ds:0x10080c74
100071b9:	push   DWORD PTR [ebp-0x44]
100071bc:	mov    DWORD PTR [ebp-0x30],esi
100071bf:	mov    ecx,DWORD PTR [eax]
100071c1:	push   eax
100071c2:	call   DWORD PTR [ecx+0xc]
100071c5:	cmp    eax,esi
100071c7:	je     0x100071e5
100071c9:	xor    bl,bl
100071cb:	lea    ecx,[ebp-0x30]
100071ce:	mov    BYTE PTR [ebp-0x4],0x0
100071d2:	call   0x10050e64
100071d7:	lea    eax,[ebp-0x68]
100071da:	push   eax
100071db:	call   0x10050e32
100071e0:	pop    ecx
100071e1:	mov    al,bl
100071e3:	jmp    0x100071a3
100071e5:	cmp    DWORD PTR [ebp-0x30],esi
100071e8:	je     0x100071cb
100071ea:	lea    eax,[ebp-0x40]
100071ed:	push   eax
100071ee:	call   0x10050e21
100071f3:	pop    ecx
100071f4:	push   esi
100071f5:	lea    ecx,[ebp-0x2c]
100071f8:	mov    DWORD PTR [ebp-0x14],0xf
100071ff:	call   0x1000141c
10007204:	mov    BYTE PTR [ebp-0x4],0x3
10007208:	mov    eax,DWORD PTR [ebp-0x30]
1000720b:	mov    ecx,DWORD PTR [eax]
1000720d:	lea    edx,[ebp-0x40]
10007210:	push   edx
10007211:	push   eax
10007212:	call   DWORD PTR [ecx+0x14]
10007215:	cmp    eax,esi
10007217:	je     0x1000722f
10007219:	push   esi
1000721a:	push   ebx
1000721b:	lea    ecx,[ebp-0x2c]
1000721e:	call   0x100012f0
10007223:	lea    eax,[ebp-0x40]
10007226:	push   eax
10007227:	call   0x10050e32
1000722c:	pop    ecx
1000722d:	jmp    0x100071c9
1000722f:	lea    ebx,[ebp-0x40]
10007232:	lea    ecx,[ebp-0x84]
10007238:	call   0x10006dfc
1000723d:	push   0x1006d1a8
10007242:	mov    esi,eax
10007244:	mov    BYTE PTR [ebp-0x4],0x4
10007248:	call   0x1000658e
1000724d:	mov    bl,al
1000724f:	neg    bl
10007251:	pop    ecx
10007252:	sbb    bl,bl
10007254:	xor    esi,esi
10007256:	push   esi
10007257:	push   0x1
10007259:	lea    ecx,[ebp-0x84]
1000725f:	inc    bl
10007261:	call   0x100012f0
10007266:	test   bl,bl
10007268:	je     0x10007286
1000726a:	push   esi
1000726b:	push   0x1
1000726d:	lea    ecx,[ebp-0x2c]
10007270:	call   0x100012f0
10007275:	lea    eax,[ebp-0x40]
10007278:	push   eax
10007279:	call   0x10050e32
1000727e:	pop    ecx
1000727f:	mov    bl,0x1
10007281:	jmp    0x100071cb
10007286:	lea    eax,[ebp-0x58]
10007289:	push   eax
1000728a:	call   0x10050e21
1000728f:	pop    ecx
10007290:	mov    BYTE PTR [ebp-0x4],0x5
10007294:	mov    eax,DWORD PTR [ebp-0x30]
10007297:	mov    ecx,DWORD PTR [eax]
10007299:	lea    edx,[ebp-0x58]
1000729c:	push   edx
1000729d:	push   eax
1000729e:	call   DWORD PTR [ecx+0xc]
100072a1:	cmp    eax,esi
100072a3:	je     0x100072b7
100072a5:	lea    eax,[ebp-0x58]
100072a8:	push   eax
100072a9:	call   0x10050e32
100072ae:	pop    ecx
100072af:	push   esi
100072b0:	push   0x1
100072b2:	jmp    0x1000721b
100072b7:	lea    ebx,[ebp-0x58]
100072ba:	lea    ecx,[ebp-0x84]
100072c0:	call   0x10006dfc
100072c5:	mov    ecx,DWORD PTR [ebp-0x48]
100072c8:	push   0xffffffff
100072ca:	xor    ebx,ebx
100072cc:	push   ebx
100072cd:	push   eax
100072ce:	mov    BYTE PTR [ebp-0x4],0x6
100072d2:	call   0x10001241
100072d7:	push   ebx
100072d8:	push   0x1
100072da:	lea    ecx,[ebp-0x84]
100072e0:	mov    BYTE PTR [ebp-0x4],0x5
100072e4:	call   0x100012f0
100072e9:	mov    eax,DWORD PTR [ebp-0x30]
100072ec:	mov    ecx,DWORD PTR [eax]
100072ee:	push   edi
100072ef:	push   eax
100072f0:	call   DWORD PTR [ecx+0x10]
100072f3:	cmp    eax,ebx
100072f5:	lea    eax,[ebp-0x58]
100072f8:	push   eax
100072f9:	je     0x1000731b
100072fb:	call   0x10050e32
10007300:	pop    ecx
10007301:	push   ebx
10007302:	push   0x1
10007304:	lea    ecx,[ebp-0x2c]
10007307:	call   0x100012f0
1000730c:	lea    eax,[ebp-0x40]
1000730f:	push   eax
10007310:	call   0x10050e32
10007315:	pop    ecx
10007316:	jmp    0x100071cb
1000731b:	call   0x10050e32
10007320:	pop    ecx
10007321:	push   ebx
10007322:	jmp    0x1000726b
10007327:	push   ebp
10007328:	mov    ebp,esp
1000732a:	sub    esp,0x1c
1000732d:	mov    eax,ds:0x1007e030
10007332:	xor    eax,ebp
10007334:	mov    DWORD PTR [ebp-0x8],eax
10007337:	mov    edx,DWORD PTR [ebp+0x14]
1000733a:	mov    ecx,DWORD PTR [ebp+0x10]
1000733d:	mov    eax,DWORD PTR [ebp+0xc]
10007340:	push   esi
10007341:	mov    esi,DWORD PTR [ebp+0x8]
10007344:	push   edi
10007345:	push   DWORD PTR [ebp+0x18]
10007348:	push   edx
10007349:	push   ecx
1000734a:	push   eax
1000734b:	push   esi
1000734c:	call   DWORD PTR ds:0x10080c40
10007352:	mov    edi,eax
10007354:	add    esp,0x14
10007357:	test   edi,edi
10007359:	js     0x100073fc
1000735f:	mov    esi,DWORD PTR [esi]
10007361:	mov    eax,DWORD PTR [esi]
10007363:	push   esi
10007364:	call   DWORD PTR [eax+0x4]
10007367:	mov    eax,DWORD PTR [esi]
10007369:	push   0x10080c74
1000736e:	lea    ecx,[ebp-0x18]
10007371:	push   ecx
10007372:	push   0x1006d1b0
10007377:	push   esi
10007378:	mov    DWORD PTR [ebp-0x18],0xe38ab577
1000737f:	mov    WORD PTR [ebp-0x14],0x786e
10007385:	mov    WORD PTR [ebp-0x12],0x4a7f
1000738b:	mov    BYTE PTR [ebp-0x10],0x93
1000738f:	mov    BYTE PTR [ebp-0xf],0x6b
10007393:	mov    BYTE PTR [ebp-0xe],0x7a
10007397:	mov    BYTE PTR [ebp-0xd],0xe4
1000739b:	mov    BYTE PTR [ebp-0xc],0xc7
1000739f:	mov    BYTE PTR [ebp-0xb],0xd8
100073a3:	mov    BYTE PTR [ebp-0xa],0x77
100073a7:	mov    BYTE PTR [ebp-0x9],0xb2
100073ab:	call   DWORD PTR [eax+0x10]
100073ae:	mov    eax,DWORD PTR [esi]
100073b0:	push   0x10080c78
100073b5:	lea    ecx,[ebp-0x18]
100073b8:	push   ecx
100073b9:	push   0x1006d1e0
100073be:	push   esi
100073bf:	mov    DWORD PTR [ebp-0x18],0xbddeda3f
100073c6:	mov    WORD PTR [ebp-0x14],0x9020
100073cc:	mov    WORD PTR [ebp-0x12],0x4d12
100073d2:	mov    BYTE PTR [ebp-0x10],0x8c
100073d6:	mov    BYTE PTR [ebp-0xf],0x70
100073da:	mov    BYTE PTR [ebp-0xe],0x98
100073de:	mov    BYTE PTR [ebp-0xd],0x4e
100073e2:	mov    BYTE PTR [ebp-0xc],0xe9
100073e6:	mov    BYTE PTR [ebp-0xb],0xf7
100073ea:	mov    BYTE PTR [ebp-0xa],0x93
100073ee:	mov    BYTE PTR [ebp-0x9],0x5e
100073f2:	call   DWORD PTR [eax+0x10]
100073f5:	call   0x100070b8
100073fa:	mov    eax,edi
100073fc:	mov    ecx,DWORD PTR [ebp-0x8]
100073ff:	pop    edi
10007400:	xor    ecx,ebp
10007402:	pop    esi
10007403:	call   0x10042e97
10007408:	leave  
10007409:	ret    
1000740a:	push   ebx
1000740b:	push   esi
1000740c:	push   edi
1000740d:	mov    edi,DWORD PTR [esp+0x10]
10007411:	push   edi
10007412:	call   DWORD PTR ds:0x10080c48
10007418:	pop    ecx
10007419:	push   0x0
1000741b:	mov    esi,0x10080d9c
10007420:	push   esi
10007421:	mov    ebx,eax
10007423:	call   DWORD PTR ds:0x100660e4
10007429:	test   eax,eax
1000742b:	jne    0x1000744f
1000742d:	push   eax
1000742e:	push   0x1
10007430:	push   esi
10007431:	call   DWORD PTR ds:0x100660e0
10007437:	mov    eax,DWORD PTR [edi]
10007439:	mov    eax,DWORD PTR [eax]
1000743b:	add    eax,0x14
1000743e:	push   0x10006f9a
10007443:	push   DWORD PTR [eax]
10007445:	call   0x10057470
1000744a:	mov    ds:0x10080c44,eax
1000744f:	pop    edi
10007450:	pop    esi
10007451:	mov    eax,ebx
10007453:	pop    ebx
10007454:	ret    
10007455:	push   ebp
10007456:	mov    ebp,esp
10007458:	and    esp,0xfffffff8
1000745b:	push   ecx
1000745c:	push   esi
1000745d:	push   0x0
1000745f:	mov    esi,0x10080d98
10007464:	push   esi
10007465:	call   DWORD PTR ds:0x100660e4
1000746b:	test   eax,eax
1000746d:	jne    0x100075b1
10007473:	push   eax
10007474:	push   0x1
10007476:	push   esi
10007477:	call   DWORD PTR ds:0x100660e0
1000747d:	push   0x0
1000747f:	call   0x10050c92
10007484:	test   eax,eax
10007486:	pop    ecx
10007487:	js     0x100075b1
1000748d:	push   0x4ef70af4
10007492:	push   0x1006d208
10007497:	call   0x10004246
1000749c:	push   eax
1000749d:	push   0xd
1000749f:	push   0x1006d248
100074a4:	call   0x10004258
100074a9:	add    esp,0x14
100074ac:	push   eax
100074ad:	push   0x1006d258
100074b2:	push   0x9
100074b4:	mov    esi,0x1006d298
100074b9:	push   esi
100074ba:	call   0x10004258
100074bf:	add    esp,0xc
100074c2:	push   eax
100074c3:	call   0x10057ad0
100074c8:	test   eax,eax
100074ca:	je     0x100074dc
100074cc:	push   0x10007124
100074d1:	push   eax
100074d2:	call   0x10057470
100074d7:	mov    ds:0x10080c50,eax
100074dc:	push   0x1006d2a4
100074e1:	push   0xd
100074e3:	push   0x1006d2cc
100074e8:	call   0x10004258
100074ed:	add    esp,0xc
100074f0:	push   eax
100074f1:	push   0x8712d34
100074f6:	push   0x52e2a90a
100074fb:	push   0x1006d2dc
10007500:	call   0x10004246
10007505:	pop    ecx
10007506:	pop    ecx
10007507:	push   eax
10007508:	call   0x10004246
1000750d:	push   eax
1000750e:	push   0x9
10007510:	push   esi
10007511:	call   0x10004258
10007516:	add    esp,0x14
10007519:	push   eax
1000751a:	call   0x10057ad0
1000751f:	test   eax,eax
10007521:	je     0x10007533
10007523:	push   0x10007327
10007528:	push   eax
10007529:	call   0x10057470
1000752e:	mov    ds:0x10080c40,eax
10007533:	push   0x1b21de18
10007538:	push   0x33df6e8a
1000753d:	push   0x2e3cf6de
10007542:	push   0x7d006608
10007547:	push   0x4d61e832
1000754c:	push   0x1006d318
10007551:	call   0x10004246
10007556:	pop    ecx
10007557:	pop    ecx
10007558:	push   eax
10007559:	call   0x10004246
1000755e:	pop    ecx
1000755f:	pop    ecx
10007560:	push   eax
10007561:	call   0x10004246
10007566:	pop    ecx
10007567:	pop    ecx
10007568:	push   eax
10007569:	call   0x10004246
1000756e:	pop    ecx
1000756f:	pop    ecx
10007570:	push   eax
10007571:	call   0x10004246
10007576:	push   eax
10007577:	push   0x16
10007579:	push   0x1006d33c
1000757e:	call   0x10004258
10007583:	add    esp,0x14
10007586:	push   eax
10007587:	push   0x1006d354
1000758c:	push   0x9
1000758e:	push   esi
1000758f:	call   0x10004258
10007594:	add    esp,0xc
10007597:	push   eax
10007598:	call   0x10057ad0
1000759d:	test   eax,eax
1000759f:	je     0x100075b1
100075a1:	push   0x1000740a
100075a6:	push   eax
100075a7:	call   0x10057470
100075ac:	mov    ds:0x10080c48,eax
100075b1:	pop    esi
100075b2:	mov    esp,ebp
100075b4:	pop    ebp
100075b5:	ret    
100075b6:	push   ebp
100075b7:	mov    ebp,esp
100075b9:	push   0x8
100075bb:	push   DWORD PTR [ebp+0x8]
100075be:	lea    eax,[ebp+0x8]
100075c1:	push   eax
100075c2:	call   0x10007619
100075c7:	add    esp,0xc
100075ca:	test   eax,eax
100075cc:	jge    0x100075d4
100075ce:	push   eax
100075cf:	call   0x10001f45
100075d4:	push   DWORD PTR [ebp+0x8]
100075d7:	call   0x10044f8d
100075dc:	test   eax,eax
100075de:	pop    ecx
100075df:	je     0x100075ea
100075e1:	mov    ecx,DWORD PTR [esi]
100075e3:	mov    DWORD PTR [eax],ecx
100075e5:	mov    DWORD PTR [esi],eax
100075e7:	add    eax,0x8
100075ea:	pop    ebp
100075eb:	ret    0x4
100075ee:	jmp    0x100075fd
100075f0:	mov    eax,DWORD PTR [esi]
100075f2:	mov    ecx,DWORD PTR [eax]
100075f4:	push   eax
100075f5:	mov    DWORD PTR [esi],ecx
100075f7:	call   0x10043508
100075fc:	pop    ecx
100075fd:	cmp    DWORD PTR [esi],0x0
10007600:	jne    0x100075f0
10007602:	ret    
10007603:	push   esi
10007604:	mov    esi,ecx
10007606:	mov    eax,DWORD PTR [esi]
10007608:	and    DWORD PTR [esi],0x0
1000760b:	test   eax,eax
1000760d:	je     0x10007615
1000760f:	mov    ecx,DWORD PTR [eax]
10007611:	push   eax
10007612:	call   DWORD PTR [ecx+0x8]
10007615:	mov    eax,esi
10007617:	pop    esi
10007618:	ret    
10007619:	mov    eax,DWORD PTR [esp+0x8]
1000761d:	mov    ecx,DWORD PTR [esp+0xc]
10007621:	or     edx,0xffffffff
10007624:	sub    edx,eax
10007626:	cmp    edx,ecx
10007628:	jae    0x10007630
1000762a:	mov    eax,0x80070057
1000762f:	ret    
10007630:	add    eax,ecx
10007632:	mov    ecx,DWORD PTR [esp+0x4]
10007636:	mov    DWORD PTR [ecx],eax
10007638:	xor    eax,eax
1000763a:	ret    
1000763b:	test   esi,esi
1000763d:	jne    0x10007642
1000763f:	xor    eax,eax
10007641:	ret    
10007642:	test   edi,edi
10007644:	je     0x1000764c
10007646:	mov    eax,DWORD PTR [edi]
10007648:	push   edi
10007649:	call   DWORD PTR [eax+0x4]
1000764c:	mov    eax,DWORD PTR [esi]
1000764e:	test   eax,eax
10007650:	je     0x10007658
10007652:	mov    ecx,DWORD PTR [eax]
10007654:	push   eax
10007655:	call   DWORD PTR [ecx+0x8]
10007658:	mov    DWORD PTR [esi],edi
1000765a:	mov    eax,edi
1000765c:	ret    
1000765d:	cmp    DWORD PTR [eax+0x18],0x10
10007661:	jb     0x10007668
10007663:	mov    eax,DWORD PTR [eax+0x4]
10007666:	jmp    0x1000766b
10007668:	add    eax,0x4
1000766b:	cmp    DWORD PTR [ecx+0x18],0x10
1000766f:	jb     0x10007676
10007671:	mov    ecx,DWORD PTR [ecx+0x4]
10007674:	jmp    0x10007679
10007676:	add    ecx,0x4
10007679:	push   eax
1000767a:	push   ecx
1000767b:	call   0x1004566f
10007680:	pop    ecx
10007681:	pop    ecx
10007682:	xor    ecx,ecx
10007684:	test   eax,eax
10007686:	setl   cl
10007689:	mov    al,cl
1000768b:	ret    
1000768c:	push   0x0
1000768e:	mov    eax,0x10060505
10007693:	call   0x10059a35
10007698:	mov    esi,DWORD PTR [ebp+0x8]
1000769b:	xor    ebx,ebx
1000769d:	mov    DWORD PTR [esi],ebx
1000769f:	mov    DWORD PTR [ebp-0x4],ebx
100076a2:	mov    DWORD PTR [esi+0x8],ebx
100076a5:	mov    DWORD PTR [esi+0xc],ebx
100076a8:	mov    DWORD PTR [esi+0x10],ebx
100076ab:	push   0x400
100076b0:	mov    BYTE PTR [ebp-0x4],0x1
100076b4:	call   0x10043721
100076b9:	mov    DWORD PTR [esi+0x14],eax
100076bc:	pop    ecx
100076bd:	mov    DWORD PTR [esi+0x18],ebx
100076c0:	mov    DWORD PTR [esi+0x1c],0x400
100076c7:	mov    DWORD PTR [esi+0x20],ebx
100076ca:	mov    eax,esi
100076cc:	call   0x10059b0d
100076d1:	ret    0x4
100076d4:	push   esi
100076d5:	mov    esi,eax
100076d7:	mov    eax,DWORD PTR [esi+0x18]
100076da:	add    eax,edi
100076dc:	call   0x100078b1
100076e1:	mov    eax,DWORD PTR [esi+0x14]
100076e4:	add    eax,DWORD PTR [esi+0x18]
100076e7:	push   edi
100076e8:	push   DWORD PTR [esp+0xc]
100076ec:	push   eax
100076ed:	call   0x10045180
100076f2:	add    DWORD PTR [esi+0x18],edi
100076f5:	add    esp,0xc
100076f8:	pop    esi
100076f9:	ret    0x4
100076fc:	push   ebp
100076fd:	mov    ebp,esp
100076ff:	push   ecx
10007700:	mov    ecx,DWORD PTR [edi+0x4]
10007703:	push   ebx
10007704:	mov    ebx,DWORD PTR [ebp+0xc]
10007707:	cmp    ebx,ecx
10007709:	push   esi
1000770a:	mov    esi,eax
1000770c:	jbe    0x1000771a
1000770e:	mov    eax,DWORD PTR [esi+0x18]
10007711:	sub    eax,ecx
10007713:	add    eax,ebx
10007715:	call   0x100078b1
1000771a:	mov    ecx,DWORD PTR [edi+0x4]
1000771d:	mov    eax,DWORD PTR [edi]
1000771f:	mov    edx,DWORD PTR [esi+0x18]
10007722:	sub    ebx,ecx
10007724:	add    ecx,eax
10007726:	mov    DWORD PTR [ebp-0x4],ecx
10007729:	sub    edx,DWORD PTR [ebp-0x4]
1000772c:	mov    ecx,DWORD PTR [esi+0x14]
1000772f:	push   edx
10007730:	mov    edx,DWORD PTR [ebp-0x4]
10007733:	add    edx,ecx
10007735:	add    ecx,eax
10007737:	add    ecx,DWORD PTR [ebp+0xc]
1000773a:	push   edx
1000773b:	push   ecx
1000773c:	call   0x100456c0
10007741:	push   DWORD PTR [ebp+0xc]
10007744:	mov    eax,DWORD PTR [esi+0x14]
10007747:	add    eax,DWORD PTR [edi]
10007749:	push   DWORD PTR [ebp+0x8]
1000774c:	push   eax
1000774d:	call   0x100456c0
10007752:	add    esp,0x18
10007755:	push   ebx
10007756:	push   DWORD PTR [edi]
10007758:	mov    eax,esi
1000775a:	call   0x10007849
1000775f:	mov    eax,DWORD PTR [ebp+0xc]
10007762:	mov    DWORD PTR [edi+0x4],eax
10007765:	add    DWORD PTR [esi+0x18],ebx
10007768:	pop    esi
10007769:	pop    ebx
1000776a:	leave  
1000776b:	ret    0x8
1000776e:	push   ebp
1000776f:	mov    ebp,esp
10007771:	sub    esp,0xc
10007774:	push   esi
10007775:	mov    esi,eax
10007777:	mov    edx,DWORD PTR [esi+0x8]
1000777a:	add    esi,0x4
1000777d:	test   edx,edx
1000777f:	push   edi
10007780:	jne    0x10007786
10007782:	xor    ecx,ecx
10007784:	jmp    0x1000778e
10007786:	mov    ecx,DWORD PTR [esi+0x8]
10007789:	sub    ecx,edx
1000778b:	sar    ecx,0x2
1000778e:	test   edx,edx
10007790:	je     0x100077ae
10007792:	mov    eax,DWORD PTR [esi+0xc]
10007795:	sub    eax,edx
10007797:	sar    eax,0x2
1000779a:	cmp    ecx,eax
1000779c:	jae    0x100077ae
1000779e:	mov    eax,DWORD PTR [esi+0x8]
100077a1:	mov    ecx,DWORD PTR [ebp+0x8]
100077a4:	mov    DWORD PTR [eax],ecx
100077a6:	add    eax,0x4
100077a9:	mov    DWORD PTR [esi+0x8],eax
100077ac:	jmp    0x100077cb
100077ae:	mov    edi,DWORD PTR [esi+0x8]
100077b1:	cmp    edx,edi
100077b3:	jbe    0x100077ba
100077b5:	call   0x100433b0
100077ba:	push   edi
100077bb:	push   esi
100077bc:	lea    eax,[ebp+0x8]
100077bf:	push   eax
100077c0:	lea    eax,[ebp-0xc]
100077c3:	push   eax
100077c4:	mov    eax,esi
100077c6:	call   0x10009f63
100077cb:	pop    edi
100077cc:	pop    esi
100077cd:	leave  
100077ce:	ret    0x4
100077d1:	push   ebx
100077d2:	push   esi
100077d3:	mov    esi,eax
100077d5:	add    esi,0x4
100077d8:	push   edi
100077d9:	mov    edi,DWORD PTR [esi+0x4]
100077dc:	cmp    edi,DWORD PTR [esi+0x8]
100077df:	jbe    0x100077e6
100077e1:	call   0x100433b0
100077e6:	mov    ebx,DWORD PTR [esi+0x8]
100077e9:	cmp    DWORD PTR [esi+0x4],ebx
100077ec:	jbe    0x100077f3
100077ee:	call   0x100433b0
100077f3:	cmp    esi,esi
100077f5:	je     0x100077fc
100077f7:	call   0x100433b0
100077fc:	cmp    edi,ebx
100077fe:	je     0x10007843
10007800:	cmp    edi,DWORD PTR [esi+0x8]
10007803:	jb     0x1000780a
10007805:	call   0x100433b0
1000780a:	mov    eax,DWORD PTR [edi]
1000780c:	cmp    eax,DWORD PTR [esp+0x10]
10007810:	je     0x10007821
10007812:	cmp    edi,DWORD PTR [esi+0x8]
10007815:	jb     0x1000781c
10007817:	call   0x100433b0
1000781c:	add    edi,0x4
1000781f:	jmp    0x100077e6
10007821:	mov    eax,DWORD PTR [esi+0x8]
10007824:	lea    ecx,[edi+0x4]
10007827:	sub    eax,ecx
10007829:	sar    eax,0x2
1000782c:	test   eax,eax
1000782e:	jle    0x1000783f
10007830:	shl    eax,0x2
10007833:	push   eax
10007834:	push   ecx
10007835:	push   eax
10007836:	push   edi
10007837:	call   0x10042ea6
1000783c:	add    esp,0x10
1000783f:	add    DWORD PTR [esi+0x8],0xfffffffc
10007843:	pop    edi
10007844:	pop    esi
10007845:	pop    ebx
10007846:	ret    0x4
10007849:	push   ebp
1000784a:	mov    ebp,esp
1000784c:	and    esp,0xfffffff8
1000784f:	push   ecx
10007850:	push   ebx
10007851:	push   esi
10007852:	mov    esi,eax
10007854:	add    esi,0x4
10007857:	push   edi
10007858:	mov    edi,DWORD PTR [esi+0x4]
1000785b:	cmp    edi,DWORD PTR [esi+0x8]
1000785e:	jbe    0x10007865
10007860:	call   0x100433b0
10007865:	mov    ebx,DWORD PTR [esi+0x8]
10007868:	cmp    DWORD PTR [esi+0x4],ebx
1000786b:	jbe    0x10007872
1000786d:	call   0x100433b0
10007872:	cmp    esi,esi
10007874:	je     0x1000787b
10007876:	call   0x100433b0
1000787b:	cmp    edi,ebx
1000787d:	je     0x100078a8
1000787f:	cmp    edi,DWORD PTR [esi+0x8]
10007882:	jb     0x10007889
10007884:	call   0x100433b0
10007889:	mov    eax,DWORD PTR [edi]
1000788b:	mov    ecx,DWORD PTR [eax]
1000788d:	cmp    ecx,DWORD PTR [ebp+0x8]
10007890:	jbe    0x10007899
10007892:	mov    edx,DWORD PTR [ebp+0xc]
10007895:	add    ecx,edx
10007897:	mov    DWORD PTR [eax],ecx
10007899:	cmp    edi,DWORD PTR [esi+0x8]
1000789c:	jb     0x100078a3
1000789e:	call   0x100433b0
100078a3:	add    edi,0x4
100078a6:	jmp    0x10007865
100078a8:	pop    edi
100078a9:	pop    esi
100078aa:	pop    ebx
100078ab:	mov    esp,ebp
100078ad:	pop    ebp
100078ae:	ret    0x8
100078b1:	mov    ecx,DWORD PTR [esi+0x1c]
100078b4:	cmp    eax,ecx
100078b6:	jbe    0x100078fc
100078b8:	shr    eax,0xa
100078bb:	inc    eax
100078bc:	shl    eax,0xa
100078bf:	push   ebx
100078c0:	mov    ebx,eax
100078c2:	cmp    ebx,ecx
100078c4:	je     0x100078fb
100078c6:	push   edi
100078c7:	push   ebx
100078c8:	call   0x10043721
100078cd:	push   DWORD PTR [esi+0x18]
100078d0:	mov    edi,eax
100078d2:	push   DWORD PTR [esi+0x14]
100078d5:	push   edi
100078d6:	call   0x10045180
100078db:	mov    eax,DWORD PTR [esi+0x14]
100078de:	add    esp,0x10
100078e1:	cmp    edi,eax
100078e3:	je     0x100078ec
100078e5:	push   eax
100078e6:	call   0x10042e92
100078eb:	pop    ecx
100078ec:	mov    DWORD PTR [esi+0x14],edi
100078ef:	push   0x0
100078f1:	mov    DWORD PTR [esi+0x1c],ebx
100078f4:	call   0x10042e92
100078f9:	pop    ecx
100078fa:	pop    edi
100078fb:	pop    ebx
100078fc:	ret    
100078fd:	push   0x0
100078ff:	mov    eax,0x1005fc9d
10007904:	call   0x10059a35
10007909:	mov    esi,DWORD PTR [ebp+0x8]
1000790c:	push   0x8
1000790e:	call   0x1004349e
10007913:	test   eax,eax
10007915:	pop    ecx
10007916:	je     0x10007925
10007918:	mov    ecx,DWORD PTR [ebp+0x10]
1000791b:	mov    DWORD PTR [eax],ecx
1000791d:	mov    ecx,DWORD PTR [ebp+0x14]
10007920:	mov    DWORD PTR [eax+0x4],ecx
10007923:	jmp    0x10007927
10007925:	xor    eax,eax
10007927:	mov    DWORD PTR [esi],eax
10007929:	push   DWORD PTR [ebp+0xc]
1000792c:	and    DWORD PTR [ebp-0x4],0x0
10007930:	lea    ecx,[esi+0x4]
10007933:	call   0x100011a7
10007938:	and    DWORD PTR [esi+0x20],0x0
1000793c:	mov    eax,esi
1000793e:	call   0x10059b0d
10007943:	ret    0x10
10007946:	push   0x4
10007948:	mov    eax,0x1005f66c
1000794d:	call   0x10059a35
10007952:	mov    esi,ecx
10007954:	push   0x24
10007956:	call   0x1004349e
1000795b:	pop    ecx
1000795c:	mov    DWORD PTR [ebp-0x10],eax
1000795f:	xor    eax,eax
10007961:	mov    DWORD PTR [ebp-0x4],eax
10007964:	cmp    DWORD PTR [ebp-0x10],eax
10007967:	je     0x1000797c
10007969:	mov    eax,DWORD PTR [esi]
1000796b:	push   DWORD PTR [eax+0x4]
1000796e:	add    esi,0x4
10007971:	push   DWORD PTR [eax]
10007973:	push   esi
10007974:	push   DWORD PTR [ebp-0x10]
10007977:	call   0x100078fd
1000797c:	call   0x10059b0d
10007981:	ret    
10007982:	push   ecx
10007983:	mov    ecx,DWORD PTR [esp+0x8]
10007987:	push   edi
10007988:	lea    edi,[esi+0x4]
1000798b:	mov    eax,edi
1000798d:	call   0x1000656c
10007992:	test   al,al
10007994:	je     0x1000799a
10007996:	xor    al,al
10007998:	jmp    0x100079cc
1000799a:	push   0xffffffff
1000799c:	push   0x0
1000799e:	push   DWORD PTR [esp+0x14]
100079a2:	mov    ecx,edi
100079a4:	call   0x10001241
100079a9:	mov    eax,DWORD PTR [esi+0x20]
100079ac:	test   eax,eax
100079ae:	je     0x100079ca
100079b0:	cmp    DWORD PTR [edi+0x18],0x10
100079b4:	mov    ecx,DWORD PTR [esi+0x18]
100079b7:	jb     0x100079be
100079b9:	mov    edi,DWORD PTR [edi+0x4]
100079bc:	jmp    0x100079c1
100079be:	add    edi,0x4
100079c1:	push   ecx
100079c2:	push   edi
100079c3:	mov    edi,DWORD PTR [esi]
100079c5:	call   0x100076fc
100079ca:	mov    al,0x1
100079cc:	pop    edi
100079cd:	pop    ecx
100079ce:	ret    0x4
100079d1:	push   ecx
100079d2:	mov    eax,DWORD PTR [esi]
100079d4:	add    DWORD PTR [eax],ecx
100079d6:	push   DWORD PTR [esi]
100079d8:	mov    eax,edi
100079da:	call   0x1000776e
100079df:	mov    DWORD PTR [esi+0x20],edi
100079e2:	pop    ecx
100079e3:	ret    
100079e4:	call   0x1000a7c9
100079e9:	lea    ecx,[esi+0x4]
100079ec:	mov    DWORD PTR [ecx],eax
100079ee:	mov    BYTE PTR [eax+0x39],0x1
100079f2:	mov    eax,DWORD PTR [ecx]
100079f4:	mov    DWORD PTR [eax+0x4],eax
100079f7:	mov    eax,DWORD PTR [ecx]
100079f9:	mov    DWORD PTR [eax],eax
100079fb:	mov    ecx,DWORD PTR [ecx]
100079fd:	xor    eax,eax
100079ff:	mov    DWORD PTR [ecx+0x8],ecx
10007a02:	mov    DWORD PTR [esi+0x8],eax
10007a05:	mov    DWORD PTR [esi+0xc],eax
10007a08:	mov    DWORD PTR [esi+0x10],eax
10007a0b:	mov    eax,esi
10007a0d:	ret    
10007a0e:	push   esi
10007a0f:	push   0x8
10007a11:	call   0x1004349e
10007a16:	xor    esi,esi
10007a18:	cmp    eax,esi
10007a1a:	pop    ecx
10007a1b:	je     0x10007a28
10007a1d:	mov    ecx,DWORD PTR [esp+0x8]
10007a21:	mov    DWORD PTR [eax+0x4],esi
10007a24:	mov    DWORD PTR [eax],ecx
10007a26:	mov    esi,eax
10007a28:	mov    eax,DWORD PTR [edi+0x10]
10007a2b:	cmp    esi,eax
10007a2d:	je     0x10007a36
10007a2f:	push   eax
10007a30:	call   0x10042e92
10007a35:	pop    ecx
10007a36:	mov    DWORD PTR [edi+0x10],esi
10007a39:	pop    esi
10007a3a:	ret    0x4
10007a3d:	push   ebp
10007a3e:	mov    ebp,esp
10007a40:	and    esp,0xfffffff8
10007a43:	sub    esp,0x10
10007a46:	mov    eax,DWORD PTR [ebx+0x4]
10007a49:	mov    eax,DWORD PTR [eax]
10007a4b:	push   esi
10007a4c:	push   edi
10007a4d:	mov    DWORD PTR [esp+0xc],eax
10007a51:	mov    DWORD PTR [esp+0x8],ebx
10007a55:	mov    DWORD PTR [esp+0x10],ebx
10007a59:	mov    eax,DWORD PTR [ebx+0x4]
10007a5c:	lea    edi,[esp+0x10]
10007a60:	lea    esi,[esp+0x8]
10007a64:	mov    DWORD PTR [esp+0x14],eax
10007a68:	call   0x10004ada
10007a6d:	test   al,al
10007a6f:	jne    0x10007ac0
10007a71:	xor    edi,edi
10007a73:	call   0x1002088e
10007a78:	add    eax,0x1c
10007a7b:	call   0x100046b1
10007a80:	test   eax,eax
10007a82:	je     0x10007ab5
10007a84:	lea    esi,[esp+0x8]
10007a88:	call   0x1002088e
10007a8d:	push   edi
10007a8e:	lea    esi,[eax+0x1c]
10007a91:	call   0x10009d22
10007a96:	push   DWORD PTR [eax+0x1c]
10007a99:	call   0x10042e92
10007a9e:	pop    ecx
10007a9f:	lea    esi,[esp+0x8]
10007aa3:	inc    edi
10007aa4:	call   0x1002088e
10007aa9:	add    eax,0x1c
10007aac:	call   0x100046b1
10007ab1:	cmp    edi,eax
10007ab3:	jne    0x10007a84
10007ab5:	lea    esi,[esp+0x8]
10007ab9:	call   0x10009c42
10007abe:	jmp    0x10007a59
10007ac0:	push   DWORD PTR [ebx+0x10]
10007ac3:	call   0x10042e92
10007ac8:	pop    ecx
10007ac9:	mov    eax,ebx
10007acb:	call   0x1000a18d
10007ad0:	pop    edi
10007ad1:	pop    esi
10007ad2:	mov    esp,ebp
10007ad4:	pop    ebp
10007ad5:	ret    
10007ad6:	push   0x1c
10007ad8:	mov    eax,0x1006236b
10007add:	call   0x10059a35
10007ae2:	mov    eax,DWORD PTR [ebp+0x8]
10007ae5:	mov    ecx,DWORD PTR [ebp+0xc]
10007ae8:	xor    ebx,ebx
10007aea:	mov    DWORD PTR [eax+0xc],ebx
10007aed:	mov    eax,DWORD PTR [ecx+0x4]
10007af0:	mov    eax,DWORD PTR [eax]
10007af2:	mov    DWORD PTR [ebp-0x1c],eax
10007af5:	mov    DWORD PTR [ebp-0x20],ecx
10007af8:	mov    DWORD PTR [ebp-0x28],ecx
10007afb:	mov    eax,DWORD PTR [ecx+0x4]
10007afe:	lea    edi,[ebp-0x28]
10007b01:	lea    esi,[ebp-0x20]
10007b04:	mov    DWORD PTR [ebp-0x24],eax
10007b07:	call   0x10004ada
10007b0c:	test   al,al
10007b0e:	jne    0x10007c12
10007b14:	mov    DWORD PTR [ebp-0x10],ebx
10007b17:	call   0x1002088e
10007b1c:	add    eax,0x1c
10007b1f:	call   0x100046b1
10007b24:	test   eax,eax
10007b26:	je     0x10007c02
10007b2c:	mov    DWORD PTR [ebp-0x14],ebx
10007b2f:	push   DWORD PTR [ebp-0x10]
10007b32:	lea    esi,[ebp-0x20]
10007b35:	mov    DWORD PTR [ebp-0x4],ebx
10007b38:	call   0x1002088e
10007b3d:	mov    esi,eax
10007b3f:	add    esi,0x1c
10007b42:	call   0x10009d22
10007b47:	cmp    DWORD PTR [eax+0x1c],ebx
10007b4a:	je     0x10007ba8
10007b4c:	push   0x8
10007b4e:	call   0x1004349e
10007b53:	mov    edi,eax
10007b55:	cmp    edi,ebx
10007b57:	pop    ecx
10007b58:	je     0x10007b98
10007b5a:	push   DWORD PTR [ebp-0x10]
10007b5d:	lea    esi,[ebp-0x20]
10007b60:	call   0x1002088e
10007b65:	mov    esi,eax
10007b67:	add    esi,0x1c
10007b6a:	call   0x10009d22
10007b6f:	mov    eax,DWORD PTR [eax+0x1c]
10007b72:	push   DWORD PTR [ebp-0x10]
10007b75:	mov    ebx,DWORD PTR [eax+0x4]
10007b78:	lea    esi,[ebp-0x20]
10007b7b:	call   0x1002088e
10007b80:	mov    esi,eax
10007b82:	add    esi,0x1c
10007b85:	call   0x10009d22
10007b8a:	mov    eax,DWORD PTR [eax+0x1c]
10007b8d:	mov    eax,DWORD PTR [eax]
10007b8f:	mov    DWORD PTR [edi+0x4],ebx
10007b92:	mov    DWORD PTR [edi],eax
10007b94:	xor    ebx,ebx
10007b96:	jmp    0x10007b9a
10007b98:	xor    edi,edi
10007b9a:	cmp    edi,ebx
10007b9c:	je     0x10007ba5
10007b9e:	push   ebx
10007b9f:	call   0x10042e92
10007ba4:	pop    ecx
10007ba5:	mov    DWORD PTR [ebp-0x14],edi
10007ba8:	push   ecx
10007ba9:	mov    ecx,DWORD PTR [ebp-0x14]
10007bac:	mov    eax,esp
10007bae:	mov    DWORD PTR [ebp-0x18],esp
10007bb1:	push   DWORD PTR [ebp-0x10]
10007bb4:	lea    esi,[ebp-0x20]
10007bb7:	mov    DWORD PTR [ebp-0x14],ebx
10007bba:	mov    DWORD PTR [eax],ecx
10007bbc:	call   0x1002088e
10007bc1:	mov    esi,eax
10007bc3:	add    esi,0x1c
10007bc6:	call   0x10009d22
10007bcb:	push   eax
10007bcc:	lea    esi,[ebp-0x20]
10007bcf:	call   0x1002088e
10007bd4:	mov    ecx,DWORD PTR [ebp+0x8]
10007bd7:	mov    edx,eax
10007bd9:	call   0x10007dfe
10007bde:	or     DWORD PTR [ebp-0x4],0xffffffff
10007be2:	push   ebx
10007be3:	call   0x10042e92
10007be8:	inc    DWORD PTR [ebp-0x10]
10007beb:	pop    ecx
10007bec:	call   0x1002088e
10007bf1:	add    eax,0x1c
10007bf4:	call   0x100046b1
10007bf9:	cmp    DWORD PTR [ebp-0x10],eax
10007bfc:	jne    0x10007b2c
10007c02:	lea    esi,[ebp-0x20]
10007c05:	call   0x10009c42
10007c0a:	mov    ecx,DWORD PTR [ebp+0xc]
10007c0d:	jmp    0x10007afb
10007c12:	call   0x10059b0d
10007c17:	ret    0x8
10007c1a:	push   ebp
10007c1b:	mov    ebp,esp
10007c1d:	mov    eax,DWORD PTR [ebp+0x8]
10007c20:	mov    ecx,DWORD PTR [eax+0x8]
10007c23:	mov    edx,DWORD PTR [ebp+0xc]
10007c26:	sub    esp,0x2c
10007c29:	cmp    ecx,DWORD PTR [edx+0x8]
10007c2c:	push   ebx
10007c2d:	push   esi
10007c2e:	push   edi
10007c2f:	je     0x10007c38
10007c31:	xor    al,al
10007c33:	jmp    0x10007d14
10007c38:	mov    ecx,DWORD PTR [eax+0x4]
10007c3b:	mov    ecx,DWORD PTR [ecx]
10007c3d:	mov    DWORD PTR [ebp-0xc],ecx
10007c40:	mov    DWORD PTR [ebp-0x10],eax
10007c43:	mov    DWORD PTR [ebp-0x18],eax
10007c46:	mov    eax,DWORD PTR [eax+0x4]
10007c49:	lea    edi,[ebp-0x18]
10007c4c:	lea    esi,[ebp-0x10]
10007c4f:	mov    DWORD PTR [ebp-0x14],eax
10007c52:	call   0x10004ada
10007c57:	test   al,al
10007c59:	jne    0x10007d12
10007c5f:	call   0x1002088e
10007c64:	mov    ebx,DWORD PTR [ebp+0xc]
10007c67:	push   eax
10007c68:	lea    eax,[ebp-0x28]
10007c6b:	push   eax
10007c6c:	call   0x10009b78
10007c71:	mov    eax,ebx
10007c73:	mov    ecx,DWORD PTR [eax+0x4]
10007c76:	lea    edi,[ebp-0x20]
10007c79:	lea    esi,[ebp-0x28]
10007c7c:	mov    DWORD PTR [ebp-0x1c],ecx
10007c7f:	mov    DWORD PTR [ebp-0x20],eax
10007c82:	call   0x10004ada
10007c87:	test   al,al
10007c89:	jne    0x10007c31
10007c8b:	lea    esi,[ebp-0x10]
10007c8e:	call   0x1002088e
10007c93:	mov    edi,eax
10007c95:	lea    esi,[ebp-0x28]
10007c98:	add    edi,0x1c
10007c9b:	call   0x1002088e
10007ca0:	mov    ebx,eax
10007ca2:	add    ebx,0x1c
10007ca5:	mov    eax,ebx
10007ca7:	call   0x100046b1
10007cac:	mov    esi,eax
10007cae:	mov    eax,edi
10007cb0:	call   0x100046b1
10007cb5:	cmp    eax,esi
10007cb7:	jne    0x10007c31
10007cbd:	and    DWORD PTR [ebp-0x4],0x0
10007cc1:	mov    eax,edi
10007cc3:	call   0x100046b1
10007cc8:	test   eax,eax
10007cca:	je     0x10007d02
10007ccc:	push   DWORD PTR [ebp-0x4]
10007ccf:	mov    esi,ebx
10007cd1:	call   0x10009d22
10007cd6:	push   DWORD PTR [ebp-0x4]
10007cd9:	mov    esi,edi
10007cdb:	mov    DWORD PTR [ebp-0x8],eax
10007cde:	call   0x10009d22
10007ce3:	mov    ecx,DWORD PTR [ebp-0x8]
10007ce6:	call   0x1000656c
10007ceb:	test   al,al
10007ced:	je     0x10007c31
10007cf3:	inc    DWORD PTR [ebp-0x4]
10007cf6:	mov    eax,edi
10007cf8:	call   0x100046b1
10007cfd:	cmp    DWORD PTR [ebp-0x4],eax
10007d00:	jne    0x10007ccc
10007d02:	lea    esi,[ebp-0x10]
10007d05:	call   0x10009c42
10007d0a:	mov    eax,DWORD PTR [ebp+0x8]
10007d0d:	jmp    0x10007c46
10007d12:	mov    al,0x1
10007d14:	pop    edi
10007d15:	pop    esi
10007d16:	pop    ebx
10007d17:	leave  
10007d18:	ret    0x8
10007d1b:	push   0x3c
10007d1d:	mov    eax,0x1006233e
10007d22:	call   0x10059a9e
10007d27:	mov    edi,ecx
10007d29:	push   ebx
10007d2a:	push   edi
10007d2b:	mov    DWORD PTR [ebp-0x40],edi
10007d2e:	call   0x10007c1a
10007d33:	test   al,al
10007d35:	je     0x10007d3e
10007d37:	xor    al,al
10007d39:	jmp    0x10007df8
10007d3e:	call   0x1000837d
10007d43:	mov    eax,DWORD PTR [ebx+0x4]
10007d46:	mov    eax,DWORD PTR [eax]
10007d48:	mov    DWORD PTR [ebp-0x38],eax
10007d4b:	mov    DWORD PTR [ebp-0x3c],ebx
10007d4e:	mov    DWORD PTR [ebp-0x48],ebx
10007d51:	mov    eax,DWORD PTR [ebx+0x4]
10007d54:	lea    edi,[ebp-0x48]
10007d57:	lea    esi,[ebp-0x3c]
10007d5a:	mov    DWORD PTR [ebp-0x44],eax
10007d5d:	call   0x10004ada
10007d62:	test   al,al
10007d64:	jne    0x10007df6
10007d6a:	xor    edi,edi
10007d6c:	push   edi
10007d6d:	mov    DWORD PTR [ebp-0x34],edi
10007d70:	call   0x1002088e
10007d75:	push   eax
10007d76:	lea    eax,[ebp-0x30]
10007d79:	push   eax
10007d7a:	mov    eax,ebx
10007d7c:	call   0x100084cc
10007d81:	mov    DWORD PTR [ebp-0x4],edi
10007d84:	mov    edi,0x1006cd08
10007d89:	jmp    0x10007dcc
10007d8b:	push   0x1
10007d8d:	lea    esi,[ebp-0x3c]
10007d90:	call   0x1002088e
10007d95:	mov    edx,DWORD PTR [ebp-0x40]
10007d98:	push   eax
10007d99:	lea    ecx,[ebp-0x30]
10007d9c:	call   0x10007f61
10007da1:	inc    DWORD PTR [ebp-0x34]
10007da4:	or     DWORD PTR [ebp-0x4],0xffffffff
10007da8:	push   0x0
10007daa:	push   0x1
10007dac:	lea    ecx,[ebp-0x30]
10007daf:	call   0x100012f0
10007db4:	push   DWORD PTR [ebp-0x34]
10007db7:	call   0x1002088e
10007dbc:	push   eax
10007dbd:	lea    eax,[ebp-0x30]
10007dc0:	push   eax
10007dc1:	mov    eax,ebx
10007dc3:	call   0x100084cc
10007dc8:	and    DWORD PTR [ebp-0x4],0x0
10007dcc:	push   edi
10007dcd:	lea    esi,[ebp-0x30]
10007dd0:	call   0x1000658e
10007dd5:	test   al,al
10007dd7:	pop    ecx
10007dd8:	je     0x10007d8b
10007dda:	or     DWORD PTR [ebp-0x4],0xffffffff
10007dde:	push   0x0
10007de0:	push   0x1
10007de2:	mov    ecx,esi
10007de4:	call   0x100012f0
10007de9:	lea    esi,[ebp-0x3c]
10007dec:	call   0x10009c42
10007df1:	jmp    0x10007d51
10007df6:	mov    al,0x1
10007df8:	call   0x10059b21
10007dfd:	ret    
10007dfe:	push   0x9c
10007e03:	mov    eax,0x1006230e
10007e08:	call   0x10059a9e
10007e0d:	mov    edi,DWORD PTR [ebp+0x8]
10007e10:	mov    ebx,ecx
10007e12:	mov    esi,edx
10007e14:	mov    DWORD PTR [ebp-0x34],ebx
10007e17:	mov    DWORD PTR [ebp-0x38],esi
10007e1a:	and    DWORD PTR [ebp-0x4],0x0
10007e1e:	push   0x0
10007e20:	lea    ecx,[ebp-0x30]
10007e23:	mov    DWORD PTR [ebp-0x18],0xf
10007e2a:	call   0x1000141c
10007e2f:	push   0xffffffff
10007e31:	push   0x0
10007e33:	push   edi
10007e34:	lea    ecx,[ebp-0x30]
10007e37:	mov    BYTE PTR [ebp-0x4],0x1
10007e3b:	call   0x10001241
10007e40:	mov    eax,DWORD PTR [ebp+0xc]
10007e43:	mov    DWORD PTR [ebp-0x14],eax
10007e46:	push   esi
10007e47:	lea    eax,[ebp-0x40]
10007e4a:	push   eax
10007e4b:	call   0x10009b78
10007e50:	mov    eax,DWORD PTR [ebx+0x4]
10007e53:	lea    edi,[ebp-0x48]
10007e56:	lea    esi,[ebp-0x40]
10007e59:	mov    DWORD PTR [ebp-0x44],eax
10007e5c:	mov    DWORD PTR [ebp-0x48],ebx
10007e5f:	call   0x10004ada
10007e64:	test   al,al
10007e66:	je     0x10007f11
10007e6c:	sub    esp,0x10
10007e6f:	mov    eax,esp
10007e71:	xor    ecx,ecx
10007e73:	mov    DWORD PTR [ebp-0x50],esp
10007e76:	mov    DWORD PTR [eax+0x4],ecx
10007e79:	mov    DWORD PTR [eax+0x8],ecx
10007e7c:	mov    DWORD PTR [eax+0xc],ecx
10007e7f:	sub    esp,0x1c
10007e82:	mov    BYTE PTR [ebp-0x4],0x2
10007e86:	mov    ecx,esp
10007e88:	mov    DWORD PTR [ebp-0x44],esp
10007e8b:	push   DWORD PTR [ebp-0x38]
10007e8e:	call   0x100011a7
10007e93:	lea    edi,[ebp-0xa8]
10007e99:	mov    BYTE PTR [ebp-0x4],0x1
10007e9d:	call   0x1000a890
10007ea2:	add    esp,0x2c
10007ea5:	lea    ecx,[ebp-0x7c]
10007ea8:	push   ecx
10007ea9:	mov    edi,eax
10007eab:	mov    BYTE PTR [ebp-0x4],0x3
10007eaf:	call   0x1000a8df
10007eb4:	lea    eax,[ebp-0x7c]
10007eb7:	push   eax
10007eb8:	push   ebx
10007eb9:	lea    ebx,[ebp-0x4c]
10007ebc:	mov    BYTE PTR [ebp-0x4],0x4
10007ec0:	call   0x10009817
10007ec5:	lea    esi,[ebp-0x60]
10007ec8:	call   0x10004743
10007ecd:	push   0x0
10007ecf:	push   0x1
10007ed1:	lea    ecx,[ebp-0x7c]
10007ed4:	call   0x100012f0
10007ed9:	lea    esi,[ebp-0x8c]
10007edf:	mov    BYTE PTR [ebp-0x4],0x1
10007ee3:	call   0x10004743
10007ee8:	push   0x0
10007eea:	push   0x1
10007eec:	lea    ecx,[ebp-0xa8]
10007ef2:	call   0x100012f0
10007ef7:	push   DWORD PTR [ebp-0x38]
10007efa:	mov    ebx,DWORD PTR [ebp-0x34]
10007efd:	lea    eax,[ebp-0x48]
10007f00:	push   eax
10007f01:	call   0x10009b78
10007f06:	mov    ecx,DWORD PTR [eax]
10007f08:	mov    eax,DWORD PTR [eax+0x4]
10007f0b:	mov    DWORD PTR [ebp-0x40],ecx
10007f0e:	mov    DWORD PTR [ebp-0x3c],eax
10007f11:	lea    eax,[ebp-0x30]
10007f14:	push   eax
10007f15:	lea    esi,[ebp-0x40]
10007f18:	call   0x1002088e
10007f1d:	add    eax,0x1c
10007f20:	call   0x10009d41
10007f25:	push   0x0
10007f27:	push   0x1
10007f29:	lea    ecx,[ebp-0x30]
10007f2c:	call   0x100012f0
10007f31:	push   0x0
10007f33:	call   0x10042e92
10007f38:	pop    ecx
10007f39:	call   0x10059b21
10007f3e:	ret    0x8
10007f41:	push   0x0
10007f43:	push   0x1
10007f45:	call   0x100012f0
10007f4a:	ret    
10007f4b:	push   esi
10007f4c:	lea    esi,[edi+0x1c]
10007f4f:	call   0x10004743
10007f54:	push   0x0
10007f56:	push   0x1
10007f58:	mov    ecx,edi
10007f5a:	call   0x100012f0
10007f5f:	pop    esi
10007f60:	ret    
10007f61:	push   ebp
10007f62:	mov    ebp,esp
10007f64:	and    esp,0xfffffff8
10007f67:	push   0xffffffff
10007f69:	push   0x100622b5
10007f6e:	mov    eax,fs:0x0
10007f74:	push   eax
10007f75:	sub    esp,0xd0
10007f7b:	mov    eax,ds:0x1007e030
10007f80:	xor    eax,esp
10007f82:	mov    DWORD PTR [esp+0xc8],eax
10007f89:	push   ebx
10007f8a:	push   esi
10007f8b:	push   edi
10007f8c:	mov    eax,ds:0x1007e030
10007f91:	xor    eax,esp
10007f93:	push   eax
10007f94:	lea    eax,[esp+0xe0]
10007f9b:	mov    fs:0x0,eax
10007fa1:	mov    eax,DWORD PTR [ebp+0x8]
10007fa4:	push   eax
10007fa5:	mov    DWORD PTR [esp+0x14],eax
10007fa9:	lea    eax,[esp+0x2c]
10007fad:	mov    ebx,edx
10007faf:	push   eax
10007fb0:	mov    DWORD PTR [esp+0x28],ebx
10007fb4:	mov    DWORD PTR [esp+0x2c],ecx
10007fb8:	call   0x10009b78
10007fbd:	mov    eax,DWORD PTR [ebx+0x4]
10007fc0:	lea    edi,[esp+0x18]
10007fc4:	lea    esi,[esp+0x28]
10007fc8:	mov    DWORD PTR [esp+0x1c],eax
10007fcc:	mov    DWORD PTR [esp+0x18],ebx
10007fd0:	call   0x10004ada
10007fd5:	xor    ebx,ebx
10007fd7:	test   al,al
10007fd9:	jne    0x10007fe4
10007fdb:	cmp    BYTE PTR [ebp+0xc],bl
10007fde:	je     0x10008244
10007fe4:	push   DWORD PTR [esp+0x24]
10007fe8:	lea    eax,[esp+0xa0]
10007fef:	push   DWORD PTR [esp+0x14]
10007ff3:	push   eax
10007ff4:	call   0x10008593
10007ff9:	add    esp,0xc
10007ffc:	mov    esi,DWORD PTR [esp+0x20]
10008000:	mov    DWORD PTR [esp+0xe8],ebx
10008007:	mov    eax,DWORD PTR [esi+0xc]
1000800a:	cmp    eax,ebx
1000800c:	je     0x10008036
1000800e:	cmp    DWORD PTR [esp+0xb4],0x10
10008016:	mov    ecx,DWORD PTR [esp+0xa0]
1000801d:	jae    0x10008026
1000801f:	lea    ecx,[esp+0xa0]
10008026:	push   DWORD PTR [esp+0xb0]
1000802d:	mov    edi,DWORD PTR [esi+0x10]
10008030:	push   ecx
10008031:	call   0x100076fc
10008036:	mov    DWORD PTR [esp+0x14],ebx
1000803a:	mov    BYTE PTR [esp+0xe8],0x1
10008042:	cmp    DWORD PTR [esi+0xc],ebx
10008045:	je     0x10008075
10008047:	push   0x8
10008049:	call   0x1004349e
1000804e:	cmp    eax,ebx
10008050:	pop    ecx
10008051:	je     0x10008064
10008053:	mov    ecx,DWORD PTR [esi+0x10]
10008056:	mov    edx,DWORD PTR [ecx+0x4]
10008059:	add    edx,DWORD PTR [ecx]
1000805b:	mov    DWORD PTR [eax+0x4],ebx
1000805e:	mov    DWORD PTR [eax],edx
10008060:	mov    edi,eax
10008062:	jmp    0x10008066
10008064:	xor    edi,edi
10008066:	cmp    edi,ebx
10008068:	je     0x10008071
1000806a:	push   ebx
1000806b:	call   0x10042e92
10008070:	pop    ecx
10008071:	mov    DWORD PTR [esp+0x14],edi
10008075:	push   ebx
10008076:	lea    ecx,[esp+0xbc]
1000807d:	mov    DWORD PTR [esp+0xd4],0xf
10008088:	call   0x1000141c
1000808d:	push   0xffffffff
1000808f:	push   ebx
10008090:	mov    BYTE PTR [esp+0xf0],0x2
10008098:	push   DWORD PTR [esp+0x2c]
1000809c:	lea    ecx,[esp+0xc4]
100080a3:	call   0x10001241
100080a8:	mov    eax,DWORD PTR [esi+0x10]
100080ab:	mov    DWORD PTR [esp+0xd4],eax
100080b2:	mov    DWORD PTR [esp+0x38],ebx
100080b6:	mov    DWORD PTR [esp+0x3c],ebx
100080ba:	mov    DWORD PTR [esp+0x40],ebx
100080be:	push   DWORD PTR [esp+0x10]
100080c2:	lea    eax,[esp+0x1c]
100080c6:	push   eax
100080c7:	mov    ebx,esi
100080c9:	mov    BYTE PTR [esp+0xf0],0x3
100080d1:	call   0x10009b78
100080d6:	mov    eax,DWORD PTR [esi+0x4]
100080d9:	mov    DWORD PTR [esp+0x28],esi
100080dd:	lea    edi,[esp+0x28]
100080e1:	lea    esi,[esp+0x18]
100080e5:	mov    DWORD PTR [esp+0x2c],eax
100080e9:	call   0x10004ada
100080ee:	test   al,al
100080f0:	je     0x100081bf
100080f6:	sub    esp,0x10
100080f9:	mov    eax,esp
100080fb:	mov    DWORD PTR [esp+0x34],esp
100080ff:	push   eax
10008100:	lea    ecx,[esp+0x48]
10008104:	call   0x10009c8f
10008109:	sub    esp,0x1c
1000810c:	mov    BYTE PTR [esp+0x114],0x4
10008114:	mov    ecx,esp
10008116:	mov    DWORD PTR [esp+0x54],esp
1000811a:	push   DWORD PTR [esp+0x3c]
1000811e:	call   0x100011a7
10008123:	lea    edi,[esp+0x9c]
1000812a:	mov    BYTE PTR [esp+0x114],0x3
10008132:	call   0x1000a890
10008137:	add    esp,0x2c
1000813a:	lea    ecx,[esp+0x44]
1000813e:	push   ecx
1000813f:	mov    edi,eax
10008141:	mov    BYTE PTR [esp+0xec],0x5
10008149:	call   0x1000a8df
1000814e:	mov    edi,DWORD PTR [esp+0x20]
10008152:	lea    eax,[esp+0x44]
10008156:	push   eax
10008157:	push   edi
10008158:	lea    ebx,[esp+0x30]
1000815c:	mov    BYTE PTR [esp+0xf0],0x6
10008164:	call   0x10009817
10008169:	lea    esi,[esp+0x60]
1000816d:	call   0x10004743
10008172:	push   0x0
10008174:	push   0x1
10008176:	lea    ecx,[esp+0x4c]
1000817a:	call   0x100012f0
1000817f:	lea    esi,[esp+0x8c]
10008186:	mov    BYTE PTR [esp+0xe8],0x3
1000818e:	call   0x10004743
10008193:	push   0x0
10008195:	push   0x1
10008197:	lea    ecx,[esp+0x78]
1000819b:	call   0x100012f0
100081a0:	push   DWORD PTR [esp+0x10]
100081a4:	lea    eax,[esp+0x2c]
100081a8:	push   eax
100081a9:	mov    ebx,edi
100081ab:	call   0x10009b78
100081b0:	mov    ecx,DWORD PTR [eax]
100081b2:	mov    eax,DWORD PTR [eax+0x4]
100081b5:	mov    DWORD PTR [esp+0x18],ecx
100081b9:	mov    DWORD PTR [esp+0x1c],eax
100081bd:	jmp    0x100081c1
100081bf:	mov    edi,ebx
100081c1:	lea    eax,[esp+0xb8]
100081c8:	push   eax
100081c9:	lea    esi,[esp+0x1c]
100081cd:	call   0x1002088e
100081d2:	add    eax,0x1c
100081d5:	call   0x10009d41
100081da:	lea    esi,[esp+0x34]
100081de:	mov    BYTE PTR [esp+0xe8],0x2
100081e6:	call   0x10004743
100081eb:	xor    ebx,ebx
100081ed:	cmp    DWORD PTR [edi+0xc],ebx
100081f0:	je     0x1000821a
100081f2:	mov    esi,DWORD PTR [esp+0x14]
100081f6:	mov    eax,ebx
100081f8:	cmp    esi,eax
100081fa:	mov    DWORD PTR [edi+0x10],ebx
100081fd:	mov    DWORD PTR [esp+0x14],ebx
10008201:	je     0x1000820a
10008203:	push   eax
10008204:	call   0x10042e92
10008209:	pop    ecx
1000820a:	mov    DWORD PTR [edi+0x10],esi
1000820d:	mov    eax,DWORD PTR [edi+0xc]
10008210:	cmp    eax,ebx
10008212:	je     0x1000821a
10008214:	push   esi
10008215:	call   0x1000776e
1000821a:	push   ebx
1000821b:	push   0x1
1000821d:	lea    ecx,[esp+0xc0]
10008224:	call   0x100012f0
10008229:	push   DWORD PTR [esp+0x14]
1000822d:	call   0x10042e92
10008232:	pop    ecx
10008233:	push   ebx
10008234:	push   0x1
10008236:	lea    ecx,[esp+0xa4]
1000823d:	call   0x100012f0
10008242:	mov    al,0x1
10008244:	mov    ecx,DWORD PTR [esp+0xe0]
1000824b:	mov    DWORD PTR fs:0x0,ecx
10008252:	pop    ecx
10008253:	pop    edi
10008254:	pop    esi
10008255:	pop    ebx
10008256:	mov    ecx,DWORD PTR [esp+0xc8]
1000825d:	xor    ecx,esp
1000825f:	call   0x10042e97
10008264:	mov    esp,ebp
10008266:	pop    ebp
10008267:	ret    0x8
1000826a:	push   ebp
1000826b:	mov    ebp,esp
1000826d:	and    esp,0xfffffff8
10008270:	sub    esp,0x1c
10008273:	push   ebx
10008274:	mov    ebx,DWORD PTR [ebp+0x8]
10008277:	push   esi
10008278:	push   edi
10008279:	push   DWORD PTR [ebp+0xc]
1000827c:	lea    eax,[esp+0x14]
10008280:	push   eax
10008281:	call   0x10009b78
10008286:	mov    eax,DWORD PTR [ebx+0x4]
10008289:	lea    edi,[esp+0x18]
1000828d:	lea    esi,[esp+0x10]
10008291:	mov    DWORD PTR [esp+0x1c],eax
10008295:	mov    DWORD PTR [esp+0x18],ebx
10008299:	call   0x10004ada
1000829e:	test   al,al
100082a0:	je     0x100082a9
100082a2:	xor    al,al
100082a4:	jmp    0x10008374
100082a9:	lea    esi,[esp+0x10]
100082ad:	call   0x1002088e
100082b2:	add    eax,0x1c
100082b5:	call   0x100046b1
100082ba:	test   eax,eax
100082bc:	jbe    0x100082a2
100082be:	call   0x1002088e
100082c3:	push   0x0
100082c5:	lea    esi,[eax+0x1c]
100082c8:	call   0x10009d22
100082cd:	mov    esi,eax
100082cf:	mov    eax,DWORD PTR [ebx+0xc]
100082d2:	test   eax,eax
100082d4:	je     0x100082f0
100082d6:	push   DWORD PTR [esi+0x1c]
100082d9:	call   0x100077d1
100082de:	mov    edi,DWORD PTR [esi+0x1c]
100082e1:	mov    eax,DWORD PTR [ebx+0xc]
100082e4:	push   0x0
100082e6:	push   0x1006cd08
100082eb:	call   0x100076fc
100082f0:	push   DWORD PTR [esi+0x1c]
100082f3:	call   0x10042e92
100082f8:	pop    ecx
100082f9:	lea    esi,[esp+0x10]
100082fd:	call   0x1002088e
10008302:	mov    esi,eax
10008304:	mov    edi,DWORD PTR [esi+0x20]
10008307:	add    esi,0x1c
1000830a:	cmp    edi,DWORD PTR [esi+0x8]
1000830d:	jbe    0x10008314
1000830f:	call   0x100433b0
10008314:	mov    DWORD PTR [esp+0x18],esi
10008318:	lea    esi,[esp+0x10]
1000831c:	mov    DWORD PTR [esp+0x1c],edi
10008320:	call   0x1002088e
10008325:	mov    esi,eax
10008327:	lea    eax,[esp+0x20]
1000832b:	push   eax
1000832c:	xor    ecx,ecx
1000832e:	lea    eax,[esp+0x1c]
10008332:	call   0x10009ded
10008337:	push   DWORD PTR [eax+0x4]
1000833a:	add    esi,0x1c
1000833d:	push   DWORD PTR [eax]
1000833f:	lea    ebx,[esp+0x20]
10008343:	call   0x10009d9b
10008348:	lea    esi,[esp+0x10]
1000834c:	call   0x1002088e
10008351:	add    eax,0x1c
10008354:	call   0x100046b1
10008359:	test   eax,eax
1000835b:	jne    0x10008372
1000835d:	push   DWORD PTR [esp+0x14]
10008361:	lea    eax,[esp+0x24]
10008365:	push   DWORD PTR [esp+0x14]
10008369:	push   eax
1000836a:	push   DWORD PTR [ebp+0x8]
1000836d:	call   0x100098d8
10008372:	mov    al,0x1
10008374:	pop    edi
10008375:	pop    esi
10008376:	pop    ebx
10008377:	mov    esp,ebp
10008379:	pop    ebp
1000837a:	ret    0x8
1000837d:	push   ebp
1000837e:	mov    ebp,esp
10008380:	and    esp,0xfffffff8
10008383:	sub    esp,0xc
10008386:	cmp    DWORD PTR [edi+0x8],0x0
1000838a:	push   esi
1000838b:	je     0x100083b0
1000838d:	mov    DWORD PTR [esp+0x8],edi
10008391:	mov    eax,DWORD PTR [edi+0x4]
10008394:	mov    eax,DWORD PTR [eax]
10008396:	lea    esi,[esp+0x8]
1000839a:	mov    DWORD PTR [esp+0xc],eax
1000839e:	call   0x1002088e
100083a3:	push   eax
100083a4:	push   edi
100083a5:	call   0x1000826a
100083aa:	cmp    DWORD PTR [edi+0x8],0x0
100083ae:	jne    0x10008391
100083b0:	pop    esi
100083b1:	mov    esp,ebp
100083b3:	pop    ebp
100083b4:	ret    
100083b5:	push   ebp
100083b6:	mov    ebp,esp
100083b8:	and    esp,0xfffffff8
100083bb:	push   0xffffffff
100083bd:	push   0x10062249
100083c2:	mov    eax,fs:0x0
100083c8:	push   eax
100083c9:	sub    esp,0x38
100083cc:	mov    eax,ds:0x1007e030
100083d1:	xor    eax,esp
100083d3:	mov    DWORD PTR [esp+0x30],eax
100083d7:	push   ebx
100083d8:	push   esi
100083d9:	push   edi
100083da:	mov    eax,ds:0x1007e030
100083df:	xor    eax,esp
100083e1:	push   eax
100083e2:	lea    eax,[esp+0x48]
100083e6:	mov    fs:0x0,eax
100083ec:	mov    eax,DWORD PTR [ebp+0x8]
100083ef:	push   eax
100083f0:	lea    eax,[esp+0x18]
100083f4:	mov    ebx,edx
100083f6:	push   eax
100083f7:	mov    DWORD PTR [esp+0x18],ecx
100083fb:	call   0x10009b78
10008400:	mov    eax,DWORD PTR [ebx+0x4]
10008403:	lea    edi,[esp+0x1c]
10008407:	lea    esi,[esp+0x14]
1000840b:	mov    DWORD PTR [esp+0x20],eax
1000840f:	mov    DWORD PTR [esp+0x1c],ebx
10008413:	call   0x10004ada
10008418:	test   al,al
1000841a:	je     0x10008423
1000841c:	xor    al,al
1000841e:	jmp    0x100084ac
10008423:	lea    esi,[esp+0x14]
10008427:	call   0x1002088e
1000842c:	add    eax,0x1c
1000842f:	call   0x100046b1
10008434:	test   eax,eax
10008436:	jbe    0x1000841c
10008438:	call   0x1002088e
1000843d:	push   0x0
1000843f:	lea    esi,[eax+0x1c]
10008442:	call   0x10009d22
10008447:	push   0xffffffff
10008449:	push   0x0
1000844b:	push   DWORD PTR [esp+0x18]
1000844f:	mov    edi,eax
10008451:	mov    ecx,edi
10008453:	call   0x10001241
10008458:	lea    esi,[esp+0x14]
1000845c:	call   0x1002088e
10008461:	push   DWORD PTR [esp+0x10]
10008465:	push   eax
10008466:	lea    eax,[esp+0x2c]
1000846a:	push   eax
1000846b:	call   0x10008593
10008470:	add    esp,0xc
10008473:	and    DWORD PTR [esp+0x50],0x0
10008478:	mov    ebx,DWORD PTR [ebx+0xc]
1000847b:	test   ebx,ebx
1000847d:	je     0x1000849d
1000847f:	cmp    DWORD PTR [esp+0x3c],0x10
10008484:	mov    eax,DWORD PTR [esp+0x28]
10008488:	jae    0x1000848e
1000848a:	lea    eax,[esp+0x28]
1000848e:	push   DWORD PTR [esp+0x38]
10008492:	mov    edi,DWORD PTR [edi+0x1c]
10008495:	push   eax
10008496:	mov    eax,ebx
10008498:	call   0x100076fc
1000849d:	push   0x0
1000849f:	push   0x1
100084a1:	lea    ecx,[esp+0x2c]
100084a5:	call   0x100012f0
100084aa:	mov    al,0x1
100084ac:	mov    ecx,DWORD PTR [esp+0x48]
100084b0:	mov    DWORD PTR fs:0x0,ecx
100084b7:	pop    ecx
100084b8:	pop    edi
100084b9:	pop    esi
100084ba:	pop    ebx
100084bb:	mov    ecx,DWORD PTR [esp+0x30]
100084bf:	xor    ecx,esp
100084c1:	call   0x10042e97
100084c6:	mov    esp,ebp
100084c8:	pop    ebp
100084c9:	ret    0x4
100084cc:	push   ebp
100084cd:	mov    ebp,esp
100084cf:	sub    esp,0x18
100084d2:	and    DWORD PTR [ebp-0x8],0x0
100084d6:	push   ebx
100084d7:	push   esi
100084d8:	push   edi
100084d9:	push   DWORD PTR [ebp+0xc]
100084dc:	mov    ebx,eax
100084de:	lea    eax,[ebp-0xc]
100084e1:	push   eax
100084e2:	call   0x10009b78
100084e7:	mov    eax,DWORD PTR [ebx+0x4]
100084ea:	lea    edi,[ebp-0x14]
100084ed:	lea    esi,[ebp-0xc]
100084f0:	mov    DWORD PTR [ebp-0x10],eax
100084f3:	mov    DWORD PTR [ebp-0x14],ebx
100084f6:	call   0x10004ada
100084fb:	test   al,al
100084fd:	jne    0x1000852e
100084ff:	call   0x1002088e
10008504:	add    eax,0x1c
10008507:	call   0x100046b1
1000850c:	cmp    DWORD PTR [ebp+0x10],eax
1000850f:	jae    0x1000852e
10008511:	push   DWORD PTR [ebp+0x10]
10008514:	call   0x1002088e
10008519:	mov    esi,eax
1000851b:	add    esi,0x1c
1000851e:	call   0x10009d22
10008523:	mov    ecx,DWORD PTR [ebp+0x8]
10008526:	push   eax
10008527:	call   0x100011a7
1000852c:	jmp    0x1000853b
1000852e:	mov    ecx,DWORD PTR [ebp+0x8]
10008531:	push   0x1006cd08
10008536:	call   0x100011cd
1000853b:	mov    eax,DWORD PTR [ebp+0x8]
1000853e:	pop    edi
1000853f:	pop    esi
10008540:	pop    ebx
10008541:	leave  
10008542:	ret    0xc
10008545:	push   ebp
10008546:	mov    ebp,esp
10008548:	sub    esp,0x18
1000854b:	push   ebx
1000854c:	push   esi
1000854d:	push   edi
1000854e:	push   DWORD PTR [ebp+0x8]
10008551:	mov    ebx,eax
10008553:	lea    eax,[ebp-0x14]
10008556:	push   eax
10008557:	call   0x10009b78
1000855c:	mov    eax,DWORD PTR [ebx+0x4]
1000855f:	lea    edi,[ebp-0xc]
10008562:	lea    esi,[ebp-0x14]
10008565:	mov    DWORD PTR [ebp-0x8],eax
10008568:	mov    DWORD PTR [ebp-0xc],ebx
1000856b:	call   0x10004ada
10008570:	test   al,al
10008572:	jne    0x1000858a
10008574:	call   0x1002088e
10008579:	add    eax,0x1c
1000857c:	call   0x100046b1
10008581:	test   eax,eax
10008583:	jbe    0x1000858a
10008585:	xor    eax,eax
10008587:	inc    eax
10008588:	jmp    0x1000858c
1000858a:	xor    eax,eax
1000858c:	pop    edi
1000858d:	pop    esi
1000858e:	pop    ebx
1000858f:	leave  
10008590:	ret    0x4
10008593:	push   0x3c
10008595:	mov    eax,0x10062226
1000859a:	call   0x10059a35
1000859f:	and    DWORD PTR [ebp-0x10],0x0
100085a3:	push   0x1006d388
100085a8:	push   DWORD PTR [ebp+0xc]
100085ab:	lea    eax,[ebp-0x48]
100085ae:	push   eax
100085af:	call   0x10006490
100085b4:	push   DWORD PTR [ebp+0x10]
100085b7:	and    DWORD PTR [ebp-0x4],0x0
100085bb:	push   eax
100085bc:	lea    eax,[ebp-0x2c]
100085bf:	push   eax
100085c0:	call   0x100064d6
100085c5:	push   0x1006d384
100085ca:	push   eax
100085cb:	push   DWORD PTR [ebp+0x8]
100085ce:	mov    BYTE PTR [ebp-0x4],0x1
100085d2:	call   0x10006490
100085d7:	add    esp,0x24
100085da:	push   0x0
100085dc:	push   0x1
100085de:	lea    ecx,[ebp-0x2c]
100085e1:	call   0x100012f0
100085e6:	push   0x0
100085e8:	push   0x1
100085ea:	lea    ecx,[ebp-0x48]
100085ed:	call   0x100012f0
100085f2:	mov    eax,DWORD PTR [ebp+0x8]
100085f5:	call   0x10059b0d
100085fa:	ret    
100085fb:	push   ebp
100085fc:	mov    ebp,esp
100085fe:	sub    esp,0x10
10008601:	mov    eax,DWORD PTR [ebx+0x4]
10008604:	mov    eax,DWORD PTR [eax]
10008606:	push   esi
10008607:	push   edi
10008608:	mov    DWORD PTR [ebp-0x4],eax
1000860b:	mov    DWORD PTR [ebp-0x8],ebx
1000860e:	mov    DWORD PTR [ebp-0x10],ebx
10008611:	mov    eax,DWORD PTR [ebx+0x4]
10008614:	lea    edi,[ebp-0x10]
10008617:	lea    esi,[ebp-0x8]
1000861a:	mov    DWORD PTR [ebp-0xc],eax
1000861d:	call   0x10004ada
10008622:	test   al,al
10008624:	jne    0x10008674
10008626:	xor    edi,edi
10008628:	call   0x1002088e
1000862d:	add    eax,0x1c
10008630:	call   0x100046b1
10008635:	test   eax,eax
10008637:	je     0x1000866a
10008639:	lea    esi,[ebp-0x8]
1000863c:	call   0x1002088e
10008641:	push   edi
10008642:	lea    esi,[eax+0x1c]
10008645:	call   0x10009d22
1000864a:	push   DWORD PTR [eax+0x1c]
1000864d:	mov    eax,DWORD PTR [ebx+0xc]
10008650:	call   0x1000776e
10008655:	lea    esi,[ebp-0x8]
10008658:	inc    edi
10008659:	call   0x1002088e
1000865e:	add    eax,0x1c
10008661:	call   0x100046b1
10008666:	cmp    edi,eax
10008668:	jne    0x10008639
1000866a:	lea    esi,[ebp-0x8]
1000866d:	call   0x10009c42
10008672:	jmp    0x10008611
10008674:	push   DWORD PTR [ebx+0x10]
10008677:	mov    eax,DWORD PTR [ebx+0xc]
1000867a:	call   0x1000776e
1000867f:	pop    edi
10008680:	pop    esi
10008681:	leave  
10008682:	ret    
10008683:	push   0x0
10008685:	mov    eax,0x100636e7
1000868a:	call   0x10059a35
1000868f:	mov    edi,DWORD PTR [ebp+0x8]
10008692:	xor    ebx,ebx
10008694:	mov    DWORD PTR [edi],ebx
10008696:	mov    DWORD PTR [ebp-0x4],ebx
10008699:	mov    DWORD PTR [edi+0x4],ebx
1000869c:	mov    DWORD PTR [edi+0x8],ebx
1000869f:	mov    BYTE PTR [ebp-0x4],0x2
100086a3:	lea    esi,[edi+0x18]
100086a6:	mov    DWORD PTR [edi+0x10],ebx
100086a9:	mov    DWORD PTR [edi+0x14],ebx
100086ac:	call   0x100079e4
100086b1:	mov    BYTE PTR [edi+0x2c],bl
100086b4:	mov    DWORD PTR [edi+0x30],ebx
100086b7:	mov    DWORD PTR [edi+0x34],ebx
100086ba:	mov    DWORD PTR [edi+0x38],ebx
100086bd:	mov    eax,edi
100086bf:	call   0x10059b0d
100086c4:	ret    0x4
100086c7:	push   ebx
100086c8:	push   esi
100086c9:	mov    esi,ecx
100086cb:	push   edi
100086cc:	mov    edi,DWORD PTR [esi+0x30]
100086cf:	mov    ebx,eax
100086d1:	cmp    ebx,edi
100086d3:	je     0x100086de
100086d5:	test   edi,edi
100086d7:	je     0x100086de
100086d9:	call   0x10009e75
100086de:	mov    DWORD PTR [esi+0x30],ebx
100086e1:	mov    edi,DWORD PTR [esi]
100086e3:	test   edi,edi
100086e5:	je     0x100086f3
100086e7:	push   DWORD PTR [edi]
100086e9:	mov    eax,ebx
100086eb:	call   0x1000776e
100086f0:	mov    DWORD PTR [edi+0x20],ebx
100086f3:	mov    edi,DWORD PTR [esi+0x4]
100086f6:	test   edi,edi
100086f8:	je     0x10008709
100086fa:	mov    ebx,DWORD PTR [esi+0x30]
100086fd:	push   DWORD PTR [edi]
100086ff:	mov    eax,ebx
10008701:	call   0x1000776e
10008706:	mov    DWORD PTR [edi+0x20],ebx
10008709:	mov    edi,DWORD PTR [esi+0x8]
1000870c:	test   edi,edi
1000870e:	je     0x1000871f
10008710:	mov    ebx,DWORD PTR [esi+0x30]
10008713:	push   DWORD PTR [edi]
10008715:	mov    eax,ebx
10008717:	call   0x1000776e
1000871c:	mov    DWORD PTR [edi+0x20],ebx
1000871f:	lea    ebx,[esi+0x18]
10008722:	mov    esi,DWORD PTR [esi+0x30]
10008725:	test   esi,esi
10008727:	mov    DWORD PTR [ebx+0xc],esi
1000872a:	je     0x10008731
1000872c:	call   0x100085fb
10008731:	pop    edi
10008732:	pop    esi
10008733:	pop    ebx
10008734:	ret    
10008735:	mov    eax,DWORD PTR [ecx+0x30]
10008738:	test   eax,eax
1000873a:	je     0x10008740
1000873c:	mov    eax,DWORD PTR [eax+0x18]
1000873f:	ret    
10008740:	mov    eax,DWORD PTR [ecx+0x34]
10008743:	ret    
10008744:	push   ebp
10008745:	mov    ebp,esp
10008747:	sub    esp,0x18
1000874a:	mov    eax,ds:0x1007e030
1000874f:	xor    eax,ebp
10008751:	mov    DWORD PTR [ebp-0x4],eax
10008754:	mov    eax,DWORD PTR [ebp+0x8]
10008757:	mov    eax,DWORD PTR [eax+0x38]
1000875a:	test   eax,eax
1000875c:	push   esi
1000875d:	push   edi
1000875e:	lea    esi,[ebp+0xc]
10008761:	lea    edi,[ebp-0x14]
10008764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008768:	pop    edi
10008769:	pop    esi
1000876a:	jne    0x10008770
1000876c:	xor    eax,eax
1000876e:	jmp    0x10008788
10008770:	and    DWORD PTR [ebp-0x18],0x0
10008774:	mov    ecx,DWORD PTR [eax]
10008776:	lea    edx,[ebp-0x18]
10008779:	push   edx
1000877a:	lea    edx,[ebp-0x14]
1000877d:	push   edx
1000877e:	push   eax
1000877f:	call   DWORD PTR [ecx]
10008781:	test   eax,eax
10008783:	jl     0x1000876c
10008785:	mov    eax,DWORD PTR [ebp-0x18]
10008788:	mov    ecx,DWORD PTR [ebp-0x4]
1000878b:	xor    ecx,ebp
1000878d:	call   0x10042e97
10008792:	leave  
10008793:	ret    0x14
10008796:	push   ebp
10008797:	mov    ebp,esp
10008799:	sub    esp,0x14
1000879c:	mov    eax,ds:0x1007e030
100087a1:	xor    eax,ebp
100087a3:	mov    DWORD PTR [ebp-0x4],eax
100087a6:	push   esi
100087a7:	push   edi
100087a8:	mov    eax,DWORD PTR [ebp+0x8]
100087ab:	lea    esi,[ebp+0xc]
100087ae:	lea    edi,[ebp-0x14]
100087b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087b5:	sub    esp,0x10
100087b8:	mov    edi,esp
100087ba:	lea    esi,[ebp-0x14]
100087bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087c0:	push   eax
100087c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087c2:	call   0x10008744
100087c7:	mov    ecx,DWORD PTR [ebp-0x4]
100087ca:	pop    edi
100087cb:	xor    ecx,ebp
100087cd:	pop    esi
100087ce:	call   0x10042e97
100087d3:	leave  
100087d4:	ret    0x14
100087d7:	push   0x8
100087d9:	mov    eax,0x10063ccf
100087de:	call   0x10059a35
100087e3:	push   0x40
100087e5:	call   0x1004349e
100087ea:	pop    ecx
100087eb:	mov    DWORD PTR [ebp-0x10],eax
100087ee:	and    DWORD PTR [ebp-0x4],0x0
100087f2:	test   eax,eax
100087f4:	je     0x10008803
100087f6:	push   eax
100087f7:	call   0x10008683
100087fc:	mov    esi,eax
100087fe:	mov    DWORD PTR [ebp-0x10],esi
10008801:	jmp    0x1000880a
10008803:	and    DWORD PTR [ebp-0x10],0x0
10008807:	mov    esi,DWORD PTR [ebp-0x10]
1000880a:	mov    DWORD PTR [ebp-0x14],esi
1000880d:	mov    eax,DWORD PTR [ebp+0x8]
10008810:	mov    DWORD PTR [ebp-0x4],0x1
10008817:	mov    ecx,DWORD PTR [eax]
10008819:	call   0x10007946
1000881e:	mov    ebx,eax
10008820:	mov    edi,esi
10008822:	call   0x10009c0a
10008827:	mov    eax,DWORD PTR [ebp+0x8]
1000882a:	mov    ecx,DWORD PTR [eax+0x4]
1000882d:	call   0x10007946
10008832:	lea    edi,[esi+0x4]
10008835:	mov    ebx,eax
10008837:	call   0x10009c0a
1000883c:	mov    eax,DWORD PTR [ebp+0x8]
1000883f:	mov    ecx,DWORD PTR [eax+0x8]
10008842:	call   0x10007946
10008847:	lea    edi,[esi+0x8]
1000884a:	mov    ebx,eax
1000884c:	call   0x10009c0a
10008851:	mov    ebx,DWORD PTR [ebp+0x8]
10008854:	lea    eax,[ebx+0x18]
10008857:	push   eax
10008858:	lea    eax,[esi+0x18]
1000885b:	push   eax
1000885c:	call   0x10007ad6
10008861:	mov    al,BYTE PTR [ebx+0x2c]
10008864:	mov    BYTE PTR [esi+0x2c],al
10008867:	mov    eax,DWORD PTR [ebx+0x10]
1000886a:	mov    DWORD PTR [esi+0x10],eax
1000886d:	mov    eax,DWORD PTR [ebx+0x14]
10008870:	mov    DWORD PTR [esi+0x14],eax
10008873:	mov    edi,DWORD PTR [ebx+0x38]
10008876:	lea    eax,[esi+0x38]
10008879:	cmp    DWORD PTR [eax],edi
1000887b:	je     0x10008887
1000887d:	mov    esi,eax
1000887f:	call   0x1000763b
10008884:	mov    esi,DWORD PTR [ebp-0x10]
10008887:	mov    ecx,ebx
10008889:	call   0x10008735
1000888e:	mov    DWORD PTR [esi+0x34],eax
10008891:	mov    eax,esi
10008893:	call   0x10059b0d
10008898:	ret    0x4
1000889b:	push   0x44
1000889d:	mov    eax,0x10062f0f
100088a2:	call   0x10059a35
100088a7:	and    DWORD PTR [ebp-0x14],0x0
100088ab:	mov    ebx,DWORD PTR [ebp+0xc]
100088ae:	mov    eax,DWORD PTR [ebx]
100088b0:	lea    ecx,[ebp-0x30]
100088b3:	push   ecx
100088b4:	call   0x10019730
100088b9:	and    DWORD PTR [ebp-0x4],0x0
100088bd:	mov    edi,DWORD PTR [ebp+0x8]
100088c0:	mov    esi,DWORD PTR [edi]
100088c2:	push   eax
100088c3:	mov    DWORD PTR [ebp-0x14],0x1
100088ca:	call   0x10007982
100088cf:	test   al,al
100088d1:	setne  BYTE PTR [ebp-0xd]
100088d5:	or     DWORD PTR [ebp-0x4],0xffffffff
100088d9:	xor    esi,esi
100088db:	push   0x0
100088dd:	inc    esi
100088de:	push   esi
100088df:	lea    ecx,[ebp-0x30]
100088e2:	call   0x100012f0
100088e7:	mov    eax,DWORD PTR [ebx+0x4]
100088ea:	lea    ecx,[ebp-0x30]
100088ed:	push   ecx
100088ee:	call   0x10019730
100088f3:	mov    DWORD PTR [ebp-0x4],esi
100088f6:	mov    esi,DWORD PTR [edi+0x4]
100088f9:	push   eax
100088fa:	mov    DWORD PTR [ebp-0x14],0x2
10008901:	call   0x10007982
10008906:	test   al,al
10008908:	jne    0x10008912
1000890a:	cmp    BYTE PTR [ebp-0xd],al
1000890d:	mov    BYTE PTR [ebp-0xd],al
10008910:	je     0x10008916
10008912:	mov    BYTE PTR [ebp-0xd],0x1
10008916:	or     DWORD PTR [ebp-0x4],0xffffffff
1000891a:	push   0x0
1000891c:	push   0x1
1000891e:	lea    ecx,[ebp-0x30]
10008921:	call   0x100012f0
10008926:	mov    eax,DWORD PTR [ebx+0x8]
10008929:	lea    ecx,[ebp-0x4c]
1000892c:	push   ecx
1000892d:	call   0x10019730
10008932:	mov    DWORD PTR [ebp-0x4],0x2
10008939:	mov    esi,DWORD PTR [edi+0x8]
1000893c:	push   eax
1000893d:	mov    DWORD PTR [ebp-0x14],0x4
10008944:	call   0x10007982
10008949:	test   al,al
1000894b:	jne    0x10008955
1000894d:	cmp    BYTE PTR [ebp-0xd],al
10008950:	mov    BYTE PTR [ebp-0xd],al
10008953:	je     0x10008959
10008955:	mov    BYTE PTR [ebp-0xd],0x1
10008959:	or     DWORD PTR [ebp-0x4],0xffffffff
1000895d:	push   0x0
1000895f:	push   0x1
10008961:	lea    ecx,[ebp-0x4c]
10008964:	call   0x100012f0
10008969:	add    ebx,0x18
1000896c:	lea    ecx,[edi+0x18]
1000896f:	call   0x10007d1b
10008974:	test   al,al
10008976:	jne    0x10008981
10008978:	cmp    BYTE PTR [ebp-0xd],al
1000897b:	jne    0x10008981
1000897d:	xor    bl,bl
1000897f:	jmp    0x10008983
10008981:	mov    bl,0x1
10008983:	mov    edx,DWORD PTR [ebp+0xc]
10008986:	mov    al,BYTE PTR [edx+0x2c]
10008989:	cmp    BYTE PTR [edi+0x2c],al
1000898c:	je     0x10008993
1000898e:	mov    bl,0x1
10008990:	mov    BYTE PTR [edi+0x2c],al
10008993:	mov    eax,DWORD PTR [edx+0x10]
10008996:	mov    ecx,DWORD PTR [edi+0x10]
10008999:	cmp    ecx,eax
1000899b:	mov    esi,DWORD PTR [edx+0x14]
1000899e:	jne    0x100089a7
100089a0:	mov    ecx,DWORD PTR [edi+0x14]
100089a3:	cmp    ecx,esi
100089a5:	je     0x100089af
100089a7:	mov    bl,0x1
100089a9:	mov    DWORD PTR [edi+0x10],eax
100089ac:	mov    DWORD PTR [edi+0x14],esi
100089af:	mov    eax,DWORD PTR [edx+0x38]
100089b2:	lea    esi,[edi+0x38]
100089b5:	cmp    DWORD PTR [esi],eax
100089b7:	je     0x100089c8
100089b9:	mov    edi,eax
100089bb:	mov    bl,0x1
100089bd:	call   0x1000763b
100089c2:	mov    edi,DWORD PTR [ebp+0x8]
100089c5:	mov    edx,DWORD PTR [ebp+0xc]
100089c8:	cmp    DWORD PTR [edi+0x30],0x0
100089cc:	jne    0x100089ee
100089ce:	mov    ecx,edx
100089d0:	call   0x10008735
100089d5:	mov    ecx,edi
100089d7:	mov    esi,eax
100089d9:	call   0x10008735
100089de:	cmp    esi,eax
100089e0:	je     0x100089ee
100089e2:	mov    ecx,edx
100089e4:	mov    bl,0x1
100089e6:	call   0x10008735
100089eb:	mov    DWORD PTR [edi+0x34],eax
100089ee:	mov    al,bl
100089f0:	call   0x10059b0d
100089f5:	ret    0x8
100089f8:	push   0x74
100089fa:	mov    eax,0x100604d4
100089ff:	call   0x10059a35
10008a04:	mov    eax,DWORD PTR [esi]
10008a06:	lea    ecx,[ebp-0x44]
10008a09:	push   ecx
10008a0a:	call   0x10019730
10008a0f:	mov    ebx,eax
10008a11:	and    DWORD PTR [ebp-0x4],0x0
10008a15:	mov    eax,DWORD PTR [edi]
10008a17:	lea    ecx,[ebp-0x28]
10008a1a:	push   ecx
10008a1b:	call   0x10019730
10008a20:	mov    ecx,ebx
10008a22:	mov    BYTE PTR [ebp-0x4],0x1
10008a26:	call   0x1000656c
10008a2b:	mov    bl,al
10008a2d:	neg    bl
10008a2f:	push   0x0
10008a31:	sbb    bl,bl
10008a33:	push   0x1
10008a35:	lea    ecx,[ebp-0x28]
10008a38:	inc    bl
10008a3a:	call   0x100012f0
10008a3f:	or     DWORD PTR [ebp-0x4],0xffffffff
10008a43:	push   0x0
10008a45:	push   0x1
10008a47:	lea    ecx,[ebp-0x44]
10008a4a:	call   0x100012f0
10008a4f:	test   bl,bl
10008a51:	je     0x10008a5a
10008a53:	xor    al,al
10008a55:	jmp    0x10008b41
10008a5a:	mov    eax,DWORD PTR [esi+0x4]
10008a5d:	lea    ecx,[ebp-0x28]
10008a60:	push   ecx
10008a61:	call   0x10019730
10008a66:	mov    ebx,eax
10008a68:	lea    ecx,[ebp-0x44]
10008a6b:	mov    DWORD PTR [ebp-0x4],0x2
10008a72:	mov    eax,DWORD PTR [edi+0x4]
10008a75:	push   ecx
10008a76:	call   0x10019730
10008a7b:	mov    ecx,ebx
10008a7d:	mov    BYTE PTR [ebp-0x4],0x3
10008a81:	call   0x1000656c
10008a86:	mov    bl,al
10008a88:	neg    bl
10008a8a:	push   0x0
10008a8c:	sbb    bl,bl
10008a8e:	push   0x1
10008a90:	lea    ecx,[ebp-0x44]
10008a93:	inc    bl
10008a95:	call   0x100012f0
10008a9a:	or     DWORD PTR [ebp-0x4],0xffffffff
10008a9e:	push   0x0
10008aa0:	push   0x1
10008aa2:	lea    ecx,[ebp-0x28]
10008aa5:	call   0x100012f0
10008aaa:	test   bl,bl
10008aac:	jne    0x10008a53
10008aae:	mov    eax,DWORD PTR [esi+0x8]
10008ab1:	lea    ecx,[ebp-0x7c]
10008ab4:	push   ecx
10008ab5:	call   0x10019730
10008aba:	mov    ebx,eax
10008abc:	lea    ecx,[ebp-0x60]
10008abf:	mov    DWORD PTR [ebp-0x4],0x4
10008ac6:	mov    eax,DWORD PTR [edi+0x8]
10008ac9:	push   ecx
10008aca:	call   0x10019730
10008acf:	mov    ecx,ebx
10008ad1:	mov    BYTE PTR [ebp-0x4],0x5
10008ad5:	call   0x1000656c
10008ada:	mov    bl,al
10008adc:	neg    bl
10008ade:	push   0x0
10008ae0:	sbb    bl,bl
10008ae2:	push   0x1
10008ae4:	lea    ecx,[ebp-0x60]
10008ae7:	inc    bl
10008ae9:	call   0x100012f0
10008aee:	or     DWORD PTR [ebp-0x4],0xffffffff
10008af2:	push   0x0
10008af4:	push   0x1
10008af6:	lea    ecx,[ebp-0x7c]
10008af9:	call   0x100012f0
10008afe:	test   bl,bl
10008b00:	jne    0x10008a53
10008b06:	lea    eax,[esi+0x18]
10008b09:	push   eax
10008b0a:	lea    eax,[edi+0x18]
10008b0d:	push   eax
10008b0e:	call   0x10007c1a
10008b13:	test   al,al
10008b15:	je     0x10008a53
10008b1b:	mov    al,BYTE PTR [edi+0x2c]
10008b1e:	cmp    al,BYTE PTR [esi+0x2c]
10008b21:	jne    0x10008a53
10008b27:	mov    eax,DWORD PTR [edi+0x10]
10008b2a:	cmp    eax,DWORD PTR [esi+0x10]
10008b2d:	jne    0x10008a53
10008b33:	mov    eax,DWORD PTR [edi+0x14]
10008b36:	cmp    eax,DWORD PTR [esi+0x14]
10008b39:	jne    0x10008a53
10008b3f:	mov    al,0x1
10008b41:	call   0x10059b0d
10008b46:	ret    
10008b47:	push   ebp
10008b48:	mov    ebp,esp
10008b4a:	and    esp,0xfffffff8
10008b4d:	push   0xffffffff
10008b4f:	push   0x100621e8
10008b54:	mov    eax,fs:0x0
10008b5a:	push   eax
10008b5b:	sub    esp,0xc0
10008b61:	mov    eax,ds:0x1007e030
10008b66:	xor    eax,esp
10008b68:	mov    DWORD PTR [esp+0xb8],eax
10008b6f:	push   ebx
10008b70:	push   esi
10008b71:	push   edi
10008b72:	mov    eax,ds:0x1007e030
10008b77:	xor    eax,esp
10008b79:	push   eax
10008b7a:	lea    eax,[esp+0xd0]
10008b81:	mov    fs:0x0,eax
10008b87:	mov    eax,DWORD PTR [ebp+0x8]
10008b8a:	xor    edi,edi
10008b8c:	mov    DWORD PTR [esp+0x1c],eax
10008b90:	mov    DWORD PTR [esp+0x10],edi
10008b94:	mov    eax,DWORD PTR [eax+0x4]
10008b97:	cmp    eax,edi
10008b99:	mov    DWORD PTR [esp+0x18],ecx
10008b9d:	je     0x10008bb9
10008b9f:	lea    ecx,[esp+0x3c]
10008ba3:	push   ecx
10008ba4:	call   0x10019730
10008ba9:	xor    ebx,ebx
10008bab:	inc    ebx
10008bac:	mov    DWORD PTR [esp+0xd8],edi
10008bb3:	mov    DWORD PTR [esp+0x10],ebx
10008bb7:	jmp    0x10008bd9
10008bb9:	push   0x1006cd08
10008bbe:	lea    ecx,[esp+0x24]
10008bc2:	call   0x100011cd
10008bc7:	xor    ebx,ebx
10008bc9:	inc    ebx
10008bca:	mov    DWORD PTR [esp+0xd8],ebx
10008bd1:	mov    DWORD PTR [esp+0x10],0x2
10008bd9:	push   eax
10008bda:	lea    ecx,[esp+0xb0]
10008be1:	call   0x100011a7
10008be6:	mov    DWORD PTR [esp+0xd8],0x2
10008bf1:	test   BYTE PTR [esp+0x10],0x2
10008bf6:	je     0x10008c08
10008bf8:	and    DWORD PTR [esp+0x10],0xfffffffd
10008bfd:	push   edi
10008bfe:	push   ebx
10008bff:	lea    ecx,[esp+0x28]
10008c03:	call   0x100012f0
10008c08:	mov    BYTE PTR [esp+0xd8],0x4
10008c10:	test   BYTE PTR [esp+0x10],bl
10008c14:	je     0x10008c21
10008c16:	push   edi
10008c17:	push   ebx
10008c18:	lea    ecx,[esp+0x44]
10008c1c:	call   0x100012f0
10008c21:	push   0x1006cd08
10008c26:	lea    esi,[esp+0xb0]
10008c2d:	call   0x1000658e
10008c32:	test   al,al
10008c34:	pop    ecx
10008c35:	je     0x10008c4a
10008c37:	mov    ecx,DWORD PTR [esp+0x18]
10008c3b:	push   0x1006cd08
10008c40:	call   0x100011cd
10008c45:	jmp    0x10008ed3
10008c4a:	push   edi
10008c4b:	lea    ecx,[esp+0x94]
10008c52:	mov    DWORD PTR [esp+0xac],0xf
10008c5d:	call   0x1000141c
10008c62:	push   0x7b6ae29e
10008c67:	push   0x1006d38c
10008c6c:	mov    BYTE PTR [esp+0xe0],0x5
10008c74:	call   0x10004246
10008c79:	push   0x27d43ace
10008c7e:	push   eax
10008c7f:	call   0x10004246
10008c84:	mov    ecx,DWORD PTR [esp+0xc0]
10008c8b:	add    esp,0x10
10008c8e:	cmp    DWORD PTR [esp+0xc4],0x10
10008c96:	jb     0x10008c9e
10008c98:	mov    DWORD PTR [esp+0x10],ecx
10008c9c:	jmp    0x10008ca9
10008c9e:	lea    edx,[esp+0xb0]
10008ca5:	mov    DWORD PTR [esp+0x10],edx
10008ca9:	cmp    DWORD PTR [esp+0xc4],0x10
10008cb1:	jae    0x10008cba
10008cb3:	lea    ecx,[esp+0xb0]
10008cba:	push   eax
10008cbb:	push   0x7
10008cbd:	mov    esi,0x1006d3c4
10008cc2:	push   esi
10008cc3:	mov    DWORD PTR [esp+0x20],ecx
10008cc7:	call   0x10004258
10008ccc:	add    esp,0xc
10008ccf:	push   eax
10008cd0:	push   DWORD PTR [esp+0x14]
10008cd4:	call   0x10045a30
10008cd9:	cmp    eax,DWORD PTR [esp+0x1c]
10008cdd:	pop    ecx
10008cde:	pop    ecx
10008cdf:	jne    0x10008cfd
10008ce1:	push   0xffffffff
10008ce3:	push   edi
10008ce4:	lea    eax,[esp+0xb4]
10008ceb:	push   eax
10008cec:	lea    ecx,[esp+0x9c]
10008cf3:	call   0x10001241
10008cf8:	jmp    0x10008eb4
10008cfd:	push   0x2b17dd26
10008d02:	push   0x1006d3cc
10008d07:	call   0x10004246
10008d0c:	push   0x32d26756
10008d11:	push   eax
10008d12:	call   0x10004246
10008d17:	push   0x1e8480c4
10008d1c:	push   eax
10008d1d:	call   0x10004246
10008d22:	push   eax
10008d23:	push   0x4
10008d25:	push   0x1006d40c
10008d2a:	call   0x10004258
10008d2f:	add    esp,0x24
10008d32:	push   eax
10008d33:	lea    ecx,[esp+0x24]
10008d37:	call   0x100011cd
10008d3c:	push   edi
10008d3d:	lea    eax,[esp+0x24]
10008d41:	push   eax
10008d42:	lea    eax,[esp+0x60]
10008d46:	push   eax
10008d47:	mov    eax,DWORD PTR [esp+0x28]
10008d4b:	add    eax,0x18
10008d4e:	mov    BYTE PTR [esp+0xe4],0x6
10008d56:	call   0x100084cc
10008d5b:	lea    ecx,[esp+0xac]
10008d62:	push   ecx
10008d63:	push   eax
10008d64:	lea    eax,[esp+0x44]
10008d68:	push   eax
10008d69:	mov    BYTE PTR [esp+0xe4],0x7
10008d71:	call   0x100064d6
10008d76:	add    esp,0xc
10008d79:	push   0xffffffff
10008d7b:	push   edi
10008d7c:	push   eax
10008d7d:	lea    ecx,[esp+0x9c]
10008d84:	mov    BYTE PTR [esp+0xe4],0x8
10008d8c:	call   0x10001241
10008d91:	push   edi
10008d92:	push   ebx
10008d93:	lea    ecx,[esp+0x44]
10008d97:	call   0x100012f0
10008d9c:	push   edi
10008d9d:	push   ebx
10008d9e:	lea    ecx,[esp+0x60]
10008da2:	call   0x100012f0
10008da7:	push   edi
10008da8:	push   ebx
10008da9:	lea    ecx,[esp+0x28]
10008dad:	mov    BYTE PTR [esp+0xe0],0x5
10008db5:	call   0x100012f0
10008dba:	push   0x374653fe
10008dbf:	push   0x1006d414
10008dc4:	call   0x10004246
10008dc9:	push   0x1815eafa
10008dce:	push   eax
10008dcf:	call   0x10004246
10008dd4:	mov    ecx,DWORD PTR [esp+0xa4]
10008ddb:	add    esp,0x10
10008dde:	cmp    DWORD PTR [esp+0xa8],0x10
10008de6:	jb     0x10008dee
10008de8:	mov    DWORD PTR [esp+0x14],ecx
10008dec:	jmp    0x10008df9
10008dee:	lea    edx,[esp+0x94]
10008df5:	mov    DWORD PTR [esp+0x14],edx
10008df9:	cmp    DWORD PTR [esp+0xa8],0x10
10008e01:	jae    0x10008e0a
10008e03:	lea    ecx,[esp+0x94]
10008e0a:	push   eax
10008e0b:	push   0x7
10008e0d:	push   esi
10008e0e:	mov    DWORD PTR [esp+0x1c],ecx
10008e12:	call   0x10004258
10008e17:	add    esp,0xc
10008e1a:	push   eax
10008e1b:	push   DWORD PTR [esp+0x18]
10008e1f:	call   0x10045a30
10008e24:	cmp    eax,DWORD PTR [esp+0x18]
10008e28:	pop    ecx
10008e29:	pop    ecx
10008e2a:	je     0x10008eb4
10008e30:	push   0xa9a60a4
10008e35:	push   0x1006d444
10008e3a:	call   0x10004246
10008e3f:	push   0x374f58d0
10008e44:	push   eax
10008e45:	call   0x10004246
10008e4a:	push   eax
10008e4b:	push   0x7
10008e4d:	push   esi
10008e4e:	call   0x10004258
10008e53:	add    esp,0x1c
10008e56:	push   eax
10008e57:	lea    ecx,[esp+0x78]
10008e5b:	call   0x100011cd
10008e60:	lea    ecx,[esp+0x90]
10008e67:	push   ecx
10008e68:	push   eax
10008e69:	lea    eax,[esp+0x60]
10008e6d:	push   eax
10008e6e:	mov    BYTE PTR [esp+0xe4],0x9
10008e76:	call   0x100064d6
10008e7b:	add    esp,0xc
10008e7e:	push   0xffffffff
10008e80:	push   edi
10008e81:	push   eax
10008e82:	lea    ecx,[esp+0x9c]
10008e89:	mov    BYTE PTR [esp+0xe4],0xa
10008e91:	call   0x10001241
10008e96:	push   edi
10008e97:	push   ebx
10008e98:	lea    ecx,[esp+0x60]
10008e9c:	call   0x100012f0
10008ea1:	push   edi
10008ea2:	push   ebx
10008ea3:	lea    ecx,[esp+0x7c]
10008ea7:	mov    BYTE PTR [esp+0xe0],0x5
10008eaf:	call   0x100012f0
10008eb4:	mov    ecx,DWORD PTR [esp+0x18]
10008eb8:	lea    eax,[esp+0x90]
10008ebf:	push   eax
10008ec0:	call   0x100011a7
10008ec5:	push   edi
10008ec6:	push   ebx
10008ec7:	lea    ecx,[esp+0x98]
10008ece:	call   0x100012f0
10008ed3:	push   edi
10008ed4:	push   ebx
10008ed5:	lea    ecx,[esp+0xb4]
10008edc:	call   0x100012f0
10008ee1:	mov    eax,DWORD PTR [esp+0x18]
10008ee5:	mov    ecx,DWORD PTR [esp+0xd0]
10008eec:	mov    DWORD PTR fs:0x0,ecx
10008ef3:	pop    ecx
10008ef4:	pop    edi
10008ef5:	pop    esi
10008ef6:	pop    ebx
10008ef7:	mov    ecx,DWORD PTR [esp+0xb8]
10008efe:	xor    ecx,esp
10008f00:	call   0x10042e97
10008f05:	mov    esp,ebp
10008f07:	pop    ebp
10008f08:	ret    0x4
10008f0b:	push   0x0
10008f0d:	mov    eax,0x100636ae
10008f12:	call   0x10059a35
10008f17:	mov    edi,DWORD PTR [ebp+0x8]
10008f1a:	xor    ebx,ebx
10008f1c:	mov    DWORD PTR [edi],ebx
10008f1e:	mov    DWORD PTR [ebp-0x4],ebx
10008f21:	mov    DWORD PTR [edi+0x4],ebx
10008f24:	mov    DWORD PTR [edi+0x8],ebx
10008f27:	mov    DWORD PTR [edi+0xc],ebx
10008f2a:	mov    BYTE PTR [ebp-0x4],0x3
10008f2e:	lea    esi,[edi+0x20]
10008f31:	mov    DWORD PTR [edi+0x10],ebx
10008f34:	mov    DWORD PTR [edi+0x14],ebx
10008f37:	mov    DWORD PTR [edi+0x18],ebx
10008f3a:	mov    DWORD PTR [edi+0x1c],ebx
10008f3d:	call   0x100079e4
10008f42:	mov    DWORD PTR [edi+0x34],ebx
10008f45:	mov    DWORD PTR [edi+0x38],ebx
10008f48:	mov    eax,edi
10008f4a:	call   0x10059b0d
10008f4f:	ret    0x4
10008f52:	push   ebx
10008f53:	push   esi
10008f54:	mov    esi,ecx
10008f56:	push   edi
10008f57:	mov    edi,DWORD PTR [esi+0x34]
10008f5a:	mov    ebx,eax
10008f5c:	cmp    ebx,edi
10008f5e:	je     0x10008f69
10008f60:	test   edi,edi
10008f62:	je     0x10008f69
10008f64:	call   0x10009e75
10008f69:	mov    DWORD PTR [esi+0x34],ebx
10008f6c:	mov    edi,DWORD PTR [esi]
10008f6e:	test   edi,edi
10008f70:	je     0x10008f7e
10008f72:	push   DWORD PTR [edi]
10008f74:	mov    eax,ebx
10008f76:	call   0x1000776e
10008f7b:	mov    DWORD PTR [edi+0x20],ebx
10008f7e:	mov    edi,DWORD PTR [esi+0x4]
10008f81:	test   edi,edi
10008f83:	je     0x10008f94
10008f85:	mov    ebx,DWORD PTR [esi+0x34]
10008f88:	push   DWORD PTR [edi]
10008f8a:	mov    eax,ebx
10008f8c:	call   0x1000776e
10008f91:	mov    DWORD PTR [edi+0x20],ebx
10008f94:	mov    edi,DWORD PTR [esi+0x8]
10008f97:	test   edi,edi
10008f99:	je     0x10008faa
10008f9b:	mov    ebx,DWORD PTR [esi+0x34]
10008f9e:	push   DWORD PTR [edi]
10008fa0:	mov    eax,ebx
10008fa2:	call   0x1000776e
10008fa7:	mov    DWORD PTR [edi+0x20],ebx
10008faa:	lea    ebx,[esi+0x20]
10008fad:	mov    esi,DWORD PTR [esi+0x34]
10008fb0:	test   esi,esi
10008fb2:	mov    DWORD PTR [ebx+0xc],esi
10008fb5:	je     0x10008fbc
10008fb7:	call   0x100085fb
10008fbc:	pop    edi
10008fbd:	pop    esi
10008fbe:	pop    ebx
10008fbf:	ret    
10008fc0:	push   0xc
10008fc2:	mov    eax,0x10062145
10008fc7:	call   0x10059a35
10008fcc:	mov    esi,ecx
10008fce:	mov    DWORD PTR [ebp-0x14],ebx
10008fd1:	and    DWORD PTR [ebp-0x4],0x0
10008fd5:	mov    eax,DWORD PTR [esi+0x34]
10008fd8:	mov    edi,DWORD PTR [ebx+0x18]
10008fdb:	test   edi,edi
10008fdd:	mov    ecx,DWORD PTR [eax+0x18]
10008fe0:	mov    DWORD PTR [ebp-0x10],ecx
10008fe3:	je     0x10008fed
10008fe5:	push   DWORD PTR [ebx+0x14]
10008fe8:	call   0x100076d4
10008fed:	mov    eax,DWORD PTR [esi+0xc]
10008ff0:	test   eax,eax
10008ff2:	je     0x10009001
10008ff4:	mov    edi,DWORD PTR [esi+0x34]
10008ff7:	mov    ecx,DWORD PTR [ebp-0x10]
10008ffa:	mov    esi,eax
10008ffc:	call   0x100079d1
10009001:	mov    edi,ebx
10009003:	call   0x10009e75
10009008:	call   0x10059b0d
1000900d:	ret    
1000900e:	mov    eax,DWORD PTR [ecx+0x34]
10009011:	test   eax,eax
10009013:	je     0x10009019
10009015:	mov    eax,DWORD PTR [eax+0x18]
10009018:	ret    
10009019:	mov    eax,DWORD PTR [ecx+0x38]
1000901c:	ret    
1000901d:	push   0x8
1000901f:	mov    eax,0x10063ca2
10009024:	call   0x10059a35
10009029:	push   0x40
1000902b:	call   0x1004349e
10009030:	pop    ecx
10009031:	mov    DWORD PTR [ebp-0x10],eax
10009034:	xor    esi,esi
10009036:	cmp    eax,esi
10009038:	mov    DWORD PTR [ebp-0x4],esi
1000903b:	je     0x10009045
1000903d:	push   eax
1000903e:	call   0x10008f0b
10009043:	mov    esi,eax
10009045:	mov    DWORD PTR [ebp-0x10],esi
10009048:	mov    eax,DWORD PTR [ebp+0x8]
1000904b:	mov    DWORD PTR [ebp-0x4],0x1
10009052:	mov    ecx,DWORD PTR [eax]
10009054:	call   0x10007946
10009059:	mov    ebx,eax
1000905b:	mov    edi,esi
1000905d:	call   0x10009c0a
10009062:	mov    eax,DWORD PTR [ebp+0x8]
10009065:	mov    ecx,DWORD PTR [eax+0x4]
10009068:	call   0x10007946
1000906d:	lea    edi,[esi+0x4]
10009070:	mov    ebx,eax
10009072:	call   0x10009c0a
10009077:	mov    eax,DWORD PTR [ebp+0x8]
1000907a:	mov    ecx,DWORD PTR [eax+0x8]
1000907d:	call   0x10007946
10009082:	lea    edi,[esi+0x8]
10009085:	mov    ebx,eax
10009087:	call   0x10009c0a
1000908c:	mov    edi,DWORD PTR [ebp+0x8]
1000908f:	mov    ecx,DWORD PTR [edi+0xc]
10009092:	test   ecx,ecx
10009094:	je     0x100090a8
10009096:	call   0x10007946
1000909b:	lea    edi,[esi+0xc]
1000909e:	mov    ebx,eax
100090a0:	call   0x10009c0a
100090a5:	mov    edi,DWORD PTR [ebp+0x8]
100090a8:	lea    eax,[edi+0x20]
100090ab:	push   eax
100090ac:	lea    eax,[esi+0x20]
100090af:	push   eax
100090b0:	call   0x10007ad6
100090b5:	mov    eax,DWORD PTR [edi+0x10]
100090b8:	mov    DWORD PTR [esi+0x10],eax
100090bb:	mov    eax,DWORD PTR [edi+0x14]
100090be:	mov    DWORD PTR [esi+0x14],eax
100090c1:	mov    eax,DWORD PTR [edi+0x18]
100090c4:	mov    DWORD PTR [esi+0x18],eax
100090c7:	mov    eax,DWORD PTR [edi+0x1c]
100090ca:	mov    ecx,edi
100090cc:	mov    DWORD PTR [esi+0x1c],eax
100090cf:	call   0x1000900e
100090d4:	and    DWORD PTR [ebp-0x10],0x0
100090d8:	or     DWORD PTR [ebp-0x4],0xffffffff
100090dc:	mov    DWORD PTR [esi+0x38],eax
100090df:	lea    eax,[ebp-0x10]
100090e2:	call   0x10009e32
100090e7:	mov    eax,esi
100090e9:	call   0x10059b0d
100090ee:	ret    0x4
100090f1:	push   0x40
100090f3:	mov    eax,0x10062ea9
100090f8:	call   0x10059a35
100090fd:	and    DWORD PTR [ebp-0x14],0x0
10009101:	mov    ebx,DWORD PTR [ebp+0x8]
10009104:	mov    eax,DWORD PTR [ebx]
10009106:	lea    ecx,[ebp-0x30]
10009109:	push   ecx
1000910a:	call   0x10019730
1000910f:	and    DWORD PTR [ebp-0x4],0x0
10009113:	mov    esi,DWORD PTR [edi]
10009115:	push   eax
10009116:	mov    DWORD PTR [ebp-0x14],0x1
1000911d:	call   0x10007982
10009122:	test   al,al
10009124:	setne  BYTE PTR [ebp-0xd]
10009128:	or     DWORD PTR [ebp-0x4],0xffffffff
1000912c:	xor    esi,esi
1000912e:	push   0x0
10009130:	inc    esi
10009131:	push   esi
10009132:	lea    ecx,[ebp-0x30]
10009135:	call   0x100012f0
1000913a:	mov    eax,DWORD PTR [ebx+0x4]
1000913d:	lea    ecx,[ebp-0x30]
10009140:	push   ecx
10009141:	call   0x10019730
10009146:	mov    DWORD PTR [ebp-0x4],esi
10009149:	mov    esi,DWORD PTR [edi+0x4]
1000914c:	push   eax
1000914d:	mov    DWORD PTR [ebp-0x14],0x2
10009154:	call   0x10007982
10009159:	test   al,al
1000915b:	jne    0x10009165
1000915d:	cmp    BYTE PTR [ebp-0xd],al
10009160:	mov    BYTE PTR [ebp-0xd],al
10009163:	je     0x10009169
10009165:	mov    BYTE PTR [ebp-0xd],0x1
10009169:	or     DWORD PTR [ebp-0x4],0xffffffff
1000916d:	push   0x0
1000916f:	push   0x1
10009171:	lea    ecx,[ebp-0x30]
10009174:	call   0x100012f0
10009179:	mov    eax,DWORD PTR [ebx+0x8]
1000917c:	lea    ecx,[ebp-0x30]
1000917f:	push   ecx
10009180:	call   0x10019730
10009185:	mov    DWORD PTR [ebp-0x4],0x2
1000918c:	mov    esi,DWORD PTR [edi+0x8]
1000918f:	push   eax
10009190:	mov    DWORD PTR [ebp-0x14],0x4
10009197:	call   0x10007982
1000919c:	test   al,al
1000919e:	jne    0x100091a8
100091a0:	cmp    BYTE PTR [ebp-0xd],al
100091a3:	mov    BYTE PTR [ebp-0xd],al
100091a6:	je     0x100091ac
100091a8:	mov    BYTE PTR [ebp-0xd],0x1
100091ac:	or     DWORD PTR [ebp-0x4],0xffffffff
100091b0:	push   0x0
100091b2:	push   0x1
100091b4:	lea    ecx,[ebp-0x30]
100091b7:	call   0x100012f0
100091bc:	mov    eax,DWORD PTR [ebx+0xc]
100091bf:	test   eax,eax
100091c1:	je     0x10009209
100091c3:	cmp    DWORD PTR [edi+0xc],0x0
100091c7:	je     0x10009209
100091c9:	lea    ecx,[ebp-0x4c]
100091cc:	push   ecx
100091cd:	call   0x10019730
100091d2:	mov    DWORD PTR [ebp-0x4],0x3
100091d9:	mov    esi,DWORD PTR [edi+0xc]
100091dc:	push   eax
100091dd:	mov    DWORD PTR [ebp-0x14],0x8
100091e4:	call   0x10007982
100091e9:	test   al,al
100091eb:	jne    0x100091f5
100091ed:	cmp    BYTE PTR [ebp-0xd],al
100091f0:	mov    BYTE PTR [ebp-0xd],al
100091f3:	je     0x100091f9
100091f5:	mov    BYTE PTR [ebp-0xd],0x1
100091f9:	or     DWORD PTR [ebp-0x4],0xffffffff
100091fd:	push   0x0
100091ff:	push   0x1
10009201:	lea    ecx,[ebp-0x4c]
10009204:	call   0x100012f0
10009209:	add    ebx,0x20
1000920c:	lea    ecx,[edi+0x20]
1000920f:	call   0x10007d1b
10009214:	test   al,al
10009216:	jne    0x1000921f
10009218:	xor    bl,bl
1000921a:	cmp    BYTE PTR [ebp-0xd],bl
1000921d:	je     0x10009221
1000921f:	mov    bl,0x1
10009221:	mov    edx,DWORD PTR [ebp+0x8]
10009224:	mov    eax,DWORD PTR [edx+0x10]
10009227:	cmp    eax,DWORD PTR [edi+0x10]
1000922a:	mov    esi,DWORD PTR [edx+0x14]
1000922d:	jne    0x10009234
1000922f:	cmp    esi,DWORD PTR [edi+0x14]
10009232:	je     0x1000923c
10009234:	mov    bl,0x1
10009236:	mov    DWORD PTR [edi+0x10],eax
10009239:	mov    DWORD PTR [edi+0x14],esi
1000923c:	mov    eax,DWORD PTR [edx+0x18]
1000923f:	cmp    eax,DWORD PTR [edi+0x18]
10009242:	mov    esi,DWORD PTR [edx+0x1c]
10009245:	jne    0x1000924c
10009247:	cmp    esi,DWORD PTR [edi+0x1c]
1000924a:	je     0x10009254
1000924c:	mov    bl,0x1
1000924e:	mov    DWORD PTR [edi+0x18],eax
10009251:	mov    DWORD PTR [edi+0x1c],esi
10009254:	cmp    DWORD PTR [edi+0x34],0x0
10009258:	jne    0x1000927a
1000925a:	mov    ecx,edx
1000925c:	call   0x1000900e
10009261:	mov    ecx,edi
10009263:	mov    esi,eax
10009265:	call   0x1000900e
1000926a:	cmp    esi,eax
1000926c:	je     0x1000927a
1000926e:	mov    ecx,edx
10009270:	mov    bl,0x1
10009272:	call   0x1000900e
10009277:	mov    DWORD PTR [edi+0x38],eax
1000927a:	mov    al,bl
1000927c:	call   0x10059b0d
10009281:	ret    0x4
10009284:	push   0x74
10009286:	mov    eax,0x100604d4
1000928b:	call   0x10059a35
10009290:	mov    eax,DWORD PTR [esi]
10009292:	lea    ecx,[ebp-0x44]
10009295:	push   ecx
10009296:	call   0x10019730
1000929b:	mov    ebx,eax
1000929d:	and    DWORD PTR [ebp-0x4],0x0
100092a1:	mov    eax,DWORD PTR [edi]
100092a3:	lea    ecx,[ebp-0x28]
100092a6:	push   ecx
100092a7:	call   0x10019730
100092ac:	mov    ecx,ebx
100092ae:	mov    BYTE PTR [ebp-0x4],0x1
100092b2:	call   0x1000656c
100092b7:	mov    bl,al
100092b9:	neg    bl
100092bb:	push   0x0
100092bd:	sbb    bl,bl
100092bf:	push   0x1
100092c1:	lea    ecx,[ebp-0x28]
100092c4:	inc    bl
100092c6:	call   0x100012f0
100092cb:	or     DWORD PTR [ebp-0x4],0xffffffff
100092cf:	push   0x0
100092d1:	push   0x1
100092d3:	lea    ecx,[ebp-0x44]
100092d6:	call   0x100012f0
100092db:	test   bl,bl
100092dd:	je     0x100092e6
100092df:	xor    al,al
100092e1:	jmp    0x100093ec
100092e6:	mov    eax,DWORD PTR [esi+0x4]
100092e9:	lea    ecx,[ebp-0x28]
100092ec:	push   ecx
100092ed:	call   0x10019730
100092f2:	mov    ebx,eax
100092f4:	lea    ecx,[ebp-0x44]
100092f7:	mov    DWORD PTR [ebp-0x4],0x2
100092fe:	mov    eax,DWORD PTR [edi+0x4]
10009301:	push   ecx
10009302:	call   0x10019730
10009307:	mov    ecx,ebx
10009309:	mov    BYTE PTR [ebp-0x4],0x3
1000930d:	call   0x1000656c
10009312:	mov    bl,al
10009314:	neg    bl
10009316:	push   0x0
10009318:	sbb    bl,bl
1000931a:	push   0x1
1000931c:	lea    ecx,[ebp-0x44]
1000931f:	inc    bl
10009321:	call   0x100012f0
10009326:	or     DWORD PTR [ebp-0x4],0xffffffff
1000932a:	push   0x0
1000932c:	push   0x1
1000932e:	lea    ecx,[ebp-0x28]
10009331:	call   0x100012f0
10009336:	test   bl,bl
10009338:	jne    0x100092df
1000933a:	mov    eax,DWORD PTR [esi+0x8]
1000933d:	lea    ecx,[ebp-0x7c]
10009340:	push   ecx
10009341:	call   0x10019730
10009346:	mov    ebx,eax
10009348:	lea    ecx,[ebp-0x60]
1000934b:	mov    DWORD PTR [ebp-0x4],0x4
10009352:	mov    eax,DWORD PTR [edi+0x8]
10009355:	push   ecx
10009356:	call   0x10019730
1000935b:	mov    ecx,ebx
1000935d:	mov    BYTE PTR [ebp-0x4],0x5
10009361:	call   0x1000656c
10009366:	mov    bl,al
10009368:	neg    bl
1000936a:	push   0x0
1000936c:	sbb    bl,bl
1000936e:	push   0x1
10009370:	lea    ecx,[ebp-0x60]
10009373:	inc    bl
10009375:	call   0x100012f0
1000937a:	or     DWORD PTR [ebp-0x4],0xffffffff
1000937e:	push   0x0
10009380:	push   0x1
10009382:	lea    ecx,[ebp-0x7c]
10009385:	call   0x100012f0
1000938a:	test   bl,bl
1000938c:	jne    0x100092df
10009392:	lea    eax,[esi+0x20]
10009395:	push   eax
10009396:	lea    eax,[edi+0x20]
10009399:	push   eax
1000939a:	call   0x10007c1a
1000939f:	test   al,al
100093a1:	je     0x100092df
100093a7:	mov    eax,DWORD PTR [esi+0x10]
100093aa:	cmp    eax,DWORD PTR [edi+0x10]
100093ad:	jne    0x100092df
100093b3:	mov    eax,DWORD PTR [esi+0x14]
100093b6:	cmp    eax,DWORD PTR [edi+0x14]
100093b9:	jne    0x100092df
100093bf:	mov    eax,DWORD PTR [esi+0x18]
100093c2:	cmp    eax,DWORD PTR [edi+0x18]
100093c5:	jne    0x100092df
100093cb:	mov    eax,DWORD PTR [esi+0x1c]
100093ce:	cmp    eax,DWORD PTR [edi+0x1c]
100093d1:	jne    0x100092df
100093d7:	mov    ecx,esi
100093d9:	call   0x1000900e
100093de:	mov    ecx,edi
100093e0:	mov    edx,eax
100093e2:	call   0x1000900e
100093e7:	cmp    edx,eax
100093e9:	sete   al
100093ec:	call   0x10059b0d
100093f1:	ret    
100093f2:	push   0x34
100093f4:	mov    eax,0x10063c6b
100093f9:	call   0x10059a9e
100093fe:	mov    eax,DWORD PTR [ebp+0x8]
10009401:	mov    DWORD PTR [ebp-0x3c],eax
10009404:	mov    eax,DWORD PTR [ebp+0xc]
10009407:	push   0x40
10009409:	mov    ebx,ecx
1000940b:	mov    DWORD PTR [ebp-0x34],eax
1000940e:	call   0x1004349e
10009413:	pop    ecx
10009414:	mov    DWORD PTR [ebp-0x30],eax
10009417:	xor    esi,esi
10009419:	cmp    eax,esi
1000941b:	mov    DWORD PTR [ebp-0x4],esi
1000941e:	je     0x1000942b
10009420:	push   eax
10009421:	call   0x10008683
10009426:	mov    DWORD PTR [ebp-0x30],eax
10009429:	jmp    0x1000942e
1000942b:	mov    DWORD PTR [ebp-0x30],esi
1000942e:	mov    eax,DWORD PTR [ebp-0x30]
10009431:	mov    DWORD PTR [ebp-0x40],eax
10009434:	mov    DWORD PTR [ebp-0x4],0x1
1000943b:	push   esi
1000943c:	lea    ecx,[ebp-0x2c]
1000943f:	mov    DWORD PTR [ebp-0x14],0xf
10009446:	call   0x1000141c
1000944b:	push   0xffffffff
1000944d:	push   esi
1000944e:	mov    BYTE PTR [ebp-0x4],0x2
10009452:	mov    edi,DWORD PTR [ebp-0x18]
10009455:	mov    eax,ebx
10009457:	lea    esi,[ebp-0x2c]
1000945a:	call   0x10004c80
1000945f:	mov    esi,DWORD PTR [ebp-0x18]
10009462:	push   0x24
10009464:	call   0x1004349e
10009469:	pop    ecx
1000946a:	mov    DWORD PTR [ebp-0x38],eax
1000946d:	test   eax,eax
1000946f:	mov    BYTE PTR [ebp-0x4],0x3
10009473:	je     0x10009482
10009475:	sub    esi,edi
10009477:	push   esi
10009478:	push   edi
10009479:	push   ebx
1000947a:	push   eax
1000947b:	call   0x100078fd
10009480:	jmp    0x10009484
10009482:	xor    eax,eax
10009484:	mov    BYTE PTR [ebp-0x4],0x2
10009488:	mov    edi,DWORD PTR [ebp-0x30]
1000948b:	mov    ebx,eax
1000948d:	call   0x10009c0a
10009492:	push   0x1006d47c
10009497:	lea    eax,[ebp-0x2c]
1000949a:	push   eax
1000949b:	call   0x10004090
100094a0:	mov    eax,DWORD PTR [ebp-0x3c]
100094a3:	mov    edi,DWORD PTR [ebp-0x18]
100094a6:	push   0xffffffff
100094a8:	push   0x0
100094aa:	lea    esi,[ebp-0x2c]
100094ad:	call   0x10004c80
100094b2:	mov    esi,DWORD PTR [ebp-0x18]
100094b5:	push   0x24
100094b7:	call   0x1004349e
100094bc:	pop    ecx
100094bd:	mov    DWORD PTR [ebp-0x38],eax
100094c0:	test   eax,eax
100094c2:	mov    BYTE PTR [ebp-0x4],0x4
100094c6:	je     0x100094d7
100094c8:	sub    esi,edi
100094ca:	push   esi
100094cb:	push   edi
100094cc:	push   DWORD PTR [ebp-0x3c]
100094cf:	push   eax
100094d0:	call   0x100078fd
100094d5:	jmp    0x100094d9
100094d7:	xor    eax,eax
100094d9:	mov    BYTE PTR [ebp-0x4],0x2
100094dd:	mov    edi,DWORD PTR [ebp-0x30]
100094e0:	add    edi,0x4
100094e3:	mov    ebx,eax
100094e5:	call   0x10009c0a
100094ea:	push   0x1006d47c
100094ef:	lea    eax,[ebp-0x2c]
100094f2:	push   eax
100094f3:	call   0x10004090
100094f8:	push   0x5ffdb8ec
100094fd:	push   0x1006d480
10009502:	call   0x10004246
10009507:	push   0x7456b6b2
1000950c:	push   eax
1000950d:	call   0x10004246
10009512:	push   0x68720e1a
10009517:	push   eax
10009518:	call   0x10004246
1000951d:	push   eax
1000951e:	push   0x5
10009520:	push   0x1006d4b0
10009525:	call   0x10004258
1000952a:	add    esp,0x24
1000952d:	push   eax
1000952e:	lea    eax,[ebp-0x2c]
10009531:	push   eax
10009532:	call   0x10004090
10009537:	mov    eax,DWORD PTR [ebp-0x34]
1000953a:	mov    edi,DWORD PTR [ebp-0x18]
1000953d:	push   0xffffffff
1000953f:	push   0x0
10009541:	lea    esi,[ebp-0x2c]
10009544:	call   0x10004c80
10009549:	mov    esi,DWORD PTR [ebp-0x18]
1000954c:	push   0x24
1000954e:	call   0x1004349e
10009553:	pop    ecx
10009554:	mov    DWORD PTR [ebp-0x38],eax
10009557:	test   eax,eax
10009559:	mov    BYTE PTR [ebp-0x4],0x5
1000955d:	je     0x10009570
1000955f:	mov    ecx,esi
10009561:	sub    ecx,edi
10009563:	push   ecx
10009564:	push   edi
10009565:	push   DWORD PTR [ebp-0x34]
10009568:	push   eax
10009569:	call   0x100078fd
1000956e:	jmp    0x10009572
10009570:	xor    eax,eax
10009572:	mov    BYTE PTR [ebp-0x4],0x2
10009576:	mov    edi,DWORD PTR [ebp-0x30]
10009579:	add    edi,0x8
1000957c:	mov    ebx,eax
1000957e:	call   0x10009c0a
10009583:	mov    ebx,0x1006d384
10009588:	push   ebx
10009589:	lea    eax,[ebp-0x2c]
1000958c:	push   eax
1000958d:	call   0x10004090
10009592:	mov    edi,DWORD PTR [ebp-0x30]
10009595:	push   DWORD PTR [ebp-0x18]
10009598:	add    edi,0x18
1000959b:	call   0x10007a0e
100095a0:	push   ebx
100095a1:	lea    eax,[ebp-0x2c]
100095a4:	push   eax
100095a5:	call   0x10004090
100095aa:	push   0x24
100095ac:	call   0x1004349e
100095b1:	pop    ecx
100095b2:	mov    DWORD PTR [ebp-0x38],eax
100095b5:	test   eax,eax
100095b7:	mov    BYTE PTR [ebp-0x4],0x6
100095bb:	je     0x100095c7
100095bd:	push   eax
100095be:	call   0x1000768c
100095c3:	mov    ebx,eax
100095c5:	jmp    0x100095c9
100095c7:	xor    ebx,ebx
100095c9:	mov    DWORD PTR [ebp-0x34],ebx
100095cc:	mov    eax,esi
100095ce:	mov    esi,ebx
100095d0:	mov    BYTE PTR [ebp-0x4],0x7
100095d4:	call   0x100078b1
100095d9:	cmp    DWORD PTR [ebp-0x14],0x10
100095dd:	mov    eax,DWORD PTR [ebp-0x28]
100095e0:	jae    0x100095e5
100095e2:	lea    eax,[ebp-0x28]
100095e5:	mov    edi,DWORD PTR [ebp-0x18]
100095e8:	push   eax
100095e9:	mov    eax,ebx
100095eb:	call   0x100076d4
100095f0:	mov    ecx,DWORD PTR [ebp-0x30]
100095f3:	and    DWORD PTR [ebp-0x34],0x0
100095f7:	mov    eax,ebx
100095f9:	call   0x100086c7
100095fe:	push   0x0
10009600:	push   0x1
10009602:	lea    ecx,[ebp-0x2c]
10009605:	call   0x100012f0
1000960a:	mov    eax,DWORD PTR [ebp-0x30]
1000960d:	call   0x10059b21
10009612:	ret    
10009613:	push   0x3c
10009615:	mov    eax,0x10063bfc
1000961a:	call   0x10059a9e
1000961f:	mov    eax,DWORD PTR [ebp+0x8]
10009622:	mov    DWORD PTR [ebp-0x44],eax
10009625:	mov    eax,DWORD PTR [ebp+0xc]
10009628:	mov    esi,ecx
1000962a:	xor    ebx,ebx
1000962c:	push   0x40
1000962e:	mov    DWORD PTR [ebp-0x3c],esi
10009631:	mov    DWORD PTR [ebp-0x38],eax
10009634:	mov    DWORD PTR [ebp-0x34],ebx
10009637:	call   0x1004349e
1000963c:	pop    ecx
1000963d:	mov    DWORD PTR [ebp-0x34],eax
10009640:	cmp    eax,ebx
10009642:	mov    DWORD PTR [ebp-0x4],ebx
10009645:	je     0x10009652
10009647:	push   eax
10009648:	call   0x10008f0b
1000964d:	mov    DWORD PTR [ebp-0x30],eax
10009650:	jmp    0x10009655
10009652:	mov    DWORD PTR [ebp-0x30],ebx
10009655:	mov    eax,DWORD PTR [ebp-0x30]
10009658:	mov    DWORD PTR [ebp-0x34],eax
1000965b:	mov    DWORD PTR [ebp-0x4],0x1
10009662:	push   ebx
10009663:	lea    ecx,[ebp-0x2c]
10009666:	mov    DWORD PTR [ebp-0x14],0xf
1000966d:	call   0x1000141c
10009672:	push   0xffffffff
10009674:	mov    eax,esi
10009676:	mov    BYTE PTR [ebp-0x4],0x2
1000967a:	mov    edi,DWORD PTR [ebp-0x18]
1000967d:	push   ebx
1000967e:	lea    esi,[ebp-0x2c]
10009681:	call   0x10004c80
10009686:	mov    esi,DWORD PTR [ebp-0x18]
10009689:	push   0x24
1000968b:	call   0x1004349e
10009690:	pop    ecx
10009691:	mov    DWORD PTR [ebp-0x40],eax
10009694:	cmp    eax,ebx
10009696:	mov    BYTE PTR [ebp-0x4],0x3
1000969a:	je     0x100096ab
1000969c:	sub    esi,edi
1000969e:	push   esi
1000969f:	push   edi
100096a0:	push   DWORD PTR [ebp-0x3c]
100096a3:	push   eax
100096a4:	call   0x100078fd
100096a9:	jmp    0x100096ad
100096ab:	xor    eax,eax
100096ad:	mov    edi,DWORD PTR [ebp-0x30]
100096b0:	mov    ebx,eax
100096b2:	mov    BYTE PTR [ebp-0x4],0x2
100096b6:	call   0x10009c0a
100096bb:	push   0x1006d47c
100096c0:	lea    eax,[ebp-0x2c]
100096c3:	push   eax
100096c4:	call   0x10004090
100096c9:	mov    eax,DWORD PTR [ebp-0x44]
100096cc:	mov    edi,DWORD PTR [ebp-0x18]
100096cf:	push   0xffffffff
100096d1:	push   0x0
100096d3:	lea    esi,[ebp-0x2c]
100096d6:	call   0x10004c80
100096db:	mov    esi,DWORD PTR [ebp-0x18]
100096de:	push   0x24
100096e0:	call   0x1004349e
100096e5:	pop    ecx
100096e6:	mov    DWORD PTR [ebp-0x40],eax
100096e9:	test   eax,eax
100096eb:	mov    BYTE PTR [ebp-0x4],0x4
100096ef:	je     0x10009700
100096f1:	sub    esi,edi
100096f3:	push   esi
100096f4:	push   edi
100096f5:	push   DWORD PTR [ebp-0x44]
100096f8:	push   eax
100096f9:	call   0x100078fd
100096fe:	jmp    0x10009702
10009700:	xor    eax,eax
10009702:	mov    edi,DWORD PTR [ebp-0x30]
10009705:	add    edi,0x4
10009708:	mov    ebx,eax
1000970a:	mov    BYTE PTR [ebp-0x4],0x2
1000970e:	call   0x10009c0a
10009713:	push   0x1006d47c
10009718:	lea    eax,[ebp-0x2c]
1000971b:	push   eax
1000971c:	call   0x10004090
10009721:	mov    eax,DWORD PTR [ebp-0x38]
10009724:	mov    edi,DWORD PTR [ebp-0x18]
10009727:	push   0xffffffff
10009729:	push   0x0
1000972b:	lea    esi,[ebp-0x2c]
1000972e:	call   0x10004c80
10009733:	mov    esi,DWORD PTR [ebp-0x18]
10009736:	push   0x24
10009738:	mov    DWORD PTR [ebp-0x3c],esi
1000973b:	call   0x1004349e
10009740:	pop    ecx
10009741:	mov    DWORD PTR [ebp-0x40],eax
10009744:	test   eax,eax
10009746:	mov    BYTE PTR [ebp-0x4],0x5
1000974a:	je     0x1000975b
1000974c:	sub    esi,edi
1000974e:	push   esi
1000974f:	push   edi
10009750:	push   DWORD PTR [ebp-0x38]
10009753:	push   eax
10009754:	call   0x100078fd
10009759:	jmp    0x1000975d
1000975b:	xor    eax,eax
1000975d:	mov    esi,DWORD PTR [ebp-0x30]
10009760:	lea    edi,[esi+0x8]
10009763:	mov    ebx,eax
10009765:	mov    BYTE PTR [ebp-0x4],0x2
10009769:	call   0x10009c0a
1000976e:	mov    ebx,0x1006d384
10009773:	push   ebx
10009774:	lea    eax,[ebp-0x2c]
10009777:	push   eax
10009778:	call   0x10004090
1000977d:	push   DWORD PTR [ebp-0x18]
10009780:	lea    edi,[esi+0x20]
10009783:	call   0x10007a0e
10009788:	push   ebx
10009789:	lea    eax,[ebp-0x2c]
1000978c:	push   eax
1000978d:	call   0x10004090
10009792:	push   0x24
10009794:	call   0x1004349e
10009799:	pop    ecx
1000979a:	mov    DWORD PTR [ebp-0x40],eax
1000979d:	xor    ebx,ebx
1000979f:	cmp    eax,ebx
100097a1:	mov    BYTE PTR [ebp-0x4],0x6
100097a5:	je     0x100097b1
100097a7:	push   eax
100097a8:	call   0x1000768c
100097ad:	mov    esi,eax
100097af:	jmp    0x100097b3
100097b1:	xor    esi,esi
100097b3:	mov    DWORD PTR [ebp-0x38],esi
100097b6:	mov    eax,DWORD PTR [ebp-0x3c]
100097b9:	mov    BYTE PTR [ebp-0x4],0x7
100097bd:	call   0x100078b1
100097c2:	cmp    DWORD PTR [ebp-0x14],0x10
100097c6:	mov    eax,DWORD PTR [ebp-0x28]
100097c9:	jae    0x100097ce
100097cb:	lea    eax,[ebp-0x28]
100097ce:	mov    edi,DWORD PTR [ebp-0x18]
100097d1:	push   eax
100097d2:	mov    eax,esi
100097d4:	call   0x100076d4
100097d9:	mov    ecx,DWORD PTR [ebp-0x30]
100097dc:	mov    eax,esi
100097de:	mov    DWORD PTR [ebp-0x38],ebx
100097e1:	call   0x10008f52
100097e6:	push   ebx
100097e7:	push   0x1
100097e9:	lea    ecx,[ebp-0x2c]
100097ec:	mov    DWORD PTR [ebp-0x34],ebx
100097ef:	call   0x100012f0
100097f4:	or     DWORD PTR [ebp-0x4],0xffffffff
100097f8:	lea    eax,[ebp-0x34]
100097fb:	call   0x10009e32
10009800:	mov    eax,DWORD PTR [ebp-0x30]
10009803:	call   0x10059b21
10009808:	ret    
10009809:	push   esi
1000980a:	mov    esi,DWORD PTR [eax]
1000980c:	test   esi,esi
1000980e:	je     0x10009815
10009810:	call   0x10009e48
10009815:	pop    esi
10009816:	ret    
10009817:	push   ebp
10009818:	mov    ebp,esp
1000981a:	sub    esp,0x18
1000981d:	push   esi
1000981e:	mov    esi,DWORD PTR [ebp+0x8]
10009821:	mov    eax,DWORD PTR [esi+0x4]
10009824:	push   edi
10009825:	mov    edi,DWORD PTR [eax+0x4]
10009828:	mov    DWORD PTR [ebp-0x4],eax
1000982b:	mov    al,0x1
1000982d:	mov    BYTE PTR [ebp-0x8],al
10009830:	jmp    0x1000984e
10009832:	mov    ecx,DWORD PTR [ebp+0xc]
10009835:	lea    eax,[edi+0xc]
10009838:	mov    DWORD PTR [ebp-0x4],edi
1000983b:	call   0x1000765d
10009840:	test   al,al
10009842:	mov    BYTE PTR [ebp-0x8],al
10009845:	je     0x1000984b
10009847:	mov    edi,DWORD PTR [edi]
10009849:	jmp    0x1000984e
1000984b:	mov    edi,DWORD PTR [edi+0x8]
1000984e:	cmp    BYTE PTR [edi+0x39],0x0
10009852:	je     0x10009832
10009854:	test   al,al
10009856:	mov    edi,DWORD PTR [ebp-0x4]
10009859:	mov    DWORD PTR [ebp-0xc],edi
1000985c:	mov    DWORD PTR [ebp-0x10],esi
1000985f:	je     0x100098ad
10009861:	mov    eax,DWORD PTR [esi+0x4]
10009864:	mov    eax,DWORD PTR [eax]
10009866:	mov    DWORD PTR [ebp-0x18],esi
10009869:	lea    edi,[ebp-0x18]
1000986c:	lea    esi,[ebp-0x10]
1000986f:	mov    DWORD PTR [ebp-0x14],eax
10009872:	call   0x10004ada
10009877:	test   al,al
10009879:	je     0x1000989f
1000987b:	push   DWORD PTR [ebp+0xc]
1000987e:	mov    esi,DWORD PTR [ebp+0x8]
10009881:	push   0x1
10009883:	mov    ecx,DWORD PTR [ebp-0x4]
10009886:	lea    eax,[ebp-0x18]
10009889:	push   eax
1000988a:	call   0x1000a002
1000988f:	mov    ecx,DWORD PTR [eax]
10009891:	mov    eax,DWORD PTR [eax+0x4]
10009894:	mov    DWORD PTR [ebx],ecx
10009896:	mov    DWORD PTR [ebx+0x4],eax
10009899:	mov    BYTE PTR [ebx+0x8],0x1
1000989d:	jmp    0x100098d0
1000989f:	lea    esi,[ebp-0x10]
100098a2:	call   0x1000d249
100098a7:	mov    edi,DWORD PTR [ebp-0xc]
100098aa:	mov    esi,DWORD PTR [ebp+0x8]
100098ad:	mov    eax,DWORD PTR [ebp+0xc]
100098b0:	lea    ecx,[edi+0xc]
100098b3:	call   0x1000765d
100098b8:	test   al,al
100098ba:	je     0x100098c4
100098bc:	push   DWORD PTR [ebp+0xc]
100098bf:	push   DWORD PTR [ebp-0x8]
100098c2:	jmp    0x10009883
100098c4:	mov    eax,DWORD PTR [ebp-0x10]
100098c7:	mov    DWORD PTR [ebx],eax
100098c9:	mov    DWORD PTR [ebx+0x4],edi
100098cc:	mov    BYTE PTR [ebx+0x8],0x0
100098d0:	pop    edi
100098d1:	mov    eax,ebx
100098d3:	pop    esi
100098d4:	leave  
100098d5:	ret    0x8
100098d8:	push   0x44
100098da:	mov    eax,0x1006071f
100098df:	call   0x10059a35
100098e4:	mov    edi,DWORD PTR [ebp+0x14]
100098e7:	cmp    BYTE PTR [edi+0x39],0x0
100098eb:	je     0x1000991f
100098ed:	push   0x1006ccec
100098f2:	lea    ecx,[ebp-0x28]
100098f5:	call   0x100011cd
100098fa:	and    DWORD PTR [ebp-0x4],0x0
100098fe:	lea    eax,[ebp-0x28]
10009901:	push   eax
10009902:	lea    ecx,[ebp-0x50]
10009905:	call   0x10001077
1000990a:	push   0x10074cc0
1000990f:	lea    eax,[ebp-0x50]
10009912:	push   eax
10009913:	mov    DWORD PTR [ebp-0x50],0x1006b978
1000991a:	call   0x100479b4
1000991f:	lea    esi,[ebp+0x10]
10009922:	call   0x10009c42
10009927:	mov    ecx,DWORD PTR [edi]
10009929:	cmp    BYTE PTR [ecx+0x39],0x0
1000992d:	je     0x10009934
1000992f:	mov    ebx,DWORD PTR [edi+0x8]
10009932:	jmp    0x1000994b
10009934:	mov    eax,DWORD PTR [edi+0x8]
10009937:	cmp    BYTE PTR [eax+0x39],0x0
1000993b:	je     0x10009941
1000993d:	mov    ebx,ecx
1000993f:	jmp    0x1000994b
10009941:	mov    eax,DWORD PTR [ebp+0x14]
10009944:	cmp    eax,edi
10009946:	mov    ebx,DWORD PTR [eax+0x8]
10009949:	jne    0x100099c1
1000994b:	cmp    BYTE PTR [ebx+0x39],0x0
1000994f:	mov    esi,DWORD PTR [edi+0x4]
10009952:	jne    0x10009957
10009954:	mov    DWORD PTR [ebx+0x4],esi
10009957:	mov    ecx,DWORD PTR [ebp+0x8]
1000995a:	mov    eax,DWORD PTR [ecx+0x4]
1000995d:	cmp    DWORD PTR [eax+0x4],edi
10009960:	jne    0x10009967
10009962:	mov    DWORD PTR [eax+0x4],ebx
10009965:	jmp    0x10009972
10009967:	cmp    DWORD PTR [esi],edi
10009969:	jne    0x1000996f
1000996b:	mov    DWORD PTR [esi],ebx
1000996d:	jmp    0x10009972
1000996f:	mov    DWORD PTR [esi+0x8],ebx
10009972:	mov    edx,DWORD PTR [ecx+0x4]
10009975:	cmp    DWORD PTR [edx],edi
10009977:	jne    0x10009995
10009979:	cmp    BYTE PTR [ebx+0x39],0x0
1000997d:	je     0x10009983
1000997f:	mov    ecx,esi
10009981:	jmp    0x10009993
10009983:	mov    eax,DWORD PTR [ebx]
10009985:	mov    ecx,ebx
10009987:	jmp    0x1000998d
10009989:	mov    ecx,eax
1000998b:	mov    eax,DWORD PTR [ecx]
1000998d:	cmp    BYTE PTR [eax+0x39],0x0
10009991:	je     0x10009989
10009993:	mov    DWORD PTR [edx],ecx
10009995:	mov    eax,DWORD PTR [ebp+0x8]
10009998:	mov    edx,DWORD PTR [eax+0x4]
1000999b:	cmp    DWORD PTR [edx+0x8],edi
1000999e:	jne    0x10009a1b
100099a0:	cmp    BYTE PTR [ebx+0x39],0x0
100099a4:	je     0x100099aa
100099a6:	mov    ecx,esi
100099a8:	jmp    0x100099bc
100099aa:	mov    eax,DWORD PTR [ebx+0x8]
100099ad:	mov    ecx,ebx
100099af:	jmp    0x100099b6
100099b1:	mov    ecx,eax
100099b3:	mov    eax,DWORD PTR [ecx+0x8]
100099b6:	cmp    BYTE PTR [eax+0x39],0x0
100099ba:	je     0x100099b1
100099bc:	mov    DWORD PTR [edx+0x8],ecx
100099bf:	jmp    0x10009a1b
100099c1:	mov    DWORD PTR [ecx+0x4],eax
100099c4:	mov    ecx,DWORD PTR [edi]
100099c6:	mov    DWORD PTR [eax],ecx
100099c8:	cmp    eax,DWORD PTR [edi+0x8]
100099cb:	jne    0x100099d1
100099cd:	mov    esi,eax
100099cf:	jmp    0x100099eb
100099d1:	cmp    BYTE PTR [ebx+0x39],0x0
100099d5:	mov    esi,DWORD PTR [eax+0x4]
100099d8:	jne    0x100099dd
100099da:	mov    DWORD PTR [ebx+0x4],esi
100099dd:	mov    DWORD PTR [esi],ebx
100099df:	mov    ecx,DWORD PTR [edi+0x8]
100099e2:	mov    DWORD PTR [eax+0x8],ecx
100099e5:	mov    ecx,DWORD PTR [edi+0x8]
100099e8:	mov    DWORD PTR [ecx+0x4],eax
100099eb:	mov    ecx,DWORD PTR [ebp+0x8]
100099ee:	mov    ecx,DWORD PTR [ecx+0x4]
100099f1:	cmp    DWORD PTR [ecx+0x4],edi
100099f4:	jne    0x100099fb
100099f6:	mov    DWORD PTR [ecx+0x4],eax
100099f9:	jmp    0x10009a09
100099fb:	mov    ecx,DWORD PTR [edi+0x4]
100099fe:	cmp    DWORD PTR [ecx],edi
10009a00:	jne    0x10009a06
10009a02:	mov    DWORD PTR [ecx],eax
10009a04:	jmp    0x10009a09
10009a06:	mov    DWORD PTR [ecx+0x8],eax
10009a09:	mov    ecx,DWORD PTR [edi+0x4]
10009a0c:	mov    DWORD PTR [eax+0x4],ecx
10009a0f:	mov    dl,BYTE PTR [edi+0x38]
10009a12:	mov    cl,BYTE PTR [eax+0x38]
10009a15:	mov    BYTE PTR [eax+0x38],dl
10009a18:	mov    BYTE PTR [edi+0x38],cl
10009a1b:	cmp    BYTE PTR [edi+0x38],0x1
10009a1f:	jne    0x10009b37
10009a25:	jmp    0x10009aeb
10009a2a:	cmp    BYTE PTR [ebx+0x38],0x1
10009a2e:	jne    0x10009b33
10009a34:	mov    ecx,DWORD PTR [esi]
10009a36:	cmp    ebx,ecx
10009a38:	jne    0x10009ab1
10009a3a:	mov    ecx,DWORD PTR [esi+0x8]
10009a3d:	cmp    BYTE PTR [ecx+0x38],0x0
10009a41:	jne    0x10009a58
10009a43:	push   DWORD PTR [ebp+0x8]
10009a46:	mov    BYTE PTR [ecx+0x38],0x1
10009a4a:	mov    ecx,esi
10009a4c:	mov    BYTE PTR [esi+0x38],0x0
10009a50:	call   0x1000a14d
10009a55:	mov    ecx,DWORD PTR [esi+0x8]
10009a58:	cmp    BYTE PTR [ecx+0x39],0x0
10009a5c:	jne    0x10009ae6
10009a62:	mov    eax,DWORD PTR [ecx]
10009a64:	cmp    BYTE PTR [eax+0x38],0x1
10009a68:	jne    0x10009a73
10009a6a:	mov    eax,DWORD PTR [ecx+0x8]
10009a6d:	cmp    BYTE PTR [eax+0x38],0x1
10009a71:	je     0x10009ae2
10009a73:	mov    eax,DWORD PTR [ecx+0x8]
10009a76:	cmp    BYTE PTR [eax+0x38],0x1
10009a7a:	jne    0x10009a91
10009a7c:	mov    eax,DWORD PTR [ecx]
10009a7e:	push   DWORD PTR [ebp+0x8]
10009a81:	mov    BYTE PTR [eax+0x38],0x1
10009a85:	mov    BYTE PTR [ecx+0x38],0x0
10009a89:	call   0x1000d1d2
10009a8e:	mov    ecx,DWORD PTR [esi+0x8]
10009a91:	mov    al,BYTE PTR [esi+0x38]
10009a94:	push   DWORD PTR [ebp+0x8]
10009a97:	mov    BYTE PTR [ecx+0x38],al
10009a9a:	mov    BYTE PTR [esi+0x38],0x1
10009a9e:	mov    eax,DWORD PTR [ecx+0x8]
10009aa1:	mov    ecx,esi
10009aa3:	mov    BYTE PTR [eax+0x38],0x1
10009aa7:	call   0x1000a14d
10009aac:	jmp    0x10009b33
10009ab1:	cmp    BYTE PTR [ecx+0x38],0x0
10009ab5:	jne    0x10009acb
10009ab7:	push   DWORD PTR [ebp+0x8]
10009aba:	mov    BYTE PTR [ecx+0x38],0x1
10009abe:	mov    ecx,esi
10009ac0:	mov    BYTE PTR [esi+0x38],0x0
10009ac4:	call   0x1000d1d2
10009ac9:	mov    ecx,DWORD PTR [esi]
10009acb:	cmp    BYTE PTR [ecx+0x39],0x0
10009acf:	jne    0x10009ae6
10009ad1:	mov    eax,DWORD PTR [ecx+0x8]
10009ad4:	cmp    BYTE PTR [eax+0x38],0x1
10009ad8:	jne    0x10009afc
10009ada:	mov    eax,DWORD PTR [ecx]
10009adc:	cmp    BYTE PTR [eax+0x38],0x1
10009ae0:	jne    0x10009afc
10009ae2:	mov    BYTE PTR [ecx+0x38],0x0
10009ae6:	mov    ebx,esi
10009ae8:	mov    esi,DWORD PTR [esi+0x4]
10009aeb:	mov    eax,DWORD PTR [ebp+0x8]
10009aee:	mov    eax,DWORD PTR [eax+0x4]
10009af1:	cmp    ebx,DWORD PTR [eax+0x4]
10009af4:	jne    0x10009a2a
10009afa:	jmp    0x10009b33
10009afc:	mov    eax,DWORD PTR [ecx]
10009afe:	cmp    BYTE PTR [eax+0x38],0x1
10009b02:	jne    0x10009b19
10009b04:	mov    eax,DWORD PTR [ecx+0x8]
10009b07:	push   DWORD PTR [ebp+0x8]
10009b0a:	mov    BYTE PTR [eax+0x38],0x1
10009b0e:	mov    BYTE PTR [ecx+0x38],0x0
10009b12:	call   0x1000a14d
10009b17:	mov    ecx,DWORD PTR [esi]
10009b19:	mov    al,BYTE PTR [esi+0x38]
10009b1c:	push   DWORD PTR [ebp+0x8]
10009b1f:	mov    BYTE PTR [ecx+0x38],al
10009b22:	mov    BYTE PTR [esi+0x38],0x1
10009b26:	mov    eax,DWORD PTR [ecx]
10009b28:	mov    ecx,esi
10009b2a:	mov    BYTE PTR [eax+0x38],0x1
10009b2e:	call   0x1000d1d2
10009b33:	mov    BYTE PTR [ebx+0x38],0x1
10009b37:	lea    ebx,[edi+0xc]
10009b3a:	lea    esi,[ebx+0x1c]
10009b3d:	call   0x10004743
10009b42:	push   0x0
10009b44:	push   0x1
10009b46:	mov    ecx,ebx
10009b48:	call   0x100012f0
10009b4d:	push   edi
10009b4e:	call   0x10042e92
10009b53:	pop    ecx
10009b54:	mov    ecx,DWORD PTR [ebp+0x8]
10009b57:	mov    eax,DWORD PTR [ecx+0x8]
10009b5a:	test   eax,eax
10009b5c:	jbe    0x10009b62
10009b5e:	dec    eax
10009b5f:	mov    DWORD PTR [ecx+0x8],eax
10009b62:	mov    ecx,DWORD PTR [ebp+0x10]
10009b65:	mov    eax,DWORD PTR [ebp+0xc]
10009b68:	mov    DWORD PTR [eax],ecx
10009b6a:	mov    ecx,DWORD PTR [ebp+0x14]
10009b6d:	mov    DWORD PTR [eax+0x4],ecx
10009b70:	call   0x10059b0d
10009b75:	ret    0x10
10009b78:	push   ebp
10009b79:	mov    ebp,esp
10009b7b:	sub    esp,0x10
10009b7e:	push   esi
10009b7f:	push   edi
10009b80:	push   DWORD PTR [ebp+0xc]
10009b83:	mov    eax,ebx
10009b85:	call   0x1000a4ad
10009b8a:	test   ebx,ebx
10009b8c:	mov    DWORD PTR [ebp-0x4],eax
10009b8f:	jne    0x10009b96
10009b91:	call   0x100433b0
10009b96:	mov    eax,DWORD PTR [ebx+0x4]
10009b99:	lea    edi,[ebp-0x10]
10009b9c:	lea    esi,[ebp-0x8]
10009b9f:	mov    DWORD PTR [ebp-0x8],ebx
10009ba2:	mov    DWORD PTR [ebp-0xc],eax
10009ba5:	mov    DWORD PTR [ebp-0x10],ebx
10009ba8:	call   0x10004ada
10009bad:	test   al,al
10009baf:	jne    0x10009bc7
10009bb1:	mov    eax,DWORD PTR [ebp-0x4]
10009bb4:	mov    ecx,DWORD PTR [ebp+0xc]
10009bb7:	add    eax,0xc
10009bba:	call   0x1000765d
10009bbf:	test   al,al
10009bc1:	jne    0x10009bc7
10009bc3:	mov    ecx,esi
10009bc5:	jmp    0x10009bd3
10009bc7:	mov    eax,DWORD PTR [ebx+0x4]
10009bca:	mov    DWORD PTR [ebp-0xc],eax
10009bcd:	mov    DWORD PTR [ebp-0x10],ebx
10009bd0:	lea    ecx,[ebp-0x10]
10009bd3:	mov    edx,DWORD PTR [ecx]
10009bd5:	mov    eax,DWORD PTR [ebp+0x8]
10009bd8:	mov    ecx,DWORD PTR [ecx+0x4]
10009bdb:	pop    edi
10009bdc:	mov    DWORD PTR [eax],edx
10009bde:	mov    DWORD PTR [eax+0x4],ecx
10009be1:	pop    esi
10009be2:	leave  
10009be3:	ret    0x8
10009be6:	push   esi
10009be7:	mov    esi,DWORD PTR [eax]
10009be9:	test   esi,esi
10009beb:	je     0x10009c08
10009bed:	push   0x0
10009bef:	push   0x1
10009bf1:	lea    ecx,[esi+0x4]
10009bf4:	call   0x100012f0
10009bf9:	push   DWORD PTR [esi]
10009bfb:	call   0x10042e92
10009c00:	push   esi
10009c01:	call   0x10042e92
10009c06:	pop    ecx
10009c07:	pop    ecx
10009c08:	pop    esi
10009c09:	ret    
10009c0a:	push   esi
10009c0b:	mov    esi,DWORD PTR [edi]
10009c0d:	cmp    ebx,esi
10009c0f:	je     0x10009c30
10009c11:	test   esi,esi
10009c13:	je     0x10009c30
10009c15:	push   0x0
10009c17:	push   0x1
10009c19:	lea    ecx,[esi+0x4]
10009c1c:	call   0x100012f0
10009c21:	push   DWORD PTR [esi]
10009c23:	call   0x10042e92
10009c28:	push   esi
10009c29:	call   0x10042e92
10009c2e:	pop    ecx
10009c2f:	pop    ecx
10009c30:	mov    DWORD PTR [edi],ebx
10009c32:	pop    esi
10009c33:	ret    
10009c34:	push   edi
10009c35:	mov    edi,DWORD PTR [eax]
10009c37:	test   edi,edi
10009c39:	je     0x10009c40
10009c3b:	call   0x10009e75
10009c40:	pop    edi
10009c41:	ret    
10009c42:	push   ebx
10009c43:	xor    ebx,ebx
10009c45:	cmp    DWORD PTR [esi],ebx
10009c47:	jne    0x10009c4e
10009c49:	call   0x100433b0
10009c4e:	mov    eax,DWORD PTR [esi+0x4]
10009c51:	cmp    BYTE PTR [eax+0x39],bl
10009c54:	je     0x10009c5d
10009c56:	call   0x100433b0
10009c5b:	jmp    0x10009c8b
10009c5d:	mov    ecx,DWORD PTR [eax+0x8]
10009c60:	cmp    BYTE PTR [ecx+0x39],bl
10009c63:	jne    0x10009c80
10009c65:	jmp    0x10009c69
10009c67:	mov    ecx,eax
10009c69:	mov    eax,DWORD PTR [ecx]
10009c6b:	cmp    BYTE PTR [eax+0x39],bl
10009c6e:	je     0x10009c67
10009c70:	mov    DWORD PTR [esi+0x4],ecx
10009c73:	jmp    0x10009c8b
10009c75:	mov    ecx,DWORD PTR [esi+0x4]
10009c78:	cmp    ecx,DWORD PTR [eax+0x8]
10009c7b:	jne    0x10009c88
10009c7d:	mov    DWORD PTR [esi+0x4],eax
10009c80:	mov    eax,DWORD PTR [eax+0x4]
10009c83:	cmp    BYTE PTR [eax+0x39],bl
10009c86:	je     0x10009c75
10009c88:	mov    DWORD PTR [esi+0x4],eax
10009c8b:	mov    eax,esi
10009c8d:	pop    ebx
10009c8e:	ret    
10009c8f:	push   0x10
10009c91:	mov    eax,0x100611a6
10009c96:	call   0x10059a68
10009c9b:	mov    ebx,ecx
10009c9d:	mov    esi,DWORD PTR [ebp+0x8]
10009ca0:	mov    eax,ebx
10009ca2:	call   0x100046b1
10009ca7:	xor    ecx,ecx
10009ca9:	cmp    eax,ecx
10009cab:	mov    DWORD PTR [esi+0x4],ecx
10009cae:	mov    DWORD PTR [esi+0x8],ecx
10009cb1:	mov    DWORD PTR [esi+0xc],ecx
10009cb4:	je     0x10009d06
10009cb6:	mov    edi,esi
10009cb8:	call   0x1000a234
10009cbd:	test   al,al
10009cbf:	je     0x10009d06
10009cc1:	and    DWORD PTR [ebp-0x4],0x0
10009cc5:	mov    eax,DWORD PTR [ebx+0x8]
10009cc8:	cmp    DWORD PTR [ebx+0x4],eax
10009ccb:	mov    DWORD PTR [ebp-0x18],eax
10009cce:	jbe    0x10009cd5
10009cd0:	call   0x100433b0
10009cd5:	mov    eax,DWORD PTR [ebx+0x4]
10009cd8:	cmp    eax,DWORD PTR [ebx+0x8]
10009cdb:	mov    DWORD PTR [ebp-0x1c],eax
10009cde:	jbe    0x10009ce5
10009ce0:	call   0x100433b0
10009ce5:	mov    ecx,DWORD PTR [esi+0x4]
10009ce8:	xor    eax,eax
10009cea:	lea    edi,[ebp-0x14]
10009ced:	stos   BYTE PTR es:[edi],al
10009cee:	push   DWORD PTR [ebp-0x14]
10009cf1:	push   DWORD PTR [ebp+0x8]
10009cf4:	push   ecx
10009cf5:	push   DWORD PTR [ebp-0x18]
10009cf8:	mov    ecx,DWORD PTR [ebp-0x1c]
10009cfb:	call   0x10019373
10009d00:	add    esp,0x10
10009d03:	mov    DWORD PTR [esi+0x8],eax
10009d06:	mov    eax,esi
10009d08:	call   0x10059b0d
10009d0d:	ret    0x4
10009d10:	mov    esi,DWORD PTR [ebp+0x8]
10009d13:	call   0x10004743
10009d18:	push   0x0
10009d1a:	push   0x0
10009d1c:	call   0x100479b4
10009d21:	int3   
10009d22:	mov    eax,esi
10009d24:	call   0x100046b1
10009d29:	cmp    DWORD PTR [esp+0x4],eax
10009d2d:	jb     0x10009d34
10009d2f:	call   0x100433b0
10009d34:	mov    eax,DWORD PTR [esp+0x4]
10009d38:	shl    eax,0x5
10009d3b:	add    eax,DWORD PTR [esi+0x4]
10009d3e:	ret    0x4
10009d41:	push   ebp
10009d42:	mov    ebp,esp
10009d44:	sub    esp,0x10
10009d47:	push   ebx
10009d48:	push   esi
10009d49:	mov    esi,eax
10009d4b:	mov    ebx,DWORD PTR [esi+0x4]
10009d4e:	test   ebx,ebx
10009d50:	push   edi
10009d51:	jne    0x10009d57
10009d53:	xor    edi,edi
10009d55:	jmp    0x10009d5f
10009d57:	mov    edi,DWORD PTR [esi+0xc]
10009d5a:	sub    edi,ebx
10009d5c:	sar    edi,0x5
10009d5f:	call   0x100046b1
10009d64:	cmp    eax,edi
10009d66:	jae    0x10009d7a
10009d68:	push   DWORD PTR [ebp+0x8]
10009d6b:	push   0x1
10009d6d:	push   DWORD PTR [esi+0x8]
10009d70:	call   0x10004768
10009d75:	mov    DWORD PTR [esi+0x8],eax
10009d78:	jmp    0x10009d94
10009d7a:	mov    edi,DWORD PTR [esi+0x8]
10009d7d:	cmp    ebx,edi
10009d7f:	jbe    0x10009d86
10009d81:	call   0x100433b0
10009d86:	push   edi
10009d87:	push   esi
10009d88:	push   DWORD PTR [ebp+0x8]
10009d8b:	lea    eax,[ebp-0xc]
10009d8e:	push   eax
10009d8f:	call   0x1000a1c2
10009d94:	pop    edi
10009d95:	pop    esi
10009d96:	pop    ebx
10009d97:	leave  
10009d98:	ret    0x4
10009d9b:	push   ebp
10009d9c:	mov    ebp,esp
10009d9e:	push   ecx
10009d9f:	mov    eax,DWORD PTR [esi+0x8]
10009da2:	push   edi
10009da3:	mov    edi,DWORD PTR [ebp+0xc]
10009da6:	add    edi,0x20
10009da9:	cmp    edi,eax
10009dab:	mov    DWORD PTR [ebp-0x4],eax
10009dae:	je     0x10009dcb
10009db0:	push   0xffffffff
10009db2:	push   0x0
10009db4:	push   edi
10009db5:	lea    ecx,[edi-0x20]
10009db8:	call   0x10001241
10009dbd:	mov    eax,DWORD PTR [edi+0x1c]
10009dc0:	mov    DWORD PTR [edi-0x4],eax
10009dc3:	add    edi,0x20
10009dc6:	cmp    edi,DWORD PTR [ebp-0x4]
10009dc9:	jne    0x10009db0
10009dcb:	mov    eax,DWORD PTR [esi+0x8]
10009dce:	push   eax
10009dcf:	add    eax,0xffffffe0
10009dd2:	call   0x10004e16
10009dd7:	mov    eax,DWORD PTR [ebp+0x8]
10009dda:	add    DWORD PTR [esi+0x8],0xffffffe0
10009dde:	mov    DWORD PTR [ebx],eax
10009de0:	mov    eax,DWORD PTR [ebp+0xc]
10009de3:	mov    DWORD PTR [ebx+0x4],eax
10009de6:	mov    eax,ebx
10009de8:	pop    edi
10009de9:	leave  
10009dea:	ret    0x8
10009ded:	push   ebx
10009dee:	mov    ebx,DWORD PTR [eax+0x4]
10009df1:	push   esi
10009df2:	mov    esi,DWORD PTR [eax]
10009df4:	test   esi,esi
10009df6:	push   edi
10009df7:	mov    edi,ecx
10009df9:	jne    0x10009e00
10009dfb:	call   0x100433b0
10009e00:	shl    edi,0x5
10009e03:	add    edi,ebx
10009e05:	cmp    edi,DWORD PTR [esi+0x8]
10009e08:	ja     0x10009e0f
10009e0a:	cmp    edi,DWORD PTR [esi+0x4]
10009e0d:	jae    0x10009e14
10009e0f:	call   0x100433b0
10009e14:	mov    eax,DWORD PTR [esp+0x10]
10009e18:	mov    DWORD PTR [eax+0x4],edi
10009e1b:	pop    edi
10009e1c:	mov    DWORD PTR [eax],esi
10009e1e:	pop    esi
10009e1f:	pop    ebx
10009e20:	ret    0x4
10009e23:	push   ecx
10009e24:	mov    eax,DWORD PTR [eax]
10009e26:	test   eax,eax
10009e28:	je     0x10009e30
10009e2a:	push   eax
10009e2b:	call   0x10009eaf
10009e30:	pop    ecx
10009e31:	ret    
10009e32:	push   esi
10009e33:	mov    esi,DWORD PTR [eax]
10009e35:	test   esi,esi
10009e37:	je     0x10009e46
10009e39:	push   esi
10009e3a:	call   0x10009f12
10009e3f:	push   esi
10009e40:	call   0x10042e92
10009e45:	pop    ecx
10009e46:	pop    esi
10009e47:	ret    
10009e48:	push   0x0
10009e4a:	push   0x1
10009e4c:	lea    ecx,[esi+0x38]
10009e4f:	call   0x100012f0
10009e54:	push   0x0
10009e56:	push   0x1
10009e58:	lea    ecx,[esi+0x1c]
10009e5b:	call   0x100012f0
10009e60:	push   0x0
10009e62:	push   0x1
10009e64:	mov    ecx,esi
10009e66:	call   0x100012f0
10009e6b:	push   esi
10009e6c:	call   0x10042e92
10009e71:	pop    ecx
10009e72:	mov    eax,esi
10009e74:	ret    
10009e75:	push   DWORD PTR [edi+0x14]
10009e78:	call   0x10042e92
10009e7d:	mov    eax,DWORD PTR [edi+0x8]
10009e80:	test   eax,eax
10009e82:	pop    ecx
10009e83:	je     0x10009e8c
10009e85:	push   eax
10009e86:	call   0x10042e92
10009e8b:	pop    ecx
10009e8c:	and    DWORD PTR [edi+0x8],0x0
10009e90:	and    DWORD PTR [edi+0xc],0x0
10009e94:	and    DWORD PTR [edi+0x10],0x0
10009e98:	push   esi
10009e99:	mov    esi,DWORD PTR [edi]
10009e9b:	test   esi,esi
10009e9d:	je     0x10009ea4
10009e9f:	call   0x10009e48
10009ea4:	push   edi
10009ea5:	call   0x10042e92
10009eaa:	pop    ecx
10009eab:	mov    eax,edi
10009ead:	pop    esi
10009eae:	ret    
10009eaf:	push   0x0
10009eb1:	mov    eax,0x1006366a
10009eb6:	call   0x10059a35
10009ebb:	mov    esi,DWORD PTR [ebp+0x8]
10009ebe:	mov    DWORD PTR [ebp-0x4],0x4
10009ec5:	mov    eax,DWORD PTR [esi+0x38]
10009ec8:	test   eax,eax
10009eca:	je     0x10009ed2
10009ecc:	mov    ecx,DWORD PTR [eax]
10009ece:	push   eax
10009ecf:	call   DWORD PTR [ecx+0x8]
10009ed2:	mov    edi,DWORD PTR [esi+0x30]
10009ed5:	test   edi,edi
10009ed7:	je     0x10009ede
10009ed9:	call   0x10009e75
10009ede:	lea    ebx,[esi+0x18]
10009ee1:	mov    BYTE PTR [ebp-0x4],0x2
10009ee5:	call   0x10007a3d
10009eea:	lea    eax,[esi+0x8]
10009eed:	call   0x10009be6
10009ef2:	lea    eax,[esi+0x4]
10009ef5:	call   0x10009be6
10009efa:	mov    eax,esi
10009efc:	call   0x10009be6
10009f01:	push   esi
10009f02:	call   0x10042e92
10009f07:	pop    ecx
10009f08:	mov    eax,esi
10009f0a:	call   0x10059b0d
10009f0f:	ret    0x4
10009f12:	push   0x0
10009f14:	mov    eax,0x100636ae
10009f19:	call   0x10059a35
10009f1e:	mov    esi,DWORD PTR [ebp+0x8]
10009f21:	mov    DWORD PTR [ebp-0x4],0x3
10009f28:	mov    edi,DWORD PTR [esi+0x34]
10009f2b:	test   edi,edi
10009f2d:	je     0x10009f34
10009f2f:	call   0x10009e75
10009f34:	lea    ebx,[esi+0x20]
10009f37:	call   0x10007a3d
10009f3c:	lea    eax,[esi+0xc]
10009f3f:	call   0x10009be6
10009f44:	lea    eax,[esi+0x8]
10009f47:	call   0x10009be6
10009f4c:	lea    eax,[esi+0x4]
10009f4f:	call   0x10009be6
10009f54:	mov    eax,esi
10009f56:	call   0x10009be6
10009f5b:	call   0x10059b0d
10009f60:	ret    0x4
10009f63:	push   ebp
10009f64:	mov    ebp,esp
10009f66:	push   ecx
10009f67:	push   ebx
10009f68:	push   esi
10009f69:	mov    esi,eax
10009f6b:	push   edi
10009f6c:	mov    edi,DWORD PTR [esi+0x4]
10009f6f:	xor    ebx,ebx
10009f71:	cmp    edi,ebx
10009f73:	je     0x10009fa1
10009f75:	mov    eax,DWORD PTR [esi+0x8]
10009f78:	mov    ecx,eax
10009f7a:	sub    ecx,edi
10009f7c:	sar    ecx,0x2
10009f7f:	je     0x10009fa1
10009f81:	cmp    edi,eax
10009f83:	jbe    0x10009f8a
10009f85:	call   0x100433b0
10009f8a:	cmp    DWORD PTR [ebp+0x10],ebx
10009f8d:	je     0x10009f94
10009f8f:	cmp    DWORD PTR [ebp+0x10],esi
10009f92:	je     0x10009f99
10009f94:	call   0x100433b0
10009f99:	mov    ebx,DWORD PTR [ebp+0x14]
10009f9c:	sub    ebx,edi
10009f9e:	sar    ebx,0x2
10009fa1:	push   DWORD PTR [ebp+0x14]
10009fa4:	mov    eax,DWORD PTR [ebp+0xc]
10009fa7:	push   DWORD PTR [ebp+0x10]
10009faa:	mov    ecx,esi
10009fac:	call   0x1000a25d
10009fb1:	mov    edi,DWORD PTR [esi+0x4]
10009fb4:	cmp    edi,DWORD PTR [esi+0x8]
10009fb7:	jbe    0x10009fbe
10009fb9:	call   0x100433b0
10009fbe:	mov    DWORD PTR [ebp+0x14],edi
10009fc1:	lea    edi,[edi+ebx*4]
10009fc4:	cmp    edi,DWORD PTR [esi+0x8]
10009fc7:	ja     0x10009fce
10009fc9:	cmp    edi,DWORD PTR [esi+0x4]
10009fcc:	jae    0x10009fd3
10009fce:	call   0x100433b0
10009fd3:	mov    eax,DWORD PTR [ebp+0x8]
10009fd6:	mov    DWORD PTR [eax+0x4],edi
10009fd9:	pop    edi
10009fda:	mov    DWORD PTR [eax],esi
10009fdc:	pop    esi
10009fdd:	pop    ebx
10009fde:	leave  
10009fdf:	ret    0x10
10009fe2:	test   edx,edx
10009fe4:	mov    ecx,edx
10009fe6:	mov    eax,esi
10009fe8:	jbe    0x10009ffc
10009fea:	push   edi
10009feb:	mov    edi,DWORD PTR [esp+0x8]
10009fef:	mov    edi,DWORD PTR [edi]
10009ff1:	mov    DWORD PTR [eax],edi
10009ff3:	dec    ecx
10009ff4:	add    eax,0x4
10009ff7:	test   ecx,ecx
10009ff9:	ja     0x10009feb
10009ffb:	pop    edi
10009ffc:	lea    eax,[esi+edx*4]
10009fff:	ret    0x4
1000a002:	push   0x48
1000a004:	mov    eax,0x100605b3
1000a009:	call   0x10059a35
1000a00e:	mov    edi,ecx
1000a010:	cmp    DWORD PTR [esi+0x8],0x5d1745c
1000a017:	jb     0x1000a04b
1000a019:	push   0x1006d030
1000a01e:	lea    ecx,[ebp-0x2c]
1000a021:	call   0x100011cd
1000a026:	and    DWORD PTR [ebp-0x4],0x0
1000a02a:	lea    eax,[ebp-0x2c]
1000a02d:	push   eax
1000a02e:	lea    ecx,[ebp-0x54]
1000a031:	call   0x10001077
1000a036:	push   0x10074da0
1000a03b:	lea    eax,[ebp-0x54]
1000a03e:	push   eax
1000a03f:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1000a046:	call   0x100479b4
1000a04b:	push   DWORD PTR [ebp+0x10]
1000a04e:	mov    eax,DWORD PTR [esi+0x4]
1000a051:	push   eax
1000a052:	push   edi
1000a053:	push   eax
1000a054:	call   0x1000a4df
1000a059:	inc    DWORD PTR [esi+0x8]
1000a05c:	mov    ebx,eax
1000a05e:	mov    eax,DWORD PTR [esi+0x4]
1000a061:	cmp    edi,eax
1000a063:	jne    0x1000a072
1000a065:	mov    DWORD PTR [eax+0x4],ebx
1000a068:	mov    eax,DWORD PTR [esi+0x4]
1000a06b:	mov    DWORD PTR [eax],ebx
1000a06d:	mov    eax,DWORD PTR [esi+0x4]
1000a070:	jmp    0x1000a090
1000a072:	cmp    BYTE PTR [ebp+0xc],0x0
1000a076:	je     0x1000a085
1000a078:	mov    DWORD PTR [edi],ebx
1000a07a:	mov    eax,DWORD PTR [esi+0x4]
1000a07d:	cmp    edi,DWORD PTR [eax]
1000a07f:	jne    0x1000a093
1000a081:	mov    DWORD PTR [eax],ebx
1000a083:	jmp    0x1000a093
1000a085:	mov    DWORD PTR [edi+0x8],ebx
1000a088:	mov    eax,DWORD PTR [esi+0x4]
1000a08b:	cmp    edi,DWORD PTR [eax+0x8]
1000a08e:	jne    0x1000a093
1000a090:	mov    DWORD PTR [eax+0x8],ebx
1000a093:	mov    edi,ebx
1000a095:	lea    eax,[ebx+0x4]
1000a098:	jmp    0x1000a127
1000a09d:	mov    ecx,DWORD PTR [eax]
1000a09f:	mov    edx,DWORD PTR [ecx+0x4]
1000a0a2:	cmp    ecx,DWORD PTR [edx]
1000a0a4:	jne    0x1000a0db
1000a0a6:	mov    edx,DWORD PTR [edx+0x8]
1000a0a9:	cmp    BYTE PTR [edx+0x38],0x0
1000a0ad:	je     0x1000a0e3
1000a0af:	cmp    edi,DWORD PTR [ecx+0x8]
1000a0b2:	jne    0x1000a0bc
1000a0b4:	push   esi
1000a0b5:	mov    edi,ecx
1000a0b7:	call   0x1000a14d
1000a0bc:	mov    eax,DWORD PTR [edi+0x4]
1000a0bf:	mov    BYTE PTR [eax+0x38],0x1
1000a0c3:	mov    eax,DWORD PTR [edi+0x4]
1000a0c6:	mov    eax,DWORD PTR [eax+0x4]
1000a0c9:	mov    BYTE PTR [eax+0x38],0x0
1000a0cd:	mov    eax,DWORD PTR [edi+0x4]
1000a0d0:	mov    ecx,DWORD PTR [eax+0x4]
1000a0d3:	push   esi
1000a0d4:	call   0x1000d1d2
1000a0d9:	jmp    0x1000a124
1000a0db:	mov    edx,DWORD PTR [edx]
1000a0dd:	cmp    BYTE PTR [edx+0x38],0x0
1000a0e1:	jne    0x1000a0fb
1000a0e3:	mov    BYTE PTR [ecx+0x38],0x1
1000a0e7:	mov    BYTE PTR [edx+0x38],0x1
1000a0eb:	mov    ecx,DWORD PTR [eax]
1000a0ed:	mov    ecx,DWORD PTR [ecx+0x4]
1000a0f0:	mov    BYTE PTR [ecx+0x38],0x0
1000a0f4:	mov    eax,DWORD PTR [eax]
1000a0f6:	mov    edi,DWORD PTR [eax+0x4]
1000a0f9:	jmp    0x1000a124
1000a0fb:	cmp    edi,DWORD PTR [ecx]
1000a0fd:	jne    0x1000a107
1000a0ff:	push   esi
1000a100:	mov    edi,ecx
1000a102:	call   0x1000d1d2
1000a107:	mov    eax,DWORD PTR [edi+0x4]
1000a10a:	mov    BYTE PTR [eax+0x38],0x1
1000a10e:	mov    eax,DWORD PTR [edi+0x4]
1000a111:	mov    eax,DWORD PTR [eax+0x4]
1000a114:	mov    BYTE PTR [eax+0x38],0x0
1000a118:	mov    eax,DWORD PTR [edi+0x4]
1000a11b:	mov    ecx,DWORD PTR [eax+0x4]
1000a11e:	push   esi
1000a11f:	call   0x1000a14d
1000a124:	lea    eax,[edi+0x4]
1000a127:	mov    ecx,DWORD PTR [eax]
1000a129:	cmp    BYTE PTR [ecx+0x38],0x0
1000a12d:	je     0x1000a09d
1000a133:	mov    eax,DWORD PTR [esi+0x4]
1000a136:	mov    eax,DWORD PTR [eax+0x4]
1000a139:	mov    BYTE PTR [eax+0x38],0x1
1000a13d:	mov    eax,DWORD PTR [ebp+0x8]
1000a140:	mov    DWORD PTR [eax+0x4],ebx
1000a143:	mov    DWORD PTR [eax],esi
1000a145:	call   0x10059b0d
1000a14a:	ret    0xc
1000a14d:	mov    eax,DWORD PTR [ecx+0x8]
1000a150:	mov    edx,DWORD PTR [eax]
1000a152:	mov    DWORD PTR [ecx+0x8],edx
1000a155:	mov    edx,DWORD PTR [eax]
1000a157:	cmp    BYTE PTR [edx+0x39],0x0
1000a15b:	jne    0x1000a160
1000a15d:	mov    DWORD PTR [edx+0x4],ecx
1000a160:	mov    edx,DWORD PTR [ecx+0x4]
1000a163:	mov    DWORD PTR [eax+0x4],edx
1000a166:	mov    edx,DWORD PTR [esp+0x4]
1000a16a:	mov    edx,DWORD PTR [edx+0x4]
1000a16d:	cmp    ecx,DWORD PTR [edx+0x4]
1000a170:	jne    0x1000a177
1000a172:	mov    DWORD PTR [edx+0x4],eax
1000a175:	jmp    0x1000a185
1000a177:	mov    edx,DWORD PTR [ecx+0x4]
1000a17a:	cmp    ecx,DWORD PTR [edx]
1000a17c:	jne    0x1000a182
1000a17e:	mov    DWORD PTR [edx],eax
1000a180:	jmp    0x1000a185
1000a182:	mov    DWORD PTR [edx+0x8],eax
1000a185:	mov    DWORD PTR [eax],ecx
1000a187:	mov    DWORD PTR [ecx+0x4],eax
1000a18a:	ret    0x4
1000a18d:	push   ebp
1000a18e:	mov    ebp,esp
1000a190:	and    esp,0xfffffff8
1000a193:	sub    esp,0xc
1000a196:	push   ebx
1000a197:	mov    ebx,eax
1000a199:	mov    eax,DWORD PTR [ebx+0x4]
1000a19c:	mov    ecx,DWORD PTR [eax]
1000a19e:	push   eax
1000a19f:	push   ebx
1000a1a0:	push   ecx
1000a1a1:	push   ebx
1000a1a2:	lea    eax,[esp+0x18]
1000a1a6:	push   eax
1000a1a7:	call   0x1000a403
1000a1ac:	push   DWORD PTR [ebx+0x4]
1000a1af:	call   0x10042e92
1000a1b4:	and    DWORD PTR [ebx+0x4],0x0
1000a1b8:	and    DWORD PTR [ebx+0x8],0x0
1000a1bc:	pop    ecx
1000a1bd:	pop    ebx
1000a1be:	mov    esp,ebp
1000a1c0:	pop    ebp
1000a1c1:	ret    
1000a1c2:	push   ebp
1000a1c3:	mov    ebp,esp
1000a1c5:	push   ebx
1000a1c6:	push   edi
1000a1c7:	mov    eax,esi
1000a1c9:	call   0x100046b1
1000a1ce:	test   eax,eax
1000a1d0:	jne    0x1000a1d6
1000a1d2:	xor    ebx,ebx
1000a1d4:	jmp    0x1000a1fb
1000a1d6:	mov    edi,DWORD PTR [esi+0x4]
1000a1d9:	cmp    edi,DWORD PTR [esi+0x8]
1000a1dc:	jbe    0x1000a1e3
1000a1de:	call   0x100433b0
1000a1e3:	cmp    DWORD PTR [ebp+0x10],0x0
1000a1e7:	je     0x1000a1ee
1000a1e9:	cmp    DWORD PTR [ebp+0x10],esi
1000a1ec:	je     0x1000a1f3
1000a1ee:	call   0x100433b0
1000a1f3:	mov    ebx,DWORD PTR [ebp+0x14]
1000a1f6:	sub    ebx,edi
1000a1f8:	sar    ebx,0x5
1000a1fb:	push   DWORD PTR [ebp+0x14]
1000a1fe:	mov    edx,DWORD PTR [ebp+0xc]
1000a201:	push   DWORD PTR [ebp+0x10]
1000a204:	mov    ecx,esi
1000a206:	call   0x1000a531
1000a20b:	mov    edi,DWORD PTR [esi+0x4]
1000a20e:	cmp    edi,DWORD PTR [esi+0x8]
1000a211:	jbe    0x1000a218
1000a213:	call   0x100433b0
1000a218:	push   DWORD PTR [ebp+0x8]
1000a21b:	mov    ecx,ebx
1000a21d:	lea    eax,[ebp+0x10]
1000a220:	mov    DWORD PTR [ebp+0x10],esi
1000a223:	mov    DWORD PTR [ebp+0x14],edi
1000a226:	call   0x10009ded
1000a22b:	mov    eax,DWORD PTR [ebp+0x8]
1000a22e:	pop    edi
1000a22f:	pop    ebx
1000a230:	pop    ebp
1000a231:	ret    0x10
1000a234:	push   esi
1000a235:	mov    esi,eax
1000a237:	cmp    esi,0x7ffffff
1000a23d:	jbe    0x1000a244
1000a23f:	jmp    0x1000a740
1000a244:	mov    ecx,esi
1000a246:	call   0x1000a77f
1000a24b:	shl    esi,0x5
1000a24e:	add    esi,eax
1000a250:	mov    DWORD PTR [edi+0x4],eax
1000a253:	mov    DWORD PTR [edi+0x8],eax
1000a256:	mov    DWORD PTR [edi+0xc],esi
1000a259:	mov    al,0x1
1000a25b:	pop    esi
1000a25c:	ret    
1000a25d:	push   ebp
1000a25e:	mov    ebp,esp
1000a260:	sub    esp,0xc
1000a263:	mov    eax,DWORD PTR [eax]
1000a265:	push   ebx
1000a266:	push   esi
1000a267:	push   edi
1000a268:	mov    edi,ecx
1000a26a:	mov    ecx,DWORD PTR [edi+0x4]
1000a26d:	test   ecx,ecx
1000a26f:	mov    DWORD PTR [ebp-0x8],eax
1000a272:	jne    0x1000a279
1000a274:	and    DWORD PTR [ebp-0x4],ecx
1000a277:	jmp    0x1000a284
1000a279:	mov    eax,DWORD PTR [edi+0xc]
1000a27c:	sub    eax,ecx
1000a27e:	sar    eax,0x2
1000a281:	mov    DWORD PTR [ebp-0x4],eax
1000a284:	test   ecx,ecx
1000a286:	jne    0x1000a28c
1000a288:	xor    eax,eax
1000a28a:	jmp    0x1000a294
1000a28c:	mov    eax,DWORD PTR [edi+0x8]
1000a28f:	sub    eax,ecx
1000a291:	sar    eax,0x2
1000a294:	mov    edx,0x3fffffff
1000a299:	mov    esi,edx
1000a29b:	sub    esi,eax
1000a29d:	cmp    esi,0x1
1000a2a0:	jae    0x1000a2a7
1000a2a2:	call   0x1000a740
1000a2a7:	test   ecx,ecx
1000a2a9:	jne    0x1000a2af
1000a2ab:	xor    eax,eax
1000a2ad:	jmp    0x1000a2b7
1000a2af:	mov    eax,DWORD PTR [edi+0x8]
1000a2b2:	sub    eax,ecx
1000a2b4:	sar    eax,0x2
1000a2b7:	inc    eax
1000a2b8:	cmp    DWORD PTR [ebp-0x4],eax
1000a2bb:	jae    0x1000a368
1000a2c1:	mov    eax,DWORD PTR [ebp-0x4]
1000a2c4:	shr    eax,1
1000a2c6:	sub    edx,eax
1000a2c8:	cmp    edx,DWORD PTR [ebp-0x4]
1000a2cb:	jae    0x1000a2d3
1000a2cd:	and    DWORD PTR [ebp-0x4],0x0
1000a2d1:	jmp    0x1000a2d6
1000a2d3:	add    DWORD PTR [ebp-0x4],eax
1000a2d6:	test   ecx,ecx
1000a2d8:	jne    0x1000a2de
1000a2da:	xor    eax,eax
1000a2dc:	jmp    0x1000a2e6
1000a2de:	mov    eax,DWORD PTR [edi+0x8]
1000a2e1:	sub    eax,ecx
1000a2e3:	sar    eax,0x2
1000a2e6:	inc    eax
1000a2e7:	cmp    DWORD PTR [ebp-0x4],eax
1000a2ea:	jae    0x1000a300
1000a2ec:	test   ecx,ecx
1000a2ee:	jne    0x1000a2f4
1000a2f0:	xor    eax,eax
1000a2f2:	jmp    0x1000a2fc
1000a2f4:	mov    eax,DWORD PTR [edi+0x8]
1000a2f7:	sub    eax,ecx
1000a2f9:	sar    eax,0x2
1000a2fc:	inc    eax
1000a2fd:	mov    DWORD PTR [ebp-0x4],eax
1000a300:	mov    ecx,DWORD PTR [ebp-0x4]
1000a303:	call   0x10025f75
1000a308:	push   DWORD PTR [edi+0x4]
1000a30b:	mov    ebx,eax
1000a30d:	mov    eax,DWORD PTR [ebp+0xc]
1000a310:	mov    ecx,ebx
1000a312:	call   0x1000a910
1000a317:	lea    ecx,[ebp-0x8]
1000a31a:	xor    edx,edx
1000a31c:	push   ecx
1000a31d:	inc    edx
1000a31e:	mov    esi,eax
1000a320:	call   0x10009fe2
1000a325:	push   DWORD PTR [ebp+0xc]
1000a328:	mov    ecx,eax
1000a32a:	mov    eax,DWORD PTR [edi+0x8]
1000a32d:	call   0x1000a910
1000a332:	mov    eax,DWORD PTR [edi+0x4]
1000a335:	test   eax,eax
1000a337:	jne    0x1000a33d
1000a339:	xor    esi,esi
1000a33b:	jmp    0x1000a345
1000a33d:	mov    esi,DWORD PTR [edi+0x8]
1000a340:	sub    esi,eax
1000a342:	sar    esi,0x2
1000a345:	test   eax,eax
1000a347:	je     0x1000a350
1000a349:	push   eax
1000a34a:	call   0x10042e92
1000a34f:	pop    ecx
1000a350:	mov    eax,DWORD PTR [ebp-0x4]
1000a353:	lea    eax,[ebx+eax*4]
1000a356:	mov    DWORD PTR [edi+0xc],eax
1000a359:	lea    eax,[ebx+esi*4+0x4]
1000a35d:	mov    DWORD PTR [edi+0x8],eax
1000a360:	mov    DWORD PTR [edi+0x4],ebx
1000a363:	jmp    0x1000a3fc
1000a368:	mov    esi,DWORD PTR [edi+0x8]
1000a36b:	mov    ebx,DWORD PTR [ebp+0xc]
1000a36e:	mov    eax,esi
1000a370:	sub    eax,ebx
1000a372:	sar    eax,0x2
1000a375:	cmp    eax,0x1
1000a378:	jae    0x1000a3bb
1000a37a:	lea    ecx,[ebx+0x4]
1000a37d:	push   ebx
1000a37e:	mov    eax,esi
1000a380:	call   0x1000a910
1000a385:	mov    esi,DWORD PTR [edi+0x8]
1000a388:	lea    eax,[ebp-0x8]
1000a38b:	push   eax
1000a38c:	mov    eax,esi
1000a38e:	xor    edx,edx
1000a390:	sub    eax,ebx
1000a392:	sar    eax,0x2
1000a395:	inc    edx
1000a396:	sub    edx,eax
1000a398:	call   0x10009fe2
1000a39d:	add    DWORD PTR [edi+0x8],0x4
1000a3a1:	mov    edi,DWORD PTR [edi+0x8]
1000a3a4:	lea    eax,[edi-0x4]
1000a3a7:	cmp    ebx,eax
1000a3a9:	mov    ecx,ebx
1000a3ab:	je     0x1000a3fc
1000a3ad:	mov    edx,DWORD PTR [ebp-0x8]
1000a3b0:	mov    DWORD PTR [ecx],edx
1000a3b2:	add    ecx,0x4
1000a3b5:	cmp    ecx,eax
1000a3b7:	jne    0x1000a3ad
1000a3b9:	jmp    0x1000a3fc
1000a3bb:	lea    eax,[esi-0x4]
1000a3be:	mov    DWORD PTR [ebp+0xc],eax
1000a3c1:	push   eax
1000a3c2:	mov    ecx,esi
1000a3c4:	mov    eax,esi
1000a3c6:	call   0x1000a910
1000a3cb:	mov    DWORD PTR [edi+0x8],eax
1000a3ce:	mov    eax,DWORD PTR [ebp+0xc]
1000a3d1:	sub    eax,ebx
1000a3d3:	sar    eax,0x2
1000a3d6:	test   eax,eax
1000a3d8:	jle    0x1000a3eb
1000a3da:	shl    eax,0x2
1000a3dd:	push   eax
1000a3de:	push   ebx
1000a3df:	push   eax
1000a3e0:	sub    esi,eax
1000a3e2:	push   esi
1000a3e3:	call   0x10042ea6
1000a3e8:	add    esp,0x10
1000a3eb:	lea    eax,[ebx+0x4]
1000a3ee:	jmp    0x1000a3f8
1000a3f0:	mov    ecx,DWORD PTR [ebp-0x8]
1000a3f3:	mov    DWORD PTR [ebx],ecx
1000a3f5:	add    ebx,0x4
1000a3f8:	cmp    ebx,eax
1000a3fa:	jne    0x1000a3f0
1000a3fc:	pop    edi
1000a3fd:	pop    esi
1000a3fe:	pop    ebx
1000a3ff:	leave  
1000a400:	ret    0x8
1000a403:	push   ebp
1000a404:	mov    ebp,esp
1000a406:	sub    esp,0x14
1000a409:	mov    eax,DWORD PTR [ebx+0x4]
1000a40c:	mov    eax,DWORD PTR [eax]
1000a40e:	push   esi
1000a40f:	push   edi
1000a410:	lea    edi,[ebp-0xc]
1000a413:	lea    esi,[ebp+0xc]
1000a416:	mov    DWORD PTR [ebp-0x8],eax
1000a419:	mov    DWORD PTR [ebp-0xc],ebx
1000a41c:	call   0x10004ada
1000a421:	test   al,al
1000a423:	je     0x1000a48a
1000a425:	mov    eax,DWORD PTR [ebx+0x4]
1000a428:	lea    edi,[ebp-0xc]
1000a42b:	lea    esi,[ebp+0x14]
1000a42e:	mov    DWORD PTR [ebp-0x8],eax
1000a431:	mov    DWORD PTR [ebp-0xc],ebx
1000a434:	call   0x10004ada
1000a439:	test   al,al
1000a43b:	je     0x1000a48a
1000a43d:	mov    eax,DWORD PTR [ebx+0x4]
1000a440:	push   DWORD PTR [eax+0x4]
1000a443:	mov    ecx,ebx
1000a445:	call   0x1000a840
1000a44a:	mov    eax,DWORD PTR [ebx+0x4]
1000a44d:	mov    DWORD PTR [eax+0x4],eax
1000a450:	mov    eax,DWORD PTR [ebx+0x4]
1000a453:	and    DWORD PTR [ebx+0x8],0x0
1000a457:	mov    DWORD PTR [eax],eax
1000a459:	mov    eax,DWORD PTR [ebx+0x4]
1000a45c:	mov    DWORD PTR [eax+0x8],eax
1000a45f:	mov    eax,DWORD PTR [ebx+0x4]
1000a462:	mov    ecx,DWORD PTR [eax]
1000a464:	mov    eax,DWORD PTR [ebp+0x8]
1000a467:	mov    DWORD PTR [eax],ebx
1000a469:	jmp    0x1000a4a4
1000a46b:	mov    eax,DWORD PTR [ebp+0x10]
1000a46e:	mov    edi,DWORD PTR [ebp+0xc]
1000a471:	lea    esi,[ebp+0xc]
1000a474:	mov    DWORD PTR [ebp-0x8],eax
1000a477:	call   0x10009c42
1000a47c:	push   DWORD PTR [ebp-0x8]
1000a47f:	lea    eax,[ebp-0x14]
1000a482:	push   edi
1000a483:	push   eax
1000a484:	push   ebx
1000a485:	call   0x100098d8
1000a48a:	lea    edi,[ebp+0x14]
1000a48d:	lea    esi,[ebp+0xc]
1000a490:	call   0x10004ada
1000a495:	test   al,al
1000a497:	je     0x1000a46b
1000a499:	mov    ecx,DWORD PTR [ebp+0xc]
1000a49c:	mov    eax,DWORD PTR [ebp+0x8]
1000a49f:	mov    DWORD PTR [eax],ecx
1000a4a1:	mov    ecx,DWORD PTR [ebp+0x10]
1000a4a4:	pop    edi
1000a4a5:	mov    DWORD PTR [eax+0x4],ecx
1000a4a8:	pop    esi
1000a4a9:	leave  
1000a4aa:	ret    0x14
1000a4ad:	mov    eax,DWORD PTR [eax+0x4]
1000a4b0:	push   esi
1000a4b1:	mov    esi,DWORD PTR [eax+0x4]
1000a4b4:	push   edi
1000a4b5:	mov    edi,eax
1000a4b7:	jmp    0x1000a4d2
1000a4b9:	mov    eax,DWORD PTR [esp+0xc]
1000a4bd:	lea    ecx,[esi+0xc]
1000a4c0:	call   0x1000765d
1000a4c5:	test   al,al
1000a4c7:	je     0x1000a4ce
1000a4c9:	mov    esi,DWORD PTR [esi+0x8]
1000a4cc:	jmp    0x1000a4d2
1000a4ce:	mov    edi,esi
1000a4d0:	mov    esi,DWORD PTR [esi]
1000a4d2:	cmp    BYTE PTR [esi+0x39],0x0
1000a4d6:	je     0x1000a4b9
1000a4d8:	mov    eax,edi
1000a4da:	pop    edi
1000a4db:	pop    esi
1000a4dc:	ret    0x4
1000a4df:	push   0xc
1000a4e1:	mov    eax,0x10062122
1000a4e6:	call   0x10059a68
1000a4eb:	push   0x3c
1000a4ed:	call   0x1004349e
1000a4f2:	mov    esi,eax
1000a4f4:	pop    ecx
1000a4f5:	mov    DWORD PTR [ebp-0x14],esi
1000a4f8:	test   esi,esi
1000a4fa:	mov    DWORD PTR [ebp-0x4],0x1
1000a501:	je     0x1000a514
1000a503:	push   DWORD PTR [ebp+0x10]
1000a506:	mov    ebx,DWORD PTR [ebp+0x14]
1000a509:	push   DWORD PTR [ebp+0xc]
1000a50c:	push   DWORD PTR [ebp+0x8]
1000a50f:	call   0x1000a7f3
1000a514:	mov    eax,esi
1000a516:	call   0x10059b0d
1000a51b:	ret    0x10
1000a51e:	push   DWORD PTR [ebp-0x14]
1000a521:	call   0x10042e92
1000a526:	pop    ecx
1000a527:	push   0x0
1000a529:	push   0x0
1000a52b:	call   0x100479b4
1000a530:	int3   
1000a531:	push   0x34
1000a533:	mov    eax,0x10061181
1000a538:	call   0x10059ad4
1000a53d:	mov    esi,ecx
1000a53f:	mov    edi,edx
1000a541:	push   edi
1000a542:	lea    ecx,[ebp-0x38]
1000a545:	mov    DWORD PTR [ebp-0x3c],esi
1000a548:	call   0x100011a7
1000a54d:	mov    eax,DWORD PTR [edi+0x1c]
1000a550:	mov    DWORD PTR [ebp-0x1c],eax
1000a553:	xor    edi,edi
1000a555:	mov    DWORD PTR [ebp-0x4],edi
1000a558:	mov    eax,DWORD PTR [esi+0x4]
1000a55b:	cmp    eax,edi
1000a55d:	je     0x1000a567
1000a55f:	mov    edi,DWORD PTR [esi+0xc]
1000a562:	sub    edi,eax
1000a564:	sar    edi,0x5
1000a567:	mov    eax,esi
1000a569:	call   0x100046b1
1000a56e:	mov    ebx,0x7ffffff
1000a573:	mov    ecx,ebx
1000a575:	sub    ecx,eax
1000a577:	cmp    ecx,0x1
1000a57a:	jae    0x1000a581
1000a57c:	call   0x1000a740
1000a581:	mov    eax,esi
1000a583:	call   0x100046b1
1000a588:	inc    eax
1000a589:	cmp    edi,eax
1000a58b:	jae    0x1000a64c
1000a591:	mov    eax,edi
1000a593:	shr    eax,1
1000a595:	sub    ebx,eax
1000a597:	cmp    ebx,edi
1000a599:	jae    0x1000a59f
1000a59b:	xor    edi,edi
1000a59d:	jmp    0x1000a5a1
1000a59f:	add    edi,eax
1000a5a1:	mov    eax,esi
1000a5a3:	call   0x100046b1
1000a5a8:	inc    eax
1000a5a9:	cmp    edi,eax
1000a5ab:	jae    0x1000a5b7
1000a5ad:	mov    eax,esi
1000a5af:	call   0x100046b1
1000a5b4:	mov    edi,eax
1000a5b6:	inc    edi
1000a5b7:	mov    ecx,edi
1000a5b9:	call   0x1000a77f
1000a5be:	push   eax
1000a5bf:	push   DWORD PTR [ebp+0xc]
1000a5c2:	mov    BYTE PTR [ebp-0x4],0x1
1000a5c6:	mov    ecx,DWORD PTR [esi+0x4]
1000a5c9:	mov    DWORD PTR [ebp-0x3c],eax
1000a5cc:	mov    DWORD PTR [ebp-0x40],eax
1000a5cf:	call   0x1000a939
1000a5d4:	lea    ecx,[ebp-0x38]
1000a5d7:	push   ecx
1000a5d8:	push   0x1
1000a5da:	push   eax
1000a5db:	mov    DWORD PTR [ebp-0x40],eax
1000a5de:	call   0x10004768
1000a5e3:	mov    ecx,DWORD PTR [ebp+0xc]
1000a5e6:	push   eax
1000a5e7:	push   DWORD PTR [esi+0x8]
1000a5ea:	mov    DWORD PTR [ebp-0x40],eax
1000a5ed:	call   0x1000a939
1000a5f2:	mov    eax,esi
1000a5f4:	call   0x100046b1
1000a5f9:	mov    ebx,eax
1000a5fb:	mov    eax,DWORD PTR [esi+0x4]
1000a5fe:	inc    ebx
1000a5ff:	test   eax,eax
1000a601:	je     0x1000a614
1000a603:	push   DWORD PTR [esi+0x8]
1000a606:	call   0x10004e16
1000a60b:	push   DWORD PTR [esi+0x4]
1000a60e:	call   0x10042e92
1000a613:	pop    ecx
1000a614:	mov    eax,DWORD PTR [ebp-0x3c]
1000a617:	shl    edi,0x5
1000a61a:	add    edi,eax
1000a61c:	shl    ebx,0x5
1000a61f:	add    ebx,eax
1000a621:	mov    DWORD PTR [esi+0xc],edi
1000a624:	mov    DWORD PTR [esi+0x8],ebx
1000a627:	mov    DWORD PTR [esi+0x4],eax
1000a62a:	jmp    0x1000a72c
1000a62f:	push   DWORD PTR [ebp-0x40]
1000a632:	mov    eax,DWORD PTR [ebp-0x3c]
1000a635:	call   0x10004e16
1000a63a:	push   DWORD PTR [ebp-0x3c]
1000a63d:	call   0x10042e92
1000a642:	pop    ecx
1000a643:	push   0x0
1000a645:	push   0x0
1000a647:	call   0x100479b4
1000a64c:	mov    eax,DWORD PTR [esi+0x8]
1000a64f:	mov    edi,DWORD PTR [ebp+0xc]
1000a652:	mov    ecx,eax
1000a654:	sub    ecx,edi
1000a656:	sar    ecx,0x5
1000a659:	cmp    ecx,0x1
1000a65c:	jae    0x1000a6d8
1000a65e:	lea    ecx,[edi+0x20]
1000a661:	push   ecx
1000a662:	push   eax
1000a663:	mov    ecx,edi
1000a665:	call   0x1000a939
1000a66a:	mov    BYTE PTR [ebp-0x4],0x3
1000a66e:	mov    eax,DWORD PTR [esi+0x8]
1000a671:	lea    ecx,[ebp-0x38]
1000a674:	push   ecx
1000a675:	mov    ecx,eax
1000a677:	xor    edx,edx
1000a679:	sub    ecx,edi
1000a67b:	sar    ecx,0x5
1000a67e:	inc    edx
1000a67f:	sub    edx,ecx
1000a681:	push   edx
1000a682:	push   eax
1000a683:	call   0x10004768
1000a688:	and    DWORD PTR [ebp-0x4],0x0
1000a68c:	add    DWORD PTR [esi+0x8],0x20
1000a690:	mov    esi,DWORD PTR [esi+0x8]
1000a693:	lea    ebx,[esi-0x20]
1000a696:	cmp    edi,ebx
1000a698:	mov    esi,edi
1000a69a:	je     0x1000a72c
1000a6a0:	push   0xffffffff
1000a6a2:	push   0x0
1000a6a4:	lea    eax,[ebp-0x38]
1000a6a7:	push   eax
1000a6a8:	mov    ecx,esi
1000a6aa:	call   0x10001241
1000a6af:	mov    eax,DWORD PTR [ebp-0x1c]
1000a6b2:	mov    DWORD PTR [esi+0x1c],eax
1000a6b5:	add    esi,0x20
1000a6b8:	cmp    esi,ebx
1000a6ba:	jne    0x1000a6a0
1000a6bc:	jmp    0x1000a72c
1000a6be:	mov    eax,DWORD PTR [ebp-0x3c]
1000a6c1:	mov    eax,DWORD PTR [eax+0x8]
1000a6c4:	add    eax,0x20
1000a6c7:	push   eax
1000a6c8:	mov    eax,DWORD PTR [ebp+0xc]
1000a6cb:	add    eax,0x20
1000a6ce:	call   0x10004e16
1000a6d3:	jmp    0x1000a643
1000a6d8:	lea    ebx,[eax-0x20]
1000a6db:	push   eax
1000a6dc:	push   eax
1000a6dd:	mov    ecx,ebx
1000a6df:	call   0x1000a939
1000a6e4:	mov    DWORD PTR [esi+0x8],eax
1000a6e7:	mov    esi,ebx
1000a6e9:	cmp    edi,esi
1000a6eb:	je     0x1000a707
1000a6ed:	push   0xffffffff
1000a6ef:	sub    esi,0x20
1000a6f2:	push   0x0
1000a6f4:	push   esi
1000a6f5:	lea    ecx,[esi+0x20]
1000a6f8:	call   0x10001241
1000a6fd:	cmp    esi,edi
1000a6ff:	mov    eax,DWORD PTR [esi+0x1c]
1000a702:	mov    DWORD PTR [esi+0x3c],eax
1000a705:	jne    0x1000a6ed
1000a707:	lea    ebx,[edi+0x20]
1000a70a:	cmp    edi,ebx
1000a70c:	mov    esi,edi
1000a70e:	je     0x1000a72c
1000a710:	push   0xffffffff
1000a712:	push   0x0
1000a714:	lea    eax,[ebp-0x38]
1000a717:	push   eax
1000a718:	mov    ecx,esi
1000a71a:	call   0x10001241
1000a71f:	mov    eax,DWORD PTR [ebp-0x1c]
1000a722:	mov    DWORD PTR [esi+0x1c],eax
1000a725:	add    esi,0x20
1000a728:	cmp    esi,ebx
1000a72a:	jne    0x1000a710
1000a72c:	push   0x0
1000a72e:	push   0x1
1000a730:	lea    ecx,[ebp-0x38]
1000a733:	call   0x100012f0
1000a738:	call   0x10059b30
1000a73d:	ret    0x8
1000a740:	push   0x44
1000a742:	mov    eax,0x1006071f
1000a747:	call   0x10059a35
1000a74c:	push   0x1006d01c
1000a751:	lea    ecx,[ebp-0x28]
1000a754:	call   0x100011cd
1000a759:	and    DWORD PTR [ebp-0x4],0x0
1000a75d:	lea    eax,[ebp-0x28]
1000a760:	push   eax
1000a761:	lea    ecx,[ebp-0x50]
1000a764:	call   0x10001077
1000a769:	push   0x10074da0
1000a76e:	lea    eax,[ebp-0x50]
1000a771:	push   eax
1000a772:	mov    DWORD PTR [ebp-0x50],0x1006b96c
1000a779:	call   0x100479b4
1000a77e:	int3   
1000a77f:	push   ebp
1000a780:	mov    ebp,esp
1000a782:	sub    esp,0x10
1000a785:	test   ecx,ecx
1000a787:	ja     0x1000a797
1000a789:	xor    ecx,ecx
1000a78b:	shl    ecx,0x5
1000a78e:	push   ecx
1000a78f:	call   0x1004349e
1000a794:	pop    ecx
1000a795:	leave  
1000a796:	ret    
1000a797:	or     eax,0xffffffff
1000a79a:	xor    edx,edx
1000a79c:	div    ecx
1000a79e:	cmp    eax,0x20
1000a7a1:	jae    0x1000a78b
1000a7a3:	and    DWORD PTR [ebp-0x4],0x0
1000a7a7:	lea    eax,[ebp-0x4]
1000a7aa:	push   eax
1000a7ab:	lea    ecx,[ebp-0x10]
1000a7ae:	call   0x10042f12
1000a7b3:	push   0x10074cf8
1000a7b8:	lea    eax,[ebp-0x10]
1000a7bb:	push   eax
1000a7bc:	mov    DWORD PTR [ebp-0x10],0x100665c8
1000a7c3:	call   0x100479b4
1000a7c8:	int3   
1000a7c9:	push   0x3c
1000a7cb:	call   0x1004349e
1000a7d0:	xor    edx,edx
1000a7d2:	cmp    eax,edx
1000a7d4:	pop    ecx
1000a7d5:	je     0x1000a7d9
1000a7d7:	mov    DWORD PTR [eax],edx
1000a7d9:	lea    ecx,[eax+0x4]
1000a7dc:	cmp    ecx,edx
1000a7de:	je     0x1000a7e2
1000a7e0:	mov    DWORD PTR [ecx],edx
1000a7e2:	lea    ecx,[eax+0x8]
1000a7e5:	cmp    ecx,edx
1000a7e7:	je     0x1000a7eb
1000a7e9:	mov    DWORD PTR [ecx],edx
1000a7eb:	mov    BYTE PTR [eax+0x38],0x1
1000a7ef:	mov    BYTE PTR [eax+0x39],dl
1000a7f2:	ret    
1000a7f3:	push   0x0
1000a7f5:	mov    eax,0x10062102
1000a7fa:	call   0x10059a35
1000a7ff:	mov    eax,DWORD PTR [ebp+0x8]
1000a802:	mov    DWORD PTR [esi],eax
1000a804:	mov    eax,DWORD PTR [ebp+0xc]
1000a807:	mov    DWORD PTR [esi+0x4],eax
1000a80a:	mov    eax,DWORD PTR [ebp+0x10]
1000a80d:	lea    edi,[esi+0xc]
1000a810:	push   ebx
1000a811:	mov    ecx,edi
1000a813:	mov    DWORD PTR [esi+0x8],eax
1000a816:	mov    DWORD PTR [ebp+0x8],edi
1000a819:	call   0x100011a7
1000a81e:	and    DWORD PTR [ebp-0x4],0x0
1000a822:	add    edi,0x1c
1000a825:	lea    ecx,[ebx+0x1c]
1000a828:	push   edi
1000a829:	call   0x10009c8f
1000a82e:	mov    BYTE PTR [esi+0x38],0x0
1000a832:	mov    BYTE PTR [esi+0x39],0x0
1000a836:	mov    eax,esi
1000a838:	call   0x10059b0d
1000a83d:	ret    0xc
1000a840:	push   ecx
1000a841:	push   ebp
1000a842:	mov    ebp,DWORD PTR [esp+0xc]
1000a846:	cmp    BYTE PTR [ebp+0x39],0x0
1000a84a:	push   edi
1000a84b:	mov    DWORD PTR [esp+0x8],ecx
1000a84f:	mov    edi,ebp
1000a851:	jne    0x1000a88a
1000a853:	push   ebx
1000a854:	push   esi
1000a855:	push   DWORD PTR [edi+0x8]
1000a858:	mov    ecx,DWORD PTR [esp+0x14]
1000a85c:	call   0x1000a840
1000a861:	mov    edi,DWORD PTR [edi]
1000a863:	lea    ebx,[ebp+0xc]
1000a866:	lea    esi,[ebx+0x1c]
1000a869:	call   0x10004743
1000a86e:	push   0x0
1000a870:	push   0x1
1000a872:	mov    ecx,ebx
1000a874:	call   0x100012f0
1000a879:	push   ebp
1000a87a:	call   0x10042e92
1000a87f:	cmp    BYTE PTR [edi+0x39],0x0
1000a883:	pop    ecx
1000a884:	mov    ebp,edi
1000a886:	je     0x1000a855
1000a888:	pop    esi
1000a889:	pop    ebx
1000a88a:	pop    edi
1000a88b:	pop    ebp
1000a88c:	pop    ecx
1000a88d:	ret    0x4
1000a890:	push   0x8
1000a892:	mov    eax,0x100620df
1000a897:	call   0x10059a35
1000a89c:	and    DWORD PTR [ebp-0x14],0x0
1000a8a0:	mov    DWORD PTR [ebp-0x10],edi
1000a8a3:	xor    esi,esi
1000a8a5:	lea    eax,[ebp+0x8]
1000a8a8:	inc    esi
1000a8a9:	push   eax
1000a8aa:	mov    ecx,edi
1000a8ac:	mov    DWORD PTR [ebp-0x4],esi
1000a8af:	call   0x100011a7
1000a8b4:	lea    eax,[edi+0x1c]
1000a8b7:	push   eax
1000a8b8:	lea    ecx,[ebp+0x24]
1000a8bb:	mov    BYTE PTR [ebp-0x4],0x2
1000a8bf:	call   0x10009c8f
1000a8c4:	push   0x0
1000a8c6:	push   esi
1000a8c7:	lea    ecx,[ebp+0x8]
1000a8ca:	call   0x100012f0
1000a8cf:	lea    esi,[ebp+0x24]
1000a8d2:	call   0x10004743
1000a8d7:	mov    eax,edi
1000a8d9:	call   0x10059b0d
1000a8de:	ret    
1000a8df:	push   0x0
1000a8e1:	mov    eax,0x10062102
1000a8e6:	call   0x10059a35
1000a8eb:	mov    esi,DWORD PTR [ebp+0x8]
1000a8ee:	push   edi
1000a8ef:	mov    ecx,esi
1000a8f1:	call   0x100011a7
1000a8f6:	and    DWORD PTR [ebp-0x4],0x0
1000a8fa:	lea    eax,[esi+0x1c]
1000a8fd:	lea    ecx,[edi+0x1c]
1000a900:	push   eax
1000a901:	call   0x10009c8f
1000a906:	mov    eax,esi
1000a908:	call   0x10059b0d
1000a90d:	ret    0x4
1000a910:	sub    eax,DWORD PTR [esp+0x4]
1000a914:	push   esi
1000a915:	sar    eax,0x2
1000a918:	lea    eax,[eax*4+0x0]
1000a91f:	lea    esi,[eax+ecx*1]
1000a922:	je     0x1000a933
1000a924:	push   eax
1000a925:	push   DWORD PTR [esp+0xc]
1000a929:	push   eax
1000a92a:	push   ecx
1000a92b:	call   0x10042ea6
1000a930:	add    esp,0x10
1000a933:	mov    eax,esi
1000a935:	pop    esi
1000a936:	ret    0x4
1000a939:	push   ebp
1000a93a:	mov    ebp,esp
1000a93c:	push   ecx
1000a93d:	push   edi
1000a93e:	xor    eax,eax
1000a940:	lea    edi,[ebp-0x4]
1000a943:	stos   BYTE PTR es:[edi],al
1000a944:	push   DWORD PTR [ebp-0x4]
1000a947:	push   DWORD PTR [ebp+0xc]
1000a94a:	push   DWORD PTR [ebp+0xc]
1000a94d:	push   DWORD PTR [ebp+0x8]
1000a950:	call   0x10019373
1000a955:	add    esp,0x10
1000a958:	pop    edi
1000a959:	leave  
1000a95a:	ret    0x8
1000a95d:	push   0x0
1000a95f:	mov    eax,0x1005f944
1000a964:	call   0x10059a35
1000a969:	and    DWORD PTR [esp+0x18],0x0
1000a96e:	test   esi,esi
1000a970:	je     0x1000a980
1000a972:	push   edi
1000a973:	mov    ecx,esi
1000a975:	call   0x100011a7
1000a97a:	mov    eax,DWORD PTR [edi+0x1c]
1000a97d:	mov    DWORD PTR [esi+0x1c],eax
1000a980:	call   0x10059b0d
1000a985:	ret    
1000a986:	mov    eax,DWORD PTR [esi]
1000a988:	test   eax,eax
1000a98a:	je     0x1000a996
1000a98c:	push   eax
1000a98d:	call   DWORD PTR ds:0x10066094
1000a993:	and    DWORD PTR [esi],0x0
1000a996:	ret    
1000a997:	push   ebp
1000a998:	mov    ebp,esp
1000a99a:	push   ecx
1000a99b:	push   ecx
1000a99c:	mov    eax,ds:0x10080fa0
1000a9a1:	push   0x0
1000a9a3:	mov    DWORD PTR [ebp-0x4],eax
1000a9a6:	push   0x0
1000a9a8:	lea    eax,[ebp-0x8]
1000a9ab:	push   eax
1000a9ac:	push   0x2
1000a9ae:	mov    DWORD PTR [ebp-0x8],esi
1000a9b1:	call   DWORD PTR ds:0x100660e8
1000a9b7:	sub    eax,0x0
1000a9ba:	je     0x1000a9d4
1000a9bc:	dec    eax
1000a9bd:	je     0x1000a9cf
1000a9bf:	sub    eax,0x101
1000a9c4:	je     0x1000a9ca
1000a9c6:	push   0x3
1000a9c8:	jmp    0x1000a9cc
1000a9ca:	push   0x2
1000a9cc:	pop    eax
1000a9cd:	jmp    0x1000a9db
1000a9cf:	xor    eax,eax
1000a9d1:	inc    eax
1000a9d2:	jmp    0x1000a9db
1000a9d4:	mov    eax,DWORD PTR [ebp+0x8]
1000a9d7:	mov    DWORD PTR [eax],esi
1000a9d9:	xor    eax,eax
1000a9db:	leave  
1000a9dc:	ret    0x4
1000a9df:	push   ebp
1000a9e0:	mov    ebp,esp
1000a9e2:	and    esp,0xfffffff8
1000a9e5:	push   ecx
1000a9e6:	push   edi
1000a9e7:	mov    edi,eax
1000a9e9:	mov    eax,ds:0x10080c7c
1000a9ee:	and    DWORD PTR [edi],0x0
1000a9f1:	cmp    eax,0x2
1000a9f4:	jne    0x1000aa01
1000a9f6:	push   DWORD PTR [ebp+0x8]
1000a9f9:	call   0x10007149
1000a9fe:	pop    ecx
1000a9ff:	jmp    0x1000aa14
1000aa01:	cmp    eax,0x1
1000aa04:	jne    0x1000aa12
1000aa06:	push   edi
1000aa07:	push   DWORD PTR [ebp+0x8]
1000aa0a:	call   0x100124b5
1000aa0f:	pop    ecx
1000aa10:	jmp    0x1000a9fe
1000aa12:	xor    al,al
1000aa14:	pop    edi
1000aa15:	mov    esp,ebp
1000aa17:	pop    ebp
1000aa18:	ret    
1000aa19:	push   ebp
1000aa1a:	mov    ebp,esp
1000aa1c:	sub    esp,0x10
1000aa1f:	mov    eax,DWORD PTR [ebp+0xc]
1000aa22:	and    DWORD PTR [ebp+0xc],0x0
1000aa26:	push   esi
1000aa27:	push   edi
1000aa28:	mov    DWORD PTR [ebp-0x8],eax
1000aa2b:	mov    eax,DWORD PTR [ebp+0x8]
1000aa2e:	push   0x0
1000aa30:	mov    esi,ecx
1000aa32:	mov    DWORD PTR [ebp-0x4],eax
1000aa35:	lea    edi,[esi+0x8]
1000aa38:	push   edi
1000aa39:	lea    eax,[ebp+0xc]
1000aa3c:	push   eax
1000aa3d:	lea    eax,[ebp+0x8]
1000aa40:	push   eax
1000aa41:	push   0x1
1000aa43:	lea    eax,[ebp-0x8]
1000aa46:	push   eax
1000aa47:	push   DWORD PTR [esi+0x4]
1000aa4a:	call   DWORD PTR ds:0x100663e4
1000aa50:	cmp    eax,0xffffffff
1000aa53:	jne    0x1000aa66
1000aa55:	call   DWORD PTR ds:0x100663f0
1000aa5b:	cmp    eax,0x3e5
1000aa60:	je     0x1000aa66
1000aa62:	xor    al,al
1000aa64:	jmp    0x1000aab3
1000aa66:	mov    eax,DWORD PTR [esi+0x18]
1000aa69:	push   0x1
1000aa6b:	mov    DWORD PTR [ebp-0x10],eax
1000aa6e:	mov    eax,DWORD PTR [esi+0x1c]
1000aa71:	push   0xffffffff
1000aa73:	mov    DWORD PTR [ebp-0xc],eax
1000aa76:	push   0x0
1000aa78:	lea    eax,[ebp-0x10]
1000aa7b:	push   eax
1000aa7c:	push   0x2
1000aa7e:	call   DWORD PTR ds:0x100663ac
1000aa84:	test   eax,eax
1000aa86:	jne    0x1000aa62
1000aa88:	lea    eax,[ebp+0xc]
1000aa8b:	push   eax
1000aa8c:	push   0x0
1000aa8e:	lea    eax,[ebp+0x8]
1000aa91:	push   eax
1000aa92:	push   edi
1000aa93:	push   DWORD PTR [esi+0x4]
1000aa96:	call   DWORD PTR ds:0x100663c0
1000aa9c:	test   eax,eax
1000aa9e:	je     0x1000aa62
1000aaa0:	mov    eax,DWORD PTR [ebp+0x10]
1000aaa3:	mov    ecx,DWORD PTR [ebp+0x8]
1000aaa6:	mov    DWORD PTR [eax],ecx
1000aaa8:	push   DWORD PTR [esi+0x18]
1000aaab:	call   DWORD PTR ds:0x100663b4
1000aab1:	mov    al,0x1
1000aab3:	pop    edi
1000aab4:	pop    esi
1000aab5:	leave  
1000aab6:	ret    0xc
1000aab9:	push   esi
1000aaba:	mov    esi,ecx
1000aabc:	push   DWORD PTR [esi+0x18]
1000aabf:	mov    DWORD PTR [esi],0x1006d900
1000aac5:	call   DWORD PTR ds:0x100663d4
1000aacb:	test   BYTE PTR [esp+0x8],0x1
1000aad0:	mov    DWORD PTR [esi],0x10071840
1000aad6:	je     0x1000aadf
1000aad8:	push   esi
1000aad9:	call   0x10042e92
1000aade:	pop    ecx
1000aadf:	mov    eax,esi
1000aae1:	pop    esi
1000aae2:	ret    0x4
1000aae5:	push   ebx
1000aae6:	xor    ebx,ebx
1000aae8:	mov    DWORD PTR [edi],ebx
1000aaea:	mov    DWORD PTR [edi+0x4],ebx
1000aaed:	mov    DWORD PTR [edi+0x8],ebx
1000aaf0:	mov    DWORD PTR [edi+0xc],ebx
1000aaf3:	push   esi
1000aaf4:	mov    DWORD PTR [edi+0x10],ebx
1000aaf7:	lea    esi,[edi+0x18]
1000aafa:	mov    DWORD PTR [edi+0x14],ebx
1000aafd:	call   0x10004059
1000ab02:	lea    esi,[edi+0x38]
1000ab05:	mov    WORD PTR [edi+0x34],bx
1000ab09:	call   0x10004059
1000ab0e:	mov    BYTE PTR [edi+0x58],bl
1000ab11:	call   DWORD PTR ds:0x100663bc
1000ab17:	mov    esi,eax
1000ab19:	mov    eax,DWORD PTR [edi+0x4]
1000ab1c:	cmp    eax,ebx
1000ab1e:	je     0x1000ab27
1000ab20:	push   eax
1000ab21:	call   DWORD PTR ds:0x100663d4
1000ab27:	mov    DWORD PTR [edi+0x4],esi
1000ab2a:	pop    esi
1000ab2b:	mov    eax,edi
1000ab2d:	pop    ebx
1000ab2e:	ret    
1000ab2f:	push   ebp
1000ab30:	mov    ebp,esp
1000ab32:	sub    esp,0x1c
1000ab35:	mov    eax,ds:0x1007e030
1000ab3a:	xor    eax,ebp
1000ab3c:	mov    DWORD PTR [ebp-0x4],eax
1000ab3f:	push   edi
1000ab40:	push   0x0
1000ab42:	push   0x1
1000ab44:	push   0x2
1000ab46:	call   DWORD PTR ds:0x100663c4
1000ab4c:	mov    edi,eax
1000ab4e:	mov    eax,DWORD PTR [esi+0x8]
1000ab51:	test   eax,eax
1000ab53:	je     0x1000ab5c
1000ab55:	push   eax
1000ab56:	call   DWORD PTR ds:0x100663b8
1000ab5c:	test   edi,edi
1000ab5e:	mov    DWORD PTR [esi+0x8],edi
1000ab61:	jne    0x1000ab6a
1000ab63:	xor    al,al
1000ab65:	jmp    0x1000ac58
1000ab6a:	xor    eax,eax
1000ab6c:	cmp    DWORD PTR [esi+0x54],0x0
1000ab70:	lea    edi,[ebp-0x12]
1000ab73:	stos   DWORD PTR es:[edi],eax
1000ab74:	stos   DWORD PTR es:[edi],eax
1000ab75:	stos   DWORD PTR es:[edi],eax
1000ab76:	stos   WORD PTR es:[edi],ax
1000ab78:	mov    WORD PTR [ebp-0x14],0x2
1000ab7e:	jne    0x1000abb1
1000ab80:	cmp    DWORD PTR [esi+0x30],0x10
1000ab84:	jb     0x1000ab8b
1000ab86:	mov    eax,DWORD PTR [esi+0x1c]
1000ab89:	jmp    0x1000ab8e
1000ab8b:	lea    eax,[esi+0x1c]
1000ab8e:	push   eax
1000ab8f:	call   DWORD PTR ds:0x100663b0
1000ab95:	movsx  ecx,WORD PTR [eax+0xa]
1000ab99:	mov    eax,DWORD PTR [eax+0xc]
1000ab9c:	push   ecx
1000ab9d:	push   DWORD PTR [eax]
1000ab9f:	lea    eax,[ebp-0x10]
1000aba2:	push   eax
1000aba3:	call   0x10045180
1000aba8:	movzx  eax,WORD PTR [esi+0x34]
1000abac:	add    esp,0xc
1000abaf:	jmp    0x1000abcd
1000abb1:	cmp    DWORD PTR [esi+0x50],0x10
1000abb5:	jb     0x1000abbc
1000abb7:	mov    eax,DWORD PTR [esi+0x3c]
1000abba:	jmp    0x1000abbf
1000abbc:	lea    eax,[esi+0x3c]
1000abbf:	push   eax
1000abc0:	call   DWORD PTR ds:0x100663e0
1000abc6:	mov    DWORD PTR [ebp-0x10],eax
1000abc9:	movzx  eax,WORD PTR [esi+0x54]
1000abcd:	push   eax
1000abce:	call   DWORD PTR ds:0x100663f4
1000abd4:	mov    WORD PTR [ebp-0x12],ax
1000abd8:	call   DWORD PTR ds:0x100663bc
1000abde:	mov    edi,eax
1000abe0:	call   0x10002080
1000abe5:	mov    eax,DWORD PTR [esi+0x8]
1000abe8:	push   0x10
1000abea:	push   edi
1000abeb:	push   eax
1000abec:	call   DWORD PTR ds:0x100663cc
1000abf2:	test   eax,eax
1000abf4:	je     0x1000ac0a
1000abf6:	test   edi,edi
1000abf8:	je     0x1000ab63
1000abfe:	push   edi
1000abff:	call   DWORD PTR ds:0x100663d4
1000ac05:	jmp    0x1000ab63
1000ac0a:	mov    eax,DWORD PTR [esi+0x8]
1000ac0d:	push   0x10
1000ac0f:	lea    ecx,[ebp-0x14]
1000ac12:	push   ecx
1000ac13:	push   eax
1000ac14:	call   DWORD PTR ds:0x100663dc
1000ac1a:	cmp    eax,0xffffffff
1000ac1d:	jne    0x1000ac4b
1000ac1f:	call   DWORD PTR ds:0x100663f0
1000ac25:	cmp    eax,0x2733
1000ac2a:	jne    0x1000abf6
1000ac2c:	mov    eax,DWORD PTR [esi+0x4]
1000ac2f:	push   0x1
1000ac31:	push   0xffffffff
1000ac33:	mov    DWORD PTR [ebp-0x18],eax
1000ac36:	push   0x0
1000ac38:	lea    eax,[ebp-0x1c]
1000ac3b:	push   eax
1000ac3c:	push   0x2
1000ac3e:	mov    DWORD PTR [ebp-0x1c],edi
1000ac41:	call   DWORD PTR ds:0x100663ac
1000ac47:	test   eax,eax
1000ac49:	jne    0x1000abf6
1000ac4b:	test   edi,edi
1000ac4d:	je     0x1000ac56
1000ac4f:	push   edi
1000ac50:	call   DWORD PTR ds:0x100663d4
1000ac56:	mov    al,0x1
1000ac58:	mov    ecx,DWORD PTR [ebp-0x4]
1000ac5b:	xor    ecx,ebp
1000ac5d:	pop    edi
1000ac5e:	call   0x10042e97
1000ac63:	leave  
1000ac64:	ret    
1000ac65:	mov    eax,DWORD PTR [esi+0x14]
1000ac68:	push   ebx
1000ac69:	xor    ebx,ebx
1000ac6b:	cmp    eax,ebx
1000ac6d:	je     0x1000ac76
1000ac6f:	push   eax
1000ac70:	call   0x10042e92
1000ac75:	pop    ecx
1000ac76:	push   ebp
1000ac77:	push   edi
1000ac78:	mov    DWORD PTR [esi+0x14],ebx
1000ac7b:	mov    edi,DWORD PTR [esi+0x10]
1000ac7e:	cmp    edi,ebx
1000ac80:	je     0x1000ac90
1000ac82:	mov    eax,edi
1000ac84:	call   0x1000db6f
1000ac89:	push   edi
1000ac8a:	call   0x10042e92
1000ac8f:	pop    ecx
1000ac90:	push   0x20
1000ac92:	mov    DWORD PTR [esi+0x10],ebx
1000ac95:	call   0x1004349e
1000ac9a:	mov    edi,eax
1000ac9c:	cmp    edi,ebx
1000ac9e:	pop    ecx
1000ac9f:	je     0x1000accd
1000aca1:	mov    eax,DWORD PTR [esi+0x4]
1000aca4:	mov    ecx,DWORD PTR [esi+0x8]
1000aca7:	push   0x14
1000aca9:	mov    DWORD PTR [edi+0x1c],eax
1000acac:	lea    eax,[edi+0x8]
1000acaf:	push   ebx
1000acb0:	push   eax
1000acb1:	mov    DWORD PTR [edi],0x1006d900
1000acb7:	mov    DWORD PTR [edi+0x4],ecx
1000acba:	call   0x10045c00
1000acbf:	add    esp,0xc
1000acc2:	call   DWORD PTR ds:0x100663bc
1000acc8:	mov    DWORD PTR [edi+0x18],eax
1000accb:	jmp    0x1000accf
1000accd:	xor    edi,edi
1000accf:	mov    ecx,DWORD PTR [esi+0xc]
1000acd2:	cmp    edi,ecx
1000acd4:	je     0x1000ace0
1000acd6:	cmp    ecx,ebx
1000acd8:	je     0x1000ace0
1000acda:	mov    eax,DWORD PTR [ecx]
1000acdc:	push   0x1
1000acde:	call   DWORD PTR [eax]
1000ace0:	push   0x1c
1000ace2:	mov    DWORD PTR [esi+0xc],edi
1000ace5:	call   0x1004349e
1000acea:	cmp    eax,ebx
1000acec:	pop    ecx
1000aced:	je     0x1000ad0a
1000acef:	mov    ecx,DWORD PTR [esi+0xc]
1000acf2:	mov    DWORD PTR [eax],ebx
1000acf4:	mov    DWORD PTR [eax+0x4],ebx
1000acf7:	mov    DWORD PTR [eax+0x8],ebx
1000acfa:	mov    DWORD PTR [eax+0xc],ebx
1000acfd:	mov    BYTE PTR [eax+0x10],bl
1000ad00:	mov    DWORD PTR [eax+0x14],ebx
1000ad03:	mov    DWORD PTR [eax+0x18],ecx
1000ad06:	mov    edi,eax
1000ad08:	jmp    0x1000ad0c
1000ad0a:	xor    edi,edi
1000ad0c:	mov    ebp,DWORD PTR [esi+0x10]
1000ad0f:	cmp    edi,ebp
1000ad11:	je     0x1000ad25
1000ad13:	cmp    ebp,ebx
1000ad15:	je     0x1000ad25
1000ad17:	mov    eax,ebp
1000ad19:	call   0x1000db6f
1000ad1e:	push   ebp
1000ad1f:	call   0x10042e92
1000ad24:	pop    ecx
1000ad25:	push   0x4
1000ad27:	mov    DWORD PTR [esi+0x10],edi
1000ad2a:	call   0x1004349e
1000ad2f:	cmp    eax,ebx
1000ad31:	pop    ecx
1000ad32:	pop    edi
1000ad33:	pop    ebp
1000ad34:	je     0x1000ad3d
1000ad36:	mov    ecx,DWORD PTR [esi+0x10]
1000ad39:	mov    DWORD PTR [eax],ecx
1000ad3b:	mov    ebx,eax
1000ad3d:	mov    eax,DWORD PTR [esi+0x14]
1000ad40:	cmp    ebx,eax
1000ad42:	je     0x1000ad4b
1000ad44:	push   eax
1000ad45:	call   0x10042e92
1000ad4a:	pop    ecx
1000ad4b:	mov    DWORD PTR [esi+0x14],ebx
1000ad4e:	pop    ebx
1000ad4f:	ret    
1000ad50:	push   0x4
1000ad52:	mov    eax,0x10064766
1000ad57:	call   0x10059a35
1000ad5c:	mov    edi,ecx
1000ad5e:	mov    esi,edx
1000ad60:	push   0xffffffff
1000ad62:	xor    ebx,ebx
1000ad64:	push   ebx
1000ad65:	mov    DWORD PTR [ebp-0x10],ebx
1000ad68:	push   DWORD PTR [ebp+0xc]
1000ad6b:	lea    ecx,[esi+0x18]
1000ad6e:	call   0x10001241
1000ad73:	mov    ax,WORD PTR [ebp+0x10]
1000ad77:	lea    ecx,[esi+0x38]
1000ad7a:	mov    WORD PTR [esi+0x34],ax
1000ad7e:	lea    eax,[esi+0x54]
1000ad81:	push   ecx
1000ad82:	call   0x1000a9df
1000ad87:	pop    ecx
1000ad88:	mov    DWORD PTR [ebp+0xc],ebx
1000ad8b:	mov    DWORD PTR [ebp-0x4],0x1
1000ad92:	mov    eax,DWORD PTR [ebp+0x1c]
1000ad95:	mov    DWORD PTR [eax],ebx
1000ad97:	push   DWORD PTR [esi+0x4]
1000ad9a:	call   DWORD PTR ds:0x100663b4
1000ada0:	cmp    edi,0xffffffff
1000ada3:	je     0x1000adf1
1000ada5:	push   0x8
1000ada7:	call   0x1004349e
1000adac:	cmp    eax,ebx
1000adae:	pop    ecx
1000adaf:	je     0x1000adbd
1000adb1:	mov    ecx,DWORD PTR [esi+0x4]
1000adb4:	mov    DWORD PTR [eax+0x4],edi
1000adb7:	mov    DWORD PTR [eax],ecx
1000adb9:	mov    edi,eax
1000adbb:	jmp    0x1000adbf
1000adbd:	xor    edi,edi
1000adbf:	push   ebx
1000adc0:	push   ebx
1000adc1:	push   edi
1000adc2:	push   0x1000aeac
1000adc7:	push   ebx
1000adc8:	push   ebx
1000adc9:	call   DWORD PTR ds:0x10066098
1000adcf:	push   eax
1000add0:	call   0x10004989
1000add5:	cmp    DWORD PTR [esi],ebx
1000add7:	jne    0x1000adea
1000add9:	push   edi
1000adda:	call   0x10042e92
1000addf:	mov    esi,DWORD PTR [ebp+0x8]
1000ade2:	pop    ecx
1000ade3:	mov    DWORD PTR [esi],ebx
1000ade5:	jmp    0x1000ae9b
1000adea:	push   ebx
1000adeb:	call   0x10042e92
1000adf0:	pop    ecx
1000adf1:	cmp    DWORD PTR [esi+0x8],ebx
1000adf4:	jne    0x1000ae09
1000adf6:	call   0x1000ab2f
1000adfb:	test   al,al
1000adfd:	jne    0x1000ae09
1000adff:	mov    esi,DWORD PTR [ebp+0x8]
1000ae02:	mov    DWORD PTR [esi],ebx
1000ae04:	jmp    0x1000ae9b
1000ae09:	call   0x1000ac65
1000ae0e:	mov    DWORD PTR [ebp+0x10],ebx
1000ae11:	push   DWORD PTR [ebp+0x18]
1000ae14:	mov    ecx,DWORD PTR [ebp+0x14]
1000ae17:	push   esi
1000ae18:	lea    edi,[ebp+0x10]
1000ae1b:	mov    BYTE PTR [ebp-0x4],0x2
1000ae1f:	call   0x1000afed
1000ae24:	test   al,al
1000ae26:	jne    0x1000ae2f
1000ae28:	mov    esi,DWORD PTR [ebp+0x8]
1000ae2b:	mov    DWORD PTR [esi],ebx
1000ae2d:	jmp    0x1000ae80
1000ae2f:	push   DWORD PTR [ebp+0x10]
1000ae32:	mov    ecx,DWORD PTR [ebp+0x1c]
1000ae35:	lea    eax,[ebp+0x1c]
1000ae38:	push   eax
1000ae39:	push   esi
1000ae3a:	call   0x1000b2b4
1000ae3f:	push   eax
1000ae40:	lea    edi,[ebp+0xc]
1000ae43:	call   0x10002099
1000ae48:	push   DWORD PTR [ebp+0x1c]
1000ae4b:	call   0x10042e92
1000ae50:	cmp    DWORD PTR [esi],ebx
1000ae52:	pop    ecx
1000ae53:	je     0x1000ae69
1000ae55:	push   DWORD PTR [esi+0x4]
1000ae58:	call   DWORD PTR ds:0x100663d8
1000ae5e:	mov    eax,DWORD PTR [esi]
1000ae60:	push   0xffffffff
1000ae62:	push   eax
1000ae63:	call   DWORD PTR ds:0x10066084
1000ae69:	mov    eax,DWORD PTR [esi]
1000ae6b:	cmp    eax,ebx
1000ae6d:	je     0x1000ae76
1000ae6f:	push   eax
1000ae70:	call   DWORD PTR ds:0x10066070
1000ae76:	mov    eax,DWORD PTR [ebp+0xc]
1000ae79:	mov    DWORD PTR [esi],ebx
1000ae7b:	mov    esi,DWORD PTR [ebp+0x8]
1000ae7e:	mov    DWORD PTR [esi],eax
1000ae80:	mov    BYTE PTR [ebp-0x4],0x1
1000ae84:	cmp    DWORD PTR [ebp+0x10],ebx
1000ae87:	mov    DWORD PTR [ebp-0x10],0x1
1000ae8e:	mov    DWORD PTR [ebp+0xc],ebx
1000ae91:	je     0x1000ae9b
1000ae93:	push   DWORD PTR [ebp+0x10]
1000ae96:	call   0x10009eaf
1000ae9b:	push   ebx
1000ae9c:	call   0x10042e92
1000aea1:	mov    eax,esi
1000aea3:	pop    ecx
1000aea4:	call   0x10059b0d
1000aea9:	ret    0x18
1000aeac:	push   ebp
1000aead:	mov    ebp,esp
1000aeaf:	push   ecx
1000aeb0:	push   ecx
1000aeb1:	push   esi
1000aeb2:	push   edi
1000aeb3:	lea    eax,[ebp+0xb]
1000aeb6:	push   eax
1000aeb7:	call   0x10037950
1000aebc:	mov    eax,DWORD PTR [ebp+0x8]
1000aebf:	mov    esi,DWORD PTR [eax]
1000aec1:	mov    edi,DWORD PTR [eax+0x4]
1000aec4:	push   eax
1000aec5:	call   0x10042e92
1000aeca:	mov    eax,ds:0x10080fa0
1000aecf:	pop    ecx
1000aed0:	push   edi
1000aed1:	mov    DWORD PTR [ebp-0x4],eax
1000aed4:	push   0x0
1000aed6:	lea    eax,[ebp-0x8]
1000aed9:	push   eax
1000aeda:	push   0x2
1000aedc:	mov    DWORD PTR [ebp-0x8],esi
1000aedf:	call   DWORD PTR ds:0x100660e8
1000aee5:	cmp    eax,0x102
1000aeea:	jne    0x1000aef3
1000aeec:	push   esi
1000aeed:	call   DWORD PTR ds:0x100663d8
1000aef3:	call   0x10037970
1000aef8:	pop    edi
1000aef9:	xor    eax,eax
1000aefb:	pop    esi
1000aefc:	leave  
1000aefd:	ret    0x4
1000af00:	push   ebp
1000af01:	mov    ebp,esp
1000af03:	push   ecx
1000af04:	mov    ecx,DWORD PTR [ebp+0x8]
1000af07:	and    DWORD PTR [ebp-0x4],0x0
1000af0b:	add    eax,0x18
1000af0e:	push   eax
1000af0f:	call   0x100011a7
1000af14:	mov    eax,DWORD PTR [ebp+0x8]
1000af17:	leave  
1000af18:	ret    0x4
1000af1b:	push   ebp
1000af1c:	mov    ebp,esp
1000af1e:	sub    esp,0x2c
1000af21:	push   ebx
1000af22:	push   esi
1000af23:	mov    esi,eax
1000af25:	push   edi
1000af26:	xor    eax,eax
1000af28:	xor    ebx,ebx
1000af2a:	mov    DWORD PTR [ebp-0x2c],ebx
1000af2d:	lea    edi,[ebp-0x28]
1000af30:	stos   DWORD PTR es:[edi],eax
1000af31:	stos   DWORD PTR es:[edi],eax
1000af32:	stos   DWORD PTR es:[edi],eax
1000af33:	stos   DWORD PTR es:[edi],eax
1000af34:	mov    eax,DWORD PTR [ebp+0x8]
1000af37:	mov    eax,DWORD PTR [eax+0x30]
1000af3a:	mov    ecx,DWORD PTR [eax+0x18]
1000af3d:	mov    DWORD PTR [ebp-0x10],ecx
1000af40:	mov    eax,DWORD PTR [eax+0x14]
1000af43:	mov    DWORD PTR [ebp-0xc],eax
1000af46:	call   DWORD PTR ds:0x100663bc
1000af4c:	push   ebx
1000af4d:	lea    ecx,[ebp-0x2c]
1000af50:	push   ecx
1000af51:	push   ebx
1000af52:	lea    ecx,[ebp-0x4]
1000af55:	push   ecx
1000af56:	push   0x1
1000af58:	mov    edi,eax
1000af5a:	mov    eax,DWORD PTR [esi+0x8]
1000af5d:	lea    ecx,[ebp-0x10]
1000af60:	push   ecx
1000af61:	push   eax
1000af62:	mov    DWORD PTR [ebp-0x1c],edi
1000af65:	mov    DWORD PTR [ebp-0x8],ebx
1000af68:	call   DWORD PTR ds:0x100663e8
1000af6e:	cmp    eax,0xffffffff
1000af71:	jne    0x1000af8f
1000af73:	call   DWORD PTR ds:0x100663f0
1000af79:	cmp    eax,0x3e5
1000af7e:	je     0x1000af8f
1000af80:	cmp    edi,ebx
1000af82:	je     0x1000af8b
1000af84:	push   edi
1000af85:	call   DWORD PTR ds:0x100663d4
1000af8b:	xor    al,al
1000af8d:	jmp    0x1000afe6
1000af8f:	mov    eax,DWORD PTR [ebp-0x1c]
1000af92:	push   0x1
1000af94:	mov    DWORD PTR [ebp-0x18],eax
1000af97:	mov    eax,DWORD PTR [esi+0x4]
1000af9a:	push   0xffffffff
1000af9c:	mov    DWORD PTR [ebp-0x14],eax
1000af9f:	push   ebx
1000afa0:	lea    eax,[ebp-0x18]
1000afa3:	push   eax
1000afa4:	push   0x2
1000afa6:	call   DWORD PTR ds:0x100663ac
1000afac:	test   eax,eax
1000afae:	jne    0x1000af80
1000afb0:	mov    esi,DWORD PTR [esi+0x8]
1000afb3:	lea    eax,[ebp-0x8]
1000afb6:	push   eax
1000afb7:	push   ebx
1000afb8:	lea    eax,[ebp-0x4]
1000afbb:	push   eax
1000afbc:	lea    eax,[ebp-0x2c]
1000afbf:	push   eax
1000afc0:	push   esi
1000afc1:	call   DWORD PTR ds:0x100663c0
1000afc7:	test   eax,eax
1000afc9:	je     0x1000af80
1000afcb:	mov    eax,DWORD PTR [ebp+0x8]
1000afce:	mov    eax,DWORD PTR [eax+0x30]
1000afd1:	mov    ecx,DWORD PTR [ebp-0x4]
1000afd4:	cmp    ecx,DWORD PTR [eax+0x18]
1000afd7:	jne    0x1000af80
1000afd9:	cmp    edi,ebx
1000afdb:	je     0x1000afe4
1000afdd:	push   edi
1000afde:	call   DWORD PTR ds:0x100663d4
1000afe4:	mov    al,0x1
1000afe6:	pop    edi
1000afe7:	pop    esi
1000afe8:	pop    ebx
1000afe9:	leave  
1000afea:	ret    0x4
1000afed:	push   ebp
1000afee:	mov    ebp,esp
1000aff0:	and    esp,0xfffffff8
1000aff3:	push   0xffffffff
1000aff5:	push   0x1006471c
1000affa:	mov    eax,fs:0x0
1000b000:	push   eax
1000b001:	sub    esp,0x94
1000b007:	push   ebx
1000b008:	push   esi
1000b009:	mov    eax,ds:0x1007e030
1000b00e:	xor    eax,esp
1000b010:	push   eax
1000b011:	lea    eax,[esp+0xa0]
1000b018:	mov    fs:0x0,eax
1000b01e:	mov    esi,ecx
1000b020:	push   0x50cb34e4
1000b025:	push   0x1006d4b8
1000b02a:	call   0x10004246
1000b02f:	push   0x684c2bec
1000b034:	push   eax
1000b035:	call   0x10004246
1000b03a:	push   0x113d25d8
1000b03f:	push   eax
1000b040:	call   0x10004246
1000b045:	push   eax
1000b046:	push   0x3
1000b048:	push   0x1006d4e0
1000b04d:	call   0x10004258
1000b052:	add    esp,0x24
1000b055:	push   eax
1000b056:	lea    ecx,[esp+0x4c]
1000b05a:	call   0x100011cd
1000b05f:	xor    ebx,ebx
1000b061:	mov    DWORD PTR [esp+0xa8],ebx
1000b068:	cmp    DWORD PTR [esi+0x18],0x10
1000b06c:	jb     0x1000b073
1000b06e:	mov    esi,DWORD PTR [esi+0x4]
1000b071:	jmp    0x1000b076
1000b073:	add    esi,0x4
1000b076:	push   esi
1000b077:	lea    ecx,[esp+0x68]
1000b07b:	call   0x100011cd
1000b080:	push   0x7200fe
1000b085:	push   0x1006d4e4
1000b08a:	mov    BYTE PTR [esp+0xb0],0x1
1000b092:	call   0x10004246
1000b097:	push   0x74309eb2
1000b09c:	push   eax
1000b09d:	call   0x10004246
1000b0a2:	push   eax
1000b0a3:	push   0x3
1000b0a5:	push   0x1006d510
1000b0aa:	call   0x10004258
1000b0af:	add    esp,0x1c
1000b0b2:	push   eax
1000b0b3:	lea    ecx,[esp+0x30]
1000b0b7:	call   0x100011cd
1000b0bc:	lea    eax,[esp+0x48]
1000b0c0:	push   eax
1000b0c1:	lea    eax,[esp+0x68]
1000b0c5:	push   eax
1000b0c6:	lea    ecx,[esp+0x34]
1000b0ca:	mov    BYTE PTR [esp+0xb0],0x2
1000b0d2:	call   0x100093f2
1000b0d7:	mov    esi,eax
1000b0d9:	mov    eax,DWORD PTR [edi]
1000b0db:	cmp    esi,eax
1000b0dd:	pop    ecx
1000b0de:	pop    ecx
1000b0df:	je     0x1000b0eb
1000b0e1:	cmp    eax,ebx
1000b0e3:	je     0x1000b0eb
1000b0e5:	push   eax
1000b0e6:	call   0x10009eaf
1000b0eb:	push   ebx
1000b0ec:	push   0x1
1000b0ee:	lea    ecx,[esp+0x34]
1000b0f2:	mov    DWORD PTR [edi],esi
1000b0f4:	call   0x100012f0
1000b0f9:	push   ebx
1000b0fa:	push   0x1
1000b0fc:	lea    ecx,[esp+0x6c]
1000b100:	call   0x100012f0
1000b105:	or     DWORD PTR [esp+0xa8],0xffffffff
1000b10d:	push   ebx
1000b10e:	push   0x1
1000b110:	lea    ecx,[esp+0x50]
1000b114:	call   0x100012f0
1000b119:	push   0x5541a2d4
1000b11e:	push   0x1006d514
1000b123:	call   0x10004246
1000b128:	push   eax
1000b129:	push   0x4
1000b12b:	push   0x1006d40c
1000b130:	call   0x10004258
1000b135:	add    esp,0x14
1000b138:	push   eax
1000b139:	lea    ecx,[esp+0x84]
1000b140:	call   0x100011cd
1000b145:	mov    esi,DWORD PTR [ebp+0x8]
1000b148:	mov    DWORD PTR [esp+0xa8],0x3
1000b153:	mov    eax,DWORD PTR [edi]
1000b155:	push   ebx
1000b156:	lea    edx,[esp+0x84]
1000b15d:	push   edx
1000b15e:	lea    ecx,[esi+0x18]
1000b161:	lea    edx,[eax+0x18]
1000b164:	call   0x10007f61
1000b169:	or     DWORD PTR [esp+0xa8],0xffffffff
1000b171:	push   ebx
1000b172:	push   0x1
1000b174:	lea    ecx,[esp+0x88]
1000b17b:	call   0x100012f0
1000b180:	push   DWORD PTR [ebp+0xc]
1000b183:	lea    eax,[esp+0x18]
1000b187:	push   eax
1000b188:	call   0x1000f4eb
1000b18d:	pop    ecx
1000b18e:	pop    ecx
1000b18f:	mov    DWORD PTR [esp+0xa8],0x4
1000b19a:	mov    DWORD PTR [esp+0x10],ebx
1000b19e:	cmp    DWORD PTR [esp+0x18],ebx
1000b1a2:	jne    0x1000b1a8
1000b1a4:	xor    eax,eax
1000b1a6:	jmp    0x1000b1b3
1000b1a8:	mov    eax,DWORD PTR [esp+0x1c]
1000b1ac:	sub    eax,DWORD PTR [esp+0x18]
1000b1b0:	sar    eax,0x4
1000b1b3:	cmp    DWORD PTR [esp+0x10],eax
1000b1b7:	je     0x1000b21e
1000b1b9:	push   DWORD PTR [esp+0x10]
1000b1bd:	lea    esi,[esp+0x18]
1000b1c1:	call   0x1000c950
1000b1c6:	call   0x100045e9
1000b1cb:	cmp    eax,0x2
1000b1ce:	jne    0x1000b215
1000b1d0:	mov    eax,DWORD PTR [edi]
1000b1d2:	push   ebx
1000b1d3:	push   0x1
1000b1d5:	push   DWORD PTR [esp+0x18]
1000b1d9:	mov    DWORD PTR [esp+0x34],eax
1000b1dd:	call   0x1000c950
1000b1e2:	mov    esi,eax
1000b1e4:	call   0x100045ff
1000b1e9:	push   ebx
1000b1ea:	push   DWORD PTR [esp+0x18]
1000b1ee:	lea    esi,[esp+0x20]
1000b1f2:	mov    DWORD PTR [esp+0x30],eax
1000b1f6:	call   0x1000c950
1000b1fb:	mov    esi,eax
1000b1fd:	call   0x100045ff
1000b202:	mov    edx,DWORD PTR [esp+0x2c]
1000b206:	push   eax
1000b207:	mov    eax,DWORD PTR [esp+0x2c]
1000b20b:	add    edx,0x18
1000b20e:	mov    ecx,eax
1000b210:	call   0x10007f61
1000b215:	inc    DWORD PTR [esp+0x10]
1000b219:	mov    esi,DWORD PTR [ebp+0x8]
1000b21c:	jmp    0x1000b19e
1000b21e:	cmp    DWORD PTR [esi+0x54],ebx
1000b221:	mov    ecx,DWORD PTR [edi]
1000b223:	setne  al
1000b226:	push   eax
1000b227:	call   0x1000b5a0
1000b22c:	call   0x10002080
1000b231:	push   DWORD PTR [edi]
1000b233:	mov    eax,esi
1000b235:	call   0x1000af1b
1000b23a:	test   al,al
1000b23c:	je     0x1000b24d
1000b23e:	mov    esi,DWORD PTR [esi+0x10]
1000b241:	call   0x1000dcf2
1000b246:	test   al,al
1000b248:	je     0x1000b2b0
1000b24a:	mov    esi,DWORD PTR [ebp+0x8]
1000b24d:	call   0x10002080
1000b252:	mov    eax,DWORD PTR [esi+0x8]
1000b255:	cmp    eax,ebx
1000b257:	je     0x1000b260
1000b259:	push   eax
1000b25a:	call   DWORD PTR ds:0x100663b8
1000b260:	mov    DWORD PTR [esi+0x8],ebx
1000b263:	call   0x1000ab2f
1000b268:	test   al,al
1000b26a:	jne    0x1000b28e
1000b26c:	lea    esi,[esp+0x14]
1000b270:	call   0x1000d062
1000b275:	xor    al,al
1000b277:	mov    ecx,DWORD PTR [esp+0xa0]
1000b27e:	mov    DWORD PTR fs:0x0,ecx
1000b285:	pop    ecx
1000b286:	pop    esi
1000b287:	pop    ebx
1000b288:	mov    esp,ebp
1000b28a:	pop    ebp
1000b28b:	ret    0x8
1000b28e:	mov    esi,DWORD PTR [ebp+0x8]
1000b291:	call   0x1000ac65
1000b296:	push   DWORD PTR [edi]
1000b298:	mov    eax,esi
1000b29a:	call   0x1000af1b
1000b29f:	test   al,al
1000b2a1:	jne    0x1000b2b0
1000b2a3:	lea    esi,[esp+0x14]
1000b2a7:	call   0x1000d062
1000b2ac:	mov    al,bl
1000b2ae:	jmp    0x1000b277
1000b2b0:	mov    bl,0x1
1000b2b2:	jmp    0x1000b2a3
1000b2b4:	push   0x50
1000b2b6:	mov    eax,0x100646d6
1000b2bb:	call   0x10059a35
1000b2c0:	mov    esi,ecx
1000b2c2:	xor    edi,edi
1000b2c4:	mov    DWORD PTR [ebp-0x18],edi
1000b2c7:	mov    DWORD PTR [ebp-0x14],edi
1000b2ca:	xor    ebx,ebx
1000b2cc:	lea    eax,[ebp-0x5c]
1000b2cf:	inc    ebx
1000b2d0:	mov    DWORD PTR [ebp-0x4],ebx
1000b2d3:	push   eax
1000b2d4:	mov    DWORD PTR [esi],edi
1000b2d6:	call   0x10008f0b
1000b2db:	mov    eax,DWORD PTR [ebp+0x8]
1000b2de:	lea    ecx,[ebp-0x5c]
1000b2e1:	mov    BYTE PTR [ebp-0x4],0x2
1000b2e5:	mov    eax,DWORD PTR [eax+0x14]
1000b2e8:	push   ecx
1000b2e9:	push   eax
1000b2ea:	call   0x1000e437
1000b2ef:	test   eax,eax
1000b2f1:	je     0x1000b2fd
1000b2f3:	mov    esi,DWORD PTR [ebp+0xc]
1000b2f6:	mov    DWORD PTR [ebp-0x14],edi
1000b2f9:	mov    DWORD PTR [esi],edi
1000b2fb:	jmp    0x1000b36b
1000b2fd:	mov    eax,DWORD PTR [ebp+0x8]
1000b300:	push   DWORD PTR [ebp+0x10]
1000b303:	mov    ecx,DWORD PTR [eax+0x14]
1000b306:	lea    edx,[ebp-0x5c]
1000b309:	call   0x1000e515
1000b30e:	test   eax,eax
1000b310:	je     0x1000b319
1000b312:	mov    esi,DWORD PTR [ebp+0xc]
1000b315:	mov    DWORD PTR [esi],edi
1000b317:	jmp    0x1000b368
1000b319:	push   DWORD PTR [ebp+0x8]
1000b31c:	lea    ecx,[ebp-0x5c]
1000b31f:	call   0x1000b38b
1000b324:	mov    eax,DWORD PTR [ebp-0x50]
1000b327:	mov    eax,DWORD PTR [eax+0x18]
1000b32a:	push   eax
1000b32b:	mov    DWORD PTR [esi],eax
1000b32d:	call   0x10043721
1000b332:	cmp    eax,edi
1000b334:	pop    ecx
1000b335:	mov    DWORD PTR [ebp+0x8],eax
1000b338:	je     0x1000b341
1000b33a:	push   edi
1000b33b:	call   0x10042e92
1000b340:	pop    ecx
1000b341:	mov    eax,DWORD PTR [ebp-0x50]
1000b344:	cmp    DWORD PTR [eax+0x1c],0x10
1000b348:	jb     0x1000b34f
1000b34a:	mov    eax,DWORD PTR [eax+0x8]
1000b34d:	jmp    0x1000b352
1000b34f:	add    eax,0x8
1000b352:	push   DWORD PTR [esi]
1000b354:	push   eax
1000b355:	push   DWORD PTR [ebp+0x8]
1000b358:	call   0x10045180
1000b35d:	mov    eax,DWORD PTR [ebp+0x8]
1000b360:	mov    esi,DWORD PTR [ebp+0xc]
1000b363:	add    esp,0xc
1000b366:	mov    DWORD PTR [esi],eax
1000b368:	mov    DWORD PTR [ebp-0x14],edi
1000b36b:	lea    eax,[ebp-0x5c]
1000b36e:	push   eax
1000b36f:	mov    DWORD PTR [ebp-0x18],ebx
1000b372:	mov    BYTE PTR [ebp-0x4],bl
1000b375:	call   0x10009f12
1000b37a:	push   edi
1000b37b:	call   0x10042e92
1000b380:	pop    ecx
1000b381:	mov    eax,esi
1000b383:	call   0x10059b0d
1000b388:	ret    0xc
1000b38b:	push   ebp
1000b38c:	mov    ebp,esp
1000b38e:	and    esp,0xfffffff8
1000b391:	push   0xffffffff
1000b393:	push   0x100620a6
1000b398:	mov    eax,fs:0x0
1000b39e:	push   eax
1000b39f:	sub    esp,0x78
1000b3a2:	push   ebx
1000b3a3:	push   esi
1000b3a4:	push   edi
1000b3a5:	mov    eax,ds:0x1007e030
1000b3aa:	xor    eax,esp
1000b3ac:	push   eax
1000b3ad:	lea    eax,[esp+0x88]
1000b3b4:	mov    fs:0x0,eax
1000b3ba:	mov    ebx,ecx
1000b3bc:	mov    eax,DWORD PTR [ebx]
1000b3be:	lea    ecx,[esp+0x14]
1000b3c2:	push   ecx
1000b3c3:	call   0x10019730
1000b3c8:	mov    esi,eax
1000b3ca:	push   0x531b6bac
1000b3cf:	xor    edi,edi
1000b3d1:	push   0x1006d544
1000b3d6:	mov    DWORD PTR [esp+0x98],edi
1000b3dd:	call   0x10004246
1000b3e2:	push   eax
1000b3e3:	push   0x3
1000b3e5:	push   0x1006d4e0
1000b3ea:	call   0x10004258
1000b3ef:	add    esp,0x14
1000b3f2:	push   eax
1000b3f3:	call   0x1000658e
1000b3f8:	or     DWORD PTR [esp+0x94],0xffffffff
1000b400:	pop    ecx
1000b401:	xor    esi,esi
1000b403:	push   edi
1000b404:	inc    esi
1000b405:	push   esi
1000b406:	lea    ecx,[esp+0x1c]
1000b40a:	mov    BYTE PTR [esp+0x1b],al
1000b40e:	call   0x100012f0
1000b413:	cmp    BYTE PTR [esp+0x13],0x0
1000b418:	je     0x1000b4d6
1000b41e:	push   0x5c57a1e4
1000b423:	push   0x1006d5ac
1000b428:	call   0x10004246
1000b42d:	push   0x6e09a510
1000b432:	push   eax
1000b433:	call   0x10004246
1000b438:	push   eax
1000b439:	push   0xa
1000b43b:	push   0x1006d5d8
1000b440:	call   0x10004258
1000b445:	add    esp,0x1c
1000b448:	push   eax
1000b449:	lea    ecx,[esp+0x18]
1000b44d:	call   0x100011cd
1000b452:	push   edi
1000b453:	lea    eax,[esp+0x18]
1000b457:	push   eax
1000b458:	lea    eax,[esp+0x54]
1000b45c:	push   eax
1000b45d:	lea    eax,[ebx+0x20]
1000b460:	mov    DWORD PTR [esp+0x9c],esi
1000b467:	call   0x100084cc
1000b46c:	mov    ebx,eax
1000b46e:	push   0x553a3a28
1000b473:	push   0x1006d568
1000b478:	mov    BYTE PTR [esp+0x98],0x2
1000b480:	call   0x10004246
1000b485:	cmp    DWORD PTR [ebx+0x18],0x10
1000b489:	pop    ecx
1000b48a:	pop    ecx
1000b48b:	jb     0x1000b492
1000b48d:	mov    ebx,DWORD PTR [ebx+0x4]
1000b490:	jmp    0x1000b495
1000b492:	add    ebx,0x4
1000b495:	push   eax
1000b496:	push   0xa
1000b498:	push   0x1006d5a0
1000b49d:	call   0x10004258
1000b4a2:	add    esp,0xc
1000b4a5:	push   eax
1000b4a6:	push   ebx
1000b4a7:	call   0x1004566f
1000b4ac:	pop    ecx
1000b4ad:	pop    ecx
1000b4ae:	mov    ebx,eax
1000b4b0:	neg    ebx
1000b4b2:	push   edi
1000b4b3:	sbb    bl,bl
1000b4b5:	push   esi
1000b4b6:	lea    ecx,[esp+0x54]
1000b4ba:	inc    bl
1000b4bc:	call   0x100012f0
1000b4c1:	push   edi
1000b4c2:	push   esi
1000b4c3:	lea    ecx,[esp+0x1c]
1000b4c7:	call   0x100012f0
1000b4cc:	test   bl,bl
1000b4ce:	setne  al
1000b4d1:	jmp    0x1000b582
1000b4d6:	push   0x39b61edc
1000b4db:	push   0x1006d62c
1000b4e0:	call   0x10004246
1000b4e5:	push   eax
1000b4e6:	push   0xa
1000b4e8:	push   0x1006d5d8
1000b4ed:	call   0x10004258
1000b4f2:	add    esp,0x14
1000b4f5:	push   eax
1000b4f6:	lea    ecx,[esp+0x34]
1000b4fa:	call   0x100011cd
1000b4ff:	push   edi
1000b500:	lea    eax,[esp+0x34]
1000b504:	push   eax
1000b505:	lea    eax,[esp+0x70]
1000b509:	push   eax
1000b50a:	lea    eax,[ebx+0x20]
1000b50d:	mov    DWORD PTR [esp+0x9c],0x3
1000b518:	call   0x100084cc
1000b51d:	mov    ebx,eax
1000b51f:	push   0x70aa5ac0
1000b524:	push   0x1006d5e4
1000b529:	mov    BYTE PTR [esp+0x98],0x4
1000b531:	call   0x10004246
1000b536:	cmp    DWORD PTR [ebx+0x18],0x10
1000b53a:	pop    ecx
1000b53b:	pop    ecx
1000b53c:	jb     0x1000b543
1000b53e:	mov    ebx,DWORD PTR [ebx+0x4]
1000b541:	jmp    0x1000b546
1000b543:	add    ebx,0x4
1000b546:	push   eax
1000b547:	push   0x5
1000b549:	push   0x1006d624
1000b54e:	call   0x10004258
1000b553:	add    esp,0xc
1000b556:	push   eax
1000b557:	push   ebx
1000b558:	call   0x1004566f
1000b55d:	pop    ecx
1000b55e:	pop    ecx
1000b55f:	mov    ebx,eax
1000b561:	neg    ebx
1000b563:	push   edi
1000b564:	sbb    bl,bl
1000b566:	push   esi
1000b567:	lea    ecx,[esp+0x70]
1000b56b:	inc    bl
1000b56d:	call   0x100012f0
1000b572:	push   edi
1000b573:	push   esi
1000b574:	lea    ecx,[esp+0x38]
1000b578:	call   0x100012f0
1000b57d:	test   bl,bl
1000b57f:	sete   al
1000b582:	mov    ecx,DWORD PTR [ebp+0x8]
1000b585:	mov    BYTE PTR [ecx+0x58],al
1000b588:	mov    ecx,DWORD PTR [esp+0x88]
1000b58f:	mov    DWORD PTR fs:0x0,ecx
1000b596:	pop    ecx
1000b597:	pop    edi
1000b598:	pop    esi
1000b599:	pop    ebx
1000b59a:	mov    esp,ebp
1000b59c:	pop    ebp
1000b59d:	ret    0x4
1000b5a0:	push   0x200
1000b5a5:	mov    eax,0x10062e1d
1000b5aa:	call   0x10059a9e
1000b5af:	mov    esi,ecx
1000b5b1:	push   0x6d5369e2
1000b5b6:	push   0x1006d654
1000b5bb:	mov    DWORD PTR [ebp-0x160],esi
1000b5c1:	call   0x10004246
1000b5c6:	push   0xbc526c2
1000b5cb:	push   eax
1000b5cc:	call   0x10004246
1000b5d1:	push   eax
1000b5d2:	push   0x7
1000b5d4:	push   0x1006d678
1000b5d9:	call   0x10004258
1000b5de:	add    esp,0x1c
1000b5e1:	push   eax
1000b5e2:	lea    ecx,[ebp-0x180]
1000b5e8:	call   0x100011cd
1000b5ed:	lea    ecx,[ebp-0x180]
1000b5f3:	lea    eax,[esi+0x18]
1000b5f6:	push   ecx
1000b5f7:	xor    ebx,ebx
1000b5f9:	push   eax
1000b5fa:	mov    DWORD PTR [ebp-0x4],ebx
1000b5fd:	mov    DWORD PTR [ebp-0x15c],eax
1000b603:	call   0x1000826a
1000b608:	or     DWORD PTR [ebp-0x4],0xffffffff
1000b60c:	xor    edi,edi
1000b60e:	push   ebx
1000b60f:	inc    edi
1000b610:	push   edi
1000b611:	lea    ecx,[ebp-0x180]
1000b617:	call   0x100012f0
1000b61c:	lea    ecx,[ebp-0xc0]
1000b622:	call   0x10012aed
1000b627:	push   0x1006cd08
1000b62c:	lea    esi,[ebp-0xc0]
1000b632:	mov    DWORD PTR [ebp-0x4],edi
1000b635:	call   0x1000658e
1000b63a:	test   al,al
1000b63c:	pop    ecx
1000b63d:	jne    0x1000b6eb
1000b643:	push   0x21fb5f1c
1000b648:	push   0x1006d680
1000b64d:	call   0x10004246
1000b652:	push   0x3857efd0
1000b657:	push   eax
1000b658:	call   0x10004246
1000b65d:	push   eax
1000b65e:	push   0xa
1000b660:	mov    esi,0x1006d6c0
1000b665:	push   esi
1000b666:	call   0x10004258
1000b66b:	add    esp,0x1c
1000b66e:	push   eax
1000b66f:	lea    ecx,[ebp-0x180]
1000b675:	call   0x100011cd
1000b67a:	lea    eax,[ebp-0x180]
1000b680:	push   eax
1000b681:	push   DWORD PTR [ebp-0x15c]
1000b687:	mov    BYTE PTR [ebp-0x4],0x2
1000b68b:	call   0x1000826a
1000b690:	push   ebx
1000b691:	push   edi
1000b692:	lea    ecx,[ebp-0x180]
1000b698:	mov    BYTE PTR [ebp-0x4],0x1
1000b69c:	call   0x100012f0
1000b6a1:	push   0x1006d6cc
1000b6a6:	push   0xa
1000b6a8:	push   esi
1000b6a9:	call   0x10004258
1000b6ae:	add    esp,0xc
1000b6b1:	push   eax
1000b6b2:	lea    ecx,[ebp-0x180]
1000b6b8:	call   0x100011cd
1000b6bd:	mov    edx,DWORD PTR [ebp-0x15c]
1000b6c3:	push   ebx
1000b6c4:	lea    eax,[ebp-0x180]
1000b6ca:	push   eax
1000b6cb:	lea    ecx,[ebp-0xc0]
1000b6d1:	mov    BYTE PTR [ebp-0x4],0x3
1000b6d5:	call   0x10007f61
1000b6da:	push   ebx
1000b6db:	push   edi
1000b6dc:	lea    ecx,[ebp-0x180]
1000b6e2:	mov    BYTE PTR [ebp-0x4],0x1
1000b6e6:	call   0x100012f0
1000b6eb:	push   0x1006cd08
1000b6f0:	lea    esi,[ebp-0x6c]
1000b6f3:	call   0x1000658e
1000b6f8:	test   al,al
1000b6fa:	pop    ecx
1000b6fb:	jne    0x1000b7a6
1000b701:	push   0x1006d700
1000b706:	push   0xf
1000b708:	mov    esi,0x1006d738
1000b70d:	push   esi
1000b70e:	call   0x10004258
1000b713:	add    esp,0xc
1000b716:	push   eax
1000b717:	lea    ecx,[ebp-0x180]
1000b71d:	call   0x100011cd
1000b722:	lea    eax,[ebp-0x180]
1000b728:	push   eax
1000b729:	push   DWORD PTR [ebp-0x15c]
1000b72f:	mov    BYTE PTR [ebp-0x4],0x4
1000b733:	call   0x1000826a
1000b738:	push   ebx
1000b739:	push   edi
1000b73a:	lea    ecx,[ebp-0x180]
1000b740:	mov    BYTE PTR [ebp-0x4],0x1
1000b744:	call   0x100012f0
1000b749:	push   0x4c900b08
1000b74e:	push   0x1006d748
1000b753:	call   0x10004246
1000b758:	push   0x3ac5cd4c
1000b75d:	push   eax
1000b75e:	call   0x10004246
1000b763:	push   eax
1000b764:	push   0xf
1000b766:	push   esi
1000b767:	call   0x10004258
1000b76c:	add    esp,0x1c
1000b76f:	push   eax
1000b770:	lea    ecx,[ebp-0x180]
1000b776:	call   0x100011cd
1000b77b:	mov    edx,DWORD PTR [ebp-0x15c]
1000b781:	push   ebx
1000b782:	lea    eax,[ebp-0x180]
1000b788:	push   eax
1000b789:	lea    ecx,[ebp-0x6c]
1000b78c:	mov    BYTE PTR [ebp-0x4],0x5
1000b790:	call   0x10007f61
1000b795:	push   ebx
1000b796:	push   edi
1000b797:	lea    ecx,[ebp-0x180]
1000b79d:	mov    BYTE PTR [ebp-0x4],0x1
1000b7a1:	call   0x100012f0
1000b7a6:	push   0x1006cd08
1000b7ab:	lea    esi,[ebp-0x88]
1000b7b1:	call   0x1000658e
1000b7b6:	test   al,al
1000b7b8:	pop    ecx
1000b7b9:	jne    0x1000b957
1000b7bf:	lea    edi,[ebp-0x158]
1000b7c5:	call   0x1000bc38
1000b7ca:	mov    eax,esi
1000b7cc:	push   eax
1000b7cd:	lea    ecx,[ebp-0x2c]
1000b7d0:	mov    BYTE PTR [ebp-0x4],0x6
1000b7d4:	call   0x100011a7
1000b7d9:	cmp    BYTE PTR [ebp+0x8],bl
1000b7dc:	mov    BYTE PTR [ebp-0x4],0x7
1000b7e0:	je     0x1000b926
1000b7e6:	mov    eax,edi
1000b7e8:	push   eax
1000b7e9:	lea    ecx,[ebp-0x2c]
1000b7ec:	call   0x10032c20
1000b7f1:	test   al,al
1000b7f3:	pop    ecx
1000b7f4:	je     0x1000b926
1000b7fa:	push   0x1006d77c
1000b7ff:	push   0x4
1000b801:	push   0x1006d40c
1000b806:	call   0x10004258
1000b80b:	add    esp,0xc
1000b80e:	push   eax
1000b80f:	lea    ecx,[ebp-0x180]
1000b815:	call   0x100011cd
1000b81a:	push   ebx
1000b81b:	lea    eax,[ebp-0x180]
1000b821:	push   eax
1000b822:	lea    eax,[ebp-0x1b8]
1000b828:	push   eax
1000b829:	mov    eax,DWORD PTR [ebp-0x15c]
1000b82f:	mov    BYTE PTR [ebp-0x4],0x8
1000b833:	call   0x100084cc
1000b838:	mov    esi,eax
1000b83a:	push   0x30f2e678
1000b83f:	push   0x1006d7b0
1000b844:	mov    BYTE PTR [ebp-0x4],0x9
1000b848:	call   0x10004246
1000b84d:	push   0x37cc47d6
1000b852:	push   eax
1000b853:	call   0x10004246
1000b858:	push   eax
1000b859:	push   0x7
1000b85b:	push   0x1006d3c4
1000b860:	call   0x10004258
1000b865:	add    esp,0x1c
1000b868:	push   eax
1000b869:	lea    ecx,[ebp-0x1f0]
1000b86f:	call   0x100011cd
1000b874:	push   esi
1000b875:	push   eax
1000b876:	lea    eax,[ebp-0x20c]
1000b87c:	push   eax
1000b87d:	mov    BYTE PTR [ebp-0x4],0xa
1000b881:	call   0x100064d6
1000b886:	add    esp,0xc
1000b889:	lea    ecx,[ebp-0xfc]
1000b88f:	push   ecx
1000b890:	push   eax
1000b891:	lea    eax,[ebp-0x1d4]
1000b897:	push   eax
1000b898:	mov    BYTE PTR [ebp-0x4],0xb
1000b89c:	call   0x100064d6
1000b8a1:	add    esp,0xc
1000b8a4:	lea    ecx,[ebp-0xe0]
1000b8aa:	push   ecx
1000b8ab:	push   eax
1000b8ac:	lea    eax,[ebp-0x19c]
1000b8b2:	push   eax
1000b8b3:	mov    BYTE PTR [ebp-0x4],0xc
1000b8b7:	call   0x100064d6
1000b8bc:	add    esp,0xc
1000b8bf:	push   0xffffffff
1000b8c1:	push   ebx
1000b8c2:	push   eax
1000b8c3:	lea    ecx,[ebp-0x2c]
1000b8c6:	mov    BYTE PTR [ebp-0x4],0xd
1000b8ca:	call   0x10001241
1000b8cf:	xor    edi,edi
1000b8d1:	push   ebx
1000b8d2:	inc    edi
1000b8d3:	push   edi
1000b8d4:	lea    ecx,[ebp-0x19c]
1000b8da:	call   0x100012f0
1000b8df:	push   ebx
1000b8e0:	push   edi
1000b8e1:	lea    ecx,[ebp-0x1d4]
1000b8e7:	call   0x100012f0
1000b8ec:	push   ebx
1000b8ed:	push   edi
1000b8ee:	lea    ecx,[ebp-0x20c]
1000b8f4:	call   0x100012f0
1000b8f9:	push   ebx
1000b8fa:	push   edi
1000b8fb:	lea    ecx,[ebp-0x1f0]
1000b901:	call   0x100012f0
1000b906:	push   ebx
1000b907:	push   edi
1000b908:	lea    ecx,[ebp-0x1b8]
1000b90e:	call   0x100012f0
1000b913:	push   ebx
1000b914:	push   edi
1000b915:	lea    ecx,[ebp-0x180]
1000b91b:	mov    BYTE PTR [ebp-0x4],0x7
1000b91f:	call   0x100012f0
1000b924:	jmp    0x1000b929
1000b926:	xor    edi,edi
1000b928:	inc    edi
1000b929:	mov    eax,DWORD PTR [ebp-0x160]
1000b92f:	mov    esi,DWORD PTR [eax+0x4]
1000b932:	lea    eax,[ebp-0x2c]
1000b935:	push   eax
1000b936:	call   0x10007982
1000b93b:	push   ebx
1000b93c:	push   edi
1000b93d:	lea    ecx,[ebp-0x2c]
1000b940:	call   0x100012f0
1000b945:	lea    esi,[ebp-0x158]
1000b94b:	mov    BYTE PTR [ebp-0x4],0x1
1000b94f:	call   0x1000bc65
1000b954:	xor    edi,edi
1000b956:	inc    edi
1000b957:	cmp    BYTE PTR [ebp+0x8],bl
1000b95a:	jne    0x1000ba16
1000b960:	push   0x1006cd08
1000b965:	lea    esi,[ebp-0xa4]
1000b96b:	call   0x1000658e
1000b970:	test   al,al
1000b972:	pop    ecx
1000b973:	jne    0x1000ba16
1000b979:	push   0x1006d7ec
1000b97e:	push   0x4
1000b980:	mov    esi,0x1006d40c
1000b985:	push   esi
1000b986:	call   0x10004258
1000b98b:	add    esp,0xc
1000b98e:	push   eax
1000b98f:	lea    ecx,[ebp-0x180]
1000b995:	call   0x100011cd
1000b99a:	lea    eax,[ebp-0x180]
1000b9a0:	push   eax
1000b9a1:	push   DWORD PTR [ebp-0x15c]
1000b9a7:	mov    BYTE PTR [ebp-0x4],0xe
1000b9ab:	call   0x1000826a
1000b9b0:	push   ebx
1000b9b1:	push   edi
1000b9b2:	lea    ecx,[ebp-0x180]
1000b9b8:	mov    BYTE PTR [ebp-0x4],0x1
1000b9bc:	call   0x100012f0
1000b9c1:	push   0x3340dd1e
1000b9c6:	push   0x1006d828
1000b9cb:	call   0x10004246
1000b9d0:	push   eax
1000b9d1:	push   0x4
1000b9d3:	push   esi
1000b9d4:	call   0x10004258
1000b9d9:	add    esp,0x14
1000b9dc:	push   eax
1000b9dd:	lea    ecx,[ebp-0x180]
1000b9e3:	call   0x100011cd
1000b9e8:	mov    edx,DWORD PTR [ebp-0x15c]
1000b9ee:	push   ebx
1000b9ef:	lea    eax,[ebp-0x180]
1000b9f5:	push   eax
1000b9f6:	lea    ecx,[ebp-0xa4]
1000b9fc:	mov    BYTE PTR [ebp-0x4],0xf
1000ba00:	call   0x10007f61
1000ba05:	push   ebx
1000ba06:	push   edi
1000ba07:	lea    ecx,[ebp-0x180]
1000ba0d:	mov    BYTE PTR [ebp-0x4],0x1
1000ba11:	call   0x100012f0
1000ba16:	push   0x1006cd08
1000ba1b:	lea    esi,[ebp-0x50]
1000ba1e:	call   0x1000658e
1000ba23:	test   al,al
1000ba25:	pop    ecx
1000ba26:	jne    0x1000ba3a
1000ba28:	mov    eax,DWORD PTR [ebp-0x160]
1000ba2e:	mov    esi,DWORD PTR [eax+0x8]
1000ba31:	lea    eax,[ebp-0x50]
1000ba34:	push   eax
1000ba35:	call   0x10007982
1000ba3a:	push   0x1006d868
1000ba3f:	push   0x6
1000ba41:	mov    esi,0x1006d894
1000ba46:	push   esi
1000ba47:	call   0x10004258
1000ba4c:	add    esp,0xc
1000ba4f:	push   eax
1000ba50:	lea    ecx,[ebp-0x180]
1000ba56:	call   0x100011cd
1000ba5b:	push   ebx
1000ba5c:	lea    eax,[ebp-0x180]
1000ba62:	push   eax
1000ba63:	lea    eax,[ebp-0x2c]
1000ba66:	push   eax
1000ba67:	mov    eax,DWORD PTR [ebp-0x15c]
1000ba6d:	mov    BYTE PTR [ebp-0x4],0x10
1000ba71:	call   0x100084cc
1000ba76:	push   ebx
1000ba77:	push   edi
1000ba78:	lea    ecx,[ebp-0x180]
1000ba7e:	mov    BYTE PTR [ebp-0x4],0x12
1000ba82:	call   0x100012f0
1000ba87:	push   0x44fbfe92
1000ba8c:	push   0x1006d89c
1000ba91:	call   0x10004246
1000ba96:	push   0x37df3542
1000ba9b:	push   eax
1000ba9c:	call   0x10004246
1000baa1:	push   0x2f0806ca
1000baa6:	push   eax
1000baa7:	call   0x10004246
1000baac:	push   0x35599f4e
1000bab1:	push   eax
1000bab2:	call   0x10004246
1000bab7:	push   eax
1000bab8:	push   0x6
1000baba:	push   esi
1000babb:	call   0x10004258
1000bac0:	add    esp,0x2c
1000bac3:	push   eax
1000bac4:	lea    ecx,[ebp-0x19c]
1000baca:	call   0x100011cd
1000bacf:	lea    eax,[ebp-0x19c]
1000bad5:	push   eax
1000bad6:	push   DWORD PTR [ebp-0x15c]
1000badc:	mov    BYTE PTR [ebp-0x4],0x13
1000bae0:	call   0x1000826a
1000bae5:	push   ebx
1000bae6:	push   edi
1000bae7:	lea    ecx,[ebp-0x19c]
1000baed:	mov    BYTE PTR [ebp-0x4],0x12
1000baf1:	call   0x100012f0
1000baf6:	cmp    DWORD PTR [ebp-0x18],ebx
1000baf9:	mov    DWORD PTR [ebp-0x164],ebx
1000baff:	jbe    0x1000bbe0
1000bb05:	push   DWORD PTR [ebp-0x164]
1000bb0b:	lea    eax,[ebp-0x2c]
1000bb0e:	push   0x1006d8d4
1000bb13:	push   eax
1000bb14:	call   0x1000c8c0
1000bb19:	cmp    eax,0xffffffff
1000bb1c:	mov    DWORD PTR [ebp-0x160],eax
1000bb22:	jne    0x1000bb2d
1000bb24:	mov    eax,DWORD PTR [ebp-0x18]
1000bb27:	mov    DWORD PTR [ebp-0x160],eax
1000bb2d:	cmp    eax,DWORD PTR [ebp-0x164]
1000bb33:	jbe    0x1000bbce
1000bb39:	push   0x2a4cd0ee
1000bb3e:	push   0x1006d8d8
1000bb43:	call   0x10004246
1000bb48:	push   0xbfb7346
1000bb4d:	push   eax
1000bb4e:	call   0x10004246
1000bb53:	push   eax
1000bb54:	push   0x6
1000bb56:	push   esi
1000bb57:	call   0x10004258
1000bb5c:	add    esp,0x1c
1000bb5f:	push   eax
1000bb60:	lea    ecx,[ebp-0x19c]
1000bb66:	call   0x100011cd
1000bb6b:	mov    eax,DWORD PTR [ebp-0x160]
1000bb71:	sub    eax,DWORD PTR [ebp-0x164]
1000bb77:	mov    BYTE PTR [ebp-0x4],0x14
1000bb7b:	push   eax
1000bb7c:	push   DWORD PTR [ebp-0x164]
1000bb82:	lea    eax,[ebp-0x2c]
1000bb85:	push   eax
1000bb86:	lea    eax,[ebp-0x1b8]
1000bb8c:	call   0x1000c8df
1000bb91:	mov    edx,DWORD PTR [ebp-0x15c]
1000bb97:	push   edi
1000bb98:	lea    ecx,[ebp-0x19c]
1000bb9e:	push   ecx
1000bb9f:	mov    ecx,eax
1000bba1:	mov    BYTE PTR [ebp-0x4],0x15
1000bba5:	call   0x10007f61
1000bbaa:	push   ebx
1000bbab:	push   edi
1000bbac:	lea    ecx,[ebp-0x1b8]
1000bbb2:	call   0x100012f0
1000bbb7:	push   ebx
1000bbb8:	push   edi
1000bbb9:	lea    ecx,[ebp-0x19c]
1000bbbf:	mov    BYTE PTR [ebp-0x4],0x12
1000bbc3:	call   0x100012f0
1000bbc8:	mov    eax,DWORD PTR [ebp-0x160]
1000bbce:	cmp    eax,DWORD PTR [ebp-0x18]
1000bbd1:	lea    ecx,[eax+0x1]
1000bbd4:	mov    DWORD PTR [ebp-0x164],ecx
1000bbda:	jb     0x1000bb05
1000bbe0:	push   ebx
1000bbe1:	push   edi
1000bbe2:	lea    ecx,[ebp-0x2c]
1000bbe5:	call   0x100012f0
1000bbea:	lea    esi,[ebp-0xc0]
1000bbf0:	call   0x1000bbfd
1000bbf5:	call   0x10059b21
1000bbfa:	ret    0x4
1000bbfd:	push   ebx
1000bbfe:	xor    ebx,ebx
1000bc00:	push   ebx
1000bc01:	push   0x1
1000bc03:	lea    ecx,[esi+0x70]
1000bc06:	call   0x100012f0
1000bc0b:	push   ebx
1000bc0c:	push   0x1
1000bc0e:	lea    ecx,[esi+0x54]
1000bc11:	call   0x100012f0
1000bc16:	push   ebx
1000bc17:	push   0x1
1000bc19:	lea    ecx,[esi+0x38]
1000bc1c:	call   0x100012f0
1000bc21:	push   ebx
1000bc22:	push   0x1
1000bc24:	lea    ecx,[esi+0x1c]
1000bc27:	call   0x100012f0
1000bc2c:	push   ebx
1000bc2d:	push   0x1
1000bc2f:	mov    ecx,esi
1000bc31:	call   0x100012f0
1000bc36:	pop    ebx
1000bc37:	ret    
1000bc38:	push   esi
1000bc39:	lea    esi,[edi+0x4]
1000bc3c:	call   0x10004059
1000bc41:	lea    esi,[edi+0x24]
1000bc44:	call   0x10004059
1000bc49:	lea    esi,[edi+0x40]
1000bc4c:	call   0x10004059
1000bc51:	lea    esi,[edi+0x5c]
1000bc54:	call   0x10004059
1000bc59:	lea    esi,[edi+0x78]
1000bc5c:	call   0x10004059
1000bc61:	mov    eax,edi
1000bc63:	pop    esi
1000bc64:	ret    
1000bc65:	push   ebx
1000bc66:	xor    ebx,ebx
1000bc68:	push   ebx
1000bc69:	push   0x1
1000bc6b:	lea    ecx,[esi+0x78]
1000bc6e:	call   0x100012f0
1000bc73:	push   ebx
1000bc74:	push   0x1
1000bc76:	lea    ecx,[esi+0x5c]
1000bc79:	call   0x100012f0
1000bc7e:	push   ebx
1000bc7f:	push   0x1
1000bc81:	lea    ecx,[esi+0x40]
1000bc84:	call   0x100012f0
1000bc89:	push   ebx
1000bc8a:	push   0x1
1000bc8c:	lea    ecx,[esi+0x24]
1000bc8f:	call   0x100012f0
1000bc94:	push   ebx
1000bc95:	push   0x1
1000bc97:	lea    ecx,[esi+0x4]
1000bc9a:	call   0x100012f0
1000bc9f:	pop    ebx
1000bca0:	ret    
1000bca1:	push   0x4
1000bca3:	mov    eax,0x1006115e
1000bca8:	call   0x10059a35
1000bcad:	mov    edi,0x10080da4
1000bcb2:	xor    ebx,ebx
1000bcb4:	mov    DWORD PTR [ebp-0x10],edi
1000bcb7:	mov    DWORD PTR ds:0x10080da4,ebx
1000bcbd:	mov    DWORD PTR [ebp-0x4],ebx
1000bcc0:	mov    DWORD PTR ds:0x10080da8,ebx
1000bcc6:	mov    BYTE PTR [ebp-0x4],0x1
1000bcca:	call   0x1000a7c9
1000bccf:	mov    ds:0x10080db0,eax
1000bcd4:	mov    BYTE PTR [eax+0x39],0x1
1000bcd8:	mov    eax,ds:0x10080db0
1000bcdd:	mov    DWORD PTR [eax+0x4],eax
1000bce0:	mov    eax,ds:0x10080db0
1000bce5:	mov    DWORD PTR [eax],eax
1000bce7:	mov    eax,ds:0x10080db0
1000bcec:	push   ebx
1000bced:	push   ebx
1000bcee:	mov    DWORD PTR [eax+0x8],eax
1000bcf1:	push   ebx
1000bcf2:	mov    DWORD PTR ds:0x10080db4,ebx
1000bcf8:	call   DWORD PTR ds:0x10066074
1000bcfe:	push   eax
1000bcff:	mov    esi,edi
1000bd01:	call   0x10004989
1000bd06:	push   ebx
1000bd07:	push   ebx
1000bd08:	push   edi
1000bd09:	push   0x1000c303
1000bd0e:	push   ebx
1000bd0f:	push   ebx
1000bd10:	call   DWORD PTR ds:0x10066098
1000bd16:	push   eax
1000bd17:	mov    esi,0x10080da8
1000bd1c:	call   0x10004989
1000bd21:	mov    eax,edi
1000bd23:	call   0x10059b0d
1000bd28:	ret    
1000bd29:	push   0x40
1000bd2b:	mov    eax,0x10062063
1000bd30:	call   0x10059a35
1000bd35:	mov    edi,ecx
1000bd37:	lea    eax,[ebp-0x30]
1000bd3a:	push   eax
1000bd3b:	xor    ebx,ebx
1000bd3d:	mov    eax,edi
1000bd3f:	mov    DWORD PTR [ebp-0x14],ebx
1000bd42:	call   0x1000af00
1000bd47:	mov    DWORD PTR [ebp-0x4],ebx
1000bd4a:	push   0x1006cd08
1000bd4f:	mov    esi,eax
1000bd51:	mov    DWORD PTR [ebp-0x14],0x1
1000bd58:	call   0x1000658e
1000bd5d:	test   al,al
1000bd5f:	pop    ecx
1000bd60:	jne    0x1000bd6e
1000bd62:	movzx  eax,WORD PTR [edi+0x34]
1000bd66:	cmp    ax,bx
1000bd69:	mov    BYTE PTR [ebp-0xd],bl
1000bd6c:	jne    0x1000bd72
1000bd6e:	mov    BYTE PTR [ebp-0xd],0x1
1000bd72:	or     DWORD PTR [ebp-0x4],0xffffffff
1000bd76:	xor    esi,esi
1000bd78:	push   ebx
1000bd79:	inc    esi
1000bd7a:	push   esi
1000bd7b:	lea    ecx,[ebp-0x30]
1000bd7e:	call   0x100012f0
1000bd83:	cmp    BYTE PTR [ebp-0xd],bl
1000bd86:	je     0x1000bd8f
1000bd88:	xor    al,al
1000bd8a:	jmp    0x1000be14
1000bd8f:	mov    DWORD PTR [ebp-0x14],ebx
1000bd92:	lea    eax,[ebp-0x14]
1000bd95:	mov    DWORD PTR [ebp-0x4],esi
1000bd98:	mov    esi,DWORD PTR ds:0x10080da4
1000bd9e:	push   eax
1000bd9f:	call   0x1000a997
1000bda4:	test   eax,eax
1000bda6:	je     0x1000bdb8
1000bda8:	cmp    DWORD PTR [ebp-0x14],ebx
1000bdab:	je     0x1000bd88
1000bdad:	push   DWORD PTR [ebp-0x14]
1000bdb0:	call   DWORD PTR ds:0x10066094
1000bdb6:	jmp    0x1000bd88
1000bdb8:	lea    eax,[ebp-0x4c]
1000bdbb:	push   eax
1000bdbc:	mov    eax,edi
1000bdbe:	call   0x1000af00
1000bdc3:	mov    BYTE PTR [ebp-0x4],0x2
1000bdc7:	movzx  ecx,WORD PTR [edi+0x34]
1000bdcb:	push   0x1
1000bdcd:	push   ecx
1000bdce:	push   eax
1000bdcf:	call   0x1000c61d
1000bdd4:	push   ebx
1000bdd5:	push   0x1
1000bdd7:	lea    ecx,[ebp-0x4c]
1000bdda:	mov    esi,eax
1000bddc:	call   0x100012f0
1000bde1:	cmp    esi,ebx
1000bde3:	je     0x1000bda8
1000bde5:	mov    BYTE PTR [esi],bl
1000bde7:	call   0x1002fa00
1000bdec:	mov    ecx,eax
1000bdee:	mov    eax,DWORD PTR [ebp+0x8]
1000bdf1:	mov    edi,edx
1000bdf3:	mov    edx,0x2710
1000bdf8:	mul    edx
1000bdfa:	add    eax,ecx
1000bdfc:	adc    edx,edi
1000bdfe:	cmp    DWORD PTR [ebp-0x14],ebx
1000be01:	mov    DWORD PTR [esi+0x8],eax
1000be04:	mov    DWORD PTR [esi+0xc],edx
1000be07:	je     0x1000be12
1000be09:	push   DWORD PTR [ebp-0x14]
1000be0c:	call   DWORD PTR ds:0x10066094
1000be12:	mov    al,0x1
1000be14:	call   0x10059b0d
1000be19:	ret    0x4
1000be1c:	push   ebp
1000be1d:	mov    ebp,esp
1000be1f:	and    esp,0xfffffff8
1000be22:	push   0xffffffff
1000be24:	push   0x1006111d
1000be29:	mov    eax,fs:0x0
1000be2f:	push   eax
1000be30:	sub    esp,0xc0
1000be36:	mov    eax,ds:0x1007e030
1000be3b:	xor    eax,esp
1000be3d:	mov    DWORD PTR [esp+0xb8],eax
1000be44:	push   ebx
1000be45:	push   esi
1000be46:	push   edi
1000be47:	mov    eax,ds:0x1007e030
1000be4c:	xor    eax,esp
1000be4e:	push   eax
1000be4f:	lea    eax,[esp+0xd0]
1000be56:	mov    fs:0x0,eax
1000be5c:	and    DWORD PTR [esp+0x14],0x0
1000be61:	mov    edi,ecx
1000be63:	lea    eax,[esp+0x1c]
1000be67:	push   eax
1000be68:	mov    eax,edi
1000be6a:	mov    DWORD PTR [esp+0x1c],edi
1000be6e:	call   0x1000af00
1000be73:	and    DWORD PTR [esp+0xd8],0x0
1000be7b:	xor    ebx,ebx
1000be7d:	inc    ebx
1000be7e:	push   0x1006cd08
1000be83:	mov    esi,eax
1000be85:	mov    DWORD PTR [esp+0x18],ebx
1000be89:	call   0x1000658e
1000be8e:	test   al,al
1000be90:	pop    ecx
1000be91:	jne    0x1000bea1
1000be93:	movzx  eax,WORD PTR [edi+0x34]
1000be97:	test   ax,ax
1000be9a:	mov    BYTE PTR [esp+0x13],0x0
1000be9f:	jne    0x1000bea6
1000bea1:	mov    BYTE PTR [esp+0x13],0x1
1000bea6:	or     DWORD PTR [esp+0xd8],0xffffffff
1000beae:	push   0x0
1000beb0:	push   ebx
1000beb1:	lea    ecx,[esp+0x24]
1000beb5:	call   0x100012f0
1000beba:	cmp    BYTE PTR [esp+0x13],0x0
1000bebf:	je     0x1000bec8
1000bec1:	xor    al,al
1000bec3:	jmp    0x1000c0af
1000bec8:	and    DWORD PTR [esp+0x14],0x0
1000becd:	lea    eax,[esp+0x14]
1000bed1:	mov    DWORD PTR [esp+0xd8],ebx
1000bed8:	mov    esi,DWORD PTR ds:0x10080da4
1000bede:	push   eax
1000bedf:	call   0x1000a997
1000bee4:	test   eax,eax
1000bee6:	je     0x1000befb
1000bee8:	cmp    DWORD PTR [esp+0x14],0x0
1000beed:	je     0x1000bec1
1000beef:	push   DWORD PTR [esp+0x14]
1000bef3:	call   DWORD PTR ds:0x10066094
1000bef9:	jmp    0x1000bec1
1000befb:	lea    eax,[esp+0x54]
1000beff:	push   eax
1000bf00:	mov    eax,edi
1000bf02:	call   0x1000af00
1000bf07:	mov    BYTE PTR [esp+0xd8],0x2
1000bf0f:	movzx  ecx,WORD PTR [edi+0x34]
1000bf13:	push   ecx
1000bf14:	push   eax
1000bf15:	lea    ecx,[esp+0xb4]
1000bf1c:	call   0x1000c5c6
1000bf21:	push   0x0
1000bf23:	push   ebx
1000bf24:	lea    ecx,[esp+0x5c]
1000bf28:	mov    BYTE PTR [esp+0xe0],0x4
1000bf30:	call   0x100012f0
1000bf35:	lea    eax,[esp+0xac]
1000bf3c:	push   eax
1000bf3d:	lea    eax,[esp+0x20]
1000bf41:	mov    ebx,0x10080dac
1000bf46:	push   eax
1000bf47:	mov    edi,ebx
1000bf49:	call   0x1000ccb6
1000bf4e:	mov    esi,DWORD PTR ds:0x10080db0
1000bf54:	xor    edi,edi
1000bf56:	cmp    DWORD PTR [esp+0x1c],edi
1000bf5a:	je     0x1000bf62
1000bf5c:	cmp    DWORD PTR [esp+0x1c],ebx
1000bf60:	je     0x1000bf67
1000bf62:	call   0x100433b0
1000bf67:	cmp    DWORD PTR [esp+0x20],esi
1000bf6b:	jne    0x1000c066
1000bf71:	mov    DWORD PTR [esp+0x40],edi
1000bf75:	mov    DWORD PTR [esp+0x44],edi
1000bf79:	mov    DWORD PTR [esp+0x48],edi
1000bf7d:	push   edi
1000bf7e:	push   DWORD PTR [ebp+0x8]
1000bf81:	mov    BYTE PTR [esp+0xe0],0x5
1000bf89:	push   DWORD PTR [esp+0x20]
1000bf8d:	lea    esi,[esp+0x28]
1000bf91:	call   0x1000c571
1000bf96:	push   eax
1000bf97:	lea    eax,[esp+0x40]
1000bf9b:	call   0x1000ce1a
1000bfa0:	sub    esp,0x10
1000bfa3:	mov    eax,esp
1000bfa5:	mov    DWORD PTR [esp+0x28],esp
1000bfa9:	push   eax
1000bfaa:	lea    ecx,[esp+0x50]
1000bfae:	call   0x1000cd24
1000bfb3:	sub    esp,0x1c
1000bfb6:	mov    BYTE PTR [esp+0x104],0x6
1000bfbe:	lea    eax,[esp+0xd8]
1000bfc5:	mov    ecx,esp
1000bfc7:	mov    DWORD PTR [esp+0x48],esp
1000bfcb:	push   eax
1000bfcc:	call   0x100011a7
1000bfd1:	lea    edi,[esp+0xac]
1000bfd8:	mov    BYTE PTR [esp+0x104],0x5
1000bfe0:	call   0x1000d730
1000bfe5:	add    esp,0x2c
1000bfe8:	mov    esi,eax
1000bfea:	push   esi
1000bfeb:	lea    ecx,[esp+0x58]
1000bfef:	mov    BYTE PTR [esp+0xdc],0x7
1000bff7:	call   0x100011a7
1000bffc:	lea    eax,[esp+0x70]
1000c000:	lea    ecx,[esi+0x1c]
1000c003:	push   eax
1000c004:	mov    BYTE PTR [esp+0xdc],0x8
1000c00c:	call   0x1000cd24
1000c011:	lea    eax,[esp+0x54]
1000c015:	push   eax
1000c016:	lea    edi,[esp+0x20]
1000c01a:	mov    BYTE PTR [esp+0xdc],0x9
1000c022:	call   0x1000c96f
1000c027:	lea    esi,[esp+0x70]
1000c02b:	call   0x1000cdca
1000c030:	push   0x0
1000c032:	push   0x1
1000c034:	lea    ecx,[esp+0x5c]
1000c038:	call   0x100012f0
1000c03d:	lea    esi,[esp+0x9c]
1000c044:	call   0x1000cdca
1000c049:	push   0x0
1000c04b:	push   0x1
1000c04d:	lea    ecx,[esp+0x88]
1000c054:	call   0x100012f0
1000c059:	lea    esi,[esp+0x3c]
1000c05d:	call   0x1000cdca
1000c062:	xor    edi,edi
1000c064:	jmp    0x1000c089
1000c066:	push   edi
1000c067:	push   DWORD PTR [ebp+0x8]
1000c06a:	lea    esi,[esp+0x44]
1000c06e:	push   DWORD PTR [esp+0x20]
1000c072:	call   0x1000c571
1000c077:	push   eax
1000c078:	lea    esi,[esp+0x20]
1000c07c:	call   0x1002088e
1000c081:	add    eax,0x1c
1000c084:	call   0x1000ce1a
1000c089:	call   0x10002080
1000c08e:	push   edi
1000c08f:	push   0x1
1000c091:	lea    ecx,[esp+0xb4]
1000c098:	call   0x100012f0
1000c09d:	cmp    DWORD PTR [esp+0x14],edi
1000c0a1:	je     0x1000c0ad
1000c0a3:	push   DWORD PTR [esp+0x14]
1000c0a7:	call   DWORD PTR ds:0x10066094
1000c0ad:	mov    al,0x1
1000c0af:	mov    ecx,DWORD PTR [esp+0xd0]
1000c0b6:	mov    DWORD PTR fs:0x0,ecx
1000c0bd:	pop    ecx
1000c0be:	pop    edi
1000c0bf:	pop    esi
1000c0c0:	pop    ebx
1000c0c1:	mov    ecx,DWORD PTR [esp+0xb8]
1000c0c8:	xor    ecx,esp
1000c0ca:	call   0x10042e97
1000c0cf:	mov    esp,ebp
1000c0d1:	pop    ebp
1000c0d2:	ret    0x4
1000c0d5:	push   ebp
1000c0d6:	mov    ebp,esp
1000c0d8:	and    esp,0xfffffff8
1000c0db:	push   0xffffffff
1000c0dd:	push   0x10061081
1000c0e2:	mov    eax,fs:0x0
1000c0e8:	push   eax
1000c0e9:	sub    esp,0x60
1000c0ec:	mov    eax,ds:0x1007e030
1000c0f1:	xor    eax,esp
1000c0f3:	mov    DWORD PTR [esp+0x58],eax
1000c0f7:	push   ebx
1000c0f8:	push   esi
1000c0f9:	push   edi
1000c0fa:	mov    eax,ds:0x1007e030
1000c0ff:	xor    eax,esp
1000c101:	push   eax
1000c102:	lea    eax,[esp+0x70]
1000c106:	mov    fs:0x0,eax
1000c10c:	and    DWORD PTR [esp+0x14],0x0
1000c111:	mov    edi,ecx
1000c113:	lea    eax,[esp+0x30]
1000c117:	push   eax
1000c118:	mov    eax,edi
1000c11a:	mov    DWORD PTR [esp+0x24],edi
1000c11e:	call   0x1000af00
1000c123:	and    DWORD PTR [esp+0x78],0x0
1000c128:	xor    ebx,ebx
1000c12a:	inc    ebx
1000c12b:	push   0x1006cd08
1000c130:	mov    esi,eax
1000c132:	mov    DWORD PTR [esp+0x18],ebx
1000c136:	call   0x1000658e
1000c13b:	test   al,al
1000c13d:	pop    ecx
1000c13e:	jne    0x1000c14e
1000c140:	movzx  eax,WORD PTR [edi+0x34]
1000c144:	test   ax,ax
1000c147:	mov    BYTE PTR [esp+0x13],0x0
1000c14c:	jne    0x1000c153
1000c14e:	mov    BYTE PTR [esp+0x13],0x1
1000c153:	or     DWORD PTR [esp+0x78],0xffffffff
1000c158:	push   0x0
1000c15a:	push   ebx
1000c15b:	lea    ecx,[esp+0x38]
1000c15f:	call   0x100012f0
1000c164:	cmp    BYTE PTR [esp+0x13],0x0
1000c169:	je     0x1000c172
1000c16b:	xor    al,al
1000c16d:	jmp    0x1000c2e5
1000c172:	and    DWORD PTR [esp+0x14],0x0
1000c177:	lea    eax,[esp+0x14]
1000c17b:	mov    DWORD PTR [esp+0x78],ebx
1000c17f:	mov    esi,DWORD PTR ds:0x10080da4
1000c185:	push   eax
1000c186:	call   0x1000a997
1000c18b:	test   eax,eax
1000c18d:	je     0x1000c1a2
1000c18f:	cmp    DWORD PTR [esp+0x14],0x0
1000c194:	je     0x1000c16b
1000c196:	push   DWORD PTR [esp+0x14]
1000c19a:	call   DWORD PTR ds:0x10066094
1000c1a0:	jmp    0x1000c16b
1000c1a2:	lea    eax,[esp+0x30]
1000c1a6:	push   eax
1000c1a7:	mov    eax,edi
1000c1a9:	call   0x1000af00
1000c1ae:	mov    BYTE PTR [esp+0x78],0x2
1000c1b3:	movzx  ecx,WORD PTR [edi+0x34]
1000c1b7:	push   ecx
1000c1b8:	push   eax
1000c1b9:	lea    ecx,[esp+0x54]
1000c1bd:	call   0x1000c5c6
1000c1c2:	push   0x0
1000c1c4:	push   ebx
1000c1c5:	lea    ecx,[esp+0x38]
1000c1c9:	mov    BYTE PTR [esp+0x80],0x4
1000c1d1:	call   0x100012f0
1000c1d6:	lea    eax,[esp+0x4c]
1000c1da:	push   eax
1000c1db:	lea    eax,[esp+0x1c]
1000c1df:	push   eax
1000c1e0:	mov    edi,0x10080dac
1000c1e5:	call   0x1000ccb6
1000c1ea:	cmp    DWORD PTR [esp+0x18],0x0
1000c1ef:	mov    esi,DWORD PTR ds:0x10080db0
1000c1f5:	je     0x1000c1fd
1000c1f7:	cmp    DWORD PTR [esp+0x18],edi
1000c1fb:	je     0x1000c202
1000c1fd:	call   0x100433b0
1000c202:	cmp    DWORD PTR [esp+0x1c],esi
1000c206:	jne    0x1000c219
1000c208:	push   0x0
1000c20a:	push   ebx
1000c20b:	lea    ecx,[esp+0x54]
1000c20f:	call   0x100012f0
1000c214:	jmp    0x1000c18f
1000c219:	lea    esi,[esp+0x18]
1000c21d:	call   0x1002088e
1000c222:	mov    ebx,eax
1000c224:	add    ebx,0x1c
1000c227:	mov    eax,ebx
1000c229:	xor    edi,edi
1000c22b:	call   0x1000cde5
1000c230:	test   eax,eax
1000c232:	je     0x1000c251
1000c234:	push   edi
1000c235:	mov    esi,ebx
1000c237:	call   0x1000cdfb
1000c23c:	mov    ecx,DWORD PTR [esp+0x20]
1000c240:	cmp    DWORD PTR [eax+0x10],ecx
1000c243:	je     0x1000c257
1000c245:	mov    eax,ebx
1000c247:	inc    edi
1000c248:	call   0x1000cde5
1000c24d:	cmp    edi,eax
1000c24f:	jne    0x1000c234
1000c251:	push   0x0
1000c253:	push   0x1
1000c255:	jmp    0x1000c20b
1000c257:	mov    esi,DWORD PTR [ebx+0x4]
1000c25a:	cmp    esi,DWORD PTR [ebx+0x8]
1000c25d:	jbe    0x1000c264
1000c25f:	call   0x100433b0
1000c264:	lea    eax,[esp+0x20]
1000c268:	push   eax
1000c269:	mov    ecx,edi
1000c26b:	lea    eax,[esp+0x2c]
1000c26f:	mov    DWORD PTR [esp+0x2c],ebx
1000c273:	mov    DWORD PTR [esp+0x30],esi
1000c277:	call   0x1000cede
1000c27c:	lea    esi,[esp+0x20]
1000c280:	call   0x1000cec1
1000c285:	mov    edi,eax
1000c287:	call   0x1000c5ab
1000c28c:	push   DWORD PTR [esp+0x24]
1000c290:	lea    eax,[esp+0x2c]
1000c294:	push   DWORD PTR [esp+0x24]
1000c298:	push   eax
1000c299:	call   0x1000ce7b
1000c29e:	mov    eax,ebx
1000c2a0:	call   0x1000cde5
1000c2a5:	test   eax,eax
1000c2a7:	jne    0x1000c2c0
1000c2a9:	push   DWORD PTR [esp+0x1c]
1000c2ad:	lea    eax,[esp+0x2c]
1000c2b1:	push   DWORD PTR [esp+0x1c]
1000c2b5:	push   eax
1000c2b6:	push   0x10080dac
1000c2bb:	call   0x1000ca16
1000c2c0:	call   0x10002080
1000c2c5:	push   0x0
1000c2c7:	push   0x1
1000c2c9:	lea    ecx,[esp+0x54]
1000c2cd:	call   0x100012f0
1000c2d2:	cmp    DWORD PTR [esp+0x14],0x0
1000c2d7:	je     0x1000c2e3
1000c2d9:	push   DWORD PTR [esp+0x14]
1000c2dd:	call   DWORD PTR ds:0x10066094
1000c2e3:	mov    al,0x1
1000c2e5:	mov    ecx,DWORD PTR [esp+0x70]
1000c2e9:	mov    DWORD PTR fs:0x0,ecx
1000c2f0:	pop    ecx
1000c2f1:	pop    edi
1000c2f2:	pop    esi
1000c2f3:	pop    ebx
1000c2f4:	mov    ecx,DWORD PTR [esp+0x58]
1000c2f8:	xor    ecx,esp
1000c2fa:	call   0x10042e97
1000c2ff:	mov    esp,ebp
1000c301:	pop    ebp
1000c302:	ret    
1000c303:	push   ebp
1000c304:	mov    ebp,esp
1000c306:	and    esp,0xfffffff8
1000c309:	push   0xffffffff
1000c30b:	push   0x10061035
1000c310:	mov    eax,fs:0x0
1000c316:	push   eax
1000c317:	sub    esp,0xc
1000c31a:	push   esi
1000c31b:	push   edi
1000c31c:	mov    eax,ds:0x1007e030
1000c321:	xor    eax,esp
1000c323:	push   eax
1000c324:	lea    eax,[esp+0x18]
1000c328:	mov    fs:0x0,eax
1000c32e:	lea    eax,[esp+0x13]
1000c332:	push   eax
1000c333:	call   0x10037950
1000c338:	and    DWORD PTR [esp+0x20],0x0
1000c33d:	mov    esi,DWORD PTR ds:0x10066084
1000c343:	mov    edi,0x7d0
1000c348:	jmp    0x1000c352
1000c34a:	mov    ecx,DWORD PTR [ebp+0x8]
1000c34d:	call   0x1000c37a
1000c352:	push   edi
1000c353:	push   DWORD PTR ds:0x10080fa0
1000c359:	call   esi
1000c35b:	test   eax,eax
1000c35d:	jne    0x1000c34a
1000c35f:	call   0x10037970
1000c364:	xor    eax,eax
1000c366:	mov    ecx,DWORD PTR [esp+0x18]
1000c36a:	mov    DWORD PTR fs:0x0,ecx
1000c371:	pop    ecx
1000c372:	pop    edi
1000c373:	pop    esi
1000c374:	mov    esp,ebp
1000c376:	pop    ebp
1000c377:	ret    0x4
1000c37a:	push   0x14c
1000c37f:	mov    eax,0x10061012
1000c384:	call   0x10059a35
1000c389:	mov    edi,ecx
1000c38b:	call   0x1002fa00
1000c390:	xor    ebx,ebx
1000c392:	mov    DWORD PTR [ebp-0x30],eax
1000c395:	mov    DWORD PTR [ebp-0x2c],edx
1000c398:	mov    DWORD PTR [ebp-0x18],ebx
1000c39b:	lea    eax,[ebp-0x18]
1000c39e:	mov    DWORD PTR [ebp-0x4],ebx
1000c3a1:	mov    esi,DWORD PTR [edi]
1000c3a3:	push   eax
1000c3a4:	call   0x1000a997
1000c3a9:	test   eax,eax
1000c3ab:	je     0x1000c3b5
1000c3ad:	cmp    DWORD PTR [ebp-0x18],ebx
1000c3b0:	jmp    0x1000c560
1000c3b5:	mov    eax,DWORD PTR [edi+0xc]
1000c3b8:	mov    eax,DWORD PTR [eax]
1000c3ba:	add    edi,0x8
1000c3bd:	mov    DWORD PTR [ebp-0x28],edi
1000c3c0:	mov    DWORD PTR [ebp-0x20],edi
1000c3c3:	mov    DWORD PTR [ebp-0x1c],eax
1000c3c6:	cmp    DWORD PTR [ebp-0x20],0x0
1000c3ca:	mov    esi,DWORD PTR [edi+0x4]
1000c3cd:	je     0x1000c3d4
1000c3cf:	cmp    DWORD PTR [ebp-0x20],edi
1000c3d2:	je     0x1000c3d9
1000c3d4:	call   0x100433b0
1000c3d9:	cmp    DWORD PTR [ebp-0x1c],esi
1000c3dc:	je     0x1000c55c
1000c3e2:	lea    esi,[ebp-0x20]
1000c3e5:	call   0x1002088e
1000c3ea:	mov    ebx,eax
1000c3ec:	mov    esi,DWORD PTR [ebx+0x20]
1000c3ef:	add    ebx,0x1c
1000c3f2:	cmp    esi,DWORD PTR [ebx+0x8]
1000c3f5:	jbe    0x1000c3fc
1000c3f7:	call   0x100433b0
1000c3fc:	mov    DWORD PTR [ebp-0x14],ebx
1000c3ff:	mov    DWORD PTR [ebp-0x10],esi
1000c402:	mov    esi,DWORD PTR [ebx+0x8]
1000c405:	cmp    DWORD PTR [ebx+0x4],esi
1000c408:	jbe    0x1000c40f
1000c40a:	call   0x100433b0
1000c40f:	cmp    DWORD PTR [ebp-0x14],0x0
1000c413:	je     0x1000c41a
1000c415:	cmp    DWORD PTR [ebp-0x14],ebx
1000c418:	je     0x1000c41f
1000c41a:	call   0x100433b0
1000c41f:	cmp    DWORD PTR [ebp-0x10],esi
1000c422:	je     0x1000c521
1000c428:	lea    esi,[ebp-0x14]
1000c42b:	call   0x1000cec1
1000c430:	cmp    BYTE PTR [eax],0x0
1000c433:	jne    0x1000c47c
1000c435:	call   0x1000cec1
1000c43a:	mov    ecx,DWORD PTR [eax+0xc]
1000c43d:	cmp    ecx,DWORD PTR [ebp-0x2c]
1000c440:	ja     0x1000c47c
1000c442:	jb     0x1000c44c
1000c444:	mov    eax,DWORD PTR [eax+0x8]
1000c447:	cmp    eax,DWORD PTR [ebp-0x30]
1000c44a:	jae    0x1000c47c
1000c44c:	call   0x10002080
1000c451:	lea    esi,[ebp-0x14]
1000c454:	call   0x1000cec1
1000c459:	mov    edi,eax
1000c45b:	call   0x1000c5ab
1000c460:	lea    eax,[ebp-0x50]
1000c463:	push   DWORD PTR [ebp-0x10]
1000c466:	push   DWORD PTR [ebp-0x14]
1000c469:	push   eax
1000c46a:	call   0x1000ce7b
1000c46f:	mov    ecx,DWORD PTR [eax]
1000c471:	mov    eax,DWORD PTR [eax+0x4]
1000c474:	mov    DWORD PTR [ebp-0x14],ecx
1000c477:	mov    DWORD PTR [ebp-0x10],eax
1000c47a:	jmp    0x1000c402
1000c47c:	lea    esi,[ebp-0x14]
1000c47f:	call   0x1000cec1
1000c484:	cmp    BYTE PTR [eax],0x0
1000c487:	jne    0x1000c4ff
1000c489:	call   0x1000cec1
1000c48e:	mov    esi,DWORD PTR [eax+0x10]
1000c491:	mov    eax,DWORD PTR [esi+0x8]
1000c494:	and    DWORD PTR [ebp-0x38],0x0
1000c498:	mov    DWORD PTR [ebp-0x154],eax
1000c49e:	xor    eax,eax
1000c4a0:	lea    edi,[ebp-0x34]
1000c4a3:	stos   DWORD PTR es:[edi],eax
1000c4a4:	lea    eax,[ebp-0x38]
1000c4a7:	push   eax
1000c4a8:	xor    eax,eax
1000c4aa:	push   eax
1000c4ab:	push   eax
1000c4ac:	lea    ecx,[ebp-0x158]
1000c4b2:	push   ecx
1000c4b3:	push   eax
1000c4b4:	mov    DWORD PTR [ebp-0x158],0x1
1000c4be:	call   DWORD PTR ds:0x100663ec
1000c4c4:	cmp    eax,0x1
1000c4c7:	jne    0x1000c4ff
1000c4c9:	mov    esi,DWORD PTR [esi+0x8]
1000c4cc:	push   0x2
1000c4ce:	push   eax
1000c4cf:	lea    eax,[ebp-0x21]
1000c4d2:	push   eax
1000c4d3:	push   esi
1000c4d4:	call   DWORD PTR ds:0x100663c8
1000c4da:	test   eax,eax
1000c4dc:	setne  al
1000c4df:	test   al,al
1000c4e1:	jne    0x1000c4ff
1000c4e3:	call   0x10002080
1000c4e8:	lea    esi,[ebp-0x14]
1000c4eb:	call   0x1000cec1
1000c4f0:	mov    edi,eax
1000c4f2:	call   0x1000c5ab
1000c4f7:	lea    eax,[ebp-0x40]
1000c4fa:	jmp    0x1000c463
1000c4ff:	mov    esi,DWORD PTR [ebp-0x14]
1000c502:	test   esi,esi
1000c504:	jne    0x1000c50b
1000c506:	call   0x100433b0
1000c50b:	mov    eax,DWORD PTR [ebp-0x10]
1000c50e:	cmp    eax,DWORD PTR [esi+0x8]
1000c511:	jb     0x1000c518
1000c513:	call   0x100433b0
1000c518:	add    DWORD PTR [ebp-0x10],0x18
1000c51c:	jmp    0x1000c402
1000c521:	mov    eax,ebx
1000c523:	call   0x1000cde5
1000c528:	test   eax,eax
1000c52a:	jne    0x1000c54c
1000c52c:	push   DWORD PTR [ebp-0x1c]
1000c52f:	mov    edi,DWORD PTR [ebp-0x28]
1000c532:	push   DWORD PTR [ebp-0x20]
1000c535:	lea    eax,[ebp-0x48]
1000c538:	push   eax
1000c539:	push   edi
1000c53a:	call   0x1000ca16
1000c53f:	mov    ecx,DWORD PTR [eax]
1000c541:	mov    eax,DWORD PTR [eax+0x4]
1000c544:	mov    DWORD PTR [ebp-0x20],ecx
1000c547:	jmp    0x1000c3c3
1000c54c:	lea    esi,[ebp-0x20]
1000c54f:	call   0x10009c42
1000c554:	mov    edi,DWORD PTR [ebp-0x28]
1000c557:	jmp    0x1000c3c6
1000c55c:	cmp    DWORD PTR [ebp-0x18],0x0
1000c560:	je     0x1000c56b
1000c562:	push   DWORD PTR [ebp-0x18]
1000c565:	call   DWORD PTR ds:0x10066094
1000c56b:	call   0x10059b0d
1000c570:	ret    
1000c571:	push   ebx
1000c572:	push   edi
1000c573:	mov    BYTE PTR [esi],0x0
1000c576:	call   0x1002fa00
1000c57b:	push   0x0
1000c57d:	push   0x2710
1000c582:	push   DWORD PTR [esp+0x1c]
1000c586:	mov    edi,eax
1000c588:	push   DWORD PTR [esp+0x1c]
1000c58c:	mov    ebx,edx
1000c58e:	call   0x1004f400
1000c593:	add    eax,edi
1000c595:	mov    DWORD PTR [esi+0x8],eax
1000c598:	mov    eax,DWORD PTR [esp+0xc]
1000c59c:	adc    edx,ebx
1000c59e:	pop    edi
1000c59f:	mov    DWORD PTR [esi+0x10],eax
1000c5a2:	mov    DWORD PTR [esi+0xc],edx
1000c5a5:	mov    eax,esi
1000c5a7:	pop    ebx
1000c5a8:	ret    0xc
1000c5ab:	push   esi
1000c5ac:	mov    esi,DWORD PTR [edi+0x10]
1000c5af:	test   esi,esi
1000c5b1:	je     0x1000c5c4
1000c5b3:	push   esi
1000c5b4:	call   0x1000c6d5
1000c5b9:	push   esi
1000c5ba:	call   0x10042e92
1000c5bf:	and    DWORD PTR [edi+0x10],0x0
1000c5c3:	pop    ecx
1000c5c4:	pop    esi
1000c5c5:	ret    
1000c5c6:	push   0x50
1000c5c8:	mov    eax,0x10060fe5
1000c5cd:	call   0x10059a9e
1000c5d2:	mov    eax,DWORD PTR [ebp+0x8]
1000c5d5:	and    DWORD PTR [ebp-0x4],0x0
1000c5d9:	and    DWORD PTR [ebp-0x58],0x0
1000c5dd:	mov    esi,ecx
1000c5df:	push   eax
1000c5e0:	mov    DWORD PTR [ebp-0x5c],esi
1000c5e3:	call   0x100011a7
1000c5e8:	and    DWORD PTR [ebp-0x4],0x0
1000c5ec:	xor    ebx,ebx
1000c5ee:	inc    ebx
1000c5ef:	push   0x3a
1000c5f1:	mov    DWORD PTR [ebp-0x58],ebx
1000c5f4:	call   0x1000cf52
1000c5f9:	push   0xa
1000c5fb:	lea    eax,[ebp-0x54]
1000c5fe:	push   eax
1000c5ff:	movzx  eax,WORD PTR [ebp+0xc]
1000c603:	push   eax
1000c604:	call   0x10045af6
1000c609:	add    esp,0xc
1000c60c:	push   eax
1000c60d:	push   esi
1000c60e:	call   0x10004090
1000c613:	mov    eax,esi
1000c615:	call   0x10059b21
1000c61a:	ret    0x8
1000c61d:	push   0x28
1000c61f:	mov    eax,0x10062015
1000c624:	call   0x10059a9e
1000c629:	push   DWORD PTR [ebp+0xc]
1000c62c:	lea    ecx,[ebp-0x2c]
1000c62f:	push   DWORD PTR [ebp+0x8]
1000c632:	call   0x1000c5c6
1000c637:	and    DWORD PTR [ebp-0x4],0x0
1000c63b:	lea    eax,[ebp-0x2c]
1000c63e:	push   eax
1000c63f:	lea    eax,[ebp-0x34]
1000c642:	push   eax
1000c643:	mov    edi,0x10080dac
1000c648:	call   0x1000ccb6
1000c64d:	cmp    DWORD PTR [ebp-0x34],0x0
1000c651:	mov    esi,DWORD PTR ds:0x10080db0
1000c657:	je     0x1000c65e
1000c659:	cmp    DWORD PTR [ebp-0x34],edi
1000c65c:	je     0x1000c663
1000c65e:	call   0x100433b0
1000c663:	cmp    DWORD PTR [ebp-0x30],esi
1000c666:	jne    0x1000c680
1000c668:	xor    esi,esi
1000c66a:	push   0x0
1000c66c:	push   0x1
1000c66e:	lea    ecx,[ebp-0x2c]
1000c671:	call   0x100012f0
1000c676:	mov    eax,esi
1000c678:	call   0x10059b21
1000c67d:	ret    0xc
1000c680:	lea    esi,[ebp-0x34]
1000c683:	call   0x1002088e
1000c688:	mov    esi,eax
1000c68a:	add    esi,0x1c
1000c68d:	mov    eax,esi
1000c68f:	xor    edi,edi
1000c691:	call   0x1000cde5
1000c696:	test   eax,eax
1000c698:	je     0x1000c668
1000c69a:	push   edi
1000c69b:	call   0x1000cdfb
1000c6a0:	mov    al,BYTE PTR [eax]
1000c6a2:	cmp    al,BYTE PTR [ebp+0x10]
1000c6a5:	je     0x1000c6b5
1000c6a7:	mov    eax,esi
1000c6a9:	inc    edi
1000c6aa:	call   0x1000cde5
1000c6af:	cmp    edi,eax
1000c6b1:	jne    0x1000c69a
1000c6b3:	jmp    0x1000c668
1000c6b5:	push   edi
1000c6b6:	call   0x1000cdfb
1000c6bb:	mov    esi,eax
1000c6bd:	jmp    0x1000c66a
1000c6bf:	push   esi
1000c6c0:	lea    esi,[edi+0x1c]
1000c6c3:	call   0x1000cdca
1000c6c8:	push   0x0
1000c6ca:	push   0x1
1000c6cc:	mov    ecx,edi
1000c6ce:	call   0x100012f0
1000c6d3:	pop    esi
1000c6d4:	ret    
1000c6d5:	push   0x0
1000c6d7:	mov    eax,0x10060fb1
1000c6dc:	call   0x10059a35
1000c6e1:	mov    esi,DWORD PTR [ebp+0x8]
1000c6e4:	xor    edi,edi
1000c6e6:	push   edi
1000c6e7:	push   0x1
1000c6e9:	lea    ecx,[esi+0x38]
1000c6ec:	mov    DWORD PTR [ebp-0x4],0x3
1000c6f3:	call   0x100012f0
1000c6f8:	push   edi
1000c6f9:	push   0x1
1000c6fb:	lea    ecx,[esi+0x18]
1000c6fe:	call   0x100012f0
1000c703:	push   DWORD PTR [esi+0x14]
1000c706:	call   0x10042e92
1000c70b:	pop    ecx
1000c70c:	lea    eax,[esi+0x10]
1000c70f:	call   0x1000c921
1000c714:	mov    BYTE PTR [ebp-0x4],0x2
1000c718:	mov    ecx,DWORD PTR [esi+0xc]
1000c71b:	cmp    ecx,edi
1000c71d:	je     0x1000c725
1000c71f:	mov    eax,DWORD PTR [ecx]
1000c721:	push   0x1
1000c723:	call   DWORD PTR [eax]
1000c725:	mov    eax,DWORD PTR [esi+0x8]
1000c728:	cmp    eax,edi
1000c72a:	je     0x1000c733
1000c72c:	push   eax
1000c72d:	call   DWORD PTR ds:0x100663b8
1000c733:	mov    DWORD PTR [esi+0x8],edi
1000c736:	mov    eax,DWORD PTR [esi+0x4]
1000c739:	cmp    eax,edi
1000c73b:	je     0x1000c744
1000c73d:	push   eax
1000c73e:	call   DWORD PTR ds:0x100663d4
1000c744:	mov    DWORD PTR [esi+0x4],edi
1000c747:	mov    eax,DWORD PTR [esi]
1000c749:	cmp    eax,edi
1000c74b:	je     0x1000c754
1000c74d:	push   eax
1000c74e:	call   DWORD PTR ds:0x10066070
1000c754:	mov    DWORD PTR [esi],edi
1000c756:	call   0x10059b0d
1000c75b:	ret    0x4
1000c75e:	push   0x10
1000c760:	mov    eax,0x10064818
1000c765:	call   0x10059a35
1000c76a:	xor    ebx,ebx
1000c76c:	mov    DWORD PTR [ebp-0x18],ebx
1000c76f:	mov    DWORD PTR [ebp-0x14],ebx
1000c772:	mov    DWORD PTR [ebp-0x4],0x1
1000c779:	mov    DWORD PTR [ebp-0x10],ebx
1000c77c:	lea    eax,[ebp-0x10]
1000c77f:	mov    BYTE PTR [ebp-0x4],0x2
1000c783:	mov    esi,DWORD PTR ds:0x10080da4
1000c789:	push   eax
1000c78a:	call   0x1000a997
1000c78f:	test   eax,eax
1000c791:	je     0x1000c7a7
1000c793:	mov    BYTE PTR [ebp-0x4],0x1
1000c797:	cmp    DWORD PTR [ebp-0x10],ebx
1000c79a:	je     0x1000c7dc
1000c79c:	push   DWORD PTR [ebp-0x10]
1000c79f:	call   DWORD PTR ds:0x10066094
1000c7a5:	jmp    0x1000c7dc
1000c7a7:	push   ebx
1000c7a8:	push   DWORD PTR [ebp+0x10]
1000c7ab:	push   DWORD PTR [ebp+0xc]
1000c7ae:	call   0x1000c61d
1000c7b3:	mov    esi,eax
1000c7b5:	cmp    esi,ebx
1000c7b7:	je     0x1000c793
1000c7b9:	mov    BYTE PTR [esi],0x1
1000c7bc:	call   0x10002080
1000c7c1:	mov    esi,DWORD PTR [esi+0x10]
1000c7c4:	mov    BYTE PTR [ebp-0x4],0x1
1000c7c8:	cmp    DWORD PTR [ebp-0x10],ebx
1000c7cb:	je     0x1000c7d6
1000c7cd:	push   DWORD PTR [ebp-0x10]
1000c7d0:	call   DWORD PTR ds:0x10066094
1000c7d6:	cmp    esi,ebx
1000c7d8:	mov    edi,esi
1000c7da:	jne    0x1000c7f8
1000c7dc:	push   0x5c
1000c7de:	call   0x1004349e
1000c7e3:	cmp    eax,ebx
1000c7e5:	pop    ecx
1000c7e6:	je     0x1000c7f1
1000c7e8:	mov    edi,eax
1000c7ea:	call   0x1000aae5
1000c7ef:	jmp    0x1000c7f3
1000c7f1:	xor    eax,eax
1000c7f3:	mov    DWORD PTR [ebp-0x14],eax
1000c7f6:	mov    edi,eax
1000c7f8:	push   DWORD PTR [ebp+0x24]
1000c7fb:	mov    ecx,DWORD PTR [ebp+0x28]
1000c7fe:	push   DWORD PTR [ebp+0x18]
1000c801:	lea    eax,[ebp-0x10]
1000c804:	push   DWORD PTR [ebp+0x14]
1000c807:	mov    edx,edi
1000c809:	push   DWORD PTR [ebp+0x10]
1000c80c:	push   DWORD PTR [ebp+0xc]
1000c80f:	push   eax
1000c810:	call   0x1000ad50
1000c815:	mov    ecx,DWORD PTR [eax]
1000c817:	mov    esi,ecx
1000c819:	mov    DWORD PTR [eax],ebx
1000c81b:	mov    DWORD PTR [ebp-0x1c],esi
1000c81e:	mov    BYTE PTR [ebp-0x4],0x3
1000c822:	push   DWORD PTR [ebp-0x10]
1000c825:	call   0x10042e92
1000c82a:	cmp    esi,ebx
1000c82c:	pop    ecx
1000c82d:	jne    0x1000c860
1000c82f:	mov    esi,DWORD PTR [ebp-0x14]
1000c832:	cmp    esi,ebx
1000c834:	jne    0x1000c83d
1000c836:	mov    ecx,edi
1000c838:	call   0x1000c0d5
1000c83d:	mov    edi,DWORD PTR [ebp+0x8]
1000c840:	mov    DWORD PTR [edi],ebx
1000c842:	push   ebx
1000c843:	mov    DWORD PTR [ebp-0x18],0x1
1000c84a:	call   0x10042e92
1000c84f:	cmp    esi,ebx
1000c851:	pop    ecx
1000c852:	mov    BYTE PTR [ebp-0x4],bl
1000c855:	je     0x1000c8b8
1000c857:	push   esi
1000c858:	call   0x1000c6d5
1000c85d:	push   esi
1000c85e:	jmp    0x1000c8b2
1000c860:	mov    al,BYTE PTR [edi+0x58]
1000c863:	neg    al
1000c865:	mov    ecx,edi
1000c867:	sbb    eax,eax
1000c869:	and    eax,0x3a98
1000c86e:	add    eax,0x1388
1000c873:	cmp    DWORD PTR [ebp-0x14],ebx
1000c876:	push   eax
1000c877:	je     0x1000c887
1000c879:	call   0x1000be1c
1000c87e:	test   al,al
1000c880:	je     0x1000c88c
1000c882:	mov    DWORD PTR [ebp-0x14],ebx
1000c885:	jmp    0x1000c88c
1000c887:	call   0x1000bd29
1000c88c:	mov    edi,DWORD PTR [ebp+0x8]
1000c88f:	push   ebx
1000c890:	mov    DWORD PTR [edi],esi
1000c892:	mov    DWORD PTR [ebp-0x18],0x1
1000c899:	call   0x10042e92
1000c89e:	mov    BYTE PTR [ebp-0x4],bl
1000c8a1:	cmp    DWORD PTR [ebp-0x14],ebx
1000c8a4:	pop    ecx
1000c8a5:	je     0x1000c8b8
1000c8a7:	push   DWORD PTR [ebp-0x14]
1000c8aa:	call   0x1000c6d5
1000c8af:	push   DWORD PTR [ebp-0x14]
1000c8b2:	call   0x10042e92
1000c8b7:	pop    ecx
1000c8b8:	mov    eax,edi
1000c8ba:	call   0x10059b0d
1000c8bf:	ret    
1000c8c0:	push   DWORD PTR [esp+0x8]
1000c8c4:	call   0x10043010
1000c8c9:	pop    ecx
1000c8ca:	push   eax
1000c8cb:	push   DWORD PTR [esp+0xc]
1000c8cf:	mov    eax,DWORD PTR [esp+0x14]
1000c8d3:	push   DWORD PTR [esp+0xc]
1000c8d7:	call   0x1000cfc6
1000c8dc:	ret    0xc
1000c8df:	push   ebp
1000c8e0:	mov    ebp,esp
1000c8e2:	push   ecx
1000c8e3:	and    DWORD PTR [ebp-0x4],0x0
1000c8e7:	push   esi
1000c8e8:	push   DWORD PTR [ebp+0x10]
1000c8eb:	mov    esi,eax
1000c8ed:	push   DWORD PTR [ebp+0xc]
1000c8f0:	push   DWORD PTR [ebp+0x8]
1000c8f3:	call   0x1000cf2a
1000c8f8:	mov    eax,esi
1000c8fa:	pop    esi
1000c8fb:	leave  
1000c8fc:	ret    0xc
1000c8ff:	mov    eax,DWORD PTR [esi]
1000c901:	test   eax,eax
1000c903:	je     0x1000c90c
1000c905:	push   eax
1000c906:	call   DWORD PTR ds:0x100663d4
1000c90c:	and    DWORD PTR [esi],0x0
1000c90f:	ret    
1000c910:	mov    eax,DWORD PTR [esi]
1000c912:	test   eax,eax
1000c914:	je     0x1000c91d
1000c916:	push   eax
1000c917:	call   DWORD PTR ds:0x100663b8
1000c91d:	and    DWORD PTR [esi],0x0
1000c920:	ret    
1000c921:	push   esi
1000c922:	mov    esi,DWORD PTR [eax]
1000c924:	test   esi,esi
1000c926:	je     0x1000c936
1000c928:	mov    eax,esi
1000c92a:	call   0x1000db6f
1000c92f:	push   esi
1000c930:	call   0x10042e92
1000c935:	pop    ecx
1000c936:	pop    esi
1000c937:	ret    
1000c938:	jmp    0x1000d062
1000c93d:	mov    ecx,DWORD PTR [eax+0x4]
1000c940:	test   ecx,ecx
1000c942:	jne    0x1000c947
1000c944:	xor    eax,eax
1000c946:	ret    
1000c947:	mov    eax,DWORD PTR [eax+0x8]
1000c94a:	sub    eax,ecx
1000c94c:	sar    eax,0x4
1000c94f:	ret    
1000c950:	mov    eax,esi
1000c952:	call   0x1000c93d
1000c957:	cmp    DWORD PTR [esp+0x4],eax
1000c95b:	jb     0x1000c962
1000c95d:	call   0x100433b0
1000c962:	mov    eax,DWORD PTR [esp+0x4]
1000c966:	shl    eax,0x4
1000c969:	add    eax,DWORD PTR [esi+0x4]
1000c96c:	ret    0x4
1000c96f:	push   ebp
1000c970:	mov    ebp,esp
1000c972:	sub    esp,0x18
1000c975:	mov    eax,DWORD PTR [ebx+0x4]
1000c978:	push   esi
1000c979:	mov    esi,DWORD PTR [eax+0x4]
1000c97c:	mov    DWORD PTR [ebp-0x8],eax
1000c97f:	mov    al,0x1
1000c981:	mov    BYTE PTR [ebp-0xc],al
1000c984:	jmp    0x1000c9a2
1000c986:	mov    eax,DWORD PTR [ebp+0x8]
1000c989:	lea    ecx,[esi+0xc]
1000c98c:	mov    DWORD PTR [ebp-0x8],esi
1000c98f:	call   0x10004e7d
1000c994:	test   al,al
1000c996:	mov    BYTE PTR [ebp-0xc],al
1000c999:	je     0x1000c99f
1000c99b:	mov    esi,DWORD PTR [esi]
1000c99d:	jmp    0x1000c9a2
1000c99f:	mov    esi,DWORD PTR [esi+0x8]
1000c9a2:	cmp    BYTE PTR [esi+0x39],0x0
1000c9a6:	je     0x1000c986
1000c9a8:	test   al,al
1000c9aa:	mov    ecx,DWORD PTR [ebp-0x8]
1000c9ad:	mov    esi,ecx
1000c9af:	mov    DWORD PTR [ebp-0x10],esi
1000c9b2:	mov    DWORD PTR [ebp-0x14],ebx
1000c9b5:	je     0x1000c9e9
1000c9b7:	mov    eax,DWORD PTR [ebx+0x4]
1000c9ba:	cmp    ecx,DWORD PTR [eax]
1000c9bc:	jne    0x1000c9de
1000c9be:	push   DWORD PTR [ebp+0x8]
1000c9c1:	push   0x1
1000c9c3:	lea    eax,[ebp-0x14]
1000c9c6:	push   eax
1000c9c7:	mov    esi,ebx
1000c9c9:	call   0x1000d087
1000c9ce:	mov    ecx,DWORD PTR [eax]
1000c9d0:	mov    eax,DWORD PTR [eax+0x4]
1000c9d3:	mov    DWORD PTR [edi],ecx
1000c9d5:	mov    DWORD PTR [edi+0x4],eax
1000c9d8:	mov    BYTE PTR [edi+0x8],0x1
1000c9dc:	jmp    0x1000ca0f
1000c9de:	lea    esi,[ebp-0x14]
1000c9e1:	call   0x1000d249
1000c9e6:	mov    esi,DWORD PTR [ebp-0x10]
1000c9e9:	mov    ecx,DWORD PTR [ebp+0x8]
1000c9ec:	lea    eax,[esi+0xc]
1000c9ef:	call   0x10004e7d
1000c9f4:	test   al,al
1000c9f6:	je     0x1000ca03
1000c9f8:	push   DWORD PTR [ebp+0x8]
1000c9fb:	mov    ecx,DWORD PTR [ebp-0x8]
1000c9fe:	push   DWORD PTR [ebp-0xc]
1000ca01:	jmp    0x1000c9c3
1000ca03:	mov    eax,DWORD PTR [ebp-0x14]
1000ca06:	mov    DWORD PTR [edi],eax
1000ca08:	mov    DWORD PTR [edi+0x4],esi
1000ca0b:	mov    BYTE PTR [edi+0x8],0x0
1000ca0f:	mov    eax,edi
1000ca11:	pop    esi
1000ca12:	leave  
1000ca13:	ret    0x4
1000ca16:	push   0x44
1000ca18:	mov    eax,0x1006071f
1000ca1d:	call   0x10059a35
1000ca22:	mov    edi,DWORD PTR [ebp+0x14]
1000ca25:	cmp    BYTE PTR [edi+0x39],0x0
1000ca29:	je     0x1000ca5d
1000ca2b:	push   0x1006ccec
1000ca30:	lea    ecx,[ebp-0x28]
1000ca33:	call   0x100011cd
1000ca38:	and    DWORD PTR [ebp-0x4],0x0
1000ca3c:	lea    eax,[ebp-0x28]
1000ca3f:	push   eax
1000ca40:	lea    ecx,[ebp-0x50]
1000ca43:	call   0x10001077
1000ca48:	push   0x10074cc0
1000ca4d:	lea    eax,[ebp-0x50]
1000ca50:	push   eax
1000ca51:	mov    DWORD PTR [ebp-0x50],0x1006b978
1000ca58:	call   0x100479b4
1000ca5d:	lea    esi,[ebp+0x10]
1000ca60:	call   0x10009c42
1000ca65:	mov    ecx,DWORD PTR [edi]
1000ca67:	cmp    BYTE PTR [ecx+0x39],0x0
1000ca6b:	je     0x1000ca72
1000ca6d:	mov    ebx,DWORD PTR [edi+0x8]
1000ca70:	jmp    0x1000ca89
1000ca72:	mov    eax,DWORD PTR [edi+0x8]
1000ca75:	cmp    BYTE PTR [eax+0x39],0x0
1000ca79:	je     0x1000ca7f
1000ca7b:	mov    ebx,ecx
1000ca7d:	jmp    0x1000ca89
1000ca7f:	mov    eax,DWORD PTR [ebp+0x14]
1000ca82:	cmp    eax,edi
1000ca84:	mov    ebx,DWORD PTR [eax+0x8]
1000ca87:	jne    0x1000caff
1000ca89:	cmp    BYTE PTR [ebx+0x39],0x0
1000ca8d:	mov    esi,DWORD PTR [edi+0x4]
1000ca90:	jne    0x1000ca95
1000ca92:	mov    DWORD PTR [ebx+0x4],esi
1000ca95:	mov    ecx,DWORD PTR [ebp+0x8]
1000ca98:	mov    eax,DWORD PTR [ecx+0x4]
1000ca9b:	cmp    DWORD PTR [eax+0x4],edi
1000ca9e:	jne    0x1000caa5
1000caa0:	mov    DWORD PTR [eax+0x4],ebx
1000caa3:	jmp    0x1000cab0
1000caa5:	cmp    DWORD PTR [esi],edi
1000caa7:	jne    0x1000caad
1000caa9:	mov    DWORD PTR [esi],ebx
1000caab:	jmp    0x1000cab0
1000caad:	mov    DWORD PTR [esi+0x8],ebx
1000cab0:	mov    edx,DWORD PTR [ecx+0x4]
1000cab3:	cmp    DWORD PTR [edx],edi
1000cab5:	jne    0x1000cad3
1000cab7:	cmp    BYTE PTR [ebx+0x39],0x0
1000cabb:	je     0x1000cac1
1000cabd:	mov    ecx,esi
1000cabf:	jmp    0x1000cad1
1000cac1:	mov    eax,DWORD PTR [ebx]
1000cac3:	mov    ecx,ebx
1000cac5:	jmp    0x1000cacb
1000cac7:	mov    ecx,eax
1000cac9:	mov    eax,DWORD PTR [ecx]
1000cacb:	cmp    BYTE PTR [eax+0x39],0x0
1000cacf:	je     0x1000cac7
1000cad1:	mov    DWORD PTR [edx],ecx
1000cad3:	mov    eax,DWORD PTR [ebp+0x8]
1000cad6:	mov    edx,DWORD PTR [eax+0x4]
1000cad9:	cmp    DWORD PTR [edx+0x8],edi
1000cadc:	jne    0x1000cb59
1000cade:	cmp    BYTE PTR [ebx+0x39],0x0
1000cae2:	je     0x1000cae8
1000cae4:	mov    ecx,esi
1000cae6:	jmp    0x1000cafa
1000cae8:	mov    eax,DWORD PTR [ebx+0x8]
1000caeb:	mov    ecx,ebx
1000caed:	jmp    0x1000caf4
1000caef:	mov    ecx,eax
1000caf1:	mov    eax,DWORD PTR [ecx+0x8]
1000caf4:	cmp    BYTE PTR [eax+0x39],0x0
1000caf8:	je     0x1000caef
1000cafa:	mov    DWORD PTR [edx+0x8],ecx
1000cafd:	jmp    0x1000cb59
1000caff:	mov    DWORD PTR [ecx+0x4],eax
1000cb02:	mov    ecx,DWORD PTR [edi]
1000cb04:	mov    DWORD PTR [eax],ecx
1000cb06:	cmp    eax,DWORD PTR [edi+0x8]
1000cb09:	jne    0x1000cb0f
1000cb0b:	mov    esi,eax
1000cb0d:	jmp    0x1000cb29
1000cb0f:	cmp    BYTE PTR [ebx+0x39],0x0
1000cb13:	mov    esi,DWORD PTR [eax+0x4]
1000cb16:	jne    0x1000cb1b
1000cb18:	mov    DWORD PTR [ebx+0x4],esi
1000cb1b:	mov    DWORD PTR [esi],ebx
1000cb1d:	mov    ecx,DWORD PTR [edi+0x8]
1000cb20:	mov    DWORD PTR [eax+0x8],ecx
1000cb23:	mov    ecx,DWORD PTR [edi+0x8]
1000cb26:	mov    DWORD PTR [ecx+0x4],eax
1000cb29:	mov    ecx,DWORD PTR [ebp+0x8]
1000cb2c:	mov    ecx,DWORD PTR [ecx+0x4]
1000cb2f:	cmp    DWORD PTR [ecx+0x4],edi
1000cb32:	jne    0x1000cb39
1000cb34:	mov    DWORD PTR [ecx+0x4],eax
1000cb37:	jmp    0x1000cb47
1000cb39:	mov    ecx,DWORD PTR [edi+0x4]
1000cb3c:	cmp    DWORD PTR [ecx],edi
1000cb3e:	jne    0x1000cb44
1000cb40:	mov    DWORD PTR [ecx],eax
1000cb42:	jmp    0x1000cb47
1000cb44:	mov    DWORD PTR [ecx+0x8],eax
1000cb47:	mov    ecx,DWORD PTR [edi+0x4]
1000cb4a:	mov    DWORD PTR [eax+0x4],ecx
1000cb4d:	mov    dl,BYTE PTR [edi+0x38]
1000cb50:	mov    cl,BYTE PTR [eax+0x38]
1000cb53:	mov    BYTE PTR [eax+0x38],dl
1000cb56:	mov    BYTE PTR [edi+0x38],cl
1000cb59:	cmp    BYTE PTR [edi+0x38],0x1
1000cb5d:	jne    0x1000cc75
1000cb63:	jmp    0x1000cc29
1000cb68:	cmp    BYTE PTR [ebx+0x38],0x1
1000cb6c:	jne    0x1000cc71
1000cb72:	mov    ecx,DWORD PTR [esi]
1000cb74:	cmp    ebx,ecx
1000cb76:	jne    0x1000cbef
1000cb78:	mov    ecx,DWORD PTR [esi+0x8]
1000cb7b:	cmp    BYTE PTR [ecx+0x38],0x0
1000cb7f:	jne    0x1000cb96
1000cb81:	push   DWORD PTR [ebp+0x8]
1000cb84:	mov    BYTE PTR [ecx+0x38],0x1
1000cb88:	mov    ecx,esi
1000cb8a:	mov    BYTE PTR [esi+0x38],0x0
1000cb8e:	call   0x1000a14d
1000cb93:	mov    ecx,DWORD PTR [esi+0x8]
1000cb96:	cmp    BYTE PTR [ecx+0x39],0x0
1000cb9a:	jne    0x1000cc24
1000cba0:	mov    eax,DWORD PTR [ecx]
1000cba2:	cmp    BYTE PTR [eax+0x38],0x1
1000cba6:	jne    0x1000cbb1
1000cba8:	mov    eax,DWORD PTR [ecx+0x8]
1000cbab:	cmp    BYTE PTR [eax+0x38],0x1
1000cbaf:	je     0x1000cc20
1000cbb1:	mov    eax,DWORD PTR [ecx+0x8]
1000cbb4:	cmp    BYTE PTR [eax+0x38],0x1
1000cbb8:	jne    0x1000cbcf
1000cbba:	mov    eax,DWORD PTR [ecx]
1000cbbc:	push   DWORD PTR [ebp+0x8]
1000cbbf:	mov    BYTE PTR [eax+0x38],0x1
1000cbc3:	mov    BYTE PTR [ecx+0x38],0x0
1000cbc7:	call   0x1000d1d2
1000cbcc:	mov    ecx,DWORD PTR [esi+0x8]
1000cbcf:	mov    al,BYTE PTR [esi+0x38]
1000cbd2:	push   DWORD PTR [ebp+0x8]
1000cbd5:	mov    BYTE PTR [ecx+0x38],al
1000cbd8:	mov    BYTE PTR [esi+0x38],0x1
1000cbdc:	mov    eax,DWORD PTR [ecx+0x8]
1000cbdf:	mov    ecx,esi
1000cbe1:	mov    BYTE PTR [eax+0x38],0x1
1000cbe5:	call   0x1000a14d
1000cbea:	jmp    0x1000cc71
1000cbef:	cmp    BYTE PTR [ecx+0x38],0x0
1000cbf3:	jne    0x1000cc09
1000cbf5:	push   DWORD PTR [ebp+0x8]
1000cbf8:	mov    BYTE PTR [ecx+0x38],0x1
1000cbfc:	mov    ecx,esi
1000cbfe:	mov    BYTE PTR [esi+0x38],0x0
1000cc02:	call   0x1000d1d2
1000cc07:	mov    ecx,DWORD PTR [esi]
1000cc09:	cmp    BYTE PTR [ecx+0x39],0x0
1000cc0d:	jne    0x1000cc24
1000cc0f:	mov    eax,DWORD PTR [ecx+0x8]
1000cc12:	cmp    BYTE PTR [eax+0x38],0x1
1000cc16:	jne    0x1000cc3a
1000cc18:	mov    eax,DWORD PTR [ecx]
1000cc1a:	cmp    BYTE PTR [eax+0x38],0x1
1000cc1e:	jne    0x1000cc3a
1000cc20:	mov    BYTE PTR [ecx+0x38],0x0
1000cc24:	mov    ebx,esi
1000cc26:	mov    esi,DWORD PTR [esi+0x4]
1000cc29:	mov    eax,DWORD PTR [ebp+0x8]
1000cc2c:	mov    eax,DWORD PTR [eax+0x4]
1000cc2f:	cmp    ebx,DWORD PTR [eax+0x4]
1000cc32:	jne    0x1000cb68
1000cc38:	jmp    0x1000cc71
1000cc3a:	mov    eax,DWORD PTR [ecx]
1000cc3c:	cmp    BYTE PTR [eax+0x38],0x1
1000cc40:	jne    0x1000cc57
1000cc42:	mov    eax,DWORD PTR [ecx+0x8]
1000cc45:	push   DWORD PTR [ebp+0x8]
1000cc48:	mov    BYTE PTR [eax+0x38],0x1
1000cc4c:	mov    BYTE PTR [ecx+0x38],0x0
1000cc50:	call   0x1000a14d
1000cc55:	mov    ecx,DWORD PTR [esi]
1000cc57:	mov    al,BYTE PTR [esi+0x38]
1000cc5a:	push   DWORD PTR [ebp+0x8]
1000cc5d:	mov    BYTE PTR [ecx+0x38],al
1000cc60:	mov    BYTE PTR [esi+0x38],0x1
1000cc64:	mov    eax,DWORD PTR [ecx]
1000cc66:	mov    ecx,esi
1000cc68:	mov    BYTE PTR [eax+0x38],0x1
1000cc6c:	call   0x1000d1d2
1000cc71:	mov    BYTE PTR [ebx+0x38],0x1
1000cc75:	lea    ebx,[edi+0xc]
1000cc78:	lea    esi,[ebx+0x1c]
1000cc7b:	call   0x1000cdca
1000cc80:	push   0x0
1000cc82:	push   0x1
1000cc84:	mov    ecx,ebx
1000cc86:	call   0x100012f0
1000cc8b:	push   edi
1000cc8c:	call   0x10042e92
1000cc91:	pop    ecx
1000cc92:	mov    ecx,DWORD PTR [ebp+0x8]
1000cc95:	mov    eax,DWORD PTR [ecx+0x8]
1000cc98:	test   eax,eax
1000cc9a:	jbe    0x1000cca0
1000cc9c:	dec    eax
1000cc9d:	mov    DWORD PTR [ecx+0x8],eax
1000cca0:	mov    ecx,DWORD PTR [ebp+0x10]
1000cca3:	mov    eax,DWORD PTR [ebp+0xc]
1000cca6:	mov    DWORD PTR [eax],ecx
1000cca8:	mov    ecx,DWORD PTR [ebp+0x14]
1000ccab:	mov    DWORD PTR [eax+0x4],ecx
1000ccae:	call   0x10059b0d
1000ccb3:	ret    0x10
1000ccb6:	push   ebp
1000ccb7:	mov    ebp,esp
1000ccb9:	mov    eax,DWORD PTR [edi+0x4]
1000ccbc:	sub    esp,0x10
1000ccbf:	push   ebx
1000ccc0:	push   esi
1000ccc1:	mov    esi,DWORD PTR [eax+0x4]
1000ccc4:	mov    ebx,eax
1000ccc6:	jmp    0x1000cce0
1000ccc8:	mov    ecx,DWORD PTR [ebp+0xc]
1000cccb:	lea    eax,[esi+0xc]
1000ccce:	call   0x10004e7d
1000ccd3:	test   al,al
1000ccd5:	je     0x1000ccdc
1000ccd7:	mov    esi,DWORD PTR [esi+0x8]
1000ccda:	jmp    0x1000cce0
1000ccdc:	mov    ebx,esi
1000ccde:	mov    esi,DWORD PTR [esi]
1000cce0:	cmp    BYTE PTR [esi+0x39],0x0
1000cce4:	je     0x1000ccc8
1000cce6:	cmp    ebx,DWORD PTR [edi+0x4]
1000cce9:	mov    DWORD PTR [ebp-0x4],ebx
1000ccec:	mov    DWORD PTR [ebp-0x8],edi
1000ccef:	je     0x1000cd05
1000ccf1:	mov    eax,DWORD PTR [ebp+0xc]
1000ccf4:	lea    ecx,[ebx+0xc]
1000ccf7:	call   0x10004e7d
1000ccfc:	test   al,al
1000ccfe:	jne    0x1000cd05
1000cd00:	lea    ecx,[ebp-0x8]
1000cd03:	jmp    0x1000cd11
1000cd05:	mov    eax,DWORD PTR [edi+0x4]
1000cd08:	mov    DWORD PTR [ebp-0xc],eax
1000cd0b:	mov    DWORD PTR [ebp-0x10],edi
1000cd0e:	lea    ecx,[ebp-0x10]
1000cd11:	mov    edx,DWORD PTR [ecx]
1000cd13:	mov    eax,DWORD PTR [ebp+0x8]
1000cd16:	mov    ecx,DWORD PTR [ecx+0x4]
1000cd19:	pop    esi
1000cd1a:	mov    DWORD PTR [eax],edx
1000cd1c:	mov    DWORD PTR [eax+0x4],ecx
1000cd1f:	pop    ebx
1000cd20:	leave  
1000cd21:	ret    0x8
1000cd24:	push   0x10
1000cd26:	mov    eax,0x10060489
1000cd2b:	call   0x10059a68
1000cd30:	mov    ebx,ecx
1000cd32:	mov    esi,DWORD PTR [ebp+0x8]
1000cd35:	mov    eax,ebx
1000cd37:	call   0x1000cde5
1000cd3c:	xor    ecx,ecx
1000cd3e:	cmp    eax,ecx
1000cd40:	mov    DWORD PTR [esi+0x4],ecx
1000cd43:	mov    DWORD PTR [esi+0x8],ecx
1000cd46:	mov    DWORD PTR [esi+0xc],ecx
1000cd49:	je     0x1000cd9c
1000cd4b:	mov    edi,esi
1000cd4d:	call   0x1000d321
1000cd52:	test   al,al
1000cd54:	je     0x1000cd9c
1000cd56:	and    DWORD PTR [ebp-0x4],0x0
1000cd5a:	mov    eax,DWORD PTR [ebx+0x8]
1000cd5d:	cmp    DWORD PTR [ebx+0x4],eax
1000cd60:	mov    DWORD PTR [ebp-0x18],eax
1000cd63:	jbe    0x1000cd6a
1000cd65:	call   0x100433b0
1000cd6a:	mov    eax,DWORD PTR [ebx+0x4]
1000cd6d:	cmp    eax,DWORD PTR [ebx+0x8]
1000cd70:	mov    DWORD PTR [ebp-0x1c],eax
1000cd73:	jbe    0x1000cd7a
1000cd75:	call   0x100433b0
1000cd7a:	mov    ecx,DWORD PTR [esi+0x4]
1000cd7d:	mov    edx,DWORD PTR [ebp-0x1c]
1000cd80:	xor    eax,eax
1000cd82:	lea    edi,[ebp-0x14]
1000cd85:	stos   BYTE PTR es:[edi],al
1000cd86:	push   DWORD PTR [ebp-0x14]
1000cd89:	mov    eax,ecx
1000cd8b:	push   DWORD PTR [ebp+0x8]
1000cd8e:	push   DWORD PTR [ebp-0x18]
1000cd91:	call   0x1000d7cf
1000cd96:	add    esp,0xc
1000cd99:	mov    DWORD PTR [esi+0x8],eax
1000cd9c:	mov    eax,esi
1000cd9e:	call   0x10059b0d
1000cda3:	ret    0x4
1000cda6:	mov    esi,DWORD PTR [ebp+0x8]
1000cda9:	mov    eax,DWORD PTR [esi+0x4]
1000cdac:	xor    edi,edi
1000cdae:	cmp    eax,edi
1000cdb0:	je     0x1000cdb9
1000cdb2:	push   eax
1000cdb3:	call   0x10042e92
1000cdb8:	pop    ecx
1000cdb9:	push   edi
1000cdba:	push   edi
1000cdbb:	mov    DWORD PTR [esi+0x4],edi
1000cdbe:	mov    DWORD PTR [esi+0x8],edi
1000cdc1:	mov    DWORD PTR [esi+0xc],edi
1000cdc4:	call   0x100479b4
1000cdc9:	int3   
1000cdca:	mov    eax,DWORD PTR [esi+0x4]
1000cdcd:	test   eax,eax
1000cdcf:	je     0x1000cdd8
1000cdd1:	push   eax
1000cdd2:	call   0x10042e92
1000cdd7:	pop    ecx
1000cdd8:	and    DWORD PTR [esi+0x4],0x0
1000cddc:	and    DWORD PTR [esi+0x8],0x0
1000cde0:	and    DWORD PTR [esi+0xc],0x0
1000cde4:	ret    
1000cde5:	mov    ecx,DWORD PTR [eax+0x4]
1000cde8:	test   ecx,ecx
1000cdea:	jne    0x1000cdef
1000cdec:	xor    eax,eax
1000cdee:	ret    
1000cdef:	mov    eax,DWORD PTR [eax+0x8]
1000cdf2:	sub    eax,ecx
1000cdf4:	push   0x18
1000cdf6:	cdq    
1000cdf7:	pop    ecx
1000cdf8:	idiv   ecx
1000cdfa:	ret    
1000cdfb:	mov    eax,esi
1000cdfd:	call   0x1000cde5
1000ce02:	cmp    DWORD PTR [esp+0x4],eax
1000ce06:	jb     0x1000ce0d
1000ce08:	call   0x100433b0
1000ce0d:	mov    eax,DWORD PTR [esp+0x4]
1000ce11:	imul   eax,eax,0x18
1000ce14:	add    eax,DWORD PTR [esi+0x4]
1000ce17:	ret    0x4
1000ce1a:	push   ebp
1000ce1b:	mov    ebp,esp
1000ce1d:	sub    esp,0x10
1000ce20:	push   ebx
1000ce21:	push   esi
1000ce22:	mov    esi,eax
1000ce24:	push   edi
1000ce25:	mov    edi,DWORD PTR [esi+0x4]
1000ce28:	test   edi,edi
1000ce2a:	jne    0x1000ce30
1000ce2c:	xor    ebx,ebx
1000ce2e:	jmp    0x1000ce3d
1000ce30:	mov    eax,DWORD PTR [esi+0xc]
1000ce33:	sub    eax,edi
1000ce35:	push   0x18
1000ce37:	cdq    
1000ce38:	pop    ecx
1000ce39:	idiv   ecx
1000ce3b:	mov    ebx,eax
1000ce3d:	mov    eax,esi
1000ce3f:	call   0x1000cde5
1000ce44:	cmp    eax,ebx
1000ce46:	jae    0x1000ce5a
1000ce48:	push   DWORD PTR [ebp+0x8]
1000ce4b:	push   0x1
1000ce4d:	push   DWORD PTR [esi+0x8]
1000ce50:	call   0x1000d34a
1000ce55:	mov    DWORD PTR [esi+0x8],eax
1000ce58:	jmp    0x1000ce74
1000ce5a:	mov    ebx,DWORD PTR [esi+0x8]
1000ce5d:	cmp    edi,ebx
1000ce5f:	jbe    0x1000ce66
1000ce61:	call   0x100433b0
1000ce66:	push   ebx
1000ce67:	push   esi
1000ce68:	push   DWORD PTR [ebp+0x8]
1000ce6b:	lea    eax,[ebp-0xc]
1000ce6e:	push   eax
1000ce6f:	call   0x1000d2aa
1000ce74:	pop    edi
1000ce75:	pop    esi
1000ce76:	pop    ebx
1000ce77:	leave  
1000ce78:	ret    0x4
1000ce7b:	push   ebp
1000ce7c:	mov    ebp,esp
1000ce7e:	push   ecx
1000ce7f:	mov    edx,DWORD PTR [ebp+0x10]
1000ce82:	mov    eax,DWORD PTR [ebx+0x8]
1000ce85:	add    edx,0x18
1000ce88:	cmp    edx,eax
1000ce8a:	je     0x1000ceab
1000ce8c:	lea    ecx,[edx-0x18]
1000ce8f:	push   esi
1000ce90:	mov    DWORD PTR [ebp-0x4],ecx
1000ce93:	push   edi
1000ce94:	mov    edi,DWORD PTR [ebp-0x4]
1000ce97:	add    DWORD PTR [ebp-0x4],0x18
1000ce9b:	mov    esi,edx
1000ce9d:	push   0x6
1000ce9f:	add    edx,0x18
1000cea2:	cmp    edx,eax
1000cea4:	pop    ecx
1000cea5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000cea7:	jne    0x1000ce94
1000cea9:	pop    edi
1000ceaa:	pop    esi
1000ceab:	mov    ecx,DWORD PTR [ebp+0xc]
1000ceae:	mov    eax,DWORD PTR [ebp+0x8]
1000ceb1:	add    DWORD PTR [ebx+0x8],0xffffffe8
1000ceb5:	mov    DWORD PTR [eax],ecx
1000ceb7:	mov    ecx,DWORD PTR [ebp+0x10]
1000ceba:	mov    DWORD PTR [eax+0x4],ecx
1000cebd:	leave  
1000cebe:	ret    0xc
1000cec1:	cmp    DWORD PTR [esi],0x0
1000cec4:	jne    0x1000cecb
1000cec6:	call   0x100433b0
1000cecb:	mov    eax,DWORD PTR [esi]
1000cecd:	mov    ecx,DWORD PTR [esi+0x4]
1000ced0:	cmp    ecx,DWORD PTR [eax+0x8]
1000ced3:	jb     0x1000ceda
1000ced5:	call   0x100433b0
1000ceda:	mov    eax,DWORD PTR [esi+0x4]
1000cedd:	ret    
1000cede:	push   ebx
1000cedf:	mov    ebx,DWORD PTR [eax+0x4]
1000cee2:	push   esi
1000cee3:	mov    esi,DWORD PTR [eax]
1000cee5:	test   esi,esi
1000cee7:	push   edi
1000cee8:	mov    edi,ecx
1000ceea:	jne    0x1000cef1
1000ceec:	call   0x100433b0
1000cef1:	imul   edi,edi,0x18
1000cef4:	add    edi,ebx
1000cef6:	cmp    edi,DWORD PTR [esi+0x8]
1000cef9:	ja     0x1000cf00
1000cefb:	cmp    edi,DWORD PTR [esi+0x4]
1000cefe:	jae    0x1000cf05
1000cf00:	call   0x100433b0
1000cf05:	mov    eax,DWORD PTR [esp+0x10]
1000cf09:	mov    DWORD PTR [eax+0x4],edi
1000cf0c:	pop    edi
1000cf0d:	mov    DWORD PTR [eax],esi
1000cf0f:	pop    esi
1000cf10:	pop    ebx
1000cf11:	ret    0x4
1000cf14:	push   esi
1000cf15:	mov    esi,DWORD PTR [eax]
1000cf17:	test   esi,esi
1000cf19:	je     0x1000cf28
1000cf1b:	push   esi
1000cf1c:	call   0x1000c6d5
1000cf21:	push   esi
1000cf22:	call   0x10042e92
1000cf27:	pop    ecx
1000cf28:	pop    esi
1000cf29:	ret    
1000cf2a:	push   0x0
1000cf2c:	mov    ecx,esi
1000cf2e:	mov    DWORD PTR [esi+0x18],0xf
1000cf35:	call   0x1000141c
1000cf3a:	push   DWORD PTR [esp+0xc]
1000cf3e:	mov    ecx,esi
1000cf40:	push   DWORD PTR [esp+0xc]
1000cf44:	push   DWORD PTR [esp+0xc]
1000cf48:	call   0x10001241
1000cf4d:	mov    eax,esi
1000cf4f:	ret    0xc
1000cf52:	or     eax,0xffffffff
1000cf55:	sub    eax,DWORD PTR [esi+0x14]
1000cf58:	cmp    eax,ebx
1000cf5a:	ja     0x1000cf61
1000cf5c:	call   0x100571a0
1000cf61:	test   ebx,ebx
1000cf63:	jbe    0x1000cfc1
1000cf65:	push   edi
1000cf66:	mov    edi,DWORD PTR [esi+0x14]
1000cf69:	push   0x0
1000cf6b:	add    edi,ebx
1000cf6d:	push   edi
1000cf6e:	mov    ecx,esi
1000cf70:	call   0x10001438
1000cf75:	test   al,al
1000cf77:	je     0x1000cfc0
1000cf79:	cmp    ebx,0x1
1000cf7c:	mov    ecx,DWORD PTR [esi+0x14]
1000cf7f:	jne    0x1000cf98
1000cf81:	cmp    DWORD PTR [esi+0x18],0x10
1000cf85:	jb     0x1000cf8c
1000cf87:	mov    eax,DWORD PTR [esi+0x4]
1000cf8a:	jmp    0x1000cf8f
1000cf8c:	lea    eax,[esi+0x4]
1000cf8f:	mov    dl,BYTE PTR [esp+0x8]
1000cf93:	mov    BYTE PTR [eax+ecx*1],dl
1000cf96:	jmp    0x1000cfb8
1000cf98:	cmp    DWORD PTR [esi+0x18],0x10
1000cf9c:	jb     0x1000cfa3
1000cf9e:	mov    eax,DWORD PTR [esi+0x4]
1000cfa1:	jmp    0x1000cfa6
1000cfa3:	lea    eax,[esi+0x4]
1000cfa6:	movsx  edx,BYTE PTR [esp+0x8]
1000cfab:	push   ebx
1000cfac:	push   edx
1000cfad:	add    eax,ecx
1000cfaf:	push   eax
1000cfb0:	call   0x10045c00
1000cfb5:	add    esp,0xc
1000cfb8:	push   edi
1000cfb9:	mov    ecx,esi
1000cfbb:	call   0x1000141c
1000cfc0:	pop    edi
1000cfc1:	mov    eax,esi
1000cfc3:	ret    0x4
1000cfc6:	push   ebp
1000cfc7:	mov    ebp,esp
1000cfc9:	push   ecx
1000cfca:	cmp    DWORD PTR [ebp+0x10],0x0
1000cfce:	mov    ecx,DWORD PTR [ebp+0x8]
1000cfd1:	jne    0x1000cfd8
1000cfd3:	cmp    eax,DWORD PTR [ecx+0x14]
1000cfd6:	jbe    0x1000d045
1000cfd8:	push   ebx
1000cfd9:	push   esi
1000cfda:	mov    esi,DWORD PTR [ecx+0x14]
1000cfdd:	cmp    eax,esi
1000cfdf:	push   edi
1000cfe0:	jae    0x1000d03f
1000cfe2:	sub    esi,eax
1000cfe4:	cmp    DWORD PTR [ebp+0x10],esi
1000cfe7:	ja     0x1000d03f
1000cfe9:	xor    edx,edx
1000cfeb:	inc    edx
1000cfec:	sub    edx,DWORD PTR [ebp+0x10]
1000cfef:	add    esi,edx
1000cff1:	cmp    DWORD PTR [ecx+0x18],0x10
1000cff5:	jb     0x1000d001
1000cff7:	add    ecx,0x4
1000cffa:	mov    DWORD PTR [ebp-0x4],ecx
1000cffd:	mov    ecx,DWORD PTR [ecx]
1000cfff:	jmp    0x1000d007
1000d001:	add    ecx,0x4
1000d004:	mov    DWORD PTR [ebp-0x4],ecx
1000d007:	lea    ebx,[ecx+eax*1]
1000d00a:	jmp    0x1000d028
1000d00c:	push   DWORD PTR [ebp+0x10]
1000d00f:	push   DWORD PTR [ebp+0xc]
1000d012:	push   edi
1000d013:	call   0x10043726
1000d018:	add    esp,0xc
1000d01b:	test   eax,eax
1000d01d:	je     0x1000d049
1000d01f:	sub    ebx,edi
1000d021:	lea    esi,[esi+ebx*1-0x1]
1000d025:	lea    ebx,[edi+0x1]
1000d028:	mov    eax,DWORD PTR [ebp+0xc]
1000d02b:	movsx  eax,BYTE PTR [eax]
1000d02e:	push   esi
1000d02f:	push   eax
1000d030:	push   ebx
1000d031:	call   0x10045b50
1000d036:	mov    edi,eax
1000d038:	add    esp,0xc
1000d03b:	test   edi,edi
1000d03d:	jne    0x1000d00c
1000d03f:	or     eax,0xffffffff
1000d042:	pop    edi
1000d043:	pop    esi
1000d044:	pop    ebx
1000d045:	leave  
1000d046:	ret    0xc
1000d049:	mov    eax,DWORD PTR [ebp+0x8]
1000d04c:	cmp    DWORD PTR [eax+0x18],0x10
1000d050:	jb     0x1000d059
1000d052:	mov    eax,DWORD PTR [ebp-0x4]
1000d055:	mov    ecx,DWORD PTR [eax]
1000d057:	jmp    0x1000d05c
1000d059:	mov    ecx,DWORD PTR [ebp-0x4]
1000d05c:	mov    eax,edi
1000d05e:	sub    eax,ecx
1000d060:	jmp    0x1000d042
1000d062:	mov    eax,DWORD PTR [esi+0x4]
1000d065:	test   eax,eax
1000d067:	je     0x1000d07a
1000d069:	push   DWORD PTR [esi+0x8]
1000d06c:	call   0x1000d37a
1000d071:	push   DWORD PTR [esi+0x4]
1000d074:	call   0x10042e92
1000d079:	pop    ecx
1000d07a:	and    DWORD PTR [esi+0x4],0x0
1000d07e:	and    DWORD PTR [esi+0x8],0x0
1000d082:	and    DWORD PTR [esi+0xc],0x0
1000d086:	ret    
1000d087:	push   0x48
1000d089:	mov    eax,0x100605b3
1000d08e:	call   0x10059a35
1000d093:	mov    edi,ecx
1000d095:	cmp    DWORD PTR [esi+0x8],0x5d1745c
1000d09c:	jb     0x1000d0d0
1000d09e:	push   0x1006d030
1000d0a3:	lea    ecx,[ebp-0x2c]
1000d0a6:	call   0x100011cd
1000d0ab:	and    DWORD PTR [ebp-0x4],0x0
1000d0af:	lea    eax,[ebp-0x2c]
1000d0b2:	push   eax
1000d0b3:	lea    ecx,[ebp-0x54]
1000d0b6:	call   0x10001077
1000d0bb:	push   0x10074da0
1000d0c0:	lea    eax,[ebp-0x54]
1000d0c3:	push   eax
1000d0c4:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1000d0cb:	call   0x100479b4
1000d0d0:	push   DWORD PTR [ebp+0x10]
1000d0d3:	mov    eax,DWORD PTR [esi+0x4]
1000d0d6:	push   eax
1000d0d7:	push   edi
1000d0d8:	push   eax
1000d0d9:	call   0x1000d43d
1000d0de:	inc    DWORD PTR [esi+0x8]
1000d0e1:	mov    ebx,eax
1000d0e3:	mov    eax,DWORD PTR [esi+0x4]
1000d0e6:	cmp    edi,eax
1000d0e8:	jne    0x1000d0f7
1000d0ea:	mov    DWORD PTR [eax+0x4],ebx
1000d0ed:	mov    eax,DWORD PTR [esi+0x4]
1000d0f0:	mov    DWORD PTR [eax],ebx
1000d0f2:	mov    eax,DWORD PTR [esi+0x4]
1000d0f5:	jmp    0x1000d115
1000d0f7:	cmp    BYTE PTR [ebp+0xc],0x0
1000d0fb:	je     0x1000d10a
1000d0fd:	mov    DWORD PTR [edi],ebx
1000d0ff:	mov    eax,DWORD PTR [esi+0x4]
1000d102:	cmp    edi,DWORD PTR [eax]
1000d104:	jne    0x1000d118
1000d106:	mov    DWORD PTR [eax],ebx
1000d108:	jmp    0x1000d118
1000d10a:	mov    DWORD PTR [edi+0x8],ebx
1000d10d:	mov    eax,DWORD PTR [esi+0x4]
1000d110:	cmp    edi,DWORD PTR [eax+0x8]
1000d113:	jne    0x1000d118
1000d115:	mov    DWORD PTR [eax+0x8],ebx
1000d118:	mov    edi,ebx
1000d11a:	lea    eax,[ebx+0x4]
1000d11d:	jmp    0x1000d1ac
1000d122:	mov    ecx,DWORD PTR [eax]
1000d124:	mov    edx,DWORD PTR [ecx+0x4]
1000d127:	cmp    ecx,DWORD PTR [edx]
1000d129:	jne    0x1000d160
1000d12b:	mov    edx,DWORD PTR [edx+0x8]
1000d12e:	cmp    BYTE PTR [edx+0x38],0x0
1000d132:	je     0x1000d168
1000d134:	cmp    edi,DWORD PTR [ecx+0x8]
1000d137:	jne    0x1000d141
1000d139:	push   esi
1000d13a:	mov    edi,ecx
1000d13c:	call   0x1000a14d
1000d141:	mov    eax,DWORD PTR [edi+0x4]
1000d144:	mov    BYTE PTR [eax+0x38],0x1
1000d148:	mov    eax,DWORD PTR [edi+0x4]
1000d14b:	mov    eax,DWORD PTR [eax+0x4]
1000d14e:	mov    BYTE PTR [eax+0x38],0x0
1000d152:	mov    eax,DWORD PTR [edi+0x4]
1000d155:	mov    ecx,DWORD PTR [eax+0x4]
1000d158:	push   esi
1000d159:	call   0x1000d1d2
1000d15e:	jmp    0x1000d1a9
1000d160:	mov    edx,DWORD PTR [edx]
1000d162:	cmp    BYTE PTR [edx+0x38],0x0
1000d166:	jne    0x1000d180
1000d168:	mov    BYTE PTR [ecx+0x38],0x1
1000d16c:	mov    BYTE PTR [edx+0x38],0x1
1000d170:	mov    ecx,DWORD PTR [eax]
1000d172:	mov    ecx,DWORD PTR [ecx+0x4]
1000d175:	mov    BYTE PTR [ecx+0x38],0x0
1000d179:	mov    eax,DWORD PTR [eax]
1000d17b:	mov    edi,DWORD PTR [eax+0x4]
1000d17e:	jmp    0x1000d1a9
1000d180:	cmp    edi,DWORD PTR [ecx]
1000d182:	jne    0x1000d18c
1000d184:	push   esi
1000d185:	mov    edi,ecx
1000d187:	call   0x1000d1d2
1000d18c:	mov    eax,DWORD PTR [edi+0x4]
1000d18f:	mov    BYTE PTR [eax+0x38],0x1
1000d193:	mov    eax,DWORD PTR [edi+0x4]
1000d196:	mov    eax,DWORD PTR [eax+0x4]
1000d199:	mov    BYTE PTR [eax+0x38],0x0
1000d19d:	mov    eax,DWORD PTR [edi+0x4]
1000d1a0:	mov    ecx,DWORD PTR [eax+0x4]
1000d1a3:	push   esi
1000d1a4:	call   0x1000a14d
1000d1a9:	lea    eax,[edi+0x4]
1000d1ac:	mov    ecx,DWORD PTR [eax]
1000d1ae:	cmp    BYTE PTR [ecx+0x38],0x0
1000d1b2:	je     0x1000d122
1000d1b8:	mov    eax,DWORD PTR [esi+0x4]
1000d1bb:	mov    eax,DWORD PTR [eax+0x4]
1000d1be:	mov    BYTE PTR [eax+0x38],0x1
1000d1c2:	mov    eax,DWORD PTR [ebp+0x8]
1000d1c5:	mov    DWORD PTR [eax+0x4],ebx
1000d1c8:	mov    DWORD PTR [eax],esi
1000d1ca:	call   0x10059b0d
1000d1cf:	ret    0xc
1000d1d2:	mov    eax,DWORD PTR [ecx]
1000d1d4:	mov    edx,DWORD PTR [eax+0x8]
1000d1d7:	mov    DWORD PTR [ecx],edx
1000d1d9:	mov    edx,DWORD PTR [eax+0x8]
1000d1dc:	cmp    BYTE PTR [edx+0x39],0x0
1000d1e0:	jne    0x1000d1e5
1000d1e2:	mov    DWORD PTR [edx+0x4],ecx
1000d1e5:	mov    edx,DWORD PTR [ecx+0x4]
1000d1e8:	mov    DWORD PTR [eax+0x4],edx
1000d1eb:	mov    edx,DWORD PTR [esp+0x4]
1000d1ef:	mov    edx,DWORD PTR [edx+0x4]
1000d1f2:	cmp    ecx,DWORD PTR [edx+0x4]
1000d1f5:	jne    0x1000d1fc
1000d1f7:	mov    DWORD PTR [edx+0x4],eax
1000d1fa:	jmp    0x1000d20b
1000d1fc:	mov    edx,DWORD PTR [ecx+0x4]
1000d1ff:	cmp    ecx,DWORD PTR [edx+0x8]
1000d202:	jne    0x1000d209
1000d204:	mov    DWORD PTR [edx+0x8],eax
1000d207:	jmp    0x1000d20b
1000d209:	mov    DWORD PTR [edx],eax
1000d20b:	mov    DWORD PTR [eax+0x8],ecx
1000d20e:	mov    DWORD PTR [ecx+0x4],eax
1000d211:	ret    0x4
1000d214:	push   ebp
1000d215:	mov    ebp,esp
1000d217:	and    esp,0xfffffff8
1000d21a:	push   ecx
1000d21b:	push   ecx
1000d21c:	push   ebx
1000d21d:	push   edi
1000d21e:	mov    edi,eax
1000d220:	mov    eax,DWORD PTR [edi+0x4]
1000d223:	mov    ecx,DWORD PTR [eax]
1000d225:	push   eax
1000d226:	push   edi
1000d227:	push   ecx
1000d228:	push   edi
1000d229:	lea    ebx,[esp+0x18]
1000d22d:	call   0x1000d391
1000d232:	push   DWORD PTR [edi+0x4]
1000d235:	call   0x10042e92
1000d23a:	and    DWORD PTR [edi+0x4],0x0
1000d23e:	and    DWORD PTR [edi+0x8],0x0
1000d242:	pop    ecx
1000d243:	pop    edi
1000d244:	pop    ebx
1000d245:	mov    esp,ebp
1000d247:	pop    ebp
1000d248:	ret    
1000d249:	push   ebx
1000d24a:	xor    ebx,ebx
1000d24c:	cmp    DWORD PTR [esi],ebx
1000d24e:	jne    0x1000d255
1000d250:	call   0x100433b0
1000d255:	mov    eax,DWORD PTR [esi+0x4]
1000d258:	cmp    BYTE PTR [eax+0x39],bl
1000d25b:	je     0x1000d26a
1000d25d:	mov    eax,DWORD PTR [eax+0x8]
1000d260:	mov    DWORD PTR [esi+0x4],eax
1000d263:	cmp    BYTE PTR [eax+0x39],bl
1000d266:	je     0x1000d2a6
1000d268:	jmp    0x1000d29c
1000d26a:	mov    ecx,DWORD PTR [eax]
1000d26c:	cmp    BYTE PTR [ecx+0x39],bl
1000d26f:	jne    0x1000d28c
1000d271:	jmp    0x1000d275
1000d273:	mov    ecx,eax
1000d275:	mov    eax,DWORD PTR [ecx+0x8]
1000d278:	cmp    BYTE PTR [eax+0x39],bl
1000d27b:	je     0x1000d273
1000d27d:	mov    DWORD PTR [esi+0x4],ecx
1000d280:	jmp    0x1000d2a6
1000d282:	mov    ecx,DWORD PTR [esi+0x4]
1000d285:	cmp    ecx,DWORD PTR [eax]
1000d287:	jne    0x1000d294
1000d289:	mov    DWORD PTR [esi+0x4],eax
1000d28c:	mov    eax,DWORD PTR [eax+0x4]
1000d28f:	cmp    BYTE PTR [eax+0x39],bl
1000d292:	je     0x1000d282
1000d294:	mov    ecx,DWORD PTR [esi+0x4]
1000d297:	cmp    BYTE PTR [ecx+0x39],bl
1000d29a:	je     0x1000d2a3
1000d29c:	call   0x100433b0
1000d2a1:	jmp    0x1000d2a6
1000d2a3:	mov    DWORD PTR [esi+0x4],eax
1000d2a6:	mov    eax,esi
1000d2a8:	pop    ebx
1000d2a9:	ret    
1000d2aa:	push   ebp
1000d2ab:	mov    ebp,esp
1000d2ad:	push   ebx
1000d2ae:	push   edi
1000d2af:	mov    eax,esi
1000d2b1:	call   0x1000cde5
1000d2b6:	test   eax,eax
1000d2b8:	jne    0x1000d2be
1000d2ba:	xor    ebx,ebx
1000d2bc:	jmp    0x1000d2e8
1000d2be:	mov    edi,DWORD PTR [esi+0x4]
1000d2c1:	cmp    edi,DWORD PTR [esi+0x8]
1000d2c4:	jbe    0x1000d2cb
1000d2c6:	call   0x100433b0
1000d2cb:	cmp    DWORD PTR [ebp+0x10],0x0
1000d2cf:	je     0x1000d2d6
1000d2d1:	cmp    DWORD PTR [ebp+0x10],esi
1000d2d4:	je     0x1000d2db
1000d2d6:	call   0x100433b0
1000d2db:	mov    eax,DWORD PTR [ebp+0x14]
1000d2de:	sub    eax,edi
1000d2e0:	push   0x18
1000d2e2:	cdq    
1000d2e3:	pop    ecx
1000d2e4:	idiv   ecx
1000d2e6:	mov    ebx,eax
1000d2e8:	push   DWORD PTR [ebp+0x14]
1000d2eb:	mov    edx,DWORD PTR [ebp+0xc]
1000d2ee:	push   DWORD PTR [ebp+0x10]
1000d2f1:	mov    ecx,esi
1000d2f3:	call   0x1000d48f
1000d2f8:	mov    edi,DWORD PTR [esi+0x4]
1000d2fb:	cmp    edi,DWORD PTR [esi+0x8]
1000d2fe:	jbe    0x1000d305
1000d300:	call   0x100433b0
1000d305:	push   DWORD PTR [ebp+0x8]
1000d308:	mov    ecx,ebx
1000d30a:	lea    eax,[ebp+0x10]
1000d30d:	mov    DWORD PTR [ebp+0x10],esi
1000d310:	mov    DWORD PTR [ebp+0x14],edi
1000d313:	call   0x1000cede
1000d318:	mov    eax,DWORD PTR [ebp+0x8]
1000d31b:	pop    edi
1000d31c:	pop    ebx
1000d31d:	pop    ebp
1000d31e:	ret    0x10
1000d321:	push   esi
1000d322:	mov    esi,eax
1000d324:	cmp    esi,0xaaaaaaa
1000d32a:	jbe    0x1000d331
1000d32c:	jmp    0x1000a740
1000d331:	mov    ecx,esi
1000d333:	call   0x1000d649
1000d338:	imul   esi,esi,0x18
1000d33b:	add    esi,eax
1000d33d:	mov    DWORD PTR [edi+0x4],eax
1000d340:	mov    DWORD PTR [edi+0x8],eax
1000d343:	mov    DWORD PTR [edi+0xc],esi
1000d346:	mov    al,0x1
1000d348:	pop    esi
1000d349:	ret    
1000d34a:	push   ebp
1000d34b:	mov    ebp,esp
1000d34d:	push   ecx
1000d34e:	push   edi
1000d34f:	xor    eax,eax
1000d351:	lea    edi,[ebp-0x4]
1000d354:	stos   BYTE PTR es:[edi],al
1000d355:	push   DWORD PTR [ebp-0x4]
1000d358:	push   DWORD PTR [ebp+0xc]
1000d35b:	push   DWORD PTR [ebp+0x10]
1000d35e:	push   DWORD PTR [ebp+0xc]
1000d361:	push   DWORD PTR [ebp+0x8]
1000d364:	call   0x1000d7a3
1000d369:	mov    eax,DWORD PTR [ebp+0xc]
1000d36c:	imul   eax,eax,0x18
1000d36f:	add    esp,0x14
1000d372:	add    eax,DWORD PTR [ebp+0x8]
1000d375:	pop    edi
1000d376:	leave  
1000d377:	ret    0xc
1000d37a:	push   esi
1000d37b:	mov    esi,eax
1000d37d:	jmp    0x1000d387
1000d37f:	call   0x10004964
1000d384:	add    esi,0x10
1000d387:	cmp    esi,DWORD PTR [esp+0x8]
1000d38b:	jne    0x1000d37f
1000d38d:	pop    esi
1000d38e:	ret    0x4
1000d391:	push   ebp
1000d392:	mov    ebp,esp
1000d394:	mov    eax,DWORD PTR [edi+0x4]
1000d397:	sub    esp,0x14
1000d39a:	cmp    DWORD PTR [ebp+0x8],0x0
1000d39e:	push   esi
1000d39f:	mov    esi,DWORD PTR [eax]
1000d3a1:	je     0x1000d3a8
1000d3a3:	cmp    DWORD PTR [ebp+0x8],edi
1000d3a6:	je     0x1000d3ad
1000d3a8:	call   0x100433b0
1000d3ad:	cmp    DWORD PTR [ebp+0xc],esi
1000d3b0:	jne    0x1000d3f5
1000d3b2:	cmp    DWORD PTR [ebp+0x10],0x0
1000d3b6:	mov    esi,DWORD PTR [edi+0x4]
1000d3b9:	je     0x1000d3c0
1000d3bb:	cmp    DWORD PTR [ebp+0x10],edi
1000d3be:	je     0x1000d3c5
1000d3c0:	call   0x100433b0
1000d3c5:	cmp    DWORD PTR [ebp+0x14],esi
1000d3c8:	jne    0x1000d3f5
1000d3ca:	mov    eax,DWORD PTR [edi+0x4]
1000d3cd:	push   DWORD PTR [eax+0x4]
1000d3d0:	mov    ecx,edi
1000d3d2:	call   0x1000d6e0
1000d3d7:	mov    eax,DWORD PTR [edi+0x4]
1000d3da:	mov    DWORD PTR [eax+0x4],eax
1000d3dd:	mov    eax,DWORD PTR [edi+0x4]
1000d3e0:	and    DWORD PTR [edi+0x8],0x0
1000d3e4:	mov    DWORD PTR [eax],eax
1000d3e6:	mov    eax,DWORD PTR [edi+0x4]
1000d3e9:	mov    DWORD PTR [eax+0x8],eax
1000d3ec:	mov    eax,DWORD PTR [edi+0x4]
1000d3ef:	mov    eax,DWORD PTR [eax]
1000d3f1:	mov    DWORD PTR [ebx],edi
1000d3f3:	jmp    0x1000d433
1000d3f5:	mov    eax,DWORD PTR [ebp+0x8]
1000d3f8:	test   eax,eax
1000d3fa:	je     0x1000d401
1000d3fc:	cmp    eax,DWORD PTR [ebp+0x10]
1000d3ff:	je     0x1000d406
1000d401:	call   0x100433b0
1000d406:	mov    eax,DWORD PTR [ebp+0xc]
1000d409:	cmp    eax,DWORD PTR [ebp+0x14]
1000d40c:	mov    ecx,DWORD PTR [ebp+0x8]
1000d40f:	je     0x1000d431
1000d411:	lea    esi,[ebp+0x8]
1000d414:	mov    DWORD PTR [ebp-0x8],ecx
1000d417:	mov    DWORD PTR [ebp-0x4],eax
1000d41a:	call   0x10009c42
1000d41f:	push   DWORD PTR [ebp-0x4]
1000d422:	lea    eax,[ebp-0x10]
1000d425:	push   DWORD PTR [ebp-0x8]
1000d428:	push   eax
1000d429:	push   edi
1000d42a:	call   0x1000ca16
1000d42f:	jmp    0x1000d3f5
1000d431:	mov    DWORD PTR [ebx],ecx
1000d433:	mov    DWORD PTR [ebx+0x4],eax
1000d436:	mov    eax,ebx
1000d438:	pop    esi
1000d439:	leave  
1000d43a:	ret    0x10
1000d43d:	push   0xc
1000d43f:	mov    eax,0x10060f6d
1000d444:	call   0x10059a68
1000d449:	push   0x3c
1000d44b:	call   0x1004349e
1000d450:	mov    esi,eax
1000d452:	pop    ecx
1000d453:	mov    DWORD PTR [ebp-0x14],esi
1000d456:	test   esi,esi
1000d458:	mov    DWORD PTR [ebp-0x4],0x1
1000d45f:	je     0x1000d472
1000d461:	push   DWORD PTR [ebp+0x10]
1000d464:	mov    ebx,DWORD PTR [ebp+0x14]
1000d467:	push   DWORD PTR [ebp+0xc]
1000d46a:	push   DWORD PTR [ebp+0x8]
1000d46d:	call   0x1000d693
1000d472:	mov    eax,esi
1000d474:	call   0x10059b0d
1000d479:	ret    0x10
1000d47c:	push   DWORD PTR [ebp-0x14]
1000d47f:	call   0x10042e92
1000d484:	pop    ecx
1000d485:	push   0x0
1000d487:	push   0x0
1000d489:	call   0x100479b4
1000d48e:	int3   
1000d48f:	push   0x24
1000d491:	mov    eax,0x1006046e
1000d496:	call   0x10059a68
1000d49b:	mov    ebx,ecx
1000d49d:	push   0x6
1000d49f:	pop    ecx
1000d4a0:	mov    esi,edx
1000d4a2:	lea    edi,[ebp-0x30]
1000d4a5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d4a7:	mov    ecx,DWORD PTR [ebx+0x4]
1000d4aa:	test   ecx,ecx
1000d4ac:	jne    0x1000d4b2
1000d4ae:	xor    edi,edi
1000d4b0:	jmp    0x1000d4bf
1000d4b2:	mov    eax,DWORD PTR [ebx+0xc]
1000d4b5:	sub    eax,ecx
1000d4b7:	push   0x18
1000d4b9:	cdq    
1000d4ba:	pop    ecx
1000d4bb:	idiv   ecx
1000d4bd:	mov    edi,eax
1000d4bf:	mov    eax,ebx
1000d4c1:	call   0x1000cde5
1000d4c6:	mov    esi,0xaaaaaaa
1000d4cb:	mov    ecx,esi
1000d4cd:	sub    ecx,eax
1000d4cf:	cmp    ecx,0x1
1000d4d2:	jae    0x1000d4d9
1000d4d4:	call   0x1000a740
1000d4d9:	mov    eax,ebx
1000d4db:	call   0x1000cde5
1000d4e0:	inc    eax
1000d4e1:	cmp    edi,eax
1000d4e3:	jae    0x1000d594
1000d4e9:	mov    eax,edi
1000d4eb:	shr    eax,1
1000d4ed:	sub    esi,eax
1000d4ef:	cmp    esi,edi
1000d4f1:	jae    0x1000d4f7
1000d4f3:	xor    edi,edi
1000d4f5:	jmp    0x1000d4f9
1000d4f7:	add    edi,eax
1000d4f9:	mov    eax,ebx
1000d4fb:	call   0x1000cde5
1000d500:	inc    eax
1000d501:	cmp    edi,eax
1000d503:	jae    0x1000d50f
1000d505:	mov    eax,ebx
1000d507:	call   0x1000cde5
1000d50c:	mov    edi,eax
1000d50e:	inc    edi
1000d50f:	mov    ecx,edi
1000d511:	call   0x1000d649
1000d516:	and    DWORD PTR [ebp-0x4],0x0
1000d51a:	mov    edx,DWORD PTR [ebx+0x4]
1000d51d:	push   eax
1000d51e:	push   DWORD PTR [ebp+0xc]
1000d521:	mov    DWORD PTR [ebp-0x14],eax
1000d524:	call   0x1000d77f
1000d529:	lea    ecx,[ebp-0x30]
1000d52c:	push   ecx
1000d52d:	push   0x1
1000d52f:	push   eax
1000d530:	call   0x1000d34a
1000d535:	mov    edx,DWORD PTR [ebp+0xc]
1000d538:	push   eax
1000d539:	push   DWORD PTR [ebx+0x8]
1000d53c:	call   0x1000d77f
1000d541:	mov    eax,ebx
1000d543:	call   0x1000cde5
1000d548:	mov    esi,eax
1000d54a:	mov    eax,DWORD PTR [ebx+0x4]
1000d54d:	inc    esi
1000d54e:	test   eax,eax
1000d550:	je     0x1000d567
1000d552:	mov    ecx,DWORD PTR [ebx+0x8]
1000d555:	jmp    0x1000d55a
1000d557:	add    eax,0x18
1000d55a:	cmp    eax,ecx
1000d55c:	jne    0x1000d557
1000d55e:	push   DWORD PTR [ebx+0x4]
1000d561:	call   0x10042e92
1000d566:	pop    ecx
1000d567:	mov    eax,DWORD PTR [ebp-0x14]
1000d56a:	imul   edi,edi,0x18
1000d56d:	imul   esi,esi,0x18
1000d570:	add    edi,eax
1000d572:	add    esi,eax
1000d574:	mov    DWORD PTR [ebx+0xc],edi
1000d577:	mov    DWORD PTR [ebx+0x8],esi
1000d57a:	mov    DWORD PTR [ebx+0x4],eax
1000d57d:	jmp    0x1000d641
1000d582:	push   DWORD PTR [ebp-0x14]
1000d585:	call   0x10042e92
1000d58a:	pop    ecx
1000d58b:	push   0x0
1000d58d:	push   0x0
1000d58f:	call   0x100479b4
1000d594:	mov    ecx,DWORD PTR [ebx+0x8]
1000d597:	mov    edi,DWORD PTR [ebp+0xc]
1000d59a:	mov    eax,ecx
1000d59c:	sub    eax,edi
1000d59e:	push   0x18
1000d5a0:	cdq    
1000d5a1:	pop    esi
1000d5a2:	idiv   esi
1000d5a4:	cmp    eax,0x1
1000d5a7:	jae    0x1000d5f8
1000d5a9:	lea    eax,[edi+0x18]
1000d5ac:	push   eax
1000d5ad:	push   ecx
1000d5ae:	mov    edx,edi
1000d5b0:	call   0x1000d77f
1000d5b5:	mov    DWORD PTR [ebp-0x4],0x2
1000d5bc:	mov    ecx,DWORD PTR [ebx+0x8]
1000d5bf:	lea    eax,[ebp-0x30]
1000d5c2:	push   eax
1000d5c3:	mov    eax,ecx
1000d5c5:	sub    eax,edi
1000d5c7:	cdq    
1000d5c8:	idiv   esi
1000d5ca:	xor    edx,edx
1000d5cc:	inc    edx
1000d5cd:	sub    edx,eax
1000d5cf:	push   edx
1000d5d0:	push   ecx
1000d5d1:	call   0x1000d34a
1000d5d6:	add    DWORD PTR [ebx+0x8],esi
1000d5d9:	mov    ebx,DWORD PTR [ebx+0x8]
1000d5dc:	lea    eax,[ebx-0x18]
1000d5df:	cmp    edi,eax
1000d5e1:	mov    edx,edi
1000d5e3:	je     0x1000d641
1000d5e5:	mov    edi,edx
1000d5e7:	push   0x6
1000d5e9:	add    edx,0x18
1000d5ec:	cmp    edx,eax
1000d5ee:	pop    ecx
1000d5ef:	lea    esi,[ebp-0x30]
1000d5f2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d5f4:	jne    0x1000d5e5
1000d5f6:	jmp    0x1000d641
1000d5f8:	lea    esi,[ecx-0x18]
1000d5fb:	push   ecx
1000d5fc:	push   ecx
1000d5fd:	mov    edx,esi
1000d5ff:	call   0x1000d77f
1000d604:	mov    DWORD PTR [ebx+0x8],eax
1000d607:	mov    eax,esi
1000d609:	cmp    edi,eax
1000d60b:	je     0x1000d627
1000d60d:	lea    edx,[eax+0x18]
1000d610:	sub    eax,0x18
1000d613:	sub    edx,0x18
1000d616:	cmp    eax,DWORD PTR [ebp+0xc]
1000d619:	push   0x6
1000d61b:	pop    ecx
1000d61c:	mov    esi,eax
1000d61e:	mov    edi,edx
1000d620:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d622:	jne    0x1000d610
1000d624:	mov    edi,DWORD PTR [ebp+0xc]
1000d627:	lea    eax,[edi+0x18]
1000d62a:	cmp    edi,eax
1000d62c:	mov    edx,edi
1000d62e:	je     0x1000d641
1000d630:	mov    edi,edx
1000d632:	push   0x6
1000d634:	add    edx,0x18
1000d637:	cmp    edx,eax
1000d639:	pop    ecx
1000d63a:	lea    esi,[ebp-0x30]
1000d63d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d63f:	jne    0x1000d630
1000d641:	call   0x10059b0d
1000d646:	ret    0x8
1000d649:	push   ebp
1000d64a:	mov    ebp,esp
1000d64c:	sub    esp,0x10
1000d64f:	test   ecx,ecx
1000d651:	ja     0x1000d661
1000d653:	xor    ecx,ecx
1000d655:	imul   ecx,ecx,0x18
1000d658:	push   ecx
1000d659:	call   0x1004349e
1000d65e:	pop    ecx
1000d65f:	leave  
1000d660:	ret    
1000d661:	or     eax,0xffffffff
1000d664:	xor    edx,edx
1000d666:	div    ecx
1000d668:	cmp    eax,0x18
1000d66b:	jae    0x1000d655
1000d66d:	and    DWORD PTR [ebp-0x4],0x0
1000d671:	lea    eax,[ebp-0x4]
1000d674:	push   eax
1000d675:	lea    ecx,[ebp-0x10]
1000d678:	call   0x10042f12
1000d67d:	push   0x10074cf8
1000d682:	lea    eax,[ebp-0x10]
1000d685:	push   eax
1000d686:	mov    DWORD PTR [ebp-0x10],0x100665c8
1000d68d:	call   0x100479b4
1000d692:	int3   
1000d693:	push   0x0
1000d695:	mov    eax,0x10062102
1000d69a:	call   0x10059a35
1000d69f:	mov    eax,DWORD PTR [ebp+0x8]
1000d6a2:	mov    DWORD PTR [esi],eax
1000d6a4:	mov    eax,DWORD PTR [ebp+0xc]
1000d6a7:	mov    DWORD PTR [esi+0x4],eax
1000d6aa:	mov    eax,DWORD PTR [ebp+0x10]
1000d6ad:	lea    edi,[esi+0xc]
1000d6b0:	push   ebx
1000d6b1:	mov    ecx,edi
1000d6b3:	mov    DWORD PTR [esi+0x8],eax
1000d6b6:	mov    DWORD PTR [ebp+0x8],edi
1000d6b9:	call   0x100011a7
1000d6be:	and    DWORD PTR [ebp-0x4],0x0
1000d6c2:	add    edi,0x1c
1000d6c5:	lea    ecx,[ebx+0x1c]
1000d6c8:	push   edi
1000d6c9:	call   0x1000cd24
1000d6ce:	mov    BYTE PTR [esi+0x38],0x0
1000d6d2:	mov    BYTE PTR [esi+0x39],0x0
1000d6d6:	mov    eax,esi
1000d6d8:	call   0x10059b0d
1000d6dd:	ret    0xc
1000d6e0:	push   ecx
1000d6e1:	push   ebp
1000d6e2:	mov    ebp,DWORD PTR [esp+0xc]
1000d6e6:	cmp    BYTE PTR [ebp+0x39],0x0
1000d6ea:	push   edi
1000d6eb:	mov    DWORD PTR [esp+0x8],ecx
1000d6ef:	mov    edi,ebp
1000d6f1:	jne    0x1000d72a
1000d6f3:	push   ebx
1000d6f4:	push   esi
1000d6f5:	push   DWORD PTR [edi+0x8]
1000d6f8:	mov    ecx,DWORD PTR [esp+0x14]
1000d6fc:	call   0x1000d6e0
1000d701:	mov    edi,DWORD PTR [edi]
1000d703:	lea    ebx,[ebp+0xc]
1000d706:	lea    esi,[ebx+0x1c]
1000d709:	call   0x1000cdca
1000d70e:	push   0x0
1000d710:	push   0x1
1000d712:	mov    ecx,ebx
1000d714:	call   0x100012f0
1000d719:	push   ebp
1000d71a:	call   0x10042e92
1000d71f:	cmp    BYTE PTR [edi+0x39],0x0
1000d723:	pop    ecx
1000d724:	mov    ebp,edi
1000d726:	je     0x1000d6f5
1000d728:	pop    esi
1000d729:	pop    ebx
1000d72a:	pop    edi
1000d72b:	pop    ebp
1000d72c:	pop    ecx
1000d72d:	ret    0x4
1000d730:	push   0x8
1000d732:	mov    eax,0x10060f4d
1000d737:	call   0x10059a35
1000d73c:	and    DWORD PTR [ebp-0x14],0x0
1000d740:	mov    DWORD PTR [ebp-0x10],edi
1000d743:	xor    esi,esi
1000d745:	lea    eax,[ebp+0x8]
1000d748:	inc    esi
1000d749:	push   eax
1000d74a:	mov    ecx,edi
1000d74c:	mov    DWORD PTR [ebp-0x4],esi
1000d74f:	call   0x100011a7
1000d754:	lea    eax,[edi+0x1c]
1000d757:	push   eax
1000d758:	lea    ecx,[ebp+0x24]
1000d75b:	mov    BYTE PTR [ebp-0x4],0x2
1000d75f:	call   0x1000cd24
1000d764:	push   0x0
1000d766:	push   esi
1000d767:	lea    ecx,[ebp+0x8]
1000d76a:	call   0x100012f0
1000d76f:	lea    esi,[ebp+0x24]
1000d772:	call   0x1000cdca
1000d777:	mov    eax,edi
1000d779:	call   0x10059b0d
1000d77e:	ret    
1000d77f:	push   ebp
1000d780:	mov    ebp,esp
1000d782:	push   ecx
1000d783:	push   edi
1000d784:	xor    eax,eax
1000d786:	lea    edi,[ebp-0x4]
1000d789:	stos   BYTE PTR es:[edi],al
1000d78a:	push   DWORD PTR [ebp-0x4]
1000d78d:	mov    eax,DWORD PTR [ebp+0xc]
1000d790:	push   DWORD PTR [ebp+0x8]
1000d793:	push   DWORD PTR [ebp+0x8]
1000d796:	call   0x1000d7cf
1000d79b:	add    esp,0xc
1000d79e:	pop    edi
1000d79f:	leave  
1000d7a0:	ret    0x8
1000d7a3:	push   ebp
1000d7a4:	mov    ebp,esp
1000d7a6:	xor    eax,eax
1000d7a8:	cmp    DWORD PTR [ebp+0xc],eax
1000d7ab:	jbe    0x1000d7cd
1000d7ad:	push   esi
1000d7ae:	push   edi
1000d7af:	cmp    DWORD PTR [ebp+0x8],eax
1000d7b2:	je     0x1000d7bf
1000d7b4:	mov    esi,DWORD PTR [ebp+0x10]
1000d7b7:	mov    edi,DWORD PTR [ebp+0x8]
1000d7ba:	push   0x6
1000d7bc:	pop    ecx
1000d7bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d7bf:	dec    DWORD PTR [ebp+0xc]
1000d7c2:	add    DWORD PTR [ebp+0x8],0x18
1000d7c6:	cmp    DWORD PTR [ebp+0xc],eax
1000d7c9:	ja     0x1000d7af
1000d7cb:	pop    edi
1000d7cc:	pop    esi
1000d7cd:	pop    ebp
1000d7ce:	ret    
1000d7cf:	cmp    edx,DWORD PTR [esp+0x4]
1000d7d3:	je     0x1000d7f2
1000d7d5:	push   esi
1000d7d6:	push   edi
1000d7d7:	test   eax,eax
1000d7d9:	je     0x1000d7e4
1000d7db:	push   0x6
1000d7dd:	pop    ecx
1000d7de:	mov    esi,edx
1000d7e0:	mov    edi,eax
1000d7e2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d7e4:	add    edx,0x18
1000d7e7:	add    eax,0x18
1000d7ea:	cmp    edx,DWORD PTR [esp+0xc]
1000d7ee:	jne    0x1000d7d7
1000d7f0:	pop    edi
1000d7f1:	pop    esi
1000d7f2:	ret    
1000d7f3:	push   0x4
1000d7f5:	mov    eax,0x1005f66c
1000d7fa:	call   0x10059a35
1000d7ff:	mov    esi,ecx
1000d801:	push   0xc
1000d803:	call   0x1004349e
1000d808:	pop    ecx
1000d809:	mov    DWORD PTR [ebp-0x10],eax
1000d80c:	and    DWORD PTR [ebp-0x4],0x0
1000d810:	test   eax,eax
1000d812:	je     0x1000d833
1000d814:	and    DWORD PTR [eax+0x4],0x0
1000d818:	cmp    BYTE PTR [ebp+0x8],0x0
1000d81c:	mov    DWORD PTR [eax+0x8],0x1
1000d823:	je     0x1000d82f
1000d825:	push   esi
1000d826:	mov    esi,eax
1000d828:	call   0x1000d89d
1000d82d:	jmp    0x1000d835
1000d82f:	mov    DWORD PTR [eax],esi
1000d831:	jmp    0x1000d835
1000d833:	xor    eax,eax
1000d835:	or     DWORD PTR [ebp-0x4],0xffffffff
1000d839:	test   eax,eax
1000d83b:	mov    DWORD PTR [edi],eax
1000d83d:	jne    0x1000d849
1000d83f:	push   0x8007000e
1000d844:	call   0x10050b90
1000d849:	mov    eax,edi
1000d84b:	call   0x10059b0d
1000d850:	ret    0x4
1000d853:	push   esi
1000d854:	mov    esi,DWORD PTR [eax]
1000d856:	xor    eax,eax
1000d858:	cmp    esi,eax
1000d85a:	je     0x1000d86e
1000d85c:	cmp    DWORD PTR [esi+0x4],eax
1000d85f:	jne    0x1000d86b
1000d861:	push   DWORD PTR [esi]
1000d863:	call   0x10050a30
1000d868:	mov    DWORD PTR [esi+0x4],eax
1000d86b:	mov    eax,DWORD PTR [esi+0x4]
1000d86e:	pop    esi
1000d86f:	ret    
1000d870:	push   edi
1000d871:	mov    edi,eax
1000d873:	mov    eax,DWORD PTR [edi]
1000d875:	test   eax,eax
1000d877:	je     0x1000d88f
1000d879:	cmp    DWORD PTR [eax+0x8],0x1
1000d87d:	jne    0x1000d88f
1000d87f:	push   esi
1000d880:	mov    esi,DWORD PTR [eax]
1000d882:	and    DWORD PTR [eax],0x0
1000d885:	call   0x100025c2
1000d88a:	mov    eax,esi
1000d88c:	pop    esi
1000d88d:	pop    edi
1000d88e:	ret    
1000d88f:	push   0x80004003
1000d894:	call   0x10050b90
1000d899:	xor    eax,eax
1000d89b:	pop    edi
1000d89c:	ret    
1000d89d:	cmp    DWORD PTR [esp+0x4],0x0
1000d8a2:	je     0x1000d8cb
1000d8a4:	push   DWORD PTR [esp+0x4]
1000d8a8:	call   DWORD PTR ds:0x100662a0
1000d8ae:	push   eax
1000d8af:	push   DWORD PTR [esp+0x8]
1000d8b3:	call   DWORD PTR ds:0x100662a8
1000d8b9:	test   eax,eax
1000d8bb:	mov    DWORD PTR [esi],eax
1000d8bd:	jne    0x1000d8ce
1000d8bf:	push   0x8007000e
1000d8c4:	call   0x10050b90
1000d8c9:	jmp    0x1000d8ce
1000d8cb:	and    DWORD PTR [esi],0x0
1000d8ce:	mov    eax,esi
1000d8d0:	ret    0x4
1000d8d3:	push   0x38
1000d8d5:	mov    eax,0x10062d21
1000d8da:	call   0x10059a35
1000d8df:	mov    esi,DWORD PTR [ebp+0x8]
1000d8e2:	xor    ebx,ebx
1000d8e4:	cmp    DWORD PTR [esi+0x8],ebx
1000d8e7:	jne    0x1000d8f3
1000d8e9:	mov    eax,0x80004005
1000d8ee:	jmp    0x1000d97c
1000d8f3:	mov    ecx,DWORD PTR [ebp+0xc]
1000d8f6:	push   0x1
1000d8f8:	lea    edi,[ebp+0xc]
1000d8fb:	call   0x1000d7f3
1000d900:	mov    ecx,DWORD PTR [ebp+0x10]
1000d903:	push   0x1
1000d905:	lea    edi,[ebp+0x8]
1000d908:	mov    DWORD PTR [ebp-0x4],ebx
1000d90b:	call   0x1000d7f3
1000d910:	mov    eax,edi
1000d912:	mov    BYTE PTR [ebp-0x4],0x1
1000d916:	call   0x1000d853
1000d91b:	push   eax
1000d91c:	lea    ecx,[ebp-0x44]
1000d91f:	call   0x100011cd
1000d924:	lea    eax,[ebp+0xc]
1000d927:	mov    BYTE PTR [ebp-0x4],0x2
1000d92b:	call   0x1000d853
1000d930:	push   eax
1000d931:	lea    ecx,[ebp-0x28]
1000d934:	call   0x100011cd
1000d939:	push   ebx
1000d93a:	lea    eax,[ebp-0x28]
1000d93d:	mov    BYTE PTR [ebp-0x4],0x3
1000d941:	mov    edx,DWORD PTR [esi+0x8]
1000d944:	push   eax
1000d945:	lea    ecx,[ebp-0x44]
1000d948:	call   0x10007f61
1000d94d:	mov    ecx,DWORD PTR [ebp+0x14]
1000d950:	neg    al
1000d952:	push   ebx
1000d953:	push   0x1
1000d955:	sbb    eax,eax
1000d957:	mov    WORD PTR [ecx],ax
1000d95a:	lea    ecx,[ebp-0x28]
1000d95d:	call   0x100012f0
1000d962:	push   ebx
1000d963:	push   0x1
1000d965:	lea    ecx,[ebp-0x44]
1000d968:	call   0x100012f0
1000d96d:	call   0x100025c2
1000d972:	lea    edi,[ebp+0xc]
1000d975:	call   0x100025c2
1000d97a:	xor    eax,eax
1000d97c:	call   0x10059b0d
1000d981:	ret    0x10
1000d984:	push   0x1c
1000d986:	mov    eax,0x10060dbd
1000d98b:	call   0x10059a35
1000d990:	mov    esi,DWORD PTR [ebp+0x8]
1000d993:	cmp    DWORD PTR [esi+0x8],0x0
1000d997:	jne    0x1000d9a0
1000d999:	mov    eax,0x80004005
1000d99e:	jmp    0x1000d9ee
1000d9a0:	mov    ecx,DWORD PTR [ebp+0xc]
1000d9a3:	push   0x1
1000d9a5:	lea    edi,[ebp+0x8]
1000d9a8:	call   0x1000d7f3
1000d9ad:	and    DWORD PTR [ebp-0x4],0x0
1000d9b1:	mov    eax,edi
1000d9b3:	call   0x1000d853
1000d9b8:	push   eax
1000d9b9:	lea    ecx,[ebp-0x28]
1000d9bc:	call   0x100011cd
1000d9c1:	lea    eax,[ebp-0x28]
1000d9c4:	push   eax
1000d9c5:	mov    BYTE PTR [ebp-0x4],0x1
1000d9c9:	push   DWORD PTR [esi+0x8]
1000d9cc:	call   0x1000826a
1000d9d1:	mov    ecx,DWORD PTR [ebp+0x10]
1000d9d4:	neg    al
1000d9d6:	push   0x0
1000d9d8:	push   0x1
1000d9da:	sbb    eax,eax
1000d9dc:	mov    WORD PTR [ecx],ax
1000d9df:	lea    ecx,[ebp-0x28]
1000d9e2:	call   0x100012f0
1000d9e7:	call   0x100025c2
1000d9ec:	xor    eax,eax
1000d9ee:	call   0x10059b0d
1000d9f3:	ret    0xc
1000d9f6:	mov    eax,DWORD PTR [esp+0x4]
1000d9fa:	push   edi
1000d9fb:	mov    edi,DWORD PTR [eax+0x8]
1000d9fe:	test   edi,edi
1000da00:	jne    0x1000da09
1000da02:	mov    eax,0x80004005
1000da07:	jmp    0x1000da10
1000da09:	call   0x1000837d
1000da0e:	xor    eax,eax
1000da10:	pop    edi
1000da11:	ret    0x4
1000da14:	push   0x38
1000da16:	mov    eax,0x10062d21
1000da1b:	call   0x10059a35
1000da20:	mov    esi,DWORD PTR [ebp+0x8]
1000da23:	cmp    DWORD PTR [esi+0x8],0x0
1000da27:	jne    0x1000da33
1000da29:	mov    eax,0x80004005
1000da2e:	jmp    0x1000dabe
1000da33:	mov    ecx,DWORD PTR [ebp+0xc]
1000da36:	push   0x1
1000da38:	lea    edi,[ebp+0xc]
1000da3b:	call   0x1000d7f3
1000da40:	mov    ecx,DWORD PTR [ebp+0x10]
1000da43:	and    DWORD PTR [ebp-0x4],0x0
1000da47:	push   0x1
1000da49:	lea    edi,[ebp+0x8]
1000da4c:	call   0x1000d7f3
1000da51:	mov    eax,edi
1000da53:	mov    BYTE PTR [ebp-0x4],0x1
1000da57:	call   0x1000d853
1000da5c:	push   eax
1000da5d:	lea    ecx,[ebp-0x44]
1000da60:	call   0x100011cd
1000da65:	lea    eax,[ebp+0xc]
1000da68:	mov    BYTE PTR [ebp-0x4],0x2
1000da6c:	call   0x1000d853
1000da71:	push   eax
1000da72:	lea    ecx,[ebp-0x28]
1000da75:	call   0x100011cd
1000da7a:	lea    eax,[ebp-0x28]
1000da7d:	mov    BYTE PTR [ebp-0x4],0x3
1000da81:	mov    edx,DWORD PTR [esi+0x8]
1000da84:	push   eax
1000da85:	lea    ecx,[ebp-0x44]
1000da88:	call   0x100083b5
1000da8d:	mov    ecx,DWORD PTR [ebp+0x14]
1000da90:	neg    al
1000da92:	push   0x0
1000da94:	push   0x1
1000da96:	sbb    eax,eax
1000da98:	mov    WORD PTR [ecx],ax
1000da9b:	lea    ecx,[ebp-0x28]
1000da9e:	call   0x100012f0
1000daa3:	push   0x0
1000daa5:	push   0x1
1000daa7:	lea    ecx,[ebp-0x44]
1000daaa:	call   0x100012f0
1000daaf:	call   0x100025c2
1000dab4:	lea    edi,[ebp+0xc]
1000dab7:	call   0x100025c2
1000dabc:	xor    eax,eax
1000dabe:	call   0x10059b0d
1000dac3:	ret    0x10
1000dac6:	push   0x38
1000dac8:	mov    eax,0x10060f1a
1000dacd:	call   0x10059a35
1000dad2:	mov    esi,DWORD PTR [ebp+0x8]
1000dad5:	xor    ebx,ebx
1000dad7:	cmp    DWORD PTR [esi+0x8],ebx
1000dada:	jne    0x1000dae6
1000dadc:	mov    eax,0x80004005
1000dae1:	jmp    0x1000db67
1000dae6:	mov    ecx,DWORD PTR [ebp+0xc]
1000dae9:	push   0x1
1000daeb:	lea    edi,[ebp+0xc]
1000daee:	call   0x1000d7f3
1000daf3:	mov    eax,edi
1000daf5:	mov    DWORD PTR [ebp-0x4],ebx
1000daf8:	call   0x1000d853
1000dafd:	push   eax
1000dafe:	lea    ecx,[ebp-0x28]
1000db01:	call   0x100011cd
1000db06:	push   ebx
1000db07:	lea    eax,[ebp-0x28]
1000db0a:	push   eax
1000db0b:	lea    eax,[ebp-0x44]
1000db0e:	mov    BYTE PTR [ebp-0x4],0x1
1000db12:	push   eax
1000db13:	mov    eax,DWORD PTR [esi+0x8]
1000db16:	call   0x100084cc
1000db1b:	mov    BYTE PTR [ebp-0x4],0x2
1000db1f:	cmp    DWORD PTR [eax+0x18],0x10
1000db23:	jb     0x1000db2a
1000db25:	mov    eax,DWORD PTR [eax+0x4]
1000db28:	jmp    0x1000db2d
1000db2a:	add    eax,0x4
1000db2d:	push   eax
1000db2e:	lea    edi,[ebp+0x8]
1000db31:	call   0x10002467
1000db36:	push   ebx
1000db37:	push   0x1
1000db39:	lea    ecx,[ebp-0x44]
1000db3c:	call   0x100012f0
1000db41:	push   ebx
1000db42:	push   0x1
1000db44:	lea    ecx,[ebp-0x28]
1000db47:	call   0x100012f0
1000db4c:	mov    eax,edi
1000db4e:	call   0x1000d870
1000db53:	mov    ecx,DWORD PTR [ebp+0x10]
1000db56:	mov    DWORD PTR [ecx],eax
1000db58:	call   0x100025c2
1000db5d:	lea    edi,[ebp+0xc]
1000db60:	call   0x100025c2
1000db65:	xor    eax,eax
1000db67:	call   0x10059b0d
1000db6c:	ret    0xc
1000db6f:	push   esi
1000db70:	mov    esi,eax
1000db72:	call   0x1000dba0
1000db77:	cmp    DWORD PTR [esi],0x0
1000db7a:	je     0x1000db9e
1000db7c:	push   edi
1000db7d:	mov    edi,DWORD PTR [esi]
1000db7f:	test   edi,edi
1000db81:	mov    eax,DWORD PTR [edi+0x4]
1000db84:	mov    DWORD PTR [esi],eax
1000db86:	je     0x1000db98
1000db88:	push   DWORD PTR [edi+0x8]
1000db8b:	call   0x10042e92
1000db90:	push   edi
1000db91:	call   0x10042e92
1000db96:	pop    ecx
1000db97:	pop    ecx
1000db98:	cmp    DWORD PTR [esi],0x0
1000db9b:	jne    0x1000db7d
1000db9d:	pop    edi
1000db9e:	pop    esi
1000db9f:	ret    
1000dba0:	push   0x8
1000dba2:	mov    eax,0x10060ee7
1000dba7:	call   0x10059a35
1000dbac:	xor    edi,edi
1000dbae:	cmp    DWORD PTR [esi+0x14],edi
1000dbb1:	je     0x1000dbf7
1000dbb3:	lea    eax,[ebp-0x14]
1000dbb6:	push   eax
1000dbb7:	mov    ebx,esi
1000dbb9:	call   0x1000dd17
1000dbbe:	mov    ecx,DWORD PTR [eax]
1000dbc0:	mov    ebx,ecx
1000dbc2:	mov    DWORD PTR [eax],edi
1000dbc4:	mov    DWORD PTR [ebp-0x10],ebx
1000dbc7:	mov    DWORD PTR [ebp-0x4],edi
1000dbca:	cmp    DWORD PTR [ebp-0x14],edi
1000dbcd:	je     0x1000dbd9
1000dbcf:	mov    edi,DWORD PTR [ebp-0x14]
1000dbd2:	call   0x10009e75
1000dbd7:	xor    edi,edi
1000dbd9:	cmp    DWORD PTR [ebx+0x18],edi
1000dbdc:	jbe    0x1000dbea
1000dbde:	mov    ecx,DWORD PTR [esi+0x14]
1000dbe1:	mov    eax,DWORD PTR [ecx]
1000dbe3:	push   ebx
1000dbe4:	mov    DWORD PTR [ebp-0x10],edi
1000dbe7:	call   DWORD PTR [eax+0x4]
1000dbea:	cmp    DWORD PTR [ebp-0x10],edi
1000dbed:	je     0x1000dbf7
1000dbef:	mov    edi,DWORD PTR [ebp-0x10]
1000dbf2:	call   0x10009e75
1000dbf7:	call   0x10059b0d
1000dbfc:	ret    
1000dbfd:	push   ebp
1000dbfe:	lea    ebp,[esp-0x10004]
1000dc05:	mov    eax,0x10004
1000dc0a:	call   0x10049de0
1000dc0f:	push   0xffffffff
1000dc11:	push   0x10061fe5
1000dc16:	mov    eax,fs:0x0
1000dc1c:	push   eax
1000dc1d:	push   ecx
1000dc1e:	push   ecx
1000dc1f:	mov    eax,ds:0x1007e030
1000dc24:	xor    eax,ebp
1000dc26:	mov    DWORD PTR [ebp+0x10000],eax
1000dc2c:	push   ebx
1000dc2d:	push   esi
1000dc2e:	push   edi
1000dc2f:	push   eax
1000dc30:	lea    eax,[ebp-0xc]
1000dc33:	mov    fs:0x0,eax
1000dc39:	mov    esi,ecx
1000dc3b:	call   0x1000dba0
1000dc40:	mov    ecx,DWORD PTR [esi+0x18]
1000dc43:	lea    edx,[ebp-0x10]
1000dc46:	push   edx
1000dc47:	xor    ebx,ebx
1000dc49:	push   0x10000
1000dc4e:	lea    edx,[ebp+0x0]
1000dc51:	mov    DWORD PTR [ebp-0x10],ebx
1000dc54:	mov    eax,DWORD PTR [ecx]
1000dc56:	push   edx
1000dc57:	call   DWORD PTR [eax+0x4]
1000dc5a:	test   al,al
1000dc5c:	jne    0x1000dc61
1000dc5e:	mov    DWORD PTR [ebp-0x10],ebx
1000dc61:	cmp    DWORD PTR [ebp-0x10],ebx
1000dc64:	jne    0x1000dc6c
1000dc66:	mov    BYTE PTR [esi+0x10],0x1
1000dc6a:	jmp    0x1000dccf
1000dc6c:	push   0xc
1000dc6e:	call   0x1004349e
1000dc73:	mov    edi,eax
1000dc75:	pop    ecx
1000dc76:	mov    DWORD PTR [ebp-0x14],edi
1000dc79:	cmp    edi,ebx
1000dc7b:	mov    DWORD PTR [ebp-0x4],ebx
1000dc7e:	je     0x1000dca2
1000dc80:	mov    eax,DWORD PTR [ebp-0x10]
1000dc83:	push   eax
1000dc84:	mov    DWORD PTR [edi],eax
1000dc86:	mov    DWORD PTR [edi+0x4],ebx
1000dc89:	call   0x10043721
1000dc8e:	push   DWORD PTR [edi]
1000dc90:	lea    ecx,[ebp+0x0]
1000dc93:	push   ecx
1000dc94:	push   eax
1000dc95:	mov    DWORD PTR [edi+0x8],eax
1000dc98:	call   0x10045180
1000dc9d:	add    esp,0x10
1000dca0:	jmp    0x1000dca4
1000dca2:	xor    edi,edi
1000dca4:	mov    eax,DWORD PTR [esi]
1000dca6:	cmp    eax,ebx
1000dca8:	jne    0x1000dcb4
1000dcaa:	mov    DWORD PTR [esi],edi
1000dcac:	mov    DWORD PTR [esi+0x4],edi
1000dcaf:	jmp    0x1000dcbc
1000dcb1:	mov    eax,DWORD PTR [eax+0x4]
1000dcb4:	cmp    DWORD PTR [eax+0x4],ebx
1000dcb7:	jne    0x1000dcb1
1000dcb9:	mov    DWORD PTR [eax+0x4],edi
1000dcbc:	mov    eax,DWORD PTR [esi+0x4]
1000dcbf:	mov    ecx,DWORD PTR [esi+0x8]
1000dcc2:	cmp    ecx,DWORD PTR [eax]
1000dcc4:	jne    0x1000dccf
1000dcc6:	mov    eax,DWORD PTR [eax+0x4]
1000dcc9:	mov    DWORD PTR [esi+0x4],eax
1000dccc:	mov    DWORD PTR [esi+0x8],ebx
1000dccf:	mov    ecx,DWORD PTR [ebp-0xc]
1000dcd2:	mov    DWORD PTR fs:0x0,ecx
1000dcd9:	pop    ecx
1000dcda:	pop    edi
1000dcdb:	pop    esi
1000dcdc:	pop    ebx
1000dcdd:	mov    ecx,DWORD PTR [ebp+0x10000]
1000dce3:	xor    ecx,ebp
1000dce5:	call   0x10042e97
1000dcea:	add    ebp,0x10004
1000dcf0:	leave  
1000dcf1:	ret    
1000dcf2:	cmp    BYTE PTR [esi+0x10],0x0
1000dcf6:	je     0x1000dcfb
1000dcf8:	mov    al,0x1
1000dcfa:	ret    
1000dcfb:	mov    eax,DWORD PTR [esi+0x4]
1000dcfe:	test   eax,eax
1000dd00:	je     0x1000dd0c
1000dd02:	mov    ecx,DWORD PTR [esi+0x8]
1000dd05:	cmp    ecx,DWORD PTR [eax]
1000dd07:	jae    0x1000dd0c
1000dd09:	xor    al,al
1000dd0b:	ret    
1000dd0c:	mov    ecx,esi
1000dd0e:	call   0x1000dbfd
1000dd13:	mov    al,BYTE PTR [esi+0x10]
1000dd16:	ret    
1000dd17:	push   0x8
1000dd19:	mov    eax,0x10060ec4
1000dd1e:	call   0x10059a35
1000dd23:	xor    esi,esi
1000dd25:	mov    DWORD PTR [ebp-0x4],esi
1000dd28:	push   0x24
1000dd2a:	mov    DWORD PTR [ebp-0x10],esi
1000dd2d:	call   0x1004349e
1000dd32:	pop    ecx
1000dd33:	mov    DWORD PTR [ebp-0x14],eax
1000dd36:	xor    edi,edi
1000dd38:	inc    edi
1000dd39:	cmp    eax,esi
1000dd3b:	mov    DWORD PTR [ebp-0x4],edi
1000dd3e:	je     0x1000dd4a
1000dd40:	push   eax
1000dd41:	call   0x1000768c
1000dd46:	mov    ecx,eax
1000dd48:	jmp    0x1000dd4c
1000dd4a:	xor    ecx,ecx
1000dd4c:	mov    eax,DWORD PTR [ebp+0x8]
1000dd4f:	mov    DWORD PTR [eax],ecx
1000dd51:	mov    DWORD PTR [ebp-0x4],esi
1000dd54:	mov    eax,DWORD PTR [ebx+0xc]
1000dd57:	mov    esi,ecx
1000dd59:	mov    DWORD PTR [ebp-0x10],edi
1000dd5c:	call   0x100078b1
1000dd61:	jmp    0x1000dd90
1000dd63:	mov    ecx,DWORD PTR [ebx]
1000dd65:	mov    edx,DWORD PTR [ecx+0x8]
1000dd68:	mov    eax,DWORD PTR [ebp+0x8]
1000dd6b:	mov    eax,DWORD PTR [eax]
1000dd6d:	mov    edi,DWORD PTR [ecx]
1000dd6f:	push   edx
1000dd70:	call   0x100076d4
1000dd75:	mov    esi,DWORD PTR [ebx]
1000dd77:	test   esi,esi
1000dd79:	mov    eax,DWORD PTR [esi+0x4]
1000dd7c:	mov    DWORD PTR [ebx],eax
1000dd7e:	je     0x1000dd90
1000dd80:	push   DWORD PTR [esi+0x8]
1000dd83:	call   0x10042e92
1000dd88:	push   esi
1000dd89:	call   0x10042e92
1000dd8e:	pop    ecx
1000dd8f:	pop    ecx
1000dd90:	mov    eax,DWORD PTR [ebx]
1000dd92:	cmp    eax,DWORD PTR [ebx+0x4]
1000dd95:	jne    0x1000dd63
1000dd97:	test   eax,eax
1000dd99:	je     0x1000de2b
1000dd9f:	mov    edi,DWORD PTR [ebx+0x8]
1000dda2:	test   edi,edi
1000dda4:	je     0x1000de2b
1000ddaa:	mov    eax,DWORD PTR [eax+0x8]
1000ddad:	mov    ecx,DWORD PTR [ebp+0x8]
1000ddb0:	mov    ecx,DWORD PTR [ecx]
1000ddb2:	push   eax
1000ddb3:	mov    eax,ecx
1000ddb5:	xor    esi,esi
1000ddb7:	call   0x100076d4
1000ddbc:	mov    eax,DWORD PTR [ebx]
1000ddbe:	mov    ecx,DWORD PTR [ebx+0x8]
1000ddc1:	cmp    ecx,DWORD PTR [eax]
1000ddc3:	jae    0x1000de13
1000ddc5:	push   0xc
1000ddc7:	call   0x1004349e
1000ddcc:	mov    esi,eax
1000ddce:	pop    ecx
1000ddcf:	mov    DWORD PTR [ebp-0x14],esi
1000ddd2:	test   esi,esi
1000ddd4:	mov    DWORD PTR [ebp-0x4],0x2
1000dddb:	je     0x1000de09
1000dddd:	mov    eax,DWORD PTR [ebx]
1000dddf:	mov    edx,DWORD PTR [eax+0x8]
1000dde2:	mov    ecx,DWORD PTR [ebx+0x8]
1000dde5:	mov    eax,DWORD PTR [eax]
1000dde7:	and    DWORD PTR [esi+0x4],0x0
1000ddeb:	sub    eax,ecx
1000dded:	push   eax
1000ddee:	lea    edi,[ecx+edx*1]
1000ddf1:	mov    DWORD PTR [esi],eax
1000ddf3:	call   0x10043721
1000ddf8:	push   DWORD PTR [esi]
1000ddfa:	mov    DWORD PTR [esi+0x8],eax
1000ddfd:	push   edi
1000ddfe:	push   eax
1000ddff:	call   0x10045180
1000de04:	add    esp,0x10
1000de07:	jmp    0x1000de0b
1000de09:	xor    esi,esi
1000de0b:	mov    eax,DWORD PTR [ebx]
1000de0d:	mov    eax,DWORD PTR [eax+0x4]
1000de10:	mov    DWORD PTR [esi+0x4],eax
1000de13:	mov    edi,DWORD PTR [ebx]
1000de15:	test   edi,edi
1000de17:	mov    DWORD PTR [ebx],esi
1000de19:	je     0x1000de2b
1000de1b:	push   DWORD PTR [edi+0x8]
1000de1e:	call   0x10042e92
1000de23:	push   edi
1000de24:	call   0x10042e92
1000de29:	pop    ecx
1000de2a:	pop    ecx
1000de2b:	mov    eax,DWORD PTR [ebx]
1000de2d:	and    DWORD PTR [ebx+0x8],0x0
1000de31:	and    DWORD PTR [ebx+0xc],0x0
1000de35:	mov    DWORD PTR [ebx+0x4],eax
1000de38:	mov    eax,DWORD PTR [ebp+0x8]
1000de3b:	call   0x10059b0d
1000de40:	ret    0x4
1000de43:	push   esi
1000de44:	mov    esi,eax
1000de46:	call   0x1000dcf2
1000de4b:	test   al,al
1000de4d:	jne    0x1000de5d
1000de4f:	mov    eax,DWORD PTR [esi+0x4]
1000de52:	mov    ecx,DWORD PTR [esi+0x8]
1000de55:	mov    eax,DWORD PTR [eax+0x8]
1000de58:	mov    al,BYTE PTR [eax+ecx*1]
1000de5b:	pop    esi
1000de5c:	ret    
1000de5d:	xor    al,al
1000de5f:	pop    esi
1000de60:	ret    
1000de61:	push   esi
1000de62:	mov    esi,eax
1000de64:	call   0x1000dcf2
1000de69:	test   al,al
1000de6b:	je     0x1000de71
1000de6d:	xor    al,al
1000de6f:	pop    esi
1000de70:	ret    
1000de71:	mov    eax,DWORD PTR [esi+0x4]
1000de74:	test   eax,eax
1000de76:	je     0x1000de96
1000de78:	mov    ecx,DWORD PTR [esi+0x8]
1000de7b:	inc    ecx
1000de7c:	cmp    ecx,DWORD PTR [eax]
1000de7e:	jb     0x1000de90
1000de80:	mov    eax,DWORD PTR [eax+0x4]
1000de83:	test   eax,eax
1000de85:	je     0x1000de90
1000de87:	and    DWORD PTR [esi+0x8],0x0
1000de8b:	mov    DWORD PTR [esi+0x4],eax
1000de8e:	jmp    0x1000de93
1000de90:	mov    DWORD PTR [esi+0x8],ecx
1000de93:	inc    DWORD PTR [esi+0xc]
1000de96:	mov    al,0x1
1000de98:	pop    esi
1000de99:	ret    
1000de9a:	push   esi
1000de9b:	mov    esi,eax
1000de9d:	call   0x1000dcf2
1000dea2:	test   al,al
1000dea4:	je     0x1000deaa
1000dea6:	xor    eax,eax
1000dea8:	jmp    0x1000def8
1000deaa:	mov    eax,DWORD PTR [esi+0x4]
1000dead:	mov    ecx,DWORD PTR [esi+0x8]
1000deb0:	push   edi
1000deb1:	mov    edi,DWORD PTR [eax]
1000deb3:	sub    edi,ecx
1000deb5:	cmp    edi,DWORD PTR [esp+0x10]
1000deb9:	jbe    0x1000debf
1000debb:	mov    edi,DWORD PTR [esp+0x10]
1000debf:	mov    eax,DWORD PTR [eax+0x8]
1000dec2:	push   edi
1000dec3:	add    eax,ecx
1000dec5:	push   eax
1000dec6:	push   DWORD PTR [esp+0x14]
1000deca:	call   0x10045180
1000decf:	mov    eax,DWORD PTR [esi+0x8]
1000ded2:	lea    ecx,[edi+eax*1]
1000ded5:	mov    eax,DWORD PTR [esi+0x4]
1000ded8:	add    esp,0xc
1000dedb:	cmp    ecx,DWORD PTR [eax]
1000dedd:	jb     0x1000deef
1000dedf:	mov    eax,DWORD PTR [eax+0x4]
1000dee2:	test   eax,eax
1000dee4:	je     0x1000deef
1000dee6:	and    DWORD PTR [esi+0x8],0x0
1000deea:	mov    DWORD PTR [esi+0x4],eax
1000deed:	jmp    0x1000def2
1000deef:	mov    DWORD PTR [esi+0x8],ecx
1000def2:	add    DWORD PTR [esi+0xc],edi
1000def5:	mov    eax,edi
1000def7:	pop    edi
1000def8:	pop    esi
1000def9:	ret    0x8
1000defc:	push   esi
1000defd:	mov    esi,eax
1000deff:	call   0x1000dcf2
1000df04:	test   al,al
1000df06:	je     0x1000df0c
1000df08:	xor    al,al
1000df0a:	pop    esi
1000df0b:	ret    
1000df0c:	mov    eax,DWORD PTR [esi+0x4]
1000df0f:	xor    ecx,ecx
1000df11:	jmp    0x1000df24
1000df13:	mov    edx,DWORD PTR [eax]
1000df15:	sub    edx,DWORD PTR [esi+0x8]
1000df18:	add    DWORD PTR [esi+0xc],edx
1000df1b:	mov    eax,DWORD PTR [eax+0x4]
1000df1e:	mov    DWORD PTR [esi+0x4],eax
1000df21:	mov    DWORD PTR [esi+0x8],ecx
1000df24:	cmp    DWORD PTR [eax+0x4],ecx
1000df27:	mov    eax,DWORD PTR [esi+0x4]
1000df2a:	jne    0x1000df13
1000df2c:	mov    ecx,DWORD PTR [eax]
1000df2e:	sub    ecx,DWORD PTR [esi+0x8]
1000df31:	add    DWORD PTR [esi+0xc],ecx
1000df34:	mov    eax,DWORD PTR [eax]
1000df36:	mov    DWORD PTR [esi+0x8],eax
1000df39:	mov    al,0x1
1000df3b:	pop    esi
1000df3c:	ret    
1000df3d:	push   0x10
1000df3f:	mov    eax,0x10064690
1000df44:	call   0x10059a35
1000df49:	mov    ebx,ecx
1000df4b:	xor    edi,edi
1000df4d:	mov    DWORD PTR [ebp-0x10],edi
1000df50:	mov    DWORD PTR [ebp-0x4],edi
1000df53:	mov    DWORD PTR [ebp-0x14],edi
1000df56:	mov    DWORD PTR [ebp-0x18],edi
1000df59:	lea    eax,[ebp-0x18]
1000df5c:	push   eax
1000df5d:	lea    eax,[ebp-0x14]
1000df60:	push   eax
1000df61:	lea    eax,[ebp-0x10]
1000df64:	push   eax
1000df65:	mov    BYTE PTR [ebp-0x4],0x2
1000df69:	call   0x1000e006
1000df6e:	cmp    eax,edi
1000df70:	je     0x1000df96
1000df72:	mov    esi,eax
1000df74:	lea    eax,[ebp-0x18]
1000df77:	call   0x10009be6
1000df7c:	lea    eax,[ebp-0x14]
1000df7f:	call   0x10009be6
1000df84:	lea    eax,[ebp-0x10]
1000df87:	call   0x10009be6
1000df8c:	mov    eax,esi
1000df8e:	call   0x10059b0d
1000df93:	ret    0x4
1000df96:	mov    esi,DWORD PTR [ebx]
1000df98:	call   0x1000dcf2
1000df9d:	test   al,al
1000df9f:	je     0x1000dfa6
1000dfa1:	xor    esi,esi
1000dfa3:	inc    esi
1000dfa4:	jmp    0x1000df74
1000dfa6:	mov    esi,DWORD PTR [ebp+0x8]
1000dfa9:	lea    eax,[esi+0x18]
1000dfac:	push   eax
1000dfad:	mov    ecx,ebx
1000dfaf:	call   0x1000ec25
1000dfb4:	cmp    eax,edi
1000dfb6:	jne    0x1000df72
1000dfb8:	push   edi
1000dfb9:	sub    esp,0x1c
1000dfbc:	mov    ecx,esp
1000dfbe:	mov    DWORD PTR [ebp+0x8],esp
1000dfc1:	push   0x1006d384
1000dfc6:	call   0x100011cd
1000dfcb:	call   0x1000edd4
1000dfd0:	cmp    eax,edi
1000dfd2:	jne    0x1000df72
1000dfd4:	mov    ebx,DWORD PTR [ebp-0x10]
1000dfd7:	mov    DWORD PTR [ebp-0x10],edi
1000dfda:	mov    edi,esi
1000dfdc:	call   0x10009c0a
1000dfe1:	mov    ebx,DWORD PTR [ebp-0x14]
1000dfe4:	and    DWORD PTR [ebp-0x14],0x0
1000dfe8:	lea    edi,[esi+0x4]
1000dfeb:	call   0x10009c0a
1000dff0:	mov    ebx,DWORD PTR [ebp-0x18]
1000dff3:	and    DWORD PTR [ebp-0x18],0x0
1000dff7:	lea    edi,[esi+0x8]
1000dffa:	call   0x10009c0a
1000dfff:	xor    esi,esi
1000e001:	jmp    0x1000df74
1000e006:	push   0x50
1000e008:	mov    eax,0x10064653
1000e00d:	call   0x10059a9e
1000e012:	mov    eax,DWORD PTR [ebp+0x8]
1000e015:	mov    DWORD PTR [ebp-0x58],eax
1000e018:	mov    eax,DWORD PTR [ebp+0xc]
1000e01b:	mov    edi,ecx
1000e01d:	mov    DWORD PTR [ebp-0x5c],eax
1000e020:	mov    eax,DWORD PTR [ebp+0x10]
1000e023:	push   0x0
1000e025:	lea    ecx,[ebp-0x2c]
1000e028:	mov    DWORD PTR [ebp-0x4c],edi
1000e02b:	mov    DWORD PTR [ebp-0x54],eax
1000e02e:	mov    DWORD PTR [ebp-0x14],0xf
1000e035:	call   0x1000141c
1000e03a:	and    DWORD PTR [ebp-0x4],0x0
1000e03e:	mov    eax,DWORD PTR [edi]
1000e040:	mov    ebx,DWORD PTR [eax+0xc]
1000e043:	push   0x1
1000e045:	lea    eax,[ebp-0x2c]
1000e048:	push   eax
1000e049:	call   0x1000f0e5
1000e04e:	test   eax,eax
1000e050:	mov    ecx,DWORD PTR [edi]
1000e052:	mov    edi,DWORD PTR [ecx+0xc]
1000e055:	je     0x1000e06c
1000e057:	mov    esi,eax
1000e059:	push   0x0
1000e05b:	push   0x1
1000e05d:	lea    ecx,[ebp-0x2c]
1000e060:	call   0x100012f0
1000e065:	mov    eax,esi
1000e067:	jmp    0x1000e1d8
1000e06c:	push   0x1006d908
1000e071:	push   0x3
1000e073:	push   0x1006d510
1000e078:	call   0x10004258
1000e07d:	add    esp,0xc
1000e080:	push   eax
1000e081:	lea    esi,[ebp-0x2c]
1000e084:	call   0x1000658e
1000e089:	test   al,al
1000e08b:	pop    ecx
1000e08c:	jne    0x1000e0d3
1000e08e:	push   0x7483fd62
1000e093:	push   0x1006d93c
1000e098:	call   0x10004246
1000e09d:	push   0x792e0e1a
1000e0a2:	push   eax
1000e0a3:	call   0x10004246
1000e0a8:	push   0x13ca414e
1000e0ad:	push   eax
1000e0ae:	call   0x10004246
1000e0b3:	push   eax
1000e0b4:	push   0x4
1000e0b6:	push   0x1006d978
1000e0bb:	call   0x10004258
1000e0c0:	add    esp,0x24
1000e0c3:	push   eax
1000e0c4:	call   0x1000658e
1000e0c9:	test   al,al
1000e0cb:	pop    ecx
1000e0cc:	jne    0x1000e0d3
1000e0ce:	xor    esi,esi
1000e0d0:	inc    esi
1000e0d1:	jmp    0x1000e059
1000e0d3:	push   0x24
1000e0d5:	call   0x1004349e
1000e0da:	pop    ecx
1000e0db:	mov    DWORD PTR [ebp-0x50],eax
1000e0de:	test   eax,eax
1000e0e0:	mov    BYTE PTR [ebp-0x4],0x1
1000e0e4:	je     0x1000e0f6
1000e0e6:	sub    edi,ebx
1000e0e8:	push   edi
1000e0e9:	push   ebx
1000e0ea:	lea    ecx,[ebp-0x2c]
1000e0ed:	push   ecx
1000e0ee:	push   eax
1000e0ef:	call   0x100078fd
1000e0f4:	jmp    0x1000e0f8
1000e0f6:	xor    eax,eax
1000e0f8:	mov    edi,DWORD PTR [ebp-0x58]
1000e0fb:	mov    ebx,eax
1000e0fd:	call   0x10009c0a
1000e102:	or     DWORD PTR [ebp-0x4],0xffffffff
1000e106:	push   0x0
1000e108:	push   0x1
1000e10a:	lea    ecx,[ebp-0x2c]
1000e10d:	call   0x100012f0
1000e112:	mov    esi,DWORD PTR [ebp-0x4c]
1000e115:	mov    edi,esi
1000e117:	call   0x1000ee63
1000e11c:	test   eax,eax
1000e11e:	jne    0x1000e1d8
1000e124:	push   eax
1000e125:	lea    ecx,[ebp-0x48]
1000e128:	mov    DWORD PTR [ebp-0x30],0xf
1000e12f:	call   0x1000141c
1000e134:	mov    DWORD PTR [ebp-0x4],0x2
1000e13b:	mov    eax,DWORD PTR [esi]
1000e13d:	mov    ebx,DWORD PTR [eax+0xc]
1000e140:	lea    eax,[ebp-0x48]
1000e143:	push   eax
1000e144:	call   0x1000f1b0
1000e149:	test   eax,eax
1000e14b:	mov    ecx,DWORD PTR [esi]
1000e14d:	mov    edi,DWORD PTR [ecx+0xc]
1000e150:	mov    DWORD PTR [ebp-0x4c],eax
1000e153:	je     0x1000e166
1000e155:	push   0x0
1000e157:	push   0x1
1000e159:	lea    ecx,[ebp-0x48]
1000e15c:	call   0x100012f0
1000e161:	mov    eax,DWORD PTR [ebp-0x4c]
1000e164:	jmp    0x1000e1d8
1000e166:	push   0x24
1000e168:	call   0x1004349e
1000e16d:	pop    ecx
1000e16e:	mov    DWORD PTR [ebp-0x50],eax
1000e171:	test   eax,eax
1000e173:	mov    BYTE PTR [ebp-0x4],0x3
1000e177:	je     0x1000e189
1000e179:	sub    edi,ebx
1000e17b:	push   edi
1000e17c:	push   ebx
1000e17d:	lea    ecx,[ebp-0x48]
1000e180:	push   ecx
1000e181:	push   eax
1000e182:	call   0x100078fd
1000e187:	jmp    0x1000e18b
1000e189:	xor    eax,eax
1000e18b:	mov    edi,DWORD PTR [ebp-0x5c]
1000e18e:	mov    ebx,eax
1000e190:	call   0x10009c0a
1000e195:	or     DWORD PTR [ebp-0x4],0xffffffff
1000e199:	push   0x0
1000e19b:	push   0x1
1000e19d:	lea    ecx,[ebp-0x48]
1000e1a0:	call   0x100012f0
1000e1a5:	mov    edi,esi
1000e1a7:	call   0x1000ee63
1000e1ac:	test   eax,eax
1000e1ae:	jne    0x1000e1d8
1000e1b0:	push   DWORD PTR [ebp-0x54]
1000e1b3:	mov    ecx,esi
1000e1b5:	call   0x1000ee91
1000e1ba:	test   eax,eax
1000e1bc:	jne    0x1000e1d8
1000e1be:	push   eax
1000e1bf:	sub    esp,0x1c
1000e1c2:	mov    ecx,esp
1000e1c4:	mov    DWORD PTR [ebp-0x50],esp
1000e1c7:	push   0x1006d384
1000e1cc:	call   0x100011cd
1000e1d1:	mov    ebx,esi
1000e1d3:	call   0x1000edd4
1000e1d8:	call   0x10059b21
1000e1dd:	ret    0xc
1000e1e0:	push   0x80
1000e1e5:	mov    eax,0x10063b8a
1000e1ea:	call   0x10059a9e
1000e1ef:	mov    eax,DWORD PTR [ebp+0x8]
1000e1f2:	push   0x7e4292cc
1000e1f7:	xor    ebx,ebx
1000e1f9:	push   0x1006d980
1000e1fe:	mov    DWORD PTR [ebp-0x38],eax
1000e201:	mov    edi,ecx
1000e203:	mov    DWORD PTR [ebp-0x34],ebx
1000e206:	call   0x10004246
1000e20b:	push   0x6f59c38
1000e210:	push   eax
1000e211:	call   0x10004246
1000e216:	push   eax
1000e217:	push   0xe
1000e219:	mov    esi,0x1006d9c0
1000e21e:	push   esi
1000e21f:	call   0x10004258
1000e224:	add    esp,0x1c
1000e227:	push   eax
1000e228:	lea    ecx,[ebp-0x54]
1000e22b:	call   0x100011cd
1000e230:	lea    eax,[ebp-0x54]
1000e233:	add    edi,0x18
1000e236:	push   eax
1000e237:	mov    eax,edi
1000e239:	call   0x10008545
1000e23e:	push   ebx
1000e23f:	push   0x1
1000e241:	lea    ecx,[ebp-0x54]
1000e244:	mov    BYTE PTR [ebp-0x2d],al
1000e247:	call   0x100012f0
1000e24c:	cmp    BYTE PTR [ebp-0x2d],bl
1000e24f:	je     0x1000e307
1000e255:	push   ebx
1000e256:	lea    ecx,[ebp-0x2c]
1000e259:	mov    DWORD PTR [ebp-0x14],0xf
1000e260:	call   0x1000141c
1000e265:	push   0x5f27aafa
1000e26a:	push   0x1006d9d0
1000e26f:	mov    DWORD PTR [ebp-0x4],ebx
1000e272:	call   0x10004246
1000e277:	push   0x10dd66e8
1000e27c:	push   eax
1000e27d:	call   0x10004246
1000e282:	push   0x27a5d3fe
1000e287:	push   eax
1000e288:	call   0x10004246
1000e28d:	push   eax
1000e28e:	push   0xe
1000e290:	push   esi
1000e291:	call   0x10004258
1000e296:	add    esp,0x24
1000e299:	push   eax
1000e29a:	lea    ecx,[ebp-0x70]
1000e29d:	call   0x100011cd
1000e2a2:	push   ebx
1000e2a3:	lea    eax,[ebp-0x70]
1000e2a6:	push   eax
1000e2a7:	lea    eax,[ebp-0x8c]
1000e2ad:	push   eax
1000e2ae:	mov    eax,edi
1000e2b0:	mov    BYTE PTR [ebp-0x4],0x1
1000e2b4:	call   0x100084cc
1000e2b9:	cmp    DWORD PTR [eax+0x18],0x10
1000e2bd:	jb     0x1000e2c4
1000e2bf:	mov    eax,DWORD PTR [eax+0x4]
1000e2c2:	jmp    0x1000e2c7
1000e2c4:	add    eax,0x4
1000e2c7:	push   eax
1000e2c8:	call   0x10045cb5
1000e2cd:	pop    ecx
1000e2ce:	push   ebx
1000e2cf:	push   0x1
1000e2d1:	lea    ecx,[ebp-0x8c]
1000e2d7:	mov    esi,eax
1000e2d9:	call   0x100012f0
1000e2de:	push   ebx
1000e2df:	push   0x1
1000e2e1:	lea    ecx,[ebp-0x70]
1000e2e4:	mov    BYTE PTR [ebp-0x4],bl
1000e2e7:	call   0x100012f0
1000e2ec:	push   esi
1000e2ed:	lea    eax,[ebp-0x2c]
1000e2f0:	push   eax
1000e2f1:	push   DWORD PTR [ebp-0x38]
1000e2f4:	call   0x1000f23e
1000e2f9:	push   ebx
1000e2fa:	push   0x1
1000e2fc:	lea    ecx,[ebp-0x2c]
1000e2ff:	mov    DWORD PTR [ebp-0x34],eax
1000e302:	call   0x100012f0
1000e307:	mov    eax,DWORD PTR [ebp-0x34]
1000e30a:	call   0x10059b21
1000e30f:	ret    0x4
1000e312:	push   0x40
1000e314:	mov    eax,0x10061fb6
1000e319:	call   0x10059a9e
1000e31e:	mov    eax,DWORD PTR [ebp+0x8]
1000e321:	mov    eax,DWORD PTR [eax]
1000e323:	mov    edi,ecx
1000e325:	lea    ecx,[ebp-0x4c]
1000e328:	push   ecx
1000e329:	call   0x10019730
1000e32e:	mov    esi,eax
1000e330:	and    DWORD PTR [ebp-0x4],0x0
1000e334:	push   0x7f4b8870
1000e339:	push   0x1006d9fc
1000e33e:	call   0x10004246
1000e343:	push   eax
1000e344:	push   0x4
1000e346:	push   0x1006da34
1000e34b:	call   0x10004258
1000e350:	push   eax
1000e351:	call   0x1000658e
1000e356:	or     DWORD PTR [ebp-0x4],0xffffffff
1000e35a:	add    esp,0x18
1000e35d:	xor    ebx,ebx
1000e35f:	push   0x0
1000e361:	inc    ebx
1000e362:	push   ebx
1000e363:	lea    ecx,[ebp-0x4c]
1000e366:	mov    BYTE PTR [ebp-0x2d],al
1000e369:	call   0x100012f0
1000e36e:	cmp    BYTE PTR [ebp-0x2d],0x0
1000e372:	jne    0x1000e42f
1000e378:	mov    eax,DWORD PTR [edi+0x4]
1000e37b:	lea    ecx,[ebp-0x2c]
1000e37e:	push   ecx
1000e37f:	call   0x10019730
1000e384:	xor    edi,edi
1000e386:	lea    eax,[ebp-0x2c]
1000e389:	mov    DWORD PTR [ebp-0x4],ebx
1000e38c:	call   0x10011e07
1000e391:	cmp    BYTE PTR [eax],0x31
1000e394:	je     0x1000e424
1000e39a:	push   0x7ccbe7c6
1000e39f:	push   0x625acf80
1000e3a4:	push   0x77d48cce
1000e3a9:	push   0x723a779e
1000e3ae:	push   0x1006da3c
1000e3b3:	call   0x10004246
1000e3b8:	pop    ecx
1000e3b9:	pop    ecx
1000e3ba:	push   eax
1000e3bb:	call   0x10004246
1000e3c0:	pop    ecx
1000e3c1:	pop    ecx
1000e3c2:	push   eax
1000e3c3:	call   0x10004246
1000e3c8:	pop    ecx
1000e3c9:	pop    ecx
1000e3ca:	push   eax
1000e3cb:	call   0x10004246
1000e3d0:	push   eax
1000e3d1:	push   0x3
1000e3d3:	push   0x1006da60
1000e3d8:	call   0x10004258
1000e3dd:	push   eax
1000e3de:	lea    esi,[ebp-0x2c]
1000e3e1:	call   0x1000658e
1000e3e6:	add    esp,0x18
1000e3e9:	test   al,al
1000e3eb:	jne    0x1000e424
1000e3ed:	push   0x38edd02c
1000e3f2:	push   0x1006da64
1000e3f7:	call   0x10004246
1000e3fc:	push   eax
1000e3fd:	push   0x3
1000e3ff:	push   0x1006da88
1000e404:	call   0x10004258
1000e409:	push   eax
1000e40a:	call   0x1000658e
1000e40f:	add    esp,0x18
1000e412:	test   al,al
1000e414:	jne    0x1000e424
1000e416:	push   0x0
1000e418:	push   ebx
1000e419:	mov    ecx,esi
1000e41b:	call   0x100012f0
1000e420:	mov    al,bl
1000e422:	jmp    0x1000e431
1000e424:	push   0x0
1000e426:	push   ebx
1000e427:	lea    ecx,[ebp-0x2c]
1000e42a:	call   0x100012f0
1000e42f:	xor    al,al
1000e431:	call   0x10059b21
1000e436:	ret    
1000e437:	push   0xc
1000e439:	mov    eax,0x10064614
1000e43e:	call   0x10059a35
1000e443:	xor    edi,edi
1000e445:	mov    DWORD PTR [ebp-0x18],edi
1000e448:	mov    DWORD PTR [ebp-0x4],edi
1000e44b:	mov    DWORD PTR [ebp-0x14],edi
1000e44e:	mov    DWORD PTR [ebp-0x10],edi
1000e451:	mov    esi,DWORD PTR [ebp+0x8]
1000e454:	lea    eax,[ebp-0x10]
1000e457:	push   eax
1000e458:	lea    eax,[ebp-0x18]
1000e45b:	push   eax
1000e45c:	lea    ecx,[ebp-0x14]
1000e45f:	mov    BYTE PTR [ebp-0x4],0x2
1000e463:	call   0x1000ea73
1000e468:	mov    esi,eax
1000e46a:	cmp    esi,edi
1000e46c:	jne    0x1000e4f3
1000e472:	mov    esi,DWORD PTR [ebp+0xc]
1000e475:	mov    ecx,DWORD PTR [ebp+0x8]
1000e478:	lea    eax,[esi+0x20]
1000e47b:	push   eax
1000e47c:	call   0x1000ec25
1000e481:	mov    ebx,eax
1000e483:	cmp    ebx,edi
1000e485:	je     0x1000e4a3
1000e487:	lea    eax,[ebp-0x10]
1000e48a:	call   0x10009be6
1000e48f:	lea    eax,[ebp-0x14]
1000e492:	call   0x10009be6
1000e497:	lea    eax,[ebp-0x18]
1000e49a:	call   0x10009be6
1000e49f:	mov    eax,ebx
1000e4a1:	jmp    0x1000e50d
1000e4a3:	mov    ebx,DWORD PTR [ebp-0x18]
1000e4a6:	mov    DWORD PTR [ebp-0x18],edi
1000e4a9:	mov    edi,esi
1000e4ab:	call   0x10009c0a
1000e4b0:	mov    ebx,DWORD PTR [ebp-0x14]
1000e4b3:	and    DWORD PTR [ebp-0x14],0x0
1000e4b7:	lea    edi,[esi+0x4]
1000e4ba:	call   0x10009c0a
1000e4bf:	mov    ebx,DWORD PTR [ebp-0x10]
1000e4c2:	and    DWORD PTR [ebp-0x10],0x0
1000e4c6:	add    esi,0x8
1000e4c9:	mov    edi,esi
1000e4cb:	call   0x10009c0a
1000e4d0:	xor    esi,esi
1000e4d2:	push   esi
1000e4d3:	sub    esp,0x1c
1000e4d6:	mov    ecx,esp
1000e4d8:	mov    DWORD PTR [ebp+0xc],esp
1000e4db:	push   0x1006d384
1000e4e0:	call   0x100011cd
1000e4e5:	mov    ebx,DWORD PTR [ebp+0x8]
1000e4e8:	call   0x1000edd4
1000e4ed:	cmp    eax,esi
1000e4ef:	je     0x1000e4f3
1000e4f1:	mov    esi,eax
1000e4f3:	lea    eax,[ebp-0x10]
1000e4f6:	call   0x10009be6
1000e4fb:	lea    eax,[ebp-0x14]
1000e4fe:	call   0x10009be6
1000e503:	lea    eax,[ebp-0x18]
1000e506:	call   0x10009be6
1000e50b:	mov    eax,esi
1000e50d:	call   0x10059b0d
1000e512:	ret    0x8
1000e515:	push   ebp
1000e516:	mov    ebp,esp
1000e518:	and    esp,0xfffffff8
1000e51b:	push   0xffffffff
1000e51d:	push   0x100645ce
1000e522:	mov    eax,fs:0x0
1000e528:	push   eax
1000e529:	sub    esp,0xc8
1000e52f:	mov    eax,ds:0x1007e030
1000e534:	xor    eax,esp
1000e536:	mov    DWORD PTR [esp+0xc0],eax
1000e53d:	push   ebx
1000e53e:	push   esi
1000e53f:	push   edi
1000e540:	mov    eax,ds:0x1007e030
1000e545:	xor    eax,esp
1000e547:	push   eax
1000e548:	lea    eax,[esp+0xd8]
1000e54f:	mov    fs:0x0,eax
1000e555:	mov    eax,DWORD PTR [ebp+0x8]
1000e558:	mov    esi,edx
1000e55a:	mov    edi,ecx
1000e55c:	xor    ebx,ebx
1000e55e:	push   eax
1000e55f:	mov    ecx,esi
1000e561:	mov    DWORD PTR [esp+0x24],edi
1000e565:	mov    DWORD PTR [esp+0x20],esi
1000e569:	mov    DWORD PTR [esp+0x1c],ebx
1000e56d:	call   0x1000e312
1000e572:	test   al,al
1000e574:	pop    ecx
1000e575:	je     0x1000ea4b
1000e57b:	push   ebx
1000e57c:	lea    ecx,[esp+0xb8]
1000e583:	mov    DWORD PTR [esp+0xd0],0xf
1000e58e:	call   0x1000141c
1000e593:	mov    DWORD PTR [esp+0xe0],ebx
1000e59a:	mov    eax,DWORD PTR [edi]
1000e59c:	mov    eax,DWORD PTR [eax+0xc]
1000e59f:	lea    ecx,[esp+0x44]
1000e5a3:	mov    DWORD PTR [esp+0x24],eax
1000e5a7:	mov    eax,DWORD PTR [esi]
1000e5a9:	push   ecx
1000e5aa:	call   0x10019730
1000e5af:	mov    esi,eax
1000e5b1:	push   0x4a36b4e
1000e5b6:	push   0x1006da8c
1000e5bb:	mov    BYTE PTR [esp+0xe8],0x1
1000e5c3:	call   0x10004246
1000e5c8:	push   eax
1000e5c9:	push   0x3
1000e5cb:	push   0x1006d4e0
1000e5d0:	call   0x10004258
1000e5d5:	add    esp,0x14
1000e5d8:	push   eax
1000e5d9:	call   0x1000658e
1000e5de:	pop    ecx
1000e5df:	xor    edi,edi
1000e5e1:	push   ebx
1000e5e2:	inc    edi
1000e5e3:	push   edi
1000e5e4:	lea    ecx,[esp+0x4c]
1000e5e8:	mov    BYTE PTR [esp+0x1f],al
1000e5ec:	mov    BYTE PTR [esp+0xe8],bl
1000e5f3:	call   0x100012f0
1000e5f8:	cmp    BYTE PTR [esp+0x17],bl
1000e5fc:	je     0x1000e720
1000e602:	push   0x577359d8
1000e607:	push   0x1006dab0
1000e60c:	call   0x10004246
1000e611:	push   eax
1000e612:	push   0xe
1000e614:	mov    esi,0x1006d9c0
1000e619:	push   esi
1000e61a:	call   0x10004258
1000e61f:	add    esp,0x14
1000e622:	push   eax
1000e623:	lea    ecx,[esp+0x2c]
1000e627:	call   0x100011cd
1000e62c:	mov    eax,DWORD PTR [esp+0x1c]
1000e630:	lea    ecx,[esp+0x28]
1000e634:	add    eax,0x20
1000e637:	push   ecx
1000e638:	call   0x10008545
1000e63d:	push   ebx
1000e63e:	push   edi
1000e63f:	lea    ecx,[esp+0x30]
1000e643:	mov    BYTE PTR [esp+0x1f],al
1000e647:	call   0x100012f0
1000e64c:	cmp    BYTE PTR [esp+0x17],bl
1000e650:	je     0x1000e706
1000e656:	push   0x7d9ed48
1000e65b:	push   0x1006dad8
1000e660:	call   0x10004246
1000e665:	push   0x5a7c7528
1000e66a:	push   eax
1000e66b:	call   0x10004246
1000e670:	push   0xb8a9106
1000e675:	push   eax
1000e676:	call   0x10004246
1000e67b:	push   0x7e149af2
1000e680:	push   eax
1000e681:	call   0x10004246
1000e686:	push   eax
1000e687:	push   0xe
1000e689:	push   esi
1000e68a:	call   0x10004258
1000e68f:	add    esp,0x2c
1000e692:	push   eax
1000e693:	lea    ecx,[esp+0x2c]
1000e697:	call   0x100011cd
1000e69c:	mov    BYTE PTR [esp+0xe0],0x2
1000e6a4:	push   ebx
1000e6a5:	lea    eax,[esp+0x2c]
1000e6a9:	push   eax
1000e6aa:	lea    eax,[esp+0x4c]
1000e6ae:	push   eax
1000e6af:	mov    eax,DWORD PTR [esp+0x28]
1000e6b3:	add    eax,0x20
1000e6b6:	call   0x100084cc
1000e6bb:	cmp    DWORD PTR [eax+0x18],0x10
1000e6bf:	jb     0x1000e6c6
1000e6c1:	mov    eax,DWORD PTR [eax+0x4]
1000e6c4:	jmp    0x1000e6c9
1000e6c6:	add    eax,0x4
1000e6c9:	push   eax
1000e6ca:	call   0x10045cb5
1000e6cf:	pop    ecx
1000e6d0:	push   ebx
1000e6d1:	push   edi
1000e6d2:	lea    ecx,[esp+0x4c]
1000e6d6:	mov    esi,eax
1000e6d8:	call   0x100012f0
1000e6dd:	push   ebx
1000e6de:	push   edi
1000e6df:	lea    ecx,[esp+0x30]
1000e6e3:	mov    BYTE PTR [esp+0xe8],bl
1000e6ea:	call   0x100012f0
1000e6ef:	push   esi
1000e6f0:	lea    eax,[esp+0xb8]
1000e6f7:	push   eax
1000e6f8:	push   DWORD PTR [esp+0x28]
1000e6fc:	call   0x1000f23e
1000e701:	jmp    0x1000e9d9
1000e706:	mov    edi,DWORD PTR [esp+0x20]
1000e70a:	lea    ebx,[esp+0xb4]
1000e711:	call   0x1000f2eb
1000e716:	xor    edi,edi
1000e718:	xor    ebx,ebx
1000e71a:	inc    edi
1000e71b:	jmp    0x1000e9d9
1000e720:	push   0x6ad25e06
1000e725:	push   0x1006db14
1000e72a:	call   0x10004246
1000e72f:	push   0x28d89aa0
1000e734:	push   eax
1000e735:	call   0x10004246
1000e73a:	push   eax
1000e73b:	push   0xe
1000e73d:	mov    esi,0x1006d9c0
1000e742:	push   esi
1000e743:	call   0x10004258
1000e748:	add    esp,0x1c
1000e74b:	push   eax
1000e74c:	lea    ecx,[esp+0x2c]
1000e750:	call   0x100011cd
1000e755:	mov    eax,DWORD PTR [esp+0x1c]
1000e759:	lea    ecx,[esp+0x28]
1000e75d:	add    eax,0x20
1000e760:	push   ecx
1000e761:	call   0x10008545
1000e766:	push   ebx
1000e767:	push   edi
1000e768:	lea    ecx,[esp+0x30]
1000e76c:	mov    BYTE PTR [esp+0x1f],al
1000e770:	call   0x100012f0
1000e775:	cmp    BYTE PTR [esp+0x17],bl
1000e779:	je     0x1000e7a2
1000e77b:	push   0x1006db3c
1000e780:	push   0xe
1000e782:	push   esi
1000e783:	call   0x10004258
1000e788:	add    esp,0xc
1000e78b:	push   eax
1000e78c:	lea    ecx,[esp+0x2c]
1000e790:	call   0x100011cd
1000e795:	mov    BYTE PTR [esp+0xe0],0x3
1000e79d:	jmp    0x1000e6a4
1000e7a2:	push   0xe5de5c
1000e7a7:	push   0x1006dba0
1000e7ac:	call   0x10004246
1000e7b1:	push   0x2b6f9af8
1000e7b6:	push   eax
1000e7b7:	call   0x10004246
1000e7bc:	push   0x48de0362
1000e7c1:	push   eax
1000e7c2:	call   0x10004246
1000e7c7:	push   0x14ebf2c4
1000e7cc:	push   eax
1000e7cd:	call   0x10004246
1000e7d2:	push   0x52f46f94
1000e7d7:	push   eax
1000e7d8:	call   0x10004246
1000e7dd:	push   eax
1000e7de:	push   0xa
1000e7e0:	push   0x1006d5d8
1000e7e5:	call   0x10004258
1000e7ea:	add    esp,0x34
1000e7ed:	push   eax
1000e7ee:	lea    ecx,[esp+0x48]
1000e7f2:	call   0x100011cd
1000e7f7:	push   ebx
1000e7f8:	lea    eax,[esp+0x48]
1000e7fc:	push   eax
1000e7fd:	lea    eax,[esp+0x84]
1000e804:	push   eax
1000e805:	mov    eax,DWORD PTR [esp+0x28]
1000e809:	mov    BYTE PTR [esp+0xec],0x4
1000e811:	add    eax,0x20
1000e814:	mov    DWORD PTR [esp+0x24],edi
1000e818:	call   0x100084cc
1000e81d:	push   0x5
1000e81f:	pop    ecx
1000e820:	mov    DWORD PTR [esp+0xe0],ecx
1000e827:	cmp    DWORD PTR [eax+0x18],0x10
1000e82b:	mov    DWORD PTR [esp+0x18],0x3
1000e833:	jb     0x1000e83a
1000e835:	mov    esi,DWORD PTR [eax+0x4]
1000e838:	jmp    0x1000e83d
1000e83a:	lea    esi,[eax+0x4]
1000e83d:	push   0x1006db64
1000e842:	push   ecx
1000e843:	push   0x1006db98
1000e848:	call   0x10004258
1000e84d:	add    esp,0xc
1000e850:	push   eax
1000e851:	push   esi
1000e852:	call   0x1004566f
1000e857:	test   eax,eax
1000e859:	pop    ecx
1000e85a:	pop    ecx
1000e85b:	jne    0x1000e93f
1000e861:	push   0x47116e0e
1000e866:	push   0x1006dc08
1000e86b:	call   0x10004246
1000e870:	push   0x4cebef28
1000e875:	push   eax
1000e876:	call   0x10004246
1000e87b:	push   0x25da38a0
1000e880:	push   eax
1000e881:	call   0x10004246
1000e886:	push   eax
1000e887:	push   0x11
1000e889:	push   0x1006dc30
1000e88e:	call   0x10004258
1000e893:	add    esp,0x24
1000e896:	push   eax
1000e897:	lea    ecx,[esp+0x2c]
1000e89b:	call   0x100011cd
1000e8a0:	push   0x7
1000e8a2:	pop    edi
1000e8a3:	push   ebx
1000e8a4:	lea    eax,[esp+0x2c]
1000e8a8:	push   eax
1000e8a9:	lea    eax,[esp+0xa0]
1000e8b0:	push   eax
1000e8b1:	mov    eax,DWORD PTR [esp+0x28]
1000e8b5:	mov    DWORD PTR [esp+0xec],0x6
1000e8c0:	add    eax,0x20
1000e8c3:	mov    DWORD PTR [esp+0x24],edi
1000e8c7:	call   0x100084cc
1000e8cc:	mov    DWORD PTR [esp+0xe0],edi
1000e8d3:	push   eax
1000e8d4:	lea    esi,[esp+0x64]
1000e8d8:	mov    DWORD PTR [esp+0x1c],0xf
1000e8e0:	call   0x1002fa30
1000e8e5:	mov    esi,eax
1000e8e7:	mov    DWORD PTR [esp+0xe4],0x8
1000e8f2:	mov    DWORD PTR [esp],0x6da9b8c0
1000e8f9:	push   0x1006dbd4
1000e8fe:	mov    DWORD PTR [esp+0x20],0x1f
1000e906:	call   0x10004246
1000e90b:	cmp    DWORD PTR [esi+0x18],0x10
1000e90f:	pop    ecx
1000e910:	pop    ecx
1000e911:	jb     0x1000e918
1000e913:	mov    esi,DWORD PTR [esi+0x4]
1000e916:	jmp    0x1000e91b
1000e918:	add    esi,0x4
1000e91b:	push   eax
1000e91c:	push   edi
1000e91d:	push   0x1006dc00
1000e922:	call   0x10004258
1000e927:	add    esp,0xc
1000e92a:	push   eax
1000e92b:	push   esi
1000e92c:	call   0x10045a30
1000e931:	xor    edi,edi
1000e933:	pop    ecx
1000e934:	inc    edi
1000e935:	test   eax,eax
1000e937:	pop    ecx
1000e938:	mov    BYTE PTR [esp+0x17],0x1
1000e93d:	je     0x1000e943
1000e93f:	mov    BYTE PTR [esp+0x17],bl
1000e943:	test   BYTE PTR [esp+0x18],0x10
1000e948:	je     0x1000e95a
1000e94a:	and    DWORD PTR [esp+0x18],0xffffffef
1000e94f:	push   ebx
1000e950:	push   edi
1000e951:	lea    ecx,[esp+0x68]
1000e955:	call   0x100012f0
1000e95a:	test   BYTE PTR [esp+0x18],0x8
1000e95f:	je     0x1000e974
1000e961:	and    DWORD PTR [esp+0x18],0xfffffff7
1000e966:	push   ebx
1000e967:	push   edi
1000e968:	lea    ecx,[esp+0xa0]
1000e96f:	call   0x100012f0
1000e974:	test   BYTE PTR [esp+0x18],0x4
1000e979:	je     0x1000e98b
1000e97b:	and    DWORD PTR [esp+0x18],0xfffffffb
1000e980:	push   ebx
1000e981:	push   edi
1000e982:	lea    ecx,[esp+0x30]
1000e986:	call   0x100012f0
1000e98b:	test   BYTE PTR [esp+0x18],0x2
1000e990:	je     0x1000e9a5
1000e992:	and    DWORD PTR [esp+0x18],0xfffffffd
1000e997:	push   ebx
1000e998:	push   edi
1000e999:	lea    ecx,[esp+0x84]
1000e9a0:	call   0x100012f0
1000e9a5:	mov    DWORD PTR [esp+0xe0],ebx
1000e9ac:	test   BYTE PTR [esp+0x18],0x1
1000e9b1:	je     0x1000e9be
1000e9b3:	push   ebx
1000e9b4:	push   edi
1000e9b5:	lea    ecx,[esp+0x4c]
1000e9b9:	call   0x100012f0
1000e9be:	cmp    BYTE PTR [esp+0x17],bl
1000e9c2:	jne    0x1000e706
1000e9c8:	mov    ecx,DWORD PTR [esp+0x20]
1000e9cc:	lea    eax,[esp+0xb4]
1000e9d3:	push   eax
1000e9d4:	call   0x1000f34f
1000e9d9:	mov    esi,eax
1000e9db:	cmp    esi,ebx
1000e9dd:	je     0x1000e9f1
1000e9df:	push   ebx
1000e9e0:	push   edi
1000e9e1:	lea    ecx,[esp+0xbc]
1000e9e8:	call   0x100012f0
1000e9ed:	mov    eax,esi
1000e9ef:	jmp    0x1000ea4d
1000e9f1:	mov    eax,DWORD PTR [esp+0x20]
1000e9f5:	mov    eax,DWORD PTR [eax]
1000e9f7:	mov    esi,DWORD PTR [eax+0xc]
1000e9fa:	push   0x24
1000e9fc:	call   0x1004349e
1000ea01:	pop    ecx
1000ea02:	mov    DWORD PTR [esp+0x20],eax
1000ea06:	cmp    eax,ebx
1000ea08:	mov    BYTE PTR [esp+0xe0],0x9
1000ea10:	je     0x1000ea2b
1000ea12:	sub    esi,DWORD PTR [esp+0x24]
1000ea16:	lea    ecx,[esp+0xb4]
1000ea1d:	push   esi
1000ea1e:	push   DWORD PTR [esp+0x28]
1000ea22:	push   ecx
1000ea23:	push   eax
1000ea24:	call   0x100078fd
1000ea29:	jmp    0x1000ea2d
1000ea2b:	xor    eax,eax
1000ea2d:	mov    edi,DWORD PTR [esp+0x1c]
1000ea31:	add    edi,0xc
1000ea34:	mov    ebx,eax
1000ea36:	call   0x10009c0a
1000ea3b:	push   0x0
1000ea3d:	push   0x1
1000ea3f:	lea    ecx,[esp+0xbc]
1000ea46:	call   0x100012f0
1000ea4b:	xor    eax,eax
1000ea4d:	mov    ecx,DWORD PTR [esp+0xd8]
1000ea54:	mov    DWORD PTR fs:0x0,ecx
1000ea5b:	pop    ecx
1000ea5c:	pop    edi
1000ea5d:	pop    esi
1000ea5e:	pop    ebx
1000ea5f:	mov    ecx,DWORD PTR [esp+0xc0]
1000ea66:	xor    ecx,esp
1000ea68:	call   0x10042e97
1000ea6d:	mov    esp,ebp
1000ea6f:	pop    ebp
1000ea70:	ret    0x4
1000ea73:	push   0x4c
1000ea75:	mov    eax,0x100644cf
1000ea7a:	call   0x10059a9e
1000ea7f:	mov    eax,DWORD PTR [ebp+0x8]
1000ea82:	mov    DWORD PTR [ebp-0x54],ecx
1000ea85:	mov    ecx,DWORD PTR [ebp+0xc]
1000ea88:	mov    DWORD PTR [ebp-0x50],ecx
1000ea8b:	push   eax
1000ea8c:	mov    ecx,esi
1000ea8e:	call   0x1000ee91
1000ea93:	test   eax,eax
1000ea95:	jne    0x1000ebcd
1000ea9b:	mov    edi,esi
1000ea9d:	call   0x1000ee63
1000eaa2:	test   eax,eax
1000eaa4:	jne    0x1000ebcd
1000eaaa:	push   eax
1000eaab:	lea    ecx,[ebp-0x2c]
1000eaae:	mov    DWORD PTR [ebp-0x14],0xf
1000eab5:	call   0x1000141c
1000eaba:	and    DWORD PTR [ebp-0x4],0x0
1000eabe:	mov    eax,DWORD PTR [esi]
1000eac0:	mov    ebx,DWORD PTR [eax+0xc]
1000eac3:	lea    eax,[ebp-0x2c]
1000eac6:	push   eax
1000eac7:	call   0x1000ebd5
1000eacc:	test   eax,eax
1000eace:	mov    ecx,DWORD PTR [esi]
1000ead0:	mov    edi,DWORD PTR [ecx+0xc]
1000ead3:	mov    DWORD PTR [ebp-0x4c],eax
1000ead6:	je     0x1000eaec
1000ead8:	lea    ecx,[ebp-0x2c]
1000eadb:	push   0x0
1000eadd:	push   0x1
1000eadf:	call   0x100012f0
1000eae4:	mov    eax,DWORD PTR [ebp-0x4c]
1000eae7:	jmp    0x1000ebcd
1000eaec:	push   0x24
1000eaee:	call   0x1004349e
1000eaf3:	pop    ecx
1000eaf4:	mov    DWORD PTR [ebp-0x4c],eax
1000eaf7:	test   eax,eax
1000eaf9:	mov    BYTE PTR [ebp-0x4],0x1
1000eafd:	je     0x1000eb0f
1000eaff:	sub    edi,ebx
1000eb01:	push   edi
1000eb02:	push   ebx
1000eb03:	lea    ecx,[ebp-0x2c]
1000eb06:	push   ecx
1000eb07:	push   eax
1000eb08:	call   0x100078fd
1000eb0d:	jmp    0x1000eb11
1000eb0f:	xor    eax,eax
1000eb11:	mov    edi,DWORD PTR [ebp-0x54]
1000eb14:	mov    ebx,eax
1000eb16:	call   0x10009c0a
1000eb1b:	or     DWORD PTR [ebp-0x4],0xffffffff
1000eb1f:	push   0x0
1000eb21:	push   0x1
1000eb23:	lea    ecx,[ebp-0x2c]
1000eb26:	call   0x100012f0
1000eb2b:	mov    edi,esi
1000eb2d:	call   0x1000ee63
1000eb32:	test   eax,eax
1000eb34:	jne    0x1000ebcd
1000eb3a:	push   eax
1000eb3b:	lea    ecx,[ebp-0x48]
1000eb3e:	mov    DWORD PTR [ebp-0x30],0xf
1000eb45:	call   0x1000141c
1000eb4a:	mov    DWORD PTR [ebp-0x4],0x2
1000eb51:	mov    eax,DWORD PTR [esi]
1000eb53:	mov    ebx,DWORD PTR [eax+0xc]
1000eb56:	lea    eax,[ebp-0x48]
1000eb59:	push   eax
1000eb5a:	call   0x1000f1fc
1000eb5f:	test   eax,eax
1000eb61:	mov    ecx,DWORD PTR [esi]
1000eb63:	mov    edi,DWORD PTR [ecx+0xc]
1000eb66:	mov    DWORD PTR [ebp-0x4c],eax
1000eb69:	je     0x1000eb73
1000eb6b:	lea    ecx,[ebp-0x48]
1000eb6e:	jmp    0x1000eadb
1000eb73:	push   0x24
1000eb75:	call   0x1004349e
1000eb7a:	pop    ecx
1000eb7b:	mov    DWORD PTR [ebp-0x54],eax
1000eb7e:	test   eax,eax
1000eb80:	mov    BYTE PTR [ebp-0x4],0x3
1000eb84:	je     0x1000eb96
1000eb86:	sub    edi,ebx
1000eb88:	push   edi
1000eb89:	push   ebx
1000eb8a:	lea    ecx,[ebp-0x48]
1000eb8d:	push   ecx
1000eb8e:	push   eax
1000eb8f:	call   0x100078fd
1000eb94:	jmp    0x1000eb98
1000eb96:	xor    eax,eax
1000eb98:	mov    edi,DWORD PTR [ebp-0x50]
1000eb9b:	mov    ebx,eax
1000eb9d:	call   0x10009c0a
1000eba2:	or     DWORD PTR [ebp-0x4],0xffffffff
1000eba6:	push   0x0
1000eba8:	push   0x1
1000ebaa:	lea    ecx,[ebp-0x48]
1000ebad:	call   0x100012f0
1000ebb2:	push   0x0
1000ebb4:	sub    esp,0x1c
1000ebb7:	mov    ecx,esp
1000ebb9:	mov    DWORD PTR [ebp-0x50],esp
1000ebbc:	push   0x1006d384
1000ebc1:	call   0x100011cd
1000ebc6:	mov    ebx,esi
1000ebc8:	call   0x1000edd4
1000ebcd:	call   0x10059b21
1000ebd2:	ret    0x8
1000ebd5:	push   ebp
1000ebd6:	mov    ebp,esp
1000ebd8:	push   ecx
1000ebd9:	push   ecx
1000ebda:	and    DWORD PTR [ebp-0x4],0x0
1000ebde:	push   ebx
1000ebdf:	xor    ebx,ebx
1000ebe1:	push   esi
1000ebe2:	inc    ebx
1000ebe3:	mov    esi,DWORD PTR [edi]
1000ebe5:	call   0x1000dcf2
1000ebea:	test   al,al
1000ebec:	jne    0x1000ec21
1000ebee:	mov    eax,DWORD PTR [edi]
1000ebf0:	call   0x1000de43
1000ebf5:	mov    BYTE PTR [ebp-0x8],al
1000ebf8:	sub    al,0x30
1000ebfa:	cmp    al,0x9
1000ebfc:	ja     0x1000ec21
1000ebfe:	push   DWORD PTR [ebp-0x8]
1000ec01:	mov    esi,DWORD PTR [ebp+0x8]
1000ec04:	call   0x1000cf52
1000ec09:	mov    eax,DWORD PTR [edi]
1000ec0b:	call   0x1000de61
1000ec10:	inc    DWORD PTR [ebp-0x4]
1000ec13:	cmp    DWORD PTR [ebp-0x4],0x3
1000ec17:	jne    0x1000ebe3
1000ec19:	xor    eax,eax
1000ec1b:	pop    esi
1000ec1c:	pop    ebx
1000ec1d:	leave  
1000ec1e:	ret    0x4
1000ec21:	mov    eax,ebx
1000ec23:	jmp    0x1000ec1b
1000ec25:	push   ebp
1000ec26:	mov    ebp,esp
1000ec28:	and    esp,0xfffffff8
1000ec2b:	push   0xffffffff
1000ec2d:	push   0x10064483
1000ec32:	mov    eax,fs:0x0
1000ec38:	push   eax
1000ec39:	sub    esp,0x58
1000ec3c:	mov    eax,ds:0x1007e030
1000ec41:	xor    eax,esp
1000ec43:	mov    DWORD PTR [esp+0x50],eax
1000ec47:	push   ebx
1000ec48:	push   esi
1000ec49:	push   edi
1000ec4a:	mov    eax,ds:0x1007e030
1000ec4f:	xor    eax,esp
1000ec51:	push   eax
1000ec52:	lea    eax,[esp+0x68]
1000ec56:	mov    fs:0x0,eax
1000ec5c:	mov    eax,DWORD PTR [ebp+0x8]
1000ec5f:	mov    edi,ecx
1000ec61:	mov    esi,DWORD PTR [edi]
1000ec63:	mov    DWORD PTR [esp+0x14],eax
1000ec67:	call   0x1000dcf2
1000ec6c:	test   al,al
1000ec6e:	je     0x1000ec78
1000ec70:	xor    eax,eax
1000ec72:	inc    eax
1000ec73:	jmp    0x1000ed98
1000ec78:	mov    eax,DWORD PTR [edi]
1000ec7a:	call   0x1000de43
1000ec7f:	cmp    al,0xd
1000ec81:	je     0x1000ed88
1000ec87:	xor    esi,esi
1000ec89:	push   0xf
1000ec8b:	pop    ebx
1000ec8c:	push   esi
1000ec8d:	lea    ecx,[esp+0x48]
1000ec91:	mov    DWORD PTR [esp+0x60],ebx
1000ec95:	call   0x1000141c
1000ec9a:	mov    DWORD PTR [esp+0x70],esi
1000ec9e:	push   esi
1000ec9f:	lea    ecx,[esp+0x2c]
1000eca3:	mov    DWORD PTR [esp+0x44],ebx
1000eca7:	call   0x1000141c
1000ecac:	mov    BYTE PTR [esp+0x70],0x1
1000ecb1:	mov    eax,DWORD PTR [edi]
1000ecb3:	mov    eax,DWORD PTR [eax+0xc]
1000ecb6:	mov    DWORD PTR [esp+0x20],eax
1000ecba:	push   esi
1000ecbb:	lea    eax,[esp+0x48]
1000ecbf:	push   eax
1000ecc0:	call   0x1000f0e5
1000ecc5:	cmp    eax,esi
1000ecc7:	je     0x1000eccd
1000ecc9:	mov    ebx,eax
1000eccb:	jmp    0x1000ed07
1000eccd:	push   esi
1000ecce:	sub    esp,0x1c
1000ecd1:	mov    ecx,esp
1000ecd3:	mov    DWORD PTR [esp+0x3c],esp
1000ecd7:	push   0x1006dc78
1000ecdc:	call   0x100011cd
1000ece1:	mov    ebx,edi
1000ece3:	call   0x1000edd4
1000ece8:	cmp    eax,esi
1000ecea:	jne    0x1000ecc9
1000ecec:	lea    eax,[esp+0x28]
1000ecf0:	push   eax
1000ecf1:	mov    ecx,edi
1000ecf3:	call   0x1000f00f
1000ecf8:	cmp    eax,esi
1000ecfa:	jne    0x1000ecc9
1000ecfc:	mov    eax,DWORD PTR [edi]
1000ecfe:	mov    eax,DWORD PTR [eax+0xc]
1000ed01:	mov    DWORD PTR [esp+0x24],eax
1000ed05:	xor    ebx,ebx
1000ed07:	cmp    ebx,esi
1000ed09:	jne    0x1000edb8
1000ed0f:	push   0x8
1000ed11:	call   0x1004349e
1000ed16:	cmp    eax,esi
1000ed18:	pop    ecx
1000ed19:	je     0x1000ed2c
1000ed1b:	mov    edx,DWORD PTR [esp+0x20]
1000ed1f:	mov    ecx,DWORD PTR [esp+0x24]
1000ed23:	sub    ecx,edx
1000ed25:	mov    DWORD PTR [eax],edx
1000ed27:	mov    DWORD PTR [eax+0x4],ecx
1000ed2a:	jmp    0x1000ed2e
1000ed2c:	xor    eax,eax
1000ed2e:	push   ecx
1000ed2f:	mov    ecx,esp
1000ed31:	mov    BYTE PTR [esp+0x74],0x2
1000ed36:	mov    DWORD PTR [esp+0x1c],esi
1000ed3a:	mov    DWORD PTR [ecx],eax
1000ed3c:	mov    ecx,DWORD PTR [esp+0x18]
1000ed40:	lea    eax,[esp+0x2c]
1000ed44:	mov    DWORD PTR [esp+0x20],esp
1000ed48:	push   eax
1000ed49:	lea    edx,[esp+0x4c]
1000ed4d:	call   0x10007dfe
1000ed52:	push   DWORD PTR [esp+0x18]
1000ed56:	call   0x10042e92
1000ed5b:	pop    ecx
1000ed5c:	push   esi
1000ed5d:	push   0x1
1000ed5f:	lea    ecx,[esp+0x30]
1000ed63:	call   0x100012f0
1000ed68:	or     DWORD PTR [esp+0x70],0xffffffff
1000ed6d:	push   esi
1000ed6e:	push   0x1
1000ed70:	lea    ecx,[esp+0x4c]
1000ed74:	call   0x100012f0
1000ed79:	mov    eax,DWORD PTR [edi]
1000ed7b:	call   0x1000de43
1000ed80:	cmp    al,0xd
1000ed82:	jne    0x1000ec89
1000ed88:	mov    eax,DWORD PTR [edi]
1000ed8a:	push   DWORD PTR [eax+0xc]
1000ed8d:	mov    edi,DWORD PTR [esp+0x18]
1000ed91:	call   0x10007a0e
1000ed96:	xor    eax,eax
1000ed98:	mov    ecx,DWORD PTR [esp+0x68]
1000ed9c:	mov    DWORD PTR fs:0x0,ecx
1000eda3:	pop    ecx
1000eda4:	pop    edi
1000eda5:	pop    esi
1000eda6:	pop    ebx
1000eda7:	mov    ecx,DWORD PTR [esp+0x50]
1000edab:	xor    ecx,esp
1000edad:	call   0x10042e97
1000edb2:	mov    esp,ebp
1000edb4:	pop    ebp
1000edb5:	ret    0x4
1000edb8:	push   esi
1000edb9:	push   0x1
1000edbb:	lea    ecx,[esp+0x30]
1000edbf:	call   0x100012f0
1000edc4:	push   esi
1000edc5:	push   0x1
1000edc7:	lea    ecx,[esp+0x4c]
1000edcb:	call   0x100012f0
1000edd0:	mov    eax,ebx
1000edd2:	jmp    0x1000ed98
1000edd4:	push   0x4
1000edd6:	mov    eax,0x1005fd1e
1000eddb:	call   0x10059a35
1000ede0:	xor    edi,edi
1000ede2:	mov    DWORD PTR [ebp-0x4],edi
1000ede5:	cmp    DWORD PTR [ebp+0x1c],edi
1000ede8:	je     0x1000ee4c
1000edea:	cmp    BYTE PTR [ebp+0x24],0x0
1000edee:	je     0x1000ee1b
1000edf0:	test   edi,edi
1000edf2:	jle    0x1000ee1b
1000edf4:	mov    eax,DWORD PTR [ebx]
1000edf6:	mov    ecx,DWORD PTR [eax+0x4]
1000edf9:	test   ecx,ecx
1000edfb:	je     0x1000ee04
1000edfd:	mov    eax,DWORD PTR [eax+0x8]
1000ee00:	cmp    eax,DWORD PTR [ecx]
1000ee02:	jb     0x1000ee26
1000ee04:	push   0x0
1000ee06:	push   0x1
1000ee08:	lea    ecx,[ebp+0x8]
1000ee0b:	call   0x100012f0
1000ee10:	xor    eax,eax
1000ee12:	inc    eax
1000ee13:	call   0x10059b0d
1000ee18:	ret    0x20
1000ee1b:	mov    esi,DWORD PTR [ebx]
1000ee1d:	call   0x1000dcf2
1000ee22:	test   al,al
1000ee24:	jne    0x1000ee04
1000ee26:	mov    eax,DWORD PTR [ebx]
1000ee28:	call   0x1000de43
1000ee2d:	mov    BYTE PTR [ebp-0xd],al
1000ee30:	lea    eax,[ebp+0x8]
1000ee33:	call   0x10011e07
1000ee38:	mov    cl,BYTE PTR [ebp-0xd]
1000ee3b:	cmp    BYTE PTR [eax],cl
1000ee3d:	jne    0x1000ee50
1000ee3f:	mov    eax,DWORD PTR [ebx]
1000ee41:	call   0x1000de61
1000ee46:	inc    edi
1000ee47:	cmp    edi,DWORD PTR [ebp+0x1c]
1000ee4a:	jne    0x1000edea
1000ee4c:	xor    esi,esi
1000ee4e:	jmp    0x1000ee53
1000ee50:	xor    esi,esi
1000ee52:	inc    esi
1000ee53:	push   0x0
1000ee55:	push   0x1
1000ee57:	lea    ecx,[ebp+0x8]
1000ee5a:	call   0x100012f0
1000ee5f:	mov    eax,esi
1000ee61:	jmp    0x1000ee13
1000ee63:	push   ebx
1000ee64:	push   esi
1000ee65:	xor    ebx,ebx
1000ee67:	jmp    0x1000ee7c
1000ee69:	mov    eax,DWORD PTR [edi]
1000ee6b:	call   0x1000de43
1000ee70:	cmp    al,0x20
1000ee72:	jne    0x1000ee87
1000ee74:	mov    eax,DWORD PTR [edi]
1000ee76:	inc    ebx
1000ee77:	call   0x1000de61
1000ee7c:	mov    esi,DWORD PTR [edi]
1000ee7e:	call   0x1000dcf2
1000ee83:	test   al,al
1000ee85:	je     0x1000ee69
1000ee87:	xor    eax,eax
1000ee89:	test   ebx,ebx
1000ee8b:	pop    esi
1000ee8c:	setle  al
1000ee8f:	pop    ebx
1000ee90:	ret    
1000ee91:	push   0x30
1000ee93:	mov    eax,0x10064446
1000ee98:	call   0x10059a9e
1000ee9d:	mov    eax,DWORD PTR [ebp+0x8]
1000eea0:	push   0x1
1000eea2:	push   0x1006dc44
1000eea7:	push   0x5
1000eea9:	push   0x1006d4b0
1000eeae:	mov    edi,ecx
1000eeb0:	mov    DWORD PTR [ebp-0x3c],eax
1000eeb3:	call   0x10004258
1000eeb8:	sub    esp,0x10
1000eebb:	mov    ecx,esp
1000eebd:	mov    DWORD PTR [ebp-0x34],esp
1000eec0:	push   eax
1000eec1:	call   0x100011cd
1000eec6:	mov    ebx,edi
1000eec8:	call   0x1000edd4
1000eecd:	xor    ebx,ebx
1000eecf:	cmp    eax,ebx
1000eed1:	jne    0x1000ef3a
1000eed3:	push   ebx
1000eed4:	lea    ecx,[ebp-0x2c]
1000eed7:	mov    DWORD PTR [ebp-0x14],0xf
1000eede:	call   0x1000141c
1000eee3:	mov    DWORD PTR [ebp-0x4],ebx
1000eee6:	mov    esi,DWORD PTR [edi]
1000eee8:	mov    eax,DWORD PTR [esi+0xc]
1000eeeb:	mov    DWORD PTR [ebp-0x38],eax
1000eeee:	mov    DWORD PTR [ebp-0x30],ebx
1000eef1:	jmp    0x1000ef1d
1000eef3:	mov    eax,DWORD PTR [edi]
1000eef5:	call   0x1000de43
1000eefa:	mov    BYTE PTR [ebp-0x34],al
1000eefd:	sub    al,0x30
1000eeff:	cmp    al,0x9
1000ef01:	ja     0x1000ef42
1000ef03:	push   DWORD PTR [ebp-0x34]
1000ef06:	xor    ebx,ebx
1000ef08:	inc    ebx
1000ef09:	lea    esi,[ebp-0x2c]
1000ef0c:	call   0x1000cf52
1000ef11:	mov    eax,DWORD PTR [edi]
1000ef13:	inc    DWORD PTR [ebp-0x30]
1000ef16:	call   0x1000de61
1000ef1b:	mov    esi,DWORD PTR [edi]
1000ef1d:	call   0x1000dcf2
1000ef22:	test   al,al
1000ef24:	je     0x1000eef3
1000ef26:	push   0x0
1000ef28:	push   0x1
1000ef2a:	lea    ecx,[ebp-0x2c]
1000ef2d:	call   0x100012f0
1000ef32:	xor    eax,eax
1000ef34:	cmp    DWORD PTR [ebp-0x30],eax
1000ef37:	setle  al
1000ef3a:	call   0x10059b21
1000ef3f:	ret    0x4
1000ef42:	cmp    DWORD PTR [ebp-0x30],0x0
1000ef46:	jne    0x1000ef5b
1000ef48:	xor    esi,esi
1000ef4a:	inc    esi
1000ef4b:	push   0x0
1000ef4d:	push   0x1
1000ef4f:	lea    ecx,[ebp-0x2c]
1000ef52:	call   0x100012f0
1000ef57:	mov    eax,esi
1000ef59:	jmp    0x1000ef3a
1000ef5b:	push   0x0
1000ef5d:	sub    esp,0x1c
1000ef60:	mov    ecx,esp
1000ef62:	mov    DWORD PTR [ebp-0x34],esp
1000ef65:	mov    esi,0x1006dc74
1000ef6a:	push   esi
1000ef6b:	call   0x100011cd
1000ef70:	mov    ebx,edi
1000ef72:	call   0x1000edd4
1000ef77:	test   eax,eax
1000ef79:	je     0x1000ef7f
1000ef7b:	mov    esi,eax
1000ef7d:	jmp    0x1000ef4b
1000ef7f:	push   esi
1000ef80:	lea    eax,[ebp-0x2c]
1000ef83:	push   eax
1000ef84:	call   0x10004090
1000ef89:	and    DWORD PTR [ebp-0x30],0x0
1000ef8d:	jmp    0x1000efb7
1000ef8f:	mov    eax,DWORD PTR [edi]
1000ef91:	call   0x1000de43
1000ef96:	mov    BYTE PTR [ebp-0x34],al
1000ef99:	sub    al,0x30
1000ef9b:	cmp    al,0x9
1000ef9d:	ja     0x1000efc7
1000ef9f:	push   DWORD PTR [ebp-0x34]
1000efa2:	xor    ebx,ebx
1000efa4:	inc    ebx
1000efa5:	lea    esi,[ebp-0x2c]
1000efa8:	call   0x1000cf52
1000efad:	mov    eax,DWORD PTR [edi]
1000efaf:	inc    DWORD PTR [ebp-0x30]
1000efb2:	call   0x1000de61
1000efb7:	mov    esi,DWORD PTR [edi]
1000efb9:	call   0x1000dcf2
1000efbe:	test   al,al
1000efc0:	je     0x1000ef8f
1000efc2:	jmp    0x1000ef26
1000efc7:	cmp    DWORD PTR [ebp-0x30],0x0
1000efcb:	je     0x1000ef48
1000efd1:	mov    eax,DWORD PTR [edi]
1000efd3:	mov    esi,DWORD PTR [eax+0xc]
1000efd6:	push   0x24
1000efd8:	call   0x1004349e
1000efdd:	pop    ecx
1000efde:	mov    DWORD PTR [ebp-0x34],eax
1000efe1:	test   eax,eax
1000efe3:	mov    BYTE PTR [ebp-0x4],0x1
1000efe7:	je     0x1000effc
1000efe9:	sub    esi,DWORD PTR [ebp-0x38]
1000efec:	lea    ecx,[ebp-0x2c]
1000efef:	push   esi
1000eff0:	push   DWORD PTR [ebp-0x38]
1000eff3:	push   ecx
1000eff4:	push   eax
1000eff5:	call   0x100078fd
1000effa:	jmp    0x1000effe
1000effc:	xor    eax,eax
1000effe:	mov    edi,DWORD PTR [ebp-0x3c]
1000f001:	mov    ebx,eax
1000f003:	call   0x10009c0a
1000f008:	xor    esi,esi
1000f00a:	jmp    0x1000ef4b
1000f00f:	push   0x24
1000f011:	mov    eax,0x10064419
1000f016:	call   0x10059a35
1000f01b:	mov    edi,ecx
1000f01d:	and    DWORD PTR [ebp-0x10],0x0
1000f021:	jmp    0x1000f049
1000f023:	mov    eax,DWORD PTR [edi]
1000f025:	call   0x1000de43
1000f02a:	cmp    al,0xd
1000f02c:	mov    BYTE PTR [ebp-0x14],al
1000f02f:	je     0x1000f05e
1000f031:	push   DWORD PTR [ebp-0x14]
1000f034:	mov    esi,DWORD PTR [ebp+0x8]
1000f037:	inc    DWORD PTR [ebp-0x10]
1000f03a:	xor    ebx,ebx
1000f03c:	inc    ebx
1000f03d:	call   0x1000cf52
1000f042:	mov    eax,DWORD PTR [edi]
1000f044:	call   0x1000de61
1000f049:	mov    esi,DWORD PTR [edi]
1000f04b:	call   0x1000dcf2
1000f050:	test   al,al
1000f052:	je     0x1000f023
1000f054:	xor    eax,eax
1000f056:	cmp    DWORD PTR [ebp-0x10],eax
1000f059:	setle  al
1000f05c:	jmp    0x1000f0dd
1000f05e:	push   0x0
1000f060:	sub    esp,0x1c
1000f063:	mov    ecx,esp
1000f065:	mov    DWORD PTR [ebp-0x14],esp
1000f068:	push   0x1006d384
1000f06d:	call   0x100011cd
1000f072:	mov    ebx,edi
1000f074:	call   0x1000edd4
1000f079:	test   eax,eax
1000f07b:	jne    0x1000f0dd
1000f07d:	mov    ebx,DWORD PTR [ebp+0x8]
1000f080:	mov    eax,DWORD PTR [ebx+0x14]
1000f083:	xor    edi,edi
1000f085:	test   eax,eax
1000f087:	je     0x1000f09b
1000f089:	mov    eax,ebx
1000f08b:	call   0x10011e07
1000f090:	cmp    BYTE PTR [eax],0x20
1000f093:	jne    0x1000f09b
1000f095:	inc    edi
1000f096:	cmp    edi,DWORD PTR [ebx+0x14]
1000f099:	jne    0x1000f089
1000f09b:	mov    esi,DWORD PTR [ebx+0x14]
1000f09e:	dec    esi
1000f09f:	test   edi,edi
1000f0a1:	jl     0x1000f0b2
1000f0a3:	mov    eax,ebx
1000f0a5:	call   0x10011e07
1000f0aa:	cmp    BYTE PTR [eax],0x20
1000f0ad:	jne    0x1000f0b2
1000f0af:	dec    edi
1000f0b0:	jns    0x1000f0a3
1000f0b2:	sub    esi,edi
1000f0b4:	inc    esi
1000f0b5:	push   esi
1000f0b6:	push   edi
1000f0b7:	push   ebx
1000f0b8:	lea    eax,[ebp-0x30]
1000f0bb:	call   0x1000c8df
1000f0c0:	push   0xffffffff
1000f0c2:	xor    esi,esi
1000f0c4:	push   esi
1000f0c5:	push   eax
1000f0c6:	mov    ecx,ebx
1000f0c8:	mov    DWORD PTR [ebp-0x4],esi
1000f0cb:	call   0x10001241
1000f0d0:	push   esi
1000f0d1:	push   0x1
1000f0d3:	lea    ecx,[ebp-0x30]
1000f0d6:	call   0x100012f0
1000f0db:	xor    eax,eax
1000f0dd:	call   0x10059b0d
1000f0e2:	ret    0x4
1000f0e5:	push   ebp
1000f0e6:	mov    ebp,esp
1000f0e8:	push   ecx
1000f0e9:	push   ecx
1000f0ea:	push   ebx
1000f0eb:	xor    ebx,ebx
1000f0ed:	push   esi
1000f0ee:	mov    DWORD PTR [ebp-0x4],ebx
1000f0f1:	cmp    DWORD PTR [ebp-0x4],ebx
1000f0f4:	jle    0x1000f112
1000f0f6:	cmp    BYTE PTR [ebp+0xc],bl
1000f0f9:	je     0x1000f112
1000f0fb:	mov    eax,DWORD PTR [edi]
1000f0fd:	mov    ecx,DWORD PTR [eax+0x4]
1000f100:	cmp    ecx,ebx
1000f102:	je     0x1000f10b
1000f104:	mov    eax,DWORD PTR [eax+0x8]
1000f107:	cmp    eax,DWORD PTR [ecx]
1000f109:	jb     0x1000f121
1000f10b:	xor    eax,eax
1000f10d:	jmp    0x1000f1aa
1000f112:	mov    esi,DWORD PTR [edi]
1000f114:	call   0x1000dcf2
1000f119:	test   al,al
1000f11b:	jne    0x1000f1a2
1000f121:	mov    eax,DWORD PTR [edi]
1000f123:	call   0x1000de43
1000f128:	cmp    al,0x28
1000f12a:	mov    BYTE PTR [ebp-0x8],al
1000f12d:	je     0x1000f1a2
1000f12f:	cmp    al,0x29
1000f131:	je     0x1000f1a2
1000f133:	cmp    al,0x3c
1000f135:	je     0x1000f1a2
1000f137:	cmp    al,0x3e
1000f139:	je     0x1000f1a2
1000f13b:	cmp    al,0x40
1000f13d:	je     0x1000f1a2
1000f13f:	cmp    al,0x2c
1000f141:	je     0x1000f1a2
1000f143:	cmp    al,0x3b
1000f145:	je     0x1000f1a2
1000f147:	cmp    al,0x3a
1000f149:	je     0x1000f1a2
1000f14b:	cmp    al,0x5c
1000f14d:	je     0x1000f1a2
1000f14f:	cmp    al,0x22
1000f151:	je     0x1000f1a2
1000f153:	cmp    al,0x2f
1000f155:	je     0x1000f1a2
1000f157:	cmp    al,0x5b
1000f159:	je     0x1000f1a2
1000f15b:	cmp    al,0x5d
1000f15d:	je     0x1000f1a2
1000f15f:	cmp    al,0x3f
1000f161:	je     0x1000f1a2
1000f163:	cmp    al,0x3d
1000f165:	je     0x1000f1a2
1000f167:	cmp    al,0x7b
1000f169:	je     0x1000f1a2
1000f16b:	cmp    al,0x7d
1000f16d:	je     0x1000f1a2
1000f16f:	cmp    al,0x20
1000f171:	je     0x1000f1a2
1000f173:	cmp    al,0x9
1000f175:	je     0x1000f1a2
1000f177:	cmp    al,bl
1000f179:	jl     0x1000f17f
1000f17b:	cmp    al,0x1f
1000f17d:	jle    0x1000f1a2
1000f17f:	cmp    al,0x7f
1000f181:	je     0x1000f1a2
1000f183:	push   DWORD PTR [ebp-0x8]
1000f186:	mov    esi,DWORD PTR [ebp+0x8]
1000f189:	inc    DWORD PTR [ebp-0x4]
1000f18c:	xor    ebx,ebx
1000f18e:	inc    ebx
1000f18f:	call   0x1000cf52
1000f194:	mov    eax,DWORD PTR [edi]
1000f196:	call   0x1000de61
1000f19b:	xor    ebx,ebx
1000f19d:	jmp    0x1000f0f1
1000f1a2:	xor    eax,eax
1000f1a4:	cmp    DWORD PTR [ebp-0x4],ebx
1000f1a7:	setle  al
1000f1aa:	pop    esi
1000f1ab:	pop    ebx
1000f1ac:	leave  
1000f1ad:	ret    0x8
1000f1b0:	push   ebp
1000f1b1:	mov    ebp,esp
1000f1b3:	push   ecx
1000f1b4:	push   ecx
1000f1b5:	and    DWORD PTR [ebp-0x4],0x0
1000f1b9:	push   ebx
1000f1ba:	push   esi
1000f1bb:	jmp    0x1000f1e3
1000f1bd:	mov    eax,DWORD PTR [edi]
1000f1bf:	call   0x1000de43
1000f1c4:	cmp    al,0x20
1000f1c6:	mov    BYTE PTR [ebp-0x8],al
1000f1c9:	je     0x1000f1ee
1000f1cb:	push   DWORD PTR [ebp-0x8]
1000f1ce:	mov    esi,DWORD PTR [ebp+0x8]
1000f1d1:	inc    DWORD PTR [ebp-0x4]
1000f1d4:	xor    ebx,ebx
1000f1d6:	inc    ebx
1000f1d7:	call   0x1000cf52
1000f1dc:	mov    eax,DWORD PTR [edi]
1000f1de:	call   0x1000de61
1000f1e3:	mov    esi,DWORD PTR [edi]
1000f1e5:	call   0x1000dcf2
1000f1ea:	test   al,al
1000f1ec:	je     0x1000f1bd
1000f1ee:	xor    eax,eax
1000f1f0:	cmp    DWORD PTR [ebp-0x4],eax
1000f1f3:	pop    esi
1000f1f4:	setle  al
1000f1f7:	pop    ebx
1000f1f8:	leave  
1000f1f9:	ret    0x4
1000f1fc:	push   ebp
1000f1fd:	mov    ebp,esp
1000f1ff:	push   ecx
1000f200:	push   ebx
1000f201:	push   esi
1000f202:	jmp    0x1000f22b
1000f204:	mov    eax,DWORD PTR [edi]
1000f206:	call   0x1000de43
1000f20b:	cmp    al,0xd
1000f20d:	mov    BYTE PTR [ebp-0x4],al
1000f210:	je     0x1000f236
1000f212:	cmp    al,0xa
1000f214:	je     0x1000f236
1000f216:	push   DWORD PTR [ebp-0x4]
1000f219:	mov    esi,DWORD PTR [ebp+0x8]
1000f21c:	xor    ebx,ebx
1000f21e:	inc    ebx
1000f21f:	call   0x1000cf52
1000f224:	mov    eax,DWORD PTR [edi]
1000f226:	call   0x1000de61
1000f22b:	mov    esi,DWORD PTR [edi]
1000f22d:	call   0x1000dcf2
1000f232:	test   al,al
1000f234:	je     0x1000f204
1000f236:	pop    esi
1000f237:	xor    eax,eax
1000f239:	pop    ebx
1000f23a:	leave  
1000f23b:	ret    0x4
1000f23e:	push   0xc
1000f240:	mov    eax,0x10063b5f
1000f245:	call   0x10059a35
1000f24a:	xor    eax,eax
1000f24c:	mov    DWORD PTR [ebp-0x10],eax
1000f24f:	mov    DWORD PTR [ebp-0x18],eax
1000f252:	mov    ebx,0xf4240
1000f257:	cmp    DWORD PTR [ebp+0x10],ebx
1000f25a:	mov    DWORD PTR [ebp-0x4],eax
1000f25d:	mov    edi,0x10000
1000f262:	jbe    0x1000f269
1000f264:	mov    edi,0x100000
1000f269:	push   edi
1000f26a:	call   0x10043721
1000f26f:	mov    esi,eax
1000f271:	test   esi,esi
1000f273:	pop    ecx
1000f274:	mov    DWORD PTR [ebp-0x14],esi
1000f277:	je     0x1000f281
1000f279:	push   0x0
1000f27b:	call   0x10042e92
1000f280:	pop    ecx
1000f281:	cmp    DWORD PTR [ebp+0x10],0x0
1000f285:	mov    DWORD PTR [ebp-0x18],esi
1000f288:	je     0x1000f2d1
1000f28a:	mov    eax,DWORD PTR [ebp+0x8]
1000f28d:	mov    esi,DWORD PTR [eax]
1000f28f:	call   0x1000dcf2
1000f294:	test   al,al
1000f296:	jne    0x1000f2d5
1000f298:	mov    eax,DWORD PTR [ebp-0x10]
1000f29b:	mov    esi,DWORD PTR [ebp+0x10]
1000f29e:	lea    ecx,[edi+eax*1]
1000f2a1:	cmp    ecx,esi
1000f2a3:	jbe    0x1000f2a9
1000f2a5:	mov    edi,esi
1000f2a7:	sub    edi,eax
1000f2a9:	mov    eax,DWORD PTR [ebp+0x8]
1000f2ac:	mov    eax,DWORD PTR [eax]
1000f2ae:	push   edi
1000f2af:	push   DWORD PTR [ebp-0x14]
1000f2b2:	call   0x1000de9a
1000f2b7:	mov    edi,eax
1000f2b9:	add    DWORD PTR [ebp-0x10],edi
1000f2bc:	cmp    esi,ebx
1000f2be:	ja     0x1000f2cc
1000f2c0:	mov    eax,DWORD PTR [ebp+0xc]
1000f2c3:	push   edi
1000f2c4:	push   DWORD PTR [ebp-0x14]
1000f2c7:	call   0x10004d24
1000f2cc:	cmp    DWORD PTR [ebp-0x10],esi
1000f2cf:	jne    0x1000f28a
1000f2d1:	xor    esi,esi
1000f2d3:	jmp    0x1000f2d8
1000f2d5:	xor    esi,esi
1000f2d7:	inc    esi
1000f2d8:	push   DWORD PTR [ebp-0x14]
1000f2db:	call   0x10042e92
1000f2e0:	pop    ecx
1000f2e1:	mov    eax,esi
1000f2e3:	call   0x10059b0d
1000f2e8:	ret    0xc
1000f2eb:	push   ebp
1000f2ec:	mov    ebp,esp
1000f2ee:	mov    eax,0x10004
1000f2f3:	call   0x10049de0
1000f2f8:	mov    eax,ds:0x1007e030
1000f2fd:	xor    eax,ebp
1000f2ff:	mov    DWORD PTR [ebp-0x4],eax
1000f302:	push   esi
1000f303:	jmp    0x1000f330
1000f305:	push   0x10000
1000f30a:	lea    eax,[ebp-0x10004]
1000f310:	push   eax
1000f311:	mov    eax,DWORD PTR [edi]
1000f313:	call   0x1000de9a
1000f318:	push   eax
1000f319:	lea    eax,[ebp-0x10004]
1000f31f:	push   eax
1000f320:	mov    eax,ebx
1000f322:	call   0x10004d24
1000f327:	cmp    DWORD PTR [ebx+0x14],0xf4240
1000f32e:	jae    0x1000f33f
1000f330:	mov    esi,DWORD PTR [edi]
1000f332:	call   0x1000dcf2
1000f337:	test   al,al
1000f339:	je     0x1000f305
1000f33b:	xor    eax,eax
1000f33d:	jmp    0x1000f342
1000f33f:	xor    eax,eax
1000f341:	inc    eax
1000f342:	mov    ecx,DWORD PTR [ebp-0x4]
1000f345:	xor    ecx,ebp
1000f347:	pop    esi
1000f348:	call   0x10042e97
1000f34d:	leave  
1000f34e:	ret    
1000f34f:	push   0x2c
1000f351:	mov    eax,0x100643ec
1000f356:	call   0x10059a9e
1000f35b:	mov    eax,DWORD PTR [ebp+0x8]
1000f35e:	mov    ebx,ecx
1000f360:	mov    DWORD PTR [ebp-0x34],eax
1000f363:	lea    eax,[ebp-0x30]
1000f366:	mov    edi,ebx
1000f368:	call   0x1000f438
1000f36d:	xor    edi,edi
1000f36f:	cmp    eax,edi
1000f371:	jne    0x1000f430
1000f377:	jmp    0x1000f37b
1000f379:	xor    edi,edi
1000f37b:	cmp    DWORD PTR [ebp-0x30],edi
1000f37e:	push   edi
1000f37f:	je     0x1000f400
1000f381:	lea    ecx,[ebp-0x2c]
1000f384:	mov    DWORD PTR [ebp-0x14],0xf
1000f38b:	call   0x1000141c
1000f390:	mov    DWORD PTR [ebp-0x4],edi
1000f393:	push   DWORD PTR [ebp-0x30]
1000f396:	lea    eax,[ebp-0x2c]
1000f399:	push   eax
1000f39a:	push   ebx
1000f39b:	call   0x1000f23e
1000f3a0:	mov    esi,eax
1000f3a2:	cmp    esi,edi
1000f3a4:	push   edi
1000f3a5:	jne    0x1000f41a
1000f3a7:	sub    esp,0x1c
1000f3aa:	mov    ecx,esp
1000f3ac:	mov    DWORD PTR [ebp-0x38],esp
1000f3af:	push   0x1006d384
1000f3b4:	call   0x100011cd
1000f3b9:	call   0x1000edd4
1000f3be:	mov    esi,eax
1000f3c0:	cmp    esi,edi
1000f3c2:	jne    0x1000f419
1000f3c4:	mov    esi,DWORD PTR [ebp-0x34]
1000f3c7:	push   0xffffffff
1000f3c9:	push   edi
1000f3ca:	lea    eax,[ebp-0x2c]
1000f3cd:	call   0x10004c80
1000f3d2:	mov    eax,esi
1000f3d4:	cmp    DWORD PTR [eax+0x14],0xf4240
1000f3db:	push   edi
1000f3dc:	lea    ecx,[ebp-0x2c]
1000f3df:	push   0x1
1000f3e1:	jae    0x1000f428
1000f3e3:	or     DWORD PTR [ebp-0x4],0xffffffff
1000f3e7:	call   0x100012f0
1000f3ec:	lea    eax,[ebp-0x30]
1000f3ef:	mov    edi,ebx
1000f3f1:	call   0x1000f438
1000f3f6:	test   eax,eax
1000f3f8:	je     0x1000f379
1000f3fe:	jmp    0x1000f430
1000f400:	sub    esp,0x1c
1000f403:	mov    ecx,esp
1000f405:	mov    DWORD PTR [ebp-0x38],esp
1000f408:	push   0x1006d384
1000f40d:	call   0x100011cd
1000f412:	call   0x1000edd4
1000f417:	jmp    0x1000f430
1000f419:	push   edi
1000f41a:	push   0x1
1000f41c:	lea    ecx,[ebp-0x2c]
1000f41f:	call   0x100012f0
1000f424:	mov    eax,esi
1000f426:	jmp    0x1000f430
1000f428:	call   0x100012f0
1000f42d:	xor    eax,eax
1000f42f:	inc    eax
1000f430:	call   0x10059b21
1000f435:	ret    0x4
1000f438:	push   ebp
1000f439:	mov    ebp,esp
1000f43b:	push   ecx
1000f43c:	push   ecx
1000f43d:	and    DWORD PTR [ebp-0x8],0x0
1000f441:	push   ebx
1000f442:	mov    ebx,eax
1000f444:	and    DWORD PTR [ebx],0x0
1000f447:	push   esi
1000f448:	jmp    0x1000f497
1000f44a:	mov    eax,DWORD PTR [edi]
1000f44c:	call   0x1000de43
1000f451:	movsx  esi,al
1000f454:	push   esi
1000f455:	mov    BYTE PTR [ebp-0x1],al
1000f458:	call   0x10045dd1
1000f45d:	pop    ecx
1000f45e:	mov    cl,BYTE PTR [ebp-0x1]
1000f461:	sub    cl,0x30
1000f464:	cmp    cl,0x9
1000f467:	mov    BYTE PTR [ebp-0x1],cl
1000f46a:	jbe    0x1000f474
1000f46c:	cmp    al,0x61
1000f46e:	jl     0x1000f4a7
1000f470:	cmp    al,0x66
1000f472:	jg     0x1000f4a7
1000f474:	mov    eax,DWORD PTR [edi]
1000f476:	call   0x1000de61
1000f47b:	mov    eax,DWORD PTR [ebx]
1000f47d:	shl    eax,0x4
1000f480:	cmp    BYTE PTR [ebp-0x1],0x9
1000f484:	mov    DWORD PTR [ebx],eax
1000f486:	ja     0x1000f48e
1000f488:	lea    eax,[eax+esi*1-0x30]
1000f48c:	jmp    0x1000f492
1000f48e:	lea    eax,[eax+esi*1-0x57]
1000f492:	inc    DWORD PTR [ebp-0x8]
1000f495:	mov    DWORD PTR [ebx],eax
1000f497:	mov    esi,DWORD PTR [edi]
1000f499:	call   0x1000dcf2
1000f49e:	test   al,al
1000f4a0:	je     0x1000f44a
1000f4a2:	xor    eax,eax
1000f4a4:	inc    eax
1000f4a5:	jmp    0x1000f4e7
1000f4a7:	cmp    DWORD PTR [ebp-0x8],0x0
1000f4ab:	jne    0x1000f4c1
1000f4ad:	jmp    0x1000f4a2
1000f4af:	mov    eax,DWORD PTR [edi]
1000f4b1:	call   0x1000de43
1000f4b6:	cmp    al,0xd
1000f4b8:	je     0x1000f4cc
1000f4ba:	mov    eax,DWORD PTR [edi]
1000f4bc:	call   0x1000de61
1000f4c1:	mov    esi,DWORD PTR [edi]
1000f4c3:	call   0x1000dcf2
1000f4c8:	test   al,al
1000f4ca:	je     0x1000f4af
1000f4cc:	push   0x0
1000f4ce:	sub    esp,0x1c
1000f4d1:	mov    ecx,esp
1000f4d3:	mov    DWORD PTR [ebp-0x8],esp
1000f4d6:	push   0x1006d384
1000f4db:	call   0x100011cd
1000f4e0:	mov    ebx,edi
1000f4e2:	call   0x1000edd4
1000f4e7:	pop    esi
1000f4e8:	pop    ebx
1000f4e9:	leave  
1000f4ea:	ret    
1000f4eb:	push   ebp
1000f4ec:	mov    ebp,esp
1000f4ee:	push   ecx
1000f4ef:	push   ecx
1000f4f0:	push   DWORD PTR [ebp+0xc]
1000f4f3:	and    DWORD PTR [ebp-0x4],0x0
1000f4f7:	push   DWORD PTR [ebp+0x8]
1000f4fa:	call   0x1000f506
1000f4ff:	mov    eax,DWORD PTR [ebp+0x8]
1000f502:	pop    ecx
1000f503:	pop    ecx
1000f504:	leave  
1000f505:	ret    
1000f506:	push   0x34
1000f508:	mov    eax,0x10062ce6
1000f50d:	call   0x10059a35
1000f512:	mov    edi,DWORD PTR [ebp+0x8]
1000f515:	xor    esi,esi
1000f517:	mov    DWORD PTR [ebp-0x10],esi
1000f51a:	mov    DWORD PTR [edi+0x4],esi
1000f51d:	mov    DWORD PTR [edi+0x8],esi
1000f520:	mov    DWORD PTR [edi+0xc],esi
1000f523:	mov    DWORD PTR [ebp-0x4],esi
1000f526:	push   DWORD PTR ds:0x10081438
1000f52c:	mov    DWORD PTR [ebp-0x10],0x1
1000f533:	call   0x10043010
1000f538:	pop    ecx
1000f539:	mov    DWORD PTR [ebp-0x14],eax
1000f53c:	push   esi
1000f53d:	push   DWORD PTR ds:0x10081438
1000f543:	push   DWORD PTR [ebp+0xc]
1000f546:	call   0x1000c8c0
1000f54b:	mov    ebx,eax
1000f54d:	cmp    ebx,0xffffffff
1000f550:	jne    0x1000f558
1000f552:	mov    eax,DWORD PTR [ebp+0xc]
1000f555:	mov    ebx,DWORD PTR [eax+0x14]
1000f558:	cmp    ebx,esi
1000f55a:	jb     0x1000f5aa
1000f55c:	mov    eax,ebx
1000f55e:	sub    eax,esi
1000f560:	push   eax
1000f561:	push   esi
1000f562:	push   DWORD PTR [ebp+0xc]
1000f565:	lea    eax,[ebp-0x40]
1000f568:	call   0x1000c8df
1000f56d:	push   eax
1000f56e:	lea    eax,[ebp-0x24]
1000f571:	push   eax
1000f572:	mov    DWORD PTR [ebp-0x4],0x1
1000f579:	call   0x1000f5ba
1000f57e:	pop    ecx
1000f57f:	pop    ecx
1000f580:	push   eax
1000f581:	mov    esi,edi
1000f583:	mov    BYTE PTR [ebp-0x4],0x2
1000f587:	call   0x1000f675
1000f58c:	lea    esi,[ebp-0x24]
1000f58f:	call   0x10004964
1000f594:	push   0x0
1000f596:	push   0x1
1000f598:	lea    ecx,[ebp-0x40]
1000f59b:	mov    BYTE PTR [ebp-0x4],0x0
1000f59f:	call   0x100012f0
1000f5a4:	mov    eax,DWORD PTR [ebp-0x14]
1000f5a7:	lea    esi,[ebx+eax*1]
1000f5aa:	mov    eax,DWORD PTR [ebp+0xc]
1000f5ad:	cmp    esi,DWORD PTR [eax+0x14]
1000f5b0:	jb     0x1000f53c
1000f5b2:	mov    eax,edi
1000f5b4:	call   0x10059b0d
1000f5b9:	ret    
1000f5ba:	push   0x44
1000f5bc:	mov    eax,0x10060e7c
1000f5c1:	call   0x10059a35
1000f5c6:	mov    esi,DWORD PTR [ebp+0x8]
1000f5c9:	xor    ebx,ebx
1000f5cb:	mov    DWORD PTR [ebp-0x14],ebx
1000f5ce:	mov    DWORD PTR [esi+0x4],ebx
1000f5d1:	mov    DWORD PTR [esi+0x8],ebx
1000f5d4:	mov    DWORD PTR [esi+0xc],ebx
1000f5d7:	xor    edi,edi
1000f5d9:	inc    edi
1000f5da:	mov    DWORD PTR [ebp-0x4],ebx
1000f5dd:	push   0x1006dc78
1000f5e2:	mov    DWORD PTR [ebp-0x14],edi
1000f5e5:	call   0x10043010
1000f5ea:	pop    ecx
1000f5eb:	mov    DWORD PTR [ebp-0x18],eax
1000f5ee:	mov    DWORD PTR [ebp-0x10],ebx
1000f5f1:	push   DWORD PTR [ebp-0x10]
1000f5f4:	push   0x1006dc78
1000f5f9:	push   DWORD PTR [ebp+0xc]
1000f5fc:	call   0x1000c8c0
1000f601:	mov    ebx,eax
1000f603:	cmp    ebx,0xffffffff
1000f606:	jne    0x1000f60e
1000f608:	mov    eax,DWORD PTR [ebp+0xc]
1000f60b:	mov    ebx,DWORD PTR [eax+0x14]
1000f60e:	cmp    ebx,DWORD PTR [ebp-0x10]
1000f611:	jb     0x1000f662
1000f613:	mov    eax,ebx
1000f615:	sub    eax,DWORD PTR [ebp-0x10]
1000f618:	push   eax
1000f619:	push   DWORD PTR [ebp-0x10]
1000f61c:	lea    eax,[ebp-0x50]
1000f61f:	push   DWORD PTR [ebp+0xc]
1000f622:	call   0x1000c8df
1000f627:	lea    ecx,[ebp-0x34]
1000f62a:	push   ecx
1000f62b:	mov    ecx,eax
1000f62d:	mov    DWORD PTR [ebp-0x4],edi
1000f630:	call   0x1002dd2f
1000f635:	pop    ecx
1000f636:	push   eax
1000f637:	mov    BYTE PTR [ebp-0x4],0x2
1000f63b:	call   0x1000f83a
1000f640:	push   0x0
1000f642:	push   edi
1000f643:	lea    ecx,[ebp-0x34]
1000f646:	call   0x100012f0
1000f64b:	push   0x0
1000f64d:	push   edi
1000f64e:	lea    ecx,[ebp-0x50]
1000f651:	mov    BYTE PTR [ebp-0x4],0x0
1000f655:	call   0x100012f0
1000f65a:	mov    eax,DWORD PTR [ebp-0x18]
1000f65d:	add    ebx,eax
1000f65f:	mov    DWORD PTR [ebp-0x10],ebx
1000f662:	mov    eax,DWORD PTR [ebp-0x10]
1000f665:	mov    ecx,DWORD PTR [ebp+0xc]
1000f668:	cmp    eax,DWORD PTR [ecx+0x14]
1000f66b:	jb     0x1000f5f1
1000f66d:	mov    eax,esi
1000f66f:	call   0x10059b0d
1000f674:	ret    
1000f675:	push   ebp
1000f676:	mov    ebp,esp
1000f678:	sub    esp,0xc
1000f67b:	push   ebx
1000f67c:	mov    ebx,DWORD PTR [esi+0x4]
1000f67f:	test   ebx,ebx
1000f681:	push   edi
1000f682:	jne    0x1000f688
1000f684:	xor    edi,edi
1000f686:	jmp    0x1000f690
1000f688:	mov    edi,DWORD PTR [esi+0xc]
1000f68b:	sub    edi,ebx
1000f68d:	sar    edi,0x4
1000f690:	mov    eax,esi
1000f692:	call   0x1000c93d
1000f697:	cmp    eax,edi
1000f699:	jae    0x1000f6ad
1000f69b:	push   DWORD PTR [ebp+0x8]
1000f69e:	push   0x1
1000f6a0:	push   DWORD PTR [esi+0x8]
1000f6a3:	call   0x1000f776
1000f6a8:	mov    DWORD PTR [esi+0x8],eax
1000f6ab:	jmp    0x1000f6c9
1000f6ad:	mov    edi,DWORD PTR [esi+0x8]
1000f6b0:	cmp    ebx,edi
1000f6b2:	jbe    0x1000f6b9
1000f6b4:	call   0x100433b0
1000f6b9:	push   edi
1000f6ba:	push   esi
1000f6bb:	push   DWORD PTR [ebp+0x8]
1000f6be:	lea    eax,[ebp-0xc]
1000f6c1:	push   eax
1000f6c2:	mov    eax,esi
1000f6c4:	call   0x1000f6cf
1000f6c9:	pop    edi
1000f6ca:	pop    ebx
1000f6cb:	leave  
1000f6cc:	ret    0x4
1000f6cf:	push   ebp
1000f6d0:	mov    ebp,esp
1000f6d2:	push   ecx
1000f6d3:	push   ebx
1000f6d4:	push   esi
1000f6d5:	push   edi
1000f6d6:	mov    esi,eax
1000f6d8:	call   0x1000c93d
1000f6dd:	test   eax,eax
1000f6df:	jne    0x1000f6e5
1000f6e1:	xor    edi,edi
1000f6e3:	jmp    0x1000f70a
1000f6e5:	mov    ebx,DWORD PTR [esi+0x4]
1000f6e8:	cmp    ebx,DWORD PTR [esi+0x8]
1000f6eb:	jbe    0x1000f6f2
1000f6ed:	call   0x100433b0
1000f6f2:	cmp    DWORD PTR [ebp+0x10],0x0
1000f6f6:	je     0x1000f6fd
1000f6f8:	cmp    DWORD PTR [ebp+0x10],esi
1000f6fb:	je     0x1000f702
1000f6fd:	call   0x100433b0
1000f702:	mov    edi,DWORD PTR [ebp+0x14]
1000f705:	sub    edi,ebx
1000f707:	sar    edi,0x4
1000f70a:	push   DWORD PTR [ebp+0x14]
1000f70d:	mov    ecx,DWORD PTR [ebp+0xc]
1000f710:	push   DWORD PTR [ebp+0x10]
1000f713:	push   esi
1000f714:	call   0x1000f96c
1000f719:	mov    ebx,DWORD PTR [esi+0x4]
1000f71c:	cmp    ebx,DWORD PTR [esi+0x8]
1000f71f:	jbe    0x1000f726
1000f721:	call   0x100433b0
1000f726:	shl    edi,0x4
1000f729:	add    edi,ebx
1000f72b:	cmp    edi,DWORD PTR [esi+0x8]
1000f72e:	mov    DWORD PTR [ebp+0x14],ebx
1000f731:	ja     0x1000f738
1000f733:	cmp    edi,DWORD PTR [esi+0x4]
1000f736:	jae    0x1000f73d
1000f738:	call   0x100433b0
1000f73d:	mov    eax,DWORD PTR [ebp+0x8]
1000f740:	mov    DWORD PTR [eax+0x4],edi
1000f743:	pop    edi
1000f744:	mov    DWORD PTR [eax],esi
1000f746:	pop    esi
1000f747:	pop    ebx
1000f748:	pop    ecx
1000f749:	pop    ebp
1000f74a:	ret    0x10
1000f74d:	push   esi
1000f74e:	mov    esi,eax
1000f750:	cmp    esi,0xfffffff
1000f756:	jbe    0x1000f75d
1000f758:	jmp    0x1000a740
1000f75d:	mov    ecx,esi
1000f75f:	call   0x1002e1e6
1000f764:	shl    esi,0x4
1000f767:	add    esi,eax
1000f769:	mov    DWORD PTR [edi+0x4],eax
1000f76c:	mov    DWORD PTR [edi+0x8],eax
1000f76f:	mov    DWORD PTR [edi+0xc],esi
1000f772:	mov    al,0x1
1000f774:	pop    esi
1000f775:	ret    
1000f776:	push   ebp
1000f777:	mov    ebp,esp
1000f779:	push   ecx
1000f77a:	push   ecx
1000f77b:	push   edi
1000f77c:	xor    eax,eax
1000f77e:	lea    edi,[ebp-0x4]
1000f781:	stos   BYTE PTR es:[edi],al
1000f782:	push   DWORD PTR [ebp-0x4]
1000f785:	push   DWORD PTR [ebp+0xc]
1000f788:	push   DWORD PTR [ebp+0x10]
1000f78b:	push   DWORD PTR [ebp+0xc]
1000f78e:	push   DWORD PTR [ebp+0x8]
1000f791:	call   0x1000fe7f
1000f796:	mov    eax,DWORD PTR [ebp+0xc]
1000f799:	add    esp,0x14
1000f79c:	shl    eax,0x4
1000f79f:	add    eax,DWORD PTR [ebp+0x8]
1000f7a2:	pop    edi
1000f7a3:	leave  
1000f7a4:	ret    0xc
1000f7a7:	push   0x10
1000f7a9:	mov    eax,0x10060e38
1000f7ae:	call   0x10059a68
1000f7b3:	mov    ebx,ecx
1000f7b5:	mov    esi,DWORD PTR [ebp+0x8]
1000f7b8:	mov    eax,ebx
1000f7ba:	call   0x100045e9
1000f7bf:	xor    ecx,ecx
1000f7c1:	cmp    eax,ecx
1000f7c3:	mov    DWORD PTR [esi+0x4],ecx
1000f7c6:	mov    DWORD PTR [esi+0x8],ecx
1000f7c9:	mov    DWORD PTR [esi+0xc],ecx
1000f7cc:	je     0x1000f81e
1000f7ce:	mov    edi,esi
1000f7d0:	call   0x1000493b
1000f7d5:	test   al,al
1000f7d7:	je     0x1000f81e
1000f7d9:	and    DWORD PTR [ebp-0x4],0x0
1000f7dd:	mov    eax,DWORD PTR [ebx+0x8]
1000f7e0:	cmp    DWORD PTR [ebx+0x4],eax
1000f7e3:	mov    DWORD PTR [ebp-0x18],eax
1000f7e6:	jbe    0x1000f7ed
1000f7e8:	call   0x100433b0
1000f7ed:	mov    eax,DWORD PTR [ebx+0x4]
1000f7f0:	cmp    eax,DWORD PTR [ebx+0x8]
1000f7f3:	mov    DWORD PTR [ebp-0x1c],eax
1000f7f6:	jbe    0x1000f7fd
1000f7f8:	call   0x100433b0
1000f7fd:	mov    ecx,DWORD PTR [esi+0x4]
1000f800:	xor    eax,eax
1000f802:	lea    edi,[ebp-0x14]
1000f805:	stos   BYTE PTR es:[edi],al
1000f806:	push   DWORD PTR [ebp-0x14]
1000f809:	push   DWORD PTR [ebp+0x8]
1000f80c:	push   ecx
1000f80d:	push   DWORD PTR [ebp-0x18]
1000f810:	mov    ecx,DWORD PTR [ebp-0x1c]
1000f813:	call   0x1001026b
1000f818:	add    esp,0x10
1000f81b:	mov    DWORD PTR [esi+0x8],eax
1000f81e:	mov    eax,esi
1000f820:	call   0x10059b0d
1000f825:	ret    0x4
1000f828:	mov    esi,DWORD PTR [ebp+0x8]
1000f82b:	call   0x10004964
1000f830:	push   0x0
1000f832:	push   0x0
1000f834:	call   0x100479b4
1000f839:	int3   
1000f83a:	push   ebp
1000f83b:	mov    ebp,esp
1000f83d:	sub    esp,0xc
1000f840:	push   ebx
1000f841:	push   edi
1000f842:	mov    edi,DWORD PTR [esi+0x4]
1000f845:	test   edi,edi
1000f847:	jne    0x1000f84d
1000f849:	xor    ebx,ebx
1000f84b:	jmp    0x1000f85a
1000f84d:	mov    eax,DWORD PTR [esi+0xc]
1000f850:	sub    eax,edi
1000f852:	push   0x1c
1000f854:	cdq    
1000f855:	pop    ecx
1000f856:	idiv   ecx
1000f858:	mov    ebx,eax
1000f85a:	mov    eax,esi
1000f85c:	call   0x100045e9
1000f861:	cmp    eax,ebx
1000f863:	jae    0x1000f877
1000f865:	push   DWORD PTR [ebp+0x8]
1000f868:	push   0x1
1000f86a:	push   DWORD PTR [esi+0x8]
1000f86d:	call   0x1000fbb9
1000f872:	mov    DWORD PTR [esi+0x8],eax
1000f875:	jmp    0x1000f893
1000f877:	mov    ebx,DWORD PTR [esi+0x8]
1000f87a:	cmp    edi,ebx
1000f87c:	jbe    0x1000f883
1000f87e:	call   0x100433b0
1000f883:	push   ebx
1000f884:	push   esi
1000f885:	push   DWORD PTR [ebp+0x8]
1000f888:	lea    eax,[ebp-0xc]
1000f88b:	push   eax
1000f88c:	mov    eax,esi
1000f88e:	call   0x1000fb35
1000f893:	pop    edi
1000f894:	pop    ebx
1000f895:	leave  
1000f896:	ret    0x4
1000f899:	push   ebp
1000f89a:	mov    ebp,esp
1000f89c:	push   ecx
1000f89d:	push   ecx
1000f89e:	mov    ecx,DWORD PTR [ebx+0x14]
1000f8a1:	test   ecx,ecx
1000f8a3:	push   esi
1000f8a4:	push   edi
1000f8a5:	mov    BYTE PTR [ebp-0x4],0x20
1000f8a9:	jbe    0x1000f8ec
1000f8ab:	mov    edx,DWORD PTR [ebx+0x18]
1000f8ae:	cmp    edx,0x10
1000f8b1:	lea    esi,[ebx+0x4]
1000f8b4:	jb     0x1000f8ba
1000f8b6:	mov    eax,DWORD PTR [esi]
1000f8b8:	jmp    0x1000f8bc
1000f8ba:	mov    eax,esi
1000f8bc:	add    eax,ecx
1000f8be:	cmp    edx,0x10
1000f8c1:	mov    DWORD PTR [ebp-0x8],eax
1000f8c4:	jb     0x1000f8ca
1000f8c6:	mov    edi,DWORD PTR [esi]
1000f8c8:	jmp    0x1000f8cc
1000f8ca:	mov    edi,esi
1000f8cc:	cmp    edi,eax
1000f8ce:	jae    0x1000f8ec
1000f8d0:	movsx  eax,BYTE PTR [edi]
1000f8d3:	push   0x1
1000f8d5:	push   eax
1000f8d6:	lea    eax,[ebp-0x4]
1000f8d9:	push   eax
1000f8da:	call   0x10045b50
1000f8df:	add    esp,0xc
1000f8e2:	test   eax,eax
1000f8e4:	je     0x1000f8f3
1000f8e6:	inc    edi
1000f8e7:	cmp    edi,DWORD PTR [ebp-0x8]
1000f8ea:	jb     0x1000f8d0
1000f8ec:	or     eax,0xffffffff
1000f8ef:	pop    edi
1000f8f0:	pop    esi
1000f8f1:	leave  
1000f8f2:	ret    
1000f8f3:	cmp    DWORD PTR [ebx+0x18],0x10
1000f8f7:	jb     0x1000f8fb
1000f8f9:	mov    esi,DWORD PTR [esi]
1000f8fb:	sub    edi,esi
1000f8fd:	mov    eax,edi
1000f8ff:	jmp    0x1000f8ef
1000f901:	push   ebp
1000f902:	mov    ebp,esp
1000f904:	push   ecx
1000f905:	mov    eax,DWORD PTR [ebx+0x14]
1000f908:	test   eax,eax
1000f90a:	push   esi
1000f90b:	push   edi
1000f90c:	mov    BYTE PTR [ebp-0x4],0x20
1000f910:	jbe    0x1000f965
1000f912:	or     ecx,0xffffffff
1000f915:	cmp    eax,ecx
1000f917:	ja     0x1000f91c
1000f919:	lea    ecx,[eax-0x1]
1000f91c:	cmp    DWORD PTR [ebx+0x18],0x10
1000f920:	lea    edi,[ebx+0x4]
1000f923:	jb     0x1000f929
1000f925:	mov    eax,DWORD PTR [edi]
1000f927:	jmp    0x1000f92b
1000f929:	mov    eax,edi
1000f92b:	lea    esi,[eax+ecx*1]
1000f92e:	jmp    0x1000f941
1000f930:	cmp    DWORD PTR [ebx+0x18],0x10
1000f934:	jb     0x1000f93a
1000f936:	mov    eax,DWORD PTR [edi]
1000f938:	jmp    0x1000f93c
1000f93a:	mov    eax,edi
1000f93c:	cmp    esi,eax
1000f93e:	je     0x1000f965
1000f940:	dec    esi
1000f941:	movsx  eax,BYTE PTR [esi]
1000f944:	push   0x1
1000f946:	push   eax
1000f947:	lea    eax,[ebp-0x4]
1000f94a:	push   eax
1000f94b:	call   0x10045b50
1000f950:	add    esp,0xc
1000f953:	test   eax,eax
1000f955:	jne    0x1000f930
1000f957:	cmp    DWORD PTR [ebx+0x18],0x10
1000f95b:	jb     0x1000f95f
1000f95d:	mov    edi,DWORD PTR [edi]
1000f95f:	sub    esi,edi
1000f961:	mov    eax,esi
1000f963:	jmp    0x1000f968
1000f965:	or     eax,0xffffffff
1000f968:	pop    edi
1000f969:	pop    esi
1000f96a:	leave  
1000f96b:	ret    
1000f96c:	push   0x18
1000f96e:	mov    eax,0x10062ca2
1000f973:	call   0x10059a68
1000f978:	mov    esi,DWORD PTR [ebp+0x8]
1000f97b:	lea    eax,[ebp-0x24]
1000f97e:	push   eax
1000f97f:	call   0x1000f7a7
1000f984:	xor    edi,edi
1000f986:	mov    DWORD PTR [ebp-0x4],edi
1000f989:	mov    eax,DWORD PTR [esi+0x4]
1000f98c:	cmp    eax,edi
1000f98e:	je     0x1000f998
1000f990:	mov    edi,DWORD PTR [esi+0xc]
1000f993:	sub    edi,eax
1000f995:	sar    edi,0x4
1000f998:	mov    eax,esi
1000f99a:	call   0x1000c93d
1000f99f:	mov    ebx,0xfffffff
1000f9a4:	mov    ecx,ebx
1000f9a6:	sub    ecx,eax
1000f9a8:	cmp    ecx,0x1
1000f9ab:	jae    0x1000f9b2
1000f9ad:	call   0x1000a740
1000f9b2:	mov    eax,esi
1000f9b4:	call   0x1000c93d
1000f9b9:	inc    eax
1000f9ba:	cmp    edi,eax
1000f9bc:	jae    0x1000fa7d
1000f9c2:	mov    eax,edi
1000f9c4:	shr    eax,1
1000f9c6:	sub    ebx,eax
1000f9c8:	cmp    ebx,edi
1000f9ca:	jae    0x1000f9d0
1000f9cc:	xor    edi,edi
1000f9ce:	jmp    0x1000f9d2
1000f9d0:	add    edi,eax
1000f9d2:	mov    eax,esi
1000f9d4:	call   0x1000c93d
1000f9d9:	inc    eax
1000f9da:	cmp    edi,eax
1000f9dc:	jae    0x1000f9e8
1000f9de:	mov    eax,esi
1000f9e0:	call   0x1000c93d
1000f9e5:	mov    edi,eax
1000f9e7:	inc    edi
1000f9e8:	mov    ecx,edi
1000f9ea:	call   0x1002e1e6
1000f9ef:	push   eax
1000f9f0:	push   DWORD PTR [ebp+0x10]
1000f9f3:	mov    BYTE PTR [ebp-0x4],0x1
1000f9f7:	mov    ecx,DWORD PTR [esi+0x4]
1000f9fa:	mov    DWORD PTR [ebp-0x14],eax
1000f9fd:	mov    DWORD PTR [ebp+0x8],eax
1000fa00:	call   0x1000fde4
1000fa05:	lea    ecx,[ebp-0x24]
1000fa08:	push   ecx
1000fa09:	push   0x1
1000fa0b:	push   eax
1000fa0c:	mov    DWORD PTR [ebp+0x8],eax
1000fa0f:	call   0x1000f776
1000fa14:	mov    ecx,DWORD PTR [ebp+0x10]
1000fa17:	push   eax
1000fa18:	push   DWORD PTR [esi+0x8]
1000fa1b:	mov    DWORD PTR [ebp+0x8],eax
1000fa1e:	call   0x1000fde4
1000fa23:	mov    eax,esi
1000fa25:	call   0x1000c93d
1000fa2a:	mov    ebx,eax
1000fa2c:	mov    eax,DWORD PTR [esi+0x4]
1000fa2f:	inc    ebx
1000fa30:	test   eax,eax
1000fa32:	je     0x1000fa45
1000fa34:	push   DWORD PTR [esi+0x8]
1000fa37:	call   0x1000d37a
1000fa3c:	push   DWORD PTR [esi+0x4]
1000fa3f:	call   0x10042e92
1000fa44:	pop    ecx
1000fa45:	mov    eax,DWORD PTR [ebp-0x14]
1000fa48:	shl    edi,0x4
1000fa4b:	add    edi,eax
1000fa4d:	shl    ebx,0x4
1000fa50:	add    ebx,eax
1000fa52:	mov    DWORD PTR [esi+0xc],edi
1000fa55:	mov    DWORD PTR [esi+0x8],ebx
1000fa58:	mov    DWORD PTR [esi+0x4],eax
1000fa5b:	jmp    0x1000fb25
1000fa60:	push   DWORD PTR [ebp+0x8]
1000fa63:	mov    eax,DWORD PTR [ebp-0x14]
1000fa66:	call   0x1000d37a
1000fa6b:	push   DWORD PTR [ebp-0x14]
1000fa6e:	call   0x10042e92
1000fa73:	pop    ecx
1000fa74:	push   0x0
1000fa76:	push   0x0
1000fa78:	call   0x100479b4
1000fa7d:	mov    ebx,DWORD PTR [esi+0x8]
1000fa80:	mov    edi,DWORD PTR [ebp+0x10]
1000fa83:	mov    eax,ebx
1000fa85:	sub    eax,edi
1000fa87:	sar    eax,0x4
1000fa8a:	cmp    eax,0x1
1000fa8d:	jae    0x1000faf3
1000fa8f:	lea    eax,[edi+0x10]
1000fa92:	push   eax
1000fa93:	push   ebx
1000fa94:	mov    ecx,edi
1000fa96:	call   0x1000fde4
1000fa9b:	mov    BYTE PTR [ebp-0x4],0x3
1000fa9f:	mov    eax,DWORD PTR [esi+0x8]
1000faa2:	lea    ecx,[ebp-0x24]
1000faa5:	push   ecx
1000faa6:	mov    ecx,eax
1000faa8:	xor    edx,edx
1000faaa:	sub    ecx,edi
1000faac:	sar    ecx,0x4
1000faaf:	inc    edx
1000fab0:	sub    edx,ecx
1000fab2:	push   edx
1000fab3:	push   eax
1000fab4:	call   0x1000f776
1000fab9:	and    DWORD PTR [ebp-0x4],0x0
1000fabd:	add    DWORD PTR [esi+0x8],0x10
1000fac1:	mov    esi,DWORD PTR [esi+0x8]
1000fac4:	add    esi,0xfffffff0
1000fac7:	jmp    0x1000fad6
1000fac9:	lea    eax,[ebp-0x24]
1000facc:	mov    ecx,edi
1000face:	call   0x1000ff6c
1000fad3:	add    edi,0x10
1000fad6:	cmp    edi,esi
1000fad8:	jne    0x1000fac9
1000fada:	jmp    0x1000fb25
1000fadc:	mov    eax,DWORD PTR [ebp+0x8]
1000fadf:	mov    eax,DWORD PTR [eax+0x8]
1000fae2:	add    eax,0x10
1000fae5:	push   eax
1000fae6:	mov    eax,DWORD PTR [ebp+0x10]
1000fae9:	add    eax,0x10
1000faec:	call   0x1000d37a
1000faf1:	jmp    0x1000fa74
1000faf3:	push   ebx
1000faf4:	lea    ecx,[ebx-0x10]
1000faf7:	push   ebx
1000faf8:	mov    DWORD PTR [ebp+0x8],ecx
1000fafb:	call   0x1000fde4
1000fb00:	mov    ecx,DWORD PTR [ebp+0x8]
1000fb03:	mov    DWORD PTR [esi+0x8],eax
1000fb06:	push   edi
1000fb07:	mov    eax,ebx
1000fb09:	call   0x1000fe08
1000fb0e:	pop    ecx
1000fb0f:	lea    esi,[edi+0x10]
1000fb12:	jmp    0x1000fb21
1000fb14:	lea    eax,[ebp-0x24]
1000fb17:	mov    ecx,edi
1000fb19:	call   0x1000ff6c
1000fb1e:	add    edi,0x10
1000fb21:	cmp    edi,esi
1000fb23:	jne    0x1000fb14
1000fb25:	lea    esi,[ebp-0x24]
1000fb28:	call   0x10004964
1000fb2d:	call   0x10059b0d
1000fb32:	ret    0xc
1000fb35:	push   ebp
1000fb36:	mov    ebp,esp
1000fb38:	push   ecx
1000fb39:	push   ebx
1000fb3a:	push   esi
1000fb3b:	push   edi
1000fb3c:	mov    esi,eax
1000fb3e:	call   0x100045e9
1000fb43:	test   eax,eax
1000fb45:	jne    0x1000fb4b
1000fb47:	xor    ebx,ebx
1000fb49:	jmp    0x1000fb75
1000fb4b:	mov    edi,DWORD PTR [esi+0x4]
1000fb4e:	cmp    edi,DWORD PTR [esi+0x8]
1000fb51:	jbe    0x1000fb58
1000fb53:	call   0x100433b0
1000fb58:	cmp    DWORD PTR [ebp+0x10],0x0
1000fb5c:	je     0x1000fb63
1000fb5e:	cmp    DWORD PTR [ebp+0x10],esi
1000fb61:	je     0x1000fb68
1000fb63:	call   0x100433b0
1000fb68:	mov    eax,DWORD PTR [ebp+0x14]
1000fb6b:	sub    eax,edi
1000fb6d:	push   0x1c
1000fb6f:	cdq    
1000fb70:	pop    ecx
1000fb71:	idiv   ecx
1000fb73:	mov    ebx,eax
1000fb75:	push   DWORD PTR [ebp+0x14]
1000fb78:	mov    ecx,esi
1000fb7a:	push   DWORD PTR [ebp+0x10]
1000fb7d:	push   DWORD PTR [ebp+0xc]
1000fb80:	call   0x1000fbe9
1000fb85:	mov    edi,DWORD PTR [esi+0x4]
1000fb88:	cmp    edi,DWORD PTR [esi+0x8]
1000fb8b:	jbe    0x1000fb92
1000fb8d:	call   0x100433b0
1000fb92:	imul   ebx,ebx,0x1c
1000fb95:	mov    DWORD PTR [ebp+0x14],edi
1000fb98:	add    edi,ebx
1000fb9a:	cmp    edi,DWORD PTR [esi+0x8]
1000fb9d:	ja     0x1000fba4
1000fb9f:	cmp    edi,DWORD PTR [esi+0x4]
1000fba2:	jae    0x1000fba9
1000fba4:	call   0x100433b0
1000fba9:	mov    eax,DWORD PTR [ebp+0x8]
1000fbac:	mov    DWORD PTR [eax+0x4],edi
1000fbaf:	pop    edi
1000fbb0:	mov    DWORD PTR [eax],esi
1000fbb2:	pop    esi
1000fbb3:	pop    ebx
1000fbb4:	pop    ecx
1000fbb5:	pop    ebp
1000fbb6:	ret    0x10
1000fbb9:	push   ebp
1000fbba:	mov    ebp,esp
1000fbbc:	push   ecx
1000fbbd:	push   edi
1000fbbe:	xor    eax,eax
1000fbc0:	lea    edi,[ebp-0x4]
1000fbc3:	stos   BYTE PTR es:[edi],al
1000fbc4:	push   DWORD PTR [ebp-0x4]
1000fbc7:	push   DWORD PTR [ebp+0xc]
1000fbca:	push   DWORD PTR [ebp+0x10]
1000fbcd:	push   DWORD PTR [ebp+0xc]
1000fbd0:	push   DWORD PTR [ebp+0x8]
1000fbd3:	call   0x1000fed0
1000fbd8:	mov    eax,DWORD PTR [ebp+0xc]
1000fbdb:	imul   eax,eax,0x1c
1000fbde:	add    esp,0x14
1000fbe1:	add    eax,DWORD PTR [ebp+0x8]
1000fbe4:	pop    edi
1000fbe5:	leave  
1000fbe6:	ret    0xc
1000fbe9:	push   0x30
1000fbeb:	mov    eax,0x10060e13
1000fbf0:	call   0x10059ad4
1000fbf5:	mov    eax,DWORD PTR [ebp+0x8]
1000fbf8:	mov    esi,ecx
1000fbfa:	push   eax
1000fbfb:	lea    ecx,[ebp-0x30]
1000fbfe:	mov    DWORD PTR [ebp-0x34],esi
1000fc01:	call   0x100011a7
1000fc06:	xor    ebx,ebx
1000fc08:	mov    DWORD PTR [ebp-0x4],ebx
1000fc0b:	mov    ecx,DWORD PTR [esi+0x4]
1000fc0e:	cmp    ecx,ebx
1000fc10:	je     0x1000fc1f
1000fc12:	mov    eax,DWORD PTR [esi+0xc]
1000fc15:	sub    eax,ecx
1000fc17:	push   0x1c
1000fc19:	cdq    
1000fc1a:	pop    ecx
1000fc1b:	idiv   ecx
1000fc1d:	mov    ebx,eax
1000fc1f:	mov    eax,esi
1000fc21:	call   0x100045e9
1000fc26:	mov    edi,0x9249249
1000fc2b:	mov    ecx,edi
1000fc2d:	sub    ecx,eax
1000fc2f:	cmp    ecx,0x1
1000fc32:	jae    0x1000fc39
1000fc34:	call   0x1000a740
1000fc39:	mov    eax,esi
1000fc3b:	call   0x100045e9
1000fc40:	inc    eax
1000fc41:	cmp    ebx,eax
1000fc43:	jae    0x1000fd06
1000fc49:	mov    eax,ebx
1000fc4b:	shr    eax,1
1000fc4d:	sub    edi,eax
1000fc4f:	cmp    edi,ebx
1000fc51:	jae    0x1000fc57
1000fc53:	xor    ebx,ebx
1000fc55:	jmp    0x1000fc59
1000fc57:	add    ebx,eax
1000fc59:	mov    eax,esi
1000fc5b:	call   0x100045e9
1000fc60:	inc    eax
1000fc61:	cmp    ebx,eax
1000fc63:	jae    0x1000fc6f
1000fc65:	mov    eax,esi
1000fc67:	call   0x100045e9
1000fc6c:	mov    ebx,eax
1000fc6e:	inc    ebx
1000fc6f:	mov    ecx,ebx
1000fc71:	call   0x10004e33
1000fc76:	push   DWORD PTR [ebp+0x10]
1000fc79:	mov    BYTE PTR [ebp-0x4],0x1
1000fc7d:	mov    ecx,DWORD PTR [esi+0x4]
1000fc80:	mov    edx,eax
1000fc82:	mov    DWORD PTR [ebp-0x34],eax
1000fc85:	mov    DWORD PTR [ebp-0x38],eax
1000fc88:	call   0x1000fe5e
1000fc8d:	lea    ecx,[ebp-0x30]
1000fc90:	push   ecx
1000fc91:	push   0x1
1000fc93:	push   eax
1000fc94:	mov    DWORD PTR [ebp-0x38],eax
1000fc97:	call   0x1000fbb9
1000fc9c:	push   DWORD PTR [esi+0x8]
1000fc9f:	mov    ecx,DWORD PTR [ebp+0x10]
1000fca2:	mov    edx,eax
1000fca4:	mov    DWORD PTR [ebp-0x38],edx
1000fca7:	call   0x1000fe5e
1000fcac:	mov    eax,esi
1000fcae:	call   0x100045e9
1000fcb3:	mov    edi,eax
1000fcb5:	mov    eax,DWORD PTR [esi+0x4]
1000fcb8:	inc    edi
1000fcb9:	test   eax,eax
1000fcbb:	je     0x1000fcce
1000fcbd:	push   DWORD PTR [esi+0x8]
1000fcc0:	call   0x10004ea3
1000fcc5:	push   DWORD PTR [esi+0x4]
1000fcc8:	call   0x10042e92
1000fccd:	pop    ecx
1000fcce:	mov    eax,DWORD PTR [ebp-0x34]
1000fcd1:	imul   ebx,ebx,0x1c
1000fcd4:	imul   edi,edi,0x1c
1000fcd7:	add    ebx,eax
1000fcd9:	add    edi,eax
1000fcdb:	mov    DWORD PTR [esi+0xc],ebx
1000fcde:	mov    DWORD PTR [esi+0x8],edi
1000fce1:	mov    DWORD PTR [esi+0x4],eax
1000fce4:	jmp    0x1000fdd0
1000fce9:	push   DWORD PTR [ebp-0x38]
1000fcec:	mov    eax,DWORD PTR [ebp-0x34]
1000fcef:	call   0x10004ea3
1000fcf4:	push   DWORD PTR [ebp-0x34]
1000fcf7:	call   0x10042e92
1000fcfc:	pop    ecx
1000fcfd:	push   0x0
1000fcff:	push   0x0
1000fd01:	call   0x100479b4
1000fd06:	mov    edi,DWORD PTR [esi+0x8]
1000fd09:	mov    ebx,DWORD PTR [ebp+0x10]
1000fd0c:	mov    eax,edi
1000fd0e:	sub    eax,ebx
1000fd10:	push   0x1c
1000fd12:	cdq    
1000fd13:	pop    ecx
1000fd14:	idiv   ecx
1000fd16:	push   edi
1000fd17:	cmp    eax,0x1
1000fd1a:	jae    0x1000fd88
1000fd1c:	lea    edx,[ebx+0x1c]
1000fd1f:	mov    ecx,ebx
1000fd21:	call   0x1000fe5e
1000fd26:	mov    BYTE PTR [ebp-0x4],0x3
1000fd2a:	mov    ecx,DWORD PTR [esi+0x8]
1000fd2d:	lea    eax,[ebp-0x30]
1000fd30:	push   eax
1000fd31:	mov    eax,ecx
1000fd33:	sub    eax,ebx
1000fd35:	push   0x1c
1000fd37:	pop    edi
1000fd38:	cdq    
1000fd39:	idiv   edi
1000fd3b:	xor    edx,edx
1000fd3d:	inc    edx
1000fd3e:	sub    edx,eax
1000fd40:	push   edx
1000fd41:	push   ecx
1000fd42:	call   0x1000fbb9
1000fd47:	and    DWORD PTR [ebp-0x4],0x0
1000fd4b:	add    DWORD PTR [esi+0x8],edi
1000fd4e:	mov    esi,DWORD PTR [esi+0x8]
1000fd51:	add    esi,0xffffffe4
1000fd54:	jmp    0x1000fd68
1000fd56:	push   0xffffffff
1000fd58:	push   0x0
1000fd5a:	lea    eax,[ebp-0x30]
1000fd5d:	push   eax
1000fd5e:	mov    ecx,ebx
1000fd60:	call   0x10001241
1000fd65:	add    ebx,0x1c
1000fd68:	cmp    ebx,esi
1000fd6a:	jne    0x1000fd56
1000fd6c:	jmp    0x1000fdd0
1000fd6e:	mov    eax,DWORD PTR [ebp-0x34]
1000fd71:	mov    eax,DWORD PTR [eax+0x8]
1000fd74:	add    eax,0x1c
1000fd77:	push   eax
1000fd78:	mov    eax,DWORD PTR [ebp+0x10]
1000fd7b:	add    eax,0x1c
1000fd7e:	call   0x10004ea3
1000fd83:	jmp    0x1000fcfd
1000fd88:	lea    ecx,[edi-0x1c]
1000fd8b:	mov    edx,edi
1000fd8d:	call   0x1000fe5e
1000fd92:	mov    DWORD PTR [esi+0x8],eax
1000fd95:	lea    esi,[edi-0x1c]
1000fd98:	cmp    ebx,esi
1000fd9a:	je     0x1000fdb1
1000fd9c:	sub    edi,esi
1000fd9e:	sub    esi,0x1c
1000fda1:	lea    eax,[edi+esi*1]
1000fda4:	push   eax
1000fda5:	mov    ecx,esi
1000fda7:	call   0x1001020e
1000fdac:	cmp    esi,ebx
1000fdae:	pop    ecx
1000fdaf:	jne    0x1000fd9e
1000fdb1:	lea    edi,[ebx+0x1c]
1000fdb4:	cmp    ebx,edi
1000fdb6:	mov    esi,ebx
1000fdb8:	je     0x1000fdd0
1000fdba:	push   0xffffffff
1000fdbc:	push   0x0
1000fdbe:	lea    eax,[ebp-0x30]
1000fdc1:	push   eax
1000fdc2:	mov    ecx,esi
1000fdc4:	call   0x10001241
1000fdc9:	add    esi,0x1c
1000fdcc:	cmp    esi,edi
1000fdce:	jne    0x1000fdba
1000fdd0:	push   0x0
1000fdd2:	push   0x1
1000fdd4:	lea    ecx,[ebp-0x30]
1000fdd7:	call   0x100012f0
1000fddc:	call   0x10059b30
1000fde1:	ret    0xc
1000fde4:	push   ebp
1000fde5:	mov    ebp,esp
1000fde7:	push   ecx
1000fde8:	push   edi
1000fde9:	xor    eax,eax
1000fdeb:	lea    edi,[ebp-0x4]
1000fdee:	stos   BYTE PTR es:[edi],al
1000fdef:	push   DWORD PTR [ebp-0x4]
1000fdf2:	push   DWORD PTR [ebp+0xc]
1000fdf5:	push   DWORD PTR [ebp+0xc]
1000fdf8:	push   DWORD PTR [ebp+0x8]
1000fdfb:	call   0x1001009c
1000fe00:	add    esp,0x10
1000fe03:	pop    edi
1000fe04:	leave  
1000fe05:	ret    0x8
1000fe08:	push   ecx
1000fe09:	push   ebx
1000fe0a:	push   esi
1000fe0b:	push   edi
1000fe0c:	mov    edi,ecx
1000fe0e:	sub    ecx,DWORD PTR [esp+0x14]
1000fe12:	mov    esi,eax
1000fe14:	sar    ecx,0x4
1000fe17:	shl    ecx,0x4
1000fe1a:	sub    eax,ecx
1000fe1c:	cmp    DWORD PTR [esp+0x14],edi
1000fe20:	je     0x1000fe59
1000fe22:	lea    edx,[edi+0xc]
1000fe25:	lea    ecx,[esi+0x8]
1000fe28:	sub    edi,esi
1000fe2a:	mov    ebx,DWORD PTR [edx-0x18]
1000fe2d:	mov    esi,DWORD PTR [ecx-0x14]
1000fe30:	sub    ecx,0x10
1000fe33:	sub    edx,0x10
1000fe36:	mov    DWORD PTR [ecx-0x4],ebx
1000fe39:	mov    DWORD PTR [edx-0x8],esi
1000fe3c:	mov    ebx,DWORD PTR [edi+ecx*1]
1000fe3f:	mov    esi,DWORD PTR [ecx]
1000fe41:	mov    DWORD PTR [ecx],ebx
1000fe43:	mov    DWORD PTR [edi+ecx*1],esi
1000fe46:	mov    esi,DWORD PTR [ecx+0x4]
1000fe49:	mov    ebx,DWORD PTR [edx]
1000fe4b:	mov    DWORD PTR [ecx+0x4],ebx
1000fe4e:	mov    DWORD PTR [edx],esi
1000fe50:	lea    esi,[edx-0xc]
1000fe53:	cmp    esi,DWORD PTR [esp+0x14]
1000fe57:	jne    0x1000fe2a
1000fe59:	pop    edi
1000fe5a:	pop    esi
1000fe5b:	pop    ebx
1000fe5c:	pop    ecx
1000fe5d:	ret    
1000fe5e:	push   ebp
1000fe5f:	mov    ebp,esp
1000fe61:	push   ecx
1000fe62:	push   edi
1000fe63:	xor    eax,eax
1000fe65:	lea    edi,[ebp-0x4]
1000fe68:	stos   BYTE PTR es:[edi],al
1000fe69:	push   DWORD PTR [ebp-0x4]
1000fe6c:	push   DWORD PTR [ebp+0x8]
1000fe6f:	push   DWORD PTR [ebp+0x8]
1000fe72:	call   0x1001012a
1000fe77:	add    esp,0xc
1000fe7a:	pop    edi
1000fe7b:	leave  
1000fe7c:	ret    0x4
1000fe7f:	push   0x8
1000fe81:	mov    eax,0x10061f8b
1000fe86:	call   0x10059a68
1000fe8b:	mov    eax,DWORD PTR [ebp+0x8]
1000fe8e:	and    DWORD PTR [ebp-0x4],0x0
1000fe92:	mov    DWORD PTR [ebp-0x14],eax
1000fe95:	cmp    DWORD PTR [ebp+0xc],0x0
1000fe99:	jbe    0x1000feca
1000fe9b:	push   DWORD PTR [ebp+0x8]
1000fe9e:	mov    ecx,DWORD PTR [ebp+0x10]
1000fea1:	call   0x1000ff46
1000fea6:	dec    DWORD PTR [ebp+0xc]
1000fea9:	add    DWORD PTR [ebp+0x8],0x10
1000fead:	jmp    0x1000fe95
1000feaf:	mov    esi,DWORD PTR [ebp-0x14]
1000feb2:	jmp    0x1000febc
1000feb4:	call   0x10004964
1000feb9:	add    esi,0x10
1000febc:	cmp    esi,DWORD PTR [ebp+0x8]
1000febf:	jne    0x1000feb4
1000fec1:	push   0x0
1000fec3:	push   0x0
1000fec5:	call   0x100479b4
1000feca:	call   0x10059b0d
1000fecf:	ret    
1000fed0:	push   0x8
1000fed2:	mov    eax,0x1005fc7a
1000fed7:	call   0x10059a68
1000fedc:	mov    eax,DWORD PTR [ebp+0x8]
1000fedf:	and    DWORD PTR [ebp-0x4],0x0
1000fee3:	mov    DWORD PTR [ebp-0x14],eax
1000fee6:	cmp    DWORD PTR [ebp+0xc],0x0
1000feea:	jbe    0x1000ff1c
1000feec:	push   DWORD PTR [ebp+0x10]
1000feef:	mov    ecx,DWORD PTR [ebp+0x8]
1000fef2:	call   0x1000ff22
1000fef7:	dec    DWORD PTR [ebp+0xc]
1000fefa:	add    DWORD PTR [ebp+0x8],0x1c
1000fefe:	jmp    0x1000fee6
1000ff00:	mov    esi,DWORD PTR [ebp-0x14]
1000ff03:	jmp    0x1000ff0e
1000ff05:	push   esi
1000ff06:	call   0x10006686
1000ff0b:	add    esi,0x1c
1000ff0e:	cmp    esi,DWORD PTR [ebp+0x8]
1000ff11:	push   0x0
1000ff13:	jne    0x1000ff05
1000ff15:	push   0x0
1000ff17:	call   0x100479b4
1000ff1c:	call   0x10059b0d
1000ff21:	ret    
1000ff22:	push   0x0
1000ff24:	mov    eax,0x1005f944
1000ff29:	call   0x10059a35
1000ff2e:	and    DWORD PTR [ebp-0x4],0x0
1000ff32:	test   ecx,ecx
1000ff34:	je     0x1000ff3e
1000ff36:	push   DWORD PTR [ebp+0x8]
1000ff39:	call   0x100011a7
1000ff3e:	call   0x10059b0d
1000ff43:	ret    0x4
1000ff46:	push   0x0
1000ff48:	mov    eax,0x1005f944
1000ff4d:	call   0x10059a35
1000ff52:	and    DWORD PTR [ebp-0x4],0x0
1000ff56:	cmp    DWORD PTR [ebp+0x8],0x0
1000ff5a:	je     0x1000ff64
1000ff5c:	push   DWORD PTR [ebp+0x8]
1000ff5f:	call   0x1000f7a7
1000ff64:	call   0x10059b0d
1000ff69:	ret    0x4
1000ff6c:	push   ebp
1000ff6d:	mov    ebp,esp
1000ff6f:	push   ecx
1000ff70:	push   ebx
1000ff71:	push   esi
1000ff72:	push   edi
1000ff73:	mov    ebx,eax
1000ff75:	mov    edi,ecx
1000ff77:	cmp    edi,ebx
1000ff79:	je     0x10010095
1000ff7f:	call   0x100045e9
1000ff84:	test   eax,eax
1000ff86:	jne    0x1000ffc9
1000ff88:	mov    ebx,DWORD PTR [edi+0x8]
1000ff8b:	cmp    DWORD PTR [edi+0x4],ebx
1000ff8e:	jbe    0x1000ff95
1000ff90:	call   0x100433b0
1000ff95:	mov    esi,DWORD PTR [edi+0x4]
1000ff98:	cmp    esi,DWORD PTR [edi+0x8]
1000ff9b:	jbe    0x1000ffa2
1000ff9d:	call   0x100433b0
1000ffa2:	cmp    esi,ebx
1000ffa4:	je     0x10010095
1000ffaa:	push   DWORD PTR [edi+0x8]
1000ffad:	mov    eax,esi
1000ffaf:	mov    ecx,ebx
1000ffb1:	call   0x100101ac
1000ffb6:	pop    ecx
1000ffb7:	push   DWORD PTR [edi+0x8]
1000ffba:	mov    esi,eax
1000ffbc:	call   0x10004ea3
1000ffc1:	mov    DWORD PTR [edi+0x8],esi
1000ffc4:	jmp    0x10010095
1000ffc9:	mov    eax,ebx
1000ffcb:	call   0x100045e9
1000ffd0:	mov    esi,eax
1000ffd2:	mov    eax,edi
1000ffd4:	call   0x100045e9
1000ffd9:	cmp    esi,eax
1000ffdb:	ja     0x10010006
1000ffdd:	push   DWORD PTR [ebx+0x8]
1000ffe0:	mov    eax,DWORD PTR [edi+0x4]
1000ffe3:	mov    ecx,DWORD PTR [ebx+0x4]
1000ffe6:	call   0x100101ac
1000ffeb:	pop    ecx
1000ffec:	push   DWORD PTR [edi+0x8]
1000ffef:	call   0x10004ea3
1000fff4:	mov    eax,ebx
1000fff6:	call   0x100045e9
1000fffb:	imul   eax,eax,0x1c
1000fffe:	add    eax,DWORD PTR [edi+0x4]
10010001:	jmp    0x10010092
10010006:	mov    esi,DWORD PTR [edi+0x4]
10010009:	test   esi,esi
1001000b:	jne    0x10010012
1001000d:	and    DWORD PTR [ebp-0x4],esi
10010010:	jmp    0x10010020
10010012:	mov    eax,DWORD PTR [edi+0xc]
10010015:	sub    eax,esi
10010017:	push   0x1c
10010019:	cdq    
1001001a:	pop    ecx
1001001b:	idiv   ecx
1001001d:	mov    DWORD PTR [ebp-0x4],eax
10010020:	mov    eax,ebx
10010022:	call   0x100045e9
10010027:	cmp    eax,DWORD PTR [ebp-0x4]
1001002a:	ja     0x1001004e
1001002c:	mov    eax,edi
1001002e:	call   0x100045e9
10010033:	mov    ecx,DWORD PTR [ebx+0x4]
10010036:	mov    esi,eax
10010038:	mov    eax,DWORD PTR [edi+0x4]
1001003b:	imul   esi,esi,0x1c
1001003e:	add    esi,ecx
10010040:	push   esi
10010041:	call   0x100101ac
10010046:	pop    ecx
10010047:	push   DWORD PTR [edi+0x8]
1001004a:	mov    ecx,esi
1001004c:	jmp    0x1001008a
1001004e:	test   esi,esi
10010050:	je     0x10010065
10010052:	push   DWORD PTR [edi+0x8]
10010055:	mov    eax,esi
10010057:	call   0x10004ea3
1001005c:	push   DWORD PTR [edi+0x4]
1001005f:	call   0x10042e92
10010064:	pop    ecx
10010065:	mov    eax,ebx
10010067:	call   0x100045e9
1001006c:	xor    ecx,ecx
1001006e:	cmp    eax,ecx
10010070:	mov    DWORD PTR [edi+0x4],ecx
10010073:	mov    DWORD PTR [edi+0x8],ecx
10010076:	mov    DWORD PTR [edi+0xc],ecx
10010079:	je     0x10010095
1001007b:	call   0x1000493b
10010080:	test   al,al
10010082:	je     0x10010095
10010084:	push   DWORD PTR [edi+0x4]
10010087:	mov    ecx,DWORD PTR [ebx+0x4]
1001008a:	push   DWORD PTR [ebx+0x8]
1001008d:	call   0x100101ea
10010092:	mov    DWORD PTR [edi+0x8],eax
10010095:	mov    eax,edi
10010097:	pop    edi
10010098:	pop    esi
10010099:	pop    ebx
1001009a:	leave  
1001009b:	ret    
1001009c:	push   0x1c
1001009e:	mov    eax,0x10062c7f
100100a3:	call   0x10059a68
100100a8:	mov    edi,DWORD PTR [ebp+0xc]
100100ab:	mov    esi,ecx
100100ad:	xor    eax,eax
100100af:	mov    DWORD PTR [ebp-0x18],edi
100100b2:	mov    DWORD PTR [ebp-0x24],eax
100100b5:	mov    DWORD PTR [ebp-0x20],eax
100100b8:	mov    DWORD PTR [ebp-0x1c],eax
100100bb:	mov    DWORD PTR [ebp-0x4],eax
100100be:	mov    BYTE PTR [ebp-0x4],0x1
100100c2:	cmp    esi,DWORD PTR [ebp+0x8]
100100c5:	je     0x1001011a
100100c7:	push   edi
100100c8:	lea    ecx,[ebp-0x28]
100100cb:	call   0x1000ff46
100100d0:	mov    ecx,DWORD PTR [esi+0x4]
100100d3:	mov    eax,DWORD PTR [edi+0x4]
100100d6:	mov    DWORD PTR [edi+0x4],ecx
100100d9:	mov    DWORD PTR [esi+0x4],eax
100100dc:	mov    ecx,DWORD PTR [esi+0x8]
100100df:	mov    eax,DWORD PTR [edi+0x8]
100100e2:	mov    DWORD PTR [edi+0x8],ecx
100100e5:	mov    DWORD PTR [esi+0x8],eax
100100e8:	mov    ecx,DWORD PTR [esi+0xc]
100100eb:	mov    eax,DWORD PTR [edi+0xc]
100100ee:	mov    DWORD PTR [edi+0xc],ecx
100100f1:	add    edi,0x10
100100f4:	mov    DWORD PTR [esi+0xc],eax
100100f7:	mov    DWORD PTR [ebp+0xc],edi
100100fa:	add    esi,0x10
100100fd:	jmp    0x100100c2
100100ff:	mov    esi,DWORD PTR [ebp-0x18]
10010102:	jmp    0x1001010c
10010104:	call   0x10004964
10010109:	add    esi,0x10
1001010c:	cmp    esi,DWORD PTR [ebp+0xc]
1001010f:	jne    0x10010104
10010111:	xor    eax,eax
10010113:	push   eax
10010114:	push   eax
10010115:	call   0x100479b4
1001011a:	lea    esi,[ebp-0x28]
1001011d:	call   0x10004964
10010122:	mov    eax,edi
10010124:	call   0x10059b0d
10010129:	ret    
1001012a:	push   0x2c
1001012c:	mov    eax,0x10060449
10010131:	call   0x10059ad4
10010136:	mov    esi,edx
10010138:	xor    ebx,ebx
1001013a:	mov    edi,ecx
1001013c:	push   ebx
1001013d:	lea    ecx,[ebp-0x30]
10010140:	mov    DWORD PTR [ebp-0x34],esi
10010143:	mov    DWORD PTR [ebp-0x38],esi
10010146:	mov    DWORD PTR [ebp-0x18],0xf
1001014d:	call   0x1000141c
10010152:	mov    DWORD PTR [ebp-0x4],ebx
10010155:	mov    BYTE PTR [ebp-0x4],0x1
10010159:	cmp    edi,DWORD PTR [ebp+0x8]
1001015c:	je     0x10010199
1001015e:	lea    eax,[ebp-0x30]
10010161:	push   eax
10010162:	mov    ecx,esi
10010164:	call   0x1000ff22
10010169:	push   esi
1001016a:	mov    ecx,edi
1001016c:	call   0x1001020e
10010171:	add    esi,0x1c
10010174:	pop    ecx
10010175:	mov    DWORD PTR [ebp-0x34],esi
10010178:	add    edi,0x1c
1001017b:	jmp    0x10010159
1001017d:	mov    esi,DWORD PTR [ebp-0x38]
10010180:	jmp    0x1001018b
10010182:	push   esi
10010183:	call   0x10006686
10010188:	add    esi,0x1c
1001018b:	cmp    esi,DWORD PTR [ebp-0x34]
1001018e:	push   0x0
10010190:	jne    0x10010182
10010192:	push   0x0
10010194:	call   0x100479b4
10010199:	push   ebx
1001019a:	push   0x1
1001019c:	lea    ecx,[ebp-0x30]
1001019f:	call   0x100012f0
100101a4:	mov    eax,esi
100101a6:	call   0x10059b30
100101ab:	ret    
100101ac:	push   ebx
100101ad:	push   esi
100101ae:	mov    ebx,eax
100101b0:	mov    eax,DWORD PTR [esp+0xc]
100101b4:	push   edi
100101b5:	mov    edi,ecx
100101b7:	sub    eax,edi
100101b9:	push   0x1c
100101bb:	cdq    
100101bc:	pop    ecx
100101bd:	idiv   ecx
100101bf:	mov    esi,eax
100101c1:	imul   esi,esi,0x1c
100101c4:	add    esi,ebx
100101c6:	cmp    edi,DWORD PTR [esp+0x10]
100101ca:	je     0x100101e4
100101cc:	sub    ebx,edi
100101ce:	push   0xffffffff
100101d0:	push   0x0
100101d2:	push   edi
100101d3:	lea    ecx,[ebx+edi*1]
100101d6:	call   0x10001241
100101db:	add    edi,0x1c
100101de:	cmp    edi,DWORD PTR [esp+0x10]
100101e2:	jne    0x100101ce
100101e4:	pop    edi
100101e5:	mov    eax,esi
100101e7:	pop    esi
100101e8:	pop    ebx
100101e9:	ret    
100101ea:	push   ebp
100101eb:	mov    ebp,esp
100101ed:	push   ecx
100101ee:	push   edi
100101ef:	xor    eax,eax
100101f1:	lea    edi,[ebp-0x4]
100101f4:	stos   BYTE PTR es:[edi],al
100101f5:	push   DWORD PTR [ebp-0x4]
100101f8:	push   DWORD PTR [ebp+0xc]
100101fb:	push   DWORD PTR [ebp+0xc]
100101fe:	push   DWORD PTR [ebp+0x8]
10010201:	call   0x1001026b
10010206:	add    esp,0x10
10010209:	pop    edi
1001020a:	leave  
1001020b:	ret    0x8
1001020e:	push   ebp
1001020f:	mov    ebp,esp
10010211:	sub    esp,0x14
10010214:	mov    eax,ds:0x1007e030
10010219:	xor    eax,ebp
1001021b:	mov    DWORD PTR [ebp-0x4],eax
1001021e:	mov    eax,DWORD PTR [ebp+0x8]
10010221:	push   ebx
10010222:	push   esi
10010223:	push   edi
10010224:	lea    edx,[eax+0x4]
10010227:	mov    esi,edx
10010229:	lea    edi,[ebp-0x14]
1001022c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001022d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001022e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001022f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010230:	lea    ebx,[ecx+0x4]
10010233:	mov    edi,edx
10010235:	mov    esi,ebx
10010237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001023a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001023b:	mov    edi,ebx
1001023d:	lea    esi,[ebp-0x14]
10010240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010244:	mov    esi,DWORD PTR [ecx+0x14]
10010247:	mov    edx,DWORD PTR [eax+0x14]
1001024a:	mov    DWORD PTR [eax+0x14],esi
1001024d:	mov    esi,DWORD PTR [ecx+0x18]
10010250:	mov    DWORD PTR [ecx+0x14],edx
10010253:	mov    edx,DWORD PTR [eax+0x18]
10010256:	mov    DWORD PTR [eax+0x18],esi
10010259:	mov    DWORD PTR [ecx+0x18],edx
1001025c:	mov    ecx,DWORD PTR [ebp-0x4]
1001025f:	pop    edi
10010260:	pop    esi
10010261:	xor    ecx,ebp
10010263:	pop    ebx
10010264:	call   0x10042e97
10010269:	leave  
1001026a:	ret    
1001026b:	push   0x8
1001026d:	mov    eax,0x10060426
10010272:	call   0x10059a68
10010277:	mov    esi,ecx
10010279:	mov    eax,DWORD PTR [ebp+0xc]
1001027c:	and    DWORD PTR [ebp-0x4],0x0
10010280:	mov    DWORD PTR [ebp-0x14],eax
10010283:	cmp    esi,DWORD PTR [ebp+0x8]
10010286:	je     0x100102b6
10010288:	mov    ecx,DWORD PTR [ebp+0xc]
1001028b:	push   esi
1001028c:	call   0x1000ff22
10010291:	add    DWORD PTR [ebp+0xc],0x1c
10010295:	add    esi,0x1c
10010298:	jmp    0x10010283
1001029a:	mov    esi,DWORD PTR [ebp-0x14]
1001029d:	jmp    0x100102a8
1001029f:	push   esi
100102a0:	call   0x10006686
100102a5:	add    esi,0x1c
100102a8:	cmp    esi,DWORD PTR [ebp+0xc]
100102ab:	push   0x0
100102ad:	jne    0x1001029f
100102af:	push   0x0
100102b1:	call   0x100479b4
100102b6:	mov    eax,DWORD PTR [ebp+0xc]
100102b9:	call   0x10059b0d
100102be:	ret    
100102bf:	mov    edx,DWORD PTR [ecx]
100102c1:	cmp    edx,DWORD PTR [eax]
100102c3:	jne    0x100102e1
100102c5:	mov    edx,DWORD PTR [ecx+0x4]
100102c8:	cmp    edx,DWORD PTR [eax+0x4]
100102cb:	jne    0x100102e1
100102cd:	mov    edx,DWORD PTR [ecx+0x8]
100102d0:	cmp    edx,DWORD PTR [eax+0x8]
100102d3:	jne    0x100102e1
100102d5:	mov    ecx,DWORD PTR [ecx+0xc]
100102d8:	cmp    ecx,DWORD PTR [eax+0xc]
100102db:	jne    0x100102e1
100102dd:	xor    eax,eax
100102df:	inc    eax
100102e0:	ret    
100102e1:	xor    eax,eax
100102e3:	ret    
100102e4:	test   esi,esi
100102e6:	jne    0x100102ec
100102e8:	xor    eax,eax
100102ea:	jmp    0x1001030d
100102ec:	push   edi
100102ed:	mov    edi,DWORD PTR [esi]
100102ef:	and    DWORD PTR [esi],0x0
100102f2:	test   eax,eax
100102f4:	je     0x10010300
100102f6:	mov    ecx,DWORD PTR [eax]
100102f8:	push   esi
100102f9:	push   DWORD PTR [esp+0xc]
100102fd:	push   eax
100102fe:	call   DWORD PTR [ecx]
10010300:	test   edi,edi
10010302:	je     0x1001030a
10010304:	mov    eax,DWORD PTR [edi]
10010306:	push   edi
10010307:	call   DWORD PTR [eax+0x8]
1001030a:	mov    eax,DWORD PTR [esi]
1001030c:	pop    edi
1001030d:	ret    0x4
10010310:	cmp    DWORD PTR [eax],0x0
10010313:	jne    0x10010331
10010315:	cmp    DWORD PTR [eax+0x4],0x0
10010319:	jne    0x10010331
1001031b:	cmp    DWORD PTR [eax+0x8],0xc0
10010322:	jne    0x10010331
10010324:	cmp    DWORD PTR [eax+0xc],0x46000000
1001032b:	jne    0x10010331
1001032d:	xor    eax,eax
1001032f:	inc    eax
10010330:	ret    
10010331:	xor    eax,eax
10010333:	ret    
10010334:	push   ebp
10010335:	mov    ebp,esp
10010337:	push   ecx
10010338:	cmp    DWORD PTR [ebp+0x8],0x0
1001033c:	push   esi
1001033d:	push   edi
1001033e:	mov    esi,eax
10010340:	je     0x100103be
10010342:	test   esi,esi
10010344:	je     0x100103be
10010346:	test   ebx,ebx
10010348:	jne    0x10010351
1001034a:	mov    eax,0x80004003
1001034f:	jmp    0x100103c3
10010351:	mov    eax,DWORD PTR [ebp+0xc]
10010354:	and    DWORD PTR [ebx],0x0
10010357:	call   0x10010310
1001035c:	test   eax,eax
1001035e:	je     0x100103b0
10010360:	mov    esi,DWORD PTR [esi+0x4]
10010363:	add    esi,DWORD PTR [ebp+0x8]
10010366:	mov    eax,DWORD PTR [esi]
10010368:	push   esi
10010369:	call   DWORD PTR [eax+0x4]
1001036c:	mov    DWORD PTR [ebx],esi
1001036e:	xor    eax,eax
10010370:	jmp    0x100103c3
10010372:	mov    ecx,DWORD PTR [esi]
10010374:	xor    eax,eax
10010376:	test   ecx,ecx
10010378:	sete   al
1001037b:	test   eax,eax
1001037d:	mov    DWORD PTR [ebp-0x4],eax
10010380:	jne    0x1001038e
10010382:	mov    eax,DWORD PTR [ebp+0xc]
10010385:	call   0x100102bf
1001038a:	test   eax,eax
1001038c:	je     0x100103ad
1001038e:	cmp    edi,0x1
10010391:	je     0x10010360
10010393:	push   DWORD PTR [esi+0x4]
10010396:	push   ebx
10010397:	push   DWORD PTR [ebp+0xc]
1001039a:	push   DWORD PTR [ebp+0x8]
1001039d:	call   edi
1001039f:	test   eax,eax
100103a1:	je     0x100103c3
100103a3:	cmp    DWORD PTR [ebp-0x4],0x0
100103a7:	jne    0x100103ad
100103a9:	test   eax,eax
100103ab:	jl     0x100103c3
100103ad:	add    esi,0xc
100103b0:	mov    edi,DWORD PTR [esi+0x8]
100103b3:	test   edi,edi
100103b5:	jne    0x10010372
100103b7:	mov    eax,0x80004002
100103bc:	jmp    0x100103c3
100103be:	mov    eax,0x80070057
100103c3:	pop    edi
100103c4:	pop    esi
100103c5:	leave  
100103c6:	ret    0x8
100103c9:	push   0xc
100103cb:	mov    eax,0x1005f8b2
100103d0:	call   0x10059a68
100103d5:	mov    edi,DWORD PTR [ebp+0x8]
100103d8:	test   edi,edi
100103da:	jne    0x100103e3
100103dc:	mov    eax,0x80070057
100103e1:	jmp    0x1001043f
100103e3:	and    DWORD PTR [ebp-0x14],0x0
100103e7:	and    DWORD PTR [ebp-0x4],0x0
100103eb:	push   0xc
100103ed:	call   0x1004349e
100103f2:	pop    ecx
100103f3:	mov    esi,eax
100103f5:	jmp    0x10010403
100103f7:	mov    eax,0x100103fd
100103fc:	ret    
100103fd:	mov    edi,DWORD PTR [ebp+0x8]
10010400:	mov    esi,DWORD PTR [ebp-0x14]
10010403:	test   esi,esi
10010405:	jne    0x1001040e
10010407:	mov    ebx,0x8007000e
1001040c:	jmp    0x1001043d
1001040e:	mov    eax,DWORD PTR [ebp+0xc]
10010411:	mov    DWORD PTR [esi],eax
10010413:	mov    eax,DWORD PTR [ebp+0x10]
10010416:	mov    DWORD PTR [esi+0x4],eax
10010419:	lea    eax,[edi+0xc]
1001041c:	push   eax
1001041d:	mov    DWORD PTR [ebp-0x18],eax
10010420:	call   DWORD PTR ds:0x100660f0
10010426:	mov    eax,DWORD PTR [edi+0x8]
10010429:	mov    DWORD PTR [esi+0x8],eax
1001042c:	lea    ecx,[ebp-0x18]
1001042f:	mov    BYTE PTR [ebp-0x14],0x1
10010433:	xor    ebx,ebx
10010435:	mov    DWORD PTR [edi+0x8],esi
10010438:	call   0x10010c9f
1001043d:	mov    eax,ebx
1001043f:	call   0x10059b0d
10010444:	ret    0xc
10010447:	mov    eax,ecx
10010449:	and    DWORD PTR [eax],0x0
1001044c:	and    DWORD PTR [eax+0x4],0x0
10010450:	or     DWORD PTR [eax+0x8],0xffffffff
10010454:	ret    
10010455:	test   edi,edi
10010457:	jne    0x1001045f
10010459:	mov    eax,0x80004003
1001045e:	ret    
1001045f:	push   esi
10010460:	xor    eax,eax
10010462:	lea    esi,[ecx+0xc]
10010465:	cmp    DWORD PTR [esi],eax
10010467:	jne    0x1001046e
10010469:	call   0x10010716
1001046e:	mov    ecx,DWORD PTR [esi]
10010470:	mov    DWORD PTR [edi],ecx
10010472:	cmp    DWORD PTR [esi],0x0
10010475:	je     0x10010481
10010477:	mov    esi,DWORD PTR [esi]
10010479:	mov    eax,DWORD PTR [esi]
1001047b:	push   esi
1001047c:	call   DWORD PTR [eax+0x4]
1001047f:	xor    eax,eax
10010481:	pop    esi
10010482:	ret    
10010483:	push   ebp
10010484:	mov    ebp,esp
10010486:	push   ecx
10010487:	push   esi
10010488:	push   edi
10010489:	mov    esi,eax
1001048b:	xor    edi,edi
1001048d:	xor    eax,eax
1001048f:	cmp    DWORD PTR [esi+0xc],edi
10010492:	je     0x10010499
10010494:	cmp    DWORD PTR [esi+0x14],edi
10010497:	jne    0x100104a0
10010499:	mov    ecx,esi
1001049b:	call   0x10010716
100104a0:	cmp    DWORD PTR [esi+0xc],edi
100104a3:	je     0x1001050d
100104a5:	cmp    DWORD PTR [esi+0x14],edi
100104a8:	push   ebx
100104a9:	je     0x100104fa
100104ab:	cmp    DWORD PTR [ebp+0xc],0x1
100104af:	jne    0x100104fa
100104b1:	mov    eax,DWORD PTR [ebp+0x8]
100104b4:	push   DWORD PTR [eax]
100104b6:	call   DWORD PTR ds:0x100660c4
100104bc:	mov    edi,DWORD PTR [esi+0x18]
100104bf:	dec    edi
100104c0:	mov    DWORD PTR [ebp-0x4],eax
100104c3:	js     0x100104fa
100104c5:	mov    ebx,edi
100104c7:	imul   ebx,ebx,0xc
100104ca:	mov    eax,DWORD PTR [esi+0x14]
100104cd:	mov    ecx,DWORD PTR [ebp-0x4]
100104d0:	cmp    ecx,DWORD PTR [ebx+eax*1+0x4]
100104d4:	jne    0x100104f2
100104d6:	add    eax,ebx
100104d8:	mov    ecx,DWORD PTR [eax]
100104da:	mov    eax,DWORD PTR [eax+0x4]
100104dd:	add    eax,eax
100104df:	push   eax
100104e0:	mov    eax,DWORD PTR [ebp+0x8]
100104e3:	push   DWORD PTR [eax]
100104e5:	push   ecx
100104e6:	call   0x10043726
100104eb:	add    esp,0xc
100104ee:	test   eax,eax
100104f0:	je     0x10010513
100104f2:	dec    edi
100104f3:	sub    ebx,0xc
100104f6:	test   edi,edi
100104f8:	jge    0x100104ca
100104fa:	push   DWORD PTR [ebp+0x10]
100104fd:	mov    esi,DWORD PTR [esi+0xc]
10010500:	push   DWORD PTR [ebp+0xc]
10010503:	mov    eax,DWORD PTR [esi]
10010505:	push   DWORD PTR [ebp+0x8]
10010508:	push   esi
10010509:	call   DWORD PTR [eax+0x28]
1001050c:	pop    ebx
1001050d:	pop    edi
1001050e:	pop    esi
1001050f:	leave  
10010510:	ret    0xc
10010513:	mov    eax,DWORD PTR [esi+0x14]
10010516:	imul   edi,edi,0xc
10010519:	mov    eax,DWORD PTR [edi+eax*1+0x8]
1001051d:	mov    ecx,DWORD PTR [ebp+0x10]
10010520:	mov    DWORD PTR [ecx],eax
10010522:	xor    eax,eax
10010524:	jmp    0x1001050c
10010526:	push   ebp
10010527:	mov    ebp,esp
10010529:	push   esi
1001052a:	mov    esi,eax
1001052c:	xor    eax,eax
1001052e:	cmp    DWORD PTR [esi+0xc],eax
10010531:	je     0x10010538
10010533:	cmp    DWORD PTR [esi+0x14],eax
10010536:	jne    0x1001053f
10010538:	mov    ecx,esi
1001053a:	call   0x10010716
1001053f:	cmp    DWORD PTR [esi+0xc],0x0
10010543:	je     0x10010563
10010545:	push   DWORD PTR [ebp+0x20]
10010548:	mov    esi,DWORD PTR [esi+0xc]
1001054b:	push   DWORD PTR [ebp+0x1c]
1001054e:	mov    eax,DWORD PTR [esi]
10010550:	push   DWORD PTR [ebp+0x18]
10010553:	push   DWORD PTR [ebp+0x14]
10010556:	push   DWORD PTR [ebp+0x10]
10010559:	push   DWORD PTR [ebp+0xc]
1001055c:	push   DWORD PTR [ebp+0x8]
1001055f:	push   esi
10010560:	call   DWORD PTR [eax+0x2c]
10010563:	pop    esi
10010564:	pop    ebp
10010565:	ret    0x1c
10010568:	push   0x14
1001056a:	mov    eax,0x1005f897
1001056f:	call   0x10059a68
10010574:	mov    edi,DWORD PTR [ebp+0x8]
10010577:	mov    ebx,DWORD PTR [ebp+0xc]
1001057a:	mov    eax,DWORD PTR [ebx]
1001057c:	lea    ecx,[ebp-0x20]
1001057f:	push   ecx
10010580:	push   ebx
10010581:	call   DWORD PTR [eax+0xc]
10010584:	xor    ecx,ecx
10010586:	cmp    eax,ecx
10010588:	jl     0x100106c8
1001058e:	mov    eax,DWORD PTR [ebp-0x20]
10010591:	movzx  eax,WORD PTR [eax+0x2c]
10010595:	mov    esi,eax
10010597:	cmp    esi,ecx
10010599:	mov    DWORD PTR [ebp-0x18],ecx
1001059c:	mov    DWORD PTR [edi+0x18],eax
1001059f:	mov    DWORD PTR [edi+0x14],ecx
100105a2:	je     0x10010623
100105a4:	push   0xc
100105a6:	pop    edx
100105a7:	mul    edx
100105a9:	mov    DWORD PTR [ebp-0x4],ecx
100105ac:	seto   cl
100105af:	neg    ecx
100105b1:	or     ecx,eax
100105b3:	xor    eax,eax
100105b5:	add    ecx,0x4
100105b8:	setb   al
100105bb:	neg    eax
100105bd:	or     eax,ecx
100105bf:	push   eax
100105c0:	call   0x10043721
100105c5:	pop    ecx
100105c6:	mov    DWORD PTR [ebp-0x14],eax
100105c9:	test   eax,eax
100105cb:	mov    BYTE PTR [ebp-0x4],0x1
100105cf:	je     0x100105f1
100105d1:	push   0x10001009
100105d6:	push   0x10010447
100105db:	push   esi
100105dc:	mov    DWORD PTR [eax],esi
100105de:	add    eax,0x4
100105e1:	push   0xc
100105e3:	push   eax
100105e4:	mov    DWORD PTR [ebp-0x1c],eax
100105e7:	call   0x10045df8
100105ec:	mov    eax,DWORD PTR [ebp-0x1c]
100105ef:	jmp    0x100105f3
100105f1:	xor    eax,eax
100105f3:	or     DWORD PTR [ebp-0x4],0xffffffff
100105f7:	mov    DWORD PTR [ebp-0x18],eax
100105fa:	jmp    0x10010608
100105fc:	mov    eax,0x10010602
10010601:	ret    
10010602:	mov    edi,DWORD PTR [ebp+0x8]
10010605:	mov    ebx,DWORD PTR [ebp+0xc]
10010608:	cmp    DWORD PTR [ebp-0x18],0x0
1001060c:	jne    0x10010621
1001060e:	push   DWORD PTR [ebp-0x20]
10010611:	mov    eax,DWORD PTR [ebx]
10010613:	push   ebx
10010614:	call   DWORD PTR [eax+0x4c]
10010617:	mov    eax,0x8007000e
1001061c:	jmp    0x100106ca
10010621:	xor    ecx,ecx
10010623:	cmp    DWORD PTR [edi+0x18],ecx
10010626:	mov    DWORD PTR [ebp-0x14],ecx
10010629:	jle    0x100106b9
1001062f:	mov    esi,DWORD PTR [ebp-0x18]
10010632:	mov    eax,DWORD PTR [ebx]
10010634:	lea    ecx,[ebp-0x1c]
10010637:	push   ecx
10010638:	push   DWORD PTR [ebp-0x14]
1001063b:	push   ebx
1001063c:	call   DWORD PTR [eax+0x14]
1001063f:	test   eax,eax
10010641:	jl     0x100106a7
10010643:	xor    eax,eax
10010645:	mov    DWORD PTR [ebp+0x8],eax
10010648:	push   eax
10010649:	push   eax
1001064a:	push   eax
1001064b:	mov    DWORD PTR [ebp-0x4],0x3
10010652:	mov    ecx,DWORD PTR [ebx]
10010654:	lea    eax,[ebp+0x8]
10010657:	push   eax
10010658:	mov    eax,DWORD PTR [ebp-0x1c]
1001065b:	push   DWORD PTR [eax]
1001065d:	push   ebx
1001065e:	call   DWORD PTR [ecx+0x30]
10010661:	test   eax,eax
10010663:	jl     0x10010691
10010665:	mov    ebx,DWORD PTR [ebp+0x8]
10010668:	mov    eax,DWORD PTR [esi]
1001066a:	and    DWORD PTR [ebp+0x8],0x0
1001066e:	cmp    eax,ebx
10010670:	je     0x1001067b
10010672:	push   eax
10010673:	call   DWORD PTR ds:0x100662b4
10010679:	mov    DWORD PTR [esi],ebx
1001067b:	push   DWORD PTR [esi]
1001067d:	call   DWORD PTR ds:0x100662ac
10010683:	mov    ebx,DWORD PTR [ebp+0xc]
10010686:	mov    DWORD PTR [esi+0x4],eax
10010689:	mov    eax,DWORD PTR [ebp-0x1c]
1001068c:	mov    eax,DWORD PTR [eax]
1001068e:	mov    DWORD PTR [esi+0x8],eax
10010691:	push   DWORD PTR [ebp-0x1c]
10010694:	mov    eax,DWORD PTR [ebx]
10010696:	push   ebx
10010697:	call   DWORD PTR [eax+0x50]
1001069a:	or     DWORD PTR [ebp-0x4],0xffffffff
1001069e:	push   DWORD PTR [ebp+0x8]
100106a1:	call   DWORD PTR ds:0x100662b4
100106a7:	inc    DWORD PTR [ebp-0x14]
100106aa:	mov    eax,DWORD PTR [ebp-0x14]
100106ad:	add    esi,0xc
100106b0:	cmp    eax,DWORD PTR [edi+0x18]
100106b3:	jl     0x10010632
100106b9:	mov    eax,DWORD PTR [ebp-0x18]
100106bc:	push   DWORD PTR [ebp-0x20]
100106bf:	mov    DWORD PTR [edi+0x14],eax
100106c2:	mov    eax,DWORD PTR [ebx]
100106c4:	push   ebx
100106c5:	call   DWORD PTR [eax+0x4c]
100106c8:	xor    eax,eax
100106ca:	call   0x10059b0d
100106cf:	ret    0x8
100106d2:	push   esi
100106d3:	mov    esi,DWORD PTR [esp+0x8]
100106d7:	test   esi,esi
100106d9:	je     0x10010712
100106db:	mov    eax,DWORD PTR [esi+0xc]
100106de:	test   eax,eax
100106e0:	je     0x100106e8
100106e2:	mov    ecx,DWORD PTR [eax]
100106e4:	push   eax
100106e5:	call   DWORD PTR [ecx+0x8]
100106e8:	mov    eax,DWORD PTR [esi+0x14]
100106eb:	and    DWORD PTR [esi+0xc],0x0
100106ef:	test   eax,eax
100106f1:	je     0x1001070e
100106f3:	push   edi
100106f4:	push   0x10001009
100106f9:	lea    edi,[eax-0x4]
100106fc:	push   DWORD PTR [edi]
100106fe:	push   0xc
10010700:	push   eax
10010701:	call   0x100430f9
10010706:	push   edi
10010707:	call   0x100433c0
1001070c:	pop    ecx
1001070d:	pop    edi
1001070e:	and    DWORD PTR [esi+0x14],0x0
10010712:	pop    esi
10010713:	ret    0x4
10010716:	push   ebp
10010717:	mov    ebp,esp
10010719:	and    esp,0xfffffff8
1001071c:	push   0xffffffff
1001071e:	push   0x100643c9
10010723:	mov    eax,fs:0x0
10010729:	push   eax
1001072a:	sub    esp,0x20
1001072d:	push   ebx
1001072e:	push   esi
1001072f:	push   edi
10010730:	mov    eax,ds:0x1007e030
10010735:	xor    eax,esp
10010737:	push   eax
10010738:	lea    eax,[esp+0x30]
1001073c:	mov    fs:0x0,eax
10010742:	mov    esi,ecx
10010744:	xor    ebx,ebx
10010746:	cmp    DWORD PTR [esi+0xc],ebx
10010749:	je     0x10010765
1001074b:	cmp    DWORD PTR [esi+0x14],ebx
1001074e:	je     0x10010765
10010750:	xor    eax,eax
10010752:	mov    ecx,DWORD PTR [esp+0x30]
10010756:	mov    DWORD PTR fs:0x0,ecx
1001075d:	pop    ecx
1001075e:	pop    edi
1001075f:	pop    esi
10010760:	pop    ebx
10010761:	mov    esp,ebp
10010763:	pop    ebp
10010764:	ret    
10010765:	mov    eax,ds:0x10080c04
1001076a:	add    eax,0x10
1001076d:	mov    DWORD PTR [esp+0x24],eax
10010771:	push   eax
10010772:	mov    DWORD PTR [esp+0x3c],ebx
10010776:	call   DWORD PTR ds:0x100660f0
1001077c:	cmp    DWORD PTR [esi+0xc],ebx
1001077f:	mov    BYTE PTR [esp+0x28],0x1
10010784:	jne    0x10010870
1001078a:	call   0x10006704
1001078f:	mov    edi,eax
10010791:	cmp    edi,ebx
10010793:	jne    0x100107a7
10010795:	mov    esi,0x80004005
1001079a:	lea    ecx,[esp+0x24]
1001079e:	call   0x10010c9f
100107a3:	mov    eax,esi
100107a5:	jmp    0x10010752
100107a7:	mov    DWORD PTR [esp+0x18],ebx
100107ab:	lea    ecx,[esp+0x18]
100107af:	push   ecx
100107b0:	mov    BYTE PTR [esp+0x3c],0x1
100107b5:	push   DWORD PTR [esi]
100107b7:	mov    eax,DWORD PTR [edi]
100107b9:	push   edi
100107ba:	call   DWORD PTR [eax+0x18]
100107bd:	cmp    eax,ebx
100107bf:	mov    DWORD PTR [esp+0x20],eax
100107c3:	jl     0x10010856
100107c9:	mov    eax,DWORD PTR [esp+0x18]
100107cd:	cmp    eax,ebx
100107cf:	mov    DWORD PTR [esp+0x14],eax
100107d3:	je     0x100107df
100107d5:	mov    ecx,DWORD PTR [eax]
100107d7:	push   eax
100107d8:	call   DWORD PTR [ecx+0x4]
100107db:	mov    eax,DWORD PTR [esp+0x18]
100107df:	mov    DWORD PTR [esp+0x1c],ebx
100107e3:	lea    edx,[esp+0x1c]
100107e7:	push   edx
100107e8:	push   0x1006dd3c
100107ed:	mov    BYTE PTR [esp+0x40],0x3
100107f2:	mov    ecx,DWORD PTR [eax]
100107f4:	push   eax
100107f5:	call   DWORD PTR [ecx]
100107f7:	test   eax,eax
100107f9:	jl     0x10010809
100107fb:	lea    eax,[esp+0x14]
100107ff:	push   eax
10010800:	lea    eax,[esp+0x20]
10010804:	call   0x10010cb6
10010809:	mov    eax,DWORD PTR [esp+0x14]
1001080d:	mov    DWORD PTR [esi+0xc],eax
10010810:	mov    eax,ds:0x10080c04
10010815:	mov    ecx,eax
10010817:	add    eax,0x4
1001081a:	neg    ecx
1001081c:	push   esi
1001081d:	sbb    ecx,ecx
1001081f:	push   0x100106d2
10010824:	and    ecx,eax
10010826:	push   ecx
10010827:	mov    DWORD PTR [esp+0x20],ebx
1001082b:	call   0x100103c9
10010830:	mov    BYTE PTR [esp+0x38],0x2
10010835:	mov    eax,DWORD PTR [esp+0x1c]
10010839:	cmp    eax,ebx
1001083b:	je     0x10010843
1001083d:	mov    ecx,DWORD PTR [eax]
1001083f:	push   eax
10010840:	call   DWORD PTR [ecx+0x8]
10010843:	mov    BYTE PTR [esp+0x38],0x1
10010848:	mov    eax,DWORD PTR [esp+0x14]
1001084c:	cmp    eax,ebx
1001084e:	je     0x10010856
10010850:	mov    ecx,DWORD PTR [eax]
10010852:	push   eax
10010853:	call   DWORD PTR [ecx+0x8]
10010856:	mov    eax,DWORD PTR [edi]
10010858:	push   edi
10010859:	call   DWORD PTR [eax+0x8]
1001085c:	mov    BYTE PTR [esp+0x38],bl
10010860:	mov    eax,DWORD PTR [esp+0x18]
10010864:	cmp    eax,ebx
10010866:	je     0x10010874
10010868:	mov    ecx,DWORD PTR [eax]
1001086a:	push   eax
1001086b:	call   DWORD PTR [ecx+0x8]
1001086e:	jmp    0x10010874
10010870:	mov    DWORD PTR [esp+0x20],ebx
10010874:	mov    eax,DWORD PTR [esi+0xc]
10010877:	cmp    eax,ebx
10010879:	je     0x1001088b
1001087b:	cmp    DWORD PTR [esi+0x14],ebx
1001087e:	jne    0x1001088b
10010880:	push   eax
10010881:	push   esi
10010882:	call   0x10010568
10010887:	mov    DWORD PTR [esp+0x20],eax
1001088b:	mov    esi,DWORD PTR [esp+0x20]
1001088f:	jmp    0x1001079a
10010894:	push   ebp
10010895:	mov    ebp,esp
10010897:	push   ecx
10010898:	push   ebx
10010899:	mov    ebx,eax
1001089b:	push   edi
1001089c:	lea    eax,[ebp-0x4]
1001089f:	mov    edi,ecx
100108a1:	push   eax
100108a2:	mov    DWORD PTR [edi+0x8],ebx
100108a5:	call   0x10010d3a
100108aa:	test   eax,eax
100108ac:	jl     0x100108dc
100108ae:	push   esi
100108af:	mov    esi,DWORD PTR [ebp-0x4]
100108b2:	test   esi,esi
100108b4:	mov    DWORD PTR [ebp-0x4],esi
100108b7:	je     0x100108bf
100108b9:	mov    eax,DWORD PTR [esi]
100108bb:	push   esi
100108bc:	call   DWORD PTR [eax+0x4]
100108bf:	add    edi,0xc
100108c2:	push   edi
100108c3:	lea    eax,[ebp-0x4]
100108c6:	call   0x10010db6
100108cb:	test   esi,esi
100108cd:	je     0x100108d5
100108cf:	mov    eax,DWORD PTR [esi]
100108d1:	push   esi
100108d2:	call   DWORD PTR [eax+0x8]
100108d5:	add    ebx,0x18
100108d8:	mov    DWORD PTR [esi+0x8],ebx
100108db:	pop    esi
100108dc:	pop    edi
100108dd:	pop    ebx
100108de:	leave  
100108df:	ret    
100108e0:	push   0x1c
100108e2:	mov    eax,0x1006040b
100108e7:	call   0x10059a35
100108ec:	mov    eax,DWORD PTR [ebp+0x8]
100108ef:	mov    eax,DWORD PTR [eax+0x8]
100108f2:	test   eax,eax
100108f4:	jne    0x100108fd
100108f6:	mov    eax,0x80004005
100108fb:	jmp    0x10010947
100108fd:	cmp    DWORD PTR [eax],0x0
10010900:	je     0x100108f6
10010902:	mov    eax,DWORD PTR [eax]
10010904:	lea    ecx,[ebp-0x28]
10010907:	push   ecx
10010908:	call   0x10019730
1001090d:	and    DWORD PTR [ebp-0x4],0x0
10010911:	cmp    DWORD PTR [eax+0x18],0x10
10010915:	jb     0x1001091c
10010917:	mov    eax,DWORD PTR [eax+0x4]
1001091a:	jmp    0x1001091f
1001091c:	add    eax,0x4
1001091f:	push   eax
10010920:	lea    edi,[ebp+0x8]
10010923:	call   0x10002467
10010928:	push   0x0
1001092a:	push   0x1
1001092c:	lea    ecx,[ebp-0x28]
1001092f:	call   0x100012f0
10010934:	mov    eax,edi
10010936:	call   0x1000d870
1001093b:	mov    ecx,DWORD PTR [ebp+0xc]
1001093e:	mov    DWORD PTR [ecx],eax
10010940:	call   0x100025c2
10010945:	xor    eax,eax
10010947:	call   0x10059b0d
1001094c:	ret    0x8
1001094f:	push   0x1c
10010951:	mov    eax,0x10060dbd
10010956:	call   0x10059a35
1001095b:	mov    esi,DWORD PTR [ebp+0x8]
1001095e:	mov    eax,DWORD PTR [esi+0x8]
10010961:	test   eax,eax
10010963:	jne    0x1001096c
10010965:	mov    eax,0x80004005
1001096a:	jmp    0x100109b7
1001096c:	cmp    DWORD PTR [eax],0x0
1001096f:	je     0x10010965
10010971:	mov    ecx,DWORD PTR [ebp+0xc]
10010974:	push   0x1
10010976:	lea    edi,[ebp+0x8]
10010979:	call   0x1000d7f3
1001097e:	and    DWORD PTR [ebp-0x4],0x0
10010982:	mov    eax,edi
10010984:	call   0x1000d853
10010989:	push   eax
1001098a:	lea    ecx,[ebp-0x28]
1001098d:	call   0x100011cd
10010992:	lea    eax,[ebp-0x28]
10010995:	mov    BYTE PTR [ebp-0x4],0x1
10010999:	push   eax
1001099a:	mov    eax,DWORD PTR [esi+0x8]
1001099d:	mov    esi,DWORD PTR [eax]
1001099f:	call   0x10007982
100109a4:	push   0x0
100109a6:	push   0x1
100109a8:	lea    ecx,[ebp-0x28]
100109ab:	call   0x100012f0
100109b0:	call   0x100025c2
100109b5:	xor    eax,eax
100109b7:	call   0x10059b0d
100109bc:	ret    0x8
100109bf:	push   0x1c
100109c1:	mov    eax,0x1006040b
100109c6:	call   0x10059a35
100109cb:	mov    eax,DWORD PTR [ebp+0x8]
100109ce:	mov    eax,DWORD PTR [eax+0x8]
100109d1:	test   eax,eax
100109d3:	jne    0x100109dc
100109d5:	mov    eax,0x80004005
100109da:	jmp    0x10010a28
100109dc:	cmp    DWORD PTR [eax+0x4],0x0
100109e0:	je     0x100109d5
100109e2:	mov    eax,DWORD PTR [eax+0x4]
100109e5:	lea    ecx,[ebp-0x28]
100109e8:	push   ecx
100109e9:	call   0x10019730
100109ee:	and    DWORD PTR [ebp-0x4],0x0
100109f2:	cmp    DWORD PTR [eax+0x18],0x10
100109f6:	jb     0x100109fd
100109f8:	mov    eax,DWORD PTR [eax+0x4]
100109fb:	jmp    0x10010a00
100109fd:	add    eax,0x4
10010a00:	push   eax
10010a01:	lea    edi,[ebp+0x8]
10010a04:	call   0x10002467
10010a09:	push   0x0
10010a0b:	push   0x1
10010a0d:	lea    ecx,[ebp-0x28]
10010a10:	call   0x100012f0
10010a15:	mov    eax,edi
10010a17:	call   0x1000d870
10010a1c:	mov    ecx,DWORD PTR [ebp+0xc]
10010a1f:	mov    DWORD PTR [ecx],eax
10010a21:	call   0x100025c2
10010a26:	xor    eax,eax
10010a28:	call   0x10059b0d
10010a2d:	ret    0x8
10010a30:	push   0x1c
10010a32:	mov    eax,0x10060dbd
10010a37:	call   0x10059a35
10010a3c:	mov    esi,DWORD PTR [ebp+0x8]
10010a3f:	mov    eax,DWORD PTR [esi+0x8]
10010a42:	test   eax,eax
10010a44:	jne    0x10010a4d
10010a46:	mov    eax,0x80004005
10010a4b:	jmp    0x10010a9a
10010a4d:	cmp    DWORD PTR [eax+0x4],0x0
10010a51:	je     0x10010a46
10010a53:	mov    ecx,DWORD PTR [ebp+0xc]
10010a56:	push   0x1
10010a58:	lea    edi,[ebp+0x8]
10010a5b:	call   0x1000d7f3
10010a60:	and    DWORD PTR [ebp-0x4],0x0
10010a64:	mov    eax,edi
10010a66:	call   0x1000d853
10010a6b:	push   eax
10010a6c:	lea    ecx,[ebp-0x28]
10010a6f:	call   0x100011cd
10010a74:	lea    eax,[ebp-0x28]
10010a77:	mov    BYTE PTR [ebp-0x4],0x1
10010a7b:	push   eax
10010a7c:	mov    eax,DWORD PTR [esi+0x8]
10010a7f:	mov    esi,DWORD PTR [eax+0x4]
10010a82:	call   0x10007982
10010a87:	push   0x0
10010a89:	push   0x1
10010a8b:	lea    ecx,[ebp-0x28]
10010a8e:	call   0x100012f0
10010a93:	call   0x100025c2
10010a98:	xor    eax,eax
10010a9a:	call   0x10059b0d
10010a9f:	ret    0x8
10010aa2:	push   0x1c
10010aa4:	mov    eax,0x1006040b
10010aa9:	call   0x10059a35
10010aae:	mov    eax,DWORD PTR [ebp+0x8]
10010ab1:	mov    eax,DWORD PTR [eax+0x8]
10010ab4:	test   eax,eax
10010ab6:	jne    0x10010abf
10010ab8:	mov    eax,0x80004005
10010abd:	jmp    0x10010b0b
10010abf:	cmp    DWORD PTR [eax+0x8],0x0
10010ac3:	je     0x10010ab8
10010ac5:	mov    eax,DWORD PTR [eax+0x8]
10010ac8:	lea    ecx,[ebp-0x28]
10010acb:	push   ecx
10010acc:	call   0x10019730
10010ad1:	and    DWORD PTR [ebp-0x4],0x0
10010ad5:	cmp    DWORD PTR [eax+0x18],0x10
10010ad9:	jb     0x10010ae0
10010adb:	mov    eax,DWORD PTR [eax+0x4]
10010ade:	jmp    0x10010ae3
10010ae0:	add    eax,0x4
10010ae3:	push   eax
10010ae4:	lea    edi,[ebp+0x8]
10010ae7:	call   0x10002467
10010aec:	push   0x0
10010aee:	push   0x1
10010af0:	lea    ecx,[ebp-0x28]
10010af3:	call   0x100012f0
10010af8:	mov    eax,edi
10010afa:	call   0x1000d870
10010aff:	mov    ecx,DWORD PTR [ebp+0xc]
10010b02:	mov    DWORD PTR [ecx],eax
10010b04:	call   0x100025c2
10010b09:	xor    eax,eax
10010b0b:	call   0x10059b0d
10010b10:	ret    0x8
10010b13:	push   0x1c
10010b15:	mov    eax,0x10060dbd
10010b1a:	call   0x10059a35
10010b1f:	mov    esi,DWORD PTR [ebp+0x8]
10010b22:	mov    eax,DWORD PTR [esi+0x8]
10010b25:	test   eax,eax
10010b27:	jne    0x10010b30
10010b29:	mov    eax,0x80004005
10010b2e:	jmp    0x10010b7d
10010b30:	cmp    DWORD PTR [eax+0x8],0x0
10010b34:	je     0x10010b29
10010b36:	mov    ecx,DWORD PTR [ebp+0xc]
10010b39:	push   0x1
10010b3b:	lea    edi,[ebp+0x8]
10010b3e:	call   0x1000d7f3
10010b43:	and    DWORD PTR [ebp-0x4],0x0
10010b47:	mov    eax,edi
10010b49:	call   0x1000d853
10010b4e:	push   eax
10010b4f:	lea    ecx,[ebp-0x28]
10010b52:	call   0x100011cd
10010b57:	lea    eax,[ebp-0x28]
10010b5a:	mov    BYTE PTR [ebp-0x4],0x1
10010b5e:	push   eax
10010b5f:	mov    eax,DWORD PTR [esi+0x8]
10010b62:	mov    esi,DWORD PTR [eax+0x8]
10010b65:	call   0x10007982
10010b6a:	push   0x0
10010b6c:	push   0x1
10010b6e:	lea    ecx,[ebp-0x28]
10010b71:	call   0x100012f0
10010b76:	call   0x100025c2
10010b7b:	xor    eax,eax
10010b7d:	call   0x10059b0d
10010b82:	ret    0x8
10010b85:	mov    eax,DWORD PTR [esp+0x4]
10010b89:	push   esi
10010b8a:	mov    esi,DWORD PTR [eax+0xc]
10010b8d:	test   esi,esi
10010b8f:	push   edi
10010b90:	je     0x10010b98
10010b92:	mov    eax,DWORD PTR [esi]
10010b94:	push   esi
10010b95:	call   DWORD PTR [eax+0x4]
10010b98:	mov    eax,DWORD PTR [esp+0x10]
10010b9c:	test   eax,eax
10010b9e:	jne    0x10010ba7
10010ba0:	mov    edi,0x80004003
10010ba5:	jmp    0x10010bb5
10010ba7:	test   esi,esi
10010ba9:	mov    DWORD PTR [eax],esi
10010bab:	je     0x10010bb3
10010bad:	mov    eax,DWORD PTR [esi]
10010baf:	push   esi
10010bb0:	call   DWORD PTR [eax+0x4]
10010bb3:	xor    edi,edi
10010bb5:	test   esi,esi
10010bb7:	je     0x10010bbf
10010bb9:	mov    eax,DWORD PTR [esi]
10010bbb:	push   esi
10010bbc:	call   DWORD PTR [eax+0x8]
10010bbf:	mov    eax,edi
10010bc1:	pop    edi
10010bc2:	pop    esi
10010bc3:	ret    0x8
10010bc6:	mov    eax,DWORD PTR [esp+0x8]
10010bca:	test   eax,eax
10010bcc:	jne    0x10010bd5
10010bce:	mov    eax,0x80004003
10010bd3:	jmp    0x10010bdd
10010bd5:	mov    DWORD PTR [eax],0x1
10010bdb:	xor    eax,eax
10010bdd:	ret    0x8
10010be0:	push   edi
10010be1:	mov    edi,DWORD PTR [esp+0x14]
10010be5:	mov    ecx,0x1007f7f8
10010bea:	call   0x10010455
10010bef:	pop    edi
10010bf0:	ret    0x10
10010bf3:	push   DWORD PTR [esp+0x18]
10010bf7:	mov    eax,0x1007f7f8
10010bfc:	push   DWORD PTR [esp+0x14]
10010c00:	push   DWORD PTR [esp+0x14]
10010c04:	call   0x10010483
10010c09:	ret    0x18
10010c0c:	push   ebp
10010c0d:	mov    ebp,esp
10010c0f:	push   DWORD PTR [ebp+0x28]
10010c12:	mov    eax,0x1007f7f8
10010c17:	push   DWORD PTR [ebp+0x24]
10010c1a:	push   DWORD PTR [ebp+0x20]
10010c1d:	push   DWORD PTR [ebp+0x1c]
10010c20:	push   DWORD PTR [ebp+0x18]
10010c23:	push   DWORD PTR [ebp+0xc]
10010c26:	push   DWORD PTR [ebp+0x8]
10010c29:	call   0x10010526
10010c2e:	pop    ebp
10010c2f:	ret    0x24
10010c32:	mov    DWORD PTR [ecx],0x1006dcf8
10010c38:	mov    DWORD PTR [ecx+0x4],0xc0000001
10010c3f:	mov    ecx,DWORD PTR ds:0x10080c04
10010c45:	mov    eax,DWORD PTR [ecx]
10010c47:	jmp    DWORD PTR [eax+0x8]
10010c4a:	mov    ecx,DWORD PTR [esp+0x4]
10010c4e:	dec    DWORD PTR [ecx+0x4]
10010c51:	push   esi
10010c52:	mov    esi,DWORD PTR [ecx+0x4]
10010c55:	jne    0x10010c62
10010c57:	test   ecx,ecx
10010c59:	je     0x10010c62
10010c5b:	mov    eax,DWORD PTR [ecx]
10010c5d:	push   0x1
10010c5f:	call   DWORD PTR [eax+0x30]
10010c62:	mov    eax,esi
10010c64:	pop    esi
10010c65:	ret    0x4
10010c68:	push   ebx
10010c69:	push   DWORD PTR [esp+0xc]
10010c6d:	mov    ebx,DWORD PTR [esp+0x14]
10010c71:	push   DWORD PTR [esp+0xc]
10010c75:	mov    eax,0x1006dcd4
10010c7a:	call   0x10010334
10010c7f:	pop    ebx
10010c80:	ret    0xc
10010c83:	push   esi
10010c84:	mov    esi,ecx
10010c86:	call   0x10010c32
10010c8b:	test   BYTE PTR [esp+0x8],0x1
10010c90:	je     0x10010c99
10010c92:	push   esi
10010c93:	call   0x10042e92
10010c98:	pop    ecx
10010c99:	mov    eax,esi
10010c9b:	pop    esi
10010c9c:	ret    0x4
10010c9f:	push   esi
10010ca0:	mov    esi,ecx
10010ca2:	cmp    BYTE PTR [esi+0x4],0x0
10010ca6:	je     0x10010cb4
10010ca8:	push   DWORD PTR [esi]
10010caa:	call   DWORD PTR ds:0x100660ec
10010cb0:	mov    BYTE PTR [esi+0x4],0x0
10010cb4:	pop    esi
10010cb5:	ret    
10010cb6:	push   ebp
10010cb7:	mov    ebp,esp
10010cb9:	push   ecx
10010cba:	push   ecx
10010cbb:	mov    ecx,DWORD PTR [ebp+0x8]
10010cbe:	push   ebx
10010cbf:	push   esi
10010cc0:	mov    esi,eax
10010cc2:	mov    eax,DWORD PTR [ecx]
10010cc4:	test   eax,eax
10010cc6:	mov    ebx,DWORD PTR [esi]
10010cc8:	jne    0x10010ce4
10010cca:	test   ebx,ebx
10010ccc:	je     0x10010d32
10010cce:	xor    al,al
10010cd0:	test   al,al
10010cd2:	jne    0x10010d32
10010cd4:	mov    eax,DWORD PTR [esi]
10010cd6:	push   0x1006dd4c
10010cdb:	mov    esi,ecx
10010cdd:	call   0x100102e4
10010ce2:	jmp    0x10010d34
10010ce4:	test   ebx,ebx
10010ce6:	je     0x10010cce
10010ce8:	and    DWORD PTR [ebp-0x4],0x0
10010cec:	and    DWORD PTR [ebp-0x8],0x0
10010cf0:	mov    ecx,DWORD PTR [eax]
10010cf2:	push   edi
10010cf3:	lea    edx,[ebp-0x4]
10010cf6:	push   edx
10010cf7:	mov    edi,0x1006dd2c
10010cfc:	push   edi
10010cfd:	push   eax
10010cfe:	call   DWORD PTR [ecx]
10010d00:	mov    eax,DWORD PTR [ebx]
10010d02:	lea    ecx,[ebp-0x8]
10010d05:	push   ecx
10010d06:	push   edi
10010d07:	push   ebx
10010d08:	call   DWORD PTR [eax]
10010d0a:	mov    eax,DWORD PTR [ebp-0x8]
10010d0d:	cmp    DWORD PTR [ebp-0x4],eax
10010d10:	pop    edi
10010d11:	sete   bl
10010d14:	test   eax,eax
10010d16:	je     0x10010d1e
10010d18:	mov    ecx,DWORD PTR [eax]
10010d1a:	push   eax
10010d1b:	call   DWORD PTR [ecx+0x8]
10010d1e:	mov    eax,DWORD PTR [ebp-0x4]
10010d21:	test   eax,eax
10010d23:	je     0x10010d2b
10010d25:	mov    ecx,DWORD PTR [eax]
10010d27:	push   eax
10010d28:	call   DWORD PTR [ecx+0x8]
10010d2b:	mov    ecx,DWORD PTR [ebp+0x8]
10010d2e:	mov    al,bl
10010d30:	jmp    0x10010cd0
10010d32:	mov    eax,DWORD PTR [ecx]
10010d34:	pop    esi
10010d35:	pop    ebx
10010d36:	leave  
10010d37:	ret    0x4
10010d3a:	push   0xc
10010d3c:	mov    eax,0x1005fc5f
10010d41:	call   0x10059a68
10010d46:	mov    ebx,DWORD PTR [ebp+0x8]
10010d49:	xor    edi,edi
10010d4b:	cmp    ebx,edi
10010d4d:	jne    0x10010d56
10010d4f:	mov    eax,0x80004003
10010d54:	jmp    0x10010dae
10010d56:	push   0xc
10010d58:	mov    DWORD PTR [ebx],edi
10010d5a:	mov    DWORD PTR [ebp-0x14],0x8007000e
10010d61:	mov    DWORD PTR [ebp-0x4],edi
10010d64:	call   0x1004349e
10010d69:	mov    esi,eax
10010d6b:	cmp    esi,edi
10010d6d:	pop    ecx
10010d6e:	je     0x10010d8b
10010d70:	mov    DWORD PTR [esi+0x4],edi
10010d73:	mov    DWORD PTR [esi+0x8],edi
10010d76:	mov    DWORD PTR [esi],0x1006dcf8
10010d7c:	mov    ecx,DWORD PTR ds:0x10080c04
10010d82:	mov    eax,DWORD PTR [ecx]
10010d84:	call   DWORD PTR [eax+0x4]
10010d87:	mov    eax,esi
10010d89:	jmp    0x10010d9c
10010d8b:	xor    eax,eax
10010d8d:	jmp    0x10010d9c
10010d8f:	mov    eax,0x10010d95
10010d94:	ret    
10010d95:	mov    ebx,DWORD PTR [ebp+0x8]
10010d98:	xor    edi,edi
10010d9a:	mov    eax,edi
10010d9c:	cmp    eax,edi
10010d9e:	je     0x10010da9
10010da0:	inc    DWORD PTR [eax+0x4]
10010da3:	dec    DWORD PTR [eax+0x4]
10010da6:	mov    DWORD PTR [ebp-0x14],edi
10010da9:	mov    DWORD PTR [ebx],eax
10010dab:	mov    eax,DWORD PTR [ebp-0x14]
10010dae:	call   0x10059b0d
10010db3:	ret    0x4
10010db6:	push   ebp
10010db7:	mov    ebp,esp
10010db9:	push   ecx
10010dba:	push   ecx
10010dbb:	mov    ecx,DWORD PTR [ebp+0x8]
10010dbe:	push   ebx
10010dbf:	push   esi
10010dc0:	mov    esi,eax
10010dc2:	mov    eax,DWORD PTR [ecx]
10010dc4:	test   eax,eax
10010dc6:	mov    ebx,DWORD PTR [esi]
10010dc8:	jne    0x10010de4
10010dca:	test   ebx,ebx
10010dcc:	je     0x10010e32
10010dce:	xor    al,al
10010dd0:	test   al,al
10010dd2:	jne    0x10010e32
10010dd4:	mov    eax,DWORD PTR [esi]
10010dd6:	push   0x1006dcc4
10010ddb:	mov    esi,ecx
10010ddd:	call   0x100102e4
10010de2:	jmp    0x10010e34
10010de4:	test   ebx,ebx
10010de6:	je     0x10010dce
10010de8:	and    DWORD PTR [ebp-0x4],0x0
10010dec:	and    DWORD PTR [ebp-0x8],0x0
10010df0:	mov    ecx,DWORD PTR [eax]
10010df2:	push   edi
10010df3:	lea    edx,[ebp-0x4]
10010df6:	push   edx
10010df7:	mov    edi,0x1006dd2c
10010dfc:	push   edi
10010dfd:	push   eax
10010dfe:	call   DWORD PTR [ecx]
10010e00:	mov    eax,DWORD PTR [ebx]
10010e02:	lea    ecx,[ebp-0x8]
10010e05:	push   ecx
10010e06:	push   edi
10010e07:	push   ebx
10010e08:	call   DWORD PTR [eax]
10010e0a:	mov    eax,DWORD PTR [ebp-0x8]
10010e0d:	cmp    DWORD PTR [ebp-0x4],eax
10010e10:	pop    edi
10010e11:	sete   bl
10010e14:	test   eax,eax
10010e16:	je     0x10010e1e
10010e18:	mov    ecx,DWORD PTR [eax]
10010e1a:	push   eax
10010e1b:	call   DWORD PTR [ecx+0x8]
10010e1e:	mov    eax,DWORD PTR [ebp-0x4]
10010e21:	test   eax,eax
10010e23:	je     0x10010e2b
10010e25:	mov    ecx,DWORD PTR [eax]
10010e27:	push   eax
10010e28:	call   DWORD PTR [ecx+0x8]
10010e2b:	mov    ecx,DWORD PTR [ebp+0x8]
10010e2e:	mov    al,bl
10010e30:	jmp    0x10010dd0
10010e32:	mov    eax,DWORD PTR [ecx]
10010e34:	pop    esi
10010e35:	pop    ebx
10010e36:	leave  
10010e37:	ret    0x4
10010e3a:	push   edi
10010e3b:	mov    edi,eax
10010e3d:	cmp    edi,esi
10010e3f:	je     0x10010e58
10010e41:	call   0x100025c2
10010e46:	mov    eax,DWORD PTR [esi]
10010e48:	test   eax,eax
10010e4a:	mov    DWORD PTR [edi],eax
10010e4c:	je     0x10010e58
10010e4e:	add    eax,0x8
10010e51:	push   eax
10010e52:	call   DWORD PTR ds:0x100660a4
10010e58:	mov    eax,edi
10010e5a:	pop    edi
10010e5b:	ret    
10010e5c:	push   0x4
10010e5e:	mov    eax,0x1005f66c
10010e63:	call   0x10059a35
10010e68:	mov    edi,ecx
10010e6a:	cmp    DWORD PTR [ebp+0x8],0x0
10010e6e:	je     0x10010e81
10010e70:	mov    eax,DWORD PTR [edi]
10010e72:	test   eax,eax
10010e74:	je     0x10010e7a
10010e76:	mov    eax,DWORD PTR [eax]
10010e78:	jmp    0x10010e7c
10010e7a:	xor    eax,eax
10010e7c:	cmp    eax,DWORD PTR [ebp+0x8]
10010e7f:	je     0x10010ebb
10010e81:	call   0x100025c2
10010e86:	push   0xc
10010e88:	call   0x1004349e
10010e8d:	mov    esi,eax
10010e8f:	pop    ecx
10010e90:	mov    DWORD PTR [ebp-0x10],esi
10010e93:	and    DWORD PTR [ebp-0x4],0x0
10010e97:	test   esi,esi
10010e99:	je     0x10010ea5
10010e9b:	push   DWORD PTR [ebp+0x8]
10010e9e:	call   0x10002602
10010ea3:	jmp    0x10010ea7
10010ea5:	xor    eax,eax
10010ea7:	or     DWORD PTR [ebp-0x4],0xffffffff
10010eab:	test   eax,eax
10010ead:	mov    DWORD PTR [edi],eax
10010eaf:	jne    0x10010ebb
10010eb1:	push   0x8007000e
10010eb6:	call   0x10050b90
10010ebb:	mov    eax,edi
10010ebd:	call   0x10059b0d
10010ec2:	ret    0x4
10010ec5:	push   0x4
10010ec7:	mov    eax,0x1005f66c
10010ecc:	call   0x10059a35
10010ed1:	cmp    DWORD PTR [esi],0x0
10010ed4:	jne    0x10010f09
10010ed6:	push   0xc
10010ed8:	call   0x1004349e
10010edd:	pop    ecx
10010ede:	test   eax,eax
10010ee0:	je     0x10010ef2
10010ee2:	and    DWORD PTR [eax+0x4],0x0
10010ee6:	and    DWORD PTR [eax],0x0
10010ee9:	mov    DWORD PTR [eax+0x8],0x1
10010ef0:	jmp    0x10010ef4
10010ef2:	xor    eax,eax
10010ef4:	or     DWORD PTR [esp+0x1c],0xffffffff
10010ef9:	test   eax,eax
10010efb:	mov    DWORD PTR [esi],eax
10010efd:	jne    0x10010f09
10010eff:	push   0x8007000e
10010f04:	call   0x10050b90
10010f09:	mov    eax,DWORD PTR [esi]
10010f0b:	call   0x10059b0d
10010f10:	ret    
10010f11:	push   0x34
10010f13:	mov    eax,0x10061f66
10010f18:	call   0x10059a9e
10010f1d:	mov    eax,DWORD PTR [ebp+0x8]
10010f20:	xor    ebx,ebx
10010f22:	mov    esi,ecx
10010f24:	mov    DWORD PTR [ebp-0x34],eax
10010f27:	mov    DWORD PTR [ebp-0x40],esi
10010f2a:	mov    DWORD PTR [ebp-0x3c],ebx
10010f2d:	xor    edi,edi
10010f2f:	push   0x1
10010f31:	lea    eax,[ebp-0x30]
10010f34:	push   eax
10010f35:	push   esi
10010f36:	mov    eax,edi
10010f38:	mov    BYTE PTR [ebp-0x30],0x3b
10010f3c:	call   0x1000cfc6
10010f41:	cmp    eax,0xffffffff
10010f44:	mov    DWORD PTR [ebp-0x38],eax
10010f47:	jne    0x10010f4f
10010f49:	mov    eax,DWORD PTR [esi+0x14]
10010f4c:	mov    DWORD PTR [ebp-0x38],eax
10010f4f:	cmp    DWORD PTR [ebp-0x38],edi
10010f52:	jbe    0x10010ffd
10010f58:	push   ebx
10010f59:	lea    ecx,[ebp-0x2c]
10010f5c:	mov    DWORD PTR [ebp-0x14],0xf
10010f63:	call   0x1000141c
10010f68:	mov    DWORD PTR [ebp-0x4],ebx
10010f6b:	jmp    0x10010fa1
10010f6d:	mov    eax,esi
10010f6f:	call   0x10011e07
10010f74:	cmp    BYTE PTR [eax],0x20
10010f77:	je     0x10010fa0
10010f79:	mov    eax,esi
10010f7b:	call   0x10011e07
10010f80:	movsx  eax,BYTE PTR [eax]
10010f83:	push   eax
10010f84:	call   0x10045dd1
10010f89:	pop    ecx
10010f8a:	mov    BYTE PTR [ebp-0x3c],al
10010f8d:	push   DWORD PTR [ebp-0x3c]
10010f90:	xor    ebx,ebx
10010f92:	inc    ebx
10010f93:	lea    esi,[ebp-0x2c]
10010f96:	call   0x1000cf52
10010f9b:	mov    esi,DWORD PTR [ebp-0x40]
10010f9e:	xor    ebx,ebx
10010fa0:	inc    edi
10010fa1:	cmp    edi,DWORD PTR [ebp-0x38]
10010fa4:	jb     0x10010f6d
10010fa6:	push   0x6093dfbe
10010fab:	push   0x1006dd5c
10010fb0:	inc    edi
10010fb1:	call   0x10004246
10010fb6:	push   0x268c4c76
10010fbb:	push   eax
10010fbc:	call   0x10004246
10010fc1:	push   0x6d545a7e
10010fc6:	push   eax
10010fc7:	call   0x10004246
10010fcc:	add    esp,0x18
10010fcf:	push   ebx
10010fd0:	push   eax
10010fd1:	push   0x8
10010fd3:	push   0x1006dd9c
10010fd8:	call   0x10004258
10010fdd:	add    esp,0xc
10010fe0:	push   eax
10010fe1:	lea    eax,[ebp-0x2c]
10010fe4:	push   eax
10010fe5:	call   0x1000c8c0
10010fea:	test   eax,eax
10010fec:	lea    ecx,[ebp-0x2c]
10010fef:	je     0x1001101c
10010ff1:	or     DWORD PTR [ebp-0x4],0xffffffff
10010ff5:	push   ebx
10010ff6:	push   0x1
10010ff8:	call   0x100012f0
10010ffd:	cmp    edi,DWORD PTR [esi+0x14]
10011000:	jb     0x10010f2f
10011006:	mov    ecx,DWORD PTR [ebp-0x34]
10011009:	push   0x1006cd08
1001100e:	call   0x100011cd
10011013:	mov    eax,DWORD PTR [ebp-0x34]
10011016:	call   0x10059b21
1001101b:	ret    
1001101c:	push   0x8
1001101e:	push   ebx
1001101f:	call   0x100013ad
10011024:	mov    ecx,DWORD PTR [ebp-0x34]
10011027:	lea    eax,[ebp-0x2c]
1001102a:	push   eax
1001102b:	call   0x100011a7
10011030:	push   ebx
10011031:	push   0x1
10011033:	lea    ecx,[ebp-0x2c]
10011036:	call   0x100012f0
1001103b:	jmp    0x10011013
1001103d:	push   0x3c
1001103f:	mov    eax,0x10061f43
10011044:	call   0x10059a35
10011049:	mov    edi,ecx
1001104b:	push   0x43987bc8
10011050:	push   0x1006ddb0
10011055:	call   0x10004246
1001105a:	push   eax
1001105b:	push   0x10
1001105d:	push   0x1006dde4
10011062:	call   0x10004258
10011067:	add    esp,0x14
1001106a:	push   eax
1001106b:	lea    ecx,[ebp-0x28]
1001106e:	call   0x100011cd
10011073:	xor    ebx,ebx
10011075:	push   ebx
10011076:	lea    eax,[ebp-0x28]
10011079:	push   eax
1001107a:	lea    eax,[ebp-0x44]
1001107d:	push   eax
1001107e:	mov    eax,DWORD PTR [ebp+0x8]
10011081:	mov    DWORD PTR [ebp-0x4],ebx
10011084:	mov    eax,DWORD PTR [eax+0x34]
10011087:	add    eax,0x20
1001108a:	call   0x100084cc
1001108f:	push   0x1006dda8
10011094:	mov    esi,eax
10011096:	mov    BYTE PTR [ebp-0x4],0x1
1001109a:	call   0x1000658e
1001109f:	pop    ecx
100110a0:	push   ebx
100110a1:	push   0x1
100110a3:	lea    ecx,[ebp-0x44]
100110a6:	mov    BYTE PTR [ebp+0xb],al
100110a9:	call   0x100012f0
100110ae:	or     DWORD PTR [ebp-0x4],0xffffffff
100110b2:	push   ebx
100110b3:	push   0x1
100110b5:	lea    ecx,[ebp-0x28]
100110b8:	call   0x100012f0
100110bd:	cmp    BYTE PTR [ebp+0xb],bl
100110c0:	je     0x100110ea
100110c2:	push   DWORD PTR [ebp+0x14]
100110c5:	lea    eax,[ebp+0x10]
100110c8:	push   DWORD PTR [ebp+0x10]
100110cb:	push   DWORD PTR [ebp+0xc]
100110ce:	push   eax
100110cf:	call   0x1002f500
100110d4:	add    esp,0x10
100110d7:	push   eax
100110d8:	call   0x10002099
100110dd:	push   DWORD PTR [ebp+0x10]
100110e0:	call   0x10042e92
100110e5:	mov    eax,DWORD PTR [edi]
100110e7:	pop    ecx
100110e8:	jmp    0x100110f5
100110ea:	mov    eax,DWORD PTR [ebp+0x10]
100110ed:	mov    ecx,DWORD PTR [ebp+0x14]
100110f0:	mov    DWORD PTR [ecx],eax
100110f2:	mov    eax,DWORD PTR [ebp+0xc]
100110f5:	call   0x10059b0d
100110fa:	ret    0x10
100110fd:	xor    ecx,ecx
100110ff:	cmp    DWORD PTR [esp+0x8],ecx
10011103:	je     0x10011117
10011105:	mov    eax,DWORD PTR [esp+0x4]
10011109:	lea    eax,[eax+ecx*2]
1001110c:	rol    WORD PTR [eax],0x8
10011110:	inc    ecx
10011111:	cmp    ecx,DWORD PTR [esp+0x8]
10011115:	jne    0x10011105
10011117:	ret    
10011118:	push   0x14
1001111a:	mov    eax,0x100603e8
1001111f:	call   0x10059a35
10011124:	mov    edi,DWORD PTR ds:0x1006608c
1001112a:	xor    esi,esi
1001112c:	push   esi
1001112d:	push   esi
1001112e:	push   DWORD PTR [ebp+0x14]
10011131:	push   DWORD PTR [ebp+0x10]
10011134:	push   0x8
10011136:	push   DWORD PTR [ebp+0xc]
10011139:	call   edi
1001113b:	mov    ebx,eax
1001113d:	cmp    ebx,esi
1001113f:	je     0x100111de
10011145:	lea    eax,[ebp-0x10]
10011148:	mov    DWORD PTR [ebp-0x10],esi
1001114b:	push   eax
1001114c:	mov    eax,ebx
1001114e:	lea    esi,[ebp-0x20]
10011151:	call   0x10011e51
10011156:	and    DWORD PTR [ebp-0x4],0x0
1001115a:	mov    esi,DWORD PTR [ebp-0x1c]
1001115d:	test   esi,esi
1001115f:	je     0x1001116a
10011161:	mov    eax,DWORD PTR [ebp-0x18]
10011164:	sub    eax,esi
10011166:	sar    eax,1
10011168:	jne    0x1001116f
1001116a:	call   0x100433b0
1001116f:	push   ebx
10011170:	push   esi
10011171:	push   DWORD PTR [ebp+0x14]
10011174:	push   DWORD PTR [ebp+0x10]
10011177:	push   0x8
10011179:	push   DWORD PTR [ebp+0xc]
1001117c:	call   edi
1001117e:	cmp    eax,ebx
10011180:	jne    0x100111d3
10011182:	test   esi,esi
10011184:	je     0x1001118f
10011186:	mov    eax,DWORD PTR [ebp-0x18]
10011189:	sub    eax,esi
1001118b:	sar    eax,1
1001118d:	jne    0x10011194
1001118f:	call   0x100433b0
10011194:	push   0x0
10011196:	push   ebx
10011197:	push   esi
10011198:	call   DWORD PTR ds:0x1006629c
1001119e:	mov    ecx,eax
100111a0:	lea    edi,[ebp+0x14]
100111a3:	call   0x1000d7f3
100111a8:	mov    ebx,DWORD PTR [ebp+0x8]
100111ab:	mov    esi,eax
100111ad:	lea    eax,[ebx+0x30]
100111b0:	call   0x10010e3a
100111b5:	call   0x100025c2
100111ba:	cmp    DWORD PTR [ebp-0x1c],0x0
100111be:	mov    eax,DWORD PTR [ebp+0xc]
100111c1:	mov    DWORD PTR [ebx+0x24],eax
100111c4:	je     0x100111cf
100111c6:	push   DWORD PTR [ebp-0x1c]
100111c9:	call   0x10042e92
100111ce:	pop    ecx
100111cf:	mov    al,0x1
100111d1:	jmp    0x100111e0
100111d3:	test   esi,esi
100111d5:	je     0x100111de
100111d7:	push   esi
100111d8:	call   0x10042e92
100111dd:	pop    ecx
100111de:	xor    al,al
100111e0:	call   0x10059b0d
100111e5:	ret    0x10
100111e8:	push   0x8
100111ea:	mov    eax,0x1005f86a
100111ef:	call   0x10059a35
100111f4:	mov    ebx,ecx
100111f6:	test   bl,0x1
100111f9:	je     0x10011202
100111fb:	xor    al,al
100111fd:	jmp    0x10011291
10011202:	xor    edi,edi
10011204:	mov    DWORD PTR [ebp-0x10],edi
10011207:	cmp    DWORD PTR [ebp+0xc],0x4b1
1001120e:	mov    DWORD PTR [ebp-0x4],edi
10011211:	mov    esi,DWORD PTR [ebp+0x10]
10011214:	jne    0x10011258
10011216:	mov    eax,ebx
10011218:	shr    eax,1
1001121a:	xor    ecx,ecx
1001121c:	push   0x2
1001121e:	pop    edx
1001121f:	mov    DWORD PTR [ebp-0x14],eax
10011222:	mul    edx
10011224:	seto   cl
10011227:	neg    ecx
10011229:	or     ecx,eax
1001122b:	push   ecx
1001122c:	call   0x10043721
10011231:	mov    esi,eax
10011233:	cmp    esi,edi
10011235:	pop    ecx
10011236:	je     0x1001123f
10011238:	push   edi
10011239:	call   0x10042e92
1001123e:	pop    ecx
1001123f:	push   ebx
10011240:	push   DWORD PTR [ebp+0x10]
10011243:	mov    DWORD PTR [ebp-0x10],esi
10011246:	push   esi
10011247:	call   0x10045180
1001124c:	push   DWORD PTR [ebp-0x14]
1001124f:	push   esi
10011250:	call   0x100110fd
10011255:	add    esp,0x14
10011258:	push   0x0
1001125a:	shr    ebx,1
1001125c:	push   ebx
1001125d:	push   esi
1001125e:	call   DWORD PTR ds:0x1006629c
10011264:	mov    ecx,eax
10011266:	lea    edi,[ebp+0x10]
10011269:	call   0x1000d7f3
1001126e:	mov    ebx,DWORD PTR [ebp+0x8]
10011271:	mov    esi,eax
10011273:	lea    eax,[ebx+0x30]
10011276:	call   0x10010e3a
1001127b:	call   0x100025c2
10011280:	mov    eax,DWORD PTR [ebp+0xc]
10011283:	push   DWORD PTR [ebp-0x10]
10011286:	mov    DWORD PTR [ebx+0x24],eax
10011289:	call   0x10042e92
1001128e:	pop    ecx
1001128f:	mov    al,0x1
10011291:	call   0x10059b0d
10011296:	ret    0xc
10011299:	mov    cl,BYTE PTR [eax]
1001129b:	cmp    cl,0xff
1001129e:	jne    0x100112b2
100112a0:	cmp    BYTE PTR [eax+0x1],0xfe
100112a4:	jne    0x100112b2
100112a6:	mov    eax,0x4b0
100112ab:	mov    DWORD PTR [edx],0x2
100112b1:	ret    
100112b2:	cmp    cl,0xfe
100112b5:	jne    0x100112c4
100112b7:	cmp    BYTE PTR [eax+0x1],0xff
100112bb:	jne    0x100112c4
100112bd:	mov    eax,0x4b1
100112c2:	jmp    0x100112ab
100112c4:	and    DWORD PTR [edx],0x0
100112c7:	xor    eax,eax
100112c9:	ret    
100112ca:	push   0x14
100112cc:	mov    eax,0x10062c5c
100112d1:	call   0x10059a35
100112d6:	xor    esi,esi
100112d8:	mov    DWORD PTR [ebp-0x18],esi
100112db:	mov    DWORD PTR [ebp-0x4],esi
100112de:	mov    eax,DWORD PTR [edi+0x34]
100112e1:	mov    eax,DWORD PTR [eax+0xc]
100112e4:	cmp    DWORD PTR [eax+0x1c],0x10
100112e8:	mov    ecx,DWORD PTR [eax+0x18]
100112eb:	mov    DWORD PTR [ebp-0x10],esi
100112ee:	jb     0x100112f5
100112f0:	mov    eax,DWORD PTR [eax+0x8]
100112f3:	jmp    0x100112f8
100112f5:	add    eax,0x8
100112f8:	lea    edx,[ebp-0x10]
100112fb:	push   edx
100112fc:	push   ecx
100112fd:	push   eax
100112fe:	push   edi
100112ff:	lea    ecx,[ebp-0x18]
10011302:	call   0x1001103d
10011307:	cmp    eax,esi
10011309:	mov    DWORD PTR [ebp-0x14],eax
1001130c:	je     0x10011504
10011312:	or     DWORD PTR [edi+0x28],0xffffffff
10011316:	mov    eax,DWORD PTR [edi+0x34]
10011319:	mov    eax,DWORD PTR [eax+0xc]
1001131c:	cmp    DWORD PTR [eax+0x18],esi
1001131f:	je     0x10011504
10011325:	push   0x9aad78a
1001132a:	push   0x2d5dbac4
1001132f:	push   0x1006ddf8
10011334:	call   0x10004246
10011339:	pop    ecx
1001133a:	pop    ecx
1001133b:	push   eax
1001133c:	call   0x10004246
10011341:	push   eax
10011342:	push   0x5
10011344:	push   0x1006de1c
10011349:	lea    esi,[edi+0x8]
1001134c:	call   0x10004258
10011351:	add    esp,0x14
10011354:	push   eax
10011355:	call   0x1000658e
1001135a:	test   al,al
1001135c:	pop    ecx
1001135d:	je     0x10011375
1001135f:	push   DWORD PTR [ebp-0x10]
10011362:	push   DWORD PTR [ebp-0x14]
10011365:	push   0xfde9
1001136a:	push   edi
1001136b:	call   0x10011118
10011370:	jmp    0x100114f9
10011375:	push   0x7c7f57ee
1001137a:	push   0x1006de24
1001137f:	call   0x10004246
10011384:	push   eax
10011385:	push   0x6
10011387:	push   0x1006de4c
1001138c:	call   0x10004258
10011391:	add    esp,0x14
10011394:	push   eax
10011395:	call   0x1000658e
1001139a:	test   al,al
1001139c:	pop    ecx
1001139d:	mov    ebx,0x1006dec0
100113a2:	jne    0x10011462
100113a8:	push   0x163ab0c2
100113ad:	push   0x1006de54
100113b2:	call   0x10004246
100113b7:	push   eax
100113b8:	push   0x8
100113ba:	push   0x1006de90
100113bf:	call   0x10004258
100113c4:	add    esp,0x14
100113c7:	push   eax
100113c8:	call   0x1000658e
100113cd:	test   al,al
100113cf:	pop    ecx
100113d0:	jne    0x10011462
100113d6:	push   0x1006de9c
100113db:	push   0x8
100113dd:	push   ebx
100113de:	call   0x10004258
100113e3:	add    esp,0xc
100113e6:	push   eax
100113e7:	call   0x1000658e
100113ec:	test   al,al
100113ee:	pop    ecx
100113ef:	jne    0x10011462
100113f1:	push   0x1006cd08
100113f6:	call   0x1000658e
100113fb:	test   al,al
100113fd:	pop    ecx
100113fe:	push   DWORD PTR [ebp-0x10]
10011401:	push   DWORD PTR [ebp-0x14]
10011404:	je     0x10011446
10011406:	push   0xfde9
1001140b:	push   edi
1001140c:	call   0x10011118
10011411:	test   al,al
10011413:	je     0x10011421
10011415:	mov    DWORD PTR [edi+0x28],0x2
1001141c:	jmp    0x10011504
10011421:	push   DWORD PTR [ebp-0x10]
10011424:	push   DWORD PTR [ebp-0x14]
10011427:	push   0x6faf
1001142c:	push   edi
1001142d:	call   0x10011118
10011432:	test   al,al
10011434:	je     0x10011504
1001143a:	mov    DWORD PTR [edi+0x28],0x1
10011441:	jmp    0x10011504
10011446:	push   0x6faf
1001144b:	push   edi
1001144c:	call   0x10011118
10011451:	test   al,al
10011453:	je     0x10011504
10011459:	and    DWORD PTR [edi+0x28],0x0
1001145d:	jmp    0x10011504
10011462:	and    DWORD PTR [ebp-0x1c],0x0
10011466:	cmp    DWORD PTR [ebp-0x10],0x2
1001146a:	jb     0x1001148c
1001146c:	mov    eax,DWORD PTR [ebp-0x14]
1001146f:	lea    edx,[ebp-0x1c]
10011472:	call   0x10011299
10011477:	test   eax,eax
10011479:	je     0x1001148c
1001147b:	mov    edx,DWORD PTR [ebp-0x1c]
1001147e:	mov    ecx,DWORD PTR [ebp-0x10]
10011481:	mov    esi,DWORD PTR [ebp-0x14]
10011484:	sub    ecx,edx
10011486:	add    edx,esi
10011488:	push   edx
10011489:	push   eax
1001148a:	jmp    0x100114f3
1001148c:	push   0x3836c3b4
10011491:	push   0x4c9d862a
10011496:	push   0x1006decc
1001149b:	call   0x10004246
100114a0:	pop    ecx
100114a1:	pop    ecx
100114a2:	push   eax
100114a3:	call   0x10004246
100114a8:	push   eax
100114a9:	push   0x8
100114ab:	push   ebx
100114ac:	call   0x10004258
100114b1:	add    esp,0x14
100114b4:	push   eax
100114b5:	call   0x1000658e
100114ba:	test   al,al
100114bc:	pop    ecx
100114bd:	je     0x100114c9
100114bf:	push   DWORD PTR [ebp-0x14]
100114c2:	push   0x4b0
100114c7:	jmp    0x100114f0
100114c9:	push   0x1006def8
100114ce:	push   0x8
100114d0:	push   0x1006de90
100114d5:	call   0x10004258
100114da:	add    esp,0xc
100114dd:	push   eax
100114de:	call   0x1000658e
100114e3:	test   al,al
100114e5:	pop    ecx
100114e6:	je     0x10011504
100114e8:	push   DWORD PTR [ebp-0x14]
100114eb:	push   0x4b1
100114f0:	mov    ecx,DWORD PTR [ebp-0x10]
100114f3:	push   edi
100114f4:	call   0x100111e8
100114f9:	test   al,al
100114fb:	je     0x10011504
100114fd:	mov    DWORD PTR [edi+0x28],0x3
10011504:	push   DWORD PTR [ebp-0x18]
10011507:	call   0x10042e92
1001150c:	pop    ecx
1001150d:	call   0x10059b0d
10011512:	ret    
10011513:	push   0x0
10011515:	push   0x4f0b5962
1001151a:	push   0x1006df2c
1001151f:	call   0x10004246
10011524:	push   eax
10011525:	push   0x5
10011527:	push   0x1006df58
1001152c:	call   0x10004258
10011531:	add    esp,0x14
10011534:	push   eax
10011535:	push   esi
10011536:	call   0x1000c8c0
1001153b:	cmp    eax,0xffffffff
1001153e:	jne    0x10011613
10011544:	push   0x0
10011546:	push   0x5fc0b610
1001154b:	push   0x3f9f918c
10011550:	push   0x67d20ee8
10011555:	push   0x1006df60
1001155a:	call   0x10004246
1001155f:	pop    ecx
10011560:	pop    ecx
10011561:	push   eax
10011562:	call   0x10004246
10011567:	pop    ecx
10011568:	pop    ecx
10011569:	push   eax
1001156a:	call   0x10004246
1001156f:	push   eax
10011570:	push   0x16
10011572:	push   0x1006df94
10011577:	call   0x10004258
1001157c:	add    esp,0x14
1001157f:	push   eax
10011580:	push   esi
10011581:	call   0x1000c8c0
10011586:	cmp    eax,0xffffffff
10011589:	jne    0x10011613
1001158f:	push   0x0
10011591:	push   0x285abec
10011596:	push   0x1006dfac
1001159b:	call   0x10004246
100115a0:	push   eax
100115a1:	push   0x18
100115a3:	push   0x1006dfe0
100115a8:	call   0x10004258
100115ad:	add    esp,0x14
100115b0:	push   eax
100115b1:	push   esi
100115b2:	call   0x1000c8c0
100115b7:	cmp    eax,0xffffffff
100115ba:	jne    0x10011613
100115bc:	push   0x0
100115be:	push   0x78c2fd82
100115c3:	push   0x1a5a7ca8
100115c8:	push   0x6eff55e6
100115cd:	push   0x39e83f7c
100115d2:	push   0x1006dffc
100115d7:	call   0x10004246
100115dc:	pop    ecx
100115dd:	pop    ecx
100115de:	push   eax
100115df:	call   0x10004246
100115e4:	pop    ecx
100115e5:	pop    ecx
100115e6:	push   eax
100115e7:	call   0x10004246
100115ec:	pop    ecx
100115ed:	pop    ecx
100115ee:	push   eax
100115ef:	call   0x10004246
100115f4:	push   eax
100115f5:	push   0x16
100115f7:	push   0x1006e020
100115fc:	call   0x10004258
10011601:	add    esp,0x14
10011604:	push   eax
10011605:	push   esi
10011606:	call   0x1000c8c0
1001160b:	cmp    eax,0xffffffff
1001160e:	jne    0x10011613
10011610:	xor    al,al
10011612:	ret    
10011613:	mov    al,0x1
10011615:	ret    
10011616:	push   ebp
10011617:	mov    ebp,esp
10011619:	and    esp,0xfffffff8
1001161c:	push   0xffffffff
1001161e:	push   0x10063608
10011623:	mov    eax,fs:0x0
10011629:	push   eax
1001162a:	sub    esp,0x84
10011630:	mov    eax,ds:0x1007e030
10011635:	xor    eax,esp
10011637:	mov    DWORD PTR [esp+0x7c],eax
1001163b:	push   esi
1001163c:	push   edi
1001163d:	mov    eax,ds:0x1007e030
10011642:	xor    eax,esp
10011644:	push   eax
10011645:	lea    eax,[esp+0x90]
1001164c:	mov    fs:0x0,eax
10011652:	lea    eax,[esp+0x10]
10011656:	mov    edi,ecx
10011658:	push   eax
10011659:	mov    DWORD PTR [ebx+0x34],edi
1001165c:	call   0x10010d3a
10011661:	test   eax,eax
10011663:	jl     0x10011796
10011669:	mov    esi,DWORD PTR [esp+0x10]
1001166d:	test   esi,esi
1001166f:	mov    DWORD PTR [esp+0x10],esi
10011673:	je     0x1001167b
10011675:	mov    eax,DWORD PTR [esi]
10011677:	push   esi
10011678:	call   DWORD PTR [eax+0x4]
1001167b:	lea    eax,[ebx+0x38]
1001167e:	push   eax
1001167f:	lea    eax,[esp+0x14]
10011683:	call   0x10010db6
10011688:	test   esi,esi
1001168a:	je     0x10011692
1001168c:	mov    eax,DWORD PTR [esi]
1001168e:	push   esi
1001168f:	call   DWORD PTR [eax+0x8]
10011692:	lea    eax,[edi+0x20]
10011695:	push   0x1006cd08
1001169a:	lea    edi,[esp+0x14]
1001169e:	mov    DWORD PTR [esp+0x18],eax
100116a2:	mov    DWORD PTR [esi+0x8],eax
100116a5:	call   0x10002467
100116aa:	mov    esi,eax
100116ac:	lea    eax,[ebx+0x30]
100116af:	call   0x10010e3a
100116b4:	call   0x100025c2
100116b9:	push   0x1006e038
100116be:	push   0xc
100116c0:	push   0x1006e074
100116c5:	call   0x10004258
100116ca:	add    esp,0xc
100116cd:	push   eax
100116ce:	lea    ecx,[esp+0x1c]
100116d2:	call   0x100011cd
100116d7:	xor    edi,edi
100116d9:	push   edi
100116da:	lea    eax,[esp+0x1c]
100116de:	push   eax
100116df:	lea    eax,[esp+0x74]
100116e3:	push   eax
100116e4:	mov    DWORD PTR [esp+0xa4],edi
100116eb:	mov    eax,DWORD PTR [ebx+0x34]
100116ee:	add    eax,0x20
100116f1:	call   0x100084cc
100116f6:	push   edi
100116f7:	push   0x1
100116f9:	lea    ecx,[esp+0x20]
100116fd:	mov    BYTE PTR [esp+0xa0],0x2
10011705:	call   0x100012f0
1001170a:	push   0x1006cd08
1001170f:	lea    esi,[esp+0x70]
10011713:	call   0x1000658e
10011718:	test   al,al
1001171a:	pop    ecx
1001171b:	jne    0x1001178a
1001171d:	call   0x10011513
10011722:	test   al,al
10011724:	je     0x1001178a
10011726:	push   edi
10011727:	mov    eax,esi
10011729:	push   eax
1001172a:	lea    eax,[esp+0x3c]
1001172e:	push   eax
1001172f:	mov    eax,DWORD PTR [esp+0x20]
10011733:	call   0x100084cc
10011738:	lea    ecx,[esp+0x50]
1001173c:	push   ecx
1001173d:	mov    ecx,eax
1001173f:	mov    BYTE PTR [esp+0x9c],0x3
10011747:	call   0x10010f11
1001174c:	pop    ecx
1001174d:	push   0xffffffff
1001174f:	push   edi
10011750:	push   eax
10011751:	lea    ecx,[ebx+0x8]
10011754:	mov    BYTE PTR [esp+0xa4],0x4
1001175c:	call   0x10001241
10011761:	push   edi
10011762:	push   0x1
10011764:	lea    ecx,[esp+0x58]
10011768:	call   0x100012f0
1001176d:	push   edi
1001176e:	push   0x1
10011770:	lea    ecx,[esp+0x3c]
10011774:	mov    BYTE PTR [esp+0xa0],0x2
1001177c:	call   0x100012f0
10011781:	mov    edi,ebx
10011783:	call   0x100112ca
10011788:	xor    edi,edi
1001178a:	push   edi
1001178b:	push   0x1
1001178d:	lea    ecx,[esp+0x74]
10011791:	call   0x100012f0
10011796:	mov    ecx,DWORD PTR [esp+0x90]
1001179d:	mov    DWORD PTR fs:0x0,ecx
100117a4:	pop    ecx
100117a5:	pop    edi
100117a6:	pop    esi
100117a7:	mov    ecx,DWORD PTR [esp+0x7c]
100117ab:	xor    ecx,esp
100117ad:	call   0x10042e97
100117b2:	mov    esp,ebp
100117b4:	pop    ebp
100117b5:	ret    
100117b6:	push   0x3c
100117b8:	mov    eax,0x10061f18
100117bd:	call   0x10059a35
100117c2:	push   0x2d485be4
100117c7:	xor    ebx,ebx
100117c9:	push   0x1006e0c8
100117ce:	mov    DWORD PTR [ebp-0x10],ebx
100117d1:	call   0x10004246
100117d6:	push   eax
100117d7:	push   0x10
100117d9:	push   0x1006dde4
100117de:	call   0x10004258
100117e3:	add    esp,0x14
100117e6:	push   eax
100117e7:	lea    ecx,[ebp-0x2c]
100117ea:	call   0x100011cd
100117ef:	push   ebx
100117f0:	lea    eax,[ebp-0x2c]
100117f3:	push   eax
100117f4:	lea    eax,[ebp-0x48]
100117f7:	push   eax
100117f8:	mov    DWORD PTR [ebp-0x4],ebx
100117fb:	mov    eax,DWORD PTR [ebp+0x8]
100117fe:	mov    eax,DWORD PTR [eax+0x34]
10011801:	add    eax,0x20
10011804:	call   0x100084cc
10011809:	mov    esi,eax
1001180b:	push   0x52c2f4b2
10011810:	push   0x1006e084
10011815:	mov    BYTE PTR [ebp-0x4],0x1
10011819:	call   0x10004246
1001181e:	push   0x64a4e7b4
10011823:	push   eax
10011824:	call   0x10004246
10011829:	push   eax
1001182a:	push   0x4
1001182c:	push   0x1006e0c0
10011831:	call   0x10004258
10011836:	add    esp,0x1c
10011839:	push   eax
1001183a:	call   0x1000658e
1001183f:	pop    ecx
10011840:	push   ebx
10011841:	push   0x1
10011843:	lea    ecx,[ebp-0x48]
10011846:	mov    BYTE PTR [ebp+0xb],al
10011849:	call   0x100012f0
1001184e:	or     DWORD PTR [ebp-0x4],0xffffffff
10011852:	push   ebx
10011853:	push   0x1
10011855:	lea    ecx,[ebp-0x2c]
10011858:	call   0x100012f0
1001185d:	cmp    BYTE PTR [ebp+0xb],bl
10011860:	je     0x100118a4
10011862:	mov    ecx,DWORD PTR [ebp+0x14]
10011865:	mov    edx,DWORD PTR [ebp+0x10]
10011868:	lea    eax,[ebp+0x8]
1001186b:	lea    esi,[ebp+0x14]
1001186e:	mov    DWORD PTR [ebp+0x8],ebx
10011871:	call   0x1002f910
10011876:	mov    ecx,DWORD PTR [eax]
10011878:	mov    edi,ecx
1001187a:	mov    DWORD PTR [eax],ebx
1001187c:	mov    DWORD PTR [ebp+0x10],edi
1001187f:	mov    DWORD PTR [ebp-0x4],0x2
10011886:	push   DWORD PTR [ebp+0x14]
10011889:	call   0x10042e92
1001188e:	mov    esi,DWORD PTR [ebp+0xc]
10011891:	pop    ecx
10011892:	push   DWORD PTR [ebp+0x8]
10011895:	push   edi
10011896:	call   0x1000406c
1001189b:	push   edi
1001189c:	call   0x10042e92
100118a1:	pop    ecx
100118a2:	jmp    0x100118b2
100118a4:	push   DWORD PTR [ebp+0x14]
100118a7:	mov    esi,DWORD PTR [ebp+0xc]
100118aa:	push   DWORD PTR [ebp+0x10]
100118ad:	call   0x1000406c
100118b2:	mov    eax,esi
100118b4:	call   0x10059b0d
100118b9:	ret    0x10
100118bc:	push   0x34
100118be:	mov    eax,0x10062c39
100118c3:	call   0x10059a35
100118c8:	lea    edi,[ebx+0x30]
100118cb:	mov    esi,edi
100118cd:	call   0x10010ec5
100118d2:	xor    esi,esi
100118d4:	push   esi
100118d5:	push   esi
100118d6:	push   esi
100118d7:	mov    DWORD PTR [ebp-0x14],eax
100118da:	push   esi
100118db:	mov    eax,edi
100118dd:	call   0x100025ab
100118e2:	push   eax
100118e3:	mov    eax,DWORD PTR [ebp-0x14]
100118e6:	push   DWORD PTR [eax]
100118e8:	push   esi
100118e9:	push   DWORD PTR [ebx+0x24]
100118ec:	call   DWORD PTR ds:0x100660b8
100118f2:	mov    edi,eax
100118f4:	cmp    edi,esi
100118f6:	je     0x1001198d
100118fc:	lea    eax,[ebp-0xd]
100118ff:	push   eax
10011900:	lea    esi,[ebp-0x24]
10011903:	mov    BYTE PTR [ebp-0xd],0x0
10011907:	call   0x10011ea8
1001190c:	and    DWORD PTR [ebp-0x4],0x0
10011910:	lea    esi,[ebx+0x30]
10011913:	call   0x10010ec5
10011918:	mov    DWORD PTR [ebp-0x14],eax
1001191b:	xor    eax,eax
1001191d:	push   eax
1001191e:	push   eax
1001191f:	push   edi
10011920:	push   eax
10011921:	lea    esi,[ebp-0x24]
10011924:	call   0x10011e30
10011929:	push   eax
1001192a:	lea    eax,[ebx+0x30]
1001192d:	call   0x100025ab
10011932:	push   eax
10011933:	mov    eax,DWORD PTR [ebp-0x14]
10011936:	push   DWORD PTR [eax]
10011938:	xor    esi,esi
1001193a:	push   esi
1001193b:	push   DWORD PTR [ebx+0x24]
1001193e:	call   DWORD PTR ds:0x100660b8
10011944:	cmp    eax,edi
10011946:	je     0x1001194d
10011948:	cmp    DWORD PTR [ebp-0x20],esi
1001194b:	jmp    0x10011982
1001194d:	push   edi
1001194e:	push   esi
1001194f:	lea    esi,[ebp-0x24]
10011952:	call   0x10011e30
10011957:	push   eax
10011958:	lea    eax,[ebp-0x40]
1001195b:	push   eax
1001195c:	push   ebx
1001195d:	call   0x100117b6
10011962:	mov    BYTE PTR [ebp-0x4],0x1
10011966:	push   eax
10011967:	mov    eax,DWORD PTR [ebx+0x34]
1001196a:	mov    esi,DWORD PTR [eax+0xc]
1001196d:	call   0x10007982
10011972:	push   0x0
10011974:	push   0x1
10011976:	lea    ecx,[ebp-0x40]
10011979:	call   0x100012f0
1001197e:	cmp    DWORD PTR [ebp-0x20],0x0
10011982:	je     0x1001198d
10011984:	push   DWORD PTR [ebp-0x20]
10011987:	call   0x10042e92
1001198c:	pop    ecx
1001198d:	call   0x10059b0d
10011992:	ret    
10011993:	push   0x44
10011995:	mov    eax,0x10060df0
1001199a:	call   0x10059a35
1001199f:	mov    eax,DWORD PTR [ebx+0x34]
100119a2:	mov    eax,DWORD PTR [eax+0xc]
100119a5:	and    DWORD PTR [ebp-0x18],0x0
100119a9:	cmp    DWORD PTR [eax+0x1c],0x10
100119ad:	mov    ecx,DWORD PTR [eax+0x18]
100119b0:	jb     0x100119b7
100119b2:	mov    eax,DWORD PTR [eax+0x8]
100119b5:	jmp    0x100119ba
100119b7:	add    eax,0x8
100119ba:	cmp    ecx,0x2
100119bd:	jb     0x100119c7
100119bf:	lea    edx,[ebp-0x18]
100119c2:	call   0x10011299
100119c7:	cmp    DWORD PTR [ebx+0x24],0x4b0
100119ce:	jne    0x10011a15
100119d0:	cmp    DWORD PTR [ebp-0x18],0x0
100119d4:	jne    0x10011a15
100119d6:	lea    esi,[ebx+0x30]
100119d9:	call   0x10010ec5
100119de:	mov    edi,eax
100119e0:	mov    eax,esi
100119e2:	call   0x100025ab
100119e7:	add    eax,eax
100119e9:	push   eax
100119ea:	push   DWORD PTR [edi]
100119ec:	lea    esi,[ebp-0x34]
100119ef:	call   0x1000406c
100119f4:	and    DWORD PTR [ebp-0x4],0x0
100119f8:	push   eax
100119f9:	mov    eax,DWORD PTR [ebx+0x34]
100119fc:	mov    esi,DWORD PTR [eax+0xc]
100119ff:	call   0x10007982
10011a04:	push   0x0
10011a06:	push   0x1
10011a08:	lea    ecx,[ebp-0x34]
10011a0b:	call   0x100012f0
10011a10:	jmp    0x10011afc
10011a15:	lea    eax,[ebx+0x30]
10011a18:	call   0x100025ab
10011a1d:	mov    ecx,DWORD PTR [ebp-0x18]
10011a20:	lea    edi,[ecx+eax*2]
10011a23:	lea    eax,[ebp-0x11]
10011a26:	push   eax
10011a27:	lea    esi,[ebp-0x28]
10011a2a:	mov    BYTE PTR [ebp-0x11],0x0
10011a2e:	call   0x10011ea8
10011a33:	mov    DWORD PTR [ebp-0x4],0x1
10011a3a:	mov    edi,DWORD PTR [ebp-0x18]
10011a3d:	test   edi,edi
10011a3f:	je     0x10011a6a
10011a41:	mov    eax,DWORD PTR [ebx+0x34]
10011a44:	mov    eax,DWORD PTR [eax+0xc]
10011a47:	cmp    DWORD PTR [eax+0x1c],0x10
10011a4b:	jb     0x10011a52
10011a4d:	mov    eax,DWORD PTR [eax+0x8]
10011a50:	jmp    0x10011a55
10011a52:	add    eax,0x8
10011a55:	push   edi
10011a56:	push   eax
10011a57:	push   0x0
10011a59:	lea    esi,[ebp-0x28]
10011a5c:	call   0x10011e30
10011a61:	push   eax
10011a62:	call   0x10045180
10011a67:	add    esp,0xc
10011a6a:	lea    esi,[ebx+0x30]
10011a6d:	call   0x10010ec5
10011a72:	mov    esi,eax
10011a74:	lea    eax,[ebx+0x30]
10011a77:	call   0x100025ab
10011a7c:	add    eax,eax
10011a7e:	push   eax
10011a7f:	push   DWORD PTR [esi]
10011a81:	lea    esi,[ebp-0x28]
10011a84:	push   edi
10011a85:	call   0x10011e30
10011a8a:	push   eax
10011a8b:	call   0x10045180
10011a90:	add    esp,0xc
10011a93:	cmp    DWORD PTR [ebx+0x24],0x4b1
10011a9a:	jne    0x10011ab3
10011a9c:	lea    eax,[ebx+0x30]
10011a9f:	call   0x100025ab
10011aa4:	push   eax
10011aa5:	push   edi
10011aa6:	call   0x10011e30
10011aab:	push   eax
10011aac:	call   0x100110fd
10011ab1:	pop    ecx
10011ab2:	pop    ecx
10011ab3:	lea    eax,[ebx+0x30]
10011ab6:	call   0x100025ab
10011abb:	lea    eax,[edi+eax*2]
10011abe:	push   eax
10011abf:	xor    edi,edi
10011ac1:	push   edi
10011ac2:	lea    esi,[ebp-0x28]
10011ac5:	call   0x10011e30
10011aca:	push   eax
10011acb:	lea    esi,[ebp-0x50]
10011ace:	call   0x1000406c
10011ad3:	mov    BYTE PTR [ebp-0x4],0x2
10011ad7:	push   eax
10011ad8:	mov    eax,DWORD PTR [ebx+0x34]
10011adb:	mov    esi,DWORD PTR [eax+0xc]
10011ade:	call   0x10007982
10011ae3:	push   edi
10011ae4:	push   0x1
10011ae6:	lea    ecx,[ebp-0x50]
10011ae9:	call   0x100012f0
10011aee:	cmp    DWORD PTR [ebp-0x24],edi
10011af1:	je     0x10011afc
10011af3:	push   DWORD PTR [ebp-0x24]
10011af6:	call   0x10042e92
10011afb:	pop    ecx
10011afc:	call   0x10059b0d
10011b01:	ret    
10011b02:	push   ebp
10011b03:	mov    ebp,esp
10011b05:	and    esp,0xfffffff8
10011b08:	push   ecx
10011b09:	push   ebx
10011b0a:	mov    ebx,eax
10011b0c:	cmp    BYTE PTR [ebx+0x2c],0x0
10011b10:	je     0x10011b2f
10011b12:	mov    eax,DWORD PTR [ebx+0x24]
10011b15:	cmp    eax,0x4b1
10011b1a:	je     0x10011b2a
10011b1c:	cmp    eax,0x4b0
10011b21:	je     0x10011b2a
10011b23:	call   0x100118bc
10011b28:	jmp    0x10011b2f
10011b2a:	call   0x10011993
10011b2f:	pop    ebx
10011b30:	mov    esp,ebp
10011b32:	pop    ebp
10011b33:	ret    
10011b34:	push   ebp
10011b35:	mov    ebp,esp
10011b37:	mov    eax,DWORD PTR [ebp+0x8]
10011b3a:	mov    eax,DWORD PTR [eax+0x34]
10011b3d:	test   eax,eax
10011b3f:	jne    0x10011b48
10011b41:	mov    eax,0x80004005
10011b46:	jmp    0x10011b7a
10011b48:	mov    eax,DWORD PTR [eax]
10011b4a:	test   eax,eax
10011b4c:	je     0x10011b41
10011b4e:	cmp    DWORD PTR [eax+0x1c],0x10
10011b52:	jb     0x10011b59
10011b54:	mov    eax,DWORD PTR [eax+0x8]
10011b57:	jmp    0x10011b5c
10011b59:	add    eax,0x8
10011b5c:	push   edi
10011b5d:	push   eax
10011b5e:	lea    edi,[ebp+0x8]
10011b61:	call   0x10002467
10011b66:	mov    eax,edi
10011b68:	call   0x1000d870
10011b6d:	mov    ecx,DWORD PTR [ebp+0xc]
10011b70:	mov    DWORD PTR [ecx],eax
10011b72:	call   0x100025c2
10011b77:	xor    eax,eax
10011b79:	pop    edi
10011b7a:	pop    ebp
10011b7b:	ret    0x8
10011b7e:	push   0x1c
10011b80:	mov    eax,0x10060dbd
10011b85:	call   0x10059a35
10011b8a:	mov    esi,DWORD PTR [ebp+0x8]
10011b8d:	mov    eax,DWORD PTR [esi+0x34]
10011b90:	test   eax,eax
10011b92:	jne    0x10011b9b
10011b94:	mov    eax,0x80004005
10011b99:	jmp    0x10011be6
10011b9b:	cmp    DWORD PTR [eax],0x0
10011b9e:	je     0x10011b94
10011ba0:	mov    ecx,DWORD PTR [ebp+0xc]
10011ba3:	push   0x1
10011ba5:	lea    edi,[ebp+0x8]
10011ba8:	call   0x1000d7f3
10011bad:	and    DWORD PTR [ebp-0x4],0x0
10011bb1:	mov    eax,edi
10011bb3:	call   0x1000d853
10011bb8:	push   eax
10011bb9:	lea    ecx,[ebp-0x28]
10011bbc:	call   0x100011cd
10011bc1:	lea    eax,[ebp-0x28]
10011bc4:	mov    BYTE PTR [ebp-0x4],0x1
10011bc8:	push   eax
10011bc9:	mov    eax,DWORD PTR [esi+0x34]
10011bcc:	mov    esi,DWORD PTR [eax]
10011bce:	call   0x10007982
10011bd3:	push   0x0
10011bd5:	push   0x1
10011bd7:	lea    ecx,[ebp-0x28]
10011bda:	call   0x100012f0
10011bdf:	call   0x100025c2
10011be4:	xor    eax,eax
10011be6:	call   0x10059b0d
10011beb:	ret    0x8
10011bee:	push   ebp
10011bef:	mov    ebp,esp
10011bf1:	mov    eax,DWORD PTR [ebp+0x8]
10011bf4:	mov    eax,DWORD PTR [eax+0x34]
10011bf7:	test   eax,eax
10011bf9:	jne    0x10011c02
10011bfb:	mov    eax,0x80004005
10011c00:	jmp    0x10011c35
10011c02:	mov    eax,DWORD PTR [eax+0x4]
10011c05:	test   eax,eax
10011c07:	je     0x10011bfb
10011c09:	cmp    DWORD PTR [eax+0x1c],0x10
10011c0d:	jb     0x10011c14
10011c0f:	mov    eax,DWORD PTR [eax+0x8]
10011c12:	jmp    0x10011c17
10011c14:	add    eax,0x8
10011c17:	push   edi
10011c18:	push   eax
10011c19:	lea    edi,[ebp+0x8]
10011c1c:	call   0x10002467
10011c21:	mov    eax,edi
10011c23:	call   0x1000d870
10011c28:	mov    ecx,DWORD PTR [ebp+0xc]
10011c2b:	mov    DWORD PTR [ecx],eax
10011c2d:	call   0x100025c2
10011c32:	xor    eax,eax
10011c34:	pop    edi
10011c35:	pop    ebp
10011c36:	ret    0x8
10011c39:	push   0x1c
10011c3b:	mov    eax,0x10060dbd
10011c40:	call   0x10059a35
10011c45:	mov    esi,DWORD PTR [ebp+0x8]
10011c48:	mov    eax,DWORD PTR [esi+0x34]
10011c4b:	test   eax,eax
10011c4d:	jne    0x10011c56
10011c4f:	mov    eax,0x80004005
10011c54:	jmp    0x10011ca3
10011c56:	cmp    DWORD PTR [eax+0x4],0x0
10011c5a:	je     0x10011c4f
10011c5c:	mov    ecx,DWORD PTR [ebp+0xc]
10011c5f:	push   0x1
10011c61:	lea    edi,[ebp+0x8]
10011c64:	call   0x1000d7f3
10011c69:	and    DWORD PTR [ebp-0x4],0x0
10011c6d:	mov    eax,edi
10011c6f:	call   0x1000d853
10011c74:	push   eax
10011c75:	lea    ecx,[ebp-0x28]
10011c78:	call   0x100011cd
10011c7d:	lea    eax,[ebp-0x28]
10011c80:	mov    BYTE PTR [ebp-0x4],0x1
10011c84:	push   eax
10011c85:	mov    eax,DWORD PTR [esi+0x34]
10011c88:	mov    esi,DWORD PTR [eax+0x4]
10011c8b:	call   0x10007982
10011c90:	push   0x0
10011c92:	push   0x1
10011c94:	lea    ecx,[ebp-0x28]
10011c97:	call   0x100012f0
10011c9c:	call   0x100025c2
10011ca1:	xor    eax,eax
10011ca3:	call   0x10059b0d
10011ca8:	ret    0x8
10011cab:	push   ebp
10011cac:	mov    ebp,esp
10011cae:	mov    eax,DWORD PTR [ebp+0x8]
10011cb1:	mov    eax,DWORD PTR [eax+0x34]
10011cb4:	test   eax,eax
10011cb6:	jne    0x10011cbf
10011cb8:	mov    eax,0x80004005
10011cbd:	jmp    0x10011cf2
10011cbf:	mov    eax,DWORD PTR [eax+0x8]
10011cc2:	test   eax,eax
10011cc4:	je     0x10011cb8
10011cc6:	cmp    DWORD PTR [eax+0x1c],0x10
10011cca:	jb     0x10011cd1
10011ccc:	mov    eax,DWORD PTR [eax+0x8]
10011ccf:	jmp    0x10011cd4
10011cd1:	add    eax,0x8
10011cd4:	push   edi
10011cd5:	push   eax
10011cd6:	lea    edi,[ebp+0x8]
10011cd9:	call   0x10002467
10011cde:	mov    eax,edi
10011ce0:	call   0x1000d870
10011ce5:	mov    ecx,DWORD PTR [ebp+0xc]
10011ce8:	mov    DWORD PTR [ecx],eax
10011cea:	call   0x100025c2
10011cef:	xor    eax,eax
10011cf1:	pop    edi
10011cf2:	pop    ebp
10011cf3:	ret    0x8
10011cf6:	push   0x1c
10011cf8:	mov    eax,0x10060dbd
10011cfd:	call   0x10059a35
10011d02:	mov    esi,DWORD PTR [ebp+0x8]
10011d05:	mov    eax,DWORD PTR [esi+0x34]
10011d08:	test   eax,eax
10011d0a:	jne    0x10011d13
10011d0c:	mov    eax,0x80004005
10011d11:	jmp    0x10011d60
10011d13:	cmp    DWORD PTR [eax+0x8],0x0
10011d17:	je     0x10011d0c
10011d19:	mov    ecx,DWORD PTR [ebp+0xc]
10011d1c:	push   0x1
10011d1e:	lea    edi,[ebp+0x8]
10011d21:	call   0x1000d7f3
10011d26:	and    DWORD PTR [ebp-0x4],0x0
10011d2a:	mov    eax,edi
10011d2c:	call   0x1000d853
10011d31:	push   eax
10011d32:	lea    ecx,[ebp-0x28]
10011d35:	call   0x100011cd
10011d3a:	lea    eax,[ebp-0x28]
10011d3d:	mov    BYTE PTR [ebp-0x4],0x1
10011d41:	push   eax
10011d42:	mov    eax,DWORD PTR [esi+0x34]
10011d45:	mov    esi,DWORD PTR [eax+0x8]
10011d48:	call   0x10007982
10011d4d:	push   0x0
10011d4f:	push   0x1
10011d51:	lea    ecx,[ebp-0x28]
10011d54:	call   0x100012f0
10011d59:	call   0x100025c2
10011d5e:	xor    eax,eax
10011d60:	call   0x10059b0d
10011d65:	ret    0x8
10011d68:	push   ebp
10011d69:	mov    ebp,esp
10011d6b:	mov    eax,DWORD PTR [ebp+0x8]
10011d6e:	mov    eax,DWORD PTR [eax+0x30]
10011d71:	test   eax,eax
10011d73:	je     0x10011d79
10011d75:	mov    eax,DWORD PTR [eax]
10011d77:	jmp    0x10011d7b
10011d79:	xor    eax,eax
10011d7b:	push   edi
10011d7c:	push   0x1
10011d7e:	mov    ecx,eax
10011d80:	lea    edi,[ebp+0x8]
10011d83:	call   0x1000d7f3
10011d88:	mov    eax,edi
10011d8a:	call   0x1000d870
10011d8f:	mov    ecx,DWORD PTR [ebp+0xc]
10011d92:	mov    DWORD PTR [ecx],eax
10011d94:	call   0x100025c2
10011d99:	xor    eax,eax
10011d9b:	pop    edi
10011d9c:	pop    ebp
10011d9d:	ret    0x8
10011da0:	mov    eax,DWORD PTR [esp+0x4]
10011da4:	push   DWORD PTR [esp+0x8]
10011da8:	lea    ecx,[eax+0x30]
10011dab:	mov    BYTE PTR [eax+0x2c],0x1
10011daf:	call   0x10010e5c
10011db4:	xor    eax,eax
10011db6:	ret    0x8
10011db9:	mov    ecx,DWORD PTR [esp+0x8]
10011dbd:	test   ecx,ecx
10011dbf:	mov    eax,DWORD PTR [esp+0x4]
10011dc3:	jne    0x10011dcc
10011dc5:	mov    eax,0x80004003
10011dca:	jmp    0x10011de0
10011dcc:	mov    edx,DWORD PTR [eax+0x38]
10011dcf:	mov    DWORD PTR [ecx],edx
10011dd1:	mov    eax,DWORD PTR [eax+0x38]
10011dd4:	test   eax,eax
10011dd6:	je     0x10011dde
10011dd8:	mov    ecx,DWORD PTR [eax]
10011dda:	push   eax
10011ddb:	call   DWORD PTR [ecx+0x4]
10011dde:	xor    eax,eax
10011de0:	ret    0x8
10011de3:	mov    eax,DWORD PTR [esp+0x4]
10011de7:	mov    eax,DWORD PTR [eax+0x24]
10011dea:	mov    ecx,DWORD PTR [esp+0x8]
10011dee:	mov    DWORD PTR [ecx],eax
10011df0:	xor    eax,eax
10011df2:	ret    0x8
10011df5:	mov    eax,DWORD PTR [esp+0x4]
10011df9:	mov    eax,DWORD PTR [eax+0x28]
10011dfc:	mov    ecx,DWORD PTR [esp+0x8]
10011e00:	mov    DWORD PTR [ecx],eax
10011e02:	xor    eax,eax
10011e04:	ret    0x8
10011e07:	push   esi
10011e08:	mov    esi,eax
10011e0a:	cmp    edi,DWORD PTR [esi+0x14]
10011e0d:	jbe    0x10011e14
10011e0f:	call   0x100433b0
10011e14:	cmp    DWORD PTR [esi+0x18],0x10
10011e18:	jb     0x10011e1f
10011e1a:	mov    esi,DWORD PTR [esi+0x4]
10011e1d:	jmp    0x10011e22
10011e1f:	add    esi,0x4
10011e22:	lea    eax,[esi+edi*1]
10011e25:	pop    esi
10011e26:	ret    
10011e27:	push   DWORD PTR [eax]
10011e29:	call   0x10042e92
10011e2e:	pop    ecx
10011e2f:	ret    
10011e30:	mov    ecx,DWORD PTR [esi+0x4]
10011e33:	test   ecx,ecx
10011e35:	je     0x10011e42
10011e37:	mov    eax,DWORD PTR [esi+0x8]
10011e3a:	sub    eax,ecx
10011e3c:	cmp    DWORD PTR [esp+0x4],eax
10011e40:	jb     0x10011e47
10011e42:	call   0x100433b0
10011e47:	mov    eax,DWORD PTR [esi+0x4]
10011e4a:	add    eax,DWORD PTR [esp+0x4]
10011e4e:	ret    0x4
10011e51:	push   edi
10011e52:	mov    edi,eax
10011e54:	xor    eax,eax
10011e56:	cmp    edi,eax
10011e58:	mov    DWORD PTR [esi+0x4],eax
10011e5b:	mov    DWORD PTR [esi+0x8],eax
10011e5e:	mov    DWORD PTR [esi+0xc],eax
10011e61:	je     0x10011ea4
10011e63:	cmp    edi,0x7fffffff
10011e69:	jbe    0x10011e70
10011e6b:	call   0x1000a740
10011e70:	mov    ecx,edi
10011e72:	call   0x10006012
10011e77:	test   edi,edi
10011e79:	lea    ecx,[edi+edi*1]
10011e7c:	lea    edx,[ecx+eax*1]
10011e7f:	mov    DWORD PTR [esi+0xc],edx
10011e82:	mov    DWORD PTR [esi+0x4],eax
10011e85:	mov    DWORD PTR [esi+0x8],eax
10011e88:	mov    edx,eax
10011e8a:	jbe    0x10011e9f
10011e8c:	push   ebx
10011e8d:	mov    ebx,DWORD PTR [esp+0xc]
10011e91:	mov    bx,WORD PTR [ebx]
10011e94:	mov    WORD PTR [edx],bx
10011e97:	dec    edi
10011e98:	inc    edx
10011e99:	inc    edx
10011e9a:	test   edi,edi
10011e9c:	ja     0x10011e8d
10011e9e:	pop    ebx
10011e9f:	add    ecx,eax
10011ea1:	mov    DWORD PTR [esi+0x8],ecx
10011ea4:	pop    edi
10011ea5:	ret    0x4
10011ea8:	push   ebp
10011ea9:	mov    ebp,esp
10011eab:	push   ecx
10011eac:	push   ebx
10011ead:	xor    ebx,ebx
10011eaf:	cmp    edi,ebx
10011eb1:	mov    DWORD PTR [esi+0x4],ebx
10011eb4:	mov    DWORD PTR [esi+0x8],ebx
10011eb7:	mov    DWORD PTR [esi+0xc],ebx
10011eba:	je     0x10011ef9
10011ebc:	cmp    edi,0xffffffff
10011ebf:	jbe    0x10011ec6
10011ec1:	call   0x1000a740
10011ec6:	push   ebx
10011ec7:	push   edi
10011ec8:	call   0x10001ebe
10011ecd:	cmp    edi,ebx
10011ecf:	pop    ecx
10011ed0:	pop    ecx
10011ed1:	lea    ecx,[eax+edi*1]
10011ed4:	mov    DWORD PTR [esi+0xc],ecx
10011ed7:	mov    DWORD PTR [esi+0x4],eax
10011eda:	mov    DWORD PTR [esi+0x8],eax
10011edd:	mov    DWORD PTR [ebp-0x4],edi
10011ee0:	mov    ecx,eax
10011ee2:	jbe    0x10011ef4
10011ee4:	mov    edx,DWORD PTR [ebp+0x8]
10011ee7:	mov    dl,BYTE PTR [edx]
10011ee9:	dec    DWORD PTR [ebp-0x4]
10011eec:	mov    BYTE PTR [ecx],dl
10011eee:	inc    ecx
10011eef:	cmp    DWORD PTR [ebp-0x4],ebx
10011ef2:	ja     0x10011ee4
10011ef4:	add    eax,edi
10011ef6:	mov    DWORD PTR [esi+0x8],eax
10011ef9:	pop    ebx
10011efa:	leave  
10011efb:	ret    0x4
10011efe:	push   esi
10011eff:	mov    esi,DWORD PTR [eax]
10011f01:	test   esi,esi
10011f03:	je     0x10011f33
10011f05:	mov    eax,DWORD PTR [esi]
10011f07:	test   eax,eax
10011f09:	je     0x10011f2d
10011f0b:	push   eax
10011f0c:	call   DWORD PTR ds:0x100662a0
10011f12:	push   eax
10011f13:	push   DWORD PTR [esi]
10011f15:	call   DWORD PTR ds:0x100662a8
10011f1b:	mov    esi,eax
10011f1d:	test   esi,esi
10011f1f:	jne    0x10011f2f
10011f21:	push   0x8007000e
10011f26:	call   0x10050b90
10011f2b:	jmp    0x10011f2f
10011f2d:	xor    esi,esi
10011f2f:	mov    eax,esi
10011f31:	pop    esi
10011f32:	ret    
10011f33:	xor    eax,eax
10011f35:	pop    esi
10011f36:	ret    
10011f37:	push   0x4
10011f39:	mov    eax,0x1005f66c
10011f3e:	call   0x10059a35
10011f43:	mov    edi,ecx
10011f45:	call   0x100025c2
10011f4a:	push   0xc
10011f4c:	call   0x1004349e
10011f51:	pop    ecx
10011f52:	test   eax,eax
10011f54:	je     0x10011f66
10011f56:	and    DWORD PTR [eax+0x4],0x0
10011f5a:	and    DWORD PTR [eax],0x0
10011f5d:	mov    DWORD PTR [eax+0x8],0x1
10011f64:	jmp    0x10011f68
10011f66:	xor    eax,eax
10011f68:	or     DWORD PTR [esp+0x1c],0xffffffff
10011f6d:	test   eax,eax
10011f6f:	mov    DWORD PTR [edi],eax
10011f71:	jne    0x10011f7d
10011f73:	push   0x8007000e
10011f78:	call   0x10050b90
10011f7d:	mov    eax,DWORD PTR [edi]
10011f7f:	call   0x10059b0d
10011f84:	ret    
10011f85:	push   0x8c
10011f8a:	mov    eax,0x10062c01
10011f8f:	call   0x10059ad4
10011f94:	mov    esi,DWORD PTR [ebp+0x8]
10011f97:	mov    ebx,DWORD PTR [ebp+0xc]
10011f9a:	mov    eax,DWORD PTR [esi+0xc]
10011f9d:	push   ebx
10011f9e:	push   eax
10011f9f:	call   DWORD PTR ds:0x10080c54
10011fa5:	xor    edi,edi
10011fa7:	cmp    eax,edi
10011fa9:	mov    DWORD PTR [ebp-0x60],eax
10011fac:	jl     0x10012150
10011fb2:	mov    DWORD PTR [ebp-0x4],edi
10011fb5:	mov    DWORD PTR [ebp-0x58],edi
10011fb8:	lea    ecx,[ebp-0x58]
10011fbb:	push   ecx
10011fbc:	mov    BYTE PTR [ebp-0x4],0x1
10011fc0:	mov    eax,DWORD PTR [esi]
10011fc2:	push   esi
10011fc3:	call   DWORD PTR [eax+0x94]
10011fc9:	cmp    eax,edi
10011fcb:	jge    0x10011fdb
10011fcd:	mov    BYTE PTR [ebp-0x4],0x0
10011fd1:	mov    eax,DWORD PTR [ebp-0x58]
10011fd4:	cmp    eax,edi
10011fd6:	jmp    0x10012145
10011fdb:	mov    esi,DWORD PTR [ebp-0x58]
10011fde:	cmp    esi,edi
10011fe0:	je     0x1001214d
10011fe6:	mov    DWORD PTR [ebp-0x5c],edi
10011fe9:	lea    ecx,[ebp-0x5c]
10011fec:	mov    BYTE PTR [ebp-0x4],0x2
10011ff0:	call   0x10011f37
10011ff5:	mov    ecx,DWORD PTR [esi]
10011ff7:	push   eax
10011ff8:	push   esi
10011ff9:	call   DWORD PTR [ecx+0x20]
10011ffc:	cmp    eax,edi
10011ffe:	jl     0x10012134
10012004:	lea    eax,[ebp-0x5c]
10012007:	call   0x1000d853
1001200c:	push   eax
1001200d:	lea    ecx,[ebp-0x30]
10012010:	call   0x100011cd
10012015:	push   0x10
10012017:	mov    BYTE PTR [ebp-0x4],0x3
1001201b:	mov    eax,DWORD PTR [ebp-0x2c]
1001201e:	pop    esi
1001201f:	cmp    DWORD PTR [ebp-0x18],esi
10012022:	jae    0x10012027
10012024:	lea    eax,[ebp-0x2c]
10012027:	push   eax
10012028:	call   0x10002080
1001202d:	pop    ecx
1001202e:	lea    eax,[ebp-0x50]
10012031:	push   eax
10012032:	push   0x10080ee8
10012037:	lea    ecx,[ebp-0x30]
1001203a:	call   0x1001986b
1001203f:	lea    edi,[ebp-0x50]
10012042:	mov    BYTE PTR [ebp-0x4],0x4
10012046:	call   0x10019710
1001204b:	test   al,al
1001204d:	jne    0x1001211c
10012053:	mov    eax,DWORD PTR [ebp-0x50]
10012056:	dec    eax
10012057:	je     0x1001208d
10012059:	dec    eax
1001205a:	jne    0x1001211c
10012060:	cmp    DWORD PTR [ebp-0x18],esi
10012063:	mov    eax,DWORD PTR [ebp-0x2c]
10012066:	jae    0x1001206b
10012068:	lea    eax,[ebp-0x2c]
1001206b:	push   eax
1001206c:	call   0x10002080
10012071:	pop    ecx
10012072:	push   DWORD PTR [ebx]
10012074:	call   DWORD PTR ds:0x100662b4
1001207a:	push   0x1006cd08
1001207f:	lea    edi,[ebp-0x54]
10012082:	call   0x10002467
10012087:	mov    BYTE PTR [ebp-0x4],0x8
1001208b:	jmp    0x1001210a
1001208d:	lea    eax,[ebp-0x7c]
10012090:	push   eax
10012091:	lea    eax,[ebp-0x50]
10012094:	call   0x10019730
10012099:	cmp    DWORD PTR [ebp-0x18],esi
1001209c:	mov    ecx,DWORD PTR [ebp-0x2c]
1001209f:	jae    0x100120a4
100120a1:	lea    ecx,[ebp-0x2c]
100120a4:	cmp    DWORD PTR [eax+0x18],esi
100120a7:	jb     0x100120ae
100120a9:	mov    eax,DWORD PTR [eax+0x4]
100120ac:	jmp    0x100120b1
100120ae:	add    eax,0x4
100120b1:	push   ecx
100120b2:	push   eax
100120b3:	call   0x10002080
100120b8:	pop    ecx
100120b9:	pop    ecx
100120ba:	push   0x0
100120bc:	push   0x1
100120be:	lea    ecx,[ebp-0x7c]
100120c1:	call   0x100012f0
100120c6:	push   DWORD PTR [ebx]
100120c8:	call   DWORD PTR ds:0x100662b4
100120ce:	lea    eax,[ebp-0x98]
100120d4:	push   eax
100120d5:	lea    eax,[ebp-0x50]
100120d8:	call   0x10019730
100120dd:	mov    BYTE PTR [ebp-0x4],0x5
100120e1:	cmp    DWORD PTR [eax+0x18],esi
100120e4:	jb     0x100120eb
100120e6:	mov    eax,DWORD PTR [eax+0x4]
100120e9:	jmp    0x100120ee
100120eb:	add    eax,0x4
100120ee:	push   eax
100120ef:	lea    edi,[ebp-0x54]
100120f2:	call   0x10002467
100120f7:	push   0x0
100120f9:	push   0x1
100120fb:	lea    ecx,[ebp-0x98]
10012101:	mov    BYTE PTR [ebp-0x4],0x7
10012105:	call   0x100012f0
1001210a:	lea    eax,[ebp-0x54]
1001210d:	call   0x10011efe
10012112:	lea    edi,[ebp-0x54]
10012115:	mov    DWORD PTR [ebx],eax
10012117:	call   0x100025c2
1001211c:	push   0x0
1001211e:	push   0x1
10012120:	lea    ecx,[ebp-0x4c]
10012123:	call   0x100012f0
10012128:	push   0x0
1001212a:	push   0x1
1001212c:	lea    ecx,[ebp-0x30]
1001212f:	call   0x100012f0
10012134:	lea    edi,[ebp-0x5c]
10012137:	call   0x100025c2
1001213c:	mov    BYTE PTR [ebp-0x4],0x0
10012140:	mov    eax,DWORD PTR [ebp-0x58]
10012143:	test   eax,eax
10012145:	je     0x1001214d
10012147:	mov    ecx,DWORD PTR [eax]
10012149:	push   eax
1001214a:	call   DWORD PTR [ecx+0x8]
1001214d:	mov    eax,DWORD PTR [ebp-0x60]
10012150:	call   0x10059b30
10012155:	ret    0x8
10012158:	push   0x8
1001215a:	call   0x10037980
1001215f:	pop    ecx
10012160:	mov    eax,0x1001214d
10012165:	ret    
10012166:	mov    DWORD PTR [esp+0x4],eax
1001216a:	jmp    0x10011f85
1001216f:	push   ebp
10012170:	mov    ebp,esp
10012172:	sub    esp,0x1c
10012175:	and    DWORD PTR [ebp-0x1c],0x0
10012179:	push   edi
1001217a:	push   0x6
1001217c:	pop    ecx
1001217d:	xor    eax,eax
1001217f:	lea    edi,[ebp-0x18]
10012182:	rep stos DWORD PTR es:[edi],eax
10012184:	push   esi
10012185:	lea    eax,[ebp-0x1c]
10012188:	push   eax
10012189:	push   ebx
1001218a:	call   DWORD PTR ds:0x100660f4
10012190:	test   eax,eax
10012192:	pop    edi
10012193:	jne    0x10012199
10012195:	xor    al,al
10012197:	leave  
10012198:	ret    
10012199:	cmp    DWORD PTR [ebp-0xc],0x10000
100121a0:	je     0x10012195
100121a2:	mov    eax,DWORD PTR [ebp-0x1c]
100121a5:	mov    ecx,DWORD PTR [ebp-0x10]
100121a8:	add    ecx,eax
100121aa:	lea    eax,[ebx+esi*1]
100121ad:	cmp    ecx,eax
100121af:	jb     0x10012195
100121b1:	push   esi
100121b2:	push   DWORD PTR [ebp+0x8]
100121b5:	push   ebx
100121b6:	call   0x10043726
100121bb:	add    esp,0xc
100121be:	neg    eax
100121c0:	sbb    al,al
100121c2:	inc    al
100121c4:	leave  
100121c5:	ret    
100121c6:	push   ebp
100121c7:	mov    ebp,esp
100121c9:	sub    esp,0x40
100121cc:	mov    eax,ds:0x1007e030
100121d1:	xor    eax,ebp
100121d3:	mov    DWORD PTR [ebp-0x4],eax
100121d6:	xor    al,al
100121d8:	push   ebx
100121d9:	push   esi
100121da:	mov    BYTE PTR [ebp-0x38],al
100121dd:	mov    BYTE PTR [ebp-0x37],al
100121e0:	mov    BYTE PTR [ebp-0x36],al
100121e3:	mov    BYTE PTR [ebp-0x28],al
100121e6:	mov    BYTE PTR [ebp-0x27],al
100121e9:	mov    BYTE PTR [ebp-0x26],al
100121ec:	mov    BYTE PTR [ebp-0x17],al
100121ef:	mov    BYTE PTR [ebp-0x9],al
100121f2:	mov    BYTE PTR [ebp-0x8],al
100121f5:	mov    BYTE PTR [ebp-0x7],al
100121f8:	lea    eax,[ebp-0x40]
100121fb:	push   eax
100121fc:	push   0x1d
100121fe:	mov    ebx,ecx
10012200:	pop    esi
10012201:	mov    BYTE PTR [ebp-0x40],0x8b
10012205:	mov    BYTE PTR [ebp-0x3f],0x44
10012209:	mov    BYTE PTR [ebp-0x3e],0x24
1001220d:	mov    BYTE PTR [ebp-0x3d],0x4
10012211:	mov    BYTE PTR [ebp-0x3c],0xc7
10012215:	mov    BYTE PTR [ebp-0x3b],0x40
10012219:	mov    BYTE PTR [ebp-0x3a],0x20
1001221d:	mov    BYTE PTR [ebp-0x39],0x24
10012221:	mov    BYTE PTR [ebp-0x35],0x8b
10012225:	mov    BYTE PTR [ebp-0x34],0x48
10012229:	mov    BYTE PTR [ebp-0x33],0xc
1001222d:	mov    BYTE PTR [ebp-0x32],0x89
10012231:	mov    BYTE PTR [ebp-0x31],0x4c
10012235:	mov    BYTE PTR [ebp-0x30],0x24
10012239:	mov    BYTE PTR [ebp-0x2f],0x4
1001223d:	mov    BYTE PTR [ebp-0x2e],0x8b
10012241:	mov    BYTE PTR [ebp-0x2d],0x48
10012245:	mov    BYTE PTR [ebp-0x2c],0x10
10012249:	mov    BYTE PTR [ebp-0x2b],0x8b
1001224d:	mov    BYTE PTR [ebp-0x2a],0x89
10012251:	mov    BYTE PTR [ebp-0x29],0x90
10012255:	mov    BYTE PTR [ebp-0x25],0xff
10012259:	mov    BYTE PTR [ebp-0x24],0xe1
1001225d:	mov    BYTE PTR [ebp-0x20],0x8b
10012261:	mov    BYTE PTR [ebp-0x1f],0x44
10012265:	mov    BYTE PTR [ebp-0x1e],0x24
10012269:	mov    BYTE PTR [ebp-0x1d],0x4
1001226d:	mov    BYTE PTR [ebp-0x1c],0x66
10012271:	mov    BYTE PTR [ebp-0x1b],0xc7
10012275:	mov    BYTE PTR [ebp-0x1a],0x40
10012279:	mov    BYTE PTR [ebp-0x19],0x20
1001227d:	mov    BYTE PTR [ebp-0x18],0x24
10012281:	mov    BYTE PTR [ebp-0x16],0x8b
10012285:	mov    BYTE PTR [ebp-0x15],0x48
10012289:	mov    BYTE PTR [ebp-0x14],0xc
1001228d:	mov    BYTE PTR [ebp-0x13],0x89
10012291:	mov    BYTE PTR [ebp-0x12],0x4c
10012295:	mov    BYTE PTR [ebp-0x11],0x24
10012299:	mov    BYTE PTR [ebp-0x10],0x4
1001229d:	mov    BYTE PTR [ebp-0xf],0x8b
100122a1:	mov    BYTE PTR [ebp-0xe],0x48
100122a5:	mov    BYTE PTR [ebp-0xd],0x10
100122a9:	mov    BYTE PTR [ebp-0xc],0x8b
100122ad:	mov    BYTE PTR [ebp-0xb],0x89
100122b1:	mov    BYTE PTR [ebp-0xa],0x90
100122b5:	mov    BYTE PTR [ebp-0x6],0xff
100122b9:	mov    BYTE PTR [ebp-0x5],0xe1
100122bd:	call   0x1001216f
100122c2:	test   al,al
100122c4:	pop    ecx
100122c5:	jne    0x100122dc
100122c7:	lea    eax,[ebp-0x20]
100122ca:	push   eax
100122cb:	push   0x1c
100122cd:	pop    esi
100122ce:	call   0x1001216f
100122d3:	test   al,al
100122d5:	pop    ecx
100122d6:	jne    0x100122dc
100122d8:	xor    eax,eax
100122da:	jmp    0x100122df
100122dc:	xor    eax,eax
100122de:	inc    eax
100122df:	mov    ecx,DWORD PTR [ebp-0x4]
100122e2:	pop    esi
100122e3:	xor    ecx,ebp
100122e5:	pop    ebx
100122e6:	call   0x10042e97
100122eb:	leave  
100122ec:	ret    
100122ed:	push   ebp
100122ee:	mov    ebp,esp
100122f0:	and    esp,0xfffffff8
100122f3:	push   0xffffffff
100122f5:	push   0x10063b2f
100122fa:	mov    eax,fs:0x0
10012300:	push   eax
10012301:	sub    esp,0x20
10012304:	mov    eax,ds:0x1007e030
10012309:	xor    eax,esp
1001230b:	mov    DWORD PTR [esp+0x18],eax
1001230f:	push   esi
10012310:	mov    eax,ds:0x1007e030
10012315:	xor    eax,esp
10012317:	push   eax
10012318:	lea    eax,[esp+0x28]
1001231c:	mov    fs:0x0,eax
10012322:	push   0x18dc6bf6
10012327:	push   0x1006e0fc
1001232c:	call   0x10004246
10012331:	push   0x21b487cc
10012336:	push   eax
10012337:	call   0x10004246
1001233c:	push   0x4ae5877e
10012341:	push   eax
10012342:	call   0x10004246
10012347:	push   0x55f10d74
1001234c:	push   eax
1001234d:	call   0x10004246
10012352:	push   0x6bf2b494
10012357:	push   eax
10012358:	call   0x10004246
1001235d:	push   eax
1001235e:	push   0xa
10012360:	push   0x1006e138
10012365:	call   0x10004417
1001236a:	add    esp,0x34
1001236d:	push   eax
1001236e:	call   DWORD PTR ds:0x100660f8
10012374:	xor    esi,esi
10012376:	push   esi
10012377:	call   DWORD PTR ds:0x10066434
1001237d:	mov    DWORD PTR [esp+0xc],esi
10012381:	push   0x1006e150
10012386:	push   0x8
10012388:	push   0x1006e184
1001238d:	mov    DWORD PTR [esp+0x3c],esi
10012391:	call   0x10004417
10012396:	add    esp,0xc
10012399:	lea    ecx,[esp+0x10]
1001239d:	push   ecx
1001239e:	push   eax
1001239f:	call   DWORD PTR ds:0x10066438
100123a5:	cmp    eax,esi
100123a7:	jl     0x10012414
100123a9:	lea    eax,[esp+0xc]
100123ad:	push   eax
100123ae:	push   0x1006e208
100123b3:	push   0x17
100123b5:	push   esi
100123b6:	lea    eax,[esp+0x20]
100123ba:	push   eax
100123bb:	call   DWORD PTR ds:0x1006643c
100123c1:	cmp    eax,esi
100123c3:	jl     0x10012414
100123c5:	mov    eax,DWORD PTR [esp+0xc]
100123c9:	mov    eax,DWORD PTR [eax]
100123cb:	mov    ecx,DWORD PTR [eax+0x90]
100123d1:	call   0x100121c6
100123d6:	test   al,al
100123d8:	jne    0x100123e9
100123da:	call   0x10002080
100123df:	push   0x8
100123e1:	call   0x10037980
100123e6:	pop    ecx
100123e7:	jmp    0x10012414
100123e9:	mov    eax,DWORD PTR [esp+0xc]
100123ed:	mov    eax,DWORD PTR [eax+0x10]
100123f0:	mov    eax,DWORD PTR [eax+0x90]
100123f6:	push   0x10012166
100123fb:	push   eax
100123fc:	call   0x10057470
10012401:	push   esi
10012402:	push   0x1
10012404:	push   0x10080da0
10012409:	mov    ds:0x10080c54,eax
1001240e:	call   DWORD PTR ds:0x100660e0
10012414:	or     DWORD PTR [esp+0x30],0xffffffff
10012419:	mov    eax,DWORD PTR [esp+0xc]
1001241d:	cmp    eax,esi
1001241f:	je     0x10012427
10012421:	mov    ecx,DWORD PTR [eax]
10012423:	push   eax
10012424:	call   DWORD PTR [ecx+0x8]
10012427:	mov    ecx,DWORD PTR [esp+0x28]
1001242b:	mov    DWORD PTR fs:0x0,ecx
10012432:	pop    ecx
10012433:	pop    esi
10012434:	mov    ecx,DWORD PTR [esp+0x18]
10012438:	xor    ecx,esp
1001243a:	call   0x10042e97
1001243f:	mov    esp,ebp
10012441:	pop    ebp
10012442:	ret    
10012443:	push   0x10
10012445:	mov    eax,0x10061ee5
1001244a:	call   0x10059a35
1001244f:	push   DWORD PTR [ebp+0x8]
10012452:	lea    eax,[ebp-0x1c]
10012455:	push   eax
10012456:	call   0x1000f5ba
1001245b:	pop    ecx
1001245c:	pop    ecx
1001245d:	xor    ebx,ebx
1001245f:	lea    eax,[ebp-0x1c]
10012462:	mov    DWORD PTR [ebp-0x4],ebx
10012465:	call   0x100045e9
1001246a:	cmp    eax,0x2
1001246d:	jne    0x100124a5
1001246f:	push   ebx
10012470:	lea    esi,[ebp-0x1c]
10012473:	call   0x100045ff
10012478:	mov    ecx,DWORD PTR [ebp+0xc]
1001247b:	push   0xffffffff
1001247d:	push   ebx
1001247e:	push   eax
1001247f:	call   0x10001241
10012484:	inc    ebx
10012485:	push   ebx
10012486:	call   0x100045ff
1001248b:	cmp    DWORD PTR [eax+0x18],0x10
1001248f:	jb     0x10012496
10012491:	mov    eax,DWORD PTR [eax+0x4]
10012494:	jmp    0x10012499
10012496:	add    eax,0x4
10012499:	push   eax
1001249a:	call   0x10045cb5
1001249f:	pop    ecx
100124a0:	mov    ecx,DWORD PTR [ebp+0x10]
100124a3:	mov    DWORD PTR [ecx],eax
100124a5:	lea    esi,[ebp-0x1c]
100124a8:	call   0x10004964
100124ad:	mov    al,bl
100124af:	call   0x10059b0d
100124b4:	ret    
100124b5:	push   ebp
100124b6:	mov    ebp,esp
100124b8:	push   0xffffffff
100124ba:	push   0x100635bd
100124bf:	mov    eax,fs:0x0
100124c5:	push   eax
100124c6:	push   ecx
100124c7:	mov    eax,0x1058
100124cc:	call   0x10049de0
100124d1:	mov    eax,ds:0x1007e030
100124d6:	xor    eax,ebp
100124d8:	mov    DWORD PTR [ebp-0x14],eax
100124db:	push   ebx
100124dc:	push   esi
100124dd:	push   edi
100124de:	push   eax
100124df:	lea    eax,[ebp-0xc]
100124e2:	mov    fs:0x0,eax
100124e8:	mov    DWORD PTR [ebp-0x10],esp
100124eb:	mov    eax,DWORD PTR [ebp+0x8]
100124ee:	mov    DWORD PTR [ebp-0x103c],eax
100124f4:	mov    eax,DWORD PTR [ebp+0xc]
100124f7:	xor    edi,edi
100124f9:	push   0xfff
100124fe:	mov    DWORD PTR [ebp-0x1040],eax
10012504:	mov    DWORD PTR [eax],edi
10012506:	lea    eax,[ebp-0x1017]
1001250c:	push   edi
1001250d:	push   eax
1001250e:	mov    DWORD PTR [ebp-0x1054],0x1000
10012518:	mov    BYTE PTR [ebp-0x1018],0x0
1001251f:	call   0x10045c00
10012524:	add    esp,0xc
10012527:	lea    eax,[ebp-0x1054]
1001252d:	push   eax
1001252e:	lea    eax,[ebp-0x1018]
10012534:	push   eax
10012535:	push   0x26
10012537:	push   edi
10012538:	call   DWORD PTR ds:0x10066370
1001253e:	test   eax,eax
10012540:	jne    0x1001255e
10012542:	xor    al,al
10012544:	mov    ecx,DWORD PTR [ebp-0xc]
10012547:	mov    DWORD PTR fs:0x0,ecx
1001254e:	pop    ecx
1001254f:	pop    edi
10012550:	pop    esi
10012551:	pop    ebx
10012552:	mov    ecx,DWORD PTR [ebp-0x14]
10012555:	xor    ecx,ebp
10012557:	call   0x10042e97
1001255c:	leave  
1001255d:	ret    
1001255e:	cmp    DWORD PTR [ebp-0x1018],0x3
10012565:	jne    0x10012542
10012567:	cmp    DWORD PTR [ebp-0x1014],edi
1001256d:	je     0x10012542
1001256f:	push   DWORD PTR [ebp-0x1014]
10012575:	lea    ecx,[ebp-0x1034]
1001257b:	call   0x100011cd
10012580:	mov    DWORD PTR [ebp-0x4],edi
10012583:	mov    DWORD PTR [ebp-0x104c],edi
10012589:	mov    DWORD PTR [ebp-0x1048],edi
1001258f:	mov    DWORD PTR [ebp-0x1044],edi
10012595:	lea    eax,[ebp-0x1034]
1001259b:	push   eax
1001259c:	lea    eax,[ebp-0x1064]
100125a2:	push   eax
100125a3:	mov    BYTE PTR [ebp-0x1035],0x0
100125aa:	mov    BYTE PTR [ebp-0x4],0x2
100125ae:	call   0x100126f4
100125b3:	pop    ecx
100125b4:	pop    ecx
100125b5:	lea    ecx,[ebp-0x1050]
100125bb:	mov    BYTE PTR [ebp-0x4],0x3
100125bf:	call   0x100127a8
100125c4:	lea    esi,[ebp-0x1064]
100125ca:	mov    BYTE PTR [ebp-0x4],0x2
100125ce:	call   0x1000d062
100125d3:	xor    ebx,ebx
100125d5:	cmp    DWORD PTR [ebp-0x104c],edi
100125db:	jne    0x100125e1
100125dd:	xor    eax,eax
100125df:	jmp    0x100125f0
100125e1:	mov    eax,DWORD PTR [ebp-0x1048]
100125e7:	sub    eax,DWORD PTR [ebp-0x104c]
100125ed:	sar    eax,0x4
100125f0:	cmp    ebx,eax
100125f2:	je     0x10012681
100125f8:	push   ebx
100125f9:	lea    esi,[ebp-0x1050]
100125ff:	call   0x1000c950
10012604:	call   0x100045e9
10012609:	cmp    eax,0x2
1001260c:	jne    0x1001267b
1001260e:	push   edi
1001260f:	push   ebx
10012610:	call   0x1000c950
10012615:	mov    esi,eax
10012617:	call   0x100045ff
1001261c:	cmp    DWORD PTR [eax+0x18],0x10
10012620:	jb     0x10012627
10012622:	mov    esi,DWORD PTR [eax+0x4]
10012625:	jmp    0x1001262a
10012627:	lea    esi,[eax+0x4]
1001262a:	push   0x1006e1c4
1001262f:	push   0x4
10012631:	push   0x1006e200
10012636:	call   0x10004258
1001263b:	add    esp,0xc
1001263e:	push   eax
1001263f:	push   esi
10012640:	call   0x1004566f
10012645:	test   eax,eax
10012647:	pop    ecx
10012648:	pop    ecx
10012649:	jne    0x1001267b
1001264b:	push   DWORD PTR [ebp-0x1040]
10012651:	lea    esi,[ebp-0x1050]
10012657:	push   DWORD PTR [ebp-0x103c]
1001265d:	push   0x1
1001265f:	push   ebx
10012660:	call   0x1000c950
10012665:	mov    esi,eax
10012667:	call   0x100045ff
1001266c:	push   eax
1001266d:	call   0x10012443
10012672:	add    esp,0xc
10012675:	mov    BYTE PTR [ebp-0x1035],al
1001267b:	inc    ebx
1001267c:	jmp    0x100125d5
10012681:	mov    DWORD PTR [ebp-0x4],0x1
10012688:	jmp    0x10012692
1001268a:	mov    eax,0x10012690
1001268f:	ret    
10012690:	xor    edi,edi
10012692:	cmp    BYTE PTR [ebp-0x1035],0x0
10012699:	je     0x100126bd
1001269b:	mov    bl,0x1
1001269d:	lea    esi,[ebp-0x1050]
100126a3:	call   0x1000d062
100126a8:	push   edi
100126a9:	push   0x1
100126ab:	lea    ecx,[ebp-0x1034]
100126b1:	call   0x100012f0
100126b6:	mov    al,bl
100126b8:	jmp    0x10012544
100126bd:	push   DWORD PTR [ebp-0x1040]
100126c3:	lea    eax,[ebp-0x1034]
100126c9:	push   DWORD PTR [ebp-0x103c]
100126cf:	mov    BYTE PTR [ebp-0x4],0x5
100126d3:	push   eax
100126d4:	call   0x10012443
100126d9:	add    esp,0xc
100126dc:	mov    BYTE PTR [ebp-0x1035],al
100126e2:	jmp    0x100126ec
100126e4:	mov    eax,0x100126ea
100126e9:	ret    
100126ea:	xor    edi,edi
100126ec:	mov    bl,BYTE PTR [ebp-0x1035]
100126f2:	jmp    0x1001269d
100126f4:	push   0x34
100126f6:	mov    eax,0x10062ce6
100126fb:	call   0x10059a35
10012700:	mov    edi,DWORD PTR [ebp+0x8]
10012703:	xor    esi,esi
10012705:	mov    DWORD PTR [ebp-0x10],esi
10012708:	mov    DWORD PTR [edi+0x4],esi
1001270b:	mov    DWORD PTR [edi+0x8],esi
1001270e:	mov    DWORD PTR [edi+0xc],esi
10012711:	mov    DWORD PTR [ebp-0x4],esi
10012714:	push   DWORD PTR ds:0x1008143c
1001271a:	mov    DWORD PTR [ebp-0x10],0x1
10012721:	call   0x10043010
10012726:	pop    ecx
10012727:	mov    DWORD PTR [ebp-0x14],eax
1001272a:	push   esi
1001272b:	push   DWORD PTR ds:0x1008143c
10012731:	push   DWORD PTR [ebp+0xc]
10012734:	call   0x1000c8c0
10012739:	mov    ebx,eax
1001273b:	cmp    ebx,0xffffffff
1001273e:	jne    0x10012746
10012740:	mov    eax,DWORD PTR [ebp+0xc]
10012743:	mov    ebx,DWORD PTR [eax+0x14]
10012746:	cmp    ebx,esi
10012748:	jb     0x10012798
1001274a:	mov    eax,ebx
1001274c:	sub    eax,esi
1001274e:	push   eax
1001274f:	push   esi
10012750:	push   DWORD PTR [ebp+0xc]
10012753:	lea    eax,[ebp-0x40]
10012756:	call   0x1000c8df
1001275b:	push   eax
1001275c:	lea    eax,[ebp-0x24]
1001275f:	push   eax
10012760:	mov    DWORD PTR [ebp-0x4],0x1
10012767:	call   0x100128c9
1001276c:	pop    ecx
1001276d:	pop    ecx
1001276e:	push   eax
1001276f:	mov    esi,edi
10012771:	mov    BYTE PTR [ebp-0x4],0x2
10012775:	call   0x1000f675
1001277a:	lea    esi,[ebp-0x24]
1001277d:	call   0x10004964
10012782:	push   0x0
10012784:	push   0x1
10012786:	lea    ecx,[ebp-0x40]
10012789:	mov    BYTE PTR [ebp-0x4],0x0
1001278d:	call   0x100012f0
10012792:	mov    eax,DWORD PTR [ebp-0x14]
10012795:	lea    esi,[ebx+eax*1]
10012798:	mov    eax,DWORD PTR [ebp+0xc]
1001279b:	cmp    esi,DWORD PTR [eax+0x14]
1001279e:	jb     0x1001272a
100127a0:	mov    eax,edi
100127a2:	call   0x10059b0d
100127a7:	ret    
100127a8:	push   ebx
100127a9:	push   esi
100127aa:	push   edi
100127ab:	mov    esi,eax
100127ad:	mov    edi,ecx
100127af:	cmp    edi,esi
100127b1:	je     0x100128c3
100127b7:	call   0x1000c93d
100127bc:	test   eax,eax
100127be:	jne    0x10012801
100127c0:	mov    ebx,DWORD PTR [edi+0x8]
100127c3:	cmp    DWORD PTR [edi+0x4],ebx
100127c6:	jbe    0x100127cd
100127c8:	call   0x100433b0
100127cd:	mov    esi,DWORD PTR [edi+0x4]
100127d0:	cmp    esi,DWORD PTR [edi+0x8]
100127d3:	jbe    0x100127da
100127d5:	call   0x100433b0
100127da:	cmp    esi,ebx
100127dc:	je     0x100128c3
100127e2:	push   DWORD PTR [edi+0x8]
100127e5:	mov    eax,esi
100127e7:	mov    ecx,ebx
100127e9:	call   0x10012984
100127ee:	pop    ecx
100127ef:	push   DWORD PTR [edi+0x8]
100127f2:	mov    esi,eax
100127f4:	call   0x1000d37a
100127f9:	mov    DWORD PTR [edi+0x8],esi
100127fc:	jmp    0x100128c3
10012801:	mov    eax,esi
10012803:	call   0x1000c93d
10012808:	mov    ebx,eax
1001280a:	mov    eax,edi
1001280c:	call   0x1000c93d
10012811:	cmp    ebx,eax
10012813:	mov    eax,DWORD PTR [edi+0x4]
10012816:	ja     0x1001283e
10012818:	push   DWORD PTR [esi+0x8]
1001281b:	mov    ecx,DWORD PTR [esi+0x4]
1001281e:	call   0x10012984
10012823:	pop    ecx
10012824:	push   DWORD PTR [edi+0x8]
10012827:	call   0x1000d37a
1001282c:	mov    eax,esi
1001282e:	call   0x1000c93d
10012833:	shl    eax,0x4
10012836:	add    eax,DWORD PTR [edi+0x4]
10012839:	jmp    0x100128c0
1001283e:	test   eax,eax
10012840:	jne    0x10012846
10012842:	xor    ebx,ebx
10012844:	jmp    0x1001284e
10012846:	mov    ebx,DWORD PTR [edi+0xc]
10012849:	sub    ebx,eax
1001284b:	sar    ebx,0x4
1001284e:	mov    eax,esi
10012850:	call   0x1000c93d
10012855:	cmp    eax,ebx
10012857:	ja     0x1001287b
10012859:	mov    eax,edi
1001285b:	call   0x1000c93d
10012860:	mov    ecx,DWORD PTR [esi+0x4]
10012863:	mov    ebx,eax
10012865:	mov    eax,DWORD PTR [edi+0x4]
10012868:	shl    ebx,0x4
1001286b:	add    ebx,ecx
1001286d:	push   ebx
1001286e:	call   0x10012984
10012873:	pop    ecx
10012874:	push   DWORD PTR [edi+0x8]
10012877:	mov    ecx,ebx
10012879:	jmp    0x100128b8
1001287b:	mov    eax,DWORD PTR [edi+0x4]
1001287e:	xor    ebx,ebx
10012880:	cmp    eax,ebx
10012882:	je     0x10012895
10012884:	push   DWORD PTR [edi+0x8]
10012887:	call   0x1000d37a
1001288c:	push   DWORD PTR [edi+0x4]
1001288f:	call   0x10042e92
10012894:	pop    ecx
10012895:	mov    eax,esi
10012897:	call   0x1000c93d
1001289c:	cmp    eax,ebx
1001289e:	mov    DWORD PTR [edi+0x4],ebx
100128a1:	mov    DWORD PTR [edi+0x8],ebx
100128a4:	mov    DWORD PTR [edi+0xc],ebx
100128a7:	je     0x100128c3
100128a9:	call   0x1000f74d
100128ae:	test   al,al
100128b0:	je     0x100128c3
100128b2:	push   DWORD PTR [edi+0x4]
100128b5:	mov    ecx,DWORD PTR [esi+0x4]
100128b8:	push   DWORD PTR [esi+0x8]
100128bb:	call   0x100129bc
100128c0:	mov    DWORD PTR [edi+0x8],eax
100128c3:	mov    eax,edi
100128c5:	pop    edi
100128c6:	pop    esi
100128c7:	pop    ebx
100128c8:	ret    
100128c9:	push   0x44
100128cb:	mov    eax,0x10060e7c
100128d0:	call   0x10059a35
100128d5:	mov    esi,DWORD PTR [ebp+0x8]
100128d8:	xor    ebx,ebx
100128da:	mov    DWORD PTR [ebp-0x14],ebx
100128dd:	mov    DWORD PTR [esi+0x4],ebx
100128e0:	mov    DWORD PTR [esi+0x8],ebx
100128e3:	mov    DWORD PTR [esi+0xc],ebx
100128e6:	xor    edi,edi
100128e8:	inc    edi
100128e9:	mov    DWORD PTR [ebp-0x4],ebx
100128ec:	push   0x1006e0f8
100128f1:	mov    DWORD PTR [ebp-0x14],edi
100128f4:	call   0x10043010
100128f9:	pop    ecx
100128fa:	mov    DWORD PTR [ebp-0x18],eax
100128fd:	mov    DWORD PTR [ebp-0x10],ebx
10012900:	push   DWORD PTR [ebp-0x10]
10012903:	push   0x1006e0f8
10012908:	push   DWORD PTR [ebp+0xc]
1001290b:	call   0x1000c8c0
10012910:	mov    ebx,eax
10012912:	cmp    ebx,0xffffffff
10012915:	jne    0x1001291d
10012917:	mov    eax,DWORD PTR [ebp+0xc]
1001291a:	mov    ebx,DWORD PTR [eax+0x14]
1001291d:	cmp    ebx,DWORD PTR [ebp-0x10]
10012920:	jb     0x10012971
10012922:	mov    eax,ebx
10012924:	sub    eax,DWORD PTR [ebp-0x10]
10012927:	push   eax
10012928:	push   DWORD PTR [ebp-0x10]
1001292b:	lea    eax,[ebp-0x50]
1001292e:	push   DWORD PTR [ebp+0xc]
10012931:	call   0x1000c8df
10012936:	push   eax
10012937:	lea    eax,[ebp-0x34]
1001293a:	push   eax
1001293b:	mov    DWORD PTR [ebp-0x4],edi
1001293e:	call   0x1002e54a
10012943:	pop    ecx
10012944:	pop    ecx
10012945:	push   eax
10012946:	mov    BYTE PTR [ebp-0x4],0x2
1001294a:	call   0x1000f83a
1001294f:	push   0x0
10012951:	push   edi
10012952:	lea    ecx,[ebp-0x34]
10012955:	call   0x100012f0
1001295a:	push   0x0
1001295c:	push   edi
1001295d:	lea    ecx,[ebp-0x50]
10012960:	mov    BYTE PTR [ebp-0x4],0x0
10012964:	call   0x100012f0
10012969:	mov    eax,DWORD PTR [ebp-0x18]
1001296c:	add    ebx,eax
1001296e:	mov    DWORD PTR [ebp-0x10],ebx
10012971:	mov    eax,DWORD PTR [ebp-0x10]
10012974:	mov    ecx,DWORD PTR [ebp+0xc]
10012977:	cmp    eax,DWORD PTR [ecx+0x14]
1001297a:	jb     0x10012900
1001297c:	mov    eax,esi
1001297e:	call   0x10059b0d
10012983:	ret    
10012984:	push   ecx
10012985:	push   ebx
10012986:	push   esi
10012987:	mov    esi,DWORD PTR [esp+0x10]
1001298b:	push   edi
1001298c:	mov    edi,ecx
1001298e:	sub    esi,edi
10012990:	sar    esi,0x4
10012993:	shl    esi,0x4
10012996:	mov    ebx,eax
10012998:	add    esi,ebx
1001299a:	cmp    edi,DWORD PTR [esp+0x14]
1001299e:	je     0x100129b5
100129a0:	sub    ebx,edi
100129a2:	lea    ecx,[ebx+edi*1]
100129a5:	mov    eax,edi
100129a7:	call   0x1000ff6c
100129ac:	add    edi,0x10
100129af:	cmp    edi,DWORD PTR [esp+0x14]
100129b3:	jne    0x100129a2
100129b5:	pop    edi
100129b6:	mov    eax,esi
100129b8:	pop    esi
100129b9:	pop    ebx
100129ba:	pop    ecx
100129bb:	ret    
100129bc:	push   ebp
100129bd:	mov    ebp,esp
100129bf:	push   ecx
100129c0:	push   edi
100129c1:	xor    eax,eax
100129c3:	lea    edi,[ebp-0x4]
100129c6:	stos   BYTE PTR es:[edi],al
100129c7:	push   DWORD PTR [ebp-0x4]
100129ca:	push   DWORD PTR [ebp+0xc]
100129cd:	push   DWORD PTR [ebp+0xc]
100129d0:	push   DWORD PTR [ebp+0x8]
100129d3:	call   0x100129e0
100129d8:	add    esp,0x10
100129db:	pop    edi
100129dc:	leave  
100129dd:	ret    0x8
100129e0:	push   0xc
100129e2:	mov    eax,0x10062bab
100129e7:	call   0x10059a68
100129ec:	mov    esi,ecx
100129ee:	mov    eax,DWORD PTR [ebp+0xc]
100129f1:	and    DWORD PTR [ebp-0x4],0x0
100129f5:	mov    DWORD PTR [ebp-0x14],eax
100129f8:	cmp    esi,DWORD PTR [ebp+0x8]
100129fb:	je     0x10012a2b
100129fd:	push   DWORD PTR [ebp+0xc]
10012a00:	mov    ecx,esi
10012a02:	call   0x1000ff46
10012a07:	add    DWORD PTR [ebp+0xc],0x10
10012a0b:	add    esi,0x10
10012a0e:	jmp    0x100129f8
10012a10:	mov    esi,DWORD PTR [ebp-0x14]
10012a13:	jmp    0x10012a1d
10012a15:	call   0x10004964
10012a1a:	add    esi,0x10
10012a1d:	cmp    esi,DWORD PTR [ebp+0xc]
10012a20:	jne    0x10012a15
10012a22:	push   0x0
10012a24:	push   0x0
10012a26:	call   0x100479b4
10012a2b:	mov    eax,DWORD PTR [ebp+0xc]
10012a2e:	call   0x10059b0d
10012a33:	ret    
10012a34:	push   esi
10012a35:	mov    esi,edi
10012a37:	call   0x10004059
10012a3c:	lea    esi,[edi+0x1c]
10012a3f:	call   0x10004059
10012a44:	lea    esi,[edi+0x38]
10012a47:	call   0x10004059
10012a4c:	lea    esi,[edi+0x54]
10012a4f:	call   0x10004059
10012a54:	lea    esi,[edi+0x70]
10012a57:	call   0x10004059
10012a5c:	mov    eax,edi
10012a5e:	pop    esi
10012a5f:	ret    
10012a60:	push   0x0
10012a62:	mov    eax,0x100603c5
10012a67:	call   0x10059a35
10012a6c:	mov    edi,DWORD PTR [ebp+0x8]
10012a6f:	mov    esi,edi
10012a71:	call   0x10004059
10012a76:	xor    ebx,ebx
10012a78:	lea    esi,[edi+0x1c]
10012a7b:	mov    DWORD PTR [ebp-0x4],ebx
10012a7e:	call   0x10004059
10012a83:	lea    esi,[edi+0x38]
10012a86:	call   0x10004059
10012a8b:	lea    esi,[edi+0x54]
10012a8e:	call   0x10004059
10012a93:	lea    esi,[edi+0x70]
10012a96:	call   0x10004059
10012a9b:	push   0xffffffff
10012a9d:	push   ebx
10012a9e:	push   DWORD PTR [ebp+0xc]
10012aa1:	mov    ecx,edi
10012aa3:	mov    BYTE PTR [ebp-0x4],0x4
10012aa7:	call   0x10001241
10012aac:	push   0xffffffff
10012aae:	push   ebx
10012aaf:	push   DWORD PTR [ebp+0x10]
10012ab2:	lea    ecx,[edi+0x1c]
10012ab5:	call   0x10001241
10012aba:	push   0xffffffff
10012abc:	push   ebx
10012abd:	push   DWORD PTR [ebp+0x14]
10012ac0:	lea    ecx,[edi+0x38]
10012ac3:	call   0x10001241
10012ac8:	push   0xffffffff
10012aca:	push   ebx
10012acb:	push   DWORD PTR [ebp+0x18]
10012ace:	lea    ecx,[edi+0x54]
10012ad1:	call   0x10001241
10012ad6:	push   0xffffffff
10012ad8:	push   ebx
10012ad9:	push   DWORD PTR [ebp+0x1c]
10012adc:	mov    ecx,esi
10012ade:	call   0x10001241
10012ae3:	mov    eax,edi
10012ae5:	call   0x10059b0d
10012aea:	ret    0x18
10012aed:	push   0x94
10012af2:	mov    eax,0x10060369
10012af7:	call   0x10059a9e
10012afc:	and    DWORD PTR [ebp-0xa0],0x0
10012b03:	push   0xffffffff
10012b05:	push   DWORD PTR ds:0x10080dc4
10012b0b:	mov    edi,ecx
10012b0d:	call   DWORD PTR ds:0x10066084
10012b13:	test   eax,eax
10012b15:	jne    0x10012b51
10012b17:	lea    eax,[ebp-0x9c]
10012b1d:	push   eax
10012b1e:	mov    ecx,0x10080dc8
10012b23:	call   0x10012b5e
10012b28:	and    DWORD PTR [ebp-0x4],0x0
10012b2c:	push   DWORD PTR ds:0x10080dc4
10012b32:	call   DWORD PTR ds:0x10066094
10012b38:	push   edi
10012b39:	lea    ecx,[ebp-0x9c]
10012b3f:	call   0x10012b5e
10012b44:	lea    esi,[ebp-0x9c]
10012b4a:	call   0x1000bbfd
10012b4f:	jmp    0x10012b56
10012b51:	call   0x10012a34
10012b56:	mov    eax,edi
10012b58:	call   0x10059b21
10012b5d:	ret    
10012b5e:	push   0x0
10012b60:	mov    eax,0x1005fc44
10012b65:	call   0x10059a35
10012b6a:	mov    edi,ecx
10012b6c:	mov    esi,DWORD PTR [ebp+0x8]
10012b6f:	push   edi
10012b70:	mov    ecx,esi
10012b72:	call   0x100011a7
10012b77:	and    DWORD PTR [ebp-0x4],0x0
10012b7b:	lea    eax,[edi+0x1c]
10012b7e:	push   eax
10012b7f:	lea    ecx,[esi+0x1c]
10012b82:	call   0x100011a7
10012b87:	lea    eax,[edi+0x38]
10012b8a:	push   eax
10012b8b:	lea    ecx,[esi+0x38]
10012b8e:	mov    BYTE PTR [ebp-0x4],0x1
10012b92:	call   0x100011a7
10012b97:	lea    eax,[edi+0x54]
10012b9a:	push   eax
10012b9b:	lea    ecx,[esi+0x54]
10012b9e:	mov    BYTE PTR [ebp-0x4],0x2
10012ba2:	call   0x100011a7
10012ba7:	add    edi,0x70
10012baa:	push   edi
10012bab:	lea    ecx,[esi+0x70]
10012bae:	mov    BYTE PTR [ebp-0x4],0x3
10012bb2:	call   0x100011a7
10012bb7:	mov    eax,esi
10012bb9:	call   0x10059b0d
10012bbe:	ret    0x4
10012bc1:	push   ebx
10012bc2:	push   esi
10012bc3:	push   edi
10012bc4:	push   0xffffffff
10012bc6:	xor    ebx,ebx
10012bc8:	mov    esi,eax
10012bca:	push   ebx
10012bcb:	mov    edi,0x10080dc8
10012bd0:	push   esi
10012bd1:	mov    ecx,edi
10012bd3:	call   0x10001241
10012bd8:	push   0xffffffff
10012bda:	push   ebx
10012bdb:	lea    eax,[esi+0x1c]
10012bde:	push   eax
10012bdf:	mov    ecx,0x10080de4
10012be4:	call   0x10001241
10012be9:	push   0xffffffff
10012beb:	push   ebx
10012bec:	lea    eax,[esi+0x38]
10012bef:	push   eax
10012bf0:	mov    ecx,0x10080e00
10012bf5:	call   0x10001241
10012bfa:	push   0xffffffff
10012bfc:	push   ebx
10012bfd:	lea    eax,[esi+0x54]
10012c00:	push   eax
10012c01:	mov    ecx,0x10080e1c
10012c06:	call   0x10001241
10012c0b:	push   0xffffffff
10012c0d:	push   ebx
10012c0e:	add    esi,0x70
10012c11:	push   esi
10012c12:	mov    ecx,0x10080e38
10012c17:	call   0x10001241
10012c1c:	mov    eax,edi
10012c1e:	pop    edi
10012c1f:	pop    esi
10012c20:	pop    ebx
10012c21:	ret    
10012c22:	push   esi
10012c23:	mov    esi,edi
10012c25:	call   0x10004059
10012c2a:	lea    esi,[edi+0x1c]
10012c2d:	call   0x10004059
10012c32:	lea    esi,[edi+0x38]
10012c35:	call   0x10004059
10012c3a:	lea    esi,[edi+0x54]
10012c3d:	call   0x10004059
10012c42:	xor    eax,eax
10012c44:	mov    DWORD PTR [edi+0x70],eax
10012c47:	mov    DWORD PTR [edi+0x80],eax
10012c4d:	mov    DWORD PTR [edi+0x84],eax
10012c53:	mov    eax,edi
10012c55:	pop    esi
10012c56:	ret    
10012c57:	push   0x38
10012c59:	mov    eax,0x10062b90
10012c5e:	call   0x10059a35
10012c63:	push   DWORD PTR [ebp+0xc]
10012c66:	lea    esi,[ebp-0x44]
10012c69:	call   0x10030410
10012c6e:	pop    ecx
10012c6f:	lea    ecx,[ebp-0x28]
10012c72:	push   ecx
10012c73:	xor    esi,esi
10012c75:	mov    ecx,eax
10012c77:	mov    DWORD PTR [ebp-0x4],esi
10012c7a:	call   0x1002fb70
10012c7f:	pop    ecx
10012c80:	push   DWORD PTR [ebp+0x10]
10012c83:	mov    BYTE PTR [ebp-0x4],0x1
10012c87:	push   eax
10012c88:	push   DWORD PTR [ebp+0x8]
10012c8b:	call   0x10013137
10012c90:	push   esi
10012c91:	push   0x1
10012c93:	lea    ecx,[ebp-0x28]
10012c96:	mov    bl,al
10012c98:	call   0x100012f0
10012c9d:	push   esi
10012c9e:	push   0x1
10012ca0:	lea    ecx,[ebp-0x44]
10012ca3:	call   0x100012f0
10012ca8:	mov    al,bl
10012caa:	call   0x10059b0d
10012caf:	ret    0xc
10012cb2:	push   0x104
10012cb7:	mov    eax,0x10062b58
10012cbc:	call   0x10059a9e
10012cc1:	mov    eax,DWORD PTR [ebp+0x8]
10012cc4:	mov    DWORD PTR [ebp-0xf0],eax
10012cca:	mov    eax,DWORD PTR [ebp+0xc]
10012ccd:	push   eax
10012cce:	lea    esi,[ebp-0x110]
10012cd4:	mov    DWORD PTR [ebp-0xf4],ecx
10012cda:	call   0x10030410
10012cdf:	pop    ecx
10012ce0:	and    DWORD PTR [ebp-0x4],0x0
10012ce4:	lea    ecx,[ebp-0x60]
10012ce7:	push   ecx
10012ce8:	mov    ecx,eax
10012cea:	call   0x1002fb70
10012cef:	pop    ecx
10012cf0:	push   0x0
10012cf2:	push   0x1
10012cf4:	mov    ecx,esi
10012cf6:	call   0x100012f0
10012cfb:	lea    edi,[ebp-0xec]
10012d01:	call   0x10012c22
10012d06:	mov    eax,edi
10012d08:	push   eax
10012d09:	lea    eax,[ebp-0x60]
10012d0c:	push   eax
10012d0d:	push   DWORD PTR [ebp-0xf0]
10012d13:	mov    BYTE PTR [ebp-0x4],0x3
10012d17:	call   0x10013137
10012d1c:	test   al,al
10012d1e:	je     0x10012ddc
10012d24:	push   0x1006cd08
10012d29:	lea    esi,[ebp-0xd0]
10012d2f:	call   0x1000658e
10012d34:	test   al,al
10012d36:	pop    ecx
10012d37:	jne    0x10012dab
10012d39:	mov    eax,esi
10012d3b:	push   eax
10012d3c:	lea    ecx,[ebp-0x44]
10012d3f:	call   0x100011a7
10012d44:	mov    eax,DWORD PTR [ebx]
10012d46:	mov    DWORD PTR [ebp-0x24],eax
10012d49:	mov    eax,DWORD PTR [ebx+0x4]
10012d4c:	mov    DWORD PTR [ebp-0x20],eax
10012d4f:	mov    eax,DWORD PTR [ebp-0xf4]
10012d55:	mov    ecx,DWORD PTR [eax]
10012d57:	mov    eax,DWORD PTR [eax+0x4]
10012d5a:	mov    DWORD PTR [ebp-0x1c],ecx
10012d5d:	mov    DWORD PTR [ebp-0x18],eax
10012d60:	sub    esp,0x30
10012d63:	mov    esi,esp
10012d65:	lea    eax,[ebp-0x44]
10012d68:	mov    DWORD PTR [ebp-0xf4],esp
10012d6e:	push   eax
10012d6f:	mov    ecx,esi
10012d71:	mov    BYTE PTR [ebp-0x4],0x4
10012d75:	call   0x100011a7
10012d7a:	mov    eax,DWORD PTR [ebp-0x24]
10012d7d:	mov    ecx,DWORD PTR [ebp-0xf0]
10012d83:	mov    DWORD PTR [esi+0x20],eax
10012d86:	mov    eax,DWORD PTR [ebp-0x20]
10012d89:	mov    DWORD PTR [esi+0x24],eax
10012d8c:	mov    eax,DWORD PTR [ebp-0x1c]
10012d8f:	mov    DWORD PTR [esi+0x28],eax
10012d92:	mov    eax,DWORD PTR [ebp-0x18]
10012d95:	mov    DWORD PTR [esi+0x2c],eax
10012d98:	call   0x10014185
10012d9d:	push   0x0
10012d9f:	push   0x1
10012da1:	lea    ecx,[ebp-0x44]
10012da4:	call   0x100012f0
10012da9:	jmp    0x10012ddc
10012dab:	mov    eax,DWORD PTR [ebx]
10012dad:	mov    DWORD PTR [ebp-0x74],eax
10012db0:	mov    eax,DWORD PTR [ebx+0x4]
10012db3:	mov    DWORD PTR [ebp-0x70],eax
10012db6:	mov    eax,DWORD PTR [ebp-0xf4]
10012dbc:	mov    ecx,DWORD PTR [eax]
10012dbe:	mov    eax,DWORD PTR [eax+0x4]
10012dc1:	mov    DWORD PTR [ebp-0x68],eax
10012dc4:	lea    eax,[ebp-0xec]
10012dca:	mov    DWORD PTR [ebp-0x6c],ecx
10012dcd:	mov    ecx,DWORD PTR [ebp-0xf0]
10012dd3:	push   eax
10012dd4:	lea    edx,[ebp-0x60]
10012dd7:	call   0x10012ea7
10012ddc:	lea    esi,[ebp-0xec]
10012de2:	call   0x100033ac
10012de7:	push   0x0
10012de9:	push   0x1
10012deb:	lea    ecx,[ebp-0x60]
10012dee:	call   0x100012f0
10012df3:	call   0x10059b21
10012df8:	ret    0x8
10012dfb:	push   0x0
10012dfd:	mov    eax,0x10061ec2
10012e02:	call   0x10059a35
10012e07:	call   0x100140aa
10012e0c:	mov    ds:0x10080e58,eax
10012e11:	mov    BYTE PTR [eax+0xc1],0x1
10012e18:	mov    eax,ds:0x10080e58
10012e1d:	mov    DWORD PTR [eax+0x4],eax
10012e20:	mov    eax,ds:0x10080e58
10012e25:	mov    DWORD PTR [eax],eax
10012e27:	mov    eax,ds:0x10080e58
10012e2c:	xor    edi,edi
10012e2e:	mov    DWORD PTR [eax+0x8],eax
10012e31:	mov    DWORD PTR ds:0x10080e5c,edi
10012e37:	mov    esi,0x10080e60
10012e3c:	mov    DWORD PTR [esp+0x18],edi
10012e40:	call   0x10013e52
10012e45:	push   edi
10012e46:	push   edi
10012e47:	push   edi
10012e48:	mov    DWORD PTR ds:0x10080e70,0x14
10012e52:	mov    DWORD PTR ds:0x10080e74,0x96
10012e5c:	call   DWORD PTR ds:0x10066074
10012e62:	mov    ds:0x10080e6c,eax
10012e67:	mov    eax,0x10080e54
10012e6c:	call   0x10059b0d
10012e71:	ret    
10012e72:	push   0x0
10012e74:	mov    eax,0x10061ec2
10012e79:	call   0x10059a35
10012e7e:	and    DWORD PTR [ebp-0x4],0x0
10012e82:	push   DWORD PTR ds:0x10080e6c
10012e88:	call   DWORD PTR ds:0x10066070
10012e8e:	mov    eax,0x10080e60
10012e93:	call   0x10001496
10012e98:	or     DWORD PTR [ebp-0x4],0xffffffff
10012e9c:	call   0x10013d53
10012ea1:	call   0x10059b0d
10012ea6:	ret    
10012ea7:	push   0x228
10012eac:	mov    eax,0x10061e95
10012eb1:	call   0x10059ad4
10012eb6:	mov    eax,DWORD PTR [ebp+0x8]
10012eb9:	mov    edi,ecx
10012ebb:	push   0x1f4
10012ec0:	push   DWORD PTR [edi+0x18]
10012ec3:	mov    esi,edx
10012ec5:	mov    DWORD PTR [ebp-0xbc],edi
10012ecb:	mov    DWORD PTR [ebp-0xc4],esi
10012ed1:	mov    DWORD PTR [ebp-0xc0],eax
10012ed7:	call   DWORD PTR ds:0x10066084
10012edd:	test   eax,eax
10012edf:	jne    0x10012fdf
10012ee5:	and    DWORD PTR [ebp-0x4],eax
10012ee8:	push   edi
10012ee9:	call   0x10013454
10012eee:	push   esi
10012eef:	lea    ebx,[ebp-0xb8]
10012ef5:	mov    esi,edi
10012ef7:	call   0x100136f0
10012efc:	cmp    DWORD PTR [ebp-0xb8],0x0
10012f03:	mov    ebx,DWORD PTR [edi+0x4]
10012f06:	je     0x10012f10
10012f08:	cmp    DWORD PTR [ebp-0xb8],edi
10012f0e:	je     0x10012f15
10012f10:	call   0x100433b0
10012f15:	mov    esi,DWORD PTR [ebp-0xb4]
10012f1b:	cmp    esi,ebx
10012f1d:	je     0x10012fe7
10012f23:	and    DWORD PTR [ebp-0xd0],0x0
10012f2a:	lea    ebx,[edi+0xc]
10012f2d:	mov    eax,DWORD PTR [ebx+0x4]
10012f30:	mov    DWORD PTR [ebp-0xc8],eax
10012f36:	lea    eax,[ebp-0xd0]
10012f3c:	mov    DWORD PTR [ebp-0xcc],ebx
10012f42:	call   0x10013748
10012f47:	mov    eax,DWORD PTR [eax]
10012f49:	mov    edi,DWORD PTR [ebp-0xb8]
10012f4f:	inc    eax
10012f50:	test   edi,edi
10012f52:	mov    DWORD PTR [ebp-0xb0],eax
10012f58:	jne    0x10012f5f
10012f5a:	call   0x100433b0
10012f5f:	cmp    esi,DWORD PTR [edi+0x4]
10012f62:	jne    0x10012f69
10012f64:	call   0x100433b0
10012f69:	lea    edx,[esi+0xb8]
10012f6f:	mov    eax,ebx
10012f71:	mov    DWORD PTR [ebp-0xc4],edx
10012f77:	call   0x100133aa
10012f7c:	lea    eax,[ebp-0xb0]
10012f82:	push   eax
10012f83:	lea    edi,[ebp-0xd0]
10012f89:	call   0x100132f1
10012f8e:	mov    eax,DWORD PTR [ebp-0xb8]
10012f94:	cmp    esi,DWORD PTR [eax+0x4]
10012f97:	jne    0x10012f9e
10012f99:	call   0x100433b0
10012f9e:	mov    edi,DWORD PTR [ebp-0xc0]
10012fa4:	add    esi,0x30
10012fa7:	call   0x100131de
10012fac:	mov    eax,DWORD PTR [ebp-0xb4]
10012fb2:	mov    ecx,DWORD PTR [ebp-0xb8]
10012fb8:	cmp    eax,DWORD PTR [ecx+0x4]
10012fbb:	jne    0x10012fc2
10012fbd:	call   0x100433b0
10012fc2:	mov    eax,DWORD PTR [ebp-0xb0]
10012fc8:	mov    ecx,DWORD PTR [ebp-0xc4]
10012fce:	mov    DWORD PTR [ecx],eax
10012fd0:	mov    eax,DWORD PTR [ebp-0xbc]
10012fd6:	push   DWORD PTR [eax+0x18]
10012fd9:	call   DWORD PTR ds:0x10066094
10012fdf:	call   0x10059b30
10012fe4:	ret    0x4
10012fe7:	lea    edi,[ebp-0xac]
10012fed:	call   0x10012c22
10012ff2:	mov    eax,DWORD PTR [ebp-0xbc]
10012ff8:	mov    BYTE PTR [ebp-0x4],0x1
10012ffc:	cmp    DWORD PTR [eax+0x14],0x0
10013000:	je     0x1001302b
10013002:	mov    ecx,DWORD PTR [eax+0x10]
10013005:	and    DWORD PTR [ebp-0xd0],0x0
1001300c:	add    eax,0xc
1001300f:	mov    DWORD PTR [ebp-0xcc],eax
10013015:	lea    eax,[ebp-0xd0]
1001301b:	mov    DWORD PTR [ebp-0xc8],ecx
10013021:	call   0x10013748
10013026:	mov    eax,DWORD PTR [eax]
10013028:	inc    eax
10013029:	jmp    0x1001302d
1001302b:	xor    eax,eax
1001302d:	mov    edi,DWORD PTR [ebp-0xc0]
10013033:	lea    esi,[ebp-0xac]
10013039:	mov    DWORD PTR [ebp-0xb0],eax
1001303f:	mov    DWORD PTR [ebp-0x24],eax
10013042:	call   0x100131de
10013047:	sub    esp,0x90
1001304d:	mov    esi,esp
1001304f:	mov    DWORD PTR [ebp-0xc0],esp
10013055:	push   esi
10013056:	lea    edi,[ebp-0xac]
1001305c:	call   0x10013276
10013061:	mov    eax,DWORD PTR [ebp-0x24]
10013064:	mov    DWORD PTR [esi+0x88],eax
1001306a:	sub    esp,0x1c
1001306d:	mov    BYTE PTR [ebp-0x4],0x2
10013071:	mov    ecx,esp
10013073:	mov    DWORD PTR [ebp-0xb4],esp
10013079:	push   DWORD PTR [ebp-0xc4]
1001307f:	call   0x100011a7
10013084:	lea    ebx,[ebp-0x234]
1001308a:	mov    BYTE PTR [ebp-0x4],0x1
1001308e:	call   0x10014290
10013093:	add    esp,0xac
10013099:	mov    esi,eax
1001309b:	push   esi
1001309c:	lea    ecx,[ebp-0x184]
100130a2:	mov    BYTE PTR [ebp-0x4],0x3
100130a6:	call   0x100011a7
100130ab:	lea    eax,[esi+0x20]
100130ae:	lea    esi,[ebp-0x164]
100130b4:	mov    BYTE PTR [ebp-0x4],0x4
100130b8:	call   0x10013247
100130bd:	mov    ebx,DWORD PTR [ebp-0xbc]
100130c3:	lea    eax,[ebp-0x184]
100130c9:	push   eax
100130ca:	push   ebx
100130cb:	lea    edi,[ebp-0xd0]
100130d1:	mov    BYTE PTR [ebp-0x4],0x5
100130d5:	call   0x100135de
100130da:	call   0x100033ac
100130df:	push   0x0
100130e1:	push   0x1
100130e3:	lea    ecx,[ebp-0x184]
100130e9:	call   0x100012f0
100130ee:	lea    esi,[ebp-0x214]
100130f4:	mov    BYTE PTR [ebp-0x4],0x1
100130f8:	call   0x100033ac
100130fd:	push   0x0
100130ff:	push   0x1
10013101:	lea    ecx,[ebp-0x234]
10013107:	call   0x100012f0
1001310c:	lea    eax,[ebp-0xb0]
10013112:	push   eax
10013113:	add    ebx,0xc
10013116:	lea    edi,[ebp-0xd0]
1001311c:	call   0x100132f1
10013121:	lea    esi,[ebp-0xac]
10013127:	call   0x100033ac
1001312c:	jmp    0x10012fd0
10013131:	mov    eax,0x10012fd0
10013136:	ret    
10013137:	push   0x10
10013139:	mov    eax,0x10062b17
1001313e:	call   0x10059a68
10013143:	mov    esi,DWORD PTR [ebp+0x8]
10013146:	push   0x1f4
1001314b:	push   DWORD PTR [esi+0x18]
1001314e:	mov    BYTE PTR [ebp-0x11],0x0
10013152:	call   DWORD PTR ds:0x10066084
10013158:	test   eax,eax
1001315a:	je     0x10013160
1001315c:	xor    al,al
1001315e:	jmp    0x100131be
10013160:	push   DWORD PTR [ebp+0xc]
10013163:	and    DWORD PTR [ebp-0x4],0x0
10013167:	lea    ebx,[ebp-0x1c]
1001316a:	call   0x100136f0
1001316f:	mov    ebx,DWORD PTR [ebp-0x1c]
10013172:	test   ebx,ebx
10013174:	mov    edi,DWORD PTR [esi+0x4]
10013177:	je     0x1001317d
10013179:	cmp    ebx,esi
1001317b:	je     0x10013182
1001317d:	call   0x100433b0
10013182:	cmp    DWORD PTR [ebp-0x18],edi
10013185:	je     0x100131b2
10013187:	test   ebx,ebx
10013189:	jne    0x10013190
1001318b:	call   0x100433b0
10013190:	mov    eax,DWORD PTR [ebp-0x18]
10013193:	cmp    eax,DWORD PTR [ebx+0x4]
10013196:	jne    0x1001319d
10013198:	call   0x100433b0
1001319d:	mov    edi,DWORD PTR [ebp-0x18]
100131a0:	mov    esi,DWORD PTR [ebp+0x10]
100131a3:	add    edi,0x30
100131a6:	call   0x100131de
100131ab:	mov    BYTE PTR [ebp-0x11],0x1
100131af:	mov    esi,DWORD PTR [ebp+0x8]
100131b2:	push   DWORD PTR [esi+0x18]
100131b5:	call   DWORD PTR ds:0x10066094
100131bb:	mov    al,BYTE PTR [ebp-0x11]
100131be:	call   0x10059b0d
100131c3:	ret    0xc
100131c6:	push   0x4
100131c8:	call   0x10037980
100131cd:	pop    ecx
100131ce:	mov    eax,0x100131af
100131d3:	ret    
100131d4:	jmp    0x10013d53
100131d9:	jmp    0x100033ac
100131de:	push   0xffffffff
100131e0:	push   0x0
100131e2:	push   edi
100131e3:	mov    ecx,esi
100131e5:	call   0x10001241
100131ea:	push   0xffffffff
100131ec:	push   0x0
100131ee:	lea    eax,[edi+0x1c]
100131f1:	push   eax
100131f2:	lea    ecx,[esi+0x1c]
100131f5:	call   0x10001241
100131fa:	push   0xffffffff
100131fc:	push   0x0
100131fe:	lea    eax,[edi+0x38]
10013201:	push   eax
10013202:	lea    ecx,[esi+0x38]
10013205:	call   0x10001241
1001320a:	push   0xffffffff
1001320c:	push   0x0
1001320e:	lea    eax,[edi+0x54]
10013211:	push   eax
10013212:	lea    ecx,[esi+0x54]
10013215:	call   0x10001241
1001321a:	mov    eax,DWORD PTR [edi+0x70]
1001321d:	mov    DWORD PTR [esi+0x70],eax
10013220:	mov    eax,DWORD PTR [edi+0x78]
10013223:	mov    DWORD PTR [esi+0x78],eax
10013226:	mov    eax,DWORD PTR [edi+0x7c]
10013229:	mov    DWORD PTR [esi+0x7c],eax
1001322c:	mov    eax,DWORD PTR [edi+0x80]
10013232:	mov    DWORD PTR [esi+0x80],eax
10013238:	mov    eax,DWORD PTR [edi+0x84]
1001323e:	mov    DWORD PTR [esi+0x84],eax
10013244:	mov    eax,esi
10013246:	ret    
10013247:	push   edi
10013248:	mov    edi,eax
1001324a:	push   esi
1001324b:	call   0x10013276
10013250:	mov    eax,DWORD PTR [edi+0x88]
10013256:	mov    DWORD PTR [esi+0x88],eax
1001325c:	mov    eax,esi
1001325e:	pop    edi
1001325f:	ret    
10013260:	push   esi
10013261:	lea    esi,[edi+0x20]
10013264:	call   0x100033ac
10013269:	push   0x0
1001326b:	push   0x1
1001326d:	mov    ecx,edi
1001326f:	call   0x100012f0
10013274:	pop    esi
10013275:	ret    
10013276:	push   0x0
10013278:	mov    eax,0x1005fdb6
1001327d:	call   0x10059a35
10013282:	mov    esi,DWORD PTR [ebp+0x8]
10013285:	push   edi
10013286:	mov    ecx,esi
10013288:	call   0x100011a7
1001328d:	and    DWORD PTR [ebp-0x4],0x0
10013291:	lea    eax,[edi+0x1c]
10013294:	push   eax
10013295:	lea    ecx,[esi+0x1c]
10013298:	call   0x100011a7
1001329d:	lea    eax,[edi+0x38]
100132a0:	push   eax
100132a1:	lea    ecx,[esi+0x38]
100132a4:	mov    BYTE PTR [ebp-0x4],0x1
100132a8:	call   0x100011a7
100132ad:	lea    eax,[edi+0x54]
100132b0:	push   eax
100132b1:	lea    ecx,[esi+0x54]
100132b4:	mov    BYTE PTR [ebp-0x4],0x2
100132b8:	call   0x100011a7
100132bd:	mov    eax,DWORD PTR [edi+0x70]
100132c0:	mov    DWORD PTR [esi+0x70],eax
100132c3:	mov    eax,DWORD PTR [edi+0x78]
100132c6:	mov    DWORD PTR [esi+0x78],eax
100132c9:	mov    eax,DWORD PTR [edi+0x7c]
100132cc:	mov    DWORD PTR [esi+0x7c],eax
100132cf:	mov    eax,DWORD PTR [edi+0x80]
100132d5:	mov    DWORD PTR [esi+0x80],eax
100132db:	mov    eax,DWORD PTR [edi+0x84]
100132e1:	mov    DWORD PTR [esi+0x84],eax
100132e7:	mov    eax,esi
100132e9:	call   0x10059b0d
100132ee:	ret    0x4
100132f1:	push   ebp
100132f2:	mov    ebp,esp
100132f4:	and    esp,0xfffffff8
100132f7:	sub    esp,0x14
100132fa:	mov    ecx,DWORD PTR [ebx+0x4]
100132fd:	mov    eax,DWORD PTR [ecx+0x4]
10013300:	cmp    BYTE PTR [eax+0x11],0x0
10013304:	push   esi
10013305:	mov    DWORD PTR [esp+0xc],ecx
10013309:	mov    BYTE PTR [esp+0x8],0x1
1001330e:	jne    0x10013335
10013310:	mov    ecx,DWORD PTR [ebp+0x8]
10013313:	mov    esi,DWORD PTR [ecx]
10013315:	cmp    esi,DWORD PTR [eax+0xc]
10013318:	mov    DWORD PTR [esp+0xc],eax
1001331c:	setb   BYTE PTR [esp+0x8]
10013321:	cmp    BYTE PTR [esp+0x8],0x0
10013326:	je     0x1001332c
10013328:	mov    eax,DWORD PTR [eax]
1001332a:	jmp    0x1001332f
1001332c:	mov    eax,DWORD PTR [eax+0x8]
1001332f:	cmp    BYTE PTR [eax+0x11],0x0
10013333:	je     0x10013315
10013335:	cmp    BYTE PTR [esp+0x8],0x0
1001333a:	mov    eax,DWORD PTR [esp+0xc]
1001333e:	mov    DWORD PTR [esp+0x14],eax
10013342:	mov    DWORD PTR [esp+0x10],ebx
10013346:	je     0x1001337a
10013348:	mov    ecx,DWORD PTR [ebx+0x4]
1001334b:	cmp    eax,DWORD PTR [ecx]
1001334d:	jne    0x1001336d
1001334f:	push   DWORD PTR [ebp+0x8]
10013352:	lea    ecx,[esp+0x14]
10013356:	push   0x1
10013358:	push   ecx
10013359:	mov    ecx,eax
1001335b:	mov    esi,ebx
1001335d:	call   0x1001376c
10013362:	mov    ecx,DWORD PTR [eax]
10013364:	mov    eax,DWORD PTR [eax+0x4]
10013367:	mov    BYTE PTR [edi+0x8],0x1
1001336b:	jmp    0x1001339c
1001336d:	lea    esi,[esp+0x10]
10013371:	call   0x10013df1
10013376:	mov    eax,DWORD PTR [esp+0x14]
1001337a:	mov    edx,DWORD PTR [eax+0xc]
1001337d:	mov    ecx,DWORD PTR [ebp+0x8]
10013380:	cmp    edx,DWORD PTR [ecx]
10013382:	jae    0x10013394
10013384:	push   ecx
10013385:	push   DWORD PTR [esp+0xc]
10013389:	mov    ecx,DWORD PTR [esp+0x14]
1001338d:	lea    eax,[esp+0x18]
10013391:	push   eax
10013392:	jmp    0x1001335b
10013394:	mov    ecx,DWORD PTR [esp+0x10]
10013398:	mov    BYTE PTR [edi+0x8],0x0
1001339c:	mov    DWORD PTR [edi+0x4],eax
1001339f:	mov    DWORD PTR [edi],ecx
100133a1:	mov    eax,edi
100133a3:	pop    esi
100133a4:	mov    esp,ebp
100133a6:	pop    ebp
100133a7:	ret    0x4
100133aa:	push   ebp
100133ab:	mov    ebp,esp
100133ad:	and    esp,0xfffffff8
100133b0:	sub    esp,0x14
100133b3:	push   ebx
100133b4:	push   esi
100133b5:	push   edi
100133b6:	mov    edi,eax
100133b8:	mov    ecx,DWORD PTR [edi+0x4]
100133bb:	mov    eax,DWORD PTR [ecx+0x4]
100133be:	cmp    BYTE PTR [eax+0x11],0x0
100133c2:	mov    DWORD PTR [esp+0x14],ecx
100133c6:	jne    0x100133e0
100133c8:	mov    ecx,DWORD PTR [edx]
100133ca:	cmp    ecx,DWORD PTR [eax+0xc]
100133cd:	jae    0x100133d7
100133cf:	mov    DWORD PTR [esp+0x14],eax
100133d3:	mov    eax,DWORD PTR [eax]
100133d5:	jmp    0x100133da
100133d7:	mov    eax,DWORD PTR [eax+0x8]
100133da:	cmp    BYTE PTR [eax+0x11],0x0
100133de:	je     0x100133ca
100133e0:	mov    ecx,DWORD PTR [edi+0x4]
100133e3:	mov    eax,DWORD PTR [ecx+0x4]
100133e6:	cmp    BYTE PTR [eax+0x11],0x0
100133ea:	mov    ebx,ecx
100133ec:	jne    0x10013404
100133ee:	mov    ecx,DWORD PTR [edx]
100133f0:	cmp    DWORD PTR [eax+0xc],ecx
100133f3:	jae    0x100133fa
100133f5:	mov    eax,DWORD PTR [eax+0x8]
100133f8:	jmp    0x100133fe
100133fa:	mov    ebx,eax
100133fc:	mov    eax,DWORD PTR [eax]
100133fe:	cmp    BYTE PTR [eax+0x11],0x0
10013402:	je     0x100133f0
10013404:	and    DWORD PTR [esp+0x10],0x0
10013409:	mov    DWORD PTR [esp+0x18],edi
1001340d:	mov    DWORD PTR [esp+0x1c],ebx
10013411:	cmp    DWORD PTR [esp+0x18],0x0
10013416:	je     0x1001341e
10013418:	cmp    DWORD PTR [esp+0x18],edi
1001341c:	je     0x10013423
1001341e:	call   0x100433b0
10013423:	mov    eax,DWORD PTR [esp+0x14]
10013427:	cmp    DWORD PTR [esp+0x1c],eax
1001342b:	je     0x1001343c
1001342d:	inc    DWORD PTR [esp+0x10]
10013431:	lea    esi,[esp+0x18]
10013435:	call   0x10001e71
1001343a:	jmp    0x10013411
1001343c:	push   eax
1001343d:	push   edi
1001343e:	push   ebx
1001343f:	push   edi
10013440:	lea    ebx,[esp+0x28]
10013444:	call   0x10001616
10013449:	mov    eax,DWORD PTR [esp+0x10]
1001344d:	pop    edi
1001344e:	pop    esi
1001344f:	pop    ebx
10013450:	mov    esp,ebp
10013452:	pop    ebp
10013453:	ret    
10013454:	push   ebp
10013455:	mov    ebp,esp
10013457:	and    esp,0xfffffff8
1001345a:	push   0xffffffff
1001345c:	push   0x10061e43
10013461:	mov    eax,fs:0x0
10013467:	push   eax
10013468:	sub    esp,0x40
1001346b:	push   ebx
1001346c:	push   esi
1001346d:	push   edi
1001346e:	mov    eax,ds:0x1007e030
10013473:	xor    eax,esp
10013475:	push   eax
10013476:	lea    eax,[esp+0x50]
1001347a:	mov    fs:0x0,eax
10013480:	mov    edi,DWORD PTR [ebp+0x8]
10013483:	mov    ecx,DWORD PTR [edi+0x1c]
10013486:	mov    edx,DWORD PTR [edi+0x20]
10013489:	mov    eax,DWORD PTR [edi+0x8]
1001348c:	add    edx,ecx
1001348e:	cmp    eax,edx
10013490:	jbe    0x100135c9
10013496:	and    DWORD PTR [esp+0x14],0x0
1001349b:	test   ecx,ecx
1001349d:	lea    ebx,[edi+0xc]
100134a0:	mov    eax,DWORD PTR [ebx+0x4]
100134a3:	mov    eax,DWORD PTR [eax]
100134a5:	mov    DWORD PTR [esp+0x18],ebx
100134a9:	mov    DWORD PTR [esp+0x1c],ebx
100134ad:	mov    DWORD PTR [esp+0x20],eax
100134b1:	je     0x100134c9
100134b3:	lea    esi,[esp+0x1c]
100134b7:	call   0x10001e71
100134bc:	inc    DWORD PTR [esp+0x14]
100134c0:	mov    eax,DWORD PTR [esp+0x14]
100134c4:	cmp    eax,DWORD PTR [edi+0x1c]
100134c7:	jne    0x100134b3
100134c9:	lea    esi,[esp+0x1c]
100134cd:	call   0x1002088e
100134d2:	mov    eax,DWORD PTR [eax]
100134d4:	mov    DWORD PTR [esp+0x14],eax
100134d8:	call   0x10014080
100134dd:	mov    DWORD PTR [esp+0x38],eax
100134e1:	mov    BYTE PTR [eax+0x11],0x1
100134e5:	mov    eax,DWORD PTR [esp+0x38]
100134e9:	mov    DWORD PTR [eax+0x4],eax
100134ec:	mov    eax,DWORD PTR [esp+0x38]
100134f0:	mov    DWORD PTR [eax],eax
100134f2:	mov    eax,DWORD PTR [esp+0x38]
100134f6:	mov    DWORD PTR [eax+0x8],eax
100134f9:	and    DWORD PTR [esp+0x3c],0x0
100134fe:	and    DWORD PTR [esp+0x58],0x0
10013503:	mov    eax,DWORD PTR [edi+0x4]
10013506:	mov    esi,DWORD PTR [eax]
10013508:	mov    DWORD PTR [esp+0x1c],edi
1001350c:	mov    DWORD PTR [esp+0x20],esi
10013510:	cmp    DWORD PTR [esp+0x1c],0x0
10013515:	mov    eax,DWORD PTR [edi+0x4]
10013518:	mov    DWORD PTR [esp+0x28],eax
1001351c:	je     0x10013524
1001351e:	cmp    DWORD PTR [esp+0x1c],edi
10013522:	je     0x10013529
10013524:	call   0x100433b0
10013529:	cmp    esi,DWORD PTR [esp+0x28]
1001352d:	je     0x1001359f
1001352f:	cmp    DWORD PTR [esp+0x1c],0x0
10013534:	jne    0x1001353b
10013536:	call   0x100433b0
1001353b:	mov    eax,DWORD PTR [esp+0x1c]
1001353f:	cmp    esi,DWORD PTR [eax+0x4]
10013542:	jne    0x10013549
10013544:	call   0x100433b0
10013549:	lea    ecx,[esi+0xb8]
1001354f:	mov    eax,DWORD PTR [ecx]
10013551:	cmp    eax,DWORD PTR [esp+0x14]
10013555:	jae    0x10013572
10013557:	push   esi
10013558:	push   DWORD PTR [esp+0x20]
1001355c:	lea    eax,[esp+0x34]
10013560:	push   eax
10013561:	push   edi
10013562:	call   0x100138b9
10013567:	mov    ecx,DWORD PTR [eax]
10013569:	mov    esi,DWORD PTR [eax+0x4]
1001356c:	mov    DWORD PTR [esp+0x1c],ecx
10013570:	jmp    0x1001350c
10013572:	sub    eax,DWORD PTR [esp+0x14]
10013576:	push   ecx
10013577:	lea    edi,[esp+0x44]
1001357b:	lea    ebx,[esp+0x38]
1001357f:	mov    DWORD PTR [ecx],eax
10013581:	call   0x100132f1
10013586:	lea    esi,[esp+0x1c]
1001358a:	call   0x10013d98
1001358f:	mov    esi,DWORD PTR [esp+0x20]
10013593:	mov    ebx,DWORD PTR [esp+0x18]
10013597:	mov    edi,DWORD PTR [ebp+0x8]
1001359a:	jmp    0x10013510
1001359f:	mov    eax,DWORD PTR [ebx+0x4]
100135a2:	mov    ecx,DWORD PTR [esp+0x38]
100135a6:	mov    DWORD PTR [ebx+0x4],ecx
100135a9:	mov    ecx,DWORD PTR [esp+0x3c]
100135ad:	mov    DWORD PTR [esp+0x38],eax
100135b1:	mov    eax,DWORD PTR [ebx+0x8]
100135b4:	or     DWORD PTR [esp+0x58],0xffffffff
100135b9:	mov    DWORD PTR [esp+0x3c],eax
100135bd:	lea    eax,[esp+0x34]
100135c1:	mov    DWORD PTR [ebx+0x8],ecx
100135c4:	call   0x10001496
100135c9:	mov    ecx,DWORD PTR [esp+0x50]
100135cd:	mov    DWORD PTR fs:0x0,ecx
100135d4:	pop    ecx
100135d5:	pop    edi
100135d6:	pop    esi
100135d7:	pop    ebx
100135d8:	mov    esp,ebp
100135da:	pop    ebp
100135db:	ret    0x4
100135de:	push   ebp
100135df:	mov    ebp,esp
100135e1:	and    esp,0xfffffff8
100135e4:	push   ecx
100135e5:	push   ecx
100135e6:	mov    edx,DWORD PTR [ebp+0x8]
100135e9:	mov    eax,DWORD PTR [edx+0x4]
100135ec:	push   ebx
100135ed:	push   esi
100135ee:	mov    esi,DWORD PTR [eax+0x4]
100135f1:	cmp    BYTE PTR [esi+0xc1],0x0
100135f8:	mov    ebx,eax
100135fa:	mov    al,0x1
100135fc:	mov    BYTE PTR [esp+0x8],al
10013600:	jne    0x1001362a
10013602:	mov    ecx,DWORD PTR [ebp+0xc]
10013605:	lea    eax,[esi+0x10]
10013608:	mov    ebx,esi
1001360a:	call   0x1000765d
1001360f:	test   al,al
10013611:	mov    BYTE PTR [esp+0x8],al
10013615:	je     0x1001361b
10013617:	mov    esi,DWORD PTR [esi]
10013619:	jmp    0x1001361e
1001361b:	mov    esi,DWORD PTR [esi+0x8]
1001361e:	cmp    BYTE PTR [esi+0xc1],0x0
10013625:	je     0x10013602
10013627:	mov    edx,DWORD PTR [ebp+0x8]
1001362a:	test   al,al
1001362c:	mov    esi,ebx
1001362e:	je     0x100136bc
10013634:	mov    eax,DWORD PTR [edx+0x4]
10013637:	cmp    ebx,DWORD PTR [eax]
10013639:	jne    0x10013661
1001363b:	push   DWORD PTR [ebp+0xc]
1001363e:	mov    esi,edx
10013640:	push   0x1
10013642:	lea    eax,[esp+0x10]
10013646:	mov    ecx,ebx
10013648:	push   eax
10013649:	call   0x10013be3
1001364e:	mov    ecx,DWORD PTR [eax]
10013650:	mov    eax,DWORD PTR [eax+0x4]
10013653:	mov    DWORD PTR [edi],ecx
10013655:	mov    DWORD PTR [edi+0x4],eax
10013658:	mov    BYTE PTR [edi+0x8],0x1
1001365c:	jmp    0x100136e6
10013661:	cmp    BYTE PTR [ebx+0xc1],0x0
10013668:	je     0x10013678
1001366a:	mov    esi,DWORD PTR [ebx+0x8]
1001366d:	cmp    BYTE PTR [esi+0xc1],0x0
10013674:	je     0x100136bc
10013676:	jmp    0x100136b3
10013678:	mov    eax,DWORD PTR [ebx]
1001367a:	cmp    BYTE PTR [eax+0xc1],0x0
10013681:	jne    0x10013693
10013683:	mov    esi,eax
10013685:	mov    eax,DWORD PTR [esi+0x8]
10013688:	cmp    BYTE PTR [eax+0xc1],0x0
1001368f:	je     0x10013683
10013691:	jmp    0x100136bc
10013693:	mov    eax,DWORD PTR [ebx+0x4]
10013696:	jmp    0x100136a1
10013698:	cmp    esi,DWORD PTR [eax]
1001369a:	jne    0x100136aa
1001369c:	mov    esi,eax
1001369e:	mov    eax,DWORD PTR [eax+0x4]
100136a1:	cmp    BYTE PTR [eax+0xc1],0x0
100136a8:	je     0x10013698
100136aa:	cmp    BYTE PTR [esi+0xc1],0x0
100136b1:	je     0x100136ba
100136b3:	call   0x100433b0
100136b8:	jmp    0x100136bc
100136ba:	mov    esi,eax
100136bc:	mov    eax,DWORD PTR [ebp+0xc]
100136bf:	lea    ecx,[esi+0x10]
100136c2:	call   0x1000765d
100136c7:	test   al,al
100136c9:	je     0x100136da
100136cb:	push   DWORD PTR [ebp+0xc]
100136ce:	mov    esi,DWORD PTR [ebp+0x8]
100136d1:	push   DWORD PTR [esp+0xc]
100136d5:	jmp    0x10013642
100136da:	mov    eax,DWORD PTR [ebp+0x8]
100136dd:	mov    DWORD PTR [edi],eax
100136df:	mov    DWORD PTR [edi+0x4],esi
100136e2:	mov    BYTE PTR [edi+0x8],0x0
100136e6:	pop    esi
100136e7:	mov    eax,edi
100136e9:	pop    ebx
100136ea:	mov    esp,ebp
100136ec:	pop    ebp
100136ed:	ret    0x8
100136f0:	push   ebp
100136f1:	mov    ebp,esp
100136f3:	sub    esp,0x18
100136f6:	push   edi
100136f7:	push   DWORD PTR [ebp+0x8]
100136fa:	mov    eax,esi
100136fc:	call   0x10013f6e
10013701:	test   esi,esi
10013703:	mov    edi,eax
10013705:	mov    DWORD PTR [ebp-0x8],edi
10013708:	jne    0x1001370f
1001370a:	call   0x100433b0
1001370f:	cmp    edi,DWORD PTR [esi+0x4]
10013712:	mov    DWORD PTR [ebp-0xc],esi
10013715:	je     0x1001372b
10013717:	mov    ecx,DWORD PTR [ebp+0x8]
1001371a:	lea    eax,[edi+0x10]
1001371d:	call   0x1000765d
10013722:	test   al,al
10013724:	jne    0x1001372b
10013726:	lea    eax,[ebp-0xc]
10013729:	jmp    0x10013737
1001372b:	mov    eax,DWORD PTR [esi+0x4]
1001372e:	mov    DWORD PTR [ebp-0x10],eax
10013731:	mov    DWORD PTR [ebp-0x14],esi
10013734:	lea    eax,[ebp-0x14]
10013737:	mov    ecx,DWORD PTR [eax]
10013739:	mov    eax,DWORD PTR [eax+0x4]
1001373c:	mov    DWORD PTR [ebx+0x4],eax
1001373f:	mov    DWORD PTR [ebx],ecx
10013741:	mov    eax,ebx
10013743:	pop    edi
10013744:	leave  
10013745:	ret    0x4
10013748:	push   ebp
10013749:	mov    ebp,esp
1001374b:	push   ecx
1001374c:	push   ecx
1001374d:	mov    ecx,DWORD PTR [eax+0x4]
10013750:	mov    eax,DWORD PTR [eax+0x8]
10013753:	push   esi
10013754:	lea    esi,[ebp-0x8]
10013757:	mov    DWORD PTR [ebp-0x8],ecx
1001375a:	mov    DWORD PTR [ebp-0x4],eax
1001375d:	call   0x10013df1
10013762:	mov    esi,eax
10013764:	call   0x1002088e
10013769:	pop    esi
1001376a:	leave  
1001376b:	ret    
1001376c:	push   0x48
1001376e:	mov    eax,0x100605b3
10013773:	call   0x10059a35
10013778:	mov    edi,ecx
1001377a:	cmp    DWORD PTR [esi+0x8],0x3ffffffe
10013781:	jb     0x100137b5
10013783:	push   0x1006d030
10013788:	lea    ecx,[ebp-0x2c]
1001378b:	call   0x100011cd
10013790:	and    DWORD PTR [ebp-0x4],0x0
10013794:	lea    eax,[ebp-0x2c]
10013797:	push   eax
10013798:	lea    ecx,[ebp-0x54]
1001379b:	call   0x10001077
100137a0:	push   0x10074da0
100137a5:	lea    eax,[ebp-0x54]
100137a8:	push   eax
100137a9:	mov    DWORD PTR [ebp-0x54],0x1006b96c
100137b0:	call   0x100479b4
100137b5:	mov    eax,DWORD PTR [esi+0x4]
100137b8:	push   0x0
100137ba:	push   DWORD PTR [ebp+0x10]
100137bd:	push   eax
100137be:	push   edi
100137bf:	push   eax
100137c0:	call   0x10013e73
100137c5:	inc    DWORD PTR [esi+0x8]
100137c8:	mov    ebx,eax
100137ca:	mov    eax,DWORD PTR [esi+0x4]
100137cd:	cmp    edi,eax
100137cf:	jne    0x100137de
100137d1:	mov    DWORD PTR [eax+0x4],ebx
100137d4:	mov    eax,DWORD PTR [esi+0x4]
100137d7:	mov    DWORD PTR [eax],ebx
100137d9:	mov    eax,DWORD PTR [esi+0x4]
100137dc:	jmp    0x100137fc
100137de:	cmp    BYTE PTR [ebp+0xc],0x0
100137e2:	je     0x100137f1
100137e4:	mov    DWORD PTR [edi],ebx
100137e6:	mov    eax,DWORD PTR [esi+0x4]
100137e9:	cmp    edi,DWORD PTR [eax]
100137eb:	jne    0x100137ff
100137ed:	mov    DWORD PTR [eax],ebx
100137ef:	jmp    0x100137ff
100137f1:	mov    DWORD PTR [edi+0x8],ebx
100137f4:	mov    eax,DWORD PTR [esi+0x4]
100137f7:	cmp    edi,DWORD PTR [eax+0x8]
100137fa:	jne    0x100137ff
100137fc:	mov    DWORD PTR [eax+0x8],ebx
100137ff:	mov    edi,ebx
10013801:	lea    eax,[ebx+0x4]
10013804:	jmp    0x10013893
10013809:	mov    ecx,DWORD PTR [eax]
1001380b:	mov    edx,DWORD PTR [ecx+0x4]
1001380e:	cmp    ecx,DWORD PTR [edx]
10013810:	jne    0x10013847
10013812:	mov    edx,DWORD PTR [edx+0x8]
10013815:	cmp    BYTE PTR [edx+0x10],0x0
10013819:	je     0x1001384f
1001381b:	cmp    edi,DWORD PTR [ecx+0x8]
1001381e:	jne    0x10013828
10013820:	push   esi
10013821:	mov    edi,ecx
10013823:	call   0x10001cce
10013828:	mov    eax,DWORD PTR [edi+0x4]
1001382b:	mov    BYTE PTR [eax+0x10],0x1
1001382f:	mov    eax,DWORD PTR [edi+0x4]
10013832:	mov    eax,DWORD PTR [eax+0x4]
10013835:	mov    BYTE PTR [eax+0x10],0x0
10013839:	mov    eax,DWORD PTR [edi+0x4]
1001383c:	mov    ecx,DWORD PTR [eax+0x4]
1001383f:	push   esi
10013840:	call   0x10001d0e
10013845:	jmp    0x10013890
10013847:	mov    edx,DWORD PTR [edx]
10013849:	cmp    BYTE PTR [edx+0x10],0x0
1001384d:	jne    0x10013867
1001384f:	mov    BYTE PTR [ecx+0x10],0x1
10013853:	mov    BYTE PTR [edx+0x10],0x1
10013857:	mov    ecx,DWORD PTR [eax]
10013859:	mov    ecx,DWORD PTR [ecx+0x4]
1001385c:	mov    BYTE PTR [ecx+0x10],0x0
10013860:	mov    eax,DWORD PTR [eax]
10013862:	mov    edi,DWORD PTR [eax+0x4]
10013865:	jmp    0x10013890
10013867:	cmp    edi,DWORD PTR [ecx]
10013869:	jne    0x10013873
1001386b:	push   esi
1001386c:	mov    edi,ecx
1001386e:	call   0x10001d0e
10013873:	mov    eax,DWORD PTR [edi+0x4]
10013876:	mov    BYTE PTR [eax+0x10],0x1
1001387a:	mov    eax,DWORD PTR [edi+0x4]
1001387d:	mov    eax,DWORD PTR [eax+0x4]
10013880:	mov    BYTE PTR [eax+0x10],0x0
10013884:	mov    eax,DWORD PTR [edi+0x4]
10013887:	mov    ecx,DWORD PTR [eax+0x4]
1001388a:	push   esi
1001388b:	call   0x10001cce
10013890:	lea    eax,[edi+0x4]
10013893:	mov    ecx,DWORD PTR [eax]
10013895:	cmp    BYTE PTR [ecx+0x10],0x0
10013899:	je     0x10013809
1001389f:	mov    eax,DWORD PTR [esi+0x4]
100138a2:	mov    eax,DWORD PTR [eax+0x4]
100138a5:	mov    BYTE PTR [eax+0x10],0x1
100138a9:	mov    eax,DWORD PTR [ebp+0x8]
100138ac:	mov    DWORD PTR [eax+0x4],ebx
100138af:	mov    DWORD PTR [eax],esi
100138b1:	call   0x10059b0d
100138b6:	ret    0xc
100138b9:	push   0x4c
100138bb:	mov    eax,0x10060d92
100138c0:	call   0x10059a35
100138c5:	mov    edi,DWORD PTR [ebp+0x14]
100138c8:	cmp    BYTE PTR [edi+0xc1],0x0
100138cf:	je     0x10013903
100138d1:	push   0x1006ccec
100138d6:	lea    ecx,[ebp-0x30]
100138d9:	call   0x100011cd
100138de:	and    DWORD PTR [ebp-0x4],0x0
100138e2:	lea    eax,[ebp-0x30]
100138e5:	push   eax
100138e6:	lea    ecx,[ebp-0x58]
100138e9:	call   0x10001077
100138ee:	push   0x10074cc0
100138f3:	lea    eax,[ebp-0x58]
100138f6:	push   eax
100138f7:	mov    DWORD PTR [ebp-0x58],0x1006b978
100138fe:	call   0x100479b4
10013903:	lea    esi,[ebp+0x10]
10013906:	call   0x10013d98
1001390b:	mov    ecx,DWORD PTR [edi]
1001390d:	cmp    BYTE PTR [ecx+0xc1],0x0
10013914:	je     0x1001391b
10013916:	mov    ebx,DWORD PTR [edi+0x8]
10013919:	jmp    0x10013939
1001391b:	mov    eax,DWORD PTR [edi+0x8]
1001391e:	cmp    BYTE PTR [eax+0xc1],0x0
10013925:	je     0x1001392b
10013927:	mov    ebx,ecx
10013929:	jmp    0x10013939
1001392b:	mov    eax,DWORD PTR [ebp+0x14]
1001392e:	cmp    eax,edi
10013930:	mov    ebx,DWORD PTR [eax+0x8]
10013933:	jne    0x100139c2
10013939:	cmp    BYTE PTR [ebx+0xc1],0x0
10013940:	mov    esi,DWORD PTR [edi+0x4]
10013943:	jne    0x10013948
10013945:	mov    DWORD PTR [ebx+0x4],esi
10013948:	mov    ecx,DWORD PTR [ebp+0x8]
1001394b:	mov    eax,DWORD PTR [ecx+0x4]
1001394e:	cmp    DWORD PTR [eax+0x4],edi
10013951:	jne    0x10013958
10013953:	mov    DWORD PTR [eax+0x4],ebx
10013956:	jmp    0x10013963
10013958:	cmp    DWORD PTR [esi],edi
1001395a:	jne    0x10013960
1001395c:	mov    DWORD PTR [esi],ebx
1001395e:	jmp    0x10013963
10013960:	mov    DWORD PTR [esi+0x8],ebx
10013963:	mov    edx,DWORD PTR [ecx+0x4]
10013966:	cmp    DWORD PTR [edx],edi
10013968:	jne    0x1001398c
1001396a:	cmp    BYTE PTR [ebx+0xc1],0x0
10013971:	je     0x10013977
10013973:	mov    ecx,esi
10013975:	jmp    0x1001398a
10013977:	mov    eax,DWORD PTR [ebx]
10013979:	mov    ecx,ebx
1001397b:	jmp    0x10013981
1001397d:	mov    ecx,eax
1001397f:	mov    eax,DWORD PTR [ecx]
10013981:	cmp    BYTE PTR [eax+0xc1],0x0
10013988:	je     0x1001397d
1001398a:	mov    DWORD PTR [edx],ecx
1001398c:	mov    eax,DWORD PTR [ebp+0x8]
1001398f:	mov    edx,DWORD PTR [eax+0x4]
10013992:	cmp    DWORD PTR [edx+0x8],edi
10013995:	jne    0x10013a2c
1001399b:	cmp    BYTE PTR [ebx+0xc1],0x0
100139a2:	je     0x100139a8
100139a4:	mov    ecx,esi
100139a6:	jmp    0x100139bd
100139a8:	mov    eax,DWORD PTR [ebx+0x8]
100139ab:	mov    ecx,ebx
100139ad:	jmp    0x100139b4
100139af:	mov    ecx,eax
100139b1:	mov    eax,DWORD PTR [ecx+0x8]
100139b4:	cmp    BYTE PTR [eax+0xc1],0x0
100139bb:	je     0x100139af
100139bd:	mov    DWORD PTR [edx+0x8],ecx
100139c0:	jmp    0x10013a2c
100139c2:	mov    DWORD PTR [ecx+0x4],eax
100139c5:	mov    ecx,DWORD PTR [edi]
100139c7:	mov    DWORD PTR [eax],ecx
100139c9:	cmp    eax,DWORD PTR [edi+0x8]
100139cc:	jne    0x100139d2
100139ce:	mov    esi,eax
100139d0:	jmp    0x100139ef
100139d2:	cmp    BYTE PTR [ebx+0xc1],0x0
100139d9:	mov    esi,DWORD PTR [eax+0x4]
100139dc:	jne    0x100139e1
100139de:	mov    DWORD PTR [ebx+0x4],esi
100139e1:	mov    DWORD PTR [esi],ebx
100139e3:	mov    ecx,DWORD PTR [edi+0x8]
100139e6:	mov    DWORD PTR [eax+0x8],ecx
100139e9:	mov    ecx,DWORD PTR [edi+0x8]
100139ec:	mov    DWORD PTR [ecx+0x4],eax
100139ef:	mov    ecx,DWORD PTR [ebp+0x8]
100139f2:	mov    ecx,DWORD PTR [ecx+0x4]
100139f5:	cmp    DWORD PTR [ecx+0x4],edi
100139f8:	jne    0x100139ff
100139fa:	mov    DWORD PTR [ecx+0x4],eax
100139fd:	jmp    0x10013a0d
100139ff:	mov    ecx,DWORD PTR [edi+0x4]
10013a02:	cmp    DWORD PTR [ecx],edi
10013a04:	jne    0x10013a0a
10013a06:	mov    DWORD PTR [ecx],eax
10013a08:	jmp    0x10013a0d
10013a0a:	mov    DWORD PTR [ecx+0x8],eax
10013a0d:	mov    ecx,DWORD PTR [edi+0x4]
10013a10:	mov    DWORD PTR [eax+0x4],ecx
10013a13:	add    eax,0xc0
10013a18:	mov    dl,BYTE PTR [eax]
10013a1a:	lea    ecx,[edi+0xc0]
10013a20:	mov    BYTE PTR [ebp-0x11],dl
10013a23:	mov    dl,BYTE PTR [ecx]
10013a25:	mov    BYTE PTR [eax],dl
10013a27:	mov    al,BYTE PTR [ebp-0x11]
10013a2a:	mov    BYTE PTR [ecx],al
10013a2c:	cmp    BYTE PTR [edi+0xc0],0x1
10013a33:	jne    0x10013ba2
10013a39:	jmp    0x10013b40
10013a3e:	cmp    BYTE PTR [ebx+0xc0],0x1
10013a45:	jne    0x10013b9b
10013a4b:	mov    ecx,DWORD PTR [esi]
10013a4d:	cmp    ebx,ecx
10013a4f:	jne    0x10013af3
10013a55:	mov    ecx,DWORD PTR [esi+0x8]
10013a58:	lea    eax,[ecx+0xc0]
10013a5e:	cmp    BYTE PTR [eax],0x0
10013a61:	jne    0x10013a7a
10013a63:	push   DWORD PTR [ebp+0x8]
10013a66:	mov    BYTE PTR [eax],0x1
10013a69:	mov    ecx,esi
10013a6b:	mov    BYTE PTR [esi+0xc0],0x0
10013a72:	call   0x10013fa3
10013a77:	mov    ecx,DWORD PTR [esi+0x8]
10013a7a:	cmp    BYTE PTR [ecx+0xc1],0x0
10013a81:	jne    0x10013b3b
10013a87:	mov    eax,DWORD PTR [ecx]
10013a89:	cmp    BYTE PTR [eax+0xc0],0x1
10013a90:	jne    0x10013aa2
10013a92:	mov    eax,DWORD PTR [ecx+0x8]
10013a95:	cmp    BYTE PTR [eax+0xc0],0x1
10013a9c:	je     0x10013b34
10013aa2:	mov    eax,DWORD PTR [ecx+0x8]
10013aa5:	cmp    BYTE PTR [eax+0xc0],0x1
10013aac:	jne    0x10013ac9
10013aae:	mov    eax,DWORD PTR [ecx]
10013ab0:	push   DWORD PTR [ebp+0x8]
10013ab3:	mov    BYTE PTR [eax+0xc0],0x1
10013aba:	mov    BYTE PTR [ecx+0xc0],0x0
10013ac1:	call   0x10013fe6
10013ac6:	mov    ecx,DWORD PTR [esi+0x8]
10013ac9:	push   DWORD PTR [ebp+0x8]
10013acc:	lea    eax,[esi+0xc0]
10013ad2:	mov    dl,BYTE PTR [eax]
10013ad4:	mov    BYTE PTR [ecx+0xc0],dl
10013ada:	mov    BYTE PTR [eax],0x1
10013add:	mov    eax,DWORD PTR [ecx+0x8]
10013ae0:	mov    ecx,esi
10013ae2:	mov    BYTE PTR [eax+0xc0],0x1
10013ae9:	call   0x10013fa3
10013aee:	jmp    0x10013b9b
10013af3:	lea    eax,[ecx+0xc0]
10013af9:	cmp    BYTE PTR [eax],0x0
10013afc:	jne    0x10013b14
10013afe:	push   DWORD PTR [ebp+0x8]
10013b01:	mov    BYTE PTR [eax],0x1
10013b04:	mov    ecx,esi
10013b06:	mov    BYTE PTR [esi+0xc0],0x0
10013b0d:	call   0x10013fe6
10013b12:	mov    ecx,DWORD PTR [esi]
10013b14:	cmp    BYTE PTR [ecx+0xc1],0x0
10013b1b:	jne    0x10013b3b
10013b1d:	mov    eax,DWORD PTR [ecx+0x8]
10013b20:	cmp    BYTE PTR [eax+0xc0],0x1
10013b27:	jne    0x10013b51
10013b29:	mov    eax,DWORD PTR [ecx]
10013b2b:	cmp    BYTE PTR [eax+0xc0],0x1
10013b32:	jne    0x10013b51
10013b34:	mov    BYTE PTR [ecx+0xc0],0x0
10013b3b:	mov    ebx,esi
10013b3d:	mov    esi,DWORD PTR [esi+0x4]
10013b40:	mov    eax,DWORD PTR [ebp+0x8]
10013b43:	mov    eax,DWORD PTR [eax+0x4]
10013b46:	cmp    ebx,DWORD PTR [eax+0x4]
10013b49:	jne    0x10013a3e
10013b4f:	jmp    0x10013b9b
10013b51:	mov    eax,DWORD PTR [ecx]
10013b53:	cmp    BYTE PTR [eax+0xc0],0x1
10013b5a:	jne    0x10013b77
10013b5c:	mov    eax,DWORD PTR [ecx+0x8]
10013b5f:	push   DWORD PTR [ebp+0x8]
10013b62:	mov    BYTE PTR [eax+0xc0],0x1
10013b69:	mov    BYTE PTR [ecx+0xc0],0x0
10013b70:	call   0x10013fa3
10013b75:	mov    ecx,DWORD PTR [esi]
10013b77:	push   DWORD PTR [ebp+0x8]
10013b7a:	lea    eax,[esi+0xc0]
10013b80:	mov    dl,BYTE PTR [eax]
10013b82:	mov    BYTE PTR [ecx+0xc0],dl
10013b88:	mov    BYTE PTR [eax],0x1
10013b8b:	mov    eax,DWORD PTR [ecx]
10013b8d:	mov    ecx,esi
10013b8f:	mov    BYTE PTR [eax+0xc0],0x1
10013b96:	call   0x10013fe6
10013b9b:	mov    BYTE PTR [ebx+0xc0],0x1
10013ba2:	lea    ebx,[edi+0x10]
10013ba5:	lea    esi,[ebx+0x20]
10013ba8:	call   0x100033ac
10013bad:	push   0x0
10013baf:	push   0x1
10013bb1:	mov    ecx,ebx
10013bb3:	call   0x100012f0
10013bb8:	push   edi
10013bb9:	call   0x10042e92
10013bbe:	pop    ecx
10013bbf:	mov    ecx,DWORD PTR [ebp+0x8]
10013bc2:	mov    eax,DWORD PTR [ecx+0x8]
10013bc5:	test   eax,eax
10013bc7:	jbe    0x10013bcd
10013bc9:	dec    eax
10013bca:	mov    DWORD PTR [ecx+0x8],eax
10013bcd:	mov    ecx,DWORD PTR [ebp+0x10]
10013bd0:	mov    eax,DWORD PTR [ebp+0xc]
10013bd3:	mov    DWORD PTR [eax],ecx
10013bd5:	mov    ecx,DWORD PTR [ebp+0x14]
10013bd8:	mov    DWORD PTR [eax+0x4],ecx
10013bdb:	call   0x10059b0d
10013be0:	ret    0x10
10013be3:	push   0x48
10013be5:	mov    eax,0x100605b3
10013bea:	call   0x10059a35
10013bef:	mov    edi,ecx
10013bf1:	cmp    DWORD PTR [esi+0x8],0x1745d16
10013bf8:	jb     0x10013c2c
10013bfa:	push   0x1006d030
10013bff:	lea    ecx,[ebp-0x2c]
10013c02:	call   0x100011cd
10013c07:	and    DWORD PTR [ebp-0x4],0x0
10013c0b:	lea    eax,[ebp-0x2c]
10013c0e:	push   eax
10013c0f:	lea    ecx,[ebp-0x54]
10013c12:	call   0x10001077
10013c17:	push   0x10074da0
10013c1c:	lea    eax,[ebp-0x54]
10013c1f:	push   eax
10013c20:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10013c27:	call   0x100479b4
10013c2c:	push   DWORD PTR [ebp+0x10]
10013c2f:	mov    eax,DWORD PTR [esi+0x4]
10013c32:	push   eax
10013c33:	push   edi
10013c34:	push   eax
10013c35:	call   0x1001402b
10013c3a:	inc    DWORD PTR [esi+0x8]
10013c3d:	mov    ebx,eax
10013c3f:	mov    eax,DWORD PTR [esi+0x4]
10013c42:	cmp    edi,eax
10013c44:	jne    0x10013c53
10013c46:	mov    DWORD PTR [eax+0x4],ebx
10013c49:	mov    eax,DWORD PTR [esi+0x4]
10013c4c:	mov    DWORD PTR [eax],ebx
10013c4e:	mov    eax,DWORD PTR [esi+0x4]
10013c51:	jmp    0x10013c71
10013c53:	cmp    BYTE PTR [ebp+0xc],0x0
10013c57:	je     0x10013c66
10013c59:	mov    DWORD PTR [edi],ebx
10013c5b:	mov    eax,DWORD PTR [esi+0x4]
10013c5e:	cmp    edi,DWORD PTR [eax]
10013c60:	jne    0x10013c74
10013c62:	mov    DWORD PTR [eax],ebx
10013c64:	jmp    0x10013c74
10013c66:	mov    DWORD PTR [edi+0x8],ebx
10013c69:	mov    eax,DWORD PTR [esi+0x4]
10013c6c:	cmp    edi,DWORD PTR [eax+0x8]
10013c6f:	jne    0x10013c74
10013c71:	mov    DWORD PTR [eax+0x8],ebx
10013c74:	mov    edi,ebx
10013c76:	lea    eax,[ebx+0x4]
10013c79:	jmp    0x10013d27
10013c7e:	mov    edx,DWORD PTR [eax]
10013c80:	mov    ecx,DWORD PTR [edx+0x4]
10013c83:	cmp    edx,DWORD PTR [ecx]
10013c85:	jne    0x10013cc9
10013c87:	mov    ecx,DWORD PTR [ecx+0x8]
10013c8a:	add    ecx,0xc0
10013c90:	cmp    BYTE PTR [ecx],0x0
10013c93:	je     0x10013cd6
10013c95:	cmp    edi,DWORD PTR [edx+0x8]
10013c98:	jne    0x10013ca4
10013c9a:	mov    edi,edx
10013c9c:	push   esi
10013c9d:	mov    ecx,edi
10013c9f:	call   0x10013fa3
10013ca4:	mov    eax,DWORD PTR [edi+0x4]
10013ca7:	mov    BYTE PTR [eax+0xc0],0x1
10013cae:	mov    eax,DWORD PTR [edi+0x4]
10013cb1:	mov    eax,DWORD PTR [eax+0x4]
10013cb4:	mov    BYTE PTR [eax+0xc0],0x0
10013cbb:	mov    eax,DWORD PTR [edi+0x4]
10013cbe:	mov    ecx,DWORD PTR [eax+0x4]
10013cc1:	push   esi
10013cc2:	call   0x10013fe6
10013cc7:	jmp    0x10013d24
10013cc9:	mov    ecx,DWORD PTR [ecx]
10013ccb:	add    ecx,0xc0
10013cd1:	cmp    BYTE PTR [ecx],0x0
10013cd4:	jne    0x10013cf3
10013cd6:	mov    BYTE PTR [edx+0xc0],0x1
10013cdd:	mov    BYTE PTR [ecx],0x1
10013ce0:	mov    ecx,DWORD PTR [eax]
10013ce2:	mov    ecx,DWORD PTR [ecx+0x4]
10013ce5:	mov    BYTE PTR [ecx+0xc0],0x0
10013cec:	mov    eax,DWORD PTR [eax]
10013cee:	mov    edi,DWORD PTR [eax+0x4]
10013cf1:	jmp    0x10013d24
10013cf3:	cmp    edi,DWORD PTR [edx]
10013cf5:	jne    0x10013d01
10013cf7:	mov    edi,edx
10013cf9:	push   esi
10013cfa:	mov    ecx,edi
10013cfc:	call   0x10013fe6
10013d01:	mov    eax,DWORD PTR [edi+0x4]
10013d04:	mov    BYTE PTR [eax+0xc0],0x1
10013d0b:	mov    eax,DWORD PTR [edi+0x4]
10013d0e:	mov    eax,DWORD PTR [eax+0x4]
10013d11:	mov    BYTE PTR [eax+0xc0],0x0
10013d18:	mov    eax,DWORD PTR [edi+0x4]
10013d1b:	mov    ecx,DWORD PTR [eax+0x4]
10013d1e:	push   esi
10013d1f:	call   0x10013fa3
10013d24:	lea    eax,[edi+0x4]
10013d27:	mov    ecx,DWORD PTR [eax]
10013d29:	cmp    BYTE PTR [ecx+0xc0],0x0
10013d30:	je     0x10013c7e
10013d36:	mov    eax,DWORD PTR [esi+0x4]
10013d39:	mov    eax,DWORD PTR [eax+0x4]
10013d3c:	mov    BYTE PTR [eax+0xc0],0x1
10013d43:	mov    eax,DWORD PTR [ebp+0x8]
10013d46:	mov    DWORD PTR [eax+0x4],ebx
10013d49:	mov    DWORD PTR [eax],esi
10013d4b:	call   0x10059b0d
10013d50:	ret    0xc
10013d53:	push   ebp
10013d54:	mov    ebp,esp
10013d56:	and    esp,0xfffffff8
10013d59:	push   ecx
10013d5a:	push   ecx
10013d5b:	mov    eax,ds:0x10080e58
10013d60:	mov    edx,DWORD PTR [eax]
10013d62:	push   ebx
10013d63:	push   esi
10013d64:	mov    ecx,0x10080e54
10013d69:	push   eax
10013d6a:	mov    esi,ecx
10013d6c:	push   esi
10013d6d:	push   edx
10013d6e:	push   ecx
10013d6f:	lea    ebx,[esp+0x18]
10013d73:	call   0x10013ea9
10013d78:	push   DWORD PTR ds:0x10080e58
10013d7e:	call   0x10042e92
10013d83:	and    DWORD PTR ds:0x10080e58,0x0
10013d8a:	and    DWORD PTR ds:0x10080e5c,0x0
10013d91:	pop    ecx
10013d92:	pop    esi
10013d93:	pop    ebx
10013d94:	mov    esp,ebp
10013d96:	pop    ebp
10013d97:	ret    
10013d98:	push   ebx
10013d99:	xor    ebx,ebx
10013d9b:	cmp    DWORD PTR [esi],ebx
10013d9d:	jne    0x10013da4
10013d9f:	call   0x100433b0
10013da4:	mov    eax,DWORD PTR [esi+0x4]
10013da7:	cmp    BYTE PTR [eax+0xc1],bl
10013dad:	je     0x10013db6
10013daf:	call   0x100433b0
10013db4:	jmp    0x10013ded
10013db6:	mov    ecx,DWORD PTR [eax+0x8]
10013db9:	cmp    BYTE PTR [ecx+0xc1],bl
10013dbf:	jne    0x10013ddf
10013dc1:	jmp    0x10013dc5
10013dc3:	mov    ecx,eax
10013dc5:	mov    eax,DWORD PTR [ecx]
10013dc7:	cmp    BYTE PTR [eax+0xc1],bl
10013dcd:	je     0x10013dc3
10013dcf:	mov    DWORD PTR [esi+0x4],ecx
10013dd2:	jmp    0x10013ded
10013dd4:	mov    ecx,DWORD PTR [esi+0x4]
10013dd7:	cmp    ecx,DWORD PTR [eax+0x8]
10013dda:	jne    0x10013dea
10013ddc:	mov    DWORD PTR [esi+0x4],eax
10013ddf:	mov    eax,DWORD PTR [eax+0x4]
10013de2:	cmp    BYTE PTR [eax+0xc1],bl
10013de8:	je     0x10013dd4
10013dea:	mov    DWORD PTR [esi+0x4],eax
10013ded:	mov    eax,esi
10013def:	pop    ebx
10013df0:	ret    
10013df1:	push   ebx
10013df2:	xor    ebx,ebx
10013df4:	cmp    DWORD PTR [esi],ebx
10013df6:	jne    0x10013dfd
10013df8:	call   0x100433b0
10013dfd:	mov    eax,DWORD PTR [esi+0x4]
10013e00:	cmp    BYTE PTR [eax+0x11],bl
10013e03:	je     0x10013e12
10013e05:	mov    eax,DWORD PTR [eax+0x8]
10013e08:	mov    DWORD PTR [esi+0x4],eax
10013e0b:	cmp    BYTE PTR [eax+0x11],bl
10013e0e:	je     0x10013e4e
10013e10:	jmp    0x10013e44
10013e12:	mov    ecx,DWORD PTR [eax]
10013e14:	cmp    BYTE PTR [ecx+0x11],bl
10013e17:	jne    0x10013e34
10013e19:	jmp    0x10013e1d
10013e1b:	mov    ecx,eax
10013e1d:	mov    eax,DWORD PTR [ecx+0x8]
10013e20:	cmp    BYTE PTR [eax+0x11],bl
10013e23:	je     0x10013e1b
10013e25:	mov    DWORD PTR [esi+0x4],ecx
10013e28:	jmp    0x10013e4e
10013e2a:	mov    ecx,DWORD PTR [esi+0x4]
10013e2d:	cmp    ecx,DWORD PTR [eax]
10013e2f:	jne    0x10013e3c
10013e31:	mov    DWORD PTR [esi+0x4],eax
10013e34:	mov    eax,DWORD PTR [eax+0x4]
10013e37:	cmp    BYTE PTR [eax+0x11],bl
10013e3a:	je     0x10013e2a
10013e3c:	mov    ecx,DWORD PTR [esi+0x4]
10013e3f:	cmp    BYTE PTR [ecx+0x11],bl
10013e42:	je     0x10013e4b
10013e44:	call   0x100433b0
10013e49:	jmp    0x10013e4e
10013e4b:	mov    DWORD PTR [esi+0x4],eax
10013e4e:	mov    eax,esi
10013e50:	pop    ebx
10013e51:	ret    
10013e52:	call   0x10014080
10013e57:	lea    ecx,[esi+0x4]
10013e5a:	mov    DWORD PTR [ecx],eax
10013e5c:	mov    BYTE PTR [eax+0x11],0x1
10013e60:	mov    eax,DWORD PTR [ecx]
10013e62:	mov    DWORD PTR [eax+0x4],eax
10013e65:	mov    eax,DWORD PTR [ecx]
10013e67:	mov    DWORD PTR [eax],eax
10013e69:	mov    ecx,DWORD PTR [ecx]
10013e6b:	mov    DWORD PTR [ecx+0x8],ecx
10013e6e:	and    DWORD PTR [esi+0x8],0x0
10013e72:	ret    
10013e73:	push   ebp
10013e74:	mov    ebp,esp
10013e76:	push   0x14
10013e78:	call   0x1004349e
10013e7d:	test   eax,eax
10013e7f:	pop    ecx
10013e80:	je     0x10013ea5
10013e82:	mov    ecx,DWORD PTR [ebp+0x8]
10013e85:	mov    DWORD PTR [eax],ecx
10013e87:	mov    ecx,DWORD PTR [ebp+0xc]
10013e8a:	mov    DWORD PTR [eax+0x4],ecx
10013e8d:	mov    ecx,DWORD PTR [ebp+0x10]
10013e90:	mov    DWORD PTR [eax+0x8],ecx
10013e93:	mov    ecx,DWORD PTR [ebp+0x14]
10013e96:	mov    ecx,DWORD PTR [ecx]
10013e98:	mov    DWORD PTR [eax+0xc],ecx
10013e9b:	mov    cl,BYTE PTR [ebp+0x18]
10013e9e:	mov    BYTE PTR [eax+0x10],cl
10013ea1:	mov    BYTE PTR [eax+0x11],0x0
10013ea5:	pop    ebp
10013ea6:	ret    0x14
10013ea9:	push   ebp
10013eaa:	mov    ebp,esp
10013eac:	mov    eax,ds:0x10080e58
10013eb1:	sub    esp,0x10
10013eb4:	cmp    DWORD PTR [ebp+0x8],0x0
10013eb8:	push   esi
10013eb9:	mov    esi,DWORD PTR [eax]
10013ebb:	push   edi
10013ebc:	mov    edi,0x10080e54
10013ec1:	je     0x10013ec8
10013ec3:	cmp    DWORD PTR [ebp+0x8],edi
10013ec6:	je     0x10013ecd
10013ec8:	call   0x100433b0
10013ecd:	cmp    DWORD PTR [ebp+0xc],esi
10013ed0:	jne    0x10013f25
10013ed2:	cmp    DWORD PTR [ebp+0x10],0x0
10013ed6:	mov    esi,DWORD PTR ds:0x10080e58
10013edc:	je     0x10013ee3
10013ede:	cmp    DWORD PTR [ebp+0x10],edi
10013ee1:	je     0x10013ee8
10013ee3:	call   0x100433b0
10013ee8:	cmp    DWORD PTR [ebp+0x14],esi
10013eeb:	jne    0x10013f25
10013eed:	mov    eax,ds:0x10080e58
10013ef2:	push   DWORD PTR [eax+0x4]
10013ef5:	mov    ecx,edi
10013ef7:	call   0x1001412f
10013efc:	mov    eax,ds:0x10080e58
10013f01:	mov    DWORD PTR [eax+0x4],eax
10013f04:	mov    eax,ds:0x10080e58
10013f09:	and    DWORD PTR ds:0x10080e5c,0x0
10013f10:	mov    DWORD PTR [eax],eax
10013f12:	mov    eax,ds:0x10080e58
10013f17:	mov    DWORD PTR [eax+0x8],eax
10013f1a:	mov    eax,ds:0x10080e58
10013f1f:	mov    eax,DWORD PTR [eax]
10013f21:	mov    DWORD PTR [ebx],edi
10013f23:	jmp    0x10013f63
10013f25:	mov    eax,DWORD PTR [ebp+0x8]
10013f28:	test   eax,eax
10013f2a:	je     0x10013f31
10013f2c:	cmp    eax,DWORD PTR [ebp+0x10]
10013f2f:	je     0x10013f36
10013f31:	call   0x100433b0
10013f36:	mov    eax,DWORD PTR [ebp+0xc]
10013f39:	cmp    eax,DWORD PTR [ebp+0x14]
10013f3c:	mov    ecx,DWORD PTR [ebp+0x8]
10013f3f:	je     0x10013f61
10013f41:	lea    esi,[ebp+0x8]
10013f44:	mov    DWORD PTR [ebp-0x8],ecx
10013f47:	mov    DWORD PTR [ebp-0x4],eax
10013f4a:	call   0x10013d98
10013f4f:	push   DWORD PTR [ebp-0x4]
10013f52:	lea    eax,[ebp-0x10]
10013f55:	push   DWORD PTR [ebp-0x8]
10013f58:	push   eax
10013f59:	push   edi
10013f5a:	call   0x100138b9
10013f5f:	jmp    0x10013f25
10013f61:	mov    DWORD PTR [ebx],ecx
10013f63:	pop    edi
10013f64:	mov    DWORD PTR [ebx+0x4],eax
10013f67:	mov    eax,ebx
10013f69:	pop    esi
10013f6a:	leave  
10013f6b:	ret    0x10
10013f6e:	mov    eax,DWORD PTR [eax+0x4]
10013f71:	push   esi
10013f72:	mov    esi,DWORD PTR [eax+0x4]
10013f75:	push   edi
10013f76:	mov    edi,eax
10013f78:	jmp    0x10013f93
10013f7a:	mov    eax,DWORD PTR [esp+0xc]
10013f7e:	lea    ecx,[esi+0x10]
10013f81:	call   0x1000765d
10013f86:	test   al,al
10013f88:	je     0x10013f8f
10013f8a:	mov    esi,DWORD PTR [esi+0x8]
10013f8d:	jmp    0x10013f93
10013f8f:	mov    edi,esi
10013f91:	mov    esi,DWORD PTR [esi]
10013f93:	cmp    BYTE PTR [esi+0xc1],0x0
10013f9a:	je     0x10013f7a
10013f9c:	mov    eax,edi
10013f9e:	pop    edi
10013f9f:	pop    esi
10013fa0:	ret    0x4
10013fa3:	mov    eax,DWORD PTR [ecx+0x8]
10013fa6:	mov    edx,DWORD PTR [eax]
10013fa8:	mov    DWORD PTR [ecx+0x8],edx
10013fab:	mov    edx,DWORD PTR [eax]
10013fad:	cmp    BYTE PTR [edx+0xc1],0x0
10013fb4:	jne    0x10013fb9
10013fb6:	mov    DWORD PTR [edx+0x4],ecx
10013fb9:	mov    edx,DWORD PTR [ecx+0x4]
10013fbc:	mov    DWORD PTR [eax+0x4],edx
10013fbf:	mov    edx,DWORD PTR [esp+0x4]
10013fc3:	mov    edx,DWORD PTR [edx+0x4]
10013fc6:	cmp    ecx,DWORD PTR [edx+0x4]
10013fc9:	jne    0x10013fd0
10013fcb:	mov    DWORD PTR [edx+0x4],eax
10013fce:	jmp    0x10013fde
10013fd0:	mov    edx,DWORD PTR [ecx+0x4]
10013fd3:	cmp    ecx,DWORD PTR [edx]
10013fd5:	jne    0x10013fdb
10013fd7:	mov    DWORD PTR [edx],eax
10013fd9:	jmp    0x10013fde
10013fdb:	mov    DWORD PTR [edx+0x8],eax
10013fde:	mov    DWORD PTR [eax],ecx
10013fe0:	mov    DWORD PTR [ecx+0x4],eax
10013fe3:	ret    0x4
10013fe6:	mov    eax,DWORD PTR [ecx]
10013fe8:	mov    edx,DWORD PTR [eax+0x8]
10013feb:	mov    DWORD PTR [ecx],edx
10013fed:	mov    edx,DWORD PTR [eax+0x8]
10013ff0:	cmp    BYTE PTR [edx+0xc1],0x0
10013ff7:	jne    0x10013ffc
10013ff9:	mov    DWORD PTR [edx+0x4],ecx
10013ffc:	mov    edx,DWORD PTR [ecx+0x4]
10013fff:	mov    DWORD PTR [eax+0x4],edx
10014002:	mov    edx,DWORD PTR [esp+0x4]
10014006:	mov    edx,DWORD PTR [edx+0x4]
10014009:	cmp    ecx,DWORD PTR [edx+0x4]
1001400c:	jne    0x10014013
1001400e:	mov    DWORD PTR [edx+0x4],eax
10014011:	jmp    0x10014022
10014013:	mov    edx,DWORD PTR [ecx+0x4]
10014016:	cmp    ecx,DWORD PTR [edx+0x8]
10014019:	jne    0x10014020
1001401b:	mov    DWORD PTR [edx+0x8],eax
1001401e:	jmp    0x10014022
10014020:	mov    DWORD PTR [edx],eax
10014022:	mov    DWORD PTR [eax+0x8],ecx
10014025:	mov    DWORD PTR [ecx+0x4],eax
10014028:	ret    0x4
1001402b:	push   0x8
1001402d:	mov    eax,0x10060d6f
10014032:	call   0x10059a68
10014037:	push   0xc8
1001403c:	call   0x1004349e
10014041:	mov    edi,eax
10014043:	pop    ecx
10014044:	mov    DWORD PTR [ebp-0x14],edi
10014047:	test   edi,edi
10014049:	mov    DWORD PTR [ebp-0x4],0x1
10014050:	je     0x10014063
10014052:	push   DWORD PTR [ebp+0x10]
10014055:	mov    ebx,DWORD PTR [ebp+0x14]
10014058:	push   DWORD PTR [ebp+0xc]
1001405b:	push   DWORD PTR [ebp+0x8]
1001405e:	call   0x100140dd
10014063:	mov    eax,edi
10014065:	call   0x10059b0d
1001406a:	ret    0x10
1001406d:	push   DWORD PTR [ebp-0x14]
10014070:	call   0x10042e92
10014075:	pop    ecx
10014076:	push   0x0
10014078:	push   0x0
1001407a:	call   0x100479b4
1001407f:	int3   
10014080:	push   0x14
10014082:	call   0x1004349e
10014087:	xor    edx,edx
10014089:	cmp    eax,edx
1001408b:	pop    ecx
1001408c:	je     0x10014090
1001408e:	mov    DWORD PTR [eax],edx
10014090:	lea    ecx,[eax+0x4]
10014093:	cmp    ecx,edx
10014095:	je     0x10014099
10014097:	mov    DWORD PTR [ecx],edx
10014099:	lea    ecx,[eax+0x8]
1001409c:	cmp    ecx,edx
1001409e:	je     0x100140a2
100140a0:	mov    DWORD PTR [ecx],edx
100140a2:	mov    BYTE PTR [eax+0x10],0x1
100140a6:	mov    BYTE PTR [eax+0x11],dl
100140a9:	ret    
100140aa:	push   0xc8
100140af:	call   0x1004349e
100140b4:	xor    edx,edx
100140b6:	cmp    eax,edx
100140b8:	pop    ecx
100140b9:	je     0x100140bd
100140bb:	mov    DWORD PTR [eax],edx
100140bd:	lea    ecx,[eax+0x4]
100140c0:	cmp    ecx,edx
100140c2:	je     0x100140c6
100140c4:	mov    DWORD PTR [ecx],edx
100140c6:	lea    ecx,[eax+0x8]
100140c9:	cmp    ecx,edx
100140cb:	je     0x100140cf
100140cd:	mov    DWORD PTR [ecx],edx
100140cf:	mov    BYTE PTR [eax+0xc0],0x1
100140d6:	mov    BYTE PTR [eax+0xc1],dl
100140dc:	ret    
100140dd:	push   0x0
100140df:	mov    eax,0x10062102
100140e4:	call   0x10059a35
100140e9:	mov    eax,DWORD PTR [ebp+0x8]
100140ec:	mov    DWORD PTR [edi],eax
100140ee:	mov    eax,DWORD PTR [ebp+0xc]
100140f1:	mov    DWORD PTR [edi+0x4],eax
100140f4:	mov    eax,DWORD PTR [ebp+0x10]
100140f7:	lea    esi,[edi+0x10]
100140fa:	push   ebx
100140fb:	mov    ecx,esi
100140fd:	mov    DWORD PTR [edi+0x8],eax
10014100:	mov    DWORD PTR [ebp+0x8],esi
10014103:	call   0x100011a7
10014108:	and    DWORD PTR [ebp-0x4],0x0
1001410c:	lea    eax,[ebx+0x20]
1001410f:	add    esi,0x20
10014112:	call   0x10013247
10014117:	mov    BYTE PTR [edi+0xc0],0x0
1001411e:	mov    BYTE PTR [edi+0xc1],0x0
10014125:	mov    eax,edi
10014127:	call   0x10059b0d
1001412c:	ret    0xc
1001412f:	push   ecx
10014130:	push   ebp
10014131:	mov    ebp,DWORD PTR [esp+0xc]
10014135:	cmp    BYTE PTR [ebp+0xc1],0x0
1001413c:	push   edi
1001413d:	mov    DWORD PTR [esp+0x8],ecx
10014141:	mov    edi,ebp
10014143:	jne    0x1001417f
10014145:	push   ebx
10014146:	push   esi
10014147:	push   DWORD PTR [edi+0x8]
1001414a:	mov    ecx,DWORD PTR [esp+0x14]
1001414e:	call   0x1001412f
10014153:	mov    edi,DWORD PTR [edi]
10014155:	lea    ebx,[ebp+0x10]
10014158:	lea    esi,[ebx+0x20]
1001415b:	call   0x100033ac
10014160:	push   0x0
10014162:	push   0x1
10014164:	mov    ecx,ebx
10014166:	call   0x100012f0
1001416b:	push   ebp
1001416c:	call   0x10042e92
10014171:	cmp    BYTE PTR [edi+0xc1],0x0
10014178:	pop    ecx
10014179:	mov    ebp,edi
1001417b:	je     0x10014147
1001417d:	pop    esi
1001417e:	pop    ebx
1001417f:	pop    edi
10014180:	pop    ebp
10014181:	pop    ecx
10014182:	ret    0x4
10014185:	push   0x34
10014187:	mov    eax,0x10061e20
1001418c:	call   0x10059a35
10014191:	mov    ebx,ecx
10014193:	mov    DWORD PTR [ebp-0x20],ebx
10014196:	and    DWORD PTR [ebp-0x4],0x0
1001419a:	mov    eax,DWORD PTR [ebx+0x4]
1001419d:	mov    esi,DWORD PTR [eax]
1001419f:	mov    edi,ebx
100141a1:	mov    DWORD PTR [ebp-0x10],esi
100141a4:	mov    DWORD PTR [ebp-0x14],edi
100141a7:	test   edi,edi
100141a9:	mov    eax,DWORD PTR [ebx+0x4]
100141ac:	mov    DWORD PTR [ebp-0x30],eax
100141af:	je     0x100141b5
100141b1:	cmp    edi,ebx
100141b3:	je     0x100141ba
100141b5:	call   0x100433b0
100141ba:	cmp    esi,DWORD PTR [ebp-0x30]
100141bd:	je     0x1001427c
100141c3:	test   edi,edi
100141c5:	jne    0x100141cc
100141c7:	call   0x100433b0
100141cc:	cmp    esi,DWORD PTR [edi+0x4]
100141cf:	jne    0x100141d6
100141d1:	call   0x100433b0
100141d6:	lea    ecx,[esi+0x4c]
100141d9:	lea    eax,[ebp+0x8]
100141dc:	call   0x1000656c
100141e1:	test   al,al
100141e3:	je     0x10014269
100141e9:	mov    eax,DWORD PTR [ebp+0x28]
100141ec:	and    DWORD PTR [ebp-0x2c],0x0
100141f0:	mov    DWORD PTR [esi+0xa8],eax
100141f6:	mov    eax,DWORD PTR [ebp+0x2c]
100141f9:	mov    DWORD PTR [esi+0xac],eax
100141ff:	mov    eax,DWORD PTR [ebp+0x30]
10014202:	mov    DWORD PTR [esi+0xb0],eax
10014208:	mov    eax,DWORD PTR [ebp+0x34]
1001420b:	mov    DWORD PTR [esi+0xb4],eax
10014211:	mov    eax,DWORD PTR [ebx+0x10]
10014214:	add    ebx,0xc
10014217:	mov    DWORD PTR [ebp-0x24],eax
1001421a:	lea    eax,[ebp-0x2c]
1001421d:	mov    DWORD PTR [ebp-0x28],ebx
10014220:	call   0x10013748
10014225:	mov    eax,DWORD PTR [eax]
10014227:	inc    eax
10014228:	cmp    esi,DWORD PTR [edi+0x4]
1001422b:	mov    DWORD PTR [ebp-0x18],eax
1001422e:	jne    0x10014235
10014230:	call   0x100433b0
10014235:	lea    edx,[esi+0xb8]
1001423b:	mov    eax,ebx
1001423d:	mov    DWORD PTR [ebp-0x1c],edx
10014240:	call   0x100133aa
10014245:	lea    eax,[ebp-0x18]
10014248:	push   eax
10014249:	lea    edi,[ebp-0x40]
1001424c:	call   0x100132f1
10014251:	mov    eax,DWORD PTR [ebp-0x14]
10014254:	cmp    esi,DWORD PTR [eax+0x4]
10014257:	jne    0x1001425e
10014259:	call   0x100433b0
1001425e:	mov    eax,DWORD PTR [ebp-0x18]
10014261:	mov    ecx,DWORD PTR [ebp-0x1c]
10014264:	mov    ebx,DWORD PTR [ebp-0x20]
10014267:	mov    DWORD PTR [ecx],eax
10014269:	lea    esi,[ebp-0x14]
1001426c:	call   0x10013d98
10014271:	mov    esi,DWORD PTR [ebp-0x10]
10014274:	mov    edi,DWORD PTR [ebp-0x14]
10014277:	jmp    0x100141a7
1001427c:	push   0x0
1001427e:	push   0x1
10014280:	lea    ecx,[ebp+0x8]
10014283:	call   0x100012f0
10014288:	call   0x10059b0d
1001428d:	ret    0x30
10014290:	push   0x8
10014292:	mov    eax,0x10060d4f
10014297:	call   0x10059a35
1001429c:	and    DWORD PTR [ebp-0x14],0x0
100142a0:	mov    DWORD PTR [ebp-0x10],ebx
100142a3:	lea    eax,[ebp+0x8]
100142a6:	push   eax
100142a7:	mov    ecx,ebx
100142a9:	mov    DWORD PTR [ebp-0x4],0x1
100142b0:	call   0x100011a7
100142b5:	lea    esi,[ebx+0x20]
100142b8:	push   esi
100142b9:	lea    edi,[ebp+0x24]
100142bc:	mov    BYTE PTR [ebp-0x4],0x2
100142c0:	call   0x10013276
100142c5:	mov    eax,DWORD PTR [ebp+0xac]
100142cb:	push   0x0
100142cd:	push   0x1
100142cf:	lea    ecx,[ebp+0x8]
100142d2:	mov    DWORD PTR [esi+0x88],eax
100142d8:	call   0x100012f0
100142dd:	mov    esi,edi
100142df:	call   0x100033ac
100142e4:	mov    eax,ebx
100142e6:	call   0x10059b0d
100142eb:	ret    
100142ec:	mov    eax,DWORD PTR [esp+0x8]
100142f0:	mul    DWORD PTR [esp+0xc]
100142f4:	test   edx,edx
100142f6:	ja     0x100142fd
100142f8:	cmp    eax,0xffffffff
100142fb:	jbe    0x10014303
100142fd:	mov    eax,0x80070057
10014302:	ret    
10014303:	mov    ecx,DWORD PTR [esp+0x4]
10014307:	mov    DWORD PTR [ecx],eax
10014309:	xor    eax,eax
1001430b:	ret    
1001430c:	push   DWORD PTR [esp+0xc]
10014310:	call   DWORD PTR ds:0x100660c4
10014316:	lea    eax,[eax+eax*1+0x2]
1001431a:	push   eax
1001431b:	push   DWORD PTR [esp+0x10]
1001431f:	mov    eax,DWORD PTR [esp+0x10]
10014323:	add    eax,eax
10014325:	push   eax
10014326:	push   DWORD PTR [esp+0x10]
1001432a:	call   0x100433c5
1001432f:	add    esp,0x10
10014332:	neg    eax
10014334:	sbb    eax,eax
10014336:	inc    eax
10014337:	ret    
10014338:	push   DWORD PTR [esp+0x10]
1001433c:	push   DWORD PTR [esp+0x10]
10014340:	push   DWORD PTR [esp+0x10]
10014344:	push   DWORD PTR [esp+0x10]
10014348:	call   0x100433c5
1001434d:	push   eax
1001434e:	call   0x10001f5d
10014353:	add    esp,0x14
10014356:	ret    
10014357:	push   esi
10014358:	push   0x18
1001435a:	mov    esi,ecx
1001435c:	push   0x0
1001435e:	push   esi
1001435f:	call   0x10045c00
10014364:	add    esp,0xc
10014367:	mov    eax,esi
10014369:	pop    esi
1001436a:	ret    
1001436b:	push   0xc
1001436d:	push   0x10074e00
10014372:	call   0x10046c94
10014377:	and    DWORD PTR [ebp-0x4],0x0
1001437b:	push   ecx
1001437c:	call   DWORD PTR ds:0x1006611c
10014382:	and    DWORD PTR [ebp-0x1c],0x0
10014386:	jmp    0x100143a6
10014388:	mov    eax,DWORD PTR [ebp-0x14]
1001438b:	mov    eax,DWORD PTR [eax]
1001438d:	mov    eax,DWORD PTR [eax]
1001438f:	xor    ecx,ecx
10014391:	cmp    eax,0xc0000017
10014396:	sete   cl
10014399:	mov    eax,ecx
1001439b:	ret    
1001439c:	mov    esp,DWORD PTR [ebp-0x18]
1001439f:	mov    DWORD PTR [ebp-0x1c],0x8007000e
100143a6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100143ad:	mov    eax,DWORD PTR [ebp-0x1c]
100143b0:	call   0x10046cd9
100143b5:	ret    
100143b6:	test   eax,eax
100143b8:	jle    0x100143c4
100143ba:	and    eax,0xffff
100143bf:	or     eax,0x80070000
100143c4:	ret    
100143c5:	push   ebx
100143c6:	push   ebp
100143c7:	mov    ebx,ecx
100143c9:	push   edi
100143ca:	lea    edi,[ebx+0x4]
100143cd:	xor    ebp,ebp
100143cf:	cmp    DWORD PTR [edi],ebp
100143d1:	je     0x10014428
100143d3:	cmp    DWORD PTR [ebx+0xc],ebp
100143d6:	je     0x1001440f
100143d8:	cmp    edi,ebp
100143da:	jne    0x100143eb
100143dc:	push   ebp
100143dd:	push   ebp
100143de:	push   0x1
100143e0:	push   0xc0000005
100143e5:	call   DWORD PTR ds:0x10066128
100143eb:	push   esi
100143ec:	mov    esi,DWORD PTR [edi+0x8]
100143ef:	cmp    esi,ebp
100143f1:	je     0x10014408
100143f3:	push   DWORD PTR [esi+0x4]
100143f6:	call   DWORD PTR [esi]
100143f8:	mov    ebp,DWORD PTR [esi+0x8]
100143fb:	push   esi
100143fc:	call   0x10042e92
10014401:	test   ebp,ebp
10014403:	pop    ecx
10014404:	mov    esi,ebp
10014406:	jne    0x100143f3
10014408:	mov    DWORD PTR [edi+0x8],ebp
1001440b:	mov    DWORD PTR [ebx+0xc],ebp
1001440e:	pop    esi
1001440f:	mov    eax,DWORD PTR [ebx+0x28]
10014412:	cmp    eax,ebp
10014414:	je     0x1001441c
10014416:	mov    ecx,DWORD PTR [eax]
10014418:	push   eax
10014419:	call   DWORD PTR [ecx+0x8]
1001441c:	add    ebx,0x10
1001441f:	push   ebx
10014420:	call   DWORD PTR ds:0x10066138
10014426:	mov    DWORD PTR [edi],ebp
10014428:	pop    edi
10014429:	pop    ebp
1001442a:	pop    ebx
1001442b:	ret    
1001442c:	add    ecx,0x8
1001442f:	push   ecx
10014430:	call   DWORD PTR ds:0x100660a4
10014436:	ret    
10014437:	add    ecx,0x8
1001443a:	push   ecx
1001443b:	call   DWORD PTR ds:0x100660ac
10014441:	ret    
10014442:	mov    eax,DWORD PTR [ecx+0x8]
10014445:	ret    
10014446:	push   ebx
10014447:	mov    ebx,DWORD PTR [esp+0x8]
1001444b:	test   ebx,ebx
1001444d:	jne    0x10014456
1001444f:	mov    eax,0x80004003
10014454:	jmp    0x1001448b
10014456:	push   esi
10014457:	push   edi
10014458:	xor    edi,edi
1001445a:	lea    esi,[ecx+0x28]
1001445d:	cmp    DWORD PTR [esi],edi
1001445f:	jne    0x1001447b
10014461:	push   esi
10014462:	push   0x1006fcb4
10014467:	push   0x1
10014469:	push   edi
1001446a:	push   0x1006b848
1001446f:	call   DWORD PTR ds:0x1006643c
10014475:	mov    edi,eax
10014477:	test   edi,edi
10014479:	jl     0x10014487
1001447b:	mov    eax,DWORD PTR [esi]
1001447d:	mov    DWORD PTR [ebx],eax
1001447f:	mov    esi,DWORD PTR [esi]
10014481:	mov    eax,DWORD PTR [esi]
10014483:	push   esi
10014484:	call   DWORD PTR [eax+0x4]
10014487:	mov    eax,edi
10014489:	pop    edi
1001448a:	pop    esi
1001448b:	pop    ebx
1001448c:	ret    0x4
1001448f:	push   esi
10014490:	push   edi
10014491:	mov    esi,ecx
10014493:	xor    edi,edi
10014495:	dec    esi
10014496:	je     0x100144be
10014498:	movzx  ecx,WORD PTR [edx]
1001449b:	test   cx,cx
1001449e:	je     0x100144be
100144a0:	mov    WORD PTR [eax],cx
100144a3:	inc    eax
100144a4:	inc    eax
100144a5:	cmp    WORD PTR [edx],0x27
100144a9:	jne    0x100144b7
100144ab:	inc    edi
100144ac:	cmp    edi,esi
100144ae:	jae    0x100144b7
100144b0:	mov    WORD PTR [eax],0x27
100144b5:	inc    eax
100144b6:	inc    eax
100144b7:	inc    edx
100144b8:	inc    edx
100144b9:	inc    edi
100144ba:	cmp    edi,esi
100144bc:	jb     0x10014498
100144be:	and    WORD PTR [eax],0x0
100144c2:	pop    edi
100144c3:	pop    esi
100144c4:	ret    
100144c5:	mov    eax,0x80004005
100144ca:	ret    0x10
100144cd:	push   DWORD PTR [esp+0xc]
100144d1:	mov    edx,DWORD PTR [esp+0x14]
100144d5:	push   DWORD PTR [esp+0xc]
100144d9:	mov    ecx,DWORD PTR [esp+0xc]
100144dd:	call   0x10015a53
100144e2:	ret    0x10
100144e5:	push   DWORD PTR [esp+0xc]
100144e9:	mov    edx,DWORD PTR [esp+0x14]
100144ed:	push   DWORD PTR [esp+0xc]
100144f1:	mov    ecx,DWORD PTR [esp+0xc]
100144f5:	call   0x10015c06
100144fa:	ret    0x10
100144fd:	push   esi
100144fe:	mov    esi,ecx
10014500:	mov    DWORD PTR [esi],0x1006fc74
10014506:	call   0x100143c5
1001450b:	test   BYTE PTR [esp+0x8],0x1
10014510:	je     0x10014519
10014512:	push   esi
10014513:	call   0x10042e92
10014518:	pop    ecx
10014519:	mov    eax,esi
1001451b:	pop    esi
1001451c:	ret    0x4
1001451f:	mov    eax,DWORD PTR [esi]
10014521:	test   eax,eax
10014523:	je     0x1001452f
10014525:	push   eax
10014526:	call   DWORD PTR ds:0x10066018
1001452c:	and    DWORD PTR [esi],0x0
1001452f:	ret    
10014530:	push   ebp
10014531:	mov    ebp,esp
10014533:	cmp    DWORD PTR [ebp+0x10],0x0
10014537:	jne    0x10014543
10014539:	push   0x80004005
1001453e:	call   0x10001f45
10014543:	push   esi
10014544:	mov    esi,DWORD PTR [ebp+0x10]
10014547:	push   edi
10014548:	xor    edi,edi
1001454a:	push   esi
1001454b:	call   DWORD PTR ds:0x100660c4
10014551:	inc    eax
10014552:	lea    ecx,[eax+eax*1]
10014555:	add    esi,ecx
10014557:	add    edi,ecx
10014559:	cmp    eax,0x1
1001455c:	jne    0x1001454a
1001455e:	mov    eax,DWORD PTR [ebp+0x8]
10014561:	push   edi
10014562:	push   DWORD PTR [ebp+0x10]
10014565:	push   0x7
10014567:	push   0x0
10014569:	push   DWORD PTR [ebp+0xc]
1001456c:	push   DWORD PTR [eax]
1001456e:	call   DWORD PTR ds:0x10066014
10014574:	pop    edi
10014575:	pop    esi
10014576:	pop    ebp
10014577:	ret    0xc
1001457a:	push   ebp
1001457b:	mov    ebp,esp
1001457d:	sub    esp,0x228
10014583:	mov    eax,ds:0x1007e030
10014588:	xor    eax,ebp
1001458a:	mov    DWORD PTR [ebp-0x8],eax
1001458d:	push   ebx
1001458e:	push   esi
1001458f:	push   edi
10014590:	lea    edx,[ebp-0x214]
10014596:	push   edx
10014597:	push   0x2001f
1001459c:	mov    eax,ecx
1001459e:	mov    ecx,DWORD PTR [ebp+0x8]
100145a1:	xor    esi,esi
100145a3:	push   esi
100145a4:	mov    DWORD PTR [ebp-0x220],eax
100145aa:	mov    eax,DWORD PTR [eax]
100145ac:	push   ecx
100145ad:	push   eax
100145ae:	mov    DWORD PTR [ebp-0x21c],ecx
100145b4:	mov    DWORD PTR [ebp-0x210],esi
100145ba:	mov    DWORD PTR [ebp-0x214],esi
100145c0:	call   DWORD PTR ds:0x10066020
100145c6:	mov    ebx,DWORD PTR ds:0x10066018
100145cc:	mov    edi,eax
100145ce:	cmp    edi,esi
100145d0:	jne    0x10014697
100145d6:	xor    eax,eax
100145d8:	cmp    DWORD PTR [ebp-0x210],esi
100145de:	je     0x100145e8
100145e0:	push   DWORD PTR [ebp-0x210]
100145e6:	call   ebx
100145e8:	cmp    eax,esi
100145ea:	mov    ecx,DWORD PTR [ebp-0x214]
100145f0:	mov    edi,eax
100145f2:	mov    DWORD PTR [ebp-0x210],ecx
100145f8:	jne    0x10014697
100145fe:	mov    edi,DWORD PTR ds:0x1006601c
10014604:	lea    eax,[ebp-0x228]
1001460a:	push   eax
1001460b:	push   esi
1001460c:	push   esi
1001460d:	push   esi
1001460e:	lea    eax,[ebp-0x218]
10014614:	push   eax
10014615:	lea    eax,[ebp-0x20c]
1001461b:	push   eax
1001461c:	push   esi
1001461d:	push   ecx
1001461e:	jmp    0x1001465b
10014620:	lea    eax,[ebp-0x20c]
10014626:	push   eax
10014627:	lea    ecx,[ebp-0x210]
1001462d:	call   0x1001457a
10014632:	cmp    eax,esi
10014634:	mov    DWORD PTR [ebp-0x214],eax
1001463a:	jne    0x100146ba
1001463c:	lea    eax,[ebp-0x228]
10014642:	push   eax
10014643:	push   esi
10014644:	push   esi
10014645:	push   esi
10014646:	lea    eax,[ebp-0x218]
1001464c:	push   eax
1001464d:	lea    eax,[ebp-0x20c]
10014653:	push   eax
10014654:	push   esi
10014655:	push   DWORD PTR [ebp-0x210]
1001465b:	mov    DWORD PTR [ebp-0x218],0x100
10014665:	call   edi
10014667:	test   eax,eax
10014669:	je     0x10014620
1001466b:	cmp    DWORD PTR [ebp-0x210],esi
10014671:	je     0x10014681
10014673:	push   DWORD PTR [ebp-0x210]
10014679:	call   ebx
1001467b:	mov    DWORD PTR [ebp-0x210],esi
10014681:	push   DWORD PTR [ebp-0x21c]
10014687:	mov    eax,DWORD PTR [ebp-0x220]
1001468d:	push   DWORD PTR [eax]
1001468f:	call   DWORD PTR ds:0x1006600c
10014695:	mov    edi,eax
10014697:	cmp    DWORD PTR [ebp-0x210],esi
1001469d:	je     0x100146a7
1001469f:	push   DWORD PTR [ebp-0x210]
100146a5:	call   ebx
100146a7:	mov    eax,edi
100146a9:	mov    ecx,DWORD PTR [ebp-0x8]
100146ac:	pop    edi
100146ad:	pop    esi
100146ae:	xor    ecx,ebp
100146b0:	pop    ebx
100146b1:	call   0x10042e97
100146b6:	leave  
100146b7:	ret    0x4
100146ba:	cmp    DWORD PTR [ebp-0x210],esi
100146c0:	je     0x100146ca
100146c2:	push   DWORD PTR [ebp-0x210]
100146c8:	call   ebx
100146ca:	mov    eax,DWORD PTR [ebp-0x214]
100146d0:	jmp    0x100146a9
100146d2:	push   0x20
100146d4:	mov    eax,0x10060343
100146d9:	call   0x10059a68
100146de:	xor    edi,edi
100146e0:	cmp    DWORD PTR [ebp+0xc],edi
100146e3:	je     0x100147eb
100146e9:	cmp    DWORD PTR [ebp+0x10],edi
100146ec:	je     0x100147eb
100146f2:	push   DWORD PTR [ebp+0xc]
100146f5:	mov    DWORD PTR [ebp-0x1c],edi
100146f8:	call   DWORD PTR ds:0x100660c4
100146fe:	push   0x2
10014700:	lea    eax,[eax+eax*1+0x2]
10014704:	xor    ecx,ecx
10014706:	pop    esi
10014707:	mov    DWORD PTR [ebp-0x20],eax
1001470a:	mov    edx,esi
1001470c:	mul    edx
1001470e:	seto   cl
10014711:	mov    DWORD PTR [ebp-0x14],edi
10014714:	mov    DWORD PTR [ebp-0x4],edi
10014717:	neg    ecx
10014719:	or     ecx,eax
1001471b:	push   ecx
1001471c:	call   0x10043721
10014721:	pop    ecx
10014722:	mov    DWORD PTR [ebp-0x14],eax
10014725:	jmp    0x10014732
10014727:	mov    eax,0x1001472d
1001472c:	ret    
1001472d:	push   0x2
1001472f:	xor    edi,edi
10014731:	pop    esi
10014732:	push   DWORD PTR [ebp+0x10]
10014735:	mov    DWORD PTR [ebp-0x4],esi
10014738:	mov    eax,DWORD PTR [ebp-0x14]
1001473b:	mov    DWORD PTR [ebp-0x2c],eax
1001473e:	call   DWORD PTR ds:0x100660c4
10014744:	lea    eax,[eax+eax*1+0x2]
10014748:	xor    ecx,ecx
1001474a:	mov    DWORD PTR [ebp-0x24],eax
1001474d:	mov    edx,esi
1001474f:	mul    edx
10014751:	seto   cl
10014754:	mov    DWORD PTR [ebp-0x18],edi
10014757:	mov    BYTE PTR [ebp-0x4],0x3
1001475b:	neg    ecx
1001475d:	or     ecx,eax
1001475f:	push   ecx
10014760:	call   0x10043721
10014765:	pop    ecx
10014766:	mov    DWORD PTR [ebp-0x18],eax
10014769:	mov    DWORD PTR [ebp-0x4],esi
1001476c:	jmp    0x10014776
1001476e:	mov    eax,0x10014774
10014773:	ret    
10014774:	xor    edi,edi
10014776:	mov    BYTE PTR [ebp-0x4],0x5
1001477a:	cmp    DWORD PTR [ebp-0x14],edi
1001477d:	mov    esi,DWORD PTR [ebp-0x18]
10014780:	mov    DWORD PTR [ebp-0x28],esi
10014783:	je     0x100147c0
10014785:	cmp    esi,edi
10014787:	je     0x100147c0
10014789:	push   DWORD PTR [ebp-0x20]
1001478c:	push   DWORD PTR [ebp+0xc]
1001478f:	push   DWORD PTR [ebp-0x20]
10014792:	push   DWORD PTR [ebp-0x14]
10014795:	call   0x10014338
1001479a:	push   DWORD PTR [ebp-0x24]
1001479d:	push   DWORD PTR [ebp+0x10]
100147a0:	push   DWORD PTR [ebp-0x24]
100147a3:	push   esi
100147a4:	call   0x10014338
100147a9:	mov    esi,DWORD PTR [ebp+0x8]
100147ac:	add    esp,0x20
100147af:	lea    eax,[ebp-0x18]
100147b2:	push   eax
100147b3:	lea    eax,[ebp-0x14]
100147b6:	push   eax
100147b7:	call   0x1001773a
100147bc:	test   eax,eax
100147be:	jne    0x100147c9
100147c0:	mov    DWORD PTR [ebp-0x1c],0x8007000e
100147c7:	jmp    0x100147cf
100147c9:	mov    DWORD PTR [ebp-0x2c],edi
100147cc:	mov    DWORD PTR [ebp-0x28],edi
100147cf:	push   DWORD PTR [ebp-0x28]
100147d2:	call   0x100433c0
100147d7:	push   DWORD PTR [ebp-0x2c]
100147da:	call   0x100433c0
100147df:	xor    eax,eax
100147e1:	cmp    DWORD PTR [ebp-0x1c],edi
100147e4:	pop    ecx
100147e5:	pop    ecx
100147e6:	setge  al
100147e9:	jmp    0x100147ed
100147eb:	xor    eax,eax
100147ed:	call   0x10059b0d
100147f2:	ret    0xc
100147f5:	push   esi
100147f6:	mov    esi,eax
100147f8:	mov    eax,DWORD PTR [esi+0x8]
100147fb:	push   edi
100147fc:	xor    edi,edi
100147fe:	test   eax,eax
10014800:	jle    0x1001482e
10014802:	test   edi,edi
10014804:	jl     0x10014838
10014806:	cmp    edi,eax
10014808:	jge    0x10014838
1001480a:	mov    eax,DWORD PTR [esi]
1001480c:	push   DWORD PTR [eax+edi*4]
1001480f:	call   0x100433c0
10014814:	pop    ecx
10014815:	mov    eax,edi
10014817:	mov    ecx,esi
10014819:	call   0x100177c3
1001481e:	push   DWORD PTR [eax]
10014820:	call   0x100433c0
10014825:	mov    eax,DWORD PTR [esi+0x8]
10014828:	inc    edi
10014829:	cmp    edi,eax
1001482b:	pop    ecx
1001482c:	jl     0x10014802
1001482e:	call   0x1001779c
10014833:	pop    edi
10014834:	xor    eax,eax
10014836:	pop    esi
10014837:	ret    
10014838:	push   0x0
1001483a:	push   0x0
1001483c:	push   0x1
1001483e:	push   0xc000008c
10014843:	call   DWORD PTR ds:0x10066128
10014849:	int3   
1001484a:	push   ebp
1001484b:	mov    ebp,esp
1001484d:	push   ecx
1001484e:	cmp    eax,0x64
10014851:	jge    0x10014858
10014853:	mov    eax,0x3e8
10014858:	and    DWORD PTR [esi],0x0
1001485b:	and    DWORD PTR [ebp-0x4],0x0
1001485f:	push   0x2
10014861:	push   eax
10014862:	mov    DWORD PTR [esi+0x4],eax
10014865:	lea    eax,[ebp-0x4]
10014868:	push   eax
10014869:	call   0x100142ec
1001486e:	add    esp,0xc
10014871:	test   eax,eax
10014873:	jge    0x10014879
10014875:	xor    eax,eax
10014877:	jmp    0x10014882
10014879:	push   DWORD PTR [ebp-0x4]
1001487c:	call   DWORD PTR ds:0x10066428
10014882:	test   eax,eax
10014884:	mov    DWORD PTR [esi+0x8],eax
10014887:	je     0x1001488d
10014889:	and    WORD PTR [eax],0x0
1001488d:	mov    eax,esi
1001488f:	leave  
10014890:	ret    
10014891:	push   DWORD PTR [eax+0x8]
10014894:	call   DWORD PTR ds:0x1006642c
1001489a:	ret    
1001489b:	push   ebp
1001489c:	mov    ebp,esp
1001489e:	push   ecx
1001489f:	mov    ecx,DWORD PTR [esi]
100148a1:	lea    eax,[ecx+edi*1+0x1]
100148a5:	cmp    eax,ecx
100148a7:	push   ebx
100148a8:	jle    0x10014939
100148ae:	cmp    eax,edi
100148b0:	jle    0x10014939
100148b6:	cmp    eax,DWORD PTR [esi+0x4]
100148b9:	jl     0x100148fa
100148bb:	mov    ecx,DWORD PTR [esi+0x4]
100148be:	cmp    ecx,0x3fffffff
100148c4:	jg     0x10014939
100148c6:	add    ecx,ecx
100148c8:	cmp    eax,ecx
100148ca:	mov    DWORD PTR [esi+0x4],ecx
100148cd:	jge    0x100148bb
100148cf:	mov    ebx,DWORD PTR [esi+0x8]
100148d2:	and    DWORD PTR [ebp-0x4],0x0
100148d6:	push   0x2
100148d8:	push   ecx
100148d9:	lea    eax,[ebp-0x4]
100148dc:	push   eax
100148dd:	call   0x100142ec
100148e2:	add    esp,0xc
100148e5:	test   eax,eax
100148e7:	jl     0x10014939
100148e9:	push   DWORD PTR [ebp-0x4]
100148ec:	push   ebx
100148ed:	call   DWORD PTR ds:0x10066430
100148f3:	test   eax,eax
100148f5:	je     0x10014939
100148f7:	mov    DWORD PTR [esi+0x8],eax
100148fa:	mov    eax,DWORD PTR [esi]
100148fc:	test   eax,eax
100148fe:	jl     0x10014939
10014900:	mov    edx,DWORD PTR [esi+0x4]
10014903:	cmp    eax,edx
10014905:	jge    0x10014939
10014907:	mov    ecx,edx
10014909:	sub    ecx,eax
1001490b:	cmp    ecx,edx
1001490d:	jg     0x10014939
1001490f:	lea    edx,[edi+edi*1]
10014912:	push   edx
10014913:	push   DWORD PTR [ebp+0x8]
10014916:	add    ecx,ecx
10014918:	push   ecx
10014919:	mov    ecx,DWORD PTR [esi+0x8]
1001491c:	lea    eax,[ecx+eax*2]
1001491f:	push   eax
10014920:	call   0x10014338
10014925:	add    DWORD PTR [esi],edi
10014927:	mov    eax,DWORD PTR [esi]
10014929:	mov    ecx,DWORD PTR [esi+0x8]
1001492c:	and    WORD PTR [ecx+eax*2],0x0
10014931:	xor    eax,eax
10014933:	add    esp,0x10
10014936:	inc    eax
10014937:	jmp    0x1001493b
10014939:	xor    eax,eax
1001493b:	pop    ebx
1001493c:	leave  
1001493d:	ret    0x4
10014940:	xor    eax,eax
10014942:	inc    eax
10014943:	ret    0x4
10014946:	push   esi
10014947:	lea    esi,[ecx+0x4]
1001494a:	mov    eax,esi
1001494c:	mov    DWORD PTR [ecx],0x1006fc9c
10014952:	call   0x100147f5
10014957:	mov    eax,esi
10014959:	call   0x100147f5
1001495e:	call   0x1001779c
10014963:	pop    esi
10014964:	ret    
10014965:	push   esi
10014966:	mov    esi,ecx
10014968:	call   0x10014946
1001496d:	test   BYTE PTR [esp+0x8],0x1
10014972:	je     0x1001497b
10014974:	push   esi
10014975:	call   0x10042e92
1001497a:	pop    ecx
1001497b:	mov    eax,esi
1001497d:	pop    esi
1001497e:	ret    0x4
10014981:	push   0x4
10014983:	mov    eax,0x10060d1c
10014988:	call   0x10059a35
1001498d:	cmp    DWORD PTR [ebp+0xc],0x0
10014991:	je     0x100149c9
10014993:	cmp    DWORD PTR [ebp+0x10],0x0
10014997:	je     0x100149c9
10014999:	call   DWORD PTR ds:0x1007efec
1001499f:	and    DWORD PTR [ebp-0x10],0x0
100149a3:	push   DWORD PTR [ebp+0x10]
100149a6:	mov    eax,DWORD PTR [ebp+0x8]
100149a9:	push   DWORD PTR [ebp+0xc]
100149ac:	and    DWORD PTR [ebp-0x4],0x0
100149b0:	add    eax,0x4
100149b3:	push   eax
100149b4:	call   0x100146d2
100149b9:	neg    eax
100149bb:	sbb    eax,eax
100149bd:	and    eax,0x7ff8fff2
100149c2:	add    eax,0x8007000e
100149c7:	jmp    0x100149ce
100149c9:	mov    eax,0x80070057
100149ce:	call   0x10059b0d
100149d3:	ret    0xc
100149d6:	push   ebp
100149d7:	sub    esp,0x404
100149dd:	lea    ebp,[esp-0x4]
100149e1:	mov    eax,ds:0x1007e030
100149e6:	xor    eax,ebp
100149e8:	mov    DWORD PTR [ebp+0x404],eax
100149ee:	push   0x1c
100149f0:	mov    eax,0x10062aef
100149f5:	call   0x10059a68
100149fa:	mov    eax,DWORD PTR [ebp+0x414]
10014a00:	mov    edi,ecx
10014a02:	mov    ebx,edx
10014a04:	mov    DWORD PTR [ebp-0x14],eax
10014a07:	call   DWORD PTR ds:0x1007efec
10014a0d:	xor    esi,esi
10014a0f:	mov    DWORD PTR [ebp-0x28],esi
10014a12:	mov    eax,DWORD PTR [ebp+0x410]
10014a18:	mov    DWORD PTR [ebp-0x4],esi
10014a1b:	mov    DWORD PTR [ebp-0x20],eax
10014a1e:	mov    DWORD PTR [ebp-0x24],esi
10014a21:	mov    DWORD PTR [ebp+0x0],esi
10014a24:	push   0x2
10014a26:	push   esi
10014a27:	push   edi
10014a28:	mov    BYTE PTR [ebp-0x4],0x1
10014a2c:	call   DWORD PTR ds:0x10066100
10014a32:	cmp    eax,esi
10014a34:	mov    DWORD PTR [ebp-0x18],eax
10014a37:	jne    0x10014a45
10014a39:	call   0x100066ab
10014a3e:	mov    esi,eax
10014a40:	jmp    0x10014b29
10014a45:	push   DWORD PTR [ebp-0x14]
10014a48:	push   ebx
10014a49:	push   eax
10014a4a:	call   DWORD PTR ds:0x1006607c
10014a50:	mov    edi,eax
10014a52:	cmp    edi,esi
10014a54:	jne    0x10014a60
10014a56:	call   0x100066ab
10014a5b:	jmp    0x10014b1e
10014a60:	push   edi
10014a61:	push   DWORD PTR [ebp-0x18]
10014a64:	call   DWORD PTR ds:0x10066080
10014a6a:	cmp    eax,esi
10014a6c:	mov    DWORD PTR [ebp-0x1c],eax
10014a6f:	je     0x10014a56
10014a71:	push   edi
10014a72:	push   DWORD PTR [ebp-0x18]
10014a75:	call   DWORD PTR ds:0x10066088
10014a7b:	mov    edi,eax
10014a7d:	lea    eax,[edi+0x1]
10014a80:	cmp    eax,edi
10014a82:	mov    DWORD PTR [ebp-0x14],edi
10014a85:	jae    0x10014aa1
10014a87:	lea    eax,[ebp+0x4]
10014a8a:	cmp    DWORD PTR [ebp+0x0],eax
10014a8d:	je     0x10014a97
10014a8f:	lea    eax,[ebp+0x0]
10014a92:	call   0x10017986
10014a97:	mov    eax,0x8007000e
10014a9c:	jmp    0x10014b3b
10014aa1:	push   0x2
10014aa3:	push   eax
10014aa4:	mov    BYTE PTR [ebp-0x4],0x2
10014aa8:	call   0x10018035
10014aad:	cmp    eax,0x400
10014ab2:	pop    ecx
10014ab3:	pop    ecx
10014ab4:	jbe    0x10014ac2
10014ab6:	push   eax
10014ab7:	lea    eax,[ebp+0x0]
10014aba:	push   eax
10014abb:	call   0x10017c46
10014ac0:	jmp    0x10014ac8
10014ac2:	lea    eax,[ebp+0x4]
10014ac5:	mov    DWORD PTR [ebp+0x0],eax
10014ac8:	mov    DWORD PTR [ebp-0x4],0x1
10014acf:	jmp    0x10014adc
10014ad1:	mov    eax,0x10014ad7
10014ad6:	ret    
10014ad7:	mov    edi,DWORD PTR [ebp-0x14]
10014ada:	xor    esi,esi
10014adc:	mov    ebx,DWORD PTR [ebp+0x0]
10014adf:	cmp    ebx,esi
10014ae1:	jne    0x10014aea
10014ae3:	mov    esi,0x8007000e
10014ae8:	jmp    0x10014b20
10014aea:	call   DWORD PTR ds:0x1007efec
10014af0:	push   edi
10014af1:	push   ebx
10014af2:	push   edi
10014af3:	push   DWORD PTR [ebp-0x1c]
10014af6:	push   esi
10014af7:	push   eax
10014af8:	call   DWORD PTR ds:0x1006608c
10014afe:	cmp    eax,esi
10014b00:	je     0x10014a56
10014b06:	mov    ecx,DWORD PTR [ebp+0x0]
10014b09:	push   DWORD PTR [ebp+0x418]
10014b0f:	mov    WORD PTR [ecx+eax*2],si
10014b13:	push   DWORD PTR [ebp+0x0]
10014b16:	lea    ecx,[ebp-0x24]
10014b19:	call   0x1001532c
10014b1e:	mov    esi,eax
10014b20:	push   DWORD PTR [ebp-0x18]
10014b23:	call   DWORD PTR ds:0x100660fc
10014b29:	lea    eax,[ebp+0x4]
10014b2c:	cmp    DWORD PTR [ebp+0x0],eax
10014b2f:	je     0x10014b39
10014b31:	lea    eax,[ebp+0x0]
10014b34:	call   0x10017986
10014b39:	mov    eax,esi
10014b3b:	mov    ecx,DWORD PTR [ebp-0xc]
10014b3e:	mov    DWORD PTR fs:0x0,ecx
10014b45:	pop    ecx
10014b46:	pop    edi
10014b47:	pop    esi
10014b48:	pop    ebx
10014b49:	mov    ecx,DWORD PTR [ebp+0x404]
10014b4f:	xor    ecx,ebp
10014b51:	call   0x10042e97
10014b56:	add    ebp,0x408
10014b5c:	leave  
10014b5d:	ret    0xc
10014b60:	mov    eax,DWORD PTR [esp+0x4]
10014b64:	add    eax,0x4
10014b67:	call   0x100147f5
10014b6c:	ret    0x4
10014b6f:	push   esi
10014b70:	mov    esi,eax
10014b72:	push   edi
10014b73:	add    esi,0x4
10014b76:	xor    edi,edi
10014b78:	cmp    DWORD PTR [esi+0x8],edi
10014b7b:	jle    0x10014b97
10014b7d:	mov    eax,DWORD PTR [esi]
10014b7f:	push   DWORD PTR [esp+0xc]
10014b83:	mov    eax,DWORD PTR [eax+edi*4]
10014b86:	push   eax
10014b87:	call   DWORD PTR ds:0x10066134
10014b8d:	test   eax,eax
10014b8f:	je     0x10014ba3
10014b91:	inc    edi
10014b92:	cmp    edi,DWORD PTR [esi+0x8]
10014b95:	jl     0x10014b7d
10014b97:	or     eax,0xffffffff
10014b9a:	cmp    eax,0xffffffff
10014b9d:	jne    0x10014ba7
10014b9f:	xor    eax,eax
10014ba1:	jmp    0x10014bb0
10014ba3:	mov    eax,edi
10014ba5:	jmp    0x10014b9a
10014ba7:	mov    ecx,esi
10014ba9:	call   0x100177c3
10014bae:	mov    eax,DWORD PTR [eax]
10014bb0:	pop    edi
10014bb1:	pop    esi
10014bb2:	ret    0x4
10014bb5:	test   BYTE PTR ds:0x10080fb0,0x1
10014bbc:	jne    0x10014c11
10014bbe:	or     DWORD PTR ds:0x10080fb0,0x1
10014bc5:	mov    DWORD PTR ds:0x10080fb4,0x1006cc8c
10014bcf:	mov    WORD PTR ds:0x10080fb8,0x8
10014bd8:	mov    DWORD PTR ds:0x10080fbc,0x1006cc88
10014be2:	mov    WORD PTR ds:0x10080fc0,0x4008
10014beb:	mov    DWORD PTR ds:0x10080fc4,0x1006cc84
10014bf5:	mov    WORD PTR ds:0x10080fc8,0x13
10014bfe:	mov    DWORD PTR ds:0x10080fcc,0x1006cc80
10014c08:	mov    WORD PTR ds:0x10080fd0,0x11
10014c11:	push   esi
10014c12:	xor    esi,esi
10014c14:	push   DWORD PTR [esi*8+0x10080fb4]
10014c1b:	push   DWORD PTR [esp+0xc]
10014c1f:	call   DWORD PTR ds:0x10066134
10014c25:	test   eax,eax
10014c27:	je     0x10014c33
10014c29:	inc    esi
10014c2a:	cmp    esi,0x4
10014c2d:	jl     0x10014c14
10014c2f:	xor    eax,eax
10014c31:	pop    esi
10014c32:	ret    
10014c33:	mov    ax,WORD PTR [esi*8+0x10080fb8]
10014c3b:	mov    ecx,DWORD PTR [esp+0xc]
10014c3f:	mov    WORD PTR [ecx],ax
10014c42:	xor    eax,eax
10014c44:	inc    eax
10014c45:	pop    esi
10014c46:	ret    
10014c47:	push   esi
10014c48:	xor    esi,esi
10014c4a:	test   eax,eax
10014c4c:	jne    0x10014c5e
10014c4e:	pop    esi
10014c4f:	ret    
10014c50:	cmp    cx,WORD PTR [esp+0x8]
10014c55:	je     0x10014c68
10014c57:	push   eax
10014c58:	call   DWORD PTR ds:0x10066348
10014c5e:	movzx  ecx,WORD PTR [eax]
10014c61:	test   cx,cx
10014c64:	jne    0x10014c50
10014c66:	jmp    0x10014c6a
10014c68:	mov    esi,eax
10014c6a:	mov    eax,esi
10014c6c:	pop    esi
10014c6d:	ret    
10014c6e:	mov    eax,DWORD PTR [esi]
10014c70:	movzx  ecx,WORD PTR [eax]
10014c73:	cmp    ecx,0x9
10014c76:	jl     0x10014c92
10014c78:	cmp    ecx,0xa
10014c7b:	jle    0x10014c87
10014c7d:	cmp    ecx,0xd
10014c80:	je     0x10014c87
10014c82:	cmp    ecx,0x20
10014c85:	jne    0x10014c92
10014c87:	push   eax
10014c88:	call   DWORD PTR ds:0x10066348
10014c8e:	mov    DWORD PTR [esi],eax
10014c90:	jmp    0x10014c6e
10014c92:	ret    
10014c93:	push   ebp
10014c94:	mov    ebp,esp
10014c96:	push   ecx
10014c97:	push   ecx
10014c98:	push   ebx
10014c99:	push   esi
10014c9a:	mov    esi,ecx
10014c9c:	mov    ebx,eax
10014c9e:	call   0x10014c6e
10014ca3:	mov    eax,DWORD PTR [esi]
10014ca5:	movzx  ecx,WORD PTR [eax]
10014ca8:	test   cx,cx
10014cab:	jne    0x10014cb7
10014cad:	mov    eax,0x80020009
10014cb2:	jmp    0x10014d99
10014cb7:	cmp    cx,0x27
10014cbb:	push   edi
10014cbc:	mov    DWORD PTR [ebp-0x8],ebx
10014cbf:	jne    0x10014d40
10014cc1:	mov    edi,DWORD PTR ds:0x10066348
10014cc7:	push   eax
10014cc8:	call   edi
10014cca:	mov    DWORD PTR [esi],eax
10014ccc:	jmp    0x10014d26
10014cce:	mov    eax,DWORD PTR [esi]
10014cd0:	cmp    WORD PTR [eax],0x27
10014cd4:	jne    0x10014cdf
10014cd6:	push   eax
10014cd7:	call   edi
10014cd9:	cmp    WORD PTR [eax],0x27
10014cdd:	jne    0x10014d2c
10014cdf:	mov    eax,DWORD PTR [esi]
10014ce1:	cmp    WORD PTR [eax],0x27
10014ce5:	jne    0x10014cec
10014ce7:	push   eax
10014ce8:	call   edi
10014cea:	mov    DWORD PTR [esi],eax
10014cec:	mov    eax,DWORD PTR [esi]
10014cee:	push   eax
10014cef:	mov    DWORD PTR [ebp-0x4],eax
10014cf2:	call   edi
10014cf4:	mov    edx,DWORD PTR [ebp-0x8]
10014cf7:	mov    DWORD PTR [esi],eax
10014cf9:	sub    eax,DWORD PTR [ebp-0x4]
10014cfc:	add    edx,0x2000
10014d02:	sar    eax,1
10014d04:	lea    ecx,[ebx+eax*2+0x2]
10014d08:	cmp    ecx,edx
10014d0a:	jae    0x10014d9d
10014d10:	test   eax,eax
10014d12:	jle    0x10014d24
10014d14:	mov    ecx,DWORD PTR [ebp-0x4]
10014d17:	mov    dx,WORD PTR [ecx]
10014d1a:	mov    WORD PTR [ebx],dx
10014d1d:	inc    ebx
10014d1e:	inc    ebx
10014d1f:	inc    ecx
10014d20:	inc    ecx
10014d21:	dec    eax
10014d22:	jne    0x10014d17
10014d24:	mov    eax,DWORD PTR [esi]
10014d26:	cmp    WORD PTR [eax],0x0
10014d2a:	jne    0x10014cce
10014d2c:	mov    eax,DWORD PTR [esi]
10014d2e:	cmp    WORD PTR [eax],0x0
10014d32:	je     0x10014d9d
10014d34:	and    WORD PTR [ebx],0x0
10014d38:	push   DWORD PTR [esi]
10014d3a:	call   edi
10014d3c:	mov    DWORD PTR [esi],eax
10014d3e:	jmp    0x10014d96
10014d40:	mov    eax,DWORD PTR [esi]
10014d42:	movzx  ecx,WORD PTR [eax]
10014d45:	cmp    ecx,0x9
10014d48:	jl     0x10014d59
10014d4a:	cmp    ecx,0xa
10014d4d:	jle    0x10014d92
10014d4f:	cmp    ecx,0xd
10014d52:	je     0x10014d92
10014d54:	cmp    ecx,0x20
10014d57:	je     0x10014d92
10014d59:	push   eax
10014d5a:	mov    edi,eax
10014d5c:	call   DWORD PTR ds:0x10066348
10014d62:	mov    edx,DWORD PTR [ebp-0x8]
10014d65:	mov    DWORD PTR [esi],eax
10014d67:	sub    eax,edi
10014d69:	sar    eax,1
10014d6b:	lea    ecx,[ebx+eax*2+0x2]
10014d6f:	add    edx,0x2000
10014d75:	cmp    ecx,edx
10014d77:	jae    0x10014d9d
10014d79:	test   eax,eax
10014d7b:	jle    0x10014d8a
10014d7d:	mov    cx,WORD PTR [edi]
10014d80:	mov    WORD PTR [ebx],cx
10014d83:	inc    ebx
10014d84:	inc    ebx
10014d85:	inc    edi
10014d86:	inc    edi
10014d87:	dec    eax
10014d88:	jne    0x10014d7d
10014d8a:	mov    eax,DWORD PTR [esi]
10014d8c:	cmp    WORD PTR [eax],0x0
10014d90:	jne    0x10014d40
10014d92:	and    WORD PTR [ebx],0x0
10014d96:	xor    eax,eax
10014d98:	pop    edi
10014d99:	pop    esi
10014d9a:	pop    ebx
10014d9b:	leave  
10014d9c:	ret    
10014d9d:	mov    eax,0x80020009
10014da2:	jmp    0x10014d98
10014da4:	push   ebp
10014da5:	lea    ebp,[esp-0x2108]
10014dac:	mov    eax,0x2108
10014db1:	call   0x10049de0
10014db6:	push   0xffffffff
10014db8:	push   0x1005fbf3
10014dbd:	mov    eax,fs:0x0
10014dc3:	push   eax
10014dc4:	sub    esp,0x1c
10014dc7:	mov    eax,ds:0x1007e030
10014dcc:	xor    eax,ebp
10014dce:	mov    DWORD PTR [ebp+0x2104],eax
10014dd4:	push   ebx
10014dd5:	push   esi
10014dd6:	push   edi
10014dd7:	push   eax
10014dd8:	lea    eax,[ebp-0xc]
10014ddb:	mov    fs:0x0,eax
10014de1:	mov    DWORD PTR [ebp-0x10],esp
10014de4:	mov    eax,DWORD PTR [ebp+0x2110]
10014dea:	mov    DWORD PTR [ebp-0x1c],eax
10014ded:	mov    eax,DWORD PTR [ebp+0x2114]
10014df3:	mov    esi,ecx
10014df5:	mov    edi,edx
10014df7:	mov    DWORD PTR [ebp-0x28],eax
10014dfa:	xor    ebx,ebx
10014dfc:	lea    eax,[ebp+0x104]
10014e02:	mov    DWORD PTR [ebp-0x24],esi
10014e05:	mov    DWORD PTR [ebp-0x20],edi
10014e08:	mov    DWORD PTR [ebp-0x14],ebx
10014e0b:	call   0x10014c93
10014e10:	cmp    eax,ebx
10014e12:	jl     0x100150cd
10014e18:	lea    eax,[ebp-0x14]
10014e1b:	push   eax
10014e1c:	lea    eax,[ebp+0x104]
10014e22:	push   eax
10014e23:	call   0x10014bb5
10014e28:	test   eax,eax
10014e2a:	pop    ecx
10014e2b:	pop    ecx
10014e2c:	jne    0x10014e38
10014e2e:	mov    eax,0x80020009
10014e33:	jmp    0x100150cd
10014e38:	call   0x10014c6e
10014e3d:	lea    eax,[ebp+0x104]
10014e43:	mov    ecx,esi
10014e45:	call   0x10014c93
10014e4a:	cmp    eax,ebx
10014e4c:	jl     0x100150cd
10014e52:	movzx  eax,WORD PTR [ebp-0x14]
10014e56:	sub    eax,0x8
10014e59:	je     0x10015086
10014e5f:	sub    eax,0x9
10014e62:	je     0x10014f6c
10014e68:	dec    eax
10014e69:	dec    eax
10014e6a:	je     0x10014f40
10014e70:	sub    eax,0x3ff5
10014e75:	jne    0x100150bc
10014e7b:	lea    eax,[ebp+0x104]
10014e81:	push   eax
10014e82:	call   DWORD PTR ds:0x100660c4
10014e88:	inc    eax
10014e89:	inc    eax
10014e8a:	mov    DWORD PTR [ebp+0x0],ebx
10014e8d:	push   0x2
10014e8f:	mov    DWORD PTR [ebp-0x4],ebx
10014e92:	push   eax
10014e93:	mov    BYTE PTR [ebp-0x4],0x1
10014e97:	call   0x10018035
10014e9c:	cmp    eax,0x100
10014ea1:	pop    ecx
10014ea2:	pop    ecx
10014ea3:	jbe    0x10014eb1
10014ea5:	push   eax
10014ea6:	lea    eax,[ebp+0x0]
10014ea9:	push   eax
10014eaa:	call   0x10017c46
10014eaf:	jmp    0x10014ec1
10014eb1:	lea    eax,[ebp+0x4]
10014eb4:	mov    DWORD PTR [ebp+0x0],eax
10014eb7:	jmp    0x10014ec1
10014eb9:	mov    eax,0x10014ebf
10014ebe:	ret    
10014ebf:	xor    ebx,ebx
10014ec1:	mov    esi,DWORD PTR [ebp+0x0]
10014ec4:	cmp    esi,ebx
10014ec6:	je     0x10014f24
10014ec8:	cmp    WORD PTR [ebp+0x104],bx
10014ecf:	lea    edi,[ebp+0x104]
10014ed5:	je     0x10014f0b
10014ed7:	mov    ebx,DWORD PTR ds:0x10066348
10014edd:	push   edi
10014ede:	call   ebx
10014ee0:	movzx  ecx,WORD PTR [edi]
10014ee3:	cmp    cx,0x5c
10014ee7:	jne    0x10014efc
10014ee9:	cmp    WORD PTR [eax],0x30
10014eed:	jne    0x10014efc
10014eef:	and    WORD PTR [esi],0x0
10014ef3:	inc    esi
10014ef4:	push   eax
10014ef5:	inc    esi
10014ef6:	call   ebx
10014ef8:	mov    edi,eax
10014efa:	jmp    0x10014f03
10014efc:	mov    WORD PTR [esi],cx
10014eff:	inc    esi
10014f00:	inc    esi
10014f01:	inc    edi
10014f02:	inc    edi
10014f03:	cmp    WORD PTR [edi],0x0
10014f07:	jne    0x10014edd
10014f09:	xor    ebx,ebx
10014f0b:	mov    WORD PTR [esi],bx
10014f0e:	mov    WORD PTR [esi+0x2],bx
10014f12:	push   DWORD PTR [ebp+0x0]
10014f15:	push   DWORD PTR [ebp-0x1c]
10014f18:	push   DWORD PTR [ebp-0x20]
10014f1b:	call   0x10014530
10014f20:	mov    esi,eax
10014f22:	jmp    0x10014f27
10014f24:	push   0xe
10014f26:	pop    esi
10014f27:	lea    eax,[ebp+0x4]
10014f2a:	cmp    DWORD PTR [ebp+0x0],eax
10014f2d:	je     0x100150af
10014f33:	lea    eax,[ebp+0x0]
10014f36:	call   0x10017986
10014f3b:	jmp    0x100150af
10014f40:	call   DWORD PTR ds:0x1007efec
10014f46:	lea    eax,[ebp-0x18]
10014f49:	push   eax
10014f4a:	push   ebx
10014f4b:	push   ebx
10014f4c:	lea    eax,[ebp+0x104]
10014f52:	push   eax
10014f53:	call   DWORD PTR ds:0x10066298
10014f59:	mov    eax,DWORD PTR [ebp-0x18]
10014f5c:	mov    DWORD PTR [ebp-0x14],eax
10014f5f:	push   0x4
10014f61:	lea    eax,[ebp-0x14]
10014f64:	push   eax
10014f65:	push   0x4
10014f67:	jmp    0x100150a1
10014f6c:	lea    eax,[ebp+0x104]
10014f72:	push   eax
10014f73:	call   DWORD PTR ds:0x100660c4
10014f79:	test   al,0x1
10014f7b:	mov    DWORD PTR [ebp-0x14],eax
10014f7e:	je     0x10014f8a
10014f80:	mov    eax,0x80004005
10014f85:	jmp    0x100150cd
10014f8a:	cdq    
10014f8b:	sub    eax,edx
10014f8d:	mov    esi,eax
10014f8f:	sar    esi,1
10014f91:	mov    DWORD PTR [ebp-0x18],esi
10014f94:	mov    DWORD PTR [ebp+0x0],ebx
10014f97:	push   0x1
10014f99:	mov    DWORD PTR [ebp-0x4],0x3
10014fa0:	push   esi
10014fa1:	mov    BYTE PTR [ebp-0x4],0x4
10014fa5:	call   0x10018035
10014faa:	cmp    eax,0x100
10014faf:	pop    ecx
10014fb0:	pop    ecx
10014fb1:	jbe    0x10014fbf
10014fb3:	push   eax
10014fb4:	lea    eax,[ebp+0x0]
10014fb7:	push   eax
10014fb8:	call   0x10017c46
10014fbd:	jmp    0x10014fd5
10014fbf:	lea    eax,[ebp+0x4]
10014fc2:	mov    DWORD PTR [ebp+0x0],eax
10014fc5:	jmp    0x10014fd5
10014fc7:	mov    eax,0x10014fcd
10014fcc:	ret    
10014fcd:	mov    edi,DWORD PTR [ebp-0x20]
10014fd0:	mov    esi,DWORD PTR [ebp-0x18]
10014fd3:	xor    ebx,ebx
10014fd5:	cmp    DWORD PTR [ebp+0x0],ebx
10014fd8:	jne    0x10014feb
10014fda:	lea    eax,[ebp+0x4]
10014fdd:	test   eax,eax
10014fdf:	je     0x10014f80
10014fe1:	lea    eax,[ebp+0x0]
10014fe4:	call   0x10017986
10014fe9:	jmp    0x10014f80
10014feb:	push   esi
10014fec:	push   ebx
10014fed:	push   DWORD PTR [ebp+0x0]
10014ff0:	call   0x10045c00
10014ff5:	add    esp,0xc
10014ff8:	xor    esi,esi
10014ffa:	cmp    DWORD PTR [ebp-0x14],ebx
10014ffd:	jle    0x1001505d
10014fff:	movzx  ecx,WORD PTR [ebp+esi*2+0x104]
10015007:	mov    eax,esi
10015009:	cdq    
1001500a:	sub    eax,edx
1001500c:	sar    eax,1
1001500e:	add    eax,DWORD PTR [ebp+0x0]
10015011:	movzx  edx,cx
10015014:	cmp    edx,0x30
10015017:	jl     0x10015041
10015019:	cmp    edx,0x39
1001501c:	jle    0x1001503a
1001501e:	cmp    edx,0x40
10015021:	jle    0x10015041
10015023:	cmp    edx,0x46
10015026:	jle    0x10015035
10015028:	add    edx,0xffffff9f
1001502b:	cmp    edx,0x5
1001502e:	ja     0x10015041
10015030:	sub    cl,0x57
10015033:	jmp    0x1001503d
10015035:	sub    cl,0x37
10015038:	jmp    0x1001503d
1001503a:	sub    cl,0x30
1001503d:	mov    dl,cl
1001503f:	jmp    0x10015043
10015041:	xor    dl,dl
10015043:	mov    edi,esi
10015045:	and    edi,0x1
10015048:	shl    edi,0x2
1001504b:	push   0x4
1001504d:	pop    ecx
1001504e:	sub    ecx,edi
10015050:	shl    dl,cl
10015052:	or     BYTE PTR [eax],dl
10015054:	inc    esi
10015055:	cmp    esi,DWORD PTR [ebp-0x14]
10015058:	jl     0x10014fff
1001505a:	mov    edi,DWORD PTR [ebp-0x20]
1001505d:	push   DWORD PTR [ebp-0x18]
10015060:	mov    eax,DWORD PTR [edi]
10015062:	push   DWORD PTR [ebp+0x0]
10015065:	push   0x3
10015067:	push   ebx
10015068:	push   DWORD PTR [ebp-0x1c]
1001506b:	push   eax
1001506c:	call   DWORD PTR ds:0x10066014
10015072:	mov    esi,eax
10015074:	lea    eax,[ebp+0x4]
10015077:	cmp    DWORD PTR [ebp+0x0],eax
1001507a:	je     0x100150af
1001507c:	lea    eax,[ebp+0x0]
1001507f:	call   0x10017986
10015084:	jmp    0x100150af
10015086:	lea    eax,[ebp+0x104]
1001508c:	push   eax
1001508d:	call   DWORD PTR ds:0x100660c4
10015093:	lea    eax,[eax+eax*1+0x2]
10015097:	push   eax
10015098:	lea    eax,[ebp+0x104]
1001509e:	push   eax
1001509f:	push   0x1
100150a1:	push   ebx
100150a2:	push   DWORD PTR [ebp-0x1c]
100150a5:	push   DWORD PTR [edi]
100150a7:	call   DWORD PTR ds:0x10066014
100150ad:	mov    esi,eax
100150af:	cmp    esi,ebx
100150b1:	je     0x100150bc
100150b3:	mov    eax,esi
100150b5:	call   0x100143b6
100150ba:	jmp    0x100150cd
100150bc:	mov    eax,DWORD PTR [ebp-0x28]
100150bf:	mov    ecx,DWORD PTR [ebp-0x24]
100150c2:	call   0x10014c93
100150c7:	cmp    eax,ebx
100150c9:	jl     0x100150cd
100150cb:	xor    eax,eax
100150cd:	mov    ecx,DWORD PTR [ebp-0xc]
100150d0:	mov    DWORD PTR fs:0x0,ecx
100150d7:	pop    ecx
100150d8:	pop    edi
100150d9:	pop    esi
100150da:	pop    ebx
100150db:	mov    ecx,DWORD PTR [ebp+0x2104]
100150e1:	xor    ecx,ebp
100150e3:	call   0x10042e97
100150e8:	add    ebp,0x2108
100150ee:	leave  
100150ef:	ret    0x8
100150f2:	push   esi
100150f3:	mov    esi,0x1006ccb8
100150f8:	push   DWORD PTR [esi]
100150fa:	push   DWORD PTR [esp+0xc]
100150fe:	call   DWORD PTR ds:0x10066134
10015104:	test   eax,eax
10015106:	je     0x1001511a
10015108:	add    esi,0x4
1001510b:	cmp    esi,0x1006cce8
10015111:	jl     0x100150f8
10015113:	xor    eax,eax
10015115:	inc    eax
10015116:	pop    esi
10015117:	ret    0x4
1001511a:	xor    eax,eax
1001511c:	jmp    0x10015116
1001511e:	push   ebp
1001511f:	mov    ebp,esp
10015121:	push   ecx
10015122:	xor    eax,eax
10015124:	push   eax
10015125:	push   eax
10015126:	push   eax
10015127:	push   eax
10015128:	push   eax
10015129:	push   eax
1001512a:	push   eax
1001512b:	lea    ecx,[ebp-0x4]
1001512e:	push   ecx
1001512f:	push   eax
10015130:	push   eax
10015131:	push   eax
10015132:	push   DWORD PTR [ebp+0x8]
10015135:	mov    DWORD PTR [ebp-0x4],eax
10015138:	call   DWORD PTR ds:0x10066008
1001513e:	test   eax,eax
10015140:	je     0x10015146
10015142:	xor    eax,eax
10015144:	jmp    0x1001514f
10015146:	xor    eax,eax
10015148:	cmp    eax,DWORD PTR [ebp-0x4]
1001514b:	sbb    eax,eax
1001514d:	neg    eax
1001514f:	leave  
10015150:	ret    0x4
10015153:	mov    eax,0x2004
10015158:	call   0x10049de0
1001515d:	mov    eax,ds:0x1007e030
10015162:	xor    eax,esp
10015164:	mov    DWORD PTR [esp+0x2000],eax
1001516b:	cmp    WORD PTR [edi],0x3d
1001516f:	push   esi
10015170:	mov    esi,ecx
10015172:	jne    0x100151a0
10015174:	mov    eax,edi
10015176:	call   0x10014c93
1001517b:	test   eax,eax
1001517d:	jl     0x100151a2
1001517f:	call   0x10014c6e
10015184:	lea    eax,[esp+0x4]
10015188:	mov    ecx,esi
1001518a:	call   0x10014c93
1001518f:	test   eax,eax
10015191:	jl     0x100151a2
10015193:	mov    eax,edi
10015195:	mov    ecx,esi
10015197:	call   0x10014c93
1001519c:	test   eax,eax
1001519e:	jl     0x100151a2
100151a0:	xor    eax,eax
100151a2:	mov    ecx,DWORD PTR [esp+0x2004]
100151a9:	pop    esi
100151aa:	xor    ecx,esp
100151ac:	call   0x10042e97
100151b1:	add    esp,0x2004
100151b7:	ret    
100151b8:	push   0x60
100151ba:	mov    eax,0x10061df3
100151bf:	call   0x10059a9e
100151c4:	mov    eax,DWORD PTR [ebp+0x8]
100151c7:	test   eax,eax
100151c9:	mov    edi,ecx
100151cb:	mov    DWORD PTR [ebp-0x54],eax
100151ce:	mov    DWORD PTR [ebp-0x64],edi
100151d1:	je     0x1001531f
100151d7:	test   edi,edi
100151d9:	je     0x1001531f
100151df:	and    DWORD PTR [edi],0x0
100151e2:	push   eax
100151e3:	call   DWORD PTR ds:0x100660c4
100151e9:	add    eax,eax
100151eb:	lea    esi,[ebp-0x60]
100151ee:	call   0x1001484a
100151f3:	xor    ecx,ecx
100151f5:	mov    DWORD PTR [ebp-0x4],ecx
100151f8:	cmp    DWORD PTR [ebp-0x58],ecx
100151fb:	jne    0x1001520e
100151fd:	push   ecx
100151fe:	call   DWORD PTR ds:0x1006642c
10015204:	mov    eax,0x8007000e
10015209:	jmp    0x10015324
1001520e:	mov    eax,DWORD PTR [ebp-0x54]
10015211:	mov    DWORD PTR [ebx],eax
10015213:	cmp    WORD PTR [eax],cx
10015216:	mov    DWORD PTR [ebp-0x54],ecx
10015219:	je     0x10015259
1001521b:	mov    eax,DWORD PTR [ebx]
1001521d:	cmp    WORD PTR [eax],0x25
10015221:	push   eax
10015222:	jne    0x10015233
10015224:	call   DWORD PTR ds:0x10066348
1001522a:	mov    DWORD PTR [ebx],eax
1001522c:	cmp    WORD PTR [eax],0x25
10015230:	jne    0x10015273
10015232:	push   eax
10015233:	xor    edi,edi
10015235:	inc    edi
10015236:	lea    esi,[ebp-0x60]
10015239:	call   0x1001489b
1001523e:	test   eax,eax
10015240:	je     0x10015313
10015246:	push   DWORD PTR [ebx]
10015248:	call   DWORD PTR ds:0x10066348
1001524e:	mov    DWORD PTR [ebx],eax
10015250:	cmp    WORD PTR [eax],0x0
10015254:	jne    0x1001521b
10015256:	mov    edi,DWORD PTR [ebp-0x64]
10015259:	mov    eax,DWORD PTR [ebp-0x58]
1001525c:	and    DWORD PTR [ebp-0x58],0x0
10015260:	mov    DWORD PTR [edi],eax
10015262:	push   DWORD PTR [ebp-0x58]
10015265:	call   DWORD PTR ds:0x1006642c
1001526b:	mov    eax,DWORD PTR [ebp-0x54]
1001526e:	jmp    0x10015324
10015273:	push   0x25
10015275:	call   0x10014c47
1001527a:	test   eax,eax
1001527c:	pop    ecx
1001527d:	mov    DWORD PTR [ebp-0x68],eax
10015280:	je     0x100152fb
10015282:	mov    ecx,DWORD PTR [ebx]
10015284:	sub    eax,ecx
10015286:	sar    eax,1
10015288:	cmp    eax,0x1f
1001528b:	jg     0x10015307
1001528d:	push   eax
1001528e:	push   ecx
1001528f:	lea    eax,[ebp-0x50]
10015292:	push   0x20
10015294:	push   eax
10015295:	call   0x10045e5d
1001529a:	push   eax
1001529b:	call   0x10001f5d
100152a0:	add    esp,0x14
100152a3:	lea    eax,[ebp-0x50]
100152a6:	push   eax
100152a7:	mov    eax,DWORD PTR [ebx+0x4]
100152aa:	call   0x10014b6f
100152af:	mov    esi,eax
100152b1:	test   esi,esi
100152b3:	je     0x100152fb
100152b5:	call   DWORD PTR ds:0x1007efec
100152bb:	and    DWORD PTR [ebp-0x6c],0x0
100152bf:	push   esi
100152c0:	mov    BYTE PTR [ebp-0x4],0x1
100152c4:	call   DWORD PTR ds:0x100660c4
100152ca:	push   esi
100152cb:	mov    edi,eax
100152cd:	lea    esi,[ebp-0x60]
100152d0:	call   0x1001489b
100152d5:	test   eax,eax
100152d7:	mov    BYTE PTR [ebp-0x4],0x0
100152db:	je     0x10015313
100152dd:	mov    esi,DWORD PTR [ebp-0x68]
100152e0:	cmp    DWORD PTR [ebx],esi
100152e2:	je     0x10015246
100152e8:	push   DWORD PTR [ebx]
100152ea:	call   DWORD PTR ds:0x10066348
100152f0:	cmp    eax,esi
100152f2:	mov    DWORD PTR [ebx],eax
100152f4:	jne    0x100152e8
100152f6:	jmp    0x10015246
100152fb:	mov    DWORD PTR [ebp-0x54],0x80020009
10015302:	jmp    0x10015262
10015307:	mov    DWORD PTR [ebp-0x54],0x80004005
1001530e:	jmp    0x10015262
10015313:	mov    DWORD PTR [ebp-0x54],0x8007000e
1001531a:	jmp    0x10015262
1001531f:	mov    eax,0x80004003
10015324:	call   0x10059b21
10015329:	ret    0x4
1001532c:	push   ebp
1001532d:	lea    ebp,[esp-0x1f8c]
10015334:	mov    eax,0x200c
10015339:	call   0x10049de0
1001533e:	mov    eax,ds:0x1007e030
10015343:	xor    eax,ebp
10015345:	mov    DWORD PTR [ebp+0x1f88],eax
1001534b:	mov    eax,DWORD PTR [ebp+0x1f94]
10015351:	push   ebx
10015352:	push   esi
10015353:	push   edi
10015354:	mov    esi,ecx
10015356:	xor    edi,edi
10015358:	push   eax
10015359:	lea    ecx,[ebp-0x80]
1001535c:	mov    ebx,esi
1001535e:	mov    DWORD PTR [ebp-0x80],edi
10015361:	call   0x100151b8
10015366:	mov    ebx,eax
10015368:	cmp    ebx,edi
1001536a:	jl     0x10015449
10015370:	mov    eax,DWORD PTR [ebp-0x80]
10015373:	mov    DWORD PTR [esi],eax
10015375:	jmp    0x10015418
1001537a:	lea    eax,[ebp-0x78]
1001537d:	mov    ecx,esi
1001537f:	call   0x10014c93
10015384:	mov    ebx,eax
10015386:	cmp    ebx,edi
10015388:	jl     0x1001543e
1001538e:	xor    ebx,ebx
10015390:	push   DWORD PTR [ebx*8+0x1006f5d0]
10015397:	lea    eax,[ebp-0x78]
1001539a:	push   eax
1001539b:	call   DWORD PTR ds:0x10066134
100153a1:	test   eax,eax
100153a3:	je     0x100153f4
100153a5:	inc    ebx
100153a6:	cmp    ebx,0xe
100153a9:	jl     0x10015390
100153ab:	mov    DWORD PTR [ebp-0x7c],edi
100153ae:	cmp    DWORD PTR [ebp-0x7c],edi
100153b1:	je     0x10015423
100153b3:	lea    eax,[ebp-0x78]
100153b6:	mov    ecx,esi
100153b8:	call   0x10014c93
100153bd:	mov    ebx,eax
100153bf:	cmp    ebx,edi
100153c1:	jl     0x1001543e
100153c3:	cmp    WORD PTR [ebp-0x78],0x7b
100153c8:	jne    0x10015423
100153ca:	cmp    DWORD PTR [ebp+0x1f98],edi
100153d0:	lea    eax,[ebp-0x78]
100153d3:	mov    ecx,esi
100153d5:	je     0x10015400
100153d7:	mov    edi,DWORD PTR [esi]
100153d9:	push   0x0
100153db:	push   DWORD PTR [ebp+0x1f98]
100153e1:	push   DWORD PTR [ebp-0x7c]
100153e4:	push   eax
100153e5:	call   0x10015463
100153ea:	mov    ebx,eax
100153ec:	test   ebx,ebx
100153ee:	jl     0x1001542a
100153f0:	xor    edi,edi
100153f2:	jmp    0x10015411
100153f4:	mov    eax,DWORD PTR [ebx*8+0x1006f5d4]
100153fb:	mov    DWORD PTR [ebp-0x7c],eax
100153fe:	jmp    0x100153ae
10015400:	push   edi
10015401:	push   edi
10015402:	push   DWORD PTR [ebp-0x7c]
10015405:	push   eax
10015406:	call   0x10015463
1001540b:	mov    ebx,eax
1001540d:	cmp    ebx,edi
1001540f:	jl     0x1001543e
10015411:	call   0x10014c6e
10015416:	mov    eax,DWORD PTR [esi]
10015418:	cmp    WORD PTR [eax],di
1001541b:	jne    0x1001537a
10015421:	jmp    0x1001543e
10015423:	mov    ebx,0x80020009
10015428:	jmp    0x1001543e
1001542a:	push   0x0
1001542c:	push   0x0
1001542e:	push   DWORD PTR [ebp-0x7c]
10015431:	lea    eax,[ebp-0x78]
10015434:	push   eax
10015435:	mov    ecx,esi
10015437:	mov    DWORD PTR [esi],edi
10015439:	call   0x10015463
1001543e:	push   DWORD PTR [ebp-0x80]
10015441:	call   DWORD PTR ds:0x1006642c
10015447:	mov    eax,ebx
10015449:	mov    ecx,DWORD PTR [ebp+0x1f88]
1001544f:	pop    edi
10015450:	pop    esi
10015451:	xor    ecx,ebp
10015453:	pop    ebx
10015454:	call   0x10042e97
10015459:	add    ebp,0x1f8c
1001545f:	leave  
10015460:	ret    0x8
10015463:	push   ebp
10015464:	mov    ebp,esp
10015466:	and    esp,0xfffffff8
10015469:	push   0xffffffff
1001546b:	push   0x10060305
10015470:	mov    eax,fs:0x0
10015476:	push   eax
10015477:	sub    esp,0x438
1001547d:	mov    eax,ds:0x1007e030
10015482:	xor    eax,esp
10015484:	mov    DWORD PTR [esp+0x430],eax
1001548b:	push   ebx
1001548c:	push   esi
1001548d:	push   edi
1001548e:	mov    eax,ds:0x1007e030
10015493:	xor    eax,esp
10015495:	push   eax
10015496:	lea    eax,[esp+0x448]
1001549d:	mov    fs:0x0,eax
100154a3:	mov    eax,DWORD PTR [ebp+0xc]
100154a6:	mov    edi,DWORD PTR [ebp+0x8]
100154a9:	and    DWORD PTR [esp+0x10],0x0
100154ae:	mov    DWORD PTR [esp+0x18],ecx
100154b2:	mov    DWORD PTR [esp+0x1c],eax
100154b6:	mov    eax,DWORD PTR [ebp+0x14]
100154b9:	and    DWORD PTR [esp+0x450],0x0
100154c1:	mov    DWORD PTR [esp+0x24],eax
100154c5:	mov    eax,edi
100154c7:	call   0x10014c93
100154cc:	mov    esi,eax
100154ce:	test   esi,esi
100154d0:	jl     0x10015928
100154d6:	cmp    WORD PTR [edi],0x7d
100154da:	je     0x10015926
100154e0:	mov    esi,DWORD PTR ds:0x10066134
100154e6:	push   0x1006cc3c
100154eb:	push   edi
100154ec:	mov    DWORD PTR [esp+0x28],0x1
100154f4:	call   esi
100154f6:	mov    ebx,eax
100154f8:	neg    ebx
100154fa:	push   0x1006cc60
100154ff:	sbb    ebx,ebx
10015501:	push   edi
10015502:	inc    ebx
10015503:	call   esi
10015505:	test   eax,eax
10015507:	je     0x10015511
10015509:	test   ebx,ebx
1001550b:	je     0x100155dd
10015511:	mov    ecx,DWORD PTR [esp+0x18]
10015515:	mov    eax,edi
10015517:	call   0x10014c93
1001551c:	mov    esi,eax
1001551e:	test   esi,esi
10015520:	jl     0x10015915
10015526:	cmp    DWORD PTR [ebp+0x10],0x0
1001552a:	je     0x100155dd
10015530:	push   0x5c
10015532:	mov    eax,edi
10015534:	call   0x10014c47
10015539:	test   eax,eax
1001553b:	pop    ecx
1001553c:	jne    0x100159eb
10015542:	push   edi
10015543:	call   0x100150f2
10015548:	test   eax,eax
1001554a:	je     0x1001555e
1001554c:	mov    eax,DWORD PTR [esp+0x1c]
10015550:	push   edi
10015551:	lea    ecx,[esp+0x18]
10015555:	mov    DWORD PTR [esp+0x18],eax
10015559:	call   0x1001457a
1001555e:	test   ebx,ebx
10015560:	je     0x100155dd
10015562:	mov    ecx,DWORD PTR [esp+0x18]
10015566:	mov    eax,edi
10015568:	call   0x10014c93
1001556d:	mov    esi,eax
1001556f:	test   esi,esi
10015571:	jl     0x10015915
10015577:	mov    ecx,DWORD PTR [esp+0x18]
1001557b:	call   0x10015153
10015580:	mov    esi,eax
10015582:	test   esi,esi
10015584:	jl     0x10015915
1001558a:	cmp    WORD PTR [edi],0x7b
1001558e:	jne    0x100155ce
10015590:	push   edi
10015591:	call   DWORD PTR ds:0x100660c4
10015597:	cmp    eax,0x1
1001559a:	jne    0x100155ce
1001559c:	mov    ecx,DWORD PTR [esp+0x18]
100155a0:	push   0x0
100155a2:	push   DWORD PTR [ebp+0x10]
100155a5:	push   DWORD PTR [esp+0x18]
100155a9:	push   edi
100155aa:	call   0x10015463
100155af:	mov    esi,eax
100155b1:	test   esi,esi
100155b3:	jl     0x10015915
100155b9:	mov    ecx,DWORD PTR [esp+0x18]
100155bd:	mov    eax,edi
100155bf:	call   0x10014c93
100155c4:	mov    esi,eax
100155c6:	test   esi,esi
100155c8:	jl     0x10015915
100155ce:	cmp    WORD PTR [edi],0x7d
100155d2:	jne    0x100154e0
100155d8:	jmp    0x10015915
100155dd:	push   0x1006cc4c
100155e2:	push   edi
100155e3:	call   DWORD PTR ds:0x10066134
100155e9:	test   eax,eax
100155eb:	jne    0x10015606
100155ed:	and    DWORD PTR [esp+0x20],eax
100155f1:	mov    ecx,DWORD PTR [esp+0x18]
100155f5:	mov    eax,edi
100155f7:	call   0x10014c93
100155fc:	mov    esi,eax
100155fe:	test   esi,esi
10015600:	jl     0x10015915
10015606:	push   0x1006cc78
1001560b:	push   edi
1001560c:	xor    ebx,ebx
1001560e:	call   DWORD PTR ds:0x10066134
10015614:	test   eax,eax
10015616:	jne    0x10015702
1001561c:	mov    ecx,DWORD PTR [esp+0x18]
10015620:	lea    eax,[esp+0x234]
10015627:	call   0x10014c93
1001562c:	mov    esi,eax
1001562e:	test   esi,esi
10015630:	jl     0x10015915
10015636:	mov    ecx,DWORD PTR [esp+0x18]
1001563a:	mov    eax,edi
1001563c:	call   0x10014c93
10015641:	mov    esi,eax
10015643:	test   esi,esi
10015645:	jl     0x10015915
1001564b:	cmp    WORD PTR [edi],0x3d
1001564f:	jne    0x100159eb
10015655:	cmp    DWORD PTR [ebp+0x10],ebx
10015658:	je     0x10015696
1001565a:	mov    eax,DWORD PTR [esp+0x1c]
1001565e:	mov    ecx,DWORD PTR [esp+0x18]
10015662:	mov    BYTE PTR [esp+0x450],0x1
1001566a:	mov    DWORD PTR [esp+0x14],eax
1001566e:	push   edi
1001566f:	lea    eax,[esp+0x238]
10015676:	push   eax
10015677:	lea    edx,[esp+0x1c]
1001567b:	call   0x10014da4
10015680:	mov    esi,eax
10015682:	cmp    esi,ebx
10015684:	jl     0x10015a06
1001568a:	mov    BYTE PTR [esp+0x450],bl
10015691:	jmp    0x1001558a
10015696:	cmp    DWORD PTR [ebp+0x14],ebx
10015699:	jne    0x100156f0
1001569b:	cmp    DWORD PTR [esp+0x20],ebx
1001569f:	je     0x100156f0
100156a1:	lea    eax,[esp+0x14]
100156a5:	push   eax
100156a6:	push   0x20006
100156ab:	push   ebx
100156ac:	push   ebx
100156ad:	push   DWORD PTR [esp+0x2c]
100156b1:	mov    DWORD PTR [esp+0x28],ebx
100156b5:	call   DWORD PTR ds:0x10066020
100156bb:	cmp    eax,ebx
100156bd:	jne    0x1001590e
100156c3:	mov    ebx,DWORD PTR [esp+0x14]
100156c7:	lea    eax,[esp+0x234]
100156ce:	push   eax
100156cf:	push   ebx
100156d0:	call   DWORD PTR ds:0x10066010
100156d6:	test   eax,eax
100156d8:	je     0x100156e3
100156da:	cmp    eax,0x2
100156dd:	jne    0x10015a0f
100156e3:	test   ebx,ebx
100156e5:	je     0x100156ee
100156e7:	push   ebx
100156e8:	call   DWORD PTR ds:0x10066018
100156ee:	xor    ebx,ebx
100156f0:	mov    ecx,DWORD PTR [esp+0x18]
100156f4:	call   0x10015153
100156f9:	mov    esi,eax
100156fb:	cmp    esi,ebx
100156fd:	jmp    0x100155c8
10015702:	push   0x5c
10015704:	mov    eax,edi
10015706:	call   0x10014c47
1001570b:	test   eax,eax
1001570d:	pop    ecx
1001570e:	jne    0x10015a2a
10015714:	cmp    DWORD PTR [ebp+0x10],ebx
10015717:	je     0x10015815
1001571d:	mov    esi,DWORD PTR ds:0x10066020
10015723:	lea    eax,[esp+0x14]
10015727:	push   eax
10015728:	push   0x2001f
1001572d:	push   ebx
1001572e:	push   edi
1001572f:	push   DWORD PTR [esp+0x2c]
10015733:	mov    DWORD PTR [esp+0x28],ebx
10015737:	call   esi
10015739:	cmp    eax,ebx
1001573b:	jne    0x10015761
1001573d:	xor    eax,eax
1001573f:	cmp    DWORD PTR [esp+0x10],ebx
10015743:	je     0x1001574f
10015745:	push   DWORD PTR [esp+0x10]
10015749:	call   DWORD PTR ds:0x10066018
1001574f:	test   eax,eax
10015751:	mov    ebx,DWORD PTR [esp+0x14]
10015755:	mov    DWORD PTR [esp+0x10],ebx
10015759:	je     0x100157e1
1001575f:	jmp    0x10015765
10015761:	mov    ebx,DWORD PTR [esp+0x10]
10015765:	and    DWORD PTR [esp+0x14],0x0
1001576a:	lea    eax,[esp+0x14]
1001576e:	push   eax
1001576f:	push   0x20019
10015774:	push   0x0
10015776:	push   edi
10015777:	push   DWORD PTR [esp+0x2c]
1001577b:	call   esi
1001577d:	xor    esi,esi
1001577f:	test   eax,eax
10015781:	jne    0x1001579a
10015783:	cmp    ebx,esi
10015785:	je     0x1001578e
10015787:	push   ebx
10015788:	call   DWORD PTR ds:0x10066018
1001578e:	cmp    eax,esi
10015790:	mov    ebx,DWORD PTR [esp+0x14]
10015794:	mov    DWORD PTR [esp+0x10],ebx
10015798:	je     0x100157e1
1001579a:	lea    eax,[esp+0x28]
1001579e:	push   eax
1001579f:	lea    eax,[esp+0x18]
100157a3:	push   eax
100157a4:	push   esi
100157a5:	push   0x2001f
100157aa:	push   esi
100157ab:	push   esi
100157ac:	push   esi
100157ad:	push   edi
100157ae:	push   DWORD PTR [esp+0x3c]
100157b2:	mov    DWORD PTR [esp+0x38],esi
100157b6:	call   DWORD PTR ds:0x10066004
100157bc:	cmp    eax,esi
100157be:	jne    0x10015a30
100157c4:	xor    eax,eax
100157c6:	cmp    ebx,esi
100157c8:	je     0x100157d1
100157ca:	push   ebx
100157cb:	call   DWORD PTR ds:0x10066018
100157d1:	cmp    eax,esi
100157d3:	mov    ebx,DWORD PTR [esp+0x14]
100157d7:	mov    DWORD PTR [esp+0x10],ebx
100157db:	jne    0x10015a30
100157e1:	mov    ecx,DWORD PTR [esp+0x18]
100157e5:	mov    eax,edi
100157e7:	call   0x10014c93
100157ec:	mov    esi,eax
100157ee:	test   esi,esi
100157f0:	jl     0x10015915
100157f6:	cmp    WORD PTR [edi],0x3d
100157fa:	jne    0x1001558a
10015800:	mov    ecx,DWORD PTR [esp+0x18]
10015804:	push   edi
10015805:	push   0x0
10015807:	lea    edx,[esp+0x18]
1001580b:	call   0x10014da4
10015810:	jmp    0x10015580
10015815:	cmp    DWORD PTR [ebp+0x14],ebx
10015818:	jne    0x10015858
1001581a:	lea    eax,[esp+0x14]
1001581e:	push   eax
1001581f:	push   0x20019
10015824:	push   ebx
10015825:	push   edi
10015826:	push   DWORD PTR [esp+0x2c]
1001582a:	mov    DWORD PTR [esp+0x28],ebx
1001582e:	call   DWORD PTR ds:0x10066020
10015834:	cmp    eax,ebx
10015836:	jne    0x10015852
10015838:	xor    eax,eax
1001583a:	cmp    DWORD PTR [esp+0x10],ebx
1001583e:	je     0x1001584a
10015840:	push   DWORD PTR [esp+0x10]
10015844:	call   DWORD PTR ds:0x10066018
1001584a:	mov    ecx,DWORD PTR [esp+0x14]
1001584e:	mov    DWORD PTR [esp+0x10],ecx
10015852:	mov    DWORD PTR [esp+0x14],eax
10015856:	jmp    0x10015860
10015858:	mov    DWORD PTR [esp+0x14],0x2
10015860:	cmp    DWORD PTR [esp+0x14],ebx
10015864:	je     0x1001586d
10015866:	mov    DWORD PTR [ebp+0x14],0x1
1001586d:	push   0xffffffff
1001586f:	push   edi
10015870:	lea    eax,[esp+0x34]
10015874:	push   0x104
10015879:	push   eax
1001587a:	call   0x10045e5d
1001587f:	push   eax
10015880:	call   0x10001f5d
10015885:	mov    ecx,DWORD PTR [esp+0x2c]
10015889:	add    esp,0x14
1001588c:	mov    eax,edi
1001588e:	call   0x10014c93
10015893:	mov    esi,eax
10015895:	test   esi,esi
10015897:	jl     0x10015915
10015899:	mov    ecx,DWORD PTR [esp+0x18]
1001589d:	call   0x10015153
100158a2:	mov    esi,eax
100158a4:	test   esi,esi
100158a6:	jl     0x10015915
100158a8:	cmp    WORD PTR [edi],0x7b
100158ac:	jne    0x100158ea
100158ae:	push   edi
100158af:	call   DWORD PTR ds:0x100660c4
100158b5:	cmp    eax,0x1
100158b8:	jne    0x100158ea
100158ba:	push   DWORD PTR [ebp+0x14]
100158bd:	mov    ecx,DWORD PTR [esp+0x1c]
100158c1:	push   0x0
100158c3:	push   DWORD PTR [esp+0x18]
100158c7:	push   edi
100158c8:	call   0x10015463
100158cd:	mov    esi,eax
100158cf:	test   esi,esi
100158d1:	jge    0x100158d9
100158d3:	cmp    DWORD PTR [ebp+0x14],0x0
100158d7:	je     0x10015915
100158d9:	mov    ecx,DWORD PTR [esp+0x18]
100158dd:	mov    eax,edi
100158df:	call   0x10014c93
100158e4:	mov    esi,eax
100158e6:	test   esi,esi
100158e8:	jl     0x10015915
100158ea:	mov    eax,DWORD PTR [esp+0x24]
100158ee:	mov    DWORD PTR [ebp+0x14],eax
100158f1:	mov    eax,DWORD PTR [esp+0x14]
100158f5:	cmp    eax,0x2
100158f8:	je     0x100155ce
100158fe:	xor    ebx,ebx
10015900:	cmp    eax,ebx
10015902:	je     0x1001594e
10015904:	cmp    DWORD PTR [esp+0x24],ebx
10015908:	jne    0x100155ce
1001590e:	call   0x100143b6
10015913:	mov    esi,eax
10015915:	cmp    DWORD PTR [esp+0x10],0x0
1001591a:	je     0x10015926
1001591c:	push   DWORD PTR [esp+0x10]
10015920:	call   DWORD PTR ds:0x10066018
10015926:	mov    eax,esi
10015928:	mov    ecx,DWORD PTR [esp+0x448]
1001592f:	mov    DWORD PTR fs:0x0,ecx
10015936:	pop    ecx
10015937:	pop    edi
10015938:	pop    esi
10015939:	pop    ebx
1001593a:	mov    ecx,DWORD PTR [esp+0x430]
10015941:	xor    ecx,esp
10015943:	call   0x10042e97
10015948:	mov    esp,ebp
1001594a:	pop    ebp
1001594b:	ret    0x10
1001594e:	cmp    DWORD PTR [esp+0x24],ebx
10015952:	je     0x10015991
10015954:	push   DWORD PTR [esp+0x10]
10015958:	call   0x1001511e
1001595d:	test   eax,eax
1001595f:	je     0x10015991
10015961:	lea    eax,[esp+0x2c]
10015965:	push   eax
10015966:	call   0x100150f2
1001596b:	test   eax,eax
1001596d:	je     0x100155ce
10015973:	cmp    DWORD PTR [esp+0x20],0x0
10015978:	je     0x100155ce
1001597e:	lea    eax,[esp+0x2c]
10015982:	push   eax
10015983:	lea    ecx,[esp+0x14]
10015987:	call   0x1001457a
1001598c:	jmp    0x100155ce
10015991:	push   DWORD PTR [esp+0x10]
10015995:	call   0x1001511e
1001599a:	cmp    DWORD PTR [esp+0x10],ebx
1001599e:	mov    DWORD PTR [esp+0x14],eax
100159a2:	je     0x100159ba
100159a4:	push   DWORD PTR [esp+0x10]
100159a8:	call   DWORD PTR ds:0x10066018
100159ae:	cmp    eax,ebx
100159b0:	mov    DWORD PTR [esp+0x10],ebx
100159b4:	jne    0x10015a49
100159ba:	cmp    DWORD PTR [esp+0x20],ebx
100159be:	je     0x100155ce
100159c4:	cmp    DWORD PTR [esp+0x14],0x0
100159c9:	jne    0x100155ce
100159cf:	lea    eax,[esp+0x2c]
100159d3:	push   eax
100159d4:	push   DWORD PTR [esp+0x20]
100159d8:	call   DWORD PTR ds:0x1006600c
100159de:	test   eax,eax
100159e0:	jne    0x1001590e
100159e6:	jmp    0x100155ce
100159eb:	cmp    DWORD PTR [esp+0x10],0x0
100159f0:	je     0x100159fc
100159f2:	push   DWORD PTR [esp+0x10]
100159f6:	call   DWORD PTR ds:0x10066018
100159fc:	mov    eax,0x80020009
10015a01:	jmp    0x10015928
10015a06:	cmp    DWORD PTR [esp+0x10],ebx
10015a0a:	jmp    0x1001591a
10015a0f:	call   0x100143b6
10015a14:	test   ebx,ebx
10015a16:	mov    esi,eax
10015a18:	je     0x10015915
10015a1e:	push   ebx
10015a1f:	call   DWORD PTR ds:0x10066018
10015a25:	jmp    0x10015915
10015a2a:	cmp    DWORD PTR [esp+0x10],ebx
10015a2e:	jmp    0x100159f0
10015a30:	call   0x100143b6
10015a35:	cmp    ebx,esi
10015a37:	mov    edi,eax
10015a39:	je     0x10015a42
10015a3b:	push   ebx
10015a3c:	call   DWORD PTR ds:0x10066018
10015a42:	mov    eax,edi
10015a44:	jmp    0x10015928
10015a49:	call   0x100143b6
10015a4e:	jmp    0x10015928
10015a53:	push   ebp
10015a54:	lea    ebp,[esp-0x9cc]
10015a5b:	sub    esp,0xa4c
10015a61:	mov    eax,ds:0x1007e030
10015a66:	xor    eax,ebp
10015a68:	mov    DWORD PTR [ebp+0x9c8],eax
10015a6e:	mov    eax,DWORD PTR [ebp+0x9d4]
10015a74:	push   ebx
10015a75:	push   esi
10015a76:	push   edi
10015a77:	xor    edi,edi
10015a79:	mov    esi,edx
10015a7b:	cmp    esi,edi
10015a7d:	mov    ebx,ecx
10015a7f:	mov    DWORD PTR [ebp-0x6c],eax
10015a82:	mov    DWORD PTR [ebp-0x80],0x1006fc9c
10015a89:	mov    DWORD PTR [ebp-0x7c],edi
10015a8c:	mov    DWORD PTR [ebp-0x78],edi
10015a8f:	mov    DWORD PTR [ebp-0x74],edi
10015a92:	je     0x10015aac
10015a94:	jmp    0x10015aa6
10015a96:	push   DWORD PTR [esi+0x4]
10015a99:	push   eax
10015a9a:	lea    eax,[ebp-0x80]
10015a9d:	push   eax
10015a9e:	call   0x10014981
10015aa3:	add    esi,0x8
10015aa6:	mov    eax,DWORD PTR [esi]
10015aa8:	cmp    eax,edi
10015aaa:	jne    0x10015a96
10015aac:	mov    eax,DWORD PTR [ebx]
10015aae:	lea    ecx,[ebp-0x80]
10015ab1:	push   ecx
10015ab2:	mov    ecx,ebx
10015ab4:	call   DWORD PTR [eax+0x14]
10015ab7:	cmp    eax,edi
10015ab9:	jge    0x10015ae1
10015abb:	mov    esi,eax
10015abd:	lea    ecx,[ebp-0x80]
10015ac0:	call   0x10014946
10015ac5:	mov    ecx,DWORD PTR [ebp+0x9c8]
10015acb:	pop    edi
10015acc:	mov    eax,esi
10015ace:	pop    esi
10015acf:	xor    ecx,ebp
10015ad1:	pop    ebx
10015ad2:	call   0x10042e97
10015ad7:	add    ebp,0x9cc
10015add:	leave  
10015ade:	ret    0x8
10015ae1:	call   DWORD PTR ds:0x1007efec
10015ae7:	mov    ebx,DWORD PTR ds:0x10080a04
10015aed:	mov    esi,0x104
10015af2:	push   esi
10015af3:	lea    eax,[ebp+0x7c0]
10015af9:	push   eax
10015afa:	push   ebx
10015afb:	call   DWORD PTR ds:0x10066124
10015b01:	cmp    eax,edi
10015b03:	jne    0x10015b0c
10015b05:	call   0x100066ab
10015b0a:	jmp    0x10015abb
10015b0c:	cmp    eax,esi
10015b0e:	jne    0x10015b17
10015b10:	mov    esi,0x8007007a
10015b15:	jmp    0x10015abd
10015b17:	lea    edx,[ebp+0x7c0]
10015b1d:	mov    ecx,0x208
10015b22:	lea    eax,[ebp-0x68]
10015b25:	call   0x1001448f
10015b2a:	cmp    ebx,edi
10015b2c:	je     0x10015b3e
10015b2e:	push   edi
10015b2f:	call   DWORD PTR ds:0x10066114
10015b35:	cmp    ebx,eax
10015b37:	je     0x10015b3e
10015b39:	lea    eax,[ebp-0x68]
10015b3c:	jmp    0x10015b94
10015b3e:	lea    eax,[ebp-0x68]
10015b41:	push   eax
10015b42:	lea    eax,[ebp+0x3aa]
10015b48:	push   0x20b
10015b4d:	push   eax
10015b4e:	mov    WORD PTR [ebp+0x3a8],0x22
10015b57:	call   0x1001430c
10015b5c:	add    esp,0xc
10015b5f:	test   al,al
10015b61:	jne    0x10015b6d
10015b63:	mov    esi,0x80004005
10015b68:	jmp    0x10015abd
10015b6d:	lea    eax,[ebp+0x3a8]
10015b73:	push   eax
10015b74:	call   DWORD PTR ds:0x100660c4
10015b7a:	add    eax,eax
10015b7c:	mov    WORD PTR [ebp+eax*1+0x3a8],0x22
10015b86:	mov    WORD PTR [ebp+eax*1+0x3aa],di
10015b8e:	lea    eax,[ebp+0x3a8]
10015b94:	push   eax
10015b95:	push   0x1006f640
10015b9a:	lea    eax,[ebp-0x80]
10015b9d:	push   eax
10015b9e:	call   0x10014981
10015ba3:	cmp    eax,edi
10015ba5:	jl     0x10015abb
10015bab:	lea    eax,[ebp-0x68]
10015bae:	push   eax
10015baf:	push   0x1006f650
10015bb4:	lea    eax,[ebp-0x80]
10015bb7:	push   eax
10015bb8:	call   0x10014981
10015bbd:	cmp    eax,edi
10015bbf:	jl     0x10015abb
10015bc5:	call   DWORD PTR ds:0x1007efec
10015bcb:	cmp    DWORD PTR [ebp+0x9d8],edi
10015bd1:	mov    edx,DWORD PTR [ebp-0x6c]
10015bd4:	je     0x10015be8
10015bd6:	cmp    edx,edi
10015bd8:	je     0x10015bde
10015bda:	push   0x1
10015bdc:	jmp    0x10015bed
10015bde:	mov    eax,0x80070057
10015be3:	jmp    0x10015abb
10015be8:	cmp    edx,edi
10015bea:	je     0x10015bde
10015bec:	push   edi
10015bed:	push   0x1006f668
10015bf2:	lea    eax,[ebp-0x80]
10015bf5:	push   eax
10015bf6:	lea    ecx,[ebp+0x7c0]
10015bfc:	call   0x100149d6
10015c01:	jmp    0x10015abb
10015c06:	push   ebp
10015c07:	lea    ebp,[esp-0x9c8]
10015c0e:	sub    esp,0xa48
10015c14:	mov    eax,ds:0x1007e030
10015c19:	xor    eax,ebp
10015c1b:	mov    DWORD PTR [ebp+0x9c4],eax
10015c21:	push   ebx
10015c22:	push   esi
10015c23:	push   edi
10015c24:	xor    edi,edi
10015c26:	mov    esi,edx
10015c28:	cmp    esi,edi
10015c2a:	mov    ebx,ecx
10015c2c:	mov    DWORD PTR [ebp-0x80],0x1006fc9c
10015c33:	mov    DWORD PTR [ebp-0x7c],edi
10015c36:	mov    DWORD PTR [ebp-0x78],edi
10015c39:	mov    DWORD PTR [ebp-0x74],edi
10015c3c:	je     0x10015c56
10015c3e:	jmp    0x10015c50
10015c40:	push   DWORD PTR [esi+0x4]
10015c43:	push   eax
10015c44:	lea    eax,[ebp-0x80]
10015c47:	push   eax
10015c48:	call   0x10014981
10015c4d:	add    esi,0x8
10015c50:	mov    eax,DWORD PTR [esi]
10015c52:	cmp    eax,edi
10015c54:	jne    0x10015c40
10015c56:	mov    eax,DWORD PTR [ebx]
10015c58:	lea    ecx,[ebp-0x80]
10015c5b:	push   ecx
10015c5c:	mov    ecx,ebx
10015c5e:	call   DWORD PTR [eax+0x14]
10015c61:	cmp    eax,edi
10015c63:	jge    0x10015c8b
10015c65:	mov    esi,eax
10015c67:	lea    ecx,[ebp-0x80]
10015c6a:	call   0x10014946
10015c6f:	mov    ecx,DWORD PTR [ebp+0x9c4]
10015c75:	pop    edi
10015c76:	mov    eax,esi
10015c78:	pop    esi
10015c79:	xor    ecx,ebp
10015c7b:	pop    ebx
10015c7c:	call   0x10042e97
10015c81:	add    ebp,0x9c8
10015c87:	leave  
10015c88:	ret    0x8
10015c8b:	call   DWORD PTR ds:0x1007efec
10015c91:	mov    ebx,DWORD PTR ds:0x10080a04
10015c97:	mov    esi,0x104
10015c9c:	push   esi
10015c9d:	lea    eax,[ebp+0x7bc]
10015ca3:	push   eax
10015ca4:	push   ebx
10015ca5:	call   DWORD PTR ds:0x10066124
10015cab:	cmp    eax,edi
10015cad:	jne    0x10015cb6
10015caf:	call   0x100066ab
10015cb4:	jmp    0x10015c65
10015cb6:	cmp    eax,esi
10015cb8:	jne    0x10015cc1
10015cba:	mov    esi,0x8007007a
10015cbf:	jmp    0x10015c67
10015cc1:	lea    edx,[ebp+0x7bc]
10015cc7:	mov    ecx,0x208
10015ccc:	lea    eax,[ebp-0x6c]
10015ccf:	call   0x1001448f
10015cd4:	cmp    ebx,edi
10015cd6:	je     0x10015ce8
10015cd8:	push   edi
10015cd9:	call   DWORD PTR ds:0x10066114
10015cdf:	cmp    ebx,eax
10015ce1:	je     0x10015ce8
10015ce3:	lea    eax,[ebp-0x6c]
10015ce6:	jmp    0x10015d3e
10015ce8:	lea    eax,[ebp-0x6c]
10015ceb:	push   eax
10015cec:	lea    eax,[ebp+0x3a6]
10015cf2:	push   0x20b
10015cf7:	push   eax
10015cf8:	mov    WORD PTR [ebp+0x3a4],0x22
10015d01:	call   0x1001430c
10015d06:	add    esp,0xc
10015d09:	test   al,al
10015d0b:	jne    0x10015d17
10015d0d:	mov    esi,0x80004005
10015d12:	jmp    0x10015c67
10015d17:	lea    eax,[ebp+0x3a4]
10015d1d:	push   eax
10015d1e:	call   DWORD PTR ds:0x100660c4
10015d24:	add    eax,eax
10015d26:	mov    WORD PTR [ebp+eax*1+0x3a4],0x22
10015d30:	mov    WORD PTR [ebp+eax*1+0x3a6],di
10015d38:	lea    eax,[ebp+0x3a4]
10015d3e:	push   eax
10015d3f:	push   0x1006f640
10015d44:	lea    eax,[ebp-0x80]
10015d47:	push   eax
10015d48:	call   0x10014981
10015d4d:	cmp    eax,edi
10015d4f:	jl     0x10015c65
10015d55:	lea    eax,[ebp-0x6c]
10015d58:	push   eax
10015d59:	push   0x1006f650
10015d5e:	lea    eax,[ebp-0x80]
10015d61:	push   eax
10015d62:	call   0x10014981
10015d67:	cmp    eax,edi
10015d69:	jl     0x10015c65
10015d6f:	call   DWORD PTR ds:0x1007efec
10015d75:	cmp    DWORD PTR [ebp+0x9d4],edi
10015d7b:	je     0x10015d9f
10015d7d:	push   0x1
10015d7f:	movzx  edx,WORD PTR [ebp+0x9d0]
10015d86:	push   0x1006f668
10015d8b:	lea    eax,[ebp-0x80]
10015d8e:	push   eax
10015d8f:	lea    ecx,[ebp+0x7bc]
10015d95:	call   0x100149d6
10015d9a:	jmp    0x10015c65
10015d9f:	push   edi
10015da0:	jmp    0x10015d7f
10015da2:	mov    edx,DWORD PTR [esp+0x8]
10015da6:	mov    eax,DWORD PTR [esp+0x4]
10015daa:	push   esi
10015dab:	xor    esi,esi
10015dad:	mov    ecx,eax
10015daf:	and    ecx,0x1
10015db2:	or     ecx,esi
10015db4:	push   esi
10015db5:	jne    0x10015dc2
10015db7:	push   0x2
10015db9:	push   edx
10015dba:	push   eax
10015dbb:	call   0x1005f340
10015dc0:	jmp    0x10015dd0
10015dc2:	push   0x3
10015dc4:	push   edx
10015dc5:	push   eax
10015dc6:	call   0x1004f400
10015dcb:	add    eax,0x1
10015dce:	adc    edx,esi
10015dd0:	cmp    eax,0x4
10015dd3:	jne    0x10015dad
10015dd5:	cmp    edx,esi
10015dd7:	jne    0x10015dad
10015dd9:	xor    edx,edx
10015ddb:	pop    esi
10015ddc:	ret    
10015ddd:	push   esi
10015dde:	mov    esi,ecx
10015de0:	mov    eax,DWORD PTR [esi]
10015de2:	test   eax,eax
10015de4:	je     0x10015deb
10015de6:	call   0x10016006
10015deb:	and    DWORD PTR [esi],0x0
10015dee:	pop    esi
10015def:	ret    
10015df0:	push   edi
10015df1:	mov    edi,eax
10015df3:	mov    eax,DWORD PTR [esi]
10015df5:	test   eax,eax
10015df7:	je     0x10015dfe
10015df9:	call   0x10016006
10015dfe:	cmp    BYTE PTR [esp+0x8],0x0
10015e03:	mov    DWORD PTR [esi],edi
10015e05:	je     0x10015e15
10015e07:	test   edi,edi
10015e09:	je     0x10015e15
10015e0b:	add    edi,0x20
10015e0e:	push   edi
10015e0f:	call   DWORD PTR ds:0x100660a4
10015e15:	pop    edi
10015e16:	ret    0x4
10015e19:	push   ebp
10015e1a:	mov    ebp,esp
10015e1c:	and    esp,0xfffffff8
10015e1f:	sub    esp,0x14
10015e22:	push   ebx
10015e23:	push   esi
10015e24:	push   edi
10015e25:	mov    esi,0xf0
10015e2a:	push   esi
10015e2b:	call   0x1004349e
10015e30:	pop    ecx
10015e31:	push   esi
10015e32:	xor    esi,esi
10015e34:	mov    ebx,eax
10015e36:	push   esi
10015e37:	push   ebx
10015e38:	call   0x10045c00
10015e3d:	mov    eax,DWORD PTR [ebp+0x8]
10015e40:	add    esp,0xc
10015e43:	push   0x1e
10015e45:	pop    ecx
10015e46:	mov    DWORD PTR [ebx+0x20],esi
10015e49:	mov    DWORD PTR [ebx+0x1c],esi
10015e4c:	push   0xf
10015e4e:	mov    DWORD PTR [ebx],eax
10015e50:	mov    BYTE PTR [ebx+0x25],0x0
10015e54:	mov    BYTE PTR [ebx+0x24],0x0
10015e58:	mov    BYTE PTR [ebx+0x26],0x1
10015e5c:	mov    BYTE PTR [ebx+0x27],0x0
10015e60:	lea    edi,[ebx+0x3c]
10015e63:	mov    esi,0x10080c80
10015e68:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10015e6a:	pop    ecx
10015e6b:	lea    edi,[ebx+0xb4]
10015e71:	mov    esi,0x10080cf8
10015e76:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10015e78:	mov    esi,DWORD PTR ds:0x10066130
10015e7e:	xor    edi,edi
10015e80:	push   edi
10015e81:	push   edi
10015e82:	push   0x1
10015e84:	push   edi
10015e85:	call   esi
10015e87:	push   edi
10015e88:	push   0x1
10015e8a:	push   0x1
10015e8c:	push   edi
10015e8d:	mov    DWORD PTR [ebx+0x28],eax
10015e90:	call   esi
10015e92:	push   edi
10015e93:	push   edi
10015e94:	push   0x1
10015e96:	push   edi
10015e97:	mov    DWORD PTR [ebx+0x2c],eax
10015e9a:	call   esi
10015e9c:	push   edi
10015e9d:	push   edi
10015e9e:	push   0x1
10015ea0:	push   edi
10015ea1:	mov    DWORD PTR [ebx+0x30],eax
10015ea4:	call   esi
10015ea6:	mov    DWORD PTR [ebx+0x34],eax
10015ea9:	lea    eax,[ebx+0x4]
10015eac:	push   eax
10015ead:	mov    DWORD PTR [ebx+0x38],edi
10015eb0:	call   DWORD PTR ds:0x1006611c
10015eb6:	mov    esi,0x10080c58
10015ebb:	push   esi
10015ebc:	call   DWORD PTR ds:0x100660f0
10015ec2:	mov    eax,DWORD PTR [ebp+0x8]
10015ec5:	mov    DWORD PTR [esp+0xc],eax
10015ec9:	lea    eax,[esp+0xc]
10015ecd:	push   eax
10015ece:	lea    edi,[esp+0x18]
10015ed2:	mov    DWORD PTR [esp+0x14],ebx
10015ed6:	call   0x10017843
10015edb:	push   esi
10015edc:	call   DWORD PTR ds:0x100660ec
10015ee2:	pop    edi
10015ee3:	pop    esi
10015ee4:	mov    eax,ebx
10015ee6:	pop    ebx
10015ee7:	mov    esp,ebp
10015ee9:	pop    ebp
10015eea:	ret    
10015eeb:	push   edi
10015eec:	push   DWORD PTR [esi+0x28]
10015eef:	mov    edi,DWORD PTR ds:0x10066070
10015ef5:	call   edi
10015ef7:	push   DWORD PTR [esi+0x2c]
10015efa:	call   edi
10015efc:	push   DWORD PTR [esi+0x30]
10015eff:	call   edi
10015f01:	push   DWORD PTR [esi+0x34]
10015f04:	call   edi
10015f06:	lea    eax,[esi+0x4]
10015f09:	push   eax
10015f0a:	call   DWORD PTR ds:0x10066138
10015f10:	mov    edi,DWORD PTR [esi+0x1c]
10015f13:	test   edi,edi
10015f15:	je     0x10015f24
10015f17:	push   edi
10015f18:	call   0x10024c3f
10015f1d:	push   edi
10015f1e:	call   0x10042e92
10015f23:	pop    ecx
10015f24:	and    DWORD PTR [esi+0x1c],0x0
10015f28:	push   esi
10015f29:	call   0x10042e92
10015f2e:	pop    ecx
10015f2f:	pop    edi
10015f30:	ret    
10015f31:	push   ebp
10015f32:	mov    ebp,esp
10015f34:	sub    esp,0x18
10015f37:	push   ebx
10015f38:	mov    ebx,DWORD PTR ds:0x100660f0
10015f3e:	push   esi
10015f3f:	push   edi
10015f40:	push   0x10080c58
10015f45:	call   ebx
10015f47:	lea    eax,[ebp+0x8]
10015f4a:	push   eax
10015f4b:	lea    eax,[ebp-0xc]
10015f4e:	call   0x10017a51
10015f53:	cmp    DWORD PTR [ebp-0xc],0x0
10015f57:	mov    eax,ds:0x10080e7c
10015f5c:	mov    esi,eax
10015f5e:	je     0x10015f69
10015f60:	cmp    DWORD PTR [ebp-0xc],0x10080e78
10015f67:	je     0x10015f73
10015f69:	call   0x100433b0
10015f6e:	mov    eax,ds:0x10080e7c
10015f73:	mov    ecx,DWORD PTR [ebp-0x8]
10015f76:	cmp    ecx,esi
10015f78:	je     0x10015f87
10015f7a:	mov    edx,DWORD PTR [ebp+0x8]
10015f7d:	cmp    edx,DWORD PTR [ecx+0xc]
10015f80:	jb     0x10015f87
10015f82:	lea    ecx,[ebp-0xc]
10015f85:	jmp    0x10015f94
10015f87:	mov    DWORD PTR [ebp-0x10],eax
10015f8a:	mov    DWORD PTR [ebp-0x14],0x10080e78
10015f91:	lea    ecx,[ebp-0x14]
10015f94:	mov    esi,DWORD PTR [ecx]
10015f96:	test   esi,esi
10015f98:	mov    edi,DWORD PTR [ecx+0x4]
10015f9b:	mov    DWORD PTR [ebp-0x10],eax
10015f9e:	je     0x10015fa8
10015fa0:	cmp    esi,0x10080e78
10015fa6:	je     0x10015fad
10015fa8:	call   0x100433b0
10015fad:	cmp    edi,DWORD PTR [ebp-0x10]
10015fb0:	je     0x10015fca
10015fb2:	test   esi,esi
10015fb4:	jne    0x10015fbb
10015fb6:	call   0x100433b0
10015fbb:	cmp    edi,DWORD PTR [esi+0x4]
10015fbe:	jne    0x10015fc5
10015fc0:	call   0x100433b0
10015fc5:	mov    esi,DWORD PTR [edi+0x10]
10015fc8:	jmp    0x10015fcc
10015fca:	xor    esi,esi
10015fcc:	test   esi,esi
10015fce:	je     0x10015ff4
10015fd0:	lea    edi,[esi+0x4]
10015fd3:	push   edi
10015fd4:	call   ebx
10015fd6:	mov    bl,BYTE PTR [esi+0x27]
10015fd9:	test   bl,bl
10015fdb:	jne    0x10015fe7
10015fdd:	lea    eax,[esi+0x20]
10015fe0:	push   eax
10015fe1:	call   DWORD PTR ds:0x100660a4
10015fe7:	push   edi
10015fe8:	call   DWORD PTR ds:0x100660ec
10015fee:	test   bl,bl
10015ff0:	je     0x10015ff4
10015ff2:	xor    esi,esi
10015ff4:	push   0x10080c58
10015ff9:	call   DWORD PTR ds:0x100660ec
10015fff:	pop    edi
10016000:	mov    eax,esi
10016002:	pop    esi
10016003:	pop    ebx
10016004:	leave  
10016005:	ret    
10016006:	push   esi
10016007:	mov    esi,eax
10016009:	test   esi,esi
1001600b:	je     0x1001603d
1001600d:	push   ebx
1001600e:	push   ebp
1001600f:	push   edi
10016010:	mov    edi,DWORD PTR ds:0x100660f0
10016016:	mov    ebp,0x10080c58
1001601b:	push   ebp
1001601c:	call   edi
1001601e:	lea    ebx,[esi+0x4]
10016021:	push   ebx
10016022:	call   edi
10016024:	add    esi,0x20
10016027:	push   esi
10016028:	call   DWORD PTR ds:0x100660ac
1001602e:	mov    esi,DWORD PTR ds:0x100660ec
10016034:	push   ebx
10016035:	call   esi
10016037:	push   ebp
10016038:	call   esi
1001603a:	pop    edi
1001603b:	pop    ebp
1001603c:	pop    ebx
1001603d:	pop    esi
1001603e:	ret    
1001603f:	add    eax,0x4
10016042:	push   eax
10016043:	call   DWORD PTR ds:0x100660f0
10016049:	ret    
1001604a:	push   0x8
1001604c:	mov    eax,0x10062ac4
10016051:	call   0x10059a68
10016056:	mov    esi,DWORD PTR [ebp+0x8]
10016059:	and    DWORD PTR [ebp-0x4],0x0
1001605d:	push   0x54
1001605f:	call   0x1004349e
10016064:	pop    ecx
10016065:	mov    DWORD PTR [ebp-0x14],eax
10016068:	test   eax,eax
1001606a:	mov    BYTE PTR [ebp-0x4],0x1
1001606e:	je     0x10016079
10016070:	push   esi
10016071:	push   eax
10016072:	call   0x10024bb2
10016077:	jmp    0x1001607b
10016079:	xor    eax,eax
1001607b:	mov    DWORD PTR [esi+0x1c],eax
1001607e:	call   0x10059b0d
10016083:	ret    
10016084:	push   0x4
10016086:	call   0x10037980
1001608b:	mov    eax,DWORD PTR [ebp+0x8]
1001608e:	and    DWORD PTR [eax+0x1c],0x0
10016092:	pop    ecx
10016093:	mov    eax,0x1001607e
10016098:	ret    
10016099:	push   ebp
1001609a:	mov    ebp,esp
1001609c:	and    esp,0xfffffff8
1001609f:	push   ecx
100160a0:	push   esi
100160a1:	mov    esi,eax
100160a3:	and    DWORD PTR [esi],0x0
100160a6:	jmp    0x100160d6
100160a8:	mov    eax,DWORD PTR [esi]
100160aa:	push   DWORD PTR [ebp+0x10]
100160ad:	mov    ecx,DWORD PTR [ebp+0xc]
100160b0:	sub    ecx,eax
100160b2:	push   ecx
100160b3:	mov    ecx,DWORD PTR [ebp+0x8]
100160b6:	add    eax,ecx
100160b8:	push   eax
100160b9:	push   edi
100160ba:	lea    eax,[esp+0x14]
100160be:	call   0x100257c6
100160c3:	mov    eax,DWORD PTR [esp+0x4]
100160c7:	add    DWORD PTR [esi],eax
100160c9:	mov    eax,DWORD PTR [esi]
100160cb:	cmp    eax,DWORD PTR [ebp+0xc]
100160ce:	je     0x100160e1
100160d0:	cmp    BYTE PTR [ebp+0x10],0x0
100160d4:	jne    0x100160e1
100160d6:	mov    eax,edi
100160d8:	call   0x10025884
100160dd:	test   eax,eax
100160df:	jne    0x100160a8
100160e1:	lea    esi,[edi+0x38]
100160e4:	push   esi
100160e5:	call   DWORD PTR ds:0x100660f0
100160eb:	cmp    DWORD PTR [edi+0x28],0x0
100160ef:	jne    0x100160fd
100160f1:	mov    eax,DWORD PTR [edi+0x50]
100160f4:	push   DWORD PTR [eax+0x28]
100160f7:	call   DWORD PTR ds:0x10066164
100160fd:	push   esi
100160fe:	call   DWORD PTR ds:0x100660ec
10016104:	pop    esi
10016105:	mov    esp,ebp
10016107:	pop    ebp
10016108:	ret    
10016109:	push   ebp
1001610a:	mov    ebp,esp
1001610c:	sub    esp,0x10
1001610f:	push   ebx
10016110:	xor    ebx,ebx
10016112:	cmp    BYTE PTR [esi+0x27],bl
10016115:	push   edi
10016116:	jne    0x10016193
10016118:	lea    eax,[ebp-0x4]
1001611b:	push   eax
1001611c:	push   ebx
1001611d:	push   ebx
1001611e:	push   ebx
1001611f:	lea    eax,[ebp-0x8]
10016122:	push   eax
10016123:	push   ebx
10016124:	push   ebx
10016125:	push   0x4
10016127:	lea    eax,[ebp-0xc]
1001612a:	push   eax
1001612b:	push   0x8004667e
10016130:	push   DWORD PTR [esi]
10016132:	mov    DWORD PTR [ebp-0xc],0x1
10016139:	mov    DWORD PTR [ebp-0x8],ebx
1001613c:	mov    DWORD PTR [ebp-0x4],ebx
1001613f:	call   DWORD PTR [esi+0x7c]
10016142:	push   esi
10016143:	call   0x1001604a
10016148:	lea    eax,[esi+0x4]
1001614b:	pop    ecx
1001614c:	push   eax
1001614d:	mov    DWORD PTR [ebp-0x10],eax
10016150:	call   DWORD PTR ds:0x100660f0
10016156:	mov    edi,DWORD PTR ds:0x100660a4
1001615c:	lea    eax,[esi+0x20]
1001615f:	push   eax
10016160:	call   edi
10016162:	lea    eax,[esi+0x20]
10016165:	push   eax
10016166:	call   edi
10016168:	mov    edi,DWORD PTR ds:0x10066098
1001616e:	push   ebx
1001616f:	push   ebx
10016170:	push   esi
10016171:	push   0x100251c0
10016176:	push   ebx
10016177:	push   ebx
10016178:	call   edi
1001617a:	push   ebx
1001617b:	push   ebx
1001617c:	push   esi
1001617d:	push   0x1002576a
10016182:	push   ebx
10016183:	push   ebx
10016184:	call   edi
10016186:	push   DWORD PTR [ebp-0x10]
10016189:	mov    BYTE PTR [esi+0x25],0x1
1001618d:	call   DWORD PTR ds:0x100660ec
10016193:	pop    edi
10016194:	pop    ebx
10016195:	leave  
10016196:	ret    
10016197:	push   ebp
10016198:	mov    ebp,esp
1001619a:	push   ebx
1001619b:	mov    ebx,DWORD PTR [ebp+0x50]
1001619e:	push   esi
1001619f:	push   edi
100161a0:	push   0xf
100161a2:	pop    ecx
100161a3:	push   ebx
100161a4:	sub    esp,0x3c
100161a7:	push   0xf
100161a9:	lea    esi,[ebp+0x14]
100161ac:	mov    edi,0x10080cf8
100161b1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100161b3:	pop    ecx
100161b4:	mov    edi,esp
100161b6:	push   DWORD PTR [ebp+0x10]
100161b9:	lea    esi,[ebp+0x14]
100161bc:	push   DWORD PTR [ebp+0xc]
100161bf:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100161c1:	push   DWORD PTR [ebp+0x8]
100161c4:	call   DWORD PTR ds:0x10080c70
100161ca:	push   0x78
100161cc:	push   ebx
100161cd:	push   0x10080c80
100161d2:	mov    esi,eax
100161d4:	call   0x10045180
100161d9:	add    esp,0xc
100161dc:	pop    edi
100161dd:	mov    eax,esi
100161df:	pop    esi
100161e0:	mov    DWORD PTR [ebx+0x18],0x1001655b
100161e7:	mov    DWORD PTR [ebx+0x1c],0x100166b9
100161ee:	mov    DWORD PTR [ebx+0x40],0x100167be
100161f5:	mov    DWORD PTR [ebx+0x4c],0x10016983
100161fc:	mov    DWORD PTR [ebx+0x58],0x10016a53
10016203:	mov    DWORD PTR [ebx+0x5c],0x100172ed
1001620a:	mov    DWORD PTR [ebx+0x68],0x1001745a
10016211:	mov    DWORD PTR [ebx+0x70],0x10017364
10016218:	pop    ebx
10016219:	pop    ebp
1001621a:	ret    0x4c
1001621d:	push   ebp
1001621e:	mov    ebp,esp
10016220:	and    esp,0xfffffff8
10016223:	sub    esp,0x210
10016229:	mov    eax,ds:0x1007e030
1001622e:	xor    eax,esp
10016230:	mov    DWORD PTR [esp+0x20c],eax
10016237:	cmp    BYTE PTR ds:0x10080fd4,0x0
1001623e:	jne    0x10016375
10016244:	push   0x208
10016249:	lea    eax,[esp+0x4]
1001624d:	push   eax
1001624e:	push   0x0
10016250:	call   DWORD PTR ds:0x10066124
10016256:	test   eax,eax
10016258:	je     0x10016375
1001625e:	lea    eax,[esp]
10016261:	push   eax
10016262:	call   0x100460e0
10016267:	mov    DWORD PTR [esp],0x37c32f8
1001626e:	push   0x6ed0a3a4
10016273:	push   0x587bf34
10016278:	push   0x1006f67c
1001627d:	call   0x10004246
10016282:	pop    ecx
10016283:	pop    ecx
10016284:	push   eax
10016285:	call   0x10004246
1001628a:	pop    ecx
1001628b:	pop    ecx
1001628c:	push   eax
1001628d:	call   0x10004246
10016292:	push   eax
10016293:	push   0xc
10016295:	push   0x1006f6b4
1001629a:	call   0x10004417
1001629f:	push   eax
100162a0:	lea    eax,[esp+0x18]
100162a4:	push   eax
100162a5:	call   0x10046149
100162aa:	add    esp,0x1c
100162ad:	test   eax,eax
100162af:	je     0x100162c0
100162b1:	mov    DWORD PTR ds:0x10080c7c,0x1
100162bb:	jmp    0x1001636e
100162c0:	push   0x1006f6d0
100162c5:	push   0xb
100162c7:	push   0x1006f710
100162cc:	call   0x10004417
100162d1:	push   eax
100162d2:	lea    eax,[esp+0x10]
100162d6:	push   eax
100162d7:	call   0x10046149
100162dc:	add    esp,0x14
100162df:	test   eax,eax
100162e1:	je     0x100162ef
100162e3:	mov    DWORD PTR ds:0x10080c7c,0x2
100162ed:	jmp    0x1001636e
100162ef:	push   0x339da80
100162f4:	push   0x309b4f70
100162f9:	push   0x1006f728
100162fe:	call   0x10004246
10016303:	pop    ecx
10016304:	pop    ecx
10016305:	push   eax
10016306:	call   0x10004246
1001630b:	push   eax
1001630c:	push   0x9
1001630e:	push   0x1006f760
10016313:	call   0x10004417
10016318:	push   eax
10016319:	lea    eax,[esp+0x18]
1001631d:	push   eax
1001631e:	call   0x10046149
10016323:	add    esp,0x1c
10016326:	test   eax,eax
10016328:	je     0x10016336
1001632a:	mov    DWORD PTR ds:0x10080c7c,0x4
10016334:	jmp    0x1001636e
10016336:	push   0x371d719c
1001633b:	push   0x1006f774
10016340:	call   0x10004246
10016345:	push   eax
10016346:	push   0xa
10016348:	push   0x1006f7b0
1001634d:	call   0x10004417
10016352:	push   eax
10016353:	lea    eax,[esp+0x18]
10016357:	push   eax
10016358:	call   0x10046149
1001635d:	add    esp,0x1c
10016360:	test   eax,eax
10016362:	je     0x1001636e
10016364:	mov    DWORD PTR ds:0x10080c7c,0x3
1001636e:	mov    BYTE PTR ds:0x10080fd4,0x1
10016375:	mov    ecx,DWORD PTR [esp+0x20c]
1001637c:	xor    ecx,esp
1001637e:	call   0x10042e97
10016383:	mov    esp,ebp
10016385:	pop    ebp
10016386:	ret    
10016387:	call   DWORD PTR ds:0x1007efec
1001638d:	push   0x10080c58
10016392:	call   DWORD PTR ds:0x1006611c
10016398:	mov    eax,ds:0x10080c7c
1001639d:	test   eax,eax
1001639f:	je     0x10016427
100163a5:	push   eax
100163a6:	call   0x10002080
100163ab:	pop    ecx
100163ac:	push   0x3442f3fc
100163b1:	push   0x1006f7c8
100163b6:	call   0x10004246
100163bb:	push   eax
100163bc:	push   0xb
100163be:	push   0x1006f7ec
100163c3:	call   0x10004417
100163c8:	add    esp,0x14
100163cb:	push   eax
100163cc:	call   DWORD PTR ds:0x100660f8
100163d2:	test   eax,eax
100163d4:	mov    ds:0x10080d38,eax
100163d9:	je     0x10016427
100163db:	push   0x4444afa
100163e0:	push   0x26ed66a2
100163e5:	push   0x1006f804
100163ea:	call   0x10004246
100163ef:	pop    ecx
100163f0:	pop    ecx
100163f1:	push   eax
100163f2:	call   0x10004246
100163f7:	push   eax
100163f8:	push   0xa
100163fa:	push   0x1006f830
100163ff:	call   0x10004258
10016404:	add    esp,0x14
10016407:	push   eax
10016408:	push   DWORD PTR ds:0x10080d38
1001640e:	call   DWORD PTR ds:0x1006612c
10016414:	push   0x10016197
10016419:	push   eax
1001641a:	call   0x10057470
1001641f:	mov    ds:0x10080c70,eax
10016424:	mov    al,0x1
10016426:	ret    
10016427:	xor    al,al
10016429:	ret    
1001642a:	push   0x10
1001642c:	push   0x1007c198
10016431:	call   0x10046c94
10016436:	xor    ebx,ebx
10016438:	push   ebx
10016439:	push   0x12
1001643b:	call   0x10015da2
10016440:	pop    ecx
10016441:	pop    ecx
10016442:	mov    DWORD PTR [ebp-0x20],eax
10016445:	mov    DWORD PTR [ebp-0x1c],edx
10016448:	mov    eax,DWORD PTR [ebp+0xc]
1001644b:	sub    eax,ebx
1001644d:	je     0x100164f2
10016453:	dec    eax
10016454:	jne    0x10016550
1001645a:	call   0x1001621d
1001645f:	cmp    DWORD PTR ds:0x10080d3c,ebx
10016465:	jne    0x10016495
10016467:	mov    eax,DWORD PTR [ebp+0x8]
1001646a:	mov    ds:0x10080d34,eax
1001646f:	call   0x1002668a
10016474:	call   0x10018578
10016479:	test   al,al
1001647b:	je     0x10016487
1001647d:	call   0x10016387
10016482:	mov    ds:0x10080fd5,al
10016487:	cmp    DWORD PTR ds:0x10080c7c,0x2
1001648e:	jne    0x10016495
10016490:	call   0x10007455
10016495:	inc    DWORD PTR ds:0x10080d3c
1001649b:	mov    DWORD PTR [ebp-0x4],ebx
1001649e:	mov    DWORD PTR ds:0x10080c04,0x10080e88
100164a8:	mov    esi,0x1006f540
100164ad:	mov    edi,0x10080c08
100164b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100164b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100164b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100164b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100164b6:	push   ebx
100164b7:	push   0xe6
100164bc:	call   0x10015da2
100164c1:	pop    ecx
100164c2:	pop    ecx
100164c3:	mov    esi,eax
100164c5:	call   DWORD PTR ds:0x10066118
100164cb:	add    esi,DWORD PTR [ebp-0x20]
100164ce:	add    eax,esi
100164d0:	push   eax
100164d1:	call   0x1004640a
100164d6:	pop    ecx
100164d7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100164de:	jmp    0x10016550
100164e0:	xor    eax,eax
100164e2:	inc    eax
100164e3:	ret    
100164e4:	mov    esp,DWORD PTR [ebp-0x18]
100164e7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100164ee:	xor    eax,eax
100164f0:	jmp    0x10016553
100164f2:	dec    DWORD PTR ds:0x10080d3c
100164f8:	jne    0x10016550
100164fa:	cmp    BYTE PTR ds:0x10080fd5,bl
10016500:	je     0x10016550
10016502:	xor    eax,eax
10016504:	cmp    DWORD PTR ds:0x10080c7c,ebx
1001650a:	je     0x1001650d
1001650c:	inc    eax
1001650d:	cmp    eax,ebx
1001650f:	je     0x1001652c
10016511:	push   0x10016197
10016516:	push   DWORD PTR ds:0x10080c70
1001651c:	call   0x10057220
10016521:	push   0x10080c58
10016526:	call   DWORD PTR ds:0x10066138
1001652c:	mov    BYTE PTR ds:0x10080fd5,bl
10016532:	mov    eax,ds:0x10080c7c
10016537:	dec    eax
10016538:	je     0x10016548
1001653a:	dec    eax
1001653b:	je     0x10016544
1001653d:	dec    eax
1001653e:	jne    0x10016550
10016540:	push   0xb
10016542:	jmp    0x1001654a
10016544:	push   0x3
10016546:	jmp    0x1001654a
10016548:	push   0x1
1001654a:	call   0x10037980
1001654f:	pop    ecx
10016550:	xor    eax,eax
10016552:	inc    eax
10016553:	call   0x10046cd9
10016558:	ret    0xc
1001655b:	push   0x14
1001655d:	mov    eax,0x1006438e
10016562:	call   0x10059a35
10016567:	push   DWORD PTR [ebp+0x8]
1001656a:	call   0x10015f31
1001656f:	pop    ecx
10016570:	mov    DWORD PTR [ebp-0x10],eax
10016573:	xor    ebx,ebx
10016575:	cmp    eax,ebx
10016577:	mov    DWORD PTR [ebp-0x4],ebx
1001657a:	jne    0x1001659c
1001657c:	push   DWORD PTR [ebp+0xc]
1001657f:	push   DWORD PTR [ebp+0x8]
10016582:	call   DWORD PTR ds:0x10080c98
10016588:	lea    ecx,[ebp-0x10]
1001658b:	mov    esi,eax
1001658d:	call   0x10015ddd
10016592:	mov    eax,esi
10016594:	call   0x10059b0d
10016599:	ret    0x8
1001659c:	mov    esi,DWORD PTR ds:0x100660f0
100165a2:	add    eax,0x4
100165a5:	push   eax
100165a6:	call   esi
100165a8:	mov    eax,DWORD PTR [ebp-0x10]
100165ab:	cmp    BYTE PTR [eax+0x27],bl
100165ae:	jne    0x10016664
100165b4:	push   DWORD PTR [eax+0x30]
100165b7:	call   DWORD PTR ds:0x10066110
100165bd:	mov    eax,DWORD PTR [ebp-0x10]
100165c0:	mov    edi,DWORD PTR ds:0x100660ec
100165c6:	mov    BYTE PTR [eax+0x27],0x1
100165ca:	jmp    0x100165e3
100165cc:	add    eax,0x4
100165cf:	push   eax
100165d0:	call   edi
100165d2:	push   0x64
100165d4:	call   DWORD PTR ds:0x100660bc
100165da:	mov    eax,DWORD PTR [ebp-0x10]
100165dd:	add    eax,0x4
100165e0:	push   eax
100165e1:	call   esi
100165e3:	mov    eax,DWORD PTR [ebp-0x10]
100165e6:	mov    eax,DWORD PTR [eax+0x20]
100165e9:	cmp    eax,0x1
100165ec:	mov    eax,DWORD PTR [ebp-0x10]
100165ef:	jg     0x100165cc
100165f1:	push   DWORD PTR [eax+0x34]
100165f4:	call   DWORD PTR ds:0x10066110
100165fa:	mov    eax,DWORD PTR [ebp-0x10]
100165fd:	xor    ecx,ecx
100165ff:	cmp    BYTE PTR [eax+0x26],bl
10016602:	sete   cl
10016605:	add    eax,0x4
10016608:	push   eax
10016609:	mov    DWORD PTR [ebp-0x20],ecx
1001660c:	call   edi
1001660e:	push   0x10080c58
10016613:	call   esi
10016615:	lea    edx,[ebp+0x8]
10016618:	call   0x100178df
1001661d:	push   0x10080c58
10016622:	call   edi
10016624:	mov    eax,DWORD PTR [ebp-0x10]
10016627:	add    eax,0x4
1001662a:	push   eax
1001662b:	call   esi
1001662d:	mov    esi,DWORD PTR [ebp-0x10]
10016630:	call   0x10015eeb
10016635:	lea    eax,[ebp-0x18]
10016638:	push   eax
10016639:	push   ebx
1001663a:	push   ebx
1001663b:	push   ebx
1001663c:	lea    eax,[ebp-0x1c]
1001663f:	push   eax
10016640:	push   ebx
10016641:	push   ebx
10016642:	push   0x4
10016644:	lea    eax,[ebp-0x20]
10016647:	push   eax
10016648:	push   0x8004667e
1001664d:	push   DWORD PTR [ebp+0x8]
10016650:	mov    DWORD PTR [ebp-0x10],ebx
10016653:	mov    DWORD PTR [ebp-0x1c],ebx
10016656:	mov    DWORD PTR [ebp-0x18],ebx
10016659:	call   DWORD PTR ds:0x10080cc0
1001665f:	jmp    0x1001657c
10016664:	mov    ecx,DWORD PTR [eax+0x34]
10016667:	mov    esi,DWORD PTR ds:0x10066108
1001666d:	push   0x2
1001666f:	push   0x1
10016671:	mov    edi,eax
10016673:	push   ebx
10016674:	lea    eax,[ebp-0x14]
10016677:	push   eax
10016678:	mov    DWORD PTR [ebp-0x14],ecx
1001667b:	call   esi
1001667d:	push   eax
1001667e:	push   DWORD PTR [edi+0x34]
10016681:	call   esi
10016683:	push   eax
10016684:	call   DWORD PTR ds:0x1006613c
1001668a:	mov    esi,eax
1001668c:	mov    eax,DWORD PTR [ebp-0x10]
1001668f:	add    eax,0x4
10016692:	push   eax
10016693:	call   DWORD PTR ds:0x100660ec
10016699:	cmp    esi,ebx
1001669b:	je     0x100166a8
1001669d:	push   0xffffffff
1001669f:	push   DWORD PTR [ebp-0x14]
100166a2:	call   DWORD PTR ds:0x10066084
100166a8:	mov    ecx,DWORD PTR [ebp+0xc]
100166ab:	or     eax,0xffffffff
100166ae:	mov    DWORD PTR [ecx],0x2736
100166b4:	jmp    0x10016588
100166b9:	push   0x4
100166bb:	mov    eax,0x10065104
100166c0:	call   0x10059a35
100166c5:	mov    esi,DWORD PTR [ebp+0xc]
100166c8:	cmp    WORD PTR [esi],0x2
100166cc:	jne    0x1001670f
100166ce:	mov    eax,DWORD PTR [esi+0x4]
100166d1:	push   eax
100166d2:	mov    DWORD PTR [ebp-0x10],eax
100166d5:	call   DWORD PTR ds:0x100663a8
100166db:	mov    ebx,eax
100166dd:	call   0x10017464
100166e2:	test   al,al
100166e4:	je     0x1001670f
100166e6:	movzx  eax,BYTE PTR [ebp-0xd]
100166ea:	push   eax
100166eb:	movzx  eax,BYTE PTR [ebp-0xe]
100166ef:	push   eax
100166f0:	movzx  eax,BYTE PTR [ebp-0xf]
100166f4:	push   eax
100166f5:	movzx  eax,BYTE PTR [ebp-0x10]
100166f9:	push   eax
100166fa:	call   0x10002080
100166ff:	add    esp,0x10
10016702:	mov    eax,0x274d
10016707:	call   0x10059b0d
1001670c:	ret    0x20
1001670f:	mov    ebx,DWORD PTR [ebp+0x8]
10016712:	push   ebx
10016713:	call   0x10015f31
10016718:	pop    ecx
10016719:	mov    DWORD PTR [ebp+0xc],eax
1001671c:	and    DWORD PTR [ebp-0x4],0x0
10016720:	test   eax,eax
10016722:	jne    0x1001674c
10016724:	push   DWORD PTR [ebp+0x24]
10016727:	push   DWORD PTR [ebp+0x20]
1001672a:	push   DWORD PTR [ebp+0x1c]
1001672d:	push   DWORD PTR [ebp+0x18]
10016730:	push   DWORD PTR [ebp+0x14]
10016733:	push   DWORD PTR [ebp+0x10]
10016736:	push   esi
10016737:	push   ebx
10016738:	call   DWORD PTR ds:0x10080c9c
1001673e:	mov    esi,eax
10016740:	lea    ecx,[ebp+0xc]
10016743:	call   0x10015ddd
10016748:	mov    eax,esi
1001674a:	jmp    0x10016707
1001674c:	mov    edi,DWORD PTR [ebp+0x24]
1001674f:	push   edi
10016750:	push   DWORD PTR [ebp+0x20]
10016753:	push   DWORD PTR [ebp+0x1c]
10016756:	push   DWORD PTR [ebp+0x18]
10016759:	push   DWORD PTR [ebp+0x14]
1001675c:	push   DWORD PTR [ebp+0x10]
1001675f:	push   esi
10016760:	push   ebx
10016761:	call   DWORD PTR [eax+0x58]
10016764:	cmp    eax,0xffffffff
10016767:	mov    DWORD PTR [ebp+0x24],eax
1001676a:	jne    0x10016797
1001676c:	mov    edi,DWORD PTR [edi]
1001676e:	cmp    edi,0x2733
10016774:	jne    0x1001678c
10016776:	mov    eax,DWORD PTR [ebp+0xc]
10016779:	add    eax,0x4
1001677c:	push   eax
1001677d:	call   DWORD PTR ds:0x100660f0
10016783:	mov    eax,DWORD PTR [ebp+0xc]
10016786:	mov    BYTE PTR [eax+0x24],0x1
1001678a:	jmp    0x100167ac
1001678c:	push   edi
1001678d:	push   ebx
1001678e:	call   0x10002080
10016793:	pop    ecx
10016794:	pop    ecx
10016795:	jmp    0x100167b9
10016797:	mov    eax,DWORD PTR [ebp+0xc]
1001679a:	add    eax,0x4
1001679d:	push   eax
1001679e:	call   DWORD PTR ds:0x100660f0
100167a4:	mov    esi,DWORD PTR [ebp+0xc]
100167a7:	call   0x10016109
100167ac:	mov    eax,DWORD PTR [ebp+0xc]
100167af:	add    eax,0x4
100167b2:	push   eax
100167b3:	call   DWORD PTR ds:0x100660ec
100167b9:	mov    esi,DWORD PTR [ebp+0x24]
100167bc:	jmp    0x10016740
100167be:	push   0x4
100167c0:	mov    eax,0x1005fbc8
100167c5:	call   0x10059a35
100167ca:	push   DWORD PTR [ebp+0x8]
100167cd:	or     edi,0xffffffff
100167d0:	call   0x10015f31
100167d5:	pop    ecx
100167d6:	mov    DWORD PTR [ebp-0x10],eax
100167d9:	mov    esi,DWORD PTR [ebp+0x10]
100167dc:	xor    ebx,ebx
100167de:	cmp    eax,ebx
100167e0:	mov    DWORD PTR [ebp-0x4],ebx
100167e3:	je     0x10016852
100167e5:	cmp    DWORD PTR [ebp+0xc],0x4004667f
100167ec:	je     0x10016816
100167ee:	cmp    DWORD PTR [ebp+0xc],0x8004667e
100167f5:	jne    0x10016852
100167f7:	add    eax,0x4
100167fa:	push   eax
100167fb:	call   DWORD PTR ds:0x100660f0
10016801:	cmp    DWORD PTR [esi],ebx
10016803:	mov    ecx,DWORD PTR [ebp-0x10]
10016806:	sete   al
10016809:	mov    BYTE PTR [ecx+0x26],al
1001680c:	mov    eax,DWORD PTR [ebp-0x10]
1001680f:	cmp    BYTE PTR [eax+0x25],bl
10016812:	je     0x10016843
10016814:	jmp    0x10016841
10016816:	add    eax,0x4
10016819:	push   eax
1001681a:	call   DWORD PTR ds:0x100660f0
10016820:	mov    eax,DWORD PTR [ebp-0x10]
10016823:	cmp    BYTE PTR [eax+0x25],bl
10016826:	je     0x10016843
10016828:	mov    eax,DWORD PTR [eax+0x1c]
1001682b:	call   0x10025884
10016830:	cmp    eax,ebx
10016832:	mov    DWORD PTR [esi],ebx
10016834:	je     0x1001683e
10016836:	mov    ecx,DWORD PTR [eax+0x18]
10016839:	sub    ecx,DWORD PTR [eax+0x20]
1001683c:	mov    DWORD PTR [esi],ecx
1001683e:	mov    eax,DWORD PTR [ebp-0x10]
10016841:	xor    edi,edi
10016843:	add    eax,0x4
10016846:	push   eax
10016847:	call   DWORD PTR ds:0x100660ec
1001684d:	cmp    edi,0xffffffff
10016850:	jne    0x10016879
10016852:	push   DWORD PTR [ebp+0x30]
10016855:	push   DWORD PTR [ebp+0x2c]
10016858:	push   DWORD PTR [ebp+0x28]
1001685b:	push   DWORD PTR [ebp+0x24]
1001685e:	push   DWORD PTR [ebp+0x20]
10016861:	push   DWORD PTR [ebp+0x1c]
10016864:	push   DWORD PTR [ebp+0x18]
10016867:	push   DWORD PTR [ebp+0x14]
1001686a:	push   esi
1001686b:	push   DWORD PTR [ebp+0xc]
1001686e:	push   DWORD PTR [ebp+0x8]
10016871:	call   DWORD PTR ds:0x10080cc0
10016877:	mov    edi,eax
10016879:	lea    ecx,[ebp-0x10]
1001687c:	call   0x10015ddd
10016881:	mov    eax,edi
10016883:	call   0x10059b0d
10016888:	ret    0x2c
1001688b:	push   ebp
1001688c:	mov    ebp,esp
1001688e:	sub    esp,0x10
10016891:	or     DWORD PTR [ebp-0x4],0xffffffff
10016895:	push   ebx
10016896:	push   edi
10016897:	mov    edi,DWORD PTR ds:0x100660f0
1001689d:	lea    eax,[esi+0x4]
100168a0:	push   eax
100168a1:	mov    DWORD PTR [ebp-0x8],eax
100168a4:	call   edi
100168a6:	xor    ebx,ebx
100168a8:	cmp    DWORD PTR [esi+0x38],ebx
100168ab:	je     0x100168c3
100168ad:	mov    eax,DWORD PTR [ebp+0xc]
100168b0:	mov    ecx,DWORD PTR [ebp+0x14]
100168b3:	or     DWORD PTR [ebp-0x4],0xffffffff
100168b7:	mov    DWORD PTR [eax],ebx
100168b9:	mov    eax,DWORD PTR [esi+0x38]
100168bc:	mov    DWORD PTR [ecx],eax
100168be:	jmp    0x10016971
100168c3:	cmp    BYTE PTR [esi+0x26],bl
100168c6:	je     0x100168f1
100168c8:	push   DWORD PTR [ebp-0x8]
100168cb:	call   DWORD PTR ds:0x100660ec
100168d1:	mov    eax,DWORD PTR [esi+0x28]
100168d4:	mov    DWORD PTR [ebp-0x10],eax
100168d7:	mov    eax,DWORD PTR [esi+0x30]
100168da:	push   0xffffffff
100168dc:	mov    DWORD PTR [ebp-0xc],eax
100168df:	push   ebx
100168e0:	lea    eax,[ebp-0x10]
100168e3:	push   eax
100168e4:	push   0x2
100168e6:	call   DWORD PTR ds:0x100660e8
100168ec:	push   DWORD PTR [ebp-0x8]
100168ef:	call   edi
100168f1:	mov    ebx,DWORD PTR [esi+0x1c]
100168f4:	cmp    BYTE PTR [ebx+0x1],0x0
100168f8:	je     0x10016922
100168fa:	lea    eax,[ebx+0x38]
100168fd:	push   eax
100168fe:	mov    DWORD PTR [ebp-0xc],eax
10016901:	call   edi
10016903:	push   DWORD PTR [ebp-0xc]
10016906:	xor    edi,edi
10016908:	cmp    DWORD PTR [ebx+0x28],edi
1001690b:	setne  bl
1001690e:	call   DWORD PTR ds:0x100660ec
10016914:	test   bl,bl
10016916:	jne    0x10016922
10016918:	mov    eax,DWORD PTR [ebp+0xc]
1001691b:	mov    DWORD PTR [eax],edi
1001691d:	mov    DWORD PTR [ebp-0x4],edi
10016920:	jmp    0x10016971
10016922:	mov    eax,DWORD PTR [ebp+0x10]
10016925:	mov    eax,DWORD PTR [eax]
10016927:	mov    ebx,DWORD PTR [ebp+0x8]
1001692a:	mov    edi,DWORD PTR [esi+0x1c]
1001692d:	shr    eax,1
1001692f:	and    eax,0xffffff01
10016934:	push   eax
10016935:	push   DWORD PTR [ebx]
10016937:	mov    eax,DWORD PTR [ebp+0xc]
1001693a:	push   DWORD PTR [ebx+0x4]
1001693d:	call   0x10016099
10016942:	mov    ecx,DWORD PTR [ebp+0x10]
10016945:	xor    eax,eax
10016947:	mov    DWORD PTR [ecx],eax
10016949:	mov    ecx,DWORD PTR [ebp+0xc]
1001694c:	add    esp,0xc
1001694f:	cmp    DWORD PTR [ecx],eax
10016951:	jne    0x1001696e
10016953:	cmp    DWORD PTR [ebx+0x4],eax
10016956:	je     0x1001696e
10016958:	mov    al,BYTE PTR [esi+0x26]
1001695b:	mov    ecx,DWORD PTR [ebp+0x14]
1001695e:	neg    al
10016960:	sbb    eax,eax
10016962:	and    eax,0x13
10016965:	add    eax,0x2733
1001696a:	mov    DWORD PTR [ecx],eax
1001696c:	jmp    0x10016971
1001696e:	mov    DWORD PTR [ebp-0x4],eax
10016971:	push   DWORD PTR [ebp-0x8]
10016974:	call   DWORD PTR ds:0x100660ec
1001697a:	mov    eax,DWORD PTR [ebp-0x4]
1001697d:	pop    edi
1001697e:	pop    ebx
1001697f:	leave  
10016980:	ret    0x10
10016983:	push   0x4
10016985:	mov    eax,0x1005fbc8
1001698a:	call   0x10059a35
1001698f:	push   DWORD PTR [ebp+0x8]
10016992:	call   0x10015f31
10016997:	pop    ecx
10016998:	mov    DWORD PTR [ebp-0x10],eax
1001699b:	mov    ecx,DWORD PTR [ebp+0x18]
1001699e:	xor    edx,edx
100169a0:	cmp    DWORD PTR [ebp+0x1c],edx
100169a3:	mov    DWORD PTR [ebp-0x4],edx
100169a6:	jne    0x100169c9
100169a8:	cmp    eax,edx
100169aa:	je     0x100169c9
100169ac:	cmp    BYTE PTR [eax+0x25],dl
100169af:	je     0x100169c9
100169b1:	test   BYTE PTR [ecx],0x1
100169b4:	jne    0x100169c9
100169b6:	push   DWORD PTR [ebp+0x28]
100169b9:	mov    esi,eax
100169bb:	push   ecx
100169bc:	push   DWORD PTR [ebp+0x14]
100169bf:	push   DWORD PTR [ebp+0xc]
100169c2:	call   0x1001688b
100169c7:	jmp    0x100169e8
100169c9:	push   DWORD PTR [ebp+0x28]
100169cc:	push   DWORD PTR [ebp+0x24]
100169cf:	push   DWORD PTR [ebp+0x20]
100169d2:	push   DWORD PTR [ebp+0x1c]
100169d5:	push   ecx
100169d6:	push   DWORD PTR [ebp+0x14]
100169d9:	push   DWORD PTR [ebp+0x10]
100169dc:	push   DWORD PTR [ebp+0xc]
100169df:	push   DWORD PTR [ebp+0x8]
100169e2:	call   DWORD PTR ds:0x10080ccc
100169e8:	lea    ecx,[ebp-0x10]
100169eb:	mov    esi,eax
100169ed:	call   0x10015ddd
100169f2:	mov    eax,esi
100169f4:	call   0x10059b0d
100169f9:	ret    0x24
100169fc:	push   ebp
100169fd:	mov    ebp,esp
100169ff:	push   ecx
10016a00:	mov    edx,DWORD PTR [ebp+0x8]
10016a03:	xor    ecx,ecx
10016a05:	mov    DWORD PTR [eax],ecx
10016a07:	cmp    DWORD PTR [edx],ecx
10016a09:	mov    DWORD PTR [ebp-0x4],ecx
10016a0c:	jbe    0x10016a51
10016a0e:	push   ebx
10016a0f:	push   esi
10016a10:	push   edi
10016a11:	lea    esi,[edx+0x4]
10016a14:	mov    ebx,DWORD PTR [eax]
10016a16:	xor    ecx,ecx
10016a18:	test   ebx,ebx
10016a1a:	jbe    0x10016a30
10016a1c:	mov    edi,DWORD PTR [esi]
10016a1e:	lea    edx,[eax+0x4]
10016a21:	cmp    DWORD PTR [edx],edi
10016a23:	je     0x10016a2d
10016a25:	inc    ecx
10016a26:	add    edx,0x4
10016a29:	cmp    ecx,ebx
10016a2b:	jb     0x10016a21
10016a2d:	mov    edx,DWORD PTR [ebp+0x8]
10016a30:	cmp    ecx,ebx
10016a32:	jne    0x10016a41
10016a34:	cmp    ebx,0x40
10016a37:	jae    0x10016a41
10016a39:	mov    edi,DWORD PTR [esi]
10016a3b:	mov    DWORD PTR [eax+ecx*4+0x4],edi
10016a3f:	inc    DWORD PTR [eax]
10016a41:	inc    DWORD PTR [ebp-0x4]
10016a44:	mov    ecx,DWORD PTR [ebp-0x4]
10016a47:	add    esi,0x4
10016a4a:	cmp    ecx,DWORD PTR [edx]
10016a4c:	jb     0x10016a14
10016a4e:	pop    edi
10016a4f:	pop    esi
10016a50:	pop    ebx
10016a51:	leave  
10016a52:	ret    
10016a53:	push   ebp
10016a54:	mov    ebp,esp
10016a56:	and    esp,0xfffffff8
10016a59:	push   0xffffffff
10016a5b:	push   0x100650db
10016a60:	mov    eax,fs:0x0
10016a66:	push   eax
10016a67:	sub    esp,0xa88
10016a6d:	push   ebx
10016a6e:	push   esi
10016a6f:	push   edi
10016a70:	mov    eax,ds:0x1007e030
10016a75:	xor    eax,esp
10016a77:	push   eax
10016a78:	lea    eax,[esp+0xa98]
10016a7f:	mov    fs:0x0,eax
10016a85:	xor    ebx,ebx
10016a87:	mov    DWORD PTR [esp+0x1c],ebx
10016a8b:	or     DWORD PTR [esp+0x2c],0xffffffff
10016a90:	mov    edi,0x10015ddd
10016a95:	push   edi
10016a96:	mov    esi,0x100171ff
10016a9b:	push   esi
10016a9c:	push   0x40
10016a9e:	push   0x4
10016aa0:	lea    eax,[esp+0x8a4]
10016aa7:	push   eax
10016aa8:	mov    DWORD PTR [esp+0xab4],ebx
10016aaf:	call   0x10045df8
10016ab4:	push   edi
10016ab5:	push   esi
10016ab6:	push   0x40
10016ab8:	push   0x4
10016aba:	lea    eax,[esp+0x7a4]
10016ac1:	push   eax
10016ac2:	mov    BYTE PTR [esp+0xab4],0x1
10016aca:	call   0x10045df8
10016acf:	push   edi
10016ad0:	push   esi
10016ad1:	push   0x40
10016ad3:	push   0x4
10016ad5:	lea    eax,[esp+0x9a4]
10016adc:	push   eax
10016add:	mov    BYTE PTR [esp+0xab4],0x2
10016ae5:	call   0x10045df8
10016aea:	cmp    DWORD PTR [ebp+0xc],ebx
10016aed:	mov    BYTE PTR [esp+0xaa0],0x3
10016af5:	mov    DWORD PTR [esp+0x28],ebx
10016af9:	mov    DWORD PTR [esp+0x18],ebx
10016afd:	mov    DWORD PTR [esp+0x584],ebx
10016b04:	je     0x10016bea
10016b0a:	mov    eax,DWORD PTR [ebp+0xc]
10016b0d:	mov    eax,DWORD PTR [eax]
10016b0f:	cmp    eax,0x40
10016b12:	jbe    0x10016b22
10016b14:	mov    eax,DWORD PTR [ebp+0x1c]
10016b17:	mov    DWORD PTR [eax],0x2747
10016b1d:	jmp    0x10017187
10016b22:	and    DWORD PTR [esp+0x14],0x0
10016b27:	test   eax,eax
10016b29:	jbe    0x10016bea
10016b2f:	mov    edi,DWORD PTR [ebp+0xc]
10016b32:	lea    ebx,[esp+0x894]
10016b39:	add    edi,0x4
10016b3c:	push   DWORD PTR [edi]
10016b3e:	call   0x10015f31
10016b43:	test   eax,eax
10016b45:	pop    ecx
10016b46:	mov    DWORD PTR [esp+0x20],eax
10016b4a:	je     0x10016b95
10016b4c:	cmp    BYTE PTR [eax+0x25],0x0
10016b50:	je     0x10016b95
10016b52:	cmp    DWORD PTR [esp+0x1c],0x0
10016b57:	jne    0x10016b68
10016b59:	push   0x1
10016b5b:	lea    esi,[esp+0x20]
10016b5f:	call   0x10015df0
10016b64:	mov    eax,DWORD PTR [esp+0x20]
10016b68:	push   0x1
10016b6a:	mov    esi,ebx
10016b6c:	call   0x10015df0
10016b71:	inc    DWORD PTR [esp+0x28]
10016b75:	and    DWORD PTR [esp+0x30],0x0
10016b7a:	push   0x1
10016b7c:	xor    eax,eax
10016b7e:	lea    esi,[esp+0x24]
10016b82:	add    ebx,0x4
10016b85:	call   0x10015df0
10016b8a:	lea    ecx,[esp+0x30]
10016b8e:	call   0x10015ddd
10016b93:	jmp    0x10016bcb
10016b95:	mov    edx,DWORD PTR [esp+0x584]
10016b9c:	xor    eax,eax
10016b9e:	test   edx,edx
10016ba0:	jbe    0x10016bb2
10016ba2:	mov    ecx,DWORD PTR [edi]
10016ba4:	cmp    DWORD PTR [esp+eax*4+0x588],ecx
10016bab:	je     0x10016bb2
10016bad:	inc    eax
10016bae:	cmp    eax,edx
10016bb0:	jb     0x10016ba4
10016bb2:	cmp    eax,edx
10016bb4:	jne    0x10016bcb
10016bb6:	cmp    edx,0x40
10016bb9:	jae    0x10016bcb
10016bbb:	mov    ecx,DWORD PTR [edi]
10016bbd:	mov    DWORD PTR [esp+eax*4+0x588],ecx
10016bc4:	inc    DWORD PTR [esp+0x584]
10016bcb:	lea    ecx,[esp+0x20]
10016bcf:	call   0x10015ddd
10016bd4:	inc    DWORD PTR [esp+0x14]
10016bd8:	mov    eax,DWORD PTR [ebp+0xc]
10016bdb:	mov    ecx,DWORD PTR [esp+0x14]
10016bdf:	add    edi,0x4
10016be2:	cmp    ecx,DWORD PTR [eax]
10016be4:	jb     0x10016b3c
10016bea:	mov    esi,DWORD PTR [ebp+0x10]
10016bed:	and    DWORD PTR [esp+0x5c],0x0
10016bf2:	and    DWORD PTR [esp+0x47c],0x0
10016bfa:	test   esi,esi
10016bfc:	je     0x10016d10
10016c02:	mov    eax,DWORD PTR [esi]
10016c04:	cmp    eax,0x40
10016c07:	ja     0x10016b14
10016c0d:	and    DWORD PTR [esp+0x14],0x0
10016c12:	test   eax,eax
10016c14:	jbe    0x10016d10
10016c1a:	lea    ebx,[esp+0x794]
10016c21:	lea    edi,[esi+0x4]
10016c24:	push   DWORD PTR [edi]
10016c26:	call   0x10015f31
10016c2b:	test   eax,eax
10016c2d:	pop    ecx
10016c2e:	mov    DWORD PTR [esp+0x20],eax
10016c32:	jne    0x10016c59
10016c34:	mov    edx,DWORD PTR [esp+0x5c]
10016c38:	test   edx,edx
10016c3a:	jbe    0x10016c49
10016c3c:	mov    ecx,DWORD PTR [edi]
10016c3e:	cmp    DWORD PTR [esp+eax*4+0x60],ecx
10016c42:	je     0x10016c49
10016c44:	inc    eax
10016c45:	cmp    eax,edx
10016c47:	jb     0x10016c3e
10016c49:	cmp    eax,edx
10016c4b:	jne    0x10016cf4
10016c51:	cmp    edx,0x40
10016c54:	jmp    0x10016ce8
10016c59:	cmp    BYTE PTR [eax+0x25],0x0
10016c5d:	je     0x10016c8a
10016c5f:	cmp    DWORD PTR [esp+0x1c],0x0
10016c64:	jne    0x10016c75
10016c66:	push   0x1
10016c68:	lea    esi,[esp+0x20]
10016c6c:	call   0x10015df0
10016c71:	mov    eax,DWORD PTR [esp+0x20]
10016c75:	push   0x1
10016c77:	mov    esi,ebx
10016c79:	call   0x10015df0
10016c7e:	inc    DWORD PTR [esp+0x18]
10016c82:	mov    esi,DWORD PTR [ebp+0x10]
10016c85:	add    ebx,0x4
10016c88:	jmp    0x10016cf4
10016c8a:	cmp    BYTE PTR [eax+0x24],0x0
10016c8e:	je     0x10016cc6
10016c90:	mov    edx,DWORD PTR [esp+0x47c]
10016c97:	xor    eax,eax
10016c99:	test   edx,edx
10016c9b:	jbe    0x10016cad
10016c9d:	mov    ecx,DWORD PTR [edi]
10016c9f:	cmp    DWORD PTR [esp+eax*4+0x480],ecx
10016ca6:	je     0x10016cad
10016ca8:	inc    eax
10016ca9:	cmp    eax,edx
10016cab:	jb     0x10016c9f
10016cad:	cmp    eax,edx
10016caf:	jne    0x10016cc6
10016cb1:	cmp    edx,0x40
10016cb4:	jae    0x10016cc6
10016cb6:	mov    ecx,DWORD PTR [edi]
10016cb8:	mov    DWORD PTR [esp+eax*4+0x480],ecx
10016cbf:	inc    DWORD PTR [esp+0x47c]
10016cc6:	xor    eax,eax
10016cc8:	cmp    eax,DWORD PTR [esp+0x5c]
10016ccc:	jae    0x10016ce1
10016cce:	mov    ecx,DWORD PTR [edi]
10016cd0:	cmp    DWORD PTR [esp+eax*4+0x60],ecx
10016cd4:	je     0x10016cdd
10016cd6:	inc    eax
10016cd7:	cmp    eax,DWORD PTR [esp+0x5c]
10016cdb:	jb     0x10016cd0
10016cdd:	cmp    eax,DWORD PTR [esp+0x5c]
10016ce1:	jne    0x10016cf4
10016ce3:	cmp    DWORD PTR [esp+0x5c],0x40
10016ce8:	jae    0x10016cf4
10016cea:	mov    ecx,DWORD PTR [edi]
10016cec:	mov    DWORD PTR [esp+eax*4+0x60],ecx
10016cf0:	inc    DWORD PTR [esp+0x5c]
10016cf4:	lea    ecx,[esp+0x20]
10016cf8:	call   0x10015ddd
10016cfd:	inc    DWORD PTR [esp+0x14]
10016d01:	mov    eax,DWORD PTR [esp+0x14]
10016d05:	add    edi,0x4
10016d08:	cmp    eax,DWORD PTR [esi]
10016d0a:	jb     0x10016c24
10016d10:	mov    edi,DWORD PTR [ebp+0x14]
10016d13:	xor    ebx,ebx
10016d15:	cmp    edi,ebx
10016d17:	mov    DWORD PTR [esp+0x164],ebx
10016d1e:	je     0x10016d80
10016d20:	mov    eax,DWORD PTR [edi]
10016d22:	cmp    eax,0x40
10016d25:	ja     0x10016b14
10016d2b:	cmp    eax,ebx
10016d2d:	jbe    0x10016d80
10016d2f:	lea    ecx,[edi+0x4]
10016d32:	mov    esi,eax
10016d34:	xor    eax,eax
10016d36:	cmp    DWORD PTR [esp+0x164],ebx
10016d3d:	jbe    0x10016d54
10016d3f:	mov    edx,DWORD PTR [ecx]
10016d41:	cmp    DWORD PTR [esp+eax*4+0x168],edx
10016d48:	je     0x10016d54
10016d4a:	inc    eax
10016d4b:	cmp    eax,DWORD PTR [esp+0x164]
10016d52:	jb     0x10016d41
10016d54:	cmp    eax,DWORD PTR [esp+0x164]
10016d5b:	jne    0x10016d77
10016d5d:	cmp    DWORD PTR [esp+0x164],0x40
10016d65:	jae    0x10016d77
10016d67:	mov    edx,DWORD PTR [ecx]
10016d69:	mov    DWORD PTR [esp+eax*4+0x168],edx
10016d70:	inc    DWORD PTR [esp+0x164]
10016d77:	add    ecx,0x4
10016d7a:	dec    esi
10016d7b:	jne    0x10016d34
10016d7d:	mov    esi,DWORD PTR [ebp+0x10]
10016d80:	mov    eax,DWORD PTR [esp+0x1c]
10016d84:	cmp    eax,ebx
10016d86:	je     0x100170cb
10016d8c:	cmp    BYTE PTR [eax+0x25],0x0
10016d90:	je     0x100170cb
10016d96:	xor    eax,eax
10016d98:	mov    WORD PTR [esp+0x3c],bx
10016d9d:	lea    edi,[esp+0x3e]
10016da1:	stos   DWORD PTR es:[edi],eax
10016da2:	stos   DWORD PTR es:[edi],eax
10016da3:	stos   DWORD PTR es:[edi],eax
10016da4:	stos   WORD PTR es:[edi],ax
10016da6:	xor    eax,eax
10016da8:	mov    DWORD PTR [esp+0x20],ebx
10016dac:	lea    edi,[esp+0x24]
10016db0:	stos   DWORD PTR es:[edi],eax
10016db1:	lea    eax,[esp+0x3c]
10016db5:	push   eax
10016db6:	call   DWORD PTR ds:0x10066140
10016dbc:	lea    eax,[esp+0x20]
10016dc0:	push   eax
10016dc1:	lea    eax,[esp+0x40]
10016dc5:	push   eax
10016dc6:	call   DWORD PTR ds:0x10066104
10016dcc:	mov    ecx,DWORD PTR [ebp+0x18]
10016dcf:	xor    eax,eax
10016dd1:	cmp    ecx,ebx
10016dd3:	lea    edi,[esp+0x58]
10016dd7:	mov    DWORD PTR [esp+0x54],ebx
10016ddb:	stos   DWORD PTR es:[edi],eax
10016ddc:	je     0x10016e08
10016dde:	mov    eax,DWORD PTR [ecx]
10016de0:	imul   eax,eax,0x3e8
10016de6:	add    eax,DWORD PTR [ecx+0x4]
10016de9:	imul   eax,eax,0x2710
10016def:	cdq    
10016df0:	add    DWORD PTR [esp+0x20],eax
10016df4:	lea    eax,[esp+0x3c]
10016df8:	push   eax
10016df9:	adc    DWORD PTR [esp+0x28],edx
10016dfd:	lea    eax,[esp+0x24]
10016e01:	push   eax
10016e02:	call   DWORD PTR ds:0x10066120
10016e08:	mov    eax,DWORD PTR [esp+0x18]
10016e0c:	mov    ecx,DWORD PTR [esp+0x28]
10016e10:	add    eax,ecx
10016e12:	mov    DWORD PTR [esp+0x14],ebx
10016e16:	mov    DWORD PTR [esp+0x30],eax
10016e1a:	push   0x1
10016e1c:	call   DWORD PTR ds:0x100660bc
10016e22:	cmp    DWORD PTR [esp+0x584],ebx
10016e29:	mov    DWORD PTR [esp+0x26c],ebx
10016e30:	mov    DWORD PTR [esp+0x374],ebx
10016e37:	mov    DWORD PTR [esp+0x68c],ebx
10016e3e:	ja     0x10016e4f
10016e40:	cmp    DWORD PTR [esp+0x5c],ebx
10016e44:	ja     0x10016e4f
10016e46:	cmp    DWORD PTR [esp+0x164],ebx
10016e4d:	jbe    0x10016eb8
10016e4f:	lea    eax,[esp+0x584]
10016e56:	push   eax
10016e57:	lea    eax,[esp+0x270]
10016e5e:	call   0x100169fc
10016e63:	pop    ecx
10016e64:	lea    eax,[esp+0x5c]
10016e68:	push   eax
10016e69:	lea    eax,[esp+0x378]
10016e70:	call   0x100169fc
10016e75:	pop    ecx
10016e76:	lea    eax,[esp+0x164]
10016e7d:	push   eax
10016e7e:	lea    eax,[esp+0x690]
10016e85:	call   0x100169fc
10016e8a:	pop    ecx
10016e8b:	push   DWORD PTR [ebp+0x1c]
10016e8e:	lea    eax,[esp+0x58]
10016e92:	push   eax
10016e93:	lea    eax,[esp+0x694]
10016e9a:	push   eax
10016e9b:	lea    eax,[esp+0x380]
10016ea2:	push   eax
10016ea3:	lea    eax,[esp+0x27c]
10016eaa:	push   eax
10016eab:	push   DWORD PTR [ebp+0x8]
10016eae:	mov    eax,DWORD PTR [esp+0x34]
10016eb2:	call   DWORD PTR [eax+0x94]
10016eb8:	cmp    DWORD PTR [esp+0x30],ebx
10016ebc:	jbe    0x10016ff8
10016ec2:	xor    edi,edi
10016ec4:	cmp    DWORD PTR [esp+0x28],ebx
10016ec8:	je     0x10016f5d
10016ece:	lea    esi,[esp+edi*4+0x894]
10016ed5:	mov    eax,DWORD PTR [esi]
10016ed7:	add    eax,0x4
10016eda:	push   eax
10016edb:	call   DWORD PTR ds:0x100660f0
10016ee1:	mov    eax,DWORD PTR [esi]
10016ee3:	mov    ecx,DWORD PTR [eax+0x28]
10016ee6:	mov    DWORD PTR [esp+0x34],ecx
10016eea:	mov    ecx,DWORD PTR [eax+0x30]
10016eed:	mov    DWORD PTR [esp+0x38],ecx
10016ef1:	cmp    DWORD PTR [eax+0x38],ebx
10016ef4:	jne    0x10016f0c
10016ef6:	push   ebx
10016ef7:	push   ebx
10016ef8:	lea    eax,[esp+0x3c]
10016efc:	push   eax
10016efd:	push   0x2
10016eff:	call   DWORD PTR ds:0x100660e8
10016f05:	cmp    eax,0x102
10016f0a:	je     0x10016f46
10016f0c:	mov    edx,DWORD PTR [esp+0x26c]
10016f13:	xor    ecx,ecx
10016f15:	cmp    edx,ebx
10016f17:	jbe    0x10016f2b
10016f19:	mov    eax,DWORD PTR [esi]
10016f1b:	mov    eax,DWORD PTR [eax]
10016f1d:	cmp    DWORD PTR [esp+ecx*4+0x270],eax
10016f24:	je     0x10016f2b
10016f26:	inc    ecx
10016f27:	cmp    ecx,edx
10016f29:	jb     0x10016f1d
10016f2b:	cmp    ecx,edx
10016f2d:	jne    0x10016f46
10016f2f:	cmp    edx,0x40
10016f32:	jae    0x10016f46
10016f34:	mov    eax,DWORD PTR [esi]
10016f36:	mov    eax,DWORD PTR [eax]
10016f38:	mov    DWORD PTR [esp+ecx*4+0x270],eax
10016f3f:	inc    DWORD PTR [esp+0x26c]
10016f46:	mov    esi,DWORD PTR [esi]
10016f48:	add    esi,0x4
10016f4b:	push   esi
10016f4c:	call   DWORD PTR ds:0x100660ec
10016f52:	inc    edi
10016f53:	cmp    edi,DWORD PTR [esp+0x28]
10016f57:	jne    0x10016ece
10016f5d:	xor    edi,edi
10016f5f:	cmp    DWORD PTR [esp+0x18],ebx
10016f63:	je     0x10016ff8
10016f69:	lea    esi,[esp+edi*4+0x794]
10016f70:	mov    eax,DWORD PTR [esi]
10016f72:	add    eax,0x4
10016f75:	push   eax
10016f76:	call   DWORD PTR ds:0x100660f0
10016f7c:	mov    eax,DWORD PTR [esi]
10016f7e:	mov    ecx,DWORD PTR [eax+0x2c]
10016f81:	mov    DWORD PTR [esp+0x34],ecx
10016f85:	mov    ecx,DWORD PTR [eax+0x30]
10016f88:	mov    DWORD PTR [esp+0x38],ecx
10016f8c:	cmp    DWORD PTR [eax+0x38],ebx
10016f8f:	jne    0x10016fa7
10016f91:	push   ebx
10016f92:	push   ebx
10016f93:	lea    eax,[esp+0x3c]
10016f97:	push   eax
10016f98:	push   0x2
10016f9a:	call   DWORD PTR ds:0x100660e8
10016fa0:	cmp    eax,0x102
10016fa5:	je     0x10016fe1
10016fa7:	mov    edx,DWORD PTR [esp+0x374]
10016fae:	xor    ecx,ecx
10016fb0:	cmp    edx,ebx
10016fb2:	jbe    0x10016fc6
10016fb4:	mov    eax,DWORD PTR [esi]
10016fb6:	mov    eax,DWORD PTR [eax]
10016fb8:	cmp    DWORD PTR [esp+ecx*4+0x378],eax
10016fbf:	je     0x10016fc6
10016fc1:	inc    ecx
10016fc2:	cmp    ecx,edx
10016fc4:	jb     0x10016fb8
10016fc6:	cmp    ecx,edx
10016fc8:	jne    0x10016fe1
10016fca:	cmp    edx,0x40
10016fcd:	jae    0x10016fe1
10016fcf:	mov    eax,DWORD PTR [esi]
10016fd1:	mov    eax,DWORD PTR [eax]
10016fd3:	mov    DWORD PTR [esp+ecx*4+0x378],eax
10016fda:	inc    DWORD PTR [esp+0x374]
10016fe1:	mov    esi,DWORD PTR [esi]
10016fe3:	add    esi,0x4
10016fe6:	push   esi
10016fe7:	call   DWORD PTR ds:0x100660ec
10016fed:	inc    edi
10016fee:	cmp    edi,DWORD PTR [esp+0x18]
10016ff2:	jne    0x10016f69
10016ff8:	mov    eax,DWORD PTR [esp+0x68c]
10016fff:	mov    ecx,DWORD PTR [esp+0x374]
10017006:	lea    esi,[eax+ecx*1]
10017009:	add    esi,DWORD PTR [esp+0x26c]
10017010:	cmp    esi,ebx
10017012:	mov    DWORD PTR [esp+0x2c],esi
10017016:	jg     0x10017081
10017018:	cmp    DWORD PTR [ebp+0x18],ebx
1001701b:	je     0x10017062
1001701d:	lea    eax,[esp+0x3c]
10017021:	push   eax
10017022:	call   DWORD PTR ds:0x10066140
10017028:	xor    eax,eax
1001702a:	mov    DWORD PTR [esp+0x4c],ebx
1001702e:	lea    edi,[esp+0x50]
10017032:	stos   DWORD PTR es:[edi],eax
10017033:	lea    eax,[esp+0x3c]
10017037:	push   eax
10017038:	call   DWORD PTR ds:0x10066140
1001703e:	lea    eax,[esp+0x4c]
10017042:	push   eax
10017043:	lea    eax,[esp+0x40]
10017047:	push   eax
10017048:	call   DWORD PTR ds:0x10066104
1001704e:	lea    eax,[esp+0x20]
10017052:	push   eax
10017053:	lea    eax,[esp+0x50]
10017057:	push   eax
10017058:	call   DWORD PTR ds:0x1006610c
1001705e:	test   eax,eax
10017060:	jge    0x10017081
10017062:	push   DWORD PTR [esp+0x14]
10017066:	call   DWORD PTR ds:0x100660bc
1001706c:	cmp    DWORD PTR [esp+0x14],0x64
10017071:	jae    0x10016e1a
10017077:	add    DWORD PTR [esp+0x14],0x2
1001707c:	jmp    0x10016e1a
10017081:	cmp    esi,0xffffffff
10017084:	je     0x10017187
1001708a:	mov    eax,DWORD PTR [ebp+0xc]
1001708d:	test   eax,eax
1001708f:	je     0x1001709f
10017091:	lea    ecx,[esp+0x26c]
10017098:	push   ecx
10017099:	call   0x100169fc
1001709e:	pop    ecx
1001709f:	mov    eax,DWORD PTR [ebp+0x10]
100170a2:	test   eax,eax
100170a4:	je     0x100170b4
100170a6:	lea    ecx,[esp+0x374]
100170ad:	push   ecx
100170ae:	call   0x100169fc
100170b3:	pop    ecx
100170b4:	mov    eax,DWORD PTR [ebp+0x14]
100170b7:	test   eax,eax
100170b9:	je     0x100170e3
100170bb:	lea    ecx,[esp+0x68c]
100170c2:	push   ecx
100170c3:	call   0x100169fc
100170c8:	pop    ecx
100170c9:	jmp    0x100170e3
100170cb:	push   DWORD PTR [ebp+0x1c]
100170ce:	push   DWORD PTR [ebp+0x18]
100170d1:	push   edi
100170d2:	push   esi
100170d3:	push   DWORD PTR [ebp+0xc]
100170d6:	push   DWORD PTR [ebp+0x8]
100170d9:	call   DWORD PTR ds:0x10080cd8
100170df:	mov    DWORD PTR [esp+0x2c],eax
100170e3:	cmp    DWORD PTR [esp+0x2c],0xffffffff
100170e8:	je     0x10017187
100170ee:	cmp    DWORD PTR [ebp+0x10],0x0
100170f2:	je     0x10017187
100170f8:	cmp    DWORD PTR [esp+0x47c],0x0
10017100:	jbe    0x10017187
10017106:	xor    ebx,ebx
10017108:	cmp    DWORD PTR [esp+0x47c],ebx
1001710f:	je     0x10017187
10017111:	mov    edi,DWORD PTR [ebp+0x10]
10017114:	add    edi,0x4
10017117:	mov    esi,DWORD PTR [edi]
10017119:	lea    eax,[esp+0x47c]
10017120:	push   eax
10017121:	push   esi
10017122:	call   0x10050c8c
10017127:	test   eax,eax
10017129:	je     0x1001717a
1001712b:	push   esi
1001712c:	call   0x10015f31
10017131:	pop    ecx
10017132:	mov    DWORD PTR [esp+0x18],eax
10017136:	test   eax,eax
10017138:	mov    BYTE PTR [esp+0xaa0],0x4
10017140:	je     0x10017171
10017142:	add    eax,0x4
10017145:	push   eax
10017146:	call   DWORD PTR ds:0x100660f0
1001714c:	mov    eax,DWORD PTR [esp+0x18]
10017150:	cmp    BYTE PTR [eax+0x25],0x0
10017154:	jne    0x10017167
10017156:	mov    BYTE PTR [eax+0x24],0x0
1001715a:	mov    esi,DWORD PTR [esp+0x18]
1001715e:	call   0x10016109
10017163:	mov    eax,DWORD PTR [esp+0x18]
10017167:	add    eax,0x4
1001716a:	push   eax
1001716b:	call   DWORD PTR ds:0x100660ec
10017171:	lea    ecx,[esp+0x18]
10017175:	call   0x10015ddd
1001717a:	inc    ebx
1001717b:	add    edi,0x4
1001717e:	cmp    ebx,DWORD PTR [esp+0x47c]
10017185:	jne    0x10017117
10017187:	mov    esi,0x10015ddd
1001718c:	push   esi
1001718d:	push   0x40
1001718f:	push   0x4
10017191:	lea    eax,[esp+0x9a0]
10017198:	push   eax
10017199:	mov    BYTE PTR [esp+0xab0],0x2
100171a1:	call   0x100430f9
100171a6:	push   esi
100171a7:	push   0x40
100171a9:	push   0x4
100171ab:	lea    eax,[esp+0x7a0]
100171b2:	push   eax
100171b3:	mov    BYTE PTR [esp+0xab0],0x1
100171bb:	call   0x100430f9
100171c0:	push   esi
100171c1:	push   0x40
100171c3:	push   0x4
100171c5:	lea    eax,[esp+0x8a0]
100171cc:	push   eax
100171cd:	mov    BYTE PTR [esp+0xab0],0x0
100171d5:	call   0x100430f9
100171da:	lea    ecx,[esp+0x1c]
100171de:	call   0x10015ddd
100171e3:	mov    eax,DWORD PTR [esp+0x2c]
100171e7:	mov    ecx,DWORD PTR [esp+0xa98]
100171ee:	mov    DWORD PTR fs:0x0,ecx
100171f5:	pop    ecx
100171f6:	pop    edi
100171f7:	pop    esi
100171f8:	pop    ebx
100171f9:	mov    esp,ebp
100171fb:	pop    ebp
100171fc:	ret    0x18
100171ff:	and    DWORD PTR [ecx],0x0
10017202:	ret    
10017203:	push   0x14
10017205:	push   0x100751d8
1001720a:	call   0x10046c94
1001720f:	mov    ebx,DWORD PTR [ebp+0x8]
10017212:	or     DWORD PTR [ebp-0x20],0xffffffff
10017216:	xor    esi,esi
10017218:	cmp    DWORD PTR [ebx+0x1c],esi
1001721b:	je     0x100172d6
10017221:	cmp    DWORD PTR [ebx+0x38],esi
10017224:	je     0x10017239
10017226:	mov    eax,DWORD PTR [ebp+0x14]
10017229:	mov    DWORD PTR [eax],esi
1001722b:	mov    eax,DWORD PTR [ebx+0x38]
1001722e:	mov    DWORD PTR [ecx],eax
10017230:	or     DWORD PTR [ebp-0x20],0xffffffff
10017234:	jmp    0x100172d6
10017239:	mov    DWORD PTR [ebp-0x1c],esi
1001723c:	mov    DWORD PTR [ebp-0x4],esi
1001723f:	mov    eax,ebx
10017241:	call   0x1001603f
10017246:	xor    eax,eax
10017248:	mov    DWORD PTR [ebp-0x24],eax
1001724b:	cmp    eax,DWORD PTR [ebp+0x10]
1001724e:	je     0x100172ab
10017250:	mov    ecx,DWORD PTR [ebp+0xc]
10017253:	lea    edi,[ecx+eax*8]
10017256:	mov    eax,DWORD PTR [edi]
10017258:	mov    ecx,DWORD PTR [edi+0x4]
1001725b:	mov    edx,DWORD PTR [ebx+0x1c]
1001725e:	mov    esi,DWORD PTR [edx+0x30]
10017261:	mov    DWORD PTR [esi+0xc],ecx
10017264:	mov    DWORD PTR [esi+0x10],eax
10017267:	mov    BYTE PTR [esi+0x18],0x0
1001726b:	and    DWORD PTR [esi+0x14],0x0
1001726f:	push   DWORD PTR [esi+0x4]
10017272:	call   DWORD PTR ds:0x10066110
10017278:	mov    eax,DWORD PTR [esi+0x8]
1001727b:	push   0xffffffff
1001727d:	push   eax
1001727e:	call   DWORD PTR ds:0x10066084
10017284:	mov    esi,DWORD PTR [esi+0x14]
10017287:	add    DWORD PTR [ebp-0x1c],esi
1001728a:	cmp    esi,DWORD PTR [edi]
1001728c:	jae    0x1001729f
1001728e:	cmp    BYTE PTR [ebx+0x26],0x0
10017292:	je     0x100172a9
10017294:	push   0xc8
10017299:	call   DWORD PTR ds:0x100660bc
1001729f:	inc    DWORD PTR [ebp-0x24]
100172a2:	mov    eax,DWORD PTR [ebp-0x24]
100172a5:	xor    esi,esi
100172a7:	jmp    0x1001724b
100172a9:	xor    esi,esi
100172ab:	cmp    DWORD PTR [ebp-0x1c],esi
100172ae:	jne    0x100172bf
100172b0:	mov    eax,DWORD PTR [ebx+0x20]
100172b3:	cmp    eax,0x1
100172b6:	mov    DWORD PTR [ebp-0x20],0x2746
100172bd:	je     0x100172c2
100172bf:	mov    DWORD PTR [ebp-0x20],esi
100172c2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100172c9:	call   0x100172e2
100172ce:	mov    eax,DWORD PTR [ebp+0x14]
100172d1:	mov    ecx,DWORD PTR [ebp-0x1c]
100172d4:	mov    DWORD PTR [eax],ecx
100172d6:	mov    eax,DWORD PTR [ebp-0x20]
100172d9:	call   0x10046cd9
100172de:	ret    
100172df:	mov    ebx,DWORD PTR [ebp+0x8]
100172e2:	add    ebx,0x4
100172e5:	push   ebx
100172e6:	call   DWORD PTR ds:0x100660ec
100172ec:	ret    
100172ed:	push   0x4
100172ef:	mov    eax,0x1005fbc8
100172f4:	call   0x10059a35
100172f9:	push   DWORD PTR [ebp+0x8]
100172fc:	call   0x10015f31
10017301:	pop    ecx
10017302:	mov    DWORD PTR [ebp-0x10],eax
10017305:	xor    ecx,ecx
10017307:	cmp    DWORD PTR [ebp+0x1c],ecx
1001730a:	mov    DWORD PTR [ebp-0x4],ecx
1001730d:	jne    0x1001732f
1001730f:	cmp    eax,ecx
10017311:	je     0x1001732f
10017313:	cmp    BYTE PTR [eax+0x25],cl
10017316:	je     0x1001732f
10017318:	push   DWORD PTR [ebp+0x14]
1001731b:	mov    ecx,DWORD PTR [ebp+0x28]
1001731e:	push   DWORD PTR [ebp+0x10]
10017321:	push   DWORD PTR [ebp+0xc]
10017324:	push   eax
10017325:	call   0x10017203
1001732a:	add    esp,0x10
1001732d:	jmp    0x10017350
1001732f:	push   DWORD PTR [ebp+0x28]
10017332:	push   DWORD PTR [ebp+0x24]
10017335:	push   DWORD PTR [ebp+0x20]
10017338:	push   DWORD PTR [ebp+0x1c]
1001733b:	push   DWORD PTR [ebp+0x18]
1001733e:	push   DWORD PTR [ebp+0x14]
10017341:	push   DWORD PTR [ebp+0x10]
10017344:	push   DWORD PTR [ebp+0xc]
10017347:	push   DWORD PTR [ebp+0x8]
1001734a:	call   DWORD PTR ds:0x10080cdc
10017350:	lea    ecx,[ebp-0x10]
10017353:	mov    esi,eax
10017355:	call   0x10015ddd
1001735a:	mov    eax,esi
1001735c:	call   0x10059b0d
10017361:	ret    0x24
10017364:	push   0x10
10017366:	mov    eax,0x1006436b
1001736b:	call   0x10059a68
10017370:	push   DWORD PTR [ebp+0x20]
10017373:	mov    edi,DWORD PTR [ebp+0x14]
10017376:	push   DWORD PTR [ebp+0x1c]
10017379:	xor    esi,esi
1001737b:	mov    DWORD PTR [ebp-0x14],esi
1001737e:	push   DWORD PTR [ebp+0x18]
10017381:	push   edi
10017382:	push   DWORD PTR [ebp+0x10]
10017385:	push   DWORD PTR [ebp+0xc]
10017388:	push   DWORD PTR [ebp+0x8]
1001738b:	call   DWORD PTR ds:0x10080cf0
10017391:	xor    ebx,ebx
10017393:	mov    DWORD PTR [ebp+0x1c],eax
10017396:	mov    eax,ds:0x10080c7c
1001739b:	inc    ebx
1001739c:	cmp    eax,ebx
1001739e:	je     0x100173a5
100173a0:	cmp    eax,0x4
100173a3:	jne    0x100173bb
100173a5:	push   esi
100173a6:	push   ebx
100173a7:	push   0x10080e84
100173ac:	call   DWORD PTR ds:0x100660e0
100173b2:	cmp    eax,esi
100173b4:	jne    0x100173bb
100173b6:	call   0x100122ed
100173bb:	mov    DWORD PTR [ebp-0x4],esi
100173be:	call   0x10018578
100173c3:	test   al,al
100173c5:	je     0x100173fe
100173c7:	push   esi
100173c8:	push   0x10080da0
100173cd:	call   DWORD PTR ds:0x100660e4
100173d3:	test   eax,eax
100173d5:	jne    0x100173f8
100173d7:	push   ebx
100173d8:	lea    eax,[ebp+0x18]
100173db:	push   eax
100173dc:	call   0x100349f0
100173e1:	push   ebx
100173e2:	mov    BYTE PTR [ebp-0x4],bl
100173e5:	push   eax
100173e6:	lea    ecx,[ebp-0x1c]
100173e9:	mov    DWORD PTR [ebp-0x14],ebx
100173ec:	call   0x10035ac0
100173f1:	mov    ecx,DWORD PTR [eax]
100173f3:	or     ecx,DWORD PTR [eax+0x4]
100173f6:	jne    0x100173fe
100173f8:	mov    BYTE PTR [ebp+0x23],0x0
100173fc:	jmp    0x10017401
100173fe:	mov    BYTE PTR [ebp+0x23],bl
10017401:	mov    DWORD PTR [ebp-0x4],esi
10017404:	test   BYTE PTR [ebp-0x14],bl
10017407:	je     0x10017412
10017409:	push   DWORD PTR [ebp+0x18]
1001740c:	call   DWORD PTR ds:0x10066070
10017412:	cmp    BYTE PTR [ebp+0x23],0x0
10017416:	jne    0x1001744f
10017418:	mov    esi,DWORD PTR [ebp+0x1c]
1001741b:	or     DWORD PTR [ebp-0x4],0xffffffff
1001741f:	cmp    esi,0xffffffff
10017422:	je     0x10017437
10017424:	cmp    DWORD PTR [ebp+0xc],0x2
10017428:	je     0x10017437
1001742a:	cmp    DWORD PTR [edi+0x58],0x2
1001742e:	je     0x10017437
10017430:	push   esi
10017431:	call   0x10015e19
10017436:	pop    ecx
10017437:	mov    eax,esi
10017439:	jmp    0x10017452
1001743b:	mov    eax,0x1001744f
10017440:	ret    
10017441:	push   0x4
10017443:	call   0x10037980
10017448:	pop    ecx
10017449:	mov    eax,0x1001744f
1001744e:	ret    
1001744f:	mov    eax,DWORD PTR [ebp+0x1c]
10017452:	call   0x10059b0d
10017457:	ret    0x1c
1001745a:	push   ebp
1001745b:	mov    ebp,esp
1001745d:	pop    ebp
1001745e:	jmp    DWORD PTR ds:0x10080ce8
10017464:	push   ebp
10017465:	mov    ebp,esp
10017467:	and    esp,0xfffffff8
1001746a:	push   esi
1001746b:	push   edi
1001746c:	push   0x1006f84c
10017471:	push   0xc
10017473:	push   0x1006f87c
10017478:	call   0x10004258
1001747d:	mov    esi,DWORD PTR ds:0x100663e0
10017483:	add    esp,0xc
10017486:	push   eax
10017487:	call   esi
10017489:	mov    edi,DWORD PTR ds:0x100663a8
1001748f:	push   eax
10017490:	call   edi
10017492:	cmp    ebx,eax
10017494:	jb     0x100174b8
10017496:	push   0x1006f88c
1001749b:	push   0xc
1001749d:	push   0x1006f8b8
100174a2:	call   0x10004258
100174a7:	add    esp,0xc
100174aa:	push   eax
100174ab:	call   esi
100174ad:	push   eax
100174ae:	call   edi
100174b0:	cmp    ebx,eax
100174b2:	jbe    0x10017716
100174b8:	push   0x7b90f9ac
100174bd:	push   0x7606ae4
100174c2:	push   0x1006f8c8
100174c7:	call   0x10004246
100174cc:	pop    ecx
100174cd:	pop    ecx
100174ce:	push   eax
100174cf:	call   0x10004246
100174d4:	push   eax
100174d5:	push   0xc
100174d7:	push   0x1006f8fc
100174dc:	call   0x10004258
100174e1:	add    esp,0x14
100174e4:	push   eax
100174e5:	call   esi
100174e7:	push   eax
100174e8:	call   edi
100174ea:	cmp    ebx,eax
100174ec:	jb     0x10017510
100174ee:	push   0x1006f90c
100174f3:	push   0xc
100174f5:	push   0x1006f940
100174fa:	call   0x10004258
100174ff:	add    esp,0xc
10017502:	push   eax
10017503:	call   esi
10017505:	push   eax
10017506:	call   edi
10017508:	cmp    ebx,eax
1001750a:	jbe    0x10017716
10017510:	push   0x1006f950
10017515:	push   0xd
10017517:	push   0x1006f98c
1001751c:	call   0x10004258
10017521:	add    esp,0xc
10017524:	push   eax
10017525:	call   esi
10017527:	push   eax
10017528:	call   edi
1001752a:	cmp    ebx,eax
1001752c:	jb     0x10017568
1001752e:	push   0x445d70c6
10017533:	push   0xff28128
10017538:	push   0x1006f99c
1001753d:	call   0x10004246
10017542:	pop    ecx
10017543:	pop    ecx
10017544:	push   eax
10017545:	call   0x10004246
1001754a:	push   eax
1001754b:	push   0xd
1001754d:	push   0x1006f9cc
10017552:	call   0x10004258
10017557:	add    esp,0x14
1001755a:	push   eax
1001755b:	call   esi
1001755d:	push   eax
1001755e:	call   edi
10017560:	cmp    ebx,eax
10017562:	jbe    0x10017716
10017568:	push   0x7a9f0c5c
1001756d:	push   0x6fddf7bc
10017572:	push   0x1006f9dc
10017577:	call   0x10004246
1001757c:	pop    ecx
1001757d:	pop    ecx
1001757e:	push   eax
1001757f:	call   0x10004246
10017584:	push   eax
10017585:	push   0xc
10017587:	push   0x1006fa18
1001758c:	call   0x10004258
10017591:	add    esp,0x14
10017594:	push   eax
10017595:	call   esi
10017597:	push   eax
10017598:	call   edi
1001759a:	cmp    ebx,eax
1001759c:	jb     0x100175e5
1001759e:	push   0x6b8f79ea
100175a3:	push   0x4aa860dc
100175a8:	push   0xa935818
100175ad:	push   0x1006fa28
100175b2:	call   0x10004246
100175b7:	pop    ecx
100175b8:	pop    ecx
100175b9:	push   eax
100175ba:	call   0x10004246
100175bf:	pop    ecx
100175c0:	pop    ecx
100175c1:	push   eax
100175c2:	call   0x10004246
100175c7:	push   eax
100175c8:	push   0xc
100175ca:	push   0x1006fa50
100175cf:	call   0x10004258
100175d4:	add    esp,0x14
100175d7:	push   eax
100175d8:	call   esi
100175da:	push   eax
100175db:	call   edi
100175dd:	cmp    ebx,eax
100175df:	jbe    0x10017716
100175e5:	push   0x4d9acb56
100175ea:	push   0x1006fa60
100175ef:	call   0x10004246
100175f4:	push   eax
100175f5:	push   0xe
100175f7:	push   0x1006fa8c
100175fc:	call   0x10004258
10017601:	add    esp,0x14
10017604:	push   eax
10017605:	call   esi
10017607:	push   eax
10017608:	call   edi
1001760a:	cmp    ebx,eax
1001760c:	jb     0x10017630
1001760e:	push   0x1006fa9c
10017613:	push   0xe
10017615:	push   0x1006fac4
1001761a:	call   0x10004258
1001761f:	add    esp,0xc
10017622:	push   eax
10017623:	call   esi
10017625:	push   eax
10017626:	call   edi
10017628:	cmp    ebx,eax
1001762a:	jbe    0x10017716
10017630:	push   0x1006fad4
10017635:	push   0xc
10017637:	push   0x1006fb04
1001763c:	call   0x10004258
10017641:	add    esp,0xc
10017644:	push   eax
10017645:	call   esi
10017647:	push   eax
10017648:	call   edi
1001764a:	cmp    ebx,eax
1001764c:	jb     0x10017670
1001764e:	push   0x1006fb14
10017653:	push   0xc
10017655:	push   0x1006fb38
1001765a:	call   0x10004258
1001765f:	add    esp,0xc
10017662:	push   eax
10017663:	call   esi
10017665:	push   eax
10017666:	call   edi
10017668:	cmp    ebx,eax
1001766a:	jbe    0x10017716
10017670:	push   0x432e3bd0
10017675:	push   0x1006fb48
1001767a:	call   0x10004246
1001767f:	push   eax
10017680:	push   0xc
10017682:	push   0x1006fb84
10017687:	call   0x10004258
1001768c:	add    esp,0x14
1001768f:	push   eax
10017690:	call   esi
10017692:	push   eax
10017693:	call   edi
10017695:	cmp    ebx,eax
10017697:	jb     0x100176c2
10017699:	push   0x5cce0e14
1001769e:	push   0x1006fb98
100176a3:	call   0x10004246
100176a8:	push   eax
100176a9:	push   0xc
100176ab:	push   0x1006fbd8
100176b0:	call   0x10004258
100176b5:	add    esp,0x14
100176b8:	push   eax
100176b9:	call   esi
100176bb:	push   eax
100176bc:	call   edi
100176be:	cmp    ebx,eax
100176c0:	jbe    0x10017716
100176c2:	push   0x41d2713c
100176c7:	push   0x428f7278
100176cc:	push   0x1006fbe8
100176d1:	call   0x10004246
100176d6:	pop    ecx
100176d7:	pop    ecx
100176d8:	push   eax
100176d9:	call   0x10004246
100176de:	push   eax
100176df:	push   0xc
100176e1:	push   0x1006fc10
100176e6:	call   0x10004258
100176eb:	add    esp,0x14
100176ee:	push   eax
100176ef:	call   esi
100176f1:	push   eax
100176f2:	call   edi
100176f4:	cmp    ebx,eax
100176f6:	jb     0x1001771b
100176f8:	push   0x1006fc20
100176fd:	push   0xc
100176ff:	push   0x1006fc58
10017704:	call   0x10004258
10017709:	add    esp,0xc
1001770c:	push   eax
1001770d:	call   esi
1001770f:	push   eax
10017710:	call   edi
10017712:	cmp    ebx,eax
10017714:	ja     0x1001771b
10017716:	xor    eax,eax
10017718:	inc    eax
10017719:	jmp    0x1001771d
1001771b:	xor    eax,eax
1001771d:	pop    edi
1001771e:	pop    esi
1001771f:	mov    esp,ebp
10017721:	pop    ebp
10017722:	ret    
10017723:	mov    eax,DWORD PTR [esp+0x4]
10017727:	mov    ecx,DWORD PTR [eax]
10017729:	push   0x1006d18c
1001772e:	push   0x1006fc68
10017733:	push   eax
10017734:	call   DWORD PTR [ecx+0xc]
10017737:	ret    0x4
1001773a:	mov    eax,DWORD PTR [esi+0x8]
1001773d:	push   0x4
1001773f:	inc    eax
10017740:	push   eax
10017741:	push   DWORD PTR [esi]
10017743:	call   0x100463c3
10017748:	add    esp,0xc
1001774b:	test   eax,eax
1001774d:	jne    0x10017753
1001774f:	xor    eax,eax
10017751:	jmp    0x10017799
10017753:	mov    DWORD PTR [esi],eax
10017755:	mov    eax,DWORD PTR [esi+0x8]
10017758:	push   0x4
1001775a:	inc    eax
1001775b:	push   eax
1001775c:	push   DWORD PTR [esi+0x4]
1001775f:	call   0x100463c3
10017764:	add    esp,0xc
10017767:	test   eax,eax
10017769:	je     0x1001774f
1001776b:	mov    DWORD PTR [esi+0x4],eax
1001776e:	mov    eax,DWORD PTR [esi+0x8]
10017771:	mov    ecx,eax
10017773:	mov    eax,DWORD PTR [esi]
10017775:	shl    ecx,0x2
10017778:	add    eax,ecx
1001777a:	je     0x10017784
1001777c:	mov    edx,DWORD PTR [esp+0x4]
10017780:	mov    edx,DWORD PTR [edx]
10017782:	mov    DWORD PTR [eax],edx
10017784:	mov    eax,DWORD PTR [esi+0x4]
10017787:	add    eax,ecx
10017789:	je     0x10017793
1001778b:	mov    ecx,DWORD PTR [esp+0x8]
1001778f:	mov    ecx,DWORD PTR [ecx]
10017791:	mov    DWORD PTR [eax],ecx
10017793:	inc    DWORD PTR [esi+0x8]
10017796:	xor    eax,eax
10017798:	inc    eax
10017799:	ret    0x8
1001779c:	mov    eax,DWORD PTR [esi]
1001779e:	test   eax,eax
100177a0:	je     0x100177ac
100177a2:	push   eax
100177a3:	call   0x10043508
100177a8:	and    DWORD PTR [esi],0x0
100177ab:	pop    ecx
100177ac:	mov    eax,DWORD PTR [esi+0x4]
100177af:	test   eax,eax
100177b1:	je     0x100177be
100177b3:	push   eax
100177b4:	call   0x10043508
100177b9:	and    DWORD PTR [esi+0x4],0x0
100177bd:	pop    ecx
100177be:	and    DWORD PTR [esi+0x8],0x0
100177c2:	ret    
100177c3:	test   eax,eax
100177c5:	jl     0x100177d3
100177c7:	cmp    eax,DWORD PTR [ecx+0x8]
100177ca:	jge    0x100177d3
100177cc:	mov    ecx,DWORD PTR [ecx+0x4]
100177cf:	lea    eax,[ecx+eax*4]
100177d2:	ret    
100177d3:	push   0x0
100177d5:	push   0x0
100177d7:	push   0x1
100177d9:	push   0xc000008c
100177de:	call   DWORD PTR ds:0x10066128
100177e4:	int3   
100177e5:	push   DWORD PTR [esi]
100177e7:	call   0x100433c0
100177ec:	and    DWORD PTR [esi],0x0
100177ef:	pop    ecx
100177f0:	ret    
100177f1:	lea    ecx,[eax+0x4]
100177f4:	cmp    DWORD PTR [eax],ecx
100177f6:	je     0x100177fd
100177f8:	jmp    0x10017986
100177fd:	ret    
100177fe:	push   ebp
100177ff:	mov    ebp,esp
10017801:	and    esp,0xfffffff8
10017804:	push   ecx
10017805:	push   ecx
10017806:	mov    eax,ds:0x10080e7c
1001780b:	mov    edx,DWORD PTR [eax]
1001780d:	push   esi
1001780e:	push   edi
1001780f:	mov    ecx,0x10080e78
10017814:	push   eax
10017815:	mov    esi,ecx
10017817:	push   esi
10017818:	push   edx
10017819:	push   ecx
1001781a:	lea    edi,[esp+0x18]
1001781e:	call   0x1001798f
10017823:	push   DWORD PTR ds:0x10080e7c
10017829:	call   0x10042e92
1001782e:	and    DWORD PTR ds:0x10080e7c,0x0
10017835:	and    DWORD PTR ds:0x10080e80,0x0
1001783c:	pop    ecx
1001783d:	pop    edi
1001783e:	pop    esi
1001783f:	mov    esp,ebp
10017841:	pop    ebp
10017842:	ret    
10017843:	push   ebp
10017844:	mov    ebp,esp
10017846:	sub    esp,0x14
10017849:	mov    ecx,DWORD PTR ds:0x10080e7c
1001784f:	mov    eax,DWORD PTR [ecx+0x4]
10017852:	cmp    BYTE PTR [eax+0x15],0x0
10017856:	push   ebx
10017857:	push   esi
10017858:	mov    ebx,ecx
1001785a:	mov    BYTE PTR [ebp-0x8],0x1
1001785e:	jne    0x10017881
10017860:	mov    edx,DWORD PTR [ebp+0x8]
10017863:	mov    esi,DWORD PTR [edx]
10017865:	cmp    esi,DWORD PTR [eax+0xc]
10017868:	mov    ebx,eax
1001786a:	setb   BYTE PTR [ebp-0x8]
1001786e:	cmp    BYTE PTR [ebp-0x8],0x0
10017872:	je     0x10017878
10017874:	mov    eax,DWORD PTR [eax]
10017876:	jmp    0x1001787b
10017878:	mov    eax,DWORD PTR [eax+0x8]
1001787b:	cmp    BYTE PTR [eax+0x15],0x0
1001787f:	je     0x10017865
10017881:	cmp    BYTE PTR [ebp-0x8],0x0
10017885:	mov    eax,ebx
10017887:	mov    DWORD PTR [ebp-0xc],eax
1001788a:	mov    DWORD PTR [ebp-0x10],0x10080e78
10017891:	je     0x100178bb
10017893:	cmp    ebx,DWORD PTR [ecx]
10017895:	jne    0x100178b0
10017897:	push   DWORD PTR [ebp+0x8]
1001789a:	push   0x1
1001789c:	lea    eax,[ebp-0x10]
1001789f:	push   eax
100178a0:	call   0x10017a88
100178a5:	mov    ecx,DWORD PTR [eax]
100178a7:	mov    eax,DWORD PTR [eax+0x4]
100178aa:	mov    BYTE PTR [edi+0x8],0x1
100178ae:	jmp    0x100178d2
100178b0:	lea    esi,[ebp-0x10]
100178b3:	call   0x10017be5
100178b8:	mov    eax,DWORD PTR [ebp-0xc]
100178bb:	mov    edx,DWORD PTR [eax+0xc]
100178be:	mov    ecx,DWORD PTR [ebp+0x8]
100178c1:	cmp    edx,DWORD PTR [ecx]
100178c3:	jae    0x100178cb
100178c5:	push   ecx
100178c6:	push   DWORD PTR [ebp-0x8]
100178c9:	jmp    0x1001789c
100178cb:	mov    ecx,DWORD PTR [ebp-0x10]
100178ce:	mov    BYTE PTR [edi+0x8],0x0
100178d2:	pop    esi
100178d3:	mov    DWORD PTR [edi+0x4],eax
100178d6:	mov    DWORD PTR [edi],ecx
100178d8:	mov    eax,edi
100178da:	pop    ebx
100178db:	leave  
100178dc:	ret    0x4
100178df:	push   ebp
100178e0:	mov    ebp,esp
100178e2:	and    esp,0xfffffff8
100178e5:	sub    esp,0x2c
100178e8:	mov    ecx,DWORD PTR ds:0x10080e7c
100178ee:	mov    eax,DWORD PTR [ecx+0x4]
100178f1:	cmp    BYTE PTR [eax+0x15],0x0
100178f5:	push   ebx
100178f6:	push   esi
100178f7:	push   edi
100178f8:	mov    DWORD PTR [esp+0x14],ecx
100178fc:	jne    0x10017916
100178fe:	mov    ecx,DWORD PTR [edx]
10017900:	cmp    ecx,DWORD PTR [eax+0xc]
10017903:	jae    0x1001790d
10017905:	mov    DWORD PTR [esp+0x14],eax
10017909:	mov    eax,DWORD PTR [eax]
1001790b:	jmp    0x10017910
1001790d:	mov    eax,DWORD PTR [eax+0x8]
10017910:	cmp    BYTE PTR [eax+0x15],0x0
10017914:	je     0x10017900
10017916:	push   edx
10017917:	lea    eax,[esp+0x24]
1001791b:	mov    edi,0x10080e78
10017920:	call   0x10017a51
10017925:	mov    ecx,DWORD PTR [eax+0x4]
10017928:	mov    ebx,DWORD PTR [eax]
1001792a:	mov    eax,DWORD PTR [eax+0x4]
1001792d:	and    DWORD PTR [esp+0x10],0x0
10017932:	mov    DWORD PTR [esp+0x2c],ecx
10017936:	mov    ecx,ebx
10017938:	mov    DWORD PTR [esp+0x18],ecx
1001793c:	mov    DWORD PTR [esp+0x1c],eax
10017940:	cmp    DWORD PTR [esp+0x18],0x0
10017945:	je     0x1001794d
10017947:	cmp    DWORD PTR [esp+0x18],edi
1001794b:	je     0x10017952
1001794d:	call   0x100433b0
10017952:	mov    eax,DWORD PTR [esp+0x14]
10017956:	cmp    DWORD PTR [esp+0x1c],eax
1001795a:	je     0x1001796b
1001795c:	inc    DWORD PTR [esp+0x10]
10017960:	lea    esi,[esp+0x18]
10017964:	call   0x10017fe8
10017969:	jmp    0x10017940
1001796b:	push   eax
1001796c:	push   edi
1001796d:	push   DWORD PTR [esp+0x34]
10017971:	lea    edi,[esp+0x2c]
10017975:	push   ebx
10017976:	call   0x1001798f
1001797b:	mov    eax,DWORD PTR [esp+0x10]
1001797f:	pop    edi
10017980:	pop    esi
10017981:	pop    ebx
10017982:	mov    esp,ebp
10017984:	pop    ebp
10017985:	ret    
10017986:	push   DWORD PTR [eax]
10017988:	call   0x10043508
1001798d:	pop    ecx
1001798e:	ret    
1001798f:	push   ebp
10017990:	mov    ebp,esp
10017992:	mov    eax,ds:0x10080e7c
10017997:	sub    esp,0x10
1001799a:	cmp    DWORD PTR [ebp+0x8],0x0
1001799e:	push   ebx
1001799f:	mov    ebx,DWORD PTR [eax]
100179a1:	push   esi
100179a2:	mov    esi,0x10080e78
100179a7:	je     0x100179ae
100179a9:	cmp    DWORD PTR [ebp+0x8],esi
100179ac:	je     0x100179b3
100179ae:	call   0x100433b0
100179b3:	cmp    DWORD PTR [ebp+0xc],ebx
100179b6:	jne    0x10017a0b
100179b8:	cmp    DWORD PTR [ebp+0x10],0x0
100179bc:	mov    ebx,DWORD PTR ds:0x10080e7c
100179c2:	je     0x100179c9
100179c4:	cmp    DWORD PTR [ebp+0x10],esi
100179c7:	je     0x100179ce
100179c9:	call   0x100433b0
100179ce:	cmp    DWORD PTR [ebp+0x14],ebx
100179d1:	jne    0x10017a0b
100179d3:	mov    eax,ds:0x10080e7c
100179d8:	push   DWORD PTR [eax+0x4]
100179db:	mov    ecx,esi
100179dd:	call   0x10017f8c
100179e2:	mov    eax,ds:0x10080e7c
100179e7:	mov    DWORD PTR [eax+0x4],eax
100179ea:	mov    eax,ds:0x10080e7c
100179ef:	and    DWORD PTR ds:0x10080e80,0x0
100179f6:	mov    DWORD PTR [eax],eax
100179f8:	mov    eax,ds:0x10080e7c
100179fd:	mov    DWORD PTR [eax+0x8],eax
10017a00:	mov    eax,ds:0x10080e7c
10017a05:	mov    eax,DWORD PTR [eax]
10017a07:	mov    DWORD PTR [edi],esi
10017a09:	jmp    0x10017a46
10017a0b:	mov    eax,DWORD PTR [ebp+0x8]
10017a0e:	test   eax,eax
10017a10:	je     0x10017a17
10017a12:	cmp    eax,DWORD PTR [ebp+0x10]
10017a15:	je     0x10017a1c
10017a17:	call   0x100433b0
10017a1c:	mov    eax,DWORD PTR [ebp+0xc]
10017a1f:	cmp    eax,DWORD PTR [ebp+0x14]
10017a22:	je     0x10017a41
10017a24:	mov    ebx,DWORD PTR [ebp+0x8]
10017a27:	lea    esi,[ebp+0x8]
10017a2a:	mov    DWORD PTR [ebp-0x4],eax
10017a2d:	call   0x10017fe8
10017a32:	push   DWORD PTR [ebp-0x4]
10017a35:	lea    eax,[ebp-0x10]
10017a38:	push   ebx
10017a39:	push   eax
10017a3a:	call   0x10017c67
10017a3f:	jmp    0x10017a0b
10017a41:	mov    ecx,DWORD PTR [ebp+0x8]
10017a44:	mov    DWORD PTR [edi],ecx
10017a46:	pop    esi
10017a47:	mov    DWORD PTR [edi+0x4],eax
10017a4a:	mov    eax,edi
10017a4c:	pop    ebx
10017a4d:	leave  
10017a4e:	ret    0x10
10017a51:	mov    edx,DWORD PTR ds:0x10080e7c
10017a57:	mov    ecx,DWORD PTR [edx+0x4]
10017a5a:	cmp    BYTE PTR [ecx+0x15],0x0
10017a5e:	jne    0x10017a7c
10017a60:	push   esi
10017a61:	mov    esi,DWORD PTR [esp+0x8]
10017a65:	mov    esi,DWORD PTR [esi]
10017a67:	cmp    DWORD PTR [ecx+0xc],esi
10017a6a:	jae    0x10017a71
10017a6c:	mov    ecx,DWORD PTR [ecx+0x8]
10017a6f:	jmp    0x10017a75
10017a71:	mov    edx,ecx
10017a73:	mov    ecx,DWORD PTR [ecx]
10017a75:	cmp    BYTE PTR [ecx+0x15],0x0
10017a79:	je     0x10017a67
10017a7b:	pop    esi
10017a7c:	mov    DWORD PTR [eax+0x4],edx
10017a7f:	mov    DWORD PTR [eax],0x10080e78
10017a85:	ret    0x4
10017a88:	push   0x48
10017a8a:	mov    eax,0x100605b3
10017a8f:	call   0x10059a35
10017a94:	cmp    DWORD PTR ds:0x10080e80,0x1ffffffe
10017a9e:	jb     0x10017ad2
10017aa0:	push   0x1006d030
10017aa5:	lea    ecx,[ebp-0x2c]
10017aa8:	call   0x100011cd
10017aad:	and    DWORD PTR [ebp-0x4],0x0
10017ab1:	lea    eax,[ebp-0x2c]
10017ab4:	push   eax
10017ab5:	lea    ecx,[ebp-0x54]
10017ab8:	call   0x10001077
10017abd:	push   0x10074da0
10017ac2:	lea    eax,[ebp-0x54]
10017ac5:	push   eax
10017ac6:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10017acd:	call   0x100479b4
10017ad2:	mov    eax,ds:0x10080e7c
10017ad7:	mov    esi,DWORD PTR [ebp+0x10]
10017ada:	push   eax
10017adb:	push   ebx
10017adc:	push   eax
10017add:	call   0x10017f56
10017ae2:	inc    DWORD PTR ds:0x10080e80
10017ae8:	mov    edi,eax
10017aea:	mov    eax,ds:0x10080e7c
10017aef:	cmp    ebx,eax
10017af1:	jne    0x10017b04
10017af3:	mov    DWORD PTR [eax+0x4],edi
10017af6:	mov    eax,ds:0x10080e7c
10017afb:	mov    DWORD PTR [eax],edi
10017afd:	mov    eax,ds:0x10080e7c
10017b02:	jmp    0x10017b26
10017b04:	cmp    BYTE PTR [ebp+0xc],0x0
10017b08:	je     0x10017b19
10017b0a:	mov    DWORD PTR [ebx],edi
10017b0c:	mov    eax,ds:0x10080e7c
10017b11:	cmp    ebx,DWORD PTR [eax]
10017b13:	jne    0x10017b29
10017b15:	mov    DWORD PTR [eax],edi
10017b17:	jmp    0x10017b29
10017b19:	mov    DWORD PTR [ebx+0x8],edi
10017b1c:	mov    eax,ds:0x10080e7c
10017b21:	cmp    ebx,DWORD PTR [eax+0x8]
10017b24:	jne    0x10017b29
10017b26:	mov    DWORD PTR [eax+0x8],edi
10017b29:	mov    esi,edi
10017b2b:	lea    eax,[edi+0x4]
10017b2e:	jmp    0x10017bb9
10017b33:	mov    ecx,DWORD PTR [eax]
10017b35:	mov    edx,DWORD PTR [ecx+0x4]
10017b38:	cmp    ecx,DWORD PTR [edx]
10017b3a:	jne    0x10017b6f
10017b3c:	mov    edx,DWORD PTR [edx+0x8]
10017b3f:	cmp    BYTE PTR [edx+0x14],0x0
10017b43:	je     0x10017b77
10017b45:	cmp    esi,DWORD PTR [ecx+0x8]
10017b48:	jne    0x10017b51
10017b4a:	mov    esi,ecx
10017b4c:	call   0x10017eda
10017b51:	mov    eax,DWORD PTR [esi+0x4]
10017b54:	mov    BYTE PTR [eax+0x14],0x1
10017b58:	mov    eax,DWORD PTR [esi+0x4]
10017b5b:	mov    eax,DWORD PTR [eax+0x4]
10017b5e:	mov    BYTE PTR [eax+0x14],0x0
10017b62:	mov    eax,DWORD PTR [esi+0x4]
10017b65:	mov    ecx,DWORD PTR [eax+0x4]
10017b68:	call   0x10017f17
10017b6d:	jmp    0x10017bb6
10017b6f:	mov    edx,DWORD PTR [edx]
10017b71:	cmp    BYTE PTR [edx+0x14],0x0
10017b75:	jne    0x10017b8f
10017b77:	mov    BYTE PTR [ecx+0x14],0x1
10017b7b:	mov    BYTE PTR [edx+0x14],0x1
10017b7f:	mov    ecx,DWORD PTR [eax]
10017b81:	mov    ecx,DWORD PTR [ecx+0x4]
10017b84:	mov    BYTE PTR [ecx+0x14],0x0
10017b88:	mov    eax,DWORD PTR [eax]
10017b8a:	mov    esi,DWORD PTR [eax+0x4]
10017b8d:	jmp    0x10017bb6
10017b8f:	cmp    esi,DWORD PTR [ecx]
10017b91:	jne    0x10017b9a
10017b93:	mov    esi,ecx
10017b95:	call   0x10017f17
10017b9a:	mov    eax,DWORD PTR [esi+0x4]
10017b9d:	mov    BYTE PTR [eax+0x14],0x1
10017ba1:	mov    eax,DWORD PTR [esi+0x4]
10017ba4:	mov    eax,DWORD PTR [eax+0x4]
10017ba7:	mov    BYTE PTR [eax+0x14],0x0
10017bab:	mov    eax,DWORD PTR [esi+0x4]
10017bae:	mov    ecx,DWORD PTR [eax+0x4]
10017bb1:	call   0x10017eda
10017bb6:	lea    eax,[esi+0x4]
10017bb9:	mov    ecx,DWORD PTR [eax]
10017bbb:	cmp    BYTE PTR [ecx+0x14],0x0
10017bbf:	je     0x10017b33
10017bc5:	mov    eax,ds:0x10080e7c
10017bca:	mov    eax,DWORD PTR [eax+0x4]
10017bcd:	mov    BYTE PTR [eax+0x14],0x1
10017bd1:	mov    eax,DWORD PTR [ebp+0x8]
10017bd4:	mov    DWORD PTR [eax+0x4],edi
10017bd7:	mov    DWORD PTR [eax],0x10080e78
10017bdd:	call   0x10059b0d
10017be2:	ret    0xc
10017be5:	push   ebx
10017be6:	xor    ebx,ebx
10017be8:	cmp    DWORD PTR [esi],ebx
10017bea:	jne    0x10017bf1
10017bec:	call   0x100433b0
10017bf1:	mov    eax,DWORD PTR [esi+0x4]
10017bf4:	cmp    BYTE PTR [eax+0x15],bl
10017bf7:	je     0x10017c06
10017bf9:	mov    eax,DWORD PTR [eax+0x8]
10017bfc:	mov    DWORD PTR [esi+0x4],eax
10017bff:	cmp    BYTE PTR [eax+0x15],bl
10017c02:	je     0x10017c42
10017c04:	jmp    0x10017c38
10017c06:	mov    ecx,DWORD PTR [eax]
10017c08:	cmp    BYTE PTR [ecx+0x15],bl
10017c0b:	jne    0x10017c28
10017c0d:	jmp    0x10017c11
10017c0f:	mov    ecx,eax
10017c11:	mov    eax,DWORD PTR [ecx+0x8]
10017c14:	cmp    BYTE PTR [eax+0x15],bl
10017c17:	je     0x10017c0f
10017c19:	mov    DWORD PTR [esi+0x4],ecx
10017c1c:	jmp    0x10017c42
10017c1e:	mov    ecx,DWORD PTR [esi+0x4]
10017c21:	cmp    ecx,DWORD PTR [eax]
10017c23:	jne    0x10017c30
10017c25:	mov    DWORD PTR [esi+0x4],eax
10017c28:	mov    eax,DWORD PTR [eax+0x4]
10017c2b:	cmp    BYTE PTR [eax+0x15],bl
10017c2e:	je     0x10017c1e
10017c30:	mov    ecx,DWORD PTR [esi+0x4]
10017c33:	cmp    BYTE PTR [ecx+0x15],bl
10017c36:	je     0x10017c3f
10017c38:	call   0x100433b0
10017c3d:	jmp    0x10017c42
10017c3f:	mov    DWORD PTR [esi+0x4],eax
10017c42:	mov    eax,esi
10017c44:	pop    ebx
10017c45:	ret    
10017c46:	push   DWORD PTR [esp+0x8]
10017c4a:	call   0x10044f8d
10017c4f:	test   eax,eax
10017c51:	pop    ecx
10017c52:	jne    0x10017c5e
10017c54:	push   0x8007000e
10017c59:	call   0x10001f45
10017c5e:	mov    ecx,DWORD PTR [esp+0x4]
10017c62:	mov    DWORD PTR [ecx],eax
10017c64:	ret    0x8
10017c67:	push   0x48
10017c69:	mov    eax,0x100605b3
10017c6e:	call   0x10059a35
10017c73:	mov    ebx,DWORD PTR [ebp+0x10]
10017c76:	cmp    BYTE PTR [ebx+0x15],0x0
10017c7a:	je     0x10017cae
10017c7c:	push   0x1006ccec
10017c81:	lea    ecx,[ebp-0x2c]
10017c84:	call   0x100011cd
10017c89:	and    DWORD PTR [ebp-0x4],0x0
10017c8d:	lea    eax,[ebp-0x2c]
10017c90:	push   eax
10017c91:	lea    ecx,[ebp-0x54]
10017c94:	call   0x10001077
10017c99:	push   0x10074cc0
10017c9e:	lea    eax,[ebp-0x54]
10017ca1:	push   eax
10017ca2:	mov    DWORD PTR [ebp-0x54],0x1006b978
10017ca9:	call   0x100479b4
10017cae:	lea    esi,[ebp+0xc]
10017cb1:	call   0x10017fe8
10017cb6:	mov    ecx,DWORD PTR [ebx]
10017cb8:	cmp    BYTE PTR [ecx+0x15],0x0
10017cbc:	je     0x10017cc3
10017cbe:	mov    edi,DWORD PTR [ebx+0x8]
10017cc1:	jmp    0x10017cda
10017cc3:	mov    eax,DWORD PTR [ebx+0x8]
10017cc6:	cmp    BYTE PTR [eax+0x15],0x0
10017cca:	je     0x10017cd0
10017ccc:	mov    edi,ecx
10017cce:	jmp    0x10017cda
10017cd0:	mov    eax,DWORD PTR [ebp+0x10]
10017cd3:	cmp    eax,ebx
10017cd5:	mov    edi,DWORD PTR [eax+0x8]
10017cd8:	jne    0x10017d52
10017cda:	cmp    BYTE PTR [edi+0x15],0x0
10017cde:	mov    esi,DWORD PTR [ebx+0x4]
10017ce1:	jne    0x10017ce6
10017ce3:	mov    DWORD PTR [edi+0x4],esi
10017ce6:	mov    eax,ds:0x10080e7c
10017ceb:	cmp    DWORD PTR [eax+0x4],ebx
10017cee:	jne    0x10017cf5
10017cf0:	mov    DWORD PTR [eax+0x4],edi
10017cf3:	jmp    0x10017d00
10017cf5:	cmp    DWORD PTR [esi],ebx
10017cf7:	jne    0x10017cfd
10017cf9:	mov    DWORD PTR [esi],edi
10017cfb:	jmp    0x10017d00
10017cfd:	mov    DWORD PTR [esi+0x8],edi
10017d00:	mov    edx,DWORD PTR ds:0x10080e7c
10017d06:	cmp    DWORD PTR [edx],ebx
10017d08:	jne    0x10017d26
10017d0a:	cmp    BYTE PTR [edi+0x15],0x0
10017d0e:	je     0x10017d14
10017d10:	mov    ecx,esi
10017d12:	jmp    0x10017d24
10017d14:	mov    eax,DWORD PTR [edi]
10017d16:	mov    ecx,edi
10017d18:	jmp    0x10017d1e
10017d1a:	mov    ecx,eax
10017d1c:	mov    eax,DWORD PTR [ecx]
10017d1e:	cmp    BYTE PTR [eax+0x15],0x0
10017d22:	je     0x10017d1a
10017d24:	mov    DWORD PTR [edx],ecx
10017d26:	mov    edx,DWORD PTR ds:0x10080e7c
10017d2c:	cmp    DWORD PTR [edx+0x8],ebx
10017d2f:	jne    0x10017dac
10017d31:	cmp    BYTE PTR [edi+0x15],0x0
10017d35:	je     0x10017d3b
10017d37:	mov    ecx,esi
10017d39:	jmp    0x10017d4d
10017d3b:	mov    eax,DWORD PTR [edi+0x8]
10017d3e:	mov    ecx,edi
10017d40:	jmp    0x10017d47
10017d42:	mov    ecx,eax
10017d44:	mov    eax,DWORD PTR [ecx+0x8]
10017d47:	cmp    BYTE PTR [eax+0x15],0x0
10017d4b:	je     0x10017d42
10017d4d:	mov    DWORD PTR [edx+0x8],ecx
10017d50:	jmp    0x10017dac
10017d52:	mov    DWORD PTR [ecx+0x4],eax
10017d55:	mov    ecx,DWORD PTR [ebx]
10017d57:	mov    DWORD PTR [eax],ecx
10017d59:	cmp    eax,DWORD PTR [ebx+0x8]
10017d5c:	jne    0x10017d62
10017d5e:	mov    esi,eax
10017d60:	jmp    0x10017d7c
10017d62:	cmp    BYTE PTR [edi+0x15],0x0
10017d66:	mov    esi,DWORD PTR [eax+0x4]
10017d69:	jne    0x10017d6e
10017d6b:	mov    DWORD PTR [edi+0x4],esi
10017d6e:	mov    DWORD PTR [esi],edi
10017d70:	mov    ecx,DWORD PTR [ebx+0x8]
10017d73:	mov    DWORD PTR [eax+0x8],ecx
10017d76:	mov    ecx,DWORD PTR [ebx+0x8]
10017d79:	mov    DWORD PTR [ecx+0x4],eax
10017d7c:	mov    ecx,DWORD PTR ds:0x10080e7c
10017d82:	cmp    DWORD PTR [ecx+0x4],ebx
10017d85:	jne    0x10017d8c
10017d87:	mov    DWORD PTR [ecx+0x4],eax
10017d8a:	jmp    0x10017d9a
10017d8c:	mov    ecx,DWORD PTR [ebx+0x4]
10017d8f:	cmp    DWORD PTR [ecx],ebx
10017d91:	jne    0x10017d97
10017d93:	mov    DWORD PTR [ecx],eax
10017d95:	jmp    0x10017d9a
10017d97:	mov    DWORD PTR [ecx+0x8],eax
10017d9a:	mov    ecx,DWORD PTR [ebx+0x4]
10017d9d:	mov    DWORD PTR [eax+0x4],ecx
10017da0:	mov    dl,BYTE PTR [ebx+0x14]
10017da3:	mov    cl,BYTE PTR [eax+0x14]
10017da6:	mov    BYTE PTR [eax+0x14],dl
10017da9:	mov    BYTE PTR [ebx+0x14],cl
10017dac:	cmp    BYTE PTR [ebx+0x14],0x1
10017db0:	jne    0x10017eae
10017db6:	jmp    0x10017e69
10017dbb:	cmp    BYTE PTR [edi+0x14],0x1
10017dbf:	jne    0x10017eaa
10017dc5:	mov    ecx,DWORD PTR [esi]
10017dc7:	cmp    edi,ecx
10017dc9:	jne    0x10017e32
10017dcb:	mov    ecx,DWORD PTR [esi+0x8]
10017dce:	cmp    BYTE PTR [ecx+0x14],0x0
10017dd2:	jne    0x10017de6
10017dd4:	mov    BYTE PTR [ecx+0x14],0x1
10017dd8:	mov    ecx,esi
10017dda:	mov    BYTE PTR [esi+0x14],0x0
10017dde:	call   0x10017eda
10017de3:	mov    ecx,DWORD PTR [esi+0x8]
10017de6:	cmp    BYTE PTR [ecx+0x15],0x0
10017dea:	jne    0x10017e64
10017dec:	mov    eax,DWORD PTR [ecx]
10017dee:	cmp    BYTE PTR [eax+0x14],0x1
10017df2:	jne    0x10017dfd
10017df4:	mov    eax,DWORD PTR [ecx+0x8]
10017df7:	cmp    BYTE PTR [eax+0x14],0x1
10017dfb:	je     0x10017e60
10017dfd:	mov    eax,DWORD PTR [ecx+0x8]
10017e00:	cmp    BYTE PTR [eax+0x14],0x1
10017e04:	jne    0x10017e18
10017e06:	mov    eax,DWORD PTR [ecx]
10017e08:	mov    BYTE PTR [eax+0x14],0x1
10017e0c:	mov    BYTE PTR [ecx+0x14],0x0
10017e10:	call   0x10017f17
10017e15:	mov    ecx,DWORD PTR [esi+0x8]
10017e18:	mov    al,BYTE PTR [esi+0x14]
10017e1b:	mov    BYTE PTR [ecx+0x14],al
10017e1e:	mov    BYTE PTR [esi+0x14],0x1
10017e22:	mov    eax,DWORD PTR [ecx+0x8]
10017e25:	mov    ecx,esi
10017e27:	mov    BYTE PTR [eax+0x14],0x1
10017e2b:	call   0x10017eda
10017e30:	jmp    0x10017eaa
10017e32:	cmp    BYTE PTR [ecx+0x14],0x0
10017e36:	jne    0x10017e49
10017e38:	mov    BYTE PTR [ecx+0x14],0x1
10017e3c:	mov    ecx,esi
10017e3e:	mov    BYTE PTR [esi+0x14],0x0
10017e42:	call   0x10017f17
10017e47:	mov    ecx,DWORD PTR [esi]
10017e49:	cmp    BYTE PTR [ecx+0x15],0x0
10017e4d:	jne    0x10017e64
10017e4f:	mov    eax,DWORD PTR [ecx+0x8]
10017e52:	cmp    BYTE PTR [eax+0x14],0x1
10017e56:	jne    0x10017e79
10017e58:	mov    eax,DWORD PTR [ecx]
10017e5a:	cmp    BYTE PTR [eax+0x14],0x1
10017e5e:	jne    0x10017e79
10017e60:	mov    BYTE PTR [ecx+0x14],0x0
10017e64:	mov    edi,esi
10017e66:	mov    esi,DWORD PTR [esi+0x4]
10017e69:	mov    eax,ds:0x10080e7c
10017e6e:	cmp    edi,DWORD PTR [eax+0x4]
10017e71:	jne    0x10017dbb
10017e77:	jmp    0x10017eaa
10017e79:	mov    eax,DWORD PTR [ecx]
10017e7b:	cmp    BYTE PTR [eax+0x14],0x1
10017e7f:	jne    0x10017e93
10017e81:	mov    eax,DWORD PTR [ecx+0x8]
10017e84:	mov    BYTE PTR [eax+0x14],0x1
10017e88:	mov    BYTE PTR [ecx+0x14],0x0
10017e8c:	call   0x10017eda
10017e91:	mov    ecx,DWORD PTR [esi]
10017e93:	mov    al,BYTE PTR [esi+0x14]
10017e96:	mov    BYTE PTR [ecx+0x14],al
10017e99:	mov    BYTE PTR [esi+0x14],0x1
10017e9d:	mov    eax,DWORD PTR [ecx]
10017e9f:	mov    ecx,esi
10017ea1:	mov    BYTE PTR [eax+0x14],0x1
10017ea5:	call   0x10017f17
10017eaa:	mov    BYTE PTR [edi+0x14],0x1
10017eae:	push   ebx
10017eaf:	call   0x10042e92
10017eb4:	cmp    DWORD PTR ds:0x10080e80,0x0
10017ebb:	pop    ecx
10017ebc:	jbe    0x10017ec4
10017ebe:	dec    DWORD PTR ds:0x10080e80
10017ec4:	mov    ecx,DWORD PTR [ebp+0xc]
10017ec7:	mov    eax,DWORD PTR [ebp+0x8]
10017eca:	mov    DWORD PTR [eax],ecx
10017ecc:	mov    ecx,DWORD PTR [ebp+0x10]
10017ecf:	mov    DWORD PTR [eax+0x4],ecx
10017ed2:	call   0x10059b0d
10017ed7:	ret    0xc
10017eda:	mov    eax,DWORD PTR [ecx+0x8]
10017edd:	mov    edx,DWORD PTR [eax]
10017edf:	mov    DWORD PTR [ecx+0x8],edx
10017ee2:	mov    edx,DWORD PTR [eax]
10017ee4:	cmp    BYTE PTR [edx+0x15],0x0
10017ee8:	jne    0x10017eed
10017eea:	mov    DWORD PTR [edx+0x4],ecx
10017eed:	mov    edx,DWORD PTR [ecx+0x4]
10017ef0:	mov    DWORD PTR [eax+0x4],edx
10017ef3:	mov    edx,DWORD PTR ds:0x10080e7c
10017ef9:	cmp    ecx,DWORD PTR [edx+0x4]
10017efc:	jne    0x10017f03
10017efe:	mov    DWORD PTR [edx+0x4],eax
10017f01:	jmp    0x10017f11
10017f03:	mov    edx,DWORD PTR [ecx+0x4]
10017f06:	cmp    ecx,DWORD PTR [edx]
10017f08:	jne    0x10017f0e
10017f0a:	mov    DWORD PTR [edx],eax
10017f0c:	jmp    0x10017f11
10017f0e:	mov    DWORD PTR [edx+0x8],eax
10017f11:	mov    DWORD PTR [eax],ecx
10017f13:	mov    DWORD PTR [ecx+0x4],eax
10017f16:	ret    
10017f17:	mov    eax,DWORD PTR [ecx]
10017f19:	mov    edx,DWORD PTR [eax+0x8]
10017f1c:	mov    DWORD PTR [ecx],edx
10017f1e:	mov    edx,DWORD PTR [eax+0x8]
10017f21:	cmp    BYTE PTR [edx+0x15],0x0
10017f25:	jne    0x10017f2a
10017f27:	mov    DWORD PTR [edx+0x4],ecx
10017f2a:	mov    edx,DWORD PTR [ecx+0x4]
10017f2d:	mov    DWORD PTR [eax+0x4],edx
10017f30:	mov    edx,DWORD PTR ds:0x10080e7c
10017f36:	cmp    ecx,DWORD PTR [edx+0x4]
10017f39:	jne    0x10017f40
10017f3b:	mov    DWORD PTR [edx+0x4],eax
10017f3e:	jmp    0x10017f4f
10017f40:	mov    edx,DWORD PTR [ecx+0x4]
10017f43:	cmp    ecx,DWORD PTR [edx+0x8]
10017f46:	jne    0x10017f4d
10017f48:	mov    DWORD PTR [edx+0x8],eax
10017f4b:	jmp    0x10017f4f
10017f4d:	mov    DWORD PTR [edx],eax
10017f4f:	mov    DWORD PTR [eax+0x8],ecx
10017f52:	mov    DWORD PTR [ecx+0x4],eax
10017f55:	ret    
10017f56:	push   0x18
10017f58:	call   0x1004349e
10017f5d:	test   eax,eax
10017f5f:	pop    ecx
10017f60:	je     0x10017f89
10017f62:	mov    ecx,DWORD PTR [esp+0x4]
10017f66:	mov    DWORD PTR [eax],ecx
10017f68:	mov    ecx,DWORD PTR [esp+0x8]
10017f6c:	mov    DWORD PTR [eax+0x4],ecx
10017f6f:	mov    ecx,DWORD PTR [esp+0xc]
10017f73:	mov    DWORD PTR [eax+0x8],ecx
10017f76:	mov    ecx,DWORD PTR [esi]
10017f78:	mov    DWORD PTR [eax+0xc],ecx
10017f7b:	mov    ecx,DWORD PTR [esi+0x4]
10017f7e:	mov    DWORD PTR [eax+0x10],ecx
10017f81:	mov    BYTE PTR [eax+0x14],0x0
10017f85:	mov    BYTE PTR [eax+0x15],0x0
10017f89:	ret    0xc
10017f8c:	push   ebx
10017f8d:	push   esi
10017f8e:	push   edi
10017f8f:	mov    edi,DWORD PTR [esp+0x10]
10017f93:	cmp    BYTE PTR [edi+0x15],0x0
10017f97:	mov    ebx,ecx
10017f99:	mov    esi,edi
10017f9b:	jne    0x10017fb8
10017f9d:	push   DWORD PTR [esi+0x8]
10017fa0:	mov    ecx,ebx
10017fa2:	call   0x10017f8c
10017fa7:	mov    esi,DWORD PTR [esi]
10017fa9:	push   edi
10017faa:	call   0x10042e92
10017faf:	cmp    BYTE PTR [esi+0x15],0x0
10017fb3:	pop    ecx
10017fb4:	mov    edi,esi
10017fb6:	je     0x10017f9d
10017fb8:	pop    edi
10017fb9:	pop    esi
10017fba:	pop    ebx
10017fbb:	ret    0x4
10017fbe:	push   0x18
10017fc0:	call   0x1004349e
10017fc5:	xor    edx,edx
10017fc7:	cmp    eax,edx
10017fc9:	pop    ecx
10017fca:	je     0x10017fce
10017fcc:	mov    DWORD PTR [eax],edx
10017fce:	lea    ecx,[eax+0x4]
10017fd1:	cmp    ecx,edx
10017fd3:	je     0x10017fd7
10017fd5:	mov    DWORD PTR [ecx],edx
10017fd7:	lea    ecx,[eax+0x8]
10017fda:	cmp    ecx,edx
10017fdc:	je     0x10017fe0
10017fde:	mov    DWORD PTR [ecx],edx
10017fe0:	mov    BYTE PTR [eax+0x14],0x1
10017fe4:	mov    BYTE PTR [eax+0x15],dl
10017fe7:	ret    
10017fe8:	push   ebx
10017fe9:	xor    ebx,ebx
10017feb:	cmp    DWORD PTR [esi],ebx
10017fed:	jne    0x10017ff4
10017fef:	call   0x100433b0
10017ff4:	mov    eax,DWORD PTR [esi+0x4]
10017ff7:	cmp    BYTE PTR [eax+0x15],bl
10017ffa:	je     0x10018003
10017ffc:	call   0x100433b0
10018001:	jmp    0x10018031
10018003:	mov    ecx,DWORD PTR [eax+0x8]
10018006:	cmp    BYTE PTR [ecx+0x15],bl
10018009:	jne    0x10018026
1001800b:	jmp    0x1001800f
1001800d:	mov    ecx,eax
1001800f:	mov    eax,DWORD PTR [ecx]
10018011:	cmp    BYTE PTR [eax+0x15],bl
10018014:	je     0x1001800d
10018016:	mov    DWORD PTR [esi+0x4],ecx
10018019:	jmp    0x10018031
1001801b:	mov    ecx,DWORD PTR [esi+0x4]
1001801e:	cmp    ecx,DWORD PTR [eax+0x8]
10018021:	jne    0x1001802e
10018023:	mov    DWORD PTR [esi+0x4],eax
10018026:	mov    eax,DWORD PTR [eax+0x4]
10018029:	cmp    BYTE PTR [eax+0x15],bl
1001802c:	je     0x1001801b
1001802e:	mov    DWORD PTR [esi+0x4],eax
10018031:	mov    eax,esi
10018033:	pop    ebx
10018034:	ret    
10018035:	push   ebp
10018036:	mov    ebp,esp
10018038:	push   ecx
10018039:	push   DWORD PTR [ebp+0xc]
1001803c:	lea    eax,[ebp-0x4]
1001803f:	push   DWORD PTR [ebp+0x8]
10018042:	push   eax
10018043:	call   0x100142ec
10018048:	add    esp,0xc
1001804b:	test   eax,eax
1001804d:	jge    0x10018055
1001804f:	push   eax
10018050:	call   0x10001f45
10018055:	mov    eax,DWORD PTR [ebp-0x4]
10018058:	leave  
10018059:	ret    
1001805a:	push   ecx
1001805b:	call   0x10018eed
10018060:	pop    ecx
10018061:	ret    
10018062:	push   0x28
10018064:	mov    eax,0x10061dc8
10018069:	call   0x10059a35
1001806e:	mov    esi,DWORD PTR [ebp+0x8]
10018071:	xor    ebx,ebx
10018073:	mov    DWORD PTR [ebp-0x10],ebx
10018076:	mov    DWORD PTR [esi+0x4],ebx
10018079:	mov    DWORD PTR [esi+0x8],ebx
1001807c:	mov    DWORD PTR [esi+0xc],ebx
1001807f:	xor    edi,edi
10018081:	inc    edi
10018082:	push   edi
10018083:	push   0x45865b66
10018088:	mov    DWORD PTR [ebp-0x4],ebx
1001808b:	push   0x1006fcc4
10018090:	mov    DWORD PTR [ebp-0x10],edi
10018093:	call   0x10004246
10018098:	push   0x75842d88
1001809d:	push   eax
1001809e:	call   0x10004246
100180a3:	push   0x165cecbe
100180a8:	push   eax
100180a9:	call   0x10004246
100180ae:	push   eax
100180af:	push   0x13
100180b1:	push   0x1006fcf4
100180b6:	call   0x10004258
100180bb:	pop    ecx
100180bc:	pop    ecx
100180bd:	mov    ecx,esp
100180bf:	mov    DWORD PTR [ebp-0x14],esp
100180c2:	push   eax
100180c3:	call   0x100011cd
100180c8:	lea    ecx,[ebp-0x34]
100180cb:	call   0x10002826
100180d0:	push   eax
100180d1:	mov    DWORD PTR [ebp-0x4],edi
100180d4:	call   0x100041c0
100180d9:	push   ebx
100180da:	push   edi
100180db:	lea    ecx,[ebp-0x34]
100180de:	mov    BYTE PTR [ebp-0x4],bl
100180e1:	call   0x100012f0
100180e6:	push   edi
100180e7:	push   0x36a35038
100180ec:	push   0x1006fd08
100180f1:	call   0x10004246
100180f6:	push   0x3db7f038
100180fb:	push   eax
100180fc:	call   0x10004246
10018101:	push   0x1167ea44
10018106:	push   eax
10018107:	call   0x10004246
1001810c:	push   0x60ae9104
10018111:	push   eax
10018112:	call   0x10004246
10018117:	push   eax
10018118:	push   0x12
1001811a:	push   0x1006fd48
1001811f:	call   0x10004258
10018124:	add    esp,0x10
10018127:	mov    ecx,esp
10018129:	mov    DWORD PTR [ebp-0x14],esp
1001812c:	push   eax
1001812d:	call   0x100011cd
10018132:	lea    ecx,[ebp-0x34]
10018135:	call   0x10002826
1001813a:	push   eax
1001813b:	mov    DWORD PTR [ebp-0x4],0x2
10018142:	call   0x100041c0
10018147:	push   ebx
10018148:	push   edi
10018149:	lea    ecx,[ebp-0x34]
1001814c:	mov    BYTE PTR [ebp-0x4],bl
1001814f:	call   0x100012f0
10018154:	push   edi
10018155:	push   0x66d854b8
1001815a:	push   0x1006fd5c
1001815f:	call   0x10004246
10018164:	push   0x36cb24e8
10018169:	push   eax
1001816a:	call   0x10004246
1001816f:	push   0x6d792c7c
10018174:	push   eax
10018175:	call   0x10004246
1001817a:	push   eax
1001817b:	push   0x14
1001817d:	push   0x1006fd9c
10018182:	call   0x10004258
10018187:	pop    ecx
10018188:	pop    ecx
10018189:	mov    ecx,esp
1001818b:	mov    DWORD PTR [ebp-0x14],esp
1001818e:	push   eax
1001818f:	call   0x100011cd
10018194:	lea    ecx,[ebp-0x34]
10018197:	call   0x10002826
1001819c:	push   eax
1001819d:	mov    DWORD PTR [ebp-0x4],0x3
100181a4:	call   0x100041c0
100181a9:	push   ebx
100181aa:	push   edi
100181ab:	lea    ecx,[ebp-0x34]
100181ae:	mov    BYTE PTR [ebp-0x4],bl
100181b1:	call   0x100012f0
100181b6:	push   edi
100181b7:	push   0x306a59a2
100181bc:	push   0x1006fdb4
100181c1:	call   0x10004246
100181c6:	push   eax
100181c7:	push   0x15
100181c9:	push   0x1006fde4
100181ce:	call   0x10004258
100181d3:	push   ecx
100181d4:	push   ecx
100181d5:	mov    ecx,esp
100181d7:	mov    DWORD PTR [ebp-0x14],esp
100181da:	push   eax
100181db:	call   0x100011cd
100181e0:	lea    ecx,[ebp-0x34]
100181e3:	call   0x10002826
100181e8:	push   eax
100181e9:	mov    DWORD PTR [ebp-0x4],0x4
100181f0:	call   0x100041c0
100181f5:	push   ebx
100181f6:	push   edi
100181f7:	lea    ecx,[ebp-0x34]
100181fa:	mov    BYTE PTR [ebp-0x4],bl
100181fd:	call   0x100012f0
10018202:	push   edi
10018203:	push   0x228766dc
10018208:	push   0x1006fdfc
1001820d:	call   0x10004246
10018212:	push   eax
10018213:	push   0x15
10018215:	push   0x1006fe20
1001821a:	call   0x10004258
1001821f:	push   ecx
10018220:	push   ecx
10018221:	mov    ecx,esp
10018223:	mov    DWORD PTR [ebp-0x14],esp
10018226:	push   eax
10018227:	call   0x100011cd
1001822c:	lea    ecx,[ebp-0x34]
1001822f:	call   0x10002826
10018234:	push   eax
10018235:	mov    DWORD PTR [ebp-0x4],0x5
1001823c:	call   0x100041c0
10018241:	push   ebx
10018242:	push   edi
10018243:	lea    ecx,[ebp-0x34]
10018246:	mov    BYTE PTR [ebp-0x4],bl
10018249:	call   0x100012f0
1001824e:	push   edi
1001824f:	push   0x74bbb2a
10018254:	push   0x1006fe38
10018259:	call   0x10004246
1001825e:	push   0x61692472
10018263:	push   eax
10018264:	call   0x10004246
10018269:	push   0x7350e972
1001826e:	push   eax
1001826f:	call   0x10004246
10018274:	push   0x44aeb5a8
10018279:	push   eax
1001827a:	call   0x10004246
1001827f:	push   0x78fc32a6
10018284:	push   eax
10018285:	call   0x10004246
1001828a:	push   0x71123686
1001828f:	push   eax
10018290:	call   0x10004246
10018295:	push   eax
10018296:	push   0x13
10018298:	push   0x1006fe64
1001829d:	call   0x10004258
100182a2:	add    esp,0x20
100182a5:	mov    ecx,esp
100182a7:	mov    DWORD PTR [ebp-0x14],esp
100182aa:	push   eax
100182ab:	call   0x100011cd
100182b0:	lea    ecx,[ebp-0x34]
100182b3:	call   0x10002826
100182b8:	push   eax
100182b9:	mov    DWORD PTR [ebp-0x4],0x6
100182c0:	call   0x100041c0
100182c5:	push   ebx
100182c6:	push   edi
100182c7:	lea    ecx,[ebp-0x34]
100182ca:	mov    BYTE PTR [ebp-0x4],bl
100182cd:	call   0x100012f0
100182d2:	push   edi
100182d3:	push   0x3d1dad26
100182d8:	push   0x1006fe78
100182dd:	call   0x10004246
100182e2:	push   0x7a7cc5f6
100182e7:	push   eax
100182e8:	call   0x10004246
100182ed:	push   eax
100182ee:	push   0x12
100182f0:	push   0x1006fea4
100182f5:	call   0x10004258
100182fa:	mov    ecx,esp
100182fc:	mov    DWORD PTR [ebp-0x14],esp
100182ff:	push   eax
10018300:	call   0x100011cd
10018305:	lea    ecx,[ebp-0x34]
10018308:	call   0x10002826
1001830d:	push   eax
1001830e:	mov    DWORD PTR [ebp-0x4],0x7
10018315:	call   0x100041c0
1001831a:	push   ebx
1001831b:	push   edi
1001831c:	lea    ecx,[ebp-0x34]
1001831f:	call   0x100012f0
10018324:	mov    eax,esi
10018326:	call   0x10059b0d
1001832b:	ret    
1001832c:	push   ebp
1001832d:	mov    ebp,esp
1001832f:	push   ecx
10018330:	push   ecx
10018331:	call   0x10033490
10018336:	push   0x10
10018338:	push   edi
10018339:	push   esi
1001833a:	mov    DWORD PTR [ebp-0x4],eax
1001833d:	call   0x10045180
10018342:	add    esp,0xc
10018345:	xor    ecx,ecx
10018347:	xor    eax,eax
10018349:	mov    dl,BYTE PTR [eax+edi*1]
1001834c:	xor    BYTE PTR [ecx+esi*1],dl
1001834f:	inc    ecx
10018350:	inc    eax
10018351:	and    eax,0xf
10018354:	cmp    ecx,0x10
10018357:	jne    0x10018349
10018359:	xor    ecx,ecx
1001835b:	xor    eax,eax
1001835d:	mov    dl,BYTE PTR [ebp+eax*1-0x4]
10018361:	xor    BYTE PTR [ecx+esi*1],dl
10018364:	inc    ecx
10018365:	inc    eax
10018366:	and    eax,0x3
10018369:	cmp    ecx,0x4
1001836c:	jne    0x1001835d
1001836e:	leave  
1001836f:	ret    
10018370:	push   ebp
10018371:	mov    ebp,esp
10018373:	and    esp,0xfffffff8
10018376:	push   0xffffffff
10018378:	push   0x10061d5c
1001837d:	mov    eax,fs:0x0
10018383:	push   eax
10018384:	sub    esp,0xc
10018387:	mov    eax,ds:0x1007e030
1001838c:	xor    eax,esp
1001838e:	push   eax
1001838f:	lea    eax,[esp+0x10]
10018393:	mov    fs:0x0,eax
10018399:	push   0x1
1001839b:	call   0x10043721
100183a0:	pop    ecx
100183a1:	mov    DWORD PTR [esp+0x8],eax
100183a5:	and    DWORD PTR [esp+0x18],0x0
100183aa:	push   0x1
100183ac:	lea    eax,[esp+0x8]
100183b0:	push   eax
100183b1:	call   0x100349f0
100183b6:	mov    BYTE PTR [esp+0x18],0x1
100183bb:	push   DWORD PTR [esp+0x8]
100183bf:	lea    eax,[esp+0x8]
100183c3:	push   0x4
100183c5:	push   eax
100183c6:	xor    ecx,ecx
100183c8:	call   0x100369e0
100183cd:	push   DWORD PTR [esp+0x4]
100183d1:	call   DWORD PTR ds:0x10066070
100183d7:	push   DWORD PTR [esp+0x8]
100183db:	call   0x10042e92
100183e0:	pop    ecx
100183e1:	mov    ecx,DWORD PTR [esp+0x10]
100183e5:	mov    DWORD PTR fs:0x0,ecx
100183ec:	pop    ecx
100183ed:	mov    esp,ebp
100183ef:	pop    ebp
100183f0:	ret    
100183f1:	push   0x3c
100183f3:	mov    eax,0x10063b0c
100183f8:	call   0x10059a35
100183fd:	xor    eax,eax
100183ff:	mov    esi,ecx
10018401:	mov    DWORD PTR [ebp-0x48],eax
10018404:	mov    DWORD PTR [ebp-0x18],esi
10018407:	mov    DWORD PTR [ebp-0x24],eax
1001840a:	mov    DWORD PTR [ebp-0x14],eax
1001840d:	xor    ebx,ebx
1001840f:	inc    ebx
10018410:	mov    DWORD PTR [ebp-0x4],ebx
10018413:	call   0x10004059
10018418:	push   ebx
10018419:	lea    eax,[ebp-0x1c]
1001841c:	push   eax
1001841d:	mov    DWORD PTR [ebp-0x48],ebx
10018420:	call   0x100349f0
10018425:	lea    eax,[ebp-0x24]
10018428:	push   eax
10018429:	push   0x4
1001842b:	lea    eax,[ebp-0x20]
1001842e:	push   eax
1001842f:	lea    eax,[ebp-0x1c]
10018432:	push   eax
10018433:	mov    BYTE PTR [ebp-0x4],0x2
10018437:	call   0x10036b20
1001843c:	push   eax
1001843d:	lea    edi,[ebp-0x14]
10018440:	call   0x10002099
10018445:	push   DWORD PTR [ebp-0x20]
10018448:	call   0x10042e92
1001844d:	xor    esi,esi
1001844f:	cmp    DWORD PTR [ebp-0x14],esi
10018452:	pop    ecx
10018453:	je     0x10018488
10018455:	cmp    DWORD PTR [ebp-0x24],esi
10018458:	je     0x10018488
1001845a:	push   DWORD PTR [ebp-0x24]
1001845d:	lea    esi,[ebp-0x40]
10018460:	push   DWORD PTR [ebp-0x14]
10018463:	call   0x1000406c
10018468:	push   0xffffffff
1001846a:	push   0x0
1001846c:	mov    BYTE PTR [ebp-0x4],0x6
10018470:	mov    ecx,DWORD PTR [ebp-0x18]
10018473:	push   eax
10018474:	call   0x10001241
10018479:	push   0x0
1001847b:	push   ebx
1001847c:	mov    ecx,esi
1001847e:	call   0x100012f0
10018483:	jmp    0x1001855d
10018488:	lea    edi,[ebp-0x34]
1001848b:	call   0x100185ac
10018490:	mov    BYTE PTR [ebp-0x4],0x3
10018494:	cmp    DWORD PTR [ebp-0x30],esi
10018497:	je     0x10018555
1001849d:	mov    eax,DWORD PTR [ebp-0x2c]
100184a0:	sub    eax,DWORD PTR [ebp-0x30]
100184a3:	sar    eax,0x5
100184a6:	je     0x10018555
100184ac:	call   DWORD PTR ds:0x10066118
100184b2:	push   eax
100184b3:	call   0x1004640a
100184b8:	xor    edi,edi
100184ba:	pop    ecx
100184bb:	xor    ebx,ebx
100184bd:	cmp    DWORD PTR [ebp-0x30],0x0
100184c1:	jne    0x100184c7
100184c3:	xor    eax,eax
100184c5:	jmp    0x100184d0
100184c7:	mov    eax,DWORD PTR [ebp-0x2c]
100184ca:	sub    eax,DWORD PTR [ebp-0x30]
100184cd:	sar    eax,0x5
100184d0:	cmp    ebx,eax
100184d2:	je     0x100184e3
100184d4:	push   ebx
100184d5:	lea    esi,[ebp-0x34]
100184d8:	call   0x10009d22
100184dd:	add    edi,DWORD PTR [eax+0x1c]
100184e0:	inc    ebx
100184e1:	jmp    0x100184bd
100184e3:	call   0x10046417
100184e8:	xor    edx,edx
100184ea:	div    edi
100184ec:	xor    edi,edi
100184ee:	xor    ebx,ebx
100184f0:	mov    DWORD PTR [ebp-0x20],edx
100184f3:	xor    eax,eax
100184f5:	cmp    DWORD PTR [ebp-0x30],eax
100184f8:	je     0x10018503
100184fa:	mov    eax,DWORD PTR [ebp-0x2c]
100184fd:	sub    eax,DWORD PTR [ebp-0x30]
10018500:	sar    eax,0x5
10018503:	cmp    ebx,eax
10018505:	je     0x10018535
10018507:	push   ebx
10018508:	lea    esi,[ebp-0x34]
1001850b:	call   0x10009d22
10018510:	add    edi,DWORD PTR [eax+0x1c]
10018513:	cmp    DWORD PTR [ebp-0x20],edi
10018516:	jb     0x1001851b
10018518:	inc    ebx
10018519:	jmp    0x100184f3
1001851b:	push   ebx
1001851c:	lea    esi,[ebp-0x34]
1001851f:	call   0x10009d22
10018524:	mov    esi,DWORD PTR [ebp-0x18]
10018527:	push   0xffffffff
10018529:	push   0x0
1001852b:	push   eax
1001852c:	mov    ecx,esi
1001852e:	call   0x10001241
10018533:	jmp    0x10018538
10018535:	mov    esi,DWORD PTR [ebp-0x18]
10018538:	cmp    DWORD PTR [esi+0x18],0x10
1001853c:	mov    ecx,DWORD PTR [esi+0x14]
1001853f:	jb     0x10018546
10018541:	mov    esi,DWORD PTR [esi+0x4]
10018544:	jmp    0x10018549
10018546:	add    esi,0x4
10018549:	push   esi
1001854a:	push   0x4
1001854c:	lea    eax,[ebp-0x1c]
1001854f:	push   eax
10018550:	call   0x100369e0
10018555:	lea    esi,[ebp-0x34]
10018558:	call   0x10004743
1001855d:	push   DWORD PTR [ebp-0x1c]
10018560:	call   DWORD PTR ds:0x10066070
10018566:	push   DWORD PTR [ebp-0x14]
10018569:	call   0x10042e92
1001856e:	mov    eax,DWORD PTR [ebp-0x18]
10018571:	pop    ecx
10018572:	call   0x10059b0d
10018577:	ret    
10018578:	push   0x3e8
1001857d:	push   DWORD PTR ds:0x10080ec8
10018583:	call   DWORD PTR ds:0x10066084
10018589:	test   eax,eax
1001858b:	je     0x10018590
1001858d:	mov    al,0x1
1001858f:	ret    
10018590:	push   ebx
10018591:	call   0x10018644
10018596:	push   DWORD PTR ds:0x10080ec8
1001859c:	mov    bl,BYTE PTR ds:0x1007f6b0
100185a2:	call   DWORD PTR ds:0x10066094
100185a8:	mov    al,bl
100185aa:	pop    ebx
100185ab:	ret    
100185ac:	push   ebp
100185ad:	mov    ebp,esp
100185af:	and    esp,0xfffffff8
100185b2:	push   0xffffffff
100185b4:	push   0x10063ab8
100185b9:	mov    eax,fs:0x0
100185bf:	push   eax
100185c0:	sub    esp,0x18
100185c3:	push   esi
100185c4:	mov    eax,ds:0x1007e030
100185c9:	xor    eax,esp
100185cb:	push   eax
100185cc:	lea    eax,[esp+0x20]
100185d0:	mov    fs:0x0,eax
100185d6:	and    DWORD PTR [esp+0x8],0x0
100185db:	push   0x3e8
100185e0:	push   DWORD PTR ds:0x10080ec8
100185e6:	call   DWORD PTR ds:0x10066084
100185ec:	test   eax,eax
100185ee:	je     0x100185f9
100185f0:	push   edi
100185f1:	call   0x10018062
100185f6:	pop    ecx
100185f7:	jmp    0x10018631
100185f9:	call   0x10018644
100185fe:	lea    eax,[esp+0xc]
10018602:	push   eax
10018603:	mov    ecx,0x10080eb8
10018608:	call   0x10009c8f
1001860d:	and    DWORD PTR [esp+0x28],0x0
10018612:	push   DWORD PTR ds:0x10080ec8
10018618:	call   DWORD PTR ds:0x10066094
1001861e:	push   edi
1001861f:	lea    ecx,[esp+0x10]
10018623:	call   0x10009c8f
10018628:	lea    esi,[esp+0xc]
1001862c:	call   0x10004743
10018631:	mov    eax,edi
10018633:	mov    ecx,DWORD PTR [esp+0x20]
10018637:	mov    DWORD PTR fs:0x0,ecx
1001863e:	pop    ecx
1001863f:	pop    esi
10018640:	mov    esp,ebp
10018642:	pop    ebp
10018643:	ret    
10018644:	push   0xac
10018649:	mov    eax,0x10063a88
1001864e:	call   0x10059ad4
10018653:	xor    ebx,ebx
10018655:	mov    DWORD PTR [ebp-0x4],ebx
10018658:	mov    DWORD PTR [ebp-0x34],ebx
1001865b:	xor    eax,eax
1001865d:	lea    edi,[ebp-0x30]
10018660:	stos   DWORD PTR es:[edi],eax
10018661:	stos   DWORD PTR es:[edi],eax
10018662:	stos   DWORD PTR es:[edi],eax
10018663:	mov    DWORD PTR [ebp-0x54],ebx
10018666:	mov    DWORD PTR [ebp-0x60],ebx
10018669:	push   0x1
1001866b:	lea    eax,[ebp-0x58]
1001866e:	push   eax
1001866f:	mov    BYTE PTR [ebp-0x4],0x2
10018673:	call   0x100349f0
10018678:	lea    eax,[ebp-0x58]
1001867b:	push   eax
1001867c:	lea    ecx,[ebp-0x34]
1001867f:	mov    BYTE PTR [ebp-0x4],0x3
10018683:	call   0x10036490
10018688:	push   0x2
1001868a:	lea    eax,[ebp-0x58]
1001868d:	push   eax
1001868e:	lea    ecx,[ebp-0x88]
10018694:	call   0x10035ac0
10018699:	mov    ecx,DWORD PTR [eax+0x4]
1001869c:	cmp    ecx,DWORD PTR ds:0x10080d44
100186a2:	ja     0x100186c9
100186a4:	jb     0x100186b0
100186a6:	mov    eax,DWORD PTR [eax]
100186a8:	cmp    eax,DWORD PTR ds:0x10080d40
100186ae:	ja     0x100186c9
100186b0:	push   DWORD PTR [ebp-0x58]
100186b3:	call   DWORD PTR ds:0x10066070
100186b9:	push   ebx
100186ba:	call   0x10042e92
100186bf:	pop    ecx
100186c0:	mov    BYTE PTR [ebp-0x4],bl
100186c3:	push   ebx
100186c4:	jmp    0x1001885a
100186c9:	lea    eax,[ebp-0x5c]
100186cc:	push   eax
100186cd:	push   0x2
100186cf:	lea    eax,[ebp-0x64]
100186d2:	push   eax
100186d3:	lea    eax,[ebp-0x58]
100186d6:	push   eax
100186d7:	call   0x10036b20
100186dc:	push   eax
100186dd:	lea    edi,[ebp-0x54]
100186e0:	call   0x10002099
100186e5:	push   DWORD PTR [ebp-0x64]
100186e8:	call   0x10042e92
100186ed:	cmp    DWORD PTR [ebp-0x54],ebx
100186f0:	pop    ecx
100186f1:	je     0x100186b0
100186f3:	call   0x1002fa00
100186f8:	lea    esi,[ebp-0x24]
100186fb:	lea    edi,[ebp-0x34]
100186fe:	mov    ds:0x10080d40,eax
10018703:	mov    DWORD PTR ds:0x10080d44,edx
10018709:	call   0x1001832c
1001870e:	push   0x1
10018710:	mov    eax,esi
10018712:	mov    esi,DWORD PTR [ebp-0x54]
10018715:	push   eax
10018716:	push   DWORD PTR [ebp-0x5c]
10018719:	lea    eax,[ebp-0x5c]
1001871c:	push   esi
1001871d:	push   eax
1001871e:	lea    edx,[ebp-0x65]
10018721:	lea    ecx,[ebp-0x64]
10018724:	call   0x10039740
10018729:	add    esp,0x14
1001872c:	push   eax
1001872d:	lea    edi,[ebp-0x60]
10018730:	call   0x10002099
10018735:	push   DWORD PTR [ebp-0x5c]
10018738:	call   0x10042e92
1001873d:	mov    edi,DWORD PTR [ebp-0x60]
10018740:	cmp    edi,ebx
10018742:	pop    ecx
10018743:	jne    0x1001875e
10018745:	push   DWORD PTR [ebp-0x58]
10018748:	call   DWORD PTR ds:0x10066070
1001874e:	push   ebx
1001874f:	call   0x10042e92
10018754:	pop    ecx
10018755:	mov    BYTE PTR [ebp-0x4],bl
10018758:	push   esi
10018759:	jmp    0x1001885a
1001875e:	mov    eax,DWORD PTR [ebp-0x64]
10018761:	mov    DWORD PTR [ebp-0x70],eax
10018764:	lea    eax,[ebp-0x74]
10018767:	push   eax
10018768:	mov    DWORD PTR [ebp-0x74],ebx
1001876b:	mov    DWORD PTR [ebp-0x6c],edi
1001876e:	call   0x100377e0
10018773:	cmp    eax,0x1
10018776:	je     0x10018784
10018778:	push   DWORD PTR [ebp-0x58]
1001877b:	call   DWORD PTR ds:0x10066070
10018781:	push   edi
10018782:	jmp    0x1001874f
10018784:	lea    eax,[ebp-0x74]
10018787:	push   eax
10018788:	call   0x100377e0
1001878d:	cmp    eax,ebx
1001878f:	setne  al
10018792:	mov    ds:0x1007f6b0,al
10018797:	lea    eax,[ebp-0x74]
1001879a:	push   eax
1001879b:	call   0x100377e0
100187a0:	cmp    eax,ebx
100187a2:	mov    DWORD PTR [ebp-0x5c],eax
100187a5:	je     0x10018778
100187a7:	mov    DWORD PTR [ebp-0x94],ebx
100187ad:	mov    DWORD PTR [ebp-0x90],ebx
100187b3:	mov    DWORD PTR [ebp-0x8c],ebx
100187b9:	mov    BYTE PTR [ebp-0x4],0x4
100187bd:	xor    edi,edi
100187bf:	cmp    edi,DWORD PTR [ebp-0x5c]
100187c2:	jge    0x1001882c
100187c4:	lea    eax,[ebp-0x74]
100187c7:	push   eax
100187c8:	lea    esi,[ebp-0x50]
100187cb:	call   0x100374a0
100187d0:	lea    eax,[ebp-0x74]
100187d3:	push   eax
100187d4:	mov    BYTE PTR [ebp-0x4],0x5
100187d8:	call   0x100377e0
100187dd:	push   eax
100187de:	sub    esp,0x1c
100187e1:	mov    eax,esi
100187e3:	mov    ecx,esp
100187e5:	mov    DWORD PTR [ebp-0x84],esp
100187eb:	push   eax
100187ec:	call   0x100011a7
100187f1:	lea    ecx,[ebp-0xb8]
100187f7:	call   0x10002826
100187fc:	push   eax
100187fd:	lea    esi,[ebp-0x98]
10018803:	mov    BYTE PTR [ebp-0x4],0x6
10018807:	call   0x100041c0
1001880c:	push   ebx
1001880d:	push   0x1
1001880f:	lea    ecx,[ebp-0xb8]
10018815:	call   0x100012f0
1001881a:	push   ebx
1001881b:	push   0x1
1001881d:	lea    ecx,[ebp-0x50]
10018820:	mov    BYTE PTR [ebp-0x4],0x4
10018824:	call   0x100012f0
10018829:	inc    edi
1001882a:	jmp    0x100187bf
1001882c:	lea    eax,[ebp-0x98]
10018832:	call   0x10018c79
10018837:	lea    esi,[ebp-0x98]
1001883d:	call   0x10004743
10018842:	push   DWORD PTR [ebp-0x58]
10018845:	call   DWORD PTR ds:0x10066070
1001884b:	push   DWORD PTR [ebp-0x60]
1001884e:	call   0x10042e92
10018853:	pop    ecx
10018854:	mov    BYTE PTR [ebp-0x4],bl
10018857:	push   DWORD PTR [ebp-0x54]
1001885a:	call   0x10042e92
1001885f:	mov    eax,ds:0x10080ebc
10018864:	cmp    eax,ebx
10018866:	pop    ecx
10018867:	je     0x10018876
10018869:	mov    ecx,DWORD PTR ds:0x10080ec0
1001886f:	sub    ecx,eax
10018871:	sar    ecx,0x5
10018874:	jne    0x10018899
10018876:	lea    eax,[ebp-0x24]
10018879:	push   eax
1001887a:	call   0x10018062
1001887f:	pop    ecx
10018880:	mov    ecx,0x10080eb8
10018885:	mov    BYTE PTR [ebp-0x4],0x7
10018889:	call   0x10018b33
1001888e:	lea    esi,[ebp-0x24]
10018891:	mov    BYTE PTR [ebp-0x4],bl
10018894:	call   0x10004743
10018899:	call   0x100192cb
1001889e:	mov    DWORD PTR [ebp-0x7c],eax
100188a1:	mov    BYTE PTR [eax+0x29],0x1
100188a5:	mov    eax,DWORD PTR [ebp-0x7c]
100188a8:	mov    DWORD PTR [eax+0x4],eax
100188ab:	mov    eax,DWORD PTR [ebp-0x7c]
100188ae:	mov    DWORD PTR [eax],eax
100188b0:	mov    eax,DWORD PTR [ebp-0x7c]
100188b3:	mov    DWORD PTR [eax+0x8],eax
100188b6:	mov    DWORD PTR [ebp-0x78],ebx
100188b9:	mov    BYTE PTR [ebp-0x4],0x8
100188bd:	mov    DWORD PTR [ebp-0x54],ebx
100188c0:	mov    ecx,DWORD PTR ds:0x10080ebc
100188c6:	cmp    ecx,ebx
100188c8:	je     0x10018919
100188ca:	mov    eax,ds:0x10080ec0
100188cf:	sub    eax,ecx
100188d1:	sar    eax,0x5
100188d4:	cmp    DWORD PTR [ebp-0x54],eax
100188d7:	jae    0x10018919
100188d9:	push   DWORD PTR [ebp-0x54]
100188dc:	mov    esi,0x10080eb8
100188e1:	call   0x10009d22
100188e6:	lea    ecx,[ebp-0x50]
100188e9:	push   ecx
100188ea:	mov    ecx,eax
100188ec:	call   0x10030b10
100188f1:	pop    ecx
100188f2:	push   eax
100188f3:	lea    edi,[ebp-0x74]
100188f6:	lea    ebx,[ebp-0x80]
100188f9:	mov    BYTE PTR [ebp-0x4],0x9
100188fd:	call   0x10018cb9
10018902:	push   0x0
10018904:	push   0x1
10018906:	lea    ecx,[ebp-0x50]
10018909:	mov    BYTE PTR [ebp-0x4],0x8
1001890d:	call   0x100012f0
10018912:	inc    DWORD PTR [ebp-0x54]
10018915:	xor    ebx,ebx
10018917:	jmp    0x100188c0
10018919:	lea    eax,[ebp-0x80]
1001891c:	call   0x10018d72
10018921:	lea    eax,[ebp-0x80]
10018924:	mov    BYTE PTR [ebp-0x4],bl
10018927:	call   0x10018eed
1001892c:	call   0x10059b30
10018931:	ret    
10018932:	push   0x4
10018934:	call   0x10037980
10018939:	pop    ecx
1001893a:	mov    eax,0x1001892c
1001893f:	ret    
10018940:	push   0x58
10018942:	mov    eax,0x10063a15
10018947:	call   0x10059ad4
1001894c:	xor    edi,edi
1001894e:	inc    edi
1001894f:	push   edi
10018950:	lea    eax,[ebp-0x40]
10018953:	xor    esi,esi
10018955:	push   eax
10018956:	mov    DWORD PTR [ebp-0x4],esi
10018959:	call   0x100349f0
1001895e:	lea    eax,[ebp-0x40]
10018961:	push   eax
10018962:	lea    ecx,[ebp-0x38]
10018965:	mov    BYTE PTR [ebp-0x4],0x1
10018969:	call   0x10036490
1001896e:	mov    eax,0x10080eb8
10018973:	call   0x100046b1
10018978:	mov    DWORD PTR [ebp-0x58],eax
1001897b:	mov    DWORD PTR [ebp-0x3c],0xc
10018982:	cmp    esi,DWORD PTR [ebp-0x58]
10018985:	jge    0x1001899d
10018987:	push   esi
10018988:	call   0x10018c54
1001898d:	mov    ecx,DWORD PTR [ebp-0x3c]
10018990:	mov    eax,DWORD PTR [eax+0x14]
10018993:	lea    eax,[ecx+eax*1+0x5]
10018997:	mov    DWORD PTR [ebp-0x3c],eax
1001899a:	inc    esi
1001899b:	jmp    0x10018982
1001899d:	push   DWORD PTR [ebp-0x3c]
100189a0:	call   0x10043721
100189a5:	mov    ebx,eax
100189a7:	pop    ecx
100189a8:	mov    DWORD PTR [ebp-0x64],ebx
100189ab:	push   0x4
100189ad:	mov    BYTE PTR [ebp-0x4],0x2
100189b1:	mov    DWORD PTR [ebp-0x60],edi
100189b4:	pop    edi
100189b5:	push   edi
100189b6:	lea    eax,[ebp-0x60]
100189b9:	push   eax
100189ba:	push   ebx
100189bb:	call   0x10045180
100189c0:	add    esp,0xc
100189c3:	push   edi
100189c4:	lea    eax,[ebp+0x8]
100189c7:	push   eax
100189c8:	lea    eax,[ebx+0x4]
100189cb:	push   eax
100189cc:	call   0x10045180
100189d1:	add    esp,0xc
100189d4:	push   edi
100189d5:	lea    eax,[ebp-0x58]
100189d8:	push   eax
100189d9:	lea    eax,[ebx+0x8]
100189dc:	push   eax
100189dd:	call   0x10045180
100189e2:	add    esp,0xc
100189e5:	and    DWORD PTR [ebp-0x48],0x0
100189e9:	push   0xc
100189eb:	pop    esi
100189ec:	mov    eax,DWORD PTR [ebp-0x48]
100189ef:	cmp    eax,DWORD PTR [ebp-0x58]
100189f2:	jge    0x10018a43
100189f4:	push   eax
100189f5:	call   0x10018c54
100189fa:	cmp    DWORD PTR [eax+0x18],0x10
100189fe:	jb     0x10018a05
10018a00:	mov    eax,DWORD PTR [eax+0x4]
10018a03:	jmp    0x10018a08
10018a05:	add    eax,0x4
10018a08:	push   eax
10018a09:	lea    eax,[esi+ebx*1]
10018a0c:	push   eax
10018a0d:	call   0x10046440
10018a12:	pop    ecx
10018a13:	pop    ecx
10018a14:	push   DWORD PTR [ebp-0x48]
10018a17:	call   0x10018c54
10018a1c:	mov    eax,DWORD PTR [eax+0x14]
10018a1f:	push   edi
10018a20:	push   DWORD PTR [ebp-0x48]
10018a23:	lea    esi,[esi+eax*1+0x1]
10018a27:	call   0x10018c54
10018a2c:	add    eax,0x1c
10018a2f:	push   eax
10018a30:	lea    eax,[esi+ebx*1]
10018a33:	push   eax
10018a34:	call   0x10045180
10018a39:	add    esp,0xc
10018a3c:	add    esi,edi
10018a3e:	inc    DWORD PTR [ebp-0x48]
10018a41:	jmp    0x100189ec
10018a43:	lea    esi,[ebp-0x28]
10018a46:	lea    edi,[ebp-0x38]
10018a49:	call   0x1001832c
10018a4e:	and    DWORD PTR [ebp-0x48],0x0
10018a52:	lea    eax,[ebp-0x48]
10018a55:	push   eax
10018a56:	mov    eax,esi
10018a58:	push   eax
10018a59:	push   DWORD PTR [ebp-0x3c]
10018a5c:	xor    cl,cl
10018a5e:	mov    edx,ebx
10018a60:	lea    edi,[ebp-0x3c]
10018a63:	call   0x10039590
10018a68:	mov    ecx,DWORD PTR [eax]
10018a6a:	mov    esi,ecx
10018a6c:	xor    edi,edi
10018a6e:	add    esp,0xc
10018a71:	mov    DWORD PTR [eax],edi
10018a73:	mov    DWORD PTR [ebp-0x5c],esi
10018a76:	mov    BYTE PTR [ebp-0x4],0x3
10018a7a:	push   DWORD PTR [ebp-0x3c]
10018a7d:	call   0x10042e92
10018a82:	pop    ecx
10018a83:	mov    ecx,DWORD PTR [ebp-0x48]
10018a86:	push   esi
10018a87:	push   0x2
10018a89:	lea    eax,[ebp-0x40]
10018a8c:	push   eax
10018a8d:	call   0x100369e0
10018a92:	call   0x1002fa00
10018a97:	mov    DWORD PTR [ebp-0x4c],eax
10018a9a:	lea    eax,[ebp-0x4c]
10018a9d:	push   eax
10018a9e:	lea    eax,[ebp-0x40]
10018aa1:	push   eax
10018aa2:	push   0x2
10018aa4:	pop    ecx
10018aa5:	mov    DWORD PTR [ebp-0x48],edx
10018aa8:	call   0x10035bf0
10018aad:	cmp    DWORD PTR [ebp+0x8],edi
10018ab0:	jne    0x10018acb
10018ab2:	mov    DWORD PTR [ebp-0x4c],edi
10018ab5:	xor    eax,eax
10018ab7:	lea    edi,[ebp-0x48]
10018aba:	stos   DWORD PTR es:[edi],eax
10018abb:	lea    eax,[ebp-0x4c]
10018abe:	push   eax
10018abf:	lea    eax,[ebp-0x40]
10018ac2:	push   eax
10018ac3:	push   0x2
10018ac5:	pop    ecx
10018ac6:	call   0x10035bf0
10018acb:	push   esi
10018acc:	call   0x10042e92
10018ad1:	pop    ecx
10018ad2:	push   ebx
10018ad3:	call   0x10042e92
10018ad8:	pop    ecx
10018ad9:	push   DWORD PTR [ebp-0x40]
10018adc:	call   DWORD PTR ds:0x10066070
10018ae2:	or     DWORD PTR [ebp-0x4],0xffffffff
10018ae6:	mov    eax,ds:0x10080ebc
10018aeb:	test   eax,eax
10018aed:	je     0x10018afc
10018aef:	mov    ecx,DWORD PTR ds:0x10080ec0
10018af5:	sub    ecx,eax
10018af7:	sar    ecx,0x5
10018afa:	jne    0x10018b1f
10018afc:	lea    eax,[ebp-0x54]
10018aff:	push   eax
10018b00:	call   0x10018062
10018b05:	pop    ecx
10018b06:	mov    ecx,0x10080eb8
10018b0b:	mov    DWORD PTR [ebp-0x4],0x5
10018b12:	call   0x10018b33
10018b17:	lea    esi,[ebp-0x54]
10018b1a:	call   0x10004743
10018b1f:	call   0x10059b30
10018b24:	ret    
10018b25:	push   0x4
10018b27:	call   0x10037980
10018b2c:	pop    ecx
10018b2d:	mov    eax,0x10018ae6
10018b32:	ret    
10018b33:	push   ebx
10018b34:	push   esi
10018b35:	push   edi
10018b36:	mov    esi,eax
10018b38:	mov    edi,ecx
10018b3a:	cmp    edi,esi
10018b3c:	je     0x10018c4e
10018b42:	call   0x100046b1
10018b47:	test   eax,eax
10018b49:	jne    0x10018b8c
10018b4b:	mov    ebx,DWORD PTR [edi+0x8]
10018b4e:	cmp    DWORD PTR [edi+0x4],ebx
10018b51:	jbe    0x10018b58
10018b53:	call   0x100433b0
10018b58:	mov    esi,DWORD PTR [edi+0x4]
10018b5b:	cmp    esi,DWORD PTR [edi+0x8]
10018b5e:	jbe    0x10018b65
10018b60:	call   0x100433b0
10018b65:	cmp    esi,ebx
10018b67:	je     0x10018c4e
10018b6d:	push   DWORD PTR [edi+0x8]
10018b70:	mov    eax,esi
10018b72:	mov    ecx,ebx
10018b74:	call   0x10019333
10018b79:	pop    ecx
10018b7a:	push   DWORD PTR [edi+0x8]
10018b7d:	mov    esi,eax
10018b7f:	call   0x10004e16
10018b84:	mov    DWORD PTR [edi+0x8],esi
10018b87:	jmp    0x10018c4e
10018b8c:	mov    eax,esi
10018b8e:	call   0x100046b1
10018b93:	mov    ebx,eax
10018b95:	mov    eax,edi
10018b97:	call   0x100046b1
10018b9c:	cmp    ebx,eax
10018b9e:	mov    eax,DWORD PTR [edi+0x4]
10018ba1:	ja     0x10018bc9
10018ba3:	push   DWORD PTR [esi+0x8]
10018ba6:	mov    ecx,DWORD PTR [esi+0x4]
10018ba9:	call   0x10019333
10018bae:	pop    ecx
10018baf:	push   DWORD PTR [edi+0x8]
10018bb2:	call   0x10004e16
10018bb7:	mov    eax,esi
10018bb9:	call   0x100046b1
10018bbe:	shl    eax,0x5
10018bc1:	add    eax,DWORD PTR [edi+0x4]
10018bc4:	jmp    0x10018c4b
10018bc9:	test   eax,eax
10018bcb:	jne    0x10018bd1
10018bcd:	xor    ebx,ebx
10018bcf:	jmp    0x10018bd9
10018bd1:	mov    ebx,DWORD PTR [edi+0xc]
10018bd4:	sub    ebx,eax
10018bd6:	sar    ebx,0x5
10018bd9:	mov    eax,esi
10018bdb:	call   0x100046b1
10018be0:	cmp    eax,ebx
10018be2:	ja     0x10018c06
10018be4:	mov    eax,edi
10018be6:	call   0x100046b1
10018beb:	mov    ecx,DWORD PTR [esi+0x4]
10018bee:	mov    ebx,eax
10018bf0:	mov    eax,DWORD PTR [edi+0x4]
10018bf3:	shl    ebx,0x5
10018bf6:	add    ebx,ecx
10018bf8:	push   ebx
10018bf9:	call   0x10019333
10018bfe:	pop    ecx
10018bff:	push   DWORD PTR [edi+0x8]
10018c02:	mov    ecx,ebx
10018c04:	jmp    0x10018c43
10018c06:	mov    eax,DWORD PTR [edi+0x4]
10018c09:	xor    ebx,ebx
10018c0b:	cmp    eax,ebx
10018c0d:	je     0x10018c20
10018c0f:	push   DWORD PTR [edi+0x8]
10018c12:	call   0x10004e16
10018c17:	push   DWORD PTR [edi+0x4]
10018c1a:	call   0x10042e92
10018c1f:	pop    ecx
10018c20:	mov    eax,esi
10018c22:	call   0x100046b1
10018c27:	cmp    eax,ebx
10018c29:	mov    DWORD PTR [edi+0x4],ebx
10018c2c:	mov    DWORD PTR [edi+0x8],ebx
10018c2f:	mov    DWORD PTR [edi+0xc],ebx
10018c32:	je     0x10018c4e
10018c34:	call   0x1000a234
10018c39:	test   al,al
10018c3b:	je     0x10018c4e
10018c3d:	push   DWORD PTR [edi+0x4]
10018c40:	mov    ecx,DWORD PTR [esi+0x4]
10018c43:	push   DWORD PTR [esi+0x8]
10018c46:	call   0x1000a939
10018c4b:	mov    DWORD PTR [edi+0x8],eax
10018c4e:	mov    eax,edi
10018c50:	pop    edi
10018c51:	pop    esi
10018c52:	pop    ebx
10018c53:	ret    
10018c54:	mov    eax,0x10080eb8
10018c59:	call   0x100046b1
10018c5e:	cmp    DWORD PTR [esp+0x4],eax
10018c62:	jb     0x10018c69
10018c64:	call   0x100433b0
10018c69:	mov    eax,DWORD PTR [esp+0x4]
10018c6d:	shl    eax,0x5
10018c70:	add    eax,DWORD PTR ds:0x10080ebc
10018c76:	ret    0x4
10018c79:	push   ebp
10018c7a:	mov    ebp,esp
10018c7c:	and    esp,0xfffffff8
10018c7f:	mov    edx,DWORD PTR [eax+0x4]
10018c82:	mov    ecx,DWORD PTR ds:0x10080ebc
10018c88:	mov    DWORD PTR ds:0x10080ebc,edx
10018c8e:	mov    DWORD PTR [eax+0x4],ecx
10018c91:	mov    edx,DWORD PTR [eax+0x8]
10018c94:	mov    ecx,DWORD PTR ds:0x10080ec0
10018c9a:	mov    DWORD PTR ds:0x10080ec0,edx
10018ca0:	mov    DWORD PTR [eax+0x8],ecx
10018ca3:	mov    edx,DWORD PTR [eax+0xc]
10018ca6:	mov    ecx,DWORD PTR ds:0x10080ec4
10018cac:	mov    DWORD PTR ds:0x10080ec4,edx
10018cb2:	mov    DWORD PTR [eax+0xc],ecx
10018cb5:	mov    esp,ebp
10018cb7:	pop    ebp
10018cb8:	ret    
10018cb9:	push   ebp
10018cba:	mov    ebp,esp
10018cbc:	and    esp,0xfffffff8
10018cbf:	sub    esp,0x14
10018cc2:	mov    eax,DWORD PTR [ebx+0x4]
10018cc5:	push   esi
10018cc6:	mov    esi,DWORD PTR [eax+0x4]
10018cc9:	mov    DWORD PTR [esp+0x8],eax
10018ccd:	mov    al,0x1
10018ccf:	mov    BYTE PTR [esp+0xc],al
10018cd3:	jmp    0x10018cf3
10018cd5:	mov    eax,DWORD PTR [ebp+0x8]
10018cd8:	lea    ecx,[esi+0xc]
10018cdb:	mov    DWORD PTR [esp+0x8],esi
10018cdf:	call   0x10004e7d
10018ce4:	test   al,al
10018ce6:	mov    BYTE PTR [esp+0xc],al
10018cea:	je     0x10018cf0
10018cec:	mov    esi,DWORD PTR [esi]
10018cee:	jmp    0x10018cf3
10018cf0:	mov    esi,DWORD PTR [esi+0x8]
10018cf3:	cmp    BYTE PTR [esi+0x29],0x0
10018cf7:	je     0x10018cd5
10018cf9:	test   al,al
10018cfb:	mov    ecx,DWORD PTR [esp+0x8]
10018cff:	mov    esi,ecx
10018d01:	mov    DWORD PTR [esp+0x14],esi
10018d05:	mov    DWORD PTR [esp+0x10],ebx
10018d09:	je     0x10018d40
10018d0b:	mov    eax,DWORD PTR [ebx+0x4]
10018d0e:	cmp    ecx,DWORD PTR [eax]
10018d10:	jne    0x10018d33
10018d12:	push   DWORD PTR [ebp+0x8]
10018d15:	push   0x1
10018d17:	lea    eax,[esp+0x18]
10018d1b:	push   eax
10018d1c:	mov    esi,ebx
10018d1e:	call   0x10018da0
10018d23:	mov    ecx,DWORD PTR [eax]
10018d25:	mov    eax,DWORD PTR [eax+0x4]
10018d28:	mov    DWORD PTR [edi],ecx
10018d2a:	mov    DWORD PTR [edi+0x4],eax
10018d2d:	mov    BYTE PTR [edi+0x8],0x1
10018d31:	jmp    0x10018d69
10018d33:	lea    esi,[esp+0x10]
10018d37:	call   0x1002e4e9
10018d3c:	mov    esi,DWORD PTR [esp+0x14]
10018d40:	mov    ecx,DWORD PTR [ebp+0x8]
10018d43:	lea    eax,[esi+0xc]
10018d46:	call   0x10004e7d
10018d4b:	test   al,al
10018d4d:	je     0x10018d5c
10018d4f:	push   DWORD PTR [ebp+0x8]
10018d52:	mov    ecx,DWORD PTR [esp+0xc]
10018d56:	push   DWORD PTR [esp+0x10]
10018d5a:	jmp    0x10018d17
10018d5c:	mov    eax,DWORD PTR [esp+0x10]
10018d60:	mov    DWORD PTR [edi],eax
10018d62:	mov    DWORD PTR [edi+0x4],esi
10018d65:	mov    BYTE PTR [edi+0x8],0x0
10018d69:	mov    eax,edi
10018d6b:	pop    esi
10018d6c:	mov    esp,ebp
10018d6e:	pop    ebp
10018d6f:	ret    0x4
10018d72:	push   ebp
10018d73:	mov    ebp,esp
10018d75:	and    esp,0xfffffff8
10018d78:	mov    edx,DWORD PTR [eax+0x4]
10018d7b:	mov    ecx,DWORD PTR ds:0x10080ed0
10018d81:	mov    DWORD PTR ds:0x10080ed0,edx
10018d87:	mov    DWORD PTR [eax+0x4],ecx
10018d8a:	mov    edx,DWORD PTR [eax+0x8]
10018d8d:	mov    ecx,DWORD PTR ds:0x10080ed4
10018d93:	mov    DWORD PTR ds:0x10080ed4,edx
10018d99:	mov    DWORD PTR [eax+0x8],ecx
10018d9c:	mov    esp,ebp
10018d9e:	pop    ebp
10018d9f:	ret    
10018da0:	push   0x48
10018da2:	mov    eax,0x100605b3
10018da7:	call   0x10059a35
10018dac:	mov    edi,ecx
10018dae:	cmp    DWORD PTR [esi+0x8],0x9249248
10018db5:	jb     0x10018de9
10018db7:	push   0x1006d030
10018dbc:	lea    ecx,[ebp-0x2c]
10018dbf:	call   0x100011cd
10018dc4:	and    DWORD PTR [ebp-0x4],0x0
10018dc8:	lea    eax,[ebp-0x2c]
10018dcb:	push   eax
10018dcc:	lea    ecx,[ebp-0x54]
10018dcf:	call   0x10001077
10018dd4:	push   0x10074da0
10018dd9:	lea    eax,[ebp-0x54]
10018ddc:	push   eax
10018ddd:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10018de4:	call   0x100479b4
10018de9:	mov    eax,DWORD PTR [esi+0x4]
10018dec:	push   0x0
10018dee:	push   DWORD PTR [ebp+0x10]
10018df1:	push   eax
10018df2:	push   edi
10018df3:	push   eax
10018df4:	call   0x10018fce
10018df9:	inc    DWORD PTR [esi+0x8]
10018dfc:	mov    ebx,eax
10018dfe:	mov    eax,DWORD PTR [esi+0x4]
10018e01:	cmp    edi,eax
10018e03:	jne    0x10018e12
10018e05:	mov    DWORD PTR [eax+0x4],ebx
10018e08:	mov    eax,DWORD PTR [esi+0x4]
10018e0b:	mov    DWORD PTR [eax],ebx
10018e0d:	mov    eax,DWORD PTR [esi+0x4]
10018e10:	jmp    0x10018e30
10018e12:	cmp    BYTE PTR [ebp+0xc],0x0
10018e16:	je     0x10018e25
10018e18:	mov    DWORD PTR [edi],ebx
10018e1a:	mov    eax,DWORD PTR [esi+0x4]
10018e1d:	cmp    edi,DWORD PTR [eax]
10018e1f:	jne    0x10018e33
10018e21:	mov    DWORD PTR [eax],ebx
10018e23:	jmp    0x10018e33
10018e25:	mov    DWORD PTR [edi+0x8],ebx
10018e28:	mov    eax,DWORD PTR [esi+0x4]
10018e2b:	cmp    edi,DWORD PTR [eax+0x8]
10018e2e:	jne    0x10018e33
10018e30:	mov    DWORD PTR [eax+0x8],ebx
10018e33:	mov    edi,ebx
10018e35:	lea    eax,[ebx+0x4]
10018e38:	jmp    0x10018ec7
10018e3d:	mov    ecx,DWORD PTR [eax]
10018e3f:	mov    edx,DWORD PTR [ecx+0x4]
10018e42:	cmp    ecx,DWORD PTR [edx]
10018e44:	jne    0x10018e7b
10018e46:	mov    edx,DWORD PTR [edx+0x8]
10018e49:	cmp    BYTE PTR [edx+0x28],0x0
10018e4d:	je     0x10018e83
10018e4f:	cmp    edi,DWORD PTR [ecx+0x8]
10018e52:	jne    0x10018e5c
10018e54:	push   esi
10018e55:	mov    edi,ecx
10018e57:	call   0x1002e7ff
10018e5c:	mov    eax,DWORD PTR [edi+0x4]
10018e5f:	mov    BYTE PTR [eax+0x28],0x1
10018e63:	mov    eax,DWORD PTR [edi+0x4]
10018e66:	mov    eax,DWORD PTR [eax+0x4]
10018e69:	mov    BYTE PTR [eax+0x28],0x0
10018e6d:	mov    eax,DWORD PTR [edi+0x4]
10018e70:	mov    ecx,DWORD PTR [eax+0x4]
10018e73:	push   esi
10018e74:	call   0x1002e83f
10018e79:	jmp    0x10018ec4
10018e7b:	mov    edx,DWORD PTR [edx]
10018e7d:	cmp    BYTE PTR [edx+0x28],0x0
10018e81:	jne    0x10018e9b
10018e83:	mov    BYTE PTR [ecx+0x28],0x1
10018e87:	mov    BYTE PTR [edx+0x28],0x1
10018e8b:	mov    ecx,DWORD PTR [eax]
10018e8d:	mov    ecx,DWORD PTR [ecx+0x4]
10018e90:	mov    BYTE PTR [ecx+0x28],0x0
10018e94:	mov    eax,DWORD PTR [eax]
10018e96:	mov    edi,DWORD PTR [eax+0x4]
10018e99:	jmp    0x10018ec4
10018e9b:	cmp    edi,DWORD PTR [ecx]
10018e9d:	jne    0x10018ea7
10018e9f:	push   esi
10018ea0:	mov    edi,ecx
10018ea2:	call   0x1002e83f
10018ea7:	mov    eax,DWORD PTR [edi+0x4]
10018eaa:	mov    BYTE PTR [eax+0x28],0x1
10018eae:	mov    eax,DWORD PTR [edi+0x4]
10018eb1:	mov    eax,DWORD PTR [eax+0x4]
10018eb4:	mov    BYTE PTR [eax+0x28],0x0
10018eb8:	mov    eax,DWORD PTR [edi+0x4]
10018ebb:	mov    ecx,DWORD PTR [eax+0x4]
10018ebe:	push   esi
10018ebf:	call   0x1002e7ff
10018ec4:	lea    eax,[edi+0x4]
10018ec7:	mov    ecx,DWORD PTR [eax]
10018ec9:	cmp    BYTE PTR [ecx+0x28],0x0
10018ecd:	je     0x10018e3d
10018ed3:	mov    eax,DWORD PTR [esi+0x4]
10018ed6:	mov    eax,DWORD PTR [eax+0x4]
10018ed9:	mov    BYTE PTR [eax+0x28],0x1
10018edd:	mov    eax,DWORD PTR [ebp+0x8]
10018ee0:	mov    DWORD PTR [eax+0x4],ebx
10018ee3:	mov    DWORD PTR [eax],esi
10018ee5:	call   0x10059b0d
10018eea:	ret    0xc
10018eed:	push   ebp
10018eee:	mov    ebp,esp
10018ef0:	and    esp,0xfffffff8
10018ef3:	push   ecx
10018ef4:	push   ecx
10018ef5:	push   ebx
10018ef6:	push   edi
10018ef7:	mov    edi,eax
10018ef9:	mov    eax,DWORD PTR [edi+0x4]
10018efc:	mov    ecx,DWORD PTR [eax]
10018efe:	push   eax
10018eff:	push   edi
10018f00:	push   ecx
10018f01:	push   edi
10018f02:	lea    ebx,[esp+0x18]
10018f06:	call   0x10018f22
10018f0b:	push   DWORD PTR [edi+0x4]
10018f0e:	call   0x10042e92
10018f13:	and    DWORD PTR [edi+0x4],0x0
10018f17:	and    DWORD PTR [edi+0x8],0x0
10018f1b:	pop    ecx
10018f1c:	pop    edi
10018f1d:	pop    ebx
10018f1e:	mov    esp,ebp
10018f20:	pop    ebp
10018f21:	ret    
10018f22:	push   ebp
10018f23:	mov    ebp,esp
10018f25:	mov    eax,DWORD PTR [edi+0x4]
10018f28:	sub    esp,0x14
10018f2b:	cmp    DWORD PTR [ebp+0x8],0x0
10018f2f:	push   esi
10018f30:	mov    esi,DWORD PTR [eax]
10018f32:	je     0x10018f39
10018f34:	cmp    DWORD PTR [ebp+0x8],edi
10018f37:	je     0x10018f3e
10018f39:	call   0x100433b0
10018f3e:	cmp    DWORD PTR [ebp+0xc],esi
10018f41:	jne    0x10018f86
10018f43:	cmp    DWORD PTR [ebp+0x10],0x0
10018f47:	mov    esi,DWORD PTR [edi+0x4]
10018f4a:	je     0x10018f51
10018f4c:	cmp    DWORD PTR [ebp+0x10],edi
10018f4f:	je     0x10018f56
10018f51:	call   0x100433b0
10018f56:	cmp    DWORD PTR [ebp+0x14],esi
10018f59:	jne    0x10018f86
10018f5b:	mov    eax,DWORD PTR [edi+0x4]
10018f5e:	push   DWORD PTR [eax+0x4]
10018f61:	mov    ecx,edi
10018f63:	call   0x100192f5
10018f68:	mov    eax,DWORD PTR [edi+0x4]
10018f6b:	mov    DWORD PTR [eax+0x4],eax
10018f6e:	mov    eax,DWORD PTR [edi+0x4]
10018f71:	and    DWORD PTR [edi+0x8],0x0
10018f75:	mov    DWORD PTR [eax],eax
10018f77:	mov    eax,DWORD PTR [edi+0x4]
10018f7a:	mov    DWORD PTR [eax+0x8],eax
10018f7d:	mov    eax,DWORD PTR [edi+0x4]
10018f80:	mov    eax,DWORD PTR [eax]
10018f82:	mov    DWORD PTR [ebx],edi
10018f84:	jmp    0x10018fc4
10018f86:	mov    eax,DWORD PTR [ebp+0x8]
10018f89:	test   eax,eax
10018f8b:	je     0x10018f92
10018f8d:	cmp    eax,DWORD PTR [ebp+0x10]
10018f90:	je     0x10018f97
10018f92:	call   0x100433b0
10018f97:	mov    eax,DWORD PTR [ebp+0xc]
10018f9a:	cmp    eax,DWORD PTR [ebp+0x14]
10018f9d:	mov    ecx,DWORD PTR [ebp+0x8]
10018fa0:	je     0x10018fc2
10018fa2:	lea    esi,[ebp+0x8]
10018fa5:	mov    DWORD PTR [ebp-0x8],ecx
10018fa8:	mov    DWORD PTR [ebp-0x4],eax
10018fab:	call   0x1002dce2
10018fb0:	push   DWORD PTR [ebp-0x4]
10018fb3:	lea    eax,[ebp-0x10]
10018fb6:	push   DWORD PTR [ebp-0x8]
10018fb9:	push   eax
10018fba:	push   edi
10018fbb:	call   0x10019035
10018fc0:	jmp    0x10018f86
10018fc2:	mov    DWORD PTR [ebx],ecx
10018fc4:	mov    DWORD PTR [ebx+0x4],eax
10018fc7:	mov    eax,ebx
10018fc9:	pop    esi
10018fca:	leave  
10018fcb:	ret    0x10
10018fce:	push   0x8
10018fd0:	mov    eax,0x1005fba5
10018fd5:	call   0x10059a68
10018fda:	push   0x2c
10018fdc:	call   0x1004349e
10018fe1:	mov    esi,eax
10018fe3:	pop    ecx
10018fe4:	mov    DWORD PTR [ebp-0x14],esi
10018fe7:	test   esi,esi
10018fe9:	mov    DWORD PTR [ebp-0x4],0x1
10018ff0:	je     0x10019018
10018ff2:	mov    eax,DWORD PTR [ebp+0x8]
10018ff5:	push   DWORD PTR [ebp+0x14]
10018ff8:	mov    DWORD PTR [esi],eax
10018ffa:	mov    eax,DWORD PTR [ebp+0xc]
10018ffd:	mov    DWORD PTR [esi+0x4],eax
10019000:	mov    eax,DWORD PTR [ebp+0x10]
10019003:	lea    ecx,[esi+0xc]
10019006:	mov    DWORD PTR [esi+0x8],eax
10019009:	call   0x100011a7
1001900e:	mov    al,BYTE PTR [ebp+0x18]
10019011:	mov    BYTE PTR [esi+0x28],al
10019014:	mov    BYTE PTR [esi+0x29],0x0
10019018:	mov    eax,esi
1001901a:	call   0x10059b0d
1001901f:	ret    0x14
10019022:	push   DWORD PTR [ebp-0x14]
10019025:	call   0x10042e92
1001902a:	pop    ecx
1001902b:	push   0x0
1001902d:	push   0x0
1001902f:	call   0x100479b4
10019034:	int3   
10019035:	push   0x44
10019037:	mov    eax,0x1006071f
1001903c:	call   0x10059a35
10019041:	mov    ebx,DWORD PTR [ebp+0x14]
10019044:	cmp    BYTE PTR [ebx+0x29],0x0
10019048:	je     0x1001907c
1001904a:	push   0x1006ccec
1001904f:	lea    ecx,[ebp-0x28]
10019052:	call   0x100011cd
10019057:	and    DWORD PTR [ebp-0x4],0x0
1001905b:	lea    eax,[ebp-0x28]
1001905e:	push   eax
1001905f:	lea    ecx,[ebp-0x50]
10019062:	call   0x10001077
10019067:	push   0x10074cc0
1001906c:	lea    eax,[ebp-0x50]
1001906f:	push   eax
10019070:	mov    DWORD PTR [ebp-0x50],0x1006b978
10019077:	call   0x100479b4
1001907c:	lea    esi,[ebp+0x10]
1001907f:	call   0x1002dce2
10019084:	mov    ecx,DWORD PTR [ebx]
10019086:	cmp    BYTE PTR [ecx+0x29],0x0
1001908a:	je     0x10019091
1001908c:	mov    edi,DWORD PTR [ebx+0x8]
1001908f:	jmp    0x100190a8
10019091:	mov    eax,DWORD PTR [ebx+0x8]
10019094:	cmp    BYTE PTR [eax+0x29],0x0
10019098:	je     0x1001909e
1001909a:	mov    edi,ecx
1001909c:	jmp    0x100190a8
1001909e:	mov    eax,DWORD PTR [ebp+0x14]
100190a1:	cmp    eax,ebx
100190a3:	mov    edi,DWORD PTR [eax+0x8]
100190a6:	jne    0x1001911e
100190a8:	cmp    BYTE PTR [edi+0x29],0x0
100190ac:	mov    esi,DWORD PTR [ebx+0x4]
100190af:	jne    0x100190b4
100190b1:	mov    DWORD PTR [edi+0x4],esi
100190b4:	mov    ecx,DWORD PTR [ebp+0x8]
100190b7:	mov    eax,DWORD PTR [ecx+0x4]
100190ba:	cmp    DWORD PTR [eax+0x4],ebx
100190bd:	jne    0x100190c4
100190bf:	mov    DWORD PTR [eax+0x4],edi
100190c2:	jmp    0x100190cf
100190c4:	cmp    DWORD PTR [esi],ebx
100190c6:	jne    0x100190cc
100190c8:	mov    DWORD PTR [esi],edi
100190ca:	jmp    0x100190cf
100190cc:	mov    DWORD PTR [esi+0x8],edi
100190cf:	mov    edx,DWORD PTR [ecx+0x4]
100190d2:	cmp    DWORD PTR [edx],ebx
100190d4:	jne    0x100190f2
100190d6:	cmp    BYTE PTR [edi+0x29],0x0
100190da:	je     0x100190e0
100190dc:	mov    ecx,esi
100190de:	jmp    0x100190f0
100190e0:	mov    eax,DWORD PTR [edi]
100190e2:	mov    ecx,edi
100190e4:	jmp    0x100190ea
100190e6:	mov    ecx,eax
100190e8:	mov    eax,DWORD PTR [ecx]
100190ea:	cmp    BYTE PTR [eax+0x29],0x0
100190ee:	je     0x100190e6
100190f0:	mov    DWORD PTR [edx],ecx
100190f2:	mov    eax,DWORD PTR [ebp+0x8]
100190f5:	mov    edx,DWORD PTR [eax+0x4]
100190f8:	cmp    DWORD PTR [edx+0x8],ebx
100190fb:	jne    0x10019178
100190fd:	cmp    BYTE PTR [edi+0x29],0x0
10019101:	je     0x10019107
10019103:	mov    ecx,esi
10019105:	jmp    0x10019119
10019107:	mov    eax,DWORD PTR [edi+0x8]
1001910a:	mov    ecx,edi
1001910c:	jmp    0x10019113
1001910e:	mov    ecx,eax
10019110:	mov    eax,DWORD PTR [ecx+0x8]
10019113:	cmp    BYTE PTR [eax+0x29],0x0
10019117:	je     0x1001910e
10019119:	mov    DWORD PTR [edx+0x8],ecx
1001911c:	jmp    0x10019178
1001911e:	mov    DWORD PTR [ecx+0x4],eax
10019121:	mov    ecx,DWORD PTR [ebx]
10019123:	mov    DWORD PTR [eax],ecx
10019125:	cmp    eax,DWORD PTR [ebx+0x8]
10019128:	jne    0x1001912e
1001912a:	mov    esi,eax
1001912c:	jmp    0x10019148
1001912e:	cmp    BYTE PTR [edi+0x29],0x0
10019132:	mov    esi,DWORD PTR [eax+0x4]
10019135:	jne    0x1001913a
10019137:	mov    DWORD PTR [edi+0x4],esi
1001913a:	mov    DWORD PTR [esi],edi
1001913c:	mov    ecx,DWORD PTR [ebx+0x8]
1001913f:	mov    DWORD PTR [eax+0x8],ecx
10019142:	mov    ecx,DWORD PTR [ebx+0x8]
10019145:	mov    DWORD PTR [ecx+0x4],eax
10019148:	mov    ecx,DWORD PTR [ebp+0x8]
1001914b:	mov    ecx,DWORD PTR [ecx+0x4]
1001914e:	cmp    DWORD PTR [ecx+0x4],ebx
10019151:	jne    0x10019158
10019153:	mov    DWORD PTR [ecx+0x4],eax
10019156:	jmp    0x10019166
10019158:	mov    ecx,DWORD PTR [ebx+0x4]
1001915b:	cmp    DWORD PTR [ecx],ebx
1001915d:	jne    0x10019163
1001915f:	mov    DWORD PTR [ecx],eax
10019161:	jmp    0x10019166
10019163:	mov    DWORD PTR [ecx+0x8],eax
10019166:	mov    ecx,DWORD PTR [ebx+0x4]
10019169:	mov    DWORD PTR [eax+0x4],ecx
1001916c:	mov    dl,BYTE PTR [ebx+0x28]
1001916f:	mov    cl,BYTE PTR [eax+0x28]
10019172:	mov    BYTE PTR [eax+0x28],dl
10019175:	mov    BYTE PTR [ebx+0x28],cl
10019178:	cmp    BYTE PTR [ebx+0x28],0x1
1001917c:	jne    0x10019294
10019182:	jmp    0x10019248
10019187:	cmp    BYTE PTR [edi+0x28],0x1
1001918b:	jne    0x10019290
10019191:	mov    ecx,DWORD PTR [esi]
10019193:	cmp    edi,ecx
10019195:	jne    0x1001920e
10019197:	mov    ecx,DWORD PTR [esi+0x8]
1001919a:	cmp    BYTE PTR [ecx+0x28],0x0
1001919e:	jne    0x100191b5
100191a0:	push   DWORD PTR [ebp+0x8]
100191a3:	mov    BYTE PTR [ecx+0x28],0x1
100191a7:	mov    ecx,esi
100191a9:	mov    BYTE PTR [esi+0x28],0x0
100191ad:	call   0x1002e7ff
100191b2:	mov    ecx,DWORD PTR [esi+0x8]
100191b5:	cmp    BYTE PTR [ecx+0x29],0x0
100191b9:	jne    0x10019243
100191bf:	mov    eax,DWORD PTR [ecx]
100191c1:	cmp    BYTE PTR [eax+0x28],0x1
100191c5:	jne    0x100191d0
100191c7:	mov    eax,DWORD PTR [ecx+0x8]
100191ca:	cmp    BYTE PTR [eax+0x28],0x1
100191ce:	je     0x1001923f
100191d0:	mov    eax,DWORD PTR [ecx+0x8]
100191d3:	cmp    BYTE PTR [eax+0x28],0x1
100191d7:	jne    0x100191ee
100191d9:	mov    eax,DWORD PTR [ecx]
100191db:	push   DWORD PTR [ebp+0x8]
100191de:	mov    BYTE PTR [eax+0x28],0x1
100191e2:	mov    BYTE PTR [ecx+0x28],0x0
100191e6:	call   0x1002e83f
100191eb:	mov    ecx,DWORD PTR [esi+0x8]
100191ee:	mov    al,BYTE PTR [esi+0x28]
100191f1:	push   DWORD PTR [ebp+0x8]
100191f4:	mov    BYTE PTR [ecx+0x28],al
100191f7:	mov    BYTE PTR [esi+0x28],0x1
100191fb:	mov    eax,DWORD PTR [ecx+0x8]
100191fe:	mov    ecx,esi
10019200:	mov    BYTE PTR [eax+0x28],0x1
10019204:	call   0x1002e7ff
10019209:	jmp    0x10019290
1001920e:	cmp    BYTE PTR [ecx+0x28],0x0
10019212:	jne    0x10019228
10019214:	push   DWORD PTR [ebp+0x8]
10019217:	mov    BYTE PTR [ecx+0x28],0x1
1001921b:	mov    ecx,esi
1001921d:	mov    BYTE PTR [esi+0x28],0x0
10019221:	call   0x1002e83f
10019226:	mov    ecx,DWORD PTR [esi]
10019228:	cmp    BYTE PTR [ecx+0x29],0x0
1001922c:	jne    0x10019243
1001922e:	mov    eax,DWORD PTR [ecx+0x8]
10019231:	cmp    BYTE PTR [eax+0x28],0x1
10019235:	jne    0x10019259
10019237:	mov    eax,DWORD PTR [ecx]
10019239:	cmp    BYTE PTR [eax+0x28],0x1
1001923d:	jne    0x10019259
1001923f:	mov    BYTE PTR [ecx+0x28],0x0
10019243:	mov    edi,esi
10019245:	mov    esi,DWORD PTR [esi+0x4]
10019248:	mov    eax,DWORD PTR [ebp+0x8]
1001924b:	mov    eax,DWORD PTR [eax+0x4]
1001924e:	cmp    edi,DWORD PTR [eax+0x4]
10019251:	jne    0x10019187
10019257:	jmp    0x10019290
10019259:	mov    eax,DWORD PTR [ecx]
1001925b:	cmp    BYTE PTR [eax+0x28],0x1
1001925f:	jne    0x10019276
10019261:	mov    eax,DWORD PTR [ecx+0x8]
10019264:	push   DWORD PTR [ebp+0x8]
10019267:	mov    BYTE PTR [eax+0x28],0x1
1001926b:	mov    BYTE PTR [ecx+0x28],0x0
1001926f:	call   0x1002e7ff
10019274:	mov    ecx,DWORD PTR [esi]
10019276:	mov    al,BYTE PTR [esi+0x28]
10019279:	push   DWORD PTR [ebp+0x8]
1001927c:	mov    BYTE PTR [ecx+0x28],al
1001927f:	mov    BYTE PTR [esi+0x28],0x1
10019283:	mov    eax,DWORD PTR [ecx]
10019285:	mov    ecx,esi
10019287:	mov    BYTE PTR [eax+0x28],0x1
1001928b:	call   0x1002e83f
10019290:	mov    BYTE PTR [edi+0x28],0x1
10019294:	push   0x0
10019296:	push   0x1
10019298:	lea    ecx,[ebx+0xc]
1001929b:	call   0x100012f0
100192a0:	push   ebx
100192a1:	call   0x10042e92
100192a6:	pop    ecx
100192a7:	mov    ecx,DWORD PTR [ebp+0x8]
100192aa:	mov    eax,DWORD PTR [ecx+0x8]
100192ad:	test   eax,eax
100192af:	jbe    0x100192b5
100192b1:	dec    eax
100192b2:	mov    DWORD PTR [ecx+0x8],eax
100192b5:	mov    ecx,DWORD PTR [ebp+0x10]
100192b8:	mov    eax,DWORD PTR [ebp+0xc]
100192bb:	mov    DWORD PTR [eax],ecx
100192bd:	mov    ecx,DWORD PTR [ebp+0x14]
100192c0:	mov    DWORD PTR [eax+0x4],ecx
100192c3:	call   0x10059b0d
100192c8:	ret    0x10
100192cb:	push   0x2c
100192cd:	call   0x1004349e
100192d2:	xor    edx,edx
100192d4:	cmp    eax,edx
100192d6:	pop    ecx
100192d7:	je     0x100192db
100192d9:	mov    DWORD PTR [eax],edx
100192db:	lea    ecx,[eax+0x4]
100192de:	cmp    ecx,edx
100192e0:	je     0x100192e4
100192e2:	mov    DWORD PTR [ecx],edx
100192e4:	lea    ecx,[eax+0x8]
100192e7:	cmp    ecx,edx
100192e9:	je     0x100192ed
100192eb:	mov    DWORD PTR [ecx],edx
100192ed:	mov    BYTE PTR [eax+0x28],0x1
100192f1:	mov    BYTE PTR [eax+0x29],dl
100192f4:	ret    
100192f5:	push   ebx
100192f6:	push   esi
100192f7:	push   edi
100192f8:	mov    edi,DWORD PTR [esp+0x10]
100192fc:	cmp    BYTE PTR [edi+0x29],0x0
10019300:	mov    ebx,ecx
10019302:	mov    esi,edi
10019304:	jne    0x1001932d
10019306:	push   DWORD PTR [esi+0x8]
10019309:	mov    ecx,ebx
1001930b:	call   0x100192f5
10019310:	mov    esi,DWORD PTR [esi]
10019312:	push   0x0
10019314:	push   0x1
10019316:	lea    ecx,[edi+0xc]
10019319:	call   0x100012f0
1001931e:	push   edi
1001931f:	call   0x10042e92
10019324:	cmp    BYTE PTR [esi+0x29],0x0
10019328:	pop    ecx
10019329:	mov    edi,esi
1001932b:	je     0x10019306
1001932d:	pop    edi
1001932e:	pop    esi
1001932f:	pop    ebx
10019330:	ret    0x4
10019333:	push   ebx
10019334:	push   esi
10019335:	mov    esi,DWORD PTR [esp+0xc]
10019339:	push   edi
1001933a:	mov    edi,ecx
1001933c:	sub    esi,edi
1001933e:	sar    esi,0x5
10019341:	shl    esi,0x5
10019344:	mov    ebx,eax
10019346:	add    esi,ebx
10019348:	cmp    edi,DWORD PTR [esp+0x10]
1001934c:	je     0x1001936d
1001934e:	sub    ebx,edi
10019350:	push   0xffffffff
10019352:	push   0x0
10019354:	push   edi
10019355:	lea    ecx,[ebx+edi*1]
10019358:	call   0x10001241
1001935d:	mov    eax,DWORD PTR [edi+0x1c]
10019360:	mov    DWORD PTR [ebx+edi*1+0x1c],eax
10019364:	add    edi,0x20
10019367:	cmp    edi,DWORD PTR [esp+0x10]
1001936b:	jne    0x10019350
1001936d:	pop    edi
1001936e:	mov    eax,esi
10019370:	pop    esi
10019371:	pop    ebx
10019372:	ret    
10019373:	push   0x8
10019375:	mov    eax,0x10060cf9
1001937a:	call   0x10059a68
1001937f:	mov    esi,DWORD PTR [ebp+0xc]
10019382:	mov    edi,ecx
10019384:	and    DWORD PTR [ebp-0x4],0x0
10019388:	mov    DWORD PTR [ebp-0x14],esi
1001938b:	cmp    edi,DWORD PTR [ebp+0x8]
1001938e:	je     0x100193bf
10019390:	call   0x1000a95d
10019395:	add    esi,0x20
10019398:	mov    DWORD PTR [ebp+0xc],esi
1001939b:	add    edi,0x20
1001939e:	jmp    0x1001938b
100193a0:	mov    esi,DWORD PTR [ebp-0x14]
100193a3:	jmp    0x100193b1
100193a5:	push   0x1
100193a7:	mov    ecx,esi
100193a9:	call   0x100012f0
100193ae:	add    esi,0x20
100193b1:	cmp    esi,DWORD PTR [ebp+0xc]
100193b4:	push   0x0
100193b6:	jne    0x100193a5
100193b8:	push   0x0
100193ba:	call   0x100479b4
100193bf:	mov    eax,esi
100193c1:	call   0x10059b0d
100193c6:	ret    
100193c7:	push   ebp
100193c8:	mov    ebp,esp
100193ca:	and    esp,0xfffffff8
100193cd:	push   0xffffffff
100193cf:	push   0x10060cde
100193d4:	mov    eax,fs:0x0
100193da:	push   eax
100193db:	sub    esp,0x18
100193de:	push   esi
100193df:	mov    eax,ds:0x1007e030
100193e4:	xor    eax,esp
100193e6:	push   eax
100193e7:	lea    eax,[esp+0x20]
100193eb:	mov    fs:0x0,eax
100193f1:	mov    esi,ecx
100193f3:	and    DWORD PTR [esp+0xc],0x0
100193f8:	push   0x1f4
100193fd:	push   DWORD PTR [esi+0xc]
10019400:	call   DWORD PTR ds:0x10066084
10019406:	test   eax,eax
10019408:	je     0x10019418
1001940a:	call   0x1001957f
1001940f:	and    DWORD PTR [edi+0x8],0x0
10019413:	mov    DWORD PTR [edi+0x4],eax
10019416:	jmp    0x1001944f
10019418:	lea    eax,[esp+0x10]
1001941c:	push   eax
1001941d:	mov    ecx,esi
1001941f:	call   0x10019462
10019424:	and    DWORD PTR [esp+0x28],0x0
10019429:	push   DWORD PTR [esi+0xc]
1001942c:	call   DWORD PTR ds:0x10066094
10019432:	push   edi
10019433:	lea    ecx,[esp+0x14]
10019437:	call   0x10019462
1001943c:	lea    esi,[esp+0x10]
10019440:	call   0x100194d8
10019445:	push   DWORD PTR [esp+0x14]
10019449:	call   0x10042e92
1001944e:	pop    ecx
1001944f:	mov    eax,edi
10019451:	mov    ecx,DWORD PTR [esp+0x20]
10019455:	mov    DWORD PTR fs:0x0,ecx
1001945c:	pop    ecx
1001945d:	pop    esi
1001945e:	mov    esp,ebp
10019460:	pop    ebp
10019461:	ret    
10019462:	push   0x8
10019464:	mov    eax,0x10060cbb
10019469:	call   0x10059a68
1001946e:	mov    edi,ecx
10019470:	mov    esi,DWORD PTR [ebp+0x8]
10019473:	call   0x1001957f
10019478:	xor    ecx,ecx
1001947a:	mov    DWORD PTR [ebp-0x4],ecx
1001947d:	mov    DWORD PTR [esi+0x4],eax
10019480:	mov    DWORD PTR [esi+0x8],ecx
10019483:	mov    ecx,DWORD PTR [edi+0x4]
10019486:	mov    edx,DWORD PTR [ecx]
10019488:	mov    eax,DWORD PTR [eax]
1001948a:	push   ecx
1001948b:	push   edi
1001948c:	push   edx
1001948d:	push   edi
1001948e:	push   eax
1001948f:	push   esi
10019490:	push   DWORD PTR [ebp+0x8]
10019493:	push   esi
10019494:	call   0x100195f1
10019499:	mov    eax,esi
1001949b:	call   0x10059b0d
100194a0:	ret    0x4
100194a3:	mov    esi,DWORD PTR [ebp+0x8]
100194a6:	call   0x100194d8
100194ab:	push   DWORD PTR [esi+0x4]
100194ae:	call   0x10042e92
100194b3:	pop    ecx
100194b4:	xor    ecx,ecx
100194b6:	push   ecx
100194b7:	push   ecx
100194b8:	mov    DWORD PTR [esi+0x4],ecx
100194bb:	call   0x100479b4
100194c0:	int3   
100194c1:	push   esi
100194c2:	mov    esi,eax
100194c4:	call   0x100194d8
100194c9:	push   DWORD PTR [esi+0x4]
100194cc:	call   0x10042e92
100194d1:	and    DWORD PTR [esi+0x4],0x0
100194d5:	pop    ecx
100194d6:	pop    esi
100194d7:	ret    
100194d8:	mov    eax,DWORD PTR [esi+0x4]
100194db:	push   edi
100194dc:	mov    edi,DWORD PTR [eax]
100194de:	mov    DWORD PTR [eax],eax
100194e0:	mov    eax,DWORD PTR [esi+0x4]
100194e3:	mov    DWORD PTR [eax+0x4],eax
100194e6:	and    DWORD PTR [esi+0x8],0x0
100194ea:	cmp    edi,DWORD PTR [esi+0x4]
100194ed:	je     0x1001950d
100194ef:	push   ebx
100194f0:	mov    ebx,DWORD PTR [edi]
100194f2:	push   0x0
100194f4:	push   0x1
100194f6:	lea    ecx,[edi+0x8]
100194f9:	call   0x100012f0
100194fe:	push   edi
100194ff:	call   0x10042e92
10019504:	cmp    ebx,DWORD PTR [esi+0x4]
10019507:	pop    ecx
10019508:	mov    edi,ebx
1001950a:	jne    0x100194f0
1001950c:	pop    ebx
1001950d:	pop    edi
1001950e:	ret    
1001950f:	push   0x48
10019511:	mov    eax,0x100605b3
10019516:	call   0x10059a35
1001951b:	push   DWORD PTR [ebp+0x8]
1001951e:	mov    esi,DWORD PTR [ebp+0x10]
10019521:	push   DWORD PTR [esi+0x4]
10019524:	push   esi
10019525:	call   0x10019597
1001952a:	mov    ecx,DWORD PTR [edi+0x8]
1001952d:	mov    edx,0x9249249
10019532:	sub    edx,ecx
10019534:	cmp    edx,0x1
10019537:	jae    0x1001956b
10019539:	push   0x1006feb8
1001953e:	lea    ecx,[ebp-0x2c]
10019541:	call   0x100011cd
10019546:	and    DWORD PTR [ebp-0x4],0x0
1001954a:	lea    eax,[ebp-0x2c]
1001954d:	push   eax
1001954e:	lea    ecx,[ebp-0x54]
10019551:	call   0x10001077
10019556:	push   0x10074da0
1001955b:	lea    eax,[ebp-0x54]
1001955e:	push   eax
1001955f:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10019566:	call   0x100479b4
1001956b:	inc    ecx
1001956c:	mov    DWORD PTR [edi+0x8],ecx
1001956f:	mov    DWORD PTR [esi+0x4],eax
10019572:	mov    ecx,DWORD PTR [eax+0x4]
10019575:	mov    DWORD PTR [ecx],eax
10019577:	call   0x10059b0d
1001957c:	ret    0xc
1001957f:	push   0x24
10019581:	call   0x1004349e
10019586:	test   eax,eax
10019588:	pop    ecx
10019589:	je     0x1001958d
1001958b:	mov    DWORD PTR [eax],eax
1001958d:	lea    ecx,[eax+0x4]
10019590:	test   ecx,ecx
10019592:	je     0x10019596
10019594:	mov    DWORD PTR [ecx],eax
10019596:	ret    
10019597:	push   0x8
10019599:	mov    eax,0x100602d4
1001959e:	call   0x10059a68
100195a3:	push   0x24
100195a5:	call   0x1004349e
100195aa:	and    DWORD PTR [ebp-0x4],0x0
100195ae:	mov    esi,eax
100195b0:	test   esi,esi
100195b2:	pop    ecx
100195b3:	mov    DWORD PTR [ebp-0x14],esi
100195b6:	je     0x100195bd
100195b8:	mov    eax,DWORD PTR [ebp+0x8]
100195bb:	mov    DWORD PTR [esi],eax
100195bd:	lea    eax,[esi+0x4]
100195c0:	test   eax,eax
100195c2:	je     0x100195c9
100195c4:	mov    ecx,DWORD PTR [ebp+0xc]
100195c7:	mov    DWORD PTR [eax],ecx
100195c9:	push   DWORD PTR [ebp+0x10]
100195cc:	lea    ecx,[esi+0x8]
100195cf:	call   0x1000ff22
100195d4:	mov    eax,esi
100195d6:	call   0x10059b0d
100195db:	ret    0xc
100195de:	push   DWORD PTR [ebp-0x14]
100195e1:	call   0x10042e92
100195e6:	pop    ecx
100195e7:	push   0x0
100195e9:	push   0x0
100195eb:	call   0x100479b4
100195f0:	int3   
100195f1:	push   0x14
100195f3:	mov    eax,0x10060ca0
100195f8:	call   0x10059a68
100195fd:	mov    edi,DWORD PTR [ebp+0x18]
10019600:	mov    esi,DWORD PTR [ebp+0x1c]
10019603:	and    DWORD PTR [ebp-0x4],0x0
10019607:	mov    DWORD PTR [ebp-0x18],edi
1001960a:	mov    DWORD PTR [ebp-0x14],esi
1001960d:	test   edi,edi
1001960f:	je     0x10019616
10019611:	cmp    edi,DWORD PTR [ebp+0x20]
10019614:	je     0x1001961b
10019616:	call   0x100433b0
1001961b:	cmp    esi,DWORD PTR [ebp+0x24]
1001961e:	je     0x100196b2
10019624:	test   edi,edi
10019626:	jne    0x1001962d
10019628:	call   0x100433b0
1001962d:	cmp    esi,DWORD PTR [edi+0x4]
10019630:	jne    0x10019637
10019632:	call   0x100433b0
10019637:	push   DWORD PTR [ebp+0x14]
1001963a:	mov    edi,DWORD PTR [ebp+0x8]
1001963d:	push   DWORD PTR [ebp+0x10]
10019640:	add    esi,0x8
10019643:	push   esi
10019644:	call   0x1001950f
10019649:	lea    esi,[ebp+0x18]
1001964c:	call   0x10026666
10019651:	mov    esi,DWORD PTR [ebp+0x1c]
10019654:	mov    edi,DWORD PTR [ebp+0x18]
10019657:	jmp    0x1001960d
10019659:	mov    edi,DWORD PTR [ebp+0x14]
1001965c:	mov    eax,DWORD PTR [ebp-0x18]
1001965f:	test   eax,eax
10019661:	je     0x10019668
10019663:	cmp    eax,DWORD PTR [ebp+0x18]
10019666:	je     0x1001966d
10019668:	call   0x100433b0
1001966d:	mov    eax,DWORD PTR [ebp-0x14]
10019670:	cmp    eax,DWORD PTR [ebp+0x1c]
10019673:	je     0x100196a9
10019675:	mov    ebx,DWORD PTR [ebp+0x10]
10019678:	test   ebx,ebx
1001967a:	mov    DWORD PTR [ebp+0x24],edi
1001967d:	jne    0x10019684
1001967f:	call   0x100433b0
10019684:	mov    esi,DWORD PTR [edi+0x4]
10019687:	cmp    esi,DWORD PTR [ebx+0x4]
1001968a:	jne    0x10019691
1001968c:	call   0x100433b0
10019691:	push   esi
10019692:	push   ebx
10019693:	mov    ebx,DWORD PTR [ebp+0x8]
10019696:	lea    eax,[ebp-0x20]
10019699:	push   eax
1001969a:	call   0x100196ba
1001969f:	lea    esi,[ebp-0x18]
100196a2:	call   0x10026666
100196a7:	jmp    0x1001965c
100196a9:	push   0x0
100196ab:	push   0x0
100196ad:	call   0x100479b4
100196b2:	call   0x10059b0d
100196b7:	ret    0x20
100196ba:	push   ebp
100196bb:	mov    ebp,esp
100196bd:	push   ecx
100196be:	push   ecx
100196bf:	mov    eax,DWORD PTR [ebp+0xc]
100196c2:	push   esi
100196c3:	push   edi
100196c4:	mov    edi,DWORD PTR [ebp+0x10]
100196c7:	lea    esi,[ebp+0xc]
100196ca:	mov    DWORD PTR [ebp-0x8],eax
100196cd:	call   0x10026666
100196d2:	cmp    edi,DWORD PTR [ebx+0x4]
100196d5:	je     0x100196fc
100196d7:	mov    eax,DWORD PTR [edi+0x4]
100196da:	mov    ecx,DWORD PTR [edi]
100196dc:	mov    DWORD PTR [eax],ecx
100196de:	mov    ecx,DWORD PTR [edi+0x4]
100196e1:	mov    eax,DWORD PTR [edi]
100196e3:	push   0x0
100196e5:	mov    DWORD PTR [eax+0x4],ecx
100196e8:	push   0x1
100196ea:	lea    ecx,[edi+0x8]
100196ed:	call   0x100012f0
100196f2:	push   edi
100196f3:	call   0x10042e92
100196f8:	dec    DWORD PTR [ebx+0x8]
100196fb:	pop    ecx
100196fc:	mov    ecx,DWORD PTR [ebp+0xc]
100196ff:	mov    eax,DWORD PTR [ebp+0x8]
10019702:	mov    DWORD PTR [eax],ecx
10019704:	mov    ecx,DWORD PTR [ebp+0x10]
10019707:	pop    edi
10019708:	mov    DWORD PTR [eax+0x4],ecx
1001970b:	pop    esi
1001970c:	leave  
1001970d:	ret    0xc
10019710:	push   esi
10019711:	push   0x1006cd08
10019716:	lea    esi,[edi+0x4]
10019719:	call   0x1000658e
1001971e:	test   al,al
10019720:	pop    ecx
10019721:	pop    esi
10019722:	je     0x1001972d
10019724:	cmp    DWORD PTR [edi],0x0
10019727:	jne    0x1001972d
10019729:	xor    eax,eax
1001972b:	inc    eax
1001972c:	ret    
1001972d:	xor    eax,eax
1001972f:	ret    
10019730:	push   ebp
10019731:	mov    ebp,esp
10019733:	push   ecx
10019734:	mov    ecx,DWORD PTR [ebp+0x8]
10019737:	and    DWORD PTR [ebp-0x4],0x0
1001973b:	add    eax,0x4
1001973e:	push   eax
1001973f:	call   0x100011a7
10019744:	mov    eax,DWORD PTR [ebp+0x8]
10019747:	leave  
10019748:	ret    0x4
1001974b:	push   0x0
1001974d:	mov    eax,0x10061d31
10019752:	call   0x10059a35
10019757:	mov    edi,DWORD PTR [ebp+0x8]
1001975a:	call   0x1001a156
1001975f:	lea    ecx,[edi+0x4]
10019762:	mov    DWORD PTR [ecx],eax
10019764:	mov    BYTE PTR [eax+0x4d],0x1
10019768:	mov    eax,DWORD PTR [ecx]
1001976a:	mov    DWORD PTR [eax+0x4],eax
1001976d:	mov    eax,DWORD PTR [ecx]
1001976f:	mov    DWORD PTR [eax],eax
10019771:	mov    ecx,DWORD PTR [ecx]
10019773:	xor    ebx,ebx
10019775:	mov    DWORD PTR [ecx+0x8],ecx
10019778:	mov    DWORD PTR [edi+0x8],ebx
1001977b:	lea    esi,[edi+0xc]
1001977e:	mov    DWORD PTR [ebp-0x4],ebx
10019781:	call   0x10013e52
10019786:	mov    eax,DWORD PTR [ebp+0xc]
10019789:	push   ebx
1001978a:	mov    DWORD PTR [edi+0x1c],eax
1001978d:	mov    eax,DWORD PTR [ebp+0x10]
10019790:	push   ebx
10019791:	push   ebx
10019792:	mov    DWORD PTR [edi+0x20],eax
10019795:	call   DWORD PTR ds:0x10066074
1001979b:	mov    DWORD PTR [edi+0x18],eax
1001979e:	mov    eax,edi
100197a0:	call   0x10059b0d
100197a5:	ret    0xc
100197a8:	push   ebp
100197a9:	mov    ebp,esp
100197ab:	and    esp,0xfffffff8
100197ae:	push   0xffffffff
100197b0:	push   0x10061d01
100197b5:	mov    eax,fs:0x0
100197bb:	push   eax
100197bc:	sub    esp,0x60
100197bf:	mov    eax,ds:0x1007e030
100197c4:	xor    eax,esp
100197c6:	mov    DWORD PTR [esp+0x58],eax
100197ca:	push   esi
100197cb:	mov    eax,ds:0x1007e030
100197d0:	xor    eax,esp
100197d2:	push   eax
100197d3:	lea    eax,[esp+0x68]
100197d7:	mov    fs:0x0,eax
100197dd:	mov    eax,DWORD PTR [ebp+0x8]
100197e0:	push   eax
100197e1:	lea    esi,[esp+0x2c]
100197e5:	call   0x10030410
100197ea:	pop    ecx
100197eb:	lea    ecx,[esp+0x44]
100197ef:	push   ecx
100197f0:	xor    esi,esi
100197f2:	mov    ecx,eax
100197f4:	mov    DWORD PTR [esp+0x74],esi
100197f8:	call   0x1002fb70
100197fd:	pop    ecx
100197fe:	push   esi
100197ff:	push   0x1
10019801:	lea    ecx,[esp+0x30]
10019805:	mov    BYTE PTR [esp+0x78],0x2
1001980a:	call   0x100012f0
1001980f:	mov    eax,DWORD PTR [ebp+0xc]
10019812:	push   ebx
10019813:	lea    ecx,[esp+0x10]
10019817:	mov    DWORD PTR [esp+0xc],eax
1001981b:	call   0x100011a7
10019820:	lea    eax,[esp+0x8]
10019824:	push   eax
10019825:	lea    edx,[esp+0x48]
10019829:	mov    ecx,edi
1001982b:	mov    BYTE PTR [esp+0x74],0x3
10019830:	call   0x100199e1
10019835:	push   esi
10019836:	push   0x1
10019838:	lea    ecx,[esp+0x14]
1001983c:	call   0x100012f0
10019841:	push   esi
10019842:	push   0x1
10019844:	lea    ecx,[esp+0x4c]
10019848:	call   0x100012f0
1001984d:	mov    ecx,DWORD PTR [esp+0x68]
10019851:	mov    DWORD PTR fs:0x0,ecx
10019858:	pop    ecx
10019859:	pop    esi
1001985a:	mov    ecx,DWORD PTR [esp+0x58]
1001985e:	xor    ecx,esp
10019860:	call   0x10042e97
10019865:	mov    esp,ebp
10019867:	pop    ebp
10019868:	ret    0x8
1001986b:	push   ebp
1001986c:	mov    ebp,esp
1001986e:	and    esp,0xfffffff8
10019871:	push   0xffffffff
10019873:	push   0x10062a8c
10019878:	mov    eax,fs:0x0
1001987e:	push   eax
1001987f:	sub    esp,0x90
10019885:	mov    eax,ds:0x1007e030
1001988a:	xor    eax,esp
1001988c:	mov    DWORD PTR [esp+0x88],eax
10019893:	push   ebx
10019894:	push   esi
10019895:	push   edi
10019896:	mov    eax,ds:0x1007e030
1001989b:	xor    eax,esp
1001989d:	push   eax
1001989e:	lea    eax,[esp+0xa0]
100198a5:	mov    fs:0x0,eax
100198ab:	mov    eax,DWORD PTR [ebp+0x8]
100198ae:	mov    DWORD PTR [esp+0x1c],eax
100198b2:	mov    eax,DWORD PTR [ebp+0xc]
100198b5:	mov    esi,ecx
100198b7:	mov    edi,0x1006cd08
100198bc:	xor    ebx,ebx
100198be:	push   edi
100198bf:	lea    ecx,[esp+0x44]
100198c3:	mov    DWORD PTR [esp+0x1c],eax
100198c7:	mov    DWORD PTR [esp+0x24],ebx
100198cb:	call   0x100011cd
100198d0:	lea    eax,[esp+0x40]
100198d4:	mov    DWORD PTR [esp+0xa8],ebx
100198db:	push   eax
100198dc:	lea    ecx,[esp+0x80]
100198e3:	mov    DWORD PTR [esp+0x7c],ebx
100198e7:	call   0x100011a7
100198ec:	push   ebx
100198ed:	push   0x1
100198ef:	lea    ecx,[esp+0x48]
100198f3:	mov    BYTE PTR [esp+0xb0],0x2
100198fb:	call   0x100012f0
10019900:	push   esi
10019901:	lea    esi,[esp+0x60]
10019905:	call   0x10030410
1001990a:	pop    ecx
1001990b:	lea    ecx,[esp+0x24]
1001990f:	push   ecx
10019910:	mov    ecx,eax
10019912:	mov    BYTE PTR [esp+0xac],0x3
1001991a:	call   0x1002fb70
1001991f:	pop    ecx
10019920:	lea    ecx,[esp+0x78]
10019924:	push   ecx
10019925:	push   eax
10019926:	push   DWORD PTR [esp+0x24]
1001992a:	mov    BYTE PTR [esp+0xb4],0x4
10019932:	call   0x10019c33
10019937:	xor    esi,esi
10019939:	push   ebx
1001993a:	inc    esi
1001993b:	push   esi
1001993c:	lea    ecx,[esp+0x2c]
10019940:	mov    BYTE PTR [esp+0x1f],al
10019944:	call   0x100012f0
10019949:	push   ebx
1001994a:	push   esi
1001994b:	lea    ecx,[esp+0x64]
1001994f:	mov    BYTE PTR [esp+0xb0],0x2
10019957:	call   0x100012f0
1001995c:	cmp    BYTE PTR [esp+0x17],bl
10019960:	je     0x1001997b
10019962:	mov    eax,DWORD PTR [esp+0x78]
10019966:	mov    edi,DWORD PTR [esp+0x18]
1001996a:	mov    DWORD PTR [edi],eax
1001996c:	lea    eax,[esp+0x7c]
10019970:	push   eax
10019971:	lea    ecx,[edi+0x4]
10019974:	call   0x100011a7
10019979:	jmp    0x100199ab
1001997b:	push   edi
1001997c:	lea    ecx,[esp+0x28]
10019980:	call   0x100011cd
10019985:	mov    edi,DWORD PTR [esp+0x18]
10019989:	lea    eax,[esp+0x24]
1001998d:	mov    BYTE PTR [esp+0xa8],0x5
10019995:	push   eax
10019996:	lea    ecx,[edi+0x4]
10019999:	mov    DWORD PTR [edi],ebx
1001999b:	call   0x100011a7
100199a0:	push   ebx
100199a1:	push   esi
100199a2:	lea    ecx,[esp+0x2c]
100199a6:	call   0x100012f0
100199ab:	push   ebx
100199ac:	push   esi
100199ad:	lea    ecx,[esp+0x84]
100199b4:	call   0x100012f0
100199b9:	mov    eax,edi
100199bb:	mov    ecx,DWORD PTR [esp+0xa0]
100199c2:	mov    DWORD PTR fs:0x0,ecx
100199c9:	pop    ecx
100199ca:	pop    edi
100199cb:	pop    esi
100199cc:	pop    ebx
100199cd:	mov    ecx,DWORD PTR [esp+0x88]
100199d4:	xor    ecx,esp
100199d6:	call   0x10042e97
100199db:	mov    esp,ebp
100199dd:	pop    ebp
100199de:	ret    0x8
100199e1:	push   0xf0
100199e6:	mov    eax,0x10061cc1
100199eb:	call   0x10059ad4
100199f0:	mov    eax,DWORD PTR [ebp+0x8]
100199f3:	mov    edi,ecx
100199f5:	push   0x1f4
100199fa:	push   DWORD PTR [edi+0x18]
100199fd:	mov    esi,edx
100199ff:	mov    DWORD PTR [ebp-0x50],edi
10019a02:	mov    DWORD PTR [ebp-0x4c],esi
10019a05:	mov    DWORD PTR [ebp-0x54],eax
10019a08:	call   DWORD PTR ds:0x10066084
10019a0e:	test   eax,eax
10019a10:	jne    0x10019adb
10019a16:	and    DWORD PTR [ebp-0x4],eax
10019a19:	push   edi
10019a1a:	call   0x10019cf7
10019a1f:	push   esi
10019a20:	lea    ebx,[ebp-0x44]
10019a23:	mov    esi,edi
10019a25:	call   0x10019ece
10019a2a:	mov    ebx,DWORD PTR [edi+0x4]
10019a2d:	xor    esi,esi
10019a2f:	cmp    DWORD PTR [ebp-0x44],esi
10019a32:	je     0x10019a39
10019a34:	cmp    DWORD PTR [ebp-0x44],edi
10019a37:	je     0x10019a3e
10019a39:	call   0x100433b0
10019a3e:	cmp    DWORD PTR [ebp-0x40],ebx
10019a41:	je     0x10019ae3
10019a47:	lea    ebx,[edi+0xc]
10019a4a:	mov    eax,DWORD PTR [ebx+0x4]
10019a4d:	mov    DWORD PTR [ebp-0x58],eax
10019a50:	lea    eax,[ebp-0x60]
10019a53:	mov    DWORD PTR [ebp-0x60],esi
10019a56:	mov    DWORD PTR [ebp-0x5c],ebx
10019a59:	call   0x10013748
10019a5e:	mov    esi,DWORD PTR [eax]
10019a60:	inc    esi
10019a61:	cmp    DWORD PTR [ebp-0x44],0x0
10019a65:	mov    DWORD PTR [ebp-0x48],esi
10019a68:	jne    0x10019a6f
10019a6a:	call   0x100433b0
10019a6f:	mov    edi,DWORD PTR [ebp-0x40]
10019a72:	mov    eax,DWORD PTR [ebp-0x44]
10019a75:	cmp    edi,DWORD PTR [eax+0x4]
10019a78:	jne    0x10019a7f
10019a7a:	call   0x100433b0
10019a7f:	lea    edx,[edi+0x48]
10019a82:	mov    eax,ebx
10019a84:	mov    DWORD PTR [ebp-0x4c],edx
10019a87:	call   0x100133aa
10019a8c:	lea    eax,[ebp-0x48]
10019a8f:	push   eax
10019a90:	lea    edi,[ebp-0x60]
10019a93:	call   0x100132f1
10019a98:	mov    edi,DWORD PTR [ebp-0x40]
10019a9b:	mov    ebx,DWORD PTR [ebp-0x44]
10019a9e:	cmp    edi,DWORD PTR [ebx+0x4]
10019aa1:	jne    0x10019aa8
10019aa3:	call   0x100433b0
10019aa8:	mov    eax,DWORD PTR [ebp-0x54]
10019aab:	mov    ecx,DWORD PTR [eax]
10019aad:	push   0xffffffff
10019aaf:	push   0x0
10019ab1:	add    eax,0x4
10019ab4:	mov    DWORD PTR [edi+0x28],ecx
10019ab7:	push   eax
10019ab8:	lea    ecx,[edi+0x2c]
10019abb:	call   0x10001241
10019ac0:	cmp    edi,DWORD PTR [ebx+0x4]
10019ac3:	jne    0x10019aca
10019ac5:	call   0x100433b0
10019aca:	mov    eax,DWORD PTR [ebp-0x4c]
10019acd:	mov    DWORD PTR [eax],esi
10019acf:	mov    eax,DWORD PTR [ebp-0x50]
10019ad2:	push   DWORD PTR [eax+0x18]
10019ad5:	call   DWORD PTR ds:0x10066094
10019adb:	call   0x10059b30
10019ae0:	ret    0x4
10019ae3:	push   0x1006cd08
10019ae8:	lea    ecx,[ebp-0x7c]
10019aeb:	call   0x100011cd
10019af0:	lea    eax,[ebp-0x7c]
10019af3:	mov    BYTE PTR [ebp-0x4],0x1
10019af7:	push   eax
10019af8:	lea    ecx,[ebp-0x38]
10019afb:	mov    DWORD PTR [ebp-0x3c],esi
10019afe:	call   0x100011a7
10019b03:	push   esi
10019b04:	push   0x1
10019b06:	lea    ecx,[ebp-0x7c]
10019b09:	call   0x100012f0
10019b0e:	mov    BYTE PTR [ebp-0x4],0x2
10019b12:	cmp    DWORD PTR [edi+0x14],esi
10019b15:	je     0x10019b33
10019b17:	mov    eax,DWORD PTR [edi+0x10]
10019b1a:	add    edi,0xc
10019b1d:	mov    DWORD PTR [ebp-0x58],eax
10019b20:	lea    eax,[ebp-0x60]
10019b23:	mov    DWORD PTR [ebp-0x60],esi
10019b26:	mov    DWORD PTR [ebp-0x5c],edi
10019b29:	call   0x10013748
10019b2e:	mov    eax,DWORD PTR [eax]
10019b30:	inc    eax
10019b31:	jmp    0x10019b35
10019b33:	xor    eax,eax
10019b35:	mov    DWORD PTR [ebp-0x48],eax
10019b38:	mov    DWORD PTR [ebp-0x1c],eax
10019b3b:	mov    eax,DWORD PTR [ebp-0x54]
10019b3e:	mov    ecx,DWORD PTR [eax]
10019b40:	push   0xffffffff
10019b42:	push   esi
10019b43:	add    eax,0x4
10019b46:	mov    DWORD PTR [ebp-0x3c],ecx
10019b49:	push   eax
10019b4a:	lea    ecx,[ebp-0x38]
10019b4d:	call   0x10001241
10019b52:	mov    eax,DWORD PTR [ebp-0x3c]
10019b55:	sub    esp,0x24
10019b58:	mov    esi,esp
10019b5a:	mov    DWORD PTR [esi],eax
10019b5c:	lea    eax,[ebp-0x38]
10019b5f:	mov    DWORD PTR [ebp-0x54],esp
10019b62:	push   eax
10019b63:	lea    ecx,[esi+0x4]
10019b66:	call   0x100011a7
10019b6b:	mov    eax,DWORD PTR [ebp-0x1c]
10019b6e:	mov    DWORD PTR [esi+0x20],eax
10019b71:	sub    esp,0x1c
10019b74:	mov    BYTE PTR [ebp-0x4],0x3
10019b78:	mov    ecx,esp
10019b7a:	mov    DWORD PTR [ebp-0x40],esp
10019b7d:	push   DWORD PTR [ebp-0x4c]
10019b80:	call   0x100011a7
10019b85:	lea    esi,[ebp-0xfc]
10019b8b:	mov    BYTE PTR [ebp-0x4],0x2
10019b8f:	call   0x1001a1ce
10019b94:	add    esp,0x40
10019b97:	mov    esi,eax
10019b99:	push   esi
10019b9a:	lea    ecx,[ebp-0xbc]
10019ba0:	mov    BYTE PTR [ebp-0x4],0x4
10019ba4:	call   0x100011a7
10019ba9:	lea    edi,[esi+0x1c]
10019bac:	lea    esi,[ebp-0xa0]
10019bb2:	mov    BYTE PTR [ebp-0x4],0x5
10019bb6:	call   0x10019cde
10019bbb:	mov    ebx,DWORD PTR [ebp-0x50]
10019bbe:	lea    eax,[ebp-0xbc]
10019bc4:	push   eax
10019bc5:	lea    edi,[ebp-0x60]
10019bc8:	mov    BYTE PTR [ebp-0x4],0x6
10019bcc:	call   0x10019e27
10019bd1:	xor    esi,esi
10019bd3:	xor    edi,edi
10019bd5:	push   esi
10019bd6:	inc    edi
10019bd7:	push   edi
10019bd8:	lea    ecx,[ebp-0x9c]
10019bde:	call   0x100012f0
10019be3:	push   esi
10019be4:	push   edi
10019be5:	lea    ecx,[ebp-0xbc]
10019beb:	call   0x100012f0
10019bf0:	push   esi
10019bf1:	push   edi
10019bf2:	lea    ecx,[ebp-0xdc]
10019bf8:	mov    BYTE PTR [ebp-0x4],0x2
10019bfc:	call   0x100012f0
10019c01:	push   esi
10019c02:	push   edi
10019c03:	lea    ecx,[ebp-0xfc]
10019c09:	call   0x100012f0
10019c0e:	lea    eax,[ebp-0x48]
10019c11:	push   eax
10019c12:	add    ebx,0xc
10019c15:	lea    edi,[ebp-0x60]
10019c18:	call   0x100132f1
10019c1d:	push   esi
10019c1e:	push   0x1
10019c20:	lea    ecx,[ebp-0x38]
10019c23:	call   0x100012f0
10019c28:	jmp    0x10019acf
10019c2d:	mov    eax,0x10019acf
10019c32:	ret    
10019c33:	push   0x10
10019c35:	mov    eax,0x10062a43
10019c3a:	call   0x10059a68
10019c3f:	mov    esi,DWORD PTR [ebp+0x8]
10019c42:	push   0x1f4
10019c47:	push   DWORD PTR [esi+0x18]
10019c4a:	mov    BYTE PTR [ebp-0x11],0x0
10019c4e:	call   DWORD PTR ds:0x10066084
10019c54:	test   eax,eax
10019c56:	je     0x10019c5c
10019c58:	xor    al,al
10019c5a:	jmp    0x10019cd6
10019c5c:	push   DWORD PTR [ebp+0xc]
10019c5f:	and    DWORD PTR [ebp-0x4],0x0
10019c63:	lea    ebx,[ebp-0x1c]
10019c66:	call   0x10019ece
10019c6b:	cmp    DWORD PTR [ebp-0x1c],0x0
10019c6f:	mov    edi,DWORD PTR [esi+0x4]
10019c72:	je     0x10019c79
10019c74:	cmp    DWORD PTR [ebp-0x1c],esi
10019c77:	je     0x10019c7e
10019c79:	call   0x100433b0
10019c7e:	mov    ebx,DWORD PTR [ebp-0x18]
10019c81:	cmp    ebx,edi
10019c83:	je     0x10019cca
10019c85:	mov    edi,DWORD PTR [ebp-0x1c]
10019c88:	test   edi,edi
10019c8a:	jne    0x10019c91
10019c8c:	call   0x100433b0
10019c91:	cmp    ebx,DWORD PTR [edi+0x4]
10019c94:	jne    0x10019c9b
10019c96:	call   0x100433b0
10019c9b:	mov    ecx,DWORD PTR [ebx+0x28]
10019c9e:	mov    eax,DWORD PTR [ebp+0x10]
10019ca1:	push   0xffffffff
10019ca3:	push   0x0
10019ca5:	add    ebx,0x2c
10019ca8:	mov    DWORD PTR [eax],ecx
10019caa:	push   ebx
10019cab:	lea    ecx,[eax+0x4]
10019cae:	call   0x10001241
10019cb3:	mov    BYTE PTR [ebp-0x11],0x1
10019cb7:	jmp    0x10019cca
10019cb9:	push   0x4
10019cbb:	call   0x10037980
10019cc0:	pop    ecx
10019cc1:	mov    eax,0x10019cc7
10019cc6:	ret    
10019cc7:	mov    esi,DWORD PTR [ebp+0x8]
10019cca:	push   DWORD PTR [esi+0x18]
10019ccd:	call   DWORD PTR ds:0x10066094
10019cd3:	mov    al,BYTE PTR [ebp-0x11]
10019cd6:	call   0x10059b0d
10019cdb:	ret    0xc
10019cde:	mov    eax,DWORD PTR [edi]
10019ce0:	mov    DWORD PTR [esi],eax
10019ce2:	lea    eax,[edi+0x4]
10019ce5:	push   eax
10019ce6:	lea    ecx,[esi+0x4]
10019ce9:	call   0x100011a7
10019cee:	mov    eax,DWORD PTR [edi+0x20]
10019cf1:	mov    DWORD PTR [esi+0x20],eax
10019cf4:	mov    eax,esi
10019cf6:	ret    
10019cf7:	push   0x38
10019cf9:	mov    eax,0x10061c6d
10019cfe:	call   0x10059a35
10019d03:	mov    edi,DWORD PTR [ebp+0x8]
10019d06:	mov    ecx,DWORD PTR [edi+0x1c]
10019d09:	mov    edx,DWORD PTR [edi+0x20]
10019d0c:	mov    eax,DWORD PTR [edi+0x8]
10019d0f:	add    edx,ecx
10019d11:	cmp    eax,edx
10019d13:	jbe    0x10019e1f
10019d19:	and    DWORD PTR [ebp-0x10],0x0
10019d1d:	test   ecx,ecx
10019d1f:	lea    ebx,[edi+0xc]
10019d22:	mov    eax,DWORD PTR [ebx+0x4]
10019d25:	mov    eax,DWORD PTR [eax]
10019d27:	mov    DWORD PTR [ebp-0x14],ebx
10019d2a:	mov    DWORD PTR [ebp-0x1c],ebx
10019d2d:	mov    DWORD PTR [ebp-0x18],eax
10019d30:	je     0x10019d45
10019d32:	lea    esi,[ebp-0x1c]
10019d35:	call   0x10001e71
10019d3a:	inc    DWORD PTR [ebp-0x10]
10019d3d:	mov    eax,DWORD PTR [ebp-0x10]
10019d40:	cmp    eax,DWORD PTR [edi+0x1c]
10019d43:	jne    0x10019d32
10019d45:	lea    esi,[ebp-0x1c]
10019d48:	call   0x1002088e
10019d4d:	mov    eax,DWORD PTR [eax]
10019d4f:	mov    DWORD PTR [ebp-0x10],eax
10019d52:	call   0x10014080
10019d57:	mov    DWORD PTR [ebp-0x34],eax
10019d5a:	mov    BYTE PTR [eax+0x11],0x1
10019d5e:	mov    eax,DWORD PTR [ebp-0x34]
10019d61:	mov    DWORD PTR [eax+0x4],eax
10019d64:	mov    eax,DWORD PTR [ebp-0x34]
10019d67:	mov    DWORD PTR [eax],eax
10019d69:	mov    eax,DWORD PTR [ebp-0x34]
10019d6c:	mov    DWORD PTR [eax+0x8],eax
10019d6f:	and    DWORD PTR [ebp-0x30],0x0
10019d73:	and    DWORD PTR [ebp-0x4],0x0
10019d77:	mov    eax,DWORD PTR [edi+0x4]
10019d7a:	mov    esi,DWORD PTR [eax]
10019d7c:	mov    DWORD PTR [ebp-0x1c],edi
10019d7f:	mov    DWORD PTR [ebp-0x18],esi
10019d82:	cmp    DWORD PTR [ebp-0x1c],0x0
10019d86:	mov    eax,DWORD PTR [edi+0x4]
10019d89:	mov    DWORD PTR [ebp-0x20],eax
10019d8c:	je     0x10019d93
10019d8e:	cmp    DWORD PTR [ebp-0x1c],edi
10019d91:	je     0x10019d98
10019d93:	call   0x100433b0
10019d98:	cmp    esi,DWORD PTR [ebp-0x20]
10019d9b:	je     0x10019dfb
10019d9d:	cmp    DWORD PTR [ebp-0x1c],0x0
10019da1:	jne    0x10019da8
10019da3:	call   0x100433b0
10019da8:	mov    eax,DWORD PTR [ebp-0x1c]
10019dab:	cmp    esi,DWORD PTR [eax+0x4]
10019dae:	jne    0x10019db5
10019db0:	call   0x100433b0
10019db5:	lea    ecx,[esi+0x48]
10019db8:	mov    eax,DWORD PTR [ecx]
10019dba:	cmp    eax,DWORD PTR [ebp-0x10]
10019dbd:	jae    0x10019dd7
10019dbf:	push   esi
10019dc0:	push   DWORD PTR [ebp-0x1c]
10019dc3:	lea    eax,[ebp-0x2c]
10019dc6:	push   eax
10019dc7:	push   edi
10019dc8:	call   0x100019f8
10019dcd:	mov    ecx,DWORD PTR [eax]
10019dcf:	mov    esi,DWORD PTR [eax+0x4]
10019dd2:	mov    DWORD PTR [ebp-0x1c],ecx
10019dd5:	jmp    0x10019d7f
10019dd7:	sub    eax,DWORD PTR [ebp-0x10]
10019dda:	push   ecx
10019ddb:	lea    edi,[ebp-0x44]
10019dde:	lea    ebx,[ebp-0x38]
10019de1:	mov    DWORD PTR [ecx],eax
10019de3:	call   0x100132f1
10019de8:	lea    esi,[ebp-0x1c]
10019deb:	call   0x10001e24
10019df0:	mov    esi,DWORD PTR [ebp-0x18]
10019df3:	mov    ebx,DWORD PTR [ebp-0x14]
10019df6:	mov    edi,DWORD PTR [ebp+0x8]
10019df9:	jmp    0x10019d82
10019dfb:	mov    eax,DWORD PTR [ebx+0x4]
10019dfe:	mov    ecx,DWORD PTR [ebp-0x34]
10019e01:	mov    DWORD PTR [ebx+0x4],ecx
10019e04:	mov    ecx,DWORD PTR [ebp-0x30]
10019e07:	mov    DWORD PTR [ebp-0x34],eax
10019e0a:	mov    eax,DWORD PTR [ebx+0x8]
10019e0d:	or     DWORD PTR [ebp-0x4],0xffffffff
10019e11:	mov    DWORD PTR [ebp-0x30],eax
10019e14:	lea    eax,[ebp-0x38]
10019e17:	mov    DWORD PTR [ebx+0x8],ecx
10019e1a:	call   0x10001496
10019e1f:	call   0x10059b0d
10019e24:	ret    0x4
10019e27:	push   ebp
10019e28:	mov    ebp,esp
10019e2a:	sub    esp,0x18
10019e2d:	mov    eax,DWORD PTR [ebx+0x4]
10019e30:	push   esi
10019e31:	mov    esi,DWORD PTR [eax+0x4]
10019e34:	mov    DWORD PTR [ebp-0x8],eax
10019e37:	mov    al,0x1
10019e39:	mov    BYTE PTR [ebp-0xc],al
10019e3c:	jmp    0x10019e5a
10019e3e:	mov    ecx,DWORD PTR [ebp+0x8]
10019e41:	lea    eax,[esi+0xc]
10019e44:	mov    DWORD PTR [ebp-0x8],esi
10019e47:	call   0x1000765d
10019e4c:	test   al,al
10019e4e:	mov    BYTE PTR [ebp-0xc],al
10019e51:	je     0x10019e57
10019e53:	mov    esi,DWORD PTR [esi]
10019e55:	jmp    0x10019e5a
10019e57:	mov    esi,DWORD PTR [esi+0x8]
10019e5a:	cmp    BYTE PTR [esi+0x4d],0x0
10019e5e:	je     0x10019e3e
10019e60:	test   al,al
10019e62:	mov    ecx,DWORD PTR [ebp-0x8]
10019e65:	mov    esi,ecx
10019e67:	mov    DWORD PTR [ebp-0x10],esi
10019e6a:	mov    DWORD PTR [ebp-0x14],ebx
10019e6d:	je     0x10019ea1
10019e6f:	mov    eax,DWORD PTR [ebx+0x4]
10019e72:	cmp    ecx,DWORD PTR [eax]
10019e74:	jne    0x10019e96
10019e76:	push   DWORD PTR [ebp+0x8]
10019e79:	push   0x1
10019e7b:	lea    eax,[ebp-0x14]
10019e7e:	push   eax
10019e7f:	mov    esi,ebx
10019e81:	call   0x10019f26
10019e86:	mov    ecx,DWORD PTR [eax]
10019e88:	mov    eax,DWORD PTR [eax+0x4]
10019e8b:	mov    DWORD PTR [edi],ecx
10019e8d:	mov    DWORD PTR [edi+0x4],eax
10019e90:	mov    BYTE PTR [edi+0x8],0x1
10019e94:	jmp    0x10019ec7
10019e96:	lea    esi,[ebp-0x14]
10019e99:	call   0x1001a071
10019e9e:	mov    esi,DWORD PTR [ebp-0x10]
10019ea1:	mov    eax,DWORD PTR [ebp+0x8]
10019ea4:	lea    ecx,[esi+0xc]
10019ea7:	call   0x1000765d
10019eac:	test   al,al
10019eae:	je     0x10019ebb
10019eb0:	push   DWORD PTR [ebp+0x8]
10019eb3:	mov    ecx,DWORD PTR [ebp-0x8]
10019eb6:	push   DWORD PTR [ebp-0xc]
10019eb9:	jmp    0x10019e7b
10019ebb:	mov    eax,DWORD PTR [ebp-0x14]
10019ebe:	mov    DWORD PTR [edi],eax
10019ec0:	mov    DWORD PTR [edi+0x4],esi
10019ec3:	mov    BYTE PTR [edi+0x8],0x0
10019ec7:	mov    eax,edi
10019ec9:	pop    esi
10019eca:	leave  
10019ecb:	ret    0x4
10019ece:	push   ebp
10019ecf:	mov    ebp,esp
10019ed1:	sub    esp,0x18
10019ed4:	push   edi
10019ed5:	push   DWORD PTR [ebp+0x8]
10019ed8:	mov    eax,esi
10019eda:	call   0x1001a0d2
10019edf:	test   esi,esi
10019ee1:	mov    edi,eax
10019ee3:	mov    DWORD PTR [ebp-0x8],edi
10019ee6:	jne    0x10019eed
10019ee8:	call   0x100433b0
10019eed:	cmp    edi,DWORD PTR [esi+0x4]
10019ef0:	mov    DWORD PTR [ebp-0xc],esi
10019ef3:	je     0x10019f09
10019ef5:	mov    ecx,DWORD PTR [ebp+0x8]
10019ef8:	lea    eax,[edi+0xc]
10019efb:	call   0x1000765d
10019f00:	test   al,al
10019f02:	jne    0x10019f09
10019f04:	lea    eax,[ebp-0xc]
10019f07:	jmp    0x10019f15
10019f09:	mov    eax,DWORD PTR [esi+0x4]
10019f0c:	mov    DWORD PTR [ebp-0x10],eax
10019f0f:	mov    DWORD PTR [ebp-0x14],esi
10019f12:	lea    eax,[ebp-0x14]
10019f15:	mov    ecx,DWORD PTR [eax]
10019f17:	mov    eax,DWORD PTR [eax+0x4]
10019f1a:	mov    DWORD PTR [ebx+0x4],eax
10019f1d:	mov    DWORD PTR [ebx],ecx
10019f1f:	mov    eax,ebx
10019f21:	pop    edi
10019f22:	leave  
10019f23:	ret    0x4
10019f26:	push   0x48
10019f28:	mov    eax,0x100605b3
10019f2d:	call   0x10059a35
10019f32:	mov    edi,ecx
10019f34:	cmp    DWORD PTR [esi+0x8],0x3fffffe
10019f3b:	jb     0x10019f6f
10019f3d:	push   0x1006d030
10019f42:	lea    ecx,[ebp-0x2c]
10019f45:	call   0x100011cd
10019f4a:	and    DWORD PTR [ebp-0x4],0x0
10019f4e:	lea    eax,[ebp-0x2c]
10019f51:	push   eax
10019f52:	lea    ecx,[ebp-0x54]
10019f55:	call   0x10001077
10019f5a:	push   0x10074da0
10019f5f:	lea    eax,[ebp-0x54]
10019f62:	push   eax
10019f63:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10019f6a:	call   0x100479b4
10019f6f:	push   DWORD PTR [ebp+0x10]
10019f72:	mov    eax,DWORD PTR [esi+0x4]
10019f75:	push   eax
10019f76:	push   edi
10019f77:	push   eax
10019f78:	call   0x1001a104
10019f7d:	inc    DWORD PTR [esi+0x8]
10019f80:	mov    ebx,eax
10019f82:	mov    eax,DWORD PTR [esi+0x4]
10019f85:	cmp    edi,eax
10019f87:	jne    0x10019f96
10019f89:	mov    DWORD PTR [eax+0x4],ebx
10019f8c:	mov    eax,DWORD PTR [esi+0x4]
10019f8f:	mov    DWORD PTR [eax],ebx
10019f91:	mov    eax,DWORD PTR [esi+0x4]
10019f94:	jmp    0x10019fb4
10019f96:	cmp    BYTE PTR [ebp+0xc],0x0
10019f9a:	je     0x10019fa9
10019f9c:	mov    DWORD PTR [edi],ebx
10019f9e:	mov    eax,DWORD PTR [esi+0x4]
10019fa1:	cmp    edi,DWORD PTR [eax]
10019fa3:	jne    0x10019fb7
10019fa5:	mov    DWORD PTR [eax],ebx
10019fa7:	jmp    0x10019fb7
10019fa9:	mov    DWORD PTR [edi+0x8],ebx
10019fac:	mov    eax,DWORD PTR [esi+0x4]
10019faf:	cmp    edi,DWORD PTR [eax+0x8]
10019fb2:	jne    0x10019fb7
10019fb4:	mov    DWORD PTR [eax+0x8],ebx
10019fb7:	mov    edi,ebx
10019fb9:	lea    eax,[ebx+0x4]
10019fbc:	jmp    0x1001a04b
10019fc1:	mov    ecx,DWORD PTR [eax]
10019fc3:	mov    edx,DWORD PTR [ecx+0x4]
10019fc6:	cmp    ecx,DWORD PTR [edx]
10019fc8:	jne    0x10019fff
10019fca:	mov    edx,DWORD PTR [edx+0x8]
10019fcd:	cmp    BYTE PTR [edx+0x4c],0x0
10019fd1:	je     0x1001a007
10019fd3:	cmp    edi,DWORD PTR [ecx+0x8]
10019fd6:	jne    0x10019fe0
10019fd8:	push   esi
10019fd9:	mov    edi,ecx
10019fdb:	call   0x10001da2
10019fe0:	mov    eax,DWORD PTR [edi+0x4]
10019fe3:	mov    BYTE PTR [eax+0x4c],0x1
10019fe7:	mov    eax,DWORD PTR [edi+0x4]
10019fea:	mov    eax,DWORD PTR [eax+0x4]
10019fed:	mov    BYTE PTR [eax+0x4c],0x0
10019ff1:	mov    eax,DWORD PTR [edi+0x4]
10019ff4:	mov    ecx,DWORD PTR [eax+0x4]
10019ff7:	push   esi
10019ff8:	call   0x10001de2
10019ffd:	jmp    0x1001a048
10019fff:	mov    edx,DWORD PTR [edx]
1001a001:	cmp    BYTE PTR [edx+0x4c],0x0
1001a005:	jne    0x1001a01f
1001a007:	mov    BYTE PTR [ecx+0x4c],0x1
1001a00b:	mov    BYTE PTR [edx+0x4c],0x1
1001a00f:	mov    ecx,DWORD PTR [eax]
1001a011:	mov    ecx,DWORD PTR [ecx+0x4]
1001a014:	mov    BYTE PTR [ecx+0x4c],0x0
1001a018:	mov    eax,DWORD PTR [eax]
1001a01a:	mov    edi,DWORD PTR [eax+0x4]
1001a01d:	jmp    0x1001a048
1001a01f:	cmp    edi,DWORD PTR [ecx]
1001a021:	jne    0x1001a02b
1001a023:	push   esi
1001a024:	mov    edi,ecx
1001a026:	call   0x10001de2
1001a02b:	mov    eax,DWORD PTR [edi+0x4]
1001a02e:	mov    BYTE PTR [eax+0x4c],0x1
1001a032:	mov    eax,DWORD PTR [edi+0x4]
1001a035:	mov    eax,DWORD PTR [eax+0x4]
1001a038:	mov    BYTE PTR [eax+0x4c],0x0
1001a03c:	mov    eax,DWORD PTR [edi+0x4]
1001a03f:	mov    ecx,DWORD PTR [eax+0x4]
1001a042:	push   esi
1001a043:	call   0x10001da2
1001a048:	lea    eax,[edi+0x4]
1001a04b:	mov    ecx,DWORD PTR [eax]
1001a04d:	cmp    BYTE PTR [ecx+0x4c],0x0
1001a051:	je     0x10019fc1
1001a057:	mov    eax,DWORD PTR [esi+0x4]
1001a05a:	mov    eax,DWORD PTR [eax+0x4]
1001a05d:	mov    BYTE PTR [eax+0x4c],0x1
1001a061:	mov    eax,DWORD PTR [ebp+0x8]
1001a064:	mov    DWORD PTR [eax+0x4],ebx
1001a067:	mov    DWORD PTR [eax],esi
1001a069:	call   0x10059b0d
1001a06e:	ret    0xc
1001a071:	push   ebx
1001a072:	xor    ebx,ebx
1001a074:	cmp    DWORD PTR [esi],ebx
1001a076:	jne    0x1001a07d
1001a078:	call   0x100433b0
1001a07d:	mov    eax,DWORD PTR [esi+0x4]
1001a080:	cmp    BYTE PTR [eax+0x4d],bl
1001a083:	je     0x1001a092
1001a085:	mov    eax,DWORD PTR [eax+0x8]
1001a088:	mov    DWORD PTR [esi+0x4],eax
1001a08b:	cmp    BYTE PTR [eax+0x4d],bl
1001a08e:	je     0x1001a0ce
1001a090:	jmp    0x1001a0c4
1001a092:	mov    ecx,DWORD PTR [eax]
1001a094:	cmp    BYTE PTR [ecx+0x4d],bl
1001a097:	jne    0x1001a0b4
1001a099:	jmp    0x1001a09d
1001a09b:	mov    ecx,eax
1001a09d:	mov    eax,DWORD PTR [ecx+0x8]
1001a0a0:	cmp    BYTE PTR [eax+0x4d],bl
1001a0a3:	je     0x1001a09b
1001a0a5:	mov    DWORD PTR [esi+0x4],ecx
1001a0a8:	jmp    0x1001a0ce
1001a0aa:	mov    ecx,DWORD PTR [esi+0x4]
1001a0ad:	cmp    ecx,DWORD PTR [eax]
1001a0af:	jne    0x1001a0bc
1001a0b1:	mov    DWORD PTR [esi+0x4],eax
1001a0b4:	mov    eax,DWORD PTR [eax+0x4]
1001a0b7:	cmp    BYTE PTR [eax+0x4d],bl
1001a0ba:	je     0x1001a0aa
1001a0bc:	mov    ecx,DWORD PTR [esi+0x4]
1001a0bf:	cmp    BYTE PTR [ecx+0x4d],bl
1001a0c2:	je     0x1001a0cb
1001a0c4:	call   0x100433b0
1001a0c9:	jmp    0x1001a0ce
1001a0cb:	mov    DWORD PTR [esi+0x4],eax
1001a0ce:	mov    eax,esi
1001a0d0:	pop    ebx
1001a0d1:	ret    
1001a0d2:	mov    eax,DWORD PTR [eax+0x4]
1001a0d5:	push   esi
1001a0d6:	mov    esi,DWORD PTR [eax+0x4]
1001a0d9:	push   edi
1001a0da:	mov    edi,eax
1001a0dc:	jmp    0x1001a0f7
1001a0de:	mov    eax,DWORD PTR [esp+0xc]
1001a0e2:	lea    ecx,[esi+0xc]
1001a0e5:	call   0x1000765d
1001a0ea:	test   al,al
1001a0ec:	je     0x1001a0f3
1001a0ee:	mov    esi,DWORD PTR [esi+0x8]
1001a0f1:	jmp    0x1001a0f7
1001a0f3:	mov    edi,esi
1001a0f5:	mov    esi,DWORD PTR [esi]
1001a0f7:	cmp    BYTE PTR [esi+0x4d],0x0
1001a0fb:	je     0x1001a0de
1001a0fd:	mov    eax,edi
1001a0ff:	pop    edi
1001a100:	pop    esi
1001a101:	ret    0x4
1001a104:	push   0x8
1001a106:	mov    eax,0x10060c85
1001a10b:	call   0x10059a68
1001a110:	push   0x50
1001a112:	call   0x1004349e
1001a117:	mov    ebx,eax
1001a119:	pop    ecx
1001a11a:	mov    DWORD PTR [ebp-0x14],ebx
1001a11d:	test   ebx,ebx
1001a11f:	mov    DWORD PTR [ebp-0x4],0x1
1001a126:	je     0x1001a139
1001a128:	push   DWORD PTR [ebp+0x10]
1001a12b:	mov    ecx,DWORD PTR [ebp+0x14]
1001a12e:	push   DWORD PTR [ebp+0xc]
1001a131:	push   DWORD PTR [ebp+0x8]
1001a134:	call   0x1001a180
1001a139:	mov    eax,ebx
1001a13b:	call   0x10059b0d
1001a140:	ret    0x10
1001a143:	push   DWORD PTR [ebp-0x14]
1001a146:	call   0x10042e92
1001a14b:	pop    ecx
1001a14c:	push   0x0
1001a14e:	push   0x0
1001a150:	call   0x100479b4
1001a155:	int3   
1001a156:	push   0x50
1001a158:	call   0x1004349e
1001a15d:	xor    edx,edx
1001a15f:	cmp    eax,edx
1001a161:	pop    ecx
1001a162:	je     0x1001a166
1001a164:	mov    DWORD PTR [eax],edx
1001a166:	lea    ecx,[eax+0x4]
1001a169:	cmp    ecx,edx
1001a16b:	je     0x1001a16f
1001a16d:	mov    DWORD PTR [ecx],edx
1001a16f:	lea    ecx,[eax+0x8]
1001a172:	cmp    ecx,edx
1001a174:	je     0x1001a178
1001a176:	mov    DWORD PTR [ecx],edx
1001a178:	mov    BYTE PTR [eax+0x4c],0x1
1001a17c:	mov    BYTE PTR [eax+0x4d],dl
1001a17f:	ret    
1001a180:	push   0x0
1001a182:	mov    eax,0x10062102
1001a187:	call   0x10059a35
1001a18c:	mov    edi,ecx
1001a18e:	mov    eax,DWORD PTR [ebp+0x8]
1001a191:	mov    DWORD PTR [ebx],eax
1001a193:	mov    eax,DWORD PTR [ebp+0xc]
1001a196:	mov    DWORD PTR [ebx+0x4],eax
1001a199:	mov    eax,DWORD PTR [ebp+0x10]
1001a19c:	lea    esi,[ebx+0xc]
1001a19f:	push   edi
1001a1a0:	mov    ecx,esi
1001a1a2:	mov    DWORD PTR [ebx+0x8],eax
1001a1a5:	mov    DWORD PTR [ebp+0x8],esi
1001a1a8:	call   0x100011a7
1001a1ad:	and    DWORD PTR [ebp-0x4],0x0
1001a1b1:	add    edi,0x1c
1001a1b4:	add    esi,0x1c
1001a1b7:	call   0x10019cde
1001a1bc:	mov    BYTE PTR [ebx+0x4c],0x0
1001a1c0:	mov    BYTE PTR [ebx+0x4d],0x0
1001a1c4:	mov    eax,ebx
1001a1c6:	call   0x10059b0d
1001a1cb:	ret    0xc
1001a1ce:	push   0x8
1001a1d0:	mov    eax,0x10060c65
1001a1d5:	call   0x10059a35
1001a1da:	and    DWORD PTR [ebp-0x14],0x0
1001a1de:	mov    DWORD PTR [ebp-0x10],esi
1001a1e1:	lea    eax,[ebp+0x8]
1001a1e4:	push   eax
1001a1e5:	mov    ecx,esi
1001a1e7:	mov    DWORD PTR [ebp-0x4],0x1
1001a1ee:	call   0x100011a7
1001a1f3:	mov    BYTE PTR [ebp-0x4],0x2
1001a1f7:	mov    eax,DWORD PTR [ebp+0x24]
1001a1fa:	mov    DWORD PTR [esi+0x1c],eax
1001a1fd:	lea    eax,[ebp+0x28]
1001a200:	push   eax
1001a201:	lea    ecx,[esi+0x20]
1001a204:	call   0x100011a7
1001a209:	mov    eax,DWORD PTR [ebp+0x44]
1001a20c:	push   0x0
1001a20e:	push   0x1
1001a210:	lea    ecx,[ebp+0x8]
1001a213:	mov    DWORD PTR [esi+0x3c],eax
1001a216:	call   0x100012f0
1001a21b:	push   0x0
1001a21d:	push   0x1
1001a21f:	lea    ecx,[ebp+0x28]
1001a222:	call   0x100012f0
1001a227:	mov    eax,esi
1001a229:	call   0x10059b0d
1001a22e:	ret    
1001a22f:	push   0xd4
1001a234:	mov    eax,0x10061c47
1001a239:	call   0x10059a68
1001a23e:	mov    ebx,DWORD PTR [ebp+0x8]
1001a241:	push   0x1f4
1001a246:	push   DWORD PTR [ebx+0x18]
1001a249:	call   DWORD PTR ds:0x10066084
1001a24f:	test   eax,eax
1001a251:	jne    0x1001a50c
1001a257:	and    DWORD PTR [ebp-0x4],eax
1001a25a:	cmp    DWORD PTR [ebx+0x8],eax
1001a25d:	jbe    0x1001a2a2
1001a25f:	push   0x1
1001a261:	lea    eax,[ebp-0x2c]
1001a264:	push   eax
1001a265:	call   0x100349f0
1001a26a:	lea    eax,[ebp-0x2c]
1001a26d:	push   eax
1001a26e:	mov    BYTE PTR [ebp-0x4],0x1
1001a272:	call   0x10036060
1001a277:	mov    esi,eax
1001a279:	test   esi,esi
1001a27b:	ja     0x1001a280
1001a27d:	xor    esi,esi
1001a27f:	inc    esi
1001a280:	cmp    DWORD PTR [ebx+0x8],esi
1001a283:	jb     0x1001a299
1001a285:	mov    eax,DWORD PTR [ebx+0x4]
1001a288:	push   DWORD PTR [eax]
1001a28a:	lea    eax,[ebp-0x38]
1001a28d:	push   ebx
1001a28e:	push   eax
1001a28f:	call   0x1001aed9
1001a294:	mov    ebx,DWORD PTR [ebp+0x8]
1001a297:	jmp    0x1001a280
1001a299:	push   DWORD PTR [ebp-0x2c]
1001a29c:	call   DWORD PTR ds:0x10066070
1001a2a2:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a2a6:	push   DWORD PTR [ebp+0xc]
1001a2a9:	lea    ecx,[ebp-0x9c]
1001a2af:	call   0x100011a7
1001a2b4:	push   DWORD PTR [ebp+0x10]
1001a2b7:	lea    ecx,[ebp-0x80]
1001a2ba:	mov    DWORD PTR [ebp-0x4],0x3
1001a2c1:	call   0x100011a7
1001a2c6:	push   DWORD PTR [ebp+0x14]
1001a2c9:	lea    ecx,[ebp-0x64]
1001a2cc:	mov    BYTE PTR [ebp-0x4],0x4
1001a2d0:	call   0x100011a7
1001a2d5:	mov    eax,DWORD PTR [ebp+0x18]
1001a2d8:	mov    DWORD PTR [ebp-0x48],eax
1001a2db:	mov    eax,DWORD PTR [ebp+0x1c]
1001a2de:	mov    DWORD PTR [ebp-0x44],eax
1001a2e1:	mov    eax,DWORD PTR [ebp+0x20]
1001a2e4:	mov    DWORD PTR [ebp-0x40],eax
1001a2e7:	mov    eax,DWORD PTR [ebp+0x24]
1001a2ea:	mov    DWORD PTR [ebp-0x3c],eax
1001a2ed:	mov    DWORD PTR [ebp-0x4],0x5
1001a2f4:	push   DWORD PTR [ebx+0x4]
1001a2f7:	lea    eax,[ebp-0x9c]
1001a2fd:	push   ebx
1001a2fe:	push   eax
1001a2ff:	mov    edi,ebx
1001a301:	call   0x1001afdb
1001a306:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a30a:	lea    esi,[ebp-0x9c]
1001a310:	call   0x1001a514
1001a315:	inc    DWORD PTR [ebx+0x1c]
1001a318:	call   0x1001b04b
1001a31d:	xor    esi,esi
1001a31f:	mov    DWORD PTR [ebp-0x24],eax
1001a322:	mov    DWORD PTR [ebp-0x20],esi
1001a325:	mov    DWORD PTR [ebp-0x4],0x6
1001a32c:	call   0x1001b07b
1001a331:	mov    DWORD PTR [ebp-0x18],eax
1001a334:	mov    DWORD PTR [ebp-0x14],esi
1001a337:	mov    BYTE PTR [ebp-0x4],0x7
1001a33b:	cmp    DWORD PTR [ebx+0x14],esi
1001a33e:	je     0x1001a423
1001a344:	mov    eax,DWORD PTR [ebx+0x10]
1001a347:	mov    esi,DWORD PTR [eax]
1001a349:	cmp    esi,eax
1001a34b:	jne    0x1001a352
1001a34d:	call   0x100433b0
1001a352:	mov    eax,DWORD PTR [esi+0x8]
1001a355:	cmp    eax,DWORD PTR [ebx+0x1c]
1001a358:	jg     0x1001a3cb
1001a35a:	mov    eax,DWORD PTR [ebx+0x10]
1001a35d:	mov    edi,DWORD PTR [eax]
1001a35f:	cmp    edi,eax
1001a361:	jne    0x1001a368
1001a363:	call   0x100433b0
1001a368:	mov    ecx,DWORD PTR [ebp-0x18]
1001a36b:	lea    eax,[edi+0xc]
1001a36e:	push   eax
1001a36f:	lea    edi,[ecx+0x4]
1001a372:	push   DWORD PTR [edi]
1001a374:	push   ecx
1001a375:	call   0x10026c74
1001a37a:	mov    ecx,0x3fffffff
1001a37f:	sub    ecx,DWORD PTR [ebp-0x14]
1001a382:	cmp    ecx,0x1
1001a385:	jb     0x1001a493
1001a38b:	inc    DWORD PTR [ebp-0x14]
1001a38e:	mov    DWORD PTR [edi],eax
1001a390:	mov    ecx,DWORD PTR [eax+0x4]
1001a393:	mov    DWORD PTR [ecx],eax
1001a395:	mov    eax,DWORD PTR [ebx+0x10]
1001a398:	mov    edi,DWORD PTR [eax]
1001a39a:	cmp    edi,eax
1001a39c:	jne    0x1001a3a3
1001a39e:	call   0x100433b0
1001a3a3:	cmp    edi,DWORD PTR [ebx+0x10]
1001a3a6:	je     0x1001a3c1
1001a3a8:	mov    eax,DWORD PTR [edi+0x4]
1001a3ab:	mov    ecx,DWORD PTR [edi]
1001a3ad:	mov    DWORD PTR [eax],ecx
1001a3af:	mov    eax,DWORD PTR [edi]
1001a3b1:	mov    ecx,DWORD PTR [edi+0x4]
1001a3b4:	push   edi
1001a3b5:	mov    DWORD PTR [eax+0x4],ecx
1001a3b8:	call   0x10042e92
1001a3bd:	dec    DWORD PTR [ebx+0x14]
1001a3c0:	pop    ecx
1001a3c1:	cmp    DWORD PTR [ebx+0x14],0x0
1001a3c5:	jne    0x1001a344
1001a3cb:	cmp    DWORD PTR [ebp-0x14],0x0
1001a3cf:	je     0x1001a423
1001a3d1:	lea    eax,[ebp-0x28]
1001a3d4:	cmp    eax,ebx
1001a3d6:	je     0x1001a3ff
1001a3d8:	mov    esi,DWORD PTR [ebx+0x4]
1001a3db:	mov    eax,DWORD PTR [esi]
1001a3dd:	lea    edi,[ebp-0x28]
1001a3e0:	mov    DWORD PTR [ebp-0x2c],eax
1001a3e3:	call   0x1001b093
1001a3e8:	mov    eax,DWORD PTR [ebp-0x24]
1001a3eb:	mov    eax,DWORD PTR [eax]
1001a3ed:	push   esi
1001a3ee:	push   ebx
1001a3ef:	push   DWORD PTR [ebp-0x2c]
1001a3f2:	mov    ecx,edi
1001a3f4:	push   ebx
1001a3f5:	push   eax
1001a3f6:	push   ecx
1001a3f7:	mov    eax,edi
1001a3f9:	push   eax
1001a3fa:	call   0x1001b1d0
1001a3ff:	cmp    DWORD PTR [ebp-0x20],0x9
1001a403:	jbe    0x1001a423
1001a405:	lea    esi,[ebp-0x28]
1001a408:	mov    eax,DWORD PTR [ebp-0x24]
1001a40b:	push   DWORD PTR [eax]
1001a40d:	lea    eax,[ebp-0x38]
1001a410:	push   esi
1001a411:	push   eax
1001a412:	lea    ebx,[ebp-0x28]
1001a415:	call   0x1001aed9
1001a41a:	cmp    DWORD PTR [ebp-0x20],0x9
1001a41e:	ja     0x1001a408
1001a420:	mov    ebx,DWORD PTR [ebp+0x8]
1001a423:	push   DWORD PTR [ebx+0x18]
1001a426:	call   DWORD PTR ds:0x10066094
1001a42c:	mov    eax,DWORD PTR [ebp-0x18]
1001a42f:	mov    esi,DWORD PTR [eax]
1001a431:	cmp    esi,eax
1001a433:	je     0x1001a4d4
1001a439:	sub    esp,0xc
1001a43c:	mov    eax,esp
1001a43e:	mov    DWORD PTR [ebp+0x8],esp
1001a441:	push   eax
1001a442:	lea    ecx,[ebp-0x28]
1001a445:	call   0x1001ae66
1001a44a:	cmp    esi,DWORD PTR [ebp-0x18]
1001a44d:	jne    0x1001a454
1001a44f:	call   0x100433b0
1001a454:	call   DWORD PTR [esi+0x8]
1001a457:	mov    eax,DWORD PTR [ebp-0x18]
1001a45a:	add    esp,0xc
1001a45d:	cmp    esi,eax
1001a45f:	jne    0x1001a469
1001a461:	call   0x100433b0
1001a466:	mov    eax,DWORD PTR [ebp-0x18]
1001a469:	mov    esi,DWORD PTR [esi]
1001a46b:	jmp    0x1001a431
1001a46d:	mov    ebx,DWORD PTR [ebp+0x8]
1001a470:	cmp    DWORD PTR [ebx+0x8],0x0
1001a474:	jbe    0x1001a485
1001a476:	mov    eax,DWORD PTR [ebx+0x4]
1001a479:	push   DWORD PTR [eax]
1001a47b:	lea    eax,[ebp-0x38]
1001a47e:	push   ebx
1001a47f:	push   eax
1001a480:	call   0x1001aed9
1001a485:	mov    eax,0x1001a48b
1001a48a:	ret    
1001a48b:	mov    ebx,DWORD PTR [ebp+0x8]
1001a48e:	jmp    0x1001a2a6
1001a493:	push   0x1006feb8
1001a498:	lea    ecx,[ebp-0xe0]
1001a49e:	call   0x100011cd
1001a4a3:	lea    eax,[ebp-0xe0]
1001a4a9:	push   eax
1001a4aa:	lea    ecx,[ebp-0xc4]
1001a4b0:	mov    BYTE PTR [ebp-0x4],0x8
1001a4b4:	call   0x10001077
1001a4b9:	push   0x10074da0
1001a4be:	lea    eax,[ebp-0xc4]
1001a4c4:	push   eax
1001a4c5:	mov    DWORD PTR [ebp-0xc4],0x1006b96c
1001a4cf:	call   0x100479b4
1001a4d4:	mov    ecx,DWORD PTR [eax]
1001a4d6:	mov    DWORD PTR [eax],eax
1001a4d8:	mov    eax,DWORD PTR [ebp-0x18]
1001a4db:	mov    DWORD PTR [eax+0x4],eax
1001a4de:	and    DWORD PTR [ebp-0x14],0x0
1001a4e2:	cmp    ecx,DWORD PTR [ebp-0x18]
1001a4e5:	je     0x1001a4f7
1001a4e7:	mov    esi,DWORD PTR [ecx]
1001a4e9:	push   ecx
1001a4ea:	call   0x10042e92
1001a4ef:	cmp    esi,DWORD PTR [ebp-0x18]
1001a4f2:	pop    ecx
1001a4f3:	mov    ecx,esi
1001a4f5:	jne    0x1001a4e7
1001a4f7:	push   DWORD PTR [ebp-0x18]
1001a4fa:	call   0x10042e92
1001a4ff:	and    DWORD PTR [ebp-0x18],0x0
1001a503:	pop    ecx
1001a504:	lea    eax,[ebp-0x28]
1001a507:	call   0x1001aec2
1001a50c:	call   0x10059b0d
1001a511:	ret    0x20
1001a514:	push   0x0
1001a516:	push   0x1
1001a518:	lea    ecx,[esi+0x38]
1001a51b:	call   0x100012f0
1001a520:	push   0x0
1001a522:	push   0x1
1001a524:	lea    ecx,[esi+0x1c]
1001a527:	call   0x100012f0
1001a52c:	push   0x0
1001a52e:	push   0x1
1001a530:	mov    ecx,esi
1001a532:	call   0x100012f0
1001a537:	ret    
1001a538:	push   0x10
1001a53a:	mov    eax,0x100602b9
1001a53f:	call   0x10059a68
1001a544:	mov    edi,DWORD PTR [ebp+0x8]
1001a547:	push   0x1f4
1001a54c:	push   DWORD PTR [edi+0x18]
1001a54f:	call   DWORD PTR ds:0x10066084
1001a555:	test   eax,eax
1001a557:	jne    0x1001a58b
1001a559:	and    DWORD PTR [ebp-0x4],eax
1001a55c:	mov    eax,DWORD PTR [edi+0x1c]
1001a55f:	add    eax,0x9
1001a562:	lea    ebx,[edi+0xc]
1001a565:	lea    esi,[ebp-0x1c]
1001a568:	mov    DWORD PTR [ebp-0x1c],eax
1001a56b:	mov    DWORD PTR [ebp-0x18],0x1001adab
1001a572:	call   0x1001af61
1001a577:	jmp    0x1001a582
1001a579:	mov    eax,0x1001a57f
1001a57e:	ret    
1001a57f:	mov    edi,DWORD PTR [ebp+0x8]
1001a582:	push   DWORD PTR [edi+0x18]
1001a585:	call   DWORD PTR ds:0x10066094
1001a58b:	call   0x10059b0d
1001a590:	ret    0x4
1001a593:	push   0x14
1001a595:	mov    eax,0x10060c32
1001a59a:	call   0x10059a35
1001a59f:	push   0x1f4
1001a5a4:	push   DWORD PTR [esi+0x18]
1001a5a7:	xor    edi,edi
1001a5a9:	mov    DWORD PTR [ebp-0x10],edi
1001a5ac:	call   DWORD PTR ds:0x10066084
1001a5b2:	test   eax,eax
1001a5b4:	je     0x1001a5c3
1001a5b6:	call   0x1001b04b
1001a5bb:	mov    DWORD PTR [ebx+0x4],eax
1001a5be:	mov    DWORD PTR [ebx+0x8],edi
1001a5c1:	jmp    0x1001a5ff
1001a5c3:	lea    eax,[ebp-0x1c]
1001a5c6:	push   eax
1001a5c7:	mov    ecx,esi
1001a5c9:	call   0x1001ae66
1001a5ce:	mov    DWORD PTR [ebp-0x4],edi
1001a5d1:	mov    eax,DWORD PTR [ebp-0x18]
1001a5d4:	mov    edx,DWORD PTR [eax]
1001a5d6:	push   eax
1001a5d7:	lea    ecx,[ebp-0x1c]
1001a5da:	push   ecx
1001a5db:	mov    edi,ecx
1001a5dd:	push   edx
1001a5de:	push   edi
1001a5df:	call   0x1001b15e
1001a5e4:	add    esp,0x10
1001a5e7:	push   DWORD PTR [esi+0x18]
1001a5ea:	call   DWORD PTR ds:0x10066094
1001a5f0:	push   ebx
1001a5f1:	mov    ecx,edi
1001a5f3:	call   0x1001ae66
1001a5f8:	mov    eax,edi
1001a5fa:	call   0x1001aec2
1001a5ff:	mov    eax,ebx
1001a601:	call   0x10059b0d
1001a606:	ret    
1001a607:	push   0xc4
1001a60c:	mov    eax,0x10063574
1001a611:	call   0x10059a9e
1001a616:	mov    esi,ecx
1001a618:	xor    ebx,ebx
1001a61a:	mov    DWORD PTR [ebp-0xa4],esi
1001a620:	mov    DWORD PTR [ebp-0xac],ebx
1001a626:	xor    edi,edi
1001a628:	inc    edi
1001a629:	mov    DWORD PTR [ebp-0x4],edi
1001a62c:	call   0x10004059
1001a631:	push   0x4a03b32
1001a636:	push   0x1006fecc
1001a63b:	mov    DWORD PTR [ebp-0xac],edi
1001a641:	mov    DWORD PTR [ebp-0x98],ebx
1001a647:	call   0x10004246
1001a64c:	push   eax
1001a64d:	push   0x7
1001a64f:	push   0x1006fef4
1001a654:	call   0x10004258
1001a659:	add    esp,0x14
1001a65c:	push   eax
1001a65d:	push   esi
1001a65e:	call   0x10004090
1001a663:	push   0xa
1001a665:	lea    eax,[ebp-0x78]
1001a668:	push   eax
1001a669:	call   DWORD PTR ds:0x10066118
1001a66f:	push   eax
1001a670:	call   0x10045af6
1001a675:	add    esp,0xc
1001a678:	push   eax
1001a679:	push   esi
1001a67a:	call   0x10004090
1001a67f:	mov    eax,DWORD PTR [ebp+0xc]
1001a682:	mov    edi,DWORD PTR [eax]
1001a684:	lea    esi,[ebp+0x8]
1001a687:	mov    DWORD PTR [ebp-0xa8],ebx
1001a68d:	mov    DWORD PTR [ebp-0x9c],edi
1001a693:	mov    DWORD PTR [ebp-0xa0],esi
1001a699:	mov    ebx,0x1006ff2c
1001a69e:	test   esi,esi
1001a6a0:	mov    eax,DWORD PTR [ebp+0xc]
1001a6a3:	mov    DWORD PTR [ebp-0xb0],eax
1001a6a9:	je     0x1001a6b2
1001a6ab:	lea    eax,[ebp+0x8]
1001a6ae:	cmp    esi,eax
1001a6b0:	je     0x1001a6b7
1001a6b2:	call   0x100433b0
1001a6b7:	cmp    edi,DWORD PTR [ebp-0xb0]
1001a6bd:	je     0x1001ac82
1001a6c3:	push   0x0
1001a6c5:	lea    ecx,[ebp-0x94]
1001a6cb:	mov    DWORD PTR [ebp-0x7c],0xf
1001a6d2:	call   0x1000141c
1001a6d7:	push   0x1006fefc
1001a6dc:	push   0x4
1001a6de:	push   ebx
1001a6df:	mov    BYTE PTR [ebp-0x4],0x2
1001a6e3:	call   0x10004258
1001a6e8:	add    esp,0xc
1001a6eb:	push   eax
1001a6ec:	lea    eax,[ebp-0x94]
1001a6f2:	push   eax
1001a6f3:	call   0x10004090
1001a6f8:	push   0xa
1001a6fa:	lea    eax,[ebp-0x78]
1001a6fd:	push   eax
1001a6fe:	push   DWORD PTR [ebp-0x98]
1001a704:	call   0x10045af6
1001a709:	add    esp,0xc
1001a70c:	push   eax
1001a70d:	lea    eax,[ebp-0x94]
1001a713:	push   eax
1001a714:	call   0x10004090
1001a719:	push   0x1acddae6
1001a71e:	push   0x1006ff34
1001a723:	call   0x10004246
1001a728:	push   0x27d9e2e8
1001a72d:	push   eax
1001a72e:	call   0x10004246
1001a733:	push   eax
1001a734:	push   0x8
1001a736:	push   0x1006ff60
1001a73b:	call   0x10004258
1001a740:	add    esp,0x1c
1001a743:	push   eax
1001a744:	lea    eax,[ebp-0x94]
1001a74a:	push   eax
1001a74b:	call   0x10004090
1001a750:	test   esi,esi
1001a752:	jne    0x1001a759
1001a754:	call   0x100433b0
1001a759:	cmp    edi,DWORD PTR [esi+0x4]
1001a75c:	jne    0x1001a763
1001a75e:	call   0x100433b0
1001a763:	push   0xa
1001a765:	lea    eax,[ebp-0x78]
1001a768:	push   eax
1001a769:	push   DWORD PTR [edi+0x5c]
1001a76c:	call   0x10045af6
1001a771:	add    esp,0xc
1001a774:	push   eax
1001a775:	lea    eax,[ebp-0x94]
1001a77b:	push   eax
1001a77c:	call   0x10004090
1001a781:	push   0x56590d50
1001a786:	push   0x1006ff6c
1001a78b:	call   0x10004246
1001a790:	push   0x216cda2c
1001a795:	push   eax
1001a796:	call   0x10004246
1001a79b:	push   eax
1001a79c:	push   0x4
1001a79e:	push   ebx
1001a79f:	call   0x10004258
1001a7a4:	add    esp,0x1c
1001a7a7:	push   eax
1001a7a8:	lea    eax,[ebp-0x94]
1001a7ae:	push   eax
1001a7af:	call   0x10004090
1001a7b4:	push   0xa
1001a7b6:	lea    eax,[ebp-0x78]
1001a7b9:	push   eax
1001a7ba:	push   DWORD PTR [ebp-0x98]
1001a7c0:	call   0x10045af6
1001a7c5:	add    esp,0xc
1001a7c8:	push   eax
1001a7c9:	lea    eax,[ebp-0x94]
1001a7cf:	push   eax
1001a7d0:	call   0x10004090
1001a7d5:	push   0x6c213018
1001a7da:	push   0x1006ff90
1001a7df:	call   0x10004246
1001a7e4:	push   0x4a24f1e4
1001a7e9:	push   eax
1001a7ea:	call   0x10004246
1001a7ef:	push   eax
1001a7f0:	push   0x8
1001a7f2:	push   0x1006ffc0
1001a7f7:	call   0x10004258
1001a7fc:	add    esp,0x1c
1001a7ff:	push   eax
1001a800:	lea    eax,[ebp-0x94]
1001a806:	push   eax
1001a807:	call   0x10004090
1001a80c:	cmp    edi,DWORD PTR [esi+0x4]
1001a80f:	jne    0x1001a816
1001a811:	call   0x100433b0
1001a816:	lea    eax,[edi+0x8]
1001a819:	push   eax
1001a81a:	lea    ecx,[ebp-0xd0]
1001a820:	call   0x10031000
1001a825:	pop    ecx
1001a826:	push   0xffffffff
1001a828:	push   0x0
1001a82a:	lea    esi,[ebp-0x94]
1001a830:	mov    BYTE PTR [ebp-0x4],0x3
1001a834:	call   0x10004c80
1001a839:	push   0x0
1001a83b:	push   0x1
1001a83d:	lea    ecx,[ebp-0xd0]
1001a843:	mov    BYTE PTR [ebp-0x4],0x2
1001a847:	call   0x100012f0
1001a84c:	push   0x1006ffcc
1001a851:	push   0x4
1001a853:	push   ebx
1001a854:	call   0x10004258
1001a859:	add    esp,0xc
1001a85c:	push   eax
1001a85d:	mov    eax,esi
1001a85f:	push   eax
1001a860:	call   0x10004090
1001a865:	push   0xa
1001a867:	lea    eax,[ebp-0x78]
1001a86a:	push   eax
1001a86b:	push   DWORD PTR [ebp-0x98]
1001a871:	call   0x10045af6
1001a876:	add    esp,0xc
1001a879:	push   eax
1001a87a:	mov    eax,esi
1001a87c:	push   eax
1001a87d:	call   0x10004090
1001a882:	push   0x10070004
1001a887:	push   0xa
1001a889:	push   0x1007003c
1001a88e:	call   0x10004258
1001a893:	add    esp,0xc
1001a896:	push   eax
1001a897:	mov    eax,esi
1001a899:	push   eax
1001a89a:	call   0x10004090
1001a89f:	mov    eax,DWORD PTR [ebp-0xa0]
1001a8a5:	cmp    edi,DWORD PTR [eax+0x4]
1001a8a8:	jne    0x1001a8af
1001a8aa:	call   0x100433b0
1001a8af:	lea    eax,[edi+0x40]
1001a8b2:	push   eax
1001a8b3:	lea    ecx,[ebp-0xd0]
1001a8b9:	call   0x10031000
1001a8be:	pop    ecx
1001a8bf:	push   0xffffffff
1001a8c1:	push   0x0
1001a8c3:	lea    esi,[ebp-0x94]
1001a8c9:	mov    BYTE PTR [ebp-0x4],0x4
1001a8cd:	call   0x10004c80
1001a8d2:	push   0x0
1001a8d4:	push   0x1
1001a8d6:	lea    ecx,[ebp-0xd0]
1001a8dc:	mov    BYTE PTR [ebp-0x4],0x2
1001a8e0:	call   0x100012f0
1001a8e5:	mov    eax,DWORD PTR [ebp-0xa0]
1001a8eb:	cmp    edi,DWORD PTR [eax+0x4]
1001a8ee:	jne    0x1001a8f5
1001a8f0:	call   0x100433b0
1001a8f5:	push   0x1006cd08
1001a8fa:	lea    esi,[edi+0x24]
1001a8fd:	call   0x1000658e
1001a902:	test   al,al
1001a904:	pop    ecx
1001a905:	jne    0x1001a9e7
1001a90b:	push   0x1427dc26
1001a910:	push   0x10070048
1001a915:	call   0x10004246
1001a91a:	push   0xe45c484
1001a91f:	push   eax
1001a920:	call   0x10004246
1001a925:	push   eax
1001a926:	push   0x4
1001a928:	push   ebx
1001a929:	call   0x10004258
1001a92e:	add    esp,0x1c
1001a931:	push   eax
1001a932:	lea    eax,[ebp-0x94]
1001a938:	push   eax
1001a939:	call   0x10004090
1001a93e:	push   0xa
1001a940:	lea    eax,[ebp-0x78]
1001a943:	push   eax
1001a944:	push   DWORD PTR [ebp-0x98]
1001a94a:	call   0x10045af6
1001a94f:	add    esp,0xc
1001a952:	push   eax
1001a953:	lea    eax,[ebp-0x94]
1001a959:	push   eax
1001a95a:	call   0x10004090
1001a95f:	push   0x209374f8
1001a964:	push   0x10070078
1001a969:	call   0x10004246
1001a96e:	push   0x2f4fef06
1001a973:	push   eax
1001a974:	call   0x10004246
1001a979:	push   0x19ff3d5c
1001a97e:	push   eax
1001a97f:	call   0x10004246
1001a984:	push   eax
1001a985:	push   0x7
1001a987:	push   0x100700a0
1001a98c:	call   0x10004258
1001a991:	add    esp,0x24
1001a994:	push   eax
1001a995:	lea    eax,[ebp-0x94]
1001a99b:	push   eax
1001a99c:	call   0x10004090
1001a9a1:	mov    eax,DWORD PTR [ebp-0xa0]
1001a9a7:	cmp    edi,DWORD PTR [eax+0x4]
1001a9aa:	jne    0x1001a9b1
1001a9ac:	call   0x100433b0
1001a9b1:	lea    eax,[edi+0x24]
1001a9b4:	push   eax
1001a9b5:	lea    ecx,[ebp-0xd0]
1001a9bb:	call   0x10031000
1001a9c0:	pop    ecx
1001a9c1:	push   0xffffffff
1001a9c3:	push   0x0
1001a9c5:	lea    esi,[ebp-0x94]
1001a9cb:	mov    BYTE PTR [ebp-0x4],0x5
1001a9cf:	call   0x10004c80
1001a9d4:	push   0x0
1001a9d6:	push   0x1
1001a9d8:	lea    ecx,[ebp-0xd0]
1001a9de:	mov    BYTE PTR [ebp-0x4],0x2
1001a9e2:	call   0x100012f0
1001a9e7:	push   0xa93fff6
1001a9ec:	push   0x100700a8
1001a9f1:	call   0x10004246
1001a9f6:	push   eax
1001a9f7:	push   0x4
1001a9f9:	push   ebx
1001a9fa:	call   0x10004258
1001a9ff:	add    esp,0x14
1001aa02:	push   eax
1001aa03:	lea    eax,[ebp-0x94]
1001aa09:	push   eax
1001aa0a:	call   0x10004090
1001aa0f:	push   0xa
1001aa11:	lea    eax,[ebp-0x78]
1001aa14:	push   eax
1001aa15:	push   DWORD PTR [ebp-0x98]
1001aa1b:	call   0x10045af6
1001aa20:	add    esp,0xc
1001aa23:	push   eax
1001aa24:	lea    eax,[ebp-0x94]
1001aa2a:	push   eax
1001aa2b:	call   0x10004090
1001aa30:	push   0x3a5fb750
1001aa35:	push   0x100700e4
1001aa3a:	call   0x10004246
1001aa3f:	push   0x2096876c
1001aa44:	push   eax
1001aa45:	call   0x10004246
1001aa4a:	push   eax
1001aa4b:	push   0xf
1001aa4d:	push   0x10070108
1001aa52:	call   0x10004258
1001aa57:	add    esp,0x1c
1001aa5a:	push   eax
1001aa5b:	lea    eax,[ebp-0x94]
1001aa61:	push   eax
1001aa62:	call   0x10004090
1001aa67:	mov    eax,DWORD PTR [ebp-0xa0]
1001aa6d:	cmp    edi,DWORD PTR [eax+0x4]
1001aa70:	jne    0x1001aa77
1001aa72:	call   0x100433b0
1001aa77:	push   0xa
1001aa79:	lea    eax,[ebp-0x78]
1001aa7c:	push   eax
1001aa7d:	lea    esi,[edi+0x8]
1001aa80:	push   DWORD PTR [esi+0x58]
1001aa83:	call   0x10045af6
1001aa88:	add    esp,0xc
1001aa8b:	push   eax
1001aa8c:	lea    eax,[ebp-0x94]
1001aa92:	push   eax
1001aa93:	call   0x10004090
1001aa98:	push   0x10070118
1001aa9d:	push   0x4
1001aa9f:	push   ebx
1001aaa0:	call   0x10004258
1001aaa5:	add    esp,0xc
1001aaa8:	push   eax
1001aaa9:	lea    eax,[ebp-0x94]
1001aaaf:	push   eax
1001aab0:	call   0x10004090
1001aab5:	push   0xa
1001aab7:	lea    eax,[ebp-0x78]
1001aaba:	push   eax
1001aabb:	push   DWORD PTR [ebp-0x98]
1001aac1:	call   0x10045af6
1001aac6:	add    esp,0xc
1001aac9:	push   eax
1001aaca:	lea    eax,[ebp-0x94]
1001aad0:	push   eax
1001aad1:	call   0x10004090
1001aad6:	push   0x77e083be
1001aadb:	push   0x1007014c
1001aae0:	call   0x10004246
1001aae5:	push   0xb4a68e4
1001aaea:	push   eax
1001aaeb:	call   0x10004246
1001aaf0:	push   eax
1001aaf1:	push   0xa
1001aaf3:	push   0x10070184
1001aaf8:	call   0x10004258
1001aafd:	add    esp,0x1c
1001ab00:	push   eax
1001ab01:	lea    eax,[ebp-0x94]
1001ab07:	push   eax
1001ab08:	call   0x10004090
1001ab0d:	mov    eax,DWORD PTR [ebp-0xa0]
1001ab13:	cmp    edi,DWORD PTR [eax+0x4]
1001ab16:	jne    0x1001ab1d
1001ab18:	call   0x100433b0
1001ab1d:	push   0xa
1001ab1f:	lea    eax,[ebp-0x78]
1001ab22:	push   eax
1001ab23:	push   DWORD PTR [esi+0x5c]
1001ab26:	call   0x10045af6
1001ab2b:	add    esp,0xc
1001ab2e:	push   eax
1001ab2f:	lea    eax,[ebp-0x94]
1001ab35:	push   eax
1001ab36:	call   0x10004090
1001ab3b:	push   0x5ca009f8
1001ab40:	push   0x10070190
1001ab45:	call   0x10004246
1001ab4a:	push   0x56b479d8
1001ab4f:	push   eax
1001ab50:	call   0x10004246
1001ab55:	push   0x471103e0
1001ab5a:	push   eax
1001ab5b:	call   0x10004246
1001ab60:	push   0x6d53a6b8
1001ab65:	push   eax
1001ab66:	call   0x10004246
1001ab6b:	push   0x3210fa5e
1001ab70:	push   eax
1001ab71:	call   0x10004246
1001ab76:	push   eax
1001ab77:	push   0x4
1001ab79:	push   ebx
1001ab7a:	call   0x10004258
1001ab7f:	add    esp,0x34
1001ab82:	push   eax
1001ab83:	lea    eax,[ebp-0x94]
1001ab89:	push   eax
1001ab8a:	call   0x10004090
1001ab8f:	push   0xa
1001ab91:	lea    eax,[ebp-0x78]
1001ab94:	push   eax
1001ab95:	push   DWORD PTR [ebp-0x98]
1001ab9b:	call   0x10045af6
1001aba0:	add    esp,0xc
1001aba3:	push   eax
1001aba4:	lea    eax,[ebp-0x94]
1001abaa:	push   eax
1001abab:	call   0x10004090
1001abb0:	push   0x28d01f54
1001abb5:	push   0x100701b8
1001abba:	call   0x10004246
1001abbf:	push   0x2beef9b0
1001abc4:	push   eax
1001abc5:	call   0x10004246
1001abca:	push   eax
1001abcb:	push   0xa
1001abcd:	push   0x100701f8
1001abd2:	call   0x10004258
1001abd7:	add    esp,0x1c
1001abda:	push   eax
1001abdb:	lea    eax,[ebp-0x94]
1001abe1:	push   eax
1001abe2:	call   0x10004090
1001abe7:	mov    eax,DWORD PTR [ebp-0xa0]
1001abed:	cmp    edi,DWORD PTR [eax+0x4]
1001abf0:	jne    0x1001abf7
1001abf2:	call   0x100433b0
1001abf7:	push   0xa
1001abf9:	lea    eax,[ebp-0x78]
1001abfc:	push   eax
1001abfd:	push   DWORD PTR [esi+0x60]
1001ac00:	call   0x10045af6
1001ac05:	add    esp,0xc
1001ac08:	push   eax
1001ac09:	lea    eax,[ebp-0x94]
1001ac0f:	push   eax
1001ac10:	call   0x10004090
1001ac15:	mov    eax,DWORD PTR [ebp-0xa8]
1001ac1b:	mov    esi,DWORD PTR [ebp-0xa4]
1001ac21:	add    eax,DWORD PTR [esi+0x14]
1001ac24:	cmp    eax,DWORD PTR [ebp+0x14]
1001ac27:	mov    DWORD PTR [ebp-0xa8],eax
1001ac2d:	jg     0x1001ac73
1001ac2f:	push   0xffffffff
1001ac31:	push   0x0
1001ac33:	lea    eax,[ebp-0x94]
1001ac39:	call   0x10004c80
1001ac3e:	inc    DWORD PTR [ebp-0x98]
1001ac44:	push   0x0
1001ac46:	push   0x1
1001ac48:	lea    ecx,[ebp-0x94]
1001ac4e:	mov    BYTE PTR [ebp-0x4],0x1
1001ac52:	call   0x100012f0
1001ac57:	lea    esi,[ebp-0xa0]
1001ac5d:	call   0x10026666
1001ac62:	mov    edi,DWORD PTR [ebp-0x9c]
1001ac68:	mov    esi,DWORD PTR [ebp-0xa0]
1001ac6e:	jmp    0x1001a69e
1001ac73:	push   0x0
1001ac75:	push   0x1
1001ac77:	lea    ecx,[ebp-0x94]
1001ac7d:	call   0x100012f0
1001ac82:	lea    eax,[ebp+0x8]
1001ac85:	call   0x1001aec2
1001ac8a:	mov    eax,DWORD PTR [ebp-0xa4]
1001ac90:	call   0x10059b21
1001ac95:	ret    
1001ac96:	push   0x70
1001ac98:	mov    eax,0x10064c9c
1001ac9d:	call   0x10059ad4
1001aca2:	mov    edi,DWORD PTR [ebp+0x8]
1001aca5:	mov    DWORD PTR [ebp-0x38],edi
1001aca8:	mov    DWORD PTR [ebp-0x40],edi
1001acab:	xor    ebx,ebx
1001acad:	mov    DWORD PTR [ebp-0x4],ebx
1001acb0:	lea    ecx,[ebp-0x30]
1001acb3:	mov    BYTE PTR [ebp-0x4],0x1
1001acb7:	call   0x100183f1
1001acbc:	mov    BYTE PTR [ebp-0x4],0x2
1001acc0:	call   0x10002080
1001acc5:	cmp    DWORD PTR [edi+0x18],0x10
1001acc9:	jb     0x1001acd0
1001accb:	mov    eax,DWORD PTR [edi+0x4]
1001acce:	jmp    0x1001acd3
1001acd0:	lea    eax,[edi+0x4]
1001acd3:	push   eax
1001acd4:	lea    ecx,[ebp-0x78]
1001acd7:	call   0x100011cd
1001acdc:	mov    BYTE PTR [ebp-0x4],0x3
1001ace0:	push   DWORD PTR ds:0x10080d84
1001ace6:	lea    ecx,[ebp-0x5c]
1001ace9:	call   0x100011cd
1001acee:	push   0x4e20
1001acf3:	lea    eax,[ebp-0x34]
1001acf6:	push   eax
1001acf7:	lea    eax,[ebp-0x78]
1001acfa:	push   eax
1001acfb:	lea    eax,[ebp-0x30]
1001acfe:	push   eax
1001acff:	lea    eax,[ebp-0x3c]
1001ad02:	push   eax
1001ad03:	lea    edx,[ebp-0x5c]
1001ad06:	mov    BYTE PTR [ebp-0x4],0x4
1001ad0a:	call   0x10030ee0
1001ad0f:	mov    ecx,DWORD PTR [eax]
1001ad11:	mov    esi,ecx
1001ad13:	add    esp,0x14
1001ad16:	mov    DWORD PTR [eax],ebx
1001ad18:	mov    DWORD PTR [ebp-0x34],esi
1001ad1b:	push   DWORD PTR [ebp-0x3c]
1001ad1e:	call   0x10042e92
1001ad23:	pop    ecx
1001ad24:	push   ebx
1001ad25:	push   0x1
1001ad27:	lea    ecx,[ebp-0x5c]
1001ad2a:	call   0x100012f0
1001ad2f:	push   ebx
1001ad30:	push   0x1
1001ad32:	lea    ecx,[ebp-0x78]
1001ad35:	mov    BYTE PTR [ebp-0x4],0x7
1001ad39:	call   0x100012f0
1001ad3e:	cmp    esi,ebx
1001ad40:	jne    0x1001ad76
1001ad42:	call   0x10018370
1001ad47:	cmp    DWORD PTR [ebp-0x18],0x10
1001ad4b:	mov    eax,DWORD PTR [ebp-0x2c]
1001ad4e:	jae    0x1001ad53
1001ad50:	lea    eax,[ebp-0x2c]
1001ad53:	push   eax
1001ad54:	call   0x10002080
1001ad59:	pop    ecx
1001ad5a:	push   0x5
1001ad5c:	call   0x10037980
1001ad61:	pop    ecx
1001ad62:	push   ebx
1001ad63:	call   0x10042e92
1001ad68:	pop    ecx
1001ad69:	push   ebx
1001ad6a:	push   0x1
1001ad6c:	lea    ecx,[ebp-0x30]
1001ad6f:	call   0x100012f0
1001ad74:	jmp    0x1001ad99
1001ad76:	push   esi
1001ad77:	call   0x10042e92
1001ad7c:	pop    ecx
1001ad7d:	push   ebx
1001ad7e:	push   0x1
1001ad80:	lea    ecx,[ebp-0x30]
1001ad83:	call   0x100012f0
1001ad88:	jmp    0x1001ad95
1001ad8a:	mov    eax,0x1001ad90
1001ad8f:	ret    
1001ad90:	mov    edi,DWORD PTR [ebp-0x38]
1001ad93:	xor    ebx,ebx
1001ad95:	cmp    edi,ebx
1001ad97:	je     0x1001ada1
1001ad99:	push   0x1
1001ad9b:	push   edi
1001ad9c:	call   0x10006686
1001ada1:	xor    eax,eax
1001ada3:	call   0x10059b30
1001ada8:	ret    0x4
1001adab:	push   0x28
1001adad:	mov    eax,0x10064dc2
1001adb2:	call   0x10059a35
1001adb7:	xor    edi,edi
1001adb9:	push   0x1c
1001adbb:	mov    DWORD PTR [ebp-0x4],edi
1001adbe:	call   0x1004349e
1001adc3:	cmp    eax,edi
1001adc5:	pop    ecx
1001adc6:	je     0x1001add3
1001adc8:	mov    esi,eax
1001adca:	call   0x10004059
1001adcf:	mov    ebx,eax
1001add1:	jmp    0x1001add5
1001add3:	xor    ebx,ebx
1001add5:	push   0x1
1001add7:	lea    eax,[ebp-0x10]
1001adda:	push   eax
1001addb:	call   0x100349f0
1001ade0:	push   eax
1001ade1:	mov    BYTE PTR [ebp-0x4],0x1
1001ade5:	call   0x10036170
1001adea:	lea    eax,[eax*4+0x800]
1001adf1:	push   eax
1001adf2:	sub    esp,0xc
1001adf5:	mov    eax,esp
1001adf7:	mov    DWORD PTR [ebp-0x14],esp
1001adfa:	push   eax
1001adfb:	lea    ecx,[ebp+0x8]
1001adfe:	call   0x1001ae66
1001ae03:	lea    ecx,[ebp-0x30]
1001ae06:	call   0x1001a607
1001ae0b:	add    esp,0x10
1001ae0e:	push   0xffffffff
1001ae10:	push   edi
1001ae11:	push   eax
1001ae12:	mov    ecx,ebx
1001ae14:	mov    BYTE PTR [ebp-0x4],0x2
1001ae18:	call   0x10001241
1001ae1d:	push   edi
1001ae1e:	push   0x1
1001ae20:	lea    ecx,[ebp-0x30]
1001ae23:	call   0x100012f0
1001ae28:	push   DWORD PTR [ebp-0x10]
1001ae2b:	mov    esi,DWORD PTR ds:0x10066070
1001ae31:	call   esi
1001ae33:	push   edi
1001ae34:	push   edi
1001ae35:	push   ebx
1001ae36:	push   0x1001ac96
1001ae3b:	push   edi
1001ae3c:	push   edi
1001ae3d:	call   DWORD PTR ds:0x10066098
1001ae43:	cmp    eax,edi
1001ae45:	je     0x1001ae4c
1001ae47:	push   eax
1001ae48:	call   esi
1001ae4a:	jmp    0x1001ae58
1001ae4c:	cmp    ebx,edi
1001ae4e:	je     0x1001ae58
1001ae50:	push   0x1
1001ae52:	push   ebx
1001ae53:	call   0x10006686
1001ae58:	lea    eax,[ebp+0x8]
1001ae5b:	call   0x1001aec2
1001ae60:	call   0x10059b0d
1001ae65:	ret    
1001ae66:	push   0x4
1001ae68:	mov    eax,0x10060c0f
1001ae6d:	call   0x10059a68
1001ae72:	mov    edi,ecx
1001ae74:	mov    esi,DWORD PTR [ebp+0x8]
1001ae77:	call   0x1001b04b
1001ae7c:	xor    ecx,ecx
1001ae7e:	mov    DWORD PTR [esi+0x4],eax
1001ae81:	mov    DWORD PTR [esi+0x8],ecx
1001ae84:	mov    DWORD PTR [ebp-0x4],ecx
1001ae87:	mov    ecx,DWORD PTR [edi+0x4]
1001ae8a:	mov    edx,DWORD PTR [ecx]
1001ae8c:	mov    eax,DWORD PTR [eax]
1001ae8e:	push   ecx
1001ae8f:	push   edi
1001ae90:	push   edx
1001ae91:	push   edi
1001ae92:	push   eax
1001ae93:	push   esi
1001ae94:	push   esi
1001ae95:	call   0x1001b1d0
1001ae9a:	mov    eax,esi
1001ae9c:	call   0x10059b0d
1001aea1:	ret    0x4
1001aea4:	mov    edi,DWORD PTR [ebp+0x8]
1001aea7:	call   0x1001b093
1001aeac:	push   DWORD PTR [edi+0x4]
1001aeaf:	call   0x10042e92
1001aeb4:	pop    ecx
1001aeb5:	xor    ecx,ecx
1001aeb7:	push   ecx
1001aeb8:	push   ecx
1001aeb9:	mov    DWORD PTR [edi+0x4],ecx
1001aebc:	call   0x100479b4
1001aec1:	int3   
1001aec2:	push   edi
1001aec3:	mov    edi,eax
1001aec5:	call   0x1001b093
1001aeca:	push   DWORD PTR [edi+0x4]
1001aecd:	call   0x10042e92
1001aed2:	and    DWORD PTR [edi+0x4],0x0
1001aed6:	pop    ecx
1001aed7:	pop    edi
1001aed8:	ret    
1001aed9:	push   ebp
1001aeda:	mov    ebp,esp
1001aedc:	push   ecx
1001aedd:	push   ecx
1001aede:	mov    eax,DWORD PTR [ebp+0xc]
1001aee1:	push   esi
1001aee2:	push   edi
1001aee3:	mov    edi,DWORD PTR [ebp+0x10]
1001aee6:	lea    esi,[ebp+0xc]
1001aee9:	mov    DWORD PTR [ebp-0x8],eax
1001aeec:	call   0x10026666
1001aef1:	cmp    edi,DWORD PTR [ebx+0x4]
1001aef4:	je     0x1001af17
1001aef6:	mov    eax,DWORD PTR [edi+0x4]
1001aef9:	mov    ecx,DWORD PTR [edi]
1001aefb:	mov    DWORD PTR [eax],ecx
1001aefd:	mov    eax,DWORD PTR [edi]
1001aeff:	mov    ecx,DWORD PTR [edi+0x4]
1001af02:	lea    esi,[edi+0x8]
1001af05:	mov    DWORD PTR [eax+0x4],ecx
1001af08:	call   0x1001a514
1001af0d:	push   edi
1001af0e:	call   0x10042e92
1001af13:	dec    DWORD PTR [ebx+0x8]
1001af16:	pop    ecx
1001af17:	mov    ecx,DWORD PTR [ebp+0xc]
1001af1a:	mov    eax,DWORD PTR [ebp+0x8]
1001af1d:	mov    DWORD PTR [eax],ecx
1001af1f:	mov    ecx,DWORD PTR [ebp+0x10]
1001af22:	pop    edi
1001af23:	mov    DWORD PTR [eax+0x4],ecx
1001af26:	pop    esi
1001af27:	leave  
1001af28:	ret    0xc
1001af2b:	mov    eax,DWORD PTR [esi+0x4]
1001af2e:	mov    ecx,DWORD PTR [eax]
1001af30:	mov    DWORD PTR [eax],eax
1001af32:	mov    eax,DWORD PTR [esi+0x4]
1001af35:	mov    DWORD PTR [eax+0x4],eax
1001af38:	and    DWORD PTR [esi+0x8],0x0
1001af3c:	cmp    ecx,DWORD PTR [esi+0x4]
1001af3f:	je     0x1001af53
1001af41:	push   edi
1001af42:	mov    edi,DWORD PTR [ecx]
1001af44:	push   ecx
1001af45:	call   0x10042e92
1001af4a:	cmp    edi,DWORD PTR [esi+0x4]
1001af4d:	pop    ecx
1001af4e:	mov    ecx,edi
1001af50:	jne    0x1001af42
1001af52:	pop    edi
1001af53:	push   DWORD PTR [esi+0x4]
1001af56:	call   0x10042e92
1001af5b:	and    DWORD PTR [esi+0x4],0x0
1001af5f:	pop    ecx
1001af60:	ret    
1001af61:	push   0x44
1001af63:	mov    eax,0x1006071f
1001af68:	call   0x10059a35
1001af6d:	mov    edi,DWORD PTR [ebx+0x4]
1001af70:	push   DWORD PTR [edi+0x4]
1001af73:	push   edi
1001af74:	call   0x1001b12b
1001af79:	mov    ecx,DWORD PTR [ebx+0x8]
1001af7c:	mov    edx,0x1fffffff
1001af81:	sub    edx,ecx
1001af83:	cmp    edx,0x1
1001af86:	jae    0x1001afba
1001af88:	push   0x1006feb8
1001af8d:	lea    ecx,[ebp-0x28]
1001af90:	call   0x100011cd
1001af95:	and    DWORD PTR [ebp-0x4],0x0
1001af99:	lea    eax,[ebp-0x28]
1001af9c:	push   eax
1001af9d:	lea    ecx,[ebp-0x50]
1001afa0:	call   0x10001077
1001afa5:	push   0x10074da0
1001afaa:	lea    eax,[ebp-0x50]
1001afad:	push   eax
1001afae:	mov    DWORD PTR [ebp-0x50],0x1006b96c
1001afb5:	call   0x100479b4
1001afba:	inc    ecx
1001afbb:	mov    DWORD PTR [ebx+0x8],ecx
1001afbe:	mov    DWORD PTR [edi+0x4],eax
1001afc1:	mov    ecx,DWORD PTR [eax+0x4]
1001afc4:	mov    DWORD PTR [ecx],eax
1001afc6:	call   0x10059b0d
1001afcb:	ret    
1001afcc:	mov    eax,DWORD PTR [eax]
1001afce:	test   eax,eax
1001afd0:	je     0x1001afda
1001afd2:	push   0x1
1001afd4:	push   eax
1001afd5:	call   0x10006686
1001afda:	ret    
1001afdb:	push   0x48
1001afdd:	mov    eax,0x100605b3
1001afe2:	call   0x10059a35
1001afe7:	push   DWORD PTR [ebp+0x8]
1001afea:	mov    esi,DWORD PTR [ebp+0x10]
1001afed:	push   DWORD PTR [esi+0x4]
1001aff0:	push   esi
1001aff1:	call   0x1001b0c8
1001aff6:	mov    ecx,DWORD PTR [edi+0x8]
1001aff9:	mov    edx,0x28f5c28
1001affe:	sub    edx,ecx
1001b000:	cmp    edx,0x1
1001b003:	jae    0x1001b037
1001b005:	push   0x1006feb8
1001b00a:	lea    ecx,[ebp-0x2c]
1001b00d:	call   0x100011cd
1001b012:	and    DWORD PTR [ebp-0x4],0x0
1001b016:	lea    eax,[ebp-0x2c]
1001b019:	push   eax
1001b01a:	lea    ecx,[ebp-0x54]
1001b01d:	call   0x10001077
1001b022:	push   0x10074da0
1001b027:	lea    eax,[ebp-0x54]
1001b02a:	push   eax
1001b02b:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1001b032:	call   0x100479b4
1001b037:	inc    ecx
1001b038:	mov    DWORD PTR [edi+0x8],ecx
1001b03b:	mov    DWORD PTR [esi+0x4],eax
1001b03e:	mov    ecx,DWORD PTR [eax+0x4]
1001b041:	mov    DWORD PTR [ecx],eax
1001b043:	call   0x10059b0d
1001b048:	ret    0xc
1001b04b:	push   0x6c
1001b04d:	call   0x1004349e
1001b052:	test   eax,eax
1001b054:	pop    ecx
1001b055:	je     0x1001b059
1001b057:	mov    DWORD PTR [eax],eax
1001b059:	lea    ecx,[eax+0x4]
1001b05c:	test   ecx,ecx
1001b05e:	je     0x1001b062
1001b060:	mov    DWORD PTR [ecx],eax
1001b062:	ret    
1001b063:	push   0x10
1001b065:	call   0x1004349e
1001b06a:	test   eax,eax
1001b06c:	pop    ecx
1001b06d:	je     0x1001b071
1001b06f:	mov    DWORD PTR [eax],eax
1001b071:	lea    ecx,[eax+0x4]
1001b074:	test   ecx,ecx
1001b076:	je     0x1001b07a
1001b078:	mov    DWORD PTR [ecx],eax
1001b07a:	ret    
1001b07b:	push   0xc
1001b07d:	call   0x1004349e
1001b082:	test   eax,eax
1001b084:	pop    ecx
1001b085:	je     0x1001b089
1001b087:	mov    DWORD PTR [eax],eax
1001b089:	lea    ecx,[eax+0x4]
1001b08c:	test   ecx,ecx
1001b08e:	je     0x1001b092
1001b090:	mov    DWORD PTR [ecx],eax
1001b092:	ret    
1001b093:	mov    eax,DWORD PTR [edi+0x4]
1001b096:	push   ebx
1001b097:	mov    ebx,DWORD PTR [eax]
1001b099:	mov    DWORD PTR [eax],eax
1001b09b:	mov    eax,DWORD PTR [edi+0x4]
1001b09e:	mov    DWORD PTR [eax+0x4],eax
1001b0a1:	and    DWORD PTR [edi+0x8],0x0
1001b0a5:	cmp    ebx,DWORD PTR [edi+0x4]
1001b0a8:	je     0x1001b0c6
1001b0aa:	push   ebp
1001b0ab:	push   esi
1001b0ac:	mov    ebp,DWORD PTR [ebx]
1001b0ae:	lea    esi,[ebx+0x8]
1001b0b1:	call   0x1001a514
1001b0b6:	push   ebx
1001b0b7:	call   0x10042e92
1001b0bc:	cmp    ebp,DWORD PTR [edi+0x4]
1001b0bf:	pop    ecx
1001b0c0:	mov    ebx,ebp
1001b0c2:	jne    0x1001b0ac
1001b0c4:	pop    esi
1001b0c5:	pop    ebp
1001b0c6:	pop    ebx
1001b0c7:	ret    
1001b0c8:	push   0x8
1001b0ca:	mov    eax,0x1005fb85
1001b0cf:	call   0x10059a68
1001b0d4:	push   0x6c
1001b0d6:	call   0x1004349e
1001b0db:	and    DWORD PTR [ebp-0x4],0x0
1001b0df:	mov    esi,eax
1001b0e1:	test   esi,esi
1001b0e3:	pop    ecx
1001b0e4:	mov    DWORD PTR [ebp-0x14],esi
1001b0e7:	je     0x1001b0ee
1001b0e9:	mov    eax,DWORD PTR [ebp+0x8]
1001b0ec:	mov    DWORD PTR [esi],eax
1001b0ee:	lea    eax,[esi+0x4]
1001b0f1:	test   eax,eax
1001b0f3:	je     0x1001b0fa
1001b0f5:	mov    ecx,DWORD PTR [ebp+0xc]
1001b0f8:	mov    DWORD PTR [eax],ecx
1001b0fa:	lea    eax,[esi+0x8]
1001b0fd:	test   eax,eax
1001b0ff:	mov    BYTE PTR [ebp-0x4],0x1
1001b103:	je     0x1001b10e
1001b105:	mov    edi,DWORD PTR [ebp+0x10]
1001b108:	push   eax
1001b109:	call   0x1001b1fc
1001b10e:	mov    eax,esi
1001b110:	call   0x10059b0d
1001b115:	ret    0xc
1001b118:	push   DWORD PTR [ebp-0x14]
1001b11b:	call   0x10042e92
1001b120:	pop    ecx
1001b121:	push   0x0
1001b123:	push   0x0
1001b125:	call   0x100479b4
1001b12a:	int3   
1001b12b:	push   0x10
1001b12d:	call   0x1004349e
1001b132:	test   eax,eax
1001b134:	pop    ecx
1001b135:	je     0x1001b13d
1001b137:	mov    ecx,DWORD PTR [esp+0x4]
1001b13b:	mov    DWORD PTR [eax],ecx
1001b13d:	lea    ecx,[eax+0x4]
1001b140:	test   ecx,ecx
1001b142:	je     0x1001b14a
1001b144:	mov    edx,DWORD PTR [esp+0x8]
1001b148:	mov    DWORD PTR [ecx],edx
1001b14a:	lea    ecx,[eax+0x8]
1001b14d:	test   ecx,ecx
1001b14f:	je     0x1001b15b
1001b151:	mov    edx,DWORD PTR [esi]
1001b153:	mov    DWORD PTR [ecx],edx
1001b155:	mov    edx,DWORD PTR [esi+0x4]
1001b158:	mov    DWORD PTR [ecx+0x4],edx
1001b15b:	ret    0x8
1001b15e:	push   0x7c
1001b160:	mov    eax,0x10060291
1001b165:	call   0x10059a9e
1001b16a:	mov    eax,DWORD PTR [ebp+0x10]
1001b16d:	mov    ecx,DWORD PTR [ebp+0x8]
1001b170:	mov    edx,DWORD PTR [ebp+0x14]
1001b173:	mov    ebx,DWORD PTR [ebp+0xc]
1001b176:	mov    DWORD PTR [ebp-0x80],eax
1001b179:	mov    DWORD PTR [ebp-0x88],ecx
1001b17f:	cmp    ebx,edx
1001b181:	je     0x1001b1ca
1001b183:	mov    eax,DWORD PTR [edx+0x4]
1001b186:	cmp    ebx,eax
1001b188:	mov    DWORD PTR [ebp-0x7c],eax
1001b18b:	je     0x1001b1ca
1001b18d:	lea    esi,[eax+0x8]
1001b190:	lea    eax,[ebp-0x78]
1001b193:	lea    edi,[ebx+0x8]
1001b196:	push   eax
1001b197:	call   0x1001b1fc
1001b19c:	and    DWORD PTR [ebp-0x4],0x0
1001b1a0:	mov    edi,esi
1001b1a2:	lea    esi,[ebx+0x8]
1001b1a5:	call   0x1001b31e
1001b1aa:	mov    esi,DWORD PTR [ebp-0x7c]
1001b1ad:	lea    edi,[ebp-0x78]
1001b1b0:	add    esi,0x8
1001b1b3:	call   0x1001b31e
1001b1b8:	or     DWORD PTR [ebp-0x4],0xffffffff
1001b1bc:	mov    esi,edi
1001b1be:	call   0x1001a514
1001b1c3:	mov    ebx,DWORD PTR [ebx]
1001b1c5:	mov    edx,DWORD PTR [ebp-0x7c]
1001b1c8:	jmp    0x1001b17f
1001b1ca:	call   0x10059b21
1001b1cf:	ret    
1001b1d0:	push   ebp
1001b1d1:	mov    ebp,esp
1001b1d3:	and    esp,0xfffffff8
1001b1d6:	push   ecx
1001b1d7:	push   ecx
1001b1d8:	push   DWORD PTR [ebp+0x20]
1001b1db:	push   DWORD PTR [ebp+0x1c]
1001b1de:	push   DWORD PTR [ebp+0x18]
1001b1e1:	push   DWORD PTR [ebp+0x14]
1001b1e4:	push   DWORD PTR [ebp+0x10]
1001b1e7:	push   DWORD PTR [ebp+0xc]
1001b1ea:	push   DWORD PTR [esp+0x1c]
1001b1ee:	push   DWORD PTR [ebp+0x8]
1001b1f1:	call   0x1001b255
1001b1f6:	mov    esp,ebp
1001b1f8:	pop    ebp
1001b1f9:	ret    0x1c
1001b1fc:	push   0x0
1001b1fe:	mov    eax,0x1005f9de
1001b203:	call   0x10059a35
1001b208:	mov    esi,DWORD PTR [ebp+0x8]
1001b20b:	push   edi
1001b20c:	mov    ecx,esi
1001b20e:	call   0x100011a7
1001b213:	and    DWORD PTR [ebp-0x4],0x0
1001b217:	lea    eax,[edi+0x1c]
1001b21a:	push   eax
1001b21b:	lea    ecx,[esi+0x1c]
1001b21e:	call   0x100011a7
1001b223:	lea    eax,[edi+0x38]
1001b226:	push   eax
1001b227:	lea    ecx,[esi+0x38]
1001b22a:	mov    BYTE PTR [ebp-0x4],0x1
1001b22e:	call   0x100011a7
1001b233:	mov    eax,DWORD PTR [edi+0x54]
1001b236:	mov    DWORD PTR [esi+0x54],eax
1001b239:	mov    eax,DWORD PTR [edi+0x58]
1001b23c:	mov    DWORD PTR [esi+0x58],eax
1001b23f:	mov    eax,DWORD PTR [edi+0x5c]
1001b242:	mov    DWORD PTR [esi+0x5c],eax
1001b245:	mov    eax,DWORD PTR [edi+0x60]
1001b248:	mov    DWORD PTR [esi+0x60],eax
1001b24b:	mov    eax,esi
1001b24d:	call   0x10059b0d
1001b252:	ret    0x4
1001b255:	push   0x14
1001b257:	mov    eax,0x10060bf4
1001b25c:	call   0x10059a68
1001b261:	mov    edi,DWORD PTR [ebp+0x18]
1001b264:	mov    esi,DWORD PTR [ebp+0x1c]
1001b267:	and    DWORD PTR [ebp-0x4],0x0
1001b26b:	mov    DWORD PTR [ebp-0x18],edi
1001b26e:	mov    DWORD PTR [ebp-0x14],esi
1001b271:	test   edi,edi
1001b273:	je     0x1001b27a
1001b275:	cmp    edi,DWORD PTR [ebp+0x20]
1001b278:	je     0x1001b27f
1001b27a:	call   0x100433b0
1001b27f:	cmp    esi,DWORD PTR [ebp+0x24]
1001b282:	je     0x1001b316
1001b288:	test   edi,edi
1001b28a:	jne    0x1001b291
1001b28c:	call   0x100433b0
1001b291:	cmp    esi,DWORD PTR [edi+0x4]
1001b294:	jne    0x1001b29b
1001b296:	call   0x100433b0
1001b29b:	push   DWORD PTR [ebp+0x14]
1001b29e:	mov    edi,DWORD PTR [ebp+0x8]
1001b2a1:	push   DWORD PTR [ebp+0x10]
1001b2a4:	add    esi,0x8
1001b2a7:	push   esi
1001b2a8:	call   0x1001afdb
1001b2ad:	lea    esi,[ebp+0x18]
1001b2b0:	call   0x10026666
1001b2b5:	mov    esi,DWORD PTR [ebp+0x1c]
1001b2b8:	mov    edi,DWORD PTR [ebp+0x18]
1001b2bb:	jmp    0x1001b271
1001b2bd:	mov    edi,DWORD PTR [ebp+0x14]
1001b2c0:	mov    eax,DWORD PTR [ebp-0x18]
1001b2c3:	test   eax,eax
1001b2c5:	je     0x1001b2cc
1001b2c7:	cmp    eax,DWORD PTR [ebp+0x18]
1001b2ca:	je     0x1001b2d1
1001b2cc:	call   0x100433b0
1001b2d1:	mov    eax,DWORD PTR [ebp-0x14]
1001b2d4:	cmp    eax,DWORD PTR [ebp+0x1c]
1001b2d7:	je     0x1001b30d
1001b2d9:	mov    ebx,DWORD PTR [ebp+0x10]
1001b2dc:	test   ebx,ebx
1001b2de:	mov    DWORD PTR [ebp+0x24],edi
1001b2e1:	jne    0x1001b2e8
1001b2e3:	call   0x100433b0
1001b2e8:	mov    esi,DWORD PTR [edi+0x4]
1001b2eb:	cmp    esi,DWORD PTR [ebx+0x4]
1001b2ee:	jne    0x1001b2f5
1001b2f0:	call   0x100433b0
1001b2f5:	push   esi
1001b2f6:	push   ebx
1001b2f7:	mov    ebx,DWORD PTR [ebp+0x8]
1001b2fa:	lea    eax,[ebp-0x20]
1001b2fd:	push   eax
1001b2fe:	call   0x1001aed9
1001b303:	lea    esi,[ebp-0x18]
1001b306:	call   0x10026666
1001b30b:	jmp    0x1001b2c0
1001b30d:	push   0x0
1001b30f:	push   0x0
1001b311:	call   0x100479b4
1001b316:	call   0x10059b0d
1001b31b:	ret    0x20
1001b31e:	push   0xffffffff
1001b320:	push   0x0
1001b322:	push   edi
1001b323:	mov    ecx,esi
1001b325:	call   0x10001241
1001b32a:	push   0xffffffff
1001b32c:	push   0x0
1001b32e:	lea    eax,[edi+0x1c]
1001b331:	push   eax
1001b332:	lea    ecx,[esi+0x1c]
1001b335:	call   0x10001241
1001b33a:	push   0xffffffff
1001b33c:	push   0x0
1001b33e:	lea    eax,[edi+0x38]
1001b341:	push   eax
1001b342:	lea    ecx,[esi+0x38]
1001b345:	call   0x10001241
1001b34a:	mov    eax,DWORD PTR [edi+0x54]
1001b34d:	mov    DWORD PTR [esi+0x54],eax
1001b350:	mov    eax,DWORD PTR [edi+0x58]
1001b353:	mov    DWORD PTR [esi+0x58],eax
1001b356:	mov    eax,DWORD PTR [edi+0x5c]
1001b359:	mov    DWORD PTR [esi+0x5c],eax
1001b35c:	mov    eax,DWORD PTR [edi+0x60]
1001b35f:	mov    DWORD PTR [esi+0x60],eax
1001b362:	mov    eax,esi
1001b364:	ret    
1001b365:	mov    eax,DWORD PTR [esp+0x4]
1001b369:	test   eax,eax
1001b36b:	je     0x1001b37f
1001b36d:	sub    eax,0x8
1001b370:	cmp    DWORD PTR [eax],0xdddd
1001b376:	jne    0x1001b37f
1001b378:	push   eax
1001b379:	call   0x10043508
1001b37e:	pop    ecx
1001b37f:	ret    
1001b380:	cmp    DWORD PTR [esp+0x4],0x0
1001b385:	jne    0x1001b38f
1001b387:	and    DWORD PTR [esi],0x0
1001b38a:	mov    eax,esi
1001b38c:	ret    0x4
1001b38f:	push   DWORD PTR [esp+0x4]
1001b393:	call   DWORD PTR ds:0x100662b0
1001b399:	test   eax,eax
1001b39b:	mov    DWORD PTR [esi],eax
1001b39d:	jne    0x1001b38a
1001b39f:	push   0x8007000e
1001b3a4:	call   0x10001f45
1001b3a9:	int3   
1001b3aa:	push   ebp
1001b3ab:	mov    ebp,esp
1001b3ad:	sub    esp,0x84
1001b3b3:	mov    eax,ds:0x1007e030
1001b3b8:	xor    eax,ebp
1001b3ba:	mov    DWORD PTR [ebp-0x4],eax
1001b3bd:	mov    eax,DWORD PTR [ebp+0x8]
1001b3c0:	push   0x40
1001b3c2:	lea    ecx,[ebp-0x84]
1001b3c8:	push   ecx
1001b3c9:	push   eax
1001b3ca:	call   DWORD PTR ds:0x10066418
1001b3d0:	lea    eax,[ebp-0x84]
1001b3d6:	push   eax
1001b3d7:	call   DWORD PTR ds:0x100662b0
1001b3dd:	test   eax,eax
1001b3df:	mov    DWORD PTR [esi],eax
1001b3e1:	jne    0x1001b3ed
1001b3e3:	push   0x8007000e
1001b3e8:	call   0x10001f45
1001b3ed:	mov    ecx,DWORD PTR [ebp-0x4]
1001b3f0:	xor    ecx,ebp
1001b3f2:	mov    eax,esi
1001b3f4:	call   0x10042e97
1001b3f9:	leave  
1001b3fa:	ret    0x4
1001b3fd:	push   ecx
1001b3fe:	call   DWORD PTR ds:0x10066294
1001b404:	ret    
1001b405:	push   ebp
1001b406:	mov    ebp,esp
1001b408:	push   ecx
1001b409:	push   ecx
1001b40a:	test   esi,esi
1001b40c:	je     0x1001b448
1001b40e:	test   eax,eax
1001b410:	je     0x1001b448
1001b412:	mov    DWORD PTR [esi],eax
1001b414:	call   DWORD PTR ds:0x10066160
1001b41a:	mov    DWORD PTR [esi+0x4],eax
1001b41d:	mov    eax,0x10080a40
1001b422:	push   eax
1001b423:	mov    DWORD PTR [ebp-0x8],eax
1001b426:	call   DWORD PTR ds:0x100660f0
1001b42c:	mov    eax,ds:0x10080a58
1001b431:	mov    DWORD PTR [esi+0x8],eax
1001b434:	lea    ecx,[ebp-0x8]
1001b437:	mov    BYTE PTR [ebp-0x4],0x1
1001b43b:	mov    DWORD PTR ds:0x10080a58,esi
1001b441:	call   0x10010c9f
1001b446:	leave  
1001b447:	ret    
1001b448:	push   0x0
1001b44a:	push   0x0
1001b44c:	push   0x1
1001b44e:	push   0xc0000005
1001b453:	call   DWORD PTR ds:0x10066128
1001b459:	int3   
1001b45a:	push   esi
1001b45b:	mov    esi,eax
1001b45d:	test   esi,esi
1001b45f:	push   edi
1001b460:	je     0x1001b490
1001b462:	mov    edi,DWORD PTR ds:0x10066348
1001b468:	cmp    WORD PTR [esi],0x0
1001b46c:	je     0x1001b490
1001b46e:	mov    eax,0x10070394
1001b473:	movzx  ecx,WORD PTR [eax]
1001b476:	test   cx,cx
1001b479:	je     0x1001b487
1001b47b:	cmp    WORD PTR [esi],cx
1001b47e:	je     0x1001b495
1001b480:	push   eax
1001b481:	call   edi
1001b483:	test   eax,eax
1001b485:	jne    0x1001b473
1001b487:	push   esi
1001b488:	call   edi
1001b48a:	mov    esi,eax
1001b48c:	test   esi,esi
1001b48e:	jne    0x1001b468
1001b490:	xor    eax,eax
1001b492:	pop    edi
1001b493:	pop    esi
1001b494:	ret    
1001b495:	push   esi
1001b496:	call   edi
1001b498:	jmp    0x1001b492
1001b49a:	push   ebp
1001b49b:	mov    ebp,esp
1001b49d:	push   ecx
1001b49e:	push   ecx
1001b49f:	test   eax,eax
1001b4a1:	jne    0x1001b4aa
1001b4a3:	mov    eax,0x80070057
1001b4a8:	jmp    0x1001b50b
1001b4aa:	mov    ecx,DWORD PTR [eax]
1001b4ac:	and    DWORD PTR [ebp-0x8],0x0
1001b4b0:	and    DWORD PTR [ebp-0x4],0x0
1001b4b4:	push   esi
1001b4b5:	lea    edx,[ebp-0x8]
1001b4b8:	push   edx
1001b4b9:	push   0x10070214
1001b4be:	push   eax
1001b4bf:	call   DWORD PTR [ecx]
1001b4c1:	mov    esi,eax
1001b4c3:	test   esi,esi
1001b4c5:	jl     0x1001b4ee
1001b4c7:	mov    eax,DWORD PTR [ebp-0x8]
1001b4ca:	mov    ecx,DWORD PTR [eax]
1001b4cc:	lea    edx,[ebp-0x4]
1001b4cf:	push   edx
1001b4d0:	push   DWORD PTR [ebp+0xc]
1001b4d3:	push   eax
1001b4d4:	call   DWORD PTR [ecx+0x10]
1001b4d7:	mov    esi,eax
1001b4d9:	test   esi,esi
1001b4db:	jl     0x1001b4ee
1001b4dd:	push   DWORD PTR [ebp+0x10]
1001b4e0:	mov    eax,DWORD PTR [ebp-0x4]
1001b4e3:	push   DWORD PTR [ebp+0x8]
1001b4e6:	mov    ecx,DWORD PTR [eax]
1001b4e8:	push   eax
1001b4e9:	call   DWORD PTR [ecx+0x14]
1001b4ec:	mov    esi,eax
1001b4ee:	mov    eax,DWORD PTR [ebp-0x4]
1001b4f1:	test   eax,eax
1001b4f3:	je     0x1001b4fb
1001b4f5:	mov    ecx,DWORD PTR [eax]
1001b4f7:	push   eax
1001b4f8:	call   DWORD PTR [ecx+0x8]
1001b4fb:	mov    eax,DWORD PTR [ebp-0x8]
1001b4fe:	test   eax,eax
1001b500:	je     0x1001b508
1001b502:	mov    ecx,DWORD PTR [eax]
1001b504:	push   eax
1001b505:	call   DWORD PTR [ecx+0x8]
1001b508:	mov    eax,esi
1001b50a:	pop    esi
1001b50b:	leave  
1001b50c:	ret    0xc
1001b50f:	push   ebp
1001b510:	mov    ebp,esp
1001b512:	push   ecx
1001b513:	push   ecx
1001b514:	test   eax,eax
1001b516:	jne    0x1001b51f
1001b518:	mov    eax,0x80070057
1001b51d:	jmp    0x1001b57d
1001b51f:	mov    ecx,DWORD PTR [eax]
1001b521:	and    DWORD PTR [ebp-0x8],0x0
1001b525:	and    DWORD PTR [ebp-0x4],0x0
1001b529:	push   esi
1001b52a:	lea    edx,[ebp-0x8]
1001b52d:	push   edx
1001b52e:	push   0x10070214
1001b533:	push   eax
1001b534:	call   DWORD PTR [ecx]
1001b536:	mov    esi,eax
1001b538:	test   esi,esi
1001b53a:	jl     0x1001b560
1001b53c:	mov    eax,DWORD PTR [ebp-0x8]
1001b53f:	mov    ecx,DWORD PTR [eax]
1001b541:	lea    edx,[ebp-0x4]
1001b544:	push   edx
1001b545:	push   DWORD PTR [ebp+0x8]
1001b548:	push   eax
1001b549:	call   DWORD PTR [ecx+0x10]
1001b54c:	mov    esi,eax
1001b54e:	test   esi,esi
1001b550:	jl     0x1001b560
1001b552:	mov    eax,DWORD PTR [ebp-0x4]
1001b555:	push   DWORD PTR [ebp+0xc]
1001b558:	mov    ecx,DWORD PTR [eax]
1001b55a:	push   eax
1001b55b:	call   DWORD PTR [ecx+0x18]
1001b55e:	mov    esi,eax
1001b560:	mov    eax,DWORD PTR [ebp-0x4]
1001b563:	test   eax,eax
1001b565:	je     0x1001b56d
1001b567:	mov    ecx,DWORD PTR [eax]
1001b569:	push   eax
1001b56a:	call   DWORD PTR [ecx+0x8]
1001b56d:	mov    eax,DWORD PTR [ebp-0x8]
1001b570:	test   eax,eax
1001b572:	je     0x1001b57a
1001b574:	mov    ecx,DWORD PTR [eax]
1001b576:	push   eax
1001b577:	call   DWORD PTR [ecx+0x8]
1001b57a:	mov    eax,esi
1001b57c:	pop    esi
1001b57d:	leave  
1001b57e:	ret    0x8
1001b581:	push   ebp
1001b582:	mov    ebp,esp
1001b584:	push   edi
1001b585:	xor    edi,edi
1001b587:	xor    eax,eax
1001b589:	cmp    DWORD PTR ds:0x1007f96c,edi
1001b58f:	je     0x1001b599
1001b591:	cmp    DWORD PTR ds:0x1007f974,edi
1001b597:	jne    0x1001b5a1
1001b599:	push   DWORD PTR [ebp+0xc]
1001b59c:	call   0x1001b79a
1001b5a1:	cmp    DWORD PTR ds:0x1007f96c,edi
1001b5a7:	je     0x1001b611
1001b5a9:	cmp    DWORD PTR ds:0x1007f974,edi
1001b5af:	push   esi
1001b5b0:	je     0x1001b5fe
1001b5b2:	cmp    DWORD PTR [ebp+0x8],0x1
1001b5b6:	jne    0x1001b5fe
1001b5b8:	push   DWORD PTR [ebx]
1001b5ba:	call   DWORD PTR ds:0x100660c4
1001b5c0:	mov    esi,DWORD PTR ds:0x1007f978
1001b5c6:	dec    esi
1001b5c7:	cmp    esi,edi
1001b5c9:	mov    DWORD PTR [ebp+0xc],eax
1001b5cc:	jl     0x1001b5fe
1001b5ce:	mov    edi,esi
1001b5d0:	imul   edi,edi,0xc
1001b5d3:	mov    eax,ds:0x1007f974
1001b5d8:	add    eax,edi
1001b5da:	mov    ecx,DWORD PTR [eax+0x4]
1001b5dd:	cmp    DWORD PTR [ebp+0xc],ecx
1001b5e0:	jne    0x1001b5f6
1001b5e2:	mov    eax,DWORD PTR [eax]
1001b5e4:	add    ecx,ecx
1001b5e6:	push   ecx
1001b5e7:	push   DWORD PTR [ebx]
1001b5e9:	push   eax
1001b5ea:	call   0x10043726
1001b5ef:	add    esp,0xc
1001b5f2:	test   eax,eax
1001b5f4:	je     0x1001b616
1001b5f6:	dec    esi
1001b5f7:	sub    edi,0xc
1001b5fa:	test   esi,esi
1001b5fc:	jge    0x1001b5d3
1001b5fe:	push   DWORD PTR [ebp+0x10]
1001b601:	mov    eax,ds:0x1007f96c
1001b606:	push   DWORD PTR [ebp+0x8]
1001b609:	mov    ecx,DWORD PTR [eax]
1001b60b:	push   ebx
1001b60c:	push   eax
1001b60d:	call   DWORD PTR [ecx+0x28]
1001b610:	pop    esi
1001b611:	pop    edi
1001b612:	pop    ebp
1001b613:	ret    0xc
1001b616:	mov    eax,ds:0x1007f974
1001b61b:	imul   esi,esi,0xc
1001b61e:	mov    eax,DWORD PTR [esi+eax*1+0x8]
1001b622:	mov    ecx,DWORD PTR [ebp+0x10]
1001b625:	mov    DWORD PTR [ecx],eax
1001b627:	xor    eax,eax
1001b629:	jmp    0x1001b610
1001b62b:	push   0x18
1001b62d:	mov    eax,0x1005f847
1001b632:	call   0x10059a68
1001b637:	mov    ebx,DWORD PTR [ebp+0x8]
1001b63a:	mov    eax,DWORD PTR [ebx]
1001b63c:	lea    ecx,[ebp-0x24]
1001b63f:	push   ecx
1001b640:	push   ebx
1001b641:	call   DWORD PTR [eax+0xc]
1001b644:	xor    ecx,ecx
1001b646:	cmp    eax,ecx
1001b648:	jl     0x1001b790
1001b64e:	mov    eax,DWORD PTR [ebp-0x24]
1001b651:	movzx  eax,WORD PTR [eax+0x2c]
1001b655:	cmp    eax,ecx
1001b657:	mov    DWORD PTR [ebp-0x1c],ecx
1001b65a:	mov    ds:0x1007f978,eax
1001b65f:	mov    DWORD PTR ds:0x1007f974,ecx
1001b665:	je     0x1001b6e2
1001b667:	mov    edi,eax
1001b669:	push   0xc
1001b66b:	pop    edx
1001b66c:	mul    edx
1001b66e:	mov    DWORD PTR [ebp-0x4],ecx
1001b671:	seto   cl
1001b674:	neg    ecx
1001b676:	or     ecx,eax
1001b678:	xor    eax,eax
1001b67a:	add    ecx,0x4
1001b67d:	setb   al
1001b680:	neg    eax
1001b682:	or     eax,ecx
1001b684:	push   eax
1001b685:	call   0x10043721
1001b68a:	pop    ecx
1001b68b:	mov    DWORD PTR [ebp-0x20],eax
1001b68e:	test   eax,eax
1001b690:	mov    BYTE PTR [ebp-0x4],0x1
1001b694:	je     0x1001b6b0
1001b696:	push   0x10001009
1001b69b:	push   0x10010447
1001b6a0:	push   edi
1001b6a1:	lea    esi,[eax+0x4]
1001b6a4:	push   0xc
1001b6a6:	push   esi
1001b6a7:	mov    DWORD PTR [eax],edi
1001b6a9:	call   0x10045df8
1001b6ae:	jmp    0x1001b6b2
1001b6b0:	xor    esi,esi
1001b6b2:	or     DWORD PTR [ebp-0x4],0xffffffff
1001b6b6:	mov    DWORD PTR [ebp-0x1c],esi
1001b6b9:	jmp    0x1001b6c4
1001b6bb:	mov    eax,0x1001b6c1
1001b6c0:	ret    
1001b6c1:	mov    ebx,DWORD PTR [ebp+0x8]
1001b6c4:	cmp    DWORD PTR [ebp-0x1c],0x0
1001b6c8:	jne    0x1001b6dd
1001b6ca:	push   DWORD PTR [ebp-0x24]
1001b6cd:	mov    eax,DWORD PTR [ebx]
1001b6cf:	push   ebx
1001b6d0:	call   DWORD PTR [eax+0x4c]
1001b6d3:	mov    eax,0x8007000e
1001b6d8:	jmp    0x1001b792
1001b6dd:	mov    eax,ds:0x1007f978
1001b6e2:	and    DWORD PTR [ebp-0x18],0x0
1001b6e6:	test   eax,eax
1001b6e8:	jle    0x1001b77f
1001b6ee:	mov    esi,DWORD PTR [ebp-0x1c]
1001b6f1:	mov    ebx,DWORD PTR ds:0x100662b4
1001b6f7:	mov    edi,DWORD PTR [ebp+0x8]
1001b6fa:	mov    eax,DWORD PTR [edi]
1001b6fc:	lea    ecx,[ebp-0x20]
1001b6ff:	push   ecx
1001b700:	push   DWORD PTR [ebp-0x18]
1001b703:	push   edi
1001b704:	call   DWORD PTR [eax+0x14]
1001b707:	test   eax,eax
1001b709:	jl     0x1001b767
1001b70b:	xor    eax,eax
1001b70d:	mov    DWORD PTR [ebp-0x14],eax
1001b710:	push   eax
1001b711:	push   eax
1001b712:	push   eax
1001b713:	mov    DWORD PTR [ebp-0x4],0x3
1001b71a:	mov    ecx,DWORD PTR [edi]
1001b71c:	lea    eax,[ebp-0x14]
1001b71f:	push   eax
1001b720:	mov    eax,DWORD PTR [ebp-0x20]
1001b723:	push   DWORD PTR [eax]
1001b725:	push   edi
1001b726:	call   DWORD PTR [ecx+0x30]
1001b729:	test   eax,eax
1001b72b:	jl     0x1001b755
1001b72d:	mov    edi,DWORD PTR [ebp-0x14]
1001b730:	mov    eax,DWORD PTR [esi]
1001b732:	and    DWORD PTR [ebp-0x14],0x0
1001b736:	cmp    eax,edi
1001b738:	je     0x1001b73f
1001b73a:	push   eax
1001b73b:	call   ebx
1001b73d:	mov    DWORD PTR [esi],edi
1001b73f:	push   DWORD PTR [esi]
1001b741:	call   DWORD PTR ds:0x100662ac
1001b747:	mov    edi,DWORD PTR [ebp+0x8]
1001b74a:	mov    DWORD PTR [esi+0x4],eax
1001b74d:	mov    eax,DWORD PTR [ebp-0x20]
1001b750:	mov    eax,DWORD PTR [eax]
1001b752:	mov    DWORD PTR [esi+0x8],eax
1001b755:	push   DWORD PTR [ebp-0x20]
1001b758:	mov    eax,DWORD PTR [edi]
1001b75a:	push   edi
1001b75b:	call   DWORD PTR [eax+0x50]
1001b75e:	or     DWORD PTR [ebp-0x4],0xffffffff
1001b762:	push   DWORD PTR [ebp-0x14]
1001b765:	call   ebx
1001b767:	inc    DWORD PTR [ebp-0x18]
1001b76a:	mov    eax,DWORD PTR [ebp-0x18]
1001b76d:	add    esi,0xc
1001b770:	cmp    eax,DWORD PTR ds:0x1007f978
1001b776:	jl     0x1001b6f7
1001b77c:	mov    ebx,DWORD PTR [ebp+0x8]
1001b77f:	mov    eax,DWORD PTR [ebp-0x1c]
1001b782:	push   DWORD PTR [ebp-0x24]
1001b785:	mov    ds:0x1007f974,eax
1001b78a:	mov    eax,DWORD PTR [ebx]
1001b78c:	push   ebx
1001b78d:	call   DWORD PTR [eax+0x4c]
1001b790:	xor    eax,eax
1001b792:	call   0x10059b0d
1001b797:	ret    0x4
1001b79a:	push   ebp
1001b79b:	sub    esp,0x208
1001b7a1:	lea    ebp,[esp-0x4]
1001b7a5:	mov    eax,ds:0x1007e030
1001b7aa:	xor    eax,ebp
1001b7ac:	mov    DWORD PTR [ebp+0x208],eax
1001b7b2:	push   0x18
1001b7b4:	mov    eax,0x1005fb58
1001b7b9:	call   0x10059a35
1001b7be:	xor    ebx,ebx
1001b7c0:	cmp    DWORD PTR ds:0x1007f96c,ebx
1001b7c6:	je     0x1001b7d7
1001b7c8:	cmp    DWORD PTR ds:0x1007f974,ebx
1001b7ce:	je     0x1001b7d7
1001b7d0:	xor    eax,eax
1001b7d2:	jmp    0x1001b975
1001b7d7:	mov    eax,ds:0x10080c04
1001b7dc:	add    eax,0x10
1001b7df:	mov    DWORD PTR [ebp-0x24],eax
1001b7e2:	push   eax
1001b7e3:	mov    DWORD PTR [ebp-0x4],ebx
1001b7e6:	call   DWORD PTR ds:0x100660f0
1001b7ec:	cmp    DWORD PTR ds:0x1007f96c,ebx
1001b7f2:	mov    BYTE PTR [ebp-0x20],0x1
1001b7f6:	mov    edi,0x80004005
1001b7fb:	jne    0x1001b950
1001b801:	mov    esi,DWORD PTR ds:0x1007f964
1001b807:	mov    eax,esi
1001b809:	mov    ecx,0x10080c08
1001b80e:	mov    DWORD PTR [ebp-0x14],ebx
1001b811:	call   0x100102bf
1001b816:	mov    cx,WORD PTR ds:0x1007f968
1001b81d:	test   eax,eax
1001b81f:	mov    ax,ds:0x1007f96a
1001b825:	je     0x1001b86f
1001b827:	cmp    cx,0xffff
1001b82c:	jne    0x1001b86f
1001b82e:	cmp    ax,cx
1001b831:	jne    0x1001b86f
1001b833:	mov    esi,0x104
1001b838:	push   esi
1001b839:	lea    eax,[ebp+0x0]
1001b83c:	push   eax
1001b83d:	push   DWORD PTR ds:0x10080a04
1001b843:	call   DWORD PTR ds:0x10066124
1001b849:	cmp    eax,ebx
1001b84b:	je     0x1001b952
1001b851:	cmp    eax,esi
1001b853:	je     0x1001b952
1001b859:	call   DWORD PTR ds:0x1007efec
1001b85f:	lea    eax,[ebp-0x14]
1001b862:	push   eax
1001b863:	lea    eax,[ebp+0x0]
1001b866:	push   eax
1001b867:	call   DWORD PTR ds:0x10066290
1001b86d:	jmp    0x1001b882
1001b86f:	lea    edx,[ebp-0x14]
1001b872:	push   edx
1001b873:	push   DWORD PTR [ebp+0x214]
1001b879:	push   eax
1001b87a:	push   ecx
1001b87b:	push   esi
1001b87c:	call   DWORD PTR ds:0x10066284
1001b882:	mov    edi,eax
1001b884:	cmp    edi,ebx
1001b886:	jl     0x1001b952
1001b88c:	mov    DWORD PTR [ebp-0x10],ebx
1001b88f:	lea    edx,[ebp-0x10]
1001b892:	mov    BYTE PTR [ebp-0x4],0x1
1001b896:	mov    eax,DWORD PTR [ebp-0x14]
1001b899:	mov    ecx,DWORD PTR [eax]
1001b89b:	push   edx
1001b89c:	push   DWORD PTR ds:0x1007f960
1001b8a2:	push   eax
1001b8a3:	call   DWORD PTR [ecx+0x18]
1001b8a6:	mov    edi,eax
1001b8a8:	cmp    edi,ebx
1001b8aa:	jl     0x1001b935
1001b8b0:	mov    eax,DWORD PTR [ebp-0x10]
1001b8b3:	cmp    eax,ebx
1001b8b5:	mov    DWORD PTR [ebp-0x18],eax
1001b8b8:	je     0x1001b8c3
1001b8ba:	mov    ecx,DWORD PTR [eax]
1001b8bc:	push   eax
1001b8bd:	call   DWORD PTR [ecx+0x4]
1001b8c0:	mov    eax,DWORD PTR [ebp-0x10]
1001b8c3:	mov    DWORD PTR [ebp-0x1c],ebx
1001b8c6:	lea    edx,[ebp-0x1c]
1001b8c9:	push   edx
1001b8ca:	push   0x1006dd3c
1001b8cf:	mov    BYTE PTR [ebp-0x4],0x3
1001b8d3:	mov    ecx,DWORD PTR [eax]
1001b8d5:	push   eax
1001b8d6:	call   DWORD PTR [ecx]
1001b8d8:	test   eax,eax
1001b8da:	jl     0x1001b8e8
1001b8dc:	lea    eax,[ebp-0x18]
1001b8df:	push   eax
1001b8e0:	lea    eax,[ebp-0x1c]
1001b8e3:	call   0x10010cb6
1001b8e8:	mov    eax,DWORD PTR [ebp-0x18]
1001b8eb:	mov    ds:0x1007f96c,eax
1001b8f0:	mov    eax,ds:0x10080c04
1001b8f5:	mov    ecx,eax
1001b8f7:	add    eax,0x4
1001b8fa:	neg    ecx
1001b8fc:	push   0x1007f960
1001b901:	sbb    ecx,ecx
1001b903:	push   0x100106d2
1001b908:	and    ecx,eax
1001b90a:	push   ecx
1001b90b:	mov    DWORD PTR [ebp-0x18],ebx
1001b90e:	call   0x100103c9
1001b913:	mov    BYTE PTR [ebp-0x4],0x2
1001b917:	mov    eax,DWORD PTR [ebp-0x1c]
1001b91a:	cmp    eax,ebx
1001b91c:	je     0x1001b924
1001b91e:	mov    ecx,DWORD PTR [eax]
1001b920:	push   eax
1001b921:	call   DWORD PTR [ecx+0x8]
1001b924:	mov    BYTE PTR [ebp-0x4],0x1
1001b928:	mov    eax,DWORD PTR [ebp-0x18]
1001b92b:	cmp    eax,ebx
1001b92d:	je     0x1001b935
1001b92f:	mov    ecx,DWORD PTR [eax]
1001b931:	push   eax
1001b932:	call   DWORD PTR [ecx+0x8]
1001b935:	mov    eax,DWORD PTR [ebp-0x14]
1001b938:	mov    ecx,DWORD PTR [eax]
1001b93a:	push   eax
1001b93b:	call   DWORD PTR [ecx+0x8]
1001b93e:	mov    BYTE PTR [ebp-0x4],bl
1001b941:	mov    eax,DWORD PTR [ebp-0x10]
1001b944:	cmp    eax,ebx
1001b946:	je     0x1001b952
1001b948:	mov    ecx,DWORD PTR [eax]
1001b94a:	push   eax
1001b94b:	call   DWORD PTR [ecx+0x8]
1001b94e:	jmp    0x1001b952
1001b950:	xor    edi,edi
1001b952:	mov    eax,ds:0x1007f96c
1001b957:	cmp    eax,ebx
1001b959:	je     0x1001b96b
1001b95b:	cmp    DWORD PTR ds:0x1007f974,ebx
1001b961:	jne    0x1001b96b
1001b963:	push   eax
1001b964:	call   0x1001b62b
1001b969:	mov    edi,eax
1001b96b:	lea    ecx,[ebp-0x24]
1001b96e:	call   0x10010c9f
1001b973:	mov    eax,edi
1001b975:	mov    ecx,DWORD PTR [ebp-0xc]
1001b978:	mov    DWORD PTR fs:0x0,ecx
1001b97f:	pop    ecx
1001b980:	pop    edi
1001b981:	pop    esi
1001b982:	pop    ebx
1001b983:	mov    ecx,DWORD PTR [ebp+0x208]
1001b989:	xor    ecx,ebp
1001b98b:	call   0x10042e97
1001b990:	add    ebp,0x20c
1001b996:	leave  
1001b997:	ret    0x4
1001b99a:	push   ebp
1001b99b:	sub    esp,0x3e8
1001b9a1:	lea    ebp,[esp-0x4]
1001b9a5:	mov    eax,ds:0x1007e030
1001b9aa:	xor    eax,ebp
1001b9ac:	mov    DWORD PTR [ebp+0x3e8],eax
1001b9b2:	push   0x18
1001b9b4:	mov    eax,0x1005fb10
1001b9b9:	call   0x10059a35
1001b9be:	mov    eax,DWORD PTR [ebp+0x3f4]
1001b9c4:	xor    ebx,ebx
1001b9c6:	mov    esi,ecx
1001b9c8:	cmp    esi,ebx
1001b9ca:	mov    DWORD PTR [ebp-0x20],eax
1001b9cd:	mov    DWORD PTR [eax],ebx
1001b9cf:	je     0x1001bb06
1001b9d5:	mov    eax,DWORD PTR [esi]
1001b9d7:	lea    ecx,[ebp-0x14]
1001b9da:	push   ecx
1001b9db:	push   0x2
1001b9dd:	lea    ecx,[ebp-0x1c]
1001b9e0:	push   ecx
1001b9e1:	push   esi
1001b9e2:	call   DWORD PTR [eax+0xc]
1001b9e5:	cmp    eax,ebx
1001b9e7:	jl     0x1001bb08
1001b9ed:	mov    eax,DWORD PTR [esi]
1001b9ef:	lea    ecx,[ebp-0x14]
1001b9f2:	push   ecx
1001b9f3:	push   0x4
1001b9f5:	lea    ecx,[ebp-0x24]
1001b9f8:	push   ecx
1001b9f9:	push   esi
1001b9fa:	call   DWORD PTR [eax+0xc]
1001b9fd:	cmp    eax,ebx
1001b9ff:	jl     0x1001bb08
1001ba05:	mov    eax,DWORD PTR [esi]
1001ba07:	lea    ecx,[ebp-0x14]
1001ba0a:	push   ecx
1001ba0b:	push   0x4
1001ba0d:	lea    ecx,[ebp-0x18]
1001ba10:	push   ecx
1001ba11:	push   esi
1001ba12:	call   DWORD PTR [eax+0xc]
1001ba15:	cmp    eax,ebx
1001ba17:	jl     0x1001bb08
1001ba1d:	cmp    DWORD PTR [ebp-0x18],ebx
1001ba20:	jbe    0x1001baa6
1001ba26:	jne    0x1001ba4e
1001ba28:	xor    edi,edi
1001ba2a:	mov    DWORD PTR [ebp-0x10],edi
1001ba2d:	push   edi
1001ba2e:	mov    DWORD PTR [ebp-0x4],ebx
1001ba31:	call   DWORD PTR ds:0x100662ac
1001ba37:	test   eax,eax
1001ba39:	jne    0x1001ba6b
1001ba3b:	mov    esi,0x8007000e
1001ba40:	push   edi
1001ba41:	call   DWORD PTR ds:0x100662b4
1001ba47:	mov    eax,esi
1001ba49:	jmp    0x1001bb08
1001ba4e:	push   DWORD PTR [ebp-0x18]
1001ba51:	push   ebx
1001ba52:	call   DWORD PTR ds:0x1006629c
1001ba58:	mov    edi,eax
1001ba5a:	cmp    edi,ebx
1001ba5c:	mov    DWORD PTR [ebp-0x10],edi
1001ba5f:	jne    0x1001ba2d
1001ba61:	push   0x8007000e
1001ba66:	call   0x10001f45
1001ba6b:	mov    eax,DWORD PTR [ebp-0x18]
1001ba6e:	lea    eax,[eax+eax*1+0x2]
1001ba72:	push   eax
1001ba73:	push   ebx
1001ba74:	push   edi
1001ba75:	call   0x10045c00
1001ba7a:	mov    eax,DWORD PTR [esi]
1001ba7c:	add    esp,0xc
1001ba7f:	lea    ecx,[ebp-0x14]
1001ba82:	push   ecx
1001ba83:	mov    ecx,DWORD PTR [ebp-0x18]
1001ba86:	add    ecx,ecx
1001ba88:	push   ecx
1001ba89:	push   edi
1001ba8a:	push   esi
1001ba8b:	call   DWORD PTR [eax+0xc]
1001ba8e:	cmp    eax,ebx
1001ba90:	jge    0x1001ba96
1001ba92:	mov    esi,eax
1001ba94:	jmp    0x1001ba40
1001ba96:	mov    eax,DWORD PTR [ebp-0x20]
1001ba99:	or     DWORD PTR [ebp-0x4],0xffffffff
1001ba9d:	push   ebx
1001ba9e:	mov    DWORD PTR [eax],edi
1001baa0:	call   DWORD PTR ds:0x100662b4
1001baa6:	mov    ax,WORD PTR [ebp-0x1c]
1001baaa:	cmp    ax,0x37a
1001baae:	je     0x1001bac6
1001bab0:	cmp    ax,0x37b
1001bab4:	je     0x1001bac6
1001bab6:	sub    ax,0x376
1001baba:	neg    ax
1001babd:	sbb    eax,eax
1001babf:	and    eax,0x80004005
1001bac4:	jmp    0x1001bb08
1001bac6:	mov    eax,DWORD PTR [esi]
1001bac8:	lea    ecx,[ebp-0x14]
1001bacb:	push   ecx
1001bacc:	push   0x4
1001bace:	lea    ecx,[ebp-0x10]
1001bad1:	push   ecx
1001bad2:	push   esi
1001bad3:	call   DWORD PTR [eax+0xc]
1001bad6:	cmp    eax,ebx
1001bad8:	jl     0x1001bb08
1001bada:	sub    DWORD PTR [ebp-0x10],0x4
1001bade:	je     0x1001bb06
1001bae0:	mov    edi,0x3e8
1001bae5:	cmp    DWORD PTR [ebp-0x10],edi
1001bae8:	mov    eax,DWORD PTR [ebp-0x10]
1001baeb:	jb     0x1001baef
1001baed:	mov    eax,edi
1001baef:	mov    ecx,DWORD PTR [esi]
1001baf1:	lea    edx,[ebp-0x14]
1001baf4:	push   edx
1001baf5:	push   eax
1001baf6:	lea    eax,[ebp+0x0]
1001baf9:	push   eax
1001bafa:	push   esi
1001bafb:	call   DWORD PTR [ecx+0xc]
1001bafe:	mov    eax,DWORD PTR [ebp-0x14]
1001bb01:	sub    DWORD PTR [ebp-0x10],eax
1001bb04:	jne    0x1001bae5
1001bb06:	xor    eax,eax
1001bb08:	mov    ecx,DWORD PTR [ebp-0xc]
1001bb0b:	mov    DWORD PTR fs:0x0,ecx
1001bb12:	pop    ecx
1001bb13:	pop    edi
1001bb14:	pop    esi
1001bb15:	pop    ebx
1001bb16:	mov    ecx,DWORD PTR [ebp+0x3e8]
1001bb1c:	xor    ecx,ebp
1001bb1e:	call   0x10042e97
1001bb23:	add    ebp,0x3ec
1001bb29:	leave  
1001bb2a:	ret    
1001bb2b:	push   ebp
1001bb2c:	mov    ebp,esp
1001bb2e:	sub    esp,0x14
1001bb31:	mov    eax,ds:0x1007e030
1001bb36:	xor    eax,ebp
1001bb38:	mov    DWORD PTR [ebp-0x4],eax
1001bb3b:	mov    eax,DWORD PTR [ebp+0x8]
1001bb3e:	push   DWORD PTR [eax]
1001bb40:	call   DWORD PTR ds:0x100662e0
1001bb46:	push   0x8
1001bb48:	lea    ecx,[ebp-0x14]
1001bb4b:	push   ecx
1001bb4c:	push   eax
1001bb4d:	call   DWORD PTR ds:0x1006634c
1001bb53:	test   eax,eax
1001bb55:	je     0x1001bb6b
1001bb57:	push   0x10070374
1001bb5c:	lea    eax,[ebp-0x14]
1001bb5f:	push   eax
1001bb60:	call   DWORD PTR ds:0x10066150
1001bb66:	neg    eax
1001bb68:	sbb    eax,eax
1001bb6a:	inc    eax
1001bb6b:	mov    ecx,DWORD PTR [ebp-0x4]
1001bb6e:	xor    ecx,ebp
1001bb70:	call   0x10042e97
1001bb75:	leave  
1001bb76:	ret    0x4
1001bb79:	cmp    DWORD PTR [edi+0xc],0x0
1001bb7d:	push   esi
1001bb7e:	mov    esi,eax
1001bb80:	jne    0x1001bb8e
1001bb82:	call   0x1005719b
1001bb87:	test   eax,eax
1001bb89:	mov    DWORD PTR [edi+0xc],eax
1001bb8c:	je     0x1001bbbd
1001bb8e:	mov    eax,DWORD PTR [edi+0xc]
1001bb91:	mov    ecx,DWORD PTR [esp+0x8]
1001bb95:	sub    esi,eax
1001bb97:	push   0xd
1001bb99:	sub    esi,0xd
1001bb9c:	push   eax
1001bb9d:	mov    DWORD PTR [eax],0x42444c7
1001bba3:	mov    DWORD PTR [eax+0x4],ecx
1001bba6:	mov    BYTE PTR [eax+0x8],0xe9
1001bbaa:	mov    DWORD PTR [eax+0x9],esi
1001bbad:	call   DWORD PTR ds:0x10066108
1001bbb3:	push   eax
1001bbb4:	call   DWORD PTR ds:0x10066158
1001bbba:	xor    eax,eax
1001bbbc:	inc    eax
1001bbbd:	pop    esi
1001bbbe:	ret    0x4
1001bbc1:	push   ecx
1001bbc2:	push   ecx
1001bbc3:	test   edi,edi
1001bbc5:	jne    0x1001bbd1
1001bbc7:	push   0x80004003
1001bbcc:	call   0x10001f45
1001bbd1:	test   esi,esi
1001bbd3:	je     0x1001bbc7
1001bbd5:	push   ebx
1001bbd6:	push   ebp
1001bbd7:	push   0x0
1001bbd9:	call   DWORD PTR ds:0x100662c0
1001bbdf:	mov    ebp,DWORD PTR ds:0x10066040
1001bbe5:	mov    ebx,eax
1001bbe7:	push   0x58
1001bbe9:	push   ebx
1001bbea:	call   ebp
1001bbec:	push   0x5a
1001bbee:	push   ebx
1001bbef:	mov    DWORD PTR [esp+0x10],eax
1001bbf3:	call   ebp
1001bbf5:	push   ebx
1001bbf6:	push   0x0
1001bbf8:	mov    DWORD PTR [esp+0x14],eax
1001bbfc:	call   DWORD PTR ds:0x10066350
1001bc02:	mov    ebx,DWORD PTR ds:0x1006614c
1001bc08:	mov    ebp,0x9ec
1001bc0d:	push   ebp
1001bc0e:	push   DWORD PTR [edi]
1001bc10:	push   DWORD PTR [esp+0x10]
1001bc14:	call   ebx
1001bc16:	push   ebp
1001bc17:	mov    DWORD PTR [esi],eax
1001bc19:	push   DWORD PTR [edi+0x4]
1001bc1c:	push   DWORD PTR [esp+0x14]
1001bc20:	call   ebx
1001bc22:	pop    ebp
1001bc23:	mov    DWORD PTR [esi+0x4],eax
1001bc26:	pop    ebx
1001bc27:	pop    ecx
1001bc28:	pop    ecx
1001bc29:	ret    
1001bc2a:	push   ecx
1001bc2b:	push   ecx
1001bc2c:	test   edi,edi
1001bc2e:	jne    0x1001bc3a
1001bc30:	push   0x80004003
1001bc35:	call   0x10001f45
1001bc3a:	test   esi,esi
1001bc3c:	je     0x1001bc30
1001bc3e:	push   ebx
1001bc3f:	push   ebp
1001bc40:	push   0x0
1001bc42:	call   DWORD PTR ds:0x100662c0
1001bc48:	mov    ebp,DWORD PTR ds:0x10066040
1001bc4e:	mov    ebx,eax
1001bc50:	push   0x58
1001bc52:	push   ebx
1001bc53:	call   ebp
1001bc55:	push   0x5a
1001bc57:	push   ebx
1001bc58:	mov    DWORD PTR [esp+0x10],eax
1001bc5c:	call   ebp
1001bc5e:	push   ebx
1001bc5f:	push   0x0
1001bc61:	mov    DWORD PTR [esp+0x14],eax
1001bc65:	call   DWORD PTR ds:0x10066350
1001bc6b:	push   DWORD PTR [esp+0x8]
1001bc6f:	mov    ebx,DWORD PTR ds:0x1006614c
1001bc75:	push   DWORD PTR [edi]
1001bc77:	mov    ebp,0x9ec
1001bc7c:	push   ebp
1001bc7d:	call   ebx
1001bc7f:	push   DWORD PTR [esp+0xc]
1001bc83:	mov    DWORD PTR [esi],eax
1001bc85:	push   DWORD PTR [edi+0x4]
1001bc88:	push   ebp
1001bc89:	call   ebx
1001bc8b:	pop    ebp
1001bc8c:	mov    DWORD PTR [esi+0x4],eax
1001bc8f:	pop    ebx
1001bc90:	pop    ecx
1001bc91:	pop    ecx
1001bc92:	ret    
1001bc93:	push   0x20
1001bc95:	mov    eax,0x1005f63d
1001bc9a:	call   0x10059a9e
1001bc9f:	test   ebx,ebx
1001bca1:	mov    eax,DWORD PTR [ebp+0x8]
1001bca4:	mov    esi,ecx
1001bca6:	mov    DWORD PTR [ebp-0x2c],eax
1001bca9:	jne    0x1001bcb5
1001bcab:	mov    eax,0x80004003
1001bcb0:	jmp    0x1001be1d
1001bcb5:	and    DWORD PTR [ebx],0x0
1001bcb8:	test   esi,esi
1001bcba:	mov    DWORD PTR [ebp-0x24],0x80004005
1001bcc1:	mov    BYTE PTR [edi],0x0
1001bcc4:	je     0x1001be1b
1001bcca:	movzx  eax,WORD PTR [esi]
1001bccd:	test   ax,ax
1001bcd0:	je     0x1001be1b
1001bcd6:	cmp    ax,0x4d
1001bcda:	je     0x1001bce2
1001bcdc:	cmp    ax,0x6d
1001bce0:	jne    0x1001bd56
1001bce2:	movzx  eax,WORD PTR [esi+0x2]
1001bce6:	cmp    ax,0x53
1001bcea:	je     0x1001bcf2
1001bcec:	cmp    ax,0x73
1001bcf0:	jne    0x1001bd56
1001bcf2:	movzx  eax,WORD PTR [esi+0x4]
1001bcf6:	cmp    ax,0x48
1001bcfa:	je     0x1001bd02
1001bcfc:	cmp    ax,0x68
1001bd00:	jne    0x1001bd56
1001bd02:	movzx  eax,WORD PTR [esi+0x6]
1001bd06:	cmp    ax,0x54
1001bd0a:	je     0x1001bd12
1001bd0c:	cmp    ax,0x74
1001bd10:	jne    0x1001bd56
1001bd12:	movzx  eax,WORD PTR [esi+0x8]
1001bd16:	cmp    ax,0x4d
1001bd1a:	je     0x1001bd22
1001bd1c:	cmp    ax,0x6d
1001bd20:	jne    0x1001bd56
1001bd22:	movzx  eax,WORD PTR [esi+0xa]
1001bd26:	cmp    ax,0x4c
1001bd2a:	je     0x1001bd32
1001bd2c:	cmp    ax,0x6c
1001bd30:	jne    0x1001bd56
1001bd32:	cmp    WORD PTR [esi+0xc],0x3a
1001bd37:	jne    0x1001bd56
1001bd39:	push   ebx
1001bd3a:	push   0x1006dd2c
1001bd3f:	push   0x1
1001bd41:	push   0x0
1001bd43:	push   0x10070980
1001bd48:	call   DWORD PTR ds:0x1006643c
1001bd4e:	mov    BYTE PTR [edi],0x1
1001bd51:	jmp    0x1001be13
1001bd56:	mov    eax,esi
1001bd58:	call   0x1001b45a
1001bd5d:	test   eax,eax
1001bd5f:	je     0x1001bd72
1001bd61:	push   ebx
1001bd62:	push   0x1006dd2c
1001bd67:	push   0x1
1001bd69:	push   0x0
1001bd6b:	push   0x10070990
1001bd70:	jmp    0x1001bd48
1001bd72:	push   esi
1001bd73:	call   DWORD PTR ds:0x100660c4
1001bd79:	cmp    eax,0xff
1001bd7e:	jge    0x1001be16
1001bd84:	cmp    WORD PTR [esi],0x7b
1001bd88:	lea    eax,[ebp-0x20]
1001bd8b:	push   eax
1001bd8c:	push   esi
1001bd8d:	jne    0x1001bd97
1001bd8f:	call   DWORD PTR ds:0x10066420
1001bd95:	jmp    0x1001bd9d
1001bd97:	call   DWORD PTR ds:0x10066438
1001bd9d:	xor    esi,esi
1001bd9f:	cmp    eax,esi
1001bda1:	mov    DWORD PTR [ebp-0x24],eax
1001bda4:	jl     0x1001be16
1001bda6:	push   DWORD PTR [ebp-0x2c]
1001bda9:	call   DWORD PTR ds:0x100662ac
1001bdaf:	test   eax,eax
1001bdb1:	je     0x1001be00
1001bdb3:	mov    DWORD PTR [ebp-0x28],esi
1001bdb6:	lea    eax,[ebp-0x28]
1001bdb9:	push   eax
1001bdba:	push   0x100709a0
1001bdbf:	push   esi
1001bdc0:	push   0x1
1001bdc2:	lea    eax,[ebp-0x20]
1001bdc5:	push   eax
1001bdc6:	mov    DWORD PTR [ebp-0x4],esi
1001bdc9:	call   DWORD PTR ds:0x1006640c
1001bdcf:	cmp    eax,esi
1001bdd1:	mov    DWORD PTR [ebp-0x24],eax
1001bdd4:	jl     0x1001bded
1001bdd6:	mov    eax,DWORD PTR [ebp-0x28]
1001bdd9:	mov    ecx,DWORD PTR [eax]
1001bddb:	push   ebx
1001bddc:	push   DWORD PTR [ebp-0x2c]
1001bddf:	push   0x1006dd2c
1001bde4:	push   esi
1001bde5:	push   esi
1001bde6:	push   eax
1001bde7:	call   DWORD PTR [ecx+0x1c]
1001bdea:	mov    DWORD PTR [ebp-0x24],eax
1001bded:	or     DWORD PTR [ebp-0x4],0xffffffff
1001bdf1:	mov    eax,DWORD PTR [ebp-0x28]
1001bdf4:	cmp    eax,esi
1001bdf6:	je     0x1001be16
1001bdf8:	mov    ecx,DWORD PTR [eax]
1001bdfa:	push   eax
1001bdfb:	call   DWORD PTR [ecx+0x8]
1001bdfe:	jmp    0x1001be16
1001be00:	push   ebx
1001be01:	push   0x1006dd2c
1001be06:	push   0x1
1001be08:	push   esi
1001be09:	lea    eax,[ebp-0x20]
1001be0c:	push   eax
1001be0d:	call   DWORD PTR ds:0x1006643c
1001be13:	mov    DWORD PTR [ebp-0x24],eax
1001be16:	mov    eax,DWORD PTR [ebp-0x24]
1001be19:	jmp    0x1001be1d
1001be1b:	xor    eax,eax
1001be1d:	call   0x10059b21
1001be22:	ret    
1001be23:	push   ebx
1001be24:	mov    ebx,DWORD PTR [esp+0xc]
1001be28:	xor    ecx,ecx
1001be2a:	cmp    ebx,ecx
1001be2c:	push   esi
1001be2d:	push   edi
1001be2e:	jne    0x1001be37
1001be30:	mov    eax,0x80004003
1001be35:	jmp    0x1001be59
1001be37:	mov    edi,DWORD PTR [esp+0x10]
1001be3b:	cmp    DWORD PTR [edi-0x20],ecx
1001be3e:	jne    0x1001be52
1001be40:	push   ecx
1001be41:	mov    eax,esp
1001be43:	mov    DWORD PTR [eax],ecx
1001be45:	push   ecx
1001be46:	mov    eax,esp
1001be48:	lea    esi,[edi-0x24]
1001be4b:	mov    DWORD PTR [eax],ecx
1001be4d:	call   0x1001fdff
1001be52:	mov    eax,DWORD PTR [edi-0x20]
1001be55:	mov    DWORD PTR [ebx],eax
1001be57:	xor    eax,eax
1001be59:	pop    edi
1001be5a:	pop    esi
1001be5b:	pop    ebx
1001be5c:	ret    0x8
1001be5f:	mov    eax,0x800401a1
1001be64:	ret    0x8
1001be67:	xor    eax,eax
1001be69:	ret    0xc
1001be6c:	xor    eax,eax
1001be6e:	ret    0x10
1001be71:	xor    eax,eax
1001be73:	inc    eax
1001be74:	ret    0xc
1001be77:	xor    eax,eax
1001be79:	ret    0x18
1001be7c:	push   esi
1001be7d:	push   edi
1001be7e:	mov    edi,DWORD PTR [esp+0xc]
1001be82:	xor    ecx,ecx
1001be84:	cmp    DWORD PTR [edi-0x20],ecx
1001be87:	jne    0x1001be9b
1001be89:	push   ecx
1001be8a:	mov    eax,esp
1001be8c:	mov    DWORD PTR [eax],ecx
1001be8e:	push   ecx
1001be8f:	mov    eax,esp
1001be91:	lea    esi,[edi-0x24]
1001be94:	mov    DWORD PTR [eax],ecx
1001be96:	call   0x1001fe4e
1001be9b:	mov    eax,DWORD PTR [edi-0x20]
1001be9e:	mov    ecx,DWORD PTR [esp+0x10]
1001bea2:	pop    edi
1001bea3:	mov    DWORD PTR [ecx],eax
1001bea5:	xor    eax,eax
1001bea7:	pop    esi
1001bea8:	ret    0x8
1001beab:	xor    eax,eax
1001bead:	ret    0x8
1001beb0:	push   esi
1001beb1:	mov    esi,DWORD PTR [esp+0x8]
1001beb5:	push   edi
1001beb6:	mov    edi,DWORD PTR [esp+0x10]
1001beba:	add    esi,0x8
1001bebd:	cmp    DWORD PTR [esi],edi
1001bebf:	je     0x1001bec6
1001bec1:	call   0x1000763b
1001bec6:	pop    edi
1001bec7:	xor    eax,eax
1001bec9:	pop    esi
1001beca:	ret    0xc
1001becd:	mov    eax,ds:0x1006633c
1001bed2:	push   edi
1001bed3:	xor    edi,edi
1001bed5:	mov    DWORD PTR [esi+0x50],edi
1001bed8:	mov    DWORD PTR [esi+0x4],edi
1001bedb:	mov    DWORD PTR [esi+0x14],edi
1001bede:	mov    DWORD PTR [esi+0x20],eax
1001bee1:	mov    DWORD PTR [esi+0x18],edi
1001bee4:	mov    DWORD PTR [esi+0x1c],edi
1001bee7:	mov    DWORD PTR [esi+0x3c],edi
1001beea:	mov    DWORD PTR [esi+0x54],edi
1001beed:	mov    DWORD PTR [esi+0x60],edi
1001bef0:	mov    DWORD PTR [esi+0x64],edi
1001bef3:	mov    DWORD PTR [esi+0x68],edi
1001bef6:	mov    DWORD PTR [esi+0x6c],edi
1001bef9:	mov    DWORD PTR [esi+0x70],edi
1001befc:	mov    DWORD PTR [esi+0x74],edi
1001beff:	mov    DWORD PTR [esi+0x78],edi
1001bf02:	mov    DWORD PTR [esi+0x7c],edi
1001bf05:	mov    DWORD PTR [esi+0xd8],edi
1001bf0b:	mov    DWORD PTR [esi+0xdc],edi
1001bf11:	mov    DWORD PTR [esi+0xe8],edi
1001bf17:	mov    eax,DWORD PTR [esi+0xc8]
1001bf1d:	and    DWORD PTR [esi+0x98],0xffffffc0
1001bf24:	and    eax,0xfffffffb
1001bf27:	or     eax,0x3
1001bf2a:	push   0x8
1001bf2c:	mov    DWORD PTR [esi+0xc8],eax
1001bf32:	mov    DWORD PTR [esi+0xcc],edi
1001bf38:	call   DWORD PTR ds:0x10066318
1001bf3e:	and    DWORD PTR [esi+0x98],0xffffffbf
1001bf45:	mov    DWORD PTR [esi+0xd0],eax
1001bf4b:	mov    eax,DWORD PTR [esi+0xc8]
1001bf51:	and    eax,0xffffffaf
1001bf54:	or     eax,0x28
1001bf57:	mov    DWORD PTR [esi+0xe4],edi
1001bf5d:	mov    DWORD PTR [esi+0xc8],eax
1001bf63:	mov    DWORD PTR [esi+0x58],edi
1001bf66:	mov    DWORD PTR [esi+0xc4],edi
1001bf6c:	mov    DWORD PTR [esi+0xd4],0x400
1001bf76:	mov    DWORD PTR [esi+0x94],0xcdcdcdcd
1001bf80:	mov    DWORD PTR [esi+0xe0],0x4
1001bf8a:	mov    BYTE PTR [esi+0x5c],0x1
1001bf8e:	mov    eax,esi
1001bf90:	pop    edi
1001bf91:	ret    
1001bf92:	push   esi
1001bf93:	mov    esi,eax
1001bf95:	push   DWORD PTR [esi+0xe8]
1001bf9b:	call   DWORD PTR ds:0x100662b4
1001bfa1:	mov    eax,DWORD PTR [esi+0xdc]
1001bfa7:	test   eax,eax
1001bfa9:	je     0x1001bfb1
1001bfab:	mov    ecx,DWORD PTR [eax]
1001bfad:	push   eax
1001bfae:	call   DWORD PTR [ecx+0x8]
1001bfb1:	mov    eax,DWORD PTR [esi+0xd8]
1001bfb7:	test   eax,eax
1001bfb9:	je     0x1001bfc1
1001bfbb:	mov    ecx,DWORD PTR [eax]
1001bfbd:	push   eax
1001bfbe:	call   DWORD PTR [ecx+0x8]
1001bfc1:	mov    eax,DWORD PTR [esi+0x7c]
1001bfc4:	test   eax,eax
1001bfc6:	je     0x1001bfce
1001bfc8:	mov    ecx,DWORD PTR [eax]
1001bfca:	push   eax
1001bfcb:	call   DWORD PTR [ecx+0x8]
1001bfce:	mov    eax,DWORD PTR [esi+0x78]
1001bfd1:	test   eax,eax
1001bfd3:	je     0x1001bfdb
1001bfd5:	mov    ecx,DWORD PTR [eax]
1001bfd7:	push   eax
1001bfd8:	call   DWORD PTR [ecx+0x8]
1001bfdb:	mov    eax,DWORD PTR [esi+0x74]
1001bfde:	test   eax,eax
1001bfe0:	je     0x1001bfe8
1001bfe2:	mov    ecx,DWORD PTR [eax]
1001bfe4:	push   eax
1001bfe5:	call   DWORD PTR [ecx+0x8]
1001bfe8:	mov    eax,DWORD PTR [esi+0x70]
1001bfeb:	test   eax,eax
1001bfed:	je     0x1001bff5
1001bfef:	mov    ecx,DWORD PTR [eax]
1001bff1:	push   eax
1001bff2:	call   DWORD PTR [ecx+0x8]
1001bff5:	mov    eax,DWORD PTR [esi+0x6c]
1001bff8:	test   eax,eax
1001bffa:	je     0x1001c002
1001bffc:	mov    ecx,DWORD PTR [eax]
1001bffe:	push   eax
1001bfff:	call   DWORD PTR [ecx+0x8]
1001c002:	mov    eax,DWORD PTR [esi+0x68]
1001c005:	test   eax,eax
1001c007:	je     0x1001c00f
1001c009:	mov    ecx,DWORD PTR [eax]
1001c00b:	push   eax
1001c00c:	call   DWORD PTR [ecx+0x8]
1001c00f:	mov    eax,DWORD PTR [esi+0x64]
1001c012:	test   eax,eax
1001c014:	je     0x1001c01c
1001c016:	mov    ecx,DWORD PTR [eax]
1001c018:	push   eax
1001c019:	call   DWORD PTR [ecx+0x8]
1001c01c:	mov    eax,DWORD PTR [esi+0x60]
1001c01f:	test   eax,eax
1001c021:	je     0x1001c029
1001c023:	mov    ecx,DWORD PTR [eax]
1001c025:	push   eax
1001c026:	call   DWORD PTR [ecx+0x8]
1001c029:	mov    eax,DWORD PTR [esi+0x54]
1001c02c:	test   eax,eax
1001c02e:	je     0x1001c036
1001c030:	mov    ecx,DWORD PTR [eax]
1001c032:	push   eax
1001c033:	call   DWORD PTR [ecx+0x8]
1001c036:	mov    eax,DWORD PTR [esi+0x3c]
1001c039:	test   eax,eax
1001c03b:	je     0x1001c043
1001c03d:	mov    ecx,DWORD PTR [eax]
1001c03f:	push   eax
1001c040:	call   DWORD PTR [ecx+0x8]
1001c043:	mov    esi,DWORD PTR [esi+0x14]
1001c046:	test   esi,esi
1001c048:	je     0x1001c050
1001c04a:	push   esi
1001c04b:	call   0x100570ee
1001c050:	pop    esi
1001c051:	ret    
1001c052:	mov    eax,DWORD PTR [ecx]
1001c054:	call   DWORD PTR [eax+0x10]
1001c057:	mov    ecx,DWORD PTR [eax]
1001c059:	push   eax
1001c05a:	call   DWORD PTR [ecx+0x8]
1001c05d:	ret    0x4
1001c060:	push   ebp
1001c061:	mov    ebp,esp
1001c063:	and    esp,0xfffffff8
1001c066:	sub    esp,0xc
1001c069:	push   ebx
1001c06a:	push   esi
1001c06b:	push   edi
1001c06c:	mov    edi,ecx
1001c06e:	xor    ecx,ecx
1001c070:	cmp    DWORD PTR [ebp+0x1c],ecx
1001c073:	jne    0x1001c485
1001c079:	mov    eax,DWORD PTR [ebp+0xc]
1001c07c:	cmp    eax,0x14
1001c07f:	jne    0x1001c0a1
1001c081:	xor    esi,esi
1001c083:	inc    esi
1001c084:	cmp    DWORD PTR [edi+0x70],ecx
1001c087:	mov    eax,esi
1001c089:	jne    0x1001c08d
1001c08b:	xor    eax,eax
1001c08d:	cmp    eax,ecx
1001c08f:	mov    ebx,DWORD PTR [ebp+0x18]
1001c092:	mov    DWORD PTR [ebx],esi
1001c094:	je     0x1001c11f
1001c09a:	mov    eax,esi
1001c09c:	jmp    0x1001c487
1001c0a1:	cmp    eax,0xf
1001c0a4:	jne    0x1001c0d2
1001c0a6:	lea    eax,[esp+0xc]
1001c0aa:	push   eax
1001c0ab:	mov    esi,edi
1001c0ad:	mov    DWORD PTR [esp+0x10],0x1
1001c0b5:	call   0x1001c89c
1001c0ba:	cmp    DWORD PTR [esp+0xc],0x0
1001c0bf:	mov    ecx,DWORD PTR [ebp+0x18]
1001c0c2:	mov    DWORD PTR [ecx],eax
1001c0c4:	je     0x1001c266
1001c0ca:	xor    eax,eax
1001c0cc:	inc    eax
1001c0cd:	jmp    0x1001c487
1001c0d2:	cmp    eax,0x5
1001c0d5:	jne    0x1001c0f0
1001c0d7:	mov    ecx,DWORD PTR [ebp+0x14]
1001c0da:	lea    eax,[esp+0xc]
1001c0de:	push   eax
1001c0df:	mov    ebx,edi
1001c0e1:	mov    DWORD PTR [esp+0x10],0x1
1001c0e9:	call   0x1001c790
1001c0ee:	jmp    0x1001c0ba
1001c0f0:	cmp    eax,0x21
1001c0f3:	jne    0x1001c211
1001c0f9:	lea    eax,[esp+0xc]
1001c0fd:	push   eax
1001c0fe:	mov    ecx,edi
1001c100:	mov    DWORD PTR [esp+0x10],0x1
1001c108:	call   0x1001c64c
1001c10d:	cmp    DWORD PTR [esp+0xc],0x0
1001c112:	mov    ecx,DWORD PTR [ebp+0x18]
1001c115:	mov    DWORD PTR [ecx],eax
1001c117:	jne    0x1001c0ca
1001c119:	xor    esi,esi
1001c11b:	mov    ebx,DWORD PTR [ebp+0x18]
1001c11e:	inc    esi
1001c11f:	mov    eax,DWORD PTR [edi+0x98]
1001c125:	test   al,0x8
1001c127:	mov    ecx,DWORD PTR [ebp+0xc]
1001c12a:	je     0x1001c1c5
1001c130:	lea    edx,[ecx-0x200]
1001c136:	cmp    edx,0xd
1001c139:	ja     0x1001c1c5
1001c13f:	and    al,0x10
1001c141:	neg    al
1001c143:	sbb    eax,eax
1001c145:	and    eax,0x3
1001c148:	mov    DWORD PTR [esp+0x14],eax
1001c14c:	jne    0x1001c18a
1001c14e:	mov    eax,DWORD PTR [edi+0x70]
1001c151:	test   eax,eax
1001c153:	je     0x1001c1c5
1001c155:	movsx  ecx,WORD PTR [ebp+0x14]
1001c159:	mov    DWORD PTR [esp+0xc],ecx
1001c15d:	mov    ecx,DWORD PTR [ebp+0x14]
1001c160:	shr    ecx,0x10
1001c163:	movsx  ecx,cx
1001c166:	lea    edx,[esp+0x14]
1001c16a:	push   edx
1001c16b:	push   0x0
1001c16d:	mov    DWORD PTR [esp+0x18],ecx
1001c171:	push   DWORD PTR [esp+0x18]
1001c175:	mov    ecx,DWORD PTR [eax]
1001c177:	push   DWORD PTR [esp+0x18]
1001c17b:	lea    edx,[edi+0xb4]
1001c181:	push   edx
1001c182:	push   esi
1001c183:	push   eax
1001c184:	call   DWORD PTR [ecx+0x30]
1001c187:	mov    ecx,DWORD PTR [ebp+0xc]
1001c18a:	cmp    DWORD PTR [esp+0x14],0x3
1001c18f:	jne    0x1001c1c5
1001c191:	mov    eax,0x200
1001c196:	cmp    ecx,eax
1001c198:	jne    0x1001c26f
1001c19e:	lea    ecx,[esp+0xc]
1001c1a2:	push   ecx
1001c1a3:	push   DWORD PTR [ebp+0x14]
1001c1a6:	push   DWORD PTR [ebp+0x10]
1001c1a9:	push   eax
1001c1aa:	mov    ecx,edi
1001c1ac:	mov    DWORD PTR [esp+0x1c],esi
1001c1b0:	call   0x1001c85f
1001c1b5:	cmp    DWORD PTR [esp+0xc],0x0
1001c1ba:	mov    DWORD PTR [ebx],eax
1001c1bc:	jne    0x1001c09a
1001c1c2:	mov    ecx,DWORD PTR [ebp+0xc]
1001c1c5:	mov    eax,DWORD PTR [edi+0x98]
1001c1cb:	mov    edx,eax
1001c1cd:	shr    edx,0x2
1001c1d0:	and    edx,eax
1001c1d2:	test   dl,0x8
1001c1d5:	je     0x1001c3dc
1001c1db:	mov    eax,0x100
1001c1e0:	cmp    ecx,eax
1001c1e2:	jne    0x1001c2ec
1001c1e8:	lea    ecx,[esp+0xc]
1001c1ec:	push   ecx
1001c1ed:	push   DWORD PTR [ebp+0x14]
1001c1f0:	push   DWORD PTR [ebp+0x10]
1001c1f3:	push   eax
1001c1f4:	mov    ecx,edi
1001c1f6:	mov    DWORD PTR [esp+0x1c],esi
1001c1fa:	call   0x1001c81d
1001c1ff:	cmp    DWORD PTR [esp+0xc],0x0
1001c204:	mov    DWORD PTR [ebx],eax
1001c206:	je     0x1001c40c
1001c20c:	jmp    0x1001c09a
1001c211:	cmp    eax,0x7
1001c214:	jne    0x1001c248
1001c216:	lea    eax,[edi+0x98]
1001c21c:	or     DWORD PTR [eax],0x20
1001c21f:	test   BYTE PTR [eax],0x40
1001c222:	mov    DWORD PTR [esp+0xc],0x1
1001c22a:	jne    0x1001c23d
1001c22c:	lea    eax,[esp+0xc]
1001c230:	push   eax
1001c231:	mov    esi,edi
1001c233:	call   0x1001c6e6
1001c238:	jmp    0x1001c10d
1001c23d:	mov    DWORD PTR [esp+0xc],ecx
1001c241:	xor    eax,eax
1001c243:	jmp    0x1001c10d
1001c248:	xor    esi,esi
1001c24a:	cmp    eax,0x8
1001c24d:	jne    0x1001c11b
1001c253:	mov    eax,DWORD PTR [ebp+0x18]
1001c256:	and    DWORD PTR [edi+0x98],0xffffffdf
1001c25d:	mov    DWORD PTR [eax],ecx
1001c25f:	mov    ebx,eax
1001c261:	jmp    0x1001c11e
1001c266:	mov    ebx,ecx
1001c268:	xor    esi,esi
1001c26a:	jmp    0x1001c11e
1001c26f:	mov    eax,0x202
1001c274:	cmp    ecx,eax
1001c276:	je     0x1001c19e
1001c27c:	add    eax,0x3
1001c27f:	cmp    ecx,eax
1001c281:	je     0x1001c19e
1001c287:	mov    eax,0x208
1001c28c:	cmp    ecx,eax
1001c28e:	je     0x1001c19e
1001c294:	add    eax,0xfffffff9
1001c297:	cmp    ecx,eax
1001c299:	je     0x1001c19e
1001c29f:	mov    eax,0x204
1001c2a4:	cmp    ecx,eax
1001c2a6:	je     0x1001c19e
1001c2ac:	add    eax,0x3
1001c2af:	cmp    ecx,eax
1001c2b1:	je     0x1001c19e
1001c2b7:	mov    eax,0x203
1001c2bc:	cmp    ecx,eax
1001c2be:	je     0x1001c19e
1001c2c4:	add    eax,0x3
1001c2c7:	cmp    ecx,eax
1001c2c9:	je     0x1001c19e
1001c2cf:	cmp    ecx,0x209
1001c2d5:	jne    0x1001c1c5
1001c2db:	lea    eax,[esp+0xc]
1001c2df:	push   eax
1001c2e0:	push   DWORD PTR [ebp+0x14]
1001c2e3:	push   DWORD PTR [ebp+0x10]
1001c2e6:	push   ecx
1001c2e7:	jmp    0x1001c1aa
1001c2ec:	mov    eax,0x101
1001c2f1:	cmp    ecx,eax
1001c2f3:	je     0x1001c1e8
1001c2f9:	inc    eax
1001c2fa:	cmp    ecx,eax
1001c2fc:	je     0x1001c1e8
1001c302:	mov    eax,0x103
1001c307:	cmp    ecx,eax
1001c309:	je     0x1001c1e8
1001c30f:	inc    eax
1001c310:	cmp    ecx,eax
1001c312:	je     0x1001c1e8
1001c318:	mov    eax,0x105
1001c31d:	cmp    ecx,eax
1001c31f:	je     0x1001c1e8
1001c325:	add    eax,0x2
1001c328:	cmp    ecx,eax
1001c32a:	je     0x1001c1e8
1001c330:	cmp    ecx,0x53
1001c333:	jne    0x1001c346
1001c335:	lea    eax,[esp+0xc]
1001c339:	push   eax
1001c33a:	push   DWORD PTR [ebp+0x14]
1001c33d:	push   DWORD PTR [ebp+0x10]
1001c340:	push   ecx
1001c341:	jmp    0x1001c1f4
1001c346:	cmp    ecx,0x1f
1001c349:	jne    0x1001c35c
1001c34b:	lea    eax,[esp+0xc]
1001c34f:	push   eax
1001c350:	push   DWORD PTR [ebp+0x14]
1001c353:	push   DWORD PTR [ebp+0x10]
1001c356:	push   ecx
1001c357:	jmp    0x1001c1f4
1001c35c:	mov    eax,0x286
1001c361:	cmp    ecx,eax
1001c363:	jne    0x1001c38a
1001c365:	lea    ecx,[esp+0xc]
1001c369:	push   ecx
1001c36a:	push   DWORD PTR [ebp+0x14]
1001c36d:	mov    ecx,edi
1001c36f:	push   DWORD PTR [ebp+0x10]
1001c372:	mov    DWORD PTR [esp+0x18],esi
1001c376:	push   eax
1001c377:	call   0x1001c81d
1001c37c:	cmp    DWORD PTR [esp+0xc],0x0
1001c381:	mov    DWORD PTR [ebx],eax
1001c383:	je     0x1001c3b3
1001c385:	jmp    0x1001c09a
1001c38a:	cmp    ecx,0x209
1001c390:	jne    0x1001c3a3
1001c392:	lea    eax,[esp+0xc]
1001c396:	push   eax
1001c397:	push   DWORD PTR [ebp+0x14]
1001c39a:	push   DWORD PTR [ebp+0x10]
1001c39d:	push   ecx
1001c39e:	jmp    0x1001c1f4
1001c3a3:	cmp    ecx,0x281
1001c3a9:	jb     0x1001c3dc
1001c3ab:	cmp    ecx,0x291
1001c3b1:	ja     0x1001c3dc
1001c3b3:	lea    eax,[esp+0xc]
1001c3b7:	push   eax
1001c3b8:	push   DWORD PTR [ebp+0x14]
1001c3bb:	mov    ecx,edi
1001c3bd:	push   DWORD PTR [ebp+0x10]
1001c3c0:	mov    DWORD PTR [esp+0x18],esi
1001c3c4:	push   DWORD PTR [ebp+0xc]
1001c3c7:	call   0x1001c81d
1001c3cc:	cmp    DWORD PTR [esp+0xc],0x0
1001c3d1:	mov    DWORD PTR [ebx],eax
1001c3d3:	jne    0x1001c09a
1001c3d9:	mov    ecx,DWORD PTR [ebp+0xc]
1001c3dc:	cmp    ecx,0x2
1001c3df:	jne    0x1001c40c
1001c3e1:	mov    eax,DWORD PTR [edi]
1001c3e3:	mov    ecx,edi
1001c3e5:	call   DWORD PTR [eax+0x10]
1001c3e8:	mov    ecx,DWORD PTR [eax]
1001c3ea:	push   eax
1001c3eb:	call   DWORD PTR [ecx+0x4]
1001c3ee:	push   DWORD PTR [ebp+0x14]
1001c3f1:	push   DWORD PTR [ebp+0x10]
1001c3f4:	push   0x2
1001c3f6:	push   DWORD PTR [edi+0x4]
1001c3f9:	push   DWORD PTR [edi+0x20]
1001c3fc:	call   DWORD PTR ds:0x10066338
1001c402:	mov    ecx,edi
1001c404:	call   0x1001c502
1001c409:	and    DWORD PTR [ebx],0x0
1001c40c:	test   BYTE PTR [edi+0xc8],0x8
1001c413:	je     0x1001c43c
1001c415:	lea    eax,[esp+0xc]
1001c419:	push   eax
1001c41a:	push   DWORD PTR [ebp+0x10]
1001c41d:	mov    eax,DWORD PTR [ebp+0xc]
1001c420:	mov    DWORD PTR [esp+0x14],esi
1001c424:	mov    esi,DWORD PTR [ebp+0x14]
1001c427:	call   0x1001e5de
1001c42c:	cmp    DWORD PTR [esp+0xc],0x0
1001c431:	mov    DWORD PTR [ebx],eax
1001c433:	jne    0x1001c0ca
1001c439:	xor    esi,esi
1001c43b:	inc    esi
1001c43c:	mov    eax,DWORD PTR [ebp+0xc]
1001c43f:	cmp    eax,DWORD PTR ds:0x10080fd8
1001c445:	jne    0x1001c45d
1001c447:	mov    eax,DWORD PTR [edi]
1001c449:	mov    ecx,edi
1001c44b:	call   DWORD PTR [eax+0x10]
1001c44e:	mov    edi,eax
1001c450:	mov    eax,DWORD PTR [edi]
1001c452:	push   edi
1001c453:	call   DWORD PTR [eax+0x4]
1001c456:	mov    DWORD PTR [ebx],edi
1001c458:	jmp    0x1001c09a
1001c45d:	cmp    eax,DWORD PTR ds:0x10080fdc
1001c463:	jne    0x1001c46e
1001c465:	mov    edi,DWORD PTR [edi+0x60]
1001c468:	test   edi,edi
1001c46a:	je     0x1001c456
1001c46c:	jmp    0x1001c450
1001c46e:	cmp    eax,0x37f
1001c473:	jne    0x1001c485
1001c475:	push   DWORD PTR [ebp+0x14]
1001c478:	push   edi
1001c479:	call   0x1001c490
1001c47e:	mov    DWORD PTR [ebx],eax
1001c480:	jmp    0x1001c09a
1001c485:	xor    eax,eax
1001c487:	pop    edi
1001c488:	pop    esi
1001c489:	pop    ebx
1001c48a:	mov    esp,ebp
1001c48c:	pop    ebp
1001c48d:	ret    0x18
1001c490:	push   0x0
1001c492:	mov    eax,0x1005f61a
1001c497:	call   0x10059a35
1001c49c:	mov    eax,DWORD PTR [ebp+0x8]
1001c49f:	mov    eax,DWORD PTR [eax+0x60]
1001c4a2:	xor    ecx,ecx
1001c4a4:	test   eax,eax
1001c4a6:	mov    DWORD PTR [ebp+0x8],ecx
1001c4a9:	je     0x1001c4bc
1001c4ab:	mov    ecx,DWORD PTR [eax]
1001c4ad:	lea    edx,[ebp+0x8]
1001c4b0:	push   edx
1001c4b1:	push   0x100709b0
1001c4b6:	push   eax
1001c4b7:	call   DWORD PTR [ecx]
1001c4b9:	mov    ecx,DWORD PTR [ebp+0x8]
1001c4bc:	and    DWORD PTR [ebp-0x4],0x0
1001c4c0:	test   ecx,ecx
1001c4c2:	je     0x1001c4ea
1001c4c4:	push   DWORD PTR [ebp+0xc]
1001c4c7:	mov    eax,DWORD PTR [ecx]
1001c4c9:	push   ecx
1001c4ca:	call   DWORD PTR [eax+0x14]
1001c4cd:	test   eax,eax
1001c4cf:	jne    0x1001c4e7
1001c4d1:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c4d5:	mov    eax,DWORD PTR [ebp+0x8]
1001c4d8:	test   eax,eax
1001c4da:	je     0x1001c4e2
1001c4dc:	mov    ecx,DWORD PTR [eax]
1001c4de:	push   eax
1001c4df:	call   DWORD PTR [ecx+0x8]
1001c4e2:	xor    eax,eax
1001c4e4:	inc    eax
1001c4e5:	jmp    0x1001c4fa
1001c4e7:	mov    ecx,DWORD PTR [ebp+0x8]
1001c4ea:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c4ee:	test   ecx,ecx
1001c4f0:	je     0x1001c4f8
1001c4f2:	mov    eax,DWORD PTR [ecx]
1001c4f4:	push   ecx
1001c4f5:	call   DWORD PTR [eax+0x8]
1001c4f8:	xor    eax,eax
1001c4fa:	call   0x10059b0d
1001c4ff:	ret    0x8
1001c502:	push   0x4
1001c504:	mov    eax,0x1005f81a
1001c509:	call   0x10059a35
1001c50e:	mov    esi,ecx
1001c510:	mov    eax,DWORD PTR [esi+0x98]
1001c516:	test   al,0x40
1001c518:	jne    0x1001c646
1001c51e:	or     eax,0x40
1001c521:	mov    DWORD PTR [esi+0x98],eax
1001c527:	mov    eax,DWORD PTR [esi+0x70]
1001c52a:	xor    edi,edi
1001c52c:	cmp    eax,edi
1001c52e:	je     0x1001c53a
1001c530:	mov    ecx,DWORD PTR [eax]
1001c532:	push   edi
1001c533:	push   edi
1001c534:	push   0x1
1001c536:	push   eax
1001c537:	call   DWORD PTR [ecx+0x1c]
1001c53a:	mov    ecx,DWORD PTR [esi+0x94]
1001c540:	cmp    ecx,0xcdcdcdcd
1001c546:	je     0x1001c562
1001c548:	mov    eax,DWORD PTR [esi+0x60]
1001c54b:	push   ecx
1001c54c:	lea    ecx,[esi+0x80]
1001c552:	push   ecx
1001c553:	call   0x1001b50f
1001c558:	mov    DWORD PTR [esi+0x94],0xcdcdcdcd
1001c562:	mov    eax,DWORD PTR [esi+0x64]
1001c565:	cmp    eax,edi
1001c567:	je     0x1001c58a
1001c569:	push   DWORD PTR [esi+0x9c]
1001c56f:	mov    ecx,DWORD PTR [eax]
1001c571:	push   eax
1001c572:	call   DWORD PTR [ecx+0x50]
1001c575:	mov    eax,DWORD PTR [esi+0x64]
1001c578:	mov    ecx,DWORD PTR [eax]
1001c57a:	push   0x1
1001c57c:	push   eax
1001c57d:	call   DWORD PTR [ecx+0x18]
1001c580:	mov    eax,DWORD PTR [esi+0x64]
1001c583:	mov    ecx,DWORD PTR [eax]
1001c585:	push   edi
1001c586:	push   eax
1001c587:	call   DWORD PTR [ecx+0xc]
1001c58a:	mov    eax,DWORD PTR [esi+0x60]
1001c58d:	cmp    eax,edi
1001c58f:	je     0x1001c5c4
1001c591:	mov    DWORD PTR [ebp-0x10],edi
1001c594:	lea    edx,[ebp-0x10]
1001c597:	push   edx
1001c598:	push   0x100702b4
1001c59d:	mov    DWORD PTR [ebp-0x4],edi
1001c5a0:	mov    ecx,DWORD PTR [eax]
1001c5a2:	push   eax
1001c5a3:	call   DWORD PTR [ecx]
1001c5a5:	mov    eax,DWORD PTR [ebp-0x10]
1001c5a8:	cmp    eax,edi
1001c5aa:	je     0x1001c5b6
1001c5ac:	mov    ecx,DWORD PTR [eax]
1001c5ae:	push   edi
1001c5af:	push   eax
1001c5b0:	call   DWORD PTR [ecx+0xc]
1001c5b3:	mov    eax,DWORD PTR [ebp-0x10]
1001c5b6:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c5ba:	cmp    eax,edi
1001c5bc:	je     0x1001c5c4
1001c5be:	mov    ecx,DWORD PTR [eax]
1001c5c0:	push   eax
1001c5c1:	call   DWORD PTR [ecx+0x8]
1001c5c4:	mov    eax,DWORD PTR [esi+0x70]
1001c5c7:	cmp    eax,edi
1001c5c9:	je     0x1001c5d4
1001c5cb:	mov    DWORD PTR [esi+0x70],edi
1001c5ce:	mov    ecx,DWORD PTR [eax]
1001c5d0:	push   eax
1001c5d1:	call   DWORD PTR [ecx+0x8]
1001c5d4:	mov    DWORD PTR [esi+0x90],edi
1001c5da:	mov    eax,DWORD PTR [esi+0x74]
1001c5dd:	cmp    eax,edi
1001c5df:	je     0x1001c5ea
1001c5e1:	mov    DWORD PTR [esi+0x74],edi
1001c5e4:	mov    ecx,DWORD PTR [eax]
1001c5e6:	push   eax
1001c5e7:	call   DWORD PTR [ecx+0x8]
1001c5ea:	mov    eax,DWORD PTR [esi+0x64]
1001c5ed:	cmp    eax,edi
1001c5ef:	je     0x1001c5fa
1001c5f1:	mov    DWORD PTR [esi+0x64],edi
1001c5f4:	mov    ecx,DWORD PTR [eax]
1001c5f6:	push   eax
1001c5f7:	call   DWORD PTR [ecx+0x8]
1001c5fa:	mov    eax,DWORD PTR [esi+0x60]
1001c5fd:	cmp    eax,edi
1001c5ff:	je     0x1001c60a
1001c601:	mov    DWORD PTR [esi+0x60],edi
1001c604:	mov    ecx,DWORD PTR [eax]
1001c606:	push   eax
1001c607:	call   DWORD PTR [ecx+0x8]
1001c60a:	mov    eax,DWORD PTR [esi+0x6c]
1001c60d:	cmp    eax,edi
1001c60f:	je     0x1001c61a
1001c611:	mov    DWORD PTR [esi+0x6c],edi
1001c614:	mov    ecx,DWORD PTR [eax]
1001c616:	push   eax
1001c617:	call   DWORD PTR [ecx+0x8]
1001c61a:	mov    eax,DWORD PTR [esi+0x68]
1001c61d:	cmp    eax,edi
1001c61f:	je     0x1001c62a
1001c621:	mov    DWORD PTR [esi+0x68],edi
1001c624:	mov    ecx,DWORD PTR [eax]
1001c626:	push   eax
1001c627:	call   DWORD PTR [ecx+0x8]
1001c62a:	and    DWORD PTR [esi+0x98],0xffffffa4
1001c631:	add    esi,0xc4
1001c637:	mov    eax,DWORD PTR [esi]
1001c639:	cmp    eax,edi
1001c63b:	je     0x1001c646
1001c63d:	push   eax
1001c63e:	call   DWORD PTR ds:0x100662fc
1001c644:	mov    DWORD PTR [esi],edi
1001c646:	call   0x10059b0d
1001c64b:	ret    
1001c64c:	push   0x0
1001c64e:	mov    eax,0x1005f61a
1001c653:	call   0x10059a35
1001c658:	mov    esi,ecx
1001c65a:	mov    eax,DWORD PTR [ebp+0x8]
1001c65d:	xor    edi,edi
1001c65f:	test   WORD PTR [esi+0xa0],0x4000
1001c668:	mov    DWORD PTR [eax],edi
1001c66a:	je     0x1001c6c5
1001c66c:	cmp    DWORD PTR [esi+0x64],edi
1001c66f:	je     0x1001c6dc
1001c671:	test   BYTE PTR [esi+0x98],0x1
1001c678:	jne    0x1001c6dc
1001c67a:	mov    DWORD PTR [ebp+0x8],edi
1001c67d:	mov    DWORD PTR [ebp-0x4],edi
1001c680:	mov    eax,DWORD PTR [esi]
1001c682:	call   DWORD PTR [eax+0x10]
1001c685:	mov    ecx,DWORD PTR [eax]
1001c687:	lea    edx,[ebp+0x8]
1001c68a:	push   edx
1001c68b:	push   0x10070314
1001c690:	push   eax
1001c691:	call   DWORD PTR [ecx]
1001c693:	mov    ecx,DWORD PTR [ebp+0x8]
1001c696:	cmp    ecx,edi
1001c698:	je     0x1001c6b5
1001c69a:	mov    eax,DWORD PTR [esi+0x64]
1001c69d:	mov    edx,DWORD PTR [eax]
1001c69f:	lea    ebx,[esi+0xb4]
1001c6a5:	push   ebx
1001c6a6:	push   DWORD PTR [esi+0x4]
1001c6a9:	push   edi
1001c6aa:	push   ecx
1001c6ab:	push   edi
1001c6ac:	push   0xfffffffb
1001c6ae:	push   eax
1001c6af:	call   DWORD PTR [edx+0x2c]
1001c6b2:	mov    ecx,DWORD PTR [ebp+0x8]
1001c6b5:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c6b9:	cmp    ecx,edi
1001c6bb:	je     0x1001c6dc
1001c6bd:	mov    eax,DWORD PTR [ecx]
1001c6bf:	push   ecx
1001c6c0:	call   DWORD PTR [eax+0x8]
1001c6c3:	jmp    0x1001c6dc
1001c6c5:	lea    eax,[esi+0x98]
1001c6cb:	or     DWORD PTR [eax],0x20
1001c6ce:	test   BYTE PTR [eax],0x40
1001c6d1:	jne    0x1001c6dc
1001c6d3:	lea    eax,[ebp+0x8]
1001c6d6:	push   eax
1001c6d7:	call   0x1001c6e6
1001c6dc:	xor    eax,eax
1001c6de:	call   0x10059b0d
1001c6e3:	ret    0x4
1001c6e6:	push   0x4
1001c6e8:	mov    eax,0x1005f81a
1001c6ed:	call   0x10059a35
1001c6f2:	xor    edi,edi
1001c6f4:	cmp    DWORD PTR [esi+0x64],edi
1001c6f7:	je     0x1001c74d
1001c6f9:	test   BYTE PTR [esi+0x98],0x2
1001c700:	jne    0x1001c74d
1001c702:	mov    DWORD PTR [ebp-0x10],edi
1001c705:	mov    DWORD PTR [ebp-0x4],edi
1001c708:	mov    eax,DWORD PTR [esi]
1001c70a:	mov    ecx,esi
1001c70c:	call   DWORD PTR [eax+0x10]
1001c70f:	mov    ecx,DWORD PTR [eax]
1001c711:	lea    edx,[ebp-0x10]
1001c714:	push   edx
1001c715:	push   0x10070314
1001c71a:	push   eax
1001c71b:	call   DWORD PTR [ecx]
1001c71d:	mov    ecx,DWORD PTR [ebp-0x10]
1001c720:	cmp    ecx,edi
1001c722:	je     0x1001c73f
1001c724:	mov    eax,DWORD PTR [esi+0x64]
1001c727:	mov    edx,DWORD PTR [eax]
1001c729:	lea    ebx,[esi+0xb4]
1001c72f:	push   ebx
1001c730:	push   DWORD PTR [esi+0x4]
1001c733:	push   edi
1001c734:	push   ecx
1001c735:	push   edi
1001c736:	push   0xfffffffc
1001c738:	push   eax
1001c739:	call   DWORD PTR [edx+0x2c]
1001c73c:	mov    ecx,DWORD PTR [ebp-0x10]
1001c73f:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c743:	cmp    ecx,edi
1001c745:	je     0x1001c74d
1001c747:	mov    eax,DWORD PTR [ecx]
1001c749:	push   ecx
1001c74a:	call   DWORD PTR [eax+0x8]
1001c74d:	test   BYTE PTR [esi+0x98],0x8
1001c754:	je     0x1001c75b
1001c756:	push   DWORD PTR [esi+0x4]
1001c759:	jmp    0x1001c77b
1001c75b:	call   DWORD PTR ds:0x100662e4
1001c761:	push   eax
1001c762:	push   DWORD PTR [esi+0x4]
1001c765:	call   DWORD PTR ds:0x100662ec
1001c76b:	test   eax,eax
1001c76d:	jne    0x1001c781
1001c76f:	push   0x5
1001c771:	push   DWORD PTR [esi+0x4]
1001c774:	call   DWORD PTR ds:0x10066340
1001c77a:	push   eax
1001c77b:	call   DWORD PTR ds:0x100662cc
1001c781:	mov    eax,DWORD PTR [ebp+0x8]
1001c784:	mov    DWORD PTR [eax],edi
1001c786:	xor    eax,eax
1001c788:	call   0x10059b0d
1001c78d:	ret    0x4
1001c790:	mov    edx,DWORD PTR [ebx+0xb4]
1001c796:	movsx  eax,cx
1001c799:	shr    ecx,0x10
1001c79c:	push   esi
1001c79d:	mov    esi,DWORD PTR [ebx+0xb8]
1001c7a3:	movsx  ecx,cx
1001c7a6:	add    ecx,esi
1001c7a8:	add    eax,edx
1001c7aa:	push   edi
1001c7ab:	mov    DWORD PTR [ebx+0xbc],eax
1001c7b1:	mov    DWORD PTR [ebx+0xc0],ecx
1001c7b7:	sub    ecx,esi
1001c7b9:	lea    edi,[ebx+0xac]
1001c7bf:	sub    eax,edx
1001c7c1:	lea    esi,[ebx+0xa4]
1001c7c7:	mov    DWORD PTR [edi],eax
1001c7c9:	mov    DWORD PTR [ebx+0xb0],ecx
1001c7cf:	call   0x1001bc2a
1001c7d4:	mov    eax,DWORD PTR [ebx+0x64]
1001c7d7:	test   eax,eax
1001c7d9:	je     0x1001c7e4
1001c7db:	mov    ecx,DWORD PTR [eax]
1001c7dd:	push   esi
1001c7de:	push   0x1
1001c7e0:	push   eax
1001c7e1:	call   DWORD PTR [ecx+0x44]
1001c7e4:	mov    eax,DWORD PTR [ebx+0x74]
1001c7e7:	test   eax,eax
1001c7e9:	pop    edi
1001c7ea:	pop    esi
1001c7eb:	je     0x1001c7fb
1001c7ed:	mov    edx,DWORD PTR [eax]
1001c7ef:	lea    ecx,[ebx+0xb4]
1001c7f5:	push   ecx
1001c7f6:	push   ecx
1001c7f7:	push   eax
1001c7f8:	call   DWORD PTR [edx+0x1c]
1001c7fb:	test   BYTE PTR [ebx+0x98],0x8
1001c802:	je     0x1001c811
1001c804:	push   0x1
1001c806:	lea    eax,[ebx+0x2c]
1001c809:	mov    ecx,DWORD PTR [eax]
1001c80b:	push   0x0
1001c80d:	push   eax
1001c80e:	call   DWORD PTR [ecx+0x64]
1001c811:	mov    eax,DWORD PTR [esp+0x4]
1001c815:	and    DWORD PTR [eax],0x0
1001c818:	xor    eax,eax
1001c81a:	ret    0x4
1001c81d:	push   ebp
1001c81e:	mov    ebp,esp
1001c820:	push   ecx
1001c821:	mov    eax,DWORD PTR [ecx+0x98]
1001c827:	and    DWORD PTR [ebp-0x4],0x0
1001c82b:	test   al,0x1
1001c82d:	je     0x1001c852
1001c82f:	test   al,0x8
1001c831:	je     0x1001c852
1001c833:	mov    eax,DWORD PTR [ecx+0x74]
1001c836:	test   eax,eax
1001c838:	je     0x1001c852
1001c83a:	mov    ecx,DWORD PTR [eax]
1001c83c:	lea    edx,[ebp-0x4]
1001c83f:	push   edx
1001c840:	push   DWORD PTR [ebp+0x10]
1001c843:	push   DWORD PTR [ebp+0xc]
1001c846:	push   DWORD PTR [ebp+0x8]
1001c849:	push   eax
1001c84a:	call   DWORD PTR [ecx+0x24]
1001c84d:	cmp    eax,0x1
1001c850:	jne    0x1001c858
1001c852:	mov    eax,DWORD PTR [ebp+0x14]
1001c855:	and    DWORD PTR [eax],0x0
1001c858:	mov    eax,DWORD PTR [ebp-0x4]
1001c85b:	leave  
1001c85c:	ret    0x10
1001c85f:	push   ebp
1001c860:	mov    ebp,esp
1001c862:	push   ecx
1001c863:	mov    eax,DWORD PTR [ecx+0x98]
1001c869:	and    DWORD PTR [ebp-0x4],0x0
1001c86d:	test   al,0x1
1001c86f:	je     0x1001c88f
1001c871:	test   al,0x8
1001c873:	je     0x1001c88f
1001c875:	mov    eax,DWORD PTR [ecx+0x74]
1001c878:	test   eax,eax
1001c87a:	je     0x1001c88f
1001c87c:	mov    ecx,DWORD PTR [eax]
1001c87e:	lea    edx,[ebp-0x4]
1001c881:	push   edx
1001c882:	push   DWORD PTR [ebp+0x10]
1001c885:	push   DWORD PTR [ebp+0xc]
1001c888:	push   DWORD PTR [ebp+0x8]
1001c88b:	push   eax
1001c88c:	call   DWORD PTR [ecx+0x24]
1001c88f:	mov    eax,DWORD PTR [ebp+0x14]
1001c892:	and    DWORD PTR [eax],0x0
1001c895:	mov    eax,DWORD PTR [ebp-0x4]
1001c898:	leave  
1001c899:	ret    0x10
1001c89c:	push   ebp
1001c89d:	mov    ebp,esp
1001c89f:	sub    esp,0x6c
1001c8a2:	mov    eax,ds:0x1007e030
1001c8a7:	xor    eax,ebp
1001c8a9:	mov    DWORD PTR [ebp-0x8],eax
1001c8ac:	mov    eax,DWORD PTR [ebp+0x8]
1001c8af:	push   ebx
1001c8b0:	push   edi
1001c8b1:	xor    edi,edi
1001c8b3:	cmp    DWORD PTR [esi+0x70],edi
1001c8b6:	jne    0x1001c919
1001c8b8:	lea    eax,[ebp-0x4c]
1001c8bb:	push   eax
1001c8bc:	push   DWORD PTR [esi+0x4]
1001c8bf:	call   DWORD PTR ds:0x100662c8
1001c8c5:	cmp    eax,edi
1001c8c7:	mov    DWORD PTR [ebp-0x50],eax
1001c8ca:	je     0x1001c9fe
1001c8d0:	lea    eax,[ebp-0x60]
1001c8d3:	push   eax
1001c8d4:	push   DWORD PTR [esi+0x4]
1001c8d7:	call   DWORD PTR ds:0x100662d4
1001c8dd:	push   DWORD PTR [esi+0xcc]
1001c8e3:	call   DWORD PTR ds:0x1006602c
1001c8e9:	mov    ebx,eax
1001c8eb:	cmp    ebx,edi
1001c8ed:	je     0x1001c904
1001c8ef:	push   ebx
1001c8f0:	lea    eax,[ebp-0x60]
1001c8f3:	push   eax
1001c8f4:	push   DWORD PTR [ebp-0x50]
1001c8f7:	call   DWORD PTR ds:0x100662f0
1001c8fd:	push   ebx
1001c8fe:	call   DWORD PTR ds:0x10066044
1001c904:	lea    eax,[ebp-0x4c]
1001c907:	push   eax
1001c908:	push   DWORD PTR [esi+0x4]
1001c90b:	call   DWORD PTR ds:0x1006630c
1001c911:	xor    eax,eax
1001c913:	inc    eax
1001c914:	jmp    0x1001ca00
1001c919:	test   BYTE PTR [esi+0x98],0x8
1001c920:	je     0x1001c9fc
1001c926:	lea    eax,[ebp-0x4c]
1001c929:	push   eax
1001c92a:	push   DWORD PTR [esi+0x4]
1001c92d:	call   DWORD PTR ds:0x100662c8
1001c933:	mov    ebx,eax
1001c935:	cmp    ebx,edi
1001c937:	mov    DWORD PTR [ebp-0x64],ebx
1001c93a:	je     0x1001c9fe
1001c940:	lea    eax,[ebp-0x60]
1001c943:	push   eax
1001c944:	push   DWORD PTR [esi+0x4]
1001c947:	call   DWORD PTR ds:0x100662d4
1001c94d:	mov    eax,DWORD PTR [ebp-0x54]
1001c950:	sub    eax,DWORD PTR [ebp-0x5c]
1001c953:	push   eax
1001c954:	mov    eax,DWORD PTR [ebp-0x58]
1001c957:	sub    eax,DWORD PTR [ebp-0x60]
1001c95a:	push   eax
1001c95b:	push   ebx
1001c95c:	call   DWORD PTR ds:0x10066034
1001c962:	cmp    eax,edi
1001c964:	mov    DWORD PTR [ebp-0x50],eax
1001c967:	je     0x1001c904
1001c969:	push   ebx
1001c96a:	call   DWORD PTR ds:0x1006604c
1001c970:	mov    ebx,eax
1001c972:	cmp    ebx,edi
1001c974:	je     0x1001c9f4
1001c976:	push   DWORD PTR [ebp-0x50]
1001c979:	push   ebx
1001c97a:	call   DWORD PTR ds:0x10066048
1001c980:	cmp    eax,edi
1001c982:	mov    DWORD PTR [ebp-0x6c],eax
1001c985:	je     0x1001c9ed
1001c987:	push   DWORD PTR [esi+0xcc]
1001c98d:	call   DWORD PTR ds:0x1006602c
1001c993:	cmp    eax,edi
1001c995:	mov    DWORD PTR [ebp-0x68],eax
1001c998:	je     0x1001c9e3
1001c99a:	push   eax
1001c99b:	lea    eax,[ebp-0x60]
1001c99e:	push   eax
1001c99f:	push   ebx
1001c9a0:	call   DWORD PTR ds:0x100662f0
1001c9a6:	push   DWORD PTR [ebp-0x68]
1001c9a9:	call   DWORD PTR ds:0x10066044
1001c9af:	mov    eax,DWORD PTR [esi+0x70]
1001c9b2:	mov    edx,DWORD PTR [eax]
1001c9b4:	push   edi
1001c9b5:	push   edi
1001c9b6:	lea    ecx,[esi+0xb4]
1001c9bc:	push   ecx
1001c9bd:	push   ecx
1001c9be:	push   ebx
1001c9bf:	push   edi
1001c9c0:	push   edi
1001c9c1:	push   edi
1001c9c2:	push   0xffffffff
1001c9c4:	push   0x1
1001c9c6:	push   eax
1001c9c7:	call   DWORD PTR [edx+0xc]
1001c9ca:	push   0xcc0020
1001c9cf:	push   edi
1001c9d0:	push   edi
1001c9d1:	push   ebx
1001c9d2:	push   DWORD PTR [ebp-0x54]
1001c9d5:	push   DWORD PTR [ebp-0x58]
1001c9d8:	push   edi
1001c9d9:	push   edi
1001c9da:	push   DWORD PTR [ebp-0x64]
1001c9dd:	call   DWORD PTR ds:0x10066038
1001c9e3:	push   DWORD PTR [ebp-0x6c]
1001c9e6:	push   ebx
1001c9e7:	call   DWORD PTR ds:0x10066048
1001c9ed:	push   ebx
1001c9ee:	call   DWORD PTR ds:0x1006603c
1001c9f4:	push   DWORD PTR [ebp-0x50]
1001c9f7:	jmp    0x1001c8fe
1001c9fc:	mov    DWORD PTR [eax],edi
1001c9fe:	xor    eax,eax
1001ca00:	mov    ecx,DWORD PTR [ebp-0x8]
1001ca03:	pop    edi
1001ca04:	xor    ecx,ebp
1001ca06:	pop    ebx
1001ca07:	call   0x10042e97
1001ca0c:	leave  
1001ca0d:	ret    0x4
1001ca10:	push   0x4
1001ca12:	mov    eax,0x1005f81a
1001ca17:	call   0x10059a35
1001ca1c:	and    DWORD PTR [ebp-0x10],0x0
1001ca20:	mov    eax,DWORD PTR [ebp+0x8]
1001ca23:	and    DWORD PTR [ebp-0x4],0x0
1001ca27:	mov    ecx,DWORD PTR [eax]
1001ca29:	push   0x0
1001ca2b:	push   0x0
1001ca2d:	push   0x1006b858
1001ca32:	lea    edx,[ebp-0x10]
1001ca35:	push   edx
1001ca36:	push   DWORD PTR [ebp+0x14]
1001ca39:	push   DWORD PTR [ebp+0x10]
1001ca3c:	push   DWORD PTR [ebp+0xc]
1001ca3f:	push   eax
1001ca40:	call   DWORD PTR [ecx+0x28]
1001ca43:	or     DWORD PTR [ebp-0x4],0xffffffff
1001ca47:	mov    edi,eax
1001ca49:	mov    eax,DWORD PTR [ebp-0x10]
1001ca4c:	test   eax,eax
1001ca4e:	je     0x1001ca56
1001ca50:	mov    ecx,DWORD PTR [eax]
1001ca52:	push   eax
1001ca53:	call   DWORD PTR [ecx+0x8]
1001ca56:	mov    eax,edi
1001ca58:	call   0x10059b0d
1001ca5d:	ret    0x10
1001ca60:	push   ebp
1001ca61:	mov    ebp,esp
1001ca63:	mov    eax,DWORD PTR [ebp+0x8]
1001ca66:	mov    ecx,DWORD PTR [eax]
1001ca68:	push   0x0
1001ca6a:	push   DWORD PTR [ebp+0x20]
1001ca6d:	push   DWORD PTR [ebp+0x1c]
1001ca70:	push   DWORD PTR [ebp+0x18]
1001ca73:	push   DWORD PTR [ebp+0x14]
1001ca76:	push   DWORD PTR [ebp+0x10]
1001ca79:	push   DWORD PTR [ebp+0xc]
1001ca7c:	push   eax
1001ca7d:	call   DWORD PTR [ecx+0x28]
1001ca80:	pop    ebp
1001ca81:	ret    0x1c
1001ca84:	push   ebx
1001ca85:	push   ebp
1001ca86:	push   esi
1001ca87:	push   edi
1001ca88:	mov    edi,DWORD PTR [esp+0x14]
1001ca8c:	lea    esi,[edi-0x24]
1001ca8f:	xor    ebx,ebx
1001ca91:	mov    ecx,esi
1001ca93:	inc    ebx
1001ca94:	call   0x1001c502
1001ca99:	mov    eax,DWORD PTR [edi-0x20]
1001ca9c:	test   eax,eax
1001ca9e:	mov    ebp,DWORD PTR ds:0x10066360
1001caa4:	mov    BYTE PTR [esp+0x14],0x0
1001caa9:	je     0x1001cac2
1001caab:	cmp    eax,DWORD PTR [esp+0x1c]
1001caaf:	je     0x1001cac2
1001cab1:	push   0x507
1001cab6:	push   0x0
1001cab8:	push   0x0
1001caba:	push   eax
1001cabb:	call   ebp
1001cabd:	call   0x1001e591
1001cac2:	push   DWORD PTR [esp+0x1c]
1001cac6:	call   DWORD PTR ds:0x10066320
1001cacc:	test   eax,eax
1001cace:	je     0x1001cb1e
1001cad0:	mov    ebx,DWORD PTR [esp+0x1c]
1001cad4:	cmp    DWORD PTR [edi-0x20],ebx
1001cad7:	je     0x1001cae3
1001cad9:	call   0x1001e54d
1001cade:	mov    BYTE PTR [esp+0x14],0x1
1001cae3:	push   0x0
1001cae5:	push   0x1
1001cae7:	push   DWORD PTR [esp+0x20]
1001caeb:	mov    ecx,esi
1001caed:	call   0x1001e15a
1001caf2:	mov    ebx,eax
1001caf4:	test   ebx,ebx
1001caf6:	jge    0x1001cb1e
1001caf8:	mov    ecx,esi
1001cafa:	call   0x1001c502
1001caff:	mov    edi,DWORD PTR [edi-0x20]
1001cb02:	test   edi,edi
1001cb04:	je     0x1001cb1e
1001cb06:	push   0x507
1001cb0b:	push   0x0
1001cb0d:	push   0x0
1001cb0f:	push   edi
1001cb10:	call   ebp
1001cb12:	cmp    BYTE PTR [esp+0x14],0x0
1001cb17:	je     0x1001cb1e
1001cb19:	call   0x1001e591
1001cb1e:	pop    edi
1001cb1f:	pop    esi
1001cb20:	pop    ebp
1001cb21:	mov    eax,ebx
1001cb23:	pop    ebx
1001cb24:	ret    0xc
1001cb27:	mov    ecx,DWORD PTR [esp+0xc]
1001cb2b:	test   ecx,ecx
1001cb2d:	mov    eax,0x80004003
1001cb32:	je     0x1001cb53
1001cb34:	mov    eax,DWORD PTR [esp+0x4]
1001cb38:	mov    eax,DWORD PTR [eax+0x3c]
1001cb3b:	test   eax,eax
1001cb3d:	je     0x1001cb4b
1001cb3f:	mov    edx,DWORD PTR [eax]
1001cb41:	push   ecx
1001cb42:	push   DWORD PTR [esp+0xc]
1001cb46:	push   eax
1001cb47:	call   DWORD PTR [edx]
1001cb49:	jmp    0x1001cb53
1001cb4b:	and    DWORD PTR [ecx],0x0
1001cb4e:	mov    eax,0x80040004
1001cb53:	ret    0xc
1001cb56:	push   esi
1001cb57:	mov    esi,DWORD PTR [esp+0x8]
1001cb5b:	push   edi
1001cb5c:	mov    edi,DWORD PTR [esp+0x10]
1001cb60:	add    esi,0x54
1001cb63:	cmp    DWORD PTR [esi],edi
1001cb65:	je     0x1001cb6c
1001cb67:	call   0x1000763b
1001cb6c:	pop    edi
1001cb6d:	xor    eax,eax
1001cb6f:	pop    esi
1001cb70:	ret    0x8
1001cb73:	push   esi
1001cb74:	mov    esi,DWORD PTR [esp+0x8]
1001cb78:	push   edi
1001cb79:	mov    edi,DWORD PTR [esp+0x10]
1001cb7d:	add    esi,0x58
1001cb80:	cmp    DWORD PTR [esi],edi
1001cb82:	je     0x1001cb89
1001cb84:	call   0x1000763b
1001cb89:	pop    edi
1001cb8a:	xor    eax,eax
1001cb8c:	pop    esi
1001cb8d:	ret    0x8
1001cb90:	push   0x4
1001cb92:	mov    eax,0x1005f81a
1001cb97:	call   0x10059a35
1001cb9c:	and    DWORD PTR [ebp-0x10],0x0
1001cba0:	push   DWORD PTR [ebp+0x18]
1001cba3:	mov    eax,DWORD PTR [ebp+0x8]
1001cba6:	and    DWORD PTR [ebp-0x4],0x0
1001cbaa:	mov    ecx,DWORD PTR [eax]
1001cbac:	push   0x0
1001cbae:	push   0x1006b858
1001cbb3:	lea    edx,[ebp-0x10]
1001cbb6:	push   edx
1001cbb7:	push   DWORD PTR [ebp+0x14]
1001cbba:	push   DWORD PTR [ebp+0x10]
1001cbbd:	push   DWORD PTR [ebp+0xc]
1001cbc0:	push   eax
1001cbc1:	call   DWORD PTR [ecx+0x28]
1001cbc4:	or     DWORD PTR [ebp-0x4],0xffffffff
1001cbc8:	mov    edi,eax
1001cbca:	mov    eax,DWORD PTR [ebp-0x10]
1001cbcd:	test   eax,eax
1001cbcf:	je     0x1001cbd7
1001cbd1:	mov    ecx,DWORD PTR [eax]
1001cbd3:	push   eax
1001cbd4:	call   DWORD PTR [ecx+0x8]
1001cbd7:	mov    eax,edi
1001cbd9:	call   0x10059b0d
1001cbde:	ret    0x14
1001cbe1:	push   ebp
1001cbe2:	mov    ebp,esp
1001cbe4:	and    esp,0xfffffff8
1001cbe7:	push   0xffffffff
1001cbe9:	push   0x1006026e
1001cbee:	mov    eax,fs:0x0
1001cbf4:	push   eax
1001cbf5:	sub    esp,0x40
1001cbf8:	push   ebx
1001cbf9:	push   esi
1001cbfa:	push   edi
1001cbfb:	mov    eax,ds:0x1007e030
1001cc00:	xor    eax,esp
1001cc02:	push   eax
1001cc03:	lea    eax,[esp+0x50]
1001cc07:	mov    fs:0x0,eax
1001cc0d:	mov    eax,DWORD PTR [ebp+0x18]
1001cc10:	test   eax,eax
1001cc12:	jne    0x1001cc1e
1001cc14:	mov    eax,0x80004003
1001cc19:	jmp    0x1001cf28
1001cc1e:	mov    edi,DWORD PTR [ebp+0x8]
1001cc21:	and    DWORD PTR [eax],0x0
1001cc24:	lea    esi,[edi-0x24]
1001cc27:	mov    ecx,esi
1001cc29:	mov    DWORD PTR [esp+0x14],0x1
1001cc31:	mov    BYTE PTR [esp+0x13],0x0
1001cc36:	mov    DWORD PTR [esp+0x28],esi
1001cc3a:	call   0x1001c502
1001cc3f:	lea    ebx,[edi-0x20]
1001cc42:	mov    eax,DWORD PTR [ebx]
1001cc44:	test   eax,eax
1001cc46:	mov    DWORD PTR [esp+0x24],ebx
1001cc4a:	je     0x1001cc66
1001cc4c:	cmp    eax,DWORD PTR [ebp+0x10]
1001cc4f:	je     0x1001cc66
1001cc51:	push   0x507
1001cc56:	push   0x0
1001cc58:	push   0x0
1001cc5a:	push   eax
1001cc5b:	call   DWORD PTR ds:0x10066360
1001cc61:	call   0x1001e591
1001cc66:	push   DWORD PTR [ebp+0x10]
1001cc69:	call   DWORD PTR ds:0x10066320
1001cc6f:	test   eax,eax
1001cc71:	je     0x1001cf24
1001cc77:	mov    eax,DWORD PTR [ebp+0x10]
1001cc7a:	cmp    DWORD PTR [ebx],eax
1001cc7c:	je     0x1001cc8e
1001cc7e:	mov    ebx,eax
1001cc80:	call   0x1001e54d
1001cc85:	mov    ebx,DWORD PTR [esp+0x24]
1001cc89:	mov    BYTE PTR [esp+0x13],0x1
1001cc8e:	cmp    DWORD PTR [edi+0xa8],0x0
1001cc95:	jne    0x1001ccb3
1001cc97:	push   ebx
1001cc98:	call   0x1001bb2b
1001cc9d:	test   eax,eax
1001cc9f:	je     0x1001cca5
1001cca1:	push   0xf
1001cca3:	jmp    0x1001cca7
1001cca5:	push   0x5
1001cca7:	call   DWORD PTR ds:0x10066318
1001ccad:	mov    DWORD PTR [edi+0xa8],eax
1001ccb3:	mov    esi,DWORD PTR [ebp+0x18]
1001ccb6:	push   DWORD PTR [ebp+0x24]
1001ccb9:	mov    ecx,DWORD PTR [ebp+0xc]
1001ccbc:	lea    edi,[esp+0x16]
1001ccc0:	mov    ebx,esi
1001ccc2:	mov    BYTE PTR [esp+0x16],0x0
1001ccc7:	call   0x1001bc93
1001cccc:	xor    ebx,ebx
1001ccce:	cmp    eax,ebx
1001ccd0:	pop    ecx
1001ccd1:	mov    DWORD PTR [esp+0x14],eax
1001ccd5:	jl     0x1001ccea
1001ccd7:	push   DWORD PTR [ebp+0x14]
1001ccda:	mov    ecx,DWORD PTR [esp+0x2c]
1001ccde:	push   ebx
1001ccdf:	push   DWORD PTR [esi]
1001cce1:	call   0x1001e15a
1001cce6:	mov    DWORD PTR [esp+0x14],eax
1001ccea:	cmp    DWORD PTR [esp+0x14],ebx
1001ccee:	mov    edx,DWORD PTR [ebp+0x8]
1001ccf1:	mov    esi,DWORD PTR [ebp+0x1c]
1001ccf4:	lea    ecx,[edx+0x5c]
1001ccf7:	mov    edi,ecx
1001ccf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001ccfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001ccfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001ccfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001ccfd:	jl     0x1001ceef
1001cd03:	mov    esi,DWORD PTR [ebp+0x18]
1001cd06:	mov    eax,DWORD PTR [esi]
1001cd08:	cmp    eax,ebx
1001cd0a:	je     0x1001cd1e
1001cd0c:	cmp    DWORD PTR [ebp+0x20],ebx
1001cd0f:	je     0x1001cd1e
1001cd11:	add    edx,0x70
1001cd14:	push   edx
1001cd15:	push   ecx
1001cd16:	push   DWORD PTR [ebp+0x20]
1001cd19:	call   0x1001b49a
1001cd1e:	cmp    BYTE PTR [esp+0x12],bl
1001cd22:	je     0x1001cee1
1001cd28:	cmp    DWORD PTR [esi],ebx
1001cd2a:	je     0x1001cee1
1001cd30:	mov    edi,DWORD PTR [esp+0x24]
1001cd34:	mov    esi,DWORD PTR ds:0x10066310
1001cd3a:	push   0xfffffff0
1001cd3c:	push   DWORD PTR [edi]
1001cd3e:	call   esi
1001cd40:	test   eax,0x300000
1001cd45:	jne    0x1001cd53
1001cd47:	mov    eax,DWORD PTR [ebp+0x8]
1001cd4a:	or     DWORD PTR [eax+0xbc],0x8
1001cd51:	jmp    0x1001cd78
1001cd53:	push   0xfffffff0
1001cd55:	push   DWORD PTR [edi]
1001cd57:	call   esi
1001cd59:	and    eax,0xffcfffff
1001cd5e:	push   eax
1001cd5f:	push   0xfffffff0
1001cd61:	push   DWORD PTR [edi]
1001cd63:	call   DWORD PTR ds:0x10066358
1001cd69:	push   0x37
1001cd6b:	push   ebx
1001cd6c:	push   ebx
1001cd6d:	push   ebx
1001cd6e:	push   ebx
1001cd6f:	push   ebx
1001cd70:	push   DWORD PTR [edi]
1001cd72:	call   DWORD PTR ds:0x1006631c
1001cd78:	mov    eax,DWORD PTR [ebp+0x18]
1001cd7b:	mov    edi,DWORD PTR [eax]
1001cd7d:	cmp    edi,ebx
1001cd7f:	mov    DWORD PTR [esp+0x1c],edi
1001cd83:	je     0x1001cd8b
1001cd85:	mov    eax,DWORD PTR [edi]
1001cd87:	push   edi
1001cd88:	call   DWORD PTR [eax+0x4]
1001cd8b:	mov    esi,DWORD PTR [ebp+0xc]
1001cd8e:	mov    DWORD PTR [esp+0x58],ebx
1001cd92:	movzx  eax,WORD PTR [esi]
1001cd95:	cmp    ax,0x4d
1001cd99:	je     0x1001cda5
1001cd9b:	cmp    ax,0x6d
1001cd9f:	jne    0x1001cf47
1001cda5:	movzx  eax,WORD PTR [esi+0x2]
1001cda9:	cmp    ax,0x53
1001cdad:	je     0x1001cdb9
1001cdaf:	cmp    ax,0x73
1001cdb3:	jne    0x1001cf47
1001cdb9:	movzx  eax,WORD PTR [esi+0x4]
1001cdbd:	cmp    ax,0x48
1001cdc1:	je     0x1001cdcd
1001cdc3:	cmp    ax,0x68
1001cdc7:	jne    0x1001cf47
1001cdcd:	movzx  eax,WORD PTR [esi+0x6]
1001cdd1:	cmp    ax,0x54
1001cdd5:	je     0x1001cde1
1001cdd7:	cmp    ax,0x74
1001cddb:	jne    0x1001cf47
1001cde1:	movzx  eax,WORD PTR [esi+0x8]
1001cde5:	cmp    ax,0x4d
1001cde9:	je     0x1001cdf5
1001cdeb:	cmp    ax,0x6d
1001cdef:	jne    0x1001cf47
1001cdf5:	movzx  eax,WORD PTR [esi+0xa]
1001cdf9:	cmp    ax,0x4c
1001cdfd:	je     0x1001ce09
1001cdff:	cmp    ax,0x6c
1001ce03:	jne    0x1001cf47
1001ce09:	cmp    WORD PTR [esi+0xc],0x3a
1001ce0e:	jne    0x1001cf47
1001ce14:	push   esi
1001ce15:	call   DWORD PTR ds:0x100660c4
1001ce1b:	lea    edi,[eax+eax*1-0xe]
1001ce1f:	push   edi
1001ce20:	push   0x42
1001ce22:	call   DWORD PTR ds:0x10066148
1001ce28:	mov    ebx,eax
1001ce2a:	test   ebx,ebx
1001ce2c:	je     0x1001cf3d
1001ce32:	and    DWORD PTR [esp+0x20],0x0
1001ce37:	push   ebx
1001ce38:	mov    BYTE PTR [esp+0x5c],0x1
1001ce3d:	call   DWORD PTR ds:0x10066144
1001ce43:	push   edi
1001ce44:	add    esi,0xe
1001ce47:	push   esi
1001ce48:	push   edi
1001ce49:	push   eax
1001ce4a:	call   0x10014338
1001ce4f:	add    esp,0x10
1001ce52:	push   ebx
1001ce53:	call   DWORD PTR ds:0x10066154
1001ce59:	lea    eax,[esp+0x20]
1001ce5d:	push   eax
1001ce5e:	push   0x1
1001ce60:	push   ebx
1001ce61:	call   DWORD PTR ds:0x1006641c
1001ce67:	test   eax,eax
1001ce69:	mov    DWORD PTR [esp+0x14],eax
1001ce6d:	jl     0x1001ceb9
1001ce6f:	and    DWORD PTR [esp+0x18],0x0
1001ce74:	lea    edx,[esp+0x18]
1001ce78:	push   edx
1001ce79:	mov    BYTE PTR [esp+0x5c],0x2
1001ce7e:	mov    eax,DWORD PTR [esp+0x20]
1001ce82:	mov    ecx,DWORD PTR [eax]
1001ce84:	push   0x10070970
1001ce89:	push   eax
1001ce8a:	call   DWORD PTR [ecx]
1001ce8c:	test   eax,eax
1001ce8e:	mov    DWORD PTR [esp+0x14],eax
1001ce92:	jl     0x1001cea6
1001ce94:	mov    eax,DWORD PTR [esp+0x18]
1001ce98:	push   DWORD PTR [esp+0x20]
1001ce9c:	mov    ecx,DWORD PTR [eax]
1001ce9e:	push   eax
1001ce9f:	call   DWORD PTR [ecx+0x14]
1001cea2:	mov    DWORD PTR [esp+0x14],eax
1001cea6:	mov    BYTE PTR [esp+0x58],0x1
1001ceab:	mov    eax,DWORD PTR [esp+0x18]
1001ceaf:	test   eax,eax
1001ceb1:	je     0x1001ceb9
1001ceb3:	mov    ecx,DWORD PTR [eax]
1001ceb5:	push   eax
1001ceb6:	call   DWORD PTR [ecx+0x8]
1001ceb9:	mov    BYTE PTR [esp+0x58],0x0
1001cebe:	mov    eax,DWORD PTR [esp+0x20]
1001cec2:	test   eax,eax
1001cec4:	je     0x1001cecc
1001cec6:	mov    ecx,DWORD PTR [eax]
1001cec8:	push   eax
1001cec9:	call   DWORD PTR [ecx+0x8]
1001cecc:	mov    edi,DWORD PTR [esp+0x1c]
1001ced0:	xor    ebx,ebx
1001ced2:	or     DWORD PTR [esp+0x58],0xffffffff
1001ced7:	cmp    edi,ebx
1001ced9:	je     0x1001cee1
1001cedb:	mov    eax,DWORD PTR [edi]
1001cedd:	push   edi
1001cede:	call   DWORD PTR [eax+0x8]
1001cee1:	cmp    DWORD PTR [esp+0x14],ebx
1001cee5:	jl     0x1001ceef
1001cee7:	mov    eax,DWORD PTR [ebp+0x8]
1001ceea:	cmp    DWORD PTR [eax+0x3c],ebx
1001ceed:	jne    0x1001cf24
1001ceef:	mov    esi,DWORD PTR [esp+0x28]
1001cef3:	mov    ecx,esi
1001cef5:	call   0x1001c502
1001cefa:	mov    eax,DWORD PTR [esp+0x24]
1001cefe:	mov    eax,DWORD PTR [eax]
1001cf00:	cmp    eax,ebx
1001cf02:	je     0x1001cf24
1001cf04:	push   0x507
1001cf09:	push   ebx
1001cf0a:	push   ebx
1001cf0b:	push   eax
1001cf0c:	call   DWORD PTR ds:0x10066360
1001cf12:	cmp    DWORD PTR [esp+0x14],ebx
1001cf16:	jge    0x1001cf24
1001cf18:	cmp    BYTE PTR [esp+0x13],0x0
1001cf1d:	je     0x1001cf24
1001cf1f:	call   0x1001e591
1001cf24:	mov    eax,DWORD PTR [esp+0x14]
1001cf28:	mov    ecx,DWORD PTR [esp+0x50]
1001cf2c:	mov    DWORD PTR fs:0x0,ecx
1001cf33:	pop    ecx
1001cf34:	pop    edi
1001cf35:	pop    esi
1001cf36:	pop    ebx
1001cf37:	mov    esp,ebp
1001cf39:	pop    ebp
1001cf3a:	ret    0x20
1001cf3d:	mov    DWORD PTR [esp+0x14],0x8007000e
1001cf45:	jmp    0x1001cecc
1001cf47:	mov    DWORD PTR [esp+0x18],ebx
1001cf4b:	lea    ecx,[esp+0x18]
1001cf4f:	push   ecx
1001cf50:	push   0x100709c0
1001cf55:	mov    BYTE PTR [esp+0x60],0x3
1001cf5a:	mov    eax,DWORD PTR [edi]
1001cf5c:	push   edi
1001cf5d:	call   DWORD PTR [eax]
1001cf5f:	cmp    DWORD PTR [esp+0x18],ebx
1001cf63:	je     0x1001cff7
1001cf69:	lea    eax,[esp+0x3c]
1001cf6d:	push   eax
1001cf6e:	call   DWORD PTR ds:0x1006628c
1001cf74:	mov    BYTE PTR [esp+0x58],0x4
1001cf79:	mov    edi,DWORD PTR ds:0x10066294
1001cf7f:	lea    eax,[esp+0x2c]
1001cf83:	push   eax
1001cf84:	mov    WORD PTR [esp+0x30],bx
1001cf89:	call   edi
1001cf8b:	push   esi
1001cf8c:	mov    WORD PTR [esp+0x30],0x8
1001cf93:	call   DWORD PTR ds:0x100662b0
1001cf99:	cmp    eax,ebx
1001cf9b:	mov    DWORD PTR [esp+0x34],eax
1001cf9f:	jne    0x1001cfb7
1001cfa1:	mov    eax,0x8007000e
1001cfa6:	push   eax
1001cfa7:	mov    WORD PTR [esp+0x30],0xa
1001cfae:	mov    DWORD PTR [esp+0x38],eax
1001cfb2:	call   0x10001f45
1001cfb7:	mov    BYTE PTR [esp+0x58],0x5
1001cfbc:	mov    eax,DWORD PTR [esp+0x18]
1001cfc0:	mov    ecx,DWORD PTR [eax]
1001cfc2:	push   0xffffffff
1001cfc4:	push   eax
1001cfc5:	call   DWORD PTR [ecx+0xa4]
1001cfcb:	mov    eax,DWORD PTR [esp+0x18]
1001cfcf:	mov    ecx,DWORD PTR [eax]
1001cfd1:	lea    edx,[esp+0x3c]
1001cfd5:	push   edx
1001cfd6:	push   edx
1001cfd7:	push   edx
1001cfd8:	push   edx
1001cfd9:	lea    edx,[esp+0x3c]
1001cfdd:	push   edx
1001cfde:	push   eax
1001cfdf:	call   DWORD PTR [ecx+0xd0]
1001cfe5:	lea    eax,[esp+0x2c]
1001cfe9:	push   eax
1001cfea:	call   edi
1001cfec:	lea    eax,[esp+0x3c]
1001cff0:	push   eax
1001cff1:	call   edi
1001cff3:	mov    edi,DWORD PTR [esp+0x1c]
1001cff7:	mov    BYTE PTR [esp+0x58],0x0
1001cffc:	mov    eax,DWORD PTR [esp+0x18]
1001d000:	cmp    eax,ebx
1001d002:	je     0x1001ced2
1001d008:	mov    ecx,DWORD PTR [eax]
1001d00a:	push   eax
1001d00b:	call   DWORD PTR [ecx+0x8]
1001d00e:	jmp    0x1001ced2
1001d013:	push   ebp
1001d014:	mov    ebp,esp
1001d016:	mov    ecx,DWORD PTR [ebp+0x8]
1001d019:	mov    eax,DWORD PTR [ecx+0x80]
1001d01f:	mov    ecx,DWORD PTR [ecx+0x34]
1001d022:	shr    eax,0x5
1001d025:	and    eax,0x1
1001d028:	test   ecx,ecx
1001d02a:	mov    DWORD PTR [ebp+0x8],eax
1001d02d:	je     0x1001d04d
1001d02f:	mov    edx,DWORD PTR [ecx]
1001d031:	lea    eax,[ebp+0x8]
1001d034:	push   eax
1001d035:	push   DWORD PTR [ebp+0x18]
1001d038:	mov    eax,DWORD PTR [ebp+0x10]
1001d03b:	push   DWORD PTR [ebp+0x14]
1001d03e:	push   DWORD PTR [eax+0x4]
1001d041:	push   DWORD PTR [eax]
1001d043:	push   DWORD PTR [ebp+0xc]
1001d046:	push   ecx
1001d047:	call   DWORD PTR [edx+0x1c]
1001d04a:	mov    eax,DWORD PTR [ebp+0x8]
1001d04d:	pop    ebp
1001d04e:	ret    0x14
1001d051:	mov    eax,DWORD PTR [esp+0x8]
1001d055:	test   eax,eax
1001d057:	jne    0x1001d060
1001d059:	mov    eax,0x80004003
1001d05e:	jmp    0x1001d091
1001d060:	mov    ecx,DWORD PTR [esp+0x4]
1001d064:	mov    edx,DWORD PTR [ecx+0x34]
1001d067:	test   edx,edx
1001d069:	je     0x1001d07d
1001d06b:	mov    ecx,DWORD PTR [edx]
1001d06d:	push   esi
1001d06e:	lea    esi,[eax+0x8]
1001d071:	push   esi
1001d072:	add    eax,0x4
1001d075:	push   eax
1001d076:	push   edx
1001d077:	call   DWORD PTR [ecx+0x20]
1001d07a:	pop    esi
1001d07b:	jmp    0x1001d091
1001d07d:	mov    edx,DWORD PTR [ecx+0x98]
1001d083:	mov    DWORD PTR [eax+0x4],edx
1001d086:	mov    ecx,DWORD PTR [ecx+0x9c]
1001d08c:	mov    DWORD PTR [eax+0x8],ecx
1001d08f:	xor    eax,eax
1001d091:	ret    0x8
1001d094:	push   ebp
1001d095:	mov    ebp,esp
1001d097:	mov    ecx,DWORD PTR [ebp+0x8]
1001d09a:	mov    eax,DWORD PTR [ecx+0x80]
1001d0a0:	mov    ecx,DWORD PTR [ecx+0x34]
1001d0a3:	shr    eax,0x6
1001d0a6:	and    eax,0x1
1001d0a9:	test   ecx,ecx
1001d0ab:	mov    DWORD PTR [ebp+0x8],eax
1001d0ae:	je     0x1001d0cc
1001d0b0:	mov    eax,DWORD PTR [ecx]
1001d0b2:	lea    edx,[ebp+0x8]
1001d0b5:	push   edx
1001d0b6:	push   DWORD PTR [ebp+0x1c]
1001d0b9:	push   DWORD PTR [ebp+0x18]
1001d0bc:	push   DWORD PTR [ebp+0x14]
1001d0bf:	push   DWORD PTR [ebp+0x10]
1001d0c2:	push   DWORD PTR [ebp+0xc]
1001d0c5:	push   ecx
1001d0c6:	call   DWORD PTR [eax+0x24]
1001d0c9:	mov    eax,DWORD PTR [ebp+0x8]
1001d0cc:	pop    ebp
1001d0cd:	ret    0x18
1001d0d0:	mov    ecx,DWORD PTR [esp+0x4]
1001d0d4:	mov    ecx,DWORD PTR [ecx+0x34]
1001d0d7:	xor    eax,eax
1001d0d9:	test   ecx,ecx
1001d0db:	je     0x1001d0e3
1001d0dd:	mov    eax,DWORD PTR [ecx]
1001d0df:	push   ecx
1001d0e0:	call   DWORD PTR [eax+0x28]
1001d0e3:	ret    0x4
1001d0e6:	mov    ecx,DWORD PTR [esp+0x4]
1001d0ea:	mov    ecx,DWORD PTR [ecx+0x34]
1001d0ed:	xor    eax,eax
1001d0ef:	test   ecx,ecx
1001d0f1:	je     0x1001d0f9
1001d0f3:	mov    eax,DWORD PTR [ecx]
1001d0f5:	push   ecx
1001d0f6:	call   DWORD PTR [eax+0x2c]
1001d0f9:	ret    0x4
1001d0fc:	mov    ecx,DWORD PTR [esp+0x4]
1001d100:	mov    ecx,DWORD PTR [ecx+0x34]
1001d103:	xor    eax,eax
1001d105:	test   ecx,ecx
1001d107:	je     0x1001d118
1001d109:	mov    edx,DWORD PTR [esp+0x8]
1001d10d:	mov    eax,DWORD PTR [ecx]
1001d10f:	neg    edx
1001d111:	sbb    edx,edx
1001d113:	push   edx
1001d114:	push   ecx
1001d115:	call   DWORD PTR [eax+0x30]
1001d118:	ret    0x8
1001d11b:	mov    ecx,DWORD PTR [esp+0x4]
1001d11f:	mov    ecx,DWORD PTR [ecx+0x34]
1001d122:	xor    eax,eax
1001d124:	test   ecx,ecx
1001d126:	je     0x1001d137
1001d128:	mov    edx,DWORD PTR [esp+0x8]
1001d12c:	mov    eax,DWORD PTR [ecx]
1001d12e:	neg    edx
1001d130:	sbb    edx,edx
1001d132:	push   edx
1001d133:	push   ecx
1001d134:	call   DWORD PTR [eax+0x34]
1001d137:	ret    0x8
1001d13a:	mov    ecx,DWORD PTR [esp+0x4]
1001d13e:	mov    ecx,DWORD PTR [ecx+0x34]
1001d141:	xor    eax,eax
1001d143:	test   ecx,ecx
1001d145:	je     0x1001d156
1001d147:	mov    edx,DWORD PTR [esp+0x8]
1001d14b:	mov    eax,DWORD PTR [ecx]
1001d14d:	neg    edx
1001d14f:	sbb    edx,edx
1001d151:	push   edx
1001d152:	push   ecx
1001d153:	call   DWORD PTR [eax+0x38]
1001d156:	ret    0x8
1001d159:	mov    ecx,DWORD PTR [esp+0x4]
1001d15d:	mov    ecx,DWORD PTR [ecx+0x34]
1001d160:	xor    eax,eax
1001d162:	test   ecx,ecx
1001d164:	je     0x1001d188
1001d166:	mov    eax,DWORD PTR [esp+0x10]
1001d16a:	mov    edx,DWORD PTR [ecx]
1001d16c:	neg    eax
1001d16e:	sbb    eax,eax
1001d170:	push   eax
1001d171:	push   DWORD PTR [esp+0x10]
1001d175:	mov    eax,DWORD PTR [esp+0x10]
1001d179:	push   DWORD PTR [eax+0xc]
1001d17c:	push   DWORD PTR [eax+0x8]
1001d17f:	push   DWORD PTR [eax+0x4]
1001d182:	push   DWORD PTR [eax]
1001d184:	push   ecx
1001d185:	call   DWORD PTR [edx+0x3c]
1001d188:	ret    0x10
1001d18b:	push   0x4
1001d18d:	mov    eax,0x1005faed
1001d192:	call   0x10059a35
1001d197:	mov    eax,DWORD PTR [ebp+0x8]
1001d19a:	mov    edi,DWORD PTR [eax+0x34]
1001d19d:	test   edi,edi
1001d19f:	mov    DWORD PTR [ebp-0x10],0x1
1001d1a6:	je     0x1001d1dd
1001d1a8:	push   DWORD PTR [ebp+0x10]
1001d1ab:	lea    esi,[ebp+0x8]
1001d1ae:	call   0x1001b3aa
1001d1b3:	and    DWORD PTR [ebp-0x4],0x0
1001d1b7:	mov    ecx,DWORD PTR [edi]
1001d1b9:	lea    edx,[ebp-0x10]
1001d1bc:	push   edx
1001d1bd:	push   DWORD PTR [ebp+0x14]
1001d1c0:	push   DWORD PTR [eax]
1001d1c2:	mov    eax,DWORD PTR [ebp+0xc]
1001d1c5:	push   DWORD PTR [eax+0xc]
1001d1c8:	push   DWORD PTR [eax+0x8]
1001d1cb:	push   DWORD PTR [eax+0x4]
1001d1ce:	push   DWORD PTR [eax]
1001d1d0:	push   edi
1001d1d1:	call   DWORD PTR [ecx+0x40]
1001d1d4:	push   DWORD PTR [ebp+0x8]
1001d1d7:	call   DWORD PTR ds:0x100662b4
1001d1dd:	mov    eax,DWORD PTR [ebp-0x10]
1001d1e0:	call   0x10059b0d
1001d1e5:	ret    0x10
1001d1e8:	push   ebp
1001d1e9:	mov    ebp,esp
1001d1eb:	push   ebx
1001d1ec:	xor    ebx,ebx
1001d1ee:	push   edi
1001d1ef:	mov    edi,DWORD PTR [ebp+0xc]
1001d1f2:	inc    ebx
1001d1f3:	test   edi,edi
1001d1f5:	jne    0x1001d201
1001d1f7:	mov    eax,0x80004003
1001d1fc:	jmp    0x1001d283
1001d201:	and    DWORD PTR [edi],0x0
1001d204:	push   esi
1001d205:	mov    esi,DWORD PTR [ebp+0x8]
1001d208:	mov    eax,DWORD PTR [esi+0x34]
1001d20b:	test   eax,eax
1001d20d:	je     0x1001d229
1001d20f:	push   DWORD PTR [ebp+0x10]
1001d212:	mov    ecx,DWORD PTR [eax]
1001d214:	push   edi
1001d215:	push   eax
1001d216:	call   DWORD PTR [ecx+0x44]
1001d219:	mov    ebx,eax
1001d21b:	test   ebx,ebx
1001d21d:	jl     0x1001d224
1001d21f:	cmp    DWORD PTR [edi],0x0
1001d222:	jne    0x1001d280
1001d224:	xor    ebx,ebx
1001d226:	inc    ebx
1001d227:	jmp    0x1001d280
1001d229:	push   DWORD PTR [esi+0xa0]
1001d22f:	call   DWORD PTR ds:0x100662ac
1001d235:	test   eax,eax
1001d237:	je     0x1001d280
1001d239:	push   DWORD PTR [esi+0xa0]
1001d23f:	call   DWORD PTR ds:0x100662a0
1001d245:	add    eax,0x2
1001d248:	push   eax
1001d249:	mov    DWORD PTR [ebp+0xc],eax
1001d24c:	call   DWORD PTR ds:0x10066428
1001d252:	mov    ebx,eax
1001d254:	test   ebx,ebx
1001d256:	jne    0x1001d25f
1001d258:	mov    eax,0x8007000e
1001d25d:	jmp    0x1001d282
1001d25f:	push   DWORD PTR [esi+0xa0]
1001d265:	push   DWORD PTR [ebp+0xc]
1001d268:	push   ebx
1001d269:	call   0x1001430c
1001d26e:	add    esp,0xc
1001d271:	test   al,al
1001d273:	jne    0x1001d27c
1001d275:	mov    eax,0x80004005
1001d27a:	jmp    0x1001d282
1001d27c:	mov    DWORD PTR [edi],ebx
1001d27e:	xor    ebx,ebx
1001d280:	mov    eax,ebx
1001d282:	pop    esi
1001d283:	pop    edi
1001d284:	pop    ebx
1001d285:	pop    ebp
1001d286:	ret    0xc
1001d289:	push   0x0
1001d28b:	mov    eax,0x1005f5f7
1001d290:	call   0x10059a35
1001d295:	mov    esi,DWORD PTR [ebp+0x10]
1001d298:	test   esi,esi
1001d29a:	jne    0x1001d2a3
1001d29c:	mov    eax,0x80004003
1001d2a1:	jmp    0x1001d2ff
1001d2a3:	and    DWORD PTR [esi],0x0
1001d2a6:	mov    eax,DWORD PTR [ebp+0x8]
1001d2a9:	mov    eax,DWORD PTR [eax+0x34]
1001d2ac:	test   eax,eax
1001d2ae:	mov    edi,0x80004001
1001d2b3:	je     0x1001d2fd
1001d2b5:	and    DWORD PTR [ebp+0x10],0x0
1001d2b9:	and    DWORD PTR [ebp-0x4],0x0
1001d2bd:	mov    ecx,DWORD PTR [eax]
1001d2bf:	lea    edx,[ebp+0x10]
1001d2c2:	push   edx
1001d2c3:	push   DWORD PTR [ebp+0xc]
1001d2c6:	push   eax
1001d2c7:	call   DWORD PTR [ecx+0x48]
1001d2ca:	mov    edi,eax
1001d2cc:	mov    eax,DWORD PTR [ebp+0x10]
1001d2cf:	test   eax,eax
1001d2d1:	je     0x1001d2e3
1001d2d3:	mov    ecx,DWORD PTR [eax]
1001d2d5:	push   esi
1001d2d6:	push   0x100709d0
1001d2db:	push   eax
1001d2dc:	call   DWORD PTR [ecx]
1001d2de:	mov    edi,eax
1001d2e0:	mov    eax,DWORD PTR [ebp+0x10]
1001d2e3:	test   edi,edi
1001d2e5:	jl     0x1001d2ec
1001d2e7:	cmp    DWORD PTR [esi],0x0
1001d2ea:	jne    0x1001d2ef
1001d2ec:	xor    edi,edi
1001d2ee:	inc    edi
1001d2ef:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d2f3:	test   eax,eax
1001d2f5:	je     0x1001d2fd
1001d2f7:	mov    ecx,DWORD PTR [eax]
1001d2f9:	push   eax
1001d2fa:	call   DWORD PTR [ecx+0x8]
1001d2fd:	mov    eax,edi
1001d2ff:	call   0x10059b0d
1001d304:	ret    0xc
1001d307:	push   esi
1001d308:	mov    esi,DWORD PTR [esp+0xc]
1001d30c:	test   esi,esi
1001d30e:	jne    0x1001d317
1001d310:	mov    eax,0x80004003
1001d315:	jmp    0x1001d350
1001d317:	and    DWORD PTR [esi],0x0
1001d31a:	mov    eax,DWORD PTR [esp+0x8]
1001d31e:	mov    ecx,DWORD PTR [eax+0x34]
1001d321:	test   ecx,ecx
1001d323:	je     0x1001d33c
1001d325:	mov    eax,DWORD PTR [ecx]
1001d327:	push   esi
1001d328:	push   ecx
1001d329:	call   DWORD PTR [eax+0x4c]
1001d32c:	test   eax,eax
1001d32e:	jl     0x1001d335
1001d330:	cmp    DWORD PTR [esi],0x0
1001d333:	jne    0x1001d350
1001d335:	mov    eax,0x80004002
1001d33a:	jmp    0x1001d350
1001d33c:	mov    ecx,DWORD PTR [eax+0x30]
1001d33f:	mov    DWORD PTR [esi],ecx
1001d341:	mov    eax,DWORD PTR [eax+0x30]
1001d344:	test   eax,eax
1001d346:	je     0x1001d34e
1001d348:	mov    ecx,DWORD PTR [eax]
1001d34a:	push   eax
1001d34b:	call   DWORD PTR [ecx+0x4]
1001d34e:	xor    eax,eax
1001d350:	pop    esi
1001d351:	ret    0x8
1001d354:	push   0x4
1001d356:	mov    eax,0x10060223
1001d35b:	call   0x10059a35
1001d360:	mov    eax,DWORD PTR [ebp+0x14]
1001d363:	xor    ebx,ebx
1001d365:	cmp    eax,ebx
1001d367:	jne    0x1001d373
1001d369:	mov    eax,0x80004003
1001d36e:	jmp    0x1001d418
1001d373:	mov    DWORD PTR [eax],ebx
1001d375:	mov    eax,DWORD PTR [ebp+0x8]
1001d378:	mov    edi,DWORD PTR [eax+0x34]
1001d37b:	cmp    edi,ebx
1001d37d:	mov    DWORD PTR [ebp-0x10],0x1
1001d384:	je     0x1001d415
1001d38a:	mov    DWORD PTR [ebp+0x8],ebx
1001d38d:	mov    DWORD PTR [ebp-0x4],ebx
1001d390:	push   DWORD PTR [ebp+0x10]
1001d393:	lea    esi,[ebp+0x10]
1001d396:	call   0x1001b380
1001d39b:	mov    BYTE PTR [ebp-0x4],0x1
1001d39f:	mov    eax,DWORD PTR [eax]
1001d3a1:	mov    ecx,DWORD PTR [edi]
1001d3a3:	lea    edx,[ebp+0x8]
1001d3a6:	push   edx
1001d3a7:	push   eax
1001d3a8:	push   DWORD PTR [ebp+0xc]
1001d3ab:	push   edi
1001d3ac:	call   DWORD PTR [ecx+0x50]
1001d3af:	mov    BYTE PTR [ebp-0x4],bl
1001d3b2:	push   DWORD PTR [ebp+0x10]
1001d3b5:	mov    esi,DWORD PTR ds:0x100662b4
1001d3bb:	mov    DWORD PTR [ebp-0x10],eax
1001d3be:	call   esi
1001d3c0:	cmp    DWORD PTR [ebp-0x10],ebx
1001d3c3:	jl     0x1001d409
1001d3c5:	push   DWORD PTR [ebp+0x8]
1001d3c8:	mov    edi,DWORD PTR ds:0x100662ac
1001d3ce:	call   edi
1001d3d0:	test   eax,eax
1001d3d2:	je     0x1001d409
1001d3d4:	push   DWORD PTR [ebp+0x8]
1001d3d7:	call   edi
1001d3d9:	lea    edi,[eax+eax*1+0x2]
1001d3dd:	push   edi
1001d3de:	call   DWORD PTR ds:0x10066428
1001d3e4:	cmp    eax,ebx
1001d3e6:	mov    ecx,DWORD PTR [ebp+0x14]
1001d3e9:	mov    DWORD PTR [ecx],eax
1001d3eb:	jne    0x1001d3f9
1001d3ed:	push   DWORD PTR [ebp+0x8]
1001d3f0:	call   esi
1001d3f2:	mov    eax,0x8007000e
1001d3f7:	jmp    0x1001d418
1001d3f9:	push   edi
1001d3fa:	push   DWORD PTR [ebp+0x8]
1001d3fd:	push   edi
1001d3fe:	push   eax
1001d3ff:	call   0x10014338
1001d404:	add    esp,0x10
1001d407:	jmp    0x1001d410
1001d409:	mov    DWORD PTR [ebp-0x10],0x1
1001d410:	push   DWORD PTR [ebp+0x8]
1001d413:	call   esi
1001d415:	mov    eax,DWORD PTR [ebp-0x10]
1001d418:	call   0x10059b0d
1001d41d:	ret    0x10
1001d420:	push   0x0
1001d422:	mov    eax,0x1005f5f7
1001d427:	call   0x10059a35
1001d42c:	mov    edi,DWORD PTR [ebp+0x10]
1001d42f:	xor    ecx,ecx
1001d431:	cmp    edi,ecx
1001d433:	jne    0x1001d43c
1001d435:	mov    eax,0x80004003
1001d43a:	jmp    0x1001d495
1001d43c:	mov    esi,DWORD PTR [ebp+0x8]
1001d43f:	xor    ebx,ebx
1001d441:	mov    DWORD PTR [edi],ecx
1001d443:	mov    eax,DWORD PTR [esi+0x34]
1001d446:	inc    ebx
1001d447:	cmp    eax,ecx
1001d449:	je     0x1001d493
1001d44b:	mov    DWORD PTR [ebp+0x10],ecx
1001d44e:	lea    edx,[ebp+0x10]
1001d451:	push   edx
1001d452:	push   DWORD PTR [ebp+0xc]
1001d455:	mov    DWORD PTR [ebp-0x4],ecx
1001d458:	mov    ecx,DWORD PTR [eax]
1001d45a:	push   eax
1001d45b:	call   DWORD PTR [ecx+0x54]
1001d45e:	cmp    DWORD PTR [ebp+0x10],0x0
1001d462:	mov    ebx,eax
1001d464:	je     0x1001d476
1001d466:	push   edi
1001d467:	lea    eax,[esi-0x24]
1001d46a:	mov    ecx,DWORD PTR [eax]
1001d46c:	push   0x100709e0
1001d471:	push   eax
1001d472:	call   DWORD PTR [ecx]
1001d474:	mov    ebx,eax
1001d476:	test   ebx,ebx
1001d478:	jl     0x1001d47f
1001d47a:	cmp    DWORD PTR [edi],0x0
1001d47d:	jne    0x1001d482
1001d47f:	xor    ebx,ebx
1001d481:	inc    ebx
1001d482:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d486:	mov    eax,DWORD PTR [ebp+0x10]
1001d489:	test   eax,eax
1001d48b:	je     0x1001d493
1001d48d:	mov    ecx,DWORD PTR [eax]
1001d48f:	push   eax
1001d490:	call   DWORD PTR [ecx+0x8]
1001d493:	mov    eax,ebx
1001d495:	call   0x10059b0d
1001d49a:	ret    0xc
1001d49d:	push   0x0
1001d49f:	mov    eax,0x1005f61a
1001d4a4:	call   0x10059a35
1001d4a9:	mov    eax,DWORD PTR [ebp+0x8]
1001d4ac:	mov    eax,DWORD PTR [eax+0x60]
1001d4af:	xor    ecx,ecx
1001d4b1:	xor    esi,esi
1001d4b3:	test   eax,eax
1001d4b5:	mov    DWORD PTR [ebp+0x8],ecx
1001d4b8:	je     0x1001d4cb
1001d4ba:	mov    ecx,DWORD PTR [eax]
1001d4bc:	lea    edx,[ebp+0x8]
1001d4bf:	push   edx
1001d4c0:	push   0x100709f0
1001d4c5:	push   eax
1001d4c6:	call   DWORD PTR [ecx]
1001d4c8:	mov    ecx,DWORD PTR [ebp+0x8]
1001d4cb:	and    DWORD PTR [ebp-0x4],0x0
1001d4cf:	test   ecx,ecx
1001d4d1:	je     0x1001d4e1
1001d4d3:	push   DWORD PTR [ebp+0xc]
1001d4d6:	mov    eax,DWORD PTR [ecx]
1001d4d8:	push   ecx
1001d4d9:	call   DWORD PTR [eax+0x14]
1001d4dc:	mov    ecx,DWORD PTR [ebp+0x8]
1001d4df:	mov    esi,eax
1001d4e1:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d4e5:	test   ecx,ecx
1001d4e7:	je     0x1001d4ef
1001d4e9:	mov    eax,DWORD PTR [ecx]
1001d4eb:	push   ecx
1001d4ec:	call   DWORD PTR [eax+0x8]
1001d4ef:	mov    eax,esi
1001d4f1:	call   0x10059b0d
1001d4f6:	ret    0x8
1001d4f9:	push   ebp
1001d4fa:	mov    ebp,esp
1001d4fc:	push   esi
1001d4fd:	push   DWORD PTR [ebp+0x28]
1001d500:	mov    esi,DWORD PTR [ebp+0x8]
1001d503:	push   DWORD PTR [ebp+0x24]
1001d506:	push   DWORD PTR [ebp+0x20]
1001d509:	push   DWORD PTR [ebp+0x1c]
1001d50c:	push   DWORD PTR [ebp+0x18]
1001d50f:	push   DWORD PTR [ebp+0x14]
1001d512:	push   DWORD PTR [ebp+0x10]
1001d515:	push   DWORD PTR [ebp+0xc]
1001d518:	push   esi
1001d519:	call   0x1001ff21
1001d51e:	cmp    eax,0x80020003
1001d523:	je     0x1001d52c
1001d525:	cmp    eax,0x8002802b
1001d52a:	jne    0x1001d567
1001d52c:	mov    ecx,DWORD PTR [esi+0x8]
1001d52f:	test   ecx,ecx
1001d531:	je     0x1001d567
1001d533:	push   DWORD PTR [ebp+0x28]
1001d536:	mov    eax,DWORD PTR [ecx]
1001d538:	push   DWORD PTR [ebp+0x24]
1001d53b:	push   DWORD PTR [ebp+0x20]
1001d53e:	push   DWORD PTR [ebp+0x1c]
1001d541:	push   DWORD PTR [ebp+0x18]
1001d544:	push   DWORD PTR [ebp+0x14]
1001d547:	push   DWORD PTR [ebp+0x10]
1001d54a:	push   DWORD PTR [ebp+0xc]
1001d54d:	push   ecx
1001d54e:	call   DWORD PTR [eax+0x18]
1001d551:	test   eax,eax
1001d553:	jl     0x1001d567
1001d555:	test   BYTE PTR [ebp+0x18],0x4
1001d559:	je     0x1001d567
1001d55b:	push   DWORD PTR [ebp+0xc]
1001d55e:	add    esi,0xffffffb4
1001d561:	push   esi
1001d562:	call   0x1001d49d
1001d567:	pop    esi
1001d568:	pop    ebp
1001d569:	ret    0x24
1001d56c:	mov    eax,DWORD PTR [esp+0x4]
1001d570:	mov    ecx,DWORD PTR [esp+0x8]
1001d574:	xor    ecx,DWORD PTR [eax+0x7c]
1001d577:	and    ecx,0x1
1001d57a:	xor    DWORD PTR [eax+0x7c],ecx
1001d57d:	xor    eax,eax
1001d57f:	ret    0x8
1001d582:	mov    eax,DWORD PTR [esp+0x8]
1001d586:	test   eax,eax
1001d588:	jne    0x1001d591
1001d58a:	mov    eax,0x80004003
1001d58f:	jmp    0x1001d5a4
1001d591:	mov    ecx,DWORD PTR [esp+0x4]
1001d595:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d598:	and    cl,0x1
1001d59b:	neg    cl
1001d59d:	sbb    ecx,ecx
1001d59f:	mov    WORD PTR [eax],cx
1001d5a2:	xor    eax,eax
1001d5a4:	ret    0x8
1001d5a7:	mov    eax,DWORD PTR [esp+0x8]
1001d5ab:	push   esi
1001d5ac:	mov    esi,DWORD PTR [esp+0x8]
1001d5b0:	mov    DWORD PTR [esi+0x80],eax
1001d5b6:	push   0xfffffd43
1001d5bb:	lea    eax,[esi-0x4c]
1001d5be:	push   eax
1001d5bf:	call   0x1001d49d
1001d5c4:	push   0x0
1001d5c6:	lea    eax,[esi-0x20]
1001d5c9:	mov    ecx,DWORD PTR [eax]
1001d5cb:	push   0x0
1001d5cd:	push   eax
1001d5ce:	call   DWORD PTR [ecx+0x64]
1001d5d1:	xor    eax,eax
1001d5d3:	pop    esi
1001d5d4:	ret    0x8
1001d5d7:	mov    eax,DWORD PTR [esp+0x8]
1001d5db:	test   eax,eax
1001d5dd:	jne    0x1001d5e6
1001d5df:	mov    eax,0x80004003
1001d5e4:	jmp    0x1001d5f4
1001d5e6:	mov    ecx,DWORD PTR [esp+0x4]
1001d5ea:	mov    ecx,DWORD PTR [ecx+0x80]
1001d5f0:	mov    DWORD PTR [eax],ecx
1001d5f2:	xor    eax,eax
1001d5f4:	ret    0x8
1001d5f7:	mov    eax,DWORD PTR [esp+0x4]
1001d5fb:	mov    ecx,DWORD PTR [esp+0x8]
1001d5ff:	mov    DWORD PTR [eax+0x84],ecx
1001d605:	push   0xfffffd40
1001d60a:	add    eax,0xffffffb4
1001d60d:	push   eax
1001d60e:	call   0x1001d49d
1001d613:	xor    eax,eax
1001d615:	ret    0x8
1001d618:	mov    eax,DWORD PTR [esp+0x8]
1001d61c:	test   eax,eax
1001d61e:	jne    0x1001d627
1001d620:	mov    eax,0x80004003
1001d625:	jmp    0x1001d635
1001d627:	mov    ecx,DWORD PTR [esp+0x4]
1001d62b:	mov    ecx,DWORD PTR [ecx+0x84]
1001d631:	mov    DWORD PTR [eax],ecx
1001d633:	xor    eax,eax
1001d635:	ret    0x8
1001d638:	mov    eax,DWORD PTR [esp+0x4]
1001d63c:	mov    ecx,DWORD PTR [esp+0x8]
1001d640:	mov    DWORD PTR [eax+0x88],ecx
1001d646:	push   0xfffffd3f
1001d64b:	add    eax,0xffffffb4
1001d64e:	push   eax
1001d64f:	call   0x1001d49d
1001d654:	xor    eax,eax
1001d656:	ret    0x8
1001d659:	mov    eax,DWORD PTR [esp+0x8]
1001d65d:	test   eax,eax
1001d65f:	jne    0x1001d668
1001d661:	mov    eax,0x80004003
1001d666:	jmp    0x1001d676
1001d668:	mov    ecx,DWORD PTR [esp+0x4]
1001d66c:	mov    ecx,DWORD PTR [ecx+0x88]
1001d672:	mov    DWORD PTR [eax],ecx
1001d674:	xor    eax,eax
1001d676:	ret    0x8
1001d679:	movsx  ecx,WORD PTR [esp+0x8]
1001d67e:	mov    eax,DWORD PTR [esp+0x4]
1001d682:	add    ecx,ecx
1001d684:	xor    ecx,DWORD PTR [eax+0x7c]
1001d687:	push   0xfffffd3b
1001d68c:	and    ecx,0x2
1001d68f:	xor    DWORD PTR [eax+0x7c],ecx
1001d692:	add    eax,0xffffffb4
1001d695:	push   eax
1001d696:	call   0x1001d49d
1001d69b:	xor    eax,eax
1001d69d:	ret    0x8
1001d6a0:	mov    eax,DWORD PTR [esp+0x8]
1001d6a4:	test   eax,eax
1001d6a6:	jne    0x1001d6af
1001d6a8:	mov    eax,0x80004003
1001d6ad:	jmp    0x1001d6c2
1001d6af:	mov    ecx,DWORD PTR [esp+0x4]
1001d6b3:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d6b6:	and    cl,0x2
1001d6b9:	neg    cl
1001d6bb:	sbb    ecx,ecx
1001d6bd:	mov    WORD PTR [eax],cx
1001d6c0:	xor    eax,eax
1001d6c2:	ret    0x8
1001d6c5:	movsx  ecx,WORD PTR [esp+0x8]
1001d6ca:	mov    eax,DWORD PTR [esp+0x4]
1001d6ce:	shl    ecx,0x2
1001d6d1:	xor    ecx,DWORD PTR [eax+0x7c]
1001d6d4:	push   0xfffffd37
1001d6d9:	and    ecx,0x4
1001d6dc:	xor    DWORD PTR [eax+0x7c],ecx
1001d6df:	add    eax,0xffffffb4
1001d6e2:	push   eax
1001d6e3:	call   0x1001d49d
1001d6e8:	xor    eax,eax
1001d6ea:	ret    0x8
1001d6ed:	mov    eax,DWORD PTR [esp+0x8]
1001d6f1:	test   eax,eax
1001d6f3:	jne    0x1001d6fc
1001d6f5:	mov    eax,0x80004003
1001d6fa:	jmp    0x1001d70f
1001d6fc:	mov    ecx,DWORD PTR [esp+0x4]
1001d700:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d703:	and    cl,0x4
1001d706:	neg    cl
1001d708:	sbb    ecx,ecx
1001d70a:	mov    WORD PTR [eax],cx
1001d70d:	xor    eax,eax
1001d70f:	ret    0x8
1001d712:	push   ebx
1001d713:	mov    ebx,DWORD PTR [esp+0x8]
1001d717:	push   esi
1001d718:	push   edi
1001d719:	mov    edi,DWORD PTR [esp+0x14]
1001d71d:	lea    esi,[ebx+0x8c]
1001d723:	cmp    DWORD PTR [esi],edi
1001d725:	je     0x1001d72c
1001d727:	call   0x1000763b
1001d72c:	push   0xfffffd41
1001d731:	add    ebx,0xffffffb4
1001d734:	push   ebx
1001d735:	call   0x1001d49d
1001d73a:	pop    edi
1001d73b:	pop    esi
1001d73c:	xor    eax,eax
1001d73e:	pop    ebx
1001d73f:	ret    0x8
1001d742:	push   ebp
1001d743:	lea    ebp,[esp-0x70]
1001d747:	sub    esp,0x8c
1001d74d:	mov    eax,ds:0x1007e030
1001d752:	xor    eax,ebp
1001d754:	mov    DWORD PTR [ebp+0x6c],eax
1001d757:	mov    eax,DWORD PTR [ebp+0x7c]
1001d75a:	test   eax,eax
1001d75c:	push   ebx
1001d75d:	mov    ebx,DWORD PTR [ebp+0x78]
1001d760:	mov    DWORD PTR [ebp+0x4],eax
1001d763:	jne    0x1001d76f
1001d765:	mov    eax,0x80004003
1001d76a:	jmp    0x1001d885
1001d76f:	and    DWORD PTR [eax],0x0
1001d772:	push   esi
1001d773:	lea    esi,[ebx+0x8c]
1001d779:	cmp    DWORD PTR [esi],0x0
1001d77c:	push   edi
1001d77d:	jne    0x1001d871
1001d783:	call   DWORD PTR ds:0x1007efec
1001d789:	mov    edi,DWORD PTR ds:0x10066028
1001d78f:	push   0x11
1001d791:	call   edi
1001d793:	test   eax,eax
1001d795:	jne    0x1001d7a3
1001d797:	push   0xd
1001d799:	call   edi
1001d79b:	test   eax,eax
1001d79d:	je     0x1001d82d
1001d7a3:	lea    ecx,[ebp+0x10]
1001d7a6:	push   ecx
1001d7a7:	push   0x5c
1001d7a9:	push   eax
1001d7aa:	call   DWORD PTR ds:0x10066030
1001d7b0:	lea    eax,[ebp+0x2c]
1001d7b3:	mov    DWORD PTR [ebp-0x18],eax
1001d7b6:	mov    ax,WORD PTR [ebp+0x20]
1001d7ba:	mov    WORD PTR [ebp-0xc],ax
1001d7be:	movzx  ax,BYTE PTR [ebp+0x27]
1001d7c3:	mov    WORD PTR [ebp-0xa],ax
1001d7c7:	movzx  eax,BYTE PTR [ebp+0x24]
1001d7cb:	mov    DWORD PTR [ebp-0x8],eax
1001d7ce:	movzx  eax,BYTE PTR [ebp+0x25]
1001d7d2:	mov    DWORD PTR [ebp-0x4],eax
1001d7d5:	movzx  eax,BYTE PTR [ebp+0x26]
1001d7d9:	mov    DWORD PTR [ebp+0x0],eax
1001d7dc:	mov    eax,DWORD PTR [ebp+0x10]
1001d7df:	test   eax,eax
1001d7e1:	mov    DWORD PTR [ebp-0x1c],0x20
1001d7e8:	mov    DWORD PTR [ebp+0x8],eax
1001d7eb:	jge    0x1001d7f2
1001d7ed:	neg    eax
1001d7ef:	mov    DWORD PTR [ebp+0x8],eax
1001d7f2:	mov    eax,DWORD PTR [ebx-0x48]
1001d7f5:	test   eax,eax
1001d7f7:	je     0x1001d818
1001d7f9:	push   eax
1001d7fa:	call   DWORD PTR ds:0x100662c0
1001d800:	mov    edi,eax
1001d802:	test   edi,edi
1001d804:	je     0x1001d82d
1001d806:	push   0x5a
1001d808:	push   edi
1001d809:	call   DWORD PTR ds:0x10066040
1001d80f:	push   edi
1001d810:	push   DWORD PTR [ebx-0x48]
1001d813:	mov    DWORD PTR [ebp+0xc],eax
1001d816:	jmp    0x1001d844
1001d818:	mov    edi,DWORD PTR ds:0x100662d8
1001d81e:	call   edi
1001d820:	push   eax
1001d821:	call   DWORD PTR ds:0x100662c0
1001d827:	mov    ebx,eax
1001d829:	test   ebx,ebx
1001d82b:	jne    0x1001d834
1001d82d:	call   0x100066ab
1001d832:	jmp    0x1001d883
1001d834:	push   0x5a
1001d836:	push   ebx
1001d837:	call   DWORD PTR ds:0x10066040
1001d83d:	push   ebx
1001d83e:	mov    DWORD PTR [ebp+0xc],eax
1001d841:	call   edi
1001d843:	push   eax
1001d844:	call   DWORD PTR ds:0x10066350
1001d84a:	mov    eax,DWORD PTR [ebp+0x8]
1001d84d:	imul   eax,eax,0xafc80
1001d853:	cdq    
1001d854:	idiv   DWORD PTR [ebp+0xc]
1001d857:	and    DWORD PTR [ebp-0x10],0x0
1001d85b:	push   esi
1001d85c:	push   0x10070a00
1001d861:	mov    DWORD PTR [ebp-0x14],eax
1001d864:	lea    eax,[ebp-0x1c]
1001d867:	push   eax
1001d868:	call   DWORD PTR ds:0x10066288
1001d86e:	mov    eax,DWORD PTR [ebp+0x4]
1001d871:	mov    ecx,DWORD PTR [esi]
1001d873:	mov    DWORD PTR [eax],ecx
1001d875:	mov    esi,DWORD PTR [esi]
1001d877:	test   esi,esi
1001d879:	je     0x1001d881
1001d87b:	mov    eax,DWORD PTR [esi]
1001d87d:	push   esi
1001d87e:	call   DWORD PTR [eax+0x4]
1001d881:	xor    eax,eax
1001d883:	pop    edi
1001d884:	pop    esi
1001d885:	mov    ecx,DWORD PTR [ebp+0x6c]
1001d888:	xor    ecx,ebp
1001d88a:	pop    ebx
1001d88b:	call   0x10042e97
1001d890:	add    ebp,0x70
1001d893:	leave  
1001d894:	ret    0x8
1001d897:	movsx  ecx,WORD PTR [esp+0x8]
1001d89c:	mov    eax,DWORD PTR [esp+0x4]
1001d8a0:	shl    ecx,0x3
1001d8a3:	xor    ecx,DWORD PTR [eax+0x7c]
1001d8a6:	push   0xfffffd3e
1001d8ab:	and    ecx,0x8
1001d8ae:	xor    DWORD PTR [eax+0x7c],ecx
1001d8b1:	add    eax,0xffffffb4
1001d8b4:	push   eax
1001d8b5:	call   0x1001d49d
1001d8ba:	xor    eax,eax
1001d8bc:	ret    0x8
1001d8bf:	mov    eax,DWORD PTR [esp+0x8]
1001d8c3:	test   eax,eax
1001d8c5:	jne    0x1001d8ce
1001d8c7:	mov    eax,0x80004003
1001d8cc:	jmp    0x1001d8e1
1001d8ce:	mov    ecx,DWORD PTR [esp+0x4]
1001d8d2:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d8d5:	and    cl,0x8
1001d8d8:	neg    cl
1001d8da:	sbb    ecx,ecx
1001d8dc:	mov    WORD PTR [eax],cx
1001d8df:	xor    eax,eax
1001d8e1:	ret    0x8
1001d8e4:	mov    eax,DWORD PTR [esp+0x8]
1001d8e8:	and    WORD PTR [eax],0x0
1001d8ec:	xor    eax,eax
1001d8ee:	ret    0x8
1001d8f1:	mov    eax,DWORD PTR [esp+0x8]
1001d8f5:	test   eax,eax
1001d8f7:	jne    0x1001d900
1001d8f9:	mov    eax,0x80004003
1001d8fe:	jmp    0x1001d906
1001d900:	and    WORD PTR [eax],0x0
1001d904:	xor    eax,eax
1001d906:	ret    0x8
1001d909:	mov    eax,DWORD PTR [esp+0x4]
1001d90d:	mov    ecx,DWORD PTR [esp+0x8]
1001d911:	mov    DWORD PTR [eax+0x94],ecx
1001d917:	push   0xffffffff
1001d919:	add    eax,0xffffffb4
1001d91c:	push   eax
1001d91d:	call   0x1001d49d
1001d922:	xor    eax,eax
1001d924:	ret    0x8
1001d927:	mov    eax,DWORD PTR [esp+0x8]
1001d92b:	test   eax,eax
1001d92d:	jne    0x1001d936
1001d92f:	mov    eax,0x80004003
1001d934:	jmp    0x1001d944
1001d936:	mov    ecx,DWORD PTR [esp+0x4]
1001d93a:	mov    ecx,DWORD PTR [ecx+0x94]
1001d940:	mov    DWORD PTR [eax],ecx
1001d942:	xor    eax,eax
1001d944:	ret    0x8
1001d947:	mov    eax,DWORD PTR [esp+0x4]
1001d94b:	mov    ecx,DWORD PTR [esp+0x8]
1001d94f:	mov    DWORD PTR [eax+0x98],ecx
1001d955:	xor    eax,eax
1001d957:	ret    0x8
1001d95a:	mov    eax,DWORD PTR [esp+0x8]
1001d95e:	test   eax,eax
1001d960:	jne    0x1001d969
1001d962:	mov    eax,0x80004003
1001d967:	jmp    0x1001d977
1001d969:	mov    ecx,DWORD PTR [esp+0x4]
1001d96d:	mov    ecx,DWORD PTR [ecx+0x98]
1001d973:	mov    DWORD PTR [eax],ecx
1001d975:	xor    eax,eax
1001d977:	ret    0x8
1001d97a:	movsx  ecx,WORD PTR [esp+0x8]
1001d97f:	mov    eax,DWORD PTR [esp+0x4]
1001d983:	shl    ecx,0x5
1001d986:	xor    ecx,DWORD PTR [eax+0x7c]
1001d989:	and    ecx,0x20
1001d98c:	xor    DWORD PTR [eax+0x7c],ecx
1001d98f:	xor    eax,eax
1001d991:	ret    0x8
1001d994:	mov    eax,DWORD PTR [esp+0x8]
1001d998:	test   eax,eax
1001d99a:	jne    0x1001d9a3
1001d99c:	mov    eax,0x80004003
1001d9a1:	jmp    0x1001d9b6
1001d9a3:	mov    ecx,DWORD PTR [esp+0x4]
1001d9a7:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d9aa:	and    cl,0x20
1001d9ad:	neg    cl
1001d9af:	sbb    ecx,ecx
1001d9b1:	mov    WORD PTR [eax],cx
1001d9b4:	xor    eax,eax
1001d9b6:	ret    0x8
1001d9b9:	movsx  ecx,WORD PTR [esp+0x8]
1001d9be:	mov    eax,DWORD PTR [esp+0x4]
1001d9c2:	shl    ecx,0x6
1001d9c5:	xor    ecx,DWORD PTR [eax+0x7c]
1001d9c8:	and    ecx,0x40
1001d9cb:	xor    DWORD PTR [eax+0x7c],ecx
1001d9ce:	xor    eax,eax
1001d9d0:	ret    0x8
1001d9d3:	mov    eax,DWORD PTR [esp+0x8]
1001d9d7:	test   eax,eax
1001d9d9:	jne    0x1001d9e2
1001d9db:	mov    eax,0x80004003
1001d9e0:	jmp    0x1001d9f5
1001d9e2:	mov    ecx,DWORD PTR [esp+0x4]
1001d9e6:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d9e9:	and    cl,0x40
1001d9ec:	neg    cl
1001d9ee:	sbb    ecx,ecx
1001d9f0:	mov    WORD PTR [eax],cx
1001d9f3:	xor    eax,eax
1001d9f5:	ret    0x8
1001d9f8:	push   esi
1001d9f9:	mov    esi,DWORD PTR [esp+0x8]
1001d9fd:	mov    eax,DWORD PTR [esi+0x9c]
1001da03:	cmp    DWORD PTR [esp+0xc],eax
1001da07:	je     0x1001da3c
1001da09:	push   eax
1001da0a:	call   DWORD PTR ds:0x100662b4
1001da10:	cmp    DWORD PTR [esp+0xc],0x0
1001da15:	je     0x1001da35
1001da17:	push   DWORD PTR [esp+0xc]
1001da1b:	call   DWORD PTR ds:0x100662b0
1001da21:	test   eax,eax
1001da23:	mov    DWORD PTR [esi+0x9c],eax
1001da29:	jne    0x1001da3c
1001da2b:	push   0x8007000e
1001da30:	call   0x10001f45
1001da35:	and    DWORD PTR [esi+0x9c],0x0
1001da3c:	xor    eax,eax
1001da3e:	pop    esi
1001da3f:	ret    0x8
1001da42:	mov    eax,DWORD PTR [esp+0x8]
1001da46:	test   eax,eax
1001da48:	jne    0x1001da51
1001da4a:	mov    eax,0x80004003
1001da4f:	jmp    0x1001da5f
1001da51:	mov    ecx,DWORD PTR [esp+0x4]
1001da55:	mov    ecx,DWORD PTR [ecx+0x9c]
1001da5b:	mov    DWORD PTR [eax],ecx
1001da5d:	xor    eax,eax
1001da5f:	ret    0x8
1001da62:	push   esi
1001da63:	mov    esi,DWORD PTR [esp+0x8]
1001da67:	push   edi
1001da68:	mov    edi,DWORD PTR [esp+0x10]
1001da6c:	add    esi,0x8
1001da6f:	cmp    DWORD PTR [esi],edi
1001da71:	je     0x1001da78
1001da73:	call   0x1000763b
1001da78:	pop    edi
1001da79:	xor    eax,eax
1001da7b:	pop    esi
1001da7c:	ret    0x8
1001da7f:	push   esi
1001da80:	mov    esi,DWORD PTR [esp+0x8]
1001da84:	push   edi
1001da85:	push   DWORD PTR [esp+0x10]
1001da89:	push   esi
1001da8a:	call   0x1001fe97
1001da8f:	mov    edi,eax
1001da91:	test   edi,edi
1001da93:	jl     0x1001daaf
1001da95:	mov    eax,DWORD PTR [esi+0x4]
1001da98:	test   eax,eax
1001da9a:	je     0x1001daaf
1001da9c:	mov    ecx,DWORD PTR [eax]
1001da9e:	lea    edx,[esi+0xa4]
1001daa4:	push   edx
1001daa5:	push   0x100702a4
1001daaa:	push   eax
1001daab:	call   DWORD PTR [ecx]
1001daad:	mov    edi,eax
1001daaf:	cmp    DWORD PTR [esp+0x10],0x0
1001dab4:	jne    0x1001dacb
1001dab6:	lea    eax,[esi+0xa4]
1001dabc:	mov    ecx,DWORD PTR [eax]
1001dabe:	test   ecx,ecx
1001dac0:	je     0x1001dacb
1001dac2:	and    DWORD PTR [eax],0x0
1001dac5:	mov    eax,DWORD PTR [ecx]
1001dac7:	push   ecx
1001dac8:	call   DWORD PTR [eax+0x8]
1001dacb:	mov    eax,edi
1001dacd:	pop    edi
1001dace:	pop    esi
1001dacf:	ret    0x8
1001dad2:	push   edi
1001dad3:	mov    edi,DWORD PTR [esp+0xc]
1001dad7:	test   edi,edi
1001dad9:	mov    eax,0x80004003
1001dade:	je     0x1001db0c
1001dae0:	and    DWORD PTR [edi],0x0
1001dae3:	push   ebx
1001dae4:	mov    ebx,DWORD PTR [esp+0xc]
1001dae8:	mov    eax,DWORD PTR [ebx+0x14]
1001daeb:	test   eax,eax
1001daed:	push   esi
1001daee:	mov    esi,0x100702c4
1001daf3:	je     0x1001db00
1001daf5:	mov    ecx,DWORD PTR [eax]
1001daf7:	push   edi
1001daf8:	push   esi
1001daf9:	push   eax
1001dafa:	call   DWORD PTR [ecx]
1001dafc:	test   eax,eax
1001dafe:	jge    0x1001db0a
1001db00:	push   edi
1001db01:	lea    eax,[ebx-0x4]
1001db04:	mov    ecx,DWORD PTR [eax]
1001db06:	push   esi
1001db07:	push   eax
1001db08:	call   DWORD PTR [ecx]
1001db0a:	pop    esi
1001db0b:	pop    ebx
1001db0c:	pop    edi
1001db0d:	ret    0x8
1001db10:	push   esi
1001db11:	mov    esi,DWORD PTR [esp+0x8]
1001db15:	push   edi
1001db16:	push   DWORD PTR [esi-0x24]
1001db19:	call   DWORD PTR ds:0x100662c0
1001db1f:	mov    edi,eax
1001db21:	xor    edx,edx
1001db23:	cmp    edi,edx
1001db25:	jne    0x1001db2e
1001db27:	mov    eax,0x80004005
1001db2c:	jmp    0x1001db5b
1001db2e:	mov    eax,DWORD PTR [esi+0x48]
1001db31:	cmp    eax,edx
1001db33:	je     0x1001db4f
1001db35:	push   ebx
1001db36:	mov    ebx,DWORD PTR [eax]
1001db38:	push   edx
1001db39:	push   edx
1001db3a:	lea    ecx,[esi+0x8c]
1001db40:	push   ecx
1001db41:	push   ecx
1001db42:	push   edi
1001db43:	push   edx
1001db44:	push   edx
1001db45:	push   edx
1001db46:	push   0xffffffff
1001db48:	push   0x1
1001db4a:	push   eax
1001db4b:	call   DWORD PTR [ebx+0xc]
1001db4e:	pop    ebx
1001db4f:	push   edi
1001db50:	push   DWORD PTR [esi-0x24]
1001db53:	call   DWORD PTR ds:0x10066350
1001db59:	xor    eax,eax
1001db5b:	pop    edi
1001db5c:	pop    esi
1001db5d:	ret    0x4
1001db60:	mov    eax,DWORD PTR [esp+0x4]
1001db64:	mov    eax,DWORD PTR [eax-0x28]
1001db67:	mov    ecx,DWORD PTR [esp+0x8]
1001db6b:	mov    DWORD PTR [ecx],eax
1001db6d:	xor    eax,eax
1001db6f:	ret    0x8
1001db72:	push   esi
1001db73:	mov    esi,DWORD PTR [esp+0x8]
1001db77:	or     DWORD PTR [esi+0x6c],0x1
1001db7b:	push   0x0
1001db7d:	push   0x1
1001db7f:	push   DWORD PTR [esi+0x38]
1001db82:	call   DWORD PTR ds:0x10066448
1001db88:	mov    eax,DWORD PTR [esi+0x38]
1001db8b:	and    DWORD PTR [esi+0x6c],0xfffffff7
1001db8f:	mov    ecx,DWORD PTR [eax]
1001db91:	add    esi,0x48
1001db94:	push   esi
1001db95:	push   0x10070a10
1001db9a:	push   eax
1001db9b:	call   DWORD PTR [ecx]
1001db9d:	xor    eax,eax
1001db9f:	pop    esi
1001dba0:	ret    0x4
1001dba3:	mov    eax,DWORD PTR [esp+0x4]
1001dba7:	or     DWORD PTR [eax+0x6c],0x2
1001dbab:	xor    eax,eax
1001dbad:	ret    0x4
1001dbb0:	push   ebp
1001dbb1:	mov    ebp,esp
1001dbb3:	push   ecx
1001dbb4:	push   ecx
1001dbb5:	mov    edx,DWORD PTR [ebp+0xc]
1001dbb8:	xor    eax,eax
1001dbba:	cmp    edx,eax
1001dbbc:	je     0x1001dbc0
1001dbbe:	mov    DWORD PTR [edx],eax
1001dbc0:	mov    ecx,DWORD PTR [ebp+0x10]
1001dbc3:	cmp    ecx,eax
1001dbc5:	je     0x1001dbc9
1001dbc7:	mov    DWORD PTR [ecx],eax
1001dbc9:	cmp    edx,eax
1001dbcb:	je     0x1001dcd6
1001dbd1:	cmp    ecx,eax
1001dbd3:	je     0x1001dcd6
1001dbd9:	cmp    DWORD PTR [ebp+0x14],eax
1001dbdc:	je     0x1001dcd6
1001dbe2:	cmp    DWORD PTR [ebp+0x18],eax
1001dbe5:	je     0x1001dcd6
1001dbeb:	push   ebx
1001dbec:	push   esi
1001dbed:	mov    esi,DWORD PTR [ebp+0x8]
1001dbf0:	lea    ebx,[esi+0x3c]
1001dbf3:	cmp    DWORD PTR [ebx],eax
1001dbf5:	push   edi
1001dbf6:	jne    0x1001dc12
1001dbf8:	lea    eax,[ebp+0x8]
1001dbfb:	push   eax
1001dbfc:	call   0x10021d80
1001dc01:	mov    eax,DWORD PTR [ebp+0x8]
1001dc04:	push   ebx
1001dc05:	add    eax,0x24
1001dc08:	mov    ecx,DWORD PTR [eax]
1001dc0a:	push   0x10070364
1001dc0f:	push   eax
1001dc10:	call   DWORD PTR [ecx]
1001dc12:	lea    edi,[esi+0x40]
1001dc15:	cmp    DWORD PTR [edi],0x0
1001dc18:	jne    0x1001dc34
1001dc1a:	lea    eax,[ebp+0x8]
1001dc1d:	push   eax
1001dc1e:	call   0x10021e0f
1001dc23:	mov    eax,DWORD PTR [ebp+0x8]
1001dc26:	push   edi
1001dc27:	add    eax,0x24
1001dc2a:	mov    ecx,DWORD PTR [eax]
1001dc2c:	push   0x10070354
1001dc31:	push   eax
1001dc32:	call   DWORD PTR [ecx]
1001dc34:	mov    eax,DWORD PTR [ebx]
1001dc36:	mov    ecx,DWORD PTR [ebp+0xc]
1001dc39:	mov    DWORD PTR [ecx],eax
1001dc3b:	mov    ebx,DWORD PTR [ebx]
1001dc3d:	test   ebx,ebx
1001dc3f:	je     0x1001dc47
1001dc41:	mov    eax,DWORD PTR [ebx]
1001dc43:	push   ebx
1001dc44:	call   DWORD PTR [eax+0x4]
1001dc47:	mov    eax,DWORD PTR [edi]
1001dc49:	mov    ecx,DWORD PTR [ebp+0x10]
1001dc4c:	mov    DWORD PTR [ecx],eax
1001dc4e:	mov    edi,DWORD PTR [edi]
1001dc50:	test   edi,edi
1001dc52:	je     0x1001dc5a
1001dc54:	mov    eax,DWORD PTR [edi]
1001dc56:	push   edi
1001dc57:	call   DWORD PTR [eax+0x4]
1001dc5a:	push   DWORD PTR [ebp+0x14]
1001dc5d:	mov    edi,DWORD PTR ds:0x100662d4
1001dc63:	push   DWORD PTR [esi-0x28]
1001dc66:	call   edi
1001dc68:	push   DWORD PTR [ebp+0x18]
1001dc6b:	push   DWORD PTR [esi-0x28]
1001dc6e:	call   edi
1001dc70:	xor    ebx,ebx
1001dc72:	cmp    DWORD PTR [esi+0x98],ebx
1001dc78:	jne    0x1001dc97
1001dc7a:	push   0x1
1001dc7c:	lea    eax,[ebp-0x8]
1001dc7f:	push   eax
1001dc80:	mov    BYTE PTR [ebp-0x8],bl
1001dc83:	mov    WORD PTR [ebp-0x6],bx
1001dc87:	mov    WORD PTR [ebp-0x4],bx
1001dc8b:	call   DWORD PTR ds:0x100662d0
1001dc91:	mov    DWORD PTR [esi+0x98],eax
1001dc97:	mov    edi,DWORD PTR [ebp+0x1c]
1001dc9a:	mov    DWORD PTR [edi],0x14
1001dca0:	mov    eax,DWORD PTR [esi+0x6c]
1001dca3:	shr    eax,0x2
1001dca6:	and    eax,0x1
1001dca9:	mov    DWORD PTR [edi+0x4],eax
1001dcac:	push   DWORD PTR [esi-0x28]
1001dcaf:	call   DWORD PTR ds:0x100662e0
1001dcb5:	mov    DWORD PTR [edi+0x8],eax
1001dcb8:	mov    eax,DWORD PTR [esi+0x98]
1001dcbe:	mov    DWORD PTR [edi+0xc],eax
1001dcc1:	xor    eax,eax
1001dcc3:	cmp    DWORD PTR [esi+0x98],ebx
1001dcc9:	setne  al
1001dccc:	mov    DWORD PTR [edi+0x10],eax
1001dccf:	pop    edi
1001dcd0:	pop    esi
1001dcd1:	xor    eax,eax
1001dcd3:	pop    ebx
1001dcd4:	jmp    0x1001dcdb
1001dcd6:	mov    eax,0x80004003
1001dcdb:	leave  
1001dcdc:	ret    0x18
1001dcdf:	mov    eax,0x80004001
1001dce4:	ret    0xc
1001dce7:	mov    eax,DWORD PTR [esp+0x4]
1001dceb:	and    DWORD PTR [eax+0x6c],0xfffffffd
1001dcef:	xor    eax,eax
1001dcf1:	ret    0x8
1001dcf4:	mov    eax,DWORD PTR [esp+0x4]
1001dcf8:	and    DWORD PTR [eax+0x6c],0xfffffffe
1001dcfc:	mov    ecx,DWORD PTR [eax+0x48]
1001dcff:	test   ecx,ecx
1001dd01:	je     0x1001dd0d
1001dd03:	and    DWORD PTR [eax+0x48],0x0
1001dd07:	mov    eax,DWORD PTR [ecx]
1001dd09:	push   ecx
1001dd0a:	call   DWORD PTR [eax+0x8]
1001dd0d:	xor    eax,eax
1001dd0f:	ret    0x4
1001dd12:	mov    eax,0x80004001
1001dd17:	ret    0x4
1001dd1a:	push   ebp
1001dd1b:	mov    ebp,esp
1001dd1d:	sub    esp,0x10
1001dd20:	push   esi
1001dd21:	mov    esi,DWORD PTR [ebp+0xc]
1001dd24:	test   esi,esi
1001dd26:	jne    0x1001dd2f
1001dd28:	mov    eax,0x80004003
1001dd2d:	jmp    0x1001dda1
1001dd2f:	push   ebx
1001dd30:	push   edi
1001dd31:	lea    edi,[ebp-0x10]
1001dd34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001dd35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001dd36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001dd37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001dd38:	mov    esi,DWORD PTR [ebp+0x8]
1001dd3b:	mov    edi,DWORD PTR ds:0x10066308
1001dd41:	lea    eax,[ebp-0x10]
1001dd44:	push   eax
1001dd45:	push   DWORD PTR [esi-0x28]
1001dd48:	call   edi
1001dd4a:	test   eax,eax
1001dd4c:	je     0x1001dd57
1001dd4e:	lea    eax,[ebp-0x8]
1001dd51:	push   eax
1001dd52:	push   DWORD PTR [esi-0x28]
1001dd55:	call   edi
1001dd57:	push   DWORD PTR [esi-0x28]
1001dd5a:	call   DWORD PTR ds:0x100662e0
1001dd60:	mov    ebx,eax
1001dd62:	test   ebx,ebx
1001dd64:	je     0x1001dd7e
1001dd66:	mov    edi,DWORD PTR ds:0x100662f8
1001dd6c:	lea    eax,[ebp-0x10]
1001dd6f:	push   eax
1001dd70:	push   ebx
1001dd71:	call   edi
1001dd73:	test   eax,eax
1001dd75:	je     0x1001dd7e
1001dd77:	lea    eax,[ebp-0x8]
1001dd7a:	push   eax
1001dd7b:	push   ebx
1001dd7c:	call   edi
1001dd7e:	mov    eax,DWORD PTR [ebp-0x4]
1001dd81:	sub    eax,DWORD PTR [ebp-0xc]
1001dd84:	push   0x1
1001dd86:	push   eax
1001dd87:	mov    eax,DWORD PTR [ebp-0x8]
1001dd8a:	sub    eax,DWORD PTR [ebp-0x10]
1001dd8d:	push   eax
1001dd8e:	push   DWORD PTR [ebp-0xc]
1001dd91:	push   DWORD PTR [ebp-0x10]
1001dd94:	push   DWORD PTR [esi-0x28]
1001dd97:	call   DWORD PTR ds:0x10066344
1001dd9d:	pop    edi
1001dd9e:	xor    eax,eax
1001dda0:	pop    ebx
1001dda1:	pop    esi
1001dda2:	leave  
1001dda3:	ret    0x8
1001dda6:	push   esi
1001dda7:	mov    esi,DWORD PTR [esp+0x8]
1001ddab:	or     DWORD PTR [esi+0x6c],0x1
1001ddaf:	push   edi
1001ddb0:	push   0x0
1001ddb2:	push   0x1
1001ddb4:	push   DWORD PTR [esi+0x38]
1001ddb7:	call   DWORD PTR ds:0x10066448
1001ddbd:	test   BYTE PTR [esp+0x14],0x1
1001ddc2:	je     0x1001dddd
1001ddc4:	mov    eax,DWORD PTR [esi+0x38]
1001ddc7:	or     DWORD PTR [esi+0x6c],0x8
1001ddcb:	mov    ecx,DWORD PTR [eax]
1001ddcd:	lea    edi,[esi+0x48]
1001ddd0:	push   edi
1001ddd1:	push   0x10070a20
1001ddd6:	push   eax
1001ddd7:	call   DWORD PTR [ecx]
1001ddd9:	test   eax,eax
1001dddb:	jge    0x1001ddf2
1001dddd:	mov    eax,DWORD PTR [esi+0x38]
1001dde0:	and    DWORD PTR [esi+0x6c],0xfffffff7
1001dde4:	mov    ecx,DWORD PTR [eax]
1001dde6:	lea    edi,[esi+0x48]
1001dde9:	push   edi
1001ddea:	push   0x10070a10
1001ddef:	push   eax
1001ddf0:	call   DWORD PTR [ecx]
1001ddf2:	mov    edi,DWORD PTR [edi]
1001ddf4:	test   edi,edi
1001ddf6:	je     0x1001de06
1001ddf8:	mov    ecx,DWORD PTR [edi]
1001ddfa:	lea    eax,[esi+0x88]
1001de00:	push   eax
1001de01:	push   eax
1001de02:	push   edi
1001de03:	call   DWORD PTR [ecx+0x1c]
1001de06:	pop    edi
1001de07:	xor    eax,eax
1001de09:	pop    esi
1001de0a:	ret    0xc
1001de0d:	mov    eax,DWORD PTR [esp+0x4]
1001de11:	and    DWORD PTR [eax+0x6c],0xfffffffe
1001de15:	mov    ecx,DWORD PTR [eax+0x48]
1001de18:	test   ecx,ecx
1001de1a:	je     0x1001de26
1001de1c:	and    DWORD PTR [eax+0x48],0x0
1001de20:	mov    eax,DWORD PTR [ecx]
1001de22:	push   ecx
1001de23:	call   DWORD PTR [eax+0x8]
1001de26:	xor    eax,eax
1001de28:	ret    0x8
1001de2b:	mov    eax,DWORD PTR [esp+0x4]
1001de2f:	mov    eax,DWORD PTR [eax+0x9c]
1001de35:	not    eax
1001de37:	and    eax,0x1
1001de3a:	ret    0x4
1001de3d:	mov    eax,DWORD PTR [esp+0x4]
1001de41:	mov    eax,DWORD PTR [eax+0x6c]
1001de44:	shr    eax,0x4
1001de47:	not    eax
1001de49:	and    eax,0x1
1001de4c:	ret    0x4
1001de4f:	cmp    DWORD PTR [esp+0x8],0x0
1001de54:	je     0x1001de6b
1001de56:	push   esi
1001de57:	mov    esi,DWORD PTR [esp+0x8]
1001de5b:	push   DWORD PTR [esi-0x28]
1001de5e:	call   DWORD PTR ds:0x100662e8
1001de64:	or     DWORD PTR [esi+0x6c],0x10
1001de68:	pop    esi
1001de69:	jmp    0x1001de79
1001de6b:	call   DWORD PTR ds:0x1006632c
1001de71:	mov    eax,DWORD PTR [esp+0x4]
1001de75:	and    DWORD PTR [eax+0x6c],0xffffffef
1001de79:	xor    eax,eax
1001de7b:	ret    0x8
1001de7e:	mov    eax,DWORD PTR [esp+0x4]
1001de82:	mov    eax,DWORD PTR [eax+0x6c]
1001de85:	shr    eax,0x5
1001de88:	not    eax
1001de8a:	and    eax,0x1
1001de8d:	ret    0x4
1001de90:	mov    eax,DWORD PTR [esp+0x4]
1001de94:	mov    ecx,DWORD PTR [esp+0x8]
1001de98:	shl    ecx,0x5
1001de9b:	xor    ecx,DWORD PTR [eax+0x6c]
1001de9e:	and    ecx,0x20
1001dea1:	xor    DWORD PTR [eax+0x6c],ecx
1001dea4:	xor    eax,eax
1001dea6:	ret    0x8
1001dea9:	push   ebp
1001deaa:	mov    ebp,esp
1001deac:	sub    esp,0x10
1001deaf:	push   esi
1001deb0:	mov    esi,DWORD PTR [ebp+0x14]
1001deb3:	test   esi,esi
1001deb5:	jne    0x1001dec1
1001deb7:	mov    eax,0x80004003
1001debc:	jmp    0x1001df75
1001dec1:	push   edi
1001dec2:	mov    edi,DWORD PTR [ebp+0x8]
1001dec5:	cmp    BYTE PTR [edi+0x30],0x0
1001dec9:	je     0x1001deda
1001decb:	push   DWORD PTR [edi-0x28]
1001dece:	call   DWORD PTR ds:0x100662c0
1001ded4:	test   eax,eax
1001ded6:	mov    DWORD PTR [esi],eax
1001ded8:	jne    0x1001dee4
1001deda:	mov    eax,0x80004005
1001dedf:	jmp    0x1001df74
1001dee4:	test   BYTE PTR [ebp+0x10],0x1
1001dee8:	mov    BYTE PTR [edi+0x30],0x0
1001deec:	jne    0x1001df72
1001def2:	lea    eax,[ebp-0x10]
1001def5:	push   eax
1001def6:	push   DWORD PTR [edi-0x28]
1001def9:	call   DWORD PTR ds:0x100662d4
1001deff:	test   BYTE PTR [ebp+0x10],0x4
1001df03:	je     0x1001df5e
1001df05:	push   ebx
1001df06:	push   DWORD PTR [esi]
1001df08:	call   DWORD PTR ds:0x1006604c
1001df0e:	mov    ebx,eax
1001df10:	test   ebx,ebx
1001df12:	je     0x1001df5d
1001df14:	mov    eax,DWORD PTR [ebp-0x4]
1001df17:	sub    eax,DWORD PTR [ebp-0xc]
1001df1a:	push   eax
1001df1b:	mov    eax,DWORD PTR [ebp-0x8]
1001df1e:	sub    eax,DWORD PTR [ebp-0x10]
1001df21:	push   eax
1001df22:	push   DWORD PTR [esi]
1001df24:	call   DWORD PTR ds:0x10066034
1001df2a:	test   eax,eax
1001df2c:	mov    DWORD PTR [ebp+0x14],eax
1001df2f:	je     0x1001df46
1001df31:	push   eax
1001df32:	push   ebx
1001df33:	call   DWORD PTR ds:0x10066048
1001df39:	test   eax,eax
1001df3b:	jne    0x1001df4f
1001df3d:	push   DWORD PTR [ebp+0x14]
1001df40:	call   DWORD PTR ds:0x10066044
1001df46:	push   ebx
1001df47:	call   DWORD PTR ds:0x1006603c
1001df4d:	jmp    0x1001df5d
1001df4f:	push   eax
1001df50:	call   DWORD PTR ds:0x10066044
1001df56:	mov    eax,DWORD PTR [esi]
1001df58:	mov    DWORD PTR [edi+0x2c],eax
1001df5b:	mov    DWORD PTR [esi],ebx
1001df5d:	pop    ebx
1001df5e:	test   BYTE PTR [ebp+0x10],0x2
1001df62:	je     0x1001df72
1001df64:	push   0x6
1001df66:	lea    eax,[ebp-0x10]
1001df69:	push   eax
1001df6a:	push   DWORD PTR [esi]
1001df6c:	call   DWORD PTR ds:0x100662f0
1001df72:	xor    eax,eax
1001df74:	pop    edi
1001df75:	pop    esi
1001df76:	leave  
1001df77:	ret    0x10
1001df7a:	push   ebp
1001df7b:	mov    ebp,esp
1001df7d:	sub    esp,0x10
1001df80:	push   esi
1001df81:	mov    esi,DWORD PTR [ebp+0x8]
1001df84:	cmp    DWORD PTR [esi+0x2c],0x0
1001df88:	mov    BYTE PTR [esi+0x30],0x1
1001df8c:	je     0x1001dfd2
1001df8e:	lea    eax,[ebp-0x10]
1001df91:	push   eax
1001df92:	push   DWORD PTR [esi-0x28]
1001df95:	call   DWORD PTR ds:0x100662d4
1001df9b:	mov    eax,DWORD PTR [ebp-0x4]
1001df9e:	sub    eax,DWORD PTR [ebp-0xc]
1001dfa1:	push   0xcc0020
1001dfa6:	push   0x0
1001dfa8:	push   0x0
1001dfaa:	push   DWORD PTR [ebp+0xc]
1001dfad:	push   eax
1001dfae:	mov    eax,DWORD PTR [ebp-0x8]
1001dfb1:	sub    eax,DWORD PTR [ebp-0x10]
1001dfb4:	push   eax
1001dfb5:	push   DWORD PTR [ebp-0xc]
1001dfb8:	push   DWORD PTR [ebp-0x10]
1001dfbb:	push   DWORD PTR [esi+0x2c]
1001dfbe:	call   DWORD PTR ds:0x10066038
1001dfc4:	push   DWORD PTR [ebp+0xc]
1001dfc7:	call   DWORD PTR ds:0x1006603c
1001dfcd:	mov    eax,DWORD PTR [esi+0x2c]
1001dfd0:	jmp    0x1001dfd5
1001dfd2:	mov    eax,DWORD PTR [ebp+0xc]
1001dfd5:	push   eax
1001dfd6:	push   DWORD PTR [esi-0x28]
1001dfd9:	call   DWORD PTR ds:0x10066350
1001dfdf:	xor    eax,eax
1001dfe1:	pop    esi
1001dfe2:	leave  
1001dfe3:	ret    0x8
1001dfe6:	push   DWORD PTR [esp+0xc]
1001dfea:	mov    eax,DWORD PTR [esp+0x8]
1001dfee:	push   DWORD PTR [esp+0xc]
1001dff2:	push   DWORD PTR [eax-0x28]
1001dff5:	call   DWORD PTR ds:0x10066300
1001dffb:	xor    eax,eax
1001dffd:	ret    0xc
1001e000:	push   DWORD PTR [esp+0xc]
1001e004:	mov    eax,DWORD PTR [esp+0x8]
1001e008:	push   DWORD PTR [esp+0xc]
1001e00c:	push   DWORD PTR [eax-0x28]
1001e00f:	call   DWORD PTR ds:0x100662dc
1001e015:	xor    eax,eax
1001e017:	ret    0xc
1001e01a:	xor    eax,eax
1001e01c:	ret    0x14
1001e01f:	push   ebp
1001e020:	mov    ebp,esp
1001e022:	push   DWORD PTR [ebp+0x14]
1001e025:	mov    eax,DWORD PTR [ebp+0x8]
1001e028:	push   DWORD PTR [ebp+0x10]
1001e02b:	push   DWORD PTR [ebp+0xc]
1001e02e:	push   DWORD PTR [eax-0x28]
1001e031:	push   DWORD PTR [eax-0xc]
1001e034:	call   DWORD PTR ds:0x10066338
1001e03a:	mov    ecx,DWORD PTR [ebp+0x18]
1001e03d:	mov    DWORD PTR [ecx],eax
1001e03f:	xor    eax,eax
1001e041:	pop    ebp
1001e042:	ret    0x14
1001e045:	cmp    DWORD PTR [esp+0x8],0x0
1001e04a:	jne    0x1001e053
1001e04c:	mov    eax,0x80004003
1001e051:	jmp    0x1001e068
1001e053:	push   DWORD PTR [esp+0x8]
1001e057:	mov    eax,DWORD PTR [esp+0x8]
1001e05b:	mov    eax,DWORD PTR [eax+0x34]
1001e05e:	mov    ecx,DWORD PTR [eax]
1001e060:	push   0x1006dcb4
1001e065:	push   eax
1001e066:	call   DWORD PTR [ecx]
1001e068:	ret    0x8
1001e06b:	mov    eax,0x80004001
1001e070:	ret    0x10
1001e073:	mov    eax,DWORD PTR [esp+0x4]
1001e077:	mov    ecx,DWORD PTR [esp+0x8]
1001e07b:	shl    ecx,0x5
1001e07e:	xor    ecx,DWORD PTR [eax+0x68]
1001e081:	and    ecx,0x20
1001e084:	xor    DWORD PTR [eax+0x68],ecx
1001e087:	xor    eax,eax
1001e089:	ret    0x8
1001e08c:	ret    0xc
1001e08f:	ret    0x8
1001e092:	ret    0x4
1001e095:	mov    eax,0x80004001
1001e09a:	ret    0x14
1001e09d:	push   0xc
1001e09f:	mov    eax,0x1005f7f7
1001e0a4:	call   0x10059a68
1001e0a9:	mov    eax,DWORD PTR [ebp+0x10]
1001e0ac:	xor    esi,esi
1001e0ae:	cmp    eax,esi
1001e0b0:	jne    0x1001e0b9
1001e0b2:	mov    eax,0x80004003
1001e0b7:	jmp    0x1001e136
1001e0b9:	push   0x1c
1001e0bb:	mov    DWORD PTR [eax],esi
1001e0bd:	mov    DWORD PTR [ebp-0x18],esi
1001e0c0:	mov    DWORD PTR [ebp-0x4],esi
1001e0c3:	call   0x1004349e
1001e0c8:	cmp    eax,esi
1001e0ca:	pop    ecx
1001e0cb:	je     0x1001e0d6
1001e0cd:	mov    esi,eax
1001e0cf:	call   0x1002006d
1001e0d4:	mov    esi,eax
1001e0d6:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e0da:	jmp    0x1001e0e5
1001e0dc:	mov    eax,0x1001e0e2
1001e0e1:	ret    
1001e0e2:	mov    esi,DWORD PTR [ebp-0x18]
1001e0e5:	test   esi,esi
1001e0e7:	jne    0x1001e0f0
1001e0e9:	mov    eax,0x8007000e
1001e0ee:	jmp    0x1001e136
1001e0f0:	mov    eax,DWORD PTR [ebp+0x8]
1001e0f3:	mov    ecx,DWORD PTR [eax+0x2c]
1001e0f6:	mov    DWORD PTR [ebp-0x14],ecx
1001e0f9:	lea    ecx,[eax-0x34]
1001e0fc:	mov    eax,DWORD PTR [ecx]
1001e0fe:	push   0x3
1001e100:	call   DWORD PTR [eax+0x10]
1001e103:	push   eax
1001e104:	lea    eax,[ebp-0x10]
1001e107:	push   eax
1001e108:	lea    eax,[ebp-0x14]
1001e10b:	push   eax
1001e10c:	push   esi
1001e10d:	call   0x10022061
1001e112:	mov    edi,eax
1001e114:	test   edi,edi
1001e116:	jl     0x1001e12b
1001e118:	push   DWORD PTR [ebp+0x10]
1001e11b:	mov    eax,DWORD PTR [esi]
1001e11d:	push   0x10070204
1001e122:	push   esi
1001e123:	call   DWORD PTR [eax]
1001e125:	mov    edi,eax
1001e127:	test   edi,edi
1001e129:	jge    0x1001e134
1001e12b:	mov    eax,DWORD PTR [esi]
1001e12d:	push   0x1
1001e12f:	mov    ecx,esi
1001e131:	call   DWORD PTR [eax+0x1c]
1001e134:	mov    eax,edi
1001e136:	call   0x10059b0d
1001e13b:	ret    0xc
1001e13e:	mov    eax,DWORD PTR [esp+0x4]
1001e142:	mov    ecx,DWORD PTR [esp+0x8]
1001e146:	shl    ecx,0x7
1001e149:	xor    ecx,DWORD PTR [eax+0x64]
1001e14c:	and    ecx,0x80
1001e152:	xor    DWORD PTR [eax+0x64],ecx
1001e155:	xor    eax,eax
1001e157:	ret    0x8
1001e15a:	push   0x18
1001e15c:	mov    eax,0x1005faca
1001e161:	call   0x10059a35
1001e166:	mov    ebx,ecx
1001e168:	mov    esi,DWORD PTR [ebp+0x8]
1001e16b:	test   esi,esi
1001e16d:	jne    0x1001e176
1001e16f:	xor    eax,eax
1001e171:	jmp    0x1001e545
1001e176:	lea    eax,[ebx+0x60]
1001e179:	cmp    DWORD PTR [eax],esi
1001e17b:	mov    DWORD PTR [ebp-0x24],eax
1001e17e:	je     0x1001e18b
1001e180:	mov    edi,esi
1001e182:	mov    esi,eax
1001e184:	call   0x1000763b
1001e189:	mov    esi,edi
1001e18b:	mov    eax,DWORD PTR [esi]
1001e18d:	and    DWORD PTR [ebp-0x10],0x0
1001e191:	lea    edi,[ebx+0x64]
1001e194:	push   edi
1001e195:	push   0x10070a30
1001e19a:	push   esi
1001e19b:	call   DWORD PTR [eax]
1001e19d:	mov    eax,DWORD PTR [edi]
1001e19f:	test   eax,eax
1001e1a1:	je     0x1001e4ff
1001e1a7:	mov    ecx,DWORD PTR [eax]
1001e1a9:	lea    esi,[ebx+0xa0]
1001e1af:	push   esi
1001e1b0:	push   0x1
1001e1b2:	push   eax
1001e1b3:	mov    DWORD PTR [ebp-0x20],esi
1001e1b6:	call   DWORD PTR [ecx+0x58]
1001e1b9:	test   DWORD PTR [esi],0x20000
1001e1bf:	je     0x1001e200
1001e1c1:	mov    eax,DWORD PTR [ebx]
1001e1c3:	mov    ecx,ebx
1001e1c5:	call   DWORD PTR [eax+0x10]
1001e1c8:	xor    esi,esi
1001e1ca:	cmp    eax,esi
1001e1cc:	mov    DWORD PTR [ebp-0x18],esi
1001e1cf:	je     0x1001e1df
1001e1d1:	mov    ecx,DWORD PTR [eax]
1001e1d3:	lea    edx,[ebp-0x18]
1001e1d6:	push   edx
1001e1d7:	push   0x10070314
1001e1dc:	push   eax
1001e1dd:	call   DWORD PTR [ecx]
1001e1df:	mov    DWORD PTR [ebp-0x4],esi
1001e1e2:	mov    eax,DWORD PTR [edi]
1001e1e4:	push   DWORD PTR [ebp-0x18]
1001e1e7:	mov    ecx,DWORD PTR [eax]
1001e1e9:	push   eax
1001e1ea:	call   DWORD PTR [ecx+0xc]
1001e1ed:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e1f1:	mov    eax,DWORD PTR [ebp-0x18]
1001e1f4:	cmp    eax,esi
1001e1f6:	je     0x1001e202
1001e1f8:	mov    ecx,DWORD PTR [eax]
1001e1fa:	push   eax
1001e1fb:	call   DWORD PTR [ecx+0x8]
1001e1fe:	jmp    0x1001e202
1001e200:	xor    esi,esi
1001e202:	cmp    BYTE PTR [ebp+0xc],0x0
1001e206:	jne    0x1001e2ed
1001e20c:	mov    eax,DWORD PTR [edi]
1001e20e:	cmp    eax,esi
1001e210:	mov    DWORD PTR [ebp+0xc],esi
1001e213:	je     0x1001e223
1001e215:	mov    ecx,DWORD PTR [eax]
1001e217:	lea    edx,[ebp+0xc]
1001e21a:	push   edx
1001e21b:	push   0x10070970
1001e220:	push   eax
1001e221:	call   DWORD PTR [ecx]
1001e223:	mov    DWORD PTR [ebp-0x4],0x1
1001e22a:	mov    eax,DWORD PTR [ebp+0xc]
1001e22d:	cmp    eax,esi
1001e22f:	je     0x1001e24a
1001e231:	cmp    DWORD PTR [ebp+0x10],esi
1001e234:	mov    ecx,DWORD PTR [eax]
1001e236:	je     0x1001e241
1001e238:	push   DWORD PTR [ebp+0x10]
1001e23b:	push   eax
1001e23c:	call   DWORD PTR [ecx+0x14]
1001e23f:	jmp    0x1001e245
1001e241:	push   eax
1001e242:	call   DWORD PTR [ecx+0x20]
1001e245:	mov    DWORD PTR [ebp-0x10],eax
1001e248:	jmp    0x1001e294
1001e24a:	cmp    DWORD PTR [ebp+0x10],esi
1001e24d:	je     0x1001e2df
1001e253:	mov    ecx,DWORD PTR [edi]
1001e255:	xor    eax,eax
1001e257:	cmp    ecx,esi
1001e259:	mov    DWORD PTR [ebp-0x18],eax
1001e25c:	je     0x1001e26f
1001e25e:	mov    eax,DWORD PTR [ecx]
1001e260:	lea    edx,[ebp-0x18]
1001e263:	push   edx
1001e264:	push   0x10070960
1001e269:	push   ecx
1001e26a:	call   DWORD PTR [eax]
1001e26c:	mov    eax,DWORD PTR [ebp-0x18]
1001e26f:	cmp    eax,esi
1001e271:	mov    BYTE PTR [ebp-0x4],0x2
1001e275:	je     0x1001e286
1001e277:	push   DWORD PTR [ebp+0x10]
1001e27a:	mov    ecx,DWORD PTR [eax]
1001e27c:	push   eax
1001e27d:	call   DWORD PTR [ecx+0x14]
1001e280:	mov    DWORD PTR [ebp-0x10],eax
1001e283:	mov    eax,DWORD PTR [ebp-0x18]
1001e286:	cmp    eax,esi
1001e288:	mov    BYTE PTR [ebp-0x4],0x1
1001e28c:	je     0x1001e294
1001e28e:	mov    ecx,DWORD PTR [eax]
1001e290:	push   eax
1001e291:	call   DWORD PTR [ecx+0x8]
1001e294:	cmp    DWORD PTR [ebp-0x10],esi
1001e297:	jge    0x1001e2dc
1001e299:	mov    ebx,DWORD PTR [ebp-0x20]
1001e29c:	test   DWORD PTR [ebx],0x20000
1001e2a2:	je     0x1001e2ad
1001e2a4:	mov    eax,DWORD PTR [edi]
1001e2a6:	mov    ecx,DWORD PTR [eax]
1001e2a8:	push   esi
1001e2a9:	push   eax
1001e2aa:	call   DWORD PTR [ecx+0xc]
1001e2ad:	mov    DWORD PTR [ebx],esi
1001e2af:	mov    eax,DWORD PTR [edi]
1001e2b1:	cmp    eax,esi
1001e2b3:	je     0x1001e2bd
1001e2b5:	mov    DWORD PTR [edi],esi
1001e2b7:	mov    ecx,DWORD PTR [eax]
1001e2b9:	push   eax
1001e2ba:	call   DWORD PTR [ecx+0x8]
1001e2bd:	mov    ecx,DWORD PTR [ebp-0x24]
1001e2c0:	mov    eax,DWORD PTR [ecx]
1001e2c2:	cmp    eax,esi
1001e2c4:	je     0x1001e2ce
1001e2c6:	mov    DWORD PTR [ecx],esi
1001e2c8:	mov    ecx,DWORD PTR [eax]
1001e2ca:	push   eax
1001e2cb:	call   DWORD PTR [ecx+0x8]
1001e2ce:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e2d2:	mov    eax,DWORD PTR [ebp+0xc]
1001e2d5:	cmp    eax,esi
1001e2d7:	jmp    0x1001e53a
1001e2dc:	mov    eax,DWORD PTR [ebp+0xc]
1001e2df:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e2e3:	cmp    eax,esi
1001e2e5:	je     0x1001e2ed
1001e2e7:	mov    ecx,DWORD PTR [eax]
1001e2e9:	push   eax
1001e2ea:	call   DWORD PTR [ecx+0x8]
1001e2ed:	mov    eax,DWORD PTR [ebp-0x20]
1001e2f0:	test   DWORD PTR [eax],0x20000
1001e2f6:	jne    0x1001e337
1001e2f8:	mov    eax,DWORD PTR [ebx]
1001e2fa:	mov    ecx,ebx
1001e2fc:	call   DWORD PTR [eax+0x10]
1001e2ff:	cmp    eax,esi
1001e301:	mov    DWORD PTR [ebp+0xc],esi
1001e304:	je     0x1001e314
1001e306:	mov    ecx,DWORD PTR [eax]
1001e308:	lea    edx,[ebp+0xc]
1001e30b:	push   edx
1001e30c:	push   0x10070314
1001e311:	push   eax
1001e312:	call   DWORD PTR [ecx]
1001e314:	mov    DWORD PTR [ebp-0x4],0x3
1001e31b:	mov    eax,DWORD PTR [edi]
1001e31d:	push   DWORD PTR [ebp+0xc]
1001e320:	mov    ecx,DWORD PTR [eax]
1001e322:	push   eax
1001e323:	call   DWORD PTR [ecx+0xc]
1001e326:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e32a:	mov    eax,DWORD PTR [ebp+0xc]
1001e32d:	cmp    eax,esi
1001e32f:	je     0x1001e337
1001e331:	mov    ecx,DWORD PTR [eax]
1001e333:	push   eax
1001e334:	call   DWORD PTR [ecx+0x8]
1001e337:	mov    eax,DWORD PTR [edi]
1001e339:	mov    DWORD PTR [ebx+0x90],esi
1001e33f:	mov    ecx,DWORD PTR [eax]
1001e341:	lea    esi,[ebx+0x70]
1001e344:	push   esi
1001e345:	push   0x10070a40
1001e34a:	push   eax
1001e34b:	call   DWORD PTR [ecx]
1001e34d:	test   eax,eax
1001e34f:	mov    DWORD PTR [ebp-0x10],eax
1001e352:	jge    0x1001e374
1001e354:	mov    eax,DWORD PTR [edi]
1001e356:	mov    ecx,DWORD PTR [eax]
1001e358:	push   esi
1001e359:	push   0x10070a50
1001e35e:	push   eax
1001e35f:	call   DWORD PTR [ecx]
1001e361:	test   eax,eax
1001e363:	mov    DWORD PTR [ebp-0x10],eax
1001e366:	jl     0x1001e380
1001e368:	mov    DWORD PTR [ebx+0x90],0x3
1001e372:	jmp    0x1001e39e
1001e374:	mov    DWORD PTR [ebx+0x90],0x7
1001e37e:	jmp    0x1001e39e
1001e380:	mov    eax,DWORD PTR [edi]
1001e382:	mov    ecx,DWORD PTR [eax]
1001e384:	push   esi
1001e385:	push   0x10070a60
1001e38a:	push   eax
1001e38b:	call   DWORD PTR [ecx]
1001e38d:	test   eax,eax
1001e38f:	mov    DWORD PTR [ebp-0x10],eax
1001e392:	jl     0x1001e39e
1001e394:	mov    DWORD PTR [ebx+0x90],0x1
1001e39e:	mov    eax,DWORD PTR [ebx]
1001e3a0:	mov    ecx,ebx
1001e3a2:	call   DWORD PTR [eax+0x10]
1001e3a5:	and    DWORD PTR [ebp-0x14],0x0
1001e3a9:	test   eax,eax
1001e3ab:	je     0x1001e3bb
1001e3ad:	mov    ecx,DWORD PTR [eax]
1001e3af:	lea    edx,[ebp-0x14]
1001e3b2:	push   edx
1001e3b3:	push   0x10070264
1001e3b8:	push   eax
1001e3b9:	call   DWORD PTR [ecx]
1001e3bb:	lea    edx,[ebx+0x9c]
1001e3c1:	mov    DWORD PTR [ebp-0x4],0x4
1001e3c8:	mov    eax,DWORD PTR [edi]
1001e3ca:	mov    ecx,DWORD PTR [eax]
1001e3cc:	push   edx
1001e3cd:	push   DWORD PTR [ebp-0x14]
1001e3d0:	push   eax
1001e3d1:	call   DWORD PTR [ecx+0x4c]
1001e3d4:	mov    esi,DWORD PTR [esi]
1001e3d6:	test   esi,esi
1001e3d8:	je     0x1001e3e7
1001e3da:	push   DWORD PTR [ebp-0x14]
1001e3dd:	mov    eax,DWORD PTR [esi]
1001e3df:	push   0x0
1001e3e1:	push   0x1
1001e3e3:	push   esi
1001e3e4:	call   DWORD PTR [eax+0x1c]
1001e3e7:	mov    edi,DWORD PTR [edi]
1001e3e9:	mov    eax,DWORD PTR [edi]
1001e3eb:	push   0x0
1001e3ed:	push   0x1007051c
1001e3f2:	push   edi
1001e3f3:	call   DWORD PTR [eax+0x14]
1001e3f6:	test   WORD PTR [ebx+0xa0],0x400
1001e3ff:	jne    0x1001e4eb
1001e405:	lea    esi,[ebx+0xb4]
1001e40b:	push   esi
1001e40c:	push   DWORD PTR [ebx+0x4]
1001e40f:	call   DWORD PTR ds:0x100662d4
1001e415:	mov    eax,DWORD PTR [ebx+0xbc]
1001e41b:	sub    eax,DWORD PTR [esi]
1001e41d:	lea    edi,[ebx+0xac]
1001e423:	mov    DWORD PTR [edi],eax
1001e425:	mov    eax,DWORD PTR [ebx+0xc0]
1001e42b:	sub    eax,DWORD PTR [ebx+0xb8]
1001e431:	lea    esi,[ebx+0xa4]
1001e437:	mov    DWORD PTR [ebx+0xb0],eax
1001e43d:	call   0x1001bc2a
1001e442:	mov    eax,DWORD PTR [ebx+0x64]
1001e445:	mov    ecx,DWORD PTR [eax]
1001e447:	lea    edi,[ebx+0xa4]
1001e44d:	push   edi
1001e44e:	push   0x1
1001e450:	push   eax
1001e451:	call   DWORD PTR [ecx+0x44]
1001e454:	mov    eax,DWORD PTR [ebx+0x64]
1001e457:	mov    ecx,DWORD PTR [eax]
1001e459:	push   edi
1001e45a:	push   0x1
1001e45c:	push   eax
1001e45d:	call   DWORD PTR [ecx+0x48]
1001e460:	lea    esi,[ebx+0xac]
1001e466:	call   0x1001bbc1
1001e46b:	mov    eax,DWORD PTR [ebx+0xac]
1001e471:	lea    esi,[ebx+0xb4]
1001e477:	add    eax,DWORD PTR [esi]
1001e479:	mov    ecx,ebx
1001e47b:	mov    DWORD PTR [ebx+0xbc],eax
1001e481:	mov    eax,DWORD PTR [ebx+0xb0]
1001e487:	add    eax,DWORD PTR [ebx+0xb8]
1001e48d:	mov    DWORD PTR [ebx+0xc0],eax
1001e493:	mov    eax,DWORD PTR [ebx]
1001e495:	call   DWORD PTR [eax+0x10]
1001e498:	xor    edi,edi
1001e49a:	cmp    eax,edi
1001e49c:	mov    DWORD PTR [ebp+0x10],edi
1001e49f:	je     0x1001e4af
1001e4a1:	mov    ecx,DWORD PTR [eax]
1001e4a3:	lea    edx,[ebp+0x10]
1001e4a6:	push   edx
1001e4a7:	push   0x10070314
1001e4ac:	push   eax
1001e4ad:	call   DWORD PTR [ecx]
1001e4af:	push   esi
1001e4b0:	mov    BYTE PTR [ebp-0x4],0x5
1001e4b4:	push   DWORD PTR [ebx+0x4]
1001e4b7:	mov    eax,DWORD PTR [ebx+0x64]
1001e4ba:	mov    ecx,DWORD PTR [eax]
1001e4bc:	push   edi
1001e4bd:	push   DWORD PTR [ebp+0x10]
1001e4c0:	push   edi
1001e4c1:	push   0xfffffffb
1001e4c3:	push   eax
1001e4c4:	call   DWORD PTR [ecx+0x2c]
1001e4c7:	push   0x507
1001e4cc:	push   edi
1001e4cd:	push   edi
1001e4ce:	push   DWORD PTR [ebx+0x4]
1001e4d1:	mov    DWORD PTR [ebp-0x10],eax
1001e4d4:	call   DWORD PTR ds:0x10066360
1001e4da:	mov    BYTE PTR [ebp-0x4],0x4
1001e4de:	mov    eax,DWORD PTR [ebp+0x10]
1001e4e1:	cmp    eax,edi
1001e4e3:	je     0x1001e4eb
1001e4e5:	mov    ecx,DWORD PTR [eax]
1001e4e7:	push   eax
1001e4e8:	call   DWORD PTR [ecx+0x8]
1001e4eb:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e4ef:	mov    eax,DWORD PTR [ebp-0x14]
1001e4f2:	test   eax,eax
1001e4f4:	je     0x1001e4fc
1001e4f6:	mov    ecx,DWORD PTR [eax]
1001e4f8:	push   eax
1001e4f9:	call   DWORD PTR [ecx+0x8]
1001e4fc:	mov    esi,DWORD PTR [ebp+0x8]
1001e4ff:	and    DWORD PTR [ebp-0x1c],0x0
1001e503:	lea    ecx,[ebp-0x1c]
1001e506:	push   ecx
1001e507:	push   0x100702b4
1001e50c:	mov    DWORD PTR [ebp-0x4],0x6
1001e513:	mov    eax,DWORD PTR [esi]
1001e515:	push   esi
1001e516:	call   DWORD PTR [eax]
1001e518:	mov    eax,DWORD PTR [ebp-0x1c]
1001e51b:	test   eax,eax
1001e51d:	je     0x1001e534
1001e51f:	mov    edi,DWORD PTR [eax]
1001e521:	mov    esi,eax
1001e523:	mov    eax,DWORD PTR [ebx]
1001e525:	mov    ecx,ebx
1001e527:	add    edi,0xc
1001e52a:	call   DWORD PTR [eax+0x10]
1001e52d:	push   eax
1001e52e:	push   esi
1001e52f:	call   DWORD PTR [edi]
1001e531:	mov    eax,DWORD PTR [ebp-0x1c]
1001e534:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e538:	test   eax,eax
1001e53a:	je     0x1001e542
1001e53c:	mov    ecx,DWORD PTR [eax]
1001e53e:	push   eax
1001e53f:	call   DWORD PTR [ecx+0x8]
1001e542:	mov    eax,DWORD PTR [ebp-0x10]
1001e545:	call   0x10059b0d
1001e54a:	ret    0xc
1001e54d:	mov    eax,DWORD PTR [esi]
1001e54f:	push   edi
1001e550:	push   esi
1001e551:	mov    ecx,esi
1001e553:	call   DWORD PTR [eax+0x8]
1001e556:	lea    edi,[esi+0x8]
1001e559:	call   0x1001bb79
1001e55e:	test   eax,eax
1001e560:	pop    edi
1001e561:	jne    0x1001e567
1001e563:	xor    eax,eax
1001e565:	jmp    0x1001e580
1001e567:	push   DWORD PTR [esi+0x14]
1001e56a:	push   0xfffffffc
1001e56c:	push   ebx
1001e56d:	call   DWORD PTR ds:0x10066358
1001e573:	test   eax,eax
1001e575:	je     0x1001e563
1001e577:	mov    DWORD PTR [esi+0x20],eax
1001e57a:	xor    eax,eax
1001e57c:	mov    DWORD PTR [esi+0x4],ebx
1001e57f:	inc    eax
1001e580:	lea    ecx,[esi+0xc8]
1001e586:	shl    eax,0x4
1001e589:	xor    eax,DWORD PTR [ecx]
1001e58b:	and    eax,0x10
1001e58e:	xor    DWORD PTR [ecx],eax
1001e590:	ret    
1001e591:	test   BYTE PTR [esi+0xc8],0x10
1001e598:	je     0x1001e5d4
1001e59a:	push   0xfffffffc
1001e59c:	push   DWORD PTR [esi+0x4]
1001e59f:	call   DWORD PTR ds:0x10066310
1001e5a5:	mov    eax,DWORD PTR [esi+0x20]
1001e5a8:	mov    ecx,DWORD PTR [esi+0x4]
1001e5ab:	push   eax
1001e5ac:	push   0xfffffffc
1001e5ae:	push   ecx
1001e5af:	call   DWORD PTR ds:0x10066358
1001e5b5:	test   eax,eax
1001e5b7:	je     0x1001e5dd
1001e5b9:	mov    eax,ds:0x1006633c
1001e5be:	mov    DWORD PTR [esi+0x20],eax
1001e5c1:	mov    eax,DWORD PTR [esi+0x4]
1001e5c4:	and    DWORD PTR [esi+0x4],0x0
1001e5c8:	test   eax,eax
1001e5ca:	je     0x1001e5dd
1001e5cc:	and    DWORD PTR [esi+0xc8],0xffffffef
1001e5d3:	ret    
1001e5d4:	push   DWORD PTR [esi+0x4]
1001e5d7:	call   DWORD PTR ds:0x10066304
1001e5dd:	ret    
1001e5de:	push   ebp
1001e5df:	mov    ebp,esp
1001e5e1:	push   ebx
1001e5e2:	mov    ebx,eax
1001e5e4:	cmp    ebx,0x4e
1001e5e7:	ja     0x1001e64b
1001e5e9:	je     0x1001e647
1001e5eb:	cmp    ebx,0x2b
1001e5ee:	je     0x1001e630
1001e5f0:	cmp    ebx,0x2c
1001e5f3:	je     0x1001e622
1001e5f5:	cmp    ebx,0x2d
1001e5f8:	je     0x1001e61a
1001e5fa:	jbe    0x1001e6bd
1001e600:	cmp    ebx,0x2f
1001e603:	jbe    0x1001e6b7
1001e609:	cmp    ebx,0x39
1001e60c:	jne    0x1001e6bd
1001e612:	mov    eax,DWORD PTR [esi+0x8]
1001e615:	jmp    0x1001e6b9
1001e61a:	mov    eax,DWORD PTR [esi+0xc]
1001e61d:	jmp    0x1001e6b9
1001e622:	cmp    DWORD PTR [esi],0x1
1001e625:	je     0x1001e6bd
1001e62b:	push   DWORD PTR [esi+0x4]
1001e62e:	jmp    0x1001e6a8
1001e630:	cmp    DWORD PTR [esi],0x1
1001e633:	jne    0x1001e642
1001e635:	push   DWORD PTR [esi+0x14]
1001e638:	call   DWORD PTR ds:0x10066320
1001e63e:	test   eax,eax
1001e640:	je     0x1001e6bd
1001e642:	mov    eax,DWORD PTR [esi+0x14]
1001e645:	jmp    0x1001e6b9
1001e647:	mov    eax,DWORD PTR [esi]
1001e649:	jmp    0x1001e6b9
1001e64b:	cmp    ebx,0x111
1001e651:	je     0x1001e6b3
1001e653:	cmp    ebx,0x113
1001e659:	jbe    0x1001e6bd
1001e65b:	cmp    ebx,0x115
1001e661:	jbe    0x1001e6b7
1001e663:	cmp    ebx,0x131
1001e669:	jbe    0x1001e6bd
1001e66b:	cmp    ebx,0x138
1001e671:	jbe    0x1001e6b7
1001e673:	cmp    ebx,0x210
1001e679:	jne    0x1001e6bd
1001e67b:	mov    eax,DWORD PTR [edi+0x18]
1001e67e:	test   eax,eax
1001e680:	je     0x1001e697
1001e682:	push   DWORD PTR [eax+0xc]
1001e685:	push   DWORD PTR [eax+0x8]
1001e688:	push   DWORD PTR [eax+0x4]
1001e68b:	push   DWORD PTR [edi+0x4]
1001e68e:	push   DWORD PTR [edi+0x20]
1001e691:	call   DWORD PTR ds:0x10066338
1001e697:	movzx  eax,WORD PTR [ebp+0x8]
1001e69b:	dec    eax
1001e69c:	cmp    eax,0x1
1001e69f:	jbe    0x1001e6b7
1001e6a1:	mov    eax,DWORD PTR [ebp+0x8]
1001e6a4:	shr    eax,0x10
1001e6a7:	push   eax
1001e6a8:	push   DWORD PTR [edi+0x4]
1001e6ab:	call   DWORD PTR ds:0x10066354
1001e6b1:	jmp    0x1001e6b9
1001e6b3:	test   esi,esi
1001e6b5:	je     0x1001e6bd
1001e6b7:	mov    eax,esi
1001e6b9:	test   eax,eax
1001e6bb:	jne    0x1001e6c8
1001e6bd:	mov    eax,DWORD PTR [ebp+0xc]
1001e6c0:	and    DWORD PTR [eax],0x0
1001e6c3:	xor    eax,eax
1001e6c5:	inc    eax
1001e6c6:	jmp    0x1001e70f
1001e6c8:	mov    ecx,DWORD PTR [edi+0x98]
1001e6ce:	test   cl,0x8
1001e6d1:	je     0x1001e6fd
1001e6d3:	and    DWORD PTR [ebp+0xc],0x0
1001e6d7:	test   cl,0x1
1001e6da:	je     0x1001e6f8
1001e6dc:	mov    eax,DWORD PTR [edi+0x74]
1001e6df:	test   eax,eax
1001e6e1:	je     0x1001e6f8
1001e6e3:	mov    ecx,DWORD PTR [eax]
1001e6e5:	lea    edx,[ebp+0xc]
1001e6e8:	push   edx
1001e6e9:	push   esi
1001e6ea:	push   DWORD PTR [ebp+0x8]
1001e6ed:	add    ebx,0x2000
1001e6f3:	push   ebx
1001e6f4:	push   eax
1001e6f5:	call   DWORD PTR [ecx+0x24]
1001e6f8:	mov    eax,DWORD PTR [ebp+0xc]
1001e6fb:	jmp    0x1001e70f
1001e6fd:	push   esi
1001e6fe:	push   DWORD PTR [ebp+0x8]
1001e701:	add    ebx,0x2000
1001e707:	push   ebx
1001e708:	push   eax
1001e709:	call   DWORD PTR ds:0x10066330
1001e70f:	pop    ebx
1001e710:	pop    ebp
1001e711:	ret    0x8
1001e714:	mov    edx,DWORD PTR [esp+0x10]
1001e718:	test   edx,edx
1001e71a:	jne    0x1001e723
1001e71c:	mov    eax,0x80004003
1001e721:	jmp    0x1001e748
1001e723:	and    DWORD PTR [edx],0x0
1001e726:	mov    ecx,DWORD PTR [esp+0x4]
1001e72a:	mov    ecx,DWORD PTR [ecx+0x9c]
1001e730:	test   ecx,ecx
1001e732:	mov    eax,0x80004002
1001e737:	je     0x1001e748
1001e739:	mov    eax,DWORD PTR [ecx]
1001e73b:	push   edx
1001e73c:	push   DWORD PTR [esp+0x10]
1001e740:	push   DWORD PTR [esp+0x10]
1001e744:	push   ecx
1001e745:	call   DWORD PTR [eax+0xc]
1001e748:	ret    0x10
1001e74b:	push   0x1c
1001e74d:	mov    eax,0x100601ee
1001e752:	call   0x10059a9e
1001e757:	mov    eax,DWORD PTR [ebp+0xc]
1001e75a:	dec    eax
1001e75b:	je     0x1001e7cd
1001e75d:	sub    eax,0x81
1001e762:	je     0x1001e7ad
1001e764:	sub    eax,0x18e
1001e769:	jne    0x1001e949
1001e76f:	cmp    DWORD PTR [ebp+0x10],0x1
1001e773:	jne    0x1001e949
1001e779:	mov    esi,DWORD PTR ds:0x10066310
1001e77f:	push   0xffffffec
1001e781:	push   DWORD PTR [ebp+0x14]
1001e784:	call   esi
1001e786:	mov    ebx,0x10000
1001e78b:	test   ebx,eax
1001e78d:	je     0x1001e949
1001e793:	push   0xffffffec
1001e795:	push   DWORD PTR [ebp+0x8]
1001e798:	call   esi
1001e79a:	or     eax,ebx
1001e79c:	push   eax
1001e79d:	push   0xffffffec
1001e79f:	push   DWORD PTR [ebp+0x8]
1001e7a2:	call   DWORD PTR ds:0x10066358
1001e7a8:	jmp    0x1001e949
1001e7ad:	push   0xffffffeb
1001e7af:	push   DWORD PTR [ebp+0x8]
1001e7b2:	call   DWORD PTR ds:0x10066310
1001e7b8:	test   eax,eax
1001e7ba:	je     0x1001e7c2
1001e7bc:	mov    ecx,DWORD PTR [eax]
1001e7be:	push   eax
1001e7bf:	call   DWORD PTR [ecx+0x8]
1001e7c2:	call   DWORD PTR ds:0x10066410
1001e7c8:	jmp    0x1001e949
1001e7cd:	xor    edi,edi
1001e7cf:	push   edi
1001e7d0:	call   DWORD PTR ds:0x10066414
1001e7d6:	push   DWORD PTR [ebp+0x8]
1001e7d9:	call   DWORD PTR ds:0x1006635c
1001e7df:	mov    esi,eax
1001e7e1:	lea    eax,[esi+esi*1+0xa]
1001e7e5:	cmp    eax,0x400
1001e7ea:	ja     0x1001e7ff
1001e7ec:	call   0x1004b6f0
1001e7f1:	mov    eax,esp
1001e7f3:	cmp    eax,edi
1001e7f5:	je     0x1001e813
1001e7f7:	mov    DWORD PTR [eax],0xcccc
1001e7fd:	jmp    0x1001e810
1001e7ff:	push   eax
1001e800:	call   0x10044f8d
1001e805:	cmp    eax,edi
1001e807:	pop    ecx
1001e808:	je     0x1001e813
1001e80a:	mov    DWORD PTR [eax],0xdddd
1001e810:	add    eax,0x8
1001e813:	mov    DWORD PTR [ebp-0x1c],eax
1001e816:	mov    DWORD PTR [ebp-0x24],eax
1001e819:	cmp    eax,edi
1001e81b:	mov    DWORD PTR [ebp-0x4],edi
1001e81e:	jne    0x1001e82f
1001e820:	push   edi
1001e821:	call   0x1001b365
1001e826:	pop    ecx
1001e827:	or     eax,0xffffffff
1001e82a:	jmp    0x1001e95b
1001e82f:	inc    esi
1001e830:	push   esi
1001e831:	push   eax
1001e832:	push   DWORD PTR [ebp+0x8]
1001e835:	call   DWORD PTR ds:0x10066314
1001e83b:	push   0x1006d18c
1001e840:	push   DWORD PTR [ebp+0x8]
1001e843:	call   DWORD PTR ds:0x10066334
1001e849:	mov    eax,DWORD PTR [ebp+0x14]
1001e84c:	xor    esi,esi
1001e84e:	cmp    eax,edi
1001e850:	mov    DWORD PTR [ebp-0x20],edi
1001e853:	je     0x1001e85e
1001e855:	mov    eax,DWORD PTR [eax]
1001e857:	cmp    eax,edi
1001e859:	je     0x1001e85e
1001e85b:	movzx  esi,WORD PTR [eax]
1001e85e:	push   esi
1001e85f:	push   0x42
1001e861:	call   DWORD PTR ds:0x10066148
1001e867:	mov    ebx,eax
1001e869:	mov    DWORD PTR [ebp-0x14],edi
1001e86c:	cmp    ebx,edi
1001e86e:	mov    BYTE PTR [ebp-0x4],0x1
1001e872:	je     0x1001e8a6
1001e874:	cmp    esi,edi
1001e876:	je     0x1001e8a6
1001e878:	push   ebx
1001e879:	call   DWORD PTR ds:0x10066144
1001e87f:	mov    ecx,DWORD PTR [ebp+0x14]
1001e882:	mov    ecx,DWORD PTR [ecx]
1001e884:	inc    ecx
1001e885:	push   esi
1001e886:	inc    ecx
1001e887:	push   ecx
1001e888:	push   esi
1001e889:	push   eax
1001e88a:	call   0x10014338
1001e88f:	add    esp,0x10
1001e892:	push   ebx
1001e893:	call   DWORD PTR ds:0x10066154
1001e899:	lea    eax,[ebp-0x14]
1001e89c:	push   eax
1001e89d:	push   0x1
1001e89f:	push   ebx
1001e8a0:	call   DWORD PTR ds:0x1006641c
1001e8a6:	call   DWORD PTR ds:0x1007efec
1001e8ac:	mov    DWORD PTR [ebp-0x28],edi
1001e8af:	mov    DWORD PTR [ebp-0x18],edi
1001e8b2:	push   edi
1001e8b3:	mov    edi,DWORD PTR [ebp-0x1c]
1001e8b6:	mov    BYTE PTR [ebp-0x4],0x3
1001e8ba:	push   DWORD PTR [ebp-0x14]
1001e8bd:	lea    ebx,[ebp-0x18]
1001e8c0:	push   DWORD PTR [ebp+0x8]
1001e8c3:	push   edi
1001e8c4:	call   0x1001ebbe
1001e8c9:	xor    ebx,ebx
1001e8cb:	cmp    eax,ebx
1001e8cd:	jge    0x1001e8f9
1001e8cf:	mov    BYTE PTR [ebp-0x4],0x2
1001e8d3:	mov    eax,DWORD PTR [ebp-0x18]
1001e8d6:	cmp    eax,ebx
1001e8d8:	je     0x1001e8e0
1001e8da:	mov    ecx,DWORD PTR [eax]
1001e8dc:	push   eax
1001e8dd:	call   DWORD PTR [ecx+0x8]
1001e8e0:	mov    BYTE PTR [ebp-0x4],bl
1001e8e3:	mov    eax,DWORD PTR [ebp-0x14]
1001e8e6:	cmp    eax,ebx
1001e8e8:	je     0x1001e820
1001e8ee:	mov    ecx,DWORD PTR [eax]
1001e8f0:	push   eax
1001e8f1:	call   DWORD PTR [ecx+0x8]
1001e8f4:	jmp    0x1001e820
1001e8f9:	mov    esi,DWORD PTR [ebp-0x18]
1001e8fc:	mov    eax,DWORD PTR [esi]
1001e8fe:	lea    ecx,[ebp-0x20]
1001e901:	push   ecx
1001e902:	push   0x10070334
1001e907:	push   esi
1001e908:	call   DWORD PTR [eax]
1001e90a:	cmp    eax,ebx
1001e90c:	jge    0x1001e91a
1001e90e:	mov    BYTE PTR [ebp-0x4],0x2
1001e912:	mov    eax,DWORD PTR [esi]
1001e914:	push   esi
1001e915:	call   DWORD PTR [eax+0x8]
1001e918:	jmp    0x1001e8e0
1001e91a:	push   DWORD PTR [ebp-0x20]
1001e91d:	push   0xffffffeb
1001e91f:	push   DWORD PTR [ebp+0x8]
1001e922:	call   DWORD PTR ds:0x10066358
1001e928:	mov    BYTE PTR [ebp-0x4],0x2
1001e92c:	mov    eax,DWORD PTR [esi]
1001e92e:	push   esi
1001e92f:	call   DWORD PTR [eax+0x8]
1001e932:	mov    BYTE PTR [ebp-0x4],bl
1001e935:	mov    eax,DWORD PTR [ebp-0x14]
1001e938:	cmp    eax,ebx
1001e93a:	je     0x1001e942
1001e93c:	mov    ecx,DWORD PTR [eax]
1001e93e:	push   eax
1001e93f:	call   DWORD PTR [ecx+0x8]
1001e942:	push   edi
1001e943:	call   0x1001b365
1001e948:	pop    ecx
1001e949:	push   DWORD PTR [ebp+0x14]
1001e94c:	push   DWORD PTR [ebp+0x10]
1001e94f:	push   DWORD PTR [ebp+0xc]
1001e952:	push   DWORD PTR [ebp+0x8]
1001e955:	call   DWORD PTR ds:0x1006633c
1001e95b:	lea    esp,[ebp-0x38]
1001e95e:	call   0x10059b21
1001e963:	ret    0x10
1001e966:	push   0x20
1001e968:	mov    eax,0x100601a9
1001e96d:	call   0x10059a9e
1001e972:	mov    eax,DWORD PTR [ebp+0xc]
1001e975:	dec    eax
1001e976:	je     0x1001e9e8
1001e978:	sub    eax,0x81
1001e97d:	je     0x1001e9c8
1001e97f:	sub    eax,0x18e
1001e984:	jne    0x1001eba1
1001e98a:	cmp    DWORD PTR [ebp+0x10],0x1
1001e98e:	jne    0x1001eba1
1001e994:	mov    esi,DWORD PTR ds:0x10066310
1001e99a:	push   0xffffffec
1001e99c:	push   DWORD PTR [ebp+0x14]
1001e99f:	call   esi
1001e9a1:	mov    ebx,0x10000
1001e9a6:	test   ebx,eax
1001e9a8:	je     0x1001eba1
1001e9ae:	push   0xffffffec
1001e9b0:	push   DWORD PTR [ebp+0x8]
1001e9b3:	call   esi
1001e9b5:	or     eax,ebx
1001e9b7:	push   eax
1001e9b8:	push   0xffffffec
1001e9ba:	push   DWORD PTR [ebp+0x8]
1001e9bd:	call   DWORD PTR ds:0x10066358
1001e9c3:	jmp    0x1001eba1
1001e9c8:	push   0xffffffeb
1001e9ca:	push   DWORD PTR [ebp+0x8]
1001e9cd:	call   DWORD PTR ds:0x10066310
1001e9d3:	test   eax,eax
1001e9d5:	je     0x1001e9dd
1001e9d7:	mov    ecx,DWORD PTR [eax]
1001e9d9:	push   eax
1001e9da:	call   DWORD PTR [ecx+0x8]
1001e9dd:	call   DWORD PTR ds:0x10066410
1001e9e3:	jmp    0x1001eba1
1001e9e8:	xor    edi,edi
1001e9ea:	push   edi
1001e9eb:	call   DWORD PTR ds:0x10066414
1001e9f1:	push   DWORD PTR [ebp+0x8]
1001e9f4:	call   DWORD PTR ds:0x1006635c
1001e9fa:	mov    esi,eax
1001e9fc:	lea    eax,[esi+esi*1+0xa]
1001ea00:	cmp    eax,0x400
1001ea05:	ja     0x1001ea1a
1001ea07:	call   0x1004b6f0
1001ea0c:	mov    eax,esp
1001ea0e:	cmp    eax,edi
1001ea10:	je     0x1001ea2e
1001ea12:	mov    DWORD PTR [eax],0xcccc
1001ea18:	jmp    0x1001ea2b
1001ea1a:	push   eax
1001ea1b:	call   0x10044f8d
1001ea20:	cmp    eax,edi
1001ea22:	pop    ecx
1001ea23:	je     0x1001ea2e
1001ea25:	mov    DWORD PTR [eax],0xdddd
1001ea2b:	add    eax,0x8
1001ea2e:	mov    DWORD PTR [ebp-0x18],eax
1001ea31:	mov    DWORD PTR [ebp-0x28],eax
1001ea34:	cmp    eax,edi
1001ea36:	mov    DWORD PTR [ebp-0x4],edi
1001ea39:	jne    0x1001ea4a
1001ea3b:	push   edi
1001ea3c:	call   0x1001b365
1001ea41:	pop    ecx
1001ea42:	or     eax,0xffffffff
1001ea45:	jmp    0x1001ebb3
1001ea4a:	inc    esi
1001ea4b:	push   esi
1001ea4c:	push   eax
1001ea4d:	push   DWORD PTR [ebp+0x8]
1001ea50:	call   DWORD PTR ds:0x10066314
1001ea56:	push   0x1006d18c
1001ea5b:	push   DWORD PTR [ebp+0x8]
1001ea5e:	call   DWORD PTR ds:0x10066334
1001ea64:	mov    eax,DWORD PTR [ebp+0x14]
1001ea67:	xor    ebx,ebx
1001ea69:	cmp    eax,edi
1001ea6b:	mov    DWORD PTR [ebp-0x24],edi
1001ea6e:	je     0x1001ea79
1001ea70:	mov    eax,DWORD PTR [eax]
1001ea72:	cmp    eax,edi
1001ea74:	je     0x1001ea79
1001ea76:	movzx  ebx,WORD PTR [eax]
1001ea79:	push   ebx
1001ea7a:	push   0x42
1001ea7c:	call   DWORD PTR ds:0x10066148
1001ea82:	mov    esi,eax
1001ea84:	mov    DWORD PTR [ebp-0x14],edi
1001ea87:	cmp    esi,edi
1001ea89:	mov    BYTE PTR [ebp-0x4],0x1
1001ea8d:	je     0x1001eac1
1001ea8f:	cmp    ebx,edi
1001ea91:	je     0x1001eac1
1001ea93:	push   esi
1001ea94:	call   DWORD PTR ds:0x10066144
1001ea9a:	mov    ecx,DWORD PTR [ebp+0x14]
1001ea9d:	mov    ecx,DWORD PTR [ecx]
1001ea9f:	inc    ecx
1001eaa0:	push   ebx
1001eaa1:	inc    ecx
1001eaa2:	push   ecx
1001eaa3:	push   ebx
1001eaa4:	push   eax
1001eaa5:	call   0x10014338
1001eaaa:	add    esp,0x10
1001eaad:	push   esi
1001eaae:	call   DWORD PTR ds:0x10066154
1001eab4:	lea    eax,[ebp-0x14]
1001eab7:	push   eax
1001eab8:	push   0x1
1001eaba:	push   esi
1001eabb:	call   DWORD PTR ds:0x1006641c
1001eac1:	mov    DWORD PTR [ebp-0x20],edi
1001eac4:	lea    eax,[ebp-0x20]
1001eac7:	mov    BYTE PTR [ebp-0x4],0x2
1001eacb:	mov    ecx,DWORD PTR [ebp-0x14]
1001eace:	push   eax
1001eacf:	call   0x1001b99a
1001ead4:	cmp    eax,edi
1001ead6:	pop    ecx
1001ead7:	jge    0x1001eafb
1001ead9:	push   DWORD PTR [ebp-0x20]
1001eadc:	call   DWORD PTR ds:0x100662b4
1001eae2:	mov    BYTE PTR [ebp-0x4],0x0
1001eae6:	mov    eax,DWORD PTR [ebp-0x14]
1001eae9:	cmp    eax,edi
1001eaeb:	je     0x1001eaf3
1001eaed:	mov    ecx,DWORD PTR [eax]
1001eaef:	push   eax
1001eaf0:	call   DWORD PTR [ecx+0x8]
1001eaf3:	push   DWORD PTR [ebp-0x18]
1001eaf6:	jmp    0x1001ea3c
1001eafb:	call   DWORD PTR ds:0x1007efec
1001eb01:	mov    DWORD PTR [ebp-0x2c],edi
1001eb04:	mov    DWORD PTR [ebp-0x1c],edi
1001eb07:	mov    BYTE PTR [ebp-0x4],0x4
1001eb0b:	mov    edi,DWORD PTR [ebp-0x20]
1001eb0e:	push   edi
1001eb0f:	push   DWORD PTR [ebp-0x14]
1001eb12:	lea    ebx,[ebp-0x1c]
1001eb15:	push   DWORD PTR [ebp+0x8]
1001eb18:	push   DWORD PTR [ebp-0x18]
1001eb1b:	call   0x1001ebbe
1001eb20:	xor    ebx,ebx
1001eb22:	cmp    eax,ebx
1001eb24:	jge    0x1001eb48
1001eb26:	mov    BYTE PTR [ebp-0x4],0x3
1001eb2a:	mov    eax,DWORD PTR [ebp-0x1c]
1001eb2d:	cmp    eax,ebx
1001eb2f:	je     0x1001eb37
1001eb31:	mov    ecx,DWORD PTR [eax]
1001eb33:	push   eax
1001eb34:	call   DWORD PTR [ecx+0x8]
1001eb37:	push   edi
1001eb38:	call   DWORD PTR ds:0x100662b4
1001eb3e:	mov    BYTE PTR [ebp-0x4],bl
1001eb41:	mov    eax,DWORD PTR [ebp-0x14]
1001eb44:	cmp    eax,ebx
1001eb46:	jmp    0x1001eaeb
1001eb48:	mov    esi,DWORD PTR [ebp-0x1c]
1001eb4b:	mov    eax,DWORD PTR [esi]
1001eb4d:	lea    ecx,[ebp-0x24]
1001eb50:	push   ecx
1001eb51:	push   0x10070324
1001eb56:	push   esi
1001eb57:	call   DWORD PTR [eax]
1001eb59:	cmp    eax,ebx
1001eb5b:	jge    0x1001eb69
1001eb5d:	mov    BYTE PTR [ebp-0x4],0x3
1001eb61:	mov    eax,DWORD PTR [esi]
1001eb63:	push   esi
1001eb64:	call   DWORD PTR [eax+0x8]
1001eb67:	jmp    0x1001eb37
1001eb69:	push   DWORD PTR [ebp-0x24]
1001eb6c:	push   0xffffffeb
1001eb6e:	push   DWORD PTR [ebp+0x8]
1001eb71:	call   DWORD PTR ds:0x10066358
1001eb77:	mov    BYTE PTR [ebp-0x4],0x3
1001eb7b:	mov    eax,DWORD PTR [esi]
1001eb7d:	push   esi
1001eb7e:	call   DWORD PTR [eax+0x8]
1001eb81:	push   edi
1001eb82:	call   DWORD PTR ds:0x100662b4
1001eb88:	mov    BYTE PTR [ebp-0x4],bl
1001eb8b:	mov    eax,DWORD PTR [ebp-0x14]
1001eb8e:	cmp    eax,ebx
1001eb90:	je     0x1001eb98
1001eb92:	mov    ecx,DWORD PTR [eax]
1001eb94:	push   eax
1001eb95:	call   DWORD PTR [ecx+0x8]
1001eb98:	push   DWORD PTR [ebp-0x18]
1001eb9b:	call   0x1001b365
1001eba0:	pop    ecx
1001eba1:	push   DWORD PTR [ebp+0x14]
1001eba4:	push   DWORD PTR [ebp+0x10]
1001eba7:	push   DWORD PTR [ebp+0xc]
1001ebaa:	push   DWORD PTR [ebp+0x8]
1001ebad:	call   DWORD PTR ds:0x1006633c
1001ebb3:	lea    esp,[ebp-0x3c]
1001ebb6:	call   0x10059b21
1001ebbb:	ret    0x10
1001ebbe:	push   ebp
1001ebbf:	mov    ebp,esp
1001ebc1:	sub    esp,0xc
1001ebc4:	push   esi
1001ebc5:	push   edi
1001ebc6:	call   0x1001ec6e
1001ebcb:	lea    eax,[ebp-0x4]
1001ebce:	xor    edi,edi
1001ebd0:	push   eax
1001ebd1:	mov    DWORD PTR [ebp-0x4],edi
1001ebd4:	mov    DWORD PTR [ebp-0xc],edi
1001ebd7:	call   0x100200df
1001ebdc:	mov    esi,eax
1001ebde:	cmp    esi,edi
1001ebe0:	jl     0x1001ec38
1001ebe2:	mov    eax,DWORD PTR [ebp-0x4]
1001ebe5:	lea    edx,[ebp-0x8]
1001ebe8:	push   edx
1001ebe9:	push   0x10070334
1001ebee:	mov    DWORD PTR [ebp-0x8],edi
1001ebf1:	mov    ecx,DWORD PTR [eax]
1001ebf3:	push   eax
1001ebf4:	call   DWORD PTR [ecx]
1001ebf6:	push   DWORD PTR [ebp+0x8]
1001ebf9:	lea    esi,[ebp+0x8]
1001ebfc:	call   0x1001b380
1001ec01:	push   DWORD PTR [ebp+0x14]
1001ec04:	mov    eax,DWORD PTR [ebp-0x8]
1001ec07:	mov    ecx,DWORD PTR [eax]
1001ec09:	push   edi
1001ec0a:	push   0x1006b858
1001ec0f:	lea    edx,[ebp-0xc]
1001ec12:	push   edx
1001ec13:	push   DWORD PTR [ebp+0x10]
1001ec16:	push   DWORD PTR [ebp+0xc]
1001ec19:	push   DWORD PTR [ebp+0x8]
1001ec1c:	push   eax
1001ec1d:	call   DWORD PTR [ecx+0x28]
1001ec20:	push   DWORD PTR [ebp+0x8]
1001ec23:	mov    esi,eax
1001ec25:	call   DWORD PTR ds:0x100662b4
1001ec2b:	mov    eax,DWORD PTR [ebp-0x8]
1001ec2e:	cmp    eax,edi
1001ec30:	je     0x1001ec38
1001ec32:	mov    ecx,DWORD PTR [eax]
1001ec34:	push   eax
1001ec35:	call   DWORD PTR [ecx+0x8]
1001ec38:	cmp    ebx,edi
1001ec3a:	je     0x1001ec4c
1001ec3c:	cmp    esi,edi
1001ec3e:	jl     0x1001ec4a
1001ec40:	mov    eax,DWORD PTR [ebp-0x4]
1001ec43:	mov    DWORD PTR [ebx],eax
1001ec45:	mov    DWORD PTR [ebp-0x4],edi
1001ec48:	jmp    0x1001ec4c
1001ec4a:	mov    DWORD PTR [ebx],edi
1001ec4c:	mov    eax,DWORD PTR [ebp-0xc]
1001ec4f:	cmp    eax,edi
1001ec51:	je     0x1001ec59
1001ec53:	mov    ecx,DWORD PTR [eax]
1001ec55:	push   eax
1001ec56:	call   DWORD PTR [ecx+0x8]
1001ec59:	mov    eax,DWORD PTR [ebp-0x4]
1001ec5c:	cmp    eax,edi
1001ec5e:	je     0x1001ec66
1001ec60:	mov    ecx,DWORD PTR [eax]
1001ec62:	push   eax
1001ec63:	call   DWORD PTR [ecx+0x8]
1001ec66:	pop    edi
1001ec67:	mov    eax,esi
1001ec69:	pop    esi
1001ec6a:	leave  
1001ec6b:	ret    0x10
1001ec6e:	push   ebp
1001ec6f:	mov    ebp,esp
1001ec71:	and    esp,0xfffffff8
1001ec74:	sub    esp,0x3c
1001ec77:	push   ebx
1001ec78:	push   esi
1001ec79:	mov    eax,0x10080a40
1001ec7e:	push   edi
1001ec7f:	push   eax
1001ec80:	mov    DWORD PTR [esp+0x14],eax
1001ec84:	call   DWORD PTR ds:0x100660f0
1001ec8a:	mov    esi,DWORD PTR ds:0x100662f4
1001ec90:	push   0x10070528
1001ec95:	mov    BYTE PTR [esp+0x18],0x1
1001ec9a:	call   esi
1001ec9c:	push   0x10070544
1001eca1:	mov    ds:0x10080fd8,eax
1001eca6:	call   esi
1001eca8:	push   0x30
1001ecaa:	pop    edi
1001ecab:	mov    ds:0x10080fdc,eax
1001ecb0:	lea    eax,[esp+0x18]
1001ecb4:	push   eax
1001ecb5:	mov    esi,0x10070504
1001ecba:	push   esi
1001ecbb:	push   DWORD PTR ds:0x10080a04
1001ecc1:	mov    DWORD PTR [esp+0x24],edi
1001ecc5:	call   DWORD PTR ds:0x100662c4
1001eccb:	xor    ebx,ebx
1001eccd:	cmp    eax,ebx
1001eccf:	jne    0x1001ed48
1001ecd1:	mov    eax,ds:0x10080a04
1001ecd6:	push   0x7f00
1001ecdb:	push   ebx
1001ecdc:	mov    DWORD PTR [esp+0x20],edi
1001ece0:	mov    DWORD PTR [esp+0x24],0x8
1001ece8:	mov    DWORD PTR [esp+0x28],0x1001e74b
1001ecf0:	mov    DWORD PTR [esp+0x2c],ebx
1001ecf4:	mov    DWORD PTR [esp+0x30],ebx
1001ecf8:	mov    DWORD PTR [esp+0x34],eax
1001ecfc:	mov    DWORD PTR [esp+0x38],ebx
1001ed00:	call   DWORD PTR ds:0x10066364
1001ed06:	mov    DWORD PTR [esp+0x34],eax
1001ed0a:	lea    eax,[esp+0x18]
1001ed0e:	push   eax
1001ed0f:	mov    DWORD PTR [esp+0x3c],0x6
1001ed17:	mov    DWORD PTR [esp+0x40],ebx
1001ed1b:	mov    DWORD PTR [esp+0x44],esi
1001ed1f:	mov    DWORD PTR [esp+0x48],ebx
1001ed23:	call   DWORD PTR ds:0x100662bc
1001ed29:	movzx  eax,ax
1001ed2c:	cmp    ax,bx
1001ed2f:	mov    DWORD PTR [esp+0xc],eax
1001ed33:	je     0x1001edfb
1001ed39:	lea    eax,[esp+0xc]
1001ed3d:	push   eax
1001ed3e:	mov    esi,0x10080a5c
1001ed43:	call   0x1001fceb
1001ed48:	push   edi
1001ed49:	lea    eax,[esp+0x1c]
1001ed4d:	push   ebx
1001ed4e:	push   eax
1001ed4f:	call   0x10045c00
1001ed54:	add    esp,0xc
1001ed57:	lea    eax,[esp+0x18]
1001ed5b:	push   eax
1001ed5c:	mov    esi,0x10070608
1001ed61:	push   esi
1001ed62:	push   DWORD PTR ds:0x10080a04
1001ed68:	mov    DWORD PTR [esp+0x24],edi
1001ed6c:	call   DWORD PTR ds:0x100662c4
1001ed72:	cmp    eax,ebx
1001ed74:	mov    DWORD PTR [esp+0xc],eax
1001ed78:	jne    0x1001edff
1001ed7e:	mov    eax,ds:0x10080a04
1001ed83:	push   0x7f00
1001ed88:	push   ebx
1001ed89:	mov    DWORD PTR [esp+0x20],edi
1001ed8d:	mov    DWORD PTR [esp+0x24],0x8
1001ed95:	mov    DWORD PTR [esp+0x28],0x1001e966
1001ed9d:	mov    DWORD PTR [esp+0x2c],ebx
1001eda1:	mov    DWORD PTR [esp+0x30],ebx
1001eda5:	mov    DWORD PTR [esp+0x34],eax
1001eda9:	mov    DWORD PTR [esp+0x38],ebx
1001edad:	call   DWORD PTR ds:0x10066364
1001edb3:	mov    DWORD PTR [esp+0x34],eax
1001edb7:	lea    eax,[esp+0x18]
1001edbb:	push   eax
1001edbc:	mov    DWORD PTR [esp+0x3c],0x6
1001edc4:	mov    DWORD PTR [esp+0x40],ebx
1001edc8:	mov    DWORD PTR [esp+0x44],esi
1001edcc:	mov    DWORD PTR [esp+0x48],ebx
1001edd0:	call   DWORD PTR ds:0x100662bc
1001edd6:	movzx  eax,ax
1001edd9:	cmp    ax,bx
1001eddc:	mov    DWORD PTR [esp+0xc],eax
1001ede0:	je     0x1001edfb
1001ede2:	lea    eax,[esp+0xc]
1001ede6:	push   eax
1001ede7:	mov    esi,0x10080a5c
1001edec:	call   0x1001fceb
1001edf1:	mov    DWORD PTR [esp+0xc],0x1
1001edf9:	jmp    0x1001edff
1001edfb:	mov    DWORD PTR [esp+0xc],ebx
1001edff:	lea    ecx,[esp+0x10]
1001ee03:	call   0x10010c9f
1001ee08:	mov    eax,DWORD PTR [esp+0xc]
1001ee0c:	pop    edi
1001ee0d:	pop    esi
1001ee0e:	pop    ebx
1001ee0f:	mov    esp,ebp
1001ee11:	pop    ebp
1001ee12:	ret    
1001ee13:	cmp    DWORD PTR [eax+0x18],0x8
1001ee17:	push   esi
1001ee18:	push   edi
1001ee19:	jb     0x1001ee20
1001ee1b:	mov    esi,DWORD PTR [eax+0x4]
1001ee1e:	jmp    0x1001ee23
1001ee20:	lea    esi,[eax+0x4]
1001ee23:	push   esi
1001ee24:	call   0x100436f3
1001ee29:	pop    ecx
1001ee2a:	mov    ecx,DWORD PTR [ebx+0x14]
1001ee2d:	mov    edi,eax
1001ee2f:	push   esi
1001ee30:	mov    eax,ebx
1001ee32:	call   0x100065cf
1001ee37:	xor    ecx,ecx
1001ee39:	test   eax,eax
1001ee3b:	setl   cl
1001ee3e:	pop    edi
1001ee3f:	mov    al,cl
1001ee41:	pop    esi
1001ee42:	ret    
1001ee43:	push   ebp
1001ee44:	mov    ebp,esp
1001ee46:	sub    esp,0x20
1001ee49:	push   ebx
1001ee4a:	push   esi
1001ee4b:	push   edi
1001ee4c:	push   0xffffffff
1001ee4e:	push   DWORD PTR ds:0x10080f50
1001ee54:	xor    ebx,ebx
1001ee56:	call   DWORD PTR ds:0x10066084
1001ee5c:	test   eax,eax
1001ee5e:	jne    0x1001ef02
1001ee64:	lea    eax,[ebp+0x8]
1001ee67:	push   eax
1001ee68:	lea    eax,[ebp-0x14]
1001ee6b:	push   eax
1001ee6c:	call   0x10020826
1001ee71:	mov    eax,ds:0x10080f58
1001ee76:	lea    edi,[ebp-0xc]
1001ee79:	lea    esi,[ebp-0x14]
1001ee7c:	mov    DWORD PTR [ebp-0x8],eax
1001ee7f:	mov    DWORD PTR [ebp-0xc],0x10080f54
1001ee86:	call   0x10004ada
1001ee8b:	test   al,al
1001ee8d:	je     0x1001eef6
1001ee8f:	mov    esi,DWORD PTR ds:0x10066130
1001ee95:	push   ebx
1001ee96:	push   ebx
1001ee97:	push   ebx
1001ee98:	push   ebx
1001ee99:	mov    BYTE PTR [ebp-0x10],bl
1001ee9c:	mov    DWORD PTR [ebp-0x1c],0x1388
1001eea3:	call   esi
1001eea5:	push   ebx
1001eea6:	push   ebx
1001eea7:	push   ebx
1001eea8:	push   ebx
1001eea9:	mov    DWORD PTR [ebp-0x14],eax
1001eeac:	call   esi
1001eeae:	lea    ebx,[ebp+0x8]
1001eeb1:	mov    DWORD PTR [ebp-0x18],eax
1001eeb4:	call   0x100204f3
1001eeb9:	mov    edi,eax
1001eebb:	lea    esi,[ebp-0x1c]
1001eebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001eebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001eec0:	push   0x2
1001eec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001eec3:	xor    ebx,ebx
1001eec5:	push   ebx
1001eec6:	push   ebx
1001eec7:	push   DWORD PTR [ebp+0xc]
1001eeca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001eecb:	mov    esi,DWORD PTR ds:0x10066108
1001eed1:	call   esi
1001eed3:	push   eax
1001eed4:	push   DWORD PTR [ebp-0x18]
1001eed7:	call   esi
1001eed9:	mov    edi,DWORD PTR ds:0x1006613c
1001eedf:	push   eax
1001eee0:	call   edi
1001eee2:	push   0x2
1001eee4:	push   ebx
1001eee5:	push   ebx
1001eee6:	push   DWORD PTR [ebp+0x10]
1001eee9:	call   esi
1001eeeb:	push   eax
1001eeec:	push   DWORD PTR [ebp-0x14]
1001eeef:	call   esi
1001eef1:	push   eax
1001eef2:	call   edi
1001eef4:	mov    bl,0x1
1001eef6:	push   DWORD PTR ds:0x10080f50
1001eefc:	call   DWORD PTR ds:0x10066094
1001ef02:	pop    edi
1001ef03:	pop    esi
1001ef04:	mov    al,bl
1001ef06:	pop    ebx
1001ef07:	leave  
1001ef08:	ret    
1001ef09:	push   ebp
1001ef0a:	mov    ebp,esp
1001ef0c:	sub    esp,0x10
1001ef0f:	push   0xffffffff
1001ef11:	push   DWORD PTR ds:0x10080f50
1001ef17:	call   DWORD PTR ds:0x10066084
1001ef1d:	test   eax,eax
1001ef1f:	jne    0x1001ef75
1001ef21:	push   esi
1001ef22:	push   edi
1001ef23:	lea    eax,[ebp+0x8]
1001ef26:	push   eax
1001ef27:	lea    eax,[ebp-0x8]
1001ef2a:	push   eax
1001ef2b:	call   0x10020826
1001ef30:	mov    eax,ds:0x10080f58
1001ef35:	lea    edi,[ebp-0x10]
1001ef38:	lea    esi,[ebp-0x8]
1001ef3b:	mov    DWORD PTR [ebp-0xc],eax
1001ef3e:	mov    DWORD PTR [ebp-0x10],0x10080f54
1001ef45:	call   0x10004ada
1001ef4a:	test   al,al
1001ef4c:	jne    0x1001ef67
1001ef4e:	call   0x1002088e
1001ef53:	mov    ecx,DWORD PTR [ebp+0xc]
1001ef56:	mov    DWORD PTR [eax+0x4],ecx
1001ef59:	call   0x1002088e
1001ef5e:	push   DWORD PTR [eax+0x8]
1001ef61:	call   DWORD PTR ds:0x10066110
1001ef67:	push   DWORD PTR ds:0x10080f50
1001ef6d:	call   DWORD PTR ds:0x10066094
1001ef73:	pop    edi
1001ef74:	pop    esi
1001ef75:	leave  
1001ef76:	ret    
1001ef77:	push   ebp
1001ef78:	mov    ebp,esp
1001ef7a:	sub    esp,0x14
1001ef7d:	push   esi
1001ef7e:	push   edi
1001ef7f:	push   0xffffffff
1001ef81:	push   DWORD PTR ds:0x10080f50
1001ef87:	call   DWORD PTR ds:0x10066084
1001ef8d:	test   eax,eax
1001ef8f:	jne    0x1001efd1
1001ef91:	lea    eax,[ebp+0x8]
1001ef94:	push   eax
1001ef95:	lea    eax,[ebp-0x14]
1001ef98:	push   eax
1001ef99:	call   0x10020826
1001ef9e:	mov    eax,ds:0x10080f58
1001efa3:	lea    edi,[ebp-0xc]
1001efa6:	lea    esi,[ebp-0x14]
1001efa9:	mov    DWORD PTR [ebp-0x8],eax
1001efac:	mov    DWORD PTR [ebp-0xc],0x10080f54
1001efb3:	call   0x10004ada
1001efb8:	test   al,al
1001efba:	jne    0x1001efc5
1001efbc:	call   0x1002088e
1001efc1:	mov    BYTE PTR [eax+0x10],0x1
1001efc5:	push   DWORD PTR ds:0x10080f50
1001efcb:	call   DWORD PTR ds:0x10066094
1001efd1:	pop    edi
1001efd2:	pop    esi
1001efd3:	leave  
1001efd4:	ret    
1001efd5:	push   ebp
1001efd6:	mov    ebp,esp
1001efd8:	and    esp,0xfffffff8
1001efdb:	sub    esp,0x14
1001efde:	push   ebx
1001efdf:	push   esi
1001efe0:	push   edi
1001efe1:	push   0xffffffff
1001efe3:	push   DWORD PTR ds:0x10080f50
1001efe9:	xor    bl,bl
1001efeb:	call   DWORD PTR ds:0x10066084
1001eff1:	test   eax,eax
1001eff3:	jne    0x1001f065
1001eff5:	lea    eax,[ebp+0x8]
1001eff8:	push   eax
1001eff9:	lea    eax,[esp+0x14]
1001effd:	push   eax
1001effe:	call   0x10020826
1001f003:	mov    eax,ds:0x10080f58
1001f008:	lea    edi,[esp+0x18]
1001f00c:	lea    esi,[esp+0x10]
1001f010:	mov    DWORD PTR [esp+0x1c],eax
1001f014:	mov    DWORD PTR [esp+0x18],0x10080f54
1001f01c:	call   0x10004ada
1001f021:	test   al,al
1001f023:	jne    0x1001f059
1001f025:	call   0x1002088e
1001f02a:	mov    bl,BYTE PTR [eax+0x10]
1001f02d:	call   0x1002088e
1001f032:	push   DWORD PTR [eax+0x8]
1001f035:	mov    edi,DWORD PTR ds:0x10066070
1001f03b:	call   edi
1001f03d:	call   0x1002088e
1001f042:	push   DWORD PTR [eax+0xc]
1001f045:	call   edi
1001f047:	push   DWORD PTR [esp+0x14]
1001f04b:	lea    eax,[esp+0x1c]
1001f04f:	push   DWORD PTR [esp+0x14]
1001f053:	push   eax
1001f054:	call   0x100205b3
1001f059:	push   DWORD PTR ds:0x10080f50
1001f05f:	call   DWORD PTR ds:0x10066094
1001f065:	pop    edi
1001f066:	pop    esi
1001f067:	mov    al,bl
1001f069:	pop    ebx
1001f06a:	mov    esp,ebp
1001f06c:	pop    ebp
1001f06d:	ret    
1001f06e:	push   esi
1001f06f:	xor    esi,esi
1001f071:	mov    eax,DWORD PTR [esp+0xc]
1001f075:	mov    ecx,DWORD PTR [esi+0x1007f824]
1001f07b:	call   0x100102bf
1001f080:	test   eax,eax
1001f082:	jne    0x1001f091
1001f084:	add    esi,0x4
1001f087:	cmp    esi,0x4
1001f08a:	jb     0x1001f071
1001f08c:	inc    eax
1001f08d:	pop    esi
1001f08e:	ret    0x8
1001f091:	xor    eax,eax
1001f093:	jmp    0x1001f08d
1001f095:	mov    ecx,DWORD PTR [esp+0x4]
1001f099:	mov    edx,DWORD PTR [esp+0x8]
1001f09d:	add    ecx,0xffffffe4
1001f0a0:	call   0x10020169
1001f0a5:	neg    eax
1001f0a7:	sbb    eax,eax
1001f0a9:	and    eax,0x7fffbffb
1001f0ae:	add    eax,0x80004005
1001f0b3:	ret    0x8
1001f0b6:	cmp    DWORD PTR [esp+0x8],0xffffea78
1001f0be:	jne    0x1001f0d4
1001f0c0:	mov    eax,DWORD PTR [esp+0x1c]
1001f0c4:	mov    WORD PTR [eax],0x3
1001f0c9:	mov    DWORD PTR [eax+0x8],0x60009f80
1001f0d0:	xor    eax,eax
1001f0d2:	jmp    0x1001f0d9
1001f0d4:	mov    eax,0x80020003
1001f0d9:	ret    0x24
1001f0dc:	push   ebp
1001f0dd:	mov    ebp,esp
1001f0df:	and    esp,0xfffffff8
1001f0e2:	push   0xffffffff
1001f0e4:	push   0x10061beb
1001f0e9:	mov    eax,fs:0x0
1001f0ef:	push   eax
1001f0f0:	sub    esp,0x20
1001f0f3:	push   ebx
1001f0f4:	push   esi
1001f0f5:	push   edi
1001f0f6:	mov    eax,ds:0x1007e030
1001f0fb:	xor    eax,esp
1001f0fd:	push   eax
1001f0fe:	lea    eax,[esp+0x30]
1001f102:	mov    fs:0x0,eax
1001f108:	call   DWORD PTR ds:0x1007efec
1001f10e:	push   0x6861b080
1001f113:	push   0x100705e0
1001f118:	call   0x10004246
1001f11d:	push   0x735a4faa
1001f122:	push   eax
1001f123:	call   0x10004246
1001f128:	push   eax
1001f129:	push   0x8
1001f12b:	push   0x1006e184
1001f130:	call   0x10004417
1001f135:	add    esp,0x1c
1001f138:	push   eax
1001f139:	push   DWORD PTR [ebp+0xc]
1001f13c:	call   0x10046663
1001f141:	test   eax,eax
1001f143:	pop    ecx
1001f144:	pop    ecx
1001f145:	push   DWORD PTR [ebp+0xc]
1001f148:	jne    0x1001f35b
1001f14e:	call   0x1002041c
1001f153:	mov    edi,eax
1001f155:	xor    esi,esi
1001f157:	cmp    edi,esi
1001f159:	mov    DWORD PTR [esp+0x28],edi
1001f15d:	je     0x1001f165
1001f15f:	mov    eax,DWORD PTR [edi]
1001f161:	push   edi
1001f162:	call   DWORD PTR [eax+0x4]
1001f165:	mov    DWORD PTR [esp+0x38],esi
1001f169:	mov    DWORD PTR [esp+0x20],esi
1001f16d:	call   0x1001ec6e
1001f172:	push   ecx
1001f173:	mov    eax,esp
1001f175:	mov    DWORD PTR [esp+0x28],esp
1001f179:	push   ecx
1001f17a:	mov    DWORD PTR [eax],esi
1001f17c:	mov    eax,esp
1001f17e:	mov    DWORD PTR [eax],esi
1001f180:	lea    eax,[esp+0x28]
1001f184:	mov    DWORD PTR [esp+0x2c],esp
1001f188:	push   eax
1001f189:	call   0x1001fd48
1001f18e:	cmp    eax,esi
1001f190:	jne    0x1001f1ab
1001f192:	or     DWORD PTR [esp+0x38],0xffffffff
1001f197:	cmp    edi,esi
1001f199:	je     0x1001f1a1
1001f19b:	mov    eax,DWORD PTR [edi]
1001f19d:	push   edi
1001f19e:	call   DWORD PTR [eax+0x8]
1001f1a1:	mov    eax,0x80004005
1001f1a6:	jmp    0x1001f373
1001f1ab:	mov    DWORD PTR [esp+0x10],esi
1001f1af:	push   0x1006b898
1001f1b4:	lea    eax,[esp+0x24]
1001f1b8:	push   eax
1001f1b9:	lea    ebx,[esp+0x18]
1001f1bd:	mov    BYTE PTR [esp+0x40],0x1
1001f1c2:	call   0x1001fd91
1001f1c7:	mov    esi,eax
1001f1c9:	xor    ebx,ebx
1001f1cb:	cmp    esi,ebx
1001f1cd:	jge    0x1001f1f7
1001f1cf:	mov    BYTE PTR [esp+0x38],bl
1001f1d3:	mov    eax,DWORD PTR [esp+0x10]
1001f1d7:	cmp    eax,ebx
1001f1d9:	je     0x1001f1e1
1001f1db:	mov    ecx,DWORD PTR [eax]
1001f1dd:	push   eax
1001f1de:	call   DWORD PTR [ecx+0x8]
1001f1e1:	or     DWORD PTR [esp+0x38],0xffffffff
1001f1e6:	cmp    edi,ebx
1001f1e8:	je     0x1001f1f0
1001f1ea:	mov    eax,DWORD PTR [edi]
1001f1ec:	push   edi
1001f1ed:	call   DWORD PTR [eax+0x8]
1001f1f0:	mov    eax,esi
1001f1f2:	jmp    0x1001f373
1001f1f7:	mov    DWORD PTR [esp+0x18],ebx
1001f1fb:	mov    DWORD PTR [esp+0x14],ebx
1001f1ff:	lea    ecx,[esp+0x18]
1001f203:	push   ecx
1001f204:	push   0x1006b888
1001f209:	mov    BYTE PTR [esp+0x40],0x3
1001f20e:	mov    eax,DWORD PTR [edi]
1001f210:	push   edi
1001f211:	call   DWORD PTR [eax]
1001f213:	mov    esi,eax
1001f215:	cmp    esi,ebx
1001f217:	jge    0x1001f258
1001f219:	mov    BYTE PTR [esp+0x38],0x2
1001f21e:	mov    eax,DWORD PTR [esp+0x14]
1001f222:	cmp    eax,ebx
1001f224:	je     0x1001f22c
1001f226:	mov    ecx,DWORD PTR [eax]
1001f228:	push   eax
1001f229:	call   DWORD PTR [ecx+0x8]
1001f22c:	mov    BYTE PTR [esp+0x38],0x1
1001f231:	mov    eax,DWORD PTR [esp+0x18]
1001f235:	cmp    eax,ebx
1001f237:	je     0x1001f23f
1001f239:	mov    ecx,DWORD PTR [eax]
1001f23b:	push   eax
1001f23c:	call   DWORD PTR [ecx+0x8]
1001f23f:	mov    BYTE PTR [esp+0x38],bl
1001f243:	mov    eax,DWORD PTR [esp+0x10]
1001f247:	cmp    eax,ebx
1001f249:	je     0x1001f251
1001f24b:	mov    ecx,DWORD PTR [eax]
1001f24d:	push   eax
1001f24e:	call   DWORD PTR [ecx+0x8]
1001f251:	or     DWORD PTR [esp+0x38],0xffffffff
1001f256:	jmp    0x1001f1ea
1001f258:	mov    eax,DWORD PTR [edi]
1001f25a:	lea    ecx,[esp+0x14]
1001f25e:	push   ecx
1001f25f:	push   0x1006b868
1001f264:	push   edi
1001f265:	call   DWORD PTR [eax]
1001f267:	mov    esi,eax
1001f269:	cmp    esi,ebx
1001f26b:	jl     0x1001f219
1001f26d:	mov    eax,DWORD PTR [esp+0x18]
1001f271:	push   DWORD PTR [esp+0x10]
1001f275:	mov    ecx,DWORD PTR [eax]
1001f277:	push   eax
1001f278:	call   DWORD PTR [ecx+0xc]
1001f27b:	mov    esi,eax
1001f27d:	cmp    esi,ebx
1001f27f:	jl     0x1001f219
1001f281:	mov    DWORD PTR [esp+0x1c],ebx
1001f285:	push   0x1006cc90
1001f28a:	lea    eax,[esp+0x24]
1001f28e:	push   eax
1001f28f:	lea    ebx,[esp+0x24]
1001f293:	mov    BYTE PTR [esp+0x40],0x4
1001f298:	call   0x1001fd91
1001f29d:	mov    esi,eax
1001f29f:	xor    ebx,ebx
1001f2a1:	cmp    esi,ebx
1001f2a3:	jge    0x1001f2c1
1001f2a5:	mov    BYTE PTR [esp+0x38],0x3
1001f2aa:	mov    eax,DWORD PTR [esp+0x1c]
1001f2ae:	cmp    eax,ebx
1001f2b0:	je     0x1001f219
1001f2b6:	mov    ecx,DWORD PTR [eax]
1001f2b8:	push   eax
1001f2b9:	call   DWORD PTR [ecx+0x8]
1001f2bc:	jmp    0x1001f219
1001f2c1:	lea    eax,[esp+0x24]
1001f2c5:	push   eax
1001f2c6:	call   0x10022159
1001f2cb:	mov    eax,DWORD PTR [esp+0x1c]
1001f2cf:	push   DWORD PTR [esp+0x24]
1001f2d3:	mov    ecx,DWORD PTR [eax]
1001f2d5:	push   eax
1001f2d6:	call   DWORD PTR [ecx+0x8c]
1001f2dc:	mov    esi,eax
1001f2de:	cmp    esi,ebx
1001f2e0:	jl     0x1001f2a5
1001f2e2:	mov    eax,DWORD PTR [esp+0x14]
1001f2e6:	mov    ecx,DWORD PTR [eax]
1001f2e8:	push   0xffffea78
1001f2ed:	push   eax
1001f2ee:	call   DWORD PTR [ecx+0x14]
1001f2f1:	mov    esi,eax
1001f2f3:	cmp    esi,ebx
1001f2f5:	jl     0x1001f2a5
1001f2f7:	push   DWORD PTR [esp+0x20]
1001f2fb:	call   DWORD PTR ds:0x10066304
1001f301:	mov    ecx,DWORD PTR [ebp+0x10]
1001f304:	mov    eax,edi
1001f306:	mov    DWORD PTR [ecx],eax
1001f308:	mov    BYTE PTR [esp+0x38],0x3
1001f30d:	mov    eax,DWORD PTR [esp+0x1c]
1001f311:	cmp    eax,ebx
1001f313:	mov    DWORD PTR [esp+0x28],ebx
1001f317:	je     0x1001f31f
1001f319:	mov    ecx,DWORD PTR [eax]
1001f31b:	push   eax
1001f31c:	call   DWORD PTR [ecx+0x8]
1001f31f:	mov    BYTE PTR [esp+0x38],0x2
1001f324:	mov    eax,DWORD PTR [esp+0x14]
1001f328:	cmp    eax,ebx
1001f32a:	je     0x1001f332
1001f32c:	mov    ecx,DWORD PTR [eax]
1001f32e:	push   eax
1001f32f:	call   DWORD PTR [ecx+0x8]
1001f332:	mov    BYTE PTR [esp+0x38],0x1
1001f337:	mov    eax,DWORD PTR [esp+0x18]
1001f33b:	cmp    eax,ebx
1001f33d:	je     0x1001f345
1001f33f:	mov    ecx,DWORD PTR [eax]
1001f341:	push   eax
1001f342:	call   DWORD PTR [ecx+0x8]
1001f345:	mov    BYTE PTR [esp+0x38],bl
1001f349:	mov    eax,DWORD PTR [esp+0x10]
1001f34d:	cmp    eax,ebx
1001f34f:	je     0x1001f357
1001f351:	mov    ecx,DWORD PTR [eax]
1001f353:	push   eax
1001f354:	call   DWORD PTR [ecx+0x8]
1001f357:	xor    eax,eax
1001f359:	jmp    0x1001f373
1001f35b:	call   0x1002041c
1001f360:	mov    ecx,DWORD PTR [ebp+0x10]
1001f363:	mov    DWORD PTR [ecx],eax
1001f365:	neg    eax
1001f367:	sbb    eax,eax
1001f369:	and    eax,0x7fffbffb
1001f36e:	add    eax,0x80004005
1001f373:	mov    ecx,DWORD PTR [esp+0x30]
1001f377:	mov    DWORD PTR fs:0x0,ecx
1001f37e:	pop    ecx
1001f37f:	pop    edi
1001f380:	pop    esi
1001f381:	pop    ebx
1001f382:	mov    esp,ebp
1001f384:	pop    ebp
1001f385:	ret    0xc
1001f388:	mov    edx,DWORD PTR [esp+0x4]
1001f38c:	push   DWORD PTR [esp+0x8]
1001f390:	mov    ecx,DWORD PTR [esp+0x10]
1001f394:	add    edx,0xffffffe4
1001f397:	call   0x10020302
1001f39c:	neg    eax
1001f39e:	sbb    eax,eax
1001f3a0:	and    eax,0x7fffbffb
1001f3a5:	add    eax,0x80004005
1001f3aa:	ret    0xc
1001f3ad:	push   ebp
1001f3ae:	mov    ebp,esp
1001f3b0:	mov    edx,DWORD PTR [ebp+0x8]
1001f3b3:	sub    esp,0x20
1001f3b6:	push   esi
1001f3b7:	xor    esi,esi
1001f3b9:	cmp    DWORD PTR [edx-0x10],esi
1001f3bc:	je     0x1001f3f1
1001f3be:	push   edi
1001f3bf:	push   0x7
1001f3c1:	pop    ecx
1001f3c2:	mov    WORD PTR [ebp-0x20],si
1001f3c6:	xor    eax,eax
1001f3c8:	lea    edi,[ebp-0x1e]
1001f3cb:	rep stos DWORD PTR es:[edi],eax
1001f3cd:	stos   WORD PTR es:[edi],ax
1001f3cf:	mov    eax,DWORD PTR [edx-0x14]
1001f3d2:	mov    ecx,DWORD PTR [eax]
1001f3d4:	lea    edx,[ebp-0x20]
1001f3d7:	push   edx
1001f3d8:	push   esi
1001f3d9:	push   0x42
1001f3db:	push   esi
1001f3dc:	push   esi
1001f3dd:	push   esi
1001f3de:	push   esi
1001f3df:	push   esi
1001f3e0:	push   DWORD PTR [ebp+0xc]
1001f3e3:	push   eax
1001f3e4:	call   DWORD PTR [ecx+0x14]
1001f3e7:	test   eax,eax
1001f3e9:	pop    edi
1001f3ea:	jl     0x1001f3f1
1001f3ec:	xor    eax,eax
1001f3ee:	inc    eax
1001f3ef:	jmp    0x1001f3f3
1001f3f1:	xor    eax,eax
1001f3f3:	neg    eax
1001f3f5:	sbb    eax,eax
1001f3f7:	and    eax,0x7fffbffb
1001f3fc:	add    eax,0x80004005
1001f401:	pop    esi
1001f402:	leave  
1001f403:	ret    0x8
1001f406:	push   ebp
1001f407:	mov    ebp,esp
1001f409:	mov    eax,DWORD PTR [ebp+0x8]
1001f40c:	mov    edx,DWORD PTR [eax-0x14]
1001f40f:	sub    esp,0x20
1001f412:	push   esi
1001f413:	xor    esi,esi
1001f415:	cmp    edx,esi
1001f417:	je     0x1001f467
1001f419:	push   edi
1001f41a:	push   0x7
1001f41c:	pop    ecx
1001f41d:	mov    WORD PTR [ebp-0x20],si
1001f421:	xor    eax,eax
1001f423:	lea    edi,[ebp-0x1e]
1001f426:	rep stos DWORD PTR es:[edi],eax
1001f428:	lea    ecx,[ebp-0x20]
1001f42b:	push   ecx
1001f42c:	lea    ecx,[ebp+0x8]
1001f42f:	push   ecx
1001f430:	push   esi
1001f431:	push   esi
1001f432:	push   esi
1001f433:	push   0x1006d18c
1001f438:	push   DWORD PTR [ebp+0x18]
1001f43b:	stos   WORD PTR es:[edi],ax
1001f43d:	push   DWORD PTR [ebp+0x14]
1001f440:	mov    DWORD PTR [ebp+0x8],esi
1001f443:	push   DWORD PTR [ebp+0x14]
1001f446:	mov    eax,DWORD PTR [edx]
1001f448:	push   DWORD PTR [ebp+0x10]
1001f44b:	push   DWORD PTR [ebp+0xc]
1001f44e:	push   edx
1001f44f:	call   DWORD PTR [eax+0x10]
1001f452:	push   DWORD PTR [ebp+0x8]
1001f455:	mov    edi,eax
1001f457:	call   DWORD PTR ds:0x100662b4
1001f45d:	cmp    edi,esi
1001f45f:	pop    edi
1001f460:	jl     0x1001f467
1001f462:	xor    eax,eax
1001f464:	inc    eax
1001f465:	jmp    0x1001f469
1001f467:	xor    eax,eax
1001f469:	neg    eax
1001f46b:	sbb    eax,eax
1001f46d:	and    eax,0x7fffbffb
1001f472:	add    eax,0x80004005
1001f477:	pop    esi
1001f478:	leave  
1001f479:	ret    0x14
1001f47c:	call   DWORD PTR ds:0x1007efec
1001f482:	push   0x0
1001f484:	push   0x1006d18c
1001f489:	push   DWORD PTR [esp+0x10]
1001f48d:	push   0x0
1001f48f:	call   DWORD PTR ds:0x10066328
1001f495:	xor    eax,eax
1001f497:	ret    0x8
1001f49a:	push   ebp
1001f49b:	mov    ebp,esp
1001f49d:	push   DWORD PTR [ebp+0x18]
1001f4a0:	mov    ecx,DWORD PTR [ebp+0x8]
1001f4a3:	push   DWORD PTR [ebp+0x14]
1001f4a6:	add    ecx,0xffffffe4
1001f4a9:	push   DWORD PTR [ebp+0x10]
1001f4ac:	push   DWORD PTR [ebp+0xc]
1001f4af:	call   0x1002047a
1001f4b4:	pop    ebp
1001f4b5:	ret    0x14
1001f4b8:	push   ebp
1001f4b9:	sub    esp,0x70
1001f4bc:	lea    ebp,[esp-0x4]
1001f4c0:	mov    eax,ds:0x1007e030
1001f4c5:	xor    eax,ebp
1001f4c7:	mov    DWORD PTR [ebp+0x70],eax
1001f4ca:	push   0xe4
1001f4cf:	mov    eax,0x10062a1b
1001f4d4:	call   0x10059a68
1001f4d9:	mov    eax,DWORD PTR [ebp+0x84]
1001f4df:	mov    esi,DWORD PTR [ebp+0x80]
1001f4e5:	mov    DWORD PTR [ebp-0x18],eax
1001f4e8:	mov    eax,DWORD PTR [ebp+0x88]
1001f4ee:	mov    DWORD PTR [ebp-0x24],eax
1001f4f1:	mov    eax,DWORD PTR [ebp+0x8c]
1001f4f7:	xor    edi,edi
1001f4f9:	mov    DWORD PTR [ebp-0x1c],eax
1001f4fc:	lea    eax,[ebp-0x2c]
1001f4ff:	push   edi
1001f500:	push   eax
1001f501:	mov    DWORD PTR [ebp-0x4],edi
1001f504:	call   0x100028aa
1001f509:	pop    ecx
1001f50a:	pop    ecx
1001f50b:	mov    ecx,DWORD PTR [eax]
1001f50d:	mov    DWORD PTR [eax],edi
1001f50f:	mov    DWORD PTR [ebp-0x30],ecx
1001f512:	lea    eax,[ebp-0x2c]
1001f515:	mov    BYTE PTR [ebp-0x4],0x1
1001f519:	call   0x1000421f
1001f51e:	call   DWORD PTR ds:0x1007efec
1001f524:	cmp    esi,edi
1001f526:	mov    ebx,DWORD PTR ds:0x100660c4
1001f52c:	mov    DWORD PTR [ebp-0x14],eax
1001f52f:	je     0x1001f53c
1001f531:	push   esi
1001f532:	call   ebx
1001f534:	inc    eax
1001f535:	cmp    eax,0x3fffffff
1001f53a:	jle    0x1001f540
1001f53c:	xor    eax,eax
1001f53e:	jmp    0x1001f55b
1001f540:	lea    edi,[eax+eax*1]
1001f543:	mov    eax,edi
1001f545:	call   0x1004b6f0
1001f54a:	mov    eax,esp
1001f54c:	mov    DWORD PTR [ebp-0x10],esp
1001f54f:	push   DWORD PTR [ebp-0x14]
1001f552:	push   edi
1001f553:	push   esi
1001f554:	mov    esi,eax
1001f556:	call   0x10002434
1001f55b:	push   eax
1001f55c:	lea    ecx,[ebp+0x54]
1001f55f:	call   0x100011cd
1001f564:	cmp    DWORD PTR [ebp-0x18],0x0
1001f568:	mov    BYTE PTR [ebp-0x4],0x2
1001f56c:	je     0x1001f57b
1001f56e:	push   DWORD PTR [ebp-0x18]
1001f571:	call   ebx
1001f573:	inc    eax
1001f574:	cmp    eax,0x3fffffff
1001f579:	jle    0x1001f57f
1001f57b:	xor    eax,eax
1001f57d:	jmp    0x1001f59a
1001f57f:	lea    edi,[eax+eax*1]
1001f582:	mov    eax,edi
1001f584:	call   0x1004b6f0
1001f589:	mov    DWORD PTR [ebp-0x10],esp
1001f58c:	mov    esi,esp
1001f58e:	push   DWORD PTR [ebp-0x14]
1001f591:	push   edi
1001f592:	push   DWORD PTR [ebp-0x18]
1001f595:	call   0x10002434
1001f59a:	push   eax
1001f59b:	lea    ecx,[ebp+0x1c]
1001f59e:	call   0x100011cd
1001f5a3:	mov    BYTE PTR [ebp-0x4],0x3
1001f5a7:	cmp    DWORD PTR [ebp-0x24],0x0
1001f5ab:	je     0x1001f5ba
1001f5ad:	push   DWORD PTR [ebp-0x24]
1001f5b0:	call   ebx
1001f5b2:	inc    eax
1001f5b3:	cmp    eax,0x3fffffff
1001f5b8:	jle    0x1001f5be
1001f5ba:	xor    eax,eax
1001f5bc:	jmp    0x1001f5d9
1001f5be:	lea    edi,[eax+eax*1]
1001f5c1:	mov    eax,edi
1001f5c3:	call   0x1004b6f0
1001f5c8:	mov    DWORD PTR [ebp-0x10],esp
1001f5cb:	mov    esi,esp
1001f5cd:	push   DWORD PTR [ebp-0x14]
1001f5d0:	push   edi
1001f5d1:	push   DWORD PTR [ebp-0x24]
1001f5d4:	call   0x10002434
1001f5d9:	push   eax
1001f5da:	lea    ecx,[ebp+0x0]
1001f5dd:	call   0x100011cd
1001f5e2:	mov    BYTE PTR [ebp-0x4],0x4
1001f5e6:	cmp    DWORD PTR [ebp-0x1c],0x0
1001f5ea:	je     0x1001f5f9
1001f5ec:	push   DWORD PTR [ebp-0x1c]
1001f5ef:	call   ebx
1001f5f1:	inc    eax
1001f5f2:	cmp    eax,0x3fffffff
1001f5f7:	jle    0x1001f5fd
1001f5f9:	xor    eax,eax
1001f5fb:	jmp    0x1001f618
1001f5fd:	lea    edi,[eax+eax*1]
1001f600:	mov    eax,edi
1001f602:	call   0x1004b6f0
1001f607:	mov    DWORD PTR [ebp-0x10],esp
1001f60a:	mov    esi,esp
1001f60c:	push   DWORD PTR [ebp-0x14]
1001f60f:	push   edi
1001f610:	push   DWORD PTR [ebp-0x1c]
1001f613:	call   0x10002434
1001f618:	push   eax
1001f619:	lea    ecx,[ebp+0x38]
1001f61c:	call   0x100011cd
1001f621:	fld    QWORD PTR [ebp+0x94]
1001f627:	mov    BYTE PTR [ebp-0x4],0x5
1001f62b:	call   0x1005f486
1001f630:	push   0x0
1001f632:	mov    esi,0x2710
1001f637:	push   esi
1001f638:	push   edx
1001f639:	push   eax
1001f63a:	call   0x1004f400
1001f63f:	fld    QWORD PTR [ebp+0x9c]
1001f645:	mov    DWORD PTR [ebp-0x28],eax
1001f648:	mov    DWORD PTR [ebp-0x24],edx
1001f64b:	call   0x1005f486
1001f650:	push   0x0
1001f652:	push   esi
1001f653:	push   edx
1001f654:	push   eax
1001f655:	call   0x1004f400
1001f65a:	push   ecx
1001f65b:	mov    ecx,DWORD PTR [ebp+0x90]
1001f661:	mov    DWORD PTR [ebp-0x20],eax
1001f664:	mov    eax,esp
1001f666:	mov    DWORD PTR [eax],ecx
1001f668:	mov    DWORD PTR [ebp-0x2c],esp
1001f66b:	lea    eax,[ebp+0x38]
1001f66e:	push   eax
1001f66f:	lea    eax,[ebp+0x0]
1001f672:	push   eax
1001f673:	lea    eax,[ebp+0x1c]
1001f676:	push   eax
1001f677:	lea    eax,[ebp+0x54]
1001f67a:	push   eax
1001f67b:	lea    eax,[ebp-0xf0]
1001f681:	lea    edi,[ebp-0x20]
1001f684:	lea    ebx,[ebp-0x28]
1001f687:	push   eax
1001f688:	mov    DWORD PTR [ebp-0x1c],edx
1001f68b:	call   0x100027b4
1001f690:	mov    edi,eax
1001f692:	lea    eax,[ebp+0x54]
1001f695:	push   eax
1001f696:	lea    esi,[ebp-0x68]
1001f699:	mov    BYTE PTR [ebp-0x4],0x6
1001f69d:	call   0x10030410
1001f6a2:	pop    ecx
1001f6a3:	lea    ecx,[ebp-0x4c]
1001f6a6:	push   ecx
1001f6a7:	mov    ecx,eax
1001f6a9:	mov    BYTE PTR [ebp-0x4],0x7
1001f6ad:	call   0x1002fb70
1001f6b2:	pop    ecx
1001f6b3:	push   edi
1001f6b4:	mov    edx,eax
1001f6b6:	mov    ecx,0x10080e54
1001f6bb:	mov    BYTE PTR [ebp-0x4],0x8
1001f6bf:	call   0x10012ea7
1001f6c4:	xor    ebx,ebx
1001f6c6:	xor    edi,edi
1001f6c8:	push   ebx
1001f6c9:	inc    edi
1001f6ca:	push   edi
1001f6cb:	lea    ecx,[ebp-0x4c]
1001f6ce:	call   0x100012f0
1001f6d3:	push   ebx
1001f6d4:	push   edi
1001f6d5:	mov    ecx,esi
1001f6d7:	call   0x100012f0
1001f6dc:	lea    esi,[ebp-0xf0]
1001f6e2:	call   0x100033ac
1001f6e7:	push   ebx
1001f6e8:	push   edi
1001f6e9:	lea    ecx,[ebp+0x38]
1001f6ec:	call   0x100012f0
1001f6f1:	push   ebx
1001f6f2:	push   edi
1001f6f3:	lea    ecx,[ebp+0x0]
1001f6f6:	call   0x100012f0
1001f6fb:	push   ebx
1001f6fc:	push   edi
1001f6fd:	lea    ecx,[ebp+0x1c]
1001f700:	call   0x100012f0
1001f705:	push   ebx
1001f706:	push   edi
1001f707:	lea    ecx,[ebp+0x54]
1001f70a:	call   0x100012f0
1001f70f:	lea    eax,[ebp-0x30]
1001f712:	call   0x1000421f
1001f717:	xor    eax,eax
1001f719:	lea    esp,[ebp-0x100]
1001f71f:	mov    ecx,DWORD PTR [ebp-0xc]
1001f722:	mov    DWORD PTR fs:0x0,ecx
1001f729:	pop    ecx
1001f72a:	pop    edi
1001f72b:	pop    esi
1001f72c:	pop    ebx
1001f72d:	mov    ecx,DWORD PTR [ebp+0x70]
1001f730:	xor    ecx,ebp
1001f732:	call   0x10042e97
1001f737:	add    ebp,0x74
1001f73a:	leave  
1001f73b:	ret    0x28
1001f73e:	mov    eax,0x1001f744
1001f743:	ret    
1001f744:	jmp    0x1001f717
1001f746:	push   0x4
1001f748:	call   0x10037980
1001f74d:	pop    ecx
1001f74e:	mov    eax,0x1001f717
1001f753:	ret    
1001f754:	push   0x48
1001f756:	mov    eax,0x10061b9e
1001f75b:	call   0x10059ad4
1001f760:	mov    eax,DWORD PTR [ebp+0x10]
1001f763:	mov    esi,DWORD PTR [ebp+0xc]
1001f766:	and    DWORD PTR [ebp-0x4],0x0
1001f76a:	mov    DWORD PTR [ebp-0x50],eax
1001f76d:	push   0x1
1001f76f:	lea    eax,[ebp-0x54]
1001f772:	push   eax
1001f773:	call   0x100349f0
1001f778:	mov    BYTE PTR [ebp-0x4],0x1
1001f77c:	call   DWORD PTR ds:0x1007efec
1001f782:	test   esi,esi
1001f784:	mov    ebx,eax
1001f786:	je     0x1001f797
1001f788:	push   esi
1001f789:	call   DWORD PTR ds:0x100660c4
1001f78f:	inc    eax
1001f790:	cmp    eax,0x3fffffff
1001f795:	jle    0x1001f79b
1001f797:	xor    eax,eax
1001f799:	jmp    0x1001f7b4
1001f79b:	lea    edi,[eax+eax*1]
1001f79e:	mov    eax,edi
1001f7a0:	call   0x1004b6f0
1001f7a5:	mov    eax,esp
1001f7a7:	mov    DWORD PTR [ebp-0x10],esp
1001f7aa:	push   ebx
1001f7ab:	push   edi
1001f7ac:	push   esi
1001f7ad:	mov    esi,eax
1001f7af:	call   0x10002434
1001f7b4:	push   eax
1001f7b5:	lea    ecx,[ebp-0x4c]
1001f7b8:	call   0x100011cd
1001f7bd:	cmp    DWORD PTR [ebp-0x50],0x0
1001f7c1:	mov    BYTE PTR [ebp-0x4],0x2
1001f7c5:	je     0x1001f7d8
1001f7c7:	push   DWORD PTR [ebp-0x50]
1001f7ca:	call   DWORD PTR ds:0x100660c4
1001f7d0:	inc    eax
1001f7d1:	cmp    eax,0x3fffffff
1001f7d6:	jle    0x1001f7dc
1001f7d8:	xor    eax,eax
1001f7da:	jmp    0x1001f7f5
1001f7dc:	lea    edi,[eax+eax*1]
1001f7df:	mov    eax,edi
1001f7e1:	call   0x1004b6f0
1001f7e6:	mov    DWORD PTR [ebp-0x10],esp
1001f7e9:	mov    esi,esp
1001f7eb:	push   ebx
1001f7ec:	push   edi
1001f7ed:	push   DWORD PTR [ebp-0x50]
1001f7f0:	call   0x10002434
1001f7f5:	push   eax
1001f7f6:	lea    ecx,[ebp-0x30]
1001f7f9:	call   0x100011cd
1001f7fe:	lea    eax,[ebp-0x30]
1001f801:	push   eax
1001f802:	lea    eax,[ebp-0x54]
1001f805:	push   eax
1001f806:	lea    ecx,[ebp-0x4c]
1001f809:	mov    BYTE PTR [ebp-0x4],0x3
1001f80d:	call   0x10035630
1001f812:	push   0x0
1001f814:	push   0x1
1001f816:	lea    ecx,[ebp-0x30]
1001f819:	call   0x100012f0
1001f81e:	push   0x0
1001f820:	push   0x1
1001f822:	lea    ecx,[ebp-0x4c]
1001f825:	call   0x100012f0
1001f82a:	push   DWORD PTR [ebp-0x54]
1001f82d:	call   DWORD PTR ds:0x10066070
1001f833:	xor    eax,eax
1001f835:	jmp    0x1001f842
1001f837:	mov    eax,0x1001f83d
1001f83c:	ret    
1001f83d:	mov    eax,0x80004005
1001f842:	lea    esp,[ebp-0x64]
1001f845:	call   0x10059b30
1001f84a:	ret    0xc
1001f84d:	push   0x48
1001f84f:	mov    eax,0x10061b61
1001f854:	call   0x10059ad4
1001f859:	and    DWORD PTR [ebp-0x4],0x0
1001f85d:	push   0x1
1001f85f:	lea    eax,[ebp-0x18]
1001f862:	push   eax
1001f863:	call   0x100349f0
1001f868:	mov    BYTE PTR [ebp-0x4],0x1
1001f86c:	call   DWORD PTR ds:0x1007efec
1001f872:	cmp    DWORD PTR [ebp+0xc],0x0
1001f876:	mov    ebx,eax
1001f878:	je     0x1001f88b
1001f87a:	push   DWORD PTR [ebp+0xc]
1001f87d:	call   DWORD PTR ds:0x100660c4
1001f883:	inc    eax
1001f884:	cmp    eax,0x3fffffff
1001f889:	jle    0x1001f88f
1001f88b:	xor    eax,eax
1001f88d:	jmp    0x1001f8a8
1001f88f:	lea    edi,[eax+eax*1]
1001f892:	mov    eax,edi
1001f894:	call   0x1004b6f0
1001f899:	mov    DWORD PTR [ebp-0x10],esp
1001f89c:	mov    esi,esp
1001f89e:	push   ebx
1001f89f:	push   edi
1001f8a0:	push   DWORD PTR [ebp+0xc]
1001f8a3:	call   0x10002434
1001f8a8:	push   eax
1001f8a9:	lea    ecx,[ebp-0x38]
1001f8ac:	call   0x100011cd
1001f8b1:	lea    eax,[ebp-0x38]
1001f8b4:	push   eax
1001f8b5:	lea    eax,[ebp-0x54]
1001f8b8:	push   eax
1001f8b9:	lea    eax,[ebp-0x18]
1001f8bc:	push   eax
1001f8bd:	mov    BYTE PTR [ebp-0x4],0x2
1001f8c1:	call   0x100357e0
1001f8c6:	mov    BYTE PTR [ebp-0x4],0x3
1001f8ca:	cmp    DWORD PTR [eax+0x18],0x10
1001f8ce:	jb     0x1001f8d5
1001f8d0:	mov    eax,DWORD PTR [eax+0x4]
1001f8d3:	jmp    0x1001f8d8
1001f8d5:	add    eax,0x4
1001f8d8:	push   eax
1001f8d9:	lea    edi,[ebp-0x1c]
1001f8dc:	call   0x10002467
1001f8e1:	mov    BYTE PTR [ebp-0x4],0x4
1001f8e5:	call   0x10011efe
1001f8ea:	mov    ecx,DWORD PTR [ebp+0x10]
1001f8ed:	mov    DWORD PTR [ecx],eax
1001f8ef:	call   0x100025c2
1001f8f4:	push   0x0
1001f8f6:	push   0x1
1001f8f8:	lea    ecx,[ebp-0x54]
1001f8fb:	call   0x100012f0
1001f900:	push   0x0
1001f902:	push   0x1
1001f904:	lea    ecx,[ebp-0x38]
1001f907:	call   0x100012f0
1001f90c:	push   DWORD PTR [ebp-0x18]
1001f90f:	call   DWORD PTR ds:0x10066070
1001f915:	xor    eax,eax
1001f917:	jmp    0x1001f924
1001f919:	mov    eax,0x1001f91f
1001f91e:	ret    
1001f91f:	mov    eax,0x80004005
1001f924:	lea    esp,[ebp-0x64]
1001f927:	call   0x10059b30
1001f92c:	ret    0xc
1001f92f:	push   ebp
1001f930:	sub    esp,0xcc
1001f936:	lea    ebp,[esp-0x4]
1001f93a:	mov    eax,ds:0x1007e030
1001f93f:	xor    eax,ebp
1001f941:	mov    DWORD PTR [ebp+0xcc],eax
1001f947:	push   0x3c
1001f949:	mov    eax,0x10064c4c
1001f94e:	call   0x10059a68
1001f953:	mov    eax,DWORD PTR [ebp+0xe4]
1001f959:	mov    ebx,DWORD PTR [ebp+0xe0]
1001f95f:	mov    DWORD PTR [ebp-0x14],eax
1001f962:	mov    eax,DWORD PTR [ebp+0xec]
1001f968:	mov    DWORD PTR [ebp-0x20],eax
1001f96b:	call   DWORD PTR ds:0x1007efec
1001f971:	xor    esi,esi
1001f973:	cmp    DWORD PTR [ebp+0xe8],esi
1001f979:	mov    DWORD PTR [ebp-0x1c],eax
1001f97c:	jne    0x1001f988
1001f97e:	mov    DWORD PTR [ebp+0xe8],0x7d0
1001f988:	cmp    WORD PTR [ebp+0xdc],0xffff
1001f990:	jne    0x1001fae6
1001f996:	cmp    ebx,esi
1001f998:	mov    DWORD PTR [ebp-0x4],esi
1001f99b:	mov    DWORD PTR [ebp-0x14],esi
1001f99e:	je     0x1001f9af
1001f9a0:	push   ebx
1001f9a1:	call   DWORD PTR ds:0x100660c4
1001f9a7:	inc    eax
1001f9a8:	cmp    eax,0x3fffffff
1001f9ad:	jle    0x1001f9b3
1001f9af:	xor    eax,eax
1001f9b1:	jmp    0x1001f9cc
1001f9b3:	lea    edi,[eax+eax*1]
1001f9b6:	mov    eax,edi
1001f9b8:	call   0x1004b6f0
1001f9bd:	mov    DWORD PTR [ebp-0x10],esp
1001f9c0:	mov    esi,esp
1001f9c2:	push   DWORD PTR [ebp-0x1c]
1001f9c5:	push   edi
1001f9c6:	push   ebx
1001f9c7:	call   0x10002434
1001f9cc:	push   eax
1001f9cd:	lea    ecx,[ebp+0xb0]
1001f9d3:	call   0x100011cd
1001f9d8:	lea    ecx,[ebp-0x48]
1001f9db:	mov    BYTE PTR [ebp-0x4],0x1
1001f9df:	call   0x100183f1
1001f9e4:	push   DWORD PTR [ebp+0xe8]
1001f9ea:	lea    ecx,[ebp-0x14]
1001f9ed:	push   ecx
1001f9ee:	lea    ecx,[ebp+0xb0]
1001f9f4:	push   ecx
1001f9f5:	push   eax
1001f9f6:	lea    esi,[ebp-0x18]
1001f9f9:	mov    BYTE PTR [ebp-0x4],0x2
1001f9fd:	call   0x10030e20
1001fa02:	mov    ecx,DWORD PTR [eax]
1001fa04:	mov    ebx,ecx
1001fa06:	xor    esi,esi
1001fa08:	add    esp,0x10
1001fa0b:	mov    DWORD PTR [eax],esi
1001fa0d:	mov    DWORD PTR [ebp-0x1c],ebx
1001fa10:	push   DWORD PTR [ebp-0x18]
1001fa13:	call   0x10042e92
1001fa18:	pop    ecx
1001fa19:	push   esi
1001fa1a:	push   0x1
1001fa1c:	lea    ecx,[ebp-0x48]
1001fa1f:	call   0x100012f0
1001fa24:	push   esi
1001fa25:	push   0x1
1001fa27:	lea    ecx,[ebp+0xb0]
1001fa2d:	mov    BYTE PTR [ebp-0x4],0x5
1001fa31:	call   0x100012f0
1001fa36:	mov    eax,DWORD PTR [ebp-0x14]
1001fa39:	mov    DWORD PTR [ebp-0x2c],esi
1001fa3c:	lea    edi,[ebp+0x94]
1001fa42:	lea    esi,[ebp-0x2c]
1001fa45:	mov    DWORD PTR [ebp-0x28],eax
1001fa48:	mov    DWORD PTR [ebp-0x24],ebx
1001fa4b:	call   0x100375d0
1001fa50:	mov    BYTE PTR [ebp-0x4],0x6
1001fa54:	cmp    DWORD PTR [eax+0x18],0x10
1001fa58:	jb     0x1001fa5f
1001fa5a:	mov    eax,DWORD PTR [eax+0x4]
1001fa5d:	jmp    0x1001fa62
1001fa5f:	add    eax,0x4
1001fa62:	push   eax
1001fa63:	lea    edi,[ebp-0x14]
1001fa66:	call   0x10002467
1001fa6b:	mov    BYTE PTR [ebp-0x4],0x7
1001fa6f:	call   0x10011efe
1001fa74:	mov    ecx,DWORD PTR [ebp-0x20]
1001fa77:	mov    DWORD PTR [ecx],eax
1001fa79:	call   0x100025c2
1001fa7e:	push   0x0
1001fa80:	push   0x1
1001fa82:	lea    ecx,[ebp+0x94]
1001fa88:	call   0x100012f0
1001fa8d:	push   ebx
1001fa8e:	call   0x10042e92
1001fa93:	pop    ecx
1001fa94:	xor    eax,eax
1001fa96:	lea    esp,[ebp-0x58]
1001fa99:	mov    ecx,DWORD PTR [ebp-0xc]
1001fa9c:	mov    DWORD PTR fs:0x0,ecx
1001faa3:	pop    ecx
1001faa4:	pop    edi
1001faa5:	pop    esi
1001faa6:	pop    ebx
1001faa7:	mov    ecx,DWORD PTR [ebp+0xcc]
1001faad:	xor    ecx,ebp
1001faaf:	call   0x10042e97
1001fab4:	add    ebp,0xd0
1001faba:	leave  
1001fabb:	ret    0x18
1001fabe:	mov    eax,0x1001fac4
1001fac3:	ret    
1001fac4:	and    DWORD PTR [ebp-0x14],0x0
1001fac8:	lea    eax,[ebp-0x14]
1001facb:	mov    DWORD PTR [ebp-0x4],0x9
1001fad2:	call   0x10011efe
1001fad7:	mov    ecx,DWORD PTR [ebp-0x20]
1001fada:	lea    edi,[ebp-0x14]
1001fadd:	mov    DWORD PTR [ecx],eax
1001fadf:	call   0x100025c2
1001fae4:	jmp    0x1001fa94
1001fae6:	lea    edi,[ebp+0x0]
1001fae9:	call   0x1000bc38
1001faee:	cmp    ebx,esi
1001faf0:	mov    DWORD PTR [ebp-0x4],0xa
1001faf7:	je     0x1001fb08
1001faf9:	push   ebx
1001fafa:	call   DWORD PTR ds:0x100660c4
1001fb00:	inc    eax
1001fb01:	cmp    eax,0x3fffffff
1001fb06:	jle    0x1001fb0c
1001fb08:	xor    eax,eax
1001fb0a:	jmp    0x1001fb25
1001fb0c:	lea    edi,[eax+eax*1]
1001fb0f:	mov    eax,edi
1001fb11:	call   0x1004b6f0
1001fb16:	mov    DWORD PTR [ebp-0x10],esp
1001fb19:	mov    esi,esp
1001fb1b:	push   DWORD PTR [ebp-0x1c]
1001fb1e:	push   edi
1001fb1f:	push   ebx
1001fb20:	call   0x10002434
1001fb25:	push   eax
1001fb26:	lea    ecx,[ebp+0xb0]
1001fb2c:	call   0x100011cd
1001fb31:	lea    eax,[ebp+0x0]
1001fb34:	push   eax
1001fb35:	lea    ecx,[ebp+0xb0]
1001fb3b:	mov    BYTE PTR [ebp-0x4],0xb
1001fb3f:	call   0x10032c20
1001fb44:	mov    bl,al
1001fb46:	neg    bl
1001fb48:	pop    ecx
1001fb49:	sbb    bl,bl
1001fb4b:	xor    edi,edi
1001fb4d:	push   edi
1001fb4e:	push   0x1
1001fb50:	lea    ecx,[ebp+0xb0]
1001fb56:	inc    bl
1001fb58:	mov    BYTE PTR [ebp-0x4],0xa
1001fb5c:	call   0x100012f0
1001fb61:	test   bl,bl
1001fb63:	je     0x1001fb79
1001fb65:	mov    edi,0x80004005
1001fb6a:	lea    esi,[ebp+0x0]
1001fb6d:	call   0x1000bc65
1001fb72:	mov    eax,edi
1001fb74:	jmp    0x1001fa96
1001fb79:	cmp    DWORD PTR [ebp-0x14],edi
1001fb7c:	mov    DWORD PTR [ebp-0x18],edi
1001fb7f:	je     0x1001fb92
1001fb81:	push   DWORD PTR [ebp-0x14]
1001fb84:	call   DWORD PTR ds:0x100660c4
1001fb8a:	inc    eax
1001fb8b:	cmp    eax,0x3fffffff
1001fb90:	jle    0x1001fb96
1001fb92:	xor    eax,eax
1001fb94:	jmp    0x1001fbb1
1001fb96:	lea    ebx,[eax+eax*1]
1001fb99:	mov    eax,ebx
1001fb9b:	call   0x1004b6f0
1001fba0:	mov    DWORD PTR [ebp-0x10],esp
1001fba3:	mov    esi,esp
1001fba5:	push   DWORD PTR [ebp-0x1c]
1001fba8:	push   ebx
1001fba9:	push   DWORD PTR [ebp-0x14]
1001fbac:	call   0x10002434
1001fbb1:	push   eax
1001fbb2:	lea    ecx,[ebp+0x94]
1001fbb8:	call   0x100011cd
1001fbbd:	push   DWORD PTR [ebp+0xe8]
1001fbc3:	lea    eax,[ebp-0x18]
1001fbc6:	push   eax
1001fbc7:	push   edi
1001fbc8:	push   edi
1001fbc9:	lea    eax,[ebp+0x94]
1001fbcf:	push   eax
1001fbd0:	lea    eax,[ebp+0x5c]
1001fbd3:	push   eax
1001fbd4:	mov    BYTE PTR [ebp-0x4],0xc
1001fbd8:	push   DWORD PTR [ebp+0x20]
1001fbdb:	lea    eax,[ebp+0x4]
1001fbde:	push   eax
1001fbdf:	lea    eax,[ebp-0x14]
1001fbe2:	push   eax
1001fbe3:	call   0x10032730
1001fbe8:	mov    ecx,DWORD PTR [eax]
1001fbea:	mov    ebx,ecx
1001fbec:	mov    DWORD PTR [eax],edi
1001fbee:	mov    DWORD PTR [ebp-0x1c],ebx
1001fbf1:	mov    BYTE PTR [ebp-0x4],0xd
1001fbf5:	push   DWORD PTR [ebp-0x14]
1001fbf8:	call   0x10042e92
1001fbfd:	add    esp,0x28
1001fc00:	cmp    ebx,edi
1001fc02:	je     0x1001fc72
1001fc04:	push   DWORD PTR [ebp-0x18]
1001fc07:	lea    esi,[ebp+0xb0]
1001fc0d:	push   ebx
1001fc0e:	call   0x1000406c
1001fc13:	mov    BYTE PTR [ebp-0x4],0xe
1001fc17:	cmp    DWORD PTR [ebp+0xc8],0x10
1001fc1e:	mov    eax,DWORD PTR [ebp+0xb4]
1001fc24:	jae    0x1001fc2c
1001fc26:	lea    eax,[ebp+0xb4]
1001fc2c:	push   eax
1001fc2d:	lea    edi,[ebp-0x18]
1001fc30:	call   0x10002467
1001fc35:	mov    BYTE PTR [ebp-0x4],0xf
1001fc39:	call   0x10011efe
1001fc3e:	mov    ecx,DWORD PTR [ebp-0x20]
1001fc41:	mov    DWORD PTR [ecx],eax
1001fc43:	call   0x100025c2
1001fc48:	xor    edi,edi
1001fc4a:	push   edi
1001fc4b:	push   0x1
1001fc4d:	lea    ecx,[ebp+0xb0]
1001fc53:	call   0x100012f0
1001fc58:	push   ebx
1001fc59:	call   0x10042e92
1001fc5e:	pop    ecx
1001fc5f:	push   edi
1001fc60:	push   0x1
1001fc62:	lea    ecx,[ebp+0x94]
1001fc68:	call   0x100012f0
1001fc6d:	jmp    0x1001fb6a
1001fc72:	mov    DWORD PTR [ebp-0x18],edi
1001fc75:	lea    eax,[ebp-0x18]
1001fc78:	mov    BYTE PTR [ebp-0x4],0x10
1001fc7c:	call   0x10011efe
1001fc81:	mov    ecx,DWORD PTR [ebp-0x20]
1001fc84:	lea    edi,[ebp-0x18]
1001fc87:	mov    DWORD PTR [ecx],eax
1001fc89:	call   0x100025c2
1001fc8e:	push   0x0
1001fc90:	call   0x10042e92
1001fc95:	pop    ecx
1001fc96:	push   0x0
1001fc98:	push   0x1
1001fc9a:	lea    ecx,[ebp+0x94]
1001fca0:	call   0x100012f0
1001fca5:	jmp    0x1001fb65
1001fcaa:	mov    ecx,DWORD PTR [esp+0x8]
1001fcae:	test   ecx,ecx
1001fcb0:	mov    eax,DWORD PTR [esp+0x4]
1001fcb4:	jne    0x1001fcbd
1001fcb6:	mov    eax,0x80004003
1001fcbb:	jmp    0x1001fcd1
1001fcbd:	mov    edx,DWORD PTR [eax-0x10]
1001fcc0:	mov    DWORD PTR [ecx],edx
1001fcc2:	mov    eax,DWORD PTR [eax-0x10]
1001fcc5:	test   eax,eax
1001fcc7:	je     0x1001fccf
1001fcc9:	mov    ecx,DWORD PTR [eax]
1001fccb:	push   eax
1001fccc:	call   DWORD PTR [ecx+0x4]
1001fccf:	xor    eax,eax
1001fcd1:	ret    0x8
1001fcd4:	push   DWORD PTR [esp+0x8]
1001fcd8:	call   DWORD PTR ds:0x10066160
1001fcde:	push   eax
1001fcdf:	call   0x1001ef09
1001fce4:	pop    ecx
1001fce5:	pop    ecx
1001fce6:	xor    eax,eax
1001fce8:	ret    0x8
1001fceb:	mov    eax,DWORD PTR [esi+0x4]
1001fcee:	mov    ecx,DWORD PTR [esi+0x8]
1001fcf1:	cmp    eax,ecx
1001fcf3:	push   edi
1001fcf4:	jne    0x1001fd24
1001fcf6:	test   ecx,ecx
1001fcf8:	jne    0x1001fcff
1001fcfa:	xor    edi,edi
1001fcfc:	inc    edi
1001fcfd:	jmp    0x1001fd0e
1001fcff:	lea    edi,[eax+eax*1]
1001fd02:	test   edi,edi
1001fd04:	jl     0x1001fd44
1001fd06:	cmp    edi,0x3fffffff
1001fd0c:	ja     0x1001fd44
1001fd0e:	push   0x2
1001fd10:	push   edi
1001fd11:	push   DWORD PTR [esi]
1001fd13:	call   0x100463c3
1001fd18:	add    esp,0xc
1001fd1b:	test   eax,eax
1001fd1d:	je     0x1001fd44
1001fd1f:	mov    DWORD PTR [esi+0x8],edi
1001fd22:	mov    DWORD PTR [esi],eax
1001fd24:	mov    eax,DWORD PTR [esi+0x4]
1001fd27:	mov    ecx,DWORD PTR [esi]
1001fd29:	lea    eax,[ecx+eax*2]
1001fd2c:	test   eax,eax
1001fd2e:	je     0x1001fd3a
1001fd30:	mov    ecx,DWORD PTR [esp+0x8]
1001fd34:	mov    cx,WORD PTR [ecx]
1001fd37:	mov    WORD PTR [eax],cx
1001fd3a:	inc    DWORD PTR [esi+0x4]
1001fd3d:	xor    eax,eax
1001fd3f:	inc    eax
1001fd40:	pop    edi
1001fd41:	ret    0x4
1001fd44:	xor    eax,eax
1001fd46:	jmp    0x1001fd40
1001fd48:	mov    eax,DWORD PTR [esp+0x8]
1001fd4c:	push   esi
1001fd4d:	xor    esi,esi
1001fd4f:	cmp    eax,esi
1001fd51:	push   edi
1001fd52:	jne    0x1001fd59
1001fd54:	mov    eax,0x1007f814
1001fd59:	mov    ecx,DWORD PTR [eax+0x4]
1001fd5c:	mov    edi,DWORD PTR [eax+0xc]
1001fd5f:	mov    edx,DWORD PTR [eax]
1001fd61:	mov    eax,DWORD PTR [eax+0x8]
1001fd64:	push   esi
1001fd65:	push   DWORD PTR ds:0x10080a04
1001fd6b:	sub    edi,ecx
1001fd6d:	push   DWORD PTR [esp+0x1c]
1001fd71:	sub    eax,edx
1001fd73:	push   esi
1001fd74:	push   edi
1001fd75:	push   eax
1001fd76:	push   ecx
1001fd77:	push   edx
1001fd78:	push   esi
1001fd79:	push   esi
1001fd7a:	push   0x10070504
1001fd7f:	push   esi
1001fd80:	call   DWORD PTR ds:0x10066324
1001fd86:	mov    ecx,DWORD PTR [esp+0xc]
1001fd8a:	pop    edi
1001fd8b:	mov    DWORD PTR [ecx],eax
1001fd8d:	pop    esi
1001fd8e:	ret    0xc
1001fd91:	push   0x0
1001fd93:	mov    eax,0x1005f61a
1001fd98:	call   0x10059a35
1001fd9d:	xor    ecx,ecx
1001fd9f:	cmp    ebx,ecx
1001fda1:	jne    0x1001fdaa
1001fda3:	mov    eax,0x80004003
1001fda8:	jmp    0x1001fdf7
1001fdaa:	mov    DWORD PTR [ebx],ecx
1001fdac:	push   ecx
1001fdad:	mov    DWORD PTR [ebp-0x4],ecx
1001fdb0:	mov    eax,DWORD PTR [ebp+0x8]
1001fdb3:	mov    eax,DWORD PTR [eax]
1001fdb5:	push   ecx
1001fdb6:	push   DWORD PTR ds:0x10080fd8
1001fdbc:	push   eax
1001fdbd:	call   DWORD PTR ds:0x10066330
1001fdc3:	mov    edi,eax
1001fdc5:	mov    esi,edi
1001fdc7:	neg    esi
1001fdc9:	sbb    esi,esi
1001fdcb:	and    esi,0x7fffbffb
1001fdd1:	add    esi,0x80004005
1001fdd7:	mov    DWORD PTR [ebp+0x8],edi
1001fdda:	js     0x1001fde7
1001fddc:	mov    eax,DWORD PTR [edi]
1001fdde:	push   ebx
1001fddf:	push   DWORD PTR [ebp+0xc]
1001fde2:	push   edi
1001fde3:	call   DWORD PTR [eax]
1001fde5:	mov    esi,eax
1001fde7:	or     DWORD PTR [ebp-0x4],0xffffffff
1001fdeb:	test   edi,edi
1001fded:	je     0x1001fdf5
1001fdef:	mov    eax,DWORD PTR [edi]
1001fdf1:	push   edi
1001fdf2:	call   DWORD PTR [eax+0x8]
1001fdf5:	mov    eax,esi
1001fdf7:	call   0x10059b0d
1001fdfc:	ret    0x8
1001fdff:	push   ebp
1001fe00:	mov    ebp,esp
1001fe02:	cmp    DWORD PTR ds:0x1007f858,0x0
1001fe09:	jne    0x1001fe12
1001fe0b:	and    DWORD PTR ds:0x1007f858,0x0
1001fe12:	push   ebx
1001fe13:	push   DWORD PTR [ebp+0xc]
1001fe16:	lea    eax,[esi+0x20]
1001fe19:	push   eax
1001fe1a:	mov    ebx,0x1007f828
1001fe1f:	call   0x10021c18
1001fe24:	pop    ecx
1001fe25:	pop    ecx
1001fe26:	movzx  eax,ax
1001fe29:	push   eax
1001fe2a:	push   DWORD PTR [ebp+0xc]
1001fe2d:	mov    ebx,esi
1001fe2f:	push   0x0
1001fe31:	push   0xcf0000
1001fe36:	push   0x100703c8
1001fe3b:	push   DWORD PTR [ebp+0x8]
1001fe3e:	call   0x10021b91
1001fe43:	pop    ebx
1001fe44:	pop    ebp
1001fe45:	ret    0x8
1001fe48:	mov    eax,0x10021a8b
1001fe4d:	ret    
1001fe4e:	push   ebp
1001fe4f:	mov    ebp,esp
1001fe51:	cmp    DWORD PTR ds:0x1007f8e8,0x0
1001fe58:	jne    0x1001fe61
1001fe5a:	and    DWORD PTR ds:0x1007f8e8,0x0
1001fe61:	push   ebx
1001fe62:	push   DWORD PTR [ebp+0xc]
1001fe65:	lea    eax,[esi+0x20]
1001fe68:	push   eax
1001fe69:	mov    ebx,0x1007f8b8
1001fe6e:	call   0x10021c18
1001fe73:	pop    ecx
1001fe74:	pop    ecx
1001fe75:	movzx  eax,ax
1001fe78:	push   eax
1001fe79:	push   DWORD PTR [ebp+0xc]
1001fe7c:	mov    ebx,esi
1001fe7e:	push   0x0
1001fe80:	push   0xcf0000
1001fe85:	push   0x10070414
1001fe8a:	push   DWORD PTR [ebp+0x8]
1001fe8d:	call   0x10021b91
1001fe92:	pop    ebx
1001fe93:	pop    ebp
1001fe94:	ret    0x8
1001fe97:	push   esi
1001fe98:	mov    esi,DWORD PTR [esp+0x8]
1001fe9c:	lea    eax,[esi-0x38]
1001fe9f:	neg    esi
1001fea1:	sbb    esi,esi
1001fea3:	and    esi,eax
1001fea5:	push   edi
1001fea6:	mov    edi,DWORD PTR [esp+0x10]
1001feaa:	add    esi,0x3c
1001fead:	cmp    DWORD PTR [esi],edi
1001feaf:	je     0x1001feb6
1001feb1:	call   0x1000763b
1001feb6:	pop    edi
1001feb7:	xor    eax,eax
1001feb9:	pop    esi
1001feba:	ret    0x8
1001febd:	mov    ecx,DWORD PTR [esp+0x4]
1001fec1:	mov    edx,DWORD PTR [esp+0xc]
1001fec5:	lea    eax,[ecx-0x38]
1001fec8:	neg    ecx
1001feca:	sbb    ecx,ecx
1001fecc:	and    ecx,eax
1001fece:	test   edx,edx
1001fed0:	mov    eax,0x80004003
1001fed5:	je     0x1001fef2
1001fed7:	mov    ecx,DWORD PTR [ecx+0x3c]
1001feda:	test   ecx,ecx
1001fedc:	je     0x1001feea
1001fede:	mov    eax,DWORD PTR [ecx]
1001fee0:	push   edx
1001fee1:	push   DWORD PTR [esp+0xc]
1001fee5:	push   ecx
1001fee6:	call   DWORD PTR [eax]
1001fee8:	jmp    0x1001fef2
1001feea:	and    DWORD PTR [edx],0x0
1001feed:	mov    eax,0x80004005
1001fef2:	ret    0xc
1001fef5:	push   edi
1001fef6:	mov    edi,DWORD PTR [esp+0x14]
1001fefa:	mov    ecx,0x1007f944
1001feff:	call   0x10010455
1001ff04:	pop    edi
1001ff05:	ret    0x10
1001ff08:	push   DWORD PTR [esp+0x18]
1001ff0c:	mov    eax,0x1007f944
1001ff11:	push   DWORD PTR [esp+0x14]
1001ff15:	push   DWORD PTR [esp+0x14]
1001ff19:	call   0x10010483
1001ff1e:	ret    0x18
1001ff21:	push   ebp
1001ff22:	mov    ebp,esp
1001ff24:	push   DWORD PTR [ebp+0x28]
1001ff27:	mov    eax,0x1007f944
1001ff2c:	push   DWORD PTR [ebp+0x24]
1001ff2f:	push   DWORD PTR [ebp+0x20]
1001ff32:	push   DWORD PTR [ebp+0x1c]
1001ff35:	push   DWORD PTR [ebp+0x18]
1001ff38:	push   DWORD PTR [ebp+0xc]
1001ff3b:	push   DWORD PTR [ebp+0x8]
1001ff3e:	call   0x10010526
1001ff43:	pop    ebp
1001ff44:	ret    0x24
1001ff47:	push   esi
1001ff48:	mov    esi,ecx
1001ff4a:	mov    DWORD PTR [esi],0x10070664
1001ff50:	mov    DWORD PTR [esi+0x24],0x10070674
1001ff57:	mov    DWORD PTR [esi+0x28],0xc0000001
1001ff5e:	mov    eax,DWORD PTR [esi+0x2c]
1001ff61:	test   eax,eax
1001ff63:	je     0x1001ff6f
1001ff65:	and    DWORD PTR [esi+0x2c],0x0
1001ff69:	mov    ecx,DWORD PTR [eax]
1001ff6b:	push   eax
1001ff6c:	call   DWORD PTR [ecx+0x8]
1001ff6f:	mov    eax,DWORD PTR [esi+0x4]
1001ff72:	test   eax,eax
1001ff74:	je     0x1001ff7d
1001ff76:	push   eax
1001ff77:	call   DWORD PTR ds:0x10066304
1001ff7d:	mov    ecx,DWORD PTR ds:0x10080c04
1001ff83:	mov    eax,DWORD PTR [ecx]
1001ff85:	call   DWORD PTR [eax+0x8]
1001ff88:	mov    eax,DWORD PTR [esi+0x2c]
1001ff8b:	test   eax,eax
1001ff8d:	je     0x1001ff95
1001ff8f:	mov    ecx,DWORD PTR [eax]
1001ff91:	push   eax
1001ff92:	call   DWORD PTR [ecx+0x8]
1001ff95:	mov    esi,DWORD PTR [esi+0x14]
1001ff98:	test   esi,esi
1001ff9a:	je     0x1001ffa2
1001ff9c:	push   esi
1001ff9d:	call   0x100570ee
1001ffa2:	pop    esi
1001ffa3:	ret    
1001ffa4:	mov    eax,DWORD PTR [esp+0x4]
1001ffa8:	push   ebx
1001ffa9:	push   DWORD PTR [esp+0xc]
1001ffad:	mov    ebx,DWORD PTR [esp+0x14]
1001ffb1:	add    eax,0xffffffdc
1001ffb4:	push   eax
1001ffb5:	mov    eax,0x10070398
1001ffba:	call   0x10010334
1001ffbf:	pop    ebx
1001ffc0:	ret    0xc
1001ffc3:	push   esi
1001ffc4:	mov    esi,ecx
1001ffc6:	mov    DWORD PTR [esi],0x100706b0
1001ffcc:	mov    DWORD PTR [esi+0x24],0x100706c0
1001ffd3:	mov    DWORD PTR [esi+0x28],0xc0000001
1001ffda:	mov    eax,DWORD PTR [esi+0x2c]
1001ffdd:	test   eax,eax
1001ffdf:	je     0x1001ffeb
1001ffe1:	and    DWORD PTR [esi+0x2c],0x0
1001ffe5:	mov    ecx,DWORD PTR [eax]
1001ffe7:	push   eax
1001ffe8:	call   DWORD PTR [ecx+0x8]
1001ffeb:	mov    eax,DWORD PTR [esi+0x4]
1001ffee:	test   eax,eax
1001fff0:	je     0x1001fff9
1001fff2:	push   eax
1001fff3:	call   DWORD PTR ds:0x10066304
1001fff9:	mov    ecx,DWORD PTR ds:0x10080c04
1001ffff:	mov    eax,DWORD PTR [ecx]
10020001:	call   DWORD PTR [eax+0x8]
10020004:	mov    eax,DWORD PTR [esi+0x2c]
10020007:	test   eax,eax
10020009:	je     0x10020011
1002000b:	mov    ecx,DWORD PTR [eax]
1002000d:	push   eax
1002000e:	call   DWORD PTR [ecx+0x8]
10020011:	mov    esi,DWORD PTR [esi+0x14]
10020014:	test   esi,esi
10020016:	je     0x1002001e
10020018:	push   esi
10020019:	call   0x100570ee
1002001e:	pop    esi
1002001f:	ret    
10020020:	mov    eax,DWORD PTR [esp+0x4]
10020024:	inc    DWORD PTR [eax+0x4]
10020027:	mov    eax,DWORD PTR [eax+0x4]
1002002a:	ret    0x4
1002002d:	mov    eax,DWORD PTR [esp+0x4]
10020031:	dec    DWORD PTR [eax+0x4]
10020034:	push   esi
10020035:	mov    esi,DWORD PTR [eax+0x4]
10020038:	jne    0x10020048
1002003a:	lea    ecx,[eax-0x24]
1002003d:	test   ecx,ecx
1002003f:	je     0x10020048
10020041:	mov    eax,DWORD PTR [ecx]
10020043:	push   0x1
10020045:	call   DWORD PTR [eax+0x4]
10020048:	mov    eax,esi
1002004a:	pop    esi
1002004b:	ret    0x4
1002004e:	mov    eax,DWORD PTR [esp+0x4]
10020052:	push   ebx
10020053:	push   DWORD PTR [esp+0xc]
10020057:	mov    ebx,DWORD PTR [esp+0x14]
1002005b:	add    eax,0xffffffdc
1002005e:	push   eax
1002005f:	mov    eax,0x100703f0
10020064:	call   0x10010334
10020069:	pop    ebx
1002006a:	ret    0xc
1002006d:	xor    eax,eax
1002006f:	mov    DWORD PTR [esi+0x4],eax
10020072:	mov    DWORD PTR [esi+0x10],eax
10020075:	mov    DWORD PTR [esi+0xc],eax
10020078:	mov    DWORD PTR [esi+0x8],eax
1002007b:	mov    DWORD PTR [esi+0x14],eax
1002007e:	mov    DWORD PTR [esi+0x18],eax
10020081:	mov    DWORD PTR [esi],0x100706e4
10020087:	mov    ecx,DWORD PTR ds:0x10080c04
1002008d:	mov    eax,DWORD PTR [ecx]
1002008f:	call   DWORD PTR [eax+0x4]
10020092:	mov    eax,esi
10020094:	ret    
10020095:	push   esi
10020096:	mov    esi,ecx
10020098:	mov    DWORD PTR [esi],0x100706e4
1002009e:	mov    DWORD PTR [esi+0x18],0xc0000001
100200a5:	mov    ecx,DWORD PTR ds:0x10080c04
100200ab:	mov    eax,DWORD PTR [ecx]
100200ad:	call   DWORD PTR [eax+0x8]
100200b0:	mov    ecx,esi
100200b2:	pop    esi
100200b3:	jmp    0x100246ea
100200b8:	push   ebx
100200b9:	push   DWORD PTR [esp+0xc]
100200bd:	mov    ebx,DWORD PTR [esp+0x14]
100200c1:	push   DWORD PTR [esp+0xc]
100200c5:	mov    eax,0x1007063c
100200ca:	call   0x10010334
100200cf:	pop    ebx
100200d0:	ret    0xc
100200d3:	push   DWORD PTR [esi]
100200d5:	call   0x1001b365
100200da:	and    DWORD PTR [esi],0x0
100200dd:	pop    ecx
100200de:	ret    
100200df:	push   0x10
100200e1:	mov    eax,0x10060166
100200e6:	call   0x10059a68
100200eb:	mov    eax,DWORD PTR [ebp+0x8]
100200ee:	xor    esi,esi
100200f0:	cmp    eax,esi
100200f2:	jne    0x100200fb
100200f4:	mov    eax,0x80004003
100200f9:	jmp    0x10020161
100200fb:	push   0xf4
10020100:	mov    DWORD PTR [eax],esi
10020102:	mov    DWORD PTR [ebp-0x14],0x8007000e
10020109:	mov    DWORD PTR [ebp-0x1c],esi
1002010c:	mov    DWORD PTR [ebp-0x4],esi
1002010f:	call   0x1004349e
10020114:	pop    ecx
10020115:	mov    DWORD PTR [ebp-0x18],eax
10020118:	cmp    eax,esi
1002011a:	mov    BYTE PTR [ebp-0x4],0x1
1002011e:	je     0x10020128
10020120:	push   eax
10020121:	call   0x10020dc5
10020126:	mov    esi,eax
10020128:	or     DWORD PTR [ebp-0x4],0xffffffff
1002012c:	jmp    0x10020137
1002012e:	mov    eax,0x10020134
10020133:	ret    
10020134:	mov    esi,DWORD PTR [ebp-0x1c]
10020137:	test   esi,esi
10020139:	je     0x1002015e
1002013b:	push   DWORD PTR [ebp+0x8]
1002013e:	inc    DWORD PTR [esi+0x4]
10020141:	dec    DWORD PTR [esi+0x4]
10020144:	mov    eax,DWORD PTR [esi]
10020146:	push   0x1006dd2c
1002014b:	push   esi
1002014c:	call   DWORD PTR [eax]
1002014e:	test   eax,eax
10020150:	mov    DWORD PTR [ebp-0x14],eax
10020153:	je     0x1002015e
10020155:	mov    eax,DWORD PTR [esi]
10020157:	push   0x1
10020159:	mov    ecx,esi
1002015b:	call   DWORD PTR [eax+0xc]
1002015e:	mov    eax,DWORD PTR [ebp-0x14]
10020161:	call   0x10059b0d
10020166:	ret    0x4
10020169:	push   ebp
1002016a:	mov    ebp,esp
1002016c:	and    esp,0xfffffff8
1002016f:	push   0xffffffff
10020171:	push   0x10060bcc
10020176:	mov    eax,fs:0x0
1002017c:	push   eax
1002017d:	sub    esp,0x70
10020180:	mov    eax,ds:0x1007e030
10020185:	xor    eax,esp
10020187:	mov    DWORD PTR [esp+0x68],eax
1002018b:	push   ebx
1002018c:	push   esi
1002018d:	push   edi
1002018e:	mov    eax,ds:0x1007e030
10020193:	xor    eax,esp
10020195:	push   eax
10020196:	lea    eax,[esp+0x80]
1002019d:	mov    fs:0x0,eax
100201a3:	mov    edi,ecx
100201a5:	mov    eax,edi
100201a7:	mov    DWORD PTR [esp+0x14],edi
100201ab:	mov    esi,edx
100201ad:	call   0x10020b48
100201b2:	lea    eax,[esp+0x68]
100201b6:	push   eax
100201b7:	push   esi
100201b8:	call   DWORD PTR ds:0x10066438
100201be:	test   eax,eax
100201c0:	jl     0x100202df
100201c6:	lea    esi,[edi+0xc]
100201c9:	push   esi
100201ca:	push   0x1006b8b8
100201cf:	push   0x17
100201d1:	push   0x0
100201d3:	lea    eax,[esp+0x78]
100201d7:	push   eax
100201d8:	mov    DWORD PTR [esp+0x2c],esi
100201dc:	call   DWORD PTR ds:0x1006643c
100201e2:	test   eax,eax
100201e4:	mov    DWORD PTR [esp+0x10],eax
100201e8:	jl     0x1002021f
100201ea:	mov    eax,DWORD PTR [esi]
100201ec:	mov    ecx,DWORD PTR [eax]
100201ee:	lea    ebx,[edi+0x8]
100201f1:	push   ebx
100201f2:	push   0x1006b8a8
100201f7:	push   eax
100201f8:	call   DWORD PTR [ecx]
100201fa:	test   eax,eax
100201fc:	mov    DWORD PTR [esp+0x10],eax
10020200:	jl     0x1002021f
10020202:	mov    esi,DWORD PTR [esi]
10020204:	mov    eax,DWORD PTR [esi]
10020206:	push   edi
10020207:	push   esi
10020208:	call   DWORD PTR [eax+0xc]
1002020b:	test   eax,eax
1002020d:	mov    DWORD PTR [esp+0x10],eax
10020211:	jl     0x1002021f
10020213:	mov    ebx,DWORD PTR [ebx]
10020215:	mov    eax,DWORD PTR [ebx]
10020217:	push   ebx
10020218:	call   DWORD PTR [eax+0xc]
1002021b:	mov    DWORD PTR [esp+0x10],eax
1002021f:	push   0x10070624
10020224:	lea    eax,[esp+0x50]
10020228:	call   0x100209d6
1002022d:	and    DWORD PTR [esp+0x88],0x0
10020235:	mov    eax,edi
10020237:	neg    eax
10020239:	sbb    eax,eax
1002023b:	lea    ecx,[edi-0x8]
1002023e:	and    eax,ecx
10020240:	lea    ebx,[eax+0x24]
10020243:	lea    eax,[esp+0x4c]
10020247:	lea    esi,[esp+0x20]
1002024b:	call   0x10004af5
10020250:	mov    DWORD PTR [esp+0x3c],ebx
10020254:	mov    eax,esi
10020256:	add    edi,0x10
10020259:	push   eax
1002025a:	push   edi
1002025b:	mov    DWORD PTR [esp+0x24],edi
1002025f:	lea    edi,[esp+0x48]
10020263:	mov    BYTE PTR [esp+0x90],0x1
1002026b:	call   0x10020a02
10020270:	push   0x1
10020272:	xor    ebx,ebx
10020274:	mov    BYTE PTR [esp+0x8c],0x0
1002027c:	call   0x100051ce
10020281:	cmp    DWORD PTR [esp+0x10],ebx
10020285:	jl     0x100202bc
10020287:	mov    esi,DWORD PTR [esp+0x18]
1002028b:	mov    eax,DWORD PTR [esi]
1002028d:	mov    ecx,DWORD PTR [eax]
1002028f:	push   0xe
10020291:	push   0x10070624
10020296:	push   eax
10020297:	call   DWORD PTR [ecx+0x20]
1002029a:	test   eax,eax
1002029c:	jl     0x100202bc
1002029e:	mov    eax,DWORD PTR [esi]
100202a0:	mov    ecx,DWORD PTR [eax]
100202a2:	push   0x1
100202a4:	push   eax
100202a5:	call   DWORD PTR [ecx+0x14]
100202a8:	test   eax,eax
100202aa:	jl     0x100202bc
100202ac:	push   0x1
100202ae:	lea    esi,[esp+0x50]
100202b2:	call   0x100051ce
100202b7:	xor    eax,eax
100202b9:	inc    eax
100202ba:	jmp    0x100202e1
100202bc:	mov    ecx,DWORD PTR [esp+0x1c]
100202c0:	lea    eax,[esp+0x4c]
100202c4:	call   0x10020ab8
100202c9:	mov    eax,DWORD PTR [esp+0x14]
100202cd:	call   0x10020b48
100202d2:	push   0x1
100202d4:	xor    ebx,ebx
100202d6:	lea    esi,[esp+0x50]
100202da:	call   0x100051ce
100202df:	xor    eax,eax
100202e1:	mov    ecx,DWORD PTR [esp+0x80]
100202e8:	mov    DWORD PTR fs:0x0,ecx
100202ef:	pop    ecx
100202f0:	pop    edi
100202f1:	pop    esi
100202f2:	pop    ebx
100202f3:	mov    ecx,DWORD PTR [esp+0x68]
100202f7:	xor    ecx,esp
100202f9:	call   0x10042e97
100202fe:	mov    esp,ebp
10020300:	pop    ebp
10020301:	ret    
10020302:	push   ebp
10020303:	mov    ebp,esp
10020305:	and    esp,0xfffffff8
10020308:	push   0xffffffff
1002030a:	push   0x10060b94
1002030f:	mov    eax,fs:0x0
10020315:	push   eax
10020316:	sub    esp,0x60
10020319:	mov    eax,ds:0x1007e030
1002031e:	xor    eax,esp
10020320:	mov    DWORD PTR [esp+0x58],eax
10020324:	push   ebx
10020325:	push   esi
10020326:	push   edi
10020327:	mov    eax,ds:0x1007e030
1002032c:	xor    eax,esp
1002032e:	push   eax
1002032f:	lea    eax,[esp+0x70]
10020333:	mov    fs:0x0,eax
10020339:	mov    ebx,ecx
1002033b:	mov    esi,DWORD PTR [ebp+0x8]
1002033e:	mov    edi,edx
10020340:	cmp    DWORD PTR [edi+0xc],0x0
10020344:	mov    DWORD PTR [esp+0x18],edi
10020348:	mov    DWORD PTR [esp+0x1c],esi
1002034c:	je     0x100203fa
10020352:	test   ebx,ebx
10020354:	je     0x100203fa
1002035a:	call   DWORD PTR ds:0x1007efec
10020360:	push   esi
10020361:	lea    eax,[esp+0x50]
10020365:	call   0x100209d6
1002036a:	and    DWORD PTR [esp+0x78],0x0
1002036f:	lea    eax,[esp+0x4c]
10020373:	lea    esi,[esp+0x20]
10020377:	call   0x10004af5
1002037c:	mov    DWORD PTR [esp+0x3c],ebx
10020380:	lea    eax,[edi+0x10]
10020383:	mov    ecx,esi
10020385:	push   ecx
10020386:	push   eax
10020387:	lea    edi,[esp+0x48]
1002038b:	mov    BYTE PTR [esp+0x80],0x1
10020393:	mov    DWORD PTR [esp+0x1c],eax
10020397:	call   0x10020a02
1002039c:	push   0x1
1002039e:	xor    ebx,ebx
100203a0:	mov    BYTE PTR [esp+0x7c],0x0
100203a5:	call   0x100051ce
100203aa:	mov    esi,DWORD PTR [esp+0x18]
100203ae:	mov    eax,DWORD PTR [esi+0xc]
100203b1:	mov    ecx,DWORD PTR [eax]
100203b3:	push   0xe
100203b5:	push   DWORD PTR [esp+0x20]
100203b9:	push   eax
100203ba:	call   DWORD PTR [ecx+0x20]
100203bd:	test   eax,eax
100203bf:	jl     0x100203e0
100203c1:	mov    esi,DWORD PTR [esi+0xc]
100203c4:	mov    eax,DWORD PTR [esi]
100203c6:	push   0x2
100203c8:	push   esi
100203c9:	call   DWORD PTR [eax+0x14]
100203cc:	test   eax,eax
100203ce:	jl     0x100203e0
100203d0:	push   0x1
100203d2:	lea    esi,[esp+0x50]
100203d6:	call   0x100051ce
100203db:	xor    eax,eax
100203dd:	inc    eax
100203de:	jmp    0x100203fc
100203e0:	mov    ecx,DWORD PTR [esp+0x14]
100203e4:	lea    eax,[esp+0x4c]
100203e8:	call   0x10020ab8
100203ed:	push   0x1
100203ef:	xor    ebx,ebx
100203f1:	lea    esi,[esp+0x50]
100203f5:	call   0x100051ce
100203fa:	xor    eax,eax
100203fc:	mov    ecx,DWORD PTR [esp+0x70]
10020400:	mov    DWORD PTR fs:0x0,ecx
10020407:	pop    ecx
10020408:	pop    edi
10020409:	pop    esi
1002040a:	pop    ebx
1002040b:	mov    ecx,DWORD PTR [esp+0x58]
1002040f:	xor    ecx,esp
10020411:	call   0x10042e97
10020416:	mov    esp,ebp
10020418:	pop    ebp
10020419:	ret    0x4
1002041c:	push   ebp
1002041d:	mov    ebp,esp
1002041f:	sub    esp,0x1c
10020422:	mov    eax,ds:0x1007e030
10020427:	xor    eax,ebp
10020429:	mov    DWORD PTR [ebp-0x8],eax
1002042c:	mov    eax,DWORD PTR [ebp+0x8]
1002042f:	and    DWORD PTR [ebp-0x1c],0x0
10020433:	push   esi
10020434:	push   edi
10020435:	mov    esi,0x1006b858
1002043a:	lea    edi,[ebp-0x18]
1002043d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002043e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002043f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10020440:	lea    ecx,[ebp-0x18]
10020443:	push   ecx
10020444:	push   eax
10020445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10020446:	call   DWORD PTR ds:0x10066438
1002044c:	test   eax,eax
1002044e:	jl     0x10020467
10020450:	lea    eax,[ebp-0x1c]
10020453:	push   eax
10020454:	push   0x1006b8c8
10020459:	push   0x1
1002045b:	push   0x0
1002045d:	lea    eax,[ebp-0x18]
10020460:	push   eax
10020461:	call   DWORD PTR ds:0x1006643c
10020467:	mov    ecx,DWORD PTR [ebp-0x8]
1002046a:	mov    eax,DWORD PTR [ebp-0x1c]
1002046d:	pop    edi
1002046e:	xor    ecx,ebp
10020470:	pop    esi
10020471:	call   0x10042e97
10020476:	leave  
10020477:	ret    0x4
1002047a:	push   ebp
1002047b:	mov    ebp,esp
1002047d:	mov    ecx,DWORD PTR [ecx+0xc]
10020480:	sub    esp,0x14
10020483:	push   edi
10020484:	xor    edi,edi
10020486:	cmp    ecx,edi
10020488:	mov    eax,0x80004005
1002048d:	je     0x100204ee
1002048f:	mov    eax,DWORD PTR [ebp+0xc]
10020492:	lea    edx,[ebp-0x4]
10020495:	mov    DWORD PTR [ebp-0x14],eax
10020498:	mov    eax,DWORD PTR [ebp+0x10]
1002049b:	push   edx
1002049c:	push   edi
1002049d:	mov    DWORD PTR [ebp-0x4],edi
100204a0:	mov    DWORD PTR [ebp-0x10],edi
100204a3:	mov    DWORD PTR [ebp-0xc],eax
100204a6:	mov    DWORD PTR [ebp-0x8],edi
100204a9:	mov    eax,DWORD PTR [ecx]
100204ab:	push   ecx
100204ac:	call   DWORD PTR [eax+0x28]
100204af:	cmp    eax,edi
100204b1:	jl     0x100204ee
100204b3:	mov    eax,DWORD PTR [ebp-0x4]
100204b6:	mov    ecx,DWORD PTR [eax]
100204b8:	push   esi
100204b9:	lea    edx,[ebp+0xc]
100204bc:	push   edx
100204bd:	push   0x9
100204bf:	push   0x1
100204c1:	lea    edx,[ebp+0x8]
100204c4:	push   edx
100204c5:	mov    esi,0x1006b858
100204ca:	push   esi
100204cb:	push   eax
100204cc:	call   DWORD PTR [ecx+0x14]
100204cf:	cmp    eax,edi
100204d1:	jl     0x100204ed
100204d3:	mov    eax,DWORD PTR [ebp-0x4]
100204d6:	mov    ecx,DWORD PTR [eax]
100204d8:	push   edi
100204d9:	push   edi
100204da:	push   DWORD PTR [ebp+0x14]
100204dd:	lea    edx,[ebp-0x14]
100204e0:	push   edx
100204e1:	push   0x1
100204e3:	push   0x9
100204e5:	push   esi
100204e6:	push   DWORD PTR [ebp+0xc]
100204e9:	push   eax
100204ea:	call   DWORD PTR [ecx+0x18]
100204ed:	pop    esi
100204ee:	pop    edi
100204ef:	leave  
100204f0:	ret    0x10
100204f3:	push   ebp
100204f4:	mov    ebp,esp
100204f6:	sub    esp,0x30
100204f9:	push   esi
100204fa:	push   edi
100204fb:	push   ebx
100204fc:	lea    eax,[ebp-0x8]
100204ff:	call   0x10020cc5
10020504:	mov    eax,ds:0x10080f58
10020509:	lea    edi,[ebp-0x10]
1002050c:	lea    esi,[ebp-0x8]
1002050f:	mov    DWORD PTR [ebp-0xc],eax
10020512:	mov    DWORD PTR [ebp-0x10],0x10080f54
10020519:	call   0x10004ada
1002051e:	test   al,al
10020520:	mov    ecx,DWORD PTR [ebp-0x4]
10020523:	jne    0x1002052c
10020525:	mov    eax,DWORD PTR [ebx]
10020527:	cmp    eax,DWORD PTR [ecx+0xc]
1002052a:	jae    0x1002055f
1002052c:	xor    eax,eax
1002052e:	lea    edi,[ebp-0x18]
10020531:	stos   DWORD PTR es:[edi],eax
10020532:	stos   DWORD PTR es:[edi],eax
10020533:	stos   DWORD PTR es:[edi],eax
10020534:	stos   DWORD PTR es:[edi],eax
10020535:	mov    eax,DWORD PTR [ebx]
10020537:	mov    DWORD PTR [ebp-0x2c],eax
1002053a:	lea    esi,[ebp-0x18]
1002053d:	lea    edi,[ebp-0x28]
10020540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10020541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10020542:	push   ecx
10020543:	push   DWORD PTR [ebp-0x8]
10020546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10020547:	lea    eax,[ebp-0x10]
1002054a:	push   eax
1002054b:	lea    eax,[ebp-0x2c]
1002054e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002054f:	call   0x10020b80
10020554:	mov    ecx,DWORD PTR [eax]
10020556:	mov    eax,DWORD PTR [eax+0x4]
10020559:	mov    DWORD PTR [ebp-0x8],ecx
1002055c:	mov    DWORD PTR [ebp-0x4],eax
1002055f:	lea    esi,[ebp-0x8]
10020562:	call   0x1002088e
10020567:	pop    edi
10020568:	add    eax,0x4
1002056b:	pop    esi
1002056c:	leave  
1002056d:	ret    
1002056e:	push   ebp
1002056f:	mov    ebp,esp
10020571:	and    esp,0xfffffff8
10020574:	mov    eax,ds:0x10080f58
10020579:	mov    edx,DWORD PTR [eax]
1002057b:	sub    esp,0xc
1002057e:	push   esi
1002057f:	push   eax
10020580:	mov    ecx,0x10080f54
10020585:	mov    esi,ecx
10020587:	push   esi
10020588:	push   edx
10020589:	push   ecx
1002058a:	lea    eax,[esp+0x18]
1002058e:	push   eax
1002058f:	call   0x10021250
10020594:	push   DWORD PTR ds:0x10080f58
1002059a:	call   0x10042e92
1002059f:	and    DWORD PTR ds:0x10080f58,0x0
100205a6:	and    DWORD PTR ds:0x10080f5c,0x0
100205ad:	pop    ecx
100205ae:	pop    esi
100205af:	mov    esp,ebp
100205b1:	pop    ebp
100205b2:	ret    
100205b3:	push   0x48
100205b5:	mov    eax,0x100605b3
100205ba:	call   0x10059a35
100205bf:	mov    ebx,DWORD PTR [ebp+0x10]
100205c2:	cmp    BYTE PTR [ebx+0x21],0x0
100205c6:	je     0x100205fa
100205c8:	push   0x1006ccec
100205cd:	lea    ecx,[ebp-0x2c]
100205d0:	call   0x100011cd
100205d5:	and    DWORD PTR [ebp-0x4],0x0
100205d9:	lea    eax,[ebp-0x2c]
100205dc:	push   eax
100205dd:	lea    ecx,[ebp-0x54]
100205e0:	call   0x10001077
100205e5:	push   0x10074cc0
100205ea:	lea    eax,[ebp-0x54]
100205ed:	push   eax
100205ee:	mov    DWORD PTR [ebp-0x54],0x1006b978
100205f5:	call   0x100479b4
100205fa:	lea    esi,[ebp+0xc]
100205fd:	call   0x10020d78
10020602:	mov    ecx,DWORD PTR [ebx]
10020604:	cmp    BYTE PTR [ecx+0x21],0x0
10020608:	je     0x1002060f
1002060a:	mov    edi,DWORD PTR [ebx+0x8]
1002060d:	jmp    0x10020626
1002060f:	mov    eax,DWORD PTR [ebx+0x8]
10020612:	cmp    BYTE PTR [eax+0x21],0x0
10020616:	je     0x1002061c
10020618:	mov    edi,ecx
1002061a:	jmp    0x10020626
1002061c:	mov    eax,DWORD PTR [ebp+0x10]
1002061f:	cmp    eax,ebx
10020621:	mov    edi,DWORD PTR [eax+0x8]
10020624:	jne    0x1002069e
10020626:	cmp    BYTE PTR [edi+0x21],0x0
1002062a:	mov    esi,DWORD PTR [ebx+0x4]
1002062d:	jne    0x10020632
1002062f:	mov    DWORD PTR [edi+0x4],esi
10020632:	mov    eax,ds:0x10080f58
10020637:	cmp    DWORD PTR [eax+0x4],ebx
1002063a:	jne    0x10020641
1002063c:	mov    DWORD PTR [eax+0x4],edi
1002063f:	jmp    0x1002064c
10020641:	cmp    DWORD PTR [esi],ebx
10020643:	jne    0x10020649
10020645:	mov    DWORD PTR [esi],edi
10020647:	jmp    0x1002064c
10020649:	mov    DWORD PTR [esi+0x8],edi
1002064c:	mov    edx,DWORD PTR ds:0x10080f58
10020652:	cmp    DWORD PTR [edx],ebx
10020654:	jne    0x10020672
10020656:	cmp    BYTE PTR [edi+0x21],0x0
1002065a:	je     0x10020660
1002065c:	mov    ecx,esi
1002065e:	jmp    0x10020670
10020660:	mov    eax,DWORD PTR [edi]
10020662:	mov    ecx,edi
10020664:	jmp    0x1002066a
10020666:	mov    ecx,eax
10020668:	mov    eax,DWORD PTR [ecx]
1002066a:	cmp    BYTE PTR [eax+0x21],0x0
1002066e:	je     0x10020666
10020670:	mov    DWORD PTR [edx],ecx
10020672:	mov    edx,DWORD PTR ds:0x10080f58
10020678:	cmp    DWORD PTR [edx+0x8],ebx
1002067b:	jne    0x100206f8
1002067d:	cmp    BYTE PTR [edi+0x21],0x0
10020681:	je     0x10020687
10020683:	mov    ecx,esi
10020685:	jmp    0x10020699
10020687:	mov    eax,DWORD PTR [edi+0x8]
1002068a:	mov    ecx,edi
1002068c:	jmp    0x10020693
1002068e:	mov    ecx,eax
10020690:	mov    eax,DWORD PTR [ecx+0x8]
10020693:	cmp    BYTE PTR [eax+0x21],0x0
10020697:	je     0x1002068e
10020699:	mov    DWORD PTR [edx+0x8],ecx
1002069c:	jmp    0x100206f8
1002069e:	mov    DWORD PTR [ecx+0x4],eax
100206a1:	mov    ecx,DWORD PTR [ebx]
100206a3:	mov    DWORD PTR [eax],ecx
100206a5:	cmp    eax,DWORD PTR [ebx+0x8]
100206a8:	jne    0x100206ae
100206aa:	mov    esi,eax
100206ac:	jmp    0x100206c8
100206ae:	cmp    BYTE PTR [edi+0x21],0x0
100206b2:	mov    esi,DWORD PTR [eax+0x4]
100206b5:	jne    0x100206ba
100206b7:	mov    DWORD PTR [edi+0x4],esi
100206ba:	mov    DWORD PTR [esi],edi
100206bc:	mov    ecx,DWORD PTR [ebx+0x8]
100206bf:	mov    DWORD PTR [eax+0x8],ecx
100206c2:	mov    ecx,DWORD PTR [ebx+0x8]
100206c5:	mov    DWORD PTR [ecx+0x4],eax
100206c8:	mov    ecx,DWORD PTR ds:0x10080f58
100206ce:	cmp    DWORD PTR [ecx+0x4],ebx
100206d1:	jne    0x100206d8
100206d3:	mov    DWORD PTR [ecx+0x4],eax
100206d6:	jmp    0x100206e6
100206d8:	mov    ecx,DWORD PTR [ebx+0x4]
100206db:	cmp    DWORD PTR [ecx],ebx
100206dd:	jne    0x100206e3
100206df:	mov    DWORD PTR [ecx],eax
100206e1:	jmp    0x100206e6
100206e3:	mov    DWORD PTR [ecx+0x8],eax
100206e6:	mov    ecx,DWORD PTR [ebx+0x4]
100206e9:	mov    DWORD PTR [eax+0x4],ecx
100206ec:	mov    dl,BYTE PTR [ebx+0x20]
100206ef:	mov    cl,BYTE PTR [eax+0x20]
100206f2:	mov    BYTE PTR [eax+0x20],dl
100206f5:	mov    BYTE PTR [ebx+0x20],cl
100206f8:	cmp    BYTE PTR [ebx+0x20],0x1
100206fc:	jne    0x100207fa
10020702:	jmp    0x100207b5
10020707:	cmp    BYTE PTR [edi+0x20],0x1
1002070b:	jne    0x100207f6
10020711:	mov    ecx,DWORD PTR [esi]
10020713:	cmp    edi,ecx
10020715:	jne    0x1002077e
10020717:	mov    ecx,DWORD PTR [esi+0x8]
1002071a:	cmp    BYTE PTR [ecx+0x20],0x0
1002071e:	jne    0x10020732
10020720:	mov    BYTE PTR [ecx+0x20],0x1
10020724:	mov    ecx,esi
10020726:	mov    BYTE PTR [esi+0x20],0x0
1002072a:	call   0x10020cfc
1002072f:	mov    ecx,DWORD PTR [esi+0x8]
10020732:	cmp    BYTE PTR [ecx+0x21],0x0
10020736:	jne    0x100207b0
10020738:	mov    eax,DWORD PTR [ecx]
1002073a:	cmp    BYTE PTR [eax+0x20],0x1
1002073e:	jne    0x10020749
10020740:	mov    eax,DWORD PTR [ecx+0x8]
10020743:	cmp    BYTE PTR [eax+0x20],0x1
10020747:	je     0x100207ac
10020749:	mov    eax,DWORD PTR [ecx+0x8]
1002074c:	cmp    BYTE PTR [eax+0x20],0x1
10020750:	jne    0x10020764
10020752:	mov    eax,DWORD PTR [ecx]
10020754:	mov    BYTE PTR [eax+0x20],0x1
10020758:	mov    BYTE PTR [ecx+0x20],0x0
1002075c:	call   0x10020d39
10020761:	mov    ecx,DWORD PTR [esi+0x8]
10020764:	mov    al,BYTE PTR [esi+0x20]
10020767:	mov    BYTE PTR [ecx+0x20],al
1002076a:	mov    BYTE PTR [esi+0x20],0x1
1002076e:	mov    eax,DWORD PTR [ecx+0x8]
10020771:	mov    ecx,esi
10020773:	mov    BYTE PTR [eax+0x20],0x1
10020777:	call   0x10020cfc
1002077c:	jmp    0x100207f6
1002077e:	cmp    BYTE PTR [ecx+0x20],0x0
10020782:	jne    0x10020795
10020784:	mov    BYTE PTR [ecx+0x20],0x1
10020788:	mov    ecx,esi
1002078a:	mov    BYTE PTR [esi+0x20],0x0
1002078e:	call   0x10020d39
10020793:	mov    ecx,DWORD PTR [esi]
10020795:	cmp    BYTE PTR [ecx+0x21],0x0
10020799:	jne    0x100207b0
1002079b:	mov    eax,DWORD PTR [ecx+0x8]
1002079e:	cmp    BYTE PTR [eax+0x20],0x1
100207a2:	jne    0x100207c5
100207a4:	mov    eax,DWORD PTR [ecx]
100207a6:	cmp    BYTE PTR [eax+0x20],0x1
100207aa:	jne    0x100207c5
100207ac:	mov    BYTE PTR [ecx+0x20],0x0
100207b0:	mov    edi,esi
100207b2:	mov    esi,DWORD PTR [esi+0x4]
100207b5:	mov    eax,ds:0x10080f58
100207ba:	cmp    edi,DWORD PTR [eax+0x4]
100207bd:	jne    0x10020707
100207c3:	jmp    0x100207f6
100207c5:	mov    eax,DWORD PTR [ecx]
100207c7:	cmp    BYTE PTR [eax+0x20],0x1
100207cb:	jne    0x100207df
100207cd:	mov    eax,DWORD PTR [ecx+0x8]
100207d0:	mov    BYTE PTR [eax+0x20],0x1
100207d4:	mov    BYTE PTR [ecx+0x20],0x0
100207d8:	call   0x10020cfc
100207dd:	mov    ecx,DWORD PTR [esi]
100207df:	mov    al,BYTE PTR [esi+0x20]
100207e2:	mov    BYTE PTR [ecx+0x20],al
100207e5:	mov    BYTE PTR [esi+0x20],0x1
100207e9:	mov    eax,DWORD PTR [ecx]
100207eb:	mov    ecx,esi
100207ed:	mov    BYTE PTR [eax+0x20],0x1
100207f1:	call   0x10020d39
100207f6:	mov    BYTE PTR [edi+0x20],0x1
100207fa:	push   ebx
100207fb:	call   0x10042e92
10020800:	cmp    DWORD PTR ds:0x10080f5c,0x0
10020807:	pop    ecx
10020808:	jbe    0x10020810
1002080a:	dec    DWORD PTR ds:0x10080f5c
10020810:	mov    ecx,DWORD PTR [ebp+0xc]
10020813:	mov    eax,DWORD PTR [ebp+0x8]
10020816:	mov    DWORD PTR [eax],ecx
10020818:	mov    ecx,DWORD PTR [ebp+0x10]
1002081b:	mov    DWORD PTR [eax+0x4],ecx
1002081e:	call   0x10059b0d
10020823:	ret    0xc
10020826:	push   ebp
10020827:	mov    ebp,esp
10020829:	sub    esp,0x14
1002082c:	push   ebx
1002082d:	push   esi
1002082e:	push   edi
1002082f:	push   DWORD PTR [ebp+0xc]
10020832:	lea    eax,[ebp-0x8]
10020835:	call   0x10020cc5
1002083a:	mov    eax,ds:0x10080f58
1002083f:	mov    ebx,0x10080f54
10020844:	lea    edi,[ebp-0x10]
10020847:	lea    esi,[ebp-0x8]
1002084a:	mov    DWORD PTR [ebp-0xc],eax
1002084d:	mov    DWORD PTR [ebp-0x10],ebx
10020850:	call   0x10004ada
10020855:	test   al,al
10020857:	jne    0x1002086a
10020859:	mov    eax,DWORD PTR [ebp+0xc]
1002085c:	mov    eax,DWORD PTR [eax]
1002085e:	mov    ecx,DWORD PTR [ebp-0x4]
10020861:	cmp    eax,DWORD PTR [ecx+0xc]
10020864:	jb     0x1002086a
10020866:	mov    eax,esi
10020868:	jmp    0x10020878
1002086a:	mov    eax,ds:0x10080f58
1002086f:	mov    DWORD PTR [ebp-0xc],eax
10020872:	mov    DWORD PTR [ebp-0x10],ebx
10020875:	lea    eax,[ebp-0x10]
10020878:	mov    edx,DWORD PTR [eax]
1002087a:	mov    ecx,DWORD PTR [ebp+0x8]
1002087d:	mov    eax,DWORD PTR [eax+0x4]
10020880:	pop    edi
10020881:	pop    esi
10020882:	mov    DWORD PTR [ecx+0x4],eax
10020885:	mov    DWORD PTR [ecx],edx
10020887:	mov    eax,ecx
10020889:	pop    ebx
1002088a:	leave  
1002088b:	ret    0x8
1002088e:	cmp    DWORD PTR [esi],0x0
10020891:	jne    0x10020898
10020893:	call   0x100433b0
10020898:	mov    eax,DWORD PTR [esi]
1002089a:	mov    ecx,DWORD PTR [esi+0x4]
1002089d:	cmp    ecx,DWORD PTR [eax+0x4]
100208a0:	jne    0x100208a7
100208a2:	call   0x100433b0
100208a7:	mov    eax,DWORD PTR [esi+0x4]
100208aa:	add    eax,0xc
100208ad:	ret    
100208ae:	push   esi
100208af:	mov    esi,DWORD PTR [esp+0x14]
100208b3:	test   esi,esi
100208b5:	jne    0x100208be
100208b7:	mov    eax,0x80004003
100208bc:	jmp    0x100208eb
100208be:	xor    eax,eax
100208c0:	cmp    DWORD PTR ds:0x1007f96c,eax
100208c6:	jne    0x100208d1
100208c8:	push   DWORD PTR [esp+0x10]
100208cc:	call   0x1001b79a
100208d1:	mov    ecx,DWORD PTR ds:0x1007f96c
100208d7:	mov    DWORD PTR [esi],ecx
100208d9:	mov    ecx,DWORD PTR ds:0x1007f96c
100208df:	test   ecx,ecx
100208e1:	je     0x100208eb
100208e3:	mov    eax,DWORD PTR [ecx]
100208e5:	push   ecx
100208e6:	call   DWORD PTR [eax+0x4]
100208e9:	xor    eax,eax
100208eb:	pop    esi
100208ec:	ret    0x10
100208ef:	push   ebx
100208f0:	push   DWORD PTR [esp+0x1c]
100208f4:	mov    ebx,DWORD PTR [esp+0x14]
100208f8:	push   DWORD PTR [esp+0x1c]
100208fc:	push   DWORD PTR [esp+0x1c]
10020900:	call   0x1001b581
10020905:	pop    ebx
10020906:	ret    0x18
10020909:	mov    DWORD PTR [ecx],0x10070704
1002090f:	mov    DWORD PTR [ecx+0x4],0xc0000001
10020916:	mov    ecx,DWORD PTR ds:0x10080c04
1002091c:	mov    eax,DWORD PTR [ecx]
1002091e:	jmp    DWORD PTR [eax+0x8]
10020921:	mov    ecx,DWORD PTR [esp+0x4]
10020925:	dec    DWORD PTR [ecx+0x4]
10020928:	push   esi
10020929:	mov    esi,DWORD PTR [ecx+0x4]
1002092c:	jne    0x10020939
1002092e:	test   ecx,ecx
10020930:	je     0x10020939
10020932:	mov    eax,DWORD PTR [ecx]
10020934:	push   0x1
10020936:	call   DWORD PTR [eax+0x1c]
10020939:	mov    eax,esi
1002093b:	pop    esi
1002093c:	ret    0x4
1002093f:	push   ebx
10020940:	push   DWORD PTR [esp+0xc]
10020944:	mov    ebx,DWORD PTR [esp+0x14]
10020948:	push   DWORD PTR [esp+0xc]
1002094c:	mov    eax,0x100705bc
10020951:	call   0x10010334
10020956:	pop    ebx
10020957:	ret    0xc
1002095a:	push   esi
1002095b:	mov    esi,ecx
1002095d:	call   0x1001ff47
10020962:	test   BYTE PTR [esp+0x8],0x1
10020967:	je     0x10020970
10020969:	push   esi
1002096a:	call   0x10042e92
1002096f:	pop    ecx
10020970:	mov    eax,esi
10020972:	pop    esi
10020973:	ret    0x4
10020976:	push   esi
10020977:	mov    esi,ecx
10020979:	call   0x1001ffc3
1002097e:	test   BYTE PTR [esp+0x8],0x1
10020983:	je     0x1002098c
10020985:	push   esi
10020986:	call   0x10042e92
1002098b:	pop    ecx
1002098c:	mov    eax,esi
1002098e:	pop    esi
1002098f:	ret    0x4
10020992:	push   esi
10020993:	mov    esi,ecx
10020995:	call   0x10020095
1002099a:	test   BYTE PTR [esp+0x8],0x1
1002099f:	je     0x100209a8
100209a1:	push   esi
100209a2:	call   0x10042e92
100209a7:	pop    ecx
100209a8:	mov    eax,esi
100209aa:	pop    esi
100209ab:	ret    0x4
100209ae:	push   ebx
100209af:	push   0x1
100209b1:	xor    ebx,ebx
100209b3:	call   0x100051ce
100209b8:	pop    ebx
100209b9:	ret    
100209ba:	push   esi
100209bb:	mov    esi,ecx
100209bd:	call   0x10020909
100209c2:	test   BYTE PTR [esp+0x8],0x1
100209c7:	je     0x100209d0
100209c9:	push   esi
100209ca:	call   0x10042e92
100209cf:	pop    ecx
100209d0:	mov    eax,esi
100209d2:	pop    esi
100209d3:	ret    0x4
100209d6:	push   esi
100209d7:	push   DWORD PTR [esp+0x8]
100209db:	mov    esi,eax
100209dd:	and    DWORD PTR [esi+0x14],0x0
100209e1:	mov    DWORD PTR [esi+0x18],0x7
100209e8:	and    WORD PTR [esi+0x4],0x0
100209ed:	call   0x100436f3
100209f2:	pop    ecx
100209f3:	push   DWORD PTR [esp+0x8]
100209f7:	call   0x10005149
100209fc:	mov    eax,esi
100209fe:	pop    esi
100209ff:	ret    0x4
10020a02:	push   ebp
10020a03:	mov    ebp,esp
10020a05:	sub    esp,0x10
10020a08:	mov    edx,DWORD PTR [ebp+0x8]
10020a0b:	mov    eax,DWORD PTR [edx+0x4]
10020a0e:	push   ebx
10020a0f:	push   esi
10020a10:	mov    esi,DWORD PTR [eax+0x4]
10020a13:	cmp    BYTE PTR [esi+0x2d],0x0
10020a17:	mov    DWORD PTR [ebp-0x4],eax
10020a1a:	mov    al,0x1
10020a1c:	mov    BYTE PTR [ebp-0x8],al
10020a1f:	jne    0x10020a46
10020a21:	mov    ebx,DWORD PTR [ebp+0xc]
10020a24:	lea    eax,[esi+0xc]
10020a27:	mov    DWORD PTR [ebp-0x4],esi
10020a2a:	call   0x1001ee13
10020a2f:	test   al,al
10020a31:	mov    BYTE PTR [ebp-0x8],al
10020a34:	je     0x10020a3a
10020a36:	mov    esi,DWORD PTR [esi]
10020a38:	jmp    0x10020a3d
10020a3a:	mov    esi,DWORD PTR [esi+0x8]
10020a3d:	cmp    BYTE PTR [esi+0x2d],0x0
10020a41:	je     0x10020a21
10020a43:	mov    edx,DWORD PTR [ebp+0x8]
10020a46:	test   al,al
10020a48:	mov    ecx,DWORD PTR [ebp-0x4]
10020a4b:	mov    esi,ecx
10020a4d:	mov    DWORD PTR [ebp-0xc],esi
10020a50:	mov    DWORD PTR [ebp-0x10],edx
10020a53:	je     0x10020a87
10020a55:	mov    eax,DWORD PTR [edx+0x4]
10020a58:	cmp    ecx,DWORD PTR [eax]
10020a5a:	jne    0x10020a7c
10020a5c:	push   DWORD PTR [ebp+0xc]
10020a5f:	mov    esi,edx
10020a61:	push   0x1
10020a63:	lea    eax,[ebp-0x10]
10020a66:	push   eax
10020a67:	call   0x1002104a
10020a6c:	mov    ecx,DWORD PTR [eax]
10020a6e:	mov    eax,DWORD PTR [eax+0x4]
10020a71:	mov    DWORD PTR [edi],ecx
10020a73:	mov    DWORD PTR [edi+0x4],eax
10020a76:	mov    BYTE PTR [edi+0x8],0x1
10020a7a:	jmp    0x10020ab0
10020a7c:	lea    esi,[ebp-0x10]
10020a7f:	call   0x100214c7
10020a84:	mov    esi,DWORD PTR [ebp-0xc]
10020a87:	mov    eax,DWORD PTR [ebp+0xc]
10020a8a:	lea    ebx,[esi+0xc]
10020a8d:	call   0x1001ee13
10020a92:	test   al,al
10020a94:	je     0x10020aa4
10020a96:	push   DWORD PTR [ebp+0xc]
10020a99:	mov    ecx,DWORD PTR [ebp-0x4]
10020a9c:	push   DWORD PTR [ebp-0x8]
10020a9f:	mov    esi,DWORD PTR [ebp+0x8]
10020aa2:	jmp    0x10020a63
10020aa4:	mov    eax,DWORD PTR [ebp-0x10]
10020aa7:	mov    DWORD PTR [edi],eax
10020aa9:	mov    DWORD PTR [edi+0x4],esi
10020aac:	mov    BYTE PTR [edi+0x8],0x0
10020ab0:	pop    esi
10020ab1:	mov    eax,edi
10020ab3:	pop    ebx
10020ab4:	leave  
10020ab5:	ret    0x8
10020ab8:	push   ebp
10020ab9:	mov    ebp,esp
10020abb:	sub    esp,0x2c
10020abe:	push   ebx
10020abf:	push   esi
10020ac0:	push   edi
10020ac1:	mov    edi,ecx
10020ac3:	mov    ebx,eax
10020ac5:	mov    eax,DWORD PTR [edi+0x4]
10020ac8:	mov    esi,DWORD PTR [eax+0x4]
10020acb:	mov    DWORD PTR [ebp-0x8],eax
10020ace:	jmp    0x10020ae6
10020ad0:	lea    eax,[esi+0xc]
10020ad3:	call   0x1001ee13
10020ad8:	test   al,al
10020ada:	je     0x10020ae3
10020adc:	mov    DWORD PTR [ebp-0x8],esi
10020adf:	mov    esi,DWORD PTR [esi]
10020ae1:	jmp    0x10020ae6
10020ae3:	mov    esi,DWORD PTR [esi+0x8]
10020ae6:	cmp    BYTE PTR [esi+0x2d],0x0
10020aea:	je     0x10020ad0
10020aec:	push   ebx
10020aed:	lea    eax,[ebp-0x18]
10020af0:	push   eax
10020af1:	call   0x10021005
10020af6:	mov    ecx,DWORD PTR [eax+0x4]
10020af9:	mov    ebx,DWORD PTR [eax]
10020afb:	mov    eax,DWORD PTR [eax+0x4]
10020afe:	and    DWORD PTR [ebp-0x4],0x0
10020b02:	mov    DWORD PTR [ebp-0x24],ecx
10020b05:	mov    ecx,ebx
10020b07:	mov    DWORD PTR [ebp-0x10],ecx
10020b0a:	mov    DWORD PTR [ebp-0xc],eax
10020b0d:	cmp    DWORD PTR [ebp-0x10],0x0
10020b11:	je     0x10020b18
10020b13:	cmp    DWORD PTR [ebp-0x10],edi
10020b16:	je     0x10020b1d
10020b18:	call   0x100433b0
10020b1d:	mov    eax,DWORD PTR [ebp-0x8]
10020b20:	cmp    DWORD PTR [ebp-0xc],eax
10020b23:	je     0x10020b32
10020b25:	inc    DWORD PTR [ebp-0x4]
10020b28:	lea    esi,[ebp-0x10]
10020b2b:	call   0x100219a6
10020b30:	jmp    0x10020b0d
10020b32:	push   eax
10020b33:	push   edi
10020b34:	push   DWORD PTR [ebp-0x24]
10020b37:	push   ebx
10020b38:	lea    ebx,[ebp-0x18]
10020b3b:	call   0x10020f59
10020b40:	mov    eax,DWORD PTR [ebp-0x4]
10020b43:	pop    edi
10020b44:	pop    esi
10020b45:	pop    ebx
10020b46:	leave  
10020b47:	ret    
10020b48:	push   ebx
10020b49:	lea    ebx,[eax+0xc]
10020b4c:	cmp    DWORD PTR [ebx],0x0
10020b4f:	push   esi
10020b50:	push   edi
10020b51:	je     0x10020b62
10020b53:	lea    esi,[eax+0x8]
10020b56:	cmp    DWORD PTR [esi],0x0
10020b59:	je     0x10020b62
10020b5b:	xor    edi,edi
10020b5d:	call   0x1000763b
10020b62:	mov    eax,DWORD PTR [ebx]
10020b64:	test   eax,eax
10020b66:	je     0x10020b7c
10020b68:	mov    ecx,DWORD PTR [eax]
10020b6a:	push   eax
10020b6b:	call   DWORD PTR [ecx+0x1c]
10020b6e:	cmp    DWORD PTR [ebx],0x0
10020b71:	je     0x10020b7c
10020b73:	xor    edi,edi
10020b75:	mov    esi,ebx
10020b77:	call   0x1000763b
10020b7c:	pop    edi
10020b7d:	pop    esi
10020b7e:	pop    ebx
10020b7f:	ret    
10020b80:	push   ebp
10020b81:	mov    ebp,esp
10020b83:	sub    esp,0x18
10020b86:	push   ebx
10020b87:	mov    ebx,eax
10020b89:	xor    eax,eax
10020b8b:	cmp    DWORD PTR ds:0x10080f5c,eax
10020b91:	push   esi
10020b92:	push   edi
10020b93:	mov    DWORD PTR [ebp-0xc],eax
10020b96:	mov    DWORD PTR [ebp-0x8],eax
10020b99:	jne    0x10020bb1
10020b9b:	mov    ecx,DWORD PTR ds:0x10080f58
10020ba1:	push   ebx
10020ba2:	push   0x1
10020ba4:	push   DWORD PTR [ebp+0x8]
10020ba7:	call   0x1002130c
10020bac:	mov    eax,DWORD PTR [ebp+0x8]
10020baf:	jmp    0x10020bf3
10020bb1:	mov    eax,ds:0x10080f58
10020bb6:	mov    eax,DWORD PTR [eax]
10020bb8:	lea    edi,[ebp-0x14]
10020bbb:	lea    esi,[ebp+0xc]
10020bbe:	mov    DWORD PTR [ebp-0x10],eax
10020bc1:	mov    DWORD PTR [ebp-0x14],0x10080f54
10020bc8:	call   0x10004ada
10020bcd:	test   al,al
10020bcf:	je     0x10020bfa
10020bd1:	mov    eax,DWORD PTR [ebx]
10020bd3:	mov    ecx,DWORD PTR [ebp+0x10]
10020bd6:	cmp    eax,DWORD PTR [ecx+0xc]
10020bd9:	jb     0x10020ba1
10020bdb:	push   ebx
10020bdc:	lea    ebx,[ebp-0x18]
10020bdf:	call   0x10021195
10020be4:	mov    edx,DWORD PTR [eax]
10020be6:	mov    ecx,DWORD PTR [ebp+0x8]
10020be9:	mov    DWORD PTR [ecx],edx
10020beb:	mov    eax,DWORD PTR [eax+0x4]
10020bee:	mov    DWORD PTR [ecx+0x4],eax
10020bf1:	mov    eax,ecx
10020bf3:	pop    edi
10020bf4:	pop    esi
10020bf5:	pop    ebx
10020bf6:	leave  
10020bf7:	ret    0xc
10020bfa:	mov    eax,ds:0x10080f58
10020bff:	lea    edi,[ebp-0x14]
10020c02:	lea    esi,[ebp+0xc]
10020c05:	mov    DWORD PTR [ebp-0x10],eax
10020c08:	mov    DWORD PTR [ebp-0x14],0x10080f54
10020c0f:	call   0x10004ada
10020c14:	test   al,al
10020c16:	je     0x10020c2f
10020c18:	mov    eax,ds:0x10080f58
10020c1d:	mov    ecx,DWORD PTR [eax+0x8]
10020c20:	mov    eax,DWORD PTR [ecx+0xc]
10020c23:	cmp    eax,DWORD PTR [ebx]
10020c25:	jae    0x10020bdb
10020c27:	push   ebx
10020c28:	push   0x0
10020c2a:	jmp    0x10020ba4
10020c2f:	mov    ecx,DWORD PTR [ebx]
10020c31:	mov    edi,DWORD PTR [ebp+0x10]
10020c34:	cmp    DWORD PTR [edi+0xc],ecx
10020c37:	jbe    0x10020c6b
10020c39:	mov    eax,DWORD PTR [ebp+0xc]
10020c3c:	lea    esi,[ebp-0xc]
10020c3f:	mov    DWORD PTR [ebp-0xc],eax
10020c42:	mov    DWORD PTR [ebp-0x8],edi
10020c45:	call   0x10021466
10020c4a:	mov    ecx,DWORD PTR [ebx]
10020c4c:	mov    eax,DWORD PTR [eax+0x4]
10020c4f:	cmp    DWORD PTR [eax+0xc],ecx
10020c52:	jae    0x10020c68
10020c54:	mov    ecx,DWORD PTR [ebp-0x8]
10020c57:	mov    eax,DWORD PTR [ecx+0x8]
10020c5a:	cmp    BYTE PTR [eax+0x21],0x0
10020c5e:	push   ebx
10020c5f:	jne    0x10020c28
10020c61:	mov    ecx,edi
10020c63:	jmp    0x10020ba2
10020c68:	cmp    DWORD PTR [edi+0xc],ecx
10020c6b:	jae    0x10020bdb
10020c71:	mov    eax,DWORD PTR [ebp+0xc]
10020c74:	mov    DWORD PTR [ebp-0xc],eax
10020c77:	mov    eax,ds:0x10080f58
10020c7c:	lea    esi,[ebp-0xc]
10020c7f:	mov    DWORD PTR [ebp-0x8],edi
10020c82:	mov    DWORD PTR [ebp-0x10],eax
10020c85:	mov    DWORD PTR [ebp-0x14],0x10080f54
10020c8c:	call   0x10020d78
10020c91:	lea    edi,[ebp-0x14]
10020c94:	mov    esi,eax
10020c96:	call   0x10004ada
10020c9b:	test   al,al
10020c9d:	mov    eax,DWORD PTR [ebp-0x8]
10020ca0:	jne    0x10020cad
10020ca2:	mov    ecx,DWORD PTR [ebx]
10020ca4:	cmp    ecx,DWORD PTR [eax+0xc]
10020ca7:	jae    0x10020bdb
10020cad:	mov    ecx,DWORD PTR [ebp+0x10]
10020cb0:	mov    edx,DWORD PTR [ecx+0x8]
10020cb3:	cmp    BYTE PTR [edx+0x21],0x0
10020cb7:	push   ebx
10020cb8:	jne    0x10020c28
10020cbe:	mov    ecx,eax
10020cc0:	jmp    0x10020ba2
10020cc5:	mov    edx,DWORD PTR ds:0x10080f58
10020ccb:	mov    ecx,DWORD PTR [edx+0x4]
10020cce:	cmp    BYTE PTR [ecx+0x21],0x0
10020cd2:	jne    0x10020cf0
10020cd4:	push   esi
10020cd5:	mov    esi,DWORD PTR [esp+0x8]
10020cd9:	mov    esi,DWORD PTR [esi]
10020cdb:	cmp    DWORD PTR [ecx+0xc],esi
10020cde:	jae    0x10020ce5
10020ce0:	mov    ecx,DWORD PTR [ecx+0x8]
10020ce3:	jmp    0x10020ce9
10020ce5:	mov    edx,ecx
10020ce7:	mov    ecx,DWORD PTR [ecx]
10020ce9:	cmp    BYTE PTR [ecx+0x21],0x0
10020ced:	je     0x10020cdb
10020cef:	pop    esi
10020cf0:	mov    DWORD PTR [eax+0x4],edx
10020cf3:	mov    DWORD PTR [eax],0x10080f54
10020cf9:	ret    0x4
10020cfc:	mov    eax,DWORD PTR [ecx+0x8]
10020cff:	mov    edx,DWORD PTR [eax]
10020d01:	mov    DWORD PTR [ecx+0x8],edx
10020d04:	mov    edx,DWORD PTR [eax]
10020d06:	cmp    BYTE PTR [edx+0x21],0x0
10020d0a:	jne    0x10020d0f
10020d0c:	mov    DWORD PTR [edx+0x4],ecx
10020d0f:	mov    edx,DWORD PTR [ecx+0x4]
10020d12:	mov    DWORD PTR [eax+0x4],edx
10020d15:	mov    edx,DWORD PTR ds:0x10080f58
10020d1b:	cmp    ecx,DWORD PTR [edx+0x4]
10020d1e:	jne    0x10020d25
10020d20:	mov    DWORD PTR [edx+0x4],eax
10020d23:	jmp    0x10020d33
10020d25:	mov    edx,DWORD PTR [ecx+0x4]
10020d28:	cmp    ecx,DWORD PTR [edx]
10020d2a:	jne    0x10020d30
10020d2c:	mov    DWORD PTR [edx],eax
10020d2e:	jmp    0x10020d33
10020d30:	mov    DWORD PTR [edx+0x8],eax
10020d33:	mov    DWORD PTR [eax],ecx
10020d35:	mov    DWORD PTR [ecx+0x4],eax
10020d38:	ret    
10020d39:	mov    eax,DWORD PTR [ecx]
10020d3b:	mov    edx,DWORD PTR [eax+0x8]
10020d3e:	mov    DWORD PTR [ecx],edx
10020d40:	mov    edx,DWORD PTR [eax+0x8]
10020d43:	cmp    BYTE PTR [edx+0x21],0x0
10020d47:	jne    0x10020d4c
10020d49:	mov    DWORD PTR [edx+0x4],ecx
10020d4c:	mov    edx,DWORD PTR [ecx+0x4]
10020d4f:	mov    DWORD PTR [eax+0x4],edx
10020d52:	mov    edx,DWORD PTR ds:0x10080f58
10020d58:	cmp    ecx,DWORD PTR [edx+0x4]
10020d5b:	jne    0x10020d62
10020d5d:	mov    DWORD PTR [edx+0x4],eax
10020d60:	jmp    0x10020d71
10020d62:	mov    edx,DWORD PTR [ecx+0x4]
10020d65:	cmp    ecx,DWORD PTR [edx+0x8]
10020d68:	jne    0x10020d6f
10020d6a:	mov    DWORD PTR [edx+0x8],eax
10020d6d:	jmp    0x10020d71
10020d6f:	mov    DWORD PTR [edx],eax
10020d71:	mov    DWORD PTR [eax+0x8],ecx
10020d74:	mov    DWORD PTR [ecx+0x4],eax
10020d77:	ret    
10020d78:	push   ebx
10020d79:	xor    ebx,ebx
10020d7b:	cmp    DWORD PTR [esi],ebx
10020d7d:	jne    0x10020d84
10020d7f:	call   0x100433b0
10020d84:	mov    eax,DWORD PTR [esi+0x4]
10020d87:	cmp    BYTE PTR [eax+0x21],bl
10020d8a:	je     0x10020d93
10020d8c:	call   0x100433b0
10020d91:	jmp    0x10020dc1
10020d93:	mov    ecx,DWORD PTR [eax+0x8]
10020d96:	cmp    BYTE PTR [ecx+0x21],bl
10020d99:	jne    0x10020db6
10020d9b:	jmp    0x10020d9f
10020d9d:	mov    ecx,eax
10020d9f:	mov    eax,DWORD PTR [ecx]
10020da1:	cmp    BYTE PTR [eax+0x21],bl
10020da4:	je     0x10020d9d
10020da6:	mov    DWORD PTR [esi+0x4],ecx
10020da9:	jmp    0x10020dc1
10020dab:	mov    ecx,DWORD PTR [esi+0x4]
10020dae:	cmp    ecx,DWORD PTR [eax+0x8]
10020db1:	jne    0x10020dbe
10020db3:	mov    DWORD PTR [esi+0x4],eax
10020db6:	mov    eax,DWORD PTR [eax+0x4]
10020db9:	cmp    BYTE PTR [eax+0x21],bl
10020dbc:	je     0x10020dab
10020dbe:	mov    DWORD PTR [esi+0x4],eax
10020dc1:	mov    eax,esi
10020dc3:	pop    ebx
10020dc4:	ret    
10020dc5:	push   0x0
10020dc7:	mov    eax,0x10060141
10020dcc:	call   0x10059a35
10020dd1:	mov    edi,DWORD PTR [ebp+0x8]
10020dd4:	and    DWORD PTR [edi+0x4],0x0
10020dd8:	lea    esi,[edi+0x8]
10020ddb:	mov    DWORD PTR [edi],0x10070654
10020de1:	call   0x1001becd
10020de6:	mov    DWORD PTR [esi],0x10070724
10020dec:	mov    DWORD PTR [esi+0x24],0x10070738
10020df3:	mov    DWORD PTR [esi+0x28],0x10070764
10020dfa:	mov    DWORD PTR [esi+0x2c],0x10070788
10020e01:	mov    DWORD PTR [esi+0x30],0x10070800
10020e08:	mov    DWORD PTR [esi+0x34],0x10070828
10020e0f:	mov    DWORD PTR [esi+0x38],0x10070840
10020e16:	mov    DWORD PTR [esi+0x40],0x10070858
10020e1d:	mov    DWORD PTR [esi+0x44],0x10070868
10020e24:	mov    DWORD PTR [esi+0x48],0x10070888
10020e2b:	mov    DWORD PTR [esi+0x4c],0x100708d0
10020e32:	mov    DWORD PTR [esi+0x50],edi
10020e35:	and    DWORD PTR [ebp-0x4],0x0
10020e39:	mov    ecx,DWORD PTR ds:0x10080c04
10020e3f:	mov    eax,DWORD PTR [ecx]
10020e41:	call   DWORD PTR [eax+0x4]
10020e44:	mov    eax,edi
10020e46:	call   0x10059b0d
10020e4b:	ret    0x4
10020e4e:	push   0x4
10020e50:	mov    eax,0x1006011b
10020e55:	call   0x10059a35
10020e5a:	mov    DWORD PTR [ebp-0x10],ecx
10020e5d:	mov    DWORD PTR [ecx],0x10070654
10020e63:	and    DWORD PTR [ebp-0x4],0x0
10020e67:	lea    esi,[ecx+0x8]
10020e6a:	mov    DWORD PTR [ecx+0x4],0xc0000001
10020e71:	mov    ecx,esi
10020e73:	call   0x1001c502
10020e78:	mov    ecx,DWORD PTR ds:0x10080c04
10020e7e:	mov    eax,DWORD PTR [ecx]
10020e80:	call   DWORD PTR [eax+0x8]
10020e83:	or     DWORD PTR [ebp-0x4],0xffffffff
10020e87:	mov    eax,esi
10020e89:	call   0x1001bf92
10020e8e:	call   0x10059b0d
10020e93:	ret    
10020e94:	mov    ecx,DWORD PTR [esp+0x4]
10020e98:	dec    DWORD PTR [ecx+0x4]
10020e9b:	push   esi
10020e9c:	mov    esi,DWORD PTR [ecx+0x4]
10020e9f:	jne    0x10020eac
10020ea1:	test   ecx,ecx
10020ea3:	je     0x10020eac
10020ea5:	mov    eax,DWORD PTR [ecx]
10020ea7:	push   0x1
10020ea9:	call   DWORD PTR [eax+0xc]
10020eac:	mov    eax,esi
10020eae:	pop    esi
10020eaf:	ret    0x4
10020eb2:	push   ebp
10020eb3:	mov    ebp,esp
10020eb5:	push   ebx
10020eb6:	mov    ebx,DWORD PTR [ebp+0x10]
10020eb9:	push   esi
10020eba:	xor    esi,esi
10020ebc:	cmp    ebx,esi
10020ebe:	jne    0x10020ec7
10020ec0:	mov    eax,0x80004003
10020ec5:	jmp    0x10020ef7
10020ec7:	mov    eax,DWORD PTR [ebp+0xc]
10020eca:	mov    DWORD PTR [ebx],esi
10020ecc:	call   0x10010310
10020ed1:	test   eax,eax
10020ed3:	mov    eax,DWORD PTR [ebp+0x8]
10020ed6:	je     0x10020ee2
10020ed8:	mov    DWORD PTR [ebx],eax
10020eda:	mov    ecx,DWORD PTR [eax]
10020edc:	push   eax
10020edd:	call   DWORD PTR [ecx+0x4]
10020ee0:	jmp    0x10020ef5
10020ee2:	push   DWORD PTR [ebp+0xc]
10020ee5:	add    eax,0x8
10020ee8:	push   eax
10020ee9:	mov    eax,0x10070438
10020eee:	call   0x10010334
10020ef3:	mov    esi,eax
10020ef5:	mov    eax,esi
10020ef7:	pop    esi
10020ef8:	pop    ebx
10020ef9:	pop    ebp
10020efa:	ret    0xc
10020efd:	mov    eax,DWORD PTR [esp+0x4]
10020f01:	mov    eax,DWORD PTR [eax+0x2c]
10020f04:	mov    ecx,DWORD PTR [eax]
10020f06:	push   eax
10020f07:	call   DWORD PTR [ecx+0x4]
10020f0a:	ret    0x4
10020f0d:	mov    eax,DWORD PTR [esp+0x4]
10020f11:	mov    eax,DWORD PTR [eax+0x2c]
10020f14:	mov    ecx,DWORD PTR [eax]
10020f16:	push   eax
10020f17:	call   DWORD PTR [ecx+0x8]
10020f1a:	ret    0x4
10020f1d:	push   DWORD PTR [esp+0xc]
10020f21:	mov    eax,DWORD PTR [esp+0x8]
10020f25:	mov    eax,DWORD PTR [eax+0x2c]
10020f28:	push   DWORD PTR [esp+0xc]
10020f2c:	mov    ecx,DWORD PTR [eax]
10020f2e:	push   eax
10020f2f:	call   DWORD PTR [ecx]
10020f31:	ret    0xc
10020f34:	mov    eax,DWORD PTR [ecx+0x50]
10020f37:	ret    
10020f38:	push   esi
10020f39:	mov    esi,ecx
10020f3b:	call   0x10020e4e
10020f40:	test   BYTE PTR [esp+0x8],0x1
10020f45:	je     0x10020f4e
10020f47:	push   esi
10020f48:	call   0x10042e92
10020f4d:	pop    ecx
10020f4e:	mov    eax,esi
10020f50:	pop    esi
10020f51:	ret    0x4
10020f54:	jmp    0x1001bf92
10020f59:	push   ebp
10020f5a:	mov    ebp,esp
10020f5c:	mov    eax,DWORD PTR [edi+0x4]
10020f5f:	sub    esp,0x14
10020f62:	cmp    DWORD PTR [ebp+0x8],0x0
10020f66:	push   esi
10020f67:	mov    esi,DWORD PTR [eax]
10020f69:	je     0x10020f70
10020f6b:	cmp    DWORD PTR [ebp+0x8],edi
10020f6e:	je     0x10020f75
10020f70:	call   0x100433b0
10020f75:	cmp    DWORD PTR [ebp+0xc],esi
10020f78:	jne    0x10020fbd
10020f7a:	cmp    DWORD PTR [ebp+0x10],0x0
10020f7e:	mov    esi,DWORD PTR [edi+0x4]
10020f81:	je     0x10020f88
10020f83:	cmp    DWORD PTR [ebp+0x10],edi
10020f86:	je     0x10020f8d
10020f88:	call   0x100433b0
10020f8d:	cmp    DWORD PTR [ebp+0x14],esi
10020f90:	jne    0x10020fbd
10020f92:	mov    eax,DWORD PTR [edi+0x4]
10020f95:	push   DWORD PTR [eax+0x4]
10020f98:	mov    ecx,edi
10020f9a:	call   0x1002192f
10020f9f:	mov    eax,DWORD PTR [edi+0x4]
10020fa2:	mov    DWORD PTR [eax+0x4],eax
10020fa5:	mov    eax,DWORD PTR [edi+0x4]
10020fa8:	and    DWORD PTR [edi+0x8],0x0
10020fac:	mov    DWORD PTR [eax],eax
10020fae:	mov    eax,DWORD PTR [edi+0x4]
10020fb1:	mov    DWORD PTR [eax+0x8],eax
10020fb4:	mov    eax,DWORD PTR [edi+0x4]
10020fb7:	mov    eax,DWORD PTR [eax]
10020fb9:	mov    DWORD PTR [ebx],edi
10020fbb:	jmp    0x10020ffb
10020fbd:	mov    eax,DWORD PTR [ebp+0x8]
10020fc0:	test   eax,eax
10020fc2:	je     0x10020fc9
10020fc4:	cmp    eax,DWORD PTR [ebp+0x10]
10020fc7:	je     0x10020fce
10020fc9:	call   0x100433b0
10020fce:	mov    eax,DWORD PTR [ebp+0xc]
10020fd1:	cmp    eax,DWORD PTR [ebp+0x14]
10020fd4:	mov    ecx,DWORD PTR [ebp+0x8]
10020fd7:	je     0x10020ff9
10020fd9:	lea    esi,[ebp+0x8]
10020fdc:	mov    DWORD PTR [ebp-0x8],ecx
10020fdf:	mov    DWORD PTR [ebp-0x4],eax
10020fe2:	call   0x100219a6
10020fe7:	push   DWORD PTR [ebp-0x4]
10020fea:	lea    eax,[ebp-0x10]
10020fed:	push   DWORD PTR [ebp-0x8]
10020ff0:	push   eax
10020ff1:	push   edi
10020ff2:	call   0x10021546
10020ff7:	jmp    0x10020fbd
10020ff9:	mov    DWORD PTR [ebx],ecx
10020ffb:	mov    DWORD PTR [ebx+0x4],eax
10020ffe:	mov    eax,ebx
10021000:	pop    esi
10021001:	leave  
10021002:	ret    0x10
10021005:	push   ebp
10021006:	mov    ebp,esp
10021008:	push   ecx
10021009:	mov    eax,DWORD PTR [edi+0x4]
1002100c:	push   esi
1002100d:	mov    esi,DWORD PTR [eax+0x4]
10021010:	cmp    BYTE PTR [esi+0x2d],0x0
10021014:	mov    DWORD PTR [ebp-0x4],eax
10021017:	jne    0x1002103a
10021019:	push   ebx
1002101a:	mov    eax,DWORD PTR [ebp+0xc]
1002101d:	lea    ebx,[esi+0xc]
10021020:	call   0x1001ee13
10021025:	test   al,al
10021027:	je     0x1002102e
10021029:	mov    esi,DWORD PTR [esi+0x8]
1002102c:	jmp    0x10021033
1002102e:	mov    DWORD PTR [ebp-0x4],esi
10021031:	mov    esi,DWORD PTR [esi]
10021033:	cmp    BYTE PTR [esi+0x2d],0x0
10021037:	je     0x1002101a
10021039:	pop    ebx
1002103a:	mov    eax,DWORD PTR [ebp+0x8]
1002103d:	mov    ecx,DWORD PTR [ebp-0x4]
10021040:	mov    DWORD PTR [eax+0x4],ecx
10021043:	mov    DWORD PTR [eax],edi
10021045:	pop    esi
10021046:	leave  
10021047:	ret    0x8
1002104a:	push   0x48
1002104c:	mov    eax,0x100605b3
10021051:	call   0x10059a35
10021056:	mov    edi,ecx
10021058:	cmp    DWORD PTR [esi+0x8],0x7fffffe
1002105f:	jb     0x10021093
10021061:	push   0x1006d030
10021066:	lea    ecx,[ebp-0x2c]
10021069:	call   0x100011cd
1002106e:	and    DWORD PTR [ebp-0x4],0x0
10021072:	lea    eax,[ebp-0x2c]
10021075:	push   eax
10021076:	lea    ecx,[ebp-0x54]
10021079:	call   0x10001077
1002107e:	push   0x10074da0
10021083:	lea    eax,[ebp-0x54]
10021086:	push   eax
10021087:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1002108e:	call   0x100479b4
10021093:	mov    eax,DWORD PTR [esi+0x4]
10021096:	mov    ecx,DWORD PTR [ebp+0x10]
10021099:	push   eax
1002109a:	push   edi
1002109b:	push   eax
1002109c:	call   0x1002185e
100210a1:	inc    DWORD PTR [esi+0x8]
100210a4:	mov    ebx,eax
100210a6:	mov    eax,DWORD PTR [esi+0x4]
100210a9:	cmp    edi,eax
100210ab:	jne    0x100210ba
100210ad:	mov    DWORD PTR [eax+0x4],ebx
100210b0:	mov    eax,DWORD PTR [esi+0x4]
100210b3:	mov    DWORD PTR [eax],ebx
100210b5:	mov    eax,DWORD PTR [esi+0x4]
100210b8:	jmp    0x100210d8
100210ba:	cmp    BYTE PTR [ebp+0xc],0x0
100210be:	je     0x100210cd
100210c0:	mov    DWORD PTR [edi],ebx
100210c2:	mov    eax,DWORD PTR [esi+0x4]
100210c5:	cmp    edi,DWORD PTR [eax]
100210c7:	jne    0x100210db
100210c9:	mov    DWORD PTR [eax],ebx
100210cb:	jmp    0x100210db
100210cd:	mov    DWORD PTR [edi+0x8],ebx
100210d0:	mov    eax,DWORD PTR [esi+0x4]
100210d3:	cmp    edi,DWORD PTR [eax+0x8]
100210d6:	jne    0x100210db
100210d8:	mov    DWORD PTR [eax+0x8],ebx
100210db:	mov    edi,ebx
100210dd:	lea    eax,[ebx+0x4]
100210e0:	jmp    0x1002116f
100210e5:	mov    ecx,DWORD PTR [eax]
100210e7:	mov    edx,DWORD PTR [ecx+0x4]
100210ea:	cmp    ecx,DWORD PTR [edx]
100210ec:	jne    0x10021123
100210ee:	mov    edx,DWORD PTR [edx+0x8]
100210f1:	cmp    BYTE PTR [edx+0x2c],0x0
100210f5:	je     0x1002112b
100210f7:	cmp    edi,DWORD PTR [ecx+0x8]
100210fa:	jne    0x10021104
100210fc:	push   esi
100210fd:	mov    edi,ecx
100210ff:	call   0x100217dc
10021104:	mov    eax,DWORD PTR [edi+0x4]
10021107:	mov    BYTE PTR [eax+0x2c],0x1
1002110b:	mov    eax,DWORD PTR [edi+0x4]
1002110e:	mov    eax,DWORD PTR [eax+0x4]
10021111:	mov    BYTE PTR [eax+0x2c],0x0
10021115:	mov    eax,DWORD PTR [edi+0x4]
10021118:	mov    ecx,DWORD PTR [eax+0x4]
1002111b:	push   esi
1002111c:	call   0x1002181c
10021121:	jmp    0x1002116c
10021123:	mov    edx,DWORD PTR [edx]
10021125:	cmp    BYTE PTR [edx+0x2c],0x0
10021129:	jne    0x10021143
1002112b:	mov    BYTE PTR [ecx+0x2c],0x1
1002112f:	mov    BYTE PTR [edx+0x2c],0x1
10021133:	mov    ecx,DWORD PTR [eax]
10021135:	mov    ecx,DWORD PTR [ecx+0x4]
10021138:	mov    BYTE PTR [ecx+0x2c],0x0
1002113c:	mov    eax,DWORD PTR [eax]
1002113e:	mov    edi,DWORD PTR [eax+0x4]
10021141:	jmp    0x1002116c
10021143:	cmp    edi,DWORD PTR [ecx]
10021145:	jne    0x1002114f
10021147:	push   esi
10021148:	mov    edi,ecx
1002114a:	call   0x1002181c
1002114f:	mov    eax,DWORD PTR [edi+0x4]
10021152:	mov    BYTE PTR [eax+0x2c],0x1
10021156:	mov    eax,DWORD PTR [edi+0x4]
10021159:	mov    eax,DWORD PTR [eax+0x4]
1002115c:	mov    BYTE PTR [eax+0x2c],0x0
10021160:	mov    eax,DWORD PTR [edi+0x4]
10021163:	mov    ecx,DWORD PTR [eax+0x4]
10021166:	push   esi
10021167:	call   0x100217dc
1002116c:	lea    eax,[edi+0x4]
1002116f:	mov    ecx,DWORD PTR [eax]
10021171:	cmp    BYTE PTR [ecx+0x2c],0x0
10021175:	je     0x100210e5
1002117b:	mov    eax,DWORD PTR [esi+0x4]
1002117e:	mov    eax,DWORD PTR [eax+0x4]
10021181:	mov    BYTE PTR [eax+0x2c],0x1
10021185:	mov    eax,DWORD PTR [ebp+0x8]
10021188:	mov    DWORD PTR [eax+0x4],ebx
1002118b:	mov    DWORD PTR [eax],esi
1002118d:	call   0x10059b0d
10021192:	ret    0xc
10021195:	push   ebp
10021196:	mov    ebp,esp
10021198:	sub    esp,0x1c
1002119b:	push   esi
1002119c:	mov    esi,DWORD PTR ds:0x10080f58
100211a2:	mov    eax,DWORD PTR [esi+0x4]
100211a5:	cmp    BYTE PTR [eax+0x21],0x0
100211a9:	push   edi
100211aa:	mov    DWORD PTR [ebp-0xc],esi
100211ad:	mov    BYTE PTR [ebp-0x8],0x1
100211b1:	jne    0x100211d5
100211b3:	mov    ecx,DWORD PTR [ebp+0x8]
100211b6:	mov    edi,DWORD PTR [ecx]
100211b8:	cmp    edi,DWORD PTR [eax+0xc]
100211bb:	mov    DWORD PTR [ebp-0xc],eax
100211be:	setb   BYTE PTR [ebp-0x8]
100211c2:	cmp    BYTE PTR [ebp-0x8],0x0
100211c6:	je     0x100211cc
100211c8:	mov    eax,DWORD PTR [eax]
100211ca:	jmp    0x100211cf
100211cc:	mov    eax,DWORD PTR [eax+0x8]
100211cf:	cmp    BYTE PTR [eax+0x21],0x0
100211d3:	je     0x100211b8
100211d5:	cmp    BYTE PTR [ebp-0x8],0x0
100211d9:	mov    edi,DWORD PTR [ebp-0xc]
100211dc:	mov    eax,0x10080f54
100211e1:	mov    DWORD PTR [ebp-0x10],edi
100211e4:	mov    DWORD PTR [ebp-0x14],eax
100211e7:	je     0x1002122c
100211e9:	mov    ecx,DWORD PTR [esi]
100211eb:	lea    edi,[ebp-0x1c]
100211ee:	lea    esi,[ebp-0x14]
100211f1:	mov    DWORD PTR [ebp-0x18],ecx
100211f4:	mov    DWORD PTR [ebp-0x1c],eax
100211f7:	call   0x10004ada
100211fc:	test   al,al
100211fe:	je     0x10021221
10021200:	push   DWORD PTR [ebp+0x8]
10021203:	push   0x1
10021205:	mov    ecx,DWORD PTR [ebp-0xc]
10021208:	lea    eax,[ebp-0x1c]
1002120b:	push   eax
1002120c:	call   0x1002130c
10021211:	mov    ecx,DWORD PTR [eax]
10021213:	mov    eax,DWORD PTR [eax+0x4]
10021216:	mov    DWORD PTR [ebx],ecx
10021218:	mov    DWORD PTR [ebx+0x4],eax
1002121b:	mov    BYTE PTR [ebx+0x8],0x1
1002121f:	jmp    0x10021248
10021221:	lea    esi,[ebp-0x14]
10021224:	call   0x10021466
10021229:	mov    edi,DWORD PTR [ebp-0x10]
1002122c:	mov    ecx,DWORD PTR [edi+0xc]
1002122f:	mov    eax,DWORD PTR [ebp+0x8]
10021232:	cmp    ecx,DWORD PTR [eax]
10021234:	jae    0x1002123c
10021236:	push   eax
10021237:	push   DWORD PTR [ebp-0x8]
1002123a:	jmp    0x10021205
1002123c:	mov    eax,DWORD PTR [ebp-0x14]
1002123f:	mov    DWORD PTR [ebx],eax
10021241:	mov    DWORD PTR [ebx+0x4],edi
10021244:	mov    BYTE PTR [ebx+0x8],0x0
10021248:	pop    edi
10021249:	mov    eax,ebx
1002124b:	pop    esi
1002124c:	leave  
1002124d:	ret    0x4
10021250:	push   ebp
10021251:	mov    ebp,esp
10021253:	sub    esp,0x10
10021256:	mov    eax,ds:0x10080f58
1002125b:	mov    eax,DWORD PTR [eax]
1002125d:	push   ebx
1002125e:	push   esi
1002125f:	push   edi
10021260:	mov    ebx,0x10080f54
10021265:	lea    edi,[ebp-0xc]
10021268:	lea    esi,[ebp+0xc]
1002126b:	mov    DWORD PTR [ebp-0x8],eax
1002126e:	mov    DWORD PTR [ebp-0xc],ebx
10021271:	call   0x10004ada
10021276:	test   al,al
10021278:	je     0x100212e8
1002127a:	mov    eax,ds:0x10080f58
1002127f:	lea    edi,[ebp-0xc]
10021282:	lea    esi,[ebp+0x14]
10021285:	mov    DWORD PTR [ebp-0x8],eax
10021288:	mov    DWORD PTR [ebp-0xc],ebx
1002128b:	call   0x10004ada
10021290:	test   al,al
10021292:	je     0x100212e8
10021294:	mov    eax,ds:0x10080f58
10021299:	push   DWORD PTR [eax+0x4]
1002129c:	mov    ecx,ebx
1002129e:	call   0x10021974
100212a3:	mov    eax,ds:0x10080f58
100212a8:	mov    DWORD PTR [eax+0x4],eax
100212ab:	mov    eax,ds:0x10080f58
100212b0:	and    DWORD PTR ds:0x10080f5c,0x0
100212b7:	mov    DWORD PTR [eax],eax
100212b9:	mov    eax,ds:0x10080f58
100212be:	mov    DWORD PTR [eax+0x8],eax
100212c1:	mov    eax,ds:0x10080f58
100212c6:	mov    ecx,DWORD PTR [eax]
100212c8:	mov    eax,DWORD PTR [ebp+0x8]
100212cb:	mov    DWORD PTR [eax],ebx
100212cd:	jmp    0x10021302
100212cf:	mov    edi,DWORD PTR [ebp+0xc]
100212d2:	mov    ebx,DWORD PTR [ebp+0x10]
100212d5:	lea    esi,[ebp+0xc]
100212d8:	call   0x10020d78
100212dd:	push   ebx
100212de:	push   edi
100212df:	lea    eax,[ebp-0xc]
100212e2:	push   eax
100212e3:	call   0x100205b3
100212e8:	lea    edi,[ebp+0x14]
100212eb:	lea    esi,[ebp+0xc]
100212ee:	call   0x10004ada
100212f3:	test   al,al
100212f5:	je     0x100212cf
100212f7:	mov    ecx,DWORD PTR [ebp+0xc]
100212fa:	mov    eax,DWORD PTR [ebp+0x8]
100212fd:	mov    DWORD PTR [eax],ecx
100212ff:	mov    ecx,DWORD PTR [ebp+0x10]
10021302:	pop    edi
10021303:	pop    esi
10021304:	mov    DWORD PTR [eax+0x4],ecx
10021307:	pop    ebx
10021308:	leave  
10021309:	ret    0x14
1002130c:	push   0x48
1002130e:	mov    eax,0x100605b3
10021313:	call   0x10059a35
10021318:	mov    esi,ecx
1002131a:	cmp    DWORD PTR ds:0x10080f5c,0xccccccb
10021324:	jb     0x10021358
10021326:	push   0x1006d030
1002132b:	lea    ecx,[ebp-0x2c]
1002132e:	call   0x100011cd
10021333:	and    DWORD PTR [ebp-0x4],0x0
10021337:	lea    eax,[ebp-0x2c]
1002133a:	push   eax
1002133b:	lea    ecx,[ebp-0x54]
1002133e:	call   0x10001077
10021343:	push   0x10074da0
10021348:	lea    eax,[ebp-0x54]
1002134b:	push   eax
1002134c:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10021353:	call   0x100479b4
10021358:	push   DWORD PTR [ebp+0x10]
1002135b:	mov    eax,ds:0x10080f58
10021360:	push   eax
10021361:	push   esi
10021362:	push   eax
10021363:	call   0x100218f4
10021368:	inc    DWORD PTR ds:0x10080f5c
1002136e:	mov    edi,eax
10021370:	mov    eax,ds:0x10080f58
10021375:	xor    bl,bl
10021377:	cmp    esi,eax
10021379:	jne    0x1002138c
1002137b:	mov    DWORD PTR [eax+0x4],edi
1002137e:	mov    eax,ds:0x10080f58
10021383:	mov    DWORD PTR [eax],edi
10021385:	mov    eax,ds:0x10080f58
1002138a:	jmp    0x100213ad
1002138c:	cmp    BYTE PTR [ebp+0xc],bl
1002138f:	je     0x100213a0
10021391:	mov    DWORD PTR [esi],edi
10021393:	mov    eax,ds:0x10080f58
10021398:	cmp    esi,DWORD PTR [eax]
1002139a:	jne    0x100213b0
1002139c:	mov    DWORD PTR [eax],edi
1002139e:	jmp    0x100213b0
100213a0:	mov    DWORD PTR [esi+0x8],edi
100213a3:	mov    eax,ds:0x10080f58
100213a8:	cmp    esi,DWORD PTR [eax+0x8]
100213ab:	jne    0x100213b0
100213ad:	mov    DWORD PTR [eax+0x8],edi
100213b0:	mov    esi,edi
100213b2:	lea    eax,[edi+0x4]
100213b5:	jmp    0x1002143b
100213ba:	mov    ecx,DWORD PTR [eax]
100213bc:	mov    edx,DWORD PTR [ecx+0x4]
100213bf:	cmp    ecx,DWORD PTR [edx]
100213c1:	jne    0x100213f4
100213c3:	mov    edx,DWORD PTR [edx+0x8]
100213c6:	cmp    BYTE PTR [edx+0x20],bl
100213c9:	je     0x100213fb
100213cb:	cmp    esi,DWORD PTR [ecx+0x8]
100213ce:	jne    0x100213d7
100213d0:	mov    esi,ecx
100213d2:	call   0x10020cfc
100213d7:	mov    eax,DWORD PTR [esi+0x4]
100213da:	mov    BYTE PTR [eax+0x20],0x1
100213de:	mov    eax,DWORD PTR [esi+0x4]
100213e1:	mov    eax,DWORD PTR [eax+0x4]
100213e4:	mov    BYTE PTR [eax+0x20],bl
100213e7:	mov    eax,DWORD PTR [esi+0x4]
100213ea:	mov    ecx,DWORD PTR [eax+0x4]
100213ed:	call   0x10020d39
100213f2:	jmp    0x10021438
100213f4:	mov    edx,DWORD PTR [edx]
100213f6:	cmp    BYTE PTR [edx+0x20],bl
100213f9:	jne    0x10021412
100213fb:	mov    BYTE PTR [ecx+0x20],0x1
100213ff:	mov    BYTE PTR [edx+0x20],0x1
10021403:	mov    ecx,DWORD PTR [eax]
10021405:	mov    ecx,DWORD PTR [ecx+0x4]
10021408:	mov    BYTE PTR [ecx+0x20],bl
1002140b:	mov    eax,DWORD PTR [eax]
1002140d:	mov    esi,DWORD PTR [eax+0x4]
10021410:	jmp    0x10021438
10021412:	cmp    esi,DWORD PTR [ecx]
10021414:	jne    0x1002141d
10021416:	mov    esi,ecx
10021418:	call   0x10020d39
1002141d:	mov    eax,DWORD PTR [esi+0x4]
10021420:	mov    BYTE PTR [eax+0x20],0x1
10021424:	mov    eax,DWORD PTR [esi+0x4]
10021427:	mov    eax,DWORD PTR [eax+0x4]
1002142a:	mov    BYTE PTR [eax+0x20],bl
1002142d:	mov    eax,DWORD PTR [esi+0x4]
10021430:	mov    ecx,DWORD PTR [eax+0x4]
10021433:	call   0x10020cfc
10021438:	lea    eax,[esi+0x4]
1002143b:	mov    ecx,DWORD PTR [eax]
1002143d:	cmp    BYTE PTR [ecx+0x20],bl
10021440:	je     0x100213ba
10021446:	mov    eax,ds:0x10080f58
1002144b:	mov    eax,DWORD PTR [eax+0x4]
1002144e:	mov    BYTE PTR [eax+0x20],0x1
10021452:	mov    eax,DWORD PTR [ebp+0x8]
10021455:	mov    DWORD PTR [eax+0x4],edi
10021458:	mov    DWORD PTR [eax],0x10080f54
1002145e:	call   0x10059b0d
10021463:	ret    0xc
10021466:	push   ebx
10021467:	xor    ebx,ebx
10021469:	cmp    DWORD PTR [esi],ebx
1002146b:	jne    0x10021472
1002146d:	call   0x100433b0
10021472:	mov    eax,DWORD PTR [esi+0x4]
10021475:	cmp    BYTE PTR [eax+0x21],bl
10021478:	je     0x10021487
1002147a:	mov    eax,DWORD PTR [eax+0x8]
1002147d:	mov    DWORD PTR [esi+0x4],eax
10021480:	cmp    BYTE PTR [eax+0x21],bl
10021483:	je     0x100214c3
10021485:	jmp    0x100214b9
10021487:	mov    ecx,DWORD PTR [eax]
10021489:	cmp    BYTE PTR [ecx+0x21],bl
1002148c:	jne    0x100214a9
1002148e:	jmp    0x10021492
10021490:	mov    ecx,eax
10021492:	mov    eax,DWORD PTR [ecx+0x8]
10021495:	cmp    BYTE PTR [eax+0x21],bl
10021498:	je     0x10021490
1002149a:	mov    DWORD PTR [esi+0x4],ecx
1002149d:	jmp    0x100214c3
1002149f:	mov    ecx,DWORD PTR [esi+0x4]
100214a2:	cmp    ecx,DWORD PTR [eax]
100214a4:	jne    0x100214b1
100214a6:	mov    DWORD PTR [esi+0x4],eax
100214a9:	mov    eax,DWORD PTR [eax+0x4]
100214ac:	cmp    BYTE PTR [eax+0x21],bl
100214af:	je     0x1002149f
100214b1:	mov    ecx,DWORD PTR [esi+0x4]
100214b4:	cmp    BYTE PTR [ecx+0x21],bl
100214b7:	je     0x100214c0
100214b9:	call   0x100433b0
100214be:	jmp    0x100214c3
100214c0:	mov    DWORD PTR [esi+0x4],eax
100214c3:	mov    eax,esi
100214c5:	pop    ebx
100214c6:	ret    
100214c7:	push   ebx
100214c8:	xor    ebx,ebx
100214ca:	cmp    DWORD PTR [esi],ebx
100214cc:	jne    0x100214d3
100214ce:	call   0x100433b0
100214d3:	mov    eax,DWORD PTR [esi+0x4]
100214d6:	cmp    BYTE PTR [eax+0x2d],bl
100214d9:	je     0x100214e8
100214db:	mov    eax,DWORD PTR [eax+0x8]
100214de:	mov    DWORD PTR [esi+0x4],eax
100214e1:	cmp    BYTE PTR [eax+0x2d],bl
100214e4:	je     0x10021524
100214e6:	jmp    0x1002151a
100214e8:	mov    ecx,DWORD PTR [eax]
100214ea:	cmp    BYTE PTR [ecx+0x2d],bl
100214ed:	jne    0x1002150a
100214ef:	jmp    0x100214f3
100214f1:	mov    ecx,eax
100214f3:	mov    eax,DWORD PTR [ecx+0x8]
100214f6:	cmp    BYTE PTR [eax+0x2d],bl
100214f9:	je     0x100214f1
100214fb:	mov    DWORD PTR [esi+0x4],ecx
100214fe:	jmp    0x10021524
10021500:	mov    ecx,DWORD PTR [esi+0x4]
10021503:	cmp    ecx,DWORD PTR [eax]
10021505:	jne    0x10021512
10021507:	mov    DWORD PTR [esi+0x4],eax
1002150a:	mov    eax,DWORD PTR [eax+0x4]
1002150d:	cmp    BYTE PTR [eax+0x2d],bl
10021510:	je     0x10021500
10021512:	mov    ecx,DWORD PTR [esi+0x4]
10021515:	cmp    BYTE PTR [ecx+0x2d],bl
10021518:	je     0x10021521
1002151a:	call   0x100433b0
1002151f:	jmp    0x10021524
10021521:	mov    DWORD PTR [esi+0x4],eax
10021524:	mov    eax,esi
10021526:	pop    ebx
10021527:	ret    
10021528:	push   esi
10021529:	mov    esi,ecx
1002152b:	mov    eax,esi
1002152d:	call   0x1001bf92
10021532:	test   BYTE PTR [esp+0x8],0x1
10021537:	je     0x10021540
10021539:	push   esi
1002153a:	call   0x10042e92
1002153f:	pop    ecx
10021540:	mov    eax,esi
10021542:	pop    esi
10021543:	ret    0x4
10021546:	push   0x44
10021548:	mov    eax,0x1006071f
1002154d:	call   0x10059a35
10021552:	mov    edi,DWORD PTR [ebp+0x14]
10021555:	cmp    BYTE PTR [edi+0x2d],0x0
10021559:	je     0x1002158d
1002155b:	push   0x1006ccec
10021560:	lea    ecx,[ebp-0x28]
10021563:	call   0x100011cd
10021568:	and    DWORD PTR [ebp-0x4],0x0
1002156c:	lea    eax,[ebp-0x28]
1002156f:	push   eax
10021570:	lea    ecx,[ebp-0x50]
10021573:	call   0x10001077
10021578:	push   0x10074cc0
1002157d:	lea    eax,[ebp-0x50]
10021580:	push   eax
10021581:	mov    DWORD PTR [ebp-0x50],0x1006b978
10021588:	call   0x100479b4
1002158d:	lea    esi,[ebp+0x10]
10021590:	call   0x100219a6
10021595:	mov    ecx,DWORD PTR [edi]
10021597:	cmp    BYTE PTR [ecx+0x2d],0x0
1002159b:	je     0x100215a2
1002159d:	mov    ebx,DWORD PTR [edi+0x8]
100215a0:	jmp    0x100215b9
100215a2:	mov    eax,DWORD PTR [edi+0x8]
100215a5:	cmp    BYTE PTR [eax+0x2d],0x0
100215a9:	je     0x100215af
100215ab:	mov    ebx,ecx
100215ad:	jmp    0x100215b9
100215af:	mov    eax,DWORD PTR [ebp+0x14]
100215b2:	cmp    eax,edi
100215b4:	mov    ebx,DWORD PTR [eax+0x8]
100215b7:	jne    0x1002162f
100215b9:	cmp    BYTE PTR [ebx+0x2d],0x0
100215bd:	mov    esi,DWORD PTR [edi+0x4]
100215c0:	jne    0x100215c5
100215c2:	mov    DWORD PTR [ebx+0x4],esi
100215c5:	mov    ecx,DWORD PTR [ebp+0x8]
100215c8:	mov    eax,DWORD PTR [ecx+0x4]
100215cb:	cmp    DWORD PTR [eax+0x4],edi
100215ce:	jne    0x100215d5
100215d0:	mov    DWORD PTR [eax+0x4],ebx
100215d3:	jmp    0x100215e0
100215d5:	cmp    DWORD PTR [esi],edi
100215d7:	jne    0x100215dd
100215d9:	mov    DWORD PTR [esi],ebx
100215db:	jmp    0x100215e0
100215dd:	mov    DWORD PTR [esi+0x8],ebx
100215e0:	mov    edx,DWORD PTR [ecx+0x4]
100215e3:	cmp    DWORD PTR [edx],edi
100215e5:	jne    0x10021603
100215e7:	cmp    BYTE PTR [ebx+0x2d],0x0
100215eb:	je     0x100215f1
100215ed:	mov    ecx,esi
100215ef:	jmp    0x10021601
100215f1:	mov    eax,DWORD PTR [ebx]
100215f3:	mov    ecx,ebx
100215f5:	jmp    0x100215fb
100215f7:	mov    ecx,eax
100215f9:	mov    eax,DWORD PTR [ecx]
100215fb:	cmp    BYTE PTR [eax+0x2d],0x0
100215ff:	je     0x100215f7
10021601:	mov    DWORD PTR [edx],ecx
10021603:	mov    eax,DWORD PTR [ebp+0x8]
10021606:	mov    edx,DWORD PTR [eax+0x4]
10021609:	cmp    DWORD PTR [edx+0x8],edi
1002160c:	jne    0x10021689
1002160e:	cmp    BYTE PTR [ebx+0x2d],0x0
10021612:	je     0x10021618
10021614:	mov    ecx,esi
10021616:	jmp    0x1002162a
10021618:	mov    eax,DWORD PTR [ebx+0x8]
1002161b:	mov    ecx,ebx
1002161d:	jmp    0x10021624
1002161f:	mov    ecx,eax
10021621:	mov    eax,DWORD PTR [ecx+0x8]
10021624:	cmp    BYTE PTR [eax+0x2d],0x0
10021628:	je     0x1002161f
1002162a:	mov    DWORD PTR [edx+0x8],ecx
1002162d:	jmp    0x10021689
1002162f:	mov    DWORD PTR [ecx+0x4],eax
10021632:	mov    ecx,DWORD PTR [edi]
10021634:	mov    DWORD PTR [eax],ecx
10021636:	cmp    eax,DWORD PTR [edi+0x8]
10021639:	jne    0x1002163f
1002163b:	mov    esi,eax
1002163d:	jmp    0x10021659
1002163f:	cmp    BYTE PTR [ebx+0x2d],0x0
10021643:	mov    esi,DWORD PTR [eax+0x4]
10021646:	jne    0x1002164b
10021648:	mov    DWORD PTR [ebx+0x4],esi
1002164b:	mov    DWORD PTR [esi],ebx
1002164d:	mov    ecx,DWORD PTR [edi+0x8]
10021650:	mov    DWORD PTR [eax+0x8],ecx
10021653:	mov    ecx,DWORD PTR [edi+0x8]
10021656:	mov    DWORD PTR [ecx+0x4],eax
10021659:	mov    ecx,DWORD PTR [ebp+0x8]
1002165c:	mov    ecx,DWORD PTR [ecx+0x4]
1002165f:	cmp    DWORD PTR [ecx+0x4],edi
10021662:	jne    0x10021669
10021664:	mov    DWORD PTR [ecx+0x4],eax
10021667:	jmp    0x10021677
10021669:	mov    ecx,DWORD PTR [edi+0x4]
1002166c:	cmp    DWORD PTR [ecx],edi
1002166e:	jne    0x10021674
10021670:	mov    DWORD PTR [ecx],eax
10021672:	jmp    0x10021677
10021674:	mov    DWORD PTR [ecx+0x8],eax
10021677:	mov    ecx,DWORD PTR [edi+0x4]
1002167a:	mov    DWORD PTR [eax+0x4],ecx
1002167d:	mov    dl,BYTE PTR [edi+0x2c]
10021680:	mov    cl,BYTE PTR [eax+0x2c]
10021683:	mov    BYTE PTR [eax+0x2c],dl
10021686:	mov    BYTE PTR [edi+0x2c],cl
10021689:	cmp    BYTE PTR [edi+0x2c],0x1
1002168d:	jne    0x100217a5
10021693:	jmp    0x10021759
10021698:	cmp    BYTE PTR [ebx+0x2c],0x1
1002169c:	jne    0x100217a1
100216a2:	mov    ecx,DWORD PTR [esi]
100216a4:	cmp    ebx,ecx
100216a6:	jne    0x1002171f
100216a8:	mov    ecx,DWORD PTR [esi+0x8]
100216ab:	cmp    BYTE PTR [ecx+0x2c],0x0
100216af:	jne    0x100216c6
100216b1:	push   DWORD PTR [ebp+0x8]
100216b4:	mov    BYTE PTR [ecx+0x2c],0x1
100216b8:	mov    ecx,esi
100216ba:	mov    BYTE PTR [esi+0x2c],0x0
100216be:	call   0x100217dc
100216c3:	mov    ecx,DWORD PTR [esi+0x8]
100216c6:	cmp    BYTE PTR [ecx+0x2d],0x0
100216ca:	jne    0x10021754
100216d0:	mov    eax,DWORD PTR [ecx]
100216d2:	cmp    BYTE PTR [eax+0x2c],0x1
100216d6:	jne    0x100216e1
100216d8:	mov    eax,DWORD PTR [ecx+0x8]
100216db:	cmp    BYTE PTR [eax+0x2c],0x1
100216df:	je     0x10021750
100216e1:	mov    eax,DWORD PTR [ecx+0x8]
100216e4:	cmp    BYTE PTR [eax+0x2c],0x1
100216e8:	jne    0x100216ff
100216ea:	mov    eax,DWORD PTR [ecx]
100216ec:	push   DWORD PTR [ebp+0x8]
100216ef:	mov    BYTE PTR [eax+0x2c],0x1
100216f3:	mov    BYTE PTR [ecx+0x2c],0x0
100216f7:	call   0x1002181c
100216fc:	mov    ecx,DWORD PTR [esi+0x8]
100216ff:	mov    al,BYTE PTR [esi+0x2c]
10021702:	push   DWORD PTR [ebp+0x8]
10021705:	mov    BYTE PTR [ecx+0x2c],al
10021708:	mov    BYTE PTR [esi+0x2c],0x1
1002170c:	mov    eax,DWORD PTR [ecx+0x8]
1002170f:	mov    ecx,esi
10021711:	mov    BYTE PTR [eax+0x2c],0x1
10021715:	call   0x100217dc
1002171a:	jmp    0x100217a1
1002171f:	cmp    BYTE PTR [ecx+0x2c],0x0
10021723:	jne    0x10021739
10021725:	push   DWORD PTR [ebp+0x8]
10021728:	mov    BYTE PTR [ecx+0x2c],0x1
1002172c:	mov    ecx,esi
1002172e:	mov    BYTE PTR [esi+0x2c],0x0
10021732:	call   0x1002181c
10021737:	mov    ecx,DWORD PTR [esi]
10021739:	cmp    BYTE PTR [ecx+0x2d],0x0
1002173d:	jne    0x10021754
1002173f:	mov    eax,DWORD PTR [ecx+0x8]
10021742:	cmp    BYTE PTR [eax+0x2c],0x1
10021746:	jne    0x1002176a
10021748:	mov    eax,DWORD PTR [ecx]
1002174a:	cmp    BYTE PTR [eax+0x2c],0x1
1002174e:	jne    0x1002176a
10021750:	mov    BYTE PTR [ecx+0x2c],0x0
10021754:	mov    ebx,esi
10021756:	mov    esi,DWORD PTR [esi+0x4]
10021759:	mov    eax,DWORD PTR [ebp+0x8]
1002175c:	mov    eax,DWORD PTR [eax+0x4]
1002175f:	cmp    ebx,DWORD PTR [eax+0x4]
10021762:	jne    0x10021698
10021768:	jmp    0x100217a1
1002176a:	mov    eax,DWORD PTR [ecx]
1002176c:	cmp    BYTE PTR [eax+0x2c],0x1
10021770:	jne    0x10021787
10021772:	mov    eax,DWORD PTR [ecx+0x8]
10021775:	push   DWORD PTR [ebp+0x8]
10021778:	mov    BYTE PTR [eax+0x2c],0x1
1002177c:	mov    BYTE PTR [ecx+0x2c],0x0
10021780:	call   0x100217dc
10021785:	mov    ecx,DWORD PTR [esi]
10021787:	mov    al,BYTE PTR [esi+0x2c]
1002178a:	push   DWORD PTR [ebp+0x8]
1002178d:	mov    BYTE PTR [ecx+0x2c],al
10021790:	mov    BYTE PTR [esi+0x2c],0x1
10021794:	mov    eax,DWORD PTR [ecx]
10021796:	mov    ecx,esi
10021798:	mov    BYTE PTR [eax+0x2c],0x1
1002179c:	call   0x1002181c
100217a1:	mov    BYTE PTR [ebx+0x2c],0x1
100217a5:	push   0x1
100217a7:	lea    esi,[edi+0xc]
100217aa:	xor    ebx,ebx
100217ac:	call   0x100051ce
100217b1:	push   edi
100217b2:	call   0x10042e92
100217b7:	pop    ecx
100217b8:	mov    ecx,DWORD PTR [ebp+0x8]
100217bb:	mov    eax,DWORD PTR [ecx+0x8]
100217be:	test   eax,eax
100217c0:	jbe    0x100217c6
100217c2:	dec    eax
100217c3:	mov    DWORD PTR [ecx+0x8],eax
100217c6:	mov    ecx,DWORD PTR [ebp+0x10]
100217c9:	mov    eax,DWORD PTR [ebp+0xc]
100217cc:	mov    DWORD PTR [eax],ecx
100217ce:	mov    ecx,DWORD PTR [ebp+0x14]
100217d1:	mov    DWORD PTR [eax+0x4],ecx
100217d4:	call   0x10059b0d
100217d9:	ret    0x10
100217dc:	mov    eax,DWORD PTR [ecx+0x8]
100217df:	mov    edx,DWORD PTR [eax]
100217e1:	mov    DWORD PTR [ecx+0x8],edx
100217e4:	mov    edx,DWORD PTR [eax]
100217e6:	cmp    BYTE PTR [edx+0x2d],0x0
100217ea:	jne    0x100217ef
100217ec:	mov    DWORD PTR [edx+0x4],ecx
100217ef:	mov    edx,DWORD PTR [ecx+0x4]
100217f2:	mov    DWORD PTR [eax+0x4],edx
100217f5:	mov    edx,DWORD PTR [esp+0x4]
100217f9:	mov    edx,DWORD PTR [edx+0x4]
100217fc:	cmp    ecx,DWORD PTR [edx+0x4]
100217ff:	jne    0x10021806
10021801:	mov    DWORD PTR [edx+0x4],eax
10021804:	jmp    0x10021814
10021806:	mov    edx,DWORD PTR [ecx+0x4]
10021809:	cmp    ecx,DWORD PTR [edx]
1002180b:	jne    0x10021811
1002180d:	mov    DWORD PTR [edx],eax
1002180f:	jmp    0x10021814
10021811:	mov    DWORD PTR [edx+0x8],eax
10021814:	mov    DWORD PTR [eax],ecx
10021816:	mov    DWORD PTR [ecx+0x4],eax
10021819:	ret    0x4
1002181c:	mov    eax,DWORD PTR [ecx]
1002181e:	mov    edx,DWORD PTR [eax+0x8]
10021821:	mov    DWORD PTR [ecx],edx
10021823:	mov    edx,DWORD PTR [eax+0x8]
10021826:	cmp    BYTE PTR [edx+0x2d],0x0
1002182a:	jne    0x1002182f
1002182c:	mov    DWORD PTR [edx+0x4],ecx
1002182f:	mov    edx,DWORD PTR [ecx+0x4]
10021832:	mov    DWORD PTR [eax+0x4],edx
10021835:	mov    edx,DWORD PTR [esp+0x4]
10021839:	mov    edx,DWORD PTR [edx+0x4]
1002183c:	cmp    ecx,DWORD PTR [edx+0x4]
1002183f:	jne    0x10021846
10021841:	mov    DWORD PTR [edx+0x4],eax
10021844:	jmp    0x10021855
10021846:	mov    edx,DWORD PTR [ecx+0x4]
10021849:	cmp    ecx,DWORD PTR [edx+0x8]
1002184c:	jne    0x10021853
1002184e:	mov    DWORD PTR [edx+0x8],eax
10021851:	jmp    0x10021855
10021853:	mov    DWORD PTR [edx],eax
10021855:	mov    DWORD PTR [eax+0x8],ecx
10021858:	mov    DWORD PTR [ecx+0x4],eax
1002185b:	ret    0x4
1002185e:	push   0x8
10021860:	mov    eax,0x100600f5
10021865:	call   0x10059a68
1002186a:	mov    ebx,ecx
1002186c:	push   0x30
1002186e:	call   0x1004349e
10021873:	mov    edi,eax
10021875:	pop    ecx
10021876:	mov    DWORD PTR [ebp-0x14],edi
10021879:	test   edi,edi
1002187b:	mov    DWORD PTR [ebp-0x4],0x1
10021882:	je     0x100218ad
10021884:	mov    eax,DWORD PTR [ebp+0x8]
10021887:	mov    DWORD PTR [edi],eax
10021889:	mov    eax,DWORD PTR [ebp+0xc]
1002188c:	mov    DWORD PTR [edi+0x4],eax
1002188f:	mov    eax,DWORD PTR [ebp+0x10]
10021892:	mov    DWORD PTR [edi+0x8],eax
10021895:	lea    esi,[edi+0xc]
10021898:	mov    eax,ebx
1002189a:	call   0x10004af5
1002189f:	mov    eax,DWORD PTR [ebx+0x1c]
100218a2:	mov    DWORD PTR [esi+0x1c],eax
100218a5:	mov    BYTE PTR [edi+0x2c],0x0
100218a9:	mov    BYTE PTR [edi+0x2d],0x0
100218ad:	mov    eax,edi
100218af:	call   0x10059b0d
100218b4:	ret    0xc
100218b7:	push   DWORD PTR [ebp-0x14]
100218ba:	call   0x10042e92
100218bf:	pop    ecx
100218c0:	push   0x0
100218c2:	push   0x0
100218c4:	call   0x100479b4
100218c9:	int3   
100218ca:	push   0x24
100218cc:	call   0x1004349e
100218d1:	xor    edx,edx
100218d3:	cmp    eax,edx
100218d5:	pop    ecx
100218d6:	je     0x100218da
100218d8:	mov    DWORD PTR [eax],edx
100218da:	lea    ecx,[eax+0x4]
100218dd:	cmp    ecx,edx
100218df:	je     0x100218e3
100218e1:	mov    DWORD PTR [ecx],edx
100218e3:	lea    ecx,[eax+0x8]
100218e6:	cmp    ecx,edx
100218e8:	je     0x100218ec
100218ea:	mov    DWORD PTR [ecx],edx
100218ec:	mov    BYTE PTR [eax+0x20],0x1
100218f0:	mov    BYTE PTR [eax+0x21],dl
100218f3:	ret    
100218f4:	push   0x24
100218f6:	call   0x1004349e
100218fb:	test   eax,eax
100218fd:	pop    ecx
100218fe:	je     0x1002192c
10021900:	mov    ecx,DWORD PTR [esp+0x4]
10021904:	push   esi
10021905:	mov    esi,DWORD PTR [esp+0x14]
10021909:	mov    DWORD PTR [eax],ecx
1002190b:	mov    ecx,DWORD PTR [esp+0xc]
1002190f:	push   edi
10021910:	mov    DWORD PTR [eax+0x4],ecx
10021913:	mov    ecx,DWORD PTR [esp+0x14]
10021917:	push   0x5
10021919:	mov    DWORD PTR [eax+0x8],ecx
1002191c:	pop    ecx
1002191d:	lea    edi,[eax+0xc]
10021920:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021922:	pop    edi
10021923:	mov    BYTE PTR [eax+0x20],0x0
10021927:	mov    BYTE PTR [eax+0x21],0x0
1002192b:	pop    esi
1002192c:	ret    0x10
1002192f:	push   ecx
10021930:	push   ebp
10021931:	mov    ebp,DWORD PTR [esp+0xc]
10021935:	cmp    BYTE PTR [ebp+0x2d],0x0
10021939:	push   edi
1002193a:	mov    DWORD PTR [esp+0x8],ecx
1002193e:	mov    edi,ebp
10021940:	jne    0x1002196e
10021942:	push   ebx
10021943:	push   esi
10021944:	push   DWORD PTR [edi+0x8]
10021947:	mov    ecx,DWORD PTR [esp+0x14]
1002194b:	call   0x1002192f
10021950:	mov    edi,DWORD PTR [edi]
10021952:	push   0x1
10021954:	lea    esi,[ebp+0xc]
10021957:	xor    ebx,ebx
10021959:	call   0x100051ce
1002195e:	push   ebp
1002195f:	call   0x10042e92
10021964:	cmp    BYTE PTR [edi+0x2d],bl
10021967:	pop    ecx
10021968:	mov    ebp,edi
1002196a:	je     0x10021944
1002196c:	pop    esi
1002196d:	pop    ebx
1002196e:	pop    edi
1002196f:	pop    ebp
10021970:	pop    ecx
10021971:	ret    0x4
10021974:	push   ebx
10021975:	push   esi
10021976:	push   edi
10021977:	mov    edi,DWORD PTR [esp+0x10]
1002197b:	cmp    BYTE PTR [edi+0x21],0x0
1002197f:	mov    ebx,ecx
10021981:	mov    esi,edi
10021983:	jne    0x100219a0
10021985:	push   DWORD PTR [esi+0x8]
10021988:	mov    ecx,ebx
1002198a:	call   0x10021974
1002198f:	mov    esi,DWORD PTR [esi]
10021991:	push   edi
10021992:	call   0x10042e92
10021997:	cmp    BYTE PTR [esi+0x21],0x0
1002199b:	pop    ecx
1002199c:	mov    edi,esi
1002199e:	je     0x10021985
100219a0:	pop    edi
100219a1:	pop    esi
100219a2:	pop    ebx
100219a3:	ret    0x4
100219a6:	push   ebx
100219a7:	xor    ebx,ebx
100219a9:	cmp    DWORD PTR [esi],ebx
100219ab:	jne    0x100219b2
100219ad:	call   0x100433b0
100219b2:	mov    eax,DWORD PTR [esi+0x4]
100219b5:	cmp    BYTE PTR [eax+0x2d],bl
100219b8:	je     0x100219c1
100219ba:	call   0x100433b0
100219bf:	jmp    0x100219ef
100219c1:	mov    ecx,DWORD PTR [eax+0x8]
100219c4:	cmp    BYTE PTR [ecx+0x2d],bl
100219c7:	jne    0x100219e4
100219c9:	jmp    0x100219cd
100219cb:	mov    ecx,eax
100219cd:	mov    eax,DWORD PTR [ecx]
100219cf:	cmp    BYTE PTR [eax+0x2d],bl
100219d2:	je     0x100219cb
100219d4:	mov    DWORD PTR [esi+0x4],ecx
100219d7:	jmp    0x100219ef
100219d9:	mov    ecx,DWORD PTR [esi+0x4]
100219dc:	cmp    ecx,DWORD PTR [eax+0x8]
100219df:	jne    0x100219ec
100219e1:	mov    DWORD PTR [esi+0x4],eax
100219e4:	mov    eax,DWORD PTR [eax+0x4]
100219e7:	cmp    BYTE PTR [eax+0x2d],bl
100219ea:	je     0x100219d9
100219ec:	mov    DWORD PTR [esi+0x4],eax
100219ef:	mov    eax,esi
100219f1:	pop    ebx
100219f2:	ret    
100219f3:	push   ebp
100219f4:	mov    ebp,esp
100219f6:	push   ecx
100219f7:	push   ecx
100219f8:	push   ebx
100219f9:	mov    eax,0x10080a40
100219fe:	push   esi
100219ff:	push   eax
10021a00:	xor    ebx,ebx
10021a02:	mov    DWORD PTR [ebp-0x8],eax
10021a05:	call   DWORD PTR ds:0x100660f0
10021a0b:	mov    esi,DWORD PTR ds:0x10080a58
10021a11:	test   esi,esi
10021a13:	mov    BYTE PTR [ebp-0x4],0x1
10021a17:	je     0x10021a44
10021a19:	call   DWORD PTR ds:0x10066160
10021a1f:	xor    ecx,ecx
10021a21:	cmp    DWORD PTR [esi+0x4],eax
10021a24:	je     0x10021a31
10021a26:	mov    ecx,esi
10021a28:	mov    esi,DWORD PTR [esi+0x8]
10021a2b:	test   esi,esi
10021a2d:	jne    0x10021a21
10021a2f:	jmp    0x10021a44
10021a31:	test   ecx,ecx
10021a33:	mov    eax,DWORD PTR [esi+0x8]
10021a36:	jne    0x10021a3f
10021a38:	mov    ds:0x10080a58,eax
10021a3d:	jmp    0x10021a42
10021a3f:	mov    DWORD PTR [ecx+0x8],eax
10021a42:	mov    ebx,DWORD PTR [esi]
10021a44:	lea    ecx,[ebp-0x8]
10021a47:	call   0x10010c9f
10021a4c:	test   ebx,ebx
10021a4e:	jne    0x10021a54
10021a50:	xor    eax,eax
10021a52:	jmp    0x10021a85
10021a54:	mov    esi,DWORD PTR [ebp+0x8]
10021a57:	mov    eax,DWORD PTR [ebx]
10021a59:	push   edi
10021a5a:	push   ebx
10021a5b:	mov    ecx,ebx
10021a5d:	mov    DWORD PTR [ebx+0x4],esi
10021a60:	call   DWORD PTR [eax+0x8]
10021a63:	lea    edi,[ebx+0x8]
10021a66:	call   0x1001bb79
10021a6b:	mov    ebx,DWORD PTR [ebx+0x14]
10021a6e:	push   ebx
10021a6f:	push   0xfffffffc
10021a71:	push   esi
10021a72:	call   DWORD PTR ds:0x10066358
10021a78:	push   DWORD PTR [ebp+0x14]
10021a7b:	push   DWORD PTR [ebp+0x10]
10021a7e:	push   DWORD PTR [ebp+0xc]
10021a81:	push   esi
10021a82:	call   ebx
10021a84:	pop    edi
10021a85:	pop    esi
10021a86:	pop    ebx
10021a87:	leave  
10021a88:	ret    0x10
10021a8b:	push   ebp
10021a8c:	mov    ebp,esp
10021a8e:	sub    esp,0x24
10021a91:	mov    ecx,DWORD PTR [ebp+0x14]
10021a94:	push   ebx
10021a95:	mov    ebx,DWORD PTR [ebp+0x10]
10021a98:	push   esi
10021a99:	mov    esi,DWORD PTR [ebp+0x8]
10021a9c:	mov    edx,DWORD PTR [esi+0x18]
10021a9f:	mov    eax,DWORD PTR [esi+0x4]
10021aa2:	push   edi
10021aa3:	mov    edi,DWORD PTR [ebp+0xc]
10021aa6:	mov    DWORD PTR [ebp-0x18],ecx
10021aa9:	xor    ecx,ecx
10021aab:	push   ecx
10021aac:	mov    DWORD PTR [ebp-0x14],ecx
10021aaf:	mov    DWORD PTR [ebp-0xc],ecx
10021ab2:	mov    DWORD PTR [ebp-0x10],ecx
10021ab5:	lea    ecx,[ebp+0x8]
10021ab8:	push   ecx
10021ab9:	push   DWORD PTR [ebp+0x14]
10021abc:	mov    DWORD PTR [ebp+0xc],edx
10021abf:	push   ebx
10021ac0:	lea    edx,[ebp-0x24]
10021ac3:	push   edi
10021ac4:	mov    DWORD PTR [esi+0x18],edx
10021ac7:	mov    edx,DWORD PTR [esi]
10021ac9:	push   eax
10021aca:	mov    ecx,esi
10021acc:	mov    DWORD PTR [ebp-0x8],0x24
10021ad3:	mov    DWORD PTR [ebp-0x4],0x1
10021ada:	mov    DWORD PTR [ebp-0x24],eax
10021add:	mov    DWORD PTR [ebp-0x20],edi
10021ae0:	mov    DWORD PTR [ebp-0x1c],ebx
10021ae3:	call   DWORD PTR [edx]
10021ae5:	test   eax,eax
10021ae7:	jne    0x10021b5a
10021ae9:	cmp    edi,0x82
10021aef:	je     0x10021b07
10021af1:	push   DWORD PTR [ebp+0x14]
10021af4:	push   ebx
10021af5:	push   edi
10021af6:	push   DWORD PTR [esi+0x4]
10021af9:	push   DWORD PTR [esi+0x20]
10021afc:	call   DWORD PTR ds:0x10066338
10021b02:	mov    DWORD PTR [ebp+0x8],eax
10021b05:	jmp    0x10021b5a
10021b07:	mov    eax,DWORD PTR [esi+0x4]
10021b0a:	mov    edi,DWORD PTR ds:0x10066310
10021b10:	push   0xfffffffc
10021b12:	push   eax
10021b13:	call   edi
10021b15:	push   DWORD PTR [ebp+0x14]
10021b18:	mov    DWORD PTR [ebp+0x10],eax
10021b1b:	push   ebx
10021b1c:	push   0x82
10021b21:	push   DWORD PTR [esi+0x4]
10021b24:	push   DWORD PTR [esi+0x20]
10021b27:	call   DWORD PTR ds:0x10066338
10021b2d:	mov    DWORD PTR [ebp+0x8],eax
10021b30:	mov    eax,DWORD PTR [esi+0x20]
10021b33:	cmp    eax,DWORD PTR ds:0x1006633c
10021b39:	je     0x10021b56
10021b3b:	mov    eax,DWORD PTR [esi+0x4]
10021b3e:	push   0xfffffffc
10021b40:	push   eax
10021b41:	call   edi
10021b43:	cmp    eax,DWORD PTR [ebp+0x10]
10021b46:	jne    0x10021b56
10021b48:	push   DWORD PTR [esi+0x20]
10021b4b:	push   0xfffffffc
10021b4d:	push   DWORD PTR [esi+0x4]
10021b50:	call   DWORD PTR ds:0x10066358
10021b56:	or     DWORD PTR [esi+0x1c],0x1
10021b5a:	mov    eax,DWORD PTR [esi+0x1c]
10021b5d:	test   al,0x1
10021b5f:	je     0x10021b81
10021b61:	xor    edx,edx
10021b63:	cmp    DWORD PTR [ebp+0xc],edx
10021b66:	jne    0x10021b81
10021b68:	mov    ecx,DWORD PTR [esi+0x4]
10021b6b:	and    eax,0xfffffffe
10021b6e:	mov    DWORD PTR [esi+0x1c],eax
10021b71:	mov    eax,DWORD PTR [esi]
10021b73:	push   ecx
10021b74:	mov    ecx,esi
10021b76:	mov    DWORD PTR [esi+0x4],edx
10021b79:	mov    DWORD PTR [esi+0x18],edx
10021b7c:	call   DWORD PTR [eax+0xc]
10021b7f:	jmp    0x10021b87
10021b81:	mov    eax,DWORD PTR [ebp+0xc]
10021b84:	mov    DWORD PTR [esi+0x18],eax
10021b87:	mov    eax,DWORD PTR [ebp+0x8]
10021b8a:	pop    edi
10021b8b:	pop    esi
10021b8c:	pop    ebx
10021b8d:	leave  
10021b8e:	ret    0x10
10021b91:	push   ebp
10021b92:	mov    ebp,esp
10021b94:	push   esi
10021b95:	push   edi
10021b96:	lea    esi,[ebx+0x8]
10021b99:	push   0x0
10021b9b:	xor    eax,eax
10021b9d:	mov    edi,esi
10021b9f:	call   0x1001bb79
10021ba4:	test   eax,eax
10021ba6:	jne    0x10021bb4
10021ba8:	push   0xe
10021baa:	call   DWORD PTR ds:0x1006615c
10021bb0:	xor    eax,eax
10021bb2:	jmp    0x10021c12
10021bb4:	xor    edi,edi
10021bb6:	cmp    WORD PTR [ebp+0x1c],di
10021bba:	je     0x10021bb0
10021bbc:	mov    eax,ebx
10021bbe:	call   0x1001b405
10021bc3:	cmp    DWORD PTR [ebp+0x18],edi
10021bc6:	jne    0x10021bd4
10021bc8:	test   DWORD PTR [ebp+0x10],0x40000000
10021bcf:	je     0x10021bd4
10021bd1:	mov    DWORD PTR [ebp+0x18],ebx
10021bd4:	mov    eax,DWORD PTR [ebp+0x8]
10021bd7:	cmp    eax,edi
10021bd9:	jne    0x10021be0
10021bdb:	mov    eax,0x1007f814
10021be0:	mov    ecx,DWORD PTR [eax+0x4]
10021be3:	mov    esi,DWORD PTR [eax+0xc]
10021be6:	mov    edx,DWORD PTR [eax]
10021be8:	mov    eax,DWORD PTR [eax+0x8]
10021beb:	push   edi
10021bec:	push   DWORD PTR ds:0x10080a04
10021bf2:	sub    esi,ecx
10021bf4:	push   DWORD PTR [ebp+0x18]
10021bf7:	sub    eax,edx
10021bf9:	push   edi
10021bfa:	push   esi
10021bfb:	push   eax
10021bfc:	movzx  eax,WORD PTR [ebp+0x1c]
10021c00:	push   ecx
10021c01:	push   edx
10021c02:	push   DWORD PTR [ebp+0x10]
10021c05:	push   DWORD PTR [ebp+0xc]
10021c08:	push   eax
10021c09:	push   DWORD PTR [ebp+0x14]
10021c0c:	call   DWORD PTR ds:0x10066324
10021c12:	pop    edi
10021c13:	pop    esi
10021c14:	pop    ebp
10021c15:	ret    0x18
10021c18:	push   ebp
10021c19:	mov    ebp,esp
10021c1b:	and    esp,0xfffffff8
10021c1e:	sub    esp,0x70
10021c21:	push   esi
10021c22:	xor    esi,esi
10021c24:	cmp    ebx,esi
10021c26:	push   edi
10021c27:	je     0x10021ca5
10021c29:	cmp    DWORD PTR [ebp+0x8],esi
10021c2c:	je     0x10021ca5
10021c2e:	cmp    WORD PTR [ebx+0x40],si
10021c32:	jne    0x10021d6a
10021c38:	mov    eax,0x10080a40
10021c3d:	push   eax
10021c3e:	mov    DWORD PTR [esp+0x14],eax
10021c42:	call   DWORD PTR ds:0x100660f0
10021c48:	cmp    WORD PTR [ebx+0x40],si
10021c4c:	mov    BYTE PTR [esp+0x14],0x1
10021c51:	jne    0x10021d5f
10021c57:	mov    eax,DWORD PTR [ebx+0x30]
10021c5a:	cmp    eax,esi
10021c5c:	je     0x10021ccf
10021c5e:	mov    ecx,DWORD PTR [ebx+0x28]
10021c61:	mov    DWORD PTR [esp+0x8],ecx
10021c65:	mov    ecx,DWORD PTR [ebx+0x8]
10021c68:	mov    DWORD PTR [esp+0xc],ecx
10021c6c:	lea    ecx,[esp+0x18]
10021c70:	push   ecx
10021c71:	push   eax
10021c72:	push   esi
10021c73:	mov    esi,DWORD PTR ds:0x100662c4
10021c79:	mov    DWORD PTR [esp+0x24],0x30
10021c81:	call   esi
10021c83:	test   eax,eax
10021c85:	jne    0x10021cae
10021c87:	mov    eax,DWORD PTR [ebx+0x30]
10021c8a:	lea    ecx,[esp+0x18]
10021c8e:	push   ecx
10021c8f:	push   eax
10021c90:	push   DWORD PTR ds:0x10080a04
10021c96:	call   esi
10021c98:	test   eax,eax
10021c9a:	jne    0x10021cae
10021c9c:	lea    ecx,[esp+0x10]
10021ca0:	call   0x10010c9f
10021ca5:	xor    ax,ax
10021ca8:	pop    edi
10021ca9:	pop    esi
10021caa:	mov    esp,ebp
10021cac:	pop    ebp
10021cad:	ret    
10021cae:	push   0xc
10021cb0:	pop    ecx
10021cb1:	lea    esi,[esp+0x18]
10021cb5:	mov    edi,ebx
10021cb7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021cb9:	mov    eax,DWORD PTR [ebx+0x8]
10021cbc:	mov    DWORD PTR [ebx+0x34],eax
10021cbf:	mov    eax,DWORD PTR [esp+0x8]
10021cc3:	mov    DWORD PTR [ebx+0x28],eax
10021cc6:	mov    eax,DWORD PTR [esp+0xc]
10021cca:	mov    DWORD PTR [ebx+0x8],eax
10021ccd:	jmp    0x10021ceb
10021ccf:	mov    eax,DWORD PTR [ebx+0x3c]
10021cd2:	push   DWORD PTR [ebx+0x38]
10021cd5:	neg    eax
10021cd7:	sbb    eax,eax
10021cd9:	not    eax
10021cdb:	and    eax,DWORD PTR ds:0x10080a08
10021ce1:	push   eax
10021ce2:	call   DWORD PTR ds:0x10066364
10021ce8:	mov    DWORD PTR [ebx+0x1c],eax
10021ceb:	mov    eax,ds:0x10080a04
10021cf0:	and    DWORD PTR [ebx+0x4],0xffffbfff
10021cf7:	cmp    DWORD PTR [ebx+0x28],0x0
10021cfb:	mov    DWORD PTR [ebx+0x14],eax
10021cfe:	jne    0x10021d17
10021d00:	push   ebx
10021d01:	push   0x10070384
10021d06:	lea    esi,[ebx+0x42]
10021d09:	push   0x25
10021d0b:	push   esi
10021d0c:	call   0x10046538
10021d11:	add    esp,0x10
10021d14:	mov    DWORD PTR [ebx+0x28],esi
10021d17:	mov    eax,DWORD PTR [ebx+0x28]
10021d1a:	push   0xc
10021d1c:	pop    ecx
10021d1d:	lea    edx,[esp+0x48]
10021d21:	push   edx
10021d22:	mov    esi,ebx
10021d24:	lea    edi,[esp+0x4c]
10021d28:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021d2a:	mov    ecx,DWORD PTR [ebx+0x14]
10021d2d:	push   eax
10021d2e:	push   ecx
10021d2f:	call   DWORD PTR ds:0x100662c4
10021d35:	test   ax,ax
10021d38:	mov    WORD PTR [ebx+0x40],ax
10021d3c:	jne    0x10021d5f
10021d3e:	push   ebx
10021d3f:	call   DWORD PTR ds:0x100662bc
10021d45:	movzx  edi,ax
10021d48:	lea    eax,[esp+0xc]
10021d4c:	push   eax
10021d4d:	mov    esi,0x10080a5c
10021d52:	mov    DWORD PTR [esp+0x10],edi
10021d56:	call   0x1001fceb
10021d5b:	mov    WORD PTR [ebx+0x40],di
10021d5f:	lea    ecx,[esp+0x10]
10021d63:	call   0x10010c9f
10021d68:	xor    esi,esi
10021d6a:	cmp    DWORD PTR [ebx+0x30],esi
10021d6d:	je     0x10021d77
10021d6f:	mov    eax,DWORD PTR [ebx+0x34]
10021d72:	mov    ecx,DWORD PTR [ebp+0x8]
10021d75:	mov    DWORD PTR [ecx],eax
10021d77:	mov    ax,WORD PTR [ebx+0x40]
10021d7b:	jmp    0x10021ca8
10021d80:	push   0xc
10021d82:	mov    eax,0x100600d5
10021d87:	call   0x10059a68
10021d8c:	mov    ebx,DWORD PTR [ebp+0x8]
10021d8f:	xor    edi,edi
10021d91:	cmp    ebx,edi
10021d93:	jne    0x10021d9c
10021d95:	mov    eax,0x80004003
10021d9a:	jmp    0x10021e07
10021d9c:	push   0x30
10021d9e:	mov    DWORD PTR [ebx],edi
10021da0:	mov    DWORD PTR [ebp-0x14],0x8007000e
10021da7:	mov    DWORD PTR [ebp-0x4],edi
10021daa:	call   0x1004349e
10021daf:	mov    esi,eax
10021db1:	cmp    esi,edi
10021db3:	pop    ecx
10021db4:	je     0x10021dea
10021db6:	mov    eax,ds:0x1006633c
10021dbb:	mov    DWORD PTR [esi+0x28],edi
10021dbe:	mov    DWORD PTR [esi+0x4],edi
10021dc1:	mov    DWORD PTR [esi+0x14],edi
10021dc4:	mov    DWORD PTR [esi+0x18],edi
10021dc7:	mov    DWORD PTR [esi+0x1c],edi
10021dca:	mov    DWORD PTR [esi+0x20],eax
10021dcd:	mov    DWORD PTR [esi+0x2c],edi
10021dd0:	mov    DWORD PTR [esi],0x10070664
10021dd6:	mov    DWORD PTR [esi+0x24],0x10070674
10021ddd:	mov    ecx,DWORD PTR ds:0x10080c04
10021de3:	mov    eax,DWORD PTR [ecx]
10021de5:	call   DWORD PTR [eax+0x4]
10021de8:	jmp    0x10021dfb
10021dea:	xor    esi,esi
10021dec:	jmp    0x10021dfb
10021dee:	mov    eax,0x10021df4
10021df3:	ret    
10021df4:	mov    ebx,DWORD PTR [ebp+0x8]
10021df7:	xor    edi,edi
10021df9:	mov    esi,edi
10021dfb:	cmp    esi,edi
10021dfd:	je     0x10021e02
10021dff:	mov    DWORD PTR [ebp-0x14],edi
10021e02:	mov    eax,DWORD PTR [ebp-0x14]
10021e05:	mov    DWORD PTR [ebx],esi
10021e07:	call   0x10059b0d
10021e0c:	ret    0x4
10021e0f:	push   0xc
10021e11:	mov    eax,0x10060b69
10021e16:	call   0x10059a68
10021e1b:	mov    ebx,DWORD PTR [ebp+0x8]
10021e1e:	xor    edi,edi
10021e20:	cmp    ebx,edi
10021e22:	jne    0x10021e2b
10021e24:	mov    eax,0x80004003
10021e29:	jmp    0x10021e96
10021e2b:	push   0x30
10021e2d:	mov    DWORD PTR [ebx],edi
10021e2f:	mov    DWORD PTR [ebp-0x14],0x8007000e
10021e36:	mov    DWORD PTR [ebp-0x4],edi
10021e39:	call   0x1004349e
10021e3e:	mov    esi,eax
10021e40:	cmp    esi,edi
10021e42:	pop    ecx
10021e43:	je     0x10021e79
10021e45:	mov    eax,ds:0x1006633c
10021e4a:	mov    DWORD PTR [esi+0x28],edi
10021e4d:	mov    DWORD PTR [esi+0x4],edi
10021e50:	mov    DWORD PTR [esi+0x14],edi
10021e53:	mov    DWORD PTR [esi+0x18],edi
10021e56:	mov    DWORD PTR [esi+0x1c],edi
10021e59:	mov    DWORD PTR [esi+0x20],eax
10021e5c:	mov    DWORD PTR [esi+0x2c],edi
10021e5f:	mov    DWORD PTR [esi],0x100706b0
10021e65:	mov    DWORD PTR [esi+0x24],0x100706c0
10021e6c:	mov    ecx,DWORD PTR ds:0x10080c04
10021e72:	mov    eax,DWORD PTR [ecx]
10021e74:	call   DWORD PTR [eax+0x4]
10021e77:	jmp    0x10021e8a
10021e79:	xor    esi,esi
10021e7b:	jmp    0x10021e8a
10021e7d:	mov    eax,0x10021e83
10021e82:	ret    
10021e83:	mov    ebx,DWORD PTR [ebp+0x8]
10021e86:	xor    edi,edi
10021e88:	mov    esi,edi
10021e8a:	cmp    esi,edi
10021e8c:	je     0x10021e91
10021e8e:	mov    DWORD PTR [ebp-0x14],edi
10021e91:	mov    eax,DWORD PTR [ebp-0x14]
10021e94:	mov    DWORD PTR [ebx],esi
10021e96:	call   0x10059b0d
10021e9b:	ret    0x4
10021e9e:	push   ebp
10021e9f:	mov    ebp,esp
10021ea1:	mov    edx,DWORD PTR [ebp+0x14]
10021ea4:	xor    ecx,ecx
10021ea6:	cmp    edx,ecx
10021ea8:	je     0x10021eac
10021eaa:	mov    DWORD PTR [edx],ecx
10021eac:	push   esi
10021ead:	push   edi
10021eae:	mov    edi,DWORD PTR [ebp+0xc]
10021eb1:	cmp    edi,ecx
10021eb3:	jne    0x10021ebf
10021eb5:	mov    eax,0x80070057
10021eba:	jmp    0x10021f63
10021ebf:	cmp    DWORD PTR [ebp+0x10],ecx
10021ec2:	push   ebx
10021ec3:	je     0x10021f5d
10021ec9:	xor    ebx,ebx
10021ecb:	inc    ebx
10021ecc:	cmp    edi,ebx
10021ece:	je     0x10021ed8
10021ed0:	cmp    edx,ecx
10021ed2:	je     0x10021f5d
10021ed8:	mov    esi,DWORD PTR [ebp+0x8]
10021edb:	cmp    DWORD PTR [esi+0x8],ecx
10021ede:	je     0x10021f56
10021ee0:	mov    eax,DWORD PTR [esi+0xc]
10021ee3:	cmp    eax,ecx
10021ee5:	je     0x10021f56
10021ee7:	mov    ecx,DWORD PTR [esi+0x10]
10021eea:	test   ecx,ecx
10021eec:	je     0x10021f56
10021eee:	and    DWORD PTR [ebp+0xc],0x0
10021ef2:	sub    eax,ecx
10021ef4:	sar    eax,0x2
10021ef7:	cmp    edi,eax
10021ef9:	jbe    0x10021efe
10021efb:	mov    DWORD PTR [ebp+0xc],ebx
10021efe:	jb     0x10021f02
10021f00:	mov    edi,eax
10021f02:	test   edx,edx
10021f04:	je     0x10021f08
10021f06:	mov    DWORD PTR [edx],edi
10021f08:	mov    ebx,DWORD PTR [ebp+0x10]
10021f0b:	jmp    0x10021f26
10021f0d:	mov    eax,DWORD PTR [esi+0x10]
10021f10:	mov    ecx,ebx
10021f12:	dec    edi
10021f13:	call   0x100247fe
10021f18:	test   eax,eax
10021f1a:	mov    DWORD PTR [ebp+0x8],eax
10021f1d:	jl     0x10021f2f
10021f1f:	add    ebx,0x4
10021f22:	add    DWORD PTR [esi+0x10],0x4
10021f26:	test   edi,edi
10021f28:	jne    0x10021f0d
10021f2a:	mov    eax,DWORD PTR [ebp+0xc]
10021f2d:	jmp    0x10021f62
10021f2f:	mov    esi,DWORD PTR [ebp+0x10]
10021f32:	jmp    0x10021f43
10021f34:	mov    eax,DWORD PTR [esi]
10021f36:	test   eax,eax
10021f38:	je     0x10021f40
10021f3a:	mov    ecx,DWORD PTR [eax]
10021f3c:	push   eax
10021f3d:	call   DWORD PTR [ecx+0x8]
10021f40:	add    esi,0x4
10021f43:	cmp    esi,ebx
10021f45:	jb     0x10021f34
10021f47:	mov    eax,DWORD PTR [ebp+0x14]
10021f4a:	test   eax,eax
10021f4c:	je     0x10021f51
10021f4e:	and    DWORD PTR [eax],0x0
10021f51:	mov    eax,DWORD PTR [ebp+0x8]
10021f54:	jmp    0x10021f62
10021f56:	mov    eax,0x80004005
10021f5b:	jmp    0x10021f62
10021f5d:	mov    eax,0x80004003
10021f62:	pop    ebx
10021f63:	pop    edi
10021f64:	pop    esi
10021f65:	pop    ebp
10021f66:	ret    0x10
10021f69:	push   esi
10021f6a:	mov    esi,DWORD PTR [esp+0xc]
10021f6e:	test   esi,esi
10021f70:	jne    0x10021f79
10021f72:	mov    eax,0x80070057
10021f77:	jmp    0x10021f9d
10021f79:	mov    ecx,DWORD PTR [esp+0x8]
10021f7d:	mov    edx,DWORD PTR [ecx+0x10]
10021f80:	mov    eax,DWORD PTR [ecx+0xc]
10021f83:	sub    eax,edx
10021f85:	sar    eax,0x2
10021f88:	cmp    esi,eax
10021f8a:	ja     0x10021f8e
10021f8c:	mov    eax,esi
10021f8e:	lea    edx,[edx+eax*4]
10021f91:	mov    DWORD PTR [ecx+0x10],edx
10021f94:	xor    ecx,ecx
10021f96:	cmp    esi,eax
10021f98:	setne  cl
10021f9b:	mov    eax,ecx
10021f9d:	pop    esi
10021f9e:	ret    0x8
10021fa1:	push   0x8
10021fa3:	mov    eax,0x1006009f
10021fa8:	call   0x10059a35
10021fad:	mov    eax,DWORD PTR [ebp+0xc]
10021fb0:	xor    edi,edi
10021fb2:	cmp    eax,edi
10021fb4:	mov    DWORD PTR [ebp-0x10],edi
10021fb7:	mov    ebx,0x80004003
10021fbc:	je     0x10022057
10021fc2:	mov    DWORD PTR [eax],edi
10021fc4:	lea    eax,[ebp-0x14]
10021fc7:	push   eax
10021fc8:	call   0x100221ca
10021fcd:	mov    ebx,eax
10021fcf:	cmp    ebx,edi
10021fd1:	jl     0x10022057
10021fd7:	mov    esi,DWORD PTR [ebp+0x8]
10021fda:	test   BYTE PTR [esi+0x14],0x2
10021fde:	je     0x10021ff8
10021fe0:	mov    eax,DWORD PTR [esi]
10021fe2:	push   esi
10021fe3:	mov    DWORD PTR [ebp+0x8],esi
10021fe6:	call   DWORD PTR [eax+0x4]
10021fe9:	mov    DWORD PTR [ebp-0x4],edi
10021fec:	lea    eax,[ebp+0x8]
10021fef:	mov    DWORD PTR [ebp-0x10],0x1
10021ff6:	jmp    0x10021ffb
10021ff8:	lea    eax,[esi+0x4]
10021ffb:	mov    eax,DWORD PTR [eax]
10021ffd:	push   edi
10021ffe:	mov    edi,DWORD PTR [ebp-0x14]
10022001:	push   eax
10022002:	push   DWORD PTR [esi+0xc]
10022005:	push   DWORD PTR [esi+0x8]
10022008:	push   edi
10022009:	call   0x10022061
1002200e:	or     DWORD PTR [ebp-0x4],0xffffffff
10022012:	test   BYTE PTR [ebp-0x10],0x1
10022016:	mov    ebx,eax
10022018:	je     0x10022027
1002201a:	mov    eax,DWORD PTR [ebp+0x8]
1002201d:	test   eax,eax
1002201f:	je     0x10022027
10022021:	mov    ecx,DWORD PTR [eax]
10022023:	push   eax
10022024:	call   DWORD PTR [ecx+0x8]
10022027:	test   ebx,ebx
10022029:	jl     0x1002204a
1002202b:	mov    eax,DWORD PTR [esi+0x10]
1002202e:	mov    ebx,DWORD PTR [ebp+0xc]
10022031:	push   0x10070204
10022036:	mov    DWORD PTR [edi+0x10],eax
10022039:	push   edi
1002203a:	mov    eax,0x1007063c
1002203f:	call   0x10010334
10022044:	mov    ebx,eax
10022046:	test   ebx,ebx
10022048:	jge    0x10022057
1002204a:	test   edi,edi
1002204c:	je     0x10022057
1002204e:	mov    eax,DWORD PTR [edi]
10022050:	push   0x1
10022052:	mov    ecx,edi
10022054:	call   DWORD PTR [eax+0x1c]
10022057:	mov    eax,ebx
10022059:	call   0x10059b0d
1002205e:	ret    0x8
10022061:	push   0x4
10022063:	mov    eax,0x1005f7dc
10022068:	call   0x10059a68
1002206d:	mov    esi,DWORD PTR [ebp+0x10]
10022070:	mov    ebx,DWORD PTR [ebp+0x8]
10022073:	cmp    DWORD PTR [ebp+0x18],0x3
10022077:	jne    0x1002212b
1002207d:	and    DWORD PTR [ebp-0x4],0x0
10022081:	mov    eax,esi
10022083:	sub    eax,DWORD PTR [ebp+0xc]
10022086:	xor    ecx,ecx
10022088:	push   0x4
1002208a:	sar    eax,0x2
1002208d:	pop    edx
1002208e:	mul    edx
10022090:	seto   cl
10022093:	neg    ecx
10022095:	or     ecx,eax
10022097:	push   ecx
10022098:	call   0x10043721
1002209d:	or     DWORD PTR [ebp-0x4],0xffffffff
100220a1:	pop    ecx
100220a2:	mov    DWORD PTR [ebx+0x8],eax
100220a5:	jmp    0x100220b3
100220a7:	mov    eax,0x100220ad
100220ac:	ret    
100220ad:	mov    ebx,DWORD PTR [ebp+0x8]
100220b0:	mov    esi,DWORD PTR [ebp+0x10]
100220b3:	mov    eax,DWORD PTR [ebx+0x8]
100220b6:	test   eax,eax
100220b8:	mov    DWORD PTR [ebx+0x10],eax
100220bb:	jne    0x100220c7
100220bd:	mov    eax,0x8007000e
100220c2:	jmp    0x10022151
100220c7:	mov    edi,DWORD PTR [ebp+0xc]
100220ca:	jmp    0x100220e4
100220cc:	mov    ecx,DWORD PTR [ebx+0x10]
100220cf:	mov    eax,edi
100220d1:	call   0x100247fe
100220d6:	test   eax,eax
100220d8:	mov    DWORD PTR [ebp+0x8],eax
100220db:	jl     0x100220f9
100220dd:	add    DWORD PTR [ebx+0x10],0x4
100220e1:	add    edi,0x4
100220e4:	cmp    edi,esi
100220e6:	jne    0x100220cc
100220e8:	sub    esi,DWORD PTR [ebp+0xc]
100220eb:	mov    eax,DWORD PTR [ebx+0x8]
100220ee:	sar    esi,0x2
100220f1:	lea    eax,[eax+esi*4]
100220f4:	mov    DWORD PTR [ebx+0xc],eax
100220f7:	jmp    0x10022134
100220f9:	mov    esi,DWORD PTR [ebx+0x8]
100220fc:	jmp    0x1002210d
100220fe:	mov    eax,DWORD PTR [esi]
10022100:	test   eax,eax
10022102:	je     0x1002210a
10022104:	mov    ecx,DWORD PTR [eax]
10022106:	push   eax
10022107:	call   DWORD PTR [ecx+0x8]
1002210a:	add    esi,0x4
1002210d:	cmp    esi,DWORD PTR [ebx+0x10]
10022110:	jb     0x100220fe
10022112:	push   DWORD PTR [ebx+0x8]
10022115:	call   0x100433c0
1002211a:	xor    eax,eax
1002211c:	mov    DWORD PTR [ebx+0x10],eax
1002211f:	mov    DWORD PTR [ebx+0xc],eax
10022122:	mov    DWORD PTR [ebx+0x8],eax
10022125:	mov    eax,DWORD PTR [ebp+0x8]
10022128:	pop    ecx
10022129:	jmp    0x10022151
1002212b:	mov    eax,DWORD PTR [ebp+0xc]
1002212e:	mov    DWORD PTR [ebx+0x8],eax
10022131:	mov    DWORD PTR [ebx+0xc],esi
10022134:	mov    edi,DWORD PTR [ebp+0x14]
10022137:	lea    esi,[ebx+0x4]
1002213a:	cmp    DWORD PTR [esi],edi
1002213c:	je     0x10022143
1002213e:	call   0x1000763b
10022143:	mov    eax,DWORD PTR [ebx+0x8]
10022146:	mov    DWORD PTR [ebx+0x10],eax
10022149:	mov    eax,DWORD PTR [ebp+0x18]
1002214c:	mov    DWORD PTR [ebx+0x14],eax
1002214f:	xor    eax,eax
10022151:	call   0x10059b0d
10022156:	ret    0x14
10022159:	push   0xc
1002215b:	mov    eax,0x1005fa77
10022160:	call   0x10059a68
10022165:	mov    edi,DWORD PTR [ebp+0x8]
10022168:	xor    ebx,ebx
1002216a:	cmp    edi,ebx
1002216c:	jne    0x10022175
1002216e:	mov    eax,0x80004003
10022173:	jmp    0x100221c2
10022175:	push   0x8
10022177:	mov    DWORD PTR [edi],ebx
10022179:	mov    DWORD PTR [ebp-0x14],0x8007000e
10022180:	mov    DWORD PTR [ebp-0x4],ebx
10022183:	call   0x1004349e
10022188:	mov    esi,eax
1002218a:	cmp    esi,ebx
1002218c:	pop    ecx
1002218d:	je     0x100221a5
1002218f:	mov    DWORD PTR [esi+0x4],ebx
10022192:	mov    DWORD PTR [esi],0x10070704
10022198:	mov    ecx,DWORD PTR ds:0x10080c04
1002219e:	mov    eax,DWORD PTR [ecx]
100221a0:	call   DWORD PTR [eax+0x4]
100221a3:	jmp    0x100221b6
100221a5:	xor    esi,esi
100221a7:	jmp    0x100221b6
100221a9:	mov    eax,0x100221af
100221ae:	ret    
100221af:	mov    edi,DWORD PTR [ebp+0x8]
100221b2:	xor    ebx,ebx
100221b4:	mov    esi,ebx
100221b6:	cmp    esi,ebx
100221b8:	je     0x100221bd
100221ba:	mov    DWORD PTR [ebp-0x14],ebx
100221bd:	mov    eax,DWORD PTR [ebp-0x14]
100221c0:	mov    DWORD PTR [edi],esi
100221c2:	call   0x10059b0d
100221c7:	ret    0x4
100221ca:	push   0xc
100221cc:	mov    eax,0x1005fa5c
100221d1:	call   0x10059a68
100221d6:	mov    edi,DWORD PTR [ebp+0x8]
100221d9:	xor    esi,esi
100221db:	cmp    edi,esi
100221dd:	jne    0x100221e6
100221df:	mov    eax,0x80004003
100221e4:	jmp    0x10022227
100221e6:	push   0x1c
100221e8:	mov    DWORD PTR [edi],esi
100221ea:	mov    DWORD PTR [ebp-0x14],0x8007000e
100221f1:	mov    DWORD PTR [ebp-0x18],esi
100221f4:	mov    DWORD PTR [ebp-0x4],esi
100221f7:	call   0x1004349e
100221fc:	cmp    eax,esi
100221fe:	pop    ecx
100221ff:	je     0x1002220a
10022201:	mov    esi,eax
10022203:	call   0x1002006d
10022208:	jmp    0x1002221a
1002220a:	xor    eax,eax
1002220c:	jmp    0x1002221a
1002220e:	mov    eax,0x10022214
10022213:	ret    
10022214:	mov    edi,DWORD PTR [ebp+0x8]
10022217:	mov    eax,DWORD PTR [ebp-0x18]
1002221a:	test   eax,eax
1002221c:	je     0x10022222
1002221e:	and    DWORD PTR [ebp-0x14],0x0
10022222:	mov    DWORD PTR [edi],eax
10022224:	mov    eax,DWORD PTR [ebp-0x14]
10022227:	call   0x10059b0d
1002222c:	ret    0x4
1002222f:	sub    DWORD PTR [esp+0x4],0x4
10022234:	jmp    0x10020f1d
10022239:	sub    DWORD PTR [esp+0x4],0x24
1002223e:	jmp    0x10020f1d
10022243:	sub    DWORD PTR [esp+0x4],0x1c
10022248:	jmp    0x10020f0d
1002224d:	sub    DWORD PTR [esp+0x4],0x1c
10022252:	jmp    0x10020efd
10022257:	sub    DWORD PTR [esp+0x4],0x8
1002225c:	jmp    0x10020f1d
10022261:	sub    DWORD PTR [esp+0x4],0x28
10022266:	jmp    0x10020f1d
1002226b:	sub    DWORD PTR [esp+0x4],0x20
10022270:	jmp    0x10020f0d
10022275:	sub    DWORD PTR [esp+0x4],0x20
1002227a:	jmp    0x10020efd
1002227f:	sub    DWORD PTR [esp+0x4],0xc
10022284:	jmp    0x10020f1d
10022289:	sub    DWORD PTR [esp+0x4],0x4
1002228e:	jmp    0x10020f0d
10022293:	sub    DWORD PTR [esp+0x4],0x24
10022298:	jmp    0x10020f0d
1002229d:	sub    DWORD PTR [esp+0x4],0x4
100222a2:	jmp    0x10020efd
100222a7:	sub    DWORD PTR [esp+0x4],0x24
100222ac:	jmp    0x10020efd
100222b1:	sub    DWORD PTR [esp+0x4],0x10
100222b6:	jmp    0x10020f1d
100222bb:	sub    DWORD PTR [esp+0x4],0x8
100222c0:	jmp    0x10020f0d
100222c5:	sub    DWORD PTR [esp+0x4],0x28
100222ca:	jmp    0x10020f0d
100222cf:	sub    DWORD PTR [esp+0x4],0x8
100222d4:	jmp    0x10020efd
100222d9:	sub    DWORD PTR [esp+0x4],0x28
100222de:	jmp    0x10020efd
100222e3:	sub    DWORD PTR [esp+0x4],0x14
100222e8:	jmp    0x10020f1d
100222ed:	sub    DWORD PTR [esp+0x4],0xc
100222f2:	jmp    0x10020f0d
100222f7:	sub    DWORD PTR [esp+0x4],0xc
100222fc:	jmp    0x10020efd
10022301:	sub    DWORD PTR [esp+0x4],0x10
10022306:	jmp    0x10020f0d
1002230b:	sub    DWORD PTR [esp+0x4],0x10
10022310:	jmp    0x10020efd
10022315:	sub    DWORD PTR [esp+0x4],0x1c
1002231a:	jmp    0x10020f1d
1002231f:	sub    DWORD PTR [esp+0x4],0x14
10022324:	jmp    0x10020f0d
10022329:	sub    ecx,0x38
1002232c:	jmp    0x10021528
10022331:	sub    DWORD PTR [esp+0x4],0x14
10022336:	jmp    0x10020efd
1002233b:	sub    DWORD PTR [esp+0x4],0x20
10022340:	jmp    0x10020f1d
10022345:	mov    eax,DWORD PTR [esp+0x4]
10022349:	add    eax,0x8
1002234c:	call   0x10011efe
10022351:	mov    ecx,DWORD PTR [esp+0x8]
10022355:	mov    DWORD PTR [ecx],eax
10022357:	xor    eax,eax
10022359:	ret    0x8
1002235c:	mov    eax,DWORD PTR [esp+0x4]
10022360:	add    eax,0xc
10022363:	call   0x10011efe
10022368:	mov    ecx,DWORD PTR [esp+0x8]
1002236c:	mov    DWORD PTR [ecx],eax
1002236e:	xor    eax,eax
10022370:	ret    0x8
10022373:	mov    eax,DWORD PTR [esp+0x4]
10022377:	add    eax,0x10
1002237a:	call   0x10011efe
1002237f:	mov    ecx,DWORD PTR [esp+0x8]
10022383:	mov    DWORD PTR [ecx],eax
10022385:	xor    eax,eax
10022387:	ret    0x8
1002238a:	mov    eax,DWORD PTR [esp+0x4]
1002238e:	add    eax,0x14
10022391:	call   0x10011efe
10022396:	mov    ecx,DWORD PTR [esp+0x8]
1002239a:	mov    DWORD PTR [ecx],eax
1002239c:	xor    eax,eax
1002239e:	ret    0x8
100223a1:	mov    eax,DWORD PTR [esp+0x4]
100223a5:	add    eax,0x18
100223a8:	call   0x10011efe
100223ad:	mov    ecx,DWORD PTR [esp+0x8]
100223b1:	mov    DWORD PTR [ecx],eax
100223b3:	xor    eax,eax
100223b5:	ret    0x8
100223b8:	mov    eax,DWORD PTR [esp+0x4]
100223bc:	mov    eax,DWORD PTR [eax+0x1c]
100223bf:	mov    ecx,DWORD PTR [esp+0x8]
100223c3:	mov    DWORD PTR [ecx],eax
100223c5:	xor    eax,eax
100223c7:	ret    0x8
100223ca:	mov    WORD PTR [esi],0x8
100223cf:	mov    eax,DWORD PTR [eax]
100223d1:	test   eax,eax
100223d3:	push   edi
100223d4:	je     0x100223da
100223d6:	mov    edi,DWORD PTR [eax]
100223d8:	jmp    0x100223dc
100223da:	xor    edi,edi
100223dc:	test   edi,edi
100223de:	jne    0x100223e5
100223e0:	and    DWORD PTR [esi+0x8],edi
100223e3:	jmp    0x10022405
100223e5:	push   edi
100223e6:	call   DWORD PTR ds:0x100662a0
100223ec:	push   eax
100223ed:	push   edi
100223ee:	call   DWORD PTR ds:0x100662a8
100223f4:	test   eax,eax
100223f6:	mov    DWORD PTR [esi+0x8],eax
100223f9:	jne    0x10022405
100223fb:	push   0x8007000e
10022400:	call   0x10050b90
10022405:	mov    eax,esi
10022407:	pop    edi
10022408:	ret    
10022409:	test   ecx,ecx
1002240b:	jne    0x1002240f
1002240d:	mov    ecx,eax
1002240f:	cmp    eax,ecx
10022411:	jne    0x10022418
10022413:	cmp    dx,WORD PTR [eax]
10022416:	je     0x1002242d
10022418:	push   edx
10022419:	push   0x0
1002241b:	push   ecx
1002241c:	push   eax
1002241d:	call   DWORD PTR ds:0x1006627c
10022423:	test   eax,eax
10022425:	jge    0x1002242d
10022427:	push   eax
10022428:	call   0x10050b90
1002242d:	ret    
1002242e:	push   0x14
10022430:	mov    eax,0x1005f7c1
10022435:	call   0x10059a35
1002243a:	and    DWORD PTR [edi],0x0
1002243d:	cmp    WORD PTR [esi],0x8
10022441:	jne    0x1002244f
10022443:	push   DWORD PTR [esi+0x8]
10022446:	mov    ecx,edi
10022448:	call   0x10010e5c
1002244d:	jmp    0x1002247f
1002244f:	lea    eax,[ebp-0x20]
10022452:	push   eax
10022453:	call   DWORD PTR ds:0x1006628c
10022459:	and    DWORD PTR [ebp-0x4],0x0
1002245d:	mov    ecx,esi
1002245f:	mov    dx,0x8
10022463:	lea    eax,[ebp-0x20]
10022466:	call   0x10022409
1002246b:	push   DWORD PTR [ebp-0x18]
1002246e:	mov    ecx,edi
10022470:	call   0x10010e5c
10022475:	lea    eax,[ebp-0x20]
10022478:	push   eax
10022479:	call   DWORD PTR ds:0x10066294
1002247f:	mov    eax,edi
10022481:	call   0x10059b0d
10022486:	ret    
10022487:	push   0x4
10022489:	mov    eax,0x10060b4e
1002248e:	call   0x10059a35
10022493:	xor    eax,eax
10022495:	lea    edi,[esi+0x8]
10022498:	mov    DWORD PTR [esi+0x28],eax
1002249b:	mov    DWORD PTR [ebp-0x10],edi
1002249e:	mov    DWORD PTR [edi+0x8],eax
100224a1:	mov    DWORD PTR [ebp-0x4],eax
100224a4:	mov    DWORD PTR [edi+0xc],eax
100224a7:	mov    BYTE PTR [ebp-0x4],0x1
100224ab:	call   0x1002451f
100224b0:	lea    ecx,[edi+0x14]
100224b3:	mov    DWORD PTR [ecx],eax
100224b5:	mov    BYTE PTR [eax+0x2d],0x1
100224b9:	mov    eax,DWORD PTR [ecx]
100224bb:	mov    DWORD PTR [eax+0x4],eax
100224be:	mov    eax,DWORD PTR [ecx]
100224c0:	mov    DWORD PTR [eax],eax
100224c2:	mov    ecx,DWORD PTR [ecx]
100224c4:	mov    DWORD PTR [ecx+0x8],ecx
100224c7:	and    DWORD PTR [edi+0x18],0x0
100224cb:	mov    DWORD PTR [esi],0x100715a4
100224d1:	mov    DWORD PTR [esi+0x4],0x100715b4
100224d8:	mov    DWORD PTR [edi],0x100715c8
100224de:	mov    DWORD PTR [esi+0xc],0x10071600
100224e5:	mov    DWORD PTR [esi+0x24],0x10071618
100224ec:	mov    eax,esi
100224ee:	call   0x10059b0d
100224f3:	ret    
100224f4:	push   ebp
100224f5:	mov    ebp,esp
100224f7:	sub    esp,0x34
100224fa:	mov    eax,ds:0x1007e030
100224ff:	xor    eax,ebp
10022501:	mov    DWORD PTR [ebp-0x4],eax
10022504:	push   ebx
10022505:	push   esi
10022506:	mov    esi,DWORD PTR [ebp+0xc]
10022509:	mov    eax,DWORD PTR [esi]
1002250b:	push   edi
1002250c:	lea    ecx,[ebp-0x34]
1002250f:	push   ecx
10022510:	push   esi
10022511:	call   DWORD PTR [eax+0xc]
10022514:	mov    eax,DWORD PTR [esi]
10022516:	lea    ecx,[ebp-0x10]
10022519:	push   ecx
1002251a:	lea    ecx,[ebp-0x8]
1002251d:	push   ecx
1002251e:	lea    ecx,[ebp-0x14]
10022521:	push   ecx
10022522:	push   esi
10022523:	call   DWORD PTR [eax+0x10]
10022526:	call   DWORD PTR ds:0x1007efec
1002252c:	mov    ebx,eax
1002252e:	mov    eax,DWORD PTR [ebp-0x2c]
10022531:	test   eax,eax
10022533:	mov    DWORD PTR [ebp-0xc],eax
10022536:	je     0x10022547
10022538:	push   eax
10022539:	call   DWORD PTR ds:0x100660c4
1002253f:	inc    eax
10022540:	cmp    eax,0x3fffffff
10022545:	jle    0x1002254b
10022547:	xor    eax,eax
10022549:	jmp    0x10022561
1002254b:	lea    edi,[eax+eax*1]
1002254e:	mov    eax,edi
10022550:	call   0x1004b6f0
10022555:	mov    esi,esp
10022557:	push   ebx
10022558:	push   edi
10022559:	push   DWORD PTR [ebp-0xc]
1002255c:	call   0x10002434
10022561:	push   DWORD PTR [ebp-0x10]
10022564:	push   DWORD PTR [ebp-0x8]
10022567:	push   eax
10022568:	call   0x10002080
1002256d:	add    esp,0xc
10022570:	xor    eax,eax
10022572:	lea    esp,[ebp-0x40]
10022575:	pop    edi
10022576:	pop    esi
10022577:	pop    ebx
10022578:	mov    ecx,DWORD PTR [ebp-0x4]
1002257b:	xor    ecx,ebp
1002257d:	call   0x10042e97
10022582:	leave  
10022583:	ret    0x8
10022586:	push   esi
10022587:	mov    esi,ecx
10022589:	neg    ecx
1002258b:	lea    eax,[esi+0x8]
1002258e:	sbb    ecx,ecx
10022590:	and    ecx,eax
10022592:	call   0x10023ef0
10022597:	test   BYTE PTR [esp+0x8],0x1
1002259c:	je     0x100225a5
1002259e:	push   esi
1002259f:	call   0x10042e92
100225a4:	pop    ecx
100225a5:	mov    eax,esi
100225a7:	pop    esi
100225a8:	ret    0x4
100225ab:	push   ebp
100225ac:	mov    ebp,esp
100225ae:	and    esp,0xfffffff8
100225b1:	push   0xffffffff
100225b3:	push   0x10060b1d
100225b8:	mov    eax,fs:0x0
100225be:	push   eax
100225bf:	sub    esp,0x48
100225c2:	push   ebx
100225c3:	push   esi
100225c4:	push   edi
100225c5:	mov    eax,ds:0x1007e030
100225ca:	xor    eax,esp
100225cc:	push   eax
100225cd:	lea    eax,[esp+0x58]
100225d1:	mov    fs:0x0,eax
100225d7:	mov    ebx,DWORD PTR [ebp+0x8]
100225da:	mov    DWORD PTR [esp+0x18],ebx
100225de:	and    DWORD PTR [esp+0x60],0x0
100225e3:	lea    eax,[esp+0x1c]
100225e7:	push   eax
100225e8:	lea    eax,[esp+0x24]
100225ec:	push   eax
100225ed:	push   DWORD PTR [ebx+0x4]
100225f0:	call   0x1001ee43
100225f5:	add    esp,0xc
100225f8:	test   al,al
100225fa:	je     0x1002273a
10022600:	push   0x1388
10022605:	jmp    0x10022672
10022607:	mov    eax,DWORD PTR [ebx+0x4]
1002260a:	and    DWORD PTR [esp+0x10],0x0
1002260f:	push   0xffffffff
10022611:	push   DWORD PTR ds:0x10080f50
10022617:	mov    DWORD PTR [esp+0x1c],eax
1002261b:	call   DWORD PTR ds:0x10066084
10022621:	test   eax,eax
10022623:	jne    0x1002266e
10022625:	lea    eax,[esp+0x14]
10022629:	push   eax
1002262a:	lea    eax,[esp+0x30]
1002262e:	push   eax
1002262f:	call   0x10020826
10022634:	mov    eax,ds:0x10080f58
10022639:	lea    edi,[esp+0x24]
1002263d:	lea    esi,[esp+0x2c]
10022641:	mov    DWORD PTR [esp+0x28],eax
10022645:	mov    DWORD PTR [esp+0x24],0x10080f54
1002264d:	call   0x10004ada
10022652:	test   al,al
10022654:	jne    0x10022662
10022656:	call   0x1002088e
1002265b:	mov    eax,DWORD PTR [eax+0x4]
1002265e:	mov    DWORD PTR [esp+0x10],eax
10022662:	push   DWORD PTR ds:0x10080f50
10022668:	call   DWORD PTR ds:0x10066094
1002266e:	push   DWORD PTR [esp+0x10]
10022672:	push   0x0
10022674:	lea    eax,[esp+0x24]
10022678:	push   eax
10022679:	push   0x2
1002267b:	call   DWORD PTR ds:0x100660e8
10022681:	mov    esi,eax
10022683:	call   DWORD PTR ds:0x100660cc
10022689:	cmp    esi,0x1
1002268c:	je     0x10022607
10022692:	cmp    esi,0x102
10022698:	jne    0x10022728
1002269e:	and    DWORD PTR [esp+0x10],0x0
100226a3:	mov    BYTE PTR [esp+0x60],0x1
100226a8:	mov    eax,DWORD PTR [ebx]
100226aa:	mov    ecx,DWORD PTR [eax]
100226ac:	lea    edx,[esp+0x10]
100226b0:	push   edx
100226b1:	push   eax
100226b2:	call   DWORD PTR [ecx+0x4c]
100226b5:	test   eax,eax
100226b7:	jl     0x10022715
100226b9:	push   0x7
100226bb:	pop    ecx
100226bc:	xor    eax,eax
100226be:	lea    edi,[esp+0x36]
100226c2:	rep stos DWORD PTR es:[edi],eax
100226c4:	stos   WORD PTR es:[edi],ax
100226c6:	push   0x1006cd08
100226cb:	lea    edi,[esp+0x18]
100226cf:	mov    WORD PTR [esp+0x38],0x3e8
100226d6:	call   0x10002467
100226db:	mov    esi,edi
100226dd:	mov    BYTE PTR [esp+0x60],0x2
100226e2:	call   0x10010ec5
100226e7:	mov    eax,DWORD PTR [eax]
100226e9:	push   0x0
100226eb:	lea    edx,[esp+0x38]
100226ef:	mov    DWORD PTR [esp+0x3c],eax
100226f3:	mov    eax,DWORD PTR [esp+0x14]
100226f7:	mov    ecx,DWORD PTR [eax]
100226f9:	push   edx
100226fa:	push   DWORD PTR [ebx+0x4]
100226fd:	push   eax
100226fe:	call   DWORD PTR [ecx+0x38]
10022701:	mov    esi,eax
10022703:	call   0x100025c2
10022708:	test   esi,esi
1002270a:	jl     0x10022715
1002270c:	push   DWORD PTR [ebx+0x4]
1002270f:	call   0x1001ef77
10022714:	pop    ecx
10022715:	mov    BYTE PTR [esp+0x60],0x0
1002271a:	mov    eax,DWORD PTR [esp+0x10]
1002271e:	test   eax,eax
10022720:	je     0x10022728
10022722:	mov    ecx,DWORD PTR [eax]
10022724:	push   eax
10022725:	call   DWORD PTR [ecx+0x8]
10022728:	xor    esi,esi
1002272a:	push   DWORD PTR [esp+esi*4+0x1c]
1002272e:	call   DWORD PTR ds:0x10066070
10022734:	inc    esi
10022735:	cmp    esi,0x2
10022738:	jne    0x1002272a
1002273a:	or     DWORD PTR [esp+0x60],0xffffffff
1002273f:	mov    eax,DWORD PTR [ebx]
10022741:	test   eax,eax
10022743:	je     0x1002274b
10022745:	mov    ecx,DWORD PTR [eax]
10022747:	push   eax
10022748:	call   DWORD PTR [ecx+0x8]
1002274b:	push   ebx
1002274c:	call   0x10042e92
10022751:	xor    eax,eax
10022753:	pop    ecx
10022754:	mov    ecx,DWORD PTR [esp+0x58]
10022758:	mov    DWORD PTR fs:0x0,ecx
1002275f:	pop    ecx
10022760:	pop    edi
10022761:	pop    esi
10022762:	pop    ebx
10022763:	mov    esp,ebp
10022765:	pop    ebp
10022766:	ret    0x4
10022769:	push   0x4c
1002276b:	mov    eax,0x10063503
10022770:	call   0x10059a68
10022775:	test   BYTE PTR ds:0x10081430,0x1
1002277c:	jne    0x10022797
1002277e:	or     DWORD PTR ds:0x10081430,0x1
10022785:	and    DWORD PTR ds:0x1008142c,0x0
1002278c:	push   0x100657f7
10022791:	call   0x10043274
10022796:	pop    ecx
10022797:	push   0x1f4
1002279c:	push   DWORD PTR ds:0x10080f60
100227a2:	call   DWORD PTR ds:0x10066084
100227a8:	test   eax,eax
100227aa:	jne    0x10022859
100227b0:	xor    ebx,ebx
100227b2:	mov    DWORD PTR [ebp-0x4],ebx
100227b5:	cmp    DWORD PTR ds:0x1008142c,ebx
100227bb:	jne    0x10022849
100227c1:	push   0x2c
100227c3:	call   0x1004349e
100227c8:	mov    edi,eax
100227ca:	cmp    edi,ebx
100227cc:	pop    ecx
100227cd:	mov    esi,0x100228f3
100227d2:	je     0x100227e9
100227d4:	push   esi
100227d5:	push   0x100228e2
100227da:	push   0x2
100227dc:	push   0x14
100227de:	lea    eax,[edi+0x4]
100227e1:	push   eax
100227e2:	call   0x10045df8
100227e7:	mov    ebx,edi
100227e9:	xor    eax,eax
100227eb:	push   eax
100227ec:	push   eax
100227ed:	push   ebx
100227ee:	push   0x10023d45
100227f3:	push   eax
100227f4:	push   eax
100227f5:	mov    edi,ebx
100227f7:	call   DWORD PTR ds:0x10066098
100227fd:	test   eax,eax
100227ff:	je     0x10022830
10022801:	mov    eax,ds:0x1008142c
10022806:	xor    edi,edi
10022808:	cmp    ebx,eax
1002280a:	je     0x1002282a
1002280c:	test   eax,eax
1002280e:	mov    DWORD PTR [ebp-0x14],eax
10022811:	je     0x1002282a
10022813:	push   esi
10022814:	push   0x2
10022816:	push   0x14
10022818:	add    eax,0x4
1002281b:	push   eax
1002281c:	call   0x100430f9
10022821:	push   DWORD PTR [ebp-0x14]
10022824:	call   0x10042e92
10022829:	pop    ecx
1002282a:	mov    DWORD PTR ds:0x1008142c,ebx
10022830:	test   edi,edi
10022832:	je     0x10022849
10022834:	push   esi
10022835:	push   0x2
10022837:	push   0x14
10022839:	lea    eax,[edi+0x4]
1002283c:	push   eax
1002283d:	call   0x100430f9
10022842:	push   edi
10022843:	call   0x10042e92
10022848:	pop    ecx
10022849:	push   DWORD PTR ds:0x10080f60
1002284f:	call   DWORD PTR ds:0x10066094
10022855:	or     DWORD PTR [ebp-0x4],0xffffffff
10022859:	mov    eax,ds:0x1008142c
1002285e:	test   eax,eax
10022860:	jne    0x100228dc
10022862:	push   0x31186b6a
10022867:	push   0x10070ae8
1002286c:	call   0x10004246
10022871:	push   0x20e25928
10022876:	push   eax
10022877:	call   0x10004246
1002287c:	push   0x35158a32
10022881:	push   eax
10022882:	call   0x10004246
10022887:	push   eax
10022888:	push   0x16
1002288a:	push   0x10070b28
1002288f:	call   0x10004258
10022894:	add    esp,0x24
10022897:	push   eax
10022898:	lea    ecx,[ebp-0x30]
1002289b:	call   0x100011cd
100228a0:	lea    eax,[ebp-0x30]
100228a3:	push   eax
100228a4:	lea    eax,[ebp-0x58]
100228a7:	push   eax
100228a8:	mov    DWORD PTR [ebp-0x4],0x2
100228af:	call   0x100026fe
100228b4:	push   0x10074d64
100228b9:	lea    eax,[ebp-0x58]
100228bc:	push   eax
100228bd:	jmp    0x100228d7
100228bf:	push   0x4
100228c1:	call   0x10037980
100228c6:	pop    ecx
100228c7:	push   DWORD PTR ds:0x10080f60
100228cd:	call   DWORD PTR ds:0x10066094
100228d3:	push   0x0
100228d5:	push   0x0
100228d7:	call   0x100479b4
100228dc:	call   0x10059b0d
100228e1:	ret    
100228e2:	push   esi
100228e3:	mov    esi,ecx
100228e5:	mov    ecx,0x10080a74
100228ea:	call   0x10002151
100228ef:	mov    eax,esi
100228f1:	pop    esi
100228f2:	ret    
100228f3:	mov    eax,DWORD PTR [ecx]
100228f5:	sub    eax,0x10
100228f8:	jmp    0x10002081
100228fd:	push   0x50
100228ff:	mov    eax,0x100629bd
10022904:	call   0x10059a68
10022909:	xor    esi,esi
1002290b:	mov    DWORD PTR [ebp-0x18],esi
1002290e:	mov    DWORD PTR [ebp-0x4],esi
10022911:	push   DWORD PTR ds:0x10080f6c
10022917:	xor    eax,eax
10022919:	lea    edi,[ebp-0x38]
1002291c:	mov    DWORD PTR [ebp-0x3c],esi
1002291f:	stos   DWORD PTR es:[edi],eax
10022920:	lea    edi,[ebp-0x40]
10022923:	mov    DWORD PTR [ebp-0x44],esi
10022926:	stos   DWORD PTR es:[edi],eax
10022927:	call   DWORD PTR ds:0x10066110
1002292d:	mov    eax,ds:0x10080fa0
10022932:	mov    DWORD PTR [ebp-0x4c],eax
10022935:	mov    eax,ds:0x10080f64
1002293a:	push   0xffffffff
1002293c:	mov    DWORD PTR [ebp-0x48],eax
1002293f:	push   esi
10022940:	lea    eax,[ebp-0x4c]
10022943:	push   eax
10022944:	push   0x2
10022946:	call   DWORD PTR ds:0x100660e8
1002294c:	cmp    eax,esi
1002294e:	jne    0x10022a7b
10022954:	push   0x1f4
10022959:	push   DWORD PTR ds:0x10080f6c
1002295f:	call   DWORD PTR ds:0x10066084
10022965:	test   eax,eax
10022967:	je     0x10022a84
1002296d:	mov    BYTE PTR [ebp-0x4],0x1
10022971:	mov    ebx,DWORD PTR [ebp-0x44]
10022974:	mov    edi,DWORD PTR [ebp-0x40]
10022977:	add    ebx,0x989680
1002297d:	adc    edi,esi
1002297f:	call   0x1002fa00
10022984:	cmp    edi,edx
10022986:	ja     0x10022a51
1002298c:	jb     0x10022996
1002298e:	cmp    ebx,eax
10022990:	jae    0x10022a51
10022996:	lea    eax,[ebp-0x2c]
10022999:	push   esi
1002299a:	push   eax
1002299b:	call   0x100028aa
100229a0:	pop    ecx
100229a1:	pop    ecx
100229a2:	mov    ecx,DWORD PTR [eax]
100229a4:	mov    ebx,ecx
100229a6:	mov    DWORD PTR [eax],esi
100229a8:	mov    DWORD PTR [ebp-0x28],ebx
100229ab:	lea    eax,[ebp-0x2c]
100229ae:	mov    BYTE PTR [ebp-0x4],0x2
100229b2:	call   0x1000421f
100229b7:	push   ebx
100229b8:	call   0x10002928
100229bd:	test   al,al
100229bf:	je     0x100229dd
100229c1:	mov    eax,DWORD PTR [ebx]
100229c3:	push   0x1
100229c5:	push   eax
100229c6:	lea    ecx,[ebp-0x54]
100229c9:	call   0x10035ac0
100229ce:	mov    ecx,DWORD PTR [ebp-0x3c]
100229d1:	cmp    ecx,DWORD PTR [eax]
100229d3:	jne    0x100229dd
100229d5:	mov    ecx,DWORD PTR [ebp-0x38]
100229d8:	cmp    ecx,DWORD PTR [eax+0x4]
100229db:	je     0x10022a3e
100229dd:	cmp    DWORD PTR [ebp-0x18],esi
100229e0:	mov    DWORD PTR [ebp-0x3c],esi
100229e3:	mov    DWORD PTR [ebp-0x38],esi
100229e6:	je     0x100229f9
100229e8:	push   0x10070254
100229ed:	xor    eax,eax
100229ef:	lea    esi,[ebp-0x18]
100229f2:	call   0x100102e4
100229f7:	xor    esi,esi
100229f9:	push   ebx
100229fa:	lea    eax,[ebp-0x30]
100229fd:	push   eax
100229fe:	call   0x10023302
10022a03:	mov    edi,DWORD PTR [eax]
10022a05:	cmp    DWORD PTR [ebp-0x18],edi
10022a08:	je     0x10022a14
10022a0a:	lea    esi,[ebp-0x18]
10022a0d:	call   0x1000763b
10022a12:	xor    esi,esi
10022a14:	mov    eax,DWORD PTR [ebp-0x30]
10022a17:	cmp    eax,esi
10022a19:	je     0x10022a21
10022a1b:	mov    ecx,DWORD PTR [eax]
10022a1d:	push   eax
10022a1e:	call   DWORD PTR [ecx+0x8]
10022a21:	cmp    DWORD PTR [ebp-0x18],esi
10022a24:	je     0x10022a3e
10022a26:	mov    ebx,DWORD PTR [ebx]
10022a28:	push   0x1
10022a2a:	push   ebx
10022a2b:	lea    ecx,[ebp-0x5c]
10022a2e:	call   0x10035ac0
10022a33:	mov    ecx,DWORD PTR [eax]
10022a35:	mov    eax,DWORD PTR [eax+0x4]
10022a38:	mov    DWORD PTR [ebp-0x3c],ecx
10022a3b:	mov    DWORD PTR [ebp-0x38],eax
10022a3e:	call   0x1002fa00
10022a43:	mov    DWORD PTR [ebp-0x44],eax
10022a46:	lea    eax,[ebp-0x28]
10022a49:	mov    DWORD PTR [ebp-0x40],edx
10022a4c:	call   0x1000421f
10022a51:	mov    DWORD PTR [ebp-0x4],esi
10022a54:	cmp    DWORD PTR [ebp-0x18],esi
10022a57:	jne    0x10022ac1
10022a59:	mov    ecx,DWORD PTR [ebp+0x8]
10022a5c:	xor    edx,edx
10022a5e:	cmp    DWORD PTR [ecx],esi
10022a60:	je     0x10022a70
10022a62:	lea    eax,[ecx+0x14]
10022a65:	mov    BYTE PTR [eax],0x0
10022a68:	inc    edx
10022a69:	add    eax,0x14
10022a6c:	cmp    edx,DWORD PTR [ecx]
10022a6e:	jne    0x10022a65
10022a70:	push   DWORD PTR ds:0x10080f68
10022a76:	jmp    0x10022927
10022a7b:	cmp    eax,0x1
10022a7e:	je     0x1002296d
10022a84:	or     DWORD PTR [ebp-0x4],0xffffffff
10022a88:	mov    eax,DWORD PTR [ebp-0x18]
10022a8b:	cmp    eax,esi
10022a8d:	je     0x10022a95
10022a8f:	mov    ecx,DWORD PTR [eax]
10022a91:	push   eax
10022a92:	call   DWORD PTR [ecx+0x8]
10022a95:	call   0x10059b0d
10022a9a:	ret    0x4
10022a9d:	xor    eax,eax
10022a9f:	cmp    DWORD PTR [ebp-0x18],eax
10022aa2:	mov    DWORD PTR [ebp-0x3c],eax
10022aa5:	mov    DWORD PTR [ebp-0x38],eax
10022aa8:	je     0x10022ab7
10022aaa:	push   0x10070254
10022aaf:	lea    esi,[ebp-0x18]
10022ab2:	call   0x100102e4
10022ab7:	mov    eax,0x10022abd
10022abc:	ret    
10022abd:	xor    esi,esi
10022abf:	jmp    0x10022a54
10022ac1:	call   DWORD PTR ds:0x10066118
10022ac7:	mov    ebx,DWORD PTR [ebp+0x8]
10022aca:	cmp    DWORD PTR [ebx],esi
10022acc:	mov    DWORD PTR [ebp-0x20],eax
10022acf:	mov    DWORD PTR [ebp-0x24],esi
10022ad2:	je     0x10022a70
10022ad4:	add    ebx,0xc
10022ad7:	jmp    0x10022adb
10022ad9:	xor    esi,esi
10022adb:	push   0x8
10022add:	call   0x1004349e
10022ae2:	cmp    eax,esi
10022ae4:	pop    ecx
10022ae5:	je     0x10022aeb
10022ae7:	mov    DWORD PTR [eax],esi
10022ae9:	mov    esi,eax
10022aeb:	mov    DWORD PTR [ebp-0x28],esi
10022aee:	mov    edi,DWORD PTR [ebp-0x18]
10022af1:	cmp    DWORD PTR [esi],edi
10022af3:	je     0x10022afa
10022af5:	call   0x1000763b
10022afa:	call   DWORD PTR ds:0x10066160
10022b00:	xor    edi,edi
10022b02:	push   edi
10022b03:	push   edi
10022b04:	push   esi
10022b05:	push   0x100225ab
10022b0a:	push   edi
10022b0b:	push   edi
10022b0c:	mov    DWORD PTR [esi+0x4],eax
10022b0f:	call   DWORD PTR ds:0x10066098
10022b15:	mov    DWORD PTR [ebp-0x1c],eax
10022b18:	cmp    eax,edi
10022b1a:	mov    BYTE PTR [ebp-0x4],0x5
10022b1e:	je     0x10022b23
10022b20:	mov    DWORD PTR [ebp-0x28],edi
10022b23:	push   DWORD PTR [ebx+0x4]
10022b26:	mov    eax,DWORD PTR [ebp-0x18]
10022b29:	push   DWORD PTR [ebx]
10022b2b:	mov    edi,DWORD PTR [eax]
10022b2d:	push   DWORD PTR [ebx-0x4]
10022b30:	lea    esi,[ebx-0x8]
10022b33:	mov    DWORD PTR [ebp-0x34],eax
10022b36:	add    edi,0x34
10022b39:	call   0x10004178
10022b3e:	push   eax
10022b3f:	push   DWORD PTR [ebp-0x34]
10022b42:	call   DWORD PTR [edi]
10022b44:	test   eax,eax
10022b46:	setge  al
10022b49:	mov    BYTE PTR [ebx+0x8],al
10022b4c:	call   DWORD PTR ds:0x10066118
10022b52:	mov    edi,eax
10022b54:	call   DWORD PTR ds:0x10066160
10022b5a:	push   eax
10022b5b:	call   0x1001efd5
10022b60:	test   al,al
10022b62:	pop    ecx
10022b63:	je     0x10022b8e
10022b65:	push   0xe
10022b67:	call   0x10037980
10022b6c:	mov    eax,edi
10022b6e:	sub    eax,DWORD PTR [ebp-0x20]
10022b71:	pop    ecx
10022b72:	push   eax
10022b73:	call   0x10004178
10022b78:	push   eax
10022b79:	call   0x10002080
10022b7e:	xor    eax,eax
10022b80:	pop    ecx
10022b81:	pop    ecx
10022b82:	mov    DWORD PTR [ebp-0x3c],eax
10022b85:	mov    DWORD PTR [ebp-0x38],eax
10022b88:	mov    DWORD PTR [ebp-0x44],eax
10022b8b:	mov    DWORD PTR [ebp-0x40],eax
10022b8e:	cmp    BYTE PTR [ebx+0x8],0x0
10022b92:	je     0x10022bf2
10022b94:	mov    eax,edi
10022b96:	sub    eax,DWORD PTR [ebp-0x20]
10022b99:	push   eax
10022b9a:	call   0x10004178
10022b9f:	push   eax
10022ba0:	call   0x10002080
10022ba5:	cmp    DWORD PTR [ebp-0x1c],0x0
10022ba9:	pop    ecx
10022baa:	pop    ecx
10022bab:	mov    DWORD PTR [ebp-0x20],edi
10022bae:	je     0x10022bb9
10022bb0:	push   DWORD PTR [ebp-0x1c]
10022bb3:	call   DWORD PTR ds:0x10066070
10022bb9:	mov    BYTE PTR [ebp-0x4],0x0
10022bbd:	mov    esi,DWORD PTR [ebp-0x28]
10022bc0:	test   esi,esi
10022bc2:	je     0x10022bd7
10022bc4:	mov    eax,DWORD PTR [esi]
10022bc6:	test   eax,eax
10022bc8:	je     0x10022bd0
10022bca:	mov    ecx,DWORD PTR [eax]
10022bcc:	push   eax
10022bcd:	call   DWORD PTR [ecx+0x8]
10022bd0:	push   esi
10022bd1:	call   0x10042e92
10022bd6:	pop    ecx
10022bd7:	inc    DWORD PTR [ebp-0x24]
10022bda:	mov    eax,DWORD PTR [ebp+0x8]
10022bdd:	mov    ecx,DWORD PTR [ebp-0x24]
10022be0:	add    ebx,0x14
10022be3:	cmp    ecx,DWORD PTR [eax]
10022be5:	jne    0x10022ad9
10022beb:	xor    esi,esi
10022bed:	jmp    0x10022a70
10022bf2:	cmp    DWORD PTR [ebp-0x1c],0x0
10022bf6:	je     0x10022c01
10022bf8:	push   DWORD PTR [ebp-0x1c]
10022bfb:	call   DWORD PTR ds:0x10066070
10022c01:	mov    BYTE PTR [ebp-0x4],0x0
10022c05:	mov    esi,DWORD PTR [ebp-0x28]
10022c08:	test   esi,esi
10022c0a:	je     0x10022beb
10022c0c:	mov    eax,DWORD PTR [esi]
10022c0e:	test   eax,eax
10022c10:	je     0x10022c18
10022c12:	mov    ecx,DWORD PTR [eax]
10022c14:	push   eax
10022c15:	call   DWORD PTR [ecx+0x8]
10022c18:	push   esi
10022c19:	call   0x10042e92
10022c1e:	pop    ecx
10022c1f:	jmp    0x10022beb
10022c21:	push   0xa4
10022c26:	mov    eax,0x1006297f
10022c2b:	call   0x10059a68
10022c30:	push   0x1f4
10022c35:	push   DWORD PTR ds:0x10080f6c
10022c3b:	call   DWORD PTR ds:0x10066084
10022c41:	test   eax,eax
10022c43:	je     0x10022c54
10022c45:	push   0xf
10022c47:	call   0x10037980
10022c4c:	pop    ecx
10022c4d:	xor    al,al
10022c4f:	jmp    0x10022ee5
10022c54:	xor    esi,esi
10022c56:	mov    DWORD PTR [ebp-0x4],esi
10022c59:	mov    BYTE PTR [ebp-0x11],0x0
10022c5d:	mov    DWORD PTR [ebp-0x18],esi
10022c60:	cmp    DWORD PTR [ebp+0x10],esi
10022c63:	je     0x10022c92
10022c65:	lea    eax,[ebp-0x1c]
10022c68:	push   eax
10022c69:	call   0x100245db
10022c6e:	test   eax,eax
10022c70:	jl     0x10022ed6
10022c76:	mov    edi,DWORD PTR [ebp-0x1c]
10022c79:	mov    eax,DWORD PTR [ebp+0x10]
10022c7c:	mov    ecx,edi
10022c7e:	call   0x10010894
10022c83:	cmp    edi,esi
10022c85:	je     0x10022c92
10022c87:	lea    esi,[ebp-0x18]
10022c8a:	call   0x1000763b
10022c8f:	mov    esi,DWORD PTR [ebp-0x18]
10022c92:	mov    eax,DWORD PTR [ebp+0xc]
10022c95:	mov    WORD PTR [ebp-0x60],0x16
10022c9b:	mov    DWORD PTR [ebp-0x58],eax
10022c9e:	lea    eax,[ebp-0x50]
10022ca1:	push   eax
10022ca2:	call   DWORD PTR ds:0x1006628c
10022ca8:	mov    BYTE PTR [ebp-0x4],0x3
10022cac:	cmp    DWORD PTR [ebp+0x10],0x0
10022cb0:	je     0x10022cf3
10022cb2:	test   esi,esi
10022cb4:	mov    WORD PTR [ebp-0x70],0x9
10022cba:	mov    DWORD PTR [ebp-0x68],esi
10022cbd:	je     0x10022cc5
10022cbf:	mov    eax,DWORD PTR [esi]
10022cc1:	push   esi
10022cc2:	call   DWORD PTR [eax+0x4]
10022cc5:	lea    eax,[ebp-0x70]
10022cc8:	push   eax
10022cc9:	lea    eax,[ebp-0x50]
10022ccc:	push   eax
10022ccd:	mov    BYTE PTR [ebp-0x4],0x4
10022cd1:	call   DWORD PTR ds:0x10066280
10022cd7:	test   eax,eax
10022cd9:	jge    0x10022ce1
10022cdb:	push   eax
10022cdc:	call   0x10050b90
10022ce1:	lea    eax,[ebp-0x70]
10022ce4:	mov    BYTE PTR [ebp-0x4],0x3
10022ce8:	mov    ebx,DWORD PTR ds:0x10066294
10022cee:	push   eax
10022cef:	call   ebx
10022cf1:	jmp    0x10022cf9
10022cf3:	mov    ebx,DWORD PTR ds:0x10066294
10022cf9:	mov    eax,DWORD PTR [ebp+0x14]
10022cfc:	cmp    DWORD PTR [eax+0x18],0x10
10022d00:	jb     0x10022d07
10022d02:	mov    eax,DWORD PTR [eax+0x4]
10022d05:	jmp    0x10022d0a
10022d07:	add    eax,0x4
10022d0a:	push   eax
10022d0b:	lea    edi,[ebp+0x10]
10022d0e:	call   0x10002467
10022d13:	lea    esi,[ebp-0x80]
10022d16:	mov    BYTE PTR [ebp-0x4],0x5
10022d1a:	call   0x100223ca
10022d1f:	call   0x100025c2
10022d24:	mov    esi,DWORD PTR ds:0x1006628c
10022d2a:	lea    eax,[ebp-0x40]
10022d2d:	push   eax
10022d2e:	call   esi
10022d30:	lea    eax,[ebp-0x30]
10022d33:	push   eax
10022d34:	call   esi
10022d36:	mov    BYTE PTR [ebp-0x4],0x9
10022d3a:	lea    esi,[ebp-0x60]
10022d3d:	lea    edi,[ebp-0x90]
10022d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022d45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022d47:	lea    esi,[ebp-0x50]
10022d4a:	lea    edi,[ebp-0xa0]
10022d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022d51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022d53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022d54:	lea    esi,[ebp-0x80]
10022d57:	lea    edi,[ebp-0xb0]
10022d5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022d60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022d61:	mov    esi,DWORD PTR [ebp+0x8]
10022d64:	push   0x6a002b76
10022d69:	push   0x10070b40
10022d6e:	mov    DWORD PTR [esi],0x2
10022d74:	call   0x10004246
10022d79:	pop    ecx
10022d7a:	pop    ecx
10022d7b:	push   0x354a70b0
10022d80:	push   eax
10022d81:	call   0x10004246
10022d86:	pop    ecx
10022d87:	pop    ecx
10022d88:	push   0x273e8098
10022d8d:	push   eax
10022d8e:	call   0x10004246
10022d93:	pop    ecx
10022d94:	pop    ecx
10022d95:	push   0x7f833800
10022d9a:	push   eax
10022d9b:	call   0x10004246
10022da0:	pop    ecx
10022da1:	pop    ecx
10022da2:	push   0x122b7820
10022da7:	push   eax
10022da8:	call   0x10004246
10022dad:	pop    ecx
10022dae:	pop    ecx
10022daf:	push   eax
10022db0:	push   0xb
10022db2:	push   0x10070b80
10022db7:	call   0x10004417
10022dbc:	add    esp,0xc
10022dbf:	push   eax
10022dc0:	lea    eax,[esi+0x4]
10022dc3:	push   eax
10022dc4:	call   0x1000239e
10022dc9:	lea    eax,[ebp-0xb0]
10022dcf:	mov    DWORD PTR [esi+0x8],eax
10022dd2:	lea    eax,[ebp-0x40]
10022dd5:	push   0x10070b98
10022dda:	mov    DWORD PTR [esi+0xc],0x3
10022de1:	mov    DWORD PTR [esi+0x10],eax
10022de4:	push   0xd
10022de6:	push   0x10070bbc
10022deb:	call   0x10004417
10022df0:	add    esp,0xc
10022df3:	push   eax
10022df4:	lea    eax,[esi+0x18]
10022df7:	push   eax
10022df8:	call   0x1000239e
10022dfd:	push   DWORD PTR ds:0x10080f64
10022e03:	and    DWORD PTR [esi+0x1c],0x0
10022e07:	and    DWORD PTR [esi+0x20],0x0
10022e0b:	lea    eax,[ebp-0x30]
10022e0e:	mov    DWORD PTR [esi+0x24],eax
10022e11:	call   DWORD PTR ds:0x10066110
10022e17:	push   0xffffffff
10022e19:	push   DWORD PTR ds:0x10080f68
10022e1f:	call   DWORD PTR ds:0x10066084
10022e25:	cmp    BYTE PTR [esi+0x14],0x0
10022e29:	je     0x10022ea7
10022e2b:	cmp    BYTE PTR [esi+0x28],0x0
10022e2f:	je     0x10022ea7
10022e31:	lea    esi,[ebp-0x40]
10022e34:	lea    edi,[ebp+0x10]
10022e37:	call   0x1002242e
10022e3c:	mov    BYTE PTR [ebp-0x4],0xa
10022e40:	mov    eax,DWORD PTR [eax]
10022e42:	test   eax,eax
10022e44:	je     0x10022e4a
10022e46:	mov    eax,DWORD PTR [eax]
10022e48:	jmp    0x10022e4c
10022e4a:	xor    eax,eax
10022e4c:	push   eax
10022e4d:	push   DWORD PTR [ebp+0x18]
10022e50:	call   0x1000239e
10022e55:	lea    edi,[ebp+0x10]
10022e58:	mov    BYTE PTR [ebp-0x4],0x9
10022e5c:	call   0x100025c2
10022e61:	push   DWORD PTR [ebp+0x18]
10022e64:	call   0x1002413a
10022e69:	mov    esi,DWORD PTR [ebp+0x1c]
10022e6c:	mov    BYTE PTR [ebp-0x4],0xb
10022e70:	cmp    WORD PTR [ebp-0x30],0x3
10022e75:	pop    ecx
10022e76:	mov    BYTE PTR [ebp-0x11],al
10022e79:	mov    DWORD PTR [esi],0x1
10022e7f:	je     0x10022e9a
10022e81:	push   0x3
10022e83:	push   0x0
10022e85:	lea    eax,[ebp-0x30]
10022e88:	push   eax
10022e89:	push   eax
10022e8a:	call   DWORD PTR ds:0x1006627c
10022e90:	test   eax,eax
10022e92:	jge    0x10022e9a
10022e94:	push   eax
10022e95:	call   0x10050b90
10022e9a:	movsx  eax,WORD PTR [ebp-0x28]
10022e9e:	mov    DWORD PTR [esi],eax
10022ea0:	mov    DWORD PTR [ebp-0x4],0x9
10022ea7:	lea    eax,[ebp-0x30]
10022eaa:	push   eax
10022eab:	call   ebx
10022ead:	lea    eax,[ebp-0x40]
10022eb0:	push   eax
10022eb1:	call   ebx
10022eb3:	lea    eax,[ebp-0x80]
10022eb6:	push   eax
10022eb7:	call   ebx
10022eb9:	lea    eax,[ebp-0x50]
10022ebc:	push   eax
10022ebd:	call   ebx
10022ebf:	lea    eax,[ebp-0x60]
10022ec2:	push   eax
10022ec3:	call   ebx
10022ec5:	mov    BYTE PTR [ebp-0x4],0x0
10022ec9:	mov    eax,DWORD PTR [ebp-0x18]
10022ecc:	test   eax,eax
10022ece:	je     0x10022ed6
10022ed0:	mov    ecx,DWORD PTR [eax]
10022ed2:	push   eax
10022ed3:	call   DWORD PTR [ecx+0x8]
10022ed6:	push   DWORD PTR ds:0x10080f6c
10022edc:	call   DWORD PTR ds:0x10066110
10022ee2:	mov    al,BYTE PTR [ebp-0x11]
10022ee5:	call   0x10059b0d
10022eea:	ret    0x18
10022eed:	mov    eax,0x10022ef3
10022ef2:	ret    
10022ef3:	mov    ebx,DWORD PTR ds:0x10066294
10022ef9:	jmp    0x10022ea7
10022efb:	push   0x4
10022efd:	call   0x10037980
10022f02:	pop    ecx
10022f03:	mov    eax,0x10022ed6
10022f08:	ret    
10022f09:	push   0xd8
10022f0e:	mov    eax,0x100639d7
10022f13:	call   0x10059a68
10022f18:	mov    edi,ecx
10022f1a:	push   0x1f4
10022f1f:	push   DWORD PTR ds:0x10080f6c
10022f25:	call   DWORD PTR ds:0x10066084
10022f2b:	test   eax,eax
10022f2d:	je     0x10022f3b
10022f2f:	push   0xf
10022f31:	call   0x10037980
10022f36:	pop    ecx
10022f37:	xor    al,al
10022f39:	jmp    0x10022f97
10022f3b:	lea    eax,[ebp-0x1c]
10022f3e:	xor    ebx,ebx
10022f40:	push   eax
10022f41:	mov    BYTE PTR [ebp-0x15],bl
10022f44:	mov    DWORD PTR [ebp-0x4],ebx
10022f47:	call   0x100245db
10022f4c:	test   eax,eax
10022f4e:	jl     0x10022f88
10022f50:	mov    esi,DWORD PTR [ebp-0x1c]
10022f53:	mov    eax,DWORD PTR [ebp+0x10]
10022f56:	mov    ecx,esi
10022f58:	call   0x10010894
10022f5d:	cmp    esi,ebx
10022f5f:	mov    DWORD PTR [ebp-0x80],esi
10022f62:	je     0x10022f6a
10022f64:	mov    eax,DWORD PTR [esi]
10022f66:	push   esi
10022f67:	call   DWORD PTR [eax+0x4]
10022f6a:	lea    eax,[ebp+0x10]
10022f6d:	push   eax
10022f6e:	mov    BYTE PTR [ebp-0x4],0x1
10022f72:	call   0x10024658
10022f77:	test   eax,eax
10022f79:	jge    0x10022f9f
10022f7b:	cmp    esi,ebx
10022f7d:	mov    BYTE PTR [ebp-0x4],bl
10022f80:	je     0x10022f88
10022f82:	mov    eax,DWORD PTR [esi]
10022f84:	push   esi
10022f85:	call   DWORD PTR [eax+0x8]
10022f88:	push   DWORD PTR ds:0x10080f6c
10022f8e:	call   DWORD PTR ds:0x10066110
10022f94:	mov    al,BYTE PTR [ebp-0x15]
10022f97:	call   0x10059b0d
10022f9c:	ret    0x1c
10022f9f:	mov    ecx,DWORD PTR [ebp+0x14]
10022fa2:	mov    ebx,DWORD PTR [ebp+0x10]
10022fa5:	call   0x10011616
10022faa:	test   ebx,ebx
10022fac:	mov    DWORD PTR [ebp+0x14],ebx
10022faf:	je     0x10022fb7
10022fb1:	mov    eax,DWORD PTR [ebx]
10022fb3:	push   ebx
10022fb4:	call   DWORD PTR [eax+0x4]
10022fb7:	mov    eax,DWORD PTR [ebp+0xc]
10022fba:	mov    WORD PTR [ebp-0x5c],0x16
10022fc0:	mov    DWORD PTR [ebp-0x54],eax
10022fc3:	test   esi,esi
10022fc5:	mov    BYTE PTR [ebp-0x4],0x3
10022fc9:	mov    WORD PTR [ebp-0x3c],0x9
10022fcf:	mov    DWORD PTR [ebp-0x34],esi
10022fd2:	je     0x10022fda
10022fd4:	mov    eax,DWORD PTR [esi]
10022fd6:	push   esi
10022fd7:	call   DWORD PTR [eax+0x4]
10022fda:	test   ebx,ebx
10022fdc:	mov    BYTE PTR [ebp-0x4],0x4
10022fe0:	mov    WORD PTR [ebp-0x6c],0x9
10022fe6:	mov    DWORD PTR [ebp-0x64],ebx
10022fe9:	je     0x10022ff1
10022feb:	mov    eax,DWORD PTR [ebx]
10022fed:	push   ebx
10022fee:	call   DWORD PTR [eax+0x4]
10022ff1:	test   edi,edi
10022ff3:	mov    BYTE PTR [ebp-0x4],0x5
10022ff7:	mov    WORD PTR [ebp-0x2c],0x9
10022ffd:	mov    DWORD PTR [ebp-0x24],edi
10023000:	je     0x10023008
10023002:	mov    eax,DWORD PTR [edi]
10023004:	push   edi
10023005:	call   DWORD PTR [eax+0x4]
10023008:	mov    eax,DWORD PTR [ebp+0x18]
1002300b:	mov    BYTE PTR [ebp-0x4],0x6
1002300f:	cmp    DWORD PTR [eax+0x18],0x10
10023013:	jb     0x1002301a
10023015:	mov    eax,DWORD PTR [eax+0x4]
10023018:	jmp    0x1002301d
1002301a:	add    eax,0x4
1002301d:	push   eax
1002301e:	lea    edi,[ebp+0x10]
10023021:	call   0x10002467
10023026:	lea    esi,[ebp-0x7c]
10023029:	mov    BYTE PTR [ebp-0x4],0x7
1002302d:	call   0x100223ca
10023032:	mov    BYTE PTR [ebp-0x4],0x9
10023036:	call   0x100025c2
1002303b:	mov    eax,DWORD PTR [ebp+0x1c]
1002303e:	mov    esi,DWORD PTR [eax]
10023040:	push   esi
10023041:	mov    WORD PTR [ebp-0x4c],0x8
10023047:	call   DWORD PTR ds:0x100662b0
1002304d:	test   eax,eax
1002304f:	mov    DWORD PTR [ebp-0x44],eax
10023052:	jne    0x10023062
10023054:	test   esi,esi
10023056:	je     0x10023062
10023058:	push   0x8007000e
1002305d:	call   0x10050b90
10023062:	cmp    BYTE PTR [ebp+0x20],0x0
10023066:	mov    BYTE PTR [ebp-0x4],0xa
1002306a:	lea    esi,[ebp-0x5c]
1002306d:	lea    edi,[ebp-0x94]
10023073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023077:	lea    esi,[ebp-0x3c]
1002307a:	lea    edi,[ebp-0xa4]
10023080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023084:	lea    esi,[ebp-0x6c]
10023087:	lea    edi,[ebp-0xb4]
1002308d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002308e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002308f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023091:	lea    esi,[ebp-0x2c]
10023094:	lea    edi,[ebp-0xc4]
1002309a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002309b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002309c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002309d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002309e:	lea    esi,[ebp-0x7c]
100230a1:	lea    edi,[ebp-0xd4]
100230a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100230a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100230a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100230aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100230ab:	lea    esi,[ebp-0x4c]
100230ae:	lea    edi,[ebp-0xe4]
100230b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100230b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100230b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100230b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100230b8:	mov    esi,DWORD PTR [ebp+0x8]
100230bb:	mov    DWORD PTR [esi],0x1
100230c1:	je     0x100230f8
100230c3:	push   0xdca6840
100230c8:	push   0x10070bd8
100230cd:	call   0x10004246
100230d2:	pop    ecx
100230d3:	pop    ecx
100230d4:	push   0x26e27eac
100230d9:	push   eax
100230da:	call   0x10004246
100230df:	pop    ecx
100230e0:	pop    ecx
100230e1:	push   0x6cade790
100230e6:	push   eax
100230e7:	call   0x10004246
100230ec:	pop    ecx
100230ed:	pop    ecx
100230ee:	push   eax
100230ef:	push   0x9
100230f1:	push   0x10070c04
100230f6:	jmp    0x10023138
100230f8:	push   0x11587c74
100230fd:	push   0x10070c18
10023102:	call   0x10004246
10023107:	pop    ecx
10023108:	pop    ecx
10023109:	push   0x3290ba38
1002310e:	push   eax
1002310f:	call   0x10004246
10023114:	pop    ecx
10023115:	pop    ecx
10023116:	push   0x45f086a0
1002311b:	push   eax
1002311c:	call   0x10004246
10023121:	pop    ecx
10023122:	pop    ecx
10023123:	push   0xc2f7daa
10023128:	push   eax
10023129:	call   0x10004246
1002312e:	pop    ecx
1002312f:	pop    ecx
10023130:	push   eax
10023131:	push   0x8
10023133:	push   0x10070c50
10023138:	call   0x10004417
1002313d:	add    esp,0xc
10023140:	push   eax
10023141:	lea    eax,[esi+0x4]
10023144:	push   eax
10023145:	call   0x1000239e
1002314a:	push   DWORD PTR ds:0x10080f64
10023150:	and    DWORD PTR [esi+0x10],0x0
10023154:	lea    eax,[ebp-0xe4]
1002315a:	mov    DWORD PTR [esi+0x8],eax
1002315d:	mov    DWORD PTR [esi+0xc],0x6
10023164:	call   DWORD PTR ds:0x10066110
1002316a:	push   0xffffffff
1002316c:	push   DWORD PTR ds:0x10080f68
10023172:	call   DWORD PTR ds:0x10066084
10023178:	cmp    BYTE PTR [esi+0x14],0x0
1002317c:	je     0x10023189
1002317e:	mov    eax,ebx
10023180:	call   0x10011b02
10023185:	mov    BYTE PTR [ebp-0x15],0x1
10023189:	mov    esi,DWORD PTR ds:0x10066294
1002318f:	lea    eax,[ebp-0x4c]
10023192:	push   eax
10023193:	call   esi
10023195:	lea    eax,[ebp-0x7c]
10023198:	push   eax
10023199:	call   esi
1002319b:	lea    eax,[ebp-0x2c]
1002319e:	push   eax
1002319f:	call   esi
100231a1:	lea    eax,[ebp-0x6c]
100231a4:	push   eax
100231a5:	call   esi
100231a7:	lea    eax,[ebp-0x3c]
100231aa:	push   eax
100231ab:	call   esi
100231ad:	lea    eax,[ebp-0x5c]
100231b0:	push   eax
100231b1:	call   esi
100231b3:	test   ebx,ebx
100231b5:	mov    BYTE PTR [ebp-0x4],0x1
100231b9:	je     0x100231c1
100231bb:	mov    eax,DWORD PTR [ebx]
100231bd:	push   ebx
100231be:	call   DWORD PTR [eax+0x8]
100231c1:	mov    BYTE PTR [ebp-0x4],0x0
100231c5:	mov    eax,DWORD PTR [ebp-0x1c]
100231c8:	test   eax,eax
100231ca:	je     0x10022f88
100231d0:	mov    ecx,DWORD PTR [eax]
100231d2:	push   eax
100231d3:	call   DWORD PTR [ecx+0x8]
100231d6:	jmp    0x10022f88
100231db:	push   0x4
100231dd:	call   0x10037980
100231e2:	pop    ecx
100231e3:	mov    eax,0x10022f88
100231e8:	ret    
100231e9:	mov    eax,DWORD PTR [eax]
100231eb:	test   eax,eax
100231ed:	je     0x100231f5
100231ef:	mov    ecx,DWORD PTR [eax]
100231f1:	push   eax
100231f2:	call   DWORD PTR [ecx+0x8]
100231f5:	ret    
100231f6:	push   0x2c
100231f8:	mov    eax,0x1006291c
100231fd:	call   0x10059a68
10023202:	mov    esi,ecx
10023204:	mov    ebx,DWORD PTR ds:0x10066084
1002320a:	push   0x1f4
1002320f:	push   DWORD PTR ds:0x10080f6c
10023215:	call   ebx
10023217:	test   eax,eax
10023219:	je     0x1002322a
1002321b:	push   0xf
1002321d:	call   0x10037980
10023222:	pop    ecx
10023223:	xor    eax,eax
10023225:	jmp    0x100232ee
1002322a:	and    DWORD PTR [ebp-0x4],0x0
1002322e:	mov    edi,DWORD PTR ds:0x1006628c
10023234:	and    DWORD PTR [ebp-0x14],0x0
10023238:	lea    eax,[ebp-0x28]
1002323b:	push   eax
1002323c:	call   edi
1002323e:	push   0x40fd1724
10023243:	mov    BYTE PTR [ebp-0x4],0x1
10023247:	push   0x10070c64
1002324c:	mov    DWORD PTR [esi],0x1
10023252:	call   0x10004246
10023257:	pop    ecx
10023258:	pop    ecx
10023259:	push   eax
1002325a:	push   0x8
1002325c:	push   0x10070c9c
10023261:	call   0x10004417
10023266:	add    esp,0xc
10023269:	push   eax
1002326a:	lea    eax,[esi+0x4]
1002326d:	push   eax
1002326e:	call   0x1000239e
10023273:	push   DWORD PTR ds:0x10080f64
10023279:	and    DWORD PTR [esi+0x8],0x0
1002327d:	and    DWORD PTR [esi+0xc],0x0
10023281:	lea    eax,[ebp-0x28]
10023284:	mov    DWORD PTR [esi+0x10],eax
10023287:	call   DWORD PTR ds:0x10066110
1002328d:	push   0xffffffff
1002328f:	push   DWORD PTR ds:0x10080f68
10023295:	call   ebx
10023297:	cmp    BYTE PTR [esi+0x14],0x0
1002329b:	je     0x100232d5
1002329d:	cmp    WORD PTR [ebp-0x28],0x16
100232a2:	jne    0x100232ac
100232a4:	mov    eax,DWORD PTR [ebp-0x20]
100232a7:	mov    DWORD PTR [ebp-0x14],eax
100232aa:	jmp    0x100232d5
100232ac:	lea    eax,[ebp-0x38]
100232af:	push   eax
100232b0:	call   edi
100232b2:	lea    ecx,[ebp-0x28]
100232b5:	mov    dx,0x16
100232b9:	lea    eax,[ebp-0x38]
100232bc:	mov    BYTE PTR [ebp-0x4],0x2
100232c0:	call   0x10022409
100232c5:	mov    esi,DWORD PTR [ebp-0x30]
100232c8:	lea    eax,[ebp-0x38]
100232cb:	push   eax
100232cc:	call   DWORD PTR ds:0x10066294
100232d2:	mov    DWORD PTR [ebp-0x14],esi
100232d5:	lea    eax,[ebp-0x28]
100232d8:	push   eax
100232d9:	call   DWORD PTR ds:0x10066294
100232df:	push   DWORD PTR ds:0x10080f6c
100232e5:	call   DWORD PTR ds:0x10066110
100232eb:	mov    eax,DWORD PTR [ebp-0x14]
100232ee:	call   0x10059b0d
100232f3:	ret    
100232f4:	push   0x4
100232f6:	call   0x10037980
100232fb:	pop    ecx
100232fc:	mov    eax,0x100232df
10023301:	ret    
10023302:	push   ebp
10023303:	mov    ebp,esp
10023305:	and    esp,0xfffffff8
10023308:	push   0xffffffff
1002330a:	push   0x100628de
1002330f:	mov    eax,fs:0x0
10023315:	push   eax
10023316:	sub    esp,0xd8
1002331c:	mov    eax,ds:0x1007e030
10023321:	xor    eax,esp
10023323:	mov    DWORD PTR [esp+0xd0],eax
1002332a:	push   ebx
1002332b:	push   esi
1002332c:	push   edi
1002332d:	mov    eax,ds:0x1007e030
10023332:	xor    eax,esp
10023334:	push   eax
10023335:	lea    eax,[esp+0xe8]
1002333c:	mov    fs:0x0,eax
10023342:	mov    eax,DWORD PTR [ebp+0x8]
10023345:	mov    DWORD PTR [esp+0x28],eax
10023349:	mov    eax,DWORD PTR [ebp+0xc]
1002334c:	mov    DWORD PTR [esp+0x1c],eax
10023350:	lea    eax,[esp+0x10]
10023354:	xor    edi,edi
10023356:	push   eax
10023357:	mov    DWORD PTR [esp+0x24],edi
1002335b:	call   0x10024549
10023360:	cmp    eax,edi
10023362:	jge    0x100233de
10023364:	push   0x791e0f0e
10023369:	push   0x10070cb0
1002336e:	call   0x10004246
10023373:	push   0x5fa70796
10023378:	push   eax
10023379:	call   0x10004246
1002337e:	push   0xafded38
10023383:	push   eax
10023384:	call   0x10004246
10023389:	push   0x6e8210e4
1002338e:	push   eax
1002338f:	call   0x10004246
10023394:	push   0x14f7a92a
10023399:	push   eax
1002339a:	call   0x10004246
1002339f:	push   eax
100233a0:	push   0x16
100233a2:	push   0x10070ce8
100233a7:	call   0x10004258
100233ac:	add    esp,0x34
100233af:	push   eax
100233b0:	lea    ecx,[esp+0x3c]
100233b4:	call   0x100011cd
100233b9:	lea    eax,[esp+0x38]
100233bd:	push   eax
100233be:	lea    eax,[esp+0x5c]
100233c2:	push   eax
100233c3:	mov    DWORD PTR [esp+0xf8],edi
100233ca:	call   0x100026fe
100233cf:	push   0x10074d64
100233d4:	lea    eax,[esp+0x5c]
100233d8:	push   eax
100233d9:	call   0x100479b4
100233de:	mov    esi,DWORD PTR [esp+0x10]
100233e2:	lea    eax,[esi+0x24]
100233e5:	neg    esi
100233e7:	sbb    esi,esi
100233e9:	and    esi,eax
100233eb:	mov    DWORD PTR [esp+0x18],esi
100233ef:	je     0x100233f7
100233f1:	mov    eax,DWORD PTR [esi]
100233f3:	push   esi
100233f4:	call   DWORD PTR [eax+0x4]
100233f7:	mov    DWORD PTR [esp+0xf0],0x1
10023402:	call   DWORD PTR ds:0x10066118
10023408:	cmp    esi,edi
1002340a:	mov    DWORD PTR [esp+0x20],eax
1002340e:	mov    DWORD PTR [esp+0x14],edi
10023412:	je     0x10023423
10023414:	mov    eax,DWORD PTR [esi]
10023416:	lea    ecx,[esp+0x14]
1002341a:	push   ecx
1002341b:	push   0x10070244
10023420:	push   esi
10023421:	call   DWORD PTR [eax]
10023423:	mov    BYTE PTR [esp+0xf0],0x2
1002342b:	cmp    DWORD PTR [esp+0x14],edi
1002342f:	jne    0x100234a0
10023431:	push   0x26babea6
10023436:	push   0x10070d00
1002343b:	call   0x10004246
10023440:	push   0x3071cc66
10023445:	push   eax
10023446:	call   0x10004246
1002344b:	push   0x73c7319c
10023450:	push   eax
10023451:	call   0x10004246
10023456:	push   0x58367108
1002345b:	push   eax
1002345c:	call   0x10004246
10023461:	push   eax
10023462:	push   0x16
10023464:	push   0x10070ce8
10023469:	call   0x10004258
1002346e:	add    esp,0x2c
10023471:	push   eax
10023472:	lea    ecx,[esp+0x3c]
10023476:	call   0x100011cd
1002347b:	lea    eax,[esp+0x38]
1002347f:	push   eax
10023480:	lea    eax,[esp+0x5c]
10023484:	push   eax
10023485:	mov    BYTE PTR [esp+0xf8],0x3
1002348d:	call   0x100026fe
10023492:	push   0x10074d64
10023497:	lea    eax,[esp+0x5c]
1002349b:	jmp    0x100233d8
100234a0:	mov    eax,DWORD PTR [esi]
100234a2:	push   0x10070d30
100234a7:	push   esi
100234a8:	call   DWORD PTR [eax+0x1c]
100234ab:	test   eax,eax
100234ad:	jge    0x100234f2
100234af:	push   0x10070d40
100234b4:	push   0x16
100234b6:	push   0x10070ce8
100234bb:	call   0x10004258
100234c0:	add    esp,0xc
100234c3:	push   eax
100234c4:	lea    ecx,[esp+0x3c]
100234c8:	call   0x100011cd
100234cd:	lea    eax,[esp+0x38]
100234d1:	push   eax
100234d2:	lea    eax,[esp+0x5c]
100234d6:	push   eax
100234d7:	mov    BYTE PTR [esp+0xf8],0x4
100234df:	call   0x100026fe
100234e4:	push   0x10074d64
100234e9:	lea    eax,[esp+0x5c]
100234ed:	jmp    0x100233d8
100234f2:	push   edi
100234f3:	lea    ecx,[esp+0xc8]
100234fa:	mov    DWORD PTR [esp+0xe0],0xf
10023505:	call   0x1000141c
1002350a:	push   0x375b0b58
1002350f:	push   0x10070d68
10023514:	mov    BYTE PTR [esp+0xf8],0x5
1002351c:	call   0x10004246
10023521:	push   eax
10023522:	push   0x16
10023524:	push   0x10070da8
10023529:	call   0x10004258
1002352e:	add    esp,0x14
10023531:	push   eax
10023532:	lea    eax,[esp+0xc8]
10023539:	push   eax
1002353a:	call   0x10004090
1002353f:	push   0x11ac46ca
10023544:	push   0x10070dc0
10023549:	call   0x10004246
1002354e:	push   0x32538e80
10023553:	push   eax
10023554:	call   0x10004246
10023559:	push   eax
1002355a:	push   0x15
1002355c:	push   0x10070de4
10023561:	call   0x10004258
10023566:	add    esp,0x1c
10023569:	push   eax
1002356a:	lea    eax,[esp+0xc8]
10023571:	push   eax
10023572:	call   0x10004090
10023577:	push   0x34503260
1002357c:	push   0x10070dfc
10023581:	call   0x10004246
10023586:	push   0x426a13ba
1002358b:	push   eax
1002358c:	call   0x10004246
10023591:	push   eax
10023592:	push   0x1c
10023594:	push   0x10070e24
10023599:	call   0x10004258
1002359e:	add    esp,0x1c
100235a1:	push   eax
100235a2:	lea    eax,[esp+0xc8]
100235a9:	push   eax
100235aa:	call   0x10004090
100235af:	push   0x5431acc
100235b4:	push   0x10070e44
100235b9:	call   0x10004246
100235be:	push   0x31fdbdf2
100235c3:	push   eax
100235c4:	call   0x10004246
100235c9:	push   0x40d55844
100235ce:	push   eax
100235cf:	call   0x10004246
100235d4:	push   eax
100235d5:	push   0x1d
100235d7:	push   0x10070e74
100235dc:	call   0x10004258
100235e1:	add    esp,0x24
100235e4:	push   eax
100235e5:	lea    eax,[esp+0xc8]
100235ec:	push   eax
100235ed:	call   0x10004090
100235f2:	push   0x10070e94
100235f7:	push   0x14
100235f9:	push   0x10070ec4
100235fe:	call   0x10004258
10023603:	add    esp,0xc
10023606:	push   eax
10023607:	lea    eax,[esp+0xc8]
1002360e:	push   eax
1002360f:	call   0x10004090
10023614:	push   0x5b1a9edc
10023619:	push   0x10070ee0
1002361e:	call   0x10004246
10023623:	push   eax
10023624:	push   0x1b
10023626:	push   0x10070f20
1002362b:	call   0x10004258
10023630:	add    esp,0x14
10023633:	push   eax
10023634:	lea    eax,[esp+0xc8]
1002363b:	push   eax
1002363c:	call   0x10004090
10023641:	push   0x10070f3c
10023646:	push   0x7
10023648:	push   0x10070f64
1002364d:	call   0x10004258
10023652:	add    esp,0xc
10023655:	push   eax
10023656:	lea    eax,[esp+0xc8]
1002365d:	push   eax
1002365e:	call   0x10004090
10023663:	push   0x45cd2006
10023668:	push   0x10070f6c
1002366d:	call   0x10004246
10023672:	push   0x2bb23f0e
10023677:	push   eax
10023678:	call   0x10004246
1002367d:	push   0x71726218
10023682:	push   eax
10023683:	call   0x10004246
10023688:	push   0x29099242
1002368d:	push   eax
1002368e:	call   0x10004246
10023693:	push   eax
10023694:	push   0x19
10023696:	push   0x10070fa4
1002369b:	call   0x10004258
100236a0:	add    esp,0x2c
100236a3:	push   eax
100236a4:	lea    eax,[esp+0xc8]
100236ab:	push   eax
100236ac:	call   0x10004090
100236b1:	mov    ebx,0x10070fc0
100236b6:	push   ebx
100236b7:	lea    eax,[esp+0xc8]
100236be:	push   eax
100236bf:	call   0x10004090
100236c4:	push   0x10070fc4
100236c9:	push   0x15
100236cb:	push   0x10070ffc
100236d0:	call   0x10004258
100236d5:	add    esp,0xc
100236d8:	push   eax
100236d9:	lea    eax,[esp+0xc8]
100236e0:	push   eax
100236e1:	call   0x10004090
100236e6:	mov    esi,0x10071014
100236eb:	push   esi
100236ec:	lea    eax,[esp+0xc8]
100236f3:	push   eax
100236f4:	call   0x10004090
100236f9:	push   0x59da2292
100236fe:	push   0x10071018
10023703:	call   0x10004246
10023708:	push   0x5ae84348
1002370d:	push   eax
1002370e:	call   0x10004246
10023713:	push   0x4ed1b504
10023718:	push   eax
10023719:	call   0x10004246
1002371e:	push   0x7eb80b76
10023723:	push   eax
10023724:	call   0x10004246
10023729:	push   0x4ccec47c
1002372e:	push   eax
1002372f:	call   0x10004246
10023734:	push   eax
10023735:	push   0x14
10023737:	push   0x10071048
1002373c:	call   0x10004258
10023741:	add    esp,0x34
10023744:	push   eax
10023745:	lea    eax,[esp+0xc8]
1002374c:	push   eax
1002374d:	call   0x10004090
10023752:	push   ebx
10023753:	lea    eax,[esp+0xc8]
1002375a:	push   eax
1002375b:	call   0x10004090
10023760:	push   0x10071060
10023765:	push   0x19
10023767:	push   0x100710a0
1002376c:	call   0x10004258
10023771:	add    esp,0xc
10023774:	push   eax
10023775:	lea    eax,[esp+0xc8]
1002377c:	push   eax
1002377d:	call   0x10004090
10023782:	push   esi
10023783:	lea    eax,[esp+0xc8]
1002378a:	push   eax
1002378b:	call   0x10004090
10023790:	push   0x438c71a2
10023795:	push   0x100710bc
1002379a:	call   0x10004246
1002379f:	push   0x21203868
100237a4:	push   eax
100237a5:	call   0x10004246
100237aa:	push   eax
100237ab:	push   0x26
100237ad:	push   0x100710e4
100237b2:	call   0x10004258
100237b7:	add    esp,0x1c
100237ba:	push   eax
100237bb:	lea    eax,[esp+0xc8]
100237c2:	push   eax
100237c3:	call   0x10004090
100237c8:	push   0x1007110c
100237cd:	push   0x2
100237cf:	push   0x1007114c
100237d4:	call   0x10004258
100237d9:	add    esp,0xc
100237dc:	push   eax
100237dd:	lea    eax,[esp+0xc8]
100237e4:	push   eax
100237e5:	call   0x10004090
100237ea:	push   0x3caa79e8
100237ef:	push   0x10071150
100237f4:	call   0x10004246
100237f9:	push   0x638afde0
100237fe:	push   eax
100237ff:	call   0x10004246
10023804:	push   0x41c98b28
10023809:	push   eax
1002380a:	call   0x10004246
1002380f:	push   eax
10023810:	push   0x12
10023812:	push   0x10071174
10023817:	call   0x10004258
1002381c:	add    esp,0x24
1002381f:	push   eax
10023820:	lea    eax,[esp+0xc8]
10023827:	push   eax
10023828:	call   0x10004090
1002382d:	push   0x360cd70
10023832:	push   0x10071188
10023837:	call   0x10004246
1002383c:	push   0x1956545c
10023841:	push   eax
10023842:	call   0x10004246
10023847:	push   0x15c36fa8
1002384c:	push   eax
1002384d:	call   0x10004246
10023852:	push   0x27415b30
10023857:	push   eax
10023858:	call   0x10004246
1002385d:	push   0x963a022
10023862:	push   eax
10023863:	call   0x10004246
10023868:	push   eax
10023869:	push   0x39
1002386b:	push   0x100711c8
10023870:	call   0x10004258
10023875:	add    esp,0x34
10023878:	push   eax
10023879:	lea    eax,[esp+0xc8]
10023880:	push   eax
10023881:	call   0x10004090
10023886:	push   esi
10023887:	lea    eax,[esp+0xc8]
1002388e:	push   eax
1002388f:	call   0x10004090
10023894:	push   0x2ca46a9a
10023899:	push   0x10071204
1002389e:	call   0x10004246
100238a3:	push   0x18d943d2
100238a8:	push   eax
100238a9:	call   0x10004246
100238ae:	push   0x7553e5f8
100238b3:	push   eax
100238b4:	call   0x10004246
100238b9:	push   eax
100238ba:	push   0x3c
100238bc:	push   0x10071230
100238c1:	call   0x10004258
100238c6:	add    esp,0x24
100238c9:	push   eax
100238ca:	lea    eax,[esp+0xc8]
100238d1:	push   eax
100238d2:	call   0x10004090
100238d7:	push   ebx
100238d8:	lea    eax,[esp+0xc8]
100238df:	push   eax
100238e0:	call   0x10004090
100238e5:	push   0x10071270
100238ea:	push   0x45
100238ec:	push   0x100712a0
100238f1:	call   0x10004258
100238f6:	add    esp,0xc
100238f9:	push   eax
100238fa:	lea    eax,[esp+0xc8]
10023901:	push   eax
10023902:	call   0x10004090
10023907:	push   esi
10023908:	lea    eax,[esp+0xc8]
1002390f:	push   eax
10023910:	call   0x10004090
10023915:	push   0x100712e8
1002391a:	push   0x3d
1002391c:	push   0x10071314
10023921:	call   0x10004258
10023926:	add    esp,0xc
10023929:	push   eax
1002392a:	lea    eax,[esp+0xc8]
10023931:	push   eax
10023932:	call   0x10004090
10023937:	push   ebx
10023938:	lea    eax,[esp+0xc8]
1002393f:	push   eax
10023940:	call   0x10004090
10023945:	push   0x10071354
1002394a:	push   0x46
1002394c:	push   0x10071398
10023951:	call   0x10004258
10023956:	add    esp,0xc
10023959:	push   eax
1002395a:	lea    eax,[esp+0xc8]
10023961:	push   eax
10023962:	call   0x10004090
10023967:	push   esi
10023968:	lea    eax,[esp+0xc8]
1002396f:	push   eax
10023970:	call   0x10004090
10023975:	mov    eax,DWORD PTR [esp+0x1c]
10023979:	mov    eax,DWORD PTR [eax]
1002397b:	lea    ecx,[esp+0x10]
1002397f:	push   ecx
10023980:	push   0x1
10023982:	lea    ecx,[esp+0x24]
10023986:	push   ecx
10023987:	push   eax
10023988:	call   0x10036b20
1002398d:	mov    ecx,DWORD PTR [eax]
1002398f:	mov    esi,ecx
10023991:	mov    DWORD PTR [esp+0x24],esi
10023995:	mov    DWORD PTR [eax],edi
10023997:	mov    DWORD PTR [esp+0x54],esi
1002399b:	mov    BYTE PTR [esp+0xf0],0x6
100239a3:	push   DWORD PTR [esp+0x1c]
100239a7:	call   0x10042e92
100239ac:	cmp    esi,edi
100239ae:	pop    ecx
100239af:	jne    0x100239fc
100239b1:	mov    esi,DWORD PTR [esp+0x28]
100239b5:	push   edi
100239b6:	mov    DWORD PTR [esi],edi
100239b8:	call   0x10042e92
100239bd:	pop    ecx
100239be:	push   edi
100239bf:	push   0x1
100239c1:	lea    ecx,[esp+0xcc]
100239c8:	call   0x100012f0
100239cd:	mov    BYTE PTR [esp+0xf0],0x1
100239d5:	mov    eax,DWORD PTR [esp+0x14]
100239d9:	cmp    eax,edi
100239db:	je     0x100239e3
100239dd:	mov    ecx,DWORD PTR [eax]
100239df:	push   eax
100239e0:	call   DWORD PTR [ecx+0x8]
100239e3:	or     DWORD PTR [esp+0xf0],0xffffffff
100239eb:	mov    eax,DWORD PTR [esp+0x18]
100239ef:	mov    ecx,DWORD PTR [eax]
100239f1:	push   eax
100239f2:	call   DWORD PTR [ecx+0x8]
100239f5:	mov    eax,esi
100239f7:	jmp    0x10023d1f
100239fc:	mov    eax,DWORD PTR [esp+0x10]
10023a00:	mov    DWORD PTR [esp+0x30],eax
10023a04:	lea    eax,[esp+0x2c]
10023a08:	push   eax
10023a09:	mov    DWORD PTR [esp+0x30],edi
10023a0d:	mov    DWORD PTR [esp+0x38],esi
10023a11:	call   0x100377e0
10023a16:	cmp    eax,edi
10023a18:	je     0x10023bc9
10023a1e:	mov    DWORD PTR [esp+0x10],eax
10023a22:	mov    ebx,0x10071474
10023a27:	push   0x1e74130a
10023a2c:	push   0x100713e0
10023a31:	call   0x10004246
10023a36:	push   0x13469cd8
10023a3b:	push   eax
10023a3c:	call   0x10004246
10023a41:	push   0x46b73ae0
10023a46:	push   eax
10023a47:	call   0x10004246
10023a4c:	push   eax
10023a4d:	push   0x12
10023a4f:	push   0x1007140c
10023a54:	call   0x10004258
10023a59:	add    esp,0x24
10023a5c:	push   eax
10023a5d:	lea    eax,[esp+0xc8]
10023a64:	push   eax
10023a65:	call   0x10004090
10023a6a:	push   0x10071420
10023a6f:	push   0x10
10023a71:	push   0x10071460
10023a76:	call   0x10004258
10023a7b:	add    esp,0xc
10023a7e:	push   eax
10023a7f:	lea    eax,[esp+0xc8]
10023a86:	push   eax
10023a87:	call   0x10004090
10023a8c:	lea    eax,[esp+0x2c]
10023a90:	push   eax
10023a91:	lea    esi,[esp+0x3c]
10023a95:	call   0x100374a0
10023a9a:	push   0xffffffff
10023a9c:	push   edi
10023a9d:	lea    esi,[esp+0xcc]
10023aa4:	mov    BYTE PTR [esp+0xf8],0x7
10023aac:	call   0x10004c80
10023ab1:	push   edi
10023ab2:	push   0x1
10023ab4:	lea    ecx,[esp+0x40]
10023ab8:	mov    BYTE PTR [esp+0xf8],0x6
10023ac0:	call   0x100012f0
10023ac5:	push   ebx
10023ac6:	mov    eax,esi
10023ac8:	push   eax
10023ac9:	call   0x10004090
10023ace:	push   0x10071478
10023ad3:	push   0xd
10023ad5:	push   0x100714b4
10023ada:	call   0x10004258
10023adf:	add    esp,0xc
10023ae2:	push   eax
10023ae3:	mov    eax,esi
10023ae5:	push   eax
10023ae6:	call   0x10004090
10023aeb:	lea    eax,[esp+0x2c]
10023aef:	push   eax
10023af0:	lea    esi,[esp+0x3c]
10023af4:	call   0x100374a0
10023af9:	push   0xffffffff
10023afb:	push   edi
10023afc:	lea    esi,[esp+0xcc]
10023b03:	mov    BYTE PTR [esp+0xf8],0x8
10023b0b:	call   0x10004c80
10023b10:	push   edi
10023b11:	push   0x1
10023b13:	lea    ecx,[esp+0x40]
10023b17:	mov    BYTE PTR [esp+0xf8],0x6
10023b1f:	call   0x100012f0
10023b24:	push   ebx
10023b25:	mov    eax,esi
10023b27:	push   eax
10023b28:	call   0x10004090
10023b2d:	push   0x2e320da4
10023b32:	push   0x100714c4
10023b37:	call   0x10004246
10023b3c:	push   0x2a312d32
10023b41:	push   eax
10023b42:	call   0x10004246
10023b47:	push   eax
10023b48:	push   0xe
10023b4a:	push   0x100714fc
10023b4f:	call   0x10004258
10023b54:	add    esp,0x1c
10023b57:	push   eax
10023b58:	mov    eax,esi
10023b5a:	push   eax
10023b5b:	call   0x10004090
10023b60:	lea    eax,[esp+0x2c]
10023b64:	push   eax
10023b65:	lea    esi,[esp+0x3c]
10023b69:	call   0x100374a0
10023b6e:	push   0xffffffff
10023b70:	push   edi
10023b71:	lea    esi,[esp+0xcc]
10023b78:	mov    BYTE PTR [esp+0xf8],0x9
10023b80:	call   0x10004c80
10023b85:	push   edi
10023b86:	push   0x1
10023b88:	lea    ecx,[esp+0x40]
10023b8c:	mov    BYTE PTR [esp+0xf8],0x6
10023b94:	call   0x100012f0
10023b99:	push   ebx
10023b9a:	mov    eax,esi
10023b9c:	push   eax
10023b9d:	call   0x10004090
10023ba2:	push   0x1007150c
10023ba7:	push   0x11
10023ba9:	push   0x10071548
10023bae:	call   0x10004258
10023bb3:	add    esp,0xc
10023bb6:	push   eax
10023bb7:	mov    eax,esi
10023bb9:	push   eax
10023bba:	call   0x10004090
10023bbf:	dec    DWORD PTR [esp+0x10]
10023bc3:	jne    0x10023a27
10023bc9:	call   DWORD PTR ds:0x1007efec
10023bcf:	cmp    DWORD PTR [esp+0xdc],0x10
10023bd7:	mov    eax,DWORD PTR [esp+0xc8]
10023bde:	jae    0x10023be7
10023be0:	lea    eax,[esp+0xc8]
10023be7:	push   eax
10023be8:	lea    ecx,[esp+0x3c]
10023bec:	call   0x100011cd
10023bf1:	lea    eax,[esp+0x10]
10023bf5:	push   eax
10023bf6:	lea    ebx,[esp+0x3c]
10023bfa:	mov    BYTE PTR [esp+0xf4],0xa
10023c02:	call   0x100341a0
10023c07:	pop    ecx
10023c08:	mov    BYTE PTR [esp+0xf0],0xb
10023c10:	mov    eax,DWORD PTR [eax]
10023c12:	test   eax,eax
10023c14:	je     0x10023c1a
10023c16:	mov    eax,DWORD PTR [eax]
10023c18:	jmp    0x10023c1c
10023c1a:	xor    eax,eax
10023c1c:	mov    ecx,DWORD PTR [esp+0x18]
10023c20:	mov    edx,DWORD PTR [ecx]
10023c22:	push   eax
10023c23:	push   ecx
10023c24:	call   DWORD PTR [edx+0x28]
10023c27:	test   eax,eax
10023c29:	lea    edi,[esp+0x10]
10023c2d:	setl   bl
10023c30:	call   0x100025c2
10023c35:	push   0x0
10023c37:	push   0x1
10023c39:	lea    ecx,[esp+0x40]
10023c3d:	mov    BYTE PTR [esp+0xf8],0x6
10023c45:	call   0x100012f0
10023c4a:	test   bl,bl
10023c4c:	je     0x10023cbe
10023c4e:	push   0x2f891f5a
10023c53:	push   0x1007155c
10023c58:	call   0x10004246
10023c5d:	push   0x5f22f34e
10023c62:	push   eax
10023c63:	call   0x10004246
10023c68:	push   0x43f664ba
10023c6d:	push   eax
10023c6e:	call   0x10004246
10023c73:	push   eax
10023c74:	push   0x16
10023c76:	push   0x10070ce8
10023c7b:	call   0x10004258
10023c80:	add    esp,0x24
10023c83:	push   eax
10023c84:	lea    ecx,[esp+0x84]
10023c8b:	call   0x100011cd
10023c90:	lea    eax,[esp+0x80]
10023c97:	push   eax
10023c98:	lea    eax,[esp+0xa0]
10023c9f:	push   eax
10023ca0:	mov    BYTE PTR [esp+0xf8],0xc
10023ca8:	call   0x100026fe
10023cad:	push   0x10074d64
10023cb2:	lea    eax,[esp+0xa0]
10023cb9:	jmp    0x100233d8
10023cbe:	push   DWORD PTR [esp+0x24]
10023cc2:	call   0x10042e92
10023cc7:	pop    ecx
10023cc8:	push   0x0
10023cca:	push   0x1
10023ccc:	lea    ecx,[esp+0xcc]
10023cd3:	call   0x100012f0
10023cd8:	mov    BYTE PTR [esp+0xf0],0x1
10023ce0:	mov    eax,DWORD PTR [esp+0x14]
10023ce4:	test   eax,eax
10023ce6:	je     0x10023cee
10023ce8:	mov    ecx,DWORD PTR [eax]
10023cea:	push   eax
10023ceb:	call   DWORD PTR [ecx+0x8]
10023cee:	call   DWORD PTR ds:0x10066118
10023cf4:	sub    eax,DWORD PTR [esp+0x20]
10023cf8:	push   eax
10023cf9:	call   0x10002080
10023cfe:	mov    esi,DWORD PTR [esp+0x1c]
10023d02:	mov    edi,DWORD PTR [esp+0x2c]
10023d06:	pop    ecx
10023d07:	mov    DWORD PTR [edi],esi
10023d09:	mov    eax,DWORD PTR [esi]
10023d0b:	push   esi
10023d0c:	call   DWORD PTR [eax+0x4]
10023d0f:	or     DWORD PTR [esp+0xf0],0xffffffff
10023d17:	mov    eax,DWORD PTR [esi]
10023d19:	push   esi
10023d1a:	call   DWORD PTR [eax+0x8]
10023d1d:	mov    eax,edi
10023d1f:	mov    ecx,DWORD PTR [esp+0xe8]
10023d26:	mov    DWORD PTR fs:0x0,ecx
10023d2d:	pop    ecx
10023d2e:	pop    edi
10023d2f:	pop    esi
10023d30:	pop    ebx
10023d31:	mov    ecx,DWORD PTR [esp+0xd0]
10023d38:	xor    ecx,esp
10023d3a:	call   0x10042e97
10023d3f:	mov    esp,ebp
10023d41:	pop    ebp
10023d42:	ret    0x8
10023d45:	push   0x0
10023d47:	mov    eax,0x100634e0
10023d4c:	call   0x10059a35
10023d51:	lea    eax,[ebp+0xb]
10023d54:	push   eax
10023d55:	call   0x10037950
10023d5a:	xor    eax,eax
10023d5c:	push   eax
10023d5d:	push   eax
10023d5e:	mov    DWORD PTR [ebp-0x4],eax
10023d61:	call   DWORD PTR ds:0x10066440
10023d67:	push   DWORD PTR [ebp+0x8]
10023d6a:	call   0x100228fd
10023d6f:	call   DWORD PTR ds:0x10066424
10023d75:	call   0x10037970
10023d7a:	xor    eax,eax
10023d7c:	call   0x10059b0d
10023d81:	ret    0x4
10023d84:	push   0x10
10023d86:	mov    eax,0x1005fa37
10023d8b:	call   0x10059ad4
10023d90:	mov    eax,DWORD PTR [ebp+0xc]
10023d93:	xor    ebx,ebx
10023d95:	cmp    eax,ebx
10023d97:	jne    0x10023da3
10023d99:	mov    eax,0x80004003
10023d9e:	jmp    0x10023eb5
10023da3:	push   0x1c
10023da5:	mov    DWORD PTR [eax],ebx
10023da7:	mov    DWORD PTR [ebp-0x18],ebx
10023daa:	mov    DWORD PTR [ebp-0x4],ebx
10023dad:	call   0x1004349e
10023db2:	cmp    eax,ebx
10023db4:	pop    ecx
10023db5:	je     0x10023dc2
10023db7:	mov    esi,eax
10023db9:	call   0x10024408
10023dbe:	mov    edi,eax
10023dc0:	jmp    0x10023dc4
10023dc2:	xor    edi,edi
10023dc4:	or     DWORD PTR [ebp-0x4],0xffffffff
10023dc8:	jmp    0x10023dd5
10023dca:	mov    eax,0x10023dd0
10023dcf:	ret    
10023dd0:	mov    edi,DWORD PTR [ebp-0x18]
10023dd3:	xor    ebx,ebx
10023dd5:	cmp    edi,ebx
10023dd7:	jne    0x10023de3
10023dd9:	mov    eax,0x8007000e
10023dde:	jmp    0x10023eb5
10023de3:	xor    esi,esi
10023de5:	mov    DWORD PTR [ebp-0x18],esi
10023de8:	push   ebx
10023de9:	lea    eax,[ebp-0x1c]
10023dec:	push   0x4
10023dee:	mov    DWORD PTR [ebp-0x4],0x2
10023df5:	push   eax
10023df6:	mov    DWORD PTR [ebp-0x1c],ebx
10023df9:	call   0x100142ec
10023dfe:	add    esp,0xc
10023e01:	cmp    eax,ebx
10023e03:	jl     0x10023eb5
10023e09:	mov    ebx,DWORD PTR [ebp-0x1c]
10023e0c:	cmp    ebx,0x400
10023e12:	ja     0x10023e2d
10023e14:	push   ebx
10023e15:	call   0x10006c3d
10023e1a:	test   al,al
10023e1c:	pop    ecx
10023e1d:	je     0x10023e2d
10023e1f:	mov    eax,ebx
10023e21:	call   0x1004b6f0
10023e26:	mov    DWORD PTR [ebp-0x10],esp
10023e29:	mov    eax,esp
10023e2b:	jmp    0x10023e39
10023e2d:	push   ebx
10023e2e:	lea    esi,[ebp-0x18]
10023e31:	call   0x100075b6
10023e36:	mov    esi,DWORD PTR [ebp-0x18]
10023e39:	test   eax,eax
10023e3b:	jne    0x10023e59
10023e3d:	mov    eax,DWORD PTR [edi]
10023e3f:	push   0x1
10023e41:	mov    ecx,edi
10023e43:	call   DWORD PTR [eax+0x1c]
10023e46:	jmp    0x10023e53
10023e48:	mov    eax,esi
10023e4a:	mov    esi,DWORD PTR [esi]
10023e4c:	push   eax
10023e4d:	call   0x10043508
10023e52:	pop    ecx
10023e53:	test   esi,esi
10023e55:	jne    0x10023e48
10023e57:	jmp    0x10023dd9
10023e59:	push   0x3
10023e5b:	push   DWORD PTR [ebp+0x8]
10023e5e:	push   eax
10023e5f:	push   eax
10023e60:	push   edi
10023e61:	call   0x10022061
10023e66:	mov    ebx,eax
10023e68:	test   ebx,ebx
10023e6a:	mov    eax,DWORD PTR [edi]
10023e6c:	jge    0x10023e88
10023e6e:	push   0x1
10023e70:	mov    ecx,edi
10023e72:	call   DWORD PTR [eax+0x1c]
10023e75:	jmp    0x10023e82
10023e77:	mov    eax,esi
10023e79:	mov    esi,DWORD PTR [esi]
10023e7b:	push   eax
10023e7c:	call   0x10043508
10023e81:	pop    ecx
10023e82:	test   esi,esi
10023e84:	jne    0x10023e77
10023e86:	jmp    0x10023eb3
10023e88:	push   DWORD PTR [ebp+0xc]
10023e8b:	push   0x10070a70
10023e90:	push   edi
10023e91:	call   DWORD PTR [eax]
10023e93:	mov    ebx,eax
10023e95:	test   ebx,ebx
10023e97:	jge    0x10023eaf
10023e99:	mov    eax,DWORD PTR [edi]
10023e9b:	push   0x1
10023e9d:	mov    ecx,edi
10023e9f:	call   DWORD PTR [eax+0x1c]
10023ea2:	jmp    0x10023eaf
10023ea4:	mov    eax,esi
10023ea6:	mov    esi,DWORD PTR [esi]
10023ea8:	push   eax
10023ea9:	call   0x10043508
10023eae:	pop    ecx
10023eaf:	test   esi,esi
10023eb1:	jne    0x10023ea4
10023eb3:	mov    eax,ebx
10023eb5:	lea    esp,[ebp-0x2c]
10023eb8:	call   0x10059b30
10023ebd:	ret    0x8
10023ec0:	push   ecx
10023ec1:	mov    eax,ds:0x1007e030
10023ec6:	xor    eax,esp
10023ec8:	mov    DWORD PTR [esp],eax
10023ecb:	mov    eax,DWORD PTR [esp+0x10]
10023ecf:	test   eax,eax
10023ed1:	jne    0x10023eda
10023ed3:	mov    eax,0x80004003
10023ed8:	jmp    0x10023ee2
10023eda:	and    DWORD PTR [eax],0x0
10023edd:	mov    eax,0x80040200
10023ee2:	mov    ecx,DWORD PTR [esp]
10023ee5:	xor    ecx,esp
10023ee7:	call   0x10042e97
10023eec:	pop    ecx
10023eed:	ret    0xc
10023ef0:	push   0x4
10023ef2:	mov    eax,0x10060aea
10023ef7:	call   0x10059a35
10023efc:	mov    esi,ecx
10023efe:	mov    DWORD PTR [ebp-0x10],esi
10023f01:	mov    eax,esi
10023f03:	mov    DWORD PTR [ebp-0x4],0x2
10023f0a:	call   0x10020b48
10023f0f:	lea    eax,[esi+0x10]
10023f12:	mov    BYTE PTR [ebp-0x4],0x1
10023f16:	call   0x100244c4
10023f1b:	mov    BYTE PTR [ebp-0x4],0x0
10023f1f:	mov    eax,DWORD PTR [esi+0xc]
10023f22:	test   eax,eax
10023f24:	je     0x10023f2c
10023f26:	mov    ecx,DWORD PTR [eax]
10023f28:	push   eax
10023f29:	call   DWORD PTR [ecx+0x8]
10023f2c:	or     DWORD PTR [ebp-0x4],0xffffffff
10023f30:	mov    esi,DWORD PTR [esi+0x8]
10023f33:	test   esi,esi
10023f35:	je     0x10023f3d
10023f37:	mov    eax,DWORD PTR [esi]
10023f39:	push   esi
10023f3a:	call   DWORD PTR [eax+0x8]
10023f3d:	call   0x10059b0d
10023f42:	ret    
10023f43:	push   0x34
10023f45:	mov    eax,0x10061b1c
10023f4a:	call   0x10059a9e
10023f4f:	mov    eax,DWORD PTR [ebp+0x8]
10023f52:	push   eax
10023f53:	xor    ebx,ebx
10023f55:	lea    eax,[ebp-0x2c]
10023f58:	mov    edi,ecx
10023f5a:	mov    DWORD PTR [ebp-0x30],ebx
10023f5d:	call   0x100209d6
10023f62:	lea    eax,[ebp-0x2c]
10023f65:	push   eax
10023f66:	lea    eax,[ebp-0x38]
10023f69:	add    edi,0x10
10023f6c:	push   eax
10023f6d:	mov    DWORD PTR [ebp-0x4],ebx
10023f70:	call   0x10021005
10023f75:	cmp    DWORD PTR [ebp-0x38],ebx
10023f78:	mov    esi,DWORD PTR [edi+0x4]
10023f7b:	je     0x10023f82
10023f7d:	cmp    DWORD PTR [ebp-0x38],edi
10023f80:	je     0x10023f87
10023f82:	call   0x100433b0
10023f87:	mov    eax,DWORD PTR [ebp-0x34]
10023f8a:	cmp    eax,esi
10023f8c:	je     0x10023fa2
10023f8e:	add    eax,0xc
10023f91:	lea    ebx,[ebp-0x2c]
10023f94:	call   0x1001ee13
10023f99:	test   al,al
10023f9b:	jne    0x10023fa2
10023f9d:	lea    eax,[ebp-0x38]
10023fa0:	jmp    0x10023fae
10023fa2:	mov    eax,DWORD PTR [edi+0x4]
10023fa5:	mov    DWORD PTR [ebp-0x3c],eax
10023fa8:	mov    DWORD PTR [ebp-0x40],edi
10023fab:	lea    eax,[ebp-0x40]
10023fae:	mov    esi,DWORD PTR [eax]
10023fb0:	test   esi,esi
10023fb2:	mov    ebx,DWORD PTR [eax+0x4]
10023fb5:	mov    eax,DWORD PTR [edi+0x4]
10023fb8:	mov    DWORD PTR [ebp-0x3c],eax
10023fbb:	je     0x10023fc1
10023fbd:	cmp    esi,edi
10023fbf:	je     0x10023fc6
10023fc1:	call   0x100433b0
10023fc6:	cmp    ebx,DWORD PTR [ebp-0x3c]
10023fc9:	je     0x10023fe4
10023fcb:	test   esi,esi
10023fcd:	jne    0x10023fd4
10023fcf:	call   0x100433b0
10023fd4:	cmp    ebx,DWORD PTR [esi+0x4]
10023fd7:	jne    0x10023fde
10023fd9:	call   0x100433b0
10023fde:	mov    eax,DWORD PTR [ebx+0x28]
10023fe1:	mov    DWORD PTR [ebp-0x30],eax
10023fe4:	push   0x1
10023fe6:	xor    ebx,ebx
10023fe8:	lea    esi,[ebp-0x2c]
10023feb:	call   0x100051ce
10023ff0:	mov    eax,DWORD PTR [ebp-0x30]
10023ff3:	call   0x10059b21
10023ff8:	ret    0x4
10023ffb:	jmp    DWORD PTR ds:0x100662d8
10024001:	mov    eax,DWORD PTR [esp+0x8]
10024005:	mov    DWORD PTR [eax],0x9
1002400b:	xor    eax,eax
1002400d:	ret    0x8
10024010:	push   ebp
10024011:	mov    ebp,esp
10024013:	push   ecx
10024014:	mov    ecx,DWORD PTR [ebp+0x10]
10024017:	push   edi
10024018:	mov    edi,ecx
1002401a:	and    edi,0x2
1002401d:	je     0x10024033
1002401f:	mov    eax,DWORD PTR [ebp+0x18]
10024022:	test   eax,eax
10024024:	jne    0x10024030
10024026:	mov    eax,0x80070057
1002402b:	jmp    0x100240b9
10024030:	and    DWORD PTR [eax],0x0
10024033:	mov    DWORD PTR [ebp-0x4],ecx
10024036:	and    DWORD PTR [ebp-0x4],0x1
1002403a:	je     0x10024046
1002403c:	mov    eax,DWORD PTR [ebp+0x14]
1002403f:	test   eax,eax
10024041:	je     0x10024026
10024043:	and    DWORD PTR [eax],0x0
10024046:	mov    ecx,DWORD PTR [ebp+0x8]
10024049:	mov    eax,DWORD PTR [ecx]
1002404b:	push   esi
1002404c:	push   DWORD PTR [ebp+0xc]
1002404f:	call   DWORD PTR [eax+0x30]
10024052:	mov    esi,eax
10024054:	test   esi,esi
10024056:	jne    0x1002405f
10024058:	mov    eax,0x8002802b
1002405d:	jmp    0x100240b8
1002405f:	test   edi,edi
10024061:	je     0x100240a5
10024063:	mov    eax,DWORD PTR [esi]
10024065:	and    DWORD PTR [ebp+0x10],0x0
10024069:	lea    ecx,[ebp+0x10]
1002406c:	push   ecx
1002406d:	push   0x1006b878
10024072:	push   esi
10024073:	call   DWORD PTR [eax]
10024075:	mov    edi,eax
10024077:	test   edi,edi
10024079:	jl     0x1002408d
1002407b:	mov    eax,DWORD PTR [ebp+0x10]
1002407e:	test   eax,eax
10024080:	je     0x1002409a
10024082:	push   DWORD PTR [ebp+0x18]
10024085:	mov    ecx,DWORD PTR [eax]
10024087:	push   eax
10024088:	call   DWORD PTR [ecx+0xc]
1002408b:	mov    edi,eax
1002408d:	mov    eax,DWORD PTR [ebp+0x10]
10024090:	test   eax,eax
10024092:	je     0x1002409a
10024094:	mov    ecx,DWORD PTR [eax]
10024096:	push   eax
10024097:	call   DWORD PTR [ecx+0x8]
1002409a:	test   edi,edi
1002409c:	jge    0x100240a5
1002409e:	mov    eax,0x80004005
100240a3:	jmp    0x100240b8
100240a5:	cmp    DWORD PTR [ebp-0x4],0x0
100240a9:	je     0x100240b6
100240ab:	mov    eax,DWORD PTR [ebp+0x14]
100240ae:	mov    DWORD PTR [eax],esi
100240b0:	mov    eax,DWORD PTR [esi]
100240b2:	push   esi
100240b3:	call   DWORD PTR [eax+0x4]
100240b6:	xor    eax,eax
100240b8:	pop    esi
100240b9:	pop    edi
100240ba:	leave  
100240bb:	ret    0x14
100240be:	mov    eax,0x80004001
100240c3:	ret    0x8
100240c6:	xor    eax,eax
100240c8:	ret    0x4
100240cb:	mov    ecx,DWORD PTR [esp+0x4]
100240cf:	lea    eax,[ecx-0x4]
100240d2:	neg    ecx
100240d4:	sbb    ecx,ecx
100240d6:	and    ecx,eax
100240d8:	mov    eax,DWORD PTR [ecx]
100240da:	call   DWORD PTR [eax+0x34]
100240dd:	mov    ecx,DWORD PTR [esp+0x8]
100240e1:	mov    DWORD PTR [ecx],eax
100240e3:	xor    eax,eax
100240e5:	ret    0x8
100240e8:	push   edi
100240e9:	mov    edi,DWORD PTR [esp+0x14]
100240ed:	mov    ecx,0x1007f97c
100240f2:	call   0x10010455
100240f7:	pop    edi
100240f8:	ret    0x10
100240fb:	push   DWORD PTR [esp+0x18]
100240ff:	mov    eax,0x1007f97c
10024104:	push   DWORD PTR [esp+0x14]
10024108:	push   DWORD PTR [esp+0x14]
1002410c:	call   0x10010483
10024111:	ret    0x18
10024114:	push   ebp
10024115:	mov    ebp,esp
10024117:	push   DWORD PTR [ebp+0x28]
1002411a:	mov    eax,0x1007f97c
1002411f:	push   DWORD PTR [ebp+0x24]
10024122:	push   DWORD PTR [ebp+0x20]
10024125:	push   DWORD PTR [ebp+0x1c]
10024128:	push   DWORD PTR [ebp+0x18]
1002412b:	push   DWORD PTR [ebp+0xc]
1002412e:	push   DWORD PTR [ebp+0x8]
10024131:	call   0x10010526
10024136:	pop    ebp
10024137:	ret    0x24
1002413a:	push   0x4
1002413c:	mov    eax,0x10062417
10024141:	call   0x10059a35
10024146:	mov    eax,DWORD PTR [ebp+0x8]
10024149:	call   0x1000468d
1002414e:	push   0x1006cd08
10024153:	lea    ecx,[ebp-0x10]
10024156:	push   ecx
10024157:	mov    ecx,eax
10024159:	call   0x10006b85
1002415e:	and    DWORD PTR [ebp-0x4],0x0
10024162:	push   DWORD PTR [ebp-0x10]
10024165:	push   DWORD PTR [ebp+0x8]
10024168:	call   0x100244f9
1002416d:	test   eax,eax
1002416f:	mov    eax,DWORD PTR [ebp-0x10]
10024172:	setne  bl
10024175:	add    eax,0xfffffff0
10024178:	call   0x10002081
1002417d:	mov    al,bl
1002417f:	call   0x10059b0d
10024184:	ret    
10024185:	push   edi
10024186:	mov    edi,DWORD PTR [esp+0x14]
1002418a:	mov    ecx,0x1007f998
1002418f:	call   0x10010455
10024194:	pop    edi
10024195:	ret    0x10
10024198:	push   DWORD PTR [esp+0x18]
1002419c:	mov    eax,0x1007f998
100241a1:	push   DWORD PTR [esp+0x14]
100241a5:	push   DWORD PTR [esp+0x14]
100241a9:	call   0x10010483
100241ae:	ret    0x18
100241b1:	push   ebp
100241b2:	mov    ebp,esp
100241b4:	push   DWORD PTR [ebp+0x28]
100241b7:	mov    eax,0x1007f998
100241bc:	push   DWORD PTR [ebp+0x24]
100241bf:	push   DWORD PTR [ebp+0x20]
100241c2:	push   DWORD PTR [ebp+0x1c]
100241c5:	push   DWORD PTR [ebp+0x18]
100241c8:	push   DWORD PTR [ebp+0xc]
100241cb:	push   DWORD PTR [ebp+0x8]
100241ce:	call   0x10010526
100241d3:	pop    ebp
100241d4:	ret    0x24
100241d7:	push   edi
100241d8:	mov    edi,DWORD PTR [esp+0x14]
100241dc:	mov    ecx,0x1007f9b4
100241e1:	call   0x10010455
100241e6:	pop    edi
100241e7:	ret    0x10
100241ea:	push   DWORD PTR [esp+0x18]
100241ee:	mov    eax,0x1007f9b4
100241f3:	push   DWORD PTR [esp+0x14]
100241f7:	push   DWORD PTR [esp+0x14]
100241fb:	call   0x10010483
10024200:	ret    0x18
10024203:	push   ebp
10024204:	mov    ebp,esp
10024206:	push   DWORD PTR [ebp+0x28]
10024209:	mov    eax,0x1007f9b4
1002420e:	push   DWORD PTR [ebp+0x24]
10024211:	push   DWORD PTR [ebp+0x20]
10024214:	push   DWORD PTR [ebp+0x1c]
10024217:	push   DWORD PTR [ebp+0x18]
1002421a:	push   DWORD PTR [ebp+0xc]
1002421d:	push   DWORD PTR [ebp+0x8]
10024220:	call   0x10010526
10024225:	pop    ebp
10024226:	ret    0x24
10024229:	push   esi
1002422a:	mov    esi,DWORD PTR [eax]
1002422c:	test   esi,esi
1002422e:	je     0x10024243
10024230:	mov    eax,DWORD PTR [esi]
10024232:	test   eax,eax
10024234:	je     0x1002423c
10024236:	mov    ecx,DWORD PTR [eax]
10024238:	push   eax
10024239:	call   DWORD PTR [ecx+0x8]
1002423c:	push   esi
1002423d:	call   0x10042e92
10024242:	pop    ecx
10024243:	pop    esi
10024244:	ret    
10024245:	push   esi
10024246:	mov    esi,ecx
10024248:	mov    DWORD PTR [esi],0x10071728
1002424e:	mov    DWORD PTR [esi+0x4],0xc0000001
10024255:	mov    ecx,DWORD PTR ds:0x10080c04
1002425b:	mov    eax,DWORD PTR [ecx]
1002425d:	call   DWORD PTR [eax+0x8]
10024260:	mov    esi,DWORD PTR [esi+0xc]
10024263:	test   esi,esi
10024265:	je     0x1002426d
10024267:	mov    eax,DWORD PTR [esi]
10024269:	push   esi
1002426a:	call   DWORD PTR [eax+0x8]
1002426d:	pop    esi
1002426e:	ret    
1002426f:	mov    ecx,DWORD PTR [esp+0x4]
10024273:	dec    DWORD PTR [ecx+0x4]
10024276:	push   esi
10024277:	mov    esi,DWORD PTR [ecx+0x4]
1002427a:	jne    0x10024287
1002427c:	test   ecx,ecx
1002427e:	je     0x10024287
10024280:	mov    eax,DWORD PTR [ecx]
10024282:	push   0x1
10024284:	call   DWORD PTR [eax+0x38]
10024287:	mov    eax,esi
10024289:	pop    esi
1002428a:	ret    0x4
1002428d:	push   ebx
1002428e:	push   DWORD PTR [esp+0xc]
10024292:	mov    ebx,DWORD PTR [esp+0x14]
10024296:	push   DWORD PTR [esp+0xc]
1002429a:	mov    eax,0x10070aa0
1002429f:	call   0x10010334
100242a4:	pop    ebx
100242a5:	ret    0xc
100242a8:	push   esi
100242a9:	mov    esi,ecx
100242ab:	mov    DWORD PTR [esi],0x10071768
100242b1:	mov    DWORD PTR [esi+0x4],0xc0000001
100242b8:	mov    ecx,DWORD PTR ds:0x10080c04
100242be:	mov    eax,DWORD PTR [ecx]
100242c0:	call   DWORD PTR [eax+0x8]
100242c3:	call   0x100243c8
100242c8:	pop    esi
100242c9:	ret    
100242ca:	mov    ecx,DWORD PTR [esp+0x4]
100242ce:	dec    DWORD PTR [ecx+0x4]
100242d1:	push   esi
100242d2:	mov    esi,DWORD PTR [ecx+0x4]
100242d5:	jne    0x100242e2
100242d7:	test   ecx,ecx
100242d9:	je     0x100242e2
100242db:	mov    eax,DWORD PTR [ecx]
100242dd:	push   0x1
100242df:	call   DWORD PTR [eax+0x48]
100242e2:	mov    eax,esi
100242e4:	pop    esi
100242e5:	ret    0x4
100242e8:	push   ebx
100242e9:	push   DWORD PTR [esp+0xc]
100242ed:	mov    ebx,DWORD PTR [esp+0x14]
100242f1:	push   DWORD PTR [esp+0xc]
100242f5:	mov    eax,0x10070ac4
100242fa:	call   0x10010334
100242ff:	pop    ebx
10024300:	ret    0xc
10024303:	push   esi
10024304:	lea    esi,[ecx+0x8]
10024307:	mov    DWORD PTR [ecx],0x10071668
1002430d:	mov    DWORD PTR [ecx+0x4],0x10071678
10024314:	mov    DWORD PTR [esi],0x1007168c
1002431a:	mov    DWORD PTR [ecx+0xc],0x100716c4
10024321:	mov    DWORD PTR [ecx+0x24],0x100716d8
10024328:	mov    DWORD PTR [ecx+0x28],0xc0000001
1002432f:	mov    ecx,DWORD PTR ds:0x10080c04
10024335:	mov    eax,DWORD PTR [ecx]
10024337:	call   DWORD PTR [eax+0x8]
1002433a:	mov    ecx,esi
1002433c:	pop    esi
1002433d:	jmp    0x10023ef0
10024342:	mov    eax,DWORD PTR [esp+0x4]
10024346:	inc    DWORD PTR [eax+0x28]
10024349:	mov    eax,DWORD PTR [eax+0x28]
1002434c:	ret    0x4
1002434f:	mov    eax,DWORD PTR [esp+0x4]
10024353:	dec    DWORD PTR [eax+0x28]
10024356:	push   esi
10024357:	mov    esi,DWORD PTR [eax+0x28]
1002435a:	jne    0x1002436a
1002435c:	test   eax,eax
1002435e:	je     0x1002436a
10024360:	lea    ecx,[eax+0x8]
10024363:	mov    eax,DWORD PTR [ecx]
10024365:	push   0x1
10024367:	call   DWORD PTR [eax+0x2c]
1002436a:	mov    eax,esi
1002436c:	pop    esi
1002436d:	ret    0x4
10024370:	push   ebx
10024371:	push   DWORD PTR [esp+0xc]
10024375:	mov    ebx,DWORD PTR [esp+0x14]
10024379:	push   DWORD PTR [esp+0xc]
1002437d:	mov    eax,0x10070568
10024382:	call   0x10010334
10024387:	pop    ebx
10024388:	ret    0xc
1002438b:	jmp    0x100244c4
10024390:	push   esi
10024391:	mov    esi,ecx
10024393:	call   0x10024245
10024398:	test   BYTE PTR [esp+0x8],0x1
1002439d:	je     0x100243a6
1002439f:	push   esi
100243a0:	call   0x10042e92
100243a5:	pop    ecx
100243a6:	mov    eax,esi
100243a8:	pop    esi
100243a9:	ret    0x4
100243ac:	push   esi
100243ad:	mov    esi,ecx
100243af:	call   0x100242a8
100243b4:	test   BYTE PTR [esp+0x8],0x1
100243b9:	je     0x100243c2
100243bb:	push   esi
100243bc:	call   0x10042e92
100243c1:	pop    ecx
100243c2:	mov    eax,esi
100243c4:	pop    esi
100243c5:	ret    0x4
100243c8:	mov    eax,DWORD PTR [esi+0x38]
100243cb:	test   eax,eax
100243cd:	je     0x100243d5
100243cf:	mov    ecx,DWORD PTR [eax]
100243d1:	push   eax
100243d2:	call   DWORD PTR [ecx+0x8]
100243d5:	push   edi
100243d6:	lea    edi,[esi+0x30]
100243d9:	call   0x100025c2
100243de:	push   0x0
100243e0:	push   0x1
100243e2:	lea    ecx,[esi+0x8]
100243e5:	call   0x100012f0
100243ea:	pop    edi
100243eb:	ret    
100243ec:	push   esi
100243ed:	mov    esi,ecx
100243ef:	call   0x10024303
100243f4:	test   BYTE PTR [esp+0x8],0x1
100243f9:	je     0x10024402
100243fb:	push   esi
100243fc:	call   0x10042e92
10024401:	pop    ecx
10024402:	mov    eax,esi
10024404:	pop    esi
10024405:	ret    0x4
10024408:	xor    eax,eax
1002440a:	mov    DWORD PTR [esi+0x4],eax
1002440d:	mov    DWORD PTR [esi+0x10],eax
10024410:	mov    DWORD PTR [esi+0xc],eax
10024413:	mov    DWORD PTR [esi+0x8],eax
10024416:	mov    DWORD PTR [esi+0x14],eax
10024419:	mov    DWORD PTR [esi+0x18],eax
1002441c:	mov    DWORD PTR [esi],0x100717b4
10024422:	mov    ecx,DWORD PTR ds:0x10080c04
10024428:	mov    eax,DWORD PTR [ecx]
1002442a:	call   DWORD PTR [eax+0x4]
1002442d:	mov    eax,esi
1002442f:	ret    
10024430:	push   esi
10024431:	mov    esi,ecx
10024433:	mov    DWORD PTR [esi],0x100717b4
10024439:	mov    DWORD PTR [esi+0x18],0xc0000001
10024440:	mov    ecx,DWORD PTR ds:0x10080c04
10024446:	mov    eax,DWORD PTR [ecx]
10024448:	call   DWORD PTR [eax+0x8]
1002444b:	mov    ecx,esi
1002444d:	pop    esi
1002444e:	jmp    0x100246ea
10024453:	mov    eax,DWORD PTR [esp+0x4]
10024457:	inc    DWORD PTR [eax+0x18]
1002445a:	mov    eax,DWORD PTR [eax+0x18]
1002445d:	ret    0x4
10024460:	mov    ecx,DWORD PTR [esp+0x4]
10024464:	dec    DWORD PTR [ecx+0x18]
10024467:	push   esi
10024468:	mov    esi,DWORD PTR [ecx+0x18]
1002446b:	jne    0x10024478
1002446d:	test   ecx,ecx
1002446f:	je     0x10024478
10024471:	mov    eax,DWORD PTR [ecx]
10024473:	push   0x1
10024475:	call   DWORD PTR [eax+0x1c]
10024478:	mov    eax,esi
1002447a:	pop    esi
1002447b:	ret    0x4
1002447e:	push   ebx
1002447f:	push   DWORD PTR [esp+0xc]
10024483:	mov    ebx,DWORD PTR [esp+0x14]
10024487:	push   DWORD PTR [esp+0xc]
1002448b:	mov    eax,0x1007158c
10024490:	call   0x10010334
10024495:	pop    ebx
10024496:	ret    0xc
10024499:	mov    eax,DWORD PTR [esp+0x4]
1002449d:	mov    ecx,DWORD PTR [eax+0x8]
100244a0:	mov    DWORD PTR [eax+0x10],ecx
100244a3:	xor    eax,eax
100244a5:	ret    0x4
100244a8:	push   esi
100244a9:	mov    esi,ecx
100244ab:	call   0x10024430
100244b0:	test   BYTE PTR [esp+0x8],0x1
100244b5:	je     0x100244be
100244b7:	push   esi
100244b8:	call   0x10042e92
100244bd:	pop    ecx
100244be:	mov    eax,esi
100244c0:	pop    esi
100244c1:	ret    0x4
100244c4:	push   ebp
100244c5:	mov    ebp,esp
100244c7:	and    esp,0xfffffff8
100244ca:	push   ecx
100244cb:	push   ecx
100244cc:	push   ebx
100244cd:	push   edi
100244ce:	mov    edi,eax
100244d0:	mov    eax,DWORD PTR [edi+0x4]
100244d3:	mov    ecx,DWORD PTR [eax]
100244d5:	push   eax
100244d6:	push   edi
100244d7:	push   ecx
100244d8:	push   edi
100244d9:	lea    ebx,[esp+0x18]
100244dd:	call   0x10020f59
100244e2:	push   DWORD PTR [edi+0x4]
100244e5:	call   0x10042e92
100244ea:	and    DWORD PTR [edi+0x4],0x0
100244ee:	and    DWORD PTR [edi+0x8],0x0
100244f2:	pop    ecx
100244f3:	pop    edi
100244f4:	pop    ebx
100244f5:	mov    esp,ebp
100244f7:	pop    ebp
100244f8:	ret    
100244f9:	cmp    DWORD PTR [esp+0x8],0x0
100244fe:	jne    0x1002450a
10024500:	push   0x80004005
10024505:	call   0x10001f45
1002450a:	mov    eax,DWORD PTR [esp+0x4]
1002450e:	mov    eax,DWORD PTR [eax]
10024510:	push   DWORD PTR [esp+0x8]
10024514:	push   eax
10024515:	call   0x100466f4
1002451a:	pop    ecx
1002451b:	pop    ecx
1002451c:	ret    0x8
1002451f:	push   0x30
10024521:	call   0x1004349e
10024526:	xor    edx,edx
10024528:	cmp    eax,edx
1002452a:	pop    ecx
1002452b:	je     0x1002452f
1002452d:	mov    DWORD PTR [eax],edx
1002452f:	lea    ecx,[eax+0x4]
10024532:	cmp    ecx,edx
10024534:	je     0x10024538
10024536:	mov    DWORD PTR [ecx],edx
10024538:	lea    ecx,[eax+0x8]
1002453b:	cmp    ecx,edx
1002453d:	je     0x10024541
1002453f:	mov    DWORD PTR [ecx],edx
10024541:	mov    BYTE PTR [eax+0x2c],0x1
10024545:	mov    BYTE PTR [eax+0x2d],dl
10024548:	ret    
10024549:	push   0xc
1002454b:	mov    eax,0x10061af9
10024550:	call   0x10059a68
10024555:	mov    edi,DWORD PTR [ebp+0x8]
10024558:	xor    ebx,ebx
1002455a:	cmp    edi,ebx
1002455c:	jne    0x10024565
1002455e:	mov    eax,0x80004003
10024563:	jmp    0x100245d3
10024565:	push   0x2c
10024567:	mov    DWORD PTR [edi],ebx
10024569:	mov    DWORD PTR [ebp-0x14],0x8007000e
10024570:	mov    DWORD PTR [ebp-0x18],ebx
10024573:	mov    DWORD PTR [ebp-0x4],ebx
10024576:	call   0x1004349e
1002457b:	mov    esi,eax
1002457d:	cmp    esi,ebx
1002457f:	pop    ecx
10024580:	je     0x100245b6
10024582:	call   0x10022487
10024587:	mov    DWORD PTR [esi],0x10071668
1002458d:	mov    DWORD PTR [esi+0x4],0x10071678
10024594:	mov    DWORD PTR [esi+0x8],0x1007168c
1002459b:	mov    DWORD PTR [esi+0xc],0x100716c4
100245a2:	mov    DWORD PTR [esi+0x24],0x100716d8
100245a9:	mov    ecx,DWORD PTR ds:0x10080c04
100245af:	mov    eax,DWORD PTR [ecx]
100245b1:	call   DWORD PTR [eax+0x4]
100245b4:	jmp    0x100245c6
100245b6:	xor    esi,esi
100245b8:	jmp    0x100245c6
100245ba:	mov    eax,0x100245c0
100245bf:	ret    
100245c0:	mov    edi,DWORD PTR [ebp+0x8]
100245c3:	mov    esi,DWORD PTR [ebp-0x18]
100245c6:	test   esi,esi
100245c8:	je     0x100245ce
100245ca:	and    DWORD PTR [ebp-0x14],0x0
100245ce:	mov    eax,DWORD PTR [ebp-0x14]
100245d1:	mov    DWORD PTR [edi],esi
100245d3:	call   0x10059b0d
100245d8:	ret    0x4
100245db:	push   0xc
100245dd:	mov    eax,0x1005fa14
100245e2:	call   0x10059a68
100245e7:	mov    ebx,DWORD PTR [ebp+0x8]
100245ea:	xor    edi,edi
100245ec:	cmp    ebx,edi
100245ee:	jne    0x100245f7
100245f0:	mov    eax,0x80004003
100245f5:	jmp    0x10024650
100245f7:	push   0x10
100245f9:	mov    DWORD PTR [ebx],edi
100245fb:	mov    DWORD PTR [ebp-0x14],0x8007000e
10024602:	mov    DWORD PTR [ebp-0x4],edi
10024605:	call   0x1004349e
1002460a:	mov    esi,eax
1002460c:	cmp    esi,edi
1002460e:	pop    ecx
1002460f:	je     0x1002462d
10024611:	mov    DWORD PTR [esi+0x4],edi
10024614:	mov    DWORD PTR [esi+0x8],edi
10024617:	mov    DWORD PTR [esi+0xc],edi
1002461a:	mov    DWORD PTR [esi],0x10071728
10024620:	mov    ecx,DWORD PTR ds:0x10080c04
10024626:	mov    eax,DWORD PTR [ecx]
10024628:	call   DWORD PTR [eax+0x4]
1002462b:	jmp    0x1002463e
1002462d:	xor    esi,esi
1002462f:	jmp    0x1002463e
10024631:	mov    eax,0x10024637
10024636:	ret    
10024637:	mov    ebx,DWORD PTR [ebp+0x8]
1002463a:	xor    edi,edi
1002463c:	mov    esi,edi
1002463e:	cmp    esi,edi
10024640:	je     0x1002464b
10024642:	inc    DWORD PTR [esi+0x4]
10024645:	dec    DWORD PTR [esi+0x4]
10024648:	mov    DWORD PTR [ebp-0x14],edi
1002464b:	mov    eax,DWORD PTR [ebp-0x14]
1002464e:	mov    DWORD PTR [ebx],esi
10024650:	call   0x10059b0d
10024655:	ret    0x4
10024658:	push   0xc
1002465a:	mov    eax,0x100600ba
1002465f:	call   0x10059a68
10024664:	mov    eax,DWORD PTR [ebp+0x8]
10024667:	xor    ebx,ebx
10024669:	cmp    eax,ebx
1002466b:	jne    0x10024674
1002466d:	mov    eax,0x80004003
10024672:	jmp    0x100246e2
10024674:	push   0x3c
10024676:	mov    DWORD PTR [eax],ebx
10024678:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002467f:	mov    DWORD PTR [ebp-0x4],ebx
10024682:	call   0x1004349e
10024687:	mov    edi,eax
10024689:	cmp    edi,ebx
1002468b:	pop    ecx
1002468c:	je     0x100246bf
1002468e:	lea    esi,[edi+0x8]
10024691:	mov    DWORD PTR [edi+0x4],ebx
10024694:	call   0x10004059
10024699:	or     DWORD PTR [edi+0x28],0xffffffff
1002469d:	mov    DWORD PTR [edi+0x24],ebx
100246a0:	mov    BYTE PTR [edi+0x2c],bl
100246a3:	mov    DWORD PTR [edi+0x30],ebx
100246a6:	mov    DWORD PTR [edi+0x34],ebx
100246a9:	mov    DWORD PTR [edi+0x38],ebx
100246ac:	mov    DWORD PTR [edi],0x10071768
100246b2:	mov    ecx,DWORD PTR ds:0x10080c04
100246b8:	mov    eax,DWORD PTR [ecx]
100246ba:	call   DWORD PTR [eax+0x4]
100246bd:	jmp    0x100246cd
100246bf:	xor    edi,edi
100246c1:	jmp    0x100246cd
100246c3:	mov    eax,0x100246c9
100246c8:	ret    
100246c9:	xor    ebx,ebx
100246cb:	mov    edi,ebx
100246cd:	cmp    edi,ebx
100246cf:	je     0x100246da
100246d1:	inc    DWORD PTR [edi+0x4]
100246d4:	dec    DWORD PTR [edi+0x4]
100246d7:	mov    DWORD PTR [ebp-0x14],ebx
100246da:	mov    eax,DWORD PTR [ebp+0x8]
100246dd:	mov    DWORD PTR [eax],edi
100246df:	mov    eax,DWORD PTR [ebp-0x14]
100246e2:	call   0x10059b0d
100246e7:	ret    0x4
100246ea:	push   0x4
100246ec:	mov    eax,0x1005f5d4
100246f1:	call   0x10059a35
100246f6:	mov    esi,ecx
100246f8:	mov    DWORD PTR [ebp-0x10],esi
100246fb:	and    DWORD PTR [ebp-0x4],0x0
100246ff:	test   BYTE PTR [esi+0x14],0x2
10024703:	je     0x10024727
10024705:	mov    edi,DWORD PTR [esi+0x8]
10024708:	jmp    0x10024719
1002470a:	mov    eax,DWORD PTR [edi]
1002470c:	test   eax,eax
1002470e:	je     0x10024716
10024710:	mov    ecx,DWORD PTR [eax]
10024712:	push   eax
10024713:	call   DWORD PTR [ecx+0x8]
10024716:	add    edi,0x4
10024719:	cmp    edi,DWORD PTR [esi+0xc]
1002471c:	jne    0x1002470a
1002471e:	push   DWORD PTR [esi+0x8]
10024721:	call   0x100433c0
10024726:	pop    ecx
10024727:	or     DWORD PTR [ebp-0x4],0xffffffff
1002472b:	mov    esi,DWORD PTR [esi+0x4]
1002472e:	test   esi,esi
10024730:	je     0x10024738
10024732:	mov    eax,DWORD PTR [esi]
10024734:	push   esi
10024735:	call   DWORD PTR [eax+0x8]
10024738:	call   0x10059b0d
1002473d:	ret    
1002473e:	push   0x8
10024740:	mov    eax,0x1006009f
10024745:	call   0x10059a35
1002474a:	mov    eax,DWORD PTR [ebp+0xc]
1002474d:	xor    edi,edi
1002474f:	cmp    eax,edi
10024751:	mov    DWORD PTR [ebp-0x10],edi
10024754:	mov    ebx,0x80004003
10024759:	je     0x100247f4
1002475f:	mov    DWORD PTR [eax],edi
10024761:	lea    eax,[ebp-0x14]
10024764:	push   eax
10024765:	call   0x10024821
1002476a:	mov    ebx,eax
1002476c:	cmp    ebx,edi
1002476e:	jl     0x100247f4
10024774:	mov    esi,DWORD PTR [ebp+0x8]
10024777:	test   BYTE PTR [esi+0x14],0x2
1002477b:	je     0x10024795
1002477d:	mov    eax,DWORD PTR [esi]
1002477f:	push   esi
10024780:	mov    DWORD PTR [ebp+0x8],esi
10024783:	call   DWORD PTR [eax+0x4]
10024786:	mov    DWORD PTR [ebp-0x4],edi
10024789:	lea    eax,[ebp+0x8]
1002478c:	mov    DWORD PTR [ebp-0x10],0x1
10024793:	jmp    0x10024798
10024795:	lea    eax,[esi+0x4]
10024798:	mov    eax,DWORD PTR [eax]
1002479a:	push   edi
1002479b:	mov    edi,DWORD PTR [ebp-0x14]
1002479e:	push   eax
1002479f:	push   DWORD PTR [esi+0xc]
100247a2:	push   DWORD PTR [esi+0x8]
100247a5:	push   edi
100247a6:	call   0x10022061
100247ab:	or     DWORD PTR [ebp-0x4],0xffffffff
100247af:	test   BYTE PTR [ebp-0x10],0x1
100247b3:	mov    ebx,eax
100247b5:	je     0x100247c4
100247b7:	mov    eax,DWORD PTR [ebp+0x8]
100247ba:	test   eax,eax
100247bc:	je     0x100247c4
100247be:	mov    ecx,DWORD PTR [eax]
100247c0:	push   eax
100247c1:	call   DWORD PTR [ecx+0x8]
100247c4:	test   ebx,ebx
100247c6:	jl     0x100247e7
100247c8:	mov    eax,DWORD PTR [esi+0x10]
100247cb:	mov    ebx,DWORD PTR [ebp+0xc]
100247ce:	push   0x10070a70
100247d3:	mov    DWORD PTR [edi+0x10],eax
100247d6:	push   edi
100247d7:	mov    eax,0x1007158c
100247dc:	call   0x10010334
100247e1:	mov    ebx,eax
100247e3:	test   ebx,ebx
100247e5:	jge    0x100247f4
100247e7:	test   edi,edi
100247e9:	je     0x100247f4
100247eb:	mov    eax,DWORD PTR [edi]
100247ed:	push   0x1
100247ef:	mov    ecx,edi
100247f1:	call   DWORD PTR [eax+0x1c]
100247f4:	mov    eax,ebx
100247f6:	call   0x10059b0d
100247fb:	ret    0x8
100247fe:	test   ecx,ecx
10024800:	je     0x10024806
10024802:	test   eax,eax
10024804:	jne    0x10024810
10024806:	push   0x80004005
1002480b:	call   0x10001f45
10024810:	mov    eax,DWORD PTR [eax]
10024812:	test   eax,eax
10024814:	mov    DWORD PTR [ecx],eax
10024816:	je     0x1002481e
10024818:	mov    ecx,DWORD PTR [eax]
1002481a:	push   eax
1002481b:	call   DWORD PTR [ecx+0x4]
1002481e:	xor    eax,eax
10024820:	ret    
10024821:	push   0xc
10024823:	mov    eax,0x1005f9f9
10024828:	call   0x10059a68
1002482d:	mov    edi,DWORD PTR [ebp+0x8]
10024830:	xor    esi,esi
10024832:	cmp    edi,esi
10024834:	jne    0x1002483d
10024836:	mov    eax,0x80004003
1002483b:	jmp    0x1002487e
1002483d:	push   0x1c
1002483f:	mov    DWORD PTR [edi],esi
10024841:	mov    DWORD PTR [ebp-0x14],0x8007000e
10024848:	mov    DWORD PTR [ebp-0x18],esi
1002484b:	mov    DWORD PTR [ebp-0x4],esi
1002484e:	call   0x1004349e
10024853:	cmp    eax,esi
10024855:	pop    ecx
10024856:	je     0x10024861
10024858:	mov    esi,eax
1002485a:	call   0x10024408
1002485f:	jmp    0x10024871
10024861:	xor    eax,eax
10024863:	jmp    0x10024871
10024865:	mov    eax,0x1002486b
1002486a:	ret    
1002486b:	mov    edi,DWORD PTR [ebp+0x8]
1002486e:	mov    eax,DWORD PTR [ebp-0x18]
10024871:	test   eax,eax
10024873:	je     0x10024879
10024875:	and    DWORD PTR [ebp-0x14],0x0
10024879:	mov    DWORD PTR [edi],eax
1002487b:	mov    eax,DWORD PTR [ebp-0x14]
1002487e:	call   0x10059b0d
10024883:	ret    0x4
10024886:	sub    DWORD PTR [esp+0x4],0x4
1002488b:	jmp    0x10024370
10024890:	sub    DWORD PTR [esp+0x4],0x24
10024895:	jmp    0x10024370
1002489a:	sub    DWORD PTR [esp+0x4],0x8
1002489f:	jmp    0x10024370
100248a4:	sub    DWORD PTR [esp+0x4],0xc
100248a9:	jmp    0x10024370
100248ae:	sub    DWORD PTR [esp+0x4],0x4
100248b3:	jmp    0x1002434f
100248b8:	sub    DWORD PTR [esp+0x4],0x24
100248bd:	jmp    0x1002434f
100248c2:	sub    DWORD PTR [esp+0x4],0x8
100248c7:	jmp    0x1002434f
100248cc:	sub    DWORD PTR [esp+0x4],0x4
100248d1:	jmp    0x10024342
100248d6:	sub    DWORD PTR [esp+0x4],0x24
100248db:	jmp    0x10024342
100248e0:	sub    DWORD PTR [esp+0x4],0xc
100248e5:	jmp    0x1002434f
100248ea:	sub    DWORD PTR [esp+0x4],0x8
100248ef:	jmp    0x10024342
100248f4:	sub    DWORD PTR [esp+0x4],0xc
100248f9:	jmp    0x10024342
100248fe:	sub    ecx,0x8
10024901:	jmp    0x10022586
10024906:	sub    ecx,0x8
10024909:	jmp    0x100243ec
1002490e:	push   0x0
10024910:	mov    eax,0x1005f9de
10024915:	call   0x10059a35
1002491a:	mov    esi,DWORD PTR [ebp+0x8]
1002491d:	push   DWORD PTR [ebp+0xc]
10024920:	mov    ecx,esi
10024922:	call   0x100011a7
10024927:	push   DWORD PTR [ebp+0x10]
1002492a:	and    DWORD PTR [ebp-0x4],0x0
1002492e:	lea    ecx,[esi+0x1c]
10024931:	call   0x100011a7
10024936:	push   DWORD PTR [ebp+0x14]
10024939:	lea    ecx,[esi+0x38]
1002493c:	mov    BYTE PTR [ebp-0x4],0x1
10024940:	call   0x100011a7
10024945:	mov    eax,DWORD PTR [ebp+0x18]
10024948:	mov    DWORD PTR [esi+0x58],eax
1002494b:	mov    eax,DWORD PTR [ebp+0x1c]
1002494e:	mov    DWORD PTR [esi+0x5c],eax
10024951:	mov    eax,DWORD PTR [ebp+0x20]
10024954:	mov    DWORD PTR [esi+0x60],eax
10024957:	mov    eax,DWORD PTR [ebp+0x24]
1002495a:	mov    DWORD PTR [esi+0x64],eax
1002495d:	mov    eax,esi
1002495f:	call   0x10059b0d
10024964:	ret    0x20
10024967:	test   BYTE PTR [esp+0x4],0x1
1002496c:	push   esi
1002496d:	mov    esi,ecx
1002496f:	mov    DWORD PTR [esi],0x10071840
10024975:	je     0x1002497e
10024977:	push   esi
10024978:	call   0x10042e92
1002497d:	pop    ecx
1002497e:	mov    eax,esi
10024980:	pop    esi
10024981:	ret    0x4
10024984:	push   ebp
10024985:	mov    ebp,esp
10024987:	push   ecx
10024988:	push   ebx
10024989:	mov    ebx,DWORD PTR ds:0x10066130
1002498f:	push   esi
10024990:	xor    esi,esi
10024992:	push   esi
10024993:	push   esi
10024994:	mov    DWORD PTR [edi],0x10071848
1002499a:	mov    DWORD PTR [edi+0x4],esi
1002499d:	push   esi
1002499e:	mov    DWORD PTR [edi+0x8],esi
100249a1:	push   esi
100249a2:	mov    DWORD PTR [edi+0x1c],eax
100249a5:	call   ebx
100249a7:	push   esi
100249a8:	push   esi
100249a9:	push   esi
100249aa:	push   esi
100249ab:	mov    DWORD PTR [ebp-0x4],eax
100249ae:	call   ebx
100249b0:	push   DWORD PTR [ebp-0x4]
100249b3:	lea    esi,[edi+0x4]
100249b6:	mov    ebx,eax
100249b8:	call   0x10004989
100249bd:	push   ebx
100249be:	lea    esi,[edi+0x8]
100249c1:	call   0x10004989
100249c6:	pop    esi
100249c7:	mov    eax,edi
100249c9:	pop    ebx
100249ca:	leave  
100249cb:	ret    
100249cc:	push   esi
100249cd:	mov    esi,ecx
100249cf:	mov    DWORD PTR [esi],0x10071848
100249d5:	mov    eax,DWORD PTR [esi+0x8]
100249d8:	test   eax,eax
100249da:	push   edi
100249db:	mov    edi,DWORD PTR ds:0x10066070
100249e1:	je     0x100249e6
100249e3:	push   eax
100249e4:	call   edi
100249e6:	and    DWORD PTR [esi+0x8],0x0
100249ea:	mov    eax,DWORD PTR [esi+0x4]
100249ed:	test   eax,eax
100249ef:	je     0x100249f4
100249f1:	push   eax
100249f2:	call   edi
100249f4:	and    DWORD PTR [esi+0x4],0x0
100249f8:	test   BYTE PTR [esp+0xc],0x1
100249fd:	mov    DWORD PTR [esi],0x10071840
10024a03:	je     0x10024a0c
10024a05:	push   esi
10024a06:	call   0x10042e92
10024a0b:	pop    ecx
10024a0c:	pop    edi
10024a0d:	mov    eax,esi
10024a0f:	pop    esi
10024a10:	ret    0x4
10024a13:	push   ebp
10024a14:	mov    ebp,esp
10024a16:	sub    esp,0xc
10024a19:	push   ebx
10024a1a:	push   esi
10024a1b:	mov    esi,ecx
10024a1d:	mov    eax,DWORD PTR [esi+0x4]
10024a20:	mov    DWORD PTR [ebp-0xc],eax
10024a23:	mov    eax,ds:0x10080fa0
10024a28:	mov    DWORD PTR [ebp-0x8],eax
10024a2b:	mov    eax,DWORD PTR [esi+0x1c]
10024a2e:	mov    eax,DWORD PTR [eax+0x30]
10024a31:	push   0xffffffff
10024a33:	mov    DWORD PTR [ebp-0x4],eax
10024a36:	xor    ebx,ebx
10024a38:	push   ebx
10024a39:	lea    eax,[ebp-0xc]
10024a3c:	push   eax
10024a3d:	push   0x3
10024a3f:	call   DWORD PTR ds:0x100660e8
10024a45:	test   eax,eax
10024a47:	je     0x10024a62
10024a49:	mov    eax,DWORD PTR [ebp+0x10]
10024a4c:	mov    DWORD PTR [eax],ebx
10024a4e:	mov    BYTE PTR [esi+0x18],bl
10024a51:	push   DWORD PTR [esi+0x8]
10024a54:	call   DWORD PTR ds:0x10066110
10024a5a:	pop    esi
10024a5b:	mov    al,bl
10024a5d:	pop    ebx
10024a5e:	leave  
10024a5f:	ret    0xc
10024a62:	push   edi
10024a63:	mov    edi,DWORD PTR [esi+0x10]
10024a66:	cmp    edi,DWORD PTR [ebp+0xc]
10024a69:	jb     0x10024a6e
10024a6b:	mov    edi,DWORD PTR [ebp+0xc]
10024a6e:	push   edi
10024a6f:	push   DWORD PTR [esi+0xc]
10024a72:	push   DWORD PTR [ebp+0x8]
10024a75:	call   0x10045180
10024a7a:	mov    eax,DWORD PTR [ebp+0x10]
10024a7d:	mov    DWORD PTR [eax],edi
10024a7f:	add    esp,0xc
10024a82:	mov    DWORD PTR [esi+0x14],edi
10024a85:	mov    BYTE PTR [esi+0x18],0x1
10024a89:	mov    bl,0x1
10024a8b:	pop    edi
10024a8c:	jmp    0x10024a51
10024a8e:	test   BYTE PTR [esp+0x4],0x1
10024a93:	push   esi
10024a94:	mov    esi,ecx
10024a96:	mov    DWORD PTR [esi],0x10071840
10024a9c:	je     0x10024aa5
10024a9e:	push   esi
10024a9f:	call   0x10042e92
10024aa4:	pop    ecx
10024aa5:	mov    eax,esi
10024aa7:	pop    esi
10024aa8:	ret    0x4
10024aab:	mov    DWORD PTR [eax],0x10071840
10024ab1:	ret    
10024ab2:	push   ebp
10024ab3:	mov    ebp,esp
10024ab5:	sub    esp,0x21c
10024abb:	mov    eax,DWORD PTR [ebp+0x8]
10024abe:	push   ebx
10024abf:	push   esi
10024ac0:	mov    DWORD PTR [ebp-0x8],eax
10024ac3:	mov    eax,DWORD PTR [ebp+0xc]
10024ac6:	push   edi
10024ac7:	xor    edi,edi
10024ac9:	mov    esi,ecx
10024acb:	mov    DWORD PTR [ebp-0xc],eax
10024ace:	mov    eax,DWORD PTR [esi+0x4]
10024ad1:	push   edi
10024ad2:	mov    DWORD PTR [ebp-0x4],edi
10024ad5:	mov    DWORD PTR [ebp+0x8],edi
10024ad8:	mov    DWORD PTR [ebp+0xc],edi
10024adb:	push   DWORD PTR [eax+0x30]
10024ade:	call   DWORD PTR ds:0x10066084
10024ae4:	test   eax,eax
10024ae6:	je     0x10024b60
10024ae8:	xor    ebx,ebx
10024aea:	inc    ebx
10024aeb:	mov    eax,DWORD PTR [esi+0x4]
10024aee:	mov    DWORD PTR [ebp-0x21c],edi
10024af4:	mov    DWORD PTR [ebp-0x14],edi
10024af7:	mov    DWORD PTR [ebp-0x10],0x64
10024afe:	mov    ecx,DWORD PTR [eax]
10024b00:	mov    DWORD PTR [ebp-0x218],ecx
10024b06:	mov    DWORD PTR [ebp-0x118],edi
10024b0c:	mov    DWORD PTR [ebp-0x21c],ebx
10024b12:	mov    ecx,DWORD PTR [eax]
10024b14:	mov    DWORD PTR [ebp-0x114],ecx
10024b1a:	lea    ecx,[ebp+0x8]
10024b1d:	push   ecx
10024b1e:	lea    ecx,[ebp-0x14]
10024b21:	push   ecx
10024b22:	lea    ecx,[ebp-0x118]
10024b28:	push   ecx
10024b29:	push   edi
10024b2a:	lea    ecx,[ebp-0x21c]
10024b30:	push   ecx
10024b31:	push   edi
10024b32:	mov    DWORD PTR [ebp-0x118],ebx
10024b38:	call   DWORD PTR [eax+0x94]
10024b3e:	cmp    eax,0xffffffff
10024b41:	je     0x10024b69
10024b43:	cmp    DWORD PTR [ebp-0x118],ebx
10024b49:	je     0x10024b74
10024b4b:	cmp    eax,edi
10024b4d:	mov    eax,DWORD PTR [esi+0x4]
10024b50:	jg     0x10024b80
10024b52:	push   edi
10024b53:	push   DWORD PTR [eax+0x30]
10024b56:	call   DWORD PTR ds:0x10066084
10024b5c:	test   eax,eax
10024b5e:	jne    0x10024aeb
10024b60:	mov    eax,DWORD PTR [ebp+0x10]
10024b63:	mov    DWORD PTR [eax],edi
10024b65:	xor    al,al
10024b67:	jmp    0x10024bab
10024b69:	mov    eax,DWORD PTR [esi+0x4]
10024b6c:	mov    ecx,DWORD PTR [ebp+0x8]
10024b6f:	mov    DWORD PTR [eax+0x38],ecx
10024b72:	jmp    0x10024b65
10024b74:	mov    eax,DWORD PTR [esi+0x4]
10024b77:	mov    DWORD PTR [eax+0x38],0x2746
10024b7e:	jmp    0x10024b65
10024b80:	lea    ecx,[ebp+0x8]
10024b83:	push   ecx
10024b84:	push   edi
10024b85:	push   edi
10024b86:	push   edi
10024b87:	lea    ecx,[ebp+0xc]
10024b8a:	push   ecx
10024b8b:	lea    ecx,[ebp-0x4]
10024b8e:	push   ecx
10024b8f:	push   ebx
10024b90:	lea    ecx,[ebp-0xc]
10024b93:	push   ecx
10024b94:	push   DWORD PTR [eax]
10024b96:	call   DWORD PTR [eax+0x88]
10024b9c:	cmp    eax,0xffffffff
10024b9f:	je     0x10024b69
10024ba1:	mov    eax,DWORD PTR [ebp+0x10]
10024ba4:	mov    ecx,DWORD PTR [ebp-0x4]
10024ba7:	mov    DWORD PTR [eax],ecx
10024ba9:	mov    al,bl
10024bab:	pop    edi
10024bac:	pop    esi
10024bad:	pop    ebx
10024bae:	leave  
10024baf:	ret    0xc
10024bb2:	push   0x0
10024bb4:	mov    eax,0x10061ade
10024bb9:	call   0x10059a35
10024bbe:	mov    esi,DWORD PTR [ebp+0x8]
10024bc1:	xor    ebx,ebx
10024bc3:	mov    BYTE PTR [esi],bl
10024bc5:	mov    BYTE PTR [esi+0x1],bl
10024bc8:	mov    DWORD PTR [esi+0x8],ebx
10024bcb:	mov    DWORD PTR [esi+0xc],ebx
10024bce:	mov    DWORD PTR [esi+0x10],ebx
10024bd1:	mov    DWORD PTR [esi+0x14],ebx
10024bd4:	mov    DWORD PTR [ebp-0x4],ebx
10024bd7:	mov    DWORD PTR [esi+0x1c],ebx
10024bda:	mov    DWORD PTR [esi+0x20],ebx
10024bdd:	mov    DWORD PTR [esi+0x24],ebx
10024be0:	mov    DWORD PTR [esi+0x28],ebx
10024be3:	mov    DWORD PTR [esi+0x2c],ebx
10024be6:	mov    DWORD PTR [esi+0x30],ebx
10024be9:	mov    DWORD PTR [esi+0x34],ebx
10024bec:	mov    eax,DWORD PTR [ebp+0xc]
10024bef:	mov    BYTE PTR [ebp-0x4],0x4
10024bf3:	mov    DWORD PTR [esi+0x50],eax
10024bf6:	lea    eax,[esi+0x38]
10024bf9:	push   eax
10024bfa:	call   DWORD PTR ds:0x1006611c
10024c00:	push   0x20
10024c02:	call   0x1004349e
10024c07:	mov    edi,eax
10024c09:	cmp    edi,ebx
10024c0b:	pop    ecx
10024c0c:	je     0x10024c1a
10024c0e:	mov    eax,DWORD PTR [esi+0x50]
10024c11:	call   0x10024984
10024c16:	mov    edi,eax
10024c18:	jmp    0x10024c1c
10024c1a:	xor    edi,edi
10024c1c:	mov    ecx,DWORD PTR [esi+0x30]
10024c1f:	cmp    edi,ecx
10024c21:	je     0x10024c2d
10024c23:	cmp    ecx,ebx
10024c25:	je     0x10024c2d
10024c27:	mov    eax,DWORD PTR [ecx]
10024c29:	push   0x1
10024c2b:	call   DWORD PTR [eax]
10024c2d:	mov    DWORD PTR [esi+0x30],edi
10024c30:	mov    eax,esi
10024c32:	call   0x10059b0d
10024c37:	ret    0x8
10024c3a:	jmp    0x10025d82
10024c3f:	push   0x0
10024c41:	mov    eax,0x10061ade
10024c46:	call   0x10059a35
10024c4b:	mov    edi,DWORD PTR [ebp+0x8]
10024c4e:	mov    DWORD PTR [ebp-0x4],0x4
10024c55:	mov    ecx,edi
10024c57:	call   0x100258e3
10024c5c:	test   al,al
10024c5e:	jne    0x10024c55
10024c60:	push   edi
10024c61:	call   0x10025ca1
10024c66:	test   al,al
10024c68:	jne    0x10024c60
10024c6a:	lea    eax,[edi+0x38]
10024c6d:	push   eax
10024c6e:	call   DWORD PTR ds:0x10066138
10024c74:	lea    eax,[edi+0x34]
10024c77:	mov    BYTE PTR [ebp-0x4],0x3
10024c7b:	call   0x1000c921
10024c80:	mov    BYTE PTR [ebp-0x4],0x2
10024c84:	mov    ecx,DWORD PTR [edi+0x30]
10024c87:	test   ecx,ecx
10024c89:	je     0x10024c91
10024c8b:	mov    eax,DWORD PTR [ecx]
10024c8d:	push   0x1
10024c8f:	call   DWORD PTR [eax]
10024c91:	mov    BYTE PTR [ebp-0x4],0x1
10024c95:	mov    eax,DWORD PTR [edi+0x2c]
10024c98:	test   eax,eax
10024c9a:	je     0x10024ca2
10024c9c:	mov    ecx,DWORD PTR [eax]
10024c9e:	push   eax
10024c9f:	call   DWORD PTR [ecx+0x8]
10024ca2:	lea    esi,[edi+0x18]
10024ca5:	call   0x10025d82
10024caa:	lea    esi,[edi+0x4]
10024cad:	call   0x10025d82
10024cb2:	call   0x10059b0d
10024cb7:	ret    0x4
10024cba:	push   0x8
10024cbc:	mov    eax,0x10064d8f
10024cc1:	call   0x10059a68
10024cc6:	mov    edi,ecx
10024cc8:	mov    esi,edx
10024cca:	xor    ebx,ebx
10024ccc:	mov    DWORD PTR [ebp-0x4],ebx
10024ccf:	cmp    DWORD PTR ds:0x10080c7c,0x3
10024cd6:	mov    BYTE PTR [edi],bl
10024cd8:	jne    0x10024cdf
10024cda:	call   0x10004004
10024cdf:	mov    DWORD PTR [ebp-0x14],ebx
10024ce2:	lea    eax,[ebp-0x14]
10024ce5:	push   eax
10024ce6:	mov    BYTE PTR [ebp-0x4],0x1
10024cea:	push   DWORD PTR [esi+0x50]
10024ced:	push   DWORD PTR [ebp+0x8]
10024cf0:	push   0x10080f88
10024cf5:	call   0x10025fe8
10024cfa:	add    esp,0x10
10024cfd:	cmp    al,bl
10024cff:	je     0x10024d13
10024d01:	mov    ecx,DWORD PTR [ebp-0x14]
10024d04:	cmp    ecx,ebx
10024d06:	je     0x10024d1f
10024d08:	mov    DWORD PTR [ebp-0x14],ebx
10024d0b:	call   0x10025954
10024d10:	mov    BYTE PTR [edi],0x1
10024d13:	mov    edi,DWORD PTR [ebp-0x14]
10024d16:	cmp    edi,ebx
10024d18:	je     0x10024d1f
10024d1a:	call   0x10009e75
10024d1f:	call   0x10059b0d
10024d24:	ret    0x4
10024d27:	mov    eax,0x10024d1f
10024d2c:	ret    
10024d2d:	push   ebp
10024d2e:	mov    ebp,esp
10024d30:	and    esp,0xfffffff8
10024d33:	sub    esp,0x120
10024d39:	push   ebx
10024d3a:	push   esi
10024d3b:	xor    esi,esi
10024d3d:	xor    ebx,ebx
10024d3f:	cmp    DWORD PTR [ebp+0xc],esi
10024d42:	jbe    0x10024de7
10024d48:	mov    eax,DWORD PTR [ebp+0x8]
10024d4b:	add    eax,ebx
10024d4d:	mov    DWORD PTR [esp+0x1c],eax
10024d51:	mov    eax,DWORD PTR [ebp+0xc]
10024d54:	sub    eax,ebx
10024d56:	mov    DWORD PTR [esp+0x8],esi
10024d5a:	mov    DWORD PTR [esp+0xc],esi
10024d5e:	mov    DWORD PTR [esp+0x18],eax
10024d62:	mov    eax,DWORD PTR [edi+0x50]
10024d65:	push   esi
10024d66:	push   DWORD PTR [eax+0x30]
10024d69:	call   DWORD PTR ds:0x10066084
10024d6f:	test   eax,eax
10024d71:	mov    eax,DWORD PTR [edi+0x50]
10024d74:	je     0x10024df1
10024d76:	mov    DWORD PTR [esp+0x20],esi
10024d7a:	mov    DWORD PTR [esp+0x10],esi
10024d7e:	mov    DWORD PTR [esp+0x14],0x64
10024d86:	mov    ecx,DWORD PTR [eax]
10024d88:	mov    DWORD PTR [esp+0x24],ecx
10024d8c:	lea    ecx,[esp+0x8]
10024d90:	push   ecx
10024d91:	lea    ecx,[esp+0x14]
10024d95:	push   ecx
10024d96:	push   esi
10024d97:	lea    ecx,[esp+0x2c]
10024d9b:	push   ecx
10024d9c:	push   esi
10024d9d:	push   esi
10024d9e:	mov    DWORD PTR [esp+0x38],0x1
10024da6:	call   DWORD PTR [eax+0x94]
10024dac:	cmp    eax,0xffffffff
10024daf:	je     0x10024dfc
10024db1:	cmp    eax,esi
10024db3:	jle    0x10024d62
10024db5:	mov    eax,DWORD PTR [edi+0x50]
10024db8:	lea    ecx,[esp+0x8]
10024dbc:	push   ecx
10024dbd:	push   esi
10024dbe:	push   esi
10024dbf:	push   esi
10024dc0:	push   esi
10024dc1:	lea    ecx,[esp+0x20]
10024dc5:	push   ecx
10024dc6:	push   0x1
10024dc8:	lea    ecx,[esp+0x34]
10024dcc:	push   ecx
10024dcd:	push   DWORD PTR [eax]
10024dcf:	call   DWORD PTR [eax+0x98]
10024dd5:	cmp    eax,0xffffffff
10024dd8:	je     0x10024dfc
10024dda:	add    ebx,DWORD PTR [esp+0xc]
10024dde:	cmp    DWORD PTR [ebp+0xc],ebx
10024de1:	ja     0x10024d48
10024de7:	mov    al,0x1
10024de9:	pop    esi
10024dea:	pop    ebx
10024deb:	mov    esp,ebp
10024ded:	pop    ebp
10024dee:	ret    0x8
10024df1:	mov    DWORD PTR [eax+0x38],0x2749
10024df8:	xor    al,al
10024dfa:	jmp    0x10024de9
10024dfc:	mov    eax,DWORD PTR [edi+0x50]
10024dff:	mov    ecx,DWORD PTR [esp+0x8]
10024e03:	mov    DWORD PTR [eax+0x38],ecx
10024e06:	jmp    0x10024df8
10024e08:	push   0x8
10024e0a:	mov    eax,0x10063974
10024e0f:	call   0x10059a35
10024e14:	mov    ebx,ecx
10024e16:	push   0x40
10024e18:	call   0x1004349e
10024e1d:	pop    ecx
10024e1e:	mov    DWORD PTR [ebp-0x14],eax
10024e21:	and    DWORD PTR [ebp-0x4],0x0
10024e25:	test   eax,eax
10024e27:	je     0x10024e33
10024e29:	push   eax
10024e2a:	call   0x10008683
10024e2f:	mov    esi,eax
10024e31:	jmp    0x10024e35
10024e33:	xor    esi,esi
10024e35:	mov    DWORD PTR [ebp-0x14],esi
10024e38:	mov    eax,ebx
10024e3a:	mov    DWORD PTR [ebp-0x4],0x1
10024e41:	call   0x1000defc
10024e46:	test   al,al
10024e48:	je     0x10024e9b
10024e4a:	lea    eax,[ebp-0x10]
10024e4d:	push   eax
10024e4e:	call   0x1000dd17
10024e53:	mov    BYTE PTR [ebp-0x4],0x2
10024e57:	mov    ecx,DWORD PTR [eax]
10024e59:	and    DWORD PTR [eax],0x0
10024e5c:	mov    eax,ecx
10024e5e:	mov    ecx,esi
10024e60:	call   0x100086c7
10024e65:	mov    BYTE PTR [ebp-0x4],0x1
10024e69:	mov    edi,DWORD PTR [ebp-0x10]
10024e6c:	test   edi,edi
10024e6e:	je     0x10024e75
10024e70:	call   0x10009e75
10024e75:	mov    eax,DWORD PTR [esi+0x30]
10024e78:	mov    ecx,DWORD PTR [eax+0x18]
10024e7b:	mov    eax,DWORD PTR [eax+0x14]
10024e7e:	mov    edi,DWORD PTR [ebp+0x8]
10024e81:	push   ecx
10024e82:	push   eax
10024e83:	call   0x10024d2d
10024e88:	or     DWORD PTR [ebp-0x4],0xffffffff
10024e8c:	test   al,al
10024e8e:	push   esi
10024e8f:	je     0x10024ea4
10024e91:	call   0x10009eaf
10024e96:	jmp    0x10024e16
10024e9b:	or     DWORD PTR [ebp-0x4],0xffffffff
10024e9f:	test   esi,esi
10024ea1:	je     0x10024ea9
10024ea3:	push   esi
10024ea4:	call   0x10009eaf
10024ea9:	call   0x10059b0d
10024eae:	ret    0x4
10024eb1:	push   esi
10024eb2:	mov    esi,ecx
10024eb4:	cmp    BYTE PTR [esi+0x8],0x0
10024eb8:	jne    0x10024eec
10024eba:	cmp    BYTE PTR [esi+0x9],0x0
10024ebe:	jne    0x10024eec
10024ec0:	push   ebx
10024ec1:	mov    ebx,DWORD PTR [esp+0xc]
10024ec5:	mov    eax,DWORD PTR [ebx+0x18]
10024ec8:	mov    ecx,DWORD PTR [ebx+0x14]
10024ecb:	push   edi
10024ecc:	push   eax
10024ecd:	mov    eax,DWORD PTR [esi+0x4]
10024ed0:	mov    edi,DWORD PTR [eax+0x1c]
10024ed3:	push   ecx
10024ed4:	call   0x10024d2d
10024ed9:	test   al,al
10024edb:	jne    0x10024eea
10024edd:	mov    BYTE PTR [esi+0x9],0x1
10024ee1:	push   DWORD PTR [ebx+0x18]
10024ee4:	call   0x10002080
10024ee9:	pop    ecx
10024eea:	pop    edi
10024eeb:	pop    ebx
10024eec:	pop    esi
10024eed:	ret    0x4
10024ef0:	push   0x8
10024ef2:	mov    eax,0x10064337
10024ef7:	call   0x10059a68
10024efc:	mov    esi,DWORD PTR [ebp+0x10]
10024eff:	push   0xc
10024f01:	call   0x1004349e
10024f06:	xor    ebx,ebx
10024f08:	cmp    eax,ebx
10024f0a:	pop    ecx
10024f0b:	je     0x10024f29
10024f0d:	mov    ecx,DWORD PTR [ebp+0x8]
10024f10:	mov    ecx,DWORD PTR [ecx+0x50]
10024f13:	mov    DWORD PTR [eax+0x4],ecx
10024f16:	mov    cl,BYTE PTR [ebp+0x18]
10024f19:	mov    DWORD PTR [eax],0x10071858
10024f1f:	mov    BYTE PTR [eax+0x8],cl
10024f22:	mov    BYTE PTR [eax+0x9],bl
10024f25:	mov    edi,eax
10024f27:	jmp    0x10024f2b
10024f29:	xor    edi,edi
10024f2b:	mov    DWORD PTR [ebp-0x14],edi
10024f2e:	mov    DWORD PTR [ebp-0x4],ebx
10024f31:	call   0x1000dba0
10024f36:	push   DWORD PTR [ebp+0xc]
10024f39:	mov    ecx,DWORD PTR [ebp+0x14]
10024f3c:	mov    DWORD PTR [esi+0x14],edi
10024f3f:	mov    BYTE PTR [ebp-0x4],0x1
10024f43:	call   0x1000e1e0
10024f48:	cmp    eax,ebx
10024f4a:	mov    DWORD PTR [ebp+0x18],eax
10024f4d:	jne    0x10024f72
10024f4f:	cmp    BYTE PTR [edi+0x9],bl
10024f52:	je     0x10024f72
10024f54:	mov    esi,DWORD PTR [ebp+0x8]
10024f57:	call   0x100258b2
10024f5c:	or     DWORD PTR [ebp-0x4],0xffffffff
10024f60:	mov    eax,DWORD PTR [edi]
10024f62:	push   0x1
10024f64:	mov    ecx,edi
10024f66:	call   DWORD PTR [eax]
10024f68:	xor    eax,eax
10024f6a:	call   0x10059b0d
10024f6f:	ret    0x14
10024f72:	mov    DWORD PTR [ebp-0x4],ebx
10024f75:	call   0x1000dba0
10024f7a:	or     DWORD PTR [ebp-0x4],0xffffffff
10024f7e:	cmp    edi,ebx
10024f80:	mov    DWORD PTR [esi+0x14],ebx
10024f83:	je     0x10024f8d
10024f85:	mov    eax,DWORD PTR [edi]
10024f87:	push   0x1
10024f89:	mov    ecx,edi
10024f8b:	call   DWORD PTR [eax]
10024f8d:	mov    eax,DWORD PTR [ebp+0x18]
10024f90:	jmp    0x10024f6a
10024f92:	push   0x4
10024f94:	call   0x10037980
10024f99:	mov    esi,DWORD PTR [ebp+0x10]
10024f9c:	pop    ecx
10024f9d:	call   0x1000dba0
10024fa2:	xor    ebx,ebx
10024fa4:	push   ebx
10024fa5:	push   ebx
10024fa6:	mov    DWORD PTR [esi+0x14],ebx
10024fa9:	call   0x100479b4
10024fae:	int3   
10024faf:	push   ebp
10024fb0:	mov    ebp,esp
10024fb2:	and    esp,0xfffffff8
10024fb5:	push   0xffffffff
10024fb7:	push   0x10065040
10024fbc:	mov    eax,fs:0x0
10024fc2:	push   eax
10024fc3:	sub    esp,0x40
10024fc6:	push   ebx
10024fc7:	push   esi
10024fc8:	push   edi
10024fc9:	mov    eax,ds:0x1007e030
10024fce:	xor    eax,esp
10024fd0:	push   eax
10024fd1:	lea    eax,[esp+0x50]
10024fd5:	mov    fs:0x0,eax
10024fdb:	mov    esi,ecx
10024fdd:	mov    eax,DWORD PTR [esi+0x30]
10024fe0:	xor    ebx,ebx
10024fe2:	mov    DWORD PTR [esp+0x30],ebx
10024fe6:	mov    DWORD PTR [esp+0x34],ebx
10024fea:	mov    DWORD PTR [esp+0x38],ebx
10024fee:	mov    DWORD PTR [esp+0x3c],ebx
10024ff2:	mov    BYTE PTR [esp+0x40],bl
10024ff6:	mov    DWORD PTR [esp+0x44],ebx
10024ffa:	mov    DWORD PTR [esp+0x48],eax
10024ffe:	lea    eax,[esp+0x30]
10025002:	mov    DWORD PTR [esp+0x58],ebx
10025006:	mov    DWORD PTR [esp+0x20],eax
1002500a:	push   0x40
1002500c:	call   0x1004349e
10025011:	pop    ecx
10025012:	mov    DWORD PTR [esp+0x24],eax
10025016:	cmp    eax,ebx
10025018:	mov    BYTE PTR [esp+0x58],0x1
1002501d:	je     0x1002502d
1002501f:	push   eax
10025020:	call   0x10008683
10025025:	mov    edi,eax
10025027:	mov    DWORD PTR [esp+0x10],edi
1002502b:	jmp    0x10025033
1002502d:	mov    DWORD PTR [esp+0x10],ebx
10025031:	mov    edi,ebx
10025033:	mov    DWORD PTR [esp+0x28],edi
10025037:	push   edi
10025038:	lea    ecx,[esp+0x24]
1002503c:	mov    BYTE PTR [esp+0x5c],0x2
10025041:	call   0x1000df3d
10025046:	cmp    eax,0x1
10025049:	mov    DWORD PTR [esp+0x14],eax
1002504d:	je     0x1002514e
10025053:	lea    eax,[esp+0x1c]
10025057:	push   eax
10025058:	lea    ebx,[esp+0x34]
1002505c:	call   0x1000dd17
10025061:	mov    BYTE PTR [esp+0x58],0x3
10025066:	mov    ecx,DWORD PTR [eax]
10025068:	xor    ebx,ebx
1002506a:	mov    DWORD PTR [eax],ebx
1002506c:	mov    eax,ecx
1002506e:	mov    ecx,edi
10025070:	call   0x100086c7
10025075:	mov    BYTE PTR [esp+0x58],0x2
1002507a:	cmp    DWORD PTR [esp+0x1c],ebx
1002507e:	je     0x1002508d
10025080:	mov    edi,DWORD PTR [esp+0x1c]
10025084:	call   0x10009e75
10025089:	mov    edi,DWORD PTR [esp+0x10]
1002508d:	call   0x1002fa00
10025092:	mov    DWORD PTR [edi+0x10],eax
10025095:	mov    DWORD PTR [edi+0x14],edx
10025098:	call   0x100258c9
1002509d:	test   al,al
1002509f:	je     0x100250a9
100250a1:	mov    DWORD PTR [esp+0x14],0x1
100250a9:	cmp    DWORD PTR [esp+0x14],ebx
100250ad:	mov    BYTE PTR [esp+0x18],bl
100250b1:	jne    0x100250c5
100250b3:	push   edi
100250b4:	lea    ecx,[esp+0x1c]
100250b8:	mov    edx,esi
100250ba:	call   0x10024cba
100250bf:	cmp    BYTE PTR [esp+0x18],bl
100250c3:	jne    0x1002511c
100250c5:	push   edi
100250c6:	call   0x100087d7
100250cb:	lea    ebx,[esi+0x38]
100250ce:	push   ebx
100250cf:	mov    DWORD PTR [esp+0x28],eax
100250d3:	mov    DWORD PTR [esp+0x30],ebx
100250d7:	call   DWORD PTR ds:0x100660f0
100250dd:	lea    eax,[esp+0x24]
100250e1:	push   eax
100250e2:	lea    eax,[esi+0x4]
100250e5:	mov    BYTE PTR [esp+0x5c],0x4
100250ea:	call   0x10025ddc
100250ef:	push   ebx
100250f0:	mov    BYTE PTR [esp+0x5c],0x2
100250f5:	call   DWORD PTR ds:0x100660ec
100250fb:	mov    eax,DWORD PTR [edi+0x30]
100250fe:	mov    ecx,DWORD PTR [eax+0x18]
10025101:	mov    eax,DWORD PTR [eax+0x14]
10025104:	push   ecx
10025105:	push   eax
10025106:	mov    edi,esi
10025108:	call   0x10024d2d
1002510d:	test   al,al
1002510f:	mov    edi,DWORD PTR [esp+0x10]
10025113:	je     0x10025167
10025115:	cmp    DWORD PTR [esp+0x14],0x0
1002511a:	jne    0x10025135
1002511c:	push   DWORD PTR [esp+0x18]
10025120:	lea    eax,[esp+0x34]
10025124:	push   edi
10025125:	push   eax
10025126:	lea    eax,[esp+0x2c]
1002512a:	push   eax
1002512b:	push   esi
1002512c:	call   0x10024ef0
10025131:	mov    DWORD PTR [esp+0x14],eax
10025135:	cmp    DWORD PTR [esp+0x14],0x1
1002513a:	je     0x1002517d
1002513c:	push   edi
1002513d:	mov    BYTE PTR [esp+0x5c],0x0
10025142:	call   0x10009eaf
10025147:	xor    ebx,ebx
10025149:	jmp    0x1002500a
1002514e:	call   0x100258b2
10025153:	push   esi
10025154:	lea    ecx,[esp+0x34]
10025158:	call   0x10024e08
1002515d:	cmp    edi,ebx
1002515f:	mov    BYTE PTR [esp+0x58],bl
10025163:	je     0x1002519f
10025165:	jmp    0x10025199
10025167:	mov    eax,DWORD PTR [edi+0x30]
1002516a:	push   DWORD PTR [eax+0x18]
1002516d:	push   0x0
1002516f:	call   0x10002080
10025174:	pop    ecx
10025175:	pop    ecx
10025176:	call   0x100258b2
1002517b:	jmp    0x10025194
1002517d:	push   0x10
1002517f:	call   0x10037980
10025184:	pop    ecx
10025185:	call   0x100258b2
1002518a:	push   esi
1002518b:	lea    ecx,[esp+0x34]
1002518f:	call   0x10024e08
10025194:	mov    BYTE PTR [esp+0x58],0x0
10025199:	push   edi
1002519a:	call   0x10009eaf
1002519f:	or     DWORD PTR [esp+0x58],0xffffffff
100251a4:	lea    eax,[esp+0x30]
100251a8:	call   0x1000db6f
100251ad:	mov    ecx,DWORD PTR [esp+0x50]
100251b1:	mov    DWORD PTR fs:0x0,ecx
100251b8:	pop    ecx
100251b9:	pop    edi
100251ba:	pop    esi
100251bb:	pop    ebx
100251bc:	mov    esp,ebp
100251be:	pop    ebp
100251bf:	ret    
100251c0:	push   0x8
100251c2:	mov    eax,0x10065068
100251c7:	call   0x10059a68
100251cc:	lea    eax,[ebp+0xb]
100251cf:	push   eax
100251d0:	call   0x10037950
100251d5:	and    DWORD PTR [ebp-0x4],0x0
100251d9:	mov    eax,DWORD PTR [ebp+0x8]
100251dc:	mov    DWORD PTR [ebp-0x14],eax
100251df:	mov    BYTE PTR [ebp-0x4],0x2
100251e3:	mov    ecx,DWORD PTR [eax+0x1c]
100251e6:	call   0x10024faf
100251eb:	lea    ecx,[ebp-0x14]
100251ee:	call   0x10015ddd
100251f3:	call   0x10037970
100251f8:	xor    eax,eax
100251fa:	call   0x10059b0d
100251ff:	ret    0x4
10025202:	mov    eax,DWORD PTR [ebp-0x14]
10025205:	push   DWORD PTR [eax]
10025207:	call   0x10002080
1002520c:	pop    ecx
1002520d:	mov    eax,0x100251eb
10025212:	ret    
10025213:	push   0x4
10025215:	mov    eax,0x1006393f
1002521a:	call   0x10059a35
1002521f:	mov    ebx,ecx
10025221:	mov    esi,edx
10025223:	mov    eax,DWORD PTR [esi+0x50]
10025226:	xor    edi,edi
10025228:	push   edi
10025229:	push   DWORD PTR [eax+0x30]
1002522c:	call   DWORD PTR ds:0x10066084
10025232:	test   eax,eax
10025234:	je     0x1002524b
10025236:	mov    eax,esi
10025238:	call   0x10025884
1002523d:	test   eax,eax
1002523f:	je     0x1002524b
10025241:	push   0xa
10025243:	call   DWORD PTR ds:0x100660bc
10025249:	jmp    0x10025223
1002524b:	mov    eax,ebx
1002524d:	call   0x1000defc
10025252:	test   al,al
10025254:	je     0x1002527e
10025256:	lea    eax,[ebp-0x10]
10025259:	push   eax
1002525a:	call   0x1000dd17
1002525f:	mov    DWORD PTR [ebp-0x4],edi
10025262:	mov    ecx,DWORD PTR [eax]
10025264:	mov    DWORD PTR [eax],edi
10025266:	call   0x10025954
1002526b:	or     DWORD PTR [ebp-0x4],0xffffffff
1002526f:	cmp    DWORD PTR [ebp-0x10],edi
10025272:	je     0x10025223
10025274:	mov    edi,DWORD PTR [ebp-0x10]
10025277:	call   0x10009e75
1002527c:	jmp    0x10025223
1002527e:	call   0x10025d23
10025283:	call   0x10059b0d
10025288:	ret    
10025289:	mov    eax,DWORD PTR [ecx+0x4]
1002528c:	mov    ecx,DWORD PTR [esp+0x4]
10025290:	push   esi
10025291:	mov    esi,DWORD PTR [eax+0x1c]
10025294:	call   0x10025954
10025299:	pop    esi
1002529a:	ret    0x4
1002529d:	push   0x10
1002529f:	mov    eax,0x100647cc
100252a4:	call   0x10059a68
100252a9:	mov    ebx,ecx
100252ab:	mov    edi,edx
100252ad:	and    DWORD PTR [ebp-0x4],0x0
100252b1:	mov    ecx,DWORD PTR [ebp+0x10]
100252b4:	lea    eax,[ecx+0x34]
100252b7:	mov    edx,DWORD PTR [eax]
100252b9:	mov    edx,DWORD PTR [edx+0x18]
100252bc:	mov    DWORD PTR [ecx+0x38],edx
100252bf:	mov    ecx,DWORD PTR [eax]
100252c1:	and    DWORD PTR [eax],0x0
100252c4:	mov    esi,edi
100252c6:	call   0x10025954
100252cb:	push   0x8
100252cd:	call   0x1004349e
100252d2:	test   eax,eax
100252d4:	pop    ecx
100252d5:	je     0x100252e8
100252d7:	mov    ecx,DWORD PTR [edi+0x50]
100252da:	mov    DWORD PTR [eax],0x10071860
100252e0:	mov    DWORD PTR [eax+0x4],ecx
100252e3:	mov    DWORD PTR [ebp-0x14],eax
100252e6:	jmp    0x100252ec
100252e8:	and    DWORD PTR [ebp-0x14],0x0
100252ec:	mov    eax,DWORD PTR [ebp-0x14]
100252ef:	mov    DWORD PTR [ebp-0x1c],eax
100252f2:	mov    esi,DWORD PTR [ebp+0xc]
100252f5:	mov    BYTE PTR [ebp-0x4],0x1
100252f9:	call   0x1000dba0
100252fe:	mov    eax,DWORD PTR [ebp-0x14]
10025301:	mov    BYTE PTR [ebp-0x4],0x2
10025305:	mov    edx,DWORD PTR [ebp+0x10]
10025308:	mov    ecx,DWORD PTR [ebp+0x8]
1002530b:	push   ebx
1002530c:	mov    DWORD PTR [esi+0x14],eax
1002530f:	call   0x1000e515
10025314:	test   eax,eax
10025316:	mov    DWORD PTR [ebp-0x18],eax
10025319:	jne    0x1002536e
1002531b:	call   0x1002fa00
10025320:	mov    ecx,DWORD PTR [ebp+0x10]
10025323:	mov    DWORD PTR [ecx+0x18],eax
10025326:	mov    eax,DWORD PTR [ebp+0x10]
10025329:	mov    DWORD PTR [eax+0x1c],edx
1002532c:	mov    ecx,DWORD PTR [ebp+0x10]
1002532f:	push   edi
10025330:	call   0x100259b0
10025335:	cmp    BYTE PTR [ebx+0x2c],0x0
10025339:	jne    0x1002536e
1002533b:	push   ebx
1002533c:	call   0x100087d7
10025341:	mov    DWORD PTR [ebp+0x8],eax
10025344:	lea    eax,[ebp+0x10]
10025347:	push   eax
10025348:	lea    eax,[ebp+0x8]
1002534b:	push   eax
1002534c:	mov    edi,0x10080f70
10025351:	mov    BYTE PTR [ebp-0x4],0x3
10025355:	call   0x100263fc
1002535a:	pop    ecx
1002535b:	mov    BYTE PTR [ebp-0x4],0x2
1002535f:	cmp    DWORD PTR [ebp+0x8],0x0
10025363:	pop    ecx
10025364:	je     0x1002536e
10025366:	push   DWORD PTR [ebp+0x8]
10025369:	call   0x10009eaf
1002536e:	mov    esi,DWORD PTR [ebp+0xc]
10025371:	xor    edi,edi
10025373:	inc    edi
10025374:	mov    DWORD PTR [ebp-0x4],edi
10025377:	call   0x1000dba0
1002537c:	and    DWORD PTR [esi+0x14],0x0
10025380:	mov    ecx,DWORD PTR [ebp-0x14]
10025383:	test   ecx,ecx
10025385:	mov    BYTE PTR [ebp-0x4],0x0
10025389:	je     0x10025390
1002538b:	mov    eax,DWORD PTR [ecx]
1002538d:	push   edi
1002538e:	call   DWORD PTR [eax]
10025390:	or     DWORD PTR [ebp-0x4],0xffffffff
10025394:	lea    eax,[ebp+0x10]
10025397:	call   0x10009e32
1002539c:	mov    eax,DWORD PTR [ebp-0x18]
1002539f:	call   0x10059b0d
100253a4:	ret    0xc
100253a7:	push   0x4
100253a9:	call   0x10037980
100253ae:	mov    esi,DWORD PTR [ebp+0xc]
100253b1:	pop    ecx
100253b2:	call   0x1000dba0
100253b7:	xor    eax,eax
100253b9:	push   eax
100253ba:	push   eax
100253bb:	mov    DWORD PTR [esi+0x14],eax
100253be:	call   0x100479b4
100253c3:	int3   
100253c4:	push   0x10
100253c6:	mov    eax,0x10064799
100253cb:	call   0x10059a35
100253d0:	mov    ebx,edx
100253d2:	mov    esi,DWORD PTR [ebp+0x10]
100253d5:	push   DWORD PTR [ebp+0xc]
100253d8:	mov    edx,esi
100253da:	call   0x1000e515
100253df:	test   eax,eax
100253e1:	mov    DWORD PTR [ebp-0x10],eax
100253e4:	jne    0x1002543a
100253e6:	lea    eax,[ebp-0x14]
100253e9:	push   eax
100253ea:	call   0x1000dd17
100253ef:	and    DWORD PTR [ebp-0x4],0x0
100253f3:	mov    ebx,DWORD PTR [eax]
100253f5:	and    DWORD PTR [eax],0x0
100253f8:	mov    ecx,esi
100253fa:	call   0x10008fc0
100253ff:	or     DWORD PTR [ebp-0x4],0xffffffff
10025403:	mov    edi,DWORD PTR [ebp-0x14]
10025406:	test   edi,edi
10025408:	je     0x1002540f
1002540a:	call   0x10009e75
1002540f:	call   0x1002fa00
10025414:	mov    DWORD PTR [esi+0x18],eax
10025417:	mov    eax,DWORD PTR [ebp+0xc]
1002541a:	mov    DWORD PTR [esi+0x1c],edx
1002541d:	cmp    BYTE PTR [eax+0x2c],0x0
10025421:	jne    0x10025480
10025423:	mov    ecx,DWORD PTR [ebp+0x8]
10025426:	push   esi
10025427:	push   DWORD PTR [ecx+0x50]
1002542a:	push   eax
1002542b:	push   0x10080f94
10025430:	call   0x100262fb
10025435:	add    esp,0x10
10025438:	jmp    0x10025480
1002543a:	lea    eax,[ebp-0x18]
1002543d:	push   eax
1002543e:	call   0x1000dd17
10025443:	mov    DWORD PTR [ebp-0x4],0x1
1002544a:	mov    ebx,DWORD PTR [eax]
1002544c:	and    DWORD PTR [eax],0x0
1002544f:	mov    DWORD PTR [ebp-0x14],ebx
10025452:	mov    BYTE PTR [ebp-0x4],0x2
10025456:	mov    edi,DWORD PTR [ebx+0x18]
10025459:	test   edi,edi
1002545b:	je     0x10025469
1002545d:	mov    ecx,DWORD PTR [ebx+0x14]
10025460:	mov    eax,DWORD PTR [esi+0x34]
10025463:	push   ecx
10025464:	call   0x100076d4
10025469:	mov    edi,ebx
1002546b:	call   0x10009e75
10025470:	or     DWORD PTR [ebp-0x4],0xffffffff
10025474:	mov    edi,DWORD PTR [ebp-0x18]
10025477:	test   edi,edi
10025479:	je     0x10025480
1002547b:	call   0x10009e75
10025480:	mov    eax,DWORD PTR [esi+0x34]
10025483:	mov    eax,DWORD PTR [eax+0x18]
10025486:	mov    DWORD PTR [esi+0x38],eax
10025489:	mov    ecx,DWORD PTR [esi+0x34]
1002548c:	and    DWORD PTR [esi+0x34],0x0
10025490:	mov    esi,DWORD PTR [ebp+0x8]
10025493:	call   0x10025954
10025498:	cmp    DWORD PTR [ebp-0x10],0x0
1002549c:	jne    0x100254aa
1002549e:	mov    ecx,DWORD PTR [ebp+0x10]
100254a1:	mov    ebx,DWORD PTR [ebp+0xc]
100254a4:	push   esi
100254a5:	call   0x100259b0
100254aa:	mov    eax,DWORD PTR [ebp-0x10]
100254ad:	call   0x10059b0d
100254b2:	ret    0xc
100254b5:	push   ebp
100254b6:	mov    ebp,esp
100254b8:	and    esp,0xfffffff8
100254bb:	push   0xffffffff
100254bd:	push   0x10064d6c
100254c2:	mov    eax,fs:0x0
100254c8:	push   eax
100254c9:	sub    esp,0x48
100254cc:	push   ebx
100254cd:	push   esi
100254ce:	push   edi
100254cf:	mov    eax,ds:0x1007e030
100254d4:	xor    eax,esp
100254d6:	push   eax
100254d7:	lea    eax,[esp+0x58]
100254db:	mov    fs:0x0,eax
100254e1:	mov    edi,DWORD PTR [ebp+0x8]
100254e4:	mov    eax,DWORD PTR [edi+0x50]
100254e7:	mov    DWORD PTR [esp+0x30],0x10071850
100254ef:	mov    DWORD PTR [esp+0x34],eax
100254f3:	xor    ebx,ebx
100254f5:	mov    DWORD PTR [esp+0x60],ebx
100254f9:	lea    ecx,[esp+0x30]
100254fd:	mov    DWORD PTR [esp+0x38],ebx
10025501:	mov    DWORD PTR [esp+0x3c],ebx
10025505:	mov    DWORD PTR [esp+0x40],ebx
10025509:	mov    DWORD PTR [esp+0x44],ebx
1002550d:	mov    BYTE PTR [esp+0x48],bl
10025511:	mov    DWORD PTR [esp+0x4c],ebx
10025515:	mov    DWORD PTR [esp+0x50],ecx
10025519:	lea    ecx,[esp+0x38]
1002551d:	mov    BYTE PTR [esp+0x60],0x1
10025522:	mov    DWORD PTR [esp+0x20],ecx
10025526:	jmp    0x10025708
1002552b:	mov    eax,edi
1002552d:	call   0x10025884
10025532:	test   eax,eax
10025534:	je     0x10025543
10025536:	push   0xa
10025538:	call   DWORD PTR ds:0x100660bc
1002553e:	jmp    0x10025705
10025543:	lea    esi,[esp+0x38]
10025547:	call   0x1000dcf2
1002554c:	test   al,al
1002554e:	jne    0x1002571c
10025554:	push   0x40
10025556:	call   0x1004349e
1002555b:	pop    ecx
1002555c:	mov    DWORD PTR [esp+0x24],eax
10025560:	cmp    eax,ebx
10025562:	mov    BYTE PTR [esp+0x60],0x2
10025567:	je     0x10025575
10025569:	push   eax
1002556a:	call   0x10008f0b
1002556f:	mov    DWORD PTR [esp+0x18],eax
10025573:	jmp    0x10025579
10025575:	mov    DWORD PTR [esp+0x18],ebx
10025579:	mov    eax,DWORD PTR [esp+0x18]
1002557d:	mov    DWORD PTR [esp+0x24],eax
10025581:	push   eax
10025582:	lea    eax,[esp+0x24]
10025586:	push   eax
10025587:	mov    BYTE PTR [esp+0x68],0x3
1002558c:	call   0x1000e437
10025591:	lea    esi,[edi+0x38]
10025594:	push   esi
10025595:	mov    DWORD PTR [esp+0x18],eax
10025599:	call   DWORD PTR ds:0x100660f0
1002559f:	cmp    BYTE PTR [edi],bl
100255a1:	jne    0x100255c2
100255a3:	cmp    DWORD PTR [edi+0x14],ebx
100255a6:	je     0x100255c2
100255a8:	lea    esi,[edi+0x4]
100255ab:	call   0x10025d3f
100255b0:	mov    esi,DWORD PTR [eax]
100255b2:	lea    eax,[edi+0x38]
100255b5:	push   eax
100255b6:	call   DWORD PTR ds:0x100660ec
100255bc:	mov    DWORD PTR [esp+0x1c],esi
100255c0:	jmp    0x100255cd
100255c2:	push   esi
100255c3:	call   DWORD PTR ds:0x100660ec
100255c9:	mov    DWORD PTR [esp+0x1c],ebx
100255cd:	cmp    DWORD PTR [esp+0x1c],ebx
100255d1:	jne    0x100255db
100255d3:	mov    DWORD PTR [esp+0x14],0x1
100255db:	mov    esi,edi
100255dd:	call   0x100258c9
100255e2:	test   al,al
100255e4:	je     0x100255ee
100255e6:	mov    DWORD PTR [esp+0x14],0x1
100255ee:	cmp    DWORD PTR [esp+0x14],ebx
100255f2:	jne    0x100256ab
100255f8:	call   0x10004004
100255fd:	lea    eax,[esp+0x28]
10025601:	push   eax
10025602:	lea    ebx,[esp+0x3c]
10025606:	call   0x1000dd17
1002560b:	mov    esi,DWORD PTR [esp+0x18]
1002560f:	mov    BYTE PTR [esp+0x60],0x4
10025614:	mov    ecx,DWORD PTR [eax]
10025616:	and    DWORD PTR [eax],0x0
10025619:	mov    eax,ecx
1002561b:	mov    ecx,esi
1002561d:	call   0x10008f52
10025622:	mov    BYTE PTR [esp+0x60],0x3
10025627:	cmp    DWORD PTR [esp+0x28],0x0
1002562c:	je     0x1002563a
1002562e:	mov    edi,DWORD PTR [esp+0x28]
10025632:	call   0x10009e75
10025637:	mov    edi,DWORD PTR [ebp+0x8]
1002563a:	call   0x1002fa00
1002563f:	mov    ebx,DWORD PTR [esp+0x1c]
10025643:	mov    DWORD PTR [esi+0x10],eax
10025646:	mov    DWORD PTR [esi+0x14],edx
10025649:	cmp    BYTE PTR [ebx+0x2c],0x0
1002564d:	mov    BYTE PTR [esp+0x13],0x1
10025652:	jne    0x10025672
10025654:	lea    eax,[esp+0x13]
10025658:	push   eax
10025659:	push   esi
1002565a:	push   DWORD PTR [edi+0x50]
1002565d:	push   ebx
1002565e:	push   0x10080f7c
10025663:	call   0x100261ea
10025668:	add    esp,0x14
1002566b:	cmp    BYTE PTR [esp+0x13],0x0
10025670:	je     0x10025695
10025672:	push   ecx
10025673:	mov    eax,esp
10025675:	mov    DWORD PTR [eax],esi
10025677:	mov    DWORD PTR [esp+0x28],esp
1002567b:	and    DWORD PTR [esp+0x28],0x0
10025680:	lea    eax,[esp+0x3c]
10025684:	push   eax
10025685:	lea    eax,[esp+0x28]
10025689:	push   eax
1002568a:	mov    ecx,ebx
1002568c:	mov    edx,edi
1002568e:	call   0x1002529d
10025693:	jmp    0x100256a5
10025695:	push   esi
10025696:	push   ebx
10025697:	push   edi
10025698:	lea    edx,[esp+0x44]
1002569c:	lea    ecx,[esp+0x2c]
100256a0:	call   0x100253c4
100256a5:	mov    DWORD PTR [esp+0x14],eax
100256a9:	jmp    0x100256e7
100256ab:	mov    esi,edi
100256ad:	call   0x100258b2
100256b2:	lea    eax,[esp+0x2c]
100256b6:	push   eax
100256b7:	lea    ebx,[esp+0x3c]
100256bb:	call   0x1000dd17
100256c0:	mov    BYTE PTR [esp+0x60],0x5
100256c5:	mov    ecx,DWORD PTR [eax]
100256c7:	and    DWORD PTR [eax],0x0
100256ca:	call   0x10025954
100256cf:	mov    BYTE PTR [esp+0x60],0x3
100256d4:	cmp    DWORD PTR [esp+0x2c],0x0
100256d9:	je     0x100256e7
100256db:	mov    edi,DWORD PTR [esp+0x2c]
100256df:	call   0x10009e75
100256e4:	mov    edi,DWORD PTR [ebp+0x8]
100256e7:	mov    ecx,edi
100256e9:	call   0x100258e3
100256ee:	cmp    DWORD PTR [esp+0x14],0x1
100256f3:	je     0x10025725
100256f5:	lea    eax,[esp+0x24]
100256f9:	mov    BYTE PTR [esp+0x60],0x1
100256fe:	call   0x10009e32
10025703:	xor    ebx,ebx
10025705:	mov    eax,DWORD PTR [edi+0x50]
10025708:	push   ebx
10025709:	push   DWORD PTR [eax+0x30]
1002570c:	call   DWORD PTR ds:0x10066084
10025712:	test   eax,eax
10025714:	jne    0x1002552b
1002571a:	jmp    0x10025748
1002571c:	mov    esi,edi
1002571e:	call   0x10025d23
10025723:	jmp    0x10025748
10025725:	push   0x10
10025727:	call   0x10037980
1002572c:	pop    ecx
1002572d:	lea    ecx,[esp+0x38]
10025731:	mov    edx,edi
10025733:	call   0x10025213
10025738:	lea    eax,[esp+0x24]
1002573c:	mov    BYTE PTR [esp+0x60],0x1
10025741:	call   0x10009e32
10025746:	xor    ebx,ebx
10025748:	lea    eax,[esp+0x38]
1002574c:	mov    BYTE PTR [esp+0x60],bl
10025750:	call   0x1000db6f
10025755:	mov    ecx,DWORD PTR [esp+0x58]
10025759:	mov    DWORD PTR fs:0x0,ecx
10025760:	pop    ecx
10025761:	pop    edi
10025762:	pop    esi
10025763:	pop    ebx
10025764:	mov    esp,ebp
10025766:	pop    ebp
10025767:	ret    0x4
1002576a:	push   0x8
1002576c:	mov    eax,0x10064ffb
10025771:	call   0x10059a68
10025776:	lea    eax,[ebp+0xb]
10025779:	push   eax
1002577a:	call   0x10037950
1002577f:	and    DWORD PTR [ebp-0x4],0x0
10025783:	mov    eax,DWORD PTR [ebp+0x8]
10025786:	mov    DWORD PTR [ebp-0x14],eax
10025789:	mov    BYTE PTR [ebp-0x4],0x2
1002578d:	push   DWORD PTR [eax+0x1c]
10025790:	call   0x100254b5
10025795:	mov    eax,DWORD PTR [ebp-0x14]
10025798:	push   DWORD PTR [eax+0x30]
1002579b:	call   DWORD PTR ds:0x10066110
100257a1:	lea    ecx,[ebp-0x14]
100257a4:	call   0x10015ddd
100257a9:	call   0x10037970
100257ae:	xor    eax,eax
100257b0:	call   0x10059b0d
100257b5:	ret    0x4
100257b8:	push   0x4
100257ba:	call   0x10037980
100257bf:	pop    ecx
100257c0:	mov    eax,0x10025795
100257c5:	ret    
100257c6:	push   ebp
100257c7:	mov    ebp,esp
100257c9:	push   ecx
100257ca:	push   ebx
100257cb:	push   esi
100257cc:	mov    esi,eax
100257ce:	mov    eax,DWORD PTR [ebp+0x8]
100257d1:	xor    ebx,ebx
100257d3:	push   edi
100257d4:	mov    DWORD PTR [esi],ebx
100257d6:	call   0x10025884
100257db:	mov    edi,eax
100257dd:	cmp    edi,ebx
100257df:	je     0x1002587c
100257e5:	mov    eax,DWORD PTR [edi+0x18]
100257e8:	sub    eax,DWORD PTR [edi+0x20]
100257eb:	cmp    eax,DWORD PTR [ebp+0x10]
100257ee:	jbe    0x100257f3
100257f0:	mov    eax,DWORD PTR [ebp+0x10]
100257f3:	push   eax
100257f4:	mov    DWORD PTR [esi],eax
100257f6:	mov    eax,DWORD PTR [edi+0x14]
100257f9:	add    eax,DWORD PTR [edi+0x20]
100257fc:	push   eax
100257fd:	push   DWORD PTR [ebp+0xc]
10025800:	call   0x10045180
10025805:	add    esp,0xc
10025808:	cmp    BYTE PTR [ebp+0x14],bl
1002580b:	jne    0x1002587c
1002580d:	mov    eax,DWORD PTR [esi]
1002580f:	add    DWORD PTR [edi+0x20],eax
10025812:	mov    eax,DWORD PTR [edi+0x20]
10025815:	cmp    eax,DWORD PTR [edi+0x18]
10025818:	jb     0x1002587c
1002581a:	cmp    DWORD PTR [edi],ebx
1002581c:	je     0x10025874
1002581e:	call   0x1002fa00
10025823:	mov    esi,DWORD PTR [edi]
10025825:	sub    eax,DWORD PTR [esi+0x58]
10025828:	push   ebx
10025829:	sbb    edx,DWORD PTR [esi+0x5c]
1002582c:	push   0x2710
10025831:	push   edx
10025832:	push   eax
10025833:	call   0x1005f340
10025838:	push   DWORD PTR [esi+0x64]
1002583b:	mov    ebx,eax
1002583d:	push   DWORD PTR [esi+0x60]
10025840:	push   ebx
10025841:	call   DWORD PTR ds:0x10066118
10025847:	push   eax
10025848:	lea    eax,[esi+0x38]
1002584b:	push   eax
1002584c:	lea    eax,[esi+0x1c]
1002584f:	push   eax
10025850:	push   esi
10025851:	push   0x10080f30
10025856:	call   0x1001a22f
1002585b:	mov    edi,DWORD PTR [edi]
1002585d:	cmp    DWORD PTR [edi+0x18],0x10
10025861:	jb     0x10025868
10025863:	mov    edi,DWORD PTR [edi+0x4]
10025866:	jmp    0x1002586b
10025868:	add    edi,0x4
1002586b:	push   edi
1002586c:	push   ebx
1002586d:	call   0x10002080
10025872:	pop    ecx
10025873:	pop    ecx
10025874:	push   DWORD PTR [ebp+0x8]
10025877:	call   0x10025ca1
1002587c:	pop    edi
1002587d:	pop    esi
1002587e:	pop    ebx
1002587f:	pop    ecx
10025880:	pop    ebp
10025881:	ret    0x10
10025884:	push   esi
10025885:	push   edi
10025886:	mov    esi,eax
10025888:	lea    edi,[esi+0x38]
1002588b:	push   edi
1002588c:	call   DWORD PTR ds:0x100660f0
10025892:	cmp    DWORD PTR [esi+0x28],0x0
10025896:	jne    0x100258a6
10025898:	xor    esi,esi
1002589a:	push   edi
1002589b:	call   DWORD PTR ds:0x100660ec
100258a1:	pop    edi
100258a2:	mov    eax,esi
100258a4:	pop    esi
100258a5:	ret    
100258a6:	add    esi,0x18
100258a9:	call   0x10025d3f
100258ae:	mov    esi,DWORD PTR [eax]
100258b0:	jmp    0x1002589a
100258b2:	push   edi
100258b3:	lea    edi,[esi+0x38]
100258b6:	push   edi
100258b7:	call   DWORD PTR ds:0x100660f0
100258bd:	push   edi
100258be:	mov    BYTE PTR [esi],0x1
100258c1:	call   DWORD PTR ds:0x100660ec
100258c7:	pop    edi
100258c8:	ret    
100258c9:	push   ebx
100258ca:	push   edi
100258cb:	lea    edi,[esi+0x38]
100258ce:	push   edi
100258cf:	call   DWORD PTR ds:0x100660f0
100258d5:	mov    bl,BYTE PTR [esi]
100258d7:	push   edi
100258d8:	call   DWORD PTR ds:0x100660ec
100258de:	pop    edi
100258df:	mov    al,bl
100258e1:	pop    ebx
100258e2:	ret    
100258e3:	push   0x4
100258e5:	mov    eax,0x1006391c
100258ea:	call   0x10059a35
100258ef:	mov    esi,ecx
100258f1:	lea    edi,[esi+0x38]
100258f4:	push   edi
100258f5:	mov    DWORD PTR [ebp-0x10],edi
100258f8:	call   DWORD PTR ds:0x100660f0
100258fe:	xor    ebx,ebx
10025900:	mov    DWORD PTR [ebp-0x4],ebx
10025903:	cmp    DWORD PTR [esi+0x14],ebx
10025906:	jne    0x10025917
10025908:	push   edi
10025909:	call   DWORD PTR ds:0x100660ec
1002590f:	mov    al,bl
10025911:	call   0x10059b0d
10025916:	ret    
10025917:	add    esi,0x4
1002591a:	call   0x10025d3f
1002591f:	mov    eax,DWORD PTR [eax]
10025921:	cmp    eax,ebx
10025923:	je     0x1002592b
10025925:	push   eax
10025926:	call   0x10009eaf
1002592b:	mov    eax,DWORD PTR [esi+0x10]
1002592e:	cmp    eax,ebx
10025930:	je     0x10025950
10025932:	inc    DWORD PTR [esi+0xc]
10025935:	mov    edx,DWORD PTR [esi+0x8]
10025938:	mov    ecx,DWORD PTR [esi+0xc]
1002593b:	shl    edx,0x2
1002593e:	cmp    edx,ecx
10025940:	ja     0x10025945
10025942:	mov    DWORD PTR [esi+0xc],ebx
10025945:	dec    eax
10025946:	cmp    eax,ebx
10025948:	mov    DWORD PTR [esi+0x10],eax
1002594b:	jne    0x10025950
1002594d:	mov    DWORD PTR [esi+0xc],ebx
10025950:	mov    bl,0x1
10025952:	jmp    0x10025908
10025954:	push   0xc
10025956:	mov    eax,0x1006006b
1002595b:	call   0x10059a35
10025960:	mov    edi,ecx
10025962:	and    DWORD PTR [ebp-0x4],0x0
10025966:	cmp    DWORD PTR [edi+0x18],0x0
1002596a:	jne    0x10025973
1002596c:	call   0x10009e75
10025971:	jmp    0x100259aa
10025973:	lea    ebx,[esi+0x38]
10025976:	push   ebx
10025977:	mov    DWORD PTR [ebp-0x14],ebx
1002597a:	call   DWORD PTR ds:0x100660f0
10025980:	lea    eax,[ebp-0x10]
10025983:	mov    BYTE PTR [ebp-0x4],0x1
10025987:	and    DWORD PTR [ebp-0x18],0x0
1002598b:	push   eax
1002598c:	lea    eax,[esi+0x18]
1002598f:	mov    DWORD PTR [ebp-0x10],edi
10025992:	call   0x10025ddc
10025997:	mov    eax,DWORD PTR [esi+0x50]
1002599a:	push   DWORD PTR [eax+0x28]
1002599d:	call   DWORD PTR ds:0x10066110
100259a3:	push   ebx
100259a4:	call   DWORD PTR ds:0x100660ec
100259aa:	call   0x10059b0d
100259af:	ret    
100259b0:	push   0xa8
100259b5:	mov    eax,0x10062837
100259ba:	call   0x10059a35
100259bf:	mov    edi,ecx
100259c1:	mov    eax,DWORD PTR [ebp+0x8]
100259c4:	add    eax,0x38
100259c7:	xor    esi,esi
100259c9:	mov    DWORD PTR [ebp-0x10],esi
100259cc:	push   eax
100259cd:	mov    BYTE PTR [ebp-0x11],0x0
100259d1:	mov    DWORD PTR [ebp-0x20],eax
100259d4:	mov    DWORD PTR [ebp-0x24],eax
100259d7:	call   DWORD PTR ds:0x100660f0
100259dd:	mov    eax,DWORD PTR [ebp+0x8]
100259e0:	mov    DWORD PTR [ebp-0x4],esi
100259e3:	cmp    DWORD PTR [eax+0x28],esi
100259e6:	jne    0x100259f1
100259e8:	mov    BYTE PTR [ebp-0x11],0x1
100259ec:	jmp    0x10025b47
100259f1:	push   0x68
100259f3:	call   0x1004349e
100259f8:	pop    ecx
100259f9:	mov    DWORD PTR [ebp-0x1c],eax
100259fc:	cmp    eax,esi
100259fe:	mov    BYTE PTR [ebp-0x4],0x1
10025a02:	je     0x10025ac3
10025a08:	push   0x40219498
10025a0d:	push   0x100717d4
10025a12:	call   0x10004246
10025a17:	push   0x60e64be8
10025a1c:	push   eax
10025a1d:	call   0x10004246
10025a22:	push   eax
10025a23:	push   0x7
10025a25:	push   0x1006d678
10025a2a:	call   0x10004258
10025a2f:	add    esp,0x1c
10025a32:	push   eax
10025a33:	lea    ecx,[ebp-0x44]
10025a36:	call   0x100011cd
10025a3b:	mov    BYTE PTR [ebp-0x4],0x2
10025a3f:	mov    eax,DWORD PTR [edi+0x4]
10025a42:	lea    ecx,[ebp-0x7c]
10025a45:	push   ecx
10025a46:	mov    DWORD PTR [ebp-0x10],0x1
10025a4d:	call   0x10019730
10025a52:	mov    DWORD PTR [ebp-0x18],eax
10025a55:	push   0x3
10025a57:	pop    eax
10025a58:	mov    DWORD PTR [ebp-0x4],eax
10025a5b:	mov    DWORD PTR [ebp-0x10],eax
10025a5e:	push   esi
10025a5f:	lea    eax,[ebp-0x44]
10025a62:	push   eax
10025a63:	lea    eax,[ebp-0x60]
10025a66:	push   eax
10025a67:	lea    eax,[ebx+0x18]
10025a6a:	call   0x100084cc
10025a6f:	mov    esi,eax
10025a71:	mov    DWORD PTR [ebp-0x4],0x4
10025a78:	push   ebx
10025a79:	lea    ecx,[ebp-0x98]
10025a7f:	mov    DWORD PTR [ebp-0x10],0x7
10025a86:	call   0x10008b47
10025a8b:	mov    edx,eax
10025a8d:	mov    DWORD PTR [ebp-0x4],0x5
10025a94:	mov    ecx,edi
10025a96:	mov    DWORD PTR [ebp-0x10],0xf
10025a9d:	call   0x1000900e
10025aa2:	push   eax
10025aa3:	mov    ecx,ebx
10025aa5:	call   0x10008735
10025aaa:	push   eax
10025aab:	push   DWORD PTR [edi+0x14]
10025aae:	push   DWORD PTR [edi+0x10]
10025ab1:	push   DWORD PTR [ebp-0x18]
10025ab4:	push   esi
10025ab5:	push   edx
10025ab6:	push   DWORD PTR [ebp-0x1c]
10025ab9:	call   0x1002490e
10025abe:	mov    DWORD PTR [ebp-0x18],eax
10025ac1:	jmp    0x10025ac6
10025ac3:	mov    DWORD PTR [ebp-0x18],esi
10025ac6:	mov    esi,DWORD PTR [ebp+0x8]
10025ac9:	add    esi,0x18
10025acc:	call   0x10025d3f
10025ad1:	mov    eax,DWORD PTR [eax]
10025ad3:	mov    esi,DWORD PTR [eax]
10025ad5:	cmp    DWORD PTR [ebp-0x18],esi
10025ad8:	mov    DWORD PTR [ebp+0x8],eax
10025adb:	je     0x10025ae9
10025add:	test   esi,esi
10025adf:	je     0x10025ae9
10025ae1:	call   0x10009e48
10025ae6:	mov    eax,DWORD PTR [ebp+0x8]
10025ae9:	test   BYTE PTR [ebp-0x10],0x8
10025aed:	mov    ecx,DWORD PTR [ebp-0x18]
10025af0:	mov    DWORD PTR [eax],ecx
10025af2:	je     0x10025b07
10025af4:	and    DWORD PTR [ebp-0x10],0xfffffff7
10025af8:	push   0x0
10025afa:	push   0x1
10025afc:	lea    ecx,[ebp-0x98]
10025b02:	call   0x100012f0
10025b07:	test   BYTE PTR [ebp-0x10],0x4
10025b0b:	je     0x10025b1d
10025b0d:	and    DWORD PTR [ebp-0x10],0xfffffffb
10025b11:	push   0x0
10025b13:	push   0x1
10025b15:	lea    ecx,[ebp-0x60]
10025b18:	call   0x100012f0
10025b1d:	test   BYTE PTR [ebp-0x10],0x2
10025b21:	je     0x10025b33
10025b23:	and    DWORD PTR [ebp-0x10],0xfffffffd
10025b27:	push   0x0
10025b29:	push   0x1
10025b2b:	lea    ecx,[ebp-0x7c]
10025b2e:	call   0x100012f0
10025b33:	test   BYTE PTR [ebp-0x10],0x1
10025b37:	je     0x10025b45
10025b39:	push   0x0
10025b3b:	push   0x1
10025b3d:	lea    ecx,[ebp-0x44]
10025b40:	call   0x100012f0
10025b45:	xor    esi,esi
10025b47:	push   DWORD PTR [ebp-0x20]
10025b4a:	or     DWORD PTR [ebp-0x4],0xffffffff
10025b4e:	call   DWORD PTR ds:0x100660ec
10025b54:	cmp    BYTE PTR [ebp-0x11],0x0
10025b58:	je     0x10025c99
10025b5e:	mov    eax,DWORD PTR [edi+0x10]
10025b61:	mov    DWORD PTR [ebp-0x28],eax
10025b64:	mov    eax,DWORD PTR [edi+0x14]
10025b67:	mov    DWORD PTR [ebp-0x24],eax
10025b6a:	call   0x1002fa00
10025b6f:	sub    eax,DWORD PTR [ebp-0x28]
10025b72:	push   esi
10025b73:	sbb    edx,DWORD PTR [ebp-0x24]
10025b76:	push   0x2710
10025b7b:	push   edx
10025b7c:	push   eax
10025b7d:	call   0x1005f340
10025b82:	push   0x39254348
10025b87:	push   0x100717fc
10025b8c:	mov    DWORD PTR [ebp+0x8],eax
10025b8f:	call   0x10004246
10025b94:	push   0x22e28cb0
10025b99:	push   eax
10025b9a:	call   0x10004246
10025b9f:	push   0x6814ac0a
10025ba4:	push   eax
10025ba5:	call   0x10004246
10025baa:	push   eax
10025bab:	push   0x7
10025bad:	push   0x1006d678
10025bb2:	call   0x10004258
10025bb7:	add    esp,0x24
10025bba:	push   eax
10025bbb:	lea    ecx,[ebp-0x44]
10025bbe:	call   0x100011cd
10025bc3:	lea    ecx,[ebp-0x98]
10025bc9:	mov    DWORD PTR [ebp-0x4],0xa
10025bd0:	mov    eax,DWORD PTR [edi+0x4]
10025bd3:	push   ecx
10025bd4:	call   0x10019730
10025bd9:	mov    DWORD PTR [ebp-0x20],eax
10025bdc:	push   esi
10025bdd:	lea    eax,[ebp-0x44]
10025be0:	push   eax
10025be1:	lea    eax,[ebp-0x60]
10025be4:	push   eax
10025be5:	lea    eax,[ebx+0x18]
10025be8:	mov    BYTE PTR [ebp-0x4],0xb
10025bec:	call   0x100084cc
10025bf1:	mov    DWORD PTR [ebp-0x1c],eax
10025bf4:	push   ebx
10025bf5:	lea    ecx,[ebp-0x7c]
10025bf8:	mov    BYTE PTR [ebp-0x4],0xc
10025bfc:	call   0x10008b47
10025c01:	mov    DWORD PTR [ebp-0x18],eax
10025c04:	mov    ecx,edi
10025c06:	mov    BYTE PTR [ebp-0x4],0xd
10025c0a:	call   0x1000900e
10025c0f:	push   eax
10025c10:	mov    ecx,ebx
10025c12:	call   0x10008735
10025c17:	push   eax
10025c18:	push   DWORD PTR [ebp+0x8]
10025c1b:	call   DWORD PTR ds:0x10066118
10025c21:	push   eax
10025c22:	push   DWORD PTR [ebp-0x20]
10025c25:	push   DWORD PTR [ebp-0x1c]
10025c28:	push   DWORD PTR [ebp-0x18]
10025c2b:	push   0x10080f30
10025c30:	call   0x1001a22f
10025c35:	xor    edi,edi
10025c37:	push   esi
10025c38:	inc    edi
10025c39:	push   edi
10025c3a:	lea    ecx,[ebp-0x7c]
10025c3d:	call   0x100012f0
10025c42:	push   esi
10025c43:	push   edi
10025c44:	lea    ecx,[ebp-0x60]
10025c47:	call   0x100012f0
10025c4c:	push   esi
10025c4d:	push   edi
10025c4e:	lea    ecx,[ebp-0x98]
10025c54:	call   0x100012f0
10025c59:	or     DWORD PTR [ebp-0x4],0xffffffff
10025c5d:	push   esi
10025c5e:	push   edi
10025c5f:	lea    ecx,[ebp-0x44]
10025c62:	call   0x100012f0
10025c67:	push   ebx
10025c68:	lea    ecx,[ebp-0xb4]
10025c6e:	call   0x10008b47
10025c73:	cmp    DWORD PTR [eax+0x18],0x10
10025c77:	jb     0x10025c7e
10025c79:	mov    eax,DWORD PTR [eax+0x4]
10025c7c:	jmp    0x10025c81
10025c7e:	add    eax,0x4
10025c81:	push   eax
10025c82:	push   DWORD PTR [ebp+0x8]
10025c85:	call   0x10002080
10025c8a:	pop    ecx
10025c8b:	pop    ecx
10025c8c:	push   esi
10025c8d:	push   edi
10025c8e:	lea    ecx,[ebp-0xb4]
10025c94:	call   0x100012f0
10025c99:	call   0x10059b0d
10025c9e:	ret    0x4
10025ca1:	push   ebx
10025ca2:	push   ebp
10025ca3:	mov    ebp,DWORD PTR [esp+0xc]
10025ca7:	lea    eax,[ebp+0x38]
10025caa:	push   eax
10025cab:	mov    DWORD PTR [esp+0x10],eax
10025caf:	call   DWORD PTR ds:0x100660f0
10025cb5:	xor    ebx,ebx
10025cb7:	cmp    DWORD PTR [ebp+0x28],ebx
10025cba:	jne    0x10025ccd
10025cbc:	push   DWORD PTR [esp+0xc]
10025cc0:	call   DWORD PTR ds:0x100660ec
10025cc6:	pop    ebp
10025cc7:	mov    al,bl
10025cc9:	pop    ebx
10025cca:	ret    0x4
10025ccd:	push   esi
10025cce:	push   edi
10025ccf:	lea    esi,[ebp+0x18]
10025cd2:	call   0x10025d3f
10025cd7:	mov    edi,DWORD PTR [eax]
10025cd9:	cmp    edi,ebx
10025cdb:	je     0x10025ce2
10025cdd:	call   0x10009e75
10025ce2:	mov    eax,DWORD PTR [esi+0x10]
10025ce5:	cmp    eax,ebx
10025ce7:	je     0x10025d07
10025ce9:	inc    DWORD PTR [esi+0xc]
10025cec:	mov    edx,DWORD PTR [esi+0x8]
10025cef:	mov    ecx,DWORD PTR [esi+0xc]
10025cf2:	shl    edx,0x2
10025cf5:	cmp    edx,ecx
10025cf7:	ja     0x10025cfc
10025cf9:	mov    DWORD PTR [esi+0xc],ebx
10025cfc:	dec    eax
10025cfd:	cmp    eax,ebx
10025cff:	mov    DWORD PTR [esi+0x10],eax
10025d02:	jne    0x10025d07
10025d04:	mov    DWORD PTR [esi+0xc],ebx
10025d07:	cmp    DWORD PTR [ebp+0x28],ebx
10025d0a:	pop    edi
10025d0b:	pop    esi
10025d0c:	jne    0x10025d1f
10025d0e:	cmp    BYTE PTR [ebp+0x1],bl
10025d11:	je     0x10025d1f
10025d13:	mov    eax,DWORD PTR [ebp+0x50]
10025d16:	push   DWORD PTR [eax+0x30]
10025d19:	call   DWORD PTR ds:0x10066110
10025d1f:	mov    bl,0x1
10025d21:	jmp    0x10025cbc
10025d23:	mov    eax,esi
10025d25:	mov    BYTE PTR [esi+0x1],0x1
10025d29:	call   0x10025884
10025d2e:	test   eax,eax
10025d30:	jne    0x10025d3e
10025d32:	mov    eax,DWORD PTR [esi+0x50]
10025d35:	push   DWORD PTR [eax+0x30]
10025d38:	call   DWORD PTR ds:0x10066110
10025d3e:	ret    
10025d3f:	mov    eax,DWORD PTR [esi+0x10]
10025d42:	push   ebx
10025d43:	push   ebp
10025d44:	mov    ebp,DWORD PTR [esi+0xc]
10025d47:	add    eax,ebp
10025d49:	cmp    ebp,eax
10025d4b:	push   edi
10025d4c:	jbe    0x10025d53
10025d4e:	call   0x100433b0
10025d53:	mov    eax,DWORD PTR [esi+0x10]
10025d56:	add    eax,DWORD PTR [esi+0xc]
10025d59:	mov    edi,ebp
10025d5b:	mov    ebx,ebp
10025d5d:	shr    edi,0x2
10025d60:	and    ebx,0x3
10025d63:	cmp    ebp,eax
10025d65:	jb     0x10025d6c
10025d67:	call   0x100433b0
10025d6c:	mov    eax,DWORD PTR [esi+0x8]
10025d6f:	cmp    eax,edi
10025d71:	ja     0x10025d75
10025d73:	sub    edi,eax
10025d75:	mov    eax,DWORD PTR [esi+0x4]
10025d78:	mov    eax,DWORD PTR [eax+edi*4]
10025d7b:	pop    edi
10025d7c:	pop    ebp
10025d7d:	lea    eax,[eax+ebx*4]
10025d80:	pop    ebx
10025d81:	ret    
10025d82:	push   ebx
10025d83:	xor    ebx,ebx
10025d85:	jmp    0x10025d99
10025d87:	mov    eax,DWORD PTR [esi+0x10]
10025d8a:	cmp    eax,ebx
10025d8c:	je     0x10025d99
10025d8e:	dec    eax
10025d8f:	cmp    eax,ebx
10025d91:	mov    DWORD PTR [esi+0x10],eax
10025d94:	jne    0x10025d99
10025d96:	mov    DWORD PTR [esi+0xc],ebx
10025d99:	cmp    DWORD PTR [esi+0x10],ebx
10025d9c:	jne    0x10025d87
10025d9e:	push   edi
10025d9f:	mov    edi,DWORD PTR [esi+0x8]
10025da2:	jmp    0x10025db4
10025da4:	dec    edi
10025da5:	lea    eax,[eax+edi*4]
10025da8:	cmp    DWORD PTR [eax],ebx
10025daa:	je     0x10025db4
10025dac:	push   DWORD PTR [eax]
10025dae:	call   0x10042e92
10025db3:	pop    ecx
10025db4:	cmp    edi,ebx
10025db6:	mov    eax,DWORD PTR [esi+0x4]
10025db9:	ja     0x10025da4
10025dbb:	cmp    eax,ebx
10025dbd:	pop    edi
10025dbe:	je     0x10025dc7
10025dc0:	push   eax
10025dc1:	call   0x10042e92
10025dc6:	pop    ecx
10025dc7:	mov    DWORD PTR [esi+0x8],ebx
10025dca:	mov    DWORD PTR [esi+0x4],ebx
10025dcd:	pop    ebx
10025dce:	ret    
10025dcf:	mov    ecx,DWORD PTR [eax]
10025dd1:	test   ecx,ecx
10025dd3:	je     0x10025ddb
10025dd5:	mov    eax,DWORD PTR [ecx]
10025dd7:	push   0x1
10025dd9:	call   DWORD PTR [eax]
10025ddb:	ret    
10025ddc:	push   esi
10025ddd:	mov    esi,eax
10025ddf:	mov    eax,DWORD PTR [esi+0x10]
10025de2:	mov    ecx,DWORD PTR [esi+0xc]
10025de5:	add    ecx,eax
10025de7:	test   cl,0x3
10025dea:	push   edi
10025deb:	jne    0x10025dfd
10025ded:	add    eax,0x4
10025df0:	shr    eax,0x2
10025df3:	cmp    DWORD PTR [esi+0x8],eax
10025df6:	ja     0x10025dfd
10025df8:	call   0x10025e4f
10025dfd:	mov    edi,DWORD PTR [esi+0xc]
10025e00:	add    edi,DWORD PTR [esi+0x10]
10025e03:	mov    ecx,DWORD PTR [esi+0x8]
10025e06:	mov    eax,edi
10025e08:	shr    eax,0x2
10025e0b:	cmp    ecx,eax
10025e0d:	ja     0x10025e11
10025e0f:	sub    eax,ecx
10025e11:	push   ebx
10025e12:	mov    ebx,eax
10025e14:	mov    eax,DWORD PTR [esi+0x4]
10025e17:	shl    ebx,0x2
10025e1a:	cmp    DWORD PTR [ebx+eax*1],0x0
10025e1e:	jne    0x10025e2e
10025e20:	push   0x10
10025e22:	call   0x1004349e
10025e27:	pop    ecx
10025e28:	mov    ecx,DWORD PTR [esi+0x4]
10025e2b:	mov    DWORD PTR [ebx+ecx*1],eax
10025e2e:	mov    eax,DWORD PTR [esi+0x4]
10025e31:	mov    eax,DWORD PTR [eax+ebx*1]
10025e34:	and    edi,0x3
10025e37:	lea    edi,[eax+edi*4]
10025e3a:	test   edi,edi
10025e3c:	pop    ebx
10025e3d:	je     0x10025e47
10025e3f:	mov    eax,DWORD PTR [esp+0xc]
10025e43:	mov    eax,DWORD PTR [eax]
10025e45:	mov    DWORD PTR [edi],eax
10025e47:	inc    DWORD PTR [esi+0x10]
10025e4a:	pop    edi
10025e4b:	pop    esi
10025e4c:	ret    0x4
10025e4f:	push   ebp
10025e50:	mov    ebp,esp
10025e52:	sub    esp,0xc
10025e55:	mov    eax,DWORD PTR [esi+0x8]
10025e58:	push   ebx
10025e59:	push   edi
10025e5a:	mov    edx,0xfffffff
10025e5f:	xor    edi,edi
10025e61:	mov    ecx,edx
10025e63:	inc    edi
10025e64:	sub    ecx,eax
10025e66:	cmp    ecx,edi
10025e68:	mov    DWORD PTR [ebp-0x4],edi
10025e6b:	jae    0x10025e72
10025e6d:	jmp    0x10025f36
10025e72:	mov    ecx,eax
10025e74:	shr    ecx,1
10025e76:	cmp    ecx,0x8
10025e79:	jae    0x10025e7e
10025e7b:	push   0x8
10025e7d:	pop    ecx
10025e7e:	cmp    ecx,edi
10025e80:	jbe    0x10025e8b
10025e82:	sub    edx,ecx
10025e84:	cmp    eax,edx
10025e86:	ja     0x10025e8b
10025e88:	mov    DWORD PTR [ebp-0x4],ecx
10025e8b:	mov    ebx,DWORD PTR [esi+0xc]
10025e8e:	mov    ecx,DWORD PTR [ebp-0x4]
10025e91:	add    ecx,eax
10025e93:	shr    ebx,0x2
10025e96:	call   0x10025f75
10025e9b:	mov    edx,DWORD PTR [esi+0x4]
10025e9e:	mov    edi,ebx
10025ea0:	shl    edi,0x2
10025ea3:	mov    DWORD PTR [ebp-0x8],eax
10025ea6:	lea    ecx,[edi+eax*1]
10025ea9:	mov    eax,DWORD PTR [esi+0x8]
10025eac:	lea    eax,[edx+eax*4]
10025eaf:	add    edx,edi
10025eb1:	push   edx
10025eb2:	call   0x10025fc1
10025eb7:	mov    edx,DWORD PTR [esi+0x4]
10025eba:	pop    ecx
10025ebb:	mov    ecx,eax
10025ebd:	mov    eax,DWORD PTR [ebp-0x4]
10025ec0:	cmp    ebx,eax
10025ec2:	push   edx
10025ec3:	ja     0x10025eeb
10025ec5:	sub    eax,ebx
10025ec7:	mov    DWORD PTR [ebp-0xc],eax
10025eca:	lea    eax,[edx+edi*1]
10025ecd:	call   0x10025fc1
10025ed2:	pop    ecx
10025ed3:	mov    ecx,DWORD PTR [ebp-0xc]
10025ed6:	test   ecx,ecx
10025ed8:	mov    edi,eax
10025eda:	jbe    0x10025ee0
10025edc:	xor    eax,eax
10025ede:	rep stos DWORD PTR es:[edi],eax
10025ee0:	test   ebx,ebx
10025ee2:	jbe    0x10025f18
10025ee4:	mov    edi,DWORD PTR [ebp-0x8]
10025ee7:	mov    ecx,ebx
10025ee9:	jmp    0x10025f14
10025eeb:	mov    ebx,eax
10025eed:	shl    ebx,0x2
10025ef0:	lea    eax,[ebx+edx*1]
10025ef3:	call   0x10025fc1
10025ef8:	mov    ecx,DWORD PTR [esi+0x4]
10025efb:	add    ebx,ecx
10025efd:	lea    eax,[ecx+edi*1]
10025f00:	mov    ecx,DWORD PTR [ebp-0x8]
10025f03:	push   ebx
10025f04:	call   0x10025fc1
10025f09:	pop    ecx
10025f0a:	pop    ecx
10025f0b:	mov    ecx,DWORD PTR [ebp-0x4]
10025f0e:	test   ecx,ecx
10025f10:	mov    edi,eax
10025f12:	jbe    0x10025f18
10025f14:	xor    eax,eax
10025f16:	rep stos DWORD PTR es:[edi],eax
10025f18:	mov    eax,DWORD PTR [esi+0x4]
10025f1b:	test   eax,eax
10025f1d:	pop    edi
10025f1e:	pop    ebx
10025f1f:	je     0x10025f28
10025f21:	push   eax
10025f22:	call   0x10042e92
10025f27:	pop    ecx
10025f28:	mov    eax,DWORD PTR [ebp-0x8]
10025f2b:	mov    DWORD PTR [esi+0x4],eax
10025f2e:	mov    eax,DWORD PTR [ebp-0x4]
10025f31:	add    DWORD PTR [esi+0x8],eax
10025f34:	leave  
10025f35:	ret    
10025f36:	push   0x44
10025f38:	mov    eax,0x1006071f
10025f3d:	call   0x10059a35
10025f42:	push   0x1007182c
10025f47:	lea    ecx,[ebp-0x28]
10025f4a:	call   0x100011cd
10025f4f:	and    DWORD PTR [ebp-0x4],0x0
10025f53:	lea    eax,[ebp-0x28]
10025f56:	push   eax
10025f57:	lea    ecx,[ebp-0x50]
10025f5a:	call   0x10001077
10025f5f:	push   0x10074da0
10025f64:	lea    eax,[ebp-0x50]
10025f67:	push   eax
10025f68:	mov    DWORD PTR [ebp-0x50],0x1006b96c
10025f6f:	call   0x100479b4
10025f74:	int3   
10025f75:	push   ebp
10025f76:	mov    ebp,esp
10025f78:	sub    esp,0x10
10025f7b:	test   ecx,ecx
10025f7d:	ja     0x10025f8f
10025f7f:	xor    ecx,ecx
10025f81:	mov    eax,ecx
10025f83:	shl    eax,0x2
10025f86:	push   eax
10025f87:	call   0x1004349e
10025f8c:	pop    ecx
10025f8d:	leave  
10025f8e:	ret    
10025f8f:	or     eax,0xffffffff
10025f92:	xor    edx,edx
10025f94:	div    ecx
10025f96:	cmp    eax,0x4
10025f99:	jae    0x10025f81
10025f9b:	and    DWORD PTR [ebp-0x4],0x0
10025f9f:	lea    eax,[ebp-0x4]
10025fa2:	push   eax
10025fa3:	lea    ecx,[ebp-0x10]
10025fa6:	call   0x10042f12
10025fab:	push   0x10074cf8
10025fb0:	lea    eax,[ebp-0x10]
10025fb3:	push   eax
10025fb4:	mov    DWORD PTR [ebp-0x10],0x100665c8
10025fbb:	call   0x100479b4
10025fc0:	int3   
10025fc1:	sub    eax,DWORD PTR [esp+0x4]
10025fc5:	push   esi
10025fc6:	sar    eax,0x2
10025fc9:	lea    eax,[eax*4+0x0]
10025fd0:	lea    esi,[eax+ecx*1]
10025fd3:	je     0x10025fe4
10025fd5:	push   eax
10025fd6:	push   DWORD PTR [esp+0xc]
10025fda:	push   eax
10025fdb:	push   ecx
10025fdc:	call   0x10042ea6
10025fe1:	add    esp,0x10
10025fe4:	mov    eax,esi
10025fe6:	pop    esi
10025fe7:	ret    
10025fe8:	push   0x34
10025fea:	mov    eax,0x10064314
10025fef:	call   0x10059a35
10025ff4:	push   DWORD PTR [ebp+0xc]
10025ff7:	mov    BYTE PTR [ebp-0xd],0x0
10025ffb:	call   0x100087d7
10026000:	mov    DWORD PTR [ebp-0x20],eax
10026003:	push   DWORD PTR [ebp+0xc]
10026006:	xor    esi,esi
10026008:	mov    DWORD PTR [ebp-0x4],esi
1002600b:	call   0x100087d7
10026010:	mov    DWORD PTR [ebp-0x14],eax
10026013:	mov    DWORD PTR [ebp-0x1c],esi
10026016:	mov    DWORD PTR [ebp-0x18],esi
10026019:	mov    ecx,DWORD PTR [ebp+0x8]
1002601c:	mov    eax,DWORD PTR [ecx+0x4]
1002601f:	mov    edi,DWORD PTR [eax]
10026021:	mov    esi,ecx
10026023:	mov    DWORD PTR [ebp-0x24],edi
10026026:	mov    DWORD PTR [ebp-0x28],esi
10026029:	test   esi,esi
1002602b:	mov    ebx,DWORD PTR [ecx+0x4]
1002602e:	je     0x10026034
10026030:	cmp    esi,ecx
10026032:	je     0x10026039
10026034:	call   0x100433b0
10026039:	cmp    edi,ebx
1002603b:	je     0x100260e3
10026041:	mov    eax,DWORD PTR [ebp-0x20]
10026044:	and    DWORD PTR [ebp-0x38],0x0
10026048:	and    DWORD PTR [ebp-0x34],0x0
1002604c:	mov    DWORD PTR [ebp-0x40],eax
1002604f:	mov    eax,DWORD PTR [ebp-0x14]
10026052:	mov    DWORD PTR [ebp-0x3c],eax
10026055:	mov    eax,DWORD PTR [ebp+0x10]
10026058:	mov    DWORD PTR [ebp-0x30],eax
1002605b:	mov    BYTE PTR [ebp-0x2c],0x0
1002605f:	test   esi,esi
10026061:	mov    BYTE PTR [ebp-0x4],0x4
10026065:	jne    0x1002606c
10026067:	call   0x100433b0
1002606c:	cmp    edi,DWORD PTR [esi+0x4]
1002606f:	jne    0x10026076
10026071:	call   0x100433b0
10026076:	mov    edi,DWORD PTR [edi+0x8]
10026079:	mov    eax,DWORD PTR [edi]
1002607b:	lea    ecx,[ebp-0x40]
1002607e:	push   ecx
1002607f:	mov    ecx,edi
10026081:	call   DWORD PTR [eax]
10026083:	test   al,al
10026085:	je     0x1002611a
1002608b:	push   DWORD PTR [ebp-0x14]
1002608e:	mov    BYTE PTR [ebp-0xd],0x1
10026092:	push   DWORD PTR [ebp+0xc]
10026095:	call   0x1000889b
1002609a:	mov    eax,DWORD PTR [ebp-0x38]
1002609d:	and    DWORD PTR [ebp-0x38],0x0
100260a1:	mov    ebx,eax
100260a3:	lea    edi,[ebp-0x1c]
100260a6:	call   0x1002664a
100260ab:	mov    ebx,DWORD PTR [ebp-0x34]
100260ae:	mov    edi,DWORD PTR [ebp-0x18]
100260b1:	and    DWORD PTR [ebp-0x34],0x0
100260b5:	cmp    ebx,edi
100260b7:	je     0x100260c2
100260b9:	test   edi,edi
100260bb:	je     0x100260c2
100260bd:	call   0x10009e75
100260c2:	cmp    BYTE PTR [ebp-0x2c],0x0
100260c6:	mov    DWORD PTR [ebp-0x18],ebx
100260c9:	je     0x10026142
100260cb:	mov    BYTE PTR [ebp-0x4],0x3
100260cf:	mov    edi,DWORD PTR [ebp-0x34]
100260d2:	test   edi,edi
100260d4:	je     0x100260db
100260d6:	call   0x10009e75
100260db:	lea    eax,[ebp-0x38]
100260de:	call   0x10009e32
100260e3:	cmp    BYTE PTR [ebp-0xd],0x0
100260e7:	je     0x1002618f
100260ed:	mov    eax,DWORD PTR [ebp-0x1c]
100260f0:	test   eax,eax
100260f2:	je     0x10026170
100260f4:	mov    ecx,DWORD PTR [eax+0x34]
100260f7:	mov    ecx,DWORD PTR [ecx+0x18]
100260fa:	mov    ebx,DWORD PTR [ebp+0x14]
100260fd:	mov    DWORD PTR [eax+0x38],ecx
10026100:	mov    esi,DWORD PTR [eax+0x34]
10026103:	and    DWORD PTR [eax+0x34],0x0
10026107:	mov    edi,DWORD PTR [ebx]
10026109:	cmp    esi,edi
1002610b:	je     0x10026116
1002610d:	test   edi,edi
1002610f:	je     0x10026116
10026111:	call   0x10009e75
10026116:	mov    DWORD PTR [ebx],esi
10026118:	jmp    0x1002618f
1002611a:	mov    esi,DWORD PTR [ebp+0xc]
1002611d:	mov    edi,DWORD PTR [ebp-0x14]
10026120:	call   0x100089f8
10026125:	test   al,al
10026127:	jne    0x10026142
10026129:	push   esi
1002612a:	call   0x100087d7
1002612f:	mov    esi,eax
10026131:	cmp    esi,edi
10026133:	je     0x1002613f
10026135:	test   edi,edi
10026137:	je     0x1002613f
10026139:	push   edi
1002613a:	call   0x10009eaf
1002613f:	mov    DWORD PTR [ebp-0x14],esi
10026142:	mov    BYTE PTR [ebp-0x4],0x3
10026146:	mov    edi,DWORD PTR [ebp-0x34]
10026149:	test   edi,edi
1002614b:	je     0x10026152
1002614d:	call   0x10009e75
10026152:	lea    eax,[ebp-0x38]
10026155:	call   0x10009e32
1002615a:	lea    esi,[ebp-0x28]
1002615d:	call   0x10026666
10026162:	mov    edi,DWORD PTR [ebp-0x24]
10026165:	mov    esi,DWORD PTR [ebp-0x28]
10026168:	mov    ecx,DWORD PTR [ebp+0x8]
1002616b:	jmp    0x10026029
10026170:	mov    ebx,DWORD PTR [ebp-0x18]
10026173:	test   ebx,ebx
10026175:	je     0x1002619b
10026177:	mov    esi,DWORD PTR [ebp+0x14]
1002617a:	mov    edi,DWORD PTR [esi]
1002617c:	and    DWORD PTR [ebp-0x18],0x0
10026180:	cmp    ebx,edi
10026182:	je     0x1002618d
10026184:	test   edi,edi
10026186:	je     0x1002618d
10026188:	call   0x10009e75
1002618d:	mov    DWORD PTR [esi],ebx
1002618f:	mov    edi,DWORD PTR [ebp-0x18]
10026192:	test   edi,edi
10026194:	je     0x1002619b
10026196:	call   0x10009e75
1002619b:	lea    eax,[ebp-0x1c]
1002619e:	mov    BYTE PTR [ebp-0x4],0x1
100261a2:	call   0x10009e32
100261a7:	mov    BYTE PTR [ebp-0x4],0x0
100261ab:	cmp    DWORD PTR [ebp-0x14],0x0
100261af:	je     0x100261b9
100261b1:	push   DWORD PTR [ebp-0x14]
100261b4:	call   0x10009eaf
100261b9:	or     DWORD PTR [ebp-0x4],0xffffffff
100261bd:	cmp    DWORD PTR [ebp-0x20],0x0
100261c1:	je     0x100261cb
100261c3:	push   DWORD PTR [ebp-0x20]
100261c6:	call   0x10009eaf
100261cb:	mov    al,BYTE PTR [ebp-0xd]
100261ce:	call   0x10059b0d
100261d3:	ret    
100261d4:	push   edi
100261d5:	mov    edi,DWORD PTR [esi+0xc]
100261d8:	test   edi,edi
100261da:	je     0x100261e1
100261dc:	call   0x10009e75
100261e1:	lea    eax,[esi+0x8]
100261e4:	pop    edi
100261e5:	jmp    0x10009e32
100261ea:	push   0x30
100261ec:	mov    eax,0x100642d1
100261f1:	call   0x10059a35
100261f6:	push   DWORD PTR [ebp+0x14]
100261f9:	mov    BYTE PTR [ebp-0xd],0x0
100261fd:	call   0x1000901d
10026202:	mov    DWORD PTR [ebp-0x18],eax
10026205:	push   DWORD PTR [ebp+0x14]
10026208:	and    DWORD PTR [ebp-0x4],0x0
1002620c:	call   0x1000901d
10026211:	mov    DWORD PTR [ebp-0x14],eax
10026214:	mov    ebx,DWORD PTR [ebp+0x8]
10026217:	mov    BYTE PTR [ebp-0x4],0x1
1002621b:	mov    eax,DWORD PTR [ebx+0x4]
1002621e:	mov    esi,DWORD PTR [eax]
10026220:	mov    edi,ebx
10026222:	mov    DWORD PTR [ebp-0x1c],esi
10026225:	mov    DWORD PTR [ebp-0x20],edi
10026228:	test   edi,edi
1002622a:	mov    eax,DWORD PTR [ebx+0x4]
1002622d:	mov    DWORD PTR [ebp-0x24],eax
10026230:	je     0x10026236
10026232:	cmp    edi,ebx
10026234:	je     0x1002623b
10026236:	call   0x100433b0
1002623b:	cmp    esi,DWORD PTR [ebp-0x24]
1002623e:	je     0x100262a5
10026240:	test   edi,edi
10026242:	mov    ecx,DWORD PTR [ebp+0xc]
10026245:	mov    eax,DWORD PTR [ebp+0x18]
10026248:	mov    al,BYTE PTR [eax]
1002624a:	mov    DWORD PTR [ebp-0x3c],ecx
1002624d:	mov    ecx,DWORD PTR [ebp-0x18]
10026250:	mov    DWORD PTR [ebp-0x38],ecx
10026253:	mov    ecx,DWORD PTR [ebp-0x14]
10026256:	mov    DWORD PTR [ebp-0x34],ecx
10026259:	mov    ecx,DWORD PTR [ebp+0x10]
1002625c:	mov    DWORD PTR [ebp-0x30],ecx
1002625f:	mov    BYTE PTR [ebp-0x2c],al
10026262:	mov    BYTE PTR [ebp-0x2b],0x0
10026266:	jne    0x1002626d
10026268:	call   0x100433b0
1002626d:	cmp    esi,DWORD PTR [edi+0x4]
10026270:	jne    0x10026277
10026272:	call   0x100433b0
10026277:	mov    esi,DWORD PTR [esi+0x8]
1002627a:	mov    eax,DWORD PTR [esi]
1002627c:	lea    ecx,[ebp-0x3c]
1002627f:	push   ecx
10026280:	mov    ecx,esi
10026282:	call   DWORD PTR [eax]
10026284:	test   al,al
10026286:	je     0x100262c6
10026288:	mov    al,BYTE PTR [ebp-0x2c]
1002628b:	mov    ecx,DWORD PTR [ebp+0x18]
1002628e:	push   DWORD PTR [ebp-0x14]
10026291:	mov    edi,DWORD PTR [ebp+0x14]
10026294:	mov    BYTE PTR [ebp-0xd],0x1
10026298:	mov    BYTE PTR [ecx],al
1002629a:	call   0x100090f1
1002629f:	cmp    BYTE PTR [ebp-0x2b],0x0
100262a3:	je     0x100262e8
100262a5:	lea    eax,[ebp-0x14]
100262a8:	mov    BYTE PTR [ebp-0x4],0x0
100262ac:	call   0x10009e32
100262b1:	or     DWORD PTR [ebp-0x4],0xffffffff
100262b5:	lea    eax,[ebp-0x18]
100262b8:	call   0x10009e32
100262bd:	mov    al,BYTE PTR [ebp-0xd]
100262c0:	call   0x10059b0d
100262c5:	ret    
100262c6:	mov    esi,DWORD PTR [ebp+0x14]
100262c9:	mov    edi,DWORD PTR [ebp-0x14]
100262cc:	call   0x10009284
100262d1:	test   al,al
100262d3:	jne    0x100262e8
100262d5:	push   esi
100262d6:	call   0x1000901d
100262db:	mov    ebx,eax
100262dd:	lea    edi,[ebp-0x14]
100262e0:	call   0x1002664a
100262e5:	mov    ebx,DWORD PTR [ebp+0x8]
100262e8:	lea    esi,[ebp-0x20]
100262eb:	call   0x10026666
100262f0:	mov    esi,DWORD PTR [ebp-0x1c]
100262f3:	mov    edi,DWORD PTR [ebp-0x20]
100262f6:	jmp    0x10026228
100262fb:	push   0x34
100262fd:	mov    eax,0x100642a6
10026302:	call   0x10059a35
10026307:	push   DWORD PTR [ebp+0x14]
1002630a:	mov    BYTE PTR [ebp-0x11],0x0
1002630e:	call   0x1000901d
10026313:	mov    DWORD PTR [ebp-0x1c],eax
10026316:	push   DWORD PTR [ebp+0x14]
10026319:	and    DWORD PTR [ebp-0x4],0x0
1002631d:	call   0x1000901d
10026322:	mov    DWORD PTR [ebp-0x18],eax
10026325:	mov    ebx,DWORD PTR [ebp+0x8]
10026328:	mov    BYTE PTR [ebp-0x4],0x1
1002632c:	mov    eax,DWORD PTR [ebx+0x4]
1002632f:	mov    esi,DWORD PTR [eax]
10026331:	mov    edi,ebx
10026333:	mov    DWORD PTR [ebp-0x20],esi
10026336:	mov    DWORD PTR [ebp-0x24],edi
10026339:	test   edi,edi
1002633b:	mov    eax,DWORD PTR [ebx+0x4]
1002633e:	mov    DWORD PTR [ebp-0x28],eax
10026341:	je     0x10026347
10026343:	cmp    edi,ebx
10026345:	je     0x1002634c
10026347:	call   0x100433b0
1002634c:	cmp    esi,DWORD PTR [ebp-0x28]
1002634f:	je     0x100263a6
10026351:	test   edi,edi
10026353:	mov    eax,DWORD PTR [ebp+0xc]
10026356:	mov    DWORD PTR [ebp-0x40],eax
10026359:	mov    eax,DWORD PTR [ebp-0x1c]
1002635c:	mov    DWORD PTR [ebp-0x3c],eax
1002635f:	mov    eax,DWORD PTR [ebp-0x18]
10026362:	mov    DWORD PTR [ebp-0x38],eax
10026365:	mov    eax,DWORD PTR [ebp+0x10]
10026368:	mov    DWORD PTR [ebp-0x34],eax
1002636b:	mov    BYTE PTR [ebp-0x30],0x0
1002636f:	jne    0x10026376
10026371:	call   0x100433b0
10026376:	cmp    esi,DWORD PTR [edi+0x4]
10026379:	jne    0x10026380
1002637b:	call   0x100433b0
10026380:	mov    esi,DWORD PTR [esi+0x8]
10026383:	mov    eax,DWORD PTR [esi]
10026385:	lea    ecx,[ebp-0x40]
10026388:	push   ecx
10026389:	mov    ecx,esi
1002638b:	call   DWORD PTR [eax]
1002638d:	test   al,al
1002638f:	je     0x100263c7
10026391:	push   DWORD PTR [ebp-0x18]
10026394:	mov    edi,DWORD PTR [ebp+0x14]
10026397:	mov    BYTE PTR [ebp-0x11],0x1
1002639b:	call   0x100090f1
100263a0:	cmp    BYTE PTR [ebp-0x30],0x0
100263a4:	je     0x100263e9
100263a6:	lea    eax,[ebp-0x18]
100263a9:	mov    BYTE PTR [ebp-0x4],0x0
100263ad:	call   0x10009e32
100263b2:	or     DWORD PTR [ebp-0x4],0xffffffff
100263b6:	lea    eax,[ebp-0x1c]
100263b9:	call   0x10009e32
100263be:	mov    al,BYTE PTR [ebp-0x11]
100263c1:	call   0x10059b0d
100263c6:	ret    
100263c7:	mov    esi,DWORD PTR [ebp+0x14]
100263ca:	mov    edi,DWORD PTR [ebp-0x18]
100263cd:	call   0x10009284
100263d2:	test   al,al
100263d4:	jne    0x100263e9
100263d6:	push   esi
100263d7:	call   0x1000901d
100263dc:	mov    ebx,eax
100263de:	lea    edi,[ebp-0x18]
100263e1:	call   0x1002664a
100263e6:	mov    ebx,DWORD PTR [ebp+0x8]
100263e9:	lea    esi,[ebp-0x24]
100263ec:	call   0x10026666
100263f1:	mov    esi,DWORD PTR [ebp-0x20]
100263f4:	mov    edi,DWORD PTR [ebp-0x24]
100263f7:	jmp    0x10026339
100263fc:	push   ebp
100263fd:	mov    ebp,esp
100263ff:	sub    esp,0x20
10026402:	mov    eax,DWORD PTR [ebp+0x8]
10026405:	mov    DWORD PTR [ebp-0x20],eax
10026408:	mov    eax,DWORD PTR [ebp+0xc]
1002640b:	push   ebx
1002640c:	mov    DWORD PTR [ebp-0x1c],eax
1002640f:	mov    eax,DWORD PTR [edi+0x4]
10026412:	push   esi
10026413:	mov    BYTE PTR [ebp-0x18],0x0
10026417:	mov    esi,DWORD PTR [eax]
10026419:	mov    ebx,edi
1002641b:	mov    BYTE PTR [ebp-0x1],0x0
1002641f:	mov    DWORD PTR [ebp-0x8],esi
10026422:	mov    DWORD PTR [ebp-0xc],ebx
10026425:	test   ebx,ebx
10026427:	mov    eax,DWORD PTR [edi+0x4]
1002642a:	mov    DWORD PTR [ebp-0x10],eax
1002642d:	je     0x10026433
1002642f:	cmp    ebx,edi
10026431:	je     0x10026438
10026433:	call   0x100433b0
10026438:	cmp    esi,DWORD PTR [ebp-0x10]
1002643b:	je     0x10026489
1002643d:	test   ebx,ebx
1002643f:	jne    0x10026446
10026441:	call   0x100433b0
10026446:	cmp    esi,DWORD PTR [ebx+0x4]
10026449:	jne    0x10026450
1002644b:	call   0x100433b0
10026450:	mov    ecx,DWORD PTR [esi+0x8]
10026453:	mov    eax,DWORD PTR [ecx]
10026455:	lea    edx,[ebp-0x20]
10026458:	push   edx
10026459:	call   DWORD PTR [eax]
1002645b:	test   al,al
1002645d:	je     0x10026479
1002645f:	cmp    BYTE PTR [ebp-0x18],0x0
10026463:	mov    BYTE PTR [ebp-0x1],0x1
10026467:	jne    0x10026489
10026469:	mov    eax,DWORD PTR [ebp+0x8]
1002646c:	cmp    DWORD PTR [eax],0x0
1002646f:	je     0x10026489
10026471:	mov    eax,DWORD PTR [ebp+0xc]
10026474:	cmp    DWORD PTR [eax],0x0
10026477:	je     0x10026489
10026479:	lea    esi,[ebp-0xc]
1002647c:	call   0x10026666
10026481:	mov    esi,DWORD PTR [ebp-0x8]
10026484:	mov    ebx,DWORD PTR [ebp-0xc]
10026487:	jmp    0x10026425
10026489:	mov    al,BYTE PTR [ebp-0x1]
1002648c:	pop    esi
1002648d:	pop    ebx
1002648e:	leave  
1002648f:	ret    
10026490:	push   ebp
10026491:	mov    ebp,esp
10026493:	and    esp,0xfffffff8
10026496:	sub    esp,0x30
10026499:	mov    eax,ds:0x1007e030
1002649e:	xor    eax,esp
100264a0:	mov    DWORD PTR [esp+0x2c],eax
100264a4:	push   0x10
100264a6:	pop    eax
100264a7:	mov    DWORD PTR [esp+0x8],eax
100264ab:	mov    DWORD PTR [esp+0x4],eax
100264af:	lea    eax,[esp+0x8]
100264b3:	push   eax
100264b4:	lea    eax,[esp+0x20]
100264b8:	push   eax
100264b9:	push   DWORD PTR [esi]
100264bb:	call   DWORD PTR ds:0x100663a4
100264c1:	cmp    eax,0xffffffff
100264c4:	je     0x10026541
100264c6:	lea    eax,[esp+0x4]
100264ca:	push   eax
100264cb:	lea    eax,[esp+0x10]
100264cf:	push   eax
100264d0:	push   DWORD PTR [esi]
100264d2:	call   DWORD PTR ds:0x100663a0
100264d8:	cmp    eax,0xffffffff
100264db:	je     0x10026541
100264dd:	cmp    WORD PTR [esp+0xc],0x2
100264e3:	jne    0x10026541
100264e5:	cmp    WORD PTR [esp+0x1c],0x2
100264eb:	jne    0x10026541
100264ed:	mov    eax,DWORD PTR [esp+0x10]
100264f1:	cmp    eax,DWORD PTR [esp+0x20]
100264f5:	je     0x1002653d
100264f7:	push   0x2a3f0fba
100264fc:	push   0x71844eb6
10026501:	push   0x3533d6e
10026506:	push   0x10071868
1002650b:	call   0x10004246
10026510:	pop    ecx
10026511:	pop    ecx
10026512:	push   eax
10026513:	call   0x10004246
10026518:	pop    ecx
10026519:	pop    ecx
1002651a:	push   eax
1002651b:	call   0x10004246
10026520:	push   eax
10026521:	push   0x9
10026523:	push   0x100718a8
10026528:	call   0x10004258
1002652d:	add    esp,0x14
10026530:	push   eax
10026531:	call   DWORD PTR ds:0x100663e0
10026537:	cmp    DWORD PTR [esp+0x10],eax
1002653b:	jne    0x10026541
1002653d:	mov    al,0x1
1002653f:	jmp    0x10026543
10026541:	xor    al,al
10026543:	mov    ecx,DWORD PTR [esp+0x2c]
10026547:	xor    ecx,esp
10026549:	call   0x10042e97
1002654e:	mov    esp,ebp
10026550:	pop    ebp
10026551:	ret    
10026552:	push   ebp
10026553:	mov    ebp,esp
10026555:	and    esp,0xfffffff8
10026558:	push   0xffffffff
1002655a:	push   0x10061a8c
1002655f:	mov    eax,fs:0x0
10026565:	push   eax
10026566:	sub    esp,0x3c
10026569:	push   ebx
1002656a:	push   esi
1002656b:	mov    eax,ds:0x1007e030
10026570:	xor    eax,esp
10026572:	push   eax
10026573:	lea    eax,[esp+0x48]
10026577:	mov    fs:0x0,eax
1002657d:	push   0x2707ccb2
10026582:	push   0x100718f4
10026587:	call   0x10004246
1002658c:	push   0x41bb8a3c
10026591:	push   eax
10026592:	call   0x10004246
10026597:	push   0x43a78eb0
1002659c:	push   eax
1002659d:	call   0x10004246
100265a2:	push   eax
100265a3:	push   0x5
100265a5:	push   0x10071928
100265aa:	call   0x10004258
100265af:	add    esp,0x24
100265b2:	push   eax
100265b3:	lea    ecx,[esp+0x10]
100265b7:	call   0x100011cd
100265bc:	and    DWORD PTR [esp+0x50],0x0
100265c1:	push   0x0
100265c3:	lea    eax,[esp+0x10]
100265c7:	push   eax
100265c8:	lea    eax,[esp+0x30]
100265cc:	push   eax
100265cd:	mov    eax,DWORD PTR [ebp+0x8]
100265d0:	add    eax,0x18
100265d3:	call   0x100084cc
100265d8:	mov    esi,eax
100265da:	push   0x163cf8de
100265df:	push   0x100718b4
100265e4:	mov    BYTE PTR [esp+0x58],0x1
100265e9:	call   0x10004246
100265ee:	cmp    DWORD PTR [esi+0x18],0x10
100265f2:	pop    ecx
100265f3:	pop    ecx
100265f4:	jb     0x100265fb
100265f6:	mov    esi,DWORD PTR [esi+0x4]
100265f9:	jmp    0x100265fe
100265fb:	add    esi,0x4
100265fe:	push   eax
100265ff:	push   0x8
10026601:	push   0x100718e8
10026606:	call   0x10004258
1002660b:	add    esp,0xc
1002660e:	push   eax
1002660f:	push   esi
10026610:	call   0x10045a30
10026615:	pop    ecx
10026616:	pop    ecx
10026617:	push   0x0
10026619:	test   eax,eax
1002661b:	push   0x1
1002661d:	lea    ecx,[esp+0x30]
10026621:	setne  bl
10026624:	call   0x100012f0
10026629:	push   0x0
1002662b:	push   0x1
1002662d:	lea    ecx,[esp+0x14]
10026631:	call   0x100012f0
10026636:	mov    al,bl
10026638:	mov    ecx,DWORD PTR [esp+0x48]
1002663c:	mov    DWORD PTR fs:0x0,ecx
10026643:	pop    ecx
10026644:	pop    esi
10026645:	pop    ebx
10026646:	mov    esp,ebp
10026648:	pop    ebp
10026649:	ret    
1002664a:	push   esi
1002664b:	mov    esi,DWORD PTR [edi]
1002664d:	cmp    ebx,esi
1002664f:	je     0x10026662
10026651:	test   esi,esi
10026653:	je     0x10026662
10026655:	push   esi
10026656:	call   0x10009f12
1002665b:	push   esi
1002665c:	call   0x10042e92
10026661:	pop    ecx
10026662:	mov    DWORD PTR [edi],ebx
10026664:	pop    esi
10026665:	ret    
10026666:	cmp    DWORD PTR [esi],0x0
10026669:	jne    0x10026670
1002666b:	call   0x100433b0
10026670:	mov    eax,DWORD PTR [esi]
10026672:	mov    ecx,DWORD PTR [esi+0x4]
10026675:	cmp    ecx,DWORD PTR [eax+0x4]
10026678:	jne    0x1002667f
1002667a:	call   0x100433b0
1002667f:	mov    eax,DWORD PTR [esi+0x4]
10026682:	mov    eax,DWORD PTR [eax]
10026684:	mov    DWORD PTR [esi+0x4],eax
10026687:	mov    eax,esi
10026689:	ret    
1002668a:	push   ebp
1002668b:	mov    ebp,esp
1002668d:	and    esp,0xfffffff8
10026690:	push   0xffffffff
10026692:	push   0x10060aae
10026697:	mov    eax,fs:0x0
1002669d:	push   eax
1002669e:	sub    esp,0x28
100266a1:	push   ebx
100266a2:	push   esi
100266a3:	push   edi
100266a4:	mov    eax,ds:0x1007e030
100266a9:	xor    eax,esp
100266ab:	push   eax
100266ac:	lea    eax,[esp+0x38]
100266b0:	mov    fs:0x0,eax
100266b6:	xor    ebx,ebx
100266b8:	cmp    DWORD PTR ds:0x10080f90,ebx
100266be:	jne    0x1002693a
100266c4:	call   0x1001b07b
100266c9:	mov    DWORD PTR [esp+0x20],eax
100266cd:	mov    DWORD PTR [esp+0x24],ebx
100266d1:	push   0x4
100266d3:	pop    esi
100266d4:	push   esi
100266d5:	mov    DWORD PTR [esp+0x44],ebx
100266d9:	call   0x1004349e
100266de:	cmp    eax,ebx
100266e0:	pop    ecx
100266e1:	je     0x100266ef
100266e3:	mov    DWORD PTR [eax],0x10071968
100266e9:	mov    DWORD PTR [esp+0x14],eax
100266ed:	jmp    0x100266f3
100266ef:	mov    DWORD PTR [esp+0x14],ebx
100266f3:	mov    eax,DWORD PTR [esp+0x20]
100266f7:	push   eax
100266f8:	lea    ecx,[esp+0x20]
100266fc:	push   ecx
100266fd:	lea    eax,[esp+0x1c]
10026701:	push   eax
10026702:	mov    edi,ecx
10026704:	call   0x10026c04
10026709:	push   esi
1002670a:	call   0x1004349e
1002670f:	cmp    eax,ebx
10026711:	pop    ecx
10026712:	je     0x10026720
10026714:	mov    DWORD PTR [eax],0x10071970
1002671a:	mov    DWORD PTR [esp+0x14],eax
1002671e:	jmp    0x10026724
10026720:	mov    DWORD PTR [esp+0x14],ebx
10026724:	mov    eax,DWORD PTR [esp+0x20]
10026728:	push   eax
10026729:	lea    ecx,[esp+0x20]
1002672d:	push   ecx
1002672e:	lea    eax,[esp+0x1c]
10026732:	push   eax
10026733:	mov    edi,ecx
10026735:	call   0x10026c04
1002673a:	push   esi
1002673b:	call   0x1004349e
10026740:	cmp    eax,ebx
10026742:	pop    ecx
10026743:	je     0x10026751
10026745:	mov    DWORD PTR [eax],0x10071988
1002674b:	mov    DWORD PTR [esp+0x14],eax
1002674f:	jmp    0x10026755
10026751:	mov    DWORD PTR [esp+0x14],ebx
10026755:	mov    eax,DWORD PTR [esp+0x20]
10026759:	push   eax
1002675a:	lea    ecx,[esp+0x20]
1002675e:	push   ecx
1002675f:	lea    eax,[esp+0x1c]
10026763:	push   eax
10026764:	mov    edi,ecx
10026766:	call   0x10026c04
1002676b:	push   esi
1002676c:	call   0x1004349e
10026771:	cmp    eax,ebx
10026773:	pop    ecx
10026774:	je     0x10026782
10026776:	mov    DWORD PTR [eax],0x10071998
1002677c:	mov    DWORD PTR [esp+0x14],eax
10026780:	jmp    0x10026786
10026782:	mov    DWORD PTR [esp+0x14],ebx
10026786:	mov    eax,DWORD PTR [esp+0x20]
1002678a:	push   eax
1002678b:	lea    ecx,[esp+0x20]
1002678f:	push   ecx
10026790:	lea    eax,[esp+0x1c]
10026794:	push   eax
10026795:	mov    edi,ecx
10026797:	call   0x10026c04
1002679c:	push   esi
1002679d:	call   0x1004349e
100267a2:	cmp    eax,ebx
100267a4:	pop    ecx
100267a5:	je     0x100267b3
100267a7:	mov    DWORD PTR [eax],0x100719a8
100267ad:	mov    DWORD PTR [esp+0x14],eax
100267b1:	jmp    0x100267b7
100267b3:	mov    DWORD PTR [esp+0x14],ebx
100267b7:	mov    eax,DWORD PTR [esp+0x20]
100267bb:	push   eax
100267bc:	lea    ecx,[esp+0x20]
100267c0:	push   ecx
100267c1:	lea    eax,[esp+0x1c]
100267c5:	push   eax
100267c6:	mov    edi,ecx
100267c8:	call   0x10026c04
100267cd:	push   esi
100267ce:	call   0x1004349e
100267d3:	cmp    eax,ebx
100267d5:	pop    ecx
100267d6:	je     0x100267e4
100267d8:	mov    DWORD PTR [eax],0x10071938
100267de:	mov    DWORD PTR [esp+0x14],eax
100267e2:	jmp    0x100267e8
100267e4:	mov    DWORD PTR [esp+0x14],ebx
100267e8:	mov    eax,DWORD PTR [esp+0x20]
100267ec:	push   eax
100267ed:	lea    ecx,[esp+0x20]
100267f1:	push   ecx
100267f2:	lea    eax,[esp+0x1c]
100267f6:	push   eax
100267f7:	mov    edi,ecx
100267f9:	call   0x10026c04
100267fe:	push   esi
100267ff:	call   0x1004349e
10026804:	cmp    eax,ebx
10026806:	pop    ecx
10026807:	je     0x10026815
10026809:	mov    DWORD PTR [eax],0x10071990
1002680f:	mov    DWORD PTR [esp+0x14],eax
10026813:	jmp    0x10026819
10026815:	mov    DWORD PTR [esp+0x14],ebx
10026819:	mov    eax,DWORD PTR [esp+0x20]
1002681d:	push   eax
1002681e:	lea    ecx,[esp+0x20]
10026822:	push   ecx
10026823:	lea    eax,[esp+0x1c]
10026827:	push   eax
10026828:	mov    edi,ecx
1002682a:	call   0x10026c04
1002682f:	push   esi
10026830:	call   0x1004349e
10026835:	cmp    eax,ebx
10026837:	pop    ecx
10026838:	je     0x10026846
1002683a:	mov    DWORD PTR [eax],0x10071978
10026840:	mov    DWORD PTR [esp+0x14],eax
10026844:	jmp    0x1002684a
10026846:	mov    DWORD PTR [esp+0x14],ebx
1002684a:	mov    eax,DWORD PTR [esp+0x20]
1002684e:	push   eax
1002684f:	lea    ecx,[esp+0x20]
10026853:	push   ecx
10026854:	lea    eax,[esp+0x1c]
10026858:	push   eax
10026859:	mov    edi,ecx
1002685b:	call   0x10026c04
10026860:	push   esi
10026861:	call   0x1004349e
10026866:	cmp    eax,ebx
10026868:	pop    ecx
10026869:	je     0x10026877
1002686b:	mov    DWORD PTR [eax],0x10071958
10026871:	mov    DWORD PTR [esp+0x14],eax
10026875:	jmp    0x1002687b
10026877:	mov    DWORD PTR [esp+0x14],ebx
1002687b:	mov    eax,DWORD PTR [esp+0x20]
1002687f:	push   eax
10026880:	lea    ecx,[esp+0x20]
10026884:	push   ecx
10026885:	lea    eax,[esp+0x1c]
10026889:	push   eax
1002688a:	mov    edi,ecx
1002688c:	call   0x10026c04
10026891:	push   esi
10026892:	call   0x1004349e
10026897:	cmp    eax,ebx
10026899:	pop    ecx
1002689a:	je     0x100268a8
1002689c:	mov    DWORD PTR [eax],0x10071940
100268a2:	mov    DWORD PTR [esp+0x14],eax
100268a6:	jmp    0x100268ac
100268a8:	mov    DWORD PTR [esp+0x14],ebx
100268ac:	mov    eax,DWORD PTR [esp+0x20]
100268b0:	push   eax
100268b1:	lea    ecx,[esp+0x20]
100268b5:	push   ecx
100268b6:	lea    eax,[esp+0x1c]
100268ba:	push   eax
100268bb:	mov    edi,ecx
100268bd:	call   0x10026c04
100268c2:	push   esi
100268c3:	call   0x1004349e
100268c8:	cmp    eax,ebx
100268ca:	pop    ecx
100268cb:	je     0x100268d9
100268cd:	mov    DWORD PTR [eax],0x10071960
100268d3:	mov    DWORD PTR [esp+0x14],eax
100268d7:	jmp    0x100268dd
100268d9:	mov    DWORD PTR [esp+0x14],ebx
100268dd:	mov    eax,DWORD PTR [esp+0x20]
100268e1:	push   eax
100268e2:	lea    ecx,[esp+0x20]
100268e6:	push   ecx
100268e7:	lea    eax,[esp+0x1c]
100268eb:	push   eax
100268ec:	mov    edi,ecx
100268ee:	call   0x10026c04
100268f3:	mov    eax,DWORD PTR [esp+0x20]
100268f7:	mov    ebx,DWORD PTR [eax]
100268f9:	mov    esi,0x10080f88
100268fe:	mov    DWORD PTR [esp+0x18],eax
10026902:	call   0x10026ca5
10026907:	push   DWORD PTR [esp+0x18]
1002690b:	mov    eax,ds:0x10080f8c
10026910:	mov    ecx,DWORD PTR [eax]
10026912:	push   edi
10026913:	push   ebx
10026914:	mov    eax,edi
10026916:	push   eax
10026917:	push   ecx
10026918:	push   esi
10026919:	push   DWORD PTR [esp+0x2c]
1002691d:	call   0x10026cce
10026922:	or     DWORD PTR [esp+0x40],0xffffffff
10026927:	mov    esi,edi
10026929:	call   0x10026ca5
1002692e:	push   DWORD PTR [esp+0x20]
10026932:	call   0x10042e92
10026937:	pop    ecx
10026938:	xor    ebx,ebx
1002693a:	cmp    DWORD PTR ds:0x10080f84,ebx
10026940:	jne    0x10026a69
10026946:	call   0x1001b07b
1002694b:	mov    DWORD PTR [esp+0x20],eax
1002694f:	mov    DWORD PTR [esp+0x24],ebx
10026953:	push   0x4
10026955:	pop    esi
10026956:	push   esi
10026957:	mov    DWORD PTR [esp+0x44],0x1
1002695f:	call   0x1004349e
10026964:	cmp    eax,ebx
10026966:	pop    ecx
10026967:	je     0x10026975
10026969:	mov    DWORD PTR [eax],0x100719b0
1002696f:	mov    DWORD PTR [esp+0x14],eax
10026973:	jmp    0x10026979
10026975:	mov    DWORD PTR [esp+0x14],ebx
10026979:	mov    eax,DWORD PTR [esp+0x20]
1002697d:	push   eax
1002697e:	lea    ecx,[esp+0x20]
10026982:	push   ecx
10026983:	lea    eax,[esp+0x1c]
10026987:	push   eax
10026988:	mov    edi,ecx
1002698a:	call   0x10026c04
1002698f:	push   esi
10026990:	call   0x1004349e
10026995:	cmp    eax,ebx
10026997:	pop    ecx
10026998:	je     0x100269a6
1002699a:	mov    DWORD PTR [eax],0x100719a0
100269a0:	mov    DWORD PTR [esp+0x14],eax
100269a4:	jmp    0x100269aa
100269a6:	mov    DWORD PTR [esp+0x14],ebx
100269aa:	mov    eax,DWORD PTR [esp+0x20]
100269ae:	push   eax
100269af:	lea    ecx,[esp+0x20]
100269b3:	push   ecx
100269b4:	lea    eax,[esp+0x1c]
100269b8:	push   eax
100269b9:	mov    edi,ecx
100269bb:	call   0x10026c04
100269c0:	push   esi
100269c1:	call   0x1004349e
100269c6:	cmp    eax,ebx
100269c8:	pop    ecx
100269c9:	je     0x100269d7
100269cb:	mov    DWORD PTR [eax],0x10071980
100269d1:	mov    DWORD PTR [esp+0x14],eax
100269d5:	jmp    0x100269db
100269d7:	mov    DWORD PTR [esp+0x14],ebx
100269db:	mov    eax,DWORD PTR [esp+0x20]
100269df:	push   eax
100269e0:	lea    ecx,[esp+0x20]
100269e4:	push   ecx
100269e5:	lea    eax,[esp+0x1c]
100269e9:	push   eax
100269ea:	mov    edi,ecx
100269ec:	call   0x10026c04
100269f1:	push   esi
100269f2:	call   0x1004349e
100269f7:	cmp    eax,ebx
100269f9:	pop    ecx
100269fa:	je     0x10026a08
100269fc:	mov    DWORD PTR [eax],0x10071948
10026a02:	mov    DWORD PTR [esp+0x14],eax
10026a06:	jmp    0x10026a0c
10026a08:	mov    DWORD PTR [esp+0x14],ebx
10026a0c:	mov    eax,DWORD PTR [esp+0x20]
10026a10:	push   eax
10026a11:	lea    ecx,[esp+0x20]
10026a15:	push   ecx
10026a16:	lea    eax,[esp+0x1c]
10026a1a:	push   eax
10026a1b:	mov    edi,ecx
10026a1d:	call   0x10026c04
10026a22:	mov    eax,DWORD PTR [esp+0x20]
10026a26:	mov    ebx,DWORD PTR [eax]
10026a28:	mov    esi,0x10080f7c
10026a2d:	mov    DWORD PTR [esp+0x18],eax
10026a31:	call   0x10026ca5
10026a36:	push   DWORD PTR [esp+0x18]
10026a3a:	mov    eax,ds:0x10080f80
10026a3f:	mov    ecx,DWORD PTR [eax]
10026a41:	push   edi
10026a42:	push   ebx
10026a43:	mov    eax,edi
10026a45:	push   eax
10026a46:	push   ecx
10026a47:	push   esi
10026a48:	push   DWORD PTR [esp+0x2c]
10026a4c:	call   0x10026d95
10026a51:	or     DWORD PTR [esp+0x40],0xffffffff
10026a56:	mov    esi,edi
10026a58:	call   0x10026ca5
10026a5d:	push   DWORD PTR [esp+0x20]
10026a61:	call   0x10042e92
10026a66:	pop    ecx
10026a67:	xor    ebx,ebx
10026a69:	cmp    DWORD PTR ds:0x10080f9c,ebx
10026a6f:	jne    0x10026b0f
10026a75:	call   0x1001b07b
10026a7a:	mov    DWORD PTR [esp+0x20],eax
10026a7e:	mov    DWORD PTR [esp+0x24],ebx
10026a82:	push   0x8
10026a84:	mov    DWORD PTR [esp+0x44],0x2
10026a8c:	call   0x1004349e
10026a91:	pop    ecx
10026a92:	mov    DWORD PTR [esp+0x14],eax
10026a96:	cmp    eax,ebx
10026a98:	mov    BYTE PTR [esp+0x40],0x3
10026a9d:	je     0x10026aa7
10026a9f:	push   eax
10026aa0:	call   0x1002c476
10026aa5:	jmp    0x10026aa9
10026aa7:	xor    eax,eax
10026aa9:	mov    BYTE PTR [esp+0x40],0x2
10026aae:	mov    DWORD PTR [esp+0x14],eax
10026ab2:	mov    eax,DWORD PTR [esp+0x20]
10026ab6:	push   eax
10026ab7:	lea    ecx,[esp+0x20]
10026abb:	push   ecx
10026abc:	lea    eax,[esp+0x1c]
10026ac0:	push   eax
10026ac1:	mov    edi,ecx
10026ac3:	call   0x10026c04
10026ac8:	mov    eax,DWORD PTR [esp+0x20]
10026acc:	mov    ebx,DWORD PTR [eax]
10026ace:	mov    esi,0x10080f94
10026ad3:	mov    DWORD PTR [esp+0x18],eax
10026ad7:	call   0x10026ca5
10026adc:	push   DWORD PTR [esp+0x18]
10026ae0:	mov    eax,ds:0x10080f98
10026ae5:	mov    ecx,DWORD PTR [eax]
10026ae7:	push   edi
10026ae8:	push   ebx
10026ae9:	mov    eax,edi
10026aeb:	push   eax
10026aec:	push   ecx
10026aed:	push   esi
10026aee:	push   DWORD PTR [esp+0x2c]
10026af2:	call   0x10026e5c
10026af7:	or     DWORD PTR [esp+0x40],0xffffffff
10026afc:	mov    esi,edi
10026afe:	call   0x10026ca5
10026b03:	push   DWORD PTR [esp+0x20]
10026b07:	call   0x10042e92
10026b0c:	pop    ecx
10026b0d:	xor    ebx,ebx
10026b0f:	cmp    DWORD PTR ds:0x10080f78,ebx
10026b15:	jne    0x10026ba0
10026b1b:	call   0x1001b07b
10026b20:	mov    DWORD PTR [esp+0x2c],eax
10026b24:	mov    DWORD PTR [esp+0x30],ebx
10026b28:	push   0x4
10026b2a:	pop    eax
10026b2b:	push   eax
10026b2c:	mov    DWORD PTR [esp+0x44],eax
10026b30:	call   0x1004349e
10026b35:	cmp    eax,ebx
10026b37:	pop    ecx
10026b38:	je     0x10026b46
10026b3a:	mov    DWORD PTR [eax],0x10071950
10026b40:	mov    DWORD PTR [esp+0x14],eax
10026b44:	jmp    0x10026b4a
10026b46:	mov    DWORD PTR [esp+0x14],ebx
10026b4a:	mov    eax,DWORD PTR [esp+0x2c]
10026b4e:	push   eax
10026b4f:	lea    ecx,[esp+0x2c]
10026b53:	push   ecx
10026b54:	lea    eax,[esp+0x1c]
10026b58:	push   eax
10026b59:	mov    edi,ecx
10026b5b:	call   0x10026c04
10026b60:	mov    eax,DWORD PTR [esp+0x2c]
10026b64:	mov    ebx,DWORD PTR [eax]
10026b66:	mov    esi,0x10080f70
10026b6b:	mov    DWORD PTR [esp+0x18],eax
10026b6f:	call   0x10026ca5
10026b74:	push   DWORD PTR [esp+0x18]
10026b78:	mov    eax,ds:0x10080f74
10026b7d:	mov    ecx,DWORD PTR [eax]
10026b7f:	push   edi
10026b80:	push   ebx
10026b81:	mov    eax,edi
10026b83:	push   eax
10026b84:	push   ecx
10026b85:	push   esi
10026b86:	push   DWORD PTR [esp+0x2c]
10026b8a:	call   0x10026f23
10026b8f:	mov    esi,edi
10026b91:	call   0x10026ca5
10026b96:	push   DWORD PTR [esp+0x2c]
10026b9a:	call   0x10042e92
10026b9f:	pop    ecx
10026ba0:	mov    ecx,DWORD PTR [esp+0x38]
10026ba4:	mov    DWORD PTR fs:0x0,ecx
10026bab:	pop    ecx
10026bac:	pop    edi
10026bad:	pop    esi
10026bae:	pop    ebx
10026baf:	mov    esp,ebp
10026bb1:	pop    ebp
10026bb2:	ret    
10026bb3:	test   BYTE PTR [esp+0x4],0x1
10026bb8:	push   esi
10026bb9:	mov    esi,ecx
10026bbb:	mov    DWORD PTR [esi],0x10071930
10026bc1:	je     0x10026bca
10026bc3:	push   esi
10026bc4:	call   0x10042e92
10026bc9:	pop    ecx
10026bca:	mov    eax,esi
10026bcc:	pop    esi
10026bcd:	ret    0x4
10026bd0:	test   BYTE PTR [esp+0x4],0x1
10026bd5:	push   esi
10026bd6:	mov    esi,ecx
10026bd8:	mov    DWORD PTR [esi],0x10071930
10026bde:	je     0x10026be7
10026be0:	push   esi
10026be1:	call   0x10042e92
10026be6:	pop    ecx
10026be7:	mov    eax,esi
10026be9:	pop    esi
10026bea:	ret    0x4
10026bed:	push   esi
10026bee:	mov    esi,eax
10026bf0:	call   0x10026ca5
10026bf5:	push   DWORD PTR [esi+0x4]
10026bf8:	call   0x10042e92
10026bfd:	and    DWORD PTR [esi+0x4],0x0
10026c01:	pop    ecx
10026c02:	pop    esi
10026c03:	ret    
10026c04:	push   0x48
10026c06:	mov    eax,0x100605b3
10026c0b:	call   0x10059a35
10026c10:	push   DWORD PTR [ebp+0x8]
10026c13:	mov    esi,DWORD PTR [ebp+0x10]
10026c16:	push   DWORD PTR [esi+0x4]
10026c19:	push   esi
10026c1a:	call   0x10026c74
10026c1f:	mov    ecx,DWORD PTR [edi+0x8]
10026c22:	mov    edx,0x3fffffff
10026c27:	sub    edx,ecx
10026c29:	cmp    edx,0x1
10026c2c:	jae    0x10026c60
10026c2e:	push   0x1006feb8
10026c33:	lea    ecx,[ebp-0x2c]
10026c36:	call   0x100011cd
10026c3b:	and    DWORD PTR [ebp-0x4],0x0
10026c3f:	lea    eax,[ebp-0x2c]
10026c42:	push   eax
10026c43:	lea    ecx,[ebp-0x54]
10026c46:	call   0x10001077
10026c4b:	push   0x10074da0
10026c50:	lea    eax,[ebp-0x54]
10026c53:	push   eax
10026c54:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10026c5b:	call   0x100479b4
10026c60:	inc    ecx
10026c61:	mov    DWORD PTR [edi+0x8],ecx
10026c64:	mov    DWORD PTR [esi+0x4],eax
10026c67:	mov    ecx,DWORD PTR [eax+0x4]
10026c6a:	mov    DWORD PTR [ecx],eax
10026c6c:	call   0x10059b0d
10026c71:	ret    0xc
10026c74:	push   0xc
10026c76:	call   0x1004349e
10026c7b:	test   eax,eax
10026c7d:	pop    ecx
10026c7e:	je     0x10026c86
10026c80:	mov    ecx,DWORD PTR [esp+0x4]
10026c84:	mov    DWORD PTR [eax],ecx
10026c86:	lea    ecx,[eax+0x4]
10026c89:	test   ecx,ecx
10026c8b:	je     0x10026c93
10026c8d:	mov    edx,DWORD PTR [esp+0x8]
10026c91:	mov    DWORD PTR [ecx],edx
10026c93:	lea    ecx,[eax+0x8]
10026c96:	test   ecx,ecx
10026c98:	je     0x10026ca2
10026c9a:	mov    edx,DWORD PTR [esp+0xc]
10026c9e:	mov    edx,DWORD PTR [edx]
10026ca0:	mov    DWORD PTR [ecx],edx
10026ca2:	ret    0xc
10026ca5:	mov    eax,DWORD PTR [esi+0x4]
10026ca8:	mov    ecx,DWORD PTR [eax]
10026caa:	mov    DWORD PTR [eax],eax
10026cac:	mov    eax,DWORD PTR [esi+0x4]
10026caf:	mov    DWORD PTR [eax+0x4],eax
10026cb2:	and    DWORD PTR [esi+0x8],0x0
10026cb6:	cmp    ecx,DWORD PTR [esi+0x4]
10026cb9:	je     0x10026ccd
10026cbb:	push   edi
10026cbc:	mov    edi,DWORD PTR [ecx]
10026cbe:	push   ecx
10026cbf:	call   0x10042e92
10026cc4:	cmp    edi,DWORD PTR [esi+0x4]
10026cc7:	pop    ecx
10026cc8:	mov    ecx,edi
10026cca:	jne    0x10026cbc
10026ccc:	pop    edi
10026ccd:	ret    
10026cce:	push   0x18
10026cd0:	mov    eax,0x10060a69
10026cd5:	call   0x10059a68
10026cda:	mov    ebx,DWORD PTR [ebp+0x14]
10026cdd:	mov    esi,DWORD PTR [ebp+0x18]
10026ce0:	and    DWORD PTR [ebp-0x4],0x0
10026ce4:	mov    edi,0x10080f88
10026ce9:	mov    DWORD PTR [ebp-0x1c],ebx
10026cec:	mov    DWORD PTR [ebp-0x18],esi
10026cef:	test   ebx,ebx
10026cf1:	je     0x10026cf8
10026cf3:	cmp    ebx,DWORD PTR [ebp+0x1c]
10026cf6:	je     0x10026cfd
10026cf8:	call   0x100433b0
10026cfd:	cmp    esi,DWORD PTR [ebp+0x20]
10026d00:	je     0x10026d8d
10026d06:	test   ebx,ebx
10026d08:	jne    0x10026d0f
10026d0a:	call   0x100433b0
10026d0f:	cmp    esi,DWORD PTR [ebx+0x4]
10026d12:	jne    0x10026d19
10026d14:	call   0x100433b0
10026d19:	push   DWORD PTR [ebp+0x10]
10026d1c:	add    esi,0x8
10026d1f:	push   DWORD PTR [ebp+0xc]
10026d22:	push   esi
10026d23:	call   0x10026c04
10026d28:	lea    esi,[ebp+0x14]
10026d2b:	call   0x10026666
10026d30:	mov    esi,DWORD PTR [ebp+0x18]
10026d33:	mov    ebx,DWORD PTR [ebp+0x14]
10026d36:	jmp    0x10026cef
10026d38:	mov    edi,DWORD PTR [ebp+0x10]
10026d3b:	mov    eax,DWORD PTR [ebp-0x1c]
10026d3e:	test   eax,eax
10026d40:	je     0x10026d47
10026d42:	cmp    eax,DWORD PTR [ebp+0x14]
10026d45:	je     0x10026d4c
10026d47:	call   0x100433b0
10026d4c:	mov    eax,DWORD PTR [ebp-0x18]
10026d4f:	cmp    eax,DWORD PTR [ebp+0x18]
10026d52:	je     0x10026d84
10026d54:	mov    ebx,DWORD PTR [ebp+0xc]
10026d57:	test   ebx,ebx
10026d59:	mov    DWORD PTR [ebp+0x20],edi
10026d5c:	jne    0x10026d63
10026d5e:	call   0x100433b0
10026d63:	mov    esi,DWORD PTR [edi+0x4]
10026d66:	cmp    esi,DWORD PTR [ebx+0x4]
10026d69:	jne    0x10026d70
10026d6b:	call   0x100433b0
10026d70:	push   esi
10026d71:	push   ebx
10026d72:	lea    ebx,[ebp-0x24]
10026d75:	call   0x10026fea
10026d7a:	lea    esi,[ebp-0x1c]
10026d7d:	call   0x10026666
10026d82:	jmp    0x10026d3b
10026d84:	push   0x0
10026d86:	push   0x0
10026d88:	call   0x100479b4
10026d8d:	call   0x10059b0d
10026d92:	ret    0x1c
10026d95:	push   0x18
10026d97:	mov    eax,0x10060a4e
10026d9c:	call   0x10059a68
10026da1:	mov    ebx,DWORD PTR [ebp+0x14]
10026da4:	mov    esi,DWORD PTR [ebp+0x18]
10026da7:	and    DWORD PTR [ebp-0x4],0x0
10026dab:	mov    edi,0x10080f7c
10026db0:	mov    DWORD PTR [ebp-0x1c],ebx
10026db3:	mov    DWORD PTR [ebp-0x18],esi
10026db6:	test   ebx,ebx
10026db8:	je     0x10026dbf
10026dba:	cmp    ebx,DWORD PTR [ebp+0x1c]
10026dbd:	je     0x10026dc4
10026dbf:	call   0x100433b0
10026dc4:	cmp    esi,DWORD PTR [ebp+0x20]
10026dc7:	je     0x10026e54
10026dcd:	test   ebx,ebx
10026dcf:	jne    0x10026dd6
10026dd1:	call   0x100433b0
10026dd6:	cmp    esi,DWORD PTR [ebx+0x4]
10026dd9:	jne    0x10026de0
10026ddb:	call   0x100433b0
10026de0:	push   DWORD PTR [ebp+0x10]
10026de3:	add    esi,0x8
10026de6:	push   DWORD PTR [ebp+0xc]
10026de9:	push   esi
10026dea:	call   0x10026c04
10026def:	lea    esi,[ebp+0x14]
10026df2:	call   0x10026666
10026df7:	mov    esi,DWORD PTR [ebp+0x18]
10026dfa:	mov    ebx,DWORD PTR [ebp+0x14]
10026dfd:	jmp    0x10026db6
10026dff:	mov    edi,DWORD PTR [ebp+0x10]
10026e02:	mov    eax,DWORD PTR [ebp-0x1c]
10026e05:	test   eax,eax
10026e07:	je     0x10026e0e
10026e09:	cmp    eax,DWORD PTR [ebp+0x14]
10026e0c:	je     0x10026e13
10026e0e:	call   0x100433b0
10026e13:	mov    eax,DWORD PTR [ebp-0x18]
10026e16:	cmp    eax,DWORD PTR [ebp+0x18]
10026e19:	je     0x10026e4b
10026e1b:	mov    ebx,DWORD PTR [ebp+0xc]
10026e1e:	test   ebx,ebx
10026e20:	mov    DWORD PTR [ebp+0x20],edi
10026e23:	jne    0x10026e2a
10026e25:	call   0x100433b0
10026e2a:	mov    esi,DWORD PTR [edi+0x4]
10026e2d:	cmp    esi,DWORD PTR [ebx+0x4]
10026e30:	jne    0x10026e37
10026e32:	call   0x100433b0
10026e37:	push   esi
10026e38:	push   ebx
10026e39:	lea    ebx,[ebp-0x24]
10026e3c:	call   0x10027039
10026e41:	lea    esi,[ebp-0x1c]
10026e44:	call   0x10026666
10026e49:	jmp    0x10026e02
10026e4b:	push   0x0
10026e4d:	push   0x0
10026e4f:	call   0x100479b4
10026e54:	call   0x10059b0d
10026e59:	ret    0x1c
10026e5c:	push   0x18
10026e5e:	mov    eax,0x10060a33
10026e63:	call   0x10059a68
10026e68:	mov    ebx,DWORD PTR [ebp+0x14]
10026e6b:	mov    esi,DWORD PTR [ebp+0x18]
10026e6e:	and    DWORD PTR [ebp-0x4],0x0
10026e72:	mov    edi,0x10080f94
10026e77:	mov    DWORD PTR [ebp-0x1c],ebx
10026e7a:	mov    DWORD PTR [ebp-0x18],esi
10026e7d:	test   ebx,ebx
10026e7f:	je     0x10026e86
10026e81:	cmp    ebx,DWORD PTR [ebp+0x1c]
10026e84:	je     0x10026e8b
10026e86:	call   0x100433b0
10026e8b:	cmp    esi,DWORD PTR [ebp+0x20]
10026e8e:	je     0x10026f1b
10026e94:	test   ebx,ebx
10026e96:	jne    0x10026e9d
10026e98:	call   0x100433b0
10026e9d:	cmp    esi,DWORD PTR [ebx+0x4]
10026ea0:	jne    0x10026ea7
10026ea2:	call   0x100433b0
10026ea7:	push   DWORD PTR [ebp+0x10]
10026eaa:	add    esi,0x8
10026ead:	push   DWORD PTR [ebp+0xc]
10026eb0:	push   esi
10026eb1:	call   0x10026c04
10026eb6:	lea    esi,[ebp+0x14]
10026eb9:	call   0x10026666
10026ebe:	mov    esi,DWORD PTR [ebp+0x18]
10026ec1:	mov    ebx,DWORD PTR [ebp+0x14]
10026ec4:	jmp    0x10026e7d
10026ec6:	mov    edi,DWORD PTR [ebp+0x10]
10026ec9:	mov    eax,DWORD PTR [ebp-0x1c]
10026ecc:	test   eax,eax
10026ece:	je     0x10026ed5
10026ed0:	cmp    eax,DWORD PTR [ebp+0x14]
10026ed3:	je     0x10026eda
10026ed5:	call   0x100433b0
10026eda:	mov    eax,DWORD PTR [ebp-0x18]
10026edd:	cmp    eax,DWORD PTR [ebp+0x18]
10026ee0:	je     0x10026f12
10026ee2:	mov    ebx,DWORD PTR [ebp+0xc]
10026ee5:	test   ebx,ebx
10026ee7:	mov    DWORD PTR [ebp+0x20],edi
10026eea:	jne    0x10026ef1
10026eec:	call   0x100433b0
10026ef1:	mov    esi,DWORD PTR [edi+0x4]
10026ef4:	cmp    esi,DWORD PTR [ebx+0x4]
10026ef7:	jne    0x10026efe
10026ef9:	call   0x100433b0
10026efe:	push   esi
10026eff:	push   ebx
10026f00:	lea    ebx,[ebp-0x24]
10026f03:	call   0x10027088
10026f08:	lea    esi,[ebp-0x1c]
10026f0b:	call   0x10026666
10026f10:	jmp    0x10026ec9
10026f12:	push   0x0
10026f14:	push   0x0
10026f16:	call   0x100479b4
10026f1b:	call   0x10059b0d
10026f20:	ret    0x1c
10026f23:	push   0x18
10026f25:	mov    eax,0x10060a18
10026f2a:	call   0x10059a68
10026f2f:	mov    ebx,DWORD PTR [ebp+0x14]
10026f32:	mov    esi,DWORD PTR [ebp+0x18]
10026f35:	and    DWORD PTR [ebp-0x4],0x0
10026f39:	mov    edi,0x10080f70
10026f3e:	mov    DWORD PTR [ebp-0x1c],ebx
10026f41:	mov    DWORD PTR [ebp-0x18],esi
10026f44:	test   ebx,ebx
10026f46:	je     0x10026f4d
10026f48:	cmp    ebx,DWORD PTR [ebp+0x1c]
10026f4b:	je     0x10026f52
10026f4d:	call   0x100433b0
10026f52:	cmp    esi,DWORD PTR [ebp+0x20]
10026f55:	je     0x10026fe2
10026f5b:	test   ebx,ebx
10026f5d:	jne    0x10026f64
10026f5f:	call   0x100433b0
10026f64:	cmp    esi,DWORD PTR [ebx+0x4]
10026f67:	jne    0x10026f6e
10026f69:	call   0x100433b0
10026f6e:	push   DWORD PTR [ebp+0x10]
10026f71:	add    esi,0x8
10026f74:	push   DWORD PTR [ebp+0xc]
10026f77:	push   esi
10026f78:	call   0x10026c04
10026f7d:	lea    esi,[ebp+0x14]
10026f80:	call   0x10026666
10026f85:	mov    esi,DWORD PTR [ebp+0x18]
10026f88:	mov    ebx,DWORD PTR [ebp+0x14]
10026f8b:	jmp    0x10026f44
10026f8d:	mov    edi,DWORD PTR [ebp+0x10]
10026f90:	mov    eax,DWORD PTR [ebp-0x1c]
10026f93:	test   eax,eax
10026f95:	je     0x10026f9c
10026f97:	cmp    eax,DWORD PTR [ebp+0x14]
10026f9a:	je     0x10026fa1
10026f9c:	call   0x100433b0
10026fa1:	mov    eax,DWORD PTR [ebp-0x18]
10026fa4:	cmp    eax,DWORD PTR [ebp+0x18]
10026fa7:	je     0x10026fd9
10026fa9:	mov    ebx,DWORD PTR [ebp+0xc]
10026fac:	test   ebx,ebx
10026fae:	mov    DWORD PTR [ebp+0x20],edi
10026fb1:	jne    0x10026fb8
10026fb3:	call   0x100433b0
10026fb8:	mov    esi,DWORD PTR [edi+0x4]
10026fbb:	cmp    esi,DWORD PTR [ebx+0x4]
10026fbe:	jne    0x10026fc5
10026fc0:	call   0x100433b0
10026fc5:	push   esi
10026fc6:	push   ebx
10026fc7:	lea    ebx,[ebp-0x24]
10026fca:	call   0x100270d7
10026fcf:	lea    esi,[ebp-0x1c]
10026fd2:	call   0x10026666
10026fd7:	jmp    0x10026f90
10026fd9:	push   0x0
10026fdb:	push   0x0
10026fdd:	call   0x100479b4
10026fe2:	call   0x10059b0d
10026fe7:	ret    0x1c
10026fea:	push   ebp
10026feb:	mov    ebp,esp
10026fed:	push   ecx
10026fee:	push   ecx
10026fef:	mov    eax,DWORD PTR [ebp+0x8]
10026ff2:	push   esi
10026ff3:	push   edi
10026ff4:	mov    edi,DWORD PTR [ebp+0xc]
10026ff7:	lea    esi,[ebp+0x8]
10026ffa:	mov    DWORD PTR [ebp-0x8],eax
10026ffd:	call   0x10026666
10027002:	cmp    edi,DWORD PTR ds:0x10080f8c
10027008:	je     0x10027026
1002700a:	mov    eax,DWORD PTR [edi+0x4]
1002700d:	mov    ecx,DWORD PTR [edi]
1002700f:	mov    DWORD PTR [eax],ecx
10027011:	mov    eax,DWORD PTR [edi]
10027013:	mov    ecx,DWORD PTR [edi+0x4]
10027016:	push   edi
10027017:	mov    DWORD PTR [eax+0x4],ecx
1002701a:	call   0x10042e92
1002701f:	dec    DWORD PTR ds:0x10080f90
10027025:	pop    ecx
10027026:	mov    eax,DWORD PTR [ebp+0x8]
10027029:	mov    DWORD PTR [ebx],eax
1002702b:	mov    eax,DWORD PTR [ebp+0xc]
1002702e:	pop    edi
1002702f:	mov    DWORD PTR [ebx+0x4],eax
10027032:	mov    eax,ebx
10027034:	pop    esi
10027035:	leave  
10027036:	ret    0x8
10027039:	push   ebp
1002703a:	mov    ebp,esp
1002703c:	push   ecx
1002703d:	push   ecx
1002703e:	mov    eax,DWORD PTR [ebp+0x8]
10027041:	push   esi
10027042:	push   edi
10027043:	mov    edi,DWORD PTR [ebp+0xc]
10027046:	lea    esi,[ebp+0x8]
10027049:	mov    DWORD PTR [ebp-0x8],eax
1002704c:	call   0x10026666
10027051:	cmp    edi,DWORD PTR ds:0x10080f80
10027057:	je     0x10027075
10027059:	mov    eax,DWORD PTR [edi+0x4]
1002705c:	mov    ecx,DWORD PTR [edi]
1002705e:	mov    DWORD PTR [eax],ecx
10027060:	mov    eax,DWORD PTR [edi]
10027062:	mov    ecx,DWORD PTR [edi+0x4]
10027065:	push   edi
10027066:	mov    DWORD PTR [eax+0x4],ecx
10027069:	call   0x10042e92
1002706e:	dec    DWORD PTR ds:0x10080f84
10027074:	pop    ecx
10027075:	mov    eax,DWORD PTR [ebp+0x8]
10027078:	mov    DWORD PTR [ebx],eax
1002707a:	mov    eax,DWORD PTR [ebp+0xc]
1002707d:	pop    edi
1002707e:	mov    DWORD PTR [ebx+0x4],eax
10027081:	mov    eax,ebx
10027083:	pop    esi
10027084:	leave  
10027085:	ret    0x8
10027088:	push   ebp
10027089:	mov    ebp,esp
1002708b:	push   ecx
1002708c:	push   ecx
1002708d:	mov    eax,DWORD PTR [ebp+0x8]
10027090:	push   esi
10027091:	push   edi
10027092:	mov    edi,DWORD PTR [ebp+0xc]
10027095:	lea    esi,[ebp+0x8]
10027098:	mov    DWORD PTR [ebp-0x8],eax
1002709b:	call   0x10026666
100270a0:	cmp    edi,DWORD PTR ds:0x10080f98
100270a6:	je     0x100270c4
100270a8:	mov    eax,DWORD PTR [edi+0x4]
100270ab:	mov    ecx,DWORD PTR [edi]
100270ad:	mov    DWORD PTR [eax],ecx
100270af:	mov    eax,DWORD PTR [edi]
100270b1:	mov    ecx,DWORD PTR [edi+0x4]
100270b4:	push   edi
100270b5:	mov    DWORD PTR [eax+0x4],ecx
100270b8:	call   0x10042e92
100270bd:	dec    DWORD PTR ds:0x10080f9c
100270c3:	pop    ecx
100270c4:	mov    eax,DWORD PTR [ebp+0x8]
100270c7:	mov    DWORD PTR [ebx],eax
100270c9:	mov    eax,DWORD PTR [ebp+0xc]
100270cc:	pop    edi
100270cd:	mov    DWORD PTR [ebx+0x4],eax
100270d0:	mov    eax,ebx
100270d2:	pop    esi
100270d3:	leave  
100270d4:	ret    0x8
100270d7:	push   ebp
100270d8:	mov    ebp,esp
100270da:	push   ecx
100270db:	push   ecx
100270dc:	mov    eax,DWORD PTR [ebp+0x8]
100270df:	push   esi
100270e0:	push   edi
100270e1:	mov    edi,DWORD PTR [ebp+0xc]
100270e4:	lea    esi,[ebp+0x8]
100270e7:	mov    DWORD PTR [ebp-0x8],eax
100270ea:	call   0x10026666
100270ef:	cmp    edi,DWORD PTR ds:0x10080f74
100270f5:	je     0x10027113
100270f7:	mov    eax,DWORD PTR [edi+0x4]
100270fa:	mov    ecx,DWORD PTR [edi]
100270fc:	mov    DWORD PTR [eax],ecx
100270fe:	mov    eax,DWORD PTR [edi]
10027100:	mov    ecx,DWORD PTR [edi+0x4]
10027103:	push   edi
10027104:	mov    DWORD PTR [eax+0x4],ecx
10027107:	call   0x10042e92
1002710c:	dec    DWORD PTR ds:0x10080f78
10027112:	pop    ecx
10027113:	mov    eax,DWORD PTR [ebp+0x8]
10027116:	mov    DWORD PTR [ebx],eax
10027118:	mov    eax,DWORD PTR [ebp+0xc]
1002711b:	pop    edi
1002711c:	mov    DWORD PTR [ebx+0x4],eax
1002711f:	mov    eax,ebx
10027121:	pop    esi
10027122:	leave  
10027123:	ret    0x8
10027126:	push   ebp
10027127:	mov    ebp,esp
10027129:	and    esp,0xfffffff8
1002712c:	push   0xffffffff
1002712e:	push   0x100634b3
10027133:	mov    eax,fs:0x0
10027139:	push   eax
1002713a:	sub    esp,0x60
1002713d:	mov    eax,ds:0x1007e030
10027142:	xor    eax,esp
10027144:	mov    DWORD PTR [esp+0x58],eax
10027148:	push   ebx
10027149:	push   esi
1002714a:	push   edi
1002714b:	mov    eax,ds:0x1007e030
10027150:	xor    eax,esp
10027152:	push   eax
10027153:	lea    eax,[esp+0x70]
10027157:	mov    fs:0x0,eax
1002715d:	mov    edi,DWORD PTR [ebp+0x8]
10027160:	push   0x30151a46
10027165:	push   0x100719b8
1002716a:	call   0x10004246
1002716f:	push   0xafcb4b0
10027174:	push   eax
10027175:	call   0x10004246
1002717a:	push   eax
1002717b:	push   0x7
1002717d:	mov    ebx,0x1006d678
10027182:	push   ebx
10027183:	call   0x10004258
10027188:	add    esp,0x1c
1002718b:	push   eax
1002718c:	lea    ecx,[esp+0x34]
10027190:	call   0x100011cd
10027195:	xor    esi,esi
10027197:	push   esi
10027198:	lea    eax,[esp+0x34]
1002719c:	push   eax
1002719d:	lea    eax,[esp+0x54]
100271a1:	push   eax
100271a2:	mov    DWORD PTR [esp+0x84],esi
100271a9:	mov    eax,DWORD PTR [edi+0x4]
100271ac:	add    eax,0x18
100271af:	call   0x100084cc
100271b4:	push   esi
100271b5:	push   0x1
100271b7:	lea    ecx,[esp+0x38]
100271bb:	mov    BYTE PTR [esp+0x80],0x2
100271c3:	call   0x100012f0
100271c8:	push   0x1006cd08
100271cd:	lea    esi,[esp+0x50]
100271d1:	call   0x1000658e
100271d6:	test   al,al
100271d8:	pop    ecx
100271d9:	jne    0x100272b5
100271df:	push   0x10080d54
100271e4:	mov    ecx,esi
100271e6:	call   0x10001164
100271eb:	test   al,al
100271ed:	je     0x100272b5
100271f3:	push   DWORD PTR [edi]
100271f5:	lea    ecx,[esp+0x18]
100271f9:	call   0x10008b47
100271fe:	cmp    DWORD PTR [eax+0x18],0x10
10027202:	jb     0x10027209
10027204:	mov    eax,DWORD PTR [eax+0x4]
10027207:	jmp    0x1002720c
10027209:	add    eax,0x4
1002720c:	cmp    DWORD PTR [esp+0x64],0x10
10027211:	mov    ecx,DWORD PTR [esp+0x50]
10027215:	jae    0x1002721b
10027217:	lea    ecx,[esp+0x50]
1002721b:	push   eax
1002721c:	push   ecx
1002721d:	call   0x10002080
10027222:	pop    ecx
10027223:	pop    ecx
10027224:	push   0x0
10027226:	push   0x1
10027228:	lea    ecx,[esp+0x1c]
1002722c:	call   0x100012f0
10027231:	push   0x5128d414
10027236:	push   0x100719ec
1002723b:	call   0x10004246
10027240:	push   0x4673e242
10027245:	push   eax
10027246:	call   0x10004246
1002724b:	push   eax
1002724c:	push   0x7
1002724e:	push   ebx
1002724f:	call   0x10004258
10027254:	add    esp,0x1c
10027257:	push   eax
10027258:	lea    ecx,[esp+0x18]
1002725c:	call   0x100011cd
10027261:	lea    eax,[esp+0x14]
10027265:	push   eax
10027266:	mov    BYTE PTR [esp+0x7c],0x3
1002726b:	mov    eax,DWORD PTR [edi+0x4]
1002726e:	add    eax,0x18
10027271:	push   eax
10027272:	call   0x1000826a
10027277:	push   0x0
10027279:	push   0x1
1002727b:	lea    ecx,[esp+0x1c]
1002727f:	call   0x100012f0
10027284:	mov    bl,0x1
10027286:	push   0x0
10027288:	push   0x1
1002728a:	lea    ecx,[esp+0x54]
1002728e:	call   0x100012f0
10027293:	mov    al,bl
10027295:	mov    ecx,DWORD PTR [esp+0x70]
10027299:	mov    DWORD PTR fs:0x0,ecx
100272a0:	pop    ecx
100272a1:	pop    edi
100272a2:	pop    esi
100272a3:	pop    ebx
100272a4:	mov    ecx,DWORD PTR [esp+0x58]
100272a8:	xor    ecx,esp
100272aa:	call   0x10042e97
100272af:	mov    esp,ebp
100272b1:	pop    ebp
100272b2:	ret    0x4
100272b5:	xor    bl,bl
100272b7:	jmp    0x10027286
100272b9:	push   ebp
100272ba:	mov    ebp,esp
100272bc:	and    esp,0xfffffff8
100272bf:	push   0xffffffff
100272c1:	push   0x10063473
100272c6:	mov    eax,fs:0x0
100272cc:	push   eax
100272cd:	sub    esp,0x2c
100272d0:	mov    eax,ds:0x1007e030
100272d5:	xor    eax,esp
100272d7:	mov    DWORD PTR [esp+0x24],eax
100272db:	push   ebx
100272dc:	push   edi
100272dd:	mov    eax,ds:0x1007e030
100272e2:	xor    eax,esp
100272e4:	push   eax
100272e5:	lea    eax,[esp+0x38]
100272e9:	mov    fs:0x0,eax
100272ef:	mov    ebx,DWORD PTR [ebp+0x8]
100272f2:	lea    eax,[esp+0x14]
100272f6:	push   eax
100272f7:	mov    DWORD PTR [esp+0x14],ecx
100272fb:	mov    edi,edx
100272fd:	call   0x10030b10
10027302:	pop    ecx
10027303:	and    DWORD PTR [esp+0x40],0x0
10027308:	mov    eax,DWORD PTR [edi]
1002730a:	push   esi
1002730b:	lea    ecx,[esp+0x18]
1002730f:	push   ecx
10027310:	push   eax
10027311:	call   0x10035240
10027316:	mov    ecx,DWORD PTR [esi+0x70]
10027319:	shr    ecx,0x2
1002731c:	test   cl,0x1
1002731f:	jne    0x10027323
10027321:	xor    al,al
10027323:	test   al,al
10027325:	je     0x10027357
10027327:	xor    eax,eax
10027329:	inc    eax
1002732a:	push   0x0
1002732c:	mov    DWORD PTR [ebx],eax
1002732e:	push   eax
1002732f:	lea    ecx,[esp+0x1c]
10027333:	call   0x100012f0
10027338:	mov    al,0x1
1002733a:	mov    ecx,DWORD PTR [esp+0x38]
1002733e:	mov    DWORD PTR fs:0x0,ecx
10027345:	pop    ecx
10027346:	pop    edi
10027347:	pop    ebx
10027348:	mov    ecx,DWORD PTR [esp+0x24]
1002734c:	xor    ecx,esp
1002734e:	call   0x10042e97
10027353:	mov    esp,ebp
10027355:	pop    ebp
10027356:	ret    
10027357:	mov    edi,DWORD PTR [edi]
10027359:	push   esi
1002735a:	push   DWORD PTR [esp+0x14]
1002735e:	push   edi
1002735f:	call   0x10035240
10027364:	test   al,al
10027366:	je     0x10027371
10027368:	and    DWORD PTR [ebx],0x0
1002736b:	push   0x0
1002736d:	push   0x1
1002736f:	jmp    0x1002732f
10027371:	push   esi
10027372:	push   DWORD PTR [esp+0x14]
10027376:	push   0x10080e54
1002737b:	call   0x10012c57
10027380:	test   al,al
10027382:	je     0x1002739d
10027384:	mov    DWORD PTR [ebx],0x2
1002738a:	mov    bl,0x1
1002738c:	push   0x0
1002738e:	push   0x1
10027390:	lea    ecx,[esp+0x1c]
10027394:	call   0x100012f0
10027399:	mov    al,bl
1002739b:	jmp    0x1002733a
1002739d:	xor    bl,bl
1002739f:	jmp    0x1002738c
100273a1:	push   ebp
100273a2:	mov    ebp,esp
100273a4:	and    esp,0xfffffff8
100273a7:	push   0xffffffff
100273a9:	push   0x10063450
100273ae:	mov    eax,fs:0x0
100273b4:	push   eax
100273b5:	sub    esp,0x20
100273b8:	push   ebx
100273b9:	mov    eax,ds:0x1007e030
100273be:	xor    eax,esp
100273c0:	push   eax
100273c1:	lea    eax,[esp+0x28]
100273c5:	mov    fs:0x0,eax
100273cb:	mov    ebx,edx
100273cd:	mov    eax,DWORD PTR [ebp+0x8]
100273d0:	sub    eax,0x0
100273d3:	je     0x10027416
100273d5:	dec    eax
100273d6:	je     0x100273eb
100273d8:	dec    eax
100273d9:	jne    0x10027422
100273db:	push   ecx
100273dc:	mov    ecx,DWORD PTR [ebp+0xc]
100273df:	push   0x10080e54
100273e4:	call   0x10012cb2
100273e9:	jmp    0x10027422
100273eb:	lea    eax,[esp+0x8]
100273ef:	push   eax
100273f0:	call   0x10030b10
100273f5:	pop    ecx
100273f6:	push   DWORD PTR [ebp+0xc]
100273f9:	and    DWORD PTR [esp+0x34],0x0
100273fe:	push   ebx
100273ff:	push   eax
10027400:	push   DWORD PTR [esi]
10027402:	call   0x10035090
10027407:	push   0x0
10027409:	push   0x1
1002740b:	lea    ecx,[esp+0x10]
1002740f:	call   0x100012f0
10027414:	jmp    0x10027422
10027416:	push   DWORD PTR [ebp+0xc]
10027419:	push   ebx
1002741a:	push   ecx
1002741b:	push   DWORD PTR [esi]
1002741d:	call   0x10035090
10027422:	mov    ecx,DWORD PTR [esp+0x28]
10027426:	mov    DWORD PTR fs:0x0,ecx
1002742d:	pop    ecx
1002742e:	pop    ebx
1002742f:	mov    esp,ebp
10027431:	pop    ebp
10027432:	ret    
10027433:	push   ebp
10027434:	sub    esp,0xa4
1002743a:	lea    ebp,[esp-0x4]
1002743e:	mov    eax,ds:0x1007e030
10027443:	xor    eax,ebp
10027445:	mov    DWORD PTR [ebp+0xa4],eax
1002744b:	push   0x24
1002744d:	mov    eax,0x10064fc6
10027452:	call   0x10059a68
10027457:	mov    eax,DWORD PTR [ebp+0xb0]
1002745d:	xor    esi,esi
1002745f:	mov    DWORD PTR [ebp-0x4],esi
10027462:	push   DWORD PTR [eax]
10027464:	lea    ecx,[ebp+0x88]
1002746a:	mov    DWORD PTR [ebp-0x2c],eax
1002746d:	call   0x10008b47
10027472:	lea    eax,[ebp-0x20]
10027475:	push   esi
10027476:	push   eax
10027477:	mov    BYTE PTR [ebp-0x4],0x1
1002747b:	call   0x100028aa
10027480:	pop    ecx
10027481:	pop    ecx
10027482:	mov    ecx,DWORD PTR [eax]
10027484:	mov    ebx,ecx
10027486:	mov    DWORD PTR [eax],esi
10027488:	mov    DWORD PTR [ebp-0x1c],ebx
1002748b:	lea    eax,[ebp-0x20]
1002748e:	mov    BYTE PTR [ebp-0x4],0x2
10027492:	call   0x1000421f
10027497:	push   ebx
10027498:	call   0x10002928
1002749d:	test   al,al
1002749f:	jne    0x100274af
100274a1:	lea    eax,[ebp-0x1c]
100274a4:	call   0x1000421f
100274a9:	push   esi
100274aa:	jmp    0x10027677
100274af:	lea    edi,[ebp+0x0]
100274b2:	call   0x10012c22
100274b7:	lea    eax,[ebp-0x20]
100274ba:	push   eax
100274bb:	mov    esi,edi
100274bd:	mov    edx,ebx
100274bf:	lea    ecx,[ebp+0x88]
100274c5:	mov    BYTE PTR [ebp-0x4],0x3
100274c9:	call   0x100272b9
100274ce:	test   al,al
100274d0:	pop    ecx
100274d1:	je     0x10027665
100274d7:	call   0x1002fa00
100274dc:	mov    edi,eax
100274de:	mov    eax,DWORD PTR [ebp+0x84]
100274e4:	cmp    eax,edx
100274e6:	mov    DWORD PTR [ebp-0x28],edi
100274e9:	mov    DWORD PTR [ebp-0x24],edx
100274ec:	jb     0x10027502
100274ee:	ja     0x10027665
100274f4:	mov    eax,DWORD PTR [ebp+0x80]
100274fa:	cmp    eax,edi
100274fc:	ja     0x10027665
10027502:	mov    eax,DWORD PTR [ebp+0x70]
10027505:	shr    eax,0xa
10027508:	test   al,0x1
1002750a:	jne    0x10027575
1002750c:	mov    eax,DWORD PTR [ebx]
1002750e:	push   0x5
10027510:	push   eax
10027511:	lea    ecx,[ebp-0x18]
10027514:	call   0x10035ac0
10027519:	mov    ecx,DWORD PTR [eax+0x4]
1002751c:	cmp    ecx,DWORD PTR [ebp-0x24]
1002751f:	jb     0x10027575
10027521:	ja     0x10027529
10027523:	mov    eax,DWORD PTR [eax]
10027525:	cmp    eax,edi
10027527:	jbe    0x10027575
10027529:	cmp    DWORD PTR [ebp+0xa0],0x10
10027530:	mov    eax,DWORD PTR [ebp+0x8c]
10027536:	jae    0x1002753e
10027538:	lea    eax,[ebp+0x8c]
1002753e:	push   eax
1002753f:	call   0x10002080
10027544:	push   0xc
10027546:	call   0x10037980
1002754b:	xor    bl,bl
1002754d:	pop    ecx
1002754e:	pop    ecx
1002754f:	lea    esi,[ebp+0x0]
10027552:	call   0x100033ac
10027557:	lea    eax,[ebp-0x1c]
1002755a:	call   0x1000421f
1002755f:	push   0x0
10027561:	push   0x1
10027563:	lea    ecx,[ebp+0x88]
10027569:	call   0x100012f0
1002756e:	mov    al,bl
10027570:	jmp    0x10027686
10027575:	push   DWORD PTR [ebx]
10027577:	call   0x10035e30
1002757c:	mov    esi,0x2710
10027581:	mov    ecx,esi
10027583:	mul    ecx
10027585:	add    eax,edi
10027587:	adc    edx,DWORD PTR [ebp-0x24]
1002758a:	lea    ecx,[ebp-0x18]
1002758d:	push   ecx
1002758e:	mov    DWORD PTR [ebp-0x18],eax
10027591:	mov    eax,DWORD PTR [ebx]
10027593:	push   eax
10027594:	push   0x5
10027596:	pop    ecx
10027597:	mov    DWORD PTR [ebp-0x14],edx
1002759a:	call   0x10035bf0
1002759f:	mov    eax,DWORD PTR [ebp-0x2c]
100275a2:	push   DWORD PTR [eax]
100275a4:	call   0x10026552
100275a9:	test   al,al
100275ab:	pop    ecx
100275ac:	jne    0x10027636
100275b2:	push   0x0
100275b4:	push   esi
100275b5:	push   DWORD PTR [ebp+0x7c]
100275b8:	push   DWORD PTR [ebp+0x78]
100275bb:	call   0x1005f500
100275c0:	push   DWORD PTR [ebx]
100275c2:	and    DWORD PTR [ebp-0x14],0x0
100275c6:	mov    edi,eax
100275c8:	mov    DWORD PTR [ebp-0x30],edi
100275cb:	call   0x10036170
100275d0:	lea    ecx,[ebp-0x30]
100275d3:	push   ecx
100275d4:	lea    ecx,[ebp-0x14]
100275d7:	push   ecx
100275d8:	mov    ecx,DWORD PTR [ebp-0x2c]
100275db:	push   eax
100275dc:	push   edi
100275dd:	push   DWORD PTR [ebp-0x20]
100275e0:	lea    eax,[ebp+0x88]
100275e6:	push   eax
100275e7:	lea    edx,[ebp+0x0]
100275ea:	call   0x100276b1
100275ef:	mov    eax,DWORD PTR [ebp-0x30]
100275f2:	push   0x0
100275f4:	cdq    
100275f5:	push   esi
100275f6:	push   edx
100275f7:	push   eax
100275f8:	call   0x1004f400
100275fd:	add    eax,DWORD PTR [ebp-0x28]
10027600:	push   0x0
10027602:	adc    edx,DWORD PTR [ebp-0x24]
10027605:	mov    DWORD PTR [ebp-0x28],eax
10027608:	mov    eax,DWORD PTR [ebp-0x14]
1002760b:	mov    DWORD PTR [ebp-0x24],edx
1002760e:	cdq    
1002760f:	push   esi
10027610:	push   edx
10027611:	push   eax
10027612:	call   0x1004f400
10027617:	mov    DWORD PTR [ebp-0x18],eax
1002761a:	lea    eax,[ebp-0x28]
1002761d:	push   eax
1002761e:	push   DWORD PTR [ebp-0x20]
10027621:	mov    DWORD PTR [ebp-0x14],edx
10027624:	lea    edx,[ebp-0x18]
10027627:	mov    esi,ebx
10027629:	lea    ecx,[ebp+0x88]
1002762f:	call   0x100273a1
10027634:	jmp    0x1002765e
10027636:	cmp    DWORD PTR [ebp+0x50],0x10
1002763a:	mov    ecx,DWORD PTR [ebp+0x3c]
1002763d:	jae    0x10027642
1002763f:	lea    ecx,[ebp+0x3c]
10027642:	cmp    DWORD PTR [ebp+0xa0],0x10
10027649:	mov    eax,DWORD PTR [ebp+0x8c]
1002764f:	jae    0x10027657
10027651:	lea    eax,[ebp+0x8c]
10027657:	push   ecx
10027658:	push   eax
10027659:	call   0x10002080
1002765e:	mov    bl,0x1
10027660:	jmp    0x1002754d
10027665:	lea    esi,[ebp+0x0]
10027668:	call   0x100033ac
1002766d:	lea    eax,[ebp-0x1c]
10027670:	call   0x1000421f
10027675:	push   0x0
10027677:	push   0x1
10027679:	lea    ecx,[ebp+0x88]
1002767f:	call   0x100012f0
10027684:	xor    al,al
10027686:	mov    ecx,DWORD PTR [ebp-0xc]
10027689:	mov    DWORD PTR fs:0x0,ecx
10027690:	pop    ecx
10027691:	pop    edi
10027692:	pop    esi
10027693:	pop    ebx
10027694:	mov    ecx,DWORD PTR [ebp+0xa4]
1002769a:	xor    ecx,ebp
1002769c:	call   0x10042e97
100276a1:	add    ebp,0xa8
100276a7:	leave  
100276a8:	ret    0x4
100276ab:	mov    eax,0x10027684
100276b0:	ret    
100276b1:	push   ebp
100276b2:	mov    ebp,esp
100276b4:	and    esp,0xfffffff8
100276b7:	push   0xffffffff
100276b9:	push   0x10064f7d
100276be:	mov    eax,fs:0x0
100276c4:	push   eax
100276c5:	sub    esp,0x120
100276cb:	mov    eax,ds:0x1007e030
100276d0:	xor    eax,esp
100276d2:	mov    DWORD PTR [esp+0x118],eax
100276d9:	push   ebx
100276da:	push   esi
100276db:	push   edi
100276dc:	mov    eax,ds:0x1007e030
100276e1:	xor    eax,esp
100276e3:	push   eax
100276e4:	lea    eax,[esp+0x130]
100276eb:	mov    fs:0x0,eax
100276f1:	mov    eax,DWORD PTR [ebp+0x8]
100276f4:	mov    DWORD PTR [esp+0x20],eax
100276f8:	mov    eax,DWORD PTR [ebp+0x18]
100276fb:	mov    DWORD PTR [esp+0x24],eax
100276ff:	mov    eax,DWORD PTR [ebp+0x1c]
10027702:	mov    esi,edx
10027704:	mov    DWORD PTR [esp+0x44],eax
10027708:	mov    edi,ecx
1002770a:	lea    eax,[esi+0x38]
1002770d:	push   eax
1002770e:	lea    ecx,[esp+0x84]
10027715:	mov    DWORD PTR [esp+0x20],edi
10027719:	call   0x100011a7
1002771e:	lea    eax,[esi+0x54]
10027721:	xor    ebx,ebx
10027723:	push   eax
10027724:	lea    ecx,[esp+0xd8]
1002772b:	mov    DWORD PTR [esp+0x13c],ebx
10027732:	call   0x100011a7
10027737:	mov    BYTE PTR [esp+0x138],0x1
1002773f:	mov    eax,DWORD PTR [esi+0x70]
10027742:	lea    edx,[esp+0x80]
10027749:	lea    ecx,[esp+0x10c]
10027750:	mov    DWORD PTR [esp+0x14],eax
10027754:	call   0x10033ce0
10027759:	push   0x1006cd08
1002775e:	lea    esi,[esp+0x110]
10027765:	mov    BYTE PTR [esp+0x13c],0x2
1002776d:	call   0x1000658e
10027772:	test   al,al
10027774:	pop    ecx
10027775:	jne    0x10027789
10027777:	push   0xffffffff
10027779:	push   ebx
1002777a:	mov    eax,esi
1002777c:	push   eax
1002777d:	lea    ecx,[esp+0x8c]
10027784:	call   0x10001241
10027789:	mov    eax,DWORD PTR [esp+0x14]
1002778d:	shr    eax,0x3
10027790:	test   al,0x1
10027792:	mov    esi,0x1006d678
10027797:	je     0x100278b6
1002779d:	push   0x10071a20
100277a2:	push   0x7
100277a4:	push   esi
100277a5:	call   0x10004258
100277aa:	add    esp,0xc
100277ad:	push   eax
100277ae:	lea    ecx,[esp+0xa0]
100277b5:	call   0x100011cd
100277ba:	push   ebx
100277bb:	lea    eax,[esp+0xa0]
100277c2:	push   eax
100277c3:	lea    eax,[esp+0xc0]
100277ca:	push   eax
100277cb:	mov    BYTE PTR [esp+0x144],0x3
100277d3:	mov    eax,DWORD PTR [edi]
100277d5:	add    eax,0x18
100277d8:	call   0x100084cc
100277dd:	push   eax
100277de:	push   DWORD PTR [esp+0x24]
100277e2:	lea    ecx,[esp+0xf8]
100277e9:	mov    BYTE PTR [esp+0x140],0x4
100277f1:	call   0x10028747
100277f6:	mov    DWORD PTR [esp+0x10],eax
100277fa:	push   0x71e2ec70
100277ff:	push   0x10071a54
10027804:	mov    BYTE PTR [esp+0x140],0x5
1002780c:	call   0x10004246
10027811:	push   eax
10027812:	push   0x5
10027814:	push   0x10071a80
10027819:	call   0x10004258
1002781e:	add    esp,0x14
10027821:	push   eax
10027822:	lea    eax,[esp+0x84]
10027829:	push   eax
1002782a:	lea    eax,[esp+0x50]
1002782e:	push   eax
1002782f:	call   0x10006490
10027834:	add    esp,0xc
10027837:	mov    BYTE PTR [esp+0x138],0x6
1002783f:	push   DWORD PTR [esp+0x10]
10027843:	push   eax
10027844:	lea    eax,[esp+0x30]
10027848:	push   eax
10027849:	call   0x100064d6
1002784e:	add    esp,0xc
10027851:	push   0xffffffff
10027853:	push   ebx
10027854:	push   eax
10027855:	lea    ecx,[esp+0x8c]
1002785c:	mov    BYTE PTR [esp+0x144],0x7
10027864:	call   0x10001241
10027869:	push   ebx
1002786a:	push   0x1
1002786c:	lea    ecx,[esp+0x30]
10027870:	call   0x100012f0
10027875:	push   ebx
10027876:	push   0x1
10027878:	lea    ecx,[esp+0x50]
1002787c:	call   0x100012f0
10027881:	push   ebx
10027882:	push   0x1
10027884:	lea    ecx,[esp+0xf8]
1002788b:	call   0x100012f0
10027890:	push   ebx
10027891:	push   0x1
10027893:	lea    ecx,[esp+0xc0]
1002789a:	call   0x100012f0
1002789f:	push   ebx
100278a0:	push   0x1
100278a2:	lea    ecx,[esp+0xa4]
100278a9:	mov    BYTE PTR [esp+0x140],0x2
100278b1:	call   0x100012f0
100278b6:	mov    eax,DWORD PTR [esp+0x14]
100278ba:	shr    eax,0x4
100278bd:	test   al,0x1
100278bf:	je     0x10027b89
100278c5:	push   ebx
100278c6:	lea    ecx,[esp+0xa0]
100278cd:	mov    DWORD PTR [esp+0xb8],0xf
100278d8:	call   0x1000141c
100278dd:	push   ebx
100278de:	lea    ecx,[esp+0xf4]
100278e5:	mov    DWORD PTR [esp+0x10c],0xf
100278f0:	call   0x1000141c
100278f5:	push   ebx
100278f6:	lea    ecx,[esp+0xbc]
100278fd:	mov    DWORD PTR [esp+0x14],ebx
10027901:	mov    DWORD PTR [esp+0xd4],0xf
1002790c:	call   0x1000141c
10027911:	cmp    DWORD PTR [ebp+0xc],0x2
10027915:	mov    BYTE PTR [esp+0x138],0xa
1002791d:	mov    eax,0x10071a88
10027922:	je     0x10027929
10027924:	mov    eax,0x10071a8c
10027929:	push   eax
1002792a:	lea    ecx,[esp+0x2c]
1002792e:	call   0x100011cd
10027933:	push   0x783d1836
10027938:	push   0x10071a90
1002793d:	mov    BYTE PTR [esp+0x140],0xb
10027945:	call   0x10004246
1002794a:	push   0x75fc0eac
1002794f:	push   eax
10027950:	call   0x10004246
10027955:	push   0x1d721d4c
1002795a:	push   eax
1002795b:	call   0x10004246
10027960:	push   0x35d6b5fe
10027965:	push   eax
10027966:	call   0x10004246
1002796b:	push   0x4a11b6c
10027970:	push   eax
10027971:	call   0x10004246
10027976:	push   0x25032862
1002797b:	push   eax
1002797c:	call   0x10004246
10027981:	push   eax
10027982:	push   0x7
10027984:	push   esi
10027985:	call   0x10004258
1002798a:	add    esp,0x3c
1002798d:	push   eax
1002798e:	lea    ecx,[esp+0x4c]
10027992:	call   0x100011cd
10027997:	push   ebx
10027998:	lea    eax,[esp+0x4c]
1002799c:	push   eax
1002799d:	lea    eax,[esp+0x6c]
100279a1:	push   eax
100279a2:	mov    BYTE PTR [esp+0x144],0xc
100279aa:	mov    eax,DWORD PTR [edi]
100279ac:	add    eax,0x18
100279af:	call   0x100084cc
100279b4:	push   DWORD PTR [esp+0x44]
100279b8:	mov    BYTE PTR [esp+0x13c],0xd
100279c0:	push   DWORD PTR [esp+0x28]
100279c4:	lea    ecx,[esp+0xc0]
100279cb:	push   ecx
100279cc:	lea    ecx,[esp+0xfc]
100279d3:	push   ecx
100279d4:	lea    ecx,[esp+0xac]
100279db:	push   ecx
100279dc:	lea    ecx,[esp+0x24]
100279e0:	push   ecx
100279e1:	push   DWORD PTR [ebp+0x14]
100279e4:	lea    ecx,[esp+0x44]
100279e8:	push   DWORD PTR [ebp+0x10]
100279eb:	mov    edx,eax
100279ed:	push   ecx
100279ee:	lea    ecx,[esp+0xf8]
100279f5:	push   ecx
100279f6:	lea    ecx,[esp+0xa8]
100279fd:	push   ecx
100279fe:	mov    ecx,DWORD PTR [esp+0x4c]
10027a02:	call   0x1002807a
10027a07:	push   ebx
10027a08:	push   0x1
10027a0a:	lea    ecx,[esp+0x6c]
10027a0e:	mov    BYTE PTR [esp+0x23],al
10027a12:	call   0x100012f0
10027a17:	push   ebx
10027a18:	push   0x1
10027a1a:	lea    ecx,[esp+0x50]
10027a1e:	call   0x100012f0
10027a23:	push   ebx
10027a24:	push   0x1
10027a26:	lea    ecx,[esp+0x30]
10027a2a:	mov    BYTE PTR [esp+0x140],0xa
10027a32:	call   0x100012f0
10027a37:	cmp    BYTE PTR [esp+0x1b],bl
10027a3b:	je     0x10027b4c
10027a41:	mov    eax,DWORD PTR [esp+0x10]
10027a45:	mov    ecx,eax
10027a47:	shr    ecx,0x8
10027a4a:	test   cl,0x1
10027a4d:	je     0x10027b18
10027a53:	push   0x24
10027a55:	call   0x1004349e
10027a5a:	pop    ecx
10027a5b:	mov    DWORD PTR [esp+0x24],eax
10027a5f:	cmp    eax,ebx
10027a61:	mov    BYTE PTR [esp+0x138],0xe
10027a69:	je     0x10027a75
10027a6b:	push   eax
10027a6c:	call   0x1000768c
10027a71:	mov    esi,eax
10027a73:	jmp    0x10027a77
10027a75:	xor    esi,esi
10027a77:	mov    BYTE PTR [esp+0x138],0xa
10027a7f:	mov    eax,DWORD PTR [edi+0xc]
10027a82:	cmp    esi,eax
10027a84:	je     0x10027a95
10027a86:	cmp    eax,ebx
10027a88:	je     0x10027a95
10027a8a:	mov    edi,eax
10027a8c:	call   0x10009e75
10027a91:	mov    edi,DWORD PTR [esp+0x1c]
10027a95:	cmp    DWORD PTR [esp+0xd0],0x10
10027a9d:	mov    eax,DWORD PTR [esp+0xbc]
10027aa4:	mov    DWORD PTR [edi+0xc],esi
10027aa7:	jae    0x10027ab0
10027aa9:	lea    eax,[esp+0xbc]
10027ab0:	mov    esi,DWORD PTR [esp+0x1c]
10027ab4:	mov    edi,DWORD PTR [esp+0xcc]
10027abb:	push   eax
10027abc:	mov    eax,DWORD PTR [esi+0xc]
10027abf:	call   0x100076d4
10027ac4:	mov    BYTE PTR [esi+0x14],0x1
10027ac8:	xor    esi,esi
10027aca:	push   ebx
10027acb:	inc    esi
10027acc:	push   esi
10027acd:	lea    ecx,[esp+0xc0]
10027ad4:	call   0x100012f0
10027ad9:	push   ebx
10027ada:	push   esi
10027adb:	lea    ecx,[esp+0xf8]
10027ae2:	call   0x100012f0
10027ae7:	push   ebx
10027ae8:	push   esi
10027ae9:	lea    ecx,[esp+0xa4]
10027af0:	call   0x100012f0
10027af5:	push   ebx
10027af6:	push   esi
10027af7:	lea    ecx,[esp+0x114]
10027afe:	call   0x100012f0
10027b03:	push   ebx
10027b04:	push   esi
10027b05:	lea    ecx,[esp+0xdc]
10027b0c:	call   0x100012f0
10027b11:	push   ebx
10027b12:	push   esi
10027b13:	jmp    0x10028046
10027b18:	push   0xffffffff
10027b1a:	mov    DWORD PTR [esp+0x18],eax
10027b1e:	push   ebx
10027b1f:	lea    eax,[esp+0xa4]
10027b26:	push   eax
10027b27:	lea    ecx,[esp+0x8c]
10027b2e:	call   0x10001241
10027b33:	push   0xffffffff
10027b35:	push   ebx
10027b36:	lea    eax,[esp+0xf8]
10027b3d:	push   eax
10027b3e:	lea    ecx,[esp+0xe0]
10027b45:	call   0x10001241
10027b4a:	jmp    0x10027b54
10027b4c:	push   0x5
10027b4e:	call   0x10037980
10027b53:	pop    ecx
10027b54:	push   ebx
10027b55:	push   0x1
10027b57:	lea    ecx,[esp+0xc0]
10027b5e:	call   0x100012f0
10027b63:	push   ebx
10027b64:	push   0x1
10027b66:	lea    ecx,[esp+0xf8]
10027b6d:	call   0x100012f0
10027b72:	push   ebx
10027b73:	push   0x1
10027b75:	lea    ecx,[esp+0xa4]
10027b7c:	mov    BYTE PTR [esp+0x140],0x2
10027b84:	call   0x100012f0
10027b89:	mov    eax,DWORD PTR [esp+0x14]
10027b8d:	shr    eax,0x5
10027b90:	test   al,0x1
10027b92:	je     0x10027f1c
10027b98:	push   0x1006cd08
10027b9d:	lea    esi,[esp+0x84]
10027ba4:	call   0x1000658e
10027ba9:	test   al,al
10027bab:	pop    ecx
10027bac:	jne    0x10028025
10027bb2:	cmp    DWORD PTR [ebp+0xc],0x2
10027bb6:	jne    0x10027c33
10027bb8:	cmp    DWORD PTR [esp+0x98],0x10
10027bc0:	mov    eax,DWORD PTR [esp+0x84]
10027bc7:	jae    0x10027bd0
10027bc9:	lea    eax,[esp+0x84]
10027bd0:	push   eax
10027bd1:	lea    ecx,[esp+0x2c]
10027bd5:	call   0x100011cd
10027bda:	push   0x1f4
10027bdf:	mov    BYTE PTR [esp+0x13c],0xf
10027be7:	push   DWORD PTR ds:0x10080ee4
10027bed:	call   DWORD PTR ds:0x10066084
10027bf3:	test   eax,eax
10027bf5:	jne    0x10027c1f
10027bf7:	mov    eax,ds:0x10080edc
10027bfc:	mov    edi,0x10080ed8
10027c01:	push   eax
10027c02:	mov    ecx,edi
10027c04:	push   ecx
10027c05:	lea    eax,[esp+0x30]
10027c09:	push   eax
10027c0a:	call   0x1001950f
10027c0f:	push   DWORD PTR ds:0x10080ee4
10027c15:	call   DWORD PTR ds:0x10066094
10027c1b:	mov    edi,DWORD PTR [esp+0x1c]
10027c1f:	push   ebx
10027c20:	push   0x1
10027c22:	lea    ecx,[esp+0x30]
10027c26:	mov    BYTE PTR [esp+0x140],0x2
10027c2e:	call   0x100012f0
10027c33:	cmp    DWORD PTR [esp+0x98],0x10
10027c3b:	mov    ecx,DWORD PTR [esp+0x84]
10027c42:	jae    0x10027c4b
10027c44:	lea    ecx,[esp+0x84]
10027c4b:	mov    eax,DWORD PTR [esp+0x20]
10027c4f:	cmp    DWORD PTR [eax+0x18],0x10
10027c53:	jb     0x10027c5a
10027c55:	mov    eax,DWORD PTR [eax+0x4]
10027c58:	jmp    0x10027c5d
10027c5a:	add    eax,0x4
10027c5d:	push   ecx
10027c5e:	push   eax
10027c5f:	call   0x10002080
10027c64:	push   0x10071ac8
10027c69:	push   0xc
10027c6b:	push   0x10071afc
10027c70:	call   0x10004258
10027c75:	add    esp,0x14
10027c78:	push   eax
10027c79:	lea    ecx,[esp+0xa0]
10027c80:	call   0x100011cd
10027c85:	push   0x57b1b90a
10027c8a:	push   0x10071b0c
10027c8f:	mov    BYTE PTR [esp+0x140],0x10
10027c97:	call   0x10004246
10027c9c:	push   eax
10027c9d:	push   0x3
10027c9f:	push   0x10071b38
10027ca4:	call   0x10004258
10027ca9:	add    esp,0x14
10027cac:	push   eax
10027cad:	lea    ecx,[esp+0x4c]
10027cb1:	call   0x100011cd
10027cb6:	push   0x10071b3c
10027cbb:	push   0x8
10027cbd:	push   0x10071b7c
10027cc2:	mov    BYTE PTR [esp+0x144],0x11
10027cca:	call   0x10004258
10027ccf:	add    esp,0xc
10027cd2:	push   eax
10027cd3:	lea    ecx,[esp+0x2c]
10027cd7:	call   0x100011cd
10027cdc:	lea    eax,[esp+0x9c]
10027ce3:	push   eax
10027ce4:	lea    eax,[esp+0x4c]
10027ce8:	mov    BYTE PTR [esp+0x13c],0x12
10027cf0:	add    edi,0x8
10027cf3:	push   eax
10027cf4:	lea    ecx,[esp+0x30]
10027cf8:	mov    DWORD PTR [esp+0x2c],edi
10027cfc:	call   0x10009613
10027d01:	pop    ecx
10027d02:	pop    ecx
10027d03:	mov    ebx,eax
10027d05:	call   0x1002664a
10027d0a:	xor    edi,edi
10027d0c:	xor    ebx,ebx
10027d0e:	push   edi
10027d0f:	inc    ebx
10027d10:	push   ebx
10027d11:	lea    ecx,[esp+0x30]
10027d15:	call   0x100012f0
10027d1a:	push   edi
10027d1b:	push   ebx
10027d1c:	lea    ecx,[esp+0x50]
10027d20:	call   0x100012f0
10027d25:	push   edi
10027d26:	push   ebx
10027d27:	lea    ecx,[esp+0xa4]
10027d2e:	mov    BYTE PTR [esp+0x140],0x2
10027d36:	call   0x100012f0
10027d3b:	push   0x14e7719e
10027d40:	push   0x10071b88
10027d45:	call   0x10004246
10027d4a:	push   0x44ee59fc
10027d4f:	push   eax
10027d50:	call   0x10004246
10027d55:	push   0x29824700
10027d5a:	push   eax
10027d5b:	call   0x10004246
10027d60:	push   eax
10027d61:	push   0x7
10027d63:	push   0x1006d678
10027d68:	call   0x10004258
10027d6d:	add    esp,0x24
10027d70:	push   eax
10027d71:	lea    ecx,[esp+0x2c]
10027d75:	call   0x100011cd
10027d7a:	push   edi
10027d7b:	lea    eax,[esp+0x2c]
10027d7f:	push   eax
10027d80:	lea    eax,[esp+0xa4]
10027d87:	push   eax
10027d88:	mov    eax,DWORD PTR [esp+0x28]
10027d8c:	mov    BYTE PTR [esp+0x144],0x13
10027d94:	mov    eax,DWORD PTR [eax]
10027d96:	add    eax,0x18
10027d99:	call   0x100084cc
10027d9e:	push   edi
10027d9f:	push   ebx
10027da0:	lea    ecx,[esp+0x30]
10027da4:	mov    BYTE PTR [esp+0x140],0x15
10027dac:	call   0x100012f0
10027db1:	push   0x1006cd08
10027db6:	lea    esi,[esp+0xa0]
10027dbd:	call   0x1000658e
10027dc2:	test   al,al
10027dc4:	pop    ecx
10027dc5:	jne    0x10027dff
10027dc7:	push   0x1006cce8
10027dcc:	lea    ecx,[esp+0x4c]
10027dd0:	call   0x100011cd
10027dd5:	push   edi
10027dd6:	mov    eax,esi
10027dd8:	push   eax
10027dd9:	lea    ebx,[esp+0x50]
10027ddd:	mov    edi,0x10080d54
10027de2:	mov    BYTE PTR [esp+0x140],0x16
10027dea:	call   0x100197a8
10027def:	push   0x0
10027df1:	push   0x1
10027df3:	mov    ecx,ebx
10027df5:	call   0x100012f0
10027dfa:	xor    ebx,ebx
10027dfc:	inc    ebx
10027dfd:	xor    edi,edi
10027dff:	push   edi
10027e00:	push   ebx
10027e01:	lea    ecx,[esp+0xa4]
10027e08:	mov    BYTE PTR [esp+0x140],0x2
10027e10:	call   0x100012f0
10027e15:	push   0x10071bac
10027e1a:	push   0x8
10027e1c:	push   0x10071be8
10027e21:	call   0x10004258
10027e26:	add    esp,0xc
10027e29:	push   eax
10027e2a:	lea    ecx,[esp+0x2c]
10027e2e:	call   0x100011cd
10027e33:	mov    BYTE PTR [esp+0x138],0x17
10027e3b:	mov    esi,DWORD PTR [esp+0x24]
10027e3f:	mov    eax,DWORD PTR [esi]
10027e41:	push   edi
10027e42:	lea    ecx,[esp+0x2c]
10027e46:	push   ecx
10027e47:	lea    edx,[eax+0x20]
10027e4a:	lea    ecx,[esp+0x88]
10027e51:	call   0x10007f61
10027e56:	push   edi
10027e57:	push   ebx
10027e58:	lea    ecx,[esp+0x30]
10027e5c:	mov    BYTE PTR [esp+0x140],0x2
10027e64:	call   0x100012f0
10027e69:	push   0x1006cd0c
10027e6e:	lea    ecx,[esp+0x4c]
10027e72:	call   0x100011cd
10027e77:	push   0x10071bf4
10027e7c:	push   0xe
10027e7e:	push   0x1006d9c0
10027e83:	mov    BYTE PTR [esp+0x144],0x18
10027e8b:	call   0x10004258
10027e90:	add    esp,0xc
10027e93:	push   eax
10027e94:	lea    ecx,[esp+0x2c]
10027e98:	call   0x100011cd
10027e9d:	mov    BYTE PTR [esp+0x138],0x19
10027ea5:	mov    eax,DWORD PTR [esi]
10027ea7:	push   edi
10027ea8:	lea    ecx,[esp+0x2c]
10027eac:	push   ecx
10027ead:	lea    edx,[eax+0x20]
10027eb0:	lea    ecx,[esp+0x50]
10027eb4:	call   0x10007f61
10027eb9:	push   edi
10027eba:	push   ebx
10027ebb:	lea    ecx,[esp+0x30]
10027ebf:	call   0x100012f0
10027ec4:	push   edi
10027ec5:	push   ebx
10027ec6:	lea    ecx,[esp+0x50]
10027eca:	mov    BYTE PTR [esp+0x140],0x2
10027ed2:	call   0x100012f0
10027ed7:	mov    eax,DWORD PTR [esp+0x1c]
10027edb:	push   0x1006cd08
10027ee0:	lea    esi,[esp+0xd8]
10027ee7:	mov    BYTE PTR [eax+0x14],bl
10027eea:	call   0x1000658e
10027eef:	test   al,al
10027ef1:	pop    ecx
10027ef2:	jne    0x1002800e
10027ef8:	mov    eax,DWORD PTR [esp+0x14]
10027efc:	sar    eax,0x6
10027eff:	and    eax,0x3
10027f02:	push   eax
10027f03:	lea    eax,[esp+0x84]
10027f0a:	push   eax
10027f0b:	mov    ebx,esi
10027f0d:	mov    edi,0x10080ee8
10027f12:	call   0x100197a8
10027f17:	jmp    0x1002800e
10027f1c:	mov    eax,DWORD PTR [esp+0x20]
10027f20:	cmp    DWORD PTR [eax+0x18],0x10
10027f24:	jb     0x10027f2b
10027f26:	mov    eax,DWORD PTR [eax+0x4]
10027f29:	jmp    0x10027f2e
10027f2b:	add    eax,0x4
10027f2e:	push   eax
10027f2f:	call   0x10002080
10027f34:	mov    eax,DWORD PTR [esp+0x18]
10027f38:	sar    eax,0x6
10027f3b:	and    eax,0x3
10027f3e:	pop    ecx
10027f3f:	mov    DWORD PTR [esp+0x10],eax
10027f43:	je     0x10028010
10027f49:	push   0x2c0eb7a6
10027f4e:	push   0x10071c18
10027f53:	call   0x10004246
10027f58:	push   eax
10027f59:	push   0x7
10027f5b:	push   esi
10027f5c:	call   0x10004258
10027f61:	add    esp,0x14
10027f64:	push   eax
10027f65:	lea    ecx,[esp+0x2c]
10027f69:	call   0x100011cd
10027f6e:	lea    eax,[esp+0x28]
10027f72:	push   eax
10027f73:	mov    BYTE PTR [esp+0x13c],0x1a
10027f7b:	mov    eax,DWORD PTR [edi+0x4]
10027f7e:	add    eax,0x18
10027f81:	push   eax
10027f82:	call   0x1000826a
10027f87:	push   ebx
10027f88:	push   0x1
10027f8a:	lea    ecx,[esp+0x30]
10027f8e:	mov    BYTE PTR [esp+0x140],0x2
10027f96:	call   0x100012f0
10027f9b:	push   DWORD PTR [esp+0x10]
10027f9f:	lea    ebx,[esp+0xd8]
10027fa6:	push   DWORD PTR [esp+0x24]
10027faa:	mov    edi,0x10080ee8
10027faf:	call   0x100197a8
10027fb4:	cmp    DWORD PTR [esp+0x10],0x1
10027fb9:	jne    0x1002800e
10027fbb:	push   0x10071c3c
10027fc0:	push   0x7
10027fc2:	push   0x1006d678
10027fc7:	call   0x10004258
10027fcc:	add    esp,0xc
10027fcf:	push   eax
10027fd0:	lea    ecx,[esp+0x2c]
10027fd4:	call   0x100011cd
10027fd9:	push   0x0
10027fdb:	lea    eax,[esp+0x2c]
10027fdf:	push   eax
10027fe0:	mov    eax,DWORD PTR [esp+0x24]
10027fe4:	mov    BYTE PTR [esp+0x140],0x1b
10027fec:	mov    edx,DWORD PTR [eax+0x4]
10027fef:	add    edx,0x18
10027ff2:	mov    ecx,ebx
10027ff4:	call   0x10007f61
10027ff9:	push   0x0
10027ffb:	push   0x1
10027ffd:	lea    ecx,[esp+0x30]
10028001:	mov    BYTE PTR [esp+0x140],0x2
10028009:	call   0x100012f0
1002800e:	xor    ebx,ebx
10028010:	mov    eax,DWORD PTR [esp+0x14]
10028014:	shr    eax,0x9
10028017:	test   al,0x1
10028019:	je     0x10028025
1002801b:	push   0x10080f30
10028020:	call   0x1001a538
10028025:	push   ebx
10028026:	push   0x1
10028028:	lea    ecx,[esp+0x114]
1002802f:	call   0x100012f0
10028034:	push   ebx
10028035:	push   0x1
10028037:	lea    ecx,[esp+0xdc]
1002803e:	call   0x100012f0
10028043:	push   ebx
10028044:	push   0x1
10028046:	lea    ecx,[esp+0x88]
1002804d:	call   0x100012f0
10028052:	mov    al,0x1
10028054:	mov    ecx,DWORD PTR [esp+0x130]
1002805b:	mov    DWORD PTR fs:0x0,ecx
10028062:	pop    ecx
10028063:	pop    edi
10028064:	pop    esi
10028065:	pop    ebx
10028066:	mov    ecx,DWORD PTR [esp+0x118]
1002806d:	xor    ecx,esp
1002806f:	call   0x10042e97
10028074:	mov    esp,ebp
10028076:	pop    ebp
10028077:	ret    0x18
1002807a:	push   0x138
1002807f:	mov    eax,0x10064bad
10028084:	call   0x10059ad4
10028089:	mov    eax,DWORD PTR [ebp+0xc]
1002808c:	mov    ebx,DWORD PTR [ebp+0x8]
1002808f:	and    DWORD PTR [ebp-0x4],0x0
10028093:	mov    DWORD PTR [ebp-0xc0],eax
10028099:	mov    eax,DWORD PTR [ebp+0x10]
1002809c:	mov    DWORD PTR [ebp-0xc4],eax
100280a2:	mov    eax,DWORD PTR [ebp+0x1c]
100280a5:	mov    DWORD PTR [ebp-0x104],eax
100280ab:	mov    eax,DWORD PTR [ebp+0x20]
100280ae:	mov    DWORD PTR [ebp-0x108],eax
100280b4:	mov    eax,DWORD PTR [ebp+0x24]
100280b7:	mov    DWORD PTR [ebp-0x100],eax
100280bd:	mov    eax,DWORD PTR [ebp+0x28]
100280c0:	mov    DWORD PTR [ebp-0xf8],eax
100280c6:	mov    eax,DWORD PTR [ebp+0x2c]
100280c9:	mov    DWORD PTR [ebp-0xf4],eax
100280cf:	mov    eax,DWORD PTR [ebp+0x30]
100280d2:	mov    edi,ecx
100280d4:	lea    ecx,[ebp-0xb8]
100280da:	mov    esi,edx
100280dc:	mov    DWORD PTR [ebp-0xfc],eax
100280e2:	call   0x100183f1
100280e7:	cmp    DWORD PTR [ebp-0xa0],0x10
100280ee:	mov    ecx,DWORD PTR [ebp-0xb4]
100280f4:	jae    0x100280fc
100280f6:	lea    ecx,[ebp-0xb4]
100280fc:	cmp    DWORD PTR [edi+0x18],0x10
10028100:	jb     0x10028107
10028102:	mov    eax,DWORD PTR [edi+0x4]
10028105:	jmp    0x1002810a
10028107:	lea    eax,[edi+0x4]
1002810a:	push   ecx
1002810b:	push   eax
1002810c:	call   0x10002080
10028111:	pop    ecx
10028112:	pop    ecx
10028113:	push   0x0
10028115:	lea    ecx,[ebp-0x9c]
1002811b:	mov    DWORD PTR [ebp-0x84],0xf
10028125:	call   0x1000141c
1002812a:	push   0x5eb80dde
1002812f:	push   0x10071c60
10028134:	mov    BYTE PTR [ebp-0x4],0x2
10028138:	call   0x10004246
1002813d:	pop    ecx
1002813e:	pop    ecx
1002813f:	push   0x415b1a10
10028144:	push   eax
10028145:	call   0x10004246
1002814a:	pop    ecx
1002814b:	pop    ecx
1002814c:	push   0x13413648
10028151:	push   eax
10028152:	call   0x10004246
10028157:	pop    ecx
10028158:	pop    ecx
10028159:	push   0x23e9ec0a
1002815e:	push   eax
1002815f:	call   0x10004246
10028164:	pop    ecx
10028165:	pop    ecx
10028166:	push   0x24722280
1002816b:	push   eax
1002816c:	call   0x10004246
10028171:	pop    ecx
10028172:	pop    ecx
10028173:	push   eax
10028174:	push   0x6
10028176:	push   0x10071c98
1002817b:	call   0x10004258
10028180:	add    esp,0xc
10028183:	push   eax
10028184:	lea    eax,[ebp-0x9c]
1002818a:	push   eax
1002818b:	call   0x10004090
10028190:	push   edi
10028191:	lea    ecx,[ebp-0xf0]
10028197:	call   0x10031000
1002819c:	pop    ecx
1002819d:	mov    BYTE PTR [ebp-0x4],0x3
100281a1:	cmp    DWORD PTR [eax+0x18],0x10
100281a5:	jb     0x100281ac
100281a7:	mov    eax,DWORD PTR [eax+0x4]
100281aa:	jmp    0x100281af
100281ac:	add    eax,0x4
100281af:	push   eax
100281b0:	lea    eax,[ebp-0x9c]
100281b6:	push   eax
100281b7:	call   0x10004090
100281bc:	push   0x0
100281be:	push   0x1
100281c0:	lea    ecx,[ebp-0xf0]
100281c6:	mov    BYTE PTR [ebp-0x4],0x2
100281ca:	call   0x100012f0
100281cf:	mov    edi,0x1006cd08
100281d4:	push   edi
100281d5:	call   0x1000658e
100281da:	test   al,al
100281dc:	pop    ecx
100281dd:	jne    0x10028291
100281e3:	push   0x377b288a
100281e8:	push   0x10071ca0
100281ed:	call   0x10004246
100281f2:	pop    ecx
100281f3:	pop    ecx
100281f4:	push   0xdc1a2e
100281f9:	push   eax
100281fa:	call   0x10004246
100281ff:	pop    ecx
10028200:	pop    ecx
10028201:	push   0x1ee84eae
10028206:	push   eax
10028207:	call   0x10004246
1002820c:	pop    ecx
1002820d:	pop    ecx
1002820e:	push   0x5c93128e
10028213:	push   eax
10028214:	call   0x10004246
10028219:	pop    ecx
1002821a:	pop    ecx
1002821b:	push   0x2dbd7412
10028220:	push   eax
10028221:	call   0x10004246
10028226:	pop    ecx
10028227:	pop    ecx
10028228:	push   0x31f5ca6c
1002822d:	push   eax
1002822e:	call   0x10004246
10028233:	pop    ecx
10028234:	pop    ecx
10028235:	push   eax
10028236:	push   0x6
10028238:	push   0x10071cd8
1002823d:	call   0x10004258
10028242:	add    esp,0xc
10028245:	push   eax
10028246:	lea    eax,[ebp-0x9c]
1002824c:	push   eax
1002824d:	call   0x10004090
10028252:	push   esi
10028253:	lea    ecx,[ebp-0xf0]
10028259:	call   0x10031000
1002825e:	pop    ecx
1002825f:	mov    BYTE PTR [ebp-0x4],0x4
10028263:	cmp    DWORD PTR [eax+0x18],0x10
10028267:	jb     0x1002826e
10028269:	mov    eax,DWORD PTR [eax+0x4]
1002826c:	jmp    0x10028271
1002826e:	add    eax,0x4
10028271:	push   eax
10028272:	lea    eax,[ebp-0x9c]
10028278:	push   eax
10028279:	call   0x10004090
1002827e:	push   0x0
10028280:	push   0x1
10028282:	lea    ecx,[ebp-0xf0]
10028288:	mov    BYTE PTR [ebp-0x4],0x2
1002828c:	call   0x100012f0
10028291:	push   edi
10028292:	mov    esi,ebx
10028294:	call   0x1000658e
10028299:	test   al,al
1002829b:	pop    ecx
1002829c:	jne    0x10028329
100282a2:	push   0x38da4f62
100282a7:	push   0x10071ce0
100282ac:	call   0x10004246
100282b1:	pop    ecx
100282b2:	pop    ecx
100282b3:	push   0x4b0e5070
100282b8:	push   eax
100282b9:	call   0x10004246
100282be:	pop    ecx
100282bf:	pop    ecx
100282c0:	push   0x447de35c
100282c5:	push   eax
100282c6:	call   0x10004246
100282cb:	pop    ecx
100282cc:	pop    ecx
100282cd:	push   eax
100282ce:	push   0x6
100282d0:	push   0x10071d20
100282d5:	call   0x10004258
100282da:	add    esp,0xc
100282dd:	push   eax
100282de:	lea    eax,[ebp-0x9c]
100282e4:	push   eax
100282e5:	call   0x10004090
100282ea:	push   ebx
100282eb:	lea    ecx,[ebp-0xf0]
100282f1:	call   0x10031000
100282f6:	pop    ecx
100282f7:	mov    BYTE PTR [ebp-0x4],0x5
100282fb:	cmp    DWORD PTR [eax+0x18],0x10
100282ff:	jb     0x10028306
10028301:	mov    eax,DWORD PTR [eax+0x4]
10028304:	jmp    0x10028309
10028306:	add    eax,0x4
10028309:	push   eax
1002830a:	lea    eax,[ebp-0x9c]
10028310:	push   eax
10028311:	call   0x10004090
10028316:	push   0x0
10028318:	push   0x1
1002831a:	lea    ecx,[ebp-0xf0]
10028320:	mov    BYTE PTR [ebp-0x4],0x2
10028324:	call   0x100012f0
10028329:	mov    esi,DWORD PTR [ebp-0xc0]
1002832f:	push   edi
10028330:	call   0x1000658e
10028335:	test   al,al
10028337:	pop    ecx
10028338:	jne    0x100283b4
1002833a:	push   0x7b5557f0
1002833f:	push   0x10071d28
10028344:	call   0x10004246
10028349:	pop    ecx
1002834a:	pop    ecx
1002834b:	push   0x30627ada
10028350:	push   eax
10028351:	call   0x10004246
10028356:	pop    ecx
10028357:	pop    ecx
10028358:	push   eax
10028359:	push   0x6
1002835b:	push   0x10071d50
10028360:	call   0x10004258
10028365:	add    esp,0xc
10028368:	push   eax
10028369:	lea    eax,[ebp-0x9c]
1002836f:	push   eax
10028370:	call   0x10004090
10028375:	push   esi
10028376:	lea    ecx,[ebp-0xf0]
1002837c:	call   0x10031000
10028381:	pop    ecx
10028382:	mov    BYTE PTR [ebp-0x4],0x6
10028386:	cmp    DWORD PTR [eax+0x18],0x10
1002838a:	jb     0x10028391
1002838c:	mov    eax,DWORD PTR [eax+0x4]
1002838f:	jmp    0x10028394
10028391:	add    eax,0x4
10028394:	push   eax
10028395:	lea    eax,[ebp-0x9c]
1002839b:	push   eax
1002839c:	call   0x10004090
100283a1:	push   0x0
100283a3:	push   0x1
100283a5:	lea    ecx,[ebp-0xf0]
100283ab:	mov    BYTE PTR [ebp-0x4],0x2
100283af:	call   0x100012f0
100283b4:	mov    esi,DWORD PTR [ebp-0xc4]
100283ba:	push   edi
100283bb:	call   0x1000658e
100283c0:	test   al,al
100283c2:	pop    ecx
100283c3:	jne    0x1002846a
100283c9:	push   0x3b6caa56
100283ce:	push   0x10071d58
100283d3:	call   0x10004246
100283d8:	pop    ecx
100283d9:	pop    ecx
100283da:	push   0x34d2cd6c
100283df:	push   eax
100283e0:	call   0x10004246
100283e5:	pop    ecx
100283e6:	pop    ecx
100283e7:	push   0x637419ac
100283ec:	push   eax
100283ed:	call   0x10004246
100283f2:	pop    ecx
100283f3:	pop    ecx
100283f4:	push   0x44f1b722
100283f9:	push   eax
100283fa:	call   0x10004246
100283ff:	pop    ecx
10028400:	pop    ecx
10028401:	push   0x122ae226
10028406:	push   eax
10028407:	call   0x10004246
1002840c:	pop    ecx
1002840d:	pop    ecx
1002840e:	push   eax
1002840f:	push   0x6
10028411:	push   0x10071d98
10028416:	call   0x10004258
1002841b:	add    esp,0xc
1002841e:	push   eax
1002841f:	lea    eax,[ebp-0x9c]
10028425:	push   eax
10028426:	call   0x10004090
1002842b:	push   esi
1002842c:	lea    ecx,[ebp-0xf0]
10028432:	call   0x10031000
10028437:	pop    ecx
10028438:	mov    BYTE PTR [ebp-0x4],0x7
1002843c:	cmp    DWORD PTR [eax+0x18],0x10
10028440:	jb     0x10028447
10028442:	mov    eax,DWORD PTR [eax+0x4]
10028445:	jmp    0x1002844a
10028447:	add    eax,0x4
1002844a:	push   eax
1002844b:	lea    eax,[ebp-0x9c]
10028451:	push   eax
10028452:	call   0x10004090
10028457:	push   0x0
10028459:	push   0x1
1002845b:	lea    ecx,[ebp-0xf0]
10028461:	mov    BYTE PTR [ebp-0x4],0x2
10028465:	call   0x100012f0
1002846a:	push   DWORD PTR [ebp+0x18]
1002846d:	mov    esi,0x10080f30
10028472:	sub    esp,0xc
10028475:	mov    ebx,esp
10028477:	mov    DWORD PTR [ebp-0xc8],esp
1002847d:	call   0x1001a593
10028482:	lea    ecx,[ebp-0xf0]
10028488:	call   0x1001a607
1002848d:	add    esp,0x10
10028490:	push   0xffffffff
10028492:	xor    ebx,ebx
10028494:	push   ebx
10028495:	lea    esi,[ebp-0x9c]
1002849b:	mov    BYTE PTR [ebp-0x4],0x8
1002849f:	call   0x10004c80
100284a4:	push   ebx
100284a5:	push   0x1
100284a7:	lea    ecx,[ebp-0xf0]
100284ad:	mov    BYTE PTR [ebp-0x4],0x2
100284b1:	call   0x100012f0
100284b6:	push   0x441414fa
100284bb:	push   0x10071da0
100284c0:	call   0x10004246
100284c5:	pop    ecx
100284c6:	pop    ecx
100284c7:	push   0x7fa024c0
100284cc:	push   eax
100284cd:	call   0x10004246
100284d2:	pop    ecx
100284d3:	pop    ecx
100284d4:	push   0x1f5985a8
100284d9:	push   eax
100284da:	call   0x10004246
100284df:	pop    ecx
100284e0:	pop    ecx
100284e1:	push   eax
100284e2:	push   0x5
100284e4:	push   0x10071dd0
100284e9:	call   0x10004258
100284ee:	add    esp,0xc
100284f1:	push   eax
100284f2:	mov    eax,esi
100284f4:	push   eax
100284f5:	call   0x10004090
100284fa:	push   0xa
100284fc:	lea    eax,[ebp-0x80]
100284ff:	push   eax
10028500:	push   DWORD PTR [ebp+0x14]
10028503:	call   0x10045af6
10028508:	add    esp,0xc
1002850b:	push   eax
1002850c:	mov    eax,esi
1002850e:	push   eax
1002850f:	call   0x10004090
10028514:	cmp    DWORD PTR [ebp-0x84],0x10
1002851b:	mov    eax,DWORD PTR [ebp-0x98]
10028521:	jae    0x10028529
10028523:	lea    eax,[ebp-0x98]
10028529:	push   eax
1002852a:	lea    ecx,[ebp-0xf0]
10028530:	call   0x100011cd
10028535:	mov    BYTE PTR [ebp-0x4],0x9
10028539:	push   DWORD PTR ds:0x10080d88
1002853f:	lea    ecx,[ebp-0x144]
10028545:	call   0x100011cd
1002854a:	push   0x960
1002854f:	lea    eax,[ebp-0xc8]
10028555:	push   eax
10028556:	lea    eax,[ebp-0xf0]
1002855c:	push   eax
1002855d:	lea    eax,[ebp-0xb8]
10028563:	push   eax
10028564:	lea    eax,[ebp-0xc4]
1002856a:	push   eax
1002856b:	lea    edx,[ebp-0x144]
10028571:	mov    BYTE PTR [ebp-0x4],0xa
10028575:	call   0x10030ee0
1002857a:	mov    ecx,DWORD PTR [eax]
1002857c:	mov    esi,ecx
1002857e:	add    esp,0x14
10028581:	mov    DWORD PTR [ebp-0xc0],esi
10028587:	mov    DWORD PTR [eax],ebx
10028589:	mov    DWORD PTR [ebp-0x128],esi
1002858f:	push   DWORD PTR [ebp-0xc4]
10028595:	call   0x10042e92
1002859a:	pop    ecx
1002859b:	push   ebx
1002859c:	push   0x1
1002859e:	lea    ecx,[ebp-0x144]
100285a4:	call   0x100012f0
100285a9:	push   ebx
100285aa:	push   0x1
100285ac:	lea    ecx,[ebp-0xf0]
100285b2:	mov    BYTE PTR [ebp-0x4],0xd
100285b6:	call   0x100012f0
100285bb:	cmp    esi,ebx
100285bd:	jne    0x1002861c
100285bf:	call   0x10018370
100285c4:	cmp    DWORD PTR [ebp-0xa0],0x10
100285cb:	mov    eax,DWORD PTR [ebp-0xb4]
100285d1:	jae    0x100285d9
100285d3:	lea    eax,[ebp-0xb4]
100285d9:	push   eax
100285da:	call   0x10002080
100285df:	pop    ecx
100285e0:	push   0x5
100285e2:	call   0x10037980
100285e7:	pop    ecx
100285e8:	push   ebx
100285e9:	call   0x10042e92
100285ee:	mov    BYTE PTR [ebp-0xb9],bl
100285f4:	pop    ecx
100285f5:	push   ebx
100285f6:	push   0x1
100285f8:	lea    ecx,[ebp-0x9c]
100285fe:	call   0x100012f0
10028603:	push   ebx
10028604:	push   0x1
10028606:	lea    ecx,[ebp-0xb8]
1002860c:	call   0x100012f0
10028611:	mov    al,BYTE PTR [ebp-0xb9]
10028617:	jmp    0x1002873f
1002861c:	mov    eax,DWORD PTR [ebp-0xc8]
10028622:	mov    DWORD PTR [ebp-0xd0],eax
10028628:	mov    eax,DWORD PTR [ebp-0xc0]
1002862e:	lea    edi,[ebp-0x124]
10028634:	lea    esi,[ebp-0xd4]
1002863a:	mov    DWORD PTR [ebp-0xd4],ebx
10028640:	mov    DWORD PTR [ebp-0xcc],eax
10028646:	call   0x100375d0
1002864b:	cmp    DWORD PTR [eax+0x18],0x10
1002864f:	jb     0x10028656
10028651:	mov    eax,DWORD PTR [eax+0x4]
10028654:	jmp    0x10028659
10028656:	add    eax,0x4
10028659:	push   eax
1002865a:	call   0x10045cb5
1002865f:	pop    ecx
10028660:	mov    ecx,DWORD PTR [ebp-0x104]
10028666:	push   ebx
10028667:	mov    DWORD PTR [ecx],eax
10028669:	push   0x1
1002866b:	lea    ecx,[ebp-0x124]
10028671:	call   0x100012f0
10028676:	lea    edi,[ebp-0x124]
1002867c:	lea    esi,[ebp-0xd4]
10028682:	call   0x100375d0
10028687:	mov    ecx,DWORD PTR [ebp-0x108]
1002868d:	push   0xffffffff
1002868f:	push   ebx
10028690:	push   eax
10028691:	mov    BYTE PTR [ebp-0x4],0xe
10028695:	call   0x10001241
1002869a:	push   ebx
1002869b:	push   0x1
1002869d:	mov    ecx,edi
1002869f:	mov    BYTE PTR [ebp-0x4],0xd
100286a3:	call   0x100012f0
100286a8:	lea    edi,[ebp-0x124]
100286ae:	call   0x100375d0
100286b3:	mov    ecx,DWORD PTR [ebp-0x100]
100286b9:	push   0xffffffff
100286bb:	push   ebx
100286bc:	push   eax
100286bd:	mov    BYTE PTR [ebp-0x4],0xf
100286c1:	call   0x10001241
100286c6:	push   ebx
100286c7:	push   0x1
100286c9:	mov    ecx,edi
100286cb:	mov    BYTE PTR [ebp-0x4],0xd
100286cf:	call   0x100012f0
100286d4:	lea    edi,[ebp-0x124]
100286da:	call   0x100375d0
100286df:	mov    ecx,DWORD PTR [ebp-0xf8]
100286e5:	push   0xffffffff
100286e7:	push   ebx
100286e8:	push   eax
100286e9:	mov    BYTE PTR [ebp-0x4],0x10
100286ed:	call   0x10001241
100286f2:	push   ebx
100286f3:	push   0x1
100286f5:	mov    ecx,edi
100286f7:	mov    BYTE PTR [ebp-0x4],0xd
100286fb:	call   0x100012f0
10028700:	mov    eax,esi
10028702:	push   eax
10028703:	call   0x100377e0
10028708:	mov    ecx,DWORD PTR [ebp-0xf4]
1002870e:	mov    DWORD PTR [ecx],eax
10028710:	mov    eax,esi
10028712:	push   eax
10028713:	call   0x100377e0
10028718:	mov    ecx,DWORD PTR [ebp-0xfc]
1002871e:	push   DWORD PTR [ebp-0xc0]
10028724:	mov    DWORD PTR [ecx],eax
10028726:	call   0x10042e92
1002872b:	mov    BYTE PTR [ebp-0xb9],0x1
10028732:	jmp    0x100285f4
10028737:	mov    eax,0x1002873d
1002873c:	ret    
1002873d:	xor    al,al
1002873f:	call   0x10059b30
10028744:	ret    0x2c
10028747:	push   0xbc
1002874c:	mov    eax,0x100638ec
10028751:	call   0x10059a9e
10028756:	mov    eax,DWORD PTR [ebp+0x8]
10028759:	mov    DWORD PTR [ebp-0x50],eax
1002875c:	mov    eax,DWORD PTR [ebp+0xc]
1002875f:	mov    DWORD PTR [ebp-0x54],eax
10028762:	lea    eax,[ebp-0x74]
10028765:	mov    esi,ecx
10028767:	xor    edi,edi
10028769:	push   eax
1002876a:	mov    DWORD PTR [ebp-0x4c],esi
1002876d:	mov    DWORD PTR [ebp-0x58],edi
10028770:	call   0x100310e0
10028775:	pop    ecx
10028776:	push   edi
10028777:	mov    DWORD PTR [ebp-0x4],edi
1002877a:	push   DWORD PTR ds:0x10080dc0
10028780:	lea    ecx,[ebp-0x48]
10028783:	push   ecx
10028784:	mov    ecx,eax
10028786:	call   0x10039d20
1002878b:	add    esp,0xc
1002878e:	xor    ebx,ebx
10028790:	push   edi
10028791:	inc    ebx
10028792:	push   ebx
10028793:	lea    ecx,[ebp-0x74]
10028796:	mov    BYTE PTR [ebp-0x4],0x2
1002879a:	call   0x100012f0
1002879f:	cmp    DWORD PTR [ebp-0x34],edi
100287a2:	jne    0x100287c1
100287a4:	push   0x1006cd08
100287a9:	mov    ecx,esi
100287ab:	call   0x100011cd
100287b0:	push   edi
100287b1:	push   ebx
100287b2:	lea    ecx,[ebp-0x48]
100287b5:	call   0x100012f0
100287ba:	mov    eax,esi
100287bc:	jmp    0x1002892e
100287c1:	push   DWORD PTR [ebp-0x50]
100287c4:	lea    ecx,[ebp-0xc8]
100287ca:	call   0x10031000
100287cf:	mov    esi,eax
100287d1:	mov    BYTE PTR [ebp-0x4],0x3
100287d5:	mov    DWORD PTR [esp],0x562606c2
100287dc:	push   0x10071dd8
100287e1:	call   0x10004246
100287e6:	push   0x1bb1c5e6
100287eb:	push   eax
100287ec:	call   0x10004246
100287f1:	add    esp,0x10
100287f4:	push   esi
100287f5:	push   eax
100287f6:	push   0x3
100287f8:	push   0x10071e18
100287fd:	call   0x10004258
10028802:	add    esp,0xc
10028805:	push   eax
10028806:	lea    eax,[ebp-0x2c]
10028809:	push   eax
1002880a:	call   0x10006521
1002880f:	add    esp,0xc
10028812:	push   edi
10028813:	push   ebx
10028814:	lea    ecx,[ebp-0xc8]
1002881a:	mov    BYTE PTR [ebp-0x4],0x5
1002881e:	call   0x100012f0
10028823:	push   DWORD PTR [ebp-0x54]
10028826:	lea    ecx,[ebp-0xac]
1002882c:	call   0x10031000
10028831:	mov    esi,eax
10028833:	mov    BYTE PTR [ebp-0x4],0x6
10028837:	mov    DWORD PTR [esp],0x76719a9a
1002883e:	push   0x10071e1c
10028843:	call   0x10004246
10028848:	pop    ecx
10028849:	pop    ecx
1002884a:	push   esi
1002884b:	push   eax
1002884c:	push   0x4
1002884e:	push   0x10071e58
10028853:	call   0x10004258
10028858:	add    esp,0xc
1002885b:	push   eax
1002885c:	lea    eax,[ebp-0x74]
1002885f:	push   eax
10028860:	call   0x10006521
10028865:	add    esp,0xc
10028868:	push   0xffffffff
1002886a:	push   edi
1002886b:	lea    esi,[ebp-0x2c]
1002886e:	mov    BYTE PTR [ebp-0x4],0x7
10028872:	call   0x10004c80
10028877:	push   edi
10028878:	push   ebx
10028879:	lea    ecx,[ebp-0x74]
1002887c:	call   0x100012f0
10028881:	push   edi
10028882:	push   ebx
10028883:	lea    ecx,[ebp-0xac]
10028889:	mov    BYTE PTR [ebp-0x4],0x5
1002888d:	call   0x100012f0
10028892:	push   edi
10028893:	push   DWORD PTR ds:0x10080dbc
10028899:	lea    eax,[ebp-0x90]
1002889f:	push   eax
100288a0:	mov    ecx,esi
100288a2:	call   0x10039d20
100288a7:	add    esp,0xc
100288aa:	push   0xffffffff
100288ac:	push   edi
100288ad:	mov    BYTE PTR [ebp-0x4],0x8
100288b1:	push   eax
100288b2:	mov    ecx,esi
100288b4:	call   0x10001241
100288b9:	push   edi
100288ba:	push   ebx
100288bb:	lea    ecx,[ebp-0x90]
100288c1:	mov    BYTE PTR [ebp-0x4],0x5
100288c5:	call   0x100012f0
100288ca:	cmp    DWORD PTR [ebp-0x18],edi
100288cd:	jne    0x100288de
100288cf:	mov    ecx,DWORD PTR [ebp-0x4c]
100288d2:	push   0x1006cd08
100288d7:	call   0x100011cd
100288dc:	jmp    0x10028917
100288de:	push   0x10071e60
100288e3:	lea    eax,[ebp-0x48]
100288e6:	push   eax
100288e7:	lea    eax,[ebp-0x90]
100288ed:	push   eax
100288ee:	call   0x10006490
100288f3:	add    esp,0xc
100288f6:	lea    ecx,[ebp-0x2c]
100288f9:	push   ecx
100288fa:	push   eax
100288fb:	push   DWORD PTR [ebp-0x4c]
100288fe:	mov    BYTE PTR [ebp-0x4],0x9
10028902:	call   0x100064d6
10028907:	add    esp,0xc
1002890a:	push   edi
1002890b:	push   ebx
1002890c:	lea    ecx,[ebp-0x90]
10028912:	call   0x100012f0
10028917:	push   edi
10028918:	push   ebx
10028919:	lea    ecx,[ebp-0x2c]
1002891c:	call   0x100012f0
10028921:	push   edi
10028922:	push   ebx
10028923:	lea    ecx,[ebp-0x48]
10028926:	call   0x100012f0
1002892b:	mov    eax,DWORD PTR [ebp-0x4c]
1002892e:	call   0x10059b21
10028933:	ret    0x8
10028936:	push   ebp
10028937:	mov    ebp,esp
10028939:	and    esp,0xfffffff8
1002893c:	push   0xffffffff
1002893e:	push   0x10064268
10028943:	mov    eax,fs:0x0
10028949:	push   eax
1002894a:	sub    esp,0xa0
10028950:	mov    eax,ds:0x1007e030
10028955:	xor    eax,esp
10028957:	mov    DWORD PTR [esp+0x98],eax
1002895e:	push   ebx
1002895f:	push   esi
10028960:	push   edi
10028961:	mov    eax,ds:0x1007e030
10028966:	xor    eax,esp
10028968:	push   eax
10028969:	lea    eax,[esp+0xb0]
10028970:	mov    fs:0x0,eax
10028976:	mov    edi,DWORD PTR [ebp+0x8]
10028979:	push   0x2169f77e
1002897e:	push   0x10071e64
10028983:	mov    DWORD PTR [esp+0x20],edi
10028987:	mov    BYTE PTR [esp+0x1f],0x0
1002898c:	call   0x10004246
10028991:	push   0x2791f7b8
10028996:	push   eax
10028997:	call   0x10004246
1002899c:	push   0x4d32bd72
100289a1:	push   eax
100289a2:	call   0x10004246
100289a7:	push   0x106757aa
100289ac:	push   eax
100289ad:	call   0x10004246
100289b2:	push   eax
100289b3:	push   0x4
100289b5:	push   0x1006d40c
100289ba:	call   0x10004258
100289bf:	add    esp,0x2c
100289c2:	push   eax
100289c3:	lea    ecx,[esp+0x3c]
100289c7:	call   0x100011cd
100289cc:	xor    esi,esi
100289ce:	push   esi
100289cf:	lea    eax,[esp+0x3c]
100289d3:	push   eax
100289d4:	lea    eax,[esp+0x94]
100289db:	push   eax
100289dc:	mov    DWORD PTR [esp+0xc4],esi
100289e3:	mov    eax,DWORD PTR [edi]
100289e5:	add    eax,0x18
100289e8:	call   0x100084cc
100289ed:	push   esi
100289ee:	push   0x1
100289f0:	lea    ecx,[esp+0x40]
100289f4:	mov    BYTE PTR [esp+0xc0],0x2
100289fc:	call   0x100012f0
10028a01:	cmp    DWORD PTR [esp+0xa0],0x4
10028a09:	jbe    0x10028a9c
10028a0f:	push   0x7b479be6
10028a14:	push   0x10071ea0
10028a19:	call   0x10004246
10028a1e:	cmp    DWORD PTR [esp+0xac],0x10
10028a26:	mov    esi,DWORD PTR [esp+0x98]
10028a2d:	pop    ecx
10028a2e:	pop    ecx
10028a2f:	mov    ebx,esi
10028a31:	jae    0x10028a3c
10028a33:	lea    ebx,[esp+0x90]
10028a3a:	mov    esi,ebx
10028a3c:	push   eax
10028a3d:	push   0x4
10028a3f:	push   0x10071edc
10028a44:	call   0x10004258
10028a49:	add    esp,0xc
10028a4c:	push   eax
10028a4d:	push   ebx
10028a4e:	call   0x10045a30
10028a53:	cmp    eax,esi
10028a55:	pop    ecx
10028a56:	pop    ecx
10028a57:	jne    0x10028a9c
10028a59:	push   0xffffffff
10028a5b:	push   0x4
10028a5d:	lea    eax,[esp+0x94]
10028a64:	push   eax
10028a65:	lea    eax,[esp+0x28]
10028a69:	call   0x1000c8df
10028a6e:	push   0xffffffff
10028a70:	push   0x0
10028a72:	push   eax
10028a73:	lea    ecx,[esp+0x98]
10028a7a:	mov    BYTE PTR [esp+0xc4],0x3
10028a82:	call   0x10001241
10028a87:	push   0x0
10028a89:	push   0x1
10028a8b:	lea    ecx,[esp+0x24]
10028a8f:	mov    BYTE PTR [esp+0xc0],0x2
10028a97:	call   0x100012f0
10028a9c:	cmp    DWORD PTR [esp+0xa4],0x10
10028aa4:	mov    eax,DWORD PTR [esp+0x90]
10028aab:	jae    0x10028ab4
10028aad:	lea    eax,[esp+0x90]
10028ab4:	push   eax
10028ab5:	call   DWORD PTR ds:0x100663e0
10028abb:	cmp    eax,0xffffffff
10028abe:	je     0x10028acf
10028ac0:	mov    ebx,eax
10028ac2:	call   0x10017464
10028ac7:	test   al,al
10028ac9:	jne    0x10028d15
10028acf:	push   0x10071ee4
10028ad4:	push   0xa
10028ad6:	push   0x10071f0c
10028adb:	call   0x10004258
10028ae0:	add    esp,0xc
10028ae3:	push   eax
10028ae4:	lea    esi,[esp+0x90]
10028aeb:	call   0x1000658e
10028af0:	test   al,al
10028af2:	pop    ecx
10028af3:	jne    0x10028d15
10028af9:	push   0x404bd9f4
10028afe:	push   0x10071f18
10028b03:	call   0x10004246
10028b08:	push   eax
10028b09:	push   0x9
10028b0b:	push   0x10071f3c
10028b10:	call   0x10004258
10028b15:	add    esp,0x14
10028b18:	push   eax
10028b19:	call   0x1000658e
10028b1e:	test   al,al
10028b20:	pop    ecx
10028b21:	jne    0x10028d15
10028b27:	push   0x2256c374
10028b2c:	push   0x10071f48
10028b31:	call   0x10004246
10028b36:	push   eax
10028b37:	push   0x9
10028b39:	push   0x10071f7c
10028b3e:	call   0x10004258
10028b43:	add    esp,0x14
10028b46:	push   eax
10028b47:	call   0x1000658e
10028b4c:	test   al,al
10028b4e:	pop    ecx
10028b4f:	jne    0x10028d15
10028b55:	push   0x386c2644
10028b5a:	push   0x10071f88
10028b5f:	call   0x10004246
10028b64:	push   0x663436d4
10028b69:	push   eax
10028b6a:	call   0x10004246
10028b6f:	push   0x284ad3e
10028b74:	push   eax
10028b75:	call   0x10004246
10028b7a:	push   0x39a3336c
10028b7f:	push   eax
10028b80:	call   0x10004246
10028b85:	push   eax
10028b86:	push   0x5
10028b88:	push   0x10071fc4
10028b8d:	call   0x10004258
10028b92:	add    esp,0x2c
10028b95:	push   eax
10028b96:	call   0x1000658e
10028b9b:	test   al,al
10028b9d:	pop    ecx
10028b9e:	jne    0x10028d15
10028ba4:	push   0x7ef969fe
10028ba9:	push   0x10071fcc
10028bae:	call   0x10004246
10028bb3:	push   0x7f9d0b1a
10028bb8:	push   eax
10028bb9:	call   0x10004246
10028bbe:	push   eax
10028bbf:	push   0x8
10028bc1:	push   0x10071ff4
10028bc6:	call   0x10004258
10028bcb:	add    esp,0x1c
10028bce:	push   eax
10028bcf:	call   0x1000658e
10028bd4:	test   al,al
10028bd6:	pop    ecx
10028bd7:	jne    0x10028d15
10028bdd:	push   0x10072000
10028be2:	push   0xd
10028be4:	push   0x10072040
10028be9:	call   0x10004258
10028bee:	add    esp,0xc
10028bf1:	push   eax
10028bf2:	call   0x1000658e
10028bf7:	test   al,al
10028bf9:	pop    ecx
10028bfa:	jne    0x10028d15
10028c00:	push   0x731b88b8
10028c05:	push   0x10072050
10028c0a:	call   0x10004246
10028c0f:	push   0x39d9b2d6
10028c14:	push   eax
10028c15:	call   0x10004246
10028c1a:	push   0x1157108e
10028c1f:	push   eax
10028c20:	call   0x10004246
10028c25:	push   0x1f7aa438
10028c2a:	push   eax
10028c2b:	call   0x10004246
10028c30:	push   eax
10028c31:	push   0x15
10028c33:	push   0x10072088
10028c38:	call   0x10004258
10028c3d:	add    esp,0x2c
10028c40:	push   eax
10028c41:	call   0x1000658e
10028c46:	test   al,al
10028c48:	pop    ecx
10028c49:	jne    0x10028d15
10028c4f:	push   0x77663e6a
10028c54:	push   0x100720a0
10028c59:	call   0x10004246
10028c5e:	push   0x686debf0
10028c63:	push   eax
10028c64:	call   0x10004246
10028c69:	push   0x19044166
10028c6e:	push   eax
10028c6f:	call   0x10004246
10028c74:	push   eax
10028c75:	push   0x1e
10028c77:	push   0x100720dc
10028c7c:	call   0x10004258
10028c81:	add    esp,0x24
10028c84:	push   eax
10028c85:	call   0x1000658e
10028c8a:	test   al,al
10028c8c:	pop    ecx
10028c8d:	jne    0x10028d15
10028c93:	push   0x100720fc
10028c98:	push   0x1d
10028c9a:	push   0x10072120
10028c9f:	call   0x10004258
10028ca4:	add    esp,0xc
10028ca7:	push   eax
10028ca8:	call   0x1000658e
10028cad:	test   al,al
10028caf:	pop    ecx
10028cb0:	jne    0x10028d15
10028cb2:	push   0x3a59cd1e
10028cb7:	push   0x10072140
10028cbc:	call   0x10004246
10028cc1:	push   0x54cc9fe0
10028cc6:	push   eax
10028cc7:	call   0x10004246
10028ccc:	push   eax
10028ccd:	push   0x1d
10028ccf:	push   0x10072170
10028cd4:	call   0x10004258
10028cd9:	add    esp,0x1c
10028cdc:	push   eax
10028cdd:	call   0x1000658e
10028ce2:	test   al,al
10028ce4:	pop    ecx
10028ce5:	jne    0x10028d15
10028ce7:	push   0x2180f83e
10028cec:	push   0x10072190
10028cf1:	call   0x10004246
10028cf6:	push   eax
10028cf7:	push   0x15
10028cf9:	push   0x100721bc
10028cfe:	call   0x10004258
10028d03:	add    esp,0x14
10028d06:	push   eax
10028d07:	call   0x1000658e
10028d0c:	test   al,al
10028d0e:	pop    ecx
10028d0f:	je     0x10028df9
10028d15:	cmp    DWORD PTR [esp+0xa4],0x10
10028d1d:	mov    eax,DWORD PTR [esp+0x90]
10028d24:	mov    BYTE PTR [esp+0x17],0x1
10028d29:	jae    0x10028d32
10028d2b:	lea    eax,[esp+0x90]
10028d32:	push   eax
10028d33:	call   0x10002080
10028d38:	mov    DWORD PTR [esp],0x100721d4
10028d3f:	push   0x9
10028d41:	push   0x10072210
10028d46:	call   0x10004258
10028d4b:	add    esp,0xc
10028d4e:	push   eax
10028d4f:	lea    ecx,[esp+0x20]
10028d53:	call   0x100011cd
10028d58:	push   0x1007221c
10028d5d:	push   0x3
10028d5f:	push   0x10072240
10028d64:	mov    BYTE PTR [esp+0xc4],0x4
10028d6c:	call   0x10004258
10028d71:	add    esp,0xc
10028d74:	push   eax
10028d75:	lea    ecx,[esp+0x58]
10028d79:	call   0x100011cd
10028d7e:	push   0x10072248
10028d83:	push   0x8
10028d85:	push   0x10071b7c
10028d8a:	mov    BYTE PTR [esp+0xc4],0x5
10028d92:	call   0x10004258
10028d97:	add    esp,0xc
10028d9a:	push   eax
10028d9b:	lea    ecx,[esp+0x74]
10028d9f:	call   0x100011cd
10028da4:	lea    eax,[esp+0x1c]
10028da8:	push   eax
10028da9:	lea    eax,[esp+0x58]
10028dad:	push   eax
10028dae:	lea    ecx,[esp+0x78]
10028db2:	mov    BYTE PTR [esp+0xc0],0x6
10028dba:	call   0x10009613
10028dbf:	pop    ecx
10028dc0:	pop    ecx
10028dc1:	add    edi,0x8
10028dc4:	mov    ebx,eax
10028dc6:	call   0x1002664a
10028dcb:	xor    esi,esi
10028dcd:	push   esi
10028dce:	push   0x1
10028dd0:	lea    ecx,[esp+0x78]
10028dd4:	call   0x100012f0
10028dd9:	push   esi
10028dda:	push   0x1
10028ddc:	lea    ecx,[esp+0x5c]
10028de0:	call   0x100012f0
10028de5:	push   esi
10028de6:	push   0x1
10028de8:	lea    ecx,[esp+0x24]
10028dec:	call   0x100012f0
10028df1:	mov    eax,DWORD PTR [esp+0x18]
10028df5:	mov    BYTE PTR [eax+0x14],0x1
10028df9:	push   0x0
10028dfb:	push   0x1
10028dfd:	lea    ecx,[esp+0x94]
10028e04:	call   0x100012f0
10028e09:	mov    al,BYTE PTR [esp+0x17]
10028e0d:	mov    ecx,DWORD PTR [esp+0xb0]
10028e14:	mov    DWORD PTR fs:0x0,ecx
10028e1b:	pop    ecx
10028e1c:	pop    edi
10028e1d:	pop    esi
10028e1e:	pop    ebx
10028e1f:	mov    ecx,DWORD PTR [esp+0x98]
10028e26:	xor    ecx,esp
10028e28:	call   0x10042e97
10028e2d:	mov    esp,ebp
10028e2f:	pop    ebp
10028e30:	ret    0x4
10028e33:	push   ebp
10028e34:	mov    ebp,esp
10028e36:	and    esp,0xfffffff8
10028e39:	push   0xffffffff
10028e3b:	push   0x1006341a
10028e40:	mov    eax,fs:0x0
10028e46:	push   eax
10028e47:	sub    esp,0x110
10028e4d:	mov    eax,ds:0x1007e030
10028e52:	xor    eax,esp
10028e54:	mov    DWORD PTR [esp+0x108],eax
10028e5b:	push   ebx
10028e5c:	push   esi
10028e5d:	push   edi
10028e5e:	mov    eax,ds:0x1007e030
10028e63:	xor    eax,esp
10028e65:	push   eax
10028e66:	lea    eax,[esp+0x120]
10028e6d:	mov    fs:0x0,eax
10028e73:	mov    esi,DWORD PTR [ebp+0x8]
10028e76:	push   DWORD PTR [esi]
10028e78:	lea    ecx,[esp+0x70]
10028e7c:	call   0x10008b47
10028e81:	lea    ecx,[esp+0xf8]
10028e88:	push   ecx
10028e89:	xor    ebx,ebx
10028e8b:	push   0x10080ee8
10028e90:	mov    ecx,eax
10028e92:	mov    DWORD PTR [esp+0x130],ebx
10028e99:	call   0x1001986b
10028e9e:	push   ebx
10028e9f:	push   0x1
10028ea1:	lea    ecx,[esp+0x74]
10028ea5:	mov    BYTE PTR [esp+0x130],0x2
10028ead:	call   0x100012f0
10028eb2:	lea    edi,[esp+0xf8]
10028eb9:	call   0x10019710
10028ebe:	test   al,al
10028ec0:	jne    0x1002913c
10028ec6:	mov    eax,DWORD PTR [esp+0xf8]
10028ecd:	dec    eax
10028ece:	je     0x10028fcd
10028ed4:	dec    eax
10028ed5:	jne    0x1002913c
10028edb:	push   0x59e5827e
10028ee0:	push   0x100722e0
10028ee5:	call   0x10004246
10028eea:	push   0x83e8b7a
10028eef:	push   eax
10028ef0:	call   0x10004246
10028ef5:	push   0x2d257e7e
10028efa:	push   eax
10028efb:	call   0x10004246
10028f00:	push   0x1695ecbc
10028f05:	push   eax
10028f06:	call   0x10004246
10028f0b:	push   0x444d9352
10028f10:	push   eax
10028f11:	call   0x10004246
10028f16:	push   eax
10028f17:	push   0x7
10028f19:	push   0x1006d678
10028f1e:	call   0x10004258
10028f23:	add    esp,0x34
10028f26:	push   eax
10028f27:	lea    ecx,[esp+0x1c]
10028f2b:	call   0x100011cd
10028f30:	lea    eax,[esp+0x18]
10028f34:	push   eax
10028f35:	mov    BYTE PTR [esp+0x12c],0x7
10028f3d:	mov    eax,DWORD PTR [esi+0x4]
10028f40:	add    eax,0x18
10028f43:	push   eax
10028f44:	call   0x1000826a
10028f49:	push   ebx
10028f4a:	push   0x1
10028f4c:	lea    ecx,[esp+0x20]
10028f50:	mov    BYTE PTR [esp+0x130],0x2
10028f58:	call   0x100012f0
10028f5d:	push   DWORD PTR [esi]
10028f5f:	lea    ecx,[esp+0xa8]
10028f66:	call   0x10008b47
10028f6b:	cmp    DWORD PTR [eax+0x18],0x10
10028f6f:	jb     0x10028f76
10028f71:	mov    eax,DWORD PTR [eax+0x4]
10028f74:	jmp    0x10028f79
10028f76:	add    eax,0x4
10028f79:	push   eax
10028f7a:	call   0x10002080
10028f7f:	pop    ecx
10028f80:	push   ebx
10028f81:	push   0x1
10028f83:	lea    ecx,[esp+0xac]
10028f8a:	call   0x100012f0
10028f8f:	mov    BYTE PTR [esp+0x17],0x1
10028f94:	push   ebx
10028f95:	push   0x1
10028f97:	lea    ecx,[esp+0x104]
10028f9e:	call   0x100012f0
10028fa3:	mov    al,BYTE PTR [esp+0x17]
10028fa7:	mov    ecx,DWORD PTR [esp+0x120]
10028fae:	mov    DWORD PTR fs:0x0,ecx
10028fb5:	pop    ecx
10028fb6:	pop    edi
10028fb7:	pop    esi
10028fb8:	pop    ebx
10028fb9:	mov    ecx,DWORD PTR [esp+0x108]
10028fc0:	xor    ecx,esp
10028fc2:	call   0x10042e97
10028fc7:	mov    esp,ebp
10028fc9:	pop    ebp
10028fca:	ret    0x4
10028fcd:	push   0x5a0241c4
10028fd2:	push   0x10072288
10028fd7:	call   0x10004246
10028fdc:	push   eax
10028fdd:	push   0x7
10028fdf:	mov    edi,0x1006d678
10028fe4:	push   edi
10028fe5:	call   0x10004258
10028fea:	add    esp,0x14
10028fed:	push   eax
10028fee:	lea    ecx,[esp+0x38]
10028ff2:	call   0x100011cd
10028ff7:	lea    eax,[esp+0x34]
10028ffb:	push   eax
10028ffc:	mov    BYTE PTR [esp+0x12c],0x3
10029004:	mov    eax,DWORD PTR [esi+0x4]
10029007:	add    eax,0x18
1002900a:	push   eax
1002900b:	call   0x1000826a
10029010:	push   ebx
10029011:	push   0x1
10029013:	lea    ecx,[esp+0x3c]
10029017:	mov    BYTE PTR [esp+0x130],0x2
1002901f:	call   0x100012f0
10029024:	push   0x38d3fc8
10029029:	push   0x100722b4
1002902e:	call   0x10004246
10029033:	push   0x334a3dbe
10029038:	push   eax
10029039:	call   0x10004246
1002903e:	push   0xc3c9faa
10029043:	push   eax
10029044:	call   0x10004246
10029049:	push   eax
1002904a:	push   0x7
1002904c:	push   edi
1002904d:	call   0x10004258
10029052:	add    esp,0x24
10029055:	push   eax
10029056:	lea    ecx,[esp+0x54]
1002905a:	call   0x100011cd
1002905f:	lea    eax,[esp+0xdc]
10029066:	push   eax
10029067:	lea    eax,[esp+0xfc]
1002906e:	mov    BYTE PTR [esp+0x12c],0x4
10029076:	call   0x10019730
1002907b:	mov    BYTE PTR [esp+0x128],0x5
10029083:	mov    edx,DWORD PTR [esi+0x4]
10029086:	push   ebx
10029087:	lea    ecx,[esp+0x54]
1002908b:	push   ecx
1002908c:	add    edx,0x18
1002908f:	mov    ecx,eax
10029091:	call   0x10007f61
10029096:	xor    edi,edi
10029098:	push   ebx
10029099:	inc    edi
1002909a:	push   edi
1002909b:	lea    ecx,[esp+0xe4]
100290a2:	call   0x100012f0
100290a7:	push   ebx
100290a8:	push   edi
100290a9:	lea    ecx,[esp+0x58]
100290ad:	mov    BYTE PTR [esp+0x130],0x2
100290b5:	call   0x100012f0
100290ba:	push   DWORD PTR [esi]
100290bc:	lea    ecx,[esp+0xc4]
100290c3:	call   0x10008b47
100290c8:	mov    esi,eax
100290ca:	lea    eax,[esp+0x88]
100290d1:	push   eax
100290d2:	lea    eax,[esp+0xfc]
100290d9:	mov    BYTE PTR [esp+0x12c],0x6
100290e1:	call   0x10019730
100290e6:	cmp    DWORD PTR [esi+0x18],0x10
100290ea:	jb     0x100290f1
100290ec:	mov    esi,DWORD PTR [esi+0x4]
100290ef:	jmp    0x100290f4
100290f1:	add    esi,0x4
100290f4:	cmp    DWORD PTR [eax+0x18],0x10
100290f8:	jb     0x100290ff
100290fa:	mov    eax,DWORD PTR [eax+0x4]
100290fd:	jmp    0x10029102
100290ff:	add    eax,0x4
10029102:	push   esi
10029103:	push   eax
10029104:	call   0x10002080
10029109:	pop    ecx
1002910a:	pop    ecx
1002910b:	push   ebx
1002910c:	push   edi
1002910d:	lea    ecx,[esp+0x90]
10029114:	call   0x100012f0
10029119:	push   ebx
1002911a:	push   edi
1002911b:	lea    ecx,[esp+0xc8]
10029122:	call   0x100012f0
10029127:	push   ebx
10029128:	push   edi
10029129:	lea    ecx,[esp+0x104]
10029130:	call   0x100012f0
10029135:	mov    al,0x1
10029137:	jmp    0x10028fa7
1002913c:	mov    BYTE PTR [esp+0x17],bl
10029140:	jmp    0x10028f94
10029145:	push   ebp
10029146:	mov    ebp,esp
10029148:	and    esp,0xfffffff8
1002914b:	push   0xffffffff
1002914d:	push   0x10064201
10029152:	mov    eax,fs:0x0
10029158:	push   eax
10029159:	sub    esp,0x98
1002915f:	mov    eax,ds:0x1007e030
10029164:	xor    eax,esp
10029166:	mov    DWORD PTR [esp+0x90],eax
1002916d:	push   ebx
1002916e:	push   esi
1002916f:	push   edi
10029170:	mov    eax,ds:0x1007e030
10029175:	xor    eax,esp
10029177:	push   eax
10029178:	lea    eax,[esp+0xa8]
1002917f:	mov    fs:0x0,eax
10029185:	mov    edi,DWORD PTR [ebp+0x8]
10029188:	push   DWORD PTR [edi]
1002918a:	lea    ecx,[esp+0x50]
1002918e:	mov    DWORD PTR [esp+0x14],edi
10029192:	call   0x10008b47
10029197:	and    DWORD PTR [esp+0xb0],0x0
1002919f:	push   eax
100291a0:	lea    esi,[esp+0x88]
100291a7:	call   0x10030410
100291ac:	pop    ecx
100291ad:	push   0x0
100291af:	push   0x1
100291b1:	lea    ecx,[esp+0x54]
100291b5:	mov    BYTE PTR [esp+0xb8],0x2
100291bd:	call   0x100012f0
100291c2:	mov    edx,esi
100291c4:	lea    ecx,[esp+0x68]
100291c8:	call   0x10033ce0
100291cd:	push   0x1006cd08
100291d2:	lea    esi,[esp+0x6c]
100291d6:	mov    BYTE PTR [esp+0xb4],0x3
100291de:	call   0x1000658e
100291e3:	test   al,al
100291e5:	pop    ecx
100291e6:	jne    0x100293da
100291ec:	cmp    DWORD PTR [esp+0x80],0x10
100291f4:	mov    eax,DWORD PTR [esp+0x6c]
100291f8:	jae    0x100291fe
100291fa:	lea    eax,[esp+0x6c]
100291fe:	push   eax
100291ff:	call   0x10002080
10029204:	mov    DWORD PTR [esp],0x5baec5f0
1002920b:	push   0x10072314
10029210:	call   0x10004246
10029215:	push   eax
10029216:	push   0xc
10029218:	push   0x10071afc
1002921d:	call   0x10004258
10029222:	add    esp,0x14
10029225:	push   eax
10029226:	lea    ecx,[esp+0x18]
1002922a:	call   0x100011cd
1002922f:	push   0x10072338
10029234:	push   0x3
10029236:	push   0x10071b38
1002923b:	mov    BYTE PTR [esp+0xbc],0x4
10029243:	call   0x10004258
10029248:	add    esp,0xc
1002924b:	push   eax
1002924c:	lea    ecx,[esp+0x34]
10029250:	call   0x100011cd
10029255:	push   0x18c28304
1002925a:	push   0x10072364
1002925f:	mov    BYTE PTR [esp+0xb8],0x5
10029267:	call   0x10004246
1002926c:	push   eax
1002926d:	push   0x8
1002926f:	push   0x10071b7c
10029274:	call   0x10004258
10029279:	add    esp,0x14
1002927c:	push   eax
1002927d:	lea    ecx,[esp+0x50]
10029281:	call   0x100011cd
10029286:	lea    eax,[esp+0x14]
1002928a:	push   eax
1002928b:	lea    eax,[esp+0x34]
1002928f:	push   eax
10029290:	lea    ecx,[esp+0x54]
10029294:	mov    BYTE PTR [esp+0xb8],0x6
1002929c:	add    edi,0x8
1002929f:	call   0x10009613
100292a4:	pop    ecx
100292a5:	pop    ecx
100292a6:	mov    ebx,eax
100292a8:	call   0x1002664a
100292ad:	xor    esi,esi
100292af:	xor    ebx,ebx
100292b1:	push   esi
100292b2:	inc    ebx
100292b3:	push   ebx
100292b4:	lea    ecx,[esp+0x54]
100292b8:	call   0x100012f0
100292bd:	push   esi
100292be:	push   ebx
100292bf:	lea    ecx,[esp+0x38]
100292c3:	call   0x100012f0
100292c8:	push   esi
100292c9:	push   ebx
100292ca:	lea    ecx,[esp+0x1c]
100292ce:	mov    BYTE PTR [esp+0xb8],0x3
100292d6:	call   0x100012f0
100292db:	push   0x10072390
100292e0:	push   0x8
100292e2:	push   0x10071be8
100292e7:	call   0x10004258
100292ec:	add    esp,0xc
100292ef:	push   eax
100292f0:	lea    ecx,[esp+0x18]
100292f4:	call   0x100011cd
100292f9:	lea    ecx,[esp+0x14]
100292fd:	mov    BYTE PTR [esp+0xb0],0x7
10029305:	mov    eax,DWORD PTR [edi]
10029307:	push   esi
10029308:	push   ecx
10029309:	lea    edx,[eax+0x20]
1002930c:	lea    ecx,[esp+0x70]
10029310:	call   0x10007f61
10029315:	push   esi
10029316:	push   ebx
10029317:	lea    ecx,[esp+0x1c]
1002931b:	mov    BYTE PTR [esp+0xb8],0x3
10029323:	call   0x100012f0
10029328:	push   0x1006cd0c
1002932d:	lea    ecx,[esp+0x34]
10029331:	call   0x100011cd
10029336:	push   0x100723c8
1002933b:	push   0xe
1002933d:	push   0x1006d9c0
10029342:	mov    BYTE PTR [esp+0xbc],0x8
1002934a:	call   0x10004258
1002934f:	add    esp,0xc
10029352:	push   eax
10029353:	lea    ecx,[esp+0x18]
10029357:	call   0x100011cd
1002935c:	mov    BYTE PTR [esp+0xb0],0x9
10029364:	mov    edx,DWORD PTR [edi]
10029366:	push   esi
10029367:	lea    eax,[esp+0x18]
1002936b:	push   eax
1002936c:	add    edx,0x20
1002936f:	lea    ecx,[esp+0x38]
10029373:	call   0x10007f61
10029378:	push   esi
10029379:	push   ebx
1002937a:	lea    ecx,[esp+0x1c]
1002937e:	call   0x100012f0
10029383:	push   esi
10029384:	push   ebx
10029385:	lea    ecx,[esp+0x38]
10029389:	call   0x100012f0
1002938e:	mov    eax,DWORD PTR [esp+0x10]
10029392:	mov    BYTE PTR [eax+0x14],bl
10029395:	push   0x0
10029397:	push   0x1
10029399:	lea    ecx,[esp+0x70]
1002939d:	call   0x100012f0
100293a2:	push   0x0
100293a4:	push   0x1
100293a6:	lea    ecx,[esp+0x8c]
100293ad:	call   0x100012f0
100293b2:	mov    al,bl
100293b4:	mov    ecx,DWORD PTR [esp+0xa8]
100293bb:	mov    DWORD PTR fs:0x0,ecx
100293c2:	pop    ecx
100293c3:	pop    edi
100293c4:	pop    esi
100293c5:	pop    ebx
100293c6:	mov    ecx,DWORD PTR [esp+0x90]
100293cd:	xor    ecx,esp
100293cf:	call   0x10042e97
100293d4:	mov    esp,ebp
100293d6:	pop    ebp
100293d7:	ret    0x4
100293da:	xor    bl,bl
100293dc:	jmp    0x10029395
100293de:	push   esi
100293df:	push   edi
100293e0:	mov    edi,DWORD PTR [esp+0xc]
100293e4:	mov    esi,DWORD PTR [edi+0x10]
100293e7:	call   0x10026490
100293ec:	test   al,al
100293ee:	je     0x100293f8
100293f0:	mov    BYTE PTR [edi+0x14],0x1
100293f4:	mov    al,0x1
100293f6:	jmp    0x100293fa
100293f8:	xor    al,al
100293fa:	pop    edi
100293fb:	pop    esi
100293fc:	ret    0x4
100293ff:	push   ebp
10029400:	mov    ebp,esp
10029402:	and    esp,0xfffffff8
10029405:	push   0xffffffff
10029407:	push   0x1006417c
1002940c:	mov    eax,fs:0x0
10029412:	push   eax
10029413:	sub    esp,0x280
10029419:	mov    eax,ds:0x1007e030
1002941e:	xor    eax,esp
10029420:	mov    DWORD PTR [esp+0x278],eax
10029427:	push   ebx
10029428:	push   esi
10029429:	push   edi
1002942a:	mov    eax,ds:0x1007e030
1002942f:	xor    eax,esp
10029431:	push   eax
10029432:	lea    eax,[esp+0x290]
10029439:	mov    fs:0x0,eax
1002943f:	mov    ebx,DWORD PTR [ebp+0x8]
10029442:	push   0x1796da46
10029447:	push   0x1007244c
1002944c:	mov    DWORD PTR [esp+0x1c],ebx
10029450:	call   0x10004246
10029455:	push   eax
10029456:	push   0x7
10029458:	push   0x1006d678
1002945d:	call   0x10004258
10029462:	add    esp,0x14
10029465:	push   eax
10029466:	lea    ecx,[esp+0x80]
1002946d:	call   0x100011cd
10029472:	xor    edi,edi
10029474:	push   edi
10029475:	lea    eax,[esp+0x80]
1002947c:	push   eax
1002947d:	lea    eax,[esp+0x28]
10029481:	push   eax
10029482:	mov    DWORD PTR [esp+0x2a4],edi
10029489:	mov    eax,DWORD PTR [ebx]
1002948b:	add    eax,0x18
1002948e:	call   0x100084cc
10029493:	mov    esi,eax
10029495:	push   0x10072408
1002949a:	push   0x10
1002949c:	push   0x10072438
100294a1:	mov    BYTE PTR [esp+0x2a4],0x1
100294a9:	call   0x10004258
100294ae:	add    esp,0xc
100294b1:	push   eax
100294b2:	call   0x1000658e
100294b7:	neg    al
100294b9:	sbb    al,al
100294bb:	pop    ecx
100294bc:	xor    esi,esi
100294be:	push   edi
100294bf:	inc    al
100294c1:	inc    esi
100294c2:	push   esi
100294c3:	lea    ecx,[esp+0x28]
100294c7:	mov    BYTE PTR [esp+0x1b],al
100294cb:	call   0x100012f0
100294d0:	or     DWORD PTR [esp+0x298],0xffffffff
100294d8:	push   edi
100294d9:	push   esi
100294da:	lea    ecx,[esp+0x84]
100294e1:	call   0x100012f0
100294e6:	cmp    BYTE PTR [esp+0x13],0x0
100294eb:	je     0x100294f4
100294ed:	xor    al,al
100294ef:	jmp    0x10029cd8
100294f4:	mov    eax,DWORD PTR [ebx+0x10]
100294f7:	lea    ecx,[esp+0x3c]
100294fb:	push   ecx
100294fc:	push   0x4
100294fe:	lea    ecx,[esp+0x48]
10029502:	push   ecx
10029503:	push   esi
10029504:	push   0x6
10029506:	mov    DWORD PTR [esp+0x54],esi
1002950a:	mov    DWORD PTR [esp+0x50],edi
1002950e:	push   DWORD PTR [eax]
10029510:	call   DWORD PTR [eax+0xa4]
10029516:	mov    esi,DWORD PTR [ebx+0x10]
10029519:	call   0x10026490
1002951e:	test   al,al
10029520:	je     0x1002963d
10029526:	call   0x10002080
1002952b:	push   0x24f3ae6a
10029530:	push   0x10072474
10029535:	call   0x10004246
1002953a:	push   0x6d56374a
1002953f:	push   eax
10029540:	call   0x10004246
10029545:	push   0x519270b8
1002954a:	push   eax
1002954b:	call   0x10004246
10029550:	push   eax
10029551:	push   0x9
10029553:	push   0x10072210
10029558:	call   0x10004258
1002955d:	add    esp,0x24
10029560:	push   eax
10029561:	lea    ecx,[esp+0x24]
10029565:	call   0x100011cd
1002956a:	push   0x50c047c4
1002956f:	push   0x1007249c
10029574:	mov    DWORD PTR [esp+0x2a0],0x2
1002957f:	call   0x10004246
10029584:	push   eax
10029585:	push   0x3
10029587:	push   0x10072240
1002958c:	call   0x10004258
10029591:	add    esp,0x14
10029594:	push   eax
10029595:	lea    ecx,[esp+0x48]
10029599:	call   0x100011cd
1002959e:	push   0x63bc9850
100295a3:	push   0x100724cc
100295a8:	mov    BYTE PTR [esp+0x2a0],0x3
100295b0:	call   0x10004246
100295b5:	push   0x5e045dea
100295ba:	push   eax
100295bb:	call   0x10004246
100295c0:	push   eax
100295c1:	push   0x8
100295c3:	push   0x10071b7c
100295c8:	call   0x10004258
100295cd:	add    esp,0x1c
100295d0:	push   eax
100295d1:	lea    ecx,[esp+0x80]
100295d8:	call   0x100011cd
100295dd:	lea    eax,[esp+0x20]
100295e1:	push   eax
100295e2:	lea    eax,[esp+0x48]
100295e6:	push   eax
100295e7:	lea    ecx,[esp+0x84]
100295ee:	mov    BYTE PTR [esp+0x2a0],0x4
100295f6:	call   0x10009613
100295fb:	pop    ecx
100295fc:	lea    edi,[ebx+0x8]
100295ff:	pop    ecx
10029600:	mov    ebx,eax
10029602:	call   0x1002664a
10029607:	xor    esi,esi
10029609:	push   esi
1002960a:	push   0x1
1002960c:	lea    ecx,[esp+0x84]
10029613:	call   0x100012f0
10029618:	push   esi
10029619:	push   0x1
1002961b:	lea    ecx,[esp+0x4c]
1002961f:	call   0x100012f0
10029624:	push   esi
10029625:	push   0x1
10029627:	lea    ecx,[esp+0x28]
1002962b:	call   0x100012f0
10029630:	mov    eax,DWORD PTR [esp+0x14]
10029634:	mov    BYTE PTR [eax+0x14],0x1
10029638:	jmp    0x10029cd6
1002963d:	push   0x10072508
10029642:	push   0x7
10029644:	push   0x1006d678
10029649:	call   0x10004258
1002964e:	add    esp,0xc
10029651:	push   eax
10029652:	lea    ecx,[esp+0x24]
10029656:	call   0x100011cd
1002965b:	lea    eax,[esp+0x20]
1002965f:	push   eax
10029660:	mov    DWORD PTR [esp+0x29c],0x5
1002966b:	mov    eax,DWORD PTR [ebx+0x4]
1002966e:	add    eax,0x18
10029671:	push   eax
10029672:	call   0x1000826a
10029677:	or     DWORD PTR [esp+0x298],0xffffffff
1002967f:	push   edi
10029680:	push   0x1
10029682:	lea    ecx,[esp+0x28]
10029686:	call   0x100012f0
1002968b:	lea    ecx,[esp+0x15c]
10029692:	call   0x10012aed
10029697:	push   0x1006cd08
1002969c:	lea    esi,[esp+0x160]
100296a3:	mov    DWORD PTR [esp+0x29c],0x6
100296ae:	call   0x1000658e
100296b3:	test   al,al
100296b5:	pop    ecx
100296b6:	jne    0x1002973f
100296bc:	push   0x6282cff8
100296c1:	push   0x10072548
100296c6:	call   0x10004246
100296cb:	push   0x1269ce3e
100296d0:	push   eax
100296d1:	call   0x10004246
100296d6:	push   0x7a1a13f2
100296db:	push   eax
100296dc:	call   0x10004246
100296e1:	push   0xb0b0668
100296e6:	push   eax
100296e7:	call   0x10004246
100296ec:	push   0x760c4aba
100296f1:	push   eax
100296f2:	call   0x10004246
100296f7:	push   eax
100296f8:	push   0xa
100296fa:	push   0x1006d6c0
100296ff:	call   0x10004258
10029704:	add    esp,0x34
10029707:	push   eax
10029708:	lea    ecx,[esp+0x24]
1002970c:	call   0x100011cd
10029711:	mov    BYTE PTR [esp+0x298],0x7
10029719:	mov    edx,DWORD PTR [ebx+0x4]
1002971c:	lea    eax,[esp+0x20]
10029720:	push   eax
10029721:	add    edx,0x18
10029724:	mov    ecx,esi
10029726:	call   0x100083b5
1002972b:	push   edi
1002972c:	push   0x1
1002972e:	lea    ecx,[esp+0x28]
10029732:	mov    BYTE PTR [esp+0x2a0],0x6
1002973a:	call   0x100012f0
1002973f:	push   0x1006cd08
10029744:	lea    esi,[esp+0x1b4]
1002974b:	call   0x1000658e
10029750:	test   al,al
10029752:	pop    ecx
10029753:	jne    0x100297a1
10029755:	push   0x10072580
1002975a:	push   0xf
1002975c:	push   0x1006d738
10029761:	call   0x10004258
10029766:	add    esp,0xc
10029769:	push   eax
1002976a:	lea    ecx,[esp+0x24]
1002976e:	call   0x100011cd
10029773:	mov    BYTE PTR [esp+0x298],0x8
1002977b:	mov    edx,DWORD PTR [ebx+0x4]
1002977e:	lea    eax,[esp+0x20]
10029782:	push   eax
10029783:	add    edx,0x18
10029786:	mov    ecx,esi
10029788:	call   0x100083b5
1002978d:	push   edi
1002978e:	push   0x1
10029790:	lea    ecx,[esp+0x28]
10029794:	mov    BYTE PTR [esp+0x2a0],0x6
1002979c:	call   0x100012f0
100297a1:	push   0x1006cd08
100297a6:	lea    esi,[esp+0x17c]
100297ad:	mov    BYTE PTR [esp+0x17],0x0
100297b2:	call   0x1000658e
100297b7:	test   al,al
100297b9:	pop    ecx
100297ba:	jne    0x10029896
100297c0:	push   0x10
100297c2:	pop    esi
100297c3:	lea    eax,[esp+0x14]
100297c7:	push   eax
100297c8:	lea    eax,[esp+0x128]
100297cf:	push   eax
100297d0:	mov    eax,DWORD PTR [ebx+0x10]
100297d3:	mov    DWORD PTR [esp+0x1c],esi
100297d7:	push   DWORD PTR [eax]
100297d9:	call   DWORD PTR ds:0x100663a0
100297df:	cmp    eax,0xffffffff
100297e2:	je     0x10029896
100297e8:	cmp    WORD PTR [esp+0x124],0x2
100297f1:	jne    0x10029896
100297f7:	push   0x481eb9c4
100297fc:	push   0x100725b8
10029801:	call   0x10004246
10029806:	push   0x68a39794
1002980b:	push   eax
1002980c:	call   0x10004246
10029811:	push   eax
10029812:	push   0x4
10029814:	push   0x1006d40c
10029819:	call   0x10004258
1002981e:	add    esp,0x1c
10029821:	push   eax
10029822:	lea    ecx,[esp+0x24]
10029826:	call   0x100011cd
1002982b:	push   edi
1002982c:	lea    eax,[esp+0x24]
10029830:	push   eax
10029831:	lea    eax,[esp+0x68]
10029835:	push   eax
10029836:	mov    BYTE PTR [esp+0x2a4],0x9
1002983e:	mov    eax,DWORD PTR [ebx]
10029840:	add    eax,0x18
10029843:	call   0x100084cc
10029848:	cmp    DWORD PTR [eax+0x18],esi
1002984b:	jb     0x10029852
1002984d:	mov    eax,DWORD PTR [eax+0x4]
10029850:	jmp    0x10029855
10029852:	add    eax,0x4
10029855:	push   eax
10029856:	call   DWORD PTR ds:0x100663e0
1002985c:	cmp    DWORD PTR [esp+0x128],eax
10029863:	push   edi
10029864:	push   0x1
10029866:	lea    ecx,[esp+0x68]
1002986a:	setne  BYTE PTR [esp+0x23]
1002986f:	call   0x100012f0
10029874:	push   edi
10029875:	push   0x1
10029877:	lea    ecx,[esp+0x28]
1002987b:	mov    BYTE PTR [esp+0x2a0],0x6
10029883:	call   0x100012f0
10029888:	cmp    BYTE PTR [esp+0x1b],0x0
1002988d:	je     0x10029896
1002988f:	mov    BYTE PTR [esp+0x13],0x1
10029894:	jmp    0x100298f8
10029896:	push   0x1006cd08
1002989b:	lea    esi,[esp+0x17c]
100298a2:	call   0x1000658e
100298a7:	test   al,al
100298a9:	pop    ecx
100298aa:	jne    0x100298f8
100298ac:	push   0x100725f4
100298b1:	push   0x4
100298b3:	push   0x1006d40c
100298b8:	call   0x10004258
100298bd:	add    esp,0xc
100298c0:	push   eax
100298c1:	lea    ecx,[esp+0x24]
100298c5:	call   0x100011cd
100298ca:	mov    BYTE PTR [esp+0x298],0xa
100298d2:	mov    edx,DWORD PTR [ebx+0x4]
100298d5:	lea    eax,[esp+0x20]
100298d9:	push   eax
100298da:	add    edx,0x18
100298dd:	mov    ecx,esi
100298df:	call   0x100083b5
100298e4:	push   edi
100298e5:	push   0x1
100298e7:	lea    ecx,[esp+0x28]
100298eb:	mov    BYTE PTR [esp+0x2a0],0x6
100298f3:	call   0x100012f0
100298f8:	push   0x1007261c
100298fd:	push   0x6
100298ff:	mov    esi,0x1006d894
10029904:	push   esi
10029905:	call   0x10004258
1002990a:	add    esp,0xc
1002990d:	push   eax
1002990e:	lea    ecx,[esp+0x24]
10029912:	call   0x100011cd
10029917:	push   edi
10029918:	lea    eax,[esp+0x24]
1002991c:	push   eax
1002991d:	lea    eax,[esp+0x12c]
10029924:	push   eax
10029925:	mov    BYTE PTR [esp+0x2a4],0xb
1002992d:	mov    eax,DWORD PTR [ebx]
1002992f:	add    eax,0x18
10029932:	call   0x100084cc
10029937:	push   edi
10029938:	push   0x1
1002993a:	lea    ecx,[esp+0x28]
1002993e:	mov    BYTE PTR [esp+0x2a0],0xd
10029946:	call   0x100012f0
1002994b:	push   0x7929805c
10029950:	push   0x10072648
10029955:	call   0x10004246
1002995a:	push   0x31577d7c
1002995f:	push   eax
10029960:	call   0x10004246
10029965:	push   0x16308058
1002996a:	push   eax
1002996b:	call   0x10004246
10029970:	push   0x37905bce
10029975:	push   eax
10029976:	call   0x10004246
1002997b:	push   eax
1002997c:	push   0x6
1002997e:	push   esi
1002997f:	call   0x10004258
10029984:	add    esp,0x2c
10029987:	push   eax
10029988:	lea    ecx,[esp+0x48]
1002998c:	call   0x100011cd
10029991:	lea    eax,[esp+0x44]
10029995:	push   eax
10029996:	mov    BYTE PTR [esp+0x29c],0xe
1002999e:	mov    eax,DWORD PTR [ebx+0x4]
100299a1:	add    eax,0x18
100299a4:	push   eax
100299a5:	call   0x1000826a
100299aa:	push   edi
100299ab:	push   0x1
100299ad:	lea    ecx,[esp+0x4c]
100299b1:	mov    BYTE PTR [esp+0x2a0],0xd
100299b9:	call   0x100012f0
100299be:	cmp    DWORD PTR [esp+0x138],edi
100299c5:	mov    DWORD PTR [esp+0x1c],edi
100299c9:	jbe    0x10029aad
100299cf:	push   DWORD PTR [esp+0x1c]
100299d3:	lea    eax,[esp+0x128]
100299da:	push   0x1006d8d4
100299df:	push   eax
100299e0:	call   0x1000c8c0
100299e5:	cmp    eax,0xffffffff
100299e8:	mov    DWORD PTR [esp+0x14],eax
100299ec:	jne    0x100299f9
100299ee:	mov    eax,DWORD PTR [esp+0x138]
100299f5:	mov    DWORD PTR [esp+0x14],eax
100299f9:	cmp    eax,DWORD PTR [esp+0x1c]
100299fd:	jbe    0x10029a99
10029a03:	push   0x5ee46f4
10029a08:	push   0x10072674
10029a0d:	call   0x10004246
10029a12:	push   0x7499c09e
10029a17:	push   eax
10029a18:	call   0x10004246
10029a1d:	push   eax
10029a1e:	push   0x6
10029a20:	push   esi
10029a21:	call   0x10004258
10029a26:	add    esp,0x1c
10029a29:	push   eax
10029a2a:	lea    ecx,[esp+0x48]
10029a2e:	call   0x100011cd
10029a33:	mov    BYTE PTR [esp+0x298],0xf
10029a3b:	mov    eax,DWORD PTR [esp+0x14]
10029a3f:	sub    eax,DWORD PTR [esp+0x1c]
10029a43:	push   eax
10029a44:	push   DWORD PTR [esp+0x20]
10029a48:	lea    eax,[esp+0x12c]
10029a4f:	push   eax
10029a50:	lea    eax,[esp+0x6c]
10029a54:	call   0x1000c8df
10029a59:	mov    BYTE PTR [esp+0x298],0x10
10029a61:	mov    edx,DWORD PTR [ebx+0x4]
10029a64:	push   0x1
10029a66:	lea    ecx,[esp+0x48]
10029a6a:	push   ecx
10029a6b:	add    edx,0x18
10029a6e:	mov    ecx,eax
10029a70:	call   0x10007f61
10029a75:	push   edi
10029a76:	push   0x1
10029a78:	lea    ecx,[esp+0x68]
10029a7c:	call   0x100012f0
10029a81:	push   edi
10029a82:	push   0x1
10029a84:	lea    ecx,[esp+0x4c]
10029a88:	mov    BYTE PTR [esp+0x2a0],0xd
10029a90:	call   0x100012f0
10029a95:	mov    eax,DWORD PTR [esp+0x14]
10029a99:	cmp    eax,DWORD PTR [esp+0x138]
10029aa0:	lea    ecx,[eax+0x1]
10029aa3:	mov    DWORD PTR [esp+0x1c],ecx
10029aa7:	jb     0x100299cf
10029aad:	push   0x1006cd08
10029ab2:	lea    esi,[esp+0x198]
10029ab9:	call   0x1000658e
10029abe:	test   al,al
10029ac0:	pop    ecx
10029ac1:	jne    0x10029cbb
10029ac7:	lea    edi,[esp+0x1ec]
10029ace:	call   0x1000bc38
10029ad3:	mov    eax,esi
10029ad5:	push   eax
10029ad6:	lea    ecx,[esp+0x144]
10029add:	mov    BYTE PTR [esp+0x29c],0x11
10029ae5:	call   0x100011a7
10029aea:	cmp    BYTE PTR [esp+0x13],0x0
10029aef:	mov    BYTE PTR [esp+0x298],0x12
10029af7:	je     0x10029c89
10029afd:	mov    eax,edi
10029aff:	push   eax
10029b00:	lea    ecx,[esp+0x144]
10029b07:	call   0x10032c20
10029b0c:	test   al,al
10029b0e:	pop    ecx
10029b0f:	je     0x10029c89
10029b15:	push   0x7a12abb2
10029b1a:	push   0x1007269c
10029b1f:	call   0x10004246
10029b24:	push   0x5df4eab6
10029b29:	push   eax
10029b2a:	call   0x10004246
10029b2f:	push   0x4692d754
10029b34:	push   eax
10029b35:	call   0x10004246
10029b3a:	push   0x70728852
10029b3f:	push   eax
10029b40:	call   0x10004246
10029b45:	push   eax
10029b46:	push   0x4
10029b48:	push   0x1006d40c
10029b4d:	call   0x10004258
10029b52:	add    esp,0x2c
10029b55:	push   eax
10029b56:	lea    ecx,[esp+0x64]
10029b5a:	call   0x100011cd
10029b5f:	xor    edi,edi
10029b61:	push   edi
10029b62:	lea    eax,[esp+0x64]
10029b66:	push   eax
10029b67:	lea    eax,[esp+0x110]
10029b6e:	push   eax
10029b6f:	mov    BYTE PTR [esp+0x2a4],0x13
10029b77:	mov    eax,DWORD PTR [ebx]
10029b79:	add    eax,0x18
10029b7c:	call   0x100084cc
10029b81:	mov    esi,eax
10029b83:	push   0x4be33a96
10029b88:	push   0x100726d4
10029b8d:	mov    BYTE PTR [esp+0x2a0],0x14
10029b95:	call   0x10004246
10029b9a:	push   eax
10029b9b:	push   0x7
10029b9d:	push   0x1006d3c4
10029ba2:	call   0x10004258
10029ba7:	add    esp,0x14
10029baa:	push   eax
10029bab:	lea    ecx,[esp+0xd4]
10029bb2:	call   0x100011cd
10029bb7:	push   esi
10029bb8:	push   eax
10029bb9:	lea    eax,[esp+0xbc]
10029bc0:	push   eax
10029bc1:	mov    BYTE PTR [esp+0x2a4],0x15
10029bc9:	call   0x100064d6
10029bce:	add    esp,0xc
10029bd1:	lea    ecx,[esp+0x248]
10029bd8:	push   ecx
10029bd9:	push   eax
10029bda:	lea    eax,[esp+0xa0]
10029be1:	push   eax
10029be2:	mov    BYTE PTR [esp+0x2a4],0x16
10029bea:	call   0x100064d6
10029bef:	add    esp,0xc
10029bf2:	lea    ecx,[esp+0x264]
10029bf9:	push   ecx
10029bfa:	push   eax
10029bfb:	lea    eax,[esp+0xf4]
10029c02:	push   eax
10029c03:	mov    BYTE PTR [esp+0x2a4],0x17
10029c0b:	call   0x100064d6
10029c10:	add    esp,0xc
10029c13:	push   0xffffffff
10029c15:	push   edi
10029c16:	push   eax
10029c17:	lea    ecx,[esp+0x14c]
10029c1e:	mov    BYTE PTR [esp+0x2a4],0x18
10029c26:	call   0x10001241
10029c2b:	xor    esi,esi
10029c2d:	push   edi
10029c2e:	inc    esi
10029c2f:	push   esi
10029c30:	lea    ecx,[esp+0xf4]
10029c37:	call   0x100012f0
10029c3c:	push   edi
10029c3d:	push   esi
10029c3e:	lea    ecx,[esp+0xa0]
10029c45:	call   0x100012f0
10029c4a:	push   edi
10029c4b:	push   esi
10029c4c:	lea    ecx,[esp+0xbc]
10029c53:	call   0x100012f0
10029c58:	push   edi
10029c59:	push   esi
10029c5a:	lea    ecx,[esp+0xd8]
10029c61:	call   0x100012f0
10029c66:	push   edi
10029c67:	push   esi
10029c68:	lea    ecx,[esp+0x110]
10029c6f:	call   0x100012f0
10029c74:	push   edi
10029c75:	push   esi
10029c76:	lea    ecx,[esp+0x68]
10029c7a:	mov    BYTE PTR [esp+0x2a0],0x12
10029c82:	call   0x100012f0
10029c87:	jmp    0x10029c8b
10029c89:	xor    edi,edi
10029c8b:	lea    eax,[esp+0x140]
10029c92:	push   eax
10029c93:	mov    eax,DWORD PTR [ebx+0x4]
10029c96:	mov    esi,DWORD PTR [eax+0x4]
10029c99:	call   0x10007982
10029c9e:	push   edi
10029c9f:	push   0x1
10029ca1:	lea    ecx,[esp+0x148]
10029ca8:	call   0x100012f0
10029cad:	lea    esi,[esp+0x1ec]
10029cb4:	call   0x1000bc65
10029cb9:	xor    edi,edi
10029cbb:	push   edi
10029cbc:	push   0x1
10029cbe:	lea    ecx,[esp+0x12c]
10029cc5:	call   0x100012f0
10029cca:	lea    esi,[esp+0x15c]
10029cd1:	call   0x1000bbfd
10029cd6:	mov    al,0x1
10029cd8:	mov    ecx,DWORD PTR [esp+0x290]
10029cdf:	mov    DWORD PTR fs:0x0,ecx
10029ce6:	pop    ecx
10029ce7:	pop    edi
10029ce8:	pop    esi
10029ce9:	pop    ebx
10029cea:	mov    ecx,DWORD PTR [esp+0x278]
10029cf1:	xor    ecx,esp
10029cf3:	call   0x10042e97
10029cf8:	mov    esp,ebp
10029cfa:	pop    ebp
10029cfb:	ret    0x4
10029cfe:	push   ebp
10029cff:	mov    ebp,esp
10029d01:	sub    esp,0x1c
10029d04:	push   esi
10029d05:	mov    esi,DWORD PTR [ebp+0x8]
10029d08:	push   DWORD PTR [esi]
10029d0a:	call   0x10026552
10029d0f:	test   al,al
10029d11:	pop    ecx
10029d12:	je     0x10029d4d
10029d14:	push   DWORD PTR [esi]
10029d16:	lea    ecx,[ebp-0x1c]
10029d19:	call   0x10008b47
10029d1e:	cmp    DWORD PTR [eax+0x18],0x10
10029d22:	jb     0x10029d29
10029d24:	mov    eax,DWORD PTR [eax+0x4]
10029d27:	jmp    0x10029d2c
10029d29:	add    eax,0x4
10029d2c:	push   eax
10029d2d:	mov    eax,DWORD PTR [esi+0x10]
10029d30:	push   DWORD PTR [eax]
10029d32:	call   0x10002080
10029d37:	pop    ecx
10029d38:	pop    ecx
10029d39:	push   0x0
10029d3b:	push   0x1
10029d3d:	lea    ecx,[ebp-0x1c]
10029d40:	call   0x100012f0
10029d45:	mov    BYTE PTR [esi+0x14],0x1
10029d49:	mov    al,0x1
10029d4b:	jmp    0x10029d4f
10029d4d:	xor    al,al
10029d4f:	pop    esi
10029d50:	leave  
10029d51:	ret    0x4
10029d54:	push   ebp
10029d55:	mov    ebp,esp
10029d57:	and    esp,0xfffffff8
10029d5a:	push   0xffffffff
10029d5c:	push   0x10062780
10029d61:	mov    eax,fs:0x0
10029d67:	push   eax
10029d68:	sub    esp,0x58
10029d6b:	push   ebx
10029d6c:	push   esi
10029d6d:	push   edi
10029d6e:	mov    eax,ds:0x1007e030
10029d73:	xor    eax,esp
10029d75:	push   eax
10029d76:	lea    eax,[esp+0x68]
10029d7a:	mov    fs:0x0,eax
10029d80:	mov    esi,DWORD PTR [ebp+0x8]
10029d83:	push   DWORD PTR [esi]
10029d85:	call   0x10026552
10029d8a:	test   al,al
10029d8c:	pop    ecx
10029d8d:	je     0x10029e5c
10029d93:	push   0x1007270c
10029d98:	push   0xd
10029d9a:	mov    edi,0x1007273c
10029d9f:	push   edi
10029da0:	call   0x10004258
10029da5:	add    esp,0xc
10029da8:	push   eax
10029da9:	lea    ecx,[esp+0x14]
10029dad:	call   0x100011cd
10029db2:	and    DWORD PTR [esp+0x70],0x0
10029db7:	lea    eax,[esp+0x10]
10029dbb:	push   eax
10029dbc:	mov    eax,DWORD PTR [esi+0x8]
10029dbf:	add    eax,0x20
10029dc2:	push   eax
10029dc3:	call   0x1000826a
10029dc8:	or     DWORD PTR [esp+0x70],0xffffffff
10029dcd:	xor    ebx,ebx
10029dcf:	push   0x0
10029dd1:	inc    ebx
10029dd2:	push   ebx
10029dd3:	lea    ecx,[esp+0x18]
10029dd7:	call   0x100012f0
10029ddc:	push   0x5f4605a8
10029de1:	push   0x1007274c
10029de6:	call   0x10004246
10029deb:	push   eax
10029dec:	push   0x8
10029dee:	push   0x10072780
10029df3:	call   0x10004258
10029df8:	add    esp,0x14
10029dfb:	push   eax
10029dfc:	lea    ecx,[esp+0x4c]
10029e00:	call   0x100011cd
10029e05:	push   0x1007278c
10029e0a:	push   0xd
10029e0c:	push   edi
10029e0d:	mov    DWORD PTR [esp+0x7c],ebx
10029e11:	call   0x10004258
10029e16:	add    esp,0xc
10029e19:	push   eax
10029e1a:	lea    ecx,[esp+0x30]
10029e1e:	call   0x100011cd
10029e23:	mov    BYTE PTR [esp+0x70],0x2
10029e28:	mov    edx,DWORD PTR [esi+0x8]
10029e2b:	xor    edi,edi
10029e2d:	push   edi
10029e2e:	lea    eax,[esp+0x30]
10029e32:	push   eax
10029e33:	add    edx,0x20
10029e36:	lea    ecx,[esp+0x50]
10029e3a:	call   0x10007f61
10029e3f:	push   edi
10029e40:	push   ebx
10029e41:	lea    ecx,[esp+0x34]
10029e45:	call   0x100012f0
10029e4a:	push   edi
10029e4b:	push   ebx
10029e4c:	lea    ecx,[esp+0x50]
10029e50:	call   0x100012f0
10029e55:	mov    BYTE PTR [esi+0x11],bl
10029e58:	mov    al,bl
10029e5a:	jmp    0x10029e5e
10029e5c:	xor    al,al
10029e5e:	mov    ecx,DWORD PTR [esp+0x68]
10029e62:	mov    DWORD PTR fs:0x0,ecx
10029e69:	pop    ecx
10029e6a:	pop    edi
10029e6b:	pop    esi
10029e6c:	pop    ebx
10029e6d:	mov    esp,ebp
10029e6f:	pop    ebp
10029e70:	ret    0x4
10029e73:	push   ebp
10029e74:	mov    ebp,esp
10029e76:	and    esp,0xfffffff8
10029e79:	push   0xffffffff
10029e7b:	push   0x10061a5b
10029e80:	mov    eax,fs:0x0
10029e86:	push   eax
10029e87:	sub    esp,0x1f0
10029e8d:	push   ebx
10029e8e:	push   esi
10029e8f:	push   edi
10029e90:	mov    eax,ds:0x1007e030
10029e95:	xor    eax,esp
10029e97:	push   eax
10029e98:	lea    eax,[esp+0x200]
10029e9f:	mov    fs:0x0,eax
10029ea5:	push   0x100727c8
10029eaa:	push   0xa
10029eac:	xor    ebx,ebx
10029eae:	push   0x1006d6c0
10029eb3:	mov    DWORD PTR [esp+0x1c],ebx
10029eb7:	call   0x10004258
10029ebc:	add    esp,0xc
10029ebf:	push   eax
10029ec0:	lea    ecx,[esp+0x78]
10029ec4:	call   0x100011cd
10029ec9:	mov    edi,DWORD PTR [ebp+0x8]
10029ecc:	push   ebx
10029ecd:	lea    eax,[esp+0x78]
10029ed1:	push   eax
10029ed2:	lea    eax,[esp+0xb4]
10029ed9:	mov    DWORD PTR [esp+0x210],ebx
10029ee0:	push   eax
10029ee1:	mov    eax,DWORD PTR [edi]
10029ee3:	xor    esi,esi
10029ee5:	inc    esi
10029ee6:	add    eax,0x18
10029ee9:	mov    DWORD PTR [esp+0x1c],esi
10029eed:	call   0x100084cc
10029ef2:	mov    DWORD PTR [esp+0x208],esi
10029ef9:	push   0x1006cd08
10029efe:	mov    esi,eax
10029f00:	mov    DWORD PTR [esp+0x14],0x3
10029f08:	call   0x1000658e
10029f0d:	test   al,al
10029f0f:	pop    ecx
10029f10:	jne    0x10029f99
10029f16:	push   0x78b80fc0
10029f1b:	push   0x100727fc
10029f20:	call   0x10004246
10029f25:	push   eax
10029f26:	push   0x4
10029f28:	push   0x1006d40c
10029f2d:	call   0x10004258
10029f32:	add    esp,0x14
10029f35:	push   eax
10029f36:	lea    ecx,[esp+0x94]
10029f3d:	call   0x100011cd
10029f42:	push   ebx
10029f43:	lea    eax,[esp+0x94]
10029f4a:	push   eax
10029f4b:	lea    eax,[esp+0xec]
10029f52:	mov    DWORD PTR [esp+0x210],0x2
10029f5d:	push   eax
10029f5e:	mov    eax,DWORD PTR [edi]
10029f60:	add    eax,0x18
10029f63:	mov    DWORD PTR [esp+0x1c],0x7
10029f6b:	call   0x100084cc
10029f70:	mov    DWORD PTR [esp+0x208],0x3
10029f7b:	push   0x1006cd08
10029f80:	mov    esi,eax
10029f82:	mov    DWORD PTR [esp+0x14],0xf
10029f8a:	call   0x1000658e
10029f8f:	test   al,al
10029f91:	pop    ecx
10029f92:	mov    BYTE PTR [esp+0x17],0x1
10029f97:	je     0x10029f9d
10029f99:	mov    BYTE PTR [esp+0x17],bl
10029f9d:	test   BYTE PTR [esp+0x10],0x8
10029fa2:	je     0x10029fb8
10029fa4:	and    DWORD PTR [esp+0x10],0xfffffff7
10029fa9:	push   ebx
10029faa:	push   0x1
10029fac:	lea    ecx,[esp+0xec]
10029fb3:	call   0x100012f0
10029fb8:	test   BYTE PTR [esp+0x10],0x4
10029fbd:	je     0x10029fd3
10029fbf:	and    DWORD PTR [esp+0x10],0xfffffffb
10029fc4:	push   ebx
10029fc5:	push   0x1
10029fc7:	lea    ecx,[esp+0x98]
10029fce:	call   0x100012f0
10029fd3:	test   BYTE PTR [esp+0x10],0x2
10029fd8:	je     0x10029fee
10029fda:	and    DWORD PTR [esp+0x10],0xfffffffd
10029fdf:	push   ebx
10029fe0:	push   0x1
10029fe2:	lea    ecx,[esp+0xb4]
10029fe9:	call   0x100012f0
10029fee:	or     DWORD PTR [esp+0x208],0xffffffff
10029ff6:	test   BYTE PTR [esp+0x10],0x1
10029ffb:	je     0x1002a009
10029ffd:	push   ebx
10029ffe:	push   0x1
1002a000:	lea    ecx,[esp+0x7c]
1002a004:	call   0x100012f0
1002a009:	cmp    BYTE PTR [esp+0x17],bl
1002a00d:	je     0x1002a21f
1002a013:	push   0x6efb7c84
1002a018:	push   0x10072838
1002a01d:	call   0x10004246
1002a022:	push   0x6aa237fa
1002a027:	push   eax
1002a028:	call   0x10004246
1002a02d:	push   eax
1002a02e:	push   0xf
1002a030:	push   0x1006d738
1002a035:	call   0x10004258
1002a03a:	add    esp,0x1c
1002a03d:	push   eax
1002a03e:	lea    ecx,[esp+0x24]
1002a042:	call   0x100011cd
1002a047:	push   0x4
1002a049:	pop    eax
1002a04a:	push   0x10072878
1002a04f:	push   eax
1002a050:	push   0x1006d40c
1002a055:	mov    DWORD PTR [esp+0x214],eax
1002a05c:	call   0x10004258
1002a061:	add    esp,0xc
1002a064:	push   eax
1002a065:	lea    ecx,[esp+0x5c]
1002a069:	call   0x100011cd
1002a06e:	push   0x178bab6
1002a073:	push   0x100728ac
1002a078:	mov    BYTE PTR [esp+0x210],0x5
1002a080:	call   0x10004246
1002a085:	push   0x70bfc158
1002a08a:	push   eax
1002a08b:	call   0x10004246
1002a090:	push   0x11039908
1002a095:	push   eax
1002a096:	call   0x10004246
1002a09b:	push   eax
1002a09c:	push   0xa
1002a09e:	push   0x1006d6c0
1002a0a3:	call   0x10004258
1002a0a8:	add    esp,0x24
1002a0ab:	push   eax
1002a0ac:	lea    ecx,[esp+0x40]
1002a0b0:	call   0x100011cd
1002a0b5:	mov    BYTE PTR [esp+0x208],0x6
1002a0bd:	mov    eax,DWORD PTR [edi]
1002a0bf:	mov    eax,DWORD PTR [eax+0x8]
1002a0c2:	lea    ecx,[esp+0x138]
1002a0c9:	push   ecx
1002a0ca:	call   0x10019730
1002a0cf:	mov    esi,eax
1002a0d1:	push   ebx
1002a0d2:	lea    eax,[esp+0x24]
1002a0d6:	push   eax
1002a0d7:	lea    eax,[esp+0x108]
1002a0de:	push   eax
1002a0df:	mov    BYTE PTR [esp+0x214],0x7
1002a0e7:	mov    eax,DWORD PTR [edi]
1002a0e9:	add    eax,0x18
1002a0ec:	call   0x100084cc
1002a0f1:	mov    DWORD PTR [esp+0x10],eax
1002a0f5:	mov    BYTE PTR [esp+0x208],0x8
1002a0fd:	mov    eax,DWORD PTR [edi]
1002a0ff:	mov    eax,DWORD PTR [eax+0x4]
1002a102:	lea    ecx,[esp+0xc8]
1002a109:	push   ecx
1002a10a:	call   0x10019730
1002a10f:	mov    DWORD PTR [esp+0x18],eax
1002a113:	push   ebx
1002a114:	lea    eax,[esp+0x5c]
1002a118:	push   eax
1002a119:	lea    eax,[esp+0x124]
1002a120:	push   eax
1002a121:	mov    BYTE PTR [esp+0x214],0x9
1002a129:	mov    eax,DWORD PTR [edi]
1002a12b:	add    eax,0x18
1002a12e:	call   0x100084cc
1002a133:	mov    DWORD PTR [esp+0x1c],eax
1002a137:	push   ebx
1002a138:	lea    eax,[esp+0x40]
1002a13c:	push   eax
1002a13d:	lea    eax,[esp+0x15c]
1002a144:	push   eax
1002a145:	mov    BYTE PTR [esp+0x214],0xa
1002a14d:	mov    eax,DWORD PTR [edi]
1002a14f:	add    eax,0x18
1002a152:	call   0x100084cc
1002a157:	push   esi
1002a158:	mov    BYTE PTR [esp+0x20c],0xb
1002a160:	push   DWORD PTR [esp+0x14]
1002a164:	push   DWORD PTR [esp+0x20]
1002a168:	push   DWORD PTR [esp+0x28]
1002a16c:	push   eax
1002a16d:	lea    eax,[esp+0x184]
1002a174:	push   eax
1002a175:	call   0x10012a60
1002a17a:	mov    esi,eax
1002a17c:	push   0xffffffff
1002a17e:	mov    BYTE PTR [esp+0x20c],0xc
1002a186:	push   DWORD PTR ds:0x10080dc4
1002a18c:	call   DWORD PTR ds:0x10066084
1002a192:	test   eax,eax
1002a194:	jne    0x1002a1a9
1002a196:	mov    eax,esi
1002a198:	call   0x10012bc1
1002a19d:	push   DWORD PTR ds:0x10080dc4
1002a1a3:	call   DWORD PTR ds:0x10066094
1002a1a9:	lea    esi,[esp+0x170]
1002a1b0:	call   0x1000bbfd
1002a1b5:	xor    esi,esi
1002a1b7:	push   ebx
1002a1b8:	inc    esi
1002a1b9:	push   esi
1002a1ba:	lea    ecx,[esp+0x15c]
1002a1c1:	call   0x100012f0
1002a1c6:	push   ebx
1002a1c7:	push   esi
1002a1c8:	lea    ecx,[esp+0x124]
1002a1cf:	call   0x100012f0
1002a1d4:	push   ebx
1002a1d5:	push   esi
1002a1d6:	lea    ecx,[esp+0xd0]
1002a1dd:	call   0x100012f0
1002a1e2:	push   ebx
1002a1e3:	push   esi
1002a1e4:	lea    ecx,[esp+0x108]
1002a1eb:	call   0x100012f0
1002a1f0:	push   ebx
1002a1f1:	push   esi
1002a1f2:	lea    ecx,[esp+0x140]
1002a1f9:	call   0x100012f0
1002a1fe:	push   ebx
1002a1ff:	push   esi
1002a200:	lea    ecx,[esp+0x44]
1002a204:	call   0x100012f0
1002a209:	push   ebx
1002a20a:	push   esi
1002a20b:	lea    ecx,[esp+0x60]
1002a20f:	call   0x100012f0
1002a214:	push   ebx
1002a215:	push   esi
1002a216:	lea    ecx,[esp+0x28]
1002a21a:	call   0x100012f0
1002a21f:	xor    al,al
1002a221:	mov    ecx,DWORD PTR [esp+0x200]
1002a228:	mov    DWORD PTR fs:0x0,ecx
1002a22f:	pop    ecx
1002a230:	pop    edi
1002a231:	pop    esi
1002a232:	pop    ebx
1002a233:	mov    esp,ebp
1002a235:	pop    ebp
1002a236:	ret    0x4
1002a239:	push   0x0
1002a23b:	push   0x10080da0
1002a240:	call   DWORD PTR ds:0x100660e4
1002a246:	test   eax,eax
1002a248:	jne    0x1002a25d
1002a24a:	mov    eax,DWORD PTR [esp+0x4]
1002a24e:	mov    BYTE PTR [eax+0x14],0x1
1002a252:	mov    eax,DWORD PTR [eax+0x4]
1002a255:	mov    BYTE PTR [eax+0x2c],0x1
1002a259:	mov    al,0x1
1002a25b:	jmp    0x1002a25f
1002a25d:	xor    al,al
1002a25f:	ret    0x4
1002a262:	push   0x20
1002a264:	mov    eax,0x100609fd
1002a269:	call   0x10059a35
1002a26e:	mov    edi,DWORD PTR [ebp+0x8]
1002a271:	mov    esi,edi
1002a273:	call   0x10004059
1002a278:	push   DWORD PTR [ebp+0xc]
1002a27b:	xor    ebx,ebx
1002a27d:	mov    DWORD PTR [ebp-0x4],ebx
1002a280:	lea    ecx,[ebp-0x28]
1002a283:	mov    DWORD PTR [edi+0x1c],ebx
1002a286:	mov    DWORD PTR [edi+0x20],ebx
1002a289:	mov    DWORD PTR [edi+0x24],ebx
1002a28c:	call   0x100011cd
1002a291:	mov    esi,DWORD PTR [ebp+0x10]
1002a294:	lea    eax,[ebp-0x28]
1002a297:	mov    ecx,edi
1002a299:	mov    BYTE PTR [ebp-0x4],0x1
1002a29d:	call   0x10039e50
1002a2a2:	push   ebx
1002a2a3:	push   0x1
1002a2a5:	lea    ecx,[ebp-0x28]
1002a2a8:	call   0x100012f0
1002a2ad:	mov    eax,edi
1002a2af:	call   0x10059b0d
1002a2b4:	ret    0xc
1002a2b7:	push   ebp
1002a2b8:	mov    ebp,esp
1002a2ba:	and    esp,0xfffffff8
1002a2bd:	push   0xffffffff
1002a2bf:	push   0x100633a8
1002a2c4:	mov    eax,fs:0x0
1002a2ca:	push   eax
1002a2cb:	sub    esp,0x108
1002a2d1:	mov    eax,ds:0x1007e030
1002a2d6:	xor    eax,esp
1002a2d8:	mov    DWORD PTR [esp+0x100],eax
1002a2df:	push   ebx
1002a2e0:	push   esi
1002a2e1:	push   edi
1002a2e2:	mov    eax,ds:0x1007e030
1002a2e7:	xor    eax,esp
1002a2e9:	push   eax
1002a2ea:	lea    eax,[esp+0x118]
1002a2f1:	mov    fs:0x0,eax
1002a2f7:	mov    edi,DWORD PTR [ebp+0x8]
1002a2fa:	mov    eax,DWORD PTR [edi]
1002a2fc:	xor    ebx,ebx
1002a2fe:	cmp    BYTE PTR [eax+0x2c],bl
1002a301:	mov    DWORD PTR [esp+0x18],edi
1002a305:	je     0x1002a32f
1002a307:	xor    al,al
1002a309:	mov    ecx,DWORD PTR [esp+0x118]
1002a310:	mov    DWORD PTR fs:0x0,ecx
1002a317:	pop    ecx
1002a318:	pop    edi
1002a319:	pop    esi
1002a31a:	pop    ebx
1002a31b:	mov    ecx,DWORD PTR [esp+0x100]
1002a322:	xor    ecx,esp
1002a324:	call   0x10042e97
1002a329:	mov    esp,ebp
1002a32b:	pop    ebp
1002a32c:	ret    0x4
1002a32f:	push   0x5131f160
1002a334:	push   0x100728d0
1002a339:	call   0x10004246
1002a33e:	push   eax
1002a33f:	push   0x8
1002a341:	push   0x10071be8
1002a346:	call   0x10004258
1002a34b:	add    esp,0x14
1002a34e:	push   eax
1002a34f:	lea    ecx,[esp+0xd8]
1002a356:	call   0x100011cd
1002a35b:	push   ebx
1002a35c:	lea    eax,[esp+0xd8]
1002a363:	push   eax
1002a364:	lea    eax,[esp+0xa4]
1002a36b:	push   eax
1002a36c:	mov    DWORD PTR [esp+0x12c],ebx
1002a373:	mov    eax,DWORD PTR [edi+0x4]
1002a376:	add    eax,0x20
1002a379:	call   0x100084cc
1002a37e:	push   ebx
1002a37f:	push   0x1
1002a381:	lea    ecx,[esp+0xdc]
1002a388:	mov    BYTE PTR [esp+0x128],0x2
1002a390:	call   0x100012f0
1002a395:	push   0x1006cd08
1002a39a:	lea    esi,[esp+0xa0]
1002a3a1:	call   0x1000658e
1002a3a6:	test   al,al
1002a3a8:	pop    ecx
1002a3a9:	jne    0x1002a916
1002a3af:	push   DWORD PTR [edi]
1002a3b1:	lea    ecx,[esp+0xbc]
1002a3b8:	call   0x10008b47
1002a3bd:	lea    eax,[esp+0xf0]
1002a3c4:	push   eax
1002a3c5:	push   0x10080ee8
1002a3ca:	lea    ecx,[esp+0xc0]
1002a3d1:	mov    BYTE PTR [esp+0x128],0x3
1002a3d9:	call   0x1001986b
1002a3de:	lea    edi,[esp+0xf0]
1002a3e5:	mov    BYTE PTR [esp+0x120],0x4
1002a3ed:	call   0x10019710
1002a3f2:	test   al,al
1002a3f4:	jne    0x1002a8f8
1002a3fa:	cmp    DWORD PTR [esp+0xf0],ebx
1002a401:	je     0x1002a8f8
1002a407:	push   0x6b291238
1002a40c:	push   0x100728fc
1002a411:	call   0x10004246
1002a416:	push   0x107d881a
1002a41b:	push   eax
1002a41c:	call   0x10004246
1002a421:	push   0x1df84b98
1002a426:	push   eax
1002a427:	call   0x10004246
1002a42c:	mov    esi,DWORD PTR [esp+0xd4]
1002a433:	add    esp,0x18
1002a436:	cmp    DWORD PTR [esp+0xd0],0x10
1002a43e:	mov    edi,esi
1002a440:	jae    0x1002a44b
1002a442:	lea    edi,[esp+0xbc]
1002a449:	mov    esi,edi
1002a44b:	push   eax
1002a44c:	push   0x8
1002a44e:	push   0x10072924
1002a453:	call   0x10004258
1002a458:	add    esp,0xc
1002a45b:	push   eax
1002a45c:	push   edi
1002a45d:	call   0x10045a30
1002a462:	cmp    eax,esi
1002a464:	pop    ecx
1002a465:	pop    ecx
1002a466:	jne    0x1002a5b5
1002a46c:	push   0x7792f8e6
1002a471:	push   0x10072930
1002a476:	call   0x10004246
1002a47b:	push   0x1d76256
1002a480:	push   eax
1002a481:	call   0x10004246
1002a486:	push   eax
1002a487:	push   0x7
1002a489:	push   0x10072954
1002a48e:	call   0x10004258
1002a493:	add    esp,0x1c
1002a496:	push   eax
1002a497:	lea    ecx,[esp+0xd8]
1002a49e:	call   0x100011cd
1002a4a3:	push   0xffffffff
1002a4a5:	push   ebx
1002a4a6:	lea    eax,[esp+0xa4]
1002a4ad:	lea    esi,[esp+0xdc]
1002a4b4:	mov    BYTE PTR [esp+0x128],0x5
1002a4bc:	call   0x10004c80
1002a4c1:	push   0xe73ad94
1002a4c6:	push   0x1007295c
1002a4cb:	call   0x10004246
1002a4d0:	push   0x7ff2ed48
1002a4d5:	push   eax
1002a4d6:	call   0x10004246
1002a4db:	push   0x4f9e1daa
1002a4e0:	push   eax
1002a4e1:	call   0x10004246
1002a4e6:	push   0x739b67b4
1002a4eb:	push   eax
1002a4ec:	call   0x10004246
1002a4f1:	push   eax
1002a4f2:	push   0x8
1002a4f4:	push   0x10071be8
1002a4f9:	call   0x10004258
1002a4fe:	add    esp,0x2c
1002a501:	push   eax
1002a502:	lea    ecx,[esp+0x2c]
1002a506:	call   0x100011cd
1002a50b:	mov    edi,DWORD PTR [esp+0x18]
1002a50f:	lea    eax,[esp+0x28]
1002a513:	push   eax
1002a514:	mov    BYTE PTR [esp+0x124],0x6
1002a51c:	mov    eax,DWORD PTR [edi+0x8]
1002a51f:	add    eax,0x20
1002a522:	push   eax
1002a523:	call   0x1000826a
1002a528:	xor    esi,esi
1002a52a:	push   ebx
1002a52b:	inc    esi
1002a52c:	push   esi
1002a52d:	lea    ecx,[esp+0x30]
1002a531:	mov    BYTE PTR [esp+0x128],0x5
1002a539:	call   0x100012f0
1002a53e:	push   0x22befd28
1002a543:	push   0x1007299c
1002a548:	call   0x10004246
1002a54d:	push   0x6f27ff78
1002a552:	push   eax
1002a553:	call   0x10004246
1002a558:	push   eax
1002a559:	push   0x7
1002a55b:	push   0x100729cc
1002a560:	call   0x10004258
1002a565:	add    esp,0x1c
1002a568:	push   eax
1002a569:	lea    ecx,[esp+0x2c]
1002a56d:	call   0x100011cd
1002a572:	mov    BYTE PTR [esp+0x120],0x7
1002a57a:	mov    edx,DWORD PTR [edi+0x8]
1002a57d:	push   ebx
1002a57e:	lea    eax,[esp+0x2c]
1002a582:	push   eax
1002a583:	add    edx,0x20
1002a586:	lea    ecx,[esp+0xdc]
1002a58d:	call   0x10007f61
1002a592:	push   ebx
1002a593:	push   esi
1002a594:	lea    ecx,[esp+0x30]
1002a598:	call   0x100012f0
1002a59d:	push   ebx
1002a59e:	push   esi
1002a59f:	lea    ecx,[esp+0xdc]
1002a5a6:	mov    BYTE PTR [esp+0x128],0x4
1002a5ae:	call   0x100012f0
1002a5b3:	jmp    0x1002a5b8
1002a5b5:	xor    esi,esi
1002a5b7:	inc    esi
1002a5b8:	push   0x34
1002a5ba:	call   0x1004349e
1002a5bf:	pop    ecx
1002a5c0:	mov    DWORD PTR [esp+0x14],eax
1002a5c4:	cmp    eax,ebx
1002a5c6:	mov    BYTE PTR [esp+0x120],0x8
1002a5ce:	je     0x1002a629
1002a5d0:	push   0x38d35504
1002a5d5:	push   0x100729d4
1002a5da:	mov    DWORD PTR [esp+0x24],ebx
1002a5de:	mov    DWORD PTR [esp+0x28],ebx
1002a5e2:	mov    DWORD PTR [esp+0x2c],esi
1002a5e6:	call   0x10004246
1002a5eb:	push   0x6e998be6
1002a5f0:	push   eax
1002a5f1:	call   0x10004246
1002a5f6:	push   0x50856d38
1002a5fb:	push   eax
1002a5fc:	call   0x10004246
1002a601:	add    esp,0x18
1002a604:	lea    ecx,[esp+0x1c]
1002a608:	push   ecx
1002a609:	push   eax
1002a60a:	push   0xd
1002a60c:	push   0x10072a00
1002a611:	call   0x10004258
1002a616:	add    esp,0xc
1002a619:	push   eax
1002a61a:	push   DWORD PTR [esp+0x1c]
1002a61e:	call   0x1002a262
1002a623:	mov    DWORD PTR [esp+0x14],eax
1002a627:	jmp    0x1002a62d
1002a629:	mov    DWORD PTR [esp+0x14],ebx
1002a62d:	mov    edi,DWORD PTR [esp+0x14]
1002a631:	mov    DWORD PTR [esp+0x44],edi
1002a635:	mov    BYTE PTR [esp+0x120],0x9
1002a63d:	cmp    DWORD PTR [esp+0xb4],0x10
1002a645:	mov    eax,DWORD PTR [esp+0xa0]
1002a64c:	jae    0x1002a655
1002a64e:	lea    eax,[esp+0xa0]
1002a655:	push   eax
1002a656:	mov    DWORD PTR [esp+0x20],eax
1002a65a:	call   0x10043010
1002a65f:	pop    ecx
1002a660:	mov    DWORD PTR [esp+0x20],eax
1002a664:	lea    eax,[esp+0x1c]
1002a668:	push   eax
1002a669:	push   edi
1002a66a:	call   0x1003a120
1002a66f:	test   al,al
1002a671:	jne    0x1002a7ff
1002a677:	xor    edi,edi
1002a679:	lea    eax,[esp+0x9c]
1002a680:	call   0x10011e07
1002a685:	cmp    BYTE PTR [eax],0x2f
1002a688:	je     0x1002a6a8
1002a68a:	push   0x10072a10
1002a68f:	call   0x10043010
1002a694:	mov    ebx,eax
1002a696:	pop    ecx
1002a697:	lea    eax,[esp+0x9c]
1002a69e:	call   0x1002a91c
1002a6a3:	xor    esi,esi
1002a6a5:	xor    ebx,ebx
1002a6a7:	inc    esi
1002a6a8:	push   0xd4fb88e
1002a6ad:	push   0x10072a14
1002a6b2:	call   0x10004246
1002a6b7:	push   0x18e502e6
1002a6bc:	push   eax
1002a6bd:	call   0x10004246
1002a6c2:	push   0x56fc968
1002a6c7:	push   eax
1002a6c8:	call   0x10004246
1002a6cd:	push   0x11fa2ba8
1002a6d2:	push   eax
1002a6d3:	call   0x10004246
1002a6d8:	push   eax
1002a6d9:	push   0x4
1002a6db:	push   0x1006d40c
1002a6e0:	call   0x10004258
1002a6e5:	add    esp,0x2c
1002a6e8:	push   eax
1002a6e9:	lea    ecx,[esp+0x2c]
1002a6ed:	call   0x100011cd
1002a6f2:	push   ebx
1002a6f3:	lea    eax,[esp+0x2c]
1002a6f7:	push   eax
1002a6f8:	lea    eax,[esp+0x50]
1002a6fc:	push   eax
1002a6fd:	mov    eax,DWORD PTR [esp+0x24]
1002a701:	mov    BYTE PTR [esp+0x12c],0xa
1002a709:	mov    eax,DWORD PTR [eax]
1002a70b:	add    eax,0x18
1002a70e:	call   0x100084cc
1002a713:	mov    edi,eax
1002a715:	push   0x2987b158
1002a71a:	push   0x10072a48
1002a71f:	mov    BYTE PTR [esp+0x128],0xb
1002a727:	call   0x10004246
1002a72c:	push   0x6d32aa4a
1002a731:	push   eax
1002a732:	call   0x10004246
1002a737:	push   0x1cb8f82e
1002a73c:	push   eax
1002a73d:	call   0x10004246
1002a742:	push   0x55d6f298
1002a747:	push   eax
1002a748:	call   0x10004246
1002a74d:	push   eax
1002a74e:	push   0x7
1002a750:	push   0x1006d3c4
1002a755:	call   0x10004258
1002a75a:	add    esp,0x2c
1002a75d:	push   eax
1002a75e:	lea    ecx,[esp+0x68]
1002a762:	call   0x100011cd
1002a767:	push   edi
1002a768:	push   eax
1002a769:	lea    eax,[esp+0x88]
1002a770:	push   eax
1002a771:	mov    BYTE PTR [esp+0x12c],0xc
1002a779:	call   0x100064d6
1002a77e:	add    esp,0xc
1002a781:	lea    ecx,[esp+0x9c]
1002a788:	push   ecx
1002a789:	push   eax
1002a78a:	lea    eax,[esp+0xdc]
1002a791:	push   eax
1002a792:	mov    BYTE PTR [esp+0x12c],0xd
1002a79a:	call   0x100064d6
1002a79f:	add    esp,0xc
1002a7a2:	push   0xffffffff
1002a7a4:	push   ebx
1002a7a5:	push   eax
1002a7a6:	lea    ecx,[esp+0xa8]
1002a7ad:	mov    BYTE PTR [esp+0x12c],0xe
1002a7b5:	call   0x10001241
1002a7ba:	push   ebx
1002a7bb:	push   esi
1002a7bc:	lea    ecx,[esp+0xdc]
1002a7c3:	call   0x100012f0
1002a7c8:	push   ebx
1002a7c9:	push   esi
1002a7ca:	lea    ecx,[esp+0x88]
1002a7d1:	call   0x100012f0
1002a7d6:	push   ebx
1002a7d7:	push   esi
1002a7d8:	lea    ecx,[esp+0x6c]
1002a7dc:	call   0x100012f0
1002a7e1:	push   ebx
1002a7e2:	push   esi
1002a7e3:	lea    ecx,[esp+0x50]
1002a7e7:	call   0x100012f0
1002a7ec:	push   ebx
1002a7ed:	push   esi
1002a7ee:	lea    ecx,[esp+0x30]
1002a7f2:	mov    BYTE PTR [esp+0x128],0x9
1002a7fa:	call   0x100012f0
1002a7ff:	lea    eax,[esp+0x48]
1002a803:	push   eax
1002a804:	lea    eax,[esp+0xf4]
1002a80b:	call   0x10019730
1002a810:	mov    BYTE PTR [esp+0x120],0xf
1002a818:	push   DWORD PTR [esp+0xf0]
1002a81f:	lea    ecx,[esp+0xa0]
1002a826:	push   ecx
1002a827:	mov    ebx,eax
1002a829:	mov    edi,0x10080ee8
1002a82e:	call   0x100197a8
1002a833:	xor    esi,esi
1002a835:	xor    ebx,ebx
1002a837:	push   esi
1002a838:	inc    ebx
1002a839:	push   ebx
1002a83a:	lea    ecx,[esp+0x50]
1002a83e:	mov    BYTE PTR [esp+0x128],0x9
1002a846:	call   0x100012f0
1002a84b:	lea    eax,[esp+0x48]
1002a84f:	push   eax
1002a850:	lea    eax,[esp+0xf4]
1002a857:	call   0x10019730
1002a85c:	cmp    DWORD PTR [esp+0xb4],0x10
1002a864:	mov    ecx,DWORD PTR [esp+0xa0]
1002a86b:	jae    0x1002a874
1002a86d:	lea    ecx,[esp+0xa0]
1002a874:	cmp    DWORD PTR [eax+0x18],0x10
1002a878:	jb     0x1002a87f
1002a87a:	mov    eax,DWORD PTR [eax+0x4]
1002a87d:	jmp    0x1002a882
1002a87f:	add    eax,0x4
1002a882:	push   ecx
1002a883:	push   eax
1002a884:	call   0x10002080
1002a889:	pop    ecx
1002a88a:	pop    ecx
1002a88b:	push   esi
1002a88c:	push   ebx
1002a88d:	lea    ecx,[esp+0x50]
1002a891:	call   0x100012f0
1002a896:	mov    eax,DWORD PTR [esp+0x18]
1002a89a:	mov    BYTE PTR [esp+0x120],0x4
1002a8a2:	cmp    DWORD PTR [esp+0x14],esi
1002a8a6:	mov    BYTE PTR [eax+0x11],bl
1002a8a9:	je     0x1002a8be
1002a8ab:	push   DWORD PTR [esp+0x14]
1002a8af:	call   0x10039f30
1002a8b4:	push   DWORD PTR [esp+0x14]
1002a8b8:	call   0x10042e92
1002a8bd:	pop    ecx
1002a8be:	push   esi
1002a8bf:	push   ebx
1002a8c0:	lea    ecx,[esp+0xfc]
1002a8c7:	call   0x100012f0
1002a8cc:	push   esi
1002a8cd:	push   ebx
1002a8ce:	lea    ecx,[esp+0xc0]
1002a8d5:	call   0x100012f0
1002a8da:	mov    BYTE PTR [esp+0x13],bl
1002a8de:	xor    ebx,ebx
1002a8e0:	push   ebx
1002a8e1:	push   0x1
1002a8e3:	lea    ecx,[esp+0xa4]
1002a8ea:	call   0x100012f0
1002a8ef:	mov    al,BYTE PTR [esp+0x13]
1002a8f3:	jmp    0x1002a309
1002a8f8:	push   ebx
1002a8f9:	push   0x1
1002a8fb:	lea    ecx,[esp+0xfc]
1002a902:	call   0x100012f0
1002a907:	push   ebx
1002a908:	push   0x1
1002a90a:	lea    ecx,[esp+0xc0]
1002a911:	call   0x100012f0
1002a916:	mov    BYTE PTR [esp+0x13],bl
1002a91a:	jmp    0x1002a8e0
1002a91c:	push   ebp
1002a91d:	mov    ebp,esp
1002a91f:	push   ecx
1002a920:	push   esi
1002a921:	push   edi
1002a922:	mov    esi,eax
1002a924:	mov    edi,0x10072a10
1002a929:	push   edi
1002a92a:	mov    ecx,esi
1002a92c:	call   0x100015e2
1002a931:	test   al,al
1002a933:	je     0x1002a950
1002a935:	cmp    DWORD PTR [esi+0x18],0x10
1002a939:	jb     0x1002a940
1002a93b:	mov    eax,DWORD PTR [esi+0x4]
1002a93e:	jmp    0x1002a943
1002a940:	lea    eax,[esi+0x4]
1002a943:	sub    edi,eax
1002a945:	push   ebx
1002a946:	push   edi
1002a947:	mov    eax,esi
1002a949:	call   0x1002a9d1
1002a94e:	jmp    0x1002a9cd
1002a950:	or     eax,0xffffffff
1002a953:	sub    eax,DWORD PTR [esi+0x14]
1002a956:	cmp    eax,ebx
1002a958:	ja     0x1002a95f
1002a95a:	call   0x100571a0
1002a95f:	test   ebx,ebx
1002a961:	jbe    0x1002a9cb
1002a963:	mov    eax,DWORD PTR [esi+0x14]
1002a966:	add    eax,ebx
1002a968:	push   0x0
1002a96a:	push   eax
1002a96b:	mov    ecx,esi
1002a96d:	mov    DWORD PTR [ebp-0x4],eax
1002a970:	call   0x10001438
1002a975:	test   al,al
1002a977:	je     0x1002a9cb
1002a979:	mov    eax,DWORD PTR [esi+0x18]
1002a97c:	cmp    eax,0x10
1002a97f:	lea    edi,[esi+0x4]
1002a982:	jb     0x1002a988
1002a984:	mov    edx,DWORD PTR [edi]
1002a986:	jmp    0x1002a98a
1002a988:	mov    edx,edi
1002a98a:	cmp    eax,0x10
1002a98d:	jb     0x1002a993
1002a98f:	mov    ecx,DWORD PTR [edi]
1002a991:	jmp    0x1002a995
1002a993:	mov    ecx,edi
1002a995:	push   DWORD PTR [esi+0x14]
1002a998:	sub    eax,ebx
1002a99a:	push   edx
1002a99b:	push   eax
1002a99c:	add    ecx,ebx
1002a99e:	push   ecx
1002a99f:	call   0x1000105b
1002a9a4:	mov    eax,DWORD PTR [esi+0x18]
1002a9a7:	add    esp,0x10
1002a9aa:	cmp    eax,0x10
1002a9ad:	jb     0x1002a9b1
1002a9af:	mov    edi,DWORD PTR [edi]
1002a9b1:	push   ebx
1002a9b2:	push   0x10072a10
1002a9b7:	push   eax
1002a9b8:	push   edi
1002a9b9:	call   0x1000103f
1002a9be:	add    esp,0x10
1002a9c1:	push   DWORD PTR [ebp-0x4]
1002a9c4:	mov    ecx,esi
1002a9c6:	call   0x1000141c
1002a9cb:	mov    eax,esi
1002a9cd:	pop    edi
1002a9ce:	pop    esi
1002a9cf:	leave  
1002a9d0:	ret    
1002a9d1:	push   ebp
1002a9d2:	mov    ebp,esp
1002a9d4:	push   ecx
1002a9d5:	push   ebx
1002a9d6:	push   edi
1002a9d7:	mov    edi,DWORD PTR [ebp+0x8]
1002a9da:	mov    ebx,eax
1002a9dc:	cmp    DWORD PTR [ebx+0x14],edi
1002a9df:	jae    0x1002a9e6
1002a9e1:	call   0x100571df
1002a9e6:	mov    eax,DWORD PTR [ebx+0x14]
1002a9e9:	sub    eax,edi
1002a9eb:	cmp    eax,DWORD PTR [ebp+0xc]
1002a9ee:	jae    0x1002a9f3
1002a9f0:	mov    DWORD PTR [ebp+0xc],eax
1002a9f3:	or     eax,0xffffffff
1002a9f6:	sub    eax,DWORD PTR [esi+0x14]
1002a9f9:	cmp    eax,DWORD PTR [ebp+0xc]
1002a9fc:	ja     0x1002aa03
1002a9fe:	call   0x100571a0
1002aa03:	cmp    DWORD PTR [ebp+0xc],0x0
1002aa07:	jbe    0x1002aac2
1002aa0d:	mov    eax,DWORD PTR [esi+0x14]
1002aa10:	add    eax,DWORD PTR [ebp+0xc]
1002aa13:	push   0x0
1002aa15:	push   eax
1002aa16:	mov    ecx,esi
1002aa18:	mov    DWORD PTR [ebp-0x4],eax
1002aa1b:	call   0x10001438
1002aa20:	test   al,al
1002aa22:	je     0x1002aac2
1002aa28:	mov    eax,DWORD PTR [esi+0x18]
1002aa2b:	cmp    eax,0x10
1002aa2e:	lea    edi,[esi+0x4]
1002aa31:	jb     0x1002aa37
1002aa33:	mov    edx,DWORD PTR [edi]
1002aa35:	jmp    0x1002aa39
1002aa37:	mov    edx,edi
1002aa39:	cmp    eax,0x10
1002aa3c:	jb     0x1002aa42
1002aa3e:	mov    ecx,DWORD PTR [edi]
1002aa40:	jmp    0x1002aa44
1002aa42:	mov    ecx,edi
1002aa44:	push   DWORD PTR [esi+0x14]
1002aa47:	push   edx
1002aa48:	mov    edx,DWORD PTR [ebp+0xc]
1002aa4b:	sub    eax,edx
1002aa4d:	push   eax
1002aa4e:	add    ecx,edx
1002aa50:	push   ecx
1002aa51:	call   0x1000105b
1002aa56:	add    esp,0x10
1002aa59:	cmp    esi,ebx
1002aa5b:	jne    0x1002aa8d
1002aa5d:	mov    ecx,DWORD PTR [ebp+0x8]
1002aa60:	test   ecx,ecx
1002aa62:	jbe    0x1002aa69
1002aa64:	mov    eax,DWORD PTR [ebp+0xc]
1002aa67:	add    ecx,eax
1002aa69:	mov    edx,DWORD PTR [esi+0x18]
1002aa6c:	cmp    edx,0x10
1002aa6f:	jb     0x1002aa75
1002aa71:	mov    eax,DWORD PTR [edi]
1002aa73:	jmp    0x1002aa77
1002aa75:	mov    eax,edi
1002aa77:	cmp    edx,0x10
1002aa7a:	jb     0x1002aa7e
1002aa7c:	mov    edi,DWORD PTR [edi]
1002aa7e:	push   DWORD PTR [ebp+0xc]
1002aa81:	add    eax,ecx
1002aa83:	push   eax
1002aa84:	push   edx
1002aa85:	push   edi
1002aa86:	call   0x1000105b
1002aa8b:	jmp    0x1002aab5
1002aa8d:	cmp    DWORD PTR [ebx+0x18],0x10
1002aa91:	jb     0x1002aa98
1002aa93:	mov    ebx,DWORD PTR [ebx+0x4]
1002aa96:	jmp    0x1002aa9b
1002aa98:	add    ebx,0x4
1002aa9b:	mov    eax,DWORD PTR [esi+0x18]
1002aa9e:	cmp    eax,0x10
1002aaa1:	jb     0x1002aaa5
1002aaa3:	mov    edi,DWORD PTR [edi]
1002aaa5:	push   DWORD PTR [ebp+0xc]
1002aaa8:	mov    ecx,DWORD PTR [ebp+0x8]
1002aaab:	add    ebx,ecx
1002aaad:	push   ebx
1002aaae:	push   eax
1002aaaf:	push   edi
1002aab0:	call   0x1000103f
1002aab5:	add    esp,0x10
1002aab8:	push   DWORD PTR [ebp-0x4]
1002aabb:	mov    ecx,esi
1002aabd:	call   0x1000141c
1002aac2:	pop    edi
1002aac3:	mov    eax,esi
1002aac5:	pop    ebx
1002aac6:	leave  
1002aac7:	ret    0x8
1002aaca:	push   ebp
1002aacb:	sub    esp,0x70
1002aace:	lea    ebp,[esp-0x4]
1002aad2:	mov    eax,ds:0x1007e030
1002aad7:	xor    eax,ebp
1002aad9:	mov    DWORD PTR [ebp+0x70],eax
1002aadc:	push   0x68
1002aade:	mov    eax,0x100632eb
1002aae3:	call   0x10059a68
1002aae8:	mov    esi,DWORD PTR [ebp+0x7c]
1002aaeb:	mov    eax,DWORD PTR [esi]
1002aaed:	xor    ebx,ebx
1002aaef:	cmp    BYTE PTR [eax+0x2c],bl
1002aaf2:	mov    DWORD PTR [ebp-0x2c],esi
1002aaf5:	jne    0x1002ad9e
1002aafb:	push   0x2fcd58c0
1002ab00:	push   0x10072a78
1002ab05:	call   0x10004246
1002ab0a:	push   eax
1002ab0b:	push   0x8
1002ab0d:	push   0x10071be8
1002ab12:	call   0x10004258
1002ab17:	add    esp,0x14
1002ab1a:	push   eax
1002ab1b:	lea    ecx,[ebp-0x58]
1002ab1e:	call   0x100011cd
1002ab23:	push   ebx
1002ab24:	lea    eax,[ebp-0x58]
1002ab27:	push   eax
1002ab28:	lea    eax,[ebp+0x54]
1002ab2b:	push   eax
1002ab2c:	mov    DWORD PTR [ebp-0x4],ebx
1002ab2f:	mov    eax,DWORD PTR [esi+0x4]
1002ab32:	add    eax,0x20
1002ab35:	call   0x100084cc
1002ab3a:	xor    edi,edi
1002ab3c:	push   ebx
1002ab3d:	inc    edi
1002ab3e:	push   edi
1002ab3f:	lea    ecx,[ebp-0x58]
1002ab42:	mov    BYTE PTR [ebp-0x4],0x2
1002ab46:	call   0x100012f0
1002ab4b:	push   0x1006cd08
1002ab50:	lea    esi,[ebp+0x54]
1002ab53:	call   0x1000658e
1002ab58:	test   al,al
1002ab5a:	pop    ecx
1002ab5b:	je     0x1002ab64
1002ab5d:	push   ebx
1002ab5e:	push   edi
1002ab5f:	jmp    0x1002ad96
1002ab64:	push   0x76b3c1dc
1002ab69:	push   0x10072aa4
1002ab6e:	call   0x10004246
1002ab73:	push   0x7ab82278
1002ab78:	push   eax
1002ab79:	call   0x10004246
1002ab7e:	push   eax
1002ab7f:	push   0x5
1002ab81:	push   0x10072ad0
1002ab86:	call   0x10004258
1002ab8b:	mov    esi,eax
1002ab8d:	push   esi
1002ab8e:	call   0x10043010
1002ab93:	add    esp,0x20
1002ab96:	push   eax
1002ab97:	push   esi
1002ab98:	lea    eax,[ebp+0x54]
1002ab9b:	call   0x1002adbf
1002aba0:	cmp    eax,0xffffffff
1002aba3:	je     0x1002ab5d
1002aba5:	add    eax,0x5
1002aba8:	push   0xffffffff
1002abaa:	push   eax
1002abab:	lea    eax,[ebp+0x54]
1002abae:	push   eax
1002abaf:	lea    eax,[ebp+0x1c]
1002abb2:	call   0x1000c8df
1002abb7:	lea    eax,[ebp-0x14]
1002abba:	push   eax
1002abbb:	lea    eax,[ebp+0x1c]
1002abbe:	push   eax
1002abbf:	lea    eax,[ebp-0x1c]
1002abc2:	mov    BYTE PTR [ebp-0x4],0x3
1002abc6:	push   eax
1002abc7:	mov    DWORD PTR [ebp-0x14],ebx
1002abca:	call   0x10039b70
1002abcf:	mov    ecx,DWORD PTR [eax]
1002abd1:	mov    esi,ecx
1002abd3:	mov    DWORD PTR [ebp-0x24],esi
1002abd6:	mov    DWORD PTR [eax],ebx
1002abd8:	mov    DWORD PTR [ebp-0x3c],esi
1002abdb:	mov    BYTE PTR [ebp-0x4],0x4
1002abdf:	push   DWORD PTR [ebp-0x1c]
1002abe2:	call   0x10042e92
1002abe7:	add    esp,0x10
1002abea:	cmp    esi,ebx
1002abec:	push   ebx
1002abed:	jne    0x1002ac04
1002abef:	call   0x10042e92
1002abf4:	pop    ecx
1002abf5:	push   ebx
1002abf6:	push   edi
1002abf7:	lea    ecx,[ebp+0x1c]
1002abfa:	call   0x100012f0
1002abff:	jmp    0x1002ab5d
1002ac04:	push   DWORD PTR ds:0x10080dbc
1002ac0a:	lea    eax,[ebp-0x20]
1002ac0d:	push   DWORD PTR [ebp-0x14]
1002ac10:	lea    edx,[ebp-0x15]
1002ac13:	push   esi
1002ac14:	push   eax
1002ac15:	lea    ecx,[ebp-0x28]
1002ac18:	mov    DWORD PTR [ebp-0x28],ebx
1002ac1b:	call   0x10039740
1002ac20:	mov    ecx,DWORD PTR [eax]
1002ac22:	mov    edi,ecx
1002ac24:	mov    DWORD PTR [ebp-0x14],edi
1002ac27:	mov    DWORD PTR [eax],ebx
1002ac29:	mov    DWORD PTR [ebp-0x1c],edi
1002ac2c:	mov    BYTE PTR [ebp-0x4],0x5
1002ac30:	push   DWORD PTR [ebp-0x20]
1002ac33:	call   0x10042e92
1002ac38:	add    esp,0x18
1002ac3b:	cmp    edi,ebx
1002ac3d:	jne    0x1002ac5e
1002ac3f:	push   ebx
1002ac40:	call   0x10042e92
1002ac45:	push   esi
1002ac46:	call   0x10042e92
1002ac4b:	pop    ecx
1002ac4c:	pop    ecx
1002ac4d:	push   ebx
1002ac4e:	push   0x1
1002ac50:	lea    ecx,[ebp+0x1c]
1002ac53:	call   0x100012f0
1002ac58:	push   ebx
1002ac59:	jmp    0x1002ad94
1002ac5e:	mov    BYTE PTR [ebp-0x4],0x6
1002ac62:	mov    eax,DWORD PTR [ebp-0x28]
1002ac65:	mov    DWORD PTR [ebp-0x30],edi
1002ac68:	lea    edi,[ebp+0x38]
1002ac6b:	lea    esi,[ebp-0x38]
1002ac6e:	mov    DWORD PTR [ebp-0x38],ebx
1002ac71:	mov    DWORD PTR [ebp-0x34],eax
1002ac74:	call   0x100375d0
1002ac79:	lea    edi,[ebp+0x0]
1002ac7c:	mov    BYTE PTR [ebp-0x4],0x7
1002ac80:	call   0x100375d0
1002ac85:	push   0x1
1002ac87:	lea    eax,[ebp+0x38]
1002ac8a:	mov    ebx,edi
1002ac8c:	push   eax
1002ac8d:	mov    edi,0x10080ee8
1002ac92:	mov    BYTE PTR [ebp-0x4],0x8
1002ac96:	call   0x100197a8
1002ac9b:	push   0x4ea220cc
1002aca0:	push   0x10072ad8
1002aca5:	call   0x10004246
1002acaa:	pop    ecx
1002acab:	pop    ecx
1002acac:	push   0x6543d26c
1002acb1:	push   eax
1002acb2:	call   0x10004246
1002acb7:	pop    ecx
1002acb8:	pop    ecx
1002acb9:	push   0x76405802
1002acbe:	push   eax
1002acbf:	call   0x10004246
1002acc4:	pop    ecx
1002acc5:	pop    ecx
1002acc6:	push   eax
1002acc7:	push   0x8
1002acc9:	push   0x10071be8
1002acce:	call   0x10004258
1002acd3:	add    esp,0xc
1002acd6:	push   eax
1002acd7:	lea    ecx,[ebp-0x74]
1002acda:	call   0x100011cd
1002acdf:	lea    eax,[ebp-0x74]
1002ace2:	push   eax
1002ace3:	mov    eax,DWORD PTR [ebp-0x2c]
1002ace6:	mov    BYTE PTR [ebp-0x4],0x9
1002acea:	mov    edx,DWORD PTR [eax+0x8]
1002aced:	add    edx,0x20
1002acf0:	lea    ecx,[ebp+0x38]
1002acf3:	call   0x100083b5
1002acf8:	xor    esi,esi
1002acfa:	xor    ebx,ebx
1002acfc:	push   esi
1002acfd:	inc    ebx
1002acfe:	push   ebx
1002acff:	lea    ecx,[ebp-0x74]
1002ad02:	call   0x100012f0
1002ad07:	cmp    DWORD PTR [ebp+0x18],0x10
1002ad0b:	mov    ecx,DWORD PTR [ebp+0x4]
1002ad0e:	jae    0x1002ad13
1002ad10:	lea    ecx,[ebp+0x4]
1002ad13:	cmp    DWORD PTR [ebp+0x50],0x10
1002ad17:	mov    eax,DWORD PTR [ebp+0x3c]
1002ad1a:	jae    0x1002ad1f
1002ad1c:	lea    eax,[ebp+0x3c]
1002ad1f:	push   ecx
1002ad20:	push   eax
1002ad21:	call   0x10002080
1002ad26:	pop    ecx
1002ad27:	pop    ecx
1002ad28:	push   esi
1002ad29:	push   ebx
1002ad2a:	lea    ecx,[ebp+0x0]
1002ad2d:	call   0x100012f0
1002ad32:	push   esi
1002ad33:	push   ebx
1002ad34:	lea    ecx,[ebp+0x38]
1002ad37:	call   0x100012f0
1002ad3c:	push   DWORD PTR [ebp-0x14]
1002ad3f:	call   0x10042e92
1002ad44:	push   DWORD PTR [ebp-0x24]
1002ad47:	call   0x10042e92
1002ad4c:	pop    ecx
1002ad4d:	pop    ecx
1002ad4e:	push   esi
1002ad4f:	push   ebx
1002ad50:	lea    ecx,[ebp+0x1c]
1002ad53:	call   0x100012f0
1002ad58:	push   esi
1002ad59:	push   ebx
1002ad5a:	lea    ecx,[ebp+0x54]
1002ad5d:	call   0x100012f0
1002ad62:	mov    al,bl
1002ad64:	jmp    0x1002ada0
1002ad66:	push   0x5
1002ad68:	call   0x10037980
1002ad6d:	pop    ecx
1002ad6e:	mov    eax,0x1002ad74
1002ad73:	ret    
1002ad74:	push   DWORD PTR [ebp-0x14]
1002ad77:	call   0x10042e92
1002ad7c:	push   DWORD PTR [ebp-0x24]
1002ad7f:	call   0x10042e92
1002ad84:	pop    ecx
1002ad85:	pop    ecx
1002ad86:	push   0x0
1002ad88:	push   0x1
1002ad8a:	lea    ecx,[ebp+0x1c]
1002ad8d:	call   0x100012f0
1002ad92:	push   0x0
1002ad94:	push   0x1
1002ad96:	lea    ecx,[ebp+0x54]
1002ad99:	call   0x100012f0
1002ad9e:	xor    al,al
1002ada0:	mov    ecx,DWORD PTR [ebp-0xc]
1002ada3:	mov    DWORD PTR fs:0x0,ecx
1002adaa:	pop    ecx
1002adab:	pop    edi
1002adac:	pop    esi
1002adad:	pop    ebx
1002adae:	mov    ecx,DWORD PTR [ebp+0x70]
1002adb1:	xor    ecx,ebp
1002adb3:	call   0x10042e97
1002adb8:	add    ebp,0x74
1002adbb:	leave  
1002adbc:	ret    0x4
1002adbf:	push   ebp
1002adc0:	mov    ebp,esp
1002adc2:	cmp    DWORD PTR [ebp+0xc],0x0
1002adc6:	push   esi
1002adc7:	mov    esi,eax
1002adc9:	jne    0x1002add9
1002adcb:	mov    esi,DWORD PTR [esi+0x14]
1002adce:	or     eax,0xffffffff
1002add1:	cmp    esi,eax
1002add3:	ja     0x1002ae41
1002add5:	mov    eax,esi
1002add7:	jmp    0x1002ae41
1002add9:	mov    eax,DWORD PTR [esi+0x14]
1002addc:	cmp    DWORD PTR [ebp+0xc],eax
1002addf:	push   ebx
1002ade0:	push   edi
1002ade1:	ja     0x1002ae3c
1002ade3:	sub    eax,DWORD PTR [ebp+0xc]
1002ade6:	or     ecx,0xffffffff
1002ade9:	cmp    eax,ecx
1002adeb:	ja     0x1002adef
1002aded:	mov    ecx,eax
1002adef:	cmp    DWORD PTR [esi+0x18],0x10
1002adf3:	lea    edi,[esi+0x4]
1002adf6:	jb     0x1002adfc
1002adf8:	mov    eax,DWORD PTR [edi]
1002adfa:	jmp    0x1002adfe
1002adfc:	mov    eax,edi
1002adfe:	lea    ebx,[eax+ecx*1]
1002ae01:	mov    cl,BYTE PTR [ebx]
1002ae03:	mov    eax,DWORD PTR [ebp+0x8]
1002ae06:	cmp    cl,BYTE PTR [eax]
1002ae08:	jne    0x1002ae1b
1002ae0a:	push   DWORD PTR [ebp+0xc]
1002ae0d:	push   eax
1002ae0e:	push   ebx
1002ae0f:	call   0x10043726
1002ae14:	add    esp,0xc
1002ae17:	test   eax,eax
1002ae19:	je     0x1002ae2e
1002ae1b:	cmp    DWORD PTR [esi+0x18],0x10
1002ae1f:	jb     0x1002ae25
1002ae21:	mov    eax,DWORD PTR [edi]
1002ae23:	jmp    0x1002ae27
1002ae25:	mov    eax,edi
1002ae27:	cmp    ebx,eax
1002ae29:	je     0x1002ae3c
1002ae2b:	dec    ebx
1002ae2c:	jmp    0x1002ae01
1002ae2e:	cmp    DWORD PTR [esi+0x18],0x10
1002ae32:	jb     0x1002ae36
1002ae34:	mov    edi,DWORD PTR [edi]
1002ae36:	mov    eax,ebx
1002ae38:	sub    eax,edi
1002ae3a:	jmp    0x1002ae3f
1002ae3c:	or     eax,0xffffffff
1002ae3f:	pop    edi
1002ae40:	pop    ebx
1002ae41:	pop    esi
1002ae42:	pop    ebp
1002ae43:	ret    0x8
1002ae46:	push   0x10
1002ae48:	push   DWORD PTR [esp+0xc]
1002ae4c:	push   DWORD PTR [esp+0xc]
1002ae50:	call   0x10043726
1002ae55:	add    esp,0xc
1002ae58:	neg    eax
1002ae5a:	sbb    eax,eax
1002ae5c:	inc    eax
1002ae5d:	ret    
1002ae5e:	mov    eax,DWORD PTR [esi]
1002ae60:	test   eax,eax
1002ae62:	je     0x1002ae74
1002ae64:	push   eax
1002ae65:	call   DWORD PTR ds:0x100662a0
1002ae6b:	push   eax
1002ae6c:	push   DWORD PTR [esi]
1002ae6e:	call   DWORD PTR ds:0x100662a8
1002ae74:	mov    DWORD PTR [edi],eax
1002ae76:	cmp    DWORD PTR [esi],0x0
1002ae79:	je     0x1002ae89
1002ae7b:	test   eax,eax
1002ae7d:	jne    0x1002ae89
1002ae7f:	push   0x8007000e
1002ae84:	call   0x10001f45
1002ae89:	mov    eax,edi
1002ae8b:	ret    
1002ae8c:	push   DWORD PTR [esp+0x4]
1002ae90:	push   esi
1002ae91:	call   DWORD PTR ds:0x10066280
1002ae97:	test   eax,eax
1002ae99:	jge    0x1002aea9
1002ae9b:	push   eax
1002ae9c:	mov    WORD PTR [esi],0xa
1002aea1:	mov    DWORD PTR [esi+0x8],eax
1002aea4:	call   0x10001f45
1002aea9:	ret    0x4
1002aeac:	push   0x14
1002aeae:	mov    eax,0x1005f7c1
1002aeb3:	call   0x10059a35
1002aeb8:	mov    esi,ecx
1002aeba:	cmp    WORD PTR [esi],0x9
1002aebe:	jne    0x1002aed4
1002aec0:	cmp    DWORD PTR [esi+0x8],0x0
1002aec4:	je     0x1002aecf
1002aec6:	mov    eax,DWORD PTR [esi+0x8]
1002aec9:	mov    ecx,DWORD PTR [eax]
1002aecb:	push   eax
1002aecc:	call   DWORD PTR [ecx+0x4]
1002aecf:	mov    eax,DWORD PTR [esi+0x8]
1002aed2:	jmp    0x1002af0c
1002aed4:	lea    eax,[ebp-0x20]
1002aed7:	push   eax
1002aed8:	call   DWORD PTR ds:0x1006628c
1002aede:	and    DWORD PTR [ebp-0x4],0x0
1002aee2:	mov    ecx,esi
1002aee4:	mov    dx,0x9
1002aee8:	lea    eax,[ebp-0x20]
1002aeeb:	call   0x10022409
1002aef0:	mov    eax,DWORD PTR [ebp-0x18]
1002aef3:	test   eax,eax
1002aef5:	je     0x1002aefd
1002aef7:	mov    ecx,DWORD PTR [eax]
1002aef9:	push   eax
1002aefa:	call   DWORD PTR [ecx+0x4]
1002aefd:	mov    esi,DWORD PTR [ebp-0x18]
1002af00:	lea    eax,[ebp-0x20]
1002af03:	push   eax
1002af04:	call   DWORD PTR ds:0x10066294
1002af0a:	mov    eax,esi
1002af0c:	call   0x10059b0d
1002af11:	ret    
1002af12:	mov    eax,DWORD PTR [esp+0x4]
1002af16:	add    eax,0x4
1002af19:	push   eax
1002af1a:	call   DWORD PTR ds:0x100660a4
1002af20:	ret    0x4
1002af23:	push   esi
1002af24:	mov    esi,DWORD PTR [esp+0x8]
1002af28:	push   edi
1002af29:	lea    eax,[esi+0x4]
1002af2c:	push   eax
1002af2d:	call   DWORD PTR ds:0x100660ac
1002af33:	mov    edi,eax
1002af35:	test   edi,edi
1002af37:	jne    0x1002af40
1002af39:	push   esi
1002af3a:	call   0x10042e92
1002af3f:	pop    ecx
1002af40:	mov    eax,edi
1002af42:	pop    edi
1002af43:	pop    esi
1002af44:	ret    0x4
1002af47:	mov    DWORD PTR [ecx],0x10072e4c
1002af4d:	ret    
1002af4e:	test   BYTE PTR [esp+0x4],0x1
1002af53:	push   esi
1002af54:	mov    esi,ecx
1002af56:	mov    DWORD PTR [esi],0x10072e4c
1002af5c:	je     0x1002af65
1002af5e:	push   esi
1002af5f:	call   0x10042e92
1002af64:	pop    ecx
1002af65:	mov    eax,esi
1002af67:	pop    esi
1002af68:	ret    0x4
1002af6b:	push   DWORD PTR [esp+0xc]
1002af6f:	mov    edx,DWORD PTR [esp+0xc]
1002af73:	mov    eax,DWORD PTR [esp+0x8]
1002af77:	mov    ecx,DWORD PTR [eax]
1002af79:	inc    edx
1002af7a:	push   edx
1002af7b:	push   eax
1002af7c:	call   DWORD PTR [ecx+0x28]
1002af7f:	ret    0xc
1002af82:	push   0xc
1002af84:	mov    eax,0x10060036
1002af89:	call   0x10059a9e
1002af8e:	mov    esi,ecx
1002af90:	and    DWORD PTR [ebp-0x4],0x0
1002af94:	call   DWORD PTR ds:0x1007efec
1002af9a:	cmp    DWORD PTR [esi+0x18],0x10
1002af9e:	mov    ebx,eax
1002afa0:	jb     0x1002afa7
1002afa2:	mov    esi,DWORD PTR [esi+0x4]
1002afa5:	jmp    0x1002afaa
1002afa7:	add    esi,0x4
1002afaa:	test   esi,esi
1002afac:	je     0x1002afc0
1002afae:	push   esi
1002afaf:	call   DWORD PTR ds:0x100660dc
1002afb5:	mov    edi,eax
1002afb7:	inc    edi
1002afb8:	cmp    edi,0x3fffffff
1002afbe:	jle    0x1002afc4
1002afc0:	xor    eax,eax
1002afc2:	jmp    0x1002afd8
1002afc4:	lea    eax,[edi+edi*1]
1002afc7:	call   0x1004b6f0
1002afcc:	mov    eax,esp
1002afce:	push   ebx
1002afcf:	push   edi
1002afd0:	push   esi
1002afd1:	mov    esi,eax
1002afd3:	call   0x10006cb2
1002afd8:	push   eax
1002afd9:	lea    esi,[ebp-0x18]
1002afdc:	call   0x1001b380
1002afe1:	mov    esi,eax
1002afe3:	lea    edi,[ebp-0x14]
1002afe6:	mov    BYTE PTR [ebp-0x4],0x1
1002afea:	call   0x1002ae5e
1002afef:	mov    eax,edi
1002aff1:	push   eax
1002aff2:	mov    eax,DWORD PTR [ebp+0x8]
1002aff5:	add    eax,0x4
1002aff8:	push   eax
1002aff9:	mov    BYTE PTR [ebp-0x4],0x2
1002affd:	call   0x1002d5fb
1002b002:	lea    ecx,[ebp+0xc]
1002b005:	cmp    eax,ecx
1002b007:	je     0x1002b011
1002b009:	push   ecx
1002b00a:	mov    esi,eax
1002b00c:	call   0x1002ae8c
1002b011:	push   DWORD PTR [ebp-0x14]
1002b014:	mov    esi,DWORD PTR ds:0x100662b4
1002b01a:	call   esi
1002b01c:	push   DWORD PTR [ebp-0x18]
1002b01f:	call   esi
1002b021:	lea    eax,[ebp+0xc]
1002b024:	push   eax
1002b025:	call   DWORD PTR ds:0x10066294
1002b02b:	lea    esp,[ebp-0x28]
1002b02e:	call   0x10059b21
1002b033:	ret    0x14
1002b036:	push   ebp
1002b037:	mov    ebp,esp
1002b039:	and    esp,0xfffffff8
1002b03c:	push   0xffffffff
1002b03e:	push   0x100609d2
1002b043:	mov    eax,fs:0x0
1002b049:	push   eax
1002b04a:	sub    esp,0x30
1002b04d:	push   ebx
1002b04e:	push   esi
1002b04f:	push   edi
1002b050:	mov    eax,ds:0x1007e030
1002b055:	xor    eax,esp
1002b057:	push   eax
1002b058:	lea    eax,[esp+0x40]
1002b05c:	mov    fs:0x0,eax
1002b062:	xor    ebx,ebx
1002b064:	cmp    DWORD PTR [ebp+0x1c],ebx
1002b067:	jne    0x1002b083
1002b069:	mov    eax,0x80004003
1002b06e:	mov    ecx,DWORD PTR [esp+0x40]
1002b072:	mov    DWORD PTR fs:0x0,ecx
1002b079:	pop    ecx
1002b07a:	pop    edi
1002b07b:	pop    esi
1002b07c:	pop    ebx
1002b07d:	mov    esp,ebp
1002b07f:	pop    ebp
1002b080:	ret    0x18
1002b083:	lea    eax,[esp+0x2c]
1002b087:	push   eax
1002b088:	call   DWORD PTR ds:0x1006628c
1002b08e:	mov    DWORD PTR [esp+0x48],ebx
1002b092:	cmp    WORD PTR [ebp+0xc],0x8
1002b097:	mov    esi,DWORD PTR ds:0x1006627c
1002b09d:	je     0x1002b0d1
1002b09f:	push   0x3
1002b0a1:	push   ebx
1002b0a2:	lea    eax,[ebp+0xc]
1002b0a5:	push   eax
1002b0a6:	lea    eax,[esp+0x38]
1002b0aa:	push   eax
1002b0ab:	call   esi
1002b0ad:	test   eax,eax
1002b0af:	jl     0x1002b0d1
1002b0b1:	push   DWORD PTR [ebp+0x1c]
1002b0b4:	push   DWORD PTR [esp+0x38]
1002b0b8:	push   DWORD PTR [ebp+0x8]
1002b0bb:	call   0x1002d4bc
1002b0c0:	mov    edi,eax
1002b0c2:	lea    eax,[esp+0x2c]
1002b0c6:	push   eax
1002b0c7:	call   DWORD PTR ds:0x10066294
1002b0cd:	mov    eax,edi
1002b0cf:	jmp    0x1002b06e
1002b0d1:	push   0x8
1002b0d3:	push   ebx
1002b0d4:	lea    eax,[ebp+0xc]
1002b0d7:	push   eax
1002b0d8:	lea    eax,[esp+0x38]
1002b0dc:	push   eax
1002b0dd:	call   esi
1002b0df:	cmp    eax,ebx
1002b0e1:	jl     0x1002b0c0
1002b0e3:	push   DWORD PTR [esp+0x34]
1002b0e7:	lea    esi,[esp+0x18]
1002b0eb:	call   0x1001b380
1002b0f0:	mov    esi,eax
1002b0f2:	lea    edi,[esp+0x10]
1002b0f6:	mov    BYTE PTR [esp+0x48],0x1
1002b0fb:	call   0x1002ae5e
1002b100:	mov    esi,DWORD PTR [ebp+0x8]
1002b103:	mov    eax,edi
1002b105:	push   eax
1002b106:	lea    eax,[esp+0x28]
1002b10a:	push   eax
1002b10b:	add    esi,0x4
1002b10e:	push   esi
1002b10f:	call   0x1002d6fc
1002b114:	push   DWORD PTR [esp+0x10]
1002b118:	mov    edi,DWORD PTR ds:0x100662b4
1002b11e:	call   edi
1002b120:	mov    BYTE PTR [esp+0x48],bl
1002b124:	push   DWORD PTR [esp+0x14]
1002b128:	call   edi
1002b12a:	mov    eax,DWORD PTR [esi+0x4]
1002b12d:	mov    DWORD PTR [esp+0x14],esi
1002b131:	lea    edi,[esp+0x14]
1002b135:	lea    esi,[esp+0x24]
1002b139:	mov    DWORD PTR [esp+0x18],eax
1002b13d:	call   0x10004ada
1002b142:	test   al,al
1002b144:	je     0x1002b150
1002b146:	mov    edi,0x80004005
1002b14b:	jmp    0x1002b0c2
1002b150:	lea    esi,[esp+0x24]
1002b154:	call   0x1002d763
1002b159:	add    eax,0x8
1002b15c:	push   eax
1002b15d:	lea    esi,[esp+0x18]
1002b161:	mov    WORD PTR [esp+0x18],bx
1002b166:	call   0x1002ae8c
1002b16b:	push   DWORD PTR [ebp+0x1c]
1002b16e:	mov    BYTE PTR [esp+0x4c],0x2
1002b173:	mov    esi,DWORD PTR ds:0x10066294
1002b179:	call   esi
1002b17b:	mov    edi,eax
1002b17d:	cmp    edi,ebx
1002b17f:	jl     0x1002b1a2
1002b181:	push   0x10
1002b183:	lea    eax,[esp+0x18]
1002b187:	push   eax
1002b188:	push   0x10
1002b18a:	push   DWORD PTR [ebp+0x1c]
1002b18d:	call   0x100433c5
1002b192:	push   eax
1002b193:	call   0x10001f5d
1002b198:	add    esp,0x14
1002b19b:	mov    WORD PTR [esp+0x14],bx
1002b1a0:	xor    edi,edi
1002b1a2:	lea    eax,[esp+0x14]
1002b1a6:	push   eax
1002b1a7:	call   esi
1002b1a9:	jmp    0x1002b0c2
1002b1ae:	mov    eax,DWORD PTR [esp+0x4]
1002b1b2:	push   esi
1002b1b3:	mov    ecx,DWORD PTR [eax]
1002b1b5:	push   edi
1002b1b6:	push   DWORD PTR [esp+0x20]
1002b1ba:	lea    esi,[esp+0x14]
1002b1be:	sub    esp,0x10
1002b1c1:	mov    edi,esp
1002b1c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002b1c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002b1c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002b1c6:	push   eax
1002b1c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002b1c8:	call   DWORD PTR [ecx+0x30]
1002b1cb:	pop    edi
1002b1cc:	pop    esi
1002b1cd:	ret    0x18
1002b1d0:	push   ebp
1002b1d1:	mov    ebp,esp
1002b1d3:	and    esp,0xfffffff8
1002b1d6:	sub    esp,0x14
1002b1d9:	cmp    DWORD PTR [ebp+0x10],0x0
1002b1dd:	push   ebx
1002b1de:	push   esi
1002b1df:	push   edi
1002b1e0:	jne    0x1002b1ec
1002b1e2:	mov    eax,0x80004003
1002b1e7:	jmp    0x1002b28d
1002b1ec:	cmp    DWORD PTR [ebp+0xc],0x1
1002b1f0:	jge    0x1002b1fc
1002b1f2:	mov    eax,0x80070057
1002b1f7:	jmp    0x1002b28d
1002b1fc:	mov    ebx,DWORD PTR [ebp+0x8]
1002b1ff:	dec    DWORD PTR [ebp+0xc]
1002b202:	mov    eax,DWORD PTR [ebx+0x8]
1002b205:	mov    eax,DWORD PTR [eax]
1002b207:	add    ebx,0x4
1002b20a:	mov    DWORD PTR [esp+0xc],0x80004005
1002b212:	mov    DWORD PTR [esp+0x10],ebx
1002b216:	mov    DWORD PTR [esp+0x14],eax
1002b21a:	mov    DWORD PTR [esp+0x18],ebx
1002b21e:	mov    eax,DWORD PTR [ebx+0x4]
1002b221:	lea    edi,[esp+0x18]
1002b225:	lea    esi,[esp+0x10]
1002b229:	mov    DWORD PTR [esp+0x1c],eax
1002b22d:	call   0x10004ada
1002b232:	test   al,al
1002b234:	jne    0x1002b246
1002b236:	cmp    DWORD PTR [ebp+0xc],0x0
1002b23a:	jle    0x1002b246
1002b23c:	call   0x1002dce2
1002b241:	dec    DWORD PTR [ebp+0xc]
1002b244:	jmp    0x1002b21e
1002b246:	mov    eax,DWORD PTR [ebx+0x4]
1002b249:	lea    edi,[esp+0x18]
1002b24d:	lea    esi,[esp+0x10]
1002b251:	mov    DWORD PTR [esp+0x1c],eax
1002b255:	mov    DWORD PTR [esp+0x18],ebx
1002b259:	call   0x10004ada
1002b25e:	test   al,al
1002b260:	jne    0x1002b289
1002b262:	call   0x1002d763
1002b267:	mov    esi,eax
1002b269:	mov    eax,DWORD PTR [esi]
1002b26b:	test   eax,eax
1002b26d:	je     0x1002b27f
1002b26f:	push   eax
1002b270:	call   DWORD PTR ds:0x100662a0
1002b276:	push   eax
1002b277:	push   DWORD PTR [esi]
1002b279:	call   DWORD PTR ds:0x100662a8
1002b27f:	mov    ecx,DWORD PTR [ebp+0x10]
1002b282:	and    DWORD PTR [esp+0xc],0x0
1002b287:	mov    DWORD PTR [ecx],eax
1002b289:	mov    eax,DWORD PTR [esp+0xc]
1002b28d:	pop    edi
1002b28e:	pop    esi
1002b28f:	pop    ebx
1002b290:	mov    esp,ebp
1002b292:	pop    ebp
1002b293:	ret    0xc
1002b296:	mov    eax,DWORD PTR [esi]
1002b298:	test   eax,eax
1002b29a:	je     0x1002b2a9
1002b29c:	push   DWORD PTR [esi+0x4]
1002b29f:	push   eax
1002b2a0:	call   DWORD PTR ds:0x1006616c
1002b2a6:	and    DWORD PTR [esi],0x0
1002b2a9:	ret    
1002b2aa:	push   ebp
1002b2ab:	sub    esp,0xc4
1002b2b1:	lea    ebp,[esp-0x4]
1002b2b5:	mov    eax,ds:0x1007e030
1002b2ba:	xor    eax,ebp
1002b2bc:	mov    DWORD PTR [ebp+0xc4],eax
1002b2c2:	push   0x184
1002b2c7:	mov    eax,0x10064ae8
1002b2cc:	call   0x10059a68
1002b2d1:	mov    eax,DWORD PTR [ebp+0xd0]
1002b2d7:	mov    ebx,ecx
1002b2d9:	xor    edi,edi
1002b2db:	mov    DWORD PTR [ebp-0x14],ebx
1002b2de:	mov    DWORD PTR [ebp-0x34],eax
1002b2e1:	mov    DWORD PTR [ebp-0x68],edi
1002b2e4:	call   0x10002080
1002b2e9:	mov    ecx,0x10080a74
1002b2ee:	lea    esi,[ebp-0x18]
1002b2f1:	mov    DWORD PTR [ebp-0x1c],edi
1002b2f4:	call   0x10002151
1002b2f9:	lea    eax,[ebp-0x64]
1002b2fc:	mov    DWORD PTR [ebp-0x4],edi
1002b2ff:	push   eax
1002b300:	mov    BYTE PTR [ebp-0x4],0x1
1002b304:	call   0x1002ea9f
1002b309:	test   eax,eax
1002b30b:	jge    0x1002b324
1002b30d:	push   ebx
1002b30e:	lea    edi,[ebp-0x1c]
1002b311:	call   0x1002bbdf
1002b316:	mov    esi,edi
1002b318:	call   0x1002bbc7
1002b31d:	mov    eax,ebx
1002b31f:	jmp    0x1002b73f
1002b324:	call   0x10002080
1002b329:	mov    eax,DWORD PTR [ebp-0x64]
1002b32c:	cmp    eax,edi
1002b32e:	mov    DWORD PTR [ebp-0x20],eax
1002b331:	je     0x1002b339
1002b333:	mov    ecx,DWORD PTR [eax]
1002b335:	push   eax
1002b336:	call   DWORD PTR [ecx+0x4]
1002b339:	lea    ecx,[ebp+0xa8]
1002b33f:	mov    BYTE PTR [ebp-0x4],0x2
1002b343:	call   0x100183f1
1002b348:	cmp    BYTE PTR [ebp+0xd4],0x0
1002b34f:	mov    ecx,0x10072bbc
1002b354:	jne    0x1002b35b
1002b356:	mov    ecx,0x10072bc4
1002b35b:	cmp    DWORD PTR [ebp+0xc0],0x10
1002b362:	mov    eax,DWORD PTR [ebp+0xac]
1002b368:	jae    0x1002b370
1002b36a:	lea    eax,[ebp+0xac]
1002b370:	push   eax
1002b371:	push   ecx
1002b372:	call   0x10002080
1002b377:	pop    ecx
1002b378:	pop    ecx
1002b379:	push   edi
1002b37a:	lea    ecx,[ebp+0x8c]
1002b380:	mov    DWORD PTR [ebp+0xa4],0xf
1002b38a:	call   0x1000141c
1002b38f:	lea    edi,[ebp-0x74]
1002b392:	mov    ecx,0x10080ed8
1002b397:	mov    BYTE PTR [ebp-0x4],0x4
1002b39b:	call   0x100193c7
1002b3a0:	mov    BYTE PTR [ebp-0x4],0x5
1002b3a4:	mov    eax,DWORD PTR [ebp-0x70]
1002b3a7:	mov    edi,DWORD PTR [eax]
1002b3a9:	lea    ebx,[ebp-0x74]
1002b3ac:	mov    DWORD PTR [ebp-0x2c],edi
1002b3af:	mov    DWORD PTR [ebp-0x30],ebx
1002b3b2:	test   ebx,ebx
1002b3b4:	mov    esi,DWORD PTR [ebp-0x70]
1002b3b7:	je     0x1002b3c0
1002b3b9:	lea    eax,[ebp-0x74]
1002b3bc:	cmp    ebx,eax
1002b3be:	je     0x1002b3c5
1002b3c0:	call   0x100433b0
1002b3c5:	cmp    edi,esi
1002b3c7:	je     0x1002b4a9
1002b3cd:	push   0x10072bcc
1002b3d2:	lea    eax,[ebp+0x8c]
1002b3d8:	push   eax
1002b3d9:	call   0x10004090
1002b3de:	test   ebx,ebx
1002b3e0:	jne    0x1002b3e7
1002b3e2:	call   0x100433b0
1002b3e7:	cmp    edi,DWORD PTR [ebx+0x4]
1002b3ea:	jne    0x1002b3f1
1002b3ec:	call   0x100433b0
1002b3f1:	lea    eax,[edi+0x8]
1002b3f4:	push   eax
1002b3f5:	lea    esi,[ebp-0xb0]
1002b3fb:	mov    DWORD PTR [ebp-0x24],eax
1002b3fe:	call   0x10030410
1002b403:	pop    ecx
1002b404:	mov    edx,eax
1002b406:	lea    ecx,[ebp+0x70]
1002b409:	mov    BYTE PTR [ebp-0x4],0x6
1002b40d:	call   0x10033ce0
1002b412:	push   0x0
1002b414:	push   0x1
1002b416:	mov    ecx,esi
1002b418:	mov    BYTE PTR [ebp-0x4],0x8
1002b41c:	call   0x100012f0
1002b421:	push   0x1006cd08
1002b426:	lea    esi,[ebp+0x70]
1002b429:	call   0x1000658e
1002b42e:	test   al,al
1002b430:	pop    ecx
1002b431:	jne    0x1002b445
1002b433:	mov    eax,esi
1002b435:	push   eax
1002b436:	lea    ecx,[ebp+0x54]
1002b439:	call   0x10031000
1002b43e:	pop    ecx
1002b43f:	mov    BYTE PTR [ebp-0x4],0x9
1002b443:	jmp    0x1002b45f
1002b445:	cmp    edi,DWORD PTR [ebx+0x4]
1002b448:	jne    0x1002b44f
1002b44a:	call   0x100433b0
1002b44f:	push   DWORD PTR [ebp-0x24]
1002b452:	lea    ecx,[ebp+0x54]
1002b455:	call   0x10031000
1002b45a:	pop    ecx
1002b45b:	mov    BYTE PTR [ebp-0x4],0xa
1002b45f:	cmp    DWORD PTR [eax+0x18],0x10
1002b463:	jb     0x1002b46a
1002b465:	mov    eax,DWORD PTR [eax+0x4]
1002b468:	jmp    0x1002b46d
1002b46a:	add    eax,0x4
1002b46d:	push   eax
1002b46e:	lea    eax,[ebp+0x8c]
1002b474:	push   eax
1002b475:	call   0x10004090
1002b47a:	push   0x0
1002b47c:	push   0x1
1002b47e:	lea    ecx,[ebp+0x54]
1002b481:	call   0x100012f0
1002b486:	push   0x0
1002b488:	push   0x1
1002b48a:	lea    ecx,[ebp+0x70]
1002b48d:	mov    BYTE PTR [ebp-0x4],0x5
1002b491:	call   0x100012f0
1002b496:	lea    esi,[ebp-0x30]
1002b499:	call   0x10026666
1002b49e:	mov    edi,DWORD PTR [ebp-0x2c]
1002b4a1:	mov    ebx,DWORD PTR [ebp-0x30]
1002b4a4:	jmp    0x1002b3b2
1002b4a9:	push   0x1f4
1002b4ae:	push   DWORD PTR ds:0x10080ee4
1002b4b4:	call   DWORD PTR ds:0x10066084
1002b4ba:	test   eax,eax
1002b4bc:	jne    0x1002b4d4
1002b4be:	mov    esi,0x10080ed8
1002b4c3:	call   0x100194d8
1002b4c8:	push   DWORD PTR ds:0x10080ee4
1002b4ce:	call   DWORD PTR ds:0x10066094
1002b4d4:	lea    esi,[ebp-0x74]
1002b4d7:	mov    BYTE PTR [ebp-0x4],0x4
1002b4db:	call   0x100194d8
1002b4e0:	push   DWORD PTR [ebp-0x70]
1002b4e3:	call   0x10042e92
1002b4e8:	pop    ecx
1002b4e9:	call   DWORD PTR ds:0x1007efec
1002b4ef:	mov    eax,DWORD PTR [ebp-0x34]
1002b4f2:	mov    eax,DWORD PTR [eax]
1002b4f4:	sub    eax,0x10
1002b4f7:	call   0x10004dbe
1002b4fc:	add    eax,0x10
1002b4ff:	mov    DWORD PTR [ebp-0x28],eax
1002b502:	cmp    BYTE PTR [ebp+0xd4],0x0
1002b509:	mov    BYTE PTR [ebp-0x4],0xb
1002b50d:	mov    ebx,0x1006cce8
1002b512:	jne    0x1002b519
1002b514:	mov    ebx,0x1006cd0c
1002b519:	push   DWORD PTR ds:0x10080d90
1002b51f:	lea    ecx,[ebp-0xb0]
1002b525:	call   0x100011cd
1002b52a:	lea    ecx,[ebp-0x28]
1002b52d:	lea    edi,[ebp-0x120]
1002b533:	mov    BYTE PTR [ebp-0x4],0xc
1002b537:	call   0x10030730
1002b53c:	mov    esi,eax
1002b53e:	push   0x20f0fbf0
1002b543:	push   0x10072c08
1002b548:	mov    BYTE PTR [ebp-0x4],0xd
1002b54c:	call   0x10004246
1002b551:	pop    ecx
1002b552:	pop    ecx
1002b553:	push   eax
1002b554:	push   0x2
1002b556:	push   0x10072c2c
1002b55b:	call   0x10004258
1002b560:	add    esp,0xc
1002b563:	push   eax
1002b564:	lea    ecx,[ebp-0x104]
1002b56a:	call   0x100011cd
1002b56f:	push   esi
1002b570:	push   eax
1002b571:	lea    eax,[ebp-0x13c]
1002b577:	push   eax
1002b578:	mov    BYTE PTR [ebp-0x4],0xe
1002b57c:	call   0x100064d6
1002b581:	add    esp,0xc
1002b584:	mov    esi,eax
1002b586:	push   0x45371cc0
1002b58b:	push   0x10072bd4
1002b590:	mov    BYTE PTR [ebp-0x4],0xf
1002b594:	call   0x10004246
1002b599:	pop    ecx
1002b59a:	pop    ecx
1002b59b:	push   0x57ca1696
1002b5a0:	push   eax
1002b5a1:	call   0x10004246
1002b5a6:	pop    ecx
1002b5a7:	pop    ecx
1002b5a8:	push   0x112a7e
1002b5ad:	push   eax
1002b5ae:	call   0x10004246
1002b5b3:	pop    ecx
1002b5b4:	pop    ecx
1002b5b5:	push   eax
1002b5b6:	push   0x4
1002b5b8:	push   0x10072c00
1002b5bd:	call   0x10004258
1002b5c2:	add    esp,0xc
1002b5c5:	push   eax
1002b5c6:	lea    eax,[ebp-0x174]
1002b5cc:	push   esi
1002b5cd:	push   eax
1002b5ce:	call   0x10006490
1002b5d3:	add    esp,0xc
1002b5d6:	push   ebx
1002b5d7:	push   eax
1002b5d8:	lea    eax,[ebp-0xe8]
1002b5de:	push   eax
1002b5df:	mov    BYTE PTR [ebp-0x4],0x10
1002b5e3:	call   0x10006490
1002b5e8:	add    esp,0xc
1002b5eb:	mov    BYTE PTR [ebp-0x4],0x11
1002b5ef:	cmp    DWORD PTR [ebp+0xa4],0x10
1002b5f6:	mov    ecx,DWORD PTR [ebp+0x90]
1002b5fc:	jae    0x1002b604
1002b5fe:	lea    ecx,[ebp+0x90]
1002b604:	push   ecx
1002b605:	push   eax
1002b606:	lea    eax,[ebp-0x190]
1002b60c:	push   eax
1002b60d:	call   0x10006490
1002b612:	add    esp,0xc
1002b615:	push   DWORD PTR [ebp+0xd8]
1002b61b:	lea    ecx,[ebp-0x24]
1002b61e:	push   ecx
1002b61f:	push   eax
1002b620:	lea    eax,[ebp+0xa8]
1002b626:	push   eax
1002b627:	lea    eax,[ebp-0x84]
1002b62d:	push   eax
1002b62e:	lea    edx,[ebp-0xb0]
1002b634:	mov    BYTE PTR [ebp-0x4],0x12
1002b638:	call   0x10030ee0
1002b63d:	mov    ecx,DWORD PTR [eax]
1002b63f:	mov    esi,ecx
1002b641:	xor    ebx,ebx
1002b643:	add    esp,0x14
1002b646:	mov    DWORD PTR [eax],ebx
1002b648:	mov    DWORD PTR [ebp-0x54],esi
1002b64b:	push   DWORD PTR [ebp-0x84]
1002b651:	call   0x10042e92
1002b656:	pop    ecx
1002b657:	xor    edi,edi
1002b659:	push   ebx
1002b65a:	inc    edi
1002b65b:	push   edi
1002b65c:	lea    ecx,[ebp-0x190]
1002b662:	call   0x100012f0
1002b667:	push   ebx
1002b668:	push   edi
1002b669:	lea    ecx,[ebp-0xe8]
1002b66f:	call   0x100012f0
1002b674:	push   ebx
1002b675:	push   edi
1002b676:	lea    ecx,[ebp-0x174]
1002b67c:	call   0x100012f0
1002b681:	push   ebx
1002b682:	push   edi
1002b683:	lea    ecx,[ebp-0x13c]
1002b689:	call   0x100012f0
1002b68e:	push   ebx
1002b68f:	push   edi
1002b690:	lea    ecx,[ebp-0x104]
1002b696:	call   0x100012f0
1002b69b:	push   ebx
1002b69c:	push   edi
1002b69d:	lea    ecx,[ebp-0x120]
1002b6a3:	call   0x100012f0
1002b6a8:	push   ebx
1002b6a9:	push   edi
1002b6aa:	lea    ecx,[ebp-0xb0]
1002b6b0:	mov    BYTE PTR [ebp-0x4],0x1a
1002b6b4:	call   0x100012f0
1002b6b9:	cmp    esi,ebx
1002b6bb:	jne    0x1002b762
1002b6c1:	call   0x10018370
1002b6c6:	cmp    DWORD PTR [ebp+0xc0],0x10
1002b6cd:	mov    eax,DWORD PTR [ebp+0xac]
1002b6d3:	jae    0x1002b6db
1002b6d5:	lea    eax,[ebp+0xac]
1002b6db:	push   eax
1002b6dc:	call   0x10002080
1002b6e1:	push   0x5
1002b6e3:	call   0x10037980
1002b6e8:	pop    ecx
1002b6e9:	pop    ecx
1002b6ea:	push   DWORD PTR [ebp-0x14]
1002b6ed:	lea    edi,[ebp-0x1c]
1002b6f0:	call   0x1002bbdf
1002b6f5:	push   ebx
1002b6f6:	call   0x10042e92
1002b6fb:	mov    eax,DWORD PTR [ebp-0x28]
1002b6fe:	pop    ecx
1002b6ff:	add    eax,0xfffffff0
1002b702:	call   0x10002081
1002b707:	push   ebx
1002b708:	push   0x1
1002b70a:	lea    ecx,[ebp+0x8c]
1002b710:	call   0x100012f0
1002b715:	push   ebx
1002b716:	push   0x1
1002b718:	lea    ecx,[ebp+0xa8]
1002b71e:	call   0x100012f0
1002b723:	mov    BYTE PTR [ebp-0x4],0x1
1002b727:	mov    eax,DWORD PTR [ebp-0x20]
1002b72a:	cmp    eax,ebx
1002b72c:	je     0x1002b734
1002b72e:	mov    ecx,DWORD PTR [eax]
1002b730:	push   eax
1002b731:	call   DWORD PTR [ecx+0x8]
1002b734:	lea    esi,[ebp-0x1c]
1002b737:	call   0x1002bbc7
1002b73c:	mov    eax,DWORD PTR [ebp-0x14]
1002b73f:	mov    ecx,DWORD PTR [ebp-0xc]
1002b742:	mov    DWORD PTR fs:0x0,ecx
1002b749:	pop    ecx
1002b74a:	pop    edi
1002b74b:	pop    esi
1002b74c:	pop    ebx
1002b74d:	mov    ecx,DWORD PTR [ebp+0xc4]
1002b753:	xor    ecx,ebp
1002b755:	call   0x10042e97
1002b75a:	add    ebp,0xc8
1002b760:	leave  
1002b761:	ret    
1002b762:	mov    eax,DWORD PTR [ebp-0x24]
1002b765:	mov    DWORD PTR [ebp-0x3c],eax
1002b768:	lea    eax,[ebp-0x40]
1002b76b:	push   eax
1002b76c:	mov    DWORD PTR [ebp-0x40],ebx
1002b76f:	mov    DWORD PTR [ebp-0x38],esi
1002b772:	call   0x100377e0
1002b777:	mov    DWORD PTR [ebp-0x80],eax
1002b77a:	mov    DWORD PTR [ebp-0x58],ebx
1002b77d:	mov    eax,DWORD PTR [ebp-0x58]
1002b780:	cmp    eax,DWORD PTR [ebp-0x80]
1002b783:	je     0x1002bb29
1002b789:	lea    eax,[ebp-0x40]
1002b78c:	push   eax
1002b78d:	lea    esi,[ebp+0x70]
1002b790:	call   0x100374a0
1002b795:	lea    eax,[ebp-0x40]
1002b798:	push   eax
1002b799:	mov    BYTE PTR [ebp-0x4],0x1b
1002b79d:	call   0x100377e0
1002b7a2:	mov    DWORD PTR [ebp-0x7c],eax
1002b7a5:	lea    eax,[ebp-0x34]
1002b7a8:	push   eax
1002b7a9:	call   0x1002ea1f
1002b7ae:	test   eax,eax
1002b7b0:	jge    0x1002b7cf
1002b7b2:	push   DWORD PTR [ebp-0x14]
1002b7b5:	lea    edi,[ebp-0x1c]
1002b7b8:	call   0x1002bbdf
1002b7bd:	push   ebx
1002b7be:	push   0x1
1002b7c0:	mov    ecx,esi
1002b7c2:	call   0x100012f0
1002b7c7:	push   DWORD PTR [ebp-0x54]
1002b7ca:	jmp    0x1002b6f6
1002b7cf:	mov    esi,DWORD PTR [ebp-0x34]
1002b7d2:	cmp    esi,ebx
1002b7d4:	mov    DWORD PTR [ebp-0x24],esi
1002b7d7:	je     0x1002b7df
1002b7d9:	mov    eax,DWORD PTR [esi]
1002b7db:	push   esi
1002b7dc:	call   DWORD PTR [eax+0x4]
1002b7df:	mov    BYTE PTR [ebp-0x4],0x1c
1002b7e3:	mov    DWORD PTR [ebp-0x50],ebx
1002b7e6:	mov    eax,DWORD PTR [ebp-0x50]
1002b7e9:	cmp    eax,DWORD PTR [ebp-0x7c]
1002b7ec:	jge    0x1002bae0
1002b7f2:	lea    eax,[ebp-0x40]
1002b7f5:	push   eax
1002b7f6:	lea    esi,[ebp-0x158]
1002b7fc:	call   0x100374a0
1002b801:	lea    ecx,[ebp-0x5c]
1002b804:	push   ecx
1002b805:	mov    ebx,eax
1002b807:	mov    BYTE PTR [ebp-0x4],0x1d
1002b80b:	call   0x100341a0
1002b810:	pop    ecx
1002b811:	push   0x0
1002b813:	push   0x1
1002b815:	mov    ecx,esi
1002b817:	mov    BYTE PTR [ebp-0x4],0x1f
1002b81b:	call   0x100012f0
1002b820:	lea    eax,[ebp-0x40]
1002b823:	push   eax
1002b824:	lea    esi,[ebp-0xcc]
1002b82a:	call   0x100374a0
1002b82f:	lea    ecx,[ebp-0x48]
1002b832:	push   ecx
1002b833:	mov    ebx,eax
1002b835:	mov    BYTE PTR [ebp-0x4],0x20
1002b839:	call   0x100341a0
1002b83e:	pop    ecx
1002b83f:	push   0x0
1002b841:	push   0x1
1002b843:	mov    ecx,esi
1002b845:	mov    BYTE PTR [ebp-0x4],0x22
1002b849:	call   0x100012f0
1002b84e:	lea    eax,[ebp-0x40]
1002b851:	push   eax
1002b852:	lea    esi,[ebp+0x1c]
1002b855:	call   0x100374a0
1002b85a:	mov    edx,esi
1002b85c:	lea    esi,[ebp+0x54]
1002b85f:	mov    BYTE PTR [ebp-0x4],0x23
1002b863:	call   0x100338b0
1002b868:	lea    eax,[ebp-0x60]
1002b86b:	push   eax
1002b86c:	mov    ebx,esi
1002b86e:	mov    BYTE PTR [ebp-0x4],0x24
1002b872:	call   0x100341a0
1002b877:	pop    ecx
1002b878:	lea    eax,[ebp-0x40]
1002b87b:	push   eax
1002b87c:	lea    esi,[ebp-0xcc]
1002b882:	mov    BYTE PTR [ebp-0x4],0x25
1002b886:	call   0x100374a0
1002b88b:	lea    ecx,[ebp-0x44]
1002b88e:	push   ecx
1002b88f:	mov    ebx,eax
1002b891:	mov    BYTE PTR [ebp-0x4],0x26
1002b895:	call   0x100341a0
1002b89a:	pop    ecx
1002b89b:	push   0x0
1002b89d:	push   0x1
1002b89f:	mov    ecx,esi
1002b8a1:	mov    BYTE PTR [ebp-0x4],0x28
1002b8a5:	call   0x100012f0
1002b8aa:	lea    eax,[ebp-0x40]
1002b8ad:	push   eax
1002b8ae:	lea    esi,[ebp+0x0]
1002b8b1:	call   0x100374a0
1002b8b6:	lea    eax,[ebp-0x4c]
1002b8b9:	mov    BYTE PTR [ebp-0x4],0x29
1002b8bd:	push   eax
1002b8be:	mov    ebx,esi
1002b8c0:	call   0x100341a0
1002b8c5:	pop    ecx
1002b8c6:	lea    eax,[ebp-0x40]
1002b8c9:	push   eax
1002b8ca:	lea    esi,[ebp+0x38]
1002b8cd:	mov    BYTE PTR [ebp-0x4],0x2a
1002b8d1:	call   0x100374a0
1002b8d6:	mov    BYTE PTR [ebp-0x4],0x2b
1002b8da:	cmp    DWORD PTR [ebp+0x50],0x10
1002b8de:	mov    eax,DWORD PTR [ebp+0x3c]
1002b8e1:	jae    0x1002b8e6
1002b8e3:	lea    eax,[ebp+0x3c]
1002b8e6:	push   eax
1002b8e7:	call   0x10045cb5
1002b8ec:	mov    DWORD PTR [ebp-0x2c],eax
1002b8ef:	sar    eax,0x6
1002b8f2:	pop    ecx
1002b8f3:	and    eax,0x3
1002b8f6:	push   eax
1002b8f7:	lea    eax,[ebp+0x1c]
1002b8fa:	push   eax
1002b8fb:	lea    ebx,[ebp+0x0]
1002b8fe:	mov    edi,0x10080ee8
1002b903:	call   0x100197a8
1002b908:	lea    eax,[ebp-0x68]
1002b90b:	push   eax
1002b90c:	call   0x1002e999
1002b911:	test   eax,eax
1002b913:	jge    0x1002b9cf
1002b919:	push   DWORD PTR [ebp-0x14]
1002b91c:	lea    edi,[ebp-0x1c]
1002b91f:	call   0x1002bbdf
1002b924:	xor    esi,esi
1002b926:	xor    ebx,ebx
1002b928:	push   esi
1002b929:	inc    ebx
1002b92a:	push   ebx
1002b92b:	lea    ecx,[ebp+0x38]
1002b92e:	call   0x100012f0
1002b933:	lea    edi,[ebp-0x4c]
1002b936:	call   0x100025c2
1002b93b:	push   esi
1002b93c:	push   ebx
1002b93d:	lea    ecx,[ebp+0x0]
1002b940:	call   0x100012f0
1002b945:	lea    edi,[ebp-0x44]
1002b948:	call   0x100025c2
1002b94d:	lea    edi,[ebp-0x60]
1002b950:	call   0x100025c2
1002b955:	push   esi
1002b956:	push   ebx
1002b957:	lea    ecx,[ebp+0x54]
1002b95a:	call   0x100012f0
1002b95f:	push   esi
1002b960:	push   ebx
1002b961:	lea    ecx,[ebp+0x1c]
1002b964:	call   0x100012f0
1002b969:	lea    edi,[ebp-0x48]
1002b96c:	call   0x100025c2
1002b971:	lea    edi,[ebp-0x5c]
1002b974:	call   0x100025c2
1002b979:	mov    BYTE PTR [ebp-0x4],0x1b
1002b97d:	mov    eax,DWORD PTR [ebp-0x24]
1002b980:	cmp    eax,esi
1002b982:	je     0x1002b98a
1002b984:	mov    ecx,DWORD PTR [eax]
1002b986:	push   eax
1002b987:	call   DWORD PTR [ecx+0x8]
1002b98a:	push   esi
1002b98b:	push   ebx
1002b98c:	lea    ecx,[ebp+0x70]
1002b98f:	call   0x100012f0
1002b994:	push   DWORD PTR [ebp-0x54]
1002b997:	call   0x10042e92
1002b99c:	mov    eax,DWORD PTR [ebp-0x28]
1002b99f:	pop    ecx
1002b9a0:	add    eax,0xfffffff0
1002b9a3:	call   0x10002081
1002b9a8:	push   esi
1002b9a9:	push   ebx
1002b9aa:	lea    ecx,[ebp+0x8c]
1002b9b0:	call   0x100012f0
1002b9b5:	push   esi
1002b9b6:	push   ebx
1002b9b7:	lea    ecx,[ebp+0xa8]
1002b9bd:	call   0x100012f0
1002b9c2:	mov    BYTE PTR [ebp-0x4],bl
1002b9c5:	mov    eax,DWORD PTR [ebp-0x20]
1002b9c8:	cmp    eax,esi
1002b9ca:	jmp    0x1002b72c
1002b9cf:	mov    edi,DWORD PTR [ebp-0x68]
1002b9d2:	lea    eax,[edi+0x8]
1002b9d5:	lea    esi,[ebp-0x5c]
1002b9d8:	call   0x10010e3a
1002b9dd:	lea    eax,[edi+0xc]
1002b9e0:	lea    esi,[ebp-0x48]
1002b9e3:	call   0x10010e3a
1002b9e8:	lea    eax,[edi+0x10]
1002b9eb:	lea    esi,[ebp-0x60]
1002b9ee:	call   0x10010e3a
1002b9f3:	lea    eax,[edi+0x14]
1002b9f6:	lea    esi,[ebp-0x44]
1002b9f9:	call   0x10010e3a
1002b9fe:	lea    eax,[edi+0x18]
1002ba01:	lea    esi,[ebp-0x4c]
1002ba04:	call   0x10010e3a
1002ba09:	mov    eax,DWORD PTR [ebp-0x2c]
1002ba0c:	mov    DWORD PTR [edi+0x1c],eax
1002ba0f:	mov    eax,DWORD PTR [edi]
1002ba11:	push   edi
1002ba12:	mov    DWORD PTR [ebp-0x2c],edi
1002ba15:	call   DWORD PTR [eax+0x4]
1002ba18:	mov    BYTE PTR [ebp-0x4],0x2c
1002ba1c:	mov    WORD PTR [ebp-0x94],0x9
1002ba25:	mov    DWORD PTR [ebp-0x8c],edi
1002ba2b:	mov    eax,DWORD PTR [edi]
1002ba2d:	push   edi
1002ba2e:	call   DWORD PTR [eax+0x4]
1002ba31:	lea    eax,[ebp-0x94]
1002ba37:	mov    BYTE PTR [ebp-0x4],0x2d
1002ba3b:	xor    ebx,ebx
1002ba3d:	push   eax
1002ba3e:	lea    esi,[ebp-0x78]
1002ba41:	mov    WORD PTR [ebp-0x78],bx
1002ba45:	call   0x1002ae8c
1002ba4a:	mov    eax,esi
1002ba4c:	mov    BYTE PTR [ebp-0x4],0x2e
1002ba50:	mov    esi,DWORD PTR [ebp-0x34]
1002ba53:	push   eax
1002ba54:	add    esi,0x4
1002ba57:	call   0x1002d389
1002ba5c:	mov    esi,DWORD PTR ds:0x10066294
1002ba62:	lea    eax,[ebp-0x78]
1002ba65:	push   eax
1002ba66:	call   esi
1002ba68:	lea    eax,[ebp-0x94]
1002ba6e:	push   eax
1002ba6f:	call   esi
1002ba71:	mov    BYTE PTR [ebp-0x4],0x2b
1002ba75:	mov    eax,DWORD PTR [edi]
1002ba77:	push   edi
1002ba78:	call   DWORD PTR [eax+0x8]
1002ba7b:	xor    esi,esi
1002ba7d:	push   ebx
1002ba7e:	inc    esi
1002ba7f:	push   esi
1002ba80:	lea    ecx,[ebp+0x38]
1002ba83:	call   0x100012f0
1002ba88:	lea    edi,[ebp-0x4c]
1002ba8b:	call   0x100025c2
1002ba90:	push   ebx
1002ba91:	push   esi
1002ba92:	lea    ecx,[ebp+0x0]
1002ba95:	call   0x100012f0
1002ba9a:	lea    edi,[ebp-0x44]
1002ba9d:	call   0x100025c2
1002baa2:	lea    edi,[ebp-0x60]
1002baa5:	call   0x100025c2
1002baaa:	push   ebx
1002baab:	push   esi
1002baac:	lea    ecx,[ebp+0x54]
1002baaf:	call   0x100012f0
1002bab4:	push   ebx
1002bab5:	push   esi
1002bab6:	lea    ecx,[ebp+0x1c]
1002bab9:	call   0x100012f0
1002babe:	lea    edi,[ebp-0x48]
1002bac1:	call   0x100025c2
1002bac6:	lea    edi,[ebp-0x5c]
1002bac9:	mov    BYTE PTR [ebp-0x4],0x1c
1002bacd:	call   0x100025c2
1002bad2:	inc    DWORD PTR [ebp-0x50]
1002bad5:	mov    esi,DWORD PTR [ebp-0x24]
1002bad8:	xor    edi,edi
1002bada:	inc    edi
1002badb:	jmp    0x1002b7e6
1002bae0:	sub    esp,0x10
1002bae3:	cmp    esi,ebx
1002bae5:	mov    eax,esp
1002bae7:	mov    DWORD PTR [ebp-0x2c],esp
1002baea:	mov    WORD PTR [eax],0x9
1002baef:	mov    DWORD PTR [eax+0x8],esi
1002baf2:	je     0x1002bafa
1002baf4:	mov    eax,DWORD PTR [esi]
1002baf6:	push   esi
1002baf7:	call   DWORD PTR [eax+0x4]
1002bafa:	push   DWORD PTR [ebp-0x64]
1002bafd:	lea    ecx,[ebp+0x70]
1002bb00:	call   0x1002af82
1002bb05:	cmp    esi,ebx
1002bb07:	mov    BYTE PTR [ebp-0x4],0x1b
1002bb0b:	je     0x1002bb13
1002bb0d:	mov    eax,DWORD PTR [esi]
1002bb0f:	push   esi
1002bb10:	call   DWORD PTR [eax+0x8]
1002bb13:	push   ebx
1002bb14:	push   edi
1002bb15:	lea    ecx,[ebp+0x70]
1002bb18:	mov    BYTE PTR [ebp-0x4],0x1a
1002bb1c:	call   0x100012f0
1002bb21:	inc    DWORD PTR [ebp-0x58]
1002bb24:	jmp    0x1002b77d
1002bb29:	lea    eax,[ebp-0x2c]
1002bb2c:	push   eax
1002bb2d:	lea    ecx,[ebp-0x40]
1002bb30:	call   0x10037670
1002bb35:	lea    edi,[ebp-0x18]
1002bb38:	mov    BYTE PTR [ebp-0x4],0x2f
1002bb3c:	call   0x100040ab
1002bb41:	mov    BYTE PTR [ebp-0x4],0x1a
1002bb45:	mov    eax,DWORD PTR [ebp-0x2c]
1002bb48:	add    eax,0xfffffff0
1002bb4b:	call   0x10002081
1002bb50:	mov    esi,DWORD PTR [ebp-0x20]
1002bb53:	cmp    DWORD PTR [ebp-0x1c],esi
1002bb56:	je     0x1002bb64
1002bb58:	mov    edi,esi
1002bb5a:	lea    esi,[ebp-0x1c]
1002bb5d:	call   0x1000763b
1002bb62:	mov    esi,edi
1002bb64:	push   DWORD PTR [ebp-0x14]
1002bb67:	lea    edi,[ebp-0x1c]
1002bb6a:	call   0x1002bbdf
1002bb6f:	push   DWORD PTR [ebp-0x54]
1002bb72:	call   0x10042e92
1002bb77:	mov    eax,DWORD PTR [ebp-0x28]
1002bb7a:	pop    ecx
1002bb7b:	add    eax,0xfffffff0
1002bb7e:	call   0x10002081
1002bb83:	push   ebx
1002bb84:	push   0x1
1002bb86:	lea    ecx,[ebp+0x8c]
1002bb8c:	call   0x100012f0
1002bb91:	push   ebx
1002bb92:	push   0x1
1002bb94:	lea    ecx,[ebp+0xa8]
1002bb9a:	call   0x100012f0
1002bb9f:	cmp    esi,ebx
1002bba1:	mov    BYTE PTR [ebp-0x4],0x1
1002bba5:	je     0x1002b734
1002bbab:	mov    eax,DWORD PTR [esi]
1002bbad:	push   esi
1002bbae:	call   DWORD PTR [eax+0x8]
1002bbb1:	jmp    0x1002b734
1002bbb6:	push   DWORD PTR [ebp-0x14]
1002bbb9:	lea    edi,[ebp-0x1c]
1002bbbc:	call   0x1002bbdf
1002bbc1:	mov    eax,0x1002b734
1002bbc6:	ret    
1002bbc7:	mov    eax,DWORD PTR [esi+0x4]
1002bbca:	sub    eax,0x10
1002bbcd:	call   0x10002081
1002bbd2:	mov    eax,DWORD PTR [esi]
1002bbd4:	test   eax,eax
1002bbd6:	je     0x1002bbde
1002bbd8:	mov    ecx,DWORD PTR [eax]
1002bbda:	push   eax
1002bbdb:	call   DWORD PTR [ecx+0x8]
1002bbde:	ret    
1002bbdf:	push   0x0
1002bbe1:	mov    eax,0x10060003
1002bbe6:	call   0x10059a35
1002bbeb:	mov    esi,DWORD PTR [ebp+0x8]
1002bbee:	mov    eax,DWORD PTR [edi]
1002bbf0:	test   eax,eax
1002bbf2:	mov    DWORD PTR [esi],eax
1002bbf4:	je     0x1002bbfc
1002bbf6:	mov    ecx,DWORD PTR [eax]
1002bbf8:	push   eax
1002bbf9:	call   DWORD PTR [ecx+0x4]
1002bbfc:	and    DWORD PTR [ebp-0x4],0x0
1002bc00:	mov    eax,DWORD PTR [edi+0x4]
1002bc03:	sub    eax,0x10
1002bc06:	call   0x10004dbe
1002bc0b:	add    eax,0x10
1002bc0e:	mov    DWORD PTR [esi+0x4],eax
1002bc11:	mov    eax,esi
1002bc13:	call   0x10059b0d
1002bc18:	ret    0x4
1002bc1b:	push   0x0
1002bc1d:	mov    eax,0x10061955
1002bc22:	call   0x10059a35
1002bc27:	mov    ebx,DWORD PTR [ebp+0x8]
1002bc2a:	mov    eax,DWORD PTR [ebp+0xc]
1002bc2d:	mov    DWORD PTR [ebx+0x8],eax
1002bc30:	mov    eax,DWORD PTR [ebp+0x10]
1002bc33:	mov    edi,0x10080a74
1002bc38:	mov    DWORD PTR [ebx+0x4],0x1
1002bc3f:	mov    DWORD PTR [ebx],0x10072f2c
1002bc45:	mov    DWORD PTR [ebx+0xc],eax
1002bc48:	and    DWORD PTR [ebx+0x10],0x0
1002bc4c:	lea    esi,[ebx+0x14]
1002bc4f:	mov    ecx,edi
1002bc51:	call   0x10002151
1002bc56:	xor    eax,eax
1002bc58:	mov    DWORD PTR [ebx+0x1c],eax
1002bc5b:	mov    DWORD PTR [ebp-0x4],eax
1002bc5e:	lea    esi,[ebx+0x24]
1002bc61:	mov    ecx,edi
1002bc63:	mov    DWORD PTR [ebx+0x20],eax
1002bc66:	call   0x10002151
1002bc6b:	xor    edi,edi
1002bc6d:	mov    DWORD PTR [ebx+0x2c],edi
1002bc70:	mov    eax,DWORD PTR [ebp+0x14]
1002bc73:	mov    BYTE PTR [ebp-0x4],0x1
1002bc77:	mov    eax,DWORD PTR [eax]
1002bc79:	sub    eax,0x10
1002bc7c:	call   0x10004dbe
1002bc81:	mov    esi,DWORD PTR ds:0x10066070
1002bc87:	add    eax,0x10
1002bc8a:	mov    DWORD PTR [ebx+0x30],eax
1002bc8d:	mov    BYTE PTR [ebx+0x18],0x0
1002bc91:	mov    BYTE PTR [ebx+0x28],0x0
1002bc95:	mov    eax,DWORD PTR [ebx+0x1c]
1002bc98:	cmp    eax,edi
1002bc9a:	je     0x1002bc9f
1002bc9c:	push   eax
1002bc9d:	call   esi
1002bc9f:	mov    DWORD PTR [ebx+0x1c],edi
1002bca2:	mov    eax,DWORD PTR [ebx+0x2c]
1002bca5:	cmp    eax,edi
1002bca7:	je     0x1002bcac
1002bca9:	push   eax
1002bcaa:	call   esi
1002bcac:	lea    eax,[ebp+0xc]
1002bcaf:	push   eax
1002bcb0:	mov    DWORD PTR [ebx+0x2c],edi
1002bcb3:	call   0x1002ea9f
1002bcb8:	test   eax,eax
1002bcba:	jl     0x1002bced
1002bcbc:	mov    edi,DWORD PTR [ebp+0xc]
1002bcbf:	test   edi,edi
1002bcc1:	je     0x1002bcc9
1002bcc3:	mov    eax,DWORD PTR [edi]
1002bcc5:	push   edi
1002bcc6:	call   DWORD PTR [eax+0x4]
1002bcc9:	cmp    DWORD PTR [ebx+0x10],edi
1002bccc:	je     0x1002bcd6
1002bcce:	lea    esi,[ebx+0x10]
1002bcd1:	call   0x1000763b
1002bcd6:	cmp    DWORD PTR [ebx+0x20],edi
1002bcd9:	je     0x1002bce3
1002bcdb:	lea    esi,[ebx+0x20]
1002bcde:	call   0x1000763b
1002bce3:	test   edi,edi
1002bce5:	je     0x1002bced
1002bce7:	mov    eax,DWORD PTR [edi]
1002bce9:	push   edi
1002bcea:	call   DWORD PTR [eax+0x8]
1002bced:	mov    eax,ebx
1002bcef:	call   0x10059b0d
1002bcf4:	ret    0x10
1002bcf7:	push   DWORD PTR [esp+0x8]
1002bcfb:	push   0x1006f520
1002bd00:	call   0x1002ae46
1002bd05:	test   eax,eax
1002bd07:	pop    ecx
1002bd08:	pop    ecx
1002bd09:	je     0x1002bd19
1002bd0b:	mov    eax,DWORD PTR [esp+0x4]
1002bd0f:	mov    ecx,DWORD PTR [esp+0xc]
1002bd13:	mov    DWORD PTR [ecx],eax
1002bd15:	xor    eax,eax
1002bd17:	jmp    0x1002bd1e
1002bd19:	mov    eax,0x80004005
1002bd1e:	ret    0xc
1002bd21:	push   esi
1002bd22:	mov    esi,eax
1002bd24:	mov    eax,DWORD PTR [esi+0xc]
1002bd27:	test   eax,eax
1002bd29:	je     0x1002bd32
1002bd2b:	push   eax
1002bd2c:	call   DWORD PTR ds:0x10066070
1002bd32:	and    DWORD PTR [esi+0xc],0x0
1002bd36:	mov    eax,DWORD PTR [esi+0x4]
1002bd39:	sub    eax,0x10
1002bd3c:	call   0x10002081
1002bd41:	mov    esi,DWORD PTR [esi]
1002bd43:	test   esi,esi
1002bd45:	je     0x1002bd4d
1002bd47:	mov    eax,DWORD PTR [esi]
1002bd49:	push   esi
1002bd4a:	call   DWORD PTR [eax+0x8]
1002bd4d:	pop    esi
1002bd4e:	ret    
1002bd4f:	push   0x10
1002bd51:	mov    eax,0x10064d1f
1002bd56:	call   0x10059a68
1002bd5b:	call   0x10002080
1002bd60:	mov    ebx,DWORD PTR [ebp+0x8]
1002bd63:	xor    esi,esi
1002bd65:	mov    DWORD PTR [ebp-0x4],esi
1002bd68:	mov    DWORD PTR [ebp-0x14],ebx
1002bd6b:	call   0x10002080
1002bd70:	push   esi
1002bd71:	push   esi
1002bd72:	call   DWORD PTR ds:0x10066440
1002bd78:	push   0x2710
1002bd7d:	lea    eax,[ebx+0x30]
1002bd80:	push   esi
1002bd81:	push   eax
1002bd82:	lea    ecx,[ebp-0x1c]
1002bd85:	mov    BYTE PTR [ebp-0x4],0x1
1002bd89:	call   0x1002b2aa
1002bd8e:	add    esp,0xc
1002bd91:	mov    BYTE PTR [ebp-0x4],0x2
1002bd95:	mov    edi,DWORD PTR [ebp-0x1c]
1002bd98:	lea    esi,[ebx+0x10]
1002bd9b:	cmp    DWORD PTR [esi],edi
1002bd9d:	je     0x1002bda4
1002bd9f:	call   0x1000763b
1002bda4:	lea    edi,[ebx+0x14]
1002bda7:	lea    eax,[ebp-0x18]
1002bdaa:	call   0x100040ab
1002bdaf:	cmp    DWORD PTR [esi],0x0
1002bdb2:	je     0x1002bdb8
1002bdb4:	mov    BYTE PTR [ebx+0x18],0x1
1002bdb8:	lea    esi,[ebp-0x1c]
1002bdbb:	call   0x1002bbc7
1002bdc0:	jmp    0x1002bdd3
1002bdc2:	push   0x4
1002bdc4:	call   0x10037980
1002bdc9:	pop    ecx
1002bdca:	mov    eax,0x1002bdd0
1002bdcf:	ret    
1002bdd0:	mov    ebx,DWORD PTR [ebp+0x8]
1002bdd3:	call   DWORD PTR ds:0x10066424
1002bdd9:	or     DWORD PTR [ebp-0x4],0xffffffff
1002bddd:	test   ebx,ebx
1002bddf:	je     0x1002bde7
1002bde1:	mov    eax,DWORD PTR [ebx]
1002bde3:	push   ebx
1002bde4:	call   DWORD PTR [eax+0x8]
1002bde7:	xor    eax,eax
1002bde9:	call   0x10059b0d
1002bdee:	ret    0x4
1002bdf1:	push   0x10
1002bdf3:	mov    eax,0x10064cf4
1002bdf8:	call   0x10059a68
1002bdfd:	mov    ebx,DWORD PTR [ebp+0x8]
1002be00:	xor    eax,eax
1002be02:	push   eax
1002be03:	mov    DWORD PTR [ebp-0x4],eax
1002be06:	push   eax
1002be07:	mov    DWORD PTR [ebp-0x14],ebx
1002be0a:	call   DWORD PTR ds:0x10066440
1002be10:	push   0x186a0
1002be15:	lea    eax,[ebx+0x30]
1002be18:	push   0x1
1002be1a:	push   eax
1002be1b:	lea    ecx,[ebp-0x1c]
1002be1e:	mov    BYTE PTR [ebp-0x4],0x1
1002be22:	call   0x1002b2aa
1002be27:	add    esp,0xc
1002be2a:	mov    BYTE PTR [ebp-0x4],0x2
1002be2e:	mov    edi,DWORD PTR [ebp-0x1c]
1002be31:	lea    esi,[ebx+0x20]
1002be34:	cmp    DWORD PTR [esi],edi
1002be36:	je     0x1002be3d
1002be38:	call   0x1000763b
1002be3d:	lea    edi,[ebx+0x24]
1002be40:	lea    eax,[ebp-0x18]
1002be43:	call   0x100040ab
1002be48:	cmp    DWORD PTR [esi],0x0
1002be4b:	je     0x1002be51
1002be4d:	mov    BYTE PTR [ebx+0x28],0x1
1002be51:	lea    esi,[ebp-0x1c]
1002be54:	call   0x1002bbc7
1002be59:	jmp    0x1002be6c
1002be5b:	push   0x4
1002be5d:	call   0x10037980
1002be62:	pop    ecx
1002be63:	mov    eax,0x1002be69
1002be68:	ret    
1002be69:	mov    ebx,DWORD PTR [ebp+0x8]
1002be6c:	call   DWORD PTR ds:0x10066424
1002be72:	or     DWORD PTR [ebp-0x4],0xffffffff
1002be76:	test   ebx,ebx
1002be78:	je     0x1002be80
1002be7a:	mov    eax,DWORD PTR [ebx]
1002be7c:	push   ebx
1002be7d:	call   DWORD PTR [eax+0x8]
1002be80:	xor    eax,eax
1002be82:	call   0x10059b0d
1002be87:	ret    0x4
1002be8a:	push   ebp
1002be8b:	mov    ebp,esp
1002be8d:	and    esp,0xfffffff8
1002be90:	push   0xffffffff
1002be92:	push   0x10062747
1002be97:	mov    eax,fs:0x0
1002be9d:	push   eax
1002be9e:	sub    esp,0x8c
1002bea4:	push   esi
1002bea5:	push   edi
1002bea6:	mov    eax,ds:0x1007e030
1002beab:	xor    eax,esp
1002bead:	push   eax
1002beae:	lea    eax,[esp+0x98]
1002beb5:	mov    fs:0x0,eax
1002bebb:	push   0x1930bbd4
1002bec0:	push   0x10072c30
1002bec5:	call   0x10004246
1002beca:	push   0x74c26098
1002becf:	push   eax
1002bed0:	call   0x10004246
1002bed5:	push   0x4684b0f6
1002beda:	push   eax
1002bedb:	call   0x10004246
1002bee0:	push   eax
1002bee1:	push   0xf
1002bee3:	mov    edi,0x10072c6c
1002bee8:	push   edi
1002bee9:	call   0x10004258
1002beee:	add    esp,0x24
1002bef1:	push   eax
1002bef2:	lea    ecx,[esp+0x44]
1002bef6:	call   0x100011cd
1002befb:	xor    esi,esi
1002befd:	push   esi
1002befe:	lea    eax,[esp+0x44]
1002bf02:	push   eax
1002bf03:	lea    eax,[esp+0x80]
1002bf0a:	push   eax
1002bf0b:	mov    DWORD PTR [esp+0xac],esi
1002bf12:	mov    eax,DWORD PTR [ebx+0x4]
1002bf15:	add    eax,0x18
1002bf18:	call   0x100084cc
1002bf1d:	push   eax
1002bf1e:	lea    eax,[esp+0x18]
1002bf22:	push   eax
1002bf23:	mov    BYTE PTR [esp+0xa8],0x1
1002bf2b:	call   0x1002d8a6
1002bf30:	pop    ecx
1002bf31:	pop    ecx
1002bf32:	push   esi
1002bf33:	push   0x1
1002bf35:	lea    ecx,[esp+0x80]
1002bf3c:	call   0x100012f0
1002bf41:	push   esi
1002bf42:	push   0x1
1002bf44:	lea    ecx,[esp+0x48]
1002bf48:	mov    BYTE PTR [esp+0xa8],0x4
1002bf50:	call   0x100012f0
1002bf55:	lea    eax,[esp+0x14]
1002bf59:	mov    BYTE PTR [esp+0xf],0x0
1002bf5e:	mov    DWORD PTR [esp+0x10],esi
1002bf62:	call   0x100045e9
1002bf67:	test   eax,eax
1002bf69:	je     0x1002c05a
1002bf6f:	cmp    BYTE PTR [esp+0xf],0x0
1002bf74:	jne    0x1002bfef
1002bf76:	push   0x2f0766cc
1002bf7b:	push   0x10072c7c
1002bf80:	call   0x10004246
1002bf85:	push   0x29baf1ee
1002bf8a:	push   eax
1002bf8b:	call   0x10004246
1002bf90:	push   0x4129c0b2
1002bf95:	push   eax
1002bf96:	call   0x10004246
1002bf9b:	push   0x715b464c
1002bfa0:	push   eax
1002bfa1:	call   0x10004246
1002bfa6:	push   eax
1002bfa7:	push   0x4
1002bfa9:	push   0x1006e0c0
1002bfae:	call   0x10004258
1002bfb3:	add    esp,0x2c
1002bfb6:	push   eax
1002bfb7:	push   DWORD PTR [esp+0x14]
1002bfbb:	lea    esi,[esp+0x1c]
1002bfbf:	call   0x100045ff
1002bfc4:	mov    esi,eax
1002bfc6:	call   0x1000658e
1002bfcb:	test   al,al
1002bfcd:	pop    ecx
1002bfce:	je     0x1002bfd5
1002bfd0:	mov    BYTE PTR [esp+0xf],0x1
1002bfd5:	inc    DWORD PTR [esp+0x10]
1002bfd9:	lea    eax,[esp+0x14]
1002bfdd:	call   0x100045e9
1002bfe2:	cmp    DWORD PTR [esp+0x10],eax
1002bfe6:	jne    0x1002bf6f
1002bfe8:	cmp    BYTE PTR [esp+0xf],0x0
1002bfed:	je     0x1002c05a
1002bfef:	push   0x10072cb0
1002bff4:	push   0x4
1002bff6:	push   0x1006e0c0
1002bffb:	call   0x10004258
1002c000:	add    esp,0xc
1002c003:	push   eax
1002c004:	lea    ecx,[esp+0x28]
1002c008:	call   0x100011cd
1002c00d:	push   0x10072cd8
1002c012:	push   0xf
1002c014:	push   edi
1002c015:	mov    BYTE PTR [esp+0xac],0x5
1002c01d:	call   0x10004258
1002c022:	add    esp,0xc
1002c025:	push   eax
1002c026:	lea    ecx,[esp+0x60]
1002c02a:	call   0x100011cd
1002c02f:	mov    BYTE PTR [esp+0xa0],0x6
1002c037:	mov    edx,DWORD PTR [ebx+0x4]
1002c03a:	lea    eax,[esp+0x5c]
1002c03e:	push   eax
1002c03f:	add    edx,0x18
1002c042:	lea    ecx,[esp+0x28]
1002c046:	call   0x100083b5
1002c04b:	push   0x0
1002c04d:	push   0x1
1002c04f:	lea    ecx,[esp+0x64]
1002c053:	call   0x100012f0
1002c058:	jmp    0x1002c08d
1002c05a:	push   0x10072d08
1002c05f:	push   0xf
1002c061:	push   edi
1002c062:	call   0x10004258
1002c067:	add    esp,0xc
1002c06a:	push   eax
1002c06b:	lea    ecx,[esp+0x28]
1002c06f:	call   0x100011cd
1002c074:	lea    eax,[esp+0x24]
1002c078:	push   eax
1002c079:	mov    BYTE PTR [esp+0xa4],0x7
1002c081:	mov    eax,DWORD PTR [ebx+0x4]
1002c084:	add    eax,0x18
1002c087:	push   eax
1002c088:	call   0x1000826a
1002c08d:	push   0x0
1002c08f:	push   0x1
1002c091:	lea    ecx,[esp+0x2c]
1002c095:	call   0x100012f0
1002c09a:	lea    esi,[esp+0x14]
1002c09e:	call   0x10004964
1002c0a3:	mov    ecx,DWORD PTR [esp+0x98]
1002c0aa:	mov    DWORD PTR fs:0x0,ecx
1002c0b1:	pop    ecx
1002c0b2:	pop    edi
1002c0b3:	pop    esi
1002c0b4:	mov    esp,ebp
1002c0b6:	pop    ebp
1002c0b7:	ret    
1002c0b8:	push   0x6c
1002c0ba:	mov    eax,0x10064e39
1002c0bf:	call   0x10059ad4
1002c0c4:	mov    esi,DWORD PTR [ebp+0x8]
1002c0c7:	push   DWORD PTR [esi]
1002c0c9:	lea    ecx,[ebp-0x30]
1002c0cc:	mov    DWORD PTR [ebp-0x74],esi
1002c0cf:	call   0x10008b47
1002c0d4:	xor    edi,edi
1002c0d6:	mov    DWORD PTR [ebp-0x4],edi
1002c0d9:	mov    DWORD PTR [ebp-0x54],edi
1002c0dc:	call   0x1002fa00
1002c0e1:	push   edi
1002c0e2:	lea    ecx,[ebp-0x4c]
1002c0e5:	mov    DWORD PTR [ebp-0x34],0xf
1002c0ec:	call   0x1000141c
1002c0f1:	xor    ebx,ebx
1002c0f3:	inc    ebx
1002c0f4:	push   ebx
1002c0f5:	lea    eax,[ebp-0x50]
1002c0f8:	push   eax
1002c0f9:	mov    BYTE PTR [ebp-0x4],0x3
1002c0fd:	call   0x100349f0
1002c102:	lea    eax,[ebp-0x5c]
1002c105:	push   eax
1002c106:	lea    ecx,[ebp-0x4c]
1002c109:	lea    edx,[ebp-0x50]
1002c10c:	mov    BYTE PTR [ebp-0x4],0x4
1002c110:	call   0x10036330
1002c115:	test   al,al
1002c117:	je     0x1002c14f
1002c119:	push   0x34
1002c11b:	call   0x1004349e
1002c120:	pop    ecx
1002c121:	mov    DWORD PTR [ebp-0x58],eax
1002c124:	cmp    eax,edi
1002c126:	mov    BYTE PTR [ebp-0x4],0x5
1002c12a:	je     0x1002c14a
1002c12c:	mov    eax,DWORD PTR [ebp-0x5c]
1002c12f:	mov    DWORD PTR [ebp-0x68],eax
1002c132:	lea    eax,[ebp-0x70]
1002c135:	push   eax
1002c136:	lea    eax,[ebp-0x4c]
1002c139:	push   eax
1002c13a:	push   DWORD PTR [ebp-0x58]
1002c13d:	mov    DWORD PTR [ebp-0x70],edi
1002c140:	mov    DWORD PTR [ebp-0x6c],edi
1002c143:	call   0x1000286f
1002c148:	jmp    0x1002c14c
1002c14a:	xor    eax,eax
1002c14c:	mov    DWORD PTR [ebp-0x54],eax
1002c14f:	push   DWORD PTR [ebp-0x50]
1002c152:	call   DWORD PTR ds:0x10066070
1002c158:	push   edi
1002c159:	push   ebx
1002c15a:	lea    ecx,[ebp-0x4c]
1002c15d:	call   0x100012f0
1002c162:	mov    DWORD PTR [ebp-0x4],ebx
1002c165:	cmp    DWORD PTR [ebp-0x54],edi
1002c168:	jne    0x1002c17e
1002c16a:	xor    bl,bl
1002c16c:	push   edi
1002c16d:	push   0x1
1002c16f:	lea    ecx,[ebp-0x30]
1002c172:	call   0x100012f0
1002c177:	mov    al,bl
1002c179:	jmp    0x1002c3d1
1002c17e:	cmp    DWORD PTR [ebp-0x18],0x10
1002c182:	mov    eax,DWORD PTR [ebp-0x2c]
1002c185:	jae    0x1002c18a
1002c187:	lea    eax,[ebp-0x2c]
1002c18a:	push   eax
1002c18b:	mov    DWORD PTR [ebp-0x6c],eax
1002c18e:	call   0x10043010
1002c193:	pop    ecx
1002c194:	mov    DWORD PTR [ebp-0x68],eax
1002c197:	lea    eax,[ebp-0x6c]
1002c19a:	push   eax
1002c19b:	push   DWORD PTR [ebp-0x54]
1002c19e:	call   0x1003a120
1002c1a3:	test   al,al
1002c1a5:	je     0x1002c3a8
1002c1ab:	call   DWORD PTR ds:0x10066168
1002c1b1:	mov    ebx,eax
1002c1b3:	push   ebx
1002c1b4:	mov    DWORD PTR [ebp-0x6c],ebx
1002c1b7:	call   DWORD PTR ds:0x10066170
1002c1bd:	mov    edi,DWORD PTR ds:0x1006616c
1002c1c3:	push   0x2
1002c1c5:	push   ebx
1002c1c6:	mov    DWORD PTR [ebp-0x68],eax
1002c1c9:	call   edi
1002c1cb:	mov    BYTE PTR [ebp-0x4],0x7
1002c1cf:	call   0x1002fa00
1002c1d4:	mov    eax,ds:0x10080a74
1002c1d9:	mov    ecx,0x10080a74
1002c1de:	call   DWORD PTR [eax+0xc]
1002c1e1:	add    eax,0x10
1002c1e4:	mov    DWORD PTR [ebp-0x64],eax
1002c1e7:	lea    eax,[ebp-0x5c]
1002c1ea:	push   eax
1002c1eb:	lea    eax,[ebp-0x64]
1002c1ee:	push   eax
1002c1ef:	lea    eax,[ebp-0x30]
1002c1f2:	push   eax
1002c1f3:	mov    BYTE PTR [ebp-0x4],0x8
1002c1f7:	push   DWORD PTR [esi+0x4]
1002c1fa:	lea    esi,[ebp-0x58]
1002c1fd:	call   0x1002c3d9
1002c202:	add    esp,0x10
1002c205:	test   al,al
1002c207:	je     0x1002c374
1002c20d:	call   0x1002fa00
1002c212:	mov    ebx,DWORD PTR [ebp-0x74]
1002c215:	call   0x1002be8a
1002c21a:	cmp    DWORD PTR [ebp-0x18],0x10
1002c21e:	mov    eax,DWORD PTR [ebp-0x2c]
1002c221:	jae    0x1002c226
1002c223:	lea    eax,[ebp-0x2c]
1002c226:	push   eax
1002c227:	call   0x10002080
1002c22c:	push   0x34
1002c22e:	call   0x1004349e
1002c233:	pop    ecx
1002c234:	pop    ecx
1002c235:	mov    DWORD PTR [ebp-0x50],eax
1002c238:	xor    ebx,ebx
1002c23a:	cmp    eax,ebx
1002c23c:	mov    BYTE PTR [ebp-0x4],0x9
1002c240:	je     0x1002c256
1002c242:	lea    ecx,[ebp-0x64]
1002c245:	push   ecx
1002c246:	push   DWORD PTR [ebp-0x5c]
1002c249:	push   DWORD PTR [ebp-0x58]
1002c24c:	push   eax
1002c24d:	call   0x1002bc1b
1002c252:	mov    edi,eax
1002c254:	jmp    0x1002c258
1002c256:	xor    edi,edi
1002c258:	mov    DWORD PTR [ebp-0x78],edi
1002c25b:	call   0x10002080
1002c260:	mov    DWORD PTR [ebp-0x50],ebx
1002c263:	mov    DWORD PTR [ebp-0x60],ebx
1002c266:	mov    BYTE PTR [ebp-0x4],0xc
1002c26a:	mov    eax,DWORD PTR [edi+0xc]
1002c26d:	test   al,0x2
1002c26f:	je     0x1002c298
1002c271:	test   al,0x4
1002c273:	jne    0x1002c298
1002c275:	mov    eax,DWORD PTR [edi]
1002c277:	push   edi
1002c278:	call   DWORD PTR [eax+0x4]
1002c27b:	push   ebx
1002c27c:	push   0x4
1002c27e:	push   edi
1002c27f:	push   0x1002bd4f
1002c284:	push   ebx
1002c285:	push   ebx
1002c286:	call   DWORD PTR ds:0x10066098
1002c28c:	push   0x2
1002c28e:	push   eax
1002c28f:	mov    DWORD PTR [ebp-0x50],eax
1002c292:	call   DWORD PTR ds:0x1006616c
1002c298:	mov    eax,DWORD PTR [edi+0xc]
1002c29b:	test   al,0x1
1002c29d:	je     0x1002c2bd
1002c29f:	test   al,0x8
1002c2a1:	jne    0x1002c2bd
1002c2a3:	mov    eax,DWORD PTR [edi]
1002c2a5:	push   edi
1002c2a6:	call   DWORD PTR [eax+0x4]
1002c2a9:	push   ebx
1002c2aa:	push   0x4
1002c2ac:	push   edi
1002c2ad:	push   0x1002bdf1
1002c2b2:	push   ebx
1002c2b3:	push   ebx
1002c2b4:	call   DWORD PTR ds:0x10066098
1002c2ba:	mov    DWORD PTR [ebp-0x60],eax
1002c2bd:	mov    eax,DWORD PTR [ebp-0x50]
1002c2c0:	cmp    eax,ebx
1002c2c2:	jne    0x1002c2e3
1002c2c4:	cmp    DWORD PTR [ebp-0x60],ebx
1002c2c7:	jne    0x1002c2e3
1002c2c9:	mov    eax,DWORD PTR [ebp-0x74]
1002c2cc:	mov    eax,DWORD PTR [eax+0x4]
1002c2cf:	lea    esi,[eax+0x38]
1002c2d2:	cmp    DWORD PTR [esi],edi
1002c2d4:	je     0x1002c2db
1002c2d6:	call   0x1000763b
1002c2db:	mov    eax,DWORD PTR [edi]
1002c2dd:	push   edi
1002c2de:	call   DWORD PTR [eax+0x8]
1002c2e1:	jmp    0x1002c33b
1002c2e3:	mov    ecx,DWORD PTR [ebp-0x60]
1002c2e6:	lea    esi,[edi+0x1c]
1002c2e9:	push   eax
1002c2ea:	mov    DWORD PTR [ebp-0x58],eax
1002c2ed:	mov    DWORD PTR [ebp-0x5c],ecx
1002c2f0:	mov    DWORD PTR [ebp-0x50],ebx
1002c2f3:	call   0x10004989
1002c2f8:	mov    eax,DWORD PTR [ebp-0x60]
1002c2fb:	lea    esi,[edi+0x2c]
1002c2fe:	push   eax
1002c2ff:	mov    DWORD PTR [ebp-0x60],ebx
1002c302:	call   0x10004989
1002c307:	mov    eax,DWORD PTR [ebp-0x74]
1002c30a:	mov    eax,DWORD PTR [eax+0x4]
1002c30d:	lea    esi,[eax+0x38]
1002c310:	cmp    DWORD PTR [esi],edi
1002c312:	je     0x1002c319
1002c314:	call   0x1000763b
1002c319:	mov    eax,DWORD PTR [edi]
1002c31b:	push   edi
1002c31c:	call   DWORD PTR [eax+0x8]
1002c31f:	cmp    DWORD PTR [ebp-0x58],ebx
1002c322:	je     0x1002c32d
1002c324:	push   DWORD PTR [ebp-0x58]
1002c327:	call   DWORD PTR ds:0x10066174
1002c32d:	cmp    DWORD PTR [ebp-0x5c],ebx
1002c330:	je     0x1002c33b
1002c332:	push   DWORD PTR [ebp-0x5c]
1002c335:	call   DWORD PTR ds:0x10066174
1002c33b:	mov    eax,DWORD PTR [ebp-0x64]
1002c33e:	add    eax,0xfffffff0
1002c341:	call   0x10002081
1002c346:	cmp    DWORD PTR [ebp-0x6c],ebx
1002c349:	je     0x1002c357
1002c34b:	push   DWORD PTR [ebp-0x68]
1002c34e:	push   DWORD PTR [ebp-0x6c]
1002c351:	call   DWORD PTR ds:0x1006616c
1002c357:	mov    BYTE PTR [ebp-0x4],bl
1002c35a:	push   DWORD PTR [ebp-0x54]
1002c35d:	call   0x10039f30
1002c362:	push   DWORD PTR [ebp-0x54]
1002c365:	call   0x10042e92
1002c36a:	pop    ecx
1002c36b:	mov    bl,0x1
1002c36d:	xor    edi,edi
1002c36f:	jmp    0x1002c16c
1002c374:	call   0x1002fa00
1002c379:	mov    eax,DWORD PTR [ebp-0x64]
1002c37c:	add    eax,0xfffffff0
1002c37f:	call   0x10002081
1002c384:	test   ebx,ebx
1002c386:	je     0x1002c38e
1002c388:	push   DWORD PTR [ebp-0x68]
1002c38b:	push   ebx
1002c38c:	call   edi
1002c38e:	xor    edi,edi
1002c390:	mov    BYTE PTR [ebp-0x4],0x0
1002c394:	push   DWORD PTR [ebp-0x54]
1002c397:	call   0x10039f30
1002c39c:	push   DWORD PTR [ebp-0x54]
1002c39f:	call   0x10042e92
1002c3a4:	pop    ecx
1002c3a5:	push   edi
1002c3a6:	jmp    0x1002c3c5
1002c3a8:	call   0x1002fa00
1002c3ad:	jmp    0x1002c390
1002c3af:	mov    eax,0x1002c3c3
1002c3b4:	ret    
1002c3b5:	push   0x4
1002c3b7:	call   0x10037980
1002c3bc:	pop    ecx
1002c3bd:	mov    eax,0x1002c3c3
1002c3c2:	ret    
1002c3c3:	push   0x0
1002c3c5:	push   0x1
1002c3c7:	lea    ecx,[ebp-0x30]
1002c3ca:	call   0x100012f0
1002c3cf:	xor    al,al
1002c3d1:	call   0x10059b30
1002c3d6:	ret    0x4
1002c3d9:	push   ebp
1002c3da:	mov    ebp,esp
1002c3dc:	and    esp,0xfffffff8
1002c3df:	push   ecx
1002c3e0:	push   edi
1002c3e1:	call   0x10022769
1002c3e6:	mov    ecx,eax
1002c3e8:	call   0x100231f6
1002c3ed:	and    DWORD PTR [esi],0x0
1002c3f0:	mov    edi,eax
1002c3f2:	test   edi,edi
1002c3f4:	je     0x1002c428
1002c3f6:	push   DWORD PTR [ebp+0x14]
1002c3f9:	push   DWORD PTR [ebp+0x10]
1002c3fc:	push   DWORD PTR [ebp+0xc]
1002c3ff:	push   DWORD PTR [ebp+0x8]
1002c402:	push   DWORD PTR [esi]
1002c404:	push   ecx
1002c405:	call   0x10022769
1002c40a:	pop    ecx
1002c40b:	push   eax
1002c40c:	call   0x10022c21
1002c411:	test   al,al
1002c413:	je     0x1002c422
1002c415:	push   DWORD PTR [ebp+0x10]
1002c418:	call   0x1002413a
1002c41d:	test   al,al
1002c41f:	pop    ecx
1002c420:	jne    0x1002c42f
1002c422:	inc    DWORD PTR [esi]
1002c424:	cmp    DWORD PTR [esi],edi
1002c426:	jne    0x1002c3f6
1002c428:	xor    al,al
1002c42a:	pop    edi
1002c42b:	mov    esp,ebp
1002c42d:	pop    ebp
1002c42e:	ret    
1002c42f:	mov    al,0x1
1002c431:	jmp    0x1002c42a
1002c433:	push   ebx
1002c434:	mov    ebx,DWORD PTR [esp+0x8]
1002c438:	mov    eax,DWORD PTR [ebx]
1002c43a:	cmp    BYTE PTR [eax+0x2c],0x0
1002c43e:	push   esi
1002c43f:	push   edi
1002c440:	je     0x1002c446
1002c442:	xor    al,al
1002c444:	jmp    0x1002c470
1002c446:	sub    esp,0x10
1002c449:	mov    BYTE PTR [ebx+0x10],0x1
1002c44d:	mov    edi,esp
1002c44f:	mov    esi,0x1006f520
1002c454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c457:	push   eax
1002c458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c459:	call   0x10008796
1002c45e:	test   eax,eax
1002c460:	je     0x1002c46e
1002c462:	mov    eax,DWORD PTR [eax+0xc]
1002c465:	shr    eax,1
1002c467:	not    al
1002c469:	and    al,0x1
1002c46b:	mov    BYTE PTR [ebx+0x10],al
1002c46e:	mov    al,0x1
1002c470:	pop    edi
1002c471:	pop    esi
1002c472:	pop    ebx
1002c473:	ret    0x4
1002c476:	push   0x0
1002c478:	mov    eax,0x1005f79e
1002c47d:	call   0x10059a35
1002c482:	mov    esi,DWORD PTR [ebp+0x8]
1002c485:	and    DWORD PTR [ebp-0x4],0x0
1002c489:	mov    DWORD PTR [esi],0x10072e54
1002c48f:	and    DWORD PTR [esi+0x4],0x0
1002c493:	push   0x4
1002c495:	mov    BYTE PTR [ebp-0x4],0x1
1002c499:	call   0x1004349e
1002c49e:	test   eax,eax
1002c4a0:	pop    ecx
1002c4a1:	je     0x1002c4ad
1002c4a3:	mov    DWORD PTR [eax],0x10071950
1002c4a9:	mov    edi,eax
1002c4ab:	jmp    0x1002c4af
1002c4ad:	xor    edi,edi
1002c4af:	mov    ecx,DWORD PTR [esi+0x4]
1002c4b2:	cmp    edi,ecx
1002c4b4:	je     0x1002c4c1
1002c4b6:	test   ecx,ecx
1002c4b8:	je     0x1002c4c1
1002c4ba:	mov    eax,DWORD PTR [ecx]
1002c4bc:	push   0x1
1002c4be:	call   DWORD PTR [eax+0x4]
1002c4c1:	mov    DWORD PTR [esi+0x4],edi
1002c4c4:	mov    eax,esi
1002c4c6:	call   0x10059b0d
1002c4cb:	ret    0x4
1002c4ce:	push   0x4
1002c4d0:	mov    eax,0x1005f5ae
1002c4d5:	call   0x10059a35
1002c4da:	mov    esi,ecx
1002c4dc:	mov    DWORD PTR [ebp-0x10],esi
1002c4df:	and    DWORD PTR [ebp-0x4],0x0
1002c4e3:	mov    ecx,DWORD PTR [esi+0x4]
1002c4e6:	test   ecx,ecx
1002c4e8:	je     0x1002c4f1
1002c4ea:	mov    eax,DWORD PTR [ecx]
1002c4ec:	push   0x1
1002c4ee:	call   DWORD PTR [eax+0x4]
1002c4f1:	test   BYTE PTR [ebp+0x8],0x1
1002c4f5:	mov    DWORD PTR [esi],0x10072e4c
1002c4fb:	je     0x1002c504
1002c4fd:	push   esi
1002c4fe:	call   0x10042e92
1002c503:	pop    ecx
1002c504:	mov    eax,esi
1002c506:	call   0x10059b0d
1002c50b:	ret    0x4
1002c50e:	push   ebp
1002c50f:	mov    ebp,esp
1002c511:	and    esp,0xfffffff8
1002c514:	push   0xffffffff
1002c516:	push   0x10064046
1002c51b:	mov    eax,fs:0x0
1002c521:	push   eax
1002c522:	sub    esp,0x5d8
1002c528:	mov    eax,ds:0x1007e030
1002c52d:	xor    eax,esp
1002c52f:	mov    DWORD PTR [esp+0x5d0],eax
1002c536:	push   ebx
1002c537:	push   esi
1002c538:	push   edi
1002c539:	mov    eax,ds:0x1007e030
1002c53e:	xor    eax,esp
1002c540:	push   eax
1002c541:	lea    eax,[esp+0x5e8]
1002c548:	mov    fs:0x0,eax
1002c54e:	mov    ebx,DWORD PTR [ebp+0x8]
1002c551:	push   DWORD PTR [ebx]
1002c553:	mov    DWORD PTR [esp+0x40],ecx
1002c557:	lea    ecx,[esp+0x154]
1002c55e:	call   0x10008b47
1002c563:	xor    esi,esi
1002c565:	mov    DWORD PTR [esp+0x5f0],esi
1002c56c:	mov    eax,DWORD PTR [ebx+0x8]
1002c56f:	cmp    DWORD PTR [eax+0xc],esi
1002c572:	jne    0x1002c600
1002c578:	lea    eax,[esp+0x134]
1002c57f:	push   eax
1002c580:	mov    eax,DWORD PTR [ebx+0x4]
1002c583:	mov    eax,DWORD PTR [eax+0x4]
1002c586:	call   0x10019730
1002c58b:	cmp    DWORD PTR [esp+0x168],0x10
1002c593:	mov    ecx,DWORD PTR [esp+0x154]
1002c59a:	jae    0x1002c5a3
1002c59c:	lea    ecx,[esp+0x154]
1002c5a3:	cmp    DWORD PTR [eax+0x18],0x10
1002c5a7:	jb     0x1002c5ae
1002c5a9:	mov    eax,DWORD PTR [eax+0x4]
1002c5ac:	jmp    0x1002c5b1
1002c5ae:	add    eax,0x4
1002c5b1:	push   ecx
1002c5b2:	push   eax
1002c5b3:	call   0x10002080
1002c5b8:	pop    ecx
1002c5b9:	pop    ecx
1002c5ba:	push   esi
1002c5bb:	push   0x1
1002c5bd:	lea    ecx,[esp+0x13c]
1002c5c4:	call   0x100012f0
1002c5c9:	push   esi
1002c5ca:	push   0x1
1002c5cc:	lea    ecx,[esp+0x158]
1002c5d3:	call   0x100012f0
1002c5d8:	xor    al,al
1002c5da:	mov    ecx,DWORD PTR [esp+0x5e8]
1002c5e1:	mov    DWORD PTR fs:0x0,ecx
1002c5e8:	pop    ecx
1002c5e9:	pop    edi
1002c5ea:	pop    esi
1002c5eb:	pop    ebx
1002c5ec:	mov    ecx,DWORD PTR [esp+0x5d0]
1002c5f3:	xor    ecx,esp
1002c5f5:	call   0x10042e97
1002c5fa:	mov    esp,ebp
1002c5fc:	pop    ebp
1002c5fd:	ret    0x4
1002c600:	mov    eax,DWORD PTR [ebx]
1002c602:	cmp    BYTE PTR [eax+0x2c],0x0
1002c606:	jne    0x1002c5c9
1002c608:	sub    esp,0x10
1002c60b:	mov    edi,esp
1002c60d:	mov    esi,0x1006f520
1002c612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c615:	push   eax
1002c616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c617:	call   0x10008796
1002c61c:	mov    edi,eax
1002c61e:	xor    esi,esi
1002c620:	cmp    edi,esi
1002c622:	mov    DWORD PTR [esp+0x28],edi
1002c626:	je     0x1002c5c9
1002c628:	mov    eax,DWORD PTR [edi+0xc]
1002c62b:	test   al,0x2
1002c62d:	je     0x1002c5c9
1002c62f:	test   al,0x4
1002c631:	jne    0x1002c6e3
1002c637:	mov    eax,DWORD PTR [ebx+0x4]
1002c63a:	mov    edx,DWORD PTR [eax+0x10]
1002c63d:	mov    ecx,DWORD PTR [ebx]
1002c63f:	sub    edx,DWORD PTR [ecx+0x10]
1002c642:	mov    eax,DWORD PTR [eax+0x14]
1002c645:	sbb    eax,DWORD PTR [ecx+0x14]
1002c648:	push   esi
1002c649:	push   0x2710
1002c64e:	push   eax
1002c64f:	push   edx
1002c650:	call   0x1005f340
1002c655:	add    eax,eax
1002c657:	mov    ecx,0x7d0
1002c65c:	cmp    eax,ecx
1002c65e:	jae    0x1002c662
1002c660:	mov    eax,ecx
1002c662:	mov    ecx,DWORD PTR [edi+0x1c]
1002c665:	push   eax
1002c666:	push   ecx
1002c667:	call   DWORD PTR ds:0x10066084
1002c66d:	test   eax,eax
1002c66f:	je     0x1002c69d
1002c671:	cmp    DWORD PTR [esp+0x168],0x10
1002c679:	mov    eax,DWORD PTR [esp+0x154]
1002c680:	jae    0x1002c689
1002c682:	lea    eax,[esp+0x154]
1002c689:	push   eax
1002c68a:	call   0x10002080
1002c68f:	pop    ecx
1002c690:	push   0x5
1002c692:	call   0x10037980
1002c697:	pop    ecx
1002c698:	jmp    0x1002c5c9
1002c69d:	mov    al,BYTE PTR [edi+0x18]
1002c6a0:	test   al,al
1002c6a2:	jne    0x1002c6e3
1002c6a4:	cmp    DWORD PTR [esp+0x168],0x10
1002c6ac:	mov    eax,DWORD PTR [esp+0x154]
1002c6b3:	jae    0x1002c6bc
1002c6b5:	lea    eax,[esp+0x154]
1002c6bc:	push   eax
1002c6bd:	call   0x10002080
1002c6c2:	pop    ecx
1002c6c3:	push   0x5
1002c6c5:	call   0x10037980
1002c6ca:	pop    ecx
1002c6cb:	xor    bl,bl
1002c6cd:	push   esi
1002c6ce:	push   0x1
1002c6d0:	lea    ecx,[esp+0x158]
1002c6d7:	call   0x100012f0
1002c6dc:	mov    al,bl
1002c6de:	jmp    0x1002c5da
1002c6e3:	push   0x4746d85a
1002c6e8:	push   0x10072d38
1002c6ed:	call   0x10004246
1002c6f2:	push   eax
1002c6f3:	push   0x10
1002c6f5:	push   0x1006dde4
1002c6fa:	call   0x10004258
1002c6ff:	add    esp,0x14
1002c702:	push   eax
1002c703:	lea    ecx,[esp+0xc8]
1002c70a:	call   0x100011cd
1002c70f:	push   esi
1002c710:	lea    eax,[esp+0xc8]
1002c717:	push   eax
1002c718:	lea    eax,[esp+0x120]
1002c71f:	push   eax
1002c720:	mov    BYTE PTR [esp+0x5fc],0x1
1002c728:	mov    eax,DWORD PTR [ebx+0x4]
1002c72b:	add    eax,0x20
1002c72e:	call   0x100084cc
1002c733:	mov    BYTE PTR [esp+0x5f0],0x2
1002c73b:	cmp    DWORD PTR [eax+0x18],0x10
1002c73f:	jb     0x1002c746
1002c741:	mov    eax,DWORD PTR [eax+0x4]
1002c744:	jmp    0x1002c749
1002c746:	add    eax,0x4
1002c749:	push   eax
1002c74a:	lea    ecx,[esp+0x100]
1002c751:	call   0x100011cd
1002c756:	lea    eax,[esp+0xfc]
1002c75d:	push   eax
1002c75e:	lea    esi,[esp+0x1c4]
1002c765:	mov    BYTE PTR [esp+0x5f4],0x3
1002c76d:	call   0x1002fa30
1002c772:	pop    ecx
1002c773:	xor    esi,esi
1002c775:	push   esi
1002c776:	push   0x1
1002c778:	lea    ecx,[esp+0x104]
1002c77f:	call   0x100012f0
1002c784:	push   esi
1002c785:	push   0x1
1002c787:	lea    ecx,[esp+0x120]
1002c78e:	call   0x100012f0
1002c793:	push   esi
1002c794:	push   0x1
1002c796:	lea    ecx,[esp+0xcc]
1002c79d:	mov    BYTE PTR [esp+0x5f8],0x7
1002c7a5:	call   0x100012f0
1002c7aa:	mov    eax,DWORD PTR [ebx+0x8]
1002c7ad:	mov    eax,DWORD PTR [eax+0xc]
1002c7b0:	lea    ecx,[esp+0x1a4]
1002c7b7:	push   ecx
1002c7b8:	call   0x10019730
1002c7bd:	mov    BYTE PTR [esp+0x5f0],0x8
1002c7c5:	mov    eax,DWORD PTR [edi+0x10]
1002c7c8:	push   esi
1002c7c9:	mov    DWORD PTR [esp+0x20],eax
1002c7cd:	lea    eax,[edi+0x14]
1002c7d0:	push   eax
1002c7d1:	lea    eax,[esp+0x158]
1002c7d8:	push   eax
1002c7d9:	push   DWORD PTR [ebx+0x8]
1002c7dc:	push   DWORD PTR [ebx]
1002c7de:	push   DWORD PTR [edi+0x8]
1002c7e1:	call   0x10022769
1002c7e6:	mov    ecx,DWORD PTR [esp+0x34]
1002c7ea:	push   eax
1002c7eb:	call   0x10022f09
1002c7f0:	test   al,al
1002c7f2:	jne    0x1002c820
1002c7f4:	cmp    DWORD PTR [esp+0x168],0x10
1002c7fc:	mov    eax,DWORD PTR [esp+0x154]
1002c803:	jae    0x1002c80c
1002c805:	lea    eax,[esp+0x154]
1002c80c:	push   eax
1002c80d:	call   0x10002080
1002c812:	pop    ecx
1002c813:	push   0x7
1002c815:	call   0x10037980
1002c81a:	pop    ecx
1002c81b:	jmp    0x1002cbdc
1002c820:	mov    eax,DWORD PTR [edi+0x10]
1002c823:	lea    edx,[esp+0x1c]
1002c827:	push   edx
1002c828:	mov    DWORD PTR [esp+0x20],esi
1002c82c:	mov    ecx,DWORD PTR [eax]
1002c82e:	push   eax
1002c82f:	call   DWORD PTR [ecx+0x28]
1002c832:	push   esi
1002c833:	lea    ecx,[esp+0x170]
1002c83a:	mov    DWORD PTR [esp+0x188],0xf
1002c845:	call   0x1000141c
1002c84a:	mov    BYTE PTR [esp+0x5f0],0x9
1002c852:	cmp    DWORD PTR [esp+0x1c],esi
1002c856:	je     0x1002c9eb
1002c85c:	mov    DWORD PTR [esp+0x18],0x1
1002c864:	jmp    0x1002c86a
1002c866:	mov    edi,DWORD PTR [esp+0x28]
1002c86a:	lea    eax,[esp+0x4c]
1002c86e:	push   eax
1002c86f:	call   DWORD PTR ds:0x1006628c
1002c875:	mov    eax,DWORD PTR [esp+0x18]
1002c879:	mov    WORD PTR [esp+0x5c],0x16
1002c880:	mov    DWORD PTR [esp+0x64],eax
1002c884:	mov    BYTE PTR [esp+0x5f0],0xb
1002c88c:	mov    eax,DWORD PTR [edi+0x10]
1002c88f:	mov    ecx,DWORD PTR [eax]
1002c891:	lea    edx,[esp+0x4c]
1002c895:	push   edx
1002c896:	sub    esp,0x10
1002c899:	mov    edi,esp
1002c89b:	lea    esi,[esp+0x70]
1002c89f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c8a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c8a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c8a2:	push   eax
1002c8a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c8a4:	call   DWORD PTR [ecx+0x20]
1002c8a7:	test   eax,eax
1002c8a9:	lea    eax,[esp+0x5c]
1002c8ad:	mov    BYTE PTR [esp+0x5f0],0xa
1002c8b5:	mov    esi,DWORD PTR ds:0x10066294
1002c8bb:	push   eax
1002c8bc:	setge  BYTE PTR [esp+0x1b]
1002c8c1:	call   esi
1002c8c3:	cmp    BYTE PTR [esp+0x17],0x0
1002c8c8:	je     0x1002c9c7
1002c8ce:	lea    ecx,[esp+0x4c]
1002c8d2:	call   0x1002aeac
1002c8d7:	xor    edi,edi
1002c8d9:	cmp    eax,edi
1002c8db:	mov    DWORD PTR [esp+0x20],edi
1002c8df:	je     0x1002c8f0
1002c8e1:	mov    ecx,DWORD PTR [eax]
1002c8e3:	lea    edx,[esp+0x20]
1002c8e7:	push   edx
1002c8e8:	push   0x10072b30
1002c8ed:	push   eax
1002c8ee:	call   DWORD PTR [ecx]
1002c8f0:	mov    BYTE PTR [esp+0x5f0],0xc
1002c8f8:	mov    eax,DWORD PTR [esp+0x20]
1002c8fc:	lea    edx,[esp+0x34]
1002c900:	push   edx
1002c901:	mov    DWORD PTR [esp+0x38],edi
1002c905:	mov    ecx,DWORD PTR [eax]
1002c907:	push   eax
1002c908:	call   DWORD PTR [ecx+0x24]
1002c90b:	mov    eax,DWORD PTR [esp+0x28]
1002c90f:	mov    eax,DWORD PTR [eax+0x10]
1002c912:	mov    ecx,DWORD PTR [eax]
1002c914:	lea    edx,[esp+0x38]
1002c918:	push   edx
1002c919:	push   DWORD PTR [esp+0x1c]
1002c91d:	push   eax
1002c91e:	call   DWORD PTR [ecx+0x24]
1002c921:	test   eax,eax
1002c923:	jl     0x1002c9b1
1002c929:	mov    ecx,DWORD PTR [esp+0x38]
1002c92d:	push   edi
1002c92e:	lea    edi,[esp+0x34]
1002c932:	call   0x1000d7f3
1002c937:	mov    BYTE PTR [esp+0x5f0],0xd
1002c93f:	cmp    DWORD PTR [esp+0x180],0x0
1002c947:	jbe    0x1002c95b
1002c949:	push   0x10072d64
1002c94e:	lea    eax,[esp+0x170]
1002c955:	push   eax
1002c956:	call   0x10004090
1002c95b:	lea    eax,[esp+0x30]
1002c95f:	call   0x1000d853
1002c964:	push   eax
1002c965:	lea    eax,[esp+0x170]
1002c96c:	push   eax
1002c96d:	call   0x10004090
1002c972:	push   0x1006dc78
1002c977:	lea    eax,[esp+0x170]
1002c97e:	push   eax
1002c97f:	call   0x10004090
1002c984:	push   0xa
1002c986:	lea    eax,[esp+0x1e0]
1002c98d:	push   eax
1002c98e:	push   DWORD PTR [esp+0x3c]
1002c992:	call   0x10045af6
1002c997:	add    esp,0xc
1002c99a:	push   eax
1002c99b:	lea    eax,[esp+0x170]
1002c9a2:	push   eax
1002c9a3:	call   0x10004090
1002c9a8:	lea    edi,[esp+0x30]
1002c9ac:	call   0x100025c2
1002c9b1:	mov    BYTE PTR [esp+0x5f0],0xa
1002c9b9:	mov    eax,DWORD PTR [esp+0x20]
1002c9bd:	test   eax,eax
1002c9bf:	je     0x1002c9c7
1002c9c1:	mov    ecx,DWORD PTR [eax]
1002c9c3:	push   eax
1002c9c4:	call   DWORD PTR [ecx+0x8]
1002c9c7:	lea    eax,[esp+0x4c]
1002c9cb:	push   eax
1002c9cc:	mov    BYTE PTR [esp+0x5f4],0x9
1002c9d4:	call   esi
1002c9d6:	inc    DWORD PTR [esp+0x18]
1002c9da:	mov    eax,DWORD PTR [esp+0x18]
1002c9de:	dec    eax
1002c9df:	cmp    eax,DWORD PTR [esp+0x1c]
1002c9e3:	jne    0x1002c866
1002c9e9:	xor    esi,esi
1002c9eb:	mov    eax,DWORD PTR [ebx+0x8]
1002c9ee:	mov    eax,DWORD PTR [eax+0xc]
1002c9f1:	lea    ecx,[esp+0x188]
1002c9f8:	push   ecx
1002c9f9:	call   0x10019730
1002c9fe:	lea    ecx,[esp+0x188]
1002ca05:	lea    eax,[esp+0x1a4]
1002ca0c:	mov    BYTE PTR [esp+0x5f0],0xe
1002ca14:	call   0x1000656c
1002ca19:	test   al,al
1002ca1b:	jne    0x1002cb7d
1002ca21:	push   0x20b6a27c
1002ca26:	push   0x10072d68
1002ca2b:	call   0x10004246
1002ca30:	push   0x666c76f4
1002ca35:	push   eax
1002ca36:	call   0x10004246
1002ca3b:	push   eax
1002ca3c:	push   0x11
1002ca3e:	push   0x1006dc30
1002ca43:	call   0x10004258
1002ca48:	add    esp,0x1c
1002ca4b:	push   eax
1002ca4c:	lea    ecx,[esp+0xac]
1002ca53:	call   0x100011cd
1002ca58:	lea    eax,[esp+0xa8]
1002ca5f:	push   eax
1002ca60:	mov    BYTE PTR [esp+0x5f4],0xf
1002ca68:	mov    eax,DWORD PTR [ebx+0x8]
1002ca6b:	add    eax,0x20
1002ca6e:	push   eax
1002ca6f:	call   0x1000826a
1002ca74:	push   esi
1002ca75:	push   0x1
1002ca77:	lea    ecx,[esp+0xb0]
1002ca7e:	mov    BYTE PTR [esp+0x5f8],0xe
1002ca86:	call   0x100012f0
1002ca8b:	push   0x10072d9c
1002ca90:	push   0xe
1002ca92:	mov    esi,0x1006d9c0
1002ca97:	push   esi
1002ca98:	call   0x10004258
1002ca9d:	add    esp,0xc
1002caa0:	push   eax
1002caa1:	lea    ecx,[esp+0x74]
1002caa5:	call   0x100011cd
1002caaa:	lea    eax,[esp+0x70]
1002caae:	push   eax
1002caaf:	mov    BYTE PTR [esp+0x5f4],0x10
1002cab7:	mov    eax,DWORD PTR [ebx+0x8]
1002caba:	add    eax,0x20
1002cabd:	push   eax
1002cabe:	call   0x1000826a
1002cac3:	xor    edi,edi
1002cac5:	push   edi
1002cac6:	push   0x1
1002cac8:	lea    ecx,[esp+0x78]
1002cacc:	mov    BYTE PTR [esp+0x5f8],0xe
1002cad4:	call   0x100012f0
1002cad9:	push   0xa
1002cadb:	lea    eax,[esp+0x1e0]
1002cae2:	push   eax
1002cae3:	push   DWORD PTR [esp+0x1a4]
1002caea:	call   0x10045af6
1002caef:	add    esp,0xc
1002caf2:	push   eax
1002caf3:	lea    ecx,[esp+0xe4]
1002cafa:	call   0x100011cd
1002caff:	push   0x7bbf496a
1002cb04:	push   0x10072dc0
1002cb09:	mov    BYTE PTR [esp+0x5f8],0x11
1002cb11:	call   0x10004246
1002cb16:	push   0x553793ba
1002cb1b:	push   eax
1002cb1c:	call   0x10004246
1002cb21:	push   eax
1002cb22:	push   0xe
1002cb24:	push   esi
1002cb25:	call   0x10004258
1002cb2a:	add    esp,0x1c
1002cb2d:	push   eax
1002cb2e:	lea    ecx,[esp+0x90]
1002cb35:	call   0x100011cd
1002cb3a:	push   edi
1002cb3b:	lea    eax,[esp+0x90]
1002cb42:	mov    BYTE PTR [esp+0x5f4],0x12
1002cb4a:	mov    edx,DWORD PTR [ebx+0x8]
1002cb4d:	push   eax
1002cb4e:	add    edx,0x20
1002cb51:	lea    ecx,[esp+0xe8]
1002cb58:	call   0x10007f61
1002cb5d:	push   edi
1002cb5e:	push   0x1
1002cb60:	lea    ecx,[esp+0x94]
1002cb67:	call   0x100012f0
1002cb6c:	push   edi
1002cb6d:	push   0x1
1002cb6f:	lea    ecx,[esp+0xe8]
1002cb76:	call   0x100012f0
1002cb7b:	xor    esi,esi
1002cb7d:	cmp    DWORD PTR [esp+0x184],0x10
1002cb85:	mov    ecx,DWORD PTR [esp+0x170]
1002cb8c:	jae    0x1002cb95
1002cb8e:	lea    ecx,[esp+0x170]
1002cb95:	cmp    DWORD PTR [esp+0x168],0x10
1002cb9d:	mov    eax,DWORD PTR [esp+0x154]
1002cba4:	jae    0x1002cbad
1002cba6:	lea    eax,[esp+0x154]
1002cbad:	push   ecx
1002cbae:	push   eax
1002cbaf:	call   0x10002080
1002cbb4:	pop    ecx
1002cbb5:	pop    ecx
1002cbb6:	push   esi
1002cbb7:	push   0x1
1002cbb9:	lea    ecx,[esp+0x190]
1002cbc0:	call   0x100012f0
1002cbc5:	push   esi
1002cbc6:	push   0x1
1002cbc8:	lea    ecx,[esp+0x174]
1002cbcf:	mov    BYTE PTR [esp+0x5f8],0x8
1002cbd7:	call   0x100012f0
1002cbdc:	push   DWORD PTR [ebx]
1002cbde:	call   0x100087d7
1002cbe3:	mov    DWORD PTR [esp+0x24],eax
1002cbe7:	mov    BYTE PTR [esp+0x5f0],0x13
1002cbef:	push   DWORD PTR [ebx+0x8]
1002cbf2:	call   0x1000901d
1002cbf7:	mov    DWORD PTR [esp+0x2c],eax
1002cbfb:	mov    BYTE PTR [esp+0x5f0],0x14
1002cc03:	lea    eax,[esp+0x24]
1002cc07:	mov    DWORD PTR [esp+0x40],eax
1002cc0b:	lea    eax,[esp+0x2c]
1002cc0f:	mov    DWORD PTR [esp+0x44],eax
1002cc13:	mov    eax,DWORD PTR [esp+0x3c]
1002cc17:	mov    ecx,DWORD PTR [eax+0x4]
1002cc1a:	lea    edx,[esp+0x40]
1002cc1e:	mov    BYTE PTR [esp+0x48],0x0
1002cc23:	mov    eax,DWORD PTR [ecx]
1002cc25:	push   edx
1002cc26:	call   DWORD PTR [eax]
1002cc28:	lea    eax,[esp+0x2c]
1002cc2c:	mov    BYTE PTR [esp+0x5f0],0x13
1002cc34:	call   0x10009e32
1002cc39:	mov    BYTE PTR [esp+0x5f0],0x8
1002cc41:	cmp    DWORD PTR [esp+0x24],esi
1002cc45:	je     0x1002cc50
1002cc47:	push   DWORD PTR [esp+0x24]
1002cc4b:	call   0x10009eaf
1002cc50:	push   esi
1002cc51:	push   0x1
1002cc53:	lea    ecx,[esp+0x1ac]
1002cc5a:	call   0x100012f0
1002cc5f:	push   esi
1002cc60:	push   0x1
1002cc62:	lea    ecx,[esp+0x1c8]
1002cc69:	call   0x100012f0
1002cc6e:	mov    bl,0x1
1002cc70:	xor    esi,esi
1002cc72:	jmp    0x1002c6cd
1002cc77:	push   ebp
1002cc78:	sub    esp,0x400
1002cc7e:	lea    ebp,[esp-0x4]
1002cc82:	mov    eax,ds:0x1007e030
1002cc87:	xor    eax,ebp
1002cc89:	mov    DWORD PTR [ebp+0x400],eax
1002cc8f:	push   0x44
1002cc91:	mov    eax,0x10060992
1002cc96:	call   0x10059a35
1002cc9b:	xor    edi,edi
1002cc9d:	mov    DWORD PTR [ebp-0x4],edi
1002cca0:	mov    DWORD PTR [ebp-0x30],edi
1002cca3:	mov    eax,DWORD PTR [ebx]
1002cca5:	lea    edx,[ebp-0x1c]
1002cca8:	mov    esi,ecx
1002ccaa:	push   edx
1002ccab:	mov    DWORD PTR [ebp-0x1c],edi
1002ccae:	mov    ecx,DWORD PTR [eax]
1002ccb0:	push   eax
1002ccb1:	mov    DWORD PTR [ebp-0x28],esi
1002ccb4:	call   DWORD PTR [ecx+0x28]
1002ccb7:	call   0x10004059
1002ccbc:	xor    esi,esi
1002ccbe:	mov    DWORD PTR [ebp-0x4],edi
1002ccc1:	inc    esi
1002ccc2:	cmp    DWORD PTR [ebp-0x1c],edi
1002ccc5:	mov    DWORD PTR [ebp-0x30],esi
1002ccc8:	je     0x1002cdfa
1002ccce:	mov    DWORD PTR [ebp-0x14],esi
1002ccd1:	jmp    0x1002ccd6
1002ccd3:	xor    esi,esi
1002ccd5:	inc    esi
1002ccd6:	lea    eax,[ebp-0x40]
1002ccd9:	push   eax
1002ccda:	call   DWORD PTR ds:0x1006628c
1002cce0:	mov    eax,DWORD PTR [ebp-0x14]
1002cce3:	mov    DWORD PTR [ebp-0x4],esi
1002cce6:	mov    WORD PTR [ebp-0x50],0x16
1002ccec:	mov    DWORD PTR [ebp-0x48],eax
1002ccef:	lea    edx,[ebp-0x40]
1002ccf2:	push   edx
1002ccf3:	mov    BYTE PTR [ebp-0x4],0x2
1002ccf7:	mov    eax,DWORD PTR [ebx]
1002ccf9:	mov    ecx,DWORD PTR [eax]
1002ccfb:	sub    esp,0x10
1002ccfe:	mov    edi,esp
1002cd00:	lea    esi,[ebp-0x50]
1002cd03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cd04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cd05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cd06:	push   eax
1002cd07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cd08:	call   DWORD PTR [ecx+0x20]
1002cd0b:	test   eax,eax
1002cd0d:	lea    eax,[ebp-0x50]
1002cd10:	mov    BYTE PTR [ebp-0x4],0x1
1002cd14:	mov    esi,DWORD PTR ds:0x10066294
1002cd1a:	push   eax
1002cd1b:	setge  BYTE PTR [ebp-0xd]
1002cd1f:	call   esi
1002cd21:	cmp    BYTE PTR [ebp-0xd],0x0
1002cd25:	je     0x1002cde0
1002cd2b:	lea    ecx,[ebp-0x40]
1002cd2e:	call   0x1002aeac
1002cd33:	xor    edi,edi
1002cd35:	cmp    eax,edi
1002cd37:	mov    DWORD PTR [ebp-0x18],edi
1002cd3a:	je     0x1002cd4a
1002cd3c:	mov    ecx,DWORD PTR [eax]
1002cd3e:	lea    edx,[ebp-0x18]
1002cd41:	push   edx
1002cd42:	push   0x10072b30
1002cd47:	push   eax
1002cd48:	call   DWORD PTR [ecx]
1002cd4a:	mov    BYTE PTR [ebp-0x4],0x3
1002cd4e:	mov    eax,DWORD PTR [ebp-0x18]
1002cd51:	lea    edx,[ebp-0x24]
1002cd54:	push   edx
1002cd55:	mov    DWORD PTR [ebp-0x24],edi
1002cd58:	mov    ecx,DWORD PTR [eax]
1002cd5a:	push   eax
1002cd5b:	call   DWORD PTR [ecx+0x24]
1002cd5e:	mov    eax,DWORD PTR [ebx]
1002cd60:	mov    ecx,DWORD PTR [eax]
1002cd62:	lea    edx,[ebp-0x2c]
1002cd65:	push   edx
1002cd66:	push   DWORD PTR [ebp-0x14]
1002cd69:	push   eax
1002cd6a:	call   DWORD PTR [ecx+0x24]
1002cd6d:	test   eax,eax
1002cd6f:	jl     0x1002cdcf
1002cd71:	mov    ecx,DWORD PTR [ebp-0x2c]
1002cd74:	push   edi
1002cd75:	lea    edi,[ebp-0x20]
1002cd78:	call   0x1000d7f3
1002cd7d:	mov    BYTE PTR [ebp-0x4],0x4
1002cd81:	mov    edi,DWORD PTR [ebp-0x28]
1002cd84:	cmp    DWORD PTR [edi+0x14],0x0
1002cd88:	jbe    0x1002cd95
1002cd8a:	push   0x10072d64
1002cd8f:	push   edi
1002cd90:	call   0x10004090
1002cd95:	lea    eax,[ebp-0x20]
1002cd98:	call   0x1000d853
1002cd9d:	push   eax
1002cd9e:	push   edi
1002cd9f:	call   0x10004090
1002cda4:	push   0x1006dc78
1002cda9:	push   edi
1002cdaa:	call   0x10004090
1002cdaf:	push   0xa
1002cdb1:	lea    eax,[ebp+0x0]
1002cdb4:	push   eax
1002cdb5:	push   DWORD PTR [ebp-0x24]
1002cdb8:	call   0x10045af6
1002cdbd:	add    esp,0xc
1002cdc0:	push   eax
1002cdc1:	push   edi
1002cdc2:	call   0x10004090
1002cdc7:	lea    edi,[ebp-0x20]
1002cdca:	call   0x100025c2
1002cdcf:	mov    BYTE PTR [ebp-0x4],0x1
1002cdd3:	mov    eax,DWORD PTR [ebp-0x18]
1002cdd6:	test   eax,eax
1002cdd8:	je     0x1002cde0
1002cdda:	mov    ecx,DWORD PTR [eax]
1002cddc:	push   eax
1002cddd:	call   DWORD PTR [ecx+0x8]
1002cde0:	lea    eax,[ebp-0x40]
1002cde3:	push   eax
1002cde4:	mov    BYTE PTR [ebp-0x4],0x0
1002cde8:	call   esi
1002cdea:	inc    DWORD PTR [ebp-0x14]
1002cded:	mov    eax,DWORD PTR [ebp-0x14]
1002cdf0:	dec    eax
1002cdf1:	cmp    eax,DWORD PTR [ebp-0x1c]
1002cdf4:	jne    0x1002ccd3
1002cdfa:	mov    eax,DWORD PTR [ebp-0x28]
1002cdfd:	mov    ecx,DWORD PTR [ebp-0xc]
1002ce00:	mov    DWORD PTR fs:0x0,ecx
1002ce07:	pop    ecx
1002ce08:	pop    edi
1002ce09:	pop    esi
1002ce0a:	pop    ebx
1002ce0b:	mov    ecx,DWORD PTR [ebp+0x400]
1002ce11:	xor    ecx,ebp
1002ce13:	call   0x10042e97
1002ce18:	add    ebp,0x404
1002ce1e:	leave  
1002ce1f:	ret    
1002ce20:	push   ebp
1002ce21:	sub    esp,0x60
1002ce24:	lea    ebp,[esp-0x4]
1002ce28:	mov    eax,ds:0x1007e030
1002ce2d:	xor    eax,ebp
1002ce2f:	mov    DWORD PTR [ebp+0x60],eax
1002ce32:	push   0x54
1002ce34:	mov    eax,0x10063f5b
1002ce39:	call   0x10059a35
1002ce3e:	mov    eax,DWORD PTR [ebp+0x6c]
1002ce41:	mov    ecx,DWORD PTR [eax]
1002ce43:	mov    DWORD PTR [ebp+0x4],ecx
1002ce46:	and    DWORD PTR [ebp-0x4],0x0
1002ce4a:	mov    ebx,DWORD PTR [eax+0x4]
1002ce4d:	mov    DWORD PTR [ebp+0x8],ebx
1002ce50:	push   ecx
1002ce51:	lea    ecx,[ebp+0x44]
1002ce54:	mov    BYTE PTR [ebp-0x4],0x1
1002ce58:	call   0x10008b47
1002ce5d:	mov    BYTE PTR [ebp-0x4],0x2
1002ce61:	sub    esp,0x10
1002ce64:	mov    edi,esp
1002ce66:	mov    esi,0x1006f520
1002ce6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002ce6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002ce6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002ce6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002ce6f:	mov    esi,DWORD PTR [ebp+0x4]
1002ce72:	push   esi
1002ce73:	call   0x10008744
1002ce78:	mov    edi,eax
1002ce7a:	xor    ecx,ecx
1002ce7c:	cmp    edi,ecx
1002ce7e:	jne    0x1002cea9
1002ce80:	push   ecx
1002ce81:	push   0x1
1002ce83:	lea    ecx,[ebp+0x44]
1002ce86:	call   0x100012f0
1002ce8b:	lea    eax,[ebp+0x8]
1002ce8e:	mov    BYTE PTR [ebp-0x4],0x0
1002ce92:	call   0x10009e32
1002ce97:	or     DWORD PTR [ebp-0x4],0xffffffff
1002ce9b:	test   esi,esi
1002ce9d:	je     0x1002d0b4
1002cea3:	push   esi
1002cea4:	jmp    0x1002d0af
1002cea9:	mov    eax,DWORD PTR [edi+0xc]
1002ceac:	test   al,0x1
1002ceae:	je     0x1002ce80
1002ceb0:	test   al,0x8
1002ceb2:	jne    0x1002cf6f
1002ceb8:	mov    eax,DWORD PTR [ebx+0x10]
1002cebb:	sub    eax,DWORD PTR [esi+0x10]
1002cebe:	mov    edx,DWORD PTR [ebx+0x14]
1002cec1:	sbb    edx,DWORD PTR [esi+0x14]
1002cec4:	push   ecx
1002cec5:	push   0x2710
1002ceca:	push   edx
1002cecb:	push   eax
1002cecc:	call   0x1005f340
1002ced1:	add    eax,eax
1002ced3:	mov    ecx,0x4e20
1002ced8:	cmp    eax,ecx
1002ceda:	jae    0x1002cede
1002cedc:	mov    eax,ecx
1002cede:	mov    ecx,DWORD PTR [edi+0x2c]
1002cee1:	push   eax
1002cee2:	push   ecx
1002cee3:	call   DWORD PTR ds:0x10066084
1002cee9:	test   eax,eax
1002ceeb:	je     0x1002cf29
1002ceed:	cmp    DWORD PTR [ebp+0x5c],0x10
1002cef1:	mov    eax,DWORD PTR [ebp+0x48]
1002cef4:	jae    0x1002cef9
1002cef6:	lea    eax,[ebp+0x48]
1002cef9:	push   eax
1002cefa:	call   0x10002080
1002ceff:	push   0x5
1002cf01:	call   0x10037980
1002cf06:	pop    ecx
1002cf07:	pop    ecx
1002cf08:	push   0x0
1002cf0a:	push   0x1
1002cf0c:	lea    ecx,[ebp+0x44]
1002cf0f:	call   0x100012f0
1002cf14:	lea    eax,[ebp+0x8]
1002cf17:	mov    BYTE PTR [ebp-0x4],0x0
1002cf1b:	call   0x10009e32
1002cf20:	or     DWORD PTR [ebp-0x4],0xffffffff
1002cf24:	jmp    0x1002cea3
1002cf29:	mov    al,BYTE PTR [edi+0x28]
1002cf2c:	test   al,al
1002cf2e:	jne    0x1002cf6c
1002cf30:	cmp    DWORD PTR [ebp+0x5c],0x10
1002cf34:	mov    eax,DWORD PTR [ebp+0x48]
1002cf37:	jae    0x1002cf3c
1002cf39:	lea    eax,[ebp+0x48]
1002cf3c:	push   eax
1002cf3d:	call   0x10002080
1002cf42:	push   0x5
1002cf44:	call   0x10037980
1002cf49:	pop    ecx
1002cf4a:	pop    ecx
1002cf4b:	push   0x0
1002cf4d:	push   0x1
1002cf4f:	lea    ecx,[ebp+0x44]
1002cf52:	call   0x100012f0
1002cf57:	lea    eax,[ebp+0x8]
1002cf5a:	mov    BYTE PTR [ebp-0x4],0x0
1002cf5e:	call   0x10009e32
1002cf63:	or     DWORD PTR [ebp-0x4],0xffffffff
1002cf67:	jmp    0x1002d0ac
1002cf6c:	mov    ebx,DWORD PTR [ebp+0x8]
1002cf6f:	push   0x1aaeb932
1002cf74:	push   0x10072de8
1002cf79:	call   0x10004246
1002cf7e:	push   eax
1002cf7f:	push   0x10
1002cf81:	push   0x1006dde4
1002cf86:	call   0x10004258
1002cf8b:	add    esp,0x14
1002cf8e:	push   eax
1002cf8f:	lea    ecx,[ebp-0x44]
1002cf92:	call   0x100011cd
1002cf97:	push   0x0
1002cf99:	lea    eax,[ebp-0x44]
1002cf9c:	push   eax
1002cf9d:	lea    eax,[ebp-0x60]
1002cfa0:	push   eax
1002cfa1:	lea    eax,[ebx+0x20]
1002cfa4:	mov    BYTE PTR [ebp-0x4],0x3
1002cfa8:	call   0x100084cc
1002cfad:	mov    BYTE PTR [ebp-0x4],0x4
1002cfb1:	cmp    DWORD PTR [eax+0x18],0x10
1002cfb5:	jb     0x1002cfbc
1002cfb7:	mov    eax,DWORD PTR [eax+0x4]
1002cfba:	jmp    0x1002cfbf
1002cfbc:	add    eax,0x4
1002cfbf:	push   eax
1002cfc0:	lea    ecx,[ebp-0x28]
1002cfc3:	call   0x100011cd
1002cfc8:	lea    eax,[ebp-0x28]
1002cfcb:	push   eax
1002cfcc:	lea    esi,[ebp+0xc]
1002cfcf:	mov    BYTE PTR [ebp-0x4],0x5
1002cfd3:	call   0x1002fa30
1002cfd8:	pop    ecx
1002cfd9:	xor    esi,esi
1002cfdb:	push   esi
1002cfdc:	push   0x1
1002cfde:	lea    ecx,[ebp-0x28]
1002cfe1:	call   0x100012f0
1002cfe6:	push   esi
1002cfe7:	push   0x1
1002cfe9:	lea    ecx,[ebp-0x60]
1002cfec:	call   0x100012f0
1002cff1:	push   esi
1002cff2:	push   0x1
1002cff4:	lea    ecx,[ebp-0x44]
1002cff7:	mov    BYTE PTR [ebp-0x4],0x9
1002cffb:	call   0x100012f0
1002d000:	lea    esi,[edi+0x20]
1002d003:	mov    eax,DWORD PTR [esi]
1002d005:	push   0x1
1002d007:	mov    DWORD PTR [ebp+0x0],eax
1002d00a:	lea    eax,[edi+0x24]
1002d00d:	push   eax
1002d00e:	lea    eax,[ebp+0x44]
1002d011:	push   eax
1002d012:	push   ebx
1002d013:	push   DWORD PTR [ebp+0x4]
1002d016:	push   DWORD PTR [edi+0x8]
1002d019:	call   0x10022769
1002d01e:	mov    ecx,DWORD PTR [ebp+0x0]
1002d021:	push   eax
1002d022:	call   0x10022f09
1002d027:	test   al,al
1002d029:	jne    0x1002d048
1002d02b:	cmp    DWORD PTR [ebp+0x5c],0x10
1002d02f:	mov    eax,DWORD PTR [ebp+0x48]
1002d032:	jae    0x1002d037
1002d034:	lea    eax,[ebp+0x48]
1002d037:	push   eax
1002d038:	call   0x10002080
1002d03d:	push   0x7
1002d03f:	call   0x10037980
1002d044:	pop    ecx
1002d045:	pop    ecx
1002d046:	jmp    0x1002d07f
1002d048:	mov    ebx,esi
1002d04a:	lea    ecx,[ebp+0x28]
1002d04d:	call   0x1002cc77
1002d052:	cmp    DWORD PTR [ebp+0x40],0x10
1002d056:	mov    ecx,DWORD PTR [ebp+0x2c]
1002d059:	jae    0x1002d05e
1002d05b:	lea    ecx,[ebp+0x2c]
1002d05e:	cmp    DWORD PTR [ebp+0x5c],0x10
1002d062:	mov    eax,DWORD PTR [ebp+0x48]
1002d065:	jae    0x1002d06a
1002d067:	lea    eax,[ebp+0x48]
1002d06a:	push   ecx
1002d06b:	push   eax
1002d06c:	call   0x10002080
1002d071:	pop    ecx
1002d072:	pop    ecx
1002d073:	push   0x0
1002d075:	push   0x1
1002d077:	lea    ecx,[ebp+0x28]
1002d07a:	call   0x100012f0
1002d07f:	xor    esi,esi
1002d081:	push   esi
1002d082:	push   0x1
1002d084:	lea    ecx,[ebp+0xc]
1002d087:	call   0x100012f0
1002d08c:	push   esi
1002d08d:	push   0x1
1002d08f:	lea    ecx,[ebp+0x44]
1002d092:	call   0x100012f0
1002d097:	lea    eax,[ebp+0x8]
1002d09a:	mov    BYTE PTR [ebp-0x4],0x0
1002d09e:	call   0x10009e32
1002d0a3:	or     DWORD PTR [ebp-0x4],0xffffffff
1002d0a7:	cmp    DWORD PTR [ebp+0x4],esi
1002d0aa:	je     0x1002d0b4
1002d0ac:	push   DWORD PTR [ebp+0x4]
1002d0af:	call   0x10009eaf
1002d0b4:	xor    eax,eax
1002d0b6:	mov    ecx,DWORD PTR [ebp-0xc]
1002d0b9:	mov    DWORD PTR fs:0x0,ecx
1002d0c0:	pop    ecx
1002d0c1:	pop    edi
1002d0c2:	pop    esi
1002d0c3:	pop    ebx
1002d0c4:	mov    ecx,DWORD PTR [ebp+0x60]
1002d0c7:	xor    ecx,ebp
1002d0c9:	call   0x10042e97
1002d0ce:	add    ebp,0x64
1002d0d1:	leave  
1002d0d2:	ret    0x4
1002d0d5:	push   ebx
1002d0d6:	push   ebp
1002d0d7:	mov    ebp,DWORD PTR [esp+0xc]
1002d0db:	mov    eax,DWORD PTR [ebp+0x0]
1002d0de:	mov    eax,DWORD PTR [eax]
1002d0e0:	push   esi
1002d0e1:	push   edi
1002d0e2:	sub    esp,0x10
1002d0e5:	mov    edi,esp
1002d0e7:	mov    esi,0x1006f520
1002d0ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d0ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d0ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d0ef:	push   eax
1002d0f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d0f1:	call   0x10008744
1002d0f6:	test   eax,eax
1002d0f8:	jne    0x1002d0fe
1002d0fa:	xor    al,al
1002d0fc:	jmp    0x1002d137
1002d0fe:	push   0x8
1002d100:	call   0x1004349e
1002d105:	pop    ecx
1002d106:	mov    ecx,DWORD PTR [ebp+0x0]
1002d109:	mov    edx,DWORD PTR [ecx]
1002d10b:	xor    ebx,ebx
1002d10d:	push   ebx
1002d10e:	push   ebx
1002d10f:	mov    DWORD PTR [ecx],ebx
1002d111:	push   eax
1002d112:	mov    DWORD PTR [eax],edx
1002d114:	mov    ecx,DWORD PTR [ebp+0x4]
1002d117:	mov    edx,DWORD PTR [ecx]
1002d119:	push   0x1002ce20
1002d11e:	push   ebx
1002d11f:	mov    DWORD PTR [ecx],ebx
1002d121:	push   ebx
1002d122:	mov    DWORD PTR [eax+0x4],edx
1002d125:	call   DWORD PTR ds:0x10066098
1002d12b:	push   ebx
1002d12c:	mov    BYTE PTR [ebp+0x8],bl
1002d12f:	call   0x10042e92
1002d134:	pop    ecx
1002d135:	mov    al,0x1
1002d137:	pop    edi
1002d138:	pop    esi
1002d139:	pop    ebp
1002d13a:	pop    ebx
1002d13b:	ret    0x4
1002d13e:	mov    ecx,DWORD PTR [eax]
1002d140:	test   ecx,ecx
1002d142:	je     0x1002d14b
1002d144:	mov    eax,DWORD PTR [ecx]
1002d146:	push   0x1
1002d148:	call   DWORD PTR [eax+0x4]
1002d14b:	ret    
1002d14c:	push   edi
1002d14d:	mov    edi,DWORD PTR [esp+0x14]
1002d151:	mov    ecx,0x1007f9d0
1002d156:	call   0x10010455
1002d15b:	pop    edi
1002d15c:	ret    0x10
1002d15f:	push   DWORD PTR [esp+0x18]
1002d163:	mov    eax,0x1007f9d0
1002d168:	push   DWORD PTR [esp+0x14]
1002d16c:	push   DWORD PTR [esp+0x14]
1002d170:	call   0x10010483
1002d175:	ret    0x18
1002d178:	push   ebp
1002d179:	mov    ebp,esp
1002d17b:	push   DWORD PTR [ebp+0x28]
1002d17e:	mov    eax,0x1007f9d0
1002d183:	push   DWORD PTR [ebp+0x24]
1002d186:	push   DWORD PTR [ebp+0x20]
1002d189:	push   DWORD PTR [ebp+0x1c]
1002d18c:	push   DWORD PTR [ebp+0x18]
1002d18f:	push   DWORD PTR [ebp+0xc]
1002d192:	push   DWORD PTR [ebp+0x8]
1002d195:	call   0x10010526
1002d19a:	pop    ebp
1002d19b:	ret    0x24
1002d19e:	push   edi
1002d19f:	mov    edi,DWORD PTR [esp+0x14]
1002d1a3:	mov    ecx,0x1007f9ec
1002d1a8:	call   0x10010455
1002d1ad:	pop    edi
1002d1ae:	ret    0x10
1002d1b1:	push   DWORD PTR [esp+0x18]
1002d1b5:	mov    eax,0x1007f9ec
1002d1ba:	push   DWORD PTR [esp+0x14]
1002d1be:	push   DWORD PTR [esp+0x14]
1002d1c2:	call   0x10010483
1002d1c7:	ret    0x18
1002d1ca:	push   ebp
1002d1cb:	mov    ebp,esp
1002d1cd:	push   DWORD PTR [ebp+0x28]
1002d1d0:	mov    eax,0x1007f9ec
1002d1d5:	push   DWORD PTR [ebp+0x24]
1002d1d8:	push   DWORD PTR [ebp+0x20]
1002d1db:	push   DWORD PTR [ebp+0x1c]
1002d1de:	push   DWORD PTR [ebp+0x18]
1002d1e1:	push   DWORD PTR [ebp+0xc]
1002d1e4:	push   DWORD PTR [ebp+0x8]
1002d1e7:	call   0x10010526
1002d1ec:	pop    ebp
1002d1ed:	ret    0x24
1002d1f0:	mov    edx,DWORD PTR [esp+0x8]
1002d1f4:	test   edx,edx
1002d1f6:	jne    0x1002d1ff
1002d1f8:	mov    eax,0x80004003
1002d1fd:	jmp    0x1002d21a
1002d1ff:	mov    eax,DWORD PTR [esp+0x4]
1002d203:	mov    ecx,DWORD PTR [eax+0x8]
1002d206:	test   ecx,ecx
1002d208:	jne    0x1002d20e
1002d20a:	xor    eax,eax
1002d20c:	jmp    0x1002d216
1002d20e:	mov    eax,DWORD PTR [eax+0xc]
1002d211:	sub    eax,ecx
1002d213:	sar    eax,0x4
1002d216:	mov    DWORD PTR [edx],eax
1002d218:	xor    eax,eax
1002d21a:	ret    0x8
1002d21d:	push   ebp
1002d21e:	mov    ebp,esp
1002d220:	and    esp,0xfffffff8
1002d223:	sub    esp,0x14
1002d226:	cmp    DWORD PTR [ebp+0x10],0x0
1002d22a:	push   ebx
1002d22b:	push   esi
1002d22c:	push   edi
1002d22d:	jne    0x1002d239
1002d22f:	mov    eax,0x80004003
1002d234:	jmp    0x1002d2f9
1002d239:	cmp    DWORD PTR [ebp+0xc],0x1
1002d23d:	jge    0x1002d249
1002d23f:	mov    eax,0x80070057
1002d244:	jmp    0x1002d2f9
1002d249:	mov    ebx,DWORD PTR [ebp+0x8]
1002d24c:	mov    esi,DWORD PTR [ebx+0x8]
1002d24f:	dec    DWORD PTR [ebp+0xc]
1002d252:	add    ebx,0x4
1002d255:	cmp    esi,DWORD PTR [ebx+0x8]
1002d258:	mov    DWORD PTR [esp+0xc],0x80004005
1002d260:	jbe    0x1002d267
1002d262:	call   0x100433b0
1002d267:	mov    edi,ebx
1002d269:	mov    DWORD PTR [esp+0x10],edi
1002d26d:	mov    DWORD PTR [esp+0x14],esi
1002d271:	mov    esi,DWORD PTR [ebx+0x8]
1002d274:	cmp    DWORD PTR [ebx+0x4],esi
1002d277:	jbe    0x1002d27e
1002d279:	call   0x100433b0
1002d27e:	test   edi,edi
1002d280:	je     0x1002d286
1002d282:	cmp    edi,ebx
1002d284:	je     0x1002d28b
1002d286:	call   0x100433b0
1002d28b:	cmp    DWORD PTR [esp+0x14],esi
1002d28f:	je     0x1002d2ad
1002d291:	cmp    DWORD PTR [ebp+0xc],0x0
1002d295:	jle    0x1002d2ad
1002d297:	lea    edi,[esp+0x18]
1002d29b:	lea    esi,[esp+0x10]
1002d29f:	call   0x1002dd93
1002d2a4:	dec    DWORD PTR [ebp+0xc]
1002d2a7:	mov    edi,DWORD PTR [esp+0x10]
1002d2ab:	jmp    0x1002d271
1002d2ad:	mov    esi,DWORD PTR [ebx+0x8]
1002d2b0:	cmp    DWORD PTR [ebx+0x4],esi
1002d2b3:	jbe    0x1002d2ba
1002d2b5:	call   0x100433b0
1002d2ba:	test   edi,edi
1002d2bc:	je     0x1002d2c2
1002d2be:	cmp    edi,ebx
1002d2c0:	je     0x1002d2c7
1002d2c2:	call   0x100433b0
1002d2c7:	mov    ebx,DWORD PTR [esp+0x14]
1002d2cb:	cmp    ebx,esi
1002d2cd:	je     0x1002d2f5
1002d2cf:	test   edi,edi
1002d2d1:	jne    0x1002d2d8
1002d2d3:	call   0x100433b0
1002d2d8:	cmp    ebx,DWORD PTR [edi+0x8]
1002d2db:	jb     0x1002d2e2
1002d2dd:	call   0x100433b0
1002d2e2:	mov    eax,DWORD PTR [ebp+0x10]
1002d2e5:	and    WORD PTR [eax],0x0
1002d2e9:	push   ebx
1002d2ea:	push   eax
1002d2eb:	call   DWORD PTR ds:0x10066280
1002d2f1:	mov    DWORD PTR [esp+0xc],eax
1002d2f5:	mov    eax,DWORD PTR [esp+0xc]
1002d2f9:	pop    edi
1002d2fa:	pop    esi
1002d2fb:	pop    ebx
1002d2fc:	mov    esp,ebp
1002d2fe:	pop    ebp
1002d2ff:	ret    0xc
1002d302:	push   ebp
1002d303:	mov    ebp,esp
1002d305:	push   edi
1002d306:	mov    edi,DWORD PTR [ebp+0xc]
1002d309:	test   edi,edi
1002d30b:	jne    0x1002d314
1002d30d:	mov    eax,0x80004003
1002d312:	jmp    0x1002d35f
1002d314:	and    DWORD PTR [edi],0x0
1002d317:	push   ebx
1002d318:	push   esi
1002d319:	lea    eax,[ebp+0xc]
1002d31c:	push   eax
1002d31d:	call   0x1002eb27
1002d322:	mov    ebx,DWORD PTR [ebp+0xc]
1002d325:	mov    esi,eax
1002d327:	test   esi,esi
1002d329:	jl     0x1002d34e
1002d32b:	mov    eax,DWORD PTR [ebp+0x8]
1002d32e:	lea    ecx,[eax+0x4]
1002d331:	push   ecx
1002d332:	call   0x1002de3d
1002d337:	mov    esi,eax
1002d339:	test   esi,esi
1002d33b:	jne    0x1002d34e
1002d33d:	mov    eax,DWORD PTR [ebx]
1002d33f:	push   edi
1002d340:	push   0x1006dd2c
1002d345:	push   ebx
1002d346:	call   DWORD PTR [eax]
1002d348:	mov    esi,eax
1002d34a:	test   esi,esi
1002d34c:	je     0x1002d35b
1002d34e:	test   ebx,ebx
1002d350:	je     0x1002d35b
1002d352:	mov    eax,DWORD PTR [ebx]
1002d354:	push   0x1
1002d356:	mov    ecx,ebx
1002d358:	call   DWORD PTR [eax+0x1c]
1002d35b:	mov    eax,esi
1002d35d:	pop    esi
1002d35e:	pop    ebx
1002d35f:	pop    edi
1002d360:	pop    ebp
1002d361:	ret    0x8
1002d364:	mov    eax,DWORD PTR [esi+0x4]
1002d367:	test   eax,eax
1002d369:	je     0x1002d37c
1002d36b:	push   DWORD PTR [esi+0x8]
1002d36e:	call   0x1002dfb3
1002d373:	push   DWORD PTR [esi+0x4]
1002d376:	call   0x10042e92
1002d37b:	pop    ecx
1002d37c:	and    DWORD PTR [esi+0x4],0x0
1002d380:	and    DWORD PTR [esi+0x8],0x0
1002d384:	and    DWORD PTR [esi+0xc],0x0
1002d388:	ret    
1002d389:	push   ebp
1002d38a:	mov    ebp,esp
1002d38c:	and    esp,0xfffffff8
1002d38f:	mov    edx,DWORD PTR [esi+0x4]
1002d392:	sub    esp,0xc
1002d395:	test   edx,edx
1002d397:	push   edi
1002d398:	jne    0x1002d39e
1002d39a:	xor    ecx,ecx
1002d39c:	jmp    0x1002d3a6
1002d39e:	mov    ecx,DWORD PTR [esi+0x8]
1002d3a1:	sub    ecx,edx
1002d3a3:	sar    ecx,0x4
1002d3a6:	test   edx,edx
1002d3a8:	je     0x1002d3c8
1002d3aa:	mov    eax,DWORD PTR [esi+0xc]
1002d3ad:	sub    eax,edx
1002d3af:	sar    eax,0x4
1002d3b2:	cmp    ecx,eax
1002d3b4:	jae    0x1002d3c8
1002d3b6:	push   DWORD PTR [ebp+0x8]
1002d3b9:	push   0x1
1002d3bb:	push   DWORD PTR [esi+0x8]
1002d3be:	call   0x1002da9e
1002d3c3:	mov    DWORD PTR [esi+0x8],eax
1002d3c6:	jmp    0x1002d3e5
1002d3c8:	mov    edi,DWORD PTR [esi+0x8]
1002d3cb:	cmp    edx,edi
1002d3cd:	jbe    0x1002d3d4
1002d3cf:	call   0x100433b0
1002d3d4:	push   edi
1002d3d5:	push   esi
1002d3d6:	push   DWORD PTR [ebp+0x8]
1002d3d9:	lea    eax,[esp+0x14]
1002d3dd:	push   eax
1002d3de:	mov    eax,esi
1002d3e0:	call   0x1002da1e
1002d3e5:	pop    edi
1002d3e6:	mov    esp,ebp
1002d3e8:	pop    ebp
1002d3e9:	ret    0x4
1002d3ec:	push   edi
1002d3ed:	mov    edi,DWORD PTR [esp+0x14]
1002d3f1:	mov    ecx,0x1007fa08
1002d3f6:	call   0x10010455
1002d3fb:	pop    edi
1002d3fc:	ret    0x10
1002d3ff:	push   DWORD PTR [esp+0x18]
1002d403:	mov    eax,0x1007fa08
1002d408:	push   DWORD PTR [esp+0x14]
1002d40c:	push   DWORD PTR [esp+0x14]
1002d410:	call   0x10010483
1002d415:	ret    0x18
1002d418:	push   ebp
1002d419:	mov    ebp,esp
1002d41b:	push   DWORD PTR [ebp+0x28]
1002d41e:	mov    eax,0x1007fa08
1002d423:	push   DWORD PTR [ebp+0x24]
1002d426:	push   DWORD PTR [ebp+0x20]
1002d429:	push   DWORD PTR [ebp+0x1c]
1002d42c:	push   DWORD PTR [ebp+0x18]
1002d42f:	push   DWORD PTR [ebp+0xc]
1002d432:	push   DWORD PTR [ebp+0x8]
1002d435:	call   0x10010526
1002d43a:	pop    ebp
1002d43b:	ret    0x24
1002d43e:	push   ebp
1002d43f:	mov    ebp,esp
1002d441:	and    esp,0xfffffff8
1002d444:	sub    esp,0xc
1002d447:	and    DWORD PTR [esp+0x4],0x0
1002d44c:	push   ebx
1002d44d:	push   esi
1002d44e:	push   edi
1002d44f:	lea    eax,[esp+0x10]
1002d453:	push   eax
1002d454:	call   0x1002ed85
1002d459:	test   eax,eax
1002d45b:	jl     0x1002d496
1002d45d:	mov    esi,DWORD PTR [ebp+0x8]
1002d460:	mov    edi,DWORD PTR [esp+0x10]
1002d464:	add    esi,0x4
1002d467:	lea    ebx,[edi+0x8]
1002d46a:	cmp    ebx,esi
1002d46c:	je     0x1002d48a
1002d46e:	mov    eax,DWORD PTR [ebx+0x4]
1002d471:	mov    ecx,DWORD PTR [eax]
1002d473:	push   eax
1002d474:	push   ebx
1002d475:	push   ecx
1002d476:	push   ebx
1002d477:	lea    eax,[esp+0x20]
1002d47b:	push   eax
1002d47c:	call   0x1002e2f2
1002d481:	mov    eax,esi
1002d483:	mov    ecx,ebx
1002d485:	call   0x1002f0a7
1002d48a:	push   ebx
1002d48b:	push   edi
1002d48c:	mov    edi,DWORD PTR [ebp+0xc]
1002d48f:	call   0x1002ee01
1002d494:	pop    ecx
1002d495:	pop    ecx
1002d496:	pop    edi
1002d497:	pop    esi
1002d498:	pop    ebx
1002d499:	mov    esp,ebp
1002d49b:	pop    ebp
1002d49c:	ret    0x8
1002d49f:	mov    eax,DWORD PTR [esp+0x8]
1002d4a3:	test   eax,eax
1002d4a5:	jne    0x1002d4ae
1002d4a7:	mov    eax,0x80004003
1002d4ac:	jmp    0x1002d4b9
1002d4ae:	mov    ecx,DWORD PTR [esp+0x4]
1002d4b2:	mov    ecx,DWORD PTR [ecx+0xc]
1002d4b5:	mov    DWORD PTR [eax],ecx
1002d4b7:	xor    eax,eax
1002d4b9:	ret    0x8
1002d4bc:	push   ebp
1002d4bd:	mov    ebp,esp
1002d4bf:	and    esp,0xfffffff8
1002d4c2:	sub    esp,0x14
1002d4c5:	cmp    DWORD PTR [ebp+0x10],0x0
1002d4c9:	push   ebx
1002d4ca:	push   esi
1002d4cb:	push   edi
1002d4cc:	jne    0x1002d4d8
1002d4ce:	mov    eax,0x80004003
1002d4d3:	jmp    0x1002d56d
1002d4d8:	cmp    DWORD PTR [ebp+0xc],0x1
1002d4dc:	jge    0x1002d4e8
1002d4de:	mov    eax,0x80070057
1002d4e3:	jmp    0x1002d56d
1002d4e8:	mov    ebx,DWORD PTR [ebp+0x8]
1002d4eb:	dec    DWORD PTR [ebp+0xc]
1002d4ee:	mov    eax,DWORD PTR [ebx+0x8]
1002d4f1:	mov    eax,DWORD PTR [eax]
1002d4f3:	add    ebx,0x4
1002d4f6:	mov    DWORD PTR [esp+0xc],0x80004005
1002d4fe:	mov    DWORD PTR [esp+0x10],ebx
1002d502:	mov    DWORD PTR [esp+0x14],eax
1002d506:	mov    DWORD PTR [esp+0x18],ebx
1002d50a:	mov    eax,DWORD PTR [ebx+0x4]
1002d50d:	lea    edi,[esp+0x18]
1002d511:	lea    esi,[esp+0x10]
1002d515:	mov    DWORD PTR [esp+0x1c],eax
1002d519:	call   0x10004ada
1002d51e:	test   al,al
1002d520:	jne    0x1002d532
1002d522:	cmp    DWORD PTR [ebp+0xc],0x0
1002d526:	jle    0x1002d532
1002d528:	call   0x1002dce2
1002d52d:	dec    DWORD PTR [ebp+0xc]
1002d530:	jmp    0x1002d50a
1002d532:	mov    eax,DWORD PTR [ebx+0x4]
1002d535:	lea    edi,[esp+0x18]
1002d539:	lea    esi,[esp+0x10]
1002d53d:	mov    DWORD PTR [esp+0x1c],eax
1002d541:	mov    DWORD PTR [esp+0x18],ebx
1002d545:	call   0x10004ada
1002d54a:	test   al,al
1002d54c:	jne    0x1002d569
1002d54e:	call   0x1002d763
1002d553:	mov    ecx,DWORD PTR [ebp+0x10]
1002d556:	and    WORD PTR [ecx],0x0
1002d55a:	add    eax,0x8
1002d55d:	push   eax
1002d55e:	push   ecx
1002d55f:	call   DWORD PTR ds:0x10066280
1002d565:	mov    DWORD PTR [esp+0xc],eax
1002d569:	mov    eax,DWORD PTR [esp+0xc]
1002d56d:	pop    edi
1002d56e:	pop    esi
1002d56f:	pop    ebx
1002d570:	mov    esp,ebp
1002d572:	pop    ebp
1002d573:	ret    0xc
1002d576:	push   ebp
1002d577:	mov    ebp,esp
1002d579:	push   edi
1002d57a:	mov    edi,DWORD PTR [ebp+0xc]
1002d57d:	test   edi,edi
1002d57f:	jne    0x1002d588
1002d581:	mov    eax,0x80004003
1002d586:	jmp    0x1002d5d3
1002d588:	and    DWORD PTR [edi],0x0
1002d58b:	push   ebx
1002d58c:	push   esi
1002d58d:	lea    eax,[ebp+0xc]
1002d590:	push   eax
1002d591:	call   0x1002ee5e
1002d596:	mov    ebx,DWORD PTR [ebp+0xc]
1002d599:	mov    esi,eax
1002d59b:	test   esi,esi
1002d59d:	jl     0x1002d5c2
1002d59f:	mov    eax,DWORD PTR [ebp+0x8]
1002d5a2:	lea    ecx,[eax+0x4]
1002d5a5:	push   ecx
1002d5a6:	call   0x1002df14
1002d5ab:	mov    esi,eax
1002d5ad:	test   esi,esi
1002d5af:	jne    0x1002d5c2
1002d5b1:	mov    eax,DWORD PTR [ebx]
1002d5b3:	push   edi
1002d5b4:	push   0x1006dd2c
1002d5b9:	push   ebx
1002d5ba:	call   DWORD PTR [eax]
1002d5bc:	mov    esi,eax
1002d5be:	test   esi,esi
1002d5c0:	je     0x1002d5cf
1002d5c2:	test   ebx,ebx
1002d5c4:	je     0x1002d5cf
1002d5c6:	mov    eax,DWORD PTR [ebx]
1002d5c8:	push   0x1
1002d5ca:	mov    ecx,ebx
1002d5cc:	call   DWORD PTR [eax+0x1c]
1002d5cf:	mov    eax,esi
1002d5d1:	pop    esi
1002d5d2:	pop    ebx
1002d5d3:	pop    edi
1002d5d4:	pop    ebp
1002d5d5:	ret    0x8
1002d5d8:	call   0x1002e881
1002d5dd:	lea    ecx,[esi+0x4]
1002d5e0:	mov    DWORD PTR [ecx],eax
1002d5e2:	mov    BYTE PTR [eax+0x29],0x1
1002d5e6:	mov    eax,DWORD PTR [ecx]
1002d5e8:	mov    DWORD PTR [eax+0x4],eax
1002d5eb:	mov    eax,DWORD PTR [ecx]
1002d5ed:	mov    DWORD PTR [eax],eax
1002d5ef:	mov    ecx,DWORD PTR [ecx]
1002d5f1:	mov    DWORD PTR [ecx+0x8],ecx
1002d5f4:	and    DWORD PTR [esi+0x8],0x0
1002d5f8:	mov    eax,esi
1002d5fa:	ret    
1002d5fb:	push   ebp
1002d5fc:	mov    ebp,esp
1002d5fe:	and    esp,0xfffffff8
1002d601:	push   0xffffffff
1002d603:	push   0x1005ffe0
1002d608:	mov    eax,fs:0x0
1002d60e:	push   eax
1002d60f:	sub    esp,0x40
1002d612:	push   ebx
1002d613:	push   esi
1002d614:	push   edi
1002d615:	mov    eax,ds:0x1007e030
1002d61a:	xor    eax,esp
1002d61c:	push   eax
1002d61d:	lea    eax,[esp+0x50]
1002d621:	mov    fs:0x0,eax
1002d627:	push   DWORD PTR [ebp+0xc]
1002d62a:	mov    edi,DWORD PTR [ebp+0x8]
1002d62d:	lea    ebx,[esp+0x18]
1002d631:	call   0x1002dc52
1002d636:	mov    eax,DWORD PTR [edi+0x4]
1002d639:	mov    DWORD PTR [esp+0x1c],edi
1002d63d:	lea    edi,[esp+0x1c]
1002d641:	mov    esi,ebx
1002d643:	mov    DWORD PTR [esp+0x20],eax
1002d647:	call   0x10004ada
1002d64c:	test   al,al
1002d64e:	mov    ebx,DWORD PTR [esp+0x18]
1002d652:	jne    0x1002d663
1002d654:	push   DWORD PTR [ebp+0xc]
1002d657:	lea    eax,[ebx+0x10]
1002d65a:	call   0x1002dcc6
1002d65f:	test   al,al
1002d661:	je     0x1002d6db
1002d663:	lea    eax,[esp+0x24]
1002d667:	push   eax
1002d668:	call   DWORD PTR ds:0x1006628c
1002d66e:	mov    esi,DWORD PTR [ebp+0xc]
1002d671:	and    DWORD PTR [esp+0x58],0x0
1002d676:	lea    edi,[esp+0x34]
1002d67a:	call   0x1002ae5e
1002d67f:	lea    eax,[esp+0x24]
1002d683:	mov    BYTE PTR [esp+0x58],0x1
1002d688:	and    WORD PTR [esp+0x3c],0x0
1002d68e:	push   eax
1002d68f:	lea    esi,[esp+0x40]
1002d693:	call   0x1002ae8c
1002d698:	push   ebx
1002d699:	mov    BYTE PTR [esp+0x5c],0x2
1002d69e:	push   DWORD PTR [esp+0x18]
1002d6a2:	mov    eax,edi
1002d6a4:	push   eax
1002d6a5:	lea    eax,[esp+0x28]
1002d6a9:	push   eax
1002d6aa:	mov    eax,DWORD PTR [ebp+0x8]
1002d6ad:	call   0x1002dace
1002d6b2:	mov    ecx,DWORD PTR [eax]
1002d6b4:	mov    eax,DWORD PTR [eax+0x4]
1002d6b7:	mov    DWORD PTR [esp+0x18],eax
1002d6bb:	mov    eax,esi
1002d6bd:	mov    esi,DWORD PTR ds:0x10066294
1002d6c3:	push   eax
1002d6c4:	mov    DWORD PTR [esp+0x18],ecx
1002d6c8:	call   esi
1002d6ca:	push   DWORD PTR [esp+0x34]
1002d6ce:	call   DWORD PTR ds:0x100662b4
1002d6d4:	lea    eax,[esp+0x24]
1002d6d8:	push   eax
1002d6d9:	call   esi
1002d6db:	lea    esi,[esp+0x14]
1002d6df:	call   0x1002d763
1002d6e4:	add    eax,0x8
1002d6e7:	mov    ecx,DWORD PTR [esp+0x50]
1002d6eb:	mov    DWORD PTR fs:0x0,ecx
1002d6f2:	pop    ecx
1002d6f3:	pop    edi
1002d6f4:	pop    esi
1002d6f5:	pop    ebx
1002d6f6:	mov    esp,ebp
1002d6f8:	pop    ebp
1002d6f9:	ret    0x8
1002d6fc:	push   ebp
1002d6fd:	mov    ebp,esp
1002d6ff:	sub    esp,0x18
1002d702:	push   ebx
1002d703:	push   esi
1002d704:	push   edi
1002d705:	push   DWORD PTR [ebp+0x10]
1002d708:	mov    edi,DWORD PTR [ebp+0x8]
1002d70b:	lea    ebx,[ebp-0xc]
1002d70e:	call   0x1002dc52
1002d713:	mov    eax,DWORD PTR [edi+0x4]
1002d716:	mov    DWORD PTR [ebp-0x14],edi
1002d719:	lea    edi,[ebp-0x14]
1002d71c:	mov    esi,ebx
1002d71e:	mov    DWORD PTR [ebp-0x10],eax
1002d721:	call   0x10004ada
1002d726:	test   al,al
1002d728:	jne    0x1002d740
1002d72a:	mov    eax,DWORD PTR [ebp-0x8]
1002d72d:	push   DWORD PTR [ebp+0x10]
1002d730:	add    eax,0x10
1002d733:	call   0x1002dcc6
1002d738:	test   al,al
1002d73a:	jne    0x1002d740
1002d73c:	mov    ecx,ebx
1002d73e:	jmp    0x1002d74f
1002d740:	mov    eax,DWORD PTR [ebp+0x8]
1002d743:	mov    ecx,DWORD PTR [eax+0x4]
1002d746:	mov    DWORD PTR [ebp-0x10],ecx
1002d749:	mov    DWORD PTR [ebp-0x14],eax
1002d74c:	lea    ecx,[ebp-0x14]
1002d74f:	mov    edx,DWORD PTR [ecx]
1002d751:	mov    eax,DWORD PTR [ebp+0xc]
1002d754:	mov    ecx,DWORD PTR [ecx+0x4]
1002d757:	pop    edi
1002d758:	pop    esi
1002d759:	mov    DWORD PTR [eax],edx
1002d75b:	mov    DWORD PTR [eax+0x4],ecx
1002d75e:	pop    ebx
1002d75f:	leave  
1002d760:	ret    0xc
1002d763:	cmp    DWORD PTR [esi],0x0
1002d766:	jne    0x1002d76d
1002d768:	call   0x100433b0
1002d76d:	mov    eax,DWORD PTR [esi]
1002d76f:	mov    ecx,DWORD PTR [esi+0x4]
1002d772:	cmp    ecx,DWORD PTR [eax+0x4]
1002d775:	jne    0x1002d77c
1002d777:	call   0x100433b0
1002d77c:	mov    eax,DWORD PTR [esi+0x4]
1002d77f:	add    eax,0x10
1002d782:	ret    
1002d783:	push   esi
1002d784:	mov    esi,ecx
1002d786:	mov    DWORD PTR [esi],0x10072ec4
1002d78c:	mov    DWORD PTR [esi+0x10],0xc0000001
1002d793:	mov    ecx,DWORD PTR ds:0x10080c04
1002d799:	mov    eax,DWORD PTR [ecx]
1002d79b:	call   DWORD PTR [eax+0x8]
1002d79e:	lea    eax,[esi+0x4]
1002d7a1:	pop    esi
1002d7a2:	jmp    0x1002dc91
1002d7a7:	mov    eax,DWORD PTR [esp+0x4]
1002d7ab:	inc    DWORD PTR [eax+0x10]
1002d7ae:	mov    eax,DWORD PTR [eax+0x10]
1002d7b1:	ret    0x4
1002d7b4:	mov    ecx,DWORD PTR [esp+0x4]
1002d7b8:	dec    DWORD PTR [ecx+0x10]
1002d7bb:	push   esi
1002d7bc:	mov    esi,DWORD PTR [ecx+0x10]
1002d7bf:	jne    0x1002d7cc
1002d7c1:	test   ecx,ecx
1002d7c3:	je     0x1002d7cc
1002d7c5:	mov    eax,DWORD PTR [ecx]
1002d7c7:	push   0x1
1002d7c9:	call   DWORD PTR [eax+0x34]
1002d7cc:	mov    eax,esi
1002d7ce:	pop    esi
1002d7cf:	ret    0x4
1002d7d2:	push   ebx
1002d7d3:	push   DWORD PTR [esp+0xc]
1002d7d7:	mov    ebx,DWORD PTR [esp+0x14]
1002d7db:	push   DWORD PTR [esp+0xc]
1002d7df:	mov    eax,0x10072b98
1002d7e4:	call   0x10010334
1002d7e9:	pop    ebx
1002d7ea:	ret    0xc
1002d7ed:	push   esi
1002d7ee:	mov    esi,ecx
1002d7f0:	mov    DWORD PTR [esi],0x10072e94
1002d7f6:	mov    DWORD PTR [esi+0x14],0xc0000001
1002d7fd:	mov    ecx,DWORD PTR ds:0x10080c04
1002d803:	mov    eax,DWORD PTR [ecx]
1002d805:	call   DWORD PTR [eax+0x8]
1002d808:	add    esi,0x4
1002d80b:	call   0x1002d364
1002d810:	pop    esi
1002d811:	ret    
1002d812:	mov    ecx,DWORD PTR [esp+0x4]
1002d816:	dec    DWORD PTR [ecx+0x14]
1002d819:	push   esi
1002d81a:	mov    esi,DWORD PTR [ecx+0x14]
1002d81d:	jne    0x1002d82a
1002d81f:	test   ecx,ecx
1002d821:	je     0x1002d82a
1002d823:	mov    eax,DWORD PTR [ecx]
1002d825:	push   0x1
1002d827:	call   DWORD PTR [eax+0x2c]
1002d82a:	mov    eax,esi
1002d82c:	pop    esi
1002d82d:	ret    0x4
1002d830:	push   ebx
1002d831:	push   DWORD PTR [esp+0xc]
1002d835:	mov    ebx,DWORD PTR [esp+0x14]
1002d839:	push   DWORD PTR [esp+0xc]
1002d83d:	mov    eax,0x10072b74
1002d842:	call   0x10010334
1002d847:	pop    ebx
1002d848:	ret    0xc
1002d84b:	push   esi
1002d84c:	mov    esi,ecx
1002d84e:	mov    DWORD PTR [esi],0x10072e5c
1002d854:	mov    DWORD PTR [esi+0x4],0xc0000001
1002d85b:	mov    ecx,DWORD PTR ds:0x10080c04
1002d861:	mov    eax,DWORD PTR [ecx]
1002d863:	call   DWORD PTR [eax+0x8]
1002d866:	call   0x1002d9f3
1002d86b:	pop    esi
1002d86c:	ret    
1002d86d:	mov    ecx,DWORD PTR [esp+0x4]
1002d871:	dec    DWORD PTR [ecx+0x4]
1002d874:	push   esi
1002d875:	mov    esi,DWORD PTR [ecx+0x4]
1002d878:	jne    0x1002d885
1002d87a:	test   ecx,ecx
1002d87c:	je     0x1002d885
1002d87e:	mov    eax,DWORD PTR [ecx]
1002d880:	push   0x1
1002d882:	call   DWORD PTR [eax+0x34]
1002d885:	mov    eax,esi
1002d887:	pop    esi
1002d888:	ret    0x4
1002d88b:	push   ebx
1002d88c:	push   DWORD PTR [esp+0xc]
1002d890:	mov    ebx,DWORD PTR [esp+0x14]
1002d894:	push   DWORD PTR [esp+0xc]
1002d898:	mov    eax,0x10072b50
1002d89d:	call   0x10010334
1002d8a2:	pop    ebx
1002d8a3:	ret    0xc
1002d8a6:	push   0x44
1002d8a8:	mov    eax,0x10060e7c
1002d8ad:	call   0x10059a35
1002d8b2:	mov    esi,DWORD PTR [ebp+0x8]
1002d8b5:	xor    ebx,ebx
1002d8b7:	mov    DWORD PTR [ebp-0x14],ebx
1002d8ba:	mov    DWORD PTR [esi+0x4],ebx
1002d8bd:	mov    DWORD PTR [esi+0x8],ebx
1002d8c0:	mov    DWORD PTR [esi+0xc],ebx
1002d8c3:	xor    edi,edi
1002d8c5:	inc    edi
1002d8c6:	mov    DWORD PTR [ebp-0x4],ebx
1002d8c9:	push   0x10072b1c
1002d8ce:	mov    DWORD PTR [ebp-0x14],edi
1002d8d1:	call   0x10043010
1002d8d6:	pop    ecx
1002d8d7:	mov    DWORD PTR [ebp-0x18],eax
1002d8da:	mov    DWORD PTR [ebp-0x10],ebx
1002d8dd:	push   DWORD PTR [ebp-0x10]
1002d8e0:	push   0x10072b1c
1002d8e5:	push   DWORD PTR [ebp+0xc]
1002d8e8:	call   0x1000c8c0
1002d8ed:	mov    ebx,eax
1002d8ef:	cmp    ebx,0xffffffff
1002d8f2:	jne    0x1002d8fa
1002d8f4:	mov    eax,DWORD PTR [ebp+0xc]
1002d8f7:	mov    ebx,DWORD PTR [eax+0x14]
1002d8fa:	cmp    ebx,DWORD PTR [ebp-0x10]
1002d8fd:	jb     0x1002d94e
1002d8ff:	mov    eax,ebx
1002d901:	sub    eax,DWORD PTR [ebp-0x10]
1002d904:	push   eax
1002d905:	push   DWORD PTR [ebp-0x10]
1002d908:	lea    eax,[ebp-0x50]
1002d90b:	push   DWORD PTR [ebp+0xc]
1002d90e:	call   0x1000c8df
1002d913:	lea    ecx,[ebp-0x34]
1002d916:	push   ecx
1002d917:	mov    ecx,eax
1002d919:	mov    DWORD PTR [ebp-0x4],edi
1002d91c:	call   0x1002dd2f
1002d921:	pop    ecx
1002d922:	push   eax
1002d923:	mov    BYTE PTR [ebp-0x4],0x2
1002d927:	call   0x1000f83a
1002d92c:	push   0x0
1002d92e:	push   edi
1002d92f:	lea    ecx,[ebp-0x34]
1002d932:	call   0x100012f0
1002d937:	push   0x0
1002d939:	push   edi
1002d93a:	lea    ecx,[ebp-0x50]
1002d93d:	mov    BYTE PTR [ebp-0x4],0x0
1002d941:	call   0x100012f0
1002d946:	mov    eax,DWORD PTR [ebp-0x18]
1002d949:	add    ebx,eax
1002d94b:	mov    DWORD PTR [ebp-0x10],ebx
1002d94e:	mov    eax,DWORD PTR [ebp-0x10]
1002d951:	mov    ecx,DWORD PTR [ebp+0xc]
1002d954:	cmp    eax,DWORD PTR [ecx+0x14]
1002d957:	jb     0x1002d8dd
1002d959:	mov    eax,esi
1002d95b:	call   0x10059b0d
1002d960:	ret    
1002d961:	push   esi
1002d962:	mov    esi,DWORD PTR [eax]
1002d964:	test   esi,esi
1002d966:	je     0x1002d98a
1002d968:	mov    eax,DWORD PTR [esi+0x30]
1002d96b:	sub    eax,0x10
1002d96e:	call   0x10002081
1002d973:	lea    eax,[esi+0x20]
1002d976:	call   0x1002bd21
1002d97b:	lea    eax,[esi+0x10]
1002d97e:	call   0x1002bd21
1002d983:	push   esi
1002d984:	call   0x10042e92
1002d989:	pop    ecx
1002d98a:	pop    esi
1002d98b:	ret    
1002d98c:	lea    eax,[esi+0x8]
1002d98f:	push   eax
1002d990:	call   DWORD PTR ds:0x10066294
1002d996:	push   DWORD PTR [esi]
1002d998:	call   DWORD PTR ds:0x100662b4
1002d99e:	ret    
1002d99f:	push   esi
1002d9a0:	mov    esi,ecx
1002d9a2:	call   0x1002d783
1002d9a7:	test   BYTE PTR [esp+0x8],0x1
1002d9ac:	je     0x1002d9b5
1002d9ae:	push   esi
1002d9af:	call   0x10042e92
1002d9b4:	pop    ecx
1002d9b5:	mov    eax,esi
1002d9b7:	pop    esi
1002d9b8:	ret    0x4
1002d9bb:	push   esi
1002d9bc:	mov    esi,ecx
1002d9be:	call   0x1002d7ed
1002d9c3:	test   BYTE PTR [esp+0x8],0x1
1002d9c8:	je     0x1002d9d1
1002d9ca:	push   esi
1002d9cb:	call   0x10042e92
1002d9d0:	pop    ecx
1002d9d1:	mov    eax,esi
1002d9d3:	pop    esi
1002d9d4:	ret    0x4
1002d9d7:	push   esi
1002d9d8:	mov    esi,ecx
1002d9da:	call   0x1002d84b
1002d9df:	test   BYTE PTR [esp+0x8],0x1
1002d9e4:	je     0x1002d9ed
1002d9e6:	push   esi
1002d9e7:	call   0x10042e92
1002d9ec:	pop    ecx
1002d9ed:	mov    eax,esi
1002d9ef:	pop    esi
1002d9f0:	ret    0x4
1002d9f3:	push   edi
1002d9f4:	lea    edi,[esi+0x18]
1002d9f7:	call   0x100025c2
1002d9fc:	lea    edi,[esi+0x14]
1002d9ff:	call   0x100025c2
1002da04:	lea    edi,[esi+0x10]
1002da07:	call   0x100025c2
1002da0c:	lea    edi,[esi+0xc]
1002da0f:	call   0x100025c2
1002da14:	lea    edi,[esi+0x8]
1002da17:	call   0x100025c2
1002da1c:	pop    edi
1002da1d:	ret    
1002da1e:	push   ebp
1002da1f:	mov    ebp,esp
1002da21:	push   ecx
1002da22:	push   ebx
1002da23:	push   esi
1002da24:	mov    esi,eax
1002da26:	mov    ebx,DWORD PTR [esi+0x4]
1002da29:	push   edi
1002da2a:	xor    edi,edi
1002da2c:	cmp    ebx,edi
1002da2e:	je     0x1002da5c
1002da30:	mov    eax,DWORD PTR [esi+0x8]
1002da33:	mov    ecx,eax
1002da35:	sub    ecx,ebx
1002da37:	sar    ecx,0x4
1002da3a:	je     0x1002da5c
1002da3c:	cmp    ebx,eax
1002da3e:	jbe    0x1002da45
1002da40:	call   0x100433b0
1002da45:	cmp    DWORD PTR [ebp+0x10],edi
1002da48:	je     0x1002da4f
1002da4a:	cmp    DWORD PTR [ebp+0x10],esi
1002da4d:	je     0x1002da54
1002da4f:	call   0x100433b0
1002da54:	mov    edi,DWORD PTR [ebp+0x14]
1002da57:	sub    edi,ebx
1002da59:	sar    edi,0x4
1002da5c:	push   DWORD PTR [ebp+0x14]
1002da5f:	push   DWORD PTR [ebp+0x10]
1002da62:	push   DWORD PTR [ebp+0xc]
1002da65:	push   esi
1002da66:	call   0x1002dfcc
1002da6b:	mov    ebx,DWORD PTR [esi+0x4]
1002da6e:	cmp    ebx,DWORD PTR [esi+0x8]
1002da71:	jbe    0x1002da78
1002da73:	call   0x100433b0
1002da78:	shl    edi,0x4
1002da7b:	add    edi,ebx
1002da7d:	cmp    edi,DWORD PTR [esi+0x8]
1002da80:	mov    DWORD PTR [ebp+0x14],ebx
1002da83:	ja     0x1002da8a
1002da85:	cmp    edi,DWORD PTR [esi+0x4]
1002da88:	jae    0x1002da8f
1002da8a:	call   0x100433b0
1002da8f:	mov    eax,DWORD PTR [ebp+0x8]
1002da92:	mov    DWORD PTR [eax+0x4],edi
1002da95:	pop    edi
1002da96:	mov    DWORD PTR [eax],esi
1002da98:	pop    esi
1002da99:	pop    ebx
1002da9a:	leave  
1002da9b:	ret    0x10
1002da9e:	push   ebp
1002da9f:	mov    ebp,esp
1002daa1:	push   ecx
1002daa2:	push   edi
1002daa3:	xor    eax,eax
1002daa5:	lea    edi,[ebp-0x4]
1002daa8:	stos   BYTE PTR es:[edi],al
1002daa9:	push   DWORD PTR [ebp-0x4]
1002daac:	push   DWORD PTR [ebp+0xc]
1002daaf:	push   DWORD PTR [ebp+0x10]
1002dab2:	push   DWORD PTR [ebp+0xc]
1002dab5:	push   DWORD PTR [ebp+0x8]
1002dab8:	call   0x1002f182
1002dabd:	mov    eax,DWORD PTR [ebp+0xc]
1002dac0:	add    esp,0x14
1002dac3:	shl    eax,0x4
1002dac6:	add    eax,DWORD PTR [ebp+0x8]
1002dac9:	pop    edi
1002daca:	leave  
1002dacb:	ret    0xc
1002dace:	push   ebp
1002dacf:	mov    ebp,esp
1002dad1:	sub    esp,0x14
1002dad4:	push   ebx
1002dad5:	mov    ebx,eax
1002dad7:	xor    eax,eax
1002dad9:	cmp    DWORD PTR [ebx+0x8],eax
1002dadc:	push   esi
1002dadd:	push   edi
1002dade:	mov    DWORD PTR [ebp-0x8],eax
1002dae1:	mov    DWORD PTR [ebp-0x4],eax
1002dae4:	jne    0x1002db00
1002dae6:	mov    ecx,DWORD PTR [ebx+0x4]
1002dae9:	push   DWORD PTR [ebp+0xc]
1002daec:	push   0x1
1002daee:	mov    esi,ebx
1002daf0:	push   DWORD PTR [ebp+0x8]
1002daf3:	call   0x1002e39c
1002daf8:	mov    eax,DWORD PTR [ebp+0x8]
1002dafb:	jmp    0x1002dc4b
1002db00:	mov    eax,DWORD PTR [ebx+0x4]
1002db03:	mov    eax,DWORD PTR [eax]
1002db05:	lea    edi,[ebp-0x10]
1002db08:	lea    esi,[ebp+0x10]
1002db0b:	mov    DWORD PTR [ebp-0xc],eax
1002db0e:	mov    DWORD PTR [ebp-0x10],ebx
1002db11:	call   0x10004ada
1002db16:	test   al,al
1002db18:	je     0x1002db34
1002db1a:	mov    esi,DWORD PTR [ebp+0x14]
1002db1d:	push   DWORD PTR [ebp+0xc]
1002db20:	lea    eax,[esi+0x10]
1002db23:	call   0x1002dcc6
1002db28:	test   al,al
1002db2a:	je     0x1002dc30
1002db30:	mov    ecx,esi
1002db32:	jmp    0x1002dae9
1002db34:	mov    eax,DWORD PTR [ebx+0x4]
1002db37:	lea    edi,[ebp-0x10]
1002db3a:	lea    esi,[ebp+0x10]
1002db3d:	mov    DWORD PTR [ebp-0xc],eax
1002db40:	mov    DWORD PTR [ebp-0x10],ebx
1002db43:	call   0x10004ada
1002db48:	test   al,al
1002db4a:	je     0x1002db76
1002db4c:	mov    eax,DWORD PTR [ebx+0x4]
1002db4f:	mov    eax,DWORD PTR [eax+0x8]
1002db52:	add    eax,0x10
1002db55:	push   eax
1002db56:	mov    eax,DWORD PTR [ebp+0xc]
1002db59:	call   0x1002dcc6
1002db5e:	test   al,al
1002db60:	je     0x1002dc30
1002db66:	push   DWORD PTR [ebp+0xc]
1002db69:	mov    eax,DWORD PTR [ebx+0x4]
1002db6c:	mov    ecx,DWORD PTR [eax+0x8]
1002db6f:	push   0x0
1002db71:	jmp    0x1002daee
1002db76:	mov    edi,DWORD PTR [ebp+0x14]
1002db79:	push   DWORD PTR [ebp+0xc]
1002db7c:	lea    eax,[edi+0x10]
1002db7f:	call   0x1002dcc6
1002db84:	test   al,al
1002db86:	je     0x1002dbcd
1002db88:	mov    eax,DWORD PTR [ebp+0x10]
1002db8b:	lea    esi,[ebp-0x8]
1002db8e:	mov    DWORD PTR [ebp-0x8],eax
1002db91:	mov    DWORD PTR [ebp-0x4],edi
1002db94:	call   0x1002e4e9
1002db99:	mov    eax,DWORD PTR [eax+0x4]
1002db9c:	add    eax,0x10
1002db9f:	push   eax
1002dba0:	mov    eax,DWORD PTR [ebp+0xc]
1002dba3:	call   0x1002dcc6
1002dba8:	test   al,al
1002dbaa:	je     0x1002dbcd
1002dbac:	mov    ecx,DWORD PTR [ebp-0x4]
1002dbaf:	mov    eax,DWORD PTR [ecx+0x8]
1002dbb2:	cmp    BYTE PTR [eax+0x29],0x0
1002dbb6:	push   DWORD PTR [ebp+0xc]
1002dbb9:	mov    esi,ebx
1002dbbb:	je     0x1002dbc4
1002dbbd:	push   0x0
1002dbbf:	jmp    0x1002daf0
1002dbc4:	push   0x1
1002dbc6:	mov    ecx,edi
1002dbc8:	jmp    0x1002daf0
1002dbcd:	lea    eax,[edi+0x10]
1002dbd0:	push   eax
1002dbd1:	mov    eax,DWORD PTR [ebp+0xc]
1002dbd4:	call   0x1002dcc6
1002dbd9:	test   al,al
1002dbdb:	je     0x1002dc30
1002dbdd:	mov    eax,DWORD PTR [ebp+0x10]
1002dbe0:	mov    DWORD PTR [ebp-0x8],eax
1002dbe3:	mov    eax,DWORD PTR [ebx+0x4]
1002dbe6:	lea    esi,[ebp-0x8]
1002dbe9:	mov    DWORD PTR [ebp-0x4],edi
1002dbec:	mov    DWORD PTR [ebp-0xc],eax
1002dbef:	mov    DWORD PTR [ebp-0x10],ebx
1002dbf2:	call   0x1002dce2
1002dbf7:	lea    edi,[ebp-0x10]
1002dbfa:	call   0x10004ada
1002dbff:	test   al,al
1002dc01:	jne    0x1002dc15
1002dc03:	mov    eax,DWORD PTR [ebp-0x4]
1002dc06:	push   DWORD PTR [ebp+0xc]
1002dc09:	add    eax,0x10
1002dc0c:	call   0x1002dcc6
1002dc11:	test   al,al
1002dc13:	je     0x1002dc30
1002dc15:	mov    ecx,DWORD PTR [ebp+0x14]
1002dc18:	mov    eax,DWORD PTR [ecx+0x8]
1002dc1b:	cmp    BYTE PTR [eax+0x29],0x0
1002dc1f:	push   DWORD PTR [ebp+0xc]
1002dc22:	mov    esi,ebx
1002dc24:	jne    0x1002dbbd
1002dc26:	mov    ecx,DWORD PTR [ebp-0x4]
1002dc29:	push   0x1
1002dc2b:	jmp    0x1002daf0
1002dc30:	push   DWORD PTR [ebp+0xc]
1002dc33:	push   ebx
1002dc34:	lea    ebx,[ebp-0x14]
1002dc37:	call   0x1002e230
1002dc3c:	mov    edx,DWORD PTR [eax]
1002dc3e:	mov    ecx,DWORD PTR [ebp+0x8]
1002dc41:	mov    DWORD PTR [ecx],edx
1002dc43:	mov    eax,DWORD PTR [eax+0x4]
1002dc46:	mov    DWORD PTR [ecx+0x4],eax
1002dc49:	mov    eax,ecx
1002dc4b:	pop    edi
1002dc4c:	pop    esi
1002dc4d:	pop    ebx
1002dc4e:	leave  
1002dc4f:	ret    0x10
1002dc52:	push   ebp
1002dc53:	mov    ebp,esp
1002dc55:	push   ecx
1002dc56:	mov    eax,DWORD PTR [edi+0x4]
1002dc59:	push   esi
1002dc5a:	mov    esi,DWORD PTR [eax+0x4]
1002dc5d:	mov    DWORD PTR [ebp-0x4],eax
1002dc60:	jmp    0x1002dc7c
1002dc62:	lea    eax,[esi+0x10]
1002dc65:	push   eax
1002dc66:	mov    eax,DWORD PTR [ebp+0x8]
1002dc69:	call   0x1002dcc6
1002dc6e:	test   al,al
1002dc70:	je     0x1002dc77
1002dc72:	mov    esi,DWORD PTR [esi+0x8]
1002dc75:	jmp    0x1002dc7c
1002dc77:	mov    DWORD PTR [ebp-0x4],esi
1002dc7a:	mov    esi,DWORD PTR [esi]
1002dc7c:	cmp    BYTE PTR [esi+0x29],0x0
1002dc80:	je     0x1002dc62
1002dc82:	mov    eax,DWORD PTR [ebp-0x4]
1002dc85:	mov    DWORD PTR [ebx+0x4],eax
1002dc88:	mov    DWORD PTR [ebx],edi
1002dc8a:	mov    eax,ebx
1002dc8c:	pop    esi
1002dc8d:	leave  
1002dc8e:	ret    0x4
1002dc91:	push   ebp
1002dc92:	mov    ebp,esp
1002dc94:	and    esp,0xfffffff8
1002dc97:	sub    esp,0xc
1002dc9a:	push   ebx
1002dc9b:	mov    ebx,eax
1002dc9d:	mov    eax,DWORD PTR [ebx+0x4]
1002dca0:	mov    ecx,DWORD PTR [eax]
1002dca2:	push   eax
1002dca3:	push   ebx
1002dca4:	push   ecx
1002dca5:	push   ebx
1002dca6:	lea    eax,[esp+0x18]
1002dcaa:	push   eax
1002dcab:	call   0x1002e2f2
1002dcb0:	push   DWORD PTR [ebx+0x4]
1002dcb3:	call   0x10042e92
1002dcb8:	and    DWORD PTR [ebx+0x4],0x0
1002dcbc:	and    DWORD PTR [ebx+0x8],0x0
1002dcc0:	pop    ecx
1002dcc1:	pop    ebx
1002dcc2:	mov    esp,ebp
1002dcc4:	pop    ebp
1002dcc5:	ret    
1002dcc6:	push   0x0
1002dcc8:	push   0x400
1002dccd:	push   DWORD PTR [eax]
1002dccf:	mov    eax,DWORD PTR [esp+0x10]
1002dcd3:	push   DWORD PTR [eax]
1002dcd5:	call   0x10056ada
1002dcda:	neg    eax
1002dcdc:	sbb    eax,eax
1002dcde:	inc    eax
1002dcdf:	ret    0x4
1002dce2:	push   ebx
1002dce3:	xor    ebx,ebx
1002dce5:	cmp    DWORD PTR [esi],ebx
1002dce7:	jne    0x1002dcee
1002dce9:	call   0x100433b0
1002dcee:	mov    eax,DWORD PTR [esi+0x4]
1002dcf1:	cmp    BYTE PTR [eax+0x29],bl
1002dcf4:	je     0x1002dcfd
1002dcf6:	call   0x100433b0
1002dcfb:	jmp    0x1002dd2b
1002dcfd:	mov    ecx,DWORD PTR [eax+0x8]
1002dd00:	cmp    BYTE PTR [ecx+0x29],bl
1002dd03:	jne    0x1002dd20
1002dd05:	jmp    0x1002dd09
1002dd07:	mov    ecx,eax
1002dd09:	mov    eax,DWORD PTR [ecx]
1002dd0b:	cmp    BYTE PTR [eax+0x29],bl
1002dd0e:	je     0x1002dd07
1002dd10:	mov    DWORD PTR [esi+0x4],ecx
1002dd13:	jmp    0x1002dd2b
1002dd15:	mov    ecx,DWORD PTR [esi+0x4]
1002dd18:	cmp    ecx,DWORD PTR [eax+0x8]
1002dd1b:	jne    0x1002dd28
1002dd1d:	mov    DWORD PTR [esi+0x4],eax
1002dd20:	mov    eax,DWORD PTR [eax+0x4]
1002dd23:	cmp    BYTE PTR [eax+0x29],bl
1002dd26:	je     0x1002dd15
1002dd28:	mov    DWORD PTR [esi+0x4],eax
1002dd2b:	mov    eax,esi
1002dd2d:	pop    ebx
1002dd2e:	ret    
1002dd2f:	push   0x20
1002dd31:	mov    eax,0x1005ffad
1002dd36:	call   0x10059a35
1002dd3b:	mov    ebx,ecx
1002dd3d:	and    DWORD PTR [ebp-0x10],0x0
1002dd41:	call   0x1000f899
1002dd46:	mov    esi,eax
1002dd48:	call   0x1000f901
1002dd4d:	cmp    eax,0xffffffff
1002dd50:	jne    0x1002dd58
1002dd52:	mov    eax,DWORD PTR [ebx+0x14]
1002dd55:	dec    eax
1002dd56:	jmp    0x1002dd5b
1002dd58:	sub    eax,esi
1002dd5a:	inc    eax
1002dd5b:	push   eax
1002dd5c:	mov    eax,esi
1002dd5e:	inc    eax
1002dd5f:	neg    eax
1002dd61:	sbb    eax,eax
1002dd63:	and    eax,esi
1002dd65:	push   eax
1002dd66:	push   ebx
1002dd67:	lea    eax,[ebp-0x2c]
1002dd6a:	call   0x1000c8df
1002dd6f:	and    DWORD PTR [ebp-0x4],0x0
1002dd73:	push   eax
1002dd74:	push   DWORD PTR [ebp+0x8]
1002dd77:	call   0x1002e54a
1002dd7c:	pop    ecx
1002dd7d:	pop    ecx
1002dd7e:	push   0x0
1002dd80:	push   0x1
1002dd82:	lea    ecx,[ebp-0x2c]
1002dd85:	call   0x100012f0
1002dd8a:	mov    eax,DWORD PTR [ebp+0x8]
1002dd8d:	call   0x10059b0d
1002dd92:	ret    
1002dd93:	cmp    DWORD PTR [esi],0x0
1002dd96:	mov    eax,DWORD PTR [esi]
1002dd98:	mov    DWORD PTR [edi],eax
1002dd9a:	mov    eax,DWORD PTR [esi+0x4]
1002dd9d:	mov    DWORD PTR [edi+0x4],eax
1002dda0:	jne    0x1002dda7
1002dda2:	call   0x100433b0
1002dda7:	mov    eax,DWORD PTR [esi]
1002dda9:	mov    ecx,DWORD PTR [esi+0x4]
1002ddac:	cmp    ecx,DWORD PTR [eax+0x8]
1002ddaf:	jb     0x1002ddb6
1002ddb1:	call   0x100433b0
1002ddb6:	add    DWORD PTR [esi+0x4],0x10
1002ddba:	mov    eax,edi
1002ddbc:	ret    
1002ddbd:	mov    eax,DWORD PTR [esi]
1002ddbf:	test   eax,eax
1002ddc1:	je     0x1002ddc7
1002ddc3:	cmp    eax,DWORD PTR [edi]
1002ddc5:	je     0x1002ddcc
1002ddc7:	call   0x100433b0
1002ddcc:	mov    eax,DWORD PTR [esi+0x4]
1002ddcf:	xor    ecx,ecx
1002ddd1:	cmp    eax,DWORD PTR [edi+0x4]
1002ddd4:	setne  cl
1002ddd7:	mov    al,cl
1002ddd9:	ret    
1002ddda:	push   esi
1002dddb:	mov    esi,ecx
1002dddd:	mov    DWORD PTR [esi],0x10072f38
1002dde3:	mov    DWORD PTR [esi+0x14],0xc0000001
1002ddea:	mov    ecx,DWORD PTR ds:0x10080c04
1002ddf0:	mov    eax,DWORD PTR [ecx]
1002ddf2:	call   DWORD PTR [eax+0x8]
1002ddf5:	mov    esi,DWORD PTR [esi+0x4]
1002ddf8:	test   esi,esi
1002ddfa:	je     0x1002de02
1002ddfc:	mov    eax,DWORD PTR [esi]
1002ddfe:	push   esi
1002ddff:	call   DWORD PTR [eax+0x8]
1002de02:	pop    esi
1002de03:	ret    
1002de04:	mov    ecx,DWORD PTR [esp+0x4]
1002de08:	dec    DWORD PTR [ecx+0x14]
1002de0b:	push   esi
1002de0c:	mov    esi,DWORD PTR [ecx+0x14]
1002de0f:	jne    0x1002de1c
1002de11:	test   ecx,ecx
1002de13:	je     0x1002de1c
1002de15:	mov    eax,DWORD PTR [ecx]
1002de17:	push   0x1
1002de19:	call   DWORD PTR [eax+0x1c]
1002de1c:	mov    eax,esi
1002de1e:	pop    esi
1002de1f:	ret    0x4
1002de22:	push   ebx
1002de23:	push   DWORD PTR [esp+0xc]
1002de27:	mov    ebx,DWORD PTR [esp+0x14]
1002de2b:	push   DWORD PTR [esp+0xc]
1002de2f:	mov    eax,0x10072e1c
1002de34:	call   0x10010334
1002de39:	pop    ebx
1002de3a:	ret    0xc
1002de3d:	push   esi
1002de3e:	push   edi
1002de3f:	mov    edi,eax
1002de41:	lea    esi,[ebx+0x4]
1002de44:	cmp    DWORD PTR [esi],edi
1002de46:	je     0x1002de4d
1002de48:	call   0x1000763b
1002de4d:	mov    esi,DWORD PTR [esp+0xc]
1002de51:	mov    DWORD PTR [ebx+0x8],esi
1002de54:	mov    edi,DWORD PTR [esi+0x4]
1002de57:	cmp    edi,DWORD PTR [esi+0x8]
1002de5a:	jbe    0x1002de61
1002de5c:	call   0x100433b0
1002de61:	mov    DWORD PTR [ebx+0x10],edi
1002de64:	pop    edi
1002de65:	mov    DWORD PTR [ebx+0xc],esi
1002de68:	xor    eax,eax
1002de6a:	pop    esi
1002de6b:	ret    0x4
1002de6e:	push   esi
1002de6f:	push   edi
1002de70:	mov    edi,DWORD PTR [esp+0xc]
1002de74:	mov    esi,DWORD PTR [edi+0x8]
1002de77:	test   esi,esi
1002de79:	jne    0x1002de82
1002de7b:	mov    eax,0x80004005
1002de80:	jmp    0x1002de99
1002de82:	push   ebx
1002de83:	mov    ebx,DWORD PTR [esi+0x4]
1002de86:	cmp    ebx,DWORD PTR [esi+0x8]
1002de89:	jbe    0x1002de90
1002de8b:	call   0x100433b0
1002de90:	mov    DWORD PTR [edi+0x10],ebx
1002de93:	mov    DWORD PTR [edi+0xc],esi
1002de96:	xor    eax,eax
1002de98:	pop    ebx
1002de99:	pop    edi
1002de9a:	pop    esi
1002de9b:	ret    0x4
1002de9e:	push   esi
1002de9f:	mov    esi,ecx
1002dea1:	mov    DWORD PTR [esi],0x10072f58
1002dea7:	mov    DWORD PTR [esi+0x4],0xc0000001
1002deae:	mov    ecx,DWORD PTR ds:0x10080c04
1002deb4:	mov    eax,DWORD PTR [ecx]
1002deb6:	call   DWORD PTR [eax+0x8]
1002deb9:	lea    eax,[esi+0x8]
1002debc:	pop    esi
1002debd:	jmp    0x1002dc91
1002dec2:	push   ebx
1002dec3:	push   DWORD PTR [esp+0xc]
1002dec7:	mov    ebx,DWORD PTR [esp+0x14]
1002decb:	push   DWORD PTR [esp+0xc]
1002decf:	mov    eax,0x10072e34
1002ded4:	call   0x10010334
1002ded9:	pop    ebx
1002deda:	ret    0xc
1002dedd:	push   esi
1002dede:	mov    esi,ecx
1002dee0:	mov    DWORD PTR [esi],0x10072f68
1002dee6:	mov    DWORD PTR [esi+0x14],0xc0000001
1002deed:	mov    ecx,DWORD PTR ds:0x10080c04
1002def3:	mov    eax,DWORD PTR [ecx]
1002def5:	call   DWORD PTR [eax+0x8]
1002def8:	mov    esi,DWORD PTR [esi+0x4]
1002defb:	test   esi,esi
1002defd:	je     0x1002df05
1002deff:	mov    eax,DWORD PTR [esi]
1002df01:	push   esi
1002df02:	call   DWORD PTR [eax+0x8]
1002df05:	pop    esi
1002df06:	ret    
1002df07:	mov    eax,DWORD PTR [esp+0x4]
1002df0b:	inc    DWORD PTR [eax+0x14]
1002df0e:	mov    eax,DWORD PTR [eax+0x14]
1002df11:	ret    0x4
1002df14:	push   esi
1002df15:	push   edi
1002df16:	mov    edi,eax
1002df18:	lea    esi,[ebx+0x4]
1002df1b:	cmp    DWORD PTR [esi],edi
1002df1d:	je     0x1002df24
1002df1f:	call   0x1000763b
1002df24:	mov    eax,DWORD PTR [esp+0xc]
1002df28:	mov    DWORD PTR [ebx+0x8],eax
1002df2b:	mov    ecx,DWORD PTR [eax+0x4]
1002df2e:	mov    ecx,DWORD PTR [ecx]
1002df30:	pop    edi
1002df31:	mov    DWORD PTR [ebx+0xc],eax
1002df34:	mov    DWORD PTR [ebx+0x10],ecx
1002df37:	xor    eax,eax
1002df39:	pop    esi
1002df3a:	ret    0x4
1002df3d:	mov    ecx,DWORD PTR [esp+0x4]
1002df41:	mov    eax,DWORD PTR [ecx+0x8]
1002df44:	test   eax,eax
1002df46:	jne    0x1002df4f
1002df48:	mov    eax,0x80004005
1002df4d:	jmp    0x1002df5c
1002df4f:	mov    edx,DWORD PTR [eax+0x4]
1002df52:	mov    edx,DWORD PTR [edx]
1002df54:	mov    DWORD PTR [ecx+0xc],eax
1002df57:	mov    DWORD PTR [ecx+0x10],edx
1002df5a:	xor    eax,eax
1002df5c:	ret    0x4
1002df5f:	push   esi
1002df60:	mov    esi,ecx
1002df62:	call   0x1002ddda
1002df67:	test   BYTE PTR [esp+0x8],0x1
1002df6c:	je     0x1002df75
1002df6e:	push   esi
1002df6f:	call   0x10042e92
1002df74:	pop    ecx
1002df75:	mov    eax,esi
1002df77:	pop    esi
1002df78:	ret    0x4
1002df7b:	push   esi
1002df7c:	mov    esi,ecx
1002df7e:	call   0x1002de9e
1002df83:	test   BYTE PTR [esp+0x8],0x1
1002df88:	je     0x1002df91
1002df8a:	push   esi
1002df8b:	call   0x10042e92
1002df90:	pop    ecx
1002df91:	mov    eax,esi
1002df93:	pop    esi
1002df94:	ret    0x4
1002df97:	push   esi
1002df98:	mov    esi,ecx
1002df9a:	call   0x1002dedd
1002df9f:	test   BYTE PTR [esp+0x8],0x1
1002dfa4:	je     0x1002dfad
1002dfa6:	push   esi
1002dfa7:	call   0x10042e92
1002dfac:	pop    ecx
1002dfad:	mov    eax,esi
1002dfaf:	pop    esi
1002dfb0:	ret    0x4
1002dfb3:	push   esi
1002dfb4:	mov    esi,eax
1002dfb6:	jmp    0x1002dfc2
1002dfb8:	push   esi
1002dfb9:	call   DWORD PTR ds:0x10066294
1002dfbf:	add    esi,0x10
1002dfc2:	cmp    esi,DWORD PTR [esp+0x8]
1002dfc6:	jne    0x1002dfb8
1002dfc8:	pop    esi
1002dfc9:	ret    0x4
1002dfcc:	push   0x14
1002dfce:	mov    eax,0x1005ff8a
1002dfd3:	call   0x10059a68
1002dfd8:	mov    edi,DWORD PTR [ebp+0x8]
1002dfdb:	push   DWORD PTR [ebp+0xc]
1002dfde:	xor    ebx,ebx
1002dfe0:	lea    esi,[ebp-0x20]
1002dfe3:	mov    WORD PTR [ebp-0x20],bx
1002dfe7:	call   0x1002ae8c
1002dfec:	mov    DWORD PTR [ebp-0x4],ebx
1002dfef:	mov    ecx,DWORD PTR [edi+0x4]
1002dff2:	cmp    ecx,ebx
1002dff4:	je     0x1002dffe
1002dff6:	mov    ebx,DWORD PTR [edi+0xc]
1002dff9:	sub    ebx,ecx
1002dffb:	sar    ebx,0x4
1002dffe:	test   ecx,ecx
1002e000:	jne    0x1002e006
1002e002:	xor    eax,eax
1002e004:	jmp    0x1002e00e
1002e006:	mov    eax,DWORD PTR [edi+0x8]
1002e009:	sub    eax,ecx
1002e00b:	sar    eax,0x4
1002e00e:	mov    edx,0xfffffff
1002e013:	mov    esi,edx
1002e015:	sub    esi,eax
1002e017:	mov    eax,esi
1002e019:	xor    esi,esi
1002e01b:	inc    esi
1002e01c:	cmp    eax,esi
1002e01e:	jae    0x1002e025
1002e020:	call   0x1000a740
1002e025:	test   ecx,ecx
1002e027:	jne    0x1002e02d
1002e029:	xor    eax,eax
1002e02b:	jmp    0x1002e035
1002e02d:	mov    eax,DWORD PTR [edi+0x8]
1002e030:	sub    eax,ecx
1002e032:	sar    eax,0x4
1002e035:	inc    eax
1002e036:	cmp    ebx,eax
1002e038:	jae    0x1002e111
1002e03e:	mov    eax,ebx
1002e040:	shr    eax,1
1002e042:	sub    edx,eax
1002e044:	cmp    edx,ebx
1002e046:	jae    0x1002e04c
1002e048:	xor    ebx,ebx
1002e04a:	jmp    0x1002e04e
1002e04c:	add    ebx,eax
1002e04e:	test   ecx,ecx
1002e050:	jne    0x1002e056
1002e052:	xor    eax,eax
1002e054:	jmp    0x1002e05e
1002e056:	mov    eax,DWORD PTR [edi+0x8]
1002e059:	sub    eax,ecx
1002e05b:	sar    eax,0x4
1002e05e:	inc    eax
1002e05f:	cmp    ebx,eax
1002e061:	jae    0x1002e074
1002e063:	test   ecx,ecx
1002e065:	jne    0x1002e06b
1002e067:	xor    ebx,ebx
1002e069:	jmp    0x1002e073
1002e06b:	mov    ebx,DWORD PTR [edi+0x8]
1002e06e:	sub    ebx,ecx
1002e070:	sar    ebx,0x4
1002e073:	inc    ebx
1002e074:	mov    ecx,ebx
1002e076:	call   0x1002e1e6
1002e07b:	push   eax
1002e07c:	push   DWORD PTR [ebp+0x14]
1002e07f:	mov    BYTE PTR [ebp-0x4],0x1
1002e083:	mov    ecx,DWORD PTR [edi+0x4]
1002e086:	mov    DWORD PTR [ebp+0xc],eax
1002e089:	mov    DWORD PTR [ebp+0x8],eax
1002e08c:	call   0x1002f083
1002e091:	lea    ecx,[ebp-0x20]
1002e094:	push   ecx
1002e095:	push   esi
1002e096:	push   eax
1002e097:	mov    DWORD PTR [ebp+0x8],eax
1002e09a:	call   0x1002da9e
1002e09f:	mov    ecx,DWORD PTR [ebp+0x14]
1002e0a2:	push   eax
1002e0a3:	push   DWORD PTR [edi+0x8]
1002e0a6:	mov    DWORD PTR [ebp+0x8],eax
1002e0a9:	call   0x1002f083
1002e0ae:	mov    eax,DWORD PTR [edi+0x4]
1002e0b1:	test   eax,eax
1002e0b3:	jne    0x1002e0b9
1002e0b5:	xor    ecx,ecx
1002e0b7:	jmp    0x1002e0c1
1002e0b9:	mov    ecx,DWORD PTR [edi+0x8]
1002e0bc:	sub    ecx,eax
1002e0be:	sar    ecx,0x4
1002e0c1:	test   eax,eax
1002e0c3:	lea    esi,[ecx+0x1]
1002e0c6:	je     0x1002e0d9
1002e0c8:	push   DWORD PTR [edi+0x8]
1002e0cb:	call   0x1002dfb3
1002e0d0:	push   DWORD PTR [edi+0x4]
1002e0d3:	call   0x10042e92
1002e0d8:	pop    ecx
1002e0d9:	mov    eax,DWORD PTR [ebp+0xc]
1002e0dc:	shl    ebx,0x4
1002e0df:	add    ebx,eax
1002e0e1:	shl    esi,0x4
1002e0e4:	add    esi,eax
1002e0e6:	mov    DWORD PTR [edi+0xc],ebx
1002e0e9:	mov    DWORD PTR [edi+0x8],esi
1002e0ec:	mov    DWORD PTR [edi+0x4],eax
1002e0ef:	jmp    0x1002e1d4
1002e0f4:	push   DWORD PTR [ebp+0x8]
1002e0f7:	mov    eax,DWORD PTR [ebp+0xc]
1002e0fa:	call   0x1002dfb3
1002e0ff:	push   DWORD PTR [ebp+0xc]
1002e102:	call   0x10042e92
1002e107:	pop    ecx
1002e108:	push   0x0
1002e10a:	push   0x0
1002e10c:	call   0x100479b4
1002e111:	mov    eax,DWORD PTR [edi+0x8]
1002e114:	mov    ebx,DWORD PTR [ebp+0x14]
1002e117:	mov    ecx,eax
1002e119:	sub    ecx,ebx
1002e11b:	sar    ecx,0x4
1002e11e:	cmp    ecx,esi
1002e120:	jae    0x1002e18d
1002e122:	lea    ecx,[ebx+0x10]
1002e125:	push   ecx
1002e126:	push   eax
1002e127:	mov    ecx,ebx
1002e129:	call   0x1002f083
1002e12e:	mov    BYTE PTR [ebp-0x4],0x3
1002e132:	mov    eax,DWORD PTR [edi+0x8]
1002e135:	lea    ecx,[ebp-0x20]
1002e138:	push   ecx
1002e139:	mov    ecx,eax
1002e13b:	sub    ecx,ebx
1002e13d:	sar    ecx,0x4
1002e140:	sub    esi,ecx
1002e142:	push   esi
1002e143:	push   eax
1002e144:	call   0x1002da9e
1002e149:	and    DWORD PTR [ebp-0x4],0x0
1002e14d:	add    DWORD PTR [edi+0x8],0x10
1002e151:	mov    edi,DWORD PTR [edi+0x8]
1002e154:	add    edi,0xfffffff0
1002e157:	cmp    ebx,edi
1002e159:	mov    esi,ebx
1002e15b:	je     0x1002e1d4
1002e15d:	lea    eax,[ebp-0x20]
1002e160:	cmp    esi,eax
1002e162:	je     0x1002e16a
1002e164:	push   eax
1002e165:	call   0x1002ae8c
1002e16a:	add    esi,0x10
1002e16d:	cmp    esi,edi
1002e16f:	jne    0x1002e15d
1002e171:	jmp    0x1002e1d4
1002e173:	mov    eax,DWORD PTR [ebp+0x8]
1002e176:	mov    eax,DWORD PTR [eax+0x8]
1002e179:	add    eax,0x10
1002e17c:	push   eax
1002e17d:	mov    eax,DWORD PTR [ebp+0x14]
1002e180:	add    eax,0x10
1002e183:	call   0x1002dfb3
1002e188:	jmp    0x1002e108
1002e18d:	lea    esi,[eax-0x10]
1002e190:	push   eax
1002e191:	push   eax
1002e192:	mov    ecx,esi
1002e194:	call   0x1002f083
1002e199:	mov    DWORD PTR [edi+0x8],eax
1002e19c:	mov    edi,esi
1002e19e:	cmp    ebx,edi
1002e1a0:	je     0x1002e1b9
1002e1a2:	lea    esi,[edi+0x10]
1002e1a5:	sub    edi,0x10
1002e1a8:	sub    esi,0x10
1002e1ab:	cmp    esi,edi
1002e1ad:	je     0x1002e1b5
1002e1af:	push   edi
1002e1b0:	call   0x1002ae8c
1002e1b5:	cmp    edi,ebx
1002e1b7:	jne    0x1002e1a5
1002e1b9:	lea    edi,[ebx+0x10]
1002e1bc:	jmp    0x1002e1d0
1002e1be:	lea    eax,[ebp-0x20]
1002e1c1:	cmp    ebx,eax
1002e1c3:	je     0x1002e1cd
1002e1c5:	push   eax
1002e1c6:	mov    esi,ebx
1002e1c8:	call   0x1002ae8c
1002e1cd:	add    ebx,0x10
1002e1d0:	cmp    ebx,edi
1002e1d2:	jne    0x1002e1be
1002e1d4:	lea    eax,[ebp-0x20]
1002e1d7:	push   eax
1002e1d8:	call   DWORD PTR ds:0x10066294
1002e1de:	call   0x10059b0d
1002e1e3:	ret    0x10
1002e1e6:	push   ebp
1002e1e7:	mov    ebp,esp
1002e1e9:	sub    esp,0x10
1002e1ec:	test   ecx,ecx
1002e1ee:	ja     0x1002e1fe
1002e1f0:	xor    ecx,ecx
1002e1f2:	shl    ecx,0x4
1002e1f5:	push   ecx
1002e1f6:	call   0x1004349e
1002e1fb:	pop    ecx
1002e1fc:	leave  
1002e1fd:	ret    
1002e1fe:	or     eax,0xffffffff
1002e201:	xor    edx,edx
1002e203:	div    ecx
1002e205:	cmp    eax,0x10
1002e208:	jae    0x1002e1f2
1002e20a:	and    DWORD PTR [ebp-0x4],0x0
1002e20e:	lea    eax,[ebp-0x4]
1002e211:	push   eax
1002e212:	lea    ecx,[ebp-0x10]
1002e215:	call   0x10042f12
1002e21a:	push   0x10074cf8
1002e21f:	lea    eax,[ebp-0x10]
1002e222:	push   eax
1002e223:	mov    DWORD PTR [ebp-0x10],0x100665c8
1002e22a:	call   0x100479b4
1002e22f:	int3   
1002e230:	push   ebp
1002e231:	mov    ebp,esp
1002e233:	sub    esp,0x18
1002e236:	push   esi
1002e237:	mov    esi,DWORD PTR [ebp+0x8]
1002e23a:	mov    eax,DWORD PTR [esi+0x4]
1002e23d:	push   edi
1002e23e:	mov    edi,DWORD PTR [eax+0x4]
1002e241:	mov    DWORD PTR [ebp-0x4],eax
1002e244:	mov    al,0x1
1002e246:	mov    BYTE PTR [ebp-0x8],al
1002e249:	jmp    0x1002e267
1002e24b:	push   DWORD PTR [ebp+0xc]
1002e24e:	lea    eax,[edi+0x10]
1002e251:	mov    DWORD PTR [ebp-0x4],edi
1002e254:	call   0x1002dcc6
1002e259:	test   al,al
1002e25b:	mov    BYTE PTR [ebp-0x8],al
1002e25e:	je     0x1002e264
1002e260:	mov    edi,DWORD PTR [edi]
1002e262:	jmp    0x1002e267
1002e264:	mov    edi,DWORD PTR [edi+0x8]
1002e267:	cmp    BYTE PTR [edi+0x29],0x0
1002e26b:	je     0x1002e24b
1002e26d:	test   al,al
1002e26f:	mov    edi,DWORD PTR [ebp-0x4]
1002e272:	mov    DWORD PTR [ebp-0xc],edi
1002e275:	mov    DWORD PTR [ebp-0x10],esi
1002e278:	je     0x1002e2c6
1002e27a:	mov    eax,DWORD PTR [esi+0x4]
1002e27d:	mov    eax,DWORD PTR [eax]
1002e27f:	mov    DWORD PTR [ebp-0x18],esi
1002e282:	lea    edi,[ebp-0x18]
1002e285:	lea    esi,[ebp-0x10]
1002e288:	mov    DWORD PTR [ebp-0x14],eax
1002e28b:	call   0x10004ada
1002e290:	test   al,al
1002e292:	je     0x1002e2b8
1002e294:	push   DWORD PTR [ebp+0xc]
1002e297:	mov    esi,DWORD PTR [ebp+0x8]
1002e29a:	push   0x1
1002e29c:	mov    ecx,DWORD PTR [ebp-0x4]
1002e29f:	lea    eax,[ebp-0x18]
1002e2a2:	push   eax
1002e2a3:	call   0x1002e39c
1002e2a8:	mov    ecx,DWORD PTR [eax]
1002e2aa:	mov    eax,DWORD PTR [eax+0x4]
1002e2ad:	mov    DWORD PTR [ebx],ecx
1002e2af:	mov    DWORD PTR [ebx+0x4],eax
1002e2b2:	mov    BYTE PTR [ebx+0x8],0x1
1002e2b6:	jmp    0x1002e2ea
1002e2b8:	lea    esi,[ebp-0x10]
1002e2bb:	call   0x1002e4e9
1002e2c0:	mov    edi,DWORD PTR [ebp-0xc]
1002e2c3:	mov    esi,DWORD PTR [ebp+0x8]
1002e2c6:	lea    eax,[edi+0x10]
1002e2c9:	push   eax
1002e2ca:	mov    eax,DWORD PTR [ebp+0xc]
1002e2cd:	call   0x1002dcc6
1002e2d2:	test   al,al
1002e2d4:	je     0x1002e2de
1002e2d6:	push   DWORD PTR [ebp+0xc]
1002e2d9:	push   DWORD PTR [ebp-0x8]
1002e2dc:	jmp    0x1002e29c
1002e2de:	mov    eax,DWORD PTR [ebp-0x10]
1002e2e1:	mov    DWORD PTR [ebx],eax
1002e2e3:	mov    DWORD PTR [ebx+0x4],edi
1002e2e6:	mov    BYTE PTR [ebx+0x8],0x0
1002e2ea:	pop    edi
1002e2eb:	mov    eax,ebx
1002e2ed:	pop    esi
1002e2ee:	leave  
1002e2ef:	ret    0x8
1002e2f2:	push   ebp
1002e2f3:	mov    ebp,esp
1002e2f5:	sub    esp,0x14
1002e2f8:	mov    eax,DWORD PTR [ebx+0x4]
1002e2fb:	mov    eax,DWORD PTR [eax]
1002e2fd:	push   esi
1002e2fe:	push   edi
1002e2ff:	lea    edi,[ebp-0xc]
1002e302:	lea    esi,[ebp+0xc]
1002e305:	mov    DWORD PTR [ebp-0x8],eax
1002e308:	mov    DWORD PTR [ebp-0xc],ebx
1002e30b:	call   0x10004ada
1002e310:	test   al,al
1002e312:	je     0x1002e379
1002e314:	mov    eax,DWORD PTR [ebx+0x4]
1002e317:	lea    edi,[ebp-0xc]
1002e31a:	lea    esi,[ebp+0x14]
1002e31d:	mov    DWORD PTR [ebp-0x8],eax
1002e320:	mov    DWORD PTR [ebp-0xc],ebx
1002e323:	call   0x10004ada
1002e328:	test   al,al
1002e32a:	je     0x1002e379
1002e32c:	mov    eax,DWORD PTR [ebx+0x4]
1002e32f:	push   DWORD PTR [eax+0x4]
1002e332:	mov    ecx,ebx
1002e334:	call   0x1002e900
1002e339:	mov    eax,DWORD PTR [ebx+0x4]
1002e33c:	mov    DWORD PTR [eax+0x4],eax
1002e33f:	mov    eax,DWORD PTR [ebx+0x4]
1002e342:	and    DWORD PTR [ebx+0x8],0x0
1002e346:	mov    DWORD PTR [eax],eax
1002e348:	mov    eax,DWORD PTR [ebx+0x4]
1002e34b:	mov    DWORD PTR [eax+0x8],eax
1002e34e:	mov    eax,DWORD PTR [ebx+0x4]
1002e351:	mov    ecx,DWORD PTR [eax]
1002e353:	mov    eax,DWORD PTR [ebp+0x8]
1002e356:	mov    DWORD PTR [eax],ebx
1002e358:	jmp    0x1002e393
1002e35a:	mov    eax,DWORD PTR [ebp+0x10]
1002e35d:	mov    edi,DWORD PTR [ebp+0xc]
1002e360:	lea    esi,[ebp+0xc]
1002e363:	mov    DWORD PTR [ebp-0x8],eax
1002e366:	call   0x1002dce2
1002e36b:	push   DWORD PTR [ebp-0x8]
1002e36e:	lea    eax,[ebp-0x14]
1002e371:	push   edi
1002e372:	push   eax
1002e373:	push   ebx
1002e374:	call   0x1002e562
1002e379:	lea    edi,[ebp+0x14]
1002e37c:	lea    esi,[ebp+0xc]
1002e37f:	call   0x10004ada
1002e384:	test   al,al
1002e386:	je     0x1002e35a
1002e388:	mov    ecx,DWORD PTR [ebp+0xc]
1002e38b:	mov    eax,DWORD PTR [ebp+0x8]
1002e38e:	mov    DWORD PTR [eax],ecx
1002e390:	mov    ecx,DWORD PTR [ebp+0x10]
1002e393:	pop    edi
1002e394:	mov    DWORD PTR [eax+0x4],ecx
1002e397:	pop    esi
1002e398:	leave  
1002e399:	ret    0x14
1002e39c:	push   0x48
1002e39e:	mov    eax,0x100605b3
1002e3a3:	call   0x10059a35
1002e3a8:	mov    edi,ecx
1002e3aa:	cmp    DWORD PTR [esi+0x8],0xaaaaaa9
1002e3b1:	jb     0x1002e3e5
1002e3b3:	push   0x1006d030
1002e3b8:	lea    ecx,[ebp-0x2c]
1002e3bb:	call   0x100011cd
1002e3c0:	and    DWORD PTR [ebp-0x4],0x0
1002e3c4:	lea    eax,[ebp-0x2c]
1002e3c7:	push   eax
1002e3c8:	lea    ecx,[ebp-0x54]
1002e3cb:	call   0x10001077
1002e3d0:	push   0x10074da0
1002e3d5:	lea    eax,[ebp-0x54]
1002e3d8:	push   eax
1002e3d9:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1002e3e0:	call   0x100479b4
1002e3e5:	mov    eax,DWORD PTR [esi+0x4]
1002e3e8:	push   0x0
1002e3ea:	push   DWORD PTR [ebp+0x10]
1002e3ed:	push   eax
1002e3ee:	push   edi
1002e3ef:	push   eax
1002e3f0:	call   0x1002e8ab
1002e3f5:	inc    DWORD PTR [esi+0x8]
1002e3f8:	mov    ebx,eax
1002e3fa:	mov    eax,DWORD PTR [esi+0x4]
1002e3fd:	cmp    edi,eax
1002e3ff:	jne    0x1002e40e
1002e401:	mov    DWORD PTR [eax+0x4],ebx
1002e404:	mov    eax,DWORD PTR [esi+0x4]
1002e407:	mov    DWORD PTR [eax],ebx
1002e409:	mov    eax,DWORD PTR [esi+0x4]
1002e40c:	jmp    0x1002e42c
1002e40e:	cmp    BYTE PTR [ebp+0xc],0x0
1002e412:	je     0x1002e421
1002e414:	mov    DWORD PTR [edi],ebx
1002e416:	mov    eax,DWORD PTR [esi+0x4]
1002e419:	cmp    edi,DWORD PTR [eax]
1002e41b:	jne    0x1002e42f
1002e41d:	mov    DWORD PTR [eax],ebx
1002e41f:	jmp    0x1002e42f
1002e421:	mov    DWORD PTR [edi+0x8],ebx
1002e424:	mov    eax,DWORD PTR [esi+0x4]
1002e427:	cmp    edi,DWORD PTR [eax+0x8]
1002e42a:	jne    0x1002e42f
1002e42c:	mov    DWORD PTR [eax+0x8],ebx
1002e42f:	mov    edi,ebx
1002e431:	lea    eax,[ebx+0x4]
1002e434:	jmp    0x1002e4c3
1002e439:	mov    ecx,DWORD PTR [eax]
1002e43b:	mov    edx,DWORD PTR [ecx+0x4]
1002e43e:	cmp    ecx,DWORD PTR [edx]
1002e440:	jne    0x1002e477
1002e442:	mov    edx,DWORD PTR [edx+0x8]
1002e445:	cmp    BYTE PTR [edx+0x28],0x0
1002e449:	je     0x1002e47f
1002e44b:	cmp    edi,DWORD PTR [ecx+0x8]
1002e44e:	jne    0x1002e458
1002e450:	push   esi
1002e451:	mov    edi,ecx
1002e453:	call   0x1002e7ff
1002e458:	mov    eax,DWORD PTR [edi+0x4]
1002e45b:	mov    BYTE PTR [eax+0x28],0x1
1002e45f:	mov    eax,DWORD PTR [edi+0x4]
1002e462:	mov    eax,DWORD PTR [eax+0x4]
1002e465:	mov    BYTE PTR [eax+0x28],0x0
1002e469:	mov    eax,DWORD PTR [edi+0x4]
1002e46c:	mov    ecx,DWORD PTR [eax+0x4]
1002e46f:	push   esi
1002e470:	call   0x1002e83f
1002e475:	jmp    0x1002e4c0
1002e477:	mov    edx,DWORD PTR [edx]
1002e479:	cmp    BYTE PTR [edx+0x28],0x0
1002e47d:	jne    0x1002e497
1002e47f:	mov    BYTE PTR [ecx+0x28],0x1
1002e483:	mov    BYTE PTR [edx+0x28],0x1
1002e487:	mov    ecx,DWORD PTR [eax]
1002e489:	mov    ecx,DWORD PTR [ecx+0x4]
1002e48c:	mov    BYTE PTR [ecx+0x28],0x0
1002e490:	mov    eax,DWORD PTR [eax]
1002e492:	mov    edi,DWORD PTR [eax+0x4]
1002e495:	jmp    0x1002e4c0
1002e497:	cmp    edi,DWORD PTR [ecx]
1002e499:	jne    0x1002e4a3
1002e49b:	push   esi
1002e49c:	mov    edi,ecx
1002e49e:	call   0x1002e83f
1002e4a3:	mov    eax,DWORD PTR [edi+0x4]
1002e4a6:	mov    BYTE PTR [eax+0x28],0x1
1002e4aa:	mov    eax,DWORD PTR [edi+0x4]
1002e4ad:	mov    eax,DWORD PTR [eax+0x4]
1002e4b0:	mov    BYTE PTR [eax+0x28],0x0
1002e4b4:	mov    eax,DWORD PTR [edi+0x4]
1002e4b7:	mov    ecx,DWORD PTR [eax+0x4]
1002e4ba:	push   esi
1002e4bb:	call   0x1002e7ff
1002e4c0:	lea    eax,[edi+0x4]
1002e4c3:	mov    ecx,DWORD PTR [eax]
1002e4c5:	cmp    BYTE PTR [ecx+0x28],0x0
1002e4c9:	je     0x1002e439
1002e4cf:	mov    eax,DWORD PTR [esi+0x4]
1002e4d2:	mov    eax,DWORD PTR [eax+0x4]
1002e4d5:	mov    BYTE PTR [eax+0x28],0x1
1002e4d9:	mov    eax,DWORD PTR [ebp+0x8]
1002e4dc:	mov    DWORD PTR [eax+0x4],ebx
1002e4df:	mov    DWORD PTR [eax],esi
1002e4e1:	call   0x10059b0d
1002e4e6:	ret    0xc
1002e4e9:	push   ebx
1002e4ea:	xor    ebx,ebx
1002e4ec:	cmp    DWORD PTR [esi],ebx
1002e4ee:	jne    0x1002e4f5
1002e4f0:	call   0x100433b0
1002e4f5:	mov    eax,DWORD PTR [esi+0x4]
1002e4f8:	cmp    BYTE PTR [eax+0x29],bl
1002e4fb:	je     0x1002e50a
1002e4fd:	mov    eax,DWORD PTR [eax+0x8]
1002e500:	mov    DWORD PTR [esi+0x4],eax
1002e503:	cmp    BYTE PTR [eax+0x29],bl
1002e506:	je     0x1002e546
1002e508:	jmp    0x1002e53c
1002e50a:	mov    ecx,DWORD PTR [eax]
1002e50c:	cmp    BYTE PTR [ecx+0x29],bl
1002e50f:	jne    0x1002e52c
1002e511:	jmp    0x1002e515
1002e513:	mov    ecx,eax
1002e515:	mov    eax,DWORD PTR [ecx+0x8]
1002e518:	cmp    BYTE PTR [eax+0x29],bl
1002e51b:	je     0x1002e513
1002e51d:	mov    DWORD PTR [esi+0x4],ecx
1002e520:	jmp    0x1002e546
1002e522:	mov    ecx,DWORD PTR [esi+0x4]
1002e525:	cmp    ecx,DWORD PTR [eax]
1002e527:	jne    0x1002e534
1002e529:	mov    DWORD PTR [esi+0x4],eax
1002e52c:	mov    eax,DWORD PTR [eax+0x4]
1002e52f:	cmp    BYTE PTR [eax+0x29],bl
1002e532:	je     0x1002e522
1002e534:	mov    ecx,DWORD PTR [esi+0x4]
1002e537:	cmp    BYTE PTR [ecx+0x29],bl
1002e53a:	je     0x1002e543
1002e53c:	call   0x100433b0
1002e541:	jmp    0x1002e546
1002e543:	mov    DWORD PTR [esi+0x4],eax
1002e546:	mov    eax,esi
1002e548:	pop    ebx
1002e549:	ret    
1002e54a:	push   ebp
1002e54b:	mov    ebp,esp
1002e54d:	push   ecx
1002e54e:	push   DWORD PTR [ebp+0xc]
1002e551:	mov    ecx,DWORD PTR [ebp+0x8]
1002e554:	and    DWORD PTR [ebp-0x4],0x0
1002e558:	call   0x100011a7
1002e55d:	mov    eax,DWORD PTR [ebp+0x8]
1002e560:	leave  
1002e561:	ret    
1002e562:	push   0x44
1002e564:	mov    eax,0x1006071f
1002e569:	call   0x10059a35
1002e56e:	mov    edi,DWORD PTR [ebp+0x14]
1002e571:	cmp    BYTE PTR [edi+0x29],0x0
1002e575:	je     0x1002e5a9
1002e577:	push   0x1006ccec
1002e57c:	lea    ecx,[ebp-0x28]
1002e57f:	call   0x100011cd
1002e584:	and    DWORD PTR [ebp-0x4],0x0
1002e588:	lea    eax,[ebp-0x28]
1002e58b:	push   eax
1002e58c:	lea    ecx,[ebp-0x50]
1002e58f:	call   0x10001077
1002e594:	push   0x10074cc0
1002e599:	lea    eax,[ebp-0x50]
1002e59c:	push   eax
1002e59d:	mov    DWORD PTR [ebp-0x50],0x1006b978
1002e5a4:	call   0x100479b4
1002e5a9:	lea    esi,[ebp+0x10]
1002e5ac:	call   0x1002dce2
1002e5b1:	mov    ecx,DWORD PTR [edi]
1002e5b3:	cmp    BYTE PTR [ecx+0x29],0x0
1002e5b7:	je     0x1002e5be
1002e5b9:	mov    ebx,DWORD PTR [edi+0x8]
1002e5bc:	jmp    0x1002e5d5
1002e5be:	mov    eax,DWORD PTR [edi+0x8]
1002e5c1:	cmp    BYTE PTR [eax+0x29],0x0
1002e5c5:	je     0x1002e5cb
1002e5c7:	mov    ebx,ecx
1002e5c9:	jmp    0x1002e5d5
1002e5cb:	mov    eax,DWORD PTR [ebp+0x14]
1002e5ce:	cmp    eax,edi
1002e5d0:	mov    ebx,DWORD PTR [eax+0x8]
1002e5d3:	jne    0x1002e64b
1002e5d5:	cmp    BYTE PTR [ebx+0x29],0x0
1002e5d9:	mov    esi,DWORD PTR [edi+0x4]
1002e5dc:	jne    0x1002e5e1
1002e5de:	mov    DWORD PTR [ebx+0x4],esi
1002e5e1:	mov    ecx,DWORD PTR [ebp+0x8]
1002e5e4:	mov    eax,DWORD PTR [ecx+0x4]
1002e5e7:	cmp    DWORD PTR [eax+0x4],edi
1002e5ea:	jne    0x1002e5f1
1002e5ec:	mov    DWORD PTR [eax+0x4],ebx
1002e5ef:	jmp    0x1002e5fc
1002e5f1:	cmp    DWORD PTR [esi],edi
1002e5f3:	jne    0x1002e5f9
1002e5f5:	mov    DWORD PTR [esi],ebx
1002e5f7:	jmp    0x1002e5fc
1002e5f9:	mov    DWORD PTR [esi+0x8],ebx
1002e5fc:	mov    edx,DWORD PTR [ecx+0x4]
1002e5ff:	cmp    DWORD PTR [edx],edi
1002e601:	jne    0x1002e61f
1002e603:	cmp    BYTE PTR [ebx+0x29],0x0
1002e607:	je     0x1002e60d
1002e609:	mov    ecx,esi
1002e60b:	jmp    0x1002e61d
1002e60d:	mov    eax,DWORD PTR [ebx]
1002e60f:	mov    ecx,ebx
1002e611:	jmp    0x1002e617
1002e613:	mov    ecx,eax
1002e615:	mov    eax,DWORD PTR [ecx]
1002e617:	cmp    BYTE PTR [eax+0x29],0x0
1002e61b:	je     0x1002e613
1002e61d:	mov    DWORD PTR [edx],ecx
1002e61f:	mov    eax,DWORD PTR [ebp+0x8]
1002e622:	mov    edx,DWORD PTR [eax+0x4]
1002e625:	cmp    DWORD PTR [edx+0x8],edi
1002e628:	jne    0x1002e6a5
1002e62a:	cmp    BYTE PTR [ebx+0x29],0x0
1002e62e:	je     0x1002e634
1002e630:	mov    ecx,esi
1002e632:	jmp    0x1002e646
1002e634:	mov    eax,DWORD PTR [ebx+0x8]
1002e637:	mov    ecx,ebx
1002e639:	jmp    0x1002e640
1002e63b:	mov    ecx,eax
1002e63d:	mov    eax,DWORD PTR [ecx+0x8]
1002e640:	cmp    BYTE PTR [eax+0x29],0x0
1002e644:	je     0x1002e63b
1002e646:	mov    DWORD PTR [edx+0x8],ecx
1002e649:	jmp    0x1002e6a5
1002e64b:	mov    DWORD PTR [ecx+0x4],eax
1002e64e:	mov    ecx,DWORD PTR [edi]
1002e650:	mov    DWORD PTR [eax],ecx
1002e652:	cmp    eax,DWORD PTR [edi+0x8]
1002e655:	jne    0x1002e65b
1002e657:	mov    esi,eax
1002e659:	jmp    0x1002e675
1002e65b:	cmp    BYTE PTR [ebx+0x29],0x0
1002e65f:	mov    esi,DWORD PTR [eax+0x4]
1002e662:	jne    0x1002e667
1002e664:	mov    DWORD PTR [ebx+0x4],esi
1002e667:	mov    DWORD PTR [esi],ebx
1002e669:	mov    ecx,DWORD PTR [edi+0x8]
1002e66c:	mov    DWORD PTR [eax+0x8],ecx
1002e66f:	mov    ecx,DWORD PTR [edi+0x8]
1002e672:	mov    DWORD PTR [ecx+0x4],eax
1002e675:	mov    ecx,DWORD PTR [ebp+0x8]
1002e678:	mov    ecx,DWORD PTR [ecx+0x4]
1002e67b:	cmp    DWORD PTR [ecx+0x4],edi
1002e67e:	jne    0x1002e685
1002e680:	mov    DWORD PTR [ecx+0x4],eax
1002e683:	jmp    0x1002e693
1002e685:	mov    ecx,DWORD PTR [edi+0x4]
1002e688:	cmp    DWORD PTR [ecx],edi
1002e68a:	jne    0x1002e690
1002e68c:	mov    DWORD PTR [ecx],eax
1002e68e:	jmp    0x1002e693
1002e690:	mov    DWORD PTR [ecx+0x8],eax
1002e693:	mov    ecx,DWORD PTR [edi+0x4]
1002e696:	mov    DWORD PTR [eax+0x4],ecx
1002e699:	mov    dl,BYTE PTR [edi+0x28]
1002e69c:	mov    cl,BYTE PTR [eax+0x28]
1002e69f:	mov    BYTE PTR [eax+0x28],dl
1002e6a2:	mov    BYTE PTR [edi+0x28],cl
1002e6a5:	cmp    BYTE PTR [edi+0x28],0x1
1002e6a9:	jne    0x1002e7c1
1002e6af:	jmp    0x1002e775
1002e6b4:	cmp    BYTE PTR [ebx+0x28],0x1
1002e6b8:	jne    0x1002e7bd
1002e6be:	mov    ecx,DWORD PTR [esi]
1002e6c0:	cmp    ebx,ecx
1002e6c2:	jne    0x1002e73b
1002e6c4:	mov    ecx,DWORD PTR [esi+0x8]
1002e6c7:	cmp    BYTE PTR [ecx+0x28],0x0
1002e6cb:	jne    0x1002e6e2
1002e6cd:	push   DWORD PTR [ebp+0x8]
1002e6d0:	mov    BYTE PTR [ecx+0x28],0x1
1002e6d4:	mov    ecx,esi
1002e6d6:	mov    BYTE PTR [esi+0x28],0x0
1002e6da:	call   0x1002e7ff
1002e6df:	mov    ecx,DWORD PTR [esi+0x8]
1002e6e2:	cmp    BYTE PTR [ecx+0x29],0x0
1002e6e6:	jne    0x1002e770
1002e6ec:	mov    eax,DWORD PTR [ecx]
1002e6ee:	cmp    BYTE PTR [eax+0x28],0x1
1002e6f2:	jne    0x1002e6fd
1002e6f4:	mov    eax,DWORD PTR [ecx+0x8]
1002e6f7:	cmp    BYTE PTR [eax+0x28],0x1
1002e6fb:	je     0x1002e76c
1002e6fd:	mov    eax,DWORD PTR [ecx+0x8]
1002e700:	cmp    BYTE PTR [eax+0x28],0x1
1002e704:	jne    0x1002e71b
1002e706:	mov    eax,DWORD PTR [ecx]
1002e708:	push   DWORD PTR [ebp+0x8]
1002e70b:	mov    BYTE PTR [eax+0x28],0x1
1002e70f:	mov    BYTE PTR [ecx+0x28],0x0
1002e713:	call   0x1002e83f
1002e718:	mov    ecx,DWORD PTR [esi+0x8]
1002e71b:	mov    al,BYTE PTR [esi+0x28]
1002e71e:	push   DWORD PTR [ebp+0x8]
1002e721:	mov    BYTE PTR [ecx+0x28],al
1002e724:	mov    BYTE PTR [esi+0x28],0x1
1002e728:	mov    eax,DWORD PTR [ecx+0x8]
1002e72b:	mov    ecx,esi
1002e72d:	mov    BYTE PTR [eax+0x28],0x1
1002e731:	call   0x1002e7ff
1002e736:	jmp    0x1002e7bd
1002e73b:	cmp    BYTE PTR [ecx+0x28],0x0
1002e73f:	jne    0x1002e755
1002e741:	push   DWORD PTR [ebp+0x8]
1002e744:	mov    BYTE PTR [ecx+0x28],0x1
1002e748:	mov    ecx,esi
1002e74a:	mov    BYTE PTR [esi+0x28],0x0
1002e74e:	call   0x1002e83f
1002e753:	mov    ecx,DWORD PTR [esi]
1002e755:	cmp    BYTE PTR [ecx+0x29],0x0
1002e759:	jne    0x1002e770
1002e75b:	mov    eax,DWORD PTR [ecx+0x8]
1002e75e:	cmp    BYTE PTR [eax+0x28],0x1
1002e762:	jne    0x1002e786
1002e764:	mov    eax,DWORD PTR [ecx]
1002e766:	cmp    BYTE PTR [eax+0x28],0x1
1002e76a:	jne    0x1002e786
1002e76c:	mov    BYTE PTR [ecx+0x28],0x0
1002e770:	mov    ebx,esi
1002e772:	mov    esi,DWORD PTR [esi+0x4]
1002e775:	mov    eax,DWORD PTR [ebp+0x8]
1002e778:	mov    eax,DWORD PTR [eax+0x4]
1002e77b:	cmp    ebx,DWORD PTR [eax+0x4]
1002e77e:	jne    0x1002e6b4
1002e784:	jmp    0x1002e7bd
1002e786:	mov    eax,DWORD PTR [ecx]
1002e788:	cmp    BYTE PTR [eax+0x28],0x1
1002e78c:	jne    0x1002e7a3
1002e78e:	mov    eax,DWORD PTR [ecx+0x8]
1002e791:	push   DWORD PTR [ebp+0x8]
1002e794:	mov    BYTE PTR [eax+0x28],0x1
1002e798:	mov    BYTE PTR [ecx+0x28],0x0
1002e79c:	call   0x1002e7ff
1002e7a1:	mov    ecx,DWORD PTR [esi]
1002e7a3:	mov    al,BYTE PTR [esi+0x28]
1002e7a6:	push   DWORD PTR [ebp+0x8]
1002e7a9:	mov    BYTE PTR [ecx+0x28],al
1002e7ac:	mov    BYTE PTR [esi+0x28],0x1
1002e7b0:	mov    eax,DWORD PTR [ecx]
1002e7b2:	mov    ecx,esi
1002e7b4:	mov    BYTE PTR [eax+0x28],0x1
1002e7b8:	call   0x1002e83f
1002e7bd:	mov    BYTE PTR [ebx+0x28],0x1
1002e7c1:	lea    eax,[edi+0x18]
1002e7c4:	push   eax
1002e7c5:	call   DWORD PTR ds:0x10066294
1002e7cb:	push   DWORD PTR [edi+0x10]
1002e7ce:	call   DWORD PTR ds:0x100662b4
1002e7d4:	push   edi
1002e7d5:	call   0x10042e92
1002e7da:	pop    ecx
1002e7db:	mov    ecx,DWORD PTR [ebp+0x8]
1002e7de:	mov    eax,DWORD PTR [ecx+0x8]
1002e7e1:	test   eax,eax
1002e7e3:	jbe    0x1002e7e9
1002e7e5:	dec    eax
1002e7e6:	mov    DWORD PTR [ecx+0x8],eax
1002e7e9:	mov    ecx,DWORD PTR [ebp+0x10]
1002e7ec:	mov    eax,DWORD PTR [ebp+0xc]
1002e7ef:	mov    DWORD PTR [eax],ecx
1002e7f1:	mov    ecx,DWORD PTR [ebp+0x14]
1002e7f4:	mov    DWORD PTR [eax+0x4],ecx
1002e7f7:	call   0x10059b0d
1002e7fc:	ret    0x10
1002e7ff:	mov    eax,DWORD PTR [ecx+0x8]
1002e802:	mov    edx,DWORD PTR [eax]
1002e804:	mov    DWORD PTR [ecx+0x8],edx
1002e807:	mov    edx,DWORD PTR [eax]
1002e809:	cmp    BYTE PTR [edx+0x29],0x0
1002e80d:	jne    0x1002e812
1002e80f:	mov    DWORD PTR [edx+0x4],ecx
1002e812:	mov    edx,DWORD PTR [ecx+0x4]
1002e815:	mov    DWORD PTR [eax+0x4],edx
1002e818:	mov    edx,DWORD PTR [esp+0x4]
1002e81c:	mov    edx,DWORD PTR [edx+0x4]
1002e81f:	cmp    ecx,DWORD PTR [edx+0x4]
1002e822:	jne    0x1002e829
1002e824:	mov    DWORD PTR [edx+0x4],eax
1002e827:	jmp    0x1002e837
1002e829:	mov    edx,DWORD PTR [ecx+0x4]
1002e82c:	cmp    ecx,DWORD PTR [edx]
1002e82e:	jne    0x1002e834
1002e830:	mov    DWORD PTR [edx],eax
1002e832:	jmp    0x1002e837
1002e834:	mov    DWORD PTR [edx+0x8],eax
1002e837:	mov    DWORD PTR [eax],ecx
1002e839:	mov    DWORD PTR [ecx+0x4],eax
1002e83c:	ret    0x4
1002e83f:	mov    eax,DWORD PTR [ecx]
1002e841:	mov    edx,DWORD PTR [eax+0x8]
1002e844:	mov    DWORD PTR [ecx],edx
1002e846:	mov    edx,DWORD PTR [eax+0x8]
1002e849:	cmp    BYTE PTR [edx+0x29],0x0
1002e84d:	jne    0x1002e852
1002e84f:	mov    DWORD PTR [edx+0x4],ecx
1002e852:	mov    edx,DWORD PTR [ecx+0x4]
1002e855:	mov    DWORD PTR [eax+0x4],edx
1002e858:	mov    edx,DWORD PTR [esp+0x4]
1002e85c:	mov    edx,DWORD PTR [edx+0x4]
1002e85f:	cmp    ecx,DWORD PTR [edx+0x4]
1002e862:	jne    0x1002e869
1002e864:	mov    DWORD PTR [edx+0x4],eax
1002e867:	jmp    0x1002e878
1002e869:	mov    edx,DWORD PTR [ecx+0x4]
1002e86c:	cmp    ecx,DWORD PTR [edx+0x8]
1002e86f:	jne    0x1002e876
1002e871:	mov    DWORD PTR [edx+0x8],eax
1002e874:	jmp    0x1002e878
1002e876:	mov    DWORD PTR [edx],eax
1002e878:	mov    DWORD PTR [eax+0x8],ecx
1002e87b:	mov    DWORD PTR [ecx+0x4],eax
1002e87e:	ret    0x4
1002e881:	push   0x30
1002e883:	call   0x1004349e
1002e888:	xor    edx,edx
1002e88a:	cmp    eax,edx
1002e88c:	pop    ecx
1002e88d:	je     0x1002e891
1002e88f:	mov    DWORD PTR [eax],edx
1002e891:	lea    ecx,[eax+0x4]
1002e894:	cmp    ecx,edx
1002e896:	je     0x1002e89a
1002e898:	mov    DWORD PTR [ecx],edx
1002e89a:	lea    ecx,[eax+0x8]
1002e89d:	cmp    ecx,edx
1002e89f:	je     0x1002e8a3
1002e8a1:	mov    DWORD PTR [ecx],edx
1002e8a3:	mov    BYTE PTR [eax+0x28],0x1
1002e8a7:	mov    BYTE PTR [eax+0x29],dl
1002e8aa:	ret    
1002e8ab:	push   0x8
1002e8ad:	mov    eax,0x1005ff67
1002e8b2:	call   0x10059a68
1002e8b7:	push   0x30
1002e8b9:	call   0x1004349e
1002e8be:	mov    ebx,eax
1002e8c0:	pop    ecx
1002e8c1:	mov    DWORD PTR [ebp-0x14],ebx
1002e8c4:	test   ebx,ebx
1002e8c6:	mov    DWORD PTR [ebp-0x4],0x1
1002e8cd:	je     0x1002e8e3
1002e8cf:	push   DWORD PTR [ebp+0x18]
1002e8d2:	mov    ecx,DWORD PTR [ebp+0x14]
1002e8d5:	push   DWORD PTR [ebp+0x10]
1002e8d8:	push   DWORD PTR [ebp+0xc]
1002e8db:	push   DWORD PTR [ebp+0x8]
1002e8de:	call   0x1002e945
1002e8e3:	mov    eax,ebx
1002e8e5:	call   0x10059b0d
1002e8ea:	ret    0x14
1002e8ed:	push   DWORD PTR [ebp-0x14]
1002e8f0:	call   0x10042e92
1002e8f5:	pop    ecx
1002e8f6:	push   0x0
1002e8f8:	push   0x0
1002e8fa:	call   0x100479b4
1002e8ff:	int3   
1002e900:	push   ebx
1002e901:	push   esi
1002e902:	push   edi
1002e903:	mov    edi,DWORD PTR [esp+0x10]
1002e907:	cmp    BYTE PTR [edi+0x29],0x0
1002e90b:	mov    ebx,ecx
1002e90d:	mov    esi,edi
1002e90f:	jne    0x1002e93f
1002e911:	push   DWORD PTR [esi+0x8]
1002e914:	mov    ecx,ebx
1002e916:	call   0x1002e900
1002e91b:	mov    esi,DWORD PTR [esi]
1002e91d:	lea    eax,[edi+0x18]
1002e920:	push   eax
1002e921:	call   DWORD PTR ds:0x10066294
1002e927:	push   DWORD PTR [edi+0x10]
1002e92a:	call   DWORD PTR ds:0x100662b4
1002e930:	push   edi
1002e931:	call   0x10042e92
1002e936:	cmp    BYTE PTR [esi+0x29],0x0
1002e93a:	pop    ecx
1002e93b:	mov    edi,esi
1002e93d:	je     0x1002e911
1002e93f:	pop    edi
1002e940:	pop    esi
1002e941:	pop    ebx
1002e942:	ret    0x4
1002e945:	push   0x0
1002e947:	mov    eax,0x1005ff47
1002e94c:	call   0x10059a35
1002e951:	mov    esi,ecx
1002e953:	mov    eax,DWORD PTR [ebp+0x8]
1002e956:	mov    DWORD PTR [ebx],eax
1002e958:	mov    eax,DWORD PTR [ebp+0xc]
1002e95b:	mov    DWORD PTR [ebx+0x4],eax
1002e95e:	mov    eax,DWORD PTR [ebp+0x10]
1002e961:	lea    edi,[ebx+0x10]
1002e964:	mov    DWORD PTR [ebx+0x8],eax
1002e967:	mov    DWORD PTR [ebp+0x8],edi
1002e96a:	call   0x1002ae5e
1002e96f:	and    DWORD PTR [ebp-0x4],0x0
1002e973:	add    esi,0x8
1002e976:	lea    eax,[edi+0x8]
1002e979:	and    WORD PTR [eax],0x0
1002e97d:	push   esi
1002e97e:	mov    esi,eax
1002e980:	call   0x1002ae8c
1002e985:	mov    al,BYTE PTR [ebp+0x14]
1002e988:	mov    BYTE PTR [ebx+0x28],al
1002e98b:	mov    BYTE PTR [ebx+0x29],0x0
1002e98f:	mov    eax,ebx
1002e991:	call   0x10059b0d
1002e996:	ret    0x10
1002e999:	push   0xc
1002e99b:	mov    eax,0x1005f9b0
1002e9a0:	call   0x10059a68
1002e9a5:	mov    ebx,DWORD PTR [ebp+0x8]
1002e9a8:	xor    edi,edi
1002e9aa:	cmp    ebx,edi
1002e9ac:	jne    0x1002e9b5
1002e9ae:	mov    eax,0x80004003
1002e9b3:	jmp    0x1002ea17
1002e9b5:	push   0x20
1002e9b7:	mov    DWORD PTR [ebx],edi
1002e9b9:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002e9c0:	mov    DWORD PTR [ebp-0x4],edi
1002e9c3:	call   0x1004349e
1002e9c8:	mov    esi,eax
1002e9ca:	cmp    esi,edi
1002e9cc:	pop    ecx
1002e9cd:	je     0x1002e9f4
1002e9cf:	mov    DWORD PTR [esi+0x4],edi
1002e9d2:	mov    DWORD PTR [esi+0x8],edi
1002e9d5:	mov    DWORD PTR [esi+0xc],edi
1002e9d8:	mov    DWORD PTR [esi+0x10],edi
1002e9db:	mov    DWORD PTR [esi+0x14],edi
1002e9de:	mov    DWORD PTR [esi+0x18],edi
1002e9e1:	mov    DWORD PTR [esi],0x10072e5c
1002e9e7:	mov    ecx,DWORD PTR ds:0x10080c04
1002e9ed:	mov    eax,DWORD PTR [ecx]
1002e9ef:	call   DWORD PTR [eax+0x4]
1002e9f2:	jmp    0x1002ea05
1002e9f4:	xor    esi,esi
1002e9f6:	jmp    0x1002ea05
1002e9f8:	mov    eax,0x1002e9fe
1002e9fd:	ret    
1002e9fe:	mov    ebx,DWORD PTR [ebp+0x8]
1002ea01:	xor    edi,edi
1002ea03:	mov    esi,edi
1002ea05:	cmp    esi,edi
1002ea07:	je     0x1002ea12
1002ea09:	inc    DWORD PTR [esi+0x4]
1002ea0c:	dec    DWORD PTR [esi+0x4]
1002ea0f:	mov    DWORD PTR [ebp-0x14],edi
1002ea12:	mov    eax,DWORD PTR [ebp-0x14]
1002ea15:	mov    DWORD PTR [ebx],esi
1002ea17:	call   0x10059b0d
1002ea1c:	ret    0x4
1002ea1f:	push   0xc
1002ea21:	mov    eax,0x1006093e
1002ea26:	call   0x10059a68
1002ea2b:	mov    ebx,DWORD PTR [ebp+0x8]
1002ea2e:	xor    edi,edi
1002ea30:	cmp    ebx,edi
1002ea32:	jne    0x1002ea3b
1002ea34:	mov    eax,0x80004003
1002ea39:	jmp    0x1002ea97
1002ea3b:	push   0x18
1002ea3d:	mov    DWORD PTR [ebx],edi
1002ea3f:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002ea46:	mov    DWORD PTR [ebp-0x4],edi
1002ea49:	call   0x1004349e
1002ea4e:	mov    esi,eax
1002ea50:	cmp    esi,edi
1002ea52:	pop    ecx
1002ea53:	je     0x1002ea74
1002ea55:	mov    DWORD PTR [esi+0x14],edi
1002ea58:	mov    DWORD PTR [esi+0x8],edi
1002ea5b:	mov    DWORD PTR [esi+0xc],edi
1002ea5e:	mov    DWORD PTR [esi+0x10],edi
1002ea61:	mov    DWORD PTR [esi],0x10072e94
1002ea67:	mov    ecx,DWORD PTR ds:0x10080c04
1002ea6d:	mov    eax,DWORD PTR [ecx]
1002ea6f:	call   DWORD PTR [eax+0x4]
1002ea72:	jmp    0x1002ea85
1002ea74:	xor    esi,esi
1002ea76:	jmp    0x1002ea85
1002ea78:	mov    eax,0x1002ea7e
1002ea7d:	ret    
1002ea7e:	mov    ebx,DWORD PTR [ebp+0x8]
1002ea81:	xor    edi,edi
1002ea83:	mov    esi,edi
1002ea85:	cmp    esi,edi
1002ea87:	je     0x1002ea92
1002ea89:	inc    DWORD PTR [esi+0x14]
1002ea8c:	dec    DWORD PTR [esi+0x14]
1002ea8f:	mov    DWORD PTR [ebp-0x14],edi
1002ea92:	mov    eax,DWORD PTR [ebp-0x14]
1002ea95:	mov    DWORD PTR [ebx],esi
1002ea97:	call   0x10059b0d
1002ea9c:	ret    0x4
1002ea9f:	push   0xc
1002eaa1:	mov    eax,0x10061924
1002eaa6:	call   0x10059a68
1002eaab:	mov    ebx,DWORD PTR [ebp+0x8]
1002eaae:	xor    esi,esi
1002eab0:	cmp    ebx,esi
1002eab2:	jne    0x1002eabb
1002eab4:	mov    eax,0x80004003
1002eab9:	jmp    0x1002eb1f
1002eabb:	push   0x14
1002eabd:	mov    DWORD PTR [ebx],esi
1002eabf:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002eac6:	mov    DWORD PTR [ebp-0x18],esi
1002eac9:	mov    DWORD PTR [ebp-0x4],esi
1002eacc:	call   0x1004349e
1002ead1:	mov    edi,eax
1002ead3:	cmp    edi,esi
1002ead5:	pop    ecx
1002ead6:	je     0x1002eafc
1002ead8:	mov    DWORD PTR [edi+0x10],esi
1002eadb:	lea    esi,[edi+0x4]
1002eade:	mov    DWORD PTR [edi],0x10072efc
1002eae4:	call   0x1002d5d8
1002eae9:	mov    DWORD PTR [edi],0x10072ec4
1002eaef:	mov    ecx,DWORD PTR ds:0x10080c04
1002eaf5:	mov    eax,DWORD PTR [ecx]
1002eaf7:	call   DWORD PTR [eax+0x4]
1002eafa:	jmp    0x1002eb0c
1002eafc:	xor    edi,edi
1002eafe:	jmp    0x1002eb0c
1002eb00:	mov    eax,0x1002eb06
1002eb05:	ret    
1002eb06:	mov    ebx,DWORD PTR [ebp+0x8]
1002eb09:	mov    edi,DWORD PTR [ebp-0x18]
1002eb0c:	test   edi,edi
1002eb0e:	je     0x1002eb1a
1002eb10:	inc    DWORD PTR [edi+0x10]
1002eb13:	and    DWORD PTR [ebp-0x14],0x0
1002eb17:	dec    DWORD PTR [edi+0x10]
1002eb1a:	mov    eax,DWORD PTR [ebp-0x14]
1002eb1d:	mov    DWORD PTR [ebx],edi
1002eb1f:	call   0x10059b0d
1002eb24:	ret    0x4
1002eb27:	push   0xc
1002eb29:	mov    eax,0x1005f995
1002eb2e:	call   0x10059a68
1002eb33:	mov    ebx,DWORD PTR [ebp+0x8]
1002eb36:	xor    edi,edi
1002eb38:	cmp    ebx,edi
1002eb3a:	jne    0x1002eb43
1002eb3c:	mov    eax,0x80004003
1002eb41:	jmp    0x1002eb99
1002eb43:	push   0x18
1002eb45:	mov    DWORD PTR [ebx],edi
1002eb47:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002eb4e:	mov    DWORD PTR [ebp-0x4],edi
1002eb51:	call   0x1004349e
1002eb56:	mov    esi,eax
1002eb58:	cmp    esi,edi
1002eb5a:	pop    ecx
1002eb5b:	je     0x1002eb7c
1002eb5d:	mov    DWORD PTR [esi+0x4],edi
1002eb60:	mov    DWORD PTR [esi+0xc],edi
1002eb63:	mov    DWORD PTR [esi+0x10],edi
1002eb66:	mov    DWORD PTR [esi+0x14],edi
1002eb69:	mov    DWORD PTR [esi],0x10072f38
1002eb6f:	mov    ecx,DWORD PTR ds:0x10080c04
1002eb75:	mov    eax,DWORD PTR [ecx]
1002eb77:	call   DWORD PTR [eax+0x4]
1002eb7a:	jmp    0x1002eb8d
1002eb7c:	xor    esi,esi
1002eb7e:	jmp    0x1002eb8d
1002eb80:	mov    eax,0x1002eb86
1002eb85:	ret    
1002eb86:	mov    ebx,DWORD PTR [ebp+0x8]
1002eb89:	xor    edi,edi
1002eb8b:	mov    esi,edi
1002eb8d:	cmp    esi,edi
1002eb8f:	je     0x1002eb94
1002eb91:	mov    DWORD PTR [ebp-0x14],edi
1002eb94:	mov    eax,DWORD PTR [ebp-0x14]
1002eb97:	mov    DWORD PTR [ebx],esi
1002eb99:	call   0x10059b0d
1002eb9e:	ret    0x4
1002eba1:	push   ebp
1002eba2:	mov    ebp,esp
1002eba4:	mov    edx,DWORD PTR [ebp+0x10]
1002eba7:	xor    ecx,ecx
1002eba9:	sub    esp,0x1c
1002ebac:	cmp    edx,ecx
1002ebae:	je     0x1002eca1
1002ebb4:	cmp    DWORD PTR [ebp+0xc],0x1
1002ebb8:	je     0x1002ebc3
1002ebba:	cmp    DWORD PTR [ebp+0x14],ecx
1002ebbd:	je     0x1002eca1
1002ebc3:	mov    eax,DWORD PTR [ebp+0x14]
1002ebc6:	cmp    eax,ecx
1002ebc8:	je     0x1002ebcc
1002ebca:	mov    DWORD PTR [eax],ecx
1002ebcc:	mov    eax,DWORD PTR [ebp+0x8]
1002ebcf:	cmp    DWORD PTR [eax+0x8],ecx
1002ebd2:	jne    0x1002ebde
1002ebd4:	mov    eax,0x80004005
1002ebd9:	jmp    0x1002eca6
1002ebde:	push   ebx
1002ebdf:	push   esi
1002ebe0:	push   edi
1002ebe1:	mov    DWORD PTR [ebp-0x4],ecx
1002ebe4:	mov    DWORD PTR [ebp-0x8],ecx
1002ebe7:	mov    DWORD PTR [ebp-0xc],edx
1002ebea:	lea    esi,[eax+0xc]
1002ebed:	jmp    0x1002ebf2
1002ebef:	mov    eax,DWORD PTR [ebp+0x8]
1002ebf2:	mov    edi,DWORD PTR [eax+0x8]
1002ebf5:	mov    ebx,DWORD PTR [edi+0x8]
1002ebf8:	cmp    DWORD PTR [edi+0x4],ebx
1002ebfb:	jbe    0x1002ec02
1002ebfd:	call   0x100433b0
1002ec02:	mov    DWORD PTR [ebp-0x14],edi
1002ec05:	lea    edi,[ebp-0x14]
1002ec08:	mov    DWORD PTR [ebp-0x10],ebx
1002ec0b:	call   0x1002ddbd
1002ec10:	test   al,al
1002ec12:	je     0x1002ec64
1002ec14:	mov    eax,DWORD PTR [ebp-0x4]
1002ec17:	cmp    eax,DWORD PTR [ebp+0xc]
1002ec1a:	jae    0x1002ec64
1002ec1c:	xor    ebx,ebx
1002ec1e:	cmp    DWORD PTR [esi],ebx
1002ec20:	jne    0x1002ec27
1002ec22:	call   0x100433b0
1002ec27:	mov    eax,DWORD PTR [esi]
1002ec29:	mov    ecx,DWORD PTR [esi+0x4]
1002ec2c:	cmp    ecx,DWORD PTR [eax+0x8]
1002ec2f:	jb     0x1002ec36
1002ec31:	call   0x100433b0
1002ec36:	mov    eax,DWORD PTR [esi+0x4]
1002ec39:	mov    edi,DWORD PTR [ebp-0xc]
1002ec3c:	push   eax
1002ec3d:	push   edi
1002ec3e:	mov    WORD PTR [edi],bx
1002ec41:	call   DWORD PTR ds:0x10066280
1002ec47:	cmp    eax,ebx
1002ec49:	mov    DWORD PTR [ebp-0x8],eax
1002ec4c:	jl     0x1002ec97
1002ec4e:	add    edi,0x10
1002ec51:	mov    DWORD PTR [ebp-0xc],edi
1002ec54:	lea    edi,[ebp-0x1c]
1002ec57:	call   0x1002dd93
1002ec5c:	inc    DWORD PTR [ebp-0x4]
1002ec5f:	cmp    DWORD PTR [ebp-0x8],ebx
1002ec62:	jge    0x1002ebef
1002ec64:	cmp    DWORD PTR [ebp-0x8],0x0
1002ec68:	pop    edi
1002ec69:	pop    esi
1002ec6a:	pop    ebx
1002ec6b:	jl     0x1002ec85
1002ec6d:	mov    eax,DWORD PTR [ebp+0x14]
1002ec70:	test   eax,eax
1002ec72:	mov    ecx,DWORD PTR [ebp-0x4]
1002ec75:	je     0x1002ec79
1002ec77:	mov    DWORD PTR [eax],ecx
1002ec79:	cmp    ecx,DWORD PTR [ebp+0xc]
1002ec7c:	jae    0x1002ec85
1002ec7e:	mov    DWORD PTR [ebp-0x8],0x1
1002ec85:	mov    eax,DWORD PTR [ebp-0x8]
1002ec88:	jmp    0x1002eca6
1002ec8a:	push   DWORD PTR [ebp+0x10]
1002ec8d:	call   DWORD PTR ds:0x10066294
1002ec93:	add    DWORD PTR [ebp+0x10],0x10
1002ec97:	cmp    DWORD PTR [ebp+0x10],edi
1002ec9a:	jb     0x1002ec8a
1002ec9c:	mov    DWORD PTR [ebp-0x4],ebx
1002ec9f:	jmp    0x1002ec5f
1002eca1:	mov    eax,0x80004003
1002eca6:	leave  
1002eca7:	ret    0x10
1002ecaa:	push   ebp
1002ecab:	mov    ebp,esp
1002ecad:	sub    esp,0x14
1002ecb0:	and    DWORD PTR [ebp-0x4],0x0
1002ecb4:	cmp    DWORD PTR [ebp+0xc],0x0
1002ecb8:	je     0x1002ed05
1002ecba:	push   ebx
1002ecbb:	mov    ebx,DWORD PTR [ebp+0x8]
1002ecbe:	push   esi
1002ecbf:	push   edi
1002ecc0:	mov    edi,DWORD PTR [ebx+0x8]
1002ecc3:	mov    esi,DWORD PTR [edi+0x8]
1002ecc6:	dec    DWORD PTR [ebp+0xc]
1002ecc9:	cmp    DWORD PTR [edi+0x4],esi
1002eccc:	jbe    0x1002ecd3
1002ecce:	call   0x100433b0
1002ecd3:	mov    DWORD PTR [ebp-0xc],edi
1002ecd6:	mov    DWORD PTR [ebp-0x8],esi
1002ecd9:	lea    edi,[ebp-0xc]
1002ecdc:	lea    esi,[ebx+0xc]
1002ecdf:	call   0x1002ddbd
1002ece4:	test   al,al
1002ece6:	je     0x1002ecfb
1002ece8:	lea    edi,[ebp-0x14]
1002eceb:	lea    esi,[ebx+0xc]
1002ecee:	call   0x1002dd93
1002ecf3:	cmp    DWORD PTR [ebp+0xc],0x0
1002ecf7:	jne    0x1002ecc0
1002ecf9:	jmp    0x1002ed02
1002ecfb:	mov    DWORD PTR [ebp-0x4],0x1
1002ed02:	pop    edi
1002ed03:	pop    esi
1002ed04:	pop    ebx
1002ed05:	mov    eax,DWORD PTR [ebp-0x4]
1002ed08:	leave  
1002ed09:	ret    0x8
1002ed0c:	push   ebp
1002ed0d:	mov    ebp,esp
1002ed0f:	push   ecx
1002ed10:	mov    eax,DWORD PTR [ebp+0xc]
1002ed13:	test   eax,eax
1002ed15:	push   ebx
1002ed16:	mov    ebx,0x80004003
1002ed1b:	je     0x1002ed7e
1002ed1d:	and    DWORD PTR [eax],0x0
1002ed20:	lea    eax,[ebp-0x4]
1002ed23:	push   eax
1002ed24:	call   0x1002eb27
1002ed29:	mov    ebx,eax
1002ed2b:	test   ebx,ebx
1002ed2d:	jl     0x1002ed7e
1002ed2f:	push   esi
1002ed30:	mov    esi,DWORD PTR [ebp+0x8]
1002ed33:	mov    eax,DWORD PTR [esi+0x4]
1002ed36:	push   edi
1002ed37:	mov    edi,DWORD PTR [ebp-0x4]
1002ed3a:	push   DWORD PTR [esi+0x8]
1002ed3d:	mov    ebx,edi
1002ed3f:	call   0x1002de3d
1002ed44:	mov    ebx,eax
1002ed46:	test   ebx,ebx
1002ed48:	jl     0x1002ed6f
1002ed4a:	mov    eax,DWORD PTR [esi+0xc]
1002ed4d:	mov    ebx,DWORD PTR [ebp+0xc]
1002ed50:	mov    DWORD PTR [edi+0xc],eax
1002ed53:	mov    eax,DWORD PTR [esi+0x10]
1002ed56:	push   0x10072b0c
1002ed5b:	mov    DWORD PTR [edi+0x10],eax
1002ed5e:	push   edi
1002ed5f:	mov    eax,0x10072e1c
1002ed64:	call   0x10010334
1002ed69:	mov    ebx,eax
1002ed6b:	test   ebx,ebx
1002ed6d:	jge    0x1002ed7c
1002ed6f:	test   edi,edi
1002ed71:	je     0x1002ed7c
1002ed73:	mov    eax,DWORD PTR [edi]
1002ed75:	push   0x1
1002ed77:	mov    ecx,edi
1002ed79:	call   DWORD PTR [eax+0x1c]
1002ed7c:	pop    edi
1002ed7d:	pop    esi
1002ed7e:	mov    eax,ebx
1002ed80:	pop    ebx
1002ed81:	leave  
1002ed82:	ret    0x8
1002ed85:	push   0xc
1002ed87:	mov    eax,0x10061909
1002ed8c:	call   0x10059a68
1002ed91:	mov    ebx,DWORD PTR [ebp+0x8]
1002ed94:	xor    esi,esi
1002ed96:	cmp    ebx,esi
1002ed98:	jne    0x1002eda1
1002ed9a:	mov    eax,0x80004003
1002ed9f:	jmp    0x1002edf9
1002eda1:	push   0x14
1002eda3:	mov    DWORD PTR [ebx],esi
1002eda5:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002edac:	mov    DWORD PTR [ebp-0x18],esi
1002edaf:	mov    DWORD PTR [ebp-0x4],esi
1002edb2:	call   0x1004349e
1002edb7:	mov    edi,eax
1002edb9:	cmp    edi,esi
1002edbb:	pop    ecx
1002edbc:	je     0x1002eddc
1002edbe:	mov    DWORD PTR [edi+0x4],esi
1002edc1:	lea    esi,[edi+0x8]
1002edc4:	call   0x1002d5d8
1002edc9:	mov    DWORD PTR [edi],0x10072f58
1002edcf:	mov    ecx,DWORD PTR ds:0x10080c04
1002edd5:	mov    eax,DWORD PTR [ecx]
1002edd7:	call   DWORD PTR [eax+0x4]
1002edda:	jmp    0x1002edec
1002eddc:	xor    edi,edi
1002edde:	jmp    0x1002edec
1002ede0:	mov    eax,0x1002ede6
1002ede5:	ret    
1002ede6:	mov    ebx,DWORD PTR [ebp+0x8]
1002ede9:	mov    edi,DWORD PTR [ebp-0x18]
1002edec:	test   edi,edi
1002edee:	je     0x1002edf4
1002edf0:	and    DWORD PTR [ebp-0x14],0x0
1002edf4:	mov    eax,DWORD PTR [ebp-0x14]
1002edf7:	mov    DWORD PTR [ebx],edi
1002edf9:	call   0x10059b0d
1002edfe:	ret    0x4
1002ee01:	push   ebp
1002ee02:	mov    ebp,esp
1002ee04:	push   ecx
1002ee05:	test   edi,edi
1002ee07:	jne    0x1002ee10
1002ee09:	mov    eax,0x80004003
1002ee0e:	leave  
1002ee0f:	ret    
1002ee10:	and    DWORD PTR [edi],0x0
1002ee13:	and    DWORD PTR [ebp-0x4],0x0
1002ee17:	lea    eax,[ebp-0x4]
1002ee1a:	push   eax
1002ee1b:	call   0x1002ee5e
1002ee20:	test   eax,eax
1002ee22:	jl     0x1002ee5c
1002ee24:	mov    eax,DWORD PTR [ebp+0x8]
1002ee27:	push   ebx
1002ee28:	mov    ebx,DWORD PTR [ebp-0x4]
1002ee2b:	push   esi
1002ee2c:	push   DWORD PTR [ebp+0xc]
1002ee2f:	call   0x1002df14
1002ee34:	mov    esi,eax
1002ee36:	test   esi,esi
1002ee38:	jl     0x1002ee4b
1002ee3a:	mov    eax,DWORD PTR [ebx]
1002ee3c:	push   edi
1002ee3d:	push   0x1006dd2c
1002ee42:	push   ebx
1002ee43:	call   DWORD PTR [eax]
1002ee45:	mov    esi,eax
1002ee47:	test   esi,esi
1002ee49:	jge    0x1002ee58
1002ee4b:	test   ebx,ebx
1002ee4d:	je     0x1002ee58
1002ee4f:	mov    eax,DWORD PTR [ebx]
1002ee51:	push   0x1
1002ee53:	mov    ecx,ebx
1002ee55:	call   DWORD PTR [eax+0x1c]
1002ee58:	mov    eax,esi
1002ee5a:	pop    esi
1002ee5b:	pop    ebx
1002ee5c:	leave  
1002ee5d:	ret    
1002ee5e:	push   0xc
1002ee60:	mov    eax,0x1005f97a
1002ee65:	call   0x10059a68
1002ee6a:	mov    ebx,DWORD PTR [ebp+0x8]
1002ee6d:	xor    edi,edi
1002ee6f:	cmp    ebx,edi
1002ee71:	jne    0x1002ee7a
1002ee73:	mov    eax,0x80004003
1002ee78:	jmp    0x1002eed0
1002ee7a:	push   0x18
1002ee7c:	mov    DWORD PTR [ebx],edi
1002ee7e:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002ee85:	mov    DWORD PTR [ebp-0x4],edi
1002ee88:	call   0x1004349e
1002ee8d:	mov    esi,eax
1002ee8f:	cmp    esi,edi
1002ee91:	pop    ecx
1002ee92:	je     0x1002eeb3
1002ee94:	mov    DWORD PTR [esi+0x4],edi
1002ee97:	mov    DWORD PTR [esi+0xc],edi
1002ee9a:	mov    DWORD PTR [esi+0x10],edi
1002ee9d:	mov    DWORD PTR [esi+0x14],edi
1002eea0:	mov    DWORD PTR [esi],0x10072f68
1002eea6:	mov    ecx,DWORD PTR ds:0x10080c04
1002eeac:	mov    eax,DWORD PTR [ecx]
1002eeae:	call   DWORD PTR [eax+0x4]
1002eeb1:	jmp    0x1002eec4
1002eeb3:	xor    esi,esi
1002eeb5:	jmp    0x1002eec4
1002eeb7:	mov    eax,0x1002eebd
1002eebc:	ret    
1002eebd:	mov    ebx,DWORD PTR [ebp+0x8]
1002eec0:	xor    edi,edi
1002eec2:	mov    esi,edi
1002eec4:	cmp    esi,edi
1002eec6:	je     0x1002eecb
1002eec8:	mov    DWORD PTR [ebp-0x14],edi
1002eecb:	mov    eax,DWORD PTR [ebp-0x14]
1002eece:	mov    DWORD PTR [ebx],esi
1002eed0:	call   0x10059b0d
1002eed5:	ret    0x4
1002eed8:	push   ebp
1002eed9:	mov    ebp,esp
1002eedb:	sub    esp,0x10
1002eede:	push   ebx
1002eedf:	mov    ebx,DWORD PTR [ebp+0x10]
1002eee2:	xor    ecx,ecx
1002eee4:	cmp    ebx,ecx
1002eee6:	je     0x1002efae
1002eeec:	cmp    DWORD PTR [ebp+0xc],0x1
1002eef0:	je     0x1002eefb
1002eef2:	cmp    DWORD PTR [ebp+0x14],ecx
1002eef5:	je     0x1002efae
1002eefb:	mov    eax,DWORD PTR [ebp+0x14]
1002eefe:	cmp    eax,ecx
1002ef00:	je     0x1002ef04
1002ef02:	mov    DWORD PTR [eax],ecx
1002ef04:	mov    eax,DWORD PTR [ebp+0x8]
1002ef07:	cmp    DWORD PTR [eax+0x8],ecx
1002ef0a:	jne    0x1002ef16
1002ef0c:	mov    eax,0x80004005
1002ef11:	jmp    0x1002efb3
1002ef16:	push   esi
1002ef17:	push   edi
1002ef18:	mov    DWORD PTR [ebp-0x4],ecx
1002ef1b:	mov    DWORD PTR [ebp-0x8],ecx
1002ef1e:	lea    esi,[eax+0xc]
1002ef21:	jmp    0x1002ef26
1002ef23:	mov    eax,DWORD PTR [ebp+0x8]
1002ef26:	mov    eax,DWORD PTR [eax+0x8]
1002ef29:	mov    ecx,DWORD PTR [eax+0x4]
1002ef2c:	lea    edi,[ebp-0x10]
1002ef2f:	mov    DWORD PTR [ebp-0xc],ecx
1002ef32:	mov    DWORD PTR [ebp-0x10],eax
1002ef35:	call   0x10004ada
1002ef3a:	test   al,al
1002ef3c:	jne    0x1002ef72
1002ef3e:	mov    eax,DWORD PTR [ebp-0x4]
1002ef41:	cmp    eax,DWORD PTR [ebp+0xc]
1002ef44:	jae    0x1002ef72
1002ef46:	call   0x1002d763
1002ef4b:	add    eax,0x8
1002ef4e:	push   eax
1002ef4f:	xor    edi,edi
1002ef51:	push   ebx
1002ef52:	mov    WORD PTR [ebx],di
1002ef55:	call   DWORD PTR ds:0x10066280
1002ef5b:	cmp    eax,edi
1002ef5d:	mov    DWORD PTR [ebp-0x8],eax
1002ef60:	jl     0x1002efa4
1002ef62:	add    ebx,0x10
1002ef65:	call   0x1002dce2
1002ef6a:	inc    DWORD PTR [ebp-0x4]
1002ef6d:	cmp    DWORD PTR [ebp-0x8],edi
1002ef70:	jge    0x1002ef23
1002ef72:	cmp    DWORD PTR [ebp-0x8],0x0
1002ef76:	pop    edi
1002ef77:	pop    esi
1002ef78:	jl     0x1002ef92
1002ef7a:	mov    eax,DWORD PTR [ebp+0x14]
1002ef7d:	test   eax,eax
1002ef7f:	mov    ecx,DWORD PTR [ebp-0x4]
1002ef82:	je     0x1002ef86
1002ef84:	mov    DWORD PTR [eax],ecx
1002ef86:	cmp    ecx,DWORD PTR [ebp+0xc]
1002ef89:	jae    0x1002ef92
1002ef8b:	mov    DWORD PTR [ebp-0x8],0x1
1002ef92:	mov    eax,DWORD PTR [ebp-0x8]
1002ef95:	jmp    0x1002efb3
1002ef97:	push   DWORD PTR [ebp+0x10]
1002ef9a:	call   DWORD PTR ds:0x10066294
1002efa0:	add    DWORD PTR [ebp+0x10],0x10
1002efa4:	cmp    DWORD PTR [ebp+0x10],ebx
1002efa7:	jb     0x1002ef97
1002efa9:	mov    DWORD PTR [ebp-0x4],edi
1002efac:	jmp    0x1002ef6d
1002efae:	mov    eax,0x80004003
1002efb3:	pop    ebx
1002efb4:	leave  
1002efb5:	ret    0x10
1002efb8:	push   ebp
1002efb9:	mov    ebp,esp
1002efbb:	sub    esp,0xc
1002efbe:	and    DWORD PTR [ebp-0x4],0x0
1002efc2:	cmp    DWORD PTR [ebp+0xc],0x0
1002efc6:	je     0x1002f003
1002efc8:	push   ebx
1002efc9:	mov    ebx,DWORD PTR [ebp+0x8]
1002efcc:	push   esi
1002efcd:	lea    esi,[ebx+0xc]
1002efd0:	push   edi
1002efd1:	mov    eax,DWORD PTR [ebx+0x8]
1002efd4:	mov    ecx,DWORD PTR [eax+0x4]
1002efd7:	dec    DWORD PTR [ebp+0xc]
1002efda:	lea    edi,[ebp-0xc]
1002efdd:	mov    DWORD PTR [ebp-0x8],ecx
1002efe0:	mov    DWORD PTR [ebp-0xc],eax
1002efe3:	call   0x10004ada
1002efe8:	test   al,al
1002efea:	jne    0x1002eff9
1002efec:	call   0x1002dce2
1002eff1:	cmp    DWORD PTR [ebp+0xc],0x0
1002eff5:	jne    0x1002efd1
1002eff7:	jmp    0x1002f000
1002eff9:	mov    DWORD PTR [ebp-0x4],0x1
1002f000:	pop    edi
1002f001:	pop    esi
1002f002:	pop    ebx
1002f003:	mov    eax,DWORD PTR [ebp-0x4]
1002f006:	leave  
1002f007:	ret    0x8
1002f00a:	push   ebp
1002f00b:	mov    ebp,esp
1002f00d:	push   ecx
1002f00e:	mov    eax,DWORD PTR [ebp+0xc]
1002f011:	test   eax,eax
1002f013:	push   ebx
1002f014:	mov    ebx,0x80004003
1002f019:	je     0x1002f07c
1002f01b:	and    DWORD PTR [eax],0x0
1002f01e:	lea    eax,[ebp-0x4]
1002f021:	push   eax
1002f022:	call   0x1002ee5e
1002f027:	mov    ebx,eax
1002f029:	test   ebx,ebx
1002f02b:	jl     0x1002f07c
1002f02d:	push   esi
1002f02e:	mov    esi,DWORD PTR [ebp+0x8]
1002f031:	mov    eax,DWORD PTR [esi+0x4]
1002f034:	push   edi
1002f035:	mov    edi,DWORD PTR [ebp-0x4]
1002f038:	push   DWORD PTR [esi+0x8]
1002f03b:	mov    ebx,edi
1002f03d:	call   0x1002df14
1002f042:	mov    ebx,eax
1002f044:	test   ebx,ebx
1002f046:	jl     0x1002f06d
1002f048:	mov    eax,DWORD PTR [esi+0xc]
1002f04b:	mov    ebx,DWORD PTR [ebp+0xc]
1002f04e:	mov    DWORD PTR [edi+0xc],eax
1002f051:	mov    eax,DWORD PTR [esi+0x10]
1002f054:	push   0x10072b0c
1002f059:	mov    DWORD PTR [edi+0x10],eax
1002f05c:	push   edi
1002f05d:	mov    eax,0x10072e1c
1002f062:	call   0x10010334
1002f067:	mov    ebx,eax
1002f069:	test   ebx,ebx
1002f06b:	jge    0x1002f07a
1002f06d:	test   edi,edi
1002f06f:	je     0x1002f07a
1002f071:	mov    eax,DWORD PTR [edi]
1002f073:	push   0x1
1002f075:	mov    ecx,edi
1002f077:	call   DWORD PTR [eax+0x1c]
1002f07a:	pop    edi
1002f07b:	pop    esi
1002f07c:	mov    eax,ebx
1002f07e:	pop    ebx
1002f07f:	leave  
1002f080:	ret    0x8
1002f083:	push   ebp
1002f084:	mov    ebp,esp
1002f086:	push   ecx
1002f087:	push   edi
1002f088:	xor    eax,eax
1002f08a:	lea    edi,[ebp-0x4]
1002f08d:	stos   BYTE PTR es:[edi],al
1002f08e:	push   DWORD PTR [ebp-0x4]
1002f091:	push   DWORD PTR [ebp+0xc]
1002f094:	push   DWORD PTR [ebp+0xc]
1002f097:	push   DWORD PTR [ebp+0x8]
1002f09a:	call   0x1002f1ff
1002f09f:	add    esp,0x10
1002f0a2:	pop    edi
1002f0a3:	leave  
1002f0a4:	ret    0x8
1002f0a7:	push   ebx
1002f0a8:	push   esi
1002f0a9:	push   edi
1002f0aa:	mov    ebx,eax
1002f0ac:	mov    eax,DWORD PTR [ebx+0x4]
1002f0af:	mov    esi,ecx
1002f0b1:	mov    edi,DWORD PTR [esi+0x4]
1002f0b4:	add    eax,0x4
1002f0b7:	push   edi
1002f0b8:	push   DWORD PTR [eax]
1002f0ba:	call   0x1002f103
1002f0bf:	mov    DWORD PTR [edi+0x4],eax
1002f0c2:	mov    eax,DWORD PTR [ebx+0x8]
1002f0c5:	mov    DWORD PTR [esi+0x8],eax
1002f0c8:	mov    eax,DWORD PTR [esi+0x4]
1002f0cb:	mov    ecx,DWORD PTR [eax+0x4]
1002f0ce:	xor    bl,bl
1002f0d0:	cmp    BYTE PTR [ecx+0x29],bl
1002f0d3:	je     0x1002f0e3
1002f0d5:	mov    DWORD PTR [eax],eax
1002f0d7:	mov    esi,DWORD PTR [esi+0x4]
1002f0da:	mov    DWORD PTR [esi+0x8],esi
1002f0dd:	pop    edi
1002f0de:	pop    esi
1002f0df:	pop    ebx
1002f0e0:	ret    
1002f0e1:	mov    ecx,edx
1002f0e3:	mov    edx,DWORD PTR [ecx]
1002f0e5:	cmp    BYTE PTR [edx+0x29],bl
1002f0e8:	je     0x1002f0e1
1002f0ea:	mov    DWORD PTR [eax],ecx
1002f0ec:	mov    esi,DWORD PTR [esi+0x4]
1002f0ef:	mov    ecx,DWORD PTR [esi+0x4]
1002f0f2:	jmp    0x1002f0f6
1002f0f4:	mov    ecx,eax
1002f0f6:	mov    eax,DWORD PTR [ecx+0x8]
1002f0f9:	cmp    BYTE PTR [eax+0x29],bl
1002f0fc:	je     0x1002f0f4
1002f0fe:	mov    DWORD PTR [esi+0x8],ecx
1002f101:	jmp    0x1002f0dd
1002f103:	push   0xc
1002f105:	mov    eax,0x10060923
1002f10a:	call   0x10059a68
1002f10f:	mov    edi,ecx
1002f111:	mov    DWORD PTR [ebp-0x18],edi
1002f114:	mov    esi,DWORD PTR [ebp+0x8]
1002f117:	cmp    BYTE PTR [esi+0x29],0x0
1002f11b:	mov    eax,DWORD PTR [edi+0x4]
1002f11e:	mov    DWORD PTR [ebp-0x14],eax
1002f121:	jne    0x1002f162
1002f123:	movzx  ecx,BYTE PTR [esi+0x28]
1002f127:	push   ecx
1002f128:	lea    ecx,[esi+0x10]
1002f12b:	push   ecx
1002f12c:	push   eax
1002f12d:	push   DWORD PTR [ebp+0xc]
1002f130:	push   eax
1002f131:	call   0x1002e8ab
1002f136:	mov    ebx,eax
1002f138:	mov    eax,DWORD PTR [ebp-0x14]
1002f13b:	cmp    BYTE PTR [eax+0x29],0x0
1002f13f:	je     0x1002f144
1002f141:	mov    DWORD PTR [ebp-0x14],ebx
1002f144:	and    DWORD PTR [ebp-0x4],0x0
1002f148:	push   ebx
1002f149:	push   DWORD PTR [esi]
1002f14b:	mov    ecx,edi
1002f14d:	call   0x1002f103
1002f152:	push   ebx
1002f153:	mov    DWORD PTR [ebx],eax
1002f155:	push   DWORD PTR [esi+0x8]
1002f158:	mov    ecx,edi
1002f15a:	call   0x1002f103
1002f15f:	mov    DWORD PTR [ebx+0x8],eax
1002f162:	mov    eax,DWORD PTR [ebp-0x14]
1002f165:	call   0x10059b0d
1002f16a:	ret    0x8
1002f16d:	push   DWORD PTR [ebp-0x14]
1002f170:	mov    ecx,DWORD PTR [ebp-0x18]
1002f173:	call   0x1002e900
1002f178:	push   0x0
1002f17a:	push   0x0
1002f17c:	call   0x100479b4
1002f181:	int3   
1002f182:	push   0x8
1002f184:	mov    eax,0x1005f95f
1002f189:	call   0x10059a68
1002f18e:	mov    eax,DWORD PTR [ebp+0x8]
1002f191:	and    DWORD PTR [ebp-0x4],0x0
1002f195:	mov    DWORD PTR [ebp-0x14],eax
1002f198:	cmp    DWORD PTR [ebp+0xc],0x0
1002f19c:	jbe    0x1002f1cf
1002f19e:	push   DWORD PTR [ebp+0x10]
1002f1a1:	mov    ecx,DWORD PTR [ebp+0x8]
1002f1a4:	call   0x1002f1d5
1002f1a9:	dec    DWORD PTR [ebp+0xc]
1002f1ac:	add    DWORD PTR [ebp+0x8],0x10
1002f1b0:	jmp    0x1002f198
1002f1b2:	mov    esi,DWORD PTR [ebp-0x14]
1002f1b5:	jmp    0x1002f1c1
1002f1b7:	push   esi
1002f1b8:	call   DWORD PTR ds:0x10066294
1002f1be:	add    esi,0x10
1002f1c1:	cmp    esi,DWORD PTR [ebp+0x8]
1002f1c4:	jne    0x1002f1b7
1002f1c6:	push   0x0
1002f1c8:	push   0x0
1002f1ca:	call   0x100479b4
1002f1cf:	call   0x10059b0d
1002f1d4:	ret    
1002f1d5:	push   0x0
1002f1d7:	mov    eax,0x1005f944
1002f1dc:	call   0x10059a35
1002f1e1:	mov    esi,ecx
1002f1e3:	and    DWORD PTR [ebp-0x4],0x0
1002f1e7:	test   esi,esi
1002f1e9:	je     0x1002f1f7
1002f1eb:	push   DWORD PTR [ebp+0x8]
1002f1ee:	and    WORD PTR [esi],0x0
1002f1f2:	call   0x1002ae8c
1002f1f7:	call   0x10059b0d
1002f1fc:	ret    0x4
1002f1ff:	push   0x8
1002f201:	mov    eax,0x1005ff24
1002f206:	call   0x10059a68
1002f20b:	mov    esi,ecx
1002f20d:	mov    eax,DWORD PTR [ebp+0xc]
1002f210:	and    DWORD PTR [ebp-0x4],0x0
1002f214:	mov    DWORD PTR [ebp-0x14],eax
1002f217:	cmp    esi,DWORD PTR [ebp+0x8]
1002f21a:	je     0x1002f24b
1002f21c:	mov    ecx,DWORD PTR [ebp+0xc]
1002f21f:	push   esi
1002f220:	call   0x1002f1d5
1002f225:	add    DWORD PTR [ebp+0xc],0x10
1002f229:	add    esi,0x10
1002f22c:	jmp    0x1002f217
1002f22e:	mov    esi,DWORD PTR [ebp-0x14]
1002f231:	jmp    0x1002f23d
1002f233:	push   esi
1002f234:	call   DWORD PTR ds:0x10066294
1002f23a:	add    esi,0x10
1002f23d:	cmp    esi,DWORD PTR [ebp+0xc]
1002f240:	jne    0x1002f233
1002f242:	push   0x0
1002f244:	push   0x0
1002f246:	call   0x100479b4
1002f24b:	mov    eax,DWORD PTR [ebp+0xc]
1002f24e:	call   0x10059b0d
1002f253:	ret    
1002f254:	int3   
1002f255:	int3   
1002f256:	int3   
1002f257:	int3   
1002f258:	int3   
1002f259:	int3   
1002f25a:	int3   
1002f25b:	int3   
1002f25c:	int3   
1002f25d:	int3   
1002f25e:	int3   
1002f25f:	int3   
1002f260:	push   eax
1002f261:	push   ecx
1002f262:	call   0x1005846c
1002f267:	add    esp,0x8
1002f26a:	cmp    eax,0x50
1002f26d:	ja     0x1002f291
1002f26f:	movzx  edx,BYTE PTR [eax+0x1002f2ac]
1002f276:	jmp    DWORD PTR [edx*4+0x1002f29c]
1002f27d:	push   0x8007000e
1002f282:	call   0x10001f45
1002f287:	push   0x80070057
1002f28c:	call   0x10001f45
1002f291:	push   0x80004005
1002f296:	call   0x10001f45
1002f29b:	ret    
1002f29c:	fwait
1002f29d:	repnz add dl,BYTE PTR [eax]
1002f2a0:	jge    0x1002f294
1002f2a2:	add    dl,BYTE PTR [eax]
1002f2a4:	xchg   edx,esi
1002f2a6:	add    dl,BYTE PTR [eax]
1002f2a8:	xchg   ecx,eax
1002f2a9:	repnz add dl,BYTE PTR [eax]
1002f2ac:	add    BYTE PTR [ebx],al
1002f2ae:	add    eax,DWORD PTR [ebx]
1002f2b0:	add    eax,DWORD PTR [ebx]
1002f2b2:	add    eax,DWORD PTR [ebx]
1002f2b4:	add    eax,DWORD PTR [ebx]
1002f2b6:	add    eax,DWORD PTR [ebx]
1002f2b8:	add    DWORD PTR [ebx],eax
1002f2ba:	add    eax,DWORD PTR [ebx]
1002f2bc:	add    eax,DWORD PTR [ebx]
1002f2be:	add    eax,DWORD PTR [ebx]
1002f2c0:	add    eax,DWORD PTR [ebx]
1002f2c2:	add    al,BYTE PTR [ebx]
1002f2c4:	add    eax,DWORD PTR [ebx]
1002f2c6:	add    eax,DWORD PTR [ebx]
1002f2c8:	add    eax,DWORD PTR [ebx]
1002f2ca:	add    eax,DWORD PTR [ebx]
1002f2cc:	add    eax,DWORD PTR [ebx]
1002f2ce:	add    al,BYTE PTR [ebx]
1002f2d0:	add    eax,DWORD PTR [ebx]
1002f2d2:	add    eax,DWORD PTR [ebx]
1002f2d4:	add    eax,DWORD PTR [ebx]
1002f2d6:	add    eax,DWORD PTR [ebx]
1002f2d8:	add    eax,DWORD PTR [ebx]
1002f2da:	add    eax,DWORD PTR [ebx]
1002f2dc:	add    eax,DWORD PTR [ebx]
1002f2de:	add    eax,DWORD PTR [ebx]
1002f2e0:	add    eax,DWORD PTR [ebx]
1002f2e2:	add    eax,DWORD PTR [ebx]
1002f2e4:	add    eax,DWORD PTR [ebx]
1002f2e6:	add    eax,DWORD PTR [ebx]
1002f2e8:	add    eax,DWORD PTR [ebx]
1002f2ea:	add    eax,DWORD PTR [ebx]
1002f2ec:	add    eax,DWORD PTR [ebx]
1002f2ee:	add    eax,DWORD PTR [ebx]
1002f2f0:	add    eax,DWORD PTR [ebx]
1002f2f2:	add    eax,DWORD PTR [ebx]
1002f2f4:	add    eax,DWORD PTR [ebx]
1002f2f6:	add    eax,DWORD PTR [ebx]
1002f2f8:	add    eax,DWORD PTR [ebx]
1002f2fa:	add    eax,DWORD PTR [ebx]
1002f2fc:	add    ah,cl
1002f2fe:	int3   
1002f2ff:	int3   
1002f300:	mov    eax,esi
1002f302:	mov    edx,0xe3
1002f307:	push   edi
1002f308:	mov    ecx,DWORD PTR [eax+0x4]
1002f30b:	mov    edi,DWORD PTR [eax]
1002f30d:	xor    edi,ecx
1002f30f:	and    edi,0x7ffffffe
1002f315:	xor    edi,DWORD PTR [eax]
1002f317:	and    cl,0x1
1002f31a:	shr    edi,1
1002f31c:	sub    edx,0x1
1002f31f:	neg    cl
1002f321:	sbb    ecx,ecx
1002f323:	and    ecx,0x9908b0df
1002f329:	xor    edi,ecx
1002f32b:	xor    edi,DWORD PTR [eax+0x634]
1002f331:	add    eax,0x4
1002f334:	test   edx,edx
1002f336:	mov    DWORD PTR [eax-0x4],edi
1002f339:	jne    0x1002f308
1002f33b:	mov    edx,0x18c
1002f340:	mov    ecx,DWORD PTR [eax+0x4]
1002f343:	mov    edi,DWORD PTR [eax]
1002f345:	xor    edi,ecx
1002f347:	and    edi,0x7ffffffe
1002f34d:	xor    edi,DWORD PTR [eax]
1002f34f:	and    cl,0x1
1002f352:	shr    edi,1
1002f354:	neg    cl
1002f356:	sbb    ecx,ecx
1002f358:	and    ecx,0x9908b0df
1002f35e:	xor    edi,ecx
1002f360:	xor    edi,DWORD PTR [eax-0x38c]
1002f366:	add    eax,0x4
1002f369:	sub    edx,0x1
1002f36c:	mov    DWORD PTR [eax-0x4],edi
1002f36f:	jne    0x1002f340
1002f371:	mov    ecx,DWORD PTR [esi]
1002f373:	mov    edx,DWORD PTR [eax]
1002f375:	xor    edx,ecx
1002f377:	and    edx,0x7ffffffe
1002f37d:	xor    edx,DWORD PTR [eax]
1002f37f:	and    cl,0x1
1002f382:	shr    edx,1
1002f384:	neg    cl
1002f386:	pop    edi
1002f387:	sbb    ecx,ecx
1002f389:	and    ecx,0x9908b0df
1002f38f:	xor    edx,ecx
1002f391:	xor    edx,DWORD PTR [eax-0x38c]
1002f397:	mov    DWORD PTR [eax],edx
1002f399:	mov    DWORD PTR [esi+0x9c4],0x270
1002f3a3:	mov    DWORD PTR [esi+0x9c0],esi
1002f3a9:	ret    
1002f3aa:	int3   
1002f3ab:	int3   
1002f3ac:	int3   
1002f3ad:	int3   
1002f3ae:	int3   
1002f3af:	int3   
1002f3b0:	push   esi
1002f3b1:	mov    esi,eax
1002f3b3:	push   edi
1002f3b4:	mov    ecx,0x1
1002f3b9:	mov    DWORD PTR [esi],edx
1002f3bb:	jmp    0x1002f3c0
1002f3bd:	lea    ecx,[ecx+0x0]
1002f3c0:	mov    edx,DWORD PTR [eax]
1002f3c2:	mov    edi,edx
1002f3c4:	shr    edi,0x1e
1002f3c7:	xor    edi,edx
1002f3c9:	imul   edi,edi,0x6c078965
1002f3cf:	add    edi,ecx
1002f3d1:	mov    DWORD PTR [eax+0x4],edi
1002f3d4:	add    ecx,0x1
1002f3d7:	add    eax,0x4
1002f3da:	cmp    ecx,0x270
1002f3e0:	jl     0x1002f3c0
1002f3e2:	call   0x1002f300
1002f3e7:	pop    edi
1002f3e8:	pop    esi
1002f3e9:	ret    
1002f3ea:	int3   
1002f3eb:	int3   
1002f3ec:	int3   
1002f3ed:	int3   
1002f3ee:	int3   
1002f3ef:	int3   
1002f3f0:	push   esi
1002f3f1:	mov    esi,eax
1002f3f3:	cmp    DWORD PTR [esi+0x9c4],0x0
1002f3fa:	jne    0x1002f401
1002f3fc:	call   0x1002f300
1002f401:	mov    eax,DWORD PTR [esi+0x9c0]
1002f407:	add    DWORD PTR [esi+0x9c4],0xffffffff
1002f40e:	mov    ecx,DWORD PTR [eax]
1002f410:	add    eax,0x4
1002f413:	mov    DWORD PTR [esi+0x9c0],eax
1002f419:	mov    eax,ecx
1002f41b:	shr    eax,0xb
1002f41e:	xor    ecx,eax
1002f420:	mov    edx,ecx
1002f422:	and    edx,0xff3a58ad
1002f428:	shl    edx,0x7
1002f42b:	xor    ecx,edx
1002f42d:	mov    eax,ecx
1002f42f:	and    eax,0xffffdf8c
1002f434:	shl    eax,0xf
1002f437:	xor    ecx,eax
1002f439:	mov    eax,ecx
1002f43b:	shr    eax,0x12
1002f43e:	xor    eax,ecx
1002f440:	and    eax,0x3f
1002f443:	cmp    eax,0x23
1002f446:	ja     0x1002f3f3
1002f448:	pop    esi
1002f449:	ret    
1002f44a:	int3   
1002f44b:	int3   
1002f44c:	int3   
1002f44d:	int3   
1002f44e:	int3   
1002f44f:	int3   
1002f450:	sub    esp,0x9cc
1002f456:	push   esi
1002f457:	push   edi
1002f458:	add    edx,0x20
1002f45b:	lea    eax,[esp+0x8]
1002f45f:	call   0x1002f3b0
1002f464:	mov    eax,ds:0x1007fa44
1002f469:	mov    WORD PTR [ebx],0x0
1002f46e:	mov    edx,eax
1002f470:	mov    cx,WORD PTR [eax]
1002f473:	add    eax,0x2
1002f476:	test   cx,cx
1002f479:	jne    0x1002f470
1002f47b:	mov    edi,ebx
1002f47d:	sub    eax,edx
1002f47f:	add    edi,0xfffffffe
1002f482:	mov    cx,WORD PTR [edi+0x2]
1002f486:	add    edi,0x2
1002f489:	test   cx,cx
1002f48c:	jne    0x1002f482
1002f48e:	mov    ecx,eax
1002f490:	shr    ecx,0x2
1002f493:	mov    esi,edx
1002f495:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002f497:	mov    ecx,eax
1002f499:	and    ecx,0x3
1002f49c:	mov    eax,ebx
1002f49e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1002f4a0:	lea    edx,[eax+0x2]
1002f4a3:	mov    cx,WORD PTR [eax]
1002f4a6:	add    eax,0x2
1002f4a9:	test   cx,cx
1002f4ac:	jne    0x1002f4a3
1002f4ae:	sub    eax,edx
1002f4b0:	sar    eax,1
1002f4b2:	mov    esi,eax
1002f4b4:	mov    edi,0x5
1002f4b9:	lea    esp,[esp+0x0]
1002f4c0:	lea    eax,[esp+0x8]
1002f4c4:	call   0x1002f3f0
1002f4c9:	cmp    eax,0xa
1002f4cc:	jae    0x1002f4d3
1002f4ce:	add    eax,0x30
1002f4d1:	jmp    0x1002f4d6
1002f4d3:	add    eax,0x57
1002f4d6:	movzx  eax,ax
1002f4d9:	mov    WORD PTR [ebx+esi*2],ax
1002f4dd:	add    esi,0x1
1002f4e0:	sub    edi,0x1
1002f4e3:	mov    WORD PTR [ebx+esi*2],0x0
1002f4e9:	jne    0x1002f4c0
1002f4eb:	pop    edi
1002f4ec:	pop    esi
1002f4ed:	add    esp,0x9cc
1002f4f3:	ret    
1002f4f4:	int3   
1002f4f5:	int3   
1002f4f6:	int3   
1002f4f7:	int3   
1002f4f8:	int3   
1002f4f9:	int3   
1002f4fa:	int3   
1002f4fb:	int3   
1002f4fc:	int3   
1002f4fd:	int3   
1002f4fe:	int3   
1002f4ff:	int3   
1002f500:	push   ebp
1002f501:	mov    ebp,esp
1002f503:	and    esp,0xfffffff8
1002f506:	push   0xffffffff
1002f508:	push   0x1005f770
1002f50d:	mov    eax,fs:0x0
1002f513:	push   eax
1002f514:	sub    esp,0x50
1002f517:	push   ebx
1002f518:	push   esi
1002f519:	push   edi
1002f51a:	mov    eax,ds:0x1007e030
1002f51f:	xor    eax,esp
1002f521:	push   eax
1002f522:	lea    eax,[esp+0x60]
1002f526:	mov    fs:0x0,eax
1002f52c:	xor    ebx,ebx
1002f52e:	push   0x4000
1002f533:	mov    DWORD PTR [esp+0x18],ebx
1002f537:	call   0x10043721
1002f53c:	mov    edi,eax
1002f53e:	push   0x38
1002f540:	mov    DWORD PTR [esp+0x70],ebx
1002f544:	push   0x10072fc0
1002f549:	lea    eax,[esp+0x30]
1002f54d:	push   0x2f
1002f54f:	push   eax
1002f550:	mov    DWORD PTR [esp+0x58],ebx
1002f554:	mov    DWORD PTR [esp+0x5c],ebx
1002f558:	mov    DWORD PTR [esp+0x60],ebx
1002f55c:	mov    DWORD PTR [esp+0x3c],ebx
1002f560:	mov    DWORD PTR [esp+0x38],ebx
1002f564:	call   0x100528d0
1002f569:	add    esp,0x14
1002f56c:	test   eax,eax
1002f56e:	je     0x1002f59d
1002f570:	mov    esi,DWORD PTR [ebp+0x8]
1002f573:	push   ebx
1002f574:	mov    DWORD PTR [esp+0x1c],ebx
1002f578:	mov    DWORD PTR [esi],ebx
1002f57a:	call   0x10042e92
1002f57f:	push   edi
1002f580:	call   0x10042e92
1002f585:	add    esp,0x8
1002f588:	mov    eax,esi
1002f58a:	mov    ecx,DWORD PTR [esp+0x60]
1002f58e:	mov    DWORD PTR fs:0x0,ecx
1002f595:	pop    ecx
1002f596:	pop    edi
1002f597:	pop    esi
1002f598:	pop    ebx
1002f599:	mov    esp,ebp
1002f59b:	pop    ebp
1002f59c:	ret    
1002f59d:	mov    ecx,DWORD PTR [ebp+0x10]
1002f5a0:	mov    edx,DWORD PTR [ebp+0xc]
1002f5a3:	mov    DWORD PTR [esp+0x28],ecx
1002f5a7:	mov    DWORD PTR [esp+0x24],edx
1002f5ab:	jmp    0x1002f5b0
1002f5ad:	lea    ecx,[ecx+0x0]
1002f5b0:	lea    ecx,[esp+0x24]
1002f5b4:	lea    eax,[ebx+edi*1]
1002f5b7:	push   0x4
1002f5b9:	push   ecx
1002f5ba:	mov    DWORD PTR [esp+0x3c],0x4000
1002f5c2:	mov    DWORD PTR [esp+0x38],eax
1002f5c6:	call   0x10052ab0
1002f5cb:	mov    esi,eax
1002f5cd:	add    esp,0x8
1002f5d0:	cmp    esi,0xfffffffc
1002f5d3:	mov    DWORD PTR [esp+0x18],esi
1002f5d7:	jl     0x1002f5eb
1002f5d9:	cmp    esi,0xfffffffd
1002f5dc:	jle    0x1002f682
1002f5e2:	cmp    esi,0x2
1002f5e5:	je     0x1002f682
1002f5eb:	mov    ecx,DWORD PTR [esp+0x34]
1002f5ef:	mov    eax,0x4000
1002f5f4:	sub    eax,ecx
1002f5f6:	add    ebx,eax
1002f5f8:	test   ecx,ecx
1002f5fa:	mov    DWORD PTR [esp+0x14],ebx
1002f5fe:	jne    0x1002f669
1002f600:	mov    esi,edi
1002f602:	mov    DWORD PTR [esp+0x1c],ecx
1002f606:	mov    DWORD PTR [esp+0x20],esi
1002f60a:	add    ebx,0x4000
1002f610:	push   ebx
1002f611:	mov    BYTE PTR [esp+0x6c],0x1
1002f616:	call   0x10043721
1002f61b:	mov    edi,eax
1002f61d:	add    esp,0x4
1002f620:	test   edi,edi
1002f622:	mov    DWORD PTR [esp+0x10],0x0
1002f62a:	je     0x1002f636
1002f62c:	push   0x0
1002f62e:	call   0x10042e92
1002f633:	add    esp,0x4
1002f636:	mov    edx,DWORD PTR [esp+0x10]
1002f63a:	push   edx
1002f63b:	call   0x10042e92
1002f640:	mov    ebx,DWORD PTR [esp+0x18]
1002f644:	push   ebx
1002f645:	push   esi
1002f646:	push   edi
1002f647:	call   0x10045180
1002f64c:	push   esi
1002f64d:	mov    BYTE PTR [esp+0x7c],0x0
1002f652:	call   0x10042e92
1002f657:	add    esp,0x14
1002f65a:	cmp    DWORD PTR [esp+0x34],0x0
1002f65f:	je     0x1002f5b0
1002f665:	mov    esi,DWORD PTR [esp+0x18]
1002f669:	lea    ecx,[esp+0x24]
1002f66d:	push   ecx
1002f66e:	call   0x100540a0
1002f673:	add    esp,0x4
1002f676:	cmp    esi,0x1
1002f679:	jne    0x1002f6c2
1002f67b:	mov    edx,DWORD PTR [ebp+0x14]
1002f67e:	mov    DWORD PTR [edx],ebx
1002f680:	jmp    0x1002f6e6
1002f682:	lea    eax,[esp+0x24]
1002f686:	push   eax
1002f687:	call   0x100540a0
1002f68c:	mov    esi,DWORD PTR [ebp+0x8]
1002f68f:	push   0x0
1002f691:	mov    DWORD PTR [esp+0x28],0x0
1002f699:	mov    DWORD PTR [esi],0x0
1002f69f:	call   0x10042e92
1002f6a4:	push   edi
1002f6a5:	call   0x10042e92
1002f6aa:	add    esp,0xc
1002f6ad:	mov    eax,esi
1002f6af:	mov    ecx,DWORD PTR [esp+0x60]
1002f6b3:	mov    DWORD PTR fs:0x0,ecx
1002f6ba:	pop    ecx
1002f6bb:	pop    edi
1002f6bc:	pop    esi
1002f6bd:	pop    ebx
1002f6be:	mov    esp,ebp
1002f6c0:	pop    ebp
1002f6c1:	ret    
1002f6c2:	test   edi,edi
1002f6c4:	mov    DWORD PTR [esp+0x18],0x0
1002f6cc:	je     0x1002f6d7
1002f6ce:	push   edi
1002f6cf:	call   0x10042e92
1002f6d4:	add    esp,0x4
1002f6d7:	mov    eax,DWORD PTR [esp+0x18]
1002f6db:	push   eax
1002f6dc:	xor    edi,edi
1002f6de:	call   0x10042e92
1002f6e3:	add    esp,0x4
1002f6e6:	mov    esi,DWORD PTR [ebp+0x8]
1002f6e9:	push   0x0
1002f6eb:	mov    DWORD PTR [esi],edi
1002f6ed:	call   0x10042e92
1002f6f2:	add    esp,0x4
1002f6f5:	mov    eax,esi
1002f6f7:	mov    ecx,DWORD PTR [esp+0x60]
1002f6fb:	mov    DWORD PTR fs:0x0,ecx
1002f702:	pop    ecx
1002f703:	pop    edi
1002f704:	pop    esi
1002f705:	pop    ebx
1002f706:	mov    esp,ebp
1002f708:	pop    ebp
1002f709:	ret    
1002f70a:	int3   
1002f70b:	int3   
1002f70c:	int3   
1002f70d:	int3   
1002f70e:	int3   
1002f70f:	int3   
1002f710:	push   0xffffffff
1002f712:	push   0x1005f740
1002f717:	mov    eax,fs:0x0
1002f71d:	push   eax
1002f71e:	sub    esp,0x48
1002f721:	push   ebx
1002f722:	push   ebp
1002f723:	push   esi
1002f724:	push   edi
1002f725:	mov    eax,ds:0x1007e030
1002f72a:	xor    eax,esp
1002f72c:	push   eax
1002f72d:	lea    eax,[esp+0x5c]
1002f731:	mov    fs:0x0,eax
1002f737:	mov    eax,DWORD PTR [esp+0x74]
1002f73b:	xor    ebx,ebx
1002f73d:	mov    ebp,0x4000
1002f742:	cmp    eax,ebp
1002f744:	mov    DWORD PTR [esp+0x18],ebx
1002f748:	jae    0x1002f756
1002f74a:	cmp    eax,0x20
1002f74d:	mov    ebp,eax
1002f74f:	jge    0x1002f756
1002f751:	mov    ebp,0x20
1002f756:	push   ebp
1002f757:	call   0x10043721
1002f75c:	mov    edi,eax
1002f75e:	mov    eax,DWORD PTR [esp+0x80]
1002f765:	push   0x38
1002f767:	push   0x10072fc0
1002f76c:	push   ebx
1002f76d:	push   0x8
1002f76f:	push   eax
1002f770:	mov    DWORD PTR [esp+0x7c],ebx
1002f774:	push   0x8
1002f776:	lea    ecx,[esp+0x3c]
1002f77a:	push   0x9
1002f77c:	push   ecx
1002f77d:	xor    esi,esi
1002f77f:	mov    DWORD PTR [esp+0x64],ebx
1002f783:	mov    DWORD PTR [esp+0x68],ebx
1002f787:	mov    DWORD PTR [esp+0x6c],ebx
1002f78b:	mov    DWORD PTR [esp+0x48],ebx
1002f78f:	mov    DWORD PTR [esp+0x44],ebx
1002f793:	call   0x10052650
1002f798:	add    esp,0x24
1002f79b:	test   eax,eax
1002f79d:	je     0x1002f7bd
1002f79f:	mov    esi,DWORD PTR [esp+0x6c]
1002f7a3:	push   ebx
1002f7a4:	mov    DWORD PTR [esp+0x78],ebx
1002f7a8:	mov    DWORD PTR [esi],ebx
1002f7aa:	call   0x10042e92
1002f7af:	push   edi
1002f7b0:	call   0x10042e92
1002f7b5:	add    esp,0x8
1002f7b8:	jmp    0x1002f8b2
1002f7bd:	mov    edx,DWORD PTR [esp+0x74]
1002f7c1:	mov    eax,DWORD PTR [esp+0x70]
1002f7c5:	mov    DWORD PTR [esp+0x24],edx
1002f7c9:	mov    DWORD PTR [esp+0x20],eax
1002f7cd:	lea    ecx,[ecx+0x0]
1002f7d0:	lea    edx,[esp+0x20]
1002f7d4:	lea    ecx,[esi+edi*1]
1002f7d7:	push   0x4
1002f7d9:	push   edx
1002f7da:	mov    DWORD PTR [esp+0x38],ebp
1002f7de:	mov    DWORD PTR [esp+0x34],ecx
1002f7e2:	call   0x10051080
1002f7e7:	mov    ecx,DWORD PTR [esp+0x38]
1002f7eb:	mov    DWORD PTR [esp+0x20],eax
1002f7ef:	mov    eax,ebp
1002f7f1:	sub    eax,ecx
1002f7f3:	add    esp,0x8
1002f7f6:	add    esi,eax
1002f7f8:	cmp    ecx,ebx
1002f7fa:	jne    0x1002f867
1002f7fc:	mov    ebx,edi
1002f7fe:	mov    DWORD PTR [esp+0x14],0x0
1002f806:	mov    DWORD PTR [esp+0x1c],ebx
1002f80a:	lea    eax,[esi+ebp*1]
1002f80d:	push   eax
1002f80e:	mov    BYTE PTR [esp+0x68],0x1
1002f813:	call   0x10043721
1002f818:	mov    edi,eax
1002f81a:	add    esp,0x4
1002f81d:	test   edi,edi
1002f81f:	mov    DWORD PTR [esp+0x14],edi
1002f823:	mov    DWORD PTR [esp+0x74],0x0
1002f82b:	je     0x1002f837
1002f82d:	push   0x0
1002f82f:	call   0x10042e92
1002f834:	add    esp,0x4
1002f837:	mov    ecx,DWORD PTR [esp+0x74]
1002f83b:	push   ecx
1002f83c:	call   0x10042e92
1002f841:	mov    edx,DWORD PTR [esp+0x18]
1002f845:	push   esi
1002f846:	push   ebx
1002f847:	push   edx
1002f848:	call   0x10045180
1002f84d:	push   ebx
1002f84e:	mov    BYTE PTR [esp+0x78],0x0
1002f853:	call   0x10042e92
1002f858:	xor    ebx,ebx
1002f85a:	add    esp,0x14
1002f85d:	cmp    DWORD PTR [esp+0x30],ebx
1002f861:	je     0x1002f7d0
1002f867:	lea    eax,[esp+0x20]
1002f86b:	push   eax
1002f86c:	call   0x10051860
1002f871:	add    esp,0x4
1002f874:	cmp    DWORD PTR [esp+0x18],0x1
1002f879:	jne    0x1002f883
1002f87b:	mov    ecx,DWORD PTR [esp+0x78]
1002f87f:	mov    DWORD PTR [ecx],esi
1002f881:	jmp    0x1002f8a3
1002f883:	cmp    edi,ebx
1002f885:	mov    DWORD PTR [esp+0x74],ebx
1002f889:	je     0x1002f894
1002f88b:	push   edi
1002f88c:	call   0x10042e92
1002f891:	add    esp,0x4
1002f894:	mov    edx,DWORD PTR [esp+0x74]
1002f898:	push   edx
1002f899:	xor    edi,edi
1002f89b:	call   0x10042e92
1002f8a0:	add    esp,0x4
1002f8a3:	mov    esi,DWORD PTR [esp+0x6c]
1002f8a7:	push   ebx
1002f8a8:	mov    DWORD PTR [esi],edi
1002f8aa:	call   0x10042e92
1002f8af:	add    esp,0x4
1002f8b2:	mov    eax,esi
1002f8b4:	mov    ecx,DWORD PTR [esp+0x5c]
1002f8b8:	mov    DWORD PTR fs:0x0,ecx
1002f8bf:	pop    ecx
1002f8c0:	pop    edi
1002f8c1:	pop    esi
1002f8c2:	pop    ebp
1002f8c3:	pop    ebx
1002f8c4:	add    esp,0x54
1002f8c7:	ret    
1002f8c8:	int3   
1002f8c9:	int3   
1002f8ca:	int3   
1002f8cb:	int3   
1002f8cc:	int3   
1002f8cd:	int3   
1002f8ce:	int3   
1002f8cf:	int3   
1002f8d0:	push   ecx
1002f8d1:	push   0xf
1002f8d3:	push   eax
1002f8d4:	push   ecx
1002f8d5:	push   edx
1002f8d6:	lea    eax,[esp+0x10]
1002f8da:	push   eax
1002f8db:	mov    DWORD PTR [esp+0x14],0x0
1002f8e3:	call   0x1002f710
1002f8e8:	mov    ecx,DWORD PTR [eax]
1002f8ea:	mov    DWORD PTR [eax],0x0
1002f8f0:	mov    DWORD PTR [esi],ecx
1002f8f2:	mov    ecx,DWORD PTR [esp+0x14]
1002f8f6:	add    esp,0x14
1002f8f9:	push   ecx
1002f8fa:	call   0x10042e92
1002f8ff:	mov    eax,esi
1002f901:	add    esp,0x8
1002f904:	ret    
1002f905:	int3   
1002f906:	int3   
1002f907:	int3   
1002f908:	int3   
1002f909:	int3   
1002f90a:	int3   
1002f90b:	int3   
1002f90c:	int3   
1002f90d:	int3   
1002f90e:	int3   
1002f90f:	int3   
1002f910:	push   ecx
1002f911:	push   0x1f
1002f913:	push   eax
1002f914:	push   ecx
1002f915:	push   edx
1002f916:	lea    eax,[esp+0x10]
1002f91a:	push   eax
1002f91b:	mov    DWORD PTR [esp+0x14],0x0
1002f923:	call   0x1002f710
1002f928:	mov    ecx,DWORD PTR [eax]
1002f92a:	mov    DWORD PTR [eax],0x0
1002f930:	mov    DWORD PTR [esi],ecx
1002f932:	mov    ecx,DWORD PTR [esp+0x14]
1002f936:	add    esp,0x14
1002f939:	push   ecx
1002f93a:	call   0x10042e92
1002f93f:	mov    eax,esi
1002f941:	add    esp,0x8
1002f944:	ret    
1002f945:	int3   
1002f946:	int3   
1002f947:	int3   
1002f948:	int3   
1002f949:	int3   
1002f94a:	int3   
1002f94b:	int3   
1002f94c:	int3   
1002f94d:	int3   
1002f94e:	int3   
1002f94f:	int3   
1002f950:	push   ebp
1002f951:	mov    ebp,esp
1002f953:	sub    esp,0x8
1002f956:	mov    eax,ds:0x1007e030
1002f95b:	xor    eax,ebp
1002f95d:	mov    DWORD PTR [ebp-0x4],eax
1002f960:	push   esi
1002f961:	xor    esi,esi
1002f963:	push   edi
1002f964:	mov    DWORD PTR [ebp-0x8],esi
1002f967:	call   DWORD PTR ds:0x1007efec
1002f96d:	push   0x10072fc8
1002f972:	mov    DWORD PTR [ebp-0x8],eax
1002f975:	call   DWORD PTR ds:0x100660c4
1002f97b:	add    eax,0x1
1002f97e:	cmp    eax,0x3fffffff
1002f983:	jg     0x1002f9bd
1002f985:	lea    esi,[eax+eax*1]
1002f988:	mov    eax,esi
1002f98a:	call   0x1004b6f0
1002f98f:	mov    edi,esp
1002f991:	test   edi,edi
1002f993:	je     0x1002f9bb
1002f995:	mov    eax,DWORD PTR [ebp-0x8]
1002f998:	push   0x0
1002f99a:	push   0x0
1002f99c:	push   esi
1002f99d:	push   edi
1002f99e:	push   0xffffffff
1002f9a0:	push   0x10072fc8
1002f9a5:	push   0x0
1002f9a7:	push   eax
1002f9a8:	mov    BYTE PTR [edi],0x0
1002f9ab:	call   DWORD PTR ds:0x100660b8
1002f9b1:	mov    esi,eax
1002f9b3:	neg    esi
1002f9b5:	sbb    esi,esi
1002f9b7:	and    esi,edi
1002f9b9:	jmp    0x1002f9bd
1002f9bb:	xor    esi,esi
1002f9bd:	mov    DWORD PTR [ebx+0x18],0xf
1002f9c4:	mov    DWORD PTR [ebx+0x14],0x0
1002f9cb:	push   esi
1002f9cc:	mov    BYTE PTR [ebx+0x4],0x0
1002f9d0:	call   0x10043010
1002f9d5:	add    esp,0x4
1002f9d8:	push   eax
1002f9d9:	push   esi
1002f9da:	mov    ecx,ebx
1002f9dc:	call   0x1000133b
1002f9e1:	mov    eax,ebx
1002f9e3:	lea    esp,[ebp-0x10]
1002f9e6:	pop    edi
1002f9e7:	pop    esi
1002f9e8:	mov    ecx,DWORD PTR [ebp-0x4]
1002f9eb:	xor    ecx,ebp
1002f9ed:	call   0x10042e97
1002f9f2:	mov    esp,ebp
1002f9f4:	pop    ebp
1002f9f5:	ret    
1002f9f6:	int3   
1002f9f7:	int3   
1002f9f8:	int3   
1002f9f9:	int3   
1002f9fa:	int3   
1002f9fb:	int3   
1002f9fc:	int3   
1002f9fd:	int3   
1002f9fe:	int3   
1002f9ff:	int3   
1002fa00:	sub    esp,0x1c
1002fa03:	lea    eax,[esp+0x8]
1002fa07:	push   eax
1002fa08:	call   DWORD PTR ds:0x10066140
1002fa0e:	lea    ecx,[esp]
1002fa11:	push   ecx
1002fa12:	lea    edx,[esp+0xc]
1002fa16:	push   edx
1002fa17:	call   DWORD PTR ds:0x10066104
1002fa1d:	mov    edx,DWORD PTR [esp+0x4]
1002fa21:	mov    eax,DWORD PTR [esp]
1002fa24:	add    esp,0x1c
1002fa27:	ret    
1002fa28:	int3   
1002fa29:	int3   
1002fa2a:	int3   
1002fa2b:	int3   
1002fa2c:	int3   
1002fa2d:	int3   
1002fa2e:	int3   
1002fa2f:	int3   
1002fa30:	push   ebp
1002fa31:	mov    ebp,esp
1002fa33:	and    esp,0xfffffff8
1002fa36:	sub    esp,0x8
1002fa39:	mov    eax,DWORD PTR [ebp+0x8]
1002fa3c:	push   ebx
1002fa3d:	push   edi
1002fa3e:	xor    ecx,ecx
1002fa40:	push   0xffffffff
1002fa42:	mov    DWORD PTR [esi+0x14],ecx
1002fa45:	push   ecx
1002fa46:	mov    DWORD PTR [esi+0x18],0xf
1002fa4d:	lea    edi,[esi+0x4]
1002fa50:	mov    DWORD PTR [esp+0x10],ecx
1002fa54:	mov    BYTE PTR [edi],cl
1002fa56:	push   eax
1002fa57:	mov    ecx,esi
1002fa59:	call   0x10001241
1002fa5e:	mov    eax,DWORD PTR [esi+0x18]
1002fa61:	cmp    eax,0x10
1002fa64:	jb     0x1002fa6a
1002fa66:	mov    ebx,DWORD PTR [edi]
1002fa68:	jmp    0x1002fa6c
1002fa6a:	mov    ebx,edi
1002fa6c:	test   ebx,ebx
1002fa6e:	je     0x1002fa93
1002fa70:	cmp    eax,0x10
1002fa73:	jb     0x1002fa79
1002fa75:	mov    ecx,DWORD PTR [edi]
1002fa77:	jmp    0x1002fa7b
1002fa79:	mov    ecx,edi
1002fa7b:	cmp    ecx,ebx
1002fa7d:	ja     0x1002fa93
1002fa7f:	cmp    eax,0x10
1002fa82:	jb     0x1002fa88
1002fa84:	mov    eax,DWORD PTR [edi]
1002fa86:	jmp    0x1002fa8a
1002fa88:	mov    eax,edi
1002fa8a:	mov    ecx,DWORD PTR [esi+0x14]
1002fa8d:	add    ecx,eax
1002fa8f:	cmp    ebx,ecx
1002fa91:	jbe    0x1002fa98
1002fa93:	call   0x100433b0
1002fa98:	mov    edx,DWORD PTR [esi+0x18]
1002fa9b:	cmp    edx,0x10
1002fa9e:	mov    DWORD PTR [esp+0xc],ebx
1002faa2:	jb     0x1002faa8
1002faa4:	mov    eax,DWORD PTR [edi]
1002faa6:	jmp    0x1002faaa
1002faa8:	mov    eax,edi
1002faaa:	mov    ecx,DWORD PTR [esi+0x14]
1002faad:	lea    ebx,[ecx+eax*1]
1002fab0:	test   ebx,ebx
1002fab2:	je     0x1002fad4
1002fab4:	cmp    edx,0x10
1002fab7:	jb     0x1002fabd
1002fab9:	mov    eax,DWORD PTR [edi]
1002fabb:	jmp    0x1002fabf
1002fabd:	mov    eax,edi
1002fabf:	cmp    eax,ebx
1002fac1:	ja     0x1002fad4
1002fac3:	cmp    edx,0x10
1002fac6:	jb     0x1002facc
1002fac8:	mov    eax,DWORD PTR [edi]
1002faca:	jmp    0x1002face
1002facc:	mov    eax,edi
1002face:	add    ecx,eax
1002fad0:	cmp    ebx,ecx
1002fad2:	jbe    0x1002fad9
1002fad4:	call   0x100433b0
1002fad9:	mov    ecx,DWORD PTR [esp+0xc]
1002fadd:	cmp    ecx,ebx
1002fadf:	je     0x1002fb5b
1002fae1:	cmp    esi,0xfffffffe
1002fae4:	je     0x1002fb22
1002fae6:	cmp    DWORD PTR [esi+0x18],0x10
1002faea:	jb     0x1002faf0
1002faec:	mov    eax,DWORD PTR [edi]
1002faee:	jmp    0x1002faf2
1002faf0:	mov    eax,edi
1002faf2:	mov    edx,DWORD PTR [esi+0x14]
1002faf5:	add    edx,eax
1002faf7:	cmp    ecx,edx
1002faf9:	jb     0x1002fb04
1002fafb:	call   0x100433b0
1002fb00:	mov    ecx,DWORD PTR [esp+0xc]
1002fb04:	cmp    DWORD PTR [esi+0x18],0x10
1002fb08:	jb     0x1002fb0e
1002fb0a:	mov    eax,DWORD PTR [edi]
1002fb0c:	jmp    0x1002fb10
1002fb0e:	mov    eax,edi
1002fb10:	mov    edx,DWORD PTR [esi+0x14]
1002fb13:	add    edx,eax
1002fb15:	cmp    ecx,edx
1002fb17:	jb     0x1002fb22
1002fb19:	call   0x100433b0
1002fb1e:	mov    ecx,DWORD PTR [esp+0xc]
1002fb22:	movsx  eax,BYTE PTR [ecx]
1002fb25:	push   eax
1002fb26:	call   0x10045dd1
1002fb2b:	mov    ebx,DWORD PTR [esp+0x10]
1002fb2f:	add    esp,0x4
1002fb32:	cmp    esi,0xfffffffe
1002fb35:	mov    BYTE PTR [ebx],al
1002fb37:	je     0x1002fb53
1002fb39:	cmp    DWORD PTR [esi+0x18],0x10
1002fb3d:	jb     0x1002fb43
1002fb3f:	mov    eax,DWORD PTR [edi]
1002fb41:	jmp    0x1002fb45
1002fb43:	mov    eax,edi
1002fb45:	mov    ecx,DWORD PTR [esi+0x14]
1002fb48:	add    ecx,eax
1002fb4a:	cmp    ebx,ecx
1002fb4c:	jb     0x1002fb53
1002fb4e:	call   0x100433b0
1002fb53:	add    ebx,0x1
1002fb56:	jmp    0x1002fa98
1002fb5b:	pop    edi
1002fb5c:	mov    eax,esi
1002fb5e:	pop    ebx
1002fb5f:	mov    esp,ebp
1002fb61:	pop    ebp
1002fb62:	ret    
1002fb63:	int3   
1002fb64:	int3   
1002fb65:	int3   
1002fb66:	int3   
1002fb67:	int3   
1002fb68:	int3   
1002fb69:	int3   
1002fb6a:	int3   
1002fb6b:	int3   
1002fb6c:	int3   
1002fb6d:	int3   
1002fb6e:	int3   
1002fb6f:	int3   
1002fb70:	push   0xffffffff
1002fb72:	push   0x100608f5
1002fb77:	mov    eax,fs:0x0
1002fb7d:	push   eax
1002fb7e:	sub    esp,0xa0
1002fb84:	mov    eax,ds:0x1007e030
1002fb89:	xor    eax,esp
1002fb8b:	mov    DWORD PTR [esp+0x9c],eax
1002fb92:	push   ebx
1002fb93:	push   ebp
1002fb94:	push   esi
1002fb95:	push   edi
1002fb96:	mov    eax,ds:0x1007e030
1002fb9b:	xor    eax,esp
1002fb9d:	push   eax
1002fb9e:	lea    eax,[esp+0xb4]
1002fba5:	mov    fs:0x0,eax
1002fbab:	mov    ebp,DWORD PTR [esp+0xc4]
1002fbb2:	xor    ebx,ebx
1002fbb4:	mov    DWORD PTR [esp+0x34],ebx
1002fbb8:	mov    eax,ds:0x10080a74
1002fbbd:	mov    edx,DWORD PTR [eax+0xc]
1002fbc0:	mov    edi,ecx
1002fbc2:	mov    ecx,0x10080a74
1002fbc7:	mov    DWORD PTR [esp+0x2c],ebp
1002fbcb:	mov    DWORD PTR [esp+0x1c],edi
1002fbcf:	call   edx
1002fbd1:	lea    esi,[eax+0x10]
1002fbd4:	mov    DWORD PTR [esp+0x20],esi
1002fbd8:	mov    DWORD PTR [esp+0xbc],ebx
1002fbdf:	mov    eax,DWORD PTR [edi+0x14]
1002fbe2:	cmp    eax,ebx
1002fbe4:	mov    DWORD PTR [esp+0x28],ebx
1002fbe8:	jbe    0x1002ff78
1002fbee:	mov    edi,edi
1002fbf0:	cmp    DWORD PTR [esp+0x28],0x0
1002fbf5:	jle    0x1002fddd
1002fbfb:	sub    DWORD PTR [esp+0x28],0x1
1002fc00:	cmp    ebx,eax
1002fc02:	jbe    0x1002fc09
1002fc04:	call   0x100433b0
1002fc09:	mov    ebp,DWORD PTR [esp+0x1c]
1002fc0d:	cmp    DWORD PTR [ebp+0x18],0x10
1002fc11:	lea    edi,[ebp+0x4]
1002fc14:	mov    DWORD PTR [esp+0x24],edi
1002fc18:	jb     0x1002fc1e
1002fc1a:	mov    eax,DWORD PTR [edi]
1002fc1c:	jmp    0x1002fc20
1002fc1e:	mov    eax,edi
1002fc20:	movzx  eax,BYTE PTR [eax+ebx*1]
1002fc24:	push   eax
1002fc25:	call   0x1004f2dc
1002fc2a:	add    esp,0x4
1002fc2d:	test   eax,eax
1002fc2f:	je     0x1002fdd0
1002fc35:	cmp    ebx,DWORD PTR [ebp+0x14]
1002fc38:	jbe    0x1002fc3f
1002fc3a:	call   0x100433b0
1002fc3f:	cmp    DWORD PTR [ebp+0x18],0x10
1002fc43:	jb     0x1002fc49
1002fc45:	mov    eax,DWORD PTR [edi]
1002fc47:	jmp    0x1002fc4b
1002fc49:	mov    eax,edi
1002fc4b:	mov    cl,BYTE PTR [eax+ebx*1]
1002fc4e:	mov    ebp,DWORD PTR [esi-0xc]
1002fc51:	mov    eax,DWORD PTR [esi-0x8]
1002fc54:	mov    BYTE PTR [esp+0x14],cl
1002fc58:	mov    ecx,0x1
1002fc5d:	sub    ecx,DWORD PTR [esi-0x4]
1002fc60:	lea    edi,[ebp+0x1]
1002fc63:	sub    eax,edi
1002fc65:	or     eax,ecx
1002fc67:	jge    0x1002fc78
1002fc69:	mov    ecx,edi
1002fc6b:	lea    eax,[esp+0x20]
1002fc6f:	call   0x100346f0
1002fc74:	mov    esi,DWORD PTR [esp+0x20]
1002fc78:	test   edi,edi
1002fc7a:	mov    dl,BYTE PTR [esp+0x14]
1002fc7e:	mov    BYTE PTR [esi+ebp*1],dl
1002fc81:	jl     0x10030086
1002fc87:	cmp    edi,DWORD PTR [esi-0x8]
1002fc8a:	jg     0x10030086
1002fc90:	mov    eax,DWORD PTR [esp+0x1c]
1002fc94:	shl    BYTE PTR [esp+0x1b],0x4
1002fc99:	mov    DWORD PTR [esi-0xc],edi
1002fc9c:	mov    BYTE PTR [edi+esi*1],0x0
1002fca0:	cmp    ebx,DWORD PTR [eax+0x14]
1002fca3:	jbe    0x1002fcae
1002fca5:	call   0x100433b0
1002fcaa:	mov    eax,DWORD PTR [esp+0x1c]
1002fcae:	cmp    DWORD PTR [eax+0x18],0x10
1002fcb2:	mov    ecx,DWORD PTR [esp+0x24]
1002fcb6:	jb     0x1002fcbc
1002fcb8:	mov    edx,DWORD PTR [ecx]
1002fcba:	jmp    0x1002fcbe
1002fcbc:	mov    edx,ecx
1002fcbe:	cmp    BYTE PTR [edx+ebx*1],0x30
1002fcc2:	jl     0x1002fd16
1002fcc4:	cmp    ebx,DWORD PTR [eax+0x14]
1002fcc7:	jbe    0x1002fcd6
1002fcc9:	call   0x100433b0
1002fcce:	mov    ecx,DWORD PTR [esp+0x24]
1002fcd2:	mov    eax,DWORD PTR [esp+0x1c]
1002fcd6:	cmp    DWORD PTR [eax+0x18],0x10
1002fcda:	jb     0x1002fce0
1002fcdc:	mov    edx,DWORD PTR [ecx]
1002fcde:	jmp    0x1002fce2
1002fce0:	mov    edx,ecx
1002fce2:	cmp    BYTE PTR [edx+ebx*1],0x39
1002fce6:	jg     0x1002fd16
1002fce8:	cmp    ebx,DWORD PTR [eax+0x14]
1002fceb:	jbe    0x1002fcfa
1002fced:	call   0x100433b0
1002fcf2:	mov    ecx,DWORD PTR [esp+0x24]
1002fcf6:	mov    eax,DWORD PTR [esp+0x1c]
1002fcfa:	cmp    DWORD PTR [eax+0x18],0x10
1002fcfe:	jb     0x1002fd0b
1002fd00:	mov    eax,DWORD PTR [ecx]
1002fd02:	movsx  eax,BYTE PTR [eax+ebx*1]
1002fd06:	sub    eax,0x30
1002fd09:	jmp    0x1002fd44
1002fd0b:	mov    eax,ecx
1002fd0d:	movsx  eax,BYTE PTR [eax+ebx*1]
1002fd11:	sub    eax,0x30
1002fd14:	jmp    0x1002fd44
1002fd16:	cmp    ebx,DWORD PTR [eax+0x14]
1002fd19:	jbe    0x1002fd28
1002fd1b:	call   0x100433b0
1002fd20:	mov    ecx,DWORD PTR [esp+0x24]
1002fd24:	mov    eax,DWORD PTR [esp+0x1c]
1002fd28:	cmp    DWORD PTR [eax+0x18],0x10
1002fd2c:	jb     0x1002fd32
1002fd2e:	mov    eax,DWORD PTR [ecx]
1002fd30:	jmp    0x1002fd34
1002fd32:	mov    eax,ecx
1002fd34:	movsx  eax,BYTE PTR [eax+ebx*1]
1002fd38:	push   eax
1002fd39:	call   0x10058d67
1002fd3e:	add    esp,0x4
1002fd41:	sub    eax,0x37
1002fd44:	add    BYTE PTR [esp+0x1b],al
1002fd48:	cmp    DWORD PTR [esp+0x28],0x0
1002fd4d:	jne    0x1002ff60
1002fd53:	cmp    BYTE PTR [esp+0x1b],0x80
1002fd58:	jb     0x1002ff60
1002fd5e:	mov    edi,DWORD PTR [esi-0xc]
1002fd61:	mov    eax,DWORD PTR [esi-0x8]
1002fd64:	add    edi,0xfffffffd
1002fd67:	mov    ecx,0x1
1002fd6c:	sub    ecx,DWORD PTR [esi-0x4]
1002fd6f:	sub    eax,edi
1002fd71:	or     eax,ecx
1002fd73:	jge    0x1002fd84
1002fd75:	mov    ecx,edi
1002fd77:	lea    eax,[esp+0x20]
1002fd7b:	call   0x100346f0
1002fd80:	mov    esi,DWORD PTR [esp+0x20]
1002fd84:	test   edi,edi
1002fd86:	jl     0x10030086
1002fd8c:	cmp    edi,DWORD PTR [esi-0x8]
1002fd8f:	jg     0x10030086
1002fd95:	test   edi,edi
1002fd97:	mov    DWORD PTR [esi-0xc],edi
1002fd9a:	mov    BYTE PTR [edi+esi*1],0x0
1002fd9e:	je     0x1002fdbc
1002fda0:	add    edi,0xffffffff
1002fda3:	js     0x10030086
1002fda9:	cmp    edi,DWORD PTR [esi-0xc]
1002fdac:	jg     0x10030086
1002fdb2:	cmp    BYTE PTR [edi+esi*1],0x80
1002fdb6:	je     0x1002ff60
1002fdbc:	push   0xffffff80
1002fdbe:	lea    edi,[esp+0x24]
1002fdc2:	call   0x100343e0
1002fdc7:	mov    esi,DWORD PTR [esp+0x20]
1002fdcb:	jmp    0x1002ff60
1002fdd0:	mov    DWORD PTR [esp+0x28],0x0
1002fdd8:	jmp    0x1002ff63
1002fddd:	cmp    ebx,eax
1002fddf:	jbe    0x1002fde6
1002fde1:	call   0x100433b0
1002fde6:	mov    edi,DWORD PTR [esp+0x1c]
1002fdea:	cmp    DWORD PTR [edi+0x18],0x10
1002fdee:	lea    ebp,[edi+0x4]
1002fdf1:	jb     0x1002fdf8
1002fdf3:	mov    eax,DWORD PTR [ebp+0x0]
1002fdf6:	jmp    0x1002fdfa
1002fdf8:	mov    eax,ebp
1002fdfa:	cmp    BYTE PTR [eax+ebx*1],0x80
1002fdfe:	jb     0x1002fe75
1002fe00:	mov    eax,DWORD PTR [edi+0x14]
1002fe03:	add    ebx,0x1
1002fe06:	cmp    ebx,eax
1002fe08:	jae    0x1002fe2e
1002fe0a:	jbe    0x1002fe11
1002fe0c:	call   0x100433b0
1002fe11:	cmp    DWORD PTR [edi+0x18],0x10
1002fe15:	jb     0x1002fe1c
1002fe17:	mov    eax,DWORD PTR [ebp+0x0]
1002fe1a:	jmp    0x1002fe1e
1002fe1c:	mov    eax,ebp
1002fe1e:	cmp    BYTE PTR [eax+ebx*1],0x80
1002fe22:	jb     0x1002fe2e
1002fe24:	mov    eax,DWORD PTR [edi+0x14]
1002fe27:	add    ebx,0x1
1002fe2a:	cmp    ebx,eax
1002fe2c:	jb     0x1002fe11
1002fe2e:	mov    ebp,DWORD PTR [esi-0xc]
1002fe31:	mov    eax,DWORD PTR [esi-0x8]
1002fe34:	mov    ecx,0x1
1002fe39:	sub    ecx,DWORD PTR [esi-0x4]
1002fe3c:	lea    edi,[ebp+0x1]
1002fe3f:	sub    eax,edi
1002fe41:	or     eax,ecx
1002fe43:	jge    0x1002fe54
1002fe45:	mov    ecx,edi
1002fe47:	lea    eax,[esp+0x20]
1002fe4b:	call   0x100346f0
1002fe50:	mov    esi,DWORD PTR [esp+0x20]
1002fe54:	test   edi,edi
1002fe56:	mov    BYTE PTR [esi+ebp*1],0x80
1002fe5a:	jl     0x10030086
1002fe60:	cmp    edi,DWORD PTR [esi-0x8]
1002fe63:	jg     0x10030086
1002fe69:	mov    DWORD PTR [esi-0xc],edi
1002fe6c:	mov    BYTE PTR [edi+esi*1],0x0
1002fe70:	jmp    0x1002ff63
1002fe75:	cmp    ebx,DWORD PTR [edi+0x14]
1002fe78:	jbe    0x1002fe7f
1002fe7a:	call   0x100433b0
1002fe7f:	cmp    DWORD PTR [edi+0x18],0x10
1002fe83:	jb     0x1002fe8a
1002fe85:	mov    eax,DWORD PTR [ebp+0x0]
1002fe88:	jmp    0x1002fe8c
1002fe8a:	mov    eax,ebp
1002fe8c:	cmp    BYTE PTR [eax+ebx*1],0x25
1002fe90:	jne    0x1002fefd
1002fe92:	cmp    ebx,DWORD PTR [edi+0x14]
1002fe95:	jbe    0x1002fe9c
1002fe97:	call   0x100433b0
1002fe9c:	cmp    DWORD PTR [edi+0x18],0x10
1002fea0:	jb     0x1002fea7
1002fea2:	mov    eax,DWORD PTR [ebp+0x0]
1002fea5:	jmp    0x1002fea9
1002fea7:	mov    eax,ebp
1002fea9:	mov    cl,BYTE PTR [eax+ebx*1]
1002feac:	mov    ebp,DWORD PTR [esi-0xc]
1002feaf:	mov    eax,DWORD PTR [esi-0x8]
1002feb2:	mov    BYTE PTR [esp+0x14],cl
1002feb6:	mov    ecx,0x1
1002febb:	sub    ecx,DWORD PTR [esi-0x4]
1002febe:	lea    edi,[ebp+0x1]
1002fec1:	sub    eax,edi
1002fec3:	or     eax,ecx
1002fec5:	jge    0x1002fed6
1002fec7:	mov    ecx,edi
1002fec9:	lea    eax,[esp+0x20]
1002fecd:	call   0x100346f0
1002fed2:	mov    esi,DWORD PTR [esp+0x20]
1002fed6:	test   edi,edi
1002fed8:	mov    dl,BYTE PTR [esp+0x14]
1002fedc:	mov    BYTE PTR [esi+ebp*1],dl
1002fedf:	jl     0x10030086
1002fee5:	cmp    edi,DWORD PTR [esi-0x8]
1002fee8:	jg     0x10030086
1002feee:	mov    BYTE PTR [esp+0x1b],0x0
1002fef3:	mov    DWORD PTR [esp+0x28],0x2
1002fefb:	jmp    0x1002ff59
1002fefd:	cmp    ebx,DWORD PTR [edi+0x14]
1002ff00:	jbe    0x1002ff07
1002ff02:	call   0x100433b0
1002ff07:	cmp    DWORD PTR [edi+0x18],0x10
1002ff0b:	jb     0x1002ff12
1002ff0d:	mov    eax,DWORD PTR [ebp+0x0]
1002ff10:	jmp    0x1002ff14
1002ff12:	mov    eax,ebp
1002ff14:	mov    al,BYTE PTR [eax+ebx*1]
1002ff17:	mov    ebp,DWORD PTR [esi-0xc]
1002ff1a:	mov    BYTE PTR [esp+0x14],al
1002ff1e:	mov    eax,DWORD PTR [esi-0x8]
1002ff21:	mov    ecx,0x1
1002ff26:	sub    ecx,DWORD PTR [esi-0x4]
1002ff29:	lea    edi,[ebp+0x1]
1002ff2c:	sub    eax,edi
1002ff2e:	or     eax,ecx
1002ff30:	jge    0x1002ff41
1002ff32:	mov    ecx,edi
1002ff34:	lea    eax,[esp+0x20]
1002ff38:	call   0x100346f0
1002ff3d:	mov    esi,DWORD PTR [esp+0x20]
1002ff41:	test   edi,edi
1002ff43:	mov    cl,BYTE PTR [esp+0x14]
1002ff47:	mov    BYTE PTR [esi+ebp*1],cl
1002ff4a:	jl     0x10030086
1002ff50:	cmp    edi,DWORD PTR [esi-0x8]
1002ff53:	jg     0x10030086
1002ff59:	mov    DWORD PTR [esi-0xc],edi
1002ff5c:	mov    BYTE PTR [edi+esi*1],0x0
1002ff60:	add    ebx,0x1
1002ff63:	mov    edx,DWORD PTR [esp+0x1c]
1002ff67:	mov    eax,DWORD PTR [edx+0x14]
1002ff6a:	cmp    ebx,eax
1002ff6c:	jb     0x1002fbf0
1002ff72:	mov    ebp,DWORD PTR [esp+0x2c]
1002ff76:	xor    ebx,ebx
1002ff78:	mov    eax,ds:0x10080a74
1002ff7d:	mov    edx,DWORD PTR [eax+0xc]
1002ff80:	mov    ecx,0x10080a74
1002ff85:	call   edx
1002ff87:	lea    edi,[eax+0x10]
1002ff8a:	mov    DWORD PTR [esp+0x28],edi
1002ff8e:	mov    BYTE PTR [esp+0xbc],0x1
1002ff96:	mov    eax,DWORD PTR [esp+0x1c]
1002ff9a:	mov    eax,DWORD PTR [eax+0x14]
1002ff9d:	lea    ecx,[eax+eax*1]
1002ffa0:	mov    DWORD PTR [esp+0x34],ecx
1002ffa4:	mov    eax,DWORD PTR [edi-0x8]
1002ffa7:	mov    edx,0x1
1002ffac:	sub    edx,DWORD PTR [edi-0x4]
1002ffaf:	sub    eax,ecx
1002ffb1:	or     eax,edx
1002ffb3:	jge    0x1002ffc2
1002ffb5:	lea    eax,[esp+0x28]
1002ffb9:	call   0x100346f0
1002ffbe:	mov    edi,DWORD PTR [esp+0x28]
1002ffc2:	cmp    DWORD PTR [esi-0x4],0x1
1002ffc6:	jle    0x1002ffda
1002ffc8:	mov    ecx,DWORD PTR [esi-0xc]
1002ffcb:	push   ecx
1002ffcc:	lea    edx,[esp+0x24]
1002ffd0:	push   edx
1002ffd1:	call   0x10034570
1002ffd6:	mov    esi,DWORD PTR [esp+0x20]
1002ffda:	push   0x2000000
1002ffdf:	lea    eax,[esp+0x38]
1002ffe3:	push   eax
1002ffe4:	push   edi
1002ffe5:	push   esi
1002ffe6:	call   DWORD PTR ds:0x10066378
1002ffec:	test   eax,eax
1002ffee:	jne    0x10030090
1002fff4:	mov    ecx,DWORD PTR [esp+0x1c]
1002fff8:	push   0xffffffff
1002fffa:	push   ebx
1002fffb:	push   ecx
1002fffc:	mov    DWORD PTR [ebp+0x18],0xf
10030003:	mov    DWORD PTR [ebp+0x14],ebx
10030006:	mov    ecx,ebp
10030008:	mov    BYTE PTR [ebp+0x4],0x0
1003000c:	call   0x10001241
10030011:	add    edi,0xfffffff0
10030014:	or     eax,0xffffffff
10030017:	lea    edx,[edi+0xc]
1003001a:	mov    BYTE PTR [esp+0xbc],0x0
10030022:	lock xadd DWORD PTR [edx],eax
10030026:	dec    eax
10030027:	test   eax,eax
10030029:	jg     0x10030035
1003002b:	mov    ecx,DWORD PTR [edi]
1003002d:	mov    edx,DWORD PTR [ecx]
1003002f:	mov    eax,DWORD PTR [edx+0x4]
10030032:	push   edi
10030033:	call   eax
10030035:	add    esi,0xfffffff0
10030038:	mov    DWORD PTR [esp+0xbc],0xffffffff
10030043:	lea    ecx,[esi+0xc]
10030046:	or     edx,0xffffffff
10030049:	lock xadd DWORD PTR [ecx],edx
1003004d:	dec    edx
1003004e:	test   edx,edx
10030050:	jg     0x1003005c
10030052:	mov    ecx,DWORD PTR [esi]
10030054:	mov    eax,DWORD PTR [ecx]
10030056:	mov    edx,DWORD PTR [eax+0x4]
10030059:	push   esi
1003005a:	call   edx
1003005c:	mov    eax,ebp
1003005e:	mov    ecx,DWORD PTR [esp+0xb4]
10030065:	mov    DWORD PTR fs:0x0,ecx
1003006c:	pop    ecx
1003006d:	pop    edi
1003006e:	pop    esi
1003006f:	pop    ebp
10030070:	pop    ebx
10030071:	mov    ecx,DWORD PTR [esp+0x9c]
10030078:	xor    ecx,esp
1003007a:	call   0x10042e97
1003007f:	add    esp,0xac
10030085:	ret    
10030086:	push   0x80070057
1003008b:	call   0x10001f45
10030090:	cmp    edi,ebx
10030092:	jne    0x10030098
10030094:	xor    eax,eax
10030096:	jmp    0x100300ad
10030098:	mov    eax,edi
1003009a:	lea    edx,[eax+0x1]
1003009d:	lea    ecx,[ecx+0x0]
100300a0:	mov    cl,BYTE PTR [eax]
100300a2:	add    eax,0x1
100300a5:	test   cl,cl
100300a7:	jne    0x100300a0
100300a9:	sub    eax,edx
100300ab:	js     0x10030086
100300ad:	cmp    eax,DWORD PTR [edi-0x8]
100300b0:	jg     0x10030086
100300b2:	mov    DWORD PTR [edi-0xc],eax
100300b5:	push   0x38
100300b7:	mov    BYTE PTR [eax+edi*1],0x0
100300bb:	lea    eax,[esp+0x40]
100300bf:	push   ebx
100300c0:	push   eax
100300c1:	call   0x10045c00
100300c6:	mov    eax,0x1
100300cb:	add    esp,0xc
100300ce:	mov    DWORD PTR [esp+0x38],0x3c
100300d6:	mov    DWORD PTR [esp+0x40],eax
100300da:	mov    DWORD PTR [esp+0x4c],eax
100300de:	mov    DWORD PTR [esp+0x58],eax
100300e2:	mov    DWORD PTR [esp+0x60],eax
100300e6:	mov    DWORD PTR [esp+0x68],eax
100300ea:	mov    DWORD PTR [esp+0x70],eax
100300ee:	cmp    DWORD PTR [edi-0x4],eax
100300f1:	jle    0x10030105
100300f3:	mov    ecx,DWORD PTR [edi-0xc]
100300f6:	push   ecx
100300f7:	lea    edx,[esp+0x2c]
100300fb:	push   edx
100300fc:	call   0x10034570
10030101:	mov    edi,DWORD PTR [esp+0x28]
10030105:	lea    eax,[esp+0x38]
10030109:	push   eax
1003010a:	push   ebx
1003010b:	push   ebx
1003010c:	push   edi
1003010d:	call   DWORD PTR ds:0x1006637c
10030113:	test   eax,eax
10030115:	je     0x1002fff4
1003011b:	mov    DWORD PTR [esp+0x8c],0xf
10030126:	mov    DWORD PTR [esp+0x88],ebx
1003012d:	mov    BYTE PTR [esp+0x78],0x0
10030132:	mov    BYTE PTR [esp+0xbc],0x2
1003013a:	mov    eax,DWORD PTR [esp+0x3c]
1003013e:	cmp    eax,ebx
10030140:	je     0x100303b4
10030146:	cmp    DWORD PTR [esp+0x48],ebx
1003014a:	je     0x100303b4
10030150:	cmp    DWORD PTR [esp+0x58],ebx
10030154:	jne    0x100303b4
1003015a:	cmp    DWORD PTR [esp+0x60],ebx
1003015e:	jne    0x100303b4
10030164:	mov    esi,DWORD PTR [esp+0x40]
10030168:	mov    ebx,eax
1003016a:	lea    edi,[esp+0x24]
1003016e:	call   0x10034320
10030173:	mov    BYTE PTR [esp+0xbc],0x3
1003017b:	call   0x10034440
10030180:	mov    eax,edi
10030182:	push   eax
10030183:	mov    ecx,0x1006d1a8
10030188:	call   0x100344c0
1003018d:	add    esp,0x4
10030190:	test   al,al
10030192:	je     0x10030201
10030194:	mov    ecx,edi
10030196:	push   ecx
10030197:	mov    ecx,0x10072fdc
1003019c:	call   0x100344c0
100301a1:	add    esp,0x4
100301a4:	test   al,al
100301a6:	je     0x10030201
100301a8:	mov    edx,DWORD PTR [esp+0x1c]
100301ac:	push   edx
100301ad:	mov    ecx,ebp
100301af:	call   0x100011a7
100301b4:	mov    eax,edi
100301b6:	call   0x10034380
100301bb:	cmp    DWORD PTR [esp+0x8c],0x10
100301c3:	jb     0x100301d2
100301c5:	mov    eax,DWORD PTR [esp+0x78]
100301c9:	push   eax
100301ca:	call   0x10042e92
100301cf:	add    esp,0x4
100301d2:	xor    eax,eax
100301d4:	mov    DWORD PTR [esp+0x88],eax
100301db:	mov    BYTE PTR [esp+0x78],al
100301df:	lea    eax,[esp+0x28]
100301e3:	mov    DWORD PTR [esp+0x8c],0xf
100301ee:	call   0x10034380
100301f3:	lea    eax,[esp+0x20]
100301f7:	call   0x10034380
100301fc:	jmp    0x1003005c
10030201:	mov    ecx,DWORD PTR [esp+0x24]
10030205:	push   ecx
10030206:	lea    edx,[esp+0x78]
1003020a:	push   edx
1003020b:	call   0x10004090
10030210:	push   0x10072fe4
10030215:	lea    eax,[esp+0x78]
10030219:	push   eax
1003021a:	call   0x10004090
1003021f:	mov    esi,DWORD PTR [esp+0x4c]
10030223:	mov    ebx,DWORD PTR [esp+0x48]
10030227:	lea    edi,[esp+0x2c]
1003022b:	call   0x10034320
10030230:	mov    BYTE PTR [esp+0xbc],0x4
10030238:	call   0x10034440
1003023d:	mov    ecx,DWORD PTR [esp+0x2c]
10030241:	push   ecx
10030242:	lea    edx,[esp+0x78]
10030246:	push   edx
10030247:	call   0x10004090
1003024c:	lea    eax,[esp+0x24]
10030250:	push   eax
10030251:	mov    ecx,0x1006d1a8
10030256:	call   0x10034490
1003025b:	add    esp,0x4
1003025e:	test   al,al
10030260:	je     0x1003026a
10030262:	cmp    WORD PTR [esp+0x50],0x50
10030268:	jne    0x10030289
1003026a:	lea    ecx,[esp+0x24]
1003026e:	push   ecx
1003026f:	mov    ecx,0x10072fdc
10030274:	call   0x10034490
10030279:	add    esp,0x4
1003027c:	test   al,al
1003027e:	je     0x100302bb
10030280:	cmp    WORD PTR [esp+0x50],0x1bb
10030287:	je     0x100302bb
10030289:	push   0x1006dc78
1003028e:	lea    edx,[esp+0x78]
10030292:	push   edx
10030293:	call   0x10004090
10030298:	movzx  ecx,WORD PTR [esp+0x50]
1003029d:	push   0xa
1003029f:	lea    eax,[esp+0x94]
100302a6:	push   eax
100302a7:	push   ecx
100302a8:	call   0x10045af6
100302ad:	add    esp,0xc
100302b0:	push   eax
100302b1:	lea    edx,[esp+0x78]
100302b5:	push   edx
100302b6:	call   0x10004090
100302bb:	lea    esi,[esp+0x1c]
100302bf:	call   0x10034300
100302c4:	mov    BYTE PTR [esp+0xbc],0x5
100302cc:	mov    ebx,DWORD PTR [esp+0x64]
100302d0:	test   ebx,ebx
100302d2:	je     0x10030301
100302d4:	mov    esi,DWORD PTR [esp+0x68]
100302d8:	lea    edi,[esp+0x30]
100302dc:	call   0x10034320
100302e1:	lea    ebx,[esp+0x1c]
100302e5:	mov    BYTE PTR [esp+0xbc],0x6
100302ed:	call   0x10034510
100302f2:	mov    eax,edi
100302f4:	mov    BYTE PTR [esp+0xbc],0x5
100302fc:	call   0x10034380
10030301:	mov    eax,DWORD PTR [esp+0x1c]
10030305:	cmp    DWORD PTR [eax-0xc],0x0
10030309:	jne    0x10030319
1003030b:	mov    edx,0x10072a10
10030310:	lea    ebx,[esp+0x1c]
10030314:	call   0x100343a0
10030319:	mov    ecx,DWORD PTR [esp+0x1c]
1003031d:	push   ecx
1003031e:	lea    edx,[esp+0x78]
10030322:	push   edx
10030323:	call   0x10004090
10030328:	mov    ebx,DWORD PTR [esp+0x6c]
1003032c:	test   ebx,ebx
1003032e:	je     0x10030361
10030330:	mov    esi,DWORD PTR [esp+0x70]
10030334:	lea    edi,[esp+0x30]
10030338:	call   0x10034320
1003033d:	mov    BYTE PTR [esp+0xbc],0x7
10030345:	mov    eax,DWORD PTR [eax]
10030347:	push   eax
10030348:	lea    eax,[esp+0x78]
1003034c:	push   eax
1003034d:	call   0x10004090
10030352:	mov    eax,edi
10030354:	mov    BYTE PTR [esp+0xbc],0x5
1003035c:	call   0x10034380
10030361:	lea    ecx,[esp+0x74]
10030365:	push   ecx
10030366:	mov    ecx,ebp
10030368:	call   0x100011a7
1003036d:	lea    eax,[esp+0x1c]
10030371:	call   0x10034380
10030376:	lea    eax,[esp+0x2c]
1003037a:	call   0x10034380
1003037f:	lea    eax,[esp+0x24]
10030383:	call   0x10034380
10030388:	cmp    DWORD PTR [esp+0x8c],0x10
10030390:	jb     0x1003039f
10030392:	mov    edx,DWORD PTR [esp+0x78]
10030396:	push   edx
10030397:	call   0x10042e92
1003039c:	add    esp,0x4
1003039f:	mov    DWORD PTR [esp+0x88],0x0
100303aa:	mov    BYTE PTR [esp+0x78],0x0
100303af:	jmp    0x100301df
100303b4:	mov    eax,DWORD PTR [esp+0x1c]
100303b8:	push   0xffffffff
100303ba:	push   ebx
100303bb:	mov    DWORD PTR [ebp+0x18],0xf
100303c2:	mov    DWORD PTR [ebp+0x14],ebx
100303c5:	push   eax
100303c6:	mov    ecx,ebp
100303c8:	mov    BYTE PTR [ebp+0x4],0x0
100303cc:	call   0x10001241
100303d1:	cmp    DWORD PTR [esp+0x8c],0x10
100303d9:	jb     0x100303e8
100303db:	mov    ecx,DWORD PTR [esp+0x78]
100303df:	push   ecx
100303e0:	call   0x10042e92
100303e5:	add    esp,0x4
100303e8:	mov    DWORD PTR [esp+0x8c],0xf
100303f3:	mov    DWORD PTR [esp+0x88],ebx
100303fa:	mov    BYTE PTR [esp+0x78],0x0
100303ff:	jmp    0x10030011
10030404:	int3   
10030405:	int3   
10030406:	int3   
10030407:	int3   
10030408:	int3   
10030409:	int3   
1003040a:	int3   
1003040b:	int3   
1003040c:	int3   
1003040d:	int3   
1003040e:	int3   
1003040f:	int3   
10030410:	push   0xffffffff
10030412:	push   0x1005ff09
10030417:	mov    eax,fs:0x0
1003041d:	push   eax
1003041e:	sub    esp,0xc
10030421:	push   ebx
10030422:	push   ebp
10030423:	push   edi
10030424:	mov    eax,ds:0x1007e030
10030429:	xor    eax,esp
1003042b:	push   eax
1003042c:	lea    eax,[esp+0x1c]
10030430:	mov    fs:0x0,eax
10030436:	mov    eax,DWORD PTR [esp+0x2c]
1003043a:	xor    ecx,ecx
1003043c:	mov    DWORD PTR [esp+0x14],ecx
10030440:	mov    DWORD PTR [esi+0x18],0xf
10030447:	mov    DWORD PTR [esi+0x14],ecx
1003044a:	mov    DWORD PTR [esp+0x18],esi
1003044e:	mov    BYTE PTR [esi+0x4],cl
10030451:	mov    DWORD PTR [esp+0x24],ecx
10030455:	cmp    DWORD PTR [eax+0x18],0x10
10030459:	mov    DWORD PTR [esp+0x14],0x1
10030461:	jb     0x10030468
10030463:	mov    ebp,DWORD PTR [eax+0x4]
10030466:	jmp    0x1003046b
10030468:	lea    ebp,[eax+0x4]
1003046b:	mov    al,BYTE PTR [ebp+0x0]
1003046e:	test   al,al
10030470:	je     0x10030684
10030476:	mov    cl,BYTE PTR [ebp+0x1]
10030479:	test   cl,cl
1003047b:	je     0x100305f4
10030481:	cmp    al,0x25
10030483:	jne    0x100305f4
10030489:	movzx  eax,cl
1003048c:	push   eax
1003048d:	call   0x1004f2dc
10030492:	add    esp,0x4
10030495:	test   eax,eax
10030497:	je     0x100305f4
1003049d:	movzx  ecx,BYTE PTR [ebp+0x2]
100304a1:	push   ecx
100304a2:	call   0x1004f2dc
100304a7:	add    esp,0x4
100304aa:	test   eax,eax
100304ac:	je     0x100305f4
100304b2:	mov    al,BYTE PTR [ebp+0x1]
100304b5:	cmp    al,0x30
100304b7:	jl     0x100304c5
100304b9:	cmp    al,0x39
100304bb:	jg     0x100304c5
100304bd:	movsx  edi,al
100304c0:	sub    edi,0x30
100304c3:	jmp    0x100304d6
100304c5:	movsx  edx,al
100304c8:	push   edx
100304c9:	call   0x10058d67
100304ce:	mov    edi,eax
100304d0:	add    esp,0x4
100304d3:	sub    edi,0x37
100304d6:	mov    al,BYTE PTR [ebp+0x2]
100304d9:	cmp    al,0x30
100304db:	jl     0x100304e9
100304dd:	cmp    al,0x39
100304df:	jg     0x100304e9
100304e1:	movsx  eax,al
100304e4:	sub    eax,0x30
100304e7:	jmp    0x100304f8
100304e9:	movsx  eax,al
100304ec:	push   eax
100304ed:	call   0x10058d67
100304f2:	add    esp,0x4
100304f5:	sub    eax,0x37
100304f8:	shl    edi,0x4
100304fb:	add    edi,eax
100304fd:	cmp    edi,0x7f
10030500:	jg     0x100305f4
10030506:	mov    al,BYTE PTR [ebp+0x1]
10030509:	cmp    al,0x30
1003050b:	jl     0x10030519
1003050d:	cmp    al,0x39
1003050f:	jg     0x10030519
10030511:	movsx  ebx,al
10030514:	sub    ebx,0x30
10030517:	jmp    0x1003052a
10030519:	movsx  ecx,al
1003051c:	push   ecx
1003051d:	call   0x10058d67
10030522:	mov    ebx,eax
10030524:	add    esp,0x4
10030527:	sub    ebx,0x37
1003052a:	mov    al,BYTE PTR [ebp+0x2]
1003052d:	cmp    al,0x30
1003052f:	jl     0x1003053d
10030531:	cmp    al,0x39
10030533:	jg     0x1003053d
10030535:	movsx  eax,al
10030538:	sub    eax,0x30
1003053b:	jmp    0x1003054c
1003053d:	movsx  edx,al
10030540:	push   edx
10030541:	call   0x10058d67
10030546:	add    esp,0x4
10030549:	sub    eax,0x37
1003054c:	mov    DWORD PTR [esp+0x10],eax
10030550:	or     eax,0xffffffff
10030553:	sub    eax,DWORD PTR [esi+0x14]
10030556:	cmp    eax,0x1
10030559:	ja     0x10030560
1003055b:	call   0x100571a0
10030560:	mov    edi,DWORD PTR [esi+0x14]
10030563:	add    edi,0x1
10030566:	cmp    edi,0xfffffffe
10030569:	jbe    0x10030570
1003056b:	call   0x100571a0
10030570:	mov    eax,DWORD PTR [esi+0x18]
10030573:	cmp    eax,edi
10030575:	jae    0x100305a0
10030577:	mov    ecx,DWORD PTR [esi+0x14]
1003057a:	push   ecx
1003057b:	push   edi
1003057c:	mov    ecx,esi
1003057e:	call   0x10001500
10030583:	test   edi,edi
10030585:	jbe    0x100305ec
10030587:	mov    ecx,DWORD PTR [esi+0x14]
1003058a:	shl    bl,0x4
1003058d:	add    bl,BYTE PTR [esp+0x10]
10030591:	mov    edx,0x10
10030596:	cmp    DWORD PTR [esi+0x18],edx
10030599:	jb     0x100305c8
1003059b:	mov    eax,DWORD PTR [esi+0x4]
1003059e:	jmp    0x100305cb
100305a0:	test   edi,edi
100305a2:	jne    0x10030585
100305a4:	cmp    eax,0x10
100305a7:	mov    DWORD PTR [esi+0x14],edi
100305aa:	jb     0x100305ba
100305ac:	mov    eax,DWORD PTR [esi+0x4]
100305af:	mov    BYTE PTR [eax],0x0
100305b2:	add    ebp,0x2
100305b5:	jmp    0x10030676
100305ba:	lea    eax,[esi+0x4]
100305bd:	mov    BYTE PTR [eax],0x0
100305c0:	add    ebp,0x2
100305c3:	jmp    0x10030676
100305c8:	lea    eax,[esi+0x4]
100305cb:	mov    BYTE PTR [eax+ecx*1],bl
100305ce:	cmp    DWORD PTR [esi+0x18],edx
100305d1:	mov    DWORD PTR [esi+0x14],edi
100305d4:	jb     0x100305e5
100305d6:	mov    eax,DWORD PTR [esi+0x4]
100305d9:	mov    BYTE PTR [eax+edi*1],0x0
100305dd:	add    ebp,0x2
100305e0:	jmp    0x10030676
100305e5:	lea    eax,[esi+0x4]
100305e8:	mov    BYTE PTR [eax+edi*1],0x0
100305ec:	add    ebp,0x2
100305ef:	jmp    0x10030676
100305f4:	mov    bl,BYTE PTR [ebp+0x0]
100305f7:	or     edx,0xffffffff
100305fa:	sub    edx,DWORD PTR [esi+0x14]
100305fd:	cmp    edx,0x1
10030600:	ja     0x10030607
10030602:	call   0x100571a0
10030607:	mov    edi,DWORD PTR [esi+0x14]
1003060a:	add    edi,0x1
1003060d:	cmp    edi,0xfffffffe
10030610:	jbe    0x10030617
10030612:	call   0x100571a0
10030617:	mov    eax,DWORD PTR [esi+0x18]
1003061a:	cmp    eax,edi
1003061c:	jae    0x10030640
1003061e:	mov    eax,DWORD PTR [esi+0x14]
10030621:	push   eax
10030622:	push   edi
10030623:	mov    ecx,esi
10030625:	call   0x10001500
1003062a:	test   edi,edi
1003062c:	jbe    0x10030676
1003062e:	mov    ecx,DWORD PTR [esi+0x14]
10030631:	mov    edx,0x10
10030636:	cmp    DWORD PTR [esi+0x18],edx
10030639:	jb     0x1003065c
1003063b:	mov    eax,DWORD PTR [esi+0x4]
1003063e:	jmp    0x1003065f
10030640:	test   edi,edi
10030642:	jne    0x1003062c
10030644:	cmp    eax,0x10
10030647:	mov    DWORD PTR [esi+0x14],edi
1003064a:	jb     0x10030654
1003064c:	mov    eax,DWORD PTR [esi+0x4]
1003064f:	mov    BYTE PTR [eax],0x0
10030652:	jmp    0x10030676
10030654:	lea    eax,[esi+0x4]
10030657:	mov    BYTE PTR [eax],0x0
1003065a:	jmp    0x10030676
1003065c:	lea    eax,[esi+0x4]
1003065f:	mov    BYTE PTR [eax+ecx*1],bl
10030662:	cmp    DWORD PTR [esi+0x18],edx
10030665:	mov    DWORD PTR [esi+0x14],edi
10030668:	jb     0x1003066f
1003066a:	mov    eax,DWORD PTR [esi+0x4]
1003066d:	jmp    0x10030672
1003066f:	lea    eax,[esi+0x4]
10030672:	mov    BYTE PTR [eax+edi*1],0x0
10030676:	mov    al,BYTE PTR [ebp+0x1]
10030679:	add    ebp,0x1
1003067c:	test   al,al
1003067e:	jne    0x10030476
10030684:	mov    eax,esi
10030686:	mov    ecx,DWORD PTR [esp+0x1c]
1003068a:	mov    DWORD PTR fs:0x0,ecx
10030691:	pop    ecx
10030692:	pop    edi
10030693:	pop    ebp
10030694:	pop    ebx
10030695:	add    esp,0x18
10030698:	ret    
10030699:	int3   
1003069a:	int3   
1003069b:	int3   
1003069c:	int3   
1003069d:	int3   
1003069e:	int3   
1003069f:	int3   
100306a0:	sub    esp,0x14
100306a3:	mov    eax,ds:0x1007e030
100306a8:	xor    eax,esp
100306aa:	mov    DWORD PTR [esp+0x10],eax
100306ae:	movzx  eax,BYTE PTR [esp+0x18]
100306b3:	push   eax
100306b4:	push   0x462a28e
100306b9:	push   0x10072fe8
100306be:	mov    DWORD PTR [esp+0xc],0x0
100306c6:	call   0x10004246
100306cb:	push   eax
100306cc:	push   0x6
100306ce:	push   0x10073024
100306d3:	call   0x10004258
100306d8:	add    esp,0x14
100306db:	push   eax
100306dc:	lea    ecx,[esp+0xc]
100306e0:	push   ecx
100306e1:	call   0x1005847f
100306e6:	lea    edx,[esp+0x10]
100306ea:	mov    DWORD PTR [esi+0x18],0xf
100306f1:	mov    DWORD PTR [esi+0x14],0x0
100306f8:	push   edx
100306f9:	mov    BYTE PTR [esi+0x4],0x0
100306fd:	call   0x10043010
10030702:	add    esp,0x10
10030705:	push   eax
10030706:	lea    eax,[esp+0x8]
1003070a:	push   eax
1003070b:	mov    ecx,esi
1003070d:	call   0x1000133b
10030712:	mov    ecx,DWORD PTR [esp+0x10]
10030716:	xor    ecx,esp
10030718:	mov    eax,esi
1003071a:	call   0x10042e97
1003071f:	add    esp,0x14
10030722:	ret    
10030723:	int3   
10030724:	int3   
10030725:	int3   
10030726:	int3   
10030727:	int3   
10030728:	int3   
10030729:	int3   
1003072a:	int3   
1003072b:	int3   
1003072c:	int3   
1003072d:	int3   
1003072e:	int3   
1003072f:	int3   
10030730:	push   0xffffffff
10030732:	push   0x100626f9
10030737:	mov    eax,fs:0x0
1003073d:	push   eax
1003073e:	sub    esp,0x28
10030741:	push   ebx
10030742:	push   ebp
10030743:	push   esi
10030744:	mov    eax,ds:0x1007e030
10030749:	xor    eax,esp
1003074b:	push   eax
1003074c:	lea    eax,[esp+0x38]
10030750:	mov    fs:0x0,eax
10030756:	xor    eax,eax
10030758:	mov    DWORD PTR [esp+0x30],eax
1003075c:	mov    DWORD PTR [edi+0x18],0xf
10030763:	mov    DWORD PTR [edi+0x14],eax
10030766:	mov    DWORD PTR [esp+0x34],edi
1003076a:	mov    esi,ecx
1003076c:	mov    BYTE PTR [edi+0x4],al
1003076f:	mov    DWORD PTR [esp+0x40],eax
10030773:	mov    eax,DWORD PTR [esi]
10030775:	mov    ebp,0x10
1003077a:	mov    ecx,0x1
1003077f:	sub    eax,ebp
10030781:	cmp    DWORD PTR [eax+0xc],ecx
10030784:	mov    DWORD PTR [esp+0x30],ecx
10030788:	jle    0x10030794
1003078a:	mov    eax,DWORD PTR [eax+0x4]
1003078d:	push   eax
1003078e:	push   esi
1003078f:	call   0x100022ab
10030794:	mov    ebx,DWORD PTR [esi]
10030796:	movzx  eax,WORD PTR [ebx]
10030799:	test   ax,ax
1003079c:	mov    DWORD PTR [esp+0x10],ebx
100307a0:	je     0x10030af2
100307a6:	jmp    0x100307b4
100307a8:	jmp    0x100307b0
100307aa:	lea    ebx,[ebx+0x0]
100307b0:	mov    ebx,DWORD PTR [esp+0x10]
100307b4:	cmp    ax,0x41
100307b8:	jb     0x100307c4
100307ba:	cmp    ax,0x5a
100307be:	jbe    0x10030a59
100307c4:	cmp    ax,0x61
100307c8:	jb     0x100307d4
100307ca:	cmp    ax,0x7a
100307ce:	jbe    0x10030a59
100307d4:	cmp    ax,0x30
100307d8:	jb     0x100307e4
100307da:	cmp    ax,0x39
100307de:	jbe    0x10030a59
100307e4:	cmp    ax,0x20
100307e8:	jne    0x10030856
100307ea:	or     ecx,0xffffffff
100307ed:	sub    ecx,DWORD PTR [edi+0x14]
100307f0:	cmp    ecx,0x1
100307f3:	ja     0x100307fa
100307f5:	call   0x100571a0
100307fa:	mov    esi,DWORD PTR [edi+0x14]
100307fd:	add    esi,0x1
10030800:	cmp    esi,0xfffffffe
10030803:	jbe    0x1003080a
10030805:	call   0x100571a0
1003080a:	mov    eax,DWORD PTR [edi+0x18]
1003080d:	cmp    eax,esi
1003080f:	jae    0x10030834
10030811:	mov    edx,DWORD PTR [edi+0x14]
10030814:	push   edx
10030815:	push   esi
10030816:	mov    ecx,edi
10030818:	call   0x10001500
1003081d:	test   esi,esi
1003081f:	jbe    0x10030adb
10030825:	cmp    DWORD PTR [edi+0x18],ebp
10030828:	mov    ecx,DWORD PTR [edi+0x14]
1003082b:	lea    edx,[edi+0x4]
1003082e:	jb     0x1003083d
10030830:	mov    eax,DWORD PTR [edx]
10030832:	jmp    0x1003083f
10030834:	test   esi,esi
10030836:	jne    0x1003081f
10030838:	jmp    0x10030aa9
1003083d:	mov    eax,edx
1003083f:	mov    BYTE PTR [eax+ecx*1],0x2b
10030843:	cmp    DWORD PTR [edi+0x18],ebp
10030846:	mov    DWORD PTR [edi+0x14],esi
10030849:	jb     0x10030ad5
1003084f:	mov    eax,DWORD PTR [edx]
10030851:	jmp    0x10030ad7
10030856:	cmp    ax,0x2d
1003085a:	je     0x10030a59
10030860:	cmp    ax,0x5f
10030864:	je     0x10030a59
1003086a:	cmp    ax,0x2e
1003086e:	je     0x10030a59
10030874:	cmp    ax,0x21
10030878:	je     0x10030a59
1003087e:	cmp    ax,0x7e
10030882:	je     0x10030a59
10030888:	cmp    ax,0x2a
1003088c:	je     0x10030a59
10030892:	cmp    ax,0x27
10030896:	je     0x10030a59
1003089c:	cmp    ax,0x28
100308a0:	je     0x10030a59
100308a6:	cmp    ax,0x29
100308aa:	je     0x10030a59
100308b0:	cmp    ax,0x7f
100308b4:	lea    esi,[esp+0x14]
100308b8:	ja     0x100308fa
100308ba:	movzx  eax,BYTE PTR [ebx]
100308bd:	push   eax
100308be:	call   0x100306a0
100308c3:	add    esp,0x4
100308c6:	push   0xffffffff
100308c8:	push   0x0
100308ca:	mov    esi,edi
100308cc:	mov    DWORD PTR [esp+0x48],0x1
100308d4:	call   0x10004c80
100308d9:	mov    BYTE PTR [esp+0x40],0x0
100308de:	cmp    DWORD PTR [esp+0x2c],ebp
100308e2:	jb     0x10030adb
100308e8:	mov    ecx,DWORD PTR [esp+0x18]
100308ec:	push   ecx
100308ed:	call   0x10042e92
100308f2:	add    esp,0x4
100308f5:	jmp    0x10030adb
100308fa:	cmp    ax,0x7ff
100308fe:	ja     0x1003098a
10030904:	shr    eax,0x6
10030907:	or     eax,0xffffffc0
1003090a:	push   eax
1003090b:	call   0x100306a0
10030910:	add    esp,0x4
10030913:	push   0xffffffff
10030915:	push   0x0
10030917:	mov    esi,edi
10030919:	mov    DWORD PTR [esp+0x48],0x2
10030921:	call   0x10004c80
10030926:	mov    BYTE PTR [esp+0x40],0x0
1003092b:	cmp    DWORD PTR [esp+0x2c],ebp
1003092f:	jb     0x1003093e
10030931:	mov    edx,DWORD PTR [esp+0x18]
10030935:	push   edx
10030936:	call   0x10042e92
1003093b:	add    esp,0x4
1003093e:	movzx  eax,BYTE PTR [ebx]
10030941:	and    eax,0xffffff3f
10030946:	or     eax,0xffffff80
10030949:	push   eax
1003094a:	lea    esi,[esp+0x18]
1003094e:	call   0x100306a0
10030953:	add    esp,0x4
10030956:	push   0xffffffff
10030958:	push   0x0
1003095a:	mov    esi,edi
1003095c:	mov    DWORD PTR [esp+0x48],0x3
10030964:	call   0x10004c80
10030969:	mov    BYTE PTR [esp+0x40],0x0
1003096e:	cmp    DWORD PTR [esp+0x2c],ebp
10030972:	jb     0x10030adb
10030978:	mov    ecx,DWORD PTR [esp+0x18]
1003097c:	push   ecx
1003097d:	call   0x10042e92
10030982:	add    esp,0x4
10030985:	jmp    0x10030adb
1003098a:	shr    ax,0xc
1003098e:	or     eax,0xffffffe0
10030991:	push   eax
10030992:	call   0x100306a0
10030997:	add    esp,0x4
1003099a:	push   0xffffffff
1003099c:	push   0x0
1003099e:	mov    esi,edi
100309a0:	mov    DWORD PTR [esp+0x48],0x4
100309a8:	call   0x10004c80
100309ad:	mov    BYTE PTR [esp+0x40],0x0
100309b2:	cmp    DWORD PTR [esp+0x2c],ebp
100309b6:	jb     0x100309c5
100309b8:	mov    edx,DWORD PTR [esp+0x18]
100309bc:	push   edx
100309bd:	call   0x10042e92
100309c2:	add    esp,0x4
100309c5:	movzx  eax,WORD PTR [ebx]
100309c8:	shr    ax,0x6
100309cc:	lea    esi,[esp+0x14]
100309d0:	and    eax,0xffffff3f
100309d5:	or     eax,0xffffff80
100309d8:	push   eax
100309d9:	call   0x100306a0
100309de:	add    esp,0x4
100309e1:	push   0xffffffff
100309e3:	push   0x0
100309e5:	mov    esi,edi
100309e7:	mov    DWORD PTR [esp+0x48],0x5
100309ef:	call   0x10004c80
100309f4:	mov    BYTE PTR [esp+0x40],0x0
100309f9:	cmp    DWORD PTR [esp+0x2c],ebp
100309fd:	jb     0x10030a0c
100309ff:	mov    ecx,DWORD PTR [esp+0x18]
10030a03:	push   ecx
10030a04:	call   0x10042e92
10030a09:	add    esp,0x4
10030a0c:	movzx  edx,BYTE PTR [ebx]
10030a0f:	and    edx,0xffffff3f
10030a15:	or     edx,0xffffff80
10030a18:	push   edx
10030a19:	lea    esi,[esp+0x18]
10030a1d:	call   0x100306a0
10030a22:	add    esp,0x4
10030a25:	push   0xffffffff
10030a27:	push   0x0
10030a29:	mov    esi,edi
10030a2b:	mov    DWORD PTR [esp+0x48],0x6
10030a33:	call   0x10004c80
10030a38:	mov    BYTE PTR [esp+0x40],0x0
10030a3d:	cmp    DWORD PTR [esp+0x2c],ebp
10030a41:	jb     0x10030adb
10030a47:	mov    eax,DWORD PTR [esp+0x18]
10030a4b:	push   eax
10030a4c:	call   0x10042e92
10030a51:	add    esp,0x4
10030a54:	jmp    0x10030adb
10030a59:	mov    ecx,DWORD PTR [esp+0x10]
10030a5d:	mov    bl,BYTE PTR [ecx]
10030a5f:	or     edx,0xffffffff
10030a62:	sub    edx,DWORD PTR [edi+0x14]
10030a65:	cmp    edx,0x1
10030a68:	ja     0x10030a6f
10030a6a:	call   0x100571a0
10030a6f:	mov    esi,DWORD PTR [edi+0x14]
10030a72:	add    esi,0x1
10030a75:	cmp    esi,0xfffffffe
10030a78:	jbe    0x10030a7f
10030a7a:	call   0x100571a0
10030a7f:	mov    eax,DWORD PTR [edi+0x18]
10030a82:	cmp    eax,esi
10030a84:	jae    0x10030aa5
10030a86:	mov    eax,DWORD PTR [edi+0x14]
10030a89:	push   eax
10030a8a:	push   esi
10030a8b:	mov    ecx,edi
10030a8d:	call   0x10001500
10030a92:	test   esi,esi
10030a94:	jbe    0x10030adb
10030a96:	cmp    DWORD PTR [edi+0x18],ebp
10030a99:	mov    ecx,DWORD PTR [edi+0x14]
10030a9c:	lea    edx,[edi+0x4]
10030a9f:	jb     0x10030ac4
10030aa1:	mov    eax,DWORD PTR [edx]
10030aa3:	jmp    0x10030ac6
10030aa5:	test   esi,esi
10030aa7:	jne    0x10030a94
10030aa9:	cmp    eax,ebp
10030aab:	mov    DWORD PTR [edi+0x14],0x0
10030ab2:	jb     0x10030abc
10030ab4:	mov    eax,DWORD PTR [edi+0x4]
10030ab7:	mov    BYTE PTR [eax],0x0
10030aba:	jmp    0x10030adb
10030abc:	lea    eax,[edi+0x4]
10030abf:	mov    BYTE PTR [eax],0x0
10030ac2:	jmp    0x10030adb
10030ac4:	mov    eax,edx
10030ac6:	mov    BYTE PTR [eax+ecx*1],bl
10030ac9:	cmp    DWORD PTR [edi+0x18],ebp
10030acc:	mov    DWORD PTR [edi+0x14],esi
10030acf:	jb     0x10030ad5
10030ad1:	mov    eax,DWORD PTR [edx]
10030ad3:	jmp    0x10030ad7
10030ad5:	mov    eax,edx
10030ad7:	mov    BYTE PTR [eax+esi*1],0x0
10030adb:	mov    eax,DWORD PTR [esp+0x10]
10030adf:	add    eax,0x2
10030ae2:	mov    DWORD PTR [esp+0x10],eax
10030ae6:	movzx  eax,WORD PTR [eax]
10030ae9:	test   ax,ax
10030aec:	jne    0x100307b0
10030af2:	mov    eax,edi
10030af4:	mov    ecx,DWORD PTR [esp+0x38]
10030af8:	mov    DWORD PTR fs:0x0,ecx
10030aff:	pop    ecx
10030b00:	pop    esi
10030b01:	pop    ebp
10030b02:	pop    ebx
10030b03:	add    esp,0x34
10030b06:	ret    
10030b07:	int3   
10030b08:	int3   
10030b09:	int3   
10030b0a:	int3   
10030b0b:	int3   
10030b0c:	int3   
10030b0d:	int3   
10030b0e:	int3   
10030b0f:	int3   
10030b10:	push   0xffffffff
10030b12:	push   0x1005fec8
10030b17:	mov    eax,fs:0x0
10030b1d:	push   eax
10030b1e:	sub    esp,0x40
10030b21:	push   ebx
10030b22:	push   ebp
10030b23:	push   esi
10030b24:	push   edi
10030b25:	mov    eax,ds:0x1007e030
10030b2a:	xor    eax,esp
10030b2c:	push   eax
10030b2d:	lea    eax,[esp+0x54]
10030b31:	mov    fs:0x0,eax
10030b37:	mov    esi,ecx
10030b39:	mov    ebp,DWORD PTR [esp+0x64]
10030b3d:	xor    ebx,ebx
10030b3f:	push   0x38
10030b41:	lea    eax,[esp+0x20]
10030b45:	push   ebx
10030b46:	push   eax
10030b47:	mov    DWORD PTR [esp+0x20],ebx
10030b4b:	call   0x10045c00
10030b50:	add    esp,0xc
10030b53:	cmp    DWORD PTR [esi+0x18],0x10
10030b57:	mov    DWORD PTR [esp+0x18],0x3c
10030b5f:	mov    DWORD PTR [esp+0x2c],0x1
10030b67:	jb     0x10030b6e
10030b69:	mov    esi,DWORD PTR [esi+0x4]
10030b6c:	jmp    0x10030b71
10030b6e:	add    esi,0x4
10030b71:	lea    ecx,[esp+0x18]
10030b75:	push   ecx
10030b76:	push   ebx
10030b77:	push   ebx
10030b78:	push   esi
10030b79:	call   DWORD PTR ds:0x1006637c
10030b7f:	test   eax,eax
10030b81:	jne    0x10030bac
10030b83:	mov    DWORD PTR [ebp+0x18],0xf
10030b8a:	mov    DWORD PTR [ebp+0x14],ebx
10030b8d:	push   0x1006cd08
10030b92:	mov    BYTE PTR [ebp+0x4],bl
10030b95:	call   0x10043010
10030b9a:	add    esp,0x4
10030b9d:	push   eax
10030b9e:	push   0x1006cd08
10030ba3:	mov    ecx,ebp
10030ba5:	call   0x1000133b
10030baa:	jmp    0x10030c20
10030bac:	mov    esi,DWORD PTR [esp+0x2c]
10030bb0:	mov    ebx,DWORD PTR [esp+0x28]
10030bb4:	lea    edi,[esp+0x14]
10030bb8:	call   0x10034320
10030bbd:	xor    ebx,ebx
10030bbf:	mov    DWORD PTR [esp+0x5c],ebx
10030bc3:	mov    esi,DWORD PTR [esp+0x14]
10030bc7:	cmp    DWORD PTR [esi-0x4],0x1
10030bcb:	jle    0x10030bdd
10030bcd:	mov    edx,DWORD PTR [esi-0xc]
10030bd0:	push   edx
10030bd1:	mov    eax,edi
10030bd3:	push   eax
10030bd4:	call   0x10034570
10030bd9:	mov    esi,DWORD PTR [esp+0x14]
10030bdd:	mov    DWORD PTR [ebp+0x18],0xf
10030be4:	mov    DWORD PTR [ebp+0x14],ebx
10030be7:	push   esi
10030be8:	mov    BYTE PTR [ebp+0x4],bl
10030beb:	call   0x10043010
10030bf0:	add    esp,0x4
10030bf3:	push   eax
10030bf4:	push   esi
10030bf5:	mov    ecx,ebp
10030bf7:	call   0x1000133b
10030bfc:	lea    eax,[esi-0x10]
10030bff:	mov    DWORD PTR [esp+0x5c],0xffffffff
10030c07:	lea    ecx,[eax+0xc]
10030c0a:	or     edx,0xffffffff
10030c0d:	lock xadd DWORD PTR [ecx],edx
10030c11:	dec    edx
10030c12:	test   edx,edx
10030c14:	jg     0x10030c20
10030c16:	mov    ecx,DWORD PTR [eax]
10030c18:	mov    edx,DWORD PTR [ecx]
10030c1a:	push   eax
10030c1b:	mov    eax,DWORD PTR [edx+0x4]
10030c1e:	call   eax
10030c20:	mov    eax,ebp
10030c22:	mov    ecx,DWORD PTR [esp+0x54]
10030c26:	mov    DWORD PTR fs:0x0,ecx
10030c2d:	pop    ecx
10030c2e:	pop    edi
10030c2f:	pop    esi
10030c30:	pop    ebp
10030c31:	pop    ebx
10030c32:	add    esp,0x4c
10030c35:	ret    
10030c36:	int3   
10030c37:	int3   
10030c38:	int3   
10030c39:	int3   
10030c3a:	int3   
10030c3b:	int3   
10030c3c:	int3   
10030c3d:	int3   
10030c3e:	int3   
10030c3f:	int3   
10030c40:	push   ebp
10030c41:	lea    ebp,[esp-0x78]
10030c45:	sub    esp,0xd0
10030c4b:	mov    eax,ds:0x1007e030
10030c50:	xor    eax,ebp
10030c52:	mov    DWORD PTR [ebp+0x74],eax
10030c55:	push   esi
10030c56:	push   edi
10030c57:	push   0x64
10030c59:	lea    eax,[ebp-0x54]
10030c5c:	push   eax
10030c5d:	xor    esi,esi
10030c5f:	push   0x59
10030c61:	mov    DWORD PTR [ebp-0x58],esi
10030c64:	call   DWORD PTR ds:0x10066238
10030c6a:	push   eax
10030c6b:	call   DWORD PTR ds:0x10066240
10030c71:	call   DWORD PTR ds:0x1007efec
10030c77:	lea    ecx,[ebp-0x54]
10030c7a:	push   ecx
10030c7b:	mov    DWORD PTR [ebp-0x58],eax
10030c7e:	call   DWORD PTR ds:0x100660c4
10030c84:	add    eax,0x1
10030c87:	cmp    eax,0x3fffffff
10030c8c:	jg     0x10030cc5
10030c8e:	lea    esi,[eax+eax*1]
10030c91:	mov    eax,esi
10030c93:	call   0x1004b6f0
10030c98:	mov    edi,esp
10030c9a:	test   edi,edi
10030c9c:	je     0x10030cc3
10030c9e:	mov    eax,DWORD PTR [ebp-0x58]
10030ca1:	push   0x0
10030ca3:	push   0x0
10030ca5:	push   esi
10030ca6:	push   edi
10030ca7:	push   0xffffffff
10030ca9:	lea    edx,[ebp-0x54]
10030cac:	push   edx
10030cad:	push   0x0
10030caf:	push   eax
10030cb0:	mov    BYTE PTR [edi],0x0
10030cb3:	call   DWORD PTR ds:0x100660b8
10030cb9:	mov    esi,eax
10030cbb:	neg    esi
10030cbd:	sbb    esi,esi
10030cbf:	and    esi,edi
10030cc1:	jmp    0x10030cc5
10030cc3:	xor    esi,esi
10030cc5:	mov    DWORD PTR [ebx+0x18],0xf
10030ccc:	mov    DWORD PTR [ebx+0x14],0x0
10030cd3:	push   esi
10030cd4:	mov    BYTE PTR [ebx+0x4],0x0
10030cd8:	call   0x10043010
10030cdd:	add    esp,0x4
10030ce0:	push   eax
10030ce1:	push   esi
10030ce2:	mov    ecx,ebx
10030ce4:	call   0x1000133b
10030ce9:	mov    eax,ebx
10030ceb:	lea    esp,[ebp-0x60]
10030cee:	pop    edi
10030cef:	pop    esi
10030cf0:	mov    ecx,DWORD PTR [ebp+0x74]
10030cf3:	xor    ecx,ebp
10030cf5:	call   0x10042e97
10030cfa:	add    ebp,0x78
10030cfd:	mov    esp,ebp
10030cff:	pop    ebp
10030d00:	ret    
10030d01:	int3   
10030d02:	int3   
10030d03:	int3   
10030d04:	int3   
10030d05:	int3   
10030d06:	int3   
10030d07:	int3   
10030d08:	int3   
10030d09:	int3   
10030d0a:	int3   
10030d0b:	int3   
10030d0c:	int3   
10030d0d:	int3   
10030d0e:	int3   
10030d0f:	int3   
10030d10:	sub    esp,0x74
10030d13:	mov    eax,ds:0x1007e030
10030d18:	xor    eax,esp
10030d1a:	mov    DWORD PTR [esp+0x70],eax
10030d1e:	mov    eax,DWORD PTR [esp+0x78]
10030d22:	movzx  ecx,BYTE PTR [eax+0xf]
10030d26:	movzx  edx,BYTE PTR [eax+0xe]
10030d2a:	push   ecx
10030d2b:	movzx  ecx,BYTE PTR [eax+0xd]
10030d2f:	push   edx
10030d30:	movzx  edx,BYTE PTR [eax+0xc]
10030d34:	push   ecx
10030d35:	movzx  ecx,BYTE PTR [eax+0xb]
10030d39:	push   edx
10030d3a:	movzx  edx,BYTE PTR [eax+0xa]
10030d3e:	push   ecx
10030d3f:	movzx  ecx,BYTE PTR [eax+0x9]
10030d43:	push   edx
10030d44:	movzx  edx,BYTE PTR [eax+0x8]
10030d48:	push   ecx
10030d49:	movzx  ecx,WORD PTR [eax+0x6]
10030d4d:	push   edx
10030d4e:	movzx  edx,WORD PTR [eax+0x4]
10030d52:	mov    eax,DWORD PTR [eax]
10030d54:	push   ecx
10030d55:	push   edx
10030d56:	push   eax
10030d57:	push   0x75e24a0a
10030d5c:	push   0x1007302c
10030d61:	mov    DWORD PTR [esp+0x34],0x0
10030d69:	call   0x10004246
10030d6e:	push   eax
10030d6f:	push   0x32
10030d71:	push   0x10073054
10030d76:	call   0x10004258
10030d7b:	add    esp,0x14
10030d7e:	push   eax
10030d7f:	lea    ecx,[esp+0x34]
10030d83:	push   ecx
10030d84:	call   0x1005847f
10030d89:	lea    edx,[esp+0x38]
10030d8d:	mov    DWORD PTR [esi+0x18],0xf
10030d94:	mov    DWORD PTR [esi+0x14],0x0
10030d9b:	push   edx
10030d9c:	mov    BYTE PTR [esi+0x4],0x0
10030da0:	call   0x10043010
10030da5:	add    esp,0x38
10030da8:	push   eax
10030da9:	lea    eax,[esp+0x8]
10030dad:	push   eax
10030dae:	mov    ecx,esi
10030db0:	call   0x1000133b
10030db5:	mov    ecx,DWORD PTR [esp+0x70]
10030db9:	xor    ecx,esp
10030dbb:	mov    eax,esi
10030dbd:	call   0x10042e97
10030dc2:	add    esp,0x74
10030dc5:	ret    
10030dc6:	int3   
10030dc7:	int3   
10030dc8:	int3   
10030dc9:	int3   
10030dca:	int3   
10030dcb:	int3   
10030dcc:	int3   
10030dcd:	int3   
10030dce:	int3   
10030dcf:	int3   
10030dd0:	push   esi
10030dd1:	push   edi
10030dd2:	push   0x10080d4c
10030dd7:	call   DWORD PTR ds:0x100660a4
10030ddd:	mov    eax,DWORD PTR [esp+0xc]
10030de1:	mov    esi,DWORD PTR [eax]
10030de3:	mov    edi,DWORD PTR [eax+0x4]
10030de6:	push   eax
10030de7:	call   0x10042e92
10030dec:	mov    eax,ds:0x10080fa0
10030df1:	add    esp,0x4
10030df4:	push   edi
10030df5:	push   eax
10030df6:	call   DWORD PTR ds:0x10066084
10030dfc:	push   esi
10030dfd:	call   DWORD PTR ds:0x10066380
10030e03:	push   0x10080d4c
10030e08:	call   DWORD PTR ds:0x100660ac
10030e0e:	pop    edi
10030e0f:	xor    eax,eax
10030e11:	pop    esi
10030e12:	ret    0x4
10030e15:	int3   
10030e16:	int3   
10030e17:	int3   
10030e18:	int3   
10030e19:	int3   
10030e1a:	int3   
10030e1b:	int3   
10030e1c:	int3   
10030e1d:	int3   
10030e1e:	int3   
10030e1f:	int3   
10030e20:	push   0xffffffff
10030e22:	push   0x10063f08
10030e27:	mov    eax,fs:0x0
10030e2d:	push   eax
10030e2e:	sub    esp,0x20
10030e31:	push   ebx
10030e32:	mov    eax,ds:0x1007e030
10030e37:	xor    eax,esp
10030e39:	push   eax
10030e3a:	lea    eax,[esp+0x28]
10030e3e:	mov    fs:0x0,eax
10030e44:	xor    ebx,ebx
10030e46:	mov    DWORD PTR [esp+0x8],ebx
10030e4a:	push   0x1006cd08
10030e4f:	mov    DWORD PTR [esp+0x28],0xf
10030e57:	mov    DWORD PTR [esp+0x24],ebx
10030e5b:	mov    BYTE PTR [esp+0x14],bl
10030e5f:	call   0x10043010
10030e64:	add    esp,0x4
10030e67:	push   eax
10030e68:	push   0x1006cd08
10030e6d:	lea    ecx,[esp+0x14]
10030e71:	call   0x1000133b
10030e76:	mov    eax,DWORD PTR [esp+0x44]
10030e7a:	mov    ecx,DWORD PTR [esp+0x40]
10030e7e:	push   eax
10030e7f:	mov    eax,DWORD PTR [esp+0x3c]
10030e83:	push   ecx
10030e84:	lea    edx,[esp+0x14]
10030e88:	push   edx
10030e89:	mov    edx,DWORD PTR [esp+0x48]
10030e8d:	push   eax
10030e8e:	lea    ecx,[esp+0x18]
10030e92:	push   ecx
10030e93:	mov    DWORD PTR [esp+0x44],ebx
10030e97:	call   0x10030ee0
10030e9c:	mov    ecx,DWORD PTR [eax]
10030e9e:	mov    DWORD PTR [eax],ebx
10030ea0:	mov    edx,DWORD PTR [esp+0x1c]
10030ea4:	push   edx
10030ea5:	mov    DWORD PTR [esi],ecx
10030ea7:	call   0x10042e92
10030eac:	add    esp,0x18
10030eaf:	cmp    DWORD PTR [esp+0x24],0x10
10030eb4:	jb     0x10030ec3
10030eb6:	mov    eax,DWORD PTR [esp+0x10]
10030eba:	push   eax
10030ebb:	call   0x10042e92
10030ec0:	add    esp,0x4
10030ec3:	mov    eax,esi
10030ec5:	mov    ecx,DWORD PTR [esp+0x28]
10030ec9:	mov    DWORD PTR fs:0x0,ecx
10030ed0:	pop    ecx
10030ed1:	pop    ebx
10030ed2:	add    esp,0x2c
10030ed5:	ret    
10030ed6:	int3   
10030ed7:	int3   
10030ed8:	int3   
10030ed9:	int3   
10030eda:	int3   
10030edb:	int3   
10030edc:	int3   
10030edd:	int3   
10030ede:	int3   
10030edf:	int3   
10030ee0:	push   0xffffffff
10030ee2:	push   0x10063ee0
10030ee7:	mov    eax,fs:0x0
10030eed:	push   eax
10030eee:	sub    esp,0x18
10030ef1:	push   ebx
10030ef2:	push   ebp
10030ef3:	push   esi
10030ef4:	push   edi
10030ef5:	mov    eax,ds:0x1007e030
10030efa:	xor    eax,esp
10030efc:	push   eax
10030efd:	lea    eax,[esp+0x2c]
10030f01:	mov    fs:0x0,eax
10030f07:	mov    ebp,DWORD PTR [esp+0x3c]
10030f0b:	xor    ebx,ebx
10030f0d:	mov    DWORD PTR [esp+0x20],ebx
10030f11:	mov    DWORD PTR [esp+0x24],ebx
10030f15:	mov    eax,DWORD PTR [esp+0x4c]
10030f19:	push   eax
10030f1a:	lea    ecx,[esp+0x1c]
10030f1e:	push   ecx
10030f1f:	mov    ecx,DWORD PTR [esp+0x48]
10030f23:	push   edx
10030f24:	mov    edx,DWORD PTR [esp+0x50]
10030f28:	lea    eax,[esp+0x28]
10030f2c:	mov    DWORD PTR [esp+0x40],ebx
10030f30:	push   eax
10030f31:	mov    DWORD PTR [esp+0x28],ebx
10030f35:	call   0x10031c20
10030f3a:	mov    ecx,DWORD PTR [eax]
10030f3c:	mov    esi,ecx
10030f3e:	mov    DWORD PTR [eax],ebx
10030f40:	mov    DWORD PTR [esp+0x38],esi
10030f44:	mov    BYTE PTR [esp+0x44],0x1
10030f49:	mov    edx,DWORD PTR [esp+0x2c]
10030f4d:	push   edx
10030f4e:	call   0x10042e92
10030f53:	add    esp,0x14
10030f56:	cmp    esi,ebx
10030f58:	jne    0x10030f60
10030f5a:	mov    DWORD PTR [ebp+0x0],ebx
10030f5d:	push   ebx
10030f5e:	jmp    0x10030fcd
10030f60:	mov    ecx,DWORD PTR [esp+0x18]
10030f64:	mov    eax,DWORD PTR [esi+ecx*1-0x4]
10030f68:	sub    eax,0x4
10030f6b:	lea    edx,[eax+0x4]
10030f6e:	cmp    edx,ecx
10030f70:	jbe    0x10030f77
10030f72:	mov    DWORD PTR [ebp+0x0],ebx
10030f75:	jmp    0x10030fcc
10030f77:	mov    edx,DWORD PTR ds:0x10080dbc
10030f7d:	push   ebx
10030f7e:	push   edx
10030f7f:	push   eax
10030f80:	mov    edx,esi
10030f82:	sub    edx,eax
10030f84:	lea    eax,[edx+ecx*1-0x4]
10030f88:	push   eax
10030f89:	lea    ecx,[esp+0x30]
10030f8d:	push   ecx
10030f8e:	mov    ecx,DWORD PTR [esp+0x5c]
10030f92:	lea    edx,[esp+0x2b]
10030f96:	call   0x10039740
10030f9b:	mov    edi,DWORD PTR [eax]
10030f9d:	add    esp,0x14
10030fa0:	cmp    edi,ebx
10030fa2:	mov    DWORD PTR [eax],ebx
10030fa4:	je     0x10030faf
10030fa6:	push   ebx
10030fa7:	call   0x10042e92
10030fac:	add    esp,0x4
10030faf:	mov    edx,DWORD PTR [esp+0x20]
10030fb3:	push   edx
10030fb4:	call   0x10042e92
10030fb9:	add    esp,0x4
10030fbc:	cmp    BYTE PTR [esp+0x17],bl
10030fc0:	je     0x10030fc9
10030fc2:	mov    BYTE PTR ds:0x10080d48,0x1
10030fc9:	mov    DWORD PTR [ebp+0x0],edi
10030fcc:	push   esi
10030fcd:	call   0x10042e92
10030fd2:	add    esp,0x4
10030fd5:	push   ebx
10030fd6:	call   0x10042e92
10030fdb:	add    esp,0x4
10030fde:	mov    eax,ebp
10030fe0:	mov    ecx,DWORD PTR [esp+0x2c]
10030fe4:	mov    DWORD PTR fs:0x0,ecx
10030feb:	pop    ecx
10030fec:	pop    edi
10030fed:	pop    esi
10030fee:	pop    ebp
10030fef:	pop    ebx
10030ff0:	add    esp,0x24
10030ff3:	ret    
10030ff4:	int3   
10030ff5:	int3   
10030ff6:	int3   
10030ff7:	int3   
10030ff8:	int3   
10030ff9:	int3   
10030ffa:	int3   
10030ffb:	int3   
10030ffc:	int3   
10030ffd:	int3   
10030ffe:	int3   
10030fff:	int3   
10031000:	push   0xffffffff
10031002:	push   0x10063290
10031007:	mov    eax,fs:0x0
1003100d:	push   eax
1003100e:	push   esi
1003100f:	push   edi
10031010:	mov    eax,ds:0x1007e030
10031015:	xor    eax,esp
10031017:	push   eax
10031018:	lea    eax,[esp+0xc]
1003101c:	mov    fs:0x0,eax
10031022:	mov    eax,DWORD PTR [esp+0x1c]
10031026:	mov    edi,ecx
10031028:	mov    DWORD PTR [esp+0x1c],0x0
10031030:	cmp    DWORD PTR [eax+0x18],0x10
10031034:	jb     0x1003103b
10031036:	mov    esi,DWORD PTR [eax+0x4]
10031039:	jmp    0x1003103e
1003103b:	lea    esi,[eax+0x4]
1003103e:	mov    eax,ds:0x10080a74
10031043:	mov    edx,DWORD PTR [eax+0xc]
10031046:	mov    ecx,0x10080a74
1003104b:	call   edx
1003104d:	add    eax,0x10
10031050:	mov    DWORD PTR [esp+0x1c],eax
10031054:	test   esi,esi
10031056:	mov    DWORD PTR [esp+0x14],0x0
1003105e:	je     0x10031086
10031060:	test   esi,0xffff0000
10031066:	jne    0x10031086
10031068:	movzx  esi,si
1003106b:	push   esi
1003106c:	call   0x1000201d
10031071:	add    esp,0x4
10031074:	test   eax,eax
10031076:	je     0x10031091
10031078:	push   esi
10031079:	push   eax
1003107a:	lea    eax,[esp+0x24]
1003107e:	push   eax
1003107f:	call   0x100021dc
10031084:	jmp    0x10031091
10031086:	push   esi
10031087:	lea    ecx,[esp+0x20]
1003108b:	push   ecx
1003108c:	call   0x100020b8
10031091:	lea    ecx,[esp+0x1c]
10031095:	mov    DWORD PTR [esp+0x14],0x1
1003109d:	call   0x10030730
100310a2:	mov    DWORD PTR [esp+0x14],0xffffffff
100310aa:	mov    eax,DWORD PTR [esp+0x1c]
100310ae:	add    eax,0xfffffff0
100310b1:	lea    edx,[eax+0xc]
100310b4:	or     ecx,0xffffffff
100310b7:	lock xadd DWORD PTR [edx],ecx
100310bb:	dec    ecx
100310bc:	test   ecx,ecx
100310be:	jg     0x100310ca
100310c0:	mov    ecx,DWORD PTR [eax]
100310c2:	mov    edx,DWORD PTR [ecx]
100310c4:	push   eax
100310c5:	mov    eax,DWORD PTR [edx+0x4]
100310c8:	call   eax
100310ca:	mov    eax,edi
100310cc:	mov    ecx,DWORD PTR [esp+0xc]
100310d0:	mov    DWORD PTR fs:0x0,ecx
100310d7:	pop    ecx
100310d8:	pop    edi
100310d9:	pop    esi
100310da:	add    esp,0xc
100310dd:	ret    
100310de:	int3   
100310df:	int3   
100310e0:	push   ebp
100310e1:	mov    ebp,esp
100310e3:	push   0xffffffff
100310e5:	push   0x10063878
100310ea:	mov    eax,fs:0x0
100310f0:	push   eax
100310f1:	sub    esp,0xd0
100310f7:	mov    eax,ds:0x1007e030
100310fc:	xor    eax,ebp
100310fe:	mov    DWORD PTR [ebp-0x18],eax
10031101:	push   ebx
10031102:	push   esi
10031103:	push   edi
10031104:	push   eax
10031105:	lea    eax,[ebp-0xc]
10031108:	mov    fs:0x0,eax
1003110e:	mov    DWORD PTR [ebp-0x10],esp
10031111:	mov    eax,DWORD PTR [ebp+0x8]
10031114:	xor    ebx,ebx
10031116:	mov    DWORD PTR [ebp-0xb8],ebx
1003111c:	mov    DWORD PTR [ebp-0x4],ebx
1003111f:	mov    edi,0xf
10031124:	mov    DWORD PTR [ebp-0xbc],eax
1003112a:	mov    DWORD PTR [ebp-0x8c],edi
10031130:	mov    DWORD PTR [ebp-0x90],ebx
10031136:	mov    BYTE PTR [ebp-0xa0],bl
1003113c:	mov    DWORD PTR [ebp-0x70],edi
1003113f:	mov    DWORD PTR [ebp-0x74],ebx
10031142:	mov    BYTE PTR [ebp-0x84],bl
10031148:	push   0x1
1003114a:	lea    ecx,[ebp-0xb8]
10031150:	push   ecx
10031151:	mov    BYTE PTR [ebp-0x4],0x2
10031155:	call   0x100349f0
1003115a:	mov    DWORD PTR [ebp-0x1c],edi
1003115d:	mov    DWORD PTR [ebp-0x20],ebx
10031160:	mov    BYTE PTR [ebp-0x30],bl
10031163:	mov    DWORD PTR [ebp-0x38],edi
10031166:	mov    DWORD PTR [ebp-0x3c],ebx
10031169:	mov    BYTE PTR [ebp-0x4c],bl
1003116c:	lea    edx,[ebp-0x88]
10031172:	push   edx
10031173:	lea    eax,[ebp-0xa4]
10031179:	push   eax
1003117a:	lea    ecx,[ebp-0xb4]
10031180:	push   ecx
10031181:	lea    edx,[ebp-0xb8]
10031187:	push   edx
10031188:	lea    edx,[ebp-0x50]
1003118b:	lea    ecx,[ebp-0x34]
1003118e:	mov    BYTE PTR [ebp-0x4],0x5
10031192:	call   0x100365d0
10031197:	mov    esi,0x10
1003119c:	cmp    DWORD PTR [ebp-0x38],esi
1003119f:	jb     0x100311ad
100311a1:	mov    eax,DWORD PTR [ebp-0x4c]
100311a4:	push   eax
100311a5:	call   0x10042e92
100311aa:	add    esp,0x4
100311ad:	cmp    DWORD PTR [ebp-0x1c],esi
100311b0:	mov    DWORD PTR [ebp-0x38],edi
100311b3:	mov    DWORD PTR [ebp-0x3c],ebx
100311b6:	mov    BYTE PTR [ebp-0x4c],bl
100311b9:	jb     0x100311c7
100311bb:	mov    ecx,DWORD PTR [ebp-0x30]
100311be:	push   ecx
100311bf:	call   0x10042e92
100311c4:	add    esp,0x4
100311c7:	mov    BYTE PTR [ebp-0x4],0x2
100311cb:	mov    edx,DWORD PTR [ebp-0xb8]
100311d1:	push   edx
100311d2:	mov    DWORD PTR [ebp-0x1c],edi
100311d5:	mov    DWORD PTR [ebp-0x20],ebx
100311d8:	mov    BYTE PTR [ebp-0x30],bl
100311db:	call   DWORD PTR ds:0x10066070
100311e1:	push   0x38a885ba
100311e6:	push   0x10073088
100311eb:	call   0x10004246
100311f0:	add    esp,0x8
100311f3:	push   0x6686e9e8
100311f8:	push   eax
100311f9:	call   0x10004246
100311fe:	add    esp,0x8
10031201:	push   0x140e4a2c
10031206:	push   eax
10031207:	call   0x10004246
1003120c:	add    esp,0x8
1003120f:	push   eax
10031210:	push   0x2
10031212:	push   0x100730b4
10031217:	call   0x10004258
1003121c:	mov    esi,eax
1003121e:	add    esp,0xc
10031221:	push   esi
10031222:	mov    DWORD PTR [ebp-0x54],edi
10031225:	mov    DWORD PTR [ebp-0x58],ebx
10031228:	mov    BYTE PTR [ebp-0x68],bl
1003122b:	call   0x10043010
10031230:	add    esp,0x4
10031233:	push   eax
10031234:	push   esi
10031235:	lea    ecx,[ebp-0x6c]
10031238:	call   0x1000133b
1003123d:	lea    ebx,[ebp-0x50]
10031240:	mov    BYTE PTR [ebp-0x4],0x6
10031244:	call   0x10030c40
10031249:	push   eax
1003124a:	lea    ecx,[ebp-0x34]
1003124d:	mov    BYTE PTR [ebp-0x4],0x7
10031251:	call   0x10031000
10031256:	add    esp,0x4
10031259:	push   0xffffffff
1003125b:	xor    ebx,ebx
1003125d:	push   ebx
1003125e:	lea    esi,[ebp-0x6c]
10031261:	mov    BYTE PTR [ebp-0x4],0x8
10031265:	call   0x10004c80
1003126a:	mov    esi,0x10
1003126f:	cmp    DWORD PTR [ebp-0x1c],esi
10031272:	jb     0x10031280
10031274:	mov    eax,DWORD PTR [ebp-0x30]
10031277:	push   eax
10031278:	call   0x10042e92
1003127d:	add    esp,0x4
10031280:	mov    BYTE PTR [ebp-0x4],0x6
10031284:	cmp    DWORD PTR [ebp-0x38],esi
10031287:	mov    DWORD PTR [ebp-0x1c],0xf
1003128e:	mov    DWORD PTR [ebp-0x20],ebx
10031291:	mov    BYTE PTR [ebp-0x30],bl
10031294:	jb     0x100312a2
10031296:	mov    ecx,DWORD PTR [ebp-0x4c]
10031299:	push   ecx
1003129a:	call   0x10042e92
1003129f:	add    esp,0x4
100312a2:	lea    edx,[ebp-0xb4]
100312a8:	push   edx
100312a9:	lea    esi,[ebp-0xd8]
100312af:	call   0x10030d10
100312b4:	add    esp,0x4
100312b7:	mov    edi,eax
100312b9:	push   0x100730b8
100312be:	push   0x3
100312c0:	push   0x100730ec
100312c5:	mov    BYTE PTR [ebp-0x4],0x9
100312c9:	call   0x10004258
100312ce:	mov    esi,eax
100312d0:	add    esp,0xc
100312d3:	push   esi
100312d4:	mov    DWORD PTR [ebp-0x38],0xf
100312db:	mov    DWORD PTR [ebp-0x3c],ebx
100312de:	mov    BYTE PTR [ebp-0x4c],bl
100312e1:	call   0x10043010
100312e6:	add    esp,0x4
100312e9:	push   eax
100312ea:	push   esi
100312eb:	lea    ecx,[ebp-0x50]
100312ee:	call   0x1000133b
100312f3:	push   edi
100312f4:	lea    eax,[ebp-0x50]
100312f7:	push   eax
100312f8:	lea    ecx,[ebp-0x34]
100312fb:	push   ecx
100312fc:	mov    BYTE PTR [ebp-0x4],0xa
10031300:	call   0x100064d6
10031305:	add    esp,0xc
10031308:	push   0xffffffff
1003130a:	push   ebx
1003130b:	lea    esi,[ebp-0x6c]
1003130e:	mov    BYTE PTR [ebp-0x4],0xb
10031312:	call   0x10004c80
10031317:	mov    edi,0x10
1003131c:	cmp    DWORD PTR [ebp-0x1c],edi
1003131f:	jb     0x1003132d
10031321:	mov    edx,DWORD PTR [ebp-0x30]
10031324:	push   edx
10031325:	call   0x10042e92
1003132a:	add    esp,0x4
1003132d:	cmp    DWORD PTR [ebp-0x38],edi
10031330:	mov    esi,0xf
10031335:	mov    DWORD PTR [ebp-0x1c],esi
10031338:	mov    DWORD PTR [ebp-0x20],ebx
1003133b:	mov    BYTE PTR [ebp-0x30],bl
1003133e:	jb     0x1003134c
10031340:	mov    eax,DWORD PTR [ebp-0x4c]
10031343:	push   eax
10031344:	call   0x10042e92
10031349:	add    esp,0x4
1003134c:	mov    BYTE PTR [ebp-0x4],0x6
10031350:	cmp    DWORD PTR [ebp-0xc0],edi
10031356:	mov    DWORD PTR [ebp-0x38],esi
10031359:	mov    DWORD PTR [ebp-0x3c],ebx
1003135c:	mov    BYTE PTR [ebp-0x4c],bl
1003135f:	jb     0x10031370
10031361:	mov    ecx,DWORD PTR [ebp-0xd4]
10031367:	push   ecx
10031368:	call   0x10042e92
1003136d:	add    esp,0x4
10031370:	lea    edx,[ebp-0xa4]
10031376:	push   edx
10031377:	lea    ecx,[ebp-0xd8]
1003137d:	call   0x10031000
10031382:	add    esp,0x4
10031385:	mov    esi,eax
10031387:	push   0x50370810
1003138c:	push   0x100730f0
10031391:	mov    BYTE PTR [ebp-0x4],0xc
10031395:	call   0x10004246
1003139a:	add    esp,0x8
1003139d:	push   0x6de28570
100313a2:	push   eax
100313a3:	call   0x10004246
100313a8:	add    esp,0x8
100313ab:	push   0x2c114096
100313b0:	push   eax
100313b1:	call   0x10004246
100313b6:	add    esp,0x8
100313b9:	push   eax
100313ba:	push   0x3
100313bc:	push   0x10073118
100313c1:	call   0x10004258
100313c6:	add    esp,0xc
100313c9:	push   esi
100313ca:	push   eax
100313cb:	lea    eax,[ebp-0x34]
100313ce:	push   eax
100313cf:	call   0x10006521
100313d4:	add    esp,0xc
100313d7:	push   0xffffffff
100313d9:	push   ebx
100313da:	lea    esi,[ebp-0x6c]
100313dd:	mov    BYTE PTR [ebp-0x4],0xd
100313e1:	call   0x10004c80
100313e6:	cmp    DWORD PTR [ebp-0x1c],edi
100313e9:	jb     0x100313f7
100313eb:	mov    ecx,DWORD PTR [ebp-0x30]
100313ee:	push   ecx
100313ef:	call   0x10042e92
100313f4:	add    esp,0x4
100313f7:	mov    BYTE PTR [ebp-0x4],0x6
100313fb:	cmp    DWORD PTR [ebp-0xc0],edi
10031401:	mov    DWORD PTR [ebp-0x1c],0xf
10031408:	mov    DWORD PTR [ebp-0x20],ebx
1003140b:	mov    BYTE PTR [ebp-0x30],bl
1003140e:	jb     0x1003141f
10031410:	mov    edx,DWORD PTR [ebp-0xd4]
10031416:	push   edx
10031417:	call   0x10042e92
1003141c:	add    esp,0x4
1003141f:	lea    ebx,[ebp-0xd8]
10031425:	call   0x1002f950
1003142a:	push   eax
1003142b:	lea    ecx,[ebp-0x50]
1003142e:	mov    BYTE PTR [ebp-0x4],0xe
10031432:	call   0x10031000
10031437:	add    esp,0x4
1003143a:	mov    esi,eax
1003143c:	push   0x1b6481ae
10031441:	push   0x1007311c
10031446:	mov    BYTE PTR [ebp-0x4],0xf
1003144a:	call   0x10004246
1003144f:	add    esp,0x8
10031452:	push   eax
10031453:	push   0x4
10031455:	push   0x10073154
1003145a:	call   0x10004258
1003145f:	add    esp,0xc
10031462:	push   esi
10031463:	push   eax
10031464:	lea    eax,[ebp-0x34]
10031467:	push   eax
10031468:	call   0x10006521
1003146d:	add    esp,0xc
10031470:	push   0xffffffff
10031472:	xor    ebx,ebx
10031474:	push   ebx
10031475:	lea    esi,[ebp-0x6c]
10031478:	mov    BYTE PTR [ebp-0x4],0x10
1003147c:	call   0x10004c80
10031481:	mov    esi,0x10
10031486:	cmp    DWORD PTR [ebp-0x1c],esi
10031489:	jb     0x10031497
1003148b:	mov    ecx,DWORD PTR [ebp-0x30]
1003148e:	push   ecx
1003148f:	call   0x10042e92
10031494:	add    esp,0x4
10031497:	cmp    DWORD PTR [ebp-0x38],esi
1003149a:	mov    edi,0xf
1003149f:	mov    DWORD PTR [ebp-0x1c],edi
100314a2:	mov    DWORD PTR [ebp-0x20],ebx
100314a5:	mov    BYTE PTR [ebp-0x30],bl
100314a8:	jb     0x100314b6
100314aa:	mov    edx,DWORD PTR [ebp-0x4c]
100314ad:	push   edx
100314ae:	call   0x10042e92
100314b3:	add    esp,0x4
100314b6:	mov    BYTE PTR [ebp-0x4],0x6
100314ba:	cmp    DWORD PTR [ebp-0xc0],esi
100314c0:	mov    DWORD PTR [ebp-0x38],edi
100314c3:	mov    DWORD PTR [ebp-0x3c],ebx
100314c6:	mov    BYTE PTR [ebp-0x4c],bl
100314c9:	jb     0x100314da
100314cb:	mov    eax,DWORD PTR [ebp-0xd4]
100314d1:	push   eax
100314d2:	call   0x10042e92
100314d7:	add    esp,0x4
100314da:	lea    ecx,[ebp-0x88]
100314e0:	push   ecx
100314e1:	lea    ecx,[ebp-0xd8]
100314e7:	call   0x10031000
100314ec:	add    esp,0x4
100314ef:	mov    esi,eax
100314f1:	push   0x7d48acb6
100314f6:	push   0x1007315c
100314fb:	mov    BYTE PTR [ebp-0x4],0x11
100314ff:	call   0x10004246
10031504:	add    esp,0x8
10031507:	push   0x1d0ba58
1003150c:	push   eax
1003150d:	call   0x10004246
10031512:	add    esp,0x8
10031515:	push   eax
10031516:	push   0x3
10031518:	push   0x10073180
1003151d:	call   0x10004258
10031522:	add    esp,0xc
10031525:	push   esi
10031526:	push   eax
10031527:	lea    edx,[ebp-0x34]
1003152a:	push   edx
1003152b:	call   0x10006521
10031530:	add    esp,0xc
10031533:	push   0xffffffff
10031535:	push   ebx
10031536:	lea    esi,[ebp-0x6c]
10031539:	mov    BYTE PTR [ebp-0x4],0x12
1003153d:	call   0x10004c80
10031542:	mov    esi,0x10
10031547:	cmp    DWORD PTR [ebp-0x1c],esi
1003154a:	jb     0x10031558
1003154c:	mov    eax,DWORD PTR [ebp-0x30]
1003154f:	push   eax
10031550:	call   0x10042e92
10031555:	add    esp,0x4
10031558:	mov    BYTE PTR [ebp-0x4],0x6
1003155c:	cmp    DWORD PTR [ebp-0xc0],esi
10031562:	mov    DWORD PTR [ebp-0x1c],edi
10031565:	mov    DWORD PTR [ebp-0x20],ebx
10031568:	mov    BYTE PTR [ebp-0x30],bl
1003156b:	jb     0x1003157c
1003156d:	mov    ecx,DWORD PTR [ebp-0xd4]
10031573:	push   ecx
10031574:	call   0x10042e92
10031579:	add    esp,0x4
1003157c:	lea    edx,[ebp-0xd8]
10031582:	push   edx
10031583:	call   0x10037a10
10031588:	add    esp,0x4
1003158b:	mov    esi,eax
1003158d:	push   0x10073184
10031592:	push   0x5
10031594:	push   0x100731ac
10031599:	mov    BYTE PTR [ebp-0x4],0x13
1003159d:	call   0x10004258
100315a2:	add    esp,0xc
100315a5:	push   esi
100315a6:	push   eax
100315a7:	lea    eax,[ebp-0x34]
100315aa:	push   eax
100315ab:	call   0x10006521
100315b0:	add    esp,0xc
100315b3:	push   0xffffffff
100315b5:	push   ebx
100315b6:	lea    esi,[ebp-0x6c]
100315b9:	mov    BYTE PTR [ebp-0x4],0x14
100315bd:	call   0x10004c80
100315c2:	mov    esi,0x10
100315c7:	cmp    DWORD PTR [ebp-0x1c],esi
100315ca:	jb     0x100315d8
100315cc:	mov    ecx,DWORD PTR [ebp-0x30]
100315cf:	push   ecx
100315d0:	call   0x10042e92
100315d5:	add    esp,0x4
100315d8:	mov    BYTE PTR [ebp-0x4],0x6
100315dc:	cmp    DWORD PTR [ebp-0xc0],esi
100315e2:	mov    DWORD PTR [ebp-0x1c],edi
100315e5:	mov    DWORD PTR [ebp-0x20],ebx
100315e8:	mov    BYTE PTR [ebp-0x30],bl
100315eb:	jb     0x100315fc
100315ed:	mov    edx,DWORD PTR [ebp-0xd4]
100315f3:	push   edx
100315f4:	call   0x10042e92
100315f9:	add    esp,0x4
100315fc:	mov    esi,DWORD PTR [ebp-0xbc]
10031602:	push   0xffffffff
10031604:	push   ebx
10031605:	lea    eax,[ebp-0x6c]
10031608:	mov    DWORD PTR [esi+0x18],edi
1003160b:	mov    DWORD PTR [esi+0x14],ebx
1003160e:	push   eax
1003160f:	mov    ecx,esi
10031611:	mov    BYTE PTR [esi+0x4],bl
10031614:	call   0x10001241
10031619:	cmp    DWORD PTR [ebp-0x54],0x10
1003161d:	jb     0x1003162b
1003161f:	mov    ecx,DWORD PTR [ebp-0x68]
10031622:	push   ecx
10031623:	call   0x10042e92
10031628:	add    esp,0x4
1003162b:	cmp    DWORD PTR [ebp-0x70],0x10
1003162f:	mov    DWORD PTR [ebp-0x54],edi
10031632:	mov    DWORD PTR [ebp-0x58],ebx
10031635:	mov    BYTE PTR [ebp-0x68],bl
10031638:	jb     0x10031649
1003163a:	mov    edx,DWORD PTR [ebp-0x84]
10031640:	push   edx
10031641:	call   0x10042e92
10031646:	add    esp,0x4
10031649:	cmp    DWORD PTR [ebp-0x8c],0x10
10031650:	mov    DWORD PTR [ebp-0x70],edi
10031653:	mov    DWORD PTR [ebp-0x74],ebx
10031656:	mov    BYTE PTR [ebp-0x84],bl
1003165c:	jb     0x10031687
1003165e:	mov    eax,DWORD PTR [ebp-0xa0]
10031664:	push   eax
10031665:	call   0x10042e92
1003166a:	add    esp,0x4
1003166d:	jmp    0x10031687
1003166f:	mov    eax,0x10031675
10031674:	ret    
10031675:	mov    esi,DWORD PTR [ebp-0xbc]
1003167b:	push   0x1006cd08
10031680:	mov    ecx,esi
10031682:	call   0x100011cd
10031687:	mov    eax,esi
10031689:	mov    ecx,DWORD PTR [ebp-0xc]
1003168c:	mov    DWORD PTR fs:0x0,ecx
10031693:	pop    ecx
10031694:	pop    edi
10031695:	pop    esi
10031696:	pop    ebx
10031697:	mov    ecx,DWORD PTR [ebp-0x18]
1003169a:	xor    ecx,ebp
1003169c:	call   0x10042e97
100316a1:	mov    esp,ebp
100316a3:	pop    ebp
100316a4:	ret    
100316a5:	int3   
100316a6:	int3   
100316a7:	int3   
100316a8:	int3   
100316a9:	int3   
100316aa:	int3   
100316ab:	int3   
100316ac:	int3   
100316ad:	int3   
100316ae:	int3   
100316af:	int3   
100316b0:	push   0xffffffff
100316b2:	push   0x100618e1
100316b7:	mov    eax,fs:0x0
100316bd:	push   eax
100316be:	sub    esp,0x64
100316c1:	mov    eax,ds:0x1007e030
100316c6:	xor    eax,esp
100316c8:	mov    DWORD PTR [esp+0x60],eax
100316cc:	push   ebx
100316cd:	push   ebp
100316ce:	push   esi
100316cf:	push   edi
100316d0:	mov    eax,ds:0x1007e030
100316d5:	xor    eax,esp
100316d7:	push   eax
100316d8:	lea    eax,[esp+0x78]
100316dc:	mov    fs:0x0,eax
100316e2:	xor    ebp,ebp
100316e4:	mov    DWORD PTR [esp+0x80],ebp
100316eb:	mov    ebx,ecx
100316ed:	mov    DWORD PTR [esp+0x30],ebp
100316f1:	mov    edi,0xf
100316f6:	mov    DWORD PTR [ebx+0x18],edi
100316f9:	mov    DWORD PTR [ebx+0x14],ebp
100316fc:	push   0x1006cd08
10031701:	mov    DWORD PTR [esp+0x30],ebx
10031705:	mov    esi,edx
10031707:	mov    BYTE PTR [ebx+0x4],0x0
1003170b:	call   0x10043010
10031710:	add    esp,0x4
10031713:	push   eax
10031714:	push   0x1006cd08
10031719:	mov    ecx,ebx
1003171b:	call   0x1000133b
10031720:	mov    eax,0x1
10031725:	mov    DWORD PTR [esp+0x30],eax
10031729:	mov    DWORD PTR [esp+0x20],ebp
1003172d:	mov    DWORD PTR [esp+0x24],ebp
10031731:	mov    DWORD PTR [esp+0x28],ebp
10031735:	push   0xffffffff
10031737:	mov    DWORD PTR [esp+0x84],eax
1003173e:	push   ebp
1003173f:	push   esi
10031740:	lea    ecx,[esp+0x48]
10031744:	mov    DWORD PTR [esp+0x60],edi
10031748:	mov    DWORD PTR [esp+0x5c],ebp
1003174c:	mov    BYTE PTR [esp+0x4c],0x0
10031751:	call   0x10001241
10031756:	mov    BYTE PTR [esp+0x80],0x2
1003175e:	mov    eax,DWORD PTR [esp+0x50]
10031762:	cmp    eax,ebp
10031764:	jbe    0x10031899
1003176a:	lea    ebx,[ebx+0x0]
10031770:	cmp    eax,0xfa0
10031775:	mov    DWORD PTR [esp+0x14],eax
10031779:	jbe    0x10031783
1003177b:	mov    DWORD PTR [esp+0x14],0xfa0
10031783:	mov    eax,DWORD PTR [esp+0x14]
10031787:	push   eax
10031788:	push   ebp
10031789:	lea    ecx,[esp+0x44]
1003178d:	push   ecx
1003178e:	lea    eax,[esp+0x64]
10031792:	call   0x1000c8df
10031797:	mov    ebx,eax
10031799:	mov    BYTE PTR [esp+0x80],0x3
100317a1:	mov    edi,DWORD PTR [esp+0x20]
100317a5:	cmp    edi,ebp
100317a7:	mov    ebp,DWORD PTR [esp+0x24]
100317ab:	je     0x10031807
100317ad:	mov    esi,DWORD PTR [esp+0x28]
100317b1:	mov    ecx,ebp
100317b3:	sub    ecx,edi
100317b5:	mov    eax,0x92492493
100317ba:	imul   ecx
100317bc:	add    edx,ecx
100317be:	sar    edx,0x4
100317c1:	mov    ecx,edx
100317c3:	shr    ecx,0x1f
100317c6:	add    ecx,edx
100317c8:	sub    esi,edi
100317ca:	mov    eax,0x92492493
100317cf:	imul   esi
100317d1:	add    edx,esi
100317d3:	sar    edx,0x4
100317d6:	mov    eax,edx
100317d8:	shr    eax,0x1f
100317db:	add    eax,edx
100317dd:	cmp    ecx,eax
100317df:	jae    0x10031807
100317e1:	mov    eax,DWORD PTR [esp+0x2c]
100317e5:	mov    BYTE PTR [esp+0x18],0x0
100317ea:	mov    edx,DWORD PTR [esp+0x18]
100317ee:	push   edx
100317ef:	push   eax
100317f0:	push   ebx
100317f1:	push   0x1
100317f3:	push   ebp
100317f4:	mov    esi,ebp
100317f6:	call   0x1000fed0
100317fb:	add    esp,0x14
100317fe:	add    esi,0x1c
10031801:	mov    DWORD PTR [esp+0x24],esi
10031805:	jmp    0x10031821
10031807:	cmp    edi,ebp
10031809:	jbe    0x10031810
1003180b:	call   0x100433b0
10031810:	push   ebp
10031811:	lea    eax,[esp+0x20]
10031815:	push   eax
10031816:	push   ebx
10031817:	lea    ecx,[esp+0x40]
1003181b:	push   ecx
1003181c:	call   0x1000fb35
10031821:	mov    esi,0x10
10031826:	mov    BYTE PTR [esp+0x80],0x2
1003182e:	cmp    DWORD PTR [esp+0x70],esi
10031832:	jb     0x10031841
10031834:	mov    edx,DWORD PTR [esp+0x5c]
10031838:	push   edx
10031839:	call   0x10042e92
1003183e:	add    esp,0x4
10031841:	mov    eax,DWORD PTR [esp+0x14]
10031845:	push   0xffffffff
10031847:	push   eax
10031848:	lea    ecx,[esp+0x44]
1003184c:	push   ecx
1003184d:	lea    eax,[esp+0x64]
10031851:	call   0x1000c8df
10031856:	push   0xffffffff
10031858:	push   0x0
1003185a:	push   eax
1003185b:	lea    ecx,[esp+0x48]
1003185f:	mov    BYTE PTR [esp+0x8c],0x4
10031867:	call   0x10001241
1003186c:	mov    BYTE PTR [esp+0x80],0x2
10031874:	cmp    DWORD PTR [esp+0x70],esi
10031878:	jb     0x10031887
1003187a:	mov    edx,DWORD PTR [esp+0x5c]
1003187e:	push   edx
1003187f:	call   0x10042e92
10031884:	add    esp,0x4
10031887:	mov    eax,DWORD PTR [esp+0x50]
1003188b:	xor    ebp,ebp
1003188d:	test   eax,eax
1003188f:	ja     0x10031770
10031895:	mov    ebx,DWORD PTR [esp+0x2c]
10031899:	mov    BYTE PTR [esp+0x80],0x1
100318a1:	cmp    DWORD PTR [esp+0x54],0x10
100318a6:	jb     0x100318b5
100318a8:	mov    eax,DWORD PTR [esp+0x40]
100318ac:	push   eax
100318ad:	call   0x10042e92
100318b2:	add    esp,0x4
100318b5:	push   0x398a1eb8
100318ba:	push   0x100731b4
100318bf:	call   0x10004246
100318c4:	push   0x53aa342e
100318c9:	push   eax
100318ca:	call   0x10004246
100318cf:	push   0x592cb140
100318d4:	push   eax
100318d5:	call   0x10004246
100318da:	push   0x64c3c4c4
100318df:	push   eax
100318e0:	call   0x10004246
100318e5:	push   0x38dc7a70
100318ea:	push   eax
100318eb:	call   0x10004246
100318f0:	push   eax
100318f1:	push   0x8
100318f3:	push   0x100731dc
100318f8:	call   0x10004258
100318fd:	mov    esi,eax
100318ff:	add    esp,0x34
10031902:	push   esi
10031903:	call   0x10043010
10031908:	add    esp,0x4
1003190b:	push   eax
1003190c:	push   esi
1003190d:	mov    eax,ebx
1003190f:	call   0x10004d24
10031914:	xor    edi,edi
10031916:	mov    DWORD PTR [esp+0x18],ebp
1003191a:	mov    eax,DWORD PTR [esp+0x20]
1003191e:	cmp    eax,ebp
10031920:	mov    DWORD PTR [esp+0x14],edi
10031924:	jne    0x1003192a
10031926:	xor    eax,eax
10031928:	jmp    0x10031943
1003192a:	mov    ecx,DWORD PTR [esp+0x24]
1003192e:	sub    ecx,eax
10031930:	mov    eax,0x92492493
10031935:	imul   ecx
10031937:	add    edx,ecx
10031939:	sar    edx,0x4
1003193c:	mov    eax,edx
1003193e:	shr    eax,0x1f
10031941:	add    eax,edx
10031943:	cmp    edi,eax
10031945:	je     0x10031b90
1003194b:	push   0x100731e8
10031950:	mov    DWORD PTR [esp+0x58],0xf
10031958:	mov    DWORD PTR [esp+0x54],ebp
1003195c:	mov    BYTE PTR [esp+0x44],0x0
10031961:	call   0x10043010
10031966:	mov    ecx,DWORD PTR [esp+0x44]
1003196a:	mov    esi,eax
1003196c:	mov    eax,DWORD PTR [esp+0x58]
10031970:	add    esp,0x4
10031973:	cmp    eax,0x10
10031976:	mov    edx,ecx
10031978:	jae    0x1003197e
1003197a:	lea    edx,[esp+0x40]
1003197e:	cmp    edx,0x100731e8
10031984:	ja     0x100319c9
10031986:	cmp    eax,0x10
10031989:	mov    edx,ecx
1003198b:	jae    0x10031991
1003198d:	lea    edx,[esp+0x40]
10031991:	mov    edi,DWORD PTR [esp+0x50]
10031995:	add    edx,edi
10031997:	cmp    edx,0x100731e8
1003199d:	jbe    0x100319c5
1003199f:	cmp    eax,0x10
100319a2:	mov    eax,ecx
100319a4:	jae    0x100319aa
100319a6:	lea    eax,[esp+0x40]
100319aa:	push   esi
100319ab:	mov    ecx,0x100731e8
100319b0:	sub    ecx,eax
100319b2:	push   ecx
100319b3:	lea    edx,[esp+0x44]
100319b7:	push   edx
100319b8:	mov    ecx,edx
100319ba:	call   0x10001241
100319bf:	mov    edi,DWORD PTR [esp+0x14]
100319c3:	jmp    0x10031a2e
100319c5:	mov    edi,DWORD PTR [esp+0x14]
100319c9:	cmp    esi,0xfffffffe
100319cc:	jbe    0x100319db
100319ce:	call   0x100571a0
100319d3:	mov    eax,DWORD PTR [esp+0x54]
100319d7:	mov    ecx,DWORD PTR [esp+0x40]
100319db:	cmp    eax,esi
100319dd:	jae    0x10031b71
100319e3:	mov    eax,DWORD PTR [esp+0x50]
100319e7:	push   eax
100319e8:	push   esi
100319e9:	lea    ecx,[esp+0x44]
100319ed:	call   0x10001500
100319f2:	mov    eax,DWORD PTR [esp+0x54]
100319f6:	mov    ecx,DWORD PTR [esp+0x40]
100319fa:	cmp    esi,ebp
100319fc:	jbe    0x10031a2e
100319fe:	cmp    eax,0x10
10031a01:	jae    0x10031a07
10031a03:	lea    ecx,[esp+0x40]
10031a07:	push   esi
10031a08:	push   0x100731e8
10031a0d:	push   eax
10031a0e:	push   ecx
10031a0f:	call   0x100433c5
10031a14:	mov    eax,DWORD PTR [esp+0x50]
10031a18:	add    esp,0x10
10031a1b:	cmp    DWORD PTR [esp+0x54],0x10
10031a20:	mov    DWORD PTR [esp+0x50],esi
10031a24:	jae    0x10031a2a
10031a26:	lea    eax,[esp+0x40]
10031a2a:	mov    BYTE PTR [eax+esi*1],0x0
10031a2e:	cmp    edi,ebp
10031a30:	mov    BYTE PTR [esp+0x80],0x5
10031a38:	jbe    0x10031a60
10031a3a:	push   0xa
10031a3c:	lea    ecx,[esp+0x5c]
10031a40:	push   ecx
10031a41:	push   edi
10031a42:	call   0x10045af6
10031a47:	mov    esi,eax
10031a49:	add    esp,0xc
10031a4c:	push   esi
10031a4d:	call   0x10043010
10031a52:	add    esp,0x4
10031a55:	push   eax
10031a56:	push   esi
10031a57:	lea    eax,[esp+0x44]
10031a5b:	call   0x10004d24
10031a60:	push   0x1006e0f8
10031a65:	call   0x10043010
10031a6a:	add    esp,0x4
10031a6d:	push   eax
10031a6e:	push   0x1006e0f8
10031a73:	lea    eax,[esp+0x44]
10031a77:	call   0x10004d24
10031a7c:	mov    esi,DWORD PTR [esp+0x20]
10031a80:	cmp    esi,ebp
10031a82:	je     0x10031aa1
10031a84:	mov    ecx,DWORD PTR [esp+0x24]
10031a88:	sub    ecx,esi
10031a8a:	mov    eax,0x92492493
10031a8f:	imul   ecx
10031a91:	add    edx,ecx
10031a93:	sar    edx,0x4
10031a96:	mov    eax,edx
10031a98:	shr    eax,0x1f
10031a9b:	add    eax,edx
10031a9d:	cmp    edi,eax
10031a9f:	jb     0x10031aaa
10031aa1:	call   0x100433b0
10031aa6:	mov    esi,DWORD PTR [esp+0x20]
10031aaa:	mov    edx,DWORD PTR [esp+0x18]
10031aae:	push   0xffffffff
10031ab0:	lea    eax,[esi+edx*1]
10031ab3:	push   ebp
10031ab4:	lea    esi,[esp+0x44]
10031ab8:	call   0x10004c80
10031abd:	cmp    edi,ebp
10031abf:	je     0x10031b3a
10031ac1:	push   0x2941ed2e
10031ac6:	push   0x5f2dc953
10031acb:	push   0x493b5c51
10031ad0:	push   0x4557a365
10031ad5:	push   0x2c466343
10031ada:	push   0x1e5ca382
10031adf:	push   0x100731ec
10031ae4:	call   0x10004246
10031ae9:	add    esp,0x8
10031aec:	push   eax
10031aed:	call   0x10004246
10031af2:	add    esp,0x8
10031af5:	push   eax
10031af6:	call   0x10004246
10031afb:	add    esp,0x8
10031afe:	push   eax
10031aff:	call   0x10004246
10031b04:	add    esp,0x8
10031b07:	push   eax
10031b08:	call   0x10004246
10031b0d:	add    esp,0x8
10031b10:	push   eax
10031b11:	call   0x10004246
10031b16:	push   eax
10031b17:	push   0x1
10031b19:	push   0x1006d8d4
10031b1e:	call   0x10004258
10031b23:	mov    esi,eax
10031b25:	add    esp,0x14
10031b28:	push   esi
10031b29:	call   0x10043010
10031b2e:	add    esp,0x4
10031b31:	push   eax
10031b32:	push   esi
10031b33:	mov    eax,ebx
10031b35:	call   0x10004d24
10031b3a:	push   0xffffffff
10031b3c:	push   ebp
10031b3d:	lea    eax,[esp+0x44]
10031b41:	mov    esi,ebx
10031b43:	call   0x10004c80
10031b48:	mov    BYTE PTR [esp+0x80],0x1
10031b50:	cmp    DWORD PTR [esp+0x54],0x10
10031b55:	jb     0x10031b64
10031b57:	mov    eax,DWORD PTR [esp+0x40]
10031b5b:	push   eax
10031b5c:	call   0x10042e92
10031b61:	add    esp,0x4
10031b64:	add    edi,0x1
10031b67:	add    DWORD PTR [esp+0x18],0x1c
10031b6c:	jmp    0x1003191a
10031b71:	cmp    esi,ebp
10031b73:	jne    0x100319fc
10031b79:	cmp    eax,0x10
10031b7c:	mov    DWORD PTR [esp+0x50],ebp
10031b80:	mov    eax,ecx
10031b82:	jae    0x10031b88
10031b84:	lea    eax,[esp+0x40]
10031b88:	mov    BYTE PTR [eax],0x0
10031b8b:	jmp    0x10031a2e
10031b90:	push   0x1006d384
10031b95:	call   0x10043010
10031b9a:	add    esp,0x4
10031b9d:	push   eax
10031b9e:	push   0x1006d384
10031ba3:	mov    eax,ebx
10031ba5:	call   0x10004d24
10031baa:	mov    esi,DWORD PTR [esp+0x20]
10031bae:	cmp    esi,ebp
10031bb0:	je     0x10031bf5
10031bb2:	mov    edi,DWORD PTR [esp+0x24]
10031bb6:	cmp    esi,edi
10031bb8:	je     0x10031bec
10031bba:	add    esi,0x18
10031bbd:	lea    ecx,[ecx+0x0]
10031bc0:	cmp    DWORD PTR [esi],0x10
10031bc3:	jb     0x10031bd1
10031bc5:	mov    eax,DWORD PTR [esi-0x14]
10031bc8:	push   eax
10031bc9:	call   0x10042e92
10031bce:	add    esp,0x4
10031bd1:	mov    DWORD PTR [esi],0xf
10031bd7:	mov    DWORD PTR [esi-0x4],ebp
10031bda:	mov    BYTE PTR [esi-0x14],0x0
10031bde:	add    esi,0x1c
10031be1:	lea    ecx,[esi-0x18]
10031be4:	cmp    ecx,edi
10031be6:	jne    0x10031bc0
10031be8:	mov    esi,DWORD PTR [esp+0x20]
10031bec:	push   esi
10031bed:	call   0x10042e92
10031bf2:	add    esp,0x4
10031bf5:	mov    eax,ebx
10031bf7:	mov    ecx,DWORD PTR [esp+0x78]
10031bfb:	mov    DWORD PTR fs:0x0,ecx
10031c02:	pop    ecx
10031c03:	pop    edi
10031c04:	pop    esi
10031c05:	pop    ebp
10031c06:	pop    ebx
10031c07:	mov    ecx,DWORD PTR [esp+0x60]
10031c0b:	xor    ecx,esp
10031c0d:	call   0x10042e97
10031c12:	add    esp,0x70
10031c15:	ret    
10031c16:	int3   
10031c17:	int3   
10031c18:	int3   
10031c19:	int3   
10031c1a:	int3   
10031c1b:	int3   
10031c1c:	int3   
10031c1d:	int3   
10031c1e:	int3   
10031c1f:	int3   
10031c20:	push   ebp
10031c21:	mov    ebp,esp
10031c23:	and    esp,0xfffffff8
10031c26:	push   0xffffffff
10031c28:	push   0x10063e9c
10031c2d:	mov    eax,fs:0x0
10031c33:	push   eax
10031c34:	sub    esp,0x1f0
10031c3a:	mov    eax,ds:0x1007e030
10031c3f:	xor    eax,esp
10031c41:	mov    DWORD PTR [esp+0x1e8],eax
10031c48:	push   ebx
10031c49:	push   esi
10031c4a:	push   edi
10031c4b:	mov    eax,ds:0x1007e030
10031c50:	xor    eax,esp
10031c52:	push   eax
10031c53:	lea    eax,[esp+0x200]
10031c5a:	mov    fs:0x0,eax
10031c60:	mov    eax,DWORD PTR [ebp+0x8]
10031c63:	mov    esi,DWORD PTR [ebp+0xc]
10031c66:	mov    DWORD PTR [esp+0x1c],ecx
10031c6a:	mov    DWORD PTR [esp+0x14],eax
10031c6e:	mov    eax,DWORD PTR [ebp+0x10]
10031c71:	lea    ecx,[esp+0x60]
10031c75:	xor    ebx,ebx
10031c77:	push   ecx
10031c78:	mov    DWORD PTR [esp+0x1c],edx
10031c7c:	mov    DWORD PTR [esp+0x24],eax
10031c80:	mov    DWORD PTR [esp+0x28],ebx
10031c84:	call   0x100310e0
10031c89:	add    esp,0x4
10031c8c:	mov    edi,eax
10031c8e:	push   esi
10031c8f:	lea    ecx,[esp+0x48]
10031c93:	mov    DWORD PTR [esp+0x20c],ebx
10031c9a:	call   0x10031000
10031c9f:	add    esp,0x4
10031ca2:	mov    DWORD PTR [esp+0x10],eax
10031ca6:	push   0x1007321c
10031cab:	push   0x4
10031cad:	push   0x10073248
10031cb2:	mov    BYTE PTR [esp+0x214],0x1
10031cba:	call   0x10004258
10031cbf:	mov    esi,eax
10031cc1:	add    esp,0xc
10031cc4:	push   esi
10031cc5:	mov    DWORD PTR [esp+0x44],0xf
10031ccd:	mov    DWORD PTR [esp+0x40],ebx
10031cd1:	mov    BYTE PTR [esp+0x30],bl
10031cd5:	call   0x10043010
10031cda:	add    esp,0x4
10031cdd:	push   eax
10031cde:	push   esi
10031cdf:	lea    ecx,[esp+0x30]
10031ce3:	call   0x1000133b
10031ce8:	mov    BYTE PTR [esp+0x208],0x2
10031cf0:	mov    edx,DWORD PTR [esp+0x10]
10031cf4:	push   edx
10031cf5:	lea    eax,[esp+0x2c]
10031cf9:	push   eax
10031cfa:	lea    ecx,[esp+0xbc]
10031d01:	push   ecx
10031d02:	call   0x100064d6
10031d07:	add    esp,0xc
10031d0a:	push   0x10073218
10031d0f:	push   eax
10031d10:	lea    edx,[esp+0xa0]
10031d17:	push   edx
10031d18:	mov    BYTE PTR [esp+0x214],0x3
10031d20:	call   0x10006490
10031d25:	add    esp,0xc
10031d28:	push   edi
10031d29:	push   eax
10031d2a:	lea    eax,[esp+0x1e4]
10031d31:	push   eax
10031d32:	mov    BYTE PTR [esp+0x214],0x4
10031d3a:	call   0x100064d6
10031d3f:	add    esp,0xc
10031d42:	mov    edi,0x10
10031d47:	cmp    DWORD PTR [esp+0xb0],edi
10031d4e:	jb     0x10031d60
10031d50:	mov    ecx,DWORD PTR [esp+0x9c]
10031d57:	push   ecx
10031d58:	call   0x10042e92
10031d5d:	add    esp,0x4
10031d60:	mov    esi,0xf
10031d65:	mov    DWORD PTR [esp+0xb0],esi
10031d6c:	mov    DWORD PTR [esp+0xac],ebx
10031d73:	mov    BYTE PTR [esp+0x9c],bl
10031d7a:	cmp    DWORD PTR [esp+0xcc],edi
10031d81:	jb     0x10031d93
10031d83:	mov    edx,DWORD PTR [esp+0xb8]
10031d8a:	push   edx
10031d8b:	call   0x10042e92
10031d90:	add    esp,0x4
10031d93:	mov    DWORD PTR [esp+0xcc],esi
10031d9a:	mov    DWORD PTR [esp+0xc8],ebx
10031da1:	mov    BYTE PTR [esp+0xb8],bl
10031da8:	cmp    DWORD PTR [esp+0x40],edi
10031dac:	jb     0x10031dbb
10031dae:	mov    eax,DWORD PTR [esp+0x2c]
10031db2:	push   eax
10031db3:	call   0x10042e92
10031db8:	add    esp,0x4
10031dbb:	mov    DWORD PTR [esp+0x40],esi
10031dbf:	mov    DWORD PTR [esp+0x3c],ebx
10031dc3:	mov    BYTE PTR [esp+0x2c],bl
10031dc7:	cmp    DWORD PTR [esp+0x5c],edi
10031dcb:	jb     0x10031dda
10031dcd:	mov    ecx,DWORD PTR [esp+0x48]
10031dd1:	push   ecx
10031dd2:	call   0x10042e92
10031dd7:	add    esp,0x4
10031dda:	mov    DWORD PTR [esp+0x5c],esi
10031dde:	mov    DWORD PTR [esp+0x58],ebx
10031de2:	mov    BYTE PTR [esp+0x48],bl
10031de6:	mov    BYTE PTR [esp+0x208],0xa
10031dee:	cmp    DWORD PTR [esp+0x78],edi
10031df2:	jb     0x10031e01
10031df4:	mov    edx,DWORD PTR [esp+0x64]
10031df8:	push   edx
10031df9:	call   0x10042e92
10031dfe:	add    esp,0x4
10031e01:	mov    eax,ds:0x10080dc0
10031e06:	push   ebx
10031e07:	push   eax
10031e08:	lea    ecx,[esp+0x1c8]
10031e0f:	push   ecx
10031e10:	lea    ecx,[esp+0x1e8]
10031e17:	mov    DWORD PTR [esp+0x84],esi
10031e1e:	mov    DWORD PTR [esp+0x80],ebx
10031e25:	mov    BYTE PTR [esp+0x70],bl
10031e29:	call   0x10039d20
10031e2e:	add    esp,0xc
10031e31:	mov    BYTE PTR [esp+0x208],0xb
10031e39:	push   0x10071e60
10031e3e:	mov    DWORD PTR [esp+0x124],esi
10031e45:	mov    DWORD PTR [esp+0x120],ebx
10031e4c:	mov    BYTE PTR [esp+0x110],bl
10031e53:	call   0x10043010
10031e58:	add    esp,0x4
10031e5b:	push   eax
10031e5c:	push   0x10071e60
10031e61:	lea    ecx,[esp+0x110]
10031e68:	call   0x1000133b
10031e6d:	push   0x1006cd08
10031e72:	mov    BYTE PTR [esp+0x20c],0xc
10031e7a:	call   0x10043010
10031e7f:	mov    edi,DWORD PTR [esp+0x1c]
10031e83:	mov    esi,DWORD PTR [edi+0x14]
10031e86:	add    esp,0x4
10031e89:	cmp    esi,eax
10031e8b:	mov    DWORD PTR [esp+0x10],eax
10031e8f:	mov    ecx,esi
10031e91:	jae    0x10031e95
10031e93:	mov    eax,esi
10031e95:	cmp    DWORD PTR [edi+0x18],0x10
10031e99:	jb     0x10031ea0
10031e9b:	mov    ecx,DWORD PTR [edi+0x4]
10031e9e:	jmp    0x10031ea3
10031ea0:	lea    ecx,[edi+0x4]
10031ea3:	push   eax
10031ea4:	push   0x1006cd08
10031ea9:	push   ecx
10031eaa:	call   0x10043726
10031eaf:	add    esp,0xc
10031eb2:	cmp    eax,ebx
10031eb4:	jne    0x10031ecb
10031eb6:	mov    eax,DWORD PTR [esp+0x10]
10031eba:	cmp    esi,eax
10031ebc:	jb     0x10031ecb
10031ebe:	xor    edx,edx
10031ec0:	cmp    esi,eax
10031ec2:	setne  dl
10031ec5:	mov    eax,edx
10031ec7:	cmp    eax,ebx
10031ec9:	je     0x10031f1d
10031ecb:	movzx  eax,BYTE PTR ds:0x10080d48
10031ed2:	mov    ecx,DWORD PTR ds:0x10080dbc
10031ed8:	push   eax
10031ed9:	push   ecx
10031eda:	lea    edx,[esp+0x84]
10031ee1:	push   edx
10031ee2:	mov    ecx,edi
10031ee4:	call   0x10039d20
10031ee9:	add    esp,0xc
10031eec:	push   0xffffffff
10031eee:	push   ebx
10031eef:	lea    esi,[esp+0x110]
10031ef6:	mov    BYTE PTR [esp+0x210],0xd
10031efe:	call   0x10004c80
10031f03:	cmp    DWORD PTR [esp+0x94],0x10
10031f0b:	jb     0x10031f1d
10031f0d:	mov    eax,DWORD PTR [esp+0x80]
10031f14:	push   eax
10031f15:	call   0x10042e92
10031f1a:	add    esp,0x4
10031f1d:	mov    DWORD PTR [esp+0x10],ebx
10031f21:	mov    ecx,DWORD PTR [esp+0x1c]
10031f25:	push   0x10073250
10031f2a:	push   ecx
10031f2b:	lea    edx,[esp+0x84]
10031f32:	push   edx
10031f33:	mov    BYTE PTR [esp+0x214],0xe
10031f3b:	call   0x10006490
10031f40:	add    esp,0xc
10031f43:	lea    ecx,[esp+0x1dc]
10031f4a:	push   ecx
10031f4b:	push   eax
10031f4c:	lea    edx,[esp+0x4c]
10031f50:	push   edx
10031f51:	mov    BYTE PTR [esp+0x214],0xf
10031f59:	call   0x100064d6
10031f5e:	add    esp,0xc
10031f61:	push   edi
10031f62:	push   eax
10031f63:	lea    eax,[esp+0x68]
10031f67:	push   eax
10031f68:	mov    BYTE PTR [esp+0x214],0x10
10031f70:	call   0x100064d6
10031f75:	mov    esi,0x10
10031f7a:	add    esp,0xc
10031f7d:	cmp    DWORD PTR [eax+0x18],esi
10031f80:	jb     0x10031f87
10031f82:	mov    eax,DWORD PTR [eax+0x4]
10031f85:	jmp    0x10031f8a
10031f87:	add    eax,0x4
10031f8a:	push   eax
10031f8b:	call   0x10002080
10031f90:	add    esp,0x4
10031f93:	cmp    DWORD PTR [esp+0x78],esi
10031f97:	jb     0x10031fa6
10031f99:	mov    ecx,DWORD PTR [esp+0x64]
10031f9d:	push   ecx
10031f9e:	call   0x10042e92
10031fa3:	add    esp,0x4
10031fa6:	cmp    DWORD PTR [esp+0x5c],esi
10031faa:	mov    edi,0xf
10031faf:	mov    DWORD PTR [esp+0x78],edi
10031fb3:	mov    DWORD PTR [esp+0x74],ebx
10031fb7:	mov    BYTE PTR [esp+0x64],bl
10031fbb:	jb     0x10031fca
10031fbd:	mov    edx,DWORD PTR [esp+0x48]
10031fc1:	push   edx
10031fc2:	call   0x10042e92
10031fc7:	add    esp,0x4
10031fca:	cmp    DWORD PTR [esp+0x94],esi
10031fd1:	mov    DWORD PTR [esp+0x5c],edi
10031fd5:	mov    DWORD PTR [esp+0x58],ebx
10031fd9:	mov    BYTE PTR [esp+0x48],bl
10031fdd:	jb     0x10031fef
10031fdf:	mov    eax,DWORD PTR [esp+0x80]
10031fe6:	push   eax
10031fe7:	call   0x10042e92
10031fec:	add    esp,0x4
10031fef:	mov    DWORD PTR [esp+0x140],edi
10031ff6:	mov    DWORD PTR [esp+0x13c],ebx
10031ffd:	mov    BYTE PTR [esp+0x12c],bl
10032004:	mov    DWORD PTR [esp+0x160],edi
1003200b:	mov    DWORD PTR [esp+0x15c],ebx
10032012:	mov    BYTE PTR [esp+0x14c],bl
10032019:	mov    DWORD PTR [esp+0x17c],edi
10032020:	mov    DWORD PTR [esp+0x178],ebx
10032027:	mov    BYTE PTR [esp+0x168],bl
1003202e:	mov    DWORD PTR [esp+0x198],edi
10032035:	mov    DWORD PTR [esp+0x194],ebx
1003203c:	mov    BYTE PTR [esp+0x184],bl
10032043:	mov    DWORD PTR [esp+0x1b4],edi
1003204a:	mov    DWORD PTR [esp+0x1b0],ebx
10032051:	mov    BYTE PTR [esp+0x1a0],bl
10032058:	lea    ecx,[esp+0x124]
1003205f:	push   ecx
10032060:	mov    ecx,DWORD PTR [esp+0x20]
10032064:	mov    BYTE PTR [esp+0x20c],0x11
1003206c:	call   0x10032c20
10032071:	add    esp,0x4
10032074:	test   al,al
10032076:	jne    0x100321e7
1003207c:	cmp    DWORD PTR [esp+0x1b4],esi
10032083:	mov    edx,DWORD PTR [esp+0x14]
10032087:	mov    DWORD PTR [edx],ebx
10032089:	jb     0x1003209b
1003208b:	mov    eax,DWORD PTR [esp+0x1a0]
10032092:	push   eax
10032093:	call   0x10042e92
10032098:	add    esp,0x4
1003209b:	cmp    DWORD PTR [esp+0x198],esi
100320a2:	mov    DWORD PTR [esp+0x1b4],edi
100320a9:	mov    DWORD PTR [esp+0x1b0],ebx
100320b0:	mov    BYTE PTR [esp+0x1a0],bl
100320b7:	jb     0x100320c9
100320b9:	mov    ecx,DWORD PTR [esp+0x184]
100320c0:	push   ecx
100320c1:	call   0x10042e92
100320c6:	add    esp,0x4
100320c9:	cmp    DWORD PTR [esp+0x17c],esi
100320d0:	mov    DWORD PTR [esp+0x198],edi
100320d7:	mov    DWORD PTR [esp+0x194],ebx
100320de:	mov    BYTE PTR [esp+0x184],bl
100320e5:	jb     0x100320f7
100320e7:	mov    edx,DWORD PTR [esp+0x168]
100320ee:	push   edx
100320ef:	call   0x10042e92
100320f4:	add    esp,0x4
100320f7:	cmp    DWORD PTR [esp+0x160],esi
100320fe:	mov    DWORD PTR [esp+0x17c],edi
10032105:	mov    DWORD PTR [esp+0x178],ebx
1003210c:	mov    BYTE PTR [esp+0x168],bl
10032113:	jb     0x10032125
10032115:	mov    eax,DWORD PTR [esp+0x14c]
1003211c:	push   eax
1003211d:	call   0x10042e92
10032122:	add    esp,0x4
10032125:	cmp    DWORD PTR [esp+0x140],esi
1003212c:	mov    DWORD PTR [esp+0x160],edi
10032133:	mov    DWORD PTR [esp+0x15c],ebx
1003213a:	mov    BYTE PTR [esp+0x14c],bl
10032141:	jb     0x10032153
10032143:	mov    ecx,DWORD PTR [esp+0x12c]
1003214a:	push   ecx
1003214b:	call   0x10042e92
10032150:	add    esp,0x4
10032153:	push   ebx
10032154:	mov    DWORD PTR [esp+0x144],edi
1003215b:	mov    DWORD PTR [esp+0x140],ebx
10032162:	mov    BYTE PTR [esp+0x130],bl
10032169:	call   0x10042e92
1003216e:	add    esp,0x4
10032171:	cmp    DWORD PTR [esp+0x120],esi
10032178:	jb     0x1003218a
1003217a:	mov    edx,DWORD PTR [esp+0x10c]
10032181:	push   edx
10032182:	call   0x10042e92
10032187:	add    esp,0x4
1003218a:	cmp    DWORD PTR [esp+0x1d8],esi
10032191:	mov    DWORD PTR [esp+0x120],edi
10032198:	mov    DWORD PTR [esp+0x11c],ebx
1003219f:	mov    BYTE PTR [esp+0x10c],bl
100321a6:	jb     0x100321b8
100321a8:	mov    eax,DWORD PTR [esp+0x1c4]
100321af:	push   eax
100321b0:	call   0x10042e92
100321b5:	add    esp,0x4
100321b8:	cmp    DWORD PTR [esp+0x1f4],esi
100321bf:	mov    DWORD PTR [esp+0x1d8],edi
100321c6:	mov    DWORD PTR [esp+0x1d4],ebx
100321cd:	mov    BYTE PTR [esp+0x1c4],bl
100321d4:	jb     0x100326fd
100321da:	mov    ecx,DWORD PTR [esp+0x1e0]
100321e1:	push   ecx
100321e2:	jmp    0x100326f5
100321e7:	push   0x10072a10
100321ec:	mov    DWORD PTR [esp+0xb4],edi
100321f3:	mov    DWORD PTR [esp+0xb0],ebx
100321fa:	mov    BYTE PTR [esp+0xa0],bl
10032201:	call   0x10043010
10032206:	add    esp,0x4
10032209:	push   eax
1003220a:	push   0x10072a10
1003220f:	lea    ecx,[esp+0xa0]
10032216:	call   0x1000133b
1003221b:	lea    edx,[esp+0x1dc]
10032222:	push   edx
10032223:	lea    edi,[esp+0x80]
1003222a:	mov    BYTE PTR [esp+0x20c],0x12
10032232:	call   0x100348d0
10032237:	add    esp,0x4
1003223a:	mov    ecx,DWORD PTR [esp+0x18]
1003223e:	push   ecx
1003223f:	push   eax
10032240:	lea    edx,[esp+0xd8]
10032247:	push   edx
10032248:	mov    BYTE PTR [esp+0x214],0x13
10032250:	call   0x100064d6
10032255:	add    esp,0xc
10032258:	lea    eax,[esp+0x108]
1003225f:	push   eax
10032260:	lea    ecx,[esp+0x1c4]
10032267:	push   ecx
10032268:	lea    edx,[esp+0xbc]
1003226f:	push   edx
10032270:	mov    BYTE PTR [esp+0x214],0x14
10032278:	call   0x100064d6
1003227d:	add    esp,0xc
10032280:	mov    edx,eax
10032282:	lea    ecx,[esp+0x44]
10032286:	mov    BYTE PTR [esp+0x208],0x15
1003228e:	call   0x100316b0
10032293:	mov    edi,eax
10032295:	push   0x10073254
1003229a:	push   0x1b
1003229c:	push   0x10073280
100322a1:	mov    BYTE PTR [esp+0x214],0x16
100322a9:	call   0x10004258
100322ae:	mov    esi,eax
100322b0:	add    esp,0xc
100322b3:	push   esi
100322b4:	mov    DWORD PTR [esp+0x44],0xf
100322bc:	mov    DWORD PTR [esp+0x40],ebx
100322c0:	mov    BYTE PTR [esp+0x30],bl
100322c4:	call   0x10043010
100322c9:	add    esp,0x4
100322cc:	push   eax
100322cd:	push   esi
100322ce:	lea    ecx,[esp+0x30]
100322d2:	call   0x1000133b
100322d7:	push   edi
100322d8:	lea    eax,[esp+0x2c]
100322dc:	push   eax
100322dd:	lea    ecx,[esp+0x68]
100322e1:	push   ecx
100322e2:	mov    BYTE PTR [esp+0x214],0x17
100322ea:	call   0x100064d6
100322ef:	add    esp,0xc
100322f2:	mov    edx,DWORD PTR [ebp+0x14]
100322f5:	mov    ecx,DWORD PTR [esp+0x20]
100322f9:	push   edx
100322fa:	push   ecx
100322fb:	push   ebx
100322fc:	push   ebx
100322fd:	push   eax
100322fe:	lea    edx,[esp+0xac]
10032305:	mov    BYTE PTR [esp+0x21c],0x18
1003230d:	mov    eax,DWORD PTR [esp+0x158]
10032314:	push   edx
10032315:	push   eax
10032316:	lea    ecx,[esp+0x144]
1003231d:	push   ecx
1003231e:	lea    edx,[esp+0x44]
10032322:	push   edx
10032323:	call   0x1000c75e
10032328:	mov    ecx,DWORD PTR [eax]
1003232a:	mov    edi,ecx
1003232c:	add    esp,0x24
1003232f:	cmp    edi,ebx
10032331:	mov    DWORD PTR [eax],ebx
10032333:	je     0x1003233e
10032335:	push   ebx
10032336:	call   0x10042e92
1003233b:	add    esp,0x4
1003233e:	mov    edx,DWORD PTR [esp+0x24]
10032342:	push   edx
10032343:	mov    DWORD PTR [esp+0x14],edi
10032347:	call   0x10042e92
1003234c:	mov    esi,0x10
10032351:	add    esp,0x4
10032354:	cmp    DWORD PTR [esp+0x78],esi
10032358:	jb     0x10032367
1003235a:	mov    eax,DWORD PTR [esp+0x64]
1003235e:	push   eax
1003235f:	call   0x10042e92
10032364:	add    esp,0x4
10032367:	cmp    DWORD PTR [esp+0x40],esi
1003236b:	mov    DWORD PTR [esp+0x78],0xf
10032373:	mov    DWORD PTR [esp+0x74],ebx
10032377:	mov    BYTE PTR [esp+0x64],bl
1003237b:	jb     0x1003238a
1003237d:	mov    ecx,DWORD PTR [esp+0x2c]
10032381:	push   ecx
10032382:	call   0x10042e92
10032387:	add    esp,0x4
1003238a:	cmp    DWORD PTR [esp+0x5c],esi
1003238e:	mov    DWORD PTR [esp+0x40],0xf
10032396:	mov    DWORD PTR [esp+0x3c],ebx
1003239a:	mov    BYTE PTR [esp+0x2c],bl
1003239e:	jb     0x100323ad
100323a0:	mov    edx,DWORD PTR [esp+0x48]
100323a4:	push   edx
100323a5:	call   0x10042e92
100323aa:	add    esp,0x4
100323ad:	cmp    DWORD PTR [esp+0xcc],esi
100323b4:	mov    DWORD PTR [esp+0x5c],0xf
100323bc:	mov    DWORD PTR [esp+0x58],ebx
100323c0:	mov    BYTE PTR [esp+0x48],bl
100323c4:	jb     0x100323d6
100323c6:	mov    eax,DWORD PTR [esp+0xb8]
100323cd:	push   eax
100323ce:	call   0x10042e92
100323d3:	add    esp,0x4
100323d6:	cmp    DWORD PTR [esp+0xe8],esi
100323dd:	mov    DWORD PTR [esp+0xcc],0xf
100323e8:	mov    DWORD PTR [esp+0xc8],ebx
100323ef:	mov    BYTE PTR [esp+0xb8],bl
100323f6:	jb     0x10032408
100323f8:	mov    ecx,DWORD PTR [esp+0xd4]
100323ff:	push   ecx
10032400:	call   0x10042e92
10032405:	add    esp,0x4
10032408:	cmp    DWORD PTR [esp+0x94],esi
1003240f:	mov    DWORD PTR [esp+0xe8],0xf
1003241a:	mov    DWORD PTR [esp+0xe4],ebx
10032421:	mov    BYTE PTR [esp+0xd4],bl
10032428:	jb     0x1003243a
1003242a:	mov    edx,DWORD PTR [esp+0x80]
10032431:	push   edx
10032432:	call   0x10042e92
10032437:	add    esp,0x4
1003243a:	mov    BYTE PTR [esp+0x208],0x11
10032442:	cmp    DWORD PTR [esp+0xb0],esi
10032449:	mov    DWORD PTR [esp+0x94],0xf
10032454:	mov    DWORD PTR [esp+0x90],ebx
1003245b:	mov    BYTE PTR [esp+0x80],bl
10032462:	jb     0x10032474
10032464:	mov    eax,DWORD PTR [esp+0x9c]
1003246b:	push   eax
1003246c:	call   0x10042e92
10032471:	add    esp,0x4
10032474:	cmp    edi,ebx
10032476:	jne    0x1003257a
1003247c:	mov    ecx,DWORD PTR [esp+0x1c]
10032480:	push   0x10073250
10032485:	push   ecx
10032486:	lea    edx,[esp+0xf4]
1003248d:	push   edx
1003248e:	call   0x10006490
10032493:	add    esp,0xc
10032496:	lea    ecx,[esp+0x1dc]
1003249d:	push   ecx
1003249e:	push   eax
1003249f:	lea    edx,[esp+0xd8]
100324a6:	push   edx
100324a7:	mov    BYTE PTR [esp+0x214],0x19
100324af:	call   0x100064d6
100324b4:	add    esp,0xc
100324b7:	mov    ecx,DWORD PTR [esp+0x18]
100324bb:	push   ecx
100324bc:	push   eax
100324bd:	lea    edx,[esp+0x84]
100324c4:	push   edx
100324c5:	mov    BYTE PTR [esp+0x214],0x1a
100324cd:	call   0x100064d6
100324d2:	add    esp,0xc
100324d5:	cmp    DWORD PTR [eax+0x18],esi
100324d8:	jb     0x100324df
100324da:	mov    eax,DWORD PTR [eax+0x4]
100324dd:	jmp    0x100324e2
100324df:	add    eax,0x4
100324e2:	push   eax
100324e3:	call   0x10002080
100324e8:	add    esp,0x4
100324eb:	cmp    DWORD PTR [esp+0x94],esi
100324f2:	jb     0x10032504
100324f4:	mov    eax,DWORD PTR [esp+0x80]
100324fb:	push   eax
100324fc:	call   0x10042e92
10032501:	add    esp,0x4
10032504:	cmp    DWORD PTR [esp+0xe8],esi
1003250b:	mov    DWORD PTR [esp+0x94],0xf
10032516:	mov    DWORD PTR [esp+0x90],ebx
1003251d:	mov    BYTE PTR [esp+0x80],bl
10032524:	jb     0x10032536
10032526:	mov    ecx,DWORD PTR [esp+0xd4]
1003252d:	push   ecx
1003252e:	call   0x10042e92
10032533:	add    esp,0x4
10032536:	mov    BYTE PTR [esp+0x208],0x11
1003253e:	cmp    DWORD PTR [esp+0x104],esi
10032545:	mov    DWORD PTR [esp+0xe8],0xf
10032550:	mov    DWORD PTR [esp+0xe4],ebx
10032557:	mov    BYTE PTR [esp+0xd4],bl
1003255e:	jb     0x10032570
10032560:	mov    edx,DWORD PTR [esp+0xf0]
10032567:	push   edx
10032568:	call   0x10042e92
1003256d:	add    esp,0x4
10032570:	push   0x5
10032572:	call   0x10037980
10032577:	add    esp,0x4
1003257a:	cmp    DWORD PTR [esp+0x1b4],esi
10032581:	mov    eax,DWORD PTR [esp+0x14]
10032585:	mov    DWORD PTR [eax],edi
10032587:	jb     0x10032599
10032589:	mov    ecx,DWORD PTR [esp+0x1a0]
10032590:	push   ecx
10032591:	call   0x10042e92
10032596:	add    esp,0x4
10032599:	cmp    DWORD PTR [esp+0x198],esi
100325a0:	mov    DWORD PTR [esp+0x1b4],0xf
100325ab:	mov    DWORD PTR [esp+0x1b0],ebx
100325b2:	mov    BYTE PTR [esp+0x1a0],bl
100325b9:	jb     0x100325cb
100325bb:	mov    edx,DWORD PTR [esp+0x184]
100325c2:	push   edx
100325c3:	call   0x10042e92
100325c8:	add    esp,0x4
100325cb:	cmp    DWORD PTR [esp+0x17c],esi
100325d2:	mov    DWORD PTR [esp+0x198],0xf
100325dd:	mov    DWORD PTR [esp+0x194],ebx
100325e4:	mov    BYTE PTR [esp+0x184],bl
100325eb:	jb     0x100325fd
100325ed:	mov    eax,DWORD PTR [esp+0x168]
100325f4:	push   eax
100325f5:	call   0x10042e92
100325fa:	add    esp,0x4
100325fd:	cmp    DWORD PTR [esp+0x160],esi
10032604:	mov    DWORD PTR [esp+0x17c],0xf
1003260f:	mov    DWORD PTR [esp+0x178],ebx
10032616:	mov    BYTE PTR [esp+0x168],bl
1003261d:	jb     0x1003262f
1003261f:	mov    ecx,DWORD PTR [esp+0x14c]
10032626:	push   ecx
10032627:	call   0x10042e92
1003262c:	add    esp,0x4
1003262f:	cmp    DWORD PTR [esp+0x140],esi
10032636:	mov    DWORD PTR [esp+0x160],0xf
10032641:	mov    DWORD PTR [esp+0x15c],ebx
10032648:	mov    BYTE PTR [esp+0x14c],bl
1003264f:	jb     0x10032661
10032651:	mov    edx,DWORD PTR [esp+0x12c]
10032658:	push   edx
10032659:	call   0x10042e92
1003265e:	add    esp,0x4
10032661:	push   ebx
10032662:	mov    DWORD PTR [esp+0x144],0xf
1003266d:	mov    DWORD PTR [esp+0x140],ebx
10032674:	mov    BYTE PTR [esp+0x130],bl
1003267b:	call   0x10042e92
10032680:	add    esp,0x4
10032683:	cmp    DWORD PTR [esp+0x120],esi
1003268a:	jb     0x1003269c
1003268c:	mov    eax,DWORD PTR [esp+0x10c]
10032693:	push   eax
10032694:	call   0x10042e92
10032699:	add    esp,0x4
1003269c:	cmp    DWORD PTR [esp+0x1d8],esi
100326a3:	mov    edi,0xf
100326a8:	mov    DWORD PTR [esp+0x120],edi
100326af:	mov    DWORD PTR [esp+0x11c],ebx
100326b6:	mov    BYTE PTR [esp+0x10c],bl
100326bd:	jb     0x100326cf
100326bf:	mov    ecx,DWORD PTR [esp+0x1c4]
100326c6:	push   ecx
100326c7:	call   0x10042e92
100326cc:	add    esp,0x4
100326cf:	cmp    DWORD PTR [esp+0x1f4],esi
100326d6:	mov    DWORD PTR [esp+0x1d8],edi
100326dd:	mov    DWORD PTR [esp+0x1d4],ebx
100326e4:	mov    BYTE PTR [esp+0x1c4],bl
100326eb:	jb     0x100326fd
100326ed:	mov    edx,DWORD PTR [esp+0x1e0]
100326f4:	push   edx
100326f5:	call   0x10042e92
100326fa:	add    esp,0x4
100326fd:	mov    eax,DWORD PTR [esp+0x14]
10032701:	mov    ecx,DWORD PTR [esp+0x200]
10032708:	mov    DWORD PTR fs:0x0,ecx
1003270f:	pop    ecx
10032710:	pop    edi
10032711:	pop    esi
10032712:	pop    ebx
10032713:	mov    ecx,DWORD PTR [esp+0x1e8]
1003271a:	xor    ecx,esp
1003271c:	call   0x10042e97
10032721:	mov    esp,ebp
10032723:	pop    ebp
10032724:	ret    
10032725:	int3   
10032726:	int3   
10032727:	int3   
10032728:	int3   
10032729:	int3   
1003272a:	int3   
1003272b:	int3   
1003272c:	int3   
1003272d:	int3   
1003272e:	int3   
1003272f:	int3   
10032730:	push   ebp
10032731:	mov    ebp,esp
10032733:	push   0xffffffff
10032735:	push   0x10060878
1003273a:	mov    eax,fs:0x0
10032740:	push   eax
10032741:	sub    esp,0x54
10032744:	mov    eax,ds:0x1007e030
10032749:	xor    eax,ebp
1003274b:	mov    DWORD PTR [ebp-0x10],eax
1003274e:	push   ebx
1003274f:	push   esi
10032750:	push   edi
10032751:	push   eax
10032752:	lea    eax,[ebp-0xc]
10032755:	mov    fs:0x0,eax
1003275b:	mov    eax,DWORD PTR [ebp+0x8]
1003275e:	mov    edi,DWORD PTR [ebp+0x14]
10032761:	mov    ecx,DWORD PTR [ebp+0x18]
10032764:	mov    edx,DWORD PTR [ebp+0x1c]
10032767:	mov    esi,DWORD PTR [ebp+0xc]
1003276a:	xor    ebx,ebx
1003276c:	mov    DWORD PTR [ebp-0x30],eax
1003276f:	mov    eax,DWORD PTR [ebp+0x24]
10032772:	mov    DWORD PTR [ebp-0x40],ebx
10032775:	mov    DWORD PTR [ebp-0x38],edi
10032778:	mov    DWORD PTR [ebp-0x48],ecx
1003277b:	mov    DWORD PTR [ebp-0x44],edx
1003277e:	mov    DWORD PTR [ebp-0x4c],eax
10032781:	mov    DWORD PTR [ebp-0x60],ebx
10032784:	mov    DWORD PTR [ebp-0x4],ebx
10032787:	call   DWORD PTR ds:0x1007efec
1003278d:	push   ebx
1003278e:	push   ebx
1003278f:	push   ebx
10032790:	push   ebx
10032791:	push   0x1007329c
10032796:	push   0x1a
10032798:	push   0x100732c0
1003279d:	mov    DWORD PTR [ebp-0x34],eax
100327a0:	call   0x10004417
100327a5:	add    esp,0xc
100327a8:	push   eax
100327a9:	call   DWORD PTR ds:0x10066374
100327af:	mov    ebx,eax
100327b1:	mov    DWORD PTR [ebp-0x3c],ebx
100327b4:	test   ebx,ebx
100327b6:	mov    BYTE PTR [ebp-0x4],0x1
100327ba:	jne    0x100327d3
100327bc:	mov    esi,DWORD PTR [ebp-0x30]
100327bf:	push   0x0
100327c1:	mov    DWORD PTR [esi],0x0
100327c7:	call   0x10042e92
100327cc:	mov    eax,esi
100327ce:	jmp    0x10032bf2
100327d3:	cmp    DWORD PTR [ebp+0x28],0xffffffff
100327d7:	je     0x10032829
100327d9:	push   0x8
100327db:	call   0x1004349e
100327e0:	add    esp,0x4
100327e3:	test   eax,eax
100327e5:	je     0x100327f1
100327e7:	mov    ecx,DWORD PTR [ebp+0x28]
100327ea:	mov    DWORD PTR [eax],ebx
100327ec:	mov    DWORD PTR [eax+0x4],ecx
100327ef:	jmp    0x100327f3
100327f1:	xor    eax,eax
100327f3:	push   0x0
100327f5:	push   0x0
100327f7:	push   eax
100327f8:	push   0x10030dd0
100327fd:	push   0x0
100327ff:	push   0x0
10032801:	call   DWORD PTR ds:0x10066098
10032807:	test   eax,eax
10032809:	jne    0x10032829
1003280b:	mov    esi,DWORD PTR [ebp-0x30]
1003280e:	push   ebx
1003280f:	mov    DWORD PTR [esi],0x0
10032815:	call   DWORD PTR ds:0x10066380
1003281b:	push   0x0
1003281d:	call   0x10042e92
10032822:	mov    eax,esi
10032824:	jmp    0x10032bf2
10032829:	call   0x10002080
1003282e:	cmp    DWORD PTR [esi+0x18],0x10
10032832:	jb     0x10032839
10032834:	mov    esi,DWORD PTR [esi+0x4]
10032837:	jmp    0x1003283c
10032839:	add    esi,0x4
1003283c:	test   esi,esi
1003283e:	jne    0x10032844
10032840:	xor    eax,eax
10032842:	jmp    0x10032876
10032844:	push   esi
10032845:	call   DWORD PTR ds:0x100660dc
1003284b:	mov    edi,eax
1003284d:	add    edi,0x1
10032850:	cmp    edi,0x3fffffff
10032856:	jle    0x1003285c
10032858:	xor    eax,eax
1003285a:	jmp    0x10032873
1003285c:	lea    eax,[edi+edi*1]
1003285f:	call   0x1004b6f0
10032864:	mov    edx,DWORD PTR [ebp-0x34]
10032867:	mov    eax,esp
10032869:	push   edx
1003286a:	push   edi
1003286b:	push   esi
1003286c:	mov    esi,eax
1003286e:	call   0x10006cb2
10032873:	mov    edi,DWORD PTR [ebp-0x38]
10032876:	mov    ecx,DWORD PTR [ebp+0x10]
10032879:	push   0x0
1003287b:	push   0x20000000
10032880:	push   0x3
10032882:	push   0x0
10032884:	push   0x0
10032886:	push   ecx
10032887:	push   eax
10032888:	push   ebx
10032889:	call   DWORD PTR ds:0x10066398
1003288f:	mov    ebx,eax
10032891:	mov    DWORD PTR [ebp-0x38],ebx
10032894:	test   ebx,ebx
10032896:	mov    BYTE PTR [ebp-0x4],0x2
1003289a:	je     0x100327bc
100328a0:	push   0x42f55106
100328a5:	push   0x100732f8
100328aa:	call   0x10004246
100328af:	push   eax
100328b0:	push   0x9
100328b2:	push   0x1007331c
100328b7:	call   0x10004417
100328bc:	push   0x105ec490
100328c1:	push   0x10073330
100328c6:	mov    DWORD PTR [ebp-0x5c],eax
100328c9:	call   0x10004246
100328ce:	push   0x157359f2
100328d3:	push   eax
100328d4:	call   0x10004246
100328d9:	push   eax
100328da:	push   0xb
100328dc:	push   0x10073370
100328e1:	call   0x10004417
100328e6:	push   0x1b5fb9fa
100328eb:	push   0x10073388
100328f0:	mov    DWORD PTR [ebp-0x58],eax
100328f3:	call   0x10004246
100328f8:	push   0x2a05ee8a
100328fd:	push   eax
100328fe:	call   0x10004246
10032903:	add    esp,0x40
10032906:	push   eax
10032907:	push   0xd
10032909:	push   0x100733b4
1003290e:	call   0x10004417
10032913:	add    esp,0xc
10032916:	mov    DWORD PTR [ebp-0x54],eax
10032919:	mov    DWORD PTR [ebp-0x50],0x0
10032920:	call   0x10002080
10032925:	cmp    DWORD PTR [edi+0x18],0x10
10032929:	jb     0x10032930
1003292b:	mov    esi,DWORD PTR [edi+0x4]
1003292e:	jmp    0x10032933
10032930:	lea    esi,[edi+0x4]
10032933:	test   esi,esi
10032935:	jne    0x1003293b
10032937:	xor    eax,eax
10032939:	jmp    0x1003296a
1003293b:	push   esi
1003293c:	call   DWORD PTR ds:0x100660dc
10032942:	mov    edi,eax
10032944:	add    edi,0x1
10032947:	cmp    edi,0x3fffffff
1003294d:	jle    0x10032953
1003294f:	xor    eax,eax
10032951:	jmp    0x1003296a
10032953:	lea    eax,[edi+edi*1]
10032956:	call   0x1004b6f0
1003295b:	mov    edx,DWORD PTR [ebp-0x34]
1003295e:	mov    eax,esp
10032960:	push   edx
10032961:	push   edi
10032962:	push   esi
10032963:	mov    esi,eax
10032965:	call   0x10006cb2
1003296a:	push   0x0
1003296c:	push   0x4080200
10032971:	lea    ecx,[ebp-0x5c]
10032974:	push   ecx
10032975:	push   0x0
10032977:	push   0x0
10032979:	push   eax
1003297a:	push   0x100733d0
1003297f:	push   0x3
10032981:	push   0x100733f8
10032986:	call   0x10004417
1003298b:	add    esp,0xc
1003298e:	push   eax
1003298f:	push   ebx
10032990:	call   DWORD PTR ds:0x10066384
10032996:	mov    DWORD PTR [ebp-0x3c],eax
10032999:	test   eax,eax
1003299b:	mov    BYTE PTR [ebp-0x4],0x3
1003299f:	je     0x1003280b
100329a5:	push   0x1006cd08
100329aa:	call   0x10043010
100329af:	mov    edi,DWORD PTR [ebp-0x48]
100329b2:	mov    esi,DWORD PTR [edi+0x14]
100329b5:	mov    ebx,eax
100329b7:	add    esp,0x4
100329ba:	cmp    esi,ebx
100329bc:	mov    eax,esi
100329be:	mov    ecx,esi
100329c0:	jb     0x100329c4
100329c2:	mov    ecx,ebx
100329c4:	cmp    DWORD PTR [edi+0x18],0x10
100329c8:	jb     0x100329d2
100329ca:	mov    eax,DWORD PTR [edi+0x4]
100329cd:	add    edi,0x4
100329d0:	jmp    0x100329d7
100329d2:	add    edi,0x4
100329d5:	mov    eax,edi
100329d7:	push   ecx
100329d8:	push   0x1006cd08
100329dd:	push   eax
100329de:	call   0x10043726
100329e3:	add    esp,0xc
100329e6:	test   eax,eax
100329e8:	jne    0x100329fb
100329ea:	cmp    esi,ebx
100329ec:	jb     0x100329fb
100329ee:	cmp    esi,ebx
100329f0:	setne  al
100329f3:	test   eax,eax
100329f5:	je     0x10032ac4
100329fb:	mov    esi,DWORD PTR [ebp-0x48]
100329fe:	push   esi
100329ff:	lea    ecx,[ebp-0x2c]
10032a02:	call   0x100011a7
10032a07:	cmp    DWORD PTR [esi+0x18],0x10
10032a0b:	jb     0x10032a11
10032a0d:	mov    esi,DWORD PTR [edi]
10032a0f:	jmp    0x10032a13
10032a11:	mov    esi,edi
10032a13:	test   esi,esi
10032a15:	jne    0x10032a1b
10032a17:	xor    eax,eax
10032a19:	jmp    0x10032a4a
10032a1b:	push   esi
10032a1c:	call   DWORD PTR ds:0x100660dc
10032a22:	mov    edi,eax
10032a24:	add    edi,0x1
10032a27:	cmp    edi,0x3fffffff
10032a2d:	jle    0x10032a33
10032a2f:	xor    eax,eax
10032a31:	jmp    0x10032a4a
10032a33:	lea    eax,[edi+edi*1]
10032a36:	call   0x1004b6f0
10032a3b:	mov    edx,DWORD PTR [ebp-0x34]
10032a3e:	mov    eax,esp
10032a40:	push   edx
10032a41:	push   edi
10032a42:	push   esi
10032a43:	mov    esi,eax
10032a45:	call   0x10006cb2
10032a4a:	mov    ebx,DWORD PTR [ebp-0x3c]
10032a4d:	push   0x1000000
10032a52:	push   0xffffffff
10032a54:	push   eax
10032a55:	push   ebx
10032a56:	call   DWORD PTR ds:0x10066388
10032a5c:	test   eax,eax
10032a5e:	jne    0x10032ab0
10032a60:	call   DWORD PTR ds:0x100660cc
10032a66:	cmp    DWORD PTR [ebp-0x14],0x10
10032a6a:	mov    edi,DWORD PTR [ebp-0x30]
10032a6d:	mov    DWORD PTR [edi],0x0
10032a73:	jb     0x10032a81
10032a75:	mov    eax,DWORD PTR [ebp-0x28]
10032a78:	push   eax
10032a79:	call   0x10042e92
10032a7e:	add    esp,0x4
10032a81:	mov    esi,DWORD PTR ds:0x10066380
10032a87:	push   ebx
10032a88:	mov    DWORD PTR [ebp-0x14],0xf
10032a8f:	mov    DWORD PTR [ebp-0x18],0x0
10032a96:	mov    BYTE PTR [ebp-0x28],0x0
10032a9a:	call   esi
10032a9c:	mov    ecx,DWORD PTR [ebp-0x38]
10032a9f:	push   ecx
10032aa0:	call   esi
10032aa2:	push   0x0
10032aa4:	call   0x10042e92
10032aa9:	mov    eax,edi
10032aab:	jmp    0x10032bf2
10032ab0:	cmp    DWORD PTR [ebp-0x14],0x10
10032ab4:	jb     0x10032ac7
10032ab6:	mov    edx,DWORD PTR [ebp-0x28]
10032ab9:	push   edx
10032aba:	call   0x10042e92
10032abf:	add    esp,0x4
10032ac2:	jmp    0x10032ac7
10032ac4:	mov    ebx,DWORD PTR [ebp-0x3c]
10032ac7:	mov    eax,DWORD PTR [ebp+0x20]
10032aca:	mov    ecx,DWORD PTR [ebp-0x44]
10032acd:	push   eax
10032ace:	push   ecx
10032acf:	push   0x0
10032ad1:	push   0x0
10032ad3:	push   ebx
10032ad4:	call   DWORD PTR ds:0x1006638c
10032ada:	test   eax,eax
10032adc:	jne    0x10032b0a
10032ade:	call   DWORD PTR ds:0x100660cc
10032ae4:	mov    edi,DWORD PTR [ebp-0x30]
10032ae7:	mov    esi,DWORD PTR ds:0x10066380
10032aed:	push   ebx
10032aee:	mov    DWORD PTR [edi],0x0
10032af4:	call   esi
10032af6:	mov    edx,DWORD PTR [ebp-0x38]
10032af9:	push   edx
10032afa:	call   esi
10032afc:	push   0x0
10032afe:	call   0x10042e92
10032b03:	mov    eax,edi
10032b05:	jmp    0x10032bf2
10032b0a:	push   0x400
10032b0f:	mov    DWORD PTR [ebp-0x34],0x400
10032b16:	xor    esi,esi
10032b18:	call   0x10043721
10032b1d:	mov    edi,eax
10032b1f:	add    esp,0x4
10032b22:	mov    DWORD PTR [ebp-0x44],edi
10032b25:	lea    eax,[ebp-0x40]
10032b28:	push   eax
10032b29:	push   0x400
10032b2e:	push   edi
10032b2f:	mov    BYTE PTR [ebp-0x4],0x4
10032b33:	push   ebx
10032b34:	mov    DWORD PTR [ebp-0x40],esi
10032b37:	call   DWORD PTR ds:0x10066394
10032b3d:	test   eax,eax
10032b3f:	je     0x10032ba9
10032b41:	mov    eax,DWORD PTR [ebp-0x40]
10032b44:	test   eax,eax
10032b46:	je     0x10032bb5
10032b48:	add    esi,eax
10032b4a:	lea    ecx,[esi-0x401]
10032b50:	cmp    ecx,0x1ffbfe
10032b56:	ja     0x10032b5b
10032b58:	mov    DWORD PTR [ebp-0x34],esi
10032b5b:	mov    edx,DWORD PTR [ebp-0x34]
10032b5e:	lea    eax,[esi+edx*1]
10032b61:	push   eax
10032b62:	call   0x10043721
10032b67:	push   esi
10032b68:	mov    ebx,eax
10032b6a:	push   edi
10032b6b:	push   ebx
10032b6c:	call   0x10045180
10032b71:	add    esp,0x10
10032b74:	cmp    ebx,edi
10032b76:	je     0x10032b81
10032b78:	push   edi
10032b79:	call   0x10042e92
10032b7e:	add    esp,0x4
10032b81:	mov    edi,ebx
10032b83:	push   0x0
10032b85:	mov    DWORD PTR [ebp-0x44],edi
10032b88:	call   0x10042e92
10032b8d:	mov    edx,DWORD PTR [ebp-0x34]
10032b90:	mov    eax,DWORD PTR [ebp-0x3c]
10032b93:	add    esp,0x4
10032b96:	lea    ecx,[ebp-0x40]
10032b99:	push   ecx
10032b9a:	push   edx
10032b9b:	add    ebx,esi
10032b9d:	push   ebx
10032b9e:	push   eax
10032b9f:	call   DWORD PTR ds:0x10066394
10032ba5:	test   eax,eax
10032ba7:	jne    0x10032b41
10032ba9:	mov    ebx,DWORD PTR [ebp-0x30]
10032bac:	mov    DWORD PTR [ebx],0x0
10032bb2:	push   edi
10032bb3:	jmp    0x10032bcf
10032bb5:	test   edi,edi
10032bb7:	je     0x10032bc3
10032bb9:	push   0x0
10032bbb:	call   0x10042e92
10032bc0:	add    esp,0x4
10032bc3:	mov    eax,DWORD PTR [ebp-0x4c]
10032bc6:	mov    ebx,DWORD PTR [ebp-0x30]
10032bc9:	mov    DWORD PTR [eax],esi
10032bcb:	mov    DWORD PTR [ebx],edi
10032bcd:	push   0x0
10032bcf:	call   0x10042e92
10032bd4:	mov    ecx,DWORD PTR [ebp-0x3c]
10032bd7:	mov    esi,DWORD PTR ds:0x10066380
10032bdd:	add    esp,0x4
10032be0:	push   ecx
10032be1:	call   esi
10032be3:	mov    edx,DWORD PTR [ebp-0x38]
10032be6:	push   edx
10032be7:	call   esi
10032be9:	push   0x0
10032beb:	call   0x10042e92
10032bf0:	mov    eax,ebx
10032bf2:	add    esp,0x4
10032bf5:	lea    esp,[ebp-0x70]
10032bf8:	mov    ecx,DWORD PTR [ebp-0xc]
10032bfb:	mov    DWORD PTR fs:0x0,ecx
10032c02:	pop    ecx
10032c03:	pop    edi
10032c04:	pop    esi
10032c05:	pop    ebx
10032c06:	mov    ecx,DWORD PTR [ebp-0x10]
10032c09:	xor    ecx,ebp
10032c0b:	call   0x10042e97
10032c10:	mov    esp,ebp
10032c12:	pop    ebp
10032c13:	ret    
10032c14:	int3   
10032c15:	int3   
10032c16:	int3   
10032c17:	int3   
10032c18:	int3   
10032c19:	int3   
10032c1a:	int3   
10032c1b:	int3   
10032c1c:	int3   
10032c1d:	int3   
10032c1e:	int3   
10032c1f:	int3   
10032c20:	push   ebp
10032c21:	lea    ebp,[esp-0x98]
10032c28:	sub    esp,0x98
10032c2e:	push   0xffffffff
10032c30:	push   0x10060820
10032c35:	mov    eax,fs:0x0
10032c3b:	push   eax
10032c3c:	sub    esp,0x50
10032c3f:	mov    eax,ds:0x1007e030
10032c44:	xor    eax,ebp
10032c46:	mov    DWORD PTR [ebp+0x94],eax
10032c4c:	push   ebx
10032c4d:	push   esi
10032c4e:	push   edi
10032c4f:	push   eax
10032c50:	lea    eax,[ebp-0xc]
10032c53:	mov    fs:0x0,eax
10032c59:	mov    eax,DWORD PTR [ebp+0xa0]
10032c5f:	xor    ebx,ebx
10032c61:	mov    edi,0xf
10032c66:	mov    esi,ecx
10032c68:	mov    DWORD PTR [ebp-0x20],eax
10032c6b:	mov    DWORD PTR [ebp+0x1c],edi
10032c6e:	mov    DWORD PTR [ebp+0x18],ebx
10032c71:	mov    BYTE PTR [ebp+0x8],bl
10032c74:	mov    DWORD PTR [ebp+0x3c],edi
10032c77:	mov    DWORD PTR [ebp+0x38],ebx
10032c7a:	mov    BYTE PTR [ebp+0x28],bl
10032c7d:	mov    DWORD PTR [ebp+0x58],edi
10032c80:	mov    DWORD PTR [ebp+0x54],ebx
10032c83:	mov    BYTE PTR [ebp+0x44],bl
10032c86:	mov    DWORD PTR [ebp+0x74],edi
10032c89:	mov    DWORD PTR [ebp+0x70],ebx
10032c8c:	mov    BYTE PTR [ebp+0x60],bl
10032c8f:	mov    DWORD PTR [ebp+0x90],edi
10032c95:	mov    DWORD PTR [ebp+0x8c],ebx
10032c9b:	mov    BYTE PTR [ebp+0x7c],bl
10032c9e:	push   0x38
10032ca0:	lea    ecx,[ebp-0x58]
10032ca3:	push   ebx
10032ca4:	push   ecx
10032ca5:	mov    DWORD PTR [ebp-0x4],ebx
10032ca8:	call   0x10045c00
10032cad:	mov    eax,0x1
10032cb2:	add    esp,0xc
10032cb5:	mov    DWORD PTR [ebp-0x5c],0x3c
10032cbc:	mov    DWORD PTR [ebp-0x54],eax
10032cbf:	mov    DWORD PTR [ebp-0x48],eax
10032cc2:	mov    DWORD PTR [ebp-0x3c],eax
10032cc5:	mov    DWORD PTR [ebp-0x34],eax
10032cc8:	mov    DWORD PTR [ebp-0x2c],eax
10032ccb:	mov    DWORD PTR [ebp-0x24],eax
10032cce:	call   DWORD PTR ds:0x1007efec
10032cd4:	mov    DWORD PTR [ebp-0x18],eax
10032cd7:	mov    eax,DWORD PTR [esi+0x14]
10032cda:	xor    ecx,ecx
10032cdc:	add    eax,0x1
10032cdf:	mov    edx,0x2
10032ce4:	mul    edx
10032ce6:	seto   cl
10032ce9:	neg    ecx
10032ceb:	or     ecx,eax
10032ced:	push   ecx
10032cee:	call   0x10043721
10032cf3:	add    esp,0x4
10032cf6:	mov    DWORD PTR [ebp-0x10],eax
10032cf9:	mov    BYTE PTR [ebp-0x4],0x1
10032cfd:	cmp    DWORD PTR [esi+0x18],0x10
10032d01:	jb     0x10032d08
10032d03:	mov    eax,DWORD PTR [esi+0x4]
10032d06:	jmp    0x10032d0b
10032d08:	lea    eax,[esi+0x4]
10032d0b:	cmp    eax,ebx
10032d0d:	mov    DWORD PTR [ebp-0x14],eax
10032d10:	je     0x10032d5e
10032d12:	push   eax
10032d13:	call   DWORD PTR ds:0x100660dc
10032d19:	add    eax,0x1
10032d1c:	cmp    eax,0x3fffffff
10032d21:	mov    DWORD PTR [ebp-0x1c],eax
10032d24:	jg     0x10032d5e
10032d26:	add    eax,eax
10032d28:	call   0x1004b6f0
10032d2d:	mov    edi,esp
10032d2f:	cmp    edi,ebx
10032d31:	je     0x10032d59
10032d33:	mov    ecx,DWORD PTR [ebp-0x1c]
10032d36:	mov    edx,DWORD PTR [ebp-0x14]
10032d39:	mov    eax,DWORD PTR [ebp-0x18]
10032d3c:	push   ecx
10032d3d:	push   edi
10032d3e:	push   0xffffffff
10032d40:	push   edx
10032d41:	push   ebx
10032d42:	push   eax
10032d43:	mov    WORD PTR [edi],bx
10032d46:	call   DWORD PTR ds:0x1006608c
10032d4c:	neg    eax
10032d4e:	sbb    eax,eax
10032d50:	and    eax,edi
10032d52:	mov    edi,0xf
10032d57:	jmp    0x10032d60
10032d59:	mov    edi,0xf
10032d5e:	xor    eax,eax
10032d60:	mov    edx,DWORD PTR [ebp-0x10]
10032d63:	movzx  ecx,WORD PTR [eax]
10032d66:	mov    WORD PTR [edx],cx
10032d69:	add    eax,0x2
10032d6c:	add    edx,0x2
10032d6f:	cmp    cx,bx
10032d72:	jne    0x10032d63
10032d74:	mov    esi,DWORD PTR [esi+0x14]
10032d77:	lea    ecx,[ebp-0x5c]
10032d7a:	push   ecx
10032d7b:	push   ebx
10032d7c:	push   esi
10032d7d:	mov    esi,DWORD PTR [ebp-0x10]
10032d80:	push   esi
10032d81:	call   DWORD PTR ds:0x10066390
10032d87:	test   eax,eax
10032d89:	jne    0x10032e26
10032d8f:	push   esi
10032d90:	call   0x10042e92
10032d95:	mov    esi,0x10
10032d9a:	add    esp,0x4
10032d9d:	cmp    DWORD PTR [ebp+0x90],esi
10032da3:	jb     0x10032db1
10032da5:	mov    edx,DWORD PTR [ebp+0x7c]
10032da8:	push   edx
10032da9:	call   0x10042e92
10032dae:	add    esp,0x4
10032db1:	cmp    DWORD PTR [ebp+0x74],esi
10032db4:	mov    DWORD PTR [ebp+0x90],edi
10032dba:	mov    DWORD PTR [ebp+0x8c],ebx
10032dc0:	mov    BYTE PTR [ebp+0x7c],bl
10032dc3:	jb     0x10032dd1
10032dc5:	mov    eax,DWORD PTR [ebp+0x60]
10032dc8:	push   eax
10032dc9:	call   0x10042e92
10032dce:	add    esp,0x4
10032dd1:	cmp    DWORD PTR [ebp+0x58],esi
10032dd4:	mov    DWORD PTR [ebp+0x74],edi
10032dd7:	mov    DWORD PTR [ebp+0x70],ebx
10032dda:	mov    BYTE PTR [ebp+0x60],bl
10032ddd:	jb     0x10032deb
10032ddf:	mov    ecx,DWORD PTR [ebp+0x44]
10032de2:	push   ecx
10032de3:	call   0x10042e92
10032de8:	add    esp,0x4
10032deb:	cmp    DWORD PTR [ebp+0x3c],esi
10032dee:	mov    DWORD PTR [ebp+0x58],edi
10032df1:	mov    DWORD PTR [ebp+0x54],ebx
10032df4:	mov    BYTE PTR [ebp+0x44],bl
10032df7:	jb     0x10032e05
10032df9:	mov    edx,DWORD PTR [ebp+0x28]
10032dfc:	push   edx
10032dfd:	call   0x10042e92
10032e02:	add    esp,0x4
10032e05:	cmp    DWORD PTR [ebp+0x1c],esi
10032e08:	mov    DWORD PTR [ebp+0x3c],edi
10032e0b:	mov    DWORD PTR [ebp+0x38],ebx
10032e0e:	mov    BYTE PTR [ebp+0x28],bl
10032e11:	jb     0x10032e1f
10032e13:	mov    eax,DWORD PTR [ebp+0x8]
10032e16:	push   eax
10032e17:	call   0x10042e92
10032e1c:	add    esp,0x4
10032e1f:	xor    al,al
10032e21:	jmp    0x10032f27
10032e26:	mov    ecx,DWORD PTR [ebp-0x50]
10032e29:	mov    eax,DWORD PTR [ebp-0x48]
10032e2c:	mov    dx,WORD PTR [ebp-0x44]
10032e30:	mov    DWORD PTR [ebp+0x0],ecx
10032e33:	push   eax
10032e34:	lea    ecx,[ebp+0x4]
10032e37:	push   ecx
10032e38:	mov    ecx,DWORD PTR [ebp-0x4c]
10032e3b:	mov    WORD PTR [ebp+0x20],dx
10032e3f:	call   0x10032f50
10032e44:	mov    edx,DWORD PTR [ebp-0x3c]
10032e47:	mov    ecx,DWORD PTR [ebp-0x40]
10032e4a:	push   edx
10032e4b:	lea    eax,[ebp+0x24]
10032e4e:	push   eax
10032e4f:	call   0x10032f50
10032e54:	mov    ecx,DWORD PTR [ebp-0x34]
10032e57:	push   ecx
10032e58:	mov    ecx,DWORD PTR [ebp-0x38]
10032e5b:	lea    edx,[ebp+0x40]
10032e5e:	push   edx
10032e5f:	call   0x10032f50
10032e64:	mov    eax,DWORD PTR [ebp-0x2c]
10032e67:	push   eax
10032e68:	lea    ecx,[ebp+0x5c]
10032e6b:	push   ecx
10032e6c:	mov    ecx,DWORD PTR [ebp-0x30]
10032e6f:	call   0x10032f50
10032e74:	mov    edx,DWORD PTR [ebp-0x24]
10032e77:	mov    ecx,DWORD PTR [ebp-0x28]
10032e7a:	push   edx
10032e7b:	lea    eax,[ebp+0x78]
10032e7e:	push   eax
10032e7f:	call   0x10032f50
10032e84:	mov    esi,DWORD PTR [ebp-0x20]
10032e87:	add    esp,0x28
10032e8a:	lea    eax,[ebp+0x0]
10032e8d:	call   0x10033100
10032e92:	mov    ecx,DWORD PTR [ebp-0x10]
10032e95:	push   ecx
10032e96:	call   0x10042e92
10032e9b:	mov    esi,0x10
10032ea0:	add    esp,0x4
10032ea3:	cmp    DWORD PTR [ebp+0x90],esi
10032ea9:	jb     0x10032eb7
10032eab:	mov    edx,DWORD PTR [ebp+0x7c]
10032eae:	push   edx
10032eaf:	call   0x10042e92
10032eb4:	add    esp,0x4
10032eb7:	cmp    DWORD PTR [ebp+0x74],esi
10032eba:	mov    DWORD PTR [ebp+0x90],edi
10032ec0:	mov    DWORD PTR [ebp+0x8c],ebx
10032ec6:	mov    BYTE PTR [ebp+0x7c],bl
10032ec9:	jb     0x10032ed7
10032ecb:	mov    eax,DWORD PTR [ebp+0x60]
10032ece:	push   eax
10032ecf:	call   0x10042e92
10032ed4:	add    esp,0x4
10032ed7:	cmp    DWORD PTR [ebp+0x58],esi
10032eda:	mov    DWORD PTR [ebp+0x74],edi
10032edd:	mov    DWORD PTR [ebp+0x70],ebx
10032ee0:	mov    BYTE PTR [ebp+0x60],bl
10032ee3:	jb     0x10032ef1
10032ee5:	mov    ecx,DWORD PTR [ebp+0x44]
10032ee8:	push   ecx
10032ee9:	call   0x10042e92
10032eee:	add    esp,0x4
10032ef1:	cmp    DWORD PTR [ebp+0x3c],esi
10032ef4:	mov    DWORD PTR [ebp+0x58],edi
10032ef7:	mov    DWORD PTR [ebp+0x54],ebx
10032efa:	mov    BYTE PTR [ebp+0x44],bl
10032efd:	jb     0x10032f0b
10032eff:	mov    edx,DWORD PTR [ebp+0x28]
10032f02:	push   edx
10032f03:	call   0x10042e92
10032f08:	add    esp,0x4
10032f0b:	cmp    DWORD PTR [ebp+0x1c],esi
10032f0e:	mov    DWORD PTR [ebp+0x3c],edi
10032f11:	mov    DWORD PTR [ebp+0x38],ebx
10032f14:	mov    BYTE PTR [ebp+0x28],bl
10032f17:	jb     0x10032f25
10032f19:	mov    eax,DWORD PTR [ebp+0x8]
10032f1c:	push   eax
10032f1d:	call   0x10042e92
10032f22:	add    esp,0x4
10032f25:	mov    al,0x1
10032f27:	lea    esp,[ebp-0x6c]
10032f2a:	mov    ecx,DWORD PTR [ebp-0xc]
10032f2d:	mov    DWORD PTR fs:0x0,ecx
10032f34:	pop    ecx
10032f35:	pop    edi
10032f36:	pop    esi
10032f37:	pop    ebx
10032f38:	mov    ecx,DWORD PTR [ebp+0x94]
10032f3e:	xor    ecx,ebp
10032f40:	call   0x10042e97
10032f45:	add    ebp,0x98
10032f4b:	mov    esp,ebp
10032f4d:	pop    ebp
10032f4e:	ret    
10032f4f:	int3   
10032f50:	push   ebp
10032f51:	mov    ebp,esp
10032f53:	push   0xffffffff
10032f55:	push   0x100607ea
10032f5a:	mov    eax,fs:0x0
10032f60:	push   eax
10032f61:	sub    esp,0x4c
10032f64:	mov    eax,ds:0x1007e030
10032f69:	xor    eax,ebp
10032f6b:	mov    DWORD PTR [ebp-0x10],eax
10032f6e:	push   ebx
10032f6f:	push   esi
10032f70:	push   edi
10032f71:	push   eax
10032f72:	lea    eax,[ebp-0xc]
10032f75:	mov    fs:0x0,eax
10032f7b:	mov    ebx,ecx
10032f7d:	xor    esi,esi
10032f7f:	mov    DWORD PTR [ebp-0x1c],esi
10032f82:	call   DWORD PTR ds:0x1007efec
10032f88:	xor    edi,edi
10032f8a:	mov    DWORD PTR [ebp-0x18],eax
10032f8d:	mov    DWORD PTR [ebp-0x14],edi
10032f90:	cmp    DWORD PTR [ebp+0xc],esi
10032f93:	mov    DWORD PTR [ebp-0x4],esi
10032f96:	je     0x10033034
10032f9c:	cmp    ebx,esi
10032f9e:	je     0x10033034
10032fa4:	push   ebx
10032fa5:	call   DWORD PTR ds:0x100660c4
10032fab:	push   esi
10032fac:	add    eax,0x1
10032faf:	cdq    
10032fb0:	push   0x2
10032fb2:	push   edx
10032fb3:	push   eax
10032fb4:	call   0x1004f400
10032fb9:	mov    edi,eax
10032fbb:	add    eax,0x80000000
10032fc0:	adc    edx,esi
10032fc2:	mov    DWORD PTR [ebp-0x1c],edx
10032fc5:	jne    0x10032fcc
10032fc7:	cmp    eax,0xffffffff
10032fca:	jbe    0x10032fd0
10032fcc:	xor    eax,eax
10032fce:	jmp    0x10033008
10032fd0:	cmp    edi,0x400
10032fd6:	jg     0x10032ff0
10032fd8:	push   edi
10032fd9:	call   0x10006c3d
10032fde:	add    esp,0x4
10032fe1:	test   al,al
10032fe3:	je     0x10032ff0
10032fe5:	mov    eax,edi
10032fe7:	call   0x1004b6f0
10032fec:	mov    eax,esp
10032fee:	jmp    0x10032ff9
10032ff0:	push   edi
10032ff1:	lea    esi,[ebp-0x14]
10032ff4:	call   0x100075b6
10032ff9:	mov    ecx,DWORD PTR [ebp-0x18]
10032ffc:	push   ecx
10032ffd:	push   edi
10032ffe:	push   ebx
10032fff:	mov    esi,eax
10033001:	call   0x10002434
10033006:	xor    esi,esi
10033008:	mov    edx,DWORD PTR [ebp+0xc]
1003300b:	push   edx
1003300c:	push   eax
1003300d:	lea    ecx,[ebp-0x58]
10033010:	mov    DWORD PTR [ebp-0x40],0xf
10033017:	mov    DWORD PTR [ebp-0x44],esi
1003301a:	mov    BYTE PTR [ebp-0x54],0x0
1003301e:	call   0x1000133b
10033023:	mov    BYTE PTR [ebp-0x4],0x1
10033027:	mov    edi,DWORD PTR [ebp-0x14]
1003302a:	lea    eax,[ebp-0x58]
1003302d:	mov    ebx,0x1
10033032:	jmp    0x10033068
10033034:	push   0x1006cd08
10033039:	mov    DWORD PTR [ebp-0x24],0xf
10033040:	mov    DWORD PTR [ebp-0x28],esi
10033043:	mov    BYTE PTR [ebp-0x38],0x0
10033047:	call   0x10043010
1003304c:	add    esp,0x4
1003304f:	push   eax
10033050:	push   0x1006cd08
10033055:	lea    ecx,[ebp-0x3c]
10033058:	call   0x1000133b
1003305d:	mov    ebx,0x2
10033062:	lea    eax,[ebp-0x3c]
10033065:	mov    DWORD PTR [ebp-0x4],ebx
10033068:	mov    ecx,DWORD PTR [ebp+0x8]
1003306b:	push   0xffffffff
1003306d:	push   esi
1003306e:	push   eax
1003306f:	mov    DWORD PTR [ebp-0x1c],ebx
10033072:	call   0x10001241
10033077:	test   bl,0x2
1003307a:	je     0x1003309f
1003307c:	and    ebx,0xfffffffd
1003307f:	cmp    DWORD PTR [ebp-0x24],0x10
10033083:	jb     0x10033091
10033085:	mov    eax,DWORD PTR [ebp-0x38]
10033088:	push   eax
10033089:	call   0x10042e92
1003308e:	add    esp,0x4
10033091:	mov    DWORD PTR [ebp-0x24],0xf
10033098:	mov    DWORD PTR [ebp-0x28],esi
1003309b:	mov    BYTE PTR [ebp-0x38],0x0
1003309f:	test   bl,0x1
100330a2:	je     0x100330b6
100330a4:	cmp    DWORD PTR [ebp-0x40],0x10
100330a8:	jb     0x100330b6
100330aa:	mov    ecx,DWORD PTR [ebp-0x54]
100330ad:	push   ecx
100330ae:	call   0x10042e92
100330b3:	add    esp,0x4
100330b6:	cmp    edi,esi
100330b8:	je     0x100330d7
100330ba:	jmp    0x100330c3
100330bc:	lea    esp,[esp+0x0]
100330c0:	mov    edi,DWORD PTR [ebp-0x14]
100330c3:	mov    eax,edi
100330c5:	mov    edi,DWORD PTR [edi]
100330c7:	push   eax
100330c8:	mov    DWORD PTR [ebp-0x14],edi
100330cb:	call   0x10043508
100330d0:	add    esp,0x4
100330d3:	cmp    edi,esi
100330d5:	jne    0x100330c0
100330d7:	lea    esp,[ebp-0x68]
100330da:	mov    ecx,DWORD PTR [ebp-0xc]
100330dd:	mov    DWORD PTR fs:0x0,ecx
100330e4:	pop    ecx
100330e5:	pop    edi
100330e6:	pop    esi
100330e7:	pop    ebx
100330e8:	mov    ecx,DWORD PTR [ebp-0x10]
100330eb:	xor    ecx,ebp
100330ed:	call   0x10042e97
100330f2:	mov    esp,ebp
100330f4:	pop    ebp
100330f5:	ret    
100330f6:	int3   
100330f7:	int3   
100330f8:	int3   
100330f9:	int3   
100330fa:	int3   
100330fb:	int3   
100330fc:	int3   
100330fd:	int3   
100330fe:	int3   
100330ff:	int3   
10033100:	push   edi
10033101:	mov    edi,eax
10033103:	mov    eax,DWORD PTR [edi]
10033105:	push   0xffffffff
10033107:	push   0x0
10033109:	lea    ecx,[edi+0x4]
1003310c:	push   ecx
1003310d:	lea    ecx,[esi+0x4]
10033110:	mov    DWORD PTR [esi],eax
10033112:	call   0x10001241
10033117:	mov    dx,WORD PTR [edi+0x20]
1003311b:	push   0xffffffff
1003311d:	push   0x0
1003311f:	lea    eax,[edi+0x24]
10033122:	push   eax
10033123:	lea    ecx,[esi+0x24]
10033126:	mov    WORD PTR [esi+0x20],dx
1003312a:	call   0x10001241
1003312f:	push   0xffffffff
10033131:	push   0x0
10033133:	lea    ecx,[edi+0x40]
10033136:	push   ecx
10033137:	lea    ecx,[esi+0x40]
1003313a:	call   0x10001241
1003313f:	push   0xffffffff
10033141:	push   0x0
10033143:	lea    edx,[edi+0x5c]
10033146:	push   edx
10033147:	lea    ecx,[esi+0x5c]
1003314a:	call   0x10001241
1003314f:	push   0xffffffff
10033151:	push   0x0
10033153:	add    edi,0x78
10033156:	push   edi
10033157:	lea    ecx,[esi+0x78]
1003315a:	call   0x10001241
1003315f:	mov    eax,esi
10033161:	pop    edi
10033162:	ret    
10033163:	int3   
10033164:	int3   
10033165:	int3   
10033166:	int3   
10033167:	int3   
10033168:	int3   
10033169:	int3   
1003316a:	int3   
1003316b:	int3   
1003316c:	int3   
1003316d:	int3   
1003316e:	int3   
1003316f:	int3   
10033170:	push   0xffffffff
10033172:	push   0x10061879
10033177:	mov    eax,fs:0x0
1003317d:	push   eax
1003317e:	sub    esp,0x4c
10033181:	push   ebx
10033182:	push   esi
10033183:	push   edi
10033184:	mov    eax,ds:0x1007e030
10033189:	xor    eax,esp
1003318b:	push   eax
1003318c:	lea    eax,[esp+0x5c]
10033190:	mov    fs:0x0,eax
10033196:	mov    edi,DWORD PTR [esp+0x6c]
1003319a:	xor    ebx,ebx
1003319c:	mov    DWORD PTR [esp+0x64],ebx
100331a0:	mov    DWORD PTR [esp+0x10],ebx
100331a4:	mov    eax,ds:0x10080a74
100331a9:	mov    edx,DWORD PTR [eax+0xc]
100331ac:	mov    ecx,0x10080a74
100331b1:	call   edx
100331b3:	add    eax,0x10
100331b6:	mov    DWORD PTR [edi],eax
100331b8:	mov    DWORD PTR [esp+0x64],ebx
100331bc:	mov    ecx,0x1
100331c1:	sub    ecx,DWORD PTR [eax-0x4]
100331c4:	mov    eax,DWORD PTR [eax-0x8]
100331c7:	sub    eax,0x800
100331cc:	or     eax,ecx
100331ce:	mov    DWORD PTR [esp+0x10],0x1
100331d6:	jge    0x100331e4
100331d8:	mov    eax,0x800
100331dd:	mov    ecx,edi
100331df:	call   0x10002262
100331e4:	mov    eax,DWORD PTR [edi]
100331e6:	push   0x800
100331eb:	push   eax
100331ec:	call   DWORD PTR ds:0x10066258
100331f2:	test   eax,eax
100331f4:	jne    0x10033281
100331fa:	push   0x10073400
100331ff:	push   0x1c
10033201:	push   0x10073428
10033206:	call   0x10004258
1003320b:	mov    esi,eax
1003320d:	mov    edi,0xf
10033212:	push   esi
10033213:	mov    DWORD PTR [esp+0x3c],edi
10033217:	mov    DWORD PTR [esp+0x38],ebx
1003321b:	mov    BYTE PTR [esp+0x28],bl
1003321f:	call   0x10043010
10033224:	add    esp,0x10
10033227:	push   eax
10033228:	push   esi
10033229:	lea    ecx,[esp+0x1c]
1003322d:	call   0x1000133b
10033232:	lea    ecx,[esp+0x30]
10033236:	mov    DWORD PTR [esp+0x64],0x1
1003323e:	call   0x10042f01
10033243:	push   0xffffffff
10033245:	mov    BYTE PTR [esp+0x68],0x2
1003324a:	push   ebx
1003324b:	lea    eax,[esp+0x1c]
1003324f:	push   eax
10033250:	lea    ecx,[esp+0x48]
10033254:	mov    DWORD PTR [esp+0x3c],0x10073574
1003325c:	mov    DWORD PTR [esp+0x60],edi
10033260:	mov    DWORD PTR [esp+0x5c],ebx
10033264:	mov    BYTE PTR [esp+0x4c],bl
10033268:	call   0x10001241
1003326d:	push   0x10074d64
10033272:	lea    ecx,[esp+0x34]
10033276:	push   ecx
10033277:	mov    BYTE PTR [esp+0x6c],0x1
1003327c:	call   0x100479b4
10033281:	mov    eax,DWORD PTR [edi]
10033283:	cmp    eax,ebx
10033285:	jne    0x1003328b
10033287:	xor    eax,eax
10033289:	jmp    0x10033298
1003328b:	push   eax
1003328c:	call   0x100436f3
10033291:	add    esp,0x4
10033294:	cmp    eax,ebx
10033296:	jl     0x100332dc
10033298:	mov    ecx,DWORD PTR [edi]
1003329a:	cmp    eax,DWORD PTR [ecx-0x8]
1003329d:	jg     0x100332dc
1003329f:	mov    DWORD PTR [ecx-0xc],eax
100332a2:	mov    edx,DWORD PTR [edi]
100332a4:	mov    WORD PTR [edx+eax*2],bx
100332a8:	mov    ecx,DWORD PTR [edi]
100332aa:	mov    edx,DWORD PTR [ecx-0xc]
100332ad:	lea    eax,[edx-0x1]
100332b0:	cmp    eax,ebx
100332b2:	jl     0x100332dc
100332b4:	cmp    eax,edx
100332b6:	jg     0x100332dc
100332b8:	movzx  eax,WORD PTR [ecx+eax*2]
100332bc:	cmp    ax,0x5c
100332c0:	je     0x100332c7
100332c2:	call   0x100345f0
100332c7:	mov    eax,edi
100332c9:	mov    ecx,DWORD PTR [esp+0x5c]
100332cd:	mov    DWORD PTR fs:0x0,ecx
100332d4:	pop    ecx
100332d5:	pop    edi
100332d6:	pop    esi
100332d7:	pop    ebx
100332d8:	add    esp,0x58
100332db:	ret    
100332dc:	push   0x80070057
100332e1:	call   0x10001f45
100332e6:	int3   
100332e7:	int3   
100332e8:	int3   
100332e9:	int3   
100332ea:	int3   
100332eb:	int3   
100332ec:	int3   
100332ed:	int3   
100332ee:	int3   
100332ef:	int3   
100332f0:	push   0xffffffff
100332f2:	push   0x10062689
100332f7:	mov    eax,fs:0x0
100332fd:	push   eax
100332fe:	sub    esp,0x50
10033301:	push   ebx
10033302:	push   ebp
10033303:	push   esi
10033304:	push   edi
10033305:	mov    eax,ds:0x1007e030
1003330a:	xor    eax,esp
1003330c:	push   eax
1003330d:	lea    eax,[esp+0x64]
10033311:	mov    fs:0x0,eax
10033317:	mov    esi,DWORD PTR [esp+0x74]
1003331b:	xor    ebx,ebx
1003331d:	mov    DWORD PTR [esp+0x6c],ebx
10033321:	push   esi
10033322:	mov    DWORD PTR [esp+0x1c],ebx
10033326:	call   0x10033170
1003332b:	add    esp,0x4
1003332e:	mov    DWORD PTR [esp+0x6c],ebx
10033332:	mov    eax,DWORD PTR [esi]
10033334:	mov    ebp,0x1
10033339:	sub    eax,0x10
1003333c:	cmp    DWORD PTR [eax+0xc],ebp
1003333f:	mov    DWORD PTR [esp+0x18],ebp
10033343:	jle    0x1003334f
10033345:	mov    eax,DWORD PTR [eax+0x4]
10033348:	push   eax
10033349:	push   esi
1003334a:	call   0x100022ab
1003334f:	mov    eax,DWORD PTR [esi]
10033351:	push   0x5c
10033353:	push   eax
10033354:	call   0x10058347
10033359:	mov    edi,eax
1003335b:	add    esp,0x8
1003335e:	cmp    edi,ebx
10033360:	jne    0x100333f7
10033366:	push   0x2ef760cc
1003336b:	push   0x10073448
10033370:	call   0x10004246
10033375:	push   eax
10033376:	push   0x18
10033378:	push   0x1007346c
1003337d:	call   0x10004258
10033382:	mov    esi,eax
10033384:	add    esp,0x14
10033387:	mov    edi,0xf
1003338c:	push   esi
1003338d:	mov    DWORD PTR [esp+0x38],edi
10033391:	mov    DWORD PTR [esp+0x34],ebx
10033395:	mov    BYTE PTR [esp+0x24],bl
10033399:	call   0x10043010
1003339e:	add    esp,0x4
100333a1:	push   eax
100333a2:	push   esi
100333a3:	lea    ecx,[esp+0x24]
100333a7:	call   0x1000133b
100333ac:	lea    ecx,[esp+0x38]
100333b0:	mov    DWORD PTR [esp+0x6c],ebp
100333b4:	call   0x10042f01
100333b9:	push   0xffffffff
100333bb:	mov    BYTE PTR [esp+0x70],0x2
100333c0:	push   ebx
100333c1:	lea    ecx,[esp+0x24]
100333c5:	push   ecx
100333c6:	lea    ecx,[esp+0x50]
100333ca:	mov    DWORD PTR [esp+0x44],0x10073574
100333d2:	mov    DWORD PTR [esp+0x68],edi
100333d6:	mov    DWORD PTR [esp+0x64],ebx
100333da:	mov    BYTE PTR [esp+0x54],bl
100333de:	call   0x10001241
100333e3:	push   0x10074d64
100333e8:	lea    edx,[esp+0x3c]
100333ec:	push   edx
100333ed:	mov    BYTE PTR [esp+0x74],0x1
100333f2:	call   0x100479b4
100333f7:	mov    eax,DWORD PTR [esi]
100333f9:	sub    eax,0x10
100333fc:	cmp    DWORD PTR [eax+0xc],ebp
100333ff:	jle    0x1003340b
10033401:	mov    eax,DWORD PTR [eax+0x4]
10033404:	push   eax
10033405:	push   esi
10033406:	call   0x100022ab
1003340b:	mov    eax,DWORD PTR [esi]
1003340d:	sub    edi,eax
1003340f:	sar    edi,1
10033411:	add    edi,ebp
10033413:	cmp    eax,ebx
10033415:	jne    0x1003341b
10033417:	xor    eax,eax
10033419:	jmp    0x10033428
1003341b:	push   eax
1003341c:	call   0x100436f3
10033421:	add    esp,0x4
10033424:	cmp    eax,ebx
10033426:	jl     0x1003347e
10033428:	mov    ecx,DWORD PTR [esi]
1003342a:	cmp    eax,DWORD PTR [ecx-0x8]
1003342d:	jg     0x1003347e
1003342f:	mov    DWORD PTR [ecx-0xc],eax
10033432:	mov    ecx,DWORD PTR [esi]
10033434:	mov    WORD PTR [ecx+eax*2],bx
10033438:	mov    eax,DWORD PTR [esi]
1003343a:	sub    eax,0x10
1003343d:	mov    ecx,ebp
1003343f:	sub    ecx,DWORD PTR [eax+0xc]
10033442:	mov    eax,DWORD PTR [eax+0x8]
10033445:	sub    eax,edi
10033447:	or     eax,ecx
10033449:	jge    0x10033454
1003344b:	mov    eax,edi
1003344d:	mov    ecx,esi
1003344f:	call   0x10002262
10033454:	cmp    edi,ebx
10033456:	jl     0x1003347e
10033458:	mov    eax,DWORD PTR [esi]
1003345a:	cmp    edi,DWORD PTR [eax-0x8]
1003345d:	jg     0x1003347e
1003345f:	mov    DWORD PTR [eax-0xc],edi
10033462:	mov    edx,DWORD PTR [esi]
10033464:	mov    WORD PTR [edx+edi*2],bx
10033468:	mov    eax,esi
1003346a:	mov    ecx,DWORD PTR [esp+0x64]
1003346e:	mov    DWORD PTR fs:0x0,ecx
10033475:	pop    ecx
10033476:	pop    edi
10033477:	pop    esi
10033478:	pop    ebp
10033479:	pop    ebx
1003347a:	add    esp,0x5c
1003347d:	ret    
1003347e:	push   0x80070057
10033483:	call   0x10001f45
10033488:	int3   
10033489:	int3   
1003348a:	int3   
1003348b:	int3   
1003348c:	int3   
1003348d:	int3   
1003348e:	int3   
1003348f:	int3   
10033490:	push   ebp
10033491:	mov    ebp,esp
10033493:	push   0xffffffff
10033495:	push   0x1006324a
1003349a:	mov    eax,fs:0x0
100334a0:	push   eax
100334a1:	sub    esp,0x134
100334a7:	mov    eax,ds:0x1007e030
100334ac:	xor    eax,ebp
100334ae:	mov    DWORD PTR [ebp-0x10],eax
100334b1:	push   ebx
100334b2:	push   esi
100334b3:	push   edi
100334b4:	push   eax
100334b5:	lea    eax,[ebp-0xc]
100334b8:	mov    fs:0x0,eax
100334be:	call   DWORD PTR ds:0x1007efec
100334c4:	mov    DWORD PTR [ebp-0x84],eax
100334ca:	lea    eax,[ebp-0x7c]
100334cd:	push   eax
100334ce:	call   0x100332f0
100334d3:	add    esp,0x4
100334d6:	xor    ebx,ebx
100334d8:	push   ebx
100334d9:	push   ebx
100334da:	lea    ecx,[ebp-0x8c]
100334e0:	push   ecx
100334e1:	lea    edx,[ebp-0x88]
100334e7:	push   edx
100334e8:	lea    eax,[ebp-0x80]
100334eb:	push   eax
100334ec:	push   ebx
100334ed:	mov    DWORD PTR [ebp-0x4],ebx
100334f0:	mov    ecx,DWORD PTR [ebp-0x7c]
100334f3:	push   ebx
100334f4:	push   ecx
100334f5:	call   DWORD PTR ds:0x1006625c
100334fb:	test   eax,eax
100334fd:	jne    0x10033680
10033503:	call   DWORD PTR ds:0x100660cc
10033509:	push   0xa
1003350b:	lea    edx,[ebp-0x78]
1003350e:	push   edx
1003350f:	push   eax
10033510:	call   0x10045b1e
10033515:	mov    eax,DWORD PTR [ebp-0x7c]
10033518:	add    esp,0xc
1003351b:	cmp    eax,ebx
1003351d:	mov    esi,eax
1003351f:	jne    0x10033525
10033521:	xor    edi,edi
10033523:	jmp    0x10033558
10033525:	push   eax
10033526:	call   DWORD PTR ds:0x100660c4
1003352c:	add    eax,0x1
1003352f:	cmp    eax,0x3fffffff
10033534:	jle    0x1003353a
10033536:	xor    edi,edi
10033538:	jmp    0x10033558
1003353a:	lea    edi,[eax+eax*1]
1003353d:	mov    eax,edi
1003353f:	call   0x1004b6f0
10033544:	mov    ecx,DWORD PTR [ebp-0x84]
1003354a:	mov    eax,esp
1003354c:	push   ecx
1003354d:	push   edi
1003354e:	push   esi
1003354f:	mov    esi,eax
10033551:	call   0x10002434
10033556:	mov    edi,eax
10033558:	push   0x100734d4
1003355d:	push   0x21
1003355f:	push   0x100734fc
10033564:	call   0x10004258
10033569:	mov    esi,eax
1003356b:	add    esp,0xc
1003356e:	push   esi
1003356f:	mov    DWORD PTR [ebp-0x90],0xf
10033579:	mov    DWORD PTR [ebp-0x94],ebx
1003357f:	mov    BYTE PTR [ebp-0xa4],bl
10033585:	call   0x10043010
1003358a:	add    esp,0x4
1003358d:	push   eax
1003358e:	push   esi
1003358f:	lea    ecx,[ebp-0xa8]
10033595:	call   0x1000133b
1003359a:	push   edi
1003359b:	lea    edx,[ebp-0xa8]
100335a1:	push   edx
100335a2:	lea    eax,[ebp-0x140]
100335a8:	push   eax
100335a9:	mov    BYTE PTR [ebp-0x4],0x1
100335ad:	call   0x10006490
100335b2:	add    esp,0xc
100335b5:	mov    esi,eax
100335b7:	push   0x74216842
100335bc:	push   0x1007348c
100335c1:	mov    BYTE PTR [ebp-0x4],0x2
100335c5:	call   0x10004246
100335ca:	push   0x6db2c694
100335cf:	push   eax
100335d0:	call   0x10004246
100335d5:	push   eax
100335d6:	push   0x7
100335d8:	push   0x100734cc
100335dd:	call   0x10004258
100335e2:	add    esp,0x1c
100335e5:	push   eax
100335e6:	lea    ecx,[ebp-0x124]
100335ec:	push   esi
100335ed:	push   ecx
100335ee:	call   0x10006490
100335f3:	add    esp,0xc
100335f6:	lea    edx,[ebp-0x78]
100335f9:	push   edx
100335fa:	push   eax
100335fb:	lea    eax,[ebp-0x108]
10033601:	push   eax
10033602:	mov    BYTE PTR [ebp-0x4],0x3
10033606:	call   0x10006490
1003360b:	add    esp,0xc
1003360e:	push   0x10073488
10033613:	push   eax
10033614:	lea    ecx,[ebp-0xec]
1003361a:	push   ecx
1003361b:	mov    BYTE PTR [ebp-0x4],0x4
1003361f:	call   0x10006490
10033624:	add    esp,0xc
10033627:	mov    esi,eax
10033629:	lea    ecx,[ebp-0xd0]
1003362f:	mov    BYTE PTR [ebp-0x4],0x5
10033633:	call   0x10042f01
10033638:	push   0xffffffff
1003363a:	mov    BYTE PTR [ebp-0x4],0x6
1003363e:	push   ebx
1003363f:	push   esi
10033640:	lea    ecx,[ebp-0xc4]
10033646:	mov    DWORD PTR [ebp-0xd0],0x10073574
10033650:	mov    DWORD PTR [ebp-0xac],0xf
1003365a:	mov    DWORD PTR [ebp-0xb0],ebx
10033660:	mov    BYTE PTR [ebp-0xc0],bl
10033666:	call   0x10001241
1003366b:	mov    BYTE PTR [ebp-0x4],0x5
1003366f:	push   0x10074d64
10033674:	lea    edx,[ebp-0xd0]
1003367a:	push   edx
1003367b:	call   0x100479b4
10033680:	mov    esi,DWORD PTR [ebp-0x80]
10033683:	mov    DWORD PTR [ebp-0x4],0xffffffff
1003368a:	mov    eax,DWORD PTR [ebp-0x7c]
1003368d:	add    eax,0xfffffff0
10033690:	lea    ecx,[eax+0xc]
10033693:	or     edx,0xffffffff
10033696:	lock xadd DWORD PTR [ecx],edx
1003369a:	dec    edx
1003369b:	test   edx,edx
1003369d:	jg     0x100336a9
1003369f:	mov    ecx,DWORD PTR [eax]
100336a1:	mov    edx,DWORD PTR [ecx]
100336a3:	push   eax
100336a4:	mov    eax,DWORD PTR [edx+0x4]
100336a7:	call   eax
100336a9:	mov    eax,esi
100336ab:	lea    esp,[ebp-0x150]
100336b1:	mov    ecx,DWORD PTR [ebp-0xc]
100336b4:	mov    DWORD PTR fs:0x0,ecx
100336bb:	pop    ecx
100336bc:	pop    edi
100336bd:	pop    esi
100336be:	pop    ebx
100336bf:	mov    ecx,DWORD PTR [ebp-0x10]
100336c2:	xor    ecx,ebp
100336c4:	call   0x10042e97
100336c9:	mov    esp,ebp
100336cb:	pop    ebp
100336cc:	ret    
100336cd:	int3   
100336ce:	int3   
100336cf:	int3   
100336d0:	push   ebp
100336d1:	mov    ebp,esp
100336d3:	sub    esp,0x50
100336d6:	mov    eax,ds:0x1007e030
100336db:	xor    eax,ebp
100336dd:	mov    DWORD PTR [ebp-0x4],eax
100336e0:	push   ebx
100336e1:	push   esi
100336e2:	mov    DWORD PTR [ebp-0x4c],0x0
100336e9:	call   0x10033490
100336ee:	lea    ebx,[ebp-0x48]
100336f1:	mov    edx,eax
100336f3:	call   0x1002f450
100336f8:	call   DWORD PTR ds:0x1007efec
100336fe:	mov    DWORD PTR [ebp-0x4c],eax
10033701:	mov    eax,ebx
10033703:	push   eax
10033704:	call   DWORD PTR ds:0x100660c4
1003370a:	add    eax,0x1
1003370d:	cmp    eax,0x3fffffff
10033712:	jg     0x10033749
10033714:	lea    esi,[eax+eax*1]
10033717:	mov    eax,esi
10033719:	call   0x1004b6f0
1003371e:	mov    ebx,esp
10033720:	test   ebx,ebx
10033722:	je     0x10033749
10033724:	mov    edx,DWORD PTR [ebp-0x4c]
10033727:	push   0x0
10033729:	push   0x0
1003372b:	push   esi
1003372c:	push   ebx
1003372d:	push   0xffffffff
1003372f:	lea    ecx,[ebp-0x48]
10033732:	push   ecx
10033733:	push   0x0
10033735:	push   edx
10033736:	mov    BYTE PTR [ebx],0x0
10033739:	call   DWORD PTR ds:0x100660b8
1003373f:	mov    esi,eax
10033741:	neg    esi
10033743:	sbb    esi,esi
10033745:	and    esi,ebx
10033747:	jmp    0x1003374b
10033749:	xor    esi,esi
1003374b:	xor    eax,eax
1003374d:	mov    DWORD PTR [edi+0x18],0xf
10033754:	mov    DWORD PTR [edi+0x14],eax
10033757:	push   esi
10033758:	mov    BYTE PTR [edi+0x4],al
1003375b:	call   0x10043010
10033760:	add    esp,0x4
10033763:	push   eax
10033764:	push   esi
10033765:	mov    ecx,edi
10033767:	call   0x1000133b
1003376c:	mov    eax,edi
1003376e:	lea    esp,[ebp-0x58]
10033771:	pop    esi
10033772:	pop    ebx
10033773:	mov    ecx,DWORD PTR [ebp-0x4]
10033776:	xor    ecx,ebp
10033778:	call   0x10042e97
1003377d:	mov    esp,ebp
1003377f:	pop    ebp
10033780:	ret    
10033781:	int3   
10033782:	int3   
10033783:	int3   
10033784:	int3   
10033785:	int3   
10033786:	int3   
10033787:	int3   
10033788:	int3   
10033789:	int3   
1003378a:	int3   
1003378b:	int3   
1003378c:	int3   
1003378d:	int3   
1003378e:	int3   
1003378f:	int3   
10033790:	push   esi
10033791:	push   edi
10033792:	push   ebx
10033793:	call   DWORD PTR ds:0x10066080
10033799:	mov    esi,eax
1003379b:	test   esi,esi
1003379d:	jne    0x100337a1
1003379f:	pop    esi
100337a0:	ret    
100337a1:	push   edi
100337a2:	push   ebx
100337a3:	call   DWORD PTR ds:0x10066088
100337a9:	mov    ecx,DWORD PTR [esp+0x8]
100337ad:	push   esi
100337ae:	mov    DWORD PTR [ecx],eax
100337b0:	call   DWORD PTR ds:0x10066090
100337b6:	pop    esi
100337b7:	ret    
100337b8:	int3   
100337b9:	int3   
100337ba:	int3   
100337bb:	int3   
100337bc:	int3   
100337bd:	int3   
100337be:	int3   
100337bf:	int3   
100337c0:	cmp    BYTE PTR ds:0x10080fe0,0x0
100337c7:	jne    0x10033826
100337c9:	xor    eax,eax
100337cb:	mov    cl,0x61
100337cd:	lea    ecx,[ecx+0x0]
100337d0:	mov    BYTE PTR [eax+0x100813e8],cl
100337d6:	add    cl,0x1
100337d9:	add    eax,0x1
100337dc:	cmp    cl,0x7a
100337df:	jle    0x100337d0
100337e1:	mov    cl,0x41
100337e3:	mov    BYTE PTR [eax+0x100813e8],cl
100337e9:	add    cl,0x1
100337ec:	add    eax,0x1
100337ef:	cmp    cl,0x5a
100337f2:	jle    0x100337e3
100337f4:	mov    cl,0x30
100337f6:	jmp    0x10033800
100337f8:	lea    esp,[esp+0x0]
100337ff:	nop
10033800:	mov    BYTE PTR [eax+0x100813e8],cl
10033806:	add    cl,0x1
10033809:	add    eax,0x1
1003380c:	cmp    cl,0x39
1003380f:	jle    0x10033800
10033811:	mov    BYTE PTR [eax+0x100813e8],0x5f
10033818:	mov    BYTE PTR [eax+0x100813e9],0x2d
1003381f:	mov    BYTE PTR ds:0x10080fe0,0x1
10033826:	mov    eax,0x100813e8
1003382b:	ret    
1003382c:	int3   
1003382d:	int3   
1003382e:	int3   
1003382f:	int3   
10033830:	cmp    BYTE PTR ds:0x10080fe1,0x0
10033837:	jne    0x100338a8
10033839:	push   edi
1003383a:	or     eax,0xffffffff
1003383d:	mov    ecx,0x100
10033842:	mov    edi,0x10080fe8
10033847:	rep stos DWORD PTR es:[edi],eax
10033849:	xor    eax,eax
1003384b:	mov    ecx,0x1008116c
10033850:	mov    edx,0x1a
10033855:	pop    edi
10033856:	mov    DWORD PTR [ecx],eax
10033858:	add    eax,0x1
1003385b:	add    ecx,0x4
1003385e:	sub    edx,0x1
10033861:	jne    0x10033856
10033863:	mov    ecx,0x100810ec
10033868:	mov    edx,0x1a
1003386d:	lea    ecx,[ecx+0x0]
10033870:	mov    DWORD PTR [ecx],eax
10033872:	add    eax,0x1
10033875:	add    ecx,0x4
10033878:	sub    edx,0x1
1003387b:	jne    0x10033870
1003387d:	mov    ecx,0x100810a8
10033882:	mov    edx,0xa
10033887:	mov    DWORD PTR [ecx],eax
10033889:	add    eax,0x1
1003388c:	add    ecx,0x4
1003388f:	sub    edx,0x1
10033892:	jne    0x10033887
10033894:	mov    ds:0x10081164,eax
10033899:	add    eax,0x1
1003389c:	mov    ds:0x1008109c,eax
100338a1:	mov    BYTE PTR ds:0x10080fe1,0x1
100338a8:	mov    eax,0x10080fe8
100338ad:	ret    
100338ae:	int3   
100338af:	int3   
100338b0:	push   0xffffffff
100338b2:	push   0x10061829
100338b7:	mov    eax,fs:0x0
100338bd:	push   eax
100338be:	sub    esp,0x1c
100338c1:	push   ebx
100338c2:	push   ebp
100338c3:	push   edi
100338c4:	mov    eax,ds:0x1007e030
100338c9:	xor    eax,esp
100338cb:	push   eax
100338cc:	lea    eax,[esp+0x2c]
100338d0:	mov    fs:0x0,eax
100338d6:	xor    edi,edi
100338d8:	mov    DWORD PTR [esp+0x24],edi
100338dc:	mov    DWORD PTR [esi+0x18],0xf
100338e3:	mov    DWORD PTR [esi+0x14],edi
100338e6:	mov    DWORD PTR [esp+0x28],esi
100338ea:	mov    DWORD PTR [esp+0x20],edx
100338ee:	mov    BYTE PTR [esi+0x4],0x0
100338f2:	mov    DWORD PTR [esp+0x34],edi
100338f6:	mov    DWORD PTR [esp+0x24],0x1
100338fe:	call   0x100337c0
10033903:	mov    edx,DWORD PTR [edx+0x14]
10033906:	cmp    dx,di
10033909:	mov    DWORD PTR [esp+0x14],eax
1003390d:	mov    DWORD PTR [esp+0x1c],edx
10033911:	mov    DWORD PTR [esp+0x18],edi
10033915:	je     0x10033a72
1003391b:	mov    DWORD PTR [esp+0x10],edi
1003391f:	mov    ebx,DWORD PTR [esp+0x10]
10033923:	mov    edi,DWORD PTR [esp+0x20]
10033927:	cmp    ebx,DWORD PTR [edi+0x14]
1003392a:	jbe    0x10033931
1003392c:	call   0x100433b0
10033931:	cmp    DWORD PTR [edi+0x18],0x10
10033935:	lea    eax,[edi+0x4]
10033938:	jb     0x1003393c
1003393a:	mov    eax,DWORD PTR [eax]
1003393c:	mov    al,BYTE PTR [ebx+eax*1]
1003393f:	xor    al,BYTE PTR [esp+0x18]
10033943:	mov    ecx,DWORD PTR [esp+0x14]
10033947:	movzx  ebp,al
1003394a:	or     edx,0xffffffff
1003394d:	sub    edx,DWORD PTR [esi+0x14]
10033950:	mov    eax,ebp
10033952:	and    eax,0x3f
10033955:	cmp    edx,0x1
10033958:	mov    bl,BYTE PTR [eax+ecx*1]
1003395b:	ja     0x10033962
1003395d:	call   0x100571a0
10033962:	mov    edi,DWORD PTR [esi+0x14]
10033965:	add    edi,0x1
10033968:	cmp    edi,0xfffffffe
1003396b:	jbe    0x10033972
1003396d:	call   0x100571a0
10033972:	mov    eax,DWORD PTR [esi+0x18]
10033975:	cmp    eax,edi
10033977:	jae    0x10033999
10033979:	mov    eax,DWORD PTR [esi+0x14]
1003397c:	push   eax
1003397d:	push   edi
1003397e:	mov    ecx,esi
10033980:	call   0x10001500
10033985:	test   edi,edi
10033987:	jbe    0x100339cd
10033989:	cmp    DWORD PTR [esi+0x18],0x10
1003398d:	mov    ecx,DWORD PTR [esi+0x14]
10033990:	lea    edx,[esi+0x4]
10033993:	jb     0x100339b5
10033995:	mov    eax,DWORD PTR [edx]
10033997:	jmp    0x100339b7
10033999:	test   edi,edi
1003399b:	jne    0x10033987
1003399d:	cmp    eax,0x10
100339a0:	mov    DWORD PTR [esi+0x14],edi
100339a3:	jb     0x100339ad
100339a5:	mov    eax,DWORD PTR [esi+0x4]
100339a8:	mov    BYTE PTR [eax],0x0
100339ab:	jmp    0x100339cd
100339ad:	lea    eax,[esi+0x4]
100339b0:	mov    BYTE PTR [eax],0x0
100339b3:	jmp    0x100339cd
100339b5:	mov    eax,edx
100339b7:	mov    BYTE PTR [eax+ecx*1],bl
100339ba:	cmp    DWORD PTR [esi+0x18],0x10
100339be:	mov    DWORD PTR [esi+0x14],edi
100339c1:	jb     0x100339c7
100339c3:	mov    eax,DWORD PTR [edx]
100339c5:	jmp    0x100339c9
100339c7:	mov    eax,edx
100339c9:	mov    BYTE PTR [eax+edi*1],0x0
100339cd:	mov    ecx,DWORD PTR [esp+0x14]
100339d1:	or     edx,0xffffffff
100339d4:	sub    edx,DWORD PTR [esi+0x14]
100339d7:	shr    ebp,0x6
100339da:	cmp    edx,0x1
100339dd:	mov    bl,BYTE PTR [ecx+ebp*1]
100339e0:	ja     0x100339e7
100339e2:	call   0x100571a0
100339e7:	mov    edi,DWORD PTR [esi+0x14]
100339ea:	add    edi,0x1
100339ed:	cmp    edi,0xfffffffe
100339f0:	jbe    0x100339f7
100339f2:	call   0x100571a0
100339f7:	mov    eax,DWORD PTR [esi+0x18]
100339fa:	cmp    eax,edi
100339fc:	jae    0x10033a23
100339fe:	mov    eax,DWORD PTR [esi+0x14]
10033a01:	push   eax
10033a02:	push   edi
10033a03:	mov    ecx,esi
10033a05:	call   0x10001500
10033a0a:	test   edi,edi
10033a0c:	jbe    0x10033a57
10033a0e:	mov    ecx,DWORD PTR [esi+0x14]
10033a11:	mov    edx,0x10
10033a16:	cmp    DWORD PTR [esi+0x18],edx
10033a19:	lea    ebp,[esi+0x4]
10033a1c:	jb     0x10033a3f
10033a1e:	mov    eax,DWORD PTR [ebp+0x0]
10033a21:	jmp    0x10033a41
10033a23:	test   edi,edi
10033a25:	jne    0x10033a0c
10033a27:	cmp    eax,0x10
10033a2a:	mov    DWORD PTR [esi+0x14],edi
10033a2d:	jb     0x10033a37
10033a2f:	mov    eax,DWORD PTR [esi+0x4]
10033a32:	mov    BYTE PTR [eax],0x0
10033a35:	jmp    0x10033a57
10033a37:	lea    eax,[esi+0x4]
10033a3a:	mov    BYTE PTR [eax],0x0
10033a3d:	jmp    0x10033a57
10033a3f:	mov    eax,ebp
10033a41:	mov    BYTE PTR [eax+ecx*1],bl
10033a44:	cmp    DWORD PTR [esi+0x18],edx
10033a47:	mov    DWORD PTR [esi+0x14],edi
10033a4a:	jb     0x10033a51
10033a4c:	mov    eax,DWORD PTR [ebp+0x0]
10033a4f:	jmp    0x10033a53
10033a51:	mov    eax,ebp
10033a53:	mov    BYTE PTR [eax+edi*1],0x0
10033a57:	mov    eax,DWORD PTR [esp+0x18]
10033a5b:	add    DWORD PTR [esp+0x10],0x1
10033a60:	add    eax,0x1
10033a63:	cmp    ax,WORD PTR [esp+0x1c]
10033a68:	mov    DWORD PTR [esp+0x18],eax
10033a6c:	jne    0x1003391f
10033a72:	movzx  ebp,WORD PTR [esp+0x1c]
10033a77:	mov    edx,DWORD PTR [esp+0x14]
10033a7b:	or     eax,0xffffffff
10033a7e:	sub    eax,DWORD PTR [esi+0x14]
10033a81:	mov    ecx,ebp
10033a83:	and    ecx,0xf
10033a86:	cmp    eax,0x1
10033a89:	mov    bl,BYTE PTR [ecx+edx*1]
10033a8c:	mov    DWORD PTR [esp+0x10],ebp
10033a90:	ja     0x10033a97
10033a92:	call   0x100571a0
10033a97:	mov    edi,DWORD PTR [esi+0x14]
10033a9a:	add    edi,0x1
10033a9d:	cmp    edi,0xfffffffe
10033aa0:	jbe    0x10033aa7
10033aa2:	call   0x100571a0
10033aa7:	mov    eax,DWORD PTR [esi+0x18]
10033aaa:	cmp    eax,edi
10033aac:	jae    0x10033ad2
10033aae:	mov    ecx,DWORD PTR [esi+0x14]
10033ab1:	push   ecx
10033ab2:	push   edi
10033ab3:	mov    ecx,esi
10033ab5:	call   0x10001500
10033aba:	test   edi,edi
10033abc:	jbe    0x10033b05
10033abe:	mov    ebp,DWORD PTR [esi+0x14]
10033ac1:	mov    edx,0x10
10033ac6:	cmp    DWORD PTR [esi+0x18],edx
10033ac9:	lea    eax,[esi+0x4]
10033acc:	jb     0x10033aee
10033ace:	mov    ecx,DWORD PTR [eax]
10033ad0:	jmp    0x10033af0
10033ad2:	test   edi,edi
10033ad4:	jne    0x10033abc
10033ad6:	cmp    eax,0x10
10033ad9:	mov    DWORD PTR [esi+0x14],edi
10033adc:	jb     0x10033ae6
10033ade:	mov    eax,DWORD PTR [esi+0x4]
10033ae1:	mov    BYTE PTR [eax],0x0
10033ae4:	jmp    0x10033b05
10033ae6:	lea    eax,[esi+0x4]
10033ae9:	mov    BYTE PTR [eax],0x0
10033aec:	jmp    0x10033b05
10033aee:	mov    ecx,eax
10033af0:	mov    BYTE PTR [ecx+ebp*1],bl
10033af3:	cmp    DWORD PTR [esi+0x18],edx
10033af6:	mov    DWORD PTR [esi+0x14],edi
10033af9:	jb     0x10033afd
10033afb:	mov    eax,DWORD PTR [eax]
10033afd:	mov    ebp,DWORD PTR [esp+0x10]
10033b01:	mov    BYTE PTR [eax+edi*1],0x0
10033b05:	mov    eax,DWORD PTR [esp+0x14]
10033b09:	or     ecx,0xffffffff
10033b0c:	sub    ecx,DWORD PTR [esi+0x14]
10033b0f:	mov    edx,ebp
10033b11:	shr    edx,0x4
10033b14:	and    edx,0xf
10033b17:	cmp    ecx,0x1
10033b1a:	mov    bl,BYTE PTR [edx+eax*1]
10033b1d:	ja     0x10033b24
10033b1f:	call   0x100571a0
10033b24:	mov    edi,DWORD PTR [esi+0x14]
10033b27:	add    edi,0x1
10033b2a:	cmp    edi,0xfffffffe
10033b2d:	jbe    0x10033b34
10033b2f:	call   0x100571a0
10033b34:	mov    eax,DWORD PTR [esi+0x18]
10033b37:	cmp    eax,edi
10033b39:	jae    0x10033b5f
10033b3b:	mov    edx,DWORD PTR [esi+0x14]
10033b3e:	push   edx
10033b3f:	push   edi
10033b40:	mov    ecx,esi
10033b42:	call   0x10001500
10033b47:	test   edi,edi
10033b49:	jbe    0x10033b92
10033b4b:	mov    ebp,DWORD PTR [esi+0x14]
10033b4e:	mov    edx,0x10
10033b53:	cmp    DWORD PTR [esi+0x18],edx
10033b56:	lea    eax,[esi+0x4]
10033b59:	jb     0x10033b7b
10033b5b:	mov    ecx,DWORD PTR [eax]
10033b5d:	jmp    0x10033b7d
10033b5f:	test   edi,edi
10033b61:	jne    0x10033b49
10033b63:	cmp    eax,0x10
10033b66:	mov    DWORD PTR [esi+0x14],edi
10033b69:	jb     0x10033b73
10033b6b:	mov    eax,DWORD PTR [esi+0x4]
10033b6e:	mov    BYTE PTR [eax],0x0
10033b71:	jmp    0x10033b92
10033b73:	lea    eax,[esi+0x4]
10033b76:	mov    BYTE PTR [eax],0x0
10033b79:	jmp    0x10033b92
10033b7b:	mov    ecx,eax
10033b7d:	mov    BYTE PTR [ecx+ebp*1],bl
10033b80:	cmp    DWORD PTR [esi+0x18],edx
10033b83:	mov    DWORD PTR [esi+0x14],edi
10033b86:	jb     0x10033b8a
10033b88:	mov    eax,DWORD PTR [eax]
10033b8a:	mov    ebp,DWORD PTR [esp+0x10]
10033b8e:	mov    BYTE PTR [eax+edi*1],0x0
10033b92:	mov    ecx,DWORD PTR [esp+0x14]
10033b96:	or     edx,0xffffffff
10033b99:	sub    edx,DWORD PTR [esi+0x14]
10033b9c:	mov    eax,ebp
10033b9e:	shr    eax,0x8
10033ba1:	and    eax,0xf
10033ba4:	cmp    edx,0x1
10033ba7:	mov    bl,BYTE PTR [eax+ecx*1]
10033baa:	ja     0x10033bb1
10033bac:	call   0x100571a0
10033bb1:	mov    edi,DWORD PTR [esi+0x14]
10033bb4:	add    edi,0x1
10033bb7:	cmp    edi,0xfffffffe
10033bba:	jbe    0x10033bc1
10033bbc:	call   0x100571a0
10033bc1:	mov    eax,DWORD PTR [esi+0x18]
10033bc4:	cmp    eax,edi
10033bc6:	jae    0x10033bec
10033bc8:	mov    eax,DWORD PTR [esi+0x14]
10033bcb:	push   eax
10033bcc:	push   edi
10033bcd:	mov    ecx,esi
10033bcf:	call   0x10001500
10033bd4:	test   edi,edi
10033bd6:	jbe    0x10033c1f
10033bd8:	mov    ebp,DWORD PTR [esi+0x14]
10033bdb:	mov    edx,0x10
10033be0:	cmp    DWORD PTR [esi+0x18],edx
10033be3:	lea    eax,[esi+0x4]
10033be6:	jb     0x10033c08
10033be8:	mov    ecx,DWORD PTR [eax]
10033bea:	jmp    0x10033c0a
10033bec:	test   edi,edi
10033bee:	jne    0x10033bd6
10033bf0:	cmp    eax,0x10
10033bf3:	mov    DWORD PTR [esi+0x14],edi
10033bf6:	jb     0x10033c00
10033bf8:	mov    eax,DWORD PTR [esi+0x4]
10033bfb:	mov    BYTE PTR [eax],0x0
10033bfe:	jmp    0x10033c1f
10033c00:	lea    eax,[esi+0x4]
10033c03:	mov    BYTE PTR [eax],0x0
10033c06:	jmp    0x10033c1f
10033c08:	mov    ecx,eax
10033c0a:	mov    BYTE PTR [ecx+ebp*1],bl
10033c0d:	cmp    DWORD PTR [esi+0x18],edx
10033c10:	mov    DWORD PTR [esi+0x14],edi
10033c13:	jb     0x10033c17
10033c15:	mov    eax,DWORD PTR [eax]
10033c17:	mov    ebp,DWORD PTR [esp+0x10]
10033c1b:	mov    BYTE PTR [eax+edi*1],0x0
10033c1f:	mov    ecx,DWORD PTR [esp+0x14]
10033c23:	or     edx,0xffffffff
10033c26:	sub    edx,DWORD PTR [esi+0x14]
10033c29:	shr    ebp,0xc
10033c2c:	cmp    edx,0x1
10033c2f:	mov    bl,BYTE PTR [ecx+ebp*1]
10033c32:	ja     0x10033c39
10033c34:	call   0x100571a0
10033c39:	mov    edi,DWORD PTR [esi+0x14]
10033c3c:	add    edi,0x1
10033c3f:	cmp    edi,0xfffffffe
10033c42:	jbe    0x10033c49
10033c44:	call   0x100571a0
10033c49:	mov    eax,DWORD PTR [esi+0x18]
10033c4c:	cmp    eax,edi
10033c4e:	jae    0x10033c74
10033c50:	mov    eax,DWORD PTR [esi+0x14]
10033c53:	push   eax
10033c54:	push   edi
10033c55:	mov    ecx,esi
10033c57:	call   0x10001500
10033c5c:	test   edi,edi
10033c5e:	jbe    0x10033ca3
10033c60:	mov    ebp,DWORD PTR [esi+0x14]
10033c63:	mov    edx,0x10
10033c68:	cmp    DWORD PTR [esi+0x18],edx
10033c6b:	lea    eax,[esi+0x4]
10033c6e:	jb     0x10033c90
10033c70:	mov    ecx,DWORD PTR [eax]
10033c72:	jmp    0x10033c92
10033c74:	test   edi,edi
10033c76:	jne    0x10033c5e
10033c78:	cmp    eax,0x10
10033c7b:	mov    DWORD PTR [esi+0x14],edi
10033c7e:	jb     0x10033c88
10033c80:	mov    eax,DWORD PTR [esi+0x4]
10033c83:	mov    BYTE PTR [eax],0x0
10033c86:	jmp    0x10033ca3
10033c88:	lea    eax,[esi+0x4]
10033c8b:	mov    BYTE PTR [eax],0x0
10033c8e:	jmp    0x10033ca3
10033c90:	mov    ecx,eax
10033c92:	mov    BYTE PTR [ecx+ebp*1],bl
10033c95:	cmp    DWORD PTR [esi+0x18],edx
10033c98:	mov    DWORD PTR [esi+0x14],edi
10033c9b:	jb     0x10033c9f
10033c9d:	mov    eax,DWORD PTR [eax]
10033c9f:	mov    BYTE PTR [eax+edi*1],0x0
10033ca3:	push   0x10073520
10033ca8:	push   0x7
10033caa:	push   0x10073544
10033caf:	call   0x10004258
10033cb4:	mov    edi,eax
10033cb6:	push   edi
10033cb7:	call   0x10043010
10033cbc:	add    esp,0x10
10033cbf:	push   eax
10033cc0:	push   edi
10033cc1:	mov    eax,esi
10033cc3:	call   0x10004d24
10033cc8:	mov    eax,esi
10033cca:	mov    ecx,DWORD PTR [esp+0x2c]
10033cce:	mov    DWORD PTR fs:0x0,ecx
10033cd5:	pop    ecx
10033cd6:	pop    edi
10033cd7:	pop    ebp
10033cd8:	pop    ebx
10033cd9:	add    esp,0x28
10033cdc:	ret    
10033cdd:	int3   
10033cde:	int3   
10033cdf:	int3   
10033ce0:	push   ebp
10033ce1:	mov    ebp,esp
10033ce3:	push   0xffffffff
10033ce5:	push   0x100617e0
10033cea:	mov    eax,fs:0x0
10033cf0:	push   eax
10033cf1:	sub    esp,0x9c
10033cf7:	mov    eax,ds:0x1007e030
10033cfc:	xor    eax,ebp
10033cfe:	mov    DWORD PTR [ebp-0x14],eax
10033d01:	push   ebx
10033d02:	push   esi
10033d03:	push   edi
10033d04:	push   eax
10033d05:	lea    eax,[ebp-0xc]
10033d08:	mov    fs:0x0,eax
10033d0e:	mov    DWORD PTR [ebp-0x10],esp
10033d11:	xor    ebx,ebx
10033d13:	mov    DWORD PTR [ebp-0x4],ebx
10033d16:	mov    edi,ecx
10033d18:	mov    DWORD PTR [ebp-0x58],edi
10033d1b:	mov    esi,edx
10033d1d:	mov    DWORD PTR [ebp-0x60],ebx
10033d20:	mov    DWORD PTR [ebp-0x34],0xf
10033d27:	mov    DWORD PTR [ebp-0x38],ebx
10033d2a:	mov    BYTE PTR [ebp-0x48],bl
10033d2d:	mov    BYTE PTR [ebp-0x4],0x1
10033d31:	call   0x10033830
10033d36:	cmp    DWORD PTR [esi+0x14],0xb
10033d3a:	mov    DWORD PTR [ebp-0x50],eax
10033d3d:	jae    0x10033d7f
10033d3f:	mov    DWORD PTR [edi+0x18],0xf
10033d46:	mov    DWORD PTR [edi+0x14],ebx
10033d49:	push   0x1006cd08
10033d4e:	mov    BYTE PTR [edi+0x4],bl
10033d51:	call   0x10043010
10033d56:	add    esp,0x4
10033d59:	push   eax
10033d5a:	push   0x1006cd08
10033d5f:	mov    ecx,edi
10033d61:	call   0x1000133b
10033d66:	cmp    DWORD PTR [ebp-0x34],0x10
10033d6a:	jb     0x10033d78
10033d6c:	mov    eax,DWORD PTR [ebp-0x48]
10033d6f:	push   eax
10033d70:	call   0x10042e92
10033d75:	add    esp,0x4
10033d78:	mov    eax,edi
10033d7a:	jmp    0x10034182
10033d7f:	push   0xbf1e6ca
10033d84:	push   0x1007354c
10033d89:	call   0x10004246
10033d8e:	add    esp,0x8
10033d91:	push   eax
10033d92:	push   0x7
10033d94:	push   0x10073544
10033d99:	call   0x10004258
10033d9e:	mov    ebx,eax
10033da0:	add    esp,0xc
10033da3:	push   ebx
10033da4:	call   0x10043010
10033da9:	add    esp,0x4
10033dac:	push   eax
10033dad:	push   ebx
10033dae:	push   esi
10033daf:	xor    eax,eax
10033db1:	call   0x1000cfc6
10033db6:	cmp    eax,0xffffffff
10033db9:	jne    0x10033e00
10033dbb:	mov    DWORD PTR [edi+0x18],0xf
10033dc2:	mov    DWORD PTR [edi+0x14],0x0
10033dc9:	push   0x1006cd08
10033dce:	mov    BYTE PTR [edi+0x4],0x0
10033dd2:	call   0x10043010
10033dd7:	add    esp,0x4
10033dda:	push   eax
10033ddb:	push   0x1006cd08
10033de0:	mov    ecx,edi
10033de2:	call   0x1000133b
10033de7:	cmp    DWORD PTR [ebp-0x34],0x10
10033deb:	jb     0x10033d78
10033ded:	mov    ecx,DWORD PTR [ebp-0x48]
10033df0:	push   ecx
10033df1:	call   0x10042e92
10033df6:	add    esp,0x4
10033df9:	mov    eax,edi
10033dfb:	jmp    0x10034182
10033e00:	push   eax
10033e01:	push   0x0
10033e03:	push   esi
10033e04:	lea    eax,[ebp-0x30]
10033e07:	call   0x1000c8df
10033e0c:	mov    BYTE PTR [ebp-0x4],0x2
10033e10:	mov    ecx,DWORD PTR [ebp-0x1c]
10033e13:	lea    esi,[ecx-0x4]
10033e16:	cmp    esi,ecx
10033e18:	jbe    0x10033e22
10033e1a:	call   0x100433b0
10033e1f:	mov    ecx,DWORD PTR [ebp-0x1c]
10033e22:	mov    eax,DWORD PTR [ebp-0x2c]
10033e25:	mov    ebx,0x10
10033e2a:	cmp    DWORD PTR [ebp-0x18],ebx
10033e2d:	jae    0x10033e32
10033e2f:	lea    eax,[ebp-0x2c]
10033e32:	movsx  edx,BYTE PTR [eax+esi*1]
10033e36:	mov    edi,DWORD PTR [ebp-0x50]
10033e39:	mov    al,BYTE PTR [edi+edx*4]
10033e3c:	cmp    al,0xf
10033e3e:	ja     0x10034156
10033e44:	movsx  eax,al
10033e47:	lea    esi,[ecx-0x3]
10033e4a:	cmp    esi,ecx
10033e4c:	mov    DWORD PTR [ebp-0x54],eax
10033e4f:	jbe    0x10033e59
10033e51:	call   0x100433b0
10033e56:	mov    ecx,DWORD PTR [ebp-0x1c]
10033e59:	cmp    DWORD PTR [ebp-0x18],ebx
10033e5c:	mov    eax,DWORD PTR [ebp-0x2c]
10033e5f:	jae    0x10033e64
10033e61:	lea    eax,[ebp-0x2c]
10033e64:	movsx  edx,BYTE PTR [eax+esi*1]
10033e68:	mov    al,BYTE PTR [edi+edx*4]
10033e6b:	cmp    al,0xf
10033e6d:	ja     0x1003413a
10033e73:	lea    esi,[ecx-0x2]
10033e76:	cmp    esi,ecx
10033e78:	movsx  edi,al
10033e7b:	jbe    0x10033e85
10033e7d:	call   0x100433b0
10033e82:	mov    ecx,DWORD PTR [ebp-0x1c]
10033e85:	cmp    DWORD PTR [ebp-0x18],ebx
10033e88:	mov    eax,DWORD PTR [ebp-0x2c]
10033e8b:	jae    0x10033e90
10033e8d:	lea    eax,[ebp-0x2c]
10033e90:	movsx  eax,BYTE PTR [eax+esi*1]
10033e94:	mov    edx,DWORD PTR [ebp-0x50]
10033e97:	mov    al,BYTE PTR [edx+eax*4]
10033e9a:	cmp    al,0xf
10033e9c:	ja     0x1003411e
10033ea2:	lea    esi,[ecx-0x1]
10033ea5:	cmp    esi,ecx
10033ea7:	movsx  ebx,al
10033eaa:	jbe    0x10033eb4
10033eac:	call   0x100433b0
10033eb1:	mov    ecx,DWORD PTR [ebp-0x1c]
10033eb4:	cmp    DWORD PTR [ebp-0x18],0x10
10033eb8:	mov    eax,DWORD PTR [ebp-0x2c]
10033ebb:	jae    0x10033ec0
10033ebd:	lea    eax,[ebp-0x2c]
10033ec0:	movsx  eax,BYTE PTR [eax+esi*1]
10033ec4:	mov    edx,DWORD PTR [ebp-0x50]
10033ec7:	mov    al,BYTE PTR [edx+eax*4]
10033eca:	cmp    al,0xf
10033ecc:	ja     0x10034102
10033ed2:	movsx  eax,al
10033ed5:	shl    eax,0x4
10033ed8:	or     eax,ebx
10033eda:	shl    eax,0x4
10033edd:	or     eax,edi
10033edf:	shl    eax,0x4
10033ee2:	or     eax,DWORD PTR [ebp-0x54]
10033ee5:	lea    ebx,[ecx-0x4]
10033ee8:	cmp    ebx,ecx
10033eea:	mov    DWORD PTR [ebp-0x54],eax
10033eed:	ja     0x10033efc
10033eef:	push   0xffffffff
10033ef1:	push   ebx
10033ef2:	lea    ecx,[ebp-0x30]
10033ef5:	call   0x100013ad
10033efa:	jmp    0x10033f08
10033efc:	push   0x0
10033efe:	sub    ebx,ecx
10033f00:	lea    esi,[ebp-0x30]
10033f03:	call   0x1000cf52
10033f08:	mov    eax,DWORD PTR [ebp-0x54]
10033f0b:	mov    ecx,DWORD PTR [ebp-0x1c]
10033f0e:	add    eax,eax
10033f10:	cmp    ecx,eax
10033f12:	jae    0x10033f7d
10033f14:	mov    esi,DWORD PTR [ebp-0x58]
10033f17:	xor    edi,edi
10033f19:	mov    DWORD PTR [esi+0x18],0xf
10033f20:	mov    DWORD PTR [esi+0x14],edi
10033f23:	push   0x1006cd08
10033f28:	mov    BYTE PTR [esi+0x4],0x0
10033f2c:	call   0x10043010
10033f31:	add    esp,0x4
10033f34:	push   eax
10033f35:	push   0x1006cd08
10033f3a:	mov    ecx,esi
10033f3c:	call   0x1000133b
10033f41:	mov    ebx,0x10
10033f46:	cmp    DWORD PTR [ebp-0x18],ebx
10033f49:	jb     0x10033f57
10033f4b:	mov    eax,DWORD PTR [ebp-0x2c]
10033f4e:	push   eax
10033f4f:	call   0x10042e92
10033f54:	add    esp,0x4
10033f57:	mov    DWORD PTR [ebp-0x18],0xf
10033f5e:	mov    DWORD PTR [ebp-0x1c],edi
10033f61:	cmp    DWORD PTR [ebp-0x34],ebx
10033f64:	mov    BYTE PTR [ebp-0x2c],0x0
10033f68:	jb     0x10033f76
10033f6a:	mov    ecx,DWORD PTR [ebp-0x48]
10033f6d:	push   ecx
10033f6e:	call   0x10042e92
10033f73:	add    esp,0x4
10033f76:	mov    eax,esi
10033f78:	jmp    0x10034182
10033f7d:	mov    edi,ecx
10033f7f:	sub    edi,eax
10033f81:	xor    eax,eax
10033f83:	mov    DWORD PTR [ebp-0x5c],eax
10033f86:	cmp    eax,DWORD PTR [ebp-0x54]
10033f89:	mov    ebx,DWORD PTR [ebp-0x50]
10033f8c:	je     0x100340b8
10033f92:	lea    esi,[edi+eax*2]
10033f95:	cmp    esi,ecx
10033f97:	jbe    0x10033f9e
10033f99:	call   0x100433b0
10033f9e:	cmp    DWORD PTR [ebp-0x18],0x10
10033fa2:	mov    eax,DWORD PTR [ebp-0x2c]
10033fa5:	jae    0x10033faa
10033fa7:	lea    eax,[ebp-0x2c]
10033faa:	movsx  edx,BYTE PTR [eax+esi*1]
10033fae:	mov    al,BYTE PTR [ebx+edx*4]
10033fb1:	cmp    al,0x3f
10033fb3:	ja     0x100340a2
10033fb9:	movsx  eax,al
10033fbc:	add    esi,0x1
10033fbf:	cmp    esi,DWORD PTR [ebp-0x1c]
10033fc2:	mov    DWORD PTR [ebp-0x60],eax
10033fc5:	jbe    0x10033fcc
10033fc7:	call   0x100433b0
10033fcc:	cmp    DWORD PTR [ebp-0x18],0x10
10033fd0:	mov    eax,DWORD PTR [ebp-0x2c]
10033fd3:	jae    0x10033fd8
10033fd5:	lea    eax,[ebp-0x2c]
10033fd8:	movsx  ecx,BYTE PTR [eax+esi*1]
10033fdc:	mov    al,BYTE PTR [ebx+ecx*4]
10033fdf:	cmp    al,0x3
10033fe1:	ja     0x10034086
10033fe7:	or     edx,0xffffffff
10033fea:	sub    edx,DWORD PTR [ebp-0x38]
10033fed:	movsx  ebx,al
10033ff0:	cmp    edx,0x1
10033ff3:	ja     0x10033ffa
10033ff5:	call   0x100571a0
10033ffa:	mov    esi,DWORD PTR [ebp-0x38]
10033ffd:	add    esi,0x1
10034000:	cmp    esi,0xfffffffe
10034003:	jbe    0x1003400a
10034005:	call   0x100571a0
1003400a:	mov    eax,DWORD PTR [ebp-0x34]
1003400d:	cmp    eax,esi
1003400f:	jae    0x10034062
10034011:	mov    eax,DWORD PTR [ebp-0x38]
10034014:	push   eax
10034015:	push   esi
10034016:	lea    ecx,[ebp-0x4c]
10034019:	call   0x10001500
1003401e:	test   esi,esi
10034020:	jbe    0x10034053
10034022:	mov    eax,DWORD PTR [ebp-0x48]
10034025:	shl    bl,0x6
10034028:	add    bl,BYTE PTR [ebp-0x60]
1003402b:	mov    ecx,0x10
10034030:	xor    bl,BYTE PTR [ebp-0x5c]
10034033:	cmp    DWORD PTR [ebp-0x34],ecx
10034036:	jae    0x1003403b
10034038:	lea    eax,[ebp-0x48]
1003403b:	mov    edx,DWORD PTR [ebp-0x38]
1003403e:	mov    BYTE PTR [eax+edx*1],bl
10034041:	cmp    DWORD PTR [ebp-0x34],ecx
10034044:	mov    eax,DWORD PTR [ebp-0x48]
10034047:	mov    DWORD PTR [ebp-0x38],esi
1003404a:	jae    0x1003404f
1003404c:	lea    eax,[ebp-0x48]
1003404f:	mov    BYTE PTR [eax+esi*1],0x0
10034053:	add    DWORD PTR [ebp-0x5c],0x1
10034057:	mov    eax,DWORD PTR [ebp-0x5c]
1003405a:	mov    ecx,DWORD PTR [ebp-0x1c]
1003405d:	jmp    0x10033f86
10034062:	test   esi,esi
10034064:	jne    0x10034020
10034066:	cmp    eax,0x10
10034069:	mov    eax,DWORD PTR [ebp-0x48]
1003406c:	mov    DWORD PTR [ebp-0x38],esi
1003406f:	jae    0x10034074
10034071:	lea    eax,[ebp-0x48]
10034074:	add    DWORD PTR [ebp-0x5c],0x1
10034078:	mov    BYTE PTR [eax],0x0
1003407b:	mov    eax,DWORD PTR [ebp-0x5c]
1003407e:	mov    ecx,DWORD PTR [ebp-0x1c]
10034081:	jmp    0x10033f86
10034086:	lea    ecx,[ebp-0x90]
1003408c:	call   0x10042f01
10034091:	push   0x10074db8
10034096:	lea    eax,[ebp-0x90]
1003409c:	push   eax
1003409d:	call   0x100479b4
100340a2:	lea    ecx,[ebp-0x6c]
100340a5:	call   0x10042f01
100340aa:	push   0x10074db8
100340af:	lea    ecx,[ebp-0x6c]
100340b2:	push   ecx
100340b3:	call   0x100479b4
100340b8:	mov    esi,DWORD PTR [ebp-0x58]
100340bb:	push   0xffffffff
100340bd:	push   0x0
100340bf:	lea    edx,[ebp-0x4c]
100340c2:	mov    edi,0xf
100340c7:	mov    DWORD PTR [esi+0x18],edi
100340ca:	mov    DWORD PTR [esi+0x14],0x0
100340d1:	push   edx
100340d2:	mov    ecx,esi
100340d4:	mov    BYTE PTR [esi+0x4],0x0
100340d8:	call   0x10001241
100340dd:	mov    ebx,0x10
100340e2:	cmp    DWORD PTR [ebp-0x18],ebx
100340e5:	jb     0x100340f3
100340e7:	mov    eax,DWORD PTR [ebp-0x2c]
100340ea:	push   eax
100340eb:	call   0x10042e92
100340f0:	add    esp,0x4
100340f3:	mov    DWORD PTR [ebp-0x18],edi
100340f6:	mov    DWORD PTR [ebp-0x1c],0x0
100340fd:	jmp    0x10033f61
10034102:	lea    ecx,[ebp-0xa8]
10034108:	call   0x10042f01
1003410d:	push   0x10074db8
10034112:	lea    edx,[ebp-0xa8]
10034118:	push   edx
10034119:	call   0x100479b4
1003411e:	lea    ecx,[ebp-0x84]
10034124:	call   0x10042f01
10034129:	push   0x10074db8
1003412e:	lea    eax,[ebp-0x84]
10034134:	push   eax
10034135:	call   0x100479b4
1003413a:	lea    ecx,[ebp-0x9c]
10034140:	call   0x10042f01
10034145:	push   0x10074db8
1003414a:	lea    ecx,[ebp-0x9c]
10034150:	push   ecx
10034151:	call   0x100479b4
10034156:	lea    ecx,[ebp-0x78]
10034159:	call   0x10042f01
1003415e:	push   0x10074db8
10034163:	lea    edx,[ebp-0x78]
10034166:	push   edx
10034167:	call   0x100479b4
1003416c:	mov    ecx,DWORD PTR [ebp-0x58]
1003416f:	push   0x1006cd08
10034174:	call   0x100011cd
10034179:	mov    eax,0x1003417f
1003417e:	ret    
1003417f:	mov    eax,DWORD PTR [ebp-0x58]
10034182:	mov    ecx,DWORD PTR [ebp-0xc]
10034185:	mov    DWORD PTR fs:0x0,ecx
1003418c:	pop    ecx
1003418d:	pop    edi
1003418e:	pop    esi
1003418f:	pop    ebx
10034190:	mov    ecx,DWORD PTR [ebp-0x14]
10034193:	xor    ecx,ebp
10034195:	call   0x10042e97
1003419a:	mov    esp,ebp
1003419c:	pop    ebp
1003419d:	ret    
1003419e:	int3   
1003419f:	int3   
100341a0:	push   ebp
100341a1:	mov    ebp,esp
100341a3:	and    esp,0xfffffff8
100341a6:	push   0xffffffff
100341a8:	push   0x10062638
100341ad:	mov    eax,fs:0x0
100341b3:	push   eax
100341b4:	sub    esp,0x54
100341b7:	push   esi
100341b8:	push   edi
100341b9:	mov    eax,ds:0x1007e030
100341be:	xor    eax,esp
100341c0:	push   eax
100341c1:	lea    eax,[esp+0x60]
100341c5:	mov    fs:0x0,eax
100341cb:	xor    esi,esi
100341cd:	cmp    DWORD PTR [ebx+0x18],0x10
100341d1:	lea    eax,[ebx+0x4]
100341d4:	mov    DWORD PTR [esp+0x10],esi
100341d8:	mov    DWORD PTR [esp+0x10],eax
100341dc:	jb     0x100341e0
100341de:	mov    eax,DWORD PTR [eax]
100341e0:	push   esi
100341e1:	push   esi
100341e2:	push   0xffffffff
100341e4:	push   eax
100341e5:	push   esi
100341e6:	push   0xfde9
100341eb:	call   DWORD PTR ds:0x1006608c
100341f1:	cmp    eax,esi
100341f3:	jne    0x10034282
100341f9:	call   0x10002080
100341fe:	push   0x11
10034200:	call   0x10037980
10034205:	add    esp,0x4
10034208:	mov    edi,0xf
1003420d:	push   0x1006cd08
10034212:	mov    DWORD PTR [esp+0x34],edi
10034216:	mov    DWORD PTR [esp+0x30],esi
1003421a:	mov    BYTE PTR [esp+0x20],0x0
1003421f:	call   0x10043010
10034224:	add    esp,0x4
10034227:	push   eax
10034228:	push   0x1006cd08
1003422d:	lea    ecx,[esp+0x20]
10034231:	call   0x1000133b
10034236:	lea    ecx,[esp+0x34]
1003423a:	mov    DWORD PTR [esp+0x68],esi
1003423e:	call   0x10042f01
10034243:	push   0xffffffff
10034245:	mov    BYTE PTR [esp+0x6c],0x1
1003424a:	push   esi
1003424b:	lea    eax,[esp+0x20]
1003424f:	push   eax
10034250:	lea    ecx,[esp+0x4c]
10034254:	mov    DWORD PTR [esp+0x40],0x10073574
1003425c:	mov    DWORD PTR [esp+0x64],edi
10034260:	mov    DWORD PTR [esp+0x60],esi
10034264:	mov    BYTE PTR [esp+0x50],0x0
10034269:	call   0x10001241
1003426e:	push   0x10074d64
10034273:	lea    ecx,[esp+0x38]
10034277:	push   ecx
10034278:	mov    BYTE PTR [esp+0x70],0x0
1003427d:	call   0x100479b4
10034282:	lea    edi,[eax+0x1]
10034285:	xor    ecx,ecx
10034287:	mov    eax,edi
10034289:	mov    edx,0x2
1003428e:	mul    edx
10034290:	seto   cl
10034293:	neg    ecx
10034295:	or     ecx,eax
10034297:	push   ecx
10034298:	call   0x10043721
1003429d:	mov    esi,eax
1003429f:	add    esp,0x4
100342a2:	mov    DWORD PTR [esp+0x14],esi
100342a6:	mov    eax,DWORD PTR [esp+0x10]
100342aa:	mov    DWORD PTR [esp+0x68],0x2
100342b2:	cmp    DWORD PTR [ebx+0x18],0x10
100342b6:	jb     0x100342ba
100342b8:	mov    eax,DWORD PTR [eax]
100342ba:	push   edi
100342bb:	push   esi
100342bc:	push   0xffffffff
100342be:	push   eax
100342bf:	push   0x0
100342c1:	push   0xfde9
100342c6:	call   DWORD PTR ds:0x1006608c
100342cc:	mov    edi,DWORD PTR [ebp+0x8]
100342cf:	push   esi
100342d0:	mov    WORD PTR [esi+eax*2],0x0
100342d6:	call   0x100024bf
100342db:	push   esi
100342dc:	call   0x10042e92
100342e1:	add    esp,0x4
100342e4:	mov    eax,edi
100342e6:	mov    ecx,DWORD PTR [esp+0x60]
100342ea:	mov    DWORD PTR fs:0x0,ecx
100342f1:	pop    ecx
100342f2:	pop    edi
100342f3:	pop    esi
100342f4:	mov    esp,ebp
100342f6:	pop    ebp
100342f7:	ret    
100342f8:	int3   
100342f9:	int3   
100342fa:	int3   
100342fb:	int3   
100342fc:	int3   
100342fd:	int3   
100342fe:	int3   
100342ff:	int3   
10034300:	mov    eax,ds:0x10080a74
10034305:	mov    edx,DWORD PTR [eax+0xc]
10034308:	mov    ecx,0x10080a74
1003430d:	call   edx
1003430f:	add    eax,0x10
10034312:	mov    DWORD PTR [esi],eax
10034314:	mov    eax,esi
10034316:	ret    
10034317:	int3   
10034318:	int3   
10034319:	int3   
1003431a:	int3   
1003431b:	int3   
1003431c:	int3   
1003431d:	int3   
1003431e:	int3   
1003431f:	int3   
10034320:	test   ebx,ebx
10034322:	jne    0x10034332
10034324:	test   esi,esi
10034326:	je     0x10034332
10034328:	push   0x80070057
1003432d:	call   0x10001f45
10034332:	mov    eax,ds:0x10080a74
10034337:	mov    edx,DWORD PTR [eax]
10034339:	push   0x1
1003433b:	push   esi
1003433c:	mov    ecx,0x10080a74
10034341:	call   edx
10034343:	test   eax,eax
10034345:	jne    0x1003434c
10034347:	jmp    0x100346e0
1003434c:	add    eax,0x10
1003434f:	test   esi,esi
10034351:	mov    DWORD PTR [edi],eax
10034353:	jl     0x10034328
10034355:	cmp    esi,DWORD PTR [eax-0x8]
10034358:	jg     0x10034328
1003435a:	mov    DWORD PTR [eax-0xc],esi
1003435d:	mov    eax,DWORD PTR [edi]
1003435f:	push   esi
10034360:	push   ebx
10034361:	mov    BYTE PTR [esi+eax*1],0x0
10034365:	mov    ecx,DWORD PTR [edi]
10034367:	push   esi
10034368:	push   ecx
10034369:	call   0x100433c5
1003436e:	add    esp,0x10
10034371:	mov    eax,edi
10034373:	ret    
10034374:	int3   
10034375:	int3   
10034376:	int3   
10034377:	int3   
10034378:	int3   
10034379:	int3   
1003437a:	int3   
1003437b:	int3   
1003437c:	int3   
1003437d:	int3   
1003437e:	int3   
1003437f:	int3   
10034380:	mov    eax,DWORD PTR [eax]
10034382:	sub    eax,0x10
10034385:	lea    ecx,[eax+0xc]
10034388:	or     edx,0xffffffff
1003438b:	lock xadd DWORD PTR [ecx],edx
1003438f:	dec    edx
10034390:	test   edx,edx
10034392:	jg     0x1003439e
10034394:	mov    ecx,DWORD PTR [eax]
10034396:	mov    edx,DWORD PTR [ecx]
10034398:	push   eax
10034399:	mov    eax,DWORD PTR [edx+0x4]
1003439c:	call   eax
1003439e:	ret    
1003439f:	int3   
100343a0:	test   edx,edx
100343a2:	jne    0x100343b5
100343a4:	xor    eax,eax
100343a6:	push   edi
100343a7:	mov    edi,eax
100343a9:	push   edx
100343aa:	mov    eax,ebx
100343ac:	call   0x10034650
100343b1:	mov    eax,ebx
100343b3:	pop    edi
100343b4:	ret    
100343b5:	mov    eax,edx
100343b7:	push   esi
100343b8:	lea    esi,[eax+0x1]
100343bb:	jmp    0x100343c0
100343bd:	lea    ecx,[ecx+0x0]
100343c0:	mov    cl,BYTE PTR [eax]
100343c2:	add    eax,0x1
100343c5:	test   cl,cl
100343c7:	jne    0x100343c0
100343c9:	sub    eax,esi
100343cb:	pop    esi
100343cc:	push   edi
100343cd:	mov    edi,eax
100343cf:	push   edx
100343d0:	mov    eax,ebx
100343d2:	call   0x10034650
100343d7:	mov    eax,ebx
100343d9:	pop    edi
100343da:	ret    
100343db:	int3   
100343dc:	int3   
100343dd:	int3   
100343de:	int3   
100343df:	int3   
100343e0:	mov    eax,DWORD PTR [edi]
100343e2:	mov    edx,DWORD PTR [eax-0x8]
100343e5:	push   ebx
100343e6:	mov    ebx,DWORD PTR [eax-0xc]
100343e9:	push   esi
100343ea:	mov    ecx,0x1
100343ef:	sub    ecx,DWORD PTR [eax-0x4]
100343f2:	lea    esi,[ebx+0x1]
100343f5:	sub    edx,esi
100343f7:	or     ecx,edx
100343f9:	jge    0x10034404
100343fb:	mov    ecx,esi
100343fd:	mov    eax,edi
100343ff:	call   0x100346f0
10034404:	test   esi,esi
10034406:	mov    eax,DWORD PTR [edi]
10034408:	mov    cl,BYTE PTR [esp+0xc]
1003440c:	mov    BYTE PTR [ebx+eax*1],cl
1003440f:	jl     0x10034428
10034411:	mov    eax,DWORD PTR [edi]
10034413:	cmp    esi,DWORD PTR [eax-0x8]
10034416:	jg     0x10034428
10034418:	mov    DWORD PTR [eax-0xc],esi
1003441b:	mov    edx,DWORD PTR [edi]
1003441d:	mov    BYTE PTR [esi+edx*1],0x0
10034421:	pop    esi
10034422:	mov    eax,edi
10034424:	pop    ebx
10034425:	ret    0x4
10034428:	push   0x80070057
1003442d:	call   0x10001f45
10034432:	int3   
10034433:	int3   
10034434:	int3   
10034435:	int3   
10034436:	int3   
10034437:	int3   
10034438:	int3   
10034439:	int3   
1003443a:	int3   
1003443b:	int3   
1003443c:	int3   
1003443d:	int3   
1003443e:	int3   
1003443f:	int3   
10034440:	mov    eax,DWORD PTR [edi]
10034442:	mov    edx,DWORD PTR [eax-0x8]
10034445:	push   esi
10034446:	mov    esi,DWORD PTR [eax-0xc]
10034449:	mov    ecx,0x1
1003444e:	sub    ecx,DWORD PTR [eax-0x4]
10034451:	sub    edx,esi
10034453:	or     ecx,edx
10034455:	jge    0x10034460
10034457:	mov    ecx,esi
10034459:	mov    eax,edi
1003445b:	call   0x100346f0
10034460:	mov    ecx,DWORD PTR [edi]
10034462:	lea    eax,[esi+0x1]
10034465:	call   0x1002f260
1003446a:	test   esi,esi
1003446c:	jl     0x10034482
1003446e:	mov    eax,DWORD PTR [edi]
10034470:	cmp    esi,DWORD PTR [eax-0x8]
10034473:	jg     0x10034482
10034475:	mov    DWORD PTR [eax-0xc],esi
10034478:	mov    eax,DWORD PTR [edi]
1003447a:	mov    BYTE PTR [esi+eax*1],0x0
1003447e:	mov    eax,edi
10034480:	pop    esi
10034481:	ret    
10034482:	push   0x80070057
10034487:	call   0x10001f45
1003448c:	int3   
1003448d:	int3   
1003448e:	int3   
1003448f:	int3   
10034490:	test   ecx,ecx
10034492:	jne    0x1003449e
10034494:	push   0x80004005
10034499:	call   0x10001f45
1003449e:	mov    eax,DWORD PTR [esp+0x4]
100344a2:	mov    eax,DWORD PTR [eax]
100344a4:	push   ecx
100344a5:	push   eax
100344a6:	call   0x10058f1c
100344ab:	add    esp,0x8
100344ae:	neg    eax
100344b0:	sbb    eax,eax
100344b2:	add    eax,0x1
100344b5:	ret    
100344b6:	int3   
100344b7:	int3   
100344b8:	int3   
100344b9:	int3   
100344ba:	int3   
100344bb:	int3   
100344bc:	int3   
100344bd:	int3   
100344be:	int3   
100344bf:	int3   
100344c0:	test   ecx,ecx
100344c2:	jne    0x100344ce
100344c4:	push   0x80004005
100344c9:	call   0x10001f45
100344ce:	mov    eax,DWORD PTR [esp+0x4]
100344d2:	mov    eax,DWORD PTR [eax]
100344d4:	push   ecx
100344d5:	push   eax
100344d6:	call   0x10058f1c
100344db:	add    esp,0x8
100344de:	neg    eax
100344e0:	sbb    eax,eax
100344e2:	neg    eax
100344e4:	ret    
100344e5:	int3   
100344e6:	int3   
100344e7:	int3   
100344e8:	int3   
100344e9:	int3   
100344ea:	int3   
100344eb:	int3   
100344ec:	int3   
100344ed:	int3   
100344ee:	int3   
100344ef:	int3   
100344f0:	mov    eax,DWORD PTR [esi]
100344f2:	test   eax,eax
100344f4:	je     0x100344fd
100344f6:	push   eax
100344f7:	call   DWORD PTR ds:0x10066380
100344fd:	mov    DWORD PTR [esi],0x0
10034503:	ret    
10034504:	int3   
10034505:	int3   
10034506:	int3   
10034507:	int3   
10034508:	int3   
10034509:	int3   
1003450a:	int3   
1003450b:	int3   
1003450c:	int3   
1003450d:	int3   
1003450e:	int3   
1003450f:	int3   
10034510:	mov    ecx,DWORD PTR [eax]
10034512:	push   esi
10034513:	mov    esi,DWORD PTR [ebx]
10034515:	lea    eax,[ecx-0x10]
10034518:	sub    esi,0x10
1003451b:	cmp    eax,esi
1003451d:	je     0x10034568
1003451f:	cmp    DWORD PTR [esi+0xc],0x0
10034523:	push   edi
10034524:	lea    edi,[esi+0xc]
10034527:	jl     0x10034558
10034529:	mov    edx,DWORD PTR [eax]
1003452b:	cmp    edx,DWORD PTR [esi]
1003452d:	jne    0x10034558
1003452f:	push   ebp
10034530:	call   0x10034740
10034535:	mov    ebp,eax
10034537:	or     eax,0xffffffff
1003453a:	lock xadd DWORD PTR [edi],eax
1003453e:	dec    eax
1003453f:	test   eax,eax
10034541:	jg     0x1003454d
10034543:	mov    ecx,DWORD PTR [esi]
10034545:	mov    edx,DWORD PTR [ecx]
10034547:	mov    eax,DWORD PTR [edx+0x4]
1003454a:	push   esi
1003454b:	call   eax
1003454d:	add    ebp,0x10
10034550:	mov    DWORD PTR [ebx],ebp
10034552:	pop    ebp
10034553:	pop    edi
10034554:	mov    eax,ebx
10034556:	pop    esi
10034557:	ret    
10034558:	mov    edi,DWORD PTR [ecx-0xc]
1003455b:	push   ecx
1003455c:	mov    eax,ebx
1003455e:	call   0x10034650
10034563:	pop    edi
10034564:	mov    eax,ebx
10034566:	pop    esi
10034567:	ret    
10034568:	mov    eax,ebx
1003456a:	pop    esi
1003456b:	ret    
1003456c:	int3   
1003456d:	int3   
1003456e:	int3   
1003456f:	int3   
10034570:	mov    eax,DWORD PTR [esp+0x4]
10034574:	push   ebx
10034575:	push   ebp
10034576:	mov    ebp,DWORD PTR [esp+0x10]
1003457a:	push   esi
1003457b:	mov    esi,DWORD PTR [eax]
1003457d:	mov    ecx,DWORD PTR [esi-0x10]
10034580:	mov    edx,DWORD PTR [ecx]
10034582:	mov    eax,DWORD PTR [edx+0x10]
10034585:	mov    ebx,DWORD PTR [esi-0xc]
10034588:	sub    esi,0x10
1003458b:	push   edi
1003458c:	call   eax
1003458e:	mov    edx,DWORD PTR [eax]
10034590:	push   0x1
10034592:	mov    ecx,eax
10034594:	mov    eax,DWORD PTR [edx]
10034596:	push   ebp
10034597:	call   eax
10034599:	mov    edi,eax
1003459b:	test   edi,edi
1003459d:	jne    0x100345a4
1003459f:	call   0x100346e0
100345a4:	cmp    ebx,ebp
100345a6:	jge    0x100345aa
100345a8:	mov    ebp,ebx
100345aa:	lea    eax,[ebp+0x1]
100345ad:	push   eax
100345ae:	lea    ecx,[esi+0x10]
100345b1:	push   ecx
100345b2:	push   eax
100345b3:	lea    ebp,[edi+0x10]
100345b6:	push   ebp
100345b7:	call   0x100433c5
100345bc:	add    esp,0x10
100345bf:	mov    DWORD PTR [edi+0x4],ebx
100345c2:	lea    edx,[esi+0xc]
100345c5:	or     eax,0xffffffff
100345c8:	lock xadd DWORD PTR [edx],eax
100345cc:	dec    eax
100345cd:	test   eax,eax
100345cf:	jg     0x100345db
100345d1:	mov    ecx,DWORD PTR [esi]
100345d3:	mov    edx,DWORD PTR [ecx]
100345d5:	mov    eax,DWORD PTR [edx+0x4]
100345d8:	push   esi
100345d9:	call   eax
100345db:	mov    ecx,DWORD PTR [esp+0x14]
100345df:	pop    edi
100345e0:	pop    esi
100345e1:	mov    DWORD PTR [ecx],ebp
100345e3:	pop    ebp
100345e4:	pop    ebx
100345e5:	ret    0x8
100345e8:	int3   
100345e9:	int3   
100345ea:	int3   
100345eb:	int3   
100345ec:	int3   
100345ed:	int3   
100345ee:	int3   
100345ef:	int3   
100345f0:	mov    eax,DWORD PTR [edi]
100345f2:	mov    edx,DWORD PTR [eax-0x8]
100345f5:	push   ebx
100345f6:	mov    ebx,DWORD PTR [eax-0xc]
100345f9:	push   esi
100345fa:	mov    ecx,0x1
100345ff:	sub    ecx,DWORD PTR [eax-0x4]
10034602:	lea    esi,[ebx+0x1]
10034605:	sub    edx,esi
10034607:	or     ecx,edx
10034609:	jge    0x10034614
1003460b:	mov    eax,esi
1003460d:	mov    ecx,edi
1003460f:	call   0x10002262
10034614:	test   esi,esi
10034616:	mov    eax,DWORD PTR [edi]
10034618:	mov    WORD PTR [eax+ebx*2],0x5c
1003461e:	jl     0x10034637
10034620:	mov    eax,DWORD PTR [edi]
10034622:	cmp    esi,DWORD PTR [eax-0x8]
10034625:	jg     0x10034637
10034627:	mov    DWORD PTR [eax-0xc],esi
1003462a:	mov    ecx,DWORD PTR [edi]
1003462c:	mov    WORD PTR [ecx+esi*2],0x0
10034632:	pop    esi
10034633:	mov    eax,edi
10034635:	pop    ebx
10034636:	ret    
10034637:	push   0x80070057
1003463c:	call   0x10001f45
10034641:	int3   
10034642:	int3   
10034643:	int3   
10034644:	int3   
10034645:	int3   
10034646:	int3   
10034647:	int3   
10034648:	int3   
10034649:	int3   
1003464a:	int3   
1003464b:	int3   
1003464c:	int3   
1003464d:	int3   
1003464e:	int3   
1003464f:	int3   
10034650:	test   edi,edi
10034652:	push   esi
10034653:	mov    esi,eax
10034655:	jne    0x10034660
10034657:	call   0x10034840
1003465c:	pop    esi
1003465d:	ret    0x4
10034660:	mov    ecx,DWORD PTR [esp+0x8]
10034664:	test   ecx,ecx
10034666:	jne    0x10034672
10034668:	push   0x80070057
1003466d:	call   0x10001f45
10034672:	mov    eax,DWORD PTR [esi]
10034674:	push   ebx
10034675:	mov    ebx,ecx
10034677:	sub    ebx,eax
10034679:	mov    edx,0x1
1003467e:	sub    edx,DWORD PTR [eax-0x4]
10034681:	push   ebp
10034682:	mov    ebp,DWORD PTR [eax-0xc]
10034685:	mov    eax,DWORD PTR [eax-0x8]
10034688:	sub    eax,edi
1003468a:	or     edx,eax
1003468c:	jge    0x1003469b
1003468e:	mov    ecx,edi
10034690:	mov    eax,esi
10034692:	call   0x100346f0
10034697:	mov    ecx,DWORD PTR [esp+0x10]
1003469b:	cmp    ebx,ebp
1003469d:	mov    eax,DWORD PTR [esi]
1003469f:	push   edi
100346a0:	ja     0x100346af
100346a2:	lea    ecx,[eax+ebx*1]
100346a5:	push   ecx
100346a6:	push   edi
100346a7:	push   eax
100346a8:	call   0x10042ea6
100346ad:	jmp    0x100346b7
100346af:	push   ecx
100346b0:	push   edi
100346b1:	push   eax
100346b2:	call   0x100433c5
100346b7:	add    esp,0x10
100346ba:	test   edi,edi
100346bc:	pop    ebp
100346bd:	pop    ebx
100346be:	jl     0x10034668
100346c0:	mov    eax,DWORD PTR [esi]
100346c2:	cmp    edi,DWORD PTR [eax-0x8]
100346c5:	jg     0x10034668
100346c7:	mov    DWORD PTR [eax-0xc],edi
100346ca:	mov    edx,DWORD PTR [esi]
100346cc:	mov    BYTE PTR [edi+edx*1],0x0
100346d0:	pop    esi
100346d1:	ret    0x4
100346d4:	int3   
100346d5:	int3   
100346d6:	int3   
100346d7:	int3   
100346d8:	int3   
100346d9:	int3   
100346da:	int3   
100346db:	int3   
100346dc:	int3   
100346dd:	int3   
100346de:	int3   
100346df:	int3   
100346e0:	push   0x8007000e
100346e5:	call   0x10001f45
100346ea:	int3   
100346eb:	int3   
100346ec:	int3   
100346ed:	int3   
100346ee:	int3   
100346ef:	int3   
100346f0:	push   esi
100346f1:	mov    esi,eax
100346f3:	mov    eax,DWORD PTR [esi]
100346f5:	mov    edx,DWORD PTR [eax-0xc]
100346f8:	sub    eax,0x10
100346fb:	cmp    edx,ecx
100346fd:	jle    0x10034701
100346ff:	mov    ecx,edx
10034701:	cmp    DWORD PTR [eax+0xc],0x1
10034705:	jle    0x10034710
10034707:	push   ecx
10034708:	push   esi
10034709:	call   0x10034570
1003470e:	pop    esi
1003470f:	ret    
10034710:	mov    eax,DWORD PTR [eax+0x8]
10034713:	cmp    eax,ecx
10034715:	jge    0x10034736
10034717:	mov    edx,eax
10034719:	cmp    edx,0x400
1003471f:	jle    0x10034729
10034721:	add    edx,0x400
10034727:	jmp    0x1003472b
10034729:	add    edx,edx
1003472b:	cmp    edx,ecx
1003472d:	jge    0x10034731
1003472f:	mov    edx,ecx
10034731:	call   0x100348a0
10034736:	pop    esi
10034737:	ret    
10034738:	int3   
10034739:	int3   
1003473a:	int3   
1003473b:	int3   
1003473c:	int3   
1003473d:	int3   
1003473e:	int3   
1003473f:	int3   
10034740:	push   esi
10034741:	mov    esi,eax
10034743:	mov    ecx,DWORD PTR [esi]
10034745:	mov    eax,DWORD PTR [ecx]
10034747:	mov    edx,DWORD PTR [eax+0x10]
1003474a:	push   edi
1003474b:	call   edx
1003474d:	cmp    DWORD PTR [esi+0xc],0x0
10034751:	lea    ecx,[esi+0xc]
10034754:	jl     0x1003476a
10034756:	cmp    eax,DWORD PTR [esi]
10034758:	jne    0x1003476a
1003475a:	mov    edi,esi
1003475c:	mov    eax,0x1
10034761:	lock xadd DWORD PTR [ecx],eax
10034765:	mov    eax,edi
10034767:	pop    edi
10034768:	pop    esi
10034769:	ret    
1003476a:	mov    ecx,DWORD PTR [esi+0x4]
1003476d:	mov    edx,DWORD PTR [eax]
1003476f:	mov    edx,DWORD PTR [edx]
10034771:	push   0x1
10034773:	push   ecx
10034774:	mov    ecx,eax
10034776:	call   edx
10034778:	mov    edi,eax
1003477a:	test   edi,edi
1003477c:	jne    0x10034783
1003477e:	jmp    0x100346e0
10034783:	mov    eax,DWORD PTR [esi+0x4]
10034786:	mov    DWORD PTR [edi+0x4],eax
10034789:	mov    eax,DWORD PTR [esi+0x4]
1003478c:	add    eax,0x1
1003478f:	push   eax
10034790:	add    esi,0x10
10034793:	push   esi
10034794:	push   eax
10034795:	lea    ecx,[edi+0x10]
10034798:	push   ecx
10034799:	call   0x100433c5
1003479e:	add    esp,0x10
100347a1:	mov    eax,edi
100347a3:	pop    edi
100347a4:	pop    esi
100347a5:	ret    
100347a6:	int3   
100347a7:	int3   
100347a8:	int3   
100347a9:	int3   
100347aa:	int3   
100347ab:	int3   
100347ac:	int3   
100347ad:	int3   
100347ae:	int3   
100347af:	int3   
100347b0:	mov    ecx,DWORD PTR [esp+0xc]
100347b4:	push   ebx
100347b5:	push   ebp
100347b6:	mov    ebp,DWORD PTR [esp+0xc]
100347ba:	mov    eax,DWORD PTR [ebp+0x0]
100347bd:	mov    ebx,DWORD PTR [eax-0xc]
100347c0:	push   esi
100347c1:	push   edi
100347c2:	mov    edi,DWORD PTR [esp+0x18]
100347c6:	sub    edi,eax
100347c8:	mov    edx,0x1
100347cd:	sub    edx,DWORD PTR [eax-0x4]
100347d0:	mov    eax,DWORD PTR [eax-0x8]
100347d3:	lea    esi,[ebx+ecx*1]
100347d6:	sub    eax,esi
100347d8:	or     edx,eax
100347da:	jge    0x100347e9
100347dc:	mov    ecx,esi
100347de:	mov    eax,ebp
100347e0:	call   0x100346f0
100347e5:	mov    ecx,DWORD PTR [esp+0x1c]
100347e9:	cmp    edi,ebx
100347eb:	mov    eax,DWORD PTR [ebp+0x0]
100347ee:	ja     0x100347f7
100347f0:	lea    edx,[eax+edi*1]
100347f3:	mov    DWORD PTR [esp+0x18],edx
100347f7:	mov    edx,DWORD PTR [esp+0x18]
100347fb:	push   ecx
100347fc:	push   edx
100347fd:	push   ecx
100347fe:	add    eax,ebx
10034800:	push   eax
10034801:	call   0x100433c5
10034806:	add    esp,0x10
10034809:	test   esi,esi
1003480b:	jl     0x10034826
1003480d:	mov    eax,DWORD PTR [ebp+0x0]
10034810:	cmp    esi,DWORD PTR [eax-0x8]
10034813:	jg     0x10034826
10034815:	mov    DWORD PTR [eax-0xc],esi
10034818:	mov    eax,DWORD PTR [ebp+0x0]
1003481b:	pop    edi
1003481c:	mov    BYTE PTR [esi+eax*1],0x0
10034820:	pop    esi
10034821:	pop    ebp
10034822:	pop    ebx
10034823:	ret    0xc
10034826:	push   0x80070057
1003482b:	call   0x10001f45
10034830:	int3   
10034831:	int3   
10034832:	int3   
10034833:	int3   
10034834:	int3   
10034835:	int3   
10034836:	int3   
10034837:	int3   
10034838:	int3   
10034839:	int3   
1003483a:	int3   
1003483b:	int3   
1003483c:	int3   
1003483d:	int3   
1003483e:	int3   
1003483f:	int3   
10034840:	mov    ecx,DWORD PTR [esi]
10034842:	cmp    DWORD PTR [ecx-0xc],0x0
10034846:	lea    eax,[ecx-0x10]
10034849:	push   edi
1003484a:	mov    edi,DWORD PTR [eax]
1003484c:	je     0x10034899
1003484e:	cmp    DWORD PTR [eax+0xc],0x0
10034852:	lea    edx,[eax+0xc]
10034855:	jge    0x10034875
10034857:	cmp    DWORD PTR [ecx-0x8],0x0
1003485b:	jge    0x10034867
1003485d:	push   0x80070057
10034862:	call   0x10001f45
10034867:	mov    DWORD PTR [ecx-0xc],0x0
1003486e:	mov    eax,DWORD PTR [esi]
10034870:	mov    BYTE PTR [eax],0x0
10034873:	pop    edi
10034874:	ret    
10034875:	or     ecx,0xffffffff
10034878:	lock xadd DWORD PTR [edx],ecx
1003487c:	dec    ecx
1003487d:	test   ecx,ecx
1003487f:	jg     0x1003488b
10034881:	mov    ecx,DWORD PTR [eax]
10034883:	mov    edx,DWORD PTR [ecx]
10034885:	push   eax
10034886:	mov    eax,DWORD PTR [edx+0x4]
10034889:	call   eax
1003488b:	mov    edx,DWORD PTR [edi]
1003488d:	mov    eax,DWORD PTR [edx+0xc]
10034890:	mov    ecx,edi
10034892:	call   eax
10034894:	add    eax,0x10
10034897:	mov    DWORD PTR [esi],eax
10034899:	pop    edi
1003489a:	ret    
1003489b:	int3   
1003489c:	int3   
1003489d:	int3   
1003489e:	int3   
1003489f:	int3   
100348a0:	mov    eax,DWORD PTR [esi]
100348a2:	mov    ecx,DWORD PTR [eax-0x10]
100348a5:	sub    eax,0x10
100348a8:	cmp    DWORD PTR [eax+0x8],edx
100348ab:	jge    0x100348c2
100348ad:	test   edx,edx
100348af:	jle    0x100348c2
100348b1:	push   edi
100348b2:	mov    edi,DWORD PTR [ecx]
100348b4:	push   0x1
100348b6:	push   edx
100348b7:	push   eax
100348b8:	mov    eax,DWORD PTR [edi+0x8]
100348bb:	call   eax
100348bd:	test   eax,eax
100348bf:	pop    edi
100348c0:	jne    0x100348c7
100348c2:	jmp    0x100346e0
100348c7:	add    eax,0x10
100348ca:	mov    DWORD PTR [esi],eax
100348cc:	ret    
100348cd:	int3   
100348ce:	int3   
100348cf:	int3   
100348d0:	push   0xffffffff
100348d2:	push   0x1005fe98
100348d7:	mov    eax,fs:0x0
100348dd:	push   eax
100348de:	sub    esp,0x20
100348e1:	push   ebx
100348e2:	push   esi
100348e3:	mov    eax,ds:0x1007e030
100348e8:	xor    eax,esp
100348ea:	push   eax
100348eb:	lea    eax,[esp+0x2c]
100348ef:	mov    fs:0x0,eax
100348f5:	mov    eax,DWORD PTR [esp+0x3c]
100348f9:	xor    ebx,ebx
100348fb:	push   0xffffffff
100348fd:	push   ebx
100348fe:	push   eax
100348ff:	lea    ecx,[esp+0x1c]
10034903:	mov    DWORD PTR [esp+0x18],ebx
10034907:	mov    DWORD PTR [esp+0x34],0xf
1003490f:	mov    DWORD PTR [esp+0x30],ebx
10034913:	mov    BYTE PTR [esp+0x20],bl
10034917:	call   0x10001241
1003491c:	or     ecx,0xffffffff
1003491f:	mov    DWORD PTR [esp+0x34],ebx
10034923:	sub    ecx,DWORD PTR [esp+0x24]
10034927:	cmp    ecx,0x1
1003492a:	ja     0x10034931
1003492c:	call   0x100571a0
10034931:	mov    esi,DWORD PTR [esp+0x24]
10034935:	add    esi,0x1
10034938:	cmp    esi,0xfffffffe
1003493b:	jbe    0x10034942
1003493d:	call   0x100571a0
10034942:	mov    eax,DWORD PTR [esp+0x28]
10034946:	cmp    eax,esi
10034948:	jae    0x100349d4
1003494e:	mov    edx,DWORD PTR [esp+0x24]
10034952:	push   edx
10034953:	push   esi
10034954:	lea    ecx,[esp+0x18]
10034958:	call   0x10001500
1003495d:	mov    eax,DWORD PTR [esp+0x28]
10034961:	cmp    esi,ebx
10034963:	jbe    0x10034990
10034965:	cmp    eax,0x10
10034968:	mov    eax,DWORD PTR [esp+0x14]
1003496c:	jae    0x10034972
1003496e:	lea    eax,[esp+0x14]
10034972:	mov    ecx,DWORD PTR [esp+0x24]
10034976:	mov    BYTE PTR [eax+ecx*1],0x26
1003497a:	cmp    DWORD PTR [esp+0x28],0x10
1003497f:	mov    eax,DWORD PTR [esp+0x14]
10034983:	mov    DWORD PTR [esp+0x24],esi
10034987:	jae    0x1003498d
10034989:	lea    eax,[esp+0x14]
1003498d:	mov    BYTE PTR [eax+esi*1],bl
10034990:	push   0xffffffff
10034992:	push   ebx
10034993:	lea    edx,[esp+0x18]
10034997:	mov    DWORD PTR [edi+0x18],0xf
1003499e:	mov    DWORD PTR [edi+0x14],ebx
100349a1:	push   edx
100349a2:	mov    ecx,edi
100349a4:	mov    BYTE PTR [edi+0x4],bl
100349a7:	call   0x10001241
100349ac:	cmp    DWORD PTR [esp+0x28],0x10
100349b1:	jb     0x100349c0
100349b3:	mov    eax,DWORD PTR [esp+0x14]
100349b7:	push   eax
100349b8:	call   0x10042e92
100349bd:	add    esp,0x4
100349c0:	mov    eax,edi
100349c2:	mov    ecx,DWORD PTR [esp+0x2c]
100349c6:	mov    DWORD PTR fs:0x0,ecx
100349cd:	pop    ecx
100349ce:	pop    esi
100349cf:	pop    ebx
100349d0:	add    esp,0x2c
100349d3:	ret    
100349d4:	cmp    esi,ebx
100349d6:	jne    0x10034963
100349d8:	cmp    eax,0x10
100349db:	mov    eax,DWORD PTR [esp+0x14]
100349df:	mov    DWORD PTR [esp+0x24],ebx
100349e3:	jae    0x100349e9
100349e5:	lea    eax,[esp+0x14]
100349e9:	mov    BYTE PTR [eax],bl
100349eb:	jmp    0x10034990
100349ed:	int3   
100349ee:	int3   
100349ef:	int3   
100349f0:	push   ebp
100349f1:	mov    ebp,esp
100349f3:	and    esp,0xfffffff8
100349f6:	push   0xffffffff
100349f8:	push   0x10061796
100349fd:	mov    eax,fs:0x0
10034a03:	push   eax
10034a04:	sub    esp,0x898
10034a0a:	mov    eax,ds:0x1007e030
10034a0f:	xor    eax,esp
10034a11:	mov    DWORD PTR [esp+0x890],eax
10034a18:	push   ebx
10034a19:	push   esi
10034a1a:	push   edi
10034a1b:	mov    eax,ds:0x1007e030
10034a20:	xor    eax,esp
10034a22:	push   eax
10034a23:	lea    eax,[esp+0x8a8]
10034a2a:	mov    fs:0x0,eax
10034a30:	mov    eax,DWORD PTR [ebp+0x8]
10034a33:	mov    DWORD PTR [esp+0x10],eax
10034a37:	call   DWORD PTR ds:0x10066264
10034a3d:	and    eax,0xff
10034a42:	cmp    eax,0x5
10034a45:	jb     0x10034ab3
10034a47:	push   0x3fc83e18
10034a4c:	push   0x1007357c
10034a51:	call   0x10004246
10034a56:	push   0x1533fc5a
10034a5b:	push   eax
10034a5c:	call   0x10004246
10034a61:	push   0x2471dbf2
10034a66:	push   eax
10034a67:	call   0x10004246
10034a6c:	push   0x4f4fea62
10034a71:	push   eax
10034a72:	call   0x10004246
10034a77:	push   0x790b432e
10034a7c:	push   eax
10034a7d:	call   0x10004246
10034a82:	push   eax
10034a83:	push   0xb
10034a85:	push   0x100735b0
10034a8a:	call   0x10004417
10034a8f:	add    esp,0x34
10034a92:	lea    edx,[esp+0x94]
10034a99:	xor    ebx,ebx
10034a9b:	jmp    0x10034aa0
10034a9d:	lea    ecx,[ecx+0x0]
10034aa0:	movzx  ecx,WORD PTR [eax]
10034aa3:	mov    WORD PTR [edx],cx
10034aa6:	add    eax,0x2
10034aa9:	add    edx,0x2
10034aac:	cmp    cx,bx
10034aaf:	jne    0x10034aa0
10034ab1:	jmp    0x10034af1
10034ab3:	push   0x5a3f12
10034ab8:	push   0x100735c8
10034abd:	call   0x10004246
10034ac2:	push   eax
10034ac3:	push   0x4
10034ac5:	push   0x100735fc
10034aca:	call   0x10004417
10034acf:	add    esp,0x14
10034ad2:	lea    edx,[esp+0x94]
10034ad9:	xor    ebx,ebx
10034adb:	jmp    0x10034ae0
10034add:	lea    ecx,[ecx+0x0]
10034ae0:	movzx  ecx,WORD PTR [eax]
10034ae3:	mov    WORD PTR [edx],cx
10034ae6:	add    eax,0x2
10034ae9:	add    edx,0x2
10034aec:	cmp    cx,bx
10034aef:	jne    0x10034ae0
10034af1:	lea    eax,[esp+0x94]
10034af8:	add    eax,0xfffffffe
10034afb:	jmp    0x10034b00
10034afd:	lea    ecx,[ecx+0x0]
10034b00:	mov    cx,WORD PTR [eax+0x2]
10034b04:	add    eax,0x2
10034b07:	cmp    cx,bx
10034b0a:	jne    0x10034b00
10034b0c:	mov    ecx,DWORD PTR ds:0x10073608
10034b12:	mov    edx,DWORD PTR ds:0x1007360c
10034b18:	mov    esi,DWORD PTR ds:0x10066140
10034b1e:	mov    DWORD PTR [eax],ecx
10034b20:	mov    ecx,DWORD PTR ds:0x10073610
10034b26:	mov    DWORD PTR [eax+0x4],edx
10034b29:	mov    edx,DWORD PTR ds:0x10073614
10034b2f:	mov    DWORD PTR [eax+0x8],ecx
10034b32:	mov    DWORD PTR [eax+0xc],edx
10034b35:	lea    eax,[esp+0x3c]
10034b39:	push   eax
10034b3a:	call   esi
10034b3c:	mov    edi,DWORD PTR ds:0x10066104
10034b42:	lea    ecx,[esp+0x14]
10034b46:	push   ecx
10034b47:	lea    edx,[esp+0x40]
10034b4b:	push   edx
10034b4c:	call   edi
10034b4e:	push   ebx
10034b4f:	push   0x80
10034b54:	push   0x3
10034b56:	push   ebx
10034b57:	push   ebx
10034b58:	push   0xc0000000
10034b5d:	lea    eax,[esp+0xac]
10034b64:	push   eax
10034b65:	call   DWORD PTR ds:0x100660c0
10034b6b:	cmp    eax,0xffffffff
10034b6e:	jne    0x10034c3d
10034b74:	cmp    BYTE PTR [ebp+0xc],bl
10034b77:	je     0x10034c6b
10034b7d:	call   DWORD PTR ds:0x100660cc
10034b83:	cmp    eax,0x20
10034b86:	jne    0x10034c6b
10034b8c:	lea    ecx,[esp+0x50]
10034b90:	push   ecx
10034b91:	call   esi
10034b93:	lea    edx,[esp+0x24]
10034b97:	push   edx
10034b98:	lea    eax,[esp+0x54]
10034b9c:	push   eax
10034b9d:	call   edi
10034b9f:	mov    ecx,DWORD PTR [esp+0x24]
10034ba3:	mov    eax,DWORD PTR [esp+0x28]
10034ba7:	mov    DWORD PTR [esp+0x34],ecx
10034bab:	mov    ecx,eax
10034bad:	and    eax,0x7fffffff
10034bb2:	mov    DWORD PTR [esp+0x38],eax
10034bb6:	mov    eax,DWORD PTR [esp+0x14]
10034bba:	fild   QWORD PTR [esp+0x34]
10034bbe:	and    ecx,0x80000000
10034bc4:	mov    DWORD PTR [esp+0x30],ecx
10034bc8:	mov    DWORD PTR [esp+0x1c],eax
10034bcc:	mov    eax,DWORD PTR [esp+0x18]
10034bd0:	mov    DWORD PTR [esp+0x2c],ebx
10034bd4:	fild   QWORD PTR [esp+0x2c]
10034bd8:	mov    ecx,eax
10034bda:	and    eax,0x7fffffff
10034bdf:	mov    DWORD PTR [esp+0x20],eax
10034be3:	fchs   
10034be5:	and    ecx,0x80000000
10034beb:	faddp  st(1),st
10034bed:	mov    DWORD PTR [esp+0x40],ecx
10034bf1:	fild   QWORD PTR [esp+0x1c]
10034bf5:	mov    DWORD PTR [esp+0x3c],ebx
10034bf9:	fild   QWORD PTR [esp+0x3c]
10034bfd:	fchs   
10034bff:	faddp  st(1),st
10034c01:	fadd   QWORD PTR ds:0x10074168
10034c07:	fcompp 
10034c09:	fnstsw ax
10034c0b:	test   ah,0x5
10034c0e:	jnp    0x10034c6b
10034c10:	push   ebx
10034c11:	call   DWORD PTR ds:0x100660bc
10034c17:	push   ebx
10034c18:	push   0x80
10034c1d:	push   0x3
10034c1f:	push   ebx
10034c20:	push   ebx
10034c21:	push   0xc0000000
10034c26:	lea    ecx,[esp+0xac]
10034c2d:	push   ecx
10034c2e:	call   DWORD PTR ds:0x100660c0
10034c34:	cmp    eax,0xffffffff
10034c37:	je     0x10034b74
10034c3d:	mov    ecx,DWORD PTR [esp+0x10]
10034c41:	mov    DWORD PTR [ecx],eax
10034c43:	mov    eax,ecx
10034c45:	mov    ecx,DWORD PTR [esp+0x8a8]
10034c4c:	mov    DWORD PTR fs:0x0,ecx
10034c53:	pop    ecx
10034c54:	pop    edi
10034c55:	pop    esi
10034c56:	pop    ebx
10034c57:	mov    ecx,DWORD PTR [esp+0x890]
10034c5e:	xor    ecx,esp
10034c60:	call   0x10042e97
10034c65:	mov    esp,ebp
10034c67:	pop    ebp
10034c68:	ret    0x8
10034c6b:	call   DWORD PTR ds:0x100660cc
10034c71:	push   0x17d1f0a0
10034c76:	push   0x10073618
10034c7b:	call   0x10004246
10034c80:	push   0x26a70dfc
10034c85:	push   eax
10034c86:	call   0x10004246
10034c8b:	push   0x4a87c9da
10034c90:	push   eax
10034c91:	call   0x10004246
10034c96:	push   eax
10034c97:	push   0x12
10034c99:	push   0x1007363c
10034c9e:	call   0x10004258
10034ca3:	mov    esi,eax
10034ca5:	add    esp,0x24
10034ca8:	mov    edi,0xf
10034cad:	push   esi
10034cae:	mov    DWORD PTR [esp+0x6c],edi
10034cb2:	mov    DWORD PTR [esp+0x68],ebx
10034cb6:	mov    BYTE PTR [esp+0x58],bl
10034cba:	call   0x10043010
10034cbf:	add    esp,0x4
10034cc2:	push   eax
10034cc3:	push   esi
10034cc4:	lea    ecx,[esp+0x58]
10034cc8:	call   0x1000133b
10034ccd:	lea    ecx,[esp+0x6c]
10034cd1:	mov    DWORD PTR [esp+0x8b0],ebx
10034cd8:	call   0x10042f01
10034cdd:	push   0xffffffff
10034cdf:	mov    BYTE PTR [esp+0x8b4],0x1
10034ce7:	push   ebx
10034ce8:	lea    edx,[esp+0x58]
10034cec:	push   edx
10034ced:	lea    ecx,[esp+0x84]
10034cf4:	mov    DWORD PTR [esp+0x78],0x10073574
10034cfc:	mov    DWORD PTR [esp+0x9c],edi
10034d03:	mov    DWORD PTR [esp+0x98],ebx
10034d0a:	mov    BYTE PTR [esp+0x88],bl
10034d11:	call   0x10001241
10034d16:	push   0x10074d64
10034d1b:	lea    eax,[esp+0x70]
10034d1f:	push   eax
10034d20:	mov    BYTE PTR [esp+0x8b8],bl
10034d27:	call   0x100479b4
10034d2c:	int3   
10034d2d:	int3   
10034d2e:	int3   
10034d2f:	int3   
10034d30:	mov    ecx,DWORD PTR [eax]
10034d32:	push   ecx
10034d33:	call   DWORD PTR ds:0x10066070
10034d39:	ret    
10034d3a:	int3   
10034d3b:	int3   
10034d3c:	int3   
10034d3d:	int3   
10034d3e:	int3   
10034d3f:	int3   
10034d40:	push   0xffffffff
10034d42:	push   0x10061600
10034d47:	mov    eax,fs:0x0
10034d4d:	push   eax
10034d4e:	sub    esp,0x4c
10034d51:	push   ebx
10034d52:	push   esi
10034d53:	mov    eax,ds:0x1007e030
10034d58:	xor    eax,esp
10034d5a:	push   eax
10034d5b:	lea    eax,[esp+0x58]
10034d5f:	mov    fs:0x0,eax
10034d65:	mov    edx,DWORD PTR [ecx]
10034d67:	xor    ebx,ebx
10034d69:	push   ebx
10034d6a:	lea    eax,[esp+0x14]
10034d6e:	push   eax
10034d6f:	push   ebx
10034d70:	push   ebx
10034d71:	push   ebx
10034d72:	push   ebx
10034d73:	push   0x22c028
10034d78:	push   edx
10034d79:	call   DWORD PTR ds:0x10066260
10034d7f:	test   eax,eax
10034d81:	jne    0x10034e43
10034d87:	push   0x612ba4c8
10034d8c:	push   0x10073650
10034d91:	call   0x10004246
10034d96:	push   0x3ce3bcc8
10034d9b:	push   eax
10034d9c:	call   0x10004246
10034da1:	push   0xff933a
10034da6:	push   eax
10034da7:	call   0x10004246
10034dac:	push   0x446035e4
10034db1:	push   eax
10034db2:	call   0x10004246
10034db7:	push   0x6f09fb64
10034dbc:	push   eax
10034dbd:	call   0x10004246
10034dc2:	push   eax
10034dc3:	push   0x1a
10034dc5:	push   0x10073674
10034dca:	call   0x10004258
10034dcf:	mov    esi,eax
10034dd1:	push   esi
10034dd2:	mov    DWORD PTR [esp+0x64],0xf
10034dda:	mov    DWORD PTR [esp+0x60],ebx
10034dde:	mov    BYTE PTR [esp+0x50],bl
10034de2:	call   0x10043010
10034de7:	add    esp,0x38
10034dea:	push   eax
10034deb:	push   esi
10034dec:	lea    ecx,[esp+0x1c]
10034df0:	call   0x1000133b
10034df5:	lea    ecx,[esp+0x30]
10034df9:	mov    DWORD PTR [esp+0x60],ebx
10034dfd:	call   0x10042f01
10034e02:	push   0xffffffff
10034e04:	mov    BYTE PTR [esp+0x64],0x1
10034e09:	push   ebx
10034e0a:	lea    eax,[esp+0x1c]
10034e0e:	push   eax
10034e0f:	lea    ecx,[esp+0x48]
10034e13:	mov    DWORD PTR [esp+0x3c],0x10073574
10034e1b:	mov    DWORD PTR [esp+0x60],0xf
10034e23:	mov    DWORD PTR [esp+0x5c],ebx
10034e27:	mov    BYTE PTR [esp+0x4c],bl
10034e2b:	call   0x10001241
10034e30:	push   0x10074d64
10034e35:	lea    ecx,[esp+0x34]
10034e39:	push   ecx
10034e3a:	mov    BYTE PTR [esp+0x68],bl
10034e3e:	call   0x100479b4
10034e43:	mov    ecx,DWORD PTR [esp+0x58]
10034e47:	mov    DWORD PTR fs:0x0,ecx
10034e4e:	pop    ecx
10034e4f:	pop    esi
10034e50:	pop    ebx
10034e51:	add    esp,0x58
10034e54:	ret    
10034e55:	int3   
10034e56:	int3   
10034e57:	int3   
10034e58:	int3   
10034e59:	int3   
10034e5a:	int3   
10034e5b:	int3   
10034e5c:	int3   
10034e5d:	int3   
10034e5e:	int3   
10034e5f:	int3   
10034e60:	push   0xffffffff
10034e62:	push   0x10061758
10034e67:	mov    eax,fs:0x0
10034e6d:	push   eax
10034e6e:	sub    esp,0x4c
10034e71:	push   ebx
10034e72:	push   ebp
10034e73:	push   esi
10034e74:	push   edi
10034e75:	mov    eax,ds:0x1007e030
10034e7a:	xor    eax,esp
10034e7c:	push   eax
10034e7d:	lea    eax,[esp+0x60]
10034e81:	mov    fs:0x0,eax
10034e87:	mov    esi,ecx
10034e89:	xor    ebx,ebx
10034e8b:	mov    DWORD PTR [esp+0x14],ebx
10034e8f:	mov    eax,DWORD PTR [esp+0x74]
10034e93:	mov    DWORD PTR [esp+0x68],ebx
10034e97:	mov    edx,DWORD PTR [esi+0x4c]
10034e9a:	mov    edi,DWORD PTR [esi+0x68]
10034e9d:	mov    eax,DWORD PTR [eax+0x14]
10034ea0:	mov    ecx,DWORD PTR [esi+0x30]
10034ea3:	add    edi,edx
10034ea5:	add    edi,eax
10034ea7:	lea    ebp,[edi+ecx*1+0x4]
10034eab:	lea    eax,[ebp+0x20]
10034eae:	push   eax
10034eaf:	mov    DWORD PTR [esp+0x78],eax
10034eb3:	call   0x10043721
10034eb8:	mov    edi,eax
10034eba:	add    esp,0x4
10034ebd:	cmp    edi,ebx
10034ebf:	je     0x10034eca
10034ec1:	push   ebx
10034ec2:	call   0x10042e92
10034ec7:	add    esp,0x4
10034eca:	mov    ecx,DWORD PTR [esp+0x74]
10034ece:	push   ecx
10034ecf:	push   ebx
10034ed0:	push   edi
10034ed1:	mov    DWORD PTR [esp+0x20],edi
10034ed5:	call   0x10045c00
10034eda:	mov    DWORD PTR [edi],ebp
10034edc:	mov    eax,DWORD PTR [esi+0x70]
10034edf:	mov    DWORD PTR [edi+0xc],eax
10034ee2:	mov    edx,DWORD PTR [esi+0x78]
10034ee5:	mov    DWORD PTR [edi+0x10],edx
10034ee8:	mov    eax,DWORD PTR [esi+0x7c]
10034eeb:	mov    DWORD PTR [edi+0x14],eax
10034eee:	mov    ecx,DWORD PTR [esi+0x80]
10034ef4:	mov    DWORD PTR [edi+0x18],ecx
10034ef7:	mov    edx,DWORD PTR [esi+0x84]
10034efd:	mov    DWORD PTR [edi+0x1c],edx
10034f00:	add    esp,0xc
10034f03:	mov    DWORD PTR [edi+0x4],0x7
10034f0a:	cmp    DWORD PTR [esi+0x18],0x10
10034f0e:	jb     0x10034f15
10034f10:	mov    ecx,DWORD PTR [esi+0x4]
10034f13:	jmp    0x10034f18
10034f15:	lea    ecx,[esi+0x4]
10034f18:	lea    edx,[edi+0x20]
10034f1b:	jmp    0x10034f20
10034f1d:	lea    ecx,[ecx+0x0]
10034f20:	mov    al,BYTE PTR [ecx]
10034f22:	mov    BYTE PTR [edx],al
10034f24:	add    ecx,0x1
10034f27:	add    edx,0x1
10034f2a:	cmp    al,bl
10034f2c:	jne    0x10034f20
10034f2e:	cmp    DWORD PTR [esi+0x34],0x10
10034f32:	mov    ebp,DWORD PTR [esi+0x14]
10034f35:	jb     0x10034f3c
10034f37:	mov    edx,DWORD PTR [esi+0x20]
10034f3a:	jmp    0x10034f3f
10034f3c:	lea    edx,[esi+0x20]
10034f3f:	lea    ecx,[edi+ebp*1+0x21]
10034f43:	mov    al,BYTE PTR [edx]
10034f45:	mov    BYTE PTR [ecx],al
10034f47:	add    edx,0x1
10034f4a:	add    ecx,0x1
10034f4d:	cmp    al,bl
10034f4f:	jne    0x10034f43
10034f51:	cmp    DWORD PTR [esi+0x50],0x10
10034f55:	mov    eax,DWORD PTR [esi+0x30]
10034f58:	lea    ebp,[eax+ebp*1+0x2]
10034f5c:	jb     0x10034f63
10034f5e:	mov    edx,DWORD PTR [esi+0x3c]
10034f61:	jmp    0x10034f66
10034f63:	lea    edx,[esi+0x3c]
10034f66:	lea    ecx,[edi+ebp*1+0x20]
10034f6a:	lea    ebx,[ebx+0x0]
10034f70:	mov    al,BYTE PTR [edx]
10034f72:	mov    BYTE PTR [ecx],al
10034f74:	add    edx,0x1
10034f77:	add    ecx,0x1
10034f7a:	cmp    al,bl
10034f7c:	jne    0x10034f70
10034f7e:	cmp    DWORD PTR [esi+0x6c],0x10
10034f82:	mov    eax,DWORD PTR [esi+0x4c]
10034f85:	lea    eax,[eax+ebp*1+0x1]
10034f89:	jb     0x10034f90
10034f8b:	mov    esi,DWORD PTR [esi+0x58]
10034f8e:	jmp    0x10034f93
10034f90:	add    esi,0x58
10034f93:	lea    ecx,[eax+edi*1+0x20]
10034f97:	mov    al,BYTE PTR [esi]
10034f99:	mov    BYTE PTR [ecx],al
10034f9b:	add    esi,0x1
10034f9e:	add    ecx,0x1
10034fa1:	cmp    al,bl
10034fa3:	jne    0x10034f97
10034fa5:	mov    ecx,DWORD PTR [esp+0x74]
10034fa9:	mov    edx,DWORD PTR [esp+0x70]
10034fad:	push   ebx
10034fae:	lea    eax,[esp+0x1c]
10034fb2:	push   eax
10034fb3:	mov    eax,DWORD PTR [edx]
10034fb5:	push   ebx
10034fb6:	push   ebx
10034fb7:	push   ecx
10034fb8:	push   edi
10034fb9:	push   0x22c02c
10034fbe:	push   eax
10034fbf:	call   DWORD PTR ds:0x10066260
10034fc5:	test   eax,eax
10034fc7:	jne    0x10035067
10034fcd:	push   0x28f4b4c8
10034fd2:	push   0x10073690
10034fd7:	call   0x10004246
10034fdc:	push   0x1666fc4c
10034fe1:	push   eax
10034fe2:	call   0x10004246
10034fe7:	push   eax
10034fe8:	push   0x1e
10034fea:	push   0x100736c0
10034fef:	call   0x10004258
10034ff4:	mov    esi,eax
10034ff6:	mov    edi,0xf
10034ffb:	push   esi
10034ffc:	mov    DWORD PTR [esp+0x54],edi
10035000:	mov    DWORD PTR [esp+0x50],ebx
10035004:	mov    BYTE PTR [esp+0x40],bl
10035008:	call   0x10043010
1003500d:	add    esp,0x20
10035010:	push   eax
10035011:	push   esi
10035012:	lea    ecx,[esp+0x24]
10035016:	call   0x1000133b
1003501b:	lea    ecx,[esp+0x38]
1003501f:	mov    BYTE PTR [esp+0x68],0x1
10035024:	call   0x10042f01
10035029:	push   0xffffffff
1003502b:	mov    BYTE PTR [esp+0x6c],0x2
10035030:	push   ebx
10035031:	lea    ecx,[esp+0x24]
10035035:	push   ecx
10035036:	lea    ecx,[esp+0x50]
1003503a:	mov    DWORD PTR [esp+0x44],0x10073574
10035042:	mov    DWORD PTR [esp+0x68],edi
10035046:	mov    DWORD PTR [esp+0x64],ebx
1003504a:	mov    BYTE PTR [esp+0x54],bl
1003504e:	call   0x10001241
10035053:	push   0x10074d64
10035058:	lea    edx,[esp+0x3c]
1003505c:	push   edx
1003505d:	mov    BYTE PTR [esp+0x70],0x1
10035062:	call   0x100479b4
10035067:	push   edi
10035068:	call   0x10042e92
1003506d:	add    esp,0x4
10035070:	mov    ecx,DWORD PTR [esp+0x60]
10035074:	mov    DWORD PTR fs:0x0,ecx
1003507b:	pop    ecx
1003507c:	pop    edi
1003507d:	pop    esi
1003507e:	pop    ebp
1003507f:	pop    ebx
10035080:	add    esp,0x58
10035083:	ret    0x8
10035086:	int3   
10035087:	int3   
10035088:	int3   
10035089:	int3   
1003508a:	int3   
1003508b:	int3   
1003508c:	int3   
1003508d:	int3   
1003508e:	int3   
1003508f:	int3   
10035090:	push   0xffffffff
10035092:	push   0x10061758
10035097:	mov    eax,fs:0x0
1003509d:	push   eax
1003509e:	sub    esp,0x4c
100350a1:	push   ebx
100350a2:	push   ebp
100350a3:	push   esi
100350a4:	push   edi
100350a5:	mov    eax,ds:0x1007e030
100350aa:	xor    eax,esp
100350ac:	push   eax
100350ad:	lea    eax,[esp+0x60]
100350b1:	mov    fs:0x0,eax
100350b7:	xor    ebx,ebx
100350b9:	mov    DWORD PTR [esp+0x14],ebx
100350bd:	mov    eax,DWORD PTR [esp+0x74]
100350c1:	mov    DWORD PTR [esp+0x68],ebx
100350c5:	mov    eax,DWORD PTR [eax+0x14]
100350c8:	lea    edi,[eax+0x1]
100350cb:	lea    ebp,[edi+0x20]
100350ce:	push   ebp
100350cf:	call   0x10043721
100350d4:	mov    esi,eax
100350d6:	add    esp,0x4
100350d9:	cmp    esi,ebx
100350db:	je     0x100350e6
100350dd:	push   ebx
100350de:	call   0x10042e92
100350e3:	add    esp,0x4
100350e6:	push   ebp
100350e7:	push   ebx
100350e8:	push   esi
100350e9:	mov    DWORD PTR [esp+0x20],esi
100350ed:	call   0x10045c00
100350f2:	mov    eax,DWORD PTR [esp+0x84]
100350f9:	add    esp,0xc
100350fc:	cmp    eax,ebx
100350fe:	mov    DWORD PTR [esi],edi
10035100:	je     0x10035111
10035102:	mov    ecx,DWORD PTR [eax]
10035104:	mov    DWORD PTR [esi+0x10],ecx
10035107:	mov    edx,DWORD PTR [eax+0x4]
1003510a:	mov    DWORD PTR [esi+0x14],edx
1003510d:	or     DWORD PTR [esi+0x4],0x2
10035111:	mov    eax,DWORD PTR [esp+0x7c]
10035115:	cmp    eax,ebx
10035117:	mov    edx,0x10
1003511c:	je     0x1003512f
1003511e:	mov    ecx,DWORD PTR [eax]
10035120:	mov    DWORD PTR [esi+0x18],ecx
10035123:	mov    eax,DWORD PTR [eax+0x4]
10035126:	mov    DWORD PTR [esi+0x1c],eax
10035129:	or     DWORD PTR [esi+0x4],0x4
1003512d:	jmp    0x10035132
1003512f:	or     DWORD PTR [esi+0x4],edx
10035132:	mov    ecx,DWORD PTR [esp+0x74]
10035136:	cmp    DWORD PTR [ecx+0x18],edx
10035139:	jb     0x10035140
1003513b:	mov    ecx,DWORD PTR [ecx+0x4]
1003513e:	jmp    0x10035143
10035140:	add    ecx,0x4
10035143:	lea    edx,[esi+0x20]
10035146:	mov    al,BYTE PTR [ecx]
10035148:	mov    BYTE PTR [edx],al
1003514a:	add    ecx,0x1
1003514d:	add    edx,0x1
10035150:	cmp    al,bl
10035152:	jne    0x10035146
10035154:	mov    edx,DWORD PTR [esp+0x70]
10035158:	mov    eax,DWORD PTR [edx]
1003515a:	push   ebx
1003515b:	lea    ecx,[esp+0x1c]
1003515f:	push   ecx
10035160:	push   ebx
10035161:	push   ebx
10035162:	push   ebp
10035163:	push   esi
10035164:	push   0x22c02c
10035169:	push   eax
1003516a:	call   DWORD PTR ds:0x10066260
10035170:	test   eax,eax
10035172:	jne    0x1003521d
10035178:	push   0x7c92541a
1003517d:	push   0x100736e0
10035182:	call   0x10004246
10035187:	push   0x6f66e16
1003518c:	push   eax
1003518d:	call   0x10004246
10035192:	push   0x2d6df018
10035197:	push   eax
10035198:	call   0x10004246
1003519d:	push   eax
1003519e:	push   0x1e
100351a0:	push   0x100736c0
100351a5:	call   0x10004258
100351aa:	mov    esi,eax
100351ac:	mov    edi,0xf
100351b1:	push   esi
100351b2:	mov    DWORD PTR [esp+0x5c],edi
100351b6:	mov    DWORD PTR [esp+0x58],ebx
100351ba:	mov    BYTE PTR [esp+0x48],bl
100351be:	call   0x10043010
100351c3:	add    esp,0x28
100351c6:	push   eax
100351c7:	push   esi
100351c8:	lea    ecx,[esp+0x24]
100351cc:	call   0x1000133b
100351d1:	lea    ecx,[esp+0x38]
100351d5:	mov    BYTE PTR [esp+0x68],0x1
100351da:	call   0x10042f01
100351df:	push   0xffffffff
100351e1:	mov    BYTE PTR [esp+0x6c],0x2
100351e6:	push   ebx
100351e7:	lea    ecx,[esp+0x24]
100351eb:	push   ecx
100351ec:	lea    ecx,[esp+0x50]
100351f0:	mov    DWORD PTR [esp+0x44],0x10073574
100351f8:	mov    DWORD PTR [esp+0x68],edi
100351fc:	mov    DWORD PTR [esp+0x64],ebx
10035200:	mov    BYTE PTR [esp+0x54],bl
10035204:	call   0x10001241
10035209:	push   0x10074d64
1003520e:	lea    edx,[esp+0x3c]
10035212:	push   edx
10035213:	mov    BYTE PTR [esp+0x70],0x1
10035218:	call   0x100479b4
1003521d:	push   esi
1003521e:	call   0x10042e92
10035223:	add    esp,0x4
10035226:	mov    ecx,DWORD PTR [esp+0x60]
1003522a:	mov    DWORD PTR fs:0x0,ecx
10035231:	pop    ecx
10035232:	pop    edi
10035233:	pop    esi
10035234:	pop    ebp
10035235:	pop    ebx
10035236:	add    esp,0x58
10035239:	ret    0x10
1003523c:	int3   
1003523d:	int3   
1003523e:	int3   
1003523f:	int3   
10035240:	push   0xffffffff
10035242:	push   0x10061720
10035247:	mov    eax,fs:0x0
1003524d:	push   eax
1003524e:	sub    esp,0x50
10035251:	push   ebx
10035252:	push   ebp
10035253:	push   esi
10035254:	push   edi
10035255:	mov    eax,ds:0x1007e030
1003525a:	xor    eax,esp
1003525c:	push   eax
1003525d:	lea    eax,[esp+0x64]
10035261:	mov    fs:0x0,eax
10035267:	mov    ebp,DWORD PTR [esp+0x78]
1003526b:	mov    eax,DWORD PTR [ebp+0x14]
1003526e:	lea    esi,[eax+0x1]
10035271:	lea    eax,[esi+0xe8]
10035277:	push   eax
10035278:	call   0x10043721
1003527d:	mov    edi,eax
1003527f:	add    esp,0x4
10035282:	mov    DWORD PTR [esp+0x14],edi
10035286:	xor    ebx,ebx
10035288:	mov    DWORD PTR [esp+0x6c],ebx
1003528c:	mov    DWORD PTR [edi],esi
1003528e:	mov    DWORD PTR [edi+0x4],ebx
10035291:	cmp    DWORD PTR [ebp+0x18],0x10
10035295:	jb     0x1003529c
10035297:	mov    ecx,DWORD PTR [ebp+0x4]
1003529a:	jmp    0x1003529f
1003529c:	lea    ecx,[ebp+0x4]
1003529f:	lea    edx,[edi+0x20]
100352a2:	mov    al,BYTE PTR [ecx]
100352a4:	mov    BYTE PTR [edx],al
100352a6:	add    ecx,0x1
100352a9:	add    edx,0x1
100352ac:	cmp    al,bl
100352ae:	jne    0x100352a2
100352b0:	mov    eax,DWORD PTR [edi]
100352b2:	mov    edx,DWORD PTR [esp+0x74]
100352b6:	push   ebx
100352b7:	add    eax,0x20
100352ba:	lea    ecx,[esp+0x1c]
100352be:	push   ecx
100352bf:	push   eax
100352c0:	push   edi
100352c1:	push   eax
100352c2:	mov    eax,DWORD PTR [edx]
100352c4:	push   edi
100352c5:	push   0x22c030
100352ca:	push   eax
100352cb:	call   DWORD PTR ds:0x10066260
100352d1:	test   eax,eax
100352d3:	jne    0x1003537e
100352d9:	push   0x17982ee4
100352de:	push   0x10073714
100352e3:	call   0x10004246
100352e8:	push   0x1567e5b8
100352ed:	push   eax
100352ee:	call   0x10004246
100352f3:	push   0x4f59a82e
100352f8:	push   eax
100352f9:	call   0x10004246
100352fe:	push   eax
100352ff:	push   0x1e
10035301:	push   0x10073748
10035306:	call   0x10004258
1003530b:	mov    esi,eax
1003530d:	mov    edi,0xf
10035312:	push   esi
10035313:	mov    DWORD PTR [esp+0x5c],edi
10035317:	mov    DWORD PTR [esp+0x58],ebx
1003531b:	mov    BYTE PTR [esp+0x48],bl
1003531f:	call   0x10043010
10035324:	add    esp,0x28
10035327:	push   eax
10035328:	push   esi
10035329:	lea    ecx,[esp+0x24]
1003532d:	call   0x1000133b
10035332:	lea    ecx,[esp+0x38]
10035336:	mov    BYTE PTR [esp+0x6c],0x1
1003533b:	call   0x10042f01
10035340:	push   0xffffffff
10035342:	mov    BYTE PTR [esp+0x70],0x2
10035347:	push   ebx
10035348:	lea    ecx,[esp+0x24]
1003534c:	push   ecx
1003534d:	lea    ecx,[esp+0x50]
10035351:	mov    DWORD PTR [esp+0x44],0x10073574
10035359:	mov    DWORD PTR [esp+0x68],edi
1003535d:	mov    DWORD PTR [esp+0x64],ebx
10035361:	mov    BYTE PTR [esp+0x54],bl
10035365:	call   0x10001241
1003536a:	push   0x10074d64
1003536f:	lea    edx,[esp+0x3c]
10035373:	push   edx
10035374:	mov    BYTE PTR [esp+0x74],0x1
10035379:	call   0x100479b4
1003537e:	cmp    DWORD PTR [edi+0x8],0x2
10035382:	je     0x100353a4
10035384:	cmp    DWORD PTR [edi+0x8],0x1
10035388:	jne    0x100354bd
1003538e:	push   edi
1003538f:	call   0x10042e92
10035394:	add    esp,0x4
10035397:	xor    al,al
10035399:	jmp    0x10035610
1003539e:	mov    edi,edi
100353a0:	mov    ebp,DWORD PTR [esp+0x78]
100353a4:	mov    eax,DWORD PTR [ebp+0x14]
100353a7:	mov    ebp,DWORD PTR [edi]
100353a9:	lea    ecx,[eax+0x1]
100353ac:	cmp    ebp,ecx
100353ae:	ja     0x100353b3
100353b0:	lea    ebp,[eax+0x1]
100353b3:	lea    edx,[ebp+0x20]
100353b6:	push   edx
100353b7:	call   0x10043721
100353bc:	mov    esi,eax
100353be:	add    esp,0x4
100353c1:	cmp    esi,edi
100353c3:	je     0x100353ce
100353c5:	push   edi
100353c6:	call   0x10042e92
100353cb:	add    esp,0x4
100353ce:	mov    ecx,DWORD PTR [esp+0x78]
100353d2:	mov    edi,esi
100353d4:	mov    DWORD PTR [esi],ebp
100353d6:	mov    DWORD PTR [esp+0x14],edi
100353da:	mov    DWORD PTR [esi+0x4],ebx
100353dd:	call   0x100011ef
100353e2:	lea    edx,[esi+0x20]
100353e5:	mov    cl,BYTE PTR [eax]
100353e7:	mov    BYTE PTR [edx],cl
100353e9:	add    eax,0x1
100353ec:	add    edx,0x1
100353ef:	cmp    cl,bl
100353f1:	jne    0x100353e5
100353f3:	mov    eax,DWORD PTR [esi]
100353f5:	mov    edx,DWORD PTR [esp+0x74]
100353f9:	push   ebx
100353fa:	add    eax,0x20
100353fd:	lea    ecx,[esp+0x1c]
10035401:	push   ecx
10035402:	push   eax
10035403:	push   esi
10035404:	push   eax
10035405:	mov    eax,DWORD PTR [edx]
10035407:	push   esi
10035408:	push   0x22c030
1003540d:	push   eax
1003540e:	call   DWORD PTR ds:0x10066260
10035414:	test   eax,eax
10035416:	je     0x10035423
10035418:	cmp    DWORD PTR [esi+0x8],0x2
1003541c:	je     0x100353a0
1003541e:	jmp    0x10035384
10035423:	push   0x3c8822fa
10035428:	push   0x10073768
1003542d:	call   0x10004246
10035432:	push   0x483ef19e
10035437:	push   eax
10035438:	call   0x10004246
1003543d:	push   eax
1003543e:	push   0x1e
10035440:	push   0x10073748
10035445:	call   0x10004258
1003544a:	mov    esi,eax
1003544c:	mov    edi,0xf
10035451:	push   esi
10035452:	mov    DWORD PTR [esp+0x54],edi
10035456:	mov    DWORD PTR [esp+0x50],ebx
1003545a:	mov    BYTE PTR [esp+0x40],bl
1003545e:	call   0x10043010
10035463:	add    esp,0x20
10035466:	push   eax
10035467:	push   esi
10035468:	lea    ecx,[esp+0x24]
1003546c:	call   0x1000133b
10035471:	lea    ecx,[esp+0x38]
10035475:	mov    BYTE PTR [esp+0x6c],0x3
1003547a:	call   0x10042f01
1003547f:	push   0xffffffff
10035481:	mov    BYTE PTR [esp+0x70],0x4
10035486:	push   ebx
10035487:	lea    ecx,[esp+0x24]
1003548b:	push   ecx
1003548c:	lea    ecx,[esp+0x50]
10035490:	mov    DWORD PTR [esp+0x44],0x10073574
10035498:	mov    DWORD PTR [esp+0x68],edi
1003549c:	mov    DWORD PTR [esp+0x64],ebx
100354a0:	mov    BYTE PTR [esp+0x54],bl
100354a4:	call   0x10001241
100354a9:	push   0x10074d64
100354ae:	lea    edx,[esp+0x3c]
100354b2:	push   edx
100354b3:	mov    BYTE PTR [esp+0x74],0x3
100354b8:	call   0x100479b4
100354bd:	lea    eax,[edi+0x20]
100354c0:	lea    edx,[eax+0x1]
100354c3:	mov    cl,BYTE PTR [eax]
100354c5:	add    eax,0x1
100354c8:	cmp    cl,bl
100354ca:	jne    0x100354c3
100354cc:	sub    eax,edx
100354ce:	mov    esi,eax
100354d0:	lea    ebp,[esi+edi*1+0x21]
100354d4:	push   ebp
100354d5:	mov    DWORD PTR [esp+0x38],0xf
100354dd:	mov    DWORD PTR [esp+0x34],ebx
100354e1:	mov    BYTE PTR [esp+0x24],bl
100354e5:	call   0x10043010
100354ea:	add    esp,0x4
100354ed:	push   eax
100354ee:	push   ebp
100354ef:	lea    ecx,[esp+0x24]
100354f3:	call   0x1000133b
100354f8:	mov    ebp,DWORD PTR [esp+0x7c]
100354fc:	push   0xffffffff
100354fe:	push   ebx
100354ff:	lea    eax,[esp+0x24]
10035503:	push   eax
10035504:	lea    ecx,[ebp+0x1c]
10035507:	mov    BYTE PTR [esp+0x78],0x5
1003550c:	call   0x10001241
10035511:	mov    BYTE PTR [esp+0x6c],bl
10035515:	cmp    DWORD PTR [esp+0x34],0x10
1003551a:	jb     0x10035529
1003551c:	mov    ecx,DWORD PTR [esp+0x20]
10035520:	push   ecx
10035521:	call   0x10042e92
10035526:	add    esp,0x4
10035529:	mov    eax,DWORD PTR [ebp+0x30]
1003552c:	lea    esi,[esi+eax*1+0x2]
10035530:	lea    ebp,[esi+edi*1+0x20]
10035534:	push   ebp
10035535:	mov    DWORD PTR [esp+0x38],0xf
1003553d:	mov    DWORD PTR [esp+0x34],ebx
10035541:	mov    BYTE PTR [esp+0x24],bl
10035545:	call   0x10043010
1003554a:	add    esp,0x4
1003554d:	push   eax
1003554e:	push   ebp
1003554f:	lea    ecx,[esp+0x24]
10035553:	call   0x1000133b
10035558:	mov    ebp,DWORD PTR [esp+0x7c]
1003555c:	push   0xffffffff
1003555e:	push   ebx
1003555f:	lea    edx,[esp+0x24]
10035563:	push   edx
10035564:	lea    ecx,[ebp+0x38]
10035567:	mov    BYTE PTR [esp+0x78],0x6
1003556c:	call   0x10001241
10035571:	mov    BYTE PTR [esp+0x6c],bl
10035575:	cmp    DWORD PTR [esp+0x34],0x10
1003557a:	jb     0x10035589
1003557c:	mov    eax,DWORD PTR [esp+0x20]
10035580:	push   eax
10035581:	call   0x10042e92
10035586:	add    esp,0x4
10035589:	mov    eax,DWORD PTR [ebp+0x4c]
1003558c:	lea    esi,[esi+eax*1+0x1]
10035590:	lea    esi,[esi+edi*1+0x20]
10035594:	push   esi
10035595:	mov    DWORD PTR [esp+0x38],0xf
1003559d:	mov    DWORD PTR [esp+0x34],ebx
100355a1:	mov    BYTE PTR [esp+0x24],bl
100355a5:	call   0x10043010
100355aa:	add    esp,0x4
100355ad:	push   eax
100355ae:	push   esi
100355af:	lea    ecx,[esp+0x24]
100355b3:	call   0x1000133b
100355b8:	push   0xffffffff
100355ba:	push   ebx
100355bb:	lea    ecx,[esp+0x24]
100355bf:	push   ecx
100355c0:	lea    ecx,[ebp+0x54]
100355c3:	mov    BYTE PTR [esp+0x78],0x7
100355c8:	call   0x10001241
100355cd:	cmp    DWORD PTR [esp+0x34],0x10
100355d2:	jb     0x100355e1
100355d4:	mov    edx,DWORD PTR [esp+0x20]
100355d8:	push   edx
100355d9:	call   0x10042e92
100355de:	add    esp,0x4
100355e1:	mov    eax,DWORD PTR [edi+0xc]
100355e4:	mov    DWORD PTR [ebp+0x70],eax
100355e7:	mov    ecx,DWORD PTR [edi+0x10]
100355ea:	mov    DWORD PTR [ebp+0x78],ecx
100355ed:	mov    edx,DWORD PTR [edi+0x14]
100355f0:	mov    DWORD PTR [ebp+0x7c],edx
100355f3:	mov    eax,DWORD PTR [edi+0x18]
100355f6:	mov    DWORD PTR [ebp+0x80],eax
100355fc:	mov    ecx,DWORD PTR [edi+0x1c]
100355ff:	push   edi
10035600:	mov    DWORD PTR [ebp+0x84],ecx
10035606:	call   0x10042e92
1003560b:	add    esp,0x4
1003560e:	mov    al,0x1
10035610:	mov    ecx,DWORD PTR [esp+0x64]
10035614:	mov    DWORD PTR fs:0x0,ecx
1003561b:	pop    ecx
1003561c:	pop    edi
1003561d:	pop    esi
1003561e:	pop    ebp
1003561f:	pop    ebx
10035620:	add    esp,0x5c
10035623:	ret    0xc
10035626:	int3   
10035627:	int3   
10035628:	int3   
10035629:	int3   
1003562a:	int3   
1003562b:	int3   
1003562c:	int3   
1003562d:	int3   
1003562e:	int3   
1003562f:	int3   
10035630:	push   ebp
10035631:	mov    ebp,esp
10035633:	and    esp,0xfffffff8
10035636:	push   0xffffffff
10035638:	push   0x100616b8
1003563d:	mov    eax,fs:0x0
10035643:	push   eax
10035644:	sub    esp,0x58
10035647:	push   ebx
10035648:	push   esi
10035649:	push   edi
1003564a:	mov    eax,ds:0x1007e030
1003564f:	xor    eax,esp
10035651:	push   eax
10035652:	lea    eax,[esp+0x68]
10035656:	mov    fs:0x0,eax
1003565c:	mov    ebx,ecx
1003565e:	xor    eax,eax
10035660:	mov    DWORD PTR [esp+0x18],eax
10035664:	mov    ecx,DWORD PTR [ebp+0xc]
10035667:	mov    DWORD PTR [esp+0x70],eax
1003566b:	mov    eax,DWORD PTR [ebx+0x14]
1003566e:	mov    ecx,DWORD PTR [ecx+0x14]
10035671:	lea    edi,[eax+ecx*1+0x4]
10035675:	lea    eax,[edi+0xc]
10035678:	push   eax
10035679:	mov    DWORD PTR [esp+0x18],eax
1003567d:	call   0x10043721
10035682:	mov    esi,eax
10035684:	add    esp,0x4
10035687:	test   esi,esi
10035689:	je     0x10035695
1003568b:	push   0x0
1003568d:	call   0x10042e92
10035692:	add    esp,0x4
10035695:	mov    edx,DWORD PTR [esp+0x14]
10035699:	push   edx
1003569a:	push   0x0
1003569c:	push   esi
1003569d:	mov    DWORD PTR [esp+0x24],esi
100356a1:	call   0x10045c00
100356a6:	mov    DWORD PTR [esi],edi
100356a8:	mov    edi,0x10
100356ad:	add    esp,0xc
100356b0:	cmp    DWORD PTR [ebx+0x18],edi
100356b3:	jb     0x100356ba
100356b5:	mov    ecx,DWORD PTR [ebx+0x4]
100356b8:	jmp    0x100356bd
100356ba:	lea    ecx,[ebx+0x4]
100356bd:	lea    edx,[esi+0xc]
100356c0:	mov    al,BYTE PTR [ecx]
100356c2:	mov    BYTE PTR [edx],al
100356c4:	add    ecx,0x1
100356c7:	add    edx,0x1
100356ca:	test   al,al
100356cc:	jne    0x100356c0
100356ce:	mov    edx,DWORD PTR [ebp+0xc]
100356d1:	cmp    DWORD PTR [edx+0x18],edi
100356d4:	mov    ebx,DWORD PTR [ebx+0x14]
100356d7:	jb     0x100356de
100356d9:	mov    edx,DWORD PTR [edx+0x4]
100356dc:	jmp    0x100356e1
100356de:	add    edx,0x4
100356e1:	lea    ecx,[ebx+esi*1+0xd]
100356e5:	mov    al,BYTE PTR [edx]
100356e7:	mov    BYTE PTR [ecx],al
100356e9:	add    edx,0x1
100356ec:	add    ecx,0x1
100356ef:	test   al,al
100356f1:	jne    0x100356e5
100356f3:	mov    ecx,DWORD PTR [esp+0x14]
100356f7:	mov    edx,DWORD PTR [ebp+0x8]
100356fa:	xor    ebx,ebx
100356fc:	push   ebx
100356fd:	lea    eax,[esp+0x20]
10035701:	push   eax
10035702:	mov    eax,DWORD PTR [edx]
10035704:	push   ebx
10035705:	push   ebx
10035706:	push   ecx
10035707:	push   esi
10035708:	push   0x22c084
1003570d:	push   eax
1003570e:	call   DWORD PTR ds:0x10066260
10035714:	test   eax,eax
10035716:	jne    0x100357c1
1003571c:	push   0x2c2bcc1c
10035721:	push   0x100737a8
10035726:	call   0x10004246
1003572b:	push   0x1f4f55ce
10035730:	push   eax
10035731:	call   0x10004246
10035736:	push   0x24bedc64
1003573b:	push   eax
1003573c:	call   0x10004246
10035741:	push   eax
10035742:	push   0x16
10035744:	push   0x100737d0
10035749:	call   0x10004258
1003574e:	mov    esi,eax
10035750:	mov    edi,0xf
10035755:	push   esi
10035756:	mov    DWORD PTR [esp+0x60],edi
1003575a:	mov    DWORD PTR [esp+0x5c],ebx
1003575e:	mov    BYTE PTR [esp+0x4c],bl
10035762:	call   0x10043010
10035767:	add    esp,0x28
1003576a:	push   eax
1003576b:	push   esi
1003576c:	lea    ecx,[esp+0x28]
10035770:	call   0x1000133b
10035775:	lea    ecx,[esp+0x3c]
10035779:	mov    BYTE PTR [esp+0x70],0x1
1003577e:	call   0x10042f01
10035783:	push   0xffffffff
10035785:	mov    BYTE PTR [esp+0x74],0x2
1003578a:	push   ebx
1003578b:	lea    ecx,[esp+0x28]
1003578f:	push   ecx
10035790:	lea    ecx,[esp+0x54]
10035794:	mov    DWORD PTR [esp+0x48],0x10073574
1003579c:	mov    DWORD PTR [esp+0x6c],edi
100357a0:	mov    DWORD PTR [esp+0x68],ebx
100357a4:	mov    BYTE PTR [esp+0x58],bl
100357a8:	call   0x10001241
100357ad:	push   0x10074d64
100357b2:	lea    edx,[esp+0x40]
100357b6:	push   edx
100357b7:	mov    BYTE PTR [esp+0x78],0x1
100357bc:	call   0x100479b4
100357c1:	push   esi
100357c2:	call   0x10042e92
100357c7:	add    esp,0x4
100357ca:	mov    ecx,DWORD PTR [esp+0x68]
100357ce:	mov    DWORD PTR fs:0x0,ecx
100357d5:	pop    ecx
100357d6:	pop    edi
100357d7:	pop    esi
100357d8:	pop    ebx
100357d9:	mov    esp,ebp
100357db:	pop    ebp
100357dc:	ret    0x8
100357df:	int3   
100357e0:	push   ebp
100357e1:	mov    ebp,esp
100357e3:	and    esp,0xfffffff8
100357e6:	push   0xffffffff
100357e8:	push   0x10061678
100357ed:	mov    eax,fs:0x0
100357f3:	push   eax
100357f4:	sub    esp,0x50
100357f7:	push   ebx
100357f8:	push   esi
100357f9:	push   edi
100357fa:	mov    eax,ds:0x1007e030
100357ff:	xor    eax,esp
10035801:	push   eax
10035802:	lea    eax,[esp+0x60]
10035806:	mov    fs:0x0,eax
1003580c:	mov    ebx,DWORD PTR [ebp+0x10]
1003580f:	mov    DWORD PTR [esp+0x14],0x0
10035817:	mov    esi,DWORD PTR [ebx+0x14]
1003581a:	lea    eax,[esi+0x40d]
10035820:	push   eax
10035821:	call   0x10043721
10035826:	mov    edi,eax
10035828:	add    esp,0x4
1003582b:	mov    DWORD PTR [esp+0x10],edi
1003582f:	add    esi,0x401
10035835:	mov    DWORD PTR [esp+0x68],0x0
1003583d:	mov    DWORD PTR [edi],esi
1003583f:	cmp    DWORD PTR [ebx+0x18],0x10
10035843:	jb     0x1003584a
10035845:	mov    ecx,DWORD PTR [ebx+0x4]
10035848:	jmp    0x1003584d
1003584a:	lea    ecx,[ebx+0x4]
1003584d:	lea    edx,[edi+0xc]
10035850:	mov    al,BYTE PTR [ecx]
10035852:	mov    BYTE PTR [edx],al
10035854:	add    ecx,0x1
10035857:	add    edx,0x1
1003585a:	test   al,al
1003585c:	jne    0x10035850
1003585e:	mov    eax,DWORD PTR [edi]
10035860:	mov    edx,DWORD PTR [ebp+0x8]
10035863:	push   0x0
10035865:	add    eax,0xc
10035868:	lea    ecx,[esp+0x18]
1003586c:	push   ecx
1003586d:	push   eax
1003586e:	push   edi
1003586f:	push   eax
10035870:	mov    eax,DWORD PTR [edx]
10035872:	push   edi
10035873:	push   0x22c088
10035878:	push   eax
10035879:	call   DWORD PTR ds:0x10066260
1003587f:	test   eax,eax
10035881:	jne    0x10035918
10035887:	push   0x45bba2b0
1003588c:	push   0x100737e8
10035891:	call   0x10004246
10035896:	push   eax
10035897:	push   0x1b
10035899:	push   0x10073810
1003589e:	call   0x10004258
100358a3:	mov    esi,eax
100358a5:	xor    ebx,ebx
100358a7:	mov    edi,0xf
100358ac:	push   esi
100358ad:	mov    DWORD PTR [esp+0x48],edi
100358b1:	mov    DWORD PTR [esp+0x44],ebx
100358b5:	mov    BYTE PTR [esp+0x34],bl
100358b9:	call   0x10043010
100358be:	add    esp,0x18
100358c1:	push   eax
100358c2:	push   esi
100358c3:	lea    ecx,[esp+0x20]
100358c7:	call   0x1000133b
100358cc:	lea    ecx,[esp+0x34]
100358d0:	mov    BYTE PTR [esp+0x68],0x1
100358d5:	call   0x10042f01
100358da:	push   0xffffffff
100358dc:	mov    BYTE PTR [esp+0x6c],0x2
100358e1:	push   ebx
100358e2:	lea    ecx,[esp+0x20]
100358e6:	push   ecx
100358e7:	lea    ecx,[esp+0x4c]
100358eb:	mov    DWORD PTR [esp+0x40],0x10073574
100358f3:	mov    DWORD PTR [esp+0x64],edi
100358f7:	mov    DWORD PTR [esp+0x60],ebx
100358fb:	mov    BYTE PTR [esp+0x50],bl
100358ff:	call   0x10001241
10035904:	push   0x10074d64
10035909:	lea    edx,[esp+0x38]
1003590d:	push   edx
1003590e:	mov    BYTE PTR [esp+0x70],0x1
10035913:	call   0x100479b4
10035918:	cmp    DWORD PTR [edi+0x8],0x2
1003591c:	je     0x10035958
1003591e:	cmp    DWORD PTR [edi+0x8],0x0
10035922:	je     0x10035a62
10035928:	mov    esi,DWORD PTR [ebp+0xc]
1003592b:	mov    DWORD PTR [esi+0x18],0xf
10035932:	mov    DWORD PTR [esi+0x14],0x0
10035939:	push   0x1006cd08
1003593e:	mov    BYTE PTR [esi+0x4],0x0
10035942:	call   0x10043010
10035947:	add    esp,0x4
1003594a:	push   eax
1003594b:	push   0x1006cd08
10035950:	jmp    0x10035a96
10035955:	mov    ebx,DWORD PTR [ebp+0x10]
10035958:	mov    eax,DWORD PTR [ebx+0x14]
1003595b:	mov    ebx,DWORD PTR [edi]
1003595d:	lea    ecx,[eax+0x1]
10035960:	cmp    ebx,ecx
10035962:	ja     0x10035967
10035964:	lea    ebx,[eax+0x1]
10035967:	lea    edx,[ebx+0xc]
1003596a:	push   edx
1003596b:	call   0x10043721
10035970:	mov    esi,eax
10035972:	add    esp,0x4
10035975:	cmp    esi,edi
10035977:	je     0x10035982
10035979:	push   edi
1003597a:	call   0x10042e92
1003597f:	add    esp,0x4
10035982:	mov    ecx,DWORD PTR [ebp+0x10]
10035985:	mov    edi,esi
10035987:	mov    DWORD PTR [esp+0x10],edi
1003598b:	mov    DWORD PTR [esi],ebx
1003598d:	call   0x100011ef
10035992:	lea    edx,[esi+0xc]
10035995:	mov    cl,BYTE PTR [eax]
10035997:	mov    BYTE PTR [edx],cl
10035999:	add    eax,0x1
1003599c:	add    edx,0x1
1003599f:	test   cl,cl
100359a1:	jne    0x10035995
100359a3:	mov    eax,DWORD PTR [esi]
100359a5:	mov    edx,DWORD PTR [ebp+0x8]
100359a8:	push   0x0
100359aa:	add    eax,0xc
100359ad:	lea    ecx,[esp+0x18]
100359b1:	push   ecx
100359b2:	push   eax
100359b3:	push   esi
100359b4:	push   eax
100359b5:	mov    eax,DWORD PTR [edx]
100359b7:	push   esi
100359b8:	push   0x22c088
100359bd:	push   eax
100359be:	call   DWORD PTR ds:0x10066260
100359c4:	test   eax,eax
100359c6:	je     0x100359d3
100359c8:	cmp    DWORD PTR [esi+0x8],0x2
100359cc:	je     0x10035955
100359ce:	jmp    0x1003591e
100359d3:	push   0x1007382c
100359d8:	push   0x16
100359da:	push   0x10073850
100359df:	call   0x10004258
100359e4:	mov    esi,eax
100359e6:	mov    edi,0xf
100359eb:	push   esi
100359ec:	mov    DWORD PTR [esp+0x40],edi
100359f0:	mov    DWORD PTR [esp+0x3c],0x0
100359f8:	mov    BYTE PTR [esp+0x2c],0x0
100359fd:	call   0x10043010
10035a02:	add    esp,0x10
10035a05:	push   eax
10035a06:	push   esi
10035a07:	lea    ecx,[esp+0x20]
10035a0b:	call   0x1000133b
10035a10:	mov    bl,0x3
10035a12:	lea    ecx,[esp+0x34]
10035a16:	mov    BYTE PTR [esp+0x68],bl
10035a1a:	call   0x10042f01
10035a1f:	push   0xffffffff
10035a21:	mov    BYTE PTR [esp+0x6c],0x4
10035a26:	push   0x0
10035a28:	lea    ecx,[esp+0x20]
10035a2c:	push   ecx
10035a2d:	lea    ecx,[esp+0x4c]
10035a31:	mov    DWORD PTR [esp+0x40],0x10073574
10035a39:	mov    DWORD PTR [esp+0x64],edi
10035a3d:	mov    DWORD PTR [esp+0x60],0x0
10035a45:	mov    BYTE PTR [esp+0x50],0x0
10035a4a:	call   0x10001241
10035a4f:	push   0x10074d64
10035a54:	lea    edx,[esp+0x38]
10035a58:	push   edx
10035a59:	mov    BYTE PTR [esp+0x70],bl
10035a5d:	call   0x100479b4
10035a62:	lea    eax,[edi+0xc]
10035a65:	lea    edx,[eax+0x1]
10035a68:	mov    cl,BYTE PTR [eax]
10035a6a:	add    eax,0x1
10035a6d:	test   cl,cl
10035a6f:	jne    0x10035a68
10035a71:	mov    esi,DWORD PTR [ebp+0xc]
10035a74:	sub    eax,edx
10035a76:	lea    ebx,[eax+edi*1+0xd]
10035a7a:	mov    DWORD PTR [esi+0x18],0xf
10035a81:	mov    DWORD PTR [esi+0x14],0x0
10035a88:	push   ebx
10035a89:	mov    BYTE PTR [esi+0x4],cl
10035a8c:	call   0x10043010
10035a91:	add    esp,0x4
10035a94:	push   eax
10035a95:	push   ebx
10035a96:	mov    ecx,esi
10035a98:	call   0x1000133b
10035a9d:	push   edi
10035a9e:	call   0x10042e92
10035aa3:	mov    eax,esi
10035aa5:	add    esp,0x4
10035aa8:	mov    ecx,DWORD PTR [esp+0x60]
10035aac:	mov    DWORD PTR fs:0x0,ecx
10035ab3:	pop    ecx
10035ab4:	pop    edi
10035ab5:	pop    esi
10035ab6:	pop    ebx
10035ab7:	mov    esp,ebp
10035ab9:	pop    ebp
10035aba:	ret    0xc
10035abd:	int3   
10035abe:	int3   
10035abf:	int3   
10035ac0:	push   ebp
10035ac1:	mov    ebp,esp
10035ac3:	and    esp,0xfffffff8
10035ac6:	push   0xffffffff
10035ac8:	push   0x10061630
10035acd:	mov    eax,fs:0x0
10035ad3:	push   eax
10035ad4:	sub    esp,0x64
10035ad7:	push   ebx
10035ad8:	push   esi
10035ad9:	mov    eax,ds:0x1007e030
10035ade:	xor    eax,esp
10035ae0:	push   eax
10035ae1:	lea    eax,[esp+0x70]
10035ae5:	mov    fs:0x0,eax
10035aeb:	mov    esi,ecx
10035aed:	mov    eax,DWORD PTR [ebp+0xc]
10035af0:	xor    ebx,ebx
10035af2:	push   ebx
10035af3:	lea    ecx,[esp+0x14]
10035af7:	push   ecx
10035af8:	mov    ecx,DWORD PTR [ebp+0x8]
10035afb:	push   0x10
10035afd:	lea    edx,[esp+0x20]
10035b01:	push   edx
10035b02:	push   0x10
10035b04:	mov    DWORD PTR [esp+0x28],eax
10035b08:	mov    eax,edx
10035b0a:	mov    edx,DWORD PTR [ecx]
10035b0c:	push   eax
10035b0d:	push   0x22c020
10035b12:	push   edx
10035b13:	call   DWORD PTR ds:0x10066260
10035b19:	test   eax,eax
10035b1b:	jne    0x10035bbf
10035b21:	push   0x269f5c30
10035b26:	push   0x10073868
10035b2b:	call   0x10004246
10035b30:	push   0x86dfc40
10035b35:	push   eax
10035b36:	call   0x10004246
10035b3b:	push   eax
10035b3c:	push   0x1e
10035b3e:	push   0x1007389c
10035b43:	call   0x10004258
10035b48:	mov    esi,eax
10035b4a:	push   esi
10035b4b:	mov    DWORD PTR [esp+0x60],0xf
10035b53:	mov    DWORD PTR [esp+0x5c],ebx
10035b57:	mov    BYTE PTR [esp+0x4c],bl
10035b5b:	call   0x10043010
10035b60:	add    esp,0x20
10035b63:	push   eax
10035b64:	push   esi
10035b65:	lea    ecx,[esp+0x30]
10035b69:	call   0x1000133b
10035b6e:	lea    ecx,[esp+0x44]
10035b72:	mov    DWORD PTR [esp+0x78],ebx
10035b76:	call   0x10042f01
10035b7b:	push   0xffffffff
10035b7d:	mov    BYTE PTR [esp+0x7c],0x1
10035b82:	push   ebx
10035b83:	lea    eax,[esp+0x30]
10035b87:	push   eax
10035b88:	lea    ecx,[esp+0x5c]
10035b8c:	mov    DWORD PTR [esp+0x50],0x10073574
10035b94:	mov    DWORD PTR [esp+0x74],0xf
10035b9c:	mov    DWORD PTR [esp+0x70],ebx
10035ba0:	mov    BYTE PTR [esp+0x60],bl
10035ba4:	call   0x10001241
10035ba9:	push   0x10074d64
10035bae:	lea    ecx,[esp+0x48]
10035bb2:	push   ecx
10035bb3:	mov    BYTE PTR [esp+0x80],bl
10035bba:	call   0x100479b4
10035bbf:	mov    eax,DWORD PTR [esp+0x20]
10035bc3:	mov    edx,DWORD PTR [esp+0x1c]
10035bc7:	mov    DWORD PTR [esi+0x4],eax
10035bca:	mov    DWORD PTR [esi],edx
10035bcc:	mov    eax,esi
10035bce:	mov    ecx,DWORD PTR [esp+0x70]
10035bd2:	mov    DWORD PTR fs:0x0,ecx
10035bd9:	pop    ecx
10035bda:	pop    esi
10035bdb:	pop    ebx
10035bdc:	mov    esp,ebp
10035bde:	pop    ebp
10035bdf:	ret    0x8
10035be2:	int3   
10035be3:	int3   
10035be4:	int3   
10035be5:	int3   
10035be6:	int3   
10035be7:	int3   
10035be8:	int3   
10035be9:	int3   
10035bea:	int3   
10035beb:	int3   
10035bec:	int3   
10035bed:	int3   
10035bee:	int3   
10035bef:	int3   
10035bf0:	push   ebp
10035bf1:	mov    ebp,esp
10035bf3:	and    esp,0xfffffff8
10035bf6:	push   0xffffffff
10035bf8:	push   0x10061630
10035bfd:	mov    eax,fs:0x0
10035c03:	push   eax
10035c04:	sub    esp,0x64
10035c07:	push   ebx
10035c08:	push   esi
10035c09:	mov    eax,ds:0x1007e030
10035c0e:	xor    eax,esp
10035c10:	push   eax
10035c11:	lea    eax,[esp+0x70]
10035c15:	mov    fs:0x0,eax
10035c1b:	mov    eax,DWORD PTR [ebp+0xc]
10035c1e:	mov    edx,DWORD PTR [eax]
10035c20:	mov    eax,DWORD PTR [eax+0x4]
10035c23:	mov    DWORD PTR [esp+0x14],ecx
10035c27:	xor    ebx,ebx
10035c29:	push   ebx
10035c2a:	lea    ecx,[esp+0x14]
10035c2e:	push   ecx
10035c2f:	mov    ecx,DWORD PTR [ebp+0x8]
10035c32:	push   0x10
10035c34:	mov    DWORD PTR [esp+0x28],edx
10035c38:	lea    edx,[esp+0x20]
10035c3c:	push   edx
10035c3d:	push   0x10
10035c3f:	mov    DWORD PTR [esp+0x34],eax
10035c43:	mov    eax,edx
10035c45:	mov    edx,DWORD PTR [ecx]
10035c47:	push   eax
10035c48:	push   0x22c024
10035c4d:	push   edx
10035c4e:	call   DWORD PTR ds:0x10066260
10035c54:	test   eax,eax
10035c56:	jne    0x10035ce4
10035c5c:	push   0x100738bc
10035c61:	push   0x1e
10035c63:	push   0x100738e0
10035c68:	call   0x10004258
10035c6d:	mov    esi,eax
10035c6f:	push   esi
10035c70:	mov    DWORD PTR [esp+0x50],0xf
10035c78:	mov    DWORD PTR [esp+0x4c],ebx
10035c7c:	mov    BYTE PTR [esp+0x3c],bl
10035c80:	call   0x10043010
10035c85:	add    esp,0x10
10035c88:	push   eax
10035c89:	push   esi
10035c8a:	lea    ecx,[esp+0x30]
10035c8e:	call   0x1000133b
10035c93:	lea    ecx,[esp+0x44]
10035c97:	mov    DWORD PTR [esp+0x78],ebx
10035c9b:	call   0x10042f01
10035ca0:	push   0xffffffff
10035ca2:	mov    BYTE PTR [esp+0x7c],0x1
10035ca7:	push   ebx
10035ca8:	lea    eax,[esp+0x30]
10035cac:	push   eax
10035cad:	lea    ecx,[esp+0x5c]
10035cb1:	mov    DWORD PTR [esp+0x50],0x10073574
10035cb9:	mov    DWORD PTR [esp+0x74],0xf
10035cc1:	mov    DWORD PTR [esp+0x70],ebx
10035cc5:	mov    BYTE PTR [esp+0x60],bl
10035cc9:	call   0x10001241
10035cce:	push   0x10074d64
10035cd3:	lea    ecx,[esp+0x48]
10035cd7:	push   ecx
10035cd8:	mov    BYTE PTR [esp+0x80],bl
10035cdf:	call   0x100479b4
10035ce4:	mov    ecx,DWORD PTR [esp+0x70]
10035ce8:	mov    DWORD PTR fs:0x0,ecx
10035cef:	pop    ecx
10035cf0:	pop    esi
10035cf1:	pop    ebx
10035cf2:	mov    esp,ebp
10035cf4:	pop    ebp
10035cf5:	ret    0x8
10035cf8:	int3   
10035cf9:	int3   
10035cfa:	int3   
10035cfb:	int3   
10035cfc:	int3   
10035cfd:	int3   
10035cfe:	int3   
10035cff:	int3   
10035d00:	push   0xffffffff
10035d02:	push   0x10061600
10035d07:	mov    eax,fs:0x0
10035d0d:	push   eax
10035d0e:	sub    esp,0x4c
10035d11:	push   ebx
10035d12:	push   esi
10035d13:	mov    eax,ds:0x1007e030
10035d18:	xor    eax,esp
10035d1a:	push   eax
10035d1b:	lea    eax,[esp+0x58]
10035d1f:	mov    fs:0x0,eax
10035d25:	mov    eax,DWORD PTR [esp+0x6c]
10035d29:	xor    ebx,ebx
10035d2b:	push   ebx
10035d2c:	lea    edx,[esp+0x70]
10035d30:	push   edx
10035d31:	mov    edx,DWORD PTR [esp+0x70]
10035d35:	push   0x8
10035d37:	mov    DWORD PTR [esp+0x18],eax
10035d3b:	lea    eax,[esp+0x18]
10035d3f:	push   eax
10035d40:	push   0x8
10035d42:	mov    DWORD PTR [esp+0x24],ecx
10035d46:	mov    ecx,eax
10035d48:	mov    eax,DWORD PTR [edx]
10035d4a:	push   ecx
10035d4b:	push   0x22c05c
10035d50:	push   eax
10035d51:	call   DWORD PTR ds:0x10066260
10035d57:	test   eax,eax
10035d59:	jne    0x10035e10
10035d5f:	push   0x357ae896
10035d64:	push   0x10073900
10035d69:	call   0x10004246
10035d6e:	push   0x56efec04
10035d73:	push   eax
10035d74:	call   0x10004246
10035d79:	push   0x333b5e42
10035d7e:	push   eax
10035d7f:	call   0x10004246
10035d84:	push   0x4bcb195e
10035d89:	push   eax
10035d8a:	call   0x10004246
10035d8f:	push   eax
10035d90:	push   0x1b
10035d92:	push   0x10073940
10035d97:	call   0x10004258
10035d9c:	mov    esi,eax
10035d9e:	push   esi
10035d9f:	mov    DWORD PTR [esp+0x5c],0xf
10035da7:	mov    DWORD PTR [esp+0x58],ebx
10035dab:	mov    BYTE PTR [esp+0x48],bl
10035daf:	call   0x10043010
10035db4:	add    esp,0x30
10035db7:	push   eax
10035db8:	push   esi
10035db9:	lea    ecx,[esp+0x1c]
10035dbd:	call   0x1000133b
10035dc2:	lea    ecx,[esp+0x30]
10035dc6:	mov    DWORD PTR [esp+0x60],ebx
10035dca:	call   0x10042f01
10035dcf:	push   0xffffffff
10035dd1:	mov    BYTE PTR [esp+0x64],0x1
10035dd6:	push   ebx
10035dd7:	lea    ecx,[esp+0x1c]
10035ddb:	push   ecx
10035ddc:	lea    ecx,[esp+0x48]
10035de0:	mov    DWORD PTR [esp+0x3c],0x10073574
10035de8:	mov    DWORD PTR [esp+0x60],0xf
10035df0:	mov    DWORD PTR [esp+0x5c],ebx
10035df4:	mov    BYTE PTR [esp+0x4c],bl
10035df8:	call   0x10001241
10035dfd:	push   0x10074d64
10035e02:	lea    edx,[esp+0x34]
10035e06:	push   edx
10035e07:	mov    BYTE PTR [esp+0x68],bl
10035e0b:	call   0x100479b4
10035e10:	mov    ecx,DWORD PTR [esp+0x58]
10035e14:	mov    DWORD PTR fs:0x0,ecx
10035e1b:	pop    ecx
10035e1c:	pop    esi
10035e1d:	pop    ebx
10035e1e:	add    esp,0x58
10035e21:	ret    0x8
10035e24:	int3   
10035e25:	int3   
10035e26:	int3   
10035e27:	int3   
10035e28:	int3   
10035e29:	int3   
10035e2a:	int3   
10035e2b:	int3   
10035e2c:	int3   
10035e2d:	int3   
10035e2e:	int3   
10035e2f:	int3   
10035e30:	push   ebp
10035e31:	mov    ebp,esp
10035e33:	and    esp,0xfffffff8
10035e36:	push   0xffffffff
10035e38:	push   0x100615a0
10035e3d:	mov    eax,fs:0x0
10035e43:	push   eax
10035e44:	sub    esp,0x54
10035e47:	push   ebx
10035e48:	push   esi
10035e49:	mov    eax,ds:0x1007e030
10035e4e:	xor    eax,esp
10035e50:	push   eax
10035e51:	lea    eax,[esp+0x60]
10035e55:	mov    fs:0x0,eax
10035e5b:	xor    ebx,ebx
10035e5d:	push   ebx
10035e5e:	lea    eax,[esp+0x10]
10035e62:	push   eax
10035e63:	mov    eax,DWORD PTR [ebp+0x8]
10035e66:	push   0x8
10035e68:	lea    ecx,[esp+0x1c]
10035e6c:	push   ecx
10035e6d:	push   0x8
10035e6f:	mov    edx,ecx
10035e71:	mov    ecx,DWORD PTR [eax]
10035e73:	push   edx
10035e74:	push   0x22c060
10035e79:	push   ecx
10035e7a:	mov    DWORD PTR [esp+0x30],ebx
10035e7e:	mov    DWORD PTR [esp+0x34],ebx
10035e82:	call   DWORD PTR ds:0x10066260
10035e88:	test   eax,eax
10035e8a:	jne    0x10035f2b
10035e90:	push   0x597f2036
10035e95:	push   0x1007395c
10035e9a:	call   0x10004246
10035e9f:	push   0x48941c3e
10035ea4:	push   eax
10035ea5:	call   0x10004246
10035eaa:	push   eax
10035eab:	push   0x1b
10035ead:	push   0x10073940
10035eb2:	call   0x10004258
10035eb7:	mov    esi,eax
10035eb9:	push   esi
10035eba:	mov    DWORD PTR [esp+0x50],0xf
10035ec2:	mov    DWORD PTR [esp+0x4c],ebx
10035ec6:	mov    BYTE PTR [esp+0x3c],bl
10035eca:	call   0x10043010
10035ecf:	add    esp,0x20
10035ed2:	push   eax
10035ed3:	push   esi
10035ed4:	lea    ecx,[esp+0x20]
10035ed8:	call   0x1000133b
10035edd:	lea    ecx,[esp+0x34]
10035ee1:	mov    DWORD PTR [esp+0x68],ebx
10035ee5:	call   0x10042f01
10035eea:	push   0xffffffff
10035eec:	mov    BYTE PTR [esp+0x6c],0x1
10035ef1:	push   ebx
10035ef2:	lea    edx,[esp+0x20]
10035ef6:	push   edx
10035ef7:	lea    ecx,[esp+0x4c]
10035efb:	mov    DWORD PTR [esp+0x40],0x10073574
10035f03:	mov    DWORD PTR [esp+0x64],0xf
10035f0b:	mov    DWORD PTR [esp+0x60],ebx
10035f0f:	mov    BYTE PTR [esp+0x50],bl
10035f13:	call   0x10001241
10035f18:	push   0x10074d64
10035f1d:	lea    eax,[esp+0x38]
10035f21:	push   eax
10035f22:	mov    BYTE PTR [esp+0x70],bl
10035f26:	call   0x100479b4
10035f2b:	mov    eax,DWORD PTR [esp+0x14]
10035f2f:	mov    ecx,DWORD PTR [esp+0x60]
10035f33:	mov    DWORD PTR fs:0x0,ecx
10035f3a:	pop    ecx
10035f3b:	pop    esi
10035f3c:	pop    ebx
10035f3d:	mov    esp,ebp
10035f3f:	pop    ebp
10035f40:	ret    0x4
10035f43:	int3   
10035f44:	int3   
10035f45:	int3   
10035f46:	int3   
10035f47:	int3   
10035f48:	int3   
10035f49:	int3   
10035f4a:	int3   
10035f4b:	int3   
10035f4c:	int3   
10035f4d:	int3   
10035f4e:	int3   
10035f4f:	int3   
10035f50:	push   0xffffffff
10035f52:	push   0x10061600
10035f57:	mov    eax,fs:0x0
10035f5d:	push   eax
10035f5e:	sub    esp,0x4c
10035f61:	push   ebx
10035f62:	push   esi
10035f63:	mov    eax,ds:0x1007e030
10035f68:	xor    eax,esp
10035f6a:	push   eax
10035f6b:	lea    eax,[esp+0x58]
10035f6f:	mov    fs:0x0,eax
10035f75:	mov    eax,DWORD PTR [esp+0x6c]
10035f79:	xor    ebx,ebx
10035f7b:	push   ebx
10035f7c:	lea    edx,[esp+0x70]
10035f80:	push   edx
10035f81:	mov    edx,DWORD PTR [esp+0x70]
10035f85:	push   0x8
10035f87:	mov    DWORD PTR [esp+0x18],eax
10035f8b:	lea    eax,[esp+0x18]
10035f8f:	push   eax
10035f90:	push   0x8
10035f92:	mov    DWORD PTR [esp+0x24],ecx
10035f96:	mov    ecx,eax
10035f98:	mov    eax,DWORD PTR [edx]
10035f9a:	push   ecx
10035f9b:	push   0x22c07c
10035fa0:	push   eax
10035fa1:	call   DWORD PTR ds:0x10066260
10035fa7:	test   eax,eax
10035fa9:	jne    0x1003603f
10035faf:	push   0x40e7aa50
10035fb4:	push   0x10073984
10035fb9:	call   0x10004246
10035fbe:	push   eax
10035fbf:	push   0x1b
10035fc1:	push   0x10073940
10035fc6:	call   0x10004258
10035fcb:	mov    esi,eax
10035fcd:	push   esi
10035fce:	mov    DWORD PTR [esp+0x44],0xf
10035fd6:	mov    DWORD PTR [esp+0x40],ebx
10035fda:	mov    BYTE PTR [esp+0x30],bl
10035fde:	call   0x10043010
10035fe3:	add    esp,0x18
10035fe6:	push   eax
10035fe7:	push   esi
10035fe8:	lea    ecx,[esp+0x1c]
10035fec:	call   0x1000133b
10035ff1:	lea    ecx,[esp+0x30]
10035ff5:	mov    DWORD PTR [esp+0x60],ebx
10035ff9:	call   0x10042f01
10035ffe:	push   0xffffffff
10036000:	mov    BYTE PTR [esp+0x64],0x1
10036005:	push   ebx
10036006:	lea    ecx,[esp+0x1c]
1003600a:	push   ecx
1003600b:	lea    ecx,[esp+0x48]
1003600f:	mov    DWORD PTR [esp+0x3c],0x10073574
10036017:	mov    DWORD PTR [esp+0x60],0xf
1003601f:	mov    DWORD PTR [esp+0x5c],ebx
10036023:	mov    BYTE PTR [esp+0x4c],bl
10036027:	call   0x10001241
1003602c:	push   0x10074d64
10036031:	lea    edx,[esp+0x34]
10036035:	push   edx
10036036:	mov    BYTE PTR [esp+0x68],bl
1003603a:	call   0x100479b4
1003603f:	mov    ecx,DWORD PTR [esp+0x58]
10036043:	mov    DWORD PTR fs:0x0,ecx
1003604a:	pop    ecx
1003604b:	pop    esi
1003604c:	pop    ebx
1003604d:	add    esp,0x58
10036050:	ret    0x8
10036053:	int3   
10036054:	int3   
10036055:	int3   
10036056:	int3   
10036057:	int3   
10036058:	int3   
10036059:	int3   
1003605a:	int3   
1003605b:	int3   
1003605c:	int3   
1003605d:	int3   
1003605e:	int3   
1003605f:	int3   
10036060:	push   0xffffffff
10036062:	push   0x100615d0
10036067:	mov    eax,fs:0x0
1003606d:	push   eax
1003606e:	sub    esp,0x50
10036071:	push   ebx
10036072:	push   esi
10036073:	mov    eax,ds:0x1007e030
10036078:	xor    eax,esp
1003607a:	push   eax
1003607b:	lea    eax,[esp+0x5c]
1003607f:	mov    fs:0x0,eax
10036085:	xor    ebx,ebx
10036087:	push   ebx
10036088:	lea    eax,[esp+0x70]
1003608c:	push   eax
1003608d:	mov    eax,DWORD PTR [esp+0x74]
10036091:	push   0x8
10036093:	lea    ecx,[esp+0x18]
10036097:	push   ecx
10036098:	push   0x8
1003609a:	mov    edx,ecx
1003609c:	mov    ecx,DWORD PTR [eax]
1003609e:	push   edx
1003609f:	push   0x22c080
100360a4:	push   ecx
100360a5:	mov    DWORD PTR [esp+0x2c],ebx
100360a9:	mov    DWORD PTR [esp+0x30],ebx
100360ad:	call   DWORD PTR ds:0x10066260
100360b3:	test   eax,eax
100360b5:	jne    0x1003614b
100360bb:	push   0x44d15604
100360c0:	push   0x100739b4
100360c5:	call   0x10004246
100360ca:	push   eax
100360cb:	push   0x1b
100360cd:	push   0x10073940
100360d2:	call   0x10004258
100360d7:	mov    esi,eax
100360d9:	push   esi
100360da:	mov    DWORD PTR [esp+0x44],0xf
100360e2:	mov    DWORD PTR [esp+0x40],ebx
100360e6:	mov    BYTE PTR [esp+0x30],bl
100360ea:	call   0x10043010
100360ef:	add    esp,0x18
100360f2:	push   eax
100360f3:	push   esi
100360f4:	lea    ecx,[esp+0x1c]
100360f8:	call   0x1000133b
100360fd:	lea    ecx,[esp+0x30]
10036101:	mov    DWORD PTR [esp+0x64],ebx
10036105:	call   0x10042f01
1003610a:	push   0xffffffff
1003610c:	mov    BYTE PTR [esp+0x68],0x1
10036111:	push   ebx
10036112:	lea    edx,[esp+0x1c]
10036116:	push   edx
10036117:	lea    ecx,[esp+0x48]
1003611b:	mov    DWORD PTR [esp+0x3c],0x10073574
10036123:	mov    DWORD PTR [esp+0x60],0xf
1003612b:	mov    DWORD PTR [esp+0x5c],ebx
1003612f:	mov    BYTE PTR [esp+0x4c],bl
10036133:	call   0x10001241
10036138:	push   0x10074d64
1003613d:	lea    eax,[esp+0x34]
10036141:	push   eax
10036142:	mov    BYTE PTR [esp+0x6c],bl
10036146:	call   0x100479b4
1003614b:	mov    eax,DWORD PTR [esp+0xc]
1003614f:	xor    ecx,ecx
10036151:	cmp    eax,ebx
10036153:	setl   cl
10036156:	sub    ecx,0x1
10036159:	and    eax,ecx
1003615b:	mov    ecx,DWORD PTR [esp+0x5c]
1003615f:	mov    DWORD PTR fs:0x0,ecx
10036166:	pop    ecx
10036167:	pop    esi
10036168:	pop    ebx
10036169:	add    esp,0x5c
1003616c:	ret    0x4
1003616f:	int3   
10036170:	push   ebp
10036171:	mov    ebp,esp
10036173:	and    esp,0xfffffff8
10036176:	push   0xffffffff
10036178:	push   0x100615a0
1003617d:	mov    eax,fs:0x0
10036183:	push   eax
10036184:	sub    esp,0x54
10036187:	push   ebx
10036188:	push   esi
10036189:	mov    eax,ds:0x1007e030
1003618e:	xor    eax,esp
10036190:	push   eax
10036191:	lea    eax,[esp+0x60]
10036195:	mov    fs:0x0,eax
1003619b:	xor    ebx,ebx
1003619d:	push   ebx
1003619e:	lea    eax,[esp+0x10]
100361a2:	push   eax
100361a3:	mov    eax,DWORD PTR [ebp+0x8]
100361a6:	push   0x8
100361a8:	lea    ecx,[esp+0x1c]
100361ac:	push   ecx
100361ad:	push   0x8
100361af:	mov    edx,ecx
100361b1:	mov    ecx,DWORD PTR [eax]
100361b3:	push   edx
100361b4:	push   0x22c080
100361b9:	push   ecx
100361ba:	mov    DWORD PTR [esp+0x30],ebx
100361be:	mov    DWORD PTR [esp+0x34],ebx
100361c2:	call   DWORD PTR ds:0x10066260
100361c8:	test   eax,eax
100361ca:	jne    0x10036276
100361d0:	push   0x7e2406c4
100361d5:	push   0x100739dc
100361da:	call   0x10004246
100361df:	push   0x501ec738
100361e4:	push   eax
100361e5:	call   0x10004246
100361ea:	push   0x73074242
100361ef:	push   eax
100361f0:	call   0x10004246
100361f5:	push   eax
100361f6:	push   0x1b
100361f8:	push   0x10073940
100361fd:	call   0x10004258
10036202:	mov    esi,eax
10036204:	push   esi
10036205:	mov    DWORD PTR [esp+0x58],0xf
1003620d:	mov    DWORD PTR [esp+0x54],ebx
10036211:	mov    BYTE PTR [esp+0x44],bl
10036215:	call   0x10043010
1003621a:	add    esp,0x28
1003621d:	push   eax
1003621e:	push   esi
1003621f:	lea    ecx,[esp+0x20]
10036223:	call   0x1000133b
10036228:	lea    ecx,[esp+0x34]
1003622c:	mov    DWORD PTR [esp+0x68],ebx
10036230:	call   0x10042f01
10036235:	push   0xffffffff
10036237:	mov    BYTE PTR [esp+0x6c],0x1
1003623c:	push   ebx
1003623d:	lea    edx,[esp+0x20]
10036241:	push   edx
10036242:	lea    ecx,[esp+0x4c]
10036246:	mov    DWORD PTR [esp+0x40],0x10073574
1003624e:	mov    DWORD PTR [esp+0x64],0xf
10036256:	mov    DWORD PTR [esp+0x60],ebx
1003625a:	mov    BYTE PTR [esp+0x50],bl
1003625e:	call   0x10001241
10036263:	push   0x10074d64
10036268:	lea    eax,[esp+0x38]
1003626c:	push   eax
1003626d:	mov    BYTE PTR [esp+0x70],bl
10036271:	call   0x100479b4
10036276:	mov    eax,DWORD PTR [esp+0x14]
1003627a:	mov    ecx,DWORD PTR [esp+0x60]
1003627e:	mov    DWORD PTR fs:0x0,ecx
10036285:	pop    ecx
10036286:	pop    esi
10036287:	pop    ebx
10036288:	mov    esp,ebp
1003628a:	pop    ebp
1003628b:	ret    0x4
1003628e:	int3   
1003628f:	int3   
10036290:	push   0xffffffff
10036292:	push   0x10061568
10036297:	mov    eax,fs:0x0
1003629d:	push   eax
1003629e:	push   ecx
1003629f:	push   ebx
100362a0:	push   esi
100362a1:	push   edi
100362a2:	mov    eax,ds:0x1007e030
100362a7:	xor    eax,esp
100362a9:	push   eax
100362aa:	lea    eax,[esp+0x14]
100362ae:	mov    fs:0x0,eax
100362b4:	mov    edi,ecx
100362b6:	mov    eax,DWORD PTR [edi+0x14]
100362b9:	lea    ebx,[eax+0x5]
100362bc:	push   ebx
100362bd:	call   0x10043721
100362c2:	mov    esi,eax
100362c4:	add    esp,0x4
100362c7:	mov    DWORD PTR [esp+0x10],esi
100362cb:	mov    DWORD PTR [esp+0x1c],0x0
100362d3:	mov    eax,DWORD PTR [esp+0x28]
100362d7:	mov    DWORD PTR [esi],eax
100362d9:	cmp    DWORD PTR [edi+0x18],0x10
100362dd:	mov    eax,DWORD PTR [edi+0x14]
100362e0:	jb     0x100362e7
100362e2:	mov    edi,DWORD PTR [edi+0x4]
100362e5:	jmp    0x100362ea
100362e7:	add    edi,0x4
100362ea:	add    eax,0x1
100362ed:	push   eax
100362ee:	lea    ecx,[esi+0x4]
100362f1:	push   edi
100362f2:	push   ecx
100362f3:	call   0x10045180
100362f8:	mov    edx,DWORD PTR [esp+0x30]
100362fc:	add    esp,0xc
100362ff:	push   esi
10036300:	push   0x5
10036302:	push   edx
10036303:	mov    ecx,ebx
10036305:	call   0x100369e0
1003630a:	push   esi
1003630b:	call   0x10042e92
10036310:	add    esp,0x4
10036313:	mov    ecx,DWORD PTR [esp+0x14]
10036317:	mov    DWORD PTR fs:0x0,ecx
1003631e:	pop    ecx
1003631f:	pop    edi
10036320:	pop    esi
10036321:	pop    ebx
10036322:	add    esp,0x10
10036325:	ret    0x8
10036328:	int3   
10036329:	int3   
1003632a:	int3   
1003632b:	int3   
1003632c:	int3   
1003632d:	int3   
1003632e:	int3   
1003632f:	int3   
10036330:	push   ebp
10036331:	mov    ebp,esp
10036333:	push   0xffffffff
10036335:	push   0x10062600
1003633a:	mov    eax,fs:0x0
10036340:	push   eax
10036341:	sub    esp,0x38
10036344:	push   ebx
10036345:	push   esi
10036346:	push   edi
10036347:	mov    eax,ds:0x1007e030
1003634c:	xor    eax,ebp
1003634e:	push   eax
1003634f:	lea    eax,[ebp-0xc]
10036352:	mov    fs:0x0,eax
10036358:	mov    DWORD PTR [ebp-0x10],esp
1003635b:	mov    ebx,ecx
1003635d:	lea    eax,[ebp-0x14]
10036360:	push   eax
10036361:	push   0x5
10036363:	lea    ecx,[ebp-0x18]
10036366:	xor    esi,esi
10036368:	push   ecx
10036369:	mov    DWORD PTR [ebp-0x4],esi
1003636c:	push   edx
1003636d:	mov    DWORD PTR [ebp-0x14],esi
10036370:	call   0x10036b20
10036375:	mov    ecx,DWORD PTR [eax]
10036377:	mov    edi,ecx
10036379:	mov    DWORD PTR [eax],esi
1003637b:	mov    DWORD PTR [ebp-0x1c],edi
1003637e:	mov    BYTE PTR [ebp-0x4],0x1
10036382:	mov    edx,DWORD PTR [ebp-0x18]
10036385:	push   edx
10036386:	call   0x10042e92
1003638b:	mov    eax,DWORD PTR [ebp-0x14]
1003638e:	add    esp,0x4
10036391:	cmp    eax,esi
10036393:	jne    0x100363b4
10036395:	push   edi
10036396:	call   0x10042e92
1003639b:	add    esp,0x4
1003639e:	xor    al,al
100363a0:	mov    ecx,DWORD PTR [ebp-0xc]
100363a3:	mov    DWORD PTR fs:0x0,ecx
100363aa:	pop    ecx
100363ab:	pop    edi
100363ac:	pop    esi
100363ad:	pop    ebx
100363ae:	mov    esp,ebp
100363b0:	pop    ebp
100363b1:	ret    0x4
100363b4:	mov    DWORD PTR [ebp-0x24],eax
100363b7:	lea    eax,[ebp-0x28]
100363ba:	push   eax
100363bb:	mov    DWORD PTR [ebp-0x28],esi
100363be:	mov    DWORD PTR [ebp-0x20],edi
100363c1:	call   0x100377e0
100363c6:	mov    ecx,DWORD PTR [ebp+0x8]
100363c9:	lea    edx,[ebp-0x28]
100363cc:	push   edx
100363cd:	lea    esi,[ebp-0x44]
100363d0:	mov    DWORD PTR [ecx],eax
100363d2:	call   0x100374a0
100363d7:	push   0xffffffff
100363d9:	push   0x0
100363db:	push   eax
100363dc:	mov    ecx,ebx
100363de:	mov    BYTE PTR [ebp-0x4],0x2
100363e2:	call   0x10001241
100363e7:	cmp    DWORD PTR [ebp-0x2c],0x10
100363eb:	jb     0x100363f9
100363ed:	mov    eax,DWORD PTR [ebp-0x40]
100363f0:	push   eax
100363f1:	call   0x10042e92
100363f6:	add    esp,0x4
100363f9:	push   edi
100363fa:	call   0x10042e92
100363ff:	push   0x1006cd08
10036404:	call   0x10043010
10036409:	mov    esi,DWORD PTR [ebx+0x14]
1003640c:	mov    edi,eax
1003640e:	add    esp,0x8
10036411:	cmp    esi,edi
10036413:	mov    eax,esi
10036415:	jb     0x10036419
10036417:	mov    eax,edi
10036419:	cmp    DWORD PTR [ebx+0x18],0x10
1003641d:	jb     0x10036424
1003641f:	mov    ebx,DWORD PTR [ebx+0x4]
10036422:	jmp    0x10036427
10036424:	add    ebx,0x4
10036427:	push   eax
10036428:	push   0x1006cd08
1003642d:	push   ebx
1003642e:	call   0x10043726
10036433:	add    esp,0xc
10036436:	test   eax,eax
10036438:	jne    0x10036465
1003643a:	cmp    esi,edi
1003643c:	jae    0x1003645e
1003643e:	or     eax,0xffffffff
10036441:	xor    ecx,ecx
10036443:	test   eax,eax
10036445:	setne  cl
10036448:	mov    al,cl
1003644a:	mov    ecx,DWORD PTR [ebp-0xc]
1003644d:	mov    DWORD PTR fs:0x0,ecx
10036454:	pop    ecx
10036455:	pop    edi
10036456:	pop    esi
10036457:	pop    ebx
10036458:	mov    esp,ebp
1003645a:	pop    ebp
1003645b:	ret    0x4
1003645e:	xor    eax,eax
10036460:	cmp    esi,edi
10036462:	setne  al
10036465:	xor    ecx,ecx
10036467:	test   eax,eax
10036469:	setne  cl
1003646c:	mov    al,cl
1003646e:	mov    ecx,DWORD PTR [ebp-0xc]
10036471:	mov    DWORD PTR fs:0x0,ecx
10036478:	pop    ecx
10036479:	pop    edi
1003647a:	pop    esi
1003647b:	pop    ebx
1003647c:	mov    esp,ebp
1003647e:	pop    ebp
1003647f:	ret    0x4
10036482:	mov    eax,0x1003639e
10036487:	ret    
10036488:	int3   
10036489:	int3   
1003648a:	int3   
1003648b:	int3   
1003648c:	int3   
1003648d:	int3   
1003648e:	int3   
1003648f:	int3   
10036490:	push   0xffffffff
10036492:	push   0x10061530
10036497:	mov    eax,fs:0x0
1003649d:	push   eax
1003649e:	sub    esp,0x74
100364a1:	mov    eax,ds:0x1007e030
100364a6:	xor    eax,esp
100364a8:	mov    DWORD PTR [esp+0x70],eax
100364ac:	push   ebx
100364ad:	push   esi
100364ae:	push   edi
100364af:	mov    eax,ds:0x1007e030
100364b4:	xor    eax,esp
100364b6:	push   eax
100364b7:	lea    eax,[esp+0x84]
100364be:	mov    fs:0x0,eax
100364c4:	mov    eax,DWORD PTR [esp+0x94]
100364cb:	xor    ebx,ebx
100364cd:	mov    esi,0xf
100364d2:	mov    DWORD PTR [esp+0x7c],esi
100364d6:	mov    DWORD PTR [esp+0x78],ebx
100364da:	mov    BYTE PTR [esp+0x68],bl
100364de:	mov    DWORD PTR [esp+0x8c],ebx
100364e5:	mov    DWORD PTR [esp+0x44],esi
100364e9:	mov    DWORD PTR [esp+0x40],ebx
100364ed:	mov    BYTE PTR [esp+0x30],bl
100364f1:	mov    DWORD PTR [esp+0x28],esi
100364f5:	mov    DWORD PTR [esp+0x24],ebx
100364f9:	mov    BYTE PTR [esp+0x14],bl
100364fd:	mov    DWORD PTR [esp+0x60],esi
10036501:	mov    DWORD PTR [esp+0x5c],ebx
10036505:	mov    BYTE PTR [esp+0x4c],bl
10036509:	lea    edx,[esp+0x48]
1003650d:	push   edx
1003650e:	lea    edx,[esp+0x68]
10036512:	push   edx
10036513:	push   ecx
10036514:	push   eax
10036515:	lea    edx,[esp+0x20]
10036519:	lea    ecx,[esp+0x3c]
1003651d:	mov    BYTE PTR [esp+0x9c],0x3
10036525:	call   0x100365d0
1003652a:	mov    edi,0x10
1003652f:	cmp    DWORD PTR [esp+0x60],edi
10036533:	jb     0x10036542
10036535:	mov    eax,DWORD PTR [esp+0x4c]
10036539:	push   eax
1003653a:	call   0x10042e92
1003653f:	add    esp,0x4
10036542:	cmp    DWORD PTR [esp+0x28],edi
10036546:	mov    DWORD PTR [esp+0x60],esi
1003654a:	mov    DWORD PTR [esp+0x5c],ebx
1003654e:	mov    BYTE PTR [esp+0x4c],bl
10036552:	jb     0x10036561
10036554:	mov    ecx,DWORD PTR [esp+0x14]
10036558:	push   ecx
10036559:	call   0x10042e92
1003655e:	add    esp,0x4
10036561:	cmp    DWORD PTR [esp+0x44],edi
10036565:	mov    DWORD PTR [esp+0x28],esi
10036569:	mov    DWORD PTR [esp+0x24],ebx
1003656d:	mov    BYTE PTR [esp+0x14],bl
10036571:	jb     0x10036580
10036573:	mov    edx,DWORD PTR [esp+0x30]
10036577:	push   edx
10036578:	call   0x10042e92
1003657d:	add    esp,0x4
10036580:	cmp    DWORD PTR [esp+0x7c],edi
10036584:	mov    DWORD PTR [esp+0x44],esi
10036588:	mov    DWORD PTR [esp+0x40],ebx
1003658c:	mov    BYTE PTR [esp+0x30],bl
10036590:	jb     0x1003659f
10036592:	mov    eax,DWORD PTR [esp+0x68]
10036596:	push   eax
10036597:	call   0x10042e92
1003659c:	add    esp,0x4
1003659f:	mov    ecx,DWORD PTR [esp+0x84]
100365a6:	mov    DWORD PTR fs:0x0,ecx
100365ad:	pop    ecx
100365ae:	pop    edi
100365af:	pop    esi
100365b0:	pop    ebx
100365b1:	mov    ecx,DWORD PTR [esp+0x70]
100365b5:	xor    ecx,esp
100365b7:	call   0x10042e97
100365bc:	add    esp,0x80
100365c2:	ret    0x4
100365c5:	int3   
100365c6:	int3   
100365c7:	int3   
100365c8:	int3   
100365c9:	int3   
100365ca:	int3   
100365cb:	int3   
100365cc:	int3   
100365cd:	int3   
100365ce:	int3   
100365cf:	int3   
100365d0:	push   ebp
100365d1:	mov    ebp,esp
100365d3:	push   0xffffffff
100365d5:	push   0x100614e2
100365da:	mov    eax,fs:0x0
100365e0:	push   eax
100365e1:	sub    esp,0x18c
100365e7:	mov    eax,ds:0x1007e030
100365ec:	xor    eax,ebp
100365ee:	mov    DWORD PTR [ebp-0x10],eax
100365f1:	push   ebx
100365f2:	push   esi
100365f3:	push   edi
100365f4:	push   eax
100365f5:	lea    eax,[ebp-0xc]
100365f8:	mov    fs:0x0,eax
100365fe:	mov    eax,DWORD PTR [ebp+0x8]
10036601:	mov    eax,DWORD PTR [eax]
10036603:	mov    esi,DWORD PTR [ebp+0xc]
10036606:	mov    edi,DWORD PTR [ebp+0x10]
10036609:	mov    DWORD PTR [ebp-0x144],edx
1003660f:	mov    DWORD PTR [ebp-0x148],ecx
10036615:	mov    ecx,DWORD PTR [ebp+0x14]
10036618:	xor    ebx,ebx
1003661a:	push   ebx
1003661b:	lea    edx,[ebp-0x150]
10036621:	push   edx
10036622:	push   0x110
10036627:	mov    DWORD PTR [ebp-0x14c],ecx
1003662d:	lea    ecx,[ebp-0x120]
10036633:	push   ecx
10036634:	push   0x110
10036639:	mov    edx,ecx
1003663b:	push   edx
1003663c:	push   0x22c03c
10036641:	push   eax
10036642:	call   DWORD PTR ds:0x10066260
10036648:	test   eax,eax
1003664a:	jne    0x100366fd
10036650:	push   0x188f30fc
10036655:	push   0x10073a04
1003665a:	call   0x10004246
1003665f:	push   0x7db4f5f4
10036664:	push   eax
10036665:	call   0x10004246
1003666a:	push   eax
1003666b:	push   0x1f
1003666d:	push   0x10073a28
10036672:	call   0x10004258
10036677:	mov    esi,eax
10036679:	mov    edi,0xf
1003667e:	push   esi
1003667f:	mov    DWORD PTR [ebp-0x128],edi
10036685:	mov    DWORD PTR [ebp-0x12c],ebx
1003668b:	mov    BYTE PTR [ebp-0x13c],bl
10036691:	call   0x10043010
10036696:	add    esp,0x20
10036699:	push   eax
1003669a:	push   esi
1003669b:	lea    ecx,[ebp-0x140]
100366a1:	call   0x1000133b
100366a6:	lea    ecx,[ebp-0x194]
100366ac:	mov    DWORD PTR [ebp-0x4],ebx
100366af:	call   0x10042f01
100366b4:	push   0xffffffff
100366b6:	mov    BYTE PTR [ebp-0x4],0x1
100366ba:	push   ebx
100366bb:	lea    ecx,[ebp-0x140]
100366c1:	push   ecx
100366c2:	lea    ecx,[ebp-0x188]
100366c8:	mov    DWORD PTR [ebp-0x194],0x10073574
100366d2:	mov    DWORD PTR [ebp-0x170],edi
100366d8:	mov    DWORD PTR [ebp-0x174],ebx
100366de:	mov    BYTE PTR [ebp-0x184],bl
100366e4:	call   0x10001241
100366e9:	push   0x10074d64
100366ee:	lea    edx,[ebp-0x194]
100366f4:	push   edx
100366f5:	mov    BYTE PTR [ebp-0x4],bl
100366f8:	call   0x100479b4
100366fd:	call   DWORD PTR ds:0x1007efec
10036703:	mov    ecx,DWORD PTR [ebp-0xdc]
10036709:	mov    edx,DWORD PTR [ebp-0xd8]
1003670f:	mov    DWORD PTR [ebp-0x124],eax
10036715:	mov    eax,DWORD PTR [ebp-0xe0]
1003671b:	mov    DWORD PTR [esi],eax
1003671d:	mov    eax,DWORD PTR [ebp-0xd4]
10036723:	mov    DWORD PTR [esi+0x4],ecx
10036726:	lea    ecx,[ebp-0x120]
1003672c:	mov    DWORD PTR [esi+0x8],edx
1003672f:	push   ecx
10036730:	mov    DWORD PTR [esi+0xc],eax
10036733:	call   DWORD PTR ds:0x100660c4
10036739:	add    eax,0x1
1003673c:	cmp    eax,0x3fffffff
10036741:	jle    0x10036747
10036743:	xor    esi,esi
10036745:	jmp    0x1003676b
10036747:	lea    esi,[eax+eax*1]
1003674a:	mov    eax,esi
1003674c:	call   0x1004b6f0
10036751:	mov    edx,DWORD PTR [ebp-0x124]
10036757:	mov    eax,esp
10036759:	push   edx
1003675a:	push   esi
1003675b:	lea    ecx,[ebp-0x120]
10036761:	push   ecx
10036762:	mov    esi,eax
10036764:	call   0x10002434
10036769:	mov    esi,eax
1003676b:	push   esi
1003676c:	mov    DWORD PTR [ebp-0x128],0xf
10036776:	mov    DWORD PTR [ebp-0x12c],ebx
1003677c:	mov    BYTE PTR [ebp-0x13c],bl
10036782:	call   0x10043010
10036787:	add    esp,0x4
1003678a:	push   eax
1003678b:	push   esi
1003678c:	lea    ecx,[ebp-0x140]
10036792:	call   0x1000133b
10036797:	push   0xffffffff
10036799:	push   ebx
1003679a:	lea    edx,[ebp-0x140]
100367a0:	push   edx
100367a1:	mov    ecx,edi
100367a3:	mov    DWORD PTR [ebp-0x4],0x2
100367aa:	call   0x10001241
100367af:	mov    DWORD PTR [ebp-0x4],0xffffffff
100367b6:	cmp    DWORD PTR [ebp-0x128],0x10
100367bd:	jb     0x100367ce
100367bf:	mov    eax,DWORD PTR [ebp-0x13c]
100367c5:	push   eax
100367c6:	call   0x10042e92
100367cb:	add    esp,0x4
100367ce:	lea    ecx,[ebp-0xd0]
100367d4:	push   ecx
100367d5:	call   DWORD PTR ds:0x100660c4
100367db:	add    eax,0x1
100367de:	cmp    eax,0x3fffffff
100367e3:	jle    0x100367ef
100367e5:	mov    edi,DWORD PTR [ebp-0x124]
100367eb:	xor    esi,esi
100367ed:	jmp    0x10036813
100367ef:	lea    esi,[eax+eax*1]
100367f2:	mov    eax,esi
100367f4:	call   0x1004b6f0
100367f9:	mov    edi,DWORD PTR [ebp-0x124]
100367ff:	mov    eax,esp
10036801:	push   edi
10036802:	push   esi
10036803:	lea    edx,[ebp-0xd0]
10036809:	push   edx
1003680a:	mov    esi,eax
1003680c:	call   0x10002434
10036811:	mov    esi,eax
10036813:	push   esi
10036814:	mov    DWORD PTR [ebp-0x128],0xf
1003681e:	mov    DWORD PTR [ebp-0x12c],ebx
10036824:	mov    BYTE PTR [ebp-0x13c],bl
1003682a:	call   0x10043010
1003682f:	add    esp,0x4
10036832:	push   eax
10036833:	push   esi
10036834:	lea    ecx,[ebp-0x140]
1003683a:	call   0x1000133b
1003683f:	mov    ecx,DWORD PTR [ebp-0x148]
10036845:	push   0xffffffff
10036847:	push   ebx
10036848:	lea    eax,[ebp-0x140]
1003684e:	push   eax
1003684f:	mov    DWORD PTR [ebp-0x4],0x3
10036856:	call   0x10001241
1003685b:	mov    DWORD PTR [ebp-0x4],0xffffffff
10036862:	cmp    DWORD PTR [ebp-0x128],0x10
10036869:	jb     0x1003687a
1003686b:	mov    ecx,DWORD PTR [ebp-0x13c]
10036871:	push   ecx
10036872:	call   0x10042e92
10036877:	add    esp,0x4
1003687a:	lea    edx,[ebp-0x90]
10036880:	push   edx
10036881:	call   DWORD PTR ds:0x100660c4
10036887:	add    eax,0x1
1003688a:	cmp    eax,0x3fffffff
1003688f:	jle    0x10036895
10036891:	xor    esi,esi
10036893:	jmp    0x100368b3
10036895:	lea    esi,[eax+eax*1]
10036898:	mov    eax,esi
1003689a:	call   0x1004b6f0
1003689f:	mov    eax,esp
100368a1:	push   edi
100368a2:	push   esi
100368a3:	lea    ecx,[ebp-0x90]
100368a9:	push   ecx
100368aa:	mov    esi,eax
100368ac:	call   0x10002434
100368b1:	mov    esi,eax
100368b3:	push   esi
100368b4:	mov    DWORD PTR [ebp-0x128],0xf
100368be:	mov    DWORD PTR [ebp-0x12c],ebx
100368c4:	mov    BYTE PTR [ebp-0x13c],bl
100368ca:	call   0x10043010
100368cf:	add    esp,0x4
100368d2:	push   eax
100368d3:	push   esi
100368d4:	lea    ecx,[ebp-0x140]
100368da:	call   0x1000133b
100368df:	mov    ecx,DWORD PTR [ebp-0x144]
100368e5:	push   0xffffffff
100368e7:	push   ebx
100368e8:	lea    edx,[ebp-0x140]
100368ee:	push   edx
100368ef:	mov    DWORD PTR [ebp-0x4],0x4
100368f6:	call   0x10001241
100368fb:	mov    DWORD PTR [ebp-0x4],0xffffffff
10036902:	cmp    DWORD PTR [ebp-0x128],0x10
10036909:	jb     0x1003691a
1003690b:	mov    eax,DWORD PTR [ebp-0x13c]
10036911:	push   eax
10036912:	call   0x10042e92
10036917:	add    esp,0x4
1003691a:	lea    ecx,[ebp-0x50]
1003691d:	push   ecx
1003691e:	call   DWORD PTR ds:0x100660c4
10036924:	add    eax,0x1
10036927:	cmp    eax,0x3fffffff
1003692c:	jle    0x10036932
1003692e:	xor    esi,esi
10036930:	jmp    0x1003694d
10036932:	lea    esi,[eax+eax*1]
10036935:	mov    eax,esi
10036937:	call   0x1004b6f0
1003693c:	mov    eax,esp
1003693e:	push   edi
1003693f:	push   esi
10036940:	lea    edx,[ebp-0x50]
10036943:	push   edx
10036944:	mov    esi,eax
10036946:	call   0x10002434
1003694b:	mov    esi,eax
1003694d:	push   esi
1003694e:	mov    DWORD PTR [ebp-0x154],0xf
10036958:	mov    DWORD PTR [ebp-0x158],ebx
1003695e:	mov    BYTE PTR [ebp-0x168],bl
10036964:	call   0x10043010
10036969:	add    esp,0x4
1003696c:	push   eax
1003696d:	push   esi
1003696e:	lea    ecx,[ebp-0x16c]
10036974:	call   0x1000133b
10036979:	mov    ecx,DWORD PTR [ebp-0x14c]
1003697f:	push   0xffffffff
10036981:	push   ebx
10036982:	lea    eax,[ebp-0x16c]
10036988:	push   eax
10036989:	mov    DWORD PTR [ebp-0x4],0x5
10036990:	call   0x10001241
10036995:	cmp    DWORD PTR [ebp-0x154],0x10
1003699c:	jb     0x100369ad
1003699e:	mov    ecx,DWORD PTR [ebp-0x168]
100369a4:	push   ecx
100369a5:	call   0x10042e92
100369aa:	add    esp,0x4
100369ad:	lea    esp,[ebp-0x1a8]
100369b3:	mov    ecx,DWORD PTR [ebp-0xc]
100369b6:	mov    DWORD PTR fs:0x0,ecx
100369bd:	pop    ecx
100369be:	pop    edi
100369bf:	pop    esi
100369c0:	pop    ebx
100369c1:	mov    ecx,DWORD PTR [ebp-0x10]
100369c4:	xor    ecx,ebp
100369c6:	call   0x10042e97
100369cb:	mov    esp,ebp
100369cd:	pop    ebp
100369ce:	ret    0x10
100369d1:	int3   
100369d2:	int3   
100369d3:	int3   
100369d4:	int3   
100369d5:	int3   
100369d6:	int3   
100369d7:	int3   
100369d8:	int3   
100369d9:	int3   
100369da:	int3   
100369db:	int3   
100369dc:	int3   
100369dd:	int3   
100369de:	int3   
100369df:	int3   
100369e0:	push   ebp
100369e1:	mov    ebp,esp
100369e3:	and    esp,0xfffffff8
100369e6:	push   0xffffffff
100369e8:	push   0x10061478
100369ed:	mov    eax,fs:0x0
100369f3:	push   eax
100369f4:	sub    esp,0x50
100369f7:	push   ebx
100369f8:	push   esi
100369f9:	push   edi
100369fa:	mov    eax,ds:0x1007e030
100369ff:	xor    eax,esp
10036a01:	push   eax
10036a02:	lea    eax,[esp+0x60]
10036a06:	mov    fs:0x0,eax
10036a0c:	mov    edi,ecx
10036a0e:	xor    eax,eax
10036a10:	mov    DWORD PTR [esp+0x10],eax
10036a14:	lea    ebx,[edi+0xc]
10036a17:	push   ebx
10036a18:	mov    DWORD PTR [esp+0x6c],eax
10036a1c:	call   0x10043721
10036a21:	mov    esi,eax
10036a23:	add    esp,0x4
10036a26:	test   esi,esi
10036a28:	je     0x10036a34
10036a2a:	push   0x0
10036a2c:	call   0x10042e92
10036a31:	add    esp,0x4
10036a34:	mov    ecx,DWORD PTR [ebp+0x10]
10036a37:	mov    eax,DWORD PTR [ebp+0xc]
10036a3a:	push   edi
10036a3b:	push   ecx
10036a3c:	lea    edx,[esi+0xc]
10036a3f:	mov    DWORD PTR [esi],edi
10036a41:	push   edx
10036a42:	mov    DWORD PTR [esp+0x1c],esi
10036a46:	mov    DWORD PTR [esi+0x4],eax
10036a49:	call   0x10045180
10036a4e:	mov    ecx,DWORD PTR [ebp+0x8]
10036a51:	mov    edx,DWORD PTR [ecx]
10036a53:	add    esp,0xc
10036a56:	xor    edi,edi
10036a58:	push   edi
10036a59:	lea    eax,[esp+0x18]
10036a5d:	push   eax
10036a5e:	push   edi
10036a5f:	push   edi
10036a60:	push   ebx
10036a61:	push   esi
10036a62:	push   0x22c034
10036a67:	push   edx
10036a68:	call   DWORD PTR ds:0x10066260
10036a6e:	test   eax,eax
10036a70:	jne    0x10036aff
10036a76:	push   0x10073a48
10036a7b:	push   0x19
10036a7d:	push   0x10073a78
10036a82:	call   0x10004258
10036a87:	mov    esi,eax
10036a89:	push   esi
10036a8a:	mov    DWORD PTR [esp+0x40],0xf
10036a92:	mov    DWORD PTR [esp+0x3c],edi
10036a96:	mov    BYTE PTR [esp+0x2c],0x0
10036a9b:	call   0x10043010
10036aa0:	add    esp,0x10
10036aa3:	push   eax
10036aa4:	push   esi
10036aa5:	lea    ecx,[esp+0x20]
10036aa9:	call   0x1000133b
10036aae:	mov    bl,0x1
10036ab0:	lea    ecx,[esp+0x34]
10036ab4:	mov    BYTE PTR [esp+0x68],bl
10036ab8:	call   0x10042f01
10036abd:	push   0xffffffff
10036abf:	mov    BYTE PTR [esp+0x6c],0x2
10036ac4:	push   edi
10036ac5:	lea    eax,[esp+0x20]
10036ac9:	push   eax
10036aca:	lea    ecx,[esp+0x4c]
10036ace:	mov    DWORD PTR [esp+0x40],0x10073574
10036ad6:	mov    DWORD PTR [esp+0x64],0xf
10036ade:	mov    DWORD PTR [esp+0x60],edi
10036ae2:	mov    BYTE PTR [esp+0x50],0x0
10036ae7:	call   0x10001241
10036aec:	push   0x10074d64
10036af1:	lea    ecx,[esp+0x38]
10036af5:	push   ecx
10036af6:	mov    BYTE PTR [esp+0x70],bl
10036afa:	call   0x100479b4
10036aff:	push   esi
10036b00:	call   0x10042e92
10036b05:	add    esp,0x4
10036b08:	mov    ecx,DWORD PTR [esp+0x60]
10036b0c:	mov    DWORD PTR fs:0x0,ecx
10036b13:	pop    ecx
10036b14:	pop    edi
10036b15:	pop    esi
10036b16:	pop    ebx
10036b17:	mov    esp,ebp
10036b19:	pop    ebp
10036b1a:	ret    0xc
10036b1d:	int3   
10036b1e:	int3   
10036b1f:	int3   
10036b20:	push   ebp
10036b21:	mov    ebp,esp
10036b23:	and    esp,0xfffffff8
10036b26:	push   0xffffffff
10036b28:	push   0x10061438
10036b2d:	mov    eax,fs:0x0
10036b33:	push   eax
10036b34:	sub    esp,0x58
10036b37:	push   ebx
10036b38:	push   esi
10036b39:	push   edi
10036b3a:	mov    eax,ds:0x1007e030
10036b3f:	xor    eax,esp
10036b41:	push   eax
10036b42:	lea    eax,[esp+0x68]
10036b46:	mov    fs:0x0,eax
10036b4c:	xor    ebx,ebx
10036b4e:	mov    DWORD PTR [esp+0x18],ebx
10036b52:	mov    DWORD PTR [esp+0x1c],ebx
10036b56:	push   0xd
10036b58:	mov    DWORD PTR [esp+0x74],ebx
10036b5c:	call   0x10043721
10036b61:	mov    esi,eax
10036b63:	add    esp,0x4
10036b66:	mov    DWORD PTR [esp+0x10],esi
10036b6a:	mov    eax,DWORD PTR [ebp+0x10]
10036b6d:	mov    edx,DWORD PTR [ebp+0x8]
10036b70:	mov    BYTE PTR [esp+0x70],0x1
10036b75:	mov    DWORD PTR [esi],0x1
10036b7b:	push   ebx
10036b7c:	mov    DWORD PTR [esi+0x8],0x4
10036b83:	mov    DWORD PTR [esi+0x4],eax
10036b86:	mov    eax,DWORD PTR [esi]
10036b88:	add    eax,0xc
10036b8b:	lea    ecx,[esp+0x1c]
10036b8f:	push   ecx
10036b90:	push   eax
10036b91:	push   esi
10036b92:	push   eax
10036b93:	mov    eax,DWORD PTR [edx]
10036b95:	push   esi
10036b96:	push   0x22c038
10036b9b:	push   eax
10036b9c:	call   DWORD PTR ds:0x10066260
10036ba2:	test   eax,eax
10036ba4:	jne    0x10036c2e
10036baa:	push   0x10073a94
10036baf:	push   0x1e
10036bb1:	push   0x10073748
10036bb6:	call   0x10004258
10036bbb:	mov    esi,eax
10036bbd:	mov    edi,0xf
10036bc2:	push   esi
10036bc3:	mov    DWORD PTR [esp+0x48],edi
10036bc7:	mov    DWORD PTR [esp+0x44],ebx
10036bcb:	mov    BYTE PTR [esp+0x34],bl
10036bcf:	call   0x10043010
10036bd4:	add    esp,0x10
10036bd7:	push   eax
10036bd8:	push   esi
10036bd9:	lea    ecx,[esp+0x28]
10036bdd:	call   0x1000133b
10036be2:	lea    ecx,[esp+0x3c]
10036be6:	mov    BYTE PTR [esp+0x70],0x2
10036beb:	call   0x10042f01
10036bf0:	push   0xffffffff
10036bf2:	mov    BYTE PTR [esp+0x74],0x3
10036bf7:	push   ebx
10036bf8:	lea    ecx,[esp+0x28]
10036bfc:	push   ecx
10036bfd:	lea    ecx,[esp+0x54]
10036c01:	mov    DWORD PTR [esp+0x48],0x10073574
10036c09:	mov    DWORD PTR [esp+0x6c],edi
10036c0d:	mov    DWORD PTR [esp+0x68],ebx
10036c11:	mov    BYTE PTR [esp+0x58],bl
10036c15:	call   0x10001241
10036c1a:	push   0x10074d64
10036c1f:	lea    edx,[esp+0x40]
10036c23:	push   edx
10036c24:	mov    BYTE PTR [esp+0x78],0x2
10036c29:	call   0x100479b4
10036c2e:	cmp    DWORD PTR [esi+0x8],0x2
10036c32:	jne    0x10036c91
10036c34:	mov    eax,DWORD PTR [esi]
10036c36:	mov    DWORD PTR [esp+0x14],eax
10036c3a:	add    eax,0xc
10036c3d:	push   eax
10036c3e:	call   0x10043721
10036c43:	mov    edi,eax
10036c45:	add    esp,0x4
10036c48:	cmp    edi,esi
10036c4a:	je     0x10036c55
10036c4c:	push   esi
10036c4d:	call   0x10042e92
10036c52:	add    esp,0x4
10036c55:	mov    eax,DWORD PTR [esp+0x14]
10036c59:	mov    ecx,DWORD PTR [ebp+0x10]
10036c5c:	mov    DWORD PTR [edi],eax
10036c5e:	push   ebx
10036c5f:	mov    DWORD PTR [edi+0x4],ecx
10036c62:	mov    eax,DWORD PTR [edi]
10036c64:	add    eax,0xc
10036c67:	lea    edx,[esp+0x1c]
10036c6b:	push   edx
10036c6c:	push   eax
10036c6d:	push   edi
10036c6e:	push   eax
10036c6f:	mov    eax,DWORD PTR [ebp+0x8]
10036c72:	mov    ecx,DWORD PTR [eax]
10036c74:	push   edi
10036c75:	push   0x22c038
10036c7a:	mov    esi,edi
10036c7c:	push   ecx
10036c7d:	mov    DWORD PTR [esp+0x30],esi
10036c81:	call   DWORD PTR ds:0x10066260
10036c87:	test   eax,eax
10036c89:	je     0x10036cc8
10036c8b:	cmp    DWORD PTR [edi+0x8],0x2
10036c8f:	je     0x10036c34
10036c91:	mov    eax,DWORD PTR [esi+0x8]
10036c94:	cmp    eax,0x1
10036c97:	jne    0x10036d78
10036c9d:	mov    edi,DWORD PTR [ebp+0xc]
10036ca0:	push   esi
10036ca1:	mov    DWORD PTR [edi],ebx
10036ca3:	call   0x10042e92
10036ca8:	push   ebx
10036ca9:	call   0x10042e92
10036cae:	add    esp,0x8
10036cb1:	mov    eax,edi
10036cb3:	mov    ecx,DWORD PTR [esp+0x68]
10036cb7:	mov    DWORD PTR fs:0x0,ecx
10036cbe:	pop    ecx
10036cbf:	pop    edi
10036cc0:	pop    esi
10036cc1:	pop    ebx
10036cc2:	mov    esp,ebp
10036cc4:	pop    ebp
10036cc5:	ret    0x10
10036cc8:	push   0x44f6aae2
10036ccd:	push   0x10073ac0
10036cd2:	call   0x10004246
10036cd7:	push   0x6bbf8d36
10036cdc:	push   eax
10036cdd:	call   0x10004246
10036ce2:	push   0x7da95c8a
10036ce7:	push   eax
10036ce8:	call   0x10004246
10036ced:	push   0x120cc51a
10036cf2:	push   eax
10036cf3:	call   0x10004246
10036cf8:	push   eax
10036cf9:	push   0x1e
10036cfb:	push   0x10073748
10036d00:	call   0x10004258
10036d05:	mov    esi,eax
10036d07:	mov    edi,0xf
10036d0c:	push   esi
10036d0d:	mov    DWORD PTR [esp+0x68],edi
10036d11:	mov    DWORD PTR [esp+0x64],ebx
10036d15:	mov    BYTE PTR [esp+0x54],bl
10036d19:	call   0x10043010
10036d1e:	add    esp,0x30
10036d21:	push   eax
10036d22:	push   esi
10036d23:	lea    ecx,[esp+0x28]
10036d27:	call   0x1000133b
10036d2c:	lea    ecx,[esp+0x3c]
10036d30:	mov    BYTE PTR [esp+0x70],0x4
10036d35:	call   0x10042f01
10036d3a:	push   0xffffffff
10036d3c:	mov    BYTE PTR [esp+0x74],0x5
10036d41:	push   ebx
10036d42:	lea    edx,[esp+0x28]
10036d46:	push   edx
10036d47:	lea    ecx,[esp+0x54]
10036d4b:	mov    DWORD PTR [esp+0x48],0x10073574
10036d53:	mov    DWORD PTR [esp+0x6c],edi
10036d57:	mov    DWORD PTR [esp+0x68],ebx
10036d5b:	mov    BYTE PTR [esp+0x58],bl
10036d5f:	call   0x10001241
10036d64:	push   0x10074d64
10036d69:	lea    eax,[esp+0x40]
10036d6d:	push   eax
10036d6e:	mov    BYTE PTR [esp+0x78],0x4
10036d73:	call   0x100479b4
10036d78:	cmp    eax,ebx
10036d7a:	je     0x10036dd3
10036d7c:	push   0x43f51400
10036d81:	push   0x10073af8
10036d86:	call   0x10004246
10036d8b:	push   0x7652abb2
10036d90:	push   eax
10036d91:	call   0x10004246
10036d96:	push   eax
10036d97:	push   0x1e
10036d99:	push   0x10073748
10036d9e:	call   0x10004258
10036da3:	add    esp,0x1c
10036da6:	push   eax
10036da7:	lea    ecx,[esp+0x24]
10036dab:	call   0x100011cd
10036db0:	lea    ecx,[esp+0x20]
10036db4:	push   ecx
10036db5:	lea    edx,[esp+0x40]
10036db9:	push   edx
10036dba:	mov    BYTE PTR [esp+0x78],0x6
10036dbf:	call   0x100026fe
10036dc4:	push   0x10074d64
10036dc9:	lea    eax,[esp+0x40]
10036dcd:	push   eax
10036dce:	call   0x100479b4
10036dd3:	mov    eax,DWORD PTR [esi]
10036dd5:	mov    ecx,DWORD PTR [ebp+0x14]
10036dd8:	push   eax
10036dd9:	mov    DWORD PTR [ecx],eax
10036ddb:	call   0x10043721
10036de0:	mov    edi,eax
10036de2:	add    esp,0x4
10036de5:	cmp    edi,ebx
10036de7:	je     0x10036df2
10036de9:	push   ebx
10036dea:	call   0x10042e92
10036def:	add    esp,0x4
10036df2:	mov    edx,DWORD PTR [ebp+0x14]
10036df5:	mov    eax,DWORD PTR [edx]
10036df7:	push   eax
10036df8:	lea    ecx,[esi+0xc]
10036dfb:	push   ecx
10036dfc:	push   edi
10036dfd:	call   0x10045180
10036e02:	mov    edx,DWORD PTR [ebp+0xc]
10036e05:	push   esi
10036e06:	mov    DWORD PTR [edx],edi
10036e08:	call   0x10042e92
10036e0d:	push   ebx
10036e0e:	call   0x10042e92
10036e13:	mov    eax,DWORD PTR [ebp+0xc]
10036e16:	add    esp,0x14
10036e19:	mov    ecx,DWORD PTR [esp+0x68]
10036e1d:	mov    DWORD PTR fs:0x0,ecx
10036e24:	pop    ecx
10036e25:	pop    edi
10036e26:	pop    esi
10036e27:	pop    ebx
10036e28:	mov    esp,ebp
10036e2a:	pop    ebp
10036e2b:	ret    0x10
10036e2e:	int3   
10036e2f:	int3   
10036e30:	push   0xffffffff
10036e32:	push   0x100613c7
10036e37:	mov    eax,fs:0x0
10036e3d:	push   eax
10036e3e:	sub    esp,0x198
10036e44:	mov    eax,ds:0x1007e030
10036e49:	xor    eax,esp
10036e4b:	mov    DWORD PTR [esp+0x194],eax
10036e52:	push   ebx
10036e53:	push   esi
10036e54:	push   edi
10036e55:	mov    eax,ds:0x1007e030
10036e5a:	xor    eax,esp
10036e5c:	push   eax
10036e5d:	lea    eax,[esp+0x1a8]
10036e64:	mov    fs:0x0,eax
10036e6a:	mov    esi,ecx
10036e6c:	mov    eax,esi
10036e6e:	mov    edi,edx
10036e70:	lea    edx,[eax+0x2]
10036e73:	xor    ebx,ebx
10036e75:	mov    cx,WORD PTR [eax]
10036e78:	add    eax,0x2
10036e7b:	cmp    cx,bx
10036e7e:	jne    0x10036e75
10036e80:	sub    eax,edx
10036e82:	sar    eax,1
10036e84:	add    eax,0x1
10036e87:	cmp    eax,0x80
10036e8c:	jbe    0x10036f2e
10036e92:	push   0x4bc3bce2
10036e97:	push   0x10073b28
10036e9c:	call   0x10004246
10036ea1:	push   eax
10036ea2:	push   0x1e
10036ea4:	push   0x10073b64
10036ea9:	call   0x10004258
10036eae:	mov    esi,eax
10036eb0:	mov    edi,0xf
10036eb5:	push   esi
10036eb6:	mov    DWORD PTR [esp+0x68],edi
10036eba:	mov    DWORD PTR [esp+0x64],ebx
10036ebe:	mov    BYTE PTR [esp+0x54],bl
10036ec2:	call   0x10043010
10036ec7:	add    esp,0x18
10036eca:	push   eax
10036ecb:	push   esi
10036ecc:	lea    ecx,[esp+0x40]
10036ed0:	call   0x1000133b
10036ed5:	lea    ecx,[esp+0x54]
10036ed9:	mov    DWORD PTR [esp+0x1b0],ebx
10036ee0:	call   0x10042f01
10036ee5:	push   0xffffffff
10036ee7:	mov    BYTE PTR [esp+0x1b4],0x1
10036eef:	push   ebx
10036ef0:	lea    eax,[esp+0x40]
10036ef4:	push   eax
10036ef5:	lea    ecx,[esp+0x6c]
10036ef9:	mov    DWORD PTR [esp+0x60],0x10073574
10036f01:	mov    DWORD PTR [esp+0x84],edi
10036f08:	mov    DWORD PTR [esp+0x80],ebx
10036f0f:	mov    BYTE PTR [esp+0x70],bl
10036f13:	call   0x10001241
10036f18:	push   0x10074d64
10036f1d:	lea    ecx,[esp+0x58]
10036f21:	push   ecx
10036f22:	mov    BYTE PTR [esp+0x1b8],bl
10036f29:	call   0x100479b4
10036f2e:	call   DWORD PTR ds:0x1007efec
10036f34:	lea    edx,[esp+0xa4]
10036f3b:	mov    eax,esi
10036f3d:	sub    edx,esi
10036f3f:	nop
10036f40:	movzx  ecx,WORD PTR [eax]
10036f43:	mov    WORD PTR [edx+eax*1],cx
10036f47:	add    eax,0x2
10036f4a:	cmp    cx,bx
10036f4d:	jne    0x10036f40
10036f4f:	push   0x1
10036f51:	call   0x10043721
10036f56:	mov    esi,eax
10036f58:	add    esp,0x4
10036f5b:	mov    DWORD PTR [esp+0x14],esi
10036f5f:	push   ebx
10036f60:	lea    edx,[esp+0x1c]
10036f64:	push   edx
10036f65:	push   0x100
10036f6a:	lea    eax,[esp+0xb0]
10036f71:	push   eax
10036f72:	push   0x100
10036f77:	mov    ecx,eax
10036f79:	push   ecx
10036f7a:	mov    DWORD PTR [esp+0x1c8],0x2
10036f85:	mov    edx,DWORD PTR [edi]
10036f87:	push   0x22c070
10036f8c:	push   edx
10036f8d:	call   DWORD PTR ds:0x10066260
10036f93:	test   eax,eax
10036f95:	jne    0x10037050
10036f9b:	push   0x3f5a2d12
10036fa0:	push   0x10073b84
10036fa5:	call   0x10004246
10036faa:	push   0x31dbd724
10036faf:	push   eax
10036fb0:	call   0x10004246
10036fb5:	push   eax
10036fb6:	push   0x1a
10036fb8:	push   0x10073bc4
10036fbd:	call   0x10004258
10036fc2:	mov    esi,eax
10036fc4:	mov    edi,0xf
10036fc9:	push   esi
10036fca:	mov    DWORD PTR [esp+0x54],edi
10036fce:	mov    DWORD PTR [esp+0x50],ebx
10036fd2:	mov    BYTE PTR [esp+0x40],bl
10036fd6:	call   0x10043010
10036fdb:	add    esp,0x20
10036fde:	push   eax
10036fdf:	push   esi
10036fe0:	lea    ecx,[esp+0x24]
10036fe4:	call   0x1000133b
10036fe9:	lea    ecx,[esp+0x7c]
10036fed:	mov    BYTE PTR [esp+0x1b0],0x3
10036ff5:	call   0x10042f01
10036ffa:	push   0xffffffff
10036ffc:	mov    BYTE PTR [esp+0x1b4],0x4
10037004:	push   ebx
10037005:	lea    eax,[esp+0x24]
10037009:	push   eax
1003700a:	lea    ecx,[esp+0x94]
10037011:	mov    DWORD PTR [esp+0x88],0x10073574
1003701c:	mov    DWORD PTR [esp+0xac],edi
10037023:	mov    DWORD PTR [esp+0xa8],ebx
1003702a:	mov    BYTE PTR [esp+0x98],bl
10037031:	call   0x10001241
10037036:	push   0x10074d64
1003703b:	lea    ecx,[esp+0x80]
10037042:	push   ecx
10037043:	mov    BYTE PTR [esp+0x1b8],0x3
1003704b:	call   0x100479b4
10037050:	push   esi
10037051:	call   0x10042e92
10037056:	add    esp,0x4
10037059:	mov    ecx,DWORD PTR [esp+0x1a8]
10037060:	mov    DWORD PTR fs:0x0,ecx
10037067:	pop    ecx
10037068:	pop    edi
10037069:	pop    esi
1003706a:	pop    ebx
1003706b:	mov    ecx,DWORD PTR [esp+0x194]
10037072:	xor    ecx,esp
10037074:	call   0x10042e97
10037079:	add    esp,0x1a4
1003707f:	ret    
10037080:	push   ecx
10037081:	push   esi
10037082:	push   0x1fe
10037087:	call   0x1004349e
1003708c:	mov    esi,eax
1003708e:	add    esp,0x4
10037091:	test   esi,esi
10037093:	je     0x100370a7
10037095:	push   0x1fe
1003709a:	push   0x0
1003709c:	push   esi
1003709d:	call   0x10045c00
100370a2:	add    esp,0xc
100370a5:	jmp    0x100370a9
100370a7:	xor    esi,esi
100370a9:	mov    edx,esi
100370ab:	mov    eax,edi
100370ad:	sub    edx,edi
100370af:	nop
100370b0:	movzx  ecx,WORD PTR [eax]
100370b3:	mov    WORD PTR [edx+eax*1],cx
100370b7:	add    eax,0x2
100370ba:	test   cx,cx
100370bd:	jne    0x100370b0
100370bf:	mov    ecx,DWORD PTR [esp+0xc]
100370c3:	mov    edx,DWORD PTR [ecx]
100370c5:	push   0x0
100370c7:	lea    eax,[esp+0x8]
100370cb:	push   eax
100370cc:	push   0x1fe
100370d1:	push   esi
100370d2:	push   0x1fe
100370d7:	push   esi
100370d8:	push   0x22c064
100370dd:	push   edx
100370de:	call   DWORD PTR ds:0x10066260
100370e4:	push   esi
100370e5:	call   0x10042e92
100370ea:	add    esp,0x4
100370ed:	pop    esi
100370ee:	pop    ecx
100370ef:	ret    0x4
100370f2:	int3   
100370f3:	int3   
100370f4:	int3   
100370f5:	int3   
100370f6:	int3   
100370f7:	int3   
100370f8:	int3   
100370f9:	int3   
100370fa:	int3   
100370fb:	int3   
100370fc:	int3   
100370fd:	int3   
100370fe:	int3   
100370ff:	int3   
10037100:	push   0xffffffff
10037102:	push   0x10060788
10037107:	mov    eax,fs:0x0
1003710d:	push   eax
1003710e:	push   ecx
1003710f:	push   ebx
10037110:	push   ebp
10037111:	push   esi
10037112:	push   edi
10037113:	mov    eax,ds:0x1007e030
10037118:	xor    eax,esp
1003711a:	push   eax
1003711b:	lea    eax,[esp+0x18]
1003711f:	mov    fs:0x0,eax
10037125:	mov    ebp,DWORD PTR [esp+0x30]
10037129:	push   0x440
1003712e:	call   0x1004349e
10037133:	mov    ebx,eax
10037135:	add    esp,0x4
10037138:	test   ebx,ebx
1003713a:	je     0x1003714e
1003713c:	push   0x440
10037141:	push   0x0
10037143:	push   ebx
10037144:	call   0x10045c00
10037149:	add    esp,0xc
1003714c:	jmp    0x10037150
1003714e:	xor    ebx,ebx
10037150:	mov    DWORD PTR [esp+0x30],ebx
10037154:	push   0x517d8382
10037159:	mov    DWORD PTR [esp+0x24],0x0
10037161:	push   0x10073be0
10037166:	mov    WORD PTR [ebx],0x0
1003716b:	call   0x10004246
10037170:	push   eax
10037171:	push   0x4
10037173:	push   0x10073c08
10037178:	call   0x10004417
1003717d:	add    esp,0x14
10037180:	mov    edx,eax
10037182:	mov    cx,WORD PTR [eax]
10037185:	add    eax,0x2
10037188:	test   cx,cx
1003718b:	jne    0x10037182
1003718d:	mov    edi,ebx
1003718f:	sub    eax,edx
10037191:	add    edi,0xfffffffe
10037194:	mov    cx,WORD PTR [edi+0x2]
10037198:	add    edi,0x2
1003719b:	test   cx,cx
1003719e:	jne    0x10037194
100371a0:	mov    ecx,eax
100371a2:	shr    ecx,0x2
100371a5:	mov    esi,edx
100371a7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100371a9:	mov    ecx,eax
100371ab:	mov    eax,DWORD PTR [esp+0x2c]
100371af:	and    ecx,0x3
100371b2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100371b4:	mov    ecx,eax
100371b6:	mov    dx,WORD PTR [eax]
100371b9:	add    eax,0x2
100371bc:	test   dx,dx
100371bf:	jne    0x100371b6
100371c1:	mov    edi,ebx
100371c3:	sub    eax,ecx
100371c5:	mov    esi,ecx
100371c7:	add    edi,0xfffffffe
100371ca:	lea    ebx,[ebx+0x0]
100371d0:	mov    cx,WORD PTR [edi+0x2]
100371d4:	add    edi,0x2
100371d7:	test   cx,cx
100371da:	jne    0x100371d0
100371dc:	mov    ecx,eax
100371de:	shr    ecx,0x2
100371e1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100371e3:	mov    ecx,eax
100371e5:	and    ecx,0x3
100371e8:	lea    edx,[ebx+0x400]
100371ee:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100371f0:	mov    eax,ebp
100371f2:	sub    edx,ebp
100371f4:	movzx  ecx,WORD PTR [eax]
100371f7:	mov    WORD PTR [edx+eax*1],cx
100371fb:	add    eax,0x2
100371fe:	test   cx,cx
10037201:	jne    0x100371f4
10037203:	mov    ecx,DWORD PTR [esp+0x28]
10037207:	mov    edx,DWORD PTR [ecx]
10037209:	push   0x0
1003720b:	lea    eax,[esp+0x18]
1003720f:	push   eax
10037210:	push   0x440
10037215:	push   ebx
10037216:	push   0x440
1003721b:	push   ebx
1003721c:	push   0x22c078
10037221:	push   edx
10037222:	call   DWORD PTR ds:0x10066260
10037228:	push   ebx
10037229:	call   0x10042e92
1003722e:	add    esp,0x4
10037231:	mov    ecx,DWORD PTR [esp+0x18]
10037235:	mov    DWORD PTR fs:0x0,ecx
1003723c:	pop    ecx
1003723d:	pop    edi
1003723e:	pop    esi
1003723f:	pop    ebp
10037240:	pop    ebx
10037241:	add    esp,0x10
10037244:	ret    0xc
10037247:	int3   
10037248:	int3   
10037249:	int3   
1003724a:	int3   
1003724b:	int3   
1003724c:	int3   
1003724d:	int3   
1003724e:	int3   
1003724f:	int3   
10037250:	mov    ecx,DWORD PTR [eax]
10037252:	push   ecx
10037253:	call   0x10042e92
10037258:	pop    ecx
10037259:	ret    
1003725a:	int3   
1003725b:	int3   
1003725c:	int3   
1003725d:	int3   
1003725e:	int3   
1003725f:	int3   
10037260:	push   ebp
10037261:	mov    ebp,esp
10037263:	and    esp,0xfffffff8
10037266:	mov    ecx,DWORD PTR [eax]
10037268:	sub    esp,0x28
1003726b:	cmp    ecx,DWORD PTR [eax+0x4]
1003726e:	jbe    0x10037288
10037270:	lea    eax,[esp]
10037273:	push   eax
10037274:	call   0x100373b0
10037279:	push   0x10074dec
1003727e:	lea    ecx,[esp+0x4]
10037282:	push   ecx
10037283:	call   0x100479b4
10037288:	mov    edx,DWORD PTR [eax+0x8]
1003728b:	mov    al,BYTE PTR [ecx+edx*1]
1003728e:	mov    esp,ebp
10037290:	pop    ebp
10037291:	ret    
10037292:	int3   
10037293:	int3   
10037294:	int3   
10037295:	int3   
10037296:	int3   
10037297:	int3   
10037298:	int3   
10037299:	int3   
1003729a:	int3   
1003729b:	int3   
1003729c:	int3   
1003729d:	int3   
1003729e:	int3   
1003729f:	int3   
100372a0:	push   esi
100372a1:	mov    esi,ecx
100372a3:	mov    DWORD PTR [esi],0x10073574
100372a9:	cmp    DWORD PTR [esi+0x24],0x10
100372ad:	jb     0x100372bb
100372af:	mov    eax,DWORD PTR [esi+0x10]
100372b2:	push   eax
100372b3:	call   0x10042e92
100372b8:	add    esp,0x4
100372bb:	xor    eax,eax
100372bd:	mov    DWORD PTR [esi+0x24],0xf
100372c4:	mov    DWORD PTR [esi+0x20],eax
100372c7:	mov    BYTE PTR [esi+0x10],al
100372ca:	mov    ecx,esi
100372cc:	pop    esi
100372cd:	jmp    0x10042fd0
100372d2:	int3   
100372d3:	int3   
100372d4:	int3   
100372d5:	int3   
100372d6:	int3   
100372d7:	int3   
100372d8:	int3   
100372d9:	int3   
100372da:	int3   
100372db:	int3   
100372dc:	int3   
100372dd:	int3   
100372de:	int3   
100372df:	int3   
100372e0:	push   0xffffffff
100372e2:	push   0x1005fe68
100372e7:	mov    eax,fs:0x0
100372ed:	push   eax
100372ee:	push   ecx
100372ef:	push   esi
100372f0:	push   edi
100372f1:	mov    eax,ds:0x1007e030
100372f6:	xor    eax,esp
100372f8:	push   eax
100372f9:	lea    eax,[esp+0x10]
100372fd:	mov    fs:0x0,eax
10037303:	mov    esi,ecx
10037305:	mov    DWORD PTR [esp+0xc],esi
10037309:	mov    edi,DWORD PTR [esp+0x20]
1003730d:	push   edi
1003730e:	call   0x10042f78
10037313:	xor    eax,eax
10037315:	mov    DWORD PTR [esp+0x18],eax
10037319:	push   0xffffffff
1003731b:	lea    ecx,[esi+0xc]
1003731e:	mov    DWORD PTR [esi],0x10073574
10037324:	push   eax
10037325:	add    edi,0xc
10037328:	mov    DWORD PTR [ecx+0x18],0xf
1003732f:	mov    DWORD PTR [ecx+0x14],eax
10037332:	push   edi
10037333:	mov    BYTE PTR [ecx+0x4],al
10037336:	call   0x10001241
1003733b:	mov    DWORD PTR [esi],0x10073c54
10037341:	mov    eax,esi
10037343:	mov    ecx,DWORD PTR [esp+0x10]
10037347:	mov    DWORD PTR fs:0x0,ecx
1003734e:	pop    ecx
1003734f:	pop    edi
10037350:	pop    esi
10037351:	add    esp,0x10
10037354:	ret    0x4
10037357:	int3   
10037358:	int3   
10037359:	int3   
1003735a:	int3   
1003735b:	int3   
1003735c:	int3   
1003735d:	int3   
1003735e:	int3   
1003735f:	int3   
10037360:	push   esi
10037361:	mov    esi,ecx
10037363:	mov    DWORD PTR [esi],0x10073574
10037369:	cmp    DWORD PTR [esi+0x24],0x10
1003736d:	jb     0x1003737b
1003736f:	mov    eax,DWORD PTR [esi+0x10]
10037372:	push   eax
10037373:	call   0x10042e92
10037378:	add    esp,0x4
1003737b:	xor    eax,eax
1003737d:	mov    DWORD PTR [esi+0x24],0xf
10037384:	mov    DWORD PTR [esi+0x20],eax
10037387:	mov    ecx,esi
10037389:	mov    BYTE PTR [esi+0x10],al
1003738c:	call   0x10042fd0
10037391:	test   BYTE PTR [esp+0x8],0x1
10037396:	je     0x100373a1
10037398:	push   esi
10037399:	call   0x10042e92
1003739e:	add    esp,0x4
100373a1:	mov    eax,esi
100373a3:	pop    esi
100373a4:	ret    0x4
100373a7:	int3   
100373a8:	int3   
100373a9:	int3   
100373aa:	int3   
100373ab:	int3   
100373ac:	int3   
100373ad:	int3   
100373ae:	int3   
100373af:	int3   
100373b0:	push   0xffffffff
100373b2:	push   0x10061370
100373b7:	mov    eax,fs:0x0
100373bd:	push   eax
100373be:	sub    esp,0x1c
100373c1:	push   ebx
100373c2:	push   esi
100373c3:	push   edi
100373c4:	mov    eax,ds:0x1007e030
100373c9:	xor    eax,esp
100373cb:	push   eax
100373cc:	lea    eax,[esp+0x2c]
100373d0:	mov    fs:0x0,eax
100373d6:	mov    esi,DWORD PTR [esp+0x3c]
100373da:	push   0x35656fae
100373df:	push   0x10073c14
100373e4:	call   0x10004246
100373e9:	push   0x6837936e
100373ee:	push   eax
100373ef:	call   0x10004246
100373f4:	push   0x5a4422da
100373f9:	push   eax
100373fa:	call   0x10004246
100373ff:	push   eax
10037400:	push   0xd
10037402:	push   0x10073c40
10037407:	call   0x10004258
1003740c:	mov    edi,eax
1003740e:	xor    ebx,ebx
10037410:	push   edi
10037411:	mov    DWORD PTR [esp+0x50],0xf
10037419:	mov    DWORD PTR [esp+0x4c],ebx
1003741d:	mov    BYTE PTR [esp+0x3c],bl
10037421:	call   0x10043010
10037426:	add    esp,0x28
10037429:	push   eax
1003742a:	push   edi
1003742b:	lea    ecx,[esp+0x18]
1003742f:	call   0x1000133b
10037434:	mov    ecx,esi
10037436:	mov    DWORD PTR [esp+0x34],ebx
1003743a:	call   0x10042f01
1003743f:	mov    BYTE PTR [esp+0x34],0x1
10037444:	push   0xffffffff
10037446:	lea    ecx,[esi+0xc]
10037449:	mov    DWORD PTR [esi],0x10073574
1003744f:	push   ebx
10037450:	lea    eax,[esp+0x18]
10037454:	mov    DWORD PTR [ecx+0x18],0xf
1003745b:	mov    DWORD PTR [ecx+0x14],ebx
1003745e:	push   eax
1003745f:	mov    BYTE PTR [ecx+0x4],bl
10037462:	call   0x10001241
10037467:	cmp    DWORD PTR [esp+0x28],0x10
1003746c:	jb     0x1003747b
1003746e:	mov    ecx,DWORD PTR [esp+0x14]
10037472:	push   ecx
10037473:	call   0x10042e92
10037478:	add    esp,0x4
1003747b:	mov    eax,esi
1003747d:	mov    DWORD PTR [esi],0x10073c54
10037483:	mov    ecx,DWORD PTR [esp+0x2c]
10037487:	mov    DWORD PTR fs:0x0,ecx
1003748e:	pop    ecx
1003748f:	pop    edi
10037490:	pop    esi
10037491:	pop    ebx
10037492:	add    esp,0x28
10037495:	ret    0x4
10037498:	int3   
10037499:	int3   
1003749a:	int3   
1003749b:	int3   
1003749c:	int3   
1003749d:	int3   
1003749e:	int3   
1003749f:	int3   
100374a0:	push   0xffffffff
100374a2:	push   0x100625d1
100374a7:	mov    eax,fs:0x0
100374ad:	push   eax
100374ae:	sub    esp,0x10
100374b1:	push   ebx
100374b2:	push   ebp
100374b3:	push   edi
100374b4:	mov    eax,ds:0x1007e030
100374b9:	xor    eax,esp
100374bb:	push   eax
100374bc:	lea    eax,[esp+0x20]
100374c0:	mov    fs:0x0,eax
100374c6:	mov    ebp,DWORD PTR [esp+0x30]
100374ca:	xor    eax,eax
100374cc:	mov    DWORD PTR [esp+0x10],eax
100374d0:	mov    ecx,DWORD PTR [ebp+0x0]
100374d3:	mov    DWORD PTR [esp+0x14],esi
100374d7:	mov    DWORD PTR [esp+0x18],ebp
100374db:	mov    DWORD PTR [esp+0x1c],ecx
100374df:	mov    edi,0x1
100374e4:	mov    DWORD PTR [esp+0x28],edi
100374e8:	mov    DWORD PTR [esi+0x18],0xf
100374ef:	mov    DWORD PTR [esi+0x14],eax
100374f2:	mov    BYTE PTR [esi+0x4],al
100374f5:	mov    eax,ebp
100374f7:	mov    DWORD PTR [esp+0x10],edi
100374fb:	call   0x10037260
10037500:	test   al,al
10037502:	je     0x100375a9
10037508:	mov    eax,ebp
1003750a:	call   0x10037260
1003750f:	or     edx,0xffffffff
10037512:	sub    edx,DWORD PTR [esi+0x14]
10037515:	mov    bl,al
10037517:	cmp    edx,0x1
1003751a:	ja     0x10037521
1003751c:	call   0x100571a0
10037521:	mov    edi,DWORD PTR [esi+0x14]
10037524:	add    edi,0x1
10037527:	cmp    edi,0xfffffffe
1003752a:	jbe    0x10037531
1003752c:	call   0x100571a0
10037531:	mov    eax,DWORD PTR [esi+0x18]
10037534:	cmp    eax,edi
10037536:	jae    0x1003755a
10037538:	mov    eax,DWORD PTR [esi+0x14]
1003753b:	push   eax
1003753c:	push   edi
1003753d:	mov    ecx,esi
1003753f:	call   0x10001500
10037544:	test   edi,edi
10037546:	jbe    0x10037590
10037548:	mov    ecx,DWORD PTR [esi+0x14]
1003754b:	mov    edx,0x10
10037550:	cmp    DWORD PTR [esi+0x18],edx
10037553:	jb     0x10037576
10037555:	mov    eax,DWORD PTR [esi+0x4]
10037558:	jmp    0x10037579
1003755a:	test   edi,edi
1003755c:	jne    0x10037546
1003755e:	cmp    eax,0x10
10037561:	mov    DWORD PTR [esi+0x14],edi
10037564:	jb     0x1003756e
10037566:	mov    eax,DWORD PTR [esi+0x4]
10037569:	mov    BYTE PTR [eax],0x0
1003756c:	jmp    0x10037590
1003756e:	lea    eax,[esi+0x4]
10037571:	mov    BYTE PTR [eax],0x0
10037574:	jmp    0x10037590
10037576:	lea    eax,[esi+0x4]
10037579:	mov    BYTE PTR [eax+ecx*1],bl
1003757c:	cmp    DWORD PTR [esi+0x18],edx
1003757f:	mov    DWORD PTR [esi+0x14],edi
10037582:	jb     0x10037589
10037584:	mov    eax,DWORD PTR [esi+0x4]
10037587:	jmp    0x1003758c
10037589:	lea    eax,[esi+0x4]
1003758c:	mov    BYTE PTR [eax+edi*1],0x0
10037590:	add    DWORD PTR [ebp+0x0],0x1
10037594:	mov    eax,ebp
10037596:	call   0x10037260
1003759b:	test   al,al
1003759d:	jne    0x10037508
100375a3:	add    DWORD PTR [ebp+0x0],0x1
100375a7:	jmp    0x100375ac
100375a9:	add    DWORD PTR [ebp+0x0],edi
100375ac:	mov    eax,esi
100375ae:	mov    ecx,DWORD PTR [esp+0x20]
100375b2:	mov    DWORD PTR fs:0x0,ecx
100375b9:	pop    ecx
100375ba:	pop    edi
100375bb:	pop    ebp
100375bc:	pop    ebx
100375bd:	add    esp,0x1c
100375c0:	ret    0x4
100375c3:	int3   
100375c4:	int3   
100375c5:	int3   
100375c6:	int3   
100375c7:	int3   
100375c8:	int3   
100375c9:	int3   
100375ca:	int3   
100375cb:	int3   
100375cc:	int3   
100375cd:	int3   
100375ce:	int3   
100375cf:	int3   
100375d0:	push   ebp
100375d1:	mov    ebp,esp
100375d3:	and    esp,0xfffffff8
100375d6:	push   0xffffffff
100375d8:	push   0x100631d8
100375dd:	mov    eax,fs:0x0
100375e3:	push   eax
100375e4:	sub    esp,0x38
100375e7:	push   ebx
100375e8:	mov    eax,ds:0x1007e030
100375ed:	xor    eax,esp
100375ef:	push   eax
100375f0:	lea    eax,[esp+0x40]
100375f4:	mov    fs:0x0,eax
100375fa:	xor    eax,eax
100375fc:	mov    DWORD PTR [esp+0xc],eax
10037600:	mov    ecx,DWORD PTR [esi]
10037602:	mov    DWORD PTR [esp+0xc],esi
10037606:	mov    DWORD PTR [esp+0x10],ecx
1003760a:	push   esi
1003760b:	mov    DWORD PTR [esp+0x4c],eax
1003760f:	call   0x100377e0
10037614:	mov    ecx,DWORD PTR [esi]
10037616:	mov    edx,DWORD PTR [esi+0x4]
10037619:	mov    ebx,eax
1003761b:	sub    edx,ecx
1003761d:	cmp    ebx,edx
1003761f:	jbe    0x1003763a
10037621:	lea    eax,[esp+0x14]
10037625:	push   eax
10037626:	call   0x100373b0
1003762b:	push   0x10074dec
10037630:	lea    ecx,[esp+0x18]
10037634:	push   ecx
10037635:	call   0x100479b4
1003763a:	mov    eax,DWORD PTR [esi+0x8]
1003763d:	add    eax,ecx
1003763f:	push   ebx
10037640:	mov    DWORD PTR [edi+0x18],0xf
10037647:	mov    DWORD PTR [edi+0x14],0x0
1003764e:	push   eax
1003764f:	mov    ecx,edi
10037651:	mov    BYTE PTR [edi+0x4],0x0
10037655:	call   0x1000133b
1003765a:	add    DWORD PTR [esi],ebx
1003765c:	mov    eax,edi
1003765e:	mov    ecx,DWORD PTR [esp+0x40]
10037662:	mov    DWORD PTR fs:0x0,ecx
10037669:	pop    ecx
1003766a:	pop    ebx
1003766b:	mov    esp,ebp
1003766d:	pop    ebp
1003766e:	ret    
1003766f:	int3   
10037670:	push   0xffffffff
10037672:	push   0x10063789
10037677:	mov    eax,fs:0x0
1003767d:	push   eax
1003767e:	sub    esp,0x28
10037681:	mov    eax,ds:0x1007e030
10037686:	xor    eax,esp
10037688:	mov    DWORD PTR [esp+0x24],eax
1003768c:	push   ebp
1003768d:	push   esi
1003768e:	push   edi
1003768f:	mov    eax,ds:0x1007e030
10037694:	xor    eax,esp
10037696:	push   eax
10037697:	lea    eax,[esp+0x38]
1003769b:	mov    fs:0x0,eax
100376a1:	mov    ebp,DWORD PTR [esp+0x48]
100376a5:	xor    eax,eax
100376a7:	mov    DWORD PTR [esp+0x40],eax
100376ab:	mov    esi,ecx
100376ad:	lea    edi,[esp+0x18]
100376b1:	mov    DWORD PTR [esp+0x14],ebp
100376b5:	mov    DWORD PTR [esp+0x10],eax
100376b9:	call   0x100375d0
100376be:	mov    DWORD PTR [esp+0x40],0x1
100376c6:	mov    eax,ds:0x10080a74
100376cb:	mov    edx,DWORD PTR [eax+0xc]
100376ce:	mov    ecx,0x10080a74
100376d3:	call   edx
100376d5:	add    eax,0x10
100376d8:	mov    DWORD PTR [ebp+0x0],eax
100376db:	mov    eax,0x1006cd08
100376e0:	test   eax,0xffff0000
100376e5:	mov    BYTE PTR [esp+0x40],0x2
100376ea:	jne    0x10037708
100376ec:	mov    ecx,eax
100376ee:	movzx  esi,cx
100376f1:	push   esi
100376f2:	call   0x1000201d
100376f7:	add    esp,0x4
100376fa:	test   eax,eax
100376fc:	je     0x10037713
100376fe:	push   esi
100376ff:	push   eax
10037700:	push   ebp
10037701:	call   0x100021dc
10037706:	jmp    0x10037713
10037708:	push   0x1006cd08
1003770d:	push   ebp
1003770e:	call   0x100020b8
10037713:	mov    BYTE PTR [esp+0x40],0x1
10037718:	mov    eax,DWORD PTR [ebp+0x0]
1003771b:	mov    esi,DWORD PTR [esp+0x2c]
1003771f:	mov    edi,0x10
10037724:	sub    eax,edi
10037726:	mov    ecx,0x1
1003772b:	sub    ecx,DWORD PTR [eax+0xc]
1003772e:	mov    eax,DWORD PTR [eax+0x8]
10037731:	add    esi,esi
10037733:	sub    eax,esi
10037735:	or     eax,ecx
10037737:	mov    DWORD PTR [esp+0x10],0x1
1003773f:	jge    0x1003774a
10037741:	mov    eax,esi
10037743:	mov    ecx,ebp
10037745:	call   0x10002262
1003774a:	cmp    DWORD PTR [esp+0x30],edi
1003774e:	mov    ecx,DWORD PTR [ebp+0x0]
10037751:	mov    eax,DWORD PTR [esp+0x1c]
10037755:	jae    0x1003775b
10037757:	lea    eax,[esp+0x1c]
1003775b:	push   esi
1003775c:	push   ecx
1003775d:	push   0xffffffff
1003775f:	push   eax
10037760:	push   0x0
10037762:	push   0xfde9
10037767:	call   DWORD PTR ds:0x1006608c
1003776d:	mov    eax,DWORD PTR [ebp+0x0]
10037770:	test   eax,eax
10037772:	je     0x10037781
10037774:	push   eax
10037775:	call   0x100436f3
1003777a:	add    esp,0x4
1003777d:	test   eax,eax
1003777f:	jl     0x100377ca
10037781:	mov    ecx,DWORD PTR [ebp+0x0]
10037784:	cmp    eax,DWORD PTR [ecx-0x8]
10037787:	jg     0x100377ca
10037789:	mov    DWORD PTR [ecx-0xc],eax
1003778c:	mov    edx,DWORD PTR [ebp+0x0]
1003778f:	mov    WORD PTR [edx+eax*2],0x0
10037795:	cmp    DWORD PTR [esp+0x30],edi
10037799:	jb     0x100377a8
1003779b:	mov    eax,DWORD PTR [esp+0x1c]
1003779f:	push   eax
100377a0:	call   0x10042e92
100377a5:	add    esp,0x4
100377a8:	mov    eax,ebp
100377aa:	mov    ecx,DWORD PTR [esp+0x38]
100377ae:	mov    DWORD PTR fs:0x0,ecx
100377b5:	pop    ecx
100377b6:	pop    edi
100377b7:	pop    esi
100377b8:	pop    ebp
100377b9:	mov    ecx,DWORD PTR [esp+0x24]
100377bd:	xor    ecx,esp
100377bf:	call   0x10042e97
100377c4:	add    esp,0x34
100377c7:	ret    0x4
100377ca:	push   0x80070057
100377cf:	call   0x10001f45
100377d4:	int3   
100377d5:	int3   
100377d6:	int3   
100377d7:	int3   
100377d8:	int3   
100377d9:	int3   
100377da:	int3   
100377db:	int3   
100377dc:	int3   
100377dd:	int3   
100377de:	int3   
100377df:	int3   
100377e0:	push   ebp
100377e1:	mov    ebp,esp
100377e3:	and    esp,0xfffffff8
100377e6:	push   0xffffffff
100377e8:	push   0x10062588
100377ed:	mov    eax,fs:0x0
100377f3:	push   eax
100377f4:	sub    esp,0x3c
100377f7:	push   esi
100377f8:	push   edi
100377f9:	mov    eax,ds:0x1007e030
100377fe:	xor    eax,esp
10037800:	push   eax
10037801:	lea    eax,[esp+0x48]
10037805:	mov    fs:0x0,eax
1003780b:	mov    eax,DWORD PTR [ebp+0x8]
1003780e:	mov    ecx,DWORD PTR [eax]
10037810:	mov    DWORD PTR [esp+0x14],eax
10037814:	mov    DWORD PTR [esp+0x18],ecx
10037818:	mov    DWORD PTR [esp+0x50],0x0
10037820:	mov    edi,DWORD PTR [eax+0x4]
10037823:	cmp    ecx,edi
10037825:	jbe    0x10037840
10037827:	lea    eax,[esp+0x1c]
1003782b:	push   eax
1003782c:	call   0x100373b0
10037831:	push   0x10074dec
10037836:	lea    ecx,[esp+0x20]
1003783a:	push   ecx
1003783b:	call   0x100479b4
10037840:	mov    esi,DWORD PTR [eax+0x8]
10037843:	mov    dl,BYTE PTR [esi+ecx*1]
10037846:	add    ecx,0x1
10037849:	cmp    ecx,edi
1003784b:	mov    BYTE PTR [esp+0x10],dl
1003784f:	mov    DWORD PTR [eax],ecx
10037851:	jbe    0x1003786c
10037853:	lea    eax,[esp+0x1c]
10037857:	push   eax
10037858:	call   0x100373b0
1003785d:	push   0x10074dec
10037862:	lea    ecx,[esp+0x20]
10037866:	push   ecx
10037867:	call   0x100479b4
1003786c:	mov    dl,BYTE PTR [ecx+esi*1]
1003786f:	add    ecx,0x1
10037872:	cmp    ecx,edi
10037874:	mov    BYTE PTR [esp+0x11],dl
10037878:	mov    DWORD PTR [eax],ecx
1003787a:	jbe    0x10037895
1003787c:	lea    eax,[esp+0x1c]
10037880:	push   eax
10037881:	call   0x100373b0
10037886:	push   0x10074dec
1003788b:	lea    ecx,[esp+0x20]
1003788f:	push   ecx
10037890:	call   0x100479b4
10037895:	mov    dl,BYTE PTR [ecx+esi*1]
10037898:	add    ecx,0x1
1003789b:	cmp    ecx,edi
1003789d:	mov    BYTE PTR [esp+0x12],dl
100378a1:	mov    DWORD PTR [eax],ecx
100378a3:	jbe    0x100378be
100378a5:	lea    eax,[esp+0x1c]
100378a9:	push   eax
100378aa:	call   0x100373b0
100378af:	push   0x10074dec
100378b4:	lea    ecx,[esp+0x20]
100378b8:	push   ecx
100378b9:	call   0x100479b4
100378be:	mov    dl,BYTE PTR [ecx+esi*1]
100378c1:	add    ecx,0x1
100378c4:	mov    BYTE PTR [esp+0x13],dl
100378c8:	mov    DWORD PTR [eax],ecx
100378ca:	mov    eax,DWORD PTR [esp+0x10]
100378ce:	mov    ecx,DWORD PTR [esp+0x48]
100378d2:	mov    DWORD PTR fs:0x0,ecx
100378d9:	pop    ecx
100378da:	pop    edi
100378db:	pop    esi
100378dc:	mov    esp,ebp
100378de:	pop    ebp
100378df:	ret    0x4
100378e2:	int3   
100378e3:	int3   
100378e4:	int3   
100378e5:	int3   
100378e6:	int3   
100378e7:	int3   
100378e8:	int3   
100378e9:	int3   
100378ea:	int3   
100378eb:	int3   
100378ec:	int3   
100378ed:	int3   
100378ee:	int3   
100378ef:	int3   
100378f0:	mov    eax,DWORD PTR [esi]
100378f2:	lea    ecx,[eax+edi*1]
100378f5:	sub    esp,0x28
100378f8:	cmp    ecx,DWORD PTR [esi+0x4]
100378fb:	jbe    0x10037915
100378fd:	lea    edx,[esp]
10037900:	push   edx
10037901:	call   0x100373b0
10037906:	push   0x10074dec
1003790b:	lea    eax,[esp+0x4]
1003790f:	push   eax
10037910:	call   0x100479b4
10037915:	mov    ecx,DWORD PTR [esi+0x8]
10037918:	mov    edx,DWORD PTR [esp+0x2c]
1003791c:	push   edi
1003791d:	add    ecx,eax
1003791f:	push   ecx
10037920:	push   edx
10037921:	call   0x10045180
10037926:	add    esp,0xc
10037929:	add    DWORD PTR [esi],edi
1003792b:	add    esp,0x28
1003792e:	ret    0x4
10037931:	int3   
10037932:	int3   
10037933:	int3   
10037934:	int3   
10037935:	int3   
10037936:	int3   
10037937:	int3   
10037938:	int3   
10037939:	int3   
1003793a:	int3   
1003793b:	int3   
1003793c:	int3   
1003793d:	int3   
1003793e:	int3   
1003793f:	int3   
10037940:	mov    eax,DWORD PTR [ecx]
10037942:	test   eax,eax
10037944:	je     0x1003794b
10037946:	mov    ecx,DWORD PTR [ecx+0x4]
10037949:	mov    DWORD PTR [eax],ecx
1003794b:	ret    
1003794c:	int3   
1003794d:	int3   
1003794e:	int3   
1003794f:	int3   
10037950:	push   0x10080d4c
10037955:	call   DWORD PTR ds:0x100660a4
1003795b:	mov    eax,DWORD PTR [esp+0x4]
1003795f:	ret    0x4
10037962:	int3   
10037963:	int3   
10037964:	int3   
10037965:	int3   
10037966:	int3   
10037967:	int3   
10037968:	int3   
10037969:	int3   
1003796a:	int3   
1003796b:	int3   
1003796c:	int3   
1003796d:	int3   
1003796e:	int3   
1003796f:	int3   
10037970:	push   0x10080d4c
10037975:	call   DWORD PTR ds:0x100660ac
1003797b:	ret    
1003797c:	int3   
1003797d:	int3   
1003797e:	int3   
1003797f:	int3   
10037980:	push   ebp
10037981:	mov    ebp,esp
10037983:	push   0xffffffff
10037985:	push   0x10062560
1003798a:	mov    eax,fs:0x0
10037990:	push   eax
10037991:	sub    esp,0x10
10037994:	push   ebx
10037995:	push   esi
10037996:	push   edi
10037997:	mov    eax,ds:0x1007e030
1003799c:	xor    eax,ebp
1003799e:	push   eax
1003799f:	lea    eax,[ebp-0xc]
100379a2:	mov    fs:0x0,eax
100379a8:	mov    DWORD PTR [ebp-0x10],esp
100379ab:	push   0x1
100379ad:	lea    eax,[ebp-0x18]
100379b0:	push   eax
100379b1:	mov    DWORD PTR [ebp-0x4],0x0
100379b8:	call   0x100349f0
100379bd:	mov    ecx,DWORD PTR [ebp+0x8]
100379c0:	mov    esi,DWORD PTR [ebp-0x18]
100379c3:	push   0x0
100379c5:	lea    edx,[ebp-0x1c]
100379c8:	push   edx
100379c9:	push   0x4
100379cb:	lea    eax,[ebp-0x14]
100379ce:	push   eax
100379cf:	push   0x4
100379d1:	mov    DWORD PTR [ebp-0x14],ecx
100379d4:	mov    ecx,eax
100379d6:	push   ecx
100379d7:	push   0x22c068
100379dc:	push   esi
100379dd:	call   DWORD PTR ds:0x10066260
100379e3:	push   esi
100379e4:	call   DWORD PTR ds:0x10066070
100379ea:	mov    ecx,DWORD PTR [ebp-0xc]
100379ed:	mov    DWORD PTR fs:0x0,ecx
100379f4:	pop    ecx
100379f5:	pop    edi
100379f6:	pop    esi
100379f7:	pop    ebx
100379f8:	mov    esp,ebp
100379fa:	pop    ebp
100379fb:	ret    
100379fc:	mov    eax,0x100379ea
10037a01:	ret    
10037a02:	int3   
10037a03:	int3   
10037a04:	int3   
10037a05:	int3   
10037a06:	int3   
10037a07:	int3   
10037a08:	int3   
10037a09:	int3   
10037a0a:	int3   
10037a0b:	int3   
10037a0c:	int3   
10037a0d:	int3   
10037a0e:	int3   
10037a0f:	int3   
10037a10:	push   ebp
10037a11:	mov    ebp,esp
10037a13:	push   0xffffffff
10037a15:	push   0x10062538
10037a1a:	mov    eax,fs:0x0
10037a20:	push   eax
10037a21:	sub    esp,0x1c
10037a24:	push   ebx
10037a25:	push   esi
10037a26:	push   edi
10037a27:	mov    eax,ds:0x1007e030
10037a2c:	xor    eax,ebp
10037a2e:	push   eax
10037a2f:	lea    eax,[ebp-0xc]
10037a32:	mov    fs:0x0,eax
10037a38:	mov    DWORD PTR [ebp-0x10],esp
10037a3b:	xor    esi,esi
10037a3d:	mov    DWORD PTR [ebp-0x24],esi
10037a40:	mov    eax,ds:0x10080a74
10037a45:	mov    edx,DWORD PTR [eax+0xc]
10037a48:	mov    ecx,0x10080a74
10037a4d:	call   edx
10037a4f:	lea    edi,[eax+0x10]
10037a52:	mov    DWORD PTR [ebp-0x14],edi
10037a55:	push   0x1
10037a57:	lea    eax,[ebp-0x24]
10037a5a:	mov    DWORD PTR [ebp-0x4],esi
10037a5d:	push   eax
10037a5e:	mov    BYTE PTR [ebp-0x4],0x1
10037a62:	call   0x100349f0
10037a67:	mov    BYTE PTR [ebp-0x4],0x2
10037a6b:	mov    DWORD PTR [ebp-0x20],esi
10037a6e:	mov    edi,edi
10037a70:	cmp    esi,0x12
10037a73:	je     0x10037b9b
10037a79:	mov    edx,DWORD PTR ds:0x10080a74
10037a7f:	mov    eax,DWORD PTR [edx+0xc]
10037a82:	mov    ecx,0x10080a74
10037a87:	call   eax
10037a89:	add    eax,0x10
10037a8c:	mov    DWORD PTR [ebp-0x1c],eax
10037a8f:	push   0x0
10037a91:	lea    ecx,[ebp-0x28]
10037a94:	push   ecx
10037a95:	push   0x4
10037a97:	lea    edx,[ebp-0x18]
10037a9a:	push   edx
10037a9b:	push   0x4
10037a9d:	mov    eax,edx
10037a9f:	push   eax
10037aa0:	mov    BYTE PTR [ebp-0x4],0x3
10037aa4:	mov    ecx,DWORD PTR [ebp-0x24]
10037aa7:	push   0x22c06c
10037aac:	push   ecx
10037aad:	mov    DWORD PTR [ebp-0x18],esi
10037ab0:	call   DWORD PTR ds:0x10066260
10037ab6:	mov    esi,DWORD PTR [ebp-0x18]
10037ab9:	test   esi,esi
10037abb:	je     0x10037b2a
10037abd:	push   0x79f97936
10037ac2:	push   0x10073c5c
10037ac7:	call   0x10004246
10037acc:	add    esp,0x8
10037acf:	push   0x4768bb32
10037ad4:	push   eax
10037ad5:	call   0x10004246
10037ada:	add    esp,0x8
10037add:	push   0x3a7ef6a0
10037ae2:	push   eax
10037ae3:	call   0x10004246
10037ae8:	add    esp,0x8
10037aeb:	push   0x5e3eff84
10037af0:	push   eax
10037af1:	call   0x10004246
10037af6:	add    esp,0x8
10037af9:	push   eax
10037afa:	push   0x2
10037afc:	push   0x10073c8c
10037b01:	call   0x10004258
10037b06:	add    esp,0xc
10037b09:	push   esi
10037b0a:	push   eax
10037b0b:	lea    edi,[ebp-0x1c]
10037b0e:	call   0x10037d50
10037b13:	mov    eax,DWORD PTR [ebp-0x1c]
10037b16:	mov    ecx,DWORD PTR [eax-0xc]
10037b19:	add    esp,0x8
10037b1c:	push   ecx
10037b1d:	push   eax
10037b1e:	lea    edx,[ebp-0x14]
10037b21:	push   edx
10037b22:	call   0x100347b0
10037b27:	mov    edi,DWORD PTR [ebp-0x14]
10037b2a:	mov    ebx,DWORD PTR [edi-0xc]
10037b2d:	mov    eax,DWORD PTR [edi-0x8]
10037b30:	mov    ecx,0x1
10037b35:	sub    ecx,DWORD PTR [edi-0x4]
10037b38:	lea    esi,[ebx+0x1]
10037b3b:	sub    eax,esi
10037b3d:	or     eax,ecx
10037b3f:	jge    0x10037b4e
10037b41:	mov    ecx,esi
10037b43:	lea    eax,[ebp-0x14]
10037b46:	call   0x100346f0
10037b4b:	mov    edi,DWORD PTR [ebp-0x14]
10037b4e:	test   esi,esi
10037b50:	mov    BYTE PTR [ebx+edi*1],0x2c
10037b54:	jl     0x10037b91
10037b56:	cmp    esi,DWORD PTR [edi-0x8]
10037b59:	jg     0x10037b91
10037b5b:	mov    BYTE PTR [ebp-0x4],0x2
10037b5f:	mov    eax,DWORD PTR [ebp-0x1c]
10037b62:	add    eax,0xfffffff0
10037b65:	mov    DWORD PTR [edi-0xc],esi
10037b68:	mov    BYTE PTR [esi+edi*1],0x0
10037b6c:	lea    ecx,[eax+0xc]
10037b6f:	or     edx,0xffffffff
10037b72:	lock xadd DWORD PTR [ecx],edx
10037b76:	dec    edx
10037b77:	test   edx,edx
10037b79:	jg     0x10037b85
10037b7b:	mov    ecx,DWORD PTR [eax]
10037b7d:	mov    edx,DWORD PTR [ecx]
10037b7f:	push   eax
10037b80:	mov    eax,DWORD PTR [edx+0x4]
10037b83:	call   eax
10037b85:	add    DWORD PTR [ebp-0x20],0x1
10037b89:	mov    esi,DWORD PTR [ebp-0x20]
10037b8c:	jmp    0x10037a70
10037b91:	push   0x80070057
10037b96:	call   0x10001f45
10037b9b:	lea    edi,[ebp-0x14]
10037b9e:	call   0x10037cd0
10037ba3:	mov    ecx,DWORD PTR [ebp-0x24]
10037ba6:	push   ecx
10037ba7:	call   DWORD PTR ds:0x10066070
10037bad:	mov    DWORD PTR [ebp-0x4],0x0
10037bb4:	mov    eax,DWORD PTR [ebp-0x14]
10037bb7:	cmp    DWORD PTR [eax-0x4],0x1
10037bbb:	jle    0x10037bcd
10037bbd:	mov    edx,DWORD PTR [eax-0xc]
10037bc0:	push   edx
10037bc1:	lea    eax,[ebp-0x14]
10037bc4:	push   eax
10037bc5:	call   0x10034570
10037bca:	mov    eax,DWORD PTR [ebp-0x14]
10037bcd:	mov    esi,DWORD PTR [ebp+0x8]
10037bd0:	mov    DWORD PTR [esi+0x18],0xf
10037bd7:	mov    DWORD PTR [esi+0x14],0x0
10037bde:	lea    edi,[esi+0x4]
10037be1:	push   eax
10037be2:	mov    BYTE PTR [edi],0x0
10037be5:	call   0x10043010
10037bea:	mov    ebx,eax
10037bec:	mov    eax,DWORD PTR [esi+0x18]
10037bef:	add    esp,0x4
10037bf2:	cmp    eax,0x10
10037bf5:	jb     0x10037c01
10037bf7:	mov    ecx,DWORD PTR [edi]
10037bf9:	jmp    0x10037c03
10037bfb:	mov    eax,0x10037bb4
10037c00:	ret    
10037c01:	mov    ecx,edi
10037c03:	cmp    DWORD PTR [ebp-0x14],ecx
10037c06:	jb     0x10037c34
10037c08:	cmp    eax,0x10
10037c0b:	jb     0x10037c11
10037c0d:	mov    ecx,DWORD PTR [edi]
10037c0f:	jmp    0x10037c13
10037c11:	mov    ecx,edi
10037c13:	mov    edx,DWORD PTR [esi+0x14]
10037c16:	add    edx,ecx
10037c18:	mov    ecx,DWORD PTR [ebp-0x14]
10037c1b:	cmp    edx,ecx
10037c1d:	jbe    0x10037c34
10037c1f:	cmp    eax,0x10
10037c22:	jb     0x10037c26
10037c24:	mov    edi,DWORD PTR [edi]
10037c26:	push   ebx
10037c27:	sub    ecx,edi
10037c29:	push   ecx
10037c2a:	push   esi
10037c2b:	mov    ecx,esi
10037c2d:	call   0x10001241
10037c32:	jmp    0x10037c94
10037c34:	cmp    ebx,0xfffffffe
10037c37:	jbe    0x10037c3e
10037c39:	call   0x100571a0
10037c3e:	mov    eax,DWORD PTR [esi+0x18]
10037c41:	cmp    eax,ebx
10037c43:	jae    0x10037c61
10037c45:	mov    eax,DWORD PTR [esi+0x14]
10037c48:	push   eax
10037c49:	push   ebx
10037c4a:	mov    ecx,esi
10037c4c:	call   0x10001500
10037c51:	test   ebx,ebx
10037c53:	jbe    0x10037c94
10037c55:	mov    ecx,DWORD PTR [esi+0x18]
10037c58:	cmp    ecx,0x10
10037c5b:	jb     0x10037c74
10037c5d:	mov    eax,DWORD PTR [edi]
10037c5f:	jmp    0x10037c76
10037c61:	test   ebx,ebx
10037c63:	jne    0x10037c53
10037c65:	cmp    eax,0x10
10037c68:	mov    DWORD PTR [esi+0x14],ebx
10037c6b:	jb     0x10037c6f
10037c6d:	mov    edi,DWORD PTR [edi]
10037c6f:	mov    BYTE PTR [edi],0x0
10037c72:	jmp    0x10037c94
10037c74:	mov    eax,edi
10037c76:	mov    edx,DWORD PTR [ebp-0x14]
10037c79:	push   ebx
10037c7a:	push   edx
10037c7b:	push   ecx
10037c7c:	push   eax
10037c7d:	call   0x100433c5
10037c82:	add    esp,0x10
10037c85:	cmp    DWORD PTR [esi+0x18],0x10
10037c89:	mov    DWORD PTR [esi+0x14],ebx
10037c8c:	jb     0x10037c90
10037c8e:	mov    edi,DWORD PTR [edi]
10037c90:	mov    BYTE PTR [edi+ebx*1],0x0
10037c94:	mov    DWORD PTR [ebp-0x4],0xffffffff
10037c9b:	mov    eax,DWORD PTR [ebp-0x14]
10037c9e:	add    eax,0xfffffff0
10037ca1:	lea    ecx,[eax+0xc]
10037ca4:	or     edx,0xffffffff
10037ca7:	lock xadd DWORD PTR [ecx],edx
10037cab:	dec    edx
10037cac:	test   edx,edx
10037cae:	jg     0x10037cba
10037cb0:	mov    ecx,DWORD PTR [eax]
10037cb2:	mov    edx,DWORD PTR [ecx]
10037cb4:	push   eax
10037cb5:	mov    eax,DWORD PTR [edx+0x4]
10037cb8:	call   eax
10037cba:	mov    eax,esi
10037cbc:	mov    ecx,DWORD PTR [ebp-0xc]
10037cbf:	mov    DWORD PTR fs:0x0,ecx
10037cc6:	pop    ecx
10037cc7:	pop    edi
10037cc8:	pop    esi
10037cc9:	pop    ebx
10037cca:	mov    esp,ebp
10037ccc:	pop    ebp
10037ccd:	ret    
10037cce:	int3   
10037ccf:	int3   
10037cd0:	mov    eax,DWORD PTR [edi]
10037cd2:	mov    cl,BYTE PTR [eax]
10037cd4:	push   esi
10037cd5:	xor    esi,esi
10037cd7:	test   cl,cl
10037cd9:	je     0x10037d34
10037cdb:	jmp    0x10037ce0
10037cdd:	lea    ecx,[ecx+0x0]
10037ce0:	cmp    cl,0x2c
10037ce3:	jne    0x10037ced
10037ce5:	test   esi,esi
10037ce7:	jne    0x10037cef
10037ce9:	mov    esi,eax
10037ceb:	jmp    0x10037cef
10037ced:	xor    esi,esi
10037cef:	push   eax
10037cf0:	call   0x1005909a
10037cf5:	mov    cl,BYTE PTR [eax]
10037cf7:	add    esp,0x4
10037cfa:	test   cl,cl
10037cfc:	jne    0x10037ce0
10037cfe:	test   esi,esi
10037d00:	je     0x10037d34
10037d02:	mov    eax,DWORD PTR [edi]
10037d04:	mov    edx,DWORD PTR [eax-0x8]
10037d07:	sub    esi,eax
10037d09:	mov    ecx,0x1
10037d0e:	sub    ecx,DWORD PTR [eax-0x4]
10037d11:	sub    edx,esi
10037d13:	or     ecx,edx
10037d15:	jge    0x10037d20
10037d17:	mov    ecx,esi
10037d19:	mov    eax,edi
10037d1b:	call   0x100346f0
10037d20:	test   esi,esi
10037d22:	jl     0x10037d38
10037d24:	mov    eax,DWORD PTR [edi]
10037d26:	cmp    esi,DWORD PTR [eax-0x8]
10037d29:	jg     0x10037d38
10037d2b:	mov    DWORD PTR [eax-0xc],esi
10037d2e:	mov    eax,DWORD PTR [edi]
10037d30:	mov    BYTE PTR [esi+eax*1],0x0
10037d34:	mov    eax,edi
10037d36:	pop    esi
10037d37:	ret    
10037d38:	push   0x80070057
10037d3d:	call   0x10001f45
10037d42:	int3   
10037d43:	int3   
10037d44:	int3   
10037d45:	int3   
10037d46:	int3   
10037d47:	int3   
10037d48:	int3   
10037d49:	int3   
10037d4a:	int3   
10037d4b:	int3   
10037d4c:	int3   
10037d4d:	int3   
10037d4e:	int3   
10037d4f:	int3   
10037d50:	push   ebx
10037d51:	mov    ebx,DWORD PTR [esp+0x8]
10037d55:	lea    eax,[esp+0xc]
10037d59:	push   eax
10037d5a:	call   0x10037d70
10037d5f:	pop    ebx
10037d60:	ret    
10037d61:	int3   
10037d62:	int3   
10037d63:	int3   
10037d64:	int3   
10037d65:	int3   
10037d66:	int3   
10037d67:	int3   
10037d68:	int3   
10037d69:	int3   
10037d6a:	int3   
10037d6b:	int3   
10037d6c:	int3   
10037d6d:	int3   
10037d6e:	int3   
10037d6f:	int3   
10037d70:	test   ebx,ebx
10037d72:	push   ebp
10037d73:	mov    ebp,DWORD PTR [esp+0x8]
10037d77:	jne    0x10037d83
10037d79:	push   0x80070057
10037d7e:	call   0x10001f45
10037d83:	push   esi
10037d84:	push   ebp
10037d85:	push   ebx
10037d86:	call   0x10059130
10037d8b:	mov    esi,eax
10037d8d:	mov    eax,DWORD PTR [edi]
10037d8f:	mov    edx,DWORD PTR [eax-0x8]
10037d92:	sub    eax,0x10
10037d95:	mov    ecx,0x1
10037d9a:	sub    ecx,DWORD PTR [eax+0xc]
10037d9d:	sub    edx,esi
10037d9f:	add    esp,0x8
10037da2:	or     ecx,edx
10037da4:	jge    0x10037daf
10037da6:	mov    ecx,esi
10037da8:	mov    eax,edi
10037daa:	call   0x100346f0
10037daf:	mov    ecx,DWORD PTR [edi]
10037db1:	push   ebp
10037db2:	push   ebx
10037db3:	lea    eax,[esi+0x1]
10037db6:	push   eax
10037db7:	push   ecx
10037db8:	call   0x1005907f
10037dbd:	add    esp,0x10
10037dc0:	test   esi,esi
10037dc2:	jl     0x10037dd9
10037dc4:	mov    eax,DWORD PTR [edi]
10037dc6:	cmp    esi,DWORD PTR [eax-0x8]
10037dc9:	jg     0x10037dd9
10037dcb:	mov    DWORD PTR [eax-0xc],esi
10037dce:	mov    edx,DWORD PTR [edi]
10037dd0:	mov    BYTE PTR [esi+edx*1],0x0
10037dd4:	pop    esi
10037dd5:	pop    ebp
10037dd6:	ret    0x4
10037dd9:	push   0x80070057
10037dde:	call   0x10001f45
10037de3:	int3   
10037de4:	int3   
10037de5:	int3   
10037de6:	int3   
10037de7:	int3   
10037de8:	int3   
10037de9:	int3   
10037dea:	int3   
10037deb:	int3   
10037dec:	int3   
10037ded:	int3   
10037dee:	int3   
10037def:	int3   
10037df0:	push   ecx
10037df1:	mov    eax,DWORD PTR [edi]
10037df3:	lea    ecx,[esp]
10037df6:	push   ecx
10037df7:	mov    ecx,DWORD PTR [esp+0xc]
10037dfb:	push   esi
10037dfc:	add    eax,eax
10037dfe:	lea    edx,[esp+0x14]
10037e02:	push   edx
10037e03:	mov    DWORD PTR [esp+0xc],eax
10037e07:	mov    eax,DWORD PTR [esp+0x18]
10037e0b:	push   0x0
10037e0d:	mov    DWORD PTR [edi],0x0
10037e13:	mov    edx,DWORD PTR [ecx]
10037e15:	push   eax
10037e16:	push   edx
10037e17:	call   DWORD PTR ds:0x10066000
10037e1d:	test   eax,eax
10037e1f:	jne    0x10037e5e
10037e21:	mov    eax,DWORD PTR [esp+0xc]
10037e25:	cmp    eax,0x1
10037e28:	je     0x10037e2f
10037e2a:	cmp    eax,0x2
10037e2d:	jne    0x10037e4a
10037e2f:	test   esi,esi
10037e31:	mov    eax,DWORD PTR [esp]
10037e34:	je     0x10037e58
10037e36:	test   eax,eax
10037e38:	je     0x10037e53
10037e3a:	test   al,0x1
10037e3c:	jne    0x10037e4a
10037e3e:	mov    ecx,eax
10037e40:	shr    ecx,1
10037e42:	cmp    WORD PTR [esi+ecx*2-0x2],0x0
10037e48:	je     0x10037e58
10037e4a:	mov    eax,0xd
10037e4f:	pop    ecx
10037e50:	ret    0x8
10037e53:	mov    WORD PTR [esi],0x0
10037e58:	shr    eax,1
10037e5a:	mov    DWORD PTR [edi],eax
10037e5c:	xor    eax,eax
10037e5e:	pop    ecx
10037e5f:	ret    0x8
10037e62:	int3   
10037e63:	int3   
10037e64:	int3   
10037e65:	int3   
10037e66:	int3   
10037e67:	int3   
10037e68:	int3   
10037e69:	int3   
10037e6a:	int3   
10037e6b:	int3   
10037e6c:	int3   
10037e6d:	int3   
10037e6e:	int3   
10037e6f:	int3   
10037e70:	push   0xffffffff
10037e72:	push   0x10061340
10037e77:	mov    eax,fs:0x0
10037e7d:	push   eax
10037e7e:	sub    esp,0x34
10037e81:	push   ebx
10037e82:	push   ebp
10037e83:	push   esi
10037e84:	push   edi
10037e85:	mov    eax,ds:0x1007e030
10037e8a:	xor    eax,esp
10037e8c:	push   eax
10037e8d:	lea    eax,[esp+0x48]
10037e91:	mov    fs:0x0,eax
10037e97:	mov    ebp,DWORD PTR [esp+0x58]
10037e9b:	xor    edi,edi
10037e9d:	mov    DWORD PTR [esp+0x38],edi
10037ea1:	mov    DWORD PTR [esp+0x24],edi
10037ea5:	push   0x10073c90
10037eaa:	push   0x3d
10037eac:	push   0x10073cc0
10037eb1:	mov    DWORD PTR [esp+0x5c],edi
10037eb5:	call   0x10004417
10037eba:	add    esp,0xc
10037ebd:	lea    ecx,[esp+0x1c]
10037ec1:	push   ecx
10037ec2:	push   0x20019
10037ec7:	push   edi
10037ec8:	push   eax
10037ec9:	push   0x80000002
10037ece:	mov    DWORD PTR [esp+0x30],edi
10037ed2:	call   DWORD PTR ds:0x10066020
10037ed8:	cmp    eax,edi
10037eda:	jne    0x100382ff
10037ee0:	mov    edx,DWORD PTR [esp+0x1c]
10037ee4:	mov    DWORD PTR [esp+0x24],edx
10037ee8:	mov    DWORD PTR [esp+0x20],0x1
10037ef0:	mov    eax,ds:0x10080a74
10037ef5:	mov    edx,DWORD PTR [eax+0xc]
10037ef8:	mov    ecx,0x10080a74
10037efd:	call   edx
10037eff:	add    eax,0x10
10037f02:	mov    DWORD PTR [esp+0x14],eax
10037f06:	mov    BYTE PTR [esp+0x50],0x1
10037f0b:	mov    eax,ds:0x10080a74
10037f10:	mov    edx,DWORD PTR [eax+0xc]
10037f13:	mov    ecx,0x10080a74
10037f18:	call   edx
10037f1a:	lea    ebx,[eax+0x10]
10037f1d:	mov    DWORD PTR [esp+0x28],ebx
10037f21:	mov    eax,DWORD PTR [esp+0x20]
10037f25:	push   eax
10037f26:	push   0x624c5af6
10037f2b:	push   0x6211a952
10037f30:	push   0x41890e43
10037f35:	push   0x5f3adce1
10037f3a:	push   0x21b16c9b
10037f3f:	push   0x57ed9149
10037f44:	push   0x10073d3c
10037f49:	mov    BYTE PTR [esp+0x70],0x2
10037f4e:	call   0x10004246
10037f53:	add    esp,0x8
10037f56:	push   eax
10037f57:	call   0x10004246
10037f5c:	add    esp,0x8
10037f5f:	push   eax
10037f60:	call   0x10004246
10037f65:	add    esp,0x8
10037f68:	push   eax
10037f69:	call   0x10004246
10037f6e:	add    esp,0x8
10037f71:	push   eax
10037f72:	call   0x10004246
10037f77:	add    esp,0x8
10037f7a:	push   eax
10037f7b:	call   0x10004246
10037f80:	push   eax
10037f81:	push   0x12
10037f83:	push   0x10073d64
10037f88:	call   0x10004417
10037f8d:	add    esp,0x14
10037f90:	push   eax
10037f91:	lea    eax,[esp+0x1c]
10037f95:	call   0x10006445
10037f9a:	mov    esi,DWORD PTR [esp+0x1c]
10037f9e:	mov    eax,DWORD PTR [esp+0x24]
10037fa2:	add    esp,0x8
10037fa5:	lea    ecx,[esp+0x18]
10037fa9:	push   ecx
10037faa:	push   edi
10037fab:	lea    edx,[esp+0x38]
10037faf:	push   edx
10037fb0:	push   edi
10037fb1:	push   esi
10037fb2:	push   eax
10037fb3:	mov    DWORD PTR [esp+0x30],0x2
10037fbb:	call   DWORD PTR ds:0x10066000
10037fc1:	cmp    eax,edi
10037fc3:	jne    0x100382bd
10037fc9:	mov    eax,DWORD PTR [esp+0x30]
10037fcd:	cmp    eax,0x1
10037fd0:	je     0x10037fdb
10037fd2:	cmp    eax,0x2
10037fd5:	jne    0x100382bd
10037fdb:	mov    eax,DWORD PTR [esp+0x18]
10037fdf:	shr    eax,1
10037fe1:	je     0x100382bd
10037fe7:	mov    ecx,DWORD PTR [ebx-0x8]
10037fea:	add    eax,0x1
10037fed:	mov    edx,0x1
10037ff2:	sub    edx,DWORD PTR [ebx-0x4]
10037ff5:	sub    ecx,eax
10037ff7:	or     ecx,edx
10037ff9:	mov    DWORD PTR [esp+0x2c],eax
10037ffd:	jge    0x1003800c
10037fff:	lea    ecx,[esp+0x28]
10038003:	call   0x10002262
10038008:	mov    ebx,DWORD PTR [esp+0x28]
1003800c:	mov    ebp,DWORD PTR [esp+0x14]
10038010:	push   ebp
10038011:	lea    ecx,[esp+0x28]
10038015:	push   ecx
10038016:	lea    edi,[esp+0x34]
1003801a:	mov    esi,ebx
1003801c:	call   0x10037df0
10038021:	test   eax,eax
10038023:	je     0x10038053
10038025:	add    ebx,0xfffffff0
10038028:	mov    BYTE PTR [esp+0x50],0x1
1003802d:	lea    edx,[ebx+0xc]
10038030:	or     eax,0xffffffff
10038033:	lock xadd DWORD PTR [edx],eax
10038037:	dec    eax
10038038:	test   eax,eax
1003803a:	jg     0x10038046
1003803c:	mov    ecx,DWORD PTR [ebx]
1003803e:	mov    edx,DWORD PTR [ecx]
10038040:	mov    eax,DWORD PTR [edx+0x4]
10038043:	push   ebx
10038044:	call   eax
10038046:	mov    BYTE PTR [esp+0x50],0x0
1003804b:	lea    eax,[ebp-0x10]
1003804e:	jmp    0x10038294
10038053:	mov    edx,DWORD PTR ds:0x10080a74
10038059:	mov    eax,DWORD PTR [edx+0xc]
1003805c:	mov    ecx,0x10080a74
10038061:	call   eax
10038063:	lea    edi,[eax+0x10]
10038066:	mov    DWORD PTR [esp+0x18],edi
1003806a:	mov    BYTE PTR [esp+0x50],0x3
1003806f:	mov    eax,DWORD PTR [edi-0x8]
10038072:	mov    ecx,0x1
10038077:	sub    ecx,DWORD PTR [edi-0x4]
1003807a:	sub    eax,0x1
1003807d:	or     eax,ecx
1003807f:	jge    0x10038093
10038081:	mov    eax,0x1
10038086:	lea    ecx,[esp+0x18]
1003808a:	call   0x10002262
1003808f:	mov    edi,DWORD PTR [esp+0x18]
10038093:	mov    ebp,DWORD PTR ds:0x1006626c
10038099:	lea    ecx,[esp+0x34]
1003809d:	push   ecx
1003809e:	push   edi
1003809f:	push   0x0
100380a1:	push   0x0
100380a3:	push   ebx
100380a4:	push   0x0
100380a6:	call   ebp
100380a8:	mov    esi,eax
100380aa:	mov    eax,DWORD PTR [edi-0x8]
100380ad:	add    esi,0x1
100380b0:	mov    ecx,0x1
100380b5:	sub    ecx,DWORD PTR [edi-0x4]
100380b8:	sub    eax,esi
100380ba:	or     eax,ecx
100380bc:	jge    0x100380cd
100380be:	mov    eax,esi
100380c0:	lea    ecx,[esp+0x18]
100380c4:	call   0x10002262
100380c9:	mov    edi,DWORD PTR [esp+0x18]
100380cd:	lea    edx,[esp+0x34]
100380d1:	push   edx
100380d2:	push   edi
100380d3:	push   esi
100380d4:	push   0x0
100380d6:	push   ebx
100380d7:	push   0x0
100380d9:	call   ebp
100380db:	cmp    eax,esi
100380dd:	jbe    0x1003812a
100380df:	add    edi,0xfffffff0
100380e2:	mov    BYTE PTR [esp+0x50],0x2
100380e7:	lea    eax,[edi+0xc]
100380ea:	or     ecx,0xffffffff
100380ed:	lock xadd DWORD PTR [eax],ecx
100380f1:	dec    ecx
100380f2:	test   ecx,ecx
100380f4:	jg     0x10038100
100380f6:	mov    ecx,DWORD PTR [edi]
100380f8:	mov    edx,DWORD PTR [ecx]
100380fa:	mov    eax,DWORD PTR [edx+0x4]
100380fd:	push   edi
100380fe:	call   eax
10038100:	add    ebx,0xfffffff0
10038103:	mov    BYTE PTR [esp+0x50],0x1
10038108:	lea    ecx,[ebx+0xc]
1003810b:	or     edx,0xffffffff
1003810e:	lock xadd DWORD PTR [ecx],edx
10038112:	dec    edx
10038113:	test   edx,edx
10038115:	jg     0x10038288
1003811b:	mov    ecx,DWORD PTR [ebx]
1003811d:	mov    eax,DWORD PTR [ecx]
1003811f:	mov    edx,DWORD PTR [eax+0x4]
10038122:	push   ebx
10038123:	call   edx
10038125:	jmp    0x10038288
1003812a:	test   edi,edi
1003812c:	jne    0x10038132
1003812e:	xor    eax,eax
10038130:	jmp    0x10038143
10038132:	push   edi
10038133:	call   0x100436f3
10038138:	add    esp,0x4
1003813b:	test   eax,eax
1003813d:	jl     0x10038485
10038143:	cmp    eax,DWORD PTR [edi-0x8]
10038146:	jg     0x10038485
1003814c:	xor    ebp,ebp
1003814e:	mov    DWORD PTR [edi-0xc],eax
10038151:	mov    WORD PTR [edi+eax*2],0x0
10038157:	mov    DWORD PTR [esp+0x2c],ebp
1003815b:	push   ebp
1003815c:	push   0x80
10038161:	push   0x3
10038163:	push   ebp
10038164:	push   0x3
10038166:	push   0x80000000
1003816b:	push   edi
1003816c:	mov    BYTE PTR [esp+0x6c],0x4
10038171:	call   DWORD PTR ds:0x100660c0
10038177:	cmp    eax,0xffffffff
1003817a:	jne    0x100381cc
1003817c:	call   0x100066ab
10038181:	test   eax,eax
10038183:	jl     0x10038246
10038189:	lea    ecx,[esp+0x44]
1003818d:	push   ecx
1003818e:	push   ebp
1003818f:	call   DWORD PTR ds:0x10066268
10038195:	cmp    eax,0xffffffff
10038198:	mov    DWORD PTR [esp+0x40],eax
1003819c:	jne    0x100381d8
1003819e:	call   0x100066ab
100381a3:	test   eax,eax
100381a5:	jge    0x100381d4
100381a7:	test   ebp,ebp
100381a9:	je     0x100381b2
100381ab:	push   ebp
100381ac:	call   DWORD PTR ds:0x10066070
100381b2:	add    edi,0xfffffff0
100381b5:	mov    BYTE PTR [esp+0x50],0x2
100381ba:	lea    edx,[edi+0xc]
100381bd:	or     eax,0xffffffff
100381c0:	lock xadd DWORD PTR [edx],eax
100381c4:	dec    eax
100381c5:	test   eax,eax
100381c7:	jmp    0x100380f4
100381cc:	mov    ebp,eax
100381ce:	mov    DWORD PTR [esp+0x2c],ebp
100381d2:	jmp    0x10038189
100381d4:	mov    eax,DWORD PTR [esp+0x40]
100381d8:	cmp    eax,0x4c00
100381dd:	jne    0x1003823b
100381df:	cmp    DWORD PTR [esp+0x44],0x0
100381e4:	jne    0x1003823b
100381e6:	test   ebp,ebp
100381e8:	je     0x100381f7
100381ea:	push   ebp
100381eb:	call   DWORD PTR ds:0x10066070
100381f1:	xor    ebp,ebp
100381f3:	mov    DWORD PTR [esp+0x2c],ebp
100381f7:	cmp    DWORD PTR [edi-0x4],0x1
100381fb:	jle    0x1003820f
100381fd:	mov    ecx,DWORD PTR [edi-0xc]
10038200:	push   ecx
10038201:	lea    edx,[esp+0x1c]
10038205:	push   edx
10038206:	call   0x100022ab
1003820b:	mov    edi,DWORD PTR [esp+0x18]
1003820f:	lea    eax,[esp+0x38]
10038213:	push   eax
10038214:	lea    ecx,[esp+0x40]
10038218:	push   ecx
10038219:	push   edi
1003821a:	call   DWORD PTR ds:0x100663fc
10038220:	test   eax,eax
10038222:	jne    0x100381a7
10038224:	lea    esi,[esp+0x18]
10038228:	call   0x1000418f
1003822d:	cmp    DWORD PTR [esp+0x38],0x6673
10038235:	je     0x1003834e
1003823b:	test   ebp,ebp
1003823d:	je     0x10038246
1003823f:	push   ebp
10038240:	call   DWORD PTR ds:0x10066070
10038246:	add    edi,0xfffffff0
10038249:	mov    BYTE PTR [esp+0x50],0x2
1003824e:	lea    ecx,[edi+0xc]
10038251:	or     edx,0xffffffff
10038254:	lock xadd DWORD PTR [ecx],edx
10038258:	dec    edx
10038259:	test   edx,edx
1003825b:	jg     0x10038267
1003825d:	mov    ecx,DWORD PTR [edi]
1003825f:	mov    eax,DWORD PTR [ecx]
10038261:	mov    edx,DWORD PTR [eax+0x4]
10038264:	push   edi
10038265:	call   edx
10038267:	add    ebx,0xfffffff0
1003826a:	mov    BYTE PTR [esp+0x50],0x1
1003826f:	lea    eax,[ebx+0xc]
10038272:	or     ecx,0xffffffff
10038275:	lock xadd DWORD PTR [eax],ecx
10038279:	dec    ecx
1003827a:	test   ecx,ecx
1003827c:	jg     0x10038288
1003827e:	mov    ecx,DWORD PTR [ebx]
10038280:	mov    edx,DWORD PTR [ecx]
10038282:	mov    eax,DWORD PTR [edx+0x4]
10038285:	push   ebx
10038286:	call   eax
10038288:	mov    BYTE PTR [esp+0x50],0x0
1003828d:	mov    eax,DWORD PTR [esp+0x14]
10038291:	add    eax,0xfffffff0
10038294:	lea    ecx,[eax+0xc]
10038297:	or     edx,0xffffffff
1003829a:	lock xadd DWORD PTR [ecx],edx
1003829e:	dec    edx
1003829f:	test   edx,edx
100382a1:	jg     0x100382ad
100382a3:	mov    ecx,DWORD PTR [eax]
100382a5:	mov    edx,DWORD PTR [ecx]
100382a7:	push   eax
100382a8:	mov    eax,DWORD PTR [edx+0x4]
100382ab:	call   eax
100382ad:	add    DWORD PTR [esp+0x20],0x1
100382b2:	mov    ebp,DWORD PTR [esp+0x58]
100382b6:	xor    edi,edi
100382b8:	jmp    0x10037ef0
100382bd:	add    ebx,0xfffffff0
100382c0:	or     edx,0xffffffff
100382c3:	lea    ecx,[ebx+0xc]
100382c6:	mov    BYTE PTR [esp+0x50],0x1
100382cb:	lock xadd DWORD PTR [ecx],edx
100382cf:	dec    edx
100382d0:	test   edx,edx
100382d2:	jg     0x100382de
100382d4:	mov    ecx,DWORD PTR [ebx]
100382d6:	mov    eax,DWORD PTR [ecx]
100382d8:	mov    edx,DWORD PTR [eax+0x4]
100382db:	push   ebx
100382dc:	call   edx
100382de:	lea    eax,[esi-0x10]
100382e1:	mov    BYTE PTR [esp+0x50],0x0
100382e6:	lea    ecx,[eax+0xc]
100382e9:	or     edx,0xffffffff
100382ec:	lock xadd DWORD PTR [ecx],edx
100382f0:	dec    edx
100382f1:	test   edx,edx
100382f3:	jg     0x100382ff
100382f5:	mov    ecx,DWORD PTR [eax]
100382f7:	mov    edx,DWORD PTR [ecx]
100382f9:	push   eax
100382fa:	mov    eax,DWORD PTR [edx+0x4]
100382fd:	call   eax
100382ff:	mov    edx,DWORD PTR ds:0x10080a74
10038305:	mov    eax,DWORD PTR [edx+0xc]
10038308:	mov    ecx,0x10080a74
1003830d:	call   eax
1003830f:	add    eax,0x10
10038312:	mov    DWORD PTR [ebp+0x0],eax
10038315:	mov    ecx,0x1006cd08
1003831a:	test   ecx,0xffff0000
10038320:	mov    BYTE PTR [esp+0x50],0x5
10038325:	jne    0x100383f5
1003832b:	mov    edx,ecx
1003832d:	movzx  esi,dx
10038330:	push   esi
10038331:	call   0x1000201d
10038336:	add    esp,0x4
10038339:	cmp    eax,edi
1003833b:	je     0x100384c5
10038341:	push   esi
10038342:	push   eax
10038343:	push   ebp
10038344:	call   0x100021dc
10038349:	jmp    0x100384c5
1003834e:	add    edi,0xfffffff0
10038351:	mov    eax,edi
10038353:	call   0x10004dbe
10038358:	mov    esi,DWORD PTR [esp+0x58]
1003835c:	add    eax,0x10
1003835f:	test   ebp,ebp
10038361:	mov    DWORD PTR [esi],eax
10038363:	je     0x1003836c
10038365:	push   ebp
10038366:	call   DWORD PTR ds:0x10066070
1003836c:	mov    BYTE PTR [esp+0x50],0x2
10038371:	lea    ecx,[edi+0xc]
10038374:	or     edx,0xffffffff
10038377:	lock xadd DWORD PTR [ecx],edx
1003837b:	dec    edx
1003837c:	test   edx,edx
1003837e:	jg     0x1003838a
10038380:	mov    ecx,DWORD PTR [edi]
10038382:	mov    eax,DWORD PTR [ecx]
10038384:	mov    edx,DWORD PTR [eax+0x4]
10038387:	push   edi
10038388:	call   edx
1003838a:	add    ebx,0xfffffff0
1003838d:	mov    BYTE PTR [esp+0x50],0x1
10038392:	lea    eax,[ebx+0xc]
10038395:	or     ecx,0xffffffff
10038398:	lock xadd DWORD PTR [eax],ecx
1003839c:	dec    ecx
1003839d:	test   ecx,ecx
1003839f:	jg     0x100383ab
100383a1:	mov    ecx,DWORD PTR [ebx]
100383a3:	mov    edx,DWORD PTR [ecx]
100383a5:	mov    eax,DWORD PTR [edx+0x4]
100383a8:	push   ebx
100383a9:	call   eax
100383ab:	mov    BYTE PTR [esp+0x50],0x0
100383b0:	mov    eax,DWORD PTR [esp+0x14]
100383b4:	add    eax,0xfffffff0
100383b7:	lea    ecx,[eax+0xc]
100383ba:	or     edx,0xffffffff
100383bd:	lock xadd DWORD PTR [ecx],edx
100383c1:	dec    edx
100383c2:	test   edx,edx
100383c4:	jg     0x100383d0
100383c6:	mov    ecx,DWORD PTR [eax]
100383c8:	mov    edx,DWORD PTR [ecx]
100383ca:	push   eax
100383cb:	mov    eax,DWORD PTR [edx+0x4]
100383ce:	call   eax
100383d0:	mov    eax,DWORD PTR [esp+0x1c]
100383d4:	test   eax,eax
100383d6:	je     0x100383df
100383d8:	push   eax
100383d9:	call   DWORD PTR ds:0x10066018
100383df:	mov    eax,esi
100383e1:	mov    ecx,DWORD PTR [esp+0x48]
100383e5:	mov    DWORD PTR fs:0x0,ecx
100383ec:	pop    ecx
100383ed:	pop    edi
100383ee:	pop    esi
100383ef:	pop    ebp
100383f0:	pop    ebx
100383f1:	add    esp,0x40
100383f4:	ret    
100383f5:	call   DWORD PTR ds:0x1007efec
100383fb:	mov    edi,DWORD PTR ds:0x1006608c
10038401:	push   0x0
10038403:	push   0x0
10038405:	push   0xffffffff
10038407:	push   0x1006cd08
1003840c:	push   0x0
1003840e:	push   eax
1003840f:	call   edi
10038411:	mov    esi,eax
10038413:	sub    esi,0x1
10038416:	test   esi,esi
10038418:	jle    0x10038467
1003841a:	mov    eax,DWORD PTR [ebp+0x0]
1003841d:	mov    edx,DWORD PTR [eax-0x8]
10038420:	sub    eax,0x10
10038423:	mov    ecx,0x1
10038428:	sub    ecx,DWORD PTR [eax+0xc]
1003842b:	sub    edx,esi
1003842d:	or     ecx,edx
1003842f:	jge    0x1003843a
10038431:	mov    eax,esi
10038433:	mov    ecx,ebp
10038435:	call   0x10002262
1003843a:	mov    eax,DWORD PTR [ebp+0x0]
1003843d:	push   esi
1003843e:	push   eax
1003843f:	push   0xffffffff
10038441:	push   0x1006cd08
10038446:	push   0x0
10038448:	call   DWORD PTR ds:0x1007efec
1003844e:	push   eax
1003844f:	call   edi
10038451:	mov    eax,DWORD PTR [ebp+0x0]
10038454:	cmp    esi,DWORD PTR [eax-0x8]
10038457:	jg     0x10038485
10038459:	mov    DWORD PTR [eax-0xc],esi
1003845c:	mov    eax,DWORD PTR [ebp+0x0]
1003845f:	mov    WORD PTR [eax+esi*2],0x0
10038465:	jmp    0x100384c5
10038467:	mov    ecx,DWORD PTR [ebp+0x0]
1003846a:	cmp    DWORD PTR [ecx-0xc],0x0
1003846e:	mov    esi,DWORD PTR [ecx-0x10]
10038471:	lea    eax,[ecx-0x10]
10038474:	je     0x100384c5
10038476:	cmp    DWORD PTR [eax+0xc],0x0
1003847a:	lea    edx,[eax+0xc]
1003847d:	jge    0x100384a0
1003847f:	cmp    DWORD PTR [ecx-0x8],0x0
10038483:	jge    0x1003848f
10038485:	push   0x80070057
1003848a:	call   0x10001f45
1003848f:	mov    DWORD PTR [ecx-0xc],0x0
10038496:	mov    ecx,DWORD PTR [ebp+0x0]
10038499:	mov    WORD PTR [ecx],0x0
1003849e:	jmp    0x100384c5
100384a0:	or     ecx,0xffffffff
100384a3:	lock xadd DWORD PTR [edx],ecx
100384a7:	dec    ecx
100384a8:	test   ecx,ecx
100384aa:	jg     0x100384b6
100384ac:	mov    ecx,DWORD PTR [eax]
100384ae:	mov    edx,DWORD PTR [ecx]
100384b0:	push   eax
100384b1:	mov    eax,DWORD PTR [edx+0x4]
100384b4:	call   eax
100384b6:	mov    edx,DWORD PTR [esi]
100384b8:	mov    eax,DWORD PTR [edx+0xc]
100384bb:	mov    ecx,esi
100384bd:	call   eax
100384bf:	add    eax,0x10
100384c2:	mov    DWORD PTR [ebp+0x0],eax
100384c5:	mov    eax,DWORD PTR [esp+0x24]
100384c9:	test   eax,eax
100384cb:	je     0x100384d4
100384cd:	push   eax
100384ce:	call   DWORD PTR ds:0x10066018
100384d4:	mov    eax,ebp
100384d6:	mov    ecx,DWORD PTR [esp+0x48]
100384da:	mov    DWORD PTR fs:0x0,ecx
100384e1:	pop    ecx
100384e2:	pop    edi
100384e3:	pop    esi
100384e4:	pop    ebp
100384e5:	pop    ebx
100384e6:	add    esp,0x40
100384e9:	ret    
100384ea:	int3   
100384eb:	int3   
100384ec:	int3   
100384ed:	int3   
100384ee:	int3   
100384ef:	int3   
100384f0:	push   0xffffffff
100384f2:	push   0x1005f709
100384f7:	mov    eax,fs:0x0
100384fd:	push   eax
100384fe:	push   ecx
100384ff:	push   ebx
10038500:	mov    eax,ds:0x1007e030
10038505:	xor    eax,esp
10038507:	push   eax
10038508:	lea    eax,[esp+0xc]
1003850c:	mov    fs:0x0,eax
10038512:	mov    ebx,DWORD PTR [esp+0x20]
10038516:	mov    eax,DWORD PTR [esp+0x1c]
1003851a:	mov    DWORD PTR [esp+0x8],0x0
10038522:	mov    eax,DWORD PTR [eax]
10038524:	test   eax,eax
10038526:	mov    DWORD PTR [ebx],eax
10038528:	je     0x10038534
1003852a:	add    eax,0x8
1003852d:	push   eax
1003852e:	call   DWORD PTR ds:0x100660a4
10038534:	mov    ecx,DWORD PTR [esp+0x24]
10038538:	mov    DWORD PTR [esp+0x14],0x0
10038540:	push   ecx
10038541:	mov    DWORD PTR [esp+0xc],0x1
10038549:	call   0x1000250f
1003854e:	mov    eax,ebx
10038550:	mov    ecx,DWORD PTR [esp+0xc]
10038554:	mov    DWORD PTR fs:0x0,ecx
1003855b:	pop    ecx
1003855c:	pop    ebx
1003855d:	add    esp,0x10
10038560:	ret    0xc
10038563:	int3   
10038564:	int3   
10038565:	int3   
10038566:	int3   
10038567:	int3   
10038568:	int3   
10038569:	int3   
1003856a:	int3   
1003856b:	int3   
1003856c:	int3   
1003856d:	int3   
1003856e:	int3   
1003856f:	int3   
10038570:	push   0xffffffff
10038572:	push   0x1005f6c8
10038577:	mov    eax,fs:0x0
1003857d:	push   eax
1003857e:	sub    esp,0x14
10038581:	mov    eax,ds:0x1007e030
10038586:	xor    eax,esp
10038588:	push   eax
10038589:	lea    eax,[esp+0x18]
1003858d:	mov    fs:0x0,eax
10038593:	cmp    WORD PTR [esi],0x8
10038597:	jne    0x100385b6
10038599:	mov    eax,DWORD PTR [esi+0x8]
1003859c:	push   eax
1003859d:	mov    ecx,edi
1003859f:	call   0x10010e5c
100385a4:	mov    eax,edi
100385a6:	mov    ecx,DWORD PTR [esp+0x18]
100385aa:	mov    DWORD PTR fs:0x0,ecx
100385b1:	pop    ecx
100385b2:	add    esp,0x20
100385b5:	ret    
100385b6:	lea    ecx,[esp+0x4]
100385ba:	push   ecx
100385bb:	call   DWORD PTR ds:0x1006628c
100385c1:	lea    edx,[esp+0x4]
100385c5:	cmp    edx,esi
100385c7:	mov    DWORD PTR [esp+0x20],0x0
100385cf:	jne    0x100385d9
100385d1:	cmp    WORD PTR [esp+0x4],0x8
100385d7:	je     0x100385f3
100385d9:	push   0x8
100385db:	push   0x0
100385dd:	push   esi
100385de:	lea    eax,[esp+0x10]
100385e2:	push   eax
100385e3:	call   DWORD PTR ds:0x1006627c
100385e9:	test   eax,eax
100385eb:	jge    0x100385f3
100385ed:	push   eax
100385ee:	call   0x10050b90
100385f3:	mov    ecx,DWORD PTR [esp+0xc]
100385f7:	push   ecx
100385f8:	mov    ecx,edi
100385fa:	call   0x10010e5c
100385ff:	lea    edx,[esp+0x4]
10038603:	push   edx
10038604:	call   DWORD PTR ds:0x10066294
1003860a:	mov    eax,edi
1003860c:	mov    ecx,DWORD PTR [esp+0x18]
10038610:	mov    DWORD PTR fs:0x0,ecx
10038617:	pop    ecx
10038618:	add    esp,0x20
1003861b:	ret    
1003861c:	int3   
1003861d:	int3   
1003861e:	int3   
1003861f:	int3   
10038620:	sub    esp,0x8
10038623:	test   eax,eax
10038625:	mov    BYTE PTR [edi],0x0
10038628:	jle    0x1003877e
1003862e:	push   ebx
1003862f:	push   ebp
10038630:	push   esi
10038631:	xor    esi,esi
10038633:	add    eax,ecx
10038635:	mov    BYTE PTR [esp+0xf],0x0
1003863a:	mov    BYTE PTR [edi],0x0
1003863d:	mov    DWORD PTR [esp+0x10],eax
10038641:	mov    ebp,eax
10038643:	mov    al,BYTE PTR [ebp+0x0]
10038646:	test   al,al
10038648:	je     0x100386f4
1003864e:	movsx  edx,al
10038651:	push   edx
10038652:	call   0x10045dd1
10038657:	mov    bl,al
10038659:	movsx  eax,bl
1003865c:	push   eax
1003865d:	call   0x1004f356
10038662:	add    esp,0x8
10038665:	test   eax,eax
10038667:	je     0x1003866b
10038669:	mov    bl,0x30
1003866b:	shl    BYTE PTR [esi+edi*1],0x4
1003866f:	add    BYTE PTR [esp+0xf],0x1
10038674:	mov    cl,BYTE PTR [esi+edi*1]
10038677:	mov    al,bl
10038679:	sub    al,0x30
1003867b:	cmp    al,0x9
1003867d:	ja     0x10038686
1003867f:	or     al,cl
10038681:	mov    BYTE PTR [esi+edi*1],al
10038684:	jmp    0x10038698
10038686:	mov    dl,bl
10038688:	sub    dl,0x61
1003868b:	cmp    dl,0x5
1003868e:	ja     0x100386ca
10038690:	sub    bl,0x57
10038693:	or     bl,cl
10038695:	mov    BYTE PTR [esi+edi*1],bl
10038698:	cmp    BYTE PTR [esp+0xf],0x2
1003869d:	jne    0x100386c2
1003869f:	mov    al,BYTE PTR [esi+edi*1]
100386a2:	test   al,al
100386a4:	je     0x100386b6
100386a6:	movsx  eax,al
100386a9:	push   eax
100386aa:	call   0x1004f3d3
100386af:	add    esp,0x4
100386b2:	test   eax,eax
100386b4:	je     0x100386ca
100386b6:	add    esi,0x1
100386b9:	mov    BYTE PTR [esp+0xf],0x0
100386be:	mov    BYTE PTR [esi+edi*1],0x0
100386c2:	add    ebp,0x1
100386c5:	jmp    0x10038643
100386ca:	mov    ebp,DWORD PTR [esp+0x10]
100386ce:	xor    esi,esi
100386d0:	mov    bl,BYTE PTR [ebp+0x0]
100386d3:	test   bl,bl
100386d5:	je     0x100386f4
100386d7:	movsx  ecx,bl
100386da:	push   ecx
100386db:	call   0x1004f3d3
100386e0:	add    esp,0x4
100386e3:	test   eax,eax
100386e5:	je     0x100386f2
100386e7:	mov    BYTE PTR [esi+edi*1],bl
100386ea:	add    esi,0x1
100386ed:	add    ebp,0x1
100386f0:	jmp    0x100386d0
100386f2:	xor    esi,esi
100386f4:	cmp    DWORD PTR [esp+0x18],0x0
100386f9:	mov    BYTE PTR [esi+edi*1],0x0
100386fd:	je     0x10038722
100386ff:	test   esi,esi
10038701:	jle    0x10038722
10038703:	add    esi,0xffffffff
10038706:	shr    esi,1
10038708:	lea    eax,[edi+0x1]
1003870b:	add    esi,0x1
1003870e:	mov    edi,edi
10038710:	mov    cl,BYTE PTR [eax-0x1]
10038713:	mov    dl,BYTE PTR [eax]
10038715:	mov    BYTE PTR [eax-0x1],dl
10038718:	mov    BYTE PTR [eax],cl
1003871a:	add    eax,0x2
1003871d:	sub    esi,0x1
10038720:	jne    0x10038710
10038722:	or     ebx,0xffffffff
10038725:	or     ebp,0xffffffff
10038728:	xor    esi,esi
1003872a:	cmp    BYTE PTR [edi],0x0
1003872d:	je     0x1003877b
1003872f:	nop
10038730:	movsx  eax,BYTE PTR [esi+edi*1]
10038734:	push   eax
10038735:	call   0x1004f356
1003873a:	add    esp,0x4
1003873d:	test   eax,eax
1003873f:	jne    0x10038749
10038741:	test   ebp,ebp
10038743:	jge    0x10038747
10038745:	mov    ebp,esi
10038747:	mov    ebx,esi
10038749:	add    esi,0x1
1003874c:	cmp    BYTE PTR [esi+edi*1],0x0
10038750:	jne    0x10038730
10038752:	test   ebp,ebp
10038754:	jl     0x1003877b
10038756:	test   ebx,ebx
10038758:	jl     0x1003877b
1003875a:	cmp    ebp,ebx
1003875c:	mov    eax,ebp
1003875e:	jg     0x10038775
10038760:	mov    edx,edi
10038762:	sub    edx,ebp
10038764:	mov    cl,BYTE PTR [eax+edi*1]
10038767:	test   cl,cl
10038769:	je     0x10038775
1003876b:	mov    BYTE PTR [edx+eax*1],cl
1003876e:	add    eax,0x1
10038771:	cmp    eax,ebx
10038773:	jle    0x10038764
10038775:	sub    eax,ebp
10038777:	mov    BYTE PTR [eax+edi*1],0x0
1003877b:	pop    esi
1003877c:	pop    ebp
1003877d:	pop    ebx
1003877e:	mov    eax,edi
10038780:	add    esp,0x8
10038783:	ret    
10038784:	int3   
10038785:	int3   
10038786:	int3   
10038787:	int3   
10038788:	int3   
10038789:	int3   
1003878a:	int3   
1003878b:	int3   
1003878c:	int3   
1003878d:	int3   
1003878e:	int3   
1003878f:	int3   
10038790:	push   ebp
10038791:	mov    ebp,esp
10038793:	and    esp,0xfffffff8
10038796:	mov    eax,0x2f30
1003879b:	call   0x10049de0
100387a0:	mov    eax,ds:0x1007e030
100387a5:	xor    eax,esp
100387a7:	mov    DWORD PTR [esp+0x2f2c],eax
100387ae:	mov    eax,DWORD PTR [ebp+0x8]
100387b1:	push   esi
100387b2:	push   edi
100387b3:	xor    edi,edi
100387b5:	push   edi
100387b6:	push   edi
100387b7:	push   0x3
100387b9:	push   edi
100387ba:	push   0x3
100387bc:	push   edi
100387bd:	push   0x3b5b6202
100387c2:	push   0x54dca326
100387c7:	push   0x10073d8c
100387cc:	mov    DWORD PTR [esp+0x34],eax
100387d0:	mov    DWORD PTR [esp+0x38],ecx
100387d4:	mov    BYTE PTR [esp+0x2f],0x0
100387d9:	call   0x10004246
100387de:	add    esp,0x8
100387e1:	push   eax
100387e2:	call   0x10004246
100387e7:	push   eax
100387e8:	push   0x12
100387ea:	push   0x10073dcc
100387ef:	call   0x10004417
100387f4:	add    esp,0x14
100387f7:	push   eax
100387f8:	call   DWORD PTR ds:0x100660c0
100387fe:	mov    esi,eax
10038800:	cmp    esi,0xffffffff
10038803:	jne    0x1003881b
10038805:	xor    al,al
10038807:	pop    edi
10038808:	pop    esi
10038809:	mov    ecx,DWORD PTR [esp+0x2f2c]
10038810:	xor    ecx,esp
10038812:	call   0x10042e97
10038817:	mov    esp,ebp
10038819:	pop    ebp
1003881a:	ret    
1003881b:	xor    eax,eax
1003881d:	push   0x2710
10038822:	lea    edx,[esp+0x824]
10038829:	push   edi
1003882a:	mov    DWORD PTR [esp+0x24],eax
1003882e:	mov    DWORD PTR [esp+0x28],eax
10038832:	push   edx
10038833:	mov    DWORD PTR [esp+0x18],edi
10038837:	mov    DWORD PTR [esp+0x30],eax
1003883b:	mov    DWORD PTR [esp+0x28],edi
1003883f:	mov    DWORD PTR [esp+0x2c],edi
10038843:	call   0x10045c00
10038848:	add    esp,0xc
1003884b:	push   edi
1003884c:	lea    eax,[esp+0x10]
10038850:	push   eax
10038851:	push   0x2710
10038856:	lea    ecx,[esp+0x82c]
1003885d:	push   ecx
1003885e:	push   0xc
10038860:	lea    edx,[esp+0x30]
10038864:	push   edx
10038865:	push   0x2d1400
1003886a:	push   esi
1003886b:	call   DWORD PTR ds:0x10066260
10038871:	test   eax,eax
10038873:	je     0x100388ea
10038875:	mov    eax,DWORD PTR [esp+0x830]
1003887c:	push   edi
1003887d:	lea    edi,[esp+0x43c]
10038884:	lea    ecx,[esp+0x824]
1003888b:	call   0x10038620
10038890:	mov    eax,DWORD PTR [esp+0x83c]
10038897:	push   0x1
10038899:	lea    edi,[esp+0x58]
1003889d:	lea    ecx,[esp+0x828]
100388a4:	call   0x10038620
100388a9:	mov    eax,edi
100388ab:	push   eax
100388ac:	call   0x10043010
100388b1:	add    esp,0xc
100388b4:	push   eax
100388b5:	mov    ecx,edi
100388b7:	push   ecx
100388b8:	mov    ecx,DWORD PTR [esp+0x18]
100388bc:	call   0x1000133b
100388c1:	lea    edx,[esp+0x438]
100388c8:	push   edx
100388c9:	call   0x10043010
100388ce:	mov    ecx,DWORD PTR [esp+0x18]
100388d2:	add    esp,0x4
100388d5:	push   eax
100388d6:	lea    eax,[esp+0x43c]
100388dd:	push   eax
100388de:	call   0x1000133b
100388e3:	mov    BYTE PTR [esp+0xb],0x1
100388e8:	xor    edi,edi
100388ea:	push   edi
100388eb:	lea    ecx,[esp+0x1c]
100388ef:	push   ecx
100388f0:	push   0x28
100388f2:	lea    edx,[esp+0x34]
100388f6:	push   edx
100388f7:	xor    eax,eax
100388f9:	push   edi
100388fa:	push   edi
100388fb:	push   0x700a0
10038900:	push   esi
10038901:	mov    DWORD PTR [esp+0x48],edi
10038905:	mov    DWORD PTR [esp+0x4c],eax
10038909:	mov    DWORD PTR [esp+0x50],eax
1003890d:	mov    DWORD PTR [esp+0x54],eax
10038911:	mov    DWORD PTR [esp+0x58],eax
10038915:	mov    DWORD PTR [esp+0x5c],eax
10038919:	mov    DWORD PTR [esp+0x60],eax
1003891d:	mov    DWORD PTR [esp+0x64],eax
10038921:	mov    DWORD PTR [esp+0x68],eax
10038925:	mov    DWORD PTR [esp+0x6c],eax
10038929:	mov    DWORD PTR [ebx],edi
1003892b:	mov    DWORD PTR [ebx+0x4],edi
1003892e:	call   DWORD PTR ds:0x10066260
10038934:	test   eax,eax
10038936:	je     0x10038945
10038938:	mov    eax,DWORD PTR [esp+0x40]
1003893c:	mov    ecx,DWORD PTR [esp+0x44]
10038940:	mov    DWORD PTR [ebx],eax
10038942:	mov    DWORD PTR [ebx+0x4],ecx
10038945:	push   esi
10038946:	call   DWORD PTR ds:0x10066070
1003894c:	mov    ecx,DWORD PTR [esp+0x2f34]
10038953:	mov    al,BYTE PTR [esp+0xb]
10038957:	pop    edi
10038958:	pop    esi
10038959:	xor    ecx,esp
1003895b:	call   0x10042e97
10038960:	mov    esp,ebp
10038962:	pop    ebp
10038963:	ret    
10038964:	int3   
10038965:	int3   
10038966:	int3   
10038967:	int3   
10038968:	int3   
10038969:	int3   
1003896a:	int3   
1003896b:	int3   
1003896c:	int3   
1003896d:	int3   
1003896e:	int3   
1003896f:	int3   
10038970:	push   ebp
10038971:	lea    ebp,[esp-0x1954]
10038978:	mov    eax,0x1954
1003897d:	call   0x10049de0
10038982:	push   0xffffffff
10038984:	push   0x100612e0
10038989:	mov    eax,fs:0x0
1003898f:	push   eax
10038990:	sub    esp,0x38
10038993:	mov    eax,ds:0x1007e030
10038998:	xor    eax,ebp
1003899a:	mov    DWORD PTR [ebp+0x1950],eax
100389a0:	push   ebx
100389a1:	push   esi
100389a2:	push   edi
100389a3:	push   eax
100389a4:	lea    eax,[ebp-0xc]
100389a7:	mov    fs:0x0,eax
100389ad:	mov    eax,DWORD PTR [ebp+0x195c]
100389b3:	lea    ecx,[ebp-0x3c]
100389b6:	push   ecx
100389b7:	lea    edx,[ebp+0x0]
100389ba:	push   edx
100389bb:	mov    DWORD PTR [ebp-0x10],eax
100389be:	mov    DWORD PTR [ebp-0x3c],0x1950
100389c5:	call   0x10056ace
100389ca:	lea    edi,[ebp+0x0]
100389cd:	call   DWORD PTR ds:0x1007efec
100389d3:	mov    DWORD PTR [ebp-0x38],eax
100389d6:	mov    eax,ds:0x10080a74
100389db:	mov    edx,DWORD PTR [eax+0xc]
100389de:	mov    ecx,0x10080a74
100389e3:	call   edx
100389e5:	add    eax,0x10
100389e8:	mov    DWORD PTR [ebp-0x14],eax
100389eb:	xor    ebx,ebx
100389ed:	mov    DWORD PTR [ebp-0x4],ebx
100389f0:	movzx  eax,BYTE PTR [edi+0x199]
100389f7:	movzx  ecx,BYTE PTR [edi+0x198]
100389fe:	movzx  edx,BYTE PTR [edi+0x197]
10038a05:	push   eax
10038a06:	movzx  eax,BYTE PTR [edi+0x196]
10038a0d:	push   ecx
10038a0e:	movzx  ecx,BYTE PTR [edi+0x195]
10038a15:	push   edx
10038a16:	movzx  edx,BYTE PTR [edi+0x194]
10038a1d:	push   eax
10038a1e:	push   ecx
10038a1f:	push   edx
10038a20:	push   0x4c52cbd4
10038a25:	push   0x264270ba
10038a2a:	push   0x6e68e6f
10038a2f:	push   0x7d8a481c
10038a34:	push   0x10073df4
10038a39:	call   0x10004246
10038a3e:	add    esp,0x8
10038a41:	push   eax
10038a42:	call   0x10004246
10038a47:	add    esp,0x8
10038a4a:	push   eax
10038a4b:	call   0x10004246
10038a50:	add    esp,0x8
10038a53:	push   eax
10038a54:	call   0x10004246
10038a59:	push   eax
10038a5a:	push   0x18
10038a5c:	push   0x10073e20
10038a61:	call   0x10004417
10038a66:	add    esp,0x14
10038a69:	push   eax
10038a6a:	lea    eax,[ebp-0x14]
10038a6d:	call   0x10006445
10038a72:	mov    eax,DWORD PTR [ebp-0x14]
10038a75:	add    esp,0x1c
10038a78:	cmp    DWORD PTR [eax-0x4],0x1
10038a7c:	jle    0x10038a8e
10038a7e:	mov    eax,DWORD PTR [eax-0xc]
10038a81:	push   eax
10038a82:	lea    ecx,[ebp-0x14]
10038a85:	push   ecx
10038a86:	call   0x100022ab
10038a8b:	mov    eax,DWORD PTR [ebp-0x14]
10038a8e:	cmp    eax,ebx
10038a90:	je     0x10038ada
10038a92:	push   eax
10038a93:	call   DWORD PTR ds:0x100660c4
10038a99:	add    eax,0x1
10038a9c:	cmp    eax,0x3fffffff
10038aa1:	jg     0x10038ad6
10038aa3:	lea    ebx,[eax+eax*1]
10038aa6:	mov    eax,ebx
10038aa8:	call   0x1004b6f0
10038aad:	mov    esi,esp
10038aaf:	test   esi,esi
10038ab1:	je     0x10038ad6
10038ab3:	mov    edx,DWORD PTR [ebp-0x14]
10038ab6:	mov    eax,DWORD PTR [ebp-0x38]
10038ab9:	push   0x0
10038abb:	push   0x0
10038abd:	push   ebx
10038abe:	push   esi
10038abf:	push   0xffffffff
10038ac1:	push   edx
10038ac2:	push   0x0
10038ac4:	push   eax
10038ac5:	mov    BYTE PTR [esi],0x0
10038ac8:	call   DWORD PTR ds:0x100660b8
10038ace:	neg    eax
10038ad0:	sbb    eax,eax
10038ad2:	and    eax,esi
10038ad4:	jmp    0x10038ad8
10038ad6:	xor    eax,eax
10038ad8:	mov    ebx,eax
10038ada:	push   ebx
10038adb:	mov    DWORD PTR [ebp-0x18],0xf
10038ae2:	mov    DWORD PTR [ebp-0x1c],0x0
10038ae9:	mov    BYTE PTR [ebp-0x2c],0x0
10038aed:	call   0x10043010
10038af2:	mov    edx,DWORD PTR [ebp-0x2c]
10038af5:	mov    esi,eax
10038af7:	mov    eax,DWORD PTR [ebp-0x18]
10038afa:	add    esp,0x4
10038afd:	cmp    eax,0x10
10038b00:	mov    ecx,edx
10038b02:	jae    0x10038b07
10038b04:	lea    ecx,[ebp-0x2c]
10038b07:	cmp    ebx,ecx
10038b09:	jb     0x10038b3a
10038b0b:	cmp    eax,0x10
10038b0e:	mov    ecx,edx
10038b10:	jae    0x10038b15
10038b12:	lea    ecx,[ebp-0x2c]
10038b15:	mov    edx,DWORD PTR [ebp-0x1c]
10038b18:	add    ecx,edx
10038b1a:	cmp    ecx,ebx
10038b1c:	jbe    0x10038b3a
10038b1e:	cmp    eax,0x10
10038b21:	mov    eax,DWORD PTR [ebp-0x2c]
10038b24:	jae    0x10038b29
10038b26:	lea    eax,[ebp-0x2c]
10038b29:	push   esi
10038b2a:	sub    ebx,eax
10038b2c:	lea    eax,[ebp-0x30]
10038b2f:	push   ebx
10038b30:	push   eax
10038b31:	mov    ecx,eax
10038b33:	call   0x10001241
10038b38:	jmp    0x10038b89
10038b3a:	cmp    esi,0xfffffffe
10038b3d:	jbe    0x10038b47
10038b3f:	call   0x100571a0
10038b44:	mov    eax,DWORD PTR [ebp-0x18]
10038b47:	cmp    eax,esi
10038b49:	jae    0x10038b9b
10038b4b:	mov    ecx,DWORD PTR [ebp-0x1c]
10038b4e:	push   ecx
10038b4f:	push   esi
10038b50:	lea    ecx,[ebp-0x30]
10038b53:	call   0x10001500
10038b58:	mov    eax,DWORD PTR [ebp-0x18]
10038b5b:	test   esi,esi
10038b5d:	jbe    0x10038b89
10038b5f:	cmp    eax,0x10
10038b62:	mov    ecx,DWORD PTR [ebp-0x2c]
10038b65:	jae    0x10038b6a
10038b67:	lea    ecx,[ebp-0x2c]
10038b6a:	push   esi
10038b6b:	push   ebx
10038b6c:	push   eax
10038b6d:	push   ecx
10038b6e:	call   0x100433c5
10038b73:	mov    eax,DWORD PTR [ebp-0x2c]
10038b76:	add    esp,0x10
10038b79:	cmp    DWORD PTR [ebp-0x18],0x10
10038b7d:	mov    DWORD PTR [ebp-0x1c],esi
10038b80:	jae    0x10038b85
10038b82:	lea    eax,[ebp-0x2c]
10038b85:	mov    BYTE PTR [eax+esi*1],0x0
10038b89:	mov    edx,DWORD PTR [ebp-0x10]
10038b8c:	mov    BYTE PTR [ebp-0x4],0x1
10038b90:	mov    ebx,DWORD PTR [edx+0x4]
10038b93:	test   ebx,ebx
10038b95:	jne    0x10038bb2
10038b97:	xor    esi,esi
10038b99:	jmp    0x10038bcc
10038b9b:	test   esi,esi
10038b9d:	jne    0x10038b5d
10038b9f:	cmp    eax,0x10
10038ba2:	mov    eax,DWORD PTR [ebp-0x2c]
10038ba5:	mov    DWORD PTR [ebp-0x1c],esi
10038ba8:	jae    0x10038bad
10038baa:	lea    eax,[ebp-0x2c]
10038bad:	mov    BYTE PTR [eax],0x0
10038bb0:	jmp    0x10038b89
10038bb2:	mov    eax,edx
10038bb4:	mov    ecx,DWORD PTR [eax+0x8]
10038bb7:	sub    ecx,ebx
10038bb9:	mov    eax,0x92492493
10038bbe:	imul   ecx
10038bc0:	add    edx,ecx
10038bc2:	sar    edx,0x4
10038bc5:	mov    esi,edx
10038bc7:	shr    esi,0x1f
10038bca:	add    esi,edx
10038bcc:	test   ebx,ebx
10038bce:	je     0x10038c18
10038bd0:	mov    ecx,DWORD PTR [ebp-0x10]
10038bd3:	mov    ecx,DWORD PTR [ecx+0xc]
10038bd6:	sub    ecx,ebx
10038bd8:	mov    eax,0x92492493
10038bdd:	imul   ecx
10038bdf:	add    edx,ecx
10038be1:	sar    edx,0x4
10038be4:	mov    eax,edx
10038be6:	shr    eax,0x1f
10038be9:	add    eax,edx
10038beb:	cmp    esi,eax
10038bed:	jae    0x10038c18
10038bef:	mov    ebx,DWORD PTR [ebp-0x10]
10038bf2:	mov    esi,DWORD PTR [ebx+0x8]
10038bf5:	mov    BYTE PTR [ebp-0x34],0x0
10038bf9:	mov    edx,DWORD PTR [ebp-0x34]
10038bfc:	mov    eax,DWORD PTR [ebp-0x34]
10038bff:	push   edx
10038c00:	push   eax
10038c01:	lea    ecx,[ebp-0x30]
10038c04:	push   ecx
10038c05:	push   0x1
10038c07:	push   esi
10038c08:	call   0x1000fed0
10038c0d:	add    esp,0x14
10038c10:	add    esi,0x1c
10038c13:	mov    DWORD PTR [ebx+0x8],esi
10038c16:	jmp    0x10038c39
10038c18:	mov    eax,DWORD PTR [ebp-0x10]
10038c1b:	mov    esi,DWORD PTR [eax+0x8]
10038c1e:	cmp    ebx,esi
10038c20:	jbe    0x10038c2a
10038c22:	call   0x100433b0
10038c27:	mov    eax,DWORD PTR [ebp-0x10]
10038c2a:	push   esi
10038c2b:	push   eax
10038c2c:	lea    edx,[ebp-0x30]
10038c2f:	push   edx
10038c30:	lea    ecx,[ebp-0x44]
10038c33:	push   ecx
10038c34:	call   0x1000fb35
10038c39:	cmp    DWORD PTR [ebp-0x18],0x10
10038c3d:	jb     0x10038c4b
10038c3f:	mov    edx,DWORD PTR [ebp-0x2c]
10038c42:	push   edx
10038c43:	call   0x10042e92
10038c48:	add    esp,0x4
10038c4b:	mov    edi,DWORD PTR [edi]
10038c4d:	mov    DWORD PTR [ebp-0x4],0xffffffff
10038c54:	mov    eax,DWORD PTR [ebp-0x14]
10038c57:	add    eax,0xfffffff0
10038c5a:	mov    DWORD PTR [ebp-0x18],0xf
10038c61:	mov    DWORD PTR [ebp-0x1c],0x0
10038c68:	mov    BYTE PTR [ebp-0x2c],0x0
10038c6c:	lea    ecx,[eax+0xc]
10038c6f:	or     edx,0xffffffff
10038c72:	lock xadd DWORD PTR [ecx],edx
10038c76:	dec    edx
10038c77:	test   edx,edx
10038c79:	jg     0x10038c85
10038c7b:	mov    ecx,DWORD PTR [eax]
10038c7d:	mov    edx,DWORD PTR [ecx]
10038c7f:	push   eax
10038c80:	mov    eax,DWORD PTR [edx+0x4]
10038c83:	call   eax
10038c85:	test   edi,edi
10038c87:	jne    0x100389cd
10038c8d:	lea    esp,[ebp-0x54]
10038c90:	mov    ecx,DWORD PTR [ebp-0xc]
10038c93:	mov    DWORD PTR fs:0x0,ecx
10038c9a:	pop    ecx
10038c9b:	pop    edi
10038c9c:	pop    esi
10038c9d:	pop    ebx
10038c9e:	mov    ecx,DWORD PTR [ebp+0x1950]
10038ca4:	xor    ecx,ebp
10038ca6:	call   0x10042e97
10038cab:	add    ebp,0x1954
10038cb1:	mov    esp,ebp
10038cb3:	pop    ebp
10038cb4:	ret    
10038cb5:	int3   
10038cb6:	int3   
10038cb7:	int3   
10038cb8:	int3   
10038cb9:	int3   
10038cba:	int3   
10038cbb:	int3   
10038cbc:	int3   
10038cbd:	int3   
10038cbe:	int3   
10038cbf:	int3   
10038cc0:	push   ebp
10038cc1:	mov    ebp,esp
10038cc3:	and    esp,0xfffffff8
10038cc6:	push   0xffffffff
10038cc8:	push   0x100612b0
10038ccd:	mov    eax,fs:0x0
10038cd3:	push   eax
10038cd4:	sub    esp,0x50
10038cd7:	push   ebx
10038cd8:	push   esi
10038cd9:	push   edi
10038cda:	mov    eax,ds:0x1007e030
10038cdf:	xor    eax,esp
10038ce1:	push   eax
10038ce2:	lea    eax,[esp+0x60]
10038ce6:	mov    fs:0x0,eax
10038cec:	xor    ebx,ebx
10038cee:	mov    DWORD PTR [esp+0x38],ebx
10038cf2:	mov    DWORD PTR [esp+0x30],ebx
10038cf6:	push   ebx
10038cf7:	push   ebx
10038cf8:	mov    DWORD PTR [esp+0x70],ebx
10038cfc:	call   DWORD PTR ds:0x10066440
10038d02:	test   eax,eax
10038d04:	jl     0x10038e07
10038d0a:	lea    eax,[esp+0x18]
10038d0e:	push   eax
10038d0f:	push   0x1006b6a8
10038d14:	push   0x1
10038d16:	push   ebx
10038d17:	push   0x1006b778
10038d1c:	mov    DWORD PTR [esp+0x2c],ebx
10038d20:	call   DWORD PTR ds:0x1006643c
10038d26:	cmp    eax,ebx
10038d28:	jl     0x10038e01
10038d2e:	push   0x3669c8d8
10038d33:	push   0x10073e54
10038d38:	mov    DWORD PTR [esp+0x1c],ebx
10038d3c:	call   0x10004246
10038d41:	push   eax
10038d42:	push   0xa
10038d44:	push   0x10073e90
10038d49:	call   0x10004417
10038d4e:	add    esp,0x14
10038d51:	push   eax
10038d52:	lea    edi,[esp+0x2c]
10038d56:	call   0x100024bf
10038d5b:	mov    BYTE PTR [esp+0x68],0x1
10038d60:	mov    eax,DWORD PTR [eax]
10038d62:	cmp    eax,ebx
10038d64:	je     0x10038d6a
10038d66:	mov    ecx,DWORD PTR [eax]
10038d68:	jmp    0x10038d6c
10038d6a:	xor    ecx,ecx
10038d6c:	mov    eax,DWORD PTR [esp+0x18]
10038d70:	mov    edx,DWORD PTR [eax]
10038d72:	lea    esi,[esp+0x14]
10038d76:	push   esi
10038d77:	push   ebx
10038d78:	push   ebx
10038d79:	push   ebx
10038d7a:	push   ebx
10038d7b:	push   ebx
10038d7c:	push   ebx
10038d7d:	push   ecx
10038d7e:	push   eax
10038d7f:	mov    eax,DWORD PTR [edx+0xc]
10038d82:	call   eax
10038d84:	mov    edi,eax
10038d86:	mov    BYTE PTR [esp+0x68],bl
10038d8a:	mov    eax,DWORD PTR [esp+0x28]
10038d8e:	cmp    eax,ebx
10038d90:	je     0x10038dcc
10038d92:	mov    esi,eax
10038d94:	add    eax,0x8
10038d97:	push   eax
10038d98:	call   DWORD PTR ds:0x100660ac
10038d9e:	cmp    eax,ebx
10038da0:	jne    0x10038dcc
10038da2:	cmp    esi,ebx
10038da4:	je     0x10038dcc
10038da6:	mov    eax,DWORD PTR [esi]
10038da8:	cmp    eax,ebx
10038daa:	je     0x10038db3
10038dac:	push   eax
10038dad:	call   DWORD PTR ds:0x100662b4
10038db3:	mov    eax,DWORD PTR [esi+0x4]
10038db6:	cmp    eax,ebx
10038db8:	je     0x10038dc3
10038dba:	push   eax
10038dbb:	call   0x100433c0
10038dc0:	add    esp,0x4
10038dc3:	push   esi
10038dc4:	call   0x10042e92
10038dc9:	add    esp,0x4
10038dcc:	cmp    edi,ebx
10038dce:	jl     0x10038df5
10038dd0:	mov    eax,DWORD PTR [esp+0x14]
10038dd4:	push   ebx
10038dd5:	push   ebx
10038dd6:	push   0x3
10038dd8:	push   0x3
10038dda:	push   ebx
10038ddb:	push   ebx
10038ddc:	push   0xa
10038dde:	push   eax
10038ddf:	call   DWORD PTR ds:0x10066444
10038de5:	cmp    eax,ebx
10038de7:	jge    0x10038e1f
10038de9:	mov    eax,DWORD PTR [esp+0x14]
10038ded:	mov    ecx,DWORD PTR [eax]
10038def:	mov    edx,DWORD PTR [ecx+0x8]
10038df2:	push   eax
10038df3:	call   edx
10038df5:	mov    eax,DWORD PTR [esp+0x18]
10038df9:	mov    ecx,DWORD PTR [eax]
10038dfb:	mov    edx,DWORD PTR [ecx+0x8]
10038dfe:	push   eax
10038dff:	call   edx
10038e01:	call   DWORD PTR ds:0x10066424
10038e07:	mov    eax,DWORD PTR [ebp+0x8]
10038e0a:	mov    DWORD PTR [eax],ebx
10038e0c:	mov    ecx,DWORD PTR [esp+0x60]
10038e10:	mov    DWORD PTR fs:0x0,ecx
10038e17:	pop    ecx
10038e18:	pop    edi
10038e19:	pop    esi
10038e1a:	pop    ebx
10038e1b:	mov    esp,ebp
10038e1d:	pop    ebp
10038e1e:	ret    
10038e1f:	push   0x10073ea8
10038e24:	push   0xe
10038e26:	push   0x10073ed8
10038e2b:	mov    DWORD PTR [esp+0x28],ebx
10038e2f:	call   0x10004258
10038e34:	add    esp,0xc
10038e37:	push   eax
10038e38:	lea    edi,[esp+0x38]
10038e3c:	call   0x10002467
10038e41:	mov    ecx,DWORD PTR [ebp+0xc]
10038e44:	push   ecx
10038e45:	lea    edx,[esp+0x2c]
10038e49:	push   edx
10038e4a:	push   eax
10038e4b:	mov    BYTE PTR [esp+0x74],0x2
10038e50:	call   0x100384f0
10038e55:	mov    esi,eax
10038e57:	push   0x10073ee8
10038e5c:	push   0x3
10038e5e:	push   0x10073f14
10038e63:	mov    BYTE PTR [esp+0x74],0x3
10038e68:	call   0x10004258
10038e6d:	add    esp,0xc
10038e70:	push   eax
10038e71:	lea    edi,[esp+0x28]
10038e75:	call   0x10002467
10038e7a:	mov    BYTE PTR [esp+0x68],0x4
10038e7f:	mov    ecx,DWORD PTR [esi]
10038e81:	cmp    ecx,ebx
10038e83:	je     0x10038e89
10038e85:	mov    ecx,DWORD PTR [ecx]
10038e87:	jmp    0x10038e8b
10038e89:	xor    ecx,ecx
10038e8b:	mov    eax,DWORD PTR [eax]
10038e8d:	cmp    eax,ebx
10038e8f:	je     0x10038e95
10038e91:	mov    edx,DWORD PTR [eax]
10038e93:	jmp    0x10038e97
10038e95:	xor    edx,edx
10038e97:	mov    eax,DWORD PTR [esp+0x14]
10038e9b:	mov    esi,DWORD PTR [eax]
10038e9d:	lea    edi,[esp+0x1c]
10038ea1:	push   edi
10038ea2:	push   ebx
10038ea3:	push   0x30
10038ea5:	push   ecx
10038ea6:	push   edx
10038ea7:	push   eax
10038ea8:	mov    eax,DWORD PTR [esi+0x50]
10038eab:	call   eax
10038ead:	mov    edi,DWORD PTR ds:0x100660ac
10038eb3:	mov    DWORD PTR [esp+0x38],eax
10038eb7:	mov    eax,DWORD PTR [esp+0x24]
10038ebb:	cmp    eax,ebx
10038ebd:	je     0x10038ef9
10038ebf:	mov    esi,eax
10038ec1:	add    eax,0x8
10038ec4:	push   eax
10038ec5:	call   edi
10038ec7:	cmp    eax,ebx
10038ec9:	jne    0x10038ef5
10038ecb:	cmp    esi,ebx
10038ecd:	je     0x10038ef5
10038ecf:	mov    eax,DWORD PTR [esi]
10038ed1:	cmp    eax,ebx
10038ed3:	je     0x10038edc
10038ed5:	push   eax
10038ed6:	call   DWORD PTR ds:0x100662b4
10038edc:	mov    eax,DWORD PTR [esi+0x4]
10038edf:	cmp    eax,ebx
10038ee1:	je     0x10038eec
10038ee3:	push   eax
10038ee4:	call   0x100433c0
10038ee9:	add    esp,0x4
10038eec:	push   esi
10038eed:	call   0x10042e92
10038ef2:	add    esp,0x4
10038ef5:	mov    DWORD PTR [esp+0x24],ebx
10038ef9:	mov    esi,DWORD PTR [esp+0x28]
10038efd:	cmp    esi,ebx
10038eff:	je     0x10038f39
10038f01:	lea    ecx,[esi+0x8]
10038f04:	push   ecx
10038f05:	call   edi
10038f07:	cmp    eax,ebx
10038f09:	jne    0x10038f35
10038f0b:	cmp    esi,ebx
10038f0d:	je     0x10038f35
10038f0f:	mov    eax,DWORD PTR [esi]
10038f11:	cmp    eax,ebx
10038f13:	je     0x10038f1c
10038f15:	push   eax
10038f16:	call   DWORD PTR ds:0x100662b4
10038f1c:	mov    eax,DWORD PTR [esi+0x4]
10038f1f:	cmp    eax,ebx
10038f21:	je     0x10038f2c
10038f23:	push   eax
10038f24:	call   0x100433c0
10038f29:	add    esp,0x4
10038f2c:	push   esi
10038f2d:	call   0x10042e92
10038f32:	add    esp,0x4
10038f35:	mov    DWORD PTR [esp+0x28],ebx
10038f39:	mov    BYTE PTR [esp+0x68],bl
10038f3d:	mov    esi,DWORD PTR [esp+0x34]
10038f41:	cmp    esi,ebx
10038f43:	je     0x10038f79
10038f45:	lea    edx,[esi+0x8]
10038f48:	push   edx
10038f49:	call   edi
10038f4b:	cmp    eax,ebx
10038f4d:	jne    0x10038f79
10038f4f:	cmp    esi,ebx
10038f51:	je     0x10038f79
10038f53:	mov    eax,DWORD PTR [esi]
10038f55:	cmp    eax,ebx
10038f57:	je     0x10038f60
10038f59:	push   eax
10038f5a:	call   DWORD PTR ds:0x100662b4
10038f60:	mov    eax,DWORD PTR [esi+0x4]
10038f63:	cmp    eax,ebx
10038f65:	je     0x10038f70
10038f67:	push   eax
10038f68:	call   0x100433c0
10038f6d:	add    esp,0x4
10038f70:	push   esi
10038f71:	call   0x10042e92
10038f76:	add    esp,0x4
10038f79:	cmp    DWORD PTR [esp+0x38],ebx
10038f7d:	jl     0x10038de9
10038f83:	mov    eax,DWORD PTR [esp+0x1c]
10038f87:	cmp    eax,ebx
10038f89:	mov    DWORD PTR [esp+0x2c],ebx
10038f8d:	je     0x10039041
10038f93:	mov    ecx,DWORD PTR [eax]
10038f95:	lea    edx,[esp+0x2c]
10038f99:	push   edx
10038f9a:	lea    edx,[esp+0x24]
10038f9e:	push   edx
10038f9f:	push   0x1
10038fa1:	push   0xffffffff
10038fa3:	push   eax
10038fa4:	mov    eax,DWORD PTR [ecx+0x10]
10038fa7:	call   eax
10038fa9:	cmp    DWORD PTR [esp+0x2c],ebx
10038fad:	je     0x10039041
10038fb3:	mov    esi,DWORD PTR [esp+0x20]
10038fb7:	mov    eax,DWORD PTR [ebp+0x10]
10038fba:	mov    edi,DWORD PTR [esi]
10038fbc:	push   ebx
10038fbd:	push   ebx
10038fbe:	lea    ecx,[esp+0x44]
10038fc2:	push   ecx
10038fc3:	push   ebx
10038fc4:	call   0x1000259f
10038fc9:	mov    edx,DWORD PTR [edi+0x10]
10038fcc:	push   eax
10038fcd:	push   esi
10038fce:	call   edx
10038fd0:	cmp    eax,ebx
10038fd2:	jl     0x10038fdc
10038fd4:	cmp    WORD PTR [esp+0x3c],0x8
10038fda:	je     0x10038ffd
10038fdc:	lea    eax,[esp+0x3c]
10038fe0:	push   eax
10038fe1:	call   DWORD PTR ds:0x10066294
10038fe7:	mov    eax,DWORD PTR [esp+0x20]
10038feb:	mov    ecx,DWORD PTR [eax]
10038fed:	mov    edx,DWORD PTR [ecx+0x8]
10038ff0:	push   eax
10038ff1:	call   edx
10038ff3:	mov    eax,DWORD PTR [esp+0x1c]
10038ff7:	cmp    eax,ebx
10038ff9:	jne    0x10038f93
10038ffb:	jmp    0x10039041
10038ffd:	lea    eax,[esp+0x4c]
10039001:	push   eax
10039002:	call   DWORD PTR ds:0x1006628c
10039008:	lea    ecx,[esp+0x3c]
1003900c:	push   ecx
1003900d:	lea    edx,[esp+0x50]
10039011:	push   edx
10039012:	call   DWORD PTR ds:0x10066280
10039018:	cmp    eax,ebx
1003901a:	jge    0x10039022
1003901c:	push   eax
1003901d:	call   0x10050b90
10039022:	lea    esi,[esp+0x4c]
10039026:	lea    edi,[esp+0x30]
1003902a:	mov    BYTE PTR [esp+0x68],0x5
1003902f:	call   0x10038570
10039034:	mov    eax,esi
10039036:	push   eax
10039037:	mov    BYTE PTR [esp+0x6c],bl
1003903b:	call   DWORD PTR ds:0x10066294
10039041:	mov    eax,DWORD PTR [esp+0x14]
10039045:	mov    ecx,DWORD PTR [eax]
10039047:	mov    edx,DWORD PTR [ecx+0x8]
1003904a:	push   eax
1003904b:	call   edx
1003904d:	mov    eax,DWORD PTR [esp+0x18]
10039051:	mov    ecx,DWORD PTR [eax]
10039053:	mov    edx,DWORD PTR [ecx+0x8]
10039056:	push   eax
10039057:	call   edx
10039059:	mov    eax,DWORD PTR [esp+0x1c]
1003905d:	mov    ecx,DWORD PTR [eax]
1003905f:	mov    edx,DWORD PTR [ecx+0x8]
10039062:	push   eax
10039063:	call   edx
10039065:	mov    eax,DWORD PTR [esp+0x20]
10039069:	mov    ecx,DWORD PTR [eax]
1003906b:	mov    edx,DWORD PTR [ecx+0x8]
1003906e:	push   eax
1003906f:	call   edx
10039071:	call   DWORD PTR ds:0x10066424
10039077:	mov    edi,DWORD PTR [esp+0x30]
1003907b:	cmp    edi,ebx
1003907d:	mov    eax,DWORD PTR [ebp+0x8]
10039080:	mov    DWORD PTR [eax],edi
10039082:	je     0x100390bf
10039084:	lea    esi,[edi+0x8]
10039087:	push   esi
10039088:	call   DWORD PTR ds:0x100660a4
1003908e:	push   esi
1003908f:	call   DWORD PTR ds:0x100660ac
10039095:	test   eax,eax
10039097:	jne    0x100390bf
10039099:	mov    eax,DWORD PTR [edi]
1003909b:	cmp    eax,ebx
1003909d:	je     0x100390a6
1003909f:	push   eax
100390a0:	call   DWORD PTR ds:0x100662b4
100390a6:	mov    eax,DWORD PTR [edi+0x4]
100390a9:	cmp    eax,ebx
100390ab:	je     0x100390b6
100390ad:	push   eax
100390ae:	call   0x100433c0
100390b3:	add    esp,0x4
100390b6:	push   edi
100390b7:	call   0x10042e92
100390bc:	add    esp,0x4
100390bf:	mov    eax,DWORD PTR [ebp+0x8]
100390c2:	mov    ecx,DWORD PTR [esp+0x60]
100390c6:	mov    DWORD PTR fs:0x0,ecx
100390cd:	pop    ecx
100390ce:	pop    edi
100390cf:	pop    esi
100390d0:	pop    ebx
100390d1:	mov    esp,ebp
100390d3:	pop    ebp
100390d4:	ret    
100390d5:	int3   
100390d6:	int3   
100390d7:	int3   
100390d8:	int3   
100390d9:	int3   
100390da:	int3   
100390db:	int3   
100390dc:	int3   
100390dd:	int3   
100390de:	int3   
100390df:	int3   
100390e0:	push   ebp
100390e1:	mov    ebp,esp
100390e3:	push   0xffffffff
100390e5:	push   0x100624ee
100390ea:	mov    eax,fs:0x0
100390f0:	push   eax
100390f1:	sub    esp,0x1c
100390f4:	mov    eax,ds:0x1007e030
100390f9:	xor    eax,ebp
100390fb:	mov    DWORD PTR [ebp-0x10],eax
100390fe:	push   ebx
100390ff:	push   esi
10039100:	push   edi
10039101:	push   eax
10039102:	lea    eax,[ebp-0xc]
10039105:	mov    fs:0x0,eax
1003910b:	mov    eax,DWORD PTR [ebp+0x8]
1003910e:	xor    ebx,ebx
10039110:	mov    DWORD PTR [ebp-0x20],eax
10039113:	mov    DWORD PTR [ebp-0x24],ebx
10039116:	call   DWORD PTR ds:0x1007efec
1003911c:	push   0x3c5124a8
10039121:	push   0x10073f18
10039126:	mov    DWORD PTR [ebp-0x24],eax
10039129:	call   0x10004246
1003912e:	push   0x570d8fa0
10039133:	push   eax
10039134:	call   0x10004246
10039139:	push   eax
1003913a:	push   0xc
1003913c:	push   0x10073f40
10039141:	call   0x10004417
10039146:	push   0xc
10039148:	mov    edi,eax
1003914a:	call   0x1004349e
1003914f:	mov    esi,eax
10039151:	add    esp,0x20
10039154:	mov    DWORD PTR [ebp-0x18],esi
10039157:	cmp    esi,ebx
10039159:	mov    DWORD PTR [ebp-0x4],ebx
1003915c:	je     0x10039188
1003915e:	push   edi
1003915f:	mov    DWORD PTR [esi+0x4],ebx
10039162:	mov    DWORD PTR [esi+0x8],0x1
10039169:	call   DWORD PTR ds:0x100662b0
1003916f:	cmp    eax,ebx
10039171:	mov    DWORD PTR [esi],eax
10039173:	jne    0x10039183
10039175:	cmp    edi,ebx
10039177:	je     0x10039183
10039179:	push   0x8007000e
1003917e:	call   0x10050b90
10039183:	mov    DWORD PTR [ebp-0x1c],esi
10039186:	jmp    0x1003918d
10039188:	mov    DWORD PTR [ebp-0x1c],ebx
1003918b:	mov    esi,ebx
1003918d:	cmp    esi,ebx
1003918f:	mov    DWORD PTR [ebp-0x4],0xffffffff
10039196:	mov    DWORD PTR [ebp-0x28],esi
10039199:	jne    0x100391a5
1003919b:	push   0x8007000e
100391a0:	call   0x10050b90
100391a5:	push   0x68ba941c
100391aa:	push   0x10073f5c
100391af:	mov    DWORD PTR [ebp-0x4],0x1
100391b6:	call   0x10004246
100391bb:	push   eax
100391bc:	push   0x15
100391be:	push   0x10073f88
100391c3:	call   0x10004417
100391c8:	push   0xc
100391ca:	mov    esi,eax
100391cc:	call   0x1004349e
100391d1:	mov    edi,eax
100391d3:	add    esp,0x18
100391d6:	mov    DWORD PTR [ebp-0x18],edi
100391d9:	cmp    edi,ebx
100391db:	mov    BYTE PTR [ebp-0x4],0x2
100391df:	je     0x10039208
100391e1:	push   esi
100391e2:	mov    DWORD PTR [edi+0x4],ebx
100391e5:	mov    DWORD PTR [edi+0x8],0x1
100391ec:	call   DWORD PTR ds:0x100662b0
100391f2:	cmp    eax,ebx
100391f4:	mov    DWORD PTR [edi],eax
100391f6:	jne    0x1003920a
100391f8:	cmp    esi,ebx
100391fa:	je     0x1003920a
100391fc:	push   0x8007000e
10039201:	call   0x10050b90
10039206:	jmp    0x1003920a
10039208:	xor    edi,edi
1003920a:	cmp    edi,ebx
1003920c:	mov    BYTE PTR [ebp-0x4],0x1
10039210:	mov    DWORD PTR [ebp-0x18],edi
10039213:	jne    0x1003921f
10039215:	push   0x8007000e
1003921a:	call   0x10050b90
1003921f:	lea    ecx,[ebp-0x28]
10039222:	push   ecx
10039223:	lea    edx,[ebp-0x18]
10039226:	push   edx
10039227:	lea    eax,[ebp-0x14]
1003922a:	push   eax
1003922b:	mov    BYTE PTR [ebp-0x4],0x3
1003922f:	call   0x10038cc0
10039234:	add    esp,0xc
10039237:	cmp    edi,ebx
10039239:	je     0x1003926f
1003923b:	lea    ecx,[edi+0x8]
1003923e:	push   ecx
1003923f:	call   DWORD PTR ds:0x100660ac
10039245:	cmp    eax,ebx
10039247:	jne    0x1003926f
10039249:	mov    eax,DWORD PTR [edi]
1003924b:	cmp    eax,ebx
1003924d:	je     0x10039256
1003924f:	push   eax
10039250:	call   DWORD PTR ds:0x100662b4
10039256:	mov    eax,DWORD PTR [edi+0x4]
10039259:	cmp    eax,ebx
1003925b:	je     0x10039266
1003925d:	push   eax
1003925e:	call   0x100433c0
10039263:	add    esp,0x4
10039266:	push   edi
10039267:	call   0x10042e92
1003926c:	add    esp,0x4
1003926f:	mov    esi,DWORD PTR [ebp-0x1c]
10039272:	cmp    esi,ebx
10039274:	mov    BYTE PTR [ebp-0x4],0x6
10039278:	je     0x100392ae
1003927a:	lea    edx,[esi+0x8]
1003927d:	push   edx
1003927e:	call   DWORD PTR ds:0x100660ac
10039284:	cmp    eax,ebx
10039286:	jne    0x100392ae
10039288:	mov    eax,DWORD PTR [esi]
1003928a:	cmp    eax,ebx
1003928c:	je     0x10039295
1003928e:	push   eax
1003928f:	call   DWORD PTR ds:0x100662b4
10039295:	mov    eax,DWORD PTR [esi+0x4]
10039298:	cmp    eax,ebx
1003929a:	je     0x100392a5
1003929c:	push   eax
1003929d:	call   0x100433c0
100392a2:	add    esp,0x4
100392a5:	push   esi
100392a6:	call   0x10042e92
100392ab:	add    esp,0x4
100392ae:	mov    edi,DWORD PTR [ebp-0x14]
100392b1:	cmp    edi,ebx
100392b3:	je     0x100392bb
100392b5:	mov    ebx,DWORD PTR [edi]
100392b7:	test   ebx,ebx
100392b9:	jne    0x100392bf
100392bb:	xor    esi,esi
100392bd:	jmp    0x1003930c
100392bf:	push   ebx
100392c0:	call   DWORD PTR ds:0x100660c4
100392c6:	add    eax,0x1
100392c9:	cmp    eax,0x3fffffff
100392ce:	jg     0x10039306
100392d0:	lea    edi,[eax+eax*1]
100392d3:	mov    eax,edi
100392d5:	call   0x1004b6f0
100392da:	mov    esi,esp
100392dc:	test   esi,esi
100392de:	je     0x10039303
100392e0:	mov    eax,DWORD PTR [ebp-0x24]
100392e3:	push   0x0
100392e5:	push   0x0
100392e7:	push   edi
100392e8:	push   esi
100392e9:	push   0xffffffff
100392eb:	push   ebx
100392ec:	push   0x0
100392ee:	push   eax
100392ef:	mov    BYTE PTR [esi],0x0
100392f2:	call   DWORD PTR ds:0x100660b8
100392f8:	mov    edi,DWORD PTR [ebp-0x14]
100392fb:	neg    eax
100392fd:	sbb    eax,eax
100392ff:	and    eax,esi
10039301:	jmp    0x10039308
10039303:	mov    edi,DWORD PTR [ebp-0x14]
10039306:	xor    eax,eax
10039308:	mov    esi,eax
1003930a:	xor    ebx,ebx
1003930c:	mov    eax,DWORD PTR [ebp-0x20]
1003930f:	mov    DWORD PTR [eax+0x18],0xf
10039316:	mov    DWORD PTR [eax+0x14],ebx
10039319:	push   esi
1003931a:	mov    BYTE PTR [eax+0x4],0x0
1003931e:	call   0x10043010
10039323:	add    esp,0x4
10039326:	push   eax
10039327:	push   esi
10039328:	mov    esi,DWORD PTR [ebp-0x20]
1003932b:	mov    ecx,esi
1003932d:	call   0x1000133b
10039332:	cmp    edi,ebx
10039334:	je     0x1003936a
10039336:	lea    ecx,[edi+0x8]
10039339:	push   ecx
1003933a:	call   DWORD PTR ds:0x100660ac
10039340:	test   eax,eax
10039342:	jne    0x1003936a
10039344:	mov    eax,DWORD PTR [edi]
10039346:	cmp    eax,ebx
10039348:	je     0x10039351
1003934a:	push   eax
1003934b:	call   DWORD PTR ds:0x100662b4
10039351:	mov    eax,DWORD PTR [edi+0x4]
10039354:	cmp    eax,ebx
10039356:	je     0x10039361
10039358:	push   eax
10039359:	call   0x100433c0
1003935e:	add    esp,0x4
10039361:	push   edi
10039362:	call   0x10042e92
10039367:	add    esp,0x4
1003936a:	mov    eax,esi
1003936c:	lea    esp,[ebp-0x38]
1003936f:	mov    ecx,DWORD PTR [ebp-0xc]
10039372:	mov    DWORD PTR fs:0x0,ecx
10039379:	pop    ecx
1003937a:	pop    edi
1003937b:	pop    esi
1003937c:	pop    ebx
1003937d:	mov    ecx,DWORD PTR [ebp-0x10]
10039380:	xor    ecx,ebp
10039382:	call   0x10042e97
10039387:	mov    esp,ebp
10039389:	pop    ebp
1003938a:	ret    
1003938b:	int3   
1003938c:	int3   
1003938d:	int3   
1003938e:	int3   
1003938f:	int3   
10039390:	sub    esp,0xc
10039393:	push   ebx
10039394:	push   ebp
10039395:	push   esi
10039396:	mov    esi,DWORD PTR [ecx]
10039398:	push   edi
10039399:	mov    edi,DWORD PTR [esp+0x20]
1003939d:	xor    ebx,ebx
1003939f:	cmp    edi,0x1
100393a2:	jle    0x1003948e
100393a8:	mov    eax,0x34
100393ad:	cdq    
100393ae:	idiv   edi
100393b0:	mov    esi,DWORD PTR [ecx+edi*4-0x4]
100393b4:	add    eax,0x6
100393b7:	test   eax,eax
100393b9:	jle    0x10039484
100393bf:	nop
100393c0:	sub    eax,0x1
100393c3:	mov    DWORD PTR [esp+0x18],eax
100393c7:	sub    ebx,0x61c88647
100393cd:	mov    eax,ebx
100393cf:	shr    eax,0x2
100393d2:	and    eax,0x3
100393d5:	mov    DWORD PTR [esp+0x10],eax
100393d9:	lea    eax,[edi-0x1]
100393dc:	xor    edx,edx
100393de:	test   eax,eax
100393e0:	mov    DWORD PTR [esp+0x14],ebx
100393e4:	jle    0x10039439
100393e6:	mov    edi,DWORD PTR [ecx+edx*4+0x4]
100393ea:	mov    ebx,esi
100393ec:	shl    ebx,0x4
100393ef:	mov    eax,edi
100393f1:	shr    eax,0x3
100393f4:	xor    eax,ebx
100393f6:	mov    ebx,esi
100393f8:	shr    ebx,0x5
100393fb:	lea    ebp,[edi*4+0x0]
10039402:	xor    ebx,ebp
10039404:	mov    ebp,DWORD PTR [esp+0x24]
10039408:	add    eax,ebx
1003940a:	mov    ebx,edx
1003940c:	and    ebx,0x3
1003940f:	xor    ebx,DWORD PTR [esp+0x10]
10039413:	add    edx,0x1
10039416:	mov    ebx,DWORD PTR [ebp+ebx*4+0x0]
1003941a:	xor    ebx,esi
1003941c:	mov    esi,DWORD PTR [esp+0x14]
10039420:	xor    esi,edi
10039422:	mov    edi,DWORD PTR [esp+0x20]
10039426:	add    ebx,esi
10039428:	xor    eax,ebx
1003942a:	add    DWORD PTR [ecx+edx*4-0x4],eax
1003942e:	mov    esi,DWORD PTR [ecx+edx*4-0x4]
10039432:	lea    eax,[edi-0x1]
10039435:	cmp    edx,eax
10039437:	jl     0x100393e6
10039439:	mov    eax,DWORD PTR [ecx]
1003943b:	mov    ebp,eax
1003943d:	shr    ebp,0x3
10039440:	mov    ebx,esi
10039442:	shl    ebx,0x4
10039445:	xor    ebp,ebx
10039447:	add    eax,eax
10039449:	add    eax,eax
1003944b:	mov    ebx,esi
1003944d:	and    edx,0x3
10039450:	xor    edx,DWORD PTR [esp+0x10]
10039454:	shr    ebx,0x5
10039457:	xor    ebx,eax
10039459:	mov    eax,DWORD PTR [esp+0x24]
1003945d:	mov    edx,DWORD PTR [eax+edx*4]
10039460:	add    ebp,ebx
10039462:	mov    ebx,DWORD PTR [esp+0x14]
10039466:	mov    eax,ebx
10039468:	xor    eax,DWORD PTR [ecx]
1003946a:	xor    edx,esi
1003946c:	add    edx,eax
1003946e:	mov    eax,DWORD PTR [esp+0x18]
10039472:	xor    ebp,edx
10039474:	add    DWORD PTR [ecx+edi*4-0x4],ebp
10039478:	test   eax,eax
1003947a:	mov    esi,DWORD PTR [ecx+edi*4-0x4]
1003947e:	jg     0x100393c0
10039484:	pop    edi
10039485:	pop    esi
10039486:	pop    ebp
10039487:	xor    eax,eax
10039489:	pop    ebx
1003948a:	add    esp,0xc
1003948d:	ret    
1003948e:	cmp    edi,0xffffffff
10039491:	jge    0x1003957e
10039497:	mov    eax,0x34
1003949c:	cdq    
1003949d:	neg    edi
1003949f:	idiv   edi
100394a1:	mov    DWORD PTR [esp+0x20],edi
100394a5:	add    eax,0x6
100394a8:	imul   eax,eax,0x9e3779b9
100394ae:	test   eax,eax
100394b0:	mov    DWORD PTR [esp+0x14],eax
100394b4:	je     0x10039574
100394ba:	lea    ebx,[ebx+0x0]
100394c0:	mov    edx,eax
100394c2:	shr    edx,0x2
100394c5:	and    edx,0x3
100394c8:	mov    DWORD PTR [esp+0x10],edx
100394cc:	lea    edx,[edi-0x1]
100394cf:	test   edx,edx
100394d1:	jle    0x10039525
100394d3:	mov    edi,DWORD PTR [ecx+edx*4-0x4]
100394d7:	mov    eax,edi
100394d9:	shl    eax,0x4
100394dc:	mov    ebx,esi
100394de:	shr    ebx,0x3
100394e1:	xor    ebx,eax
100394e3:	mov    eax,edi
100394e5:	shr    eax,0x5
100394e8:	lea    ebp,[esi*4+0x0]
100394ef:	xor    eax,ebp
100394f1:	mov    ebp,DWORD PTR [esp+0x24]
100394f5:	add    ebx,eax
100394f7:	mov    eax,edx
100394f9:	and    eax,0x3
100394fc:	xor    eax,DWORD PTR [esp+0x10]
10039500:	sub    edx,0x1
10039503:	mov    ebp,DWORD PTR [ebp+eax*4+0x0]
10039507:	mov    eax,DWORD PTR [esp+0x14]
1003950b:	xor    ebp,edi
1003950d:	mov    edi,eax
1003950f:	xor    edi,esi
10039511:	add    ebp,edi
10039513:	xor    ebx,ebp
10039515:	sub    DWORD PTR [ecx+edx*4+0x4],ebx
10039519:	test   edx,edx
1003951b:	mov    esi,DWORD PTR [ecx+edx*4+0x4]
1003951f:	jg     0x100394d3
10039521:	mov    edi,DWORD PTR [esp+0x20]
10039525:	mov    edi,DWORD PTR [ecx+edi*4-0x4]
10039529:	mov    ebp,edi
1003952b:	shl    ebp,0x4
1003952e:	mov    ebx,esi
10039530:	shr    ebx,0x3
10039533:	xor    ebx,ebp
10039535:	shr    edi,0x5
10039538:	lea    ebp,[esi*4+0x0]
1003953f:	xor    edi,ebp
10039541:	and    edx,0x3
10039544:	xor    edx,DWORD PTR [esp+0x10]
10039548:	add    ebx,edi
1003954a:	mov    edi,DWORD PTR [esp+0x24]
1003954e:	mov    edx,DWORD PTR [edi+edx*4]
10039551:	mov    edi,DWORD PTR [esp+0x20]
10039555:	xor    edx,DWORD PTR [ecx+edi*4-0x4]
10039559:	mov    ebp,eax
1003955b:	xor    ebp,esi
1003955d:	add    edx,ebp
1003955f:	xor    ebx,edx
10039561:	sub    DWORD PTR [ecx],ebx
10039563:	mov    esi,DWORD PTR [ecx]
10039565:	add    eax,0x61c88647
1003956a:	mov    DWORD PTR [esp+0x14],eax
1003956e:	jne    0x100394c0
10039574:	pop    edi
10039575:	pop    esi
10039576:	pop    ebp
10039577:	xor    eax,eax
10039579:	pop    ebx
1003957a:	add    esp,0xc
1003957d:	ret    
1003957e:	pop    edi
1003957f:	pop    esi
10039580:	pop    ebp
10039581:	mov    eax,0x1
10039586:	pop    ebx
10039587:	add    esp,0xc
1003958a:	ret    
1003958b:	int3   
1003958c:	int3   
1003958d:	int3   
1003958e:	int3   
1003958f:	int3   
10039590:	push   0xffffffff
10039592:	push   0x1005fe38
10039597:	mov    eax,fs:0x0
1003959d:	push   eax
1003959e:	sub    esp,0x2c
100395a1:	mov    eax,ds:0x1007e030
100395a6:	xor    eax,esp
100395a8:	mov    DWORD PTR [esp+0x24],eax
100395ac:	push   ebx
100395ad:	push   ebp
100395ae:	push   esi
100395af:	mov    eax,ds:0x1007e030
100395b4:	xor    eax,esp
100395b6:	push   eax
100395b7:	lea    eax,[esp+0x3c]
100395bb:	mov    fs:0x0,eax
100395c1:	mov    bl,cl
100395c3:	mov    esi,DWORD PTR [esp+0x4c]
100395c7:	mov    ebp,DWORD PTR [esp+0x54]
100395cb:	xor    eax,eax
100395cd:	mov    DWORD PTR [esp+0x14],eax
100395d1:	mov    DWORD PTR [esp+0x1c],edx
100395d5:	mov    DWORD PTR [esp+0x20],ebp
100395d9:	mov    DWORD PTR [esp+0x14],eax
100395dd:	test   bl,bl
100395df:	mov    DWORD PTR [esp+0x44],eax
100395e3:	je     0x10039629
100395e5:	mov    DWORD PTR [esp+0x18],eax
100395e9:	mov    ecx,esi
100395eb:	lea    eax,[esp+0x18]
100395ef:	lea    esi,[esp+0x1c]
100395f3:	call   0x1002f8d0
100395f8:	mov    ecx,DWORD PTR [eax]
100395fa:	mov    esi,ecx
100395fc:	test   esi,esi
100395fe:	mov    DWORD PTR [eax],0x0
10039604:	je     0x10039610
10039606:	push   0x0
10039608:	call   0x10042e92
1003960d:	add    esp,0x4
10039610:	mov    edx,DWORD PTR [esp+0x1c]
10039614:	push   edx
10039615:	mov    DWORD PTR [esp+0x18],esi
10039619:	call   0x10042e92
1003961e:	mov    DWORD PTR [esp+0x20],esi
10039622:	mov    esi,DWORD PTR [esp+0x1c]
10039626:	add    esp,0x4
10039629:	lea    eax,[esi+0x3]
1003962c:	and    eax,0xfffffffc
1003962f:	add    eax,0x8
10039632:	mov    DWORD PTR [esp+0x18],eax
10039636:	add    eax,0x10
10039639:	push   eax
1003963a:	mov    DWORD PTR [ebp+0x0],eax
1003963d:	call   0x10043721
10039642:	add    esp,0x4
10039645:	mov    DWORD PTR [edi],eax
10039647:	call   DWORD PTR ds:0x10066118
1003964d:	push   eax
1003964e:	call   0x1004640a
10039653:	add    esp,0x4
10039656:	xor    ebp,ebp
10039658:	call   0x10046417
1003965d:	cdq    
1003965e:	mov    ecx,0xff
10039663:	idiv   ecx
10039665:	add    ebp,0x1
10039668:	cmp    ebp,0x10
1003966b:	mov    BYTE PTR [esp+ebp*1+0x23],dl
1003966f:	jne    0x10039658
10039671:	mov    eax,DWORD PTR [edi]
10039673:	mov    edx,DWORD PTR [esp+0x24]
10039677:	mov    ecx,DWORD PTR [esp+0x28]
1003967b:	mov    DWORD PTR [eax],edx
1003967d:	mov    edx,DWORD PTR [esp+0x2c]
10039681:	mov    DWORD PTR [eax+0x4],ecx
10039684:	mov    ecx,DWORD PTR [esp+0x30]
10039688:	mov    DWORD PTR [eax+0x8],edx
1003968b:	mov    edx,DWORD PTR [esp+0x1c]
1003968f:	mov    DWORD PTR [eax+0xc],ecx
10039692:	add    eax,ebp
10039694:	neg    bl
10039696:	push   esi
10039697:	push   edx
10039698:	sbb    ebx,ebx
1003969a:	and    ebx,0xfffffbff
100396a0:	add    ebx,0x4b4f5444
100396a6:	mov    DWORD PTR [eax],ebx
100396a8:	add    eax,0x4
100396ab:	push   eax
100396ac:	call   0x10045180
100396b1:	mov    ecx,DWORD PTR [esp+0x2c]
100396b5:	mov    edx,DWORD PTR [ecx]
100396b7:	mov    eax,DWORD PTR [edi]
100396b9:	lea    eax,[edx+eax*1-0x4]
100396bd:	mov    DWORD PTR [eax],esi
100396bf:	add    esp,0xc
100396c2:	xor    eax,eax
100396c4:	xor    ecx,ecx
100396c6:	jmp    0x100396d0
100396c8:	lea    esp,[esp+0x0]
100396cf:	nop
100396d0:	mov    edx,DWORD PTR [esp+0x50]
100396d4:	mov    dl,BYTE PTR [ecx+edx*1]
100396d7:	xor    BYTE PTR [esp+eax*1+0x24],dl
100396db:	add    ecx,0x1
100396de:	add    eax,0x1
100396e1:	and    ecx,0xf
100396e4:	cmp    eax,0x10
100396e7:	jne    0x100396d0
100396e9:	mov    ecx,DWORD PTR [edi]
100396eb:	lea    eax,[esp+0x24]
100396ef:	push   eax
100396f0:	mov    eax,DWORD PTR [esp+0x1c]
100396f4:	cdq    
100396f5:	and    edx,0x3
100396f8:	add    eax,edx
100396fa:	sar    eax,0x2
100396fd:	push   eax
100396fe:	add    ecx,0x10
10039701:	call   0x10039390
10039706:	mov    ecx,DWORD PTR [esp+0x1c]
1003970a:	push   ecx
1003970b:	call   0x10042e92
10039710:	add    esp,0xc
10039713:	mov    eax,edi
10039715:	mov    ecx,DWORD PTR [esp+0x3c]
10039719:	mov    DWORD PTR fs:0x0,ecx
10039720:	pop    ecx
10039721:	pop    esi
10039722:	pop    ebp
10039723:	pop    ebx
10039724:	mov    ecx,DWORD PTR [esp+0x24]
10039728:	xor    ecx,esp
1003972a:	call   0x10042e97
1003972f:	add    esp,0x38
10039732:	ret    
10039733:	int3   
10039734:	int3   
10039735:	int3   
10039736:	int3   
10039737:	int3   
10039738:	int3   
10039739:	int3   
1003973a:	int3   
1003973b:	int3   
1003973c:	int3   
1003973d:	int3   
1003973e:	int3   
1003973f:	int3   
10039740:	push   0xffffffff
10039742:	push   0x100631a0
10039747:	mov    eax,fs:0x0
1003974d:	push   eax
1003974e:	sub    esp,0x30
10039751:	mov    eax,ds:0x1007e030
10039756:	xor    eax,esp
10039758:	mov    DWORD PTR [esp+0x28],eax
1003975c:	push   ebx
1003975d:	push   ebp
1003975e:	push   esi
1003975f:	push   edi
10039760:	mov    eax,ds:0x1007e030
10039765:	xor    eax,esp
10039767:	push   eax
10039768:	lea    eax,[esp+0x44]
1003976c:	mov    fs:0x0,eax
10039772:	mov    edi,DWORD PTR [esp+0x60]
10039776:	mov    eax,DWORD PTR [esp+0x5c]
1003977a:	mov    ebx,DWORD PTR [esp+0x54]
1003977e:	mov    esi,DWORD PTR [esp+0x58]
10039782:	xor    ebp,ebp
10039784:	mov    DWORD PTR [esp+0x20],ebp
10039788:	mov    DWORD PTR [esp+0x18],ebx
1003978c:	mov    DWORD PTR [esp+0x1c],ecx
10039790:	mov    DWORD PTR [esp+0x14],edx
10039794:	mov    DWORD PTR [esp+0x24],ebp
10039798:	cmp    eax,0x18
1003979b:	mov    DWORD PTR [esp+0x4c],ebp
1003979f:	jae    0x100397bf
100397a1:	call   0x10002080
100397a6:	push   0x6
100397a8:	call   0x10037980
100397ad:	add    esp,0x4
100397b0:	push   ebp
100397b1:	mov    DWORD PTR [ebx],ebp
100397b3:	call   0x10042e92
100397b8:	mov    eax,ebx
100397ba:	jmp    0x10039a5b
100397bf:	lea    ebx,[eax-0x10]
100397c2:	push   ebx
100397c3:	call   0x10043721
100397c8:	mov    ebp,eax
100397ca:	add    esp,0x4
100397cd:	mov    DWORD PTR [esp+0x28],ebp
100397d1:	push   ebx
100397d2:	lea    eax,[esi+0x10]
100397d5:	push   eax
100397d6:	push   ebp
100397d7:	mov    BYTE PTR [esp+0x58],0x1
100397dc:	call   0x10045180
100397e1:	mov    ecx,DWORD PTR [esi]
100397e3:	mov    eax,DWORD PTR [esi+0x8]
100397e6:	mov    edx,DWORD PTR [esi+0x4]
100397e9:	mov    DWORD PTR [esp+0x38],ecx
100397ed:	mov    ecx,DWORD PTR [esi+0xc]
100397f0:	mov    DWORD PTR [esp+0x40],eax
100397f4:	add    esp,0xc
100397f7:	mov    DWORD PTR [esp+0x38],ecx
100397fb:	xor    eax,eax
100397fd:	mov    DWORD PTR [esp+0x30],edx
10039801:	xor    ecx,ecx
10039803:	mov    dl,BYTE PTR [ecx+edi*1]
10039806:	xor    BYTE PTR [esp+eax*1+0x2c],dl
1003980a:	add    ecx,0x1
1003980d:	add    eax,0x1
10039810:	and    ecx,0xf
10039813:	cmp    eax,0x10
10039816:	jne    0x10039803
10039818:	lea    eax,[esp+0x2c]
1003981c:	push   eax
1003981d:	mov    eax,ebx
1003981f:	cdq    
10039820:	and    edx,0x3
10039823:	add    eax,edx
10039825:	sar    eax,0x2
10039828:	neg    eax
1003982a:	push   eax
1003982b:	mov    ecx,ebp
1003982d:	call   0x10039390
10039832:	mov    ecx,DWORD PTR [esp+0x1c]
10039836:	mov    BYTE PTR [ecx],0x0
10039839:	add    esp,0x8
1003983c:	mov    eax,0x4
10039841:	mov    ecx,0x1007f52c
10039846:	mov    edx,ebp
10039848:	mov    esi,DWORD PTR [edx]
1003984a:	cmp    esi,DWORD PTR [ecx]
1003984c:	jne    0x10039860
1003984e:	sub    eax,0x4
10039851:	add    ecx,0x4
10039854:	add    edx,0x4
10039857:	cmp    eax,0x4
1003985a:	jae    0x10039848
1003985c:	test   eax,eax
1003985e:	je     0x100398bd
10039860:	movzx  edi,BYTE PTR [ecx]
10039863:	movzx  esi,BYTE PTR [edx]
10039866:	sub    esi,edi
10039868:	jne    0x100398af
1003986a:	sub    eax,0x1
1003986d:	add    ecx,0x1
10039870:	add    edx,0x1
10039873:	test   eax,eax
10039875:	je     0x100398bd
10039877:	movzx  edi,BYTE PTR [ecx]
1003987a:	movzx  esi,BYTE PTR [edx]
1003987d:	sub    esi,edi
1003987f:	jne    0x100398af
10039881:	sub    eax,0x1
10039884:	add    ecx,0x1
10039887:	add    edx,0x1
1003988a:	test   eax,eax
1003988c:	je     0x100398bd
1003988e:	movzx  edi,BYTE PTR [ecx]
10039891:	movzx  esi,BYTE PTR [edx]
10039894:	sub    esi,edi
10039896:	jne    0x100398af
10039898:	sub    eax,0x1
1003989b:	add    ecx,0x1
1003989e:	add    edx,0x1
100398a1:	test   eax,eax
100398a3:	je     0x100398bd
100398a5:	movzx  eax,BYTE PTR [ecx]
100398a8:	movzx  esi,BYTE PTR [edx]
100398ab:	sub    esi,eax
100398ad:	je     0x100398bd
100398af:	test   esi,esi
100398b1:	mov    eax,0x1
100398b6:	jg     0x100398bf
100398b8:	or     eax,0xffffffff
100398bb:	jmp    0x100398bf
100398bd:	xor    eax,eax
100398bf:	test   eax,eax
100398c1:	jne    0x100398cf
100398c3:	mov    ecx,DWORD PTR [esp+0x14]
100398c7:	mov    BYTE PTR [ecx],0x1
100398ca:	jmp    0x1003995f
100398cf:	mov    eax,0x4
100398d4:	mov    ecx,0x1007f528
100398d9:	mov    edx,ebp
100398db:	jmp    0x100398e0
100398dd:	lea    ecx,[ecx+0x0]
100398e0:	mov    esi,DWORD PTR [edx]
100398e2:	cmp    esi,DWORD PTR [ecx]
100398e4:	jne    0x100398f8
100398e6:	sub    eax,0x4
100398e9:	add    ecx,0x4
100398ec:	add    edx,0x4
100398ef:	cmp    eax,0x4
100398f2:	jae    0x100398e0
100398f4:	test   eax,eax
100398f6:	je     0x10039955
100398f8:	movzx  esi,BYTE PTR [edx]
100398fb:	movzx  edi,BYTE PTR [ecx]
100398fe:	sub    esi,edi
10039900:	jne    0x10039947
10039902:	sub    eax,0x1
10039905:	add    ecx,0x1
10039908:	add    edx,0x1
1003990b:	test   eax,eax
1003990d:	je     0x10039955
1003990f:	movzx  esi,BYTE PTR [edx]
10039912:	movzx  edi,BYTE PTR [ecx]
10039915:	sub    esi,edi
10039917:	jne    0x10039947
10039919:	sub    eax,0x1
1003991c:	add    ecx,0x1
1003991f:	add    edx,0x1
10039922:	test   eax,eax
10039924:	je     0x10039955
10039926:	movzx  esi,BYTE PTR [edx]
10039929:	movzx  edi,BYTE PTR [ecx]
1003992c:	sub    esi,edi
1003992e:	jne    0x10039947
10039930:	sub    eax,0x1
10039933:	add    ecx,0x1
10039936:	add    edx,0x1
10039939:	test   eax,eax
1003993b:	je     0x10039955
1003993d:	movzx  esi,BYTE PTR [edx]
10039940:	movzx  edx,BYTE PTR [ecx]
10039943:	sub    esi,edx
10039945:	je     0x10039955
10039947:	test   esi,esi
10039949:	mov    eax,0x1
1003994e:	jg     0x10039957
10039950:	or     eax,0xffffffff
10039953:	jmp    0x10039957
10039955:	xor    eax,eax
10039957:	test   eax,eax
10039959:	jne    0x10039a30
1003995f:	cmp    BYTE PTR [esp+0x64],0x0
10039964:	mov    eax,DWORD PTR [ebx+ebp*1-0x4]
10039968:	mov    edi,DWORD PTR [esp+0x1c]
1003996c:	mov    DWORD PTR [edi],eax
1003996e:	jne    0x10039975
10039970:	add    eax,0xfffffffc
10039973:	mov    DWORD PTR [edi],eax
10039975:	mov    eax,DWORD PTR [edi]
10039977:	lea    ecx,[ebx-0x8]
1003997a:	cmp    eax,ecx
1003997c:	ja     0x10039a30
10039982:	add    ebx,0xfffffff5
10039985:	cmp    eax,ebx
10039987:	jb     0x10039a30
1003998d:	push   eax
1003998e:	call   0x10043721
10039993:	mov    esi,eax
10039995:	add    esp,0x4
10039998:	test   esi,esi
1003999a:	je     0x100399a6
1003999c:	push   0x0
1003999e:	call   0x10042e92
100399a3:	add    esp,0x4
100399a6:	mov    edx,DWORD PTR [edi]
100399a8:	push   edx
100399a9:	lea    eax,[ebp+0x4]
100399ac:	push   eax
100399ad:	push   esi
100399ae:	mov    DWORD PTR [esp+0x30],esi
100399b2:	call   0x10045180
100399b7:	mov    ecx,DWORD PTR [esp+0x20]
100399bb:	add    esp,0xc
100399be:	cmp    BYTE PTR [ecx],0x0
100399c1:	je     0x10039a16
100399c3:	mov    eax,DWORD PTR [edi]
100399c5:	lea    edx,[esp+0x14]
100399c9:	push   edx
100399ca:	push   eax
100399cb:	lea    ecx,[esp+0x28]
100399cf:	push   esi
100399d0:	push   ecx
100399d1:	mov    DWORD PTR [esp+0x24],0x0
100399d9:	call   0x1002f500
100399de:	mov    edi,DWORD PTR [eax]
100399e0:	mov    DWORD PTR [eax],0x0
100399e6:	mov    edx,DWORD PTR [esp+0x30]
100399ea:	push   edx
100399eb:	call   0x10042e92
100399f0:	add    esp,0x14
100399f3:	cmp    edi,esi
100399f5:	je     0x10039a00
100399f7:	push   esi
100399f8:	call   0x10042e92
100399fd:	add    esp,0x4
10039a00:	mov    eax,DWORD PTR [esp+0x14]
10039a04:	mov    ecx,DWORD PTR [esp+0x1c]
10039a08:	push   0x0
10039a0a:	mov    esi,edi
10039a0c:	mov    DWORD PTR [ecx],eax
10039a0e:	call   0x10042e92
10039a13:	add    esp,0x4
10039a16:	mov    edi,DWORD PTR [esp+0x18]
10039a1a:	push   ebp
10039a1b:	mov    DWORD PTR [edi],esi
10039a1d:	call   0x10042e92
10039a22:	add    esp,0x4
10039a25:	push   0x0
10039a27:	call   0x10042e92
10039a2c:	mov    eax,edi
10039a2e:	jmp    0x10039a5b
10039a30:	call   0x10002080
10039a35:	push   0x6
10039a37:	call   0x10037980
10039a3c:	mov    esi,DWORD PTR [esp+0x1c]
10039a40:	add    esp,0x4
10039a43:	push   ebp
10039a44:	mov    DWORD PTR [esi],0x0
10039a4a:	call   0x10042e92
10039a4f:	add    esp,0x4
10039a52:	push   0x0
10039a54:	call   0x10042e92
10039a59:	mov    eax,esi
10039a5b:	add    esp,0x4
10039a5e:	mov    ecx,DWORD PTR [esp+0x44]
10039a62:	mov    DWORD PTR fs:0x0,ecx
10039a69:	pop    ecx
10039a6a:	pop    edi
10039a6b:	pop    esi
10039a6c:	pop    ebp
10039a6d:	pop    ebx
10039a6e:	mov    ecx,DWORD PTR [esp+0x28]
10039a72:	xor    ecx,esp
10039a74:	call   0x10042e97
10039a79:	add    esp,0x3c
10039a7c:	ret    
10039a7d:	int3   
10039a7e:	int3   
10039a7f:	int3   
10039a80:	push   0xffffffff
10039a82:	push   0x10061249
10039a87:	mov    eax,fs:0x0
10039a8d:	push   eax
10039a8e:	sub    esp,0x18
10039a91:	mov    eax,ds:0x1007e030
10039a96:	xor    eax,esp
10039a98:	mov    DWORD PTR [esp+0x14],eax
10039a9c:	push   ebp
10039a9d:	push   esi
10039a9e:	mov    eax,ds:0x1007e030
10039aa3:	xor    eax,esp
10039aa5:	push   eax
10039aa6:	lea    eax,[esp+0x24]
10039aaa:	mov    fs:0x0,eax
10039ab0:	mov    ebp,DWORD PTR [esp+0x34]
10039ab4:	xor    eax,eax
10039ab6:	mov    DWORD PTR [esp+0xc],eax
10039aba:	mov    DWORD PTR [edi+0x18],0xf
10039ac1:	mov    DWORD PTR [edi+0x14],eax
10039ac4:	mov    DWORD PTR [esp+0x10],edi
10039ac8:	mov    BYTE PTR [edi+0x4],al
10039acb:	xor    esi,esi
10039acd:	cmp    ebx,eax
10039acf:	mov    DWORD PTR [esp+0x2c],eax
10039ad3:	mov    DWORD PTR [esp+0xc],0x1
10039adb:	je     0x10039b4c
10039add:	lea    ecx,[ecx+0x0]
10039ae0:	movzx  eax,BYTE PTR [esi+ebp*1]
10039ae4:	push   eax
10039ae5:	push   0x3f57279
10039aea:	push   0x127a568b
10039aef:	push   0x5a7119fa
10039af4:	push   0x10073fb4
10039af9:	call   0x10004246
10039afe:	add    esp,0x8
10039b01:	push   eax
10039b02:	call   0x10004246
10039b07:	add    esp,0x8
10039b0a:	push   eax
10039b0b:	call   0x10004246
10039b10:	push   eax
10039b11:	push   0x4
10039b13:	push   0x10073fdc
10039b18:	call   0x10004258
10039b1d:	add    esp,0x14
10039b20:	push   eax
10039b21:	lea    ecx,[esp+0x1c]
10039b25:	push   ecx
10039b26:	call   0x1005847f
10039b2b:	lea    edx,[esp+0x20]
10039b2f:	push   edx
10039b30:	call   0x10043010
10039b35:	add    esp,0x10
10039b38:	push   eax
10039b39:	lea    eax,[esp+0x18]
10039b3d:	push   eax
10039b3e:	mov    eax,edi
10039b40:	call   0x10004d24
10039b45:	add    esi,0x1
10039b48:	cmp    esi,ebx
10039b4a:	jne    0x10039ae0
10039b4c:	mov    eax,edi
10039b4e:	mov    ecx,DWORD PTR [esp+0x24]
10039b52:	mov    DWORD PTR fs:0x0,ecx
10039b59:	pop    ecx
10039b5a:	pop    esi
10039b5b:	pop    ebp
10039b5c:	mov    ecx,DWORD PTR [esp+0x14]
10039b60:	xor    ecx,esp
10039b62:	call   0x10042e97
10039b67:	add    esp,0x24
10039b6a:	ret    
10039b6b:	int3   
10039b6c:	int3   
10039b6d:	int3   
10039b6e:	int3   
10039b6f:	int3   
10039b70:	push   0xffffffff
10039b72:	push   0x1005f698
10039b77:	mov    eax,fs:0x0
10039b7d:	push   eax
10039b7e:	sub    esp,0xc
10039b81:	push   ebx
10039b82:	push   ebp
10039b83:	push   esi
10039b84:	push   edi
10039b85:	mov    eax,ds:0x1007e030
10039b8a:	xor    eax,esp
10039b8c:	push   eax
10039b8d:	lea    eax,[esp+0x20]
10039b91:	mov    fs:0x0,eax
10039b97:	mov    ebx,DWORD PTR [esp+0x38]
10039b9b:	xor    edi,edi
10039b9d:	mov    DWORD PTR [esp+0x1c],edi
10039ba1:	mov    DWORD PTR [ebx],edi
10039ba3:	mov    DWORD PTR [esp+0x1c],edi
10039ba7:	mov    esi,DWORD PTR [esp+0x34]
10039bab:	mov    DWORD PTR [esp+0x28],edi
10039baf:	mov    eax,DWORD PTR [esi+0x14]
10039bb2:	test   al,0x1
10039bb4:	je     0x10039bbe
10039bb6:	mov    esi,DWORD PTR [esp+0x30]
10039bba:	mov    DWORD PTR [esi],edi
10039bbc:	jmp    0x10039bf2
10039bbe:	shr    eax,1
10039bc0:	mov    DWORD PTR [ebx],eax
10039bc2:	je     0x10039bb6
10039bc4:	push   eax
10039bc5:	call   0x10043721
10039bca:	add    esp,0x4
10039bcd:	cmp    eax,edi
10039bcf:	mov    DWORD PTR [esp+0x1c],eax
10039bd3:	je     0x10039bde
10039bd5:	push   edi
10039bd6:	call   0x10042e92
10039bdb:	add    esp,0x4
10039bde:	xor    ebp,ebp
10039be0:	cmp    DWORD PTR [ebx],edi
10039be2:	mov    DWORD PTR [esp+0x18],edi
10039be6:	jne    0x10039c19
10039be8:	mov    esi,DWORD PTR [esp+0x30]
10039bec:	mov    eax,DWORD PTR [esp+0x1c]
10039bf0:	mov    DWORD PTR [esi],eax
10039bf2:	push   edi
10039bf3:	call   0x10042e92
10039bf8:	mov    eax,esi
10039bfa:	add    esp,0x4
10039bfd:	mov    ecx,DWORD PTR [esp+0x20]
10039c01:	mov    DWORD PTR fs:0x0,ecx
10039c08:	pop    ecx
10039c09:	pop    edi
10039c0a:	pop    esi
10039c0b:	pop    ebp
10039c0c:	pop    ebx
10039c0d:	add    esp,0x18
10039c10:	ret    
10039c11:	mov    esi,DWORD PTR [esp+0x34]
10039c15:	mov    edi,DWORD PTR [esp+0x18]
10039c19:	cmp    edi,DWORD PTR [esi+0x14]
10039c1c:	jbe    0x10039c23
10039c1e:	call   0x100433b0
10039c23:	cmp    DWORD PTR [esi+0x18],0x10
10039c27:	jb     0x10039c31
10039c29:	mov    eax,DWORD PTR [esi+0x4]
10039c2c:	add    esi,0x4
10039c2f:	jmp    0x10039c36
10039c31:	add    esi,0x4
10039c34:	mov    eax,esi
10039c36:	mov    bl,BYTE PTR [eax+edi*1]
10039c39:	mov    eax,DWORD PTR [esp+0x34]
10039c3d:	add    edi,0x1
10039c40:	cmp    edi,DWORD PTR [eax+0x14]
10039c43:	jbe    0x10039c4a
10039c45:	call   0x100433b0
10039c4a:	mov    ecx,DWORD PTR [esp+0x34]
10039c4e:	cmp    DWORD PTR [ecx+0x18],0x10
10039c52:	jb     0x10039c56
10039c54:	mov    esi,DWORD PTR [esi]
10039c56:	mov    dl,BYTE PTR [edi+esi*1]
10039c59:	movzx  eax,bl
10039c5c:	push   eax
10039c5d:	mov    BYTE PTR [esp+0x1b],dl
10039c61:	call   0x1004f2dc
10039c66:	add    esp,0x4
10039c69:	test   eax,eax
10039c6b:	je     0x10039cf2
10039c71:	movzx  ecx,BYTE PTR [esp+0x17]
10039c76:	push   ecx
10039c77:	call   0x1004f2dc
10039c7c:	add    esp,0x4
10039c7f:	test   eax,eax
10039c81:	je     0x10039cf2
10039c83:	mov    dl,bl
10039c85:	sub    dl,0x30
10039c88:	cmp    dl,0x9
10039c8b:	ja     0x10039c95
10039c8d:	movsx  ebx,bl
10039c90:	sub    ebx,0x30
10039c93:	jmp    0x10039ca6
10039c95:	movsx  eax,bl
10039c98:	push   eax
10039c99:	call   0x10058d67
10039c9e:	mov    ebx,eax
10039ca0:	add    esp,0x4
10039ca3:	sub    ebx,0x37
10039ca6:	mov    al,BYTE PTR [esp+0x17]
10039caa:	mov    cl,al
10039cac:	sub    cl,0x30
10039caf:	cmp    cl,0x9
10039cb2:	ja     0x10039cbc
10039cb4:	movsx  eax,al
10039cb7:	sub    eax,0x30
10039cba:	jmp    0x10039ccb
10039cbc:	movsx  edx,al
10039cbf:	push   edx
10039cc0:	call   0x10058d67
10039cc5:	add    esp,0x4
10039cc8:	sub    eax,0x37
10039ccb:	mov    ecx,DWORD PTR [esp+0x38]
10039ccf:	add    DWORD PTR [esp+0x18],0x2
10039cd4:	shl    bl,0x4
10039cd7:	add    bl,al
10039cd9:	mov    eax,DWORD PTR [esp+0x1c]
10039cdd:	mov    BYTE PTR [eax+ebp*1],bl
10039ce0:	add    ebp,0x1
10039ce3:	cmp    ebp,DWORD PTR [ecx]
10039ce5:	jne    0x10039c11
10039ceb:	xor    edi,edi
10039ced:	jmp    0x10039be8
10039cf2:	mov    eax,DWORD PTR [esp+0x1c]
10039cf6:	test   eax,eax
10039cf8:	mov    edx,DWORD PTR [esp+0x38]
10039cfc:	mov    DWORD PTR [edx],0x0
10039d02:	je     0x10039d0d
10039d04:	push   eax
10039d05:	call   0x10042e92
10039d0a:	add    esp,0x4
10039d0d:	mov    esi,DWORD PTR [esp+0x30]
10039d11:	mov    DWORD PTR [esi],0x0
10039d17:	push   0x0
10039d19:	jmp    0x10039bf3
10039d1e:	int3   
10039d1f:	int3   
10039d20:	push   0xffffffff
10039d22:	push   0x100624a0
10039d27:	mov    eax,fs:0x0
10039d2d:	push   eax
10039d2e:	sub    esp,0x10
10039d31:	push   ebx
10039d32:	push   ebp
10039d33:	push   esi
10039d34:	push   edi
10039d35:	mov    eax,ds:0x1007e030
10039d3a:	xor    eax,esp
10039d3c:	push   eax
10039d3d:	lea    eax,[esp+0x24]
10039d41:	mov    fs:0x0,eax
10039d47:	mov    ebx,ecx
10039d49:	mov    DWORD PTR [esp+0x18],0x0
10039d51:	mov    edi,DWORD PTR [ebx+0x14]
10039d54:	lea    ebp,[edi+0x4]
10039d57:	push   ebp
10039d58:	call   0x10043721
10039d5d:	mov    esi,eax
10039d5f:	add    esp,0x4
10039d62:	mov    DWORD PTR [esp+0x1c],esi
10039d66:	mov    DWORD PTR [esp+0x2c],0x0
10039d6e:	mov    DWORD PTR [esi],edi
10039d70:	cmp    DWORD PTR [ebx+0x18],0x10
10039d74:	jb     0x10039d7b
10039d76:	mov    ebx,DWORD PTR [ebx+0x4]
10039d79:	jmp    0x10039d7e
10039d7b:	add    ebx,0x4
10039d7e:	push   edi
10039d7f:	lea    eax,[esi+0x4]
10039d82:	push   ebx
10039d83:	push   eax
10039d84:	call   0x10045180
10039d89:	mov    edx,DWORD PTR [esp+0x44]
10039d8d:	add    esp,0xc
10039d90:	lea    ecx,[esp+0x18]
10039d94:	push   ecx
10039d95:	mov    cl,BYTE PTR [esp+0x40]
10039d99:	push   edx
10039d9a:	push   ebp
10039d9b:	mov    edx,esi
10039d9d:	lea    edi,[esp+0x20]
10039da1:	call   0x10039590
10039da6:	mov    ecx,DWORD PTR [eax]
10039da8:	mov    ebp,ecx
10039daa:	add    esp,0xc
10039dad:	mov    DWORD PTR [eax],0x0
10039db3:	mov    DWORD PTR [esp+0x20],ebp
10039db7:	mov    BYTE PTR [esp+0x2c],0x1
10039dbc:	mov    edx,DWORD PTR [esp+0x14]
10039dc0:	push   edx
10039dc1:	call   0x10042e92
10039dc6:	mov    edi,DWORD PTR [esp+0x38]
10039dca:	add    esp,0x4
10039dcd:	test   ebp,ebp
10039dcf:	jne    0x10039dfc
10039dd1:	mov    DWORD PTR [edi+0x18],0xf
10039dd8:	mov    DWORD PTR [edi+0x14],ebp
10039ddb:	push   0x1006cd08
10039de0:	mov    BYTE PTR [edi+0x4],0x0
10039de4:	call   0x10043010
10039de9:	add    esp,0x4
10039dec:	push   eax
10039ded:	push   0x1006cd08
10039df2:	mov    ecx,edi
10039df4:	call   0x1000133b
10039df9:	push   ebp
10039dfa:	jmp    0x10039e0a
10039dfc:	mov    ebx,DWORD PTR [esp+0x18]
10039e00:	push   ebp
10039e01:	call   0x10039a80
10039e06:	add    esp,0x4
10039e09:	push   ebp
10039e0a:	call   0x10042e92
10039e0f:	add    esp,0x4
10039e12:	push   esi
10039e13:	call   0x10042e92
10039e18:	mov    eax,edi
10039e1a:	add    esp,0x4
10039e1d:	mov    ecx,DWORD PTR [esp+0x24]
10039e21:	mov    DWORD PTR fs:0x0,ecx
10039e28:	pop    ecx
10039e29:	pop    edi
10039e2a:	pop    esi
10039e2b:	pop    ebp
10039e2c:	pop    ebx
10039e2d:	add    esp,0x1c
10039e30:	ret    
10039e31:	int3   
10039e32:	int3   
10039e33:	int3   
10039e34:	int3   
10039e35:	int3   
10039e36:	int3   
10039e37:	int3   
10039e38:	int3   
10039e39:	int3   
10039e3a:	int3   
10039e3b:	int3   
10039e3c:	int3   
10039e3d:	int3   
10039e3e:	int3   
10039e3f:	int3   
10039e40:	mov    ecx,DWORD PTR [eax]
10039e42:	push   ecx
10039e43:	call   DWORD PTR ds:0x100660ec
10039e49:	ret    
10039e4a:	int3   
10039e4b:	int3   
10039e4c:	int3   
10039e4d:	int3   
10039e4e:	int3   
10039e4f:	int3   
10039e50:	push   edi
10039e51:	push   0xffffffff
10039e53:	push   0x0
10039e55:	push   eax
10039e56:	mov    edi,ecx
10039e58:	call   0x10001241
10039e5d:	test   esi,esi
10039e5f:	jne    0x10039e7a
10039e61:	mov    ecx,DWORD PTR ds:0x10080fa4
10039e67:	mov    DWORD PTR [edi+0x1c],ecx
10039e6a:	mov    edx,DWORD PTR ds:0x10080fa8
10039e70:	mov    DWORD PTR [edi+0x20],edx
10039e73:	mov    eax,ds:0x10080fac
10039e78:	jmp    0x10039e88
10039e7a:	mov    ecx,DWORD PTR [esi]
10039e7c:	mov    DWORD PTR [edi+0x1c],ecx
10039e7f:	mov    edx,DWORD PTR [esi+0x4]
10039e82:	mov    DWORD PTR [edi+0x20],edx
10039e85:	mov    eax,DWORD PTR [esi+0x8]
10039e88:	push   0x0
10039e8a:	mov    DWORD PTR [edi+0x24],eax
10039e8d:	mov    DWORD PTR [edi+0x30],0x1007f704
10039e94:	mov    DWORD PTR [edi+0x28],0x0
10039e9b:	mov    DWORD PTR [edi+0x2c],0x0
10039ea2:	call   0x10039fa0
10039ea7:	test   eax,eax
10039ea9:	mov    DWORD PTR [edi+0x2c],eax
10039eac:	je     0x10039eb8
10039eae:	push   0x2
10039eb0:	call   0x10039fa0
10039eb5:	mov    DWORD PTR [edi+0x28],eax
10039eb8:	pop    edi
10039eb9:	ret    
10039eba:	int3   
10039ebb:	int3   
10039ebc:	int3   
10039ebd:	int3   
10039ebe:	int3   
10039ebf:	int3   
10039ec0:	push   esi
10039ec1:	mov    esi,eax
10039ec3:	mov    eax,DWORD PTR [esi+0x28]
10039ec6:	test   eax,eax
10039ec8:	je     0x10039ed4
10039eca:	push   eax
10039ecb:	call   DWORD PTR ds:0x1007f4fc
10039ed1:	add    esp,0x4
10039ed4:	mov    eax,DWORD PTR [esi+0x2c]
10039ed7:	test   eax,eax
10039ed9:	je     0x10039ee5
10039edb:	push   eax
10039edc:	call   DWORD PTR ds:0x1007f4fc
10039ee2:	add    esp,0x4
10039ee5:	mov    esi,DWORD PTR [esi+0x30]
10039ee8:	cmp    esi,0x1007f704
10039eee:	je     0x10039f21
10039ef0:	test   esi,esi
10039ef2:	je     0x10039f21
10039ef4:	cmp    DWORD PTR [esi+0x18],0x10
10039ef8:	jb     0x10039f06
10039efa:	mov    eax,DWORD PTR [esi+0x4]
10039efd:	push   eax
10039efe:	call   0x10042e92
10039f03:	add    esp,0x4
10039f06:	mov    DWORD PTR [esi+0x18],0xf
10039f0d:	mov    DWORD PTR [esi+0x14],0x0
10039f14:	push   esi
10039f15:	mov    BYTE PTR [esi+0x4],0x0
10039f19:	call   0x10042e92
10039f1e:	add    esp,0x4
10039f21:	pop    esi
10039f22:	ret    
10039f23:	int3   
10039f24:	int3   
10039f25:	int3   
10039f26:	int3   
10039f27:	int3   
10039f28:	int3   
10039f29:	int3   
10039f2a:	int3   
10039f2b:	int3   
10039f2c:	int3   
10039f2d:	int3   
10039f2e:	int3   
10039f2f:	int3   
10039f30:	push   0xffffffff
10039f32:	push   0x1005fe08
10039f37:	mov    eax,fs:0x0
10039f3d:	push   eax
10039f3e:	push   esi
10039f3f:	mov    eax,ds:0x1007e030
10039f44:	xor    eax,esp
10039f46:	push   eax
10039f47:	lea    eax,[esp+0x8]
10039f4b:	mov    fs:0x0,eax
10039f51:	mov    esi,DWORD PTR [esp+0x18]
10039f55:	mov    eax,esi
10039f57:	mov    DWORD PTR [esp+0x10],0x0
10039f5f:	call   0x10039ec0
10039f64:	cmp    DWORD PTR [esi+0x18],0x10
10039f68:	jb     0x10039f76
10039f6a:	mov    eax,DWORD PTR [esi+0x4]
10039f6d:	push   eax
10039f6e:	call   0x10042e92
10039f73:	add    esp,0x4
10039f76:	mov    DWORD PTR [esi+0x18],0xf
10039f7d:	mov    DWORD PTR [esi+0x14],0x0
10039f84:	mov    BYTE PTR [esi+0x4],0x0
10039f88:	mov    ecx,DWORD PTR [esp+0x8]
10039f8c:	mov    DWORD PTR fs:0x0,ecx
10039f93:	pop    ecx
10039f94:	pop    esi
10039f95:	add    esp,0xc
10039f98:	ret    0x4
10039f9b:	int3   
10039f9c:	int3   
10039f9d:	int3   
10039f9e:	int3   
10039f9f:	int3   
10039fa0:	push   0xffffffff
10039fa2:	push   0x10060753
10039fa7:	mov    eax,fs:0x0
10039fad:	push   eax
10039fae:	sub    esp,0x2c
10039fb1:	mov    eax,ds:0x1007e030
10039fb6:	xor    eax,esp
10039fb8:	mov    DWORD PTR [esp+0x28],eax
10039fbc:	push   ebx
10039fbd:	push   ebp
10039fbe:	push   esi
10039fbf:	mov    eax,ds:0x1007e030
10039fc4:	xor    eax,esp
10039fc6:	push   eax
10039fc7:	lea    eax,[esp+0x3c]
10039fcb:	mov    fs:0x0,eax
10039fd1:	mov    ebp,DWORD PTR [edi+0x24]
10039fd4:	xor    ebx,ebx
10039fd6:	cmp    DWORD PTR [esp+0x4c],0x2
10039fdb:	je     0x1003a004
10039fdd:	cmp    DWORD PTR [edi+0x18],0x10
10039fe1:	jb     0x10039fe8
10039fe3:	mov    edx,DWORD PTR [edi+0x4]
10039fe6:	jmp    0x10039feb
10039fe8:	lea    edx,[edi+0x4]
10039feb:	lea    eax,[esp+0x14]
10039fef:	push   eax
10039ff0:	push   ebp
10039ff1:	lea    ecx,[esp+0x20]
10039ff5:	call   0x10042460
10039ffa:	add    esp,0x8
10039ffd:	mov    ebp,eax
10039fff:	jmp    0x1003a09e
1003a004:	push   0x10074104
1003a009:	mov    DWORD PTR [esp+0x38],0xf
1003a011:	mov    DWORD PTR [esp+0x34],ebx
1003a015:	mov    BYTE PTR [esp+0x24],bl
1003a019:	call   0x10043010
1003a01e:	add    esp,0x4
1003a021:	push   eax
1003a022:	push   0x10074104
1003a027:	lea    ecx,[esp+0x24]
1003a02b:	call   0x1000133b
1003a030:	push   0xffffffff
1003a032:	push   ebx
1003a033:	mov    eax,edi
1003a035:	lea    esi,[esp+0x24]
1003a039:	mov    DWORD PTR [esp+0x4c],ebx
1003a03d:	call   0x10004c80
1003a042:	push   0x10074108
1003a047:	call   0x10043010
1003a04c:	add    esp,0x4
1003a04f:	push   eax
1003a050:	push   0x10074108
1003a055:	mov    eax,esi
1003a057:	call   0x10004d24
1003a05c:	mov    edx,DWORD PTR [esp+0x20]
1003a060:	mov    esi,0x10
1003a065:	cmp    DWORD PTR [esp+0x34],esi
1003a069:	jae    0x1003a06f
1003a06b:	lea    edx,[esp+0x20]
1003a06f:	lea    ecx,[esp+0x14]
1003a073:	push   ecx
1003a074:	push   ebp
1003a075:	lea    ecx,[esp+0x20]
1003a079:	call   0x10042460
1003a07e:	add    esp,0x8
1003a081:	mov    DWORD PTR [esp+0x44],0xffffffff
1003a089:	cmp    DWORD PTR [esp+0x34],esi
1003a08d:	mov    ebp,eax
1003a08f:	jb     0x1003a09e
1003a091:	mov    edx,DWORD PTR [esp+0x20]
1003a095:	push   edx
1003a096:	call   0x10042e92
1003a09b:	add    esp,0x4
1003a09e:	cmp    ebp,ebx
1003a0a0:	jne    0x1003a0f1
1003a0a2:	cmp    DWORD PTR [edi+0x30],0x1007f704
1003a0a9:	jne    0x1003a0f1
1003a0ab:	push   0x1c
1003a0ad:	call   0x1004349e
1003a0b2:	mov    esi,eax
1003a0b4:	add    esp,0x4
1003a0b7:	mov    DWORD PTR [esp+0x14],esi
1003a0bb:	cmp    esi,ebx
1003a0bd:	mov    DWORD PTR [esp+0x44],0x1
1003a0c5:	je     0x1003a0ec
1003a0c7:	mov    DWORD PTR [esi+0x14],ebx
1003a0ca:	mov    DWORD PTR [esi+0x18],0xf
1003a0d1:	mov    BYTE PTR [esi+0x4],bl
1003a0d4:	mov    ebx,DWORD PTR [esp+0x18]
1003a0d8:	push   ebx
1003a0d9:	call   0x10043010
1003a0de:	add    esp,0x4
1003a0e1:	push   eax
1003a0e2:	push   ebx
1003a0e3:	mov    ecx,esi
1003a0e5:	call   0x1000133b
1003a0ea:	jmp    0x1003a0ee
1003a0ec:	xor    esi,esi
1003a0ee:	mov    DWORD PTR [edi+0x30],esi
1003a0f1:	mov    eax,ebp
1003a0f3:	mov    ecx,DWORD PTR [esp+0x3c]
1003a0f7:	mov    DWORD PTR fs:0x0,ecx
1003a0fe:	pop    ecx
1003a0ff:	pop    esi
1003a100:	pop    ebp
1003a101:	pop    ebx
1003a102:	mov    ecx,DWORD PTR [esp+0x28]
1003a106:	xor    ecx,esp
1003a108:	call   0x10042e97
1003a10d:	add    esp,0x38
1003a110:	ret    0x4
1003a113:	int3   
1003a114:	int3   
1003a115:	int3   
1003a116:	int3   
1003a117:	int3   
1003a118:	int3   
1003a119:	int3   
1003a11a:	int3   
1003a11b:	int3   
1003a11c:	int3   
1003a11d:	int3   
1003a11e:	int3   
1003a11f:	int3   
1003a120:	sub    esp,0x11c
1003a126:	lea    eax,[esp+0x48]
1003a12a:	push   eax
1003a12b:	mov    eax,DWORD PTR [esp+0x128]
1003a132:	push   0x0
1003a134:	lea    ecx,[esp+0x10]
1003a138:	push   ecx
1003a139:	lea    edx,[esp+0x10]
1003a13d:	push   edx
1003a13e:	push   eax
1003a13f:	mov    eax,DWORD PTR [esp+0x134]
1003a146:	call   0x1003a200
1003a14b:	add    esp,0x11c
1003a151:	ret    0x8
1003a154:	int3   
1003a155:	int3   
1003a156:	int3   
1003a157:	int3   
1003a158:	int3   
1003a159:	int3   
1003a15a:	int3   
1003a15b:	int3   
1003a15c:	int3   
1003a15d:	int3   
1003a15e:	int3   
1003a15f:	int3   
1003a160:	push   ebp
1003a161:	mov    ebp,esp
1003a163:	and    esp,0xfffffff8
1003a166:	sub    esp,0x18
1003a169:	push   esi
1003a16a:	mov    esi,DWORD PTR [eax+0x2c]
1003a16d:	push   edi
1003a16e:	xor    edi,edi
1003a170:	cmp    esi,edi
1003a172:	jne    0x1003a17e
1003a174:	xor    eax,eax
1003a176:	pop    edi
1003a177:	pop    esi
1003a178:	mov    esp,ebp
1003a17a:	pop    ebp
1003a17b:	ret    0x4
1003a17e:	mov    ecx,DWORD PTR [eax+0x1c]
1003a181:	cmp    ecx,edi
1003a183:	mov    DWORD PTR [esp+0x8],edi
1003a187:	mov    DWORD PTR [esp+0xc],edi
1003a18b:	mov    DWORD PTR [esp+0x10],edi
1003a18f:	mov    DWORD PTR [esp+0x14],edi
1003a193:	mov    DWORD PTR [esp+0x18],edi
1003a197:	mov    DWORD PTR [esp+0x1c],edi
1003a19b:	jle    0x1003a1a9
1003a19d:	mov    DWORD PTR [esp+0x8],0x2
1003a1a5:	mov    DWORD PTR [esp+0x10],ecx
1003a1a9:	mov    eax,DWORD PTR [eax+0x20]
1003a1ac:	cmp    eax,edi
1003a1ae:	jle    0x1003a1b9
1003a1b0:	or     DWORD PTR [esp+0x8],0x10
1003a1b5:	mov    DWORD PTR [esp+0x1c],eax
1003a1b9:	mov    edx,DWORD PTR [ebx]
1003a1bb:	cmp    edx,edi
1003a1bd:	jne    0x1003a1c4
1003a1bf:	mov    edx,0x1006cd08
1003a1c4:	mov    ecx,DWORD PTR [ebp+0x8]
1003a1c7:	mov    eax,DWORD PTR [ebx+0x4]
1003a1ca:	push   ecx
1003a1cb:	push   eax
1003a1cc:	lea    eax,[esp+0x10]
1003a1d0:	push   eax
1003a1d1:	push   esi
1003a1d2:	xor    ecx,ecx
1003a1d4:	call   0x1003d1d0
1003a1d9:	add    esp,0x10
1003a1dc:	cmp    eax,0xffffffff
1003a1df:	je     0x1003a174
1003a1e1:	cmp    eax,edi
1003a1e3:	jl     0x1003a174
1003a1e5:	jne    0x1003a1ec
1003a1e7:	mov    eax,0x19
1003a1ec:	pop    edi
1003a1ed:	pop    esi
1003a1ee:	mov    esp,ebp
1003a1f0:	pop    ebp
1003a1f1:	ret    0x4
1003a1f4:	int3   
1003a1f5:	int3   
1003a1f6:	int3   
1003a1f7:	int3   
1003a1f8:	int3   
1003a1f9:	int3   
1003a1fa:	int3   
1003a1fb:	int3   
1003a1fc:	int3   
1003a1fd:	int3   
1003a1fe:	int3   
1003a1ff:	int3   
1003a200:	push   ebx
1003a201:	mov    ebx,DWORD PTR [esp+0x8]
1003a205:	push   ebp
1003a206:	mov    ebp,DWORD PTR [esp+0x1c]
1003a20a:	push   esi
1003a20b:	push   edi
1003a20c:	push   ebp
1003a20d:	mov    esi,eax
1003a20f:	call   0x1003a160
1003a214:	test   eax,eax
1003a216:	jne    0x1003a221
1003a218:	xor    al,al
1003a21a:	pop    edi
1003a21b:	pop    esi
1003a21c:	pop    ebp
1003a21d:	pop    ebx
1003a21e:	ret    0x14
1003a221:	mov    ebx,DWORD PTR [esp+0x20]
1003a225:	test   ebx,ebx
1003a227:	mov    eax,DWORD PTR [ebp+0x4]
1003a22a:	mov    ecx,DWORD PTR [esp+0x18]
1003a22e:	mov    DWORD PTR [ecx],eax
1003a230:	je     0x1003a292
1003a232:	cmp    DWORD PTR [esp+0x1c],0x0
1003a237:	je     0x1003a292
1003a239:	mov    edx,DWORD PTR [esi+0x2c]
1003a23c:	test   edx,edx
1003a23e:	jne    0x1003a245
1003a240:	or     eax,0xffffffff
1003a243:	jmp    0x1003a252
1003a245:	lea    esi,[esp+0x24]
1003a249:	call   0x10042b10
1003a24e:	mov    eax,DWORD PTR [esp+0x24]
1003a252:	cmp    eax,ebx
1003a254:	jl     0x1003a218
1003a256:	xor    edi,edi
1003a258:	test   ebx,ebx
1003a25a:	jle    0x1003a292
1003a25c:	lea    esi,[ebp+0xc]
1003a25f:	mov    edx,DWORD PTR [esp+0x14]
1003a263:	mov    ebx,DWORD PTR [edx]
1003a265:	mov    edx,DWORD PTR [esp+0x1c]
1003a269:	mov    edx,DWORD PTR [edx+edi*4]
1003a26c:	mov    ecx,DWORD PTR [esi-0x4]
1003a26f:	mov    eax,DWORD PTR [esi]
1003a271:	mov    ebp,DWORD PTR [edx]
1003a273:	sub    eax,ecx
1003a275:	push   ebp
1003a276:	push   eax
1003a277:	mov    eax,DWORD PTR [edx+0x4]
1003a27a:	add    ebx,ecx
1003a27c:	push   ebx
1003a27d:	call   eax
1003a27f:	add    esp,0xc
1003a282:	test   al,al
1003a284:	je     0x1003a218
1003a286:	add    edi,0x1
1003a289:	add    esi,0x8
1003a28c:	cmp    edi,DWORD PTR [esp+0x20]
1003a290:	jl     0x1003a25f
1003a292:	pop    edi
1003a293:	pop    esi
1003a294:	pop    ebp
1003a295:	mov    al,0x1
1003a297:	pop    ebx
1003a298:	ret    0x14
1003a29b:	int3   
1003a29c:	int3   
1003a29d:	int3   
1003a29e:	int3   
1003a29f:	int3   
1003a2a0:	xor    eax,eax
1003a2a2:	cmp    DWORD PTR [esp+0xc],eax
1003a2a6:	sete   al
1003a2a9:	ret    
1003a2aa:	int3   
1003a2ab:	int3   
1003a2ac:	int3   
1003a2ad:	int3   
1003a2ae:	int3   
1003a2af:	int3   
1003a2b0:	push   esi
1003a2b1:	mov    esi,eax
1003a2b3:	mov    eax,DWORD PTR [ecx+0xc]
1003a2b6:	mov    eax,DWORD PTR [eax+edx*4]
1003a2b9:	mov    edx,DWORD PTR [ecx+0x5c]
1003a2bc:	add    eax,DWORD PTR [ecx+0x58]
1003a2bf:	push   edi
1003a2c0:	mov    edi,DWORD PTR [esp+0xc]
1003a2c4:	sub    edx,edi
1003a2c6:	cmp    esi,edx
1003a2c8:	jle    0x1003a2cf
1003a2ca:	pop    edi
1003a2cb:	xor    eax,eax
1003a2cd:	pop    esi
1003a2ce:	ret    
1003a2cf:	test   BYTE PTR [esp+0x10],0x1
1003a2d4:	push   ebx
1003a2d5:	je     0x1003a304
1003a2d7:	test   esi,esi
1003a2d9:	jle    0x1003a2fb
1003a2db:	mov    ecx,DWORD PTR [ecx+0x24]
1003a2de:	mov    edi,edi
1003a2e0:	movzx  edx,BYTE PTR [edi]
1003a2e3:	movzx  ebx,BYTE PTR [eax]
1003a2e6:	mov    dl,BYTE PTR [edx+ecx*1]
1003a2e9:	sub    esi,0x1
1003a2ec:	add    edi,0x1
1003a2ef:	add    eax,0x1
1003a2f2:	cmp    BYTE PTR [ebx+ecx*1],dl
1003a2f5:	jne    0x1003a326
1003a2f7:	test   esi,esi
1003a2f9:	jg     0x1003a2e0
1003a2fb:	pop    ebx
1003a2fc:	pop    edi
1003a2fd:	mov    eax,0x1
1003a302:	pop    esi
1003a303:	ret    
1003a304:	test   esi,esi
1003a306:	jle    0x1003a2fb
1003a308:	mov    cl,BYTE PTR [eax]
1003a30a:	mov    dl,BYTE PTR [edi]
1003a30c:	sub    esi,0x1
1003a30f:	add    edi,0x1
1003a312:	add    eax,0x1
1003a315:	cmp    cl,dl
1003a317:	jne    0x1003a326
1003a319:	test   esi,esi
1003a31b:	jg     0x1003a308
1003a31d:	pop    ebx
1003a31e:	pop    edi
1003a31f:	mov    eax,0x1
1003a324:	pop    esi
1003a325:	ret    
1003a326:	pop    ebx
1003a327:	pop    edi
1003a328:	xor    eax,eax
1003a32a:	pop    esi
1003a32b:	ret    
1003a32c:	int3   
1003a32d:	int3   
1003a32e:	int3   
1003a32f:	int3   
1003a330:	sub    esp,0xe8
1003a336:	push   ebx
1003a337:	push   ebp
1003a338:	push   esi
1003a339:	push   edi
1003a33a:	mov    edi,DWORD PTR [esp+0x10c]
1003a341:	mov    eax,DWORD PTR [edi]
1003a343:	cmp    eax,DWORD PTR [edi+0x4]
1003a346:	jae    0x1003c296
1003a34c:	mov    ebx,DWORD PTR [esp+0x100]
1003a353:	mov    ebp,DWORD PTR [esp+0xfc]
1003a35a:	mov    ecx,DWORD PTR [esp+0x11c]
1003a361:	add    DWORD PTR [edi],0x1
1003a364:	cmp    ecx,DWORD PTR [edi+0x8]
1003a367:	jae    0x1003c2a9
1003a36d:	test   BYTE PTR [esp+0x118],0x2
1003a375:	mov    edx,DWORD PTR [esp+0x110]
1003a37c:	mov    DWORD PTR [esp+0x28],edx
1003a380:	je     0x1003a39c
1003a382:	mov    eax,DWORD PTR [esp+0x114]
1003a389:	lea    ecx,[esp+0x48]
1003a38d:	mov    DWORD PTR [esp+0x4c],ebp
1003a391:	mov    DWORD PTR [esp+0x48],eax
1003a395:	mov    DWORD PTR [esp+0x114],ecx
1003a39c:	movzx  eax,BYTE PTR [ebx]
1003a39f:	xor    edx,edx
1003a3a1:	cmp    DWORD PTR [edi+0x48],edx
1003a3a4:	mov    DWORD PTR [esp+0x1c],edx
1003a3a8:	mov    DWORD PTR [esp+0x20],edx
1003a3ac:	mov    DWORD PTR [esp+0x24],eax
1003a3b0:	je     0x1003a3cb
1003a3b2:	cmp    ebp,DWORD PTR [edi+0x5c]
1003a3b5:	jb     0x1003a3cb
1003a3b7:	mov    esi,DWORD PTR [esp+0x104]
1003a3be:	cmp    ebp,esi
1003a3c0:	jbe    0x1003a3d2
1003a3c2:	mov    DWORD PTR [edi+0x4c],0x1
1003a3c9:	jmp    0x1003a3d2
1003a3cb:	mov    esi,DWORD PTR [esp+0x104]
1003a3d2:	cmp    eax,0x6f
1003a3d5:	ja     0x1003ce31
1003a3db:	movzx  eax,BYTE PTR [eax+0x1003cf5c]
1003a3e2:	jmp    DWORD PTR [eax*4+0x1003ce44]
1003a3e9:	mov    cl,BYTE PTR [ebx+0x3]
1003a3ec:	cmp    cl,0x65
1003a3ef:	lea    eax,[ebx+0x3]
1003a3f2:	jne    0x1003a41c
1003a3f4:	mov    eax,DWORD PTR [edi+0x7c]
1003a3f7:	xor    ecx,ecx
1003a3f9:	test   eax,eax
1003a3fb:	mov    ch,BYTE PTR [ebx+0x4]
1003a3fe:	mov    cl,BYTE PTR [ebx+0x5]
1003a401:	je     0x1003a43d
1003a403:	cmp    ecx,0xffff
1003a409:	je     0x1003a410
1003a40b:	cmp    ecx,DWORD PTR [eax+0x4]
1003a40e:	jne    0x1003a43d
1003a410:	mov    ecx,0x1
1003a415:	mov    eax,0x3
1003a41a:	jmp    0x1003a447
1003a41c:	cmp    cl,0x64
1003a41f:	jne    0x1003a462
1003a421:	xor    eax,eax
1003a423:	mov    ah,BYTE PTR [ebx+0x4]
1003a426:	mov    al,BYTE PTR [ebx+0x5]
1003a429:	add    eax,eax
1003a42b:	cmp    eax,DWORD PTR [esp+0x108]
1003a432:	jge    0x1003a43d
1003a434:	mov    ecx,DWORD PTR [edi+0xc]
1003a437:	cmp    DWORD PTR [ecx+eax*4],0x0
1003a43b:	jge    0x1003a410
1003a43d:	xor    ecx,ecx
1003a43f:	xor    eax,eax
1003a441:	mov    ah,BYTE PTR [ebx+0x1]
1003a444:	mov    al,BYTE PTR [ebx+0x2]
1003a447:	add    ebx,eax
1003a449:	test   ecx,ecx
1003a44b:	jne    0x1003c026
1003a451:	cmp    BYTE PTR [ebx],0x54
1003a454:	je     0x1003c026
1003a45a:	add    ebx,0x3
1003a45d:	jmp    0x1003a39c
1003a462:	cmp    cl,0x66
1003a465:	jne    0x1003a473
1003a467:	xor    edx,edx
1003a469:	mov    dh,BYTE PTR [ebx+0x1]
1003a46c:	mov    dl,BYTE PTR [ebx+0x2]
1003a46f:	add    ebx,edx
1003a471:	jmp    0x1003a451
1003a473:	mov    ecx,DWORD PTR [esp+0x11c]
1003a47a:	mov    edx,DWORD PTR [esp+0x110]
1003a481:	add    ecx,0x1
1003a484:	push   ecx
1003a485:	mov    ecx,DWORD PTR [esp+0x10c]
1003a48c:	push   0x1
1003a48e:	push   0x0
1003a490:	push   edx
1003a491:	push   edi
1003a492:	push   ecx
1003a493:	push   esi
1003a494:	push   eax
1003a495:	push   ebp
1003a496:	call   0x1003a330
1003a49b:	add    esp,0x24
1003a49e:	cmp    eax,0x1
1003a4a1:	je     0x1003c004
1003a4a7:	test   eax,eax
1003a4a9:	je     0x1003a4b6
1003a4ab:	cmp    eax,0xfffffc1c
1003a4b0:	jne    0x1003ce36
1003a4b6:	xor    edx,edx
1003a4b8:	mov    dh,BYTE PTR [ebx+0x1]
1003a4bb:	mov    dl,BYTE PTR [ebx+0x2]
1003a4be:	add    ebx,edx
1003a4c0:	jmp    0x1003a451
1003a4c2:	mov    ebx,DWORD PTR [edi+0x7c]
1003a4c5:	test   ebx,ebx
1003a4c7:	je     0x1003c56a
1003a4cd:	cmp    DWORD PTR [ebx+0x4],0x0
1003a4d1:	jne    0x1003c56a
1003a4d7:	mov    eax,DWORD PTR [ebx]
1003a4d9:	mov    DWORD PTR [edi+0x7c],eax
1003a4dc:	mov    ecx,DWORD PTR [ebx+0x14]
1003a4df:	mov    edx,DWORD PTR [ebx+0x10]
1003a4e2:	mov    eax,DWORD PTR [edi+0xc]
1003a4e5:	add    ecx,ecx
1003a4e7:	add    ecx,ecx
1003a4e9:	push   ecx
1003a4ea:	push   edx
1003a4eb:	push   eax
1003a4ec:	call   0x100456c0
1003a4f1:	mov    ecx,DWORD PTR [ebx+0xc]
1003a4f4:	mov    edx,DWORD PTR [esp+0x34]
1003a4f8:	mov    ebx,DWORD PTR [ebx+0x8]
1003a4fb:	add    esp,0xc
1003a4fe:	mov    DWORD PTR [esp+0x104],ecx
1003a505:	mov    DWORD PTR [esp+0x110],edx
1003a50c:	jmp    0x1003a39c
1003a511:	movzx  eax,BYTE PTR [ebx+0x1]
1003a515:	mov    DWORD PTR [esp+0x110],eax
1003a51c:	add    ebx,0x2
1003a51f:	jmp    0x1003a39c
1003a524:	mov    esi,DWORD PTR [esp+0x11c]
1003a52b:	add    esi,0x1
1003a52e:	mov    ecx,DWORD PTR [esp+0x110]
1003a535:	mov    edx,DWORD PTR [esp+0x108]
1003a53c:	mov    eax,DWORD PTR [esp+0x104]
1003a543:	push   esi
1003a544:	push   0x0
1003a546:	push   0x0
1003a548:	push   ecx
1003a549:	push   edi
1003a54a:	push   edx
1003a54b:	push   eax
1003a54c:	lea    ecx,[ebx+0x3]
1003a54f:	push   ecx
1003a550:	push   ebp
1003a551:	call   0x1003a330
1003a556:	add    esp,0x24
1003a559:	cmp    eax,0x1
1003a55c:	je     0x1003a57c
1003a55e:	test   eax,eax
1003a560:	je     0x1003a56d
1003a562:	cmp    eax,0xfffffc1c
1003a567:	jne    0x1003ce36
1003a56d:	xor    edx,edx
1003a56f:	mov    dh,BYTE PTR [ebx+0x1]
1003a572:	mov    dl,BYTE PTR [ebx+0x2]
1003a575:	add    ebx,edx
1003a577:	cmp    BYTE PTR [ebx],0x54
1003a57a:	je     0x1003a52e
1003a57c:	cmp    BYTE PTR [ebx],0x55
1003a57f:	je     0x1003c50f
1003a585:	test   BYTE PTR [esp+0x118],0x1
1003a58d:	jne    0x1003c584
1003a593:	xor    eax,eax
1003a595:	mov    ah,BYTE PTR [ebx+0x1]
1003a598:	mov    al,BYTE PTR [ebx+0x2]
1003a59b:	add    ebx,eax
1003a59d:	cmp    BYTE PTR [ebx],0x54
1003a5a0:	je     0x1003a593
1003a5a2:	mov    ecx,DWORD PTR [edi+0x68]
1003a5a5:	add    ebx,0x3
1003a5a8:	mov    DWORD PTR [esp+0x108],ecx
1003a5af:	jmp    0x1003a39c
1003a5b4:	mov    esi,DWORD PTR [esp+0x11c]
1003a5bb:	add    esi,0x1
1003a5be:	mov    edx,DWORD PTR [esp+0x110]
1003a5c5:	mov    eax,DWORD PTR [esp+0x108]
1003a5cc:	mov    ecx,DWORD PTR [esp+0x104]
1003a5d3:	push   esi
1003a5d4:	push   0x0
1003a5d6:	push   0x0
1003a5d8:	push   edx
1003a5d9:	push   edi
1003a5da:	push   eax
1003a5db:	push   ecx
1003a5dc:	lea    edx,[ebx+0x3]
1003a5df:	push   edx
1003a5e0:	push   ebp
1003a5e1:	call   0x1003a330
1003a5e6:	add    esp,0x24
1003a5e9:	cmp    eax,0x1
1003a5ec:	je     0x1003c50f
1003a5f2:	test   eax,eax
1003a5f4:	je     0x1003a601
1003a5f6:	cmp    eax,0xfffffc1c
1003a5fb:	jne    0x1003ce36
1003a601:	xor    eax,eax
1003a603:	mov    ah,BYTE PTR [ebx+0x1]
1003a606:	mov    al,BYTE PTR [ebx+0x2]
1003a609:	add    ebx,eax
1003a60b:	cmp    BYTE PTR [ebx],0x54
1003a60e:	je     0x1003a5be
1003a610:	test   BYTE PTR [esp+0x118],0x1
1003a618:	jne    0x1003c584
1003a61e:	add    ebx,0x3
1003a621:	jmp    0x1003a39c
1003a626:	xor    ecx,ecx
1003a628:	mov    ch,BYTE PTR [ebx+0x1]
1003a62b:	mov    cl,BYTE PTR [ebx+0x2]
1003a62e:	sub    ebp,ecx
1003a630:	cmp    ebp,DWORD PTR [edi+0x58]
1003a633:	jb     0x1003c50f
1003a639:	add    ebx,0x3
1003a63c:	jmp    0x1003a39c
1003a641:	mov    ecx,DWORD PTR ds:0x10080d50
1003a647:	test   ecx,ecx
1003a649:	je     0x1003a6d5
1003a64f:	movzx  edx,BYTE PTR [ebx+0x1]
1003a653:	mov    eax,DWORD PTR [edi+0xc]
1003a656:	mov    DWORD PTR [esp+0x58],eax
1003a65a:	mov    eax,DWORD PTR [edi+0x58]
1003a65d:	mov    DWORD PTR [esp+0x54],edx
1003a661:	mov    edx,DWORD PTR [edi+0x5c]
1003a664:	sub    edx,eax
1003a666:	mov    DWORD PTR [esp+0x60],edx
1003a66a:	sub    esi,eax
1003a66c:	mov    DWORD PTR [esp+0x5c],eax
1003a670:	mov    edx,ebp
1003a672:	sub    edx,eax
1003a674:	xor    eax,eax
1003a676:	mov    ah,BYTE PTR [ebx+0x2]
1003a679:	mov    DWORD PTR [esp+0x68],edx
1003a67d:	xor    edx,edx
1003a67f:	mov    dh,BYTE PTR [ebx+0x4]
1003a682:	mov    DWORD PTR [esp+0x50],0x1
1003a68a:	mov    DWORD PTR [esp+0x64],esi
1003a68e:	mov    al,BYTE PTR [ebx+0x3]
1003a691:	mov    dl,BYTE PTR [ebx+0x5]
1003a694:	mov    DWORD PTR [esp+0x78],eax
1003a698:	mov    eax,DWORD PTR [esp+0x108]
1003a69f:	mov    DWORD PTR [esp+0x7c],edx
1003a6a3:	cdq    
1003a6a4:	sub    eax,edx
1003a6a6:	mov    edx,DWORD PTR [edi+0x80]
1003a6ac:	sar    eax,1
1003a6ae:	mov    DWORD PTR [esp+0x6c],eax
1003a6b2:	mov    eax,DWORD PTR [edi+0x6c]
1003a6b5:	mov    DWORD PTR [esp+0x70],eax
1003a6b9:	lea    eax,[esp+0x50]
1003a6bd:	push   eax
1003a6be:	mov    DWORD PTR [esp+0x78],edx
1003a6c2:	call   ecx
1003a6c4:	add    esp,0x4
1003a6c7:	test   eax,eax
1003a6c9:	jg     0x1003c50f
1003a6cf:	jl     0x1003ce36
1003a6d5:	add    ebx,0x6
1003a6d8:	jmp    0x1003a39c
1003a6dd:	mov    esi,DWORD PTR [esp+0x11c]
1003a6e4:	mov    DWORD PTR [esp+0x1c],ebx
1003a6e8:	mov    DWORD PTR [esp+0x24],ebp
1003a6ec:	add    esi,0x1
1003a6ef:	mov    ecx,DWORD PTR [esp+0x114]
1003a6f6:	mov    edx,DWORD PTR [esp+0x110]
1003a6fd:	mov    eax,DWORD PTR [esp+0x108]
1003a704:	push   esi
1003a705:	push   0x0
1003a707:	push   ecx
1003a708:	mov    ecx,DWORD PTR [esp+0x110]
1003a70f:	push   edx
1003a710:	push   edi
1003a711:	push   eax
1003a712:	push   ecx
1003a713:	lea    edx,[ebx+0x3]
1003a716:	push   edx
1003a717:	push   ebp
1003a718:	call   0x1003a330
1003a71d:	add    esp,0x24
1003a720:	cmp    eax,0x1
1003a723:	je     0x1003a743
1003a725:	test   eax,eax
1003a727:	je     0x1003a734
1003a729:	cmp    eax,0xfffffc1c
1003a72e:	jne    0x1003ce36
1003a734:	xor    eax,eax
1003a736:	mov    ah,BYTE PTR [ebx+0x1]
1003a739:	mov    al,BYTE PTR [ebx+0x2]
1003a73c:	add    ebx,eax
1003a73e:	cmp    BYTE PTR [ebx],0x54
1003a741:	je     0x1003a6ef
1003a743:	mov    al,BYTE PTR [ebx]
1003a745:	cmp    al,0x5d
1003a747:	je     0x1003a751
1003a749:	cmp    al,0x54
1003a74b:	jne    0x1003c50f
1003a751:	xor    ecx,ecx
1003a753:	mov    ch,BYTE PTR [ebx+0x1]
1003a756:	mov    cl,BYTE PTR [ebx+0x2]
1003a759:	add    ebx,ecx
1003a75b:	cmp    BYTE PTR [ebx],0x54
1003a75e:	je     0x1003a751
1003a760:	cmp    BYTE PTR [ebx],0x55
1003a763:	mov    ecx,DWORD PTR [edi+0x68]
1003a766:	mov    ebp,DWORD PTR [edi+0x64]
1003a769:	mov    DWORD PTR [esp+0x108],ecx
1003a770:	je     0x1003a77c
1003a772:	cmp    ebp,DWORD PTR [esp+0x24]
1003a776:	jne    0x1003c141
1003a77c:	add    ebx,0x3
1003a77f:	jmp    0x1003a39c
1003a784:	xor    edx,edx
1003a786:	mov    dh,BYTE PTR [ebx+0x1]
1003a789:	mov    dl,BYTE PTR [ebx+0x2]
1003a78c:	add    ebx,edx
1003a78e:	cmp    BYTE PTR [ebx],0x54
1003a791:	je     0x1003a784
1003a793:	jmp    0x1003a39c
1003a798:	mov    eax,DWORD PTR [esp+0x11c]
1003a79f:	mov    ecx,DWORD PTR [esp+0x114]
1003a7a6:	mov    edx,DWORD PTR [esp+0x110]
1003a7ad:	add    eax,0x1
1003a7b0:	push   eax
1003a7b1:	mov    eax,DWORD PTR [esp+0x10c]
1003a7b8:	push   0x0
1003a7ba:	push   ecx
1003a7bb:	push   edx
1003a7bc:	push   edi
1003a7bd:	push   eax
1003a7be:	push   esi
1003a7bf:	add    ebx,0x1
1003a7c2:	push   ebx
1003a7c3:	push   ebp
1003a7c4:	call   0x1003a330
1003a7c9:	add    esp,0x24
1003a7cc:	test   eax,eax
1003a7ce:	jne    0x1003ce36
1003a7d4:	xor    ecx,ecx
1003a7d6:	mov    ch,BYTE PTR [ebx+0x1]
1003a7d9:	mov    cl,BYTE PTR [ebx+0x2]
1003a7dc:	add    ebx,ecx
1003a7de:	cmp    BYTE PTR [ebx],0x54
1003a7e1:	je     0x1003a7d4
1003a7e3:	add    ebx,0x3
1003a7e6:	jmp    0x1003a39c
1003a7eb:	add    ebx,0x1
1003a7ee:	mov    eax,ebx
1003a7f0:	xor    edx,edx
1003a7f2:	mov    dh,BYTE PTR [eax+0x1]
1003a7f5:	mov    dl,BYTE PTR [eax+0x2]
1003a7f8:	add    eax,edx
1003a7fa:	cmp    BYTE PTR [eax],0x54
1003a7fd:	je     0x1003a7f0
1003a7ff:	mov    ecx,DWORD PTR [esp+0x11c]
1003a806:	mov    edx,DWORD PTR [esp+0x114]
1003a80d:	add    ecx,0x1
1003a810:	push   ecx
1003a811:	mov    ecx,DWORD PTR [esp+0x114]
1003a818:	push   0x0
1003a81a:	push   edx
1003a81b:	mov    edx,DWORD PTR [esp+0x114]
1003a822:	push   ecx
1003a823:	push   edi
1003a824:	push   edx
1003a825:	push   esi
1003a826:	add    eax,0x3
1003a829:	push   eax
1003a82a:	push   ebp
1003a82b:	call   0x1003a330
1003a830:	add    esp,0x24
1003a833:	test   eax,eax
1003a835:	jne    0x1003ce36
1003a83b:	jmp    0x1003a39c
1003a840:	add    ebx,0x1
1003a843:	xor    eax,eax
1003a845:	mov    ah,BYTE PTR [ebx+0x1]
1003a848:	mov    al,BYTE PTR [ebx+0x2]
1003a84b:	add    ebx,eax
1003a84d:	cmp    BYTE PTR [ebx],0x54
1003a850:	je     0x1003a843
1003a852:	add    ebx,0x3
1003a855:	jmp    0x1003a39c
1003a85a:	xor    edx,edx
1003a85c:	mov    dh,BYTE PTR [ebx+0x1]
1003a85f:	mov    ecx,ebx
1003a861:	mov    dl,BYTE PTR [ebx+0x2]
1003a864:	sub    ecx,edx
1003a866:	mov    al,BYTE PTR [ecx]
1003a868:	cmp    al,0x61
1003a86a:	mov    DWORD PTR [esp+0x1c],ecx
1003a86e:	jb     0x1003a885
1003a870:	mov    esi,DWORD PTR [esp+0x114]
1003a877:	mov    edx,DWORD PTR [esi+0x4]
1003a87a:	mov    esi,DWORD PTR [esi]
1003a87c:	mov    DWORD PTR [esp+0x114],esi
1003a883:	jmp    0x1003a887
1003a885:	xor    edx,edx
1003a887:	cmp    al,0x58
1003a889:	je     0x1003c772
1003a88f:	cmp    al,0x59
1003a891:	je     0x1003c772
1003a897:	cmp    al,0x5a
1003a899:	je     0x1003c772
1003a89f:	cmp    al,0x5b
1003a8a1:	je     0x1003c772
1003a8a7:	cmp    al,0x5d
1003a8a9:	je     0x1003c772
1003a8af:	cmp    al,0x5f
1003a8b1:	je     0x1003a8bb
1003a8b3:	cmp    al,0x62
1003a8b5:	jne    0x1003a956
1003a8bb:	xor    eax,eax
1003a8bd:	mov    ah,BYTE PTR [ecx+0x3]
1003a8c0:	mov    al,BYTE PTR [ecx+0x4]
1003a8c3:	mov    ecx,eax
1003a8c5:	lea    eax,[ecx+ecx*1]
1003a8c8:	cmp    eax,DWORD PTR [edi+0x14]
1003a8cb:	mov    DWORD PTR [esp+0x20],ecx
1003a8cf:	mov    DWORD PTR [edi+0x6c],ecx
1003a8d2:	jl     0x1003a8dd
1003a8d4:	mov    DWORD PTR [edi+0x2c],0x1
1003a8db:	jmp    0x1003a910
1003a8dd:	mov    esi,DWORD PTR [edi+0x10]
1003a8e0:	mov    ecx,DWORD PTR [edi+0xc]
1003a8e3:	sub    esi,DWORD PTR [esp+0x20]
1003a8e7:	mov    esi,DWORD PTR [ecx+esi*4]
1003a8ea:	mov    DWORD PTR [ecx+eax*4],esi
1003a8ed:	mov    esi,DWORD PTR [edi+0xc]
1003a8f0:	mov    ecx,ebp
1003a8f2:	sub    ecx,DWORD PTR [edi+0x58]
1003a8f5:	cmp    DWORD PTR [esp+0x108],eax
1003a8fc:	mov    DWORD PTR [esi+eax*4+0x4],ecx
1003a900:	mov    ecx,DWORD PTR [esp+0x20]
1003a904:	jg     0x1003a910
1003a906:	add    eax,0x2
1003a909:	mov    DWORD PTR [esp+0x108],eax
1003a910:	mov    esi,DWORD PTR [edi+0x7c]
1003a913:	test   esi,esi
1003a915:	je     0x1003a956
1003a917:	cmp    DWORD PTR [esi+0x4],ecx
1003a91a:	jne    0x1003a956
1003a91c:	mov    edx,DWORD PTR [esi]
1003a91e:	mov    DWORD PTR [edi+0x7c],edx
1003a921:	mov    ecx,DWORD PTR [esi+0x14]
1003a924:	mov    eax,DWORD PTR [esi+0xc]
1003a927:	mov    edx,DWORD PTR [esi+0x10]
1003a92a:	add    ecx,ecx
1003a92c:	add    ecx,ecx
1003a92e:	push   ecx
1003a92f:	mov    DWORD PTR [esp+0x108],eax
1003a936:	mov    eax,DWORD PTR [edi+0xc]
1003a939:	push   edx
1003a93a:	push   eax
1003a93b:	call   0x10045180
1003a940:	mov    ecx,DWORD PTR [esp+0x34]
1003a944:	mov    ebx,DWORD PTR [esi+0x8]
1003a947:	add    esp,0xc
1003a94a:	mov    DWORD PTR [esp+0x110],ecx
1003a951:	jmp    0x1003a39c
1003a956:	cmp    BYTE PTR [ebx],0x55
1003a959:	mov    esi,DWORD PTR [esp+0x28]
1003a95d:	mov    DWORD PTR [esp+0x110],esi
1003a964:	je     0x1003a96e
1003a966:	cmp    ebp,edx
1003a968:	jne    0x1003c1d5
1003a96e:	add    ebx,0x3
1003a971:	jmp    0x1003a39c
1003a976:	cmp    DWORD PTR [edi+0x30],0x0
1003a97a:	je     0x1003a985
1003a97c:	cmp    ebp,DWORD PTR [edi+0x58]
1003a97f:	je     0x1003c50f
1003a985:	test   BYTE PTR [esp+0x110],0x2
1003a98d:	je     0x1003aa06
1003a98f:	mov    eax,DWORD PTR [edi+0x58]
1003a992:	cmp    ebp,eax
1003a994:	je     0x1003a9fe
1003a996:	cmp    ebp,DWORD PTR [edi+0x5c]
1003a999:	je     0x1003c50f
1003a99f:	mov    ecx,DWORD PTR [edi+0x18]
1003a9a2:	test   ecx,ecx
1003a9a4:	je     0x1003a9d0
1003a9a6:	cmp    ebp,eax
1003a9a8:	jbe    0x1003c50f
1003a9ae:	push   0x0
1003a9b0:	push   ecx
1003a9b1:	lea    edx,[edi+0x1c]
1003a9b4:	mov    esi,eax
1003a9b6:	mov    ecx,ebp
1003a9b8:	call   0x10042c60
1003a9bd:	add    esp,0x8
1003a9c0:	test   eax,eax
1003a9c2:	je     0x1003c50f
1003a9c8:	add    ebx,0x1
1003a9cb:	jmp    0x1003a39c
1003a9d0:	mov    ecx,DWORD PTR [edi+0x1c]
1003a9d3:	lea    edx,[ecx+eax*1]
1003a9d6:	cmp    ebp,edx
1003a9d8:	jb     0x1003c50f
1003a9de:	mov    esi,ebp
1003a9e0:	sub    esi,ecx
1003a9e2:	mov    al,BYTE PTR [esi]
1003a9e4:	cmp    al,BYTE PTR [edi+0x20]
1003a9e7:	jne    0x1003c50f
1003a9ed:	cmp    ecx,0x1
1003a9f0:	je     0x1003a9fe
1003a9f2:	mov    cl,BYTE PTR [esi+0x1]
1003a9f5:	cmp    cl,BYTE PTR [edi+0x21]
1003a9f8:	jne    0x1003c50f
1003a9fe:	add    ebx,0x1
1003aa01:	jmp    0x1003a39c
1003aa06:	cmp    ebp,DWORD PTR [edi+0x58]
1003aa09:	jne    0x1003c50f
1003aa0f:	add    ebx,0x1
1003aa12:	jmp    0x1003a39c
1003aa17:	mov    edx,DWORD PTR [edi+0x70]
1003aa1a:	add    edx,DWORD PTR [edi+0x58]
1003aa1d:	cmp    ebp,edx
1003aa1f:	jne    0x1003c50f
1003aa25:	add    ebx,0x1
1003aa28:	jmp    0x1003a39c
1003aa2d:	mov    DWORD PTR [esp+0x104],ebp
1003aa34:	add    ebx,0x1
1003aa37:	jmp    0x1003a39c
1003aa3c:	test   BYTE PTR [esp+0x110],0x2
1003aa44:	je     0x1003aaba
1003aa46:	mov    eax,DWORD PTR [edi+0x5c]
1003aa49:	cmp    ebp,eax
1003aa4b:	jae    0x1003aaa8
1003aa4d:	mov    ecx,DWORD PTR [edi+0x18]
1003aa50:	test   ecx,ecx
1003aa52:	je     0x1003aa82
1003aa54:	mov    edi,DWORD PTR [esp+0x10c]
1003aa5b:	push   ecx
1003aa5c:	add    edi,0x1c
1003aa5f:	xor    edx,edx
1003aa61:	mov    ecx,ebp
1003aa63:	call   0x10042ba0
1003aa68:	add    esp,0x4
1003aa6b:	test   eax,eax
1003aa6d:	je     0x1003c50f
1003aa73:	mov    edi,DWORD PTR [esp+0x10c]
1003aa7a:	add    ebx,0x1
1003aa7d:	jmp    0x1003a39c
1003aa82:	mov    ecx,DWORD PTR [edi+0x1c]
1003aa85:	sub    eax,ecx
1003aa87:	cmp    ebp,eax
1003aa89:	ja     0x1003c50f
1003aa8f:	mov    al,BYTE PTR [ebp+0x0]
1003aa92:	cmp    al,BYTE PTR [edi+0x20]
1003aa95:	jne    0x1003c50f
1003aa9b:	cmp    ecx,0x1
1003aa9e:	je     0x1003aab2
1003aaa0:	mov    cl,BYTE PTR [ebp+0x1]
1003aaa3:	cmp    cl,BYTE PTR [edi+0x21]
1003aaa6:	jmp    0x1003aaac
1003aaa8:	cmp    DWORD PTR [edi+0x34],0x0
1003aaac:	jne    0x1003c50f
1003aab2:	add    ebx,0x1
1003aab5:	jmp    0x1003a39c
1003aaba:	cmp    DWORD PTR [edi+0x34],0x0
1003aabe:	jne    0x1003c50f
1003aac4:	cmp    DWORD PTR [edi+0x40],0x0
1003aac8:	jne    0x1003ab50
1003aace:	mov    eax,DWORD PTR [edi+0x5c]
1003aad1:	cmp    ebp,eax
1003aad3:	je     0x1003ab48
1003aad5:	mov    ecx,DWORD PTR [edi+0x18]
1003aad8:	test   ecx,ecx
1003aada:	je     0x1003ab0e
1003aadc:	cmp    ebp,eax
1003aade:	jae    0x1003c50f
1003aae4:	mov    esi,DWORD PTR [esp+0x10c]
1003aaeb:	add    esi,0x1c
1003aaee:	push   ecx
1003aaef:	xor    edx,edx
1003aaf1:	mov    edi,esi
1003aaf3:	mov    ecx,ebp
1003aaf5:	call   0x10042ba0
1003aafa:	add    esp,0x4
1003aafd:	test   eax,eax
1003aaff:	je     0x1003c50f
1003ab05:	mov    edi,DWORD PTR [esp+0x10c]
1003ab0c:	jmp    0x1003ab3b
1003ab0e:	mov    ecx,DWORD PTR [edi+0x1c]
1003ab11:	lea    esi,[edi+0x1c]
1003ab14:	sub    eax,ecx
1003ab16:	cmp    ebp,eax
1003ab18:	ja     0x1003c50f
1003ab1e:	mov    dl,BYTE PTR [ebp+0x0]
1003ab21:	cmp    dl,BYTE PTR [edi+0x20]
1003ab24:	jne    0x1003c50f
1003ab2a:	cmp    ecx,0x1
1003ab2d:	je     0x1003ab3b
1003ab2f:	mov    al,BYTE PTR [ebp+0x1]
1003ab32:	cmp    al,BYTE PTR [edi+0x21]
1003ab35:	jne    0x1003c50f
1003ab3b:	mov    ecx,DWORD PTR [edi+0x5c]
1003ab3e:	sub    ecx,DWORD PTR [esi]
1003ab40:	cmp    ebp,ecx
1003ab42:	jne    0x1003c50f
1003ab48:	add    ebx,0x1
1003ab4b:	jmp    0x1003a39c
1003ab50:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ab53:	jb     0x1003c50f
1003ab59:	add    ebx,0x1
1003ab5c:	jmp    0x1003a39c
1003ab61:	cmp    ebp,DWORD PTR [edi+0x58]
1003ab64:	je     0x1003ab7a
1003ab66:	movzx  edx,BYTE PTR [ebp-0x1]
1003ab6a:	mov    eax,DWORD PTR [edi+0x28]
1003ab6d:	test   BYTE PTR [edx+eax*1],0x10
1003ab71:	je     0x1003ab7a
1003ab73:	mov    esi,0x1
1003ab78:	jmp    0x1003ab7c
1003ab7a:	xor    esi,esi
1003ab7c:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ab7f:	jae    0x1003ab95
1003ab81:	movzx  ecx,BYTE PTR [ebp+0x0]
1003ab85:	mov    edx,DWORD PTR [edi+0x28]
1003ab88:	test   BYTE PTR [ecx+edx*1],0x10
1003ab8c:	je     0x1003ab95
1003ab8e:	mov    eax,0x1
1003ab93:	jmp    0x1003ab97
1003ab95:	xor    eax,eax
1003ab97:	mov    cl,BYTE PTR [ebx]
1003ab99:	add    ebx,0x1
1003ab9c:	cmp    cl,0x5
1003ab9f:	jne    0x1003abac
1003aba1:	xor    edx,edx
1003aba3:	cmp    eax,esi
1003aba5:	sete   dl
1003aba8:	mov    eax,edx
1003abaa:	jmp    0x1003abb5
1003abac:	xor    ecx,ecx
1003abae:	cmp    eax,esi
1003abb0:	setne  cl
1003abb3:	mov    eax,ecx
1003abb5:	test   eax,eax
1003abb7:	je     0x1003a39c
1003abbd:	xor    eax,eax
1003abbf:	pop    edi
1003abc0:	pop    esi
1003abc1:	pop    ebp
1003abc2:	pop    ebx
1003abc3:	add    esp,0xe8
1003abc9:	ret    
1003abca:	mov    ecx,DWORD PTR [edi+0x18]
1003abcd:	test   ecx,ecx
1003abcf:	je     0x1003ac00
1003abd1:	mov    eax,DWORD PTR [edi+0x5c]
1003abd4:	cmp    ebp,eax
1003abd6:	jae    0x1003ac29
1003abd8:	mov    edi,DWORD PTR [esp+0x10c]
1003abdf:	push   ecx
1003abe0:	add    edi,0x1c
1003abe3:	xor    edx,edx
1003abe5:	mov    ecx,ebp
1003abe7:	call   0x10042ba0
1003abec:	add    esp,0x4
1003abef:	test   eax,eax
1003abf1:	jne    0x1003c50f
1003abf7:	mov    edi,DWORD PTR [esp+0x10c]
1003abfe:	jmp    0x1003ac29
1003ac00:	mov    eax,DWORD PTR [edi+0x1c]
1003ac03:	mov    edx,DWORD PTR [edi+0x5c]
1003ac06:	sub    edx,eax
1003ac08:	cmp    ebp,edx
1003ac0a:	ja     0x1003ac29
1003ac0c:	mov    cl,BYTE PTR [ebp+0x0]
1003ac0f:	cmp    cl,BYTE PTR [edi+0x20]
1003ac12:	jne    0x1003ac29
1003ac14:	cmp    eax,0x1
1003ac17:	je     0x1003c50f
1003ac1d:	mov    dl,BYTE PTR [ebp+0x1]
1003ac20:	cmp    dl,BYTE PTR [edi+0x21]
1003ac23:	je     0x1003c50f
1003ac29:	mov    eax,ebp
1003ac2b:	add    ebp,0x1
1003ac2e:	cmp    eax,DWORD PTR [edi+0x5c]
1003ac31:	jae    0x1003c50f
1003ac37:	add    ebx,0x1
1003ac3a:	jmp    0x1003a39c
1003ac3f:	mov    ecx,ebp
1003ac41:	add    ebp,0x1
1003ac44:	cmp    ecx,DWORD PTR [edi+0x5c]
1003ac47:	jae    0x1003c50f
1003ac4d:	add    ebx,0x1
1003ac50:	jmp    0x1003a39c
1003ac55:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ac58:	jae    0x1003c50f
1003ac5e:	movzx  eax,BYTE PTR [ebp+0x0]
1003ac62:	mov    edx,DWORD PTR [edi+0x28]
1003ac65:	add    ebp,0x1
1003ac68:	test   BYTE PTR [eax+edx*1],0x4
1003ac6c:	jne    0x1003c50f
1003ac72:	add    ebx,0x1
1003ac75:	jmp    0x1003a39c
1003ac7a:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ac7d:	jae    0x1003c50f
1003ac83:	movzx  eax,BYTE PTR [ebp+0x0]
1003ac87:	mov    ecx,DWORD PTR [edi+0x28]
1003ac8a:	add    ebp,0x1
1003ac8d:	test   BYTE PTR [eax+ecx*1],0x4
1003ac91:	je     0x1003c50f
1003ac97:	add    ebx,0x1
1003ac9a:	jmp    0x1003a39c
1003ac9f:	cmp    ebp,DWORD PTR [edi+0x5c]
1003aca2:	jae    0x1003c50f
1003aca8:	movzx  eax,BYTE PTR [ebp+0x0]
1003acac:	mov    edx,DWORD PTR [edi+0x28]
1003acaf:	add    ebp,0x1
1003acb2:	test   BYTE PTR [eax+edx*1],0x1
1003acb6:	jne    0x1003c50f
1003acbc:	add    ebx,0x1
1003acbf:	jmp    0x1003a39c
1003acc4:	cmp    ebp,DWORD PTR [edi+0x5c]
1003acc7:	jae    0x1003c50f
1003accd:	movzx  eax,BYTE PTR [ebp+0x0]
1003acd1:	mov    ecx,DWORD PTR [edi+0x28]
1003acd4:	add    ebp,0x1
1003acd7:	test   BYTE PTR [eax+ecx*1],0x1
1003acdb:	je     0x1003c50f
1003ace1:	add    ebx,0x1
1003ace4:	jmp    0x1003a39c
1003ace9:	cmp    ebp,DWORD PTR [edi+0x5c]
1003acec:	jae    0x1003c50f
1003acf2:	movzx  eax,BYTE PTR [ebp+0x0]
1003acf6:	mov    edx,DWORD PTR [edi+0x28]
1003acf9:	add    ebp,0x1
1003acfc:	test   BYTE PTR [eax+edx*1],0x10
1003ad00:	jne    0x1003c50f
1003ad06:	add    ebx,0x1
1003ad09:	jmp    0x1003a39c
1003ad0e:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ad11:	jae    0x1003c50f
1003ad17:	movzx  eax,BYTE PTR [ebp+0x0]
1003ad1b:	mov    ecx,DWORD PTR [edi+0x28]
1003ad1e:	add    ebp,0x1
1003ad21:	test   BYTE PTR [eax+ecx*1],0x10
1003ad25:	je     0x1003c50f
1003ad2b:	add    ebx,0x1
1003ad2e:	jmp    0x1003a39c
1003ad33:	mov    ecx,DWORD PTR [edi+0x5c]
1003ad36:	cmp    ebp,ecx
1003ad38:	jae    0x1003c50f
1003ad3e:	movzx  eax,BYTE PTR [ebp+0x0]
1003ad42:	add    ebp,0x1
1003ad45:	cmp    eax,0xd
1003ad48:	ja     0x1003ad71
1003ad4a:	je     0x1003ad5c
1003ad4c:	cmp    eax,0xa
1003ad4f:	je     0x1003ad98
1003ad51:	jbe    0x1003c50f
1003ad57:	cmp    eax,0xc
1003ad5a:	jmp    0x1003ad88
1003ad5c:	cmp    ebp,ecx
1003ad5e:	jae    0x1003ad98
1003ad60:	cmp    BYTE PTR [ebp+0x0],0xa
1003ad64:	jne    0x1003ad98
1003ad66:	add    ebp,0x1
1003ad69:	add    ebx,0x1
1003ad6c:	jmp    0x1003a39c
1003ad71:	cmp    eax,0x85
1003ad76:	je     0x1003ad8e
1003ad78:	cmp    eax,0x2027
1003ad7d:	jbe    0x1003c50f
1003ad83:	cmp    eax,0x2029
1003ad88:	ja     0x1003c50f
1003ad8e:	cmp    DWORD PTR [edi+0x50],0x0
1003ad92:	jne    0x1003c50f
1003ad98:	add    ebx,0x1
1003ad9b:	jmp    0x1003a39c
1003ada0:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ada3:	jae    0x1003c50f
1003ada9:	movzx  eax,BYTE PTR [ebp+0x0]
1003adad:	add    ebp,0x1
1003adb0:	cmp    eax,0x180e
1003adb5:	ja     0x1003addf
1003adb7:	je     0x1003c50f
1003adbd:	cmp    eax,0xa0
1003adc2:	ja     0x1003add8
1003adc4:	je     0x1003c50f
1003adca:	cmp    eax,0x9
1003adcd:	je     0x1003c50f
1003add3:	cmp    eax,0x20
1003add6:	jmp    0x1003ae0a
1003add8:	cmp    eax,0x1680
1003addd:	jmp    0x1003ae0a
1003addf:	cmp    eax,0x205f
1003ade4:	ja     0x1003ae05
1003ade6:	je     0x1003c50f
1003adec:	cmp    eax,0x2000
1003adf1:	jb     0x1003ae10
1003adf3:	cmp    eax,0x200a
1003adf8:	jbe    0x1003c50f
1003adfe:	cmp    eax,0x202f
1003ae03:	jmp    0x1003ae0a
1003ae05:	cmp    eax,0x3000
1003ae0a:	je     0x1003c50f
1003ae10:	add    ebx,0x1
1003ae13:	jmp    0x1003a39c
1003ae18:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ae1b:	jae    0x1003c50f
1003ae21:	movzx  eax,BYTE PTR [ebp+0x0]
1003ae25:	add    ebp,0x1
1003ae28:	cmp    eax,0x180e
1003ae2d:	ja     0x1003ae4b
1003ae2f:	je     0x1003ae78
1003ae31:	cmp    eax,0xa0
1003ae36:	ja     0x1003ae44
1003ae38:	je     0x1003ae78
1003ae3a:	cmp    eax,0x9
1003ae3d:	je     0x1003ae78
1003ae3f:	cmp    eax,0x20
1003ae42:	jmp    0x1003ae72
1003ae44:	cmp    eax,0x1680
1003ae49:	jmp    0x1003ae72
1003ae4b:	cmp    eax,0x205f
1003ae50:	ja     0x1003ae6d
1003ae52:	je     0x1003ae78
1003ae54:	cmp    eax,0x2000
1003ae59:	jb     0x1003c50f
1003ae5f:	cmp    eax,0x200a
1003ae64:	jbe    0x1003ae78
1003ae66:	cmp    eax,0x202f
1003ae6b:	jmp    0x1003ae72
1003ae6d:	cmp    eax,0x3000
1003ae72:	jne    0x1003c50f
1003ae78:	add    ebx,0x1
1003ae7b:	jmp    0x1003a39c
1003ae80:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ae83:	jae    0x1003c50f
1003ae89:	movzx  eax,BYTE PTR [ebp+0x0]
1003ae8d:	add    ebp,0x1
1003ae90:	cmp    eax,0x85
1003ae95:	ja     0x1003aea7
1003ae97:	je     0x1003c50f
1003ae9d:	cmp    eax,0xa
1003aea0:	jb     0x1003aeb9
1003aea2:	cmp    eax,0xd
1003aea5:	jmp    0x1003aeb3
1003aea7:	cmp    eax,0x2028
1003aeac:	jb     0x1003aeb9
1003aeae:	cmp    eax,0x2029
1003aeb3:	jbe    0x1003c50f
1003aeb9:	add    ebx,0x1
1003aebc:	jmp    0x1003a39c
1003aec1:	cmp    ebp,DWORD PTR [edi+0x5c]
1003aec4:	jae    0x1003c50f
1003aeca:	movzx  eax,BYTE PTR [ebp+0x0]
1003aece:	add    ebp,0x1
1003aed1:	cmp    eax,0x85
1003aed6:	ja     0x1003aee8
1003aed8:	je     0x1003aefe
1003aeda:	cmp    eax,0xa
1003aedd:	jb     0x1003c50f
1003aee3:	cmp    eax,0xd
1003aee6:	jmp    0x1003aef8
1003aee8:	cmp    eax,0x2028
1003aeed:	jb     0x1003c50f
1003aef3:	cmp    eax,0x2029
1003aef8:	ja     0x1003c50f
1003aefe:	add    ebx,0x1
1003af01:	jmp    0x1003a39c
1003af06:	xor    eax,eax
1003af08:	mov    ah,BYTE PTR [ebx+0x1]
1003af0b:	add    ebx,0x3
1003af0e:	mov    al,BYTE PTR [ebx-0x1]
1003af11:	add    eax,eax
1003af13:	cmp    eax,DWORD PTR [esp+0x108]
1003af1a:	mov    DWORD PTR [esp+0x24],eax
1003af1e:	jge    0x1003af34
1003af20:	mov    edx,DWORD PTR [edi+0xc]
1003af23:	mov    ecx,DWORD PTR [edx+eax*4]
1003af26:	test   ecx,ecx
1003af28:	lea    eax,[edx+eax*4]
1003af2b:	jl     0x1003af34
1003af2d:	mov    esi,DWORD PTR [eax+0x4]
1003af30:	sub    esi,ecx
1003af32:	jmp    0x1003af46
1003af34:	cmp    DWORD PTR [edi+0x3c],0x0
1003af38:	je     0x1003af3e
1003af3a:	xor    esi,esi
1003af3c:	jmp    0x1003af46
1003af3e:	mov    esi,DWORD PTR [edi+0x5c]
1003af41:	sub    esi,ebp
1003af43:	add    esi,0x1
1003af46:	mov    cl,BYTE PTR [ebx]
1003af48:	movzx  eax,cl
1003af4b:	lea    edx,[eax-0x46]
1003af4e:	cmp    edx,0x7
1003af51:	ja     0x1003b0f7
1003af57:	movzx  edx,BYTE PTR [edx+0x1003cfd4]
1003af5e:	jmp    DWORD PTR [edx*4+0x1003cfcc]
1003af65:	add    eax,0xffffffba
1003af68:	mov    ecx,eax
1003af6a:	and    ecx,0x1
1003af6d:	mov    DWORD PTR [esp+0x20],ecx
1003af71:	movsx  ecx,BYTE PTR [eax+0x1006f510]
1003af78:	movsx  eax,BYTE PTR [eax+0x1006f518]
1003af7f:	add    ebx,0x1
1003af82:	test   eax,eax
1003af84:	mov    DWORD PTR [esp+0x1c],ecx
1003af88:	mov    DWORD PTR [esp+0x14],eax
1003af8c:	jne    0x1003afcb
1003af8e:	mov    DWORD PTR [esp+0x14],0x7fffffff
1003af96:	jmp    0x1003afcb
1003af98:	xor    edx,edx
1003af9a:	cmp    cl,0x4d
1003af9d:	sete   dl
1003afa0:	xor    eax,eax
1003afa2:	mov    ah,BYTE PTR [ebx+0x1]
1003afa5:	mov    DWORD PTR [esp+0x20],edx
1003afa9:	mov    al,BYTE PTR [ebx+0x2]
1003afac:	mov    DWORD PTR [esp+0x1c],eax
1003afb0:	xor    eax,eax
1003afb2:	mov    ah,BYTE PTR [ebx+0x3]
1003afb5:	mov    al,BYTE PTR [ebx+0x4]
1003afb8:	test   eax,eax
1003afba:	mov    DWORD PTR [esp+0x14],eax
1003afbe:	jne    0x1003afc8
1003afc0:	mov    DWORD PTR [esp+0x14],0x7fffffff
1003afc8:	add    ebx,0x5
1003afcb:	test   esi,esi
1003afcd:	je     0x1003a39c
1003afd3:	mov    eax,0x1
1003afd8:	cmp    DWORD PTR [esp+0x1c],eax
1003afdc:	mov    DWORD PTR [esp+0x18],eax
1003afe0:	jl     0x1003b016
1003afe2:	mov    ecx,DWORD PTR [esp+0x110]
1003afe9:	mov    edx,DWORD PTR [esp+0x24]
1003afed:	push   ecx
1003afee:	push   ebp
1003afef:	mov    ecx,edi
1003aff1:	mov    eax,esi
1003aff3:	call   0x1003a2b0
1003aff8:	add    esp,0x8
1003affb:	test   eax,eax
1003affd:	je     0x1003c50f
1003b003:	mov    eax,DWORD PTR [esp+0x18]
1003b007:	add    eax,0x1
1003b00a:	add    ebp,esi
1003b00c:	cmp    eax,DWORD PTR [esp+0x1c]
1003b010:	mov    DWORD PTR [esp+0x18],eax
1003b014:	jle    0x1003afe2
1003b016:	mov    eax,DWORD PTR [esp+0x1c]
1003b01a:	mov    ecx,DWORD PTR [esp+0x14]
1003b01e:	cmp    eax,ecx
1003b020:	je     0x1003a39c
1003b026:	cmp    DWORD PTR [esp+0x20],0x0
1003b02b:	je     0x1003c78f
1003b031:	mov    ecx,DWORD PTR [esp+0x110]
1003b038:	mov    edx,eax
1003b03a:	mov    eax,DWORD PTR [esp+0x11c]
1003b041:	add    eax,0x1
1003b044:	push   eax
1003b045:	push   0x0
1003b047:	mov    DWORD PTR [esp+0x24],eax
1003b04b:	mov    eax,DWORD PTR [esp+0x11c]
1003b052:	push   eax
1003b053:	mov    eax,DWORD PTR [esp+0x110]
1003b05a:	push   ecx
1003b05b:	push   edi
1003b05c:	mov    DWORD PTR [esp+0x2c],edx
1003b060:	mov    edx,DWORD PTR [esp+0x11c]
1003b067:	push   edx
1003b068:	push   eax
1003b069:	push   ebx
1003b06a:	push   ebp
1003b06b:	call   0x1003a330
1003b070:	add    esp,0x24
1003b073:	test   eax,eax
1003b075:	jne    0x1003ce36
1003b07b:	jmp    0x1003b080
1003b07d:	lea    ecx,[ecx+0x0]
1003b080:	mov    ecx,DWORD PTR [esp+0x14]
1003b084:	cmp    DWORD PTR [esp+0x18],ecx
1003b088:	jge    0x1003c50f
1003b08e:	mov    edx,DWORD PTR [esp+0x110]
1003b095:	push   edx
1003b096:	mov    edx,DWORD PTR [esp+0x28]
1003b09a:	push   ebp
1003b09b:	mov    ecx,edi
1003b09d:	mov    eax,esi
1003b09f:	call   0x1003a2b0
1003b0a4:	add    esp,0x8
1003b0a7:	test   eax,eax
1003b0a9:	je     0x1003c50f
1003b0af:	mov    eax,DWORD PTR [esp+0x1c]
1003b0b3:	mov    ecx,DWORD PTR [esp+0x114]
1003b0ba:	mov    edx,DWORD PTR [esp+0x110]
1003b0c1:	add    DWORD PTR [esp+0x18],0x1
1003b0c6:	push   eax
1003b0c7:	mov    eax,DWORD PTR [esp+0x10c]
1003b0ce:	push   0x0
1003b0d0:	push   ecx
1003b0d1:	mov    ecx,DWORD PTR [esp+0x110]
1003b0d8:	push   edx
1003b0d9:	push   edi
1003b0da:	push   eax
1003b0db:	push   ecx
1003b0dc:	add    ebp,esi
1003b0de:	push   ebx
1003b0df:	push   ebp
1003b0e0:	call   0x1003a330
1003b0e5:	add    esp,0x24
1003b0e8:	test   eax,eax
1003b0ea:	je     0x1003b080
1003b0ec:	pop    edi
1003b0ed:	pop    esi
1003b0ee:	pop    ebp
1003b0ef:	pop    ebx
1003b0f0:	add    esp,0xe8
1003b0f6:	ret    
1003b0f7:	mov    edx,DWORD PTR [esp+0x110]
1003b0fe:	push   edx
1003b0ff:	mov    edx,DWORD PTR [esp+0x28]
1003b103:	push   ebp
1003b104:	mov    ecx,edi
1003b106:	mov    eax,esi
1003b108:	call   0x1003a2b0
1003b10d:	add    esp,0x8
1003b110:	test   eax,eax
1003b112:	je     0x1003c50f
1003b118:	add    ebp,esi
1003b11a:	jmp    0x1003a39c
1003b11f:	mov    cl,BYTE PTR [ebx+0x21]
1003b122:	lea    eax,[ebx+0x1]
1003b125:	add    ebx,0x21
1003b128:	mov    DWORD PTR [esp+0x24],eax
1003b12c:	movzx  eax,cl
1003b12f:	lea    esi,[eax-0x46]
1003b132:	cmp    esi,0x7
1003b135:	ja     0x1003b1a9
1003b13b:	movzx  esi,BYTE PTR [esi+0x1003cfe4]
1003b142:	jmp    DWORD PTR [esi*4+0x1003cfdc]
1003b149:	movsx  esi,BYTE PTR [eax+0x1006f4d2]
1003b150:	movsx  ecx,BYTE PTR [eax+0x1006f4ca]
1003b157:	add    eax,0xffffffba
1003b15a:	mov    edx,eax
1003b15c:	add    ebx,0x1
1003b15f:	and    edx,0x1
1003b162:	test   esi,esi
1003b164:	mov    DWORD PTR [esp+0x1c],ecx
1003b168:	mov    DWORD PTR [esp+0x14],esi
1003b16c:	jne    0x1003b1b6
1003b16e:	mov    esi,0x7fffffff
1003b173:	jmp    0x1003b1b2
1003b175:	xor    edx,edx
1003b177:	cmp    cl,0x4d
1003b17a:	sete   dl
1003b17d:	xor    ecx,ecx
1003b17f:	mov    ch,BYTE PTR [ebx+0x3]
1003b182:	xor    eax,eax
1003b184:	mov    ah,BYTE PTR [ebx+0x1]
1003b187:	mov    cl,BYTE PTR [ebx+0x4]
1003b18a:	mov    al,BYTE PTR [ebx+0x2]
1003b18d:	mov    esi,ecx
1003b18f:	test   esi,esi
1003b191:	mov    DWORD PTR [esp+0x1c],eax
1003b195:	mov    DWORD PTR [esp+0x14],ecx
1003b199:	jne    0x1003b1a4
1003b19b:	mov    esi,0x7fffffff
1003b1a0:	mov    DWORD PTR [esp+0x14],esi
1003b1a4:	add    ebx,0x5
1003b1a7:	jmp    0x1003b1b6
1003b1a9:	mov    esi,0x1
1003b1ae:	mov    DWORD PTR [esp+0x1c],esi
1003b1b2:	mov    DWORD PTR [esp+0x14],esi
1003b1b6:	mov    eax,0x1
1003b1bb:	cmp    DWORD PTR [esp+0x1c],eax
1003b1bf:	mov    DWORD PTR [esp+0x18],eax
1003b1c3:	jl     0x1003b208
1003b1c5:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b1c8:	jae    0x1003c50f
1003b1ce:	movzx  esi,BYTE PTR [ebp+0x0]
1003b1d2:	mov    ecx,esi
1003b1d4:	and    ecx,0x7
1003b1d7:	mov    eax,0x1
1003b1dc:	shl    eax,cl
1003b1de:	mov    ecx,DWORD PTR [esp+0x24]
1003b1e2:	shr    esi,0x3
1003b1e5:	mov    cl,BYTE PTR [esi+ecx*1]
1003b1e8:	add    ebp,0x1
1003b1eb:	test   cl,al
1003b1ed:	je     0x1003c50f
1003b1f3:	mov    eax,DWORD PTR [esp+0x18]
1003b1f7:	add    eax,0x1
1003b1fa:	cmp    eax,DWORD PTR [esp+0x1c]
1003b1fe:	mov    DWORD PTR [esp+0x18],eax
1003b202:	jle    0x1003b1c5
1003b204:	mov    esi,DWORD PTR [esp+0x14]
1003b208:	mov    eax,DWORD PTR [esp+0x1c]
1003b20c:	cmp    eax,esi
1003b20e:	je     0x1003a39c
1003b214:	test   edx,edx
1003b216:	mov    DWORD PTR [esp+0x18],eax
1003b21a:	je     0x1003c82e
1003b220:	mov    eax,DWORD PTR [esp+0x11c]
1003b227:	mov    ecx,DWORD PTR [esp+0x110]
1003b22e:	mov    edx,DWORD PTR [esp+0x108]
1003b235:	add    eax,0x1
1003b238:	push   eax
1003b239:	push   0x0
1003b23b:	mov    DWORD PTR [esp+0x24],eax
1003b23f:	mov    eax,DWORD PTR [esp+0x11c]
1003b246:	push   eax
1003b247:	mov    eax,DWORD PTR [esp+0x110]
1003b24e:	push   ecx
1003b24f:	push   edi
1003b250:	push   edx
1003b251:	push   eax
1003b252:	push   ebx
1003b253:	push   ebp
1003b254:	call   0x1003a330
1003b259:	add    esp,0x24
1003b25c:	test   eax,eax
1003b25e:	jne    0x1003ce36
1003b264:	cmp    DWORD PTR [esp+0x18],esi
1003b268:	jge    0x1003c50f
1003b26e:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b271:	jae    0x1003c50f
1003b277:	movzx  eax,BYTE PTR [ebp+0x0]
1003b27b:	mov    ecx,eax
1003b27d:	and    ecx,0x7
1003b280:	mov    edx,0x1
1003b285:	shl    edx,cl
1003b287:	mov    ecx,DWORD PTR [esp+0x24]
1003b28b:	shr    eax,0x3
1003b28e:	mov    al,BYTE PTR [eax+ecx*1]
1003b291:	add    ebp,0x1
1003b294:	test   al,dl
1003b296:	je     0x1003c50f
1003b29c:	mov    ecx,DWORD PTR [esp+0x1c]
1003b2a0:	mov    edx,DWORD PTR [esp+0x114]
1003b2a7:	mov    eax,DWORD PTR [esp+0x110]
1003b2ae:	add    DWORD PTR [esp+0x18],0x1
1003b2b3:	push   ecx
1003b2b4:	mov    ecx,DWORD PTR [esp+0x10c]
1003b2bb:	push   0x0
1003b2bd:	push   edx
1003b2be:	mov    edx,DWORD PTR [esp+0x110]
1003b2c5:	push   eax
1003b2c6:	push   edi
1003b2c7:	push   ecx
1003b2c8:	push   edx
1003b2c9:	push   ebx
1003b2ca:	push   ebp
1003b2cb:	call   0x1003a330
1003b2d0:	add    esp,0x24
1003b2d3:	test   eax,eax
1003b2d5:	je     0x1003b264
1003b2d7:	pop    edi
1003b2d8:	pop    esi
1003b2d9:	pop    ebp
1003b2da:	pop    ebx
1003b2db:	add    esp,0xe8
1003b2e1:	ret    
1003b2e2:	mov    edx,DWORD PTR [edi+0x5c]
1003b2e5:	sub    edx,ebp
1003b2e7:	cmp    edx,0x1
1003b2ea:	jl     0x1003c50f
1003b2f0:	mov    al,BYTE PTR [ebp+0x0]
1003b2f3:	add    ebp,0x1
1003b2f6:	cmp    BYTE PTR [ebx+0x1],al
1003b2f9:	jne    0x1003c50f
1003b2ff:	add    ebx,0x2
1003b302:	jmp    0x1003a39c
1003b307:	mov    ecx,DWORD PTR [edi+0x5c]
1003b30a:	sub    ecx,ebp
1003b30c:	cmp    ecx,0x1
1003b30f:	jl     0x1003c50f
1003b315:	movzx  ecx,BYTE PTR [ebp+0x0]
1003b319:	mov    eax,DWORD PTR [edi+0x24]
1003b31c:	movzx  edx,BYTE PTR [ebx+0x1]
1003b320:	mov    cl,BYTE PTR [ecx+eax*1]
1003b323:	add    ebp,0x1
1003b326:	cmp    BYTE PTR [edx+eax*1],cl
1003b329:	jne    0x1003c50f
1003b32f:	add    ebx,0x2
1003b332:	jmp    0x1003a39c
1003b337:	xor    eax,eax
1003b339:	mov    ah,BYTE PTR [ebx+0x1]
1003b33c:	add    ebx,0x3
1003b33f:	mov    al,BYTE PTR [ebx-0x1]
1003b342:	mov    esi,eax
1003b344:	jmp    0x1003b3c2
1003b349:	mov    DWORD PTR [esp+0x1c],0x1
1003b351:	xor    ecx,ecx
1003b353:	mov    ch,BYTE PTR [ebx+0x1]
1003b356:	xor    edx,edx
1003b358:	xor    eax,eax
1003b35a:	cmp    BYTE PTR [ebx],0x26
1003b35d:	sete   dl
1003b360:	add    ebx,0x3
1003b363:	mov    cl,BYTE PTR [ebx-0x1]
1003b366:	mov    DWORD PTR [esp+0x20],edx
1003b36a:	mov    esi,ecx
1003b36c:	jmp    0x1003b3c2
1003b36e:	xor    eax,eax
1003b370:	mov    DWORD PTR [esp+0x1c],0x1
1003b378:	add    ebx,0x1
1003b37b:	jmp    0x1003b3bd
1003b37d:	mov    eax,0x1
1003b382:	mov    DWORD PTR [esp+0x1c],eax
1003b386:	add    ebx,eax
1003b388:	jmp    0x1003b3bd
1003b38a:	mov    esi,0x1
1003b38f:	xor    eax,eax
1003b391:	mov    DWORD PTR [esp+0x1c],esi
1003b395:	add    ebx,esi
1003b397:	jmp    0x1003b3c2
1003b399:	movzx  ecx,BYTE PTR [ebx]
1003b39c:	movsx  esi,BYTE PTR [ecx+0x1006f4f9]
1003b3a3:	movsx  eax,BYTE PTR [ecx+0x1006f4f1]
1003b3aa:	sub    ecx,0x1f
1003b3ad:	mov    edx,ecx
1003b3af:	and    edx,0x1
1003b3b2:	add    ebx,0x1
1003b3b5:	test   esi,esi
1003b3b7:	mov    DWORD PTR [esp+0x20],edx
1003b3bb:	jne    0x1003b3c2
1003b3bd:	mov    esi,0x7fffffff
1003b3c2:	mov    ecx,DWORD PTR [edi+0x5c]
1003b3c5:	sub    ecx,ebp
1003b3c7:	cmp    eax,ecx
1003b3c9:	jg     0x1003c50f
1003b3cf:	movzx  ecx,BYTE PTR [ebx]
1003b3d2:	add    ebx,0x1
1003b3d5:	test   BYTE PTR [esp+0x110],0x1
1003b3dd:	mov    DWORD PTR [esp+0x14],ecx
1003b3e1:	mov    DWORD PTR [esp+0x18],0x1
1003b3e9:	je     0x1003b4cc
1003b3ef:	cmp    eax,0x1
1003b3f2:	mov    edx,DWORD PTR [esp+0x14]
1003b3f6:	mov    ecx,DWORD PTR [edi+0x24]
1003b3f9:	movzx  ecx,BYTE PTR [ecx+edx*1]
1003b3fd:	mov    DWORD PTR [esp+0x14],ecx
1003b401:	jl     0x1003b42a
1003b403:	movzx  edx,BYTE PTR [ebp+0x0]
1003b407:	mov    ecx,DWORD PTR [edi+0x24]
1003b40a:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003b40e:	add    ebp,0x1
1003b411:	cmp    DWORD PTR [esp+0x14],ecx
1003b415:	jne    0x1003c50f
1003b41b:	mov    ecx,DWORD PTR [esp+0x18]
1003b41f:	add    ecx,0x1
1003b422:	cmp    ecx,eax
1003b424:	mov    DWORD PTR [esp+0x18],ecx
1003b428:	jle    0x1003b403
1003b42a:	cmp    eax,esi
1003b42c:	je     0x1003a39c
1003b432:	cmp    DWORD PTR [esp+0x20],0x0
1003b437:	jne    0x1003c8c7
1003b43d:	cmp    eax,esi
1003b43f:	mov    DWORD PTR [esp+0x20],ebp
1003b443:	jge    0x1003b465
1003b445:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b448:	jae    0x1003b465
1003b44a:	movzx  edx,BYTE PTR [ebp+0x0]
1003b44e:	mov    ecx,DWORD PTR [edi+0x24]
1003b451:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003b455:	cmp    DWORD PTR [esp+0x14],ecx
1003b459:	jne    0x1003b465
1003b45b:	add    eax,0x1
1003b45e:	add    ebp,0x1
1003b461:	cmp    eax,esi
1003b463:	jl     0x1003b445
1003b465:	cmp    DWORD PTR [esp+0x1c],0x0
1003b46a:	jne    0x1003a39c
1003b470:	cmp    ebp,DWORD PTR [esp+0x20]
1003b474:	jb     0x1003b4bf
1003b476:	mov    esi,DWORD PTR [esp+0x11c]
1003b47d:	add    esi,0x1
1003b480:	mov    edx,DWORD PTR [esp+0x114]
1003b487:	mov    eax,DWORD PTR [esp+0x110]
1003b48e:	mov    ecx,DWORD PTR [esp+0x108]
1003b495:	push   esi
1003b496:	push   0x0
1003b498:	push   edx
1003b499:	mov    edx,DWORD PTR [esp+0x110]
1003b4a0:	push   eax
1003b4a1:	push   edi
1003b4a2:	push   ecx
1003b4a3:	push   edx
1003b4a4:	push   ebx
1003b4a5:	push   ebp
1003b4a6:	call   0x1003a330
1003b4ab:	add    esp,0x24
1003b4ae:	sub    ebp,0x1
1003b4b1:	test   eax,eax
1003b4b3:	jne    0x1003ce36
1003b4b9:	cmp    ebp,DWORD PTR [esp+0x20]
1003b4bd:	jae    0x1003b480
1003b4bf:	xor    eax,eax
1003b4c1:	pop    edi
1003b4c2:	pop    esi
1003b4c3:	pop    ebp
1003b4c4:	pop    ebx
1003b4c5:	add    esp,0xe8
1003b4cb:	ret    
1003b4cc:	cmp    eax,0x1
1003b4cf:	jl     0x1003b4f7
1003b4d1:	mov    edx,DWORD PTR [esp+0x14]
1003b4d5:	movzx  ecx,BYTE PTR [ebp+0x0]
1003b4d9:	add    ebp,0x1
1003b4dc:	cmp    edx,ecx
1003b4de:	jne    0x1003c50f
1003b4e4:	mov    ecx,DWORD PTR [esp+0x18]
1003b4e8:	add    ecx,0x1
1003b4eb:	cmp    ecx,eax
1003b4ed:	mov    DWORD PTR [esp+0x18],ecx
1003b4f1:	jle    0x1003b4d5
1003b4f3:	mov    edx,DWORD PTR [esp+0x20]
1003b4f7:	cmp    eax,esi
1003b4f9:	je     0x1003a39c
1003b4ff:	test   edx,edx
1003b501:	jne    0x1003c981
1003b507:	cmp    eax,esi
1003b509:	mov    ecx,ebp
1003b50b:	mov    DWORD PTR [esp+0x20],ecx
1003b50f:	jge    0x1003b52a
1003b511:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b514:	jae    0x1003b52a
1003b516:	movzx  edx,BYTE PTR [ebp+0x0]
1003b51a:	cmp    DWORD PTR [esp+0x14],edx
1003b51e:	jne    0x1003b52a
1003b520:	add    eax,0x1
1003b523:	add    ebp,0x1
1003b526:	cmp    eax,esi
1003b528:	jl     0x1003b511
1003b52a:	cmp    DWORD PTR [esp+0x1c],0x0
1003b52f:	jne    0x1003a39c
1003b535:	cmp    ebp,ecx
1003b537:	jb     0x1003b582
1003b539:	mov    esi,DWORD PTR [esp+0x11c]
1003b540:	add    esi,0x1
1003b543:	mov    ecx,DWORD PTR [esp+0x114]
1003b54a:	mov    edx,DWORD PTR [esp+0x110]
1003b551:	mov    eax,DWORD PTR [esp+0x108]
1003b558:	push   esi
1003b559:	push   0x0
1003b55b:	push   ecx
1003b55c:	mov    ecx,DWORD PTR [esp+0x110]
1003b563:	push   edx
1003b564:	push   edi
1003b565:	push   eax
1003b566:	push   ecx
1003b567:	push   ebx
1003b568:	push   ebp
1003b569:	call   0x1003a330
1003b56e:	add    esp,0x24
1003b571:	sub    ebp,0x1
1003b574:	test   eax,eax
1003b576:	jne    0x1003ce36
1003b57c:	cmp    ebp,DWORD PTR [esp+0x20]
1003b580:	jae    0x1003b543
1003b582:	xor    eax,eax
1003b584:	pop    edi
1003b585:	pop    esi
1003b586:	pop    ebp
1003b587:	pop    ebx
1003b588:	add    esp,0xe8
1003b58e:	ret    
1003b58f:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b592:	jae    0x1003c50f
1003b598:	movzx  esi,BYTE PTR [ebp+0x0]
1003b59c:	add    ebx,0x1
1003b59f:	add    ebp,0x1
1003b5a2:	test   BYTE PTR [esp+0x110],0x1
1003b5aa:	je     0x1003b5ce
1003b5ac:	mov    eax,DWORD PTR [edi+0x24]
1003b5af:	movzx  ecx,BYTE PTR [ebx]
1003b5b2:	mov    dl,BYTE PTR [eax+esi*1]
1003b5b5:	add    ebx,0x1
1003b5b8:	cmp    BYTE PTR [ecx+eax*1],dl
1003b5bb:	jne    0x1003a39c
1003b5c1:	xor    eax,eax
1003b5c3:	pop    edi
1003b5c4:	pop    esi
1003b5c5:	pop    ebp
1003b5c6:	pop    ebx
1003b5c7:	add    esp,0xe8
1003b5cd:	ret    
1003b5ce:	movzx  eax,BYTE PTR [ebx]
1003b5d1:	add    ebx,0x1
1003b5d4:	cmp    eax,esi
1003b5d6:	jne    0x1003a39c
1003b5dc:	xor    eax,eax
1003b5de:	pop    edi
1003b5df:	pop    esi
1003b5e0:	pop    ebp
1003b5e1:	pop    ebx
1003b5e2:	add    esp,0xe8
1003b5e8:	ret    
1003b5e9:	xor    ecx,ecx
1003b5eb:	mov    ch,BYTE PTR [ebx+0x1]
1003b5ee:	add    ebx,0x3
1003b5f1:	mov    cl,BYTE PTR [ebx-0x1]
1003b5f4:	mov    esi,ecx
1003b5f6:	mov    eax,esi
1003b5f8:	jmp    0x1003b68a
1003b5fd:	xor    edx,edx
1003b5ff:	mov    dh,BYTE PTR [ebx+0x1]
1003b602:	xor    eax,eax
1003b604:	mov    dl,BYTE PTR [ebx+0x2]
1003b607:	mov    esi,edx
1003b609:	xor    edx,edx
1003b60b:	cmp    BYTE PTR [ebx],0x33
1003b60e:	sete   dl
1003b611:	add    ebx,0x3
1003b614:	mov    DWORD PTR [esp+0x20],edx
1003b618:	jmp    0x1003b68a
1003b61d:	xor    eax,eax
1003b61f:	mov    DWORD PTR [esp+0x1c],0x1
1003b627:	add    ebx,0x1
1003b62a:	jmp    0x1003b685
1003b62c:	mov    eax,0x1
1003b631:	mov    DWORD PTR [esp+0x1c],eax
1003b635:	add    ebx,eax
1003b637:	jmp    0x1003b685
1003b639:	mov    esi,0x1
1003b63e:	xor    eax,eax
1003b640:	mov    DWORD PTR [esp+0x1c],esi
1003b644:	add    ebx,esi
1003b646:	jmp    0x1003b68a
1003b648:	xor    ecx,ecx
1003b64a:	mov    ch,BYTE PTR [ebx+0x1]
1003b64d:	xor    eax,eax
1003b64f:	mov    DWORD PTR [esp+0x1c],0x1
1003b657:	add    ebx,0x3
1003b65a:	mov    cl,BYTE PTR [ebx-0x1]
1003b65d:	mov    esi,ecx
1003b65f:	jmp    0x1003b68a
1003b661:	movzx  ecx,BYTE PTR [ebx]
1003b664:	movsx  esi,BYTE PTR [ecx+0x1006f4ec]
1003b66b:	movsx  eax,BYTE PTR [ecx+0x1006f4e4]
1003b672:	sub    ecx,0x2c
1003b675:	mov    edx,ecx
1003b677:	and    edx,0x1
1003b67a:	add    ebx,0x1
1003b67d:	test   esi,esi
1003b67f:	mov    DWORD PTR [esp+0x20],edx
1003b683:	jne    0x1003b68a
1003b685:	mov    esi,0x7fffffff
1003b68a:	mov    ecx,DWORD PTR [edi+0x5c]
1003b68d:	sub    ecx,ebp
1003b68f:	cmp    eax,ecx
1003b691:	jg     0x1003c50f
1003b697:	movzx  ecx,BYTE PTR [ebx]
1003b69a:	add    ebx,0x1
1003b69d:	test   BYTE PTR [esp+0x110],0x1
1003b6a5:	mov    DWORD PTR [esp+0x14],ecx
1003b6a9:	mov    DWORD PTR [esp+0x18],0x1
1003b6b1:	je     0x1003b799
1003b6b7:	cmp    eax,0x1
1003b6ba:	mov    edx,DWORD PTR [esp+0x14]
1003b6be:	mov    ecx,DWORD PTR [edi+0x24]
1003b6c1:	movzx  ecx,BYTE PTR [ecx+edx*1]
1003b6c5:	mov    DWORD PTR [esp+0x14],ecx
1003b6c9:	jl     0x1003b6f7
1003b6cb:	jmp    0x1003b6d0
1003b6cd:	lea    ecx,[ecx+0x0]
1003b6d0:	movzx  edx,BYTE PTR [ebp+0x0]
1003b6d4:	mov    ecx,DWORD PTR [edi+0x24]
1003b6d7:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003b6db:	add    ebp,0x1
1003b6de:	cmp    DWORD PTR [esp+0x14],ecx
1003b6e2:	je     0x1003c50f
1003b6e8:	mov    ecx,DWORD PTR [esp+0x18]
1003b6ec:	add    ecx,0x1
1003b6ef:	cmp    ecx,eax
1003b6f1:	mov    DWORD PTR [esp+0x18],ecx
1003b6f5:	jle    0x1003b6d0
1003b6f7:	cmp    eax,esi
1003b6f9:	je     0x1003a39c
1003b6ff:	cmp    DWORD PTR [esp+0x20],0x0
1003b704:	jne    0x1003ca3a
1003b70a:	cmp    eax,esi
1003b70c:	mov    DWORD PTR [esp+0x20],ebp
1003b710:	jge    0x1003b732
1003b712:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b715:	jae    0x1003b732
1003b717:	movzx  edx,BYTE PTR [ebp+0x0]
1003b71b:	mov    ecx,DWORD PTR [edi+0x24]
1003b71e:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003b722:	cmp    DWORD PTR [esp+0x14],ecx
1003b726:	je     0x1003b732
1003b728:	add    eax,0x1
1003b72b:	add    ebp,0x1
1003b72e:	cmp    eax,esi
1003b730:	jl     0x1003b712
1003b732:	cmp    DWORD PTR [esp+0x1c],0x0
1003b737:	jne    0x1003a39c
1003b73d:	cmp    ebp,DWORD PTR [esp+0x20]
1003b741:	jb     0x1003b78c
1003b743:	mov    esi,DWORD PTR [esp+0x11c]
1003b74a:	add    esi,0x1
1003b74d:	mov    edx,DWORD PTR [esp+0x114]
1003b754:	mov    eax,DWORD PTR [esp+0x110]
1003b75b:	mov    ecx,DWORD PTR [esp+0x108]
1003b762:	push   esi
1003b763:	push   0x0
1003b765:	push   edx
1003b766:	mov    edx,DWORD PTR [esp+0x110]
1003b76d:	push   eax
1003b76e:	push   edi
1003b76f:	push   ecx
1003b770:	push   edx
1003b771:	push   ebx
1003b772:	push   ebp
1003b773:	call   0x1003a330
1003b778:	add    esp,0x24
1003b77b:	test   eax,eax
1003b77d:	jne    0x1003ce36
1003b783:	sub    ebp,0x1
1003b786:	cmp    ebp,DWORD PTR [esp+0x20]
1003b78a:	jae    0x1003b74d
1003b78c:	xor    eax,eax
1003b78e:	pop    edi
1003b78f:	pop    esi
1003b790:	pop    ebp
1003b791:	pop    ebx
1003b792:	add    esp,0xe8
1003b798:	ret    
1003b799:	cmp    eax,0x1
1003b79c:	jl     0x1003b7c4
1003b79e:	mov    edx,DWORD PTR [esp+0x14]
1003b7a2:	movzx  ecx,BYTE PTR [ebp+0x0]
1003b7a6:	add    ebp,0x1
1003b7a9:	cmp    edx,ecx
1003b7ab:	je     0x1003c50f
1003b7b1:	mov    ecx,DWORD PTR [esp+0x18]
1003b7b5:	add    ecx,0x1
1003b7b8:	cmp    ecx,eax
1003b7ba:	mov    DWORD PTR [esp+0x18],ecx
1003b7be:	jle    0x1003b7a2
1003b7c0:	mov    edx,DWORD PTR [esp+0x20]
1003b7c4:	cmp    eax,esi
1003b7c6:	je     0x1003a39c
1003b7cc:	test   edx,edx
1003b7ce:	jne    0x1003caf3
1003b7d4:	cmp    eax,esi
1003b7d6:	mov    ecx,ebp
1003b7d8:	mov    DWORD PTR [esp+0x20],ecx
1003b7dc:	jge    0x1003b7f7
1003b7de:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b7e1:	jae    0x1003b7f7
1003b7e3:	movzx  edx,BYTE PTR [ebp+0x0]
1003b7e7:	cmp    DWORD PTR [esp+0x14],edx
1003b7eb:	je     0x1003b7f7
1003b7ed:	add    eax,0x1
1003b7f0:	add    ebp,0x1
1003b7f3:	cmp    eax,esi
1003b7f5:	jl     0x1003b7de
1003b7f7:	cmp    DWORD PTR [esp+0x1c],0x0
1003b7fc:	jne    0x1003a39c
1003b802:	cmp    ebp,ecx
1003b804:	jb     0x1003b84f
1003b806:	mov    esi,DWORD PTR [esp+0x11c]
1003b80d:	add    esi,0x1
1003b810:	mov    ecx,DWORD PTR [esp+0x114]
1003b817:	mov    edx,DWORD PTR [esp+0x110]
1003b81e:	mov    eax,DWORD PTR [esp+0x108]
1003b825:	push   esi
1003b826:	push   0x0
1003b828:	push   ecx
1003b829:	mov    ecx,DWORD PTR [esp+0x110]
1003b830:	push   edx
1003b831:	push   edi
1003b832:	push   eax
1003b833:	push   ecx
1003b834:	push   ebx
1003b835:	push   ebp
1003b836:	call   0x1003a330
1003b83b:	add    esp,0x24
1003b83e:	test   eax,eax
1003b840:	jne    0x1003ce36
1003b846:	sub    ebp,0x1
1003b849:	cmp    ebp,DWORD PTR [esp+0x20]
1003b84d:	jae    0x1003b810
1003b84f:	xor    eax,eax
1003b851:	pop    edi
1003b852:	pop    esi
1003b853:	pop    ebp
1003b854:	pop    ebx
1003b855:	add    esp,0xe8
1003b85b:	ret    
1003b85c:	xor    eax,eax
1003b85e:	mov    ah,BYTE PTR [ebx+0x1]
1003b861:	mov    DWORD PTR [esp+0x20],0x1
1003b869:	add    ebx,0x3
1003b86c:	mov    al,BYTE PTR [ebx-0x1]
1003b86f:	mov    esi,eax
1003b871:	mov    DWORD PTR [esp+0x14],esi
1003b875:	jmp    0x1003b919
1003b87a:	xor    ecx,ecx
1003b87c:	mov    ch,BYTE PTR [ebx+0x1]
1003b87f:	xor    edx,edx
1003b881:	xor    esi,esi
1003b883:	cmp    BYTE PTR [ebx],0x40
1003b886:	sete   dl
1003b889:	add    ebx,0x3
1003b88c:	mov    cl,BYTE PTR [ebx-0x1]
1003b88f:	mov    DWORD PTR [esp+0x20],edx
1003b893:	mov    DWORD PTR [esp+0x14],ecx
1003b897:	jmp    0x1003b919
1003b89c:	xor    esi,esi
1003b89e:	mov    DWORD PTR [esp+0x1c],0x1
1003b8a6:	add    ebx,0x1
1003b8a9:	jmp    0x1003b911
1003b8ae:	mov    esi,0x1
1003b8b3:	mov    DWORD PTR [esp+0x1c],esi
1003b8b7:	add    ebx,esi
1003b8b9:	jmp    0x1003b911
1003b8bb:	mov    eax,0x1
1003b8c0:	xor    esi,esi
1003b8c2:	mov    DWORD PTR [esp+0x1c],eax
1003b8c6:	mov    DWORD PTR [esp+0x14],eax
1003b8ca:	add    ebx,eax
1003b8cc:	jmp    0x1003b919
1003b8ce:	xor    eax,eax
1003b8d0:	mov    ah,BYTE PTR [ebx+0x1]
1003b8d3:	xor    esi,esi
1003b8d5:	mov    DWORD PTR [esp+0x1c],0x1
1003b8dd:	add    ebx,0x3
1003b8e0:	mov    al,BYTE PTR [ebx-0x1]
1003b8e3:	mov    DWORD PTR [esp+0x14],eax
1003b8e7:	jmp    0x1003b919
1003b8e9:	movzx  eax,BYTE PTR [ebx]
1003b8ec:	movsx  esi,BYTE PTR [eax+0x1006f4d7]
1003b8f3:	sub    eax,0x39
1003b8f6:	mov    ecx,eax
1003b8f8:	movsx  eax,BYTE PTR [eax+0x1006f518]
1003b8ff:	and    ecx,0x1
1003b902:	add    ebx,0x1
1003b905:	test   eax,eax
1003b907:	mov    DWORD PTR [esp+0x20],ecx
1003b90b:	mov    DWORD PTR [esp+0x14],eax
1003b90f:	jne    0x1003b919
1003b911:	mov    DWORD PTR [esp+0x14],0x7fffffff
1003b919:	mov    edx,DWORD PTR [edi+0x5c]
1003b91c:	movzx  eax,BYTE PTR [ebx]
1003b91f:	mov    ecx,edx
1003b921:	sub    ecx,ebp
1003b923:	add    ebx,0x1
1003b926:	cmp    esi,ecx
1003b928:	mov    DWORD PTR [esp+0x24],eax
1003b92c:	jg     0x1003c50f
1003b932:	test   esi,esi
1003b934:	jle    0x1003bc6c
1003b93a:	add    eax,0xfffffffa
1003b93d:	cmp    eax,0xf
1003b940:	ja     0x1003cbaa
1003b946:	jmp    DWORD PTR [eax*4+0x1003cfec]
1003b94d:	cmp    esi,0x1
1003b950:	mov    DWORD PTR [esp+0x18],0x1
1003b958:	jl     0x1003bc6c
1003b95e:	mov    edi,edi
1003b960:	mov    ecx,DWORD PTR [edi+0x18]
1003b963:	test   ecx,ecx
1003b965:	je     0x1003b996
1003b967:	mov    eax,DWORD PTR [edi+0x5c]
1003b96a:	cmp    ebp,eax
1003b96c:	jae    0x1003b9bf
1003b96e:	mov    edi,DWORD PTR [esp+0x10c]
1003b975:	push   ecx
1003b976:	add    edi,0x1c
1003b979:	xor    edx,edx
1003b97b:	mov    ecx,ebp
1003b97d:	call   0x10042ba0
1003b982:	add    esp,0x4
1003b985:	test   eax,eax
1003b987:	jne    0x1003c50f
1003b98d:	mov    edi,DWORD PTR [esp+0x10c]
1003b994:	jmp    0x1003b9bf
1003b996:	mov    eax,DWORD PTR [edi+0x1c]
1003b999:	mov    edx,DWORD PTR [edi+0x5c]
1003b99c:	sub    edx,eax
1003b99e:	cmp    ebp,edx
1003b9a0:	ja     0x1003b9bf
1003b9a2:	mov    cl,BYTE PTR [ebp+0x0]
1003b9a5:	cmp    cl,BYTE PTR [edi+0x20]
1003b9a8:	jne    0x1003b9bf
1003b9aa:	cmp    eax,0x1
1003b9ad:	je     0x1003c50f
1003b9b3:	mov    dl,BYTE PTR [ebp+0x1]
1003b9b6:	cmp    dl,BYTE PTR [edi+0x21]
1003b9b9:	je     0x1003c50f
1003b9bf:	mov    eax,DWORD PTR [esp+0x18]
1003b9c3:	add    eax,0x1
1003b9c6:	add    ebp,0x1
1003b9c9:	cmp    eax,esi
1003b9cb:	mov    DWORD PTR [esp+0x18],eax
1003b9cf:	jle    0x1003b960
1003b9d1:	jmp    0x1003bc6c
1003b9d6:	add    ebp,esi
1003b9d8:	jmp    0x1003bc6c
1003b9dd:	mov    ecx,0x1
1003b9e2:	cmp    esi,ecx
1003b9e4:	jl     0x1003bc6c
1003b9ea:	lea    ebx,[ebx+0x0]
1003b9f0:	cmp    ebp,edx
1003b9f2:	jae    0x1003c50f
1003b9f8:	movzx  eax,BYTE PTR [ebp+0x0]
1003b9fc:	sub    eax,0xa
1003b9ff:	add    ebp,0x1
1003ba02:	cmp    eax,0x7b
1003ba05:	ja     0x1003c50f
1003ba0b:	movzx  eax,BYTE PTR [eax+0x1003d03c]
1003ba12:	jmp    DWORD PTR [eax*4+0x1003d02c]
1003ba19:	cmp    ebp,edx
1003ba1b:	jae    0x1003ba32
1003ba1d:	cmp    BYTE PTR [ebp+0x0],0xa
1003ba21:	jne    0x1003ba32
1003ba23:	add    ebp,0x1
1003ba26:	jmp    0x1003ba32
1003ba28:	cmp    DWORD PTR [edi+0x50],0x0
1003ba2c:	jne    0x1003c50f
1003ba32:	add    ecx,0x1
1003ba35:	cmp    ecx,esi
1003ba37:	jle    0x1003b9f0
1003ba39:	jmp    0x1003bc6c
1003ba3e:	mov    ecx,0x1
1003ba43:	cmp    esi,ecx
1003ba45:	jl     0x1003bc6c
1003ba4b:	jmp    0x1003ba50
1003ba4d:	lea    ecx,[ecx+0x0]
1003ba50:	cmp    ebp,edx
1003ba52:	jae    0x1003c50f
1003ba58:	movzx  eax,BYTE PTR [ebp+0x0]
1003ba5c:	add    ebp,0x1
1003ba5f:	cmp    eax,0x9
1003ba62:	je     0x1003c50f
1003ba68:	cmp    eax,0x20
1003ba6b:	je     0x1003c50f
1003ba71:	cmp    eax,0xa0
1003ba76:	je     0x1003c50f
1003ba7c:	add    ecx,0x1
1003ba7f:	cmp    ecx,esi
1003ba81:	jle    0x1003ba50
1003ba83:	jmp    0x1003bc6c
1003ba88:	mov    ecx,0x1
1003ba8d:	cmp    esi,ecx
1003ba8f:	jl     0x1003bc6c
1003ba95:	cmp    ebp,edx
1003ba97:	jae    0x1003c50f
1003ba9d:	movzx  eax,BYTE PTR [ebp+0x0]
1003baa1:	add    ebp,0x1
1003baa4:	cmp    eax,0x9
1003baa7:	je     0x1003bab9
1003baa9:	cmp    eax,0x20
1003baac:	je     0x1003bab9
1003baae:	cmp    eax,0xa0
1003bab3:	jne    0x1003c50f
1003bab9:	add    ecx,0x1
1003babc:	cmp    ecx,esi
1003babe:	jle    0x1003ba95
1003bac0:	jmp    0x1003bc6c
1003bac5:	mov    ecx,0x1
1003baca:	cmp    esi,ecx
1003bacc:	jl     0x1003bc6c
1003bad2:	cmp    ebp,edx
1003bad4:	jae    0x1003c50f
1003bada:	movzx  eax,BYTE PTR [ebp+0x0]
1003bade:	add    ebp,0x1
1003bae1:	cmp    eax,0xa
1003bae4:	jl     0x1003bafa
1003bae6:	cmp    eax,0xd
1003bae9:	jle    0x1003c50f
1003baef:	cmp    eax,0x85
1003baf4:	je     0x1003c50f
1003bafa:	add    ecx,0x1
1003bafd:	cmp    ecx,esi
1003baff:	jle    0x1003bad2
1003bb01:	jmp    0x1003bc6c
1003bb06:	mov    ecx,0x1
1003bb0b:	cmp    esi,ecx
1003bb0d:	jl     0x1003bc6c
1003bb13:	cmp    ebp,edx
1003bb15:	jae    0x1003c50f
1003bb1b:	movzx  eax,BYTE PTR [ebp+0x0]
1003bb1f:	add    ebp,0x1
1003bb22:	cmp    eax,0xa
1003bb25:	jl     0x1003c50f
1003bb2b:	cmp    eax,0xd
1003bb2e:	jle    0x1003bb3b
1003bb30:	cmp    eax,0x85
1003bb35:	jne    0x1003c50f
1003bb3b:	add    ecx,0x1
1003bb3e:	cmp    ecx,esi
1003bb40:	jle    0x1003bb13
1003bb42:	jmp    0x1003bc6c
1003bb47:	mov    eax,0x1
1003bb4c:	cmp    esi,eax
1003bb4e:	jl     0x1003bc6c
1003bb54:	mov    ecx,DWORD PTR [edi+0x28]
1003bb57:	jmp    0x1003bb60
1003bb59:	lea    esp,[esp+0x0]
1003bb60:	movzx  edx,BYTE PTR [ebp+0x0]
1003bb64:	mov    dl,BYTE PTR [edx+ecx*1]
1003bb67:	and    dl,0x4
1003bb6a:	add    ebp,0x1
1003bb6d:	test   dl,dl
1003bb6f:	jne    0x1003c50f
1003bb75:	add    eax,0x1
1003bb78:	cmp    eax,esi
1003bb7a:	jle    0x1003bb60
1003bb7c:	jmp    0x1003bc6c
1003bb81:	mov    eax,0x1
1003bb86:	cmp    esi,eax
1003bb88:	jl     0x1003bc6c
1003bb8e:	mov    ecx,DWORD PTR [edi+0x28]
1003bb91:	movzx  edx,BYTE PTR [ebp+0x0]
1003bb95:	mov    dl,BYTE PTR [edx+ecx*1]
1003bb98:	and    dl,0x4
1003bb9b:	add    ebp,0x1
1003bb9e:	test   dl,dl
1003bba0:	je     0x1003c50f
1003bba6:	add    eax,0x1
1003bba9:	cmp    eax,esi
1003bbab:	jle    0x1003bb91
1003bbad:	jmp    0x1003bc6c
1003bbb2:	mov    eax,0x1
1003bbb7:	cmp    esi,eax
1003bbb9:	jl     0x1003bc6c
1003bbbf:	mov    ecx,DWORD PTR [edi+0x28]
1003bbc2:	movzx  edx,BYTE PTR [ebp+0x0]
1003bbc6:	mov    dl,BYTE PTR [edx+ecx*1]
1003bbc9:	and    dl,0x1
1003bbcc:	add    ebp,0x1
1003bbcf:	test   dl,dl
1003bbd1:	jne    0x1003c50f
1003bbd7:	add    eax,0x1
1003bbda:	cmp    eax,esi
1003bbdc:	jle    0x1003bbc2
1003bbde:	jmp    0x1003bc6c
1003bbe3:	mov    eax,0x1
1003bbe8:	cmp    esi,eax
1003bbea:	jl     0x1003bc6c
1003bbf0:	mov    ecx,DWORD PTR [edi+0x28]
1003bbf3:	movzx  edx,BYTE PTR [ebp+0x0]
1003bbf7:	mov    dl,BYTE PTR [edx+ecx*1]
1003bbfa:	and    dl,0x1
1003bbfd:	add    ebp,0x1
1003bc00:	test   dl,dl
1003bc02:	je     0x1003c50f
1003bc08:	add    eax,0x1
1003bc0b:	cmp    eax,esi
1003bc0d:	jle    0x1003bbf3
1003bc0f:	jmp    0x1003bc6c
1003bc11:	mov    eax,0x1
1003bc16:	cmp    esi,eax
1003bc18:	jl     0x1003bc6c
1003bc1a:	mov    ecx,DWORD PTR [edi+0x28]
1003bc1d:	lea    ecx,[ecx+0x0]
1003bc20:	movzx  edx,BYTE PTR [ebp+0x0]
1003bc24:	mov    dl,BYTE PTR [edx+ecx*1]
1003bc27:	and    dl,0x10
1003bc2a:	add    ebp,0x1
1003bc2d:	test   dl,dl
1003bc2f:	jne    0x1003c50f
1003bc35:	add    eax,0x1
1003bc38:	cmp    eax,esi
1003bc3a:	jle    0x1003bc20
1003bc3c:	jmp    0x1003bc6c
1003bc3e:	mov    eax,0x1
1003bc43:	cmp    esi,eax
1003bc45:	jl     0x1003bc6c
1003bc47:	mov    ecx,DWORD PTR [edi+0x28]
1003bc4a:	lea    ebx,[ebx+0x0]
1003bc50:	movzx  edx,BYTE PTR [ebp+0x0]
1003bc54:	mov    dl,BYTE PTR [edx+ecx*1]
1003bc57:	and    dl,0x10
1003bc5a:	add    ebp,0x1
1003bc5d:	test   dl,dl
1003bc5f:	je     0x1003c50f
1003bc65:	add    eax,0x1
1003bc68:	cmp    eax,esi
1003bc6a:	jle    0x1003bc50
1003bc6c:	cmp    esi,DWORD PTR [esp+0x14]
1003bc70:	je     0x1003a39c
1003bc76:	cmp    DWORD PTR [esp+0x20],0x0
1003bc7b:	jne    0x1003cbba
1003bc81:	mov    eax,DWORD PTR [esp+0x24]
1003bc85:	add    eax,0xfffffffa
1003bc88:	cmp    eax,0xf
1003bc8b:	mov    DWORD PTR [esp+0x20],ebp
1003bc8f:	ja     0x1003cbaa
1003bc95:	jmp    DWORD PTR [eax*4+0x1003d0b8]
1003bc9c:	cmp    esi,DWORD PTR [esp+0x14]
1003bca0:	jge    0x1003bfed
1003bca6:	mov    eax,DWORD PTR [edi+0x5c]
1003bca9:	cmp    ebp,eax
1003bcab:	jae    0x1003bfed
1003bcb1:	mov    ecx,DWORD PTR [edi+0x18]
1003bcb4:	test   ecx,ecx
1003bcb6:	je     0x1003bce0
1003bcb8:	mov    edi,DWORD PTR [esp+0x10c]
1003bcbf:	push   ecx
1003bcc0:	add    edi,0x1c
1003bcc3:	xor    edx,edx
1003bcc5:	mov    ecx,ebp
1003bcc7:	call   0x10042ba0
1003bccc:	add    esp,0x4
1003bccf:	test   eax,eax
1003bcd1:	jne    0x1003bfed
1003bcd7:	mov    edi,DWORD PTR [esp+0x10c]
1003bcde:	jmp    0x1003bd06
1003bce0:	mov    ecx,DWORD PTR [edi+0x1c]
1003bce3:	sub    eax,ecx
1003bce5:	cmp    ebp,eax
1003bce7:	ja     0x1003bd06
1003bce9:	mov    al,BYTE PTR [ebp+0x0]
1003bcec:	cmp    al,BYTE PTR [edi+0x20]
1003bcef:	jne    0x1003bd06
1003bcf1:	cmp    ecx,0x1
1003bcf4:	je     0x1003bfed
1003bcfa:	mov    cl,BYTE PTR [ebp+0x1]
1003bcfd:	cmp    cl,BYTE PTR [edi+0x21]
1003bd00:	je     0x1003bfed
1003bd06:	add    esi,0x1
1003bd09:	add    ebp,0x1
1003bd0c:	cmp    esi,DWORD PTR [esp+0x14]
1003bd10:	jl     0x1003bca6
1003bd12:	jmp    0x1003bfed
1003bd17:	mov    eax,DWORD PTR [esp+0x14]
1003bd1b:	mov    edi,DWORD PTR [edi+0x5c]
1003bd1e:	sub    eax,esi
1003bd20:	sub    edi,ebp
1003bd22:	cmp    eax,edi
1003bd24:	jbe    0x1003bd28
1003bd26:	mov    eax,edi
1003bd28:	add    ebp,eax
1003bd2a:	jmp    0x1003bfed
1003bd2f:	cmp    esi,DWORD PTR [esp+0x14]
1003bd33:	jge    0x1003bfed
1003bd39:	mov    ecx,DWORD PTR [edi+0x5c]
1003bd3c:	cmp    ebp,ecx
1003bd3e:	jae    0x1003bfed
1003bd44:	movzx  eax,BYTE PTR [ebp+0x0]
1003bd48:	cmp    eax,0xd
1003bd4b:	jne    0x1003bd60
1003bd4d:	add    ebp,0x1
1003bd50:	cmp    ebp,ecx
1003bd52:	jae    0x1003bfed
1003bd58:	cmp    BYTE PTR [ebp+0x0],0xa
1003bd5c:	jne    0x1003bd87
1003bd5e:	jmp    0x1003bd84
1003bd60:	cmp    eax,0xa
1003bd63:	je     0x1003bd84
1003bd65:	cmp    DWORD PTR [edi+0x50],0x0
1003bd69:	jne    0x1003bfed
1003bd6f:	cmp    eax,0xb
1003bd72:	je     0x1003bd84
1003bd74:	cmp    eax,0xc
1003bd77:	je     0x1003bd84
1003bd79:	cmp    eax,0x85
1003bd7e:	jne    0x1003bfed
1003bd84:	add    ebp,0x1
1003bd87:	add    esi,0x1
1003bd8a:	cmp    esi,DWORD PTR [esp+0x14]
1003bd8e:	jl     0x1003bd3c
1003bd90:	jmp    0x1003bfed
1003bd95:	cmp    esi,DWORD PTR [esp+0x14]
1003bd99:	jge    0x1003bfed
1003bd9f:	mov    edi,DWORD PTR [edi+0x5c]
1003bda2:	cmp    ebp,edi
1003bda4:	jae    0x1003bfed
1003bdaa:	movzx  eax,BYTE PTR [ebp+0x0]
1003bdae:	cmp    eax,0x9
1003bdb1:	je     0x1003bfed
1003bdb7:	cmp    eax,0x20
1003bdba:	je     0x1003bfed
1003bdc0:	cmp    eax,0xa0
1003bdc5:	je     0x1003bfed
1003bdcb:	add    esi,0x1
1003bdce:	add    ebp,0x1
1003bdd1:	cmp    esi,DWORD PTR [esp+0x14]
1003bdd5:	jl     0x1003bda2
1003bdd7:	jmp    0x1003bfed
1003bddc:	cmp    esi,DWORD PTR [esp+0x14]
1003bde0:	jge    0x1003bfed
1003bde6:	mov    edi,DWORD PTR [edi+0x5c]
1003bde9:	cmp    ebp,edi
1003bdeb:	jae    0x1003bfed
1003bdf1:	movzx  eax,BYTE PTR [ebp+0x0]
1003bdf5:	cmp    eax,0x9
1003bdf8:	je     0x1003be0a
1003bdfa:	cmp    eax,0x20
1003bdfd:	je     0x1003be0a
1003bdff:	cmp    eax,0xa0
1003be04:	jne    0x1003bfed
1003be0a:	add    esi,0x1
1003be0d:	add    ebp,0x1
1003be10:	cmp    esi,DWORD PTR [esp+0x14]
1003be14:	jl     0x1003bde9
1003be16:	jmp    0x1003bfed
1003be1b:	cmp    esi,DWORD PTR [esp+0x14]
1003be1f:	jge    0x1003bfed
1003be25:	mov    edi,DWORD PTR [edi+0x5c]
1003be28:	cmp    ebp,edi
1003be2a:	jae    0x1003bfed
1003be30:	movzx  eax,BYTE PTR [ebp+0x0]
1003be34:	cmp    eax,0xa
1003be37:	je     0x1003bfed
1003be3d:	cmp    eax,0xb
1003be40:	je     0x1003bfed
1003be46:	cmp    eax,0xc
1003be49:	je     0x1003bfed
1003be4f:	cmp    eax,0xd
1003be52:	je     0x1003bfed
1003be58:	cmp    eax,0x85
1003be5d:	je     0x1003bfed
1003be63:	add    esi,0x1
1003be66:	add    ebp,0x1
1003be69:	cmp    esi,DWORD PTR [esp+0x14]
1003be6d:	jl     0x1003be28
1003be6f:	jmp    0x1003bfed
1003be74:	cmp    esi,DWORD PTR [esp+0x14]
1003be78:	jge    0x1003bfed
1003be7e:	mov    edi,DWORD PTR [edi+0x5c]
1003be81:	cmp    ebp,edi
1003be83:	jae    0x1003bfed
1003be89:	movzx  eax,BYTE PTR [ebp+0x0]
1003be8d:	cmp    eax,0xa
1003be90:	je     0x1003beac
1003be92:	cmp    eax,0xb
1003be95:	je     0x1003beac
1003be97:	cmp    eax,0xc
1003be9a:	je     0x1003beac
1003be9c:	cmp    eax,0xd
1003be9f:	je     0x1003beac
1003bea1:	cmp    eax,0x85
1003bea6:	jne    0x1003bfed
1003beac:	add    esi,0x1
1003beaf:	add    ebp,0x1
1003beb2:	cmp    esi,DWORD PTR [esp+0x14]
1003beb6:	jl     0x1003be81
1003beb8:	jmp    0x1003bfed
1003bebd:	cmp    esi,DWORD PTR [esp+0x14]
1003bec1:	jge    0x1003bfed
1003bec7:	mov    eax,DWORD PTR [edi+0x5c]
1003beca:	lea    ebx,[ebx+0x0]
1003bed0:	cmp    ebp,eax
1003bed2:	jae    0x1003bfed
1003bed8:	movzx  edx,BYTE PTR [ebp+0x0]
1003bedc:	mov    ecx,DWORD PTR [edi+0x28]
1003bedf:	test   BYTE PTR [edx+ecx*1],0x4
1003bee3:	jne    0x1003bfed
1003bee9:	add    esi,0x1
1003beec:	add    ebp,0x1
1003beef:	cmp    esi,DWORD PTR [esp+0x14]
1003bef3:	jl     0x1003bed0
1003bef5:	jmp    0x1003bfed
1003befa:	cmp    esi,DWORD PTR [esp+0x14]
1003befe:	jge    0x1003bfed
1003bf04:	mov    eax,DWORD PTR [edi+0x5c]
1003bf07:	cmp    ebp,eax
1003bf09:	jae    0x1003bfed
1003bf0f:	movzx  edx,BYTE PTR [ebp+0x0]
1003bf13:	mov    ecx,DWORD PTR [edi+0x28]
1003bf16:	test   BYTE PTR [edx+ecx*1],0x4
1003bf1a:	je     0x1003bfed
1003bf20:	add    esi,0x1
1003bf23:	add    ebp,0x1
1003bf26:	cmp    esi,DWORD PTR [esp+0x14]
1003bf2a:	jl     0x1003bf07
1003bf2c:	jmp    0x1003bfed
1003bf31:	cmp    esi,DWORD PTR [esp+0x14]
1003bf35:	jge    0x1003bfed
1003bf3b:	mov    eax,DWORD PTR [edi+0x5c]
1003bf3e:	mov    edi,edi
1003bf40:	cmp    ebp,eax
1003bf42:	jae    0x1003bfed
1003bf48:	movzx  edx,BYTE PTR [ebp+0x0]
1003bf4c:	mov    ecx,DWORD PTR [edi+0x28]
1003bf4f:	test   BYTE PTR [edx+ecx*1],0x1
1003bf53:	jne    0x1003bfed
1003bf59:	add    esi,0x1
1003bf5c:	add    ebp,0x1
1003bf5f:	cmp    esi,DWORD PTR [esp+0x14]
1003bf63:	jl     0x1003bf40
1003bf65:	jmp    0x1003bfed
1003bf6a:	cmp    esi,DWORD PTR [esp+0x14]
1003bf6e:	jge    0x1003bfed
1003bf74:	mov    eax,DWORD PTR [edi+0x5c]
1003bf77:	cmp    ebp,eax
1003bf79:	jae    0x1003bfed
1003bf7f:	movzx  edx,BYTE PTR [ebp+0x0]
1003bf83:	mov    ecx,DWORD PTR [edi+0x28]
1003bf86:	test   BYTE PTR [edx+ecx*1],0x1
1003bf8a:	je     0x1003bfed
1003bf8c:	add    esi,0x1
1003bf8f:	add    ebp,0x1
1003bf92:	cmp    esi,DWORD PTR [esp+0x14]
1003bf96:	jl     0x1003bf77
1003bf98:	jmp    0x1003bfed
1003bf9a:	cmp    esi,DWORD PTR [esp+0x14]
1003bf9e:	jge    0x1003bfed
1003bfa0:	mov    eax,DWORD PTR [edi+0x5c]
1003bfa3:	cmp    ebp,eax
1003bfa5:	jae    0x1003bfed
1003bfa7:	movzx  edx,BYTE PTR [ebp+0x0]
1003bfab:	mov    ecx,DWORD PTR [edi+0x28]
1003bfae:	test   BYTE PTR [edx+ecx*1],0x10
1003bfb2:	jne    0x1003bfed
1003bfb4:	add    esi,0x1
1003bfb7:	add    ebp,0x1
1003bfba:	cmp    esi,DWORD PTR [esp+0x14]
1003bfbe:	jl     0x1003bfa3
1003bfc0:	jmp    0x1003bfed
1003bfc2:	cmp    esi,DWORD PTR [esp+0x14]
1003bfc6:	jge    0x1003bfed
1003bfc8:	mov    eax,DWORD PTR [edi+0x5c]
1003bfcb:	jmp    0x1003bfd0
1003bfcd:	lea    ecx,[ecx+0x0]
1003bfd0:	cmp    ebp,eax
1003bfd2:	jae    0x1003bfed
1003bfd4:	movzx  edx,BYTE PTR [ebp+0x0]
1003bfd8:	mov    ecx,DWORD PTR [edi+0x28]
1003bfdb:	test   BYTE PTR [edx+ecx*1],0x10
1003bfdf:	je     0x1003bfed
1003bfe1:	add    esi,0x1
1003bfe4:	add    ebp,0x1
1003bfe7:	cmp    esi,DWORD PTR [esp+0x14]
1003bfeb:	jl     0x1003bfd0
1003bfed:	cmp    DWORD PTR [esp+0x1c],0x0
1003bff2:	je     0x1003cdd2
1003bff8:	mov    edi,DWORD PTR [esp+0x10c]
1003bfff:	jmp    0x1003a39c
1003c004:	xor    edx,edx
1003c006:	mov    dh,BYTE PTR [ebx+0x4]
1003c009:	mov    dl,BYTE PTR [ebx+0x5]
1003c00c:	cmp    BYTE PTR [ebx+edx*1+0x3],0x54
1003c011:	lea    ebx,[ebx+edx*1+0x3]
1003c015:	jne    0x1003c026
1003c017:	xor    eax,eax
1003c019:	mov    ah,BYTE PTR [ebx+0x1]
1003c01c:	mov    al,BYTE PTR [ebx+0x2]
1003c01f:	add    ebx,eax
1003c021:	cmp    BYTE PTR [ebx],0x54
1003c024:	je     0x1003c017
1003c026:	add    ebx,0x3
1003c029:	cmp    DWORD PTR [esp+0x24],0x63
1003c02e:	jne    0x1003c280
1003c034:	mov    edx,DWORD PTR [esp+0x11c]
1003c03b:	mov    eax,DWORD PTR [esp+0x114]
1003c042:	mov    ecx,DWORD PTR [esp+0x110]
1003c049:	add    edx,0x1
1003c04c:	push   edx
1003c04d:	mov    edx,DWORD PTR [esp+0x10c]
1003c054:	push   0x2
1003c056:	push   eax
1003c057:	push   ecx
1003c058:	push   edi
1003c059:	push   edx
1003c05a:	push   esi
1003c05b:	push   ebx
1003c05c:	push   ebp
1003c05d:	call   0x1003a330
1003c062:	add    esp,0x24
1003c065:	pop    edi
1003c066:	pop    esi
1003c067:	pop    ebp
1003c068:	pop    ebx
1003c069:	add    esp,0xe8
1003c06f:	ret    
1003c070:	xor    eax,eax
1003c072:	mov    ah,BYTE PTR [ebx+0x3]
1003c075:	mov    al,BYTE PTR [ebx+0x4]
1003c078:	lea    esi,[eax+eax*1]
1003c07b:	cmp    esi,DWORD PTR [edi+0x14]
1003c07e:	mov    DWORD PTR [esp+0x20],eax
1003c082:	jl     0x1003c428
1003c088:	xor    eax,eax
1003c08a:	cmp    DWORD PTR [esp+0x24],0x61
1003c08f:	setl   al
1003c092:	xor    ecx,ecx
1003c094:	mov    ch,BYTE PTR [ebx+0x1]
1003c097:	sub    eax,0x1
1003c09a:	and    eax,0x2
1003c09d:	mov    cl,BYTE PTR [ebx+0x2]
1003c0a0:	mov    DWORD PTR [esp+0x118],eax
1003c0a7:	cmp    BYTE PTR [ecx+ebx*1],0x54
1003c0ab:	jne    0x1003c128
1003c0b1:	mov    esi,DWORD PTR [esp+0x11c]
1003c0b8:	add    esi,0x1
1003c0bb:	jmp    0x1003c0c0
1003c0bd:	lea    ecx,[ecx+0x0]
1003c0c0:	mov    edx,DWORD PTR [esp+0x114]
1003c0c7:	mov    ecx,DWORD PTR [esp+0x108]
1003c0ce:	push   esi
1003c0cf:	push   eax
1003c0d0:	mov    eax,DWORD PTR [esp+0x118]
1003c0d7:	push   edx
1003c0d8:	mov    edx,DWORD PTR [esp+0x110]
1003c0df:	push   eax
1003c0e0:	movzx  eax,BYTE PTR [ebx]
1003c0e3:	push   edi
1003c0e4:	push   ecx
1003c0e5:	movzx  ecx,BYTE PTR [eax+0x1006e420]
1003c0ec:	push   edx
1003c0ed:	add    ecx,ebx
1003c0ef:	push   ecx
1003c0f0:	push   ebp
1003c0f1:	call   0x1003a330
1003c0f6:	add    esp,0x24
1003c0f9:	test   eax,eax
1003c0fb:	je     0x1003c108
1003c0fd:	cmp    eax,0xfffffc1c
1003c102:	jne    0x1003ce36
1003c108:	xor    edx,edx
1003c10a:	mov    dh,BYTE PTR [ebx+0x1]
1003c10d:	xor    eax,eax
1003c10f:	mov    dl,BYTE PTR [ebx+0x2]
1003c112:	mov    ah,BYTE PTR [ebx+edx*1+0x1]
1003c116:	add    ebx,edx
1003c118:	mov    al,BYTE PTR [ebx+0x2]
1003c11b:	cmp    BYTE PTR [eax+ebx*1],0x54
1003c11f:	mov    eax,DWORD PTR [esp+0x118]
1003c126:	je     0x1003c0c0
1003c128:	test   eax,eax
1003c12a:	jne    0x1003c51c
1003c130:	movzx  ecx,BYTE PTR [ebx]
1003c133:	movzx  edx,BYTE PTR [ecx+0x1006e420]
1003c13a:	add    ebx,edx
1003c13c:	jmp    0x1003c28b
1003c141:	cmp    BYTE PTR [ebx+0x3],0x19
1003c145:	lea    esi,[ebx+0x3]
1003c148:	jne    0x1003c163
1003c14a:	mov    edx,DWORD PTR [esp+0x110]
1003c151:	movzx  eax,BYTE PTR [ebx+0x4]
1003c155:	and    edx,0xfffffff8
1003c158:	or     eax,edx
1003c15a:	mov    DWORD PTR [esp+0x110],eax
1003c161:	jmp    0x1003c16a
1003c163:	mov    eax,DWORD PTR [esp+0x110]
1003c16a:	mov    edx,DWORD PTR [esp+0x11c]
1003c171:	add    edx,0x1
1003c174:	cmp    BYTE PTR [ebx],0x57
1003c177:	push   edx
1003c178:	mov    edx,DWORD PTR [esp+0x118]
1003c17f:	jne    0x1003c1aa
1003c181:	push   0x0
1003c183:	push   edx
1003c184:	push   eax
1003c185:	mov    eax,DWORD PTR [esp+0x114]
1003c18c:	push   edi
1003c18d:	push   ecx
1003c18e:	push   eax
1003c18f:	push   esi
1003c190:	push   ebp
1003c191:	call   0x1003a330
1003c196:	add    esp,0x24
1003c199:	test   eax,eax
1003c19b:	jne    0x1003ce36
1003c1a1:	mov    ebx,DWORD PTR [esp+0x1c]
1003c1a5:	jmp    0x1003c280
1003c1aa:	push   0x2
1003c1ac:	push   edx
1003c1ad:	push   eax
1003c1ae:	mov    eax,DWORD PTR [esp+0x114]
1003c1b5:	push   edi
1003c1b6:	push   ecx
1003c1b7:	mov    ecx,DWORD PTR [esp+0x34]
1003c1bb:	push   eax
1003c1bc:	push   ecx
1003c1bd:	push   ebp
1003c1be:	call   0x1003a330
1003c1c3:	add    esp,0x24
1003c1c6:	test   eax,eax
1003c1c8:	jne    0x1003ce36
1003c1ce:	mov    ebx,esi
1003c1d0:	jmp    0x1003c280
1003c1d5:	mov    edx,DWORD PTR [esp+0x1c]
1003c1d9:	cmp    BYTE PTR [edx],0x61
1003c1dc:	sbb    eax,eax
1003c1de:	and    eax,0xfffffffe
1003c1e1:	add    eax,0x2
1003c1e4:	cmp    BYTE PTR [ebx],0x57
1003c1e7:	mov    DWORD PTR [esp+0x118],eax
1003c1ee:	jne    0x1003c241
1003c1f0:	mov    eax,DWORD PTR [esp+0x11c]
1003c1f7:	mov    ecx,DWORD PTR [esp+0x114]
1003c1fe:	mov    edx,DWORD PTR [esp+0x108]
1003c205:	add    eax,0x1
1003c208:	push   eax
1003c209:	mov    eax,DWORD PTR [esp+0x108]
1003c210:	push   0x0
1003c212:	push   ecx
1003c213:	push   esi
1003c214:	push   edi
1003c215:	push   edx
1003c216:	push   eax
1003c217:	add    ebx,0x3
1003c21a:	push   ebx
1003c21b:	push   ebp
1003c21c:	call   0x1003a330
1003c221:	add    esp,0x24
1003c224:	test   eax,eax
1003c226:	jne    0x1003ce36
1003c22c:	mov    eax,DWORD PTR [esp+0x118]
1003c233:	test   eax,eax
1003c235:	jne    0x1003c733
1003c23b:	mov    ebx,DWORD PTR [esp+0x1c]
1003c23f:	jmp    0x1003c28b
1003c241:	mov    ecx,DWORD PTR [esp+0x11c]
1003c248:	mov    edx,DWORD PTR [esp+0x114]
1003c24f:	add    ecx,0x1
1003c252:	push   ecx
1003c253:	mov    ecx,DWORD PTR [esp+0x108]
1003c25a:	push   eax
1003c25b:	mov    eax,DWORD PTR [esp+0x110]
1003c262:	push   edx
1003c263:	mov    edx,DWORD PTR [esp+0x28]
1003c267:	push   esi
1003c268:	push   edi
1003c269:	push   eax
1003c26a:	push   ecx
1003c26b:	push   edx
1003c26c:	push   ebp
1003c26d:	call   0x1003a330
1003c272:	add    esp,0x24
1003c275:	test   eax,eax
1003c277:	jne    0x1003ce36
1003c27d:	add    ebx,0x3
1003c280:	mov    DWORD PTR [esp+0x118],0x0
1003c28b:	mov    eax,DWORD PTR [edi]
1003c28d:	cmp    eax,DWORD PTR [edi+0x4]
1003c290:	jb     0x1003a35a
1003c296:	add    DWORD PTR [edi],0x1
1003c299:	mov    eax,0xfffffff8
1003c29e:	pop    edi
1003c29f:	pop    esi
1003c2a0:	pop    ebp
1003c2a1:	pop    ebx
1003c2a2:	add    esp,0xe8
1003c2a8:	ret    
1003c2a9:	mov    eax,0xffffffeb
1003c2ae:	pop    edi
1003c2af:	pop    esi
1003c2b0:	pop    ebp
1003c2b1:	pop    ebx
1003c2b2:	add    esp,0xe8
1003c2b8:	ret    
1003c2b9:	mov    ecx,DWORD PTR [esp+0x11c]
1003c2c0:	mov    edx,DWORD PTR [esp+0x118]
1003c2c7:	mov    eax,DWORD PTR [esp+0x114]
1003c2ce:	add    ecx,0x1
1003c2d1:	push   ecx
1003c2d2:	mov    ecx,DWORD PTR [esp+0x114]
1003c2d9:	push   edx
1003c2da:	mov    edx,DWORD PTR [esp+0x110]
1003c2e1:	push   eax
1003c2e2:	movzx  eax,BYTE PTR [ebx]
1003c2e5:	push   ecx
1003c2e6:	movzx  ecx,BYTE PTR [eax+0x1006e420]
1003c2ed:	push   edi
1003c2ee:	push   edx
1003c2ef:	push   esi
1003c2f0:	add    ecx,ebx
1003c2f2:	push   ecx
1003c2f3:	push   ebp
1003c2f4:	call   0x1003a330
1003c2f9:	add    esp,0x24
1003c2fc:	test   eax,eax
1003c2fe:	jne    0x1003ce36
1003c304:	mov    eax,0xfffffc1a
1003c309:	pop    edi
1003c30a:	pop    esi
1003c30b:	pop    ebp
1003c30c:	pop    ebx
1003c30d:	add    esp,0xe8
1003c313:	ret    
1003c314:	mov    edx,DWORD PTR [esp+0x11c]
1003c31b:	mov    eax,DWORD PTR [esp+0x118]
1003c322:	mov    ecx,DWORD PTR [esp+0x114]
1003c329:	add    edx,0x1
1003c32c:	push   edx
1003c32d:	mov    edx,DWORD PTR [esp+0x114]
1003c334:	push   eax
1003c335:	mov    eax,DWORD PTR [esp+0x110]
1003c33c:	push   ecx
1003c33d:	movzx  ecx,BYTE PTR [ebx]
1003c340:	push   edx
1003c341:	movzx  edx,BYTE PTR [ecx+0x1006e420]
1003c348:	push   edi
1003c349:	push   eax
1003c34a:	push   esi
1003c34b:	add    edx,ebx
1003c34d:	push   edx
1003c34e:	push   ebp
1003c34f:	call   0x1003a330
1003c354:	add    esp,0x24
1003c357:	test   eax,eax
1003c359:	jne    0x1003ce36
1003c35f:	mov    eax,0xfffffc19
1003c364:	pop    edi
1003c365:	pop    esi
1003c366:	pop    ebp
1003c367:	pop    ebx
1003c368:	add    esp,0xe8
1003c36e:	ret    
1003c36f:	mov    eax,DWORD PTR [esp+0x11c]
1003c376:	mov    ecx,DWORD PTR [esp+0x118]
1003c37d:	mov    edx,DWORD PTR [esp+0x114]
1003c384:	add    eax,0x1
1003c387:	push   eax
1003c388:	mov    eax,DWORD PTR [esp+0x114]
1003c38f:	push   ecx
1003c390:	mov    ecx,DWORD PTR [esp+0x110]
1003c397:	push   edx
1003c398:	movzx  edx,BYTE PTR [ebx]
1003c39b:	push   eax
1003c39c:	movzx  eax,BYTE PTR [edx+0x1006e420]
1003c3a3:	push   edi
1003c3a4:	push   ecx
1003c3a5:	push   esi
1003c3a6:	add    eax,ebx
1003c3a8:	push   eax
1003c3a9:	push   ebp
1003c3aa:	call   0x1003a330
1003c3af:	add    esp,0x24
1003c3b2:	test   eax,eax
1003c3b4:	jne    0x1003ce36
1003c3ba:	mov    DWORD PTR [edi+0x60],ebp
1003c3bd:	mov    eax,0xfffffc1b
1003c3c2:	pop    edi
1003c3c3:	pop    esi
1003c3c4:	pop    ebp
1003c3c5:	pop    ebx
1003c3c6:	add    esp,0xe8
1003c3cc:	ret    
1003c3cd:	mov    ecx,DWORD PTR [esp+0x11c]
1003c3d4:	mov    edx,DWORD PTR [esp+0x118]
1003c3db:	mov    eax,DWORD PTR [esp+0x114]
1003c3e2:	add    ecx,0x1
1003c3e5:	push   ecx
1003c3e6:	mov    ecx,DWORD PTR [esp+0x114]
1003c3ed:	push   edx
1003c3ee:	mov    edx,DWORD PTR [esp+0x110]
1003c3f5:	push   eax
1003c3f6:	movzx  eax,BYTE PTR [ebx]
1003c3f9:	push   ecx
1003c3fa:	movzx  ecx,BYTE PTR [eax+0x1006e420]
1003c401:	push   edi
1003c402:	push   edx
1003c403:	push   esi
1003c404:	add    ecx,ebx
1003c406:	push   ecx
1003c407:	push   ebp
1003c408:	call   0x1003a330
1003c40d:	add    esp,0x24
1003c410:	test   eax,eax
1003c412:	jne    0x1003ce36
1003c418:	mov    eax,0xfffffc1c
1003c41d:	pop    edi
1003c41e:	pop    esi
1003c41f:	pop    ebp
1003c420:	pop    ebx
1003c421:	add    esp,0xe8
1003c427:	ret    
1003c428:	mov    eax,DWORD PTR [edi+0xc]
1003c42b:	mov    edx,DWORD PTR [eax+esi*4]
1003c42e:	mov    ecx,DWORD PTR [eax+esi*4+0x4]
1003c432:	mov    DWORD PTR [esp+0x14],edx
1003c436:	mov    edx,DWORD PTR [edi+0x10]
1003c439:	sub    edx,DWORD PTR [esp+0x20]
1003c43d:	mov    DWORD PTR [esp+0x18],ecx
1003c441:	mov    ecx,DWORD PTR [eax+edx*4]
1003c444:	lea    eax,[eax+edx*4]
1003c447:	mov    edx,DWORD PTR [edi+0x6c]
1003c44a:	mov    DWORD PTR [esp+0x44],ecx
1003c44e:	mov    DWORD PTR [esp+0x28],edx
1003c452:	xor    edx,edx
1003c454:	mov    ecx,ebp
1003c456:	sub    ecx,DWORD PTR [edi+0x58]
1003c459:	cmp    DWORD PTR [esp+0x24],0x62
1003c45e:	mov    DWORD PTR [eax],ecx
1003c460:	mov    eax,DWORD PTR [esp+0x11c]
1003c467:	setne  dl
1003c46a:	sub    edx,0x1
1003c46d:	and    edx,0x2
1003c470:	add    eax,0x1
1003c473:	mov    DWORD PTR [esp+0x118],edx
1003c47a:	mov    DWORD PTR [esp+0x1c],eax
1003c47e:	mov    edi,edi
1003c480:	mov    ecx,DWORD PTR [esp+0x1c]
1003c484:	mov    edx,DWORD PTR [esp+0x118]
1003c48b:	mov    eax,DWORD PTR [esp+0x114]
1003c492:	push   ecx
1003c493:	mov    ecx,DWORD PTR [esp+0x114]
1003c49a:	push   edx
1003c49b:	mov    edx,DWORD PTR [esp+0x110]
1003c4a2:	push   eax
1003c4a3:	mov    eax,DWORD PTR [esp+0x110]
1003c4aa:	push   ecx
1003c4ab:	movzx  ecx,BYTE PTR [ebx]
1003c4ae:	push   edi
1003c4af:	push   edx
1003c4b0:	movzx  edx,BYTE PTR [ecx+0x1006e420]
1003c4b7:	push   eax
1003c4b8:	add    edx,ebx
1003c4ba:	push   edx
1003c4bb:	push   ebp
1003c4bc:	call   0x1003a330
1003c4c1:	add    esp,0x24
1003c4c4:	test   eax,eax
1003c4c6:	je     0x1003c4d3
1003c4c8:	cmp    eax,0xfffffc1c
1003c4cd:	jne    0x1003ce36
1003c4d3:	mov    eax,DWORD PTR [esp+0x28]
1003c4d7:	xor    ecx,ecx
1003c4d9:	mov    DWORD PTR [edi+0x6c],eax
1003c4dc:	mov    ch,BYTE PTR [ebx+0x1]
1003c4df:	mov    cl,BYTE PTR [ebx+0x2]
1003c4e2:	add    ebx,ecx
1003c4e4:	cmp    BYTE PTR [ebx],0x54
1003c4e7:	je     0x1003c480
1003c4e9:	mov    edx,DWORD PTR [edi+0xc]
1003c4ec:	mov    eax,DWORD PTR [esp+0x14]
1003c4f0:	mov    DWORD PTR [edx+esi*4],eax
1003c4f3:	mov    ecx,DWORD PTR [edi+0xc]
1003c4f6:	mov    edx,DWORD PTR [esp+0x18]
1003c4fa:	mov    DWORD PTR [ecx+esi*4+0x4],edx
1003c4fe:	mov    eax,DWORD PTR [edi+0x10]
1003c501:	sub    eax,DWORD PTR [esp+0x20]
1003c505:	mov    ecx,DWORD PTR [edi+0xc]
1003c508:	mov    edx,DWORD PTR [esp+0x44]
1003c50c:	mov    DWORD PTR [ecx+eax*4],edx
1003c50f:	xor    eax,eax
1003c511:	pop    edi
1003c512:	pop    esi
1003c513:	pop    ebp
1003c514:	pop    ebx
1003c515:	add    esp,0xe8
1003c51b:	ret    
1003c51c:	mov    ecx,DWORD PTR [esp+0x11c]
1003c523:	mov    edx,DWORD PTR [esp+0x114]
1003c52a:	add    ecx,0x1
1003c52d:	push   ecx
1003c52e:	mov    ecx,DWORD PTR [esp+0x10c]
1003c535:	push   eax
1003c536:	mov    eax,DWORD PTR [esp+0x118]
1003c53d:	push   edx
1003c53e:	mov    edx,DWORD PTR [esp+0x110]
1003c545:	push   eax
1003c546:	movzx  eax,BYTE PTR [ebx]
1003c549:	push   edi
1003c54a:	push   ecx
1003c54b:	movzx  ecx,BYTE PTR [eax+0x1006e420]
1003c552:	push   edx
1003c553:	add    ecx,ebx
1003c555:	push   ecx
1003c556:	push   ebp
1003c557:	call   0x1003a330
1003c55c:	add    esp,0x24
1003c55f:	pop    edi
1003c560:	pop    esi
1003c561:	pop    ebp
1003c562:	pop    ebx
1003c563:	add    esp,0xe8
1003c569:	ret    
1003c56a:	cmp    DWORD PTR [edi+0x44],0x0
1003c56e:	je     0x1003c574
1003c570:	cmp    ebp,esi
1003c572:	je     0x1003c50f
1003c574:	mov    eax,DWORD PTR [esp+0x108]
1003c57b:	mov    DWORD PTR [edi+0x64],ebp
1003c57e:	mov    DWORD PTR [edi+0x68],eax
1003c581:	mov    DWORD PTR [edi+0x60],esi
1003c584:	mov    eax,0x1
1003c589:	pop    edi
1003c58a:	pop    esi
1003c58b:	pop    ebp
1003c58c:	pop    ebx
1003c58d:	add    esp,0xe8
1003c593:	ret    
1003c594:	mov    eax,DWORD PTR [edi+0x54]
1003c597:	xor    ecx,ecx
1003c599:	mov    ch,BYTE PTR [ebx+0x1]
1003c59c:	mov    cl,BYTE PTR [ebx+0x2]
1003c59f:	add    ecx,eax
1003c5a1:	mov    esi,ecx
1003c5a3:	cmp    esi,eax
1003c5a5:	jne    0x1003c5b1
1003c5a7:	mov    DWORD PTR [esp+0x30],0x0
1003c5af:	jmp    0x1003c5bd
1003c5b1:	xor    edx,edx
1003c5b3:	mov    dh,BYTE PTR [esi+0x3]
1003c5b6:	mov    dl,BYTE PTR [esi+0x4]
1003c5b9:	mov    DWORD PTR [esp+0x30],edx
1003c5bd:	mov    eax,DWORD PTR [edi+0x7c]
1003c5c0:	lea    ecx,[esp+0x2c]
1003c5c4:	mov    DWORD PTR [edi+0x7c],ecx
1003c5c7:	mov    ecx,DWORD PTR [edi+0x10]
1003c5ca:	add    ebx,0x3
1003c5cd:	cmp    ecx,0x1e
1003c5d0:	mov    DWORD PTR [esp+0x2c],eax
1003c5d4:	mov    DWORD PTR [esp+0x34],ebx
1003c5d8:	mov    DWORD PTR [esp+0x40],ecx
1003c5dc:	jg     0x1003c5eb
1003c5de:	lea    eax,[esp+0x80]
1003c5e5:	mov    DWORD PTR [esp+0x3c],eax
1003c5e9:	jmp    0x1003c618
1003c5eb:	lea    edx,[ecx*4+0x0]
1003c5f2:	push   edx
1003c5f3:	call   DWORD PTR ds:0x1007f4f8
1003c5f9:	add    esp,0x4
1003c5fc:	test   eax,eax
1003c5fe:	mov    DWORD PTR [esp+0x3c],eax
1003c602:	jne    0x1003c614
1003c604:	mov    eax,0xfffffffa
1003c609:	pop    edi
1003c60a:	pop    esi
1003c60b:	pop    ebp
1003c60c:	pop    ebx
1003c60d:	add    esp,0xe8
1003c613:	ret    
1003c614:	mov    ecx,DWORD PTR [esp+0x40]
1003c618:	mov    edx,DWORD PTR [edi+0xc]
1003c61b:	add    ecx,ecx
1003c61d:	add    ecx,ecx
1003c61f:	push   ecx
1003c620:	push   edx
1003c621:	push   eax
1003c622:	call   0x10045180
1003c627:	mov    eax,DWORD PTR [esp+0x110]
1003c62e:	mov    ecx,DWORD PTR [esp+0x128]
1003c635:	mov    DWORD PTR [esp+0x44],eax
1003c639:	mov    al,BYTE PTR [esi]
1003c63b:	add    esp,0xc
1003c63e:	cmp    al,0x61
1003c640:	sbb    ebx,ebx
1003c642:	and    ebx,0xfffffffe
1003c645:	add    ebx,0x2
1003c648:	add    ecx,0x1
1003c64b:	mov    DWORD PTR [esp+0x1c],ecx
1003c64f:	nop
1003c650:	mov    edx,DWORD PTR [esp+0x1c]
1003c654:	mov    ecx,DWORD PTR [esp+0x114]
1003c65b:	push   edx
1003c65c:	mov    edx,DWORD PTR [esp+0x114]
1003c663:	push   ebx
1003c664:	push   ecx
1003c665:	mov    ecx,DWORD PTR [esp+0x114]
1003c66c:	push   edx
1003c66d:	movzx  edx,al
1003c670:	movzx  eax,BYTE PTR [edx+0x1006e420]
1003c677:	push   edi
1003c678:	push   ecx
1003c679:	push   ebp
1003c67a:	add    eax,esi
1003c67c:	push   eax
1003c67d:	push   ebp
1003c67e:	call   0x1003a330
1003c683:	add    esp,0x24
1003c686:	cmp    eax,0x1
1003c689:	je     0x1003c703
1003c68f:	test   eax,eax
1003c691:	je     0x1003c69e
1003c693:	cmp    eax,0xfffffc1c
1003c698:	jne    0x1003ce36
1003c69e:	mov    edx,DWORD PTR [esp+0x40]
1003c6a2:	lea    ecx,[esp+0x2c]
1003c6a6:	lea    eax,[edx*4+0x0]
1003c6ad:	mov    edx,DWORD PTR [edi+0xc]
1003c6b0:	mov    DWORD PTR [edi+0x7c],ecx
1003c6b3:	mov    ecx,DWORD PTR [esp+0x3c]
1003c6b7:	push   eax
1003c6b8:	push   ecx
1003c6b9:	push   edx
1003c6ba:	call   0x10045180
1003c6bf:	xor    eax,eax
1003c6c1:	mov    ah,BYTE PTR [esi+0x1]
1003c6c4:	add    esp,0xc
1003c6c7:	mov    al,BYTE PTR [esi+0x2]
1003c6ca:	add    esi,eax
1003c6cc:	mov    al,BYTE PTR [esi]
1003c6ce:	cmp    al,0x54
1003c6d0:	je     0x1003c650
1003c6d6:	mov    eax,DWORD PTR [esp+0x2c]
1003c6da:	mov    DWORD PTR [edi+0x7c],eax
1003c6dd:	mov    eax,DWORD PTR [esp+0x3c]
1003c6e1:	lea    ecx,[esp+0x80]
1003c6e8:	cmp    eax,ecx
1003c6ea:	je     0x1003c6f6
1003c6ec:	push   eax
1003c6ed:	call   DWORD PTR ds:0x1007f4fc
1003c6f3:	add    esp,0x4
1003c6f6:	xor    eax,eax
1003c6f8:	pop    edi
1003c6f9:	pop    esi
1003c6fa:	pop    ebp
1003c6fb:	pop    ebx
1003c6fc:	add    esp,0xe8
1003c702:	ret    
1003c703:	mov    eax,DWORD PTR [esp+0x3c]
1003c707:	mov    ecx,DWORD PTR [esp+0x2c]
1003c70b:	lea    edx,[esp+0x80]
1003c712:	cmp    eax,edx
1003c714:	mov    DWORD PTR [edi+0x7c],ecx
1003c717:	je     0x1003c723
1003c719:	push   eax
1003c71a:	call   DWORD PTR ds:0x1007f4fc
1003c720:	add    esp,0x4
1003c723:	mov    eax,0x1
1003c728:	pop    edi
1003c729:	pop    esi
1003c72a:	pop    ebp
1003c72b:	pop    ebx
1003c72c:	add    esp,0xe8
1003c732:	ret    
1003c733:	mov    edx,DWORD PTR [esp+0x11c]
1003c73a:	mov    ecx,DWORD PTR [esp+0x108]
1003c741:	add    edx,0x1
1003c744:	push   edx
1003c745:	mov    edx,DWORD PTR [esp+0x108]
1003c74c:	push   eax
1003c74d:	mov    eax,DWORD PTR [esp+0x11c]
1003c754:	push   eax
1003c755:	mov    eax,DWORD PTR [esp+0x28]
1003c759:	push   esi
1003c75a:	push   edi
1003c75b:	push   ecx
1003c75c:	push   edx
1003c75d:	push   eax
1003c75e:	push   ebp
1003c75f:	call   0x1003a330
1003c764:	add    esp,0x24
1003c767:	pop    edi
1003c768:	pop    esi
1003c769:	pop    ebp
1003c76a:	pop    ebx
1003c76b:	add    esp,0xe8
1003c771:	ret    
1003c772:	mov    ecx,DWORD PTR [esp+0x108]
1003c779:	mov    DWORD PTR [edi+0x64],ebp
1003c77c:	mov    DWORD PTR [edi+0x68],ecx
1003c77f:	mov    eax,0x1
1003c784:	pop    edi
1003c785:	pop    esi
1003c786:	pop    ebp
1003c787:	pop    ebx
1003c788:	add    esp,0xe8
1003c78e:	ret    
1003c78f:	cmp    eax,ecx
1003c791:	mov    DWORD PTR [esp+0x20],ebp
1003c795:	mov    DWORD PTR [esp+0x18],eax
1003c799:	jge    0x1003c7d1
1003c79b:	mov    edx,DWORD PTR [esp+0x110]
1003c7a2:	push   edx
1003c7a3:	mov    edx,DWORD PTR [esp+0x28]
1003c7a7:	push   ebp
1003c7a8:	mov    ecx,edi
1003c7aa:	mov    eax,esi
1003c7ac:	call   0x1003a2b0
1003c7b1:	add    esp,0x8
1003c7b4:	test   eax,eax
1003c7b6:	je     0x1003c7cb
1003c7b8:	mov    eax,DWORD PTR [esp+0x18]
1003c7bc:	add    eax,0x1
1003c7bf:	add    ebp,esi
1003c7c1:	cmp    eax,DWORD PTR [esp+0x14]
1003c7c5:	mov    DWORD PTR [esp+0x18],eax
1003c7c9:	jl     0x1003c79b
1003c7cb:	cmp    ebp,DWORD PTR [esp+0x20]
1003c7cf:	jb     0x1003c821
1003c7d1:	mov    eax,DWORD PTR [esp+0x11c]
1003c7d8:	add    eax,0x1
1003c7db:	mov    DWORD PTR [esp+0x1c],eax
1003c7df:	mov    ecx,DWORD PTR [esp+0x1c]
1003c7e3:	mov    edx,DWORD PTR [esp+0x114]
1003c7ea:	mov    eax,DWORD PTR [esp+0x110]
1003c7f1:	push   ecx
1003c7f2:	mov    ecx,DWORD PTR [esp+0x10c]
1003c7f9:	push   0x0
1003c7fb:	push   edx
1003c7fc:	mov    edx,DWORD PTR [esp+0x110]
1003c803:	push   eax
1003c804:	push   edi
1003c805:	push   ecx
1003c806:	push   edx
1003c807:	push   ebx
1003c808:	push   ebp
1003c809:	call   0x1003a330
1003c80e:	add    esp,0x24
1003c811:	test   eax,eax
1003c813:	jne    0x1003ce36
1003c819:	sub    ebp,esi
1003c81b:	cmp    ebp,DWORD PTR [esp+0x20]
1003c81f:	jae    0x1003c7df
1003c821:	xor    eax,eax
1003c823:	pop    edi
1003c824:	pop    esi
1003c825:	pop    ebp
1003c826:	pop    ebx
1003c827:	add    esp,0xe8
1003c82d:	ret    
1003c82e:	cmp    eax,esi
1003c830:	mov    DWORD PTR [esp+0x20],ebp
1003c834:	jge    0x1003c871
1003c836:	cmp    ebp,DWORD PTR [edi+0x5c]
1003c839:	jae    0x1003c86b
1003c83b:	movzx  eax,BYTE PTR [ebp+0x0]
1003c83f:	mov    ecx,eax
1003c841:	and    ecx,0x7
1003c844:	mov    edx,0x1
1003c849:	shl    edx,cl
1003c84b:	mov    ecx,DWORD PTR [esp+0x24]
1003c84f:	shr    eax,0x3
1003c852:	mov    al,BYTE PTR [eax+ecx*1]
1003c855:	test   al,dl
1003c857:	je     0x1003c86b
1003c859:	mov    eax,DWORD PTR [esp+0x18]
1003c85d:	add    eax,0x1
1003c860:	add    ebp,0x1
1003c863:	cmp    eax,esi
1003c865:	mov    DWORD PTR [esp+0x18],eax
1003c869:	jl     0x1003c836
1003c86b:	cmp    ebp,DWORD PTR [esp+0x20]
1003c86f:	jb     0x1003c8ba
1003c871:	mov    esi,DWORD PTR [esp+0x11c]
1003c878:	add    esi,0x1
1003c87b:	mov    ecx,DWORD PTR [esp+0x114]
1003c882:	mov    edx,DWORD PTR [esp+0x110]
1003c889:	mov    eax,DWORD PTR [esp+0x108]
1003c890:	push   esi
1003c891:	push   0x0
1003c893:	push   ecx
1003c894:	mov    ecx,DWORD PTR [esp+0x110]
1003c89b:	push   edx
1003c89c:	push   edi
1003c89d:	push   eax
1003c89e:	push   ecx
1003c89f:	push   ebx
1003c8a0:	push   ebp
1003c8a1:	call   0x1003a330
1003c8a6:	add    esp,0x24
1003c8a9:	test   eax,eax
1003c8ab:	jne    0x1003ce36
1003c8b1:	sub    ebp,0x1
1003c8b4:	cmp    ebp,DWORD PTR [esp+0x20]
1003c8b8:	jae    0x1003c87b
1003c8ba:	xor    eax,eax
1003c8bc:	pop    edi
1003c8bd:	pop    esi
1003c8be:	pop    ebp
1003c8bf:	pop    ebx
1003c8c0:	add    esp,0xe8
1003c8c6:	ret    
1003c8c7:	mov    edx,DWORD PTR [esp+0x114]
1003c8ce:	mov    ecx,DWORD PTR [esp+0x108]
1003c8d5:	mov    DWORD PTR [esp+0x18],eax
1003c8d9:	mov    eax,DWORD PTR [esp+0x11c]
1003c8e0:	add    eax,0x1
1003c8e3:	push   eax
1003c8e4:	push   0x0
1003c8e6:	push   edx
1003c8e7:	mov    edx,DWORD PTR [esp+0x110]
1003c8ee:	mov    DWORD PTR [esp+0x28],eax
1003c8f2:	mov    eax,DWORD PTR [esp+0x11c]
1003c8f9:	push   eax
1003c8fa:	push   edi
1003c8fb:	push   ecx
1003c8fc:	push   edx
1003c8fd:	push   ebx
1003c8fe:	push   ebp
1003c8ff:	call   0x1003a330
1003c904:	add    esp,0x24
1003c907:	test   eax,eax
1003c909:	jne    0x1003ce36
1003c90f:	nop
1003c910:	cmp    DWORD PTR [esp+0x18],esi
1003c914:	jge    0x1003c50f
1003c91a:	cmp    ebp,DWORD PTR [edi+0x5c]
1003c91d:	jae    0x1003c50f
1003c923:	movzx  eax,BYTE PTR [ebp+0x0]
1003c927:	mov    ecx,DWORD PTR [edi+0x24]
1003c92a:	movzx  edx,BYTE PTR [eax+ecx*1]
1003c92e:	add    ebp,0x1
1003c931:	cmp    DWORD PTR [esp+0x14],edx
1003c935:	jne    0x1003c50f
1003c93b:	mov    eax,DWORD PTR [esp+0x1c]
1003c93f:	mov    ecx,DWORD PTR [esp+0x114]
1003c946:	mov    edx,DWORD PTR [esp+0x110]
1003c94d:	add    DWORD PTR [esp+0x18],0x1
1003c952:	push   eax
1003c953:	mov    eax,DWORD PTR [esp+0x10c]
1003c95a:	push   0x0
1003c95c:	push   ecx
1003c95d:	mov    ecx,DWORD PTR [esp+0x110]
1003c964:	push   edx
1003c965:	push   edi
1003c966:	push   eax
1003c967:	push   ecx
1003c968:	push   ebx
1003c969:	push   ebp
1003c96a:	call   0x1003a330
1003c96f:	add    esp,0x24
1003c972:	test   eax,eax
1003c974:	je     0x1003c910
1003c976:	pop    edi
1003c977:	pop    esi
1003c978:	pop    ebp
1003c979:	pop    ebx
1003c97a:	add    esp,0xe8
1003c980:	ret    
1003c981:	mov    ecx,DWORD PTR [esp+0x110]
1003c988:	mov    edx,DWORD PTR [esp+0x108]
1003c98f:	mov    DWORD PTR [esp+0x18],eax
1003c993:	mov    eax,DWORD PTR [esp+0x11c]
1003c99a:	add    eax,0x1
1003c99d:	push   eax
1003c99e:	push   0x0
1003c9a0:	mov    DWORD PTR [esp+0x24],eax
1003c9a4:	mov    eax,DWORD PTR [esp+0x11c]
1003c9ab:	push   eax
1003c9ac:	mov    eax,DWORD PTR [esp+0x110]
1003c9b3:	push   ecx
1003c9b4:	push   edi
1003c9b5:	push   edx
1003c9b6:	push   eax
1003c9b7:	push   ebx
1003c9b8:	push   ebp
1003c9b9:	call   0x1003a330
1003c9be:	add    esp,0x24
1003c9c1:	test   eax,eax
1003c9c3:	jne    0x1003ce36
1003c9c9:	lea    esp,[esp+0x0]
1003c9d0:	cmp    DWORD PTR [esp+0x18],esi
1003c9d4:	jge    0x1003c50f
1003c9da:	cmp    ebp,DWORD PTR [edi+0x5c]
1003c9dd:	jae    0x1003c50f
1003c9e3:	movzx  ecx,BYTE PTR [ebp+0x0]
1003c9e7:	add    ebp,0x1
1003c9ea:	cmp    DWORD PTR [esp+0x14],ecx
1003c9ee:	jne    0x1003c50f
1003c9f4:	mov    edx,DWORD PTR [esp+0x1c]
1003c9f8:	mov    eax,DWORD PTR [esp+0x114]
1003c9ff:	mov    ecx,DWORD PTR [esp+0x110]
1003ca06:	add    DWORD PTR [esp+0x18],0x1
1003ca0b:	push   edx
1003ca0c:	mov    edx,DWORD PTR [esp+0x10c]
1003ca13:	push   0x0
1003ca15:	push   eax
1003ca16:	mov    eax,DWORD PTR [esp+0x110]
1003ca1d:	push   ecx
1003ca1e:	push   edi
1003ca1f:	push   edx
1003ca20:	push   eax
1003ca21:	push   ebx
1003ca22:	push   ebp
1003ca23:	call   0x1003a330
1003ca28:	add    esp,0x24
1003ca2b:	test   eax,eax
1003ca2d:	je     0x1003c9d0
1003ca2f:	pop    edi
1003ca30:	pop    esi
1003ca31:	pop    ebp
1003ca32:	pop    ebx
1003ca33:	add    esp,0xe8
1003ca39:	ret    
1003ca3a:	mov    edx,DWORD PTR [esp+0x114]
1003ca41:	mov    ecx,DWORD PTR [esp+0x108]
1003ca48:	mov    DWORD PTR [esp+0x18],eax
1003ca4c:	mov    eax,DWORD PTR [esp+0x11c]
1003ca53:	add    eax,0x1
1003ca56:	push   eax
1003ca57:	push   0x0
1003ca59:	push   edx
1003ca5a:	mov    edx,DWORD PTR [esp+0x110]
1003ca61:	mov    DWORD PTR [esp+0x28],eax
1003ca65:	mov    eax,DWORD PTR [esp+0x11c]
1003ca6c:	push   eax
1003ca6d:	push   edi
1003ca6e:	push   ecx
1003ca6f:	push   edx
1003ca70:	push   ebx
1003ca71:	push   ebp
1003ca72:	call   0x1003a330
1003ca77:	add    esp,0x24
1003ca7a:	test   eax,eax
1003ca7c:	jne    0x1003ce36
1003ca82:	cmp    DWORD PTR [esp+0x18],esi
1003ca86:	jge    0x1003c50f
1003ca8c:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ca8f:	jae    0x1003c50f
1003ca95:	movzx  eax,BYTE PTR [ebp+0x0]
1003ca99:	mov    ecx,DWORD PTR [edi+0x24]
1003ca9c:	movzx  edx,BYTE PTR [eax+ecx*1]
1003caa0:	add    ebp,0x1
1003caa3:	cmp    DWORD PTR [esp+0x14],edx
1003caa7:	je     0x1003c50f
1003caad:	mov    eax,DWORD PTR [esp+0x1c]
1003cab1:	mov    ecx,DWORD PTR [esp+0x114]
1003cab8:	mov    edx,DWORD PTR [esp+0x110]
1003cabf:	add    DWORD PTR [esp+0x18],0x1
1003cac4:	push   eax
1003cac5:	mov    eax,DWORD PTR [esp+0x10c]
1003cacc:	push   0x0
1003cace:	push   ecx
1003cacf:	mov    ecx,DWORD PTR [esp+0x110]
1003cad6:	push   edx
1003cad7:	push   edi
1003cad8:	push   eax
1003cad9:	push   ecx
1003cada:	push   ebx
1003cadb:	push   ebp
1003cadc:	call   0x1003a330
1003cae1:	add    esp,0x24
1003cae4:	test   eax,eax
1003cae6:	je     0x1003ca82
1003cae8:	pop    edi
1003cae9:	pop    esi
1003caea:	pop    ebp
1003caeb:	pop    ebx
1003caec:	add    esp,0xe8
1003caf2:	ret    
1003caf3:	mov    ecx,DWORD PTR [esp+0x110]
1003cafa:	mov    edx,DWORD PTR [esp+0x108]
1003cb01:	mov    DWORD PTR [esp+0x18],eax
1003cb05:	mov    eax,DWORD PTR [esp+0x11c]
1003cb0c:	add    eax,0x1
1003cb0f:	push   eax
1003cb10:	push   0x0
1003cb12:	mov    DWORD PTR [esp+0x24],eax
1003cb16:	mov    eax,DWORD PTR [esp+0x11c]
1003cb1d:	push   eax
1003cb1e:	mov    eax,DWORD PTR [esp+0x110]
1003cb25:	push   ecx
1003cb26:	push   edi
1003cb27:	push   edx
1003cb28:	push   eax
1003cb29:	push   ebx
1003cb2a:	push   ebp
1003cb2b:	call   0x1003a330
1003cb30:	add    esp,0x24
1003cb33:	test   eax,eax
1003cb35:	jne    0x1003ce36
1003cb3b:	jmp    0x1003cb40
1003cb3d:	lea    ecx,[ecx+0x0]
1003cb40:	cmp    DWORD PTR [esp+0x18],esi
1003cb44:	jge    0x1003c50f
1003cb4a:	cmp    ebp,DWORD PTR [edi+0x5c]
1003cb4d:	jae    0x1003c50f
1003cb53:	movzx  ecx,BYTE PTR [ebp+0x0]
1003cb57:	add    ebp,0x1
1003cb5a:	cmp    DWORD PTR [esp+0x14],ecx
1003cb5e:	je     0x1003c50f
1003cb64:	mov    edx,DWORD PTR [esp+0x1c]
1003cb68:	mov    eax,DWORD PTR [esp+0x114]
1003cb6f:	mov    ecx,DWORD PTR [esp+0x110]
1003cb76:	add    DWORD PTR [esp+0x18],0x1
1003cb7b:	push   edx
1003cb7c:	mov    edx,DWORD PTR [esp+0x10c]
1003cb83:	push   0x0
1003cb85:	push   eax
1003cb86:	mov    eax,DWORD PTR [esp+0x110]
1003cb8d:	push   ecx
1003cb8e:	push   edi
1003cb8f:	push   edx
1003cb90:	push   eax
1003cb91:	push   ebx
1003cb92:	push   ebp
1003cb93:	call   0x1003a330
1003cb98:	add    esp,0x24
1003cb9b:	test   eax,eax
1003cb9d:	je     0x1003cb40
1003cb9f:	pop    edi
1003cba0:	pop    esi
1003cba1:	pop    ebp
1003cba2:	pop    ebx
1003cba3:	add    esp,0xe8
1003cba9:	ret    
1003cbaa:	mov    eax,0xfffffff2
1003cbaf:	pop    edi
1003cbb0:	pop    esi
1003cbb1:	pop    ebp
1003cbb2:	pop    ebx
1003cbb3:	add    esp,0xe8
1003cbb9:	ret    
1003cbba:	mov    edx,DWORD PTR [esp+0x114]
1003cbc1:	mov    eax,DWORD PTR [esp+0x110]
1003cbc8:	mov    ecx,DWORD PTR [esp+0x108]
1003cbcf:	mov    DWORD PTR [esp+0x18],esi
1003cbd3:	mov    esi,DWORD PTR [esp+0x11c]
1003cbda:	add    esi,0x1
1003cbdd:	push   esi
1003cbde:	push   0x0
1003cbe0:	push   edx
1003cbe1:	mov    edx,DWORD PTR [esp+0x110]
1003cbe8:	push   eax
1003cbe9:	push   edi
1003cbea:	push   ecx
1003cbeb:	push   edx
1003cbec:	push   ebx
1003cbed:	push   ebp
1003cbee:	call   0x1003a330
1003cbf3:	add    esp,0x24
1003cbf6:	test   eax,eax
1003cbf8:	jne    0x1003ce36
1003cbfe:	mov    eax,DWORD PTR [esp+0x18]
1003cc02:	cmp    eax,DWORD PTR [esp+0x14]
1003cc06:	jge    0x1003c50f
1003cc0c:	mov    eax,DWORD PTR [edi+0x5c]
1003cc0f:	cmp    ebp,eax
1003cc11:	jae    0x1003c50f
1003cc17:	cmp    DWORD PTR [esp+0x24],0xc
1003cc1c:	jne    0x1003cc73
1003cc1e:	mov    ecx,DWORD PTR [edi+0x18]
1003cc21:	test   ecx,ecx
1003cc23:	je     0x1003cc4d
1003cc25:	mov    edi,DWORD PTR [esp+0x10c]
1003cc2c:	push   ecx
1003cc2d:	add    edi,0x1c
1003cc30:	xor    edx,edx
1003cc32:	mov    ecx,ebp
1003cc34:	call   0x10042ba0
1003cc39:	add    esp,0x4
1003cc3c:	test   eax,eax
1003cc3e:	jne    0x1003c50f
1003cc44:	mov    edi,DWORD PTR [esp+0x10c]
1003cc4b:	jmp    0x1003cc73
1003cc4d:	mov    ecx,DWORD PTR [edi+0x1c]
1003cc50:	sub    eax,ecx
1003cc52:	cmp    ebp,eax
1003cc54:	ja     0x1003cc73
1003cc56:	mov    dl,BYTE PTR [ebp+0x0]
1003cc59:	cmp    dl,BYTE PTR [edi+0x20]
1003cc5c:	jne    0x1003cc73
1003cc5e:	cmp    ecx,0x1
1003cc61:	je     0x1003c50f
1003cc67:	mov    al,BYTE PTR [ebp+0x1]
1003cc6a:	cmp    al,BYTE PTR [edi+0x21]
1003cc6d:	je     0x1003c50f
1003cc73:	mov    ecx,DWORD PTR [esp+0x24]
1003cc77:	movzx  eax,BYTE PTR [ebp+0x0]
1003cc7b:	add    ecx,0xfffffffa
1003cc7e:	add    ebp,0x1
1003cc81:	cmp    ecx,0xf
1003cc84:	ja     0x1003cbaa
1003cc8a:	jmp    DWORD PTR [ecx*4+0x1003d0f8]
1003cc91:	add    eax,0xfffffff6
1003cc94:	cmp    eax,0x7b
1003cc97:	ja     0x1003c50f
1003cc9d:	movzx  ecx,BYTE PTR [eax+0x1003d148]
1003cca4:	jmp    DWORD PTR [ecx*4+0x1003d138]
1003ccab:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ccae:	jae    0x1003cd8c
1003ccb4:	cmp    BYTE PTR [ebp+0x0],0xa
1003ccb8:	jne    0x1003cd8c
1003ccbe:	add    ebp,0x1
1003ccc1:	jmp    0x1003cd8c
1003ccc6:	cmp    DWORD PTR [edi+0x50],0x0
1003ccca:	jne    0x1003c50f
1003ccd0:	jmp    0x1003cd8c
1003ccd5:	cmp    eax,0x9
1003ccd8:	je     0x1003c50f
1003ccde:	cmp    eax,0x20
1003cce1:	je     0x1003c50f
1003cce7:	cmp    eax,0xa0
1003ccec:	jmp    0x1003cd86
1003ccf1:	cmp    eax,0x9
1003ccf4:	je     0x1003cd8c
1003ccfa:	cmp    eax,0x20
1003ccfd:	je     0x1003cd8c
1003cd03:	cmp    eax,0xa0
1003cd08:	jne    0x1003c50f
1003cd0e:	jmp    0x1003cd8c
1003cd10:	cmp    eax,0xa
1003cd13:	jb     0x1003cd8c
1003cd15:	cmp    eax,0xd
1003cd18:	jbe    0x1003c50f
1003cd1e:	cmp    eax,0x85
1003cd23:	jmp    0x1003cd86
1003cd25:	cmp    eax,0xa
1003cd28:	jb     0x1003c50f
1003cd2e:	cmp    eax,0xd
1003cd31:	jbe    0x1003cd8c
1003cd33:	cmp    eax,0x85
1003cd38:	jne    0x1003c50f
1003cd3e:	jmp    0x1003cd8c
1003cd40:	mov    edx,DWORD PTR [edi+0x28]
1003cd43:	test   BYTE PTR [eax+edx*1],0x4
1003cd47:	jne    0x1003c50f
1003cd4d:	jmp    0x1003cd8c
1003cd4f:	mov    ecx,DWORD PTR [edi+0x28]
1003cd52:	test   BYTE PTR [eax+ecx*1],0x4
1003cd56:	jmp    0x1003cd86
1003cd58:	mov    edx,DWORD PTR [edi+0x28]
1003cd5b:	test   BYTE PTR [eax+edx*1],0x1
1003cd5f:	jne    0x1003c50f
1003cd65:	jmp    0x1003cd8c
1003cd67:	mov    ecx,DWORD PTR [edi+0x28]
1003cd6a:	test   BYTE PTR [eax+ecx*1],0x1
1003cd6e:	jmp    0x1003cd86
1003cd70:	mov    edx,DWORD PTR [edi+0x28]
1003cd73:	test   BYTE PTR [eax+edx*1],0x10
1003cd77:	jne    0x1003c50f
1003cd7d:	jmp    0x1003cd8c
1003cd7f:	mov    ecx,DWORD PTR [edi+0x28]
1003cd82:	test   BYTE PTR [eax+ecx*1],0x10
1003cd86:	je     0x1003c50f
1003cd8c:	mov    edx,DWORD PTR [esp+0x114]
1003cd93:	mov    eax,DWORD PTR [esp+0x110]
1003cd9a:	mov    ecx,DWORD PTR [esp+0x108]
1003cda1:	add    DWORD PTR [esp+0x18],0x1
1003cda6:	push   esi
1003cda7:	push   0x0
1003cda9:	push   edx
1003cdaa:	mov    edx,DWORD PTR [esp+0x110]
1003cdb1:	push   eax
1003cdb2:	push   edi
1003cdb3:	push   ecx
1003cdb4:	push   edx
1003cdb5:	push   ebx
1003cdb6:	push   ebp
1003cdb7:	call   0x1003a330
1003cdbc:	add    esp,0x24
1003cdbf:	test   eax,eax
1003cdc1:	je     0x1003cbfe
1003cdc7:	pop    edi
1003cdc8:	pop    esi
1003cdc9:	pop    ebp
1003cdca:	pop    ebx
1003cdcb:	add    esp,0xe8
1003cdd1:	ret    
1003cdd2:	cmp    ebp,DWORD PTR [esp+0x20]
1003cdd6:	jb     0x1003ce24
1003cdd8:	mov    esi,DWORD PTR [esp+0x11c]
1003cddf:	mov    edi,DWORD PTR [esp+0x104]
1003cde6:	add    esi,0x1
1003cde9:	mov    eax,DWORD PTR [esp+0x114]
1003cdf0:	mov    ecx,DWORD PTR [esp+0x110]
1003cdf7:	mov    edx,DWORD PTR [esp+0x10c]
1003cdfe:	push   esi
1003cdff:	push   0x0
1003ce01:	push   eax
1003ce02:	mov    eax,DWORD PTR [esp+0x114]
1003ce09:	push   ecx
1003ce0a:	push   edx
1003ce0b:	push   eax
1003ce0c:	push   edi
1003ce0d:	push   ebx
1003ce0e:	push   ebp
1003ce0f:	call   0x1003a330
1003ce14:	add    esp,0x24
1003ce17:	sub    ebp,0x1
1003ce1a:	test   eax,eax
1003ce1c:	jne    0x1003ce36
1003ce1e:	cmp    ebp,DWORD PTR [esp+0x20]
1003ce22:	jae    0x1003cde9
1003ce24:	xor    eax,eax
1003ce26:	pop    edi
1003ce27:	pop    esi
1003ce28:	pop    ebp
1003ce29:	pop    ebx
1003ce2a:	add    esp,0xe8
1003ce30:	ret    
1003ce31:	mov    eax,0xfffffffb
1003ce36:	pop    edi
1003ce37:	pop    esi
1003ce38:	pop    ebp
1003ce39:	pop    ebx
1003ce3a:	add    esp,0xe8
1003ce40:	ret    
1003ce41:	lea    ecx,[ecx+0x0]
1003ce44:	ret    0x3a4
1003ce47:	adc    BYTE PTR [esi],al
1003ce49:	stos   BYTE PTR es:[edi],al
1003ce4a:	add    edx,DWORD PTR [eax]
1003ce4c:	pop    ss
1003ce4d:	stos   BYTE PTR es:[edi],al
1003ce4e:	add    edx,DWORD PTR [eax]
1003ce50:	sub    eax,0x611003aa
1003ce55:	stos   DWORD PTR es:[edi],eax
1003ce56:	add    edx,DWORD PTR [eax]
1003ce58:	push   ebp
1003ce59:	lods   al,BYTE PTR ds:[esi]
1003ce5a:	add    edx,DWORD PTR [eax]
1003ce5c:	jp     0x1003ce0a
1003ce5e:	add    edx,DWORD PTR [eax]
1003ce60:	lahf   
1003ce61:	lods   al,BYTE PTR ds:[esi]
1003ce62:	add    edx,DWORD PTR [eax]
1003ce64:	les    ebp,FWORD PTR [ebx+eax*1+0x3ace910]
1003ce6b:	adc    BYTE PTR [esi],cl
1003ce6d:	lods   eax,DWORD PTR ds:[esi]
1003ce6e:	add    edx,DWORD PTR [eax]
1003ce70:	retf   0x3ab
1003ce73:	adc    BYTE PTR [ecx],ch
1003ce75:	lods   al,BYTE PTR ds:[esi]
1003ce76:	add    edx,DWORD PTR [eax]
1003ce78:	aas    
1003ce79:	lods   al,BYTE PTR ds:[esi]
1003ce7a:	add    edx,DWORD PTR [eax]
1003ce7c:	xor    ebp,DWORD PTR [ebp-0x525feffd]
1003ce82:	add    edx,DWORD PTR [eax]
1003ce84:	sbb    BYTE PTR [esi-0x517feffd],ch
1003ce8a:	add    edx,DWORD PTR [eax]
1003ce8c:	shr    DWORD PTR [esi-0x5531effd],0x3
1003ce93:	adc    BYTE PTR [eax-0x55],dl
1003ce96:	add    edx,DWORD PTR [eax]
1003ce98:	adc    DWORD PTR [ebp-0x5689effd],esp
1003ce9e:	add    edx,DWORD PTR [eax]
1003cea0:	cmp    al,0xaa
1003cea2:	add    edx,DWORD PTR [eax]
1003cea4:	loop   0x1003ce58
1003cea6:	add    edx,DWORD PTR [eax]
1003cea8:	pop    es
1003cea9:	mov    bl,0x3
1003ceab:	adc    BYTE PTR [edi-0x66effc4b],cl
1003ceb1:	mov    bl,0x3
1003ceb3:	adc    BYTE PTR [ecx-0x4d],dl
1003ceb6:	add    edx,DWORD PTR [eax]
1003ceb8:	aaa    
1003ceb9:	mov    bl,0x3
1003cebb:	adc    BYTE PTR [esi-0x4d],ch
1003cebe:	add    edx,DWORD PTR [eax]
1003cec0:	jge    0x1003ce75
1003cec2:	add    edx,DWORD PTR [eax]
1003cec4:	mov    dh,BYTE PTR [ebx-0x4cb6effd]
1003ceca:	add    edx,DWORD PTR [eax]
1003cecc:	popa   
1003cecd:	mov    dh,0x3
1003cecf:	adc    ch,bh
1003ced1:	mov    ch,0x3
1003ced3:	adc    cl,ch
1003ced5:	mov    ch,0x3
1003ced7:	adc    BYTE PTR ds:0x2c1003b6,bl
1003cedd:	mov    dh,0x3
1003cedf:	adc    BYTE PTR [ecx],bh
1003cee1:	mov    dh,0x3
1003cee3:	adc    BYTE PTR [eax-0x4a],cl
1003cee6:	add    edx,DWORD PTR [eax]
1003cee8:	jmp    0x8a13d2a5
1003ceed:	mov    eax,0xb85c1003
1003cef2:	add    edx,DWORD PTR [eax]
1003cef4:	pushf  
1003cef5:	mov    eax,0xb8ae1003
1003cefa:	add    edx,DWORD PTR [eax]
1003cefc:	mov    ebx,0xce1003b8
1003cf01:	mov    eax,0xb11f1003
1003cf06:	add    edx,DWORD PTR [eax]
1003cf08:	push   es
1003cf09:	scas   eax,DWORD PTR es:[edi]
1003cf0a:	add    edx,DWORD PTR [eax]
1003cf0c:	xchg   esp,eax
1003cf0d:	lds    eax,FWORD PTR [ebx]
1003cf0f:	adc    BYTE PTR [ecx-0x5a],al
1003cf12:	add    edx,DWORD PTR [eax]
1003cf14:	test   BYTE PTR [edi-0x57a5effd],ah
1003cf1a:	add    edx,DWORD PTR [eax]
1003cf1c:	and    al,0xa5
1003cf1e:	add    edx,DWORD PTR [eax]
1003cf20:	mov    ah,0xa5
1003cf22:	add    edx,DWORD PTR [eax]
1003cf24:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
1003cf26:	add    edx,DWORD PTR [eax]
1003cf28:	frstor [esi-0x3f77effd]
1003cf2e:	add    edx,DWORD PTR [eax]
1003cf30:	jo     0x1003cef2
1003cf32:	add    edx,DWORD PTR [eax]
1003cf34:	jmp    0xa813d2dc
1003cf39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1003cf3a:	add    edx,DWORD PTR [eax]
1003cf3c:	jmp    0x1003cee5
1003cf3e:	add    edx,DWORD PTR [eax]
1003cf40:	mov    ecx,0x6f1003c2
1003cf45:	ret    
1003cf46:	add    edx,DWORD PTR [eax]
1003cf48:	int    0xc3
1003cf4a:	add    edx,DWORD PTR [eax]
1003cf4c:	adc    al,0xc3
1003cf4e:	add    edx,DWORD PTR [eax]
1003cf50:	pextrw eax,(bad),0xc5
1003cf52:	add    edx,DWORD PTR [eax]
1003cf54:	inc    eax
1003cf55:	test   al,0x3
1003cf57:	adc    BYTE PTR [ecx],dh
1003cf59:	into   
1003cf5a:	add    edx,DWORD PTR [eax]
1003cf5c:	add    BYTE PTR [ecx],al
1003cf5e:	add    al,BYTE PTR [ebx]
1003cf60:	add    al,0x4
1003cf62:	add    eax,0x9080706
1003cf67:	or     cl,BYTE PTR [ebx]
1003cf69:	or     al,0xd
1003cf6b:	inc    ebp
1003cf6c:	inc    ebp
1003cf6d:	push   cs
1003cf6e:	movups xmm2,XMMWORD PTR [ecx]
1003cf71:	adc    al,BYTE PTR [ebp+0x13]
1003cf74:	adc    al,0x15
1003cf76:	push   ss
1003cf77:	pop    ss
1003cf78:	sbb    BYTE PTR [ecx],bl
1003cf7a:	sbb    bl,BYTE PTR [ebx]
1003cf7c:	sbb    ebx,DWORD PTR [ebx]
1003cf7e:	sbb    ebx,DWORD PTR [ebx]
1003cf80:	sbb    ebx,DWORD PTR [esp+ebx*1]
1003cf83:	sbb    eax,0x21201f1e
1003cf88:	and    ah,BYTE PTR [edx]
1003cf8a:	and    ah,BYTE PTR [edx]
1003cf8c:	and    ah,BYTE PTR [edx]
1003cf8e:	and    esp,DWORD PTR [ebx]
1003cf90:	and    al,0x25
1003cf92:	es daa 
1003cf94:	sub    BYTE PTR [ecx],ch
1003cf96:	sub    DWORD PTR [ecx],ebp
1003cf98:	sub    DWORD PTR [ecx],ebp
1003cf9a:	sub    DWORD PTR [edx],ebp
1003cf9c:	sub    ch,BYTE PTR [ebx]
1003cf9e:	sub    al,0x2d
1003cfa0:	cs das 
1003cfa2:	inc    ebp
1003cfa3:	inc    ebp
1003cfa4:	inc    ebp
1003cfa5:	inc    ebp
1003cfa6:	inc    ebp
1003cfa7:	inc    ebp
1003cfa8:	inc    ebp
1003cfa9:	inc    ebp
1003cfaa:	xor    BYTE PTR [eax],dh
1003cfac:	inc    ebp
1003cfad:	xor    DWORD PTR [edx],esi
1003cfaf:	xor    esi,DWORD PTR [esi*1+0x37363535]
1003cfb6:	ss aaa 
1003cfb8:	cmp    BYTE PTR [ecx],bh
1003cfba:	cmp    bh,BYTE PTR [ebx]
1003cfbc:	cmp    al,0x3a
1003cfbe:	cmp    edi,DWORD PTR [eax*2+0x3e3d4545]
1003cfc5:	aas    
1003cfc6:	inc    eax
1003cfc7:	inc    ecx
1003cfc8:	inc    edx
1003cfc9:	inc    ebx
1003cfca:	add    BYTE PTR [ebp+eiz*2-0x51],al
1003cfce:	add    edx,DWORD PTR [eax]
1003cfd0:	cwde   
1003cfd1:	scas   eax,DWORD PTR es:[edi]
1003cfd2:	add    edx,DWORD PTR [eax]
1003cfd4:	add    BYTE PTR [eax],al
1003cfd6:	add    BYTE PTR [eax],al
1003cfd8:	add    BYTE PTR [eax],al
1003cfda:	add    DWORD PTR [ecx],eax
1003cfdc:	dec    ecx
1003cfdd:	mov    cl,0x3
1003cfdf:	adc    BYTE PTR [ebp-0x4f],dh
1003cfe2:	add    edx,DWORD PTR [eax]
1003cfe4:	add    BYTE PTR [eax],al
1003cfe6:	add    BYTE PTR [eax],al
1003cfe8:	add    BYTE PTR [eax],al
1003cfea:	add    DWORD PTR [ecx],eax
1003cfec:	inc    edi
1003cfed:	mov    ebx,0xbb811003
1003cff2:	add    edx,DWORD PTR [eax]
1003cff4:	mov    dl,0xbb
1003cff6:	add    edx,DWORD PTR [eax]
1003cff8:	jecxz  0x1003cfb5
1003cffa:	add    edx,DWORD PTR [eax]
1003cffc:	adc    DWORD PTR [ebx+eax*1+0x3bc3e10],edi
1003d003:	adc    BYTE PTR [ebp-0x47],cl
1003d006:	add    edx,DWORD PTR [eax]
1003d008:	(bad)  
1003d009:	mov    ecx,0xb9d61003
1003d00e:	add    edx,DWORD PTR [eax]
1003d010:	stos   BYTE PTR es:[edi],al
1003d011:	retf   
1003d012:	add    edx,DWORD PTR [eax]
1003d014:	stos   BYTE PTR es:[edi],al
1003d015:	retf   
1003d016:	add    edx,DWORD PTR [eax]
1003d018:	fnstsw WORD PTR [ecx-0x45c1effd]
1003d01e:	add    edx,DWORD PTR [eax]
1003d020:	mov    BYTE PTR [edx-0x453aeffd],bh
1003d026:	add    edx,DWORD PTR [eax]
1003d028:	push   es
1003d029:	mov    ebx,0xba321003
1003d02e:	add    edx,DWORD PTR [eax]
1003d030:	sub    BYTE PTR [edx-0x45e6effd],bh
1003d036:	add    edx,DWORD PTR [eax]
1003d038:	pextrw eax,(bad),0xc5
1003d03a:	add    edx,DWORD PTR [eax]
1003d03c:	add    BYTE PTR [ecx],al
1003d03e:	add    DWORD PTR [edx],eax
1003d040:	add    eax,DWORD PTR [ebx]
1003d042:	add    eax,DWORD PTR [ebx]
1003d044:	add    eax,DWORD PTR [ebx]
1003d046:	add    eax,DWORD PTR [ebx]
1003d048:	add    eax,DWORD PTR [ebx]
1003d04a:	add    eax,DWORD PTR [ebx]
1003d04c:	add    eax,DWORD PTR [ebx]
1003d04e:	add    eax,DWORD PTR [ebx]
1003d050:	add    eax,DWORD PTR [ebx]
1003d052:	add    eax,DWORD PTR [ebx]
1003d054:	add    eax,DWORD PTR [ebx]
1003d056:	add    eax,DWORD PTR [ebx]
1003d058:	add    eax,DWORD PTR [ebx]
1003d05a:	add    eax,DWORD PTR [ebx]
1003d05c:	add    eax,DWORD PTR [ebx]
1003d05e:	add    eax,DWORD PTR [ebx]
1003d060:	add    eax,DWORD PTR [ebx]
1003d062:	add    eax,DWORD PTR [ebx]
1003d064:	add    eax,DWORD PTR [ebx]
1003d066:	add    eax,DWORD PTR [ebx]
1003d068:	add    eax,DWORD PTR [ebx]
1003d06a:	add    eax,DWORD PTR [ebx]
1003d06c:	add    eax,DWORD PTR [ebx]
1003d06e:	add    eax,DWORD PTR [ebx]
1003d070:	add    eax,DWORD PTR [ebx]
1003d072:	add    eax,DWORD PTR [ebx]
1003d074:	add    eax,DWORD PTR [ebx]
1003d076:	add    eax,DWORD PTR [ebx]
1003d078:	add    eax,DWORD PTR [ebx]
1003d07a:	add    eax,DWORD PTR [ebx]
1003d07c:	add    eax,DWORD PTR [ebx]
1003d07e:	add    eax,DWORD PTR [ebx]
1003d080:	add    eax,DWORD PTR [ebx]
1003d082:	add    eax,DWORD PTR [ebx]
1003d084:	add    eax,DWORD PTR [ebx]
1003d086:	add    eax,DWORD PTR [ebx]
1003d088:	add    eax,DWORD PTR [ebx]
1003d08a:	add    eax,DWORD PTR [ebx]
1003d08c:	add    eax,DWORD PTR [ebx]
1003d08e:	add    eax,DWORD PTR [ebx]
1003d090:	add    eax,DWORD PTR [ebx]
1003d092:	add    eax,DWORD PTR [ebx]
1003d094:	add    eax,DWORD PTR [ebx]
1003d096:	add    eax,DWORD PTR [ebx]
1003d098:	add    eax,DWORD PTR [ebx]
1003d09a:	add    eax,DWORD PTR [ebx]
1003d09c:	add    eax,DWORD PTR [ebx]
1003d09e:	add    eax,DWORD PTR [ebx]
1003d0a0:	add    eax,DWORD PTR [ebx]
1003d0a2:	add    eax,DWORD PTR [ebx]
1003d0a4:	add    eax,DWORD PTR [ebx]
1003d0a6:	add    eax,DWORD PTR [ebx]
1003d0a8:	add    eax,DWORD PTR [ebx]
1003d0aa:	add    eax,DWORD PTR [ebx]
1003d0ac:	add    eax,DWORD PTR [ebx]
1003d0ae:	add    eax,DWORD PTR [ebx]
1003d0b0:	add    eax,DWORD PTR [ebx]
1003d0b2:	add    eax,DWORD PTR [ebx]
1003d0b4:	add    eax,DWORD PTR [ebx]
1003d0b6:	add    eax,DWORD PTR [ecx]
1003d0b8:	mov    ebp,0xfa1003be
1003d0bd:	mov    esi,0xbf311003
1003d0c2:	add    edx,DWORD PTR [eax]
1003d0c4:	push   0xffffffbf
1003d0c6:	add    edx,DWORD PTR [eax]
1003d0c8:	call   0x3bf:0xc21003bf
1003d0cf:	adc    BYTE PTR [esp+edi*4-0x42e8effd],bl
1003d0d6:	add    edx,DWORD PTR [eax]
1003d0d8:	pop    ss
1003d0d9:	mov    ebp,0xcbaa1003
1003d0de:	add    edx,DWORD PTR [eax]
1003d0e0:	stos   BYTE PTR es:[edi],al
1003d0e1:	retf   
1003d0e2:	add    edx,DWORD PTR [eax]
1003d0e4:	das    
1003d0e5:	mov    ebp,0xbd951003
1003d0ea:	add    edx,DWORD PTR [eax]
1003d0ec:	fdivr  QWORD PTR [ebp-0x41e4effd]
1003d0f2:	add    edx,DWORD PTR [eax]
1003d0f4:	je     0x1003d0b4
1003d0f6:	add    edx,DWORD PTR [eax]
1003d0f8:	inc    eax
1003d0f9:	int    0x3
1003d0fb:	adc    BYTE PTR [edi-0x33],cl
1003d0fe:	add    edx,DWORD PTR [eax]
1003d100:	pop    eax
1003d101:	int    0x3
1003d103:	adc    BYTE PTR [edi-0x33],ah
1003d106:	add    edx,DWORD PTR [eax]
1003d108:	jo     0x1003d0d7
1003d10a:	add    edx,DWORD PTR [eax]
1003d10c:	jg     0x1003d0db
1003d10e:	add    edx,DWORD PTR [eax]
1003d110:	mov    ebp,cs
1003d112:	add    edx,DWORD PTR [eax]
1003d114:	mov    ebp,cs
1003d116:	add    edx,DWORD PTR [eax]
1003d118:	mov    ebp,cs
1003d11a:	add    edx,DWORD PTR [eax]
1003d11c:	stos   BYTE PTR es:[edi],al
1003d11d:	retf   
1003d11e:	add    edx,DWORD PTR [eax]
1003d120:	stos   BYTE PTR es:[edi],al
1003d121:	retf   
1003d122:	add    edx,DWORD PTR [eax]
1003d124:	xchg   ecx,eax
1003d125:	int3   
1003d126:	add    edx,DWORD PTR [eax]
1003d128:	aad    0xcc
1003d12a:	add    edx,DWORD PTR [eax]
1003d12c:	icebp  
1003d12d:	int3   
1003d12e:	add    edx,DWORD PTR [eax]
1003d130:	adc    ch,cl
1003d132:	add    edx,DWORD PTR [eax]
1003d134:	and    eax,0x8c1003cd
1003d139:	int    0x3
1003d13b:	adc    dh,al
1003d13d:	int3   
1003d13e:	add    edx,DWORD PTR [eax]
1003d140:	stos   DWORD PTR es:[edi],eax
1003d141:	int3   
1003d142:	add    edx,DWORD PTR [eax]
1003d144:	pextrw eax,(bad),0xc5
1003d146:	add    edx,DWORD PTR [eax]
1003d148:	add    BYTE PTR [ecx],al
1003d14a:	add    DWORD PTR [edx],eax
1003d14c:	add    eax,DWORD PTR [ebx]
1003d14e:	add    eax,DWORD PTR [ebx]
1003d150:	add    eax,DWORD PTR [ebx]
1003d152:	add    eax,DWORD PTR [ebx]
1003d154:	add    eax,DWORD PTR [ebx]
1003d156:	add    eax,DWORD PTR [ebx]
1003d158:	add    eax,DWORD PTR [ebx]
1003d15a:	add    eax,DWORD PTR [ebx]
1003d15c:	add    eax,DWORD PTR [ebx]
1003d15e:	add    eax,DWORD PTR [ebx]
1003d160:	add    eax,DWORD PTR [ebx]
1003d162:	add    eax,DWORD PTR [ebx]
1003d164:	add    eax,DWORD PTR [ebx]
1003d166:	add    eax,DWORD PTR [ebx]
1003d168:	add    eax,DWORD PTR [ebx]
1003d16a:	add    eax,DWORD PTR [ebx]
1003d16c:	add    eax,DWORD PTR [ebx]
1003d16e:	add    eax,DWORD PTR [ebx]
1003d170:	add    eax,DWORD PTR [ebx]
1003d172:	add    eax,DWORD PTR [ebx]
1003d174:	add    eax,DWORD PTR [ebx]
1003d176:	add    eax,DWORD PTR [ebx]
1003d178:	add    eax,DWORD PTR [ebx]
1003d17a:	add    eax,DWORD PTR [ebx]
1003d17c:	add    eax,DWORD PTR [ebx]
1003d17e:	add    eax,DWORD PTR [ebx]
1003d180:	add    eax,DWORD PTR [ebx]
1003d182:	add    eax,DWORD PTR [ebx]
1003d184:	add    eax,DWORD PTR [ebx]
1003d186:	add    eax,DWORD PTR [ebx]
1003d188:	add    eax,DWORD PTR [ebx]
1003d18a:	add    eax,DWORD PTR [ebx]
1003d18c:	add    eax,DWORD PTR [ebx]
1003d18e:	add    eax,DWORD PTR [ebx]
1003d190:	add    eax,DWORD PTR [ebx]
1003d192:	add    eax,DWORD PTR [ebx]
1003d194:	add    eax,DWORD PTR [ebx]
1003d196:	add    eax,DWORD PTR [ebx]
1003d198:	add    eax,DWORD PTR [ebx]
1003d19a:	add    eax,DWORD PTR [ebx]
1003d19c:	add    eax,DWORD PTR [ebx]
1003d19e:	add    eax,DWORD PTR [ebx]
1003d1a0:	add    eax,DWORD PTR [ebx]
1003d1a2:	add    eax,DWORD PTR [ebx]
1003d1a4:	add    eax,DWORD PTR [ebx]
1003d1a6:	add    eax,DWORD PTR [ebx]
1003d1a8:	add    eax,DWORD PTR [ebx]
1003d1aa:	add    eax,DWORD PTR [ebx]
1003d1ac:	add    eax,DWORD PTR [ebx]
1003d1ae:	add    eax,DWORD PTR [ebx]
1003d1b0:	add    eax,DWORD PTR [ebx]
1003d1b2:	add    eax,DWORD PTR [ebx]
1003d1b4:	add    eax,DWORD PTR [ebx]
1003d1b6:	add    eax,DWORD PTR [ebx]
1003d1b8:	add    eax,DWORD PTR [ebx]
1003d1ba:	add    eax,DWORD PTR [ebx]
1003d1bc:	add    eax,DWORD PTR [ebx]
1003d1be:	add    eax,DWORD PTR [ebx]
1003d1c0:	add    eax,DWORD PTR [ebx]
1003d1c2:	add    eax,DWORD PTR [ecx]
1003d1c4:	int3   
1003d1c5:	int3   
1003d1c6:	int3   
1003d1c7:	int3   
1003d1c8:	int3   
1003d1c9:	int3   
1003d1ca:	int3   
1003d1cb:	int3   
1003d1cc:	int3   
1003d1cd:	int3   
1003d1ce:	int3   
1003d1cf:	int3   
1003d1d0:	sub    esp,0x134
1003d1d6:	mov    eax,ds:0x1007e030
1003d1db:	xor    eax,esp
1003d1dd:	mov    DWORD PTR [esp+0x12c],eax
1003d1e4:	mov    eax,DWORD PTR [esp+0x13c]
1003d1eb:	push   ebx
1003d1ec:	mov    ebx,DWORD PTR [esp+0x148]
1003d1f3:	push   ebp
1003d1f4:	mov    ebp,DWORD PTR [esp+0x140]
1003d1fb:	push   esi
1003d1fc:	mov    esi,ecx
1003d1fe:	or     ecx,0xffffffff
1003d201:	push   edi
1003d202:	mov    edi,edx
1003d204:	xor    edx,edx
1003d206:	test   esi,0xfe0f5a6f
1003d20c:	mov    DWORD PTR [esp+0x1c],ecx
1003d210:	mov    DWORD PTR [esp+0x44],ecx
1003d214:	mov    DWORD PTR [esp+0x50],ecx
1003d218:	lea    ecx,[edi-0x1]
1003d21b:	mov    DWORD PTR [esp+0x28],ebx
1003d21f:	mov    DWORD PTR [esp+0x2c],edx
1003d223:	mov    DWORD PTR [esp+0x4c],edx
1003d227:	mov    DWORD PTR [esp+0x54],edx
1003d22b:	mov    DWORD PTR [esp+0x3c],edx
1003d22f:	mov    DWORD PTR [esp+0x58],edi
1003d233:	mov    DWORD PTR [esp+0x34],ecx
1003d237:	mov    DWORD PTR [esp+0x20],ebp
1003d23b:	je     0x1003d247
1003d23d:	mov    eax,0xfffffffd
1003d242:	jmp    0x1003db3c
1003d247:	cmp    ebp,edx
1003d249:	je     0x1003db37
1003d24f:	cmp    edi,edx
1003d251:	je     0x1003db37
1003d257:	cmp    ebx,edx
1003d259:	je     0x1003db37
1003d25f:	cmp    eax,edx
1003d261:	mov    ecx,0x989680
1003d266:	mov    DWORD PTR [esp+0x8c],ecx
1003d26d:	mov    DWORD PTR [esp+0x90],ecx
1003d274:	mov    ecx,DWORD PTR [ebp+0x20]
1003d277:	mov    DWORD PTR [esp+0x14],edx
1003d27b:	mov    DWORD PTR [esp+0x108],edx
1003d282:	mov    DWORD PTR [esp+0x18],ecx
1003d286:	je     0x1003d2cf
1003d288:	mov    ecx,DWORD PTR [eax]
1003d28a:	test   cl,0x1
1003d28d:	je     0x1003d296
1003d28f:	mov    ebx,DWORD PTR [eax+0x4]
1003d292:	mov    DWORD PTR [esp+0x14],ebx
1003d296:	test   cl,0x2
1003d299:	je     0x1003d2a5
1003d29b:	mov    ebx,DWORD PTR [eax+0x8]
1003d29e:	mov    DWORD PTR [esp+0x8c],ebx
1003d2a5:	test   cl,0x10
1003d2a8:	je     0x1003d2b4
1003d2aa:	mov    ebx,DWORD PTR [eax+0x14]
1003d2ad:	mov    DWORD PTR [esp+0x90],ebx
1003d2b4:	test   cl,0x4
1003d2b7:	je     0x1003d2c3
1003d2b9:	mov    ebx,DWORD PTR [eax+0xc]
1003d2bc:	mov    DWORD PTR [esp+0x108],ebx
1003d2c3:	test   cl,0x8
1003d2c6:	je     0x1003d2cf
1003d2c8:	mov    eax,DWORD PTR [eax+0x10]
1003d2cb:	mov    DWORD PTR [esp+0x18],eax
1003d2cf:	cmp    DWORD PTR [esp+0x18],edx
1003d2d3:	jne    0x1003d2dd
1003d2d5:	mov    DWORD PTR [esp+0x18],0x1006e490
1003d2dd:	cmp    DWORD PTR [ebp+0x0],0x50435245
1003d2e4:	je     0x1003d32c
1003d2e6:	mov    ebx,DWORD PTR [esp+0x14]
1003d2ea:	lea    ecx,[esp+0x114]
1003d2f1:	push   ecx
1003d2f2:	lea    edx,[esp+0x64]
1003d2f6:	push   edx
1003d2f7:	mov    edx,ebp
1003d2f9:	call   0x10042d20
1003d2fe:	add    esp,0x8
1003d301:	test   eax,eax
1003d303:	mov    DWORD PTR [esp+0x20],eax
1003d307:	jne    0x1003d313
1003d309:	mov    eax,0xfffffffc
1003d30e:	jmp    0x1003db3c
1003d313:	mov    ebx,DWORD PTR [esp+0x20]
1003d317:	xor    edx,edx
1003d319:	cmp    DWORD PTR [esp+0x14],edx
1003d31d:	je     0x1003d330
1003d31f:	lea    eax,[esp+0x114]
1003d326:	mov    DWORD PTR [esp+0x14],eax
1003d32a:	jmp    0x1003d330
1003d32c:	xor    edx,edx
1003d32e:	mov    ebx,ebp
1003d330:	mov    eax,DWORD PTR [ebx+0x8]
1003d333:	mov    ecx,eax
1003d335:	shr    eax,0x12
1003d338:	and    eax,0x1
1003d33b:	or     ecx,esi
1003d33d:	mov    DWORD PTR [esp+0x38],eax
1003d341:	movzx  eax,WORD PTR [ebx+0x1a]
1003d345:	shr    ecx,0x4
1003d348:	and    ecx,0x1
1003d34b:	mov    DWORD PTR [esp+0x40],ecx
1003d34f:	movzx  ecx,BYTE PTR [ebx+0xc]
1003d353:	shr    ecx,0x3
1003d356:	and    ecx,0x1
1003d359:	mov    DWORD PTR [esp+0x48],ecx
1003d35d:	movzx  ecx,WORD PTR [ebx+0x1c]
1003d361:	imul   ecx,eax
1003d364:	movzx  eax,WORD PTR [ebx+0x18]
1003d368:	add    ecx,ebp
1003d36a:	add    eax,ecx
1003d36c:	mov    ecx,DWORD PTR [esp+0x150]
1003d373:	mov    DWORD PTR [esp+0xdc],eax
1003d37a:	mov    DWORD PTR [esp+0xe0],edi
1003d381:	add    edi,ecx
1003d383:	mov    DWORD PTR [esp+0xe4],edi
1003d38a:	mov    ecx,0x1
1003d38f:	mov    DWORD PTR [esp+0xf8],edx
1003d396:	mov    eax,DWORD PTR [ebx+0x8]
1003d399:	shr    eax,0x5
1003d39c:	and    eax,ecx
1003d39e:	mov    DWORD PTR [esp+0xc8],eax
1003d3a5:	mov    eax,DWORD PTR [ebx+0x8]
1003d3a8:	shr    eax,0xb
1003d3ab:	and    eax,ecx
1003d3ad:	mov    DWORD PTR [esp+0xc0],eax
1003d3b4:	mov    DWORD PTR [esp+0x24],eax
1003d3b8:	mov    eax,DWORD PTR [ebx+0x8]
1003d3bb:	shr    eax,0x19
1003d3be:	and    eax,ecx
1003d3c0:	mov    ebp,DWORD PTR [esp+0x18]
1003d3c4:	mov    DWORD PTR [esp+0xc4],eax
1003d3cb:	mov    eax,esi
1003d3cd:	shr    eax,0x7
1003d3d0:	and    eax,ecx
1003d3d2:	mov    DWORD PTR [esp+0xb8],eax
1003d3d9:	mov    eax,esi
1003d3db:	shr    eax,0x8
1003d3de:	and    eax,ecx
1003d3e0:	mov    DWORD PTR [esp+0xbc],eax
1003d3e7:	mov    eax,esi
1003d3e9:	shr    eax,0xa
1003d3ec:	and    eax,ecx
1003d3ee:	mov    DWORD PTR [esp+0x30],edi
1003d3f2:	mov    DWORD PTR [esp+0xcc],eax
1003d3f9:	lea    eax,[ebp+0x340]
1003d3ff:	mov    edi,esi
1003d401:	shr    edi,0xf
1003d404:	mov    DWORD PTR [esp+0xb0],eax
1003d40b:	and    edi,ecx
1003d40d:	mov    eax,esi
1003d40f:	and    eax,0x1800000
1003d414:	mov    DWORD PTR [esp+0xd0],edi
1003d41b:	mov    DWORD PTR [esp+0xd4],edx
1003d422:	mov    DWORD PTR [esp+0x104],edx
1003d429:	mov    DWORD PTR [esp+0xac],ebp
1003d430:	je     0x1003d453
1003d432:	cmp    eax,0x800000
1003d437:	je     0x1003d44a
1003d439:	cmp    eax,0x1000000
1003d43e:	je     0x1003d46b
1003d440:	mov    eax,0xffffffe9
1003d445:	jmp    0x1003db3c
1003d44a:	mov    DWORD PTR [esp+0xd8],ecx
1003d451:	jmp    0x1003d472
1003d453:	mov    eax,DWORD PTR [ebx+0x8]
1003d456:	test   eax,0x1800000
1003d45b:	je     0x1003d46b
1003d45d:	shr    eax,0x17
1003d460:	and    eax,ecx
1003d462:	mov    DWORD PTR [esp+0xd8],eax
1003d469:	jmp    0x1003d472
1003d46b:	mov    DWORD PTR [esp+0xd8],edx
1003d472:	test   esi,0x700000
1003d478:	jne    0x1003d47d
1003d47a:	mov    esi,DWORD PTR [ebx+0x8]
1003d47d:	and    esi,0x700000
1003d483:	cmp    esi,0x300000
1003d489:	ja     0x1003d4e2
1003d48b:	je     0x1003d4db
1003d48d:	cmp    esi,edx
1003d48f:	je     0x1003d4a1
1003d491:	cmp    esi,0x100000
1003d497:	je     0x1003d4d4
1003d499:	cmp    esi,0x200000
1003d49f:	jne    0x1003d440
1003d4a1:	mov    eax,0xa
1003d4a6:	cmp    eax,0xff
1003d4ab:	mov    DWORD PTR [esp+0xa0],edx
1003d4b2:	jle    0x1003d50c
1003d4b4:	mov    ecx,eax
1003d4b6:	sar    ecx,0x8
1003d4b9:	mov    DWORD PTR [esp+0xa4],0x2
1003d4c4:	mov    BYTE PTR [esp+0xa8],cl
1003d4cb:	mov    BYTE PTR [esp+0xa9],al
1003d4d2:	jmp    0x1003d51a
1003d4d4:	mov    eax,0xd
1003d4d9:	jmp    0x1003d4a6
1003d4db:	mov    eax,0xd0a
1003d4e0:	jmp    0x1003d4a6
1003d4e2:	cmp    esi,0x400000
1003d4e8:	je     0x1003d503
1003d4ea:	cmp    esi,0x500000
1003d4f0:	jne    0x1003d440
1003d4f6:	mov    DWORD PTR [esp+0xa0],0x2
1003d501:	jmp    0x1003d51a
1003d503:	mov    DWORD PTR [esp+0xa0],ecx
1003d50a:	jmp    0x1003d51a
1003d50c:	mov    DWORD PTR [esp+0xa4],ecx
1003d513:	mov    BYTE PTR [esp+0xa8],al
1003d51a:	cmp    edi,edx
1003d51c:	je     0x1003d52e
1003d51e:	test   BYTE PTR [ebx+0xc],0x1
1003d522:	je     0x1003d52e
1003d524:	mov    eax,0xfffffff3
1003d529:	jmp    0x1003db3c
1003d52e:	mov    eax,DWORD PTR [ebx+0x8]
1003d531:	and    eax,0x7
1003d534:	mov    DWORD PTR [esp+0x5c],eax
1003d538:	movzx  eax,WORD PTR [ebx+0x12]
1003d53c:	cmp    ax,dx
1003d53f:	mov    esi,0x33
1003d544:	jbe    0x1003d584
1003d546:	movzx  eax,ax
1003d549:	cmp    eax,0x11
1003d54c:	jl     0x1003d584
1003d54e:	lea    esi,[eax+eax*2+0x3]
1003d552:	lea    ecx,[esi*4+0x0]
1003d559:	push   ecx
1003d55a:	call   DWORD PTR ds:0x1007f4f8
1003d560:	mov    edi,eax
1003d562:	add    esp,0x4
1003d565:	test   edi,edi
1003d567:	mov    DWORD PTR [esp+0x94],edi
1003d56e:	jne    0x1003d57a
1003d570:	mov    eax,0xfffffffa
1003d575:	jmp    0x1003db3c
1003d57a:	mov    DWORD PTR [esp+0x2c],0x1
1003d582:	jmp    0x1003d58f
1003d584:	mov    edi,DWORD PTR [esp+0x28]
1003d588:	mov    DWORD PTR [esp+0x94],edi
1003d58f:	lea    ecx,[esi+esi*1]
1003d592:	mov    eax,0x55555556
1003d597:	imul   ecx
1003d599:	mov    eax,edx
1003d59b:	shr    eax,0x1f
1003d59e:	add    eax,edx
1003d5a0:	mov    DWORD PTR [esp+0x9c],eax
1003d5a7:	mov    DWORD PTR [esp+0x98],esi
1003d5ae:	mov    DWORD PTR [esp+0xb4],0x0
1003d5b9:	mov    DWORD PTR [esp+0xf4],0xffffffff
1003d5c4:	movzx  eax,WORD PTR [ebx+0x10]
1003d5c8:	lea    eax,[eax+eax*1+0x2]
1003d5cc:	cmp    eax,0x33
1003d5cf:	mov    DWORD PTR [esp+0x18],eax
1003d5d3:	jle    0x1003d5db
1003d5d5:	mov    eax,esi
1003d5d7:	mov    DWORD PTR [esp+0x18],esi
1003d5db:	test   edi,edi
1003d5dd:	je     0x1003d60d
1003d5df:	cdq    
1003d5e0:	sub    eax,edx
1003d5e2:	sar    eax,1
1003d5e4:	mov    edx,0x1
1003d5e9:	lea    ecx,[edi+esi*4]
1003d5ec:	sub    edx,eax
1003d5ee:	lea    eax,[ecx+edx*4]
1003d5f1:	sub    ecx,0x4
1003d5f4:	cmp    ecx,eax
1003d5f6:	jb     0x1003d60d
1003d5f8:	jmp    0x1003d600
1003d5fa:	lea    ebx,[ebx+0x0]
1003d600:	mov    DWORD PTR [ecx],0xffffffff
1003d606:	sub    ecx,0x4
1003d609:	cmp    ecx,eax
1003d60b:	jae    0x1003d600
1003d60d:	cmp    DWORD PTR [esp+0x40],0x0
1003d612:	jne    0x1003d663
1003d614:	test   BYTE PTR [ebx+0xc],0x2
1003d618:	je     0x1003d647
1003d61a:	movzx  eax,WORD PTR [ebx+0x14]
1003d61e:	mov    ecx,eax
1003d620:	and    ecx,0xff
1003d626:	shr    eax,0x8
1003d629:	and    eax,0x1
1003d62c:	mov    DWORD PTR [esp+0x1c],ecx
1003d630:	mov    DWORD PTR [esp+0x4c],eax
1003d634:	je     0x1003d663
1003d636:	mov    eax,DWORD PTR [esp+0xac]
1003d63d:	movzx  ecx,BYTE PTR [eax+ecx*1]
1003d641:	mov    DWORD PTR [esp+0x1c],ecx
1003d645:	jmp    0x1003d663
1003d647:	cmp    DWORD PTR [esp+0x48],0x0
1003d64c:	jne    0x1003d663
1003d64e:	mov    eax,DWORD PTR [esp+0x14]
1003d652:	test   eax,eax
1003d654:	je     0x1003d663
1003d656:	test   BYTE PTR [eax+0x4],0x1
1003d65a:	je     0x1003d663
1003d65c:	add    eax,0x8
1003d65f:	mov    DWORD PTR [esp+0x3c],eax
1003d663:	test   BYTE PTR [ebx+0xc],0x4
1003d667:	je     0x1003d68f
1003d669:	movzx  eax,WORD PTR [ebx+0x16]
1003d66d:	mov    ecx,eax
1003d66f:	and    ecx,0xff
1003d675:	movzx  edx,BYTE PTR [ecx+ebp*1+0x100]
1003d67d:	shr    eax,0x8
1003d680:	and    eax,0x1
1003d683:	mov    DWORD PTR [esp+0x44],ecx
1003d687:	mov    DWORD PTR [esp+0x54],eax
1003d68b:	mov    DWORD PTR [esp+0x50],edx
1003d68f:	mov    ebp,DWORD PTR [esp+0x58]
1003d693:	mov    edi,DWORD PTR [esp+0x94]
1003d69a:	test   edi,edi
1003d69c:	mov    ebx,DWORD PTR [esp+0x30]
1003d6a0:	mov    DWORD PTR [esp+0x14],ebx
1003d6a4:	je     0x1003d6c1
1003d6a6:	mov    eax,DWORD PTR [esp+0x18]
1003d6aa:	lea    ecx,[edi+eax*4]
1003d6ad:	cmp    edi,ecx
1003d6af:	jae    0x1003d6c1
1003d6b1:	sub    ecx,edi
1003d6b3:	sub    ecx,0x1
1003d6b6:	shr    ecx,0x2
1003d6b9:	add    ecx,0x1
1003d6bc:	or     eax,0xffffffff
1003d6bf:	rep stos DWORD PTR es:[edi],eax
1003d6c1:	cmp    DWORD PTR [esp+0x38],0x0
1003d6c6:	mov    eax,DWORD PTR [esp+0xe4]
1003d6cd:	je     0x1003d73d
1003d6cf:	cmp    ebp,eax
1003d6d1:	mov    ecx,ebp
1003d6d3:	jae    0x1003d73b
1003d6d5:	mov    esi,DWORD PTR [esp+0x24]
1003d6d9:	cmp    DWORD PTR [esp+0xa0],0x0
1003d6e1:	je     0x1003d709
1003d6e3:	mov    edx,DWORD PTR [esp+0xa0]
1003d6ea:	push   edx
1003d6eb:	mov    edx,esi
1003d6ed:	lea    edi,[esp+0xa8]
1003d6f4:	call   0x10042ba0
1003d6f9:	add    esp,0x4
1003d6fc:	test   eax,eax
1003d6fe:	jne    0x1003d73b
1003d700:	mov    eax,DWORD PTR [esp+0xe4]
1003d707:	jmp    0x1003d734
1003d709:	mov    edi,DWORD PTR [esp+0xa4]
1003d710:	mov    edx,eax
1003d712:	sub    edx,edi
1003d714:	cmp    ecx,edx
1003d716:	ja     0x1003d734
1003d718:	mov    dl,BYTE PTR [ecx]
1003d71a:	cmp    dl,BYTE PTR [esp+0xa8]
1003d721:	jne    0x1003d734
1003d723:	cmp    edi,0x1
1003d726:	je     0x1003d73b
1003d728:	mov    dl,BYTE PTR [ecx+0x1]
1003d72b:	cmp    dl,BYTE PTR [esp+0xa9]
1003d732:	je     0x1003d73b
1003d734:	add    ecx,0x1
1003d737:	cmp    ecx,eax
1003d739:	jb     0x1003d6d9
1003d73b:	mov    ebx,ecx
1003d73d:	cmp    DWORD PTR [esp+0x1c],0x0
1003d742:	jl     0x1003d7aa
1003d744:	cmp    DWORD PTR [esp+0x4c],0x0
1003d749:	je     0x1003d77e
1003d74b:	cmp    ebp,ebx
1003d74d:	jae    0x1003d891
1003d753:	mov    eax,DWORD PTR [esp+0xac]
1003d75a:	lea    ebx,[ebx+0x0]
1003d760:	movzx  ecx,BYTE PTR [ebp+0x0]
1003d764:	movzx  edx,BYTE PTR [ecx+eax*1]
1003d768:	cmp    edx,DWORD PTR [esp+0x1c]
1003d76c:	je     0x1003d891
1003d772:	add    ebp,0x1
1003d775:	cmp    ebp,ebx
1003d777:	jb     0x1003d760
1003d779:	jmp    0x1003d891
1003d77e:	cmp    ebp,ebx
1003d780:	jae    0x1003d891
1003d786:	jmp    0x1003d790
1003d788:	lea    esp,[esp+0x0]
1003d78f:	nop
1003d790:	movzx  eax,BYTE PTR [ebp+0x0]
1003d794:	cmp    eax,DWORD PTR [esp+0x1c]
1003d798:	je     0x1003d891
1003d79e:	add    ebp,0x1
1003d7a1:	cmp    ebp,ebx
1003d7a3:	jb     0x1003d790
1003d7a5:	jmp    0x1003d891
1003d7aa:	cmp    DWORD PTR [esp+0x48],0x0
1003d7af:	je     0x1003d863
1003d7b5:	mov    esi,DWORD PTR [esp+0xe0]
1003d7bc:	cmp    ebp,esi
1003d7be:	jbe    0x1003d891
1003d7c4:	cmp    ebp,ebx
1003d7c6:	jae    0x1003d83d
1003d7c8:	mov    edi,DWORD PTR [esp+0x24]
1003d7cc:	mov    ecx,DWORD PTR [esp+0xa4]
1003d7d3:	cmp    DWORD PTR [esp+0xa0],0x0
1003d7db:	je     0x1003d80f
1003d7dd:	cmp    ebp,esi
1003d7df:	jbe    0x1003d836
1003d7e1:	mov    ecx,DWORD PTR [esp+0xa0]
1003d7e8:	push   edi
1003d7e9:	push   ecx
1003d7ea:	lea    edx,[esp+0xac]
1003d7f1:	mov    ecx,ebp
1003d7f3:	call   0x10042c60
1003d7f8:	add    esp,0x8
1003d7fb:	test   eax,eax
1003d7fd:	jne    0x1003d83d
1003d7ff:	mov    esi,DWORD PTR [esp+0xe0]
1003d806:	mov    ecx,DWORD PTR [esp+0xa4]
1003d80d:	jmp    0x1003d836
1003d80f:	lea    edx,[ecx+esi*1]
1003d812:	cmp    ebp,edx
1003d814:	jb     0x1003d836
1003d816:	mov    dl,BYTE PTR [esp+0xa8]
1003d81d:	mov    eax,ebp
1003d81f:	sub    eax,ecx
1003d821:	cmp    BYTE PTR [eax],dl
1003d823:	jne    0x1003d836
1003d825:	cmp    ecx,0x1
1003d828:	je     0x1003d83d
1003d82a:	mov    dl,BYTE PTR [esp+0xa9]
1003d831:	cmp    BYTE PTR [eax+0x1],dl
1003d834:	je     0x1003d83d
1003d836:	add    ebp,0x1
1003d839:	cmp    ebp,ebx
1003d83b:	jb     0x1003d7d3
1003d83d:	cmp    BYTE PTR [ebp-0x1],0xd
1003d841:	jne    0x1003d891
1003d843:	mov    eax,DWORD PTR [esp+0xa0]
1003d84a:	cmp    eax,0x1
1003d84d:	je     0x1003d854
1003d84f:	cmp    eax,0x2
1003d852:	jne    0x1003d891
1003d854:	cmp    ebp,ebx
1003d856:	jae    0x1003d891
1003d858:	cmp    BYTE PTR [ebp+0x0],0xa
1003d85c:	jne    0x1003d891
1003d85e:	add    ebp,0x1
1003d861:	jmp    0x1003d891
1003d863:	mov    esi,DWORD PTR [esp+0x3c]
1003d867:	test   esi,esi
1003d869:	je     0x1003d891
1003d86b:	cmp    ebp,ebx
1003d86d:	jae    0x1003d891
1003d86f:	nop
1003d870:	movzx  eax,BYTE PTR [ebp+0x0]
1003d874:	mov    ecx,eax
1003d876:	and    ecx,0x7
1003d879:	mov    edx,0x1
1003d87e:	shl    edx,cl
1003d880:	shr    eax,0x3
1003d883:	mov    al,BYTE PTR [eax+esi*1]
1003d886:	test   al,dl
1003d888:	jne    0x1003d891
1003d88a:	add    ebp,0x1
1003d88d:	cmp    ebp,ebx
1003d88f:	jb     0x1003d870
1003d891:	mov    edx,DWORD PTR [esp+0x44]
1003d895:	test   edx,edx
1003d897:	mov    ebx,DWORD PTR [esp+0x14]
1003d89b:	mov    DWORD PTR [esp+0x30],ebx
1003d89f:	jl     0x1003d93d
1003d8a5:	mov    ecx,ebx
1003d8a7:	sub    ecx,ebp
1003d8a9:	cmp    ecx,0x3e8
1003d8af:	jge    0x1003d93d
1003d8b5:	cmp    DWORD PTR [esp+0xd0],0x0
1003d8bd:	jne    0x1003d93d
1003d8c3:	xor    eax,eax
1003d8c5:	cmp    DWORD PTR [esp+0x1c],eax
1003d8c9:	setge  al
1003d8cc:	add    eax,ebp
1003d8ce:	cmp    eax,DWORD PTR [esp+0x34]
1003d8d2:	jbe    0x1003d93d
1003d8d4:	cmp    DWORD PTR [esp+0x54],0x0
1003d8d9:	je     0x1003d91e
1003d8db:	cmp    eax,ebx
1003d8dd:	jae    0x1003d8f5
1003d8df:	mov    esi,DWORD PTR [esp+0x50]
1003d8e3:	movzx  ecx,BYTE PTR [eax]
1003d8e6:	add    eax,0x1
1003d8e9:	cmp    ecx,edx
1003d8eb:	je     0x1003d932
1003d8ed:	cmp    ecx,esi
1003d8ef:	je     0x1003d932
1003d8f1:	cmp    eax,ebx
1003d8f3:	jb     0x1003d8e3
1003d8f5:	xor    esi,esi
1003d8f7:	cmp    DWORD PTR [esp+0x2c],0x0
1003d8fc:	je     0x1003d90f
1003d8fe:	mov    eax,DWORD PTR [esp+0x94]
1003d905:	push   eax
1003d906:	call   DWORD PTR ds:0x1007f4fc
1003d90c:	add    esp,0x4
1003d90f:	test   esi,esi
1003d911:	je     0x1003db17
1003d917:	mov    eax,esi
1003d919:	jmp    0x1003db3c
1003d91e:	cmp    eax,ebx
1003d920:	jae    0x1003d8f5
1003d922:	movzx  ecx,BYTE PTR [eax]
1003d925:	add    eax,0x1
1003d928:	cmp    ecx,edx
1003d92a:	je     0x1003d932
1003d92c:	cmp    eax,ebx
1003d92e:	jb     0x1003d922
1003d930:	jmp    0x1003d8f5
1003d932:	sub    eax,0x1
1003d935:	cmp    eax,ebx
1003d937:	jae    0x1003d8f5
1003d939:	mov    DWORD PTR [esp+0x34],eax
1003d93d:	mov    edx,DWORD PTR [esp+0x5c]
1003d941:	mov    ecx,DWORD PTR [esp+0xdc]
1003d948:	push   0x0
1003d94a:	push   0x0
1003d94c:	push   0x0
1003d94e:	push   edx
1003d94f:	lea    eax,[esp+0x98]
1003d956:	push   eax
1003d957:	push   0x2
1003d959:	push   ebp
1003d95a:	push   ecx
1003d95b:	push   ebp
1003d95c:	mov    DWORD PTR [esp+0x10c],ebp
1003d963:	mov    DWORD PTR [esp+0xac],0x0
1003d96e:	call   0x1003a330
1003d973:	mov    esi,eax
1003d975:	add    esp,0x24
1003d978:	test   esi,esi
1003d97a:	jg     0x1003da8e
1003d980:	je     0x1003d9a1
1003d982:	lea    eax,[esi+0x3e7]
1003d988:	cmp    eax,0x3
1003d98b:	ja     0x1003da8e
1003d991:	jmp    DWORD PTR [eax*4+0x1003db58]
1003d998:	mov    ebx,DWORD PTR [esp+0xe8]
1003d99f:	jmp    0x1003d9a4
1003d9a1:	lea    ebx,[ebp+0x1]
1003d9a4:	xor    esi,esi
1003d9a6:	cmp    DWORD PTR [esp+0x38],esi
1003d9aa:	je     0x1003da25
1003d9ac:	cmp    DWORD PTR [esp+0xa0],esi
1003d9b3:	je     0x1003d9ec
1003d9b5:	cmp    ebp,DWORD PTR [esp+0xe4]
1003d9bc:	jae    0x1003da25
1003d9be:	mov    edx,DWORD PTR [esp+0xa0]
1003d9c5:	mov    eax,DWORD PTR [esp+0xe4]
1003d9cc:	push   edx
1003d9cd:	mov    edx,DWORD PTR [esp+0x28]
1003d9d1:	lea    edi,[esp+0xa8]
1003d9d8:	mov    ecx,ebp
1003d9da:	call   0x10042ba0
1003d9df:	add    esp,0x4
1003d9e2:	test   eax,eax
1003d9e4:	jne    0x1003d8f7
1003d9ea:	jmp    0x1003da25
1003d9ec:	mov    ecx,DWORD PTR [esp+0xe4]
1003d9f3:	mov    eax,DWORD PTR [esp+0xa4]
1003d9fa:	sub    ecx,eax
1003d9fc:	cmp    ebp,ecx
1003d9fe:	ja     0x1003da25
1003da00:	mov    dl,BYTE PTR [esp+0xa8]
1003da07:	cmp    BYTE PTR [ebp+0x0],dl
1003da0a:	jne    0x1003da25
1003da0c:	cmp    eax,0x1
1003da0f:	je     0x1003d8f7
1003da15:	mov    al,BYTE PTR [esp+0xa9]
1003da1c:	cmp    BYTE PTR [ebp+0x1],al
1003da1f:	je     0x1003d8f7
1003da25:	cmp    DWORD PTR [esp+0x40],0x0
1003da2a:	mov    ebp,ebx
1003da2c:	jne    0x1003d8f7
1003da32:	mov    eax,DWORD PTR [esp+0x14]
1003da36:	cmp    ebx,eax
1003da38:	ja     0x1003d8f7
1003da3e:	cmp    BYTE PTR [ebx-0x1],0xd
1003da42:	jne    0x1003d693
1003da48:	cmp    ebx,eax
1003da4a:	jae    0x1003d693
1003da50:	cmp    BYTE PTR [ebx],0xa
1003da53:	jne    0x1003d693
1003da59:	mov    ecx,DWORD PTR [esp+0x20]
1003da5d:	test   BYTE PTR [ecx+0xc],0x20
1003da61:	jne    0x1003d693
1003da67:	mov    eax,DWORD PTR [esp+0xa0]
1003da6e:	cmp    eax,0x1
1003da71:	je     0x1003da86
1003da73:	cmp    eax,0x2
1003da76:	je     0x1003da86
1003da78:	cmp    DWORD PTR [esp+0xa4],0x2
1003da80:	jne    0x1003d693
1003da86:	lea    ebp,[ebx+0x1]
1003da89:	jmp    0x1003d693
1003da8e:	cmp    esi,0x1
1003da91:	jne    0x1003d8f7
1003da97:	cmp    DWORD PTR [esp+0x2c],0x0
1003da9c:	mov    esi,DWORD PTR [esp+0x28]
1003daa0:	je     0x1003dadd
1003daa2:	mov    edi,DWORD PTR [esp+0x94]
1003daa9:	push   0xc4
1003daae:	lea    edx,[edi+0x8]
1003dab1:	push   edx
1003dab2:	lea    eax,[esi+0x8]
1003dab5:	push   eax
1003dab6:	call   0x10045180
1003dabb:	add    esp,0xc
1003dabe:	cmp    DWORD PTR [esp+0xf0],0x33
1003dac6:	jle    0x1003dad3
1003dac8:	mov    DWORD PTR [esp+0xb4],0x1
1003dad3:	push   edi
1003dad4:	call   DWORD PTR ds:0x1007f4fc
1003dada:	add    esp,0x4
1003dadd:	cmp    DWORD PTR [esp+0xb4],0x0
1003dae5:	je     0x1003daeb
1003dae7:	xor    eax,eax
1003dae9:	jmp    0x1003daf7
1003daeb:	mov    eax,DWORD PTR [esp+0xf0]
1003daf2:	cdq    
1003daf3:	sub    eax,edx
1003daf5:	sar    eax,1
1003daf7:	mov    ecx,DWORD PTR [esp+0xe0]
1003dafe:	mov    edx,DWORD PTR [esp+0xe8]
1003db05:	sub    edx,ecx
1003db07:	mov    DWORD PTR [esi],edx
1003db09:	mov    edx,DWORD PTR [esp+0xec]
1003db10:	sub    edx,ecx
1003db12:	mov    DWORD PTR [esi+0x4],edx
1003db15:	jmp    0x1003db3c
1003db17:	cmp    DWORD PTR [esp+0xd0],0x0
1003db1f:	je     0x1003db32
1003db21:	cmp    DWORD PTR [esp+0xd4],0x0
1003db29:	je     0x1003db32
1003db2b:	mov    eax,0xfffffff4
1003db30:	jmp    0x1003db3c
1003db32:	or     eax,0xffffffff
1003db35:	jmp    0x1003db3c
1003db37:	mov    eax,0xfffffffe
1003db3c:	mov    ecx,DWORD PTR [esp+0x13c]
1003db43:	pop    edi
1003db44:	pop    esi
1003db45:	pop    ebp
1003db46:	pop    ebx
1003db47:	xor    ecx,esp
1003db49:	call   0x10042e97
1003db4e:	add    esp,0x134
1003db54:	ret    
1003db55:	lea    ecx,[ecx+0x0]
1003db58:	cmc    
1003db59:	fadd   DWORD PTR [ebx]
1003db5b:	adc    BYTE PTR [ecx-0x67effc27],ah
1003db61:	fld    DWORD PTR [ebx]
1003db63:	adc    BYTE PTR [ecx-0x33effc27],ah
1003db69:	int3   
1003db6a:	int3   
1003db6b:	int3   
1003db6c:	int3   
1003db6d:	int3   
1003db6e:	int3   
1003db6f:	int3   
1003db70:	push   ecx
1003db71:	push   ebx
1003db72:	mov    ebx,eax
1003db74:	mov    eax,DWORD PTR [esp+0xc]
1003db78:	mov    ecx,DWORD PTR [eax]
1003db7a:	movzx  eax,BYTE PTR [ecx+0x1]
1003db7e:	push   ebp
1003db7f:	add    ecx,0x1
1003db82:	mov    ebp,ebx
1003db84:	shr    ebp,0xb
1003db87:	and    ebp,0x1
1003db8a:	test   eax,eax
1003db8c:	jne    0x1003dba2
1003db8e:	mov    edx,DWORD PTR [esp+0x14]
1003db92:	mov    DWORD PTR [edx],0x1
1003db98:	mov    edx,DWORD PTR [esp+0x10]
1003db9c:	pop    ebp
1003db9d:	mov    DWORD PTR [edx],ecx
1003db9f:	pop    ebx
1003dba0:	pop    ecx
1003dba1:	ret    
1003dba2:	lea    edx,[eax-0x30]
1003dba5:	cmp    edx,0x4a
1003dba8:	ja     0x1003df28
1003dbae:	push   edi
1003dbaf:	movsx  edi,WORD PTR [edx*2+0x1006e8d0]
1003dbb7:	test   edi,edi
1003dbb9:	mov    DWORD PTR [esp+0xc],edi
1003dbbd:	je     0x1003dbcc
1003dbbf:	mov    edx,DWORD PTR [esp+0x14]
1003dbc3:	mov    eax,edi
1003dbc5:	pop    edi
1003dbc6:	pop    ebp
1003dbc7:	mov    DWORD PTR [edx],ecx
1003dbc9:	pop    ebx
1003dbca:	pop    ecx
1003dbcb:	ret    
1003dbcc:	cmp    edx,0x48
1003dbcf:	push   esi
1003dbd0:	ja     0x1003df17
1003dbd6:	movzx  esi,BYTE PTR [edx+0x1003df50]
1003dbdd:	jmp    DWORD PTR [esi*4+0x1003df34]
1003dbe4:	mov    edx,DWORD PTR [esp+0x1c]
1003dbe8:	pop    esi
1003dbe9:	pop    edi
1003dbea:	mov    DWORD PTR [edx],0x25
1003dbf0:	mov    edx,DWORD PTR [esp+0x10]
1003dbf4:	pop    ebp
1003dbf5:	mov    DWORD PTR [edx],ecx
1003dbf7:	pop    ebx
1003dbf8:	pop    ecx
1003dbf9:	ret    
1003dbfa:	mov    al,BYTE PTR [ecx+0x1]
1003dbfd:	cmp    al,0x3c
1003dbff:	je     0x1003dd1f
1003dc05:	cmp    al,0x27
1003dc07:	je     0x1003dd1f
1003dc0d:	cmp    al,0x7b
1003dc0f:	mov    bl,0x4
1003dc11:	jne    0x1003dc62
1003dc13:	mov    al,BYTE PTR [ecx+0x2]
1003dc16:	test   al,al
1003dc18:	lea    edx,[ecx+0x2]
1003dc1b:	je     0x1003dc3d
1003dc1d:	lea    ecx,[ecx+0x0]
1003dc20:	cmp    al,0x7d
1003dc22:	je     0x1003dc46
1003dc24:	cmp    al,0x2d
1003dc26:	je     0x1003dc33
1003dc28:	movzx  eax,al
1003dc2b:	test   BYTE PTR [eax+0x1006f410],bl
1003dc31:	je     0x1003dc46
1003dc33:	mov    al,BYTE PTR [edx+0x1]
1003dc36:	add    edx,0x1
1003dc39:	test   al,al
1003dc3b:	jne    0x1003dc20
1003dc3d:	mov    esi,0x1
1003dc42:	add    ecx,esi
1003dc44:	jmp    0x1003dc64
1003dc46:	mov    dl,BYTE PTR [edx]
1003dc48:	test   dl,dl
1003dc4a:	je     0x1003dc3d
1003dc4c:	cmp    dl,0x7d
1003dc4f:	je     0x1003dc3d
1003dc51:	mov    edx,DWORD PTR [esp+0x18]
1003dc55:	pop    esi
1003dc56:	pop    edi
1003dc57:	pop    ebp
1003dc58:	mov    eax,0xffffffe4
1003dc5d:	mov    DWORD PTR [edx],ecx
1003dc5f:	pop    ebx
1003dc60:	pop    ecx
1003dc61:	ret    
1003dc62:	xor    esi,esi
1003dc64:	cmp    BYTE PTR [ecx+0x1],0x2d
1003dc68:	jne    0x1003dc73
1003dc6a:	mov    edx,0x1
1003dc6f:	add    ecx,edx
1003dc71:	jmp    0x1003dc75
1003dc73:	xor    edx,edx
1003dc75:	movzx  edi,BYTE PTR [ecx+0x1]
1003dc79:	xor    eax,eax
1003dc7b:	test   BYTE PTR [edi+0x1006f410],bl
1003dc81:	je     0x1003dca5
1003dc83:	movzx  edi,BYTE PTR [ecx+0x1]
1003dc87:	add    ecx,0x1
1003dc8a:	lea    eax,[eax+eax*4]
1003dc8d:	lea    eax,[edi+eax*2-0x30]
1003dc91:	movzx  edi,BYTE PTR [ecx+0x1]
1003dc95:	test   BYTE PTR [edi+0x1006f410],bl
1003dc9b:	jne    0x1003dc83
1003dc9d:	test   eax,eax
1003dc9f:	jl     0x1003dd6e
1003dca5:	test   esi,esi
1003dca7:	je     0x1003dcc7
1003dca9:	add    ecx,0x1
1003dcac:	cmp    BYTE PTR [ecx],0x7d
1003dcaf:	je     0x1003dcc7
1003dcb1:	mov    edx,DWORD PTR [esp+0x1c]
1003dcb5:	pop    esi
1003dcb6:	pop    edi
1003dcb7:	mov    DWORD PTR [edx],0x39
1003dcbd:	mov    edx,DWORD PTR [esp+0x10]
1003dcc1:	pop    ebp
1003dcc2:	mov    DWORD PTR [edx],ecx
1003dcc4:	pop    ebx
1003dcc5:	pop    ecx
1003dcc6:	ret    
1003dcc7:	test   eax,eax
1003dcc9:	jne    0x1003dce1
1003dccb:	mov    edx,DWORD PTR [esp+0x1c]
1003dccf:	pop    esi
1003dcd0:	pop    edi
1003dcd1:	mov    DWORD PTR [edx],0x3a
1003dcd7:	mov    edx,DWORD PTR [esp+0x10]
1003dcdb:	pop    ebp
1003dcdc:	mov    DWORD PTR [edx],ecx
1003dcde:	pop    ebx
1003dcdf:	pop    ecx
1003dce0:	ret    
1003dce1:	test   edx,edx
1003dce3:	je     0x1003dd0a
1003dce5:	mov    edx,DWORD PTR [esp+0x20]
1003dce9:	cmp    eax,edx
1003dceb:	jle    0x1003dd03
1003dced:	mov    edx,DWORD PTR [esp+0x1c]
1003dcf1:	pop    esi
1003dcf2:	pop    edi
1003dcf3:	mov    DWORD PTR [edx],0xf
1003dcf9:	mov    edx,DWORD PTR [esp+0x10]
1003dcfd:	pop    ebp
1003dcfe:	mov    DWORD PTR [edx],ecx
1003dd00:	pop    ebx
1003dd01:	pop    ecx
1003dd02:	ret    
1003dd03:	sub    edx,eax
1003dd05:	add    edx,0x1
1003dd08:	mov    eax,edx
1003dd0a:	pop    esi
1003dd0b:	mov    edx,0xffffffe3
1003dd10:	sub    edx,eax
1003dd12:	pop    edi
1003dd13:	mov    eax,edx
1003dd15:	mov    edx,DWORD PTR [esp+0x10]
1003dd19:	pop    ebp
1003dd1a:	mov    DWORD PTR [edx],ecx
1003dd1c:	pop    ebx
1003dd1d:	pop    ecx
1003dd1e:	ret    
1003dd1f:	mov    edx,DWORD PTR [esp+0x18]
1003dd23:	pop    esi
1003dd24:	pop    edi
1003dd25:	pop    ebp
1003dd26:	mov    eax,0xffffffe5
1003dd2b:	mov    DWORD PTR [edx],ecx
1003dd2d:	pop    ebx
1003dd2e:	pop    ecx
1003dd2f:	ret    
1003dd30:	cmp    DWORD PTR [esp+0x24],0x0
1003dd35:	jne    0x1003dd95
1003dd37:	mov    eax,edx
1003dd39:	movzx  edx,BYTE PTR [ecx+0x1]
1003dd3d:	mov    bl,0x4
1003dd3f:	test   BYTE PTR [edx+0x1006f410],bl
1003dd45:	mov    esi,ecx
1003dd47:	je     0x1003dd6a
1003dd49:	lea    esp,[esp+0x0]
1003dd50:	movzx  edx,BYTE PTR [ecx+0x1]
1003dd54:	add    ecx,0x1
1003dd57:	lea    eax,[eax+eax*4]
1003dd5a:	lea    eax,[edx+eax*2-0x30]
1003dd5e:	movzx  edx,BYTE PTR [ecx+0x1]
1003dd62:	test   BYTE PTR [edx+0x1006f410],bl
1003dd68:	jne    0x1003dd50
1003dd6a:	test   eax,eax
1003dd6c:	jge    0x1003dd84
1003dd6e:	mov    edx,DWORD PTR [esp+0x1c]
1003dd72:	pop    esi
1003dd73:	pop    edi
1003dd74:	mov    DWORD PTR [edx],0x3d
1003dd7a:	mov    edx,DWORD PTR [esp+0x10]
1003dd7e:	pop    ebp
1003dd7f:	mov    DWORD PTR [edx],ecx
1003dd81:	pop    ebx
1003dd82:	pop    ecx
1003dd83:	ret    
1003dd84:	cmp    eax,0xa
1003dd87:	jl     0x1003dd0a
1003dd89:	cmp    eax,DWORD PTR [esp+0x20]
1003dd8d:	jle    0x1003dd0a
1003dd93:	mov    ecx,esi
1003dd95:	movzx  eax,BYTE PTR [ecx]
1003dd98:	cmp    eax,0x38
1003dd9b:	jl     0x1003ddae
1003dd9d:	mov    edx,DWORD PTR [esp+0x18]
1003dda1:	pop    esi
1003dda2:	pop    edi
1003dda3:	sub    ecx,0x1
1003dda6:	pop    ebp
1003dda7:	xor    eax,eax
1003dda9:	mov    DWORD PTR [edx],ecx
1003ddab:	pop    ebx
1003ddac:	pop    ecx
1003ddad:	ret    
1003ddae:	sub    eax,0x30
1003ddb1:	mov    dl,BYTE PTR [ecx+0x1]
1003ddb4:	add    edi,0x1
1003ddb7:	cmp    dl,0x30
1003ddba:	jb     0x1003ddd1
1003ddbc:	cmp    dl,0x37
1003ddbf:	ja     0x1003ddd1
1003ddc1:	movzx  edx,BYTE PTR [ecx+0x1]
1003ddc5:	add    ecx,0x1
1003ddc8:	cmp    edi,0x2
1003ddcb:	lea    eax,[edx+eax*8-0x30]
1003ddcf:	jl     0x1003ddb1
1003ddd1:	test   ebp,ebp
1003ddd3:	jne    0x1003df26
1003ddd9:	cmp    eax,0xff
1003ddde:	jle    0x1003df26
1003dde4:	mov    edx,DWORD PTR [esp+0x1c]
1003dde8:	pop    esi
1003dde9:	pop    edi
1003ddea:	mov    DWORD PTR [edx],0x33
1003ddf0:	mov    edx,DWORD PTR [esp+0x10]
1003ddf4:	pop    ebp
1003ddf5:	mov    DWORD PTR [edx],ecx
1003ddf7:	pop    ebx
1003ddf8:	pop    ecx
1003ddf9:	ret    
1003ddfa:	cmp    BYTE PTR [ecx+0x1],0x7b
1003ddfe:	mov    bl,0x8
1003de00:	jne    0x1003de8f
1003de06:	movzx  esi,BYTE PTR [ecx+0x2]
1003de0a:	lea    edi,[ecx+0x2]
1003de0d:	xor    edx,edx
1003de0f:	xor    eax,eax
1003de11:	test   BYTE PTR [esi+0x1006f410],bl
1003de17:	je     0x1003de5c
1003de19:	lea    esp,[esp+0x0]
1003de20:	add    edi,0x1
1003de23:	test   eax,eax
1003de25:	jne    0x1003de2c
1003de27:	cmp    esi,0x30
1003de2a:	je     0x1003de51
1003de2c:	add    edx,0x1
1003de2f:	cmp    esi,0x61
1003de32:	jl     0x1003de37
1003de34:	sub    esi,0x20
1003de37:	xor    ebx,ebx
1003de39:	cmp    esi,0x41
1003de3c:	setge  bl
1003de3f:	shl    eax,0x4
1003de42:	sub    ebx,0x1
1003de45:	and    ebx,0xfffffff9
1003de48:	add    ebx,0x37
1003de4b:	sub    eax,ebx
1003de4d:	add    eax,esi
1003de4f:	mov    bl,0x8
1003de51:	movzx  esi,BYTE PTR [edi]
1003de54:	test   BYTE PTR [esi+0x1006f410],bl
1003de5a:	jne    0x1003de20
1003de5c:	cmp    BYTE PTR [edi],0x7d
1003de5f:	jne    0x1003de8b
1003de61:	test   eax,eax
1003de63:	jl     0x1003de73
1003de65:	neg    ebp
1003de67:	sbb    ebp,ebp
1003de69:	and    ebp,0x6
1003de6c:	add    ebp,0x2
1003de6f:	cmp    edx,ebp
1003de71:	jle    0x1003de7d
1003de73:	mov    ecx,DWORD PTR [esp+0x1c]
1003de77:	mov    DWORD PTR [ecx],0x22
1003de7d:	mov    edx,DWORD PTR [esp+0x18]
1003de81:	pop    esi
1003de82:	mov    ecx,edi
1003de84:	pop    edi
1003de85:	pop    ebp
1003de86:	mov    DWORD PTR [edx],ecx
1003de88:	pop    ebx
1003de89:	pop    ecx
1003de8a:	ret    
1003de8b:	mov    edi,DWORD PTR [esp+0x10]
1003de8f:	xor    eax,eax
1003de91:	movzx  edx,BYTE PTR [ecx+0x1]
1003de95:	add    edi,0x1
1003de98:	test   BYTE PTR [edx+0x1006f410],bl
1003de9e:	je     0x1003df26
1003dea4:	movzx  esi,BYTE PTR [ecx+0x1]
1003dea8:	add    ecx,0x1
1003deab:	cmp    esi,0x61
1003deae:	jl     0x1003deb3
1003deb0:	sub    esi,0x20
1003deb3:	xor    edx,edx
1003deb5:	cmp    esi,0x41
1003deb8:	setge  dl
1003debb:	shl    eax,0x4
1003debe:	sub    edx,0x1
1003dec1:	and    edx,0xfffffff9
1003dec4:	add    edx,0x37
1003dec7:	sub    eax,edx
1003dec9:	add    eax,esi
1003decb:	cmp    edi,0x2
1003dece:	jl     0x1003de91
1003ded0:	mov    edx,DWORD PTR [esp+0x18]
1003ded4:	pop    esi
1003ded5:	pop    edi
1003ded6:	pop    ebp
1003ded7:	mov    DWORD PTR [edx],ecx
1003ded9:	pop    ebx
1003deda:	pop    ecx
1003dedb:	ret    
1003dedc:	movzx  eax,BYTE PTR [ecx+0x1]
1003dee0:	add    ecx,0x1
1003dee3:	test   eax,eax
1003dee5:	jne    0x1003defd
1003dee7:	mov    edx,DWORD PTR [esp+0x1c]
1003deeb:	pop    esi
1003deec:	pop    edi
1003deed:	mov    DWORD PTR [edx],0x2
1003def3:	mov    edx,DWORD PTR [esp+0x10]
1003def7:	pop    ebp
1003def8:	mov    DWORD PTR [edx],ecx
1003defa:	pop    ebx
1003defb:	pop    ecx
1003defc:	ret    
1003defd:	lea    edx,[eax-0x61]
1003df00:	cmp    edx,0x19
1003df03:	ja     0x1003df08
1003df05:	sub    eax,0x20
1003df08:	mov    edx,DWORD PTR [esp+0x18]
1003df0c:	pop    esi
1003df0d:	pop    edi
1003df0e:	pop    ebp
1003df0f:	xor    eax,0x40
1003df12:	mov    DWORD PTR [edx],ecx
1003df14:	pop    ebx
1003df15:	pop    ecx
1003df16:	ret    
1003df17:	test   bl,0x40
1003df1a:	je     0x1003df26
1003df1c:	mov    edx,DWORD PTR [esp+0x1c]
1003df20:	mov    DWORD PTR [edx],0x3
1003df26:	pop    esi
1003df27:	pop    edi
1003df28:	mov    edx,DWORD PTR [esp+0x10]
1003df2c:	pop    ebp
1003df2d:	mov    DWORD PTR [edx],ecx
1003df2f:	pop    ebx
1003df30:	pop    ecx
1003df31:	ret    
1003df32:	mov    edi,edi
1003df34:	scas   al,BYTE PTR es:[edi]
1003df35:	fld    QWORD PTR [ebx]
1003df37:	adc    BYTE PTR [eax],dh
1003df39:	fld    QWORD PTR [ebx]
1003df3b:	adc    ah,ah
1003df3d:	fild   DWORD PTR [ebx]
1003df3f:	adc    ah,bl
1003df41:	fiadd  WORD PTR [ebx]
1003df43:	adc    dl,bh
1003df45:	fild   DWORD PTR [ebx]
1003df47:	adc    dl,bh
1003df49:	fld    QWORD PTR [ebx]
1003df4b:	adc    BYTE PTR [edi],dl
1003df4d:	fild   WORD PTR [ebx]
1003df4f:	adc    BYTE PTR [eax],al
1003df51:	add    DWORD PTR [ecx],eax
1003df53:	add    DWORD PTR [ecx],eax
1003df55:	add    DWORD PTR [ecx],eax
1003df57:	add    DWORD PTR [ecx],eax
1003df59:	add    DWORD PTR [esi],eax
1003df5b:	push   es
1003df5c:	push   es
1003df5d:	push   es
1003df5e:	push   es
1003df5f:	push   es
1003df60:	push   es
1003df61:	push   es
1003df62:	push   es
1003df63:	push   es
1003df64:	push   es
1003df65:	push   es
1003df66:	push   es
1003df67:	push   es
1003df68:	push   es
1003df69:	push   es
1003df6a:	push   es
1003df6b:	push   es
1003df6c:	add    al,BYTE PTR [esi]
1003df6e:	add    al,BYTE PTR [esi]
1003df70:	push   es
1003df71:	push   es
1003df72:	push   es
1003df73:	push   es
1003df74:	push   es
1003df75:	add    al,BYTE PTR [esi]
1003df77:	push   es
1003df78:	push   es
1003df79:	push   es
1003df7a:	push   es
1003df7b:	push   es
1003df7c:	push   es
1003df7d:	push   es
1003df7e:	push   es
1003df7f:	push   es
1003df80:	push   es
1003df81:	push   es
1003df82:	push   es
1003df83:	add    eax,DWORD PTR [esi]
1003df85:	push   es
1003df86:	push   es
1003df87:	add    al,0x6
1003df89:	push   es
1003df8a:	push   es
1003df8b:	push   es
1003df8c:	add    al,BYTE PTR [esi]
1003df8e:	push   es
1003df8f:	push   es
1003df90:	push   es
1003df91:	push   es
1003df92:	push   es
1003df93:	push   es
1003df94:	push   es
1003df95:	add    al,BYTE PTR [esi]
1003df97:	push   es
1003df98:	add    eax,0xcccccccc
1003df9d:	int3   
1003df9e:	int3   
1003df9f:	int3   
1003dfa0:	movzx  ecx,BYTE PTR [eax]
1003dfa3:	mov    cl,BYTE PTR [ecx+0x1006f410]
1003dfa9:	mov    dl,0x4
1003dfab:	and    cl,dl
1003dfad:	add    eax,0x1
1003dfb0:	test   cl,cl
1003dfb2:	jne    0x1003dfb7
1003dfb4:	xor    eax,eax
1003dfb6:	ret    
1003dfb7:	movzx  ecx,BYTE PTR [eax]
1003dfba:	test   BYTE PTR [ecx+0x1006f410],dl
1003dfc0:	je     0x1003dfd1
1003dfc2:	movzx  ecx,BYTE PTR [eax+0x1]
1003dfc6:	add    eax,0x1
1003dfc9:	test   BYTE PTR [ecx+0x1006f410],dl
1003dfcf:	jne    0x1003dfc2
1003dfd1:	mov    cl,BYTE PTR [eax]
1003dfd3:	cmp    cl,0x7d
1003dfd6:	jne    0x1003dfde
1003dfd8:	mov    eax,0x1
1003dfdd:	ret    
1003dfde:	add    eax,0x1
1003dfe1:	cmp    cl,0x2c
1003dfe4:	jne    0x1003dfb4
1003dfe6:	mov    cl,BYTE PTR [eax]
1003dfe8:	cmp    cl,0x7d
1003dfeb:	je     0x1003dfd8
1003dfed:	movzx  ecx,cl
1003dff0:	mov    cl,BYTE PTR [ecx+0x1006f410]
1003dff6:	and    cl,dl
1003dff8:	add    eax,0x1
1003dffb:	test   cl,cl
1003dffd:	je     0x1003dfb4
1003dfff:	movzx  ecx,BYTE PTR [eax]
1003e002:	test   BYTE PTR [ecx+0x1006f410],dl
1003e008:	je     0x1003e01f
1003e00a:	lea    ebx,[ebx+0x0]
1003e010:	movzx  ecx,BYTE PTR [eax+0x1]
1003e014:	add    eax,0x1
1003e017:	test   BYTE PTR [ecx+0x1006f410],dl
1003e01d:	jne    0x1003e010
1003e01f:	xor    edx,edx
1003e021:	cmp    BYTE PTR [eax],0x7d
1003e024:	sete   dl
1003e027:	mov    eax,edx
1003e029:	ret    
1003e02a:	int3   
1003e02b:	int3   
1003e02c:	int3   
1003e02d:	int3   
1003e02e:	int3   
1003e02f:	int3   
1003e030:	movzx  ecx,BYTE PTR [eax]
1003e033:	push   ebx
1003e034:	push   esi
1003e035:	mov    ebx,0x4
1003e03a:	xor    esi,esi
1003e03c:	or     edx,0xffffffff
1003e03f:	test   BYTE PTR [ecx+0x1006f410],bl
1003e045:	je     0x1003e071
1003e047:	jmp    0x1003e050
1003e049:	lea    esp,[esp+0x0]
1003e050:	lea    esi,[esi+esi*4]
1003e053:	add    eax,0x1
1003e056:	lea    esi,[ecx+esi*2-0x30]
1003e05a:	movzx  ecx,BYTE PTR [eax]
1003e05d:	test   BYTE PTR [ecx+0x1006f410],bl
1003e063:	jne    0x1003e050
1003e065:	test   esi,esi
1003e067:	jl     0x1003e0ca
1003e069:	cmp    esi,0xffff
1003e06f:	jg     0x1003e0ca
1003e071:	cmp    BYTE PTR [eax],0x7d
1003e074:	jne    0x1003e087
1003e076:	mov    edx,esi
1003e078:	mov    ecx,DWORD PTR [esp+0xc]
1003e07c:	mov    DWORD PTR [ecx],esi
1003e07e:	mov    ecx,DWORD PTR [esp+0x10]
1003e082:	pop    esi
1003e083:	mov    DWORD PTR [ecx],edx
1003e085:	pop    ebx
1003e086:	ret    
1003e087:	mov    cl,BYTE PTR [eax+0x1]
1003e08a:	add    eax,0x1
1003e08d:	cmp    cl,0x7d
1003e090:	je     0x1003e078
1003e092:	movzx  ecx,cl
1003e095:	xor    edx,edx
1003e097:	test   BYTE PTR [ecx+0x1006f410],bl
1003e09d:	je     0x1003e0c1
1003e09f:	nop
1003e0a0:	lea    edx,[edx+edx*4]
1003e0a3:	add    eax,0x1
1003e0a6:	lea    edx,[ecx+edx*2-0x30]
1003e0aa:	movzx  ecx,BYTE PTR [eax]
1003e0ad:	test   BYTE PTR [ecx+0x1006f410],bl
1003e0b3:	jne    0x1003e0a0
1003e0b5:	test   edx,edx
1003e0b7:	jl     0x1003e0ca
1003e0b9:	cmp    edx,0xffff
1003e0bf:	jg     0x1003e0ca
1003e0c1:	cmp    edx,esi
1003e0c3:	jge    0x1003e078
1003e0c5:	pop    esi
1003e0c6:	mov    DWORD PTR [edi],ebx
1003e0c8:	pop    ebx
1003e0c9:	ret    
1003e0ca:	pop    esi
1003e0cb:	mov    DWORD PTR [edi],0x5
1003e0d1:	pop    ebx
1003e0d2:	ret    
1003e0d3:	int3   
1003e0d4:	int3   
1003e0d5:	int3   
1003e0d6:	int3   
1003e0d7:	int3   
1003e0d8:	int3   
1003e0d9:	int3   
1003e0da:	int3   
1003e0db:	int3   
1003e0dc:	int3   
1003e0dd:	int3   
1003e0de:	int3   
1003e0df:	int3   
1003e0e0:	push   ebp
1003e0e1:	push   esi
1003e0e2:	mov    esi,eax
1003e0e4:	mov    eax,DWORD PTR [esp+0xc]
1003e0e8:	mov    ebp,DWORD PTR [eax+0x30]
1003e0eb:	mov    al,BYTE PTR [esi]
1003e0ed:	test   al,al
1003e0ef:	push   edi
1003e0f0:	je     0x1003e20a
1003e0f6:	cmp    al,0x5c
1003e0f8:	jne    0x1003e137
1003e0fa:	mov    al,BYTE PTR [esi+0x1]
1003e0fd:	add    esi,0x1
1003e100:	test   al,al
1003e102:	je     0x1003e20a
1003e108:	cmp    al,0x51
1003e10a:	jne    0x1003e2ac
1003e110:	mov    al,BYTE PTR [esi+0x1]
1003e113:	add    esi,0x1
1003e116:	test   al,al
1003e118:	je     0x1003e20a
1003e11e:	cmp    al,0x5c
1003e120:	jne    0x1003e110
1003e122:	test   al,al
1003e124:	je     0x1003e20a
1003e12a:	add    esi,0x1
1003e12d:	cmp    BYTE PTR [esi],0x45
1003e130:	jne    0x1003e110
1003e132:	jmp    0x1003e2ac
1003e137:	cmp    al,0x5b
1003e139:	jne    0x1003e1e9
1003e13f:	xor    edi,edi
1003e141:	movzx  eax,BYTE PTR [esi+0x1]
1003e145:	add    esi,0x1
1003e148:	cmp    eax,0x5c
1003e14b:	jne    0x1003e173
1003e14d:	cmp    BYTE PTR [esi+0x1],0x45
1003e151:	lea    eax,[esi+0x1]
1003e154:	jne    0x1003e15a
1003e156:	mov    esi,eax
1003e158:	jmp    0x1003e141
1003e15a:	push   0x3
1003e15c:	push   0x1007410c
1003e161:	push   eax
1003e162:	call   0x1004f106
1003e167:	add    esp,0xc
1003e16a:	test   eax,eax
1003e16c:	jne    0x1003e183
1003e16e:	add    esi,0x3
1003e171:	jmp    0x1003e141
1003e173:	test   edi,edi
1003e175:	jne    0x1003e183
1003e177:	cmp    eax,0x5e
1003e17a:	jne    0x1003e183
1003e17c:	mov    edi,0x1
1003e181:	jmp    0x1003e141
1003e183:	cmp    BYTE PTR [esi+0x1],0x5d
1003e187:	jne    0x1003e199
1003e189:	mov    ecx,DWORD PTR [esp+0x10]
1003e18d:	test   DWORD PTR [ecx+0x40],0x2000000
1003e194:	jne    0x1003e199
1003e196:	add    esi,0x1
1003e199:	mov    al,BYTE PTR [esi+0x1]
1003e19c:	add    esi,0x1
1003e19f:	cmp    al,0x5d
1003e1a1:	je     0x1003e2ac
1003e1a7:	test   al,al
1003e1a9:	je     0x1003e20a
1003e1ab:	cmp    al,0x5c
1003e1ad:	jne    0x1003e1da
1003e1af:	mov    al,BYTE PTR [esi+0x1]
1003e1b2:	add    esi,0x1
1003e1b5:	test   al,al
1003e1b7:	je     0x1003e20a
1003e1b9:	cmp    al,0x51
1003e1bb:	jne    0x1003e1da
1003e1bd:	lea    ecx,[ecx+0x0]
1003e1c0:	mov    al,BYTE PTR [esi+0x1]
1003e1c3:	add    esi,0x1
1003e1c6:	test   al,al
1003e1c8:	je     0x1003e20a
1003e1ca:	cmp    al,0x5c
1003e1cc:	jne    0x1003e1c0
1003e1ce:	test   al,al
1003e1d0:	je     0x1003e20a
1003e1d2:	add    esi,0x1
1003e1d5:	cmp    BYTE PTR [esi],0x45
1003e1d8:	jne    0x1003e1c0
1003e1da:	mov    al,BYTE PTR [esi+0x1]
1003e1dd:	add    esi,0x1
1003e1e0:	cmp    al,0x5d
1003e1e2:	jne    0x1003e1a7
1003e1e4:	jmp    0x1003e2ac
1003e1e9:	cmp    DWORD PTR [esp+0x18],0x0
1003e1ee:	je     0x1003e211
1003e1f0:	cmp    al,0x23
1003e1f2:	jne    0x1003e211
1003e1f4:	mov    al,BYTE PTR [esi+0x1]
1003e1f7:	add    esi,0x1
1003e1fa:	test   al,al
1003e1fc:	je     0x1003e20a
1003e1fe:	cmp    al,0xa
1003e200:	jne    0x1003e1f4
1003e202:	test   al,al
1003e204:	jne    0x1003e2ac
1003e20a:	pop    edi
1003e20b:	pop    esi
1003e20c:	or     eax,0xffffffff
1003e20f:	pop    ebp
1003e210:	ret    
1003e211:	cmp    al,0x28
1003e213:	jne    0x1003e2ac
1003e219:	mov    al,BYTE PTR [esi+0x1]
1003e21c:	cmp    al,0x3f
1003e21e:	je     0x1003e235
1003e220:	cmp    al,0x2a
1003e222:	je     0x1003e235
1003e224:	add    ebp,0x1
1003e227:	test   ebx,ebx
1003e229:	jne    0x1003e2ac
1003e22f:	cmp    ebp,DWORD PTR [esp+0x14]
1003e233:	jmp    0x1003e2aa
1003e235:	add    esi,0x2
1003e238:	cmp    BYTE PTR [esi],0x50
1003e23b:	jne    0x1003e240
1003e23d:	add    esi,0x1
1003e240:	mov    cl,BYTE PTR [esi]
1003e242:	cmp    cl,0x3c
1003e245:	jne    0x1003e252
1003e247:	mov    al,BYTE PTR [esi+0x1]
1003e24a:	cmp    al,0x21
1003e24c:	je     0x1003e252
1003e24e:	cmp    al,0x3d
1003e250:	jne    0x1003e257
1003e252:	cmp    cl,0x27
1003e255:	jne    0x1003e2ac
1003e257:	add    ebp,0x1
1003e25a:	test   ebx,ebx
1003e25c:	jne    0x1003e264
1003e25e:	cmp    ebp,DWORD PTR [esp+0x14]
1003e262:	je     0x1003e2c1
1003e264:	movzx  eax,cl
1003e267:	add    esi,0x1
1003e26a:	cmp    eax,0x3c
1003e26d:	jne    0x1003e274
1003e26f:	mov    eax,0x3e
1003e274:	movzx  edx,BYTE PTR [esi]
1003e277:	cmp    edx,eax
1003e279:	mov    ecx,esi
1003e27b:	je     0x1003e28b
1003e27d:	lea    ecx,[ecx+0x0]
1003e280:	movzx  edx,BYTE PTR [esi+0x1]
1003e284:	add    esi,0x1
1003e287:	cmp    edx,eax
1003e289:	jne    0x1003e280
1003e28b:	test   ebx,ebx
1003e28d:	je     0x1003e2ac
1003e28f:	mov    eax,esi
1003e291:	sub    eax,ecx
1003e293:	cmp    DWORD PTR [esp+0x14],eax
1003e297:	jne    0x1003e2ac
1003e299:	mov    edx,DWORD PTR [esp+0x14]
1003e29d:	push   edx
1003e29e:	push   ecx
1003e29f:	push   ebx
1003e2a0:	call   0x1004f106
1003e2a5:	add    esp,0xc
1003e2a8:	test   eax,eax
1003e2aa:	je     0x1003e2c1
1003e2ac:	mov    al,BYTE PTR [esi+0x1]
1003e2af:	add    esi,0x1
1003e2b2:	test   al,al
1003e2b4:	jne    0x1003e0f6
1003e2ba:	pop    edi
1003e2bb:	pop    esi
1003e2bc:	or     eax,0xffffffff
1003e2bf:	pop    ebp
1003e2c0:	ret    
1003e2c1:	pop    edi
1003e2c2:	pop    esi
1003e2c3:	mov    eax,ebp
1003e2c5:	pop    ebp
1003e2c6:	ret    
1003e2c7:	int3   
1003e2c8:	int3   
1003e2c9:	int3   
1003e2ca:	int3   
1003e2cb:	int3   
1003e2cc:	int3   
1003e2cd:	int3   
1003e2ce:	int3   
1003e2cf:	int3   
1003e2d0:	movzx  edx,BYTE PTR [eax]
1003e2d3:	mov    ecx,edx
1003e2d5:	sub    ecx,0x4
1003e2d8:	cmp    ecx,0x62
1003e2db:	push   ebp
1003e2dc:	ja     0x1003e347
1003e2de:	mov    edi,edi
1003e2e0:	movzx  ecx,BYTE PTR [ecx+0x1003e360]
1003e2e7:	jmp    DWORD PTR [ecx*4+0x1003e34c]
1003e2ee:	test   esi,esi
1003e2f0:	jle    0x1003e304
1003e2f2:	movzx  ecx,BYTE PTR [eax+0x1]
1003e2f6:	mov    edx,DWORD PTR [edi]
1003e2f8:	mov    ebp,ecx
1003e2fa:	and    edx,esi
1003e2fc:	and    ebp,esi
1003e2fe:	cmp    ebp,edx
1003e300:	je     0x1003e304
1003e302:	mov    DWORD PTR [edi],ecx
1003e304:	add    eax,0x2
1003e307:	jmp    0x1003e33a
1003e309:	test   ebx,ebx
1003e30b:	je     0x1003e347
1003e30d:	lea    ecx,[ecx+0x0]
1003e310:	xor    ecx,ecx
1003e312:	mov    ch,BYTE PTR [eax+0x1]
1003e315:	mov    cl,BYTE PTR [eax+0x2]
1003e318:	add    eax,ecx
1003e31a:	cmp    BYTE PTR [eax],0x54
1003e31d:	je     0x1003e310
1003e31f:	movzx  edx,BYTE PTR [eax]
1003e322:	movzx  ecx,BYTE PTR [edx+0x1006e420]
1003e329:	add    eax,ecx
1003e32b:	jmp    0x1003e33a
1003e32d:	test   ebx,ebx
1003e32f:	je     0x1003e347
1003e331:	movzx  edx,BYTE PTR [edx+0x1006e420]
1003e338:	add    eax,edx
1003e33a:	movzx  edx,BYTE PTR [eax]
1003e33d:	mov    ecx,edx
1003e33f:	sub    ecx,0x4
1003e342:	cmp    ecx,0x62
1003e345:	jbe    0x1003e2e0
1003e347:	pop    ebp
1003e348:	ret    
1003e349:	lea    ecx,[ecx+0x0]
1003e34c:	sub    eax,0xee1003e3
1003e351:	loop   0x1003e356
1003e353:	adc    BYTE PTR [ecx],dh
1003e355:	jecxz  0x1003e35a
1003e357:	adc    BYTE PTR [ecx],cl
1003e359:	jecxz  0x1003e35e
1003e35b:	adc    BYTE PTR [edi-0x1d],al
1003e35e:	add    edx,DWORD PTR [eax]
1003e360:	add    BYTE PTR [eax],al
1003e362:	add    al,0x4
1003e364:	add    al,0x4
1003e366:	add    al,0x4
1003e368:	add    al,0x4
1003e36a:	add    al,0x4
1003e36c:	add    al,0x4
1003e36e:	add    al,0x4
1003e370:	add    al,0x4
1003e372:	add    al,0x4
1003e374:	add    al,0x1
1003e376:	add    al,0x4
1003e378:	add    al,0x4
1003e37a:	add    al,0x4
1003e37c:	add    al,0x4
1003e37e:	add    al,0x4
1003e380:	add    al,0x4
1003e382:	add    al,0x4
1003e384:	add    al,0x4
1003e386:	add    al,0x4
1003e388:	add    al,0x4
1003e38a:	add    al,0x4
1003e38c:	add    al,0x4
1003e38e:	add    al,0x4
1003e390:	add    al,0x4
1003e392:	add    al,0x4
1003e394:	add    al,0x4
1003e396:	add    al,0x4
1003e398:	add    al,0x4
1003e39a:	add    al,0x4
1003e39c:	add    al,0x4
1003e39e:	add    al,0x4
1003e3a0:	add    al,0x4
1003e3a2:	add    al,0x4
1003e3a4:	add    al,0x4
1003e3a6:	add    al,0x4
1003e3a8:	add    al,0x4
1003e3aa:	add    al,0x4
1003e3ac:	add    al,0x4
1003e3ae:	add    al,0x2
1003e3b0:	add    al,0x4
1003e3b2:	add    al,0x4
1003e3b4:	add    al,0x3
1003e3b6:	add    eax,DWORD PTR [ebx]
1003e3b8:	add    al,0x4
1003e3ba:	add    al,0x4
1003e3bc:	add    al,0x4
1003e3be:	add    al,0x4
1003e3c0:	add    al,BYTE PTR [edx]
1003e3c2:	add    cl,ah
1003e3c4:	int3   
1003e3c5:	int3   
1003e3c6:	int3   
1003e3c7:	int3   
1003e3c8:	int3   
1003e3c9:	int3   
1003e3ca:	int3   
1003e3cb:	int3   
1003e3cc:	int3   
1003e3cd:	int3   
1003e3ce:	int3   
1003e3cf:	int3   
1003e3d0:	push   ebx
1003e3d1:	push   ebp
1003e3d2:	push   esi
1003e3d3:	mov    esi,DWORD PTR [esp+0x10]
1003e3d7:	mov    cl,BYTE PTR [esi+0x3]
1003e3da:	add    esi,0x3
1003e3dd:	movzx  eax,cl
1003e3e0:	push   edi
1003e3e1:	or     ebx,0xffffffff
1003e3e4:	xor    edi,edi
1003e3e6:	cmp    eax,0x66
1003e3e9:	ja     0x1003e518
1003e3ef:	mov    ebp,DWORD PTR [esp+0x18]
1003e3f3:	jmp    0x1003e400
1003e3f5:	lea    esp,[esp+0x0]
1003e3fc:	lea    esp,[esp+0x0]
1003e400:	movzx  edx,BYTE PTR [eax+0x1003e564]
1003e407:	jmp    DWORD PTR [edx*4+0x1003e534]
1003e40e:	xor    ecx,ecx
1003e410:	cmp    eax,0x5f
1003e413:	setne  cl
1003e416:	push   ebp
1003e417:	sub    ecx,0x1
1003e41a:	and    ecx,0x2
1003e41d:	add    ecx,esi
1003e41f:	push   ecx
1003e420:	call   0x1003e3d0
1003e425:	add    esp,0x8
1003e428:	test   eax,eax
1003e42a:	jl     0x1003e51b
1003e430:	add    edi,eax
1003e432:	xor    edx,edx
1003e434:	mov    dh,BYTE PTR [esi+0x1]
1003e437:	mov    dl,BYTE PTR [esi+0x2]
1003e43a:	add    esi,edx
1003e43c:	cmp    BYTE PTR [esi],0x54
1003e43f:	je     0x1003e432
1003e441:	add    esi,0x3
1003e444:	jmp    0x1003e50a
1003e449:	test   ebx,ebx
1003e44b:	jge    0x1003e451
1003e44d:	mov    ebx,edi
1003e44f:	jmp    0x1003e459
1003e451:	cmp    ebx,edi
1003e453:	jne    0x1003e518
1003e459:	cmp    cl,0x54
1003e45c:	jne    0x1003e520
1003e462:	add    esi,0x3
1003e465:	xor    edi,edi
1003e467:	jmp    0x1003e50a
1003e46c:	lea    esp,[esp+0x0]
1003e470:	xor    eax,eax
1003e472:	mov    ah,BYTE PTR [esi+0x1]
1003e475:	mov    al,BYTE PTR [esi+0x2]
1003e478:	add    esi,eax
1003e47a:	cmp    BYTE PTR [esi],0x54
1003e47d:	je     0x1003e470
1003e47f:	movzx  ecx,BYTE PTR [esi]
1003e482:	movzx  edx,BYTE PTR [ecx+0x1006e420]
1003e489:	add    esi,edx
1003e48b:	jmp    0x1003e50a
1003e48d:	add    edi,0x1
1003e490:	add    esi,0x2
1003e493:	jmp    0x1003e50a
1003e495:	xor    eax,eax
1003e497:	mov    ah,BYTE PTR [esi+0x1]
1003e49a:	mov    al,BYTE PTR [esi+0x2]
1003e49d:	add    edi,eax
1003e49f:	add    esi,0x4
1003e4a2:	jmp    0x1003e50a
1003e4a4:	mov    al,BYTE PTR [esi+0x3]
1003e4a7:	xor    ecx,ecx
1003e4a9:	mov    ch,BYTE PTR [esi+0x1]
1003e4ac:	mov    cl,BYTE PTR [esi+0x2]
1003e4af:	add    edi,ecx
1003e4b1:	cmp    al,0x10
1003e4b3:	je     0x1003e4b9
1003e4b5:	cmp    al,0xf
1003e4b7:	jne    0x1003e4bc
1003e4b9:	add    esi,0x2
1003e4bc:	add    esi,0x4
1003e4bf:	jmp    0x1003e50a
1003e4c1:	add    esi,0x2
1003e4c4:	add    edi,0x1
1003e4c7:	add    esi,0x1
1003e4ca:	jmp    0x1003e50a
1003e4cc:	movzx  eax,BYTE PTR [esi+0x21]
1003e4d0:	add    esi,0x21
1003e4d3:	add    eax,0xffffffba
1003e4d6:	cmp    eax,0x7
1003e4d9:	ja     0x1003e507
1003e4db:	movzx  edx,BYTE PTR [eax+0x1003e5d8]
1003e4e2:	jmp    DWORD PTR [edx*4+0x1003e5cc]
1003e4e9:	movzx  ecx,BYTE PTR [esi+0x2]
1003e4ed:	xor    edx,edx
1003e4ef:	mov    dh,BYTE PTR [esi+0x3]
1003e4f2:	xor    eax,eax
1003e4f4:	mov    ah,BYTE PTR [esi+0x1]
1003e4f7:	mov    dl,BYTE PTR [esi+0x4]
1003e4fa:	or     eax,ecx
1003e4fc:	cmp    eax,edx
1003e4fe:	jne    0x1003e518
1003e500:	add    edi,eax
1003e502:	add    esi,0x5
1003e505:	jmp    0x1003e50a
1003e507:	add    edi,0x1
1003e50a:	mov    cl,BYTE PTR [esi]
1003e50c:	movzx  eax,cl
1003e50f:	cmp    eax,0x66
1003e512:	jbe    0x1003e400
1003e518:	or     eax,0xffffffff
1003e51b:	pop    edi
1003e51c:	pop    esi
1003e51d:	pop    ebp
1003e51e:	pop    ebx
1003e51f:	ret    
1003e520:	pop    edi
1003e521:	pop    esi
1003e522:	pop    ebp
1003e523:	mov    eax,ebx
1003e525:	pop    ebx
1003e526:	ret    
1003e527:	pop    edi
1003e528:	pop    esi
1003e529:	pop    ebp
1003e52a:	mov    eax,0xfffffffe
1003e52f:	pop    ebx
1003e530:	ret    
1003e531:	lea    ecx,[ecx+0x0]
1003e534:	dec    ecx
1003e535:	in     al,0x3
1003e537:	adc    BYTE PTR [edi-0x1c],bh
1003e53a:	add    edx,DWORD PTR [eax]
1003e53c:	(bad)  
1003e53d:	in     al,0x3
1003e53f:	adc    BYTE PTR [edi],ah
1003e541:	in     eax,0x3
1003e543:	adc    cl,al
1003e545:	in     al,0x3
1003e547:	adc    BYTE PTR [ebp-0x6aeffc1c],cl
1003e54d:	in     al,0x3
1003e54f:	adc    BYTE PTR [esp+eiz*8-0x1b33effd],ah
1003e556:	add    edx,DWORD PTR [eax]
1003e558:	jo     0x1003e53e
1003e55a:	add    edx,DWORD PTR [eax]
1003e55c:	push   cs
1003e55d:	in     al,0x3
1003e55f:	adc    BYTE PTR [eax],bl
1003e561:	in     eax,0x3
1003e563:	adc    BYTE PTR [eax],al
1003e565:	add    DWORD PTR [ecx],eax
1003e567:	or     eax,DWORD PTR [ecx]
1003e569:	add    DWORD PTR [edx],eax
1003e56b:	add    al,BYTE PTR [edx]
1003e56d:	add    al,BYTE PTR [edx]
1003e56f:	add    al,BYTE PTR [edx]
1003e571:	add    al,BYTE PTR [ebx]
1003e573:	add    al,0x4
1003e575:	or     ecx,DWORD PTR [ebx]
1003e577:	or     ecx,DWORD PTR [ebx]
1003e579:	or     ecx,DWORD PTR [ebx]
1003e57b:	add    DWORD PTR [ecx],eax
1003e57d:	add    DWORD PTR [ecx],eax
1003e57f:	add    DWORD PTR ds:0xb0b0505,eax
1003e585:	or     ecx,DWORD PTR [ebx]
1003e587:	or     ecx,DWORD PTR [ebx]
1003e589:	or     ecx,DWORD PTR [ebx]
1003e58b:	push   es
1003e58c:	or     ecx,DWORD PTR [ebx]
1003e58e:	or     ecx,DWORD PTR [ebx]
1003e590:	or     ecx,DWORD PTR [ebx]
1003e592:	or     ecx,DWORD PTR [ebx]
1003e594:	or     ecx,DWORD PTR [ebx]
1003e596:	or     ecx,DWORD PTR [ebx]
1003e598:	or     ecx,DWORD PTR [ebx]
1003e59a:	or     ecx,DWORD PTR [ebx]
1003e59c:	or     ecx,DWORD PTR [ebx]
1003e59e:	or     ecx,DWORD PTR [ebx]
1003e5a0:	or     ecx,DWORD PTR [ebx]
1003e5a2:	or     ecx,DWORD PTR [ebx]
1003e5a4:	or     eax,DWORD PTR [edi]
1003e5a6:	or     ecx,DWORD PTR [ebx]
1003e5a8:	or     ecx,DWORD PTR [ebx]
1003e5aa:	or     ecx,DWORD PTR [ebx]
1003e5ac:	or     ecx,DWORD PTR [ebx]
1003e5ae:	or     ecx,DWORD PTR [ebx]
1003e5b0:	or     ecx,DWORD PTR [ebx]
1003e5b2:	or     BYTE PTR [eax],cl
1003e5b4:	or     ecx,DWORD PTR [ebx]
1003e5b6:	or     eax,DWORD PTR [ecx]
1003e5b8:	add    BYTE PTR [eax],al
1003e5ba:	add    BYTE PTR [eax],al
1003e5bc:	or     DWORD PTR [ecx],ecx
1003e5be:	or     DWORD PTR [ecx],ecx
1003e5c0:	add    DWORD PTR [edx],ecx
1003e5c2:	or     cl,BYTE PTR [edx]
1003e5c4:	or     cl,BYTE PTR [ebx]
1003e5c6:	or     ecx,DWORD PTR [ebx]
1003e5c8:	add    DWORD PTR [ecx],eax
1003e5ca:	add    DWORD PTR [eax+0x1003e518],edx
1003e5d0:	jmp    0x1713e9b9
1003e5d5:	in     eax,0x3
1003e5d7:	adc    BYTE PTR [eax],al
1003e5d9:	add    BYTE PTR [edx],al
1003e5db:	add    al,BYTE PTR [eax]
1003e5dd:	add    BYTE PTR [ecx],al
1003e5df:	add    DWORD PTR [edi],ecx
1003e5e1:	mov    dh,0x8
1003e5e3:	test   ecx,ecx
1003e5e5:	je     0x1003e647
1003e5e7:	cmp    ecx,0x50
1003e5ea:	jne    0x1003e5f6
1003e5ec:	xor    ecx,ecx
1003e5ee:	mov    ch,BYTE PTR [eax+0x1]
1003e5f1:	mov    cl,BYTE PTR [eax+0x2]
1003e5f4:	jmp    0x1003e63e
1003e5f6:	cmp    ecx,0x5f
1003e5f9:	jne    0x1003e60c
1003e5fb:	xor    edx,edx
1003e5fd:	mov    dh,BYTE PTR [eax+0x3]
1003e600:	mov    dl,BYTE PTR [eax+0x4]
1003e603:	cmp    edx,esi
1003e605:	je     0x1003e649
1003e607:	add    eax,0x5
1003e60a:	jmp    0x1003e640
1003e60c:	lea    edx,[ecx-0x39]
1003e60f:	cmp    edx,0xc
1003e612:	ja     0x1003e637
1003e614:	movzx  edx,BYTE PTR [edx+0x1003e654]
1003e61b:	jmp    DWORD PTR [edx*4+0x1003e64c]
1003e622:	mov    dl,BYTE PTR [eax+0x1]
1003e625:	jmp    0x1003e62a
1003e627:	mov    dl,BYTE PTR [eax+0x3]
1003e62a:	cmp    dl,0x10
1003e62d:	je     0x1003e634
1003e62f:	cmp    dl,0xf
1003e632:	jne    0x1003e637
1003e634:	add    eax,0x2
1003e637:	movzx  ecx,BYTE PTR [ecx+0x1006e420]
1003e63e:	add    eax,ecx
1003e640:	movzx  ecx,BYTE PTR [eax]
1003e643:	test   ecx,ecx
1003e645:	jne    0x1003e5e7
1003e647:	xor    eax,eax
1003e649:	ret    
1003e64a:	mov    edi,edi
1003e64c:	and    ah,dh
1003e64e:	add    edx,DWORD PTR [eax]
1003e650:	daa    
1003e651:	out    0x3,al
1003e653:	adc    BYTE PTR [eax],al
1003e655:	add    BYTE PTR [eax],al
1003e657:	add    BYTE PTR [eax],al
1003e659:	add    BYTE PTR [ecx],al
1003e65b:	add    DWORD PTR [ecx],eax
1003e65d:	add    BYTE PTR [eax],al
1003e65f:	add    BYTE PTR [ecx],al
1003e661:	int3   
1003e662:	int3   
1003e663:	int3   
1003e664:	int3   
1003e665:	int3   
1003e666:	int3   
1003e667:	int3   
1003e668:	int3   
1003e669:	int3   
1003e66a:	int3   
1003e66b:	int3   
1003e66c:	int3   
1003e66d:	int3   
1003e66e:	int3   
1003e66f:	int3   
1003e670:	movzx  ecx,BYTE PTR [eax]
1003e673:	test   ecx,ecx
1003e675:	je     0x1003e6c6
1003e677:	cmp    ecx,0x52
1003e67a:	je     0x1003e6c8
1003e67c:	cmp    ecx,0x50
1003e67f:	jne    0x1003e68b
1003e681:	xor    ecx,ecx
1003e683:	mov    ch,BYTE PTR [eax+0x1]
1003e686:	mov    cl,BYTE PTR [eax+0x2]
1003e689:	jmp    0x1003e6bd
1003e68b:	lea    edx,[ecx-0x39]
1003e68e:	cmp    edx,0xc
1003e691:	ja     0x1003e6b6
1003e693:	movzx  edx,BYTE PTR [edx+0x1003e6d4]
1003e69a:	jmp    DWORD PTR [edx*4+0x1003e6cc]
1003e6a1:	mov    dl,BYTE PTR [eax+0x1]
1003e6a4:	jmp    0x1003e6a9
1003e6a6:	mov    dl,BYTE PTR [eax+0x3]
1003e6a9:	cmp    dl,0x10
1003e6ac:	je     0x1003e6b3
1003e6ae:	cmp    dl,0xf
1003e6b1:	jne    0x1003e6b6
1003e6b3:	add    eax,0x2
1003e6b6:	movzx  ecx,BYTE PTR [ecx+0x1006e420]
1003e6bd:	add    eax,ecx
1003e6bf:	movzx  ecx,BYTE PTR [eax]
1003e6c2:	test   ecx,ecx
1003e6c4:	jne    0x1003e677
1003e6c6:	xor    eax,eax
1003e6c8:	ret    
1003e6c9:	lea    ecx,[ecx+0x0]
1003e6cc:	mov    eax,ds:0xa61003e6
1003e6d1:	out    0x3,al
1003e6d3:	adc    BYTE PTR [eax],al
1003e6d5:	add    BYTE PTR [eax],al
1003e6d7:	add    BYTE PTR [eax],al
1003e6d9:	add    BYTE PTR [ecx],al
1003e6db:	add    DWORD PTR [ecx],eax
1003e6dd:	add    BYTE PTR [eax],al
1003e6df:	add    BYTE PTR [ecx],al
1003e6e1:	int3   
1003e6e2:	int3   
1003e6e3:	int3   
1003e6e4:	int3   
1003e6e5:	int3   
1003e6e6:	int3   
1003e6e7:	int3   
1003e6e8:	int3   
1003e6e9:	int3   
1003e6ea:	int3   
1003e6eb:	int3   
1003e6ec:	int3   
1003e6ed:	int3   
1003e6ee:	int3   
1003e6ef:	int3   
1003e6f0:	mov    ecx,DWORD PTR [esp+0x4]
1003e6f4:	movzx  eax,BYTE PTR [ecx]
1003e6f7:	movzx  eax,BYTE PTR [eax+0x1006e420]
1003e6fe:	push   ebx
1003e6ff:	push   ebp
1003e700:	push   esi
1003e701:	push   edi
1003e702:	add    eax,ecx
1003e704:	mov    ebx,0x1
1003e709:	xor    esi,esi
1003e70b:	xor    edi,edi
1003e70d:	call   0x1003e2d0
1003e712:	mov    ebp,DWORD PTR [esp+0x18]
1003e716:	mov    esi,eax
1003e718:	cmp    esi,ebp
1003e71a:	jae    0x1003e844
1003e720:	movzx  eax,BYTE PTR [esi]
1003e723:	cmp    eax,0x58
1003e726:	jne    0x1003e73c
1003e728:	xor    ecx,ecx
1003e72a:	mov    ch,BYTE PTR [esi+0x1]
1003e72d:	mov    cl,BYTE PTR [esi+0x2]
1003e730:	add    esi,ecx
1003e732:	cmp    BYTE PTR [esi],0x54
1003e735:	je     0x1003e728
1003e737:	jmp    0x1003e820
1003e73c:	cmp    eax,0x67
1003e73f:	je     0x1003e808
1003e745:	cmp    eax,0x68
1003e748:	je     0x1003e808
1003e74e:	cmp    eax,0x6f
1003e751:	je     0x1003e808
1003e757:	cmp    eax,0x5e
1003e75a:	je     0x1003e7c9
1003e75c:	cmp    eax,0x5f
1003e75f:	je     0x1003e7c9
1003e761:	cmp    eax,0x5d
1003e764:	je     0x1003e7c9
1003e766:	cmp    eax,0x60
1003e769:	je     0x1003e7c9
1003e76b:	lea    ecx,[eax-0x6]
1003e76e:	cmp    ecx,0x51
1003e771:	ja     0x1003e823
1003e777:	movzx  edx,BYTE PTR [ecx+0x1003e868]
1003e77e:	jmp    DWORD PTR [edx*4+0x1003e850]
1003e785:	movzx  ecx,BYTE PTR [esi+0x21]
1003e789:	add    ecx,0xffffffba
1003e78c:	cmp    ecx,0x7
1003e78f:	ja     0x1003e7ab
1003e791:	movzx  ecx,BYTE PTR [ecx+0x1003e8c8]
1003e798:	jmp    DWORD PTR [ecx*4+0x1003e8bc]
1003e79f:	xor    edx,edx
1003e7a1:	mov    dh,BYTE PTR [esi+0x22]
1003e7a4:	mov    dl,BYTE PTR [esi+0x23]
1003e7a7:	test   edx,edx
1003e7a9:	jle    0x1003e823
1003e7ab:	pop    edi
1003e7ac:	pop    esi
1003e7ad:	pop    ebp
1003e7ae:	xor    eax,eax
1003e7b0:	pop    ebx
1003e7b1:	ret    
1003e7b2:	mov    cl,BYTE PTR [esi+0x1]
1003e7b5:	jmp    0x1003e7ba
1003e7b7:	mov    cl,BYTE PTR [esi+0x3]
1003e7ba:	cmp    cl,0x10
1003e7bd:	je     0x1003e7c4
1003e7bf:	cmp    cl,0xf
1003e7c2:	jne    0x1003e823
1003e7c4:	add    esi,0x2
1003e7c7:	jmp    0x1003e823
1003e7c9:	xor    eax,eax
1003e7cb:	mov    ah,BYTE PTR [esi+0x1]
1003e7ce:	mov    al,BYTE PTR [esi+0x2]
1003e7d1:	test   eax,eax
1003e7d3:	je     0x1003e844
1003e7d5:	xor    edi,edi
1003e7d7:	test   edi,edi
1003e7d9:	jne    0x1003e7f3
1003e7db:	mov    ecx,DWORD PTR [esp+0x1c]
1003e7df:	push   ecx
1003e7e0:	push   ebp
1003e7e1:	push   esi
1003e7e2:	call   0x1003e6f0
1003e7e7:	add    esp,0xc
1003e7ea:	test   eax,eax
1003e7ec:	je     0x1003e7f3
1003e7ee:	mov    edi,0x1
1003e7f3:	xor    edx,edx
1003e7f5:	mov    dh,BYTE PTR [esi+0x1]
1003e7f8:	mov    dl,BYTE PTR [esi+0x2]
1003e7fb:	add    esi,edx
1003e7fd:	cmp    BYTE PTR [esi],0x54
1003e800:	je     0x1003e7d7
1003e802:	test   edi,edi
1003e804:	je     0x1003e7ab
1003e806:	jmp    0x1003e820
1003e808:	movzx  eax,BYTE PTR [eax+0x1006e420]
1003e80f:	add    esi,eax
1003e811:	xor    ecx,ecx
1003e813:	mov    ch,BYTE PTR [esi+0x1]
1003e816:	mov    cl,BYTE PTR [esi+0x2]
1003e819:	add    esi,ecx
1003e81b:	cmp    BYTE PTR [esi],0x54
1003e81e:	je     0x1003e811
1003e820:	movzx  eax,BYTE PTR [esi]
1003e823:	movzx  eax,BYTE PTR [eax+0x1006e420]
1003e82a:	add    eax,esi
1003e82c:	mov    ebx,0x1
1003e831:	xor    esi,esi
1003e833:	xor    edi,edi
1003e835:	call   0x1003e2d0
1003e83a:	mov    esi,eax
1003e83c:	cmp    esi,ebp
1003e83e:	jb     0x1003e720
1003e844:	pop    edi
1003e845:	pop    esi
1003e846:	pop    ebp
1003e847:	mov    eax,0x1
1003e84c:	pop    ebx
1003e84d:	ret    
1003e84e:	mov    edi,edi
1003e850:	stos   DWORD PTR es:[edi],eax
1003e851:	out    0x3,eax
1003e853:	adc    BYTE PTR [edx-0x48effc19],dh
1003e859:	out    0x3,eax
1003e85b:	adc    BYTE PTR [ebp+0x441003e7],al
1003e861:	call   0xf826f869
1003e866:	add    edx,DWORD PTR [eax]
	...
1003e870:	add    BYTE PTR [eax],al
1003e872:	add    BYTE PTR ds:0x5050505,al
1003e878:	add    BYTE PTR ds:0x5050505,al
1003e87e:	add    BYTE PTR [eax],al
1003e880:	add    BYTE PTR ds:0x5000005,al
1003e886:	add    eax,0x5000505
1003e88b:	add    BYTE PTR ds:0x50505,al
1003e891:	add    BYTE PTR ds:0x50505,al
1003e897:	add    eax,0x1050500
1003e89c:	add    DWORD PTR [eax],eax
1003e89e:	add    BYTE PTR [ecx],al
1003e8a0:	add    DWORD PTR [edx],eax
1003e8a2:	add    al,BYTE PTR [eax]
1003e8a4:	add    DWORD PTR [eax],eax
1003e8a6:	add    DWORD PTR [edx],eax
1003e8a8:	add    eax,0x5050505
1003e8ad:	add    eax,0x3030505
1003e8b2:	add    eax,0x4050505
1003e8b7:	add    al,0x4
1003e8b9:	add    al,0x8b
1003e8bb:	jmp    DWORD PTR [ebx]
1003e8bd:	call   0xf7a2f8c5
1003e8c2:	add    edx,DWORD PTR [eax]
1003e8c4:	stos   DWORD PTR es:[edi],eax
1003e8c5:	out    0x3,eax
1003e8c7:	adc    BYTE PTR [eax],al
1003e8c9:	add    BYTE PTR [edx],al
1003e8cb:	add    al,BYTE PTR [eax]
1003e8cd:	add    BYTE PTR [ecx],al
1003e8cf:	add    DWORD PTR [edi],ecx
1003e8d1:	mov    dh,0x50
1003e8d3:	add    DWORD PTR [ebx+0x488a01c0],eax
1003e8d9:	add    DWORD PTR [ebx-0x367bfe40],eax
1003e8df:	push   ebx
1003e8e0:	je     0x1003e90d
1003e8e2:	mov    bl,0x5d
1003e8e4:	cmp    cl,0x5c
1003e8e7:	jne    0x1003e8f3
1003e8e9:	cmp    BYTE PTR [eax+0x1],bl
1003e8ec:	jne    0x1003e8f3
1003e8ee:	add    eax,0x1
1003e8f1:	jmp    0x1003e903
1003e8f3:	cmp    cl,bl
1003e8f5:	je     0x1003e90d
1003e8f7:	movzx  ecx,cl
1003e8fa:	cmp    ecx,edx
1003e8fc:	jne    0x1003e903
1003e8fe:	cmp    BYTE PTR [eax+0x1],bl
1003e901:	je     0x1003e911
1003e903:	mov    cl,BYTE PTR [eax+0x1]
1003e906:	add    eax,0x1
1003e909:	test   cl,cl
1003e90b:	jne    0x1003e8e4
1003e90d:	xor    eax,eax
1003e90f:	pop    ebx
1003e910:	ret    
1003e911:	mov    edx,DWORD PTR [esp+0x8]
1003e915:	mov    DWORD PTR [edx],eax
1003e917:	mov    eax,0x1
1003e91c:	pop    ebx
1003e91d:	ret    
1003e91e:	int3   
1003e91f:	int3   
1003e920:	push   ebp
1003e921:	mov    ebp,DWORD PTR [esp+0x8]
1003e925:	push   esi
1003e926:	push   edi
1003e927:	mov    edi,0x1006e9d0
1003e92c:	xor    esi,esi
1003e92e:	mov    edi,edi
1003e930:	movzx  eax,BYTE PTR [esi+0x1006ea24]
1003e937:	cmp    ebx,eax
1003e939:	jne    0x1003e94a
1003e93b:	push   ebx
1003e93c:	push   edi
1003e93d:	push   ebp
1003e93e:	call   0x1004f106
1003e943:	add    esp,0xc
1003e946:	test   eax,eax
1003e948:	je     0x1003e968
1003e94a:	movzx  ecx,BYTE PTR [esi+0x1006ea24]
1003e951:	add    esi,0x1
1003e954:	cmp    BYTE PTR [esi+0x1006ea24],0x0
1003e95b:	lea    edi,[edi+ecx*1+0x1]
1003e95f:	jne    0x1003e930
1003e961:	pop    edi
1003e962:	pop    esi
1003e963:	or     eax,0xffffffff
1003e966:	pop    ebp
1003e967:	ret    
1003e968:	pop    edi
1003e969:	mov    eax,esi
1003e96b:	pop    esi
1003e96c:	pop    ebp
1003e96d:	ret    
1003e96e:	int3   
1003e96f:	int3   
1003e970:	mov    eax,DWORD PTR [esp+0x4]
1003e974:	push   ebx
1003e975:	mov    ebx,DWORD PTR [esp+0xc]
1003e979:	push   esi
1003e97a:	push   edi
1003e97b:	mov    edi,DWORD PTR [esp+0x18]
1003e97f:	call   0x1003e670
1003e984:	mov    esi,eax
1003e986:	test   esi,esi
1003e988:	je     0x1003ea0a
1003e98e:	push   ebp
1003e98f:	nop
1003e990:	mov    ecx,DWORD PTR [esp+0x20]
1003e994:	mov    ebp,DWORD PTR [edi+0x20]
1003e997:	cmp    ecx,ebp
1003e999:	jae    0x1003e9d3
1003e99b:	mov    eax,DWORD PTR [edi+0x14]
1003e99e:	lea    edi,[esi+0x1]
1003e9a1:	xor    edx,edx
1003e9a3:	mov    dh,BYTE PTR [ecx]
1003e9a5:	mov    dl,BYTE PTR [ecx+0x1]
1003e9a8:	lea    ebx,[eax+edx*1]
1003e9ab:	cmp    ebx,edi
1003e9ad:	je     0x1003e9bc
1003e9af:	add    ecx,0x2
1003e9b2:	cmp    ecx,ebp
1003e9b4:	jb     0x1003e9a1
1003e9b6:	mov    ebx,DWORD PTR [esp+0x18]
1003e9ba:	jmp    0x1003e9cf
1003e9bc:	mov    ebx,DWORD PTR [esp+0x18]
1003e9c0:	lea    eax,[edx+ebx*1]
1003e9c3:	sar    eax,0x8
1003e9c6:	mov    BYTE PTR [ecx],al
1003e9c8:	mov    al,bl
1003e9ca:	add    al,dl
1003e9cc:	mov    BYTE PTR [ecx+0x1],al
1003e9cf:	mov    edi,DWORD PTR [esp+0x1c]
1003e9d3:	cmp    ecx,DWORD PTR [edi+0x20]
1003e9d6:	jb     0x1003e9fb
1003e9d8:	mov    ecx,DWORD PTR [edi+0x14]
1003e9db:	xor    eax,eax
1003e9dd:	mov    ah,BYTE PTR [esi+0x1]
1003e9e0:	mov    al,BYTE PTR [esi+0x2]
1003e9e3:	add    ecx,eax
1003e9e5:	cmp    ecx,DWORD PTR [esp+0x14]
1003e9e9:	jb     0x1003e9fb
1003e9eb:	lea    edx,[eax+ebx*1]
1003e9ee:	sar    edx,0x8
1003e9f1:	mov    cl,bl
1003e9f3:	add    cl,al
1003e9f5:	mov    BYTE PTR [esi+0x1],dl
1003e9f8:	mov    BYTE PTR [esi+0x2],cl
1003e9fb:	lea    eax,[esi+0x3]
1003e9fe:	call   0x1003e670
1003ea03:	mov    esi,eax
1003ea05:	test   esi,esi
1003ea07:	jne    0x1003e990
1003ea09:	pop    ebp
1003ea0a:	pop    edi
1003ea0b:	pop    esi
1003ea0c:	pop    ebx
1003ea0d:	ret    
1003ea0e:	int3   
1003ea0f:	int3   
1003ea10:	push   ecx
1003ea11:	mov    ecx,DWORD PTR [esp+0x10]
1003ea15:	push   ebx
1003ea16:	mov    ebx,DWORD PTR [esp+0x18]
1003ea1a:	and    ebx,0x8
1003ea1d:	push   ebp
1003ea1e:	push   edi
1003ea1f:	je     0x1003eaaf
1003ea25:	movzx  edx,BYTE PTR [ecx]
1003ea28:	mov    eax,DWORD PTR [esi+0xc]
1003ea2b:	test   BYTE PTR [edx+eax*1],0x1
1003ea2f:	je     0x1003ea42
1003ea31:	movzx  edx,BYTE PTR [ecx+0x1]
1003ea35:	add    ecx,0x1
1003ea38:	test   BYTE PTR [edx+eax*1],0x1
1003ea3c:	jne    0x1003ea31
1003ea3e:	mov    DWORD PTR [esp+0x1c],ecx
1003ea42:	cmp    BYTE PTR [ecx],0x23
1003ea45:	jne    0x1003eaaf
1003ea47:	mov    al,BYTE PTR [ecx+0x1]
1003ea4a:	add    ecx,0x1
1003ea4d:	test   al,al
1003ea4f:	mov    DWORD PTR [esp+0x1c],ecx
1003ea53:	je     0x1003ea25
1003ea55:	mov    edx,DWORD PTR [esi+0x50]
1003ea58:	test   edx,edx
1003ea5a:	je     0x1003ea7e
1003ea5c:	mov    eax,DWORD PTR [esi+0x1c]
1003ea5f:	cmp    ecx,eax
1003ea61:	jae    0x1003ea9c
1003ea63:	push   edx
1003ea64:	lea    edi,[esi+0x54]
1003ea67:	xor    edx,edx
1003ea69:	call   0x10042ba0
1003ea6e:	add    esp,0x4
1003ea71:	test   eax,eax
1003ea73:	je     0x1003ea9c
1003ea75:	add    ecx,DWORD PTR [esi+0x54]
1003ea78:	mov    DWORD PTR [esp+0x1c],ecx
1003ea7c:	jmp    0x1003ea25
1003ea7e:	mov    edx,DWORD PTR [esi+0x54]
1003ea81:	mov    edi,DWORD PTR [esi+0x1c]
1003ea84:	sub    edi,edx
1003ea86:	cmp    ecx,edi
1003ea88:	ja     0x1003ea9c
1003ea8a:	cmp    al,BYTE PTR [esi+0x58]
1003ea8d:	jne    0x1003ea9c
1003ea8f:	cmp    edx,0x1
1003ea92:	je     0x1003ea75
1003ea94:	mov    al,BYTE PTR [ecx+0x1]
1003ea97:	cmp    al,BYTE PTR [esi+0x59]
1003ea9a:	je     0x1003ea75
1003ea9c:	mov    al,BYTE PTR [ecx+0x1]
1003ea9f:	add    ecx,0x1
1003eaa2:	test   al,al
1003eaa4:	mov    DWORD PTR [esp+0x1c],ecx
1003eaa8:	jne    0x1003ea55
1003eaaa:	jmp    0x1003ea25
1003eaaf:	mov    al,BYTE PTR [ecx]
1003eab1:	cmp    al,0x5c
1003eab3:	jne    0x1003eaec
1003eab5:	mov    ecx,DWORD PTR [esi+0x30]
1003eab8:	push   0x0
1003eaba:	push   ecx
1003eabb:	lea    edx,[esp+0x14]
1003eabf:	push   edx
1003eac0:	lea    eax,[esp+0x28]
1003eac4:	push   eax
1003eac5:	mov    eax,DWORD PTR [esp+0x30]
1003eac9:	mov    DWORD PTR [esp+0x1c],0x0
1003ead1:	call   0x1003db70
1003ead6:	add    esp,0x10
1003ead9:	cmp    DWORD PTR [esp+0xc],0x0
1003eade:	mov    ebp,eax
1003eae0:	jne    0x1003efa1
1003eae6:	mov    ecx,DWORD PTR [esp+0x1c]
1003eaea:	jmp    0x1003eafc
1003eaec:	mov    edx,DWORD PTR [esi+0xc]
1003eaef:	movzx  ebp,al
1003eaf2:	test   BYTE PTR [edx+ebp*1],0x80
1003eaf6:	jne    0x1003efa1
1003eafc:	add    ecx,0x1
1003eaff:	test   ebx,ebx
1003eb01:	je     0x1003eb8f
1003eb07:	jmp    0x1003eb10
1003eb09:	lea    esp,[esp+0x0]
1003eb10:	movzx  edx,BYTE PTR [ecx]
1003eb13:	mov    eax,DWORD PTR [esi+0xc]
1003eb16:	test   BYTE PTR [edx+eax*1],0x1
1003eb1a:	je     0x1003eb2d
1003eb1c:	lea    esp,[esp+0x0]
1003eb20:	movzx  edx,BYTE PTR [ecx+0x1]
1003eb24:	add    ecx,0x1
1003eb27:	test   BYTE PTR [edx+eax*1],0x1
1003eb2b:	jne    0x1003eb20
1003eb2d:	cmp    BYTE PTR [ecx],0x23
1003eb30:	jne    0x1003eb8f
1003eb32:	mov    al,BYTE PTR [ecx+0x1]
1003eb35:	add    ecx,0x1
1003eb38:	test   al,al
1003eb3a:	je     0x1003eb10
1003eb3c:	lea    esp,[esp+0x0]
1003eb40:	mov    edx,DWORD PTR [esi+0x50]
1003eb43:	test   edx,edx
1003eb45:	je     0x1003eb65
1003eb47:	mov    eax,DWORD PTR [esi+0x1c]
1003eb4a:	cmp    ecx,eax
1003eb4c:	jae    0x1003eb83
1003eb4e:	push   edx
1003eb4f:	lea    edi,[esi+0x54]
1003eb52:	xor    edx,edx
1003eb54:	call   0x10042ba0
1003eb59:	add    esp,0x4
1003eb5c:	test   eax,eax
1003eb5e:	je     0x1003eb83
1003eb60:	add    ecx,DWORD PTR [esi+0x54]
1003eb63:	jmp    0x1003eb10
1003eb65:	mov    edx,DWORD PTR [esi+0x54]
1003eb68:	mov    edi,DWORD PTR [esi+0x1c]
1003eb6b:	sub    edi,edx
1003eb6d:	cmp    ecx,edi
1003eb6f:	ja     0x1003eb83
1003eb71:	cmp    al,BYTE PTR [esi+0x58]
1003eb74:	jne    0x1003eb83
1003eb76:	cmp    edx,0x1
1003eb79:	je     0x1003eb60
1003eb7b:	mov    al,BYTE PTR [ecx+0x1]
1003eb7e:	cmp    al,BYTE PTR [esi+0x59]
1003eb81:	je     0x1003eb60
1003eb83:	mov    al,BYTE PTR [ecx+0x1]
1003eb86:	add    ecx,0x1
1003eb89:	test   al,al
1003eb8b:	jne    0x1003eb40
1003eb8d:	jmp    0x1003eb10
1003eb8f:	mov    al,BYTE PTR [ecx]
1003eb91:	cmp    al,0x2a
1003eb93:	je     0x1003efa1
1003eb99:	cmp    al,0x3f
1003eb9b:	je     0x1003efa1
1003eba1:	push   0x3
1003eba3:	push   0x10074110
1003eba8:	push   ecx
1003eba9:	call   0x1004f106
1003ebae:	add    esp,0xc
1003ebb1:	test   eax,eax
1003ebb3:	je     0x1003efa1
1003ebb9:	test   ebp,ebp
1003ebbb:	jl     0x1003ed71
1003ebc1:	mov    ecx,DWORD PTR [esp+0x14]
1003ebc5:	lea    eax,[ecx-0x6]
1003ebc8:	cmp    eax,0x18
1003ebcb:	ja     0x1003efa1
1003ebd1:	movzx  edx,BYTE PTR [eax+0x1003efd8]
1003ebd8:	jmp    DWORD PTR [edx*4+0x1003efa8]
1003ebdf:	xor    eax,eax
1003ebe1:	cmp    DWORD PTR [esp+0x18],ebp
1003ebe5:	pop    edi
1003ebe6:	pop    ebp
1003ebe7:	setne  al
1003ebea:	pop    ebx
1003ebeb:	pop    ecx
1003ebec:	ret    
1003ebed:	mov    eax,DWORD PTR [esp+0x18]
1003ebf1:	cmp    eax,ebp
1003ebf3:	je     0x1003efa1
1003ebf9:	mov    ecx,DWORD PTR [esi+0x4]
1003ebfc:	movzx  edx,BYTE PTR [ecx+ebp*1]
1003ec00:	xor    ecx,ecx
1003ec02:	cmp    eax,edx
1003ec04:	setne  cl
1003ec07:	pop    edi
1003ec08:	pop    ebp
1003ec09:	pop    ebx
1003ec0a:	mov    eax,ecx
1003ec0c:	pop    ecx
1003ec0d:	ret    
1003ec0e:	mov    eax,DWORD PTR [esp+0x18]
1003ec12:	cmp    eax,ebp
1003ec14:	je     0x1003ec5d
1003ec16:	test   BYTE PTR [esp+0x20],0x1
1003ec1b:	je     0x1003efa1
1003ec21:	mov    edx,DWORD PTR [esi+0x4]
1003ec24:	movzx  ecx,BYTE PTR [edx+ebp*1]
1003ec28:	xor    edx,edx
1003ec2a:	cmp    eax,ecx
1003ec2c:	sete   dl
1003ec2f:	pop    edi
1003ec30:	pop    ebp
1003ec31:	pop    ebx
1003ec32:	mov    eax,edx
1003ec34:	pop    ecx
1003ec35:	ret    
1003ec36:	cmp    ebp,0x7f
1003ec39:	jg     0x1003ec5d
1003ec3b:	mov    eax,DWORD PTR [esi+0xc]
1003ec3e:	test   BYTE PTR [eax+ebp*1],0x4
1003ec42:	jmp    0x1003ef9b
1003ec47:	cmp    ebp,0x7f
1003ec4a:	jg     0x1003efa1
1003ec50:	mov    ecx,DWORD PTR [esi+0xc]
1003ec53:	test   BYTE PTR [ecx+ebp*1],0x4
1003ec57:	je     0x1003efa1
1003ec5d:	pop    edi
1003ec5e:	pop    ebp
1003ec5f:	mov    eax,0x1
1003ec64:	pop    ebx
1003ec65:	pop    ecx
1003ec66:	ret    
1003ec67:	cmp    ebp,0x7f
1003ec6a:	jg     0x1003ec5d
1003ec6c:	mov    edx,DWORD PTR [esi+0xc]
1003ec6f:	test   BYTE PTR [edx+ebp*1],0x1
1003ec73:	jmp    0x1003ef9b
1003ec78:	cmp    ebp,0x7f
1003ec7b:	jg     0x1003efa1
1003ec81:	mov    eax,DWORD PTR [esi+0xc]
1003ec84:	test   BYTE PTR [eax+ebp*1],0x1
1003ec88:	je     0x1003efa1
1003ec8e:	pop    edi
1003ec8f:	pop    ebp
1003ec90:	mov    eax,0x1
1003ec95:	pop    ebx
1003ec96:	pop    ecx
1003ec97:	ret    
1003ec98:	cmp    ebp,0x7f
1003ec9b:	jg     0x1003ec5d
1003ec9d:	mov    ecx,DWORD PTR [esi+0xc]
1003eca0:	test   BYTE PTR [ecx+ebp*1],0x10
1003eca4:	jmp    0x1003ef9b
1003eca9:	cmp    ebp,0x7f
1003ecac:	jg     0x1003efa1
1003ecb2:	mov    edx,DWORD PTR [esi+0xc]
1003ecb5:	test   BYTE PTR [edx+ebp*1],0x10
1003ecb9:	je     0x1003efa1
1003ecbf:	pop    edi
1003ecc0:	pop    ebp
1003ecc1:	mov    eax,0x1
1003ecc6:	pop    ebx
1003ecc7:	pop    ecx
1003ecc8:	ret    
1003ecc9:	cmp    ebp,0x180e
1003eccf:	jg     0x1003ecef
1003ecd1:	je     0x1003ed26
1003ecd3:	cmp    ebp,0xa0
1003ecd9:	jg     0x1003ece7
1003ecdb:	je     0x1003ed26
1003ecdd:	cmp    ebp,0x9
1003ece0:	je     0x1003ed26
1003ece2:	cmp    ebp,0x20
1003ece5:	jmp    0x1003ed17
1003ece7:	cmp    ebp,0x1680
1003eced:	jmp    0x1003ed17
1003ecef:	cmp    ebp,0x205f
1003ecf5:	jg     0x1003ed11
1003ecf7:	je     0x1003ed26
1003ecf9:	cmp    ebp,0x2000
1003ecff:	jl     0x1003ed19
1003ed01:	cmp    ebp,0x200a
1003ed07:	jle    0x1003ed26
1003ed09:	cmp    ebp,0x202f
1003ed0f:	jmp    0x1003ed17
1003ed11:	cmp    ebp,0x3000
1003ed17:	je     0x1003ed26
1003ed19:	pop    edi
1003ed1a:	xor    eax,eax
1003ed1c:	cmp    ecx,0x13
1003ed1f:	pop    ebp
1003ed20:	sete   al
1003ed23:	pop    ebx
1003ed24:	pop    ecx
1003ed25:	ret    
1003ed26:	pop    edi
1003ed27:	xor    eax,eax
1003ed29:	cmp    ecx,0x13
1003ed2c:	pop    ebp
1003ed2d:	setne  al
1003ed30:	pop    ebx
1003ed31:	pop    ecx
1003ed32:	ret    
1003ed33:	cmp    ebp,0x85
1003ed39:	jg     0x1003ed54
1003ed3b:	je     0x1003ed64
1003ed3d:	cmp    ebp,0xa
1003ed40:	jl     0x1003ed47
1003ed42:	cmp    ebp,0xd
1003ed45:	jle    0x1003ed64
1003ed47:	pop    edi
1003ed48:	xor    eax,eax
1003ed4a:	cmp    ecx,0x15
1003ed4d:	pop    ebp
1003ed4e:	sete   al
1003ed51:	pop    ebx
1003ed52:	pop    ecx
1003ed53:	ret    
1003ed54:	cmp    ebp,0x2028
1003ed5a:	jl     0x1003ed47
1003ed5c:	cmp    ebp,0x2029
1003ed62:	jg     0x1003ed47
1003ed64:	pop    edi
1003ed65:	xor    eax,eax
1003ed67:	cmp    ecx,0x15
1003ed6a:	pop    ebp
1003ed6b:	setne  al
1003ed6e:	pop    ebx
1003ed6f:	pop    ecx
1003ed70:	ret    
1003ed71:	mov    eax,DWORD PTR [esp+0x14]
1003ed75:	add    eax,0xfffffffa
1003ed78:	cmp    eax,0x17
1003ed7b:	ja     0x1003efa1
1003ed81:	movzx  eax,BYTE PTR [eax+0x1003f024]
1003ed88:	jmp    DWORD PTR [eax*4+0x1003eff4]
1003ed8f:	neg    ebp
1003ed91:	lea    eax,[ebp-0x6]
1003ed94:	cmp    eax,0xf
1003ed97:	ja     0x1003efa1
1003ed9d:	movzx  ecx,BYTE PTR [eax+0x1003f060]
1003eda4:	jmp    DWORD PTR [ecx*4+0x1003f03c]
1003edab:	mov    eax,DWORD PTR [esp+0x18]
1003edaf:	cmp    eax,0x7f
1003edb2:	jg     0x1003ec5d
1003edb8:	mov    edx,DWORD PTR [esi+0xc]
1003edbb:	test   BYTE PTR [eax+edx*1],0x4
1003edbf:	jmp    0x1003ef9b
1003edc4:	mov    eax,DWORD PTR [esp+0x18]
1003edc8:	cmp    eax,0x7f
1003edcb:	jg     0x1003efa1
1003edd1:	mov    ecx,DWORD PTR [esi+0xc]
1003edd4:	test   BYTE PTR [eax+ecx*1],0x4
1003edd8:	je     0x1003efa1
1003edde:	pop    edi
1003eddf:	pop    ebp
1003ede0:	mov    eax,0x1
1003ede5:	pop    ebx
1003ede6:	pop    ecx
1003ede7:	ret    
1003ede8:	mov    eax,DWORD PTR [esp+0x18]
1003edec:	cmp    eax,0x7f
1003edef:	jg     0x1003ec5d
1003edf5:	mov    edx,DWORD PTR [esi+0xc]
1003edf8:	test   BYTE PTR [eax+edx*1],0x1
1003edfc:	jmp    0x1003ef9b
1003ee01:	mov    eax,DWORD PTR [esp+0x18]
1003ee05:	cmp    eax,0x7f
1003ee08:	jg     0x1003efa1
1003ee0e:	mov    ecx,DWORD PTR [esi+0xc]
1003ee11:	test   BYTE PTR [eax+ecx*1],0x1
1003ee15:	je     0x1003efa1
1003ee1b:	pop    edi
1003ee1c:	pop    ebp
1003ee1d:	mov    eax,0x1
1003ee22:	pop    ebx
1003ee23:	pop    ecx
1003ee24:	ret    
1003ee25:	mov    eax,DWORD PTR [esp+0x18]
1003ee29:	cmp    eax,0x7f
1003ee2c:	jg     0x1003ec5d
1003ee32:	mov    edx,DWORD PTR [esi+0xc]
1003ee35:	test   BYTE PTR [eax+edx*1],0x10
1003ee39:	jmp    0x1003ef9b
1003ee3e:	mov    eax,DWORD PTR [esp+0x18]
1003ee42:	cmp    eax,0x7f
1003ee45:	jg     0x1003efa1
1003ee4b:	mov    ecx,DWORD PTR [esi+0xc]
1003ee4e:	test   BYTE PTR [eax+ecx*1],0x10
1003ee52:	je     0x1003efa1
1003ee58:	pop    edi
1003ee59:	pop    ebp
1003ee5a:	mov    eax,0x1
1003ee5f:	pop    ebx
1003ee60:	pop    ecx
1003ee61:	ret    
1003ee62:	mov    eax,DWORD PTR [esp+0x18]
1003ee66:	cmp    eax,0x180e
1003ee6b:	jg     0x1003ee89
1003ee6d:	je     0x1003eebb
1003ee6f:	cmp    eax,0xa0
1003ee74:	jg     0x1003ee82
1003ee76:	je     0x1003eebb
1003ee78:	cmp    eax,0x9
1003ee7b:	je     0x1003eebb
1003ee7d:	cmp    eax,0x20
1003ee80:	jmp    0x1003eeac
1003ee82:	cmp    eax,0x1680
1003ee87:	jmp    0x1003eeac
1003ee89:	cmp    eax,0x205f
1003ee8e:	jg     0x1003eea7
1003ee90:	je     0x1003eebb
1003ee92:	cmp    eax,0x2000
1003ee97:	jl     0x1003eeae
1003ee99:	cmp    eax,0x200a
1003ee9e:	jle    0x1003eebb
1003eea0:	cmp    eax,0x202f
1003eea5:	jmp    0x1003eeac
1003eea7:	cmp    eax,0x3000
1003eeac:	je     0x1003eebb
1003eeae:	xor    eax,eax
1003eeb0:	pop    edi
1003eeb1:	cmp    ebp,0x13
1003eeb4:	pop    ebp
1003eeb5:	sete   al
1003eeb8:	pop    ebx
1003eeb9:	pop    ecx
1003eeba:	ret    
1003eebb:	xor    eax,eax
1003eebd:	pop    edi
1003eebe:	cmp    ebp,0x13
1003eec1:	pop    ebp
1003eec2:	setne  al
1003eec5:	pop    ebx
1003eec6:	pop    ecx
1003eec7:	ret    
1003eec8:	mov    eax,DWORD PTR [esp+0x18]
1003eecc:	cmp    eax,0x85
1003eed1:	jg     0x1003eeec
1003eed3:	je     0x1003eefa
1003eed5:	cmp    eax,0xa
1003eed8:	jl     0x1003eedf
1003eeda:	cmp    eax,0xd
1003eedd:	jle    0x1003eefa
1003eedf:	xor    eax,eax
1003eee1:	pop    edi
1003eee2:	cmp    ebp,0x15
1003eee5:	pop    ebp
1003eee6:	sete   al
1003eee9:	pop    ebx
1003eeea:	pop    ecx
1003eeeb:	ret    
1003eeec:	cmp    eax,0x2028
1003eef1:	jl     0x1003eedf
1003eef3:	cmp    eax,0x2029
1003eef8:	jg     0x1003eedf
1003eefa:	xor    eax,eax
1003eefc:	pop    edi
1003eefd:	cmp    ebp,0x15
1003ef00:	pop    ebp
1003ef01:	setne  al
1003ef04:	pop    ebx
1003ef05:	pop    ecx
1003ef06:	ret    
1003ef07:	cmp    ebp,0xfffffffa
1003ef0a:	je     0x1003ec5d
1003ef10:	cmp    ebp,0xfffffff7
1003ef13:	je     0x1003ec5d
1003ef19:	cmp    ebp,0xfffffff6
1003ef1c:	je     0x1003ec5d
1003ef22:	cmp    ebp,0xffffffed
1003ef25:	je     0x1003ec5d
1003ef2b:	cmp    ebp,0xffffffeb
1003ef2e:	jmp    0x1003ef9b
1003ef30:	xor    eax,eax
1003ef32:	pop    edi
1003ef33:	cmp    ebp,0xfffffff9
1003ef36:	pop    ebp
1003ef37:	sete   al
1003ef3a:	pop    ebx
1003ef3b:	pop    ecx
1003ef3c:	ret    
1003ef3d:	cmp    ebp,0xfffffff8
1003ef40:	jmp    0x1003ef4e
1003ef42:	cmp    ebp,0xfffffff8
1003ef45:	je     0x1003ec5d
1003ef4b:	cmp    ebp,0xffffffee
1003ef4e:	je     0x1003ec5d
1003ef54:	cmp    ebp,0xfffffff9
1003ef57:	je     0x1003ec5d
1003ef5d:	cmp    ebp,0xfffffff5
1003ef60:	jmp    0x1003ef9b
1003ef62:	xor    eax,eax
1003ef64:	pop    edi
1003ef65:	cmp    ebp,0xffffffed
1003ef68:	pop    ebp
1003ef69:	sete   al
1003ef6c:	pop    ebx
1003ef6d:	pop    ecx
1003ef6e:	ret    
1003ef6f:	cmp    ebp,0xffffffec
1003ef72:	jmp    0x1003ef4e
1003ef74:	xor    eax,eax
1003ef76:	pop    edi
1003ef77:	cmp    ebp,0xffffffeb
1003ef7a:	pop    ebp
1003ef7b:	sete   al
1003ef7e:	pop    ebx
1003ef7f:	pop    ecx
1003ef80:	ret    
1003ef81:	cmp    ebp,0xfffffff6
1003ef84:	je     0x1003ec5d
1003ef8a:	cmp    ebp,0xfffffff7
1003ef8d:	jmp    0x1003ef1c
1003ef8f:	cmp    ebp,0xfffffff5
1003ef92:	je     0x1003ec5d
1003ef98:	cmp    ebp,0xfffffff9
1003ef9b:	je     0x1003ec5d
1003efa1:	pop    edi
1003efa2:	pop    ebp
1003efa3:	xor    eax,eax
1003efa5:	pop    ebx
1003efa6:	pop    ecx
1003efa7:	ret    
1003efa8:	inc    edi
1003efa9:	in     al,dx
1003efaa:	add    edx,DWORD PTR [eax]
1003efac:	ss in  al,dx
1003efae:	add    edx,DWORD PTR [eax]
1003efb0:	js     0x1003ef9e
1003efb2:	add    edx,DWORD PTR [eax]
1003efb4:	addr16 in al,dx
1003efb6:	add    edx,DWORD PTR [eax]
1003efb8:	test   eax,0x981003ec
1003efbd:	in     al,dx
1003efbe:	add    edx,DWORD PTR [eax]
1003efc0:	leave  
1003efc1:	in     al,dx
1003efc2:	add    edx,DWORD PTR [eax]
1003efc4:	xor    ebp,ebp
1003efc6:	add    edx,DWORD PTR [eax]
1003efc8:	fucomip st,st(3)
1003efca:	add    edx,DWORD PTR [eax]
1003efcc:	in     eax,dx
1003efcd:	jmp    0x1003efd2
1003efcf:	adc    BYTE PTR [esi],cl
1003efd1:	in     al,dx
1003efd2:	add    edx,DWORD PTR [eax]
1003efd4:	mov    eax,ds:0x1003ef
1003efd9:	add    DWORD PTR [edx],eax
1003efdb:	add    eax,DWORD PTR [eax*1+0xb0b0b0b]
1003efe2:	or     ecx,DWORD PTR [ebx]
1003efe4:	push   es
1003efe5:	push   es
1003efe6:	pop    es
1003efe7:	pop    es
1003efe8:	or     ecx,DWORD PTR [ebx]
1003efea:	or     ecx,DWORD PTR [ebx]
1003efec:	or     ecx,DWORD PTR [ebx]
1003efee:	or     BYTE PTR [ecx],cl
1003eff0:	or     cl,BYTE PTR [ebp-0x10cfffb7]
1003eff6:	add    edx,DWORD PTR [eax]
1003eff8:	pop    es
1003eff9:	out    dx,eax
1003effa:	add    edx,DWORD PTR [eax]
1003effc:	mov    ch,bh
1003effe:	add    edx,DWORD PTR [eax]
1003f000:	cmp    eax,0x8f1003ef
1003f005:	out    dx,eax
1003f006:	add    edx,DWORD PTR [eax]
1003f008:	sub    edi,0xef621003
1003f00e:	add    edx,DWORD PTR [eax]
1003f010:	inc    edx
1003f011:	out    dx,eax
1003f012:	add    edx,DWORD PTR [eax]
1003f014:	je     0x1003f005
1003f016:	add    edx,DWORD PTR [eax]
1003f018:	outs   dx,DWORD PTR ds:[esi]
1003f019:	out    dx,eax
1003f01a:	add    edx,DWORD PTR [eax]
1003f01c:	(bad)  
1003f01d:	in     eax,dx
1003f01e:	add    edx,DWORD PTR [eax]
1003f020:	mov    eax,ds:0x1003ef
1003f025:	add    DWORD PTR [edx],eax
1003f027:	add    eax,DWORD PTR [eax*1+0xb0b0b0b]
1003f02e:	or     ecx,DWORD PTR [ebx]
1003f030:	push   es
1003f031:	pop    es
1003f032:	or     BYTE PTR [ecx],cl
1003f034:	or     ecx,DWORD PTR [ebx]
1003f036:	or     ecx,DWORD PTR [ebx]
1003f038:	or     ecx,DWORD PTR [ebx]
1003f03a:	or     cl,BYTE PTR [edx]
1003f03c:	(bad)  
1003f03d:	in     eax,dx
1003f03e:	add    edx,DWORD PTR [eax]
1003f040:	stos   DWORD PTR es:[edi],eax
1003f041:	in     eax,dx
1003f042:	add    edx,DWORD PTR [eax]
1003f044:	add    esi,ebp
1003f046:	add    edx,DWORD PTR [eax]
1003f048:	call   0x4e13f43a
1003f04d:	out    dx,al
1003f04e:	add    edx,DWORD PTR [eax]
1003f050:	and    eax,0x621003ee
1003f055:	out    dx,al
1003f056:	add    edx,DWORD PTR [eax]
1003f058:	enter  0x3ee,0x10
1003f05c:	mov    eax,ds:0x1003ef
1003f061:	add    DWORD PTR [edx],eax
1003f063:	add    eax,DWORD PTR [eax*1+0x8080808]
1003f06a:	or     BYTE PTR [eax],cl
1003f06c:	push   es
1003f06d:	push   es
1003f06e:	pop    es
1003f06f:	pop    es
1003f070:	sub    esp,0xf0
1003f076:	mov    eax,ds:0x1007e030
1003f07b:	xor    eax,esp
1003f07d:	mov    DWORD PTR [esp+0xec],eax
1003f084:	push   ebx
1003f085:	push   ebp
1003f086:	push   esi
1003f087:	push   edi
1003f088:	mov    eax,DWORD PTR [esp+0x104]
1003f08f:	mov    DWORD PTR [esp+0xa8],eax
1003f096:	mov    eax,DWORD PTR [eax]
1003f098:	mov    DWORD PTR [esp+0x34],eax
1003f09c:	mov    DWORD PTR [esp+0x20],ecx
1003f0a0:	mov    ecx,DWORD PTR [esp+0x10c]
1003f0a7:	shr    eax,0x9
1003f0aa:	and    eax,0x1
1003f0ad:	mov    DWORD PTR [esp+0xb4],ecx
1003f0b4:	mov    ecx,DWORD PTR [esp+0x110]
1003f0bb:	mov    DWORD PTR [esp+0xa4],eax
1003f0c2:	xor    eax,0x1
1003f0c5:	mov    DWORD PTR [esp+0xac],ecx
1003f0cc:	mov    ecx,DWORD PTR [esp+0x114]
1003f0d3:	mov    DWORD PTR [esp+0xa0],eax
1003f0da:	mov    eax,0xfffffffe
1003f0df:	mov    DWORD PTR [esp+0x98],ecx
1003f0e6:	mov    ecx,DWORD PTR [esp+0x118]
1003f0ed:	mov    DWORD PTR [esp+0x68],eax
1003f0f1:	mov    DWORD PTR [esp+0x5c],eax
1003f0f5:	mov    DWORD PTR [esp+0x4c],eax
1003f0f9:	mov    DWORD PTR [esp+0x30],eax
1003f0fd:	mov    eax,DWORD PTR [esp+0x34]
1003f101:	mov    esi,DWORD PTR [esp+0x108]
1003f108:	mov    DWORD PTR [esp+0x18],ecx
1003f10c:	mov    ecx,DWORD PTR [esp+0x11c]
1003f113:	mov    DWORD PTR [esp+0xb0],edx
1003f11a:	mov    edx,DWORD PTR [edx]
1003f11c:	xor    edi,edi
1003f11e:	xor    ebp,ebp
1003f120:	and    eax,0x1
1003f123:	mov    DWORD PTR [esp+0x38],ecx
1003f127:	mov    ecx,edx
1003f129:	mov    ebx,edx
1003f12b:	shl    eax,0x8
1003f12e:	mov    DWORD PTR [esp+0x9c],esi
1003f135:	mov    esi,DWORD PTR [esi]
1003f137:	mov    DWORD PTR [esp+0x48],edi
1003f13b:	mov    DWORD PTR [esp+0x40],edi
1003f13f:	mov    DWORD PTR [esp+0x94],edi
1003f146:	mov    DWORD PTR [esp+0x6c],edi
1003f14a:	mov    DWORD PTR [esp+0x14],edx
1003f14e:	mov    DWORD PTR [esp+0x80],ecx
1003f155:	mov    DWORD PTR [esp+0xb8],ebx
1003f15c:	mov    DWORD PTR [esp+0x50],edi
1003f160:	mov    DWORD PTR [esp+0x88],edi
1003f167:	mov    DWORD PTR [esp+0x2c],ebp
1003f16b:	mov    DWORD PTR [esp+0x74],edi
1003f16f:	mov    DWORD PTR [esp+0x64],edi
1003f173:	mov    DWORD PTR [esp+0x84],eax
1003f17a:	cmp    DWORD PTR [esp+0x38],0x0
1003f17f:	mov    DWORD PTR [esp+0x10],esi
1003f183:	movzx  eax,BYTE PTR [esi]
1003f186:	mov    DWORD PTR [esp+0x1c],eax
1003f18a:	mov    eax,DWORD PTR [esp+0x18]
1003f18e:	je     0x1003f21f
1003f194:	mov    eax,DWORD PTR [eax+0x10]
1003f197:	add    eax,0x1000
1003f19c:	cmp    edx,eax
1003f19e:	ja     0x10041929
1003f1a4:	cmp    edx,ecx
1003f1a6:	jae    0x1003f1ae
1003f1a8:	mov    DWORD PTR [esp+0x14],ecx
1003f1ac:	mov    edx,ecx
1003f1ae:	mov    eax,DWORD PTR [esp+0x38]
1003f1b2:	mov    eax,DWORD PTR [eax]
1003f1b4:	sub    edx,ecx
1003f1b6:	mov    ecx,0x7fffffeb
1003f1bb:	sub    ecx,eax
1003f1bd:	cmp    ecx,edx
1003f1bf:	jl     0x10041938
1003f1c5:	sub    eax,DWORD PTR [esp+0x80]
1003f1cc:	mov    edx,DWORD PTR [esp+0x14]
1003f1d0:	mov    ecx,DWORD PTR [esp+0x38]
1003f1d4:	add    eax,edx
1003f1d6:	test   ebp,ebp
1003f1d8:	mov    DWORD PTR [ecx],eax
1003f1da:	je     0x1003f210
1003f1dc:	cmp    ebp,ebx
1003f1de:	jbe    0x1003f216
1003f1e0:	mov    esi,edx
1003f1e2:	sub    edx,ebp
1003f1e4:	push   edx
1003f1e5:	push   ebp
1003f1e6:	push   ebx
1003f1e7:	call   0x100456c0
1003f1ec:	mov    eax,ebx
1003f1ee:	sub    eax,ebp
1003f1f0:	add    esp,0xc
1003f1f3:	add    esi,eax
1003f1f5:	mov    DWORD PTR [esp+0x14],esi
1003f1f9:	mov    edx,DWORD PTR [esp+0x14]
1003f1fd:	mov    esi,DWORD PTR [esp+0x10]
1003f201:	mov    ebp,ebx
1003f203:	mov    DWORD PTR [esp+0x2c],ebp
1003f207:	mov    DWORD PTR [esp+0x80],edx
1003f20e:	jmp    0x1003f231
1003f210:	mov    DWORD PTR [esp+0x14],ebx
1003f214:	mov    edx,ebx
1003f216:	mov    DWORD PTR [esp+0x80],edx
1003f21d:	jmp    0x1003f231
1003f21f:	mov    ecx,DWORD PTR [eax+0x10]
1003f222:	add    ecx,0x1000
1003f228:	cmp    DWORD PTR [eax+0x20],ecx
1003f22b:	ja     0x10041947
1003f231:	cmp    DWORD PTR [esp+0x50],0x0
1003f236:	mov    ecx,DWORD PTR [esp+0x1c]
1003f23a:	je     0x1003f317
1003f240:	test   ecx,ecx
1003f242:	je     0x1003f317
1003f248:	cmp    ecx,0x5c
1003f24b:	jne    0x1003f263
1003f24d:	cmp    BYTE PTR [esi+0x1],0x45
1003f251:	jne    0x1003f263
1003f253:	mov    DWORD PTR [esp+0x50],0x0
1003f25b:	add    esi,0x1
1003f25e:	jmp    0x10041907
1003f263:	test   edi,edi
1003f265:	je     0x1003f298
1003f267:	cmp    DWORD PTR [esp+0x38],0x0
1003f26c:	jne    0x1003f290
1003f26e:	xor    ebx,ebx
1003f270:	mov    bh,BYTE PTR [edi+0x2]
1003f273:	mov    eax,esi
1003f275:	mov    esi,DWORD PTR [esp+0x18]
1003f279:	mov    bl,BYTE PTR [edi+0x3]
1003f27c:	sub    eax,ebx
1003f27e:	sub    eax,DWORD PTR [esi+0x18]
1003f281:	mov    ebx,eax
1003f283:	sar    ebx,0x8
1003f286:	mov    BYTE PTR [edi+0x4],bl
1003f289:	mov    BYTE PTR [edi+0x5],al
1003f28c:	mov    esi,DWORD PTR [esp+0x10]
1003f290:	mov    DWORD PTR [esp+0x74],0x0
1003f298:	test   DWORD PTR [esp+0x34],0x4000
1003f2a0:	je     0x1003f2dc
1003f2a2:	mov    BYTE PTR [edx],0x53
1003f2a5:	mov    BYTE PTR [edx+0x1],0xff
1003f2a9:	mov    ecx,esi
1003f2ab:	mov    esi,DWORD PTR [esp+0x18]
1003f2af:	lea    eax,[edx+0x1]
1003f2b2:	mov    DWORD PTR [esp+0x74],edx
1003f2b6:	mov    edx,ecx
1003f2b8:	sub    edx,DWORD PTR [esi+0x18]
1003f2bb:	add    eax,0x1
1003f2be:	sar    edx,0x8
1003f2c1:	mov    BYTE PTR [eax],dl
1003f2c3:	sub    cl,BYTE PTR [esi+0x18]
1003f2c6:	mov    BYTE PTR [eax+0x2],0x0
1003f2ca:	mov    BYTE PTR [eax+0x1],cl
1003f2cd:	mov    ecx,DWORD PTR [esp+0x1c]
1003f2d1:	mov    BYTE PTR [eax+0x3],0x0
1003f2d5:	add    eax,0x4
1003f2d8:	mov    DWORD PTR [esp+0x14],eax
1003f2dc:	mov    al,cl
1003f2de:	mov    dl,BYTE PTR [esp+0x34]
1003f2e2:	mov    ecx,DWORD PTR [esp+0x14]
1003f2e6:	and    dl,0x1
1003f2e9:	or     dl,0x1c
1003f2ec:	mov    BYTE PTR [ecx],dl
1003f2ee:	mov    DWORD PTR [esp+0x2c],ecx
1003f2f2:	add    ecx,0x1
1003f2f5:	mov    BYTE PTR [ecx],al
1003f2f7:	add    ecx,0x1
1003f2fa:	cmp    al,0xd
1003f2fc:	mov    DWORD PTR [esp+0x14],ecx
1003f300:	je     0x1003f30a
1003f302:	cmp    al,0xa
1003f304:	jne    0x100418b8
1003f30a:	mov    edx,DWORD PTR [esp+0x18]
1003f30e:	or     DWORD PTR [edx+0x44],0x20
1003f312:	jmp    0x100418bc
1003f317:	cmp    ecx,0x2a
1003f31a:	je     0x1003f391
1003f31c:	cmp    ecx,0x2b
1003f31f:	je     0x1003f391
1003f321:	cmp    ecx,0x3f
1003f324:	je     0x1003f391
1003f326:	cmp    ecx,0x7b
1003f329:	jne    0x1003f33b
1003f32b:	lea    eax,[esi+0x1]
1003f32e:	call   0x1003dfa0
1003f333:	test   eax,eax
1003f335:	mov    ecx,DWORD PTR [esp+0x1c]
1003f339:	jne    0x1003f391
1003f33b:	test   edi,edi
1003f33d:	mov    DWORD PTR [esp+0x28],0x0
1003f345:	je     0x1003f399
1003f347:	mov    eax,DWORD PTR [esp+0x94]
1003f34e:	mov    edx,eax
1003f350:	sub    eax,0x1
1003f353:	test   edx,edx
1003f355:	mov    DWORD PTR [esp+0x94],eax
1003f35c:	jg     0x1003f399
1003f35e:	cmp    DWORD PTR [esp+0x38],0x0
1003f363:	mov    ebx,DWORD PTR [esp+0x18]
1003f367:	jne    0x1003f387
1003f369:	xor    edx,edx
1003f36b:	mov    dh,BYTE PTR [edi+0x2]
1003f36e:	mov    eax,esi
1003f370:	mov    dl,BYTE PTR [edi+0x3]
1003f373:	sub    eax,edx
1003f375:	sub    eax,DWORD PTR [ebx+0x18]
1003f378:	mov    edx,eax
1003f37a:	sar    edx,0x8
1003f37d:	mov    BYTE PTR [edi+0x4],dl
1003f380:	mov    BYTE PTR [edi+0x5],al
1003f383:	mov    esi,DWORD PTR [esp+0x10]
1003f387:	mov    DWORD PTR [esp+0x74],0x0
1003f38f:	jmp    0x1003f39d
1003f391:	mov    DWORD PTR [esp+0x28],0x1
1003f399:	mov    ebx,DWORD PTR [esp+0x18]
1003f39d:	test   BYTE PTR [esp+0x34],0x8
1003f3a2:	je     0x1003f422
1003f3a4:	mov    eax,DWORD PTR [ebx+0xc]
1003f3a7:	test   BYTE PTR [ecx+eax*1],0x1
1003f3ab:	jne    0x10041907
1003f3b1:	cmp    ecx,0x23
1003f3b4:	mov    ebx,DWORD PTR [esp+0x18]
1003f3b8:	jne    0x1003f41e
1003f3ba:	add    esi,0x1
1003f3bd:	mov    DWORD PTR [esp+0x10],esi
1003f3c1:	mov    al,BYTE PTR [esi]
1003f3c3:	test   al,al
1003f3c5:	je     0x1003f412
1003f3c7:	jmp    0x1003f3d0
1003f3c9:	lea    esp,[esp+0x0]
1003f3d0:	mov    ecx,DWORD PTR [ebx+0x50]
1003f3d3:	test   ecx,ecx
1003f3d5:	je     0x1003f488
1003f3db:	mov    eax,DWORD PTR [ebx+0x1c]
1003f3de:	cmp    esi,eax
1003f3e0:	jae    0x1003f4ae
1003f3e6:	push   ecx
1003f3e7:	lea    edi,[ebx+0x54]
1003f3ea:	xor    edx,edx
1003f3ec:	mov    ecx,esi
1003f3ee:	call   0x10042ba0
1003f3f3:	add    esp,0x4
1003f3f6:	test   eax,eax
1003f3f8:	je     0x1003f4ae
1003f3fe:	mov    ecx,DWORD PTR [ebx+0x54]
1003f401:	lea    esi,[esi+ecx*1-0x1]
1003f405:	mov    DWORD PTR [esp+0x10],esi
1003f409:	cmp    BYTE PTR [esi],0x0
1003f40c:	jne    0x10041907
1003f412:	mov    DWORD PTR [esp+0x1c],0x0
1003f41a:	mov    ecx,DWORD PTR [esp+0x1c]
1003f41e:	mov    ebp,DWORD PTR [esp+0x2c]
1003f422:	test   DWORD PTR [esp+0x34],0x4000
1003f42a:	je     0x1003f471
1003f42c:	cmp    DWORD PTR [esp+0x28],0x0
1003f431:	jne    0x1003f471
1003f433:	mov    eax,DWORD PTR [esp+0x14]
1003f437:	mov    BYTE PTR [eax],0x53
1003f43a:	mov    BYTE PTR [eax+0x1],0xff
1003f43e:	mov    ecx,esi
1003f440:	mov    DWORD PTR [esp+0x74],eax
1003f444:	add    eax,0x1
1003f447:	mov    edx,ecx
1003f449:	sub    edx,DWORD PTR [ebx+0x18]
1003f44c:	add    eax,0x1
1003f44f:	sar    edx,0x8
1003f452:	mov    BYTE PTR [eax],dl
1003f454:	sub    cl,BYTE PTR [ebx+0x18]
1003f457:	mov    BYTE PTR [eax+0x2],0x0
1003f45b:	mov    BYTE PTR [eax+0x1],cl
1003f45e:	mov    ecx,DWORD PTR [esp+0x1c]
1003f462:	mov    BYTE PTR [eax+0x3],0x0
1003f466:	mov    esi,DWORD PTR [esp+0x10]
1003f46a:	add    eax,0x4
1003f46d:	mov    DWORD PTR [esp+0x14],eax
1003f471:	cmp    ecx,0x7c
1003f474:	ja     0x1003f2dc
1003f47a:	movzx  eax,BYTE PTR [ecx+0x10041c00]
1003f481:	jmp    DWORD PTR [eax*4+0x10041bcc]
1003f488:	mov    ecx,DWORD PTR [ebx+0x54]
1003f48b:	mov    edx,DWORD PTR [ebx+0x1c]
1003f48e:	sub    edx,ecx
1003f490:	cmp    esi,edx
1003f492:	ja     0x1003f4ae
1003f494:	cmp    al,BYTE PTR [ebx+0x58]
1003f497:	jne    0x1003f4ae
1003f499:	cmp    ecx,0x1
1003f49c:	je     0x1003f3fe
1003f4a2:	mov    al,BYTE PTR [esi+0x1]
1003f4a5:	cmp    al,BYTE PTR [ebx+0x59]
1003f4a8:	je     0x1003f3fe
1003f4ae:	add    esi,0x1
1003f4b1:	mov    DWORD PTR [esp+0x10],esi
1003f4b5:	mov    al,BYTE PTR [esi]
1003f4b7:	test   al,al
1003f4b9:	jne    0x1003f3d0
1003f4bf:	jmp    0x1003f412
1003f4c4:	test   BYTE PTR [esp+0x34],0x2
1003f4c9:	je     0x1003f4da
1003f4cb:	cmp    DWORD PTR [esp+0x30],0xfffffffe
1003f4d0:	jne    0x1003f4da
1003f4d2:	mov    DWORD PTR [esp+0x30],0xffffffff
1003f4da:	mov    eax,DWORD PTR [esp+0x14]
1003f4de:	mov    BYTE PTR [eax],0x1a
1003f4e1:	add    eax,0x1
1003f4e4:	mov    DWORD PTR [esp+0x2c],0x0
1003f4ec:	mov    DWORD PTR [esp+0x14],eax
1003f4f0:	jmp    0x10041903
1003f4f5:	mov    eax,DWORD PTR [esp+0x14]
1003f4f9:	mov    BYTE PTR [eax],0x1b
1003f4fc:	add    eax,0x1
1003f4ff:	mov    DWORD PTR [esp+0x2c],0x0
1003f507:	mov    DWORD PTR [esp+0x14],eax
1003f50b:	jmp    0x10041903
1003f510:	mov    eax,DWORD PTR [esp+0x30]
1003f514:	cmp    eax,0xfffffffe
1003f517:	jne    0x1003f520
1003f519:	or     eax,0xffffffff
1003f51c:	mov    DWORD PTR [esp+0x30],eax
1003f520:	mov    edx,DWORD PTR [esp+0x34]
1003f524:	mov    ecx,DWORD PTR [esp+0x4c]
1003f528:	shr    edx,0x2
1003f52b:	and    dl,0x1
1003f52e:	mov    DWORD PTR [esp+0x5c],eax
1003f532:	mov    eax,DWORD PTR [esp+0x14]
1003f536:	or     dl,0xc
1003f539:	mov    DWORD PTR [esp+0x2c],eax
1003f53d:	mov    BYTE PTR [eax],dl
1003f53f:	add    eax,0x1
1003f542:	mov    DWORD PTR [esp+0x68],ecx
1003f546:	mov    DWORD PTR [esp+0x14],eax
1003f54a:	jmp    0x10041903
1003f54f:	mov    eax,DWORD PTR [esp+0x18]
1003f553:	test   DWORD PTR [eax+0x40],0x2000000
1003f55a:	je     0x1003f2dc
1003f560:	mov    ecx,DWORD PTR [esp+0x20]
1003f564:	mov    DWORD PTR [ecx],0x40
1003f56a:	jmp    0x1004087d
1003f56f:	mov    al,BYTE PTR [esi+0x1]
1003f572:	cmp    al,0x3a
1003f574:	mov    ebx,DWORD PTR [esp+0x14]
1003f578:	mov    DWORD PTR [esp+0x2c],ebx
1003f57c:	je     0x1003f586
1003f57e:	cmp    al,0x2e
1003f580:	je     0x1003f586
1003f582:	cmp    al,0x3d
1003f584:	jne    0x1003f59d
1003f586:	lea    ecx,[esp+0x7c]
1003f58a:	push   ecx
1003f58b:	mov    eax,esi
1003f58d:	call   0x1003e8d0
1003f592:	add    esp,0x4
1003f595:	test   eax,eax
1003f597:	jne    0x100419b6
1003f59d:	mov    DWORD PTR [esp+0x1c],0x0
1003f5a5:	mov    ebp,0x1
1003f5aa:	lea    ebx,[ebx+0x0]
1003f5b0:	add    esi,ebp
1003f5b2:	mov    DWORD PTR [esp+0x10],esi
1003f5b6:	movzx  edi,BYTE PTR [esi]
1003f5b9:	cmp    edi,0x5c
1003f5bc:	jne    0x1003f5e2
1003f5be:	add    esi,ebp
1003f5c0:	cmp    BYTE PTR [esi],0x45
1003f5c3:	je     0x1003f5b0
1003f5c5:	push   0x3
1003f5c7:	push   0x1007410c
1003f5cc:	push   esi
1003f5cd:	call   0x1004f106
1003f5d2:	mov    esi,DWORD PTR [esp+0x1c]
1003f5d6:	add    esp,0xc
1003f5d9:	test   eax,eax
1003f5db:	jne    0x1003f630
1003f5dd:	add    esi,0x3
1003f5e0:	jmp    0x1003f5b0
1003f5e2:	mov    eax,DWORD PTR [esp+0x1c]
1003f5e6:	test   eax,eax
1003f5e8:	jne    0x1003f5f5
1003f5ea:	cmp    edi,0x5e
1003f5ed:	jne    0x1003f5f5
1003f5ef:	mov    DWORD PTR [esp+0x1c],ebp
1003f5f3:	jmp    0x1003f5b0
1003f5f5:	cmp    edi,0x5d
1003f5f8:	jne    0x1003f630
1003f5fa:	mov    edx,DWORD PTR [esp+0x18]
1003f5fe:	test   DWORD PTR [edx+0x40],0x2000000
1003f605:	je     0x1003f630
1003f607:	neg    eax
1003f609:	sbb    al,al
1003f60b:	and    al,0xa0
1003f60d:	add    al,0x6d
1003f60f:	mov    BYTE PTR [ebx],al
1003f611:	mov    eax,DWORD PTR [esp+0x30]
1003f615:	add    ebx,ebp
1003f617:	cmp    eax,0xfffffffe
1003f61a:	mov    DWORD PTR [esp+0x14],ebx
1003f61e:	jne    0x1003f627
1003f620:	or     eax,0xffffffff
1003f623:	mov    DWORD PTR [esp+0x30],eax
1003f627:	mov    DWORD PTR [esp+0x5c],eax
1003f62b:	jmp    0x10041903
1003f630:	xor    eax,eax
1003f632:	cmp    edi,eax
1003f634:	mov    DWORD PTR [esp+0x3c],eax
1003f638:	mov    DWORD PTR [esp+0x24],eax
1003f63c:	mov    DWORD PTR [esp+0x28],0xffffffff
1003f644:	mov    DWORD PTR [esp+0xbc],eax
1003f64b:	mov    DWORD PTR [esp+0xc0],eax
1003f652:	mov    DWORD PTR [esp+0xc4],eax
1003f659:	mov    DWORD PTR [esp+0xc8],eax
1003f660:	mov    DWORD PTR [esp+0xcc],eax
1003f667:	mov    DWORD PTR [esp+0xd0],eax
1003f66e:	mov    DWORD PTR [esp+0xd4],eax
1003f675:	mov    DWORD PTR [esp+0xd8],eax
1003f67c:	je     0x10041a09
1003f682:	cmp    DWORD PTR [esp+0x50],0x0
1003f687:	je     0x1003f6ac
1003f689:	cmp    edi,0x5c
1003f68c:	jne    0x1003fb78
1003f692:	cmp    BYTE PTR [esi+0x1],0x45
1003f696:	jne    0x1003fb78
1003f69c:	mov    DWORD PTR [esp+0x50],0x0
1003f6a4:	add    esi,0x1
1003f6a7:	jmp    0x1003f909
1003f6ac:	cmp    edi,0x5b
1003f6af:	jne    0x1003f82a
1003f6b5:	mov    bl,BYTE PTR [esi+0x1]
1003f6b8:	cmp    bl,0x3a
1003f6bb:	je     0x1003f6cb
1003f6bd:	cmp    bl,0x2e
1003f6c0:	je     0x1003f6cb
1003f6c2:	cmp    bl,0x3d
1003f6c5:	jne    0x1003fb78
1003f6cb:	lea    eax,[esp+0x7c]
1003f6cf:	push   eax
1003f6d0:	mov    eax,esi
1003f6d2:	call   0x1003e8d0
1003f6d7:	add    esp,0x4
1003f6da:	test   eax,eax
1003f6dc:	je     0x1003fb78
1003f6e2:	cmp    bl,0x3a
1003f6e5:	mov    ecx,DWORD PTR [esp+0x18]
1003f6e9:	mov    ebp,DWORD PTR [ecx+0x8]
1003f6ec:	mov    DWORD PTR [esp+0x58],0x0
1003f6f4:	jne    0x100419d1
1003f6fa:	add    esi,0x2
1003f6fd:	mov    DWORD PTR [esp+0x10],esi
1003f701:	cmp    BYTE PTR [esi],0x5e
1003f704:	jne    0x1003f719
1003f706:	mov    eax,0x1
1003f70b:	add    esi,eax
1003f70d:	mov    DWORD PTR [esp+0x58],eax
1003f711:	mov    DWORD PTR [esp+0x3c],eax
1003f715:	mov    DWORD PTR [esp+0x10],esi
1003f719:	mov    ebx,DWORD PTR [esp+0x7c]
1003f71d:	sub    ebx,esi
1003f71f:	push   esi
1003f720:	call   0x1003e920
1003f725:	add    esp,0x4
1003f728:	test   eax,eax
1003f72a:	jl     0x100419e0
1003f730:	test   BYTE PTR [esp+0x34],0x1
1003f735:	je     0x1003f73e
1003f737:	cmp    eax,0x2
1003f73a:	jg     0x1003f73e
1003f73c:	xor    eax,eax
1003f73e:	lea    eax,[eax+eax*2]
1003f741:	mov    esi,DWORD PTR [eax*4+0x1006ea38]
1003f748:	add    esi,ebp
1003f74a:	mov    ecx,0x8
1003f74f:	lea    edi,[esp+0xdc]
1003f756:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1003f758:	mov    ecx,DWORD PTR [eax*4+0x1006ea3c]
1003f75f:	test   ecx,ecx
1003f761:	mov    esi,DWORD PTR [eax*4+0x1006ea40]
1003f768:	jl     0x1003f7a4
1003f76a:	xor    eax,eax
1003f76c:	add    ecx,ebp
1003f76e:	test   esi,esi
1003f770:	jl     0x1003f790
1003f772:	mov    dl,BYTE PTR [ecx+eax*1]
1003f775:	or     BYTE PTR [esp+eax*1+0xdc],dl
1003f77c:	add    eax,0x1
1003f77f:	cmp    eax,0x20
1003f782:	jl     0x1003f772
1003f784:	jmp    0x1003f7a4
1003f786:	jmp    0x1003f790
1003f788:	lea    esp,[esp+0x0]
1003f78f:	nop
1003f790:	mov    dl,BYTE PTR [ecx+eax*1]
1003f793:	not    dl
1003f795:	and    BYTE PTR [esp+eax*1+0xdc],dl
1003f79c:	add    eax,0x1
1003f79f:	cmp    eax,0x20
1003f7a2:	jl     0x1003f790
1003f7a4:	test   esi,esi
1003f7a6:	jge    0x1003f7aa
1003f7a8:	neg    esi
1003f7aa:	cmp    esi,0x1
1003f7ad:	jne    0x1003f7b9
1003f7af:	and    BYTE PTR [esp+0xdd],0xc3
1003f7b7:	jmp    0x1003f7c6
1003f7b9:	cmp    esi,0x2
1003f7bc:	jne    0x1003f7c6
1003f7be:	and    BYTE PTR [esp+0xe7],0x7f
1003f7c6:	xor    eax,eax
1003f7c8:	cmp    DWORD PTR [esp+0x58],eax
1003f7cc:	je     0x1003f800
1003f7ce:	mov    edi,edi
1003f7d0:	mov    cl,BYTE PTR [esp+eax*1+0xdc]
1003f7d7:	not    cl
1003f7d9:	or     BYTE PTR [esp+eax*1+0xbc],cl
1003f7e0:	add    eax,0x1
1003f7e3:	cmp    eax,0x20
1003f7e6:	jl     0x1003f7d0
1003f7e8:	mov    esi,DWORD PTR [esp+0x7c]
1003f7ec:	add    esi,0x1
1003f7ef:	mov    DWORD PTR [esp+0x24],0xa
1003f7f7:	jmp    0x1003f909
1003f7fc:	lea    esp,[esp+0x0]
1003f800:	mov    dl,BYTE PTR [esp+eax*1+0xdc]
1003f807:	or     BYTE PTR [esp+eax*1+0xbc],dl
1003f80e:	add    eax,0x1
1003f811:	cmp    eax,0x20
1003f814:	jl     0x1003f800
1003f816:	mov    esi,DWORD PTR [esp+0x7c]
1003f81a:	add    esi,0x1
1003f81d:	mov    DWORD PTR [esp+0x24],0xa
1003f825:	jmp    0x1003f909
1003f82a:	cmp    edi,0x5c
1003f82d:	jne    0x1003fb78
1003f833:	mov    ebp,DWORD PTR [esp+0x18]
1003f837:	mov    eax,DWORD PTR [ebp+0x30]
1003f83a:	mov    esi,DWORD PTR [esp+0x20]
1003f83e:	mov    ebx,DWORD PTR [esp+0x34]
1003f842:	push   0x1
1003f844:	push   eax
1003f845:	lea    ecx,[esp+0x18]
1003f849:	push   esi
1003f84a:	push   ecx
1003f84b:	mov    eax,ebx
1003f84d:	call   0x1003db70
1003f852:	add    esp,0x10
1003f855:	cmp    DWORD PTR [esi],0x0
1003f858:	mov    edi,eax
1003f85a:	jne    0x10040879
1003f860:	mov    ecx,edi
1003f862:	neg    ecx
1003f864:	cmp    ecx,0x5
1003f867:	jne    0x1003f877
1003f869:	mov    edi,0x8
1003f86e:	mov    esi,DWORD PTR [esp+0x10]
1003f872:	jmp    0x1003fb7c
1003f877:	cmp    ecx,0x16
1003f87a:	jne    0x1003f88a
1003f87c:	mov    esi,DWORD PTR [esp+0x10]
1003f880:	mov    edi,0x58
1003f885:	jmp    0x1003fb7c
1003f88a:	cmp    ecx,0x11
1003f88d:	jne    0x1003f89d
1003f88f:	mov    esi,DWORD PTR [esp+0x10]
1003f893:	mov    edi,0x52
1003f898:	jmp    0x1003fb7c
1003f89d:	cmp    ecx,0x1a
1003f8a0:	jne    0x1003f8c1
1003f8a2:	mov    esi,DWORD PTR [esp+0x10]
1003f8a6:	cmp    BYTE PTR [esi+0x1],0x5c
1003f8aa:	jne    0x1003f8b7
1003f8ac:	cmp    BYTE PTR [esi+0x2],0x45
1003f8b0:	jne    0x1003f8b7
1003f8b2:	add    esi,0x2
1003f8b5:	jmp    0x1003f909
1003f8b7:	mov    DWORD PTR [esp+0x50],0x1
1003f8bf:	jmp    0x1003f909
1003f8c1:	cmp    ecx,0x19
1003f8c4:	je     0x1003f905
1003f8c6:	test   edi,edi
1003f8c8:	jge    0x1003f86e
1003f8ca:	add    DWORD PTR [esp+0x24],0x2
1003f8cf:	cmp    DWORD PTR [esp+0x38],0x0
1003f8d4:	mov    eax,DWORD PTR [ebp+0x8]
1003f8d7:	jne    0x1003fa73
1003f8dd:	lea    edx,[ecx-0x6]
1003f8e0:	cmp    edx,0x5
1003f8e3:	ja     0x1003faa9
1003f8e9:	jmp    DWORD PTR [edx*4+0x10041c80]
1003f8f0:	xor    ecx,ecx
1003f8f2:	mov    dl,BYTE PTR [eax+ecx*1+0x40]
1003f8f6:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003f8fd:	add    ecx,0x1
1003f900:	cmp    ecx,0x20
1003f903:	jl     0x1003f8f2
1003f905:	mov    esi,DWORD PTR [esp+0x10]
1003f909:	add    esi,0x1
1003f90c:	mov    DWORD PTR [esp+0x10],esi
1003f910:	movzx  edi,BYTE PTR [esi]
1003f913:	test   edi,edi
1003f915:	je     0x10041a09
1003f91b:	cmp    edi,0x5d
1003f91e:	jne    0x1003f682
1003f924:	cmp    DWORD PTR [esp+0x50],0x0
1003f929:	jne    0x1003f689
1003f92f:	cmp    DWORD PTR [esp+0x24],0x1
1003f934:	jne    0x1003fdb4
1003f93a:	cmp    DWORD PTR [esp+0x1c],0x0
1003f93f:	mov    eax,DWORD PTR [esp+0x4c]
1003f943:	mov    DWORD PTR [esp+0x68],eax
1003f947:	je     0x1003fdab
1003f94d:	mov    eax,DWORD PTR [esp+0x30]
1003f951:	cmp    eax,0xfffffffe
1003f954:	jne    0x1003f95d
1003f956:	or     eax,0xffffffff
1003f959:	mov    DWORD PTR [esp+0x30],eax
1003f95d:	mov    cl,BYTE PTR [esp+0x28]
1003f961:	mov    DWORD PTR [esp+0x5c],eax
1003f965:	mov    eax,DWORD PTR [esp+0x14]
1003f969:	mov    BYTE PTR [eax],0x1e
1003f96c:	add    eax,0x1
1003f96f:	mov    BYTE PTR [eax],cl
1003f971:	add    eax,0x1
1003f974:	mov    DWORD PTR [esp+0x14],eax
1003f978:	jmp    0x10041903
1003f97d:	mov    DWORD PTR [esp+0x3c],0x1
1003f985:	xor    ecx,ecx
1003f987:	jmp    0x1003f990
1003f989:	lea    esp,[esp+0x0]
1003f990:	mov    dl,BYTE PTR [eax+ecx*1+0x40]
1003f994:	not    dl
1003f996:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003f99d:	add    ecx,0x1
1003f9a0:	cmp    ecx,0x20
1003f9a3:	jl     0x1003f990
1003f9a5:	jmp    0x1003f905
1003f9aa:	xor    ecx,ecx
1003f9ac:	lea    esp,[esp+0x0]
1003f9b0:	mov    dl,BYTE PTR [eax+ecx*1+0xa0]
1003f9b7:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003f9be:	add    ecx,0x1
1003f9c1:	cmp    ecx,0x20
1003f9c4:	jl     0x1003f9b0
1003f9c6:	jmp    0x1003f905
1003f9cb:	mov    DWORD PTR [esp+0x3c],0x1
1003f9d3:	xor    ecx,ecx
1003f9d5:	jmp    0x1003f9e0
1003f9d7:	lea    esp,[esp+0x0]
1003f9de:	mov    edi,edi
1003f9e0:	mov    dl,BYTE PTR [eax+ecx*1+0xa0]
1003f9e7:	not    dl
1003f9e9:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003f9f0:	add    ecx,0x1
1003f9f3:	cmp    ecx,0x20
1003f9f6:	jl     0x1003f9e0
1003f9f8:	jmp    0x1003f905
1003f9fd:	mov    esi,eax
1003f9ff:	lea    eax,[esp+0xbc]
1003fa06:	xor    edx,edx
1003fa08:	sub    esi,eax
1003fa0a:	lea    ebx,[ebx+0x0]
1003fa10:	lea    ecx,[esp+edx*1+0xbc]
1003fa17:	mov    al,BYTE PTR [esi+ecx*1]
1003fa1a:	or     BYTE PTR [ecx],al
1003fa1c:	add    edx,0x1
1003fa1f:	cmp    edx,0x20
1003fa22:	jl     0x1003fa10
1003fa24:	and    BYTE PTR [esp+0xbd],0xf7
1003fa2c:	jmp    0x1003f905
1003fa31:	mov    esi,eax
1003fa33:	lea    ecx,[esp+0xbc]
1003fa3a:	xor    edx,edx
1003fa3c:	mov    DWORD PTR [esp+0x3c],0x1
1003fa44:	sub    esi,ecx
1003fa46:	jmp    0x1003fa50
1003fa48:	lea    esp,[esp+0x0]
1003fa4f:	nop
1003fa50:	lea    ecx,[esp+edx*1+0xbc]
1003fa57:	mov    al,BYTE PTR [esi+ecx*1]
1003fa5a:	not    al
1003fa5c:	or     BYTE PTR [ecx],al
1003fa5e:	add    edx,0x1
1003fa61:	cmp    edx,0x20
1003fa64:	jl     0x1003fa50
1003fa66:	or     BYTE PTR [esp+0xbd],0x8
1003fa6e:	jmp    0x1003f905
1003fa73:	cmp    edi,0xfffffff9
1003fa76:	je     0x1003f905
1003fa7c:	cmp    edi,0xfffffffa
1003fa7f:	je     0x1003f905
1003fa85:	cmp    edi,0xfffffff5
1003fa88:	je     0x1003f905
1003fa8e:	cmp    edi,0xfffffff6
1003fa91:	je     0x1003f905
1003fa97:	cmp    edi,0xfffffff7
1003fa9a:	je     0x1003f905
1003faa0:	cmp    edi,0xfffffff8
1003faa3:	je     0x1003f905
1003faa9:	cmp    ecx,0x13
1003faac:	jne    0x1003facb
1003faae:	or     BYTE PTR [esp+0xbd],0x2
1003fab6:	or     BYTE PTR [esp+0xc0],0x1
1003fabe:	or     BYTE PTR [esp+0xd0],0x1
1003fac6:	jmp    0x1003f905
1003facb:	cmp    ecx,0x12
1003face:	jne    0x1003fb08
1003fad0:	xor    eax,eax
1003fad2:	mov    ecx,eax
1003fad4:	sub    ecx,0x1
1003fad7:	mov    edx,0xff
1003fadc:	je     0x1003faef
1003fade:	sub    ecx,0x3
1003fae1:	je     0x1003fae8
1003fae3:	sub    ecx,0x10
1003fae6:	jne    0x1003faf4
1003fae8:	mov    edx,0xfe
1003faed:	jmp    0x1003faf4
1003faef:	mov    edx,0xfd
1003faf4:	or     BYTE PTR [esp+eax*1+0xbc],dl
1003fafb:	add    eax,0x1
1003fafe:	cmp    eax,0x20
1003fb01:	jl     0x1003fad2
1003fb03:	jmp    0x1003f905
1003fb08:	cmp    ecx,0x15
1003fb0b:	jne    0x1003fb22
1003fb0d:	or     BYTE PTR [esp+0xbd],0x3c
1003fb15:	or     BYTE PTR [esp+0xcc],0x20
1003fb1d:	jmp    0x1003f905
1003fb22:	cmp    ecx,0x14
1003fb25:	jne    0x1003fb61
1003fb27:	xor    eax,eax
1003fb29:	lea    esp,[esp+0x0]
1003fb30:	mov    ecx,eax
1003fb32:	sub    ecx,0x1
1003fb35:	mov    edx,0xff
1003fb3a:	je     0x1003fb48
1003fb3c:	sub    ecx,0xf
1003fb3f:	jne    0x1003fb4d
1003fb41:	mov    edx,0xdf
1003fb46:	jmp    0x1003fb4d
1003fb48:	mov    edx,0xc3
1003fb4d:	or     BYTE PTR [esp+eax*1+0xbc],dl
1003fb54:	add    eax,0x1
1003fb57:	cmp    eax,0x20
1003fb5a:	jl     0x1003fb30
1003fb5c:	jmp    0x1003f905
1003fb61:	test   bl,0x40
1003fb64:	jne    0x100419ef
1003fb6a:	mov    esi,DWORD PTR [esp+0x10]
1003fb6e:	sub    DWORD PTR [esp+0x24],0x2
1003fb73:	movzx  edi,BYTE PTR [esi]
1003fb76:	jmp    0x1003fb7c
1003fb78:	mov    ebp,DWORD PTR [esp+0x18]
1003fb7c:	cmp    BYTE PTR [esi+0x1],0x5c
1003fb80:	mov    eax,DWORD PTR [esp+0x50]
1003fb84:	jne    0x1003fb9f
1003fb86:	cmp    BYTE PTR [esi+0x2],0x45
1003fb8a:	jne    0x1003fb9b
1003fb8c:	add    esi,0x2
1003fb8f:	xor    eax,eax
1003fb91:	mov    DWORD PTR [esp+0x10],esi
1003fb95:	cmp    BYTE PTR [esi+0x1],0x5c
1003fb99:	je     0x1003fb86
1003fb9b:	mov    DWORD PTR [esp+0x50],eax
1003fb9f:	cmp    edi,0xd
1003fba2:	mov    DWORD PTR [esp+0x58],esi
1003fba6:	je     0x1003fbad
1003fba8:	cmp    edi,0xa
1003fbab:	jne    0x1003fbb1
1003fbad:	or     DWORD PTR [ebp+0x44],0x20
1003fbb1:	test   eax,eax
1003fbb3:	jne    0x1003fd51
1003fbb9:	cmp    BYTE PTR [esi+0x1],0x2d
1003fbbd:	jne    0x1003fd51
1003fbc3:	add    esi,0x2
1003fbc6:	mov    DWORD PTR [esp+0x10],esi
1003fbca:	cmp    BYTE PTR [esi],0x5c
1003fbcd:	jne    0x1003fc1e
1003fbcf:	nop
1003fbd0:	cmp    BYTE PTR [esi+0x1],0x45
1003fbd4:	jne    0x1003fbe4
1003fbd6:	add    esi,0x2
1003fbd9:	mov    DWORD PTR [esp+0x10],esi
1003fbdd:	cmp    BYTE PTR [esi],0x5c
1003fbe0:	je     0x1003fbd0
1003fbe2:	jmp    0x1003fc1e
1003fbe4:	cmp    BYTE PTR [esi],0x5c
1003fbe7:	jne    0x1003fc1e
1003fbe9:	lea    esp,[esp+0x0]
1003fbf0:	cmp    BYTE PTR [esi+0x1],0x51
1003fbf4:	jne    0x1003fc1e
1003fbf6:	add    esi,0x2
1003fbf9:	mov    DWORD PTR [esp+0x10],esi
1003fbfd:	cmp    BYTE PTR [esi],0x5c
1003fc00:	jne    0x1003fc16
1003fc02:	cmp    BYTE PTR [esi+0x1],0x45
1003fc06:	jne    0x1003fc16
1003fc08:	add    esi,0x2
1003fc0b:	mov    DWORD PTR [esp+0x10],esi
1003fc0f:	cmp    BYTE PTR [esi],0x5c
1003fc12:	je     0x1003fbf0
1003fc14:	jmp    0x1003fc1e
1003fc16:	mov    DWORD PTR [esp+0x50],0x1
1003fc1e:	mov    al,BYTE PTR [esi]
1003fc20:	test   al,al
1003fc22:	je     0x1003fd49
1003fc28:	cmp    DWORD PTR [esp+0x50],0x0
1003fc2d:	jne    0x1003fc37
1003fc2f:	cmp    al,0x5d
1003fc31:	je     0x1003fd49
1003fc37:	cmp    DWORD PTR [esp+0x50],0x0
1003fc3c:	movzx  ebx,al
1003fc3f:	jne    0x1003fc9f
1003fc41:	cmp    ebx,0x5c
1003fc44:	jne    0x1003fc9f
1003fc46:	mov    ecx,DWORD PTR [esp+0x18]
1003fc4a:	mov    edx,DWORD PTR [ecx+0x30]
1003fc4d:	mov    esi,DWORD PTR [esp+0x20]
1003fc51:	push   0x1
1003fc53:	push   edx
1003fc54:	lea    eax,[esp+0x18]
1003fc58:	push   esi
1003fc59:	push   eax
1003fc5a:	mov    eax,DWORD PTR [esp+0x44]
1003fc5e:	call   0x1003db70
1003fc63:	add    esp,0x10
1003fc66:	cmp    DWORD PTR [esi],0x0
1003fc69:	mov    ebx,eax
1003fc6b:	jne    0x10040879
1003fc71:	test   ebx,ebx
1003fc73:	jge    0x1003fc9b
1003fc75:	cmp    ebx,0xfffffffb
1003fc78:	jne    0x1003fc81
1003fc7a:	mov    ebx,0x8
1003fc7f:	jmp    0x1003fc9b
1003fc81:	cmp    ebx,0xffffffea
1003fc84:	jne    0x1003fc8d
1003fc86:	mov    ebx,0x58
1003fc8b:	jmp    0x1003fc9b
1003fc8d:	cmp    ebx,0xffffffef
1003fc90:	jne    0x1003fd49
1003fc96:	mov    ebx,0x52
1003fc9b:	mov    esi,DWORD PTR [esp+0x10]
1003fc9f:	cmp    ebx,edi
1003fca1:	jl     0x100419fa
1003fca7:	je     0x1003fd51
1003fcad:	cmp    ebx,0xd
1003fcb0:	je     0x1003fcb7
1003fcb2:	cmp    ebx,0xa
1003fcb5:	jne    0x1003fcbf
1003fcb7:	mov    eax,DWORD PTR [esp+0x18]
1003fcbb:	or     DWORD PTR [eax+0x44],0x20
1003fcbf:	mov    edx,DWORD PTR [esp+0x24]
1003fcc3:	mov    ecx,ebx
1003fcc5:	sub    ecx,edi
1003fcc7:	cmp    DWORD PTR [esp+0x38],0x0
1003fccc:	lea    eax,[edx+ecx*1+0x1]
1003fcd0:	mov    DWORD PTR [esp+0x24],eax
1003fcd4:	mov    DWORD PTR [esp+0x28],ebx
1003fcd8:	jne    0x1003f909
1003fcde:	cmp    edi,ebx
1003fce0:	jg     0x1003f909
1003fce6:	mov    eax,DWORD PTR [esp+0x34]
1003fcea:	and    eax,0x1
1003fced:	mov    DWORD PTR [esp+0x60],eax
1003fcf1:	mov    eax,edi
1003fcf3:	cdq    
1003fcf4:	and    edx,0x7
1003fcf7:	add    eax,edx
1003fcf9:	mov    ecx,edi
1003fcfb:	and    ecx,0x7
1003fcfe:	mov    dl,0x1
1003fd00:	shl    dl,cl
1003fd02:	sar    eax,0x3
1003fd05:	lea    ebp,[esp+eax*1+0xbc]
1003fd0c:	or     BYTE PTR [ebp+0x0],dl
1003fd0f:	cmp    DWORD PTR [esp+0x60],0x0
1003fd14:	je     0x1003fd3d
1003fd16:	mov    eax,DWORD PTR [esp+0x18]
1003fd1a:	mov    ecx,DWORD PTR [eax+0x4]
1003fd1d:	movzx  ecx,BYTE PTR [ecx+edi*1]
1003fd21:	mov    eax,ecx
1003fd23:	cdq    
1003fd24:	and    edx,0x7
1003fd27:	add    eax,edx
1003fd29:	and    ecx,0x7
1003fd2c:	mov    dl,0x1
1003fd2e:	sar    eax,0x3
1003fd31:	shl    dl,cl
1003fd33:	lea    ebp,[esp+eax*1+0xbc]
1003fd3a:	or     BYTE PTR [ebp+0x0],dl
1003fd3d:	add    edi,0x1
1003fd40:	cmp    edi,ebx
1003fd42:	jle    0x1003fcf1
1003fd44:	jmp    0x1003f909
1003fd49:	mov    esi,DWORD PTR [esp+0x58]
1003fd4d:	mov    DWORD PTR [esp+0x10],esi
1003fd51:	mov    eax,edi
1003fd53:	cdq    
1003fd54:	and    edx,0x7
1003fd57:	add    eax,edx
1003fd59:	mov    ecx,edi
1003fd5b:	and    ecx,0x7
1003fd5e:	mov    dl,0x1
1003fd60:	shl    dl,cl
1003fd62:	sar    eax,0x3
1003fd65:	lea    eax,[esp+eax*1+0xbc]
1003fd6c:	or     BYTE PTR [eax],dl
1003fd6e:	test   BYTE PTR [esp+0x34],0x1
1003fd73:	je     0x1003fd9d
1003fd75:	mov    eax,DWORD PTR [esp+0x18]
1003fd79:	mov    ecx,DWORD PTR [eax+0x4]
1003fd7c:	movzx  edi,BYTE PTR [ecx+edi*1]
1003fd80:	mov    eax,edi
1003fd82:	cdq    
1003fd83:	and    edx,0x7
1003fd86:	add    eax,edx
1003fd88:	mov    ecx,edi
1003fd8a:	and    ecx,0x7
1003fd8d:	mov    dl,0x1
1003fd8f:	sar    eax,0x3
1003fd92:	shl    dl,cl
1003fd94:	lea    eax,[esp+eax*1+0xbc]
1003fd9b:	or     BYTE PTR [eax],dl
1003fd9d:	add    DWORD PTR [esp+0x24],0x1
1003fda2:	mov    DWORD PTR [esp+0x28],edi
1003fda6:	jmp    0x1003f909
1003fdab:	mov    al,BYTE PTR [esp+0x28]
1003fdaf:	jmp    0x1003f2de
1003fdb4:	mov    eax,DWORD PTR [esp+0x30]
1003fdb8:	cmp    eax,0xfffffffe
1003fdbb:	jne    0x1003fdc4
1003fdbd:	or     eax,0xffffffff
1003fdc0:	mov    DWORD PTR [esp+0x30],eax
1003fdc4:	mov    ebp,DWORD PTR [esp+0x14]
1003fdc8:	mov    edx,DWORD PTR [esp+0x4c]
1003fdcc:	mov    DWORD PTR [esp+0x5c],eax
1003fdd0:	mov    eax,DWORD PTR [esp+0x1c]
1003fdd4:	cmp    eax,DWORD PTR [esp+0x3c]
1003fdd8:	mov    DWORD PTR [esp+0x68],edx
1003fddc:	setne  cl
1003fddf:	add    cl,0x4e
1003fde2:	mov    BYTE PTR [ebp+0x0],cl
1003fde5:	add    ebp,0x1
1003fde8:	test   eax,eax
1003fdea:	je     0x1003fe1e
1003fdec:	cmp    DWORD PTR [esp+0x38],0x0
1003fdf1:	jne    0x1003fe2e
1003fdf3:	lea    ecx,[esp+0xbc]
1003fdfa:	mov    eax,ebp
1003fdfc:	sub    ecx,ebp
1003fdfe:	mov    esi,0x20
1003fe03:	mov    dl,BYTE PTR [ecx+eax*1]
1003fe06:	not    dl
1003fe08:	mov    BYTE PTR [eax],dl
1003fe0a:	add    eax,0x1
1003fe0d:	sub    esi,0x1
1003fe10:	jne    0x1003fe03
1003fe12:	add    ebp,0x20
1003fe15:	mov    DWORD PTR [esp+0x14],ebp
1003fe19:	jmp    0x10041903
1003fe1e:	mov    ecx,0x8
1003fe23:	lea    esi,[esp+0xbc]
1003fe2a:	mov    edi,ebp
1003fe2c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1003fe2e:	add    ebp,0x20
1003fe31:	mov    DWORD PTR [esp+0x14],ebp
1003fe35:	jmp    0x10041903
1003fe3a:	cmp    DWORD PTR [esp+0x28],0x0
1003fe3f:	je     0x1003f2dc
1003fe45:	mov    edi,DWORD PTR [esp+0x20]
1003fe49:	lea    eax,[esp+0x40]
1003fe4d:	push   eax
1003fe4e:	lea    ecx,[esp+0x4c]
1003fe52:	push   ecx
1003fe53:	lea    eax,[esi+0x1]
1003fe56:	call   0x1003e030
1003fe5b:	add    esp,0x8
1003fe5e:	cmp    DWORD PTR [edi],0x0
1003fe61:	mov    esi,eax
1003fe63:	mov    DWORD PTR [esp+0x10],esi
1003fe67:	jne    0x1004087d
1003fe6d:	mov    eax,DWORD PTR [esp+0x48]
1003fe71:	jmp    0x1003fe9a
1003fe73:	mov    DWORD PTR [esp+0x40],0xffffffff
1003fe7b:	jmp    0x1003fe94
1003fe7d:	mov    eax,0x1
1003fe82:	mov    DWORD PTR [esp+0x40],0xffffffff
1003fe8a:	jmp    0x1003fe96
1003fe8c:	mov    DWORD PTR [esp+0x40],0x1
1003fe94:	xor    eax,eax
1003fe96:	mov    DWORD PTR [esp+0x48],eax
1003fe9a:	xor    edx,edx
1003fe9c:	cmp    ebp,edx
1003fe9e:	je     0x10041a18
1003fea4:	cmp    eax,edx
1003fea6:	jne    0x1003feb8
1003fea8:	mov    ecx,DWORD PTR [esp+0x5c]
1003feac:	mov    DWORD PTR [esp+0x30],ecx
1003feb0:	mov    ecx,DWORD PTR [esp+0x68]
1003feb4:	mov    DWORD PTR [esp+0x4c],ecx
1003feb8:	sub    eax,DWORD PTR [esp+0x40]
1003febc:	mov    ecx,ebp
1003febe:	neg    eax
1003fec0:	sbb    eax,eax
1003fec2:	and    eax,0x200
1003fec7:	mov    DWORD PTR [esp+0x8c],eax
1003fece:	mov    DWORD PTR [esp+0x44],ecx
1003fed2:	mov    al,BYTE PTR [esi+0x1]
1003fed5:	cmp    al,0x2b
1003fed7:	mov    DWORD PTR [esp+0x54],edx
1003fedb:	mov    DWORD PTR [esp+0x3c],edx
1003fedf:	jne    0x1003fef4
1003fee1:	mov    edx,0x1
1003fee6:	xor    ebx,ebx
1003fee8:	add    esi,edx
1003feea:	mov    DWORD PTR [esp+0x3c],edx
1003feee:	mov    DWORD PTR [esp+0x10],esi
1003fef2:	jmp    0x1003ff0f
1003fef4:	cmp    al,0x3f
1003fef6:	jne    0x1003ff08
1003fef8:	mov    ebx,DWORD PTR [esp+0xa0]
1003feff:	add    esi,0x1
1003ff02:	mov    DWORD PTR [esp+0x10],esi
1003ff06:	jmp    0x1003ff0f
1003ff08:	mov    ebx,DWORD PTR [esp+0xa4]
1003ff0f:	mov    al,BYTE PTR [ebp+0x0]
1003ff12:	cmp    al,0x1c
1003ff14:	je     0x1004049a
1003ff1a:	cmp    al,0x1d
1003ff1c:	je     0x1004049a
1003ff22:	cmp    al,0x1e
1003ff24:	jne    0x1003ff5b
1003ff26:	test   edx,edx
1003ff28:	movzx  eax,BYTE PTR [ebp+0x1]
1003ff2c:	mov    DWORD PTR [esp+0x54],0xd
1003ff34:	mov    DWORD PTR [esp+0x1c],eax
1003ff38:	jne    0x100404fb
1003ff3e:	cmp    DWORD PTR [esp+0x40],edx
1003ff42:	jge    0x100404fb
1003ff48:	mov    ecx,DWORD PTR [esp+0x34]
1003ff4c:	push   ecx
1003ff4d:	add    esi,0x1
1003ff50:	push   esi
1003ff51:	mov    edx,eax
1003ff53:	push   edx
1003ff54:	push   0x1e
1003ff56:	jmp    0x100404dd
1003ff5b:	cmp    al,0x17
1003ff5d:	jae    0x1003ff91
1003ff5f:	test   edx,edx
1003ff61:	movzx  eax,al
1003ff64:	mov    DWORD PTR [esp+0x54],0x1a
1003ff6c:	mov    DWORD PTR [esp+0x1c],eax
1003ff70:	jne    0x100404fb
1003ff76:	cmp    DWORD PTR [esp+0x40],edx
1003ff7a:	jge    0x100404fb
1003ff80:	mov    ecx,DWORD PTR [esp+0x34]
1003ff84:	push   ecx
1003ff85:	add    esi,0x1
1003ff88:	push   esi
1003ff89:	push   edx
1003ff8a:	mov    edx,eax
1003ff8c:	jmp    0x100404dc
1003ff91:	cmp    al,0x4e
1003ff93:	je     0x100403fc
1003ff99:	cmp    al,0x4f
1003ff9b:	je     0x100403fc
1003ffa1:	cmp    al,0x51
1003ffa3:	je     0x100403fc
1003ffa9:	cmp    al,0x5e
1003ffab:	je     0x1003ffd0
1003ffad:	cmp    al,0x5f
1003ffaf:	je     0x1003ffd0
1003ffb1:	cmp    al,0x5d
1003ffb3:	je     0x1003ffd0
1003ffb5:	cmp    al,0x60
1003ffb7:	je     0x1003ffd0
1003ffb9:	cmp    al,0x6d
1003ffbb:	je     0x100407a3
1003ffc1:	mov    eax,DWORD PTR [esp+0x20]
1003ffc5:	mov    DWORD PTR [eax],0xb
1003ffcb:	jmp    0x1004087d
1003ffd0:	mov    edi,DWORD PTR [esp+0x14]
1003ffd4:	mov    edx,edi
1003ffd6:	sub    edx,ebp
1003ffd8:	cmp    al,0x60
1003ffda:	mov    DWORD PTR [esp+0x28],0x0
1003ffe2:	mov    DWORD PTR [esp+0x1c],edx
1003ffe6:	mov    DWORD PTR [esp+0x24],0x0
1003ffee:	jne    0x1003fffa
1003fff0:	cmp    BYTE PTR [ebp+0x3],0x66
1003fff4:	je     0x10041a27
1003fffa:	mov    edx,DWORD PTR [esp+0x40]
1003fffe:	cmp    edx,0xffffffff
10040001:	jne    0x10040022
10040003:	mov    edi,ebp
10040005:	xor    eax,eax
10040007:	mov    ah,BYTE PTR [edi+0x1]
1004000a:	mov    al,BYTE PTR [edi+0x2]
1004000d:	add    edi,eax
1004000f:	cmp    BYTE PTR [edi],0x55
10040012:	jne    0x10040005
10040014:	mov    eax,DWORD PTR [esp+0x14]
10040018:	sub    eax,edi
1004001a:	mov    edi,DWORD PTR [esp+0x14]
1004001e:	mov    DWORD PTR [esp+0x28],eax
10040022:	mov    eax,DWORD PTR [esp+0x48]
10040026:	test   eax,eax
10040028:	jne    0x100400e7
1004002e:	cmp    edx,0x1
10040031:	mov    BYTE PTR [edi],al
10040033:	jg     0x1004007e
10040035:	mov    ecx,DWORD PTR [esp+0x64]
10040039:	mov    edx,DWORD PTR [esp+0x18]
1004003d:	push   ecx
1004003e:	push   edx
1004003f:	push   0x1
10040041:	push   ebp
10040042:	call   0x1003e970
10040047:	mov    eax,DWORD PTR [esp+0x2c]
1004004b:	push   eax
1004004c:	lea    esi,[ebp+0x1]
1004004f:	push   ebp
10040050:	push   esi
10040051:	call   0x100456c0
10040056:	add    edi,0x1
10040059:	add    esp,0x1c
1004005c:	cmp    DWORD PTR [esp+0x40],0x0
10040061:	mov    DWORD PTR [esp+0x14],edi
10040065:	jne    0x10040070
10040067:	mov    BYTE PTR [ebp+0x0],0x6f
1004006b:	jmp    0x1004079f
10040070:	mov    cl,bl
10040072:	add    cl,0x67
10040075:	mov    BYTE PTR [ebp+0x0],cl
10040078:	mov    DWORD PTR [esp+0x2c],esi
1004007c:	jmp    0x100400cd
1004007e:	mov    edx,DWORD PTR [esp+0x64]
10040082:	mov    eax,DWORD PTR [esp+0x18]
10040086:	push   edx
10040087:	push   eax
10040088:	push   0x4
1004008a:	push   ebp
1004008b:	call   0x1003e970
10040090:	mov    ecx,DWORD PTR [esp+0x2c]
10040094:	push   ecx
10040095:	lea    edx,[ebp+0x4]
10040098:	push   ebp
10040099:	push   edx
1004009a:	call   0x100456c0
1004009f:	mov    al,bl
100400a1:	add    al,0x67
100400a3:	mov    BYTE PTR [ebp+0x0],al
100400a6:	add    ebp,0x1
100400a9:	mov    BYTE PTR [ebp+0x0],0x5e
100400ad:	add    ebp,0x1
100400b0:	add    edi,0x4
100400b3:	add    esp,0x1c
100400b6:	mov    DWORD PTR [esp+0x24],ebp
100400ba:	mov    BYTE PTR [ebp+0x0],0x0
100400be:	mov    BYTE PTR [ebp+0x1],0x0
100400c2:	add    ebp,0x2
100400c5:	mov    DWORD PTR [esp+0x14],edi
100400c9:	mov    DWORD PTR [esp+0x2c],ebp
100400cd:	sub    DWORD PTR [esp+0x40],0x1
100400d2:	mov    esi,DWORD PTR [esp+0x10]
100400d6:	mov    ecx,DWORD PTR [esp+0x44]
100400da:	mov    edx,DWORD PTR [esp+0x40]
100400de:	mov    edi,DWORD PTR [esp+0x38]
100400e2:	jmp    0x100401fb
100400e7:	cmp    eax,0x1
100400ea:	mov    edi,DWORD PTR [esp+0x38]
100400ee:	jle    0x100401eb
100400f4:	test   edi,edi
100400f6:	je     0x1004013d
100400f8:	mov    eax,DWORD PTR [esp+0x48]
100400fc:	add    eax,0xffffffff
100400ff:	mov    DWORD PTR [esp+0x60],eax
10040103:	imul   eax,DWORD PTR [esp+0x6c]
10040108:	fild   DWORD PTR [esp+0x60]
1004010c:	fimul  DWORD PTR [esp+0x6c]
10040110:	mov    edx,eax
10040112:	fcomp  QWORD PTR ds:0x10074160
10040118:	fnstsw ax
1004011a:	test   ah,0x41
1004011d:	je     0x10041a36
10040123:	mov    eax,DWORD PTR [edi]
10040125:	mov    ebp,0x7fffffeb
1004012a:	sub    ebp,eax
1004012c:	cmp    ebp,edx
1004012e:	jl     0x10041a36
10040134:	add    eax,edx
10040136:	mov    DWORD PTR [edi],eax
10040138:	jmp    0x100401eb
1004013d:	cmp    DWORD PTR [esp+0x88],0x0
10040145:	je     0x10040156
10040147:	cmp    DWORD PTR [esp+0x4c],0x0
1004014c:	jge    0x10040156
1004014e:	mov    edx,DWORD PTR [esp+0x30]
10040152:	mov    DWORD PTR [esp+0x4c],edx
10040156:	cmp    DWORD PTR [esp+0x48],0x1
1004015b:	jle    0x100401eb
10040161:	mov    eax,DWORD PTR [esp+0x48]
10040165:	add    eax,0xffffffff
10040168:	mov    DWORD PTR [esp+0x58],eax
1004016c:	lea    esp,[esp+0x0]
10040170:	mov    edx,DWORD PTR [esp+0x1c]
10040174:	mov    eax,DWORD PTR [esp+0x14]
10040178:	mov    ecx,DWORD PTR [esp+0x18]
1004017c:	mov    edi,DWORD PTR [ecx+0x20]
1004017f:	push   edx
10040180:	push   ebp
10040181:	push   eax
10040182:	call   0x10045180
10040187:	mov    esi,DWORD PTR [esp+0x70]
1004018b:	mov    eax,DWORD PTR [esp+0x28]
1004018f:	add    esp,0xc
10040192:	cmp    esi,edi
10040194:	jae    0x100401d0
10040196:	mov    ecx,DWORD PTR [esp+0x18]
1004019a:	lea    ebx,[ebx+0x0]
100401a0:	mov    ecx,DWORD PTR [ecx+0x20]
100401a3:	xor    edx,edx
100401a5:	mov    dh,BYTE PTR [esi]
100401a7:	add    esi,0x2
100401aa:	mov    dl,BYTE PTR [esi-0x1]
100401ad:	add    edx,eax
100401af:	sar    edx,0x8
100401b2:	mov    BYTE PTR [ecx],dl
100401b4:	movzx  edx,BYTE PTR [esi-0x1]
100401b8:	mov    ecx,DWORD PTR [esp+0x18]
100401bc:	mov    ecx,DWORD PTR [ecx+0x20]
100401bf:	add    dl,al
100401c1:	mov    BYTE PTR [ecx+0x1],dl
100401c4:	mov    ecx,DWORD PTR [esp+0x18]
100401c8:	add    DWORD PTR [ecx+0x20],0x2
100401cc:	cmp    esi,edi
100401ce:	jb     0x100401a0
100401d0:	add    DWORD PTR [esp+0x14],eax
100401d4:	sub    DWORD PTR [esp+0x58],0x1
100401d9:	mov    DWORD PTR [esp+0x64],edi
100401dd:	jne    0x10040170
100401df:	mov    esi,DWORD PTR [esp+0x10]
100401e3:	mov    ecx,DWORD PTR [esp+0x44]
100401e7:	mov    edi,DWORD PTR [esp+0x38]
100401eb:	mov    edx,DWORD PTR [esp+0x40]
100401ef:	test   edx,edx
100401f1:	jle    0x100401fd
100401f3:	sub    edx,DWORD PTR [esp+0x48]
100401f7:	mov    DWORD PTR [esp+0x40],edx
100401fb:	test   edx,edx
100401fd:	jl     0x100403a0
10040203:	test   edi,edi
10040205:	je     0x10040251
10040207:	test   edx,edx
10040209:	jle    0x10040251
1004020b:	mov    eax,DWORD PTR [esp+0x6c]
1004020f:	add    eax,0x7
10040212:	mov    DWORD PTR [esp+0x60],eax
10040216:	imul   eax,edx
10040219:	fild   DWORD PTR [esp+0x60]
1004021d:	fimul  DWORD PTR [esp+0x40]
10040221:	sub    eax,0x6
10040224:	mov    edx,eax
10040226:	fcomp  QWORD PTR ds:0x10074160
1004022c:	fnstsw ax
1004022e:	test   ah,0x41
10040231:	je     0x10041938
10040237:	mov    eax,DWORD PTR [edi]
10040239:	mov    ebx,0x7fffffeb
1004023e:	sub    ebx,eax
10040240:	cmp    ebx,edx
10040242:	jl     0x10041938
10040248:	add    eax,edx
1004024a:	mov    DWORD PTR [edi],eax
1004024c:	jmp    0x10040345
10040251:	add    edx,0xffffffff
10040254:	mov    DWORD PTR [esp+0x28],edx
10040258:	js     0x10040345
1004025e:	mov    esi,DWORD PTR [esp+0x14]
10040262:	mov    edi,DWORD PTR [esp+0x18]
10040266:	add    bl,0x67
10040269:	mov    BYTE PTR [esp+0x73],bl
1004026d:	jmp    0x10040274
1004026f:	nop
10040270:	mov    bl,BYTE PTR [esp+0x73]
10040274:	mov    ebp,DWORD PTR [edi+0x20]
10040277:	mov    BYTE PTR [esi],bl
10040279:	add    esi,0x1
1004027c:	cmp    DWORD PTR [esp+0x28],0x0
10040281:	mov    DWORD PTR [esp+0x60],ebp
10040285:	mov    DWORD PTR [esp+0x14],esi
10040289:	je     0x100402b6
1004028b:	mov    ecx,DWORD PTR [esp+0x24]
1004028f:	mov    BYTE PTR [esi],0x5e
10040292:	add    esi,0x1
10040295:	test   ecx,ecx
10040297:	jne    0x1004029d
10040299:	xor    eax,eax
1004029b:	jmp    0x100402a1
1004029d:	mov    eax,esi
1004029f:	sub    eax,ecx
100402a1:	mov    edx,eax
100402a3:	sar    edx,0x8
100402a6:	mov    DWORD PTR [esp+0x24],esi
100402aa:	mov    BYTE PTR [esi],dl
100402ac:	mov    BYTE PTR [esi+0x1],al
100402af:	add    esi,0x2
100402b2:	mov    DWORD PTR [esp+0x14],esi
100402b6:	mov    ebx,DWORD PTR [esp+0x1c]
100402ba:	mov    eax,DWORD PTR [esp+0x2c]
100402be:	push   ebx
100402bf:	push   eax
100402c0:	push   esi
100402c1:	call   0x10045180
100402c6:	mov    eax,DWORD PTR [esp+0x70]
100402ca:	add    esp,0xc
100402cd:	cmp    eax,ebp
100402cf:	jae    0x10040328
100402d1:	mov    ecx,DWORD PTR [esp+0x28]
100402d5:	mov    esi,ecx
100402d7:	neg    esi
100402d9:	sbb    esi,esi
100402db:	and    esi,0x3
100402de:	add    esi,0x1
100402e1:	neg    ecx
100402e3:	sbb    cl,cl
100402e5:	and    cl,0x3
100402e8:	add    cl,0x1
100402eb:	jmp    0x100402f0
100402ed:	lea    ecx,[ecx+0x0]
100402f0:	xor    edx,edx
100402f2:	mov    dh,BYTE PTR [eax]
100402f4:	add    eax,0x2
100402f7:	mov    dl,BYTE PTR [eax-0x1]
100402fa:	add    edx,esi
100402fc:	add    edx,ebx
100402fe:	mov    ebx,DWORD PTR [edi+0x20]
10040301:	sar    edx,0x8
10040304:	mov    BYTE PTR [ebx],dl
10040306:	movzx  edx,BYTE PTR [eax-0x1]
1004030a:	mov    ebx,DWORD PTR [esp+0x1c]
1004030e:	mov    ebp,DWORD PTR [edi+0x20]
10040311:	add    dl,cl
10040313:	add    dl,bl
10040315:	mov    BYTE PTR [ebp+0x1],dl
10040318:	mov    ebp,DWORD PTR [esp+0x60]
1004031c:	add    DWORD PTR [edi+0x20],0x2
10040320:	cmp    eax,ebp
10040322:	jb     0x100402f0
10040324:	mov    esi,DWORD PTR [esp+0x14]
10040328:	add    esi,ebx
1004032a:	sub    DWORD PTR [esp+0x28],0x1
1004032f:	mov    DWORD PTR [esp+0x64],ebp
10040333:	mov    DWORD PTR [esp+0x14],esi
10040337:	jns    0x10040270
1004033d:	mov    esi,DWORD PTR [esp+0x10]
10040341:	mov    ecx,DWORD PTR [esp+0x44]
10040345:	xor    edi,edi
10040347:	cmp    DWORD PTR [esp+0x24],edi
1004034b:	je     0x100406a3
10040351:	mov    esi,DWORD PTR [esp+0x14]
10040355:	mov    eax,esi
10040357:	sub    eax,DWORD PTR [esp+0x24]
1004035b:	mov    ecx,esi
1004035d:	add    eax,0x1
10040360:	sub    ecx,eax
10040362:	xor    edx,edx
10040364:	mov    dh,BYTE PTR [ecx+0x1]
10040367:	mov    dl,BYTE PTR [ecx+0x2]
1004036a:	cmp    edx,edi
1004036c:	jne    0x10040374
1004036e:	mov    DWORD PTR [esp+0x24],edi
10040372:	jmp    0x10040378
10040374:	sub    DWORD PTR [esp+0x24],edx
10040378:	mov    BYTE PTR [esi],0x55
1004037b:	add    esi,0x1
1004037e:	mov    edx,eax
10040380:	sar    edx,0x8
10040383:	mov    BYTE PTR [esi],dl
10040385:	mov    BYTE PTR [esi+0x1],al
10040388:	add    esi,0x2
1004038b:	cmp    DWORD PTR [esp+0x24],edi
1004038f:	mov    BYTE PTR [ecx+0x1],dl
10040392:	mov    BYTE PTR [ecx+0x2],al
10040395:	jne    0x10040355
10040397:	mov    DWORD PTR [esp+0x14],esi
1004039b:	jmp    0x1004069b
100403a0:	mov    esi,DWORD PTR [esp+0x14]
100403a4:	sub    esi,DWORD PTR [esp+0x28]
100403a8:	xor    eax,eax
100403aa:	mov    ah,BYTE PTR [esi+0x1]
100403ad:	mov    edi,esi
100403af:	add    bl,0x56
100403b2:	mov    BYTE PTR [esi],bl
100403b4:	mov    al,BYTE PTR [esi+0x2]
100403b7:	sub    edi,eax
100403b9:	cmp    DWORD PTR [esp+0x38],0x0
100403be:	jne    0x1004069b
100403c4:	cmp    BYTE PTR [edi],0x5d
100403c7:	je     0x1004069b
100403cd:	mov    ebx,edi
100403cf:	nop
100403d0:	push   0x0
100403d2:	push   esi
100403d3:	push   ebx
100403d4:	call   0x1003e6f0
100403d9:	add    esp,0xc
100403dc:	test   eax,eax
100403de:	jne    0x100403f4
100403e0:	xor    ecx,ecx
100403e2:	mov    ch,BYTE PTR [ebx+0x1]
100403e5:	mov    cl,BYTE PTR [ebx+0x2]
100403e8:	add    ebx,ecx
100403ea:	cmp    BYTE PTR [ebx],0x54
100403ed:	je     0x100403d0
100403ef:	jmp    0x1004069b
100403f4:	add    BYTE PTR [edi],0x3
100403f7:	jmp    0x1004069b
100403fc:	mov    eax,DWORD PTR [esp+0x40]
10040400:	test   eax,eax
10040402:	jne    0x1004040d
10040404:	mov    DWORD PTR [esp+0x14],ebp
10040408:	jmp    0x100407a3
1004040d:	cmp    eax,0x1
10040410:	je     0x1004041a
10040412:	mov    ecx,DWORD PTR [esp+0x18]
10040416:	or     DWORD PTR [ecx+0x44],0x1
1004041a:	mov    ecx,DWORD PTR [esp+0x48]
1004041e:	test   ecx,ecx
10040420:	jne    0x10040435
10040422:	cmp    eax,0xffffffff
10040425:	jne    0x1004044d
10040427:	mov    eax,DWORD PTR [esp+0x14]
1004042b:	add    bl,0x46
1004042e:	mov    BYTE PTR [eax],bl
10040430:	jmp    0x10040694
10040435:	cmp    ecx,0x1
10040438:	jne    0x10040460
1004043a:	cmp    eax,0xffffffff
1004043d:	jne    0x10040460
1004043f:	mov    eax,DWORD PTR [esp+0x14]
10040443:	add    bl,0x48
10040446:	mov    BYTE PTR [eax],bl
10040448:	jmp    0x10040694
1004044d:	cmp    eax,0x1
10040450:	jne    0x10040460
10040452:	mov    eax,DWORD PTR [esp+0x14]
10040456:	add    bl,0x4a
10040459:	mov    BYTE PTR [eax],bl
1004045b:	jmp    0x10040694
10040460:	mov    esi,DWORD PTR [esp+0x14]
10040464:	add    bl,0x4c
10040467:	mov    BYTE PTR [esi],bl
10040469:	add    esi,0x1
1004046c:	mov    edx,ecx
1004046e:	sar    edx,0x8
10040471:	mov    BYTE PTR [esi],dl
10040473:	mov    BYTE PTR [esi+0x1],cl
10040476:	add    esi,0x2
10040479:	cmp    eax,0xffffffff
1004047c:	jne    0x10040484
1004047e:	xor    eax,eax
10040480:	mov    DWORD PTR [esp+0x40],eax
10040484:	mov    ecx,eax
10040486:	sar    ecx,0x8
10040489:	mov    BYTE PTR [esi],cl
1004048b:	mov    BYTE PTR [esi+0x1],al
1004048e:	add    esi,0x2
10040491:	mov    DWORD PTR [esp+0x14],esi
10040495:	jmp    0x1004069b
1004049a:	cmp    DWORD PTR [esp+0x48],0x1
1004049f:	mov    ecx,DWORD PTR [esp+0x14]
100404a3:	movzx  edi,BYTE PTR [ecx-0x1]
100404a7:	mov    DWORD PTR [esp+0x1c],edi
100404ab:	jle    0x100404c1
100404ad:	mov    ecx,DWORD PTR [esp+0x18]
100404b1:	mov    ecx,DWORD PTR [ecx+0x48]
100404b4:	or     ecx,edi
100404b6:	or     ecx,DWORD PTR [esp+0x84]
100404bd:	mov    DWORD PTR [esp+0x4c],ecx
100404c1:	test   edx,edx
100404c3:	jne    0x100404fb
100404c5:	cmp    DWORD PTR [esp+0x40],edx
100404c9:	jge    0x100404fb
100404cb:	mov    edx,DWORD PTR [esp+0x34]
100404cf:	mov    ecx,DWORD PTR [esp+0x1c]
100404d3:	push   edx
100404d4:	add    esi,0x1
100404d7:	push   esi
100404d8:	push   ecx
100404d9:	movzx  edx,al
100404dc:	push   edx
100404dd:	mov    esi,DWORD PTR [esp+0x28]
100404e1:	call   0x1003ea10
100404e6:	add    esp,0x10
100404e9:	test   eax,eax
100404eb:	je     0x100404f7
100404ed:	mov    DWORD PTR [esp+0x3c],0x1
100404f5:	xor    ebx,ebx
100404f7:	mov    esi,DWORD PTR [esp+0x10]
100404fb:	mov    al,BYTE PTR [ebp+0x0]
100404fe:	cmp    al,0x10
10040500:	je     0x1004050f
10040502:	cmp    al,0xf
10040504:	je     0x1004050f
10040506:	or     eax,0xffffffff
10040509:	mov    DWORD PTR [esp+0x24],eax
1004050d:	jmp    0x1004051b
1004050f:	movzx  ecx,BYTE PTR [ebp+0x2]
10040513:	movzx  eax,BYTE PTR [ebp+0x1]
10040517:	mov    DWORD PTR [esp+0x24],ecx
1004051b:	mov    edi,DWORD PTR [esp+0x14]
1004051f:	mov    DWORD PTR [esp+0x28],eax
10040523:	mov    eax,DWORD PTR [esp+0x40]
10040527:	test   eax,eax
10040529:	mov    DWORD PTR [esp+0x14],ebp
1004052d:	je     0x100407a3
10040533:	cmp    eax,0x1
10040536:	je     0x10040540
10040538:	mov    ecx,DWORD PTR [esp+0x18]
1004053c:	or     DWORD PTR [ecx+0x44],0x1
10040540:	mov    ecx,DWORD PTR [esp+0x54]
10040544:	add    ebx,ecx
10040546:	cmp    DWORD PTR [esp+0x48],0x0
1004054b:	jne    0x1004059a
1004054d:	cmp    eax,0xffffffff
10040550:	jne    0x10040564
10040552:	add    bl,0x1f
10040555:	mov    BYTE PTR [ebp+0x0],bl
10040558:	add    ebp,0x1
1004055b:	mov    DWORD PTR [esp+0x14],ebp
1004055f:	jmp    0x1004068a
10040564:	cmp    eax,0x1
10040567:	jne    0x1004057b
10040569:	add    bl,0x23
1004056c:	mov    BYTE PTR [ebp+0x0],bl
1004056f:	add    ebp,0x1
10040572:	mov    DWORD PTR [esp+0x14],ebp
10040576:	jmp    0x1004068a
1004057b:	add    bl,0x25
1004057e:	lea    ecx,[ebp+0x1]
10040581:	mov    edx,eax
10040583:	sar    edx,0x8
10040586:	mov    BYTE PTR [ebp+0x0],bl
10040589:	mov    BYTE PTR [ecx],dl
1004058b:	mov    BYTE PTR [ecx+0x1],al
1004058e:	add    ecx,0x2
10040591:	mov    DWORD PTR [esp+0x14],ecx
10040595:	jmp    0x1004068a
1004059a:	cmp    DWORD PTR [esp+0x48],0x1
1004059f:	jne    0x100405e6
100405a1:	cmp    eax,0xffffffff
100405a4:	jne    0x100405b8
100405a6:	add    bl,0x21
100405a9:	mov    BYTE PTR [ebp+0x0],bl
100405ac:	add    ebp,0x1
100405af:	mov    DWORD PTR [esp+0x14],ebp
100405b3:	jmp    0x1004068a
100405b8:	cmp    eax,0x1
100405bb:	mov    DWORD PTR [esp+0x14],edi
100405bf:	je     0x100407a3
100405c5:	lea    edx,[eax-0x1]
100405c8:	add    bl,0x25
100405cb:	lea    ecx,[edi+0x1]
100405ce:	sar    edx,0x8
100405d1:	sub    al,0x1
100405d3:	mov    BYTE PTR [edi],bl
100405d5:	mov    BYTE PTR [ecx],dl
100405d7:	mov    BYTE PTR [ecx+0x1],al
100405da:	add    ecx,0x2
100405dd:	mov    DWORD PTR [esp+0x14],ecx
100405e1:	jmp    0x1004068a
100405e6:	add    cl,0x27
100405e9:	mov    BYTE PTR [ebp+0x0],cl
100405ec:	mov    ecx,DWORD PTR [esp+0x48]
100405f0:	lea    esi,[ebp+0x1]
100405f3:	mov    edx,ecx
100405f5:	sar    edx,0x8
100405f8:	mov    BYTE PTR [esi],dl
100405fa:	mov    BYTE PTR [esi+0x1],cl
100405fd:	add    esi,0x2
10040600:	test   eax,eax
10040602:	mov    DWORD PTR [esp+0x14],esi
10040606:	jge    0x10040631
10040608:	mov    al,BYTE PTR [esp+0x1c]
1004060c:	mov    BYTE PTR [esi],al
1004060e:	mov    eax,DWORD PTR [esp+0x28]
10040612:	add    esi,0x1
10040615:	test   eax,eax
10040617:	jl     0x10040627
10040619:	mov    cl,BYTE PTR [esp+0x24]
1004061d:	mov    BYTE PTR [esi],al
1004061f:	add    esi,0x1
10040622:	mov    BYTE PTR [esi],cl
10040624:	add    esi,0x1
10040627:	add    bl,0x1f
1004062a:	mov    BYTE PTR [esi],bl
1004062c:	add    esi,0x1
1004062f:	jmp    0x10040686
10040631:	cmp    eax,ecx
10040633:	je     0x1004068a
10040635:	mov    esi,DWORD PTR [esp+0x14]
10040639:	mov    dl,BYTE PTR [esp+0x1c]
1004063d:	mov    BYTE PTR [esi],dl
1004063f:	add    esi,0x1
10040642:	cmp    DWORD PTR [esp+0x28],0x0
10040647:	jl     0x1004065d
10040649:	movzx  edx,BYTE PTR [esp+0x28]
1004064e:	mov    BYTE PTR [esi],dl
10040650:	movzx  edx,BYTE PTR [esp+0x24]
10040655:	add    esi,0x1
10040658:	mov    BYTE PTR [esi],dl
1004065a:	add    esi,0x1
1004065d:	sub    eax,ecx
1004065f:	cmp    eax,0x1
10040662:	mov    DWORD PTR [esp+0x40],eax
10040666:	jne    0x10040671
10040668:	add    bl,0x23
1004066b:	mov    BYTE PTR [esi],bl
1004066d:	add    esi,eax
1004066f:	jmp    0x10040686
10040671:	add    bl,0x25
10040674:	mov    BYTE PTR [esi],bl
10040676:	add    esi,0x1
10040679:	mov    ecx,eax
1004067b:	sar    ecx,0x8
1004067e:	mov    BYTE PTR [esi],cl
10040680:	mov    BYTE PTR [esi+0x1],al
10040683:	add    esi,0x2
10040686:	mov    DWORD PTR [esp+0x14],esi
1004068a:	mov    dl,BYTE PTR [esp+0x1c]
1004068e:	mov    eax,DWORD PTR [esp+0x14]
10040692:	mov    BYTE PTR [eax],dl
10040694:	add    eax,0x1
10040697:	mov    DWORD PTR [esp+0x14],eax
1004069b:	mov    ecx,DWORD PTR [esp+0x44]
1004069f:	mov    esi,DWORD PTR [esp+0x10]
100406a3:	cmp    DWORD PTR [esp+0x3c],0x0
100406a8:	je     0x100407a3
100406ae:	mov    al,BYTE PTR [ecx]
100406b0:	cmp    al,0x27
100406b2:	je     0x100406bc
100406b4:	cmp    al,0x41
100406b6:	je     0x100406c0
100406b8:	cmp    al,0x34
100406ba:	jne    0x100406e8
100406bc:	cmp    al,0x41
100406be:	jne    0x100406d4
100406c0:	mov    dl,BYTE PTR [ecx+0x3]
100406c3:	cmp    dl,0x10
100406c6:	je     0x100406cd
100406c8:	cmp    dl,0xf
100406cb:	jne    0x100406d4
100406cd:	mov    edx,0x2
100406d2:	jmp    0x100406d6
100406d4:	xor    edx,edx
100406d6:	movzx  eax,al
100406d9:	movzx  eax,BYTE PTR [eax+0x1006e420]
100406e0:	add    eax,edx
100406e2:	add    ecx,eax
100406e4:	mov    DWORD PTR [esp+0x44],ecx
100406e8:	mov    ebx,DWORD PTR [esp+0x14]
100406ec:	sub    ebx,ecx
100406ee:	test   ebx,ebx
100406f0:	jle    0x100407a3
100406f6:	movzx  eax,BYTE PTR [ecx]
100406f9:	add    eax,0xffffffe1
100406fc:	cmp    eax,0x20
100406ff:	ja     0x1004075a
10040701:	movzx  edx,BYTE PTR [eax+0x10041ccc]
10040708:	jmp    DWORD PTR [edx*4+0x10041c98]
1004070f:	mov    BYTE PTR [ecx],0x28
10040712:	jmp    0x1004079f
10040717:	mov    BYTE PTR [ecx],0x29
1004071a:	jmp    0x1004079f
1004071f:	mov    BYTE PTR [ecx],0x2a
10040722:	jmp    0x1004079f
10040727:	mov    BYTE PTR [ecx],0x2b
1004072a:	jmp    0x1004079f
1004072f:	mov    BYTE PTR [ecx],0x42
10040732:	jmp    0x1004079f
10040737:	mov    BYTE PTR [ecx],0x43
1004073a:	jmp    0x1004079f
1004073c:	mov    BYTE PTR [ecx],0x44
1004073f:	jmp    0x1004079f
10040741:	mov    BYTE PTR [ecx],0x45
10040744:	jmp    0x1004079f
10040746:	mov    BYTE PTR [ecx],0x35
10040749:	jmp    0x1004079f
1004074b:	mov    BYTE PTR [ecx],0x36
1004074e:	jmp    0x1004079f
10040750:	mov    BYTE PTR [ecx],0x37
10040753:	jmp    0x1004079f
10040755:	mov    BYTE PTR [ecx],0x38
10040758:	jmp    0x1004079f
1004075a:	push   ebx
1004075b:	push   ecx
1004075c:	add    ecx,0x3
1004075f:	push   ecx
10040760:	call   0x100456c0
10040765:	mov    ecx,DWORD PTR [esp+0x50]
10040769:	mov    eax,DWORD PTR [esp+0x20]
1004076d:	mov    BYTE PTR [ecx],0x5d
10040770:	mov    BYTE PTR [eax+0x3],0x55
10040774:	add    ebx,0x3
10040777:	add    eax,0x3
1004077a:	add    eax,0x1
1004077d:	mov    ecx,ebx
1004077f:	sar    ecx,0x8
10040782:	mov    BYTE PTR [eax],cl
10040784:	mov    BYTE PTR [eax+0x1],bl
10040787:	mov    edx,DWORD PTR [esp+0x50]
1004078b:	add    esp,0xc
1004078e:	add    eax,0x2
10040791:	mov    BYTE PTR [edx+0x1],cl
10040794:	mov    DWORD PTR [esp+0x14],eax
10040798:	mov    eax,DWORD PTR [esp+0x44]
1004079c:	mov    BYTE PTR [eax+0x2],bl
1004079f:	mov    esi,DWORD PTR [esp+0x10]
100407a3:	mov    eax,DWORD PTR [esp+0x18]
100407a7:	mov    ecx,DWORD PTR [esp+0x8c]
100407ae:	or     DWORD PTR [eax+0x48],ecx
100407b1:	mov    DWORD PTR [esp+0x2c],0x0
100407b9:	jmp    0x10041907
100407be:	mov    edi,DWORD PTR [esp+0x18]
100407c2:	mov    eax,DWORD PTR [edi+0x20]
100407c5:	mov    edx,DWORD PTR [esp+0x34]
100407c9:	mov    ebx,0x1
100407ce:	add    esi,ebx
100407d0:	xor    ebp,ebp
100407d2:	mov    DWORD PTR [esp+0x64],eax
100407d6:	mov    DWORD PTR [esp+0x10],esi
100407da:	mov    al,BYTE PTR [esi]
100407dc:	cmp    al,0x2a
100407de:	mov    DWORD PTR [esp+0x60],edx
100407e2:	mov    DWORD PTR [esp+0x28],ebp
100407e6:	mov    DWORD PTR [esp+0x24],0x5f
100407ee:	mov    DWORD PTR [esp+0x58],ebp
100407f2:	jne    0x100408d0
100407f8:	movzx  ebp,BYTE PTR [esi+0x1]
100407fc:	mov    ecx,DWORD PTR [edi+0xc]
100407ff:	test   BYTE PTR [ecx+ebp*1],0x2
10040803:	je     0x100408ce
10040809:	add    esi,0x1
1004080c:	xor    edi,edi
1004080e:	mov    ebx,0x1006e968
10040813:	mov    ebp,esi
10040815:	mov    DWORD PTR [esp+0x2c],edi
10040819:	lea    esp,[esp+0x0]
10040820:	add    esi,0x1
10040823:	mov    DWORD PTR [esp+0x10],esi
10040827:	movzx  edx,BYTE PTR [esi]
1004082a:	test   BYTE PTR [edx+ecx*1],0x2
1004082e:	jne    0x10040820
10040830:	mov    al,BYTE PTR [esi]
10040832:	cmp    al,0x3a
10040834:	je     0x10041a45
1004083a:	cmp    al,0x29
1004083c:	jne    0x10041a54
10040842:	sub    esi,ebp
10040844:	cmp    esi,DWORD PTR [edi*8+0x1006e990]
1004084b:	jne    0x1004085c
1004084d:	push   esi
1004084e:	push   ebx
1004084f:	push   ebp
10040850:	call   0x1004f106
10040855:	add    esp,0xc
10040858:	test   eax,eax
1004085a:	je     0x100408a1
1004085c:	mov    eax,DWORD PTR [edi*8+0x1006e990]
10040863:	add    edi,0x1
10040866:	cmp    edi,0x7
10040869:	lea    ebx,[ebx+eax*1+0x1]
1004086d:	jl     0x10040844
1004086f:	mov    eax,DWORD PTR [esp+0x20]
10040873:	mov    DWORD PTR [eax],0x3c
10040879:	mov    esi,DWORD PTR [esp+0x10]
1004087d:	mov    edx,DWORD PTR [esp+0x9c]
10040884:	mov    DWORD PTR [edx],esi
10040886:	xor    eax,eax
10040888:	mov    ecx,DWORD PTR [esp+0xfc]
1004088f:	pop    edi
10040890:	pop    esi
10040891:	pop    ebp
10040892:	pop    ebx
10040893:	xor    ecx,esp
10040895:	call   0x10042e97
1004089a:	add    esp,0xf0
100408a0:	ret    
100408a1:	mov    ecx,DWORD PTR [esp+0x14]
100408a5:	mov    al,BYTE PTR [edi*8+0x1006e994]
100408ac:	mov    BYTE PTR [ecx],al
100408ae:	add    ecx,0x1
100408b1:	cmp    al,0x6e
100408b3:	mov    DWORD PTR [esp+0x14],ecx
100408b7:	jne    0x100408c4
100408b9:	mov    ecx,DWORD PTR [esp+0x18]
100408bd:	mov    DWORD PTR [ecx+0x4c],0x1
100408c4:	cmp    edi,0x7
100408c7:	jge    0x1004086f
100408c9:	jmp    0x10041903
100408ce:	xor    ebp,ebp
100408d0:	cmp    al,0x3f
100408d2:	jne    0x10040fc0
100408d8:	add    esi,ebx
100408da:	mov    DWORD PTR [esp+0x10],esi
100408de:	mov    al,BYTE PTR [esi]
100408e0:	movzx  ecx,al
100408e3:	add    ecx,0xffffffdf
100408e6:	cmp    ecx,0x5b
100408e9:	ja     0x1004121b
100408ef:	movzx  edx,BYTE PTR [ecx+0x10041d2c]
100408f6:	jmp    DWORD PTR [edx*4+0x10041cf0]
100408fd:	add    esi,ebx
100408ff:	mov    DWORD PTR [esp+0x10],esi
10040903:	mov    al,BYTE PTR [esi]
10040905:	test   al,al
10040907:	je     0x10040920
10040909:	lea    esp,[esp+0x0]
10040910:	cmp    al,0x29
10040912:	je     0x1004092f
10040914:	add    esi,ebx
10040916:	mov    DWORD PTR [esp+0x10],esi
1004091a:	mov    al,BYTE PTR [esi]
1004091c:	test   al,al
1004091e:	jne    0x10040910
10040920:	mov    ecx,DWORD PTR [esp+0x20]
10040924:	mov    DWORD PTR [ecx],0x12
1004092a:	jmp    0x1004087d
1004092f:	cmp    BYTE PTR [esi],0x0
10040932:	je     0x10040920
10040934:	jmp    0x10041907
10040939:	mov    DWORD PTR [esp+0x58],ebx
1004093d:	add    esi,ebx
1004093f:	jmp    0x10041353
10040944:	cmp    BYTE PTR [esi+0x1],0x3f
10040948:	mov    DWORD PTR [esp+0x24],0x60
10040950:	jne    0x1004096d
10040952:	mov    al,BYTE PTR [esi+0x2]
10040955:	cmp    al,0x3d
10040957:	je     0x1004135f
1004095d:	cmp    al,0x21
1004095f:	je     0x1004135f
10040965:	cmp    al,0x3c
10040967:	je     0x1004135f
1004096d:	mov    edx,DWORD PTR [esp+0x14]
10040971:	mov    BYTE PTR [edx+0x3],0x64
10040975:	mov    esi,DWORD PTR [esp+0x10]
10040979:	mov    al,BYTE PTR [esi+0x1]
1004097c:	or     ebp,0xffffffff
1004097f:	cmp    al,0x52
10040981:	mov    DWORD PTR [esp+0x28],0x3
10040989:	mov    ebx,ebp
1004098b:	jne    0x100409a8
1004098d:	cmp    BYTE PTR [esi+0x2],0x26
10040991:	lea    ecx,[esi+0x2]
10040994:	jne    0x100409a8
10040996:	mov    DWORD PTR [esp+0x10],ecx
1004099a:	mov    BYTE PTR [edx+0x3],0x65
1004099e:	mov    esi,DWORD PTR [esp+0x10]
100409a2:	mov    DWORD PTR [esp+0x54],ebp
100409a6:	jmp    0x100409ec
100409a8:	cmp    al,0x3c
100409aa:	jne    0x100409bd
100409ac:	add    esi,0x1
100409af:	mov    DWORD PTR [esp+0x54],0x3e
100409b7:	mov    DWORD PTR [esp+0x10],esi
100409bb:	jmp    0x100409ec
100409bd:	cmp    al,0x27
100409bf:	jne    0x100409d2
100409c1:	add    esi,0x1
100409c4:	mov    DWORD PTR [esp+0x54],0x27
100409cc:	mov    DWORD PTR [esp+0x10],esi
100409d0:	jmp    0x100409ec
100409d2:	cmp    al,0x2d
100409d4:	mov    DWORD PTR [esp+0x54],0x0
100409dc:	je     0x100409e2
100409de:	cmp    al,0x2b
100409e0:	jne    0x100409ec
100409e2:	add    esi,0x1
100409e5:	mov    DWORD PTR [esp+0x10],esi
100409e9:	movzx  ebx,BYTE PTR [esi]
100409ec:	movzx  eax,BYTE PTR [esi+0x1]
100409f0:	mov    edx,DWORD PTR [edi+0xc]
100409f3:	add    esi,0x1
100409f6:	test   BYTE PTR [eax+edx*1],0x10
100409fa:	je     0x10041a63
10040a00:	mov    DWORD PTR [esp+0x10],esi
10040a04:	movzx  eax,BYTE PTR [esi]
10040a07:	xor    ecx,ecx
10040a09:	test   BYTE PTR [eax+edx*1],0x10
10040a0d:	mov    edi,esi
10040a0f:	mov    DWORD PTR [esp+0x1c],ecx
10040a13:	mov    DWORD PTR [esp+0x2c],edi
10040a17:	je     0x10040a52
10040a19:	mov    edx,DWORD PTR [esp+0x18]
10040a1d:	mov    edx,DWORD PTR [edx+0xc]
10040a20:	test   ecx,ecx
10040a22:	jl     0x10040a42
10040a24:	test   BYTE PTR [eax+0x1006f410],0x4
10040a2b:	je     0x10040a3a
10040a2d:	lea    ecx,[ecx+ecx*4]
10040a30:	lea    eax,[eax+ecx*2-0x30]
10040a34:	mov    DWORD PTR [esp+0x1c],eax
10040a38:	jmp    0x10040a3e
10040a3a:	mov    DWORD PTR [esp+0x1c],ebp
10040a3e:	mov    ecx,DWORD PTR [esp+0x1c]
10040a42:	add    esi,0x1
10040a45:	mov    DWORD PTR [esp+0x10],esi
10040a49:	movzx  eax,BYTE PTR [esi]
10040a4c:	test   BYTE PTR [eax+edx*1],0x10
10040a50:	jne    0x10040a20
10040a52:	mov    eax,DWORD PTR [esp+0x54]
10040a56:	mov    ebp,esi
10040a58:	sub    ebp,edi
10040a5a:	test   eax,eax
10040a5c:	jle    0x10040a70
10040a5e:	movzx  edx,BYTE PTR [esi]
10040a61:	add    esi,0x1
10040a64:	cmp    edx,eax
10040a66:	mov    DWORD PTR [esp+0x10],esi
10040a6a:	jne    0x10041a72
10040a70:	mov    al,BYTE PTR [esi]
10040a72:	add    esi,0x1
10040a75:	cmp    al,0x29
10040a77:	mov    DWORD PTR [esp+0x10],esi
10040a7b:	jne    0x10041a72
10040a81:	cmp    DWORD PTR [esp+0x38],0x0
10040a86:	jne    0x1004135f
10040a8c:	test   ebx,ebx
10040a8e:	jle    0x10040ad9
10040a90:	test   ecx,ecx
10040a92:	jle    0x10041a84
10040a98:	cmp    ebx,0x2d
10040a9b:	mov    eax,DWORD PTR [esp+0x18]
10040a9f:	jne    0x10040ab1
10040aa1:	mov    edx,DWORD PTR [eax+0x30]
10040aa4:	sub    edx,ecx
10040aa6:	add    edx,0x1
10040aa9:	mov    DWORD PTR [esp+0x1c],edx
10040aad:	mov    ecx,edx
10040aaf:	jmp    0x10040ab4
10040ab1:	add    ecx,DWORD PTR [eax+0x30]
10040ab4:	test   ecx,ecx
10040ab6:	jle    0x10041a93
10040abc:	cmp    ecx,DWORD PTR [eax+0x34]
10040abf:	jg     0x10041a93
10040ac5:	mov    eax,DWORD PTR [esp+0x14]
10040ac9:	mov    edx,ecx
10040acb:	sar    edx,0x8
10040ace:	mov    BYTE PTR [eax+0x4],dl
10040ad1:	mov    BYTE PTR [eax+0x5],cl
10040ad4:	jmp    0x1004135f
10040ad9:	mov    ebx,DWORD PTR [esp+0x18]
10040add:	cmp    DWORD PTR [ebx+0x28],0x0
10040ae1:	mov    edi,DWORD PTR [ebx+0x24]
10040ae4:	mov    DWORD PTR [esp+0x3c],0x0
10040aec:	jle    0x10040b1b
10040aee:	mov    esi,DWORD PTR [esp+0x3c]
10040af2:	mov    ecx,DWORD PTR [esp+0x2c]
10040af6:	push   ebp
10040af7:	lea    eax,[edi+0x2]
10040afa:	push   eax
10040afb:	push   ecx
10040afc:	call   0x1004f106
10040b01:	add    esp,0xc
10040b04:	test   eax,eax
10040b06:	je     0x10040b17
10040b08:	add    edi,DWORD PTR [ebx+0x2c]
10040b0b:	add    esi,0x1
10040b0e:	cmp    esi,DWORD PTR [ebx+0x28]
10040b11:	mov    DWORD PTR [esp+0x3c],esi
10040b15:	jl     0x10040af2
10040b17:	mov    esi,DWORD PTR [esp+0x10]
10040b1b:	mov    edx,DWORD PTR [esp+0x3c]
10040b1f:	cmp    edx,DWORD PTR [ebx+0x28]
10040b22:	jge    0x10040b3e
10040b24:	movzx  ecx,BYTE PTR [edi+0x1]
10040b28:	mov    ch,BYTE PTR [edi]
10040b2a:	mov    eax,DWORD PTR [esp+0x14]
10040b2e:	mov    BYTE PTR [eax+0x5],cl
10040b31:	mov    edx,ecx
10040b33:	sar    edx,0x8
10040b36:	mov    BYTE PTR [eax+0x4],dl
10040b39:	jmp    0x1004135f
10040b3e:	mov    eax,DWORD PTR [esp+0x34]
10040b42:	shr    eax,0x3
10040b45:	and    eax,0x1
10040b48:	push   eax
10040b49:	mov    edi,ebx
10040b4b:	mov    ebx,DWORD PTR [esp+0x30]
10040b4f:	push   ebp
10040b50:	push   edi
10040b51:	mov    eax,esi
10040b53:	call   0x1003e0e0
10040b58:	add    esp,0xc
10040b5b:	test   eax,eax
10040b5d:	jle    0x10040b73
10040b5f:	mov    ecx,DWORD PTR [esp+0x14]
10040b63:	mov    edx,eax
10040b65:	sar    edx,0x8
10040b68:	mov    BYTE PTR [ecx+0x4],dl
10040b6b:	mov    BYTE PTR [ecx+0x5],al
10040b6e:	jmp    0x1004135f
10040b73:	cmp    DWORD PTR [esp+0x54],0x0
10040b78:	jne    0x10041aa2
10040b7e:	cmp    BYTE PTR [ebx],0x52
10040b81:	jne    0x10040bd0
10040b83:	mov    eax,0x1
10040b88:	xor    ecx,ecx
10040b8a:	cmp    ebp,eax
10040b8c:	jle    0x10040bb3
10040b8e:	mov    edi,edi
10040b90:	movzx  edx,BYTE PTR [eax+ebx*1]
10040b94:	test   BYTE PTR [edx+0x1006f410],0x4
10040b9b:	je     0x10041ab1
10040ba1:	add    eax,0x1
10040ba4:	cmp    eax,ebp
10040ba6:	lea    ecx,[ecx+ecx*4]
10040ba9:	lea    ecx,[edx+ecx*2-0x30]
10040bad:	jl     0x10040b90
10040baf:	test   ecx,ecx
10040bb1:	jne    0x10040bb8
10040bb3:	mov    ecx,0xffff
10040bb8:	mov    eax,DWORD PTR [esp+0x14]
10040bbc:	mov    edx,ecx
10040bbe:	sar    edx,0x8
10040bc1:	mov    BYTE PTR [eax+0x3],0x65
10040bc5:	mov    BYTE PTR [eax+0x4],dl
10040bc8:	mov    BYTE PTR [eax+0x5],cl
10040bcb:	jmp    0x1004135f
10040bd0:	cmp    ebp,0x6
10040bd3:	jne    0x10040bfd
10040bd5:	push   ebp
10040bd6:	push   0x10074114
10040bdb:	push   ebx
10040bdc:	call   0x1004f106
10040be1:	add    esp,0xc
10040be4:	test   eax,eax
10040be6:	jne    0x10040bfd
10040be8:	mov    eax,DWORD PTR [esp+0x14]
10040bec:	mov    BYTE PTR [eax+0x3],0x66
10040bf0:	mov    DWORD PTR [esp+0x28],0x1
10040bf8:	jmp    0x1004135f
10040bfd:	mov    eax,DWORD PTR [esp+0x1c]
10040c01:	test   eax,eax
10040c03:	jle    0x10041ac0
10040c09:	cmp    eax,DWORD PTR [edi+0x34]
10040c0c:	jg     0x10041ac0
10040c12:	mov    ecx,DWORD PTR [esp+0x14]
10040c16:	mov    edx,eax
10040c18:	sar    edx,0x8
10040c1b:	mov    BYTE PTR [ecx+0x4],dl
10040c1e:	mov    BYTE PTR [ecx+0x5],al
10040c21:	jmp    0x1004135f
10040c26:	mov    DWORD PTR [esp+0x24],0x58
10040c2e:	add    esi,ebx
10040c30:	jmp    0x1004135b
10040c35:	add    esi,ebx
10040c37:	mov    DWORD PTR [esp+0x10],esi
10040c3b:	cmp    BYTE PTR [esi],0x29
10040c3e:	jne    0x10040c56
10040c40:	mov    eax,DWORD PTR [esp+0x14]
10040c44:	mov    BYTE PTR [eax],0x6d
10040c47:	add    eax,ebx
10040c49:	mov    DWORD PTR [esp+0x14],eax
10040c4d:	mov    DWORD PTR [esp+0x2c],ebp
10040c51:	jmp    0x10041903
10040c56:	mov    DWORD PTR [esp+0x24],0x59
10040c5e:	jmp    0x1004135f
10040c63:	mov    cl,BYTE PTR [esi+0x1]
10040c66:	cmp    cl,0x21
10040c69:	je     0x10040d25
10040c6f:	cmp    cl,0x3d
10040c72:	je     0x10040d15
10040c78:	mov    edx,DWORD PTR [edi+0xc]
10040c7b:	movzx  ecx,cl
10040c7e:	test   BYTE PTR [ecx+edx*1],0x10
10040c82:	je     0x10041ad5
10040c88:	mov    ebp,DWORD PTR [edi+0xc]
10040c8b:	sub    al,0x3c
10040c8d:	neg    al
10040c8f:	sbb    eax,eax
10040c91:	add    esi,ebx
10040c93:	mov    DWORD PTR [esp+0x10],esi
10040c97:	movzx  ecx,BYTE PTR [esi]
10040c9a:	and    eax,0xffffffe9
10040c9d:	add    eax,0x3e
10040ca0:	test   BYTE PTR [ecx+ebp*1],0x10
10040ca4:	mov    edx,esi
10040ca6:	mov    DWORD PTR [esp+0x2c],edx
10040caa:	je     0x10040cbf
10040cac:	mov    ecx,ebp
10040cae:	mov    edi,edi
10040cb0:	add    esi,ebx
10040cb2:	mov    DWORD PTR [esp+0x10],esi
10040cb6:	movzx  edi,BYTE PTR [esi]
10040cb9:	test   BYTE PTR [edi+ecx*1],0x10
10040cbd:	jne    0x10040cb0
10040cbf:	mov    edi,esi
10040cc1:	sub    edi,edx
10040cc3:	cmp    DWORD PTR [esp+0x38],0x0
10040cc8:	mov    DWORD PTR [esp+0x28],edi
10040ccc:	je     0x10040e19
10040cd2:	movzx  edx,BYTE PTR [esi]
10040cd5:	cmp    edx,eax
10040cd7:	jne    0x10041b04
10040cdd:	mov    ecx,DWORD PTR [esp+0x18]
10040ce1:	cmp    DWORD PTR [ecx+0x28],0x2710
10040ce8:	jge    0x10041b13
10040cee:	lea    eax,[edi+0x3]
10040cf1:	cmp    eax,DWORD PTR [ecx+0x2c]
10040cf4:	jle    0x10040f6d
10040cfa:	cmp    edi,0x20
10040cfd:	mov    DWORD PTR [ecx+0x2c],eax
10040d00:	jle    0x10040f6d
10040d06:	mov    eax,DWORD PTR [esp+0x20]
10040d0a:	mov    DWORD PTR [eax],0x30
10040d10:	jmp    0x1004087d
10040d15:	mov    DWORD PTR [esp+0x24],0x5a
10040d1d:	add    esi,0x2
10040d20:	jmp    0x1004135b
10040d25:	mov    DWORD PTR [esp+0x24],0x5b
10040d2d:	add    esi,0x2
10040d30:	jmp    0x1004135b
10040d35:	mov    DWORD PTR [esp+0x24],0x5d
10040d3d:	add    esi,ebx
10040d3f:	jmp    0x1004135b
10040d44:	mov    edi,DWORD PTR [esp+0x14]
10040d48:	mov    BYTE PTR [edi],0x53
10040d4b:	mov    esi,DWORD PTR [esp+0x10]
10040d4f:	add    esi,ebx
10040d51:	mov    DWORD PTR [esp+0x10],esi
10040d55:	movzx  ecx,BYTE PTR [esi]
10040d58:	mov    DWORD PTR [esp+0x74],edi
10040d5c:	mov    edx,0x4
10040d61:	add    edi,ebx
10040d63:	xor    eax,eax
10040d65:	test   BYTE PTR [ecx+0x1006f410],dl
10040d6b:	mov    DWORD PTR [esp+0x94],ebx
10040d72:	je     0x10040d8c
10040d74:	add    esi,ebx
10040d76:	lea    eax,[eax+eax*4]
10040d79:	lea    eax,[ecx+eax*2-0x30]
10040d7d:	mov    DWORD PTR [esp+0x10],esi
10040d81:	movzx  ecx,BYTE PTR [esi]
10040d84:	test   BYTE PTR [ecx+0x1006f410],dl
10040d8a:	jne    0x10040d74
10040d8c:	cmp    BYTE PTR [esi],0x29
10040d8f:	jne    0x10041ae6
10040d95:	cmp    eax,0xff
10040d9a:	jg     0x10041af5
10040da0:	mov    BYTE PTR [edi],al
10040da2:	mov    ecx,DWORD PTR [esp+0x10]
10040da6:	mov    eax,DWORD PTR [esp+0x18]
10040daa:	sub    ecx,DWORD PTR [eax+0x18]
10040dad:	add    edi,ebx
10040daf:	add    ecx,ebx
10040db1:	sar    ecx,0x8
10040db4:	mov    BYTE PTR [edi],cl
10040db6:	mov    cl,BYTE PTR [esp+0x10]
10040dba:	sub    cl,BYTE PTR [eax+0x18]
10040dbd:	mov    BYTE PTR [edi+0x2],0x0
10040dc1:	add    cl,bl
10040dc3:	mov    BYTE PTR [edi+0x1],cl
10040dc6:	mov    BYTE PTR [edi+0x3],0x0
10040dca:	add    edi,edx
10040dcc:	mov    DWORD PTR [esp+0x14],edi
10040dd0:	mov    DWORD PTR [esp+0x2c],0x0
10040dd8:	jmp    0x10041903
10040ddd:	add    esi,ebx
10040ddf:	mov    DWORD PTR [esp+0x10],esi
10040de3:	mov    al,BYTE PTR [esi]
10040de5:	cmp    al,0x3d
10040de7:	je     0x10040e04
10040de9:	cmp    al,0x3e
10040deb:	je     0x10040e04
10040ded:	cmp    al,0x3c
10040def:	je     0x10040c88
10040df5:	mov    eax,DWORD PTR [esp+0x20]
10040df9:	mov    DWORD PTR [eax],0x29
10040dff:	jmp    0x1004087d
10040e04:	xor    edx,edx
10040e06:	cmp    al,0x3e
10040e08:	sete   dl
10040e0b:	mov    ebp,0x29
10040e10:	mov    DWORD PTR [esp+0x28],edx
10040e14:	jmp    0x100415e5
10040e19:	mov    eax,DWORD PTR [esp+0x18]
10040e1d:	mov    ebx,DWORD PTR [eax+0x24]
10040e20:	mov    eax,DWORD PTR [eax+0x28]
10040e23:	test   eax,eax
10040e25:	mov    DWORD PTR [esp+0x3c],0x0
10040e2d:	mov    DWORD PTR [esp+0x8c],eax
10040e34:	jle    0x10040f37
10040e3a:	lea    ebx,[ebx+0x0]
10040e40:	cmp    edi,0x4
10040e43:	mov    edx,DWORD PTR [esp+0x2c]
10040e47:	mov    eax,edi
10040e49:	lea    ecx,[ebx+0x2]
10040e4c:	jb     0x10040e64
10040e4e:	mov    edi,edi
10040e50:	mov    ebp,DWORD PTR [edx]
10040e52:	cmp    ebp,DWORD PTR [ecx]
10040e54:	jne    0x10040e6c
10040e56:	sub    eax,0x4
10040e59:	add    ecx,0x4
10040e5c:	add    edx,0x4
10040e5f:	cmp    eax,0x4
10040e62:	jae    0x10040e50
10040e64:	test   eax,eax
10040e66:	je     0x10040ed1
10040e6c:	movzx  edi,BYTE PTR [edx]
10040e6f:	movzx  ebp,BYTE PTR [ecx]
10040e72:	sub    edi,ebp
10040e74:	jne    0x10040ebb
10040e76:	sub    eax,0x1
10040e79:	add    ecx,0x1
10040e7c:	add    edx,0x1
10040e7f:	test   eax,eax
10040e81:	je     0x10040ecd
10040e83:	movzx  edi,BYTE PTR [edx]
10040e86:	movzx  ebp,BYTE PTR [ecx]
10040e89:	sub    edi,ebp
10040e8b:	jne    0x10040ebb
10040e8d:	sub    eax,0x1
10040e90:	add    ecx,0x1
10040e93:	add    edx,0x1
10040e96:	test   eax,eax
10040e98:	je     0x10040ecd
10040e9a:	movzx  edi,BYTE PTR [edx]
10040e9d:	movzx  ebp,BYTE PTR [ecx]
10040ea0:	sub    edi,ebp
10040ea2:	jne    0x10040ebb
10040ea4:	sub    eax,0x1
10040ea7:	add    ecx,0x1
10040eaa:	add    edx,0x1
10040ead:	test   eax,eax
10040eaf:	je     0x10040ecd
10040eb1:	movzx  edi,BYTE PTR [edx]
10040eb4:	movzx  eax,BYTE PTR [ecx]
10040eb7:	sub    edi,eax
10040eb9:	je     0x10040ecd
10040ebb:	test   edi,edi
10040ebd:	mov    edi,DWORD PTR [esp+0x28]
10040ec1:	mov    eax,0x1
10040ec6:	jg     0x10040ed3
10040ec8:	or     eax,0xffffffff
10040ecb:	jmp    0x10040ed3
10040ecd:	mov    edi,DWORD PTR [esp+0x28]
10040ed1:	xor    eax,eax
10040ed3:	test   eax,eax
10040ed5:	jne    0x10040ef6
10040ed7:	cmp    BYTE PTR [ebx+edi*1+0x2],al
10040edb:	jne    0x10040f15
10040edd:	test   DWORD PTR [esp+0x34],0x80000
10040ee5:	jne    0x10040ef8
10040ee7:	mov    ecx,DWORD PTR [esp+0x20]
10040eeb:	mov    DWORD PTR [ecx],0x2b
10040ef1:	jmp    0x1004087d
10040ef6:	jl     0x10040f15
10040ef8:	mov    eax,DWORD PTR [esp+0x3c]
10040efc:	mov    ecx,DWORD PTR [esp+0x18]
10040f00:	add    ebx,DWORD PTR [ecx+0x2c]
10040f03:	add    eax,0x1
10040f06:	cmp    eax,DWORD PTR [ecx+0x28]
10040f09:	mov    DWORD PTR [esp+0x3c],eax
10040f0d:	jl     0x10040e40
10040f13:	jmp    0x10040f37
10040f15:	mov    ecx,DWORD PTR [esp+0x18]
10040f19:	mov    eax,DWORD PTR [ecx+0x2c]
10040f1c:	mov    ecx,DWORD PTR [esp+0x8c]
10040f23:	sub    ecx,DWORD PTR [esp+0x3c]
10040f27:	imul   ecx,eax
10040f2a:	push   ecx
10040f2b:	add    eax,ebx
10040f2d:	push   ebx
10040f2e:	push   eax
10040f2f:	call   0x100456c0
10040f34:	add    esp,0xc
10040f37:	mov    eax,DWORD PTR [esp+0x18]
10040f3b:	mov    edx,DWORD PTR [eax+0x30]
10040f3e:	mov    ecx,DWORD PTR [esp+0x2c]
10040f42:	add    edx,0x1
10040f45:	sar    edx,0x8
10040f48:	mov    BYTE PTR [ebx],dl
10040f4a:	mov    al,BYTE PTR [eax+0x30]
10040f4d:	push   edi
10040f4e:	push   ecx
10040f4f:	lea    edx,[ebx+0x2]
10040f52:	add    al,0x1
10040f54:	push   edx
10040f55:	mov    BYTE PTR [ebx+0x1],al
10040f58:	call   0x10045180
10040f5d:	mov    ecx,DWORD PTR [esp+0x24]
10040f61:	mov    BYTE PTR [ebx+edi*1+0x2],0x0
10040f66:	mov    esi,DWORD PTR [esp+0x1c]
10040f6a:	add    esp,0xc
10040f6d:	mov    edi,DWORD PTR [esp+0x18]
10040f71:	add    esi,0x1
10040f74:	add    DWORD PTR [ecx+0x28],0x1
10040f78:	mov    DWORD PTR [esp+0x10],esi
10040f7c:	add    DWORD PTR [edi+0x30],0x1
10040f80:	mov    ecx,DWORD PTR [edi+0x30]
10040f83:	mov    eax,DWORD PTR [esp+0x14]
10040f87:	sar    ecx,0x8
10040f8a:	mov    BYTE PTR [eax+0x3],cl
10040f8d:	mov    dl,BYTE PTR [edi+0x30]
10040f90:	mov    BYTE PTR [eax+0x4],dl
10040f93:	mov    DWORD PTR [esp+0x28],0x2
10040f9b:	jmp    0x1004135f
10040fa0:	mov    ebp,0x29
10040fa5:	mov    DWORD PTR [esp+0x28],ebx
10040fa9:	jmp    0x100415e5
10040fae:	add    esi,ebx
10040fb0:	mov    DWORD PTR [esp+0x10],esi
10040fb4:	mov    ebp,0x29
10040fb9:	mov    ebx,edi
10040fbb:	jmp    0x1004114b
10040fc0:	test   edx,0x1000
10040fc6:	je     0x10040f7c
10040fc8:	mov    DWORD PTR [esp+0x24],0x5e
10040fd0:	jmp    0x1004135f
10040fd5:	mov    ebx,DWORD PTR [esp+0x20]
10040fd9:	mov    DWORD PTR [esp+0x7c],esi
10040fdd:	mov    esi,DWORD PTR [esp+0x18]
10040fe1:	mov    eax,DWORD PTR [esi+0x30]
10040fe4:	xor    edi,edi
10040fe6:	push   edi
10040fe7:	push   eax
10040fe8:	mov    eax,DWORD PTR [esp+0x3c]
10040fec:	lea    ecx,[esp+0x18]
10040ff0:	push   ebx
10040ff1:	push   ecx
10040ff2:	call   0x1003db70
10040ff7:	add    esp,0x10
10040ffa:	cmp    DWORD PTR [ebx],edi
10040ffc:	jne    0x10040879
10041002:	cmp    eax,edi
10041004:	jge    0x1003f2de
1004100a:	mov    ecx,eax
1004100c:	neg    ecx
1004100e:	cmp    ecx,0x1a
10041011:	jne    0x10041038
10041013:	mov    esi,DWORD PTR [esp+0x10]
10041017:	cmp    BYTE PTR [esi+0x1],0x5c
1004101b:	jne    0x1004102b
1004101d:	cmp    BYTE PTR [esi+0x2],0x45
10041021:	jne    0x1004102b
10041023:	add    esi,0x2
10041026:	jmp    0x10041907
1004102b:	mov    DWORD PTR [esp+0x50],0x1
10041033:	jmp    0x10041907
10041038:	cmp    ecx,0x19
1004103b:	je     0x10041903
10041041:	mov    edx,DWORD PTR [esp+0x30]
10041045:	cmp    edx,0xfffffffe
10041048:	jne    0x1004105b
1004104a:	cmp    ecx,0x5
1004104d:	jle    0x1004105b
1004104f:	cmp    ecx,0x17
10041052:	jge    0x1004105b
10041054:	or     edx,0xffffffff
10041057:	mov    DWORD PTR [esp+0x30],edx
1004105b:	cmp    ecx,0x1b
1004105e:	mov    DWORD PTR [esp+0x5c],edx
10041062:	mov    edx,DWORD PTR [esp+0x4c]
10041066:	mov    DWORD PTR [esp+0x68],edx
1004106a:	jne    0x10041598
10041070:	mov    eax,DWORD PTR [esi+0x20]
10041073:	mov    esi,DWORD PTR [esp+0x10]
10041077:	add    esi,0x1
1004107a:	mov    DWORD PTR [esp+0x10],esi
1004107e:	mov    cl,BYTE PTR [esi]
10041080:	sub    cl,0x3c
10041083:	neg    cl
10041085:	lea    edx,[esi+0x1]
10041088:	mov    DWORD PTR [esp+0x64],eax
1004108c:	mov    al,BYTE PTR [edx]
1004108e:	mov    DWORD PTR [esp+0x28],edi
10041092:	mov    DWORD PTR [esp+0x58],edi
10041096:	sbb    ecx,ecx
10041098:	and    ecx,0xffffffe9
1004109b:	add    ecx,0x3e
1004109e:	cmp    al,0x2b
100410a0:	mov    ebp,ecx
100410a2:	je     0x10041105
100410a4:	cmp    al,0x2d
100410a6:	je     0x10041105
100410a8:	mov    ecx,edx
100410aa:	mov    al,BYTE PTR [ecx]
100410ac:	test   al,al
100410ae:	mov    edi,0x1
100410b3:	je     0x100410da
100410b5:	movzx  eax,al
100410b8:	cmp    eax,ebp
100410ba:	je     0x100410da
100410bc:	mov    ebx,DWORD PTR [esp+0x18]
100410c0:	mov    ebx,DWORD PTR [ebx+0xc]
100410c3:	mov    al,BYTE PTR [eax+ebx*1]
100410c6:	test   al,0x4
100410c8:	jne    0x100410cc
100410ca:	xor    edi,edi
100410cc:	test   al,0x10
100410ce:	je     0x100410da
100410d0:	mov    al,BYTE PTR [ecx+0x1]
100410d3:	add    ecx,0x1
100410d6:	test   al,al
100410d8:	jne    0x100410b5
100410da:	movzx  eax,BYTE PTR [ecx]
100410dd:	cmp    eax,ebp
100410df:	mov    ebx,DWORD PTR [esp+0x18]
100410e3:	je     0x100410f4
100410e5:	mov    ecx,DWORD PTR [esp+0x20]
100410e9:	mov    DWORD PTR [ecx],0x39
100410ef:	jmp    0x10041907
100410f4:	test   edi,edi
100410f6:	jne    0x10041145
100410f8:	mov    DWORD PTR [esp+0x28],0x1
10041100:	jmp    0x100415e1
10041105:	movzx  edi,BYTE PTR [esi+0x2]
10041109:	lea    eax,[esi+0x2]
1004110c:	mov    cl,0x4
1004110e:	test   BYTE PTR [edi+0x1006f410],cl
10041114:	je     0x1004112f
10041116:	jmp    0x10041120
10041118:	lea    esp,[esp+0x0]
1004111f:	nop
10041120:	movzx  edi,BYTE PTR [eax+0x1]
10041124:	add    eax,0x1
10041127:	test   BYTE PTR [edi+0x1006f410],cl
1004112d:	jne    0x10041120
1004112f:	movzx  eax,BYTE PTR [eax]
10041132:	cmp    eax,ebp
10041134:	je     0x10041141
10041136:	mov    DWORD PTR [ebx],0x39
1004113c:	jmp    0x10041907
10041141:	mov    ebx,DWORD PTR [esp+0x18]
10041145:	mov    esi,edx
10041147:	mov    DWORD PTR [esp+0x10],esi
1004114b:	mov    al,BYTE PTR [esi]
1004114d:	movzx  edx,al
10041150:	cmp    edx,0x2b
10041153:	jne    0x10041177
10041155:	add    esi,0x1
10041158:	mov    DWORD PTR [esp+0x10],esi
1004115c:	movzx  ecx,BYTE PTR [esi]
1004115f:	test   BYTE PTR [ecx+0x1006f410],0x4
10041166:	jne    0x10041194
10041168:	mov    edx,DWORD PTR [esp+0x20]
1004116c:	mov    DWORD PTR [edx],0x3f
10041172:	jmp    0x1004087d
10041177:	cmp    edx,0x2d
1004117a:	jne    0x10041194
1004117c:	movzx  ecx,BYTE PTR [esi+0x1]
10041180:	test   BYTE PTR [ecx+0x1006f410],0x4
10041187:	je     0x1004121d
1004118d:	add    esi,0x1
10041190:	mov    DWORD PTR [esp+0x10],esi
10041194:	movzx  eax,BYTE PTR [esi]
10041197:	test   BYTE PTR [eax+0x1006f410],0x4
1004119e:	mov    DWORD PTR [esp+0x1c],0x0
100411a6:	je     0x100411d2
100411a8:	jmp    0x100411b0
100411aa:	lea    ebx,[ebx+0x0]
100411b0:	mov    ecx,DWORD PTR [esp+0x1c]
100411b4:	lea    ecx,[ecx+ecx*4]
100411b7:	add    esi,0x1
100411ba:	lea    eax,[eax+ecx*2-0x30]
100411be:	mov    DWORD PTR [esp+0x1c],eax
100411c2:	mov    DWORD PTR [esp+0x10],esi
100411c6:	movzx  eax,BYTE PTR [esi]
100411c9:	test   BYTE PTR [eax+0x1006f410],0x4
100411d0:	jne    0x100411b0
100411d2:	movzx  ecx,BYTE PTR [esi]
100411d5:	cmp    ecx,ebp
100411d7:	jne    0x10041b64
100411dd:	cmp    edx,0x2d
100411e0:	jne    0x10041573
100411e6:	mov    eax,DWORD PTR [esp+0x1c]
100411ea:	test   eax,eax
100411ec:	je     0x10041b73
100411f2:	mov    edx,DWORD PTR [esp+0x18]
100411f6:	mov    ecx,DWORD PTR [edx+0x30]
100411f9:	sub    ecx,eax
100411fb:	add    ecx,0x1
100411fe:	mov    eax,ecx
10041200:	test   eax,eax
10041202:	mov    DWORD PTR [esp+0x1c],eax
10041206:	jg     0x100416d2
1004120c:	mov    eax,DWORD PTR [esp+0x20]
10041210:	mov    DWORD PTR [eax],0xf
10041216:	jmp    0x1004087d
1004121b:	mov    ebx,edi
1004121d:	xor    edi,edi
1004121f:	xor    edx,edx
10041221:	cmp    al,0x29
10041223:	mov    DWORD PTR [esp+0x3c],edi
10041227:	mov    DWORD PTR [esp+0x54],edx
1004122b:	lea    ecx,[esp+0x54]
1004122f:	je     0x1004129c
10041231:	mov    edx,0x10
10041236:	cmp    al,0x3a
10041238:	je     0x10041294
1004123a:	movzx  eax,al
1004123d:	add    esi,0x1
10041240:	sub    eax,0x2d
10041243:	cmp    eax,0x4b
10041246:	mov    DWORD PTR [esp+0x10],esi
1004124a:	ja     0x10041b22
10041250:	movzx  eax,BYTE PTR [eax+0x10041dac]
10041257:	jmp    DWORD PTR [eax*4+0x10041d88]
1004125e:	lea    ecx,[esp+0x3c]
10041262:	jmp    0x1004128e
10041264:	or     DWORD PTR [ecx],0x80000
1004126a:	or     DWORD PTR [ebx+0x44],edx
1004126d:	jmp    0x1004128e
1004126f:	or     DWORD PTR [ecx],0x1
10041272:	jmp    0x1004128e
10041274:	or     DWORD PTR [ecx],0x2
10041277:	jmp    0x1004128e
10041279:	or     DWORD PTR [ecx],0x4
1004127c:	jmp    0x1004128e
1004127e:	or     DWORD PTR [ecx],0x8
10041281:	jmp    0x1004128e
10041283:	or     DWORD PTR [ecx],0x200
10041289:	jmp    0x1004128e
1004128b:	or     DWORD PTR [ecx],0x40
1004128e:	mov    al,BYTE PTR [esi]
10041290:	cmp    al,0x29
10041292:	jne    0x10041236
10041294:	mov    edx,DWORD PTR [esp+0x54]
10041298:	mov    edi,DWORD PTR [esp+0x3c]
1004129c:	mov    ebp,DWORD PTR [esp+0x34]
100412a0:	or     edx,ebp
100412a2:	not    edi
100412a4:	and    edx,edi
100412a6:	cmp    BYTE PTR [esi],0x29
100412a9:	mov    eax,edx
100412ab:	mov    DWORD PTR [esp+0x60],eax
100412af:	jne    0x10041350
100412b5:	mov    edx,DWORD PTR [ebx+0x14]
100412b8:	mov    ecx,DWORD PTR [esp+0x14]
100412bc:	add    edx,0x3
100412bf:	cmp    ecx,edx
100412c1:	jne    0x100412ed
100412c3:	mov    edx,DWORD PTR [esp+0x38]
100412c7:	test   edx,edx
100412c9:	je     0x100412d0
100412cb:	cmp    DWORD PTR [edx],0x6
100412ce:	jne    0x100412ed
100412d0:	mov    ecx,DWORD PTR [esp+0xa8]
100412d7:	mov    DWORD PTR [ebx+0x40],eax
100412da:	mov    DWORD PTR [esp+0x34],eax
100412de:	mov    DWORD PTR [ecx],eax
100412e0:	mov    DWORD PTR [esp+0x2c],0x0
100412e8:	jmp    0x10041907
100412ed:	mov    edx,eax
100412ef:	xor    edx,ebp
100412f1:	test   dl,0x7
100412f4:	je     0x1004130e
100412f6:	mov    BYTE PTR [ecx],0x19
100412f9:	mov    dl,al
100412fb:	add    ecx,0x1
100412fe:	and    dl,0x7
10041301:	mov    BYTE PTR [ecx],dl
10041303:	mov    esi,DWORD PTR [esp+0x10]
10041307:	add    ecx,0x1
1004130a:	mov    DWORD PTR [esp+0x14],ecx
1004130e:	mov    ecx,eax
10041310:	shr    ecx,0x9
10041313:	and    ecx,0x1
10041316:	mov    DWORD PTR [esp+0xa4],ecx
1004131d:	xor    ecx,0x1
10041320:	mov    DWORD PTR [esp+0xa0],ecx
10041327:	mov    ecx,eax
10041329:	and    ecx,0x1
1004132c:	shl    ecx,0x8
1004132f:	mov    DWORD PTR [esp+0x84],ecx
10041336:	mov    ecx,DWORD PTR [esp+0xa8]
1004133d:	mov    DWORD PTR [esp+0x34],eax
10041341:	mov    DWORD PTR [ecx],eax
10041343:	mov    DWORD PTR [esp+0x2c],0x0
1004134b:	jmp    0x10041907
10041350:	add    esi,0x1
10041353:	mov    DWORD PTR [esp+0x24],0x5e
1004135b:	mov    DWORD PTR [esp+0x10],esi
1004135f:	mov    eax,DWORD PTR [esp+0x24]
10041363:	mov    ebx,DWORD PTR [esp+0x14]
10041367:	mov    ecx,DWORD PTR [esp+0x18]
1004136b:	xor    edx,edx
1004136d:	cmp    eax,0x5d
10041370:	setl   dl
10041373:	mov    BYTE PTR [ebx],al
10041375:	mov    edi,DWORD PTR [ecx+0x48]
10041378:	mov    DWORD PTR [esp+0x44],ebx
1004137c:	mov    DWORD PTR [esp+0x6c],0x0
10041384:	sub    edx,0x1
10041387:	and    edx,ebx
10041389:	cmp    eax,0x5a
1004138c:	mov    DWORD PTR [esp+0x2c],edx
10041390:	je     0x1004139b
10041392:	cmp    eax,0x5b
10041395:	je     0x1004139b
10041397:	xor    eax,eax
10041399:	jmp    0x100413a0
1004139b:	mov    eax,0x1
100413a0:	mov    esi,DWORD PTR [esp+0x38]
100413a4:	mov    ebp,DWORD PTR [esp+0x20]
100413a8:	mov    edx,esi
100413aa:	neg    edx
100413ac:	sbb    edx,edx
100413ae:	lea    ecx,[esp+0x6c]
100413b2:	and    edx,ecx
100413b4:	mov    ecx,DWORD PTR [esp+0x98]
100413bb:	push   edx
100413bc:	mov    edx,DWORD PTR [esp+0x1c]
100413c0:	push   edx
100413c1:	push   ecx
100413c2:	lea    edx,[esp+0x84]
100413c9:	push   edx
100413ca:	mov    edx,DWORD PTR [esp+0x38]
100413ce:	lea    ecx,[esp+0xa0]
100413d5:	push   ecx
100413d6:	mov    ecx,DWORD PTR [esp+0x6c]
100413da:	push   edx
100413db:	push   ecx
100413dc:	mov    ecx,DWORD PTR [esp+0x50]
100413e0:	push   eax
100413e1:	push   ebp
100413e2:	lea    edx,[esp+0x34]
100413e6:	push   edx
100413e7:	mov    edx,DWORD PTR [esp+0x88]
100413ee:	lea    eax,[esp+0x6c]
100413f2:	push   eax
100413f3:	and    ecx,0x7
100413f6:	push   ecx
100413f7:	push   edx
100413f8:	call   0x10041e00
100413fd:	add    esp,0x34
10041400:	test   eax,eax
10041402:	je     0x10040879
10041408:	cmp    DWORD PTR [esp+0x24],0x60
1004140d:	jne    0x10041440
1004140f:	test   esi,esi
10041411:	jne    0x10041440
10041413:	mov    eax,ebx
10041415:	xor    ecx,ecx
10041417:	xor    edx,edx
10041419:	mov    dh,BYTE PTR [eax+0x1]
1004141c:	add    ecx,0x1
1004141f:	mov    dl,BYTE PTR [eax+0x2]
10041422:	add    eax,edx
10041424:	cmp    BYTE PTR [eax],0x55
10041427:	jne    0x10041417
10041429:	cmp    BYTE PTR [ebx+0x3],0x66
1004142d:	jne    0x100414ab
1004142f:	cmp    ecx,0x1
10041432:	jg     0x10041b34
10041438:	mov    DWORD PTR [esp+0x24],0x66
10041440:	mov    eax,DWORD PTR [esp+0x90]
10041447:	mov    ecx,DWORD PTR [esp+0x78]
1004144b:	mov    esi,DWORD PTR [esp+0x10]
1004144f:	cmp    BYTE PTR [esi],0x29
10041452:	jne    0x10041b4c
10041458:	mov    edx,DWORD PTR [esp+0x38]
1004145c:	test   edx,edx
1004145e:	je     0x100414cf
10041460:	mov    eax,DWORD PTR [edx]
10041462:	mov    ecx,DWORD PTR [esp+0x6c]
10041466:	mov    edx,0x7fffffeb
1004146b:	sub    edx,eax
1004146d:	lea    edi,[ecx-0x6]
10041470:	cmp    edx,edi
10041472:	jl     0x10041b58
10041478:	lea    eax,[eax+ecx*1-0x6]
1004147c:	mov    ecx,DWORD PTR [esp+0x38]
10041480:	mov    DWORD PTR [ecx],eax
10041482:	mov    BYTE PTR [ebx],0x5e
10041485:	add    ebx,0x1
10041488:	mov    BYTE PTR [ebx],0x0
1004148b:	mov    BYTE PTR [ebx+0x1],0x3
1004148f:	add    ebx,0x2
10041492:	mov    BYTE PTR [ebx],0x55
10041495:	add    ebx,0x1
10041498:	mov    BYTE PTR [ebx],0x0
1004149b:	mov    BYTE PTR [ebx+0x1],0x3
1004149f:	add    ebx,0x2
100414a2:	mov    DWORD PTR [esp+0x14],ebx
100414a6:	jmp    0x10041903
100414ab:	cmp    ecx,0x2
100414ae:	jg     0x10041b40
100414b4:	cmp    ecx,0x1
100414b7:	jne    0x10041440
100414b9:	or     ecx,0xffffffff
100414bc:	or     eax,0xffffffff
100414bf:	mov    DWORD PTR [esp+0x78],ecx
100414c3:	mov    DWORD PTR [esp+0x90],eax
100414ca:	jmp    0x1004144b
100414cf:	mov    edx,DWORD PTR [esp+0x44]
100414d3:	mov    DWORD PTR [esp+0x14],edx
100414d7:	mov    edx,DWORD PTR [esp+0x24]
100414db:	cmp    edx,0x66
100414de:	je     0x10041907
100414e4:	cmp    edx,0x5d
100414e7:	mov    ebx,DWORD PTR [esp+0x4c]
100414eb:	mov    ebp,DWORD PTR [esp+0x30]
100414ef:	mov    DWORD PTR [esp+0x68],ebx
100414f3:	mov    DWORD PTR [esp+0x5c],ebp
100414f7:	mov    DWORD PTR [esp+0x88],0x0
10041502:	jl     0x10041559
10041504:	cmp    ebp,0xfffffffe
10041507:	jne    0x10041538
10041509:	test   eax,eax
1004150b:	jl     0x10041526
1004150d:	mov    DWORD PTR [esp+0x30],eax
10041511:	mov    DWORD PTR [esp+0x88],0x1
1004151c:	mov    DWORD PTR [esp+0x5c],0xffffffff
10041524:	jmp    0x10041548
10041526:	mov    DWORD PTR [esp+0x30],0xffffffff
1004152e:	mov    DWORD PTR [esp+0x5c],0xffffffff
10041536:	jmp    0x10041548
10041538:	test   eax,eax
1004153a:	jl     0x10041548
1004153c:	test   ecx,ecx
1004153e:	jge    0x10041550
10041540:	or     eax,edi
10041542:	mov    ecx,eax
10041544:	mov    DWORD PTR [esp+0x78],ecx
10041548:	test   ecx,ecx
1004154a:	jl     0x10041907
10041550:	mov    DWORD PTR [esp+0x4c],ecx
10041554:	jmp    0x10041907
10041559:	cmp    edx,0x58
1004155c:	jne    0x10041907
10041562:	test   ecx,ecx
10041564:	jl     0x10041907
1004156a:	mov    DWORD PTR [esp+0x4c],ecx
1004156e:	jmp    0x10041907
10041573:	cmp    edx,0x2b
10041576:	jne    0x100416d2
1004157c:	mov    eax,DWORD PTR [esp+0x1c]
10041580:	test   eax,eax
10041582:	je     0x10041a84
10041588:	mov    edx,DWORD PTR [esp+0x18]
1004158c:	add    eax,DWORD PTR [edx+0x30]
1004158f:	mov    DWORD PTR [esp+0x1c],eax
10041593:	jmp    0x100416d2
10041598:	cmp    ecx,0x1c
1004159b:	mov    esi,DWORD PTR [esp+0x10]
1004159f:	jne    0x10041805
100415a5:	mov    dl,BYTE PTR [esi+0x1]
100415a8:	cmp    dl,0x3c
100415ab:	je     0x100415bb
100415ad:	cmp    dl,0x27
100415b0:	je     0x100415bb
100415b2:	cmp    dl,0x7b
100415b5:	jne    0x10041805
100415bb:	add    esi,0x1
100415be:	mov    DWORD PTR [esp+0x10],esi
100415c2:	mov    al,BYTE PTR [esi]
100415c4:	cmp    al,0x3c
100415c6:	mov    DWORD PTR [esp+0x28],edi
100415ca:	jne    0x100415d3
100415cc:	mov    ebp,0x3e
100415d1:	jmp    0x100415e1
100415d3:	sub    al,0x27
100415d5:	neg    al
100415d7:	sbb    eax,eax
100415d9:	and    eax,0x56
100415dc:	add    eax,0x27
100415df:	mov    ebp,eax
100415e1:	mov    edi,DWORD PTR [esp+0x18]
100415e5:	mov    edx,DWORD PTR [edi+0xc]
100415e8:	add    esi,0x1
100415eb:	mov    DWORD PTR [esp+0x10],esi
100415ef:	movzx  eax,BYTE PTR [esi]
100415f2:	test   BYTE PTR [eax+edx*1],0x10
100415f6:	mov    ecx,esi
100415f8:	mov    DWORD PTR [esp+0x2c],ecx
100415fc:	je     0x10041610
100415fe:	mov    eax,edx
10041600:	add    esi,0x1
10041603:	mov    DWORD PTR [esp+0x10],esi
10041607:	movzx  edx,BYTE PTR [esi]
1004160a:	test   BYTE PTR [edx+eax*1],0x10
1004160e:	jne    0x10041600
10041610:	mov    ebx,esi
10041612:	sub    ebx,ecx
10041614:	cmp    DWORD PTR [esp+0x38],0x0
10041619:	je     0x10041648
1004161b:	test   ebx,ebx
1004161d:	je     0x10041b82
10041623:	movzx  eax,BYTE PTR [esi]
10041626:	cmp    eax,ebp
10041628:	jne    0x10041b91
1004162e:	cmp    ebx,0x20
10041631:	jg     0x10041ba0
10041637:	mov    edi,DWORD PTR [esp+0x18]
1004163b:	mov    DWORD PTR [esp+0x1c],0x0
10041643:	jmp    0x100416c3
10041648:	mov    eax,DWORD PTR [esp+0x18]
1004164c:	mov    edi,DWORD PTR [eax+0x24]
1004164f:	xor    ebp,ebp
10041651:	cmp    DWORD PTR [eax+0x28],ebp
10041654:	jle    0x10041683
10041656:	mov    esi,eax
10041658:	mov    edx,DWORD PTR [esp+0x2c]
1004165c:	push   ebx
1004165d:	lea    ecx,[edi+0x2]
10041660:	push   ecx
10041661:	push   edx
10041662:	call   0x1004f106
10041667:	add    esp,0xc
1004166a:	test   eax,eax
1004166c:	jne    0x10041674
1004166e:	cmp    BYTE PTR [edi+ebx*1+0x2],al
10041672:	je     0x1004167f
10041674:	add    edi,DWORD PTR [esi+0x2c]
10041677:	add    ebp,0x1
1004167a:	cmp    ebp,DWORD PTR [esi+0x28]
1004167d:	jl     0x10041658
1004167f:	mov    esi,DWORD PTR [esp+0x10]
10041683:	mov    eax,DWORD PTR [esp+0x18]
10041687:	cmp    ebp,DWORD PTR [eax+0x28]
1004168a:	jge    0x1004169a
1004168c:	movzx  ecx,BYTE PTR [edi+0x1]
10041690:	mov    ch,BYTE PTR [edi]
10041692:	mov    edi,eax
10041694:	mov    DWORD PTR [esp+0x1c],ecx
10041698:	jmp    0x100416c3
1004169a:	mov    edx,DWORD PTR [esp+0x34]
1004169e:	shr    edx,0x3
100416a1:	and    edx,0x1
100416a4:	push   edx
100416a5:	mov    edi,eax
100416a7:	push   ebx
100416a8:	mov    ebx,DWORD PTR [esp+0x34]
100416ac:	push   edi
100416ad:	mov    eax,esi
100416af:	call   0x1003e0e0
100416b4:	add    esp,0xc
100416b7:	test   eax,eax
100416b9:	mov    DWORD PTR [esp+0x1c],eax
100416bd:	jle    0x10041baf
100416c3:	cmp    DWORD PTR [esp+0x28],0x0
100416c8:	mov    eax,DWORD PTR [esp+0x14]
100416cc:	je     0x1004181b
100416d2:	cmp    DWORD PTR [esp+0x38],0x0
100416d7:	mov    edi,DWORD PTR [esp+0x14]
100416db:	mov    ebp,DWORD PTR [esp+0x18]
100416df:	mov    ebx,DWORD PTR [ebp+0x14]
100416e2:	mov    DWORD PTR [esp+0x2c],edi
100416e6:	jne    0x10041762
100416ec:	cmp    DWORD PTR [esp+0x1c],0x0
100416f1:	mov    BYTE PTR [edi],0x0
100416f4:	je     0x10041704
100416f6:	mov    esi,DWORD PTR [esp+0x1c]
100416fa:	mov    eax,DWORD PTR [ebp+0x14]
100416fd:	call   0x1003e5e0
10041702:	mov    ebx,eax
10041704:	test   ebx,ebx
10041706:	jne    0x100417be
1004170c:	mov    eax,DWORD PTR [esp+0x34]
10041710:	mov    ecx,DWORD PTR [esp+0x1c]
10041714:	shr    eax,0x3
10041717:	and    eax,0x1
1004171a:	push   eax
1004171b:	mov    eax,DWORD PTR [esp+0x14]
1004171f:	push   ecx
10041720:	push   ebp
10041721:	call   0x1003e0e0
10041726:	add    esp,0xc
10041729:	test   eax,eax
1004172b:	jl     0x10041aa2
10041731:	mov    eax,DWORD PTR [ebp+0x14]
10041734:	mov    edx,DWORD PTR [esp+0x1c]
10041738:	mov    ecx,DWORD PTR [esp+0x14]
1004173c:	mov    edi,DWORD PTR [esp+0x14]
10041740:	lea    ebx,[eax+edx*1]
10041743:	mov    edx,ecx
10041745:	sub    edx,eax
10041747:	mov    eax,DWORD PTR [ebp+0x20]
1004174a:	add    edx,0x4
1004174d:	sar    edx,0x8
10041750:	mov    BYTE PTR [eax],dl
10041752:	sub    cl,BYTE PTR [ebp+0x14]
10041755:	mov    edx,DWORD PTR [ebp+0x20]
10041758:	add    cl,0x4
1004175b:	mov    BYTE PTR [edx+0x1],cl
1004175e:	add    DWORD PTR [ebp+0x20],0x2
10041762:	mov    BYTE PTR [edi],0x5d
10041765:	mov    BYTE PTR [edi+0x1],0x0
10041769:	add    edi,0x3
1004176c:	mov    al,0x6
1004176e:	mov    BYTE PTR [edi-0x1],al
10041771:	mov    BYTE PTR [edi],0x52
10041774:	mov    ecx,ebx
10041776:	sub    ecx,DWORD PTR [ebp+0x14]
10041779:	add    edi,0x3
1004177c:	sar    ecx,0x8
1004177f:	mov    BYTE PTR [edi-0x2],cl
10041782:	sub    bl,BYTE PTR [ebp+0x14]
10041785:	add    edi,0x3
10041788:	cmp    DWORD PTR [esp+0x30],0xfffffffe
1004178d:	mov    BYTE PTR [edi-0x4],bl
10041790:	mov    BYTE PTR [edi-0x3],0x55
10041794:	mov    BYTE PTR [edi-0x2],0x0
10041798:	mov    BYTE PTR [edi-0x1],al
1004179b:	mov    esi,DWORD PTR [esp+0x10]
1004179f:	mov    DWORD PTR [esp+0x14],edi
100417a3:	mov    DWORD PTR [esp+0x6c],0x9
100417ab:	jne    0x10041907
100417b1:	mov    DWORD PTR [esp+0x30],0xffffffff
100417b9:	jmp    0x10041907
100417be:	xor    eax,eax
100417c0:	mov    ah,BYTE PTR [ebx+0x1]
100417c3:	mov    al,BYTE PTR [ebx+0x2]
100417c6:	test   eax,eax
100417c8:	jne    0x10041762
100417ca:	mov    esi,DWORD PTR [esp+0x98]
100417d1:	test   esi,esi
100417d3:	je     0x100417f6
100417d5:	mov    eax,DWORD PTR [esi+0x4]
100417d8:	cmp    eax,ebx
100417da:	jb     0x100417f6
100417dc:	push   0x0
100417de:	push   edi
100417df:	push   eax
100417e0:	call   0x1003e6f0
100417e5:	add    esp,0xc
100417e8:	test   eax,eax
100417ea:	je     0x10041762
100417f0:	mov    esi,DWORD PTR [esi]
100417f2:	test   esi,esi
100417f4:	jne    0x100417d5
100417f6:	mov    ecx,DWORD PTR [esp+0x20]
100417fa:	mov    DWORD PTR [ecx],0x28
10041800:	jmp    0x10040879
10041805:	cmp    ecx,0x1d
10041808:	jl     0x10041869
1004180a:	mov    edi,DWORD PTR [esp+0x18]
1004180e:	mov    ecx,0xffffffe3
10041813:	sub    ecx,eax
10041815:	mov    eax,DWORD PTR [esp+0x14]
10041819:	jmp    0x1004181f
1004181b:	mov    ecx,DWORD PTR [esp+0x1c]
1004181f:	cmp    DWORD PTR [esp+0x30],0xfffffffe
10041824:	jne    0x1004182e
10041826:	mov    DWORD PTR [esp+0x30],0xffffffff
1004182e:	mov    BYTE PTR [eax],0x51
10041831:	mov    DWORD PTR [esp+0x2c],eax
10041835:	add    eax,0x1
10041838:	mov    edx,ecx
1004183a:	sar    edx,0x8
1004183d:	mov    BYTE PTR [eax],dl
1004183f:	mov    BYTE PTR [eax+0x1],cl
10041842:	add    eax,0x2
10041845:	cmp    ecx,0x20
10041848:	mov    DWORD PTR [esp+0x14],eax
1004184c:	mov    eax,0x1
10041851:	jge    0x10041855
10041853:	shl    eax,cl
10041855:	or     DWORD PTR [edi+0x3c],eax
10041858:	cmp    ecx,DWORD PTR [edi+0x38]
1004185b:	jle    0x10041903
10041861:	mov    DWORD PTR [edi+0x38],ecx
10041864:	jmp    0x10041903
10041869:	cmp    ecx,0x16
1004186c:	je     0x10041bbe
10041872:	cmp    ecx,0xf
10041875:	je     0x10041bbe
1004187b:	cmp    ecx,0x10
1004187e:	je     0x10041bbe
10041884:	cmp    ecx,0x5
10041887:	jle    0x100418a3
10041889:	cmp    ecx,0x17
1004188c:	jge    0x100418a3
1004188e:	mov    ecx,DWORD PTR [esp+0x14]
10041892:	neg    al
10041894:	mov    DWORD PTR [esp+0x2c],ecx
10041898:	mov    BYTE PTR [ecx],al
1004189a:	add    ecx,0x1
1004189d:	mov    DWORD PTR [esp+0x14],ecx
100418a1:	jmp    0x10041903
100418a3:	mov    ecx,DWORD PTR [esp+0x14]
100418a7:	neg    al
100418a9:	mov    BYTE PTR [ecx],al
100418ab:	add    ecx,0x1
100418ae:	mov    DWORD PTR [esp+0x2c],edi
100418b2:	mov    DWORD PTR [esp+0x14],ecx
100418b6:	jmp    0x10041903
100418b8:	mov    edx,DWORD PTR [esp+0x18]
100418bc:	mov    esi,DWORD PTR [esp+0x30]
100418c0:	cmp    esi,0xfffffffe
100418c3:	jne    0x100418e5
100418c5:	mov    ecx,DWORD PTR [esp+0x4c]
100418c9:	movzx  eax,al
100418cc:	or     eax,DWORD PTR [esp+0x84]
100418d3:	mov    DWORD PTR [esp+0x5c],0xffffffff
100418db:	mov    DWORD PTR [esp+0x68],ecx
100418df:	mov    DWORD PTR [esp+0x30],eax
100418e3:	jmp    0x10041903
100418e5:	movzx  ecx,BYTE PTR [ecx-0x1]
100418e9:	or     ecx,DWORD PTR [edx+0x48]
100418ec:	mov    eax,DWORD PTR [esp+0x4c]
100418f0:	or     ecx,DWORD PTR [esp+0x84]
100418f7:	mov    DWORD PTR [esp+0x5c],esi
100418fb:	mov    DWORD PTR [esp+0x68],eax
100418ff:	mov    DWORD PTR [esp+0x4c],ecx
10041903:	mov    esi,DWORD PTR [esp+0x10]
10041907:	mov    edi,DWORD PTR [esp+0x74]
1004190b:	mov    ebx,DWORD PTR [esp+0xb8]
10041912:	mov    ebp,DWORD PTR [esp+0x2c]
10041916:	mov    edx,DWORD PTR [esp+0x14]
1004191a:	mov    ecx,DWORD PTR [esp+0x80]
10041921:	add    esi,0x1
10041924:	jmp    0x1003f17a
10041929:	mov    edx,DWORD PTR [esp+0x20]
1004192d:	mov    DWORD PTR [edx],0x34
10041933:	jmp    0x1004087d
10041938:	mov    eax,DWORD PTR [esp+0x20]
1004193c:	mov    DWORD PTR [eax],0x14
10041942:	jmp    0x1004087d
10041947:	mov    ecx,DWORD PTR [esp+0x20]
1004194b:	mov    DWORD PTR [ecx],0x34
10041951:	jmp    0x1004087d
10041956:	mov    edx,DWORD PTR [esp+0x30]
1004195a:	mov    eax,DWORD PTR [esp+0xb4]
10041961:	mov    ecx,DWORD PTR [esp+0x4c]
10041965:	mov    DWORD PTR [eax],edx
10041967:	mov    edx,DWORD PTR [esp+0xac]
1004196e:	mov    eax,DWORD PTR [esp+0xb0]
10041975:	mov    DWORD PTR [edx],ecx
10041977:	mov    ecx,DWORD PTR [esp+0x14]
1004197b:	mov    edx,DWORD PTR [esp+0x9c]
10041982:	mov    DWORD PTR [eax],ecx
10041984:	mov    DWORD PTR [edx],esi
10041986:	mov    edx,DWORD PTR [esp+0x38]
1004198a:	test   edx,edx
1004198c:	je     0x100419ac
1004198e:	mov    eax,DWORD PTR [edx]
10041990:	mov    edi,DWORD PTR [esp+0x80]
10041997:	mov    ebx,ecx
10041999:	mov    ebp,0x7fffffeb
1004199e:	sub    ebx,edi
100419a0:	sub    ebp,eax
100419a2:	cmp    ebp,ebx
100419a4:	jl     0x10041938
100419a6:	sub    eax,edi
100419a8:	add    eax,ecx
100419aa:	mov    DWORD PTR [edx],eax
100419ac:	mov    eax,0x1
100419b1:	jmp    0x10040888
100419b6:	mov    dl,BYTE PTR [esi+0x1]
100419b9:	mov    eax,DWORD PTR [esp+0x20]
100419bd:	sub    dl,0x3a
100419c0:	neg    dl
100419c2:	sbb    edx,edx
100419c4:	and    edx,0x12
100419c7:	add    edx,0xd
100419ca:	mov    DWORD PTR [eax],edx
100419cc:	jmp    0x1004087d
100419d1:	mov    ecx,DWORD PTR [esp+0x20]
100419d5:	mov    DWORD PTR [ecx],0x1f
100419db:	jmp    0x1004087d
100419e0:	mov    edx,DWORD PTR [esp+0x20]
100419e4:	mov    DWORD PTR [edx],0x1e
100419ea:	jmp    0x10040879
100419ef:	mov    DWORD PTR [esi],0x7
100419f5:	jmp    0x10040879
100419fa:	mov    eax,DWORD PTR [esp+0x20]
100419fe:	mov    DWORD PTR [eax],0x8
10041a04:	jmp    0x1004087d
10041a09:	mov    ecx,DWORD PTR [esp+0x20]
10041a0d:	mov    DWORD PTR [ecx],0x6
10041a13:	jmp    0x1004087d
10041a18:	mov    edx,DWORD PTR [esp+0x20]
10041a1c:	mov    DWORD PTR [edx],0x9
10041a22:	jmp    0x1004087d
10041a27:	mov    ecx,DWORD PTR [esp+0x20]
10041a2b:	mov    DWORD PTR [ecx],0x37
10041a31:	jmp    0x1004087d
10041a36:	mov    edx,DWORD PTR [esp+0x20]
10041a3a:	mov    DWORD PTR [edx],0x14
10041a40:	jmp    0x1004087d
10041a45:	mov    ecx,DWORD PTR [esp+0x20]
10041a49:	mov    DWORD PTR [ecx],0x3b
10041a4f:	jmp    0x1004087d
10041a54:	mov    edx,DWORD PTR [esp+0x20]
10041a58:	mov    DWORD PTR [edx],0x3c
10041a5e:	jmp    0x1004087d
10041a63:	mov    edx,DWORD PTR [esp+0x20]
10041a67:	mov    DWORD PTR [edx],0x1c
10041a6d:	jmp    0x1004087d
10041a72:	mov    eax,DWORD PTR [esp+0x20]
10041a76:	sub    esi,0x1
10041a79:	mov    DWORD PTR [eax],0x1a
10041a7f:	jmp    0x1004087d
10041a84:	mov    ecx,DWORD PTR [esp+0x20]
10041a88:	mov    DWORD PTR [ecx],0x3a
10041a8e:	jmp    0x1004087d
10041a93:	mov    edx,DWORD PTR [esp+0x20]
10041a97:	mov    DWORD PTR [edx],0xf
10041a9d:	jmp    0x1004087d
10041aa2:	mov    eax,DWORD PTR [esp+0x20]
10041aa6:	mov    DWORD PTR [eax],0xf
10041aac:	jmp    0x10040879
10041ab1:	mov    ecx,DWORD PTR [esp+0x20]
10041ab5:	mov    DWORD PTR [ecx],0xf
10041abb:	jmp    0x10040879
10041ac0:	mov    edx,DWORD PTR [esp+0x20]
10041ac4:	neg    eax
10041ac6:	sbb    eax,eax
10041ac8:	and    eax,0xffffffec
10041acb:	add    eax,0x23
10041ace:	mov    DWORD PTR [edx],eax
10041ad0:	jmp    0x10040879
10041ad5:	mov    eax,DWORD PTR [esp+0x20]
10041ad9:	add    esi,ebx
10041adb:	mov    DWORD PTR [eax],0x18
10041ae1:	jmp    0x1004087d
10041ae6:	mov    ecx,DWORD PTR [esp+0x20]
10041aea:	mov    DWORD PTR [ecx],0x27
10041af0:	jmp    0x1004087d
10041af5:	mov    edx,DWORD PTR [esp+0x20]
10041af9:	mov    DWORD PTR [edx],0x26
10041aff:	jmp    0x1004087d
10041b04:	mov    ecx,DWORD PTR [esp+0x20]
10041b08:	mov    DWORD PTR [ecx],0x2a
10041b0e:	jmp    0x1004087d
10041b13:	mov    edx,DWORD PTR [esp+0x20]
10041b17:	mov    DWORD PTR [edx],0x31
10041b1d:	jmp    0x1004087d
10041b22:	mov    eax,DWORD PTR [esp+0x20]
10041b26:	mov    DWORD PTR [eax],0xc
10041b2c:	sub    esi,0x1
10041b2f:	jmp    0x1004087d
10041b34:	mov    DWORD PTR [ebp+0x0],0x36
10041b3b:	jmp    0x10040879
10041b40:	mov    DWORD PTR [ebp+0x0],0x1b
10041b47:	jmp    0x10040879
10041b4c:	mov    DWORD PTR [ebp+0x0],0xe
10041b53:	jmp    0x1004087d
10041b58:	mov    DWORD PTR [ebp+0x0],0x14
10041b5f:	jmp    0x1004087d
10041b64:	mov    ecx,DWORD PTR [esp+0x20]
10041b68:	mov    DWORD PTR [ecx],0x1d
10041b6e:	jmp    0x1004087d
10041b73:	mov    edx,DWORD PTR [esp+0x20]
10041b77:	mov    DWORD PTR [edx],0x3a
10041b7d:	jmp    0x1004087d
10041b82:	mov    edx,DWORD PTR [esp+0x20]
10041b86:	mov    DWORD PTR [edx],0x3e
10041b8c:	jmp    0x1004087d
10041b91:	mov    eax,DWORD PTR [esp+0x20]
10041b95:	mov    DWORD PTR [eax],0x2a
10041b9b:	jmp    0x1004087d
10041ba0:	mov    ecx,DWORD PTR [esp+0x20]
10041ba4:	mov    DWORD PTR [ecx],0x30
10041baa:	jmp    0x1004087d
10041baf:	mov    edx,DWORD PTR [esp+0x20]
10041bb3:	mov    DWORD PTR [edx],0xf
10041bb9:	jmp    0x10040879
10041bbe:	mov    DWORD PTR [ebx],0x2d
10041bc4:	jmp    0x1004087d
10041bc9:	lea    ecx,[ecx+0x0]
10041bcc:	push   esi
10041bcd:	sbb    DWORD PTR [eax+edx*1],eax
10041bd0:	cmc    
10041bd1:	hlt    
10041bd2:	add    edx,DWORD PTR [eax]
10041bd4:	mov    esi,0x73100407
10041bd9:	inc    BYTE PTR [ebx]
10041bdb:	adc    BYTE PTR [ebp-0x2],bh
10041bde:	add    edx,DWORD PTR [eax]
10041be0:	adc    ch,dh
10041be2:	add    edx,DWORD PTR [eax]
10041be4:	mov    esi,?
10041be6:	add    edx,DWORD PTR [eax]
10041be8:	outs   dx,DWORD PTR ds:[esi]
10041be9:	cmc    
10041bea:	add    edx,DWORD PTR [eax]
10041bec:	aad    0xf
10041bee:	add    al,0x10
10041bf0:	dec    edi
10041bf1:	cmc    
10041bf2:	add    edx,DWORD PTR [eax]
10041bf4:	(bad)  
10041bf5:	hlt    
10041bf6:	add    edx,DWORD PTR [eax]
10041bf8:	cmp    bh,dh
10041bfa:	add    edx,DWORD PTR [eax]
10041bfc:	fdivr  st(2),st
10041bfe:	add    edx,DWORD PTR [eax]
10041c00:	add    BYTE PTR [esp+ecx*1],cl
10041c03:	or     al,0xc
10041c05:	or     al,0xc
10041c07:	or     al,0xc
10041c09:	or     al,0xc
10041c0b:	or     al,0xc
10041c0d:	or     al,0xc
10041c0f:	or     al,0xc
10041c11:	or     al,0xc
10041c13:	or     al,0xc
10041c15:	or     al,0xc
10041c17:	or     al,0xc
10041c19:	or     al,0xc
10041c1b:	or     al,0xc
10041c1d:	or     al,0xc
10041c1f:	or     al,0xc
10041c21:	or     al,0xc
10041c23:	or     al,0x1
10041c25:	or     al,0xc
10041c27:	or     al,0x2
10041c29:	add    BYTE PTR [ebx],al
10041c2b:	add    al,0xc
10041c2d:	or     al,0x5
10041c2f:	or     al,0xc
10041c31:	or     al,0xc
10041c33:	or     al,0xc
10041c35:	or     al,0xc
10041c37:	or     al,0xc
10041c39:	or     al,0xc
10041c3b:	or     al,0xc
10041c3d:	or     al,0xc
10041c3f:	push   es
10041c40:	or     al,0xc
10041c42:	or     al,0xc
10041c44:	or     al,0xc
10041c46:	or     al,0xc
10041c48:	or     al,0xc
10041c4a:	or     al,0xc
10041c4c:	or     al,0xc
10041c4e:	or     al,0xc
10041c50:	or     al,0xc
10041c52:	or     al,0xc
10041c54:	or     al,0xc
10041c56:	or     al,0xc
10041c58:	or     al,0xc
10041c5a:	or     al,0x7
10041c5c:	or     BYTE PTR [ecx],cl
10041c5e:	or     cl,BYTE PTR [esp+ecx*1]
10041c61:	or     al,0xc
10041c63:	or     al,0xc
10041c65:	or     al,0xc
10041c67:	or     al,0xc
10041c69:	or     al,0xc
10041c6b:	or     al,0xc
10041c6d:	or     al,0xc
10041c6f:	or     al,0xc
10041c71:	or     al,0xc
10041c73:	or     al,0xc
10041c75:	or     al,0xc
10041c77:	or     al,0xc
10041c79:	or     al,0xc
10041c7b:	or     eax,DWORD PTR [eax]
10041c7d:	lea    ecx,[ecx+0x0]
10041c80:	jge    0x10041c7b
10041c82:	add    edx,DWORD PTR [eax]
10041c84:	lock clc 
10041c86:	add    edx,DWORD PTR [eax]
10041c88:	xor    edx,edi
10041c8a:	add    edx,DWORD PTR [eax]
10041c8c:	std    
10041c8d:	stc    
10041c8e:	add    edx,DWORD PTR [eax]
10041c90:	retf   
10041c91:	stc    
10041c92:	add    edx,DWORD PTR [eax]
10041c94:	stos   BYTE PTR es:[edi],al
10041c95:	stc    
10041c96:	add    edx,DWORD PTR [eax]
10041c98:	sysret 
10041c9a:	add    al,0x10
10041c9c:	pop    ss
10041c9d:	pop    es
10041c9e:	add    al,0x10
10041ca0:	pop    ds
10041ca1:	pop    es
10041ca2:	add    al,0x10
10041ca4:	daa    
10041ca5:	pop    es
10041ca6:	add    al,0x10
10041ca8:	inc    esi
10041ca9:	pop    es
10041caa:	add    al,0x10
10041cac:	dec    ebx
10041cad:	pop    es
10041cae:	add    al,0x10
10041cb0:	push   eax
10041cb1:	pop    es
10041cb2:	add    al,0x10
10041cb4:	push   ebp
10041cb5:	pop    es
10041cb6:	add    al,0x10
10041cb8:	das    
10041cb9:	pop    es
10041cba:	add    al,0x10
10041cbc:	aaa    
10041cbd:	pop    es
10041cbe:	add    al,0x10
10041cc0:	cmp    al,0x7
10041cc2:	add    al,0x10
10041cc4:	inc    ecx
10041cc5:	pop    es
10041cc6:	add    al,0x10
10041cc8:	pop    edx
10041cc9:	pop    es
10041cca:	add    al,0x10
10041ccc:	add    BYTE PTR [ecx+eax*1],cl
10041ccf:	or     al,0x2
10041cd1:	or     al,0x3
10041cd3:	or     al,0xc
10041cd5:	or     al,0xc
10041cd7:	or     al,0xc
10041cd9:	add    al,0xc
10041cdb:	add    eax,0x70c060c
10041ce0:	or     al,0xc
10041ce2:	or     al,0xc
10041ce4:	or     al,0xc
10041ce6:	or     BYTE PTR [ecx+ecx*1],cl
10041ce9:	or     al,0xa
10041ceb:	or     al,0xb
10041ced:	lea    ecx,[ecx+0x0]
10041cf0:	xor    eax,0xfd10040c
10041cf5:	or     BYTE PTR [eax+edx*1],al
10041cf8:	mov    al,ds:0x8810040f
10041cfd:	or     al,0x4
10041cff:	adc    BYTE PTR [ecx+ecx*1+0x4],al
10041d03:	adc    BYTE PTR [edi+ecx*1+0x93d1004],dh
10041d0a:	add    al,0x10
10041d0c:	arpl   WORD PTR [esp+eax*1],cx
10041d0f:	adc    BYTE PTR [esi],ah
10041d11:	or     al,0x4
10041d13:	adc    BYTE PTR ds:0x4410040d,dh
10041d19:	or     eax,0xddd1004
10041d1e:	add    al,0x10
10041d20:	scas   al,BYTE PTR es:[edi]
10041d21:	(bad)  
10041d23:	adc    BYTE PTR [ecx],bh
10041d25:	or     DWORD PTR [eax+edx*1],eax
10041d28:	sbb    edx,DWORD PTR [edx]
10041d2a:	add    al,0x10
10041d2c:	add    BYTE PTR [esi],cl
10041d2e:	add    DWORD PTR [esi],ecx
10041d30:	push   cs
10041d31:	add    al,BYTE PTR [ebx]
10041d33:	add    al,0xe
10041d35:	push   cs
10041d36:	add    eax,0xe0e050e
10041d3b:	add    eax,0x5050505
10041d40:	add    eax,0x5050505
10041d45:	push   es
10041d46:	push   cs
10041d47:	pop    es
10041d48:	or     BYTE PTR [ecx],cl
10041d4a:	push   cs
10041d4b:	push   cs
10041d4c:	push   cs
10041d4d:	push   cs
10041d4e:	or     cl,BYTE PTR [esi]
10041d50:	push   cs
10041d51:	push   cs
10041d52:	push   cs
10041d53:	push   cs
10041d54:	push   cs
10041d55:	push   cs
10041d56:	push   cs
10041d57:	push   cs
10041d58:	push   cs
10041d59:	push   cs
10041d5a:	push   cs
10041d5b:	or     ecx,DWORD PTR [esi]
10041d5d:	or     al,0xe
10041d5f:	push   cs
10041d60:	push   cs
10041d61:	push   cs
10041d62:	push   cs
10041d63:	push   cs
10041d64:	push   cs
10041d65:	push   cs
10041d66:	push   cs
10041d67:	push   cs
10041d68:	push   cs
10041d69:	push   cs
10041d6a:	push   cs
10041d6b:	push   cs
10041d6c:	push   cs
10041d6d:	push   cs
10041d6e:	push   cs
10041d6f:	push   cs
10041d70:	push   cs
10041d71:	push   cs
10041d72:	push   cs
10041d73:	push   cs
10041d74:	push   cs
10041d75:	push   cs
10041d76:	push   cs
10041d77:	push   cs
10041d78:	push   cs
10041d79:	push   cs
10041d7a:	push   cs
10041d7b:	push   cs
10041d7c:	push   cs
10041d7d:	push   cs
10041d7e:	push   cs
10041d7f:	push   cs
10041d80:	push   cs
10041d81:	push   cs
10041d82:	push   cs
10041d83:	push   cs
10041d84:	push   cs
10041d85:	push   cs
10041d86:	push   cs
10041d87:	or     eax,0x1004125e
10041d8c:	adc    al,BYTE PTR fs:[eax+edx*1]
10041d90:	adc    DWORD PTR [edx],0x4
10041d93:	adc    BYTE PTR [ebx+0x6f100412],cl
10041d99:	adc    al,BYTE PTR [eax+edx*1]
10041d9c:	je     0x10041db0
10041d9e:	add    al,0x10
10041da0:	jns    0x10041db4
10041da2:	add    al,0x10
10041da4:	jle    0x10041db8
10041da6:	add    al,0x10
10041da8:	and    bl,BYTE PTR [ebx]
10041daa:	add    al,0x10
10041dac:	add    BYTE PTR [eax],cl
10041dae:	or     BYTE PTR [eax],cl
10041db0:	or     BYTE PTR [eax],cl
10041db2:	or     BYTE PTR [eax],cl
10041db4:	or     BYTE PTR [eax],cl
10041db6:	or     BYTE PTR [eax],cl
10041db8:	or     BYTE PTR [eax],cl
10041dba:	or     BYTE PTR [eax],cl
10041dbc:	or     BYTE PTR [eax],cl
10041dbe:	or     BYTE PTR [eax],cl
10041dc0:	or     BYTE PTR [eax],cl
10041dc2:	or     BYTE PTR [eax],cl
10041dc4:	or     BYTE PTR [eax],cl
10041dc6:	or     BYTE PTR [eax],cl
10041dc8:	or     BYTE PTR [ecx],al
10041dca:	or     BYTE PTR [eax],cl
10041dcc:	or     BYTE PTR [eax],cl
10041dce:	or     BYTE PTR [eax],cl
10041dd0:	or     BYTE PTR [eax],cl
10041dd2:	or     BYTE PTR [eax],cl
10041dd4:	add    cl,BYTE PTR [eax]
10041dd6:	or     BYTE PTR [ebx],al
10041dd8:	or     BYTE PTR [eax],cl
10041dda:	or     BYTE PTR [eax],cl
10041ddc:	or     BYTE PTR [eax],cl
10041dde:	or     BYTE PTR [eax],cl
10041de0:	or     BYTE PTR [eax],cl
10041de2:	or     BYTE PTR [eax],cl
10041de4:	or     BYTE PTR [eax],cl
10041de6:	or     BYTE PTR [eax],cl
10041de8:	add    al,0x8
10041dea:	or     BYTE PTR [eax],cl
10041dec:	add    eax,0x8080808
10041df1:	or     BYTE PTR [esi],al
10041df3:	or     BYTE PTR [eax],cl
10041df5:	or     BYTE PTR [eax],cl
10041df7:	pop    es
10041df8:	int3   
10041df9:	int3   
10041dfa:	int3   
10041dfb:	int3   
10041dfc:	int3   
10041dfd:	int3   
10041dfe:	int3   
10041dff:	int3   
10041e00:	push   ebp
10041e01:	mov    ebp,esp
10041e03:	and    esp,0xfffffff8
10041e06:	sub    esp,0x3c
10041e09:	mov    eax,DWORD PTR [ebp+0x14]
10041e0c:	mov    ecx,DWORD PTR [eax]
10041e0e:	mov    eax,DWORD PTR [ebp+0x30]
10041e11:	mov    edx,DWORD PTR [ebp+0x10]
10041e14:	mov    DWORD PTR [esp+0x34],eax
10041e18:	mov    eax,0xfffffffe
10041e1d:	push   ebx
10041e1e:	mov    ebx,DWORD PTR [edx]
10041e20:	mov    DWORD PTR [esp+0xc],eax
10041e24:	mov    DWORD PTR [esp+0x20],eax
10041e28:	mov    eax,DWORD PTR [ebp+0x24]
10041e2b:	push   esi
10041e2c:	mov    esi,DWORD PTR [ebp+0x38]
10041e2f:	mov    DWORD PTR [esp+0x18],ecx
10041e33:	lea    ecx,[eax+0x6]
10041e36:	mov    DWORD PTR [esp+0x40],ebx
10041e3a:	mov    DWORD PTR [esp+0xc],ecx
10041e3e:	mov    BYTE PTR [ebx+0x1],0x0
10041e42:	push   edi
10041e43:	mov    edi,DWORD PTR [ebp+0x34]
10041e46:	mov    BYTE PTR [ebx+0x2],0x0
10041e4a:	neg    esi
10041e4c:	mov    DWORD PTR [esp+0x24],ebx
10041e50:	mov    DWORD PTR [esp+0x3c],ebx
10041e54:	lea    ebx,[ebx+eax*1+0x3]
10041e58:	mov    eax,DWORD PTR [edi+0x30]
10041e5b:	sbb    esi,esi
10041e5d:	lea    edx,[esp+0x10]
10041e61:	mov    DWORD PTR [esp+0x34],0x0
10041e69:	mov    DWORD PTR [esp+0x2c],eax
10041e6d:	mov    DWORD PTR [esp+0x38],eax
10041e71:	and    esi,edx
10041e73:	cmp    DWORD PTR [ebp+0x20],0x0
10041e77:	mov    DWORD PTR [esp+0x18],ebx
10041e7b:	je     0x10041e84
10041e7d:	mov    eax,DWORD PTR [esp+0x38]
10041e81:	mov    DWORD PTR [edi+0x30],eax
10041e84:	mov    eax,DWORD PTR [ebp+0x8]
10041e87:	mov    ecx,eax
10041e89:	and    ecx,0x7
10041e8c:	cmp    ecx,DWORD PTR [ebp+0xc]
10041e8f:	je     0x10041ea7
10041e91:	mov    BYTE PTR [ebx],0x19
10041e94:	add    ebx,0x1
10041e97:	and    al,0x7
10041e99:	mov    BYTE PTR [ebx],al
10041e9b:	add    ebx,0x1
10041e9e:	add    DWORD PTR [esp+0x10],0x2
10041ea3:	mov    DWORD PTR [esp+0x18],ebx
10041ea7:	cmp    DWORD PTR [ebp+0x1c],0x0
10041eab:	je     0x10041eca
10041ead:	mov    BYTE PTR [ebx],0x5c
10041eb0:	add    ebx,0x1
10041eb3:	mov    BYTE PTR [ebx],0x0
10041eb6:	mov    BYTE PTR [ebx+0x1],0x0
10041eba:	mov    DWORD PTR [esp+0x34],ebx
10041ebe:	add    ebx,0x2
10041ec1:	add    DWORD PTR [esp+0x10],0x3
10041ec6:	mov    DWORD PTR [esp+0x18],ebx
10041eca:	push   esi
10041ecb:	push   edi
10041ecc:	lea    edx,[esp+0x48]
10041ed0:	push   edx
10041ed1:	lea    eax,[esp+0x2c]
10041ed5:	push   eax
10041ed6:	lea    ecx,[esp+0x40]
10041eda:	push   ecx
10041edb:	mov    ecx,DWORD PTR [ebp+0x18]
10041ede:	lea    edx,[esp+0x30]
10041ee2:	push   edx
10041ee3:	lea    eax,[ebp+0x8]
10041ee6:	push   eax
10041ee7:	lea    edx,[esp+0x34]
10041eeb:	call   0x1003f070
10041ef0:	add    esp,0x1c
10041ef3:	test   eax,eax
10041ef5:	je     0x10042015
10041efb:	mov    eax,DWORD PTR [edi+0x30]
10041efe:	cmp    eax,DWORD PTR [esp+0x2c]
10041f02:	jle    0x10041f08
10041f04:	mov    DWORD PTR [esp+0x2c],eax
10041f08:	cmp    DWORD PTR [ebp+0x38],0x0
10041f0c:	mov    ebx,DWORD PTR [esp+0x18]
10041f10:	mov    ecx,DWORD PTR [esp+0x24]
10041f14:	jne    0x10041fb4
10041f1a:	cmp    BYTE PTR [ecx],0x54
10041f1d:	mov    edx,DWORD PTR [esp+0x30]
10041f21:	je     0x10041f31
10041f23:	mov    eax,DWORD PTR [esp+0x20]
10041f27:	mov    DWORD PTR [esp+0x28],edx
10041f2b:	mov    DWORD PTR [esp+0x14],eax
10041f2f:	jmp    0x10041f84
10041f31:	mov    eax,DWORD PTR [esp+0x28]
10041f35:	test   eax,eax
10041f37:	jl     0x10041f50
10041f39:	cmp    eax,edx
10041f3b:	je     0x10041f64
10041f3d:	cmp    DWORD PTR [esp+0x14],0x0
10041f42:	jge    0x10041f48
10041f44:	mov    DWORD PTR [esp+0x14],eax
10041f48:	mov    DWORD PTR [esp+0x28],0xffffffff
10041f50:	test   edx,edx
10041f52:	jl     0x10041f64
10041f54:	mov    eax,DWORD PTR [esp+0x20]
10041f58:	test   eax,eax
10041f5a:	jge    0x10041f68
10041f5c:	mov    eax,edx
10041f5e:	mov    DWORD PTR [esp+0x20],eax
10041f62:	jmp    0x10041f68
10041f64:	mov    eax,DWORD PTR [esp+0x20]
10041f68:	mov    edx,eax
10041f6a:	xor    edx,DWORD PTR [esp+0x14]
10041f6e:	test   edx,0xfffffdff
10041f74:	je     0x10041f80
10041f76:	mov    DWORD PTR [esp+0x14],0xffffffff
10041f7e:	jmp    0x10041f84
10041f80:	or     DWORD PTR [esp+0x14],eax
10041f84:	cmp    DWORD PTR [ebp+0x1c],0x0
10041f88:	je     0x10041fb4
10041f8a:	mov    eax,DWORD PTR [ebp+0x8]
10041f8d:	push   eax
10041f8e:	push   ecx
10041f8f:	mov    BYTE PTR [ebx],0x0
10041f92:	call   0x1003e3d0
10041f97:	add    esp,0x8
10041f9a:	test   eax,eax
10041f9c:	jl     0x10042027
10041fa2:	mov    edi,DWORD PTR [esp+0x34]
10041fa6:	mov    ecx,eax
10041fa8:	sar    ecx,0x8
10041fab:	mov    BYTE PTR [edi],cl
10041fad:	mov    ecx,DWORD PTR [esp+0x24]
10041fb1:	mov    BYTE PTR [edi+0x1],al
10041fb4:	mov    edi,DWORD PTR [esp+0x1c]
10041fb8:	cmp    BYTE PTR [edi],0x7c
10041fbb:	jne    0x1004204b
10041fc1:	cmp    DWORD PTR [ebp+0x38],0x0
10041fc5:	je     0x10041fe7
10041fc7:	mov    edx,DWORD PTR [ebp+0x10]
10041fca:	add    DWORD PTR [esp+0x10],0x3
10041fcf:	mov    eax,DWORD PTR [edx]
10041fd1:	mov    ecx,DWORD PTR [ebp+0x24]
10041fd4:	add    edi,0x1
10041fd7:	mov    DWORD PTR [esp+0x1c],edi
10041fdb:	mov    edi,DWORD PTR [ebp+0x34]
10041fde:	lea    ebx,[eax+ecx*1+0x3]
10041fe2:	jmp    0x10041e73
10041fe7:	mov    edx,ebx
10041fe9:	sub    edx,ecx
10041feb:	mov    BYTE PTR [ebx],0x54
10041fee:	mov    al,bl
10041ff0:	sar    edx,0x8
10041ff3:	mov    BYTE PTR [ebx+0x1],dl
10041ff6:	sub    al,cl
10041ff8:	mov    BYTE PTR [ebx+0x2],al
10041ffb:	mov    DWORD PTR [esp+0x24],ebx
10041fff:	mov    DWORD PTR [esp+0x44],ebx
10042003:	add    ebx,0x3
10042006:	add    edi,0x1
10042009:	mov    DWORD PTR [esp+0x1c],edi
1004200d:	mov    edi,DWORD PTR [ebp+0x34]
10042010:	jmp    0x10041e73
10042015:	mov    ecx,DWORD PTR [esp+0x1c]
10042019:	mov    edx,DWORD PTR [ebp+0x14]
1004201c:	mov    DWORD PTR [edx],ecx
1004201e:	xor    eax,eax
10042020:	pop    edi
10042021:	pop    esi
10042022:	pop    ebx
10042023:	mov    esp,ebp
10042025:	pop    ebp
10042026:	ret    
10042027:	mov    ecx,DWORD PTR [ebp+0x18]
1004202a:	mov    edx,DWORD PTR [esp+0x1c]
1004202e:	sub    eax,0xfffffffe
10042031:	neg    eax
10042033:	sbb    eax,eax
10042035:	and    eax,0xfffffff5
10042038:	add    eax,0x24
1004203b:	mov    DWORD PTR [ecx],eax
1004203d:	mov    eax,DWORD PTR [ebp+0x14]
10042040:	mov    DWORD PTR [eax],edx
10042042:	xor    eax,eax
10042044:	pop    edi
10042045:	pop    esi
10042046:	pop    ebx
10042047:	mov    esp,ebp
10042049:	pop    ebp
1004204a:	ret    
1004204b:	mov    esi,DWORD PTR [ebp+0x38]
1004204e:	test   esi,esi
10042050:	jne    0x10042076
10042052:	mov    eax,ebx
10042054:	sub    eax,ecx
10042056:	xor    edx,edx
10042058:	mov    dh,BYTE PTR [ecx+0x1]
1004205b:	mov    dl,BYTE PTR [ecx+0x2]
1004205e:	mov    BYTE PTR [ecx+0x2],al
10042061:	mov    esi,edx
10042063:	mov    edx,eax
10042065:	sar    edx,0x8
10042068:	mov    BYTE PTR [ecx+0x1],dl
1004206b:	sub    ecx,esi
1004206d:	test   esi,esi
1004206f:	mov    eax,esi
10042071:	jg     0x10042056
10042073:	mov    esi,DWORD PTR [ebp+0x38]
10042076:	mov    eax,DWORD PTR [esp+0x3c]
1004207a:	mov    ecx,ebx
1004207c:	sub    ecx,eax
1004207e:	mov    dl,bl
10042080:	sub    dl,al
10042082:	mov    eax,DWORD PTR [ebp+0x8]
10042085:	sar    ecx,0x8
10042088:	mov    BYTE PTR [ebx],0x55
1004208b:	mov    BYTE PTR [ebx+0x1],cl
1004208e:	mov    ecx,DWORD PTR [ebp+0xc]
10042091:	mov    BYTE PTR [ebx+0x2],dl
10042094:	and    eax,0x7
10042097:	add    ebx,0x3
1004209a:	cmp    eax,ecx
1004209c:	je     0x100420b7
1004209e:	cmp    BYTE PTR [edi],0x29
100420a1:	jne    0x100420b7
100420a3:	mov    BYTE PTR [ebx],0x19
100420a6:	add    ebx,0x1
100420a9:	mov    BYTE PTR [ebx],cl
100420ab:	mov    ecx,DWORD PTR [esp+0x10]
100420af:	add    ebx,0x1
100420b2:	add    ecx,0x2
100420b5:	jmp    0x100420bb
100420b7:	mov    ecx,DWORD PTR [esp+0x10]
100420bb:	test   esi,esi
100420bd:	mov    eax,DWORD PTR [esp+0x2c]
100420c1:	mov    edx,DWORD PTR [ebp+0x34]
100420c4:	mov    DWORD PTR [edx+0x30],eax
100420c7:	mov    eax,DWORD PTR [ebp+0x10]
100420ca:	mov    edx,DWORD PTR [ebp+0x14]
100420cd:	mov    DWORD PTR [eax],ebx
100420cf:	mov    eax,DWORD PTR [ebp+0x28]
100420d2:	mov    DWORD PTR [edx],edi
100420d4:	mov    edx,DWORD PTR [esp+0x28]
100420d8:	mov    DWORD PTR [eax],edx
100420da:	mov    eax,DWORD PTR [ebp+0x2c]
100420dd:	mov    edx,DWORD PTR [esp+0x14]
100420e1:	mov    DWORD PTR [eax],edx
100420e3:	je     0x10042108
100420e5:	mov    eax,DWORD PTR [esi]
100420e7:	mov    edx,0x7fffffeb
100420ec:	sub    edx,eax
100420ee:	cmp    edx,ecx
100420f0:	jge    0x10042104
100420f2:	mov    eax,DWORD PTR [ebp+0x18]
100420f5:	mov    DWORD PTR [eax],0x14
100420fb:	xor    eax,eax
100420fd:	pop    edi
100420fe:	pop    esi
100420ff:	pop    ebx
10042100:	mov    esp,ebp
10042102:	pop    ebp
10042103:	ret    
10042104:	add    eax,ecx
10042106:	mov    DWORD PTR [esi],eax
10042108:	pop    edi
10042109:	pop    esi
1004210a:	mov    eax,0x1
1004210f:	pop    ebx
10042110:	mov    esp,ebp
10042112:	pop    ebp
10042113:	ret    
10042114:	int3   
10042115:	int3   
10042116:	int3   
10042117:	int3   
10042118:	int3   
10042119:	int3   
1004211a:	int3   
1004211b:	int3   
1004211c:	int3   
1004211d:	int3   
1004211e:	int3   
1004211f:	int3   
10042120:	push   ebx
10042121:	push   ebp
10042122:	mov    ebp,DWORD PTR [esp+0xc]
10042126:	push   esi
10042127:	push   edi
10042128:	mov    edi,DWORD PTR [esp+0x18]
1004212c:	lea    esp,[esp+0x0]
10042130:	movzx  eax,BYTE PTR [ebp+0x0]
10042134:	movzx  eax,BYTE PTR [eax+0x1006e420]
1004213b:	add    eax,ebp
1004213d:	xor    ebx,ebx
1004213f:	mov    esi,0x2
10042144:	call   0x1003e2d0
10042149:	movzx  ecx,BYTE PTR [eax]
1004214c:	cmp    ecx,0x5e
1004214f:	je     0x100421ba
10042151:	cmp    ecx,0x5f
10042154:	jne    0x10042170
10042156:	xor    ecx,ecx
10042158:	mov    ch,BYTE PTR [eax+0x3]
1004215b:	mov    edx,0x1
10042160:	mov    cl,BYTE PTR [eax+0x4]
10042163:	cmp    ecx,0x20
10042166:	jge    0x1004216a
10042168:	shl    edx,cl
1004216a:	or     edx,DWORD PTR [esp+0x1c]
1004216e:	jmp    0x100421be
10042170:	cmp    ecx,0x58
10042173:	je     0x100421ba
10042175:	cmp    ecx,0x5d
10042178:	je     0x100421ba
1004217a:	cmp    ecx,0x60
1004217d:	je     0x100421ba
1004217f:	cmp    ecx,0x39
10042182:	je     0x100421a8
10042184:	cmp    ecx,0x3a
10042187:	je     0x100421a8
10042189:	cmp    ecx,0x42
1004218c:	je     0x100421a8
1004218e:	cmp    ecx,0x1
10042191:	je     0x100421d2
10042193:	cmp    ecx,esi
10042195:	je     0x100421d2
10042197:	test   BYTE PTR [edi],0x2
1004219a:	jne    0x100421a1
1004219c:	cmp    ecx,0x1a
1004219f:	je     0x100421d2
100421a1:	pop    edi
100421a2:	pop    esi
100421a3:	pop    ebp
100421a4:	xor    eax,eax
100421a6:	pop    ebx
100421a7:	ret    
100421a8:	cmp    BYTE PTR [eax+0x1],0xd
100421ac:	jne    0x100421a1
100421ae:	mov    edx,DWORD PTR [esp+0x20]
100421b2:	test   DWORD PTR [esp+0x1c],edx
100421b6:	jne    0x100421a1
100421b8:	jmp    0x100421d2
100421ba:	mov    edx,DWORD PTR [esp+0x1c]
100421be:	mov    ecx,DWORD PTR [esp+0x20]
100421c2:	push   ecx
100421c3:	push   edx
100421c4:	push   edi
100421c5:	push   eax
100421c6:	call   0x10042120
100421cb:	add    esp,0x10
100421ce:	test   eax,eax
100421d0:	je     0x100421a1
100421d2:	xor    eax,eax
100421d4:	mov    ah,BYTE PTR [ebp+0x1]
100421d7:	mov    al,BYTE PTR [ebp+0x2]
100421da:	add    ebp,eax
100421dc:	cmp    BYTE PTR [ebp+0x0],0x54
100421e0:	je     0x10042130
100421e6:	pop    edi
100421e7:	pop    esi
100421e8:	pop    ebp
100421e9:	mov    eax,0x1
100421ee:	pop    ebx
100421ef:	ret    
100421f0:	push   ebp
100421f1:	mov    ebp,DWORD PTR [esp+0xc]
100421f5:	push   esi
100421f6:	mov    esi,DWORD PTR [esp+0xc]
100421fa:	push   edi
100421fb:	mov    edi,DWORD PTR [esp+0x18]
100421ff:	nop
10042200:	movzx  eax,BYTE PTR [esi]
10042203:	movzx  eax,BYTE PTR [eax+0x1006e420]
1004220a:	movzx  edx,BYTE PTR [eax+esi*1]
1004220e:	add    eax,esi
10042210:	mov    ecx,edx
10042212:	sub    ecx,0x4
10042215:	cmp    ecx,0x62
10042218:	ja     0x10042249
1004221a:	lea    ebx,[ebx+0x0]
10042220:	movzx  ecx,BYTE PTR [ecx+0x100422e0]
10042227:	jmp    DWORD PTR [ecx*4+0x100422d0]
1004222e:	add    eax,0x2
10042231:	jmp    0x1004223c
10042233:	movzx  edx,BYTE PTR [edx+0x1006e420]
1004223a:	add    eax,edx
1004223c:	movzx  edx,BYTE PTR [eax]
1004223f:	mov    ecx,edx
10042241:	sub    ecx,0x4
10042244:	cmp    ecx,0x62
10042247:	jbe    0x10042220
10042249:	movzx  ecx,BYTE PTR [eax]
1004224c:	cmp    ecx,0x5e
1004224f:	je     0x100422a5
10042251:	cmp    ecx,0x5f
10042254:	jne    0x10042270
10042256:	xor    ecx,ecx
10042258:	mov    ch,BYTE PTR [eax+0x3]
1004225b:	mov    edx,0x1
10042260:	mov    cl,BYTE PTR [eax+0x4]
10042263:	cmp    ecx,0x20
10042266:	jge    0x1004226a
10042268:	shl    edx,cl
1004226a:	push   edi
1004226b:	or     edx,ebp
1004226d:	push   edx
1004226e:	jmp    0x100422a7
10042270:	cmp    ecx,0x58
10042273:	je     0x100422a5
10042275:	cmp    ecx,0x5d
10042278:	je     0x100422a5
1004227a:	cmp    ecx,0x60
1004227d:	je     0x100422a5
1004227f:	cmp    ecx,0x39
10042282:	je     0x10042299
10042284:	cmp    ecx,0x3a
10042287:	je     0x10042299
10042289:	cmp    ecx,0x42
1004228c:	je     0x10042299
1004228e:	cmp    ecx,0x1a
10042291:	je     0x100422b4
10042293:	pop    edi
10042294:	pop    esi
10042295:	xor    eax,eax
10042297:	pop    ebp
10042298:	ret    
10042299:	cmp    BYTE PTR [eax+0x1],0xc
1004229d:	jne    0x10042293
1004229f:	test   edi,ebp
100422a1:	jne    0x10042293
100422a3:	jmp    0x100422b4
100422a5:	push   edi
100422a6:	push   ebp
100422a7:	push   eax
100422a8:	call   0x100421f0
100422ad:	add    esp,0xc
100422b0:	test   eax,eax
100422b2:	je     0x10042293
100422b4:	xor    eax,eax
100422b6:	mov    ah,BYTE PTR [esi+0x1]
100422b9:	mov    al,BYTE PTR [esi+0x2]
100422bc:	add    esi,eax
100422be:	cmp    BYTE PTR [esi],0x54
100422c1:	je     0x10042200
100422c7:	pop    edi
100422c8:	pop    esi
100422c9:	mov    eax,0x1
100422ce:	pop    ebp
100422cf:	ret    
100422d0:	dec    ecx
100422d1:	and    al,BYTE PTR [eax+edx*1]
100422d4:	and    al,BYTE PTR cs:[eax+edx*1]
100422d8:	xor    esp,DWORD PTR [edx]
100422da:	add    al,0x10
100422dc:	dec    ecx
100422dd:	and    al,BYTE PTR [eax+edx*1]
100422e0:	add    BYTE PTR [eax],al
100422e2:	add    eax,DWORD PTR [ebx]
100422e4:	add    eax,DWORD PTR [ebx]
100422e6:	add    eax,DWORD PTR [ebx]
100422e8:	add    eax,DWORD PTR [ebx]
100422ea:	add    eax,DWORD PTR [ebx]
100422ec:	add    eax,DWORD PTR [ebx]
100422ee:	add    eax,DWORD PTR [ebx]
100422f0:	add    eax,DWORD PTR [ebx]
100422f2:	add    eax,DWORD PTR [ebx]
100422f4:	add    eax,DWORD PTR [ecx]
100422f6:	add    eax,DWORD PTR [ebx]
100422f8:	add    eax,DWORD PTR [ebx]
100422fa:	add    eax,DWORD PTR [ebx]
100422fc:	add    eax,DWORD PTR [ebx]
100422fe:	add    eax,DWORD PTR [ebx]
10042300:	add    eax,DWORD PTR [ebx]
10042302:	add    eax,DWORD PTR [ebx]
10042304:	add    eax,DWORD PTR [ebx]
10042306:	add    eax,DWORD PTR [ebx]
10042308:	add    eax,DWORD PTR [ebx]
1004230a:	add    eax,DWORD PTR [ebx]
1004230c:	add    eax,DWORD PTR [ebx]
1004230e:	add    eax,DWORD PTR [ebx]
10042310:	add    eax,DWORD PTR [ebx]
10042312:	add    eax,DWORD PTR [ebx]
10042314:	add    eax,DWORD PTR [ebx]
10042316:	add    eax,DWORD PTR [ebx]
10042318:	add    eax,DWORD PTR [ebx]
1004231a:	add    eax,DWORD PTR [ebx]
1004231c:	add    eax,DWORD PTR [ebx]
1004231e:	add    eax,DWORD PTR [ebx]
10042320:	add    eax,DWORD PTR [ebx]
10042322:	add    eax,DWORD PTR [ebx]
10042324:	add    eax,DWORD PTR [ebx]
10042326:	add    eax,DWORD PTR [ebx]
10042328:	add    eax,DWORD PTR [ebx]
1004232a:	add    eax,DWORD PTR [ebx]
1004232c:	add    eax,DWORD PTR [ebx]
1004232e:	add    eax,DWORD PTR [edx]
10042330:	add    eax,DWORD PTR [ebx]
10042332:	add    eax,DWORD PTR [ebx]
10042334:	add    eax,DWORD PTR [eax]
10042336:	add    BYTE PTR [eax],al
10042338:	add    eax,DWORD PTR [ebx]
1004233a:	add    eax,DWORD PTR [ebx]
1004233c:	add    eax,DWORD PTR [ebx]
1004233e:	add    eax,DWORD PTR [ebx]
10042340:	add    al,BYTE PTR [edx]
10042342:	add    cl,ah
10042344:	int3   
10042345:	int3   
10042346:	int3   
10042347:	int3   
10042348:	int3   
10042349:	int3   
1004234a:	int3   
1004234b:	int3   
1004234c:	int3   
1004234d:	int3   
1004234e:	int3   
1004234f:	int3   
10042350:	push   ebx
10042351:	push   ebp
10042352:	push   esi
10042353:	push   edi
10042354:	mov    edi,DWORD PTR [esp+0x18]
10042358:	or     ebp,0xffffffff
1004235b:	jmp    0x10042360
1004235d:	lea    ecx,[ecx+0x0]
10042360:	mov    eax,DWORD PTR [esp+0x14]
10042364:	mov    ebx,0x1
10042369:	add    eax,0x3
1004236c:	mov    esi,ebx
1004236e:	call   0x1003e2d0
10042373:	movzx  ecx,BYTE PTR [eax]
10042376:	lea    edx,[ecx-0x1c]
10042379:	cmp    edx,0x44
1004237c:	ja     0x100423f3
1004237e:	movzx  edx,BYTE PTR [edx+0x1004240c]
10042385:	jmp    DWORD PTR [edx*4+0x100423fc]
1004238c:	xor    edx,edx
1004238e:	cmp    ecx,0x58
10042391:	sete   dl
10042394:	push   edx
10042395:	push   edi
10042396:	push   eax
10042397:	call   0x10042350
1004239c:	add    esp,0xc
1004239f:	test   eax,eax
100423a1:	jl     0x100423f3
100423a3:	test   ebp,ebp
100423a5:	jge    0x100423cd
100423a7:	mov    ebp,eax
100423a9:	jmp    0x100423d1
100423ab:	add    eax,0x2
100423ae:	cmp    DWORD PTR [esp+0x1c],0x0
100423b3:	je     0x100423f3
100423b5:	test   ebp,ebp
100423b7:	jge    0x100423c9
100423b9:	test   BYTE PTR [edi],bl
100423bb:	movzx  ebp,BYTE PTR [eax+0x1]
100423bf:	je     0x100423d1
100423c1:	or     ebp,0x100
100423c7:	jmp    0x100423d1
100423c9:	movzx  eax,BYTE PTR [eax+0x1]
100423cd:	cmp    ebp,eax
100423cf:	jne    0x100423f3
100423d1:	mov    eax,DWORD PTR [esp+0x14]
100423d5:	xor    ecx,ecx
100423d7:	mov    ch,BYTE PTR [eax+0x1]
100423da:	mov    cl,BYTE PTR [eax+0x2]
100423dd:	add    eax,ecx
100423df:	cmp    BYTE PTR [eax],0x54
100423e2:	mov    DWORD PTR [esp+0x14],eax
100423e6:	je     0x10042360
100423ec:	pop    edi
100423ed:	pop    esi
100423ee:	mov    eax,ebp
100423f0:	pop    ebp
100423f1:	pop    ebx
100423f2:	ret    
100423f3:	pop    edi
100423f4:	pop    esi
100423f5:	pop    ebp
100423f6:	or     eax,0xffffffff
100423f9:	pop    ebx
100423fa:	ret    
100423fb:	nop
100423fc:	scas   al,BYTE PTR es:[edi]
100423fd:	and    eax,DWORD PTR [eax+edx*1]
10042400:	stos   DWORD PTR es:[edi],eax
10042401:	and    eax,DWORD PTR [eax+edx*1]
10042404:	mov    WORD PTR [ebx],fs
10042406:	add    al,0x10
10042408:	repz and eax,DWORD PTR [eax+edx*1]
1004240c:	add    BYTE PTR [eax],al
1004240e:	add    eax,DWORD PTR [ebx]
10042410:	add    eax,DWORD PTR [eax]
10042412:	add    BYTE PTR [ebx],al
10042414:	add    eax,DWORD PTR [ebx]
10042416:	add    eax,DWORD PTR [ecx]
10042418:	add    eax,DWORD PTR [eax]
1004241a:	add    eax,DWORD PTR [ebx]
1004241c:	add    eax,DWORD PTR [ebx]
1004241e:	add    eax,DWORD PTR [ebx]
10042420:	add    eax,DWORD PTR [ebx]
10042422:	add    eax,DWORD PTR [ebx]
10042424:	add    eax,DWORD PTR [ebx]
10042426:	add    eax,DWORD PTR [ebx]
10042428:	add    eax,DWORD PTR [ebx]
1004242a:	add    eax,DWORD PTR [ebx]
1004242c:	add    eax,DWORD PTR [ebx]
1004242e:	add    eax,DWORD PTR [ebx]
10042430:	add    eax,DWORD PTR [ebx]
10042432:	add    eax,DWORD PTR [ebx]
10042434:	add    eax,DWORD PTR [ebx]
10042436:	add    eax,DWORD PTR [ebx]
10042438:	add    eax,DWORD PTR [ebx]
1004243a:	add    eax,DWORD PTR [ebx]
1004243c:	add    eax,DWORD PTR [ebx]
1004243e:	add    eax,DWORD PTR [ebx]
10042440:	add    eax,DWORD PTR [ebx]
10042442:	add    eax,DWORD PTR [ebx]
10042444:	add    eax,DWORD PTR [ebx]
10042446:	add    eax,DWORD PTR [ebx]
10042448:	add    al,BYTE PTR [ebx]
1004244a:	add    eax,DWORD PTR [ebx]
1004244c:	add    eax,DWORD PTR [edx]
1004244e:	add    al,BYTE PTR [edx]
10042450:	add    cl,ah
10042452:	int3   
10042453:	int3   
10042454:	int3   
10042455:	int3   
10042456:	int3   
10042457:	int3   
10042458:	int3   
10042459:	int3   
1004245a:	int3   
1004245b:	int3   
1004245c:	int3   
1004245d:	int3   
1004245e:	int3   
1004245f:	int3   
10042460:	push   ebp
10042461:	mov    ebp,esp
10042463:	and    esp,0xfffffff8
10042466:	mov    eax,0x108c
1004246b:	call   0x10049de0
10042470:	mov    eax,ds:0x1007e030
10042475:	xor    eax,esp
10042477:	mov    DWORD PTR [esp+0x1088],eax
1004247e:	mov    eax,DWORD PTR [ebp+0xc]
10042481:	push   ebx
10042482:	push   esi
10042483:	push   edi
10042484:	xor    edi,edi
10042486:	mov    esi,edx
10042488:	xor    ebx,ebx
1004248a:	cmp    ecx,edi
1004248c:	mov    DWORD PTR [esp+0x18],esi
10042490:	mov    DWORD PTR [esp+0x2c],ecx
10042494:	mov    DWORD PTR [esp+0x28],eax
10042498:	mov    DWORD PTR [esp+0x14],0x1
100424a0:	mov    DWORD PTR [esp+0xc],edi
100424a4:	mov    DWORD PTR [esp+0x10],esi
100424a8:	je     0x10042a12
100424ae:	cmp    eax,edi
100424b0:	mov    DWORD PTR [ecx],edi
100424b2:	jne    0x100424be
100424b4:	mov    eax,0x10
100424b9:	jmp    0x100429f4
100424be:	mov    DWORD PTR [eax],edi
100424c0:	mov    eax,DWORD PTR [ebp+0x8]
100424c3:	test   eax,0x800
100424c8:	je     0x100424d4
100424ca:	mov    eax,0x20
100424cf:	jmp    0x100429e2
100424d4:	test   eax,0xfc038580
100424d9:	je     0x100424e5
100424db:	mov    eax,0x11
100424e0:	jmp    0x100429e2
100424e5:	mov    DWORD PTR [esp+0x30],0x1006e490
100424ed:	mov    DWORD PTR [esp+0x34],0x1006e590
100424f5:	mov    DWORD PTR [esp+0x38],0x1006e690
100424fd:	mov    DWORD PTR [esp+0x3c],0x1006e7d0
10042505:	cmp    BYTE PTR [esi],0x28
10042508:	jne    0x1004263c
1004250e:	jmp    0x10042512
10042510:	xor    edi,edi
10042512:	cmp    BYTE PTR [esi+ebx*1+0x1],0x2a
10042517:	jne    0x1004263c
1004251d:	push   0x3
1004251f:	lea    edi,[esi+ebx*1+0x2]
10042523:	push   0x1007411c
10042528:	push   edi
10042529:	call   0x1004f106
1004252e:	add    esp,0xc
10042531:	test   eax,eax
10042533:	jne    0x10042550
10042535:	mov    ecx,DWORD PTR [ebp+0x8]
10042538:	mov    eax,0x100000
1004253d:	and    ecx,0xff8fffff
10042543:	add    ebx,0x5
10042546:	or     ecx,eax
10042548:	mov    DWORD PTR [ebp+0x8],ecx
1004254b:	jmp    0x10042630
10042550:	push   0x3
10042552:	push   0x10074120
10042557:	push   edi
10042558:	call   0x1004f106
1004255d:	add    esp,0xc
10042560:	test   eax,eax
10042562:	jne    0x1004257f
10042564:	mov    ecx,DWORD PTR [ebp+0x8]
10042567:	mov    eax,0x200000
1004256c:	and    ecx,0xff8fffff
10042572:	add    ebx,0x5
10042575:	or     ecx,eax
10042577:	mov    DWORD PTR [ebp+0x8],ecx
1004257a:	jmp    0x10042630
1004257f:	push   0x5
10042581:	push   0x10074124
10042586:	push   edi
10042587:	call   0x1004f106
1004258c:	add    esp,0xc
1004258f:	test   eax,eax
10042591:	jne    0x100425ae
10042593:	mov    ecx,DWORD PTR [ebp+0x8]
10042596:	mov    eax,0x300000
1004259b:	and    ecx,0xff8fffff
100425a1:	add    ebx,0x7
100425a4:	or     ecx,eax
100425a6:	mov    DWORD PTR [ebp+0x8],ecx
100425a9:	jmp    0x10042630
100425ae:	push   0x4
100425b0:	push   0x1007412c
100425b5:	push   edi
100425b6:	call   0x1004f106
100425bb:	add    esp,0xc
100425be:	test   eax,eax
100425c0:	jne    0x100425da
100425c2:	mov    ecx,DWORD PTR [ebp+0x8]
100425c5:	mov    eax,0x400000
100425ca:	and    ecx,0xff8fffff
100425d0:	add    ebx,0x6
100425d3:	or     ecx,eax
100425d5:	mov    DWORD PTR [ebp+0x8],ecx
100425d8:	jmp    0x10042630
100425da:	push   0x8
100425dc:	push   0x10074134
100425e1:	push   edi
100425e2:	call   0x1004f106
100425e7:	add    esp,0xc
100425ea:	test   eax,eax
100425ec:	jne    0x10042606
100425ee:	mov    ecx,DWORD PTR [ebp+0x8]
100425f1:	mov    eax,0x500000
100425f6:	and    ecx,0xff8fffff
100425fc:	add    ebx,0xa
100425ff:	or     ecx,eax
10042601:	mov    DWORD PTR [ebp+0x8],ecx
10042604:	jmp    0x10042630
10042606:	push   0xc
10042608:	push   0x10074140
1004260d:	push   edi
1004260e:	call   0x1004f106
10042613:	add    esp,0xc
10042616:	test   eax,eax
10042618:	jne    0x10042660
1004261a:	add    ebx,0xe
1004261d:	mov    eax,0x800000
10042622:	mov    edx,DWORD PTR [ebp+0x8]
10042625:	and    edx,0xfe7fffff
1004262b:	or     edx,eax
1004262d:	mov    DWORD PTR [ebp+0x8],edx
10042630:	cmp    BYTE PTR [esi+ebx*1],0x28
10042634:	je     0x10042510
1004263a:	xor    edi,edi
1004263c:	mov    ecx,DWORD PTR [ebp+0x8]
1004263f:	mov    eax,ecx
10042641:	and    eax,0x1800000
10042646:	je     0x1004267e
10042648:	cmp    eax,0x800000
1004264d:	je     0x1004267e
1004264f:	cmp    eax,0x1000000
10042654:	je     0x1004267e
10042656:	mov    eax,0x38
1004265b:	jmp    0x100429e2
10042660:	push   0xc
10042662:	push   0x10074150
10042667:	push   edi
10042668:	call   0x1004f106
1004266d:	add    esp,0xc
10042670:	test   eax,eax
10042672:	jne    0x1004263a
10042674:	add    ebx,0xe
10042677:	mov    eax,0x1000000
1004267c:	jmp    0x10042622
1004267e:	mov    eax,ecx
10042680:	and    eax,0x700000
10042685:	cmp    eax,0x300000
1004268a:	mov    ecx,0x2
1004268f:	jg     0x100426e2
10042691:	je     0x100426db
10042693:	cmp    eax,edi
10042695:	je     0x100426a5
10042697:	cmp    eax,0x100000
1004269c:	je     0x100426d4
1004269e:	cmp    eax,0x200000
100426a3:	jne    0x100426f0
100426a5:	mov    eax,0xa
100426aa:	cmp    eax,0xff
100426af:	mov    DWORD PTR [esp+0x80],edi
100426b6:	jle    0x10042710
100426b8:	mov    DWORD PTR [esp+0x84],ecx
100426bf:	mov    ecx,eax
100426c1:	sar    ecx,0x8
100426c4:	mov    BYTE PTR [esp+0x88],cl
100426cb:	mov    BYTE PTR [esp+0x89],al
100426d2:	jmp    0x10042722
100426d4:	mov    eax,0xd
100426d9:	jmp    0x100426aa
100426db:	mov    eax,0xd0a
100426e0:	jmp    0x100426aa
100426e2:	cmp    eax,0x400000
100426e7:	je     0x10042703
100426e9:	cmp    eax,0x500000
100426ee:	je     0x100426fa
100426f0:	mov    eax,0x38
100426f5:	jmp    0x100429e2
100426fa:	mov    DWORD PTR [esp+0x80],ecx
10042701:	jmp    0x10042722
10042703:	mov    DWORD PTR [esp+0x80],0x1
1004270e:	jmp    0x10042722
10042710:	mov    DWORD PTR [esp+0x84],0x1
1004271b:	mov    BYTE PTR [esp+0x88],al
10042722:	lea    edx,[esp+0x90]
10042729:	mov    eax,edx
1004272b:	mov    DWORD PTR [esp+0x44],eax
1004272f:	mov    ecx,edx
10042731:	mov    eax,esi
10042733:	mov    DWORD PTR [esp+0x40],edx
10042737:	mov    DWORD PTR [esp+0x68],edi
1004273b:	mov    DWORD PTR [esp+0x6c],edi
1004273f:	mov    DWORD PTR [esp+0x64],edi
10042743:	mov    DWORD PTR [esp+0x60],edi
10042747:	mov    DWORD PTR [esp+0x58],edi
1004274b:	mov    DWORD PTR [esp+0x5c],edi
1004274f:	mov    DWORD PTR [esp+0x54],edi
10042753:	mov    DWORD PTR [esp+0x50],ecx
10042757:	mov    DWORD PTR [esp+0x48],esi
1004275b:	lea    edx,[eax+0x1]
1004275e:	mov    edi,edi
10042760:	mov    cl,BYTE PTR [eax]
10042762:	add    eax,0x1
10042765:	test   cl,cl
10042767:	jne    0x10042760
10042769:	sub    eax,edx
1004276b:	lea    edx,[esp+0x90]
10042772:	mov    DWORD PTR [esp+0x1c],edx
10042776:	xor    edi,edi
10042778:	lea    ecx,[esp+0x14]
1004277c:	push   ecx
1004277d:	lea    edx,[esp+0x34]
10042781:	push   edx
10042782:	push   edi
10042783:	lea    ecx,[esp+0x2c]
10042787:	push   ecx
10042788:	lea    edx,[esp+0x34]
1004278c:	push   edx
1004278d:	push   edi
1004278e:	push   edi
1004278f:	push   edi
10042790:	add    eax,esi
10042792:	lea    ecx,[esp+0x2c]
10042796:	push   ecx
10042797:	mov    DWORD PTR [esp+0x70],eax
1004279b:	mov    eax,DWORD PTR [ebp+0x8]
1004279e:	lea    edx,[esp+0x34]
100427a2:	push   edx
100427a3:	lea    ecx,[esp+0x44]
100427a7:	mov    edx,eax
100427a9:	push   ecx
100427aa:	and    edx,0x7
100427ad:	push   edx
100427ae:	add    esi,ebx
100427b0:	push   eax
100427b1:	mov    DWORD PTR [esp+0xac],edi
100427b8:	mov    DWORD PTR [esp+0xa4],eax
100427bf:	mov    DWORD PTR [esp+0xa8],edi
100427c6:	mov    DWORD PTR [esp+0x44],esi
100427ca:	mov    BYTE PTR [esp+0xc4],0x5e
100427d2:	call   0x10041e00
100427d7:	mov    eax,DWORD PTR [esp+0x40]
100427db:	add    esp,0x34
100427de:	cmp    eax,edi
100427e0:	jne    0x100429e2
100427e6:	cmp    DWORD PTR [esp+0x14],0x10000
100427ee:	jle    0x100427fa
100427f0:	mov    eax,0x14
100427f5:	jmp    0x100429e2
100427fa:	mov    eax,DWORD PTR [esp+0x5c]
100427fe:	mov    ecx,DWORD PTR [esp+0x14]
10042802:	add    eax,0x3
10042805:	imul   eax,DWORD PTR [esp+0x58]
1004280a:	lea    ebx,[eax+ecx*1+0x28]
1004280e:	push   ebx
1004280f:	call   DWORD PTR ds:0x1007f4f8
10042815:	mov    edi,eax
10042817:	add    esp,0x4
1004281a:	test   edi,edi
1004281c:	jne    0x10042828
1004281e:	mov    eax,0x15
10042823:	jmp    0x100429e2
10042828:	mov    DWORD PTR [edi+0x4],ebx
1004282b:	mov    DWORD PTR [edi],0x50435245
10042831:	mov    edx,DWORD PTR [esp+0x70]
10042835:	mov    DWORD PTR [edi+0x8],edx
10042838:	movzx  eax,WORD PTR [esp+0x74]
1004283d:	xor    ecx,ecx
1004283f:	mov    WORD PTR [edi+0xc],ax
10042843:	mov    WORD PTR [edi+0xe],cx
10042847:	mov    WORD PTR [edi+0x14],cx
1004284b:	mov    WORD PTR [edi+0x16],cx
1004284f:	mov    WORD PTR [edi+0x18],0x28
10042855:	movzx  edx,WORD PTR [esp+0x5c]
1004285a:	mov    WORD PTR [edi+0x1a],dx
1004285e:	movzx  eax,WORD PTR [esp+0x58]
10042863:	mov    WORD PTR [edi+0x1c],ax
10042867:	mov    WORD PTR [edi+0x1e],cx
1004286b:	mov    DWORD PTR [edi+0x20],ecx
1004286e:	mov    DWORD PTR [edi+0x24],ecx
10042871:	mov    edx,DWORD PTR [esp+0x60]
10042875:	mov    DWORD PTR [esp+0x64],edx
10042879:	mov    DWORD PTR [esp+0x60],ecx
1004287d:	mov    DWORD PTR [esp+0x58],ecx
10042881:	movzx  eax,WORD PTR [edi+0x18]
10042885:	push   ecx
10042886:	add    eax,edi
10042888:	mov    DWORD PTR [esp+0x58],eax
1004288c:	movzx  edx,WORD PTR [edi+0x1a]
10042890:	movzx  ebx,WORD PTR [edi+0x1c]
10042894:	imul   ebx,edx
10042897:	lea    edx,[esp+0x34]
1004289b:	push   edx
1004289c:	push   ecx
1004289d:	lea    edx,[esp+0x2c]
100428a1:	push   edx
100428a2:	lea    edx,[esp+0x34]
100428a6:	push   edx
100428a7:	push   ecx
100428a8:	push   ecx
100428a9:	push   ecx
100428aa:	add    ebx,eax
100428ac:	mov    DWORD PTR [esp+0x98],ecx
100428b3:	mov    DWORD PTR [esp+0x9c],ecx
100428ba:	lea    eax,[esp+0xb0]
100428c1:	mov    DWORD PTR [esp+0x64],ebx
100428c5:	mov    DWORD PTR [esp+0x70],eax
100428c9:	lea    ecx,[esp+0x2c]
100428cd:	push   ecx
100428ce:	mov    BYTE PTR [ebx],0x5e
100428d1:	mov    eax,DWORD PTR [edi+0x8]
100428d4:	lea    edx,[esp+0x34]
100428d8:	push   edx
100428d9:	lea    ecx,[esp+0x44]
100428dd:	mov    edx,eax
100428df:	push   ecx
100428e0:	and    edx,0x7
100428e3:	push   edx
100428e4:	push   eax
100428e5:	mov    DWORD PTR [esp+0x44],esi
100428e9:	mov    DWORD PTR [esp+0x50],ebx
100428ed:	call   0x10041e00
100428f2:	movzx  eax,WORD PTR [esp+0x94]
100428fa:	mov    WORD PTR [edi+0x10],ax
100428fe:	mov    cx,WORD PTR [esp+0x9c]
10042906:	mov    WORD PTR [edi+0x12],cx
1004290a:	movzx  edx,WORD PTR [esp+0xa8]
10042912:	add    esp,0x34
10042915:	mov    WORD PTR [edi+0xc],dx
10042919:	cmp    DWORD PTR [esp+0x7c],0x0
1004291e:	je     0x10042928
10042920:	mov    DWORD PTR [esp+0x20],0xffffffff
10042928:	cmp    DWORD PTR [esp+0xc],0x0
1004292d:	jne    0x10042940
1004292f:	mov    eax,DWORD PTR [esp+0x10]
10042933:	cmp    BYTE PTR [eax],0x0
10042936:	je     0x10042940
10042938:	mov    DWORD PTR [esp+0xc],0x16
10042940:	mov    eax,DWORD PTR [esp+0x1c]
10042944:	mov    BYTE PTR [eax],0x0
10042947:	add    eax,0x1
1004294a:	sub    eax,ebx
1004294c:	cmp    eax,DWORD PTR [esp+0x14]
10042950:	jle    0x1004295c
10042952:	mov    DWORD PTR [esp+0xc],0x17
1004295a:	jmp    0x100429d4
1004295c:	cmp    DWORD PTR [esp+0xc],0x0
10042961:	jne    0x100429d4
10042963:	mov    eax,DWORD PTR [esp+0x50]
10042967:	lea    ecx,[esp+0x90]
1004296e:	cmp    eax,ecx
10042970:	jbe    0x100429c2
10042972:	sub    eax,0x2
10042975:	mov    DWORD PTR [esp+0x50],eax
10042979:	movzx  edx,BYTE PTR [eax+0x1]
1004297d:	mov    dh,BYTE PTR [eax]
1004297f:	xor    ecx,ecx
10042981:	mov    eax,edx
10042983:	mov    ch,BYTE PTR [eax+ebx*1]
10042986:	mov    DWORD PTR [esp+0x14],eax
1004298a:	mov    cl,BYTE PTR [eax+ebx*1+0x1]
1004298e:	mov    eax,ebx
10042990:	mov    esi,ecx
10042992:	call   0x1003e5e0
10042997:	test   eax,eax
10042999:	je     0x100429b8
1004299b:	mov    esi,DWORD PTR [esp+0x14]
1004299f:	mov    edx,eax
100429a1:	sub    edx,ebx
100429a3:	sar    edx,0x8
100429a6:	sub    al,bl
100429a8:	mov    BYTE PTR [esi+ebx*1],dl
100429ab:	mov    BYTE PTR [esi+ebx*1+0x1],al
100429af:	cmp    DWORD PTR [esp+0xc],0x0
100429b4:	je     0x10042963
100429b6:	jmp    0x100429d4
100429b8:	mov    DWORD PTR [esp+0xc],0x35
100429c0:	jmp    0x100429d4
100429c2:	mov    ax,WORD PTR [edi+0x12]
100429c6:	cmp    ax,WORD PTR [edi+0x10]
100429ca:	jbe    0x10042a29
100429cc:	mov    DWORD PTR [esp+0xc],0xf
100429d4:	push   edi
100429d5:	call   DWORD PTR ds:0x1007f4fc
100429db:	mov    eax,DWORD PTR [esp+0x10]
100429df:	add    esp,0x4
100429e2:	mov    ecx,DWORD PTR [esp+0x10]
100429e6:	sub    ecx,DWORD PTR [esp+0x18]
100429ea:	mov    edx,DWORD PTR [esp+0x28]
100429ee:	mov    DWORD PTR [edx],ecx
100429f0:	mov    ecx,DWORD PTR [esp+0x2c]
100429f4:	test   eax,eax
100429f6:	mov    edi,0x1006eae0
100429fb:	jle    0x10042a10
100429fd:	lea    ecx,[ecx+0x0]
10042a00:	mov    dl,BYTE PTR [edi]
10042a02:	add    edi,0x1
10042a05:	test   dl,dl
10042a07:	jne    0x10042a00
10042a09:	sub    eax,0x1
10042a0c:	test   eax,eax
10042a0e:	jg     0x10042a00
10042a10:	mov    DWORD PTR [ecx],edi
10042a12:	xor    eax,eax
10042a14:	pop    edi
10042a15:	pop    esi
10042a16:	pop    ebx
10042a17:	mov    ecx,DWORD PTR [esp+0x1088]
10042a1e:	xor    ecx,esp
10042a20:	call   0x10042e97
10042a25:	mov    esp,ebp
10042a27:	pop    ebp
10042a28:	ret    
10042a29:	mov    eax,DWORD PTR [edi+0x8]
10042a2c:	test   al,0x10
10042a2e:	jne    0x10042ab4
10042a34:	mov    DWORD PTR [esp+0x18],eax
10042a38:	mov    eax,DWORD PTR [esp+0x6c]
10042a3c:	push   eax
10042a3d:	push   0x0
10042a3f:	lea    ecx,[esp+0x20]
10042a43:	push   ecx
10042a44:	push   ebx
10042a45:	call   0x10042120
10042a4a:	add    esp,0x10
10042a4d:	test   eax,eax
10042a4f:	je     0x10042a57
10042a51:	or     DWORD PTR [edi+0x8],0x10
10042a55:	jmp    0x10042ab4
10042a57:	mov    eax,DWORD PTR [esp+0x24]
10042a5b:	test   eax,eax
10042a5d:	jge    0x10042a73
10042a5f:	push   0x0
10042a61:	lea    edx,[esp+0x1c]
10042a65:	push   edx
10042a66:	push   ebx
10042a67:	call   0x10042350
10042a6c:	add    esp,0xc
10042a6f:	test   eax,eax
10042a71:	jl     0x10042a9b
10042a73:	mov    ecx,eax
10042a75:	and    ecx,0xff
10042a7b:	test   eax,0x100
10042a80:	je     0x10042a90
10042a82:	mov    edx,DWORD PTR [esp+0x34]
10042a86:	movzx  edx,BYTE PTR [edx+ecx*1]
10042a8a:	cmp    edx,ecx
10042a8c:	jne    0x10042a90
10042a8e:	mov    eax,ecx
10042a90:	or     WORD PTR [edi+0xc],0x2
10042a95:	mov    WORD PTR [edi+0x14],ax
10042a99:	jmp    0x10042ab4
10042a9b:	mov    eax,DWORD PTR [esp+0x6c]
10042a9f:	push   eax
10042aa0:	push   0x0
10042aa2:	push   ebx
10042aa3:	call   0x100421f0
10042aa8:	add    esp,0xc
10042aab:	test   eax,eax
10042aad:	je     0x10042ab4
10042aaf:	or     WORD PTR [edi+0xc],0x8
10042ab4:	mov    eax,DWORD PTR [esp+0x20]
10042ab8:	test   eax,eax
10042aba:	jl     0x10042af2
10042abc:	test   BYTE PTR [edi+0x8],0x10
10042ac0:	je     0x10042ac9
10042ac2:	test   eax,0x200
10042ac7:	je     0x10042af2
10042ac9:	mov    ecx,eax
10042acb:	and    ecx,0xff
10042ad1:	test   eax,0x100
10042ad6:	je     0x10042ae9
10042ad8:	mov    edx,DWORD PTR [esp+0x34]
10042adc:	movzx  edx,BYTE PTR [edx+ecx*1]
10042ae0:	cmp    edx,ecx
10042ae2:	jne    0x10042ae9
10042ae4:	and    eax,0xfffffeff
10042ae9:	or     WORD PTR [edi+0xc],0x4
10042aee:	mov    WORD PTR [edi+0x16],ax
10042af2:	mov    ecx,DWORD PTR [esp+0x1094]
10042af9:	mov    eax,edi
10042afb:	pop    edi
10042afc:	pop    esi
10042afd:	pop    ebx
10042afe:	xor    ecx,esp
10042b00:	call   0x10042e97
10042b05:	mov    esp,ebp
10042b07:	pop    ebp
10042b08:	ret    
10042b09:	int3   
10042b0a:	int3   
10042b0b:	int3   
10042b0c:	int3   
10042b0d:	int3   
10042b0e:	int3   
10042b0f:	int3   
10042b10:	push   ebp
10042b11:	mov    ebp,esp
10042b13:	and    esp,0xfffffff8
10042b16:	sub    esp,0x54
10042b19:	mov    eax,ds:0x1007e030
10042b1e:	xor    eax,esp
10042b20:	mov    DWORD PTR [esp+0x50],eax
10042b24:	test   edx,edx
10042b26:	push   ebx
10042b27:	mov    eax,edx
10042b29:	je     0x10042b7c
10042b2b:	test   esi,esi
10042b2d:	je     0x10042b7c
10042b2f:	cmp    DWORD PTR [edx],0x50435245
10042b35:	je     0x10042b64
10042b37:	lea    eax,[esp+0x2c]
10042b3b:	push   eax
10042b3c:	lea    ecx,[esp+0x8]
10042b40:	push   ecx
10042b41:	xor    ebx,ebx
10042b43:	call   0x10042d20
10042b48:	add    esp,0x8
10042b4b:	test   eax,eax
10042b4d:	jne    0x10042b64
10042b4f:	mov    eax,0xfffffffc
10042b54:	pop    ebx
10042b55:	mov    ecx,DWORD PTR [esp+0x50]
10042b59:	xor    ecx,esp
10042b5b:	call   0x10042e97
10042b60:	mov    esp,ebp
10042b62:	pop    ebp
10042b63:	ret    
10042b64:	movzx  edx,WORD PTR [eax+0x10]
10042b68:	mov    DWORD PTR [esi],edx
10042b6a:	xor    eax,eax
10042b6c:	pop    ebx
10042b6d:	mov    ecx,DWORD PTR [esp+0x50]
10042b71:	xor    ecx,esp
10042b73:	call   0x10042e97
10042b78:	mov    esp,ebp
10042b7a:	pop    ebp
10042b7b:	ret    
10042b7c:	mov    ecx,DWORD PTR [esp+0x54]
10042b80:	pop    ebx
10042b81:	xor    ecx,esp
10042b83:	mov    eax,0xfffffffe
10042b88:	call   0x10042e97
10042b8d:	mov    esp,ebp
10042b8f:	pop    ebp
10042b90:	ret    
10042b91:	int3   
10042b92:	int3   
10042b93:	int3   
10042b94:	int3   
10042b95:	int3   
10042b96:	int3   
10042b97:	int3   
10042b98:	int3   
10042b99:	int3   
10042b9a:	int3   
10042b9b:	int3   
10042b9c:	int3   
10042b9d:	int3   
10042b9e:	int3   
10042b9f:	int3   
10042ba0:	cmp    DWORD PTR [esp+0x4],0x2
10042ba5:	push   esi
10042ba6:	mov    esi,eax
10042ba8:	movzx  eax,BYTE PTR [ecx]
10042bab:	jne    0x10042be8
10042bad:	cmp    eax,0xa
10042bb0:	je     0x10042bdb
10042bb2:	cmp    eax,0xd
10042bb5:	jne    0x10042c4e
10042bbb:	add    esi,0xffffffff
10042bbe:	cmp    ecx,esi
10042bc0:	jae    0x10042bcd
10042bc2:	cmp    BYTE PTR [ecx+0x1],0xa
10042bc6:	mov    eax,0x2
10042bcb:	je     0x10042bd2
10042bcd:	mov    eax,0x1
10042bd2:	mov    DWORD PTR [edi],eax
10042bd4:	mov    eax,0x1
10042bd9:	pop    esi
10042bda:	ret    
10042bdb:	mov    DWORD PTR [edi],0x1
10042be1:	mov    eax,0x1
10042be6:	pop    esi
10042be7:	ret    
10042be8:	cmp    eax,0x85
10042bed:	jg     0x10042c33
10042bef:	je     0x10042c20
10042bf1:	cmp    eax,0xa
10042bf4:	jl     0x10042c4e
10042bf6:	cmp    eax,0xc
10042bf9:	jle    0x10042bdb
10042bfb:	cmp    eax,0xd
10042bfe:	jne    0x10042c4e
10042c00:	add    esi,0xffffffff
10042c03:	cmp    ecx,esi
10042c05:	jae    0x10042c12
10042c07:	cmp    BYTE PTR [ecx+0x1],0xa
10042c0b:	mov    eax,0x2
10042c10:	je     0x10042c17
10042c12:	mov    eax,0x1
10042c17:	mov    DWORD PTR [edi],eax
10042c19:	mov    eax,0x1
10042c1e:	pop    esi
10042c1f:	ret    
10042c20:	xor    eax,eax
10042c22:	test   edx,edx
10042c24:	setne  al
10042c27:	pop    esi
10042c28:	add    eax,0x1
10042c2b:	mov    DWORD PTR [edi],eax
10042c2d:	mov    eax,0x1
10042c32:	ret    
10042c33:	cmp    eax,0x2028
10042c38:	jl     0x10042c4e
10042c3a:	cmp    eax,0x2029
10042c3f:	jg     0x10042c4e
10042c41:	mov    DWORD PTR [edi],0x3
10042c47:	mov    eax,0x1
10042c4c:	pop    esi
10042c4d:	ret    
10042c4e:	xor    eax,eax
10042c50:	pop    esi
10042c51:	ret    
10042c52:	int3   
10042c53:	int3   
10042c54:	int3   
10042c55:	int3   
10042c56:	int3   
10042c57:	int3   
10042c58:	int3   
10042c59:	int3   
10042c5a:	int3   
10042c5b:	int3   
10042c5c:	int3   
10042c5d:	int3   
10042c5e:	int3   
10042c5f:	int3   
10042c60:	movzx  eax,BYTE PTR [ecx-0x1]
10042c64:	sub    ecx,0x1
10042c67:	cmp    DWORD PTR [esp+0x4],0x2
10042c6c:	jne    0x10042ca4
10042c6e:	cmp    eax,0xa
10042c71:	je     0x10042c88
10042c73:	cmp    eax,0xd
10042c76:	jne    0x10042d0f
10042c7c:	mov    DWORD PTR [edx],0x1
10042c82:	mov    eax,0x1
10042c87:	ret    
10042c88:	cmp    ecx,esi
10042c8a:	jbe    0x10042c97
10042c8c:	cmp    BYTE PTR [ecx-0x1],0xd
10042c90:	mov    eax,0x2
10042c95:	je     0x10042c9c
10042c97:	mov    eax,0x1
10042c9c:	mov    DWORD PTR [edx],eax
10042c9e:	mov    eax,0x1
10042ca3:	ret    
10042ca4:	cmp    eax,0x85
10042ca9:	jg     0x10042cf5
10042cab:	je     0x10042ce1
10042cad:	cmp    eax,0xa
10042cb0:	je     0x10042cc5
10042cb2:	jle    0x10042d0f
10042cb4:	cmp    eax,0xd
10042cb7:	jg     0x10042d0f
10042cb9:	mov    DWORD PTR [edx],0x1
10042cbf:	mov    eax,0x1
10042cc4:	ret    
10042cc5:	cmp    ecx,esi
10042cc7:	jbe    0x10042cd4
10042cc9:	cmp    BYTE PTR [ecx-0x1],0xd
10042ccd:	mov    eax,0x2
10042cd2:	je     0x10042cd9
10042cd4:	mov    eax,0x1
10042cd9:	mov    DWORD PTR [edx],eax
10042cdb:	mov    eax,0x1
10042ce0:	ret    
10042ce1:	xor    eax,eax
10042ce3:	cmp    DWORD PTR [esp+0x8],eax
10042ce7:	setne  al
10042cea:	add    eax,0x1
10042ced:	mov    DWORD PTR [edx],eax
10042cef:	mov    eax,0x1
10042cf4:	ret    
10042cf5:	cmp    eax,0x2028
10042cfa:	jl     0x10042d0f
10042cfc:	cmp    eax,0x2029
10042d01:	jg     0x10042d0f
10042d03:	mov    DWORD PTR [edx],0x3
10042d09:	mov    eax,0x1
10042d0e:	ret    
10042d0f:	xor    eax,eax
10042d11:	ret    
10042d12:	int3   
10042d13:	int3   
10042d14:	int3   
10042d15:	int3   
10042d16:	int3   
10042d17:	int3   
10042d18:	int3   
10042d19:	int3   
10042d1a:	int3   
10042d1b:	int3   
10042d1c:	int3   
10042d1d:	int3   
10042d1e:	int3   
10042d1f:	int3   
10042d20:	mov    eax,DWORD PTR [edx]
10042d22:	push   ebp
10042d23:	mov    ebp,DWORD PTR [esp+0x8]
10042d27:	push   esi
10042d28:	mov    ecx,eax
10042d2a:	and    ecx,0xff0000
10042d30:	mov    esi,eax
10042d32:	shr    esi,0x10
10042d35:	or     ecx,esi
10042d37:	mov    esi,eax
10042d39:	and    esi,0xff00
10042d3f:	shl    eax,0x10
10042d42:	or     esi,eax
10042d44:	shr    ecx,0x8
10042d47:	shl    esi,0x8
10042d4a:	or     ecx,esi
10042d4c:	cmp    ecx,0x50435245
10042d52:	je     0x10042d59
10042d54:	pop    esi
10042d55:	xor    eax,eax
10042d57:	pop    ebp
10042d58:	ret    
10042d59:	push   edi
10042d5a:	mov    esi,edx
10042d5c:	mov    ecx,0xa
10042d61:	mov    edi,ebp
10042d63:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10042d65:	mov    eax,DWORD PTR [edx+0x4]
10042d68:	mov    ecx,eax
10042d6a:	and    ecx,0xff0000
10042d70:	mov    esi,eax
10042d72:	shr    esi,0x10
10042d75:	or     ecx,esi
10042d77:	shr    ecx,0x8
10042d7a:	mov    esi,eax
10042d7c:	shl    eax,0x10
10042d7f:	and    esi,0xff00
10042d85:	or     esi,eax
10042d87:	shl    esi,0x8
10042d8a:	or     ecx,esi
10042d8c:	mov    DWORD PTR [ebp+0x4],ecx
10042d8f:	mov    eax,DWORD PTR [edx+0x8]
10042d92:	mov    ecx,eax
10042d94:	and    ecx,0xff0000
10042d9a:	mov    esi,eax
10042d9c:	shr    esi,0x10
10042d9f:	or     ecx,esi
10042da1:	shr    ecx,0x8
10042da4:	mov    esi,eax
10042da6:	shl    eax,0x10
10042da9:	and    esi,0xff00
10042daf:	or     esi,eax
10042db1:	shl    esi,0x8
10042db4:	or     ecx,esi
10042db6:	test   ebx,ebx
10042db8:	mov    DWORD PTR [ebp+0x8],ecx
10042dbb:	movzx  eax,WORD PTR [edx+0xc]
10042dbf:	movzx  cx,ah
10042dc3:	mov    ch,al
10042dc5:	mov    WORD PTR [ebp+0xc],cx
10042dc9:	movzx  eax,WORD PTR [edx+0x10]
10042dcd:	movzx  cx,ah
10042dd1:	mov    ch,al
10042dd3:	mov    WORD PTR [ebp+0x10],cx
10042dd7:	movzx  eax,WORD PTR [edx+0x12]
10042ddb:	movzx  cx,ah
10042ddf:	mov    ch,al
10042de1:	mov    WORD PTR [ebp+0x12],cx
10042de5:	movzx  eax,WORD PTR [edx+0x14]
10042de9:	movzx  cx,ah
10042ded:	mov    ch,al
10042def:	mov    WORD PTR [ebp+0x14],cx
10042df3:	movzx  eax,WORD PTR [edx+0x16]
10042df7:	movzx  cx,ah
10042dfb:	mov    ch,al
10042dfd:	mov    WORD PTR [ebp+0x16],cx
10042e01:	movzx  eax,WORD PTR [edx+0x18]
10042e05:	movzx  cx,ah
10042e09:	mov    ch,al
10042e0b:	mov    WORD PTR [ebp+0x18],cx
10042e0f:	movzx  eax,WORD PTR [edx+0x1a]
10042e13:	movzx  cx,ah
10042e17:	mov    ch,al
10042e19:	mov    WORD PTR [ebp+0x1a],cx
10042e1d:	movzx  eax,WORD PTR [edx+0x1c]
10042e21:	movzx  dx,ah
10042e25:	mov    dh,al
10042e27:	mov    WORD PTR [ebp+0x1c],dx
10042e2b:	je     0x10042e8c
10042e2d:	mov    edx,DWORD PTR [esp+0x14]
10042e31:	mov    ecx,0xa
10042e36:	mov    esi,ebx
10042e38:	mov    edi,edx
10042e3a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10042e3c:	mov    eax,DWORD PTR [ebx]
10042e3e:	mov    ecx,eax
10042e40:	and    ecx,0xff0000
10042e46:	mov    esi,eax
10042e48:	shr    esi,0x10
10042e4b:	or     ecx,esi
10042e4d:	mov    esi,eax
10042e4f:	shl    esi,0x10
10042e52:	and    eax,0xff00
10042e57:	or     esi,eax
10042e59:	shl    esi,0x8
10042e5c:	shr    ecx,0x8
10042e5f:	or     ecx,esi
10042e61:	mov    DWORD PTR [edx],ecx
10042e63:	mov    eax,DWORD PTR [ebx+0x4]
10042e66:	mov    ecx,eax
10042e68:	mov    esi,eax
10042e6a:	shr    esi,0x10
10042e6d:	and    ecx,0xff0000
10042e73:	or     ecx,esi
10042e75:	mov    esi,eax
10042e77:	shl    esi,0x10
10042e7a:	and    eax,0xff00
10042e7f:	or     esi,eax
10042e81:	shr    ecx,0x8
10042e84:	shl    esi,0x8
10042e87:	or     ecx,esi
10042e89:	mov    DWORD PTR [edx+0x4],ecx
10042e8c:	pop    edi
10042e8d:	pop    esi
10042e8e:	mov    eax,ebp
10042e90:	pop    ebp
10042e91:	ret    
10042e92:	jmp    0x10043508
10042e97:	cmp    ecx,DWORD PTR ds:0x1007e030
10042e9d:	jne    0x10042ea1
10042e9f:	repz ret 
10042ea1:	jmp    0x10046a16
10042ea6:	push   ebp
10042ea7:	mov    ebp,esp
10042ea9:	mov    eax,DWORD PTR [ebp+0x14]
10042eac:	push   esi
10042ead:	push   edi
10042eae:	xor    edi,edi
10042eb0:	cmp    eax,edi
10042eb2:	je     0x10042efb
10042eb4:	cmp    DWORD PTR [ebp+0x8],edi
10042eb7:	jne    0x10042ed4
10042eb9:	call   0x10046b55
10042ebe:	push   0x16
10042ec0:	pop    esi
10042ec1:	mov    DWORD PTR [eax],esi
10042ec3:	push   edi
10042ec4:	push   edi
10042ec5:	push   edi
10042ec6:	push   edi
10042ec7:	push   edi
10042ec8:	call   0x1004338c
10042ecd:	add    esp,0x14
10042ed0:	mov    eax,esi
10042ed2:	jmp    0x10042efd
10042ed4:	cmp    DWORD PTR [ebp+0x10],edi
10042ed7:	je     0x10042eb9
10042ed9:	cmp    DWORD PTR [ebp+0xc],eax
10042edc:	jae    0x10042eec
10042ede:	call   0x10046b55
10042ee3:	push   0x22
10042ee5:	pop    ecx
10042ee6:	mov    DWORD PTR [eax],ecx
10042ee8:	mov    esi,ecx
10042eea:	jmp    0x10042ec3
10042eec:	push   eax
10042eed:	push   DWORD PTR [ebp+0x10]
10042ef0:	push   DWORD PTR [ebp+0x8]
10042ef3:	call   0x100456c0
10042ef8:	add    esp,0xc
10042efb:	xor    eax,eax
10042efd:	pop    edi
10042efe:	pop    esi
10042eff:	pop    ebp
10042f00:	ret    
10042f01:	mov    eax,ecx
10042f03:	and    DWORD PTR [eax+0x4],0x0
10042f07:	and    DWORD PTR [eax+0x8],0x0
10042f0b:	mov    DWORD PTR [eax],0x100665a0
10042f11:	ret    
10042f12:	push   ebx
10042f13:	mov    ebx,DWORD PTR [esp+0x8]
10042f17:	push   esi
10042f18:	push   edi
10042f19:	mov    edi,ecx
10042f1b:	mov    DWORD PTR [edi],0x100665a0
10042f21:	mov    eax,DWORD PTR [ebx]
10042f23:	test   eax,eax
10042f25:	je     0x10042f4d
10042f27:	push   eax
10042f28:	call   0x10043010
10042f2d:	mov    esi,eax
10042f2f:	inc    esi
10042f30:	push   esi
10042f31:	call   0x10044f8d
10042f36:	test   eax,eax
10042f38:	pop    ecx
10042f39:	pop    ecx
10042f3a:	mov    DWORD PTR [edi+0x4],eax
10042f3d:	je     0x10042f51
10042f3f:	push   DWORD PTR [ebx]
10042f41:	push   esi
10042f42:	push   eax
10042f43:	call   0x10046b99
10042f48:	add    esp,0xc
10042f4b:	jmp    0x10042f51
10042f4d:	and    DWORD PTR [edi+0x4],0x0
10042f51:	mov    DWORD PTR [edi+0x8],0x1
10042f58:	mov    eax,edi
10042f5a:	pop    edi
10042f5b:	pop    esi
10042f5c:	pop    ebx
10042f5d:	ret    0x4
10042f60:	mov    eax,ecx
10042f62:	mov    ecx,DWORD PTR [esp+0x4]
10042f66:	mov    DWORD PTR [eax],0x100665a0
10042f6c:	mov    ecx,DWORD PTR [ecx]
10042f6e:	and    DWORD PTR [eax+0x8],0x0
10042f72:	mov    DWORD PTR [eax+0x4],ecx
10042f75:	ret    0x8
10042f78:	push   ebx
10042f79:	mov    ebx,DWORD PTR [esp+0x8]
10042f7d:	push   esi
10042f7e:	mov    esi,ecx
10042f80:	mov    DWORD PTR [esi],0x100665a0
10042f86:	mov    eax,DWORD PTR [ebx+0x8]
10042f89:	mov    DWORD PTR [esi+0x8],eax
10042f8c:	test   eax,eax
10042f8e:	mov    eax,DWORD PTR [ebx+0x4]
10042f91:	push   edi
10042f92:	je     0x10042fc5
10042f94:	test   eax,eax
10042f96:	je     0x10042fbf
10042f98:	push   eax
10042f99:	call   0x10043010
10042f9e:	mov    edi,eax
10042fa0:	inc    edi
10042fa1:	push   edi
10042fa2:	call   0x10044f8d
10042fa7:	test   eax,eax
10042fa9:	pop    ecx
10042faa:	pop    ecx
10042fab:	mov    DWORD PTR [esi+0x4],eax
10042fae:	je     0x10042fc8
10042fb0:	push   DWORD PTR [ebx+0x4]
10042fb3:	push   edi
10042fb4:	push   eax
10042fb5:	call   0x10046b99
10042fba:	add    esp,0xc
10042fbd:	jmp    0x10042fc8
10042fbf:	and    DWORD PTR [esi+0x4],0x0
10042fc3:	jmp    0x10042fc8
10042fc5:	mov    DWORD PTR [esi+0x4],eax
10042fc8:	pop    edi
10042fc9:	mov    eax,esi
10042fcb:	pop    esi
10042fcc:	pop    ebx
10042fcd:	ret    0x4
10042fd0:	cmp    DWORD PTR [ecx+0x8],0x0
10042fd4:	mov    DWORD PTR [ecx],0x100665a0
10042fda:	je     0x10042fe5
10042fdc:	push   DWORD PTR [ecx+0x4]
10042fdf:	call   0x10043508
10042fe4:	pop    ecx
10042fe5:	ret    
10042fe6:	mov    eax,DWORD PTR [ecx+0x4]
10042fe9:	test   eax,eax
10042feb:	jne    0x10042ff2
10042fed:	mov    eax,0x100665a8
10042ff2:	ret    
10042ff3:	push   esi
10042ff4:	mov    esi,ecx
10042ff6:	call   0x10042fd0
10042ffb:	test   BYTE PTR [esp+0x8],0x1
10043000:	je     0x10043009
10043002:	push   esi
10043003:	call   0x10042e92
10043008:	pop    ecx
10043009:	mov    eax,esi
1004300b:	pop    esi
1004300c:	ret    0x4
1004300f:	int3   
10043010:	mov    ecx,DWORD PTR [esp+0x4]
10043014:	test   ecx,0x3
1004301a:	je     0x10043040
1004301c:	mov    al,BYTE PTR [ecx]
1004301e:	add    ecx,0x1
10043021:	test   al,al
10043023:	je     0x10043073
10043025:	test   ecx,0x3
1004302b:	jne    0x1004301c
1004302d:	add    eax,0x0
10043032:	lea    esp,[esp+0x0]
10043039:	lea    esp,[esp+0x0]
10043040:	mov    eax,DWORD PTR [ecx]
10043042:	mov    edx,0x7efefeff
10043047:	add    edx,eax
10043049:	xor    eax,0xffffffff
1004304c:	xor    eax,edx
1004304e:	add    ecx,0x4
10043051:	test   eax,0x81010100
10043056:	je     0x10043040
10043058:	mov    eax,DWORD PTR [ecx-0x4]
1004305b:	test   al,al
1004305d:	je     0x10043091
1004305f:	test   ah,ah
10043061:	je     0x10043087
10043063:	test   eax,0xff0000
10043068:	je     0x1004307d
1004306a:	test   eax,0xff000000
1004306f:	je     0x10043073
10043071:	jmp    0x10043040
10043073:	lea    eax,[ecx-0x1]
10043076:	mov    ecx,DWORD PTR [esp+0x4]
1004307a:	sub    eax,ecx
1004307c:	ret    
1004307d:	lea    eax,[ecx-0x2]
10043080:	mov    ecx,DWORD PTR [esp+0x4]
10043084:	sub    eax,ecx
10043086:	ret    
10043087:	lea    eax,[ecx-0x3]
1004308a:	mov    ecx,DWORD PTR [esp+0x4]
1004308e:	sub    eax,ecx
10043090:	ret    
10043091:	lea    eax,[ecx-0x4]
10043094:	mov    ecx,DWORD PTR [esp+0x4]
10043098:	sub    eax,ecx
1004309a:	ret    
1004309b:	push   0x14
1004309d:	push   0x10074520
100430a2:	call   0x10046c94
100430a7:	and    DWORD PTR [ebp-0x4],0x0
100430ab:	dec    DWORD PTR [ebp+0x10]
100430ae:	js     0x100430ea
100430b0:	mov    ecx,DWORD PTR [ebp+0x8]
100430b3:	sub    ecx,DWORD PTR [ebp+0xc]
100430b6:	mov    DWORD PTR [ebp+0x8],ecx
100430b9:	call   DWORD PTR [ebp+0x14]
100430bc:	jmp    0x100430ab
100430be:	mov    eax,DWORD PTR [ebp-0x14]
100430c1:	mov    DWORD PTR [ebp-0x1c],eax
100430c4:	mov    eax,DWORD PTR [ebp-0x1c]
100430c7:	mov    eax,DWORD PTR [eax]
100430c9:	mov    DWORD PTR [ebp-0x20],eax
100430cc:	mov    eax,DWORD PTR [ebp-0x20]
100430cf:	cmp    DWORD PTR [eax],0xe06d7363
100430d5:	je     0x100430e2
100430d7:	mov    DWORD PTR [ebp-0x24],0x0
100430de:	mov    eax,DWORD PTR [ebp-0x24]
100430e1:	ret    
100430e2:	call   0x10046bfe
100430e7:	mov    esp,DWORD PTR [ebp-0x18]
100430ea:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100430f1:	call   0x10046cd9
100430f6:	ret    0x10
100430f9:	push   0xc
100430fb:	push   0x10074540
10043100:	call   0x10046c94
10043105:	and    DWORD PTR [ebp-0x1c],0x0
10043109:	mov    esi,DWORD PTR [ebp+0xc]
1004310c:	mov    eax,esi
1004310e:	imul   eax,DWORD PTR [ebp+0x10]
10043112:	add    DWORD PTR [ebp+0x8],eax
10043115:	and    DWORD PTR [ebp-0x4],0x0
10043119:	dec    DWORD PTR [ebp+0x10]
1004311c:	js     0x10043129
1004311e:	sub    DWORD PTR [ebp+0x8],esi
10043121:	mov    ecx,DWORD PTR [ebp+0x8]
10043124:	call   DWORD PTR [ebp+0x14]
10043127:	jmp    0x10043119
10043129:	mov    DWORD PTR [ebp-0x1c],0x1
10043130:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10043137:	call   0x10043144
1004313c:	call   0x10046cd9
10043141:	ret    0x10
10043144:	cmp    DWORD PTR [ebp-0x1c],0x0
10043148:	jne    0x1004315b
1004314a:	push   DWORD PTR [ebp+0x14]
1004314d:	push   DWORD PTR [ebp+0x10]
10043150:	push   DWORD PTR [ebp+0xc]
10043153:	push   DWORD PTR [ebp+0x8]
10043156:	call   0x1004309b
1004315b:	ret    
1004315c:	push   ecx
1004315d:	push   ebx
1004315e:	push   ebp
1004315f:	push   esi
10043160:	push   edi
10043161:	push   DWORD PTR ds:0x100825b0
10043167:	call   0x10046ef2
1004316c:	push   DWORD PTR ds:0x100825ac
10043172:	mov    esi,eax
10043174:	mov    DWORD PTR [esp+0x18],esi
10043178:	call   0x10046ef2
1004317d:	mov    edi,eax
1004317f:	cmp    edi,esi
10043181:	pop    ecx
10043182:	pop    ecx
10043183:	jb     0x10043201
10043185:	mov    ebx,edi
10043187:	sub    ebx,esi
10043189:	lea    ebp,[ebx+0x4]
1004318c:	cmp    ebp,0x4
1004318f:	jb     0x10043201
10043191:	push   esi
10043192:	call   0x100474f5
10043197:	mov    esi,eax
10043199:	cmp    esi,ebp
1004319b:	pop    ecx
1004319c:	jae    0x100431e8
1004319e:	mov    eax,0x800
100431a3:	cmp    esi,eax
100431a5:	jae    0x100431a9
100431a7:	mov    eax,esi
100431a9:	add    eax,esi
100431ab:	cmp    eax,esi
100431ad:	jb     0x100431bf
100431af:	push   eax
100431b0:	push   DWORD PTR [esp+0x14]
100431b4:	call   0x100474aa
100431b9:	test   eax,eax
100431bb:	pop    ecx
100431bc:	pop    ecx
100431bd:	jne    0x100431d6
100431bf:	lea    eax,[esi+0x10]
100431c2:	cmp    eax,esi
100431c4:	jb     0x10043201
100431c6:	push   eax
100431c7:	push   DWORD PTR [esp+0x14]
100431cb:	call   0x100474aa
100431d0:	test   eax,eax
100431d2:	pop    ecx
100431d3:	pop    ecx
100431d4:	je     0x10043201
100431d6:	sar    ebx,0x2
100431d9:	push   eax
100431da:	lea    edi,[eax+ebx*4]
100431dd:	call   0x10046e86
100431e2:	pop    ecx
100431e3:	mov    ds:0x100825b0,eax
100431e8:	mov    esi,DWORD PTR [esp+0x18]
100431ec:	mov    DWORD PTR [edi],esi
100431ee:	add    edi,0x4
100431f1:	push   edi
100431f2:	call   0x10046e86
100431f7:	mov    ds:0x100825ac,eax
100431fc:	pop    ecx
100431fd:	mov    eax,esi
100431ff:	jmp    0x10043203
10043201:	xor    eax,eax
10043203:	pop    edi
10043204:	pop    esi
10043205:	pop    ebp
10043206:	pop    ebx
10043207:	pop    ecx
10043208:	ret    
10043209:	push   esi
1004320a:	push   0x4
1004320c:	push   0x20
1004320e:	call   0x10047462
10043213:	mov    esi,eax
10043215:	push   esi
10043216:	call   0x10046e86
1004321b:	add    esp,0xc
1004321e:	test   esi,esi
10043220:	mov    ds:0x100825b0,eax
10043225:	mov    ds:0x100825ac,eax
1004322a:	jne    0x10043231
1004322c:	push   0x18
1004322e:	pop    eax
1004322f:	pop    esi
10043230:	ret    
10043231:	and    DWORD PTR [esi],0x0
10043234:	xor    eax,eax
10043236:	pop    esi
10043237:	ret    
10043238:	push   0xc
1004323a:	push   0x10074560
1004323f:	call   0x10046c94
10043244:	call   0x100475f7
10043249:	and    DWORD PTR [ebp-0x4],0x0
1004324d:	push   DWORD PTR [ebp+0x8]
10043250:	call   0x1004315c
10043255:	pop    ecx
10043256:	mov    DWORD PTR [ebp-0x1c],eax
10043259:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10043260:	call   0x1004326e
10043265:	mov    eax,DWORD PTR [ebp-0x1c]
10043268:	call   0x10046cd9
1004326d:	ret    
1004326e:	call   0x10047600
10043273:	ret    
10043274:	push   DWORD PTR [esp+0x4]
10043278:	call   0x10043238
1004327d:	neg    eax
1004327f:	sbb    eax,eax
10043281:	neg    eax
10043283:	pop    ecx
10043284:	dec    eax
10043285:	ret    
10043286:	mov    eax,DWORD PTR [esp+0x4]
1004328a:	mov    ds:0x1007fa80,eax
1004328f:	ret    
10043290:	push   ebp
10043291:	lea    ebp,[esp-0x2a8]
10043298:	sub    esp,0x328
1004329e:	mov    eax,ds:0x1007e030
100432a3:	xor    eax,ebp
100432a5:	mov    DWORD PTR [ebp+0x2a4],eax
100432ab:	push   esi
100432ac:	mov    DWORD PTR [ebp+0x88],eax
100432b2:	mov    DWORD PTR [ebp+0x84],ecx
100432b8:	mov    DWORD PTR [ebp+0x80],edx
100432be:	mov    DWORD PTR [ebp+0x7c],ebx
100432c1:	mov    DWORD PTR [ebp+0x78],esi
100432c4:	mov    DWORD PTR [ebp+0x74],edi
100432c7:	data16 mov WORD PTR [ebp+0xa0],ss
100432ce:	data16 mov WORD PTR [ebp+0x94],cs
100432d5:	data16 mov WORD PTR [ebp+0x70],ds
100432d9:	data16 mov WORD PTR [ebp+0x6c],es
100432dd:	data16 mov WORD PTR [ebp+0x68],fs
100432e1:	data16 mov WORD PTR [ebp+0x64],gs
100432e5:	pushf  
100432e6:	pop    DWORD PTR [ebp+0x98]
100432ec:	mov    esi,DWORD PTR [ebp+0x2ac]
100432f2:	lea    eax,[ebp+0x2ac]
100432f8:	mov    DWORD PTR [ebp+0x9c],eax
100432fe:	mov    DWORD PTR [ebp-0x28],0x10001
10043305:	mov    DWORD PTR [ebp+0x90],esi
1004330b:	mov    eax,DWORD PTR [eax-0x4]
1004330e:	push   0x50
10043310:	mov    DWORD PTR [ebp+0x8c],eax
10043316:	lea    eax,[ebp-0x80]
10043319:	push   0x0
1004331b:	push   eax
1004331c:	call   0x10045c00
10043321:	lea    eax,[ebp-0x80]
10043324:	mov    DWORD PTR [ebp-0x30],eax
10043327:	lea    eax,[ebp-0x28]
1004332a:	add    esp,0xc
1004332d:	mov    DWORD PTR [ebp-0x80],0xc000000d
10043334:	mov    DWORD PTR [ebp-0x74],esi
10043337:	mov    DWORD PTR [ebp-0x2c],eax
1004333a:	call   DWORD PTR ds:0x10066184
10043340:	push   0x0
10043342:	mov    esi,eax
10043344:	call   DWORD PTR ds:0x10066180
1004334a:	lea    eax,[ebp-0x30]
1004334d:	push   eax
1004334e:	call   DWORD PTR ds:0x1006617c
10043354:	test   eax,eax
10043356:	jne    0x10043364
10043358:	test   esi,esi
1004335a:	jne    0x10043364
1004335c:	push   0x2
1004335e:	call   0x10047880
10043363:	pop    ecx
10043364:	push   0xc000000d
10043369:	call   DWORD PTR ds:0x10066108
1004336f:	push   eax
10043370:	call   DWORD PTR ds:0x10066178
10043376:	mov    ecx,DWORD PTR [ebp+0x2a4]
1004337c:	xor    ecx,ebp
1004337e:	pop    esi
1004337f:	call   0x10042e97
10043384:	add    ebp,0x2a8
1004338a:	leave  
1004338b:	ret    
1004338c:	push   ebp
1004338d:	mov    ebp,esp
1004338f:	push   DWORD PTR ds:0x1007fa80
10043395:	call   0x10046ef2
1004339a:	test   eax,eax
1004339c:	pop    ecx
1004339d:	je     0x100433a2
1004339f:	pop    ebp
100433a0:	jmp    eax
100433a2:	push   0x2
100433a4:	call   0x10047880
100433a9:	pop    ecx
100433aa:	pop    ebp
100433ab:	jmp    0x10043290
100433b0:	xor    eax,eax
100433b2:	push   eax
100433b3:	push   eax
100433b4:	push   eax
100433b5:	push   eax
100433b6:	push   eax
100433b7:	call   0x1004338c
100433bc:	add    esp,0x14
100433bf:	ret    
100433c0:	jmp    0x10042e92
100433c5:	push   ebp
100433c6:	mov    ebp,esp
100433c8:	push   esi
100433c9:	mov    esi,DWORD PTR [ebp+0x14]
100433cc:	push   edi
100433cd:	xor    edi,edi
100433cf:	cmp    esi,edi
100433d1:	jne    0x100433d7
100433d3:	xor    eax,eax
100433d5:	jmp    0x1004343c
100433d7:	cmp    DWORD PTR [ebp+0x8],edi
100433da:	jne    0x100433f7
100433dc:	call   0x10046b55
100433e1:	push   0x16
100433e3:	pop    esi
100433e4:	mov    DWORD PTR [eax],esi
100433e6:	push   edi
100433e7:	push   edi
100433e8:	push   edi
100433e9:	push   edi
100433ea:	push   edi
100433eb:	call   0x1004338c
100433f0:	add    esp,0x14
100433f3:	mov    eax,esi
100433f5:	jmp    0x1004343c
100433f7:	cmp    DWORD PTR [ebp+0x10],edi
100433fa:	je     0x10043412
100433fc:	cmp    DWORD PTR [ebp+0xc],esi
100433ff:	jb     0x10043412
10043401:	push   esi
10043402:	push   DWORD PTR [ebp+0x10]
10043405:	push   DWORD PTR [ebp+0x8]
10043408:	call   0x10045180
1004340d:	add    esp,0xc
10043410:	jmp    0x100433d3
10043412:	push   DWORD PTR [ebp+0xc]
10043415:	push   edi
10043416:	push   DWORD PTR [ebp+0x8]
10043419:	call   0x10045c00
1004341e:	add    esp,0xc
10043421:	cmp    DWORD PTR [ebp+0x10],edi
10043424:	je     0x100433dc
10043426:	cmp    DWORD PTR [ebp+0xc],esi
10043429:	jae    0x10043439
1004342b:	call   0x10046b55
10043430:	push   0x22
10043432:	pop    ecx
10043433:	mov    DWORD PTR [eax],ecx
10043435:	mov    esi,ecx
10043437:	jmp    0x100433e6
10043439:	push   0x16
1004343b:	pop    eax
1004343c:	pop    edi
1004343d:	pop    esi
1004343e:	pop    ebp
1004343f:	ret    
10043440:	push   ecx
10043441:	mov    DWORD PTR [ecx],0x100665c0
10043447:	call   0x10047888
1004344c:	pop    ecx
1004344d:	ret    
1004344e:	push   esi
1004344f:	mov    esi,ecx
10043451:	call   0x10043440
10043456:	test   BYTE PTR [esp+0x8],0x1
1004345b:	je     0x10043464
1004345d:	push   esi
1004345e:	call   0x10042e92
10043463:	pop    ecx
10043464:	mov    eax,esi
10043466:	pop    esi
10043467:	ret    0x4
1004346a:	mov    eax,DWORD PTR [esp+0x4]
1004346e:	add    ecx,0x9
10043471:	push   ecx
10043472:	add    eax,0x9
10043475:	push   eax
10043476:	call   0x10047900
1004347b:	neg    eax
1004347d:	pop    ecx
1004347e:	sbb    eax,eax
10043480:	pop    ecx
10043481:	inc    eax
10043482:	ret    0x4
10043485:	push   esi
10043486:	push   0x1
10043488:	push   0x1007e02c
1004348d:	mov    esi,ecx
1004348f:	call   0x10042f60
10043494:	mov    DWORD PTR [esi],0x100665c8
1004349a:	mov    eax,esi
1004349c:	pop    esi
1004349d:	ret    
1004349e:	push   ebp
1004349f:	mov    ebp,esp
100434a1:	sub    esp,0xc
100434a4:	jmp    0x100434b3
100434a6:	push   DWORD PTR [ebp+0x8]
100434a9:	call   0x10047992
100434ae:	test   eax,eax
100434b0:	pop    ecx
100434b1:	je     0x100434c2
100434b3:	push   DWORD PTR [ebp+0x8]
100434b6:	call   0x10044f8d
100434bb:	test   eax,eax
100434bd:	pop    ecx
100434be:	je     0x100434a6
100434c0:	leave  
100434c1:	ret    
100434c2:	test   BYTE PTR ds:0x1007fa90,0x1
100434c9:	mov    esi,0x1007fa84
100434ce:	jne    0x100434e9
100434d0:	or     DWORD PTR ds:0x1007fa90,0x1
100434d7:	mov    ecx,esi
100434d9:	call   0x10043485
100434de:	push   0x100658ce
100434e3:	call   0x10043274
100434e8:	pop    ecx
100434e9:	push   esi
100434ea:	lea    ecx,[ebp-0xc]
100434ed:	call   0x10042f78
100434f2:	push   0x10074cf8
100434f7:	lea    eax,[ebp-0xc]
100434fa:	push   eax
100434fb:	mov    DWORD PTR [ebp-0xc],0x100665c8
10043502:	call   0x100479b4
10043507:	int3   
10043508:	push   0xc
1004350a:	push   0x10074580
1004350f:	call   0x10046c94
10043514:	mov    esi,DWORD PTR [ebp+0x8]
10043517:	test   esi,esi
10043519:	je     0x10043590
1004351b:	cmp    DWORD PTR ds:0x100825a0,0x3
10043522:	jne    0x10043567
10043524:	push   0x4
10043526:	call   0x10047c9d
1004352b:	pop    ecx
1004352c:	and    DWORD PTR [ebp-0x4],0x0
10043530:	push   esi
10043531:	call   0x10047d16
10043536:	pop    ecx
10043537:	mov    DWORD PTR [ebp-0x1c],eax
1004353a:	test   eax,eax
1004353c:	je     0x10043547
1004353e:	push   esi
1004353f:	push   eax
10043540:	call   0x10047d41
10043545:	pop    ecx
10043546:	pop    ecx
10043547:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004354e:	call   0x1004355e
10043553:	cmp    DWORD PTR [ebp-0x1c],0x0
10043557:	jne    0x10043590
10043559:	push   DWORD PTR [ebp+0x8]
1004355c:	jmp    0x10043568
1004355e:	push   0x4
10043560:	call   0x10047bc5
10043565:	pop    ecx
10043566:	ret    
10043567:	push   esi
10043568:	push   0x0
1004356a:	push   DWORD PTR ds:0x1007fe38
10043570:	call   DWORD PTR ds:0x10066188
10043576:	test   eax,eax
10043578:	jne    0x10043590
1004357a:	call   0x10046b55
1004357f:	mov    esi,eax
10043581:	call   DWORD PTR ds:0x100660cc
10043587:	push   eax
10043588:	call   0x10046b1a
1004358d:	mov    DWORD PTR [esi],eax
1004358f:	pop    ecx
10043590:	call   0x10046cd9
10043595:	ret    
10043596:	push   0xc
10043598:	push   0x100745a0
1004359d:	call   0x10046c94
100435a2:	mov    ecx,DWORD PTR [ebp+0x8]
100435a5:	xor    edi,edi
100435a7:	cmp    ecx,edi
100435a9:	jbe    0x100435d9
100435ab:	push   0xffffffe0
100435ad:	pop    eax
100435ae:	xor    edx,edx
100435b0:	div    ecx
100435b2:	cmp    eax,DWORD PTR [ebp+0xc]
100435b5:	sbb    eax,eax
100435b7:	inc    eax
100435b8:	jne    0x100435d9
100435ba:	call   0x10046b55
100435bf:	mov    DWORD PTR [eax],0xc
100435c5:	push   edi
100435c6:	push   edi
100435c7:	push   edi
100435c8:	push   edi
100435c9:	push   edi
100435ca:	call   0x1004338c
100435cf:	add    esp,0x14
100435d2:	xor    eax,eax
100435d4:	jmp    0x100436ae
100435d9:	imul   ecx,DWORD PTR [ebp+0xc]
100435dd:	mov    esi,ecx
100435df:	mov    DWORD PTR [ebp+0x8],esi
100435e2:	cmp    esi,edi
100435e4:	jne    0x100435e9
100435e6:	xor    esi,esi
100435e8:	inc    esi
100435e9:	xor    ebx,ebx
100435eb:	mov    DWORD PTR [ebp-0x1c],ebx
100435ee:	cmp    esi,0xffffffe0
100435f1:	ja     0x1004365c
100435f3:	cmp    DWORD PTR ds:0x100825a0,0x3
100435fa:	jne    0x10043647
100435fc:	add    esi,0xf
100435ff:	and    esi,0xfffffff0
10043602:	mov    DWORD PTR [ebp+0xc],esi
10043605:	mov    eax,DWORD PTR [ebp+0x8]
10043608:	cmp    eax,DWORD PTR ds:0x10082590
1004360e:	ja     0x10043647
10043610:	push   0x4
10043612:	call   0x10047c9d
10043617:	pop    ecx
10043618:	mov    DWORD PTR [ebp-0x4],edi
1004361b:	push   DWORD PTR [ebp+0x8]
1004361e:	call   0x100484ea
10043623:	pop    ecx
10043624:	mov    DWORD PTR [ebp-0x1c],eax
10043627:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004362e:	call   0x10043692
10043633:	mov    ebx,DWORD PTR [ebp-0x1c]
10043636:	cmp    ebx,edi
10043638:	je     0x1004364b
1004363a:	push   DWORD PTR [ebp+0x8]
1004363d:	push   edi
1004363e:	push   ebx
1004363f:	call   0x10045c00
10043644:	add    esp,0xc
10043647:	cmp    ebx,edi
10043649:	jne    0x100436ac
1004364b:	push   esi
1004364c:	push   0x8
1004364e:	push   DWORD PTR ds:0x1007fe38
10043654:	call   DWORD PTR ds:0x1006618c
1004365a:	mov    ebx,eax
1004365c:	cmp    ebx,edi
1004365e:	jne    0x100436ac
10043660:	cmp    DWORD PTR ds:0x1007ff94,edi
10043666:	je     0x1004369b
10043668:	push   esi
10043669:	call   0x10047992
1004366e:	pop    ecx
1004366f:	test   eax,eax
10043671:	jne    0x100435e9
10043677:	mov    eax,DWORD PTR [ebp+0x10]
1004367a:	cmp    eax,edi
1004367c:	je     0x100435d2
10043682:	mov    DWORD PTR [eax],0xc
10043688:	jmp    0x100435d2
1004368d:	xor    edi,edi
1004368f:	mov    esi,DWORD PTR [ebp+0xc]
10043692:	push   0x4
10043694:	call   0x10047bc5
10043699:	pop    ecx
1004369a:	ret    
1004369b:	cmp    ebx,edi
1004369d:	jne    0x100436ac
1004369f:	mov    eax,DWORD PTR [ebp+0x10]
100436a2:	cmp    eax,edi
100436a4:	je     0x100436ac
100436a6:	mov    DWORD PTR [eax],0xc
100436ac:	mov    eax,ebx
100436ae:	call   0x10046cd9
100436b3:	ret    
100436b4:	push   ebp
100436b5:	mov    ebp,esp
100436b7:	push   ecx
100436b8:	and    DWORD PTR [ebp-0x4],0x0
100436bc:	push   edi
100436bd:	lea    eax,[ebp-0x4]
100436c0:	push   eax
100436c1:	push   DWORD PTR [ebp+0xc]
100436c4:	push   DWORD PTR [ebp+0x8]
100436c7:	call   0x10043596
100436cc:	mov    edi,eax
100436ce:	add    esp,0xc
100436d1:	test   edi,edi
100436d3:	jne    0x100436ee
100436d5:	push   esi
100436d6:	mov    esi,DWORD PTR [ebp-0x4]
100436d9:	test   esi,esi
100436db:	je     0x100436ed
100436dd:	call   0x10046b55
100436e2:	test   eax,eax
100436e4:	je     0x100436ed
100436e6:	call   0x10046b55
100436eb:	mov    DWORD PTR [eax],esi
100436ed:	pop    esi
100436ee:	mov    eax,edi
100436f0:	pop    edi
100436f1:	leave  
100436f2:	ret    
100436f3:	mov    eax,DWORD PTR [esp+0x4]
100436f7:	mov    cx,WORD PTR [eax]
100436fa:	inc    eax
100436fb:	inc    eax
100436fc:	test   cx,cx
100436ff:	jne    0x100436f7
10043701:	sub    eax,DWORD PTR [esp+0x4]
10043705:	sar    eax,1
10043707:	dec    eax
10043708:	ret    
10043709:	push   DWORD PTR [esp+0x8]
1004370d:	push   0x0
1004370f:	push   DWORD PTR [esp+0xc]
10043713:	push   0x10048952
10043718:	call   0x100590db
1004371d:	add    esp,0x10
10043720:	ret    
10043721:	jmp    0x1004349e
10043726:	push   ebp
10043727:	mov    ebp,esp
10043729:	push   esi
1004372a:	push   edi
1004372b:	mov    edi,DWORD PTR [ebp+0x10]
1004372e:	mov    eax,edi
10043730:	sub    eax,0x0
10043733:	je     0x10044d1e
10043739:	dec    eax
1004373a:	je     0x10044d0d
10043740:	dec    eax
10043741:	je     0x10044cdf
10043747:	dec    eax
10043748:	je     0x10044c97
1004374e:	dec    eax
1004374f:	je     0x10044c0e
10043755:	mov    ecx,DWORD PTR [ebp+0xc]
10043758:	mov    eax,DWORD PTR [ebp+0x8]
1004375b:	push   ebx
1004375c:	push   0x20
1004375e:	pop    edx
1004375f:	jmp    0x10043bd6
10043764:	mov    esi,DWORD PTR [eax]
10043766:	cmp    esi,DWORD PTR [ecx]
10043768:	je     0x100437e6
1004376a:	movzx  esi,BYTE PTR [eax]
1004376d:	movzx  ebx,BYTE PTR [ecx]
10043770:	sub    esi,ebx
10043772:	je     0x10043789
10043774:	xor    ebx,ebx
10043776:	test   esi,esi
10043778:	setg   bl
1004377b:	lea    ebx,[ebx+ebx*1-0x1]
1004377f:	mov    esi,ebx
10043781:	test   esi,esi
10043783:	jne    0x10043bf2
10043789:	movzx  esi,BYTE PTR [eax+0x1]
1004378d:	movzx  ebx,BYTE PTR [ecx+0x1]
10043791:	sub    esi,ebx
10043793:	je     0x100437aa
10043795:	xor    ebx,ebx
10043797:	test   esi,esi
10043799:	setg   bl
1004379c:	lea    ebx,[ebx+ebx*1-0x1]
100437a0:	mov    esi,ebx
100437a2:	test   esi,esi
100437a4:	jne    0x10043bf2
100437aa:	movzx  esi,BYTE PTR [eax+0x2]
100437ae:	movzx  ebx,BYTE PTR [ecx+0x2]
100437b2:	sub    esi,ebx
100437b4:	je     0x100437cb
100437b6:	xor    ebx,ebx
100437b8:	test   esi,esi
100437ba:	setg   bl
100437bd:	lea    ebx,[ebx+ebx*1-0x1]
100437c1:	mov    esi,ebx
100437c3:	test   esi,esi
100437c5:	jne    0x10043bf2
100437cb:	movzx  esi,BYTE PTR [eax+0x3]
100437cf:	movzx  ebx,BYTE PTR [ecx+0x3]
100437d3:	sub    esi,ebx
100437d5:	je     0x100437e8
100437d7:	xor    ebx,ebx
100437d9:	test   esi,esi
100437db:	setg   bl
100437de:	lea    ebx,[ebx+ebx*1-0x1]
100437e2:	mov    esi,ebx
100437e4:	jmp    0x100437e8
100437e6:	xor    esi,esi
100437e8:	test   esi,esi
100437ea:	jne    0x10043bf2
100437f0:	mov    esi,DWORD PTR [eax+0x4]
100437f3:	cmp    esi,DWORD PTR [ecx+0x4]
100437f6:	je     0x10043876
100437f8:	movzx  esi,BYTE PTR [eax+0x4]
100437fc:	movzx  ebx,BYTE PTR [ecx+0x4]
10043800:	sub    esi,ebx
10043802:	je     0x10043819
10043804:	xor    ebx,ebx
10043806:	test   esi,esi
10043808:	setg   bl
1004380b:	lea    ebx,[ebx+ebx*1-0x1]
1004380f:	mov    esi,ebx
10043811:	test   esi,esi
10043813:	jne    0x10043bf2
10043819:	movzx  esi,BYTE PTR [eax+0x5]
1004381d:	movzx  ebx,BYTE PTR [ecx+0x5]
10043821:	sub    esi,ebx
10043823:	je     0x1004383a
10043825:	xor    ebx,ebx
10043827:	test   esi,esi
10043829:	setg   bl
1004382c:	lea    ebx,[ebx+ebx*1-0x1]
10043830:	mov    esi,ebx
10043832:	test   esi,esi
10043834:	jne    0x10043bf2
1004383a:	movzx  esi,BYTE PTR [eax+0x6]
1004383e:	movzx  ebx,BYTE PTR [ecx+0x6]
10043842:	sub    esi,ebx
10043844:	je     0x1004385b
10043846:	xor    ebx,ebx
10043848:	test   esi,esi
1004384a:	setg   bl
1004384d:	lea    ebx,[ebx+ebx*1-0x1]
10043851:	mov    esi,ebx
10043853:	test   esi,esi
10043855:	jne    0x10043bf2
1004385b:	movzx  esi,BYTE PTR [eax+0x7]
1004385f:	movzx  ebx,BYTE PTR [ecx+0x7]
10043863:	sub    esi,ebx
10043865:	je     0x10043878
10043867:	xor    ebx,ebx
10043869:	test   esi,esi
1004386b:	setg   bl
1004386e:	lea    ebx,[ebx+ebx*1-0x1]
10043872:	mov    esi,ebx
10043874:	jmp    0x10043878
10043876:	xor    esi,esi
10043878:	test   esi,esi
1004387a:	jne    0x10043bf2
10043880:	mov    esi,DWORD PTR [eax+0x8]
10043883:	cmp    esi,DWORD PTR [ecx+0x8]
10043886:	je     0x10043906
10043888:	movzx  esi,BYTE PTR [eax+0x8]
1004388c:	movzx  ebx,BYTE PTR [ecx+0x8]
10043890:	sub    esi,ebx
10043892:	je     0x100438a9
10043894:	xor    ebx,ebx
10043896:	test   esi,esi
10043898:	setg   bl
1004389b:	lea    ebx,[ebx+ebx*1-0x1]
1004389f:	mov    esi,ebx
100438a1:	test   esi,esi
100438a3:	jne    0x10043bf2
100438a9:	movzx  esi,BYTE PTR [eax+0x9]
100438ad:	movzx  ebx,BYTE PTR [ecx+0x9]
100438b1:	sub    esi,ebx
100438b3:	je     0x100438ca
100438b5:	xor    ebx,ebx
100438b7:	test   esi,esi
100438b9:	setg   bl
100438bc:	lea    ebx,[ebx+ebx*1-0x1]
100438c0:	mov    esi,ebx
100438c2:	test   esi,esi
100438c4:	jne    0x10043bf2
100438ca:	movzx  esi,BYTE PTR [eax+0xa]
100438ce:	movzx  ebx,BYTE PTR [ecx+0xa]
100438d2:	sub    esi,ebx
100438d4:	je     0x100438eb
100438d6:	xor    ebx,ebx
100438d8:	test   esi,esi
100438da:	setg   bl
100438dd:	lea    ebx,[ebx+ebx*1-0x1]
100438e1:	mov    esi,ebx
100438e3:	test   esi,esi
100438e5:	jne    0x10043bf2
100438eb:	movzx  esi,BYTE PTR [eax+0xb]
100438ef:	movzx  ebx,BYTE PTR [ecx+0xb]
100438f3:	sub    esi,ebx
100438f5:	je     0x10043908
100438f7:	xor    ebx,ebx
100438f9:	test   esi,esi
100438fb:	setg   bl
100438fe:	lea    ebx,[ebx+ebx*1-0x1]
10043902:	mov    esi,ebx
10043904:	jmp    0x10043908
10043906:	xor    esi,esi
10043908:	test   esi,esi
1004390a:	jne    0x10043bf2
10043910:	mov    esi,DWORD PTR [eax+0xc]
10043913:	cmp    esi,DWORD PTR [ecx+0xc]
10043916:	je     0x10043996
10043918:	movzx  esi,BYTE PTR [eax+0xc]
1004391c:	movzx  ebx,BYTE PTR [ecx+0xc]
10043920:	sub    esi,ebx
10043922:	je     0x10043939
10043924:	xor    ebx,ebx
10043926:	test   esi,esi
10043928:	setg   bl
1004392b:	lea    ebx,[ebx+ebx*1-0x1]
1004392f:	mov    esi,ebx
10043931:	test   esi,esi
10043933:	jne    0x10043bf2
10043939:	movzx  esi,BYTE PTR [eax+0xd]
1004393d:	movzx  ebx,BYTE PTR [ecx+0xd]
10043941:	sub    esi,ebx
10043943:	je     0x1004395a
10043945:	xor    ebx,ebx
10043947:	test   esi,esi
10043949:	setg   bl
1004394c:	lea    ebx,[ebx+ebx*1-0x1]
10043950:	mov    esi,ebx
10043952:	test   esi,esi
10043954:	jne    0x10043bf2
1004395a:	movzx  esi,BYTE PTR [eax+0xe]
1004395e:	movzx  ebx,BYTE PTR [ecx+0xe]
10043962:	sub    esi,ebx
10043964:	je     0x1004397b
10043966:	xor    ebx,ebx
10043968:	test   esi,esi
1004396a:	setg   bl
1004396d:	lea    ebx,[ebx+ebx*1-0x1]
10043971:	mov    esi,ebx
10043973:	test   esi,esi
10043975:	jne    0x10043bf2
1004397b:	movzx  esi,BYTE PTR [eax+0xf]
1004397f:	movzx  ebx,BYTE PTR [ecx+0xf]
10043983:	sub    esi,ebx
10043985:	je     0x10043998
10043987:	xor    ebx,ebx
10043989:	test   esi,esi
1004398b:	setg   bl
1004398e:	lea    ebx,[ebx+ebx*1-0x1]
10043992:	mov    esi,ebx
10043994:	jmp    0x10043998
10043996:	xor    esi,esi
10043998:	test   esi,esi
1004399a:	jne    0x10043bf2
100439a0:	mov    esi,DWORD PTR [eax+0x10]
100439a3:	cmp    esi,DWORD PTR [ecx+0x10]
100439a6:	je     0x10043a26
100439a8:	movzx  ebx,BYTE PTR [ecx+0x10]
100439ac:	movzx  esi,BYTE PTR [eax+0x10]
100439b0:	sub    esi,ebx
100439b2:	je     0x100439c9
100439b4:	xor    ebx,ebx
100439b6:	test   esi,esi
100439b8:	setg   bl
100439bb:	lea    ebx,[ebx+ebx*1-0x1]
100439bf:	mov    esi,ebx
100439c1:	test   esi,esi
100439c3:	jne    0x10043bf2
100439c9:	movzx  esi,BYTE PTR [eax+0x11]
100439cd:	movzx  ebx,BYTE PTR [ecx+0x11]
100439d1:	sub    esi,ebx
100439d3:	je     0x100439ea
100439d5:	xor    ebx,ebx
100439d7:	test   esi,esi
100439d9:	setg   bl
100439dc:	lea    ebx,[ebx+ebx*1-0x1]
100439e0:	mov    esi,ebx
100439e2:	test   esi,esi
100439e4:	jne    0x10043bf2
100439ea:	movzx  esi,BYTE PTR [eax+0x12]
100439ee:	movzx  ebx,BYTE PTR [ecx+0x12]
100439f2:	sub    esi,ebx
100439f4:	je     0x10043a0b
100439f6:	xor    ebx,ebx
100439f8:	test   esi,esi
100439fa:	setg   bl
100439fd:	lea    ebx,[ebx+ebx*1-0x1]
10043a01:	mov    esi,ebx
10043a03:	test   esi,esi
10043a05:	jne    0x10043bf2
10043a0b:	movzx  esi,BYTE PTR [eax+0x13]
10043a0f:	movzx  ebx,BYTE PTR [ecx+0x13]
10043a13:	sub    esi,ebx
10043a15:	je     0x10043a28
10043a17:	xor    ebx,ebx
10043a19:	test   esi,esi
10043a1b:	setg   bl
10043a1e:	lea    ebx,[ebx+ebx*1-0x1]
10043a22:	mov    esi,ebx
10043a24:	jmp    0x10043a28
10043a26:	xor    esi,esi
10043a28:	test   esi,esi
10043a2a:	jne    0x10043bf2
10043a30:	mov    esi,DWORD PTR [eax+0x14]
10043a33:	cmp    esi,DWORD PTR [ecx+0x14]
10043a36:	je     0x10043ab6
10043a38:	movzx  esi,BYTE PTR [eax+0x14]
10043a3c:	movzx  ebx,BYTE PTR [ecx+0x14]
10043a40:	sub    esi,ebx
10043a42:	je     0x10043a59
10043a44:	xor    ebx,ebx
10043a46:	test   esi,esi
10043a48:	setg   bl
10043a4b:	lea    ebx,[ebx+ebx*1-0x1]
10043a4f:	mov    esi,ebx
10043a51:	test   esi,esi
10043a53:	jne    0x10043bf2
10043a59:	movzx  esi,BYTE PTR [eax+0x15]
10043a5d:	movzx  ebx,BYTE PTR [ecx+0x15]
10043a61:	sub    esi,ebx
10043a63:	je     0x10043a7a
10043a65:	xor    ebx,ebx
10043a67:	test   esi,esi
10043a69:	setg   bl
10043a6c:	lea    ebx,[ebx+ebx*1-0x1]
10043a70:	mov    esi,ebx
10043a72:	test   esi,esi
10043a74:	jne    0x10043bf2
10043a7a:	movzx  esi,BYTE PTR [eax+0x16]
10043a7e:	movzx  ebx,BYTE PTR [ecx+0x16]
10043a82:	sub    esi,ebx
10043a84:	je     0x10043a9b
10043a86:	xor    ebx,ebx
10043a88:	test   esi,esi
10043a8a:	setg   bl
10043a8d:	lea    ebx,[ebx+ebx*1-0x1]
10043a91:	mov    esi,ebx
10043a93:	test   esi,esi
10043a95:	jne    0x10043bf2
10043a9b:	movzx  esi,BYTE PTR [eax+0x17]
10043a9f:	movzx  ebx,BYTE PTR [ecx+0x17]
10043aa3:	sub    esi,ebx
10043aa5:	je     0x10043ab8
10043aa7:	xor    ebx,ebx
10043aa9:	test   esi,esi
10043aab:	setg   bl
10043aae:	lea    ebx,[ebx+ebx*1-0x1]
10043ab2:	mov    esi,ebx
10043ab4:	jmp    0x10043ab8
10043ab6:	xor    esi,esi
10043ab8:	test   esi,esi
10043aba:	jne    0x10043bf2
10043ac0:	mov    esi,DWORD PTR [eax+0x18]
10043ac3:	cmp    esi,DWORD PTR [ecx+0x18]
10043ac6:	je     0x10043b46
10043ac8:	movzx  esi,BYTE PTR [eax+0x18]
10043acc:	movzx  ebx,BYTE PTR [ecx+0x18]
10043ad0:	sub    esi,ebx
10043ad2:	je     0x10043ae9
10043ad4:	xor    ebx,ebx
10043ad6:	test   esi,esi
10043ad8:	setg   bl
10043adb:	lea    ebx,[ebx+ebx*1-0x1]
10043adf:	mov    esi,ebx
10043ae1:	test   esi,esi
10043ae3:	jne    0x10043bf2
10043ae9:	movzx  esi,BYTE PTR [eax+0x19]
10043aed:	movzx  ebx,BYTE PTR [ecx+0x19]
10043af1:	sub    esi,ebx
10043af3:	je     0x10043b0a
10043af5:	xor    ebx,ebx
10043af7:	test   esi,esi
10043af9:	setg   bl
10043afc:	lea    ebx,[ebx+ebx*1-0x1]
10043b00:	mov    esi,ebx
10043b02:	test   esi,esi
10043b04:	jne    0x10043bf2
10043b0a:	movzx  esi,BYTE PTR [eax+0x1a]
10043b0e:	movzx  ebx,BYTE PTR [ecx+0x1a]
10043b12:	sub    esi,ebx
10043b14:	je     0x10043b2b
10043b16:	xor    ebx,ebx
10043b18:	test   esi,esi
10043b1a:	setg   bl
10043b1d:	lea    ebx,[ebx+ebx*1-0x1]
10043b21:	mov    esi,ebx
10043b23:	test   esi,esi
10043b25:	jne    0x10043bf2
10043b2b:	movzx  esi,BYTE PTR [eax+0x1b]
10043b2f:	movzx  ebx,BYTE PTR [ecx+0x1b]
10043b33:	sub    esi,ebx
10043b35:	je     0x10043b48
10043b37:	xor    ebx,ebx
10043b39:	test   esi,esi
10043b3b:	setg   bl
10043b3e:	lea    ebx,[ebx+ebx*1-0x1]
10043b42:	mov    esi,ebx
10043b44:	jmp    0x10043b48
10043b46:	xor    esi,esi
10043b48:	test   esi,esi
10043b4a:	jne    0x10043bf2
10043b50:	mov    esi,DWORD PTR [eax+0x1c]
10043b53:	cmp    esi,DWORD PTR [ecx+0x1c]
10043b56:	je     0x10043bca
10043b58:	movzx  esi,BYTE PTR [eax+0x1c]
10043b5c:	movzx  ebx,BYTE PTR [ecx+0x1c]
10043b60:	sub    esi,ebx
10043b62:	je     0x10043b75
10043b64:	xor    ebx,ebx
10043b66:	test   esi,esi
10043b68:	setg   bl
10043b6b:	lea    ebx,[ebx+ebx*1-0x1]
10043b6f:	mov    esi,ebx
10043b71:	test   esi,esi
10043b73:	jne    0x10043bf2
10043b75:	movzx  esi,BYTE PTR [eax+0x1d]
10043b79:	movzx  ebx,BYTE PTR [ecx+0x1d]
10043b7d:	sub    esi,ebx
10043b7f:	je     0x10043b92
10043b81:	xor    ebx,ebx
10043b83:	test   esi,esi
10043b85:	setg   bl
10043b88:	lea    ebx,[ebx+ebx*1-0x1]
10043b8c:	mov    esi,ebx
10043b8e:	test   esi,esi
10043b90:	jne    0x10043bf2
10043b92:	movzx  esi,BYTE PTR [eax+0x1e]
10043b96:	movzx  ebx,BYTE PTR [ecx+0x1e]
10043b9a:	sub    esi,ebx
10043b9c:	je     0x10043baf
10043b9e:	xor    ebx,ebx
10043ba0:	test   esi,esi
10043ba2:	setg   bl
10043ba5:	lea    ebx,[ebx+ebx*1-0x1]
10043ba9:	mov    esi,ebx
10043bab:	test   esi,esi
10043bad:	jne    0x10043bf2
10043baf:	movzx  esi,BYTE PTR [eax+0x1f]
10043bb3:	movzx  ebx,BYTE PTR [ecx+0x1f]
10043bb7:	sub    esi,ebx
10043bb9:	je     0x10043bcc
10043bbb:	xor    ebx,ebx
10043bbd:	test   esi,esi
10043bbf:	setg   bl
10043bc2:	lea    ebx,[ebx+ebx*1-0x1]
10043bc6:	mov    esi,ebx
10043bc8:	jmp    0x10043bcc
10043bca:	xor    esi,esi
10043bcc:	test   esi,esi
10043bce:	jne    0x10043bf2
10043bd0:	add    eax,edx
10043bd2:	add    ecx,edx
10043bd4:	sub    edi,edx
10043bd6:	cmp    edi,edx
10043bd8:	jae    0x10043764
10043bde:	add    eax,edi
10043be0:	add    ecx,edi
10043be2:	cmp    edi,0x1f
10043be5:	ja     0x10043fc5
10043beb:	jmp    DWORD PTR [edi*4+0x10044d26]
10043bf2:	mov    eax,esi
10043bf4:	jmp    0x10043fc7
10043bf9:	mov    edx,DWORD PTR [eax-0x1c]
10043bfc:	cmp    edx,DWORD PTR [ecx-0x1c]
10043bff:	je     0x10043c72
10043c01:	movzx  esi,dl
10043c04:	movzx  edx,BYTE PTR [ecx-0x1c]
10043c08:	sub    esi,edx
10043c0a:	je     0x10043c1d
10043c0c:	xor    edx,edx
10043c0e:	test   esi,esi
10043c10:	setg   dl
10043c13:	lea    edx,[edx+edx*1-0x1]
10043c17:	mov    esi,edx
10043c19:	test   esi,esi
10043c1b:	jne    0x10043bf2
10043c1d:	movzx  esi,BYTE PTR [eax-0x1b]
10043c21:	movzx  edx,BYTE PTR [ecx-0x1b]
10043c25:	sub    esi,edx
10043c27:	je     0x10043c3a
10043c29:	xor    edx,edx
10043c2b:	test   esi,esi
10043c2d:	setg   dl
10043c30:	lea    edx,[edx+edx*1-0x1]
10043c34:	mov    esi,edx
10043c36:	test   esi,esi
10043c38:	jne    0x10043bf2
10043c3a:	movzx  esi,BYTE PTR [eax-0x1a]
10043c3e:	movzx  edx,BYTE PTR [ecx-0x1a]
10043c42:	sub    esi,edx
10043c44:	je     0x10043c57
10043c46:	xor    edx,edx
10043c48:	test   esi,esi
10043c4a:	setg   dl
10043c4d:	lea    edx,[edx+edx*1-0x1]
10043c51:	mov    esi,edx
10043c53:	test   esi,esi
10043c55:	jne    0x10043bf2
10043c57:	movzx  esi,BYTE PTR [eax-0x19]
10043c5b:	movzx  edx,BYTE PTR [ecx-0x19]
10043c5f:	sub    esi,edx
10043c61:	je     0x10043c74
10043c63:	xor    edx,edx
10043c65:	test   esi,esi
10043c67:	setg   dl
10043c6a:	lea    edx,[edx+edx*1-0x1]
10043c6e:	mov    esi,edx
10043c70:	jmp    0x10043c74
10043c72:	xor    esi,esi
10043c74:	test   esi,esi
10043c76:	jne    0x10043bf2
10043c7c:	mov    edx,DWORD PTR [eax-0x18]
10043c7f:	cmp    edx,DWORD PTR [ecx-0x18]
10043c82:	je     0x10043d01
10043c84:	movzx  esi,dl
10043c87:	movzx  edx,BYTE PTR [ecx-0x18]
10043c8b:	sub    esi,edx
10043c8d:	je     0x10043ca4
10043c8f:	xor    edx,edx
10043c91:	test   esi,esi
10043c93:	setg   dl
10043c96:	lea    edx,[edx+edx*1-0x1]
10043c9a:	mov    esi,edx
10043c9c:	test   esi,esi
10043c9e:	jne    0x10043bf2
10043ca4:	movzx  esi,BYTE PTR [eax-0x17]
10043ca8:	movzx  edx,BYTE PTR [ecx-0x17]
10043cac:	sub    esi,edx
10043cae:	je     0x10043cc5
10043cb0:	xor    edx,edx
10043cb2:	test   esi,esi
10043cb4:	setg   dl
10043cb7:	lea    edx,[edx+edx*1-0x1]
10043cbb:	mov    esi,edx
10043cbd:	test   esi,esi
10043cbf:	jne    0x10043bf2
10043cc5:	movzx  esi,BYTE PTR [eax-0x16]
10043cc9:	movzx  edx,BYTE PTR [ecx-0x16]
10043ccd:	sub    esi,edx
10043ccf:	je     0x10043ce6
10043cd1:	xor    edx,edx
10043cd3:	test   esi,esi
10043cd5:	setg   dl
10043cd8:	lea    edx,[edx+edx*1-0x1]
10043cdc:	mov    esi,edx
10043cde:	test   esi,esi
10043ce0:	jne    0x10043bf2
10043ce6:	movzx  esi,BYTE PTR [eax-0x15]
10043cea:	movzx  edx,BYTE PTR [ecx-0x15]
10043cee:	sub    esi,edx
10043cf0:	je     0x10043d03
10043cf2:	xor    edx,edx
10043cf4:	test   esi,esi
10043cf6:	setg   dl
10043cf9:	lea    edx,[edx+edx*1-0x1]
10043cfd:	mov    esi,edx
10043cff:	jmp    0x10043d03
10043d01:	xor    esi,esi
10043d03:	test   esi,esi
10043d05:	jne    0x10043bf2
10043d0b:	mov    edx,DWORD PTR [eax-0x14]
10043d0e:	cmp    edx,DWORD PTR [ecx-0x14]
10043d11:	je     0x10043d90
10043d13:	movzx  esi,dl
10043d16:	movzx  edx,BYTE PTR [ecx-0x14]
10043d1a:	sub    esi,edx
10043d1c:	je     0x10043d33
10043d1e:	xor    edx,edx
10043d20:	test   esi,esi
10043d22:	setg   dl
10043d25:	lea    edx,[edx+edx*1-0x1]
10043d29:	mov    esi,edx
10043d2b:	test   esi,esi
10043d2d:	jne    0x10043bf2
10043d33:	movzx  esi,BYTE PTR [eax-0x13]
10043d37:	movzx  edx,BYTE PTR [ecx-0x13]
10043d3b:	sub    esi,edx
10043d3d:	je     0x10043d54
10043d3f:	xor    edx,edx
10043d41:	test   esi,esi
10043d43:	setg   dl
10043d46:	lea    edx,[edx+edx*1-0x1]
10043d4a:	mov    esi,edx
10043d4c:	test   esi,esi
10043d4e:	jne    0x10043bf2
10043d54:	movzx  esi,BYTE PTR [eax-0x12]
10043d58:	movzx  edx,BYTE PTR [ecx-0x12]
10043d5c:	sub    esi,edx
10043d5e:	je     0x10043d75
10043d60:	xor    edx,edx
10043d62:	test   esi,esi
10043d64:	setg   dl
10043d67:	lea    edx,[edx+edx*1-0x1]
10043d6b:	mov    esi,edx
10043d6d:	test   esi,esi
10043d6f:	jne    0x10043bf2
10043d75:	movzx  esi,BYTE PTR [eax-0x11]
10043d79:	movzx  edx,BYTE PTR [ecx-0x11]
10043d7d:	sub    esi,edx
10043d7f:	je     0x10043d92
10043d81:	xor    edx,edx
10043d83:	test   esi,esi
10043d85:	setg   dl
10043d88:	lea    edx,[edx+edx*1-0x1]
10043d8c:	mov    esi,edx
10043d8e:	jmp    0x10043d92
10043d90:	xor    esi,esi
10043d92:	test   esi,esi
10043d94:	jne    0x10043bf2
10043d9a:	mov    edx,DWORD PTR [eax-0x10]
10043d9d:	cmp    edx,DWORD PTR [ecx-0x10]
10043da0:	je     0x10043e1f
10043da2:	movzx  esi,dl
10043da5:	movzx  edx,BYTE PTR [ecx-0x10]
10043da9:	sub    esi,edx
10043dab:	je     0x10043dc2
10043dad:	xor    edx,edx
10043daf:	test   esi,esi
10043db1:	setg   dl
10043db4:	lea    edx,[edx+edx*1-0x1]
10043db8:	mov    esi,edx
10043dba:	test   esi,esi
10043dbc:	jne    0x10043bf2
10043dc2:	movzx  esi,BYTE PTR [eax-0xf]
10043dc6:	movzx  edx,BYTE PTR [ecx-0xf]
10043dca:	sub    esi,edx
10043dcc:	je     0x10043de3
10043dce:	xor    edx,edx
10043dd0:	test   esi,esi
10043dd2:	setg   dl
10043dd5:	lea    edx,[edx+edx*1-0x1]
10043dd9:	mov    esi,edx
10043ddb:	test   esi,esi
10043ddd:	jne    0x10043bf2
10043de3:	movzx  esi,BYTE PTR [eax-0xe]
10043de7:	movzx  edx,BYTE PTR [ecx-0xe]
10043deb:	sub    esi,edx
10043ded:	je     0x10043e04
10043def:	xor    edx,edx
10043df1:	test   esi,esi
10043df3:	setg   dl
10043df6:	lea    edx,[edx+edx*1-0x1]
10043dfa:	mov    esi,edx
10043dfc:	test   esi,esi
10043dfe:	jne    0x10043bf2
10043e04:	movzx  esi,BYTE PTR [eax-0xd]
10043e08:	movzx  edx,BYTE PTR [ecx-0xd]
10043e0c:	sub    esi,edx
10043e0e:	je     0x10043e21
10043e10:	xor    edx,edx
10043e12:	test   esi,esi
10043e14:	setg   dl
10043e17:	lea    edx,[edx+edx*1-0x1]
10043e1b:	mov    esi,edx
10043e1d:	jmp    0x10043e21
10043e1f:	xor    esi,esi
10043e21:	test   esi,esi
10043e23:	jne    0x10043bf2
10043e29:	mov    edx,DWORD PTR [eax-0xc]
10043e2c:	cmp    edx,DWORD PTR [ecx-0xc]
10043e2f:	je     0x10043eaf
10043e31:	movzx  edx,BYTE PTR [ecx-0xc]
10043e35:	movzx  esi,BYTE PTR [eax-0xc]
10043e39:	sub    esi,edx
10043e3b:	je     0x10043e52
10043e3d:	xor    edx,edx
10043e3f:	test   esi,esi
10043e41:	setg   dl
10043e44:	lea    edx,[edx+edx*1-0x1]
10043e48:	mov    esi,edx
10043e4a:	test   esi,esi
10043e4c:	jne    0x10043bf2
10043e52:	movzx  esi,BYTE PTR [eax-0xb]
10043e56:	movzx  edx,BYTE PTR [ecx-0xb]
10043e5a:	sub    esi,edx
10043e5c:	je     0x10043e73
10043e5e:	xor    edx,edx
10043e60:	test   esi,esi
10043e62:	setg   dl
10043e65:	lea    edx,[edx+edx*1-0x1]
10043e69:	mov    esi,edx
10043e6b:	test   esi,esi
10043e6d:	jne    0x10043bf2
10043e73:	movzx  esi,BYTE PTR [eax-0xa]
10043e77:	movzx  edx,BYTE PTR [ecx-0xa]
10043e7b:	sub    esi,edx
10043e7d:	je     0x10043e94
10043e7f:	xor    edx,edx
10043e81:	test   esi,esi
10043e83:	setg   dl
10043e86:	lea    edx,[edx+edx*1-0x1]
10043e8a:	mov    esi,edx
10043e8c:	test   esi,esi
10043e8e:	jne    0x10043bf2
10043e94:	movzx  esi,BYTE PTR [eax-0x9]
10043e98:	movzx  edx,BYTE PTR [ecx-0x9]
10043e9c:	sub    esi,edx
10043e9e:	je     0x10043eb1
10043ea0:	xor    edx,edx
10043ea2:	test   esi,esi
10043ea4:	setg   dl
10043ea7:	lea    edx,[edx+edx*1-0x1]
10043eab:	mov    esi,edx
10043ead:	jmp    0x10043eb1
10043eaf:	xor    esi,esi
10043eb1:	test   esi,esi
10043eb3:	jne    0x10043bf2
10043eb9:	mov    edx,DWORD PTR [eax-0x8]
10043ebc:	cmp    edx,DWORD PTR [ecx-0x8]
10043ebf:	je     0x10043f3e
10043ec1:	movzx  esi,dl
10043ec4:	movzx  edx,BYTE PTR [ecx-0x8]
10043ec8:	sub    esi,edx
10043eca:	je     0x10043ee1
10043ecc:	xor    edx,edx
10043ece:	test   esi,esi
10043ed0:	setg   dl
10043ed3:	lea    edx,[edx+edx*1-0x1]
10043ed7:	mov    esi,edx
10043ed9:	test   esi,esi
10043edb:	jne    0x10043bf2
10043ee1:	movzx  esi,BYTE PTR [eax-0x7]
10043ee5:	movzx  edx,BYTE PTR [ecx-0x7]
10043ee9:	sub    esi,edx
10043eeb:	je     0x10043f02
10043eed:	xor    edx,edx
10043eef:	test   esi,esi
10043ef1:	setg   dl
10043ef4:	lea    edx,[edx+edx*1-0x1]
10043ef8:	mov    esi,edx
10043efa:	test   esi,esi
10043efc:	jne    0x10043bf2
10043f02:	movzx  esi,BYTE PTR [eax-0x6]
10043f06:	movzx  edx,BYTE PTR [ecx-0x6]
10043f0a:	sub    esi,edx
10043f0c:	je     0x10043f23
10043f0e:	xor    edx,edx
10043f10:	test   esi,esi
10043f12:	setg   dl
10043f15:	lea    edx,[edx+edx*1-0x1]
10043f19:	mov    esi,edx
10043f1b:	test   esi,esi
10043f1d:	jne    0x10043bf2
10043f23:	movzx  esi,BYTE PTR [eax-0x5]
10043f27:	movzx  edx,BYTE PTR [ecx-0x5]
10043f2b:	sub    esi,edx
10043f2d:	je     0x10043f40
10043f2f:	xor    edx,edx
10043f31:	test   esi,esi
10043f33:	setg   dl
10043f36:	lea    edx,[edx+edx*1-0x1]
10043f3a:	mov    esi,edx
10043f3c:	jmp    0x10043f40
10043f3e:	xor    esi,esi
10043f40:	test   esi,esi
10043f42:	jne    0x10043bf2
10043f48:	mov    edx,DWORD PTR [eax-0x4]
10043f4b:	cmp    edx,DWORD PTR [ecx-0x4]
10043f4e:	je     0x10043fbf
10043f50:	movzx  esi,dl
10043f53:	movzx  edx,BYTE PTR [ecx-0x4]
10043f57:	sub    esi,edx
10043f59:	je     0x10043f6a
10043f5b:	xor    edx,edx
10043f5d:	test   esi,esi
10043f5f:	setg   dl
10043f62:	lea    edx,[edx+edx*1-0x1]
10043f66:	test   edx,edx
10043f68:	jne    0x10043fa0
10043f6a:	movzx  esi,BYTE PTR [eax-0x3]
10043f6e:	movzx  edx,BYTE PTR [ecx-0x3]
10043f72:	sub    esi,edx
10043f74:	je     0x10043f85
10043f76:	xor    edx,edx
10043f78:	test   esi,esi
10043f7a:	setg   dl
10043f7d:	lea    edx,[edx+edx*1-0x1]
10043f81:	test   edx,edx
10043f83:	jne    0x10043fa0
10043f85:	movzx  esi,BYTE PTR [eax-0x2]
10043f89:	movzx  edx,BYTE PTR [ecx-0x2]
10043f8d:	sub    esi,edx
10043f8f:	je     0x10043fa4
10043f91:	xor    edx,edx
10043f93:	test   esi,esi
10043f95:	setg   dl
10043f98:	lea    edx,[edx+edx*1-0x1]
10043f9c:	test   edx,edx
10043f9e:	je     0x10043fa4
10043fa0:	mov    eax,edx
10043fa2:	jmp    0x10043fc1
10043fa4:	movzx  eax,BYTE PTR [eax-0x1]
10043fa8:	movzx  ecx,BYTE PTR [ecx-0x1]
10043fac:	sub    eax,ecx
10043fae:	je     0x10043fc1
10043fb0:	xor    ecx,ecx
10043fb2:	test   eax,eax
10043fb4:	setg   cl
10043fb7:	lea    ecx,[ecx+ecx*1-0x1]
10043fbb:	mov    eax,ecx
10043fbd:	jmp    0x10043fc1
10043fbf:	xor    eax,eax
10043fc1:	test   eax,eax
10043fc3:	jne    0x10043fc7
10043fc5:	xor    eax,eax
10043fc7:	pop    ebx
10043fc8:	jmp    0x10044d20
10043fcd:	mov    edx,DWORD PTR [eax-0x1d]
10043fd0:	cmp    edx,DWORD PTR [ecx-0x1d]
10043fd3:	je     0x10044052
10043fd5:	movzx  esi,dl
10043fd8:	movzx  edx,BYTE PTR [ecx-0x1d]
10043fdc:	sub    esi,edx
10043fde:	je     0x10043ff5
10043fe0:	xor    edx,edx
10043fe2:	test   esi,esi
10043fe4:	setg   dl
10043fe7:	lea    edx,[edx+edx*1-0x1]
10043feb:	mov    esi,edx
10043fed:	test   esi,esi
10043fef:	jne    0x10043bf2
10043ff5:	movzx  esi,BYTE PTR [eax-0x1c]
10043ff9:	movzx  edx,BYTE PTR [ecx-0x1c]
10043ffd:	sub    esi,edx
10043fff:	je     0x10044016
10044001:	xor    edx,edx
10044003:	test   esi,esi
10044005:	setg   dl
10044008:	lea    edx,[edx+edx*1-0x1]
1004400c:	mov    esi,edx
1004400e:	test   esi,esi
10044010:	jne    0x10043bf2
10044016:	movzx  esi,BYTE PTR [eax-0x1b]
1004401a:	movzx  edx,BYTE PTR [ecx-0x1b]
1004401e:	sub    esi,edx
10044020:	je     0x10044037
10044022:	xor    edx,edx
10044024:	test   esi,esi
10044026:	setg   dl
10044029:	lea    edx,[edx+edx*1-0x1]
1004402d:	mov    esi,edx
1004402f:	test   esi,esi
10044031:	jne    0x10043bf2
10044037:	movzx  esi,BYTE PTR [eax-0x1a]
1004403b:	movzx  edx,BYTE PTR [ecx-0x1a]
1004403f:	sub    esi,edx
10044041:	je     0x10044054
10044043:	xor    edx,edx
10044045:	test   esi,esi
10044047:	setg   dl
1004404a:	lea    edx,[edx+edx*1-0x1]
1004404e:	mov    esi,edx
10044050:	jmp    0x10044054
10044052:	xor    esi,esi
10044054:	test   esi,esi
10044056:	jne    0x10043bf2
1004405c:	mov    edx,DWORD PTR [eax-0x19]
1004405f:	cmp    edx,DWORD PTR [ecx-0x19]
10044062:	je     0x100440e1
10044064:	movzx  esi,dl
10044067:	movzx  edx,BYTE PTR [ecx-0x19]
1004406b:	sub    esi,edx
1004406d:	je     0x10044084
1004406f:	xor    edx,edx
10044071:	test   esi,esi
10044073:	setg   dl
10044076:	lea    edx,[edx+edx*1-0x1]
1004407a:	mov    esi,edx
1004407c:	test   esi,esi
1004407e:	jne    0x10043bf2
10044084:	movzx  esi,BYTE PTR [eax-0x18]
10044088:	movzx  edx,BYTE PTR [ecx-0x18]
1004408c:	sub    esi,edx
1004408e:	je     0x100440a5
10044090:	xor    edx,edx
10044092:	test   esi,esi
10044094:	setg   dl
10044097:	lea    edx,[edx+edx*1-0x1]
1004409b:	mov    esi,edx
1004409d:	test   esi,esi
1004409f:	jne    0x10043bf2
100440a5:	movzx  esi,BYTE PTR [eax-0x17]
100440a9:	movzx  edx,BYTE PTR [ecx-0x17]
100440ad:	sub    esi,edx
100440af:	je     0x100440c6
100440b1:	xor    edx,edx
100440b3:	test   esi,esi
100440b5:	setg   dl
100440b8:	lea    edx,[edx+edx*1-0x1]
100440bc:	mov    esi,edx
100440be:	test   esi,esi
100440c0:	jne    0x10043bf2
100440c6:	movzx  esi,BYTE PTR [eax-0x16]
100440ca:	movzx  edx,BYTE PTR [ecx-0x16]
100440ce:	sub    esi,edx
100440d0:	je     0x100440e3
100440d2:	xor    edx,edx
100440d4:	test   esi,esi
100440d6:	setg   dl
100440d9:	lea    edx,[edx+edx*1-0x1]
100440dd:	mov    esi,edx
100440df:	jmp    0x100440e3
100440e1:	xor    esi,esi
100440e3:	test   esi,esi
100440e5:	jne    0x10043bf2
100440eb:	mov    edx,DWORD PTR [eax-0x15]
100440ee:	cmp    edx,DWORD PTR [ecx-0x15]
100440f1:	je     0x10044170
100440f3:	movzx  esi,dl
100440f6:	movzx  edx,BYTE PTR [ecx-0x15]
100440fa:	sub    esi,edx
100440fc:	je     0x10044113
100440fe:	xor    edx,edx
10044100:	test   esi,esi
10044102:	setg   dl
10044105:	lea    edx,[edx+edx*1-0x1]
10044109:	mov    esi,edx
1004410b:	test   esi,esi
1004410d:	jne    0x10043bf2
10044113:	movzx  esi,BYTE PTR [eax-0x14]
10044117:	movzx  edx,BYTE PTR [ecx-0x14]
1004411b:	sub    esi,edx
1004411d:	je     0x10044134
1004411f:	xor    edx,edx
10044121:	test   esi,esi
10044123:	setg   dl
10044126:	lea    edx,[edx+edx*1-0x1]
1004412a:	mov    esi,edx
1004412c:	test   esi,esi
1004412e:	jne    0x10043bf2
10044134:	movzx  esi,BYTE PTR [eax-0x13]
10044138:	movzx  edx,BYTE PTR [ecx-0x13]
1004413c:	sub    esi,edx
1004413e:	je     0x10044155
10044140:	xor    edx,edx
10044142:	test   esi,esi
10044144:	setg   dl
10044147:	lea    edx,[edx+edx*1-0x1]
1004414b:	mov    esi,edx
1004414d:	test   esi,esi
1004414f:	jne    0x10043bf2
10044155:	movzx  esi,BYTE PTR [eax-0x12]
10044159:	movzx  edx,BYTE PTR [ecx-0x12]
1004415d:	sub    esi,edx
1004415f:	je     0x10044172
10044161:	xor    edx,edx
10044163:	test   esi,esi
10044165:	setg   dl
10044168:	lea    edx,[edx+edx*1-0x1]
1004416c:	mov    esi,edx
1004416e:	jmp    0x10044172
10044170:	xor    esi,esi
10044172:	test   esi,esi
10044174:	jne    0x10043bf2
1004417a:	mov    edx,DWORD PTR [eax-0x11]
1004417d:	cmp    edx,DWORD PTR [ecx-0x11]
10044180:	je     0x100441ff
10044182:	movzx  esi,dl
10044185:	movzx  edx,BYTE PTR [ecx-0x11]
10044189:	sub    esi,edx
1004418b:	je     0x100441a2
1004418d:	xor    edx,edx
1004418f:	test   esi,esi
10044191:	setg   dl
10044194:	lea    edx,[edx+edx*1-0x1]
10044198:	mov    esi,edx
1004419a:	test   esi,esi
1004419c:	jne    0x10043bf2
100441a2:	movzx  esi,BYTE PTR [eax-0x10]
100441a6:	movzx  edx,BYTE PTR [ecx-0x10]
100441aa:	sub    esi,edx
100441ac:	je     0x100441c3
100441ae:	xor    edx,edx
100441b0:	test   esi,esi
100441b2:	setg   dl
100441b5:	lea    edx,[edx+edx*1-0x1]
100441b9:	mov    esi,edx
100441bb:	test   esi,esi
100441bd:	jne    0x10043bf2
100441c3:	movzx  esi,BYTE PTR [eax-0xf]
100441c7:	movzx  edx,BYTE PTR [ecx-0xf]
100441cb:	sub    esi,edx
100441cd:	je     0x100441e4
100441cf:	xor    edx,edx
100441d1:	test   esi,esi
100441d3:	setg   dl
100441d6:	lea    edx,[edx+edx*1-0x1]
100441da:	mov    esi,edx
100441dc:	test   esi,esi
100441de:	jne    0x10043bf2
100441e4:	movzx  esi,BYTE PTR [eax-0xe]
100441e8:	movzx  edx,BYTE PTR [ecx-0xe]
100441ec:	sub    esi,edx
100441ee:	je     0x10044201
100441f0:	xor    edx,edx
100441f2:	test   esi,esi
100441f4:	setg   dl
100441f7:	lea    edx,[edx+edx*1-0x1]
100441fb:	mov    esi,edx
100441fd:	jmp    0x10044201
100441ff:	xor    esi,esi
10044201:	test   esi,esi
10044203:	jne    0x10043bf2
10044209:	mov    edx,DWORD PTR [eax-0xd]
1004420c:	cmp    edx,DWORD PTR [ecx-0xd]
1004420f:	je     0x1004428e
10044211:	movzx  esi,dl
10044214:	movzx  edx,BYTE PTR [ecx-0xd]
10044218:	sub    esi,edx
1004421a:	je     0x10044231
1004421c:	xor    edx,edx
1004421e:	test   esi,esi
10044220:	setg   dl
10044223:	lea    edx,[edx+edx*1-0x1]
10044227:	mov    esi,edx
10044229:	test   esi,esi
1004422b:	jne    0x10043bf2
10044231:	movzx  esi,BYTE PTR [eax-0xc]
10044235:	movzx  edx,BYTE PTR [ecx-0xc]
10044239:	sub    esi,edx
1004423b:	je     0x10044252
1004423d:	xor    edx,edx
1004423f:	test   esi,esi
10044241:	setg   dl
10044244:	lea    edx,[edx+edx*1-0x1]
10044248:	mov    esi,edx
1004424a:	test   esi,esi
1004424c:	jne    0x10043bf2
10044252:	movzx  esi,BYTE PTR [eax-0xb]
10044256:	movzx  edx,BYTE PTR [ecx-0xb]
1004425a:	sub    esi,edx
1004425c:	je     0x10044273
1004425e:	xor    edx,edx
10044260:	test   esi,esi
10044262:	setg   dl
10044265:	lea    edx,[edx+edx*1-0x1]
10044269:	mov    esi,edx
1004426b:	test   esi,esi
1004426d:	jne    0x10043bf2
10044273:	movzx  esi,BYTE PTR [eax-0xa]
10044277:	movzx  edx,BYTE PTR [ecx-0xa]
1004427b:	sub    esi,edx
1004427d:	je     0x10044290
1004427f:	xor    edx,edx
10044281:	test   esi,esi
10044283:	setg   dl
10044286:	lea    edx,[edx+edx*1-0x1]
1004428a:	mov    esi,edx
1004428c:	jmp    0x10044290
1004428e:	xor    esi,esi
10044290:	test   esi,esi
10044292:	jne    0x10043bf2
10044298:	mov    edx,DWORD PTR [eax-0x9]
1004429b:	cmp    edx,DWORD PTR [ecx-0x9]
1004429e:	je     0x1004431e
100442a0:	movzx  edx,BYTE PTR [ecx-0x9]
100442a4:	movzx  esi,BYTE PTR [eax-0x9]
100442a8:	sub    esi,edx
100442aa:	je     0x100442c1
100442ac:	xor    edx,edx
100442ae:	test   esi,esi
100442b0:	setg   dl
100442b3:	lea    edx,[edx+edx*1-0x1]
100442b7:	mov    esi,edx
100442b9:	test   esi,esi
100442bb:	jne    0x10043bf2
100442c1:	movzx  esi,BYTE PTR [eax-0x8]
100442c5:	movzx  edx,BYTE PTR [ecx-0x8]
100442c9:	sub    esi,edx
100442cb:	je     0x100442e2
100442cd:	xor    edx,edx
100442cf:	test   esi,esi
100442d1:	setg   dl
100442d4:	lea    edx,[edx+edx*1-0x1]
100442d8:	mov    esi,edx
100442da:	test   esi,esi
100442dc:	jne    0x10043bf2
100442e2:	movzx  esi,BYTE PTR [eax-0x7]
100442e6:	movzx  edx,BYTE PTR [ecx-0x7]
100442ea:	sub    esi,edx
100442ec:	je     0x10044303
100442ee:	xor    edx,edx
100442f0:	test   esi,esi
100442f2:	setg   dl
100442f5:	lea    edx,[edx+edx*1-0x1]
100442f9:	mov    esi,edx
100442fb:	test   esi,esi
100442fd:	jne    0x10043bf2
10044303:	movzx  esi,BYTE PTR [eax-0x6]
10044307:	movzx  edx,BYTE PTR [ecx-0x6]
1004430b:	sub    esi,edx
1004430d:	je     0x10044320
1004430f:	xor    edx,edx
10044311:	test   esi,esi
10044313:	setg   dl
10044316:	lea    edx,[edx+edx*1-0x1]
1004431a:	mov    esi,edx
1004431c:	jmp    0x10044320
1004431e:	xor    esi,esi
10044320:	test   esi,esi
10044322:	jne    0x10043bf2
10044328:	mov    edx,DWORD PTR [eax-0x5]
1004432b:	cmp    edx,DWORD PTR [ecx-0x5]
1004432e:	je     0x100443ad
10044330:	movzx  esi,dl
10044333:	movzx  edx,BYTE PTR [ecx-0x5]
10044337:	sub    esi,edx
10044339:	je     0x10044350
1004433b:	xor    edx,edx
1004433d:	test   esi,esi
1004433f:	setg   dl
10044342:	lea    edx,[edx+edx*1-0x1]
10044346:	mov    esi,edx
10044348:	test   esi,esi
1004434a:	jne    0x10043bf2
10044350:	movzx  esi,BYTE PTR [eax-0x4]
10044354:	movzx  edx,BYTE PTR [ecx-0x4]
10044358:	sub    esi,edx
1004435a:	je     0x10044371
1004435c:	xor    edx,edx
1004435e:	test   esi,esi
10044360:	setg   dl
10044363:	lea    edx,[edx+edx*1-0x1]
10044367:	mov    esi,edx
10044369:	test   esi,esi
1004436b:	jne    0x10043bf2
10044371:	movzx  esi,BYTE PTR [eax-0x3]
10044375:	movzx  edx,BYTE PTR [ecx-0x3]
10044379:	sub    esi,edx
1004437b:	je     0x10044392
1004437d:	xor    edx,edx
1004437f:	test   esi,esi
10044381:	setg   dl
10044384:	lea    edx,[edx+edx*1-0x1]
10044388:	mov    esi,edx
1004438a:	test   esi,esi
1004438c:	jne    0x10043bf2
10044392:	movzx  esi,BYTE PTR [eax-0x2]
10044396:	movzx  edx,BYTE PTR [ecx-0x2]
1004439a:	sub    esi,edx
1004439c:	je     0x100443af
1004439e:	xor    edx,edx
100443a0:	test   esi,esi
100443a2:	setg   dl
100443a5:	lea    edx,[edx+edx*1-0x1]
100443a9:	mov    esi,edx
100443ab:	jmp    0x100443af
100443ad:	xor    esi,esi
100443af:	test   esi,esi
100443b1:	jne    0x10043bf2
100443b7:	movzx  ecx,BYTE PTR [ecx-0x1]
100443bb:	movzx  eax,BYTE PTR [eax-0x1]
100443bf:	sub    eax,ecx
100443c1:	je     0x10043fc7
100443c7:	xor    ecx,ecx
100443c9:	test   eax,eax
100443cb:	setg   cl
100443ce:	lea    ecx,[ecx+ecx*1-0x1]
100443d2:	mov    eax,ecx
100443d4:	jmp    0x10043fc7
100443d9:	mov    edx,DWORD PTR [eax-0x1e]
100443dc:	cmp    edx,DWORD PTR [ecx-0x1e]
100443df:	je     0x1004445e
100443e1:	movzx  esi,dl
100443e4:	movzx  edx,BYTE PTR [ecx-0x1e]
100443e8:	sub    esi,edx
100443ea:	je     0x10044401
100443ec:	xor    edx,edx
100443ee:	test   esi,esi
100443f0:	setg   dl
100443f3:	lea    edx,[edx+edx*1-0x1]
100443f7:	mov    esi,edx
100443f9:	test   esi,esi
100443fb:	jne    0x10043bf2
10044401:	movzx  esi,BYTE PTR [eax-0x1d]
10044405:	movzx  edx,BYTE PTR [ecx-0x1d]
10044409:	sub    esi,edx
1004440b:	je     0x10044422
1004440d:	xor    edx,edx
1004440f:	test   esi,esi
10044411:	setg   dl
10044414:	lea    edx,[edx+edx*1-0x1]
10044418:	mov    esi,edx
1004441a:	test   esi,esi
1004441c:	jne    0x10043bf2
10044422:	movzx  esi,BYTE PTR [eax-0x1c]
10044426:	movzx  edx,BYTE PTR [ecx-0x1c]
1004442a:	sub    esi,edx
1004442c:	je     0x10044443
1004442e:	xor    edx,edx
10044430:	test   esi,esi
10044432:	setg   dl
10044435:	lea    edx,[edx+edx*1-0x1]
10044439:	mov    esi,edx
1004443b:	test   esi,esi
1004443d:	jne    0x10043bf2
10044443:	movzx  esi,BYTE PTR [eax-0x1b]
10044447:	movzx  edx,BYTE PTR [ecx-0x1b]
1004444b:	sub    esi,edx
1004444d:	je     0x10044460
1004444f:	xor    edx,edx
10044451:	test   esi,esi
10044453:	setg   dl
10044456:	lea    edx,[edx+edx*1-0x1]
1004445a:	mov    esi,edx
1004445c:	jmp    0x10044460
1004445e:	xor    esi,esi
10044460:	test   esi,esi
10044462:	jne    0x10043bf2
10044468:	mov    edx,DWORD PTR [eax-0x1a]
1004446b:	cmp    edx,DWORD PTR [ecx-0x1a]
1004446e:	je     0x100444ed
10044470:	movzx  esi,dl
10044473:	movzx  edx,BYTE PTR [ecx-0x1a]
10044477:	sub    esi,edx
10044479:	je     0x10044490
1004447b:	xor    edx,edx
1004447d:	test   esi,esi
1004447f:	setg   dl
10044482:	lea    edx,[edx+edx*1-0x1]
10044486:	mov    esi,edx
10044488:	test   esi,esi
1004448a:	jne    0x10043bf2
10044490:	movzx  esi,BYTE PTR [eax-0x19]
10044494:	movzx  edx,BYTE PTR [ecx-0x19]
10044498:	sub    esi,edx
1004449a:	je     0x100444b1
1004449c:	xor    edx,edx
1004449e:	test   esi,esi
100444a0:	setg   dl
100444a3:	lea    edx,[edx+edx*1-0x1]
100444a7:	mov    esi,edx
100444a9:	test   esi,esi
100444ab:	jne    0x10043bf2
100444b1:	movzx  esi,BYTE PTR [eax-0x18]
100444b5:	movzx  edx,BYTE PTR [ecx-0x18]
100444b9:	sub    esi,edx
100444bb:	je     0x100444d2
100444bd:	xor    edx,edx
100444bf:	test   esi,esi
100444c1:	setg   dl
100444c4:	lea    edx,[edx+edx*1-0x1]
100444c8:	mov    esi,edx
100444ca:	test   esi,esi
100444cc:	jne    0x10043bf2
100444d2:	movzx  esi,BYTE PTR [eax-0x17]
100444d6:	movzx  edx,BYTE PTR [ecx-0x17]
100444da:	sub    esi,edx
100444dc:	je     0x100444ef
100444de:	xor    edx,edx
100444e0:	test   esi,esi
100444e2:	setg   dl
100444e5:	lea    edx,[edx+edx*1-0x1]
100444e9:	mov    esi,edx
100444eb:	jmp    0x100444ef
100444ed:	xor    esi,esi
100444ef:	test   esi,esi
100444f1:	jne    0x10043bf2
100444f7:	mov    edx,DWORD PTR [eax-0x16]
100444fa:	cmp    edx,DWORD PTR [ecx-0x16]
100444fd:	je     0x1004457c
100444ff:	movzx  esi,dl
10044502:	movzx  edx,BYTE PTR [ecx-0x16]
10044506:	sub    esi,edx
10044508:	je     0x1004451f
1004450a:	xor    edx,edx
1004450c:	test   esi,esi
1004450e:	setg   dl
10044511:	lea    edx,[edx+edx*1-0x1]
10044515:	mov    esi,edx
10044517:	test   esi,esi
10044519:	jne    0x10043bf2
1004451f:	movzx  esi,BYTE PTR [eax-0x15]
10044523:	movzx  edx,BYTE PTR [ecx-0x15]
10044527:	sub    esi,edx
10044529:	je     0x10044540
1004452b:	xor    edx,edx
1004452d:	test   esi,esi
1004452f:	setg   dl
10044532:	lea    edx,[edx+edx*1-0x1]
10044536:	mov    esi,edx
10044538:	test   esi,esi
1004453a:	jne    0x10043bf2
10044540:	movzx  esi,BYTE PTR [eax-0x14]
10044544:	movzx  edx,BYTE PTR [ecx-0x14]
10044548:	sub    esi,edx
1004454a:	je     0x10044561
1004454c:	xor    edx,edx
1004454e:	test   esi,esi
10044550:	setg   dl
10044553:	lea    edx,[edx+edx*1-0x1]
10044557:	mov    esi,edx
10044559:	test   esi,esi
1004455b:	jne    0x10043bf2
10044561:	movzx  esi,BYTE PTR [eax-0x13]
10044565:	movzx  edx,BYTE PTR [ecx-0x13]
10044569:	sub    esi,edx
1004456b:	je     0x1004457e
1004456d:	xor    edx,edx
1004456f:	test   esi,esi
10044571:	setg   dl
10044574:	lea    edx,[edx+edx*1-0x1]
10044578:	mov    esi,edx
1004457a:	jmp    0x1004457e
1004457c:	xor    esi,esi
1004457e:	test   esi,esi
10044580:	jne    0x10043bf2
10044586:	mov    edx,DWORD PTR [eax-0x12]
10044589:	cmp    edx,DWORD PTR [ecx-0x12]
1004458c:	je     0x1004460b
1004458e:	movzx  esi,dl
10044591:	movzx  edx,BYTE PTR [ecx-0x12]
10044595:	sub    esi,edx
10044597:	je     0x100445ae
10044599:	xor    edx,edx
1004459b:	test   esi,esi
1004459d:	setg   dl
100445a0:	lea    edx,[edx+edx*1-0x1]
100445a4:	mov    esi,edx
100445a6:	test   esi,esi
100445a8:	jne    0x10043bf2
100445ae:	movzx  esi,BYTE PTR [eax-0x11]
100445b2:	movzx  edx,BYTE PTR [ecx-0x11]
100445b6:	sub    esi,edx
100445b8:	je     0x100445cf
100445ba:	xor    edx,edx
100445bc:	test   esi,esi
100445be:	setg   dl
100445c1:	lea    edx,[edx+edx*1-0x1]
100445c5:	mov    esi,edx
100445c7:	test   esi,esi
100445c9:	jne    0x10043bf2
100445cf:	movzx  esi,BYTE PTR [eax-0x10]
100445d3:	movzx  edx,BYTE PTR [ecx-0x10]
100445d7:	sub    esi,edx
100445d9:	je     0x100445f0
100445db:	xor    edx,edx
100445dd:	test   esi,esi
100445df:	setg   dl
100445e2:	lea    edx,[edx+edx*1-0x1]
100445e6:	mov    esi,edx
100445e8:	test   esi,esi
100445ea:	jne    0x10043bf2
100445f0:	movzx  esi,BYTE PTR [eax-0xf]
100445f4:	movzx  edx,BYTE PTR [ecx-0xf]
100445f8:	sub    esi,edx
100445fa:	je     0x1004460d
100445fc:	xor    edx,edx
100445fe:	test   esi,esi
10044600:	setg   dl
10044603:	lea    edx,[edx+edx*1-0x1]
10044607:	mov    esi,edx
10044609:	jmp    0x1004460d
1004460b:	xor    esi,esi
1004460d:	test   esi,esi
1004460f:	jne    0x10043bf2
10044615:	mov    edx,DWORD PTR [eax-0xe]
10044618:	cmp    edx,DWORD PTR [ecx-0xe]
1004461b:	je     0x1004469a
1004461d:	movzx  esi,dl
10044620:	movzx  edx,BYTE PTR [ecx-0xe]
10044624:	sub    esi,edx
10044626:	je     0x1004463d
10044628:	xor    edx,edx
1004462a:	test   esi,esi
1004462c:	setg   dl
1004462f:	lea    edx,[edx+edx*1-0x1]
10044633:	mov    esi,edx
10044635:	test   esi,esi
10044637:	jne    0x10043bf2
1004463d:	movzx  esi,BYTE PTR [eax-0xd]
10044641:	movzx  edx,BYTE PTR [ecx-0xd]
10044645:	sub    esi,edx
10044647:	je     0x1004465e
10044649:	xor    edx,edx
1004464b:	test   esi,esi
1004464d:	setg   dl
10044650:	lea    edx,[edx+edx*1-0x1]
10044654:	mov    esi,edx
10044656:	test   esi,esi
10044658:	jne    0x10043bf2
1004465e:	movzx  esi,BYTE PTR [eax-0xc]
10044662:	movzx  edx,BYTE PTR [ecx-0xc]
10044666:	sub    esi,edx
10044668:	je     0x1004467f
1004466a:	xor    edx,edx
1004466c:	test   esi,esi
1004466e:	setg   dl
10044671:	lea    edx,[edx+edx*1-0x1]
10044675:	mov    esi,edx
10044677:	test   esi,esi
10044679:	jne    0x10043bf2
1004467f:	movzx  esi,BYTE PTR [eax-0xb]
10044683:	movzx  edx,BYTE PTR [ecx-0xb]
10044687:	sub    esi,edx
10044689:	je     0x1004469c
1004468b:	xor    edx,edx
1004468d:	test   esi,esi
1004468f:	setg   dl
10044692:	lea    edx,[edx+edx*1-0x1]
10044696:	mov    esi,edx
10044698:	jmp    0x1004469c
1004469a:	xor    esi,esi
1004469c:	test   esi,esi
1004469e:	jne    0x10043bf2
100446a4:	mov    edx,DWORD PTR [eax-0xa]
100446a7:	cmp    edx,DWORD PTR [ecx-0xa]
100446aa:	je     0x1004472a
100446ac:	movzx  edx,BYTE PTR [ecx-0xa]
100446b0:	movzx  esi,BYTE PTR [eax-0xa]
100446b4:	sub    esi,edx
100446b6:	je     0x100446cd
100446b8:	xor    edx,edx
100446ba:	test   esi,esi
100446bc:	setg   dl
100446bf:	lea    edx,[edx+edx*1-0x1]
100446c3:	mov    esi,edx
100446c5:	test   esi,esi
100446c7:	jne    0x10043bf2
100446cd:	movzx  edx,BYTE PTR [ecx-0x9]
100446d1:	movzx  esi,BYTE PTR [eax-0x9]
100446d5:	sub    esi,edx
100446d7:	je     0x100446ee
100446d9:	xor    edx,edx
100446db:	test   esi,esi
100446dd:	setg   dl
100446e0:	lea    edx,[edx+edx*1-0x1]
100446e4:	mov    esi,edx
100446e6:	test   esi,esi
100446e8:	jne    0x10043bf2
100446ee:	movzx  edx,BYTE PTR [ecx-0x8]
100446f2:	movzx  esi,BYTE PTR [eax-0x8]
100446f6:	sub    esi,edx
100446f8:	je     0x1004470f
100446fa:	xor    edx,edx
100446fc:	test   esi,esi
100446fe:	setg   dl
10044701:	lea    edx,[edx+edx*1-0x1]
10044705:	mov    esi,edx
10044707:	test   esi,esi
10044709:	jne    0x10043bf2
1004470f:	movzx  edx,BYTE PTR [ecx-0x7]
10044713:	movzx  esi,BYTE PTR [eax-0x7]
10044717:	sub    esi,edx
10044719:	je     0x1004472c
1004471b:	xor    edx,edx
1004471d:	test   esi,esi
1004471f:	setg   dl
10044722:	lea    edx,[edx+edx*1-0x1]
10044726:	mov    esi,edx
10044728:	jmp    0x1004472c
1004472a:	xor    esi,esi
1004472c:	test   esi,esi
1004472e:	jne    0x10043bf2
10044734:	mov    edx,DWORD PTR [eax-0x6]
10044737:	cmp    edx,DWORD PTR [ecx-0x6]
1004473a:	je     0x100447b9
1004473c:	movzx  esi,dl
1004473f:	movzx  edx,BYTE PTR [ecx-0x6]
10044743:	sub    esi,edx
10044745:	je     0x1004475c
10044747:	xor    edx,edx
10044749:	test   esi,esi
1004474b:	setg   dl
1004474e:	lea    edx,[edx+edx*1-0x1]
10044752:	mov    esi,edx
10044754:	test   esi,esi
10044756:	jne    0x10043bf2
1004475c:	movzx  esi,BYTE PTR [eax-0x5]
10044760:	movzx  edx,BYTE PTR [ecx-0x5]
10044764:	sub    esi,edx
10044766:	je     0x1004477d
10044768:	xor    edx,edx
1004476a:	test   esi,esi
1004476c:	setg   dl
1004476f:	lea    edx,[edx+edx*1-0x1]
10044773:	mov    esi,edx
10044775:	test   esi,esi
10044777:	jne    0x10043bf2
1004477d:	movzx  esi,BYTE PTR [eax-0x4]
10044781:	movzx  edx,BYTE PTR [ecx-0x4]
10044785:	sub    esi,edx
10044787:	je     0x1004479e
10044789:	xor    edx,edx
1004478b:	test   esi,esi
1004478d:	setg   dl
10044790:	lea    edx,[edx+edx*1-0x1]
10044794:	mov    esi,edx
10044796:	test   esi,esi
10044798:	jne    0x10043bf2
1004479e:	movzx  esi,BYTE PTR [eax-0x3]
100447a2:	movzx  edx,BYTE PTR [ecx-0x3]
100447a6:	sub    esi,edx
100447a8:	je     0x100447bb
100447aa:	xor    edx,edx
100447ac:	test   esi,esi
100447ae:	setg   dl
100447b1:	lea    edx,[edx+edx*1-0x1]
100447b5:	mov    esi,edx
100447b7:	jmp    0x100447bb
100447b9:	xor    esi,esi
100447bb:	test   esi,esi
100447bd:	jne    0x10043bf2
100447c3:	mov    dx,WORD PTR [eax-0x2]
100447c7:	cmp    dx,WORD PTR [ecx-0x2]
100447cb:	je     0x10043fc5
100447d1:	movzx  edx,BYTE PTR [ecx-0x2]
100447d5:	movzx  esi,BYTE PTR [eax-0x2]
100447d9:	sub    esi,edx
100447db:	je     0x100443b7
100447e1:	xor    edx,edx
100447e3:	test   esi,esi
100447e5:	setg   dl
100447e8:	lea    edx,[edx+edx*1-0x1]
100447ec:	test   edx,edx
100447ee:	jne    0x10044c07
100447f4:	jmp    0x100443b7
100447f9:	mov    edx,DWORD PTR [eax-0x1f]
100447fc:	cmp    edx,DWORD PTR [ecx-0x1f]
100447ff:	je     0x1004487f
10044801:	movzx  edx,BYTE PTR [ecx-0x1f]
10044805:	movzx  esi,BYTE PTR [eax-0x1f]
10044809:	sub    esi,edx
1004480b:	je     0x10044822
1004480d:	xor    edx,edx
1004480f:	test   esi,esi
10044811:	setg   dl
10044814:	lea    edx,[edx+edx*1-0x1]
10044818:	mov    esi,edx
1004481a:	test   esi,esi
1004481c:	jne    0x10043bf2
10044822:	movzx  esi,BYTE PTR [eax-0x1e]
10044826:	movzx  edx,BYTE PTR [ecx-0x1e]
1004482a:	sub    esi,edx
1004482c:	je     0x10044843
1004482e:	xor    edx,edx
10044830:	test   esi,esi
10044832:	setg   dl
10044835:	lea    edx,[edx+edx*1-0x1]
10044839:	mov    esi,edx
1004483b:	test   esi,esi
1004483d:	jne    0x10043bf2
10044843:	movzx  esi,BYTE PTR [eax-0x1d]
10044847:	movzx  edx,BYTE PTR [ecx-0x1d]
1004484b:	sub    esi,edx
1004484d:	je     0x10044864
1004484f:	xor    edx,edx
10044851:	test   esi,esi
10044853:	setg   dl
10044856:	lea    edx,[edx+edx*1-0x1]
1004485a:	mov    esi,edx
1004485c:	test   esi,esi
1004485e:	jne    0x10043bf2
10044864:	movzx  esi,BYTE PTR [eax-0x1c]
10044868:	movzx  edx,BYTE PTR [ecx-0x1c]
1004486c:	sub    esi,edx
1004486e:	je     0x10044881
10044870:	xor    edx,edx
10044872:	test   esi,esi
10044874:	setg   dl
10044877:	lea    edx,[edx+edx*1-0x1]
1004487b:	mov    esi,edx
1004487d:	jmp    0x10044881
1004487f:	xor    esi,esi
10044881:	test   esi,esi
10044883:	jne    0x10043bf2
10044889:	mov    edx,DWORD PTR [eax-0x1b]
1004488c:	cmp    edx,DWORD PTR [ecx-0x1b]
1004488f:	je     0x1004490e
10044891:	movzx  esi,dl
10044894:	movzx  edx,BYTE PTR [ecx-0x1b]
10044898:	sub    esi,edx
1004489a:	je     0x100448b1
1004489c:	xor    edx,edx
1004489e:	test   esi,esi
100448a0:	setg   dl
100448a3:	lea    edx,[edx+edx*1-0x1]
100448a7:	mov    esi,edx
100448a9:	test   esi,esi
100448ab:	jne    0x10043bf2
100448b1:	movzx  esi,BYTE PTR [eax-0x1a]
100448b5:	movzx  edx,BYTE PTR [ecx-0x1a]
100448b9:	sub    esi,edx
100448bb:	je     0x100448d2
100448bd:	xor    edx,edx
100448bf:	test   esi,esi
100448c1:	setg   dl
100448c4:	lea    edx,[edx+edx*1-0x1]
100448c8:	mov    esi,edx
100448ca:	test   esi,esi
100448cc:	jne    0x10043bf2
100448d2:	movzx  esi,BYTE PTR [eax-0x19]
100448d6:	movzx  edx,BYTE PTR [ecx-0x19]
100448da:	sub    esi,edx
100448dc:	je     0x100448f3
100448de:	xor    edx,edx
100448e0:	test   esi,esi
100448e2:	setg   dl
100448e5:	lea    edx,[edx+edx*1-0x1]
100448e9:	mov    esi,edx
100448eb:	test   esi,esi
100448ed:	jne    0x10043bf2
100448f3:	movzx  esi,BYTE PTR [eax-0x18]
100448f7:	movzx  edx,BYTE PTR [ecx-0x18]
100448fb:	sub    esi,edx
100448fd:	je     0x10044910
100448ff:	xor    edx,edx
10044901:	test   esi,esi
10044903:	setg   dl
10044906:	lea    edx,[edx+edx*1-0x1]
1004490a:	mov    esi,edx
1004490c:	jmp    0x10044910
1004490e:	xor    esi,esi
10044910:	test   esi,esi
10044912:	jne    0x10043bf2
10044918:	mov    edx,DWORD PTR [eax-0x17]
1004491b:	cmp    edx,DWORD PTR [ecx-0x17]
1004491e:	je     0x1004499d
10044920:	movzx  esi,dl
10044923:	movzx  edx,BYTE PTR [ecx-0x17]
10044927:	sub    esi,edx
10044929:	je     0x10044940
1004492b:	xor    edx,edx
1004492d:	test   esi,esi
1004492f:	setg   dl
10044932:	lea    edx,[edx+edx*1-0x1]
10044936:	mov    esi,edx
10044938:	test   esi,esi
1004493a:	jne    0x10043bf2
10044940:	movzx  esi,BYTE PTR [eax-0x16]
10044944:	movzx  edx,BYTE PTR [ecx-0x16]
10044948:	sub    esi,edx
1004494a:	je     0x10044961
1004494c:	xor    edx,edx
1004494e:	test   esi,esi
10044950:	setg   dl
10044953:	lea    edx,[edx+edx*1-0x1]
10044957:	mov    esi,edx
10044959:	test   esi,esi
1004495b:	jne    0x10043bf2
10044961:	movzx  esi,BYTE PTR [eax-0x15]
10044965:	movzx  edx,BYTE PTR [ecx-0x15]
10044969:	sub    esi,edx
1004496b:	je     0x10044982
1004496d:	xor    edx,edx
1004496f:	test   esi,esi
10044971:	setg   dl
10044974:	lea    edx,[edx+edx*1-0x1]
10044978:	mov    esi,edx
1004497a:	test   esi,esi
1004497c:	jne    0x10043bf2
10044982:	movzx  esi,BYTE PTR [eax-0x14]
10044986:	movzx  edx,BYTE PTR [ecx-0x14]
1004498a:	sub    esi,edx
1004498c:	je     0x1004499f
1004498e:	xor    edx,edx
10044990:	test   esi,esi
10044992:	setg   dl
10044995:	lea    edx,[edx+edx*1-0x1]
10044999:	mov    esi,edx
1004499b:	jmp    0x1004499f
1004499d:	xor    esi,esi
1004499f:	test   esi,esi
100449a1:	jne    0x10043bf2
100449a7:	mov    edx,DWORD PTR [eax-0x13]
100449aa:	cmp    edx,DWORD PTR [ecx-0x13]
100449ad:	je     0x10044a2c
100449af:	movzx  esi,dl
100449b2:	movzx  edx,BYTE PTR [ecx-0x13]
100449b6:	sub    esi,edx
100449b8:	je     0x100449cf
100449ba:	xor    edx,edx
100449bc:	test   esi,esi
100449be:	setg   dl
100449c1:	lea    edx,[edx+edx*1-0x1]
100449c5:	mov    esi,edx
100449c7:	test   esi,esi
100449c9:	jne    0x10043bf2
100449cf:	movzx  esi,BYTE PTR [eax-0x12]
100449d3:	movzx  edx,BYTE PTR [ecx-0x12]
100449d7:	sub    esi,edx
100449d9:	je     0x100449f0
100449db:	xor    edx,edx
100449dd:	test   esi,esi
100449df:	setg   dl
100449e2:	lea    edx,[edx+edx*1-0x1]
100449e6:	mov    esi,edx
100449e8:	test   esi,esi
100449ea:	jne    0x10043bf2
100449f0:	movzx  esi,BYTE PTR [eax-0x11]
100449f4:	movzx  edx,BYTE PTR [ecx-0x11]
100449f8:	sub    esi,edx
100449fa:	je     0x10044a11
100449fc:	xor    edx,edx
100449fe:	test   esi,esi
10044a00:	setg   dl
10044a03:	lea    edx,[edx+edx*1-0x1]
10044a07:	mov    esi,edx
10044a09:	test   esi,esi
10044a0b:	jne    0x10043bf2
10044a11:	movzx  esi,BYTE PTR [eax-0x10]
10044a15:	movzx  edx,BYTE PTR [ecx-0x10]
10044a19:	sub    esi,edx
10044a1b:	je     0x10044a2e
10044a1d:	xor    edx,edx
10044a1f:	test   esi,esi
10044a21:	setg   dl
10044a24:	lea    edx,[edx+edx*1-0x1]
10044a28:	mov    esi,edx
10044a2a:	jmp    0x10044a2e
10044a2c:	xor    esi,esi
10044a2e:	test   esi,esi
10044a30:	jne    0x10043bf2
10044a36:	mov    edx,DWORD PTR [eax-0xf]
10044a39:	cmp    edx,DWORD PTR [ecx-0xf]
10044a3c:	je     0x10044abc
10044a3e:	movzx  edx,BYTE PTR [ecx-0xf]
10044a42:	movzx  esi,BYTE PTR [eax-0xf]
10044a46:	sub    esi,edx
10044a48:	je     0x10044a5f
10044a4a:	xor    edx,edx
10044a4c:	test   esi,esi
10044a4e:	setg   dl
10044a51:	lea    edx,[edx+edx*1-0x1]
10044a55:	mov    esi,edx
10044a57:	test   esi,esi
10044a59:	jne    0x10043bf2
10044a5f:	movzx  esi,BYTE PTR [eax-0xe]
10044a63:	movzx  edx,BYTE PTR [ecx-0xe]
10044a67:	sub    esi,edx
10044a69:	je     0x10044a80
10044a6b:	xor    edx,edx
10044a6d:	test   esi,esi
10044a6f:	setg   dl
10044a72:	lea    edx,[edx+edx*1-0x1]
10044a76:	mov    esi,edx
10044a78:	test   esi,esi
10044a7a:	jne    0x10043bf2
10044a80:	movzx  esi,BYTE PTR [eax-0xd]
10044a84:	movzx  edx,BYTE PTR [ecx-0xd]
10044a88:	sub    esi,edx
10044a8a:	je     0x10044aa1
10044a8c:	xor    edx,edx
10044a8e:	test   esi,esi
10044a90:	setg   dl
10044a93:	lea    edx,[edx+edx*1-0x1]
10044a97:	mov    esi,edx
10044a99:	test   esi,esi
10044a9b:	jne    0x10043bf2
10044aa1:	movzx  esi,BYTE PTR [eax-0xc]
10044aa5:	movzx  edx,BYTE PTR [ecx-0xc]
10044aa9:	sub    esi,edx
10044aab:	je     0x10044abe
10044aad:	xor    edx,edx
10044aaf:	test   esi,esi
10044ab1:	setg   dl
10044ab4:	lea    edx,[edx+edx*1-0x1]
10044ab8:	mov    esi,edx
10044aba:	jmp    0x10044abe
10044abc:	xor    esi,esi
10044abe:	test   esi,esi
10044ac0:	jne    0x10043bf2
10044ac6:	mov    edx,DWORD PTR [eax-0xb]
10044ac9:	cmp    edx,DWORD PTR [ecx-0xb]
10044acc:	je     0x10044b4b
10044ace:	movzx  esi,dl
10044ad1:	movzx  edx,BYTE PTR [ecx-0xb]
10044ad5:	sub    esi,edx
10044ad7:	je     0x10044aee
10044ad9:	xor    edx,edx
10044adb:	test   esi,esi
10044add:	setg   dl
10044ae0:	lea    edx,[edx+edx*1-0x1]
10044ae4:	mov    esi,edx
10044ae6:	test   esi,esi
10044ae8:	jne    0x10043bf2
10044aee:	movzx  esi,BYTE PTR [eax-0xa]
10044af2:	movzx  edx,BYTE PTR [ecx-0xa]
10044af6:	sub    esi,edx
10044af8:	je     0x10044b0f
10044afa:	xor    edx,edx
10044afc:	test   esi,esi
10044afe:	setg   dl
10044b01:	lea    edx,[edx+edx*1-0x1]
10044b05:	mov    esi,edx
10044b07:	test   esi,esi
10044b09:	jne    0x10043bf2
10044b0f:	movzx  esi,BYTE PTR [eax-0x9]
10044b13:	movzx  edx,BYTE PTR [ecx-0x9]
10044b17:	sub    esi,edx
10044b19:	je     0x10044b30
10044b1b:	xor    edx,edx
10044b1d:	test   esi,esi
10044b1f:	setg   dl
10044b22:	lea    edx,[edx+edx*1-0x1]
10044b26:	mov    esi,edx
10044b28:	test   esi,esi
10044b2a:	jne    0x10043bf2
10044b30:	movzx  esi,BYTE PTR [eax-0x8]
10044b34:	movzx  edx,BYTE PTR [ecx-0x8]
10044b38:	sub    esi,edx
10044b3a:	je     0x10044b4d
10044b3c:	xor    edx,edx
10044b3e:	test   esi,esi
10044b40:	setg   dl
10044b43:	lea    edx,[edx+edx*1-0x1]
10044b47:	mov    esi,edx
10044b49:	jmp    0x10044b4d
10044b4b:	xor    esi,esi
10044b4d:	test   esi,esi
10044b4f:	jne    0x10043bf2
10044b55:	mov    edx,DWORD PTR [eax-0x7]
10044b58:	cmp    edx,DWORD PTR [ecx-0x7]
10044b5b:	je     0x10044bda
10044b5d:	movzx  esi,dl
10044b60:	movzx  edx,BYTE PTR [ecx-0x7]
10044b64:	sub    esi,edx
10044b66:	je     0x10044b7d
10044b68:	xor    edx,edx
10044b6a:	test   esi,esi
10044b6c:	setg   dl
10044b6f:	lea    edx,[edx+edx*1-0x1]
10044b73:	mov    esi,edx
10044b75:	test   esi,esi
10044b77:	jne    0x10043bf2
10044b7d:	movzx  esi,BYTE PTR [eax-0x6]
10044b81:	movzx  edx,BYTE PTR [ecx-0x6]
10044b85:	sub    esi,edx
10044b87:	je     0x10044b9e
10044b89:	xor    edx,edx
10044b8b:	test   esi,esi
10044b8d:	setg   dl
10044b90:	lea    edx,[edx+edx*1-0x1]
10044b94:	mov    esi,edx
10044b96:	test   esi,esi
10044b98:	jne    0x10043bf2
10044b9e:	movzx  esi,BYTE PTR [eax-0x5]
10044ba2:	movzx  edx,BYTE PTR [ecx-0x5]
10044ba6:	sub    esi,edx
10044ba8:	je     0x10044bbf
10044baa:	xor    edx,edx
10044bac:	test   esi,esi
10044bae:	setg   dl
10044bb1:	lea    edx,[edx+edx*1-0x1]
10044bb5:	mov    esi,edx
10044bb7:	test   esi,esi
10044bb9:	jne    0x10043bf2
10044bbf:	movzx  esi,BYTE PTR [eax-0x4]
10044bc3:	movzx  edx,BYTE PTR [ecx-0x4]
10044bc7:	sub    esi,edx
10044bc9:	je     0x10044bdc
10044bcb:	xor    edx,edx
10044bcd:	test   esi,esi
10044bcf:	setg   dl
10044bd2:	lea    edx,[edx+edx*1-0x1]
10044bd6:	mov    esi,edx
10044bd8:	jmp    0x10044bdc
10044bda:	xor    esi,esi
10044bdc:	test   esi,esi
10044bde:	jne    0x10043bf2
10044be4:	movzx  esi,BYTE PTR [eax-0x3]
10044be8:	movzx  edx,BYTE PTR [ecx-0x3]
10044bec:	sub    esi,edx
10044bee:	je     0x100447d1
10044bf4:	xor    edx,edx
10044bf6:	test   esi,esi
10044bf8:	setg   dl
10044bfb:	lea    edx,[edx+edx*1-0x1]
10044bff:	test   edx,edx
10044c01:	je     0x100447d1
10044c07:	mov    eax,edx
10044c09:	jmp    0x10043fc7
10044c0e:	mov    ecx,DWORD PTR [ebp+0x8]
10044c11:	mov    esi,DWORD PTR [ebp+0xc]
10044c14:	movzx  eax,BYTE PTR [ecx]
10044c17:	movzx  edx,BYTE PTR [esi]
10044c1a:	sub    eax,edx
10044c1c:	je     0x10044c33
10044c1e:	xor    edx,edx
10044c20:	test   eax,eax
10044c22:	setg   dl
10044c25:	lea    edx,[edx+edx*1-0x1]
10044c29:	mov    eax,edx
10044c2b:	test   eax,eax
10044c2d:	jne    0x10044d20
10044c33:	movzx  eax,BYTE PTR [ecx+0x1]
10044c37:	movzx  edx,BYTE PTR [esi+0x1]
10044c3b:	sub    eax,edx
10044c3d:	je     0x10044c54
10044c3f:	xor    edx,edx
10044c41:	test   eax,eax
10044c43:	setg   dl
10044c46:	lea    edx,[edx+edx*1-0x1]
10044c4a:	mov    eax,edx
10044c4c:	test   eax,eax
10044c4e:	jne    0x10044d20
10044c54:	movzx  eax,BYTE PTR [ecx+0x2]
10044c58:	movzx  edx,BYTE PTR [esi+0x2]
10044c5c:	sub    eax,edx
10044c5e:	je     0x10044c75
10044c60:	xor    edx,edx
10044c62:	test   eax,eax
10044c64:	setg   dl
10044c67:	lea    edx,[edx+edx*1-0x1]
10044c6b:	mov    eax,edx
10044c6d:	test   eax,eax
10044c6f:	jne    0x10044d20
10044c75:	movzx  eax,BYTE PTR [ecx+0x3]
10044c79:	movzx  ecx,BYTE PTR [esi+0x3]
10044c7d:	sub    eax,ecx
10044c7f:	je     0x10044d20
10044c85:	xor    ecx,ecx
10044c87:	test   eax,eax
10044c89:	setg   cl
10044c8c:	lea    ecx,[ecx+ecx*1-0x1]
10044c90:	mov    eax,ecx
10044c92:	jmp    0x10044d20
10044c97:	mov    ecx,DWORD PTR [ebp+0x8]
10044c9a:	mov    esi,DWORD PTR [ebp+0xc]
10044c9d:	movzx  eax,BYTE PTR [ecx]
10044ca0:	movzx  edx,BYTE PTR [esi]
10044ca3:	sub    eax,edx
10044ca5:	je     0x10044cb8
10044ca7:	xor    edx,edx
10044ca9:	test   eax,eax
10044cab:	setg   dl
10044cae:	lea    edx,[edx+edx*1-0x1]
10044cb2:	mov    eax,edx
10044cb4:	test   eax,eax
10044cb6:	jne    0x10044d20
10044cb8:	movzx  eax,BYTE PTR [ecx+0x1]
10044cbc:	movzx  edx,BYTE PTR [esi+0x1]
10044cc0:	sub    eax,edx
10044cc2:	je     0x10044cd5
10044cc4:	xor    edx,edx
10044cc6:	test   eax,eax
10044cc8:	setg   dl
10044ccb:	lea    edx,[edx+edx*1-0x1]
10044ccf:	mov    eax,edx
10044cd1:	test   eax,eax
10044cd3:	jne    0x10044d20
10044cd5:	movzx  eax,BYTE PTR [ecx+0x2]
10044cd9:	movzx  ecx,BYTE PTR [esi+0x2]
10044cdd:	jmp    0x10044c7d
10044cdf:	mov    ecx,DWORD PTR [ebp+0x8]
10044ce2:	mov    esi,DWORD PTR [ebp+0xc]
10044ce5:	movzx  eax,BYTE PTR [ecx]
10044ce8:	movzx  edx,BYTE PTR [esi]
10044ceb:	sub    eax,edx
10044ced:	je     0x10044d00
10044cef:	xor    edx,edx
10044cf1:	test   eax,eax
10044cf3:	setg   dl
10044cf6:	lea    edx,[edx+edx*1-0x1]
10044cfa:	mov    eax,edx
10044cfc:	test   eax,eax
10044cfe:	jne    0x10044d20
10044d00:	movzx  eax,BYTE PTR [ecx+0x1]
10044d04:	movzx  ecx,BYTE PTR [esi+0x1]
10044d08:	jmp    0x10044c7d
10044d0d:	mov    eax,DWORD PTR [ebp+0x8]
10044d10:	mov    ecx,DWORD PTR [ebp+0xc]
10044d13:	movzx  eax,BYTE PTR [eax]
10044d16:	movzx  ecx,BYTE PTR [ecx]
10044d19:	jmp    0x10044c7d
10044d1e:	xor    eax,eax
10044d20:	pop    edi
10044d21:	pop    esi
10044d22:	pop    ebp
10044d23:	ret    
10044d24:	mov    edi,edi
10044d26:	lds    edi,FWORD PTR [edi]
10044d28:	add    al,0x10
10044d2a:	mov    bh,0x43
10044d2c:	add    al,0x10
10044d2e:	ret    
10044d2f:	inc    edi
10044d30:	add    al,0x10
10044d32:	in     al,0x4b
10044d34:	add    al,0x10
10044d36:	dec    eax
10044d37:	aas    
10044d38:	add    al,0x10
10044d3a:	sub    BYTE PTR [ebx+0x4],al
10044d3d:	adc    BYTE PTR [edi+eax*2],dh
10044d40:	add    al,0x10
10044d42:	push   ebp
10044d43:	dec    ebx
10044d44:	add    al,0x10
10044d46:	mov    ecx,0x9810043e
10044d4b:	inc    edx
10044d4c:	add    al,0x10
10044d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10044d4f:	inc    esi
10044d50:	add    al,0x10
10044d52:	(bad)  
10044d53:	dec    edx
10044d54:	add    al,0x10
10044d56:	sub    DWORD PTR [esi],edi
10044d58:	add    al,0x10
10044d5a:	or     DWORD PTR [edx+0x4],eax
10044d5d:	adc    BYTE PTR ds:0x36100446,dl
10044d63:	dec    edx
10044d64:	add    al,0x10
10044d66:	call   0x441:0x7a10043d
10044d6d:	adc    BYTE PTR [esi-0x58effbbb],al
10044d73:	dec    ecx
10044d74:	add    al,0x10
10044d76:	or     edi,DWORD PTR ds:0x40eb1004
10044d7c:	add    al,0x10
10044d7e:	test   DWORD PTR [esp+eax*1+0x10],0x10044918
10044d86:	jl     0x10044dc4
10044d88:	add    al,0x10
10044d8a:	pop    esp
10044d8b:	inc    eax
10044d8c:	add    al,0x10
10044d8e:	push   0x89100444
10044d93:	dec    eax
10044d94:	add    al,0x10
10044d96:	stc    
10044d97:	cmp    eax,DWORD PTR [eax+edx*1]
10044d9a:	int    0x3f
10044d9c:	add    al,0x10
10044d9e:	fld    DWORD PTR [ebx+0x4]
10044da1:	adc    cl,bh
10044da3:	inc    edi
10044da4:	add    al,0x10
10044da6:	push   ebp
10044da7:	mov    ebp,esp
10044da9:	sub    esp,0x20
10044dac:	push   ebx
10044dad:	xor    ebx,ebx
10044daf:	cmp    DWORD PTR [ebp+0x14],ebx
10044db2:	jne    0x10044dd4
10044db4:	call   0x10046b55
10044db9:	push   ebx
10044dba:	push   ebx
10044dbb:	push   ebx
10044dbc:	push   ebx
10044dbd:	push   ebx
10044dbe:	mov    DWORD PTR [eax],0x16
10044dc4:	call   0x1004338c
10044dc9:	add    esp,0x14
10044dcc:	or     eax,0xffffffff
10044dcf:	jmp    0x10044e99
10044dd4:	push   esi
10044dd5:	mov    esi,DWORD PTR [ebp+0xc]
10044dd8:	push   edi
10044dd9:	mov    edi,DWORD PTR [ebp+0x10]
10044ddc:	cmp    edi,ebx
10044dde:	je     0x10044e04
10044de0:	cmp    esi,ebx
10044de2:	jne    0x10044e04
10044de4:	call   0x10046b55
10044de9:	push   ebx
10044dea:	push   ebx
10044deb:	push   ebx
10044dec:	push   ebx
10044ded:	push   ebx
10044dee:	mov    DWORD PTR [eax],0x16
10044df4:	call   0x1004338c
10044df9:	add    esp,0x14
10044dfc:	or     eax,0xffffffff
10044dff:	jmp    0x10044e97
10044e04:	cmp    edi,0x3fffffff
10044e0a:	mov    DWORD PTR [ebp-0x14],0x42
10044e11:	mov    DWORD PTR [ebp-0x18],esi
10044e14:	mov    DWORD PTR [ebp-0x20],esi
10044e17:	jbe    0x10044e22
10044e19:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
10044e20:	jmp    0x10044e28
10044e22:	lea    eax,[edi+edi*1]
10044e25:	mov    DWORD PTR [ebp-0x1c],eax
10044e28:	push   DWORD PTR [ebp+0x1c]
10044e2b:	lea    eax,[ebp-0x20]
10044e2e:	push   DWORD PTR [ebp+0x18]
10044e31:	push   DWORD PTR [ebp+0x14]
10044e34:	push   eax
10044e35:	call   DWORD PTR [ebp+0x8]
10044e38:	add    esp,0x10
10044e3b:	cmp    esi,ebx
10044e3d:	mov    DWORD PTR [ebp+0x14],eax
10044e40:	je     0x10044e97
10044e42:	cmp    eax,ebx
10044e44:	jl     0x10044e88
10044e46:	dec    DWORD PTR [ebp-0x1c]
10044e49:	js     0x10044e55
10044e4b:	mov    eax,DWORD PTR [ebp-0x20]
10044e4e:	mov    BYTE PTR [eax],bl
10044e50:	inc    DWORD PTR [ebp-0x20]
10044e53:	jmp    0x10044e66
10044e55:	lea    eax,[ebp-0x20]
10044e58:	push   eax
10044e59:	push   ebx
10044e5a:	call   0x100487cd
10044e5f:	cmp    eax,0xffffffff
10044e62:	pop    ecx
10044e63:	pop    ecx
10044e64:	je     0x10044e88
10044e66:	dec    DWORD PTR [ebp-0x1c]
10044e69:	js     0x10044e72
10044e6b:	mov    eax,DWORD PTR [ebp-0x20]
10044e6e:	mov    BYTE PTR [eax],bl
10044e70:	jmp    0x10044e83
10044e72:	lea    eax,[ebp-0x20]
10044e75:	push   eax
10044e76:	push   ebx
10044e77:	call   0x100487cd
10044e7c:	cmp    eax,0xffffffff
10044e7f:	pop    ecx
10044e80:	pop    ecx
10044e81:	je     0x10044e88
10044e83:	mov    eax,DWORD PTR [ebp+0x14]
10044e86:	jmp    0x10044e97
10044e88:	xor    eax,eax
10044e8a:	cmp    DWORD PTR [ebp-0x1c],ebx
10044e8d:	mov    WORD PTR [esi+edi*2-0x2],bx
10044e92:	setge  al
10044e95:	dec    eax
10044e96:	dec    eax
10044e97:	pop    edi
10044e98:	pop    esi
10044e99:	pop    ebx
10044e9a:	leave  
10044e9b:	ret    
10044e9c:	push   ebp
10044e9d:	mov    ebp,esp
10044e9f:	push   esi
10044ea0:	xor    esi,esi
10044ea2:	cmp    DWORD PTR [ebp+0x10],esi
10044ea5:	jne    0x10044ec4
10044ea7:	call   0x10046b55
10044eac:	push   esi
10044ead:	push   esi
10044eae:	push   esi
10044eaf:	push   esi
10044eb0:	push   esi
10044eb1:	mov    DWORD PTR [eax],0x16
10044eb7:	call   0x1004338c
10044ebc:	add    esp,0x14
10044ebf:	or     eax,0xffffffff
10044ec2:	jmp    0x10044f20
10044ec4:	push   edi
10044ec5:	mov    edi,DWORD PTR [ebp+0x8]
10044ec8:	cmp    edi,esi
10044eca:	je     0x10044ed1
10044ecc:	cmp    DWORD PTR [ebp+0xc],esi
10044ecf:	ja     0x10044ede
10044ed1:	call   0x10046b55
10044ed6:	mov    DWORD PTR [eax],0x16
10044edc:	jmp    0x10044f0f
10044ede:	push   DWORD PTR [ebp+0x18]
10044ee1:	push   DWORD PTR [ebp+0x14]
10044ee4:	push   DWORD PTR [ebp+0x10]
10044ee7:	push   DWORD PTR [ebp+0xc]
10044eea:	push   edi
10044eeb:	push   0x100492da
10044ef0:	call   0x10044da6
10044ef5:	add    esp,0x18
10044ef8:	cmp    eax,esi
10044efa:	jge    0x10044eff
10044efc:	mov    WORD PTR [edi],si
10044eff:	cmp    eax,0xfffffffe
10044f02:	jne    0x10044f1f
10044f04:	call   0x10046b55
10044f09:	mov    DWORD PTR [eax],0x22
10044f0f:	push   esi
10044f10:	push   esi
10044f11:	push   esi
10044f12:	push   esi
10044f13:	push   esi
10044f14:	call   0x1004338c
10044f19:	add    esp,0x14
10044f1c:	or     eax,0xffffffff
10044f1f:	pop    edi
10044f20:	pop    esi
10044f21:	pop    ebp
10044f22:	ret    
10044f23:	push   DWORD PTR [esp+0x10]
10044f27:	push   0x0
10044f29:	push   DWORD PTR [esp+0x14]
10044f2d:	push   DWORD PTR [esp+0x14]
10044f31:	push   DWORD PTR [esp+0x14]
10044f35:	call   0x10044e9c
10044f3a:	add    esp,0x14
10044f3d:	ret    
10044f3e:	push   0xc
10044f40:	push   0x100745c0
10044f45:	call   0x10046c94
10044f4a:	and    DWORD PTR [ebp-0x1c],0x0
10044f4e:	mov    esi,DWORD PTR [ebp+0x8]
10044f51:	cmp    esi,DWORD PTR ds:0x10082590
10044f57:	ja     0x10044f7b
10044f59:	push   0x4
10044f5b:	call   0x10047c9d
10044f60:	pop    ecx
10044f61:	and    DWORD PTR [ebp-0x4],0x0
10044f65:	push   esi
10044f66:	call   0x100484ea
10044f6b:	pop    ecx
10044f6c:	mov    DWORD PTR [ebp-0x1c],eax
10044f6f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10044f76:	call   0x10044f84
10044f7b:	mov    eax,DWORD PTR [ebp-0x1c]
10044f7e:	call   0x10046cd9
10044f83:	ret    
10044f84:	push   0x4
10044f86:	call   0x10047bc5
10044f8b:	pop    ecx
10044f8c:	ret    
10044f8d:	push   ebp
10044f8e:	mov    ebp,DWORD PTR [esp+0x8]
10044f92:	cmp    ebp,0xffffffe0
10044f95:	ja     0x1004503a
10044f9b:	push   ebx
10044f9c:	mov    ebx,DWORD PTR ds:0x1006618c
10044fa2:	push   esi
10044fa3:	push   edi
10044fa4:	xor    esi,esi
10044fa6:	cmp    DWORD PTR ds:0x1007fe38,esi
10044fac:	mov    edi,ebp
10044fae:	jne    0x10044fc8
10044fb0:	call   0x10049d9a
10044fb5:	push   0x1e
10044fb7:	call   0x10049bfa
10044fbc:	push   0xff
10044fc1:	call   0x100475e2
10044fc6:	pop    ecx
10044fc7:	pop    ecx
10044fc8:	mov    eax,ds:0x100825a0
10044fcd:	cmp    eax,0x1
10044fd0:	jne    0x10044fe0
10044fd2:	cmp    ebp,esi
10044fd4:	je     0x10044fda
10044fd6:	mov    eax,ebp
10044fd8:	jmp    0x10044fdd
10044fda:	xor    eax,eax
10044fdc:	inc    eax
10044fdd:	push   eax
10044fde:	jmp    0x10044ffe
10044fe0:	cmp    eax,0x3
10044fe3:	jne    0x10044ff0
10044fe5:	push   ebp
10044fe6:	call   0x10044f3e
10044feb:	cmp    eax,esi
10044fed:	pop    ecx
10044fee:	jne    0x10045007
10044ff0:	cmp    ebp,esi
10044ff2:	jne    0x10044ff7
10044ff4:	xor    edi,edi
10044ff6:	inc    edi
10044ff7:	add    edi,0xf
10044ffa:	and    edi,0xfffffff0
10044ffd:	push   edi
10044ffe:	push   esi
10044fff:	push   DWORD PTR ds:0x1007fe38
10045005:	call   ebx
10045007:	mov    esi,eax
10045009:	test   esi,esi
1004500b:	jne    0x10045033
1004500d:	cmp    DWORD PTR ds:0x1007ff94,eax
10045013:	push   0xc
10045015:	pop    edi
10045016:	je     0x10045025
10045018:	push   ebp
10045019:	call   0x10047992
1004501e:	test   eax,eax
10045020:	pop    ecx
10045021:	jne    0x10044fa4
10045023:	jmp    0x1004502c
10045025:	call   0x10046b55
1004502a:	mov    DWORD PTR [eax],edi
1004502c:	call   0x10046b55
10045031:	mov    DWORD PTR [eax],edi
10045033:	pop    edi
10045034:	mov    eax,esi
10045036:	pop    esi
10045037:	pop    ebx
10045038:	pop    ebp
10045039:	ret    
1004503a:	push   ebp
1004503b:	call   0x10047992
10045040:	pop    ecx
10045041:	call   0x10046b55
10045046:	mov    DWORD PTR [eax],0xc
1004504c:	xor    eax,eax
1004504e:	pop    ebp
1004504f:	ret    
10045050:	push   ebp
10045051:	mov    ebp,esp
10045053:	sub    esp,0x5c
10045056:	mov    eax,ds:0x1007e030
1004505b:	xor    eax,ebp
1004505d:	mov    DWORD PTR [ebp-0x4],eax
10045060:	push   ebx
10045061:	push   esi
10045062:	push   edi
10045063:	push   0x4
10045065:	xor    edi,edi
10045067:	pop    eax
10045068:	mov    DWORD PTR [ebp-0x8],edi
1004506b:	call   0x10049de0
10045070:	mov    DWORD PTR [ebp-0x10],esp
10045073:	push   0x1c
10045075:	lea    eax,[ebp-0x38]
10045078:	push   eax
10045079:	push   DWORD PTR [ebp-0x10]
1004507c:	call   DWORD PTR ds:0x100660f4
10045082:	test   eax,eax
10045084:	je     0x10045168
1004508a:	mov    eax,DWORD PTR [ebp-0x34]
1004508d:	mov    DWORD PTR [ebp-0x18],eax
10045090:	lea    eax,[ebp-0x5c]
10045093:	push   eax
10045094:	call   DWORD PTR ds:0x1006619c
1004509a:	mov    esi,DWORD PTR [ebp-0x58]
1004509d:	lea    eax,[ebp-0x8]
100450a0:	push   eax
100450a1:	mov    DWORD PTR [ebp-0x14],esi
100450a4:	xor    ebx,ebx
100450a6:	call   0x10047641
100450ab:	test   eax,eax
100450ad:	pop    ecx
100450ae:	je     0x100450bd
100450b0:	push   edi
100450b1:	push   edi
100450b2:	push   edi
100450b3:	push   edi
100450b4:	push   edi
100450b5:	call   0x10043290
100450ba:	add    esp,0x14
100450bd:	cmp    DWORD PTR [ebp-0x8],0x2
100450c1:	jne    0x100450f9
100450c3:	push   0x1006f83c
100450c8:	call   DWORD PTR ds:0x10066198
100450ce:	cmp    eax,edi
100450d0:	je     0x100450f9
100450d2:	push   0x100665d0
100450d7:	push   eax
100450d8:	call   DWORD PTR ds:0x1006612c
100450de:	cmp    eax,edi
100450e0:	je     0x100450f9
100450e2:	lea    ecx,[ebp-0xc]
100450e5:	push   ecx
100450e6:	mov    DWORD PTR [ebp-0xc],edi
100450e9:	call   eax
100450eb:	cmp    eax,0x1
100450ee:	pop    ecx
100450ef:	jne    0x100450f9
100450f1:	cmp    DWORD PTR [ebp-0xc],edi
100450f4:	jbe    0x100450f9
100450f6:	mov    ebx,DWORD PTR [ebp-0xc]
100450f9:	mov    edi,DWORD PTR [ebp-0x8]
100450fc:	dec    edi
100450fd:	neg    edi
100450ff:	sbb    edi,edi
10045101:	and    edi,0x103
10045107:	lea    eax,[esi-0x1]
1004510a:	lea    ebx,[ebx+esi*1-0x1]
1004510e:	not    eax
10045110:	inc    edi
10045111:	and    ebx,eax
10045113:	je     0x10045117
10045115:	add    ebx,esi
10045117:	lea    eax,[esi+esi*1]
1004511a:	cmp    ebx,eax
1004511c:	jae    0x10045120
1004511e:	mov    ebx,eax
10045120:	dec    esi
10045121:	not    esi
10045123:	and    esi,DWORD PTR [ebp-0x10]
10045126:	sub    esi,ebx
10045128:	cmp    DWORD PTR [ebp-0x8],0x1
1004512c:	jne    0x10045133
1004512e:	push   0x11
10045130:	pop    eax
10045131:	jmp    0x10045136
10045133:	mov    eax,DWORD PTR [ebp-0x14]
10045136:	mov    ecx,DWORD PTR [ebp-0x18]
10045139:	add    eax,ecx
1004513b:	cmp    esi,eax
1004513d:	jb     0x10045168
1004513f:	push   0x4
10045141:	push   0x1000
10045146:	push   ebx
10045147:	push   esi
10045148:	call   DWORD PTR ds:0x10066194
1004514e:	test   eax,eax
10045150:	je     0x10045168
10045152:	lea    eax,[ebp-0x1c]
10045155:	push   eax
10045156:	push   edi
10045157:	push   ebx
10045158:	push   esi
10045159:	call   DWORD PTR ds:0x10066190
1004515f:	test   eax,eax
10045161:	je     0x10045168
10045163:	xor    eax,eax
10045165:	inc    eax
10045166:	jmp    0x1004516a
10045168:	xor    eax,eax
1004516a:	lea    esp,[ebp-0x68]
1004516d:	pop    edi
1004516e:	pop    esi
1004516f:	pop    ebx
10045170:	mov    ecx,DWORD PTR [ebp-0x4]
10045173:	xor    ecx,ebp
10045175:	call   0x10042e97
1004517a:	leave  
1004517b:	ret    
1004517c:	int3   
1004517d:	int3   
1004517e:	int3   
1004517f:	int3   
10045180:	push   ebp
10045181:	mov    ebp,esp
10045183:	push   edi
10045184:	push   esi
10045185:	mov    esi,DWORD PTR [ebp+0xc]
10045188:	mov    ecx,DWORD PTR [ebp+0x10]
1004518b:	mov    edi,DWORD PTR [ebp+0x8]
1004518e:	mov    eax,ecx
10045190:	mov    edx,ecx
10045192:	add    eax,esi
10045194:	cmp    edi,esi
10045196:	jbe    0x100451a0
10045198:	cmp    edi,eax
1004519a:	jb     0x10045344
100451a0:	cmp    ecx,0x100
100451a6:	jb     0x100451c7
100451a8:	cmp    DWORD PTR ds:0x10082584,0x0
100451af:	je     0x100451c7
100451b1:	push   edi
100451b2:	push   esi
100451b3:	and    edi,0xf
100451b6:	and    esi,0xf
100451b9:	cmp    edi,esi
100451bb:	pop    esi
100451bc:	pop    edi
100451bd:	jne    0x100451c7
100451bf:	pop    esi
100451c0:	pop    edi
100451c1:	pop    ebp
100451c2:	jmp    0x10049e92
100451c7:	test   edi,0x3
100451cd:	jne    0x100451e4
100451cf:	shr    ecx,0x2
100451d2:	and    edx,0x3
100451d5:	cmp    ecx,0x8
100451d8:	jb     0x10045204
100451da:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100451dc:	jmp    DWORD PTR [edx*4+0x100452f4]
100451e3:	nop
100451e4:	mov    eax,edi
100451e6:	mov    edx,0x3
100451eb:	sub    ecx,0x4
100451ee:	jb     0x100451fc
100451f0:	and    eax,0x3
100451f3:	add    ecx,eax
100451f5:	jmp    DWORD PTR [eax*4+0x10045208]
100451fc:	jmp    DWORD PTR [ecx*4+0x10045304]
10045203:	nop
10045204:	jmp    DWORD PTR [ecx*4+0x10045288]
1004520b:	nop
1004520c:	sbb    BYTE PTR [edx+0x4],dl
1004520f:	adc    BYTE PTR [edx+edx*2+0x4],al
10045213:	adc    BYTE PTR [eax+0x52],ch
10045216:	add    al,0x10
10045218:	and    edx,ecx
1004521a:	mov    al,BYTE PTR [esi]
1004521c:	mov    BYTE PTR [edi],al
1004521e:	mov    al,BYTE PTR [esi+0x1]
10045221:	mov    BYTE PTR [edi+0x1],al
10045224:	mov    al,BYTE PTR [esi+0x2]
10045227:	shr    ecx,0x2
1004522a:	mov    BYTE PTR [edi+0x2],al
1004522d:	add    esi,0x3
10045230:	add    edi,0x3
10045233:	cmp    ecx,0x8
10045236:	jb     0x10045204
10045238:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004523a:	jmp    DWORD PTR [edx*4+0x100452f4]
10045241:	lea    ecx,[ecx+0x0]
10045244:	and    edx,ecx
10045246:	mov    al,BYTE PTR [esi]
10045248:	mov    BYTE PTR [edi],al
1004524a:	mov    al,BYTE PTR [esi+0x1]
1004524d:	shr    ecx,0x2
10045250:	mov    BYTE PTR [edi+0x1],al
10045253:	add    esi,0x2
10045256:	add    edi,0x2
10045259:	cmp    ecx,0x8
1004525c:	jb     0x10045204
1004525e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045260:	jmp    DWORD PTR [edx*4+0x100452f4]
10045267:	nop
10045268:	and    edx,ecx
1004526a:	mov    al,BYTE PTR [esi]
1004526c:	mov    BYTE PTR [edi],al
1004526e:	add    esi,0x1
10045271:	shr    ecx,0x2
10045274:	add    edi,0x1
10045277:	cmp    ecx,0x8
1004527a:	jb     0x10045204
1004527c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004527e:	jmp    DWORD PTR [edx*4+0x100452f4]
10045285:	lea    ecx,[ecx+0x0]
10045288:	jmp    0x100452dc
1004528a:	add    al,0x10
1004528c:	fcom   DWORD PTR [edx+0x4]
1004528f:	adc    al,dl
10045291:	push   edx
10045292:	add    al,0x10
10045294:	enter  0x452,0x10
10045298:	rcl    BYTE PTR [edx+0x4],0x10
1004529c:	mov    eax,0xb0100452
100452a1:	push   edx
100452a2:	add    al,0x10
100452a4:	test   al,0x52
100452a6:	add    al,0x10
100452a8:	mov    eax,DWORD PTR [esi+ecx*4-0x1c]
100452ac:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
100452b0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
100452b4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
100452b8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
100452bc:	mov    DWORD PTR [edi+ecx*4-0x14],eax
100452c0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
100452c4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
100452c8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
100452cc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
100452d0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
100452d4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
100452d8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
100452dc:	mov    DWORD PTR [edi+ecx*4-0x4],eax
100452e0:	lea    eax,[ecx*4+0x0]
100452e7:	add    esi,eax
100452e9:	add    edi,eax
100452eb:	jmp    DWORD PTR [edx*4+0x100452f4]
100452f2:	mov    edi,edi
100452f4:	add    al,0x53
100452f6:	add    al,0x10
100452f8:	or     al,0x53
100452fa:	add    al,0x10
100452fc:	sbb    BYTE PTR [ebx+0x4],dl
100452ff:	adc    BYTE PTR [ebx+edx*2],ch
10045302:	add    al,0x10
10045304:	mov    eax,DWORD PTR [ebp+0x8]
10045307:	pop    esi
10045308:	pop    edi
10045309:	leave  
1004530a:	ret    
1004530b:	nop
1004530c:	mov    al,BYTE PTR [esi]
1004530e:	mov    BYTE PTR [edi],al
10045310:	mov    eax,DWORD PTR [ebp+0x8]
10045313:	pop    esi
10045314:	pop    edi
10045315:	leave  
10045316:	ret    
10045317:	nop
10045318:	mov    al,BYTE PTR [esi]
1004531a:	mov    BYTE PTR [edi],al
1004531c:	mov    al,BYTE PTR [esi+0x1]
1004531f:	mov    BYTE PTR [edi+0x1],al
10045322:	mov    eax,DWORD PTR [ebp+0x8]
10045325:	pop    esi
10045326:	pop    edi
10045327:	leave  
10045328:	ret    
10045329:	lea    ecx,[ecx+0x0]
1004532c:	mov    al,BYTE PTR [esi]
1004532e:	mov    BYTE PTR [edi],al
10045330:	mov    al,BYTE PTR [esi+0x1]
10045333:	mov    BYTE PTR [edi+0x1],al
10045336:	mov    al,BYTE PTR [esi+0x2]
10045339:	mov    BYTE PTR [edi+0x2],al
1004533c:	mov    eax,DWORD PTR [ebp+0x8]
1004533f:	pop    esi
10045340:	pop    edi
10045341:	leave  
10045342:	ret    
10045343:	nop
10045344:	lea    esi,[ecx+esi*1-0x4]
10045348:	lea    edi,[ecx+edi*1-0x4]
1004534c:	test   edi,0x3
10045352:	jne    0x10045378
10045354:	shr    ecx,0x2
10045357:	and    edx,0x3
1004535a:	cmp    ecx,0x8
1004535d:	jb     0x1004536c
1004535f:	std    
10045360:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045362:	cld    
10045363:	jmp    DWORD PTR [edx*4+0x10045490]
1004536a:	mov    edi,edi
1004536c:	neg    ecx
1004536e:	jmp    DWORD PTR [ecx*4+0x10045440]
10045375:	lea    ecx,[ecx+0x0]
10045378:	mov    eax,edi
1004537a:	mov    edx,0x3
1004537f:	cmp    ecx,0x4
10045382:	jb     0x10045390
10045384:	and    eax,0x3
10045387:	sub    ecx,eax
10045389:	jmp    DWORD PTR [eax*4+0x10045394]
10045390:	jmp    DWORD PTR [ecx*4+0x10045490]
10045397:	nop
10045398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10045399:	push   ebx
1004539a:	add    al,0x10
1004539c:	enter  0x453,0x10
100453a0:	lock push ebx
100453a2:	add    al,0x10
100453a4:	mov    al,BYTE PTR [esi+0x3]
100453a7:	and    edx,ecx
100453a9:	mov    BYTE PTR [edi+0x3],al
100453ac:	sub    esi,0x1
100453af:	shr    ecx,0x2
100453b2:	sub    edi,0x1
100453b5:	cmp    ecx,0x8
100453b8:	jb     0x1004536c
100453ba:	std    
100453bb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100453bd:	cld    
100453be:	jmp    DWORD PTR [edx*4+0x10045490]
100453c5:	lea    ecx,[ecx+0x0]
100453c8:	mov    al,BYTE PTR [esi+0x3]
100453cb:	and    edx,ecx
100453cd:	mov    BYTE PTR [edi+0x3],al
100453d0:	mov    al,BYTE PTR [esi+0x2]
100453d3:	shr    ecx,0x2
100453d6:	mov    BYTE PTR [edi+0x2],al
100453d9:	sub    esi,0x2
100453dc:	sub    edi,0x2
100453df:	cmp    ecx,0x8
100453e2:	jb     0x1004536c
100453e4:	std    
100453e5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100453e7:	cld    
100453e8:	jmp    DWORD PTR [edx*4+0x10045490]
100453ef:	nop
100453f0:	mov    al,BYTE PTR [esi+0x3]
100453f3:	and    edx,ecx
100453f5:	mov    BYTE PTR [edi+0x3],al
100453f8:	mov    al,BYTE PTR [esi+0x2]
100453fb:	mov    BYTE PTR [edi+0x2],al
100453fe:	mov    al,BYTE PTR [esi+0x1]
10045401:	shr    ecx,0x2
10045404:	mov    BYTE PTR [edi+0x1],al
10045407:	sub    esi,0x3
1004540a:	sub    edi,0x3
1004540d:	cmp    ecx,0x8
10045410:	jb     0x1004536c
10045416:	std    
10045417:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045419:	cld    
1004541a:	jmp    DWORD PTR [edx*4+0x10045490]
10045421:	lea    ecx,[ecx+0x0]
10045424:	inc    esp
10045425:	push   esp
10045426:	add    al,0x10
10045428:	dec    esp
10045429:	push   esp
1004542a:	add    al,0x10
1004542c:	push   esp
1004542d:	push   esp
1004542e:	add    al,0x10
10045430:	pop    esp
10045431:	push   esp
10045432:	add    al,0x10
10045434:	fs push esp
10045436:	add    al,0x10
10045438:	ins    BYTE PTR es:[edi],dx
10045439:	push   esp
1004543a:	add    al,0x10
1004543c:	je     0x10045492
1004543e:	add    al,0x10
10045440:	xchg   DWORD PTR [esp+eax*1+0x10],edx
10045444:	mov    eax,DWORD PTR [esi+ecx*4+0x1c]
10045448:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
1004544c:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
10045450:	mov    DWORD PTR [edi+ecx*4+0x18],eax
10045454:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
10045458:	mov    DWORD PTR [edi+ecx*4+0x14],eax
1004545c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
10045460:	mov    DWORD PTR [edi+ecx*4+0x10],eax
10045464:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
10045468:	mov    DWORD PTR [edi+ecx*4+0xc],eax
1004546c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
10045470:	mov    DWORD PTR [edi+ecx*4+0x8],eax
10045474:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
10045478:	mov    DWORD PTR [edi+ecx*4+0x4],eax
1004547c:	lea    eax,[ecx*4+0x0]
10045483:	add    esi,eax
10045485:	add    edi,eax
10045487:	jmp    DWORD PTR [edx*4+0x10045490]
1004548e:	mov    edi,edi
10045490:	mov    al,ds:0xa8100454
10045495:	push   esp
10045496:	add    al,0x10
10045498:	mov    eax,0xcc100454
1004549d:	push   esp
1004549e:	add    al,0x10
100454a0:	mov    eax,DWORD PTR [ebp+0x8]
100454a3:	pop    esi
100454a4:	pop    edi
100454a5:	leave  
100454a6:	ret    
100454a7:	nop
100454a8:	mov    al,BYTE PTR [esi+0x3]
100454ab:	mov    BYTE PTR [edi+0x3],al
100454ae:	mov    eax,DWORD PTR [ebp+0x8]
100454b1:	pop    esi
100454b2:	pop    edi
100454b3:	leave  
100454b4:	ret    
100454b5:	lea    ecx,[ecx+0x0]
100454b8:	mov    al,BYTE PTR [esi+0x3]
100454bb:	mov    BYTE PTR [edi+0x3],al
100454be:	mov    al,BYTE PTR [esi+0x2]
100454c1:	mov    BYTE PTR [edi+0x2],al
100454c4:	mov    eax,DWORD PTR [ebp+0x8]
100454c7:	pop    esi
100454c8:	pop    edi
100454c9:	leave  
100454ca:	ret    
100454cb:	nop
100454cc:	mov    al,BYTE PTR [esi+0x3]
100454cf:	mov    BYTE PTR [edi+0x3],al
100454d2:	mov    al,BYTE PTR [esi+0x2]
100454d5:	mov    BYTE PTR [edi+0x2],al
100454d8:	mov    al,BYTE PTR [esi+0x1]
100454db:	mov    BYTE PTR [edi+0x1],al
100454de:	mov    eax,DWORD PTR [ebp+0x8]
100454e1:	pop    esi
100454e2:	pop    edi
100454e3:	leave  
100454e4:	ret    
100454e5:	mov    eax,DWORD PTR [esp+0x4]
100454e9:	test   eax,eax
100454eb:	push   esi
100454ec:	mov    esi,ecx
100454ee:	mov    BYTE PTR [esi+0xc],0x0
100454f2:	jne    0x10045557
100454f4:	call   0x100470fc
100454f9:	mov    DWORD PTR [esi+0x8],eax
100454fc:	mov    ecx,DWORD PTR [eax+0x6c]
100454ff:	mov    DWORD PTR [esi],ecx
10045501:	mov    ecx,DWORD PTR [eax+0x68]
10045504:	mov    DWORD PTR [esi+0x4],ecx
10045507:	mov    ecx,DWORD PTR [esi]
10045509:	cmp    ecx,DWORD PTR ds:0x1007e9a8
1004550f:	je     0x10045523
10045511:	mov    ecx,DWORD PTR ds:0x1007e8c4
10045517:	test   DWORD PTR [eax+0x70],ecx
1004551a:	jne    0x10045523
1004551c:	call   0x1004a8a8
10045521:	mov    DWORD PTR [esi],eax
10045523:	mov    eax,DWORD PTR [esi+0x4]
10045526:	cmp    eax,DWORD PTR ds:0x1007e7c8
1004552c:	je     0x10045544
1004552e:	mov    eax,DWORD PTR [esi+0x8]
10045531:	mov    ecx,DWORD PTR ds:0x1007e8c4
10045537:	test   DWORD PTR [eax+0x70],ecx
1004553a:	jne    0x10045544
1004553c:	call   0x1004a197
10045541:	mov    DWORD PTR [esi+0x4],eax
10045544:	mov    eax,DWORD PTR [esi+0x8]
10045547:	test   BYTE PTR [eax+0x70],0x2
1004554b:	jne    0x10045561
1004554d:	or     DWORD PTR [eax+0x70],0x2
10045551:	mov    BYTE PTR [esi+0xc],0x1
10045555:	jmp    0x10045561
10045557:	mov    ecx,DWORD PTR [eax]
10045559:	mov    DWORD PTR [esi],ecx
1004555b:	mov    eax,DWORD PTR [eax+0x4]
1004555e:	mov    DWORD PTR [esi+0x4],eax
10045561:	mov    eax,esi
10045563:	pop    esi
10045564:	ret    0x4
10045567:	mov    edx,DWORD PTR [esp+0x8]
1004556b:	push   esi
1004556c:	mov    esi,DWORD PTR [esp+0x8]
10045570:	push   edi
10045571:	movzx  eax,BYTE PTR [esi]
10045574:	lea    ecx,[eax-0x41]
10045577:	inc    esi
10045578:	cmp    ecx,0x19
1004557b:	ja     0x10045580
1004557d:	add    eax,0x20
10045580:	movzx  ecx,BYTE PTR [edx]
10045583:	lea    edi,[ecx-0x41]
10045586:	inc    edx
10045587:	cmp    edi,0x19
1004558a:	ja     0x1004558f
1004558c:	add    ecx,0x20
1004558f:	test   eax,eax
10045591:	je     0x10045597
10045593:	cmp    eax,ecx
10045595:	je     0x10045571
10045597:	pop    edi
10045598:	sub    eax,ecx
1004559a:	pop    esi
1004559b:	ret    
1004559c:	push   ebp
1004559d:	mov    ebp,esp
1004559f:	sub    esp,0x10
100455a2:	push   ebx
100455a3:	push   DWORD PTR [ebp+0x10]
100455a6:	lea    ecx,[ebp-0x10]
100455a9:	call   0x100454e5
100455ae:	xor    ebx,ebx
100455b0:	cmp    DWORD PTR [ebp+0x8],ebx
100455b3:	jne    0x100455e3
100455b5:	call   0x10046b55
100455ba:	push   ebx
100455bb:	push   ebx
100455bc:	push   ebx
100455bd:	push   ebx
100455be:	push   ebx
100455bf:	mov    DWORD PTR [eax],0x16
100455c5:	call   0x1004338c
100455ca:	add    esp,0x14
100455cd:	cmp    BYTE PTR [ebp-0x4],bl
100455d0:	je     0x100455d9
100455d2:	mov    eax,DWORD PTR [ebp-0x8]
100455d5:	and    DWORD PTR [eax+0x70],0xfffffffd
100455d9:	mov    eax,0x7fffffff
100455de:	jmp    0x1004566c
100455e3:	push   edi
100455e4:	mov    edi,DWORD PTR [ebp+0xc]
100455e7:	cmp    edi,ebx
100455e9:	jne    0x10045616
100455eb:	call   0x10046b55
100455f0:	push   ebx
100455f1:	push   ebx
100455f2:	push   ebx
100455f3:	push   ebx
100455f4:	push   ebx
100455f5:	mov    DWORD PTR [eax],0x16
100455fb:	call   0x1004338c
10045600:	add    esp,0x14
10045603:	cmp    BYTE PTR [ebp-0x4],bl
10045606:	je     0x1004560f
10045608:	mov    eax,DWORD PTR [ebp-0x8]
1004560b:	and    DWORD PTR [eax+0x70],0xfffffffd
1004560f:	mov    eax,0x7fffffff
10045614:	jmp    0x1004566b
10045616:	mov    eax,DWORD PTR [ebp-0x10]
10045619:	cmp    DWORD PTR [eax+0x14],ebx
1004561c:	jne    0x1004562b
1004561e:	push   edi
1004561f:	push   DWORD PTR [ebp+0x8]
10045622:	call   0x10045567
10045627:	pop    ecx
10045628:	pop    ecx
10045629:	jmp    0x1004565f
1004562b:	push   esi
1004562c:	mov    eax,DWORD PTR [ebp+0x8]
1004562f:	movzx  eax,BYTE PTR [eax]
10045632:	lea    ecx,[ebp-0x10]
10045635:	push   ecx
10045636:	push   eax
10045637:	call   0x10045cba
1004563c:	inc    DWORD PTR [ebp+0x8]
1004563f:	mov    esi,eax
10045641:	movzx  eax,BYTE PTR [edi]
10045644:	lea    ecx,[ebp-0x10]
10045647:	push   ecx
10045648:	push   eax
10045649:	call   0x10045cba
1004564e:	add    esp,0x10
10045651:	inc    edi
10045652:	cmp    esi,ebx
10045654:	je     0x1004565a
10045656:	cmp    esi,eax
10045658:	je     0x1004562c
1004565a:	sub    esi,eax
1004565c:	mov    eax,esi
1004565e:	pop    esi
1004565f:	cmp    BYTE PTR [ebp-0x4],bl
10045662:	je     0x1004566b
10045664:	mov    ecx,DWORD PTR [ebp-0x8]
10045667:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004566b:	pop    edi
1004566c:	pop    ebx
1004566d:	leave  
1004566e:	ret    
1004566f:	push   ebp
10045670:	mov    ebp,esp
10045672:	push   esi
10045673:	xor    esi,esi
10045675:	cmp    DWORD PTR ds:0x100802c8,esi
1004567b:	jne    0x100456ad
1004567d:	cmp    DWORD PTR [ebp+0x8],esi
10045680:	jne    0x100456a1
10045682:	call   0x10046b55
10045687:	push   esi
10045688:	push   esi
10045689:	push   esi
1004568a:	push   esi
1004568b:	push   esi
1004568c:	mov    DWORD PTR [eax],0x16
10045692:	call   0x1004338c
10045697:	add    esp,0x14
1004569a:	mov    eax,0x7fffffff
1004569f:	jmp    0x100456bc
100456a1:	cmp    DWORD PTR [ebp+0xc],esi
100456a4:	je     0x10045682
100456a6:	pop    esi
100456a7:	pop    ebp
100456a8:	jmp    0x10045567
100456ad:	push   esi
100456ae:	push   DWORD PTR [ebp+0xc]
100456b1:	push   DWORD PTR [ebp+0x8]
100456b4:	call   0x1004559c
100456b9:	add    esp,0xc
100456bc:	pop    esi
100456bd:	pop    ebp
100456be:	ret    
100456bf:	int3   
100456c0:	push   ebp
100456c1:	mov    ebp,esp
100456c3:	push   edi
100456c4:	push   esi
100456c5:	mov    esi,DWORD PTR [ebp+0xc]
100456c8:	mov    ecx,DWORD PTR [ebp+0x10]
100456cb:	mov    edi,DWORD PTR [ebp+0x8]
100456ce:	mov    eax,ecx
100456d0:	mov    edx,ecx
100456d2:	add    eax,esi
100456d4:	cmp    edi,esi
100456d6:	jbe    0x100456e0
100456d8:	cmp    edi,eax
100456da:	jb     0x10045884
100456e0:	cmp    ecx,0x100
100456e6:	jb     0x10045707
100456e8:	cmp    DWORD PTR ds:0x10082584,0x0
100456ef:	je     0x10045707
100456f1:	push   edi
100456f2:	push   esi
100456f3:	and    edi,0xf
100456f6:	and    esi,0xf
100456f9:	cmp    edi,esi
100456fb:	pop    esi
100456fc:	pop    edi
100456fd:	jne    0x10045707
100456ff:	pop    esi
10045700:	pop    edi
10045701:	pop    ebp
10045702:	jmp    0x10049e92
10045707:	test   edi,0x3
1004570d:	jne    0x10045724
1004570f:	shr    ecx,0x2
10045712:	and    edx,0x3
10045715:	cmp    ecx,0x8
10045718:	jb     0x10045744
1004571a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004571c:	jmp    DWORD PTR [edx*4+0x10045834]
10045723:	nop
10045724:	mov    eax,edi
10045726:	mov    edx,0x3
1004572b:	sub    ecx,0x4
1004572e:	jb     0x1004573c
10045730:	and    eax,0x3
10045733:	add    ecx,eax
10045735:	jmp    DWORD PTR [eax*4+0x10045748]
1004573c:	jmp    DWORD PTR [ecx*4+0x10045844]
10045743:	nop
10045744:	jmp    DWORD PTR [ecx*4+0x100457c8]
1004574b:	nop
1004574c:	pop    eax
1004574d:	push   edi
1004574e:	add    al,0x10
10045750:	test   BYTE PTR [edi+0x4],dl
10045753:	adc    BYTE PTR [eax+0x23100457],ch
10045759:	ror    DWORD PTR [edx-0x75f877fa],1
1004575f:	inc    esi
10045760:	add    DWORD PTR [eax+0x468a0147],ecx
10045766:	add    al,cl
10045768:	jmp    0x124bdf6f
1004576d:	add    esi,0x3
10045770:	add    edi,0x3
10045773:	cmp    ecx,0x8
10045776:	jb     0x10045744
10045778:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004577a:	jmp    DWORD PTR [edx*4+0x10045834]
10045781:	lea    ecx,[ecx+0x0]
10045784:	and    edx,ecx
10045786:	mov    al,BYTE PTR [esi]
10045788:	mov    BYTE PTR [edi],al
1004578a:	mov    al,BYTE PTR [esi+0x1]
1004578d:	shr    ecx,0x2
10045790:	mov    BYTE PTR [edi+0x1],al
10045793:	add    esi,0x2
10045796:	add    edi,0x2
10045799:	cmp    ecx,0x8
1004579c:	jb     0x10045744
1004579e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100457a0:	jmp    DWORD PTR [edx*4+0x10045834]
100457a7:	nop
100457a8:	and    edx,ecx
100457aa:	mov    al,BYTE PTR [esi]
100457ac:	mov    BYTE PTR [edi],al
100457ae:	add    esi,0x1
100457b1:	shr    ecx,0x2
100457b4:	add    edi,0x1
100457b7:	cmp    ecx,0x8
100457ba:	jb     0x10045744
100457bc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100457be:	jmp    DWORD PTR [edx*4+0x10045834]
100457c5:	lea    ecx,[ecx+0x0]
100457c8:	sub    ebx,DWORD PTR [eax+0x4]
100457cb:	adc    BYTE PTR [eax],bl
100457cd:	pop    eax
100457ce:	add    al,0x10
100457d0:	adc    BYTE PTR [eax+0x4],bl
100457d3:	adc    BYTE PTR [eax],cl
100457d5:	pop    eax
100457d6:	add    al,0x10
100457d8:	add    BYTE PTR [eax+0x4],bl
100457db:	adc    al,bh
100457dd:	push   edi
100457de:	add    al,0x10
100457e0:	lock push edi
100457e2:	add    al,0x10
100457e4:	call   0x9b145c40
100457e9:	inc    esp
100457ea:	mov    fs,esp
100457ec:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
100457f0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
100457f4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
100457f8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
100457fc:	mov    DWORD PTR [edi+ecx*4-0x14],eax
10045800:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
10045804:	mov    DWORD PTR [edi+ecx*4-0x10],eax
10045808:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
1004580c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
10045810:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
10045814:	mov    DWORD PTR [edi+ecx*4-0x8],eax
10045818:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
1004581c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
10045820:	lea    eax,[ecx*4+0x0]
10045827:	add    esi,eax
10045829:	add    edi,eax
1004582b:	jmp    DWORD PTR [edx*4+0x10045834]
10045832:	mov    edi,edi
10045834:	inc    esp
10045835:	pop    eax
10045836:	add    al,0x10
10045838:	dec    esp
10045839:	pop    eax
1004583a:	add    al,0x10
1004583c:	pop    eax
1004583d:	pop    eax
1004583e:	add    al,0x10
10045840:	ins    BYTE PTR es:[edi],dx
10045841:	pop    eax
10045842:	add    al,0x10
10045844:	mov    eax,DWORD PTR [ebp+0x8]
10045847:	pop    esi
10045848:	pop    edi
10045849:	leave  
1004584a:	ret    
1004584b:	nop
1004584c:	mov    al,BYTE PTR [esi]
1004584e:	mov    BYTE PTR [edi],al
10045850:	mov    eax,DWORD PTR [ebp+0x8]
10045853:	pop    esi
10045854:	pop    edi
10045855:	leave  
10045856:	ret    
10045857:	nop
10045858:	mov    al,BYTE PTR [esi]
1004585a:	mov    BYTE PTR [edi],al
1004585c:	mov    al,BYTE PTR [esi+0x1]
1004585f:	mov    BYTE PTR [edi+0x1],al
10045862:	mov    eax,DWORD PTR [ebp+0x8]
10045865:	pop    esi
10045866:	pop    edi
10045867:	leave  
10045868:	ret    
10045869:	lea    ecx,[ecx+0x0]
1004586c:	mov    al,BYTE PTR [esi]
1004586e:	mov    BYTE PTR [edi],al
10045870:	mov    al,BYTE PTR [esi+0x1]
10045873:	mov    BYTE PTR [edi+0x1],al
10045876:	mov    al,BYTE PTR [esi+0x2]
10045879:	mov    BYTE PTR [edi+0x2],al
1004587c:	mov    eax,DWORD PTR [ebp+0x8]
1004587f:	pop    esi
10045880:	pop    edi
10045881:	leave  
10045882:	ret    
10045883:	nop
10045884:	lea    esi,[ecx+esi*1-0x4]
10045888:	lea    edi,[ecx+edi*1-0x4]
1004588c:	test   edi,0x3
10045892:	jne    0x100458b8
10045894:	shr    ecx,0x2
10045897:	and    edx,0x3
1004589a:	cmp    ecx,0x8
1004589d:	jb     0x100458ac
1004589f:	std    
100458a0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100458a2:	cld    
100458a3:	jmp    DWORD PTR [edx*4+0x100459d0]
100458aa:	mov    edi,edi
100458ac:	neg    ecx
100458ae:	jmp    DWORD PTR [ecx*4+0x10045980]
100458b5:	lea    ecx,[ecx+0x0]
100458b8:	mov    eax,edi
100458ba:	mov    edx,0x3
100458bf:	cmp    ecx,0x4
100458c2:	jb     0x100458d0
100458c4:	and    eax,0x3
100458c7:	sub    ecx,eax
100458c9:	jmp    DWORD PTR [eax*4+0x100458d4]
100458d0:	jmp    DWORD PTR [ecx*4+0x100459d0]
100458d7:	nop
100458d8:	in     al,0x58
100458da:	add    al,0x10
100458dc:	or     BYTE PTR [ecx+0x4],bl
100458df:	adc    BYTE PTR [eax],dh
100458e1:	pop    ecx
100458e2:	add    al,0x10
100458e4:	mov    al,BYTE PTR [esi+0x3]
100458e7:	and    edx,ecx
100458e9:	mov    BYTE PTR [edi+0x3],al
100458ec:	sub    esi,0x1
100458ef:	shr    ecx,0x2
100458f2:	sub    edi,0x1
100458f5:	cmp    ecx,0x8
100458f8:	jb     0x100458ac
100458fa:	std    
100458fb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100458fd:	cld    
100458fe:	jmp    DWORD PTR [edx*4+0x100459d0]
10045905:	lea    ecx,[ecx+0x0]
10045908:	mov    al,BYTE PTR [esi+0x3]
1004590b:	and    edx,ecx
1004590d:	mov    BYTE PTR [edi+0x3],al
10045910:	mov    al,BYTE PTR [esi+0x2]
10045913:	shr    ecx,0x2
10045916:	mov    BYTE PTR [edi+0x2],al
10045919:	sub    esi,0x2
1004591c:	sub    edi,0x2
1004591f:	cmp    ecx,0x8
10045922:	jb     0x100458ac
10045924:	std    
10045925:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045927:	cld    
10045928:	jmp    DWORD PTR [edx*4+0x100459d0]
1004592f:	nop
10045930:	mov    al,BYTE PTR [esi+0x3]
10045933:	and    edx,ecx
10045935:	mov    BYTE PTR [edi+0x3],al
10045938:	mov    al,BYTE PTR [esi+0x2]
1004593b:	mov    BYTE PTR [edi+0x2],al
1004593e:	mov    al,BYTE PTR [esi+0x1]
10045941:	shr    ecx,0x2
10045944:	mov    BYTE PTR [edi+0x1],al
10045947:	sub    esi,0x3
1004594a:	sub    edi,0x3
1004594d:	cmp    ecx,0x8
10045950:	jb     0x100458ac
10045956:	std    
10045957:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045959:	cld    
1004595a:	jmp    DWORD PTR [edx*4+0x100459d0]
10045961:	lea    ecx,[ecx+0x0]
10045964:	test   BYTE PTR [ecx+0x4],bl
10045967:	adc    BYTE PTR [ecx+ebx*2+0x59941004],cl
1004596e:	add    al,0x10
10045970:	pushf  
10045971:	pop    ecx
10045972:	add    al,0x10
10045974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10045975:	pop    ecx
10045976:	add    al,0x10
10045978:	lods   al,BYTE PTR ds:[esi]
10045979:	pop    ecx
1004597a:	add    al,0x10
1004597c:	mov    ah,0x59
1004597e:	add    al,0x10
10045980:	(bad)  
10045981:	pop    ecx
10045982:	add    al,0x10
10045984:	mov    eax,DWORD PTR [esi+ecx*4+0x1c]
10045988:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
1004598c:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
10045990:	mov    DWORD PTR [edi+ecx*4+0x18],eax
10045994:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
10045998:	mov    DWORD PTR [edi+ecx*4+0x14],eax
1004599c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
100459a0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
100459a4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
100459a8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
100459ac:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
100459b0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
100459b4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
100459b8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
100459bc:	lea    eax,[ecx*4+0x0]
100459c3:	add    esi,eax
100459c5:	add    edi,eax
100459c7:	jmp    DWORD PTR [edx*4+0x100459d0]
100459ce:	mov    edi,edi
100459d0:	loopne 0x10045a2b
100459d2:	add    al,0x10
100459d4:	call   0x8145e32
100459d9:	pop    ecx
100459da:	add    al,0x10
100459dc:	or     al,0x5a
100459de:	add    al,0x10
100459e0:	mov    eax,DWORD PTR [ebp+0x8]
100459e3:	pop    esi
100459e4:	pop    edi
100459e5:	leave  
100459e6:	ret    
100459e7:	nop
100459e8:	mov    al,BYTE PTR [esi+0x3]
100459eb:	mov    BYTE PTR [edi+0x3],al
100459ee:	mov    eax,DWORD PTR [ebp+0x8]
100459f1:	pop    esi
100459f2:	pop    edi
100459f3:	leave  
100459f4:	ret    
100459f5:	lea    ecx,[ecx+0x0]
100459f8:	mov    al,BYTE PTR [esi+0x3]
100459fb:	mov    BYTE PTR [edi+0x3],al
100459fe:	mov    al,BYTE PTR [esi+0x2]
10045a01:	mov    BYTE PTR [edi+0x2],al
10045a04:	mov    eax,DWORD PTR [ebp+0x8]
10045a07:	pop    esi
10045a08:	pop    edi
10045a09:	leave  
10045a0a:	ret    
10045a0b:	nop
10045a0c:	mov    al,BYTE PTR [esi+0x3]
10045a0f:	mov    BYTE PTR [edi+0x3],al
10045a12:	mov    al,BYTE PTR [esi+0x2]
10045a15:	mov    BYTE PTR [edi+0x2],al
10045a18:	mov    al,BYTE PTR [esi+0x1]
10045a1b:	mov    BYTE PTR [edi+0x1],al
10045a1e:	mov    eax,DWORD PTR [ebp+0x8]
10045a21:	pop    esi
10045a22:	pop    edi
10045a23:	leave  
10045a24:	ret    
10045a25:	int3   
10045a26:	int3   
10045a27:	int3   
10045a28:	int3   
10045a29:	int3   
10045a2a:	int3   
10045a2b:	int3   
10045a2c:	int3   
10045a2d:	int3   
10045a2e:	int3   
10045a2f:	int3   
10045a30:	mov    ecx,DWORD PTR [esp+0x8]
10045a34:	push   edi
10045a35:	push   ebx
10045a36:	push   esi
10045a37:	mov    dl,BYTE PTR [ecx]
10045a39:	mov    edi,DWORD PTR [esp+0x10]
10045a3d:	test   dl,dl
10045a3f:	je     0x10045ab0
10045a41:	mov    dh,BYTE PTR [ecx+0x1]
10045a44:	test   dh,dh
10045a46:	je     0x10045a9d
10045a48:	mov    esi,edi
10045a4a:	mov    ecx,DWORD PTR [esp+0x14]
10045a4e:	mov    al,BYTE PTR [edi]
10045a50:	add    esi,0x1
10045a53:	cmp    al,dl
10045a55:	je     0x10045a6e
10045a57:	test   al,al
10045a59:	je     0x10045a68
10045a5b:	mov    al,BYTE PTR [esi]
10045a5d:	add    esi,0x1
10045a60:	cmp    al,dl
10045a62:	je     0x10045a6e
10045a64:	test   al,al
10045a66:	jne    0x10045a5b
10045a68:	pop    esi
10045a69:	pop    ebx
10045a6a:	pop    edi
10045a6b:	xor    eax,eax
10045a6d:	ret    
10045a6e:	mov    al,BYTE PTR [esi]
10045a70:	add    esi,0x1
10045a73:	cmp    al,dh
10045a75:	jne    0x10045a60
10045a77:	lea    edi,[esi-0x1]
10045a7a:	mov    ah,BYTE PTR [ecx+0x2]
10045a7d:	test   ah,ah
10045a7f:	je     0x10045aa9
10045a81:	mov    al,BYTE PTR [esi]
10045a83:	add    esi,0x2
10045a86:	cmp    al,ah
10045a88:	jne    0x10045a48
10045a8a:	mov    al,BYTE PTR [ecx+0x3]
10045a8d:	test   al,al
10045a8f:	je     0x10045aa9
10045a91:	mov    ah,BYTE PTR [esi-0x1]
10045a94:	add    ecx,0x2
10045a97:	cmp    al,ah
10045a99:	je     0x10045a7a
10045a9b:	jmp    0x10045a48
10045a9d:	xor    eax,eax
10045a9f:	pop    esi
10045aa0:	pop    ebx
10045aa1:	pop    edi
10045aa2:	mov    al,dl
10045aa4:	jmp    0x1004a936
10045aa9:	lea    eax,[edi-0x1]
10045aac:	pop    esi
10045aad:	pop    ebx
10045aae:	pop    edi
10045aaf:	ret    
10045ab0:	mov    eax,edi
10045ab2:	pop    esi
10045ab3:	pop    ebx
10045ab4:	pop    edi
10045ab5:	ret    
10045ab6:	cmp    DWORD PTR [esp+0x8],0x0
10045abb:	je     0x10045ac3
10045abd:	mov    BYTE PTR [ecx],0x2d
10045ac0:	inc    ecx
10045ac1:	neg    eax
10045ac3:	push   esi
10045ac4:	mov    esi,ecx
10045ac6:	xor    edx,edx
10045ac8:	div    DWORD PTR [esp+0x8]
10045acc:	cmp    edx,0x9
10045acf:	jbe    0x10045ad6
10045ad1:	add    dl,0x57
10045ad4:	jmp    0x10045ad9
10045ad6:	add    dl,0x30
10045ad9:	mov    BYTE PTR [ecx],dl
10045adb:	inc    ecx
10045adc:	test   eax,eax
10045ade:	ja     0x10045ac6
10045ae0:	mov    BYTE PTR [ecx],0x0
10045ae3:	dec    ecx
10045ae4:	mov    dl,BYTE PTR [esi]
10045ae6:	mov    al,BYTE PTR [ecx]
10045ae8:	mov    BYTE PTR [ecx],dl
10045aea:	dec    ecx
10045aeb:	mov    BYTE PTR [esi],al
10045aed:	inc    esi
10045aee:	cmp    esi,ecx
10045af0:	jb     0x10045ae4
10045af2:	pop    esi
10045af3:	ret    0x8
10045af6:	push   ebp
10045af7:	mov    ebp,esp
10045af9:	cmp    DWORD PTR [ebp+0x10],0xa
10045afd:	mov    eax,DWORD PTR [ebp+0x8]
10045b00:	jne    0x10045b0c
10045b02:	test   eax,eax
10045b04:	jge    0x10045b0c
10045b06:	push   0x1
10045b08:	push   0xa
10045b0a:	jmp    0x10045b11
10045b0c:	push   0x0
10045b0e:	push   DWORD PTR [ebp+0x10]
10045b11:	mov    ecx,DWORD PTR [ebp+0xc]
10045b14:	call   0x10045ab6
10045b19:	mov    eax,DWORD PTR [ebp+0xc]
10045b1c:	pop    ebp
10045b1d:	ret    
10045b1e:	push   ebp
10045b1f:	mov    ebp,esp
10045b21:	xor    eax,eax
10045b23:	cmp    DWORD PTR [ebp+0x10],0xa
10045b27:	jne    0x10045b2f
10045b29:	cmp    DWORD PTR [ebp+0x8],eax
10045b2c:	jge    0x10045b2f
10045b2e:	inc    eax
10045b2f:	mov    ecx,DWORD PTR [ebp+0xc]
10045b32:	push   eax
10045b33:	push   DWORD PTR [ebp+0x10]
10045b36:	mov    eax,DWORD PTR [ebp+0x8]
10045b39:	call   0x10045ab6
10045b3e:	mov    eax,DWORD PTR [ebp+0xc]
10045b41:	pop    ebp
10045b42:	ret    
10045b43:	int3   
10045b44:	int3   
10045b45:	int3   
10045b46:	int3   
10045b47:	int3   
10045b48:	int3   
10045b49:	int3   
10045b4a:	int3   
10045b4b:	int3   
10045b4c:	int3   
10045b4d:	int3   
10045b4e:	int3   
10045b4f:	int3   
10045b50:	mov    eax,DWORD PTR [esp+0xc]
10045b54:	push   ebx
10045b55:	test   eax,eax
10045b57:	je     0x10045bab
10045b59:	mov    edx,DWORD PTR [esp+0x8]
10045b5d:	xor    ebx,ebx
10045b5f:	mov    bl,BYTE PTR [esp+0xc]
10045b63:	test   edx,0x3
10045b69:	je     0x10045b81
10045b6b:	mov    cl,BYTE PTR [edx]
10045b6d:	add    edx,0x1
10045b70:	xor    cl,bl
10045b72:	je     0x10045be6
10045b74:	sub    eax,0x1
10045b77:	je     0x10045bab
10045b79:	test   edx,0x3
10045b7f:	jne    0x10045b6b
10045b81:	sub    eax,0x4
10045b84:	jb     0x10045b98
10045b86:	push   edi
10045b87:	mov    edi,ebx
10045b89:	shl    ebx,0x8
10045b8c:	add    ebx,edi
10045b8e:	mov    edi,ebx
10045b90:	shl    ebx,0x10
10045b93:	add    ebx,edi
10045b95:	jmp    0x10045bb2
10045b97:	pop    edi
10045b98:	add    eax,0x4
10045b9b:	je     0x10045bab
10045b9d:	mov    cl,BYTE PTR [edx]
10045b9f:	add    edx,0x1
10045ba2:	xor    cl,bl
10045ba4:	je     0x10045be6
10045ba6:	sub    eax,0x1
10045ba9:	jne    0x10045b9d
10045bab:	pop    ebx
10045bac:	ret    
10045bad:	sub    eax,0x4
10045bb0:	jb     0x10045b97
10045bb2:	mov    ecx,DWORD PTR [edx]
10045bb4:	xor    ecx,ebx
10045bb6:	mov    edi,0x7efefeff
10045bbb:	add    edi,ecx
10045bbd:	xor    ecx,0xffffffff
10045bc0:	xor    ecx,edi
10045bc2:	add    edx,0x4
10045bc5:	and    ecx,0x81010100
10045bcb:	je     0x10045bad
10045bcd:	mov    ecx,DWORD PTR [edx-0x4]
10045bd0:	xor    cl,bl
10045bd2:	je     0x10045bf7
10045bd4:	xor    ch,bl
10045bd6:	je     0x10045bf1
10045bd8:	shr    ecx,0x10
10045bdb:	xor    cl,bl
10045bdd:	je     0x10045beb
10045bdf:	xor    ch,bl
10045be1:	je     0x10045be5
10045be3:	jmp    0x10045bad
10045be5:	pop    edi
10045be6:	lea    eax,[edx-0x1]
10045be9:	pop    ebx
10045bea:	ret    
10045beb:	lea    eax,[edx-0x2]
10045bee:	pop    edi
10045bef:	pop    ebx
10045bf0:	ret    
10045bf1:	lea    eax,[edx-0x3]
10045bf4:	pop    edi
10045bf5:	pop    ebx
10045bf6:	ret    
10045bf7:	lea    eax,[edx-0x4]
10045bfa:	pop    edi
10045bfb:	pop    ebx
10045bfc:	ret    
10045bfd:	int3   
10045bfe:	int3   
10045bff:	int3   
10045c00:	mov    edx,DWORD PTR [esp+0xc]
10045c04:	mov    ecx,DWORD PTR [esp+0x4]
10045c08:	test   edx,edx
10045c0a:	je     0x10045c75
10045c0c:	xor    eax,eax
10045c0e:	mov    al,BYTE PTR [esp+0x8]
10045c12:	test   al,al
10045c14:	jne    0x10045c2c
10045c16:	cmp    edx,0x100
10045c1c:	jb     0x10045c2c
10045c1e:	cmp    DWORD PTR ds:0x10082584,0x0
10045c25:	je     0x10045c2c
10045c27:	jmp    0x1004aadc
10045c2c:	push   edi
10045c2d:	mov    edi,ecx
10045c2f:	cmp    edx,0x4
10045c32:	jb     0x10045c65
10045c34:	neg    ecx
10045c36:	and    ecx,0x3
10045c39:	je     0x10045c47
10045c3b:	sub    edx,ecx
10045c3d:	mov    BYTE PTR [edi],al
10045c3f:	add    edi,0x1
10045c42:	sub    ecx,0x1
10045c45:	jne    0x10045c3d
10045c47:	mov    ecx,eax
10045c49:	shl    eax,0x8
10045c4c:	add    eax,ecx
10045c4e:	mov    ecx,eax
10045c50:	shl    eax,0x10
10045c53:	add    eax,ecx
10045c55:	mov    ecx,edx
10045c57:	and    edx,0x3
10045c5a:	shr    ecx,0x2
10045c5d:	je     0x10045c65
10045c5f:	rep stos DWORD PTR es:[edi],eax
10045c61:	test   edx,edx
10045c63:	je     0x10045c6f
10045c65:	mov    BYTE PTR [edi],al
10045c67:	add    edi,0x1
10045c6a:	sub    edx,0x1
10045c6d:	jne    0x10045c65
10045c6f:	mov    eax,DWORD PTR [esp+0x8]
10045c73:	pop    edi
10045c74:	ret    
10045c75:	mov    eax,DWORD PTR [esp+0x4]
10045c79:	ret    
10045c7a:	push   DWORD PTR ds:0x100802f4
10045c80:	call   0x10046ef2
10045c85:	test   eax,eax
10045c87:	pop    ecx
10045c88:	je     0x10045c8c
10045c8a:	call   eax
10045c8c:	push   0x19
10045c8e:	call   0x10049bfa
10045c93:	push   0x1
10045c95:	push   0x0
10045c97:	call   0x1004ac5e
10045c9c:	add    esp,0xc
10045c9f:	jmp    0x1004ab6b
10045ca4:	push   0xa
10045ca6:	push   0x0
10045ca8:	push   DWORD PTR [esp+0xc]
10045cac:	call   0x1004aeb1
10045cb1:	add    esp,0xc
10045cb4:	ret    
10045cb5:	jmp    0x10045ca4
10045cba:	push   ebp
10045cbb:	mov    ebp,esp
10045cbd:	sub    esp,0x18
10045cc0:	push   ebx
10045cc1:	push   esi
10045cc2:	push   DWORD PTR [ebp+0xc]
10045cc5:	lea    ecx,[ebp-0x18]
10045cc8:	call   0x100454e5
10045ccd:	mov    ebx,DWORD PTR [ebp+0x8]
10045cd0:	mov    esi,0x100
10045cd5:	cmp    ebx,esi
10045cd7:	jae    0x10045d2d
10045cd9:	mov    ecx,DWORD PTR [ebp-0x18]
10045cdc:	cmp    DWORD PTR [ecx+0xac],0x1
10045ce3:	jle    0x10045cf9
10045ce5:	lea    eax,[ebp-0x18]
10045ce8:	push   eax
10045ce9:	push   0x1
10045ceb:	push   ebx
10045cec:	call   0x1004b303
10045cf1:	mov    ecx,DWORD PTR [ebp-0x18]
10045cf4:	add    esp,0xc
10045cf7:	jmp    0x10045d06
10045cf9:	mov    eax,DWORD PTR [ecx+0xc8]
10045cff:	movzx  eax,BYTE PTR [eax+ebx*2]
10045d03:	and    eax,0x1
10045d06:	test   eax,eax
10045d08:	je     0x10045d19
10045d0a:	mov    eax,DWORD PTR [ecx+0xcc]
10045d10:	movzx  eax,BYTE PTR [eax+ebx*1]
10045d14:	jmp    0x10045dc0
10045d19:	cmp    BYTE PTR [ebp-0xc],0x0
10045d1d:	je     0x10045d26
10045d1f:	mov    eax,DWORD PTR [ebp-0x10]
10045d22:	and    DWORD PTR [eax+0x70],0xfffffffd
10045d26:	mov    eax,ebx
10045d28:	jmp    0x10045dcd
10045d2d:	mov    eax,DWORD PTR [ebp-0x18]
10045d30:	cmp    DWORD PTR [eax+0xac],0x1
10045d37:	jle    0x10045d6a
10045d39:	mov    DWORD PTR [ebp+0x8],ebx
10045d3c:	sar    DWORD PTR [ebp+0x8],0x8
10045d40:	lea    eax,[ebp-0x18]
10045d43:	push   eax
10045d44:	mov    eax,DWORD PTR [ebp+0x8]
10045d47:	and    eax,0xff
10045d4c:	push   eax
10045d4d:	call   0x1004b2bf
10045d52:	test   eax,eax
10045d54:	pop    ecx
10045d55:	pop    ecx
10045d56:	je     0x10045d6a
10045d58:	mov    al,BYTE PTR [ebp+0x8]
10045d5b:	push   0x2
10045d5d:	mov    BYTE PTR [ebp-0x4],al
10045d60:	mov    BYTE PTR [ebp-0x3],bl
10045d63:	mov    BYTE PTR [ebp-0x2],0x0
10045d67:	pop    ecx
10045d68:	jmp    0x10045d7f
10045d6a:	call   0x10046b55
10045d6f:	mov    DWORD PTR [eax],0x2a
10045d75:	xor    ecx,ecx
10045d77:	mov    BYTE PTR [ebp-0x4],bl
10045d7a:	mov    BYTE PTR [ebp-0x3],0x0
10045d7e:	inc    ecx
10045d7f:	mov    eax,DWORD PTR [ebp-0x18]
10045d82:	push   0x1
10045d84:	push   DWORD PTR [eax+0x4]
10045d87:	lea    edx,[ebp-0x8]
10045d8a:	push   0x3
10045d8c:	push   edx
10045d8d:	push   ecx
10045d8e:	lea    ecx,[ebp-0x4]
10045d91:	push   ecx
10045d92:	push   esi
10045d93:	push   DWORD PTR [eax+0x14]
10045d96:	lea    eax,[ebp-0x18]
10045d99:	push   eax
10045d9a:	call   0x1004b27c
10045d9f:	add    esp,0x24
10045da2:	test   eax,eax
10045da4:	je     0x10045d19
10045daa:	cmp    eax,0x1
10045dad:	jne    0x10045db5
10045daf:	movzx  eax,BYTE PTR [ebp-0x8]
10045db3:	jmp    0x10045dc0
10045db5:	movzx  ecx,BYTE PTR [ebp-0x7]
10045db9:	xor    eax,eax
10045dbb:	mov    ah,BYTE PTR [ebp-0x8]
10045dbe:	or     eax,ecx
10045dc0:	cmp    BYTE PTR [ebp-0xc],0x0
10045dc4:	je     0x10045dcd
10045dc6:	mov    ecx,DWORD PTR [ebp-0x10]
10045dc9:	and    DWORD PTR [ecx+0x70],0xfffffffd
10045dcd:	pop    esi
10045dce:	pop    ebx
10045dcf:	leave  
10045dd0:	ret    
10045dd1:	cmp    DWORD PTR ds:0x100802c8,0x0
10045dd8:	jne    0x10045dea
10045dda:	mov    eax,DWORD PTR [esp+0x4]
10045dde:	lea    ecx,[eax-0x41]
10045de1:	cmp    ecx,0x19
10045de4:	ja     0x10045df7
10045de6:	add    eax,0x20
10045de9:	ret    
10045dea:	push   0x0
10045dec:	push   DWORD PTR [esp+0x8]
10045df0:	call   0x10045cba
10045df5:	pop    ecx
10045df6:	pop    ecx
10045df7:	ret    
10045df8:	push   0x10
10045dfa:	push   0x100745e0
10045dff:	call   0x10046c94
10045e04:	xor    eax,eax
10045e06:	mov    DWORD PTR [ebp-0x20],eax
10045e09:	mov    DWORD PTR [ebp-0x4],eax
10045e0c:	mov    DWORD PTR [ebp-0x1c],eax
10045e0f:	mov    eax,DWORD PTR [ebp-0x1c]
10045e12:	cmp    eax,DWORD PTR [ebp+0x10]
10045e15:	jge    0x10045e2a
10045e17:	mov    esi,DWORD PTR [ebp+0x8]
10045e1a:	mov    ecx,esi
10045e1c:	call   DWORD PTR [ebp+0x14]
10045e1f:	add    esi,DWORD PTR [ebp+0xc]
10045e22:	mov    DWORD PTR [ebp+0x8],esi
10045e25:	inc    DWORD PTR [ebp-0x1c]
10045e28:	jmp    0x10045e0f
10045e2a:	mov    DWORD PTR [ebp-0x20],0x1
10045e31:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10045e38:	call   0x10045e45
10045e3d:	call   0x10046cd9
10045e42:	ret    0x14
10045e45:	cmp    DWORD PTR [ebp-0x20],0x0
10045e49:	jne    0x10045e5c
10045e4b:	push   DWORD PTR [ebp+0x18]
10045e4e:	push   DWORD PTR [ebp-0x1c]
10045e51:	push   DWORD PTR [ebp+0xc]
10045e54:	push   DWORD PTR [ebp+0x8]
10045e57:	call   0x1004309b
10045e5c:	ret    
10045e5d:	push   ebp
10045e5e:	mov    ebp,esp
10045e60:	push   ebx
10045e61:	push   esi
10045e62:	mov    esi,DWORD PTR [ebp+0x8]
10045e65:	push   edi
10045e66:	xor    edi,edi
10045e68:	cmp    DWORD PTR [ebp+0x14],edi
10045e6b:	jne    0x10045e7d
10045e6d:	cmp    esi,edi
10045e6f:	jne    0x10045e81
10045e71:	cmp    DWORD PTR [ebp+0xc],edi
10045e74:	jne    0x10045e88
10045e76:	xor    eax,eax
10045e78:	pop    edi
10045e79:	pop    esi
10045e7a:	pop    ebx
10045e7b:	pop    ebp
10045e7c:	ret    
10045e7d:	cmp    esi,edi
10045e7f:	je     0x10045e88
10045e81:	mov    ebx,DWORD PTR [ebp+0xc]
10045e84:	cmp    ebx,edi
10045e86:	ja     0x10045ea3
10045e88:	call   0x10046b55
10045e8d:	push   0x16
10045e8f:	pop    esi
10045e90:	mov    DWORD PTR [eax],esi
10045e92:	push   edi
10045e93:	push   edi
10045e94:	push   edi
10045e95:	push   edi
10045e96:	push   edi
10045e97:	call   0x1004338c
10045e9c:	add    esp,0x14
10045e9f:	mov    eax,esi
10045ea1:	jmp    0x10045e78
10045ea3:	cmp    DWORD PTR [ebp+0x14],edi
10045ea6:	jne    0x10045ead
10045ea8:	mov    WORD PTR [esi],di
10045eab:	jmp    0x10045e76
10045ead:	mov    edx,DWORD PTR [ebp+0x10]
10045eb0:	cmp    edx,edi
10045eb2:	jne    0x10045eb9
10045eb4:	mov    WORD PTR [esi],di
10045eb7:	jmp    0x10045e88
10045eb9:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10045ebd:	mov    eax,esi
10045ebf:	jne    0x10045ed5
10045ec1:	movzx  ecx,WORD PTR [edx]
10045ec4:	mov    WORD PTR [eax],cx
10045ec7:	inc    eax
10045ec8:	inc    eax
10045ec9:	inc    edx
10045eca:	inc    edx
10045ecb:	cmp    cx,di
10045ece:	je     0x10045ef4
10045ed0:	dec    ebx
10045ed1:	jne    0x10045ec1
10045ed3:	jmp    0x10045ef4
10045ed5:	movzx  ecx,WORD PTR [edx]
10045ed8:	mov    WORD PTR [eax],cx
10045edb:	inc    eax
10045edc:	inc    eax
10045edd:	inc    edx
10045ede:	inc    edx
10045edf:	cmp    cx,di
10045ee2:	je     0x10045eec
10045ee4:	dec    ebx
10045ee5:	je     0x10045eec
10045ee7:	dec    DWORD PTR [ebp+0x14]
10045eea:	jne    0x10045ed5
10045eec:	cmp    DWORD PTR [ebp+0x14],edi
10045eef:	jne    0x10045ef4
10045ef1:	mov    WORD PTR [eax],di
10045ef4:	cmp    ebx,edi
10045ef6:	jne    0x10045e76
10045efc:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10045f00:	jne    0x10045f12
10045f02:	mov    eax,DWORD PTR [ebp+0xc]
10045f05:	push   0x50
10045f07:	mov    WORD PTR [esi+eax*2-0x2],di
10045f0c:	pop    eax
10045f0d:	jmp    0x10045e78
10045f12:	mov    WORD PTR [esi],di
10045f15:	call   0x10046b55
10045f1a:	push   0x22
10045f1c:	pop    ecx
10045f1d:	mov    DWORD PTR [eax],ecx
10045f1f:	mov    esi,ecx
10045f21:	jmp    0x10045e92
10045f26:	push   ebp
10045f27:	mov    ebp,esp
10045f29:	sub    esp,0xc
10045f2c:	mov    eax,ds:0x1007e030
10045f31:	xor    eax,ebp
10045f33:	mov    DWORD PTR [ebp-0x4],eax
10045f36:	push   esi
10045f37:	xor    esi,esi
10045f39:	cmp    ebx,esi
10045f3b:	push   edi
10045f3c:	jne    0x10045f5c
10045f3e:	call   0x10046b55
10045f43:	push   0x16
10045f45:	pop    edi
10045f46:	push   esi
10045f47:	push   esi
10045f48:	push   esi
10045f49:	push   esi
10045f4a:	push   esi
10045f4b:	mov    DWORD PTR [eax],edi
10045f4d:	call   0x1004338c
10045f52:	add    esp,0x14
10045f55:	mov    eax,edi
10045f57:	jmp    0x1004609c
10045f5c:	push   DWORD PTR [ebp+0x8]
10045f5f:	push   ebx
10045f60:	call   0x1004b6c6
10045f65:	cmp    eax,DWORD PTR [ebp+0x8]
10045f68:	pop    ecx
10045f69:	pop    ecx
10045f6a:	jb     0x10045f71
10045f6c:	mov    WORD PTR [ebx],si
10045f6f:	jmp    0x10045f3e
10045f71:	mov    edx,DWORD PTR [ebp+0xc]
10045f74:	mov    eax,DWORD PTR [edx]
10045f76:	mov    ecx,DWORD PTR [eax+0x14]
10045f79:	cmp    ecx,esi
10045f7b:	jne    0x10045fa7
10045f7d:	cmp    WORD PTR [ebx],si
10045f80:	mov    eax,ebx
10045f82:	je     0x10045fa0
10045f84:	movzx  ecx,WORD PTR [eax]
10045f87:	cmp    cx,0x41
10045f8b:	jb     0x10045f99
10045f8d:	cmp    cx,0x5a
10045f91:	ja     0x10045f99
10045f93:	add    ecx,0x20
10045f96:	mov    WORD PTR [eax],cx
10045f99:	inc    eax
10045f9a:	inc    eax
10045f9b:	cmp    WORD PTR [eax],si
10045f9e:	jne    0x10045f84
10045fa0:	xor    eax,eax
10045fa2:	jmp    0x1004609c
10045fa7:	push   DWORD PTR [eax+0x4]
10045faa:	mov    edi,0x100
10045faf:	push   esi
10045fb0:	push   esi
10045fb1:	push   0xffffffff
10045fb3:	push   ebx
10045fb4:	push   edi
10045fb5:	push   ecx
10045fb6:	push   edx
10045fb7:	call   0x1004b686
10045fbc:	mov    ecx,eax
10045fbe:	add    esp,0x20
10045fc1:	cmp    ecx,esi
10045fc3:	mov    DWORD PTR [ebp-0xc],ecx
10045fc6:	jne    0x10045fdf
10045fc8:	call   0x10046b55
10045fcd:	mov    DWORD PTR [eax],0x2a
10045fd3:	call   0x10046b55
10045fd8:	mov    eax,DWORD PTR [eax]
10045fda:	jmp    0x1004609c
10045fdf:	cmp    DWORD PTR [ebp+0x8],ecx
10045fe2:	jae    0x10045ff3
10045fe4:	mov    WORD PTR [ebx],si
10045fe7:	call   0x10046b55
10045fec:	push   0x22
10045fee:	jmp    0x10045f45
10045ff3:	cmp    ecx,esi
10045ff5:	jle    0x1004603d
10045ff7:	push   0xffffffe0
10045ff9:	xor    edx,edx
10045ffb:	pop    eax
10045ffc:	div    ecx
10045ffe:	cmp    eax,0x2
10046001:	jb     0x1004603d
10046003:	lea    eax,[ecx+ecx*1+0x8]
10046007:	cmp    eax,0x400
1004600c:	ja     0x10046021
1004600e:	call   0x1004b6f0
10046013:	mov    eax,esp
10046015:	cmp    eax,esi
10046017:	je     0x10046035
10046019:	mov    DWORD PTR [eax],0xcccc
1004601f:	jmp    0x10046032
10046021:	push   eax
10046022:	call   0x10044f8d
10046027:	cmp    eax,esi
10046029:	pop    ecx
1004602a:	je     0x10046035
1004602c:	mov    DWORD PTR [eax],0xdddd
10046032:	add    eax,0x8
10046035:	mov    ecx,DWORD PTR [ebp-0xc]
10046038:	mov    DWORD PTR [ebp-0x8],eax
1004603b:	jmp    0x10046040
1004603d:	mov    DWORD PTR [ebp-0x8],esi
10046040:	cmp    DWORD PTR [ebp-0x8],esi
10046043:	jne    0x10046052
10046045:	call   0x10046b55
1004604a:	mov    DWORD PTR [eax],0xc
10046050:	jmp    0x10045fd3
10046052:	mov    edx,DWORD PTR [ebp+0xc]
10046055:	mov    eax,DWORD PTR [edx]
10046057:	push   DWORD PTR [eax+0x4]
1004605a:	push   ecx
1004605b:	push   DWORD PTR [ebp-0x8]
1004605e:	push   0xffffffff
10046060:	push   ebx
10046061:	push   edi
10046062:	push   DWORD PTR [eax+0x14]
10046065:	push   edx
10046066:	call   0x1004b686
1004606b:	add    esp,0x20
1004606e:	test   eax,eax
10046070:	je     0x10046085
10046072:	push   DWORD PTR [ebp-0x8]
10046075:	push   DWORD PTR [ebp+0x8]
10046078:	push   ebx
10046079:	call   0x1004b3b9
1004607e:	add    esp,0xc
10046081:	mov    esi,eax
10046083:	jmp    0x10046091
10046085:	call   0x10046b55
1004608a:	push   0x2a
1004608c:	pop    ecx
1004608d:	mov    DWORD PTR [eax],ecx
1004608f:	mov    esi,ecx
10046091:	push   DWORD PTR [ebp-0x8]
10046094:	call   0x1001b365
10046099:	pop    ecx
1004609a:	mov    eax,esi
1004609c:	lea    esp,[ebp-0x14]
1004609f:	pop    edi
100460a0:	pop    esi
100460a1:	mov    ecx,DWORD PTR [ebp-0x4]
100460a4:	xor    ecx,ebp
100460a6:	call   0x10042e97
100460ab:	leave  
100460ac:	ret    
100460ad:	push   ebp
100460ae:	mov    ebp,esp
100460b0:	sub    esp,0x10
100460b3:	push   ebx
100460b4:	push   DWORD PTR [ebp+0x10]
100460b7:	lea    ecx,[ebp-0x10]
100460ba:	call   0x100454e5
100460bf:	mov    ebx,DWORD PTR [ebp+0x8]
100460c2:	lea    eax,[ebp-0x10]
100460c5:	push   eax
100460c6:	push   DWORD PTR [ebp+0xc]
100460c9:	call   0x10045f26
100460ce:	cmp    BYTE PTR [ebp-0x4],0x0
100460d2:	pop    ecx
100460d3:	pop    ecx
100460d4:	pop    ebx
100460d5:	je     0x100460de
100460d7:	mov    ecx,DWORD PTR [ebp-0x8]
100460da:	and    DWORD PTR [ecx+0x70],0xfffffffd
100460de:	leave  
100460df:	ret    
100460e0:	push   esi
100460e1:	xor    esi,esi
100460e3:	cmp    DWORD PTR ds:0x100802c8,esi
100460e9:	jne    0x10046134
100460eb:	mov    eax,DWORD PTR [esp+0x8]
100460ef:	cmp    eax,esi
100460f1:	jne    0x1004610f
100460f3:	call   0x10046b55
100460f8:	push   esi
100460f9:	push   esi
100460fa:	push   esi
100460fb:	push   esi
100460fc:	push   esi
100460fd:	mov    DWORD PTR [eax],0x16
10046103:	call   0x1004338c
10046108:	add    esp,0x14
1004610b:	xor    eax,eax
1004610d:	pop    esi
1004610e:	ret    
1004610f:	cmp    WORD PTR [eax],si
10046112:	mov    ecx,eax
10046114:	je     0x10046147
10046116:	movzx  edx,WORD PTR [ecx]
10046119:	cmp    dx,0x41
1004611d:	jb     0x1004612b
1004611f:	cmp    dx,0x5a
10046123:	ja     0x1004612b
10046125:	add    edx,0x20
10046128:	mov    WORD PTR [ecx],dx
1004612b:	inc    ecx
1004612c:	inc    ecx
1004612d:	cmp    WORD PTR [ecx],si
10046130:	jne    0x10046116
10046132:	pop    esi
10046133:	ret    
10046134:	push   esi
10046135:	push   0xffffffff
10046137:	push   DWORD PTR [esp+0x10]
1004613b:	call   0x100460ad
10046140:	mov    eax,DWORD PTR [esp+0x14]
10046144:	add    esp,0xc
10046147:	pop    esi
10046148:	ret    
10046149:	mov    eax,DWORD PTR [esp+0x4]
1004614d:	push   ebx
1004614e:	mov    ebx,DWORD PTR [esp+0xc]
10046152:	cmp    WORD PTR [ebx],0x0
10046156:	push   edi
10046157:	mov    edi,eax
10046159:	je     0x100461a1
1004615b:	movzx  ecx,WORD PTR [eax]
1004615e:	test   cx,cx
10046161:	je     0x1004619f
10046163:	movzx  edx,cx
10046166:	sub    eax,ebx
10046168:	test   dx,dx
1004616b:	mov    ecx,DWORD PTR [esp+0x10]
1004616f:	je     0x1004618d
10046171:	movzx  edx,WORD PTR [ecx]
10046174:	test   dx,dx
10046177:	je     0x100461a4
10046179:	movzx  ebx,WORD PTR [eax+ecx*1]
1004617d:	movzx  edx,dx
10046180:	sub    ebx,edx
10046182:	jne    0x1004618d
10046184:	inc    ecx
10046185:	inc    ecx
10046186:	cmp    WORD PTR [eax+ecx*1],0x0
1004618b:	jne    0x10046171
1004618d:	cmp    WORD PTR [ecx],0x0
10046191:	je     0x100461a4
10046193:	inc    edi
10046194:	inc    edi
10046195:	movzx  edx,WORD PTR [edi]
10046198:	inc    eax
10046199:	inc    eax
1004619a:	test   dx,dx
1004619d:	jne    0x10046168
1004619f:	xor    eax,eax
100461a1:	pop    edi
100461a2:	pop    ebx
100461a3:	ret    
100461a4:	mov    eax,edi
100461a6:	jmp    0x100461a1
100461a8:	push   0x10
100461aa:	push   0x10074600
100461af:	call   0x10046c94
100461b4:	mov    ebx,DWORD PTR [ebp+0x8]
100461b7:	test   ebx,ebx
100461b9:	jne    0x100461c9
100461bb:	push   DWORD PTR [ebp+0xc]
100461be:	call   0x10044f8d
100461c3:	pop    ecx
100461c4:	jmp    0x10046395
100461c9:	mov    esi,DWORD PTR [ebp+0xc]
100461cc:	test   esi,esi
100461ce:	jne    0x100461dc
100461d0:	push   ebx
100461d1:	call   0x10043508
100461d6:	pop    ecx
100461d7:	jmp    0x10046393
100461dc:	cmp    DWORD PTR ds:0x100825a0,0x3
100461e3:	jne    0x1004637c
100461e9:	xor    edi,edi
100461eb:	mov    DWORD PTR [ebp-0x1c],edi
100461ee:	cmp    esi,0xffffffe0
100461f1:	ja     0x10046381
100461f7:	push   0x4
100461f9:	call   0x10047c9d
100461fe:	pop    ecx
100461ff:	mov    DWORD PTR [ebp-0x4],edi
10046202:	push   ebx
10046203:	call   0x10047d16
10046208:	pop    ecx
10046209:	mov    DWORD PTR [ebp-0x20],eax
1004620c:	cmp    eax,edi
1004620e:	je     0x100462b2
10046214:	cmp    esi,DWORD PTR ds:0x10082590
1004621a:	ja     0x10046265
1004621c:	push   esi
1004621d:	push   ebx
1004621e:	push   eax
1004621f:	call   0x1004820b
10046224:	add    esp,0xc
10046227:	test   eax,eax
10046229:	je     0x10046230
1004622b:	mov    DWORD PTR [ebp-0x1c],ebx
1004622e:	jmp    0x10046265
10046230:	push   esi
10046231:	call   0x100484ea
10046236:	pop    ecx
10046237:	mov    DWORD PTR [ebp-0x1c],eax
1004623a:	cmp    eax,edi
1004623c:	je     0x10046265
1004623e:	mov    eax,DWORD PTR [ebx-0x4]
10046241:	dec    eax
10046242:	cmp    eax,esi
10046244:	jb     0x10046248
10046246:	mov    eax,esi
10046248:	push   eax
10046249:	push   ebx
1004624a:	push   DWORD PTR [ebp-0x1c]
1004624d:	call   0x10045180
10046252:	push   ebx
10046253:	call   0x10047d16
10046258:	mov    DWORD PTR [ebp-0x20],eax
1004625b:	push   ebx
1004625c:	push   eax
1004625d:	call   0x10047d41
10046262:	add    esp,0x18
10046265:	cmp    DWORD PTR [ebp-0x1c],edi
10046268:	jne    0x100462b2
1004626a:	cmp    esi,edi
1004626c:	jne    0x10046274
1004626e:	xor    esi,esi
10046270:	inc    esi
10046271:	mov    DWORD PTR [ebp+0xc],esi
10046274:	add    esi,0xf
10046277:	and    esi,0xfffffff0
1004627a:	mov    DWORD PTR [ebp+0xc],esi
1004627d:	push   esi
1004627e:	push   edi
1004627f:	push   DWORD PTR ds:0x1007fe38
10046285:	call   DWORD PTR ds:0x1006618c
1004628b:	mov    DWORD PTR [ebp-0x1c],eax
1004628e:	cmp    eax,edi
10046290:	je     0x100462b2
10046292:	mov    eax,DWORD PTR [ebx-0x4]
10046295:	dec    eax
10046296:	cmp    eax,esi
10046298:	jb     0x1004629c
1004629a:	mov    eax,esi
1004629c:	push   eax
1004629d:	push   ebx
1004629e:	push   DWORD PTR [ebp-0x1c]
100462a1:	call   0x10045180
100462a6:	push   ebx
100462a7:	push   DWORD PTR [ebp-0x20]
100462aa:	call   0x10047d41
100462af:	add    esp,0x14
100462b2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100462b9:	call   0x100462ec
100462be:	cmp    DWORD PTR [ebp-0x20],0x0
100462c2:	jne    0x100462f5
100462c4:	test   esi,esi
100462c6:	jne    0x100462c9
100462c8:	inc    esi
100462c9:	add    esi,0xf
100462cc:	and    esi,0xfffffff0
100462cf:	mov    DWORD PTR [ebp+0xc],esi
100462d2:	push   esi
100462d3:	push   ebx
100462d4:	push   0x0
100462d6:	push   DWORD PTR ds:0x1007fe38
100462dc:	call   DWORD PTR ds:0x100661a0
100462e2:	mov    edi,eax
100462e4:	jmp    0x100462f8
100462e6:	mov    esi,DWORD PTR [ebp+0xc]
100462e9:	mov    ebx,DWORD PTR [ebp+0x8]
100462ec:	push   0x4
100462ee:	call   0x10047bc5
100462f3:	pop    ecx
100462f4:	ret    
100462f5:	mov    edi,DWORD PTR [ebp-0x1c]
100462f8:	test   edi,edi
100462fa:	jne    0x100463bf
10046300:	cmp    DWORD PTR ds:0x1007ff94,edi
10046306:	je     0x10046334
10046308:	push   esi
10046309:	call   0x10047992
1004630e:	pop    ecx
1004630f:	test   eax,eax
10046311:	jne    0x100461e9
10046317:	call   0x10046b55
1004631c:	cmp    DWORD PTR [ebp-0x20],edi
1004631f:	jne    0x1004638d
10046321:	mov    esi,eax
10046323:	call   DWORD PTR ds:0x100660cc
10046329:	push   eax
1004632a:	call   0x10046b1a
1004632f:	pop    ecx
10046330:	mov    DWORD PTR [esi],eax
10046332:	jmp    0x10046393
10046334:	test   edi,edi
10046336:	jne    0x100463bf
1004633c:	call   0x10046b55
10046341:	cmp    DWORD PTR [ebp-0x20],edi
10046344:	je     0x100463ae
10046346:	mov    DWORD PTR [eax],0xc
1004634c:	jmp    0x100463bf
1004634e:	test   esi,esi
10046350:	jne    0x10046353
10046352:	inc    esi
10046353:	push   esi
10046354:	push   ebx
10046355:	push   0x0
10046357:	push   DWORD PTR ds:0x1007fe38
1004635d:	call   DWORD PTR ds:0x100661a0
10046363:	mov    edi,eax
10046365:	test   edi,edi
10046367:	jne    0x100463bf
10046369:	cmp    DWORD PTR ds:0x1007ff94,eax
1004636f:	je     0x100463a5
10046371:	push   esi
10046372:	call   0x10047992
10046377:	pop    ecx
10046378:	test   eax,eax
1004637a:	je     0x1004639b
1004637c:	cmp    esi,0xffffffe0
1004637f:	jbe    0x1004634e
10046381:	push   esi
10046382:	call   0x10047992
10046387:	pop    ecx
10046388:	call   0x10046b55
1004638d:	mov    DWORD PTR [eax],0xc
10046393:	xor    eax,eax
10046395:	call   0x10046cd9
1004639a:	ret    
1004639b:	call   0x10046b55
100463a0:	jmp    0x10046321
100463a5:	test   edi,edi
100463a7:	jne    0x100463bf
100463a9:	call   0x10046b55
100463ae:	mov    esi,eax
100463b0:	call   DWORD PTR ds:0x100660cc
100463b6:	push   eax
100463b7:	call   0x10046b1a
100463bc:	mov    DWORD PTR [esi],eax
100463be:	pop    ecx
100463bf:	mov    eax,edi
100463c1:	jmp    0x10046395
100463c3:	mov    ecx,DWORD PTR [esp+0x8]
100463c7:	push   esi
100463c8:	xor    esi,esi
100463ca:	cmp    ecx,esi
100463cc:	jbe    0x100463f7
100463ce:	push   0xffffffe0
100463d0:	xor    edx,edx
100463d2:	pop    eax
100463d3:	div    ecx
100463d5:	cmp    eax,DWORD PTR [esp+0x10]
100463d9:	jae    0x100463f7
100463db:	call   0x10046b55
100463e0:	push   esi
100463e1:	push   esi
100463e2:	push   esi
100463e3:	push   esi
100463e4:	push   esi
100463e5:	mov    DWORD PTR [eax],0xc
100463eb:	call   0x1004338c
100463f0:	add    esp,0x14
100463f3:	xor    eax,eax
100463f5:	pop    esi
100463f6:	ret    
100463f7:	imul   ecx,DWORD PTR [esp+0x10]
100463fc:	push   ecx
100463fd:	push   DWORD PTR [esp+0xc]
10046401:	call   0x100461a8
10046406:	pop    ecx
10046407:	pop    ecx
10046408:	pop    esi
10046409:	ret    
1004640a:	call   0x100470fc
1004640f:	mov    ecx,DWORD PTR [esp+0x4]
10046413:	mov    DWORD PTR [eax+0x14],ecx
10046416:	ret    
10046417:	call   0x100470fc
1004641c:	mov    ecx,DWORD PTR [eax+0x14]
1004641f:	imul   ecx,ecx,0x343fd
10046425:	add    ecx,0x269ec3
1004642b:	mov    DWORD PTR [eax+0x14],ecx
1004642e:	mov    eax,ecx
10046430:	shr    eax,0x10
10046433:	and    eax,0x7fff
10046438:	ret    
10046439:	int3   
1004643a:	int3   
1004643b:	int3   
1004643c:	int3   
1004643d:	int3   
1004643e:	int3   
1004643f:	int3   
10046440:	push   edi
10046441:	mov    edi,DWORD PTR [esp+0x8]
10046445:	jmp    0x100464b5
10046447:	lea    esp,[esp+0x0]
1004644e:	mov    edi,edi
10046450:	mov    ecx,DWORD PTR [esp+0x4]
10046454:	push   edi
10046455:	test   ecx,0x3
1004645b:	je     0x10046470
1004645d:	mov    al,BYTE PTR [ecx]
1004645f:	add    ecx,0x1
10046462:	test   al,al
10046464:	je     0x100464a3
10046466:	test   ecx,0x3
1004646c:	jne    0x1004645d
1004646e:	mov    edi,edi
10046470:	mov    eax,DWORD PTR [ecx]
10046472:	mov    edx,0x7efefeff
10046477:	add    edx,eax
10046479:	xor    eax,0xffffffff
1004647c:	xor    eax,edx
1004647e:	add    ecx,0x4
10046481:	test   eax,0x81010100
10046486:	je     0x10046470
10046488:	mov    eax,DWORD PTR [ecx-0x4]
1004648b:	test   al,al
1004648d:	je     0x100464b2
1004648f:	test   ah,ah
10046491:	je     0x100464ad
10046493:	test   eax,0xff0000
10046498:	je     0x100464a8
1004649a:	test   eax,0xff000000
1004649f:	je     0x100464a3
100464a1:	jmp    0x10046470
100464a3:	lea    edi,[ecx-0x1]
100464a6:	jmp    0x100464b5
100464a8:	lea    edi,[ecx-0x2]
100464ab:	jmp    0x100464b5
100464ad:	lea    edi,[ecx-0x3]
100464b0:	jmp    0x100464b5
100464b2:	lea    edi,[ecx-0x4]
100464b5:	mov    ecx,DWORD PTR [esp+0xc]
100464b9:	test   ecx,0x3
100464bf:	je     0x100464de
100464c1:	mov    dl,BYTE PTR [ecx]
100464c3:	add    ecx,0x1
100464c6:	test   dl,dl
100464c8:	je     0x10046530
100464ca:	mov    BYTE PTR [edi],dl
100464cc:	add    edi,0x1
100464cf:	test   ecx,0x3
100464d5:	jne    0x100464c1
100464d7:	jmp    0x100464de
100464d9:	mov    DWORD PTR [edi],edx
100464db:	add    edi,0x4
100464de:	mov    edx,0x7efefeff
100464e3:	mov    eax,DWORD PTR [ecx]
100464e5:	add    edx,eax
100464e7:	xor    eax,0xffffffff
100464ea:	xor    eax,edx
100464ec:	mov    edx,DWORD PTR [ecx]
100464ee:	add    ecx,0x4
100464f1:	test   eax,0x81010100
100464f6:	je     0x100464d9
100464f8:	test   dl,dl
100464fa:	je     0x10046530
100464fc:	test   dh,dh
100464fe:	je     0x10046527
10046500:	test   edx,0xff0000
10046506:	je     0x1004651a
10046508:	test   edx,0xff000000
1004650e:	je     0x10046512
10046510:	jmp    0x100464d9
10046512:	mov    DWORD PTR [edi],edx
10046514:	mov    eax,DWORD PTR [esp+0x8]
10046518:	pop    edi
10046519:	ret    
1004651a:	mov    WORD PTR [edi],dx
1004651d:	mov    eax,DWORD PTR [esp+0x8]
10046521:	mov    BYTE PTR [edi+0x2],0x0
10046525:	pop    edi
10046526:	ret    
10046527:	mov    WORD PTR [edi],dx
1004652a:	mov    eax,DWORD PTR [esp+0x8]
1004652e:	pop    edi
1004652f:	ret    
10046530:	mov    BYTE PTR [edi],dl
10046532:	mov    eax,DWORD PTR [esp+0x8]
10046536:	pop    edi
10046537:	ret    
10046538:	lea    eax,[esp+0x10]
1004653c:	push   eax
1004653d:	push   0x0
1004653f:	push   DWORD PTR [esp+0x14]
10046543:	push   DWORD PTR [esp+0x14]
10046547:	push   DWORD PTR [esp+0x14]
1004654b:	call   0x10044e9c
10046550:	add    esp,0x14
10046553:	ret    
10046554:	push   ebp
10046555:	mov    ebp,esp
10046557:	sub    esp,0x10
1004655a:	push   ebx
1004655b:	push   esi
1004655c:	push   DWORD PTR [ebp+0x10]
1004655f:	lea    ecx,[ebp-0x10]
10046562:	call   0x100454e5
10046567:	mov    ebx,DWORD PTR [ebp+0x8]
1004656a:	xor    esi,esi
1004656c:	cmp    ebx,esi
1004656e:	jne    0x1004659f
10046570:	call   0x10046b55
10046575:	push   esi
10046576:	push   esi
10046577:	push   esi
10046578:	push   esi
10046579:	push   esi
1004657a:	mov    DWORD PTR [eax],0x16
10046580:	call   0x1004338c
10046585:	add    esp,0x14
10046588:	cmp    BYTE PTR [ebp-0x4],0x0
1004658c:	je     0x10046595
1004658e:	mov    eax,DWORD PTR [ebp-0x8]
10046591:	and    DWORD PTR [eax+0x70],0xfffffffd
10046595:	mov    eax,0x7fffffff
1004659a:	jmp    0x1004665f
1004659f:	push   edi
100465a0:	mov    edi,DWORD PTR [ebp+0xc]
100465a3:	cmp    edi,esi
100465a5:	jne    0x100465d6
100465a7:	call   0x10046b55
100465ac:	push   esi
100465ad:	push   esi
100465ae:	push   esi
100465af:	push   esi
100465b0:	push   esi
100465b1:	mov    DWORD PTR [eax],0x16
100465b7:	call   0x1004338c
100465bc:	add    esp,0x14
100465bf:	cmp    BYTE PTR [ebp-0x4],0x0
100465c3:	je     0x100465cc
100465c5:	mov    eax,DWORD PTR [ebp-0x8]
100465c8:	and    DWORD PTR [eax+0x70],0xfffffffd
100465cc:	mov    eax,0x7fffffff
100465d1:	jmp    0x1004665e
100465d6:	mov    eax,DWORD PTR [ebp-0x10]
100465d9:	cmp    DWORD PTR [eax+0x14],esi
100465dc:	jne    0x10046618
100465de:	movzx  eax,WORD PTR [ebx]
100465e1:	cmp    ax,0x41
100465e5:	jb     0x100465f0
100465e7:	cmp    ax,0x5a
100465eb:	ja     0x100465f0
100465ed:	add    eax,0x20
100465f0:	movzx  esi,ax
100465f3:	movzx  eax,WORD PTR [edi]
100465f6:	cmp    ax,0x41
100465fa:	jb     0x10046605
100465fc:	cmp    ax,0x5a
10046600:	ja     0x10046605
10046602:	add    eax,0x20
10046605:	inc    ebx
10046606:	inc    ebx
10046607:	inc    edi
10046608:	inc    edi
10046609:	test   si,si
1004660c:	movzx  eax,ax
1004660f:	je     0x10046649
10046611:	cmp    si,ax
10046614:	je     0x100465de
10046616:	jmp    0x10046649
10046618:	movzx  eax,WORD PTR [ebx]
1004661b:	lea    ecx,[ebp-0x10]
1004661e:	push   ecx
1004661f:	push   eax
10046620:	call   0x1004b71c
10046625:	movzx  esi,ax
10046628:	movzx  eax,WORD PTR [edi]
1004662b:	lea    ecx,[ebp-0x10]
1004662e:	push   ecx
1004662f:	inc    ebx
10046630:	push   eax
10046631:	inc    ebx
10046632:	call   0x1004b71c
10046637:	add    esp,0x10
1004663a:	inc    edi
1004663b:	inc    edi
1004663c:	test   si,si
1004663f:	movzx  eax,ax
10046642:	je     0x10046649
10046644:	cmp    si,ax
10046647:	je     0x10046618
10046649:	movzx  ecx,ax
1004664c:	movzx  eax,si
1004664f:	sub    eax,ecx
10046651:	cmp    BYTE PTR [ebp-0x4],0x0
10046655:	je     0x1004665e
10046657:	mov    ecx,DWORD PTR [ebp-0x8]
1004665a:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004665e:	pop    edi
1004665f:	pop    esi
10046660:	pop    ebx
10046661:	leave  
10046662:	ret    
10046663:	push   esi
10046664:	xor    esi,esi
10046666:	cmp    DWORD PTR ds:0x100802c8,esi
1004666c:	push   edi
1004666d:	jne    0x100466e0
1004666f:	mov    edi,DWORD PTR [esp+0xc]
10046673:	cmp    edi,esi
10046675:	jne    0x10046696
10046677:	call   0x10046b55
1004667c:	push   esi
1004667d:	push   esi
1004667e:	push   esi
1004667f:	push   esi
10046680:	push   esi
10046681:	mov    DWORD PTR [eax],0x16
10046687:	call   0x1004338c
1004668c:	add    esp,0x14
1004668f:	mov    eax,0x7fffffff
10046694:	jmp    0x100466f1
10046696:	mov    edx,DWORD PTR [esp+0x10]
1004669a:	cmp    edx,esi
1004669c:	je     0x10046677
1004669e:	movzx  eax,WORD PTR [edi]
100466a1:	cmp    ax,0x41
100466a5:	jb     0x100466b0
100466a7:	cmp    ax,0x5a
100466ab:	ja     0x100466b0
100466ad:	add    eax,0x20
100466b0:	movzx  ecx,ax
100466b3:	movzx  eax,WORD PTR [edx]
100466b6:	cmp    ax,0x41
100466ba:	jb     0x100466c5
100466bc:	cmp    ax,0x5a
100466c0:	ja     0x100466c5
100466c2:	add    eax,0x20
100466c5:	inc    edi
100466c6:	inc    edi
100466c7:	inc    edx
100466c8:	inc    edx
100466c9:	cmp    cx,si
100466cc:	movzx  eax,ax
100466cf:	je     0x100466d6
100466d1:	cmp    cx,ax
100466d4:	je     0x1004669e
100466d6:	movzx  edx,ax
100466d9:	movzx  eax,cx
100466dc:	sub    eax,edx
100466de:	jmp    0x100466f1
100466e0:	push   esi
100466e1:	push   DWORD PTR [esp+0x14]
100466e5:	push   DWORD PTR [esp+0x14]
100466e9:	call   0x10046554
100466ee:	add    esp,0xc
100466f1:	pop    edi
100466f2:	pop    esi
100466f3:	ret    
100466f4:	mov    edx,DWORD PTR [esp+0x4]
100466f8:	push   esi
100466f9:	mov    esi,DWORD PTR [esp+0xc]
100466fd:	push   edi
100466fe:	jmp    0x10046709
10046700:	test   cx,cx
10046703:	je     0x10046716
10046705:	inc    edx
10046706:	inc    edx
10046707:	inc    esi
10046708:	inc    esi
10046709:	movzx  ecx,WORD PTR [esi]
1004670c:	movzx  eax,WORD PTR [edx]
1004670f:	movzx  edi,cx
10046712:	sub    eax,edi
10046714:	je     0x10046700
10046716:	test   eax,eax
10046718:	pop    edi
10046719:	pop    esi
1004671a:	jge    0x10046720
1004671c:	or     eax,0xffffffff
1004671f:	ret    
10046720:	jle    0x10046725
10046722:	xor    eax,eax
10046724:	inc    eax
10046725:	ret    
10046726:	push   ebp
10046727:	mov    ebp,esp
10046729:	push   ecx
1004672a:	mov    eax,DWORD PTR [ebp+0xc]
1004672d:	cmp    eax,0x1
10046730:	push   ebx
10046731:	push   esi
10046732:	push   edi
10046733:	jne    0x10046850
10046739:	mov    ebx,DWORD PTR ds:0x100661ac
1004673f:	mov    edi,0x94
10046744:	push   edi
10046745:	push   0x0
10046747:	call   ebx
10046749:	push   eax
1004674a:	call   DWORD PTR ds:0x1006618c
10046750:	mov    esi,eax
10046752:	test   esi,esi
10046754:	jne    0x1004675d
10046756:	xor    eax,eax
10046758:	jmp    0x100468f8
1004675d:	push   esi
1004675e:	mov    DWORD PTR [esi],edi
10046760:	call   DWORD PTR ds:0x100661a8
10046766:	test   eax,eax
10046768:	push   esi
10046769:	push   0x0
1004676b:	jne    0x10046778
1004676d:	call   ebx
1004676f:	push   eax
10046770:	call   DWORD PTR ds:0x10066188
10046776:	jmp    0x10046756
10046778:	mov    eax,DWORD PTR [esi+0x10]
1004677b:	mov    edi,DWORD PTR [esi+0xc]
1004677e:	mov    DWORD PTR [ebp+0xc],eax
10046781:	mov    eax,DWORD PTR [esi+0x4]
10046784:	mov    DWORD PTR [ebp+0x10],eax
10046787:	mov    eax,DWORD PTR [esi+0x8]
1004678a:	mov    DWORD PTR [ebp-0x4],eax
1004678d:	and    edi,0x7fff
10046793:	call   ebx
10046795:	push   eax
10046796:	call   DWORD PTR ds:0x10066188
1004679c:	mov    eax,DWORD PTR [ebp+0xc]
1004679f:	cmp    eax,0x2
100467a2:	je     0x100467aa
100467a4:	or     edi,0x8000
100467aa:	mov    ecx,DWORD PTR [ebp-0x4]
100467ad:	mov    ds:0x1007fde8,eax
100467b2:	mov    eax,DWORD PTR [ebp+0x10]
100467b5:	mov    edx,eax
100467b7:	shl    edx,0x8
100467ba:	add    edx,ecx
100467bc:	push   0x1
100467be:	mov    DWORD PTR ds:0x1007fdf0,edx
100467c4:	mov    ds:0x1007fdf4,eax
100467c9:	mov    DWORD PTR ds:0x1007fdf8,ecx
100467cf:	mov    DWORD PTR ds:0x1007fdec,edi
100467d5:	call   0x10047a59
100467da:	test   eax,eax
100467dc:	pop    ecx
100467dd:	je     0x10046756
100467e3:	call   0x1004729e
100467e8:	test   eax,eax
100467ea:	jne    0x100467f6
100467ec:	call   0x10047ab3
100467f1:	jmp    0x10046756
100467f6:	call   0x1004beb6
100467fb:	call   DWORD PTR ds:0x100661a4
10046801:	mov    ds:0x100825bc,eax
10046806:	call   0x1004bd81
1004680b:	mov    ds:0x1007fa98,eax
10046810:	call   0x1004b7c9
10046815:	test   eax,eax
10046817:	jge    0x10046820
10046819:	call   0x10046f88
1004681e:	jmp    0x100467ec
10046820:	call   0x1004bcc8
10046825:	test   eax,eax
10046827:	jl     0x10046849
10046829:	call   0x1004ba55
1004682e:	test   eax,eax
10046830:	jl     0x10046849
10046832:	push   0x0
10046834:	call   0x100476b4
10046839:	test   eax,eax
1004683b:	pop    ecx
1004683c:	jne    0x10046849
1004683e:	inc    DWORD PTR ds:0x1007fa94
10046844:	jmp    0x100468f5
10046849:	call   0x1004ba09
1004684e:	jmp    0x10046819
10046850:	xor    edi,edi
10046852:	cmp    eax,edi
10046854:	jne    0x1004688b
10046856:	cmp    DWORD PTR ds:0x1007fa94,edi
1004685c:	jle    0x10046756
10046862:	dec    DWORD PTR ds:0x1007fa94
10046868:	cmp    DWORD PTR ds:0x1007fe24,edi
1004686e:	jne    0x10046875
10046870:	call   0x10047825
10046875:	cmp    DWORD PTR [ebp+0x10],edi
10046878:	jne    0x100468f5
1004687a:	call   0x1004ba09
1004687f:	call   0x10046f88
10046884:	call   0x10047ab3
10046889:	jmp    0x100468f5
1004688b:	cmp    eax,0x2
1004688e:	jne    0x100468e9
10046890:	call   0x10046f5e
10046895:	push   0x214
1004689a:	push   0x1
1004689c:	call   0x10047462
100468a1:	mov    esi,eax
100468a3:	cmp    esi,edi
100468a5:	pop    ecx
100468a6:	pop    ecx
100468a7:	je     0x10046756
100468ad:	push   esi
100468ae:	push   DWORD PTR ds:0x1007e1a8
100468b4:	push   DWORD PTR ds:0x1007fdd8
100468ba:	call   0x10046ef2
100468bf:	pop    ecx
100468c0:	call   eax
100468c2:	test   eax,eax
100468c4:	je     0x100468dd
100468c6:	push   edi
100468c7:	push   esi
100468c8:	call   0x10046fc5
100468cd:	pop    ecx
100468ce:	pop    ecx
100468cf:	call   DWORD PTR ds:0x10066160
100468d5:	or     DWORD PTR [esi+0x4],0xffffffff
100468d9:	mov    DWORD PTR [esi],eax
100468db:	jmp    0x100468f5
100468dd:	push   esi
100468de:	call   0x10043508
100468e3:	pop    ecx
100468e4:	jmp    0x10046756
100468e9:	cmp    eax,0x3
100468ec:	jne    0x100468f5
100468ee:	push   edi
100468ef:	call   0x10047235
100468f4:	pop    ecx
100468f5:	xor    eax,eax
100468f7:	inc    eax
100468f8:	pop    edi
100468f9:	pop    esi
100468fa:	pop    ebx
100468fb:	leave  
100468fc:	ret    0xc
100468ff:	push   0xc
10046901:	push   0x10074620
10046906:	call   0x10046c94
1004690b:	mov    edi,ecx
1004690d:	mov    esi,edx
1004690f:	mov    ebx,DWORD PTR [ebp+0x8]
10046912:	xor    eax,eax
10046914:	inc    eax
10046915:	mov    DWORD PTR [ebp-0x1c],eax
10046918:	test   esi,esi
1004691a:	jne    0x10046928
1004691c:	cmp    DWORD PTR ds:0x1007fa94,edx
10046922:	je     0x100469ed
10046928:	and    DWORD PTR [ebp-0x4],0x0
1004692c:	cmp    esi,eax
1004692e:	je     0x10046935
10046930:	cmp    esi,0x2
10046933:	jne    0x10046963
10046935:	mov    eax,ds:0x100665e8
1004693a:	test   eax,eax
1004693c:	je     0x10046946
1004693e:	push   edi
1004693f:	push   esi
10046940:	push   ebx
10046941:	call   eax
10046943:	mov    DWORD PTR [ebp-0x1c],eax
10046946:	cmp    DWORD PTR [ebp-0x1c],0x0
1004694a:	je     0x100469e6
10046950:	push   edi
10046951:	push   esi
10046952:	push   ebx
10046953:	call   0x10046726
10046958:	mov    DWORD PTR [ebp-0x1c],eax
1004695b:	test   eax,eax
1004695d:	je     0x100469e6
10046963:	push   edi
10046964:	push   esi
10046965:	push   ebx
10046966:	call   0x1001642a
1004696b:	mov    DWORD PTR [ebp-0x1c],eax
1004696e:	cmp    esi,0x1
10046971:	jne    0x10046997
10046973:	test   eax,eax
10046975:	jne    0x10046997
10046977:	push   edi
10046978:	push   eax
10046979:	push   ebx
1004697a:	call   0x1001642a
1004697f:	push   edi
10046980:	push   0x0
10046982:	push   ebx
10046983:	call   0x10046726
10046988:	mov    eax,ds:0x100665e8
1004698d:	test   eax,eax
1004698f:	je     0x10046997
10046991:	push   edi
10046992:	push   0x0
10046994:	push   ebx
10046995:	call   eax
10046997:	test   esi,esi
10046999:	je     0x100469a0
1004699b:	cmp    esi,0x3
1004699e:	jne    0x100469c6
100469a0:	push   edi
100469a1:	push   esi
100469a2:	push   ebx
100469a3:	call   0x10046726
100469a8:	test   eax,eax
100469aa:	jne    0x100469af
100469ac:	and    DWORD PTR [ebp-0x1c],eax
100469af:	cmp    DWORD PTR [ebp-0x1c],0x0
100469b3:	je     0x100469c6
100469b5:	mov    eax,ds:0x100665e8
100469ba:	test   eax,eax
100469bc:	je     0x100469c6
100469be:	push   edi
100469bf:	push   esi
100469c0:	push   ebx
100469c1:	call   eax
100469c3:	mov    DWORD PTR [ebp-0x1c],eax
100469c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100469cd:	mov    eax,DWORD PTR [ebp-0x1c]
100469d0:	jmp    0x100469ef
100469d2:	mov    eax,DWORD PTR [ebp-0x14]
100469d5:	mov    ecx,DWORD PTR [eax]
100469d7:	mov    ecx,DWORD PTR [ecx]
100469d9:	push   eax
100469da:	push   ecx
100469db:	call   0x1004c06d
100469e0:	pop    ecx
100469e1:	pop    ecx
100469e2:	ret    
100469e3:	mov    esp,DWORD PTR [ebp-0x18]
100469e6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100469ed:	xor    eax,eax
100469ef:	call   0x10046cd9
100469f4:	ret    
100469f5:	cmp    DWORD PTR [esp+0x8],0x1
100469fa:	jne    0x10046a01
100469fc:	call   0x1004c088
10046a01:	push   DWORD PTR [esp+0x4]
10046a05:	mov    ecx,DWORD PTR [esp+0x10]
10046a09:	mov    edx,DWORD PTR [esp+0xc]
10046a0d:	call   0x100468ff
10046a12:	pop    ecx
10046a13:	ret    0xc
10046a16:	push   ebp
10046a17:	mov    ebp,esp
10046a19:	sub    esp,0x328
10046a1f:	mov    ds:0x1007fbb0,eax
10046a24:	mov    DWORD PTR ds:0x1007fbac,ecx
10046a2a:	mov    DWORD PTR ds:0x1007fba8,edx
10046a30:	mov    DWORD PTR ds:0x1007fba4,ebx
10046a36:	mov    DWORD PTR ds:0x1007fba0,esi
10046a3c:	mov    DWORD PTR ds:0x1007fb9c,edi
10046a42:	data16 mov WORD PTR ds:0x1007fbc8,ss
10046a49:	data16 mov WORD PTR ds:0x1007fbbc,cs
10046a50:	data16 mov WORD PTR ds:0x1007fb98,ds
10046a57:	data16 mov WORD PTR ds:0x1007fb94,es
10046a5e:	data16 mov WORD PTR ds:0x1007fb90,fs
10046a65:	data16 mov WORD PTR ds:0x1007fb8c,gs
10046a6c:	pushf  
10046a6d:	pop    DWORD PTR ds:0x1007fbc0
10046a73:	mov    eax,DWORD PTR [ebp+0x0]
10046a76:	mov    ds:0x1007fbb4,eax
10046a7b:	mov    eax,DWORD PTR [ebp+0x4]
10046a7e:	mov    ds:0x1007fbb8,eax
10046a83:	lea    eax,[ebp+0x8]
10046a86:	mov    ds:0x1007fbc4,eax
10046a8b:	mov    eax,DWORD PTR [ebp-0x320]
10046a91:	mov    DWORD PTR ds:0x1007fb00,0x10001
10046a9b:	mov    eax,ds:0x1007fbb8
10046aa0:	mov    ds:0x1007fab4,eax
10046aa5:	mov    DWORD PTR ds:0x1007faa8,0xc0000409
10046aaf:	mov    DWORD PTR ds:0x1007faac,0x1
10046ab9:	mov    eax,ds:0x1007e030
10046abe:	mov    DWORD PTR [ebp-0x328],eax
10046ac4:	mov    eax,ds:0x1007e034
10046ac9:	mov    DWORD PTR [ebp-0x324],eax
10046acf:	call   DWORD PTR ds:0x10066184
10046ad5:	mov    ds:0x1007faf8,eax
10046ada:	push   0x1
10046adc:	call   0x10047880
10046ae1:	pop    ecx
10046ae2:	push   0x0
10046ae4:	call   DWORD PTR ds:0x10066180
10046aea:	push   0x100665ec
10046aef:	call   DWORD PTR ds:0x1006617c
10046af5:	cmp    DWORD PTR ds:0x1007faf8,0x0
10046afc:	jne    0x10046b06
10046afe:	push   0x1
10046b00:	call   0x10047880
10046b05:	pop    ecx
10046b06:	push   0xc0000409
10046b0b:	call   DWORD PTR ds:0x10066108
10046b11:	push   eax
10046b12:	call   DWORD PTR ds:0x10066178
10046b18:	leave  
10046b19:	ret    
10046b1a:	mov    eax,DWORD PTR [esp+0x4]
10046b1e:	xor    ecx,ecx
10046b20:	cmp    eax,DWORD PTR [ecx*8+0x1007e038]
10046b27:	je     0x10046b3b
10046b29:	inc    ecx
10046b2a:	cmp    ecx,0x2d
10046b2d:	jl     0x10046b20
10046b2f:	lea    ecx,[eax-0x13]
10046b32:	cmp    ecx,0x11
10046b35:	ja     0x10046b43
10046b37:	push   0xd
10046b39:	pop    eax
10046b3a:	ret    
10046b3b:	mov    eax,DWORD PTR [ecx*8+0x1007e03c]
10046b42:	ret    
10046b43:	add    eax,0xffffff44
10046b48:	push   0xe
10046b4a:	pop    ecx
10046b4b:	cmp    ecx,eax
10046b4d:	sbb    eax,eax
10046b4f:	and    eax,ecx
10046b51:	add    eax,0x8
10046b54:	ret    
10046b55:	call   0x10047079
10046b5a:	test   eax,eax
10046b5c:	jne    0x10046b64
10046b5e:	mov    eax,0x1007e1a0
10046b63:	ret    
10046b64:	add    eax,0x8
10046b67:	ret    
10046b68:	call   0x10047079
10046b6d:	test   eax,eax
10046b6f:	jne    0x10046b77
10046b71:	mov    eax,0x1007e1a4
10046b76:	ret    
10046b77:	add    eax,0xc
10046b7a:	ret    
10046b7b:	push   esi
10046b7c:	call   0x10046b68
10046b81:	mov    ecx,DWORD PTR [esp+0x8]
10046b85:	push   ecx
10046b86:	mov    DWORD PTR [eax],ecx
10046b88:	call   0x10046b1a
10046b8d:	pop    ecx
10046b8e:	mov    esi,eax
10046b90:	call   0x10046b55
10046b95:	mov    DWORD PTR [eax],esi
10046b97:	pop    esi
10046b98:	ret    
10046b99:	mov    ecx,DWORD PTR [esp+0x4]
10046b9d:	push   ebx
10046b9e:	xor    ebx,ebx
10046ba0:	cmp    ecx,ebx
10046ba2:	push   esi
10046ba3:	push   edi
10046ba4:	je     0x10046bae
10046ba6:	mov    edi,DWORD PTR [esp+0x14]
10046baa:	cmp    edi,ebx
10046bac:	ja     0x10046bc9
10046bae:	call   0x10046b55
10046bb3:	push   0x16
10046bb5:	pop    esi
10046bb6:	mov    DWORD PTR [eax],esi
10046bb8:	push   ebx
10046bb9:	push   ebx
10046bba:	push   ebx
10046bbb:	push   ebx
10046bbc:	push   ebx
10046bbd:	call   0x1004338c
10046bc2:	add    esp,0x14
10046bc5:	mov    eax,esi
10046bc7:	jmp    0x10046bfa
10046bc9:	mov    esi,DWORD PTR [esp+0x18]
10046bcd:	cmp    esi,ebx
10046bcf:	jne    0x10046bd5
10046bd1:	mov    BYTE PTR [ecx],bl
10046bd3:	jmp    0x10046bae
10046bd5:	mov    edx,ecx
10046bd7:	mov    al,BYTE PTR [esi]
10046bd9:	mov    BYTE PTR [edx],al
10046bdb:	inc    edx
10046bdc:	inc    esi
10046bdd:	cmp    al,bl
10046bdf:	je     0x10046be4
10046be1:	dec    edi
10046be2:	jne    0x10046bd7
10046be4:	cmp    edi,ebx
10046be6:	jne    0x10046bf8
10046be8:	mov    BYTE PTR [ecx],bl
10046bea:	call   0x10046b55
10046bef:	push   0x22
10046bf1:	pop    ecx
10046bf2:	mov    DWORD PTR [eax],ecx
10046bf4:	mov    esi,ecx
10046bf6:	jmp    0x10046bb8
10046bf8:	xor    eax,eax
10046bfa:	pop    edi
10046bfb:	pop    esi
10046bfc:	pop    ebx
10046bfd:	ret    
10046bfe:	push   0x8
10046c00:	push   0x10074640
10046c05:	call   0x10046c94
10046c0a:	call   0x100470fc
10046c0f:	mov    eax,DWORD PTR [eax+0x78]
10046c12:	test   eax,eax
10046c14:	je     0x10046c2c
10046c16:	and    DWORD PTR [ebp-0x4],0x0
10046c1a:	call   eax
10046c1c:	jmp    0x10046c25
10046c1e:	xor    eax,eax
10046c20:	inc    eax
10046c21:	ret    
10046c22:	mov    esp,DWORD PTR [ebp-0x18]
10046c25:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046c2c:	call   0x1004ab6b
10046c31:	call   0x10046cd9
10046c36:	ret    
10046c37:	call   0x100470fc
10046c3c:	mov    eax,DWORD PTR [eax+0x7c]
10046c3f:	test   eax,eax
10046c41:	je     0x10046c45
10046c43:	call   eax
10046c45:	jmp    0x10046bfe
10046c4a:	push   0x8
10046c4c:	push   0x10074660
10046c51:	call   0x10046c94
10046c56:	push   DWORD PTR ds:0x1007fdcc
10046c5c:	call   0x10046ef2
10046c61:	pop    ecx
10046c62:	test   eax,eax
10046c64:	je     0x10046c7c
10046c66:	and    DWORD PTR [ebp-0x4],0x0
10046c6a:	call   eax
10046c6c:	jmp    0x10046c75
10046c6e:	xor    eax,eax
10046c70:	inc    eax
10046c71:	ret    
10046c72:	mov    esp,DWORD PTR [ebp-0x18]
10046c75:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046c7c:	jmp    0x10046bfe
10046c81:	push   0x10046bfe
10046c86:	call   0x10046e86
10046c8b:	pop    ecx
10046c8c:	mov    ds:0x1007fdcc,eax
10046c91:	ret    
10046c92:	int3   
10046c93:	int3   
10046c94:	push   0x10046cf0
10046c99:	push   DWORD PTR fs:0x0
10046ca0:	mov    eax,DWORD PTR [esp+0x10]
10046ca4:	mov    DWORD PTR [esp+0x10],ebp
10046ca8:	lea    ebp,[esp+0x10]
10046cac:	sub    esp,eax
10046cae:	push   ebx
10046caf:	push   esi
10046cb0:	push   edi
10046cb1:	mov    eax,ds:0x1007e030
10046cb6:	xor    DWORD PTR [ebp-0x4],eax
10046cb9:	xor    eax,ebp
10046cbb:	push   eax
10046cbc:	mov    DWORD PTR [ebp-0x18],esp
10046cbf:	push   DWORD PTR [ebp-0x8]
10046cc2:	mov    eax,DWORD PTR [ebp-0x4]
10046cc5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046ccc:	mov    DWORD PTR [ebp-0x8],eax
10046ccf:	lea    eax,[ebp-0x10]
10046cd2:	mov    fs:0x0,eax
10046cd8:	ret    
10046cd9:	mov    ecx,DWORD PTR [ebp-0x10]
10046cdc:	mov    DWORD PTR fs:0x0,ecx
10046ce3:	pop    ecx
10046ce4:	pop    edi
10046ce5:	pop    edi
10046ce6:	pop    esi
10046ce7:	pop    ebx
10046ce8:	mov    esp,ebp
10046cea:	pop    ebp
10046ceb:	push   ecx
10046cec:	ret    
10046ced:	int3   
10046cee:	int3   
10046cef:	int3   
10046cf0:	sub    esp,0x14
10046cf3:	push   ebx
10046cf4:	mov    ebx,DWORD PTR [esp+0x20]
10046cf8:	push   ebp
10046cf9:	push   esi
10046cfa:	mov    esi,DWORD PTR [ebx+0x8]
10046cfd:	xor    esi,DWORD PTR ds:0x1007e030
10046d03:	push   edi
10046d04:	mov    eax,DWORD PTR [esi]
10046d06:	cmp    eax,0xfffffffe
10046d09:	mov    BYTE PTR [esp+0x13],0x0
10046d0e:	mov    DWORD PTR [esp+0x18],0x1
10046d16:	lea    edi,[ebx+0x10]
10046d19:	je     0x10046d28
10046d1b:	mov    ecx,DWORD PTR [esi+0x4]
10046d1e:	add    ecx,edi
10046d20:	xor    ecx,DWORD PTR [eax+edi*1]
10046d23:	call   0x10042e97
10046d28:	mov    ecx,DWORD PTR [esi+0xc]
10046d2b:	mov    eax,DWORD PTR [esi+0x8]
10046d2e:	add    ecx,edi
10046d30:	xor    ecx,DWORD PTR [eax+edi*1]
10046d33:	call   0x10042e97
10046d38:	mov    eax,DWORD PTR [esp+0x28]
10046d3c:	test   BYTE PTR [eax+0x4],0x66
10046d40:	jne    0x10046e65
10046d46:	mov    ebp,DWORD PTR [ebx+0xc]
10046d49:	cmp    ebp,0xfffffffe
10046d4c:	mov    ecx,DWORD PTR [esp+0x30]
10046d50:	lea    edx,[esp+0x1c]
10046d54:	mov    DWORD PTR [esp+0x1c],eax
10046d58:	mov    DWORD PTR [esp+0x20],ecx
10046d5c:	mov    DWORD PTR [ebx-0x4],edx
10046d5f:	je     0x10046dbf
10046d61:	lea    eax,[ebp+ebp*2+0x0]
10046d65:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
10046d69:	test   ecx,ecx
10046d6b:	lea    ebx,[esi+eax*4+0x10]
10046d6f:	mov    eax,DWORD PTR [ebx]
10046d71:	mov    DWORD PTR [esp+0x14],eax
10046d75:	je     0x10046d8d
10046d77:	mov    edx,edi
10046d79:	call   0x1004c20e
10046d7e:	test   eax,eax
10046d80:	mov    BYTE PTR [esp+0x13],0x1
10046d85:	jl     0x10046dcb
10046d87:	jg     0x10046dd5
10046d89:	mov    eax,DWORD PTR [esp+0x14]
10046d8d:	cmp    eax,0xfffffffe
10046d90:	mov    ebp,eax
10046d92:	jne    0x10046d61
10046d94:	cmp    BYTE PTR [esp+0x13],0x0
10046d99:	je     0x10046dbf
10046d9b:	mov    eax,DWORD PTR [esi]
10046d9d:	cmp    eax,0xfffffffe
10046da0:	je     0x10046daf
10046da2:	mov    ecx,DWORD PTR [esi+0x4]
10046da5:	add    ecx,edi
10046da7:	xor    ecx,DWORD PTR [eax+edi*1]
10046daa:	call   0x10042e97
10046daf:	mov    ecx,DWORD PTR [esi+0xc]
10046db2:	mov    eax,DWORD PTR [esi+0x8]
10046db5:	add    ecx,edi
10046db7:	xor    ecx,DWORD PTR [eax+edi*1]
10046dba:	call   0x10042e97
10046dbf:	mov    eax,DWORD PTR [esp+0x18]
10046dc3:	pop    edi
10046dc4:	pop    esi
10046dc5:	pop    ebp
10046dc6:	pop    ebx
10046dc7:	add    esp,0x14
10046dca:	ret    
10046dcb:	mov    DWORD PTR [esp+0x18],0x0
10046dd3:	jmp    0x10046d9b
10046dd5:	mov    ecx,DWORD PTR [esp+0x28]
10046dd9:	cmp    DWORD PTR [ecx],0xe06d7363
10046ddf:	jne    0x10046e0b
10046de1:	cmp    DWORD PTR ds:0x1006cae8,0x0
10046de8:	je     0x10046e0b
10046dea:	push   0x1006cae8
10046def:	call   0x1004c2e2
10046df4:	add    esp,0x4
10046df7:	test   eax,eax
10046df9:	je     0x10046e0b
10046dfb:	mov    edx,DWORD PTR [esp+0x28]
10046dff:	push   0x1
10046e01:	push   edx
10046e02:	call   DWORD PTR ds:0x1006cae8
10046e08:	add    esp,0x8
10046e0b:	mov    ecx,DWORD PTR [esp+0x2c]
10046e0f:	call   0x1004c23e
10046e14:	mov    eax,DWORD PTR [esp+0x2c]
10046e18:	cmp    DWORD PTR [eax+0xc],ebp
10046e1b:	je     0x10046e30
10046e1d:	push   0x1007e030
10046e22:	push   edi
10046e23:	mov    edx,ebp
10046e25:	mov    ecx,eax
10046e27:	call   0x1004c258
10046e2c:	mov    eax,DWORD PTR [esp+0x2c]
10046e30:	mov    ecx,DWORD PTR [esp+0x14]
10046e34:	mov    DWORD PTR [eax+0xc],ecx
10046e37:	mov    eax,DWORD PTR [esi]
10046e39:	cmp    eax,0xfffffffe
10046e3c:	je     0x10046e4b
10046e3e:	mov    ecx,DWORD PTR [esi+0x4]
10046e41:	add    ecx,edi
10046e43:	xor    ecx,DWORD PTR [eax+edi*1]
10046e46:	call   0x10042e97
10046e4b:	mov    ecx,DWORD PTR [esi+0xc]
10046e4e:	mov    edx,DWORD PTR [esi+0x8]
10046e51:	add    ecx,edi
10046e53:	xor    ecx,DWORD PTR [edx+edi*1]
10046e56:	call   0x10042e97
10046e5b:	mov    ecx,DWORD PTR [ebx+0x8]
10046e5e:	mov    edx,edi
10046e60:	jmp    0x1004c225
10046e65:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
10046e69:	je     0x10046dbf
10046e6f:	push   0x1007e030
10046e74:	push   edi
10046e75:	mov    ecx,ebx
10046e77:	mov    edx,0xfffffffe
10046e7c:	call   0x1004c258
10046e81:	jmp    0x10046d9b
10046e86:	push   esi
10046e87:	push   DWORD PTR ds:0x1007e1ac
10046e8d:	mov    esi,DWORD PTR ds:0x100661b0
10046e93:	call   esi
10046e95:	test   eax,eax
10046e97:	je     0x10046eba
10046e99:	mov    eax,ds:0x1007e1a8
10046e9e:	cmp    eax,0xffffffff
10046ea1:	je     0x10046eba
10046ea3:	push   eax
10046ea4:	push   DWORD PTR ds:0x1007e1ac
10046eaa:	call   esi
10046eac:	call   eax
10046eae:	test   eax,eax
10046eb0:	je     0x10046eba
10046eb2:	mov    eax,DWORD PTR [eax+0x1f8]
10046eb8:	jmp    0x10046ed5
10046eba:	push   0x10066604
10046ebf:	call   DWORD PTR ds:0x10066198
10046ec5:	test   eax,eax
10046ec7:	je     0x10046ee3
10046ec9:	push   0x100665f4
10046ece:	push   eax
10046ecf:	call   DWORD PTR ds:0x1006612c
10046ed5:	test   eax,eax
10046ed7:	je     0x10046ee3
10046ed9:	push   DWORD PTR [esp+0x8]
10046edd:	call   eax
10046edf:	mov    DWORD PTR [esp+0x8],eax
10046ee3:	mov    eax,DWORD PTR [esp+0x8]
10046ee7:	pop    esi
10046ee8:	ret    
10046ee9:	push   0x0
10046eeb:	call   0x10046e86
10046ef0:	pop    ecx
10046ef1:	ret    
10046ef2:	push   esi
10046ef3:	push   DWORD PTR ds:0x1007e1ac
10046ef9:	mov    esi,DWORD PTR ds:0x100661b0
10046eff:	call   esi
10046f01:	test   eax,eax
10046f03:	je     0x10046f26
10046f05:	mov    eax,ds:0x1007e1a8
10046f0a:	cmp    eax,0xffffffff
10046f0d:	je     0x10046f26
10046f0f:	push   eax
10046f10:	push   DWORD PTR ds:0x1007e1ac
10046f16:	call   esi
10046f18:	call   eax
10046f1a:	test   eax,eax
10046f1c:	je     0x10046f26
10046f1e:	mov    eax,DWORD PTR [eax+0x1fc]
10046f24:	jmp    0x10046f41
10046f26:	push   0x10066604
10046f2b:	call   DWORD PTR ds:0x10066198
10046f31:	test   eax,eax
10046f33:	je     0x10046f4f
10046f35:	push   0x10066614
10046f3a:	push   eax
10046f3b:	call   DWORD PTR ds:0x1006612c
10046f41:	test   eax,eax
10046f43:	je     0x10046f4f
10046f45:	push   DWORD PTR [esp+0x8]
10046f49:	call   eax
10046f4b:	mov    DWORD PTR [esp+0x8],eax
10046f4f:	mov    eax,DWORD PTR [esp+0x8]
10046f53:	pop    esi
10046f54:	ret    
10046f55:	call   DWORD PTR ds:0x100661b4
10046f5b:	ret    0x4
10046f5e:	push   DWORD PTR ds:0x1007e1ac
10046f64:	call   DWORD PTR ds:0x100661b0
10046f6a:	test   eax,eax
10046f6c:	jne    0x10046f87
10046f6e:	push   DWORD PTR ds:0x1007fdd4
10046f74:	call   0x10046ef2
10046f79:	pop    ecx
10046f7a:	push   eax
10046f7b:	push   DWORD PTR ds:0x1007e1ac
10046f81:	call   DWORD PTR ds:0x100661b8
10046f87:	ret    
10046f88:	mov    eax,ds:0x1007e1a8
10046f8d:	cmp    eax,0xffffffff
10046f90:	je     0x10046fa8
10046f92:	push   eax
10046f93:	push   DWORD PTR ds:0x1007fddc
10046f99:	call   0x10046ef2
10046f9e:	pop    ecx
10046f9f:	call   eax
10046fa1:	or     DWORD PTR ds:0x1007e1a8,0xffffffff
10046fa8:	mov    eax,ds:0x1007e1ac
10046fad:	cmp    eax,0xffffffff
10046fb0:	je     0x10046fc0
10046fb2:	push   eax
10046fb3:	call   DWORD PTR ds:0x100661bc
10046fb9:	or     DWORD PTR ds:0x1007e1ac,0xffffffff
10046fc0:	jmp    0x10047b70
10046fc5:	push   0xc
10046fc7:	push   0x10074680
10046fcc:	call   0x10046c94
10046fd1:	push   0x10066604
10046fd6:	call   DWORD PTR ds:0x10066198
10046fdc:	mov    DWORD PTR [ebp-0x1c],eax
10046fdf:	mov    esi,DWORD PTR [ebp+0x8]
10046fe2:	mov    DWORD PTR [esi+0x5c],0x1007e9f8
10046fe9:	xor    edi,edi
10046feb:	inc    edi
10046fec:	mov    DWORD PTR [esi+0x14],edi
10046fef:	test   eax,eax
10046ff1:	je     0x10047017
10046ff3:	push   0x100665f4
10046ff8:	push   eax
10046ff9:	mov    ebx,DWORD PTR ds:0x1006612c
10046fff:	call   ebx
10047001:	mov    DWORD PTR [esi+0x1f8],eax
10047007:	push   0x10066614
1004700c:	push   DWORD PTR [ebp-0x1c]
1004700f:	call   ebx
10047011:	mov    DWORD PTR [esi+0x1fc],eax
10047017:	mov    DWORD PTR [esi+0x70],edi
1004701a:	mov    BYTE PTR [esi+0xc8],0x43
10047021:	mov    BYTE PTR [esi+0x14b],0x43
10047028:	mov    eax,0x1007e3a0
1004702d:	mov    DWORD PTR [esi+0x68],eax
10047030:	push   eax
10047031:	call   DWORD PTR ds:0x100660a4
10047037:	push   0xc
10047039:	call   0x10047c9d
1004703e:	pop    ecx
1004703f:	and    DWORD PTR [ebp-0x4],0x0
10047043:	mov    eax,DWORD PTR [ebp+0xc]
10047046:	mov    DWORD PTR [esi+0x6c],eax
10047049:	test   eax,eax
1004704b:	jne    0x10047055
1004704d:	mov    eax,ds:0x1007e9a8
10047052:	mov    DWORD PTR [esi+0x6c],eax
10047055:	push   DWORD PTR [esi+0x6c]
10047058:	call   0x1004a758
1004705d:	pop    ecx
1004705e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047065:	call   0x10047070
1004706a:	call   0x10046cd9
1004706f:	ret    
10047070:	push   0xc
10047072:	call   0x10047bc5
10047077:	pop    ecx
10047078:	ret    
10047079:	push   esi
1004707a:	push   edi
1004707b:	call   DWORD PTR ds:0x100660cc
10047081:	mov    edi,eax
10047083:	call   0x10046f5e
10047088:	push   DWORD PTR ds:0x1007e1a8
1004708e:	push   DWORD PTR ds:0x1007e1ac
10047094:	call   DWORD PTR ds:0x100661b0
1004709a:	call   eax
1004709c:	mov    esi,eax
1004709e:	test   esi,esi
100470a0:	jne    0x100470f0
100470a2:	push   0x214
100470a7:	push   0x1
100470a9:	call   0x10047462
100470ae:	mov    esi,eax
100470b0:	test   esi,esi
100470b2:	pop    ecx
100470b3:	pop    ecx
100470b4:	je     0x100470f0
100470b6:	push   esi
100470b7:	push   DWORD PTR ds:0x1007e1a8
100470bd:	push   DWORD PTR ds:0x1007fdd8
100470c3:	call   0x10046ef2
100470c8:	pop    ecx
100470c9:	call   eax
100470cb:	test   eax,eax
100470cd:	je     0x100470e7
100470cf:	push   0x0
100470d1:	push   esi
100470d2:	call   0x10046fc5
100470d7:	pop    ecx
100470d8:	pop    ecx
100470d9:	call   DWORD PTR ds:0x10066160
100470df:	or     DWORD PTR [esi+0x4],0xffffffff
100470e3:	mov    DWORD PTR [esi],eax
100470e5:	jmp    0x100470f0
100470e7:	push   esi
100470e8:	call   0x10043508
100470ed:	pop    ecx
100470ee:	xor    esi,esi
100470f0:	push   edi
100470f1:	call   DWORD PTR ds:0x1006615c
100470f7:	pop    edi
100470f8:	mov    eax,esi
100470fa:	pop    esi
100470fb:	ret    
100470fc:	push   esi
100470fd:	call   0x10047079
10047102:	mov    esi,eax
10047104:	test   esi,esi
10047106:	jne    0x10047110
10047108:	push   0x10
1004710a:	call   0x10047598
1004710f:	pop    ecx
10047110:	mov    eax,esi
10047112:	pop    esi
10047113:	ret    
10047114:	push   0x8
10047116:	push   0x100746a0
1004711b:	call   0x10046c94
10047120:	mov    esi,DWORD PTR [ebp+0x8]
10047123:	test   esi,esi
10047125:	je     0x10047215
1004712b:	mov    eax,DWORD PTR [esi+0x24]
1004712e:	test   eax,eax
10047130:	je     0x10047139
10047132:	push   eax
10047133:	call   0x10043508
10047138:	pop    ecx
10047139:	mov    eax,DWORD PTR [esi+0x2c]
1004713c:	test   eax,eax
1004713e:	je     0x10047147
10047140:	push   eax
10047141:	call   0x10043508
10047146:	pop    ecx
10047147:	mov    eax,DWORD PTR [esi+0x34]
1004714a:	test   eax,eax
1004714c:	je     0x10047155
1004714e:	push   eax
1004714f:	call   0x10043508
10047154:	pop    ecx
10047155:	mov    eax,DWORD PTR [esi+0x3c]
10047158:	test   eax,eax
1004715a:	je     0x10047163
1004715c:	push   eax
1004715d:	call   0x10043508
10047162:	pop    ecx
10047163:	mov    eax,DWORD PTR [esi+0x44]
10047166:	test   eax,eax
10047168:	je     0x10047171
1004716a:	push   eax
1004716b:	call   0x10043508
10047170:	pop    ecx
10047171:	mov    eax,DWORD PTR [esi+0x48]
10047174:	test   eax,eax
10047176:	je     0x1004717f
10047178:	push   eax
10047179:	call   0x10043508
1004717e:	pop    ecx
1004717f:	mov    eax,DWORD PTR [esi+0x5c]
10047182:	cmp    eax,0x1007e9f8
10047187:	je     0x10047190
10047189:	push   eax
1004718a:	call   0x10043508
1004718f:	pop    ecx
10047190:	push   0xd
10047192:	call   0x10047c9d
10047197:	pop    ecx
10047198:	and    DWORD PTR [ebp-0x4],0x0
1004719c:	mov    edi,DWORD PTR [esi+0x68]
1004719f:	test   edi,edi
100471a1:	je     0x100471bd
100471a3:	push   edi
100471a4:	call   DWORD PTR ds:0x100660ac
100471aa:	test   eax,eax
100471ac:	jne    0x100471bd
100471ae:	cmp    edi,0x1007e3a0
100471b4:	je     0x100471bd
100471b6:	push   edi
100471b7:	call   0x10043508
100471bc:	pop    ecx
100471bd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100471c4:	call   0x10047220
100471c9:	push   0xc
100471cb:	call   0x10047c9d
100471d0:	pop    ecx
100471d1:	mov    DWORD PTR [ebp-0x4],0x1
100471d8:	mov    edi,DWORD PTR [esi+0x6c]
100471db:	test   edi,edi
100471dd:	je     0x10047202
100471df:	push   edi
100471e0:	call   0x1004a7de
100471e5:	pop    ecx
100471e6:	cmp    edi,DWORD PTR ds:0x1007e9a8
100471ec:	je     0x10047202
100471ee:	cmp    edi,0x1007e8d0
100471f4:	je     0x10047202
100471f6:	cmp    DWORD PTR [edi],0x0
100471f9:	jne    0x10047202
100471fb:	push   edi
100471fc:	call   0x1004a618
10047201:	pop    ecx
10047202:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047209:	call   0x1004722c
1004720e:	push   esi
1004720f:	call   0x10043508
10047214:	pop    ecx
10047215:	call   0x10046cd9
1004721a:	ret    0x4
1004721d:	mov    esi,DWORD PTR [ebp+0x8]
10047220:	push   0xd
10047222:	call   0x10047bc5
10047227:	pop    ecx
10047228:	ret    
10047229:	mov    esi,DWORD PTR [ebp+0x8]
1004722c:	push   0xc
1004722e:	call   0x10047bc5
10047233:	pop    ecx
10047234:	ret    
10047235:	cmp    DWORD PTR ds:0x1007e1a8,0xffffffff
1004723c:	je     0x1004728a
1004723e:	push   edi
1004723f:	mov    edi,DWORD PTR [esp+0x8]
10047243:	test   edi,edi
10047245:	jne    0x1004726d
10047247:	push   esi
10047248:	push   DWORD PTR ds:0x1007e1ac
1004724e:	mov    esi,DWORD PTR ds:0x100661b0
10047254:	call   esi
10047256:	test   eax,eax
10047258:	je     0x1004726c
1004725a:	push   DWORD PTR ds:0x1007e1a8
10047260:	push   DWORD PTR ds:0x1007e1ac
10047266:	call   esi
10047268:	call   eax
1004726a:	mov    edi,eax
1004726c:	pop    esi
1004726d:	push   0x0
1004726f:	push   DWORD PTR ds:0x1007e1a8
10047275:	push   DWORD PTR ds:0x1007fdd8
1004727b:	call   0x10046ef2
10047280:	pop    ecx
10047281:	call   eax
10047283:	push   edi
10047284:	call   0x10047114
10047289:	pop    edi
1004728a:	mov    eax,ds:0x1007e1ac
1004728f:	cmp    eax,0xffffffff
10047292:	je     0x1004729d
10047294:	push   0x0
10047296:	push   eax
10047297:	call   DWORD PTR ds:0x100661b8
1004729d:	ret    
1004729e:	push   edi
1004729f:	push   0x10066604
100472a4:	call   DWORD PTR ds:0x10066198
100472aa:	mov    edi,eax
100472ac:	test   edi,edi
100472ae:	jne    0x100472b9
100472b0:	call   0x10046f88
100472b5:	xor    eax,eax
100472b7:	pop    edi
100472b8:	ret    
100472b9:	push   esi
100472ba:	mov    esi,DWORD PTR ds:0x1006612c
100472c0:	push   0x10066644
100472c5:	push   edi
100472c6:	call   esi
100472c8:	push   0x10066638
100472cd:	push   edi
100472ce:	mov    ds:0x1007fdd0,eax
100472d3:	call   esi
100472d5:	push   0x1006662c
100472da:	push   edi
100472db:	mov    ds:0x1007fdd4,eax
100472e0:	call   esi
100472e2:	push   0x10066624
100472e7:	push   edi
100472e8:	mov    ds:0x1007fdd8,eax
100472ed:	call   esi
100472ef:	cmp    DWORD PTR ds:0x1007fdd0,0x0
100472f6:	mov    esi,DWORD PTR ds:0x100661b8
100472fc:	mov    ds:0x1007fddc,eax
10047301:	je     0x10047319
10047303:	cmp    DWORD PTR ds:0x1007fdd4,0x0
1004730a:	je     0x10047319
1004730c:	cmp    DWORD PTR ds:0x1007fdd8,0x0
10047313:	je     0x10047319
10047315:	test   eax,eax
10047317:	jne    0x1004733d
10047319:	mov    eax,ds:0x100661b0
1004731e:	mov    ds:0x1007fdd4,eax
10047323:	mov    eax,ds:0x100661bc
10047328:	mov    DWORD PTR ds:0x1007fdd0,0x10046f55
10047332:	mov    DWORD PTR ds:0x1007fdd8,esi
10047338:	mov    ds:0x1007fddc,eax
1004733d:	call   DWORD PTR ds:0x100661b4
10047343:	cmp    eax,0xffffffff
10047346:	mov    ds:0x1007e1ac,eax
1004734b:	je     0x1004741d
10047351:	push   DWORD PTR ds:0x1007fdd4
10047357:	push   eax
10047358:	call   esi
1004735a:	test   eax,eax
1004735c:	je     0x1004741d
10047362:	call   0x10047834
10047367:	push   DWORD PTR ds:0x1007fdd0
1004736d:	call   0x10046e86
10047372:	push   DWORD PTR ds:0x1007fdd4
10047378:	mov    ds:0x1007fdd0,eax
1004737d:	call   0x10046e86
10047382:	push   DWORD PTR ds:0x1007fdd8
10047388:	mov    ds:0x1007fdd4,eax
1004738d:	call   0x10046e86
10047392:	push   DWORD PTR ds:0x1007fddc
10047398:	mov    ds:0x1007fdd8,eax
1004739d:	call   0x10046e86
100473a2:	add    esp,0x10
100473a5:	mov    ds:0x1007fddc,eax
100473aa:	call   0x10047b27
100473af:	test   eax,eax
100473b1:	je     0x10047418
100473b3:	push   0x10047114
100473b8:	push   DWORD PTR ds:0x1007fdd0
100473be:	call   0x10046ef2
100473c3:	pop    ecx
100473c4:	call   eax
100473c6:	cmp    eax,0xffffffff
100473c9:	mov    ds:0x1007e1a8,eax
100473ce:	je     0x10047418
100473d0:	push   0x214
100473d5:	push   0x1
100473d7:	call   0x10047462
100473dc:	mov    esi,eax
100473de:	test   esi,esi
100473e0:	pop    ecx
100473e1:	pop    ecx
100473e2:	je     0x10047418
100473e4:	push   esi
100473e5:	push   DWORD PTR ds:0x1007e1a8
100473eb:	push   DWORD PTR ds:0x1007fdd8
100473f1:	call   0x10046ef2
100473f6:	pop    ecx
100473f7:	call   eax
100473f9:	test   eax,eax
100473fb:	je     0x10047418
100473fd:	push   0x0
100473ff:	push   esi
10047400:	call   0x10046fc5
10047405:	pop    ecx
10047406:	pop    ecx
10047407:	call   DWORD PTR ds:0x10066160
1004740d:	or     DWORD PTR [esi+0x4],0xffffffff
10047411:	mov    DWORD PTR [esi],eax
10047413:	xor    eax,eax
10047415:	inc    eax
10047416:	jmp    0x1004741f
10047418:	call   0x10046f88
1004741d:	xor    eax,eax
1004741f:	pop    esi
10047420:	pop    edi
10047421:	ret    
10047422:	push   esi
10047423:	push   edi
10047424:	xor    esi,esi
10047426:	push   DWORD PTR [esp+0xc]
1004742a:	call   0x10044f8d
1004742f:	mov    edi,eax
10047431:	test   edi,edi
10047433:	pop    ecx
10047434:	jne    0x1004745d
10047436:	cmp    DWORD PTR ds:0x1007fde0,eax
1004743c:	jbe    0x1004745d
1004743e:	push   esi
1004743f:	call   DWORD PTR ds:0x100660bc
10047445:	lea    eax,[esi+0x3e8]
1004744b:	cmp    eax,DWORD PTR ds:0x1007fde0
10047451:	jbe    0x10047456
10047453:	or     eax,0xffffffff
10047456:	cmp    eax,0xffffffff
10047459:	mov    esi,eax
1004745b:	jne    0x10047426
1004745d:	mov    eax,edi
1004745f:	pop    edi
10047460:	pop    esi
10047461:	ret    
10047462:	push   esi
10047463:	push   edi
10047464:	xor    esi,esi
10047466:	push   0x0
10047468:	push   DWORD PTR [esp+0x14]
1004746c:	push   DWORD PTR [esp+0x14]
10047470:	call   0x10043596
10047475:	mov    edi,eax
10047477:	add    esp,0xc
1004747a:	test   edi,edi
1004747c:	jne    0x100474a5
1004747e:	cmp    DWORD PTR ds:0x1007fde0,eax
10047484:	jbe    0x100474a5
10047486:	push   esi
10047487:	call   DWORD PTR ds:0x100660bc
1004748d:	lea    eax,[esi+0x3e8]
10047493:	cmp    eax,DWORD PTR ds:0x1007fde0
10047499:	jbe    0x1004749e
1004749b:	or     eax,0xffffffff
1004749e:	cmp    eax,0xffffffff
100474a1:	mov    esi,eax
100474a3:	jne    0x10047466
100474a5:	mov    eax,edi
100474a7:	pop    edi
100474a8:	pop    esi
100474a9:	ret    
100474aa:	push   esi
100474ab:	push   edi
100474ac:	xor    esi,esi
100474ae:	push   DWORD PTR [esp+0x10]
100474b2:	push   DWORD PTR [esp+0x10]
100474b6:	call   0x100461a8
100474bb:	mov    edi,eax
100474bd:	test   edi,edi
100474bf:	pop    ecx
100474c0:	pop    ecx
100474c1:	jne    0x100474f0
100474c3:	cmp    DWORD PTR [esp+0x10],eax
100474c7:	je     0x100474f0
100474c9:	cmp    DWORD PTR ds:0x1007fde0,eax
100474cf:	jbe    0x100474f0
100474d1:	push   esi
100474d2:	call   DWORD PTR ds:0x100660bc
100474d8:	lea    eax,[esi+0x3e8]
100474de:	cmp    eax,DWORD PTR ds:0x1007fde0
100474e4:	jbe    0x100474e9
100474e6:	or     eax,0xffffffff
100474e9:	cmp    eax,0xffffffff
100474ec:	mov    esi,eax
100474ee:	jne    0x100474ae
100474f0:	mov    eax,edi
100474f2:	pop    edi
100474f3:	pop    esi
100474f4:	ret    
100474f5:	push   0x10
100474f7:	push   0x100746c8
100474fc:	call   0x10046c94
10047501:	xor    eax,eax
10047503:	mov    ebx,DWORD PTR [ebp+0x8]
10047506:	xor    edi,edi
10047508:	cmp    ebx,edi
1004750a:	setne  al
1004750d:	cmp    eax,edi
1004750f:	jne    0x1004752e
10047511:	call   0x10046b55
10047516:	mov    DWORD PTR [eax],0x16
1004751c:	push   edi
1004751d:	push   edi
1004751e:	push   edi
1004751f:	push   edi
10047520:	push   edi
10047521:	call   0x1004338c
10047526:	add    esp,0x14
10047529:	or     eax,0xffffffff
1004752c:	jmp    0x10047581
1004752e:	cmp    DWORD PTR ds:0x100825a0,0x3
10047535:	jne    0x1004756f
10047537:	push   0x4
10047539:	call   0x10047c9d
1004753e:	pop    ecx
1004753f:	mov    DWORD PTR [ebp-0x4],edi
10047542:	push   ebx
10047543:	call   0x10047d16
10047548:	pop    ecx
10047549:	mov    DWORD PTR [ebp-0x20],eax
1004754c:	cmp    eax,edi
1004754e:	je     0x1004755b
10047550:	mov    esi,DWORD PTR [ebx-0x4]
10047553:	sub    esi,0x9
10047556:	mov    DWORD PTR [ebp-0x1c],esi
10047559:	jmp    0x1004755e
1004755b:	mov    esi,DWORD PTR [ebp-0x1c]
1004755e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047565:	call   0x1004758f
1004756a:	cmp    DWORD PTR [ebp-0x20],edi
1004756d:	jne    0x1004757f
1004756f:	push   ebx
10047570:	push   edi
10047571:	push   DWORD PTR ds:0x1007fe38
10047577:	call   DWORD PTR ds:0x100661c0
1004757d:	mov    esi,eax
1004757f:	mov    eax,esi
10047581:	call   0x10046cd9
10047586:	ret    
10047587:	xor    edi,edi
10047589:	mov    ebx,DWORD PTR [ebp+0x8]
1004758c:	mov    esi,DWORD PTR [ebp-0x1c]
1004758f:	push   0x4
10047591:	call   0x10047bc5
10047596:	pop    ecx
10047597:	ret    
10047598:	call   0x10049d9a
1004759d:	push   DWORD PTR [esp+0x4]
100475a1:	call   0x10049bfa
100475a6:	push   DWORD PTR ds:0x1007e1b0
100475ac:	call   0x10046ef2
100475b1:	push   0xff
100475b6:	call   eax
100475b8:	add    esp,0xc
100475bb:	ret    
100475bc:	push   0x10066660
100475c1:	call   DWORD PTR ds:0x10066198
100475c7:	test   eax,eax
100475c9:	je     0x100475e1
100475cb:	push   0x10066650
100475d0:	push   eax
100475d1:	call   DWORD PTR ds:0x1006612c
100475d7:	test   eax,eax
100475d9:	je     0x100475e1
100475db:	push   DWORD PTR [esp+0x4]
100475df:	call   eax
100475e1:	ret    
100475e2:	push   DWORD PTR [esp+0x4]
100475e6:	call   0x100475bc
100475eb:	pop    ecx
100475ec:	push   DWORD PTR [esp+0x4]
100475f0:	call   DWORD PTR ds:0x100661c4
100475f6:	int3   
100475f7:	push   0x8
100475f9:	call   0x10047c9d
100475fe:	pop    ecx
100475ff:	ret    
10047600:	push   0x8
10047602:	call   0x10047bc5
10047607:	pop    ecx
10047608:	ret    
10047609:	push   esi
1004760a:	mov    esi,eax
1004760c:	jmp    0x10047619
1004760e:	mov    eax,DWORD PTR [esi]
10047610:	test   eax,eax
10047612:	je     0x10047616
10047614:	call   eax
10047616:	add    esi,0x4
10047619:	cmp    esi,DWORD PTR [esp+0x8]
1004761d:	jb     0x1004760e
1004761f:	pop    esi
10047620:	ret    
10047621:	push   esi
10047622:	mov    esi,DWORD PTR [esp+0x8]
10047626:	xor    eax,eax
10047628:	jmp    0x10047639
1004762a:	test   eax,eax
1004762c:	jne    0x1004763f
1004762e:	mov    ecx,DWORD PTR [esi]
10047630:	test   ecx,ecx
10047632:	je     0x10047636
10047634:	call   ecx
10047636:	add    esi,0x4
10047639:	cmp    esi,DWORD PTR [esp+0xc]
1004763d:	jb     0x1004762a
1004763f:	pop    esi
10047640:	ret    
10047641:	mov    ecx,DWORD PTR [esp+0x4]
10047645:	push   esi
10047646:	xor    esi,esi
10047648:	cmp    ecx,esi
1004764a:	jne    0x10047669
1004764c:	call   0x10046b55
10047651:	push   esi
10047652:	push   esi
10047653:	push   esi
10047654:	push   esi
10047655:	push   esi
10047656:	mov    DWORD PTR [eax],0x16
1004765c:	call   0x1004338c
10047661:	add    esp,0x14
10047664:	push   0x16
10047666:	pop    eax
10047667:	pop    esi
10047668:	ret    
10047669:	mov    eax,ds:0x1007fde8
1004766e:	cmp    eax,esi
10047670:	je     0x1004764c
10047672:	mov    DWORD PTR [ecx],eax
10047674:	xor    eax,eax
10047676:	pop    esi
10047677:	ret    
10047678:	mov    eax,DWORD PTR [esp+0x4]
1004767c:	push   esi
1004767d:	xor    esi,esi
1004767f:	cmp    eax,esi
10047681:	jne    0x100476a0
10047683:	call   0x10046b55
10047688:	push   esi
10047689:	push   esi
1004768a:	push   esi
1004768b:	push   esi
1004768c:	push   esi
1004768d:	mov    DWORD PTR [eax],0x16
10047693:	call   0x1004338c
10047698:	add    esp,0x14
1004769b:	push   0x16
1004769d:	pop    eax
1004769e:	pop    esi
1004769f:	ret    
100476a0:	cmp    DWORD PTR ds:0x1007fde8,esi
100476a6:	je     0x10047683
100476a8:	mov    ecx,DWORD PTR ds:0x1007fdf4
100476ae:	mov    DWORD PTR [eax],ecx
100476b0:	xor    eax,eax
100476b2:	pop    esi
100476b3:	ret    
100476b4:	cmp    DWORD PTR ds:0x1006cab8,0x0
100476bb:	je     0x100476d7
100476bd:	push   0x1006cab8
100476c2:	call   0x1004c2e2
100476c7:	test   eax,eax
100476c9:	pop    ecx
100476ca:	je     0x100476d7
100476cc:	push   DWORD PTR [esp+0x4]
100476d0:	call   DWORD PTR ds:0x1006cab8
100476d6:	pop    ecx
100476d7:	call   0x1004c34e
100476dc:	push   0x1006655c
100476e1:	push   0x10066540
100476e6:	call   0x10047621
100476eb:	test   eax,eax
100476ed:	pop    ecx
100476ee:	pop    ecx
100476ef:	jne    0x10047745
100476f1:	push   esi
100476f2:	push   edi
100476f3:	push   0x1004beda
100476f8:	call   0x10043274
100476fd:	mov    esi,0x10066450
10047702:	mov    eax,esi
10047704:	mov    edi,0x1006653c
10047709:	cmp    eax,edi
1004770b:	pop    ecx
1004770c:	jae    0x1004771d
1004770e:	mov    eax,DWORD PTR [esi]
10047710:	test   eax,eax
10047712:	je     0x10047716
10047714:	call   eax
10047716:	add    esi,0x4
10047719:	cmp    esi,edi
1004771b:	jb     0x1004770e
1004771d:	cmp    DWORD PTR ds:0x100825b8,0x0
10047724:	pop    edi
10047725:	pop    esi
10047726:	je     0x10047743
10047728:	push   0x100825b8
1004772d:	call   0x1004c2e2
10047732:	test   eax,eax
10047734:	pop    ecx
10047735:	je     0x10047743
10047737:	push   0x0
10047739:	push   0x2
1004773b:	push   0x0
1004773d:	call   DWORD PTR ds:0x100825b8
10047743:	xor    eax,eax
10047745:	ret    
10047746:	push   0xc
10047748:	push   0x100746e8
1004774d:	call   0x10046c94
10047752:	push   0x8
10047754:	call   0x10047c9d
10047759:	pop    ecx
1004775a:	and    DWORD PTR [ebp-0x4],0x0
1004775e:	xor    esi,esi
10047760:	inc    esi
10047761:	cmp    DWORD PTR ds:0x1007fe28,esi
10047767:	je     0x100477d4
10047769:	mov    DWORD PTR ds:0x1007fe24,esi
1004776f:	mov    al,BYTE PTR [ebp+0x10]
10047772:	mov    ds:0x1007fe20,al
10047777:	cmp    DWORD PTR [ebp+0xc],0x0
1004777b:	jne    0x100477c4
1004777d:	push   DWORD PTR ds:0x100825b0
10047783:	call   0x10046ef2
10047788:	mov    edi,eax
1004778a:	push   DWORD PTR ds:0x100825ac
10047790:	call   0x10046ef2
10047795:	pop    ecx
10047796:	pop    ecx
10047797:	mov    DWORD PTR [ebp-0x1c],eax
1004779a:	test   edi,edi
1004779c:	je     0x100477b4
1004779e:	sub    DWORD PTR [ebp-0x1c],0x4
100477a2:	cmp    DWORD PTR [ebp-0x1c],edi
100477a5:	jb     0x100477b4
100477a7:	mov    eax,DWORD PTR [ebp-0x1c]
100477aa:	mov    eax,DWORD PTR [eax]
100477ac:	test   eax,eax
100477ae:	je     0x1004779e
100477b0:	call   eax
100477b2:	jmp    0x1004779e
100477b4:	push   0x1006656c
100477b9:	mov    eax,0x10066560
100477be:	call   0x10047609
100477c3:	pop    ecx
100477c4:	push   0x10066578
100477c9:	mov    eax,0x10066570
100477ce:	call   0x10047609
100477d3:	pop    ecx
100477d4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100477db:	call   0x100477ff
100477e0:	cmp    DWORD PTR [ebp+0x10],0x0
100477e4:	jne    0x1004780e
100477e6:	mov    DWORD PTR ds:0x1007fe28,esi
100477ec:	push   0x8
100477ee:	call   0x10047bc5
100477f3:	pop    ecx
100477f4:	push   DWORD PTR [ebp+0x8]
100477f7:	call   0x100475e2
100477fc:	xor    esi,esi
100477fe:	inc    esi
100477ff:	cmp    DWORD PTR [ebp+0x10],0x0
10047803:	je     0x1004780d
10047805:	push   0x8
10047807:	call   0x10047bc5
1004780c:	pop    ecx
1004780d:	ret    
1004780e:	call   0x10046cd9
10047813:	ret    
10047814:	push   0x0
10047816:	push   0x1
10047818:	push   DWORD PTR [esp+0xc]
1004781c:	call   0x10047746
10047821:	add    esp,0xc
10047824:	ret    
10047825:	push   0x1
10047827:	push   0x0
10047829:	push   0x0
1004782b:	call   0x10047746
10047830:	add    esp,0xc
10047833:	ret    
10047834:	push   esi
10047835:	call   0x10046ee9
1004783a:	mov    esi,eax
1004783c:	push   esi
1004783d:	call   0x10047988
10047842:	push   esi
10047843:	call   0x1004c581
10047848:	push   esi
10047849:	call   0x10043286
1004784e:	push   esi
1004784f:	call   0x1004ac7c
10047854:	push   esi
10047855:	call   0x1004c577
1004785a:	push   esi
1004785b:	call   0x1004c36d
10047860:	push   esi
10047861:	call   0x1005950f
10047866:	push   esi
10047867:	call   0x10046c81
1004786c:	push   0x10047814
10047871:	call   0x10046e86
10047876:	add    esp,0x24
10047879:	mov    ds:0x1007e1b0,eax
1004787e:	pop    esi
1004787f:	ret    
10047880:	and    DWORD PTR ds:0x100825a4,0x0
10047887:	ret    
10047888:	push   0xc
1004788a:	push   0x10074708
1004788f:	call   0x10046c94
10047894:	push   0xe
10047896:	call   0x10047c9d
1004789b:	pop    ecx
1004789c:	and    DWORD PTR [ebp-0x4],0x0
100478a0:	mov    esi,DWORD PTR [ebp+0x8]
100478a3:	mov    ecx,DWORD PTR [esi+0x4]
100478a6:	test   ecx,ecx
100478a8:	je     0x100478d9
100478aa:	mov    eax,ds:0x1007fe30
100478af:	mov    edx,0x1007fe2c
100478b4:	mov    DWORD PTR [ebp-0x1c],eax
100478b7:	test   eax,eax
100478b9:	je     0x100478cc
100478bb:	cmp    DWORD PTR [eax],ecx
100478bd:	jne    0x100478eb
100478bf:	mov    ecx,DWORD PTR [eax+0x4]
100478c2:	mov    DWORD PTR [edx+0x4],ecx
100478c5:	push   eax
100478c6:	call   0x10043508
100478cb:	pop    ecx
100478cc:	push   DWORD PTR [esi+0x4]
100478cf:	call   0x10043508
100478d4:	pop    ecx
100478d5:	and    DWORD PTR [esi+0x4],0x0
100478d9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100478e0:	call   0x100478ef
100478e5:	call   0x10046cd9
100478ea:	ret    
100478eb:	mov    edx,eax
100478ed:	jmp    0x100478b4
100478ef:	push   0xe
100478f1:	call   0x10047bc5
100478f6:	pop    ecx
100478f7:	ret    
100478f8:	int3   
100478f9:	int3   
100478fa:	int3   
100478fb:	int3   
100478fc:	int3   
100478fd:	int3   
100478fe:	int3   
100478ff:	int3   
10047900:	mov    edx,DWORD PTR [esp+0x4]
10047904:	mov    ecx,DWORD PTR [esp+0x8]
10047908:	test   edx,0x3
1004790e:	jne    0x1004794c
10047910:	mov    eax,DWORD PTR [edx]
10047912:	cmp    al,BYTE PTR [ecx]
10047914:	jne    0x10047944
10047916:	or     al,al
10047918:	je     0x10047940
1004791a:	cmp    ah,BYTE PTR [ecx+0x1]
1004791d:	jne    0x10047944
1004791f:	or     ah,ah
10047921:	je     0x10047940
10047923:	shr    eax,0x10
10047926:	cmp    al,BYTE PTR [ecx+0x2]
10047929:	jne    0x10047944
1004792b:	or     al,al
1004792d:	je     0x10047940
1004792f:	cmp    ah,BYTE PTR [ecx+0x3]
10047932:	jne    0x10047944
10047934:	add    ecx,0x4
10047937:	add    edx,0x4
1004793a:	or     ah,ah
1004793c:	jne    0x10047910
1004793e:	mov    edi,edi
10047940:	xor    eax,eax
10047942:	ret    
10047943:	nop
10047944:	sbb    eax,eax
10047946:	shl    eax,1
10047948:	add    eax,0x1
1004794b:	ret    
1004794c:	test   edx,0x1
10047952:	je     0x1004796c
10047954:	mov    al,BYTE PTR [edx]
10047956:	add    edx,0x1
10047959:	cmp    al,BYTE PTR [ecx]
1004795b:	jne    0x10047944
1004795d:	add    ecx,0x1
10047960:	or     al,al
10047962:	je     0x10047940
10047964:	test   edx,0x2
1004796a:	je     0x10047910
1004796c:	mov    ax,WORD PTR [edx]
1004796f:	add    edx,0x2
10047972:	cmp    al,BYTE PTR [ecx]
10047974:	jne    0x10047944
10047976:	or     al,al
10047978:	je     0x10047940
1004797a:	cmp    ah,BYTE PTR [ecx+0x1]
1004797d:	jne    0x10047944
1004797f:	or     ah,ah
10047981:	je     0x10047940
10047983:	add    ecx,0x2
10047986:	jmp    0x10047910
10047988:	mov    eax,DWORD PTR [esp+0x4]
1004798c:	mov    ds:0x1007fe34,eax
10047991:	ret    
10047992:	push   DWORD PTR ds:0x1007fe34
10047998:	call   0x10046ef2
1004799d:	test   eax,eax
1004799f:	pop    ecx
100479a0:	je     0x100479b1
100479a2:	push   DWORD PTR [esp+0x4]
100479a6:	call   eax
100479a8:	test   eax,eax
100479aa:	pop    ecx
100479ab:	je     0x100479b1
100479ad:	xor    eax,eax
100479af:	inc    eax
100479b0:	ret    
100479b1:	xor    eax,eax
100479b3:	ret    
100479b4:	push   ebp
100479b5:	mov    ebp,esp
100479b7:	sub    esp,0x20
100479ba:	mov    eax,DWORD PTR [ebp+0x8]
100479bd:	push   esi
100479be:	push   edi
100479bf:	push   0x8
100479c1:	pop    ecx
100479c2:	mov    esi,0x1006666c
100479c7:	lea    edi,[ebp-0x20]
100479ca:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100479cc:	mov    DWORD PTR [ebp-0x8],eax
100479cf:	mov    eax,DWORD PTR [ebp+0xc]
100479d2:	test   eax,eax
100479d4:	pop    edi
100479d5:	mov    DWORD PTR [ebp-0x4],eax
100479d8:	pop    esi
100479d9:	je     0x100479e7
100479db:	test   BYTE PTR [eax],0x8
100479de:	je     0x100479e7
100479e0:	mov    DWORD PTR [ebp-0xc],0x1994000
100479e7:	lea    eax,[ebp-0xc]
100479ea:	push   eax
100479eb:	push   DWORD PTR [ebp-0x10]
100479ee:	push   DWORD PTR [ebp-0x1c]
100479f1:	push   DWORD PTR [ebp-0x20]
100479f4:	call   DWORD PTR ds:0x10066128
100479fa:	leave  
100479fb:	ret    0x8
100479fe:	push   ebp
100479ff:	mov    ebp,esp
10047a01:	push   ecx
10047a02:	push   ecx
10047a03:	push   esi
10047a04:	lea    eax,[ebp-0x4]
10047a07:	xor    esi,esi
10047a09:	push   eax
10047a0a:	mov    DWORD PTR [ebp-0x4],esi
10047a0d:	mov    DWORD PTR [ebp-0x8],esi
10047a10:	call   0x10047641
10047a15:	test   eax,eax
10047a17:	pop    ecx
10047a18:	je     0x10047a27
10047a1a:	push   esi
10047a1b:	push   esi
10047a1c:	push   esi
10047a1d:	push   esi
10047a1e:	push   esi
10047a1f:	call   0x10043290
10047a24:	add    esp,0x14
10047a27:	lea    eax,[ebp-0x8]
10047a2a:	push   eax
10047a2b:	call   0x10047678
10047a30:	test   eax,eax
10047a32:	pop    ecx
10047a33:	je     0x10047a42
10047a35:	push   esi
10047a36:	push   esi
10047a37:	push   esi
10047a38:	push   esi
10047a39:	push   esi
10047a3a:	call   0x10043290
10047a3f:	add    esp,0x14
10047a42:	cmp    DWORD PTR [ebp-0x4],0x2
10047a46:	pop    esi
10047a47:	jne    0x10047a54
10047a49:	cmp    DWORD PTR [ebp-0x8],0x5
10047a4d:	jb     0x10047a54
10047a4f:	xor    eax,eax
10047a51:	inc    eax
10047a52:	leave  
10047a53:	ret    
10047a54:	push   0x3
10047a56:	pop    eax
10047a57:	leave  
10047a58:	ret    
10047a59:	xor    eax,eax
10047a5b:	cmp    DWORD PTR [esp+0x4],eax
10047a5f:	push   0x0
10047a61:	sete   al
10047a64:	push   0x1000
10047a69:	push   eax
10047a6a:	call   DWORD PTR ds:0x100661cc
10047a70:	test   eax,eax
10047a72:	mov    ds:0x1007fe38,eax
10047a77:	jne    0x10047a7c
10047a79:	xor    eax,eax
10047a7b:	ret    
10047a7c:	call   0x100479fe
10047a81:	cmp    eax,0x3
10047a84:	mov    ds:0x100825a0,eax
10047a89:	jne    0x10047aaf
10047a8b:	push   0x3f8
10047a90:	call   0x10047cce
10047a95:	test   eax,eax
10047a97:	pop    ecx
10047a98:	jne    0x10047aaf
10047a9a:	push   DWORD PTR ds:0x1007fe38
10047aa0:	call   DWORD PTR ds:0x100661c8
10047aa6:	and    DWORD PTR ds:0x1007fe38,0x0
10047aad:	jmp    0x10047a79
10047aaf:	xor    eax,eax
10047ab1:	inc    eax
10047ab2:	ret    
10047ab3:	push   ebp
10047ab4:	xor    ebp,ebp
10047ab6:	cmp    DWORD PTR ds:0x100825a0,0x3
10047abd:	jne    0x10047b13
10047abf:	push   ebx
10047ac0:	mov    ebx,DWORD PTR ds:0x10066188
10047ac6:	push   edi
10047ac7:	xor    edi,edi
10047ac9:	cmp    DWORD PTR ds:0x10082588,ebp
10047acf:	jle    0x10047b02
10047ad1:	push   esi
10047ad2:	mov    esi,DWORD PTR ds:0x1008258c
10047ad8:	add    esi,0x10
10047adb:	push   0x8000
10047ae0:	push   ebp
10047ae1:	push   DWORD PTR [esi-0x4]
10047ae4:	call   DWORD PTR ds:0x100661d0
10047aea:	push   DWORD PTR [esi]
10047aec:	push   ebp
10047aed:	push   DWORD PTR ds:0x1007fe38
10047af3:	call   ebx
10047af5:	add    esi,0x14
10047af8:	inc    edi
10047af9:	cmp    edi,DWORD PTR ds:0x10082588
10047aff:	jl     0x10047adb
10047b01:	pop    esi
10047b02:	push   DWORD PTR ds:0x1008258c
10047b08:	push   ebp
10047b09:	push   DWORD PTR ds:0x1007fe38
10047b0f:	call   ebx
10047b11:	pop    edi
10047b12:	pop    ebx
10047b13:	push   DWORD PTR ds:0x1007fe38
10047b19:	call   DWORD PTR ds:0x100661c8
10047b1f:	mov    DWORD PTR ds:0x1007fe38,ebp
10047b25:	pop    ebp
10047b26:	ret    
10047b27:	push   esi
10047b28:	push   edi
10047b29:	xor    esi,esi
10047b2b:	mov    edi,0x1007fe40
10047b30:	cmp    DWORD PTR [esi*8+0x1007e1cc],0x1
10047b38:	jne    0x10047b58
10047b3a:	lea    eax,[esi*8+0x1007e1c8]
10047b41:	mov    DWORD PTR [eax],edi
10047b43:	push   0xfa0
10047b48:	push   DWORD PTR [eax]
10047b4a:	add    edi,0x18
10047b4d:	call   0x1004c59b
10047b52:	test   eax,eax
10047b54:	pop    ecx
10047b55:	pop    ecx
10047b56:	je     0x10047b64
10047b58:	inc    esi
10047b59:	cmp    esi,0x24
10047b5c:	jl     0x10047b30
10047b5e:	xor    eax,eax
10047b60:	inc    eax
10047b61:	pop    edi
10047b62:	pop    esi
10047b63:	ret    
10047b64:	and    DWORD PTR [esi*8+0x1007e1c8],0x0
10047b6c:	xor    eax,eax
10047b6e:	jmp    0x10047b61
10047b70:	push   ebx
10047b71:	mov    ebx,DWORD PTR ds:0x10066138
10047b77:	push   esi
10047b78:	mov    esi,0x1007e1c8
10047b7d:	push   edi
10047b7e:	mov    edi,DWORD PTR [esi]
10047b80:	test   edi,edi
10047b82:	je     0x10047b97
10047b84:	cmp    DWORD PTR [esi+0x4],0x1
10047b88:	je     0x10047b97
10047b8a:	push   edi
10047b8b:	call   ebx
10047b8d:	push   edi
10047b8e:	call   0x10043508
10047b93:	and    DWORD PTR [esi],0x0
10047b96:	pop    ecx
10047b97:	add    esi,0x8
10047b9a:	cmp    esi,0x1007e2e8
10047ba0:	jl     0x10047b7e
10047ba2:	mov    esi,0x1007e1c8
10047ba7:	pop    edi
10047ba8:	mov    eax,DWORD PTR [esi]
10047baa:	test   eax,eax
10047bac:	je     0x10047bb7
10047bae:	cmp    DWORD PTR [esi+0x4],0x1
10047bb2:	jne    0x10047bb7
10047bb4:	push   eax
10047bb5:	call   ebx
10047bb7:	add    esi,0x8
10047bba:	cmp    esi,0x1007e2e8
10047bc0:	jl     0x10047ba8
10047bc2:	pop    esi
10047bc3:	pop    ebx
10047bc4:	ret    
10047bc5:	push   ebp
10047bc6:	mov    ebp,esp
10047bc8:	mov    eax,DWORD PTR [ebp+0x8]
10047bcb:	push   DWORD PTR [eax*8+0x1007e1c8]
10047bd2:	call   DWORD PTR ds:0x100660ec
10047bd8:	pop    ebp
10047bd9:	ret    
10047bda:	push   0xc
10047bdc:	push   0x10074728
10047be1:	call   0x10046c94
10047be6:	xor    edi,edi
10047be8:	inc    edi
10047be9:	mov    DWORD PTR [ebp-0x1c],edi
10047bec:	xor    ebx,ebx
10047bee:	cmp    DWORD PTR ds:0x1007fe38,ebx
10047bf4:	jne    0x10047c0e
10047bf6:	call   0x10049d9a
10047bfb:	push   0x1e
10047bfd:	call   0x10049bfa
10047c02:	push   0xff
10047c07:	call   0x100475e2
10047c0c:	pop    ecx
10047c0d:	pop    ecx
10047c0e:	mov    esi,DWORD PTR [ebp+0x8]
10047c11:	lea    esi,[esi*8+0x1007e1c8]
10047c18:	cmp    DWORD PTR [esi],ebx
10047c1a:	je     0x10047c20
10047c1c:	mov    eax,edi
10047c1e:	jmp    0x10047c8e
10047c20:	push   0x18
10047c22:	call   0x10047422
10047c27:	pop    ecx
10047c28:	mov    edi,eax
10047c2a:	cmp    edi,ebx
10047c2c:	jne    0x10047c3d
10047c2e:	call   0x10046b55
10047c33:	mov    DWORD PTR [eax],0xc
10047c39:	xor    eax,eax
10047c3b:	jmp    0x10047c8e
10047c3d:	push   0xa
10047c3f:	call   0x10047c9d
10047c44:	pop    ecx
10047c45:	mov    DWORD PTR [ebp-0x4],ebx
10047c48:	cmp    DWORD PTR [esi],ebx
10047c4a:	jne    0x10047c78
10047c4c:	push   0xfa0
10047c51:	push   edi
10047c52:	call   0x1004c59b
10047c57:	pop    ecx
10047c58:	pop    ecx
10047c59:	test   eax,eax
10047c5b:	jne    0x10047c74
10047c5d:	push   edi
10047c5e:	call   0x10043508
10047c63:	pop    ecx
10047c64:	call   0x10046b55
10047c69:	mov    DWORD PTR [eax],0xc
10047c6f:	mov    DWORD PTR [ebp-0x1c],ebx
10047c72:	jmp    0x10047c7f
10047c74:	mov    DWORD PTR [esi],edi
10047c76:	jmp    0x10047c7f
10047c78:	push   edi
10047c79:	call   0x10043508
10047c7e:	pop    ecx
10047c7f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047c86:	call   0x10047c94
10047c8b:	mov    eax,DWORD PTR [ebp-0x1c]
10047c8e:	call   0x10046cd9
10047c93:	ret    
10047c94:	push   0xa
10047c96:	call   0x10047bc5
10047c9b:	pop    ecx
10047c9c:	ret    
10047c9d:	push   ebp
10047c9e:	mov    ebp,esp
10047ca0:	mov    eax,DWORD PTR [ebp+0x8]
10047ca3:	push   esi
10047ca4:	lea    esi,[eax*8+0x1007e1c8]
10047cab:	cmp    DWORD PTR [esi],0x0
10047cae:	jne    0x10047cc3
10047cb0:	push   eax
10047cb1:	call   0x10047bda
10047cb6:	test   eax,eax
10047cb8:	pop    ecx
10047cb9:	jne    0x10047cc3
10047cbb:	push   0x11
10047cbd:	call   0x10047598
10047cc2:	pop    ecx
10047cc3:	push   DWORD PTR [esi]
10047cc5:	call   DWORD PTR ds:0x100660f0
10047ccb:	pop    esi
10047ccc:	pop    ebp
10047ccd:	ret    
10047cce:	push   0x140
10047cd3:	push   0x0
10047cd5:	push   DWORD PTR ds:0x1007fe38
10047cdb:	call   DWORD PTR ds:0x1006618c
10047ce1:	test   eax,eax
10047ce3:	mov    ds:0x1008258c,eax
10047ce8:	jne    0x10047ceb
10047cea:	ret    
10047ceb:	mov    ecx,DWORD PTR [esp+0x4]
10047cef:	and    DWORD PTR ds:0x1007ff90,0x0
10047cf6:	and    DWORD PTR ds:0x10082588,0x0
10047cfd:	mov    ds:0x10082594,eax
10047d02:	xor    eax,eax
10047d04:	mov    DWORD PTR ds:0x10082590,ecx
10047d0a:	mov    DWORD PTR ds:0x10082598,0x10
10047d14:	inc    eax
10047d15:	ret    
10047d16:	mov    ecx,DWORD PTR ds:0x10082588
10047d1c:	mov    eax,ds:0x1008258c
10047d21:	imul   ecx,ecx,0x14
10047d24:	add    ecx,eax
10047d26:	jmp    0x10047d3a
10047d28:	mov    edx,DWORD PTR [esp+0x4]
10047d2c:	sub    edx,DWORD PTR [eax+0xc]
10047d2f:	cmp    edx,0x100000
10047d35:	jb     0x10047d40
10047d37:	add    eax,0x14
10047d3a:	cmp    eax,ecx
10047d3c:	jb     0x10047d28
10047d3e:	xor    eax,eax
10047d40:	ret    
10047d41:	push   ebp
10047d42:	mov    ebp,esp
10047d44:	sub    esp,0x10
10047d47:	mov    ecx,DWORD PTR [ebp+0x8]
10047d4a:	mov    eax,DWORD PTR [ecx+0x10]
10047d4d:	push   esi
10047d4e:	mov    esi,DWORD PTR [ebp+0xc]
10047d51:	push   edi
10047d52:	mov    edi,esi
10047d54:	sub    edi,DWORD PTR [ecx+0xc]
10047d57:	add    esi,0xfffffffc
10047d5a:	shr    edi,0xf
10047d5d:	mov    ecx,edi
10047d5f:	imul   ecx,ecx,0x204
10047d65:	lea    ecx,[ecx+eax*1+0x144]
10047d6c:	mov    DWORD PTR [ebp-0x10],ecx
10047d6f:	mov    ecx,DWORD PTR [esi]
10047d71:	dec    ecx
10047d72:	test   cl,0x1
10047d75:	mov    DWORD PTR [ebp-0x4],ecx
10047d78:	jne    0x10048051
10047d7e:	push   ebx
10047d7f:	lea    ebx,[ecx+esi*1]
10047d82:	mov    edx,DWORD PTR [ebx]
10047d84:	mov    DWORD PTR [ebp-0xc],edx
10047d87:	mov    edx,DWORD PTR [esi-0x4]
10047d8a:	mov    DWORD PTR [ebp-0x8],edx
10047d8d:	mov    edx,DWORD PTR [ebp-0xc]
10047d90:	test   dl,0x1
10047d93:	mov    DWORD PTR [ebp+0xc],ebx
10047d96:	jne    0x10047e0c
10047d98:	sar    edx,0x4
10047d9b:	dec    edx
10047d9c:	cmp    edx,0x3f
10047d9f:	jbe    0x10047da4
10047da1:	push   0x3f
10047da3:	pop    edx
10047da4:	mov    ecx,DWORD PTR [ebx+0x4]
10047da7:	cmp    ecx,DWORD PTR [ebx+0x8]
10047daa:	jne    0x10047dee
10047dac:	cmp    edx,0x20
10047daf:	mov    ebx,0x80000000
10047db4:	jae    0x10047dcf
10047db6:	mov    ecx,edx
10047db8:	shr    ebx,cl
10047dba:	lea    ecx,[edx+eax*1+0x4]
10047dbe:	not    ebx
10047dc0:	and    DWORD PTR [eax+edi*4+0x44],ebx
10047dc4:	dec    BYTE PTR [ecx]
10047dc6:	jne    0x10047deb
10047dc8:	mov    ecx,DWORD PTR [ebp+0x8]
10047dcb:	and    DWORD PTR [ecx],ebx
10047dcd:	jmp    0x10047deb
10047dcf:	lea    ecx,[edx-0x20]
10047dd2:	shr    ebx,cl
10047dd4:	lea    ecx,[edx+eax*1+0x4]
10047dd8:	not    ebx
10047dda:	and    DWORD PTR [eax+edi*4+0xc4],ebx
10047de1:	dec    BYTE PTR [ecx]
10047de3:	jne    0x10047deb
10047de5:	mov    ecx,DWORD PTR [ebp+0x8]
10047de8:	and    DWORD PTR [ecx+0x4],ebx
10047deb:	mov    ebx,DWORD PTR [ebp+0xc]
10047dee:	mov    edx,DWORD PTR [ebx+0x8]
10047df1:	mov    ebx,DWORD PTR [ebx+0x4]
10047df4:	mov    ecx,DWORD PTR [ebp-0x4]
10047df7:	add    ecx,DWORD PTR [ebp-0xc]
10047dfa:	mov    DWORD PTR [edx+0x4],ebx
10047dfd:	mov    edx,DWORD PTR [ebp+0xc]
10047e00:	mov    ebx,DWORD PTR [edx+0x4]
10047e03:	mov    edx,DWORD PTR [edx+0x8]
10047e06:	mov    DWORD PTR [ebx+0x8],edx
10047e09:	mov    DWORD PTR [ebp-0x4],ecx
10047e0c:	mov    edx,ecx
10047e0e:	sar    edx,0x4
10047e11:	dec    edx
10047e12:	cmp    edx,0x3f
10047e15:	jbe    0x10047e1a
10047e17:	push   0x3f
10047e19:	pop    edx
10047e1a:	mov    ebx,DWORD PTR [ebp-0x8]
10047e1d:	and    ebx,0x1
10047e20:	mov    DWORD PTR [ebp-0xc],ebx
10047e23:	jne    0x10047eb8
10047e29:	sub    esi,DWORD PTR [ebp-0x8]
10047e2c:	mov    ebx,DWORD PTR [ebp-0x8]
10047e2f:	sar    ebx,0x4
10047e32:	push   0x3f
10047e34:	mov    DWORD PTR [ebp+0xc],esi
10047e37:	dec    ebx
10047e38:	pop    esi
10047e39:	cmp    ebx,esi
10047e3b:	jbe    0x10047e3f
10047e3d:	mov    ebx,esi
10047e3f:	add    ecx,DWORD PTR [ebp-0x8]
10047e42:	mov    edx,ecx
10047e44:	sar    edx,0x4
10047e47:	dec    edx
10047e48:	cmp    edx,esi
10047e4a:	mov    DWORD PTR [ebp-0x4],ecx
10047e4d:	jbe    0x10047e51
10047e4f:	mov    edx,esi
10047e51:	cmp    ebx,edx
10047e53:	je     0x10047eb3
10047e55:	mov    ecx,DWORD PTR [ebp+0xc]
10047e58:	mov    esi,DWORD PTR [ecx+0x4]
10047e5b:	cmp    esi,DWORD PTR [ecx+0x8]
10047e5e:	jne    0x10047e9b
10047e60:	cmp    ebx,0x20
10047e63:	mov    esi,0x80000000
10047e68:	jae    0x10047e81
10047e6a:	mov    ecx,ebx
10047e6c:	shr    esi,cl
10047e6e:	not    esi
10047e70:	and    DWORD PTR [eax+edi*4+0x44],esi
10047e74:	dec    BYTE PTR [ebx+eax*1+0x4]
10047e78:	jne    0x10047e9b
10047e7a:	mov    ecx,DWORD PTR [ebp+0x8]
10047e7d:	and    DWORD PTR [ecx],esi
10047e7f:	jmp    0x10047e9b
10047e81:	lea    ecx,[ebx-0x20]
10047e84:	shr    esi,cl
10047e86:	not    esi
10047e88:	and    DWORD PTR [eax+edi*4+0xc4],esi
10047e8f:	dec    BYTE PTR [ebx+eax*1+0x4]
10047e93:	jne    0x10047e9b
10047e95:	mov    ecx,DWORD PTR [ebp+0x8]
10047e98:	and    DWORD PTR [ecx+0x4],esi
10047e9b:	mov    ecx,DWORD PTR [ebp+0xc]
10047e9e:	mov    esi,DWORD PTR [ecx+0x8]
10047ea1:	mov    ecx,DWORD PTR [ecx+0x4]
10047ea4:	mov    DWORD PTR [esi+0x4],ecx
10047ea7:	mov    ecx,DWORD PTR [ebp+0xc]
10047eaa:	mov    esi,DWORD PTR [ecx+0x4]
10047ead:	mov    ecx,DWORD PTR [ecx+0x8]
10047eb0:	mov    DWORD PTR [esi+0x8],ecx
10047eb3:	mov    esi,DWORD PTR [ebp+0xc]
10047eb6:	jmp    0x10047ebb
10047eb8:	mov    ebx,DWORD PTR [ebp+0x8]
10047ebb:	cmp    DWORD PTR [ebp-0xc],0x0
10047ebf:	jne    0x10047ec9
10047ec1:	cmp    ebx,edx
10047ec3:	je     0x10047f49
10047ec9:	mov    ecx,DWORD PTR [ebp-0x10]
10047ecc:	lea    ecx,[ecx+edx*8]
10047ecf:	mov    ebx,DWORD PTR [ecx+0x4]
10047ed2:	mov    DWORD PTR [esi+0x8],ecx
10047ed5:	mov    DWORD PTR [esi+0x4],ebx
10047ed8:	mov    DWORD PTR [ecx+0x4],esi
10047edb:	mov    ecx,DWORD PTR [esi+0x4]
10047ede:	mov    DWORD PTR [ecx+0x8],esi
10047ee1:	mov    ecx,DWORD PTR [esi+0x4]
10047ee4:	cmp    ecx,DWORD PTR [esi+0x8]
10047ee7:	jne    0x10047f49
10047ee9:	mov    cl,BYTE PTR [edx+eax*1+0x4]
10047eed:	mov    BYTE PTR [ebp+0xf],cl
10047ef0:	inc    cl
10047ef2:	cmp    edx,0x20
10047ef5:	mov    BYTE PTR [edx+eax*1+0x4],cl
10047ef9:	jae    0x10047f20
10047efb:	cmp    BYTE PTR [ebp+0xf],0x0
10047eff:	jne    0x10047f0f
10047f01:	mov    ecx,edx
10047f03:	mov    ebx,0x80000000
10047f08:	shr    ebx,cl
10047f0a:	mov    ecx,DWORD PTR [ebp+0x8]
10047f0d:	or     DWORD PTR [ecx],ebx
10047f0f:	mov    ebx,0x80000000
10047f14:	mov    ecx,edx
10047f16:	shr    ebx,cl
10047f18:	lea    eax,[eax+edi*4+0x44]
10047f1c:	or     DWORD PTR [eax],ebx
10047f1e:	jmp    0x10047f49
10047f20:	cmp    BYTE PTR [ebp+0xf],0x0
10047f24:	jne    0x10047f36
10047f26:	lea    ecx,[edx-0x20]
10047f29:	mov    ebx,0x80000000
10047f2e:	shr    ebx,cl
10047f30:	mov    ecx,DWORD PTR [ebp+0x8]
10047f33:	or     DWORD PTR [ecx+0x4],ebx
10047f36:	lea    ecx,[edx-0x20]
10047f39:	mov    edx,0x80000000
10047f3e:	shr    edx,cl
10047f40:	lea    eax,[eax+edi*4+0xc4]
10047f47:	or     DWORD PTR [eax],edx
10047f49:	mov    eax,DWORD PTR [ebp-0x4]
10047f4c:	mov    DWORD PTR [esi],eax
10047f4e:	mov    DWORD PTR [eax+esi*1-0x4],eax
10047f52:	mov    eax,DWORD PTR [ebp-0x10]
10047f55:	dec    DWORD PTR [eax]
10047f57:	jne    0x10048050
10047f5d:	mov    eax,ds:0x1007ff90
10047f62:	test   eax,eax
10047f64:	je     0x10048042
10047f6a:	mov    ecx,DWORD PTR ds:0x1008259c
10047f70:	mov    esi,DWORD PTR ds:0x100661d0
10047f76:	push   0x4000
10047f7b:	shl    ecx,0xf
10047f7e:	add    ecx,DWORD PTR [eax+0xc]
10047f81:	mov    ebx,0x8000
10047f86:	push   ebx
10047f87:	push   ecx
10047f88:	call   esi
10047f8a:	mov    ecx,DWORD PTR ds:0x1008259c
10047f90:	mov    eax,ds:0x1007ff90
10047f95:	mov    edx,0x80000000
10047f9a:	shr    edx,cl
10047f9c:	or     DWORD PTR [eax+0x8],edx
10047f9f:	mov    eax,ds:0x1007ff90
10047fa4:	mov    eax,DWORD PTR [eax+0x10]
10047fa7:	mov    ecx,DWORD PTR ds:0x1008259c
10047fad:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
10047fb5:	mov    eax,ds:0x1007ff90
10047fba:	mov    eax,DWORD PTR [eax+0x10]
10047fbd:	dec    BYTE PTR [eax+0x43]
10047fc0:	mov    eax,ds:0x1007ff90
10047fc5:	mov    ecx,DWORD PTR [eax+0x10]
10047fc8:	cmp    BYTE PTR [ecx+0x43],0x0
10047fcc:	jne    0x10047fd7
10047fce:	and    DWORD PTR [eax+0x4],0xfffffffe
10047fd2:	mov    eax,ds:0x1007ff90
10047fd7:	cmp    DWORD PTR [eax+0x8],0xffffffff
10047fdb:	jne    0x10048042
10047fdd:	push   ebx
10047fde:	push   0x0
10047fe0:	push   DWORD PTR [eax+0xc]
10047fe3:	call   esi
10047fe5:	mov    eax,ds:0x1007ff90
10047fea:	push   DWORD PTR [eax+0x10]
10047fed:	push   0x0
10047fef:	push   DWORD PTR ds:0x1007fe38
10047ff5:	call   DWORD PTR ds:0x10066188
10047ffb:	mov    ecx,DWORD PTR ds:0x10082588
10048001:	mov    eax,ds:0x1007ff90
10048006:	imul   ecx,ecx,0x14
10048009:	mov    edx,DWORD PTR ds:0x1008258c
1004800f:	sub    ecx,eax
10048011:	lea    ecx,[ecx+edx*1-0x14]
10048015:	push   ecx
10048016:	lea    ecx,[eax+0x14]
10048019:	push   ecx
1004801a:	push   eax
1004801b:	call   0x100456c0
10048020:	mov    eax,DWORD PTR [ebp+0x8]
10048023:	add    esp,0xc
10048026:	dec    DWORD PTR ds:0x10082588
1004802c:	cmp    eax,DWORD PTR ds:0x1007ff90
10048032:	jbe    0x10048038
10048034:	sub    DWORD PTR [ebp+0x8],0x14
10048038:	mov    eax,ds:0x1008258c
1004803d:	mov    ds:0x10082594,eax
10048042:	mov    eax,DWORD PTR [ebp+0x8]
10048045:	mov    ds:0x1007ff90,eax
1004804a:	mov    DWORD PTR ds:0x1008259c,edi
10048050:	pop    ebx
10048051:	pop    edi
10048052:	pop    esi
10048053:	leave  
10048054:	ret    
10048055:	mov    eax,ds:0x10082598
1004805a:	push   esi
1004805b:	mov    esi,DWORD PTR ds:0x10082588
10048061:	push   edi
10048062:	xor    edi,edi
10048064:	cmp    esi,eax
10048066:	jne    0x1004809c
10048068:	add    eax,0x10
1004806b:	imul   eax,eax,0x14
1004806e:	push   eax
1004806f:	push   DWORD PTR ds:0x1008258c
10048075:	push   edi
10048076:	push   DWORD PTR ds:0x1007fe38
1004807c:	call   DWORD PTR ds:0x100661a0
10048082:	cmp    eax,edi
10048084:	jne    0x1004808a
10048086:	xor    eax,eax
10048088:	jmp    0x10048102
1004808a:	add    DWORD PTR ds:0x10082598,0x10
10048091:	mov    esi,DWORD PTR ds:0x10082588
10048097:	mov    ds:0x1008258c,eax
1004809c:	imul   esi,esi,0x14
1004809f:	add    esi,DWORD PTR ds:0x1008258c
100480a5:	push   0x41c4
100480aa:	push   0x8
100480ac:	push   DWORD PTR ds:0x1007fe38
100480b2:	call   DWORD PTR ds:0x1006618c
100480b8:	cmp    eax,edi
100480ba:	mov    DWORD PTR [esi+0x10],eax
100480bd:	je     0x10048086
100480bf:	push   0x4
100480c1:	push   0x2000
100480c6:	push   0x100000
100480cb:	push   edi
100480cc:	call   DWORD PTR ds:0x10066194
100480d2:	cmp    eax,edi
100480d4:	mov    DWORD PTR [esi+0xc],eax
100480d7:	jne    0x100480eb
100480d9:	push   DWORD PTR [esi+0x10]
100480dc:	push   edi
100480dd:	push   DWORD PTR ds:0x1007fe38
100480e3:	call   DWORD PTR ds:0x10066188
100480e9:	jmp    0x10048086
100480eb:	or     DWORD PTR [esi+0x8],0xffffffff
100480ef:	mov    DWORD PTR [esi],edi
100480f1:	mov    DWORD PTR [esi+0x4],edi
100480f4:	inc    DWORD PTR ds:0x10082588
100480fa:	mov    eax,DWORD PTR [esi+0x10]
100480fd:	or     DWORD PTR [eax],0xffffffff
10048100:	mov    eax,esi
10048102:	pop    edi
10048103:	pop    esi
10048104:	ret    
10048105:	push   ebp
10048106:	mov    ebp,esp
10048108:	push   ecx
10048109:	push   ecx
1004810a:	mov    ecx,DWORD PTR [ebp+0x8]
1004810d:	mov    eax,DWORD PTR [ecx+0x8]
10048110:	push   ebx
10048111:	push   esi
10048112:	mov    esi,DWORD PTR [ecx+0x10]
10048115:	push   edi
10048116:	xor    ebx,ebx
10048118:	jmp    0x1004811d
1004811a:	add    eax,eax
1004811c:	inc    ebx
1004811d:	test   eax,eax
1004811f:	jge    0x1004811a
10048121:	mov    eax,ebx
10048123:	imul   eax,eax,0x204
10048129:	lea    eax,[eax+esi*1+0x144]
10048130:	push   0x3f
10048132:	mov    DWORD PTR [ebp-0x8],eax
10048135:	pop    edx
10048136:	mov    DWORD PTR [eax+0x8],eax
10048139:	mov    DWORD PTR [eax+0x4],eax
1004813c:	add    eax,0x8
1004813f:	dec    edx
10048140:	jne    0x10048136
10048142:	push   0x4
10048144:	mov    edi,ebx
10048146:	push   0x1000
1004814b:	shl    edi,0xf
1004814e:	add    edi,DWORD PTR [ecx+0xc]
10048151:	push   0x8000
10048156:	push   edi
10048157:	call   DWORD PTR ds:0x10066194
1004815d:	test   eax,eax
1004815f:	jne    0x10048169
10048161:	or     eax,0xffffffff
10048164:	jmp    0x10048206
10048169:	lea    edx,[edi+0x7000]
1004816f:	cmp    edi,edx
10048171:	mov    DWORD PTR [ebp-0x4],edx
10048174:	ja     0x100481b9
10048176:	mov    ecx,edx
10048178:	sub    ecx,edi
1004817a:	shr    ecx,0xc
1004817d:	lea    eax,[edi+0x10]
10048180:	inc    ecx
10048181:	or     DWORD PTR [eax-0x8],0xffffffff
10048185:	or     DWORD PTR [eax+0xfec],0xffffffff
1004818c:	lea    edx,[eax+0xffc]
10048192:	mov    DWORD PTR [eax],edx
10048194:	lea    edx,[eax-0x1004]
1004819a:	mov    DWORD PTR [eax-0x4],0xff0
100481a1:	mov    DWORD PTR [eax+0x4],edx
100481a4:	mov    DWORD PTR [eax+0xfe8],0xff0
100481ae:	add    eax,0x1000
100481b3:	dec    ecx
100481b4:	jne    0x10048181
100481b6:	mov    edx,DWORD PTR [ebp-0x4]
100481b9:	mov    eax,DWORD PTR [ebp-0x8]
100481bc:	add    eax,0x1f8
100481c1:	lea    ecx,[edi+0xc]
100481c4:	mov    DWORD PTR [eax+0x4],ecx
100481c7:	mov    DWORD PTR [ecx+0x8],eax
100481ca:	lea    ecx,[edx+0xc]
100481cd:	mov    DWORD PTR [eax+0x8],ecx
100481d0:	mov    DWORD PTR [ecx+0x4],eax
100481d3:	and    DWORD PTR [esi+ebx*4+0x44],0x0
100481d8:	xor    edi,edi
100481da:	inc    edi
100481db:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
100481e2:	mov    al,BYTE PTR [esi+0x43]
100481e5:	mov    cl,al
100481e7:	inc    cl
100481e9:	test   al,al
100481eb:	mov    eax,DWORD PTR [ebp+0x8]
100481ee:	mov    BYTE PTR [esi+0x43],cl
100481f1:	jne    0x100481f6
100481f3:	or     DWORD PTR [eax+0x4],edi
100481f6:	mov    edx,0x80000000
100481fb:	mov    ecx,ebx
100481fd:	shr    edx,cl
100481ff:	not    edx
10048201:	and    DWORD PTR [eax+0x8],edx
10048204:	mov    eax,ebx
10048206:	pop    edi
10048207:	pop    esi
10048208:	pop    ebx
10048209:	leave  
1004820a:	ret    
1004820b:	push   ebp
1004820c:	mov    ebp,esp
1004820e:	sub    esp,0xc
10048211:	mov    ecx,DWORD PTR [ebp+0x8]
10048214:	mov    eax,DWORD PTR [ecx+0x10]
10048217:	push   ebx
10048218:	push   esi
10048219:	mov    esi,DWORD PTR [ebp+0x10]
1004821c:	push   edi
1004821d:	mov    edi,DWORD PTR [ebp+0xc]
10048220:	mov    edx,edi
10048222:	sub    edx,DWORD PTR [ecx+0xc]
10048225:	add    esi,0x17
10048228:	shr    edx,0xf
1004822b:	mov    ecx,edx
1004822d:	imul   ecx,ecx,0x204
10048233:	lea    ecx,[ecx+eax*1+0x144]
1004823a:	mov    DWORD PTR [ebp-0xc],ecx
1004823d:	mov    ecx,DWORD PTR [edi-0x4]
10048240:	and    esi,0xfffffff0
10048243:	dec    ecx
10048244:	cmp    esi,ecx
10048246:	lea    edi,[ecx+edi*1-0x4]
1004824a:	mov    ebx,DWORD PTR [edi]
1004824c:	mov    DWORD PTR [ebp+0x10],ecx
1004824f:	mov    DWORD PTR [ebp-0x4],ebx
10048252:	jle    0x100483ad
10048258:	test   bl,0x1
1004825b:	jne    0x100483a6
10048261:	add    ebx,ecx
10048263:	cmp    esi,ebx
10048265:	jg     0x100483a6
1004826b:	mov    ecx,DWORD PTR [ebp-0x4]
1004826e:	sar    ecx,0x4
10048271:	dec    ecx
10048272:	cmp    ecx,0x3f
10048275:	mov    DWORD PTR [ebp-0x8],ecx
10048278:	jbe    0x10048280
1004827a:	push   0x3f
1004827c:	pop    ecx
1004827d:	mov    DWORD PTR [ebp-0x8],ecx
10048280:	mov    ebx,DWORD PTR [edi+0x4]
10048283:	cmp    ebx,DWORD PTR [edi+0x8]
10048286:	jne    0x100482cb
10048288:	cmp    ecx,0x20
1004828b:	mov    ebx,0x80000000
10048290:	jae    0x100482ac
10048292:	shr    ebx,cl
10048294:	mov    ecx,DWORD PTR [ebp-0x8]
10048297:	lea    ecx,[ecx+eax*1+0x4]
1004829b:	not    ebx
1004829d:	and    DWORD PTR [eax+edx*4+0x44],ebx
100482a1:	dec    BYTE PTR [ecx]
100482a3:	jne    0x100482cb
100482a5:	mov    ecx,DWORD PTR [ebp+0x8]
100482a8:	and    DWORD PTR [ecx],ebx
100482aa:	jmp    0x100482cb
100482ac:	add    ecx,0xffffffe0
100482af:	shr    ebx,cl
100482b1:	mov    ecx,DWORD PTR [ebp-0x8]
100482b4:	lea    ecx,[ecx+eax*1+0x4]
100482b8:	not    ebx
100482ba:	and    DWORD PTR [eax+edx*4+0xc4],ebx
100482c1:	dec    BYTE PTR [ecx]
100482c3:	jne    0x100482cb
100482c5:	mov    ecx,DWORD PTR [ebp+0x8]
100482c8:	and    DWORD PTR [ecx+0x4],ebx
100482cb:	mov    ecx,DWORD PTR [edi+0x8]
100482ce:	mov    ebx,DWORD PTR [edi+0x4]
100482d1:	mov    DWORD PTR [ecx+0x4],ebx
100482d4:	mov    ecx,DWORD PTR [edi+0x4]
100482d7:	mov    edi,DWORD PTR [edi+0x8]
100482da:	mov    DWORD PTR [ecx+0x8],edi
100482dd:	mov    ecx,DWORD PTR [ebp+0x10]
100482e0:	sub    ecx,esi
100482e2:	add    DWORD PTR [ebp-0x4],ecx
100482e5:	cmp    DWORD PTR [ebp-0x4],0x0
100482e9:	jle    0x10048394
100482ef:	mov    edi,DWORD PTR [ebp-0x4]
100482f2:	mov    ecx,DWORD PTR [ebp+0xc]
100482f5:	sar    edi,0x4
100482f8:	dec    edi
100482f9:	cmp    edi,0x3f
100482fc:	lea    ecx,[ecx+esi*1-0x4]
10048300:	jbe    0x10048305
10048302:	push   0x3f
10048304:	pop    edi
10048305:	mov    ebx,DWORD PTR [ebp-0xc]
10048308:	lea    ebx,[ebx+edi*8]
1004830b:	mov    DWORD PTR [ebp+0x10],ebx
1004830e:	mov    ebx,DWORD PTR [ebx+0x4]
10048311:	mov    DWORD PTR [ecx+0x4],ebx
10048314:	mov    ebx,DWORD PTR [ebp+0x10]
10048317:	mov    DWORD PTR [ecx+0x8],ebx
1004831a:	mov    DWORD PTR [ebx+0x4],ecx
1004831d:	mov    ebx,DWORD PTR [ecx+0x4]
10048320:	mov    DWORD PTR [ebx+0x8],ecx
10048323:	mov    ebx,DWORD PTR [ecx+0x4]
10048326:	cmp    ebx,DWORD PTR [ecx+0x8]
10048329:	jne    0x10048382
1004832b:	mov    cl,BYTE PTR [edi+eax*1+0x4]
1004832f:	mov    BYTE PTR [ebp+0x13],cl
10048332:	inc    cl
10048334:	cmp    edi,0x20
10048337:	mov    BYTE PTR [edi+eax*1+0x4],cl
1004833b:	jae    0x10048359
1004833d:	cmp    BYTE PTR [ebp+0x13],0x0
10048341:	jne    0x10048351
10048343:	mov    ecx,edi
10048345:	mov    ebx,0x80000000
1004834a:	shr    ebx,cl
1004834c:	mov    ecx,DWORD PTR [ebp+0x8]
1004834f:	or     DWORD PTR [ecx],ebx
10048351:	lea    eax,[eax+edx*4+0x44]
10048355:	mov    ecx,edi
10048357:	jmp    0x10048379
10048359:	cmp    BYTE PTR [ebp+0x13],0x0
1004835d:	jne    0x1004836f
1004835f:	lea    ecx,[edi-0x20]
10048362:	mov    ebx,0x80000000
10048367:	shr    ebx,cl
10048369:	mov    ecx,DWORD PTR [ebp+0x8]
1004836c:	or     DWORD PTR [ecx+0x4],ebx
1004836f:	lea    eax,[eax+edx*4+0xc4]
10048376:	lea    ecx,[edi-0x20]
10048379:	mov    edx,0x80000000
1004837e:	shr    edx,cl
10048380:	or     DWORD PTR [eax],edx
10048382:	mov    edx,DWORD PTR [ebp+0xc]
10048385:	mov    ecx,DWORD PTR [ebp-0x4]
10048388:	lea    eax,[edx+esi*1-0x4]
1004838c:	mov    DWORD PTR [eax],ecx
1004838e:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
10048392:	jmp    0x10048397
10048394:	mov    edx,DWORD PTR [ebp+0xc]
10048397:	lea    eax,[esi+0x1]
1004839a:	mov    DWORD PTR [edx-0x4],eax
1004839d:	mov    DWORD PTR [edx+esi*1-0x8],eax
100483a1:	jmp    0x100484e2
100483a6:	xor    eax,eax
100483a8:	jmp    0x100484e5
100483ad:	jge    0x100484e2
100483b3:	mov    ebx,DWORD PTR [ebp+0xc]
100483b6:	sub    DWORD PTR [ebp+0x10],esi
100483b9:	lea    ecx,[esi+0x1]
100483bc:	mov    DWORD PTR [ebx-0x4],ecx
100483bf:	lea    ebx,[ebx+esi*1-0x4]
100483c3:	mov    esi,DWORD PTR [ebp+0x10]
100483c6:	sar    esi,0x4
100483c9:	dec    esi
100483ca:	cmp    esi,0x3f
100483cd:	mov    DWORD PTR [ebp+0xc],ebx
100483d0:	mov    DWORD PTR [ebx-0x4],ecx
100483d3:	jbe    0x100483d8
100483d5:	push   0x3f
100483d7:	pop    esi
100483d8:	test   BYTE PTR [ebp-0x4],0x1
100483dc:	jne    0x10048462
100483e2:	mov    esi,DWORD PTR [ebp-0x4]
100483e5:	sar    esi,0x4
100483e8:	dec    esi
100483e9:	cmp    esi,0x3f
100483ec:	jbe    0x100483f1
100483ee:	push   0x3f
100483f0:	pop    esi
100483f1:	mov    ecx,DWORD PTR [edi+0x4]
100483f4:	cmp    ecx,DWORD PTR [edi+0x8]
100483f7:	jne    0x1004843b
100483f9:	cmp    esi,0x20
100483fc:	mov    ebx,0x80000000
10048401:	jae    0x1004841c
10048403:	mov    ecx,esi
10048405:	shr    ebx,cl
10048407:	lea    esi,[esi+eax*1+0x4]
1004840b:	not    ebx
1004840d:	and    DWORD PTR [eax+edx*4+0x44],ebx
10048411:	dec    BYTE PTR [esi]
10048413:	jne    0x10048438
10048415:	mov    ecx,DWORD PTR [ebp+0x8]
10048418:	and    DWORD PTR [ecx],ebx
1004841a:	jmp    0x10048438
1004841c:	lea    ecx,[esi-0x20]
1004841f:	shr    ebx,cl
10048421:	lea    ecx,[esi+eax*1+0x4]
10048425:	not    ebx
10048427:	and    DWORD PTR [eax+edx*4+0xc4],ebx
1004842e:	dec    BYTE PTR [ecx]
10048430:	jne    0x10048438
10048432:	mov    ecx,DWORD PTR [ebp+0x8]
10048435:	and    DWORD PTR [ecx+0x4],ebx
10048438:	mov    ebx,DWORD PTR [ebp+0xc]
1004843b:	mov    ecx,DWORD PTR [edi+0x8]
1004843e:	mov    esi,DWORD PTR [edi+0x4]
10048441:	mov    DWORD PTR [ecx+0x4],esi
10048444:	mov    esi,DWORD PTR [edi+0x8]
10048447:	mov    ecx,DWORD PTR [edi+0x4]
1004844a:	mov    DWORD PTR [ecx+0x8],esi
1004844d:	mov    esi,DWORD PTR [ebp+0x10]
10048450:	add    esi,DWORD PTR [ebp-0x4]
10048453:	mov    DWORD PTR [ebp+0x10],esi
10048456:	sar    esi,0x4
10048459:	dec    esi
1004845a:	cmp    esi,0x3f
1004845d:	jbe    0x10048462
1004845f:	push   0x3f
10048461:	pop    esi
10048462:	mov    ecx,DWORD PTR [ebp-0xc]
10048465:	lea    ecx,[ecx+esi*8]
10048468:	mov    edi,DWORD PTR [ecx+0x4]
1004846b:	mov    DWORD PTR [ebx+0x8],ecx
1004846e:	mov    DWORD PTR [ebx+0x4],edi
10048471:	mov    DWORD PTR [ecx+0x4],ebx
10048474:	mov    ecx,DWORD PTR [ebx+0x4]
10048477:	mov    DWORD PTR [ecx+0x8],ebx
1004847a:	mov    ecx,DWORD PTR [ebx+0x4]
1004847d:	cmp    ecx,DWORD PTR [ebx+0x8]
10048480:	jne    0x100484d9
10048482:	mov    cl,BYTE PTR [esi+eax*1+0x4]
10048486:	mov    BYTE PTR [ebp+0xf],cl
10048489:	inc    cl
1004848b:	cmp    esi,0x20
1004848e:	mov    BYTE PTR [esi+eax*1+0x4],cl
10048492:	jae    0x100484b0
10048494:	cmp    BYTE PTR [ebp+0xf],0x0
10048498:	jne    0x100484a8
1004849a:	mov    ecx,esi
1004849c:	mov    edi,0x80000000
100484a1:	shr    edi,cl
100484a3:	mov    ecx,DWORD PTR [ebp+0x8]
100484a6:	or     DWORD PTR [ecx],edi
100484a8:	lea    eax,[eax+edx*4+0x44]
100484ac:	mov    ecx,esi
100484ae:	jmp    0x100484d0
100484b0:	cmp    BYTE PTR [ebp+0xf],0x0
100484b4:	jne    0x100484c6
100484b6:	lea    ecx,[esi-0x20]
100484b9:	mov    edi,0x80000000
100484be:	shr    edi,cl
100484c0:	mov    ecx,DWORD PTR [ebp+0x8]
100484c3:	or     DWORD PTR [ecx+0x4],edi
100484c6:	lea    eax,[eax+edx*4+0xc4]
100484cd:	lea    ecx,[esi-0x20]
100484d0:	mov    edx,0x80000000
100484d5:	shr    edx,cl
100484d7:	or     DWORD PTR [eax],edx
100484d9:	mov    eax,DWORD PTR [ebp+0x10]
100484dc:	mov    DWORD PTR [ebx],eax
100484de:	mov    DWORD PTR [eax+ebx*1-0x4],eax
100484e2:	xor    eax,eax
100484e4:	inc    eax
100484e5:	pop    edi
100484e6:	pop    esi
100484e7:	pop    ebx
100484e8:	leave  
100484e9:	ret    
100484ea:	push   ebp
100484eb:	mov    ebp,esp
100484ed:	sub    esp,0x14
100484f0:	mov    eax,ds:0x10082588
100484f5:	mov    ecx,DWORD PTR [ebp+0x8]
100484f8:	imul   eax,eax,0x14
100484fb:	add    eax,DWORD PTR ds:0x1008258c
10048501:	add    ecx,0x17
10048504:	and    ecx,0xfffffff0
10048507:	mov    DWORD PTR [ebp-0x10],ecx
1004850a:	sar    ecx,0x4
1004850d:	push   ebx
1004850e:	dec    ecx
1004850f:	cmp    ecx,0x20
10048512:	push   esi
10048513:	push   edi
10048514:	jge    0x10048521
10048516:	or     esi,0xffffffff
10048519:	shr    esi,cl
1004851b:	or     DWORD PTR [ebp-0x8],0xffffffff
1004851f:	jmp    0x1004852e
10048521:	add    ecx,0xffffffe0
10048524:	or     edx,0xffffffff
10048527:	xor    esi,esi
10048529:	shr    edx,cl
1004852b:	mov    DWORD PTR [ebp-0x8],edx
1004852e:	mov    ecx,DWORD PTR ds:0x10082594
10048534:	mov    ebx,ecx
10048536:	jmp    0x10048549
10048538:	mov    edx,DWORD PTR [ebx+0x4]
1004853b:	mov    edi,DWORD PTR [ebx]
1004853d:	and    edx,DWORD PTR [ebp-0x8]
10048540:	and    edi,esi
10048542:	or     edx,edi
10048544:	jne    0x10048550
10048546:	add    ebx,0x14
10048549:	cmp    ebx,eax
1004854b:	mov    DWORD PTR [ebp+0x8],ebx
1004854e:	jb     0x10048538
10048550:	cmp    ebx,eax
10048552:	jne    0x100485d3
10048554:	mov    ebx,DWORD PTR ds:0x1008258c
1004855a:	jmp    0x1004856d
1004855c:	mov    edx,DWORD PTR [ebx+0x4]
1004855f:	mov    edi,DWORD PTR [ebx]
10048561:	and    edx,DWORD PTR [ebp-0x8]
10048564:	and    edi,esi
10048566:	or     edx,edi
10048568:	jne    0x10048574
1004856a:	add    ebx,0x14
1004856d:	cmp    ebx,ecx
1004856f:	mov    DWORD PTR [ebp+0x8],ebx
10048572:	jb     0x1004855c
10048574:	cmp    ebx,ecx
10048576:	jne    0x100485d3
10048578:	jmp    0x10048586
1004857a:	cmp    DWORD PTR [ebx+0x8],0x0
1004857e:	jne    0x1004858a
10048580:	add    ebx,0x14
10048583:	mov    DWORD PTR [ebp+0x8],ebx
10048586:	cmp    ebx,eax
10048588:	jb     0x1004857a
1004858a:	cmp    ebx,eax
1004858c:	jne    0x100485bf
1004858e:	mov    ebx,DWORD PTR ds:0x1008258c
10048594:	jmp    0x1004859f
10048596:	cmp    DWORD PTR [ebx+0x8],0x0
1004859a:	jne    0x100485a6
1004859c:	add    ebx,0x14
1004859f:	cmp    ebx,ecx
100485a1:	mov    DWORD PTR [ebp+0x8],ebx
100485a4:	jb     0x10048596
100485a6:	cmp    ebx,ecx
100485a8:	jne    0x100485bf
100485aa:	call   0x10048055
100485af:	mov    ebx,eax
100485b1:	test   ebx,ebx
100485b3:	mov    DWORD PTR [ebp+0x8],ebx
100485b6:	jne    0x100485bf
100485b8:	xor    eax,eax
100485ba:	jmp    0x100487c8
100485bf:	push   ebx
100485c0:	call   0x10048105
100485c5:	pop    ecx
100485c6:	mov    ecx,DWORD PTR [ebx+0x10]
100485c9:	mov    DWORD PTR [ecx],eax
100485cb:	mov    eax,DWORD PTR [ebx+0x10]
100485ce:	cmp    DWORD PTR [eax],0xffffffff
100485d1:	je     0x100485b8
100485d3:	mov    DWORD PTR ds:0x10082594,ebx
100485d9:	mov    eax,DWORD PTR [ebx+0x10]
100485dc:	mov    edx,DWORD PTR [eax]
100485de:	cmp    edx,0xffffffff
100485e1:	mov    DWORD PTR [ebp-0x4],edx
100485e4:	je     0x100485fa
100485e6:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
100485ed:	mov    edi,DWORD PTR [eax+edx*4+0x44]
100485f1:	and    ecx,DWORD PTR [ebp-0x8]
100485f4:	and    edi,esi
100485f6:	or     ecx,edi
100485f8:	jne    0x10048623
100485fa:	and    DWORD PTR [ebp-0x4],0x0
100485fe:	mov    edx,DWORD PTR [eax+0xc4]
10048604:	lea    ecx,[eax+0x44]
10048607:	mov    edi,DWORD PTR [ecx]
10048609:	and    edx,DWORD PTR [ebp-0x8]
1004860c:	and    edi,esi
1004860e:	or     edx,edi
10048610:	jne    0x10048620
10048612:	inc    DWORD PTR [ebp-0x4]
10048615:	mov    edx,DWORD PTR [ecx+0x84]
1004861b:	add    ecx,0x4
1004861e:	jmp    0x10048607
10048620:	mov    edx,DWORD PTR [ebp-0x4]
10048623:	mov    ecx,edx
10048625:	imul   ecx,ecx,0x204
1004862b:	lea    ecx,[ecx+eax*1+0x144]
10048632:	mov    DWORD PTR [ebp-0xc],ecx
10048635:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
10048639:	xor    edi,edi
1004863b:	and    ecx,esi
1004863d:	jne    0x10048651
1004863f:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
10048646:	and    ecx,DWORD PTR [ebp-0x8]
10048649:	push   0x20
1004864b:	pop    edi
1004864c:	jmp    0x10048651
1004864e:	add    ecx,ecx
10048650:	inc    edi
10048651:	test   ecx,ecx
10048653:	jge    0x1004864e
10048655:	mov    ecx,DWORD PTR [ebp-0xc]
10048658:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
1004865c:	mov    ecx,DWORD PTR [edx]
1004865e:	sub    ecx,DWORD PTR [ebp-0x10]
10048661:	mov    esi,ecx
10048663:	sar    esi,0x4
10048666:	dec    esi
10048667:	cmp    esi,0x3f
1004866a:	mov    DWORD PTR [ebp-0x8],ecx
1004866d:	jle    0x10048672
1004866f:	push   0x3f
10048671:	pop    esi
10048672:	cmp    esi,edi
10048674:	je     0x1004877b
1004867a:	mov    ecx,DWORD PTR [edx+0x4]
1004867d:	cmp    ecx,DWORD PTR [edx+0x8]
10048680:	jne    0x100486de
10048682:	cmp    edi,0x20
10048685:	mov    ebx,0x80000000
1004868a:	jge    0x100486b2
1004868c:	mov    ecx,edi
1004868e:	shr    ebx,cl
10048690:	mov    ecx,DWORD PTR [ebp-0x4]
10048693:	lea    edi,[eax+edi*1+0x4]
10048697:	not    ebx
10048699:	mov    DWORD PTR [ebp-0x14],ebx
1004869c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
100486a0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
100486a4:	dec    BYTE PTR [edi]
100486a6:	jne    0x100486db
100486a8:	mov    ecx,DWORD PTR [ebp-0x14]
100486ab:	mov    ebx,DWORD PTR [ebp+0x8]
100486ae:	and    DWORD PTR [ebx],ecx
100486b0:	jmp    0x100486de
100486b2:	lea    ecx,[edi-0x20]
100486b5:	shr    ebx,cl
100486b7:	mov    ecx,DWORD PTR [ebp-0x4]
100486ba:	lea    ecx,[eax+ecx*4+0xc4]
100486c1:	lea    edi,[eax+edi*1+0x4]
100486c5:	not    ebx
100486c7:	and    DWORD PTR [ecx],ebx
100486c9:	dec    BYTE PTR [edi]
100486cb:	mov    DWORD PTR [ebp-0x14],ebx
100486ce:	jne    0x100486db
100486d0:	mov    ebx,DWORD PTR [ebp+0x8]
100486d3:	mov    ecx,DWORD PTR [ebp-0x14]
100486d6:	and    DWORD PTR [ebx+0x4],ecx
100486d9:	jmp    0x100486de
100486db:	mov    ebx,DWORD PTR [ebp+0x8]
100486de:	cmp    DWORD PTR [ebp-0x8],0x0
100486e2:	mov    ecx,DWORD PTR [edx+0x8]
100486e5:	mov    edi,DWORD PTR [edx+0x4]
100486e8:	mov    DWORD PTR [ecx+0x4],edi
100486eb:	mov    ecx,DWORD PTR [edx+0x4]
100486ee:	mov    edi,DWORD PTR [edx+0x8]
100486f1:	mov    DWORD PTR [ecx+0x8],edi
100486f4:	je     0x10048787
100486fa:	mov    ecx,DWORD PTR [ebp-0xc]
100486fd:	lea    ecx,[ecx+esi*8]
10048700:	mov    edi,DWORD PTR [ecx+0x4]
10048703:	mov    DWORD PTR [edx+0x8],ecx
10048706:	mov    DWORD PTR [edx+0x4],edi
10048709:	mov    DWORD PTR [ecx+0x4],edx
1004870c:	mov    ecx,DWORD PTR [edx+0x4]
1004870f:	mov    DWORD PTR [ecx+0x8],edx
10048712:	mov    ecx,DWORD PTR [edx+0x4]
10048715:	cmp    ecx,DWORD PTR [edx+0x8]
10048718:	jne    0x10048778
1004871a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
1004871e:	mov    BYTE PTR [ebp+0xb],cl
10048721:	inc    cl
10048723:	cmp    esi,0x20
10048726:	mov    BYTE PTR [esi+eax*1+0x4],cl
1004872a:	jge    0x1004874f
1004872c:	cmp    BYTE PTR [ebp+0xb],0x0
10048730:	jne    0x1004873d
10048732:	mov    edi,0x80000000
10048737:	mov    ecx,esi
10048739:	shr    edi,cl
1004873b:	or     DWORD PTR [ebx],edi
1004873d:	mov    ecx,esi
1004873f:	mov    edi,0x80000000
10048744:	shr    edi,cl
10048746:	mov    ecx,DWORD PTR [ebp-0x4]
10048749:	or     DWORD PTR [eax+ecx*4+0x44],edi
1004874d:	jmp    0x10048778
1004874f:	cmp    BYTE PTR [ebp+0xb],0x0
10048753:	jne    0x10048762
10048755:	lea    ecx,[esi-0x20]
10048758:	mov    edi,0x80000000
1004875d:	shr    edi,cl
1004875f:	or     DWORD PTR [ebx+0x4],edi
10048762:	mov    ecx,DWORD PTR [ebp-0x4]
10048765:	lea    edi,[eax+ecx*4+0xc4]
1004876c:	lea    ecx,[esi-0x20]
1004876f:	mov    esi,0x80000000
10048774:	shr    esi,cl
10048776:	or     DWORD PTR [edi],esi
10048778:	mov    ecx,DWORD PTR [ebp-0x8]
1004877b:	test   ecx,ecx
1004877d:	je     0x1004878a
1004877f:	mov    DWORD PTR [edx],ecx
10048781:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
10048785:	jmp    0x1004878a
10048787:	mov    ecx,DWORD PTR [ebp-0x8]
1004878a:	mov    esi,DWORD PTR [ebp-0x10]
1004878d:	add    edx,ecx
1004878f:	lea    ecx,[esi+0x1]
10048792:	mov    DWORD PTR [edx],ecx
10048794:	mov    DWORD PTR [edx+esi*1-0x4],ecx
10048798:	mov    esi,DWORD PTR [ebp-0xc]
1004879b:	mov    ecx,DWORD PTR [esi]
1004879d:	test   ecx,ecx
1004879f:	lea    edi,[ecx+0x1]
100487a2:	mov    DWORD PTR [esi],edi
100487a4:	jne    0x100487c0
100487a6:	cmp    ebx,DWORD PTR ds:0x1007ff90
100487ac:	jne    0x100487c0
100487ae:	mov    ecx,DWORD PTR [ebp-0x4]
100487b1:	cmp    ecx,DWORD PTR ds:0x1008259c
100487b7:	jne    0x100487c0
100487b9:	and    DWORD PTR ds:0x1007ff90,0x0
100487c0:	mov    ecx,DWORD PTR [ebp-0x4]
100487c3:	mov    DWORD PTR [eax],ecx
100487c5:	lea    eax,[edx+0x4]
100487c8:	pop    edi
100487c9:	pop    esi
100487ca:	pop    ebx
100487cb:	leave  
100487cc:	ret    
100487cd:	push   ebp
100487ce:	mov    ebp,esp
100487d0:	push   ecx
100487d1:	push   esi
100487d2:	mov    esi,DWORD PTR [ebp+0xc]
100487d5:	push   esi
100487d6:	call   0x1004d16c
100487db:	mov    DWORD PTR [ebp+0xc],eax
100487de:	mov    eax,DWORD PTR [esi+0xc]
100487e1:	test   al,0x82
100487e3:	pop    ecx
100487e4:	jne    0x100487fd
100487e6:	call   0x10046b55
100487eb:	mov    DWORD PTR [eax],0x9
100487f1:	or     DWORD PTR [esi+0xc],0x20
100487f5:	or     eax,0xffffffff
100487f8:	jmp    0x1004892a
100487fd:	test   al,0x40
100487ff:	je     0x1004880e
10048801:	call   0x10046b55
10048806:	mov    DWORD PTR [eax],0x22
1004880c:	jmp    0x100487f1
1004880e:	push   ebx
1004880f:	xor    ebx,ebx
10048811:	test   al,0x1
10048813:	je     0x1004882b
10048815:	test   al,0x10
10048817:	mov    DWORD PTR [esi+0x4],ebx
1004881a:	je     0x100488a5
10048820:	mov    ecx,DWORD PTR [esi+0x8]
10048823:	and    eax,0xfffffffe
10048826:	mov    DWORD PTR [esi],ecx
10048828:	mov    DWORD PTR [esi+0xc],eax
1004882b:	mov    eax,DWORD PTR [esi+0xc]
1004882e:	and    eax,0xffffffef
10048831:	or     eax,0x2
10048834:	test   ax,0x10c
10048838:	mov    DWORD PTR [esi+0xc],eax
1004883b:	mov    DWORD PTR [esi+0x4],ebx
1004883e:	mov    DWORD PTR [ebp-0x4],ebx
10048841:	jne    0x1004886f
10048843:	call   0x1004cff1
10048848:	add    eax,0x20
1004884b:	cmp    esi,eax
1004884d:	je     0x1004885b
1004884f:	call   0x1004cff1
10048854:	add    eax,0x40
10048857:	cmp    esi,eax
10048859:	jne    0x10048868
1004885b:	push   DWORD PTR [ebp+0xc]
1004885e:	call   0x1004cf93
10048863:	test   eax,eax
10048865:	pop    ecx
10048866:	jne    0x1004886f
10048868:	push   esi
10048869:	call   0x1004cf4f
1004886e:	pop    ecx
1004886f:	test   WORD PTR [esi+0xc],0x108
10048875:	push   edi
10048876:	je     0x100488fc
1004887c:	mov    eax,DWORD PTR [esi+0x8]
1004887f:	mov    edi,DWORD PTR [esi]
10048881:	lea    ecx,[eax+0x1]
10048884:	mov    DWORD PTR [esi],ecx
10048886:	mov    ecx,DWORD PTR [esi+0x18]
10048889:	sub    edi,eax
1004888b:	dec    ecx
1004888c:	cmp    edi,ebx
1004888e:	mov    DWORD PTR [esi+0x4],ecx
10048891:	jle    0x100488b0
10048893:	push   edi
10048894:	push   eax
10048895:	push   DWORD PTR [ebp+0xc]
10048898:	call   0x1004ce73
1004889d:	add    esp,0xc
100488a0:	mov    DWORD PTR [ebp-0x4],eax
100488a3:	jmp    0x100488f2
100488a5:	or     eax,0x20
100488a8:	mov    DWORD PTR [esi+0xc],eax
100488ab:	or     eax,0xffffffff
100488ae:	jmp    0x10048929
100488b0:	mov    ecx,DWORD PTR [ebp+0xc]
100488b3:	cmp    ecx,0xffffffff
100488b6:	je     0x100488d3
100488b8:	cmp    ecx,0xfffffffe
100488bb:	je     0x100488d3
100488bd:	mov    eax,ecx
100488bf:	and    eax,0x1f
100488c2:	imul   eax,eax,0x28
100488c5:	mov    edx,ecx
100488c7:	sar    edx,0x5
100488ca:	add    eax,DWORD PTR [edx*4+0x10082480]
100488d1:	jmp    0x100488d8
100488d3:	mov    eax,0x1007e9d0
100488d8:	test   BYTE PTR [eax+0x4],0x20
100488dc:	je     0x100488f2
100488de:	push   0x2
100488e0:	push   ebx
100488e1:	push   ebx
100488e2:	push   ecx
100488e3:	call   0x1004c794
100488e8:	and    eax,edx
100488ea:	add    esp,0x10
100488ed:	cmp    eax,0xffffffff
100488f0:	je     0x10048917
100488f2:	mov    eax,DWORD PTR [esi+0x8]
100488f5:	mov    cl,BYTE PTR [ebp+0x8]
100488f8:	mov    BYTE PTR [eax],cl
100488fa:	jmp    0x10048912
100488fc:	xor    edi,edi
100488fe:	inc    edi
100488ff:	push   edi
10048900:	lea    eax,[ebp+0x8]
10048903:	push   eax
10048904:	push   DWORD PTR [ebp+0xc]
10048907:	call   0x1004ce73
1004890c:	add    esp,0xc
1004890f:	mov    DWORD PTR [ebp-0x4],eax
10048912:	cmp    DWORD PTR [ebp-0x4],edi
10048915:	je     0x10048920
10048917:	or     DWORD PTR [esi+0xc],0x20
1004891b:	or     eax,0xffffffff
1004891e:	jmp    0x10048928
10048920:	mov    eax,DWORD PTR [ebp+0x8]
10048923:	and    eax,0xff
10048928:	pop    edi
10048929:	pop    ebx
1004892a:	pop    esi
1004892b:	leave  
1004892c:	ret    
1004892d:	test   BYTE PTR [eax+0xc],0x40
10048931:	je     0x10048939
10048933:	cmp    DWORD PTR [eax+0x8],0x0
10048937:	je     0x1004894f
10048939:	push   eax
1004893a:	push   DWORD PTR [esp+0x8]
1004893e:	call   0x1004d199
10048943:	cmp    ax,0xffff
10048947:	pop    ecx
10048948:	pop    ecx
10048949:	jne    0x1004894f
1004894b:	or     DWORD PTR [esi],0xffffffff
1004894e:	ret    
1004894f:	inc    DWORD PTR [esi]
10048951:	ret    
10048952:	push   ebp
10048953:	lea    ebp,[esp-0x3f4]
1004895a:	sub    esp,0x474
10048960:	mov    eax,ds:0x1007e030
10048965:	xor    eax,ebp
10048967:	mov    DWORD PTR [ebp+0x3f0],eax
1004896d:	mov    eax,DWORD PTR [ebp+0x3fc]
10048973:	push   ebx
10048974:	mov    ebx,DWORD PTR [ebp+0x408]
1004897a:	push   esi
1004897b:	mov    esi,DWORD PTR [ebp+0x400]
10048981:	push   edi
10048982:	push   DWORD PTR [ebp+0x404]
10048988:	xor    edi,edi
1004898a:	lea    ecx,[ebp-0x64]
1004898d:	mov    DWORD PTR [ebp-0x3c],eax
10048990:	mov    DWORD PTR [ebp-0x28],ebx
10048993:	mov    DWORD PTR [ebp-0x54],edi
10048996:	mov    DWORD PTR [ebp-0x14],edi
10048999:	mov    DWORD PTR [ebp-0x38],edi
1004899c:	mov    DWORD PTR [ebp-0x18],edi
1004899f:	mov    DWORD PTR [ebp-0x30],edi
100489a2:	mov    DWORD PTR [ebp-0x48],edi
100489a5:	mov    DWORD PTR [ebp-0x34],edi
100489a8:	call   0x100454e5
100489ad:	cmp    DWORD PTR [ebp-0x3c],edi
100489b0:	jne    0x100489df
100489b2:	call   0x10046b55
100489b7:	push   edi
100489b8:	push   edi
100489b9:	push   edi
100489ba:	push   edi
100489bb:	mov    DWORD PTR [eax],0x16
100489c1:	push   edi
100489c2:	call   0x1004338c
100489c7:	add    esp,0x14
100489ca:	cmp    BYTE PTR [ebp-0x58],0x0
100489ce:	je     0x100489d7
100489d0:	mov    eax,DWORD PTR [ebp-0x5c]
100489d3:	and    DWORD PTR [eax+0x70],0xfffffffd
100489d7:	or     eax,0xffffffff
100489da:	jmp    0x1004922b
100489df:	cmp    esi,edi
100489e1:	je     0x100489b2
100489e3:	movzx  edx,WORD PTR [esi]
100489e6:	xor    ecx,ecx
100489e8:	cmp    dx,di
100489eb:	mov    DWORD PTR [ebp-0x2c],edi
100489ee:	mov    DWORD PTR [ebp-0x20],edi
100489f1:	mov    DWORD PTR [ebp-0x50],edi
100489f4:	mov    DWORD PTR [ebp-0x24],edx
100489f7:	je     0x1004921b
100489fd:	push   0x2
100489ff:	pop    edi
10048a00:	add    esi,edi
10048a02:	cmp    DWORD PTR [ebp-0x2c],0x0
10048a06:	mov    DWORD PTR [ebp-0x4c],esi
10048a09:	jl     0x1004921b
10048a0f:	lea    eax,[edx-0x20]
10048a12:	cmp    ax,0x58
10048a16:	ja     0x10048a27
10048a18:	movzx  eax,dx
10048a1b:	movzx  eax,BYTE PTR [eax+0x100673f8]
10048a22:	and    eax,0xf
10048a25:	jmp    0x10048a29
10048a27:	xor    eax,eax
10048a29:	movsx  eax,BYTE PTR [ecx+eax*8+0x10067418]
10048a31:	push   0x7
10048a33:	sar    eax,0x4
10048a36:	pop    ecx
10048a37:	cmp    eax,ecx
10048a39:	mov    DWORD PTR [ebp-0x68],eax
10048a3c:	ja     0x100491e9
10048a42:	jmp    DWORD PTR [eax*4+0x10049246]
10048a49:	xor    eax,eax
10048a4b:	or     DWORD PTR [ebp-0x18],0xffffffff
10048a4f:	mov    DWORD PTR [ebp-0x6c],eax
10048a52:	mov    DWORD PTR [ebp-0x48],eax
10048a55:	mov    DWORD PTR [ebp-0x38],eax
10048a58:	mov    DWORD PTR [ebp-0x30],eax
10048a5b:	mov    DWORD PTR [ebp-0x14],eax
10048a5e:	mov    DWORD PTR [ebp-0x34],eax
10048a61:	jmp    0x100491e9
10048a66:	movzx  eax,dx
10048a69:	sub    eax,0x20
10048a6c:	je     0x10048aac
10048a6e:	sub    eax,0x3
10048a71:	je     0x10048aa0
10048a73:	sub    eax,0x8
10048a76:	je     0x10048a97
10048a78:	sub    eax,edi
10048a7a:	je     0x10048a8e
10048a7c:	sub    eax,0x3
10048a7f:	jne    0x100491e9
10048a85:	or     DWORD PTR [ebp-0x14],0x8
10048a89:	jmp    0x100491e9
10048a8e:	or     DWORD PTR [ebp-0x14],0x4
10048a92:	jmp    0x100491e9
10048a97:	or     DWORD PTR [ebp-0x14],0x1
10048a9b:	jmp    0x100491e9
10048aa0:	or     DWORD PTR [ebp-0x14],0x80
10048aa7:	jmp    0x100491e9
10048aac:	or     DWORD PTR [ebp-0x14],edi
10048aaf:	jmp    0x100491e9
10048ab4:	cmp    dx,0x2a
10048ab8:	jne    0x10048ada
10048aba:	add    ebx,0x4
10048abd:	mov    DWORD PTR [ebp-0x28],ebx
10048ac0:	mov    ebx,DWORD PTR [ebx-0x4]
10048ac3:	test   ebx,ebx
10048ac5:	mov    DWORD PTR [ebp-0x38],ebx
10048ac8:	jge    0x100491e9
10048ace:	or     DWORD PTR [ebp-0x14],0x4
10048ad2:	neg    DWORD PTR [ebp-0x38]
10048ad5:	jmp    0x100491e9
10048ada:	mov    eax,DWORD PTR [ebp-0x38]
10048add:	imul   eax,eax,0xa
10048ae0:	movzx  ecx,dx
10048ae3:	lea    eax,[eax+ecx*1-0x30]
10048ae7:	mov    DWORD PTR [ebp-0x38],eax
10048aea:	jmp    0x100491e9
10048aef:	and    DWORD PTR [ebp-0x18],0x0
10048af3:	jmp    0x100491e9
10048af8:	cmp    dx,0x2a
10048afc:	jne    0x10048b1b
10048afe:	add    ebx,0x4
10048b01:	mov    DWORD PTR [ebp-0x28],ebx
10048b04:	mov    ebx,DWORD PTR [ebx-0x4]
10048b07:	test   ebx,ebx
10048b09:	mov    DWORD PTR [ebp-0x18],ebx
10048b0c:	jge    0x100491e9
10048b12:	or     DWORD PTR [ebp-0x18],0xffffffff
10048b16:	jmp    0x100491e9
10048b1b:	mov    eax,DWORD PTR [ebp-0x18]
10048b1e:	imul   eax,eax,0xa
10048b21:	movzx  ecx,dx
10048b24:	lea    eax,[eax+ecx*1-0x30]
10048b28:	mov    DWORD PTR [ebp-0x18],eax
10048b2b:	jmp    0x100491e9
10048b30:	movzx  eax,dx
10048b33:	cmp    eax,0x49
10048b36:	je     0x10048b80
10048b38:	cmp    eax,0x68
10048b3b:	je     0x10048b77
10048b3d:	cmp    eax,0x6c
10048b40:	je     0x10048b57
10048b42:	cmp    eax,0x77
10048b45:	jne    0x100491e9
10048b4b:	or     DWORD PTR [ebp-0x14],0x800
10048b52:	jmp    0x100491e9
10048b57:	cmp    WORD PTR [esi],0x6c
10048b5b:	jne    0x10048b6e
10048b5d:	add    esi,edi
10048b5f:	or     DWORD PTR [ebp-0x14],0x1000
10048b66:	mov    DWORD PTR [ebp-0x4c],esi
10048b69:	jmp    0x100491e9
10048b6e:	or     DWORD PTR [ebp-0x14],0x10
10048b72:	jmp    0x100491e9
10048b77:	or     DWORD PTR [ebp-0x14],0x20
10048b7b:	jmp    0x100491e9
10048b80:	movzx  eax,WORD PTR [esi]
10048b83:	cmp    ax,0x36
10048b87:	jne    0x10048ba2
10048b89:	cmp    WORD PTR [esi+0x2],0x34
10048b8e:	jne    0x10048ba2
10048b90:	add    esi,0x4
10048b93:	or     DWORD PTR [ebp-0x14],0x8000
10048b9a:	mov    DWORD PTR [ebp-0x4c],esi
10048b9d:	jmp    0x100491e9
10048ba2:	cmp    ax,0x33
10048ba6:	jne    0x10048bc1
10048ba8:	cmp    WORD PTR [esi+0x2],0x32
10048bad:	jne    0x10048bc1
10048baf:	add    esi,0x4
10048bb2:	and    DWORD PTR [ebp-0x14],0xffff7fff
10048bb9:	mov    DWORD PTR [ebp-0x4c],esi
10048bbc:	jmp    0x100491e9
10048bc1:	cmp    ax,0x64
10048bc5:	je     0x100491e9
10048bcb:	cmp    ax,0x69
10048bcf:	je     0x100491e9
10048bd5:	cmp    ax,0x6f
10048bd9:	je     0x100491e9
10048bdf:	cmp    ax,0x75
10048be3:	je     0x100491e9
10048be9:	cmp    ax,0x78
10048bed:	je     0x100491e9
10048bf3:	cmp    ax,0x58
10048bf7:	je     0x100491e9
10048bfd:	and    DWORD PTR [ebp-0x68],0x0
10048c01:	mov    eax,DWORD PTR [ebp-0x3c]
10048c04:	push   edx
10048c05:	lea    esi,[ebp-0x2c]
10048c08:	mov    DWORD PTR [ebp-0x34],0x1
10048c0f:	call   0x1004892d
10048c14:	jmp    0x100491e8
10048c19:	movzx  eax,dx
10048c1c:	cmp    eax,0x64
10048c1f:	jg     0x10048dcc
10048c25:	je     0x10048e4b
10048c2b:	cmp    eax,0x53
10048c2e:	jg     0x10048d0b
10048c34:	je     0x10048c95
10048c36:	sub    eax,0x41
10048c39:	je     0x10048c4b
10048c3b:	sub    eax,edi
10048c3d:	je     0x10048c80
10048c3f:	sub    eax,edi
10048c41:	je     0x10048c4b
10048c43:	sub    eax,edi
10048c45:	jne    0x100490cd
10048c4b:	add    edx,0x20
10048c4e:	mov    DWORD PTR [ebp-0x6c],0x1
10048c55:	mov    DWORD PTR [ebp-0x24],edx
10048c58:	or     DWORD PTR [ebp-0x14],0x40
10048c5c:	cmp    DWORD PTR [ebp-0x18],0x0
10048c60:	lea    esi,[ebp-0x10]
10048c63:	mov    eax,0x200
10048c68:	mov    DWORD PTR [ebp-0x1c],esi
10048c6b:	mov    DWORD PTR [ebp-0x20],eax
10048c6e:	jge    0x10048e6f
10048c74:	mov    DWORD PTR [ebp-0x18],0x6
10048c7b:	jmp    0x10048ebc
10048c80:	test   WORD PTR [ebp-0x14],0x830
10048c86:	jne    0x10048d28
10048c8c:	or     DWORD PTR [ebp-0x14],0x20
10048c90:	jmp    0x10048d28
10048c95:	test   WORD PTR [ebp-0x14],0x830
10048c9b:	jne    0x10048ca1
10048c9d:	or     DWORD PTR [ebp-0x14],0x20
10048ca1:	mov    edi,DWORD PTR [ebp-0x18]
10048ca4:	cmp    edi,0xffffffff
10048ca7:	jne    0x10048cae
10048ca9:	mov    edi,0x7fffffff
10048cae:	add    ebx,0x4
10048cb1:	test   BYTE PTR [ebp-0x14],0x20
10048cb5:	mov    DWORD PTR [ebp-0x28],ebx
10048cb8:	mov    ebx,DWORD PTR [ebx-0x4]
10048cbb:	mov    DWORD PTR [ebp-0x1c],ebx
10048cbe:	je     0x100490a0
10048cc4:	test   ebx,ebx
10048cc6:	jne    0x10048cd0
10048cc8:	mov    eax,ds:0x1007ed28
10048ccd:	mov    DWORD PTR [ebp-0x1c],eax
10048cd0:	and    DWORD PTR [ebp-0x20],0x0
10048cd4:	test   edi,edi
10048cd6:	mov    esi,DWORD PTR [ebp-0x1c]
10048cd9:	jle    0x100490cd
10048cdf:	mov    al,BYTE PTR [esi]
10048ce1:	test   al,al
10048ce3:	je     0x100490cd
10048ce9:	lea    ecx,[ebp-0x64]
10048cec:	movzx  eax,al
10048cef:	push   ecx
10048cf0:	push   eax
10048cf1:	call   0x1004b2bf
10048cf6:	test   eax,eax
10048cf8:	pop    ecx
10048cf9:	pop    ecx
10048cfa:	je     0x10048cfd
10048cfc:	inc    esi
10048cfd:	inc    esi
10048cfe:	inc    DWORD PTR [ebp-0x20]
10048d01:	cmp    DWORD PTR [ebp-0x20],edi
10048d04:	jl     0x10048cdf
10048d06:	jmp    0x100490cd
10048d0b:	sub    eax,0x58
10048d0e:	je     0x10048f57
10048d14:	sub    eax,edi
10048d16:	je     0x10048d7f
10048d18:	sub    eax,ecx
10048d1a:	je     0x10048c58
10048d20:	sub    eax,edi
10048d22:	jne    0x100490cd
10048d28:	movzx  eax,WORD PTR [ebx]
10048d2b:	add    ebx,0x4
10048d2e:	xor    esi,esi
10048d30:	inc    esi
10048d31:	test   BYTE PTR [ebp-0x14],0x20
10048d35:	mov    DWORD PTR [ebp-0x34],esi
10048d38:	mov    DWORD PTR [ebp-0x28],ebx
10048d3b:	mov    DWORD PTR [ebp-0x70],eax
10048d3e:	je     0x10048d6d
10048d40:	mov    BYTE PTR [ebp-0x40],al
10048d43:	lea    eax,[ebp-0x64]
10048d46:	push   eax
10048d47:	mov    eax,DWORD PTR [ebp-0x64]
10048d4a:	mov    BYTE PTR [ebp-0x3f],0x0
10048d4e:	push   DWORD PTR [eax+0xac]
10048d54:	lea    eax,[ebp-0x40]
10048d57:	push   eax
10048d58:	lea    eax,[ebp-0x10]
10048d5b:	push   eax
10048d5c:	call   0x1004dd6f
10048d61:	add    esp,0x10
10048d64:	test   eax,eax
10048d66:	jge    0x10048d71
10048d68:	mov    DWORD PTR [ebp-0x48],esi
10048d6b:	jmp    0x10048d71
10048d6d:	mov    WORD PTR [ebp-0x10],ax
10048d71:	lea    eax,[ebp-0x10]
10048d74:	mov    DWORD PTR [ebp-0x1c],eax
10048d77:	mov    DWORD PTR [ebp-0x20],esi
10048d7a:	jmp    0x100490cd
10048d7f:	mov    eax,DWORD PTR [ebx]
10048d81:	add    ebx,0x4
10048d84:	test   eax,eax
10048d86:	mov    DWORD PTR [ebp-0x28],ebx
10048d89:	je     0x10048db8
10048d8b:	mov    ecx,DWORD PTR [eax+0x4]
10048d8e:	test   ecx,ecx
10048d90:	je     0x10048db8
10048d92:	test   WORD PTR [ebp-0x14],0x800
10048d98:	movsx  eax,WORD PTR [eax]
10048d9b:	mov    DWORD PTR [ebp-0x1c],ecx
10048d9e:	je     0x10048daf
10048da0:	cdq    
10048da1:	sub    eax,edx
10048da3:	mov    DWORD PTR [ebp-0x34],0x1
10048daa:	jmp    0x100490c8
10048daf:	and    DWORD PTR [ebp-0x34],0x0
10048db3:	jmp    0x100490ca
10048db8:	mov    eax,ds:0x1007ed28
10048dbd:	mov    DWORD PTR [ebp-0x1c],eax
10048dc0:	push   eax
10048dc1:	call   0x10043010
10048dc6:	pop    ecx
10048dc7:	jmp    0x100490ca
10048dcc:	cmp    eax,0x70
10048dcf:	jg     0x10048f5c
10048dd5:	je     0x10048f50
10048ddb:	cmp    eax,0x65
10048dde:	jl     0x100490cd
10048de4:	cmp    eax,0x67
10048de7:	jle    0x10048c58
10048ded:	cmp    eax,0x69
10048df0:	je     0x10048e4b
10048df2:	cmp    eax,0x6e
10048df5:	je     0x10048e16
10048df7:	cmp    eax,0x6f
10048dfa:	jne    0x100490cd
10048e00:	test   BYTE PTR [ebp-0x14],0x80
10048e04:	mov    DWORD PTR [ebp-0x24],0x8
10048e0b:	je     0x10048e56
10048e0d:	or     DWORD PTR [ebp-0x14],0x200
10048e14:	jmp    0x10048e56
10048e16:	mov    esi,DWORD PTR [ebx]
10048e18:	add    ebx,0x4
10048e1b:	mov    DWORD PTR [ebp-0x28],ebx
10048e1e:	call   0x1004dd59
10048e23:	test   eax,eax
10048e25:	je     0x10049204
10048e2b:	test   BYTE PTR [ebp-0x14],0x20
10048e2f:	je     0x10048e3a
10048e31:	mov    ax,WORD PTR [ebp-0x2c]
10048e35:	mov    WORD PTR [esi],ax
10048e38:	jmp    0x10048e3f
10048e3a:	mov    eax,DWORD PTR [ebp-0x2c]
10048e3d:	mov    DWORD PTR [esi],eax
10048e3f:	mov    DWORD PTR [ebp-0x48],0x1
10048e46:	jmp    0x100491d6
10048e4b:	or     DWORD PTR [ebp-0x14],0x40
10048e4f:	mov    DWORD PTR [ebp-0x24],0xa
10048e56:	test   WORD PTR [ebp-0x14],0x8000
10048e5c:	je     0x10048fa6
10048e62:	mov    eax,DWORD PTR [ebx]
10048e64:	mov    edx,DWORD PTR [ebx+0x4]
10048e67:	add    ebx,0x8
10048e6a:	jmp    0x10048fdf
10048e6f:	jne    0x10048e80
10048e71:	cmp    dx,0x67
10048e75:	jne    0x10048ebc
10048e77:	mov    DWORD PTR [ebp-0x18],0x1
10048e7e:	jmp    0x10048ebc
10048e80:	cmp    DWORD PTR [ebp-0x18],eax
10048e83:	jle    0x10048e88
10048e85:	mov    DWORD PTR [ebp-0x18],eax
10048e88:	cmp    DWORD PTR [ebp-0x18],0xa3
10048e8f:	jle    0x10048ebc
10048e91:	mov    edi,DWORD PTR [ebp-0x18]
10048e94:	add    edi,0x15d
10048e9a:	push   edi
10048e9b:	call   0x10047422
10048ea0:	test   eax,eax
10048ea2:	mov    edx,DWORD PTR [ebp-0x24]
10048ea5:	pop    ecx
10048ea6:	mov    DWORD PTR [ebp-0x50],eax
10048ea9:	je     0x10048eb5
10048eab:	mov    DWORD PTR [ebp-0x1c],eax
10048eae:	mov    DWORD PTR [ebp-0x20],edi
10048eb1:	mov    esi,eax
10048eb3:	jmp    0x10048ebc
10048eb5:	mov    DWORD PTR [ebp-0x18],0xa3
10048ebc:	mov    eax,DWORD PTR [ebx]
10048ebe:	add    ebx,0x8
10048ec1:	mov    DWORD PTR [ebp-0x78],eax
10048ec4:	mov    eax,DWORD PTR [ebx-0x4]
10048ec7:	mov    DWORD PTR [ebp-0x74],eax
10048eca:	lea    eax,[ebp-0x64]
10048ecd:	push   eax
10048ece:	push   DWORD PTR [ebp-0x6c]
10048ed1:	movsx  eax,dl
10048ed4:	push   DWORD PTR [ebp-0x18]
10048ed7:	mov    DWORD PTR [ebp-0x28],ebx
10048eda:	push   eax
10048edb:	push   DWORD PTR [ebp-0x20]
10048ede:	lea    eax,[ebp-0x78]
10048ee1:	push   esi
10048ee2:	push   eax
10048ee3:	push   DWORD PTR ds:0x1007ea98
10048ee9:	call   0x10046ef2
10048eee:	pop    ecx
10048eef:	call   eax
10048ef1:	mov    ebx,DWORD PTR [ebp-0x14]
10048ef4:	add    esp,0x1c
10048ef7:	and    ebx,0x80
10048efd:	je     0x10048f1a
10048eff:	cmp    DWORD PTR [ebp-0x18],0x0
10048f03:	jne    0x10048f1a
10048f05:	lea    eax,[ebp-0x64]
10048f08:	push   eax
10048f09:	push   esi
10048f0a:	push   DWORD PTR ds:0x1007eaa4
10048f10:	call   0x10046ef2
10048f15:	pop    ecx
10048f16:	call   eax
10048f18:	pop    ecx
10048f19:	pop    ecx
10048f1a:	cmp    WORD PTR [ebp-0x24],0x67
10048f1f:	jne    0x10048f3a
10048f21:	test   ebx,ebx
10048f23:	jne    0x10048f3a
10048f25:	lea    eax,[ebp-0x64]
10048f28:	push   eax
10048f29:	push   esi
10048f2a:	push   DWORD PTR ds:0x1007eaa0
10048f30:	call   0x10046ef2
10048f35:	pop    ecx
10048f36:	call   eax
10048f38:	pop    ecx
10048f39:	pop    ecx
10048f3a:	cmp    BYTE PTR [esi],0x2d
10048f3d:	jne    0x10048f4a
10048f3f:	or     DWORD PTR [ebp-0x14],0x100
10048f46:	inc    esi
10048f47:	mov    DWORD PTR [ebp-0x1c],esi
10048f4a:	push   esi
10048f4b:	jmp    0x10048dc1
10048f50:	mov    DWORD PTR [ebp-0x18],0x8
10048f57:	mov    DWORD PTR [ebp-0x54],ecx
10048f5a:	jmp    0x10048f7d
10048f5c:	sub    eax,0x73
10048f5f:	je     0x10048ca1
10048f65:	sub    eax,edi
10048f67:	je     0x10048e4f
10048f6d:	sub    eax,0x3
10048f70:	jne    0x100490cd
10048f76:	mov    DWORD PTR [ebp-0x54],0x27
10048f7d:	test   BYTE PTR [ebp-0x14],0x80
10048f81:	mov    DWORD PTR [ebp-0x24],0x10
10048f88:	je     0x10048e56
10048f8e:	mov    eax,DWORD PTR [ebp-0x54]
10048f91:	add    eax,0x51
10048f94:	mov    WORD PTR [ebp-0x44],0x30
10048f9a:	mov    WORD PTR [ebp-0x42],ax
10048f9e:	mov    DWORD PTR [ebp-0x30],edi
10048fa1:	jmp    0x10048e56
10048fa6:	test   WORD PTR [ebp-0x14],0x1000
10048fac:	jne    0x10048e62
10048fb2:	add    ebx,0x4
10048fb5:	test   BYTE PTR [ebp-0x14],0x20
10048fb9:	je     0x10048fd1
10048fbb:	test   BYTE PTR [ebp-0x14],0x40
10048fbf:	mov    DWORD PTR [ebp-0x28],ebx
10048fc2:	je     0x10048fca
10048fc4:	movsx  eax,WORD PTR [ebx-0x4]
10048fc8:	jmp    0x10048fce
10048fca:	movzx  eax,WORD PTR [ebx-0x4]
10048fce:	cdq    
10048fcf:	jmp    0x10048fe2
10048fd1:	test   BYTE PTR [ebp-0x14],0x40
10048fd5:	mov    eax,DWORD PTR [ebx-0x4]
10048fd8:	je     0x10048fdd
10048fda:	cdq    
10048fdb:	jmp    0x10048fdf
10048fdd:	xor    edx,edx
10048fdf:	mov    DWORD PTR [ebp-0x28],ebx
10048fe2:	test   BYTE PTR [ebp-0x14],0x40
10048fe6:	je     0x10049000
10048fe8:	test   edx,edx
10048fea:	jg     0x10049000
10048fec:	jl     0x10048ff2
10048fee:	test   eax,eax
10048ff0:	jae    0x10049000
10048ff2:	neg    eax
10048ff4:	adc    edx,0x0
10048ff7:	neg    edx
10048ff9:	or     DWORD PTR [ebp-0x14],0x100
10049000:	test   WORD PTR [ebp-0x14],0x9000
10049006:	mov    ebx,edx
10049008:	mov    edi,eax
1004900a:	jne    0x1004900e
1004900c:	xor    ebx,ebx
1004900e:	cmp    DWORD PTR [ebp-0x18],0x0
10049012:	jge    0x1004901d
10049014:	mov    DWORD PTR [ebp-0x18],0x1
1004901b:	jmp    0x1004902e
1004901d:	and    DWORD PTR [ebp-0x14],0xfffffff7
10049021:	mov    eax,0x200
10049026:	cmp    DWORD PTR [ebp-0x18],eax
10049029:	jle    0x1004902e
1004902b:	mov    DWORD PTR [ebp-0x18],eax
1004902e:	mov    eax,edi
10049030:	or     eax,ebx
10049032:	jne    0x10049038
10049034:	and    DWORD PTR [ebp-0x30],0x0
10049038:	lea    esi,[ebp+0x1ef]
1004903e:	mov    eax,DWORD PTR [ebp-0x18]
10049041:	dec    DWORD PTR [ebp-0x18]
10049044:	test   eax,eax
10049046:	jg     0x1004904e
10049048:	mov    eax,edi
1004904a:	or     eax,ebx
1004904c:	je     0x10049072
1004904e:	mov    eax,DWORD PTR [ebp-0x24]
10049051:	cdq    
10049052:	push   edx
10049053:	push   eax
10049054:	push   ebx
10049055:	push   edi
10049056:	call   0x1004a9f0
1004905b:	add    ecx,0x30
1004905e:	cmp    ecx,0x39
10049061:	mov    DWORD PTR [ebp-0x7c],ebx
10049064:	mov    edi,eax
10049066:	mov    ebx,edx
10049068:	jle    0x1004906d
1004906a:	add    ecx,DWORD PTR [ebp-0x54]
1004906d:	mov    BYTE PTR [esi],cl
1004906f:	dec    esi
10049070:	jmp    0x1004903e
10049072:	lea    eax,[ebp+0x1ef]
10049078:	sub    eax,esi
1004907a:	inc    esi
1004907b:	test   WORD PTR [ebp-0x14],0x200
10049081:	mov    DWORD PTR [ebp-0x20],eax
10049084:	mov    DWORD PTR [ebp-0x1c],esi
10049087:	je     0x100490cd
10049089:	test   eax,eax
1004908b:	je     0x10049094
1004908d:	mov    ecx,esi
1004908f:	cmp    BYTE PTR [ecx],0x30
10049092:	je     0x100490cd
10049094:	dec    DWORD PTR [ebp-0x1c]
10049097:	mov    ecx,DWORD PTR [ebp-0x1c]
1004909a:	mov    BYTE PTR [ecx],0x30
1004909d:	inc    eax
1004909e:	jmp    0x100490ca
100490a0:	test   ebx,ebx
100490a2:	jne    0x100490ac
100490a4:	mov    eax,ds:0x1007ed2c
100490a9:	mov    DWORD PTR [ebp-0x1c],eax
100490ac:	mov    eax,DWORD PTR [ebp-0x1c]
100490af:	mov    DWORD PTR [ebp-0x34],0x1
100490b6:	jmp    0x100490c1
100490b8:	dec    edi
100490b9:	cmp    WORD PTR [eax],0x0
100490bd:	je     0x100490c5
100490bf:	inc    eax
100490c0:	inc    eax
100490c1:	test   edi,edi
100490c3:	jne    0x100490b8
100490c5:	sub    eax,DWORD PTR [ebp-0x1c]
100490c8:	sar    eax,1
100490ca:	mov    DWORD PTR [ebp-0x20],eax
100490cd:	cmp    DWORD PTR [ebp-0x48],0x0
100490d1:	jne    0x100491d6
100490d7:	mov    eax,DWORD PTR [ebp-0x14]
100490da:	test   al,0x40
100490dc:	je     0x10049109
100490de:	test   ax,0x100
100490e2:	je     0x100490ec
100490e4:	mov    WORD PTR [ebp-0x44],0x2d
100490ea:	jmp    0x10049102
100490ec:	test   al,0x1
100490ee:	je     0x100490f8
100490f0:	mov    WORD PTR [ebp-0x44],0x2b
100490f6:	jmp    0x10049102
100490f8:	test   al,0x2
100490fa:	je     0x10049109
100490fc:	mov    WORD PTR [ebp-0x44],0x20
10049102:	mov    DWORD PTR [ebp-0x30],0x1
10049109:	mov    ebx,DWORD PTR [ebp-0x38]
1004910c:	mov    esi,DWORD PTR [ebp-0x20]
1004910f:	sub    ebx,esi
10049111:	sub    ebx,DWORD PTR [ebp-0x30]
10049114:	test   BYTE PTR [ebp-0x14],0xc
10049118:	jne    0x1004912b
1004911a:	push   DWORD PTR [ebp-0x3c]
1004911d:	lea    eax,[ebp-0x2c]
10049120:	push   ebx
10049121:	push   0x20
10049123:	call   0x10049266
10049128:	add    esp,0xc
1004912b:	push   DWORD PTR [ebp-0x30]
1004912e:	mov    edi,DWORD PTR [ebp-0x3c]
10049131:	lea    eax,[ebp-0x2c]
10049134:	lea    ecx,[ebp-0x44]
10049137:	call   0x1004928b
1004913c:	test   BYTE PTR [ebp-0x14],0x8
10049140:	pop    ecx
10049141:	je     0x10049158
10049143:	test   BYTE PTR [ebp-0x14],0x4
10049147:	jne    0x10049158
10049149:	push   edi
1004914a:	push   ebx
1004914b:	push   0x30
1004914d:	lea    eax,[ebp-0x2c]
10049150:	call   0x10049266
10049155:	add    esp,0xc
10049158:	cmp    DWORD PTR [ebp-0x34],0x0
1004915c:	jne    0x100491ac
1004915e:	test   esi,esi
10049160:	jle    0x100491ac
10049162:	mov    edi,DWORD PTR [ebp-0x1c]
10049165:	mov    DWORD PTR [ebp-0x24],esi
10049168:	dec    DWORD PTR [ebp-0x24]
1004916b:	lea    eax,[ebp-0x64]
1004916e:	push   eax
1004916f:	mov    eax,DWORD PTR [ebp-0x64]
10049172:	push   DWORD PTR [eax+0xac]
10049178:	lea    eax,[ebp-0x70]
1004917b:	push   edi
1004917c:	push   eax
1004917d:	call   0x1004dd6f
10049182:	add    esp,0x10
10049185:	test   eax,eax
10049187:	mov    DWORD PTR [ebp-0x7c],eax
1004918a:	jle    0x100491a6
1004918c:	push   DWORD PTR [ebp-0x70]
1004918f:	mov    eax,DWORD PTR [ebp-0x3c]
10049192:	lea    esi,[ebp-0x2c]
10049195:	call   0x1004892d
1004919a:	add    edi,DWORD PTR [ebp-0x7c]
1004919d:	cmp    DWORD PTR [ebp-0x24],0x0
100491a1:	pop    ecx
100491a2:	jg     0x10049168
100491a4:	jmp    0x100491b9
100491a6:	or     DWORD PTR [ebp-0x2c],0xffffffff
100491aa:	jmp    0x100491b9
100491ac:	mov    ecx,DWORD PTR [ebp-0x1c]
100491af:	push   esi
100491b0:	lea    eax,[ebp-0x2c]
100491b3:	call   0x1004928b
100491b8:	pop    ecx
100491b9:	cmp    DWORD PTR [ebp-0x2c],0x0
100491bd:	jl     0x100491d6
100491bf:	test   BYTE PTR [ebp-0x14],0x4
100491c3:	je     0x100491d6
100491c5:	push   DWORD PTR [ebp-0x3c]
100491c8:	lea    eax,[ebp-0x2c]
100491cb:	push   ebx
100491cc:	push   0x20
100491ce:	call   0x10049266
100491d3:	add    esp,0xc
100491d6:	cmp    DWORD PTR [ebp-0x50],0x0
100491da:	je     0x100491e9
100491dc:	push   DWORD PTR [ebp-0x50]
100491df:	call   0x10043508
100491e4:	and    DWORD PTR [ebp-0x50],0x0
100491e8:	pop    ecx
100491e9:	mov    esi,DWORD PTR [ebp-0x4c]
100491ec:	movzx  eax,WORD PTR [esi]
100491ef:	test   ax,ax
100491f2:	mov    DWORD PTR [ebp-0x24],eax
100491f5:	je     0x1004921b
100491f7:	mov    ecx,DWORD PTR [ebp-0x68]
100491fa:	mov    ebx,DWORD PTR [ebp-0x28]
100491fd:	mov    edx,eax
100491ff:	jmp    0x100489fd
10049204:	call   0x10046b55
10049209:	mov    DWORD PTR [eax],0x16
1004920f:	xor    eax,eax
10049211:	push   eax
10049212:	push   eax
10049213:	push   eax
10049214:	push   eax
10049215:	push   eax
10049216:	jmp    0x100489c2
1004921b:	cmp    BYTE PTR [ebp-0x58],0x0
1004921f:	je     0x10049228
10049221:	mov    eax,DWORD PTR [ebp-0x5c]
10049224:	and    DWORD PTR [eax+0x70],0xfffffffd
10049228:	mov    eax,DWORD PTR [ebp-0x2c]
1004922b:	mov    ecx,DWORD PTR [ebp+0x3f0]
10049231:	pop    edi
10049232:	pop    esi
10049233:	xor    ecx,ebp
10049235:	pop    ebx
10049236:	call   0x10042e97
1004923b:	add    ebp,0x3f4
10049241:	leave  
10049242:	ret    
10049243:	lea    ecx,[ecx+0x0]
10049246:	add    DWORD PTR [esp+eax*1+0x48a4910],ecx
1004924d:	adc    BYTE PTR [esi-0x76],ah
10049250:	add    al,0x10
10049252:	mov    ah,0x8a
10049254:	add    al,0x10
10049256:	out    dx,eax
10049257:	mov    al,BYTE PTR [eax+edx*1]
1004925a:	clc    
1004925b:	mov    al,BYTE PTR [eax+edx*1]
1004925e:	xor    BYTE PTR [ebx-0x73e6effc],cl
10049264:	add    al,0x10
10049266:	push   ebp
10049267:	mov    ebp,esp
10049269:	push   esi
1004926a:	mov    esi,eax
1004926c:	jmp    0x10049282
1004926e:	push   DWORD PTR [ebp+0x8]
10049271:	mov    eax,DWORD PTR [ebp+0x10]
10049274:	dec    DWORD PTR [ebp+0xc]
10049277:	call   0x1004892d
1004927c:	cmp    DWORD PTR [esi],0xffffffff
1004927f:	pop    ecx
10049280:	je     0x10049288
10049282:	cmp    DWORD PTR [ebp+0xc],0x0
10049286:	jg     0x1004926e
10049288:	pop    esi
10049289:	pop    ebp
1004928a:	ret    
1004928b:	test   BYTE PTR [edi+0xc],0x40
1004928f:	push   ebx
10049290:	push   esi
10049291:	mov    esi,eax
10049293:	mov    ebx,ecx
10049295:	je     0x100492d0
10049297:	cmp    DWORD PTR [edi+0x8],0x0
1004929b:	jne    0x100492d0
1004929d:	mov    eax,DWORD PTR [esp+0xc]
100492a1:	add    DWORD PTR [esi],eax
100492a3:	jmp    0x100492d7
100492a5:	movzx  eax,WORD PTR [ebx]
100492a8:	dec    DWORD PTR [esp+0xc]
100492ac:	push   eax
100492ad:	mov    eax,edi
100492af:	call   0x1004892d
100492b4:	inc    ebx
100492b5:	inc    ebx
100492b6:	cmp    DWORD PTR [esi],0xffffffff
100492b9:	pop    ecx
100492ba:	jne    0x100492d0
100492bc:	call   0x10046b55
100492c1:	cmp    DWORD PTR [eax],0x2a
100492c4:	jne    0x100492d7
100492c6:	push   0x3f
100492c8:	mov    eax,edi
100492ca:	call   0x1004892d
100492cf:	pop    ecx
100492d0:	cmp    DWORD PTR [esp+0xc],0x0
100492d5:	jg     0x100492a5
100492d7:	pop    esi
100492d8:	pop    ebx
100492d9:	ret    
100492da:	push   ebp
100492db:	lea    ebp,[esp-0x3f4]
100492e2:	sub    esp,0x474
100492e8:	mov    eax,ds:0x1007e030
100492ed:	xor    eax,ebp
100492ef:	mov    DWORD PTR [ebp+0x3f0],eax
100492f5:	push   ebx
100492f6:	mov    ebx,DWORD PTR [ebp+0x408]
100492fc:	push   esi
100492fd:	mov    esi,DWORD PTR [ebp+0x3fc]
10049303:	xor    eax,eax
10049305:	push   edi
10049306:	push   DWORD PTR [ebp+0x404]
1004930c:	mov    edi,DWORD PTR [ebp+0x400]
10049312:	lea    ecx,[ebp-0x58]
10049315:	mov    DWORD PTR [ebp-0x48],esi
10049318:	mov    DWORD PTR [ebp-0x24],ebx
1004931b:	mov    DWORD PTR [ebp-0x60],eax
1004931e:	mov    DWORD PTR [ebp-0x14],eax
10049321:	mov    DWORD PTR [ebp-0x38],eax
10049324:	mov    DWORD PTR [ebp-0x18],eax
10049327:	mov    DWORD PTR [ebp-0x30],eax
1004932a:	mov    DWORD PTR [ebp-0x5c],eax
1004932d:	mov    DWORD PTR [ebp-0x34],eax
10049330:	call   0x100454e5
10049335:	test   esi,esi
10049337:	jne    0x10049368
10049339:	call   0x10046b55
1004933e:	mov    DWORD PTR [eax],0x16
10049344:	xor    eax,eax
10049346:	push   eax
10049347:	push   eax
10049348:	push   eax
10049349:	push   eax
1004934a:	push   eax
1004934b:	call   0x1004338c
10049350:	add    esp,0x14
10049353:	cmp    BYTE PTR [ebp-0x4c],0x0
10049357:	je     0x10049360
10049359:	mov    eax,DWORD PTR [ebp-0x50]
1004935c:	and    DWORD PTR [eax+0x70],0xfffffffd
10049360:	or     eax,0xffffffff
10049363:	jmp    0x10049bbf
10049368:	xor    esi,esi
1004936a:	cmp    edi,esi
1004936c:	jne    0x10049380
1004936e:	call   0x10046b55
10049373:	push   esi
10049374:	push   esi
10049375:	push   esi
10049376:	push   esi
10049377:	mov    DWORD PTR [eax],0x16
1004937d:	push   esi
1004937e:	jmp    0x1004934b
10049380:	movzx  ecx,WORD PTR [edi]
10049383:	cmp    cx,si
10049386:	mov    DWORD PTR [ebp-0x2c],esi
10049389:	mov    DWORD PTR [ebp-0x20],esi
1004938c:	mov    DWORD PTR [ebp-0x40],esi
1004938f:	mov    DWORD PTR [ebp-0x64],esi
10049392:	mov    DWORD PTR [ebp-0x28],ecx
10049395:	je     0x10049baf
1004939b:	push   0x2
1004939d:	pop    esi
1004939e:	add    edi,esi
100493a0:	xor    eax,eax
100493a2:	cmp    DWORD PTR [ebp-0x2c],eax
100493a5:	mov    DWORD PTR [ebp-0x6c],edi
100493a8:	jl     0x10049b9f
100493ae:	lea    edx,[ecx-0x20]
100493b1:	cmp    dx,0x58
100493b5:	ja     0x100493c4
100493b7:	movzx  eax,cx
100493ba:	movzx  eax,BYTE PTR [eax+0x10067458]
100493c1:	and    eax,0xf
100493c4:	mov    edx,DWORD PTR [ebp-0x40]
100493c7:	imul   eax,eax,0x9
100493ca:	movzx  eax,BYTE PTR [eax+edx*1+0x10067478]
100493d2:	push   0x8
100493d4:	shr    eax,0x4
100493d7:	pop    edx
100493d8:	cmp    eax,edx
100493da:	mov    DWORD PTR [ebp-0x40],eax
100493dd:	je     0x10049339
100493e3:	cmp    eax,0x7
100493e6:	ja     0x10049b87
100493ec:	jmp    DWORD PTR [eax*4+0x10049bda]
100493f3:	xor    eax,eax
100493f5:	or     DWORD PTR [ebp-0x18],0xffffffff
100493f9:	mov    DWORD PTR [ebp-0x68],eax
100493fc:	mov    DWORD PTR [ebp-0x5c],eax
100493ff:	mov    DWORD PTR [ebp-0x38],eax
10049402:	mov    DWORD PTR [ebp-0x30],eax
10049405:	mov    DWORD PTR [ebp-0x14],eax
10049408:	mov    DWORD PTR [ebp-0x34],eax
1004940b:	jmp    0x10049b8d
10049410:	movzx  eax,cx
10049413:	sub    eax,0x20
10049416:	je     0x10049454
10049418:	sub    eax,0x3
1004941b:	je     0x10049448
1004941d:	sub    eax,edx
1004941f:	je     0x1004943f
10049421:	sub    eax,esi
10049423:	je     0x10049436
10049425:	sub    eax,0x3
10049428:	jne    0x10049b87
1004942e:	or     DWORD PTR [ebp-0x14],edx
10049431:	jmp    0x10049b8d
10049436:	or     DWORD PTR [ebp-0x14],0x4
1004943a:	jmp    0x10049b8d
1004943f:	or     DWORD PTR [ebp-0x14],0x1
10049443:	jmp    0x10049b8d
10049448:	or     DWORD PTR [ebp-0x14],0x80
1004944f:	jmp    0x10049b8d
10049454:	or     DWORD PTR [ebp-0x14],esi
10049457:	jmp    0x10049b8d
1004945c:	cmp    cx,0x2a
10049460:	jne    0x10049481
10049462:	mov    eax,DWORD PTR [ebx]
10049464:	add    ebx,0x4
10049467:	test   eax,eax
10049469:	mov    DWORD PTR [ebp-0x24],ebx
1004946c:	mov    DWORD PTR [ebp-0x38],eax
1004946f:	jge    0x10049b8d
10049475:	or     DWORD PTR [ebp-0x14],0x4
10049479:	neg    DWORD PTR [ebp-0x38]
1004947c:	jmp    0x10049b8d
10049481:	mov    eax,DWORD PTR [ebp-0x38]
10049484:	imul   eax,eax,0xa
10049487:	movzx  ecx,cx
1004948a:	lea    eax,[eax+ecx*1-0x30]
1004948e:	mov    DWORD PTR [ebp-0x38],eax
10049491:	jmp    0x10049b8d
10049496:	and    DWORD PTR [ebp-0x18],0x0
1004949a:	jmp    0x10049b8d
1004949f:	cmp    cx,0x2a
100494a3:	jne    0x100494c1
100494a5:	mov    eax,DWORD PTR [ebx]
100494a7:	add    ebx,0x4
100494aa:	test   eax,eax
100494ac:	mov    DWORD PTR [ebp-0x24],ebx
100494af:	mov    DWORD PTR [ebp-0x18],eax
100494b2:	jge    0x10049b8d
100494b8:	or     DWORD PTR [ebp-0x18],0xffffffff
100494bc:	jmp    0x10049b8d
100494c1:	mov    eax,DWORD PTR [ebp-0x18]
100494c4:	imul   eax,eax,0xa
100494c7:	movzx  ecx,cx
100494ca:	lea    eax,[eax+ecx*1-0x30]
100494ce:	mov    DWORD PTR [ebp-0x18],eax
100494d1:	jmp    0x10049b8d
100494d6:	movzx  eax,cx
100494d9:	cmp    eax,0x49
100494dc:	je     0x10049523
100494de:	cmp    eax,0x68
100494e1:	je     0x1004951a
100494e3:	cmp    eax,0x6c
100494e6:	je     0x100494fd
100494e8:	cmp    eax,0x77
100494eb:	jne    0x10049b8d
100494f1:	or     DWORD PTR [ebp-0x14],0x800
100494f8:	jmp    0x10049b8d
100494fd:	cmp    WORD PTR [edi],0x6c
10049501:	jne    0x10049511
10049503:	add    edi,esi
10049505:	or     DWORD PTR [ebp-0x14],0x1000
1004950c:	jmp    0x10049b8d
10049511:	or     DWORD PTR [ebp-0x14],0x10
10049515:	jmp    0x10049b8d
1004951a:	or     DWORD PTR [ebp-0x14],0x20
1004951e:	jmp    0x10049b8d
10049523:	movzx  eax,WORD PTR [edi]
10049526:	cmp    ax,0x36
1004952a:	jne    0x10049542
1004952c:	cmp    WORD PTR [edi+0x2],0x34
10049531:	jne    0x10049542
10049533:	add    edi,0x4
10049536:	or     DWORD PTR [ebp-0x14],0x8000
1004953d:	jmp    0x10049b8d
10049542:	cmp    ax,0x33
10049546:	jne    0x1004955e
10049548:	cmp    WORD PTR [edi+0x2],0x32
1004954d:	jne    0x1004955e
1004954f:	add    edi,0x4
10049552:	and    DWORD PTR [ebp-0x14],0xffff7fff
10049559:	jmp    0x10049b8d
1004955e:	cmp    ax,0x64
10049562:	je     0x10049b8d
10049568:	cmp    ax,0x69
1004956c:	je     0x10049b8d
10049572:	cmp    ax,0x6f
10049576:	je     0x10049b8d
1004957c:	cmp    ax,0x75
10049580:	je     0x10049b8d
10049586:	cmp    ax,0x78
1004958a:	je     0x10049b8d
10049590:	cmp    ax,0x58
10049594:	je     0x10049b8d
1004959a:	and    DWORD PTR [ebp-0x40],0x0
1004959e:	mov    eax,DWORD PTR [ebp-0x48]
100495a1:	push   ecx
100495a2:	lea    esi,[ebp-0x2c]
100495a5:	mov    DWORD PTR [ebp-0x34],0x1
100495ac:	call   0x1004892d
100495b1:	pop    ecx
100495b2:	jmp    0x10049b8d
100495b7:	movzx  eax,cx
100495ba:	cmp    eax,0x64
100495bd:	jg     0x1004976b
100495c3:	je     0x100497e6
100495c9:	cmp    eax,0x53
100495cc:	jg     0x100496a9
100495d2:	je     0x10049633
100495d4:	sub    eax,0x41
100495d7:	je     0x100495e9
100495d9:	sub    eax,esi
100495db:	je     0x1004961e
100495dd:	sub    eax,esi
100495df:	je     0x100495e9
100495e1:	sub    eax,esi
100495e3:	jne    0x10049a6b
100495e9:	add    ecx,0x20
100495ec:	mov    DWORD PTR [ebp-0x68],0x1
100495f3:	mov    DWORD PTR [ebp-0x28],ecx
100495f6:	or     DWORD PTR [ebp-0x14],0x40
100495fa:	cmp    DWORD PTR [ebp-0x18],0x0
100495fe:	lea    esi,[ebp-0x10]
10049601:	mov    eax,0x200
10049606:	mov    DWORD PTR [ebp-0x1c],esi
10049609:	mov    DWORD PTR [ebp-0x20],eax
1004960c:	jge    0x1004980a
10049612:	mov    DWORD PTR [ebp-0x18],0x6
10049619:	jmp    0x1004985a
1004961e:	test   WORD PTR [ebp-0x14],0x830
10049624:	jne    0x100496c7
1004962a:	or     DWORD PTR [ebp-0x14],0x20
1004962e:	jmp    0x100496c7
10049633:	test   WORD PTR [ebp-0x14],0x830
10049639:	jne    0x1004963f
1004963b:	or     DWORD PTR [ebp-0x14],0x20
1004963f:	mov    edi,DWORD PTR [ebp-0x18]
10049642:	cmp    edi,0xffffffff
10049645:	jne    0x1004964c
10049647:	mov    edi,0x7fffffff
1004964c:	add    ebx,0x4
1004964f:	test   BYTE PTR [ebp-0x14],0x20
10049653:	mov    DWORD PTR [ebp-0x24],ebx
10049656:	mov    ebx,DWORD PTR [ebx-0x4]
10049659:	mov    DWORD PTR [ebp-0x1c],ebx
1004965c:	je     0x10049a3e
10049662:	test   ebx,ebx
10049664:	jne    0x1004966e
10049666:	mov    eax,ds:0x1007ed28
1004966b:	mov    DWORD PTR [ebp-0x1c],eax
1004966e:	and    DWORD PTR [ebp-0x20],0x0
10049672:	test   edi,edi
10049674:	mov    esi,DWORD PTR [ebp-0x1c]
10049677:	jle    0x10049a6b
1004967d:	mov    al,BYTE PTR [esi]
1004967f:	test   al,al
10049681:	je     0x10049a6b
10049687:	lea    ecx,[ebp-0x58]
1004968a:	movzx  eax,al
1004968d:	push   ecx
1004968e:	push   eax
1004968f:	call   0x1004b2bf
10049694:	test   eax,eax
10049696:	pop    ecx
10049697:	pop    ecx
10049698:	je     0x1004969b
1004969a:	inc    esi
1004969b:	inc    esi
1004969c:	inc    DWORD PTR [ebp-0x20]
1004969f:	cmp    DWORD PTR [ebp-0x20],edi
100496a2:	jl     0x1004967d
100496a4:	jmp    0x10049a6b
100496a9:	sub    eax,0x58
100496ac:	je     0x100498f1
100496b2:	sub    eax,esi
100496b4:	je     0x1004971e
100496b6:	sub    eax,0x7
100496b9:	je     0x100495f6
100496bf:	sub    eax,esi
100496c1:	jne    0x10049a6b
100496c7:	movzx  eax,WORD PTR [ebx]
100496ca:	add    ebx,0x4
100496cd:	xor    esi,esi
100496cf:	inc    esi
100496d0:	test   BYTE PTR [ebp-0x14],0x20
100496d4:	mov    DWORD PTR [ebp-0x34],esi
100496d7:	mov    DWORD PTR [ebp-0x24],ebx
100496da:	mov    DWORD PTR [ebp-0x70],eax
100496dd:	je     0x1004970c
100496df:	mov    BYTE PTR [ebp-0x44],al
100496e2:	lea    eax,[ebp-0x58]
100496e5:	push   eax
100496e6:	mov    eax,DWORD PTR [ebp-0x58]
100496e9:	mov    BYTE PTR [ebp-0x43],0x0
100496ed:	push   DWORD PTR [eax+0xac]
100496f3:	lea    eax,[ebp-0x44]
100496f6:	push   eax
100496f7:	lea    eax,[ebp-0x10]
100496fa:	push   eax
100496fb:	call   0x1004dd6f
10049700:	add    esp,0x10
10049703:	test   eax,eax
10049705:	jge    0x10049710
10049707:	mov    DWORD PTR [ebp-0x5c],esi
1004970a:	jmp    0x10049710
1004970c:	mov    WORD PTR [ebp-0x10],ax
10049710:	lea    eax,[ebp-0x10]
10049713:	mov    DWORD PTR [ebp-0x1c],eax
10049716:	mov    DWORD PTR [ebp-0x20],esi
10049719:	jmp    0x10049a6b
1004971e:	mov    eax,DWORD PTR [ebx]
10049720:	add    ebx,0x4
10049723:	test   eax,eax
10049725:	mov    DWORD PTR [ebp-0x24],ebx
10049728:	je     0x10049757
1004972a:	mov    ecx,DWORD PTR [eax+0x4]
1004972d:	test   ecx,ecx
1004972f:	je     0x10049757
10049731:	test   WORD PTR [ebp-0x14],0x800
10049737:	movsx  eax,WORD PTR [eax]
1004973a:	mov    DWORD PTR [ebp-0x1c],ecx
1004973d:	je     0x1004974e
1004973f:	cdq    
10049740:	sub    eax,edx
10049742:	mov    DWORD PTR [ebp-0x34],0x1
10049749:	jmp    0x10049a66
1004974e:	and    DWORD PTR [ebp-0x34],0x0
10049752:	jmp    0x10049a68
10049757:	mov    eax,ds:0x1007ed28
1004975c:	mov    DWORD PTR [ebp-0x1c],eax
1004975f:	push   eax
10049760:	call   0x10043010
10049765:	pop    ecx
10049766:	jmp    0x10049a68
1004976b:	cmp    eax,0x70
1004976e:	jg     0x100498fa
10049774:	je     0x100498ee
1004977a:	cmp    eax,0x65
1004977d:	jl     0x10049a6b
10049783:	cmp    eax,0x67
10049786:	jle    0x100495f6
1004978c:	cmp    eax,0x69
1004978f:	je     0x100497e6
10049791:	cmp    eax,0x6e
10049794:	je     0x100497b1
10049796:	cmp    eax,0x6f
10049799:	jne    0x10049a6b
1004979f:	test   BYTE PTR [ebp-0x14],0x80
100497a3:	mov    DWORD PTR [ebp-0x28],edx
100497a6:	je     0x100497f1
100497a8:	or     DWORD PTR [ebp-0x14],0x200
100497af:	jmp    0x100497f1
100497b1:	mov    esi,DWORD PTR [ebx]
100497b3:	add    ebx,0x4
100497b6:	mov    DWORD PTR [ebp-0x24],ebx
100497b9:	call   0x1004dd59
100497be:	test   eax,eax
100497c0:	je     0x10049339
100497c6:	test   BYTE PTR [ebp-0x14],0x20
100497ca:	je     0x100497d5
100497cc:	mov    ax,WORD PTR [ebp-0x2c]
100497d0:	mov    WORD PTR [esi],ax
100497d3:	jmp    0x100497da
100497d5:	mov    eax,DWORD PTR [ebp-0x2c]
100497d8:	mov    DWORD PTR [esi],eax
100497da:	mov    DWORD PTR [ebp-0x5c],0x1
100497e1:	jmp    0x10049b74
100497e6:	or     DWORD PTR [ebp-0x14],0x40
100497ea:	mov    DWORD PTR [ebp-0x28],0xa
100497f1:	test   WORD PTR [ebp-0x14],0x8000
100497f7:	je     0x10049944
100497fd:	add    ebx,edx
100497ff:	mov    eax,DWORD PTR [ebx-0x8]
10049802:	mov    edx,DWORD PTR [ebx-0x4]
10049805:	jmp    0x1004997d
1004980a:	jne    0x1004981b
1004980c:	cmp    cx,0x67
10049810:	jne    0x1004985a
10049812:	mov    DWORD PTR [ebp-0x18],0x1
10049819:	jmp    0x1004985a
1004981b:	cmp    DWORD PTR [ebp-0x18],eax
1004981e:	jle    0x10049823
10049820:	mov    DWORD PTR [ebp-0x18],eax
10049823:	cmp    DWORD PTR [ebp-0x18],0xa3
1004982a:	jle    0x1004985a
1004982c:	mov    edi,DWORD PTR [ebp-0x18]
1004982f:	add    edi,0x15d
10049835:	push   edi
10049836:	call   0x10047422
1004983b:	test   eax,eax
1004983d:	pop    ecx
1004983e:	mov    ecx,DWORD PTR [ebp-0x28]
10049841:	push   0x8
10049843:	mov    DWORD PTR [ebp-0x64],eax
10049846:	pop    edx
10049847:	je     0x10049853
10049849:	mov    DWORD PTR [ebp-0x1c],eax
1004984c:	mov    DWORD PTR [ebp-0x20],edi
1004984f:	mov    esi,eax
10049851:	jmp    0x1004985a
10049853:	mov    DWORD PTR [ebp-0x18],0xa3
1004985a:	add    ebx,edx
1004985c:	mov    eax,DWORD PTR [ebx-0x8]
1004985f:	mov    DWORD PTR [ebp-0x78],eax
10049862:	mov    eax,DWORD PTR [ebx-0x4]
10049865:	mov    DWORD PTR [ebp-0x74],eax
10049868:	lea    eax,[ebp-0x58]
1004986b:	push   eax
1004986c:	push   DWORD PTR [ebp-0x68]
1004986f:	movsx  eax,cl
10049872:	push   DWORD PTR [ebp-0x18]
10049875:	mov    DWORD PTR [ebp-0x24],ebx
10049878:	push   eax
10049879:	push   DWORD PTR [ebp-0x20]
1004987c:	lea    eax,[ebp-0x78]
1004987f:	push   esi
10049880:	push   eax
10049881:	push   DWORD PTR ds:0x1007ea98
10049887:	call   0x10046ef2
1004988c:	pop    ecx
1004988d:	call   eax
1004988f:	mov    ebx,DWORD PTR [ebp-0x14]
10049892:	add    esp,0x1c
10049895:	and    ebx,0x80
1004989b:	je     0x100498b8
1004989d:	cmp    DWORD PTR [ebp-0x18],0x0
100498a1:	jne    0x100498b8
100498a3:	lea    eax,[ebp-0x58]
100498a6:	push   eax
100498a7:	push   esi
100498a8:	push   DWORD PTR ds:0x1007eaa4
100498ae:	call   0x10046ef2
100498b3:	pop    ecx
100498b4:	call   eax
100498b6:	pop    ecx
100498b7:	pop    ecx
100498b8:	cmp    WORD PTR [ebp-0x28],0x67
100498bd:	jne    0x100498d8
100498bf:	test   ebx,ebx
100498c1:	jne    0x100498d8
100498c3:	lea    eax,[ebp-0x58]
100498c6:	push   eax
100498c7:	push   esi
100498c8:	push   DWORD PTR ds:0x1007eaa0
100498ce:	call   0x10046ef2
100498d3:	pop    ecx
100498d4:	call   eax
100498d6:	pop    ecx
100498d7:	pop    ecx
100498d8:	cmp    BYTE PTR [esi],0x2d
100498db:	jne    0x100498e8
100498dd:	or     DWORD PTR [ebp-0x14],0x100
100498e4:	inc    esi
100498e5:	mov    DWORD PTR [ebp-0x1c],esi
100498e8:	push   esi
100498e9:	jmp    0x10049760
100498ee:	mov    DWORD PTR [ebp-0x18],edx
100498f1:	mov    DWORD PTR [ebp-0x60],0x7
100498f8:	jmp    0x1004991b
100498fa:	sub    eax,0x73
100498fd:	je     0x1004963f
10049903:	sub    eax,esi
10049905:	je     0x100497ea
1004990b:	sub    eax,0x3
1004990e:	jne    0x10049a6b
10049914:	mov    DWORD PTR [ebp-0x60],0x27
1004991b:	test   BYTE PTR [ebp-0x14],0x80
1004991f:	mov    DWORD PTR [ebp-0x28],0x10
10049926:	je     0x100497f1
1004992c:	mov    eax,DWORD PTR [ebp-0x60]
1004992f:	add    eax,0x51
10049932:	mov    WORD PTR [ebp-0x3c],0x30
10049938:	mov    WORD PTR [ebp-0x3a],ax
1004993c:	mov    DWORD PTR [ebp-0x30],esi
1004993f:	jmp    0x100497f1
10049944:	test   WORD PTR [ebp-0x14],0x1000
1004994a:	jne    0x100497fd
10049950:	add    ebx,0x4
10049953:	test   BYTE PTR [ebp-0x14],0x20
10049957:	je     0x1004996f
10049959:	test   BYTE PTR [ebp-0x14],0x40
1004995d:	mov    DWORD PTR [ebp-0x24],ebx
10049960:	je     0x10049968
10049962:	movsx  eax,WORD PTR [ebx-0x4]
10049966:	jmp    0x1004996c
10049968:	movzx  eax,WORD PTR [ebx-0x4]
1004996c:	cdq    
1004996d:	jmp    0x10049980
1004996f:	test   BYTE PTR [ebp-0x14],0x40
10049973:	mov    eax,DWORD PTR [ebx-0x4]
10049976:	je     0x1004997b
10049978:	cdq    
10049979:	jmp    0x1004997d
1004997b:	xor    edx,edx
1004997d:	mov    DWORD PTR [ebp-0x24],ebx
10049980:	test   BYTE PTR [ebp-0x14],0x40
10049984:	je     0x1004999e
10049986:	test   edx,edx
10049988:	jg     0x1004999e
1004998a:	jl     0x10049990
1004998c:	test   eax,eax
1004998e:	jae    0x1004999e
10049990:	neg    eax
10049992:	adc    edx,0x0
10049995:	neg    edx
10049997:	or     DWORD PTR [ebp-0x14],0x100
1004999e:	test   WORD PTR [ebp-0x14],0x9000
100499a4:	mov    ebx,edx
100499a6:	mov    edi,eax
100499a8:	jne    0x100499ac
100499aa:	xor    ebx,ebx
100499ac:	cmp    DWORD PTR [ebp-0x18],0x0
100499b0:	jge    0x100499bb
100499b2:	mov    DWORD PTR [ebp-0x18],0x1
100499b9:	jmp    0x100499cc
100499bb:	and    DWORD PTR [ebp-0x14],0xfffffff7
100499bf:	mov    eax,0x200
100499c4:	cmp    DWORD PTR [ebp-0x18],eax
100499c7:	jle    0x100499cc
100499c9:	mov    DWORD PTR [ebp-0x18],eax
100499cc:	mov    eax,edi
100499ce:	or     eax,ebx
100499d0:	jne    0x100499d6
100499d2:	and    DWORD PTR [ebp-0x30],0x0
100499d6:	lea    esi,[ebp+0x1ef]
100499dc:	mov    eax,DWORD PTR [ebp-0x18]
100499df:	dec    DWORD PTR [ebp-0x18]
100499e2:	test   eax,eax
100499e4:	jg     0x100499ec
100499e6:	mov    eax,edi
100499e8:	or     eax,ebx
100499ea:	je     0x10049a10
100499ec:	mov    eax,DWORD PTR [ebp-0x28]
100499ef:	cdq    
100499f0:	push   edx
100499f1:	push   eax
100499f2:	push   ebx
100499f3:	push   edi
100499f4:	call   0x1004a9f0
100499f9:	add    ecx,0x30
100499fc:	cmp    ecx,0x39
100499ff:	mov    DWORD PTR [ebp-0x7c],ebx
10049a02:	mov    edi,eax
10049a04:	mov    ebx,edx
10049a06:	jle    0x10049a0b
10049a08:	add    ecx,DWORD PTR [ebp-0x60]
10049a0b:	mov    BYTE PTR [esi],cl
10049a0d:	dec    esi
10049a0e:	jmp    0x100499dc
10049a10:	lea    eax,[ebp+0x1ef]
10049a16:	sub    eax,esi
10049a18:	inc    esi
10049a19:	test   WORD PTR [ebp-0x14],0x200
10049a1f:	mov    DWORD PTR [ebp-0x20],eax
10049a22:	mov    DWORD PTR [ebp-0x1c],esi
10049a25:	je     0x10049a6b
10049a27:	test   eax,eax
10049a29:	je     0x10049a32
10049a2b:	mov    ecx,esi
10049a2d:	cmp    BYTE PTR [ecx],0x30
10049a30:	je     0x10049a6b
10049a32:	dec    DWORD PTR [ebp-0x1c]
10049a35:	mov    ecx,DWORD PTR [ebp-0x1c]
10049a38:	mov    BYTE PTR [ecx],0x30
10049a3b:	inc    eax
10049a3c:	jmp    0x10049a68
10049a3e:	test   ebx,ebx
10049a40:	jne    0x10049a4a
10049a42:	mov    eax,ds:0x1007ed2c
10049a47:	mov    DWORD PTR [ebp-0x1c],eax
10049a4a:	mov    eax,DWORD PTR [ebp-0x1c]
10049a4d:	mov    DWORD PTR [ebp-0x34],0x1
10049a54:	jmp    0x10049a5f
10049a56:	dec    edi
10049a57:	cmp    WORD PTR [eax],0x0
10049a5b:	je     0x10049a63
10049a5d:	add    eax,esi
10049a5f:	test   edi,edi
10049a61:	jne    0x10049a56
10049a63:	sub    eax,DWORD PTR [ebp-0x1c]
10049a66:	sar    eax,1
10049a68:	mov    DWORD PTR [ebp-0x20],eax
10049a6b:	cmp    DWORD PTR [ebp-0x5c],0x0
10049a6f:	jne    0x10049b74
10049a75:	mov    eax,DWORD PTR [ebp-0x14]
10049a78:	test   al,0x40
10049a7a:	je     0x10049aa7
10049a7c:	test   ax,0x100
10049a80:	je     0x10049a8a
10049a82:	mov    WORD PTR [ebp-0x3c],0x2d
10049a88:	jmp    0x10049aa0
10049a8a:	test   al,0x1
10049a8c:	je     0x10049a96
10049a8e:	mov    WORD PTR [ebp-0x3c],0x2b
10049a94:	jmp    0x10049aa0
10049a96:	test   al,0x2
10049a98:	je     0x10049aa7
10049a9a:	mov    WORD PTR [ebp-0x3c],0x20
10049aa0:	mov    DWORD PTR [ebp-0x30],0x1
10049aa7:	mov    ebx,DWORD PTR [ebp-0x38]
10049aaa:	mov    esi,DWORD PTR [ebp-0x20]
10049aad:	sub    ebx,esi
10049aaf:	sub    ebx,DWORD PTR [ebp-0x30]
10049ab2:	test   BYTE PTR [ebp-0x14],0xc
10049ab6:	jne    0x10049ac9
10049ab8:	push   DWORD PTR [ebp-0x48]
10049abb:	lea    eax,[ebp-0x2c]
10049abe:	push   ebx
10049abf:	push   0x20
10049ac1:	call   0x10049266
10049ac6:	add    esp,0xc
10049ac9:	push   DWORD PTR [ebp-0x30]
10049acc:	mov    edi,DWORD PTR [ebp-0x48]
10049acf:	lea    eax,[ebp-0x2c]
10049ad2:	lea    ecx,[ebp-0x3c]
10049ad5:	call   0x1004928b
10049ada:	test   BYTE PTR [ebp-0x14],0x8
10049ade:	pop    ecx
10049adf:	je     0x10049af6
10049ae1:	test   BYTE PTR [ebp-0x14],0x4
10049ae5:	jne    0x10049af6
10049ae7:	push   edi
10049ae8:	push   ebx
10049ae9:	push   0x30
10049aeb:	lea    eax,[ebp-0x2c]
10049aee:	call   0x10049266
10049af3:	add    esp,0xc
10049af6:	cmp    DWORD PTR [ebp-0x34],0x0
10049afa:	jne    0x10049b4a
10049afc:	test   esi,esi
10049afe:	jle    0x10049b4a
10049b00:	mov    edi,DWORD PTR [ebp-0x1c]
10049b03:	mov    DWORD PTR [ebp-0x28],esi
10049b06:	dec    DWORD PTR [ebp-0x28]
10049b09:	lea    eax,[ebp-0x58]
10049b0c:	push   eax
10049b0d:	mov    eax,DWORD PTR [ebp-0x58]
10049b10:	push   DWORD PTR [eax+0xac]
10049b16:	lea    eax,[ebp-0x70]
10049b19:	push   edi
10049b1a:	push   eax
10049b1b:	call   0x1004dd6f
10049b20:	add    esp,0x10
10049b23:	test   eax,eax
10049b25:	mov    DWORD PTR [ebp-0x7c],eax
10049b28:	jle    0x10049b44
10049b2a:	push   DWORD PTR [ebp-0x70]
10049b2d:	mov    eax,DWORD PTR [ebp-0x48]
10049b30:	lea    esi,[ebp-0x2c]
10049b33:	call   0x1004892d
10049b38:	add    edi,DWORD PTR [ebp-0x7c]
10049b3b:	cmp    DWORD PTR [ebp-0x28],0x0
10049b3f:	pop    ecx
10049b40:	jg     0x10049b06
10049b42:	jmp    0x10049b57
10049b44:	or     DWORD PTR [ebp-0x2c],0xffffffff
10049b48:	jmp    0x10049b57
10049b4a:	mov    ecx,DWORD PTR [ebp-0x1c]
10049b4d:	push   esi
10049b4e:	lea    eax,[ebp-0x2c]
10049b51:	call   0x1004928b
10049b56:	pop    ecx
10049b57:	cmp    DWORD PTR [ebp-0x2c],0x0
10049b5b:	jl     0x10049b74
10049b5d:	test   BYTE PTR [ebp-0x14],0x4
10049b61:	je     0x10049b74
10049b63:	push   DWORD PTR [ebp-0x48]
10049b66:	lea    eax,[ebp-0x2c]
10049b69:	push   ebx
10049b6a:	push   0x20
10049b6c:	call   0x10049266
10049b71:	add    esp,0xc
10049b74:	cmp    DWORD PTR [ebp-0x64],0x0
10049b78:	je     0x10049b87
10049b7a:	push   DWORD PTR [ebp-0x64]
10049b7d:	call   0x10043508
10049b82:	and    DWORD PTR [ebp-0x64],0x0
10049b86:	pop    ecx
10049b87:	mov    edi,DWORD PTR [ebp-0x6c]
10049b8a:	mov    ebx,DWORD PTR [ebp-0x24]
10049b8d:	movzx  eax,WORD PTR [edi]
10049b90:	test   ax,ax
10049b93:	mov    DWORD PTR [ebp-0x28],eax
10049b96:	je     0x10049b9f
10049b98:	mov    ecx,eax
10049b9a:	jmp    0x1004939b
10049b9f:	cmp    DWORD PTR [ebp-0x40],0x0
10049ba3:	je     0x10049baf
10049ba5:	cmp    DWORD PTR [ebp-0x40],0x7
10049ba9:	jne    0x10049339
10049baf:	cmp    BYTE PTR [ebp-0x4c],0x0
10049bb3:	je     0x10049bbc
10049bb5:	mov    eax,DWORD PTR [ebp-0x50]
10049bb8:	and    DWORD PTR [eax+0x70],0xfffffffd
10049bbc:	mov    eax,DWORD PTR [ebp-0x2c]
10049bbf:	mov    ecx,DWORD PTR [ebp+0x3f0]
10049bc5:	pop    edi
10049bc6:	pop    esi
10049bc7:	xor    ecx,ebp
10049bc9:	pop    ebx
10049bca:	call   0x10042e97
10049bcf:	add    ebp,0x3f4
10049bd5:	leave  
10049bd6:	ret    
10049bd7:	lea    ecx,[ecx+0x0]
10049bda:	sahf   
10049bdb:	xchg   ebp,eax
10049bdc:	add    al,0x10
10049bde:	repz xchg ebx,eax
10049be0:	add    al,0x10
10049be2:	adc    BYTE PTR [esp+eax*1+0x4945c10],dl
10049be9:	adc    BYTE PTR [esi-0x60effb6c],dl
10049bef:	xchg   esp,eax
10049bf0:	add    al,0x10
10049bf2:	(bad)  
10049bf3:	xchg   esp,eax
10049bf4:	add    al,0x10
10049bf6:	mov    bh,0x95
10049bf8:	add    al,0x10
10049bfa:	push   ecx
10049bfb:	push   ebx
10049bfc:	mov    ebx,DWORD PTR [esp+0xc]
10049c00:	push   esi
10049c01:	push   edi
10049c02:	xor    esi,esi
10049c04:	xor    edi,edi
10049c06:	cmp    ebx,DWORD PTR [edi*8+0x1007e2e8]
10049c0d:	je     0x10049c15
10049c0f:	inc    edi
10049c10:	cmp    edi,0x17
10049c13:	jl     0x10049c06
10049c15:	cmp    edi,0x17
10049c18:	jae    0x10049d95
10049c1e:	push   ebp
10049c1f:	push   0x3
10049c21:	call   0x1004eb62
10049c26:	cmp    eax,0x1
10049c29:	pop    ecx
10049c2a:	je     0x10049d61
10049c30:	push   0x3
10049c32:	call   0x1004eb62
10049c37:	test   eax,eax
10049c39:	pop    ecx
10049c3a:	jne    0x10049c49
10049c3c:	cmp    DWORD PTR ds:0x1007faa4,0x1
10049c43:	je     0x10049d61
10049c49:	cmp    ebx,0xfc
10049c4f:	je     0x10049d94
10049c55:	push   0x10066c28
10049c5a:	mov    ebx,0x314
10049c5f:	push   ebx
10049c60:	mov    ebp,0x1007ff98
10049c65:	push   ebp
10049c66:	call   0x10046b99
10049c6b:	add    esp,0xc
10049c6e:	test   eax,eax
10049c70:	je     0x10049c7f
10049c72:	push   esi
10049c73:	push   esi
10049c74:	push   esi
10049c75:	push   esi
10049c76:	push   esi
10049c77:	call   0x10043290
10049c7c:	add    esp,0x14
10049c7f:	push   0x104
10049c84:	mov    esi,0x1007ffb1
10049c89:	push   esi
10049c8a:	push   0x0
10049c8c:	mov    BYTE PTR ds:0x100800b5,0x0
10049c93:	call   DWORD PTR ds:0x100661d8
10049c99:	test   eax,eax
10049c9b:	jne    0x10049cc3
10049c9d:	push   0x10066c10
10049ca2:	push   0x2fb
10049ca7:	push   esi
10049ca8:	call   0x10046b99
10049cad:	add    esp,0xc
10049cb0:	test   eax,eax
10049cb2:	je     0x10049cc3
10049cb4:	xor    eax,eax
10049cb6:	push   eax
10049cb7:	push   eax
10049cb8:	push   eax
10049cb9:	push   eax
10049cba:	push   eax
10049cbb:	call   0x10043290
10049cc0:	add    esp,0x14
10049cc3:	push   esi
10049cc4:	call   0x10043010
10049cc9:	inc    eax
10049cca:	cmp    eax,0x3c
10049ccd:	pop    ecx
10049cce:	jbe    0x10049d08
10049cd0:	push   esi
10049cd1:	call   0x10043010
10049cd6:	sub    esi,0x3b
10049cd9:	add    eax,esi
10049cdb:	push   0x3
10049cdd:	mov    ecx,0x100802ac
10049ce2:	push   0x10066c0c
10049ce7:	sub    ecx,eax
10049ce9:	push   ecx
10049cea:	push   eax
10049ceb:	call   0x1004eaaf
10049cf0:	add    esp,0x14
10049cf3:	test   eax,eax
10049cf5:	je     0x10049d08
10049cf7:	xor    esi,esi
10049cf9:	push   esi
10049cfa:	push   esi
10049cfb:	push   esi
10049cfc:	push   esi
10049cfd:	push   esi
10049cfe:	call   0x10043290
10049d03:	add    esp,0x14
10049d06:	jmp    0x10049d0a
10049d08:	xor    esi,esi
10049d0a:	push   0x10066c08
10049d0f:	push   ebx
10049d10:	push   ebp
10049d11:	call   0x1004ea3e
10049d16:	add    esp,0xc
10049d19:	test   eax,eax
10049d1b:	je     0x10049d2a
10049d1d:	push   esi
10049d1e:	push   esi
10049d1f:	push   esi
10049d20:	push   esi
10049d21:	push   esi
10049d22:	call   0x10043290
10049d27:	add    esp,0x14
10049d2a:	push   DWORD PTR [edi*8+0x1007e2ec]
10049d31:	push   ebx
10049d32:	push   ebp
10049d33:	call   0x1004ea3e
10049d38:	add    esp,0xc
10049d3b:	test   eax,eax
10049d3d:	je     0x10049d4c
10049d3f:	push   esi
10049d40:	push   esi
10049d41:	push   esi
10049d42:	push   esi
10049d43:	push   esi
10049d44:	call   0x10043290
10049d49:	add    esp,0x14
10049d4c:	push   0x12010
10049d51:	push   0x10066be0
10049d56:	push   ebp
10049d57:	call   0x1004e8a0
10049d5c:	add    esp,0xc
10049d5f:	jmp    0x10049d94
10049d61:	push   0xfffffff4
10049d63:	call   DWORD PTR ds:0x100661d4
10049d69:	mov    ebp,eax
10049d6b:	cmp    ebp,esi
10049d6d:	je     0x10049d94
10049d6f:	cmp    ebp,0xffffffff
10049d72:	je     0x10049d94
10049d74:	push   0x0
10049d76:	lea    eax,[esp+0x14]
10049d7a:	push   eax
10049d7b:	lea    esi,[edi*8+0x1007e2ec]
10049d82:	push   DWORD PTR [esi]
10049d84:	call   0x10043010
10049d89:	pop    ecx
10049d8a:	push   eax
10049d8b:	push   DWORD PTR [esi]
10049d8d:	push   ebp
10049d8e:	call   DWORD PTR ds:0x100660b4
10049d94:	pop    ebp
10049d95:	pop    edi
10049d96:	pop    esi
10049d97:	pop    ebx
10049d98:	pop    ecx
10049d99:	ret    
10049d9a:	push   0x3
10049d9c:	call   0x1004eb62
10049da1:	cmp    eax,0x1
10049da4:	pop    ecx
10049da5:	je     0x10049dbc
10049da7:	push   0x3
10049da9:	call   0x1004eb62
10049dae:	test   eax,eax
10049db0:	pop    ecx
10049db1:	jne    0x10049dd2
10049db3:	cmp    DWORD PTR ds:0x1007faa4,0x1
10049dba:	jne    0x10049dd2
10049dbc:	push   0xfc
10049dc1:	call   0x10049bfa
10049dc6:	push   0xff
10049dcb:	call   0x10049bfa
10049dd0:	pop    ecx
10049dd1:	pop    ecx
10049dd2:	ret    
10049dd3:	int3   
10049dd4:	int3   
10049dd5:	int3   
10049dd6:	int3   
10049dd7:	int3   
10049dd8:	int3   
10049dd9:	int3   
10049dda:	int3   
10049ddb:	int3   
10049ddc:	int3   
10049ddd:	int3   
10049dde:	int3   
10049ddf:	int3   
10049de0:	push   ecx
10049de1:	lea    ecx,[esp+0x4]
10049de5:	sub    ecx,eax
10049de7:	sbb    eax,eax
10049de9:	not    eax
10049deb:	and    ecx,eax
10049ded:	mov    eax,esp
10049def:	and    eax,0xfffff000
10049df4:	cmp    ecx,eax
10049df6:	jb     0x10049e02
10049df8:	mov    eax,ecx
10049dfa:	pop    ecx
10049dfb:	xchg   esp,eax
10049dfc:	mov    eax,DWORD PTR [eax]
10049dfe:	mov    DWORD PTR [esp],eax
10049e01:	ret    
10049e02:	sub    eax,0x1000
10049e07:	test   DWORD PTR [eax],eax
10049e09:	jmp    0x10049df4
10049e0b:	push   ebp
10049e0c:	mov    ebp,esp
10049e0e:	sub    esp,0x8
10049e11:	mov    DWORD PTR [ebp-0x4],edi
10049e14:	mov    DWORD PTR [ebp-0x8],esi
10049e17:	mov    esi,DWORD PTR [ebp+0xc]
10049e1a:	mov    edi,DWORD PTR [ebp+0x8]
10049e1d:	mov    ecx,DWORD PTR [ebp+0x10]
10049e20:	shr    ecx,0x7
10049e23:	jmp    0x10049e2b
10049e25:	lea    ebx,[ebx+0x0]
10049e2b:	movdqa xmm0,XMMWORD PTR [esi]
10049e2f:	movdqa xmm1,XMMWORD PTR [esi+0x10]
10049e34:	movdqa xmm2,XMMWORD PTR [esi+0x20]
10049e39:	movdqa xmm3,XMMWORD PTR [esi+0x30]
10049e3e:	movdqa XMMWORD PTR [edi],xmm0
10049e42:	movdqa XMMWORD PTR [edi+0x10],xmm1
10049e47:	movdqa XMMWORD PTR [edi+0x20],xmm2
10049e4c:	movdqa XMMWORD PTR [edi+0x30],xmm3
10049e51:	movdqa xmm4,XMMWORD PTR [esi+0x40]
10049e56:	movdqa xmm5,XMMWORD PTR [esi+0x50]
10049e5b:	movdqa xmm6,XMMWORD PTR [esi+0x60]
10049e60:	movdqa xmm7,XMMWORD PTR [esi+0x70]
10049e65:	movdqa XMMWORD PTR [edi+0x40],xmm4
10049e6a:	movdqa XMMWORD PTR [edi+0x50],xmm5
10049e6f:	movdqa XMMWORD PTR [edi+0x60],xmm6
10049e74:	movdqa XMMWORD PTR [edi+0x70],xmm7
10049e79:	lea    esi,[esi+0x80]
10049e7f:	lea    edi,[edi+0x80]
10049e85:	dec    ecx
10049e86:	jne    0x10049e2b
10049e88:	mov    esi,DWORD PTR [ebp-0x8]
10049e8b:	mov    edi,DWORD PTR [ebp-0x4]
10049e8e:	mov    esp,ebp
10049e90:	pop    ebp
10049e91:	ret    
10049e92:	push   ebp
10049e93:	mov    ebp,esp
10049e95:	sub    esp,0x1c
10049e98:	mov    DWORD PTR [ebp-0xc],edi
10049e9b:	mov    DWORD PTR [ebp-0x8],esi
10049e9e:	mov    DWORD PTR [ebp-0x4],ebx
10049ea1:	mov    ebx,DWORD PTR [ebp+0xc]
10049ea4:	mov    eax,ebx
10049ea6:	cdq    
10049ea7:	mov    ecx,eax
10049ea9:	mov    eax,DWORD PTR [ebp+0x8]
10049eac:	xor    ecx,edx
10049eae:	sub    ecx,edx
10049eb0:	and    ecx,0xf
10049eb3:	xor    ecx,edx
10049eb5:	sub    ecx,edx
10049eb7:	cdq    
10049eb8:	mov    edi,eax
10049eba:	xor    edi,edx
10049ebc:	sub    edi,edx
10049ebe:	and    edi,0xf
10049ec1:	xor    edi,edx
10049ec3:	sub    edi,edx
10049ec5:	mov    edx,ecx
10049ec7:	or     edx,edi
10049ec9:	jne    0x10049f15
10049ecb:	mov    esi,DWORD PTR [ebp+0x10]
10049ece:	mov    ecx,esi
10049ed0:	and    ecx,0x7f
10049ed3:	mov    DWORD PTR [ebp-0x18],ecx
10049ed6:	cmp    esi,ecx
10049ed8:	je     0x10049eed
10049eda:	sub    esi,ecx
10049edc:	push   esi
10049edd:	push   ebx
10049ede:	push   eax
10049edf:	call   0x10049e0b
10049ee4:	add    esp,0xc
10049ee7:	mov    eax,DWORD PTR [ebp+0x8]
10049eea:	mov    ecx,DWORD PTR [ebp-0x18]
10049eed:	test   ecx,ecx
10049eef:	je     0x10049f68
10049ef1:	mov    ebx,DWORD PTR [ebp+0x10]
10049ef4:	mov    edx,DWORD PTR [ebp+0xc]
10049ef7:	add    edx,ebx
10049ef9:	sub    edx,ecx
10049efb:	mov    DWORD PTR [ebp-0x14],edx
10049efe:	add    ebx,eax
10049f00:	sub    ebx,ecx
10049f02:	mov    DWORD PTR [ebp-0x10],ebx
10049f05:	mov    esi,DWORD PTR [ebp-0x14]
10049f08:	mov    edi,DWORD PTR [ebp-0x10]
10049f0b:	mov    ecx,DWORD PTR [ebp-0x18]
10049f0e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10049f10:	mov    eax,DWORD PTR [ebp+0x8]
10049f13:	jmp    0x10049f68
10049f15:	cmp    ecx,edi
10049f17:	jne    0x10049f4e
10049f19:	neg    ecx
10049f1b:	add    ecx,0x10
10049f1e:	mov    DWORD PTR [ebp-0x1c],ecx
10049f21:	mov    esi,DWORD PTR [ebp+0xc]
10049f24:	mov    edi,DWORD PTR [ebp+0x8]
10049f27:	mov    ecx,DWORD PTR [ebp-0x1c]
10049f2a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10049f2c:	mov    ecx,DWORD PTR [ebp+0x8]
10049f2f:	add    ecx,DWORD PTR [ebp-0x1c]
10049f32:	mov    edx,DWORD PTR [ebp+0xc]
10049f35:	add    edx,DWORD PTR [ebp-0x1c]
10049f38:	mov    eax,DWORD PTR [ebp+0x10]
10049f3b:	sub    eax,DWORD PTR [ebp-0x1c]
10049f3e:	push   eax
10049f3f:	push   edx
10049f40:	push   ecx
10049f41:	call   0x10049e92
10049f46:	add    esp,0xc
10049f49:	mov    eax,DWORD PTR [ebp+0x8]
10049f4c:	jmp    0x10049f68
10049f4e:	mov    esi,DWORD PTR [ebp+0xc]
10049f51:	mov    edi,DWORD PTR [ebp+0x8]
10049f54:	mov    ecx,DWORD PTR [ebp+0x10]
10049f57:	mov    edx,ecx
10049f59:	shr    ecx,0x2
10049f5c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10049f5e:	mov    ecx,edx
10049f60:	and    ecx,0x3
10049f63:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10049f65:	mov    eax,DWORD PTR [ebp+0x8]
10049f68:	mov    ebx,DWORD PTR [ebp-0x4]
10049f6b:	mov    esi,DWORD PTR [ebp-0x8]
10049f6e:	mov    edi,DWORD PTR [ebp-0xc]
10049f71:	mov    esp,ebp
10049f73:	pop    ebp
10049f74:	ret    
10049f75:	and    DWORD PTR ds:0x10082580,0x0
10049f7c:	call   0x1004ebf8
10049f81:	mov    ds:0x10082580,eax
10049f86:	xor    eax,eax
10049f88:	ret    
10049f89:	sub    eax,0x3a4
10049f8e:	je     0x10049fb2
10049f90:	sub    eax,0x4
10049f93:	je     0x10049fac
10049f95:	sub    eax,0xd
10049f98:	je     0x10049fa6
10049f9a:	dec    eax
10049f9b:	je     0x10049fa0
10049f9d:	xor    eax,eax
10049f9f:	ret    
10049fa0:	mov    eax,0x404
10049fa5:	ret    
10049fa6:	mov    eax,0x412
10049fab:	ret    
10049fac:	mov    eax,0x804
10049fb1:	ret    
10049fb2:	mov    eax,0x411
10049fb7:	ret    
10049fb8:	push   ebx
10049fb9:	push   ebp
10049fba:	push   esi
10049fbb:	push   edi
10049fbc:	mov    ebp,0x101
10049fc1:	mov    esi,eax
10049fc3:	push   ebp
10049fc4:	xor    edi,edi
10049fc6:	lea    ebx,[esi+0x1c]
10049fc9:	push   edi
10049fca:	push   ebx
10049fcb:	call   0x10045c00
10049fd0:	mov    DWORD PTR [esi+0x4],edi
10049fd3:	mov    DWORD PTR [esi+0x8],edi
10049fd6:	mov    DWORD PTR [esi+0xc],edi
10049fd9:	xor    eax,eax
10049fdb:	lea    edi,[esi+0x10]
10049fde:	stos   DWORD PTR es:[edi],eax
10049fdf:	stos   DWORD PTR es:[edi],eax
10049fe0:	stos   DWORD PTR es:[edi],eax
10049fe1:	mov    eax,0x1007e3a0
10049fe6:	add    esp,0xc
10049fe9:	sub    eax,esi
10049feb:	mov    cl,BYTE PTR [eax+ebx*1]
10049fee:	mov    BYTE PTR [ebx],cl
10049ff0:	inc    ebx
10049ff1:	dec    ebp
10049ff2:	jne    0x10049feb
10049ff4:	lea    ecx,[esi+0x11d]
10049ffa:	mov    esi,0x100
10049fff:	mov    dl,BYTE PTR [ecx+eax*1]
1004a002:	mov    BYTE PTR [ecx],dl
1004a004:	inc    ecx
1004a005:	dec    esi
1004a006:	jne    0x10049fff
1004a008:	pop    edi
1004a009:	pop    esi
1004a00a:	pop    ebp
1004a00b:	pop    ebx
1004a00c:	ret    
1004a00d:	push   ebp
1004a00e:	lea    ebp,[esp-0x49c]
1004a015:	sub    esp,0x51c
1004a01b:	mov    eax,ds:0x1007e030
1004a020:	xor    eax,ebp
1004a022:	mov    DWORD PTR [ebp+0x498],eax
1004a028:	push   ebx
1004a029:	push   edi
1004a02a:	lea    eax,[ebp-0x7c]
1004a02d:	push   eax
1004a02e:	push   DWORD PTR [esi+0x4]
1004a031:	call   DWORD PTR ds:0x100661dc
1004a037:	test   eax,eax
1004a039:	mov    edi,0x100
1004a03e:	je     0x1004a133
1004a044:	xor    eax,eax
1004a046:	mov    BYTE PTR [ebp+eax*1+0x398],al
1004a04d:	inc    eax
1004a04e:	cmp    eax,edi
1004a050:	jb     0x1004a046
1004a052:	mov    al,BYTE PTR [ebp-0x76]
1004a055:	test   al,al
1004a057:	mov    BYTE PTR [ebp+0x398],0x20
1004a05e:	je     0x1004a08b
1004a060:	lea    ebx,[ebp-0x75]
1004a063:	movzx  ecx,al
1004a066:	movzx  eax,BYTE PTR [ebx]
1004a069:	cmp    ecx,eax
1004a06b:	ja     0x1004a083
1004a06d:	sub    eax,ecx
1004a06f:	inc    eax
1004a070:	push   eax
1004a071:	lea    edx,[ebp+ecx*1+0x398]
1004a078:	push   0x20
1004a07a:	push   edx
1004a07b:	call   0x10045c00
1004a080:	add    esp,0xc
1004a083:	inc    ebx
1004a084:	mov    al,BYTE PTR [ebx]
1004a086:	inc    ebx
1004a087:	test   al,al
1004a089:	jne    0x1004a063
1004a08b:	push   0x0
1004a08d:	push   DWORD PTR [esi+0xc]
1004a090:	lea    eax,[ebp-0x68]
1004a093:	push   DWORD PTR [esi+0x4]
1004a096:	push   eax
1004a097:	push   edi
1004a098:	lea    eax,[ebp+0x398]
1004a09e:	push   eax
1004a09f:	push   0x1
1004a0a1:	push   0x0
1004a0a3:	call   0x1004ee1d
1004a0a8:	xor    ebx,ebx
1004a0aa:	push   ebx
1004a0ab:	push   DWORD PTR [esi+0x4]
1004a0ae:	lea    eax,[ebp+0x298]
1004a0b4:	push   edi
1004a0b5:	push   eax
1004a0b6:	push   edi
1004a0b7:	lea    eax,[ebp+0x398]
1004a0bd:	push   eax
1004a0be:	push   edi
1004a0bf:	push   DWORD PTR [esi+0xc]
1004a0c2:	push   ebx
1004a0c3:	call   0x1004b27c
1004a0c8:	add    esp,0x44
1004a0cb:	push   ebx
1004a0cc:	push   DWORD PTR [esi+0x4]
1004a0cf:	lea    eax,[ebp+0x198]
1004a0d5:	push   edi
1004a0d6:	push   eax
1004a0d7:	push   edi
1004a0d8:	lea    eax,[ebp+0x398]
1004a0de:	push   eax
1004a0df:	push   0x200
1004a0e4:	push   DWORD PTR [esi+0xc]
1004a0e7:	push   ebx
1004a0e8:	call   0x1004b27c
1004a0ed:	add    esp,0x24
1004a0f0:	xor    eax,eax
1004a0f2:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
1004a0f7:	test   cl,0x1
1004a0fa:	je     0x1004a10a
1004a0fc:	or     BYTE PTR [esi+eax*1+0x1d],0x10
1004a101:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
1004a108:	jmp    0x1004a11b
1004a10a:	test   cl,0x2
1004a10d:	je     0x1004a124
1004a10f:	or     BYTE PTR [esi+eax*1+0x1d],0x20
1004a114:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
1004a11b:	mov    BYTE PTR [esi+eax*1+0x11d],cl
1004a122:	jmp    0x1004a12c
1004a124:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
1004a12c:	inc    eax
1004a12d:	cmp    eax,edi
1004a12f:	jb     0x1004a0f2
1004a131:	jmp    0x1004a180
1004a133:	lea    eax,[esi+0x11d]
1004a139:	mov    DWORD PTR [ebp-0x80],0xffffff9f
1004a140:	xor    ecx,ecx
1004a142:	sub    DWORD PTR [ebp-0x80],eax
1004a145:	mov    edx,DWORD PTR [ebp-0x80]
1004a148:	lea    eax,[esi+ecx*1+0x11d]
1004a14f:	add    edx,eax
1004a151:	lea    ebx,[edx+0x20]
1004a154:	cmp    ebx,0x19
1004a157:	ja     0x1004a165
1004a159:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
1004a15e:	mov    dl,cl
1004a160:	add    dl,0x20
1004a163:	jmp    0x1004a174
1004a165:	cmp    edx,0x19
1004a168:	ja     0x1004a178
1004a16a:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
1004a16f:	mov    dl,cl
1004a171:	sub    dl,0x20
1004a174:	mov    BYTE PTR [eax],dl
1004a176:	jmp    0x1004a17b
1004a178:	mov    BYTE PTR [eax],0x0
1004a17b:	inc    ecx
1004a17c:	cmp    ecx,edi
1004a17e:	jb     0x1004a145
1004a180:	mov    ecx,DWORD PTR [ebp+0x498]
1004a186:	pop    edi
1004a187:	xor    ecx,ebp
1004a189:	pop    ebx
1004a18a:	call   0x10042e97
1004a18f:	add    ebp,0x49c
1004a195:	leave  
1004a196:	ret    
1004a197:	push   0xc
1004a199:	push   0x10074748
1004a19e:	call   0x10046c94
1004a1a3:	call   0x100470fc
1004a1a8:	mov    edi,eax
1004a1aa:	mov    eax,ds:0x1007e8c4
1004a1af:	test   DWORD PTR [edi+0x70],eax
1004a1b2:	je     0x1004a1d1
1004a1b4:	cmp    DWORD PTR [edi+0x6c],0x0
1004a1b8:	je     0x1004a1d1
1004a1ba:	mov    esi,DWORD PTR [edi+0x68]
1004a1bd:	test   esi,esi
1004a1bf:	jne    0x1004a1c9
1004a1c1:	push   0x20
1004a1c3:	call   0x10047598
1004a1c8:	pop    ecx
1004a1c9:	mov    eax,esi
1004a1cb:	call   0x10046cd9
1004a1d0:	ret    
1004a1d1:	push   0xd
1004a1d3:	call   0x10047c9d
1004a1d8:	pop    ecx
1004a1d9:	and    DWORD PTR [ebp-0x4],0x0
1004a1dd:	mov    esi,DWORD PTR [edi+0x68]
1004a1e0:	mov    DWORD PTR [ebp-0x1c],esi
1004a1e3:	cmp    esi,DWORD PTR ds:0x1007e7c8
1004a1e9:	je     0x1004a221
1004a1eb:	test   esi,esi
1004a1ed:	je     0x1004a209
1004a1ef:	push   esi
1004a1f0:	call   DWORD PTR ds:0x100660ac
1004a1f6:	test   eax,eax
1004a1f8:	jne    0x1004a209
1004a1fa:	cmp    esi,0x1007e3a0
1004a200:	je     0x1004a209
1004a202:	push   esi
1004a203:	call   0x10043508
1004a208:	pop    ecx
1004a209:	mov    eax,ds:0x1007e7c8
1004a20e:	mov    DWORD PTR [edi+0x68],eax
1004a211:	mov    esi,DWORD PTR ds:0x1007e7c8
1004a217:	mov    DWORD PTR [ebp-0x1c],esi
1004a21a:	push   esi
1004a21b:	call   DWORD PTR ds:0x100660a4
1004a221:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004a228:	call   0x1004a232
1004a22d:	jmp    0x1004a1bd
1004a22f:	mov    esi,DWORD PTR [ebp-0x1c]
1004a232:	push   0xd
1004a234:	call   0x10047bc5
1004a239:	pop    ecx
1004a23a:	ret    
1004a23b:	push   ebp
1004a23c:	mov    ebp,esp
1004a23e:	sub    esp,0x10
1004a241:	push   ebx
1004a242:	xor    ebx,ebx
1004a244:	push   ebx
1004a245:	lea    ecx,[ebp-0x10]
1004a248:	call   0x100454e5
1004a24d:	cmp    esi,0xfffffffe
1004a250:	mov    DWORD PTR ds:0x100802ac,ebx
1004a256:	jne    0x1004a276
1004a258:	mov    DWORD PTR ds:0x100802ac,0x1
1004a262:	call   DWORD PTR ds:0x100661e4
1004a268:	cmp    BYTE PTR [ebp-0x4],bl
1004a26b:	je     0x1004a2b2
1004a26d:	mov    ecx,DWORD PTR [ebp-0x8]
1004a270:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004a274:	jmp    0x1004a2b2
1004a276:	cmp    esi,0xfffffffd
1004a279:	jne    0x1004a28d
1004a27b:	mov    DWORD PTR ds:0x100802ac,0x1
1004a285:	call   DWORD PTR ds:0x100661e0
1004a28b:	jmp    0x1004a268
1004a28d:	cmp    esi,0xfffffffc
1004a290:	jne    0x1004a2a4
1004a292:	mov    eax,DWORD PTR [ebp-0x10]
1004a295:	mov    eax,DWORD PTR [eax+0x4]
1004a298:	mov    DWORD PTR ds:0x100802ac,0x1
1004a2a2:	jmp    0x1004a268
1004a2a4:	cmp    BYTE PTR [ebp-0x4],bl
1004a2a7:	je     0x1004a2b0
1004a2a9:	mov    eax,DWORD PTR [ebp-0x8]
1004a2ac:	and    DWORD PTR [eax+0x70],0xfffffffd
1004a2b0:	mov    eax,esi
1004a2b2:	pop    ebx
1004a2b3:	leave  
1004a2b4:	ret    
1004a2b5:	push   ebp
1004a2b6:	mov    ebp,esp
1004a2b8:	sub    esp,0x20
1004a2bb:	mov    eax,ds:0x1007e030
1004a2c0:	xor    eax,ebp
1004a2c2:	mov    DWORD PTR [ebp-0x4],eax
1004a2c5:	push   ebx
1004a2c6:	mov    ebx,DWORD PTR [ebp+0xc]
1004a2c9:	push   esi
1004a2ca:	mov    esi,DWORD PTR [ebp+0x8]
1004a2cd:	push   edi
1004a2ce:	call   0x1004a23b
1004a2d3:	mov    edi,eax
1004a2d5:	xor    esi,esi
1004a2d7:	cmp    edi,esi
1004a2d9:	mov    DWORD PTR [ebp+0x8],edi
1004a2dc:	jne    0x1004a2ec
1004a2de:	mov    eax,ebx
1004a2e0:	call   0x10049fb8
1004a2e5:	xor    eax,eax
1004a2e7:	jmp    0x1004a451
1004a2ec:	mov    DWORD PTR [ebp-0x1c],esi
1004a2ef:	xor    eax,eax
1004a2f1:	cmp    DWORD PTR [eax+0x1007e7d0],edi
1004a2f7:	je     0x1004a360
1004a2f9:	inc    DWORD PTR [ebp-0x1c]
1004a2fc:	add    eax,0x30
1004a2ff:	cmp    eax,0xf0
1004a304:	jb     0x1004a2f1
1004a306:	lea    eax,[ebp-0x18]
1004a309:	push   eax
1004a30a:	push   edi
1004a30b:	call   DWORD PTR ds:0x100661dc
1004a311:	test   eax,eax
1004a313:	je     0x1004a442
1004a319:	push   0x101
1004a31e:	lea    eax,[ebx+0x1c]
1004a321:	push   esi
1004a322:	push   eax
1004a323:	call   0x10045c00
1004a328:	xor    edx,edx
1004a32a:	inc    edx
1004a32b:	add    esp,0xc
1004a32e:	cmp    DWORD PTR [ebp-0x18],edx
1004a331:	mov    DWORD PTR [ebx+0x4],edi
1004a334:	mov    DWORD PTR [ebx+0xc],esi
1004a337:	jbe    0x1004a435
1004a33d:	cmp    BYTE PTR [ebp-0x12],0x0
1004a341:	je     0x1004a416
1004a347:	lea    esi,[ebp-0x11]
1004a34a:	mov    cl,BYTE PTR [esi]
1004a34c:	test   cl,cl
1004a34e:	je     0x1004a416
1004a354:	movzx  eax,BYTE PTR [esi-0x1]
1004a358:	movzx  ecx,cl
1004a35b:	jmp    0x1004a406
1004a360:	push   0x101
1004a365:	lea    eax,[ebx+0x1c]
1004a368:	push   esi
1004a369:	push   eax
1004a36a:	call   0x10045c00
1004a36f:	mov    ecx,DWORD PTR [ebp-0x1c]
1004a372:	add    esp,0xc
1004a375:	imul   ecx,ecx,0x30
1004a378:	mov    DWORD PTR [ebp-0x20],esi
1004a37b:	lea    esi,[ecx+0x1007e7e0]
1004a381:	mov    DWORD PTR [ebp-0x1c],esi
1004a384:	jmp    0x1004a3b0
1004a386:	mov    al,BYTE PTR [esi+0x1]
1004a389:	test   al,al
1004a38b:	je     0x1004a3b5
1004a38d:	movzx  edi,BYTE PTR [esi]
1004a390:	movzx  eax,al
1004a393:	jmp    0x1004a3a7
1004a395:	mov    eax,DWORD PTR [ebp-0x20]
1004a398:	mov    al,BYTE PTR [eax+0x1007e7cc]
1004a39e:	or     BYTE PTR [ebx+edi*1+0x1d],al
1004a3a2:	movzx  eax,BYTE PTR [esi+0x1]
1004a3a6:	inc    edi
1004a3a7:	cmp    edi,eax
1004a3a9:	jbe    0x1004a395
1004a3ab:	mov    edi,DWORD PTR [ebp+0x8]
1004a3ae:	inc    esi
1004a3af:	inc    esi
1004a3b0:	cmp    BYTE PTR [esi],0x0
1004a3b3:	jne    0x1004a386
1004a3b5:	mov    esi,DWORD PTR [ebp-0x1c]
1004a3b8:	inc    DWORD PTR [ebp-0x20]
1004a3bb:	add    esi,0x8
1004a3be:	cmp    DWORD PTR [ebp-0x20],0x4
1004a3c2:	mov    DWORD PTR [ebp-0x1c],esi
1004a3c5:	jb     0x1004a3b0
1004a3c7:	mov    eax,edi
1004a3c9:	mov    DWORD PTR [ebx+0x4],edi
1004a3cc:	mov    DWORD PTR [ebx+0x8],0x1
1004a3d3:	call   0x10049f89
1004a3d8:	push   0x6
1004a3da:	mov    DWORD PTR [ebx+0xc],eax
1004a3dd:	lea    eax,[ebx+0x10]
1004a3e0:	lea    ecx,[ecx+0x1007e7d4]
1004a3e6:	pop    edx
1004a3e7:	mov    si,WORD PTR [ecx]
1004a3ea:	inc    ecx
1004a3eb:	mov    WORD PTR [eax],si
1004a3ee:	inc    ecx
1004a3ef:	inc    eax
1004a3f0:	inc    eax
1004a3f1:	dec    edx
1004a3f2:	jne    0x1004a3e7
1004a3f4:	mov    esi,ebx
1004a3f6:	call   0x1004a00d
1004a3fb:	jmp    0x1004a2e5
1004a400:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
1004a405:	inc    eax
1004a406:	cmp    eax,ecx
1004a408:	jbe    0x1004a400
1004a40a:	inc    esi
1004a40b:	inc    esi
1004a40c:	cmp    BYTE PTR [esi-0x1],0x0
1004a410:	jne    0x1004a34a
1004a416:	lea    eax,[ebx+0x1e]
1004a419:	mov    ecx,0xfe
1004a41e:	or     BYTE PTR [eax],0x8
1004a421:	inc    eax
1004a422:	dec    ecx
1004a423:	jne    0x1004a41e
1004a425:	mov    eax,DWORD PTR [ebx+0x4]
1004a428:	call   0x10049f89
1004a42d:	mov    DWORD PTR [ebx+0xc],eax
1004a430:	mov    DWORD PTR [ebx+0x8],edx
1004a433:	jmp    0x1004a438
1004a435:	mov    DWORD PTR [ebx+0x8],esi
1004a438:	xor    eax,eax
1004a43a:	lea    edi,[ebx+0x10]
1004a43d:	stos   DWORD PTR es:[edi],eax
1004a43e:	stos   DWORD PTR es:[edi],eax
1004a43f:	stos   DWORD PTR es:[edi],eax
1004a440:	jmp    0x1004a3f4
1004a442:	cmp    DWORD PTR ds:0x100802ac,esi
1004a448:	jne    0x1004a2de
1004a44e:	or     eax,0xffffffff
1004a451:	mov    ecx,DWORD PTR [ebp-0x4]
1004a454:	pop    edi
1004a455:	pop    esi
1004a456:	xor    ecx,ebp
1004a458:	pop    ebx
1004a459:	call   0x10042e97
1004a45e:	leave  
1004a45f:	ret    
1004a460:	push   0x14
1004a462:	push   0x10074768
1004a467:	call   0x10046c94
1004a46c:	or     DWORD PTR [ebp-0x20],0xffffffff
1004a470:	call   0x100470fc
1004a475:	mov    edi,eax
1004a477:	mov    DWORD PTR [ebp-0x24],edi
1004a47a:	call   0x1004a197
1004a47f:	mov    ebx,DWORD PTR [edi+0x68]
1004a482:	mov    esi,DWORD PTR [ebp+0x8]
1004a485:	call   0x1004a23b
1004a48a:	mov    DWORD PTR [ebp+0x8],eax
1004a48d:	cmp    eax,DWORD PTR [ebx+0x4]
1004a490:	je     0x1004a5ed
1004a496:	push   0x220
1004a49b:	call   0x10047422
1004a4a0:	pop    ecx
1004a4a1:	mov    ebx,eax
1004a4a3:	test   ebx,ebx
1004a4a5:	je     0x1004a5f1
1004a4ab:	mov    ecx,0x88
1004a4b0:	mov    esi,DWORD PTR [edi+0x68]
1004a4b3:	mov    edi,ebx
1004a4b5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004a4b7:	and    DWORD PTR [ebx],0x0
1004a4ba:	push   ebx
1004a4bb:	push   DWORD PTR [ebp+0x8]
1004a4be:	call   0x1004a2b5
1004a4c3:	pop    ecx
1004a4c4:	pop    ecx
1004a4c5:	mov    DWORD PTR [ebp-0x20],eax
1004a4c8:	test   eax,eax
1004a4ca:	jne    0x1004a5cc
1004a4d0:	mov    esi,DWORD PTR [ebp-0x24]
1004a4d3:	push   DWORD PTR [esi+0x68]
1004a4d6:	call   DWORD PTR ds:0x100660ac
1004a4dc:	test   eax,eax
1004a4de:	jne    0x1004a4f1
1004a4e0:	mov    eax,DWORD PTR [esi+0x68]
1004a4e3:	cmp    eax,0x1007e3a0
1004a4e8:	je     0x1004a4f1
1004a4ea:	push   eax
1004a4eb:	call   0x10043508
1004a4f0:	pop    ecx
1004a4f1:	mov    DWORD PTR [esi+0x68],ebx
1004a4f4:	push   ebx
1004a4f5:	mov    edi,DWORD PTR ds:0x100660a4
1004a4fb:	call   edi
1004a4fd:	test   BYTE PTR [esi+0x70],0x2
1004a501:	jne    0x1004a5f1
1004a507:	test   BYTE PTR ds:0x1007e8c4,0x1
1004a50e:	jne    0x1004a5f1
1004a514:	push   0xd
1004a516:	call   0x10047c9d
1004a51b:	pop    ecx
1004a51c:	and    DWORD PTR [ebp-0x4],0x0
1004a520:	mov    eax,DWORD PTR [ebx+0x4]
1004a523:	mov    ds:0x100802bc,eax
1004a528:	mov    eax,DWORD PTR [ebx+0x8]
1004a52b:	mov    ds:0x100802c0,eax
1004a530:	mov    eax,DWORD PTR [ebx+0xc]
1004a533:	mov    ds:0x100802c4,eax
1004a538:	xor    eax,eax
1004a53a:	mov    DWORD PTR [ebp-0x1c],eax
1004a53d:	cmp    eax,0x5
1004a540:	jge    0x1004a552
1004a542:	mov    cx,WORD PTR [ebx+eax*2+0x10]
1004a547:	mov    WORD PTR [eax*2+0x100802b0],cx
1004a54f:	inc    eax
1004a550:	jmp    0x1004a53a
1004a552:	xor    eax,eax
1004a554:	mov    DWORD PTR [ebp-0x1c],eax
1004a557:	cmp    eax,0x101
1004a55c:	jge    0x1004a56b
1004a55e:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
1004a562:	mov    BYTE PTR [eax+0x1007e5c0],cl
1004a568:	inc    eax
1004a569:	jmp    0x1004a554
1004a56b:	xor    eax,eax
1004a56d:	mov    DWORD PTR [ebp-0x1c],eax
1004a570:	cmp    eax,0x100
1004a575:	jge    0x1004a587
1004a577:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
1004a57e:	mov    BYTE PTR [eax+0x1007e6c8],cl
1004a584:	inc    eax
1004a585:	jmp    0x1004a56d
1004a587:	push   DWORD PTR ds:0x1007e7c8
1004a58d:	call   DWORD PTR ds:0x100660ac
1004a593:	test   eax,eax
1004a595:	jne    0x1004a5aa
1004a597:	mov    eax,ds:0x1007e7c8
1004a59c:	cmp    eax,0x1007e3a0
1004a5a1:	je     0x1004a5aa
1004a5a3:	push   eax
1004a5a4:	call   0x10043508
1004a5a9:	pop    ecx
1004a5aa:	mov    DWORD PTR ds:0x1007e7c8,ebx
1004a5b0:	push   ebx
1004a5b1:	call   edi
1004a5b3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004a5ba:	call   0x1004a5c1
1004a5bf:	jmp    0x1004a5f1
1004a5c1:	push   0xd
1004a5c3:	call   0x10047bc5
1004a5c8:	pop    ecx
1004a5c9:	ret    
1004a5ca:	jmp    0x1004a5f1
1004a5cc:	cmp    eax,0xffffffff
1004a5cf:	jne    0x1004a5f1
1004a5d1:	cmp    ebx,0x1007e3a0
1004a5d7:	je     0x1004a5e0
1004a5d9:	push   ebx
1004a5da:	call   0x10043508
1004a5df:	pop    ecx
1004a5e0:	call   0x10046b55
1004a5e5:	mov    DWORD PTR [eax],0x16
1004a5eb:	jmp    0x1004a5f1
1004a5ed:	and    DWORD PTR [ebp-0x20],0x0
1004a5f1:	mov    eax,DWORD PTR [ebp-0x20]
1004a5f4:	call   0x10046cd9
1004a5f9:	ret    
1004a5fa:	cmp    DWORD PTR ds:0x100825b4,0x0
1004a601:	jne    0x1004a615
1004a603:	push   0xfffffffd
1004a605:	call   0x1004a460
1004a60a:	pop    ecx
1004a60b:	mov    DWORD PTR ds:0x100825b4,0x1
1004a615:	xor    eax,eax
1004a617:	ret    
1004a618:	push   ebx
1004a619:	push   ebp
1004a61a:	push   esi
1004a61b:	mov    esi,DWORD PTR [esp+0x10]
1004a61f:	mov    eax,DWORD PTR [esi+0xbc]
1004a625:	xor    ebp,ebp
1004a627:	cmp    eax,ebp
1004a629:	push   edi
1004a62a:	je     0x1004a69b
1004a62c:	cmp    eax,0x1007edf8
1004a631:	je     0x1004a69b
1004a633:	mov    eax,DWORD PTR [esi+0xb0]
1004a639:	cmp    eax,ebp
1004a63b:	je     0x1004a69b
1004a63d:	cmp    DWORD PTR [eax],ebp
1004a63f:	jne    0x1004a69b
1004a641:	mov    eax,DWORD PTR [esi+0xb8]
1004a647:	cmp    eax,ebp
1004a649:	je     0x1004a662
1004a64b:	cmp    DWORD PTR [eax],ebp
1004a64d:	jne    0x1004a662
1004a64f:	push   eax
1004a650:	call   0x10043508
1004a655:	push   DWORD PTR [esi+0xbc]
1004a65b:	call   0x1004f02d
1004a660:	pop    ecx
1004a661:	pop    ecx
1004a662:	mov    eax,DWORD PTR [esi+0xb4]
1004a668:	cmp    eax,ebp
1004a66a:	je     0x1004a683
1004a66c:	cmp    DWORD PTR [eax],ebp
1004a66e:	jne    0x1004a683
1004a670:	push   eax
1004a671:	call   0x10043508
1004a676:	push   DWORD PTR [esi+0xbc]
1004a67c:	call   0x1004efed
1004a681:	pop    ecx
1004a682:	pop    ecx
1004a683:	push   DWORD PTR [esi+0xb0]
1004a689:	call   0x10043508
1004a68e:	push   DWORD PTR [esi+0xbc]
1004a694:	call   0x10043508
1004a699:	pop    ecx
1004a69a:	pop    ecx
1004a69b:	mov    eax,DWORD PTR [esi+0xc0]
1004a6a1:	cmp    eax,ebp
1004a6a3:	je     0x1004a6e9
1004a6a5:	cmp    DWORD PTR [eax],ebp
1004a6a7:	jne    0x1004a6e9
1004a6a9:	mov    eax,DWORD PTR [esi+0xc4]
1004a6af:	sub    eax,0xfe
1004a6b4:	push   eax
1004a6b5:	call   0x10043508
1004a6ba:	mov    eax,DWORD PTR [esi+0xcc]
1004a6c0:	mov    edi,0x80
1004a6c5:	sub    eax,edi
1004a6c7:	push   eax
1004a6c8:	call   0x10043508
1004a6cd:	mov    eax,DWORD PTR [esi+0xd0]
1004a6d3:	sub    eax,edi
1004a6d5:	push   eax
1004a6d6:	call   0x10043508
1004a6db:	push   DWORD PTR [esi+0xc0]
1004a6e1:	call   0x10043508
1004a6e6:	add    esp,0x10
1004a6e9:	lea    edi,[esi+0xd4]
1004a6ef:	mov    eax,DWORD PTR [edi]
1004a6f1:	cmp    eax,0x1007ed38
1004a6f6:	je     0x1004a70f
1004a6f8:	cmp    DWORD PTR [eax+0xb4],ebp
1004a6fe:	jne    0x1004a70f
1004a700:	push   eax
1004a701:	call   0x1004ee5d
1004a706:	push   DWORD PTR [edi]
1004a708:	call   0x10043508
1004a70d:	pop    ecx
1004a70e:	pop    ecx
1004a70f:	push   0x6
1004a711:	lea    edi,[esi+0x50]
1004a714:	pop    ebx
1004a715:	cmp    DWORD PTR [edi-0x8],0x1007e8c8
1004a71c:	je     0x1004a72f
1004a71e:	mov    eax,DWORD PTR [edi]
1004a720:	cmp    eax,ebp
1004a722:	je     0x1004a72f
1004a724:	cmp    DWORD PTR [eax],ebp
1004a726:	jne    0x1004a72f
1004a728:	push   eax
1004a729:	call   0x10043508
1004a72e:	pop    ecx
1004a72f:	cmp    DWORD PTR [edi-0x4],ebp
1004a732:	je     0x1004a746
1004a734:	mov    eax,DWORD PTR [edi+0x4]
1004a737:	cmp    eax,ebp
1004a739:	je     0x1004a746
1004a73b:	cmp    DWORD PTR [eax],ebp
1004a73d:	jne    0x1004a746
1004a73f:	push   eax
1004a740:	call   0x10043508
1004a745:	pop    ecx
1004a746:	add    edi,0x10
1004a749:	dec    ebx
1004a74a:	jne    0x1004a715
1004a74c:	push   esi
1004a74d:	call   0x10043508
1004a752:	pop    ecx
1004a753:	pop    edi
1004a754:	pop    esi
1004a755:	pop    ebp
1004a756:	pop    ebx
1004a757:	ret    
1004a758:	push   ebx
1004a759:	push   ebp
1004a75a:	push   esi
1004a75b:	mov    esi,DWORD PTR [esp+0x10]
1004a75f:	push   edi
1004a760:	mov    edi,DWORD PTR ds:0x100660a4
1004a766:	push   esi
1004a767:	call   edi
1004a769:	mov    eax,DWORD PTR [esi+0xb0]
1004a76f:	test   eax,eax
1004a771:	je     0x1004a776
1004a773:	push   eax
1004a774:	call   edi
1004a776:	mov    eax,DWORD PTR [esi+0xb8]
1004a77c:	test   eax,eax
1004a77e:	je     0x1004a783
1004a780:	push   eax
1004a781:	call   edi
1004a783:	mov    eax,DWORD PTR [esi+0xb4]
1004a789:	test   eax,eax
1004a78b:	je     0x1004a790
1004a78d:	push   eax
1004a78e:	call   edi
1004a790:	mov    eax,DWORD PTR [esi+0xc0]
1004a796:	test   eax,eax
1004a798:	je     0x1004a79d
1004a79a:	push   eax
1004a79b:	call   edi
1004a79d:	push   0x6
1004a79f:	lea    ebx,[esi+0x50]
1004a7a2:	pop    ebp
1004a7a3:	cmp    DWORD PTR [ebx-0x8],0x1007e8c8
1004a7aa:	je     0x1004a7b5
1004a7ac:	mov    eax,DWORD PTR [ebx]
1004a7ae:	test   eax,eax
1004a7b0:	je     0x1004a7b5
1004a7b2:	push   eax
1004a7b3:	call   edi
1004a7b5:	cmp    DWORD PTR [ebx-0x4],0x0
1004a7b9:	je     0x1004a7c5
1004a7bb:	mov    eax,DWORD PTR [ebx+0x4]
1004a7be:	test   eax,eax
1004a7c0:	je     0x1004a7c5
1004a7c2:	push   eax
1004a7c3:	call   edi
1004a7c5:	add    ebx,0x10
1004a7c8:	dec    ebp
1004a7c9:	jne    0x1004a7a3
1004a7cb:	mov    eax,DWORD PTR [esi+0xd4]
1004a7d1:	add    eax,0xb4
1004a7d6:	push   eax
1004a7d7:	call   edi
1004a7d9:	pop    edi
1004a7da:	pop    esi
1004a7db:	pop    ebp
1004a7dc:	pop    ebx
1004a7dd:	ret    
1004a7de:	push   esi
1004a7df:	mov    esi,DWORD PTR [esp+0x8]
1004a7e3:	test   esi,esi
1004a7e5:	je     0x1004a866
1004a7e7:	push   ebx
1004a7e8:	push   ebp
1004a7e9:	push   edi
1004a7ea:	mov    edi,DWORD PTR ds:0x100660ac
1004a7f0:	push   esi
1004a7f1:	call   edi
1004a7f3:	mov    eax,DWORD PTR [esi+0xb0]
1004a7f9:	test   eax,eax
1004a7fb:	je     0x1004a800
1004a7fd:	push   eax
1004a7fe:	call   edi
1004a800:	mov    eax,DWORD PTR [esi+0xb8]
1004a806:	test   eax,eax
1004a808:	je     0x1004a80d
1004a80a:	push   eax
1004a80b:	call   edi
1004a80d:	mov    eax,DWORD PTR [esi+0xb4]
1004a813:	test   eax,eax
1004a815:	je     0x1004a81a
1004a817:	push   eax
1004a818:	call   edi
1004a81a:	mov    eax,DWORD PTR [esi+0xc0]
1004a820:	test   eax,eax
1004a822:	je     0x1004a827
1004a824:	push   eax
1004a825:	call   edi
1004a827:	push   0x6
1004a829:	lea    ebx,[esi+0x50]
1004a82c:	pop    ebp
1004a82d:	cmp    DWORD PTR [ebx-0x8],0x1007e8c8
1004a834:	je     0x1004a83f
1004a836:	mov    eax,DWORD PTR [ebx]
1004a838:	test   eax,eax
1004a83a:	je     0x1004a83f
1004a83c:	push   eax
1004a83d:	call   edi
1004a83f:	cmp    DWORD PTR [ebx-0x4],0x0
1004a843:	je     0x1004a84f
1004a845:	mov    eax,DWORD PTR [ebx+0x4]
1004a848:	test   eax,eax
1004a84a:	je     0x1004a84f
1004a84c:	push   eax
1004a84d:	call   edi
1004a84f:	add    ebx,0x10
1004a852:	dec    ebp
1004a853:	jne    0x1004a82d
1004a855:	mov    eax,DWORD PTR [esi+0xd4]
1004a85b:	add    eax,0xb4
1004a860:	push   eax
1004a861:	call   edi
1004a863:	pop    edi
1004a864:	pop    ebp
1004a865:	pop    ebx
1004a866:	mov    eax,esi
1004a868:	pop    esi
1004a869:	ret    
1004a86a:	test   edi,edi
1004a86c:	je     0x1004a8a5
1004a86e:	test   eax,eax
1004a870:	je     0x1004a8a5
1004a872:	push   esi
1004a873:	mov    esi,DWORD PTR [eax]
1004a875:	cmp    esi,edi
1004a877:	je     0x1004a8a1
1004a879:	push   edi
1004a87a:	mov    DWORD PTR [eax],edi
1004a87c:	call   0x1004a758
1004a881:	test   esi,esi
1004a883:	pop    ecx
1004a884:	je     0x1004a8a1
1004a886:	push   esi
1004a887:	call   0x1004a7de
1004a88c:	cmp    DWORD PTR [esi],0x0
1004a88f:	pop    ecx
1004a890:	jne    0x1004a8a1
1004a892:	cmp    esi,0x1007e8d0
1004a898:	je     0x1004a8a1
1004a89a:	push   esi
1004a89b:	call   0x1004a618
1004a8a0:	pop    ecx
1004a8a1:	mov    eax,edi
1004a8a3:	pop    esi
1004a8a4:	ret    
1004a8a5:	xor    eax,eax
1004a8a7:	ret    
1004a8a8:	push   0xc
1004a8aa:	push   0x10074788
1004a8af:	call   0x10046c94
1004a8b4:	call   0x100470fc
1004a8b9:	mov    esi,eax
1004a8bb:	mov    eax,ds:0x1007e8c4
1004a8c0:	test   DWORD PTR [esi+0x70],eax
1004a8c3:	je     0x1004a8e7
1004a8c5:	cmp    DWORD PTR [esi+0x6c],0x0
1004a8c9:	je     0x1004a8e7
1004a8cb:	call   0x100470fc
1004a8d0:	mov    esi,DWORD PTR [eax+0x6c]
1004a8d3:	test   esi,esi
1004a8d5:	jne    0x1004a8df
1004a8d7:	push   0x20
1004a8d9:	call   0x10047598
1004a8de:	pop    ecx
1004a8df:	mov    eax,esi
1004a8e1:	call   0x10046cd9
1004a8e6:	ret    
1004a8e7:	push   0xc
1004a8e9:	call   0x10047c9d
1004a8ee:	pop    ecx
1004a8ef:	and    DWORD PTR [ebp-0x4],0x0
1004a8f3:	lea    eax,[esi+0x6c]
1004a8f6:	mov    edi,DWORD PTR ds:0x1007e9a8
1004a8fc:	call   0x1004a86a
1004a901:	mov    DWORD PTR [ebp-0x1c],eax
1004a904:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004a90b:	call   0x1004a912
1004a910:	jmp    0x1004a8d3
1004a912:	push   0xc
1004a914:	call   0x10047bc5
1004a919:	pop    ecx
1004a91a:	mov    esi,DWORD PTR [ebp-0x1c]
1004a91d:	ret    
1004a91e:	int3   
1004a91f:	int3   
1004a920:	lea    eax,[edx-0x1]
1004a923:	pop    ebx
1004a924:	ret    
1004a925:	lea    esp,[esp+0x0]
1004a92c:	lea    esp,[esp+0x0]
1004a930:	xor    eax,eax
1004a932:	mov    al,BYTE PTR [esp+0x8]
1004a936:	push   ebx
1004a937:	mov    ebx,eax
1004a939:	shl    eax,0x8
1004a93c:	mov    edx,DWORD PTR [esp+0x8]
1004a940:	test   edx,0x3
1004a946:	je     0x1004a95d
1004a948:	mov    cl,BYTE PTR [edx]
1004a94a:	add    edx,0x1
1004a94d:	cmp    cl,bl
1004a94f:	je     0x1004a920
1004a951:	test   cl,cl
1004a953:	je     0x1004a9a6
1004a955:	test   edx,0x3
1004a95b:	jne    0x1004a948
1004a95d:	or     ebx,eax
1004a95f:	push   edi
1004a960:	mov    eax,ebx
1004a962:	shl    ebx,0x10
1004a965:	push   esi
1004a966:	or     ebx,eax
1004a968:	mov    ecx,DWORD PTR [edx]
1004a96a:	mov    edi,0x7efefeff
1004a96f:	mov    eax,ecx
1004a971:	mov    esi,edi
1004a973:	xor    ecx,ebx
1004a975:	add    esi,eax
1004a977:	add    edi,ecx
1004a979:	xor    ecx,0xffffffff
1004a97c:	xor    eax,0xffffffff
1004a97f:	xor    ecx,edi
1004a981:	xor    eax,esi
1004a983:	add    edx,0x4
1004a986:	and    ecx,0x81010100
1004a98c:	jne    0x1004a9aa
1004a98e:	and    eax,0x81010100
1004a993:	je     0x1004a968
1004a995:	and    eax,0x1010100
1004a99a:	jne    0x1004a9a4
1004a99c:	and    esi,0x80000000
1004a9a2:	jne    0x1004a968
1004a9a4:	pop    esi
1004a9a5:	pop    edi
1004a9a6:	pop    ebx
1004a9a7:	xor    eax,eax
1004a9a9:	ret    
1004a9aa:	mov    eax,DWORD PTR [edx-0x4]
1004a9ad:	cmp    al,bl
1004a9af:	je     0x1004a9e7
1004a9b1:	test   al,al
1004a9b3:	je     0x1004a9a4
1004a9b5:	cmp    ah,bl
1004a9b7:	je     0x1004a9e0
1004a9b9:	test   ah,ah
1004a9bb:	je     0x1004a9a4
1004a9bd:	shr    eax,0x10
1004a9c0:	cmp    al,bl
1004a9c2:	je     0x1004a9d9
1004a9c4:	test   al,al
1004a9c6:	je     0x1004a9a4
1004a9c8:	cmp    ah,bl
1004a9ca:	je     0x1004a9d2
1004a9cc:	test   ah,ah
1004a9ce:	je     0x1004a9a4
1004a9d0:	jmp    0x1004a968
1004a9d2:	pop    esi
1004a9d3:	pop    edi
1004a9d4:	lea    eax,[edx-0x1]
1004a9d7:	pop    ebx
1004a9d8:	ret    
1004a9d9:	lea    eax,[edx-0x2]
1004a9dc:	pop    esi
1004a9dd:	pop    edi
1004a9de:	pop    ebx
1004a9df:	ret    
1004a9e0:	lea    eax,[edx-0x3]
1004a9e3:	pop    esi
1004a9e4:	pop    edi
1004a9e5:	pop    ebx
1004a9e6:	ret    
1004a9e7:	lea    eax,[edx-0x4]
1004a9ea:	pop    esi
1004a9eb:	pop    edi
1004a9ec:	pop    ebx
1004a9ed:	ret    
1004a9ee:	int3   
1004a9ef:	int3   
1004a9f0:	push   esi
1004a9f1:	mov    eax,DWORD PTR [esp+0x14]
1004a9f5:	or     eax,eax
1004a9f7:	jne    0x1004aa21
1004a9f9:	mov    ecx,DWORD PTR [esp+0x10]
1004a9fd:	mov    eax,DWORD PTR [esp+0xc]
1004aa01:	xor    edx,edx
1004aa03:	div    ecx
1004aa05:	mov    ebx,eax
1004aa07:	mov    eax,DWORD PTR [esp+0x8]
1004aa0b:	div    ecx
1004aa0d:	mov    esi,eax
1004aa0f:	mov    eax,ebx
1004aa11:	mul    DWORD PTR [esp+0x10]
1004aa15:	mov    ecx,eax
1004aa17:	mov    eax,esi
1004aa19:	mul    DWORD PTR [esp+0x10]
1004aa1d:	add    edx,ecx
1004aa1f:	jmp    0x1004aa68
1004aa21:	mov    ecx,eax
1004aa23:	mov    ebx,DWORD PTR [esp+0x10]
1004aa27:	mov    edx,DWORD PTR [esp+0xc]
1004aa2b:	mov    eax,DWORD PTR [esp+0x8]
1004aa2f:	shr    ecx,1
1004aa31:	rcr    ebx,1
1004aa33:	shr    edx,1
1004aa35:	rcr    eax,1
1004aa37:	or     ecx,ecx
1004aa39:	jne    0x1004aa2f
1004aa3b:	div    ebx
1004aa3d:	mov    esi,eax
1004aa3f:	mul    DWORD PTR [esp+0x14]
1004aa43:	mov    ecx,eax
1004aa45:	mov    eax,DWORD PTR [esp+0x10]
1004aa49:	mul    esi
1004aa4b:	add    edx,ecx
1004aa4d:	jb     0x1004aa5d
1004aa4f:	cmp    edx,DWORD PTR [esp+0xc]
1004aa53:	ja     0x1004aa5d
1004aa55:	jb     0x1004aa66
1004aa57:	cmp    eax,DWORD PTR [esp+0x8]
1004aa5b:	jbe    0x1004aa66
1004aa5d:	dec    esi
1004aa5e:	sub    eax,DWORD PTR [esp+0x10]
1004aa62:	sbb    edx,DWORD PTR [esp+0x14]
1004aa66:	xor    ebx,ebx
1004aa68:	sub    eax,DWORD PTR [esp+0x8]
1004aa6c:	sbb    edx,DWORD PTR [esp+0xc]
1004aa70:	neg    edx
1004aa72:	neg    eax
1004aa74:	sbb    edx,0x0
1004aa77:	mov    ecx,edx
1004aa79:	mov    edx,ebx
1004aa7b:	mov    ebx,ecx
1004aa7d:	mov    ecx,eax
1004aa7f:	mov    eax,esi
1004aa81:	pop    esi
1004aa82:	ret    0x10
1004aa85:	push   ebp
1004aa86:	mov    ebp,esp
1004aa88:	sub    esp,0x4
1004aa8b:	mov    DWORD PTR [ebp-0x4],edi
1004aa8e:	mov    edi,DWORD PTR [ebp+0x8]
1004aa91:	mov    ecx,DWORD PTR [ebp+0xc]
1004aa94:	shr    ecx,0x7
1004aa97:	pxor   xmm0,xmm0
1004aa9b:	jmp    0x1004aaa5
1004aa9d:	lea    esp,[esp+0x0]
1004aaa4:	nop
1004aaa5:	movdqa XMMWORD PTR [edi],xmm0
1004aaa9:	movdqa XMMWORD PTR [edi+0x10],xmm0
1004aaae:	movdqa XMMWORD PTR [edi+0x20],xmm0
1004aab3:	movdqa XMMWORD PTR [edi+0x30],xmm0
1004aab8:	movdqa XMMWORD PTR [edi+0x40],xmm0
1004aabd:	movdqa XMMWORD PTR [edi+0x50],xmm0
1004aac2:	movdqa XMMWORD PTR [edi+0x60],xmm0
1004aac7:	movdqa XMMWORD PTR [edi+0x70],xmm0
1004aacc:	lea    edi,[edi+0x80]
1004aad2:	dec    ecx
1004aad3:	jne    0x1004aaa5
1004aad5:	mov    edi,DWORD PTR [ebp-0x4]
1004aad8:	mov    esp,ebp
1004aada:	pop    ebp
1004aadb:	ret    
1004aadc:	push   ebp
1004aadd:	mov    ebp,esp
1004aadf:	sub    esp,0x10
1004aae2:	mov    DWORD PTR [ebp-0x4],edi
1004aae5:	mov    eax,DWORD PTR [ebp+0x8]
1004aae8:	cdq    
1004aae9:	mov    edi,eax
1004aaeb:	xor    edi,edx
1004aaed:	sub    edi,edx
1004aaef:	and    edi,0xf
1004aaf2:	xor    edi,edx
1004aaf4:	sub    edi,edx
1004aaf6:	test   edi,edi
1004aaf8:	jne    0x1004ab36
1004aafa:	mov    ecx,DWORD PTR [ebp+0x10]
1004aafd:	mov    edx,ecx
1004aaff:	and    edx,0x7f
1004ab02:	mov    DWORD PTR [ebp-0xc],edx
1004ab05:	cmp    ecx,edx
1004ab07:	je     0x1004ab1b
1004ab09:	sub    ecx,edx
1004ab0b:	push   ecx
1004ab0c:	push   eax
1004ab0d:	call   0x1004aa85
1004ab12:	add    esp,0x8
1004ab15:	mov    eax,DWORD PTR [ebp+0x8]
1004ab18:	mov    edx,DWORD PTR [ebp-0xc]
1004ab1b:	test   edx,edx
1004ab1d:	je     0x1004ab64
1004ab1f:	add    eax,DWORD PTR [ebp+0x10]
1004ab22:	sub    eax,edx
1004ab24:	mov    DWORD PTR [ebp-0x8],eax
1004ab27:	xor    eax,eax
1004ab29:	mov    edi,DWORD PTR [ebp-0x8]
1004ab2c:	mov    ecx,DWORD PTR [ebp-0xc]
1004ab2f:	rep stos BYTE PTR es:[edi],al
1004ab31:	mov    eax,DWORD PTR [ebp+0x8]
1004ab34:	jmp    0x1004ab64
1004ab36:	neg    edi
1004ab38:	add    edi,0x10
1004ab3b:	mov    DWORD PTR [ebp-0x10],edi
1004ab3e:	xor    eax,eax
1004ab40:	mov    edi,DWORD PTR [ebp+0x8]
1004ab43:	mov    ecx,DWORD PTR [ebp-0x10]
1004ab46:	rep stos BYTE PTR es:[edi],al
1004ab48:	mov    eax,DWORD PTR [ebp-0x10]
1004ab4b:	mov    ecx,DWORD PTR [ebp+0x8]
1004ab4e:	mov    edx,DWORD PTR [ebp+0x10]
1004ab51:	add    ecx,eax
1004ab53:	sub    edx,eax
1004ab55:	push   edx
1004ab56:	push   0x0
1004ab58:	push   ecx
1004ab59:	call   0x1004aadc
1004ab5e:	add    esp,0xc
1004ab61:	mov    eax,DWORD PTR [ebp+0x8]
1004ab64:	mov    edi,DWORD PTR [ebp-0x4]
1004ab67:	mov    esp,ebp
1004ab69:	pop    ebp
1004ab6a:	ret    
1004ab6b:	push   ebp
1004ab6c:	lea    ebp,[esp-0x2a8]
1004ab73:	sub    esp,0x328
1004ab79:	mov    eax,ds:0x1007e030
1004ab7e:	xor    eax,ebp
1004ab80:	mov    DWORD PTR [ebp+0x2a4],eax
1004ab86:	test   BYTE PTR ds:0x1007e9c0,0x1
1004ab8d:	push   esi
1004ab8e:	je     0x1004ab98
1004ab90:	push   0xa
1004ab92:	call   0x10049bfa
1004ab97:	pop    ecx
1004ab98:	call   0x1004c3ba
1004ab9d:	test   eax,eax
1004ab9f:	je     0x1004aba9
1004aba1:	push   0x16
1004aba3:	call   0x1004c3c7
1004aba8:	pop    ecx
1004aba9:	test   BYTE PTR ds:0x1007e9c0,0x2
1004abb0:	je     0x1004ac56
1004abb6:	mov    DWORD PTR [ebp+0x88],eax
1004abbc:	mov    DWORD PTR [ebp+0x84],ecx
1004abc2:	mov    DWORD PTR [ebp+0x80],edx
1004abc8:	mov    DWORD PTR [ebp+0x7c],ebx
1004abcb:	mov    DWORD PTR [ebp+0x78],esi
1004abce:	mov    DWORD PTR [ebp+0x74],edi
1004abd1:	data16 mov WORD PTR [ebp+0xa0],ss
1004abd8:	data16 mov WORD PTR [ebp+0x94],cs
1004abdf:	data16 mov WORD PTR [ebp+0x70],ds
1004abe3:	data16 mov WORD PTR [ebp+0x6c],es
1004abe7:	data16 mov WORD PTR [ebp+0x68],fs
1004abeb:	data16 mov WORD PTR [ebp+0x64],gs
1004abef:	pushf  
1004abf0:	pop    DWORD PTR [ebp+0x98]
1004abf6:	mov    esi,DWORD PTR [ebp+0x2ac]
1004abfc:	lea    eax,[ebp+0x2ac]
1004ac02:	mov    DWORD PTR [ebp+0x9c],eax
1004ac08:	mov    DWORD PTR [ebp-0x28],0x10001
1004ac0f:	mov    DWORD PTR [ebp+0x90],esi
1004ac15:	mov    eax,DWORD PTR [eax-0x4]
1004ac18:	push   0x50
1004ac1a:	mov    DWORD PTR [ebp+0x8c],eax
1004ac20:	lea    eax,[ebp-0x80]
1004ac23:	push   0x0
1004ac25:	push   eax
1004ac26:	call   0x10045c00
1004ac2b:	lea    eax,[ebp-0x80]
1004ac2e:	add    esp,0xc
1004ac31:	mov    DWORD PTR [ebp-0x30],eax
1004ac34:	lea    eax,[ebp-0x28]
1004ac37:	push   0x0
1004ac39:	mov    DWORD PTR [ebp-0x80],0x40000015
1004ac40:	mov    DWORD PTR [ebp-0x74],esi
1004ac43:	mov    DWORD PTR [ebp-0x2c],eax
1004ac46:	call   DWORD PTR ds:0x10066180
1004ac4c:	lea    eax,[ebp-0x30]
1004ac4f:	push   eax
1004ac50:	call   DWORD PTR ds:0x1006617c
1004ac56:	push   0x3
1004ac58:	call   0x10047814
1004ac5d:	int3   
1004ac5e:	mov    ecx,DWORD PTR [esp+0x8]
1004ac62:	mov    eax,ds:0x1007e9c0
1004ac67:	mov    edx,DWORD PTR [esp+0x4]
1004ac6b:	and    edx,DWORD PTR [esp+0x8]
1004ac6f:	not    ecx
1004ac71:	and    ecx,eax
1004ac73:	or     ecx,edx
1004ac75:	mov    DWORD PTR ds:0x1007e9c0,ecx
1004ac7b:	ret    
1004ac7c:	mov    eax,DWORD PTR [esp+0x4]
1004ac80:	mov    ds:0x100802f4,eax
1004ac85:	ret    
1004ac86:	push   ebp
1004ac87:	mov    ebp,esp
1004ac89:	sub    esp,0x14
1004ac8c:	push   esi
1004ac8d:	push   edi
1004ac8e:	push   DWORD PTR [ebp+0x8]
1004ac91:	lea    ecx,[ebp-0x14]
1004ac94:	call   0x100454e5
1004ac99:	mov    eax,DWORD PTR [ebp+0x10]
1004ac9c:	mov    esi,DWORD PTR [ebp+0xc]
1004ac9f:	xor    edi,edi
1004aca1:	cmp    eax,edi
1004aca3:	je     0x1004aca7
1004aca5:	mov    DWORD PTR [eax],esi
1004aca7:	cmp    esi,edi
1004aca9:	jne    0x1004acd7
1004acab:	call   0x10046b55
1004acb0:	push   edi
1004acb1:	push   edi
1004acb2:	push   edi
1004acb3:	push   edi
1004acb4:	push   edi
1004acb5:	mov    DWORD PTR [eax],0x16
1004acbb:	call   0x1004338c
1004acc0:	add    esp,0x14
1004acc3:	cmp    BYTE PTR [ebp-0x8],0x0
1004acc7:	je     0x1004acd0
1004acc9:	mov    eax,DWORD PTR [ebp-0xc]
1004accc:	and    DWORD PTR [eax+0x70],0xfffffffd
1004acd0:	xor    eax,eax
1004acd2:	jmp    0x1004aead
1004acd7:	cmp    DWORD PTR [ebp+0x14],edi
1004acda:	je     0x1004ace8
1004acdc:	cmp    DWORD PTR [ebp+0x14],0x2
1004ace0:	jl     0x1004acab
1004ace2:	cmp    DWORD PTR [ebp+0x14],0x24
1004ace6:	jg     0x1004acab
1004ace8:	mov    ecx,DWORD PTR [ebp-0x14]
1004aceb:	push   ebx
1004acec:	mov    bl,BYTE PTR [esi]
1004acee:	mov    DWORD PTR [ebp-0x4],edi
1004acf1:	lea    edi,[esi+0x1]
1004acf4:	cmp    DWORD PTR [ecx+0xac],0x1
1004acfb:	jle    0x1004ad14
1004acfd:	lea    eax,[ebp-0x14]
1004ad00:	push   eax
1004ad01:	movzx  eax,bl
1004ad04:	push   0x8
1004ad06:	push   eax
1004ad07:	call   0x1004b303
1004ad0c:	mov    ecx,DWORD PTR [ebp-0x14]
1004ad0f:	add    esp,0xc
1004ad12:	jmp    0x1004ad24
1004ad14:	mov    edx,DWORD PTR [ecx+0xc8]
1004ad1a:	movzx  eax,bl
1004ad1d:	movzx  eax,BYTE PTR [edx+eax*2]
1004ad21:	and    eax,0x8
1004ad24:	test   eax,eax
1004ad26:	je     0x1004ad2d
1004ad28:	mov    bl,BYTE PTR [edi]
1004ad2a:	inc    edi
1004ad2b:	jmp    0x1004acf4
1004ad2d:	cmp    bl,0x2d
1004ad30:	jne    0x1004ad38
1004ad32:	or     DWORD PTR [ebp+0x18],0x2
1004ad36:	jmp    0x1004ad3d
1004ad38:	cmp    bl,0x2b
1004ad3b:	jne    0x1004ad40
1004ad3d:	mov    bl,BYTE PTR [edi]
1004ad3f:	inc    edi
1004ad40:	mov    eax,DWORD PTR [ebp+0x14]
1004ad43:	test   eax,eax
1004ad45:	jl     0x1004ae94
1004ad4b:	cmp    eax,0x1
1004ad4e:	je     0x1004ae94
1004ad54:	cmp    eax,0x24
1004ad57:	jg     0x1004ae94
1004ad5d:	test   eax,eax
1004ad5f:	jne    0x1004ad8b
1004ad61:	cmp    bl,0x30
1004ad64:	je     0x1004ad6f
1004ad66:	mov    DWORD PTR [ebp+0x14],0xa
1004ad6d:	jmp    0x1004ada3
1004ad6f:	mov    al,BYTE PTR [edi]
1004ad71:	cmp    al,0x78
1004ad73:	je     0x1004ad82
1004ad75:	cmp    al,0x58
1004ad77:	je     0x1004ad82
1004ad79:	mov    DWORD PTR [ebp+0x14],0x8
1004ad80:	jmp    0x1004ada3
1004ad82:	mov    DWORD PTR [ebp+0x14],0x10
1004ad89:	jmp    0x1004ad95
1004ad8b:	cmp    eax,0x10
1004ad8e:	jne    0x1004ada3
1004ad90:	cmp    bl,0x30
1004ad93:	jne    0x1004ada3
1004ad95:	mov    al,BYTE PTR [edi]
1004ad97:	cmp    al,0x78
1004ad99:	je     0x1004ad9f
1004ad9b:	cmp    al,0x58
1004ad9d:	jne    0x1004ada3
1004ad9f:	inc    edi
1004ada0:	mov    bl,BYTE PTR [edi]
1004ada2:	inc    edi
1004ada3:	mov    esi,DWORD PTR [ecx+0xc8]
1004ada9:	or     eax,0xffffffff
1004adac:	xor    edx,edx
1004adae:	div    DWORD PTR [ebp+0x14]
1004adb1:	movzx  ecx,bl
1004adb4:	movzx  ecx,WORD PTR [esi+ecx*2]
1004adb8:	test   cl,0x4
1004adbb:	je     0x1004adc5
1004adbd:	movsx  ecx,bl
1004adc0:	sub    ecx,0x30
1004adc3:	jmp    0x1004addf
1004adc5:	test   cx,0x103
1004adca:	je     0x1004adfd
1004adcc:	mov    cl,bl
1004adce:	sub    cl,0x61
1004add1:	cmp    cl,0x19
1004add4:	movsx  ecx,bl
1004add7:	ja     0x1004addc
1004add9:	sub    ecx,0x20
1004addc:	add    ecx,0xffffffc9
1004addf:	cmp    ecx,DWORD PTR [ebp+0x14]
1004ade2:	jae    0x1004adfd
1004ade4:	or     DWORD PTR [ebp+0x18],0x8
1004ade8:	cmp    DWORD PTR [ebp-0x4],eax
1004adeb:	jb     0x1004ae14
1004aded:	jne    0x1004adf3
1004adef:	cmp    ecx,edx
1004adf1:	jbe    0x1004ae14
1004adf3:	or     DWORD PTR [ebp+0x18],0x4
1004adf7:	cmp    DWORD PTR [ebp+0x10],0x0
1004adfb:	jne    0x1004ae20
1004adfd:	mov    eax,DWORD PTR [ebp+0x18]
1004ae00:	dec    edi
1004ae01:	test   al,0x8
1004ae03:	jne    0x1004ae25
1004ae05:	cmp    DWORD PTR [ebp+0x10],0x0
1004ae09:	je     0x1004ae0e
1004ae0b:	mov    edi,DWORD PTR [ebp+0xc]
1004ae0e:	and    DWORD PTR [ebp-0x4],0x0
1004ae12:	jmp    0x1004ae70
1004ae14:	mov    ebx,DWORD PTR [ebp-0x4]
1004ae17:	imul   ebx,DWORD PTR [ebp+0x14]
1004ae1b:	add    ebx,ecx
1004ae1d:	mov    DWORD PTR [ebp-0x4],ebx
1004ae20:	mov    bl,BYTE PTR [edi]
1004ae22:	inc    edi
1004ae23:	jmp    0x1004adb1
1004ae25:	test   al,0x4
1004ae27:	mov    esi,0x7fffffff
1004ae2c:	jne    0x1004ae49
1004ae2e:	test   al,0x1
1004ae30:	jne    0x1004ae70
1004ae32:	and    eax,0x2
1004ae35:	je     0x1004ae40
1004ae37:	cmp    DWORD PTR [ebp-0x4],0x80000000
1004ae3e:	ja     0x1004ae49
1004ae40:	test   eax,eax
1004ae42:	jne    0x1004ae70
1004ae44:	cmp    DWORD PTR [ebp-0x4],esi
1004ae47:	jbe    0x1004ae70
1004ae49:	call   0x10046b55
1004ae4e:	test   BYTE PTR [ebp+0x18],0x1
1004ae52:	mov    DWORD PTR [eax],0x22
1004ae58:	je     0x1004ae60
1004ae5a:	or     DWORD PTR [ebp-0x4],0xffffffff
1004ae5e:	jmp    0x1004ae70
1004ae60:	mov    al,BYTE PTR [ebp+0x18]
1004ae63:	and    al,0x2
1004ae65:	neg    al
1004ae67:	sbb    eax,eax
1004ae69:	neg    eax
1004ae6b:	add    eax,esi
1004ae6d:	mov    DWORD PTR [ebp-0x4],eax
1004ae70:	mov    eax,DWORD PTR [ebp+0x10]
1004ae73:	test   eax,eax
1004ae75:	je     0x1004ae79
1004ae77:	mov    DWORD PTR [eax],edi
1004ae79:	test   BYTE PTR [ebp+0x18],0x2
1004ae7d:	je     0x1004ae82
1004ae7f:	neg    DWORD PTR [ebp-0x4]
1004ae82:	cmp    BYTE PTR [ebp-0x8],0x0
1004ae86:	je     0x1004ae8f
1004ae88:	mov    eax,DWORD PTR [ebp-0xc]
1004ae8b:	and    DWORD PTR [eax+0x70],0xfffffffd
1004ae8f:	mov    eax,DWORD PTR [ebp-0x4]
1004ae92:	jmp    0x1004aeac
1004ae94:	mov    eax,DWORD PTR [ebp+0x10]
1004ae97:	test   eax,eax
1004ae99:	je     0x1004ae9d
1004ae9b:	mov    DWORD PTR [eax],esi
1004ae9d:	cmp    BYTE PTR [ebp-0x8],0x0
1004aea1:	je     0x1004aeaa
1004aea3:	mov    eax,DWORD PTR [ebp-0xc]
1004aea6:	and    DWORD PTR [eax+0x70],0xfffffffd
1004aeaa:	xor    eax,eax
1004aeac:	pop    ebx
1004aead:	pop    edi
1004aeae:	pop    esi
1004aeaf:	leave  
1004aeb0:	ret    
1004aeb1:	push   ebp
1004aeb2:	mov    ebp,esp
1004aeb4:	xor    eax,eax
1004aeb6:	cmp    DWORD PTR ds:0x100802c8,eax
1004aebc:	push   eax
1004aebd:	push   DWORD PTR [ebp+0x10]
1004aec0:	push   DWORD PTR [ebp+0xc]
1004aec3:	push   DWORD PTR [ebp+0x8]
1004aec6:	jne    0x1004aecf
1004aec8:	push   0x1007e9b0
1004aecd:	jmp    0x1004aed0
1004aecf:	push   eax
1004aed0:	call   0x1004ac86
1004aed5:	add    esp,0x14
1004aed8:	pop    ebp
1004aed9:	ret    
1004aeda:	push   ebp
1004aedb:	mov    ebp,esp
1004aedd:	sub    esp,0x14
1004aee0:	mov    eax,ds:0x1007e030
1004aee5:	xor    eax,ebp
1004aee7:	mov    DWORD PTR [ebp-0x4],eax
1004aeea:	push   ebx
1004aeeb:	push   esi
1004aeec:	xor    ebx,ebx
1004aeee:	cmp    DWORD PTR ds:0x100802f8,ebx
1004aef4:	push   edi
1004aef5:	mov    esi,ecx
1004aef7:	jne    0x1004af31
1004aef9:	push   ebx
1004aefa:	push   ebx
1004aefb:	xor    edi,edi
1004aefd:	inc    edi
1004aefe:	push   edi
1004aeff:	push   0x10066cc8
1004af04:	push   0x100
1004af09:	push   ebx
1004af0a:	call   DWORD PTR ds:0x100661ec
1004af10:	test   eax,eax
1004af12:	je     0x1004af1c
1004af14:	mov    DWORD PTR ds:0x100802f8,edi
1004af1a:	jmp    0x1004af31
1004af1c:	call   DWORD PTR ds:0x100660cc
1004af22:	cmp    eax,0x78
1004af25:	jne    0x1004af31
1004af27:	mov    DWORD PTR ds:0x100802f8,0x2
1004af31:	cmp    DWORD PTR [ebp+0x14],ebx
1004af34:	jle    0x1004af58
1004af36:	mov    ecx,DWORD PTR [ebp+0x14]
1004af39:	mov    eax,DWORD PTR [ebp+0x10]
1004af3c:	dec    ecx
1004af3d:	cmp    BYTE PTR [eax],bl
1004af3f:	je     0x1004af49
1004af41:	inc    eax
1004af42:	cmp    ecx,ebx
1004af44:	jne    0x1004af3c
1004af46:	or     ecx,0xffffffff
1004af49:	mov    eax,DWORD PTR [ebp+0x14]
1004af4c:	sub    eax,ecx
1004af4e:	dec    eax
1004af4f:	cmp    eax,DWORD PTR [ebp+0x14]
1004af52:	jge    0x1004af55
1004af54:	inc    eax
1004af55:	mov    DWORD PTR [ebp+0x14],eax
1004af58:	mov    eax,ds:0x100802f8
1004af5d:	cmp    eax,0x2
1004af60:	je     0x1004b111
1004af66:	cmp    eax,ebx
1004af68:	je     0x1004b111
1004af6e:	cmp    eax,0x1
1004af71:	jne    0x1004b142
1004af77:	cmp    DWORD PTR [ebp+0x20],ebx
1004af7a:	mov    DWORD PTR [ebp-0x8],ebx
1004af7d:	jne    0x1004af87
1004af7f:	mov    eax,DWORD PTR [esi]
1004af81:	mov    eax,DWORD PTR [eax+0x4]
1004af84:	mov    DWORD PTR [ebp+0x20],eax
1004af87:	mov    esi,DWORD PTR ds:0x1006608c
1004af8d:	xor    eax,eax
1004af8f:	cmp    DWORD PTR [ebp+0x24],ebx
1004af92:	push   ebx
1004af93:	push   ebx
1004af94:	push   DWORD PTR [ebp+0x14]
1004af97:	setne  al
1004af9a:	push   DWORD PTR [ebp+0x10]
1004af9d:	lea    eax,[eax*8+0x1]
1004afa4:	push   eax
1004afa5:	push   DWORD PTR [ebp+0x20]
1004afa8:	call   esi
1004afaa:	mov    edi,eax
1004afac:	cmp    edi,ebx
1004afae:	je     0x1004b142
1004afb4:	jle    0x1004aff9
1004afb6:	push   0xffffffe0
1004afb8:	xor    edx,edx
1004afba:	pop    eax
1004afbb:	div    edi
1004afbd:	cmp    eax,0x2
1004afc0:	jb     0x1004aff9
1004afc2:	lea    eax,[edi+edi*1+0x8]
1004afc6:	cmp    eax,0x400
1004afcb:	ja     0x1004afe0
1004afcd:	call   0x1004b6f0
1004afd2:	mov    eax,esp
1004afd4:	cmp    eax,ebx
1004afd6:	je     0x1004aff4
1004afd8:	mov    DWORD PTR [eax],0xcccc
1004afde:	jmp    0x1004aff1
1004afe0:	push   eax
1004afe1:	call   0x10044f8d
1004afe6:	cmp    eax,ebx
1004afe8:	pop    ecx
1004afe9:	je     0x1004aff4
1004afeb:	mov    DWORD PTR [eax],0xdddd
1004aff1:	add    eax,0x8
1004aff4:	mov    DWORD PTR [ebp-0xc],eax
1004aff7:	jmp    0x1004affc
1004aff9:	mov    DWORD PTR [ebp-0xc],ebx
1004affc:	cmp    DWORD PTR [ebp-0xc],ebx
1004afff:	je     0x1004b142
1004b005:	push   edi
1004b006:	push   DWORD PTR [ebp-0xc]
1004b009:	push   DWORD PTR [ebp+0x14]
1004b00c:	push   DWORD PTR [ebp+0x10]
1004b00f:	push   0x1
1004b011:	push   DWORD PTR [ebp+0x20]
1004b014:	call   esi
1004b016:	test   eax,eax
1004b018:	je     0x1004b100
1004b01e:	mov    esi,DWORD PTR ds:0x100661ec
1004b024:	push   ebx
1004b025:	push   ebx
1004b026:	push   edi
1004b027:	push   DWORD PTR [ebp-0xc]
1004b02a:	push   DWORD PTR [ebp+0xc]
1004b02d:	push   DWORD PTR [ebp+0x8]
1004b030:	call   esi
1004b032:	mov    ecx,eax
1004b034:	cmp    ecx,ebx
1004b036:	mov    DWORD PTR [ebp-0x8],ecx
1004b039:	je     0x1004b100
1004b03f:	test   WORD PTR [ebp+0xc],0x400
1004b045:	je     0x1004b070
1004b047:	cmp    DWORD PTR [ebp+0x1c],ebx
1004b04a:	je     0x1004b100
1004b050:	cmp    ecx,DWORD PTR [ebp+0x1c]
1004b053:	jg     0x1004b100
1004b059:	push   DWORD PTR [ebp+0x1c]
1004b05c:	push   DWORD PTR [ebp+0x18]
1004b05f:	push   edi
1004b060:	push   DWORD PTR [ebp-0xc]
1004b063:	push   DWORD PTR [ebp+0xc]
1004b066:	push   DWORD PTR [ebp+0x8]
1004b069:	call   esi
1004b06b:	jmp    0x1004b100
1004b070:	cmp    ecx,ebx
1004b072:	jle    0x1004b0b9
1004b074:	push   0xffffffe0
1004b076:	xor    edx,edx
1004b078:	pop    eax
1004b079:	div    ecx
1004b07b:	cmp    eax,0x2
1004b07e:	jb     0x1004b0b9
1004b080:	lea    eax,[ecx+ecx*1+0x8]
1004b084:	cmp    eax,0x400
1004b089:	ja     0x1004b0a1
1004b08b:	call   0x1004b6f0
1004b090:	mov    esi,esp
1004b092:	cmp    esi,ebx
1004b094:	je     0x1004b100
1004b096:	mov    DWORD PTR [esi],0xcccc
1004b09c:	add    esi,0x8
1004b09f:	jmp    0x1004b0bb
1004b0a1:	push   eax
1004b0a2:	call   0x10044f8d
1004b0a7:	cmp    eax,ebx
1004b0a9:	pop    ecx
1004b0aa:	je     0x1004b0b5
1004b0ac:	mov    DWORD PTR [eax],0xdddd
1004b0b2:	add    eax,0x8
1004b0b5:	mov    esi,eax
1004b0b7:	jmp    0x1004b0bb
1004b0b9:	xor    esi,esi
1004b0bb:	cmp    esi,ebx
1004b0bd:	je     0x1004b100
1004b0bf:	push   DWORD PTR [ebp-0x8]
1004b0c2:	push   esi
1004b0c3:	push   edi
1004b0c4:	push   DWORD PTR [ebp-0xc]
1004b0c7:	push   DWORD PTR [ebp+0xc]
1004b0ca:	push   DWORD PTR [ebp+0x8]
1004b0cd:	call   DWORD PTR ds:0x100661ec
1004b0d3:	test   eax,eax
1004b0d5:	je     0x1004b0f9
1004b0d7:	cmp    DWORD PTR [ebp+0x1c],ebx
1004b0da:	push   ebx
1004b0db:	push   ebx
1004b0dc:	jne    0x1004b0e2
1004b0de:	push   ebx
1004b0df:	push   ebx
1004b0e0:	jmp    0x1004b0e8
1004b0e2:	push   DWORD PTR [ebp+0x1c]
1004b0e5:	push   DWORD PTR [ebp+0x18]
1004b0e8:	push   DWORD PTR [ebp-0x8]
1004b0eb:	push   esi
1004b0ec:	push   ebx
1004b0ed:	push   DWORD PTR [ebp+0x20]
1004b0f0:	call   DWORD PTR ds:0x100660b8
1004b0f6:	mov    DWORD PTR [ebp-0x8],eax
1004b0f9:	push   esi
1004b0fa:	call   0x1001b365
1004b0ff:	pop    ecx
1004b100:	push   DWORD PTR [ebp-0xc]
1004b103:	call   0x1001b365
1004b108:	mov    eax,DWORD PTR [ebp-0x8]
1004b10b:	pop    ecx
1004b10c:	jmp    0x1004b26a
1004b111:	cmp    DWORD PTR [ebp+0x8],ebx
1004b114:	mov    DWORD PTR [ebp-0xc],ebx
1004b117:	mov    DWORD PTR [ebp-0x10],ebx
1004b11a:	jne    0x1004b124
1004b11c:	mov    eax,DWORD PTR [esi]
1004b11e:	mov    eax,DWORD PTR [eax+0x14]
1004b121:	mov    DWORD PTR [ebp+0x8],eax
1004b124:	cmp    DWORD PTR [ebp+0x20],ebx
1004b127:	jne    0x1004b131
1004b129:	mov    eax,DWORD PTR [esi]
1004b12b:	mov    eax,DWORD PTR [eax+0x4]
1004b12e:	mov    DWORD PTR [ebp+0x20],eax
1004b131:	push   DWORD PTR [ebp+0x8]
1004b134:	call   0x1004f434
1004b139:	cmp    eax,0xffffffff
1004b13c:	pop    ecx
1004b13d:	mov    DWORD PTR [ebp-0x14],eax
1004b140:	jne    0x1004b149
1004b142:	xor    eax,eax
1004b144:	jmp    0x1004b26a
1004b149:	cmp    eax,DWORD PTR [ebp+0x20]
1004b14c:	je     0x1004b22d
1004b152:	push   ebx
1004b153:	push   ebx
1004b154:	lea    ecx,[ebp+0x14]
1004b157:	push   ecx
1004b158:	push   DWORD PTR [ebp+0x10]
1004b15b:	push   eax
1004b15c:	push   DWORD PTR [ebp+0x20]
1004b15f:	call   0x1004f47b
1004b164:	add    esp,0x18
1004b167:	cmp    eax,ebx
1004b169:	mov    DWORD PTR [ebp-0xc],eax
1004b16c:	je     0x1004b142
1004b16e:	mov    esi,DWORD PTR ds:0x100661e8
1004b174:	push   ebx
1004b175:	push   ebx
1004b176:	push   DWORD PTR [ebp+0x14]
1004b179:	push   eax
1004b17a:	push   DWORD PTR [ebp+0xc]
1004b17d:	push   DWORD PTR [ebp+0x8]
1004b180:	call   esi
1004b182:	cmp    eax,ebx
1004b184:	mov    DWORD PTR [ebp-0x8],eax
1004b187:	jne    0x1004b190
1004b189:	xor    esi,esi
1004b18b:	jmp    0x1004b247
1004b190:	jle    0x1004b1cf
1004b192:	cmp    eax,0xffffffe0
1004b195:	ja     0x1004b1cf
1004b197:	add    eax,0x8
1004b19a:	cmp    eax,0x400
1004b19f:	ja     0x1004b1b7
1004b1a1:	call   0x1004b6f0
1004b1a6:	mov    edi,esp
1004b1a8:	cmp    edi,ebx
1004b1aa:	je     0x1004b189
1004b1ac:	mov    DWORD PTR [edi],0xcccc
1004b1b2:	add    edi,0x8
1004b1b5:	jmp    0x1004b1d1
1004b1b7:	push   eax
1004b1b8:	call   0x10044f8d
1004b1bd:	cmp    eax,ebx
1004b1bf:	pop    ecx
1004b1c0:	je     0x1004b1cb
1004b1c2:	mov    DWORD PTR [eax],0xdddd
1004b1c8:	add    eax,0x8
1004b1cb:	mov    edi,eax
1004b1cd:	jmp    0x1004b1d1
1004b1cf:	xor    edi,edi
1004b1d1:	cmp    edi,ebx
1004b1d3:	je     0x1004b189
1004b1d5:	push   DWORD PTR [ebp-0x8]
1004b1d8:	push   ebx
1004b1d9:	push   edi
1004b1da:	call   0x10045c00
1004b1df:	add    esp,0xc
1004b1e2:	push   DWORD PTR [ebp-0x8]
1004b1e5:	push   edi
1004b1e6:	push   DWORD PTR [ebp+0x14]
1004b1e9:	push   DWORD PTR [ebp-0xc]
1004b1ec:	push   DWORD PTR [ebp+0xc]
1004b1ef:	push   DWORD PTR [ebp+0x8]
1004b1f2:	call   esi
1004b1f4:	cmp    eax,ebx
1004b1f6:	mov    DWORD PTR [ebp-0x8],eax
1004b1f9:	jne    0x1004b1ff
1004b1fb:	xor    esi,esi
1004b1fd:	jmp    0x1004b224
1004b1ff:	push   DWORD PTR [ebp+0x1c]
1004b202:	lea    eax,[ebp-0x8]
1004b205:	push   DWORD PTR [ebp+0x18]
1004b208:	push   eax
1004b209:	push   edi
1004b20a:	push   DWORD PTR [ebp+0x20]
1004b20d:	push   DWORD PTR [ebp-0x14]
1004b210:	call   0x1004f47b
1004b215:	mov    esi,eax
1004b217:	mov    DWORD PTR [ebp-0x10],esi
1004b21a:	add    esp,0x18
1004b21d:	neg    esi
1004b21f:	sbb    esi,esi
1004b221:	and    esi,DWORD PTR [ebp-0x8]
1004b224:	push   edi
1004b225:	call   0x1001b365
1004b22a:	pop    ecx
1004b22b:	jmp    0x1004b247
1004b22d:	push   DWORD PTR [ebp+0x1c]
1004b230:	push   DWORD PTR [ebp+0x18]
1004b233:	push   DWORD PTR [ebp+0x14]
1004b236:	push   DWORD PTR [ebp+0x10]
1004b239:	push   DWORD PTR [ebp+0xc]
1004b23c:	push   DWORD PTR [ebp+0x8]
1004b23f:	call   DWORD PTR ds:0x100661e8
1004b245:	mov    esi,eax
1004b247:	cmp    DWORD PTR [ebp-0xc],ebx
1004b24a:	je     0x1004b255
1004b24c:	push   DWORD PTR [ebp-0xc]
1004b24f:	call   0x10043508
1004b254:	pop    ecx
1004b255:	mov    eax,DWORD PTR [ebp-0x10]
1004b258:	cmp    eax,ebx
1004b25a:	je     0x1004b268
1004b25c:	cmp    DWORD PTR [ebp+0x18],eax
1004b25f:	je     0x1004b268
1004b261:	push   eax
1004b262:	call   0x10043508
1004b267:	pop    ecx
1004b268:	mov    eax,esi
1004b26a:	lea    esp,[ebp-0x20]
1004b26d:	pop    edi
1004b26e:	pop    esi
1004b26f:	pop    ebx
1004b270:	mov    ecx,DWORD PTR [ebp-0x4]
1004b273:	xor    ecx,ebp
1004b275:	call   0x10042e97
1004b27a:	leave  
1004b27b:	ret    
1004b27c:	push   ebp
1004b27d:	mov    ebp,esp
1004b27f:	sub    esp,0x10
1004b282:	push   DWORD PTR [ebp+0x8]
1004b285:	lea    ecx,[ebp-0x10]
1004b288:	call   0x100454e5
1004b28d:	push   DWORD PTR [ebp+0x28]
1004b290:	lea    ecx,[ebp-0x10]
1004b293:	push   DWORD PTR [ebp+0x24]
1004b296:	push   DWORD PTR [ebp+0x20]
1004b299:	push   DWORD PTR [ebp+0x1c]
1004b29c:	push   DWORD PTR [ebp+0x18]
1004b29f:	push   DWORD PTR [ebp+0x14]
1004b2a2:	push   DWORD PTR [ebp+0x10]
1004b2a5:	push   DWORD PTR [ebp+0xc]
1004b2a8:	call   0x1004aeda
1004b2ad:	add    esp,0x20
1004b2b0:	cmp    BYTE PTR [ebp-0x4],0x0
1004b2b4:	je     0x1004b2bd
1004b2b6:	mov    ecx,DWORD PTR [ebp-0x8]
1004b2b9:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b2bd:	leave  
1004b2be:	ret    
1004b2bf:	push   ebp
1004b2c0:	mov    ebp,esp
1004b2c2:	sub    esp,0x10
1004b2c5:	push   DWORD PTR [ebp+0xc]
1004b2c8:	lea    ecx,[ebp-0x10]
1004b2cb:	call   0x100454e5
1004b2d0:	movzx  eax,BYTE PTR [ebp+0x8]
1004b2d4:	mov    ecx,DWORD PTR [ebp-0x10]
1004b2d7:	mov    ecx,DWORD PTR [ecx+0xc8]
1004b2dd:	movzx  eax,WORD PTR [ecx+eax*2]
1004b2e1:	and    eax,0x8000
1004b2e6:	cmp    BYTE PTR [ebp-0x4],0x0
1004b2ea:	je     0x1004b2f3
1004b2ec:	mov    ecx,DWORD PTR [ebp-0x8]
1004b2ef:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b2f3:	leave  
1004b2f4:	ret    
1004b2f5:	push   0x0
1004b2f7:	push   DWORD PTR [esp+0x8]
1004b2fb:	call   0x1004b2bf
1004b300:	pop    ecx
1004b301:	pop    ecx
1004b302:	ret    
1004b303:	push   ebp
1004b304:	mov    ebp,esp
1004b306:	sub    esp,0x18
1004b309:	push   ebx
1004b30a:	push   DWORD PTR [ebp+0x10]
1004b30d:	lea    ecx,[ebp-0x18]
1004b310:	call   0x100454e5
1004b315:	mov    ebx,DWORD PTR [ebp+0x8]
1004b318:	lea    eax,[ebx+0x1]
1004b31b:	cmp    eax,0x100
1004b320:	ja     0x1004b331
1004b322:	mov    eax,DWORD PTR [ebp-0x18]
1004b325:	mov    eax,DWORD PTR [eax+0xc8]
1004b32b:	movzx  eax,WORD PTR [eax+ebx*2]
1004b32f:	jmp    0x1004b3a6
1004b331:	mov    DWORD PTR [ebp+0x8],ebx
1004b334:	sar    DWORD PTR [ebp+0x8],0x8
1004b338:	lea    eax,[ebp-0x18]
1004b33b:	push   eax
1004b33c:	mov    eax,DWORD PTR [ebp+0x8]
1004b33f:	and    eax,0xff
1004b344:	push   eax
1004b345:	call   0x1004b2bf
1004b34a:	test   eax,eax
1004b34c:	pop    ecx
1004b34d:	pop    ecx
1004b34e:	je     0x1004b362
1004b350:	mov    al,BYTE PTR [ebp+0x8]
1004b353:	push   0x2
1004b355:	mov    BYTE PTR [ebp-0x8],al
1004b358:	mov    BYTE PTR [ebp-0x7],bl
1004b35b:	mov    BYTE PTR [ebp-0x6],0x0
1004b35f:	pop    ecx
1004b360:	jmp    0x1004b36c
1004b362:	xor    ecx,ecx
1004b364:	mov    BYTE PTR [ebp-0x8],bl
1004b367:	mov    BYTE PTR [ebp-0x7],0x0
1004b36b:	inc    ecx
1004b36c:	mov    eax,DWORD PTR [ebp-0x18]
1004b36f:	push   0x1
1004b371:	push   DWORD PTR [eax+0x14]
1004b374:	push   DWORD PTR [eax+0x4]
1004b377:	lea    eax,[ebp-0x4]
1004b37a:	push   eax
1004b37b:	push   ecx
1004b37c:	lea    eax,[ebp-0x8]
1004b37f:	push   eax
1004b380:	lea    eax,[ebp-0x18]
1004b383:	push   0x1
1004b385:	push   eax
1004b386:	call   0x1004ee1d
1004b38b:	add    esp,0x20
1004b38e:	test   eax,eax
1004b390:	jne    0x1004b3a2
1004b392:	cmp    BYTE PTR [ebp-0xc],al
1004b395:	je     0x1004b39e
1004b397:	mov    eax,DWORD PTR [ebp-0x10]
1004b39a:	and    DWORD PTR [eax+0x70],0xfffffffd
1004b39e:	xor    eax,eax
1004b3a0:	jmp    0x1004b3b6
1004b3a2:	movzx  eax,WORD PTR [ebp-0x4]
1004b3a6:	and    eax,DWORD PTR [ebp+0xc]
1004b3a9:	cmp    BYTE PTR [ebp-0xc],0x0
1004b3ad:	je     0x1004b3b6
1004b3af:	mov    ecx,DWORD PTR [ebp-0x10]
1004b3b2:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b3b6:	pop    ebx
1004b3b7:	leave  
1004b3b8:	ret    
1004b3b9:	mov    ecx,DWORD PTR [esp+0x4]
1004b3bd:	push   ebx
1004b3be:	push   esi
1004b3bf:	push   edi
1004b3c0:	xor    edi,edi
1004b3c2:	cmp    ecx,edi
1004b3c4:	je     0x1004b3ce
1004b3c6:	mov    ebx,DWORD PTR [esp+0x14]
1004b3ca:	cmp    ebx,edi
1004b3cc:	ja     0x1004b3e9
1004b3ce:	call   0x10046b55
1004b3d3:	push   0x16
1004b3d5:	pop    esi
1004b3d6:	mov    DWORD PTR [eax],esi
1004b3d8:	push   edi
1004b3d9:	push   edi
1004b3da:	push   edi
1004b3db:	push   edi
1004b3dc:	push   edi
1004b3dd:	call   0x1004338c
1004b3e2:	add    esp,0x14
1004b3e5:	mov    eax,esi
1004b3e7:	jmp    0x1004b421
1004b3e9:	mov    esi,DWORD PTR [esp+0x18]
1004b3ed:	cmp    esi,edi
1004b3ef:	jne    0x1004b3f6
1004b3f1:	mov    WORD PTR [ecx],di
1004b3f4:	jmp    0x1004b3ce
1004b3f6:	mov    edx,ecx
1004b3f8:	movzx  eax,WORD PTR [esi]
1004b3fb:	mov    WORD PTR [edx],ax
1004b3fe:	inc    edx
1004b3ff:	inc    edx
1004b400:	inc    esi
1004b401:	inc    esi
1004b402:	cmp    ax,di
1004b405:	je     0x1004b40a
1004b407:	dec    ebx
1004b408:	jne    0x1004b3f8
1004b40a:	cmp    ebx,edi
1004b40c:	jne    0x1004b41f
1004b40e:	mov    WORD PTR [ecx],di
1004b411:	call   0x10046b55
1004b416:	push   0x22
1004b418:	pop    ecx
1004b419:	mov    DWORD PTR [eax],ecx
1004b41b:	mov    esi,ecx
1004b41d:	jmp    0x1004b3d8
1004b41f:	xor    eax,eax
1004b421:	pop    edi
1004b422:	pop    esi
1004b423:	pop    ebx
1004b424:	ret    
1004b425:	push   ebp
1004b426:	mov    ebp,esp
1004b428:	sub    esp,0x10
1004b42b:	mov    eax,ds:0x1007e030
1004b430:	xor    eax,ebp
1004b432:	mov    DWORD PTR [ebp-0x4],eax
1004b435:	push   ebx
1004b436:	push   esi
1004b437:	mov    esi,DWORD PTR ds:0x100661ec
1004b43d:	xor    ebx,ebx
1004b43f:	cmp    DWORD PTR ds:0x100802fc,ebx
1004b445:	push   edi
1004b446:	mov    edi,ecx
1004b448:	jne    0x1004b480
1004b44a:	push   ebx
1004b44b:	push   ebx
1004b44c:	push   0x1
1004b44e:	push   0x10066cc8
1004b453:	push   0x100
1004b458:	push   ebx
1004b459:	call   esi
1004b45b:	test   eax,eax
1004b45d:	je     0x1004b46b
1004b45f:	mov    DWORD PTR ds:0x100802fc,0x1
1004b469:	jmp    0x1004b480
1004b46b:	call   DWORD PTR ds:0x100660cc
1004b471:	cmp    eax,0x78
1004b474:	jne    0x1004b480
1004b476:	mov    DWORD PTR ds:0x100802fc,0x2
1004b480:	cmp    DWORD PTR [ebp+0x14],ebx
1004b483:	jle    0x1004b4a2
1004b485:	mov    ecx,DWORD PTR [ebp+0x14]
1004b488:	mov    eax,DWORD PTR [ebp+0x10]
1004b48b:	dec    ecx
1004b48c:	cmp    WORD PTR [eax],bx
1004b48f:	je     0x1004b49a
1004b491:	inc    eax
1004b492:	inc    eax
1004b493:	cmp    ecx,ebx
1004b495:	jne    0x1004b48b
1004b497:	or     ecx,0xffffffff
1004b49a:	or     eax,0xffffffff
1004b49d:	sub    eax,ecx
1004b49f:	add    DWORD PTR [ebp+0x14],eax
1004b4a2:	mov    eax,ds:0x100802fc
1004b4a7:	cmp    eax,0x1
1004b4aa:	jne    0x1004b4c5
1004b4ac:	push   DWORD PTR [ebp+0x1c]
1004b4af:	push   DWORD PTR [ebp+0x18]
1004b4b2:	push   DWORD PTR [ebp+0x14]
1004b4b5:	push   DWORD PTR [ebp+0x10]
1004b4b8:	push   DWORD PTR [ebp+0xc]
1004b4bb:	push   DWORD PTR [ebp+0x8]
1004b4be:	call   esi
1004b4c0:	jmp    0x1004b674
1004b4c5:	cmp    eax,0x2
1004b4c8:	je     0x1004b4ce
1004b4ca:	cmp    eax,ebx
1004b4cc:	jne    0x1004b520
1004b4ce:	cmp    DWORD PTR [ebp+0x8],ebx
1004b4d1:	mov    DWORD PTR [ebp-0xc],ebx
1004b4d4:	jne    0x1004b4de
1004b4d6:	mov    eax,DWORD PTR [edi]
1004b4d8:	mov    eax,DWORD PTR [eax+0x14]
1004b4db:	mov    DWORD PTR [ebp+0x8],eax
1004b4de:	cmp    DWORD PTR [ebp+0x20],ebx
1004b4e1:	jne    0x1004b4eb
1004b4e3:	mov    eax,DWORD PTR [edi]
1004b4e5:	mov    eax,DWORD PTR [eax+0x4]
1004b4e8:	mov    DWORD PTR [ebp+0x20],eax
1004b4eb:	push   DWORD PTR [ebp+0x8]
1004b4ee:	call   0x1004f434
1004b4f3:	cmp    DWORD PTR [ebp+0x20],eax
1004b4f6:	pop    ecx
1004b4f7:	je     0x1004b501
1004b4f9:	cmp    eax,0xffffffff
1004b4fc:	je     0x1004b501
1004b4fe:	mov    DWORD PTR [ebp+0x20],eax
1004b501:	mov    esi,DWORD PTR ds:0x100660b8
1004b507:	push   ebx
1004b508:	push   ebx
1004b509:	push   ebx
1004b50a:	push   ebx
1004b50b:	push   DWORD PTR [ebp+0x14]
1004b50e:	push   DWORD PTR [ebp+0x10]
1004b511:	push   ebx
1004b512:	push   DWORD PTR [ebp+0x20]
1004b515:	call   esi
1004b517:	mov    edi,eax
1004b519:	cmp    edi,ebx
1004b51b:	mov    DWORD PTR [ebp-0x10],edi
1004b51e:	jne    0x1004b527
1004b520:	xor    eax,eax
1004b522:	jmp    0x1004b674
1004b527:	jle    0x1004b56b
1004b529:	push   0xffffffe0
1004b52b:	xor    edx,edx
1004b52d:	pop    eax
1004b52e:	div    edi
1004b530:	cmp    eax,0x1
1004b533:	jb     0x1004b56b
1004b535:	lea    eax,[edi+0x8]
1004b538:	cmp    eax,0x400
1004b53d:	ja     0x1004b552
1004b53f:	call   0x1004b6f0
1004b544:	mov    eax,esp
1004b546:	cmp    eax,ebx
1004b548:	je     0x1004b566
1004b54a:	mov    DWORD PTR [eax],0xcccc
1004b550:	jmp    0x1004b563
1004b552:	push   eax
1004b553:	call   0x10044f8d
1004b558:	cmp    eax,ebx
1004b55a:	pop    ecx
1004b55b:	je     0x1004b566
1004b55d:	mov    DWORD PTR [eax],0xdddd
1004b563:	add    eax,0x8
1004b566:	mov    DWORD PTR [ebp-0x8],eax
1004b569:	jmp    0x1004b56e
1004b56b:	mov    DWORD PTR [ebp-0x8],ebx
1004b56e:	cmp    DWORD PTR [ebp-0x8],ebx
1004b571:	je     0x1004b520
1004b573:	push   ebx
1004b574:	push   ebx
1004b575:	push   edi
1004b576:	push   DWORD PTR [ebp-0x8]
1004b579:	push   DWORD PTR [ebp+0x14]
1004b57c:	push   DWORD PTR [ebp+0x10]
1004b57f:	push   ebx
1004b580:	push   DWORD PTR [ebp+0x20]
1004b583:	call   esi
1004b585:	test   eax,eax
1004b587:	je     0x1004b668
1004b58d:	push   ebx
1004b58e:	push   ebx
1004b58f:	push   edi
1004b590:	push   DWORD PTR [ebp-0x8]
1004b593:	mov    edi,DWORD PTR ds:0x100661e8
1004b599:	push   DWORD PTR [ebp+0xc]
1004b59c:	push   DWORD PTR [ebp+0x8]
1004b59f:	call   edi
1004b5a1:	mov    esi,eax
1004b5a3:	cmp    esi,ebx
1004b5a5:	je     0x1004b668
1004b5ab:	jle    0x1004b5ec
1004b5ad:	push   0xffffffe0
1004b5af:	xor    edx,edx
1004b5b1:	pop    eax
1004b5b2:	div    esi
1004b5b4:	cmp    eax,0x1
1004b5b7:	jb     0x1004b5ec
1004b5b9:	lea    eax,[esi+0x8]
1004b5bc:	cmp    eax,0x400
1004b5c1:	ja     0x1004b5d6
1004b5c3:	call   0x1004b6f0
1004b5c8:	mov    eax,esp
1004b5ca:	cmp    eax,ebx
1004b5cc:	je     0x1004b5ea
1004b5ce:	mov    DWORD PTR [eax],0xcccc
1004b5d4:	jmp    0x1004b5e7
1004b5d6:	push   eax
1004b5d7:	call   0x10044f8d
1004b5dc:	cmp    eax,ebx
1004b5de:	pop    ecx
1004b5df:	je     0x1004b5ea
1004b5e1:	mov    DWORD PTR [eax],0xdddd
1004b5e7:	add    eax,0x8
1004b5ea:	mov    ebx,eax
1004b5ec:	test   ebx,ebx
1004b5ee:	je     0x1004b668
1004b5f0:	push   esi
1004b5f1:	push   ebx
1004b5f2:	push   DWORD PTR [ebp-0x10]
1004b5f5:	push   DWORD PTR [ebp-0x8]
1004b5f8:	push   DWORD PTR [ebp+0xc]
1004b5fb:	push   DWORD PTR [ebp+0x8]
1004b5fe:	call   edi
1004b600:	test   eax,eax
1004b602:	je     0x1004b661
1004b604:	test   WORD PTR [ebp+0xc],0x400
1004b60a:	je     0x1004b640
1004b60c:	mov    eax,DWORD PTR [ebp+0x1c]
1004b60f:	xor    edi,edi
1004b611:	cmp    eax,edi
1004b613:	mov    DWORD PTR [ebp-0xc],esi
1004b616:	je     0x1004b661
1004b618:	cmp    eax,esi
1004b61a:	jg     0x1004b61f
1004b61c:	lea    esi,[eax-0x1]
1004b61f:	push   esi
1004b620:	push   ebx
1004b621:	push   eax
1004b622:	push   DWORD PTR [ebp+0x18]
1004b625:	call   0x1004eaaf
1004b62a:	add    esp,0x10
1004b62d:	test   eax,eax
1004b62f:	je     0x1004b661
1004b631:	push   edi
1004b632:	push   edi
1004b633:	push   edi
1004b634:	push   edi
1004b635:	push   edi
1004b636:	call   0x10043290
1004b63b:	add    esp,0x14
1004b63e:	jmp    0x1004b661
1004b640:	xor    eax,eax
1004b642:	cmp    DWORD PTR [ebp+0x1c],eax
1004b645:	jne    0x1004b64b
1004b647:	push   eax
1004b648:	push   eax
1004b649:	jmp    0x1004b651
1004b64b:	push   DWORD PTR [ebp+0x1c]
1004b64e:	push   DWORD PTR [ebp+0x18]
1004b651:	push   esi
1004b652:	push   ebx
1004b653:	push   0x1
1004b655:	push   DWORD PTR [ebp+0x20]
1004b658:	call   DWORD PTR ds:0x1006608c
1004b65e:	mov    DWORD PTR [ebp-0xc],eax
1004b661:	push   ebx
1004b662:	call   0x1001b365
1004b667:	pop    ecx
1004b668:	push   DWORD PTR [ebp-0x8]
1004b66b:	call   0x1001b365
1004b670:	mov    eax,DWORD PTR [ebp-0xc]
1004b673:	pop    ecx
1004b674:	lea    esp,[ebp-0x1c]
1004b677:	pop    edi
1004b678:	pop    esi
1004b679:	pop    ebx
1004b67a:	mov    ecx,DWORD PTR [ebp-0x4]
1004b67d:	xor    ecx,ebp
1004b67f:	call   0x10042e97
1004b684:	leave  
1004b685:	ret    
1004b686:	push   ebp
1004b687:	mov    ebp,esp
1004b689:	sub    esp,0x10
1004b68c:	push   DWORD PTR [ebp+0x8]
1004b68f:	lea    ecx,[ebp-0x10]
1004b692:	call   0x100454e5
1004b697:	push   DWORD PTR [ebp+0x24]
1004b69a:	lea    ecx,[ebp-0x10]
1004b69d:	push   DWORD PTR [ebp+0x20]
1004b6a0:	push   DWORD PTR [ebp+0x1c]
1004b6a3:	push   DWORD PTR [ebp+0x18]
1004b6a6:	push   DWORD PTR [ebp+0x14]
1004b6a9:	push   DWORD PTR [ebp+0x10]
1004b6ac:	push   DWORD PTR [ebp+0xc]
1004b6af:	call   0x1004b425
1004b6b4:	add    esp,0x1c
1004b6b7:	cmp    BYTE PTR [ebp-0x4],0x0
1004b6bb:	je     0x1004b6c4
1004b6bd:	mov    ecx,DWORD PTR [ebp-0x8]
1004b6c0:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b6c4:	leave  
1004b6c5:	ret    
1004b6c6:	xor    eax,eax
1004b6c8:	cmp    DWORD PTR [esp+0x8],eax
1004b6cc:	jbe    0x1004b6e1
1004b6ce:	mov    ecx,DWORD PTR [esp+0x4]
1004b6d2:	cmp    WORD PTR [ecx],0x0
1004b6d6:	je     0x1004b6e1
1004b6d8:	inc    eax
1004b6d9:	inc    ecx
1004b6da:	inc    ecx
1004b6db:	cmp    eax,DWORD PTR [esp+0x8]
1004b6df:	jb     0x1004b6d2
1004b6e1:	ret    
1004b6e2:	int3   
1004b6e3:	int3   
1004b6e4:	int3   
1004b6e5:	int3   
1004b6e6:	int3   
1004b6e7:	int3   
1004b6e8:	int3   
1004b6e9:	int3   
1004b6ea:	int3   
1004b6eb:	int3   
1004b6ec:	int3   
1004b6ed:	int3   
1004b6ee:	int3   
1004b6ef:	int3   
1004b6f0:	push   ecx
1004b6f1:	lea    ecx,[esp+0x8]
1004b6f5:	sub    ecx,eax
1004b6f7:	and    ecx,0xf
1004b6fa:	add    eax,ecx
1004b6fc:	sbb    ecx,ecx
1004b6fe:	or     eax,ecx
1004b700:	pop    ecx
1004b701:	jmp    0x10049de0
1004b706:	push   ecx
1004b707:	lea    ecx,[esp+0x8]
1004b70b:	sub    ecx,eax
1004b70d:	and    ecx,0x7
1004b710:	add    eax,ecx
1004b712:	sbb    ecx,ecx
1004b714:	or     eax,ecx
1004b716:	pop    ecx
1004b717:	jmp    0x10049de0
1004b71c:	push   ebp
1004b71d:	mov    ebp,esp
1004b71f:	mov    eax,0xffff
1004b724:	sub    esp,0x14
1004b727:	cmp    WORD PTR [ebp+0x8],ax
1004b72b:	je     0x1004b7c7
1004b731:	push   ebx
1004b732:	push   DWORD PTR [ebp+0xc]
1004b735:	lea    ecx,[ebp-0x14]
1004b738:	call   0x100454e5
1004b73d:	mov    ecx,DWORD PTR [ebp-0x14]
1004b740:	mov    edx,DWORD PTR [ecx+0x14]
1004b743:	xor    ebx,ebx
1004b745:	cmp    edx,ebx
1004b747:	jne    0x1004b75d
1004b749:	mov    eax,DWORD PTR [ebp+0x8]
1004b74c:	lea    ecx,[eax-0x41]
1004b74f:	cmp    cx,0x19
1004b753:	ja     0x1004b758
1004b755:	add    eax,0x20
1004b758:	movzx  eax,ax
1004b75b:	jmp    0x1004b7ba
1004b75d:	mov    eax,0x100
1004b762:	cmp    WORD PTR [ebp+0x8],ax
1004b766:	jae    0x1004b791
1004b768:	lea    eax,[ebp-0x14]
1004b76b:	push   eax
1004b76c:	push   0x1
1004b76e:	push   DWORD PTR [ebp+0x8]
1004b771:	call   0x1004f62d
1004b776:	add    esp,0xc
1004b779:	test   eax,eax
1004b77b:	movzx  eax,WORD PTR [ebp+0x8]
1004b77f:	je     0x1004b7ba
1004b781:	mov    ecx,DWORD PTR [ebp-0x14]
1004b784:	mov    ecx,DWORD PTR [ecx+0xcc]
1004b78a:	movzx  ax,BYTE PTR [ecx+eax*1]
1004b78f:	jmp    0x1004b758
1004b791:	push   DWORD PTR [ecx+0x4]
1004b794:	lea    ecx,[ebp-0x4]
1004b797:	push   0x1
1004b799:	push   ecx
1004b79a:	push   0x1
1004b79c:	lea    ecx,[ebp+0x8]
1004b79f:	push   ecx
1004b7a0:	push   eax
1004b7a1:	push   edx
1004b7a2:	lea    eax,[ebp-0x14]
1004b7a5:	push   eax
1004b7a6:	call   0x1004b686
1004b7ab:	add    esp,0x20
1004b7ae:	test   eax,eax
1004b7b0:	movzx  eax,WORD PTR [ebp+0x8]
1004b7b4:	je     0x1004b7ba
1004b7b6:	movzx  eax,WORD PTR [ebp-0x4]
1004b7ba:	cmp    BYTE PTR [ebp-0x8],bl
1004b7bd:	je     0x1004b7c6
1004b7bf:	mov    ecx,DWORD PTR [ebp-0xc]
1004b7c2:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b7c6:	pop    ebx
1004b7c7:	leave  
1004b7c8:	ret    
1004b7c9:	push   0x54
1004b7cb:	push   0x100747a8
1004b7d0:	call   0x10046c94
1004b7d5:	xor    edi,edi
1004b7d7:	mov    DWORD PTR [ebp-0x4],edi
1004b7da:	lea    eax,[ebp-0x64]
1004b7dd:	push   eax
1004b7de:	call   DWORD PTR ds:0x100661f8
1004b7e4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004b7eb:	push   0x28
1004b7ed:	push   0x20
1004b7ef:	pop    esi
1004b7f0:	push   esi
1004b7f1:	call   0x10047462
1004b7f6:	pop    ecx
1004b7f7:	pop    ecx
1004b7f8:	cmp    eax,edi
1004b7fa:	je     0x1004ba00
1004b800:	mov    ds:0x10082480,eax
1004b805:	mov    DWORD PTR ds:0x10082464,esi
1004b80b:	lea    ecx,[eax+0x500]
1004b811:	jmp    0x1004b83c
1004b813:	mov    BYTE PTR [eax+0x4],0x0
1004b817:	or     DWORD PTR [eax],0xffffffff
1004b81a:	mov    BYTE PTR [eax+0x5],0xa
1004b81e:	mov    DWORD PTR [eax+0x8],edi
1004b821:	mov    BYTE PTR [eax+0x24],0x0
1004b825:	mov    BYTE PTR [eax+0x25],0xa
1004b829:	mov    BYTE PTR [eax+0x26],0xa
1004b82d:	add    eax,0x28
1004b830:	mov    ecx,DWORD PTR ds:0x10082480
1004b836:	add    ecx,0x500
1004b83c:	cmp    eax,ecx
1004b83e:	jb     0x1004b813
1004b840:	cmp    WORD PTR [ebp-0x32],di
1004b844:	je     0x1004b947
1004b84a:	mov    eax,DWORD PTR [ebp-0x30]
1004b84d:	cmp    eax,edi
1004b84f:	je     0x1004b947
1004b855:	mov    edi,DWORD PTR [eax]
1004b857:	lea    ebx,[eax+0x4]
1004b85a:	lea    eax,[ebx+edi*1]
1004b85d:	mov    DWORD PTR [ebp-0x1c],eax
1004b860:	mov    eax,0x800
1004b865:	cmp    edi,eax
1004b867:	jl     0x1004b86b
1004b869:	mov    edi,eax
1004b86b:	xor    esi,esi
1004b86d:	inc    esi
1004b86e:	jmp    0x1004b8c2
1004b870:	push   0x28
1004b872:	push   0x20
1004b874:	call   0x10047462
1004b879:	pop    ecx
1004b87a:	pop    ecx
1004b87b:	test   eax,eax
1004b87d:	je     0x1004b8cc
1004b87f:	lea    ecx,[esi*4+0x10082480]
1004b886:	mov    DWORD PTR [ecx],eax
1004b888:	add    DWORD PTR ds:0x10082464,0x20
1004b88f:	lea    edx,[eax+0x500]
1004b895:	jmp    0x1004b8bd
1004b897:	mov    BYTE PTR [eax+0x4],0x0
1004b89b:	or     DWORD PTR [eax],0xffffffff
1004b89e:	mov    BYTE PTR [eax+0x5],0xa
1004b8a2:	and    DWORD PTR [eax+0x8],0x0
1004b8a6:	and    BYTE PTR [eax+0x24],0x80
1004b8aa:	mov    BYTE PTR [eax+0x25],0xa
1004b8ae:	mov    BYTE PTR [eax+0x26],0xa
1004b8b2:	add    eax,0x28
1004b8b5:	mov    edx,DWORD PTR [ecx]
1004b8b7:	add    edx,0x500
1004b8bd:	cmp    eax,edx
1004b8bf:	jb     0x1004b897
1004b8c1:	inc    esi
1004b8c2:	cmp    DWORD PTR ds:0x10082464,edi
1004b8c8:	jl     0x1004b870
1004b8ca:	jmp    0x1004b8d2
1004b8cc:	mov    edi,DWORD PTR ds:0x10082464
1004b8d2:	and    DWORD PTR [ebp-0x20],0x0
1004b8d6:	test   edi,edi
1004b8d8:	jle    0x1004b947
1004b8da:	mov    eax,DWORD PTR [ebp-0x1c]
1004b8dd:	mov    ecx,DWORD PTR [eax]
1004b8df:	cmp    ecx,0xffffffff
1004b8e2:	je     0x1004b93a
1004b8e4:	cmp    ecx,0xfffffffe
1004b8e7:	je     0x1004b93a
1004b8e9:	mov    al,BYTE PTR [ebx]
1004b8eb:	test   al,0x1
1004b8ed:	je     0x1004b93a
1004b8ef:	test   al,0x8
1004b8f1:	jne    0x1004b8fe
1004b8f3:	push   ecx
1004b8f4:	call   DWORD PTR ds:0x100661f4
1004b8fa:	test   eax,eax
1004b8fc:	je     0x1004b93a
1004b8fe:	mov    esi,DWORD PTR [ebp-0x20]
1004b901:	mov    eax,esi
1004b903:	sar    eax,0x5
1004b906:	and    esi,0x1f
1004b909:	imul   esi,esi,0x28
1004b90c:	add    esi,DWORD PTR [eax*4+0x10082480]
1004b913:	mov    eax,DWORD PTR [ebp-0x1c]
1004b916:	mov    eax,DWORD PTR [eax]
1004b918:	mov    DWORD PTR [esi],eax
1004b91a:	mov    al,BYTE PTR [ebx]
1004b91c:	mov    BYTE PTR [esi+0x4],al
1004b91f:	push   0xfa0
1004b924:	lea    eax,[esi+0xc]
1004b927:	push   eax
1004b928:	call   0x1004c59b
1004b92d:	pop    ecx
1004b92e:	pop    ecx
1004b92f:	test   eax,eax
1004b931:	je     0x1004ba00
1004b937:	inc    DWORD PTR [esi+0x8]
1004b93a:	inc    DWORD PTR [ebp-0x20]
1004b93d:	inc    ebx
1004b93e:	add    DWORD PTR [ebp-0x1c],0x4
1004b942:	cmp    DWORD PTR [ebp-0x20],edi
1004b945:	jl     0x1004b8da
1004b947:	xor    ebx,ebx
1004b949:	mov    esi,ebx
1004b94b:	imul   esi,esi,0x28
1004b94e:	add    esi,DWORD PTR ds:0x10082480
1004b954:	mov    eax,DWORD PTR [esi]
1004b956:	cmp    eax,0xffffffff
1004b959:	je     0x1004b966
1004b95b:	cmp    eax,0xfffffffe
1004b95e:	je     0x1004b966
1004b960:	or     BYTE PTR [esi+0x4],0x80
1004b964:	jmp    0x1004b9d8
1004b966:	mov    BYTE PTR [esi+0x4],0x81
1004b96a:	test   ebx,ebx
1004b96c:	jne    0x1004b973
1004b96e:	push   0xfffffff6
1004b970:	pop    eax
1004b971:	jmp    0x1004b97d
1004b973:	mov    eax,ebx
1004b975:	dec    eax
1004b976:	neg    eax
1004b978:	sbb    eax,eax
1004b97a:	add    eax,0xfffffff5
1004b97d:	push   eax
1004b97e:	call   DWORD PTR ds:0x100661d4
1004b984:	mov    edi,eax
1004b986:	cmp    edi,0xffffffff
1004b989:	je     0x1004b9ce
1004b98b:	test   edi,edi
1004b98d:	je     0x1004b9ce
1004b98f:	push   edi
1004b990:	call   DWORD PTR ds:0x100661f4
1004b996:	test   eax,eax
1004b998:	je     0x1004b9ce
1004b99a:	mov    DWORD PTR [esi],edi
1004b99c:	and    eax,0xff
1004b9a1:	cmp    eax,0x2
1004b9a4:	jne    0x1004b9ac
1004b9a6:	or     BYTE PTR [esi+0x4],0x40
1004b9aa:	jmp    0x1004b9b5
1004b9ac:	cmp    eax,0x3
1004b9af:	jne    0x1004b9b5
1004b9b1:	or     BYTE PTR [esi+0x4],0x8
1004b9b5:	push   0xfa0
1004b9ba:	lea    eax,[esi+0xc]
1004b9bd:	push   eax
1004b9be:	call   0x1004c59b
1004b9c3:	pop    ecx
1004b9c4:	pop    ecx
1004b9c5:	test   eax,eax
1004b9c7:	je     0x1004ba00
1004b9c9:	inc    DWORD PTR [esi+0x8]
1004b9cc:	jmp    0x1004b9d8
1004b9ce:	or     BYTE PTR [esi+0x4],0x40
1004b9d2:	mov    DWORD PTR [esi],0xfffffffe
1004b9d8:	inc    ebx
1004b9d9:	cmp    ebx,0x3
1004b9dc:	jl     0x1004b949
1004b9e2:	push   DWORD PTR ds:0x10082464
1004b9e8:	call   DWORD PTR ds:0x100661f0
1004b9ee:	xor    eax,eax
1004b9f0:	jmp    0x1004ba03
1004b9f2:	xor    eax,eax
1004b9f4:	inc    eax
1004b9f5:	ret    
1004b9f6:	mov    esp,DWORD PTR [ebp-0x18]
1004b9f9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004ba00:	or     eax,0xffffffff
1004ba03:	call   0x10046cd9
1004ba08:	ret    
1004ba09:	push   esi
1004ba0a:	push   edi
1004ba0b:	mov    esi,0x10082480
1004ba10:	mov    edi,DWORD PTR [esi]
1004ba12:	test   edi,edi
1004ba14:	je     0x1004ba47
1004ba16:	lea    eax,[edi+0x500]
1004ba1c:	jmp    0x1004ba38
1004ba1e:	cmp    DWORD PTR [edi+0x8],0x0
1004ba22:	je     0x1004ba2e
1004ba24:	lea    eax,[edi+0xc]
1004ba27:	push   eax
1004ba28:	call   DWORD PTR ds:0x10066138
1004ba2e:	mov    eax,DWORD PTR [esi]
1004ba30:	add    edi,0x28
1004ba33:	add    eax,0x500
1004ba38:	cmp    edi,eax
1004ba3a:	jb     0x1004ba1e
1004ba3c:	push   DWORD PTR [esi]
1004ba3e:	call   0x10043508
1004ba43:	and    DWORD PTR [esi],0x0
1004ba46:	pop    ecx
1004ba47:	add    esi,0x4
1004ba4a:	cmp    esi,0x10082580
1004ba50:	jl     0x1004ba10
1004ba52:	pop    edi
1004ba53:	pop    esi
1004ba54:	ret    
1004ba55:	push   ebx
1004ba56:	xor    ebx,ebx
1004ba58:	cmp    DWORD PTR ds:0x100825b4,ebx
1004ba5e:	push   esi
1004ba5f:	push   edi
1004ba60:	jne    0x1004ba67
1004ba62:	call   0x1004a5fa
1004ba67:	mov    esi,DWORD PTR ds:0x1007fa98
1004ba6d:	xor    edi,edi
1004ba6f:	cmp    esi,ebx
1004ba71:	jne    0x1004ba8b
1004ba73:	or     eax,0xffffffff
1004ba76:	jmp    0x1004bb16
1004ba7b:	cmp    al,0x3d
1004ba7d:	je     0x1004ba80
1004ba7f:	inc    edi
1004ba80:	push   esi
1004ba81:	call   0x10043010
1004ba86:	pop    ecx
1004ba87:	lea    esi,[esi+eax*1+0x1]
1004ba8b:	mov    al,BYTE PTR [esi]
1004ba8d:	cmp    al,bl
1004ba8f:	jne    0x1004ba7b
1004ba91:	push   0x4
1004ba93:	inc    edi
1004ba94:	push   edi
1004ba95:	call   0x10047462
1004ba9a:	mov    edi,eax
1004ba9c:	cmp    edi,ebx
1004ba9e:	pop    ecx
1004ba9f:	pop    ecx
1004baa0:	mov    DWORD PTR ds:0x1007fe08,edi
1004baa6:	je     0x1004ba73
1004baa8:	mov    esi,DWORD PTR ds:0x1007fa98
1004baae:	push   ebp
1004baaf:	jmp    0x1004baf1
1004bab1:	push   esi
1004bab2:	call   0x10043010
1004bab7:	mov    ebp,eax
1004bab9:	inc    ebp
1004baba:	cmp    BYTE PTR [esi],0x3d
1004babd:	pop    ecx
1004babe:	je     0x1004baef
1004bac0:	push   0x1
1004bac2:	push   ebp
1004bac3:	call   0x10047462
1004bac8:	cmp    eax,ebx
1004baca:	pop    ecx
1004bacb:	pop    ecx
1004bacc:	mov    DWORD PTR [edi],eax
1004bace:	je     0x1004bb1a
1004bad0:	push   esi
1004bad1:	push   ebp
1004bad2:	push   eax
1004bad3:	call   0x10046b99
1004bad8:	add    esp,0xc
1004badb:	test   eax,eax
1004badd:	je     0x1004baec
1004badf:	push   ebx
1004bae0:	push   ebx
1004bae1:	push   ebx
1004bae2:	push   ebx
1004bae3:	push   ebx
1004bae4:	call   0x10043290
1004bae9:	add    esp,0x14
1004baec:	add    edi,0x4
1004baef:	add    esi,ebp
1004baf1:	cmp    BYTE PTR [esi],bl
1004baf3:	jne    0x1004bab1
1004baf5:	push   DWORD PTR ds:0x1007fa98
1004bafb:	call   0x10043508
1004bb00:	mov    DWORD PTR ds:0x1007fa98,ebx
1004bb06:	mov    DWORD PTR [edi],ebx
1004bb08:	mov    DWORD PTR ds:0x100825a8,0x1
1004bb12:	xor    eax,eax
1004bb14:	pop    ecx
1004bb15:	pop    ebp
1004bb16:	pop    edi
1004bb17:	pop    esi
1004bb18:	pop    ebx
1004bb19:	ret    
1004bb1a:	push   DWORD PTR ds:0x1007fe08
1004bb20:	call   0x10043508
1004bb25:	mov    DWORD PTR ds:0x1007fe08,ebx
1004bb2b:	or     eax,0xffffffff
1004bb2e:	jmp    0x1004bb14
1004bb30:	push   ebp
1004bb31:	mov    ebp,esp
1004bb33:	push   ecx
1004bb34:	mov    ecx,DWORD PTR [ebp+0x10]
1004bb37:	push   ebx
1004bb38:	xor    eax,eax
1004bb3a:	cmp    DWORD PTR [ebp+0x8],eax
1004bb3d:	push   esi
1004bb3e:	mov    DWORD PTR [edi],eax
1004bb40:	mov    esi,edx
1004bb42:	mov    edx,DWORD PTR [ebp+0xc]
1004bb45:	mov    DWORD PTR [ecx],0x1
1004bb4b:	je     0x1004bb56
1004bb4d:	mov    ebx,DWORD PTR [ebp+0x8]
1004bb50:	add    DWORD PTR [ebp+0x8],0x4
1004bb54:	mov    DWORD PTR [ebx],edx
1004bb56:	mov    DWORD PTR [ebp-0x4],eax
1004bb59:	cmp    BYTE PTR [esi],0x22
1004bb5c:	jne    0x1004bb6e
1004bb5e:	xor    eax,eax
1004bb60:	cmp    DWORD PTR [ebp-0x4],eax
1004bb63:	mov    bl,0x22
1004bb65:	sete   al
1004bb68:	inc    esi
1004bb69:	mov    DWORD PTR [ebp-0x4],eax
1004bb6c:	jmp    0x1004bbaa
1004bb6e:	inc    DWORD PTR [edi]
1004bb70:	test   edx,edx
1004bb72:	je     0x1004bb7c
1004bb74:	mov    al,BYTE PTR [esi]
1004bb76:	mov    BYTE PTR [edx],al
1004bb78:	inc    edx
1004bb79:	mov    DWORD PTR [ebp+0xc],edx
1004bb7c:	mov    bl,BYTE PTR [esi]
1004bb7e:	movzx  eax,bl
1004bb81:	push   eax
1004bb82:	inc    esi
1004bb83:	call   0x1004f700
1004bb88:	test   eax,eax
1004bb8a:	pop    ecx
1004bb8b:	je     0x1004bba0
1004bb8d:	inc    DWORD PTR [edi]
1004bb8f:	cmp    DWORD PTR [ebp+0xc],0x0
1004bb93:	je     0x1004bb9f
1004bb95:	mov    ecx,DWORD PTR [ebp+0xc]
1004bb98:	mov    al,BYTE PTR [esi]
1004bb9a:	inc    DWORD PTR [ebp+0xc]
1004bb9d:	mov    BYTE PTR [ecx],al
1004bb9f:	inc    esi
1004bba0:	test   bl,bl
1004bba2:	mov    edx,DWORD PTR [ebp+0xc]
1004bba5:	mov    ecx,DWORD PTR [ebp+0x10]
1004bba8:	je     0x1004bbdc
1004bbaa:	cmp    DWORD PTR [ebp-0x4],0x0
1004bbae:	jne    0x1004bb59
1004bbb0:	cmp    bl,0x20
1004bbb3:	je     0x1004bbba
1004bbb5:	cmp    bl,0x9
1004bbb8:	jne    0x1004bb59
1004bbba:	test   edx,edx
1004bbbc:	je     0x1004bbc2
1004bbbe:	mov    BYTE PTR [edx-0x1],0x0
1004bbc2:	and    DWORD PTR [ebp-0x4],0x0
1004bbc6:	cmp    BYTE PTR [esi],0x0
1004bbc9:	je     0x1004bcb8
1004bbcf:	mov    al,BYTE PTR [esi]
1004bbd1:	cmp    al,0x20
1004bbd3:	je     0x1004bbd9
1004bbd5:	cmp    al,0x9
1004bbd7:	jne    0x1004bbdf
1004bbd9:	inc    esi
1004bbda:	jmp    0x1004bbcf
1004bbdc:	dec    esi
1004bbdd:	jmp    0x1004bbc2
1004bbdf:	cmp    BYTE PTR [esi],0x0
1004bbe2:	je     0x1004bcb8
1004bbe8:	cmp    DWORD PTR [ebp+0x8],0x0
1004bbec:	je     0x1004bbf7
1004bbee:	mov    eax,DWORD PTR [ebp+0x8]
1004bbf1:	add    DWORD PTR [ebp+0x8],0x4
1004bbf5:	mov    DWORD PTR [eax],edx
1004bbf7:	inc    DWORD PTR [ecx]
1004bbf9:	xor    ebx,ebx
1004bbfb:	inc    ebx
1004bbfc:	xor    ecx,ecx
1004bbfe:	jmp    0x1004bc02
1004bc00:	inc    esi
1004bc01:	inc    ecx
1004bc02:	cmp    BYTE PTR [esi],0x5c
1004bc05:	je     0x1004bc00
1004bc07:	cmp    BYTE PTR [esi],0x22
1004bc0a:	jne    0x1004bc32
1004bc0c:	test   cl,0x1
1004bc0f:	jne    0x1004bc30
1004bc11:	cmp    DWORD PTR [ebp-0x4],0x0
1004bc15:	je     0x1004bc23
1004bc17:	lea    eax,[esi+0x1]
1004bc1a:	cmp    BYTE PTR [eax],0x22
1004bc1d:	jne    0x1004bc23
1004bc1f:	mov    esi,eax
1004bc21:	jmp    0x1004bc30
1004bc23:	xor    eax,eax
1004bc25:	xor    ebx,ebx
1004bc27:	cmp    DWORD PTR [ebp-0x4],eax
1004bc2a:	sete   al
1004bc2d:	mov    DWORD PTR [ebp-0x4],eax
1004bc30:	shr    ecx,1
1004bc32:	test   ecx,ecx
1004bc34:	je     0x1004bc48
1004bc36:	dec    ecx
1004bc37:	test   edx,edx
1004bc39:	je     0x1004bc3f
1004bc3b:	mov    BYTE PTR [edx],0x5c
1004bc3e:	inc    edx
1004bc3f:	inc    DWORD PTR [edi]
1004bc41:	test   ecx,ecx
1004bc43:	jne    0x1004bc36
1004bc45:	mov    DWORD PTR [ebp+0xc],edx
1004bc48:	mov    al,BYTE PTR [esi]
1004bc4a:	test   al,al
1004bc4c:	je     0x1004bca3
1004bc4e:	cmp    DWORD PTR [ebp-0x4],0x0
1004bc52:	jne    0x1004bc5c
1004bc54:	cmp    al,0x20
1004bc56:	je     0x1004bca3
1004bc58:	cmp    al,0x9
1004bc5a:	je     0x1004bca3
1004bc5c:	test   ebx,ebx
1004bc5e:	je     0x1004bc9d
1004bc60:	test   edx,edx
1004bc62:	movsx  eax,al
1004bc65:	push   eax
1004bc66:	je     0x1004bc8b
1004bc68:	call   0x1004f700
1004bc6d:	test   eax,eax
1004bc6f:	pop    ecx
1004bc70:	je     0x1004bc7f
1004bc72:	mov    al,BYTE PTR [esi]
1004bc74:	mov    ecx,DWORD PTR [ebp+0xc]
1004bc77:	inc    DWORD PTR [ebp+0xc]
1004bc7a:	mov    BYTE PTR [ecx],al
1004bc7c:	inc    esi
1004bc7d:	inc    DWORD PTR [edi]
1004bc7f:	mov    ecx,DWORD PTR [ebp+0xc]
1004bc82:	mov    al,BYTE PTR [esi]
1004bc84:	inc    DWORD PTR [ebp+0xc]
1004bc87:	mov    BYTE PTR [ecx],al
1004bc89:	jmp    0x1004bc98
1004bc8b:	call   0x1004f700
1004bc90:	test   eax,eax
1004bc92:	pop    ecx
1004bc93:	je     0x1004bc98
1004bc95:	inc    esi
1004bc96:	inc    DWORD PTR [edi]
1004bc98:	inc    DWORD PTR [edi]
1004bc9a:	mov    edx,DWORD PTR [ebp+0xc]
1004bc9d:	inc    esi
1004bc9e:	jmp    0x1004bbf9
1004bca3:	test   edx,edx
1004bca5:	je     0x1004bcae
1004bca7:	mov    BYTE PTR [edx],0x0
1004bcaa:	inc    edx
1004bcab:	mov    DWORD PTR [ebp+0xc],edx
1004bcae:	inc    DWORD PTR [edi]
1004bcb0:	mov    ecx,DWORD PTR [ebp+0x10]
1004bcb3:	jmp    0x1004bbc6
1004bcb8:	mov    eax,DWORD PTR [ebp+0x8]
1004bcbb:	test   eax,eax
1004bcbd:	pop    esi
1004bcbe:	pop    ebx
1004bcbf:	je     0x1004bcc4
1004bcc1:	and    DWORD PTR [eax],0x0
1004bcc4:	inc    DWORD PTR [ecx]
1004bcc6:	leave  
1004bcc7:	ret    
1004bcc8:	push   ebp
1004bcc9:	mov    ebp,esp
1004bccb:	sub    esp,0xc
1004bcce:	push   ebx
1004bccf:	xor    ebx,ebx
1004bcd1:	cmp    DWORD PTR ds:0x100825b4,ebx
1004bcd7:	push   esi
1004bcd8:	push   edi
1004bcd9:	jne    0x1004bce0
1004bcdb:	call   0x1004a5fa
1004bce0:	push   0x104
1004bce5:	mov    esi,0x10080300
1004bcea:	push   esi
1004bceb:	push   ebx
1004bcec:	mov    BYTE PTR ds:0x10080404,bl
1004bcf2:	call   DWORD PTR ds:0x100661d8
1004bcf8:	mov    eax,ds:0x100825bc
1004bcfd:	cmp    eax,ebx
1004bcff:	mov    DWORD PTR ds:0x1007fe18,esi
1004bd05:	je     0x1004bd0e
1004bd07:	cmp    BYTE PTR [eax],bl
1004bd09:	mov    DWORD PTR [ebp-0x4],eax
1004bd0c:	jne    0x1004bd11
1004bd0e:	mov    DWORD PTR [ebp-0x4],esi
1004bd11:	mov    edx,DWORD PTR [ebp-0x4]
1004bd14:	lea    eax,[ebp-0x8]
1004bd17:	push   eax
1004bd18:	push   ebx
1004bd19:	push   ebx
1004bd1a:	lea    edi,[ebp-0xc]
1004bd1d:	call   0x1004bb30
1004bd22:	mov    eax,DWORD PTR [ebp-0x8]
1004bd25:	add    esp,0xc
1004bd28:	cmp    eax,0x3fffffff
1004bd2d:	jae    0x1004bd79
1004bd2f:	mov    ecx,DWORD PTR [ebp-0xc]
1004bd32:	cmp    ecx,0xffffffff
1004bd35:	jae    0x1004bd79
1004bd37:	mov    edi,eax
1004bd39:	shl    edi,0x2
1004bd3c:	lea    eax,[edi+ecx*1]
1004bd3f:	cmp    eax,ecx
1004bd41:	jb     0x1004bd79
1004bd43:	push   eax
1004bd44:	call   0x10047422
1004bd49:	mov    esi,eax
1004bd4b:	cmp    esi,ebx
1004bd4d:	pop    ecx
1004bd4e:	je     0x1004bd79
1004bd50:	mov    edx,DWORD PTR [ebp-0x4]
1004bd53:	lea    eax,[ebp-0x8]
1004bd56:	push   eax
1004bd57:	add    edi,esi
1004bd59:	push   edi
1004bd5a:	push   esi
1004bd5b:	lea    edi,[ebp-0xc]
1004bd5e:	call   0x1004bb30
1004bd63:	mov    eax,DWORD PTR [ebp-0x8]
1004bd66:	add    esp,0xc
1004bd69:	dec    eax
1004bd6a:	mov    ds:0x1007fdfc,eax
1004bd6f:	mov    DWORD PTR ds:0x1007fe00,esi
1004bd75:	xor    eax,eax
1004bd77:	jmp    0x1004bd7c
1004bd79:	or     eax,0xffffffff
1004bd7c:	pop    edi
1004bd7d:	pop    esi
1004bd7e:	pop    ebx
1004bd7f:	leave  
1004bd80:	ret    
1004bd81:	push   ecx
1004bd82:	push   ecx
1004bd83:	mov    eax,ds:0x10080408
1004bd88:	push   ebx
1004bd89:	push   ebp
1004bd8a:	push   esi
1004bd8b:	push   edi
1004bd8c:	mov    edi,DWORD PTR ds:0x10066208
1004bd92:	xor    ebx,ebx
1004bd94:	xor    esi,esi
1004bd96:	cmp    eax,ebx
1004bd98:	push   0x2
1004bd9a:	pop    ebp
1004bd9b:	jne    0x1004bdca
1004bd9d:	call   edi
1004bd9f:	mov    esi,eax
1004bda1:	cmp    esi,ebx
1004bda3:	je     0x1004bdb1
1004bda5:	mov    DWORD PTR ds:0x10080408,0x1
1004bdaf:	jmp    0x1004bdd3
1004bdb1:	call   DWORD PTR ds:0x100660cc
1004bdb7:	cmp    eax,0x78
1004bdba:	jne    0x1004bdc5
1004bdbc:	mov    eax,ebp
1004bdbe:	mov    ds:0x10080408,eax
1004bdc3:	jmp    0x1004bdca
1004bdc5:	mov    eax,ds:0x10080408
1004bdca:	cmp    eax,0x1
1004bdcd:	jne    0x1004be57
1004bdd3:	cmp    esi,ebx
1004bdd5:	jne    0x1004bde6
1004bdd7:	call   edi
1004bdd9:	mov    esi,eax
1004bddb:	cmp    esi,ebx
1004bddd:	jne    0x1004bde6
1004bddf:	xor    eax,eax
1004bde1:	jmp    0x1004beaf
1004bde6:	cmp    WORD PTR [esi],bx
1004bde9:	mov    eax,esi
1004bdeb:	je     0x1004bdfb
1004bded:	add    eax,ebp
1004bdef:	cmp    WORD PTR [eax],bx
1004bdf2:	jne    0x1004bded
1004bdf4:	add    eax,ebp
1004bdf6:	cmp    WORD PTR [eax],bx
1004bdf9:	jne    0x1004bded
1004bdfb:	mov    edi,DWORD PTR ds:0x100660b8
1004be01:	push   ebx
1004be02:	push   ebx
1004be03:	push   ebx
1004be04:	sub    eax,esi
1004be06:	push   ebx
1004be07:	sar    eax,1
1004be09:	inc    eax
1004be0a:	push   eax
1004be0b:	push   esi
1004be0c:	push   ebx
1004be0d:	push   ebx
1004be0e:	mov    DWORD PTR [esp+0x34],eax
1004be12:	call   edi
1004be14:	mov    ebp,eax
1004be16:	cmp    ebp,ebx
1004be18:	je     0x1004be4c
1004be1a:	push   ebp
1004be1b:	call   0x10047422
1004be20:	cmp    eax,ebx
1004be22:	pop    ecx
1004be23:	mov    DWORD PTR [esp+0x10],eax
1004be27:	je     0x1004be4c
1004be29:	push   ebx
1004be2a:	push   ebx
1004be2b:	push   ebp
1004be2c:	push   eax
1004be2d:	push   DWORD PTR [esp+0x24]
1004be31:	push   esi
1004be32:	push   ebx
1004be33:	push   ebx
1004be34:	call   edi
1004be36:	test   eax,eax
1004be38:	jne    0x1004be48
1004be3a:	push   DWORD PTR [esp+0x10]
1004be3e:	call   0x10043508
1004be43:	pop    ecx
1004be44:	mov    DWORD PTR [esp+0x10],ebx
1004be48:	mov    ebx,DWORD PTR [esp+0x10]
1004be4c:	push   esi
1004be4d:	call   DWORD PTR ds:0x10066204
1004be53:	mov    eax,ebx
1004be55:	jmp    0x1004beaf
1004be57:	cmp    eax,ebp
1004be59:	je     0x1004be5f
1004be5b:	cmp    eax,ebx
1004be5d:	jne    0x1004bddf
1004be5f:	call   DWORD PTR ds:0x10066200
1004be65:	mov    esi,eax
1004be67:	cmp    esi,ebx
1004be69:	je     0x1004bddf
1004be6f:	cmp    BYTE PTR [esi],bl
1004be71:	je     0x1004be7d
1004be73:	inc    eax
1004be74:	cmp    BYTE PTR [eax],bl
1004be76:	jne    0x1004be73
1004be78:	inc    eax
1004be79:	cmp    BYTE PTR [eax],bl
1004be7b:	jne    0x1004be73
1004be7d:	sub    eax,esi
1004be7f:	inc    eax
1004be80:	mov    ebp,eax
1004be82:	push   ebp
1004be83:	call   0x10047422
1004be88:	mov    edi,eax
1004be8a:	cmp    edi,ebx
1004be8c:	pop    ecx
1004be8d:	jne    0x1004be9b
1004be8f:	push   esi
1004be90:	call   DWORD PTR ds:0x100661fc
1004be96:	jmp    0x1004bddf
1004be9b:	push   ebp
1004be9c:	push   esi
1004be9d:	push   edi
1004be9e:	call   0x10045180
1004bea3:	add    esp,0xc
1004bea6:	push   esi
1004bea7:	call   DWORD PTR ds:0x100661fc
1004bead:	mov    eax,edi
1004beaf:	pop    edi
1004beb0:	pop    esi
1004beb1:	pop    ebp
1004beb2:	pop    ebx
1004beb3:	pop    ecx
1004beb4:	pop    ecx
1004beb5:	ret    
1004beb6:	push   esi
1004beb7:	push   edi
1004beb8:	mov    eax,0x10074514
1004bebd:	mov    edi,0x10074514
1004bec2:	cmp    eax,edi
1004bec4:	mov    esi,eax
1004bec6:	jae    0x1004bed7
1004bec8:	mov    eax,DWORD PTR [esi]
1004beca:	test   eax,eax
1004becc:	je     0x1004bed0
1004bece:	call   eax
1004bed0:	add    esi,0x4
1004bed3:	cmp    esi,edi
1004bed5:	jb     0x1004bec8
1004bed7:	pop    edi
1004bed8:	pop    esi
1004bed9:	ret    
1004beda:	push   esi
1004bedb:	push   edi
1004bedc:	mov    eax,0x1007451c
1004bee1:	mov    edi,0x1007451c
1004bee6:	cmp    eax,edi
1004bee8:	mov    esi,eax
1004beea:	jae    0x1004befb
1004beec:	mov    eax,DWORD PTR [esi]
1004beee:	test   eax,eax
1004bef0:	je     0x1004bef4
1004bef2:	call   eax
1004bef4:	add    esi,0x4
1004bef7:	cmp    esi,edi
1004bef9:	jb     0x1004beec
1004befb:	pop    edi
1004befc:	pop    esi
1004befd:	ret    
1004befe:	push   ebp
1004beff:	mov    ebp,esp
1004bf01:	push   ecx
1004bf02:	push   ecx
1004bf03:	push   esi
1004bf04:	call   0x10047079
1004bf09:	mov    esi,eax
1004bf0b:	test   esi,esi
1004bf0d:	jne    0x1004bf1d
1004bf0f:	push   DWORD PTR [ebp+0xc]
1004bf12:	call   DWORD PTR ds:0x1006617c
1004bf18:	jmp    0x1004c06a
1004bf1d:	mov    edx,DWORD PTR [esi+0x5c]
1004bf20:	mov    eax,ds:0x1007ea7c
1004bf25:	push   edi
1004bf26:	mov    edi,DWORD PTR [ebp+0x8]
1004bf29:	mov    ecx,edx
1004bf2b:	push   ebx
1004bf2c:	cmp    DWORD PTR [ecx],edi
1004bf2e:	je     0x1004bf3e
1004bf30:	mov    ebx,eax
1004bf32:	imul   ebx,ebx,0xc
1004bf35:	add    ecx,0xc
1004bf38:	add    ebx,edx
1004bf3a:	cmp    ecx,ebx
1004bf3c:	jb     0x1004bf2c
1004bf3e:	imul   eax,eax,0xc
1004bf41:	add    eax,edx
1004bf43:	cmp    ecx,eax
1004bf45:	jae    0x1004bf4f
1004bf47:	cmp    DWORD PTR [ecx],edi
1004bf49:	jne    0x1004bf4f
1004bf4b:	mov    eax,ecx
1004bf4d:	jmp    0x1004bf51
1004bf4f:	xor    eax,eax
1004bf51:	test   eax,eax
1004bf53:	je     0x1004bf5f
1004bf55:	mov    ebx,DWORD PTR [eax+0x8]
1004bf58:	test   ebx,ebx
1004bf5a:	mov    DWORD PTR [ebp-0x4],ebx
1004bf5d:	jne    0x1004bf6d
1004bf5f:	push   DWORD PTR [ebp+0xc]
1004bf62:	call   DWORD PTR ds:0x1006617c
1004bf68:	jmp    0x1004c068
1004bf6d:	cmp    ebx,0x5
1004bf70:	jne    0x1004bf7e
1004bf72:	and    DWORD PTR [eax+0x8],0x0
1004bf76:	xor    eax,eax
1004bf78:	inc    eax
1004bf79:	jmp    0x1004c068
1004bf7e:	cmp    ebx,0x1
1004bf81:	je     0x1004c065
1004bf87:	mov    ecx,DWORD PTR [esi+0x60]
1004bf8a:	mov    DWORD PTR [ebp-0x8],ecx
1004bf8d:	mov    ecx,DWORD PTR [ebp+0xc]
1004bf90:	mov    DWORD PTR [esi+0x60],ecx
1004bf93:	mov    ecx,DWORD PTR [eax+0x4]
1004bf96:	cmp    ecx,0x8
1004bf99:	jne    0x1004c057
1004bf9f:	mov    ecx,DWORD PTR ds:0x1007ea70
1004bfa5:	mov    edi,DWORD PTR ds:0x1007ea74
1004bfab:	mov    edx,ecx
1004bfad:	add    edi,ecx
1004bfaf:	cmp    edx,edi
1004bfb1:	jge    0x1004bfd7
1004bfb3:	imul   ecx,ecx,0xc
1004bfb6:	mov    edi,DWORD PTR [esi+0x5c]
1004bfb9:	and    DWORD PTR [ecx+edi*1+0x8],0x0
1004bfbe:	mov    edi,DWORD PTR ds:0x1007ea70
1004bfc4:	mov    ebx,DWORD PTR ds:0x1007ea74
1004bfca:	inc    edx
1004bfcb:	add    ebx,edi
1004bfcd:	add    ecx,0xc
1004bfd0:	cmp    edx,ebx
1004bfd2:	jl     0x1004bfb6
1004bfd4:	mov    ebx,DWORD PTR [ebp-0x4]
1004bfd7:	mov    eax,DWORD PTR [eax]
1004bfd9:	cmp    eax,0xc000008e
1004bfde:	mov    edi,DWORD PTR [esi+0x64]
1004bfe1:	jne    0x1004bfec
1004bfe3:	mov    DWORD PTR [esi+0x64],0x83
1004bfea:	jmp    0x1004c04a
1004bfec:	cmp    eax,0xc0000090
1004bff1:	jne    0x1004bffc
1004bff3:	mov    DWORD PTR [esi+0x64],0x81
1004bffa:	jmp    0x1004c04a
1004bffc:	cmp    eax,0xc0000091
1004c001:	jne    0x1004c00c
1004c003:	mov    DWORD PTR [esi+0x64],0x84
1004c00a:	jmp    0x1004c04a
1004c00c:	cmp    eax,0xc0000093
1004c011:	jne    0x1004c01c
1004c013:	mov    DWORD PTR [esi+0x64],0x85
1004c01a:	jmp    0x1004c04a
1004c01c:	cmp    eax,0xc000008d
1004c021:	jne    0x1004c02c
1004c023:	mov    DWORD PTR [esi+0x64],0x82
1004c02a:	jmp    0x1004c04a
1004c02c:	cmp    eax,0xc000008f
1004c031:	jne    0x1004c03c
1004c033:	mov    DWORD PTR [esi+0x64],0x86
1004c03a:	jmp    0x1004c04a
1004c03c:	cmp    eax,0xc0000092
1004c041:	jne    0x1004c04a
1004c043:	mov    DWORD PTR [esi+0x64],0x8a
1004c04a:	push   DWORD PTR [esi+0x64]
1004c04d:	push   0x8
1004c04f:	call   ebx
1004c051:	pop    ecx
1004c052:	mov    DWORD PTR [esi+0x64],edi
1004c055:	jmp    0x1004c05e
1004c057:	and    DWORD PTR [eax+0x8],0x0
1004c05b:	push   ecx
1004c05c:	call   ebx
1004c05e:	mov    eax,DWORD PTR [ebp-0x8]
1004c061:	pop    ecx
1004c062:	mov    DWORD PTR [esi+0x60],eax
1004c065:	or     eax,0xffffffff
1004c068:	pop    ebx
1004c069:	pop    edi
1004c06a:	pop    esi
1004c06b:	leave  
1004c06c:	ret    
1004c06d:	mov    eax,0xe06d7363
1004c072:	cmp    DWORD PTR [esp+0x4],eax
1004c076:	jne    0x1004c085
1004c078:	push   DWORD PTR [esp+0x8]
1004c07c:	push   eax
1004c07d:	call   0x1004befe
1004c082:	pop    ecx
1004c083:	pop    ecx
1004c084:	ret    
1004c085:	xor    eax,eax
1004c087:	ret    
1004c088:	push   ebp
1004c089:	mov    ebp,esp
1004c08b:	sub    esp,0x10
1004c08e:	mov    eax,ds:0x1007e030
1004c093:	and    DWORD PTR [ebp-0x8],0x0
1004c097:	and    DWORD PTR [ebp-0x4],0x0
1004c09b:	push   ebx
1004c09c:	push   edi
1004c09d:	mov    edi,0xbb40e64e
1004c0a2:	cmp    eax,edi
1004c0a4:	mov    ebx,0xffff0000
1004c0a9:	je     0x1004c0b8
1004c0ab:	test   ebx,eax
1004c0ad:	je     0x1004c0b8
1004c0af:	not    eax
1004c0b1:	mov    ds:0x1007e034,eax
1004c0b6:	jmp    0x1004c118
1004c0b8:	push   esi
1004c0b9:	lea    eax,[ebp-0x8]
1004c0bc:	push   eax
1004c0bd:	call   DWORD PTR ds:0x10066214
1004c0c3:	mov    esi,DWORD PTR [ebp-0x4]
1004c0c6:	xor    esi,DWORD PTR [ebp-0x8]
1004c0c9:	call   DWORD PTR ds:0x10066210
1004c0cf:	xor    esi,eax
1004c0d1:	call   DWORD PTR ds:0x10066160
1004c0d7:	xor    esi,eax
1004c0d9:	call   DWORD PTR ds:0x10066118
1004c0df:	xor    esi,eax
1004c0e1:	lea    eax,[ebp-0x10]
1004c0e4:	push   eax
1004c0e5:	call   DWORD PTR ds:0x1006620c
1004c0eb:	mov    eax,DWORD PTR [ebp-0xc]
1004c0ee:	xor    eax,DWORD PTR [ebp-0x10]
1004c0f1:	xor    esi,eax
1004c0f3:	cmp    esi,edi
1004c0f5:	jne    0x1004c0fe
1004c0f7:	mov    esi,0xbb40e64f
1004c0fc:	jmp    0x1004c109
1004c0fe:	test   ebx,esi
1004c100:	jne    0x1004c109
1004c102:	mov    eax,esi
1004c104:	shl    eax,0x10
1004c107:	or     esi,eax
1004c109:	mov    DWORD PTR ds:0x1007e030,esi
1004c10f:	not    esi
1004c111:	mov    DWORD PTR ds:0x1007e034,esi
1004c117:	pop    esi
1004c118:	pop    edi
1004c119:	pop    ebx
1004c11a:	leave  
1004c11b:	ret    
1004c11c:	push   ebx
1004c11d:	push   esi
1004c11e:	push   edi
1004c11f:	mov    edx,DWORD PTR [esp+0x10]
1004c123:	mov    eax,DWORD PTR [esp+0x14]
1004c127:	mov    ecx,DWORD PTR [esp+0x18]
1004c12b:	push   ebp
1004c12c:	push   edx
1004c12d:	push   eax
1004c12e:	push   ecx
1004c12f:	push   ecx
1004c130:	push   0x1004c1ac
1004c135:	push   DWORD PTR fs:0x0
1004c13c:	mov    eax,ds:0x1007e030
1004c141:	xor    eax,esp
1004c143:	mov    DWORD PTR [esp+0x8],eax
1004c147:	mov    DWORD PTR fs:0x0,esp
1004c14e:	mov    eax,DWORD PTR [esp+0x30]
1004c152:	mov    ebx,DWORD PTR [eax+0x8]
1004c155:	mov    ecx,DWORD PTR [esp+0x2c]
1004c159:	xor    ebx,DWORD PTR [ecx]
1004c15b:	mov    esi,DWORD PTR [eax+0xc]
1004c15e:	cmp    esi,0xfffffffe
1004c161:	je     0x1004c19e
1004c163:	mov    edx,DWORD PTR [esp+0x34]
1004c167:	cmp    edx,0xfffffffe
1004c16a:	je     0x1004c170
1004c16c:	cmp    esi,edx
1004c16e:	jbe    0x1004c19e
1004c170:	lea    esi,[esi+esi*2]
1004c173:	lea    ebx,[ebx+esi*4+0x10]
1004c177:	mov    ecx,DWORD PTR [ebx]
1004c179:	mov    DWORD PTR [eax+0xc],ecx
1004c17c:	cmp    DWORD PTR [ebx+0x4],0x0
1004c180:	jne    0x1004c14e
1004c182:	push   0x101
1004c187:	mov    eax,DWORD PTR [ebx+0x8]
1004c18a:	call   0x1004f829
1004c18f:	mov    ecx,0x1
1004c194:	mov    eax,DWORD PTR [ebx+0x8]
1004c197:	call   0x1004f848
1004c19c:	jmp    0x1004c14e
1004c19e:	pop    DWORD PTR fs:0x0
1004c1a5:	add    esp,0x18
1004c1a8:	pop    edi
1004c1a9:	pop    esi
1004c1aa:	pop    ebx
1004c1ab:	ret    
1004c1ac:	mov    ecx,DWORD PTR [esp+0x4]
1004c1b0:	test   DWORD PTR [ecx+0x4],0x6
1004c1b7:	mov    eax,0x1
1004c1bc:	je     0x1004c1f1
1004c1be:	mov    eax,DWORD PTR [esp+0x8]
1004c1c2:	mov    ecx,DWORD PTR [eax+0x8]
1004c1c5:	xor    ecx,eax
1004c1c7:	call   0x10042e97
1004c1cc:	push   ebp
1004c1cd:	mov    ebp,DWORD PTR [eax+0x18]
1004c1d0:	push   DWORD PTR [eax+0xc]
1004c1d3:	push   DWORD PTR [eax+0x10]
1004c1d6:	push   DWORD PTR [eax+0x14]
1004c1d9:	call   0x1004c11c
1004c1de:	add    esp,0xc
1004c1e1:	pop    ebp
1004c1e2:	mov    eax,DWORD PTR [esp+0x8]
1004c1e6:	mov    edx,DWORD PTR [esp+0x10]
1004c1ea:	mov    DWORD PTR [edx],eax
1004c1ec:	mov    eax,0x3
1004c1f1:	ret    
1004c1f2:	push   ebp
1004c1f3:	mov    ecx,DWORD PTR [esp+0x8]
1004c1f7:	mov    ebp,DWORD PTR [ecx]
1004c1f9:	push   DWORD PTR [ecx+0x1c]
1004c1fc:	push   DWORD PTR [ecx+0x18]
1004c1ff:	push   DWORD PTR [ecx+0x28]
1004c202:	call   0x1004c11c
1004c207:	add    esp,0xc
1004c20a:	pop    ebp
1004c20b:	ret    0x4
1004c20e:	push   ebp
1004c20f:	push   esi
1004c210:	push   edi
1004c211:	push   ebx
1004c212:	mov    ebp,edx
1004c214:	xor    eax,eax
1004c216:	xor    ebx,ebx
1004c218:	xor    edx,edx
1004c21a:	xor    esi,esi
1004c21c:	xor    edi,edi
1004c21e:	call   ecx
1004c220:	pop    ebx
1004c221:	pop    edi
1004c222:	pop    esi
1004c223:	pop    ebp
1004c224:	ret    
1004c225:	mov    ebp,edx
1004c227:	mov    esi,ecx
1004c229:	mov    eax,ecx
1004c22b:	push   0x1
1004c22d:	call   0x1004f829
1004c232:	xor    eax,eax
1004c234:	xor    ebx,ebx
1004c236:	xor    ecx,ecx
1004c238:	xor    edx,edx
1004c23a:	xor    edi,edi
1004c23c:	jmp    esi
1004c23e:	push   ebp
1004c23f:	mov    ebp,esp
1004c241:	push   ebx
1004c242:	push   esi
1004c243:	push   edi
1004c244:	push   0x0
1004c246:	push   0x0
1004c248:	push   0x1004c253
1004c24d:	push   ecx
1004c24e:	call   0x10056ad4
1004c253:	pop    edi
1004c254:	pop    esi
1004c255:	pop    ebx
1004c256:	pop    ebp
1004c257:	ret    
1004c258:	push   ebp
1004c259:	mov    ebp,DWORD PTR [esp+0x8]
1004c25d:	push   edx
1004c25e:	push   ecx
1004c25f:	push   DWORD PTR [esp+0x14]
1004c263:	call   0x1004c11c
1004c268:	add    esp,0xc
1004c26b:	pop    ebp
1004c26c:	ret    0x8
1004c26f:	int3   
1004c270:	mov    ecx,DWORD PTR [esp+0x4]
1004c274:	cmp    WORD PTR [ecx],0x5a4d
1004c279:	je     0x1004c27e
1004c27b:	xor    eax,eax
1004c27d:	ret    
1004c27e:	mov    eax,DWORD PTR [ecx+0x3c]
1004c281:	add    eax,ecx
1004c283:	cmp    DWORD PTR [eax],0x4550
1004c289:	jne    0x1004c27b
1004c28b:	xor    ecx,ecx
1004c28d:	cmp    WORD PTR [eax+0x18],0x10b
1004c293:	sete   cl
1004c296:	mov    eax,ecx
1004c298:	ret    
1004c299:	int3   
1004c29a:	int3   
1004c29b:	int3   
1004c29c:	int3   
1004c29d:	int3   
1004c29e:	int3   
1004c29f:	int3   
1004c2a0:	mov    eax,DWORD PTR [esp+0x4]
1004c2a4:	mov    ecx,DWORD PTR [eax+0x3c]
1004c2a7:	add    ecx,eax
1004c2a9:	movzx  eax,WORD PTR [ecx+0x14]
1004c2ad:	push   ebx
1004c2ae:	push   esi
1004c2af:	movzx  esi,WORD PTR [ecx+0x6]
1004c2b3:	xor    edx,edx
1004c2b5:	test   esi,esi
1004c2b7:	push   edi
1004c2b8:	lea    eax,[eax+ecx*1+0x18]
1004c2bc:	jbe    0x1004c2dc
1004c2be:	mov    edi,DWORD PTR [esp+0x14]
1004c2c2:	mov    ecx,DWORD PTR [eax+0xc]
1004c2c5:	cmp    edi,ecx
1004c2c7:	jb     0x1004c2d2
1004c2c9:	mov    ebx,DWORD PTR [eax+0x8]
1004c2cc:	add    ebx,ecx
1004c2ce:	cmp    edi,ebx
1004c2d0:	jb     0x1004c2de
1004c2d2:	add    edx,0x1
1004c2d5:	add    eax,0x28
1004c2d8:	cmp    edx,esi
1004c2da:	jb     0x1004c2c2
1004c2dc:	xor    eax,eax
1004c2de:	pop    edi
1004c2df:	pop    esi
1004c2e0:	pop    ebx
1004c2e1:	ret    
1004c2e2:	push   0x8
1004c2e4:	push   0x100747c8
1004c2e9:	call   0x10046c94
1004c2ee:	and    DWORD PTR [ebp-0x4],0x0
1004c2f2:	mov    edx,0x10000000
1004c2f7:	push   edx
1004c2f8:	call   0x1004c270
1004c2fd:	pop    ecx
1004c2fe:	test   eax,eax
1004c300:	je     0x1004c33f
1004c302:	mov    eax,DWORD PTR [ebp+0x8]
1004c305:	sub    eax,edx
1004c307:	push   eax
1004c308:	push   edx
1004c309:	call   0x1004c2a0
1004c30e:	pop    ecx
1004c30f:	pop    ecx
1004c310:	test   eax,eax
1004c312:	je     0x1004c33f
1004c314:	mov    eax,DWORD PTR [eax+0x24]
1004c317:	shr    eax,0x1f
1004c31a:	not    eax
1004c31c:	and    eax,0x1
1004c31f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c326:	jmp    0x1004c348
1004c328:	mov    eax,DWORD PTR [ebp-0x14]
1004c32b:	mov    eax,DWORD PTR [eax]
1004c32d:	mov    eax,DWORD PTR [eax]
1004c32f:	xor    ecx,ecx
1004c331:	cmp    eax,0xc0000005
1004c336:	sete   cl
1004c339:	mov    eax,ecx
1004c33b:	ret    
1004c33c:	mov    esp,DWORD PTR [ebp-0x18]
1004c33f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c346:	xor    eax,eax
1004c348:	call   0x10046cd9
1004c34d:	ret    
1004c34e:	push   esi
1004c34f:	push   edi
1004c350:	xor    edi,edi
1004c352:	lea    esi,[edi+0x1007ea80]
1004c358:	push   DWORD PTR [esi]
1004c35a:	call   0x10046e86
1004c35f:	add    edi,0x4
1004c362:	cmp    edi,0x28
1004c365:	pop    ecx
1004c366:	mov    DWORD PTR [esi],eax
1004c368:	jb     0x1004c352
1004c36a:	pop    edi
1004c36b:	pop    esi
1004c36c:	ret    
1004c36d:	mov    eax,DWORD PTR [esp+0x4]
1004c371:	mov    ds:0x1008040c,eax
1004c376:	mov    ds:0x10080410,eax
1004c37b:	mov    ds:0x10080414,eax
1004c380:	mov    ds:0x10080418,eax
1004c385:	ret    
1004c386:	mov    eax,DWORD PTR [esp+0x4]
1004c38a:	mov    ecx,DWORD PTR ds:0x1007ea7c
1004c390:	push   esi
1004c391:	cmp    DWORD PTR [eax+0x4],edx
1004c394:	je     0x1004c3a6
1004c396:	mov    esi,ecx
1004c398:	imul   esi,esi,0xc
1004c39b:	add    esi,DWORD PTR [esp+0x8]
1004c39f:	add    eax,0xc
1004c3a2:	cmp    eax,esi
1004c3a4:	jb     0x1004c391
1004c3a6:	imul   ecx,ecx,0xc
1004c3a9:	add    ecx,DWORD PTR [esp+0x8]
1004c3ad:	pop    esi
1004c3ae:	cmp    eax,ecx
1004c3b0:	jae    0x1004c3b7
1004c3b2:	cmp    DWORD PTR [eax+0x4],edx
1004c3b5:	je     0x1004c3b9
1004c3b7:	xor    eax,eax
1004c3b9:	ret    
1004c3ba:	push   DWORD PTR ds:0x10080414
1004c3c0:	call   0x10046ef2
1004c3c5:	pop    ecx
1004c3c6:	ret    
1004c3c7:	push   0x20
1004c3c9:	push   0x100747e8
1004c3ce:	call   0x10046c94
1004c3d3:	xor    edi,edi
1004c3d5:	mov    DWORD PTR [ebp-0x1c],edi
1004c3d8:	mov    DWORD PTR [ebp-0x28],edi
1004c3db:	mov    ebx,DWORD PTR [ebp+0x8]
1004c3de:	cmp    ebx,0xb
1004c3e1:	jg     0x1004c42f
1004c3e3:	je     0x1004c3fa
1004c3e5:	mov    eax,ebx
1004c3e7:	push   0x2
1004c3e9:	pop    ecx
1004c3ea:	sub    eax,ecx
1004c3ec:	je     0x1004c410
1004c3ee:	sub    eax,ecx
1004c3f0:	je     0x1004c3fa
1004c3f2:	sub    eax,ecx
1004c3f4:	je     0x1004c45a
1004c3f6:	sub    eax,ecx
1004c3f8:	jne    0x1004c43e
1004c3fa:	call   0x10047079
1004c3ff:	mov    edi,eax
1004c401:	mov    DWORD PTR [ebp-0x28],edi
1004c404:	test   edi,edi
1004c406:	jne    0x1004c41c
1004c408:	or     eax,0xffffffff
1004c40b:	jmp    0x1004c571
1004c410:	mov    esi,0x1008040c
1004c415:	mov    eax,ds:0x1008040c
1004c41a:	jmp    0x1004c47c
1004c41c:	push   DWORD PTR [edi+0x5c]
1004c41f:	mov    edx,ebx
1004c421:	call   0x1004c386
1004c426:	mov    esi,eax
1004c428:	add    esi,0x8
1004c42b:	mov    eax,DWORD PTR [esi]
1004c42d:	jmp    0x1004c489
1004c42f:	mov    eax,ebx
1004c431:	sub    eax,0xf
1004c434:	je     0x1004c472
1004c436:	sub    eax,0x6
1004c439:	je     0x1004c466
1004c43b:	dec    eax
1004c43c:	je     0x1004c45a
1004c43e:	call   0x10046b55
1004c443:	mov    DWORD PTR [eax],0x16
1004c449:	xor    eax,eax
1004c44b:	push   eax
1004c44c:	push   eax
1004c44d:	push   eax
1004c44e:	push   eax
1004c44f:	push   eax
1004c450:	call   0x1004338c
1004c455:	add    esp,0x14
1004c458:	jmp    0x1004c408
1004c45a:	mov    esi,0x10080414
1004c45f:	mov    eax,ds:0x10080414
1004c464:	jmp    0x1004c47c
1004c466:	mov    esi,0x10080410
1004c46b:	mov    eax,ds:0x10080410
1004c470:	jmp    0x1004c47c
1004c472:	mov    esi,0x10080418
1004c477:	mov    eax,ds:0x10080418
1004c47c:	mov    DWORD PTR [ebp-0x1c],0x1
1004c483:	push   eax
1004c484:	call   0x10046ef2
1004c489:	mov    DWORD PTR [ebp-0x20],eax
1004c48c:	pop    ecx
1004c48d:	xor    eax,eax
1004c48f:	cmp    DWORD PTR [ebp-0x20],0x1
1004c493:	je     0x1004c571
1004c499:	cmp    DWORD PTR [ebp-0x20],eax
1004c49c:	jne    0x1004c4a5
1004c49e:	push   0x3
1004c4a0:	call   0x10047814
1004c4a5:	cmp    DWORD PTR [ebp-0x1c],eax
1004c4a8:	je     0x1004c4b1
1004c4aa:	push   eax
1004c4ab:	call   0x10047c9d
1004c4b0:	pop    ecx
1004c4b1:	xor    eax,eax
1004c4b3:	mov    DWORD PTR [ebp-0x4],eax
1004c4b6:	cmp    ebx,0x8
1004c4b9:	je     0x1004c4c5
1004c4bb:	cmp    ebx,0xb
1004c4be:	je     0x1004c4c5
1004c4c0:	cmp    ebx,0x4
1004c4c3:	jne    0x1004c4e0
1004c4c5:	mov    ecx,DWORD PTR [edi+0x60]
1004c4c8:	mov    DWORD PTR [ebp-0x2c],ecx
1004c4cb:	mov    DWORD PTR [edi+0x60],eax
1004c4ce:	cmp    ebx,0x8
1004c4d1:	jne    0x1004c513
1004c4d3:	mov    ecx,DWORD PTR [edi+0x64]
1004c4d6:	mov    DWORD PTR [ebp-0x30],ecx
1004c4d9:	mov    DWORD PTR [edi+0x64],0x8c
1004c4e0:	cmp    ebx,0x8
1004c4e3:	jne    0x1004c513
1004c4e5:	mov    ecx,DWORD PTR ds:0x1007ea70
1004c4eb:	mov    DWORD PTR [ebp-0x24],ecx
1004c4ee:	mov    ecx,DWORD PTR ds:0x1007ea74
1004c4f4:	mov    edx,DWORD PTR ds:0x1007ea70
1004c4fa:	add    ecx,edx
1004c4fc:	cmp    DWORD PTR [ebp-0x24],ecx
1004c4ff:	jge    0x1004c51a
1004c501:	mov    ecx,DWORD PTR [ebp-0x24]
1004c504:	imul   ecx,ecx,0xc
1004c507:	mov    edx,DWORD PTR [edi+0x5c]
1004c50a:	mov    DWORD PTR [ecx+edx*1+0x8],eax
1004c50e:	inc    DWORD PTR [ebp-0x24]
1004c511:	jmp    0x1004c4ee
1004c513:	call   0x10046ee9
1004c518:	mov    DWORD PTR [esi],eax
1004c51a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c521:	call   0x1004c53b
1004c526:	cmp    ebx,0x8
1004c529:	jne    0x1004c54a
1004c52b:	push   DWORD PTR [edi+0x64]
1004c52e:	push   ebx
1004c52f:	call   DWORD PTR [ebp-0x20]
1004c532:	pop    ecx
1004c533:	jmp    0x1004c54e
1004c535:	mov    ebx,DWORD PTR [ebp+0x8]
1004c538:	mov    edi,DWORD PTR [ebp-0x28]
1004c53b:	cmp    DWORD PTR [ebp-0x1c],0x0
1004c53f:	je     0x1004c549
1004c541:	push   0x0
1004c543:	call   0x10047bc5
1004c548:	pop    ecx
1004c549:	ret    
1004c54a:	push   ebx
1004c54b:	call   DWORD PTR [ebp-0x20]
1004c54e:	pop    ecx
1004c54f:	cmp    ebx,0x8
1004c552:	je     0x1004c55e
1004c554:	cmp    ebx,0xb
1004c557:	je     0x1004c55e
1004c559:	cmp    ebx,0x4
1004c55c:	jne    0x1004c56f
1004c55e:	mov    eax,DWORD PTR [ebp-0x2c]
1004c561:	mov    DWORD PTR [edi+0x60],eax
1004c564:	cmp    ebx,0x8
1004c567:	jne    0x1004c56f
1004c569:	mov    eax,DWORD PTR [ebp-0x30]
1004c56c:	mov    DWORD PTR [edi+0x64],eax
1004c56f:	xor    eax,eax
1004c571:	call   0x10046cd9
1004c576:	ret    
1004c577:	mov    eax,DWORD PTR [esp+0x4]
1004c57b:	mov    ds:0x10080420,eax
1004c580:	ret    
1004c581:	mov    eax,DWORD PTR [esp+0x4]
1004c585:	mov    ds:0x10080424,eax
1004c58a:	ret    
1004c58b:	push   DWORD PTR [esp+0x4]
1004c58f:	call   DWORD PTR ds:0x1006611c
1004c595:	xor    eax,eax
1004c597:	inc    eax
1004c598:	ret    0x8
1004c59b:	push   0x14
1004c59d:	push   0x10074808
1004c5a2:	call   0x10046c94
1004c5a7:	xor    edi,edi
1004c5a9:	mov    DWORD PTR [ebp-0x1c],edi
1004c5ac:	push   DWORD PTR ds:0x10080424
1004c5b2:	call   0x10046ef2
1004c5b7:	pop    ecx
1004c5b8:	mov    esi,eax
1004c5ba:	cmp    esi,edi
1004c5bc:	jne    0x1004c611
1004c5be:	lea    eax,[ebp-0x1c]
1004c5c1:	push   eax
1004c5c2:	call   0x10047641
1004c5c7:	pop    ecx
1004c5c8:	cmp    eax,edi
1004c5ca:	je     0x1004c5d9
1004c5cc:	push   edi
1004c5cd:	push   edi
1004c5ce:	push   edi
1004c5cf:	push   edi
1004c5d0:	push   edi
1004c5d1:	call   0x10043290
1004c5d6:	add    esp,0x14
1004c5d9:	cmp    DWORD PTR [ebp-0x1c],0x1
1004c5dd:	je     0x1004c600
1004c5df:	push   0x1006f83c
1004c5e4:	call   DWORD PTR ds:0x10066198
1004c5ea:	cmp    eax,edi
1004c5ec:	je     0x1004c600
1004c5ee:	push   0x10066ccc
1004c5f3:	push   eax
1004c5f4:	call   DWORD PTR ds:0x1006612c
1004c5fa:	mov    esi,eax
1004c5fc:	cmp    esi,edi
1004c5fe:	jne    0x1004c605
1004c600:	mov    esi,0x1004c58b
1004c605:	push   esi
1004c606:	call   0x10046e86
1004c60b:	pop    ecx
1004c60c:	mov    ds:0x10080424,eax
1004c611:	mov    DWORD PTR [ebp-0x4],edi
1004c614:	push   DWORD PTR [ebp+0xc]
1004c617:	push   DWORD PTR [ebp+0x8]
1004c61a:	call   esi
1004c61c:	mov    DWORD PTR [ebp-0x20],eax
1004c61f:	jmp    0x1004c650
1004c621:	mov    eax,DWORD PTR [ebp-0x14]
1004c624:	mov    eax,DWORD PTR [eax]
1004c626:	mov    eax,DWORD PTR [eax]
1004c628:	mov    DWORD PTR [ebp-0x24],eax
1004c62b:	xor    ecx,ecx
1004c62d:	cmp    eax,0xc0000017
1004c632:	sete   cl
1004c635:	mov    eax,ecx
1004c637:	ret    
1004c638:	mov    esp,DWORD PTR [ebp-0x18]
1004c63b:	cmp    DWORD PTR [ebp-0x24],0xc0000017
1004c642:	jne    0x1004c64c
1004c644:	push   0x8
1004c646:	call   DWORD PTR ds:0x1006615c
1004c64c:	and    DWORD PTR [ebp-0x20],0x0
1004c650:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c657:	mov    eax,DWORD PTR [ebp-0x20]
1004c65a:	call   0x10046cd9
1004c65f:	ret    
1004c660:	push   edi
1004c661:	mov    edi,DWORD PTR [esp+0x8]
1004c665:	mov    eax,DWORD PTR [edi]
1004c667:	cmp    DWORD PTR [eax],0xe06d7363
1004c66d:	jne    0x1004c699
1004c66f:	cmp    DWORD PTR [eax+0x10],0x3
1004c673:	jne    0x1004c699
1004c675:	mov    eax,DWORD PTR [eax+0x14]
1004c678:	cmp    eax,0x19930520
1004c67d:	je     0x1004c694
1004c67f:	cmp    eax,0x19930521
1004c684:	je     0x1004c694
1004c686:	cmp    eax,0x19930522
1004c68b:	je     0x1004c694
1004c68d:	cmp    eax,0x1994000
1004c692:	jne    0x1004c699
1004c694:	call   0x10046bfe
1004c699:	cmp    BYTE PTR ds:0x10080468,0x0
1004c6a0:	push   esi
1004c6a1:	je     0x1004c6c5
1004c6a3:	push   DWORD PTR ds:0x10080464
1004c6a9:	call   0x10046ef2
1004c6ae:	mov    esi,eax
1004c6b0:	test   esi,esi
1004c6b2:	pop    ecx
1004c6b3:	je     0x1004c6c5
1004c6b5:	push   esi
1004c6b6:	call   0x1004f854
1004c6bb:	test   eax,eax
1004c6bd:	pop    ecx
1004c6be:	je     0x1004c6c5
1004c6c0:	push   edi
1004c6c1:	call   esi
1004c6c3:	jmp    0x1004c6c7
1004c6c5:	xor    eax,eax
1004c6c7:	pop    esi
1004c6c8:	pop    edi
1004c6c9:	ret    0x4
1004c6cc:	push   0x1004c660
1004c6d1:	call   DWORD PTR ds:0x10066180
1004c6d7:	push   eax
1004c6d8:	call   0x10046e86
1004c6dd:	mov    ds:0x10080464,eax
1004c6e2:	pop    ecx
1004c6e3:	mov    BYTE PTR ds:0x10080468,0x1
1004c6ea:	xor    eax,eax
1004c6ec:	ret    
1004c6ed:	cmp    BYTE PTR ds:0x10080468,0x0
1004c6f4:	je     0x1004c710
1004c6f6:	push   DWORD PTR ds:0x10080464
1004c6fc:	call   0x10046ef2
1004c701:	pop    ecx
1004c702:	push   eax
1004c703:	call   DWORD PTR ds:0x10066180
1004c709:	mov    BYTE PTR ds:0x10080468,0x0
1004c710:	ret    
1004c711:	push   ebp
1004c712:	mov    ebp,esp
1004c714:	push   ecx
1004c715:	push   ecx
1004c716:	mov    eax,DWORD PTR [ebp+0xc]
1004c719:	push   esi
1004c71a:	mov    esi,DWORD PTR [ebp+0x8]
1004c71d:	mov    DWORD PTR [ebp-0x8],eax
1004c720:	mov    eax,DWORD PTR [ebp+0x10]
1004c723:	push   edi
1004c724:	push   esi
1004c725:	mov    DWORD PTR [ebp-0x4],eax
1004c728:	call   0x1004f95f
1004c72d:	or     edi,0xffffffff
1004c730:	cmp    eax,edi
1004c732:	pop    ecx
1004c733:	jne    0x1004c746
1004c735:	call   0x10046b55
1004c73a:	mov    DWORD PTR [eax],0x9
1004c740:	mov    eax,edi
1004c742:	mov    edx,edi
1004c744:	jmp    0x1004c790
1004c746:	push   DWORD PTR [ebp+0x14]
1004c749:	lea    ecx,[ebp-0x4]
1004c74c:	push   ecx
1004c74d:	push   DWORD PTR [ebp-0x8]
1004c750:	push   eax
1004c751:	call   DWORD PTR ds:0x10066224
1004c757:	cmp    eax,edi
1004c759:	mov    DWORD PTR [ebp-0x8],eax
1004c75c:	jne    0x1004c771
1004c75e:	call   DWORD PTR ds:0x100660cc
1004c764:	test   eax,eax
1004c766:	je     0x1004c771
1004c768:	push   eax
1004c769:	call   0x10046b7b
1004c76e:	pop    ecx
1004c76f:	jmp    0x1004c740
1004c771:	mov    eax,esi
1004c773:	and    esi,0x1f
1004c776:	imul   esi,esi,0x28
1004c779:	sar    eax,0x5
1004c77c:	mov    eax,DWORD PTR [eax*4+0x10082480]
1004c783:	lea    eax,[eax+esi*1+0x4]
1004c787:	and    BYTE PTR [eax],0xfd
1004c78a:	mov    eax,DWORD PTR [ebp-0x8]
1004c78d:	mov    edx,DWORD PTR [ebp-0x4]
1004c790:	pop    edi
1004c791:	pop    esi
1004c792:	leave  
1004c793:	ret    
1004c794:	push   0x14
1004c796:	push   0x10074828
1004c79b:	call   0x10046c94
1004c7a0:	or     esi,0xffffffff
1004c7a3:	mov    DWORD PTR [ebp-0x24],esi
1004c7a6:	mov    DWORD PTR [ebp-0x20],esi
1004c7a9:	mov    eax,DWORD PTR [ebp+0x8]
1004c7ac:	cmp    eax,0xfffffffe
1004c7af:	jne    0x1004c7cd
1004c7b1:	call   0x10046b68
1004c7b6:	and    DWORD PTR [eax],0x0
1004c7b9:	call   0x10046b55
1004c7be:	mov    DWORD PTR [eax],0x9
1004c7c4:	mov    eax,esi
1004c7c6:	mov    edx,esi
1004c7c8:	jmp    0x1004c89d
1004c7cd:	xor    edi,edi
1004c7cf:	cmp    eax,edi
1004c7d1:	jl     0x1004c7db
1004c7d3:	cmp    eax,DWORD PTR ds:0x10082464
1004c7d9:	jb     0x1004c7fc
1004c7db:	call   0x10046b68
1004c7e0:	mov    DWORD PTR [eax],edi
1004c7e2:	call   0x10046b55
1004c7e7:	mov    DWORD PTR [eax],0x9
1004c7ed:	push   edi
1004c7ee:	push   edi
1004c7ef:	push   edi
1004c7f0:	push   edi
1004c7f1:	push   edi
1004c7f2:	call   0x1004338c
1004c7f7:	add    esp,0x14
1004c7fa:	jmp    0x1004c7c4
1004c7fc:	mov    ecx,eax
1004c7fe:	sar    ecx,0x5
1004c801:	lea    ebx,[ecx*4+0x10082480]
1004c808:	mov    esi,eax
1004c80a:	and    esi,0x1f
1004c80d:	imul   esi,esi,0x28
1004c810:	mov    ecx,DWORD PTR [ebx]
1004c812:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
1004c817:	and    ecx,0x1
1004c81a:	jne    0x1004c842
1004c81c:	call   0x10046b68
1004c821:	mov    DWORD PTR [eax],edi
1004c823:	call   0x10046b55
1004c828:	mov    DWORD PTR [eax],0x9
1004c82e:	push   edi
1004c82f:	push   edi
1004c830:	push   edi
1004c831:	push   edi
1004c832:	push   edi
1004c833:	call   0x1004338c
1004c838:	add    esp,0x14
1004c83b:	or     edx,0xffffffff
1004c83e:	mov    eax,edx
1004c840:	jmp    0x1004c89d
1004c842:	push   eax
1004c843:	call   0x1004f9d0
1004c848:	pop    ecx
1004c849:	mov    DWORD PTR [ebp-0x4],edi
1004c84c:	mov    eax,DWORD PTR [ebx]
1004c84e:	test   BYTE PTR [eax+esi*1+0x4],0x1
1004c853:	je     0x1004c871
1004c855:	push   DWORD PTR [ebp+0x14]
1004c858:	push   DWORD PTR [ebp+0x10]
1004c85b:	push   DWORD PTR [ebp+0xc]
1004c85e:	push   DWORD PTR [ebp+0x8]
1004c861:	call   0x1004c711
1004c866:	add    esp,0x10
1004c869:	mov    DWORD PTR [ebp-0x24],eax
1004c86c:	mov    DWORD PTR [ebp-0x20],edx
1004c86f:	jmp    0x1004c88b
1004c871:	call   0x10046b55
1004c876:	mov    DWORD PTR [eax],0x9
1004c87c:	call   0x10046b68
1004c881:	mov    DWORD PTR [eax],edi
1004c883:	or     DWORD PTR [ebp-0x24],0xffffffff
1004c887:	or     DWORD PTR [ebp-0x20],0xffffffff
1004c88b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c892:	call   0x1004c8a3
1004c897:	mov    eax,DWORD PTR [ebp-0x24]
1004c89a:	mov    edx,DWORD PTR [ebp-0x20]
1004c89d:	call   0x10046cd9
1004c8a2:	ret    
1004c8a3:	push   DWORD PTR [ebp+0x8]
1004c8a6:	call   0x1004fa70
1004c8ab:	pop    ecx
1004c8ac:	ret    
1004c8ad:	push   ebp
1004c8ae:	lea    ebp,[esp-0x518]
1004c8b5:	sub    esp,0x594
1004c8bb:	mov    eax,ds:0x1007e030
1004c8c0:	xor    eax,ebp
1004c8c2:	mov    DWORD PTR [ebp+0x514],eax
1004c8c8:	mov    eax,DWORD PTR [ebp+0x524]
1004c8ce:	push   esi
1004c8cf:	xor    esi,esi
1004c8d1:	cmp    DWORD PTR [ebp+0x528],esi
1004c8d7:	mov    DWORD PTR [ebp-0x64],eax
1004c8da:	mov    DWORD PTR [ebp-0x60],esi
1004c8dd:	mov    DWORD PTR [ebp-0x68],esi
1004c8e0:	jne    0x1004c8e9
1004c8e2:	xor    eax,eax
1004c8e4:	jmp    0x1004ce5d
1004c8e9:	cmp    eax,esi
1004c8eb:	jne    0x1004c914
1004c8ed:	call   0x10046b68
1004c8f2:	mov    DWORD PTR [eax],esi
1004c8f4:	call   0x10046b55
1004c8f9:	push   esi
1004c8fa:	push   esi
1004c8fb:	push   esi
1004c8fc:	push   esi
1004c8fd:	push   esi
1004c8fe:	mov    DWORD PTR [eax],0x16
1004c904:	call   0x1004338c
1004c909:	add    esp,0x14
1004c90c:	or     eax,0xffffffff
1004c90f:	jmp    0x1004ce5d
1004c914:	mov    esi,DWORD PTR [ebp+0x520]
1004c91a:	push   ebx
1004c91b:	mov    ebx,esi
1004c91d:	and    ebx,0x1f
1004c920:	imul   ebx,ebx,0x28
1004c923:	mov    eax,esi
1004c925:	sar    eax,0x5
1004c928:	push   edi
1004c929:	lea    edi,[eax*4+0x10082480]
1004c930:	mov    eax,DWORD PTR [edi]
1004c932:	add    eax,ebx
1004c934:	mov    cl,BYTE PTR [eax+0x24]
1004c937:	add    cl,cl
1004c939:	sar    cl,1
1004c93b:	cmp    cl,0x2
1004c93e:	mov    DWORD PTR [ebp-0x70],edi
1004c941:	mov    BYTE PTR [ebp-0x55],cl
1004c944:	je     0x1004c94b
1004c946:	cmp    cl,0x1
1004c949:	jne    0x1004c97e
1004c94b:	mov    ecx,DWORD PTR [ebp+0x528]
1004c951:	not    ecx
1004c953:	test   cl,0x1
1004c956:	jne    0x1004c97e
1004c958:	call   0x10046b68
1004c95d:	xor    esi,esi
1004c95f:	mov    DWORD PTR [eax],esi
1004c961:	call   0x10046b55
1004c966:	push   esi
1004c967:	push   esi
1004c968:	push   esi
1004c969:	push   esi
1004c96a:	push   esi
1004c96b:	mov    DWORD PTR [eax],0x16
1004c971:	call   0x1004338c
1004c976:	add    esp,0x14
1004c979:	jmp    0x1004ce53
1004c97e:	test   BYTE PTR [eax+0x4],0x20
1004c982:	je     0x1004c993
1004c984:	push   0x2
1004c986:	push   0x0
1004c988:	push   0x0
1004c98a:	push   esi
1004c98b:	call   0x1004c711
1004c990:	add    esp,0x10
1004c993:	push   esi
1004c994:	call   0x1004cf93
1004c999:	test   eax,eax
1004c99b:	pop    ecx
1004c99c:	je     0x1004cb98
1004c9a2:	mov    eax,DWORD PTR [edi]
1004c9a4:	test   BYTE PTR [ebx+eax*1+0x4],0x80
1004c9a9:	je     0x1004cb98
1004c9af:	call   0x100470fc
1004c9b4:	mov    eax,DWORD PTR [eax+0x6c]
1004c9b7:	xor    ecx,ecx
1004c9b9:	cmp    DWORD PTR [eax+0x14],ecx
1004c9bc:	lea    eax,[ebp-0x7c]
1004c9bf:	sete   cl
1004c9c2:	push   eax
1004c9c3:	mov    eax,DWORD PTR [edi]
1004c9c5:	push   DWORD PTR [ebx+eax*1]
1004c9c8:	mov    esi,ecx
1004c9ca:	call   DWORD PTR ds:0x10066270
1004c9d0:	test   eax,eax
1004c9d2:	je     0x1004cb98
1004c9d8:	test   esi,esi
1004c9da:	je     0x1004c9e6
1004c9dc:	cmp    BYTE PTR [ebp-0x55],0x0
1004c9e0:	je     0x1004cb98
1004c9e6:	call   DWORD PTR ds:0x10066228
1004c9ec:	and    DWORD PTR [ebp-0x50],0x0
1004c9f0:	cmp    DWORD PTR [ebp+0x528],0x0
1004c9f7:	mov    esi,DWORD PTR [ebp-0x64]
1004c9fa:	mov    DWORD PTR [ebp-0x7c],eax
1004c9fd:	mov    DWORD PTR [ebp-0x74],esi
1004ca00:	jbe    0x1004ce05
1004ca06:	and    DWORD PTR [ebp-0x5c],0x0
1004ca0a:	jmp    0x1004ca0f
1004ca0c:	mov    esi,DWORD PTR [ebp-0x74]
1004ca0f:	mov    al,BYTE PTR [ebp-0x55]
1004ca12:	test   al,al
1004ca14:	jne    0x1004cb20
1004ca1a:	mov    al,BYTE PTR [esi]
1004ca1c:	xor    ecx,ecx
1004ca1e:	cmp    al,0xa
1004ca20:	sete   cl
1004ca23:	movsx  eax,al
1004ca26:	push   eax
1004ca27:	mov    DWORD PTR [ebp-0x78],ecx
1004ca2a:	call   0x1004b2f5
1004ca2f:	test   eax,eax
1004ca31:	pop    ecx
1004ca32:	jne    0x1004ca4e
1004ca34:	push   0x1
1004ca36:	lea    eax,[ebp-0x54]
1004ca39:	push   esi
1004ca3a:	push   eax
1004ca3b:	call   0x1004de82
1004ca40:	add    esp,0xc
1004ca43:	cmp    eax,0xffffffff
1004ca46:	je     0x1004cdfb
1004ca4c:	jmp    0x1004ca7e
1004ca4e:	mov    eax,DWORD PTR [ebp-0x64]
1004ca51:	sub    eax,esi
1004ca53:	add    eax,DWORD PTR [ebp+0x528]
1004ca59:	cmp    eax,0x1
1004ca5c:	jbe    0x1004cdfb
1004ca62:	push   0x2
1004ca64:	lea    eax,[ebp-0x54]
1004ca67:	push   esi
1004ca68:	push   eax
1004ca69:	call   0x1004de82
1004ca6e:	add    esp,0xc
1004ca71:	cmp    eax,0xffffffff
1004ca74:	je     0x1004cdfb
1004ca7a:	inc    esi
1004ca7b:	inc    DWORD PTR [ebp-0x5c]
1004ca7e:	xor    eax,eax
1004ca80:	push   eax
1004ca81:	push   eax
1004ca82:	push   0x5
1004ca84:	lea    ecx,[ebp+0x50c]
1004ca8a:	push   ecx
1004ca8b:	push   0x1
1004ca8d:	lea    ecx,[ebp-0x54]
1004ca90:	push   ecx
1004ca91:	push   eax
1004ca92:	push   DWORD PTR [ebp-0x7c]
1004ca95:	inc    esi
1004ca96:	inc    DWORD PTR [ebp-0x5c]
1004ca99:	mov    DWORD PTR [ebp-0x74],esi
1004ca9c:	call   DWORD PTR ds:0x100660b8
1004caa2:	mov    esi,eax
1004caa4:	test   esi,esi
1004caa6:	je     0x1004cdfb
1004caac:	push   0x0
1004caae:	lea    eax,[ebp-0x50]
1004cab1:	push   eax
1004cab2:	push   esi
1004cab3:	lea    eax,[ebp+0x50c]
1004cab9:	push   eax
1004caba:	mov    eax,DWORD PTR [edi]
1004cabc:	push   DWORD PTR [ebx+eax*1]
1004cabf:	call   DWORD PTR ds:0x100660b4
1004cac5:	test   eax,eax
1004cac7:	je     0x1004cdf2
1004cacd:	mov    eax,DWORD PTR [ebp-0x50]
1004cad0:	add    DWORD PTR [ebp-0x60],eax
1004cad3:	cmp    eax,esi
1004cad5:	jl     0x1004cdfb
1004cadb:	cmp    DWORD PTR [ebp-0x78],0x0
1004cadf:	je     0x1004cb84
1004cae5:	push   0x0
1004cae7:	lea    eax,[ebp-0x50]
1004caea:	push   eax
1004caeb:	push   0x1
1004caed:	lea    eax,[ebp+0x50c]
1004caf3:	push   eax
1004caf4:	mov    eax,DWORD PTR [edi]
1004caf6:	mov    BYTE PTR [ebp+0x50c],0xd
1004cafd:	push   DWORD PTR [ebx+eax*1]
1004cb00:	call   DWORD PTR ds:0x100660b4
1004cb06:	test   eax,eax
1004cb08:	je     0x1004cdf2
1004cb0e:	cmp    DWORD PTR [ebp-0x50],0x1
1004cb12:	jl     0x1004cdfb
1004cb18:	inc    DWORD PTR [ebp-0x68]
1004cb1b:	inc    DWORD PTR [ebp-0x60]
1004cb1e:	jmp    0x1004cb84
1004cb20:	cmp    al,0x1
1004cb22:	je     0x1004cb28
1004cb24:	cmp    al,0x2
1004cb26:	jne    0x1004cb43
1004cb28:	movzx  ecx,WORD PTR [esi]
1004cb2b:	xor    edx,edx
1004cb2d:	cmp    cx,0xa
1004cb31:	sete   dl
1004cb34:	inc    esi
1004cb35:	inc    esi
1004cb36:	add    DWORD PTR [ebp-0x5c],0x2
1004cb3a:	mov    DWORD PTR [ebp-0x54],ecx
1004cb3d:	mov    DWORD PTR [ebp-0x74],esi
1004cb40:	mov    DWORD PTR [ebp-0x78],edx
1004cb43:	cmp    al,0x1
1004cb45:	je     0x1004cb4b
1004cb47:	cmp    al,0x2
1004cb49:	jne    0x1004cb84
1004cb4b:	push   DWORD PTR [ebp-0x54]
1004cb4e:	call   0x1004fc31
1004cb53:	cmp    ax,WORD PTR [ebp-0x54]
1004cb57:	pop    ecx
1004cb58:	jne    0x1004cdf2
1004cb5e:	inc    DWORD PTR [ebp-0x60]
1004cb61:	cmp    DWORD PTR [ebp-0x78],0x0
1004cb65:	je     0x1004cb84
1004cb67:	push   0xd
1004cb69:	pop    eax
1004cb6a:	push   eax
1004cb6b:	mov    DWORD PTR [ebp-0x54],eax
1004cb6e:	call   0x1004fc31
1004cb73:	cmp    ax,WORD PTR [ebp-0x54]
1004cb77:	pop    ecx
1004cb78:	jne    0x1004cdf2
1004cb7e:	inc    DWORD PTR [ebp-0x60]
1004cb81:	inc    DWORD PTR [ebp-0x68]
1004cb84:	mov    eax,DWORD PTR [ebp+0x528]
1004cb8a:	cmp    DWORD PTR [ebp-0x5c],eax
1004cb8d:	jb     0x1004ca0c
1004cb93:	jmp    0x1004cdfb
1004cb98:	mov    eax,DWORD PTR [edi]
1004cb9a:	add    eax,ebx
1004cb9c:	test   BYTE PTR [eax+0x4],0x80
1004cba0:	je     0x1004cdcb
1004cba6:	mov    eax,DWORD PTR [ebp-0x64]
1004cba9:	xor    esi,esi
1004cbab:	cmp    BYTE PTR [ebp-0x55],0x0
1004cbaf:	mov    DWORD PTR [ebp-0x54],esi
1004cbb2:	jne    0x1004cc49
1004cbb8:	cmp    DWORD PTR [ebp+0x528],esi
1004cbbe:	mov    DWORD PTR [ebp-0x50],eax
1004cbc1:	jbe    0x1004ce2c
1004cbc7:	mov    ecx,DWORD PTR [ebp-0x50]
1004cbca:	and    DWORD PTR [ebp-0x5c],0x0
1004cbce:	sub    ecx,DWORD PTR [ebp-0x64]
1004cbd1:	lea    eax,[ebp-0x4c]
1004cbd4:	cmp    ecx,DWORD PTR [ebp+0x528]
1004cbda:	jae    0x1004cc03
1004cbdc:	mov    edx,DWORD PTR [ebp-0x50]
1004cbdf:	inc    DWORD PTR [ebp-0x50]
1004cbe2:	mov    dl,BYTE PTR [edx]
1004cbe4:	inc    ecx
1004cbe5:	cmp    dl,0xa
1004cbe8:	jne    0x1004cbf4
1004cbea:	inc    DWORD PTR [ebp-0x68]
1004cbed:	mov    BYTE PTR [eax],0xd
1004cbf0:	inc    eax
1004cbf1:	inc    DWORD PTR [ebp-0x5c]
1004cbf4:	mov    BYTE PTR [eax],dl
1004cbf6:	inc    eax
1004cbf7:	inc    DWORD PTR [ebp-0x5c]
1004cbfa:	cmp    DWORD PTR [ebp-0x5c],0x400
1004cc01:	jb     0x1004cbd4
1004cc03:	mov    esi,eax
1004cc05:	lea    eax,[ebp-0x4c]
1004cc08:	sub    esi,eax
1004cc0a:	push   0x0
1004cc0c:	lea    eax,[ebp-0x6c]
1004cc0f:	push   eax
1004cc10:	push   esi
1004cc11:	lea    eax,[ebp-0x4c]
1004cc14:	push   eax
1004cc15:	mov    eax,DWORD PTR [edi]
1004cc17:	push   DWORD PTR [ebx+eax*1]
1004cc1a:	call   DWORD PTR ds:0x100660b4
1004cc20:	test   eax,eax
1004cc22:	je     0x1004cdf2
1004cc28:	mov    eax,DWORD PTR [ebp-0x6c]
1004cc2b:	add    DWORD PTR [ebp-0x60],eax
1004cc2e:	cmp    eax,esi
1004cc30:	jl     0x1004cdfb
1004cc36:	mov    eax,DWORD PTR [ebp-0x50]
1004cc39:	sub    eax,DWORD PTR [ebp-0x64]
1004cc3c:	cmp    eax,DWORD PTR [ebp+0x528]
1004cc42:	jb     0x1004cbc7
1004cc44:	jmp    0x1004cdfb
1004cc49:	cmp    BYTE PTR [ebp-0x55],0x2
1004cc4d:	jne    0x1004ccf0
1004cc53:	cmp    DWORD PTR [ebp+0x528],esi
1004cc59:	mov    DWORD PTR [ebp-0x50],eax
1004cc5c:	jbe    0x1004ce2c
1004cc62:	mov    ecx,DWORD PTR [ebp-0x50]
1004cc65:	xor    esi,esi
1004cc67:	sub    ecx,DWORD PTR [ebp-0x64]
1004cc6a:	lea    eax,[ebp-0x4c]
1004cc6d:	cmp    ecx,DWORD PTR [ebp+0x528]
1004cc73:	jae    0x1004cca6
1004cc75:	mov    edx,DWORD PTR [ebp-0x50]
1004cc78:	add    DWORD PTR [ebp-0x50],0x2
1004cc7c:	movzx  edx,WORD PTR [edx]
1004cc7f:	inc    ecx
1004cc80:	inc    ecx
1004cc81:	cmp    dx,0xa
1004cc85:	jne    0x1004cc94
1004cc87:	add    DWORD PTR [ebp-0x68],0x2
1004cc8b:	mov    WORD PTR [eax],0xd
1004cc90:	inc    eax
1004cc91:	inc    eax
1004cc92:	inc    esi
1004cc93:	inc    esi
1004cc94:	mov    edi,DWORD PTR [ebp-0x70]
1004cc97:	mov    WORD PTR [eax],dx
1004cc9a:	inc    eax
1004cc9b:	inc    eax
1004cc9c:	inc    esi
1004cc9d:	inc    esi
1004cc9e:	cmp    esi,0x3ff
1004cca4:	jb     0x1004cc6d
1004cca6:	mov    esi,eax
1004cca8:	lea    eax,[ebp-0x4c]
1004ccab:	sub    esi,eax
1004ccad:	push   0x0
1004ccaf:	lea    eax,[ebp-0x6c]
1004ccb2:	push   eax
1004ccb3:	push   esi
1004ccb4:	lea    eax,[ebp-0x4c]
1004ccb7:	push   eax
1004ccb8:	mov    eax,DWORD PTR [edi]
1004ccba:	push   DWORD PTR [ebx+eax*1]
1004ccbd:	call   DWORD PTR ds:0x100660b4
1004ccc3:	test   eax,eax
1004ccc5:	je     0x1004cdf2
1004cccb:	mov    eax,DWORD PTR [ebp-0x6c]
1004ccce:	add    DWORD PTR [ebp-0x60],eax
1004ccd1:	cmp    eax,esi
1004ccd3:	jl     0x1004cdfb
1004ccd9:	mov    eax,DWORD PTR [ebp-0x50]
1004ccdc:	sub    eax,DWORD PTR [ebp-0x64]
1004ccdf:	cmp    eax,DWORD PTR [ebp+0x528]
1004cce5:	jb     0x1004cc62
1004cceb:	jmp    0x1004cdfb
1004ccf0:	cmp    DWORD PTR [ebp+0x528],esi
1004ccf6:	mov    DWORD PTR [ebp-0x5c],eax
1004ccf9:	jbe    0x1004ce2c
1004ccff:	mov    ecx,DWORD PTR [ebp-0x5c]
1004cd02:	and    DWORD PTR [ebp-0x50],0x0
1004cd06:	sub    ecx,DWORD PTR [ebp-0x64]
1004cd09:	push   0x2
1004cd0b:	lea    eax,[ebp+0x3b8]
1004cd11:	pop    esi
1004cd12:	cmp    ecx,DWORD PTR [ebp+0x528]
1004cd18:	jae    0x1004cd46
1004cd1a:	mov    edx,DWORD PTR [ebp-0x5c]
1004cd1d:	movzx  edx,WORD PTR [edx]
1004cd20:	add    DWORD PTR [ebp-0x5c],esi
1004cd23:	add    ecx,esi
1004cd25:	cmp    dx,0xa
1004cd29:	jne    0x1004cd35
1004cd2b:	mov    WORD PTR [eax],0xd
1004cd30:	add    eax,esi
1004cd32:	add    DWORD PTR [ebp-0x50],esi
1004cd35:	add    DWORD PTR [ebp-0x50],esi
1004cd38:	mov    WORD PTR [eax],dx
1004cd3b:	add    eax,esi
1004cd3d:	cmp    DWORD PTR [ebp-0x50],0x152
1004cd44:	jb     0x1004cd12
1004cd46:	xor    esi,esi
1004cd48:	push   esi
1004cd49:	push   esi
1004cd4a:	push   0x2ab
1004cd4f:	lea    ecx,[ebp+0x108]
1004cd55:	push   ecx
1004cd56:	lea    ecx,[ebp+0x3b8]
1004cd5c:	sub    eax,ecx
1004cd5e:	cdq    
1004cd5f:	sub    eax,edx
1004cd61:	sar    eax,1
1004cd63:	push   eax
1004cd64:	mov    eax,ecx
1004cd66:	push   eax
1004cd67:	push   esi
1004cd68:	push   0xfde9
1004cd6d:	call   DWORD PTR ds:0x100660b8
1004cd73:	mov    edi,eax
1004cd75:	cmp    edi,esi
1004cd77:	je     0x1004cdf2
1004cd79:	push   0x0
1004cd7b:	lea    eax,[ebp-0x6c]
1004cd7e:	push   eax
1004cd7f:	mov    eax,edi
1004cd81:	sub    eax,esi
1004cd83:	push   eax
1004cd84:	lea    eax,[ebp+esi*1+0x108]
1004cd8b:	push   eax
1004cd8c:	mov    eax,DWORD PTR [ebp-0x70]
1004cd8f:	mov    eax,DWORD PTR [eax]
1004cd91:	push   DWORD PTR [ebx+eax*1]
1004cd94:	call   DWORD PTR ds:0x100660b4
1004cd9a:	test   eax,eax
1004cd9c:	je     0x1004cda7
1004cd9e:	add    esi,DWORD PTR [ebp-0x6c]
1004cda1:	cmp    edi,esi
1004cda3:	jg     0x1004cd79
1004cda5:	jmp    0x1004cdb0
1004cda7:	call   DWORD PTR ds:0x100660cc
1004cdad:	mov    DWORD PTR [ebp-0x54],eax
1004cdb0:	cmp    edi,esi
1004cdb2:	jg     0x1004cdfb
1004cdb4:	mov    eax,DWORD PTR [ebp-0x5c]
1004cdb7:	sub    eax,DWORD PTR [ebp-0x64]
1004cdba:	cmp    eax,DWORD PTR [ebp+0x528]
1004cdc0:	mov    DWORD PTR [ebp-0x60],eax
1004cdc3:	jb     0x1004ccff
1004cdc9:	jmp    0x1004cdfb
1004cdcb:	push   0x0
1004cdcd:	lea    ecx,[ebp-0x6c]
1004cdd0:	push   ecx
1004cdd1:	push   DWORD PTR [ebp+0x528]
1004cdd7:	push   DWORD PTR [ebp-0x64]
1004cdda:	push   DWORD PTR [eax]
1004cddc:	call   DWORD PTR ds:0x100660b4
1004cde2:	test   eax,eax
1004cde4:	je     0x1004cdf2
1004cde6:	mov    eax,DWORD PTR [ebp-0x6c]
1004cde9:	and    DWORD PTR [ebp-0x54],0x0
1004cded:	mov    DWORD PTR [ebp-0x60],eax
1004cdf0:	jmp    0x1004cdfb
1004cdf2:	call   DWORD PTR ds:0x100660cc
1004cdf8:	mov    DWORD PTR [ebp-0x54],eax
1004cdfb:	mov    eax,DWORD PTR [ebp-0x60]
1004cdfe:	test   eax,eax
1004ce00:	jne    0x1004ce58
1004ce02:	mov    edi,DWORD PTR [ebp-0x70]
1004ce05:	xor    esi,esi
1004ce07:	cmp    DWORD PTR [ebp-0x54],esi
1004ce0a:	je     0x1004ce2c
1004ce0c:	push   0x5
1004ce0e:	pop    esi
1004ce0f:	cmp    DWORD PTR [ebp-0x54],esi
1004ce12:	jne    0x1004ce21
1004ce14:	call   0x10046b55
1004ce19:	mov    DWORD PTR [eax],0x9
1004ce1f:	jmp    0x1004ce4c
1004ce21:	push   DWORD PTR [ebp-0x54]
1004ce24:	call   0x10046b7b
1004ce29:	pop    ecx
1004ce2a:	jmp    0x1004ce53
1004ce2c:	mov    eax,DWORD PTR [edi]
1004ce2e:	test   BYTE PTR [ebx+eax*1+0x4],0x40
1004ce33:	je     0x1004ce41
1004ce35:	mov    eax,DWORD PTR [ebp-0x64]
1004ce38:	cmp    BYTE PTR [eax],0x1a
1004ce3b:	jne    0x1004ce41
1004ce3d:	xor    eax,eax
1004ce3f:	jmp    0x1004ce5b
1004ce41:	call   0x10046b55
1004ce46:	mov    DWORD PTR [eax],0x1c
1004ce4c:	call   0x10046b68
1004ce51:	mov    DWORD PTR [eax],esi
1004ce53:	or     eax,0xffffffff
1004ce56:	jmp    0x1004ce5b
1004ce58:	sub    eax,DWORD PTR [ebp-0x68]
1004ce5b:	pop    edi
1004ce5c:	pop    ebx
1004ce5d:	mov    ecx,DWORD PTR [ebp+0x514]
1004ce63:	xor    ecx,ebp
1004ce65:	pop    esi
1004ce66:	call   0x10042e97
1004ce6b:	add    ebp,0x518
1004ce71:	leave  
1004ce72:	ret    
1004ce73:	push   0x10
1004ce75:	push   0x10074848
1004ce7a:	call   0x10046c94
1004ce7f:	mov    eax,DWORD PTR [ebp+0x8]
1004ce82:	cmp    eax,0xfffffffe
1004ce85:	jne    0x1004cea2
1004ce87:	call   0x10046b68
1004ce8c:	and    DWORD PTR [eax],0x0
1004ce8f:	call   0x10046b55
1004ce94:	mov    DWORD PTR [eax],0x9
1004ce9a:	or     eax,0xffffffff
1004ce9d:	jmp    0x1004cf3f
1004cea2:	xor    edi,edi
1004cea4:	cmp    eax,edi
1004cea6:	jl     0x1004ceb0
1004cea8:	cmp    eax,DWORD PTR ds:0x10082464
1004ceae:	jb     0x1004ced1
1004ceb0:	call   0x10046b68
1004ceb5:	mov    DWORD PTR [eax],edi
1004ceb7:	call   0x10046b55
1004cebc:	mov    DWORD PTR [eax],0x9
1004cec2:	push   edi
1004cec3:	push   edi
1004cec4:	push   edi
1004cec5:	push   edi
1004cec6:	push   edi
1004cec7:	call   0x1004338c
1004cecc:	add    esp,0x14
1004cecf:	jmp    0x1004ce9a
1004ced1:	mov    ecx,eax
1004ced3:	sar    ecx,0x5
1004ced6:	lea    ebx,[ecx*4+0x10082480]
1004cedd:	mov    esi,eax
1004cedf:	and    esi,0x1f
1004cee2:	imul   esi,esi,0x28
1004cee5:	mov    ecx,DWORD PTR [ebx]
1004cee7:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
1004ceec:	and    ecx,0x1
1004ceef:	je     0x1004ceb0
1004cef1:	push   eax
1004cef2:	call   0x1004f9d0
1004cef7:	pop    ecx
1004cef8:	mov    DWORD PTR [ebp-0x4],edi
1004cefb:	mov    eax,DWORD PTR [ebx]
1004cefd:	test   BYTE PTR [eax+esi*1+0x4],0x1
1004cf02:	je     0x1004cf1a
1004cf04:	push   DWORD PTR [ebp+0x10]
1004cf07:	push   DWORD PTR [ebp+0xc]
1004cf0a:	push   DWORD PTR [ebp+0x8]
1004cf0d:	call   0x1004c8ad
1004cf12:	add    esp,0xc
1004cf15:	mov    DWORD PTR [ebp-0x1c],eax
1004cf18:	jmp    0x1004cf30
1004cf1a:	call   0x10046b55
1004cf1f:	mov    DWORD PTR [eax],0x9
1004cf25:	call   0x10046b68
1004cf2a:	mov    DWORD PTR [eax],edi
1004cf2c:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004cf30:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004cf37:	call   0x1004cf45
1004cf3c:	mov    eax,DWORD PTR [ebp-0x1c]
1004cf3f:	call   0x10046cd9
1004cf44:	ret    
1004cf45:	push   DWORD PTR [ebp+0x8]
1004cf48:	call   0x1004fa70
1004cf4d:	pop    ecx
1004cf4e:	ret    
1004cf4f:	inc    DWORD PTR ds:0x1008046c
1004cf55:	push   0x1000
1004cf5a:	call   0x10047422
1004cf5f:	test   eax,eax
1004cf61:	pop    ecx
1004cf62:	mov    ecx,DWORD PTR [esp+0x4]
1004cf66:	mov    DWORD PTR [ecx+0x8],eax
1004cf69:	je     0x1004cf78
1004cf6b:	or     DWORD PTR [ecx+0xc],0x8
1004cf6f:	mov    DWORD PTR [ecx+0x18],0x1000
1004cf76:	jmp    0x1004cf89
1004cf78:	or     DWORD PTR [ecx+0xc],0x4
1004cf7c:	lea    eax,[ecx+0x14]
1004cf7f:	mov    DWORD PTR [ecx+0x8],eax
1004cf82:	mov    DWORD PTR [ecx+0x18],0x2
1004cf89:	mov    eax,DWORD PTR [ecx+0x8]
1004cf8c:	and    DWORD PTR [ecx+0x4],0x0
1004cf90:	mov    DWORD PTR [ecx],eax
1004cf92:	ret    
1004cf93:	mov    eax,DWORD PTR [esp+0x4]
1004cf97:	cmp    eax,0xfffffffe
1004cf9a:	jne    0x1004cfaa
1004cf9c:	call   0x10046b55
1004cfa1:	mov    DWORD PTR [eax],0x9
1004cfa7:	xor    eax,eax
1004cfa9:	ret    
1004cfaa:	push   esi
1004cfab:	xor    esi,esi
1004cfad:	cmp    eax,esi
1004cfaf:	jl     0x1004cfb9
1004cfb1:	cmp    eax,DWORD PTR ds:0x10082464
1004cfb7:	jb     0x1004cfd5
1004cfb9:	call   0x10046b55
1004cfbe:	push   esi
1004cfbf:	push   esi
1004cfc0:	push   esi
1004cfc1:	push   esi
1004cfc2:	push   esi
1004cfc3:	mov    DWORD PTR [eax],0x9
1004cfc9:	call   0x1004338c
1004cfce:	add    esp,0x14
1004cfd1:	xor    eax,eax
1004cfd3:	pop    esi
1004cfd4:	ret    
1004cfd5:	mov    ecx,eax
1004cfd7:	and    eax,0x1f
1004cfda:	imul   eax,eax,0x28
1004cfdd:	sar    ecx,0x5
1004cfe0:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1004cfe7:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
1004cfec:	and    eax,0x40
1004cfef:	pop    esi
1004cff0:	ret    
1004cff1:	mov    eax,0x1007eaa8
1004cff6:	ret    
1004cff7:	mov    eax,ds:0x10082460
1004cffc:	test   eax,eax
1004cffe:	push   esi
1004cfff:	push   0x14
1004d001:	pop    esi
1004d002:	jne    0x1004d00b
1004d004:	mov    eax,0x200
1004d009:	jmp    0x1004d011
1004d00b:	cmp    eax,esi
1004d00d:	jge    0x1004d016
1004d00f:	mov    eax,esi
1004d011:	mov    ds:0x10082460,eax
1004d016:	push   0x4
1004d018:	push   eax
1004d019:	call   0x10047462
1004d01e:	test   eax,eax
1004d020:	pop    ecx
1004d021:	pop    ecx
1004d022:	mov    ds:0x10081440,eax
1004d027:	jne    0x1004d047
1004d029:	push   0x4
1004d02b:	push   esi
1004d02c:	mov    DWORD PTR ds:0x10082460,esi
1004d032:	call   0x10047462
1004d037:	test   eax,eax
1004d039:	pop    ecx
1004d03a:	pop    ecx
1004d03b:	mov    ds:0x10081440,eax
1004d040:	jne    0x1004d047
1004d042:	push   0x1a
1004d044:	pop    eax
1004d045:	pop    esi
1004d046:	ret    
1004d047:	xor    edx,edx
1004d049:	mov    ecx,0x1007eaa8
1004d04e:	jmp    0x1004d055
1004d050:	mov    eax,ds:0x10081440
1004d055:	mov    DWORD PTR [edx+eax*1],ecx
1004d058:	add    ecx,0x20
1004d05b:	add    edx,0x4
1004d05e:	cmp    ecx,0x1007ed28
1004d064:	jl     0x1004d050
1004d066:	push   0xfffffffe
1004d068:	pop    esi
1004d069:	xor    edx,edx
1004d06b:	mov    ecx,0x1007eab8
1004d070:	push   edi
1004d071:	mov    edi,edx
1004d073:	and    edi,0x1f
1004d076:	imul   edi,edi,0x28
1004d079:	mov    eax,edx
1004d07b:	sar    eax,0x5
1004d07e:	mov    eax,DWORD PTR [eax*4+0x10082480]
1004d085:	mov    eax,DWORD PTR [edi+eax*1]
1004d088:	cmp    eax,0xffffffff
1004d08b:	je     0x1004d095
1004d08d:	cmp    eax,esi
1004d08f:	je     0x1004d095
1004d091:	test   eax,eax
1004d093:	jne    0x1004d097
1004d095:	mov    DWORD PTR [ecx],esi
1004d097:	add    ecx,0x20
1004d09a:	inc    edx
1004d09b:	cmp    ecx,0x1007eb18
1004d0a1:	jl     0x1004d071
1004d0a3:	pop    edi
1004d0a4:	xor    eax,eax
1004d0a6:	pop    esi
1004d0a7:	ret    
1004d0a8:	call   0x1004ff10
1004d0ad:	cmp    BYTE PTR ds:0x1007fe20,0x0
1004d0b4:	je     0x1004d0bb
1004d0b6:	call   0x1004fcf3
1004d0bb:	push   DWORD PTR ds:0x10081440
1004d0c1:	call   0x10043508
1004d0c6:	pop    ecx
1004d0c7:	ret    
1004d0c8:	mov    eax,DWORD PTR [esp+0x4]
1004d0cc:	mov    ecx,0x1007eaa8
1004d0d1:	cmp    eax,ecx
1004d0d3:	jb     0x1004d0ec
1004d0d5:	cmp    eax,0x1007ed08
1004d0da:	ja     0x1004d0ec
1004d0dc:	sub    eax,ecx
1004d0de:	sar    eax,0x5
1004d0e1:	add    eax,0x10
1004d0e4:	push   eax
1004d0e5:	call   0x10047c9d
1004d0ea:	pop    ecx
1004d0eb:	ret    
1004d0ec:	add    eax,0x20
1004d0ef:	push   eax
1004d0f0:	call   DWORD PTR ds:0x100660f0
1004d0f6:	ret    
1004d0f7:	mov    eax,DWORD PTR [esp+0x4]
1004d0fb:	cmp    eax,0x14
1004d0fe:	jge    0x1004d10b
1004d100:	add    eax,0x10
1004d103:	push   eax
1004d104:	call   0x10047c9d
1004d109:	pop    ecx
1004d10a:	ret    
1004d10b:	mov    eax,DWORD PTR [esp+0x8]
1004d10f:	add    eax,0x20
1004d112:	push   eax
1004d113:	call   DWORD PTR ds:0x100660f0
1004d119:	ret    
1004d11a:	mov    eax,DWORD PTR [esp+0x4]
1004d11e:	mov    ecx,0x1007eaa8
1004d123:	cmp    eax,ecx
1004d125:	jb     0x1004d13e
1004d127:	cmp    eax,0x1007ed08
1004d12c:	ja     0x1004d13e
1004d12e:	sub    eax,ecx
1004d130:	sar    eax,0x5
1004d133:	add    eax,0x10
1004d136:	push   eax
1004d137:	call   0x10047bc5
1004d13c:	pop    ecx
1004d13d:	ret    
1004d13e:	add    eax,0x20
1004d141:	push   eax
1004d142:	call   DWORD PTR ds:0x100660ec
1004d148:	ret    
1004d149:	mov    eax,DWORD PTR [esp+0x4]
1004d14d:	cmp    eax,0x14
1004d150:	jge    0x1004d15d
1004d152:	add    eax,0x10
1004d155:	push   eax
1004d156:	call   0x10047bc5
1004d15b:	pop    ecx
1004d15c:	ret    
1004d15d:	mov    eax,DWORD PTR [esp+0x8]
1004d161:	add    eax,0x20
1004d164:	push   eax
1004d165:	call   DWORD PTR ds:0x100660ec
1004d16b:	ret    
1004d16c:	mov    eax,DWORD PTR [esp+0x4]
1004d170:	push   esi
1004d171:	xor    esi,esi
1004d173:	cmp    eax,esi
1004d175:	jne    0x1004d194
1004d177:	call   0x10046b55
1004d17c:	push   esi
1004d17d:	push   esi
1004d17e:	push   esi
1004d17f:	push   esi
1004d180:	push   esi
1004d181:	mov    DWORD PTR [eax],0x16
1004d187:	call   0x1004338c
1004d18c:	add    esp,0x14
1004d18f:	or     eax,0xffffffff
1004d192:	pop    esi
1004d193:	ret    
1004d194:	mov    eax,DWORD PTR [eax+0x10]
1004d197:	pop    esi
1004d198:	ret    
1004d199:	push   ebp
1004d19a:	mov    ebp,esp
1004d19c:	sub    esp,0x10
1004d19f:	mov    eax,ds:0x1007e030
1004d1a4:	xor    eax,ebp
1004d1a6:	mov    DWORD PTR [ebp-0x4],eax
1004d1a9:	push   ebx
1004d1aa:	push   esi
1004d1ab:	mov    esi,DWORD PTR [ebp+0xc]
1004d1ae:	test   BYTE PTR [esi+0xc],0x40
1004d1b2:	push   edi
1004d1b3:	jne    0x1004d348
1004d1b9:	push   esi
1004d1ba:	call   0x1004d16c
1004d1bf:	cmp    eax,0xffffffff
1004d1c2:	pop    ecx
1004d1c3:	mov    edi,0x1007e9d0
1004d1c8:	je     0x1004d1f8
1004d1ca:	push   esi
1004d1cb:	call   0x1004d16c
1004d1d0:	cmp    eax,0xfffffffe
1004d1d3:	pop    ecx
1004d1d4:	je     0x1004d1f8
1004d1d6:	push   esi
1004d1d7:	call   0x1004d16c
1004d1dc:	sar    eax,0x5
1004d1df:	push   esi
1004d1e0:	lea    ebx,[eax*4+0x10082480]
1004d1e7:	call   0x1004d16c
1004d1ec:	and    eax,0x1f
1004d1ef:	imul   eax,eax,0x28
1004d1f2:	add    eax,DWORD PTR [ebx]
1004d1f4:	pop    ecx
1004d1f5:	pop    ecx
1004d1f6:	jmp    0x1004d1fa
1004d1f8:	mov    eax,edi
1004d1fa:	mov    al,BYTE PTR [eax+0x24]
1004d1fd:	and    al,0x7f
1004d1ff:	cmp    al,0x2
1004d201:	je     0x1004d348
1004d207:	push   esi
1004d208:	call   0x1004d16c
1004d20d:	cmp    eax,0xffffffff
1004d210:	pop    ecx
1004d211:	je     0x1004d241
1004d213:	push   esi
1004d214:	call   0x1004d16c
1004d219:	cmp    eax,0xfffffffe
1004d21c:	pop    ecx
1004d21d:	je     0x1004d241
1004d21f:	push   esi
1004d220:	call   0x1004d16c
1004d225:	sar    eax,0x5
1004d228:	push   esi
1004d229:	lea    ebx,[eax*4+0x10082480]
1004d230:	call   0x1004d16c
1004d235:	and    eax,0x1f
1004d238:	imul   eax,eax,0x28
1004d23b:	add    eax,DWORD PTR [ebx]
1004d23d:	pop    ecx
1004d23e:	pop    ecx
1004d23f:	jmp    0x1004d243
1004d241:	mov    eax,edi
1004d243:	mov    al,BYTE PTR [eax+0x24]
1004d246:	and    al,0x7f
1004d248:	cmp    al,0x1
1004d24a:	jne    0x1004d2a8
1004d24c:	dec    DWORD PTR [esi+0x4]
1004d24f:	mov    ebx,DWORD PTR [ebp+0x8]
1004d252:	js     0x1004d262
1004d254:	mov    eax,DWORD PTR [esi]
1004d256:	mov    BYTE PTR [eax],bl
1004d258:	mov    ecx,DWORD PTR [esi]
1004d25a:	movzx  eax,BYTE PTR [ecx]
1004d25d:	inc    ecx
1004d25e:	mov    DWORD PTR [esi],ecx
1004d260:	jmp    0x1004d26e
1004d262:	movsx  eax,bl
1004d265:	push   esi
1004d266:	push   eax
1004d267:	call   0x100487cd
1004d26c:	pop    ecx
1004d26d:	pop    ecx
1004d26e:	cmp    eax,0xffffffff
1004d271:	jne    0x1004d27c
1004d273:	or     ax,0xffff
1004d277:	jmp    0x1004d368
1004d27c:	dec    DWORD PTR [esi+0x4]
1004d27f:	js     0x1004d28f
1004d281:	mov    eax,DWORD PTR [esi]
1004d283:	mov    BYTE PTR [eax],bh
1004d285:	mov    ecx,DWORD PTR [esi]
1004d287:	movzx  eax,BYTE PTR [ecx]
1004d28a:	inc    ecx
1004d28b:	mov    DWORD PTR [esi],ecx
1004d28d:	jmp    0x1004d29b
1004d28f:	movsx  eax,bh
1004d292:	push   esi
1004d293:	push   eax
1004d294:	call   0x100487cd
1004d299:	pop    ecx
1004d29a:	pop    ecx
1004d29b:	cmp    eax,0xffffffff
1004d29e:	je     0x1004d273
1004d2a0:	mov    ax,bx
1004d2a3:	jmp    0x1004d368
1004d2a8:	push   esi
1004d2a9:	call   0x1004d16c
1004d2ae:	cmp    eax,0xffffffff
1004d2b1:	pop    ecx
1004d2b2:	je     0x1004d2e2
1004d2b4:	push   esi
1004d2b5:	call   0x1004d16c
1004d2ba:	cmp    eax,0xfffffffe
1004d2bd:	pop    ecx
1004d2be:	je     0x1004d2e2
1004d2c0:	push   esi
1004d2c1:	call   0x1004d16c
1004d2c6:	sar    eax,0x5
1004d2c9:	push   esi
1004d2ca:	lea    ebx,[eax*4+0x10082480]
1004d2d1:	call   0x1004d16c
1004d2d6:	and    eax,0x1f
1004d2d9:	imul   eax,eax,0x28
1004d2dc:	add    eax,DWORD PTR [ebx]
1004d2de:	pop    ecx
1004d2df:	pop    ecx
1004d2e0:	jmp    0x1004d2e4
1004d2e2:	mov    eax,edi
1004d2e4:	test   BYTE PTR [eax+0x4],0x80
1004d2e8:	je     0x1004d348
1004d2ea:	push   DWORD PTR [ebp+0x8]
1004d2ed:	lea    eax,[ebp-0xc]
1004d2f0:	push   0x5
1004d2f2:	push   eax
1004d2f3:	lea    eax,[ebp-0x10]
1004d2f6:	push   eax
1004d2f7:	call   0x100501e8
1004d2fc:	add    esp,0x10
1004d2ff:	test   eax,eax
1004d301:	jne    0x1004d273
1004d307:	xor    ebx,ebx
1004d309:	cmp    DWORD PTR [ebp-0x10],ebx
1004d30c:	jle    0x1004d342
1004d30e:	dec    DWORD PTR [esi+0x4]
1004d311:	js     0x1004d325
1004d313:	mov    eax,DWORD PTR [esi]
1004d315:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
1004d319:	mov    BYTE PTR [eax],cl
1004d31b:	mov    ecx,DWORD PTR [esi]
1004d31d:	movzx  eax,BYTE PTR [ecx]
1004d320:	inc    ecx
1004d321:	mov    DWORD PTR [esi],ecx
1004d323:	jmp    0x1004d333
1004d325:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
1004d32a:	push   esi
1004d32b:	push   eax
1004d32c:	call   0x100487cd
1004d331:	pop    ecx
1004d332:	pop    ecx
1004d333:	cmp    eax,0xffffffff
1004d336:	je     0x1004d273
1004d33c:	inc    ebx
1004d33d:	cmp    ebx,DWORD PTR [ebp-0x10]
1004d340:	jl     0x1004d30e
1004d342:	mov    ax,WORD PTR [ebp+0x8]
1004d346:	jmp    0x1004d368
1004d348:	add    DWORD PTR [esi+0x4],0xfffffffe
1004d34c:	js     0x1004d35b
1004d34e:	mov    ecx,DWORD PTR [esi]
1004d350:	mov    eax,DWORD PTR [ebp+0x8]
1004d353:	mov    WORD PTR [ecx],ax
1004d356:	add    DWORD PTR [esi],0x2
1004d359:	jmp    0x1004d368
1004d35b:	movzx  eax,WORD PTR [ebp+0x8]
1004d35f:	push   esi
1004d360:	push   eax
1004d361:	call   0x1004ff19
1004d366:	pop    ecx
1004d367:	pop    ecx
1004d368:	mov    ecx,DWORD PTR [ebp-0x4]
1004d36b:	pop    edi
1004d36c:	pop    esi
1004d36d:	xor    ecx,ebp
1004d36f:	pop    ebx
1004d370:	call   0x10042e97
1004d375:	leave  
1004d376:	ret    
1004d377:	test   BYTE PTR [edi+0xc],0x40
1004d37b:	push   ebx
1004d37c:	push   esi
1004d37d:	mov    esi,eax
1004d37f:	mov    ebx,ecx
1004d381:	je     0x1004d3b7
1004d383:	cmp    DWORD PTR [edi+0x8],0x0
1004d387:	jne    0x1004d3b7
1004d389:	mov    eax,DWORD PTR [esp+0xc]
1004d38d:	add    DWORD PTR [esi],eax
1004d38f:	jmp    0x1004d3be
1004d391:	mov    al,BYTE PTR [ebx]
1004d393:	dec    DWORD PTR [esp+0xc]
1004d397:	mov    ecx,edi
1004d399:	call   0x1004de99
1004d39e:	inc    ebx
1004d39f:	cmp    DWORD PTR [esi],0xffffffff
1004d3a2:	jne    0x1004d3b7
1004d3a4:	call   0x10046b55
1004d3a9:	cmp    DWORD PTR [eax],0x2a
1004d3ac:	jne    0x1004d3be
1004d3ae:	mov    ecx,edi
1004d3b0:	mov    al,0x3f
1004d3b2:	call   0x1004de99
1004d3b7:	cmp    DWORD PTR [esp+0xc],0x0
1004d3bc:	jg     0x1004d391
1004d3be:	pop    esi
1004d3bf:	pop    ebx
1004d3c0:	ret    
1004d3c1:	push   ebp
1004d3c2:	lea    ebp,[esp-0x1f8]
1004d3c9:	sub    esp,0x278
1004d3cf:	mov    eax,ds:0x1007e030
1004d3d4:	xor    eax,ebp
1004d3d6:	mov    DWORD PTR [ebp+0x1f4],eax
1004d3dc:	mov    eax,DWORD PTR [ebp+0x200]
1004d3e2:	push   ebx
1004d3e3:	mov    ebx,DWORD PTR [ebp+0x204]
1004d3e9:	push   esi
1004d3ea:	xor    esi,esi
1004d3ec:	push   edi
1004d3ed:	mov    edi,DWORD PTR [ebp+0x20c]
1004d3f3:	push   DWORD PTR [ebp+0x208]
1004d3f9:	lea    ecx,[ebp-0x64]
1004d3fc:	mov    DWORD PTR [ebp-0x30],eax
1004d3ff:	mov    DWORD PTR [ebp-0x2c],edi
1004d402:	mov    DWORD PTR [ebp-0x4c],esi
1004d405:	mov    DWORD PTR [ebp-0x18],esi
1004d408:	mov    DWORD PTR [ebp-0x40],esi
1004d40b:	mov    DWORD PTR [ebp-0x20],esi
1004d40e:	mov    DWORD PTR [ebp-0x3c],esi
1004d411:	mov    DWORD PTR [ebp-0x50],esi
1004d414:	mov    DWORD PTR [ebp-0x44],esi
1004d417:	call   0x100454e5
1004d41c:	cmp    DWORD PTR [ebp-0x30],esi
1004d41f:	jne    0x1004d44e
1004d421:	call   0x10046b55
1004d426:	push   esi
1004d427:	push   esi
1004d428:	push   esi
1004d429:	push   esi
1004d42a:	mov    DWORD PTR [eax],0x16
1004d430:	push   esi
1004d431:	call   0x1004338c
1004d436:	add    esp,0x14
1004d439:	cmp    BYTE PTR [ebp-0x58],0x0
1004d43d:	je     0x1004d446
1004d43f:	mov    eax,DWORD PTR [ebp-0x5c]
1004d442:	and    DWORD PTR [eax+0x70],0xfffffffd
1004d446:	or     eax,0xffffffff
1004d449:	jmp    0x1004dd1e
1004d44e:	mov    eax,DWORD PTR [ebp-0x30]
1004d451:	test   BYTE PTR [eax+0xc],0x40
1004d455:	jne    0x1004d4ff
1004d45b:	push   eax
1004d45c:	call   0x1004d16c
1004d461:	cmp    eax,0xffffffff
1004d464:	pop    ecx
1004d465:	je     0x1004d49d
1004d467:	push   DWORD PTR [ebp-0x30]
1004d46a:	call   0x1004d16c
1004d46f:	cmp    eax,0xfffffffe
1004d472:	pop    ecx
1004d473:	je     0x1004d49d
1004d475:	push   DWORD PTR [ebp-0x30]
1004d478:	call   0x1004d16c
1004d47d:	push   DWORD PTR [ebp-0x30]
1004d480:	sar    eax,0x5
1004d483:	lea    esi,[eax*4+0x10082480]
1004d48a:	call   0x1004d16c
1004d48f:	and    eax,0x1f
1004d492:	imul   eax,eax,0x28
1004d495:	add    eax,DWORD PTR [esi]
1004d497:	pop    ecx
1004d498:	pop    ecx
1004d499:	xor    esi,esi
1004d49b:	jmp    0x1004d4a2
1004d49d:	mov    eax,0x1007e9d0
1004d4a2:	test   BYTE PTR [eax+0x24],0x7f
1004d4a6:	jne    0x1004d421
1004d4ac:	push   DWORD PTR [ebp-0x30]
1004d4af:	call   0x1004d16c
1004d4b4:	cmp    eax,0xffffffff
1004d4b7:	pop    ecx
1004d4b8:	je     0x1004d4f0
1004d4ba:	push   DWORD PTR [ebp-0x30]
1004d4bd:	call   0x1004d16c
1004d4c2:	cmp    eax,0xfffffffe
1004d4c5:	pop    ecx
1004d4c6:	je     0x1004d4f0
1004d4c8:	push   DWORD PTR [ebp-0x30]
1004d4cb:	call   0x1004d16c
1004d4d0:	push   DWORD PTR [ebp-0x30]
1004d4d3:	sar    eax,0x5
1004d4d6:	lea    esi,[eax*4+0x10082480]
1004d4dd:	call   0x1004d16c
1004d4e2:	and    eax,0x1f
1004d4e5:	imul   eax,eax,0x28
1004d4e8:	add    eax,DWORD PTR [esi]
1004d4ea:	pop    ecx
1004d4eb:	pop    ecx
1004d4ec:	xor    esi,esi
1004d4ee:	jmp    0x1004d4f5
1004d4f0:	mov    eax,0x1007e9d0
1004d4f5:	test   BYTE PTR [eax+0x24],0x80
1004d4f9:	jne    0x1004d421
1004d4ff:	cmp    ebx,esi
1004d501:	je     0x1004d421
1004d507:	mov    dl,BYTE PTR [ebx]
1004d509:	xor    ecx,ecx
1004d50b:	test   dl,dl
1004d50d:	mov    DWORD PTR [ebp-0x34],esi
1004d510:	mov    DWORD PTR [ebp-0x28],esi
1004d513:	mov    DWORD PTR [ebp-0x54],esi
1004d516:	mov    BYTE PTR [ebp-0x19],dl
1004d519:	je     0x1004dd0e
1004d51f:	inc    ebx
1004d520:	cmp    DWORD PTR [ebp-0x34],0x0
1004d524:	mov    DWORD PTR [ebp-0x48],ebx
1004d527:	jl     0x1004dd0e
1004d52d:	mov    al,dl
1004d52f:	sub    al,0x20
1004d531:	cmp    al,0x58
1004d533:	ja     0x1004d546
1004d535:	movsx  eax,dl
1004d538:	movzx  eax,BYTE PTR [eax+0x100673f8]
1004d53f:	and    eax,0xf
1004d542:	xor    esi,esi
1004d544:	jmp    0x1004d54a
1004d546:	xor    esi,esi
1004d548:	xor    eax,eax
1004d54a:	movsx  eax,BYTE PTR [ecx+eax*8+0x10067418]
1004d552:	push   0x7
1004d554:	sar    eax,0x4
1004d557:	pop    ecx
1004d558:	cmp    eax,ecx
1004d55a:	mov    DWORD PTR [ebp-0x74],eax
1004d55d:	ja     0x1004dcde
1004d563:	jmp    DWORD PTR [eax*4+0x1004dd39]
1004d56a:	or     DWORD PTR [ebp-0x20],0xffffffff
1004d56e:	mov    DWORD PTR [ebp-0x78],esi
1004d571:	mov    DWORD PTR [ebp-0x50],esi
1004d574:	mov    DWORD PTR [ebp-0x40],esi
1004d577:	mov    DWORD PTR [ebp-0x3c],esi
1004d57a:	mov    DWORD PTR [ebp-0x18],esi
1004d57d:	mov    DWORD PTR [ebp-0x44],esi
1004d580:	jmp    0x1004dcde
1004d585:	movsx  eax,dl
1004d588:	sub    eax,0x20
1004d58b:	je     0x1004d5cb
1004d58d:	sub    eax,0x3
1004d590:	je     0x1004d5bf
1004d592:	sub    eax,0x8
1004d595:	je     0x1004d5b6
1004d597:	dec    eax
1004d598:	dec    eax
1004d599:	je     0x1004d5ad
1004d59b:	sub    eax,0x3
1004d59e:	jne    0x1004dcde
1004d5a4:	or     DWORD PTR [ebp-0x18],0x8
1004d5a8:	jmp    0x1004dcde
1004d5ad:	or     DWORD PTR [ebp-0x18],0x4
1004d5b1:	jmp    0x1004dcde
1004d5b6:	or     DWORD PTR [ebp-0x18],0x1
1004d5ba:	jmp    0x1004dcde
1004d5bf:	or     DWORD PTR [ebp-0x18],0x80
1004d5c6:	jmp    0x1004dcde
1004d5cb:	or     DWORD PTR [ebp-0x18],0x2
1004d5cf:	jmp    0x1004dcde
1004d5d4:	cmp    dl,0x2a
1004d5d7:	jne    0x1004d5f9
1004d5d9:	add    edi,0x4
1004d5dc:	mov    DWORD PTR [ebp-0x2c],edi
1004d5df:	mov    edi,DWORD PTR [edi-0x4]
1004d5e2:	cmp    edi,esi
1004d5e4:	mov    DWORD PTR [ebp-0x40],edi
1004d5e7:	jge    0x1004dcde
1004d5ed:	or     DWORD PTR [ebp-0x18],0x4
1004d5f1:	neg    DWORD PTR [ebp-0x40]
1004d5f4:	jmp    0x1004dcde
1004d5f9:	mov    eax,DWORD PTR [ebp-0x40]
1004d5fc:	imul   eax,eax,0xa
1004d5ff:	movsx  ecx,dl
1004d602:	lea    eax,[eax+ecx*1-0x30]
1004d606:	mov    DWORD PTR [ebp-0x40],eax
1004d609:	jmp    0x1004dcde
1004d60e:	mov    DWORD PTR [ebp-0x20],esi
1004d611:	jmp    0x1004dcde
1004d616:	cmp    dl,0x2a
1004d619:	jne    0x1004d638
1004d61b:	add    edi,0x4
1004d61e:	mov    DWORD PTR [ebp-0x2c],edi
1004d621:	mov    edi,DWORD PTR [edi-0x4]
1004d624:	cmp    edi,esi
1004d626:	mov    DWORD PTR [ebp-0x20],edi
1004d629:	jge    0x1004dcde
1004d62f:	or     DWORD PTR [ebp-0x20],0xffffffff
1004d633:	jmp    0x1004dcde
1004d638:	mov    eax,DWORD PTR [ebp-0x20]
1004d63b:	imul   eax,eax,0xa
1004d63e:	movsx  ecx,dl
1004d641:	lea    eax,[eax+ecx*1-0x30]
1004d645:	mov    DWORD PTR [ebp-0x20],eax
1004d648:	jmp    0x1004dcde
1004d64d:	cmp    dl,0x49
1004d650:	je     0x1004d698
1004d652:	cmp    dl,0x68
1004d655:	je     0x1004d68f
1004d657:	cmp    dl,0x6c
1004d65a:	je     0x1004d671
1004d65c:	cmp    dl,0x77
1004d65f:	jne    0x1004dcde
1004d665:	or     DWORD PTR [ebp-0x18],0x800
1004d66c:	jmp    0x1004dcde
1004d671:	cmp    BYTE PTR [ebx],0x6c
1004d674:	jne    0x1004d686
1004d676:	inc    ebx
1004d677:	or     DWORD PTR [ebp-0x18],0x1000
1004d67e:	mov    DWORD PTR [ebp-0x48],ebx
1004d681:	jmp    0x1004dcde
1004d686:	or     DWORD PTR [ebp-0x18],0x10
1004d68a:	jmp    0x1004dcde
1004d68f:	or     DWORD PTR [ebp-0x18],0x20
1004d693:	jmp    0x1004dcde
1004d698:	mov    al,BYTE PTR [ebx]
1004d69a:	cmp    al,0x36
1004d69c:	jne    0x1004d6b5
1004d69e:	cmp    BYTE PTR [ebx+0x1],0x34
1004d6a2:	jne    0x1004d6b5
1004d6a4:	inc    ebx
1004d6a5:	inc    ebx
1004d6a6:	or     DWORD PTR [ebp-0x18],0x8000
1004d6ad:	mov    DWORD PTR [ebp-0x48],ebx
1004d6b0:	jmp    0x1004dcde
1004d6b5:	cmp    al,0x33
1004d6b7:	jne    0x1004d6d0
1004d6b9:	cmp    BYTE PTR [ebx+0x1],0x32
1004d6bd:	jne    0x1004d6d0
1004d6bf:	inc    ebx
1004d6c0:	inc    ebx
1004d6c1:	and    DWORD PTR [ebp-0x18],0xffff7fff
1004d6c8:	mov    DWORD PTR [ebp-0x48],ebx
1004d6cb:	jmp    0x1004dcde
1004d6d0:	cmp    al,0x64
1004d6d2:	je     0x1004dcde
1004d6d8:	cmp    al,0x69
1004d6da:	je     0x1004dcde
1004d6e0:	cmp    al,0x6f
1004d6e2:	je     0x1004dcde
1004d6e8:	cmp    al,0x75
1004d6ea:	je     0x1004dcde
1004d6f0:	cmp    al,0x78
1004d6f2:	je     0x1004dcde
1004d6f8:	cmp    al,0x58
1004d6fa:	je     0x1004dcde
1004d700:	mov    DWORD PTR [ebp-0x74],esi
1004d703:	lea    eax,[ebp-0x64]
1004d706:	push   eax
1004d707:	movzx  eax,dl
1004d70a:	push   eax
1004d70b:	mov    DWORD PTR [ebp-0x44],esi
1004d70e:	call   0x1004b2bf
1004d713:	pop    ecx
1004d714:	test   eax,eax
1004d716:	mov    al,BYTE PTR [ebp-0x19]
1004d719:	pop    ecx
1004d71a:	je     0x1004d735
1004d71c:	mov    ecx,DWORD PTR [ebp-0x30]
1004d71f:	lea    esi,[ebp-0x34]
1004d722:	call   0x1004de99
1004d727:	mov    al,BYTE PTR [ebx]
1004d729:	inc    ebx
1004d72a:	test   al,al
1004d72c:	mov    DWORD PTR [ebp-0x48],ebx
1004d72f:	je     0x1004dcf7
1004d735:	mov    ecx,DWORD PTR [ebp-0x30]
1004d738:	lea    esi,[ebp-0x34]
1004d73b:	call   0x1004de99
1004d740:	jmp    0x1004dcde
1004d745:	movsx  eax,dl
1004d748:	cmp    eax,0x64
1004d74b:	jg     0x1004d8c3
1004d751:	je     0x1004d942
1004d757:	cmp    eax,0x53
1004d75a:	jg     0x1004d80b
1004d760:	je     0x1004d7bc
1004d762:	sub    eax,0x41
1004d765:	je     0x1004d777
1004d767:	dec    eax
1004d768:	dec    eax
1004d769:	je     0x1004d7ab
1004d76b:	dec    eax
1004d76c:	dec    eax
1004d76d:	je     0x1004d777
1004d76f:	dec    eax
1004d770:	dec    eax
1004d771:	jne    0x1004dbc6
1004d777:	add    dl,0x20
1004d77a:	mov    DWORD PTR [ebp-0x78],0x1
1004d781:	mov    BYTE PTR [ebp-0x19],dl
1004d784:	or     DWORD PTR [ebp-0x18],0x40
1004d788:	cmp    DWORD PTR [ebp-0x20],esi
1004d78b:	lea    ebx,[ebp-0x14]
1004d78e:	mov    eax,0x200
1004d793:	mov    DWORD PTR [ebp-0x24],ebx
1004d796:	mov    DWORD PTR [ebp-0x68],eax
1004d799:	jge    0x1004d966
1004d79f:	mov    DWORD PTR [ebp-0x20],0x6
1004d7a6:	jmp    0x1004d9b4
1004d7ab:	test   WORD PTR [ebp-0x18],0x830
1004d7b1:	jne    0x1004d828
1004d7b3:	or     DWORD PTR [ebp-0x18],0x800
1004d7ba:	jmp    0x1004d828
1004d7bc:	test   WORD PTR [ebp-0x18],0x830
1004d7c2:	jne    0x1004d7cb
1004d7c4:	or     DWORD PTR [ebp-0x18],0x800
1004d7cb:	mov    ecx,DWORD PTR [ebp-0x20]
1004d7ce:	cmp    ecx,0xffffffff
1004d7d1:	jne    0x1004d7d8
1004d7d3:	mov    ecx,0x7fffffff
1004d7d8:	add    edi,0x4
1004d7db:	test   WORD PTR [ebp-0x18],0x810
1004d7e1:	mov    DWORD PTR [ebp-0x2c],edi
1004d7e4:	mov    edi,DWORD PTR [edi-0x4]
1004d7e7:	mov    DWORD PTR [ebp-0x24],edi
1004d7ea:	je     0x1004dba4
1004d7f0:	cmp    edi,esi
1004d7f2:	jne    0x1004d7fc
1004d7f4:	mov    eax,ds:0x1007ed2c
1004d7f9:	mov    DWORD PTR [ebp-0x24],eax
1004d7fc:	mov    eax,DWORD PTR [ebp-0x24]
1004d7ff:	mov    DWORD PTR [ebp-0x44],0x1
1004d806:	jmp    0x1004db99
1004d80b:	sub    eax,0x58
1004d80e:	je     0x1004da4d
1004d814:	dec    eax
1004d815:	dec    eax
1004d816:	je     0x1004d875
1004d818:	sub    eax,ecx
1004d81a:	je     0x1004d784
1004d820:	dec    eax
1004d821:	dec    eax
1004d822:	jne    0x1004dbc6
1004d828:	add    edi,0x4
1004d82b:	test   WORD PTR [ebp-0x18],0x810
1004d831:	mov    DWORD PTR [ebp-0x2c],edi
1004d834:	je     0x1004d85d
1004d836:	movzx  eax,WORD PTR [edi-0x4]
1004d83a:	push   eax
1004d83b:	push   0x200
1004d840:	lea    eax,[ebp-0x14]
1004d843:	push   eax
1004d844:	lea    eax,[ebp-0x28]
1004d847:	push   eax
1004d848:	call   0x100501e8
1004d84d:	add    esp,0x10
1004d850:	test   eax,eax
1004d852:	je     0x1004d86a
1004d854:	mov    DWORD PTR [ebp-0x50],0x1
1004d85b:	jmp    0x1004d86a
1004d85d:	mov    al,BYTE PTR [edi-0x4]
1004d860:	mov    BYTE PTR [ebp-0x14],al
1004d863:	mov    DWORD PTR [ebp-0x28],0x1
1004d86a:	lea    eax,[ebp-0x14]
1004d86d:	mov    DWORD PTR [ebp-0x24],eax
1004d870:	jmp    0x1004dbc6
1004d875:	mov    eax,DWORD PTR [edi]
1004d877:	add    edi,0x4
1004d87a:	cmp    eax,esi
1004d87c:	mov    DWORD PTR [ebp-0x2c],edi
1004d87f:	je     0x1004d8af
1004d881:	mov    ecx,DWORD PTR [eax+0x4]
1004d884:	cmp    ecx,esi
1004d886:	je     0x1004d8af
1004d888:	test   WORD PTR [ebp-0x18],0x800
1004d88e:	movsx  eax,WORD PTR [eax]
1004d891:	mov    DWORD PTR [ebp-0x24],ecx
1004d894:	je     0x1004d8a7
1004d896:	cdq    
1004d897:	sub    eax,edx
1004d899:	sar    eax,1
1004d89b:	mov    DWORD PTR [ebp-0x44],0x1
1004d8a2:	jmp    0x1004dbc3
1004d8a7:	mov    DWORD PTR [ebp-0x44],esi
1004d8aa:	jmp    0x1004dbc3
1004d8af:	mov    eax,ds:0x1007ed28
1004d8b4:	mov    DWORD PTR [ebp-0x24],eax
1004d8b7:	push   eax
1004d8b8:	call   0x10043010
1004d8bd:	pop    ecx
1004d8be:	jmp    0x1004dbc3
1004d8c3:	cmp    eax,0x70
1004d8c6:	jg     0x1004da52
1004d8cc:	je     0x1004da46
1004d8d2:	cmp    eax,0x65
1004d8d5:	jl     0x1004dbc6
1004d8db:	cmp    eax,0x67
1004d8de:	jle    0x1004d784
1004d8e4:	cmp    eax,0x69
1004d8e7:	je     0x1004d942
1004d8e9:	cmp    eax,0x6e
1004d8ec:	je     0x1004d90d
1004d8ee:	cmp    eax,0x6f
1004d8f1:	jne    0x1004dbc6
1004d8f7:	test   BYTE PTR [ebp-0x18],0x80
1004d8fb:	mov    DWORD PTR [ebp-0x28],0x8
1004d902:	je     0x1004d94d
1004d904:	or     DWORD PTR [ebp-0x18],0x200
1004d90b:	jmp    0x1004d94d
1004d90d:	mov    esi,DWORD PTR [edi]
1004d90f:	add    edi,0x4
1004d912:	mov    DWORD PTR [ebp-0x2c],edi
1004d915:	call   0x1004dd59
1004d91a:	test   eax,eax
1004d91c:	je     0x1004dcf7
1004d922:	test   BYTE PTR [ebp-0x18],0x20
1004d926:	je     0x1004d931
1004d928:	mov    ax,WORD PTR [ebp-0x34]
1004d92c:	mov    WORD PTR [esi],ax
1004d92f:	jmp    0x1004d936
1004d931:	mov    eax,DWORD PTR [ebp-0x34]
1004d934:	mov    DWORD PTR [esi],eax
1004d936:	mov    DWORD PTR [ebp-0x50],0x1
1004d93d:	jmp    0x1004dccb
1004d942:	or     DWORD PTR [ebp-0x18],0x40
1004d946:	mov    DWORD PTR [ebp-0x28],0xa
1004d94d:	mov    ecx,DWORD PTR [ebp-0x18]
1004d950:	test   cx,cx
1004d953:	jns    0x1004da9c
1004d959:	mov    eax,DWORD PTR [edi]
1004d95b:	mov    edx,DWORD PTR [edi+0x4]
1004d95e:	add    edi,0x8
1004d961:	jmp    0x1004dad1
1004d966:	jne    0x1004d976
1004d968:	cmp    dl,0x67
1004d96b:	jne    0x1004d9b4
1004d96d:	mov    DWORD PTR [ebp-0x20],0x1
1004d974:	jmp    0x1004d9b4
1004d976:	cmp    DWORD PTR [ebp-0x20],eax
1004d979:	jle    0x1004d97e
1004d97b:	mov    DWORD PTR [ebp-0x20],eax
1004d97e:	cmp    DWORD PTR [ebp-0x20],0xa3
1004d985:	jle    0x1004d9b4
1004d987:	mov    esi,DWORD PTR [ebp-0x20]
1004d98a:	add    esi,0x15d
1004d990:	push   esi
1004d991:	call   0x10047422
1004d996:	test   eax,eax
1004d998:	mov    dl,BYTE PTR [ebp-0x19]
1004d99b:	pop    ecx
1004d99c:	mov    DWORD PTR [ebp-0x54],eax
1004d99f:	je     0x1004d9ab
1004d9a1:	mov    DWORD PTR [ebp-0x24],eax
1004d9a4:	mov    DWORD PTR [ebp-0x68],esi
1004d9a7:	mov    ebx,eax
1004d9a9:	jmp    0x1004d9b2
1004d9ab:	mov    DWORD PTR [ebp-0x20],0xa3
1004d9b2:	xor    esi,esi
1004d9b4:	mov    eax,DWORD PTR [edi]
1004d9b6:	add    edi,0x8
1004d9b9:	mov    DWORD PTR [ebp-0x80],eax
1004d9bc:	mov    eax,DWORD PTR [edi-0x4]
1004d9bf:	mov    DWORD PTR [ebp-0x7c],eax
1004d9c2:	lea    eax,[ebp-0x64]
1004d9c5:	push   eax
1004d9c6:	push   DWORD PTR [ebp-0x78]
1004d9c9:	movsx  eax,dl
1004d9cc:	push   DWORD PTR [ebp-0x20]
1004d9cf:	mov    DWORD PTR [ebp-0x2c],edi
1004d9d2:	push   eax
1004d9d3:	push   DWORD PTR [ebp-0x68]
1004d9d6:	lea    eax,[ebp-0x80]
1004d9d9:	push   ebx
1004d9da:	push   eax
1004d9db:	push   DWORD PTR ds:0x1007ea98
1004d9e1:	call   0x10046ef2
1004d9e6:	pop    ecx
1004d9e7:	call   eax
1004d9e9:	mov    edi,DWORD PTR [ebp-0x18]
1004d9ec:	add    esp,0x1c
1004d9ef:	and    edi,0x80
1004d9f5:	je     0x1004da11
1004d9f7:	cmp    DWORD PTR [ebp-0x20],esi
1004d9fa:	jne    0x1004da11
1004d9fc:	lea    eax,[ebp-0x64]
1004d9ff:	push   eax
1004da00:	push   ebx
1004da01:	push   DWORD PTR ds:0x1007eaa4
1004da07:	call   0x10046ef2
1004da0c:	pop    ecx
1004da0d:	call   eax
1004da0f:	pop    ecx
1004da10:	pop    ecx
1004da11:	cmp    BYTE PTR [ebp-0x19],0x67
1004da15:	jne    0x1004da30
1004da17:	cmp    edi,esi
1004da19:	jne    0x1004da30
1004da1b:	lea    eax,[ebp-0x64]
1004da1e:	push   eax
1004da1f:	push   ebx
1004da20:	push   DWORD PTR ds:0x1007eaa0
1004da26:	call   0x10046ef2
1004da2b:	pop    ecx
1004da2c:	call   eax
1004da2e:	pop    ecx
1004da2f:	pop    ecx
1004da30:	cmp    BYTE PTR [ebx],0x2d
1004da33:	jne    0x1004da40
1004da35:	or     DWORD PTR [ebp-0x18],0x100
1004da3c:	inc    ebx
1004da3d:	mov    DWORD PTR [ebp-0x24],ebx
1004da40:	push   ebx
1004da41:	jmp    0x1004d8b8
1004da46:	mov    DWORD PTR [ebp-0x20],0x8
1004da4d:	mov    DWORD PTR [ebp-0x4c],ecx
1004da50:	jmp    0x1004da73
1004da52:	sub    eax,0x73
1004da55:	je     0x1004d7cb
1004da5b:	dec    eax
1004da5c:	dec    eax
1004da5d:	je     0x1004d946
1004da63:	sub    eax,0x3
1004da66:	jne    0x1004dbc6
1004da6c:	mov    DWORD PTR [ebp-0x4c],0x27
1004da73:	test   BYTE PTR [ebp-0x18],0x80
1004da77:	mov    DWORD PTR [ebp-0x28],0x10
1004da7e:	je     0x1004d94d
1004da84:	mov    al,BYTE PTR [ebp-0x4c]
1004da87:	add    al,0x51
1004da89:	mov    BYTE PTR [ebp-0x38],0x30
1004da8d:	mov    BYTE PTR [ebp-0x37],al
1004da90:	mov    DWORD PTR [ebp-0x3c],0x2
1004da97:	jmp    0x1004d94d
1004da9c:	test   cx,0x1000
1004daa1:	jne    0x1004d959
1004daa7:	add    edi,0x4
1004daaa:	test   cl,0x20
1004daad:	je     0x1004dac4
1004daaf:	test   cl,0x40
1004dab2:	mov    DWORD PTR [ebp-0x2c],edi
1004dab5:	je     0x1004dabd
1004dab7:	movsx  eax,WORD PTR [edi-0x4]
1004dabb:	jmp    0x1004dac1
1004dabd:	movzx  eax,WORD PTR [edi-0x4]
1004dac1:	cdq    
1004dac2:	jmp    0x1004dad4
1004dac4:	test   cl,0x40
1004dac7:	mov    eax,DWORD PTR [edi-0x4]
1004daca:	je     0x1004dacf
1004dacc:	cdq    
1004dacd:	jmp    0x1004dad1
1004dacf:	xor    edx,edx
1004dad1:	mov    DWORD PTR [ebp-0x2c],edi
1004dad4:	test   cl,0x40
1004dad7:	je     0x1004daf1
1004dad9:	cmp    edx,esi
1004dadb:	jg     0x1004daf1
1004dadd:	jl     0x1004dae3
1004dadf:	cmp    eax,esi
1004dae1:	jae    0x1004daf1
1004dae3:	neg    eax
1004dae5:	adc    edx,0x0
1004dae8:	neg    edx
1004daea:	or     DWORD PTR [ebp-0x18],0x100
1004daf1:	test   WORD PTR [ebp-0x18],0x9000
1004daf7:	mov    ebx,edx
1004daf9:	mov    edi,eax
1004dafb:	jne    0x1004daff
1004dafd:	xor    ebx,ebx
1004daff:	cmp    DWORD PTR [ebp-0x20],0x0
1004db03:	jge    0x1004db0e
1004db05:	mov    DWORD PTR [ebp-0x20],0x1
1004db0c:	jmp    0x1004db1f
1004db0e:	and    DWORD PTR [ebp-0x18],0xfffffff7
1004db12:	mov    eax,0x200
1004db17:	cmp    DWORD PTR [ebp-0x20],eax
1004db1a:	jle    0x1004db1f
1004db1c:	mov    DWORD PTR [ebp-0x20],eax
1004db1f:	mov    eax,edi
1004db21:	or     eax,ebx
1004db23:	jne    0x1004db29
1004db25:	and    DWORD PTR [ebp-0x3c],0x0
1004db29:	lea    esi,[ebp+0x1eb]
1004db2f:	mov    eax,DWORD PTR [ebp-0x20]
1004db32:	dec    DWORD PTR [ebp-0x20]
1004db35:	test   eax,eax
1004db37:	jg     0x1004db3f
1004db39:	mov    eax,edi
1004db3b:	or     eax,ebx
1004db3d:	je     0x1004db63
1004db3f:	mov    eax,DWORD PTR [ebp-0x28]
1004db42:	cdq    
1004db43:	push   edx
1004db44:	push   eax
1004db45:	push   ebx
1004db46:	push   edi
1004db47:	call   0x1004a9f0
1004db4c:	add    ecx,0x30
1004db4f:	cmp    ecx,0x39
1004db52:	mov    DWORD PTR [ebp-0x68],ebx
1004db55:	mov    edi,eax
1004db57:	mov    ebx,edx
1004db59:	jle    0x1004db5e
1004db5b:	add    ecx,DWORD PTR [ebp-0x4c]
1004db5e:	mov    BYTE PTR [esi],cl
1004db60:	dec    esi
1004db61:	jmp    0x1004db2f
1004db63:	lea    eax,[ebp+0x1eb]
1004db69:	sub    eax,esi
1004db6b:	inc    esi
1004db6c:	test   WORD PTR [ebp-0x18],0x200
1004db72:	mov    DWORD PTR [ebp-0x28],eax
1004db75:	mov    DWORD PTR [ebp-0x24],esi
1004db78:	je     0x1004dbc6
1004db7a:	test   eax,eax
1004db7c:	je     0x1004db85
1004db7e:	mov    ecx,esi
1004db80:	cmp    BYTE PTR [ecx],0x30
1004db83:	je     0x1004dbc6
1004db85:	dec    DWORD PTR [ebp-0x24]
1004db88:	mov    ecx,DWORD PTR [ebp-0x24]
1004db8b:	mov    BYTE PTR [ecx],0x30
1004db8e:	inc    eax
1004db8f:	jmp    0x1004dbc3
1004db91:	dec    ecx
1004db92:	cmp    WORD PTR [eax],si
1004db95:	je     0x1004db9d
1004db97:	inc    eax
1004db98:	inc    eax
1004db99:	cmp    ecx,esi
1004db9b:	jne    0x1004db91
1004db9d:	sub    eax,DWORD PTR [ebp-0x24]
1004dba0:	sar    eax,1
1004dba2:	jmp    0x1004dbc3
1004dba4:	cmp    edi,esi
1004dba6:	jne    0x1004dbb0
1004dba8:	mov    eax,ds:0x1007ed28
1004dbad:	mov    DWORD PTR [ebp-0x24],eax
1004dbb0:	mov    eax,DWORD PTR [ebp-0x24]
1004dbb3:	jmp    0x1004dbbc
1004dbb5:	dec    ecx
1004dbb6:	cmp    BYTE PTR [eax],0x0
1004dbb9:	je     0x1004dbc0
1004dbbb:	inc    eax
1004dbbc:	cmp    ecx,esi
1004dbbe:	jne    0x1004dbb5
1004dbc0:	sub    eax,DWORD PTR [ebp-0x24]
1004dbc3:	mov    DWORD PTR [ebp-0x28],eax
1004dbc6:	cmp    DWORD PTR [ebp-0x50],0x0
1004dbca:	jne    0x1004dccb
1004dbd0:	mov    eax,DWORD PTR [ebp-0x18]
1004dbd3:	test   al,0x40
1004dbd5:	je     0x1004dbfc
1004dbd7:	test   ax,0x100
1004dbdb:	je     0x1004dbe3
1004dbdd:	mov    BYTE PTR [ebp-0x38],0x2d
1004dbe1:	jmp    0x1004dbf5
1004dbe3:	test   al,0x1
1004dbe5:	je     0x1004dbed
1004dbe7:	mov    BYTE PTR [ebp-0x38],0x2b
1004dbeb:	jmp    0x1004dbf5
1004dbed:	test   al,0x2
1004dbef:	je     0x1004dbfc
1004dbf1:	mov    BYTE PTR [ebp-0x38],0x20
1004dbf5:	mov    DWORD PTR [ebp-0x3c],0x1
1004dbfc:	mov    ebx,DWORD PTR [ebp-0x40]
1004dbff:	sub    ebx,DWORD PTR [ebp-0x28]
1004dc02:	sub    ebx,DWORD PTR [ebp-0x3c]
1004dc05:	test   BYTE PTR [ebp-0x18],0xc
1004dc09:	jne    0x1004dc1c
1004dc0b:	push   DWORD PTR [ebp-0x30]
1004dc0e:	lea    eax,[ebp-0x34]
1004dc11:	push   ebx
1004dc12:	push   0x20
1004dc14:	call   0x1004decc
1004dc19:	add    esp,0xc
1004dc1c:	push   DWORD PTR [ebp-0x3c]
1004dc1f:	mov    edi,DWORD PTR [ebp-0x30]
1004dc22:	lea    eax,[ebp-0x34]
1004dc25:	lea    ecx,[ebp-0x38]
1004dc28:	call   0x1004d377
1004dc2d:	test   BYTE PTR [ebp-0x18],0x8
1004dc31:	pop    ecx
1004dc32:	je     0x1004dc49
1004dc34:	test   BYTE PTR [ebp-0x18],0x4
1004dc38:	jne    0x1004dc49
1004dc3a:	push   edi
1004dc3b:	push   ebx
1004dc3c:	push   0x30
1004dc3e:	lea    eax,[ebp-0x34]
1004dc41:	call   0x1004decc
1004dc46:	add    esp,0xc
1004dc49:	cmp    DWORD PTR [ebp-0x44],0x0
1004dc4d:	mov    eax,DWORD PTR [ebp-0x28]
1004dc50:	je     0x1004dca3
1004dc52:	test   eax,eax
1004dc54:	jle    0x1004dca3
1004dc56:	mov    esi,DWORD PTR [ebp-0x24]
1004dc59:	mov    DWORD PTR [ebp-0x68],eax
1004dc5c:	movzx  eax,WORD PTR [esi]
1004dc5f:	dec    DWORD PTR [ebp-0x68]
1004dc62:	push   eax
1004dc63:	push   0x6
1004dc65:	lea    eax,[ebp+0x1ec]
1004dc6b:	push   eax
1004dc6c:	lea    eax,[ebp-0x70]
1004dc6f:	inc    esi
1004dc70:	push   eax
1004dc71:	inc    esi
1004dc72:	call   0x100501e8
1004dc77:	add    esp,0x10
1004dc7a:	test   eax,eax
1004dc7c:	jne    0x1004dc9d
1004dc7e:	cmp    DWORD PTR [ebp-0x70],eax
1004dc81:	je     0x1004dc9d
1004dc83:	push   DWORD PTR [ebp-0x70]
1004dc86:	lea    eax,[ebp-0x34]
1004dc89:	lea    ecx,[ebp+0x1ec]
1004dc8f:	call   0x1004d377
1004dc94:	cmp    DWORD PTR [ebp-0x68],0x0
1004dc98:	pop    ecx
1004dc99:	jne    0x1004dc5c
1004dc9b:	jmp    0x1004dcb0
1004dc9d:	or     DWORD PTR [ebp-0x34],0xffffffff
1004dca1:	jmp    0x1004dcb0
1004dca3:	mov    ecx,DWORD PTR [ebp-0x24]
1004dca6:	push   eax
1004dca7:	lea    eax,[ebp-0x34]
1004dcaa:	call   0x1004d377
1004dcaf:	pop    ecx
1004dcb0:	cmp    DWORD PTR [ebp-0x34],0x0
1004dcb4:	jl     0x1004dccb
1004dcb6:	test   BYTE PTR [ebp-0x18],0x4
1004dcba:	je     0x1004dccb
1004dcbc:	push   edi
1004dcbd:	push   ebx
1004dcbe:	push   0x20
1004dcc0:	lea    eax,[ebp-0x34]
1004dcc3:	call   0x1004decc
1004dcc8:	add    esp,0xc
1004dccb:	cmp    DWORD PTR [ebp-0x54],0x0
1004dccf:	je     0x1004dcde
1004dcd1:	push   DWORD PTR [ebp-0x54]
1004dcd4:	call   0x10043508
1004dcd9:	and    DWORD PTR [ebp-0x54],0x0
1004dcdd:	pop    ecx
1004dcde:	mov    ebx,DWORD PTR [ebp-0x48]
1004dce1:	mov    al,BYTE PTR [ebx]
1004dce3:	test   al,al
1004dce5:	mov    BYTE PTR [ebp-0x19],al
1004dce8:	je     0x1004dd0e
1004dcea:	mov    ecx,DWORD PTR [ebp-0x74]
1004dced:	mov    edi,DWORD PTR [ebp-0x2c]
1004dcf0:	mov    dl,al
1004dcf2:	jmp    0x1004d51f
1004dcf7:	call   0x10046b55
1004dcfc:	mov    DWORD PTR [eax],0x16
1004dd02:	xor    eax,eax
1004dd04:	push   eax
1004dd05:	push   eax
1004dd06:	push   eax
1004dd07:	push   eax
1004dd08:	push   eax
1004dd09:	jmp    0x1004d431
1004dd0e:	cmp    BYTE PTR [ebp-0x58],0x0
1004dd12:	je     0x1004dd1b
1004dd14:	mov    eax,DWORD PTR [ebp-0x5c]
1004dd17:	and    DWORD PTR [eax+0x70],0xfffffffd
1004dd1b:	mov    eax,DWORD PTR [ebp-0x34]
1004dd1e:	mov    ecx,DWORD PTR [ebp+0x1f4]
1004dd24:	pop    edi
1004dd25:	pop    esi
1004dd26:	xor    ecx,ebp
1004dd28:	pop    ebx
1004dd29:	call   0x10042e97
1004dd2e:	add    ebp,0x1f8
1004dd34:	leave  
1004dd35:	ret    
1004dd36:	lea    ecx,[ecx+0x0]
1004dd39:	add    edx,edi
1004dd3b:	add    al,0x10
1004dd3d:	push   0xffffffd5
1004dd3f:	add    al,0x10
1004dd41:	test   ebp,edx
1004dd43:	add    al,0x10
1004dd45:	aam    0xd5
1004dd47:	add    al,0x10
1004dd49:	push   cs
1004dd4a:	(bad)  
1004dd4b:	add    al,0x10
1004dd4d:	push   ss
1004dd4e:	(bad)  
1004dd4f:	add    al,0x10
1004dd51:	dec    ebp
1004dd52:	(bad)  
1004dd53:	add    al,0x10
1004dd55:	inc    ebp
1004dd56:	xlat   BYTE PTR ds:[ebx]
1004dd57:	add    al,0x10
1004dd59:	mov    eax,ds:0x1007e030
1004dd5e:	or     eax,0x1
1004dd61:	xor    ecx,ecx
1004dd63:	cmp    DWORD PTR ds:0x10080470,eax
1004dd69:	sete   cl
1004dd6c:	mov    eax,ecx
1004dd6e:	ret    
1004dd6f:	push   ebp
1004dd70:	mov    ebp,esp
1004dd72:	sub    esp,0x10
1004dd75:	push   ebx
1004dd76:	push   esi
1004dd77:	mov    esi,DWORD PTR [ebp+0xc]
1004dd7a:	xor    ebx,ebx
1004dd7c:	cmp    esi,ebx
1004dd7e:	je     0x1004dd93
1004dd80:	cmp    DWORD PTR [ebp+0x10],ebx
1004dd83:	je     0x1004dd93
1004dd85:	cmp    BYTE PTR [esi],bl
1004dd87:	jne    0x1004dd99
1004dd89:	mov    eax,DWORD PTR [ebp+0x8]
1004dd8c:	cmp    eax,ebx
1004dd8e:	je     0x1004dd93
1004dd90:	mov    WORD PTR [eax],bx
1004dd93:	xor    eax,eax
1004dd95:	pop    esi
1004dd96:	pop    ebx
1004dd97:	leave  
1004dd98:	ret    
1004dd99:	push   DWORD PTR [ebp+0x14]
1004dd9c:	lea    ecx,[ebp-0x10]
1004dd9f:	call   0x100454e5
1004dda4:	mov    eax,DWORD PTR [ebp-0x10]
1004dda7:	cmp    DWORD PTR [eax+0x14],ebx
1004ddaa:	jne    0x1004ddcb
1004ddac:	mov    eax,DWORD PTR [ebp+0x8]
1004ddaf:	cmp    eax,ebx
1004ddb1:	je     0x1004ddba
1004ddb3:	movzx  cx,BYTE PTR [esi]
1004ddb7:	mov    WORD PTR [eax],cx
1004ddba:	cmp    BYTE PTR [ebp-0x4],bl
1004ddbd:	je     0x1004ddc6
1004ddbf:	mov    eax,DWORD PTR [ebp-0x8]
1004ddc2:	and    DWORD PTR [eax+0x70],0xfffffffd
1004ddc6:	xor    eax,eax
1004ddc8:	inc    eax
1004ddc9:	jmp    0x1004dd95
1004ddcb:	lea    eax,[ebp-0x10]
1004ddce:	push   eax
1004ddcf:	movzx  eax,BYTE PTR [esi]
1004ddd2:	push   eax
1004ddd3:	call   0x1004b2bf
1004ddd8:	test   eax,eax
1004ddda:	pop    ecx
1004dddb:	pop    ecx
1004dddc:	je     0x1004de5b
1004ddde:	mov    eax,DWORD PTR [ebp-0x10]
1004dde1:	mov    ecx,DWORD PTR [eax+0xac]
1004dde7:	cmp    ecx,0x1
1004ddea:	jle    0x1004de11
1004ddec:	cmp    DWORD PTR [ebp+0x10],ecx
1004ddef:	jl     0x1004de11
1004ddf1:	xor    edx,edx
1004ddf3:	cmp    DWORD PTR [ebp+0x8],ebx
1004ddf6:	setne  dl
1004ddf9:	push   edx
1004ddfa:	push   DWORD PTR [ebp+0x8]
1004ddfd:	push   ecx
1004ddfe:	push   esi
1004ddff:	push   0x9
1004de01:	push   DWORD PTR [eax+0x4]
1004de04:	call   DWORD PTR ds:0x1006608c
1004de0a:	test   eax,eax
1004de0c:	mov    eax,DWORD PTR [ebp-0x10]
1004de0f:	jne    0x1004de21
1004de11:	mov    ecx,DWORD PTR [ebp+0x10]
1004de14:	cmp    ecx,DWORD PTR [eax+0xac]
1004de1a:	jb     0x1004de3c
1004de1c:	cmp    BYTE PTR [esi+0x1],bl
1004de1f:	je     0x1004de3c
1004de21:	cmp    BYTE PTR [ebp-0x4],bl
1004de24:	mov    eax,DWORD PTR [eax+0xac]
1004de2a:	je     0x1004dd95
1004de30:	mov    ecx,DWORD PTR [ebp-0x8]
1004de33:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004de37:	jmp    0x1004dd95
1004de3c:	call   0x10046b55
1004de41:	mov    DWORD PTR [eax],0x2a
1004de47:	cmp    BYTE PTR [ebp-0x4],bl
1004de4a:	je     0x1004de53
1004de4c:	mov    eax,DWORD PTR [ebp-0x8]
1004de4f:	and    DWORD PTR [eax+0x70],0xfffffffd
1004de53:	or     eax,0xffffffff
1004de56:	jmp    0x1004dd95
1004de5b:	xor    eax,eax
1004de5d:	cmp    DWORD PTR [ebp+0x8],ebx
1004de60:	setne  al
1004de63:	push   eax
1004de64:	push   DWORD PTR [ebp+0x8]
1004de67:	mov    eax,DWORD PTR [ebp-0x10]
1004de6a:	push   0x1
1004de6c:	push   esi
1004de6d:	push   0x9
1004de6f:	push   DWORD PTR [eax+0x4]
1004de72:	call   DWORD PTR ds:0x1006608c
1004de78:	test   eax,eax
1004de7a:	jne    0x1004ddba
1004de80:	jmp    0x1004de3c
1004de82:	push   0x0
1004de84:	push   DWORD PTR [esp+0x10]
1004de88:	push   DWORD PTR [esp+0x10]
1004de8c:	push   DWORD PTR [esp+0x10]
1004de90:	call   0x1004dd6f
1004de95:	add    esp,0x10
1004de98:	ret    
1004de99:	test   BYTE PTR [ecx+0xc],0x40
1004de9d:	je     0x1004dea5
1004de9f:	cmp    DWORD PTR [ecx+0x8],0x0
1004dea3:	je     0x1004dec9
1004dea5:	dec    DWORD PTR [ecx+0x4]
1004dea8:	js     0x1004deb5
1004deaa:	mov    edx,DWORD PTR [ecx]
1004deac:	mov    BYTE PTR [edx],al
1004deae:	inc    DWORD PTR [ecx]
1004deb0:	movzx  eax,al
1004deb3:	jmp    0x1004dec1
1004deb5:	movsx  eax,al
1004deb8:	push   ecx
1004deb9:	push   eax
1004deba:	call   0x100487cd
1004debf:	pop    ecx
1004dec0:	pop    ecx
1004dec1:	cmp    eax,0xffffffff
1004dec4:	jne    0x1004dec9
1004dec6:	or     DWORD PTR [esi],eax
1004dec8:	ret    
1004dec9:	inc    DWORD PTR [esi]
1004decb:	ret    
1004decc:	push   ebp
1004decd:	mov    ebp,esp
1004decf:	push   esi
1004ded0:	mov    esi,eax
1004ded2:	jmp    0x1004dee7
1004ded4:	mov    ecx,DWORD PTR [ebp+0x10]
1004ded7:	mov    al,BYTE PTR [ebp+0x8]
1004deda:	dec    DWORD PTR [ebp+0xc]
1004dedd:	call   0x1004de99
1004dee2:	cmp    DWORD PTR [esi],0xffffffff
1004dee5:	je     0x1004deed
1004dee7:	cmp    DWORD PTR [ebp+0xc],0x0
1004deeb:	jg     0x1004ded4
1004deed:	pop    esi
1004deee:	pop    ebp
1004deef:	ret    
1004def0:	push   ebp
1004def1:	lea    ebp,[esp-0x1f8]
1004def8:	sub    esp,0x278
1004defe:	mov    eax,ds:0x1007e030
1004df03:	xor    eax,ebp
1004df05:	mov    DWORD PTR [ebp+0x1f4],eax
1004df0b:	mov    eax,DWORD PTR [ebp+0x200]
1004df11:	push   ebx
1004df12:	mov    ebx,DWORD PTR [ebp+0x204]
1004df18:	push   esi
1004df19:	xor    esi,esi
1004df1b:	push   edi
1004df1c:	mov    edi,DWORD PTR [ebp+0x20c]
1004df22:	push   DWORD PTR [ebp+0x208]
1004df28:	lea    ecx,[ebp-0x5c]
1004df2b:	mov    DWORD PTR [ebp-0x30],eax
1004df2e:	mov    DWORD PTR [ebp-0x2c],edi
1004df31:	mov    DWORD PTR [ebp-0x64],esi
1004df34:	mov    DWORD PTR [ebp-0x18],esi
1004df37:	mov    DWORD PTR [ebp-0x40],esi
1004df3a:	mov    DWORD PTR [ebp-0x20],esi
1004df3d:	mov    DWORD PTR [ebp-0x3c],esi
1004df40:	mov    DWORD PTR [ebp-0x68],esi
1004df43:	mov    DWORD PTR [ebp-0x44],esi
1004df46:	call   0x100454e5
1004df4b:	cmp    DWORD PTR [ebp-0x30],esi
1004df4e:	jne    0x1004df7d
1004df50:	call   0x10046b55
1004df55:	push   esi
1004df56:	push   esi
1004df57:	push   esi
1004df58:	push   esi
1004df59:	mov    DWORD PTR [eax],0x16
1004df5f:	push   esi
1004df60:	call   0x1004338c
1004df65:	add    esp,0x14
1004df68:	cmp    BYTE PTR [ebp-0x50],0x0
1004df6c:	je     0x1004df75
1004df6e:	mov    eax,DWORD PTR [ebp-0x54]
1004df71:	and    DWORD PTR [eax+0x70],0xfffffffd
1004df75:	or     eax,0xffffffff
1004df78:	jmp    0x1004e868
1004df7d:	mov    eax,DWORD PTR [ebp-0x30]
1004df80:	test   BYTE PTR [eax+0xc],0x40
1004df84:	jne    0x1004e02e
1004df8a:	push   eax
1004df8b:	call   0x1004d16c
1004df90:	cmp    eax,0xffffffff
1004df93:	pop    ecx
1004df94:	je     0x1004dfcc
1004df96:	push   DWORD PTR [ebp-0x30]
1004df99:	call   0x1004d16c
1004df9e:	cmp    eax,0xfffffffe
1004dfa1:	pop    ecx
1004dfa2:	je     0x1004dfcc
1004dfa4:	push   DWORD PTR [ebp-0x30]
1004dfa7:	call   0x1004d16c
1004dfac:	push   DWORD PTR [ebp-0x30]
1004dfaf:	sar    eax,0x5
1004dfb2:	lea    esi,[eax*4+0x10082480]
1004dfb9:	call   0x1004d16c
1004dfbe:	and    eax,0x1f
1004dfc1:	imul   eax,eax,0x28
1004dfc4:	add    eax,DWORD PTR [esi]
1004dfc6:	pop    ecx
1004dfc7:	pop    ecx
1004dfc8:	xor    esi,esi
1004dfca:	jmp    0x1004dfd1
1004dfcc:	mov    eax,0x1007e9d0
1004dfd1:	test   BYTE PTR [eax+0x24],0x7f
1004dfd5:	jne    0x1004df50
1004dfdb:	push   DWORD PTR [ebp-0x30]
1004dfde:	call   0x1004d16c
1004dfe3:	cmp    eax,0xffffffff
1004dfe6:	pop    ecx
1004dfe7:	je     0x1004e01f
1004dfe9:	push   DWORD PTR [ebp-0x30]
1004dfec:	call   0x1004d16c
1004dff1:	cmp    eax,0xfffffffe
1004dff4:	pop    ecx
1004dff5:	je     0x1004e01f
1004dff7:	push   DWORD PTR [ebp-0x30]
1004dffa:	call   0x1004d16c
1004dfff:	push   DWORD PTR [ebp-0x30]
1004e002:	sar    eax,0x5
1004e005:	lea    esi,[eax*4+0x10082480]
1004e00c:	call   0x1004d16c
1004e011:	and    eax,0x1f
1004e014:	imul   eax,eax,0x28
1004e017:	add    eax,DWORD PTR [esi]
1004e019:	pop    ecx
1004e01a:	pop    ecx
1004e01b:	xor    esi,esi
1004e01d:	jmp    0x1004e024
1004e01f:	mov    eax,0x1007e9d0
1004e024:	test   BYTE PTR [eax+0x24],0x80
1004e028:	jne    0x1004df50
1004e02e:	cmp    ebx,esi
1004e030:	je     0x1004df50
1004e036:	mov    dl,BYTE PTR [ebx]
1004e038:	test   dl,dl
1004e03a:	mov    DWORD PTR [ebp-0x34],esi
1004e03d:	mov    DWORD PTR [ebp-0x28],esi
1004e040:	mov    DWORD PTR [ebp-0x48],esi
1004e043:	mov    DWORD PTR [ebp-0x60],esi
1004e046:	mov    BYTE PTR [ebp-0x19],dl
1004e049:	je     0x1004e858
1004e04f:	inc    ebx
1004e050:	xor    eax,eax
1004e052:	cmp    DWORD PTR [ebp-0x34],eax
1004e055:	mov    DWORD PTR [ebp-0x4c],ebx
1004e058:	jl     0x1004e847
1004e05e:	mov    cl,dl
1004e060:	sub    cl,0x20
1004e063:	cmp    cl,0x58
1004e066:	ja     0x1004e075
1004e068:	movsx  eax,dl
1004e06b:	movzx  eax,BYTE PTR [eax+0x10067458]
1004e072:	and    eax,0xf
1004e075:	mov    ecx,DWORD PTR [ebp-0x48]
1004e078:	imul   eax,eax,0x9
1004e07b:	movzx  eax,BYTE PTR [eax+ecx*1+0x10067478]
1004e083:	push   0x8
1004e085:	shr    eax,0x4
1004e088:	pop    esi
1004e089:	cmp    eax,esi
1004e08b:	mov    DWORD PTR [ebp-0x48],eax
1004e08e:	je     0x1004e830
1004e094:	push   0x7
1004e096:	pop    ecx
1004e097:	cmp    eax,ecx
1004e099:	ja     0x1004e81a
1004e09f:	jmp    DWORD PTR [eax*4+0x1004e880]
1004e0a6:	xor    eax,eax
1004e0a8:	or     DWORD PTR [ebp-0x20],0xffffffff
1004e0ac:	mov    DWORD PTR [ebp-0x74],eax
1004e0af:	mov    DWORD PTR [ebp-0x68],eax
1004e0b2:	mov    DWORD PTR [ebp-0x40],eax
1004e0b5:	mov    DWORD PTR [ebp-0x3c],eax
1004e0b8:	mov    DWORD PTR [ebp-0x18],eax
1004e0bb:	mov    DWORD PTR [ebp-0x44],eax
1004e0be:	jmp    0x1004e81a
1004e0c3:	movsx  eax,dl
1004e0c6:	sub    eax,0x20
1004e0c9:	je     0x1004e107
1004e0cb:	sub    eax,0x3
1004e0ce:	je     0x1004e0fb
1004e0d0:	sub    eax,esi
1004e0d2:	je     0x1004e0f2
1004e0d4:	dec    eax
1004e0d5:	dec    eax
1004e0d6:	je     0x1004e0e9
1004e0d8:	sub    eax,0x3
1004e0db:	jne    0x1004e81a
1004e0e1:	or     DWORD PTR [ebp-0x18],esi
1004e0e4:	jmp    0x1004e81a
1004e0e9:	or     DWORD PTR [ebp-0x18],0x4
1004e0ed:	jmp    0x1004e81a
1004e0f2:	or     DWORD PTR [ebp-0x18],0x1
1004e0f6:	jmp    0x1004e81a
1004e0fb:	or     DWORD PTR [ebp-0x18],0x80
1004e102:	jmp    0x1004e81a
1004e107:	or     DWORD PTR [ebp-0x18],0x2
1004e10b:	jmp    0x1004e81a
1004e110:	cmp    dl,0x2a
1004e113:	jne    0x1004e135
1004e115:	add    edi,0x4
1004e118:	mov    DWORD PTR [ebp-0x2c],edi
1004e11b:	mov    edi,DWORD PTR [edi-0x4]
1004e11e:	test   edi,edi
1004e120:	mov    DWORD PTR [ebp-0x40],edi
1004e123:	jge    0x1004e81a
1004e129:	or     DWORD PTR [ebp-0x18],0x4
1004e12d:	neg    DWORD PTR [ebp-0x40]
1004e130:	jmp    0x1004e81a
1004e135:	mov    eax,DWORD PTR [ebp-0x40]
1004e138:	imul   eax,eax,0xa
1004e13b:	movsx  ecx,dl
1004e13e:	lea    eax,[eax+ecx*1-0x30]
1004e142:	mov    DWORD PTR [ebp-0x40],eax
1004e145:	jmp    0x1004e81a
1004e14a:	and    DWORD PTR [ebp-0x20],0x0
1004e14e:	jmp    0x1004e81a
1004e153:	cmp    dl,0x2a
1004e156:	jne    0x1004e175
1004e158:	add    edi,0x4
1004e15b:	mov    DWORD PTR [ebp-0x2c],edi
1004e15e:	mov    edi,DWORD PTR [edi-0x4]
1004e161:	test   edi,edi
1004e163:	mov    DWORD PTR [ebp-0x20],edi
1004e166:	jge    0x1004e81a
1004e16c:	or     DWORD PTR [ebp-0x20],0xffffffff
1004e170:	jmp    0x1004e81a
1004e175:	mov    eax,DWORD PTR [ebp-0x20]
1004e178:	imul   eax,eax,0xa
1004e17b:	movsx  ecx,dl
1004e17e:	lea    eax,[eax+ecx*1-0x30]
1004e182:	mov    DWORD PTR [ebp-0x20],eax
1004e185:	jmp    0x1004e81a
1004e18a:	cmp    dl,0x49
1004e18d:	je     0x1004e1d5
1004e18f:	cmp    dl,0x68
1004e192:	je     0x1004e1cc
1004e194:	cmp    dl,0x6c
1004e197:	je     0x1004e1ae
1004e199:	cmp    dl,0x77
1004e19c:	jne    0x1004e81a
1004e1a2:	or     DWORD PTR [ebp-0x18],0x800
1004e1a9:	jmp    0x1004e81a
1004e1ae:	cmp    BYTE PTR [ebx],0x6c
1004e1b1:	jne    0x1004e1c3
1004e1b3:	inc    ebx
1004e1b4:	or     DWORD PTR [ebp-0x18],0x1000
1004e1bb:	mov    DWORD PTR [ebp-0x4c],ebx
1004e1be:	jmp    0x1004e81a
1004e1c3:	or     DWORD PTR [ebp-0x18],0x10
1004e1c7:	jmp    0x1004e81a
1004e1cc:	or     DWORD PTR [ebp-0x18],0x20
1004e1d0:	jmp    0x1004e81a
1004e1d5:	mov    al,BYTE PTR [ebx]
1004e1d7:	cmp    al,0x36
1004e1d9:	jne    0x1004e1f2
1004e1db:	cmp    BYTE PTR [ebx+0x1],0x34
1004e1df:	jne    0x1004e1f2
1004e1e1:	inc    ebx
1004e1e2:	inc    ebx
1004e1e3:	or     DWORD PTR [ebp-0x18],0x8000
1004e1ea:	mov    DWORD PTR [ebp-0x4c],ebx
1004e1ed:	jmp    0x1004e81a
1004e1f2:	cmp    al,0x33
1004e1f4:	jne    0x1004e20d
1004e1f6:	cmp    BYTE PTR [ebx+0x1],0x32
1004e1fa:	jne    0x1004e20d
1004e1fc:	inc    ebx
1004e1fd:	inc    ebx
1004e1fe:	and    DWORD PTR [ebp-0x18],0xffff7fff
1004e205:	mov    DWORD PTR [ebp-0x4c],ebx
1004e208:	jmp    0x1004e81a
1004e20d:	cmp    al,0x64
1004e20f:	je     0x1004e81a
1004e215:	cmp    al,0x69
1004e217:	je     0x1004e81a
1004e21d:	cmp    al,0x6f
1004e21f:	je     0x1004e81a
1004e225:	cmp    al,0x75
1004e227:	je     0x1004e81a
1004e22d:	cmp    al,0x78
1004e22f:	je     0x1004e81a
1004e235:	cmp    al,0x58
1004e237:	je     0x1004e81a
1004e23d:	and    DWORD PTR [ebp-0x48],0x0
1004e241:	and    DWORD PTR [ebp-0x44],0x0
1004e245:	lea    eax,[ebp-0x5c]
1004e248:	push   eax
1004e249:	movzx  eax,dl
1004e24c:	push   eax
1004e24d:	call   0x1004b2bf
1004e252:	pop    ecx
1004e253:	test   eax,eax
1004e255:	mov    al,BYTE PTR [ebp-0x19]
1004e258:	pop    ecx
1004e259:	je     0x1004e274
1004e25b:	mov    ecx,DWORD PTR [ebp-0x30]
1004e25e:	lea    esi,[ebp-0x34]
1004e261:	call   0x1004de99
1004e266:	mov    al,BYTE PTR [ebx]
1004e268:	inc    ebx
1004e269:	test   al,al
1004e26b:	mov    DWORD PTR [ebp-0x4c],ebx
1004e26e:	je     0x1004e830
1004e274:	mov    ecx,DWORD PTR [ebp-0x30]
1004e277:	lea    esi,[ebp-0x34]
1004e27a:	call   0x1004de99
1004e27f:	jmp    0x1004e81a
1004e284:	movsx  eax,dl
1004e287:	cmp    eax,0x64
1004e28a:	jg     0x1004e404
1004e290:	je     0x1004e47f
1004e296:	cmp    eax,0x53
1004e299:	jg     0x1004e34b
1004e29f:	je     0x1004e2fc
1004e2a1:	sub    eax,0x41
1004e2a4:	je     0x1004e2b6
1004e2a6:	dec    eax
1004e2a7:	dec    eax
1004e2a8:	je     0x1004e2eb
1004e2aa:	dec    eax
1004e2ab:	dec    eax
1004e2ac:	je     0x1004e2b6
1004e2ae:	dec    eax
1004e2af:	dec    eax
1004e2b0:	jne    0x1004e702
1004e2b6:	add    dl,0x20
1004e2b9:	mov    DWORD PTR [ebp-0x74],0x1
1004e2c0:	mov    BYTE PTR [ebp-0x19],dl
1004e2c3:	or     DWORD PTR [ebp-0x18],0x40
1004e2c7:	cmp    DWORD PTR [ebp-0x20],0x0
1004e2cb:	lea    ebx,[ebp-0x14]
1004e2ce:	mov    eax,0x200
1004e2d3:	mov    DWORD PTR [ebp-0x24],ebx
1004e2d6:	mov    DWORD PTR [ebp-0x6c],eax
1004e2d9:	jge    0x1004e4a3
1004e2df:	mov    DWORD PTR [ebp-0x20],0x6
1004e2e6:	jmp    0x1004e4f2
1004e2eb:	test   WORD PTR [ebp-0x18],0x830
1004e2f1:	jne    0x1004e368
1004e2f3:	or     DWORD PTR [ebp-0x18],0x800
1004e2fa:	jmp    0x1004e368
1004e2fc:	test   WORD PTR [ebp-0x18],0x830
1004e302:	jne    0x1004e30b
1004e304:	or     DWORD PTR [ebp-0x18],0x800
1004e30b:	mov    ecx,DWORD PTR [ebp-0x20]
1004e30e:	cmp    ecx,0xffffffff
1004e311:	jne    0x1004e318
1004e313:	mov    ecx,0x7fffffff
1004e318:	add    edi,0x4
1004e31b:	test   WORD PTR [ebp-0x18],0x810
1004e321:	mov    DWORD PTR [ebp-0x2c],edi
1004e324:	mov    edi,DWORD PTR [edi-0x4]
1004e327:	mov    DWORD PTR [ebp-0x24],edi
1004e32a:	je     0x1004e6e0
1004e330:	test   edi,edi
1004e332:	jne    0x1004e33c
1004e334:	mov    eax,ds:0x1007ed2c
1004e339:	mov    DWORD PTR [ebp-0x24],eax
1004e33c:	mov    eax,DWORD PTR [ebp-0x24]
1004e33f:	mov    DWORD PTR [ebp-0x44],0x1
1004e346:	jmp    0x1004e6d5
1004e34b:	sub    eax,0x58
1004e34e:	je     0x1004e588
1004e354:	dec    eax
1004e355:	dec    eax
1004e356:	je     0x1004e3b5
1004e358:	sub    eax,ecx
1004e35a:	je     0x1004e2c3
1004e360:	dec    eax
1004e361:	dec    eax
1004e362:	jne    0x1004e702
1004e368:	add    edi,0x4
1004e36b:	test   WORD PTR [ebp-0x18],0x810
1004e371:	mov    DWORD PTR [ebp-0x2c],edi
1004e374:	je     0x1004e39d
1004e376:	movzx  eax,WORD PTR [edi-0x4]
1004e37a:	push   eax
1004e37b:	push   0x200
1004e380:	lea    eax,[ebp-0x14]
1004e383:	push   eax
1004e384:	lea    eax,[ebp-0x28]
1004e387:	push   eax
1004e388:	call   0x100501e8
1004e38d:	add    esp,0x10
1004e390:	test   eax,eax
1004e392:	je     0x1004e3aa
1004e394:	mov    DWORD PTR [ebp-0x68],0x1
1004e39b:	jmp    0x1004e3aa
1004e39d:	mov    al,BYTE PTR [edi-0x4]
1004e3a0:	mov    BYTE PTR [ebp-0x14],al
1004e3a3:	mov    DWORD PTR [ebp-0x28],0x1
1004e3aa:	lea    eax,[ebp-0x14]
1004e3ad:	mov    DWORD PTR [ebp-0x24],eax
1004e3b0:	jmp    0x1004e702
1004e3b5:	mov    eax,DWORD PTR [edi]
1004e3b7:	add    edi,0x4
1004e3ba:	test   eax,eax
1004e3bc:	mov    DWORD PTR [ebp-0x2c],edi
1004e3bf:	je     0x1004e3f0
1004e3c1:	mov    ecx,DWORD PTR [eax+0x4]
1004e3c4:	test   ecx,ecx
1004e3c6:	je     0x1004e3f0
1004e3c8:	test   WORD PTR [ebp-0x18],0x800
1004e3ce:	movsx  eax,WORD PTR [eax]
1004e3d1:	mov    DWORD PTR [ebp-0x24],ecx
1004e3d4:	je     0x1004e3e7
1004e3d6:	cdq    
1004e3d7:	sub    eax,edx
1004e3d9:	sar    eax,1
1004e3db:	mov    DWORD PTR [ebp-0x44],0x1
1004e3e2:	jmp    0x1004e6ff
1004e3e7:	and    DWORD PTR [ebp-0x44],0x0
1004e3eb:	jmp    0x1004e6ff
1004e3f0:	mov    eax,ds:0x1007ed28
1004e3f5:	mov    DWORD PTR [ebp-0x24],eax
1004e3f8:	push   eax
1004e3f9:	call   0x10043010
1004e3fe:	pop    ecx
1004e3ff:	jmp    0x1004e6ff
1004e404:	cmp    eax,0x70
1004e407:	jg     0x1004e58d
1004e40d:	je     0x1004e585
1004e413:	cmp    eax,0x65
1004e416:	jl     0x1004e702
1004e41c:	cmp    eax,0x67
1004e41f:	jle    0x1004e2c3
1004e425:	cmp    eax,0x69
1004e428:	je     0x1004e47f
1004e42a:	cmp    eax,0x6e
1004e42d:	je     0x1004e44a
1004e42f:	cmp    eax,0x6f
1004e432:	jne    0x1004e702
1004e438:	test   BYTE PTR [ebp-0x18],0x80
1004e43c:	mov    DWORD PTR [ebp-0x28],esi
1004e43f:	je     0x1004e48a
1004e441:	or     DWORD PTR [ebp-0x18],0x200
1004e448:	jmp    0x1004e48a
1004e44a:	mov    esi,DWORD PTR [edi]
1004e44c:	add    edi,0x4
1004e44f:	mov    DWORD PTR [ebp-0x2c],edi
1004e452:	call   0x1004dd59
1004e457:	test   eax,eax
1004e459:	je     0x1004e830
1004e45f:	test   BYTE PTR [ebp-0x18],0x20
1004e463:	je     0x1004e46e
1004e465:	mov    ax,WORD PTR [ebp-0x34]
1004e469:	mov    WORD PTR [esi],ax
1004e46c:	jmp    0x1004e473
1004e46e:	mov    eax,DWORD PTR [ebp-0x34]
1004e471:	mov    DWORD PTR [esi],eax
1004e473:	mov    DWORD PTR [ebp-0x68],0x1
1004e47a:	jmp    0x1004e807
1004e47f:	or     DWORD PTR [ebp-0x18],0x40
1004e483:	mov    DWORD PTR [ebp-0x28],0xa
1004e48a:	mov    ecx,DWORD PTR [ebp-0x18]
1004e48d:	test   cx,cx
1004e490:	jns    0x1004e5d7
1004e496:	add    edi,esi
1004e498:	mov    eax,DWORD PTR [edi-0x8]
1004e49b:	mov    edx,DWORD PTR [edi-0x4]
1004e49e:	jmp    0x1004e60c
1004e4a3:	jne    0x1004e4b3
1004e4a5:	cmp    dl,0x67
1004e4a8:	jne    0x1004e4f2
1004e4aa:	mov    DWORD PTR [ebp-0x20],0x1
1004e4b1:	jmp    0x1004e4f2
1004e4b3:	cmp    DWORD PTR [ebp-0x20],eax
1004e4b6:	jle    0x1004e4bb
1004e4b8:	mov    DWORD PTR [ebp-0x20],eax
1004e4bb:	cmp    DWORD PTR [ebp-0x20],0xa3
1004e4c2:	jle    0x1004e4f2
1004e4c4:	mov    esi,DWORD PTR [ebp-0x20]
1004e4c7:	add    esi,0x15d
1004e4cd:	push   esi
1004e4ce:	call   0x10047422
1004e4d3:	test   eax,eax
1004e4d5:	mov    dl,BYTE PTR [ebp-0x19]
1004e4d8:	pop    ecx
1004e4d9:	mov    DWORD PTR [ebp-0x60],eax
1004e4dc:	push   0x8
1004e4de:	je     0x1004e4ea
1004e4e0:	mov    DWORD PTR [ebp-0x24],eax
1004e4e3:	mov    DWORD PTR [ebp-0x6c],esi
1004e4e6:	mov    ebx,eax
1004e4e8:	jmp    0x1004e4f1
1004e4ea:	mov    DWORD PTR [ebp-0x20],0xa3
1004e4f1:	pop    esi
1004e4f2:	add    edi,esi
1004e4f4:	mov    eax,DWORD PTR [edi-0x8]
1004e4f7:	mov    DWORD PTR [ebp-0x80],eax
1004e4fa:	mov    eax,DWORD PTR [edi-0x4]
1004e4fd:	mov    DWORD PTR [ebp-0x7c],eax
1004e500:	lea    eax,[ebp-0x5c]
1004e503:	push   eax
1004e504:	push   DWORD PTR [ebp-0x74]
1004e507:	movsx  eax,dl
1004e50a:	push   DWORD PTR [ebp-0x20]
1004e50d:	mov    DWORD PTR [ebp-0x2c],edi
1004e510:	push   eax
1004e511:	push   DWORD PTR [ebp-0x6c]
1004e514:	lea    eax,[ebp-0x80]
1004e517:	push   ebx
1004e518:	push   eax
1004e519:	push   DWORD PTR ds:0x1007ea98
1004e51f:	call   0x10046ef2
1004e524:	pop    ecx
1004e525:	call   eax
1004e527:	mov    edi,DWORD PTR [ebp-0x18]
1004e52a:	add    esp,0x1c
1004e52d:	and    edi,0x80
1004e533:	je     0x1004e550
1004e535:	cmp    DWORD PTR [ebp-0x20],0x0
1004e539:	jne    0x1004e550
1004e53b:	lea    eax,[ebp-0x5c]
1004e53e:	push   eax
1004e53f:	push   ebx
1004e540:	push   DWORD PTR ds:0x1007eaa4
1004e546:	call   0x10046ef2
1004e54b:	pop    ecx
1004e54c:	call   eax
1004e54e:	pop    ecx
1004e54f:	pop    ecx
1004e550:	cmp    BYTE PTR [ebp-0x19],0x67
1004e554:	jne    0x1004e56f
1004e556:	test   edi,edi
1004e558:	jne    0x1004e56f
1004e55a:	lea    eax,[ebp-0x5c]
1004e55d:	push   eax
1004e55e:	push   ebx
1004e55f:	push   DWORD PTR ds:0x1007eaa0
1004e565:	call   0x10046ef2
1004e56a:	pop    ecx
1004e56b:	call   eax
1004e56d:	pop    ecx
1004e56e:	pop    ecx
1004e56f:	cmp    BYTE PTR [ebx],0x2d
1004e572:	jne    0x1004e57f
1004e574:	or     DWORD PTR [ebp-0x18],0x100
1004e57b:	inc    ebx
1004e57c:	mov    DWORD PTR [ebp-0x24],ebx
1004e57f:	push   ebx
1004e580:	jmp    0x1004e3f9
1004e585:	mov    DWORD PTR [ebp-0x20],esi
1004e588:	mov    DWORD PTR [ebp-0x64],ecx
1004e58b:	jmp    0x1004e5ae
1004e58d:	sub    eax,0x73
1004e590:	je     0x1004e30b
1004e596:	dec    eax
1004e597:	dec    eax
1004e598:	je     0x1004e483
1004e59e:	sub    eax,0x3
1004e5a1:	jne    0x1004e702
1004e5a7:	mov    DWORD PTR [ebp-0x64],0x27
1004e5ae:	test   BYTE PTR [ebp-0x18],0x80
1004e5b2:	mov    DWORD PTR [ebp-0x28],0x10
1004e5b9:	je     0x1004e48a
1004e5bf:	mov    al,BYTE PTR [ebp-0x64]
1004e5c2:	add    al,0x51
1004e5c4:	mov    BYTE PTR [ebp-0x38],0x30
1004e5c8:	mov    BYTE PTR [ebp-0x37],al
1004e5cb:	mov    DWORD PTR [ebp-0x3c],0x2
1004e5d2:	jmp    0x1004e48a
1004e5d7:	test   cx,0x1000
1004e5dc:	jne    0x1004e496
1004e5e2:	add    edi,0x4
1004e5e5:	test   cl,0x20
1004e5e8:	je     0x1004e5ff
1004e5ea:	test   cl,0x40
1004e5ed:	mov    DWORD PTR [ebp-0x2c],edi
1004e5f0:	je     0x1004e5f8
1004e5f2:	movsx  eax,WORD PTR [edi-0x4]
1004e5f6:	jmp    0x1004e5fc
1004e5f8:	movzx  eax,WORD PTR [edi-0x4]
1004e5fc:	cdq    
1004e5fd:	jmp    0x1004e60f
1004e5ff:	test   cl,0x40
1004e602:	mov    eax,DWORD PTR [edi-0x4]
1004e605:	je     0x1004e60a
1004e607:	cdq    
1004e608:	jmp    0x1004e60c
1004e60a:	xor    edx,edx
1004e60c:	mov    DWORD PTR [ebp-0x2c],edi
1004e60f:	test   cl,0x40
1004e612:	je     0x1004e62c
1004e614:	test   edx,edx
1004e616:	jg     0x1004e62c
1004e618:	jl     0x1004e61e
1004e61a:	test   eax,eax
1004e61c:	jae    0x1004e62c
1004e61e:	neg    eax
1004e620:	adc    edx,0x0
1004e623:	neg    edx
1004e625:	or     DWORD PTR [ebp-0x18],0x100
1004e62c:	test   WORD PTR [ebp-0x18],0x9000
1004e632:	mov    ebx,edx
1004e634:	mov    edi,eax
1004e636:	jne    0x1004e63a
1004e638:	xor    ebx,ebx
1004e63a:	cmp    DWORD PTR [ebp-0x20],0x0
1004e63e:	jge    0x1004e649
1004e640:	mov    DWORD PTR [ebp-0x20],0x1
1004e647:	jmp    0x1004e65a
1004e649:	and    DWORD PTR [ebp-0x18],0xfffffff7
1004e64d:	mov    eax,0x200
1004e652:	cmp    DWORD PTR [ebp-0x20],eax
1004e655:	jle    0x1004e65a
1004e657:	mov    DWORD PTR [ebp-0x20],eax
1004e65a:	mov    eax,edi
1004e65c:	or     eax,ebx
1004e65e:	jne    0x1004e664
1004e660:	and    DWORD PTR [ebp-0x3c],0x0
1004e664:	lea    esi,[ebp+0x1eb]
1004e66a:	mov    eax,DWORD PTR [ebp-0x20]
1004e66d:	dec    DWORD PTR [ebp-0x20]
1004e670:	test   eax,eax
1004e672:	jg     0x1004e67a
1004e674:	mov    eax,edi
1004e676:	or     eax,ebx
1004e678:	je     0x1004e69e
1004e67a:	mov    eax,DWORD PTR [ebp-0x28]
1004e67d:	cdq    
1004e67e:	push   edx
1004e67f:	push   eax
1004e680:	push   ebx
1004e681:	push   edi
1004e682:	call   0x1004a9f0
1004e687:	add    ecx,0x30
1004e68a:	cmp    ecx,0x39
1004e68d:	mov    DWORD PTR [ebp-0x6c],ebx
1004e690:	mov    edi,eax
1004e692:	mov    ebx,edx
1004e694:	jle    0x1004e699
1004e696:	add    ecx,DWORD PTR [ebp-0x64]
1004e699:	mov    BYTE PTR [esi],cl
1004e69b:	dec    esi
1004e69c:	jmp    0x1004e66a
1004e69e:	lea    eax,[ebp+0x1eb]
1004e6a4:	sub    eax,esi
1004e6a6:	inc    esi
1004e6a7:	test   WORD PTR [ebp-0x18],0x200
1004e6ad:	mov    DWORD PTR [ebp-0x28],eax
1004e6b0:	mov    DWORD PTR [ebp-0x24],esi
1004e6b3:	je     0x1004e702
1004e6b5:	test   eax,eax
1004e6b7:	je     0x1004e6c0
1004e6b9:	mov    ecx,esi
1004e6bb:	cmp    BYTE PTR [ecx],0x30
1004e6be:	je     0x1004e702
1004e6c0:	dec    DWORD PTR [ebp-0x24]
1004e6c3:	mov    ecx,DWORD PTR [ebp-0x24]
1004e6c6:	mov    BYTE PTR [ecx],0x30
1004e6c9:	inc    eax
1004e6ca:	jmp    0x1004e6ff
1004e6cc:	dec    ecx
1004e6cd:	cmp    WORD PTR [eax],0x0
1004e6d1:	je     0x1004e6d9
1004e6d3:	inc    eax
1004e6d4:	inc    eax
1004e6d5:	test   ecx,ecx
1004e6d7:	jne    0x1004e6cc
1004e6d9:	sub    eax,DWORD PTR [ebp-0x24]
1004e6dc:	sar    eax,1
1004e6de:	jmp    0x1004e6ff
1004e6e0:	test   edi,edi
1004e6e2:	jne    0x1004e6ec
1004e6e4:	mov    eax,ds:0x1007ed28
1004e6e9:	mov    DWORD PTR [ebp-0x24],eax
1004e6ec:	mov    eax,DWORD PTR [ebp-0x24]
1004e6ef:	jmp    0x1004e6f8
1004e6f1:	dec    ecx
1004e6f2:	cmp    BYTE PTR [eax],0x0
1004e6f5:	je     0x1004e6fc
1004e6f7:	inc    eax
1004e6f8:	test   ecx,ecx
1004e6fa:	jne    0x1004e6f1
1004e6fc:	sub    eax,DWORD PTR [ebp-0x24]
1004e6ff:	mov    DWORD PTR [ebp-0x28],eax
1004e702:	cmp    DWORD PTR [ebp-0x68],0x0
1004e706:	jne    0x1004e807
1004e70c:	mov    eax,DWORD PTR [ebp-0x18]
1004e70f:	test   al,0x40
1004e711:	je     0x1004e738
1004e713:	test   ax,0x100
1004e717:	je     0x1004e71f
1004e719:	mov    BYTE PTR [ebp-0x38],0x2d
1004e71d:	jmp    0x1004e731
1004e71f:	test   al,0x1
1004e721:	je     0x1004e729
1004e723:	mov    BYTE PTR [ebp-0x38],0x2b
1004e727:	jmp    0x1004e731
1004e729:	test   al,0x2
1004e72b:	je     0x1004e738
1004e72d:	mov    BYTE PTR [ebp-0x38],0x20
1004e731:	mov    DWORD PTR [ebp-0x3c],0x1
1004e738:	mov    ebx,DWORD PTR [ebp-0x40]
1004e73b:	sub    ebx,DWORD PTR [ebp-0x28]
1004e73e:	sub    ebx,DWORD PTR [ebp-0x3c]
1004e741:	test   BYTE PTR [ebp-0x18],0xc
1004e745:	jne    0x1004e758
1004e747:	push   DWORD PTR [ebp-0x30]
1004e74a:	lea    eax,[ebp-0x34]
1004e74d:	push   ebx
1004e74e:	push   0x20
1004e750:	call   0x1004decc
1004e755:	add    esp,0xc
1004e758:	push   DWORD PTR [ebp-0x3c]
1004e75b:	mov    edi,DWORD PTR [ebp-0x30]
1004e75e:	lea    eax,[ebp-0x34]
1004e761:	lea    ecx,[ebp-0x38]
1004e764:	call   0x1004d377
1004e769:	test   BYTE PTR [ebp-0x18],0x8
1004e76d:	pop    ecx
1004e76e:	je     0x1004e785
1004e770:	test   BYTE PTR [ebp-0x18],0x4
1004e774:	jne    0x1004e785
1004e776:	push   edi
1004e777:	push   ebx
1004e778:	push   0x30
1004e77a:	lea    eax,[ebp-0x34]
1004e77d:	call   0x1004decc
1004e782:	add    esp,0xc
1004e785:	cmp    DWORD PTR [ebp-0x44],0x0
1004e789:	mov    eax,DWORD PTR [ebp-0x28]
1004e78c:	je     0x1004e7df
1004e78e:	test   eax,eax
1004e790:	jle    0x1004e7df
1004e792:	mov    esi,DWORD PTR [ebp-0x24]
1004e795:	mov    DWORD PTR [ebp-0x6c],eax
1004e798:	movzx  eax,WORD PTR [esi]
1004e79b:	dec    DWORD PTR [ebp-0x6c]
1004e79e:	push   eax
1004e79f:	push   0x6
1004e7a1:	lea    eax,[ebp+0x1ec]
1004e7a7:	push   eax
1004e7a8:	lea    eax,[ebp-0x78]
1004e7ab:	inc    esi
1004e7ac:	push   eax
1004e7ad:	inc    esi
1004e7ae:	call   0x100501e8
1004e7b3:	add    esp,0x10
1004e7b6:	test   eax,eax
1004e7b8:	jne    0x1004e7d9
1004e7ba:	cmp    DWORD PTR [ebp-0x78],eax
1004e7bd:	je     0x1004e7d9
1004e7bf:	push   DWORD PTR [ebp-0x78]
1004e7c2:	lea    eax,[ebp-0x34]
1004e7c5:	lea    ecx,[ebp+0x1ec]
1004e7cb:	call   0x1004d377
1004e7d0:	cmp    DWORD PTR [ebp-0x6c],0x0
1004e7d4:	pop    ecx
1004e7d5:	jne    0x1004e798
1004e7d7:	jmp    0x1004e7ec
1004e7d9:	or     DWORD PTR [ebp-0x34],0xffffffff
1004e7dd:	jmp    0x1004e7ec
1004e7df:	mov    ecx,DWORD PTR [ebp-0x24]
1004e7e2:	push   eax
1004e7e3:	lea    eax,[ebp-0x34]
1004e7e6:	call   0x1004d377
1004e7eb:	pop    ecx
1004e7ec:	cmp    DWORD PTR [ebp-0x34],0x0
1004e7f0:	jl     0x1004e807
1004e7f2:	test   BYTE PTR [ebp-0x18],0x4
1004e7f6:	je     0x1004e807
1004e7f8:	push   edi
1004e7f9:	push   ebx
1004e7fa:	push   0x20
1004e7fc:	lea    eax,[ebp-0x34]
1004e7ff:	call   0x1004decc
1004e804:	add    esp,0xc
1004e807:	cmp    DWORD PTR [ebp-0x60],0x0
1004e80b:	je     0x1004e81a
1004e80d:	push   DWORD PTR [ebp-0x60]
1004e810:	call   0x10043508
1004e815:	and    DWORD PTR [ebp-0x60],0x0
1004e819:	pop    ecx
1004e81a:	mov    ebx,DWORD PTR [ebp-0x4c]
1004e81d:	mov    al,BYTE PTR [ebx]
1004e81f:	test   al,al
1004e821:	mov    BYTE PTR [ebp-0x19],al
1004e824:	je     0x1004e847
1004e826:	mov    edi,DWORD PTR [ebp-0x2c]
1004e829:	mov    dl,al
1004e82b:	jmp    0x1004e04f
1004e830:	call   0x10046b55
1004e835:	mov    DWORD PTR [eax],0x16
1004e83b:	xor    eax,eax
1004e83d:	push   eax
1004e83e:	push   eax
1004e83f:	push   eax
1004e840:	push   eax
1004e841:	push   eax
1004e842:	jmp    0x1004df60
1004e847:	xor    esi,esi
1004e849:	cmp    DWORD PTR [ebp-0x48],esi
1004e84c:	je     0x1004e858
1004e84e:	cmp    DWORD PTR [ebp-0x48],0x7
1004e852:	jne    0x1004df50
1004e858:	cmp    BYTE PTR [ebp-0x50],0x0
1004e85c:	je     0x1004e865
1004e85e:	mov    eax,DWORD PTR [ebp-0x54]
1004e861:	and    DWORD PTR [eax+0x70],0xfffffffd
1004e865:	mov    eax,DWORD PTR [ebp-0x34]
1004e868:	mov    ecx,DWORD PTR [ebp+0x1f4]
1004e86e:	pop    edi
1004e86f:	pop    esi
1004e870:	xor    ecx,ebp
1004e872:	pop    ebx
1004e873:	call   0x10042e97
1004e878:	add    ebp,0x1f8
1004e87e:	leave  
1004e87f:	ret    
1004e880:	inc    ecx
1004e881:	loop   0x1004e887
1004e883:	adc    BYTE PTR [esi-0x3ceffb20],ah
1004e889:	loopne 0x1004e88f
1004e88b:	adc    BYTE PTR [eax],dl
1004e88d:	loope  0x1004e893
1004e88f:	adc    BYTE PTR [edx-0x1f],cl
1004e892:	add    al,0x10
1004e894:	push   ebx
1004e895:	loope  0x1004e89b
1004e897:	adc    BYTE PTR [edx-0x7beffb1f],cl
1004e89d:	loop   0x1004e8a3
1004e89f:	adc    BYTE PTR [ebp-0x75],dl
1004e8a2:	in     al,dx
1004e8a3:	sub    esp,0x20
1004e8a6:	push   ebx
1004e8a7:	push   esi
1004e8a8:	push   edi
1004e8a9:	call   0x10046ee9
1004e8ae:	xor    ebx,ebx
1004e8b0:	cmp    DWORD PTR ds:0x10080474,ebx
1004e8b6:	mov    DWORD PTR [ebp-0x10],eax
1004e8b9:	mov    DWORD PTR [ebp-0x4],ebx
1004e8bc:	mov    DWORD PTR [ebp-0x8],ebx
1004e8bf:	mov    DWORD PTR [ebp-0xc],ebx
1004e8c2:	jne    0x1004e975
1004e8c8:	push   0x10067538
1004e8cd:	call   DWORD PTR ds:0x10066220
1004e8d3:	mov    edi,eax
1004e8d5:	cmp    edi,ebx
1004e8d7:	jne    0x1004e8e0
1004e8d9:	xor    eax,eax
1004e8db:	jmp    0x1004ea39
1004e8e0:	mov    esi,DWORD PTR ds:0x1006612c
1004e8e6:	push   0x1006752c
1004e8eb:	push   edi
1004e8ec:	call   esi
1004e8ee:	cmp    eax,ebx
1004e8f0:	je     0x1004e8d9
1004e8f2:	push   eax
1004e8f3:	call   0x10046e86
1004e8f8:	mov    DWORD PTR [esp],0x1006751c
1004e8ff:	push   edi
1004e900:	mov    ds:0x10080474,eax
1004e905:	call   esi
1004e907:	push   eax
1004e908:	call   0x10046e86
1004e90d:	mov    DWORD PTR [esp],0x10067508
1004e914:	push   edi
1004e915:	mov    ds:0x10080478,eax
1004e91a:	call   esi
1004e91c:	push   eax
1004e91d:	call   0x10046e86
1004e922:	mov    ds:0x1008047c,eax
1004e927:	lea    eax,[ebp-0x8]
1004e92a:	push   eax
1004e92b:	call   0x10047641
1004e930:	test   eax,eax
1004e932:	pop    ecx
1004e933:	pop    ecx
1004e934:	je     0x1004e943
1004e936:	push   ebx
1004e937:	push   ebx
1004e938:	push   ebx
1004e939:	push   ebx
1004e93a:	push   ebx
1004e93b:	call   0x10043290
1004e940:	add    esp,0x14
1004e943:	cmp    DWORD PTR [ebp-0x8],0x2
1004e947:	jne    0x1004e975
1004e949:	push   0x100674ec
1004e94e:	push   edi
1004e94f:	call   esi
1004e951:	push   eax
1004e952:	call   0x10046e86
1004e957:	cmp    eax,ebx
1004e959:	pop    ecx
1004e95a:	mov    ds:0x10080484,eax
1004e95f:	je     0x1004e975
1004e961:	push   0x100674d4
1004e966:	push   edi
1004e967:	call   esi
1004e969:	push   eax
1004e96a:	call   0x10046e86
1004e96f:	pop    ecx
1004e970:	mov    ds:0x10080480,eax
1004e975:	mov    eax,ds:0x10080480
1004e97a:	mov    esi,DWORD PTR [ebp-0x10]
1004e97d:	cmp    eax,esi
1004e97f:	je     0x1004e9ee
1004e981:	cmp    DWORD PTR ds:0x10080484,esi
1004e987:	je     0x1004e9ee
1004e989:	push   eax
1004e98a:	call   0x10046ef2
1004e98f:	pop    ecx
1004e990:	call   eax
1004e992:	cmp    eax,ebx
1004e994:	je     0x1004e9bb
1004e996:	lea    ecx,[ebp-0x14]
1004e999:	push   ecx
1004e99a:	push   0xc
1004e99c:	lea    ecx,[ebp-0x20]
1004e99f:	push   ecx
1004e9a0:	push   0x1
1004e9a2:	push   eax
1004e9a3:	push   DWORD PTR ds:0x10080484
1004e9a9:	call   0x10046ef2
1004e9ae:	pop    ecx
1004e9af:	call   eax
1004e9b1:	test   eax,eax
1004e9b3:	je     0x1004e9bb
1004e9b5:	test   BYTE PTR [ebp-0x18],0x1
1004e9b9:	jne    0x1004e9ee
1004e9bb:	lea    eax,[ebp-0xc]
1004e9be:	push   eax
1004e9bf:	call   0x10047678
1004e9c4:	test   eax,eax
1004e9c6:	pop    ecx
1004e9c7:	je     0x1004e9d6
1004e9c9:	push   ebx
1004e9ca:	push   ebx
1004e9cb:	push   ebx
1004e9cc:	push   ebx
1004e9cd:	push   ebx
1004e9ce:	call   0x10043290
1004e9d3:	add    esp,0x14
1004e9d6:	cmp    DWORD PTR [ebp-0xc],0x4
1004e9da:	jb     0x1004e9e5
1004e9dc:	or     DWORD PTR [ebp+0x10],0x200000
1004e9e3:	jmp    0x1004ea1f
1004e9e5:	or     DWORD PTR [ebp+0x10],0x40000
1004e9ec:	jmp    0x1004ea1f
1004e9ee:	mov    eax,ds:0x10080478
1004e9f3:	cmp    eax,esi
1004e9f5:	je     0x1004ea1f
1004e9f7:	push   eax
1004e9f8:	call   0x10046ef2
1004e9fd:	pop    ecx
1004e9fe:	call   eax
1004ea00:	cmp    eax,ebx
1004ea02:	mov    DWORD PTR [ebp-0x4],eax
1004ea05:	je     0x1004ea1f
1004ea07:	mov    eax,ds:0x1008047c
1004ea0c:	cmp    eax,esi
1004ea0e:	je     0x1004ea1f
1004ea10:	push   DWORD PTR [ebp-0x4]
1004ea13:	push   eax
1004ea14:	call   0x10046ef2
1004ea19:	pop    ecx
1004ea1a:	call   eax
1004ea1c:	mov    DWORD PTR [ebp-0x4],eax
1004ea1f:	push   DWORD PTR [ebp+0x10]
1004ea22:	push   DWORD PTR [ebp+0xc]
1004ea25:	push   DWORD PTR [ebp+0x8]
1004ea28:	push   DWORD PTR [ebp-0x4]
1004ea2b:	push   DWORD PTR ds:0x10080474
1004ea31:	call   0x10046ef2
1004ea36:	pop    ecx
1004ea37:	call   eax
1004ea39:	pop    edi
1004ea3a:	pop    esi
1004ea3b:	pop    ebx
1004ea3c:	leave  
1004ea3d:	ret    
1004ea3e:	mov    eax,DWORD PTR [esp+0x4]
1004ea42:	push   ebx
1004ea43:	xor    ebx,ebx
1004ea45:	cmp    eax,ebx
1004ea47:	push   esi
1004ea48:	push   edi
1004ea49:	je     0x1004ea53
1004ea4b:	mov    edi,DWORD PTR [esp+0x14]
1004ea4f:	cmp    edi,ebx
1004ea51:	ja     0x1004ea6e
1004ea53:	call   0x10046b55
1004ea58:	push   0x16
1004ea5a:	pop    esi
1004ea5b:	mov    DWORD PTR [eax],esi
1004ea5d:	push   ebx
1004ea5e:	push   ebx
1004ea5f:	push   ebx
1004ea60:	push   ebx
1004ea61:	push   ebx
1004ea62:	call   0x1004338c
1004ea67:	add    esp,0x14
1004ea6a:	mov    eax,esi
1004ea6c:	jmp    0x1004eaab
1004ea6e:	mov    esi,DWORD PTR [esp+0x18]
1004ea72:	cmp    esi,ebx
1004ea74:	jne    0x1004ea7a
1004ea76:	mov    BYTE PTR [eax],bl
1004ea78:	jmp    0x1004ea53
1004ea7a:	mov    edx,eax
1004ea7c:	cmp    BYTE PTR [edx],bl
1004ea7e:	je     0x1004ea84
1004ea80:	inc    edx
1004ea81:	dec    edi
1004ea82:	jne    0x1004ea7c
1004ea84:	cmp    edi,ebx
1004ea86:	je     0x1004ea76
1004ea88:	mov    cl,BYTE PTR [esi]
1004ea8a:	mov    BYTE PTR [edx],cl
1004ea8c:	inc    edx
1004ea8d:	inc    esi
1004ea8e:	cmp    cl,bl
1004ea90:	je     0x1004ea95
1004ea92:	dec    edi
1004ea93:	jne    0x1004ea88
1004ea95:	cmp    edi,ebx
1004ea97:	jne    0x1004eaa9
1004ea99:	mov    BYTE PTR [eax],bl
1004ea9b:	call   0x10046b55
1004eaa0:	push   0x22
1004eaa2:	pop    ecx
1004eaa3:	mov    DWORD PTR [eax],ecx
1004eaa5:	mov    esi,ecx
1004eaa7:	jmp    0x1004ea5d
1004eaa9:	xor    eax,eax
1004eaab:	pop    edi
1004eaac:	pop    esi
1004eaad:	pop    ebx
1004eaae:	ret    
1004eaaf:	push   ebp
1004eab0:	mov    ebp,esp
1004eab2:	push   ebx
1004eab3:	push   esi
1004eab4:	mov    esi,DWORD PTR [ebp+0x8]
1004eab7:	xor    ebx,ebx
1004eab9:	cmp    DWORD PTR [ebp+0x14],ebx
1004eabc:	push   edi
1004eabd:	jne    0x1004eacf
1004eabf:	cmp    esi,ebx
1004eac1:	jne    0x1004ead3
1004eac3:	cmp    DWORD PTR [ebp+0xc],ebx
1004eac6:	jne    0x1004eada
1004eac8:	xor    eax,eax
1004eaca:	pop    edi
1004eacb:	pop    esi
1004eacc:	pop    ebx
1004eacd:	pop    ebp
1004eace:	ret    
1004eacf:	cmp    esi,ebx
1004ead1:	je     0x1004eada
1004ead3:	mov    edi,DWORD PTR [ebp+0xc]
1004ead6:	cmp    edi,ebx
1004ead8:	ja     0x1004eaf5
1004eada:	call   0x10046b55
1004eadf:	push   0x16
1004eae1:	pop    esi
1004eae2:	mov    DWORD PTR [eax],esi
1004eae4:	push   ebx
1004eae5:	push   ebx
1004eae6:	push   ebx
1004eae7:	push   ebx
1004eae8:	push   ebx
1004eae9:	call   0x1004338c
1004eaee:	add    esp,0x14
1004eaf1:	mov    eax,esi
1004eaf3:	jmp    0x1004eaca
1004eaf5:	cmp    DWORD PTR [ebp+0x14],ebx
1004eaf8:	jne    0x1004eafe
1004eafa:	mov    BYTE PTR [esi],bl
1004eafc:	jmp    0x1004eac8
1004eafe:	mov    edx,DWORD PTR [ebp+0x10]
1004eb01:	cmp    edx,ebx
1004eb03:	jne    0x1004eb09
1004eb05:	mov    BYTE PTR [esi],bl
1004eb07:	jmp    0x1004eada
1004eb09:	cmp    DWORD PTR [ebp+0x14],0xffffffff
1004eb0d:	mov    eax,esi
1004eb0f:	jne    0x1004eb20
1004eb11:	mov    cl,BYTE PTR [edx]
1004eb13:	mov    BYTE PTR [eax],cl
1004eb15:	inc    eax
1004eb16:	inc    edx
1004eb17:	cmp    cl,bl
1004eb19:	je     0x1004eb39
1004eb1b:	dec    edi
1004eb1c:	jne    0x1004eb11
1004eb1e:	jmp    0x1004eb39
1004eb20:	mov    cl,BYTE PTR [edx]
1004eb22:	mov    BYTE PTR [eax],cl
1004eb24:	inc    eax
1004eb25:	inc    edx
1004eb26:	cmp    cl,bl
1004eb28:	je     0x1004eb32
1004eb2a:	dec    edi
1004eb2b:	je     0x1004eb32
1004eb2d:	dec    DWORD PTR [ebp+0x14]
1004eb30:	jne    0x1004eb20
1004eb32:	cmp    DWORD PTR [ebp+0x14],ebx
1004eb35:	jne    0x1004eb39
1004eb37:	mov    BYTE PTR [eax],bl
1004eb39:	cmp    edi,ebx
1004eb3b:	jne    0x1004eac8
1004eb3d:	cmp    DWORD PTR [ebp+0x14],0xffffffff
1004eb41:	jne    0x1004eb52
1004eb43:	mov    eax,DWORD PTR [ebp+0xc]
1004eb46:	push   0x50
1004eb48:	mov    BYTE PTR [esi+eax*1-0x1],bl
1004eb4c:	pop    eax
1004eb4d:	jmp    0x1004eaca
1004eb52:	mov    BYTE PTR [esi],bl
1004eb54:	call   0x10046b55
1004eb59:	push   0x22
1004eb5b:	pop    ecx
1004eb5c:	mov    DWORD PTR [eax],ecx
1004eb5e:	mov    esi,ecx
1004eb60:	jmp    0x1004eae4
1004eb62:	mov    ecx,DWORD PTR [esp+0x4]
1004eb66:	push   esi
1004eb67:	xor    esi,esi
1004eb69:	cmp    ecx,esi
1004eb6b:	jl     0x1004eb8b
1004eb6d:	cmp    ecx,0x2
1004eb70:	jle    0x1004eb7e
1004eb72:	cmp    ecx,0x3
1004eb75:	jne    0x1004eb8b
1004eb77:	mov    eax,ds:0x1007faa0
1004eb7c:	pop    esi
1004eb7d:	ret    
1004eb7e:	mov    eax,ds:0x1007faa0
1004eb83:	mov    DWORD PTR ds:0x1007faa0,ecx
1004eb89:	pop    esi
1004eb8a:	ret    
1004eb8b:	call   0x10046b55
1004eb90:	push   esi
1004eb91:	push   esi
1004eb92:	push   esi
1004eb93:	push   esi
1004eb94:	push   esi
1004eb95:	mov    DWORD PTR [eax],0x16
1004eb9b:	call   0x1004338c
1004eba0:	add    esp,0x14
1004eba3:	or     eax,0xffffffff
1004eba6:	pop    esi
1004eba7:	ret    
1004eba8:	push   0xc
1004ebaa:	push   0x10074868
1004ebaf:	call   0x10046c94
1004ebb4:	and    DWORD PTR [ebp-0x4],0x0
1004ebb8:	movapd xmm0,xmm1
1004ebbc:	mov    DWORD PTR [ebp-0x1c],0x1
1004ebc3:	jmp    0x1004ebe8
1004ebc5:	mov    eax,DWORD PTR [ebp-0x14]
1004ebc8:	mov    eax,DWORD PTR [eax]
1004ebca:	mov    eax,DWORD PTR [eax]
1004ebcc:	cmp    eax,0xc0000005
1004ebd1:	je     0x1004ebdd
1004ebd3:	cmp    eax,0xc000001d
1004ebd8:	je     0x1004ebdd
1004ebda:	xor    eax,eax
1004ebdc:	ret    
1004ebdd:	xor    eax,eax
1004ebdf:	inc    eax
1004ebe0:	ret    
1004ebe1:	mov    esp,DWORD PTR [ebp-0x18]
1004ebe4:	and    DWORD PTR [ebp-0x1c],0x0
1004ebe8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004ebef:	mov    eax,DWORD PTR [ebp-0x1c]
1004ebf2:	call   0x10046cd9
1004ebf7:	ret    
1004ebf8:	push   ebp
1004ebf9:	mov    ebp,esp
1004ebfb:	sub    esp,0x18
1004ebfe:	xor    eax,eax
1004ec00:	push   ebx
1004ec01:	mov    DWORD PTR [ebp-0x4],eax
1004ec04:	mov    DWORD PTR [ebp-0xc],eax
1004ec07:	mov    DWORD PTR [ebp-0x8],eax
1004ec0a:	push   ebx
1004ec0b:	pushf  
1004ec0c:	pop    eax
1004ec0d:	mov    ecx,eax
1004ec0f:	xor    eax,0x200000
1004ec14:	push   eax
1004ec15:	popf   
1004ec16:	pushf  
1004ec17:	pop    edx
1004ec18:	sub    edx,ecx
1004ec1a:	je     0x1004ec3b
1004ec1c:	push   ecx
1004ec1d:	popf   
1004ec1e:	xor    eax,eax
1004ec20:	cpuid  
1004ec22:	mov    DWORD PTR [ebp-0xc],eax
1004ec25:	mov    DWORD PTR [ebp-0x18],ebx
1004ec28:	mov    DWORD PTR [ebp-0x14],edx
1004ec2b:	mov    DWORD PTR [ebp-0x10],ecx
1004ec2e:	mov    eax,0x1
1004ec33:	cpuid  
1004ec35:	mov    DWORD PTR [ebp-0x4],edx
1004ec38:	mov    DWORD PTR [ebp-0x8],eax
1004ec3b:	pop    ebx
1004ec3c:	test   DWORD PTR [ebp-0x4],0x4000000
1004ec43:	je     0x1004ec53
1004ec45:	call   0x1004eba8
1004ec4a:	test   eax,eax
1004ec4c:	je     0x1004ec53
1004ec4e:	xor    eax,eax
1004ec50:	inc    eax
1004ec51:	jmp    0x1004ec55
1004ec53:	xor    eax,eax
1004ec55:	pop    ebx
1004ec56:	leave  
1004ec57:	ret    
1004ec58:	call   0x1004ebf8
1004ec5d:	mov    ds:0x10082584,eax
1004ec62:	xor    eax,eax
1004ec64:	ret    
1004ec65:	push   ebp
1004ec66:	mov    ebp,esp
1004ec68:	push   ecx
1004ec69:	push   ecx
1004ec6a:	mov    eax,ds:0x1007e030
1004ec6f:	xor    eax,ebp
1004ec71:	mov    DWORD PTR [ebp-0x4],eax
1004ec74:	mov    eax,ds:0x10080488
1004ec79:	push   ebx
1004ec7a:	push   esi
1004ec7b:	xor    ebx,ebx
1004ec7d:	cmp    eax,ebx
1004ec7f:	push   edi
1004ec80:	mov    edi,ecx
1004ec82:	jne    0x1004ecbe
1004ec84:	lea    eax,[ebp-0x8]
1004ec87:	push   eax
1004ec88:	xor    esi,esi
1004ec8a:	inc    esi
1004ec8b:	push   esi
1004ec8c:	push   0x10066cc8
1004ec91:	push   esi
1004ec92:	call   DWORD PTR ds:0x10066234
1004ec98:	test   eax,eax
1004ec9a:	je     0x1004eca4
1004ec9c:	mov    DWORD PTR ds:0x10080488,esi
1004eca2:	jmp    0x1004ecd8
1004eca4:	call   DWORD PTR ds:0x100660cc
1004ecaa:	cmp    eax,0x78
1004ecad:	jne    0x1004ecb9
1004ecaf:	push   0x2
1004ecb1:	pop    eax
1004ecb2:	mov    ds:0x10080488,eax
1004ecb7:	jmp    0x1004ecbe
1004ecb9:	mov    eax,ds:0x10080488
1004ecbe:	cmp    eax,0x2
1004ecc1:	je     0x1004ed96
1004ecc7:	cmp    eax,ebx
1004ecc9:	je     0x1004ed96
1004eccf:	cmp    eax,0x1
1004ecd2:	jne    0x1004edc0
1004ecd8:	cmp    DWORD PTR [ebp+0x18],ebx
1004ecdb:	mov    DWORD PTR [ebp-0x8],ebx
1004ecde:	jne    0x1004ece8
1004ece0:	mov    eax,DWORD PTR [edi]
1004ece2:	mov    eax,DWORD PTR [eax+0x4]
1004ece5:	mov    DWORD PTR [ebp+0x18],eax
1004ece8:	mov    esi,DWORD PTR ds:0x1006608c
1004ecee:	xor    eax,eax
1004ecf0:	cmp    DWORD PTR [ebp+0x20],ebx
1004ecf3:	push   ebx
1004ecf4:	push   ebx
1004ecf5:	push   DWORD PTR [ebp+0x10]
1004ecf8:	setne  al
1004ecfb:	push   DWORD PTR [ebp+0xc]
1004ecfe:	lea    eax,[eax*8+0x1]
1004ed05:	push   eax
1004ed06:	push   DWORD PTR [ebp+0x18]
1004ed09:	call   esi
1004ed0b:	mov    edi,eax
1004ed0d:	cmp    edi,ebx
1004ed0f:	je     0x1004edc0
1004ed15:	jle    0x1004ed53
1004ed17:	cmp    edi,0x7ffffff0
1004ed1d:	ja     0x1004ed53
1004ed1f:	lea    eax,[edi+edi*1+0x8]
1004ed23:	cmp    eax,0x400
1004ed28:	ja     0x1004ed3d
1004ed2a:	call   0x1004b6f0
1004ed2f:	mov    eax,esp
1004ed31:	cmp    eax,ebx
1004ed33:	je     0x1004ed51
1004ed35:	mov    DWORD PTR [eax],0xcccc
1004ed3b:	jmp    0x1004ed4e
1004ed3d:	push   eax
1004ed3e:	call   0x10044f8d
1004ed43:	cmp    eax,ebx
1004ed45:	pop    ecx
1004ed46:	je     0x1004ed51
1004ed48:	mov    DWORD PTR [eax],0xdddd
1004ed4e:	add    eax,0x8
1004ed51:	mov    ebx,eax
1004ed53:	test   ebx,ebx
1004ed55:	je     0x1004edc0
1004ed57:	lea    eax,[edi+edi*1]
1004ed5a:	push   eax
1004ed5b:	push   0x0
1004ed5d:	push   ebx
1004ed5e:	call   0x10045c00
1004ed63:	add    esp,0xc
1004ed66:	push   edi
1004ed67:	push   ebx
1004ed68:	push   DWORD PTR [ebp+0x10]
1004ed6b:	push   DWORD PTR [ebp+0xc]
1004ed6e:	push   0x1
1004ed70:	push   DWORD PTR [ebp+0x18]
1004ed73:	call   esi
1004ed75:	test   eax,eax
1004ed77:	je     0x1004ed8a
1004ed79:	push   DWORD PTR [ebp+0x14]
1004ed7c:	push   eax
1004ed7d:	push   ebx
1004ed7e:	push   DWORD PTR [ebp+0x8]
1004ed81:	call   DWORD PTR ds:0x10066234
1004ed87:	mov    DWORD PTR [ebp-0x8],eax
1004ed8a:	push   ebx
1004ed8b:	call   0x1001b365
1004ed90:	mov    eax,DWORD PTR [ebp-0x8]
1004ed93:	pop    ecx
1004ed94:	jmp    0x1004ee0b
1004ed96:	xor    esi,esi
1004ed98:	cmp    DWORD PTR [ebp+0x1c],ebx
1004ed9b:	jne    0x1004eda5
1004ed9d:	mov    eax,DWORD PTR [edi]
1004ed9f:	mov    eax,DWORD PTR [eax+0x14]
1004eda2:	mov    DWORD PTR [ebp+0x1c],eax
1004eda5:	cmp    DWORD PTR [ebp+0x18],ebx
1004eda8:	jne    0x1004edb2
1004edaa:	mov    eax,DWORD PTR [edi]
1004edac:	mov    eax,DWORD PTR [eax+0x4]
1004edaf:	mov    DWORD PTR [ebp+0x18],eax
1004edb2:	push   DWORD PTR [ebp+0x1c]
1004edb5:	call   0x1004f434
1004edba:	cmp    eax,0xffffffff
1004edbd:	pop    ecx
1004edbe:	jne    0x1004edc4
1004edc0:	xor    eax,eax
1004edc2:	jmp    0x1004ee0b
1004edc4:	cmp    eax,DWORD PTR [ebp+0x18]
1004edc7:	je     0x1004ede7
1004edc9:	push   ebx
1004edca:	push   ebx
1004edcb:	lea    ecx,[ebp+0x10]
1004edce:	push   ecx
1004edcf:	push   DWORD PTR [ebp+0xc]
1004edd2:	push   eax
1004edd3:	push   DWORD PTR [ebp+0x18]
1004edd6:	call   0x1004f47b
1004eddb:	mov    esi,eax
1004eddd:	add    esp,0x18
1004ede0:	cmp    esi,ebx
1004ede2:	je     0x1004edc0
1004ede4:	mov    DWORD PTR [ebp+0xc],esi
1004ede7:	push   DWORD PTR [ebp+0x14]
1004edea:	push   DWORD PTR [ebp+0x10]
1004eded:	push   DWORD PTR [ebp+0xc]
1004edf0:	push   DWORD PTR [ebp+0x8]
1004edf3:	push   DWORD PTR [ebp+0x1c]
1004edf6:	call   DWORD PTR ds:0x10066230
1004edfc:	cmp    esi,ebx
1004edfe:	mov    edi,eax
1004ee00:	je     0x1004ee09
1004ee02:	push   esi
1004ee03:	call   0x10043508
1004ee08:	pop    ecx
1004ee09:	mov    eax,edi
1004ee0b:	lea    esp,[ebp-0x14]
1004ee0e:	pop    edi
1004ee0f:	pop    esi
1004ee10:	pop    ebx
1004ee11:	mov    ecx,DWORD PTR [ebp-0x4]
1004ee14:	xor    ecx,ebp
1004ee16:	call   0x10042e97
1004ee1b:	leave  
1004ee1c:	ret    
1004ee1d:	push   ebp
1004ee1e:	mov    ebp,esp
1004ee20:	sub    esp,0x10
1004ee23:	push   DWORD PTR [ebp+0x8]
1004ee26:	lea    ecx,[ebp-0x10]
1004ee29:	call   0x100454e5
1004ee2e:	push   DWORD PTR [ebp+0x24]
1004ee31:	lea    ecx,[ebp-0x10]
1004ee34:	push   DWORD PTR [ebp+0x20]
1004ee37:	push   DWORD PTR [ebp+0x1c]
1004ee3a:	push   DWORD PTR [ebp+0x18]
1004ee3d:	push   DWORD PTR [ebp+0x14]
1004ee40:	push   DWORD PTR [ebp+0x10]
1004ee43:	push   DWORD PTR [ebp+0xc]
1004ee46:	call   0x1004ec65
1004ee4b:	add    esp,0x1c
1004ee4e:	cmp    BYTE PTR [ebp-0x4],0x0
1004ee52:	je     0x1004ee5b
1004ee54:	mov    ecx,DWORD PTR [ebp-0x8]
1004ee57:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004ee5b:	leave  
1004ee5c:	ret    
1004ee5d:	push   esi
1004ee5e:	mov    esi,DWORD PTR [esp+0x8]
1004ee62:	test   esi,esi
1004ee64:	je     0x1004efeb
1004ee6a:	push   DWORD PTR [esi+0x4]
1004ee6d:	call   0x10043508
1004ee72:	push   DWORD PTR [esi+0x8]
1004ee75:	call   0x10043508
1004ee7a:	push   DWORD PTR [esi+0xc]
1004ee7d:	call   0x10043508
1004ee82:	push   DWORD PTR [esi+0x10]
1004ee85:	call   0x10043508
1004ee8a:	push   DWORD PTR [esi+0x14]
1004ee8d:	call   0x10043508
1004ee92:	push   DWORD PTR [esi+0x18]
1004ee95:	call   0x10043508
1004ee9a:	push   DWORD PTR [esi]
1004ee9c:	call   0x10043508
1004eea1:	push   DWORD PTR [esi+0x20]
1004eea4:	call   0x10043508
1004eea9:	push   DWORD PTR [esi+0x24]
1004eeac:	call   0x10043508
1004eeb1:	push   DWORD PTR [esi+0x28]
1004eeb4:	call   0x10043508
1004eeb9:	push   DWORD PTR [esi+0x2c]
1004eebc:	call   0x10043508
1004eec1:	push   DWORD PTR [esi+0x30]
1004eec4:	call   0x10043508
1004eec9:	push   DWORD PTR [esi+0x34]
1004eecc:	call   0x10043508
1004eed1:	push   DWORD PTR [esi+0x1c]
1004eed4:	call   0x10043508
1004eed9:	push   DWORD PTR [esi+0x38]
1004eedc:	call   0x10043508
1004eee1:	push   DWORD PTR [esi+0x3c]
1004eee4:	call   0x10043508
1004eee9:	add    esp,0x40
1004eeec:	push   DWORD PTR [esi+0x40]
1004eeef:	call   0x10043508
1004eef4:	push   DWORD PTR [esi+0x44]
1004eef7:	call   0x10043508
1004eefc:	push   DWORD PTR [esi+0x48]
1004eeff:	call   0x10043508
1004ef04:	push   DWORD PTR [esi+0x4c]
1004ef07:	call   0x10043508
1004ef0c:	push   DWORD PTR [esi+0x50]
1004ef0f:	call   0x10043508
1004ef14:	push   DWORD PTR [esi+0x54]
1004ef17:	call   0x10043508
1004ef1c:	push   DWORD PTR [esi+0x58]
1004ef1f:	call   0x10043508
1004ef24:	push   DWORD PTR [esi+0x5c]
1004ef27:	call   0x10043508
1004ef2c:	push   DWORD PTR [esi+0x60]
1004ef2f:	call   0x10043508
1004ef34:	push   DWORD PTR [esi+0x64]
1004ef37:	call   0x10043508
1004ef3c:	push   DWORD PTR [esi+0x68]
1004ef3f:	call   0x10043508
1004ef44:	push   DWORD PTR [esi+0x6c]
1004ef47:	call   0x10043508
1004ef4c:	push   DWORD PTR [esi+0x70]
1004ef4f:	call   0x10043508
1004ef54:	push   DWORD PTR [esi+0x74]
1004ef57:	call   0x10043508
1004ef5c:	push   DWORD PTR [esi+0x78]
1004ef5f:	call   0x10043508
1004ef64:	push   DWORD PTR [esi+0x7c]
1004ef67:	call   0x10043508
1004ef6c:	add    esp,0x40
1004ef6f:	push   DWORD PTR [esi+0x80]
1004ef75:	call   0x10043508
1004ef7a:	push   DWORD PTR [esi+0x84]
1004ef80:	call   0x10043508
1004ef85:	push   DWORD PTR [esi+0x88]
1004ef8b:	call   0x10043508
1004ef90:	push   DWORD PTR [esi+0x8c]
1004ef96:	call   0x10043508
1004ef9b:	push   DWORD PTR [esi+0x90]
1004efa1:	call   0x10043508
1004efa6:	push   DWORD PTR [esi+0x94]
1004efac:	call   0x10043508
1004efb1:	push   DWORD PTR [esi+0x98]
1004efb7:	call   0x10043508
1004efbc:	push   DWORD PTR [esi+0x9c]
1004efc2:	call   0x10043508
1004efc7:	push   DWORD PTR [esi+0xa0]
1004efcd:	call   0x10043508
1004efd2:	push   DWORD PTR [esi+0xa4]
1004efd8:	call   0x10043508
1004efdd:	push   DWORD PTR [esi+0xa8]
1004efe3:	call   0x10043508
1004efe8:	add    esp,0x2c
1004efeb:	pop    esi
1004efec:	ret    
1004efed:	push   esi
1004efee:	mov    esi,DWORD PTR [esp+0x8]
1004eff2:	test   esi,esi
1004eff4:	je     0x1004f02b
1004eff6:	mov    eax,DWORD PTR [esi]
1004eff8:	cmp    eax,DWORD PTR ds:0x1007edf8
1004effe:	je     0x1004f007
1004f000:	push   eax
1004f001:	call   0x10043508
1004f006:	pop    ecx
1004f007:	mov    eax,DWORD PTR [esi+0x4]
1004f00a:	cmp    eax,DWORD PTR ds:0x1007edfc
1004f010:	je     0x1004f019
1004f012:	push   eax
1004f013:	call   0x10043508
1004f018:	pop    ecx
1004f019:	mov    esi,DWORD PTR [esi+0x8]
1004f01c:	cmp    esi,DWORD PTR ds:0x1007ee00
1004f022:	je     0x1004f02b
1004f024:	push   esi
1004f025:	call   0x10043508
1004f02a:	pop    ecx
1004f02b:	pop    esi
1004f02c:	ret    
1004f02d:	push   esi
1004f02e:	mov    esi,DWORD PTR [esp+0x8]
1004f032:	test   esi,esi
1004f034:	je     0x1004f0b4
1004f036:	mov    eax,DWORD PTR [esi+0xc]
1004f039:	cmp    eax,DWORD PTR ds:0x1007ee04
1004f03f:	je     0x1004f048
1004f041:	push   eax
1004f042:	call   0x10043508
1004f047:	pop    ecx
1004f048:	mov    eax,DWORD PTR [esi+0x10]
1004f04b:	cmp    eax,DWORD PTR ds:0x1007ee08
1004f051:	je     0x1004f05a
1004f053:	push   eax
1004f054:	call   0x10043508
1004f059:	pop    ecx
1004f05a:	mov    eax,DWORD PTR [esi+0x14]
1004f05d:	cmp    eax,DWORD PTR ds:0x1007ee0c
1004f063:	je     0x1004f06c
1004f065:	push   eax
1004f066:	call   0x10043508
1004f06b:	pop    ecx
1004f06c:	mov    eax,DWORD PTR [esi+0x18]
1004f06f:	cmp    eax,DWORD PTR ds:0x1007ee10
1004f075:	je     0x1004f07e
1004f077:	push   eax
1004f078:	call   0x10043508
1004f07d:	pop    ecx
1004f07e:	mov    eax,DWORD PTR [esi+0x1c]
1004f081:	cmp    eax,DWORD PTR ds:0x1007ee14
1004f087:	je     0x1004f090
1004f089:	push   eax
1004f08a:	call   0x10043508
1004f08f:	pop    ecx
1004f090:	mov    eax,DWORD PTR [esi+0x20]
1004f093:	cmp    eax,DWORD PTR ds:0x1007ee18
1004f099:	je     0x1004f0a2
1004f09b:	push   eax
1004f09c:	call   0x10043508
1004f0a1:	pop    ecx
1004f0a2:	mov    esi,DWORD PTR [esi+0x24]
1004f0a5:	cmp    esi,DWORD PTR ds:0x1007ee1c
1004f0ab:	je     0x1004f0b4
1004f0ad:	push   esi
1004f0ae:	call   0x10043508
1004f0b3:	pop    ecx
1004f0b4:	pop    esi
1004f0b5:	ret    
1004f0b6:	int3   
1004f0b7:	int3   
1004f0b8:	int3   
1004f0b9:	int3   
1004f0ba:	int3   
1004f0bb:	int3   
1004f0bc:	int3   
1004f0bd:	int3   
1004f0be:	int3   
1004f0bf:	int3   
1004f0c0:	push   ebp
1004f0c1:	mov    ebp,esp
1004f0c3:	push   esi
1004f0c4:	xor    eax,eax
1004f0c6:	push   eax
1004f0c7:	push   eax
1004f0c8:	push   eax
1004f0c9:	push   eax
1004f0ca:	push   eax
1004f0cb:	push   eax
1004f0cc:	push   eax
1004f0cd:	push   eax
1004f0ce:	mov    edx,DWORD PTR [ebp+0xc]
1004f0d1:	lea    ecx,[ecx+0x0]
1004f0d4:	mov    al,BYTE PTR [edx]
1004f0d6:	or     al,al
1004f0d8:	je     0x1004f0e3
1004f0da:	add    edx,0x1
1004f0dd:	bts    DWORD PTR [esp],eax
1004f0e1:	jmp    0x1004f0d4
1004f0e3:	mov    esi,DWORD PTR [ebp+0x8]
1004f0e6:	or     ecx,0xffffffff
1004f0e9:	lea    ecx,[ecx+0x0]
1004f0ec:	add    ecx,0x1
1004f0ef:	mov    al,BYTE PTR [esi]
1004f0f1:	or     al,al
1004f0f3:	je     0x1004f0fe
1004f0f5:	add    esi,0x1
1004f0f8:	bt     DWORD PTR [esp],eax
1004f0fc:	jae    0x1004f0ec
1004f0fe:	mov    eax,ecx
1004f100:	add    esp,0x20
1004f103:	pop    esi
1004f104:	leave  
1004f105:	ret    
1004f106:	push   ebp
1004f107:	mov    ebp,esp
1004f109:	push   ecx
1004f10a:	and    DWORD PTR [ebp-0x4],0x0
1004f10e:	push   ebx
1004f10f:	mov    ebx,DWORD PTR [ebp+0x10]
1004f112:	test   ebx,ebx
1004f114:	jne    0x1004f11d
1004f116:	xor    eax,eax
1004f118:	jmp    0x1004f1b7
1004f11d:	cmp    ebx,0x4
1004f120:	push   edi
1004f121:	jb     0x1004f198
1004f123:	lea    edi,[ebx-0x4]
1004f126:	test   edi,edi
1004f128:	jbe    0x1004f198
1004f12a:	mov    ecx,DWORD PTR [ebp+0xc]
1004f12d:	mov    eax,DWORD PTR [ebp+0x8]
1004f130:	mov    dl,BYTE PTR [eax]
1004f132:	add    eax,0x4
1004f135:	add    ecx,0x4
1004f138:	test   dl,dl
1004f13a:	je     0x1004f18e
1004f13c:	cmp    dl,BYTE PTR [ecx-0x4]
1004f13f:	jne    0x1004f18e
1004f141:	mov    dl,BYTE PTR [eax-0x3]
1004f144:	test   dl,dl
1004f146:	je     0x1004f184
1004f148:	cmp    dl,BYTE PTR [ecx-0x3]
1004f14b:	jne    0x1004f184
1004f14d:	mov    dl,BYTE PTR [eax-0x2]
1004f150:	test   dl,dl
1004f152:	je     0x1004f17a
1004f154:	cmp    dl,BYTE PTR [ecx-0x2]
1004f157:	jne    0x1004f17a
1004f159:	mov    dl,BYTE PTR [eax-0x1]
1004f15c:	test   dl,dl
1004f15e:	je     0x1004f170
1004f160:	cmp    dl,BYTE PTR [ecx-0x1]
1004f163:	jne    0x1004f170
1004f165:	add    DWORD PTR [ebp-0x4],0x4
1004f169:	cmp    DWORD PTR [ebp-0x4],edi
1004f16c:	jb     0x1004f130
1004f16e:	jmp    0x1004f1af
1004f170:	movzx  eax,BYTE PTR [eax-0x1]
1004f174:	movzx  ecx,BYTE PTR [ecx-0x1]
1004f178:	jmp    0x1004f1c0
1004f17a:	movzx  eax,BYTE PTR [eax-0x2]
1004f17e:	movzx  ecx,BYTE PTR [ecx-0x2]
1004f182:	jmp    0x1004f1c0
1004f184:	movzx  eax,BYTE PTR [eax-0x3]
1004f188:	movzx  ecx,BYTE PTR [ecx-0x3]
1004f18c:	jmp    0x1004f1c0
1004f18e:	movzx  eax,BYTE PTR [eax-0x4]
1004f192:	movzx  ecx,BYTE PTR [ecx-0x4]
1004f196:	jmp    0x1004f1c0
1004f198:	mov    ecx,DWORD PTR [ebp+0xc]
1004f19b:	mov    eax,DWORD PTR [ebp+0x8]
1004f19e:	jmp    0x1004f1af
1004f1a0:	mov    dl,BYTE PTR [eax]
1004f1a2:	test   dl,dl
1004f1a4:	je     0x1004f1ba
1004f1a6:	cmp    dl,BYTE PTR [ecx]
1004f1a8:	jne    0x1004f1ba
1004f1aa:	inc    eax
1004f1ab:	inc    ecx
1004f1ac:	inc    DWORD PTR [ebp-0x4]
1004f1af:	cmp    DWORD PTR [ebp-0x4],ebx
1004f1b2:	jb     0x1004f1a0
1004f1b4:	xor    eax,eax
1004f1b6:	pop    edi
1004f1b7:	pop    ebx
1004f1b8:	leave  
1004f1b9:	ret    
1004f1ba:	movzx  eax,BYTE PTR [eax]
1004f1bd:	movzx  ecx,BYTE PTR [ecx]
1004f1c0:	sub    eax,ecx
1004f1c2:	jmp    0x1004f1b6
1004f1c4:	int3   
1004f1c5:	int3   
1004f1c6:	int3   
1004f1c7:	int3   
1004f1c8:	int3   
1004f1c9:	int3   
1004f1ca:	int3   
1004f1cb:	int3   
1004f1cc:	int3   
1004f1cd:	int3   
1004f1ce:	int3   
1004f1cf:	int3   
1004f1d0:	push   ebp
1004f1d1:	mov    ebp,esp
1004f1d3:	push   esi
1004f1d4:	xor    eax,eax
1004f1d6:	push   eax
1004f1d7:	push   eax
1004f1d8:	push   eax
1004f1d9:	push   eax
1004f1da:	push   eax
1004f1db:	push   eax
1004f1dc:	push   eax
1004f1dd:	push   eax
1004f1de:	mov    edx,DWORD PTR [ebp+0xc]
1004f1e1:	lea    ecx,[ecx+0x0]
1004f1e4:	mov    al,BYTE PTR [edx]
1004f1e6:	or     al,al
1004f1e8:	je     0x1004f1f3
1004f1ea:	add    edx,0x1
1004f1ed:	bts    DWORD PTR [esp],eax
1004f1f1:	jmp    0x1004f1e4
1004f1f3:	mov    esi,DWORD PTR [ebp+0x8]
1004f1f6:	mov    edi,edi
1004f1f8:	mov    al,BYTE PTR [esi]
1004f1fa:	or     al,al
1004f1fc:	je     0x1004f20a
1004f1fe:	add    esi,0x1
1004f201:	bt     DWORD PTR [esp],eax
1004f205:	jae    0x1004f1f8
1004f207:	lea    eax,[esi-0x1]
1004f20a:	add    esp,0x20
1004f20d:	pop    esi
1004f20e:	leave  
1004f20f:	ret    
1004f210:	push   ebp
1004f211:	mov    ebp,esp
1004f213:	sub    esp,0x10
1004f216:	push   DWORD PTR [ebp+0xc]
1004f219:	lea    ecx,[ebp-0x10]
1004f21c:	call   0x100454e5
1004f221:	mov    eax,DWORD PTR [ebp-0x10]
1004f224:	cmp    DWORD PTR [eax+0xac],0x1
1004f22b:	jle    0x1004f240
1004f22d:	lea    eax,[ebp-0x10]
1004f230:	push   eax
1004f231:	push   0x4
1004f233:	push   DWORD PTR [ebp+0x8]
1004f236:	call   0x1004b303
1004f23b:	add    esp,0xc
1004f23e:	jmp    0x1004f250
1004f240:	mov    eax,DWORD PTR [eax+0xc8]
1004f246:	mov    ecx,DWORD PTR [ebp+0x8]
1004f249:	movzx  eax,BYTE PTR [eax+ecx*2]
1004f24d:	and    eax,0x4
1004f250:	cmp    BYTE PTR [ebp-0x4],0x0
1004f254:	je     0x1004f25d
1004f256:	mov    ecx,DWORD PTR [ebp-0x8]
1004f259:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f25d:	leave  
1004f25e:	ret    
1004f25f:	cmp    DWORD PTR ds:0x100802c8,0x0
1004f266:	jne    0x1004f27a
1004f268:	mov    eax,DWORD PTR [esp+0x4]
1004f26c:	mov    ecx,DWORD PTR ds:0x1007e998
1004f272:	movzx  eax,BYTE PTR [ecx+eax*2]
1004f276:	and    eax,0x4
1004f279:	ret    
1004f27a:	push   0x0
1004f27c:	push   DWORD PTR [esp+0x8]
1004f280:	call   0x1004f210
1004f285:	pop    ecx
1004f286:	pop    ecx
1004f287:	ret    
1004f288:	push   ebp
1004f289:	mov    ebp,esp
1004f28b:	sub    esp,0x10
1004f28e:	push   DWORD PTR [ebp+0xc]
1004f291:	lea    ecx,[ebp-0x10]
1004f294:	call   0x100454e5
1004f299:	mov    eax,DWORD PTR [ebp-0x10]
1004f29c:	cmp    DWORD PTR [eax+0xac],0x1
1004f2a3:	jle    0x1004f2bb
1004f2a5:	lea    eax,[ebp-0x10]
1004f2a8:	push   eax
1004f2a9:	push   0x80
1004f2ae:	push   DWORD PTR [ebp+0x8]
1004f2b1:	call   0x1004b303
1004f2b6:	add    esp,0xc
1004f2b9:	jmp    0x1004f2cd
1004f2bb:	mov    eax,DWORD PTR [eax+0xc8]
1004f2c1:	mov    ecx,DWORD PTR [ebp+0x8]
1004f2c4:	movzx  eax,BYTE PTR [eax+ecx*2]
1004f2c8:	and    eax,0x80
1004f2cd:	cmp    BYTE PTR [ebp-0x4],0x0
1004f2d1:	je     0x1004f2da
1004f2d3:	mov    ecx,DWORD PTR [ebp-0x8]
1004f2d6:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f2da:	leave  
1004f2db:	ret    
1004f2dc:	cmp    DWORD PTR ds:0x100802c8,0x0
1004f2e3:	jne    0x1004f2f9
1004f2e5:	mov    eax,DWORD PTR [esp+0x4]
1004f2e9:	mov    ecx,DWORD PTR ds:0x1007e998
1004f2ef:	movzx  eax,BYTE PTR [ecx+eax*2]
1004f2f3:	and    eax,0x80
1004f2f8:	ret    
1004f2f9:	push   0x0
1004f2fb:	push   DWORD PTR [esp+0x8]
1004f2ff:	call   0x1004f288
1004f304:	pop    ecx
1004f305:	pop    ecx
1004f306:	ret    
1004f307:	push   ebp
1004f308:	mov    ebp,esp
1004f30a:	sub    esp,0x10
1004f30d:	push   DWORD PTR [ebp+0xc]
1004f310:	lea    ecx,[ebp-0x10]
1004f313:	call   0x100454e5
1004f318:	mov    eax,DWORD PTR [ebp-0x10]
1004f31b:	cmp    DWORD PTR [eax+0xac],0x1
1004f322:	jle    0x1004f337
1004f324:	lea    eax,[ebp-0x10]
1004f327:	push   eax
1004f328:	push   0x8
1004f32a:	push   DWORD PTR [ebp+0x8]
1004f32d:	call   0x1004b303
1004f332:	add    esp,0xc
1004f335:	jmp    0x1004f347
1004f337:	mov    eax,DWORD PTR [eax+0xc8]
1004f33d:	mov    ecx,DWORD PTR [ebp+0x8]
1004f340:	movzx  eax,BYTE PTR [eax+ecx*2]
1004f344:	and    eax,0x8
1004f347:	cmp    BYTE PTR [ebp-0x4],0x0
1004f34b:	je     0x1004f354
1004f34d:	mov    ecx,DWORD PTR [ebp-0x8]
1004f350:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f354:	leave  
1004f355:	ret    
1004f356:	cmp    DWORD PTR ds:0x100802c8,0x0
1004f35d:	jne    0x1004f371
1004f35f:	mov    eax,DWORD PTR [esp+0x4]
1004f363:	mov    ecx,DWORD PTR ds:0x1007e998
1004f369:	movzx  eax,BYTE PTR [ecx+eax*2]
1004f36d:	and    eax,0x8
1004f370:	ret    
1004f371:	push   0x0
1004f373:	push   DWORD PTR [esp+0x8]
1004f377:	call   0x1004f307
1004f37c:	pop    ecx
1004f37d:	pop    ecx
1004f37e:	ret    
1004f37f:	push   ebp
1004f380:	mov    ebp,esp
1004f382:	sub    esp,0x10
1004f385:	push   DWORD PTR [ebp+0xc]
1004f388:	lea    ecx,[ebp-0x10]
1004f38b:	call   0x100454e5
1004f390:	mov    eax,DWORD PTR [ebp-0x10]
1004f393:	cmp    DWORD PTR [eax+0xac],0x1
1004f39a:	jle    0x1004f3b2
1004f39c:	lea    eax,[ebp-0x10]
1004f39f:	push   eax
1004f3a0:	push   0x157
1004f3a5:	push   DWORD PTR [ebp+0x8]
1004f3a8:	call   0x1004b303
1004f3ad:	add    esp,0xc
1004f3b0:	jmp    0x1004f3c4
1004f3b2:	mov    eax,DWORD PTR [eax+0xc8]
1004f3b8:	mov    ecx,DWORD PTR [ebp+0x8]
1004f3bb:	movzx  eax,WORD PTR [eax+ecx*2]
1004f3bf:	and    eax,0x157
1004f3c4:	cmp    BYTE PTR [ebp-0x4],0x0
1004f3c8:	je     0x1004f3d1
1004f3ca:	mov    ecx,DWORD PTR [ebp-0x8]
1004f3cd:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f3d1:	leave  
1004f3d2:	ret    
1004f3d3:	cmp    DWORD PTR ds:0x100802c8,0x0
1004f3da:	jne    0x1004f3f0
1004f3dc:	mov    eax,DWORD PTR [esp+0x4]
1004f3e0:	mov    ecx,DWORD PTR ds:0x1007e998
1004f3e6:	movzx  eax,WORD PTR [ecx+eax*2]
1004f3ea:	and    eax,0x157
1004f3ef:	ret    
1004f3f0:	push   0x0
1004f3f2:	push   DWORD PTR [esp+0x8]
1004f3f6:	call   0x1004f37f
1004f3fb:	pop    ecx
1004f3fc:	pop    ecx
1004f3fd:	ret    
1004f3fe:	int3   
1004f3ff:	int3   
1004f400:	mov    eax,DWORD PTR [esp+0x8]
1004f404:	mov    ecx,DWORD PTR [esp+0x10]
1004f408:	or     ecx,eax
1004f40a:	mov    ecx,DWORD PTR [esp+0xc]
1004f40e:	jne    0x1004f419
1004f410:	mov    eax,DWORD PTR [esp+0x4]
1004f414:	mul    ecx
1004f416:	ret    0x10
1004f419:	push   ebx
1004f41a:	mul    ecx
1004f41c:	mov    ebx,eax
1004f41e:	mov    eax,DWORD PTR [esp+0x8]
1004f422:	mul    DWORD PTR [esp+0x14]
1004f426:	add    ebx,eax
1004f428:	mov    eax,DWORD PTR [esp+0x8]
1004f42c:	mul    ecx
1004f42e:	add    edx,ebx
1004f430:	pop    ebx
1004f431:	ret    0x10
1004f434:	push   ebp
1004f435:	mov    ebp,esp
1004f437:	sub    esp,0xc
1004f43a:	mov    eax,ds:0x1007e030
1004f43f:	xor    eax,ebp
1004f441:	mov    DWORD PTR [ebp-0x4],eax
1004f444:	push   0x6
1004f446:	lea    eax,[ebp-0xc]
1004f449:	push   eax
1004f44a:	push   0x1004
1004f44f:	push   DWORD PTR [ebp+0x8]
1004f452:	mov    BYTE PTR [ebp-0x6],0x0
1004f456:	call   DWORD PTR ds:0x1006623c
1004f45c:	test   eax,eax
1004f45e:	jne    0x1004f465
1004f460:	or     eax,0xffffffff
1004f463:	jmp    0x1004f46f
1004f465:	lea    eax,[ebp-0xc]
1004f468:	push   eax
1004f469:	call   0x10045ca4
1004f46e:	pop    ecx
1004f46f:	mov    ecx,DWORD PTR [ebp-0x4]
1004f472:	xor    ecx,ebp
1004f474:	call   0x10042e97
1004f479:	leave  
1004f47a:	ret    
1004f47b:	push   ebp
1004f47c:	mov    ebp,esp
1004f47e:	sub    esp,0x34
1004f481:	mov    eax,ds:0x1007e030
1004f486:	xor    eax,ebp
1004f488:	mov    DWORD PTR [ebp-0x4],eax
1004f48b:	mov    eax,DWORD PTR [ebp+0x10]
1004f48e:	mov    ecx,DWORD PTR [ebp+0x18]
1004f491:	mov    DWORD PTR [ebp-0x28],eax
1004f494:	mov    eax,DWORD PTR [ebp+0x14]
1004f497:	push   ebx
1004f498:	mov    DWORD PTR [ebp-0x30],eax
1004f49b:	mov    eax,DWORD PTR [eax]
1004f49d:	push   esi
1004f49e:	mov    DWORD PTR [ebp-0x24],eax
1004f4a1:	mov    eax,DWORD PTR [ebp+0x8]
1004f4a4:	push   edi
1004f4a5:	xor    edi,edi
1004f4a7:	cmp    eax,DWORD PTR [ebp+0xc]
1004f4aa:	mov    DWORD PTR [ebp-0x34],ecx
1004f4ad:	mov    DWORD PTR [ebp-0x20],edi
1004f4b0:	mov    DWORD PTR [ebp-0x2c],edi
1004f4b3:	je     0x1004f618
1004f4b9:	mov    esi,DWORD PTR ds:0x100661dc
1004f4bf:	lea    ecx,[ebp-0x18]
1004f4c2:	push   ecx
1004f4c3:	push   eax
1004f4c4:	call   esi
1004f4c6:	test   eax,eax
1004f4c8:	mov    ebx,DWORD PTR ds:0x1006608c
1004f4ce:	je     0x1004f52e
1004f4d0:	cmp    DWORD PTR [ebp-0x18],0x1
1004f4d4:	jne    0x1004f52e
1004f4d6:	lea    eax,[ebp-0x18]
1004f4d9:	push   eax
1004f4da:	push   DWORD PTR [ebp+0xc]
1004f4dd:	call   esi
1004f4df:	test   eax,eax
1004f4e1:	je     0x1004f52e
1004f4e3:	cmp    DWORD PTR [ebp-0x18],0x1
1004f4e7:	jne    0x1004f52e
1004f4e9:	mov    esi,DWORD PTR [ebp-0x24]
1004f4ec:	cmp    esi,0xffffffff
1004f4ef:	mov    DWORD PTR [ebp-0x2c],0x1
1004f4f6:	jne    0x1004f504
1004f4f8:	push   DWORD PTR [ebp-0x28]
1004f4fb:	call   0x10043010
1004f500:	mov    esi,eax
1004f502:	pop    ecx
1004f503:	inc    esi
1004f504:	cmp    esi,edi
1004f506:	jle    0x1004f563
1004f508:	cmp    esi,0x7ffffff0
1004f50e:	ja     0x1004f563
1004f510:	lea    eax,[esi+esi*1+0x8]
1004f514:	cmp    eax,0x400
1004f519:	ja     0x1004f54a
1004f51b:	call   0x1004b6f0
1004f520:	mov    eax,esp
1004f522:	cmp    eax,edi
1004f524:	je     0x1004f55e
1004f526:	mov    DWORD PTR [eax],0xcccc
1004f52c:	jmp    0x1004f55b
1004f52e:	push   edi
1004f52f:	push   edi
1004f530:	push   DWORD PTR [ebp-0x24]
1004f533:	push   DWORD PTR [ebp-0x28]
1004f536:	push   0x1
1004f538:	push   DWORD PTR [ebp+0x8]
1004f53b:	call   ebx
1004f53d:	mov    esi,eax
1004f53f:	cmp    esi,edi
1004f541:	jne    0x1004f506
1004f543:	xor    eax,eax
1004f545:	jmp    0x1004f61b
1004f54a:	push   eax
1004f54b:	call   0x10044f8d
1004f550:	cmp    eax,edi
1004f552:	pop    ecx
1004f553:	je     0x1004f55e
1004f555:	mov    DWORD PTR [eax],0xdddd
1004f55b:	add    eax,0x8
1004f55e:	mov    DWORD PTR [ebp-0x1c],eax
1004f561:	jmp    0x1004f566
1004f563:	mov    DWORD PTR [ebp-0x1c],edi
1004f566:	cmp    DWORD PTR [ebp-0x1c],edi
1004f569:	je     0x1004f543
1004f56b:	lea    eax,[esi+esi*1]
1004f56e:	push   eax
1004f56f:	push   edi
1004f570:	push   DWORD PTR [ebp-0x1c]
1004f573:	call   0x10045c00
1004f578:	add    esp,0xc
1004f57b:	push   esi
1004f57c:	push   DWORD PTR [ebp-0x1c]
1004f57f:	push   DWORD PTR [ebp-0x24]
1004f582:	push   DWORD PTR [ebp-0x28]
1004f585:	push   0x1
1004f587:	push   DWORD PTR [ebp+0x8]
1004f58a:	call   ebx
1004f58c:	test   eax,eax
1004f58e:	je     0x1004f60f
1004f590:	mov    ebx,DWORD PTR [ebp-0x34]
1004f593:	cmp    ebx,edi
1004f595:	je     0x1004f5b4
1004f597:	push   edi
1004f598:	push   edi
1004f599:	push   DWORD PTR [ebp+0x1c]
1004f59c:	push   ebx
1004f59d:	push   esi
1004f59e:	push   DWORD PTR [ebp-0x1c]
1004f5a1:	push   edi
1004f5a2:	push   DWORD PTR [ebp+0xc]
1004f5a5:	call   DWORD PTR ds:0x100660b8
1004f5ab:	test   eax,eax
1004f5ad:	je     0x1004f60f
1004f5af:	mov    DWORD PTR [ebp-0x20],ebx
1004f5b2:	jmp    0x1004f60f
1004f5b4:	cmp    DWORD PTR [ebp-0x2c],edi
1004f5b7:	mov    ebx,DWORD PTR ds:0x100660b8
1004f5bd:	jne    0x1004f5d3
1004f5bf:	push   edi
1004f5c0:	push   edi
1004f5c1:	push   edi
1004f5c2:	push   edi
1004f5c3:	push   esi
1004f5c4:	push   DWORD PTR [ebp-0x1c]
1004f5c7:	push   edi
1004f5c8:	push   DWORD PTR [ebp+0xc]
1004f5cb:	call   ebx
1004f5cd:	mov    esi,eax
1004f5cf:	cmp    esi,edi
1004f5d1:	je     0x1004f60f
1004f5d3:	push   esi
1004f5d4:	push   0x1
1004f5d6:	call   0x10047462
1004f5db:	cmp    eax,edi
1004f5dd:	pop    ecx
1004f5de:	pop    ecx
1004f5df:	mov    DWORD PTR [ebp-0x20],eax
1004f5e2:	je     0x1004f60f
1004f5e4:	push   edi
1004f5e5:	push   edi
1004f5e6:	push   esi
1004f5e7:	push   eax
1004f5e8:	push   esi
1004f5e9:	push   DWORD PTR [ebp-0x1c]
1004f5ec:	push   edi
1004f5ed:	push   DWORD PTR [ebp+0xc]
1004f5f0:	call   ebx
1004f5f2:	cmp    eax,edi
1004f5f4:	jne    0x1004f604
1004f5f6:	push   DWORD PTR [ebp-0x20]
1004f5f9:	call   0x10043508
1004f5fe:	pop    ecx
1004f5ff:	mov    DWORD PTR [ebp-0x20],edi
1004f602:	jmp    0x1004f60f
1004f604:	cmp    DWORD PTR [ebp-0x24],0xffffffff
1004f608:	je     0x1004f60f
1004f60a:	mov    ecx,DWORD PTR [ebp-0x30]
1004f60d:	mov    DWORD PTR [ecx],eax
1004f60f:	push   DWORD PTR [ebp-0x1c]
1004f612:	call   0x1001b365
1004f617:	pop    ecx
1004f618:	mov    eax,DWORD PTR [ebp-0x20]
1004f61b:	lea    esp,[ebp-0x40]
1004f61e:	pop    edi
1004f61f:	pop    esi
1004f620:	pop    ebx
1004f621:	mov    ecx,DWORD PTR [ebp-0x4]
1004f624:	xor    ecx,ebp
1004f626:	call   0x10042e97
1004f62b:	leave  
1004f62c:	ret    
1004f62d:	push   ebp
1004f62e:	mov    ebp,esp
1004f630:	sub    esp,0x14
1004f633:	cmp    WORD PTR [ebp+0x8],0xffff
1004f639:	jne    0x1004f641
1004f63b:	and    DWORD PTR [ebp-0x4],0x0
1004f63f:	jmp    0x1004f6a3
1004f641:	cmp    WORD PTR [ebp+0x8],0x100
1004f647:	jae    0x1004f663
1004f649:	movzx  eax,WORD PTR [ebp+0x8]
1004f64d:	mov    ecx,DWORD PTR ds:0x1007ed34
1004f653:	mov    ax,WORD PTR [ecx+eax*2]
1004f657:	and    ax,WORD PTR [ebp+0xc]
1004f65b:	movzx  eax,ax
1004f65e:	mov    DWORD PTR [ebp-0x4],eax
1004f661:	jmp    0x1004f6a3
1004f663:	push   DWORD PTR [ebp+0x10]
1004f666:	lea    ecx,[ebp-0x14]
1004f669:	call   0x100454e5
1004f66e:	mov    eax,DWORD PTR [ebp-0x14]
1004f671:	push   DWORD PTR [eax+0x14]
1004f674:	push   DWORD PTR [eax+0x4]
1004f677:	lea    eax,[ebp-0x4]
1004f67a:	push   eax
1004f67b:	push   0x1
1004f67d:	lea    eax,[ebp+0x8]
1004f680:	push   eax
1004f681:	lea    eax,[ebp-0x14]
1004f684:	push   0x1
1004f686:	push   eax
1004f687:	call   0x10050427
1004f68c:	add    esp,0x1c
1004f68f:	test   eax,eax
1004f691:	jne    0x1004f696
1004f693:	and    DWORD PTR [ebp-0x4],eax
1004f696:	cmp    BYTE PTR [ebp-0x8],0x0
1004f69a:	je     0x1004f6a3
1004f69c:	mov    eax,DWORD PTR [ebp-0xc]
1004f69f:	and    DWORD PTR [eax+0x70],0xfffffffd
1004f6a3:	movzx  eax,WORD PTR [ebp-0x4]
1004f6a7:	movzx  ecx,WORD PTR [ebp+0xc]
1004f6ab:	and    eax,ecx
1004f6ad:	leave  
1004f6ae:	ret    
1004f6af:	push   ebp
1004f6b0:	mov    ebp,esp
1004f6b2:	sub    esp,0x10
1004f6b5:	push   DWORD PTR [ebp+0x8]
1004f6b8:	lea    ecx,[ebp-0x10]
1004f6bb:	call   0x100454e5
1004f6c0:	movzx  eax,BYTE PTR [ebp+0xc]
1004f6c4:	mov    ecx,DWORD PTR [ebp-0xc]
1004f6c7:	mov    dl,BYTE PTR [ebp+0x14]
1004f6ca:	test   BYTE PTR [ecx+eax*1+0x1d],dl
1004f6ce:	jne    0x1004f6ee
1004f6d0:	cmp    DWORD PTR [ebp+0x10],0x0
1004f6d4:	je     0x1004f6e8
1004f6d6:	mov    ecx,DWORD PTR [ebp-0x10]
1004f6d9:	mov    ecx,DWORD PTR [ecx+0xc8]
1004f6df:	movzx  eax,WORD PTR [ecx+eax*2]
1004f6e3:	and    eax,DWORD PTR [ebp+0x10]
1004f6e6:	jmp    0x1004f6ea
1004f6e8:	xor    eax,eax
1004f6ea:	test   eax,eax
1004f6ec:	je     0x1004f6f1
1004f6ee:	xor    eax,eax
1004f6f0:	inc    eax
1004f6f1:	cmp    BYTE PTR [ebp-0x4],0x0
1004f6f5:	je     0x1004f6fe
1004f6f7:	mov    ecx,DWORD PTR [ebp-0x8]
1004f6fa:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f6fe:	leave  
1004f6ff:	ret    
1004f700:	push   0x4
1004f702:	push   0x0
1004f704:	push   DWORD PTR [esp+0xc]
1004f708:	push   0x0
1004f70a:	call   0x1004f6af
1004f70f:	add    esp,0x10
1004f712:	ret    
1004f713:	int3   
1004f714:	push   ebp
1004f715:	mov    ebp,esp
1004f717:	push   ebx
1004f718:	push   esi
1004f719:	push   edi
1004f71a:	push   ebp
1004f71b:	push   0x0
1004f71d:	push   0x0
1004f71f:	push   0x1004f72c
1004f724:	push   DWORD PTR [ebp+0x8]
1004f727:	call   0x10056ad4
1004f72c:	pop    ebp
1004f72d:	pop    edi
1004f72e:	pop    esi
1004f72f:	pop    ebx
1004f730:	mov    esp,ebp
1004f732:	pop    ebp
1004f733:	ret    
1004f734:	mov    ecx,DWORD PTR [esp+0x4]
1004f738:	test   DWORD PTR [ecx+0x4],0x6
1004f73f:	mov    eax,0x1
1004f744:	je     0x1004f778
1004f746:	mov    eax,DWORD PTR [esp+0x14]
1004f74a:	mov    ecx,DWORD PTR [eax-0x4]
1004f74d:	xor    ecx,eax
1004f74f:	call   0x10042e97
1004f754:	push   ebp
1004f755:	mov    ebp,DWORD PTR [eax+0x10]
1004f758:	mov    edx,DWORD PTR [eax+0x28]
1004f75b:	push   edx
1004f75c:	mov    edx,DWORD PTR [eax+0x24]
1004f75f:	push   edx
1004f760:	call   0x1004f779
1004f765:	add    esp,0x8
1004f768:	pop    ebp
1004f769:	mov    eax,DWORD PTR [esp+0x8]
1004f76d:	mov    edx,DWORD PTR [esp+0x10]
1004f771:	mov    DWORD PTR [edx],eax
1004f773:	mov    eax,0x3
1004f778:	ret    
1004f779:	push   ebx
1004f77a:	push   esi
1004f77b:	push   edi
1004f77c:	mov    eax,DWORD PTR [esp+0x10]
1004f780:	push   ebp
1004f781:	push   eax
1004f782:	push   0xfffffffe
1004f784:	push   0x1004f734
1004f789:	push   DWORD PTR fs:0x0
1004f790:	mov    eax,ds:0x1007e030
1004f795:	xor    eax,esp
1004f797:	push   eax
1004f798:	lea    eax,[esp+0x4]
1004f79c:	mov    fs:0x0,eax
1004f7a2:	mov    eax,DWORD PTR [esp+0x28]
1004f7a6:	mov    ebx,DWORD PTR [eax+0x8]
1004f7a9:	mov    esi,DWORD PTR [eax+0xc]
1004f7ac:	cmp    esi,0xffffffff
1004f7af:	je     0x1004f7eb
1004f7b1:	cmp    DWORD PTR [esp+0x2c],0xffffffff
1004f7b6:	je     0x1004f7be
1004f7b8:	cmp    esi,DWORD PTR [esp+0x2c]
1004f7bc:	jbe    0x1004f7eb
1004f7be:	lea    esi,[esi+esi*2]
1004f7c1:	mov    ecx,DWORD PTR [ebx+esi*4]
1004f7c4:	mov    DWORD PTR [esp+0xc],ecx
1004f7c8:	mov    DWORD PTR [eax+0xc],ecx
1004f7cb:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
1004f7d0:	jne    0x1004f7e9
1004f7d2:	push   0x101
1004f7d7:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
1004f7db:	call   0x1004f829
1004f7e0:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
1004f7e4:	call   0x1004f848
1004f7e9:	jmp    0x1004f7a2
1004f7eb:	mov    ecx,DWORD PTR [esp+0x4]
1004f7ef:	mov    DWORD PTR fs:0x0,ecx
1004f7f6:	add    esp,0x18
1004f7f9:	pop    edi
1004f7fa:	pop    esi
1004f7fb:	pop    ebx
1004f7fc:	ret    
1004f7fd:	xor    eax,eax
1004f7ff:	mov    ecx,DWORD PTR fs:0x0
1004f806:	cmp    DWORD PTR [ecx+0x4],0x1004f734
1004f80d:	jne    0x1004f81f
1004f80f:	mov    edx,DWORD PTR [ecx+0xc]
1004f812:	mov    edx,DWORD PTR [edx+0xc]
1004f815:	cmp    DWORD PTR [ecx+0x8],edx
1004f818:	jne    0x1004f81f
1004f81a:	mov    eax,0x1
1004f81f:	ret    
1004f820:	push   ebx
1004f821:	push   ecx
1004f822:	mov    ebx,0x1007ee40
1004f827:	jmp    0x1004f834
1004f829:	push   ebx
1004f82a:	push   ecx
1004f82b:	mov    ebx,0x1007ee40
1004f830:	mov    ecx,DWORD PTR [esp+0xc]
1004f834:	mov    DWORD PTR [ebx+0x8],ecx
1004f837:	mov    DWORD PTR [ebx+0x4],eax
1004f83a:	mov    DWORD PTR [ebx+0xc],ebp
1004f83d:	push   ebp
1004f83e:	push   ecx
1004f83f:	push   eax
1004f840:	pop    eax
1004f841:	pop    ecx
1004f842:	pop    ebp
1004f843:	pop    ecx
1004f844:	pop    ebx
1004f845:	ret    0x4
1004f848:	call   eax
1004f84a:	ret    
1004f84b:	push   0x2
1004f84d:	call   0x10047598
1004f852:	pop    ecx
1004f853:	ret    
1004f854:	xor    eax,eax
1004f856:	inc    eax
1004f857:	cmp    DWORD PTR [esp+0x4],0x0
1004f85c:	jne    0x1004f860
1004f85e:	xor    eax,eax
1004f860:	ret    
1004f861:	mov    eax,DWORD PTR [esp+0x4]
1004f865:	test   eax,eax
1004f867:	push   esi
1004f868:	push   edi
1004f869:	jl     0x1004f8c5
1004f86b:	cmp    eax,DWORD PTR ds:0x10082464
1004f871:	jae    0x1004f8c5
1004f873:	mov    esi,eax
1004f875:	and    esi,0x1f
1004f878:	imul   esi,esi,0x28
1004f87b:	mov    ecx,eax
1004f87d:	sar    ecx,0x5
1004f880:	lea    edi,[ecx*4+0x10082480]
1004f887:	mov    ecx,DWORD PTR [edi]
1004f889:	cmp    DWORD PTR [esi+ecx*1],0xffffffff
1004f88d:	jne    0x1004f8c5
1004f88f:	cmp    DWORD PTR ds:0x1007faa4,0x1
1004f896:	push   ebx
1004f897:	mov    ebx,DWORD PTR [esp+0x14]
1004f89b:	jne    0x1004f8bb
1004f89d:	sub    eax,0x0
1004f8a0:	je     0x1004f8b2
1004f8a2:	dec    eax
1004f8a3:	je     0x1004f8ad
1004f8a5:	dec    eax
1004f8a6:	jne    0x1004f8bb
1004f8a8:	push   ebx
1004f8a9:	push   0xfffffff4
1004f8ab:	jmp    0x1004f8b5
1004f8ad:	push   ebx
1004f8ae:	push   0xfffffff5
1004f8b0:	jmp    0x1004f8b5
1004f8b2:	push   ebx
1004f8b3:	push   0xfffffff6
1004f8b5:	call   DWORD PTR ds:0x10066244
1004f8bb:	mov    eax,DWORD PTR [edi]
1004f8bd:	mov    DWORD PTR [esi+eax*1],ebx
1004f8c0:	xor    eax,eax
1004f8c2:	pop    ebx
1004f8c3:	jmp    0x1004f8db
1004f8c5:	call   0x10046b55
1004f8ca:	mov    DWORD PTR [eax],0x9
1004f8d0:	call   0x10046b68
1004f8d5:	and    DWORD PTR [eax],0x0
1004f8d8:	or     eax,0xffffffff
1004f8db:	pop    edi
1004f8dc:	pop    esi
1004f8dd:	ret    
1004f8de:	mov    ecx,DWORD PTR [esp+0x4]
1004f8e2:	push   ebx
1004f8e3:	xor    ebx,ebx
1004f8e5:	cmp    ecx,ebx
1004f8e7:	push   esi
1004f8e8:	push   edi
1004f8e9:	jl     0x1004f946
1004f8eb:	cmp    ecx,DWORD PTR ds:0x10082464
1004f8f1:	jae    0x1004f946
1004f8f3:	mov    esi,ecx
1004f8f5:	and    esi,0x1f
1004f8f8:	imul   esi,esi,0x28
1004f8fb:	mov    eax,ecx
1004f8fd:	sar    eax,0x5
1004f900:	lea    edi,[eax*4+0x10082480]
1004f907:	mov    eax,DWORD PTR [edi]
1004f909:	add    eax,esi
1004f90b:	test   BYTE PTR [eax+0x4],0x1
1004f90f:	je     0x1004f946
1004f911:	cmp    DWORD PTR [eax],0xffffffff
1004f914:	je     0x1004f946
1004f916:	cmp    DWORD PTR ds:0x1007faa4,0x1
1004f91d:	jne    0x1004f93c
1004f91f:	sub    ecx,ebx
1004f921:	je     0x1004f933
1004f923:	dec    ecx
1004f924:	je     0x1004f92e
1004f926:	dec    ecx
1004f927:	jne    0x1004f93c
1004f929:	push   ebx
1004f92a:	push   0xfffffff4
1004f92c:	jmp    0x1004f936
1004f92e:	push   ebx
1004f92f:	push   0xfffffff5
1004f931:	jmp    0x1004f936
1004f933:	push   ebx
1004f934:	push   0xfffffff6
1004f936:	call   DWORD PTR ds:0x10066244
1004f93c:	mov    eax,DWORD PTR [edi]
1004f93e:	or     DWORD PTR [esi+eax*1],0xffffffff
1004f942:	xor    eax,eax
1004f944:	jmp    0x1004f95b
1004f946:	call   0x10046b55
1004f94b:	mov    DWORD PTR [eax],0x9
1004f951:	call   0x10046b68
1004f956:	mov    DWORD PTR [eax],ebx
1004f958:	or     eax,0xffffffff
1004f95b:	pop    edi
1004f95c:	pop    esi
1004f95d:	pop    ebx
1004f95e:	ret    
1004f95f:	mov    eax,DWORD PTR [esp+0x4]
1004f963:	cmp    eax,0xfffffffe
1004f966:	jne    0x1004f97f
1004f968:	call   0x10046b68
1004f96d:	and    DWORD PTR [eax],0x0
1004f970:	call   0x10046b55
1004f975:	mov    DWORD PTR [eax],0x9
1004f97b:	or     eax,0xffffffff
1004f97e:	ret    
1004f97f:	push   esi
1004f980:	xor    esi,esi
1004f982:	cmp    eax,esi
1004f984:	jl     0x1004f9a8
1004f986:	cmp    eax,DWORD PTR ds:0x10082464
1004f98c:	jae    0x1004f9a8
1004f98e:	mov    ecx,eax
1004f990:	and    eax,0x1f
1004f993:	imul   eax,eax,0x28
1004f996:	sar    ecx,0x5
1004f999:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1004f9a0:	add    eax,ecx
1004f9a2:	test   BYTE PTR [eax+0x4],0x1
1004f9a6:	jne    0x1004f9cc
1004f9a8:	call   0x10046b68
1004f9ad:	mov    DWORD PTR [eax],esi
1004f9af:	call   0x10046b55
1004f9b4:	push   esi
1004f9b5:	push   esi
1004f9b6:	push   esi
1004f9b7:	push   esi
1004f9b8:	push   esi
1004f9b9:	mov    DWORD PTR [eax],0x9
1004f9bf:	call   0x1004338c
1004f9c4:	add    esp,0x14
1004f9c7:	or     eax,0xffffffff
1004f9ca:	pop    esi
1004f9cb:	ret    
1004f9cc:	mov    eax,DWORD PTR [eax]
1004f9ce:	pop    esi
1004f9cf:	ret    
1004f9d0:	push   0xc
1004f9d2:	push   0x10074888
1004f9d7:	call   0x10046c94
1004f9dc:	mov    edi,DWORD PTR [ebp+0x8]
1004f9df:	mov    eax,edi
1004f9e1:	sar    eax,0x5
1004f9e4:	mov    esi,edi
1004f9e6:	and    esi,0x1f
1004f9e9:	imul   esi,esi,0x28
1004f9ec:	add    esi,DWORD PTR [eax*4+0x10082480]
1004f9f3:	mov    DWORD PTR [ebp-0x1c],0x1
1004f9fa:	xor    ebx,ebx
1004f9fc:	cmp    DWORD PTR [esi+0x8],ebx
1004f9ff:	jne    0x1004fa37
1004fa01:	push   0xa
1004fa03:	call   0x10047c9d
1004fa08:	pop    ecx
1004fa09:	mov    DWORD PTR [ebp-0x4],ebx
1004fa0c:	cmp    DWORD PTR [esi+0x8],ebx
1004fa0f:	jne    0x1004fa2b
1004fa11:	push   0xfa0
1004fa16:	lea    eax,[esi+0xc]
1004fa19:	push   eax
1004fa1a:	call   0x1004c59b
1004fa1f:	pop    ecx
1004fa20:	pop    ecx
1004fa21:	test   eax,eax
1004fa23:	jne    0x1004fa28
1004fa25:	mov    DWORD PTR [ebp-0x1c],ebx
1004fa28:	inc    DWORD PTR [esi+0x8]
1004fa2b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004fa32:	call   0x1004fa67
1004fa37:	cmp    DWORD PTR [ebp-0x1c],ebx
1004fa3a:	je     0x1004fa59
1004fa3c:	mov    eax,edi
1004fa3e:	sar    eax,0x5
1004fa41:	and    edi,0x1f
1004fa44:	imul   edi,edi,0x28
1004fa47:	mov    eax,DWORD PTR [eax*4+0x10082480]
1004fa4e:	lea    eax,[eax+edi*1+0xc]
1004fa52:	push   eax
1004fa53:	call   DWORD PTR ds:0x100660f0
1004fa59:	mov    eax,DWORD PTR [ebp-0x1c]
1004fa5c:	call   0x10046cd9
1004fa61:	ret    
1004fa62:	xor    ebx,ebx
1004fa64:	mov    edi,DWORD PTR [ebp+0x8]
1004fa67:	push   0xa
1004fa69:	call   0x10047bc5
1004fa6e:	pop    ecx
1004fa6f:	ret    
1004fa70:	mov    eax,DWORD PTR [esp+0x4]
1004fa74:	mov    ecx,eax
1004fa76:	and    eax,0x1f
1004fa79:	imul   eax,eax,0x28
1004fa7c:	sar    ecx,0x5
1004fa7f:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1004fa86:	lea    eax,[ecx+eax*1+0xc]
1004fa8a:	push   eax
1004fa8b:	call   DWORD PTR ds:0x100660ec
1004fa91:	ret    
1004fa92:	push   0x18
1004fa94:	push   0x100748a8
1004fa99:	call   0x10046c94
1004fa9e:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004faa2:	xor    edi,edi
1004faa4:	mov    DWORD PTR [ebp-0x24],edi
1004faa7:	push   0xb
1004faa9:	call   0x10047bda
1004faae:	pop    ecx
1004faaf:	test   eax,eax
1004fab1:	jne    0x1004fabb
1004fab3:	or     eax,0xffffffff
1004fab6:	jmp    0x1004fc22
1004fabb:	push   0xb
1004fabd:	call   0x10047c9d
1004fac2:	pop    ecx
1004fac3:	mov    DWORD PTR [ebp-0x4],edi
1004fac6:	mov    DWORD PTR [ebp-0x28],edi
1004fac9:	cmp    edi,0x40
1004facc:	jge    0x1004fc13
1004fad2:	mov    esi,DWORD PTR [edi*4+0x10082480]
1004fad9:	test   esi,esi
1004fadb:	je     0x1004fba0
1004fae1:	mov    DWORD PTR [ebp-0x20],esi
1004fae4:	mov    eax,DWORD PTR [edi*4+0x10082480]
1004faeb:	add    eax,0x500
1004faf0:	cmp    esi,eax
1004faf2:	jae    0x1004fb94
1004faf8:	test   BYTE PTR [esi+0x4],0x1
1004fafc:	jne    0x1004fb5a
1004fafe:	cmp    DWORD PTR [esi+0x8],0x0
1004fb02:	jne    0x1004fb3d
1004fb04:	push   0xa
1004fb06:	call   0x10047c9d
1004fb0b:	pop    ecx
1004fb0c:	xor    ebx,ebx
1004fb0e:	inc    ebx
1004fb0f:	mov    DWORD PTR [ebp-0x4],ebx
1004fb12:	cmp    DWORD PTR [esi+0x8],0x0
1004fb16:	jne    0x1004fb34
1004fb18:	push   0xfa0
1004fb1d:	lea    eax,[esi+0xc]
1004fb20:	push   eax
1004fb21:	call   0x1004c59b
1004fb26:	pop    ecx
1004fb27:	pop    ecx
1004fb28:	test   eax,eax
1004fb2a:	jne    0x1004fb31
1004fb2c:	mov    DWORD PTR [ebp-0x24],ebx
1004fb2f:	jmp    0x1004fb34
1004fb31:	inc    DWORD PTR [esi+0x8]
1004fb34:	and    DWORD PTR [ebp-0x4],0x0
1004fb38:	call   0x1004fb65
1004fb3d:	cmp    DWORD PTR [ebp-0x24],0x0
1004fb41:	jne    0x1004fb5a
1004fb43:	lea    ebx,[esi+0xc]
1004fb46:	push   ebx
1004fb47:	call   DWORD PTR ds:0x100660f0
1004fb4d:	test   BYTE PTR [esi+0x4],0x1
1004fb51:	je     0x1004fb6e
1004fb53:	push   ebx
1004fb54:	call   DWORD PTR ds:0x100660ec
1004fb5a:	add    esi,0x28
1004fb5d:	jmp    0x1004fae1
1004fb5f:	mov    edi,DWORD PTR [ebp-0x28]
1004fb62:	mov    esi,DWORD PTR [ebp-0x20]
1004fb65:	push   0xa
1004fb67:	call   0x10047bc5
1004fb6c:	pop    ecx
1004fb6d:	ret    
1004fb6e:	cmp    DWORD PTR [ebp-0x24],0x0
1004fb72:	jne    0x1004fb5a
1004fb74:	mov    BYTE PTR [esi+0x4],0x1
1004fb78:	or     DWORD PTR [esi],0xffffffff
1004fb7b:	mov    eax,esi
1004fb7d:	sub    eax,DWORD PTR [edi*4+0x10082480]
1004fb84:	cdq    
1004fb85:	push   0x28
1004fb87:	pop    ecx
1004fb88:	idiv   ecx
1004fb8a:	mov    ecx,edi
1004fb8c:	shl    ecx,0x5
1004fb8f:	add    eax,ecx
1004fb91:	mov    DWORD PTR [ebp-0x1c],eax
1004fb94:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
1004fb98:	jne    0x1004fc13
1004fb9a:	inc    edi
1004fb9b:	jmp    0x1004fac6
1004fba0:	push   0x28
1004fba2:	push   0x20
1004fba4:	call   0x10047462
1004fba9:	pop    ecx
1004fbaa:	pop    ecx
1004fbab:	mov    DWORD PTR [ebp-0x20],eax
1004fbae:	test   eax,eax
1004fbb0:	je     0x1004fc13
1004fbb2:	lea    ecx,[edi*4+0x10082480]
1004fbb9:	mov    DWORD PTR [ecx],eax
1004fbbb:	add    DWORD PTR ds:0x10082464,0x20
1004fbc2:	mov    edx,DWORD PTR [ecx]
1004fbc4:	add    edx,0x500
1004fbca:	cmp    eax,edx
1004fbcc:	jae    0x1004fbe5
1004fbce:	mov    BYTE PTR [eax+0x4],0x0
1004fbd2:	or     DWORD PTR [eax],0xffffffff
1004fbd5:	mov    BYTE PTR [eax+0x5],0xa
1004fbd9:	and    DWORD PTR [eax+0x8],0x0
1004fbdd:	add    eax,0x28
1004fbe0:	mov    DWORD PTR [ebp-0x20],eax
1004fbe3:	jmp    0x1004fbc2
1004fbe5:	shl    edi,0x5
1004fbe8:	mov    DWORD PTR [ebp-0x1c],edi
1004fbeb:	mov    eax,edi
1004fbed:	sar    eax,0x5
1004fbf0:	mov    ecx,edi
1004fbf2:	and    ecx,0x1f
1004fbf5:	imul   ecx,ecx,0x28
1004fbf8:	mov    eax,DWORD PTR [eax*4+0x10082480]
1004fbff:	mov    BYTE PTR [eax+ecx*1+0x4],0x1
1004fc04:	push   edi
1004fc05:	call   0x1004f9d0
1004fc0a:	pop    ecx
1004fc0b:	test   eax,eax
1004fc0d:	jne    0x1004fc13
1004fc0f:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004fc13:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004fc1a:	call   0x1004fc28
1004fc1f:	mov    eax,DWORD PTR [ebp-0x1c]
1004fc22:	call   0x10046cd9
1004fc27:	ret    
1004fc28:	push   0xb
1004fc2a:	call   0x10047bc5
1004fc2f:	pop    ecx
1004fc30:	ret    
1004fc31:	push   ebp
1004fc32:	mov    ebp,esp
1004fc34:	sub    esp,0x10
1004fc37:	mov    eax,ds:0x1007e030
1004fc3c:	xor    eax,ebp
1004fc3e:	mov    DWORD PTR [ebp-0x4],eax
1004fc41:	push   esi
1004fc42:	xor    esi,esi
1004fc44:	cmp    DWORD PTR ds:0x1007ee50,esi
1004fc4a:	je     0x1004fc9a
1004fc4c:	cmp    DWORD PTR ds:0x1007ef74,0xfffffffe
1004fc53:	jne    0x1004fc5a
1004fc55:	call   0x10050465
1004fc5a:	mov    eax,ds:0x1007ef74
1004fc5f:	cmp    eax,0xffffffff
1004fc62:	jne    0x1004fc6a
1004fc64:	or     ax,0xffff
1004fc68:	jmp    0x1004fcda
1004fc6a:	push   esi
1004fc6b:	lea    ecx,[ebp-0x10]
1004fc6e:	push   ecx
1004fc6f:	push   0x1
1004fc71:	lea    ecx,[ebp+0x8]
1004fc74:	push   ecx
1004fc75:	push   eax
1004fc76:	call   DWORD PTR ds:0x10066250
1004fc7c:	test   eax,eax
1004fc7e:	jne    0x1004fce7
1004fc80:	cmp    DWORD PTR ds:0x1007ee50,0x2
1004fc87:	jne    0x1004fc64
1004fc89:	call   DWORD PTR ds:0x100660cc
1004fc8f:	cmp    eax,0x78
1004fc92:	jne    0x1004fc64
1004fc94:	mov    DWORD PTR ds:0x1007ee50,esi
1004fc9a:	push   esi
1004fc9b:	push   esi
1004fc9c:	push   0x5
1004fc9e:	lea    eax,[ebp-0xc]
1004fca1:	push   eax
1004fca2:	push   0x1
1004fca4:	lea    eax,[ebp+0x8]
1004fca7:	push   eax
1004fca8:	push   esi
1004fca9:	call   DWORD PTR ds:0x1006624c
1004fcaf:	push   eax
1004fcb0:	call   DWORD PTR ds:0x100660b8
1004fcb6:	mov    ecx,DWORD PTR ds:0x1007ef74
1004fcbc:	cmp    ecx,0xffffffff
1004fcbf:	je     0x1004fc64
1004fcc1:	push   esi
1004fcc2:	lea    edx,[ebp-0x10]
1004fcc5:	push   edx
1004fcc6:	push   eax
1004fcc7:	lea    eax,[ebp-0xc]
1004fcca:	push   eax
1004fccb:	push   ecx
1004fccc:	call   DWORD PTR ds:0x10066248
1004fcd2:	test   eax,eax
1004fcd4:	je     0x1004fc64
1004fcd6:	mov    ax,WORD PTR [ebp+0x8]
1004fcda:	mov    ecx,DWORD PTR [ebp-0x4]
1004fcdd:	xor    ecx,ebp
1004fcdf:	pop    esi
1004fce0:	call   0x10042e97
1004fce5:	leave  
1004fce6:	ret    
1004fce7:	mov    DWORD PTR ds:0x1007ee50,0x1
1004fcf1:	jmp    0x1004fcd6
1004fcf3:	push   0x10
1004fcf5:	push   0x100748d0
1004fcfa:	call   0x10046c94
1004fcff:	xor    ebx,ebx
1004fd01:	mov    DWORD PTR [ebp-0x1c],ebx
1004fd04:	push   0x1
1004fd06:	call   0x10047c9d
1004fd0b:	pop    ecx
1004fd0c:	mov    DWORD PTR [ebp-0x4],ebx
1004fd0f:	push   0x3
1004fd11:	pop    edi
1004fd12:	mov    DWORD PTR [ebp-0x20],edi
1004fd15:	cmp    edi,DWORD PTR ds:0x10082460
1004fd1b:	jge    0x1004fd74
1004fd1d:	mov    esi,edi
1004fd1f:	shl    esi,0x2
1004fd22:	mov    eax,ds:0x10081440
1004fd27:	add    eax,esi
1004fd29:	cmp    DWORD PTR [eax],ebx
1004fd2b:	je     0x1004fd71
1004fd2d:	mov    eax,DWORD PTR [eax]
1004fd2f:	test   BYTE PTR [eax+0xc],0x83
1004fd33:	je     0x1004fd44
1004fd35:	push   eax
1004fd36:	call   0x10050524
1004fd3b:	pop    ecx
1004fd3c:	cmp    eax,0xffffffff
1004fd3f:	je     0x1004fd44
1004fd41:	inc    DWORD PTR [ebp-0x1c]
1004fd44:	cmp    edi,0x14
1004fd47:	jl     0x1004fd71
1004fd49:	mov    eax,ds:0x10081440
1004fd4e:	mov    eax,DWORD PTR [esi+eax*1]
1004fd51:	add    eax,0x20
1004fd54:	push   eax
1004fd55:	call   DWORD PTR ds:0x10066138
1004fd5b:	mov    eax,ds:0x10081440
1004fd60:	push   DWORD PTR [esi+eax*1]
1004fd63:	call   0x10043508
1004fd68:	pop    ecx
1004fd69:	mov    eax,ds:0x10081440
1004fd6e:	mov    DWORD PTR [esi+eax*1],ebx
1004fd71:	inc    edi
1004fd72:	jmp    0x1004fd12
1004fd74:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004fd7b:	call   0x1004fd89
1004fd80:	mov    eax,DWORD PTR [ebp-0x1c]
1004fd83:	call   0x10046cd9
1004fd88:	ret    
1004fd89:	push   0x1
1004fd8b:	call   0x10047bc5
1004fd90:	pop    ecx
1004fd91:	ret    
1004fd92:	push   ebx
1004fd93:	push   esi
1004fd94:	mov    esi,DWORD PTR [esp+0xc]
1004fd98:	mov    eax,DWORD PTR [esi+0xc]
1004fd9b:	mov    ecx,eax
1004fd9d:	and    cl,0x3
1004fda0:	xor    ebx,ebx
1004fda2:	cmp    cl,0x2
1004fda5:	jne    0x1004fde6
1004fda7:	test   ax,0x108
1004fdab:	je     0x1004fde6
1004fdad:	mov    eax,DWORD PTR [esi+0x8]
1004fdb0:	push   edi
1004fdb1:	mov    edi,DWORD PTR [esi]
1004fdb3:	sub    edi,eax
1004fdb5:	test   edi,edi
1004fdb7:	jle    0x1004fde5
1004fdb9:	push   edi
1004fdba:	push   eax
1004fdbb:	push   esi
1004fdbc:	call   0x1004d16c
1004fdc1:	pop    ecx
1004fdc2:	push   eax
1004fdc3:	call   0x1004ce73
1004fdc8:	add    esp,0xc
1004fdcb:	cmp    eax,edi
1004fdcd:	jne    0x1004fdde
1004fdcf:	mov    eax,DWORD PTR [esi+0xc]
1004fdd2:	test   al,al
1004fdd4:	jns    0x1004fde5
1004fdd6:	and    eax,0xfffffffd
1004fdd9:	mov    DWORD PTR [esi+0xc],eax
1004fddc:	jmp    0x1004fde5
1004fdde:	or     DWORD PTR [esi+0xc],0x20
1004fde2:	or     ebx,0xffffffff
1004fde5:	pop    edi
1004fde6:	mov    eax,DWORD PTR [esi+0x8]
1004fde9:	and    DWORD PTR [esi+0x4],0x0
1004fded:	mov    DWORD PTR [esi],eax
1004fdef:	pop    esi
1004fdf0:	mov    eax,ebx
1004fdf2:	pop    ebx
1004fdf3:	ret    
1004fdf4:	push   esi
1004fdf5:	mov    esi,DWORD PTR [esp+0x8]
1004fdf9:	test   esi,esi
1004fdfb:	jne    0x1004fe06
1004fdfd:	push   esi
1004fdfe:	call   0x1004fe36
1004fe03:	pop    ecx
1004fe04:	pop    esi
1004fe05:	ret    
1004fe06:	push   esi
1004fe07:	call   0x1004fd92
1004fe0c:	test   eax,eax
1004fe0e:	pop    ecx
1004fe0f:	je     0x1004fe16
1004fe11:	or     eax,0xffffffff
1004fe14:	pop    esi
1004fe15:	ret    
1004fe16:	test   WORD PTR [esi+0xc],0x4000
1004fe1c:	je     0x1004fe32
1004fe1e:	push   esi
1004fe1f:	call   0x1004d16c
1004fe24:	push   eax
1004fe25:	call   0x100505a0
1004fe2a:	pop    ecx
1004fe2b:	pop    ecx
1004fe2c:	neg    eax
1004fe2e:	sbb    eax,eax
1004fe30:	pop    esi
1004fe31:	ret    
1004fe32:	xor    eax,eax
1004fe34:	pop    esi
1004fe35:	ret    
1004fe36:	push   0x14
1004fe38:	push   0x100748f0
1004fe3d:	call   0x10046c94
1004fe42:	xor    edi,edi
1004fe44:	mov    DWORD PTR [ebp-0x1c],edi
1004fe47:	mov    DWORD PTR [ebp-0x24],edi
1004fe4a:	push   0x1
1004fe4c:	call   0x10047c9d
1004fe51:	pop    ecx
1004fe52:	mov    DWORD PTR [ebp-0x4],edi
1004fe55:	xor    esi,esi
1004fe57:	mov    DWORD PTR [ebp-0x20],esi
1004fe5a:	cmp    esi,DWORD PTR ds:0x10082460
1004fe60:	jge    0x1004fee9
1004fe66:	mov    eax,ds:0x10081440
1004fe6b:	lea    eax,[eax+esi*4]
1004fe6e:	cmp    DWORD PTR [eax],edi
1004fe70:	je     0x1004fed0
1004fe72:	mov    eax,DWORD PTR [eax]
1004fe74:	test   BYTE PTR [eax+0xc],0x83
1004fe78:	je     0x1004fed0
1004fe7a:	push   eax
1004fe7b:	push   esi
1004fe7c:	call   0x1004d0f7
1004fe81:	pop    ecx
1004fe82:	pop    ecx
1004fe83:	xor    edx,edx
1004fe85:	inc    edx
1004fe86:	mov    DWORD PTR [ebp-0x4],edx
1004fe89:	mov    eax,ds:0x10081440
1004fe8e:	mov    eax,DWORD PTR [eax+esi*4]
1004fe91:	mov    ecx,DWORD PTR [eax+0xc]
1004fe94:	test   cl,0x83
1004fe97:	je     0x1004fec8
1004fe99:	cmp    DWORD PTR [ebp+0x8],edx
1004fe9c:	jne    0x1004feaf
1004fe9e:	push   eax
1004fe9f:	call   0x1004fdf4
1004fea4:	pop    ecx
1004fea5:	cmp    eax,0xffffffff
1004fea8:	je     0x1004fec8
1004feaa:	inc    DWORD PTR [ebp-0x1c]
1004fead:	jmp    0x1004fec8
1004feaf:	cmp    DWORD PTR [ebp+0x8],edi
1004feb2:	jne    0x1004fec8
1004feb4:	test   cl,0x2
1004feb7:	je     0x1004fec8
1004feb9:	push   eax
1004feba:	call   0x1004fdf4
1004febf:	pop    ecx
1004fec0:	cmp    eax,0xffffffff
1004fec3:	jne    0x1004fec8
1004fec5:	or     DWORD PTR [ebp-0x24],eax
1004fec8:	mov    DWORD PTR [ebp-0x4],edi
1004fecb:	call   0x1004fed8
1004fed0:	inc    esi
1004fed1:	jmp    0x1004fe57
1004fed3:	xor    edi,edi
1004fed5:	mov    esi,DWORD PTR [ebp-0x20]
1004fed8:	mov    eax,ds:0x10081440
1004fedd:	push   DWORD PTR [eax+esi*4]
1004fee0:	push   esi
1004fee1:	call   0x1004d149
1004fee6:	pop    ecx
1004fee7:	pop    ecx
1004fee8:	ret    
1004fee9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004fef0:	call   0x1004ff07
1004fef5:	cmp    DWORD PTR [ebp+0x8],0x1
1004fef9:	mov    eax,DWORD PTR [ebp-0x1c]
1004fefc:	je     0x1004ff01
1004fefe:	mov    eax,DWORD PTR [ebp-0x24]
1004ff01:	call   0x10046cd9
1004ff06:	ret    
1004ff07:	push   0x1
1004ff09:	call   0x10047bc5
1004ff0e:	pop    ecx
1004ff0f:	ret    
1004ff10:	push   0x1
1004ff12:	call   0x1004fe36
1004ff17:	pop    ecx
1004ff18:	ret    
1004ff19:	push   ebp
1004ff1a:	mov    ebp,esp
1004ff1c:	push   ecx
1004ff1d:	push   esi
1004ff1e:	mov    esi,DWORD PTR [ebp+0xc]
1004ff21:	push   esi
1004ff22:	call   0x1004d16c
1004ff27:	mov    DWORD PTR [ebp+0xc],eax
1004ff2a:	mov    eax,DWORD PTR [esi+0xc]
1004ff2d:	test   al,0x82
1004ff2f:	pop    ecx
1004ff30:	jne    0x1004ff4b
1004ff32:	call   0x10046b55
1004ff37:	mov    DWORD PTR [eax],0x9
1004ff3d:	or     DWORD PTR [esi+0xc],0x20
1004ff41:	mov    eax,0xffff
1004ff46:	jmp    0x10050086
1004ff4b:	test   al,0x40
1004ff4d:	je     0x1004ff5c
1004ff4f:	call   0x10046b55
1004ff54:	mov    DWORD PTR [eax],0x22
1004ff5a:	jmp    0x1004ff3d
1004ff5c:	test   al,0x1
1004ff5e:	je     0x1004ff77
1004ff60:	and    DWORD PTR [esi+0x4],0x0
1004ff64:	test   al,0x10
1004ff66:	je     0x1004fff7
1004ff6c:	mov    ecx,DWORD PTR [esi+0x8]
1004ff6f:	and    eax,0xfffffffe
1004ff72:	mov    DWORD PTR [esi],ecx
1004ff74:	mov    DWORD PTR [esi+0xc],eax
1004ff77:	mov    eax,DWORD PTR [esi+0xc]
1004ff7a:	and    DWORD PTR [esi+0x4],0x0
1004ff7e:	and    DWORD PTR [ebp-0x4],0x0
1004ff82:	push   ebx
1004ff83:	push   0x2
1004ff85:	and    eax,0xffffffef
1004ff88:	pop    ebx
1004ff89:	or     eax,ebx
1004ff8b:	test   ax,0x10c
1004ff8f:	mov    DWORD PTR [esi+0xc],eax
1004ff92:	jne    0x1004ffc0
1004ff94:	call   0x1004cff1
1004ff99:	add    eax,0x20
1004ff9c:	cmp    esi,eax
1004ff9e:	je     0x1004ffac
1004ffa0:	call   0x1004cff1
1004ffa5:	add    eax,0x40
1004ffa8:	cmp    esi,eax
1004ffaa:	jne    0x1004ffb9
1004ffac:	push   DWORD PTR [ebp+0xc]
1004ffaf:	call   0x1004cf93
1004ffb4:	test   eax,eax
1004ffb6:	pop    ecx
1004ffb7:	jne    0x1004ffc0
1004ffb9:	push   esi
1004ffba:	call   0x1004cf4f
1004ffbf:	pop    ecx
1004ffc0:	test   WORD PTR [esi+0xc],0x108
1004ffc6:	push   edi
1004ffc7:	je     0x10050050
1004ffcd:	mov    eax,DWORD PTR [esi+0x8]
1004ffd0:	mov    edi,DWORD PTR [esi]
1004ffd2:	lea    ecx,[eax+0x2]
1004ffd5:	mov    DWORD PTR [esi],ecx
1004ffd7:	mov    ecx,DWORD PTR [esi+0x18]
1004ffda:	sub    edi,eax
1004ffdc:	sub    ecx,ebx
1004ffde:	test   edi,edi
1004ffe0:	mov    DWORD PTR [esi+0x4],ecx
1004ffe3:	jle    0x10050002
1004ffe5:	push   edi
1004ffe6:	push   eax
1004ffe7:	push   DWORD PTR [ebp+0xc]
1004ffea:	call   0x1004ce73
1004ffef:	add    esp,0xc
1004fff2:	mov    DWORD PTR [ebp-0x4],eax
1004fff5:	jmp    0x10050045
1004fff7:	or     eax,0x20
1004fffa:	mov    DWORD PTR [esi+0xc],eax
1004fffd:	jmp    0x1004ff41
10050002:	mov    ecx,DWORD PTR [ebp+0xc]
10050005:	cmp    ecx,0xffffffff
10050008:	je     0x10050025
1005000a:	cmp    ecx,0xfffffffe
1005000d:	je     0x10050025
1005000f:	mov    eax,ecx
10050011:	and    eax,0x1f
10050014:	imul   eax,eax,0x28
10050017:	mov    edx,ecx
10050019:	sar    edx,0x5
1005001c:	add    eax,DWORD PTR [edx*4+0x10082480]
10050023:	jmp    0x1005002a
10050025:	mov    eax,0x1007e9d0
1005002a:	test   BYTE PTR [eax+0x4],0x20
1005002e:	je     0x10050045
10050030:	push   ebx
10050031:	push   0x0
10050033:	push   0x0
10050035:	push   ecx
10050036:	call   0x1004c794
1005003b:	and    eax,edx
1005003d:	add    esp,0x10
10050040:	cmp    eax,0xffffffff
10050043:	je     0x10050072
10050045:	mov    eax,DWORD PTR [esi+0x8]
10050048:	mov    ebx,DWORD PTR [ebp+0x8]
1005004b:	mov    WORD PTR [eax],bx
1005004e:	jmp    0x1005006d
10050050:	push   0x2
10050052:	lea    eax,[ebp-0x4]
10050055:	push   eax
10050056:	push   DWORD PTR [ebp+0xc]
10050059:	mov    edi,ebx
1005005b:	mov    ebx,DWORD PTR [ebp+0x8]
1005005e:	mov    WORD PTR [ebp-0x4],bx
10050062:	call   0x1004ce73
10050067:	add    esp,0xc
1005006a:	mov    DWORD PTR [ebp-0x4],eax
1005006d:	cmp    DWORD PTR [ebp-0x4],edi
10050070:	je     0x1005007d
10050072:	or     DWORD PTR [esi+0xc],0x20
10050076:	mov    eax,0xffff
1005007b:	jmp    0x10050084
1005007d:	mov    eax,ebx
1005007f:	and    eax,0xffff
10050084:	pop    edi
10050085:	pop    ebx
10050086:	pop    esi
10050087:	leave  
10050088:	ret    
10050089:	push   ebp
1005008a:	mov    ebp,esp
1005008c:	sub    esp,0x10
1005008f:	push   ebx
10050090:	push   esi
10050091:	mov    esi,DWORD PTR [ebp+0xc]
10050094:	xor    ebx,ebx
10050096:	cmp    esi,ebx
10050098:	push   edi
10050099:	mov    edi,DWORD PTR [ebp+0x10]
1005009c:	jne    0x100500af
1005009e:	cmp    edi,ebx
100500a0:	jbe    0x100500af
100500a2:	mov    eax,DWORD PTR [ebp+0x8]
100500a5:	cmp    eax,ebx
100500a7:	je     0x100500ab
100500a9:	mov    DWORD PTR [eax],ebx
100500ab:	xor    eax,eax
100500ad:	jmp    0x1005012e
100500af:	mov    eax,DWORD PTR [ebp+0x8]
100500b2:	cmp    eax,ebx
100500b4:	je     0x100500b9
100500b6:	or     DWORD PTR [eax],0xffffffff
100500b9:	cmp    edi,0x7fffffff
100500bf:	jbe    0x100500dc
100500c1:	call   0x10046b55
100500c6:	push   0x16
100500c8:	pop    esi
100500c9:	push   ebx
100500ca:	push   ebx
100500cb:	push   ebx
100500cc:	push   ebx
100500cd:	push   ebx
100500ce:	mov    DWORD PTR [eax],esi
100500d0:	call   0x1004338c
100500d5:	add    esp,0x14
100500d8:	mov    eax,esi
100500da:	jmp    0x1005012e
100500dc:	push   DWORD PTR [ebp+0x18]
100500df:	lea    ecx,[ebp-0x10]
100500e2:	call   0x100454e5
100500e7:	mov    eax,DWORD PTR [ebp-0x10]
100500ea:	cmp    DWORD PTR [eax+0x14],ebx
100500ed:	jne    0x10050187
100500f3:	mov    ax,WORD PTR [ebp+0x14]
100500f7:	cmp    ax,0xff
100500fb:	jbe    0x10050133
100500fd:	cmp    esi,ebx
100500ff:	je     0x10050110
10050101:	cmp    edi,ebx
10050103:	jbe    0x10050110
10050105:	push   edi
10050106:	push   ebx
10050107:	push   esi
10050108:	call   0x10045c00
1005010d:	add    esp,0xc
10050110:	call   0x10046b55
10050115:	mov    DWORD PTR [eax],0x2a
1005011b:	call   0x10046b55
10050120:	cmp    BYTE PTR [ebp-0x4],bl
10050123:	mov    eax,DWORD PTR [eax]
10050125:	je     0x1005012e
10050127:	mov    ecx,DWORD PTR [ebp-0x8]
1005012a:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005012e:	pop    edi
1005012f:	pop    esi
10050130:	pop    ebx
10050131:	leave  
10050132:	ret    
10050133:	cmp    esi,ebx
10050135:	je     0x10050165
10050137:	cmp    edi,ebx
10050139:	ja     0x10050163
1005013b:	call   0x10046b55
10050140:	push   0x22
10050142:	pop    esi
10050143:	push   ebx
10050144:	push   ebx
10050145:	push   ebx
10050146:	push   ebx
10050147:	push   ebx
10050148:	mov    DWORD PTR [eax],esi
1005014a:	call   0x1004338c
1005014f:	add    esp,0x14
10050152:	cmp    BYTE PTR [ebp-0x4],bl
10050155:	je     0x100500d8
10050157:	mov    eax,DWORD PTR [ebp-0x8]
1005015a:	and    DWORD PTR [eax+0x70],0xfffffffd
1005015e:	jmp    0x100500d8
10050163:	mov    BYTE PTR [esi],al
10050165:	mov    eax,DWORD PTR [ebp+0x8]
10050168:	cmp    eax,ebx
1005016a:	je     0x10050172
1005016c:	mov    DWORD PTR [eax],0x1
10050172:	cmp    BYTE PTR [ebp-0x4],bl
10050175:	je     0x100500ab
1005017b:	mov    eax,DWORD PTR [ebp-0x8]
1005017e:	and    DWORD PTR [eax+0x70],0xfffffffd
10050182:	jmp    0x100500ab
10050187:	lea    ecx,[ebp+0xc]
1005018a:	push   ecx
1005018b:	push   ebx
1005018c:	push   edi
1005018d:	push   esi
1005018e:	push   0x1
10050190:	lea    ecx,[ebp+0x14]
10050193:	push   ecx
10050194:	push   ebx
10050195:	mov    DWORD PTR [ebp+0xc],ebx
10050198:	push   DWORD PTR [eax+0x4]
1005019b:	call   DWORD PTR ds:0x100660b8
100501a1:	cmp    eax,ebx
100501a3:	je     0x100501b9
100501a5:	cmp    DWORD PTR [ebp+0xc],ebx
100501a8:	jne    0x10050110
100501ae:	mov    ecx,DWORD PTR [ebp+0x8]
100501b1:	cmp    ecx,ebx
100501b3:	je     0x10050172
100501b5:	mov    DWORD PTR [ecx],eax
100501b7:	jmp    0x10050172
100501b9:	call   DWORD PTR ds:0x100660cc
100501bf:	cmp    eax,0x7a
100501c2:	jne    0x10050110
100501c8:	cmp    esi,ebx
100501ca:	je     0x1005013b
100501d0:	cmp    edi,ebx
100501d2:	jbe    0x1005013b
100501d8:	push   edi
100501d9:	push   ebx
100501da:	push   esi
100501db:	call   0x10045c00
100501e0:	add    esp,0xc
100501e3:	jmp    0x1005013b
100501e8:	push   0x0
100501ea:	push   DWORD PTR [esp+0x14]
100501ee:	push   DWORD PTR [esp+0x14]
100501f2:	push   DWORD PTR [esp+0x14]
100501f6:	push   DWORD PTR [esp+0x14]
100501fa:	call   0x10050089
100501ff:	add    esp,0x14
10050202:	ret    
10050203:	push   ebp
10050204:	mov    ebp,esp
10050206:	sub    esp,0x10
10050209:	mov    eax,ds:0x1007e030
1005020e:	xor    eax,ebp
10050210:	mov    DWORD PTR [ebp-0x4],eax
10050213:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10050217:	push   ebx
10050218:	push   esi
10050219:	push   edi
1005021a:	jge    0x10050223
1005021c:	xor    eax,eax
1005021e:	jmp    0x10050415
10050223:	mov    eax,ds:0x10080550
10050228:	mov    esi,DWORD PTR ds:0x10066234
1005022e:	xor    ebx,ebx
10050230:	xor    edi,edi
10050232:	inc    ebx
10050233:	cmp    eax,edi
10050235:	jne    0x1005026a
10050237:	lea    eax,[ebp-0x8]
1005023a:	push   eax
1005023b:	push   ebx
1005023c:	push   0x10066cc8
10050241:	push   ebx
10050242:	call   esi
10050244:	test   eax,eax
10050246:	je     0x10050250
10050248:	mov    DWORD PTR ds:0x10080550,ebx
1005024e:	jmp    0x1005026e
10050250:	call   DWORD PTR ds:0x100660cc
10050256:	cmp    eax,0x78
10050259:	jne    0x10050265
1005025b:	push   0x2
1005025d:	pop    eax
1005025e:	mov    ds:0x10080550,eax
10050263:	jmp    0x1005026a
10050265:	mov    eax,ds:0x10080550
1005026a:	cmp    eax,ebx
1005026c:	jne    0x10050281
1005026e:	push   DWORD PTR [ebp+0x18]
10050271:	push   DWORD PTR [ebp+0x14]
10050274:	push   DWORD PTR [ebp+0x10]
10050277:	push   DWORD PTR [ebp+0xc]
1005027a:	call   esi
1005027c:	jmp    0x10050415
10050281:	cmp    eax,0x2
10050284:	je     0x1005028a
10050286:	cmp    eax,edi
10050288:	jne    0x1005021c
1005028a:	cmp    DWORD PTR [ebp+0x20],edi
1005028d:	mov    DWORD PTR [ebp-0xc],edi
10050290:	jne    0x1005029d
10050292:	mov    eax,DWORD PTR [ebp+0x8]
10050295:	mov    eax,DWORD PTR [eax]
10050297:	mov    eax,DWORD PTR [eax+0x14]
1005029a:	mov    DWORD PTR [ebp+0x20],eax
1005029d:	cmp    DWORD PTR [ebp+0x1c],edi
100502a0:	jne    0x100502ad
100502a2:	mov    eax,DWORD PTR [ebp+0x8]
100502a5:	mov    eax,DWORD PTR [eax]
100502a7:	mov    eax,DWORD PTR [eax+0x4]
100502aa:	mov    DWORD PTR [ebp+0x1c],eax
100502ad:	push   DWORD PTR [ebp+0x20]
100502b0:	call   0x1004f434
100502b5:	cmp    DWORD PTR [ebp+0x1c],eax
100502b8:	pop    ecx
100502b9:	je     0x100502c3
100502bb:	cmp    eax,0xffffffff
100502be:	je     0x100502c3
100502c0:	mov    DWORD PTR [ebp+0x1c],eax
100502c3:	mov    ebx,DWORD PTR ds:0x100660b8
100502c9:	push   edi
100502ca:	push   edi
100502cb:	push   edi
100502cc:	push   edi
100502cd:	push   DWORD PTR [ebp+0x14]
100502d0:	push   DWORD PTR [ebp+0x10]
100502d3:	push   edi
100502d4:	push   DWORD PTR [ebp+0x1c]
100502d7:	call   ebx
100502d9:	mov    esi,eax
100502db:	cmp    esi,edi
100502dd:	mov    DWORD PTR [ebp-0x10],esi
100502e0:	je     0x1005021c
100502e6:	jle    0x10050323
100502e8:	cmp    esi,0xffffffe0
100502eb:	ja     0x10050323
100502ed:	lea    eax,[esi+0x8]
100502f0:	cmp    eax,0x400
100502f5:	ja     0x1005030a
100502f7:	call   0x1004b6f0
100502fc:	mov    eax,esp
100502fe:	cmp    eax,edi
10050300:	je     0x1005031e
10050302:	mov    DWORD PTR [eax],0xcccc
10050308:	jmp    0x1005031b
1005030a:	push   eax
1005030b:	call   0x10044f8d
10050310:	cmp    eax,edi
10050312:	pop    ecx
10050313:	je     0x1005031e
10050315:	mov    DWORD PTR [eax],0xdddd
1005031b:	add    eax,0x8
1005031e:	mov    DWORD PTR [ebp-0x8],eax
10050321:	jmp    0x10050326
10050323:	mov    DWORD PTR [ebp-0x8],edi
10050326:	cmp    DWORD PTR [ebp-0x8],edi
10050329:	je     0x1005021c
1005032f:	push   esi
10050330:	push   edi
10050331:	push   DWORD PTR [ebp-0x8]
10050334:	call   0x10045c00
10050339:	add    esp,0xc
1005033c:	push   edi
1005033d:	push   edi
1005033e:	push   esi
1005033f:	push   DWORD PTR [ebp-0x8]
10050342:	push   DWORD PTR [ebp+0x14]
10050345:	push   DWORD PTR [ebp+0x10]
10050348:	push   edi
10050349:	push   DWORD PTR [ebp+0x1c]
1005034c:	call   ebx
1005034e:	test   eax,eax
10050350:	je     0x10050409
10050356:	lea    eax,[esi+0x1]
10050359:	cmp    eax,edi
1005035b:	jle    0x100503a1
1005035d:	cmp    eax,0x7ffffff0
10050362:	ja     0x100503a1
10050364:	lea    eax,[esi+esi*1+0xa]
10050368:	cmp    eax,0x400
1005036d:	ja     0x10050389
1005036f:	call   0x1004b6f0
10050374:	mov    ebx,esp
10050376:	cmp    ebx,edi
10050378:	je     0x10050409
1005037e:	mov    DWORD PTR [ebx],0xcccc
10050384:	add    ebx,0x8
10050387:	jmp    0x100503a3
10050389:	push   eax
1005038a:	call   0x10044f8d
1005038f:	cmp    eax,edi
10050391:	pop    ecx
10050392:	je     0x1005039d
10050394:	mov    DWORD PTR [eax],0xdddd
1005039a:	add    eax,0x8
1005039d:	mov    ebx,eax
1005039f:	jmp    0x100503a3
100503a1:	xor    ebx,ebx
100503a3:	cmp    ebx,edi
100503a5:	je     0x10050409
100503a7:	cmp    DWORD PTR [ebp+0x20],edi
100503aa:	jne    0x100503b7
100503ac:	mov    eax,DWORD PTR [ebp+0x8]
100503af:	mov    eax,DWORD PTR [eax]
100503b1:	mov    eax,DWORD PTR [eax+0x14]
100503b4:	mov    DWORD PTR [ebp+0x20],eax
100503b7:	mov    edi,DWORD PTR [ebp+0x14]
100503ba:	push   ebx
100503bb:	push   DWORD PTR [ebp-0x10]
100503be:	add    edi,edi
100503c0:	push   DWORD PTR [ebp-0x8]
100503c3:	lea    esi,[edi+ebx*1]
100503c6:	push   DWORD PTR [ebp+0xc]
100503c9:	or     WORD PTR [esi],0xffff
100503ce:	push   DWORD PTR [ebp+0x20]
100503d1:	or     WORD PTR [esi-0x2],0xffff
100503d7:	call   DWORD PTR ds:0x10066230
100503dd:	cmp    WORD PTR [esi-0x2],0xffff
100503e3:	mov    DWORD PTR [ebp-0xc],eax
100503e6:	je     0x100503fe
100503e8:	cmp    WORD PTR [esi],0xffff
100503ed:	jne    0x100503fe
100503ef:	push   edi
100503f0:	push   ebx
100503f1:	push   DWORD PTR [ebp+0x18]
100503f4:	call   0x100456c0
100503f9:	add    esp,0xc
100503fc:	jmp    0x10050402
100503fe:	and    DWORD PTR [ebp-0xc],0x0
10050402:	push   ebx
10050403:	call   0x1001b365
10050408:	pop    ecx
10050409:	push   DWORD PTR [ebp-0x8]
1005040c:	call   0x1001b365
10050411:	mov    eax,DWORD PTR [ebp-0xc]
10050414:	pop    ecx
10050415:	lea    esp,[ebp-0x1c]
10050418:	pop    edi
10050419:	pop    esi
1005041a:	pop    ebx
1005041b:	mov    ecx,DWORD PTR [ebp-0x4]
1005041e:	xor    ecx,ebp
10050420:	call   0x10042e97
10050425:	leave  
10050426:	ret    
10050427:	push   ebp
10050428:	mov    ebp,esp
1005042a:	sub    esp,0x10
1005042d:	push   DWORD PTR [ebp+0x8]
10050430:	lea    ecx,[ebp-0x10]
10050433:	call   0x100454e5
10050438:	push   DWORD PTR [ebp+0x20]
1005043b:	lea    eax,[ebp-0x10]
1005043e:	push   DWORD PTR [ebp+0x1c]
10050441:	push   DWORD PTR [ebp+0x18]
10050444:	push   DWORD PTR [ebp+0x14]
10050447:	push   DWORD PTR [ebp+0x10]
1005044a:	push   DWORD PTR [ebp+0xc]
1005044d:	push   eax
1005044e:	call   0x10050203
10050453:	add    esp,0x1c
10050456:	cmp    BYTE PTR [ebp-0x4],0x0
1005045a:	je     0x10050463
1005045c:	mov    ecx,DWORD PTR [ebp-0x8]
1005045f:	and    DWORD PTR [ecx+0x70],0xfffffffd
10050463:	leave  
10050464:	ret    
10050465:	xor    eax,eax
10050467:	push   eax
10050468:	push   eax
10050469:	push   0x3
1005046b:	push   eax
1005046c:	push   0x3
1005046e:	push   0x40000000
10050473:	push   0x10067ebc
10050478:	call   DWORD PTR ds:0x10066254
1005047e:	mov    ds:0x1007ef74,eax
10050483:	ret    
10050484:	mov    eax,ds:0x1007ef74
10050489:	cmp    eax,0xffffffff
1005048c:	push   esi
1005048d:	mov    esi,DWORD PTR ds:0x10066070
10050493:	je     0x1005049d
10050495:	cmp    eax,0xfffffffe
10050498:	je     0x1005049d
1005049a:	push   eax
1005049b:	call   esi
1005049d:	mov    eax,ds:0x1007ef70
100504a2:	cmp    eax,0xffffffff
100504a5:	je     0x100504af
100504a7:	cmp    eax,0xfffffffe
100504aa:	je     0x100504af
100504ac:	push   eax
100504ad:	call   esi
100504af:	pop    esi
100504b0:	ret    
100504b1:	push   ebx
100504b2:	push   esi
100504b3:	mov    esi,DWORD PTR [esp+0xc]
100504b7:	push   edi
100504b8:	xor    edi,edi
100504ba:	or     ebx,0xffffffff
100504bd:	cmp    esi,edi
100504bf:	jne    0x100504de
100504c1:	call   0x10046b55
100504c6:	push   edi
100504c7:	push   edi
100504c8:	push   edi
100504c9:	push   edi
100504ca:	push   edi
100504cb:	mov    DWORD PTR [eax],0x16
100504d1:	call   0x1004338c
100504d6:	add    esp,0x14
100504d9:	or     eax,0xffffffff
100504dc:	jmp    0x10050520
100504de:	test   BYTE PTR [esi+0xc],0x83
100504e2:	je     0x1005051b
100504e4:	push   esi
100504e5:	call   0x1004fd92
100504ea:	push   esi
100504eb:	mov    ebx,eax
100504ed:	call   0x10050852
100504f2:	push   esi
100504f3:	call   0x1004d16c
100504f8:	push   eax
100504f9:	call   0x10050785
100504fe:	add    esp,0x10
10050501:	test   eax,eax
10050503:	jge    0x1005050a
10050505:	or     ebx,0xffffffff
10050508:	jmp    0x1005051b
1005050a:	mov    eax,DWORD PTR [esi+0x1c]
1005050d:	cmp    eax,edi
1005050f:	je     0x1005051b
10050511:	push   eax
10050512:	call   0x10043508
10050517:	pop    ecx
10050518:	mov    DWORD PTR [esi+0x1c],edi
1005051b:	mov    DWORD PTR [esi+0xc],edi
1005051e:	mov    eax,ebx
10050520:	pop    edi
10050521:	pop    esi
10050522:	pop    ebx
10050523:	ret    
10050524:	push   0xc
10050526:	push   0x10074918
1005052b:	call   0x10046c94
10050530:	or     DWORD PTR [ebp-0x1c],0xffffffff
10050534:	xor    eax,eax
10050536:	mov    esi,DWORD PTR [ebp+0x8]
10050539:	xor    edi,edi
1005053b:	cmp    esi,edi
1005053d:	setne  al
10050540:	cmp    eax,edi
10050542:	jne    0x10050561
10050544:	call   0x10046b55
10050549:	mov    DWORD PTR [eax],0x16
1005054f:	push   edi
10050550:	push   edi
10050551:	push   edi
10050552:	push   edi
10050553:	push   edi
10050554:	call   0x1004338c
10050559:	add    esp,0x14
1005055c:	or     eax,0xffffffff
1005055f:	jmp    0x1005056d
10050561:	test   BYTE PTR [esi+0xc],0x40
10050565:	je     0x10050573
10050567:	mov    DWORD PTR [esi+0xc],edi
1005056a:	mov    eax,DWORD PTR [ebp-0x1c]
1005056d:	call   0x10046cd9
10050572:	ret    
10050573:	push   esi
10050574:	call   0x1004d0c8
10050579:	pop    ecx
1005057a:	mov    DWORD PTR [ebp-0x4],edi
1005057d:	push   esi
1005057e:	call   0x100504b1
10050583:	pop    ecx
10050584:	mov    DWORD PTR [ebp-0x1c],eax
10050587:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005058e:	call   0x10050598
10050593:	jmp    0x1005056a
10050595:	mov    esi,DWORD PTR [ebp+0x8]
10050598:	push   esi
10050599:	call   0x1004d11a
1005059e:	pop    ecx
1005059f:	ret    
100505a0:	push   0x10
100505a2:	push   0x10074938
100505a7:	call   0x10046c94
100505ac:	mov    eax,DWORD PTR [ebp+0x8]
100505af:	cmp    eax,0xfffffffe
100505b2:	jne    0x100505c7
100505b4:	call   0x10046b55
100505b9:	mov    DWORD PTR [eax],0x9
100505bf:	or     eax,0xffffffff
100505c2:	jmp    0x10050671
100505c7:	xor    ebx,ebx
100505c9:	cmp    eax,ebx
100505cb:	jl     0x100505d5
100505cd:	cmp    eax,DWORD PTR ds:0x10082464
100505d3:	jb     0x100505ef
100505d5:	call   0x10046b55
100505da:	mov    DWORD PTR [eax],0x9
100505e0:	push   ebx
100505e1:	push   ebx
100505e2:	push   ebx
100505e3:	push   ebx
100505e4:	push   ebx
100505e5:	call   0x1004338c
100505ea:	add    esp,0x14
100505ed:	jmp    0x100505bf
100505ef:	mov    ecx,eax
100505f1:	sar    ecx,0x5
100505f4:	lea    edi,[ecx*4+0x10082480]
100505fb:	mov    esi,eax
100505fd:	and    esi,0x1f
10050600:	imul   esi,esi,0x28
10050603:	mov    ecx,DWORD PTR [edi]
10050605:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
1005060a:	and    ecx,0x1
1005060d:	je     0x100505d5
1005060f:	push   eax
10050610:	call   0x1004f9d0
10050615:	pop    ecx
10050616:	mov    DWORD PTR [ebp-0x4],ebx
10050619:	mov    eax,DWORD PTR [edi]
1005061b:	test   BYTE PTR [esi+eax*1+0x4],0x1
10050620:	je     0x10050653
10050622:	push   DWORD PTR [ebp+0x8]
10050625:	call   0x1004f95f
1005062a:	pop    ecx
1005062b:	push   eax
1005062c:	call   DWORD PTR ds:0x100660d8
10050632:	test   eax,eax
10050634:	jne    0x10050641
10050636:	call   DWORD PTR ds:0x100660cc
1005063c:	mov    DWORD PTR [ebp-0x1c],eax
1005063f:	jmp    0x10050644
10050641:	mov    DWORD PTR [ebp-0x1c],ebx
10050644:	cmp    DWORD PTR [ebp-0x1c],ebx
10050647:	je     0x10050662
10050649:	call   0x10046b68
1005064e:	mov    ecx,DWORD PTR [ebp-0x1c]
10050651:	mov    DWORD PTR [eax],ecx
10050653:	call   0x10046b55
10050658:	mov    DWORD PTR [eax],0x9
1005065e:	or     DWORD PTR [ebp-0x1c],0xffffffff
10050662:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050669:	call   0x10050677
1005066e:	mov    eax,DWORD PTR [ebp-0x1c]
10050671:	call   0x10046cd9
10050676:	ret    
10050677:	push   DWORD PTR [ebp+0x8]
1005067a:	call   0x1004fa70
1005067f:	pop    ecx
10050680:	ret    
10050681:	int3   
10050682:	int3   
10050683:	int3   
10050684:	int3   
10050685:	int3   
10050686:	int3   
10050687:	int3   
10050688:	int3   
10050689:	int3   
1005068a:	int3   
1005068b:	int3   
1005068c:	int3   
1005068d:	int3   
1005068e:	int3   
1005068f:	int3   
10050690:	push   ebp
10050691:	mov    ebp,esp
10050693:	push   edi
10050694:	push   esi
10050695:	push   ebx
10050696:	mov    ecx,DWORD PTR [ebp+0x10]
10050699:	or     ecx,ecx
1005069b:	je     0x100506ea
1005069d:	mov    esi,DWORD PTR [ebp+0x8]
100506a0:	mov    edi,DWORD PTR [ebp+0xc]
100506a3:	mov    bh,0x41
100506a5:	mov    bl,0x5a
100506a7:	mov    dh,0x20
100506a9:	lea    ecx,[ecx+0x0]
100506ac:	mov    ah,BYTE PTR [esi]
100506ae:	or     ah,ah
100506b0:	mov    al,BYTE PTR [edi]
100506b2:	je     0x100506db
100506b4:	or     al,al
100506b6:	je     0x100506db
100506b8:	add    esi,0x1
100506bb:	add    edi,0x1
100506be:	cmp    ah,bh
100506c0:	jb     0x100506c8
100506c2:	cmp    ah,bl
100506c4:	ja     0x100506c8
100506c6:	add    ah,dh
100506c8:	cmp    al,bh
100506ca:	jb     0x100506d2
100506cc:	cmp    al,bl
100506ce:	ja     0x100506d2
100506d0:	add    al,dh
100506d2:	cmp    ah,al
100506d4:	jne    0x100506e1
100506d6:	sub    ecx,0x1
100506d9:	jne    0x100506ac
100506db:	xor    ecx,ecx
100506dd:	cmp    ah,al
100506df:	je     0x100506ea
100506e1:	mov    ecx,0xffffffff
100506e6:	jb     0x100506ea
100506e8:	neg    ecx
100506ea:	mov    eax,ecx
100506ec:	pop    ebx
100506ed:	pop    esi
100506ee:	pop    edi
100506ef:	leave  
100506f0:	ret    
100506f1:	push   esi
100506f2:	mov    esi,DWORD PTR [esp+0x8]
100506f6:	push   edi
100506f7:	push   esi
100506f8:	call   0x1004f95f
100506fd:	cmp    eax,0xffffffff
10050700:	pop    ecx
10050701:	je     0x10050750
10050703:	cmp    esi,0x1
10050706:	mov    eax,ds:0x10082480
1005070b:	jne    0x10050713
1005070d:	test   BYTE PTR [eax+0x54],0x1
10050711:	jne    0x1005071e
10050713:	cmp    esi,0x2
10050716:	jne    0x10050734
10050718:	test   BYTE PTR [eax+0x2c],0x1
1005071c:	je     0x10050734
1005071e:	push   0x2
10050720:	call   0x1004f95f
10050725:	push   0x1
10050727:	mov    edi,eax
10050729:	call   0x1004f95f
1005072e:	cmp    eax,edi
10050730:	pop    ecx
10050731:	pop    ecx
10050732:	je     0x10050750
10050734:	push   esi
10050735:	call   0x1004f95f
1005073a:	pop    ecx
1005073b:	push   eax
1005073c:	call   DWORD PTR ds:0x10066070
10050742:	test   eax,eax
10050744:	jne    0x10050750
10050746:	call   DWORD PTR ds:0x100660cc
1005074c:	mov    edi,eax
1005074e:	jmp    0x10050752
10050750:	xor    edi,edi
10050752:	push   esi
10050753:	call   0x1004f8de
10050758:	mov    eax,esi
1005075a:	and    esi,0x1f
1005075d:	imul   esi,esi,0x28
10050760:	sar    eax,0x5
10050763:	test   edi,edi
10050765:	mov    eax,DWORD PTR [eax*4+0x10082480]
1005076c:	pop    ecx
1005076d:	mov    BYTE PTR [eax+esi*1+0x4],0x0
10050772:	je     0x10050780
10050774:	push   edi
10050775:	call   0x10046b7b
1005077a:	pop    ecx
1005077b:	or     eax,0xffffffff
1005077e:	jmp    0x10050782
10050780:	xor    eax,eax
10050782:	pop    edi
10050783:	pop    esi
10050784:	ret    
10050785:	push   0x10
10050787:	push   0x10074958
1005078c:	call   0x10046c94
10050791:	mov    eax,DWORD PTR [ebp+0x8]
10050794:	cmp    eax,0xfffffffe
10050797:	jne    0x100507b4
10050799:	call   0x10046b68
1005079e:	and    DWORD PTR [eax],0x0
100507a1:	call   0x10046b55
100507a6:	mov    DWORD PTR [eax],0x9
100507ac:	or     eax,0xffffffff
100507af:	jmp    0x10050842
100507b4:	xor    edi,edi
100507b6:	cmp    eax,edi
100507b8:	jl     0x100507c2
100507ba:	cmp    eax,DWORD PTR ds:0x10082464
100507c0:	jb     0x100507e3
100507c2:	call   0x10046b68
100507c7:	mov    DWORD PTR [eax],edi
100507c9:	call   0x10046b55
100507ce:	mov    DWORD PTR [eax],0x9
100507d4:	push   edi
100507d5:	push   edi
100507d6:	push   edi
100507d7:	push   edi
100507d8:	push   edi
100507d9:	call   0x1004338c
100507de:	add    esp,0x14
100507e1:	jmp    0x100507ac
100507e3:	mov    ecx,eax
100507e5:	sar    ecx,0x5
100507e8:	lea    ebx,[ecx*4+0x10082480]
100507ef:	mov    esi,eax
100507f1:	and    esi,0x1f
100507f4:	imul   esi,esi,0x28
100507f7:	mov    ecx,DWORD PTR [ebx]
100507f9:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
100507fe:	and    ecx,0x1
10050801:	je     0x100507c2
10050803:	push   eax
10050804:	call   0x1004f9d0
10050809:	pop    ecx
1005080a:	mov    DWORD PTR [ebp-0x4],edi
1005080d:	mov    eax,DWORD PTR [ebx]
1005080f:	test   BYTE PTR [eax+esi*1+0x4],0x1
10050814:	je     0x10050824
10050816:	push   DWORD PTR [ebp+0x8]
10050819:	call   0x100506f1
1005081e:	pop    ecx
1005081f:	mov    DWORD PTR [ebp-0x1c],eax
10050822:	jmp    0x10050833
10050824:	call   0x10046b55
10050829:	mov    DWORD PTR [eax],0x9
1005082f:	or     DWORD PTR [ebp-0x1c],0xffffffff
10050833:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005083a:	call   0x10050848
1005083f:	mov    eax,DWORD PTR [ebp-0x1c]
10050842:	call   0x10046cd9
10050847:	ret    
10050848:	push   DWORD PTR [ebp+0x8]
1005084b:	call   0x1004fa70
10050850:	pop    ecx
10050851:	ret    
10050852:	push   esi
10050853:	mov    esi,DWORD PTR [esp+0x8]
10050857:	mov    eax,DWORD PTR [esi+0xc]
1005085a:	test   al,0x83
1005085c:	je     0x1005087c
1005085e:	test   al,0x8
10050860:	je     0x1005087c
10050862:	push   DWORD PTR [esi+0x8]
10050865:	call   0x10043508
1005086a:	and    DWORD PTR [esi+0xc],0xfffffbf7
10050871:	xor    eax,eax
10050873:	pop    ecx
10050874:	mov    DWORD PTR [esi],eax
10050876:	mov    DWORD PTR [esi+0x8],eax
10050879:	mov    DWORD PTR [esi+0x4],eax
1005087c:	pop    esi
1005087d:	ret    
1005087e:	xor    eax,eax
10050880:	cmp    DWORD PTR [esp+0x8],eax
10050884:	jbe    0x10050897
10050886:	mov    ecx,DWORD PTR [esp+0x4]
1005088a:	cmp    BYTE PTR [ecx],0x0
1005088d:	je     0x10050897
1005088f:	inc    eax
10050890:	inc    ecx
10050891:	cmp    eax,DWORD PTR [esp+0x8]
10050895:	jb     0x1005088a
10050897:	ret    
10050898:	int3   
10050899:	int3   
1005089a:	int3   
1005089b:	int3   
1005089c:	int3   
1005089d:	int3   
1005089e:	int3   
1005089f:	int3   
100508a0:	push   ebp
100508a1:	mov    ebp,esp
100508a3:	push   0xfffffffe
100508a5:	push   0x10074978
100508aa:	push   0x10046cf0
100508af:	mov    eax,fs:0x0
100508b5:	push   eax
100508b6:	sub    esp,0x18
100508b9:	mov    eax,ds:0x1007e030
100508be:	xor    DWORD PTR [ebp-0x8],eax
100508c1:	xor    eax,ebp
100508c3:	mov    DWORD PTR [ebp-0x1c],eax
100508c6:	push   ebx
100508c7:	push   esi
100508c8:	push   edi
100508c9:	push   eax
100508ca:	lea    eax,[ebp-0x10]
100508cd:	mov    fs:0x0,eax
100508d3:	mov    DWORD PTR [ebp-0x18],esp
100508d6:	mov    esi,DWORD PTR [ebp+0x8]
100508d9:	test   esi,esi
100508db:	je     0x10050932
100508dd:	push   esi
100508de:	call   DWORD PTR ds:0x100660dc
100508e4:	mov    edi,eax
100508e6:	add    edi,0x1
100508e9:	mov    DWORD PTR [ebp-0x20],edi
100508ec:	push   0x0
100508ee:	push   0x0
100508f0:	push   edi
100508f1:	push   esi
100508f2:	push   0x0
100508f4:	push   0x0
100508f6:	call   DWORD PTR ds:0x1006608c
100508fc:	mov    esi,eax
100508fe:	mov    DWORD PTR [ebp-0x28],esi
10050901:	test   esi,esi
10050903:	jne    0x10050939
10050905:	mov    esi,DWORD PTR ds:0x100660cc
1005090b:	call   esi
1005090d:	test   eax,eax
1005090f:	jg     0x10050920
10050911:	call   esi
10050913:	push   eax
10050914:	call   0x10050b90
10050919:	xor    eax,eax
1005091b:	jmp    0x10050a00
10050920:	call   esi
10050922:	and    eax,0xffff
10050927:	or     eax,0x80070000
1005092c:	push   eax
1005092d:	call   0x10050b90
10050932:	xor    eax,eax
10050934:	jmp    0x10050a00
10050939:	mov    DWORD PTR [ebp-0x4],0x0
10050940:	lea    eax,[esi+esi*1]
10050943:	cmp    esi,0x1000
10050949:	jge    0x10050963
1005094b:	call   0x1004b6f0
10050950:	mov    DWORD PTR [ebp-0x18],esp
10050953:	mov    eax,esp
10050955:	mov    ebx,eax
10050957:	mov    DWORD PTR [ebp-0x24],ebx
1005095a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050961:	jmp    0x10050995
10050963:	push   eax
10050964:	call   0x10044f8d
10050969:	add    esp,0x4
1005096c:	mov    ebx,eax
1005096e:	mov    DWORD PTR [ebp-0x24],ebx
10050971:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050978:	jmp    0x10050995
1005097a:	mov    eax,0x1
1005097f:	ret    
10050980:	mov    esp,DWORD PTR [ebp-0x18]
10050983:	xor    ebx,ebx
10050985:	mov    DWORD PTR [ebp-0x24],ebx
10050988:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005098f:	mov    edi,DWORD PTR [ebp-0x20]
10050992:	mov    esi,DWORD PTR [ebp-0x28]
10050995:	test   ebx,ebx
10050997:	jne    0x100509a7
10050999:	push   0x8007000e
1005099e:	call   0x10050b90
100509a3:	xor    eax,eax
100509a5:	jmp    0x10050a00
100509a7:	push   esi
100509a8:	push   ebx
100509a9:	push   edi
100509aa:	mov    ecx,DWORD PTR [ebp+0x8]
100509ad:	push   ecx
100509ae:	push   0x0
100509b0:	push   0x0
100509b2:	call   DWORD PTR ds:0x1006608c
100509b8:	test   eax,eax
100509ba:	jne    0x100509d6
100509bc:	cmp    esi,0x1000
100509c2:	jl     0x10050905
100509c8:	push   ebx
100509c9:	call   0x10043508
100509ce:	add    esp,0x4
100509d1:	jmp    0x10050905
100509d6:	push   ebx
100509d7:	call   DWORD PTR ds:0x100662b0
100509dd:	mov    edi,eax
100509df:	cmp    esi,0x1000
100509e5:	jl     0x100509f0
100509e7:	push   ebx
100509e8:	call   0x10043508
100509ed:	add    esp,0x4
100509f0:	test   edi,edi
100509f2:	jne    0x100509fe
100509f4:	push   0x8007000e
100509f9:	call   0x10050b90
100509fe:	mov    eax,edi
10050a00:	lea    esp,[ebp-0x38]
10050a03:	mov    ecx,DWORD PTR [ebp-0x10]
10050a06:	mov    DWORD PTR fs:0x0,ecx
10050a0d:	pop    ecx
10050a0e:	pop    edi
10050a0f:	pop    esi
10050a10:	pop    ebx
10050a11:	mov    ecx,DWORD PTR [ebp-0x1c]
10050a14:	xor    ecx,ebp
10050a16:	call   0x10042e97
10050a1b:	mov    esp,ebp
10050a1d:	pop    ebp
10050a1e:	ret    0x4
10050a21:	int3   
10050a22:	int3   
10050a23:	int3   
10050a24:	int3   
10050a25:	int3   
10050a26:	int3   
10050a27:	int3   
10050a28:	int3   
10050a29:	int3   
10050a2a:	int3   
10050a2b:	int3   
10050a2c:	int3   
10050a2d:	int3   
10050a2e:	int3   
10050a2f:	int3   
10050a30:	push   ebp
10050a31:	mov    ebp,esp
10050a33:	push   0xffffffff
10050a35:	push   0x1005f570
10050a3a:	mov    eax,fs:0x0
10050a40:	push   eax
10050a41:	push   ecx
10050a42:	push   ebx
10050a43:	push   esi
10050a44:	push   edi
10050a45:	mov    eax,ds:0x1007e030
10050a4a:	xor    eax,ebp
10050a4c:	push   eax
10050a4d:	lea    eax,[ebp-0xc]
10050a50:	mov    fs:0x0,eax
10050a56:	mov    DWORD PTR [ebp-0x10],esp
10050a59:	mov    edx,DWORD PTR [ebp+0x8]
10050a5c:	test   edx,edx
10050a5e:	je     0x10050acd
10050a60:	mov    eax,edx
10050a62:	lea    esi,[eax+0x2]
10050a65:	mov    cx,WORD PTR [eax]
10050a68:	add    eax,0x2
10050a6b:	test   cx,cx
10050a6e:	jne    0x10050a65
10050a70:	push   0x0
10050a72:	push   0x0
10050a74:	push   0x0
10050a76:	sub    eax,esi
10050a78:	push   0x0
10050a7a:	sar    eax,1
10050a7c:	lea    edi,[eax+0x1]
10050a7f:	push   edi
10050a80:	push   edx
10050a81:	push   0x0
10050a83:	push   0x0
10050a85:	call   DWORD PTR ds:0x100660b8
10050a8b:	mov    esi,eax
10050a8d:	test   esi,esi
10050a8f:	jne    0x10050ae3
10050a91:	mov    esi,DWORD PTR ds:0x100660cc
10050a97:	call   esi
10050a99:	test   eax,eax
10050a9b:	jg     0x10050abb
10050a9d:	call   esi
10050a9f:	push   eax
10050aa0:	call   0x10050b90
10050aa5:	xor    eax,eax
10050aa7:	mov    ecx,DWORD PTR [ebp-0xc]
10050aaa:	mov    DWORD PTR fs:0x0,ecx
10050ab1:	pop    ecx
10050ab2:	pop    edi
10050ab3:	pop    esi
10050ab4:	pop    ebx
10050ab5:	mov    esp,ebp
10050ab7:	pop    ebp
10050ab8:	ret    0x4
10050abb:	call   esi
10050abd:	and    eax,0xffff
10050ac2:	or     eax,0x80070000
10050ac7:	push   eax
10050ac8:	call   0x10050b90
10050acd:	xor    eax,eax
10050acf:	mov    ecx,DWORD PTR [ebp-0xc]
10050ad2:	mov    DWORD PTR fs:0x0,ecx
10050ad9:	pop    ecx
10050ada:	pop    edi
10050adb:	pop    esi
10050adc:	pop    ebx
10050add:	mov    esp,ebp
10050adf:	pop    ebp
10050ae0:	ret    0x4
10050ae3:	push   esi
10050ae4:	mov    DWORD PTR [ebp-0x4],0x0
10050aeb:	call   0x1004349e
10050af0:	mov    ebx,eax
10050af2:	add    esp,0x4
10050af5:	test   ebx,ebx
10050af7:	mov    DWORD PTR [ebp-0x4],0xffffffff
10050afe:	jne    0x10050b26
10050b00:	push   0x8007000e
10050b05:	call   0x10050b90
10050b0a:	xor    eax,eax
10050b0c:	mov    ecx,DWORD PTR [ebp-0xc]
10050b0f:	mov    DWORD PTR fs:0x0,ecx
10050b16:	pop    ecx
10050b17:	pop    edi
10050b18:	pop    esi
10050b19:	pop    ebx
10050b1a:	mov    esp,ebp
10050b1c:	pop    ebp
10050b1d:	ret    0x4
10050b20:	mov    eax,0x10050b00
10050b25:	ret    
10050b26:	mov    eax,DWORD PTR [ebp+0x8]
10050b29:	push   0x0
10050b2b:	push   0x0
10050b2d:	push   esi
10050b2e:	push   ebx
10050b2f:	push   edi
10050b30:	push   eax
10050b31:	push   0x0
10050b33:	push   0x0
10050b35:	call   DWORD PTR ds:0x100660b8
10050b3b:	test   eax,eax
10050b3d:	jne    0x10050b6c
10050b3f:	push   ebx
10050b40:	call   0x10042e92
10050b45:	mov    esi,DWORD PTR ds:0x100660cc
10050b4b:	add    esp,0x4
10050b4e:	xor    ebx,ebx
10050b50:	call   esi
10050b52:	test   eax,eax
10050b54:	jg     0x10050b5a
10050b56:	call   esi
10050b58:	jmp    0x10050b66
10050b5a:	call   esi
10050b5c:	and    eax,0xffff
10050b61:	or     eax,0x80070000
10050b66:	push   eax
10050b67:	call   0x10050b90
10050b6c:	mov    eax,ebx
10050b6e:	mov    ecx,DWORD PTR [ebp-0xc]
10050b71:	mov    DWORD PTR fs:0x0,ecx
10050b78:	pop    ecx
10050b79:	pop    edi
10050b7a:	pop    esi
10050b7b:	pop    ebx
10050b7c:	mov    esp,ebp
10050b7e:	pop    ebp
10050b7f:	ret    0x4
10050b82:	int3   
10050b83:	int3   
10050b84:	int3   
10050b85:	int3   
10050b86:	int3   
10050b87:	int3   
10050b88:	int3   
10050b89:	int3   
10050b8a:	int3   
10050b8b:	int3   
10050b8c:	int3   
10050b8d:	int3   
10050b8e:	int3   
10050b8f:	int3   
10050b90:	mov    eax,DWORD PTR [esp+0x4]
10050b94:	push   0x0
10050b96:	push   eax
10050b97:	call   DWORD PTR ds:0x1007ef90
10050b9d:	ret    0x4
10050ba0:	push   esi
10050ba1:	mov    esi,ecx
10050ba3:	mov    eax,DWORD PTR [esi+0x8]
10050ba6:	test   eax,eax
10050ba8:	mov    DWORD PTR [esi],0x10067ec8
10050bae:	je     0x10050bb8
10050bb0:	mov    ecx,DWORD PTR [eax]
10050bb2:	mov    edx,DWORD PTR [ecx+0x8]
10050bb5:	push   eax
10050bb6:	call   edx
10050bb8:	mov    esi,DWORD PTR [esi+0xc]
10050bbb:	test   esi,esi
10050bbd:	je     0x10050bc6
10050bbf:	push   esi
10050bc0:	call   DWORD PTR ds:0x1006622c
10050bc6:	pop    esi
10050bc7:	ret    
10050bc8:	int3   
10050bc9:	int3   
10050bca:	int3   
10050bcb:	int3   
10050bcc:	int3   
10050bcd:	int3   
10050bce:	int3   
10050bcf:	int3   
10050bd0:	sub    esp,0x10
10050bd3:	mov    eax,DWORD PTR [esp+0x14]
10050bd7:	mov    ecx,DWORD PTR [esp+0x18]
10050bdb:	push   0x100749ec
10050be0:	lea    edx,[esp+0x4]
10050be4:	push   edx
10050be5:	mov    DWORD PTR [esp+0x8],0x10067ec8
10050bed:	mov    DWORD PTR [esp+0xc],eax
10050bf1:	mov    DWORD PTR [esp+0x10],ecx
10050bf5:	mov    DWORD PTR [esp+0x14],0x0
10050bfd:	call   0x100479b4
10050c02:	int3   
10050c03:	int3   
10050c04:	int3   
10050c05:	int3   
10050c06:	int3   
10050c07:	int3   
10050c08:	int3   
10050c09:	int3   
10050c0a:	int3   
10050c0b:	int3   
10050c0c:	int3   
10050c0d:	int3   
10050c0e:	int3   
10050c0f:	int3   
10050c10:	mov    eax,DWORD PTR [esp+0x4]
10050c14:	push   esi
10050c15:	mov    esi,ecx
10050c17:	mov    DWORD PTR [esi],0x10067ec8
10050c1d:	mov    ecx,DWORD PTR [eax+0x4]
10050c20:	mov    DWORD PTR [esi+0x4],ecx
10050c23:	mov    edx,DWORD PTR [eax+0x8]
10050c26:	mov    eax,edx
10050c28:	test   eax,eax
10050c2a:	mov    DWORD PTR [esi+0x8],edx
10050c2d:	mov    DWORD PTR [esi+0xc],0x0
10050c34:	je     0x10050c3e
10050c36:	mov    ecx,DWORD PTR [eax]
10050c38:	mov    edx,DWORD PTR [ecx+0x4]
10050c3b:	push   eax
10050c3c:	call   edx
10050c3e:	mov    eax,esi
10050c40:	pop    esi
10050c41:	ret    0x4
10050c44:	int3   
10050c45:	int3   
10050c46:	int3   
10050c47:	int3   
10050c48:	int3   
10050c49:	int3   
10050c4a:	int3   
10050c4b:	int3   
10050c4c:	int3   
10050c4d:	int3   
10050c4e:	int3   
10050c4f:	int3   
10050c50:	push   esi
10050c51:	mov    esi,ecx
10050c53:	mov    eax,DWORD PTR [esi+0x8]
10050c56:	test   eax,eax
10050c58:	mov    DWORD PTR [esi],0x10067ec8
10050c5e:	je     0x10050c68
10050c60:	mov    ecx,DWORD PTR [eax]
10050c62:	mov    edx,DWORD PTR [ecx+0x8]
10050c65:	push   eax
10050c66:	call   edx
10050c68:	mov    eax,DWORD PTR [esi+0xc]
10050c6b:	test   eax,eax
10050c6d:	je     0x10050c76
10050c6f:	push   eax
10050c70:	call   DWORD PTR ds:0x1006622c
10050c76:	test   BYTE PTR [esp+0x8],0x1
10050c7b:	je     0x10050c86
10050c7d:	push   esi
10050c7e:	call   0x10042e92
10050c83:	add    esp,0x4
10050c86:	mov    eax,esi
10050c88:	pop    esi
10050c89:	ret    0x4
10050c8c:	jmp    DWORD PTR ds:0x100663d0
10050c92:	mov    eax,DWORD PTR [esp+0x4]
10050c96:	test   eax,eax
10050c98:	mov    DWORD PTR ds:0x10080558,0x1
10050ca2:	mov    DWORD PTR ds:0x1008055c,0x98
10050cac:	jne    0x10050cb3
10050cae:	mov    eax,0x10067ecc
10050cb3:	push   eax
10050cb4:	call   0x10050f0b
10050cb9:	test   eax,eax
10050cbb:	pop    ecx
10050cbc:	jne    0x10050cc4
10050cbe:	mov    eax,0x80004005
10050cc3:	ret    
10050cc4:	push   ebx
10050cc5:	push   esi
10050cc6:	push   edi
10050cc7:	push   0x0
10050cc9:	mov    esi,0x10080558
10050cce:	push   esi
10050ccf:	call   eax
10050cd1:	mov    ebx,eax
10050cd3:	mov    edi,0x80000000
10050cd8:	test   edi,ebx
10050cda:	pop    ecx
10050cdb:	pop    ecx
10050cdc:	je     0x10050ce7
10050cde:	call   0x10050ecb
10050ce3:	mov    eax,ebx
10050ce5:	jmp    0x10050d06
10050ce7:	call   0x10050e71
10050cec:	mov    ebx,eax
10050cee:	test   edi,ebx
10050cf0:	je     0x10050d04
10050cf2:	push   0x98
10050cf7:	push   0x0
10050cf9:	push   esi
10050cfa:	call   0x10045c00
10050cff:	add    esp,0xc
10050d02:	jmp    0x10050cde
10050d04:	xor    eax,eax
10050d06:	pop    edi
10050d07:	pop    esi
10050d08:	pop    ebx
10050d09:	ret    
10050d0a:	push   ebp
10050d0b:	mov    ebp,esp
10050d0d:	sub    esp,0x800
10050d13:	push   edi
10050d14:	push   DWORD PTR [ebp+0x8]
10050d17:	lea    eax,[ebp-0x400]
10050d1d:	push   0x10067ee4
10050d22:	push   eax
10050d23:	call   0x1005847f
10050d28:	lea    eax,[ebp-0x400]
10050d2e:	push   0x10067ee0
10050d33:	push   eax
10050d34:	call   0x10058c3c
10050d39:	mov    edi,eax
10050d3b:	add    esp,0x14
10050d3e:	test   edi,edi
10050d40:	je     0x10050db9
10050d42:	push   esi
10050d43:	mov    esi,0x400
10050d48:	jmp    0x10050d9c
10050d4a:	lea    eax,[ebp-0x400]
10050d50:	push   eax
10050d51:	call   0x10043010
10050d56:	test   eax,eax
10050d58:	pop    ecx
10050d59:	je     0x10050d9c
10050d5b:	cmp    BYTE PTR [ebp-0x400],0x23
10050d62:	je     0x10050d9c
10050d64:	lea    eax,[ebp+eax*1-0x401]
10050d6b:	cmp    BYTE PTR [eax],0xa
10050d6e:	jne    0x10050d73
10050d70:	mov    BYTE PTR [eax],0x0
10050d73:	lea    eax,[ebp-0x400]
10050d79:	push   eax
10050d7a:	push   DWORD PTR [ebp+0x8]
10050d7d:	lea    eax,[ebp-0x800]
10050d83:	push   0x10067ed8
10050d88:	push   esi
10050d89:	push   eax
10050d8a:	call   0x10059715
10050d8f:	lea    eax,[ebp-0x800]
10050d95:	push   eax
10050d96:	call   DWORD PTR [ebp+0xc]
10050d99:	add    esp,0x18
10050d9c:	push   edi
10050d9d:	lea    eax,[ebp-0x400]
10050da3:	push   esi
10050da4:	push   eax
10050da5:	call   0x1005958e
10050daa:	add    esp,0xc
10050dad:	test   eax,eax
10050daf:	jne    0x10050d4a
10050db1:	push   edi
10050db2:	call   0x10050524
10050db7:	pop    ecx
10050db8:	pop    esi
10050db9:	pop    edi
10050dba:	leave  
10050dbb:	ret    
10050dbc:	mov    eax,ds:0x1008056c
10050dc1:	test   eax,eax
10050dc3:	jne    0x10050dcb
10050dc5:	mov    eax,0xc1f30001
10050dca:	ret    
10050dcb:	jmp    eax
10050dcd:	mov    eax,ds:0x10080588
10050dd2:	test   eax,eax
10050dd4:	jne    0x10050ddc
10050dd6:	mov    eax,0xc1f30001
10050ddb:	ret    
10050ddc:	jmp    eax
10050dde:	mov    eax,ds:0x10080590
10050de3:	test   eax,eax
10050de5:	jne    0x10050ded
10050de7:	mov    eax,0xc1f30001
10050dec:	ret    
10050ded:	jmp    eax
10050def:	mov    eax,ds:0x10080594
10050df4:	test   eax,eax
10050df6:	je     0x10050dfa
10050df8:	jmp    eax
10050dfa:	ret    
10050dfb:	mov    eax,ds:0x10080598
10050e00:	test   eax,eax
10050e02:	jne    0x10050e0e
10050e04:	mov    eax,DWORD PTR [esp+0x8]
10050e08:	and    DWORD PTR [eax],0x0
10050e0b:	xor    eax,eax
10050e0d:	ret    
10050e0e:	jmp    eax
10050e10:	mov    eax,ds:0x1008059c
10050e15:	test   eax,eax
10050e17:	jne    0x10050e1f
10050e19:	mov    eax,0xc1f30001
10050e1e:	ret    
10050e1f:	jmp    eax
10050e21:	mov    eax,ds:0x100805a8
10050e26:	test   eax,eax
10050e28:	jne    0x10050e30
10050e2a:	mov    eax,0xc1f30001
10050e2f:	ret    
10050e30:	jmp    eax
10050e32:	mov    eax,ds:0x100805ac
10050e37:	test   eax,eax
10050e39:	je     0x10050e3d
10050e3b:	jmp    eax
10050e3d:	ret    
10050e3e:	mov    eax,ds:0x100805b0
10050e43:	test   eax,eax
10050e45:	jne    0x10050e51
10050e47:	mov    eax,DWORD PTR [esp+0x8]
10050e4b:	and    DWORD PTR [eax],0x0
10050e4e:	xor    eax,eax
10050e50:	ret    
10050e51:	jmp    eax
10050e53:	mov    eax,ds:0x100805b4
10050e58:	test   eax,eax
10050e5a:	jne    0x10050e62
10050e5c:	mov    eax,0xc1f30001
10050e61:	ret    
10050e62:	jmp    eax
10050e64:	mov    eax,DWORD PTR [ecx]
10050e66:	test   eax,eax
10050e68:	je     0x10050e70
10050e6a:	mov    ecx,DWORD PTR [eax]
10050e6c:	push   eax
10050e6d:	call   DWORD PTR [ecx+0x8]
10050e70:	ret    
10050e71:	push   0x100805f0
10050e76:	call   0x10050dcd
10050e7b:	mov    eax,ds:0x100805f0
10050e80:	neg    eax
10050e82:	sbb    eax,eax
10050e84:	and    eax,0x7fffbffb
10050e89:	pop    ecx
10050e8a:	add    eax,0x80004005
10050e8f:	ret    
10050e90:	push   0x8
10050e92:	call   0x1004349e
10050e97:	test   eax,eax
10050e99:	pop    ecx
10050e9a:	je     0x10050eb0
10050e9c:	mov    ecx,DWORD PTR ds:0x100805f8
10050ea2:	mov    DWORD PTR [eax+0x4],ecx
10050ea5:	mov    ecx,DWORD PTR [esp+0x4]
10050ea9:	mov    DWORD PTR [eax],ecx
10050eab:	mov    ds:0x100805f8,eax
10050eb0:	ret    
10050eb1:	push   0x8
10050eb3:	push   0x0
10050eb5:	push   DWORD PTR [esp+0xc]
10050eb9:	call   DWORD PTR ds:0x10066060
10050ebf:	test   eax,eax
10050ec1:	je     0x10050eca
10050ec3:	push   eax
10050ec4:	call   0x10050e90
10050ec9:	pop    ecx
10050eca:	ret    
10050ecb:	push   esi
10050ecc:	mov    esi,DWORD PTR ds:0x100660fc
10050ed2:	jmp    0x10050eed
10050ed4:	push   DWORD PTR [eax]
10050ed6:	call   esi
10050ed8:	mov    eax,ds:0x100805f8
10050edd:	mov    ecx,DWORD PTR [eax+0x4]
10050ee0:	push   eax
10050ee1:	mov    DWORD PTR ds:0x100805f8,ecx
10050ee7:	call   0x10042e92
10050eec:	pop    ecx
10050eed:	mov    eax,ds:0x100805f8
10050ef2:	test   eax,eax
10050ef4:	jne    0x10050ed4
10050ef6:	mov    eax,ds:0x100805f4
10050efb:	test   eax,eax
10050efd:	je     0x10050f09
10050eff:	push   eax
10050f00:	call   esi
10050f02:	and    DWORD PTR ds:0x100805f4,0x0
10050f09:	pop    esi
10050f0a:	ret    
10050f0b:	push   ebp
10050f0c:	mov    ebp,esp
10050f0e:	sub    esp,0x404
10050f14:	mov    eax,DWORD PTR [ebp+0x8]
10050f17:	cmp    BYTE PTR [eax],0x2e
10050f1a:	push   ebx
10050f1b:	mov    ebx,DWORD PTR ds:0x10066060
10050f21:	push   esi
10050f22:	jne    0x10050f36
10050f24:	cmp    BYTE PTR [eax+0x1],0x0
10050f28:	jne    0x10050f36
10050f2a:	mov    DWORD PTR [ebp+0x8],0x10067ecc
10050f31:	jmp    0x10050fcb
10050f36:	push   edi
10050f37:	mov    esi,0x400
10050f3c:	push   esi
10050f3d:	push   eax
10050f3e:	lea    eax,[ebp-0x404]
10050f44:	push   eax
10050f45:	call   0x1005992d
10050f4a:	mov    dl,BYTE PTR [ebp-0x404]
10050f50:	add    esp,0xc
10050f53:	xor    edi,edi
10050f55:	test   dl,dl
10050f57:	lea    eax,[ebp-0x404]
10050f5d:	je     0x10050fca
10050f5f:	mov    DWORD PTR [ebp-0x4],0x10067f20
10050f66:	mov    cl,0x2f
10050f68:	cmp    cl,dl
10050f6a:	jne    0x10050f6e
10050f6c:	mov    edi,eax
10050f6e:	inc    DWORD PTR [ebp-0x4]
10050f71:	mov    ecx,DWORD PTR [ebp-0x4]
10050f74:	mov    cl,BYTE PTR [ecx]
10050f76:	test   cl,cl
10050f78:	jne    0x10050f68
10050f7a:	inc    eax
10050f7b:	mov    dl,BYTE PTR [eax]
10050f7d:	test   dl,dl
10050f7f:	jne    0x10050f5f
10050f81:	test   edi,edi
10050f83:	je     0x10050fca
10050f85:	lea    eax,[ebp-0x404]
10050f8b:	push   0x10050eb1
10050f90:	push   eax
10050f91:	mov    BYTE PTR [edi],dl
10050f93:	call   0x10050d0a
10050f98:	pop    ecx
10050f99:	pop    ecx
10050f9a:	lea    eax,[ebp-0x404]
10050fa0:	push   0x10067f14
10050fa5:	push   eax
10050fa6:	call   0x10043010
10050fab:	pop    ecx
10050fac:	sub    esi,eax
10050fae:	push   esi
10050faf:	push   edi
10050fb0:	call   0x10059715
10050fb5:	add    esp,0xc
10050fb8:	push   0x8
10050fba:	push   0x0
10050fbc:	lea    eax,[ebp-0x404]
10050fc2:	push   eax
10050fc3:	call   ebx
10050fc5:	mov    ds:0x100805f4,eax
10050fca:	pop    edi
10050fcb:	push   0x8
10050fcd:	push   0x0
10050fcf:	push   DWORD PTR [ebp+0x8]
10050fd2:	call   ebx
10050fd4:	mov    esi,eax
10050fd6:	test   esi,esi
10050fd8:	je     0x10050ffb
10050fda:	push   esi
10050fdb:	call   0x10050e90
10050fe0:	mov    DWORD PTR [esp],0x10067efc
10050fe7:	push   esi
10050fe8:	call   DWORD PTR ds:0x1006612c
10050fee:	mov    esi,eax
10050ff0:	test   esi,esi
10050ff2:	jne    0x10050ff9
10050ff4:	call   0x10050ecb
10050ff9:	mov    eax,esi
10050ffb:	pop    esi
10050ffc:	pop    ebx
10050ffd:	leave  
10050ffe:	ret    
10050fff:	int3   
10051000:	push   esi
10051001:	mov    esi,DWORD PTR [eax+0x8]
10051004:	push   edi
10051005:	mov    edi,DWORD PTR [eax+0x14]
10051008:	mov    edx,ecx
1005100a:	shr    edx,0x8
1005100d:	mov    BYTE PTR [esi+edi*1],dl
10051010:	mov    edi,DWORD PTR [eax+0x8]
10051013:	mov    esi,0x1
10051018:	add    DWORD PTR [eax+0x14],esi
1005101b:	mov    edx,DWORD PTR [eax+0x14]
1005101e:	mov    BYTE PTR [edx+edi*1],cl
10051021:	add    DWORD PTR [eax+0x14],esi
10051024:	pop    edi
10051025:	pop    esi
10051026:	ret    
10051027:	int3   
10051028:	int3   
10051029:	int3   
1005102a:	int3   
1005102b:	int3   
1005102c:	int3   
1005102d:	int3   
1005102e:	int3   
1005102f:	int3   
10051030:	push   esi
10051031:	mov    esi,eax
10051033:	mov    eax,DWORD PTR [esi+0x1c]
10051036:	mov    ecx,DWORD PTR [esi+0x10]
10051039:	push   edi
1005103a:	mov    edi,DWORD PTR [eax+0x14]
1005103d:	cmp    edi,ecx
1005103f:	jbe    0x10051043
10051041:	mov    edi,ecx
10051043:	test   edi,edi
10051045:	je     0x1005107c
10051047:	mov    eax,DWORD PTR [eax+0x10]
1005104a:	mov    ecx,DWORD PTR [esi+0xc]
1005104d:	push   edi
1005104e:	push   eax
1005104f:	push   ecx
10051050:	call   0x10045180
10051055:	mov    eax,DWORD PTR [esi+0x1c]
10051058:	add    DWORD PTR [esi+0xc],edi
1005105b:	add    DWORD PTR [eax+0x10],edi
1005105e:	add    DWORD PTR [esi+0x14],edi
10051061:	sub    DWORD PTR [esi+0x10],edi
10051064:	mov    eax,DWORD PTR [esi+0x1c]
10051067:	sub    DWORD PTR [eax+0x14],edi
1005106a:	mov    esi,DWORD PTR [esi+0x1c]
1005106d:	add    esp,0xc
10051070:	cmp    DWORD PTR [esi+0x14],0x0
10051074:	jne    0x1005107c
10051076:	mov    edx,DWORD PTR [esi+0x8]
10051079:	mov    DWORD PTR [esi+0x10],edx
1005107c:	pop    edi
1005107d:	pop    esi
1005107e:	ret    
1005107f:	int3   
10051080:	push   esi
10051081:	push   edi
10051082:	mov    edi,DWORD PTR [esp+0xc]
10051086:	test   edi,edi
10051088:	je     0x10051856
1005108e:	mov    esi,DWORD PTR [edi+0x1c]
10051091:	test   esi,esi
10051093:	je     0x10051856
10051099:	mov    ecx,DWORD PTR [esp+0x10]
1005109d:	cmp    ecx,0x4
100510a0:	ja     0x10051856
100510a6:	cmp    DWORD PTR [edi+0xc],0x0
100510aa:	je     0x1005184e
100510b0:	cmp    DWORD PTR [edi],0x0
100510b3:	jne    0x100510bf
100510b5:	cmp    DWORD PTR [edi+0x4],0x0
100510b9:	jne    0x1005184e
100510bf:	mov    eax,DWORD PTR [esi+0x4]
100510c2:	cmp    eax,0x29a
100510c7:	jne    0x100510d2
100510c9:	cmp    ecx,0x4
100510cc:	jne    0x1005184e
100510d2:	cmp    DWORD PTR [edi+0x10],0x0
100510d6:	jne    0x100510e8
100510d8:	mov    eax,ds:0x1006b51c
100510dd:	mov    DWORD PTR [edi+0x18],eax
100510e0:	pop    edi
100510e1:	mov    eax,0xfffffffb
100510e6:	pop    esi
100510e7:	ret    
100510e8:	cmp    eax,0x2a
100510eb:	mov    edx,DWORD PTR [esi+0x28]
100510ee:	push   ebx
100510ef:	push   ebp
100510f0:	mov    DWORD PTR [esi],edi
100510f2:	mov    DWORD PTR [esp+0x14],edx
100510f6:	mov    DWORD PTR [esi+0x28],ecx
100510f9:	mov    ebx,0x1
100510fe:	jne    0x100513a8
10051104:	mov    eax,0x2
10051109:	cmp    DWORD PTR [esi+0x18],eax
1005110c:	jne    0x10051312
10051112:	push   0x0
10051114:	push   0x0
10051116:	push   0x0
10051118:	call   0x100560d0
1005111d:	mov    DWORD PTR [edi+0x30],eax
10051120:	mov    ecx,DWORD PTR [esi+0x14]
10051123:	mov    eax,DWORD PTR [esi+0x8]
10051126:	mov    BYTE PTR [eax+ecx*1],0x1f
1005112a:	add    DWORD PTR [esi+0x14],ebx
1005112d:	mov    eax,DWORD PTR [esi+0x14]
10051130:	mov    edx,DWORD PTR [esi+0x8]
10051133:	mov    BYTE PTR [eax+edx*1],0x8b
10051137:	add    DWORD PTR [esi+0x14],ebx
1005113a:	mov    eax,DWORD PTR [esi+0x14]
1005113d:	mov    ecx,DWORD PTR [esi+0x8]
10051140:	mov    BYTE PTR [eax+ecx*1],0x8
10051144:	add    DWORD PTR [esi+0x14],ebx
10051147:	mov    eax,DWORD PTR [esi+0x1c]
1005114a:	mov    ebp,DWORD PTR [esi+0x14]
1005114d:	add    esp,0xc
10051150:	test   eax,eax
10051152:	jne    0x100511e3
10051158:	mov    edx,DWORD PTR [esi+0x8]
1005115b:	mov    BYTE PTR [edx+ebp*1],al
1005115e:	add    DWORD PTR [esi+0x14],ebx
10051161:	mov    eax,DWORD PTR [esi+0x14]
10051164:	mov    ecx,DWORD PTR [esi+0x8]
10051167:	mov    BYTE PTR [eax+ecx*1],0x0
1005116b:	add    DWORD PTR [esi+0x14],ebx
1005116e:	mov    eax,DWORD PTR [esi+0x14]
10051171:	mov    edx,DWORD PTR [esi+0x8]
10051174:	mov    BYTE PTR [eax+edx*1],0x0
10051178:	add    DWORD PTR [esi+0x14],ebx
1005117b:	mov    eax,DWORD PTR [esi+0x14]
1005117e:	mov    ecx,DWORD PTR [esi+0x8]
10051181:	mov    BYTE PTR [eax+ecx*1],0x0
10051185:	add    DWORD PTR [esi+0x14],ebx
10051188:	mov    eax,DWORD PTR [esi+0x14]
1005118b:	mov    edx,DWORD PTR [esi+0x8]
1005118e:	mov    BYTE PTR [eax+edx*1],0x0
10051192:	add    DWORD PTR [esi+0x14],ebx
10051195:	mov    eax,DWORD PTR [esi+0x84]
1005119b:	cmp    eax,0x9
1005119e:	mov    ecx,DWORD PTR [esi+0x14]
100511a1:	jne    0x100511aa
100511a3:	mov    eax,0x2
100511a8:	jmp    0x100511c1
100511aa:	cmp    DWORD PTR [esi+0x88],0x2
100511b1:	jge    0x100511bc
100511b3:	cmp    eax,0x2
100511b6:	jl     0x100511bc
100511b8:	xor    eax,eax
100511ba:	jmp    0x100511c1
100511bc:	mov    eax,0x4
100511c1:	mov    edx,DWORD PTR [esi+0x8]
100511c4:	mov    BYTE PTR [ecx+edx*1],al
100511c7:	add    DWORD PTR [esi+0x14],ebx
100511ca:	mov    eax,DWORD PTR [esi+0x14]
100511cd:	mov    ecx,DWORD PTR [esi+0x8]
100511d0:	mov    BYTE PTR [eax+ecx*1],0xb
100511d4:	add    DWORD PTR [esi+0x14],ebx
100511d7:	mov    DWORD PTR [esi+0x4],0x71
100511de:	jmp    0x100513a8
100511e3:	mov    edx,DWORD PTR [eax+0x24]
100511e6:	mov    ecx,DWORD PTR [eax+0x2c]
100511e9:	neg    edx
100511eb:	sbb    dl,dl
100511ed:	and    edx,0x10
100511f0:	neg    ecx
100511f2:	sbb    cl,cl
100511f4:	and    ecx,0x2
100511f7:	add    dl,cl
100511f9:	mov    ecx,DWORD PTR [eax+0x1c]
100511fc:	neg    ecx
100511fe:	sbb    cl,cl
10051200:	and    ecx,0x8
10051203:	add    dl,cl
10051205:	mov    ecx,DWORD PTR [eax+0x10]
10051208:	neg    ecx
1005120a:	sbb    cl,cl
1005120c:	and    ecx,0x4
1005120f:	add    dl,cl
10051211:	cmp    DWORD PTR [eax],0x0
10051214:	mov    ecx,DWORD PTR [esi+0x8]
10051217:	setne  al
1005121a:	add    dl,al
1005121c:	mov    BYTE PTR [ecx+ebp*1],dl
1005121f:	add    DWORD PTR [esi+0x14],ebx
10051222:	mov    eax,DWORD PTR [esi+0x14]
10051225:	mov    edx,DWORD PTR [esi+0x1c]
10051228:	movzx  edx,BYTE PTR [edx+0x4]
1005122c:	mov    ecx,DWORD PTR [esi+0x8]
1005122f:	mov    BYTE PTR [eax+ecx*1],dl
10051232:	add    DWORD PTR [esi+0x14],ebx
10051235:	mov    ecx,DWORD PTR [esi+0x1c]
10051238:	movzx  ecx,BYTE PTR [ecx+0x5]
1005123c:	mov    eax,DWORD PTR [esi+0x14]
1005123f:	mov    edx,DWORD PTR [esi+0x8]
10051242:	mov    BYTE PTR [eax+edx*1],cl
10051245:	add    DWORD PTR [esi+0x14],ebx
10051248:	mov    edx,DWORD PTR [esi+0x1c]
1005124b:	movzx  edx,BYTE PTR [edx+0x6]
1005124f:	mov    eax,DWORD PTR [esi+0x14]
10051252:	mov    ecx,DWORD PTR [esi+0x8]
10051255:	mov    BYTE PTR [eax+ecx*1],dl
10051258:	add    DWORD PTR [esi+0x14],ebx
1005125b:	mov    ecx,DWORD PTR [esi+0x1c]
1005125e:	movzx  ecx,BYTE PTR [ecx+0x7]
10051262:	mov    eax,DWORD PTR [esi+0x14]
10051265:	mov    edx,DWORD PTR [esi+0x8]
10051268:	mov    BYTE PTR [eax+edx*1],cl
1005126b:	add    DWORD PTR [esi+0x14],ebx
1005126e:	mov    eax,DWORD PTR [esi+0x84]
10051274:	cmp    eax,0x9
10051277:	mov    ecx,DWORD PTR [esi+0x14]
1005127a:	jne    0x10051283
1005127c:	mov    eax,0x2
10051281:	jmp    0x1005129a
10051283:	cmp    DWORD PTR [esi+0x88],0x2
1005128a:	jge    0x10051295
1005128c:	cmp    eax,0x2
1005128f:	jl     0x10051295
10051291:	xor    eax,eax
10051293:	jmp    0x1005129a
10051295:	mov    eax,0x4
1005129a:	mov    edx,DWORD PTR [esi+0x8]
1005129d:	mov    BYTE PTR [ecx+edx*1],al
100512a0:	add    DWORD PTR [esi+0x14],ebx
100512a3:	mov    ecx,DWORD PTR [esi+0x1c]
100512a6:	mov    eax,DWORD PTR [esi+0x14]
100512a9:	mov    cl,BYTE PTR [ecx+0xc]
100512ac:	mov    edx,DWORD PTR [esi+0x8]
100512af:	mov    BYTE PTR [eax+edx*1],cl
100512b2:	add    DWORD PTR [esi+0x14],ebx
100512b5:	mov    eax,DWORD PTR [esi+0x1c]
100512b8:	cmp    DWORD PTR [eax+0x10],0x0
100512bc:	mov    ecx,DWORD PTR [esi+0x14]
100512bf:	je     0x100512e2
100512c1:	mov    al,BYTE PTR [eax+0x14]
100512c4:	mov    edx,DWORD PTR [esi+0x8]
100512c7:	mov    BYTE PTR [ecx+edx*1],al
100512ca:	add    DWORD PTR [esi+0x14],ebx
100512cd:	mov    ecx,DWORD PTR [esi+0x1c]
100512d0:	mov    cl,BYTE PTR [ecx+0x15]
100512d3:	mov    eax,DWORD PTR [esi+0x14]
100512d6:	mov    edx,DWORD PTR [esi+0x8]
100512d9:	mov    BYTE PTR [eax+edx*1],cl
100512dc:	add    DWORD PTR [esi+0x14],ebx
100512df:	mov    ecx,DWORD PTR [esi+0x14]
100512e2:	mov    edx,DWORD PTR [esi+0x1c]
100512e5:	cmp    DWORD PTR [edx+0x2c],0x0
100512e9:	je     0x100512ff
100512eb:	mov    eax,DWORD PTR [esi+0x8]
100512ee:	push   ecx
100512ef:	mov    ecx,DWORD PTR [edi+0x30]
100512f2:	push   eax
100512f3:	push   ecx
100512f4:	call   0x100560d0
100512f9:	add    esp,0xc
100512fc:	mov    DWORD PTR [edi+0x30],eax
100512ff:	mov    DWORD PTR [esi+0x20],0x0
10051306:	mov    DWORD PTR [esi+0x4],0x45
1005130d:	jmp    0x100513a8
10051312:	mov    ecx,DWORD PTR [esi+0x30]
10051315:	sub    ecx,0x8
10051318:	shl    ecx,0xc
1005131b:	add    ecx,0x800
10051321:	cmp    DWORD PTR [esi+0x88],eax
10051327:	jge    0x10051348
10051329:	mov    ebp,DWORD PTR [esi+0x84]
1005132f:	cmp    ebp,eax
10051331:	jl     0x10051348
10051333:	cmp    ebp,0x6
10051336:	jge    0x1005133c
10051338:	mov    eax,ebx
1005133a:	jmp    0x1005134a
1005133c:	xor    edx,edx
1005133e:	cmp    ebp,0x6
10051341:	setne  dl
10051344:	add    eax,edx
10051346:	jmp    0x1005134a
10051348:	xor    eax,eax
1005134a:	shl    eax,0x6
1005134d:	or     ecx,eax
1005134f:	cmp    DWORD PTR [esi+0x6c],0x0
10051353:	je     0x10051358
10051355:	or     ecx,0x20
10051358:	mov    eax,0x8421085
1005135d:	mul    ecx
1005135f:	sub    ecx,edx
10051361:	shr    ecx,1
10051363:	add    ecx,edx
10051365:	shr    ecx,0x4
10051368:	add    ecx,ebx
1005136a:	mov    eax,ecx
1005136c:	shl    ecx,0x5
1005136f:	sub    ecx,eax
10051371:	mov    eax,esi
10051373:	mov    DWORD PTR [esi+0x4],0x71
1005137a:	call   0x10051000
1005137f:	cmp    DWORD PTR [esi+0x6c],0x0
10051383:	je     0x10051397
10051385:	movzx  ecx,WORD PTR [edi+0x32]
10051389:	call   0x10051000
1005138e:	movzx  ecx,WORD PTR [edi+0x30]
10051392:	call   0x10051000
10051397:	push   0x0
10051399:	push   0x0
1005139b:	push   0x0
1005139d:	call   0x100540f0
100513a2:	add    esp,0xc
100513a5:	mov    DWORD PTR [edi+0x30],eax
100513a8:	cmp    DWORD PTR [esi+0x4],0x45
100513ac:	jne    0x10051478
100513b2:	mov    eax,DWORD PTR [esi+0x1c]
100513b5:	cmp    DWORD PTR [eax+0x10],0x0
100513b9:	je     0x10051471
100513bf:	movzx  eax,WORD PTR [eax+0x14]
100513c3:	cmp    DWORD PTR [esi+0x20],eax
100513c6:	mov    ecx,DWORD PTR [esi+0x14]
100513c9:	jae    0x10051437
100513cb:	jmp    0x100513d0
100513cd:	lea    ecx,[ecx+0x0]
100513d0:	mov    eax,DWORD PTR [esi+0x14]
100513d3:	cmp    eax,DWORD PTR [esi+0xc]
100513d6:	jne    0x1005140e
100513d8:	mov    edx,DWORD PTR [esi+0x1c]
100513db:	cmp    DWORD PTR [edx+0x2c],0x0
100513df:	je     0x100513fd
100513e1:	cmp    eax,ecx
100513e3:	jbe    0x100513fd
100513e5:	sub    eax,ecx
100513e7:	push   eax
100513e8:	mov    eax,DWORD PTR [esi+0x8]
100513eb:	add    eax,ecx
100513ed:	mov    ecx,DWORD PTR [edi+0x30]
100513f0:	push   eax
100513f1:	push   ecx
100513f2:	call   0x100560d0
100513f7:	add    esp,0xc
100513fa:	mov    DWORD PTR [edi+0x30],eax
100513fd:	mov    eax,edi
100513ff:	call   0x10051030
10051404:	mov    eax,DWORD PTR [esi+0x14]
10051407:	cmp    eax,DWORD PTR [esi+0xc]
1005140a:	mov    ecx,eax
1005140c:	je     0x10051437
1005140e:	mov    edx,DWORD PTR [esi+0x1c]
10051411:	mov    edx,DWORD PTR [edx+0x10]
10051414:	mov    ebx,DWORD PTR [esi+0x20]
10051417:	mov    dl,BYTE PTR [edx+ebx*1]
1005141a:	mov    ebp,DWORD PTR [esi+0x8]
1005141d:	mov    BYTE PTR [eax+ebp*1],dl
10051420:	mov    eax,0x1
10051425:	add    DWORD PTR [esi+0x14],eax
10051428:	add    DWORD PTR [esi+0x20],eax
1005142b:	mov    eax,DWORD PTR [esi+0x1c]
1005142e:	movzx  edx,WORD PTR [eax+0x14]
10051432:	cmp    DWORD PTR [esi+0x20],edx
10051435:	jb     0x100513d0
10051437:	mov    eax,DWORD PTR [esi+0x1c]
1005143a:	cmp    DWORD PTR [eax+0x2c],0x0
1005143e:	je     0x1005145f
10051440:	mov    eax,DWORD PTR [esi+0x14]
10051443:	cmp    eax,ecx
10051445:	jbe    0x1005145f
10051447:	mov    edx,DWORD PTR [esi+0x8]
1005144a:	sub    eax,ecx
1005144c:	push   eax
1005144d:	mov    eax,DWORD PTR [edi+0x30]
10051450:	add    edx,ecx
10051452:	push   edx
10051453:	push   eax
10051454:	call   0x100560d0
10051459:	add    esp,0xc
1005145c:	mov    DWORD PTR [edi+0x30],eax
1005145f:	mov    ecx,DWORD PTR [esi+0x1c]
10051462:	mov    edx,DWORD PTR [esi+0x20]
10051465:	cmp    edx,DWORD PTR [ecx+0x14]
10051468:	jne    0x10051478
1005146a:	mov    DWORD PTR [esi+0x20],0x0
10051471:	mov    DWORD PTR [esi+0x4],0x49
10051478:	cmp    DWORD PTR [esi+0x4],0x49
1005147c:	mov    ebp,0x1
10051481:	jne    0x1005152e
10051487:	mov    eax,DWORD PTR [esi+0x1c]
1005148a:	cmp    DWORD PTR [eax+0x1c],0x0
1005148e:	je     0x10051527
10051494:	mov    edx,DWORD PTR [esi+0x14]
10051497:	mov    eax,DWORD PTR [esi+0x14]
1005149a:	cmp    eax,DWORD PTR [esi+0xc]
1005149d:	jne    0x100514d5
1005149f:	mov    ecx,DWORD PTR [esi+0x1c]
100514a2:	cmp    DWORD PTR [ecx+0x2c],0x0
100514a6:	je     0x100514c4
100514a8:	cmp    eax,edx
100514aa:	jbe    0x100514c4
100514ac:	mov    ecx,DWORD PTR [edi+0x30]
100514af:	sub    eax,edx
100514b1:	push   eax
100514b2:	mov    eax,DWORD PTR [esi+0x8]
100514b5:	add    eax,edx
100514b7:	push   eax
100514b8:	push   ecx
100514b9:	call   0x100560d0
100514be:	add    esp,0xc
100514c1:	mov    DWORD PTR [edi+0x30],eax
100514c4:	mov    eax,edi
100514c6:	call   0x10051030
100514cb:	mov    eax,DWORD PTR [esi+0x14]
100514ce:	cmp    eax,DWORD PTR [esi+0xc]
100514d1:	mov    edx,eax
100514d3:	je     0x100514f6
100514d5:	mov    ecx,DWORD PTR [esi+0x20]
100514d8:	mov    ebx,DWORD PTR [esi+0x1c]
100514db:	mov    ebx,DWORD PTR [ebx+0x1c]
100514de:	movzx  ebx,BYTE PTR [ebx+ecx*1]
100514e2:	add    ecx,ebp
100514e4:	mov    DWORD PTR [esi+0x20],ecx
100514e7:	mov    ecx,DWORD PTR [esi+0x8]
100514ea:	mov    BYTE PTR [eax+ecx*1],bl
100514ed:	add    DWORD PTR [esi+0x14],ebp
100514f0:	test   ebx,ebx
100514f2:	jne    0x10051497
100514f4:	jmp    0x100514f8
100514f6:	mov    ebx,ebp
100514f8:	mov    eax,DWORD PTR [esi+0x1c]
100514fb:	cmp    DWORD PTR [eax+0x2c],0x0
100514ff:	je     0x10051520
10051501:	mov    eax,DWORD PTR [esi+0x14]
10051504:	cmp    eax,edx
10051506:	jbe    0x10051520
10051508:	mov    ecx,DWORD PTR [esi+0x8]
1005150b:	sub    eax,edx
1005150d:	push   eax
1005150e:	add    ecx,edx
10051510:	mov    edx,DWORD PTR [edi+0x30]
10051513:	push   ecx
10051514:	push   edx
10051515:	call   0x100560d0
1005151a:	add    esp,0xc
1005151d:	mov    DWORD PTR [edi+0x30],eax
10051520:	test   ebx,ebx
10051522:	jne    0x1005152e
10051524:	mov    DWORD PTR [esi+0x20],ebx
10051527:	mov    DWORD PTR [esi+0x4],0x5b
1005152e:	cmp    DWORD PTR [esi+0x4],0x5b
10051532:	jne    0x100515dd
10051538:	mov    eax,DWORD PTR [esi+0x1c]
1005153b:	cmp    DWORD PTR [eax+0x24],0x0
1005153f:	je     0x100515d6
10051545:	mov    edx,DWORD PTR [esi+0x14]
10051548:	mov    eax,DWORD PTR [esi+0x14]
1005154b:	cmp    eax,DWORD PTR [esi+0xc]
1005154e:	jne    0x10051586
10051550:	mov    ecx,DWORD PTR [esi+0x1c]
10051553:	cmp    DWORD PTR [ecx+0x2c],0x0
10051557:	je     0x10051575
10051559:	cmp    eax,edx
1005155b:	jbe    0x10051575
1005155d:	mov    ecx,DWORD PTR [edi+0x30]
10051560:	sub    eax,edx
10051562:	push   eax
10051563:	mov    eax,DWORD PTR [esi+0x8]
10051566:	add    eax,edx
10051568:	push   eax
10051569:	push   ecx
1005156a:	call   0x100560d0
1005156f:	add    esp,0xc
10051572:	mov    DWORD PTR [edi+0x30],eax
10051575:	mov    eax,edi
10051577:	call   0x10051030
1005157c:	mov    eax,DWORD PTR [esi+0x14]
1005157f:	cmp    eax,DWORD PTR [esi+0xc]
10051582:	mov    edx,eax
10051584:	je     0x100515a8
10051586:	mov    ecx,DWORD PTR [esi+0x20]
10051589:	mov    ebx,DWORD PTR [esi+0x1c]
1005158c:	mov    ebx,DWORD PTR [ebx+0x24]
1005158f:	movzx  ebx,BYTE PTR [ebx+ecx*1]
10051593:	add    ecx,0x1
10051596:	mov    DWORD PTR [esi+0x20],ecx
10051599:	mov    ecx,DWORD PTR [esi+0x8]
1005159c:	mov    BYTE PTR [eax+ecx*1],bl
1005159f:	add    DWORD PTR [esi+0x14],ebp
100515a2:	test   ebx,ebx
100515a4:	jne    0x10051548
100515a6:	jmp    0x100515aa
100515a8:	mov    ebx,ebp
100515aa:	mov    eax,DWORD PTR [esi+0x1c]
100515ad:	cmp    DWORD PTR [eax+0x2c],0x0
100515b1:	je     0x100515d2
100515b3:	mov    eax,DWORD PTR [esi+0x14]
100515b6:	cmp    eax,edx
100515b8:	jbe    0x100515d2
100515ba:	mov    ecx,DWORD PTR [esi+0x8]
100515bd:	sub    eax,edx
100515bf:	push   eax
100515c0:	add    ecx,edx
100515c2:	mov    edx,DWORD PTR [edi+0x30]
100515c5:	push   ecx
100515c6:	push   edx
100515c7:	call   0x100560d0
100515cc:	add    esp,0xc
100515cf:	mov    DWORD PTR [edi+0x30],eax
100515d2:	test   ebx,ebx
100515d4:	jne    0x100515dd
100515d6:	mov    DWORD PTR [esi+0x4],0x67
100515dd:	cmp    DWORD PTR [esi+0x4],0x67
100515e1:	jne    0x1005163e
100515e3:	mov    eax,DWORD PTR [esi+0x1c]
100515e6:	cmp    DWORD PTR [eax+0x2c],0x0
100515ea:	je     0x10051637
100515ec:	mov    ecx,DWORD PTR [esi+0x14]
100515ef:	add    ecx,0x2
100515f2:	cmp    ecx,DWORD PTR [esi+0xc]
100515f5:	jbe    0x100515fe
100515f7:	mov    eax,edi
100515f9:	call   0x10051030
100515fe:	mov    eax,DWORD PTR [esi+0x14]
10051601:	lea    edx,[eax+0x2]
10051604:	cmp    edx,DWORD PTR [esi+0xc]
10051607:	ja     0x1005163e
10051609:	movzx  edx,BYTE PTR [edi+0x30]
1005160d:	mov    ecx,DWORD PTR [esi+0x8]
10051610:	mov    BYTE PTR [eax+ecx*1],dl
10051613:	add    DWORD PTR [esi+0x14],ebp
10051616:	movzx  edx,BYTE PTR [edi+0x31]
1005161a:	mov    eax,DWORD PTR [esi+0x14]
1005161d:	mov    ecx,DWORD PTR [esi+0x8]
10051620:	push   0x0
10051622:	push   0x0
10051624:	mov    BYTE PTR [eax+ecx*1],dl
10051627:	add    DWORD PTR [esi+0x14],ebp
1005162a:	push   0x0
1005162c:	call   0x100560d0
10051631:	add    esp,0xc
10051634:	mov    DWORD PTR [edi+0x30],eax
10051637:	mov    DWORD PTR [esi+0x4],0x71
1005163e:	cmp    DWORD PTR [esi+0x14],0x0
10051642:	je     0x1005165f
10051644:	mov    eax,edi
10051646:	call   0x10051030
1005164b:	cmp    DWORD PTR [edi+0x10],0x0
1005164f:	jne    0x10051686
10051651:	mov    DWORD PTR [esi+0x28],0xffffffff
10051658:	pop    ebp
10051659:	pop    ebx
1005165a:	pop    edi
1005165b:	xor    eax,eax
1005165d:	pop    esi
1005165e:	ret    
1005165f:	cmp    DWORD PTR [edi+0x4],0x0
10051663:	mov    ebx,DWORD PTR [esp+0x18]
10051667:	jne    0x1005168a
10051669:	cmp    ebx,DWORD PTR [esp+0x14]
1005166d:	jg     0x1005168a
1005166f:	cmp    ebx,0x4
10051672:	je     0x1005168a
10051674:	mov    eax,ds:0x1006b51c
10051679:	pop    ebp
1005167a:	pop    ebx
1005167b:	mov    DWORD PTR [edi+0x18],eax
1005167e:	pop    edi
1005167f:	mov    eax,0xfffffffb
10051684:	pop    esi
10051685:	ret    
10051686:	mov    ebx,DWORD PTR [esp+0x18]
1005168a:	mov    eax,DWORD PTR [esi+0x4]
1005168d:	cmp    eax,0x29a
10051692:	jne    0x100516ad
10051694:	cmp    DWORD PTR [edi+0x4],0x0
10051698:	je     0x100516b3
1005169a:	mov    ecx,DWORD PTR ds:0x1006b51c
100516a0:	pop    ebp
100516a1:	pop    ebx
100516a2:	mov    DWORD PTR [edi+0x18],ecx
100516a5:	pop    edi
100516a6:	mov    eax,0xfffffffb
100516ab:	pop    esi
100516ac:	ret    
100516ad:	cmp    DWORD PTR [edi+0x4],0x0
100516b1:	jne    0x100516cc
100516b3:	cmp    DWORD PTR [esi+0x74],0x0
100516b7:	jne    0x100516cc
100516b9:	test   ebx,ebx
100516bb:	je     0x10051760
100516c1:	cmp    eax,0x29a
100516c6:	je     0x10051760
100516cc:	mov    eax,DWORD PTR [esi+0x84]
100516d2:	lea    edx,[eax+eax*2]
100516d5:	mov    eax,DWORD PTR [edx*4+0x10067f68]
100516dc:	push   ebx
100516dd:	push   esi
100516de:	call   eax
100516e0:	add    esp,0x8
100516e3:	cmp    eax,0x2
100516e6:	je     0x100516ed
100516e8:	cmp    eax,0x3
100516eb:	jne    0x100516f4
100516ed:	mov    DWORD PTR [esi+0x4],0x29a
100516f4:	test   eax,eax
100516f6:	je     0x10051836
100516fc:	cmp    eax,0x2
100516ff:	je     0x10051836
10051705:	cmp    eax,ebp
10051707:	jne    0x10051760
10051709:	cmp    ebx,ebp
1005170b:	jne    0x10051718
1005170d:	push   esi
1005170e:	call   0x10055a30
10051713:	add    esp,0x4
10051716:	jmp    0x1005174f
10051718:	push   0x0
1005171a:	push   0x0
1005171c:	push   0x0
1005171e:	push   esi
1005171f:	call   0x10055990
10051724:	add    esp,0x10
10051727:	cmp    ebx,0x3
1005172a:	jne    0x1005174f
1005172c:	mov    ecx,DWORD PTR [esi+0x4c]
1005172f:	mov    edx,DWORD PTR [esi+0x44]
10051732:	mov    WORD PTR [edx+ecx*2-0x2],0x0
10051739:	mov    eax,DWORD PTR [esi+0x4c]
1005173c:	mov    edx,DWORD PTR [esi+0x44]
1005173f:	lea    ecx,[eax+eax*1-0x2]
10051743:	push   ecx
10051744:	push   0x0
10051746:	push   edx
10051747:	call   0x10045c00
1005174c:	add    esp,0xc
1005174f:	mov    eax,edi
10051751:	call   0x10051030
10051756:	cmp    DWORD PTR [edi+0x10],0x0
1005175a:	je     0x10051651
10051760:	cmp    ebx,0x4
10051763:	jne    0x10051658
10051769:	mov    eax,DWORD PTR [esi+0x18]
1005176c:	test   eax,eax
1005176e:	jg     0x10051777
10051770:	mov    eax,ebp
10051772:	pop    ebp
10051773:	pop    ebx
10051774:	pop    edi
10051775:	pop    esi
10051776:	ret    
10051777:	cmp    eax,0x2
1005177a:	jne    0x10051802
10051780:	movzx  edx,BYTE PTR [edi+0x30]
10051784:	mov    ecx,DWORD PTR [esi+0x14]
10051787:	mov    eax,DWORD PTR [esi+0x8]
1005178a:	mov    BYTE PTR [eax+ecx*1],dl
1005178d:	add    DWORD PTR [esi+0x14],ebp
10051790:	movzx  edx,BYTE PTR [edi+0x31]
10051794:	mov    eax,DWORD PTR [esi+0x14]
10051797:	mov    ecx,DWORD PTR [esi+0x8]
1005179a:	mov    BYTE PTR [eax+ecx*1],dl
1005179d:	add    DWORD PTR [esi+0x14],ebp
100517a0:	movzx  edx,BYTE PTR [edi+0x32]
100517a4:	mov    eax,DWORD PTR [esi+0x14]
100517a7:	mov    ecx,DWORD PTR [esi+0x8]
100517aa:	mov    BYTE PTR [eax+ecx*1],dl
100517ad:	add    DWORD PTR [esi+0x14],ebp
100517b0:	movzx  edx,BYTE PTR [edi+0x33]
100517b4:	mov    eax,DWORD PTR [esi+0x14]
100517b7:	mov    ecx,DWORD PTR [esi+0x8]
100517ba:	mov    BYTE PTR [eax+ecx*1],dl
100517bd:	add    DWORD PTR [esi+0x14],ebp
100517c0:	movzx  edx,BYTE PTR [edi+0x8]
100517c4:	mov    eax,DWORD PTR [esi+0x14]
100517c7:	mov    ecx,DWORD PTR [esi+0x8]
100517ca:	mov    BYTE PTR [eax+ecx*1],dl
100517cd:	add    DWORD PTR [esi+0x14],ebp
100517d0:	movzx  edx,BYTE PTR [edi+0x9]
100517d4:	mov    eax,DWORD PTR [esi+0x14]
100517d7:	mov    ecx,DWORD PTR [esi+0x8]
100517da:	mov    BYTE PTR [eax+ecx*1],dl
100517dd:	add    DWORD PTR [esi+0x14],ebp
100517e0:	movzx  edx,BYTE PTR [edi+0xa]
100517e4:	mov    eax,DWORD PTR [esi+0x14]
100517e7:	mov    ecx,DWORD PTR [esi+0x8]
100517ea:	mov    BYTE PTR [eax+ecx*1],dl
100517ed:	add    DWORD PTR [esi+0x14],ebp
100517f0:	movzx  edx,BYTE PTR [edi+0xb]
100517f4:	mov    eax,DWORD PTR [esi+0x14]
100517f7:	mov    ecx,DWORD PTR [esi+0x8]
100517fa:	mov    BYTE PTR [eax+ecx*1],dl
100517fd:	add    DWORD PTR [esi+0x14],ebp
10051800:	jmp    0x10051816
10051802:	movzx  ecx,WORD PTR [edi+0x32]
10051806:	mov    eax,esi
10051808:	call   0x10051000
1005180d:	movzx  ecx,WORD PTR [edi+0x30]
10051811:	call   0x10051000
10051816:	mov    eax,edi
10051818:	call   0x10051030
1005181d:	mov    eax,DWORD PTR [esi+0x18]
10051820:	test   eax,eax
10051822:	jle    0x10051829
10051824:	neg    eax
10051826:	mov    DWORD PTR [esi+0x18],eax
10051829:	pop    ebp
1005182a:	xor    eax,eax
1005182c:	cmp    DWORD PTR [esi+0x14],eax
1005182f:	pop    ebx
10051830:	pop    edi
10051831:	sete   al
10051834:	pop    esi
10051835:	ret    
10051836:	cmp    DWORD PTR [edi+0x10],0x0
1005183a:	jne    0x10051658
10051840:	pop    ebp
10051841:	pop    ebx
10051842:	pop    edi
10051843:	mov    DWORD PTR [esi+0x28],0xffffffff
1005184a:	xor    eax,eax
1005184c:	pop    esi
1005184d:	ret    
1005184e:	mov    eax,ds:0x1006b510
10051853:	mov    DWORD PTR [edi+0x18],eax
10051856:	pop    edi
10051857:	mov    eax,0xfffffffe
1005185c:	pop    esi
1005185d:	ret    
1005185e:	int3   
1005185f:	int3   
10051860:	push   esi
10051861:	mov    esi,DWORD PTR [esp+0x8]
10051865:	test   esi,esi
10051867:	je     0x1005192b
1005186d:	mov    eax,DWORD PTR [esi+0x1c]
10051870:	test   eax,eax
10051872:	je     0x1005192b
10051878:	push   edi
10051879:	mov    edi,DWORD PTR [eax+0x4]
1005187c:	cmp    edi,0x2a
1005187f:	je     0x100518aa
10051881:	cmp    edi,0x45
10051884:	je     0x100518aa
10051886:	cmp    edi,0x49
10051889:	je     0x100518aa
1005188b:	cmp    edi,0x5b
1005188e:	je     0x100518aa
10051890:	cmp    edi,0x67
10051893:	je     0x100518aa
10051895:	cmp    edi,0x71
10051898:	je     0x100518aa
1005189a:	cmp    edi,0x29a
100518a0:	je     0x100518aa
100518a2:	pop    edi
100518a3:	mov    eax,0xfffffffe
100518a8:	pop    esi
100518a9:	ret    
100518aa:	mov    eax,DWORD PTR [eax+0x8]
100518ad:	test   eax,eax
100518af:	je     0x100518be
100518b1:	mov    ecx,DWORD PTR [esi+0x24]
100518b4:	push   eax
100518b5:	mov    eax,DWORD PTR [esi+0x28]
100518b8:	push   eax
100518b9:	call   ecx
100518bb:	add    esp,0x8
100518be:	mov    edx,DWORD PTR [esi+0x1c]
100518c1:	mov    eax,DWORD PTR [edx+0x44]
100518c4:	test   eax,eax
100518c6:	je     0x100518d5
100518c8:	mov    ecx,DWORD PTR [esi+0x24]
100518cb:	push   eax
100518cc:	mov    eax,DWORD PTR [esi+0x28]
100518cf:	push   eax
100518d0:	call   ecx
100518d2:	add    esp,0x8
100518d5:	mov    edx,DWORD PTR [esi+0x1c]
100518d8:	mov    eax,DWORD PTR [edx+0x40]
100518db:	test   eax,eax
100518dd:	je     0x100518ec
100518df:	mov    ecx,DWORD PTR [esi+0x24]
100518e2:	push   eax
100518e3:	mov    eax,DWORD PTR [esi+0x28]
100518e6:	push   eax
100518e7:	call   ecx
100518e9:	add    esp,0x8
100518ec:	mov    edx,DWORD PTR [esi+0x1c]
100518ef:	mov    eax,DWORD PTR [edx+0x38]
100518f2:	test   eax,eax
100518f4:	je     0x10051903
100518f6:	mov    ecx,DWORD PTR [esi+0x24]
100518f9:	push   eax
100518fa:	mov    eax,DWORD PTR [esi+0x28]
100518fd:	push   eax
100518fe:	call   ecx
10051900:	add    esp,0x8
10051903:	mov    edx,DWORD PTR [esi+0x1c]
10051906:	mov    eax,DWORD PTR [esi+0x28]
10051909:	mov    ecx,DWORD PTR [esi+0x24]
1005190c:	push   edx
1005190d:	push   eax
1005190e:	call   ecx
10051910:	add    esp,0x8
10051913:	xor    eax,eax
10051915:	cmp    edi,0x71
10051918:	setne  al
1005191b:	pop    edi
1005191c:	mov    DWORD PTR [esi+0x1c],0x0
10051923:	pop    esi
10051924:	sub    eax,0x1
10051927:	and    eax,0xfffffffd
1005192a:	ret    
1005192b:	mov    eax,0xfffffffe
10051930:	pop    esi
10051931:	ret    
10051932:	int3   
10051933:	int3   
10051934:	int3   
10051935:	int3   
10051936:	int3   
10051937:	int3   
10051938:	int3   
10051939:	int3   
1005193a:	int3   
1005193b:	int3   
1005193c:	int3   
1005193d:	int3   
1005193e:	int3   
1005193f:	int3   
10051940:	mov    eax,DWORD PTR [esi+0x4]
10051943:	push   edi
10051944:	mov    edi,eax
10051946:	cmp    edi,ecx
10051948:	jbe    0x1005194c
1005194a:	mov    edi,ecx
1005194c:	test   edi,edi
1005194e:	jne    0x10051954
10051950:	xor    eax,eax
10051952:	pop    edi
10051953:	ret    
10051954:	sub    eax,edi
10051956:	mov    DWORD PTR [esi+0x4],eax
10051959:	mov    eax,DWORD PTR [esi+0x1c]
1005195c:	mov    eax,DWORD PTR [eax+0x18]
1005195f:	cmp    eax,0x1
10051962:	jne    0x10051973
10051964:	mov    ecx,DWORD PTR [esi]
10051966:	mov    edx,DWORD PTR [esi+0x30]
10051969:	push   edi
1005196a:	push   ecx
1005196b:	push   edx
1005196c:	call   0x100540f0
10051971:	jmp    0x10051985
10051973:	cmp    eax,0x2
10051976:	jne    0x1005198b
10051978:	mov    eax,DWORD PTR [esi]
1005197a:	mov    ecx,DWORD PTR [esi+0x30]
1005197d:	push   edi
1005197e:	push   eax
1005197f:	push   ecx
10051980:	call   0x100560d0
10051985:	mov    DWORD PTR [esi+0x30],eax
10051988:	add    esp,0xc
1005198b:	mov    edx,DWORD PTR [esi]
1005198d:	mov    eax,DWORD PTR [esp+0x8]
10051991:	push   edi
10051992:	push   edx
10051993:	push   eax
10051994:	call   0x10045180
10051999:	add    DWORD PTR [esi],edi
1005199b:	add    DWORD PTR [esi+0x8],edi
1005199e:	add    esp,0xc
100519a1:	mov    eax,edi
100519a3:	pop    edi
100519a4:	ret    
100519a5:	int3   
100519a6:	int3   
100519a7:	int3   
100519a8:	int3   
100519a9:	int3   
100519aa:	int3   
100519ab:	int3   
100519ac:	int3   
100519ad:	int3   
100519ae:	int3   
100519af:	int3   
100519b0:	mov    eax,DWORD PTR [esi+0x2c]
100519b3:	mov    ecx,DWORD PTR [esi+0x4c]
100519b6:	mov    edx,DWORD PTR [esi+0x44]
100519b9:	push   edi
100519ba:	add    eax,eax
100519bc:	mov    DWORD PTR [esi+0x3c],eax
100519bf:	xor    edi,edi
100519c1:	mov    WORD PTR [edx+ecx*2-0x2],di
100519c6:	mov    eax,DWORD PTR [esi+0x4c]
100519c9:	mov    edx,DWORD PTR [esi+0x44]
100519cc:	lea    ecx,[eax+eax*1-0x2]
100519d0:	push   ecx
100519d1:	push   edi
100519d2:	push   edx
100519d3:	call   0x10045c00
100519d8:	mov    eax,DWORD PTR [esi+0x84]
100519de:	lea    eax,[eax+eax*2]
100519e1:	add    eax,eax
100519e3:	movzx  ecx,WORD PTR [eax+eax*1+0x10067f62]
100519eb:	add    eax,eax
100519ed:	mov    DWORD PTR [esi+0x80],ecx
100519f3:	movzx  edx,WORD PTR [eax+0x10067f60]
100519fa:	mov    DWORD PTR [esi+0x8c],edx
10051a00:	movzx  ecx,WORD PTR [eax+0x10067f64]
10051a07:	mov    DWORD PTR [esi+0x90],ecx
10051a0d:	movzx  edx,WORD PTR [eax+0x10067f66]
10051a14:	mov    eax,0x2
10051a19:	add    esp,0xc
10051a1c:	mov    DWORD PTR [esi+0x6c],edi
10051a1f:	mov    DWORD PTR [esi+0x5c],edi
10051a22:	mov    DWORD PTR [esi+0x74],edi
10051a25:	mov    DWORD PTR [esi+0x68],edi
10051a28:	mov    DWORD PTR [esi+0x48],edi
10051a2b:	mov    DWORD PTR [esi+0x7c],edx
10051a2e:	mov    DWORD PTR [esi+0x78],eax
10051a31:	mov    DWORD PTR [esi+0x60],eax
10051a34:	pop    edi
10051a35:	ret    
10051a36:	int3   
10051a37:	int3   
10051a38:	int3   
10051a39:	int3   
10051a3a:	int3   
10051a3b:	int3   
10051a3c:	int3   
10051a3d:	int3   
10051a3e:	int3   
10051a3f:	int3   
10051a40:	sub    esp,0x14
10051a43:	mov    ecx,DWORD PTR [edi+0x7c]
10051a46:	mov    edx,DWORD PTR [edi+0x6c]
10051a49:	push   ebx
10051a4a:	push   ebp
10051a4b:	mov    ebp,DWORD PTR [edi+0x78]
10051a4e:	push   esi
10051a4f:	mov    esi,DWORD PTR [edi+0x90]
10051a55:	mov    DWORD PTR [esp+0x10],ecx
10051a59:	mov    ecx,DWORD PTR [edi+0x38]
10051a5c:	mov    DWORD PTR [esp+0x14],esi
10051a60:	mov    esi,DWORD PTR [edi+0x2c]
10051a63:	lea    ebx,[esi-0x106]
10051a69:	add    ecx,edx
10051a6b:	cmp    edx,ebx
10051a6d:	jbe    0x10051a7d
10051a6f:	sub    edx,esi
10051a71:	add    edx,0x106
10051a77:	mov    DWORD PTR [esp+0x18],edx
10051a7b:	jmp    0x10051a85
10051a7d:	mov    DWORD PTR [esp+0x18],0x0
10051a85:	cmp    ebp,DWORD PTR [edi+0x8c]
10051a8b:	movzx  edx,BYTE PTR [ecx+ebp*1-0x1]
10051a90:	mov    BYTE PTR [esp+0xe],dl
10051a94:	movzx  edx,BYTE PTR [ecx+ebp*1]
10051a98:	lea    esi,[ecx+0x102]
10051a9e:	mov    BYTE PTR [esp+0xf],dl
10051aa2:	jb     0x10051aa9
10051aa4:	shr    DWORD PTR [esp+0x10],0x2
10051aa9:	mov    edx,DWORD PTR [edi+0x74]
10051aac:	cmp    DWORD PTR [esp+0x14],edx
10051ab0:	jbe    0x10051ab6
10051ab2:	mov    DWORD PTR [esp+0x14],edx
10051ab6:	mov    edx,DWORD PTR [edi+0x38]
10051ab9:	mov    bl,BYTE PTR [esp+0xf]
10051abd:	add    edx,eax
10051abf:	cmp    BYTE PTR [edx+ebp*1],bl
10051ac2:	jne    0x10051b8f
10051ac8:	mov    bl,BYTE PTR [esp+0xe]
10051acc:	cmp    BYTE PTR [edx+ebp*1-0x1],bl
10051ad0:	jne    0x10051b8f
10051ad6:	mov    bl,BYTE PTR [edx]
10051ad8:	cmp    bl,BYTE PTR [ecx]
10051ada:	jne    0x10051b8f
10051ae0:	mov    bl,BYTE PTR [edx+0x1]
10051ae3:	add    edx,0x1
10051ae6:	cmp    bl,BYTE PTR [ecx+0x1]
10051ae9:	jne    0x10051b8f
10051aef:	add    ecx,0x2
10051af2:	add    edx,0x1
10051af5:	mov    bl,BYTE PTR [ecx+0x1]
10051af8:	add    ecx,0x1
10051afb:	add    edx,0x1
10051afe:	cmp    bl,BYTE PTR [edx]
10051b00:	jne    0x10051b61
10051b02:	mov    bl,BYTE PTR [ecx+0x1]
10051b05:	add    ecx,0x1
10051b08:	add    edx,0x1
10051b0b:	cmp    bl,BYTE PTR [edx]
10051b0d:	jne    0x10051b61
10051b0f:	mov    bl,BYTE PTR [ecx+0x1]
10051b12:	add    ecx,0x1
10051b15:	add    edx,0x1
10051b18:	cmp    bl,BYTE PTR [edx]
10051b1a:	jne    0x10051b61
10051b1c:	mov    bl,BYTE PTR [ecx+0x1]
10051b1f:	add    ecx,0x1
10051b22:	add    edx,0x1
10051b25:	cmp    bl,BYTE PTR [edx]
10051b27:	jne    0x10051b61
10051b29:	mov    bl,BYTE PTR [ecx+0x1]
10051b2c:	add    ecx,0x1
10051b2f:	add    edx,0x1
10051b32:	cmp    bl,BYTE PTR [edx]
10051b34:	jne    0x10051b61
10051b36:	mov    bl,BYTE PTR [ecx+0x1]
10051b39:	add    ecx,0x1
10051b3c:	add    edx,0x1
10051b3f:	cmp    bl,BYTE PTR [edx]
10051b41:	jne    0x10051b61
10051b43:	mov    bl,BYTE PTR [ecx+0x1]
10051b46:	add    ecx,0x1
10051b49:	add    edx,0x1
10051b4c:	cmp    bl,BYTE PTR [edx]
10051b4e:	jne    0x10051b61
10051b50:	mov    bl,BYTE PTR [ecx+0x1]
10051b53:	add    ecx,0x1
10051b56:	add    edx,0x1
10051b59:	cmp    bl,BYTE PTR [edx]
10051b5b:	jne    0x10051b61
10051b5d:	cmp    ecx,esi
10051b5f:	jb     0x10051af5
10051b61:	mov    edx,ecx
10051b63:	sub    edx,esi
10051b65:	add    edx,0x102
10051b6b:	cmp    edx,ebp
10051b6d:	lea    ecx,[esi-0x102]
10051b73:	jle    0x10051b8f
10051b75:	cmp    edx,DWORD PTR [esp+0x14]
10051b79:	mov    DWORD PTR [edi+0x70],eax
10051b7c:	mov    ebp,edx
10051b7e:	jge    0x10051bac
10051b80:	mov    bl,BYTE PTR [edx+ecx*1-0x1]
10051b84:	mov    dl,BYTE PTR [edx+ecx*1]
10051b87:	mov    BYTE PTR [esp+0xe],bl
10051b8b:	mov    BYTE PTR [esp+0xf],dl
10051b8f:	mov    edx,DWORD PTR [edi+0x34]
10051b92:	and    edx,eax
10051b94:	mov    eax,DWORD PTR [edi+0x40]
10051b97:	movzx  eax,WORD PTR [eax+edx*2]
10051b9b:	cmp    eax,DWORD PTR [esp+0x18]
10051b9f:	jbe    0x10051bac
10051ba1:	sub    DWORD PTR [esp+0x10],0x1
10051ba6:	jne    0x10051ab6
10051bac:	mov    eax,DWORD PTR [edi+0x74]
10051baf:	cmp    ebp,eax
10051bb1:	ja     0x10051bb5
10051bb3:	mov    eax,ebp
10051bb5:	pop    esi
10051bb6:	pop    ebp
10051bb7:	pop    ebx
10051bb8:	add    esp,0x14
10051bbb:	ret    
10051bbc:	int3   
10051bbd:	int3   
10051bbe:	int3   
10051bbf:	int3   
10051bc0:	mov    ecx,DWORD PTR [esi+0x38]
10051bc3:	mov    eax,DWORD PTR [esi+0x6c]
10051bc6:	push   ebp
10051bc7:	mov    ebp,DWORD PTR [esp+0x8]
10051bcb:	mov    dl,BYTE PTR [ecx+ebp*1]
10051bce:	add    eax,ecx
10051bd0:	add    ecx,ebp
10051bd2:	cmp    dl,BYTE PTR [eax]
10051bd4:	push   edi
10051bd5:	lea    edi,[eax+0x102]
10051bdb:	jne    0x10051c7a
10051be1:	mov    dl,BYTE PTR [ecx+0x1]
10051be4:	cmp    dl,BYTE PTR [eax+0x1]
10051be7:	jne    0x10051c7a
10051bed:	add    eax,0x2
10051bf0:	add    ecx,0x2
10051bf3:	mov    dl,BYTE PTR [eax+0x1]
10051bf6:	add    eax,0x1
10051bf9:	add    ecx,0x1
10051bfc:	cmp    dl,BYTE PTR [ecx]
10051bfe:	jne    0x10051c5f
10051c00:	mov    dl,BYTE PTR [eax+0x1]
10051c03:	add    eax,0x1
10051c06:	add    ecx,0x1
10051c09:	cmp    dl,BYTE PTR [ecx]
10051c0b:	jne    0x10051c5f
10051c0d:	mov    dl,BYTE PTR [eax+0x1]
10051c10:	add    eax,0x1
10051c13:	add    ecx,0x1
10051c16:	cmp    dl,BYTE PTR [ecx]
10051c18:	jne    0x10051c5f
10051c1a:	mov    dl,BYTE PTR [eax+0x1]
10051c1d:	add    eax,0x1
10051c20:	add    ecx,0x1
10051c23:	cmp    dl,BYTE PTR [ecx]
10051c25:	jne    0x10051c5f
10051c27:	mov    dl,BYTE PTR [eax+0x1]
10051c2a:	add    eax,0x1
10051c2d:	add    ecx,0x1
10051c30:	cmp    dl,BYTE PTR [ecx]
10051c32:	jne    0x10051c5f
10051c34:	mov    dl,BYTE PTR [eax+0x1]
10051c37:	add    eax,0x1
10051c3a:	add    ecx,0x1
10051c3d:	cmp    dl,BYTE PTR [ecx]
10051c3f:	jne    0x10051c5f
10051c41:	mov    dl,BYTE PTR [eax+0x1]
10051c44:	add    eax,0x1
10051c47:	add    ecx,0x1
10051c4a:	cmp    dl,BYTE PTR [ecx]
10051c4c:	jne    0x10051c5f
10051c4e:	mov    dl,BYTE PTR [eax+0x1]
10051c51:	add    eax,0x1
10051c54:	add    ecx,0x1
10051c57:	cmp    dl,BYTE PTR [ecx]
10051c59:	jne    0x10051c5f
10051c5b:	cmp    eax,edi
10051c5d:	jb     0x10051bf3
10051c5f:	sub    eax,edi
10051c61:	add    eax,0x102
10051c66:	cmp    eax,0x3
10051c69:	jl     0x10051c7a
10051c6b:	mov    ecx,DWORD PTR [esi+0x74]
10051c6e:	cmp    eax,ecx
10051c70:	mov    DWORD PTR [esi+0x70],ebp
10051c73:	jbe    0x10051c7f
10051c75:	pop    edi
10051c76:	mov    eax,ecx
10051c78:	pop    ebp
10051c79:	ret    
10051c7a:	mov    eax,0x2
10051c7f:	pop    edi
10051c80:	pop    ebp
10051c81:	ret    
10051c82:	int3   
10051c83:	int3   
10051c84:	int3   
10051c85:	int3   
10051c86:	int3   
10051c87:	int3   
10051c88:	int3   
10051c89:	int3   
10051c8a:	int3   
10051c8b:	int3   
10051c8c:	int3   
10051c8d:	int3   
10051c8e:	int3   
10051c8f:	int3   
10051c90:	push   ebx
10051c91:	mov    ebx,DWORD PTR [edi+0x2c]
10051c94:	push   ebp
10051c95:	push   esi
10051c96:	mov    ebp,DWORD PTR [edi+0x3c]
10051c99:	sub    ebp,DWORD PTR [edi+0x74]
10051c9c:	mov    eax,DWORD PTR [edi+0x6c]
10051c9f:	mov    ecx,DWORD PTR [edi+0x2c]
10051ca2:	lea    edx,[ebx+ecx*1-0x106]
10051ca9:	sub    ebp,eax
10051cab:	cmp    eax,edx
10051cad:	jb     0x10051d0e
10051caf:	mov    eax,DWORD PTR [edi+0x38]
10051cb2:	push   ebx
10051cb3:	lea    ecx,[eax+ebx*1]
10051cb6:	push   ecx
10051cb7:	push   eax
10051cb8:	call   0x10045180
10051cbd:	mov    edx,DWORD PTR [edi+0x4c]
10051cc0:	mov    eax,DWORD PTR [edi+0x44]
10051cc3:	sub    DWORD PTR [edi+0x70],ebx
10051cc6:	sub    DWORD PTR [edi+0x6c],ebx
10051cc9:	add    esp,0xc
10051ccc:	sub    DWORD PTR [edi+0x5c],ebx
10051ccf:	lea    ecx,[eax+edx*2]
10051cd2:	movzx  eax,WORD PTR [ecx-0x2]
10051cd6:	sub    ecx,0x2
10051cd9:	cmp    eax,ebx
10051cdb:	jb     0x10051ce1
10051cdd:	sub    eax,ebx
10051cdf:	jmp    0x10051ce3
10051ce1:	xor    eax,eax
10051ce3:	sub    edx,0x1
10051ce6:	mov    WORD PTR [ecx],ax
10051ce9:	jne    0x10051cd2
10051ceb:	mov    ecx,DWORD PTR [edi+0x40]
10051cee:	mov    edx,ebx
10051cf0:	lea    ecx,[ecx+ebx*2]
10051cf3:	movzx  eax,WORD PTR [ecx-0x2]
10051cf7:	sub    ecx,0x2
10051cfa:	cmp    eax,ebx
10051cfc:	jb     0x10051d02
10051cfe:	sub    eax,ebx
10051d00:	jmp    0x10051d04
10051d02:	xor    eax,eax
10051d04:	sub    edx,0x1
10051d07:	mov    WORD PTR [ecx],ax
10051d0a:	jne    0x10051cf3
10051d0c:	add    ebp,ebx
10051d0e:	mov    esi,DWORD PTR [edi]
10051d10:	cmp    DWORD PTR [esi+0x4],0x0
10051d14:	je     0x10051d69
10051d16:	mov    edx,DWORD PTR [edi+0x74]
10051d19:	add    edx,DWORD PTR [edi+0x6c]
10051d1c:	mov    ecx,ebp
10051d1e:	add    edx,DWORD PTR [edi+0x38]
10051d21:	push   edx
10051d22:	call   0x10051940
10051d27:	add    DWORD PTR [edi+0x74],eax
10051d2a:	mov    edx,DWORD PTR [edi+0x74]
10051d2d:	add    esp,0x4
10051d30:	cmp    edx,0x3
10051d33:	jb     0x10051d55
10051d35:	mov    eax,DWORD PTR [edi+0x6c]
10051d38:	mov    ecx,DWORD PTR [edi+0x38]
10051d3b:	lea    esi,[eax+ecx*1]
10051d3e:	movzx  eax,BYTE PTR [esi]
10051d41:	mov    ecx,DWORD PTR [edi+0x58]
10051d44:	mov    DWORD PTR [edi+0x48],eax
10051d47:	shl    eax,cl
10051d49:	movzx  ecx,BYTE PTR [esi+0x1]
10051d4d:	xor    eax,ecx
10051d4f:	and    eax,DWORD PTR [edi+0x54]
10051d52:	mov    DWORD PTR [edi+0x48],eax
10051d55:	cmp    edx,0x106
10051d5b:	jae    0x10051d69
10051d5d:	mov    edx,DWORD PTR [edi]
10051d5f:	cmp    DWORD PTR [edx+0x4],0x0
10051d63:	jne    0x10051c96
10051d69:	pop    esi
10051d6a:	pop    ebp
10051d6b:	pop    ebx
10051d6c:	ret    
10051d6d:	int3   
10051d6e:	int3   
10051d6f:	int3   
10051d70:	push   esi
10051d71:	push   edi
10051d72:	mov    edi,DWORD PTR [esp+0xc]
10051d76:	mov    eax,DWORD PTR [edi+0xc]
10051d79:	mov    esi,0xffff
10051d7e:	add    eax,0xfffffffb
10051d81:	cmp    eax,esi
10051d83:	jae    0x10051d87
10051d85:	mov    esi,eax
10051d87:	mov    eax,DWORD PTR [edi+0x74]
10051d8a:	cmp    eax,0x1
10051d8d:	ja     0x10051d9f
10051d8f:	call   0x10051c90
10051d94:	mov    eax,DWORD PTR [edi+0x74]
10051d97:	test   eax,eax
10051d99:	je     0x10051e3d
10051d9f:	add    DWORD PTR [edi+0x6c],eax
10051da2:	mov    ecx,DWORD PTR [edi+0x5c]
10051da5:	mov    edx,DWORD PTR [edi+0x6c]
10051da8:	mov    DWORD PTR [edi+0x74],0x0
10051daf:	lea    eax,[ecx+esi*1]
10051db2:	je     0x10051db8
10051db4:	cmp    edx,eax
10051db6:	jb     0x10051df1
10051db8:	sub    edx,eax
10051dba:	test   ecx,ecx
10051dbc:	mov    DWORD PTR [edi+0x74],edx
10051dbf:	mov    DWORD PTR [edi+0x6c],eax
10051dc2:	jl     0x10051dcb
10051dc4:	mov    edx,DWORD PTR [edi+0x38]
10051dc7:	add    edx,ecx
10051dc9:	jmp    0x10051dcd
10051dcb:	xor    edx,edx
10051dcd:	push   0x0
10051dcf:	sub    eax,ecx
10051dd1:	push   eax
10051dd2:	push   edx
10051dd3:	push   edi
10051dd4:	call   0x10055c20
10051dd9:	mov    eax,DWORD PTR [edi+0x6c]
10051ddc:	mov    DWORD PTR [edi+0x5c],eax
10051ddf:	mov    eax,DWORD PTR [edi]
10051de1:	add    esp,0x10
10051de4:	call   0x10051030
10051de9:	mov    ecx,DWORD PTR [edi]
10051deb:	cmp    DWORD PTR [ecx+0x10],0x0
10051def:	je     0x10051e38
10051df1:	mov    ecx,DWORD PTR [edi+0x5c]
10051df4:	mov    edx,DWORD PTR [edi+0x6c]
10051df7:	mov    eax,DWORD PTR [edi+0x2c]
10051dfa:	sub    edx,ecx
10051dfc:	sub    eax,0x106
10051e01:	cmp    edx,eax
10051e03:	jb     0x10051d87
10051e05:	test   ecx,ecx
10051e07:	jl     0x10051e10
10051e09:	mov    eax,DWORD PTR [edi+0x38]
10051e0c:	add    eax,ecx
10051e0e:	jmp    0x10051e12
10051e10:	xor    eax,eax
10051e12:	push   0x0
10051e14:	push   edx
10051e15:	push   eax
10051e16:	push   edi
10051e17:	call   0x10055c20
10051e1c:	mov    ecx,DWORD PTR [edi+0x6c]
10051e1f:	mov    eax,DWORD PTR [edi]
10051e21:	add    esp,0x10
10051e24:	mov    DWORD PTR [edi+0x5c],ecx
10051e27:	call   0x10051030
10051e2c:	mov    edx,DWORD PTR [edi]
10051e2e:	cmp    DWORD PTR [edx+0x10],0x0
10051e32:	jne    0x10051d87
10051e38:	pop    edi
10051e39:	xor    eax,eax
10051e3b:	pop    esi
10051e3c:	ret    
10051e3d:	mov    esi,DWORD PTR [esp+0x10]
10051e41:	test   esi,esi
10051e43:	je     0x10051e38
10051e45:	mov    ecx,DWORD PTR [edi+0x5c]
10051e48:	test   ecx,ecx
10051e4a:	jl     0x10051e53
10051e4c:	mov    eax,DWORD PTR [edi+0x38]
10051e4f:	add    eax,ecx
10051e51:	jmp    0x10051e55
10051e53:	xor    eax,eax
10051e55:	xor    edx,edx
10051e57:	cmp    esi,0x4
10051e5a:	sete   dl
10051e5d:	push   edx
10051e5e:	mov    edx,DWORD PTR [edi+0x6c]
10051e61:	sub    edx,ecx
10051e63:	push   edx
10051e64:	push   eax
10051e65:	push   edi
10051e66:	call   0x10055c20
10051e6b:	mov    eax,DWORD PTR [edi+0x6c]
10051e6e:	mov    DWORD PTR [edi+0x5c],eax
10051e71:	mov    eax,DWORD PTR [edi]
10051e73:	add    esp,0x10
10051e76:	call   0x10051030
10051e7b:	mov    ecx,DWORD PTR [edi]
10051e7d:	xor    eax,eax
10051e7f:	cmp    DWORD PTR [ecx+0x10],eax
10051e82:	jne    0x10051e93
10051e84:	cmp    esi,0x4
10051e87:	setne  al
10051e8a:	pop    edi
10051e8b:	pop    esi
10051e8c:	sub    eax,0x1
10051e8f:	and    eax,0x2
10051e92:	ret    
10051e93:	cmp    esi,0x4
10051e96:	sete   al
10051e99:	pop    edi
10051e9a:	pop    esi
10051e9b:	lea    eax,[eax+eax*1+0x1]
10051e9f:	ret    
10051ea0:	push   ebx
10051ea1:	push   ebp
10051ea2:	push   esi
10051ea3:	push   edi
10051ea4:	mov    edi,DWORD PTR [esp+0x14]
10051ea8:	xor    ebp,ebp
10051eaa:	mov    ebx,0x1
10051eaf:	nop
10051eb0:	mov    eax,DWORD PTR [edi+0x74]
10051eb3:	cmp    eax,0x106
10051eb8:	jae    0x10051edd
10051eba:	call   0x10051c90
10051ebf:	mov    eax,DWORD PTR [edi+0x74]
10051ec2:	cmp    eax,0x106
10051ec7:	mov    esi,DWORD PTR [esp+0x18]
10051ecb:	jae    0x10051ed5
10051ecd:	test   esi,esi
10051ecf:	je     0x10052154
10051ed5:	test   eax,eax
10051ed7:	je     0x1005215b
10051edd:	cmp    eax,0x3
10051ee0:	jb     0x10051f2b
10051ee2:	mov    eax,DWORD PTR [edi+0x48]
10051ee5:	mov    ecx,DWORD PTR [edi+0x58]
10051ee8:	mov    edx,DWORD PTR [edi+0x6c]
10051eeb:	mov    esi,DWORD PTR [edi+0x34]
10051eee:	shl    eax,cl
10051ef0:	mov    ecx,DWORD PTR [edi+0x38]
10051ef3:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
10051ef8:	xor    eax,ecx
10051efa:	and    eax,DWORD PTR [edi+0x54]
10051efd:	mov    ecx,DWORD PTR [edi+0x44]
10051f00:	mov    DWORD PTR [edi+0x48],eax
10051f03:	mov    ax,WORD PTR [ecx+eax*2]
10051f07:	and    esi,edx
10051f09:	mov    edx,DWORD PTR [edi+0x40]
10051f0c:	mov    WORD PTR [edx+esi*2],ax
10051f10:	mov    ecx,DWORD PTR [edi+0x6c]
10051f13:	and    ecx,DWORD PTR [edi+0x34]
10051f16:	mov    edx,DWORD PTR [edi+0x40]
10051f19:	movzx  ebp,WORD PTR [edx+ecx*2]
10051f1d:	mov    eax,DWORD PTR [edi+0x48]
10051f20:	mov    ecx,DWORD PTR [edi+0x44]
10051f23:	mov    dx,WORD PTR [edi+0x6c]
10051f27:	mov    WORD PTR [ecx+eax*2],dx
10051f2b:	test   ebp,ebp
10051f2d:	je     0x10051f71
10051f2f:	mov    eax,DWORD PTR [edi+0x6c]
10051f32:	mov    ecx,DWORD PTR [edi+0x2c]
10051f35:	sub    eax,ebp
10051f37:	sub    ecx,0x106
10051f3d:	cmp    eax,ecx
10051f3f:	ja     0x10051f71
10051f41:	mov    ecx,DWORD PTR [edi+0x88]
10051f47:	cmp    ecx,0x2
10051f4a:	je     0x10051f5a
10051f4c:	cmp    ecx,0x3
10051f4f:	je     0x10051f5f
10051f51:	mov    eax,ebp
10051f53:	call   0x10051a40
10051f58:	jmp    0x10051f6e
10051f5a:	cmp    ecx,0x3
10051f5d:	jne    0x10051f71
10051f5f:	cmp    eax,ebx
10051f61:	jne    0x10051f71
10051f63:	push   ebp
10051f64:	mov    esi,edi
10051f66:	call   0x10051bc0
10051f6b:	add    esp,0x4
10051f6e:	mov    DWORD PTR [edi+0x60],eax
10051f71:	cmp    DWORD PTR [edi+0x60],0x3
10051f75:	jb     0x100520b3
10051f7b:	mov    dx,WORD PTR [edi+0x6c]
10051f7f:	sub    dx,WORD PTR [edi+0x70]
10051f83:	mov    al,BYTE PTR [edi+0x60]
10051f86:	mov    esi,DWORD PTR [edi+0x16a4]
10051f8c:	movzx  ecx,dx
10051f8f:	mov    edx,DWORD PTR [edi+0x16a0]
10051f95:	mov    WORD PTR [esi+edx*2],cx
10051f99:	mov    edx,DWORD PTR [edi+0x1698]
10051f9f:	mov    esi,DWORD PTR [edi+0x16a0]
10051fa5:	sub    al,0x3
10051fa7:	mov    BYTE PTR [edx+esi*1],al
10051faa:	add    DWORD PTR [edi+0x16a0],ebx
10051fb0:	movzx  eax,al
10051fb3:	movzx  edx,BYTE PTR [eax+0x10069290]
10051fba:	add    WORD PTR [edi+edx*4+0x498],bx
10051fc2:	lea    eax,[edi+edx*4+0x498]
10051fc9:	add    ecx,0xffff
10051fcf:	cmp    cx,0x100
10051fd4:	jae    0x10051fe2
10051fd6:	movzx  eax,cx
10051fd9:	movzx  eax,BYTE PTR [eax+0x10069090]
10051fe0:	jmp    0x10051fef
10051fe2:	movzx  ecx,cx
10051fe5:	shr    ecx,0x7
10051fe8:	movzx  eax,BYTE PTR [ecx+0x10069190]
10051fef:	add    WORD PTR [edi+eax*4+0x988],bx
10051ff7:	mov    edx,DWORD PTR [edi+0x169c]
10051ffd:	xor    eax,eax
10051fff:	sub    edx,ebx
10052001:	cmp    DWORD PTR [edi+0x16a0],edx
10052007:	sete   al
1005200a:	mov    esi,eax
1005200c:	mov    eax,DWORD PTR [edi+0x60]
1005200f:	sub    DWORD PTR [edi+0x74],eax
10052012:	cmp    eax,DWORD PTR [edi+0x80]
10052018:	mov    ecx,DWORD PTR [edi+0x74]
1005201b:	ja     0x10052087
1005201d:	cmp    ecx,0x3
10052020:	jb     0x10052087
10052022:	add    eax,0xffffffff
10052025:	mov    DWORD PTR [edi+0x60],eax
10052028:	jmp    0x10052030
1005202a:	lea    ebx,[ebx+0x0]
10052030:	add    DWORD PTR [edi+0x6c],ebx
10052033:	mov    edx,DWORD PTR [edi+0x6c]
10052036:	mov    ecx,DWORD PTR [edi+0x38]
10052039:	movzx  eax,BYTE PTR [edx+ecx*1+0x2]
1005203e:	mov    ebp,DWORD PTR [edi+0x48]
10052041:	mov    ecx,DWORD PTR [edi+0x58]
10052044:	shl    ebp,cl
10052046:	mov    ecx,DWORD PTR [edi+0x44]
10052049:	xor    eax,ebp
1005204b:	and    eax,DWORD PTR [edi+0x54]
1005204e:	mov    ebp,DWORD PTR [edi+0x34]
10052051:	and    ebp,edx
10052053:	mov    edx,DWORD PTR [edi+0x40]
10052056:	mov    DWORD PTR [edi+0x48],eax
10052059:	mov    ax,WORD PTR [ecx+eax*2]
1005205d:	mov    WORD PTR [edx+ebp*2],ax
10052061:	mov    ecx,DWORD PTR [edi+0x6c]
10052064:	and    ecx,DWORD PTR [edi+0x34]
10052067:	mov    edx,DWORD PTR [edi+0x40]
1005206a:	movzx  ebp,WORD PTR [edx+ecx*2]
1005206e:	mov    eax,DWORD PTR [edi+0x48]
10052071:	mov    ecx,DWORD PTR [edi+0x44]
10052074:	mov    dx,WORD PTR [edi+0x6c]
10052078:	mov    WORD PTR [ecx+eax*2],dx
1005207c:	add    DWORD PTR [edi+0x60],0xffffffff
10052080:	jne    0x10052030
10052082:	jmp    0x1005210e
10052087:	add    DWORD PTR [edi+0x6c],eax
1005208a:	mov    eax,DWORD PTR [edi+0x6c]
1005208d:	mov    ecx,DWORD PTR [edi+0x38]
10052090:	lea    edx,[eax+ecx*1]
10052093:	mov    ecx,DWORD PTR [edi+0x58]
10052096:	mov    DWORD PTR [edi+0x60],0x0
1005209d:	movzx  eax,BYTE PTR [edx]
100520a0:	mov    DWORD PTR [edi+0x48],eax
100520a3:	movzx  edx,BYTE PTR [edx+0x1]
100520a7:	shl    eax,cl
100520a9:	xor    eax,edx
100520ab:	and    eax,DWORD PTR [edi+0x54]
100520ae:	mov    DWORD PTR [edi+0x48],eax
100520b1:	jmp    0x10052111
100520b3:	mov    eax,DWORD PTR [edi+0x6c]
100520b6:	mov    ecx,DWORD PTR [edi+0x38]
100520b9:	mov    al,BYTE PTR [eax+ecx*1]
100520bc:	mov    edx,DWORD PTR [edi+0x16a0]
100520c2:	mov    ecx,DWORD PTR [edi+0x16a4]
100520c8:	mov    WORD PTR [ecx+edx*2],0x0
100520ce:	mov    ecx,DWORD PTR [edi+0x16a0]
100520d4:	mov    edx,DWORD PTR [edi+0x1698]
100520da:	mov    BYTE PTR [edx+ecx*1],al
100520dd:	add    DWORD PTR [edi+0x16a0],ebx
100520e3:	movzx  edx,al
100520e6:	add    WORD PTR [edi+edx*4+0x94],bx
100520ee:	lea    eax,[edi+edx*4+0x94]
100520f5:	mov    eax,DWORD PTR [edi+0x169c]
100520fb:	xor    ecx,ecx
100520fd:	sub    eax,ebx
100520ff:	cmp    DWORD PTR [edi+0x16a0],eax
10052105:	sete   cl
10052108:	add    DWORD PTR [edi+0x74],0xffffffff
1005210c:	mov    esi,ecx
1005210e:	add    DWORD PTR [edi+0x6c],ebx
10052111:	test   esi,esi
10052113:	je     0x10051eb0
10052119:	mov    ecx,DWORD PTR [edi+0x5c]
1005211c:	test   ecx,ecx
1005211e:	jl     0x10052127
10052120:	mov    eax,DWORD PTR [edi+0x38]
10052123:	add    eax,ecx
10052125:	jmp    0x10052129
10052127:	xor    eax,eax
10052129:	mov    edx,DWORD PTR [edi+0x6c]
1005212c:	push   0x0
1005212e:	sub    edx,ecx
10052130:	push   edx
10052131:	push   eax
10052132:	push   edi
10052133:	call   0x10055c20
10052138:	mov    eax,DWORD PTR [edi+0x6c]
1005213b:	mov    DWORD PTR [edi+0x5c],eax
1005213e:	mov    eax,DWORD PTR [edi]
10052140:	add    esp,0x10
10052143:	call   0x10051030
10052148:	mov    ecx,DWORD PTR [edi]
1005214a:	cmp    DWORD PTR [ecx+0x10],0x0
1005214e:	jne    0x10051eb0
10052154:	pop    edi
10052155:	pop    esi
10052156:	pop    ebp
10052157:	xor    eax,eax
10052159:	pop    ebx
1005215a:	ret    
1005215b:	mov    ecx,DWORD PTR [edi+0x5c]
1005215e:	test   ecx,ecx
10052160:	jl     0x10052169
10052162:	mov    eax,DWORD PTR [edi+0x38]
10052165:	add    eax,ecx
10052167:	jmp    0x1005216b
10052169:	xor    eax,eax
1005216b:	xor    edx,edx
1005216d:	cmp    esi,0x4
10052170:	sete   dl
10052173:	push   edx
10052174:	mov    edx,DWORD PTR [edi+0x6c]
10052177:	sub    edx,ecx
10052179:	push   edx
1005217a:	push   eax
1005217b:	push   edi
1005217c:	call   0x10055c20
10052181:	mov    eax,DWORD PTR [edi+0x6c]
10052184:	mov    DWORD PTR [edi+0x5c],eax
10052187:	mov    eax,DWORD PTR [edi]
10052189:	add    esp,0x10
1005218c:	call   0x10051030
10052191:	mov    ecx,DWORD PTR [edi]
10052193:	xor    eax,eax
10052195:	cmp    DWORD PTR [ecx+0x10],eax
10052198:	jne    0x100521ab
1005219a:	cmp    esi,0x4
1005219d:	setne  al
100521a0:	pop    edi
100521a1:	pop    esi
100521a2:	pop    ebp
100521a3:	pop    ebx
100521a4:	sub    eax,0x1
100521a7:	and    eax,0x2
100521aa:	ret    
100521ab:	cmp    esi,0x4
100521ae:	sete   al
100521b1:	pop    edi
100521b2:	pop    esi
100521b3:	pop    ebp
100521b4:	pop    ebx
100521b5:	lea    eax,[eax+eax*1+0x1]
100521b9:	ret    
100521ba:	int3   
100521bb:	int3   
100521bc:	int3   
100521bd:	int3   
100521be:	int3   
100521bf:	int3   
100521c0:	push   ecx
100521c1:	push   ebx
100521c2:	push   ebp
100521c3:	push   esi
100521c4:	push   edi
100521c5:	mov    edi,DWORD PTR [esp+0x18]
100521c9:	mov    DWORD PTR [esp+0x10],0x0
100521d1:	mov    ebp,0x1
100521d6:	mov    eax,DWORD PTR [edi+0x74]
100521d9:	cmp    eax,0x106
100521de:	jae    0x10052203
100521e0:	call   0x10051c90
100521e5:	mov    eax,DWORD PTR [edi+0x74]
100521e8:	cmp    eax,0x106
100521ed:	mov    esi,DWORD PTR [esp+0x1c]
100521f1:	jae    0x100521fb
100521f3:	test   esi,esi
100521f5:	je     0x10052456
100521fb:	test   eax,eax
100521fd:	je     0x1005250b
10052203:	cmp    eax,0x3
10052206:	jb     0x10052255
10052208:	mov    eax,DWORD PTR [edi+0x48]
1005220b:	mov    ecx,DWORD PTR [edi+0x58]
1005220e:	mov    edx,DWORD PTR [edi+0x6c]
10052211:	mov    esi,DWORD PTR [edi+0x34]
10052214:	shl    eax,cl
10052216:	mov    ecx,DWORD PTR [edi+0x38]
10052219:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
1005221e:	xor    eax,ecx
10052220:	and    eax,DWORD PTR [edi+0x54]
10052223:	mov    ecx,DWORD PTR [edi+0x44]
10052226:	mov    DWORD PTR [edi+0x48],eax
10052229:	movzx  eax,WORD PTR [ecx+eax*2]
1005222d:	and    esi,edx
1005222f:	mov    edx,DWORD PTR [edi+0x40]
10052232:	mov    WORD PTR [edx+esi*2],ax
10052236:	mov    ecx,DWORD PTR [edi+0x6c]
10052239:	and    ecx,DWORD PTR [edi+0x34]
1005223c:	mov    edx,DWORD PTR [edi+0x40]
1005223f:	movzx  eax,WORD PTR [edx+ecx*2]
10052243:	mov    ecx,DWORD PTR [edi+0x48]
10052246:	mov    edx,DWORD PTR [edi+0x44]
10052249:	mov    DWORD PTR [esp+0x10],eax
1005224d:	movzx  eax,WORD PTR [edi+0x6c]
10052251:	mov    WORD PTR [edx+ecx*2],ax
10052255:	mov    edx,DWORD PTR [edi+0x70]
10052258:	mov    ecx,DWORD PTR [edi+0x60]
1005225b:	mov    DWORD PTR [edi+0x64],edx
1005225e:	mov    edx,DWORD PTR [esp+0x10]
10052262:	test   edx,edx
10052264:	mov    ebx,0x2
10052269:	mov    DWORD PTR [edi+0x78],ecx
1005226c:	mov    DWORD PTR [edi+0x60],ebx
1005226f:	je     0x100522e2
10052271:	mov    eax,ecx
10052273:	cmp    eax,DWORD PTR [edi+0x80]
10052279:	jae    0x100522e2
1005227b:	mov    eax,DWORD PTR [edi+0x6c]
1005227e:	mov    ecx,DWORD PTR [edi+0x2c]
10052281:	sub    eax,edx
10052283:	sub    ecx,0x106
10052289:	cmp    eax,ecx
1005228b:	ja     0x100522e2
1005228d:	mov    ecx,DWORD PTR [edi+0x88]
10052293:	cmp    ecx,ebx
10052295:	je     0x100522a5
10052297:	cmp    ecx,0x3
1005229a:	je     0x100522aa
1005229c:	mov    eax,edx
1005229e:	call   0x10051a40
100522a3:	jmp    0x100522b9
100522a5:	cmp    ecx,0x3
100522a8:	jne    0x100522bc
100522aa:	cmp    eax,ebp
100522ac:	jne    0x100522bc
100522ae:	push   edx
100522af:	mov    esi,edi
100522b1:	call   0x10051bc0
100522b6:	add    esp,0x4
100522b9:	mov    DWORD PTR [edi+0x60],eax
100522bc:	mov    eax,DWORD PTR [edi+0x60]
100522bf:	cmp    eax,0x5
100522c2:	ja     0x100522e2
100522c4:	cmp    DWORD PTR [edi+0x88],ebp
100522ca:	je     0x100522df
100522cc:	cmp    eax,0x3
100522cf:	jne    0x100522e2
100522d1:	mov    edx,DWORD PTR [edi+0x6c]
100522d4:	sub    edx,DWORD PTR [edi+0x70]
100522d7:	cmp    edx,0x1000
100522dd:	jbe    0x100522e2
100522df:	mov    DWORD PTR [edi+0x60],ebx
100522e2:	mov    eax,DWORD PTR [edi+0x78]
100522e5:	cmp    eax,0x3
100522e8:	jb     0x1005245e
100522ee:	cmp    DWORD PTR [edi+0x60],eax
100522f1:	ja     0x1005245e
100522f7:	mov    dx,WORD PTR [edi+0x6c]
100522fb:	sub    dx,WORD PTR [edi+0x64]
100522ff:	mov    eax,DWORD PTR [edi+0x6c]
10052302:	mov    ecx,DWORD PTR [edi+0x74]
10052305:	mov    ebx,DWORD PTR [edi+0x16a4]
1005230b:	lea    esi,[eax+ecx*1-0x3]
1005230f:	mov    al,BYTE PTR [edi+0x78]
10052312:	sub    dx,bp
10052315:	movzx  ecx,dx
10052318:	mov    edx,DWORD PTR [edi+0x16a0]
1005231e:	mov    WORD PTR [ebx+edx*2],cx
10052322:	mov    edx,DWORD PTR [edi+0x1698]
10052328:	mov    ebx,DWORD PTR [edi+0x16a0]
1005232e:	sub    al,0x3
10052330:	mov    BYTE PTR [edx+ebx*1],al
10052333:	add    DWORD PTR [edi+0x16a0],ebp
10052339:	movzx  eax,al
1005233c:	movzx  edx,BYTE PTR [eax+0x10069290]
10052343:	add    WORD PTR [edi+edx*4+0x498],bp
1005234b:	lea    eax,[edi+edx*4+0x498]
10052352:	add    ecx,0xffff
10052358:	cmp    cx,0x100
1005235d:	jae    0x1005236b
1005235f:	movzx  eax,cx
10052362:	movzx  eax,BYTE PTR [eax+0x10069090]
10052369:	jmp    0x10052378
1005236b:	movzx  ecx,cx
1005236e:	shr    ecx,0x7
10052371:	movzx  eax,BYTE PTR [ecx+0x10069190]
10052378:	add    WORD PTR [edi+eax*4+0x988],bp
10052380:	mov    edx,DWORD PTR [edi+0x169c]
10052386:	mov    eax,DWORD PTR [edi+0x78]
10052389:	sub    edx,ebp
1005238b:	xor    ebx,ebx
1005238d:	cmp    DWORD PTR [edi+0x16a0],edx
10052393:	mov    ecx,ebp
10052395:	sete   bl
10052398:	sub    ecx,eax
1005239a:	add    DWORD PTR [edi+0x74],ecx
1005239d:	add    eax,0xfffffffe
100523a0:	mov    DWORD PTR [edi+0x78],eax
100523a3:	add    DWORD PTR [edi+0x6c],ebp
100523a6:	mov    edx,DWORD PTR [edi+0x6c]
100523a9:	cmp    edx,esi
100523ab:	ja     0x100523fc
100523ad:	mov    eax,DWORD PTR [edi+0x48]
100523b0:	mov    ecx,DWORD PTR [edi+0x58]
100523b3:	mov    ebp,DWORD PTR [edi+0x34]
100523b6:	shl    eax,cl
100523b8:	mov    ecx,DWORD PTR [edi+0x38]
100523bb:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
100523c0:	xor    eax,ecx
100523c2:	and    eax,DWORD PTR [edi+0x54]
100523c5:	mov    ecx,DWORD PTR [edi+0x44]
100523c8:	mov    DWORD PTR [edi+0x48],eax
100523cb:	movzx  eax,WORD PTR [ecx+eax*2]
100523cf:	and    ebp,edx
100523d1:	mov    edx,DWORD PTR [edi+0x40]
100523d4:	mov    WORD PTR [edx+ebp*2],ax
100523d8:	mov    ecx,DWORD PTR [edi+0x6c]
100523db:	and    ecx,DWORD PTR [edi+0x34]
100523de:	mov    edx,DWORD PTR [edi+0x40]
100523e1:	movzx  eax,WORD PTR [edx+ecx*2]
100523e5:	mov    ecx,DWORD PTR [edi+0x48]
100523e8:	mov    edx,DWORD PTR [edi+0x44]
100523eb:	mov    DWORD PTR [esp+0x10],eax
100523ef:	movzx  eax,WORD PTR [edi+0x6c]
100523f3:	mov    WORD PTR [edx+ecx*2],ax
100523f7:	mov    ebp,0x1
100523fc:	add    DWORD PTR [edi+0x78],0xffffffff
10052400:	jne    0x100523a3
10052402:	add    DWORD PTR [edi+0x6c],ebp
10052405:	test   ebx,ebx
10052407:	mov    eax,DWORD PTR [edi+0x6c]
1005240a:	mov    DWORD PTR [edi+0x68],0x0
10052411:	mov    DWORD PTR [edi+0x60],0x2
10052418:	je     0x100521d6
1005241e:	mov    edx,DWORD PTR [edi+0x5c]
10052421:	test   edx,edx
10052423:	jl     0x1005242c
10052425:	mov    ecx,DWORD PTR [edi+0x38]
10052428:	add    ecx,edx
1005242a:	jmp    0x1005242e
1005242c:	xor    ecx,ecx
1005242e:	push   0x0
10052430:	sub    eax,edx
10052432:	push   eax
10052433:	push   ecx
10052434:	push   edi
10052435:	call   0x10055c20
1005243a:	mov    ecx,DWORD PTR [edi+0x6c]
1005243d:	mov    eax,DWORD PTR [edi]
1005243f:	add    esp,0x10
10052442:	mov    DWORD PTR [edi+0x5c],ecx
10052445:	call   0x10051030
1005244a:	mov    edx,DWORD PTR [edi]
1005244c:	cmp    DWORD PTR [edx+0x10],0x0
10052450:	jne    0x100521d6
10052456:	pop    edi
10052457:	pop    esi
10052458:	pop    ebp
10052459:	xor    eax,eax
1005245b:	pop    ebx
1005245c:	pop    ecx
1005245d:	ret    
1005245e:	cmp    DWORD PTR [edi+0x68],0x0
10052462:	je     0x100524fc
10052468:	mov    eax,DWORD PTR [edi+0x6c]
1005246b:	mov    ecx,DWORD PTR [edi+0x38]
1005246e:	mov    al,BYTE PTR [eax+ecx*1-0x1]
10052472:	mov    edx,DWORD PTR [edi+0x16a0]
10052478:	mov    ecx,DWORD PTR [edi+0x16a4]
1005247e:	mov    WORD PTR [ecx+edx*2],0x0
10052484:	mov    edx,DWORD PTR [edi+0x1698]
1005248a:	mov    ecx,DWORD PTR [edi+0x16a0]
10052490:	mov    BYTE PTR [edx+ecx*1],al
10052493:	add    DWORD PTR [edi+0x16a0],ebp
10052499:	movzx  edx,al
1005249c:	add    WORD PTR [edi+edx*4+0x94],bp
100524a4:	lea    eax,[edi+edx*4+0x94]
100524ab:	mov    eax,DWORD PTR [edi+0x169c]
100524b1:	sub    eax,ebp
100524b3:	cmp    DWORD PTR [edi+0x16a0],eax
100524b9:	jne    0x100524ea
100524bb:	mov    ecx,DWORD PTR [edi+0x5c]
100524be:	test   ecx,ecx
100524c0:	jl     0x100524c9
100524c2:	mov    eax,DWORD PTR [edi+0x38]
100524c5:	add    eax,ecx
100524c7:	jmp    0x100524cb
100524c9:	xor    eax,eax
100524cb:	mov    edx,DWORD PTR [edi+0x6c]
100524ce:	push   0x0
100524d0:	sub    edx,ecx
100524d2:	push   edx
100524d3:	push   eax
100524d4:	push   edi
100524d5:	call   0x10055c20
100524da:	mov    eax,DWORD PTR [edi+0x6c]
100524dd:	mov    DWORD PTR [edi+0x5c],eax
100524e0:	mov    eax,DWORD PTR [edi]
100524e2:	add    esp,0x10
100524e5:	call   0x10051030
100524ea:	mov    ecx,DWORD PTR [edi]
100524ec:	add    DWORD PTR [edi+0x6c],ebp
100524ef:	add    DWORD PTR [edi+0x74],0xffffffff
100524f3:	cmp    DWORD PTR [ecx+0x10],0x0
100524f7:	jmp    0x10052450
100524fc:	add    DWORD PTR [edi+0x6c],ebp
100524ff:	add    DWORD PTR [edi+0x74],0xffffffff
10052503:	mov    DWORD PTR [edi+0x68],ebp
10052506:	jmp    0x100521d6
1005250b:	cmp    DWORD PTR [edi+0x68],0x0
1005250f:	je     0x1005255b
10052511:	mov    edx,DWORD PTR [edi+0x6c]
10052514:	mov    eax,DWORD PTR [edi+0x38]
10052517:	mov    al,BYTE PTR [edx+eax*1-0x1]
1005251b:	mov    ecx,DWORD PTR [edi+0x16a0]
10052521:	mov    edx,DWORD PTR [edi+0x16a4]
10052527:	mov    WORD PTR [edx+ecx*2],0x0
1005252d:	mov    edx,DWORD PTR [edi+0x16a0]
10052533:	mov    ecx,DWORD PTR [edi+0x1698]
10052539:	mov    BYTE PTR [ecx+edx*1],al
1005253c:	add    DWORD PTR [edi+0x16a0],ebp
10052542:	movzx  eax,al
10052545:	add    WORD PTR [edi+eax*4+0x94],bp
1005254d:	lea    eax,[edi+eax*4+0x94]
10052554:	mov    DWORD PTR [edi+0x68],0x0
1005255b:	mov    ecx,DWORD PTR [edi+0x5c]
1005255e:	test   ecx,ecx
10052560:	jl     0x10052569
10052562:	mov    eax,DWORD PTR [edi+0x38]
10052565:	add    eax,ecx
10052567:	jmp    0x1005256b
10052569:	xor    eax,eax
1005256b:	xor    edx,edx
1005256d:	cmp    esi,0x4
10052570:	sete   dl
10052573:	push   edx
10052574:	mov    edx,DWORD PTR [edi+0x6c]
10052577:	sub    edx,ecx
10052579:	push   edx
1005257a:	push   eax
1005257b:	push   edi
1005257c:	call   0x10055c20
10052581:	mov    eax,DWORD PTR [edi+0x6c]
10052584:	mov    DWORD PTR [edi+0x5c],eax
10052587:	mov    eax,DWORD PTR [edi]
10052589:	add    esp,0x10
1005258c:	call   0x10051030
10052591:	mov    ecx,DWORD PTR [edi]
10052593:	xor    eax,eax
10052595:	cmp    DWORD PTR [ecx+0x10],eax
10052598:	jne    0x100525ac
1005259a:	cmp    esi,0x4
1005259d:	setne  al
100525a0:	pop    edi
100525a1:	pop    esi
100525a2:	pop    ebp
100525a3:	pop    ebx
100525a4:	sub    eax,0x1
100525a7:	and    eax,0x2
100525aa:	pop    ecx
100525ab:	ret    
100525ac:	cmp    esi,0x4
100525af:	sete   al
100525b2:	pop    edi
100525b3:	pop    esi
100525b4:	pop    ebp
100525b5:	pop    ebx
100525b6:	lea    eax,[eax+eax*1+0x1]
100525ba:	pop    ecx
100525bb:	ret    
100525bc:	int3   
100525bd:	int3   
100525be:	int3   
100525bf:	int3   
100525c0:	push   ebx
100525c1:	push   esi
100525c2:	push   edi
100525c3:	mov    edi,DWORD PTR [esp+0x10]
100525c7:	xor    ebx,ebx
100525c9:	cmp    edi,ebx
100525cb:	je     0x10052646
100525cd:	mov    esi,DWORD PTR [edi+0x1c]
100525d0:	cmp    esi,ebx
100525d2:	je     0x10052646
100525d4:	cmp    DWORD PTR [edi+0x20],ebx
100525d7:	je     0x10052646
100525d9:	cmp    DWORD PTR [edi+0x24],ebx
100525dc:	je     0x10052646
100525de:	mov    DWORD PTR [edi+0x14],ebx
100525e1:	mov    DWORD PTR [edi+0x8],ebx
100525e4:	mov    DWORD PTR [edi+0x18],ebx
100525e7:	mov    DWORD PTR [edi+0x2c],0x2
100525ee:	mov    eax,DWORD PTR [esi+0x8]
100525f1:	mov    DWORD PTR [esi+0x10],eax
100525f4:	mov    eax,DWORD PTR [esi+0x18]
100525f7:	cmp    eax,ebx
100525f9:	mov    DWORD PTR [esi+0x14],ebx
100525fc:	jge    0x10052603
100525fe:	neg    eax
10052600:	mov    DWORD PTR [esi+0x18],eax
10052603:	mov    eax,DWORD PTR [esi+0x18]
10052606:	mov    ecx,eax
10052608:	neg    ecx
1005260a:	sbb    ecx,ecx
1005260c:	and    ecx,0xffffffb9
1005260f:	push   ebx
10052610:	add    ecx,0x71
10052613:	cmp    eax,0x2
10052616:	push   ebx
10052617:	mov    DWORD PTR [esi+0x4],ecx
1005261a:	push   ebx
1005261b:	jne    0x10052624
1005261d:	call   0x100560d0
10052622:	jmp    0x10052629
10052624:	call   0x100540f0
10052629:	add    esp,0xc
1005262c:	mov    DWORD PTR [edi+0x30],eax
1005262f:	push   esi
10052630:	mov    DWORD PTR [esi+0x28],ebx
10052633:	call   0x100555d0
10052638:	add    esp,0x4
1005263b:	call   0x100519b0
10052640:	pop    edi
10052641:	pop    esi
10052642:	xor    eax,eax
10052644:	pop    ebx
10052645:	ret    
10052646:	pop    edi
10052647:	pop    esi
10052648:	mov    eax,0xfffffffe
1005264d:	pop    ebx
1005264e:	ret    
1005264f:	int3   
10052650:	mov    eax,DWORD PTR [esp+0x1c]
10052654:	xor    ecx,ecx
10052656:	cmp    eax,ecx
10052658:	push   ebp
10052659:	mov    ebp,0x1
1005265e:	je     0x10052868
10052664:	cmp    BYTE PTR [eax],0x31
10052667:	jne    0x10052868
1005266d:	cmp    DWORD PTR [esp+0x24],0x38
10052672:	jne    0x10052868
10052678:	push   edi
10052679:	mov    edi,DWORD PTR [esp+0xc]
1005267d:	cmp    edi,ecx
1005267f:	jne    0x10052689
10052681:	pop    edi
10052682:	mov    eax,0xfffffffe
10052687:	pop    ebp
10052688:	ret    
10052689:	cmp    DWORD PTR [edi+0x20],ecx
1005268c:	mov    DWORD PTR [edi+0x18],ecx
1005268f:	jne    0x1005269b
10052691:	mov    DWORD PTR [edi+0x20],0x100560f0
10052698:	mov    DWORD PTR [edi+0x28],ecx
1005269b:	cmp    DWORD PTR [edi+0x24],ecx
1005269e:	jne    0x100526a7
100526a0:	mov    DWORD PTR [edi+0x24],0x10056110
100526a7:	cmp    DWORD PTR [esp+0x10],0xffffffff
100526ac:	jne    0x100526b6
100526ae:	mov    DWORD PTR [esp+0x10],0x6
100526b6:	push   ebx
100526b7:	mov    ebx,DWORD PTR [esp+0x1c]
100526bb:	cmp    ebx,ecx
100526bd:	jge    0x100526c5
100526bf:	xor    ebp,ebp
100526c1:	neg    ebx
100526c3:	jmp    0x100526d2
100526c5:	cmp    ebx,0xf
100526c8:	jle    0x100526d2
100526ca:	mov    ebp,0x2
100526cf:	sub    ebx,0x10
100526d2:	mov    eax,DWORD PTR [esp+0x20]
100526d6:	add    eax,0xffffffff
100526d9:	cmp    eax,0x8
100526dc:	ja     0x1005285f
100526e2:	cmp    DWORD PTR [esp+0x18],0x8
100526e7:	jne    0x1005285f
100526ed:	lea    ecx,[ebx-0x8]
100526f0:	cmp    ecx,0x7
100526f3:	ja     0x1005285f
100526f9:	cmp    DWORD PTR [esp+0x14],0x9
100526fe:	ja     0x1005285f
10052704:	cmp    DWORD PTR [esp+0x24],0x4
10052709:	ja     0x1005285f
1005270f:	cmp    ebx,0x8
10052712:	jne    0x10052719
10052714:	mov    ebx,0x9
10052719:	mov    edx,DWORD PTR [edi+0x28]
1005271c:	mov    eax,DWORD PTR [edi+0x20]
1005271f:	push   esi
10052720:	push   0x16c0
10052725:	push   0x1
10052727:	push   edx
10052728:	call   eax
1005272a:	mov    esi,eax
1005272c:	add    esp,0xc
1005272f:	test   esi,esi
10052731:	je     0x10052855
10052737:	mov    DWORD PTR [edi+0x1c],esi
1005273a:	mov    DWORD PTR [esi+0x18],ebp
1005273d:	mov    ecx,ebx
1005273f:	mov    ebp,0x1
10052744:	shl    ebp,cl
10052746:	mov    DWORD PTR [esi+0x30],ebx
10052749:	mov    ebx,DWORD PTR [esp+0x24]
1005274d:	mov    eax,0x1
10052752:	lea    ecx,[ebp-0x1]
10052755:	mov    DWORD PTR [esi+0x34],ecx
10052758:	lea    ecx,[ebx+0x7]
1005275b:	shl    eax,cl
1005275d:	mov    DWORD PTR [esi+0x50],ecx
10052760:	add    ecx,0x2
10052763:	mov    DWORD PTR [esi],edi
10052765:	mov    DWORD PTR [esi+0x4c],eax
10052768:	add    eax,0xffffffff
1005276b:	mov    DWORD PTR [esi+0x54],eax
1005276e:	mov    eax,0xaaaaaaab
10052773:	mul    ecx
10052775:	shr    edx,1
10052777:	mov    DWORD PTR [esi+0x1c],0x0
1005277e:	mov    DWORD PTR [esi+0x2c],ebp
10052781:	mov    DWORD PTR [esi+0x58],edx
10052784:	mov    edx,DWORD PTR [edi+0x28]
10052787:	mov    eax,DWORD PTR [edi+0x20]
1005278a:	push   0x2
1005278c:	push   ebp
1005278d:	push   edx
1005278e:	call   eax
10052790:	mov    ecx,DWORD PTR [esi+0x2c]
10052793:	mov    DWORD PTR [esi+0x38],eax
10052796:	mov    edx,DWORD PTR [edi+0x28]
10052799:	mov    eax,DWORD PTR [edi+0x20]
1005279c:	push   0x2
1005279e:	push   ecx
1005279f:	push   edx
100527a0:	call   eax
100527a2:	mov    ecx,DWORD PTR [esi+0x4c]
100527a5:	mov    DWORD PTR [esi+0x40],eax
100527a8:	mov    edx,DWORD PTR [edi+0x28]
100527ab:	mov    eax,DWORD PTR [edi+0x20]
100527ae:	push   0x2
100527b0:	push   ecx
100527b1:	push   edx
100527b2:	call   eax
100527b4:	mov    DWORD PTR [esi+0x44],eax
100527b7:	lea    ecx,[ebx+0x6]
100527ba:	mov    eax,0x1
100527bf:	shl    eax,cl
100527c1:	push   0x4
100527c3:	mov    DWORD PTR [esi+0x169c],eax
100527c9:	mov    ecx,DWORD PTR [edi+0x28]
100527cc:	mov    edx,DWORD PTR [edi+0x20]
100527cf:	push   eax
100527d0:	push   ecx
100527d1:	call   edx
100527d3:	mov    ecx,DWORD PTR [esi+0x169c]
100527d9:	add    esp,0x30
100527dc:	cmp    DWORD PTR [esi+0x38],0x0
100527e0:	lea    edx,[ecx*4+0x0]
100527e7:	mov    DWORD PTR [esi+0x8],eax
100527ea:	mov    DWORD PTR [esi+0xc],edx
100527ed:	je     0x1005283d
100527ef:	cmp    DWORD PTR [esi+0x40],0x0
100527f3:	je     0x1005283d
100527f5:	cmp    DWORD PTR [esi+0x44],0x0
100527f9:	je     0x1005283d
100527fb:	test   eax,eax
100527fd:	je     0x1005283d
100527ff:	mov    edx,ecx
10052801:	shr    edx,1
10052803:	lea    edx,[eax+edx*2]
10052806:	lea    eax,[eax+ecx*2]
10052809:	add    eax,ecx
1005280b:	mov    ecx,DWORD PTR [esp+0x18]
1005280f:	mov    DWORD PTR [esi+0x16a4],edx
10052815:	mov    edx,DWORD PTR [esp+0x28]
10052819:	push   edi
1005281a:	mov    DWORD PTR [esi+0x1698],eax
10052820:	mov    DWORD PTR [esi+0x84],ecx
10052826:	mov    DWORD PTR [esi+0x88],edx
1005282c:	mov    BYTE PTR [esi+0x24],0x8
10052830:	call   0x100525c0
10052835:	add    esp,0x4
10052838:	pop    esi
10052839:	pop    ebx
1005283a:	pop    edi
1005283b:	pop    ebp
1005283c:	ret    
1005283d:	mov    DWORD PTR [esi+0x4],0x29a
10052844:	mov    eax,ds:0x1006b518
10052849:	push   edi
1005284a:	mov    DWORD PTR [edi+0x18],eax
1005284d:	call   0x10051860
10052852:	add    esp,0x4
10052855:	pop    esi
10052856:	pop    ebx
10052857:	pop    edi
10052858:	mov    eax,0xfffffffc
1005285d:	pop    ebp
1005285e:	ret    
1005285f:	pop    ebx
10052860:	pop    edi
10052861:	mov    eax,0xfffffffe
10052866:	pop    ebp
10052867:	ret    
10052868:	mov    eax,0xfffffffa
1005286d:	pop    ebp
1005286e:	ret    
1005286f:	int3   
10052870:	mov    edx,DWORD PTR [esp+0x4]
10052874:	xor    ecx,ecx
10052876:	cmp    edx,ecx
10052878:	je     0x100528c7
1005287a:	mov    eax,DWORD PTR [edx+0x1c]
1005287d:	cmp    eax,ecx
1005287f:	je     0x100528c7
10052881:	mov    DWORD PTR [eax+0x1c],ecx
10052884:	mov    DWORD PTR [edx+0x14],ecx
10052887:	mov    DWORD PTR [edx+0x8],ecx
1005288a:	mov    DWORD PTR [edx+0x18],ecx
1005288d:	mov    DWORD PTR [edx+0x30],0x1
10052894:	mov    DWORD PTR [eax],ecx
10052896:	mov    DWORD PTR [eax+0x4],ecx
10052899:	mov    DWORD PTR [eax+0xc],ecx
1005289c:	mov    DWORD PTR [eax+0x20],ecx
1005289f:	mov    DWORD PTR [eax+0x28],ecx
100528a2:	mov    DWORD PTR [eax+0x2c],ecx
100528a5:	mov    DWORD PTR [eax+0x30],ecx
100528a8:	mov    DWORD PTR [eax+0x38],ecx
100528ab:	mov    DWORD PTR [eax+0x3c],ecx
100528ae:	lea    ecx,[eax+0x530]
100528b4:	mov    DWORD PTR [eax+0x14],0x8000
100528bb:	mov    DWORD PTR [eax+0x6c],ecx
100528be:	mov    DWORD PTR [eax+0x50],ecx
100528c1:	mov    DWORD PTR [eax+0x4c],ecx
100528c4:	xor    eax,eax
100528c6:	ret    
100528c7:	mov    eax,0xfffffffe
100528cc:	ret    
100528cd:	int3   
100528ce:	int3   
100528cf:	int3   
100528d0:	mov    eax,DWORD PTR [esp+0xc]
100528d4:	push   edi
100528d5:	xor    edi,edi
100528d7:	cmp    eax,edi
100528d9:	je     0x10052994
100528df:	cmp    BYTE PTR [eax],0x31
100528e2:	jne    0x10052994
100528e8:	cmp    DWORD PTR [esp+0x14],0x38
100528ed:	jne    0x10052994
100528f3:	push   esi
100528f4:	mov    esi,DWORD PTR [esp+0xc]
100528f8:	cmp    esi,edi
100528fa:	je     0x1005298c
10052900:	cmp    DWORD PTR [esi+0x20],edi
10052903:	mov    DWORD PTR [esi+0x18],edi
10052906:	jne    0x10052912
10052908:	mov    DWORD PTR [esi+0x20],0x100560f0
1005290f:	mov    DWORD PTR [esi+0x28],edi
10052912:	cmp    DWORD PTR [esi+0x24],edi
10052915:	jne    0x1005291e
10052917:	mov    DWORD PTR [esi+0x24],0x10056110
1005291e:	mov    eax,DWORD PTR [esi+0x28]
10052921:	mov    ecx,DWORD PTR [esi+0x20]
10052924:	push   0x2530
10052929:	push   0x1
1005292b:	push   eax
1005292c:	call   ecx
1005292e:	add    esp,0xc
10052931:	cmp    eax,edi
10052933:	jne    0x1005293d
10052935:	pop    esi
10052936:	mov    eax,0xfffffffc
1005293b:	pop    edi
1005293c:	ret    
1005293d:	mov    ecx,DWORD PTR [esp+0x10]
10052941:	cmp    ecx,edi
10052943:	mov    DWORD PTR [esi+0x1c],eax
10052946:	jge    0x1005294f
10052948:	mov    DWORD PTR [eax+0x8],edi
1005294b:	neg    ecx
1005294d:	jmp    0x10052962
1005294f:	mov    edx,ecx
10052951:	sar    edx,0x4
10052954:	add    edx,0x1
10052957:	cmp    ecx,0x30
1005295a:	mov    DWORD PTR [eax+0x8],edx
1005295d:	jge    0x10052962
1005295f:	and    ecx,0xf
10052962:	lea    edx,[ecx-0x8]
10052965:	cmp    edx,0x7
10052968:	ja     0x1005297c
1005296a:	push   esi
1005296b:	mov    DWORD PTR [eax+0x24],ecx
1005296e:	mov    DWORD PTR [eax+0x34],edi
10052971:	call   0x10052870
10052976:	add    esp,0x4
10052979:	pop    esi
1005297a:	pop    edi
1005297b:	ret    
1005297c:	mov    ecx,DWORD PTR [esi+0x24]
1005297f:	push   eax
10052980:	mov    eax,DWORD PTR [esi+0x28]
10052983:	push   eax
10052984:	call   ecx
10052986:	add    esp,0x8
10052989:	mov    DWORD PTR [esi+0x1c],edi
1005298c:	pop    esi
1005298d:	mov    eax,0xfffffffe
10052992:	pop    edi
10052993:	ret    
10052994:	mov    eax,0xfffffffa
10052999:	pop    edi
1005299a:	ret    
1005299b:	int3   
1005299c:	int3   
1005299d:	int3   
1005299e:	int3   
1005299f:	int3   
100529a0:	mov    DWORD PTR [eax+0x4c],0x10067fe0
100529a7:	mov    DWORD PTR [eax+0x54],0x9
100529ae:	mov    DWORD PTR [eax+0x50],0x100687e0
100529b5:	mov    DWORD PTR [eax+0x58],0x5
100529bc:	ret    
100529bd:	int3   
100529be:	int3   
100529bf:	int3   
100529c0:	push   ebp
100529c1:	push   esi
100529c2:	mov    esi,DWORD PTR [ebx+0x1c]
100529c5:	xor    ebp,ebp
100529c7:	cmp    DWORD PTR [esi+0x34],ebp
100529ca:	push   edi
100529cb:	mov    edi,eax
100529cd:	jne    0x100529f8
100529cf:	mov    ecx,DWORD PTR [esi+0x24]
100529d2:	mov    edx,DWORD PTR [ebx+0x20]
100529d5:	mov    eax,0x1
100529da:	shl    eax,cl
100529dc:	mov    ecx,DWORD PTR [ebx+0x28]
100529df:	push   0x1
100529e1:	push   eax
100529e2:	push   ecx
100529e3:	call   edx
100529e5:	add    esp,0xc
100529e8:	cmp    eax,ebp
100529ea:	mov    DWORD PTR [esi+0x34],eax
100529ed:	jne    0x100529f8
100529ef:	pop    edi
100529f0:	pop    esi
100529f1:	mov    eax,0x1
100529f6:	pop    ebp
100529f7:	ret    
100529f8:	cmp    DWORD PTR [esi+0x28],ebp
100529fb:	jne    0x10052a10
100529fd:	mov    ecx,DWORD PTR [esi+0x24]
10052a00:	mov    eax,0x1
10052a05:	shl    eax,cl
10052a07:	mov    DWORD PTR [esi+0x30],ebp
10052a0a:	mov    DWORD PTR [esi+0x2c],ebp
10052a0d:	mov    DWORD PTR [esi+0x28],eax
10052a10:	sub    edi,DWORD PTR [ebx+0x10]
10052a13:	mov    eax,DWORD PTR [esi+0x28]
10052a16:	cmp    edi,eax
10052a18:	jb     0x10052a3c
10052a1a:	mov    ecx,DWORD PTR [ebx+0xc]
10052a1d:	mov    edx,DWORD PTR [esi+0x34]
10052a20:	push   eax
10052a21:	sub    ecx,eax
10052a23:	push   ecx
10052a24:	push   edx
10052a25:	call   0x10045180
10052a2a:	mov    eax,DWORD PTR [esi+0x28]
10052a2d:	add    esp,0xc
10052a30:	pop    edi
10052a31:	mov    DWORD PTR [esi+0x30],ebp
10052a34:	mov    DWORD PTR [esi+0x2c],eax
10052a37:	pop    esi
10052a38:	xor    eax,eax
10052a3a:	pop    ebp
10052a3b:	ret    
10052a3c:	sub    eax,DWORD PTR [esi+0x30]
10052a3f:	mov    ebp,eax
10052a41:	cmp    ebp,edi
10052a43:	jbe    0x10052a47
10052a45:	mov    ebp,edi
10052a47:	mov    ecx,DWORD PTR [ebx+0xc]
10052a4a:	mov    edx,DWORD PTR [esi+0x34]
10052a4d:	add    edx,DWORD PTR [esi+0x30]
10052a50:	push   ebp
10052a51:	sub    ecx,edi
10052a53:	push   ecx
10052a54:	push   edx
10052a55:	call   0x10045180
10052a5a:	add    esp,0xc
10052a5d:	sub    edi,ebp
10052a5f:	je     0x10052a83
10052a61:	mov    eax,DWORD PTR [ebx+0xc]
10052a64:	mov    ecx,DWORD PTR [esi+0x34]
10052a67:	push   edi
10052a68:	sub    eax,edi
10052a6a:	push   eax
10052a6b:	push   ecx
10052a6c:	call   0x10045180
10052a71:	mov    edx,DWORD PTR [esi+0x28]
10052a74:	add    esp,0xc
10052a77:	mov    DWORD PTR [esi+0x30],edi
10052a7a:	pop    edi
10052a7b:	mov    DWORD PTR [esi+0x2c],edx
10052a7e:	pop    esi
10052a7f:	xor    eax,eax
10052a81:	pop    ebp
10052a82:	ret    
10052a83:	add    DWORD PTR [esi+0x30],ebp
10052a86:	mov    ecx,DWORD PTR [esi+0x30]
10052a89:	mov    eax,DWORD PTR [esi+0x28]
10052a8c:	cmp    ecx,eax
10052a8e:	jne    0x10052a97
10052a90:	mov    DWORD PTR [esi+0x30],0x0
10052a97:	mov    ecx,DWORD PTR [esi+0x2c]
10052a9a:	cmp    ecx,eax
10052a9c:	jae    0x10052aa3
10052a9e:	add    ecx,ebp
10052aa0:	mov    DWORD PTR [esi+0x2c],ecx
10052aa3:	pop    edi
10052aa4:	pop    esi
10052aa5:	xor    eax,eax
10052aa7:	pop    ebp
10052aa8:	ret    
10052aa9:	int3   
10052aaa:	int3   
10052aab:	int3   
10052aac:	int3   
10052aad:	int3   
10052aae:	int3   
10052aaf:	int3   
10052ab0:	mov    eax,DWORD PTR [esp+0x4]
10052ab4:	sub    esp,0x2c
10052ab7:	test   eax,eax
10052ab9:	push   edi
10052aba:	je     0x1005400c
10052ac0:	mov    edi,DWORD PTR [eax+0x1c]
10052ac3:	test   edi,edi
10052ac5:	je     0x1005400c
10052acb:	cmp    DWORD PTR [eax+0xc],0x0
10052acf:	je     0x1005400c
10052ad5:	cmp    DWORD PTR [eax],0x0
10052ad8:	jne    0x10052ae4
10052ada:	cmp    DWORD PTR [eax+0x4],0x0
10052ade:	jne    0x1005400c
10052ae4:	cmp    DWORD PTR [edi],0xb
10052ae7:	jne    0x10052aef
10052ae9:	mov    DWORD PTR [edi],0xc
10052aef:	mov    ecx,DWORD PTR [eax+0xc]
10052af2:	mov    edx,DWORD PTR [eax+0x4]
10052af5:	push   ebx
10052af6:	mov    ebx,DWORD PTR [edi+0x38]
10052af9:	push   ebp
10052afa:	mov    ebp,DWORD PTR [eax]
10052afc:	mov    DWORD PTR [esp+0x24],ecx
10052b00:	mov    ecx,DWORD PTR [eax+0x10]
10052b03:	mov    eax,DWORD PTR [edi]
10052b05:	cmp    eax,0x1c
10052b08:	push   esi
10052b09:	mov    esi,DWORD PTR [edi+0x3c]
10052b0c:	mov    DWORD PTR [esp+0x1c],ecx
10052b10:	mov    DWORD PTR [esp+0x10],edx
10052b14:	mov    DWORD PTR [esp+0x18],ebx
10052b18:	mov    DWORD PTR [esp+0x38],edx
10052b1c:	mov    DWORD PTR [esp+0x2c],ecx
10052b20:	mov    DWORD PTR [esp+0x30],0x0
10052b28:	ja     0x10053eb9
10052b2e:	mov    edi,edi
10052b30:	jmp    DWORD PTR [eax*4+0x10054018]
10052b37:	cmp    DWORD PTR [edi+0x8],0x0
10052b3b:	jne    0x10052b48
10052b3d:	mov    DWORD PTR [edi],0xc
10052b43:	jmp    0x10053eae
10052b48:	cmp    esi,0x10
10052b4b:	jae    0x10052b78
10052b4d:	lea    ecx,[ecx+0x0]
10052b50:	test   edx,edx
10052b52:	je     0x10053f0c
10052b58:	movzx  eax,BYTE PTR [ebp+0x0]
10052b5c:	mov    ecx,esi
10052b5e:	shl    eax,cl
10052b60:	sub    edx,0x1
10052b63:	add    esi,0x8
10052b66:	add    ebp,0x1
10052b69:	add    ebx,eax
10052b6b:	cmp    esi,0x10
10052b6e:	mov    DWORD PTR [esp+0x10],edx
10052b72:	mov    DWORD PTR [esp+0x18],ebx
10052b76:	jb     0x10052b50
10052b78:	test   BYTE PTR [edi+0x8],0x2
10052b7c:	je     0x10052bcb
10052b7e:	cmp    ebx,0x8b1f
10052b84:	jne    0x10052bcb
10052b86:	push   0x0
10052b88:	push   0x0
10052b8a:	push   0x0
10052b8c:	call   0x100560d0
10052b91:	mov    DWORD PTR [edi+0x18],eax
10052b94:	push   0x2
10052b96:	lea    ecx,[esp+0x30]
10052b9a:	mov    BYTE PTR [esp+0x30],0x1f
10052b9f:	mov    BYTE PTR [esp+0x31],0x8b
10052ba4:	mov    edx,DWORD PTR [edi+0x18]
10052ba7:	push   ecx
10052ba8:	push   edx
10052ba9:	call   0x100560d0
10052bae:	mov    edx,DWORD PTR [esp+0x28]
10052bb2:	xor    ebx,ebx
10052bb4:	add    esp,0x18
10052bb7:	mov    DWORD PTR [edi+0x18],eax
10052bba:	mov    DWORD PTR [esp+0x18],ebx
10052bbe:	xor    esi,esi
10052bc0:	mov    DWORD PTR [edi],0x1
10052bc6:	jmp    0x10053eae
10052bcb:	mov    eax,DWORD PTR [edi+0x20]
10052bce:	test   eax,eax
10052bd0:	mov    DWORD PTR [edi+0x10],0x0
10052bd7:	je     0x10052be0
10052bd9:	mov    DWORD PTR [eax+0x30],0xffffffff
10052be0:	test   BYTE PTR [edi+0x8],0x1
10052be4:	je     0x10052c91
10052bea:	movzx  eax,bl
10052bed:	shl    eax,0x8
10052bf0:	mov    ecx,ebx
10052bf2:	shr    ecx,0x8
10052bf5:	add    eax,ecx
10052bf7:	xor    edx,edx
10052bf9:	mov    ecx,0x1f
10052bfe:	div    ecx
10052c00:	test   edx,edx
10052c02:	jne    0x10052c91
10052c08:	mov    edx,ebx
10052c0a:	and    dl,0xf
10052c0d:	cmp    dl,0x8
10052c10:	je     0x10052c26
10052c12:	mov    eax,DWORD PTR [esp+0x40]
10052c16:	mov    edx,DWORD PTR [esp+0x10]
10052c1a:	mov    DWORD PTR [eax+0x18],0x10068a2c
10052c21:	jmp    0x10053ea8
10052c26:	shr    ebx,0x4
10052c29:	mov    ecx,ebx
10052c2b:	and    ecx,0xf
10052c2e:	add    ecx,0x8
10052c31:	sub    esi,0x4
10052c34:	cmp    ecx,DWORD PTR [edi+0x24]
10052c37:	mov    DWORD PTR [esp+0x18],ebx
10052c3b:	jbe    0x10052c51
10052c3d:	mov    ecx,DWORD PTR [esp+0x40]
10052c41:	mov    edx,DWORD PTR [esp+0x10]
10052c45:	mov    DWORD PTR [ecx+0x18],0x10068a18
10052c4c:	jmp    0x10053ea8
10052c51:	mov    edx,0x1
10052c56:	shl    edx,cl
10052c58:	push   0x0
10052c5a:	push   0x0
10052c5c:	push   0x0
10052c5e:	mov    DWORD PTR [edi+0x14],edx
10052c61:	call   0x100540f0
10052c66:	mov    ecx,DWORD PTR [esp+0x4c]
10052c6a:	mov    edx,DWORD PTR [esp+0x1c]
10052c6e:	shr    ebx,0x8
10052c71:	not    ebx
10052c73:	and    ebx,0x2
10052c76:	or     ebx,0x9
10052c79:	mov    DWORD PTR [edi+0x18],eax
10052c7c:	mov    DWORD PTR [ecx+0x30],eax
10052c7f:	mov    DWORD PTR [edi],ebx
10052c81:	xor    ebx,ebx
10052c83:	add    esp,0xc
10052c86:	mov    DWORD PTR [esp+0x18],ebx
10052c8a:	xor    esi,esi
10052c8c:	jmp    0x10053eae
10052c91:	mov    edx,DWORD PTR [esp+0x40]
10052c95:	mov    DWORD PTR [edx+0x18],0x10068a00
10052c9c:	mov    edx,DWORD PTR [esp+0x10]
10052ca0:	jmp    0x10053ea8
10052ca5:	cmp    esi,0x10
10052ca8:	jae    0x10052cd8
10052caa:	lea    ebx,[ebx+0x0]
10052cb0:	test   edx,edx
10052cb2:	je     0x10053f0c
10052cb8:	movzx  eax,BYTE PTR [ebp+0x0]
10052cbc:	mov    ecx,esi
10052cbe:	shl    eax,cl
10052cc0:	sub    edx,0x1
10052cc3:	add    esi,0x8
10052cc6:	add    ebp,0x1
10052cc9:	add    ebx,eax
10052ccb:	cmp    esi,0x10
10052cce:	mov    DWORD PTR [esp+0x10],edx
10052cd2:	mov    DWORD PTR [esp+0x18],ebx
10052cd6:	jb     0x10052cb0
10052cd8:	cmp    bl,0x8
10052cdb:	mov    DWORD PTR [edi+0x10],ebx
10052cde:	je     0x10052cf0
10052ce0:	mov    ecx,DWORD PTR [esp+0x40]
10052ce4:	mov    DWORD PTR [ecx+0x18],0x10068a2c
10052ceb:	jmp    0x10053ea8
10052cf0:	test   ebx,0xe000
10052cf6:	je     0x10052d08
10052cf8:	mov    eax,DWORD PTR [esp+0x40]
10052cfc:	mov    DWORD PTR [eax+0x18],0x100689e4
10052d03:	jmp    0x10053ea8
10052d08:	mov    eax,DWORD PTR [edi+0x20]
10052d0b:	test   eax,eax
10052d0d:	je     0x10052d19
10052d0f:	mov    ecx,ebx
10052d11:	shr    ecx,0x8
10052d14:	and    ecx,0x1
10052d17:	mov    DWORD PTR [eax],ecx
10052d19:	test   DWORD PTR [edi+0x10],0x200
10052d20:	je     0x10052d47
10052d22:	mov    BYTE PTR [esp+0x20],bl
10052d26:	shr    ebx,0x8
10052d29:	push   0x2
10052d2b:	lea    edx,[esp+0x24]
10052d2f:	mov    BYTE PTR [esp+0x25],bl
10052d33:	mov    eax,DWORD PTR [edi+0x18]
10052d36:	push   edx
10052d37:	push   eax
10052d38:	call   0x100560d0
10052d3d:	mov    edx,DWORD PTR [esp+0x1c]
10052d41:	add    esp,0xc
10052d44:	mov    DWORD PTR [edi+0x18],eax
10052d47:	xor    ebx,ebx
10052d49:	xor    esi,esi
10052d4b:	mov    DWORD PTR [edi],0x2
10052d51:	jmp    0x10052d58
10052d53:	cmp    esi,0x20
10052d56:	jae    0x10052d7c
10052d58:	test   edx,edx
10052d5a:	je     0x10053f0c
10052d60:	movzx  eax,BYTE PTR [ebp+0x0]
10052d64:	mov    ecx,esi
10052d66:	shl    eax,cl
10052d68:	sub    edx,0x1
10052d6b:	add    esi,0x8
10052d6e:	add    ebp,0x1
10052d71:	add    ebx,eax
10052d73:	cmp    esi,0x20
10052d76:	mov    DWORD PTR [esp+0x10],edx
10052d7a:	jb     0x10052d58
10052d7c:	mov    eax,DWORD PTR [edi+0x20]
10052d7f:	test   eax,eax
10052d81:	je     0x10052d86
10052d83:	mov    DWORD PTR [eax+0x4],ebx
10052d86:	test   DWORD PTR [edi+0x10],0x200
10052d8d:	je     0x10052dc6
10052d8f:	mov    BYTE PTR [esp+0x20],bl
10052d93:	mov    ecx,ebx
10052d95:	mov    edx,ebx
10052d97:	shr    ecx,0x8
10052d9a:	shr    edx,0x10
10052d9d:	shr    ebx,0x18
10052da0:	push   0x4
10052da2:	lea    eax,[esp+0x24]
10052da6:	mov    BYTE PTR [esp+0x25],cl
10052daa:	mov    BYTE PTR [esp+0x26],dl
10052dae:	mov    BYTE PTR [esp+0x27],bl
10052db2:	mov    ecx,DWORD PTR [edi+0x18]
10052db5:	push   eax
10052db6:	push   ecx
10052db7:	call   0x100560d0
10052dbc:	mov    edx,DWORD PTR [esp+0x1c]
10052dc0:	add    esp,0xc
10052dc3:	mov    DWORD PTR [edi+0x18],eax
10052dc6:	xor    ebx,ebx
10052dc8:	xor    esi,esi
10052dca:	mov    DWORD PTR [edi],0x3
10052dd0:	jmp    0x10052dd7
10052dd2:	cmp    esi,0x10
10052dd5:	jae    0x10052dfb
10052dd7:	test   edx,edx
10052dd9:	je     0x10053f0c
10052ddf:	movzx  eax,BYTE PTR [ebp+0x0]
10052de3:	mov    ecx,esi
10052de5:	shl    eax,cl
10052de7:	sub    edx,0x1
10052dea:	add    esi,0x8
10052ded:	add    ebp,0x1
10052df0:	add    ebx,eax
10052df2:	cmp    esi,0x10
10052df5:	mov    DWORD PTR [esp+0x10],edx
10052df9:	jb     0x10052dd7
10052dfb:	mov    eax,DWORD PTR [edi+0x20]
10052dfe:	test   eax,eax
10052e00:	je     0x10052e18
10052e02:	mov    ecx,ebx
10052e04:	and    ecx,0xff
10052e0a:	mov    DWORD PTR [eax+0x8],ecx
10052e0d:	mov    ecx,DWORD PTR [edi+0x20]
10052e10:	mov    eax,ebx
10052e12:	shr    eax,0x8
10052e15:	mov    DWORD PTR [ecx+0xc],eax
10052e18:	test   DWORD PTR [edi+0x10],0x200
10052e1f:	je     0x10052e46
10052e21:	mov    BYTE PTR [esp+0x20],bl
10052e25:	shr    ebx,0x8
10052e28:	push   0x2
10052e2a:	lea    edx,[esp+0x24]
10052e2e:	mov    BYTE PTR [esp+0x25],bl
10052e32:	mov    eax,DWORD PTR [edi+0x18]
10052e35:	push   edx
10052e36:	push   eax
10052e37:	call   0x100560d0
10052e3c:	mov    edx,DWORD PTR [esp+0x1c]
10052e40:	add    esp,0xc
10052e43:	mov    DWORD PTR [edi+0x18],eax
10052e46:	xor    ebx,ebx
10052e48:	mov    DWORD PTR [esp+0x18],ebx
10052e4c:	xor    esi,esi
10052e4e:	mov    DWORD PTR [edi],0x4
10052e54:	test   DWORD PTR [edi+0x10],0x400
10052e5b:	je     0x10052ecb
10052e5d:	cmp    esi,0x10
10052e60:	jae    0x10052e86
10052e62:	test   edx,edx
10052e64:	je     0x10053f0c
10052e6a:	movzx  eax,BYTE PTR [ebp+0x0]
10052e6e:	mov    ecx,esi
10052e70:	shl    eax,cl
10052e72:	sub    edx,0x1
10052e75:	add    esi,0x8
10052e78:	add    ebp,0x1
10052e7b:	add    ebx,eax
10052e7d:	cmp    esi,0x10
10052e80:	mov    DWORD PTR [esp+0x10],edx
10052e84:	jb     0x10052e62
10052e86:	mov    eax,DWORD PTR [edi+0x20]
10052e89:	test   eax,eax
10052e8b:	mov    DWORD PTR [edi+0x40],ebx
10052e8e:	je     0x10052e93
10052e90:	mov    DWORD PTR [eax+0x14],ebx
10052e93:	test   DWORD PTR [edi+0x10],0x200
10052e9a:	je     0x10052ec1
10052e9c:	mov    BYTE PTR [esp+0x20],bl
10052ea0:	shr    ebx,0x8
10052ea3:	push   0x2
10052ea5:	lea    ecx,[esp+0x24]
10052ea9:	mov    BYTE PTR [esp+0x25],bl
10052ead:	mov    edx,DWORD PTR [edi+0x18]
10052eb0:	push   ecx
10052eb1:	push   edx
10052eb2:	call   0x100560d0
10052eb7:	mov    edx,DWORD PTR [esp+0x1c]
10052ebb:	add    esp,0xc
10052ebe:	mov    DWORD PTR [edi+0x18],eax
10052ec1:	xor    ebx,ebx
10052ec3:	mov    DWORD PTR [esp+0x18],ebx
10052ec7:	xor    esi,esi
10052ec9:	jmp    0x10052ed9
10052ecb:	mov    eax,DWORD PTR [edi+0x20]
10052ece:	test   eax,eax
10052ed0:	je     0x10052ed9
10052ed2:	mov    DWORD PTR [eax+0x10],0x0
10052ed9:	mov    DWORD PTR [edi],0x5
10052edf:	test   DWORD PTR [edi+0x10],0x400
10052ee6:	je     0x10052f8e
10052eec:	mov    eax,DWORD PTR [edi+0x40]
10052eef:	cmp    eax,edx
10052ef1:	mov    DWORD PTR [esp+0x14],eax
10052ef5:	jbe    0x10052efd
10052ef7:	mov    eax,edx
10052ef9:	mov    DWORD PTR [esp+0x14],edx
10052efd:	test   eax,eax
10052eff:	je     0x10052f84
10052f05:	mov    ecx,DWORD PTR [edi+0x20]
10052f08:	test   ecx,ecx
10052f0a:	je     0x10052f53
10052f0c:	mov    ecx,DWORD PTR [ecx+0x10]
10052f0f:	test   ecx,ecx
10052f11:	mov    DWORD PTR [esp+0x34],ecx
10052f15:	je     0x10052f53
10052f17:	mov    ecx,DWORD PTR [edi+0x20]
10052f1a:	mov    ecx,DWORD PTR [ecx+0x14]
10052f1d:	sub    ecx,DWORD PTR [edi+0x40]
10052f20:	mov    edx,DWORD PTR [edi+0x20]
10052f23:	mov    edx,DWORD PTR [edx+0x18]
10052f26:	mov    DWORD PTR [esp+0x24],ecx
10052f2a:	add    ecx,eax
10052f2c:	cmp    ecx,edx
10052f2e:	jbe    0x10052f36
10052f30:	sub    edx,DWORD PTR [esp+0x24]
10052f34:	mov    eax,edx
10052f36:	mov    edx,DWORD PTR [esp+0x34]
10052f3a:	push   eax
10052f3b:	mov    eax,DWORD PTR [esp+0x28]
10052f3f:	add    edx,eax
10052f41:	push   ebp
10052f42:	push   edx
10052f43:	call   0x10045180
10052f48:	mov    eax,DWORD PTR [esp+0x20]
10052f4c:	mov    edx,DWORD PTR [esp+0x1c]
10052f50:	add    esp,0xc
10052f53:	test   DWORD PTR [edi+0x10],0x200
10052f5a:	je     0x10052f79
10052f5c:	mov    ecx,DWORD PTR [esp+0x14]
10052f60:	mov    edx,DWORD PTR [edi+0x18]
10052f63:	push   ecx
10052f64:	push   ebp
10052f65:	push   edx
10052f66:	call   0x100560d0
10052f6b:	mov    edx,DWORD PTR [esp+0x1c]
10052f6f:	mov    DWORD PTR [edi+0x18],eax
10052f72:	mov    eax,DWORD PTR [esp+0x20]
10052f76:	add    esp,0xc
10052f79:	sub    edx,eax
10052f7b:	add    ebp,eax
10052f7d:	sub    DWORD PTR [edi+0x40],eax
10052f80:	mov    DWORD PTR [esp+0x10],edx
10052f84:	cmp    DWORD PTR [edi+0x40],0x0
10052f88:	jne    0x10053f0c
10052f8e:	mov    DWORD PTR [edi+0x40],0x0
10052f95:	mov    DWORD PTR [edi],0x6
10052f9b:	test   DWORD PTR [edi+0x10],0x800
10052fa2:	je     0x10053038
10052fa8:	test   edx,edx
10052faa:	je     0x10053f0c
10052fb0:	xor    eax,eax
10052fb2:	movzx  ecx,BYTE PTR [eax+ebp*1]
10052fb6:	add    eax,0x1
10052fb9:	mov    DWORD PTR [esp+0x14],eax
10052fbd:	mov    eax,DWORD PTR [edi+0x20]
10052fc0:	test   eax,eax
10052fc2:	mov    DWORD PTR [esp+0x24],ecx
10052fc6:	je     0x10052fee
10052fc8:	mov    ecx,DWORD PTR [eax+0x1c]
10052fcb:	test   ecx,ecx
10052fcd:	mov    DWORD PTR [esp+0x34],ecx
10052fd1:	je     0x10052fee
10052fd3:	mov    ecx,DWORD PTR [edi+0x40]
10052fd6:	cmp    ecx,DWORD PTR [eax+0x20]
10052fd9:	jae    0x10052fee
10052fdb:	mov    edx,DWORD PTR [esp+0x34]
10052fdf:	mov    al,BYTE PTR [esp+0x24]
10052fe3:	mov    BYTE PTR [edx+ecx*1],al
10052fe6:	add    DWORD PTR [edi+0x40],0x1
10052fea:	mov    edx,DWORD PTR [esp+0x10]
10052fee:	cmp    DWORD PTR [esp+0x24],0x0
10052ff3:	je     0x10052ffd
10052ff5:	mov    eax,DWORD PTR [esp+0x14]
10052ff9:	cmp    eax,edx
10052ffb:	jb     0x10052fb2
10052ffd:	test   DWORD PTR [edi+0x10],0x200
10053004:	je     0x1005301f
10053006:	mov    ecx,DWORD PTR [esp+0x14]
1005300a:	mov    edx,DWORD PTR [edi+0x18]
1005300d:	push   ecx
1005300e:	push   ebp
1005300f:	push   edx
10053010:	call   0x100560d0
10053015:	mov    edx,DWORD PTR [esp+0x1c]
10053019:	add    esp,0xc
1005301c:	mov    DWORD PTR [edi+0x18],eax
1005301f:	mov    eax,DWORD PTR [esp+0x14]
10053023:	sub    edx,eax
10053025:	add    ebp,eax
10053027:	cmp    DWORD PTR [esp+0x24],0x0
1005302c:	mov    DWORD PTR [esp+0x10],edx
10053030:	jne    0x10053f0c
10053036:	jmp    0x10053046
10053038:	mov    eax,DWORD PTR [edi+0x20]
1005303b:	test   eax,eax
1005303d:	je     0x10053046
1005303f:	mov    DWORD PTR [eax+0x1c],0x0
10053046:	mov    DWORD PTR [edi+0x40],0x0
1005304d:	mov    DWORD PTR [edi],0x7
10053053:	test   DWORD PTR [edi+0x10],0x1000
1005305a:	je     0x100530f6
10053060:	test   edx,edx
10053062:	je     0x10053f0c
10053068:	xor    eax,eax
1005306a:	lea    ebx,[ebx+0x0]
10053070:	movzx  ecx,BYTE PTR [eax+ebp*1]
10053074:	add    eax,0x1
10053077:	mov    DWORD PTR [esp+0x14],eax
1005307b:	mov    eax,DWORD PTR [edi+0x20]
1005307e:	test   eax,eax
10053080:	mov    DWORD PTR [esp+0x24],ecx
10053084:	je     0x100530ac
10053086:	mov    ecx,DWORD PTR [eax+0x24]
10053089:	test   ecx,ecx
1005308b:	mov    DWORD PTR [esp+0x34],ecx
1005308f:	je     0x100530ac
10053091:	mov    ecx,DWORD PTR [edi+0x40]
10053094:	cmp    ecx,DWORD PTR [eax+0x28]
10053097:	jae    0x100530ac
10053099:	mov    edx,DWORD PTR [esp+0x34]
1005309d:	mov    al,BYTE PTR [esp+0x24]
100530a1:	mov    BYTE PTR [edx+ecx*1],al
100530a4:	add    DWORD PTR [edi+0x40],0x1
100530a8:	mov    edx,DWORD PTR [esp+0x10]
100530ac:	cmp    DWORD PTR [esp+0x24],0x0
100530b1:	je     0x100530bb
100530b3:	mov    eax,DWORD PTR [esp+0x14]
100530b7:	cmp    eax,edx
100530b9:	jb     0x10053070
100530bb:	test   DWORD PTR [edi+0x10],0x200
100530c2:	je     0x100530dd
100530c4:	mov    ecx,DWORD PTR [esp+0x14]
100530c8:	mov    edx,DWORD PTR [edi+0x18]
100530cb:	push   ecx
100530cc:	push   ebp
100530cd:	push   edx
100530ce:	call   0x100560d0
100530d3:	mov    edx,DWORD PTR [esp+0x1c]
100530d7:	add    esp,0xc
100530da:	mov    DWORD PTR [edi+0x18],eax
100530dd:	mov    eax,DWORD PTR [esp+0x14]
100530e1:	sub    edx,eax
100530e3:	add    ebp,eax
100530e5:	cmp    DWORD PTR [esp+0x24],0x0
100530ea:	mov    DWORD PTR [esp+0x10],edx
100530ee:	jne    0x10053f0c
100530f4:	jmp    0x10053104
100530f6:	mov    eax,DWORD PTR [edi+0x20]
100530f9:	test   eax,eax
100530fb:	je     0x10053104
100530fd:	mov    DWORD PTR [eax+0x24],0x0
10053104:	mov    DWORD PTR [edi],0x8
1005310a:	test   DWORD PTR [edi+0x10],0x200
10053111:	je     0x10053160
10053113:	cmp    esi,0x10
10053116:	jae    0x10053140
10053118:	test   edx,edx
1005311a:	je     0x10053f0c
10053120:	movzx  eax,BYTE PTR [ebp+0x0]
10053124:	mov    ecx,esi
10053126:	shl    eax,cl
10053128:	sub    edx,0x1
1005312b:	add    esi,0x8
1005312e:	add    ebp,0x1
10053131:	add    ebx,eax
10053133:	cmp    esi,0x10
10053136:	mov    DWORD PTR [esp+0x10],edx
1005313a:	mov    DWORD PTR [esp+0x18],ebx
1005313e:	jb     0x10053118
10053140:	movzx  ecx,WORD PTR [edi+0x18]
10053144:	cmp    ebx,ecx
10053146:	je     0x10053158
10053148:	mov    eax,DWORD PTR [esp+0x40]
1005314c:	mov    DWORD PTR [eax+0x18],0x100689d0
10053153:	jmp    0x10053ea8
10053158:	xor    ebx,ebx
1005315a:	mov    DWORD PTR [esp+0x18],ebx
1005315e:	xor    esi,esi
10053160:	mov    eax,DWORD PTR [edi+0x20]
10053163:	test   eax,eax
10053165:	je     0x1005317d
10053167:	mov    ecx,DWORD PTR [edi+0x10]
1005316a:	sar    ecx,0x9
1005316d:	and    ecx,0x1
10053170:	mov    DWORD PTR [eax+0x2c],ecx
10053173:	mov    edx,DWORD PTR [edi+0x20]
10053176:	mov    DWORD PTR [edx+0x30],0x1
1005317d:	push   0x0
1005317f:	push   0x0
10053181:	push   0x0
10053183:	call   0x100560d0
10053188:	mov    ecx,DWORD PTR [esp+0x4c]
1005318c:	mov    edx,DWORD PTR [esp+0x1c]
10053190:	mov    DWORD PTR [edi+0x18],eax
10053193:	mov    DWORD PTR [ecx+0x30],eax
10053196:	add    esp,0xc
10053199:	mov    DWORD PTR [edi],0xb
1005319f:	jmp    0x10053eae
100531a4:	cmp    esi,0x20
100531a7:	jae    0x100531d8
100531a9:	lea    esp,[esp+0x0]
100531b0:	test   edx,edx
100531b2:	je     0x10053f0c
100531b8:	movzx  eax,BYTE PTR [ebp+0x0]
100531bc:	mov    ecx,esi
100531be:	shl    eax,cl
100531c0:	sub    edx,0x1
100531c3:	add    esi,0x8
100531c6:	add    ebp,0x1
100531c9:	add    ebx,eax
100531cb:	cmp    esi,0x20
100531ce:	mov    DWORD PTR [esp+0x10],edx
100531d2:	mov    DWORD PTR [esp+0x18],ebx
100531d6:	jb     0x100531b0
100531d8:	mov    ecx,ebx
100531da:	and    ecx,0xff00
100531e0:	mov    eax,ebx
100531e2:	shl    eax,0x10
100531e5:	add    ecx,eax
100531e7:	xor    eax,eax
100531e9:	mov    ah,BYTE PTR [esp+0x1a]
100531ed:	shl    ecx,0x8
100531f0:	shr    ebx,0x18
100531f3:	add    ecx,eax
100531f5:	lea    eax,[ecx+ebx*1]
100531f8:	mov    ecx,DWORD PTR [esp+0x40]
100531fc:	mov    DWORD PTR [edi+0x18],eax
100531ff:	mov    DWORD PTR [ecx+0x30],eax
10053202:	xor    ebx,ebx
10053204:	xor    esi,esi
10053206:	mov    DWORD PTR [edi],0xa
1005320c:	cmp    DWORD PTR [edi+0xc],0x0
10053210:	je     0x10053ec6
10053216:	push   0x0
10053218:	push   0x0
1005321a:	push   0x0
1005321c:	call   0x100540f0
10053221:	mov    edx,DWORD PTR [esp+0x4c]
10053225:	mov    DWORD PTR [edi+0x18],eax
10053228:	mov    DWORD PTR [edx+0x30],eax
1005322b:	mov    edx,DWORD PTR [esp+0x1c]
1005322f:	add    esp,0xc
10053232:	mov    DWORD PTR [edi],0xb
10053238:	cmp    DWORD PTR [esp+0x44],0x5
1005323d:	je     0x10053f0c
10053243:	cmp    DWORD PTR [edi+0x4],0x0
10053247:	je     0x10053261
10053249:	mov    ecx,esi
1005324b:	and    ecx,0x7
1005324e:	shr    ebx,cl
10053250:	sub    esi,ecx
10053252:	mov    DWORD PTR [edi],0x18
10053258:	mov    DWORD PTR [esp+0x18],ebx
1005325c:	jmp    0x10053eae
10053261:	cmp    esi,0x3
10053264:	jae    0x1005328a
10053266:	test   edx,edx
10053268:	je     0x10053f0c
1005326e:	movzx  eax,BYTE PTR [ebp+0x0]
10053272:	mov    ecx,esi
10053274:	shl    eax,cl
10053276:	sub    edx,0x1
10053279:	add    esi,0x8
1005327c:	add    ebp,0x1
1005327f:	add    ebx,eax
10053281:	cmp    esi,0x3
10053284:	mov    DWORD PTR [esp+0x10],edx
10053288:	jb     0x10053266
1005328a:	mov    ecx,ebx
1005328c:	shr    ebx,1
1005328e:	mov    eax,ebx
10053290:	and    ecx,0x1
10053293:	and    eax,0x3
10053296:	sub    esi,0x1
10053299:	cmp    eax,0x3
1005329c:	mov    DWORD PTR [edi+0x4],ecx
1005329f:	ja     0x100532ff
100532a1:	jmp    DWORD PTR [eax*4+0x1005408c]
100532a8:	shr    ebx,0x2
100532ab:	mov    DWORD PTR [edi],0xd
100532b1:	mov    DWORD PTR [esp+0x18],ebx
100532b5:	sub    esi,0x2
100532b8:	jmp    0x10053eae
100532bd:	mov    eax,edi
100532bf:	call   0x100529a0
100532c4:	shr    ebx,0x2
100532c7:	mov    DWORD PTR [edi],0x12
100532cd:	mov    DWORD PTR [esp+0x18],ebx
100532d1:	sub    esi,0x2
100532d4:	jmp    0x10053eae
100532d9:	shr    ebx,0x2
100532dc:	mov    DWORD PTR [edi],0xf
100532e2:	mov    DWORD PTR [esp+0x18],ebx
100532e6:	sub    esi,0x2
100532e9:	jmp    0x10053eae
100532ee:	mov    eax,DWORD PTR [esp+0x40]
100532f2:	mov    DWORD PTR [eax+0x18],0x100689bc
100532f9:	mov    DWORD PTR [edi],0x1b
100532ff:	shr    ebx,0x2
10053302:	mov    DWORD PTR [esp+0x18],ebx
10053306:	sub    esi,0x2
10053309:	jmp    0x10053eae
1005330e:	mov    ecx,esi
10053310:	and    ecx,0x7
10053313:	shr    ebx,cl
10053315:	sub    esi,ecx
10053317:	cmp    esi,0x20
1005331a:	mov    DWORD PTR [esp+0x18],ebx
1005331e:	jae    0x10053348
10053320:	test   edx,edx
10053322:	je     0x10053f0c
10053328:	movzx  eax,BYTE PTR [ebp+0x0]
1005332c:	mov    ecx,esi
1005332e:	shl    eax,cl
10053330:	sub    edx,0x1
10053333:	add    esi,0x8
10053336:	add    ebp,0x1
10053339:	add    ebx,eax
1005333b:	cmp    esi,0x20
1005333e:	mov    DWORD PTR [esp+0x10],edx
10053342:	mov    DWORD PTR [esp+0x18],ebx
10053346:	jb     0x10053320
10053348:	mov    ecx,ebx
1005334a:	mov    eax,ebx
1005334c:	not    ecx
1005334e:	and    eax,0xffff
10053353:	shr    ecx,0x10
10053356:	cmp    eax,ecx
10053358:	je     0x1005336a
1005335a:	mov    eax,DWORD PTR [esp+0x40]
1005335e:	mov    DWORD PTR [eax+0x18],0x1006899c
10053365:	jmp    0x10053ea8
1005336a:	xor    ebx,ebx
1005336c:	mov    DWORD PTR [edi+0x40],eax
1005336f:	mov    DWORD PTR [esp+0x18],ebx
10053373:	xor    esi,esi
10053375:	mov    DWORD PTR [edi],0xe
1005337b:	mov    eax,DWORD PTR [edi+0x40]
1005337e:	test   eax,eax
10053380:	mov    DWORD PTR [esp+0x14],eax
10053384:	je     0x10053a3c
1005338a:	cmp    eax,edx
1005338c:	jbe    0x10053394
1005338e:	mov    eax,edx
10053390:	mov    DWORD PTR [esp+0x14],edx
10053394:	mov    ecx,DWORD PTR [esp+0x1c]
10053398:	cmp    eax,ecx
1005339a:	jbe    0x100533a2
1005339c:	mov    eax,ecx
1005339e:	mov    DWORD PTR [esp+0x14],eax
100533a2:	test   eax,eax
100533a4:	je     0x10053f0c
100533aa:	mov    ecx,DWORD PTR [esp+0x14]
100533ae:	mov    edx,DWORD PTR [esp+0x28]
100533b2:	push   ecx
100533b3:	push   ebp
100533b4:	push   edx
100533b5:	call   0x10045180
100533ba:	mov    eax,DWORD PTR [esp+0x20]
100533be:	sub    DWORD PTR [esp+0x1c],eax
100533c2:	sub    DWORD PTR [esp+0x28],eax
100533c6:	add    DWORD PTR [esp+0x34],eax
100533ca:	mov    edx,DWORD PTR [esp+0x1c]
100533ce:	add    esp,0xc
100533d1:	add    ebp,eax
100533d3:	sub    DWORD PTR [edi+0x40],eax
100533d6:	jmp    0x10053eae
100533db:	cmp    esi,0xe
100533de:	jae    0x10053404
100533e0:	test   edx,edx
100533e2:	je     0x10053f0c
100533e8:	movzx  eax,BYTE PTR [ebp+0x0]
100533ec:	mov    ecx,esi
100533ee:	shl    eax,cl
100533f0:	sub    edx,0x1
100533f3:	add    esi,0x8
100533f6:	add    ebp,0x1
100533f9:	add    ebx,eax
100533fb:	cmp    esi,0xe
100533fe:	mov    DWORD PTR [esp+0x10],edx
10053402:	jb     0x100533e0
10053404:	mov    ecx,ebx
10053406:	and    ecx,0x1f
10053409:	shr    ebx,0x5
1005340c:	add    ecx,0x101
10053412:	mov    eax,ebx
10053414:	mov    DWORD PTR [edi+0x60],ecx
10053417:	shr    ebx,0x5
1005341a:	mov    ecx,ebx
1005341c:	and    eax,0x1f
1005341f:	and    ecx,0xf
10053422:	add    eax,0x1
10053425:	add    ecx,0x4
10053428:	shr    ebx,0x4
1005342b:	sub    esi,0xe
1005342e:	cmp    DWORD PTR [edi+0x60],0x11e
10053435:	mov    DWORD PTR [edi+0x64],eax
10053438:	mov    DWORD PTR [edi+0x5c],ecx
1005343b:	mov    DWORD PTR [esp+0x18],ebx
1005343f:	ja     0x10053535
10053445:	cmp    eax,0x1e
10053448:	ja     0x10053535
1005344e:	mov    DWORD PTR [edi+0x68],0x0
10053455:	mov    DWORD PTR [edi],0x10
1005345b:	mov    ecx,DWORD PTR [edi+0x68]
1005345e:	cmp    ecx,DWORD PTR [edi+0x5c]
10053461:	jae    0x100534b8
10053463:	cmp    esi,0x3
10053466:	jae    0x1005348c
10053468:	test   edx,edx
1005346a:	je     0x10053f0c
10053470:	movzx  eax,BYTE PTR [ebp+0x0]
10053474:	mov    ecx,esi
10053476:	shl    eax,cl
10053478:	sub    edx,0x1
1005347b:	add    esi,0x8
1005347e:	add    ebp,0x1
10053481:	add    ebx,eax
10053483:	cmp    esi,0x3
10053486:	mov    DWORD PTR [esp+0x10],edx
1005348a:	jb     0x10053468
1005348c:	mov    eax,DWORD PTR [edi+0x68]
1005348f:	movzx  eax,WORD PTR [eax*2+0x10068860]
10053497:	movzx  ecx,bl
1005349a:	and    ecx,0x7
1005349d:	mov    WORD PTR [edi+eax*2+0x70],cx
100534a2:	add    DWORD PTR [edi+0x68],0x1
100534a6:	mov    ecx,DWORD PTR [edi+0x68]
100534a9:	shr    ebx,0x3
100534ac:	sub    esi,0x3
100534af:	cmp    ecx,DWORD PTR [edi+0x5c]
100534b2:	mov    DWORD PTR [esp+0x18],ebx
100534b6:	jb     0x10053463
100534b8:	cmp    DWORD PTR [edi+0x68],0x13
100534bc:	jae    0x100534e9
100534be:	mov    ecx,0x1
100534c3:	xor    eax,eax
100534c5:	jmp    0x100534d0
100534c7:	lea    esp,[esp+0x0]
100534ce:	mov    edi,edi
100534d0:	mov    edx,DWORD PTR [edi+0x68]
100534d3:	movzx  edx,WORD PTR [edx*2+0x10068860]
100534db:	mov    WORD PTR [edi+edx*2+0x70],ax
100534e0:	add    DWORD PTR [edi+0x68],ecx
100534e3:	cmp    DWORD PTR [edi+0x68],0x13
100534e7:	jb     0x100534d0
100534e9:	lea    eax,[edi+0x530]
100534ef:	lea    ecx,[edi+0x6c]
100534f2:	mov    DWORD PTR [ecx],eax
100534f4:	mov    DWORD PTR [edi+0x4c],eax
100534f7:	lea    edx,[edi+0x2f0]
100534fd:	push   edx
100534fe:	lea    eax,[edi+0x54]
10053501:	push   eax
10053502:	push   ecx
10053503:	mov    DWORD PTR [eax],0x7
10053509:	push   0x13
1005350b:	lea    eax,[edi+0x70]
1005350e:	push   eax
1005350f:	push   0x0
10053511:	call   0x100565e0
10053516:	mov    edx,DWORD PTR [esp+0x28]
1005351a:	add    esp,0x18
1005351d:	test   eax,eax
1005351f:	mov    DWORD PTR [esp+0x30],eax
10053523:	je     0x10053545
10053525:	mov    ecx,DWORD PTR [esp+0x40]
10053529:	mov    DWORD PTR [ecx+0x18],0x10068980
10053530:	jmp    0x10053ea8
10053535:	mov    eax,DWORD PTR [esp+0x40]
10053539:	mov    DWORD PTR [eax+0x18],0x1006895c
10053540:	jmp    0x10053ea8
10053545:	mov    DWORD PTR [edi+0x68],0x0
1005354c:	mov    DWORD PTR [edi],0x11
10053552:	mov    eax,DWORD PTR [edi+0x64]
10053555:	add    eax,DWORD PTR [edi+0x60]
10053558:	cmp    DWORD PTR [edi+0x68],eax
1005355b:	jae    0x10053799
10053561:	mov    ecx,DWORD PTR [edi+0x54]
10053564:	mov    eax,0x1
10053569:	shl    eax,cl
1005356b:	mov    ecx,DWORD PTR [edi+0x4c]
1005356e:	sub    eax,0x1
10053571:	and    eax,ebx
10053573:	mov    eax,DWORD PTR [ecx+eax*4]
10053576:	mov    ecx,eax
10053578:	shr    ecx,0x8
1005357b:	movzx  ecx,cl
1005357e:	cmp    ecx,esi
10053580:	mov    DWORD PTR [esp+0x14],eax
10053584:	jbe    0x100535ca
10053586:	test   edx,edx
10053588:	je     0x10053f0c
1005358e:	movzx  eax,BYTE PTR [ebp+0x0]
10053592:	mov    ecx,esi
10053594:	shl    eax,cl
10053596:	mov    ecx,DWORD PTR [edi+0x54]
10053599:	sub    edx,0x1
1005359c:	add    esi,0x8
1005359f:	add    ebx,eax
100535a1:	mov    eax,0x1
100535a6:	shl    eax,cl
100535a8:	mov    ecx,DWORD PTR [edi+0x4c]
100535ab:	add    ebp,0x1
100535ae:	mov    DWORD PTR [esp+0x10],edx
100535b2:	sub    eax,0x1
100535b5:	and    eax,ebx
100535b7:	mov    eax,DWORD PTR [ecx+eax*4]
100535ba:	mov    ecx,eax
100535bc:	shr    ecx,0x8
100535bf:	movzx  ecx,cl
100535c2:	cmp    ecx,esi
100535c4:	mov    DWORD PTR [esp+0x14],eax
100535c8:	ja     0x10053586
100535ca:	mov    ecx,eax
100535cc:	shr    ecx,0x10
100535cf:	cmp    ecx,0x10
100535d2:	jae    0x1005362b
100535d4:	mov    ecx,eax
100535d6:	shr    ecx,0x8
100535d9:	movzx  ecx,cl
100535dc:	cmp    esi,ecx
100535de:	jae    0x1005360a
100535e0:	test   edx,edx
100535e2:	je     0x10053f0c
100535e8:	movzx  eax,BYTE PTR [ebp+0x0]
100535ec:	mov    ecx,esi
100535ee:	shl    eax,cl
100535f0:	sub    edx,0x1
100535f3:	add    esi,0x8
100535f6:	add    ebp,0x1
100535f9:	add    ebx,eax
100535fb:	mov    eax,DWORD PTR [esp+0x14]
100535ff:	movzx  ecx,ah
10053602:	cmp    esi,ecx
10053604:	mov    DWORD PTR [esp+0x10],edx
10053608:	jb     0x100535e0
1005360a:	movzx  ecx,ah
1005360d:	mov    eax,DWORD PTR [edi+0x68]
10053610:	shr    ebx,cl
10053612:	sub    esi,ecx
10053614:	mov    cx,WORD PTR [esp+0x16]
10053619:	mov    WORD PTR [edi+eax*2+0x70],cx
1005361e:	add    DWORD PTR [edi+0x68],0x1
10053622:	mov    DWORD PTR [esp+0x18],ebx
10053626:	jmp    0x1005378a
1005362b:	mov    cx,WORD PTR [esp+0x16]
10053630:	cmp    cx,0x10
10053634:	jne    0x100536a1
10053636:	movzx  ecx,ah
10053639:	lea    eax,[ecx+0x2]
1005363c:	cmp    esi,eax
1005363e:	mov    DWORD PTR [esp+0x24],ecx
10053642:	jae    0x1005366e
10053644:	test   edx,edx
10053646:	je     0x10053f0c
1005364c:	movzx  eax,BYTE PTR [ebp+0x0]
10053650:	mov    ecx,esi
10053652:	shl    eax,cl
10053654:	mov    ecx,DWORD PTR [esp+0x24]
10053658:	sub    edx,0x1
1005365b:	add    esi,0x8
1005365e:	add    ebx,eax
10053660:	lea    eax,[ecx+0x2]
10053663:	add    ebp,0x1
10053666:	cmp    esi,eax
10053668:	mov    DWORD PTR [esp+0x10],edx
1005366c:	jb     0x10053644
1005366e:	mov    eax,DWORD PTR [edi+0x68]
10053671:	shr    ebx,cl
10053673:	sub    esi,ecx
10053675:	test   eax,eax
10053677:	mov    DWORD PTR [esp+0x18],ebx
1005367b:	je     0x100537f0
10053681:	movzx  ecx,WORD PTR [edi+eax*2+0x6e]
10053686:	mov    eax,ebx
10053688:	and    eax,0x3
1005368b:	add    eax,0x3
1005368e:	shr    ebx,0x2
10053691:	mov    DWORD PTR [esp+0x24],ecx
10053695:	mov    DWORD PTR [esp+0x14],eax
10053699:	sub    esi,0x2
1005369c:	jmp    0x10053750
100536a1:	cmp    cx,0x11
100536a5:	movzx  ecx,ah
100536a8:	mov    DWORD PTR [esp+0x24],ecx
100536ac:	jne    0x100536f7
100536ae:	lea    eax,[ecx+0x3]
100536b1:	cmp    esi,eax
100536b3:	jae    0x100536df
100536b5:	test   edx,edx
100536b7:	je     0x10053f0c
100536bd:	movzx  eax,BYTE PTR [ebp+0x0]
100536c1:	mov    ecx,esi
100536c3:	shl    eax,cl
100536c5:	mov    ecx,DWORD PTR [esp+0x24]
100536c9:	sub    edx,0x1
100536cc:	add    esi,0x8
100536cf:	add    ebx,eax
100536d1:	lea    eax,[ecx+0x3]
100536d4:	add    ebp,0x1
100536d7:	cmp    esi,eax
100536d9:	mov    DWORD PTR [esp+0x10],edx
100536dd:	jb     0x100536b5
100536df:	shr    ebx,cl
100536e1:	mov    eax,ebx
100536e3:	and    eax,0x7
100536e6:	add    eax,0x3
100536e9:	mov    DWORD PTR [esp+0x14],eax
100536ed:	shr    ebx,0x3
100536f0:	mov    eax,0xfffffffd
100536f5:	jmp    0x10053740
100536f7:	lea    eax,[ecx+0x7]
100536fa:	cmp    esi,eax
100536fc:	jae    0x1005372a
100536fe:	mov    edi,edi
10053700:	test   edx,edx
10053702:	je     0x10053f0c
10053708:	movzx  eax,BYTE PTR [ebp+0x0]
1005370c:	mov    ecx,esi
1005370e:	shl    eax,cl
10053710:	mov    ecx,DWORD PTR [esp+0x24]
10053714:	sub    edx,0x1
10053717:	add    esi,0x8
1005371a:	add    ebx,eax
1005371c:	lea    eax,[ecx+0x7]
1005371f:	add    ebp,0x1
10053722:	cmp    esi,eax
10053724:	mov    DWORD PTR [esp+0x10],edx
10053728:	jb     0x10053700
1005372a:	shr    ebx,cl
1005372c:	mov    eax,ebx
1005372e:	and    eax,0x7f
10053731:	add    eax,0xb
10053734:	mov    DWORD PTR [esp+0x14],eax
10053738:	shr    ebx,0x7
1005373b:	mov    eax,0xfffffff9
10053740:	sub    eax,ecx
10053742:	add    esi,eax
10053744:	mov    eax,DWORD PTR [esp+0x14]
10053748:	mov    DWORD PTR [esp+0x24],0x0
10053750:	mov    ecx,DWORD PTR [edi+0x68]
10053753:	add    ecx,eax
10053755:	mov    eax,DWORD PTR [edi+0x64]
10053758:	add    eax,DWORD PTR [edi+0x60]
1005375b:	mov    DWORD PTR [esp+0x18],ebx
1005375f:	cmp    ecx,eax
10053761:	ja     0x10053800
10053767:	cmp    DWORD PTR [esp+0x14],0x0
1005376c:	je     0x1005378a
1005376e:	mov    eax,DWORD PTR [esp+0x24]
10053772:	mov    ecx,DWORD PTR [edi+0x68]
10053775:	sub    DWORD PTR [esp+0x14],0x1
1005377a:	mov    WORD PTR [edi+ecx*2+0x70],ax
1005377f:	add    DWORD PTR [edi+0x68],0x1
10053783:	cmp    DWORD PTR [esp+0x14],0x0
10053788:	jne    0x10053772
1005378a:	mov    eax,DWORD PTR [edi+0x64]
1005378d:	add    eax,DWORD PTR [edi+0x60]
10053790:	cmp    DWORD PTR [edi+0x68],eax
10053793:	jb     0x10053561
10053799:	cmp    DWORD PTR [edi],0x1b
1005379c:	je     0x10053eae
100537a2:	lea    eax,[edi+0x530]
100537a8:	lea    ecx,[edi+0x6c]
100537ab:	mov    DWORD PTR [ecx],eax
100537ad:	lea    edx,[edi+0x2f0]
100537b3:	push   edx
100537b4:	mov    DWORD PTR [edi+0x4c],eax
100537b7:	lea    eax,[edi+0x54]
100537ba:	push   eax
100537bb:	push   ecx
100537bc:	mov    ecx,DWORD PTR [edi+0x60]
100537bf:	push   ecx
100537c0:	lea    edx,[edi+0x70]
100537c3:	push   edx
100537c4:	push   0x1
100537c6:	mov    DWORD PTR [eax],0x9
100537cc:	call   0x100565e0
100537d1:	add    esp,0x18
100537d4:	test   eax,eax
100537d6:	mov    DWORD PTR [esp+0x30],eax
100537da:	je     0x10053810
100537dc:	mov    eax,DWORD PTR [esp+0x40]
100537e0:	mov    edx,DWORD PTR [esp+0x10]
100537e4:	mov    DWORD PTR [eax+0x18],0x10068940
100537eb:	jmp    0x10053ea8
100537f0:	mov    ecx,DWORD PTR [esp+0x40]
100537f4:	mov    DWORD PTR [ecx+0x18],0x10068924
100537fb:	jmp    0x10053ea8
10053800:	mov    eax,DWORD PTR [esp+0x40]
10053804:	mov    DWORD PTR [eax+0x18],0x10068924
1005380b:	jmp    0x10053ea8
10053810:	mov    edx,DWORD PTR [edi+0x6c]
10053813:	lea    ecx,[edi+0x6c]
10053816:	mov    DWORD PTR [edi+0x50],edx
10053819:	lea    edx,[edi+0x2f0]
1005381f:	push   edx
10053820:	lea    eax,[edi+0x58]
10053823:	push   eax
10053824:	push   ecx
10053825:	mov    ecx,DWORD PTR [edi+0x60]
10053828:	mov    DWORD PTR [eax],0x6
1005382e:	mov    eax,DWORD PTR [edi+0x64]
10053831:	push   eax
10053832:	lea    edx,[edi+ecx*2+0x70]
10053836:	push   edx
10053837:	push   0x2
10053839:	call   0x100565e0
1005383e:	mov    edx,DWORD PTR [esp+0x28]
10053842:	add    esp,0x18
10053845:	test   eax,eax
10053847:	mov    DWORD PTR [esp+0x30],eax
1005384b:	je     0x1005385d
1005384d:	mov    eax,DWORD PTR [esp+0x40]
10053851:	mov    DWORD PTR [eax+0x18],0x1006890c
10053858:	jmp    0x10053ea8
1005385d:	mov    DWORD PTR [edi],0x12
10053863:	cmp    edx,0x6
10053866:	jb     0x100538d1
1005386c:	cmp    DWORD PTR [esp+0x1c],0x102
10053874:	jb     0x100538d1
10053876:	mov    eax,DWORD PTR [esp+0x40]
1005387a:	mov    edx,DWORD PTR [esp+0x1c]
1005387e:	mov    ecx,DWORD PTR [esp+0x28]
10053882:	mov    DWORD PTR [eax+0x10],edx
10053885:	mov    edx,DWORD PTR [esp+0x2c]
10053889:	mov    DWORD PTR [eax+0xc],ecx
1005388c:	mov    ecx,DWORD PTR [esp+0x10]
10053890:	push   edx
10053891:	mov    DWORD PTR [eax],ebp
10053893:	mov    DWORD PTR [eax+0x4],ecx
10053896:	push   eax
10053897:	mov    DWORD PTR [edi+0x38],ebx
1005389a:	mov    DWORD PTR [edi+0x3c],esi
1005389d:	call   0x10056120
100538a2:	mov    eax,DWORD PTR [esp+0x48]
100538a6:	mov    edx,DWORD PTR [eax+0x10]
100538a9:	mov    ecx,DWORD PTR [eax+0xc]
100538ac:	mov    ebp,DWORD PTR [eax]
100538ae:	mov    eax,DWORD PTR [eax+0x4]
100538b1:	mov    ebx,DWORD PTR [edi+0x38]
100538b4:	mov    esi,DWORD PTR [edi+0x3c]
100538b7:	mov    DWORD PTR [esp+0x24],edx
100538bb:	add    esp,0x8
100538be:	mov    DWORD PTR [esp+0x28],ecx
100538c2:	mov    DWORD PTR [esp+0x10],eax
100538c6:	mov    DWORD PTR [esp+0x18],ebx
100538ca:	mov    edx,eax
100538cc:	jmp    0x10053eae
100538d1:	mov    ecx,DWORD PTR [edi+0x54]
100538d4:	mov    eax,0x1
100538d9:	shl    eax,cl
100538db:	sub    eax,0x1
100538de:	and    eax,ebx
100538e0:	mov    ecx,eax
100538e2:	mov    eax,DWORD PTR [edi+0x4c]
100538e5:	mov    eax,DWORD PTR [eax+ecx*4]
100538e8:	mov    ecx,eax
100538ea:	shr    ecx,0x8
100538ed:	movzx  ecx,cl
100538f0:	cmp    ecx,esi
100538f2:	mov    DWORD PTR [esp+0x14],eax
100538f6:	jbe    0x1005393c
100538f8:	test   edx,edx
100538fa:	je     0x10053f0c
10053900:	movzx  eax,BYTE PTR [ebp+0x0]
10053904:	mov    ecx,esi
10053906:	shl    eax,cl
10053908:	mov    ecx,DWORD PTR [edi+0x54]
1005390b:	sub    edx,0x1
1005390e:	add    esi,0x8
10053911:	add    ebx,eax
10053913:	mov    eax,0x1
10053918:	shl    eax,cl
1005391a:	mov    ecx,DWORD PTR [edi+0x4c]
1005391d:	add    ebp,0x1
10053920:	mov    DWORD PTR [esp+0x10],edx
10053924:	sub    eax,0x1
10053927:	and    eax,ebx
10053929:	mov    eax,DWORD PTR [ecx+eax*4]
1005392c:	mov    ecx,eax
1005392e:	shr    ecx,0x8
10053931:	movzx  ecx,cl
10053934:	cmp    ecx,esi
10053936:	mov    DWORD PTR [esp+0x14],eax
1005393a:	ja     0x100538f8
1005393c:	test   al,al
1005393e:	je     0x10053a0d
10053944:	test   al,0xf0
10053946:	jne    0x10053a0d
1005394c:	mov    ecx,eax
1005394e:	shr    ecx,0x8
10053951:	mov    DWORD PTR [esp+0x34],ecx
10053955:	movzx  ecx,cl
10053958:	mov    DWORD PTR [esp+0x24],ecx
1005395c:	movzx  ecx,al
1005395f:	add    ecx,DWORD PTR [esp+0x24]
10053963:	mov    DWORD PTR [esp+0x18],eax
10053967:	mov    eax,0x1
1005396c:	shl    eax,cl
1005396e:	mov    ecx,DWORD PTR [esp+0x24]
10053972:	sub    eax,0x1
10053975:	and    eax,ebx
10053977:	shr    eax,cl
10053979:	mov    ecx,DWORD PTR [esp+0x14]
1005397d:	shr    ecx,0x10
10053980:	add    eax,ecx
10053982:	mov    ecx,eax
10053984:	mov    eax,DWORD PTR [edi+0x4c]
10053987:	mov    eax,DWORD PTR [eax+ecx*4]
1005398a:	movzx  ecx,BYTE PTR [esp+0x34]
1005398f:	mov    DWORD PTR [esp+0x14],eax
10053993:	shr    eax,0x8
10053996:	movzx  eax,al
10053999:	add    eax,ecx
1005399b:	cmp    eax,esi
1005399d:	jbe    0x10053a00
100539a3:	test   edx,edx
100539a5:	je     0x10053f0c
100539ab:	movzx  eax,BYTE PTR [ebp+0x0]
100539af:	mov    ecx,esi
100539b1:	shl    eax,cl
100539b3:	mov    ecx,DWORD PTR [esp+0x18]
100539b7:	sub    edx,0x1
100539ba:	add    esi,0x8
100539bd:	add    ebx,eax
100539bf:	movzx  eax,ch
100539c2:	add    ecx,eax
100539c4:	mov    DWORD PTR [esp+0x24],eax
100539c8:	mov    eax,0x1
100539cd:	shl    eax,cl
100539cf:	mov    ecx,DWORD PTR [esp+0x24]
100539d3:	add    ebp,0x1
100539d6:	mov    DWORD PTR [esp+0x10],edx
100539da:	sub    eax,0x1
100539dd:	and    eax,ebx
100539df:	shr    eax,cl
100539e1:	movzx  ecx,WORD PTR [esp+0x1a]
100539e6:	add    eax,ecx
100539e8:	mov    ecx,DWORD PTR [edi+0x4c]
100539eb:	mov    eax,DWORD PTR [ecx+eax*4]
100539ee:	mov    DWORD PTR [esp+0x14],eax
100539f2:	shr    eax,0x8
100539f5:	movzx  eax,al
100539f8:	add    eax,DWORD PTR [esp+0x24]
100539fc:	cmp    eax,esi
100539fe:	ja     0x100539a3
10053a00:	movzx  ecx,BYTE PTR [esp+0x19]
10053a05:	mov    eax,DWORD PTR [esp+0x14]
10053a09:	shr    ebx,cl
10053a0b:	sub    esi,ecx
10053a0d:	mov    ecx,eax
10053a0f:	shr    ecx,0x8
10053a12:	movzx  ecx,cl
10053a15:	shr    ebx,cl
10053a17:	sub    esi,ecx
10053a19:	mov    DWORD PTR [esp+0x24],ecx
10053a1d:	mov    ecx,eax
10053a1f:	shr    ecx,0x10
10053a22:	test   al,al
10053a24:	mov    DWORD PTR [esp+0x18],ebx
10053a28:	mov    DWORD PTR [edi+0x40],ecx
10053a2b:	jne    0x10053a38
10053a2d:	mov    DWORD PTR [edi],0x17
10053a33:	jmp    0x10053eae
10053a38:	test   al,0x20
10053a3a:	je     0x10053a47
10053a3c:	mov    DWORD PTR [edi],0xb
10053a42:	jmp    0x10053eae
10053a47:	test   al,0x40
10053a49:	je     0x10053a5b
10053a4b:	mov    eax,DWORD PTR [esp+0x40]
10053a4f:	mov    DWORD PTR [eax+0x18],0x100688f0
10053a56:	jmp    0x10053ea8
10053a5b:	and    eax,0xf
10053a5e:	mov    DWORD PTR [edi+0x48],eax
10053a61:	mov    DWORD PTR [edi],0x13
10053a67:	mov    eax,DWORD PTR [edi+0x48]
10053a6a:	test   eax,eax
10053a6c:	je     0x10053aac
10053a6e:	cmp    esi,eax
10053a70:	jae    0x10053a96
10053a72:	test   edx,edx
10053a74:	je     0x10053f0c
10053a7a:	movzx  eax,BYTE PTR [ebp+0x0]
10053a7e:	mov    ecx,esi
10053a80:	shl    eax,cl
10053a82:	sub    edx,0x1
10053a85:	add    esi,0x8
10053a88:	add    ebp,0x1
10053a8b:	add    ebx,eax
10053a8d:	cmp    esi,DWORD PTR [edi+0x48]
10053a90:	mov    DWORD PTR [esp+0x10],edx
10053a94:	jb     0x10053a72
10053a96:	mov    ecx,DWORD PTR [edi+0x48]
10053a99:	mov    eax,0x1
10053a9e:	shl    eax,cl
10053aa0:	sub    eax,0x1
10053aa3:	and    eax,ebx
10053aa5:	add    DWORD PTR [edi+0x40],eax
10053aa8:	shr    ebx,cl
10053aaa:	sub    esi,ecx
10053aac:	mov    DWORD PTR [edi],0x14
10053ab2:	mov    ecx,DWORD PTR [edi+0x58]
10053ab5:	mov    eax,0x1
10053aba:	shl    eax,cl
10053abc:	sub    eax,0x1
10053abf:	and    eax,ebx
10053ac1:	mov    ecx,eax
10053ac3:	mov    eax,DWORD PTR [edi+0x50]
10053ac6:	mov    eax,DWORD PTR [eax+ecx*4]
10053ac9:	mov    ecx,eax
10053acb:	shr    ecx,0x8
10053ace:	movzx  ecx,cl
10053ad1:	cmp    ecx,esi
10053ad3:	mov    DWORD PTR [esp+0x14],eax
10053ad7:	jbe    0x10053b24
10053ad9:	lea    esp,[esp+0x0]
10053ae0:	test   edx,edx
10053ae2:	je     0x10053f0c
10053ae8:	movzx  eax,BYTE PTR [ebp+0x0]
10053aec:	mov    ecx,esi
10053aee:	shl    eax,cl
10053af0:	mov    ecx,DWORD PTR [edi+0x58]
10053af3:	sub    edx,0x1
10053af6:	add    esi,0x8
10053af9:	add    ebx,eax
10053afb:	mov    eax,0x1
10053b00:	shl    eax,cl
10053b02:	mov    ecx,DWORD PTR [edi+0x50]
10053b05:	add    ebp,0x1
10053b08:	mov    DWORD PTR [esp+0x10],edx
10053b0c:	sub    eax,0x1
10053b0f:	and    eax,ebx
10053b11:	mov    eax,DWORD PTR [ecx+eax*4]
10053b14:	mov    ecx,eax
10053b16:	shr    ecx,0x8
10053b19:	movzx  ecx,cl
10053b1c:	cmp    ecx,esi
10053b1e:	mov    DWORD PTR [esp+0x14],eax
10053b22:	ja     0x10053ae0
10053b24:	test   al,0xf0
10053b26:	jne    0x10053bed
10053b2c:	mov    ecx,eax
10053b2e:	shr    ecx,0x8
10053b31:	mov    DWORD PTR [esp+0x34],ecx
10053b35:	movzx  ecx,cl
10053b38:	mov    DWORD PTR [esp+0x24],ecx
10053b3c:	movzx  ecx,al
10053b3f:	add    ecx,DWORD PTR [esp+0x24]
10053b43:	mov    DWORD PTR [esp+0x18],eax
10053b47:	mov    eax,0x1
10053b4c:	shl    eax,cl
10053b4e:	mov    ecx,DWORD PTR [esp+0x24]
10053b52:	sub    eax,0x1
10053b55:	and    eax,ebx
10053b57:	shr    eax,cl
10053b59:	mov    ecx,DWORD PTR [esp+0x14]
10053b5d:	shr    ecx,0x10
10053b60:	add    eax,ecx
10053b62:	mov    ecx,eax
10053b64:	mov    eax,DWORD PTR [edi+0x50]
10053b67:	mov    eax,DWORD PTR [eax+ecx*4]
10053b6a:	movzx  ecx,BYTE PTR [esp+0x34]
10053b6f:	mov    DWORD PTR [esp+0x14],eax
10053b73:	shr    eax,0x8
10053b76:	movzx  eax,al
10053b79:	add    eax,ecx
10053b7b:	cmp    eax,esi
10053b7d:	jbe    0x10053be0
10053b83:	test   edx,edx
10053b85:	je     0x10053f0c
10053b8b:	movzx  eax,BYTE PTR [ebp+0x0]
10053b8f:	mov    ecx,esi
10053b91:	shl    eax,cl
10053b93:	mov    ecx,DWORD PTR [esp+0x18]
10053b97:	sub    edx,0x1
10053b9a:	add    esi,0x8
10053b9d:	add    ebx,eax
10053b9f:	movzx  eax,ch
10053ba2:	add    ecx,eax
10053ba4:	mov    DWORD PTR [esp+0x24],eax
10053ba8:	mov    eax,0x1
10053bad:	shl    eax,cl
10053baf:	mov    ecx,DWORD PTR [esp+0x24]
10053bb3:	add    ebp,0x1
10053bb6:	mov    DWORD PTR [esp+0x10],edx
10053bba:	sub    eax,0x1
10053bbd:	and    eax,ebx
10053bbf:	shr    eax,cl
10053bc1:	movzx  ecx,WORD PTR [esp+0x1a]
10053bc6:	add    eax,ecx
10053bc8:	mov    ecx,DWORD PTR [edi+0x50]
10053bcb:	mov    eax,DWORD PTR [ecx+eax*4]
10053bce:	mov    DWORD PTR [esp+0x14],eax
10053bd2:	shr    eax,0x8
10053bd5:	movzx  eax,al
10053bd8:	add    eax,DWORD PTR [esp+0x24]
10053bdc:	cmp    eax,esi
10053bde:	ja     0x10053b83
10053be0:	movzx  ecx,BYTE PTR [esp+0x19]
10053be5:	mov    eax,DWORD PTR [esp+0x14]
10053be9:	shr    ebx,cl
10053beb:	sub    esi,ecx
10053bed:	mov    ecx,eax
10053bef:	shr    ecx,0x8
10053bf2:	movzx  ecx,cl
10053bf5:	shr    ebx,cl
10053bf7:	sub    esi,ecx
10053bf9:	test   al,0x40
10053bfb:	mov    DWORD PTR [esp+0x24],ecx
10053bff:	mov    DWORD PTR [esp+0x18],ebx
10053c03:	je     0x10053c15
10053c05:	mov    eax,DWORD PTR [esp+0x40]
10053c09:	mov    DWORD PTR [eax+0x18],0x100688d8
10053c10:	jmp    0x10053ea8
10053c15:	mov    ecx,eax
10053c17:	shr    ecx,0x10
10053c1a:	and    eax,0xf
10053c1d:	mov    DWORD PTR [edi+0x44],ecx
10053c20:	mov    DWORD PTR [edi+0x48],eax
10053c23:	mov    DWORD PTR [edi],0x15
10053c29:	mov    eax,DWORD PTR [edi+0x48]
10053c2c:	test   eax,eax
10053c2e:	je     0x10053c72
10053c30:	cmp    esi,eax
10053c32:	jae    0x10053c58
10053c34:	test   edx,edx
10053c36:	je     0x10053f0c
10053c3c:	movzx  eax,BYTE PTR [ebp+0x0]
10053c40:	mov    ecx,esi
10053c42:	shl    eax,cl
10053c44:	sub    edx,0x1
10053c47:	add    esi,0x8
10053c4a:	add    ebp,0x1
10053c4d:	add    ebx,eax
10053c4f:	cmp    esi,DWORD PTR [edi+0x48]
10053c52:	mov    DWORD PTR [esp+0x10],edx
10053c56:	jb     0x10053c34
10053c58:	mov    ecx,DWORD PTR [edi+0x48]
10053c5b:	mov    eax,0x1
10053c60:	shl    eax,cl
10053c62:	sub    eax,0x1
10053c65:	and    eax,ebx
10053c67:	add    DWORD PTR [edi+0x44],eax
10053c6a:	shr    ebx,cl
10053c6c:	sub    esi,ecx
10053c6e:	mov    DWORD PTR [esp+0x18],ebx
10053c72:	mov    ecx,DWORD PTR [edi+0x2c]
10053c75:	sub    ecx,DWORD PTR [esp+0x1c]
10053c79:	add    ecx,DWORD PTR [esp+0x2c]
10053c7d:	cmp    DWORD PTR [edi+0x44],ecx
10053c80:	jbe    0x10053c92
10053c82:	mov    eax,DWORD PTR [esp+0x40]
10053c86:	mov    DWORD PTR [eax+0x18],0x100688b8
10053c8d:	jmp    0x10053ea8
10053c92:	mov    DWORD PTR [edi],0x16
10053c98:	cmp    DWORD PTR [esp+0x1c],0x0
10053c9d:	je     0x10053f0c
10053ca3:	mov    ecx,DWORD PTR [esp+0x2c]
10053ca7:	sub    ecx,DWORD PTR [esp+0x1c]
10053cab:	mov    eax,DWORD PTR [edi+0x44]
10053cae:	cmp    eax,ecx
10053cb0:	jbe    0x10053cee
10053cb2:	sub    eax,ecx
10053cb4:	mov    ecx,DWORD PTR [edi+0x30]
10053cb7:	cmp    eax,ecx
10053cb9:	mov    DWORD PTR [esp+0x14],eax
10053cbd:	jbe    0x10053ccf
10053cbf:	sub    eax,ecx
10053cc1:	mov    ecx,DWORD PTR [edi+0x34]
10053cc4:	add    ecx,DWORD PTR [edi+0x28]
10053cc7:	mov    DWORD PTR [esp+0x14],eax
10053ccb:	sub    ecx,eax
10053ccd:	jmp    0x10053cdb
10053ccf:	mov    ecx,DWORD PTR [edi+0x34]
10053cd2:	sub    ecx,eax
10053cd4:	add    ecx,DWORD PTR [edi+0x30]
10053cd7:	mov    eax,DWORD PTR [esp+0x14]
10053cdb:	mov    DWORD PTR [esp+0x24],ecx
10053cdf:	mov    ecx,DWORD PTR [edi+0x40]
10053ce2:	cmp    eax,ecx
10053ce4:	mov    DWORD PTR [esp+0x34],ecx
10053ce8:	jbe    0x10053d03
10053cea:	mov    eax,ecx
10053cec:	jmp    0x10053cff
10053cee:	mov    ecx,DWORD PTR [esp+0x28]
10053cf2:	sub    ecx,eax
10053cf4:	mov    eax,DWORD PTR [edi+0x40]
10053cf7:	mov    DWORD PTR [esp+0x24],ecx
10053cfb:	mov    DWORD PTR [esp+0x34],eax
10053cff:	mov    DWORD PTR [esp+0x14],eax
10053d03:	mov    ecx,DWORD PTR [esp+0x1c]
10053d07:	cmp    eax,ecx
10053d09:	jbe    0x10053d11
10053d0b:	mov    eax,ecx
10053d0d:	mov    DWORD PTR [esp+0x14],eax
10053d11:	sub    ecx,eax
10053d13:	mov    DWORD PTR [esp+0x1c],ecx
10053d17:	mov    ecx,DWORD PTR [esp+0x34]
10053d1b:	sub    ecx,eax
10053d1d:	mov    eax,DWORD PTR [esp+0x28]
10053d21:	mov    DWORD PTR [edi+0x40],ecx
10053d24:	mov    ecx,DWORD PTR [esp+0x24]
10053d28:	mov    cl,BYTE PTR [ecx]
10053d2a:	add    DWORD PTR [esp+0x24],0x1
10053d2f:	mov    BYTE PTR [eax],cl
10053d31:	add    eax,0x1
10053d34:	sub    DWORD PTR [esp+0x14],0x1
10053d39:	jne    0x10053d24
10053d3b:	cmp    DWORD PTR [edi+0x40],0x0
10053d3f:	mov    DWORD PTR [esp+0x28],eax
10053d43:	jne    0x10053eae
10053d49:	mov    DWORD PTR [edi],0x12
10053d4f:	jmp    0x10053eae
10053d54:	cmp    DWORD PTR [esp+0x1c],0x0
10053d59:	je     0x10053f0c
10053d5f:	mov    eax,DWORD PTR [esp+0x28]
10053d63:	mov    cl,BYTE PTR [edi+0x40]
10053d66:	mov    BYTE PTR [eax],cl
10053d68:	add    eax,0x1
10053d6b:	sub    DWORD PTR [esp+0x1c],0x1
10053d70:	mov    DWORD PTR [esp+0x28],eax
10053d74:	mov    DWORD PTR [edi],0x12
10053d7a:	jmp    0x10053eae
10053d7f:	cmp    DWORD PTR [edi+0x8],0x0
10053d83:	je     0x10053e4c
10053d89:	cmp    esi,0x20
10053d8c:	jae    0x10053db8
10053d8e:	mov    edi,edi
10053d90:	test   edx,edx
10053d92:	je     0x10053f0c
10053d98:	movzx  eax,BYTE PTR [ebp+0x0]
10053d9c:	mov    ecx,esi
10053d9e:	shl    eax,cl
10053da0:	sub    edx,0x1
10053da3:	add    esi,0x8
10053da6:	add    ebp,0x1
10053da9:	add    ebx,eax
10053dab:	cmp    esi,0x20
10053dae:	mov    DWORD PTR [esp+0x10],edx
10053db2:	mov    DWORD PTR [esp+0x18],ebx
10053db6:	jb     0x10053d90
10053db8:	mov    eax,DWORD PTR [esp+0x2c]
10053dbc:	sub    eax,DWORD PTR [esp+0x1c]
10053dc0:	mov    ecx,DWORD PTR [esp+0x40]
10053dc4:	add    DWORD PTR [ecx+0x14],eax
10053dc7:	add    DWORD PTR [edi+0x1c],eax
10053dca:	test   eax,eax
10053dcc:	mov    DWORD PTR [esp+0x2c],eax
10053dd0:	je     0x10053e01
10053dd2:	mov    ecx,DWORD PTR [esp+0x28]
10053dd6:	mov    edx,DWORD PTR [edi+0x18]
10053dd9:	push   eax
10053dda:	sub    ecx,eax
10053ddc:	cmp    DWORD PTR [edi+0x10],0x0
10053de0:	push   ecx
10053de1:	push   edx
10053de2:	je     0x10053deb
10053de4:	call   0x100560d0
10053de9:	jmp    0x10053df0
10053deb:	call   0x100540f0
10053df0:	mov    ecx,DWORD PTR [esp+0x4c]
10053df4:	mov    edx,DWORD PTR [esp+0x1c]
10053df8:	mov    DWORD PTR [edi+0x18],eax
10053dfb:	add    esp,0xc
10053dfe:	mov    DWORD PTR [ecx+0x30],eax
10053e01:	cmp    DWORD PTR [edi+0x10],0x0
10053e05:	mov    eax,DWORD PTR [esp+0x1c]
10053e09:	mov    DWORD PTR [esp+0x2c],eax
10053e0d:	mov    eax,ebx
10053e0f:	jne    0x10053e2f
10053e11:	and    eax,0xff00
10053e16:	mov    ecx,ebx
10053e18:	shl    ecx,0x10
10053e1b:	add    eax,ecx
10053e1d:	xor    ecx,ecx
10053e1f:	mov    ch,BYTE PTR [esp+0x1a]
10053e23:	shl    eax,0x8
10053e26:	add    eax,ecx
10053e28:	mov    ecx,ebx
10053e2a:	shr    ecx,0x18
10053e2d:	add    eax,ecx
10053e2f:	cmp    eax,DWORD PTR [edi+0x18]
10053e32:	je     0x10053e44
10053e34:	mov    eax,DWORD PTR [esp+0x40]
10053e38:	mov    DWORD PTR [eax+0x18],0x100688a0
10053e3f:	jmp    0x10053ea8
10053e44:	xor    ebx,ebx
10053e46:	mov    DWORD PTR [esp+0x18],ebx
10053e4a:	xor    esi,esi
10053e4c:	mov    DWORD PTR [edi],0x19
10053e52:	cmp    DWORD PTR [edi+0x8],0x0
10053e56:	je     0x10053ef4
10053e5c:	cmp    DWORD PTR [edi+0x10],0x0
10053e60:	je     0x10053ef4
10053e66:	cmp    esi,0x20
10053e69:	jae    0x10053e98
10053e6b:	jmp    0x10053e70
10053e6d:	lea    ecx,[ecx+0x0]
10053e70:	test   edx,edx
10053e72:	je     0x10053f0c
10053e78:	movzx  eax,BYTE PTR [ebp+0x0]
10053e7c:	mov    ecx,esi
10053e7e:	shl    eax,cl
10053e80:	sub    edx,0x1
10053e83:	add    esi,0x8
10053e86:	add    ebp,0x1
10053e89:	add    ebx,eax
10053e8b:	cmp    esi,0x20
10053e8e:	mov    DWORD PTR [esp+0x10],edx
10053e92:	mov    DWORD PTR [esp+0x18],ebx
10053e96:	jb     0x10053e70
10053e98:	cmp    ebx,DWORD PTR [edi+0x1c]
10053e9b:	je     0x10053ef0
10053e9d:	mov    ecx,DWORD PTR [esp+0x40]
10053ea1:	mov    DWORD PTR [ecx+0x18],0x10068888
10053ea8:	mov    DWORD PTR [edi],0x1b
10053eae:	mov    eax,DWORD PTR [edi]
10053eb0:	cmp    eax,0x1c
10053eb3:	jbe    0x10052b30
10053eb9:	mov    eax,0xfffffffe
10053ebe:	pop    esi
10053ebf:	pop    ebp
10053ec0:	pop    ebx
10053ec1:	pop    edi
10053ec2:	add    esp,0x2c
10053ec5:	ret    
10053ec6:	mov    eax,DWORD PTR [esp+0x40]
10053eca:	mov    ecx,DWORD PTR [esp+0x28]
10053ece:	mov    DWORD PTR [eax+0xc],ecx
10053ed1:	mov    ecx,DWORD PTR [esp+0x1c]
10053ed5:	mov    DWORD PTR [eax],ebp
10053ed7:	mov    DWORD PTR [eax+0x10],ecx
10053eda:	mov    DWORD PTR [eax+0x4],edx
10053edd:	mov    DWORD PTR [edi+0x3c],esi
10053ee0:	pop    esi
10053ee1:	pop    ebp
10053ee2:	mov    DWORD PTR [edi+0x38],ebx
10053ee5:	pop    ebx
10053ee6:	mov    eax,0x2
10053eeb:	pop    edi
10053eec:	add    esp,0x2c
10053eef:	ret    
10053ef0:	xor    ebx,ebx
10053ef2:	xor    esi,esi
10053ef4:	mov    DWORD PTR [edi],0x1a
10053efa:	mov    DWORD PTR [esp+0x30],0x1
10053f02:	jmp    0x10053f0c
10053f04:	mov    DWORD PTR [esp+0x30],0xfffffffd
10053f0c:	mov    eax,DWORD PTR [esp+0x40]
10053f10:	mov    ecx,DWORD PTR [esp+0x28]
10053f14:	mov    DWORD PTR [eax+0xc],ecx
10053f17:	mov    ecx,DWORD PTR [esp+0x1c]
10053f1b:	mov    DWORD PTR [eax+0x10],ecx
10053f1e:	mov    DWORD PTR [eax],ebp
10053f20:	mov    DWORD PTR [eax+0x4],edx
10053f23:	cmp    DWORD PTR [edi+0x28],0x0
10053f27:	mov    DWORD PTR [edi+0x38],ebx
10053f2a:	mov    DWORD PTR [edi+0x3c],esi
10053f2d:	jne    0x10053f3d
10053f2f:	cmp    DWORD PTR [edi],0x18
10053f32:	jge    0x10053f61
10053f34:	mov    edx,DWORD PTR [esp+0x2c]
10053f38:	cmp    edx,DWORD PTR [eax+0x10]
10053f3b:	je     0x10053f61
10053f3d:	mov    eax,DWORD PTR [esp+0x2c]
10053f41:	mov    ebx,DWORD PTR [esp+0x40]
10053f45:	call   0x100529c0
10053f4a:	test   eax,eax
10053f4c:	je     0x10053f61
10053f4e:	mov    DWORD PTR [edi],0x1c
10053f54:	pop    esi
10053f55:	pop    ebp
10053f56:	pop    ebx
10053f57:	mov    eax,0xfffffffc
10053f5c:	pop    edi
10053f5d:	add    esp,0x2c
10053f60:	ret    
10053f61:	mov    esi,DWORD PTR [esp+0x40]
10053f65:	mov    ebp,DWORD PTR [esp+0x38]
10053f69:	sub    ebp,DWORD PTR [esi+0x4]
10053f6c:	mov    ebx,DWORD PTR [esp+0x2c]
10053f70:	sub    ebx,DWORD PTR [esi+0x10]
10053f73:	add    DWORD PTR [esi+0x8],ebp
10053f76:	add    DWORD PTR [esi+0x14],ebx
10053f79:	add    DWORD PTR [edi+0x1c],ebx
10053f7c:	cmp    DWORD PTR [edi+0x8],0x0
10053f80:	je     0x10053fb6
10053f82:	test   ebx,ebx
10053f84:	je     0x10053fb6
10053f86:	cmp    DWORD PTR [edi+0x10],0x0
10053f8a:	push   ebx
10053f8b:	je     0x10053f9e
10053f8d:	mov    ecx,DWORD PTR [esi+0xc]
10053f90:	mov    edx,DWORD PTR [edi+0x18]
10053f93:	sub    ecx,ebx
10053f95:	push   ecx
10053f96:	push   edx
10053f97:	call   0x100560d0
10053f9c:	jmp    0x10053fad
10053f9e:	mov    eax,DWORD PTR [esi+0xc]
10053fa1:	mov    ecx,DWORD PTR [edi+0x18]
10053fa4:	sub    eax,ebx
10053fa6:	push   eax
10053fa7:	push   ecx
10053fa8:	call   0x100540f0
10053fad:	mov    DWORD PTR [edi+0x18],eax
10053fb0:	add    esp,0xc
10053fb3:	mov    DWORD PTR [esi+0x30],eax
10053fb6:	mov    edx,DWORD PTR [edi+0x4]
10053fb9:	neg    edx
10053fbb:	sbb    edx,edx
10053fbd:	and    edx,0x40
10053fc0:	xor    eax,eax
10053fc2:	cmp    DWORD PTR [edi],0xb
10053fc5:	setne  al
10053fc8:	sub    eax,0x1
10053fcb:	and    eax,0x80
10053fd0:	add    edx,eax
10053fd2:	add    edx,DWORD PTR [edi+0x3c]
10053fd5:	test   ebp,ebp
10053fd7:	mov    DWORD PTR [esi+0x2c],edx
10053fda:	jne    0x10053fe0
10053fdc:	test   ebx,ebx
10053fde:	je     0x10053fe7
10053fe0:	cmp    DWORD PTR [esp+0x44],0x4
10053fe5:	jne    0x10054000
10053fe7:	mov    eax,DWORD PTR [esp+0x30]
10053feb:	test   eax,eax
10053fed:	jne    0x10053ebe
10053ff3:	pop    esi
10053ff4:	pop    ebp
10053ff5:	pop    ebx
10053ff6:	mov    eax,0xfffffffb
10053ffb:	pop    edi
10053ffc:	add    esp,0x2c
10053fff:	ret    
10054000:	mov    eax,DWORD PTR [esp+0x30]
10054004:	pop    esi
10054005:	pop    ebp
10054006:	pop    ebx
10054007:	pop    edi
10054008:	add    esp,0x2c
1005400b:	ret    
1005400c:	mov    eax,0xfffffffe
10054011:	pop    edi
10054012:	add    esp,0x2c
10054015:	ret    
10054016:	mov    edi,edi
10054018:	aaa    
10054019:	sub    eax,DWORD PTR ds:0x52ca510
1005401f:	adc    BYTE PTR [ebx+0x2d],dl
10054022:	add    eax,0x52dd210
10054027:	adc    BYTE PTR [esi+ebp*1+0x5],dl
1005402b:	adc    bh,bl
1005402d:	cs add eax,0x52f9b10
10054033:	adc    BYTE PTR [ebx+0x30],dl
10054036:	add    eax,0x5310a10
1005403b:	adc    BYTE PTR [ecx+esi*1+0x320c1005],ah
10054042:	add    eax,0x5323810
10054047:	adc    BYTE PTR [ebx+0x32],al
1005404a:	add    eax,0x5330e10
1005404f:	adc    BYTE PTR [ebx+0x33],bh
10054052:	add    eax,0x533db10
10054057:	adc    BYTE PTR [ebx+0x34],bl
1005405a:	add    eax,0x5355210
1005405f:	adc    BYTE PTR [ebx+0x38],ah
10054062:	add    eax,0x53a6710
10054067:	adc    BYTE PTR [edx+0x2910053a],dh
1005406d:	cmp    al,0x5
1005406f:	adc    BYTE PTR [eax+0x5410053c],bl
10054075:	cmp    eax,0x3d7f1005
1005407a:	add    eax,0x53e5210
1005407f:	adc    dl,bh
10054081:	ds add eax,0x53f0410
10054087:	adc    BYTE PTR [edi+edi*1+0x5],dl
1005408b:	adc    BYTE PTR [eax-0x42efface],ch
10054091:	xor    al,BYTE PTR ds:0x532d910
10054097:	adc    dh,ch
10054099:	xor    al,BYTE PTR ds:0xcccccc10
1005409f:	int3   
100540a0:	push   esi
100540a1:	mov    esi,DWORD PTR [esp+0x8]
100540a5:	test   esi,esi
100540a7:	je     0x100540e3
100540a9:	mov    eax,DWORD PTR [esi+0x1c]
100540ac:	test   eax,eax
100540ae:	je     0x100540e3
100540b0:	mov    ecx,DWORD PTR [esi+0x24]
100540b3:	test   ecx,ecx
100540b5:	je     0x100540e3
100540b7:	mov    eax,DWORD PTR [eax+0x34]
100540ba:	test   eax,eax
100540bc:	je     0x100540c8
100540be:	push   eax
100540bf:	mov    eax,DWORD PTR [esi+0x28]
100540c2:	push   eax
100540c3:	call   ecx
100540c5:	add    esp,0x8
100540c8:	mov    ecx,DWORD PTR [esi+0x1c]
100540cb:	mov    edx,DWORD PTR [esi+0x28]
100540ce:	mov    eax,DWORD PTR [esi+0x24]
100540d1:	push   ecx
100540d2:	push   edx
100540d3:	call   eax
100540d5:	add    esp,0x8
100540d8:	mov    DWORD PTR [esi+0x1c],0x0
100540df:	xor    eax,eax
100540e1:	pop    esi
100540e2:	ret    
100540e3:	mov    eax,0xfffffffe
100540e8:	pop    esi
100540e9:	ret    
100540ea:	int3   
100540eb:	int3   
100540ec:	int3   
100540ed:	int3   
100540ee:	int3   
100540ef:	int3   
100540f0:	mov    ecx,DWORD PTR [esp+0x4]
100540f4:	push   ebx
100540f5:	mov    ebx,DWORD PTR [esp+0x10]
100540f9:	push   edi
100540fa:	mov    edi,ecx
100540fc:	shr    edi,0x10
100540ff:	and    ecx,0xffff
10054105:	cmp    ebx,0x1
10054108:	jne    0x1005413b
1005410a:	mov    eax,DWORD PTR [esp+0x10]
1005410e:	movzx  edx,BYTE PTR [eax]
10054111:	add    ecx,edx
10054113:	cmp    ecx,0xfff1
10054119:	jb     0x10054121
1005411b:	sub    ecx,0xfff1
10054121:	add    edi,ecx
10054123:	cmp    edi,0xfff1
10054129:	jb     0x10054131
1005412b:	sub    edi,0xfff1
10054131:	mov    eax,edi
10054133:	shl    eax,0x10
10054136:	pop    edi
10054137:	or     eax,ecx
10054139:	pop    ebx
1005413a:	ret    
1005413b:	push   esi
1005413c:	mov    esi,DWORD PTR [esp+0x14]
10054140:	test   esi,esi
10054142:	jne    0x1005414d
10054144:	pop    esi
10054145:	pop    edi
10054146:	mov    eax,0x1
1005414b:	pop    ebx
1005414c:	ret    
1005414d:	cmp    ebx,0x10
10054150:	jae    0x10054191
10054152:	test   ebx,ebx
10054154:	je     0x10054167
10054156:	movzx  eax,BYTE PTR [esi]
10054159:	add    ecx,eax
1005415b:	sub    ebx,0x1
1005415e:	add    esi,0x1
10054161:	add    edi,ecx
10054163:	test   ebx,ebx
10054165:	jne    0x10054156
10054167:	cmp    ecx,0xfff1
1005416d:	jb     0x10054175
1005416f:	sub    ecx,0xfff1
10054175:	mov    eax,0x80078071
1005417a:	mul    edi
1005417c:	shr    edx,0xf
1005417f:	mov    eax,edx
10054181:	shl    eax,0x4
10054184:	sub    eax,edx
10054186:	add    eax,edi
10054188:	pop    esi
10054189:	shl    eax,0x10
1005418c:	pop    edi
1005418d:	or     eax,ecx
1005418f:	pop    ebx
10054190:	ret    
10054191:	cmp    ebx,0x15b0
10054197:	jb     0x10054279
1005419d:	mov    eax,0x5e6ea9af
100541a2:	mul    ebx
100541a4:	push   ebp
100541a5:	mov    ebp,edx
100541a7:	shr    ebp,0xb
100541aa:	lea    ebx,[ebx+0x0]
100541b0:	sub    ebx,0x15b0
100541b6:	mov    eax,0x15b
100541bb:	jmp    0x100541c0
100541bd:	lea    ecx,[ecx+0x0]
100541c0:	movzx  edx,BYTE PTR [esi]
100541c3:	add    ecx,edx
100541c5:	movzx  edx,BYTE PTR [esi+0x1]
100541c9:	add    edi,ecx
100541cb:	add    ecx,edx
100541cd:	movzx  edx,BYTE PTR [esi+0x2]
100541d1:	add    edi,ecx
100541d3:	add    ecx,edx
100541d5:	movzx  edx,BYTE PTR [esi+0x3]
100541d9:	add    edi,ecx
100541db:	add    ecx,edx
100541dd:	movzx  edx,BYTE PTR [esi+0x4]
100541e1:	add    edi,ecx
100541e3:	add    ecx,edx
100541e5:	movzx  edx,BYTE PTR [esi+0x5]
100541e9:	add    edi,ecx
100541eb:	add    ecx,edx
100541ed:	movzx  edx,BYTE PTR [esi+0x6]
100541f1:	add    edi,ecx
100541f3:	add    ecx,edx
100541f5:	movzx  edx,BYTE PTR [esi+0x7]
100541f9:	add    edi,ecx
100541fb:	add    ecx,edx
100541fd:	movzx  edx,BYTE PTR [esi+0x8]
10054201:	add    edi,ecx
10054203:	add    ecx,edx
10054205:	movzx  edx,BYTE PTR [esi+0x9]
10054209:	add    edi,ecx
1005420b:	add    ecx,edx
1005420d:	movzx  edx,BYTE PTR [esi+0xa]
10054211:	add    edi,ecx
10054213:	add    ecx,edx
10054215:	movzx  edx,BYTE PTR [esi+0xb]
10054219:	add    edi,ecx
1005421b:	add    ecx,edx
1005421d:	movzx  edx,BYTE PTR [esi+0xc]
10054221:	add    edi,ecx
10054223:	add    ecx,edx
10054225:	movzx  edx,BYTE PTR [esi+0xd]
10054229:	add    edi,ecx
1005422b:	add    ecx,edx
1005422d:	movzx  edx,BYTE PTR [esi+0xe]
10054231:	add    edi,ecx
10054233:	add    ecx,edx
10054235:	movzx  edx,BYTE PTR [esi+0xf]
10054239:	add    edi,ecx
1005423b:	add    ecx,edx
1005423d:	add    edi,ecx
1005423f:	add    esi,0x10
10054242:	sub    eax,0x1
10054245:	jne    0x100541c0
1005424b:	mov    eax,0x80078071
10054250:	mul    ecx
10054252:	shr    edx,0xf
10054255:	imul   edx,edx,0xffff000f
1005425b:	add    ecx,edx
1005425d:	mov    eax,0x80078071
10054262:	mul    edi
10054264:	shr    edx,0xf
10054267:	imul   edx,edx,0xffff000f
1005426d:	add    edi,edx
1005426f:	sub    ebp,0x1
10054272:	jne    0x100541b0
10054278:	pop    ebp
10054279:	test   ebx,ebx
1005427b:	je     0x10054357
10054281:	cmp    ebx,0x10
10054284:	jb     0x1005431e
1005428a:	mov    eax,ebx
1005428c:	shr    eax,0x4
1005428f:	nop
10054290:	movzx  edx,BYTE PTR [esi]
10054293:	add    ecx,edx
10054295:	movzx  edx,BYTE PTR [esi+0x1]
10054299:	add    edi,ecx
1005429b:	add    ecx,edx
1005429d:	movzx  edx,BYTE PTR [esi+0x2]
100542a1:	add    edi,ecx
100542a3:	add    ecx,edx
100542a5:	movzx  edx,BYTE PTR [esi+0x3]
100542a9:	add    edi,ecx
100542ab:	add    ecx,edx
100542ad:	movzx  edx,BYTE PTR [esi+0x4]
100542b1:	add    edi,ecx
100542b3:	add    ecx,edx
100542b5:	movzx  edx,BYTE PTR [esi+0x5]
100542b9:	add    edi,ecx
100542bb:	add    ecx,edx
100542bd:	movzx  edx,BYTE PTR [esi+0x6]
100542c1:	add    edi,ecx
100542c3:	add    ecx,edx
100542c5:	movzx  edx,BYTE PTR [esi+0x7]
100542c9:	add    edi,ecx
100542cb:	add    ecx,edx
100542cd:	movzx  edx,BYTE PTR [esi+0x8]
100542d1:	add    edi,ecx
100542d3:	add    ecx,edx
100542d5:	movzx  edx,BYTE PTR [esi+0x9]
100542d9:	add    edi,ecx
100542db:	add    ecx,edx
100542dd:	movzx  edx,BYTE PTR [esi+0xa]
100542e1:	add    edi,ecx
100542e3:	add    ecx,edx
100542e5:	movzx  edx,BYTE PTR [esi+0xb]
100542e9:	add    edi,ecx
100542eb:	add    ecx,edx
100542ed:	movzx  edx,BYTE PTR [esi+0xc]
100542f1:	add    edi,ecx
100542f3:	add    ecx,edx
100542f5:	movzx  edx,BYTE PTR [esi+0xd]
100542f9:	add    edi,ecx
100542fb:	add    ecx,edx
100542fd:	movzx  edx,BYTE PTR [esi+0xe]
10054301:	add    edi,ecx
10054303:	add    ecx,edx
10054305:	movzx  edx,BYTE PTR [esi+0xf]
10054309:	add    edi,ecx
1005430b:	add    ecx,edx
1005430d:	sub    ebx,0x10
10054310:	add    edi,ecx
10054312:	add    esi,0x10
10054315:	sub    eax,0x1
10054318:	jne    0x10054290
1005431e:	test   ebx,ebx
10054320:	je     0x10054333
10054322:	movzx  eax,BYTE PTR [esi]
10054325:	add    ecx,eax
10054327:	sub    ebx,0x1
1005432a:	add    esi,0x1
1005432d:	add    edi,ecx
1005432f:	test   ebx,ebx
10054331:	jne    0x10054322
10054333:	mov    eax,0x80078071
10054338:	mul    ecx
1005433a:	shr    edx,0xf
1005433d:	imul   edx,edx,0xffff000f
10054343:	add    ecx,edx
10054345:	mov    eax,0x80078071
1005434a:	mul    edi
1005434c:	shr    edx,0xf
1005434f:	imul   edx,edx,0xffff000f
10054355:	add    edi,edx
10054357:	mov    eax,edi
10054359:	pop    esi
1005435a:	shl    eax,0x10
1005435d:	pop    edi
1005435e:	or     eax,ecx
10054360:	pop    ebx
10054361:	ret    
10054362:	int3   
10054363:	int3   
10054364:	int3   
10054365:	int3   
10054366:	int3   
10054367:	int3   
10054368:	int3   
10054369:	int3   
1005436a:	int3   
1005436b:	int3   
1005436c:	int3   
1005436d:	int3   
1005436e:	int3   
1005436f:	int3   
10054370:	push   esi
10054371:	lea    eax,[edx+0x94]
10054377:	mov    ecx,0x11e
1005437c:	xor    esi,esi
1005437e:	mov    edi,edi
10054380:	mov    WORD PTR [eax],si
10054383:	add    eax,0x4
10054386:	sub    ecx,0x1
10054389:	jne    0x10054380
1005438b:	lea    eax,[edx+0x988]
10054391:	mov    ecx,0x1e
10054396:	mov    WORD PTR [eax],si
10054399:	add    eax,0x4
1005439c:	sub    ecx,0x1
1005439f:	jne    0x10054396
100543a1:	lea    eax,[edx+0xa7c]
100543a7:	mov    ecx,0x13
100543ac:	lea    esp,[esp+0x0]
100543b0:	mov    WORD PTR [eax],si
100543b3:	add    eax,0x4
100543b6:	sub    ecx,0x1
100543b9:	jne    0x100543b0
100543bb:	mov    DWORD PTR [edx+0x16ac],esi
100543c1:	mov    DWORD PTR [edx+0x16a8],esi
100543c7:	mov    DWORD PTR [edx+0x16b0],esi
100543cd:	mov    DWORD PTR [edx+0x16a0],esi
100543d3:	mov    WORD PTR [edx+0x494],0x1
100543dc:	pop    esi
100543dd:	ret    
100543de:	int3   
100543df:	int3   
100543e0:	push   ecx
100543e1:	mov    edx,DWORD PTR [eax+0x1450]
100543e7:	push   ebp
100543e8:	push   esi
100543e9:	mov    esi,DWORD PTR [esp+0x10]
100543ed:	mov    ebp,DWORD PTR [eax+esi*4+0xb5c]
100543f4:	lea    ecx,[esi+esi*1]
100543f7:	cmp    ecx,edx
100543f9:	mov    DWORD PTR [esp+0x8],ebp
100543fd:	jg     0x1005449b
10054403:	push   ebx
10054404:	jge    0x1005443a
10054406:	mov    esi,DWORD PTR [eax+ecx*4+0xb60]
1005440d:	mov    ebp,DWORD PTR [eax+ecx*4+0xb5c]
10054414:	movzx  edx,WORD PTR [edi+esi*4]
10054418:	movzx  ebx,WORD PTR [edi+ebp*4]
1005441c:	cmp    dx,bx
1005441f:	jb     0x10054433
10054421:	jne    0x10054436
10054423:	mov    dl,BYTE PTR [esi+eax*1+0x1458]
1005442a:	cmp    dl,BYTE PTR [eax+ebp*1+0x1458]
10054431:	ja     0x10054436
10054433:	add    ecx,0x1
10054436:	mov    ebp,DWORD PTR [esp+0xc]
1005443a:	mov    esi,DWORD PTR [eax+ecx*4+0xb5c]
10054441:	movzx  edx,WORD PTR [edi+ebp*4]
10054445:	movzx  ebx,WORD PTR [edi+esi*4]
10054449:	cmp    dx,bx
1005444c:	jb     0x1005447b
1005444e:	jne    0x10054460
10054450:	mov    dl,BYTE PTR [eax+ebp*1+0x1458]
10054457:	cmp    dl,BYTE PTR [esi+eax*1+0x1458]
1005445e:	jbe    0x1005448b
10054460:	mov    edx,DWORD PTR [esp+0x14]
10054464:	mov    DWORD PTR [eax+edx*4+0xb5c],esi
1005446b:	mov    edx,DWORD PTR [eax+0x1450]
10054471:	mov    DWORD PTR [esp+0x14],ecx
10054475:	add    ecx,ecx
10054477:	cmp    ecx,edx
10054479:	jle    0x10054404
1005447b:	mov    ecx,DWORD PTR [esp+0x14]
1005447f:	pop    ebx
10054480:	pop    esi
10054481:	mov    DWORD PTR [eax+ecx*4+0xb5c],ebp
10054488:	pop    ebp
10054489:	pop    ecx
1005448a:	ret    
1005448b:	mov    edx,DWORD PTR [esp+0x14]
1005448f:	pop    ebx
10054490:	pop    esi
10054491:	mov    DWORD PTR [eax+edx*4+0xb5c],ebp
10054498:	pop    ebp
10054499:	pop    ecx
1005449a:	ret    
1005449b:	mov    DWORD PTR [eax+esi*4+0xb5c],ebp
100544a2:	pop    esi
100544a3:	pop    ebp
100544a4:	pop    ecx
100544a5:	ret    
100544a6:	int3   
100544a7:	int3   
100544a8:	int3   
100544a9:	int3   
100544aa:	int3   
100544ab:	int3   
100544ac:	int3   
100544ad:	int3   
100544ae:	int3   
100544af:	int3   
100544b0:	sub    esp,0x20
100544b3:	mov    edx,DWORD PTR [ecx+0x4]
100544b6:	push   ebx
100544b7:	mov    ebx,DWORD PTR [ecx]
100544b9:	mov    ecx,DWORD PTR [ecx+0x8]
100544bc:	mov    DWORD PTR [esp+0x18],edx
100544c0:	mov    edx,DWORD PTR [ecx+0x4]
100544c3:	push   ebp
100544c4:	mov    ebp,DWORD PTR [ecx]
100544c6:	mov    DWORD PTR [esp+0x24],edx
100544ca:	mov    edx,DWORD PTR [ecx+0x8]
100544cd:	push   esi
100544ce:	mov    esi,DWORD PTR [ecx+0x10]
100544d1:	xor    ecx,ecx
100544d3:	mov    DWORD PTR [eax+0xb3c],ecx
100544d9:	mov    DWORD PTR [eax+0xb40],ecx
100544df:	mov    DWORD PTR [eax+0xb44],ecx
100544e5:	mov    DWORD PTR [eax+0xb48],ecx
100544eb:	mov    DWORD PTR [eax+0xb4c],ecx
100544f1:	mov    DWORD PTR [eax+0xb50],ecx
100544f7:	mov    DWORD PTR [eax+0xb54],ecx
100544fd:	mov    DWORD PTR [eax+0xb58],ecx
10054503:	mov    DWORD PTR [esp+0x24],edx
10054507:	mov    edx,DWORD PTR [eax+0x1454]
1005450d:	mov    edx,DWORD PTR [eax+edx*4+0xb5c]
10054514:	push   edi
10054515:	mov    WORD PTR [ebx+edx*4+0x2],cx
1005451a:	mov    edi,DWORD PTR [eax+0x1454]
10054520:	add    edi,0x1
10054523:	cmp    edi,0x23d
10054529:	mov    DWORD PTR [esp+0x1c],esi
1005452d:	mov    DWORD PTR [esp+0x18],ecx
10054531:	jge    0x100546bf
10054537:	lea    ecx,[eax+edi*4+0xb5c]
1005453e:	mov    DWORD PTR [esp+0x14],ecx
10054542:	mov    ecx,0x23d
10054547:	sub    ecx,edi
10054549:	add    edi,ecx
1005454b:	mov    DWORD PTR [esp+0x20],ecx
1005454f:	mov    DWORD PTR [esp+0x10],edi
10054553:	jmp    0x10054559
10054555:	mov    esi,DWORD PTR [esp+0x1c]
10054559:	mov    edx,DWORD PTR [esp+0x14]
1005455d:	mov    edx,DWORD PTR [edx]
1005455f:	movzx  ecx,WORD PTR [ebx+edx*4+0x2]
10054564:	movzx  ecx,WORD PTR [ebx+ecx*4+0x2]
10054569:	add    ecx,0x1
1005456c:	cmp    ecx,esi
1005456e:	jle    0x10054577
10054570:	add    DWORD PTR [esp+0x18],0x1
10054575:	mov    ecx,esi
10054577:	cmp    edx,DWORD PTR [esp+0x24]
1005457b:	mov    WORD PTR [ebx+edx*4+0x2],cx
10054580:	jg     0x100545ca
10054582:	mov    edi,DWORD PTR [esp+0x28]
10054586:	add    WORD PTR [eax+ecx*2+0xb3c],0x1
1005458f:	xor    esi,esi
10054591:	cmp    edx,edi
10054593:	jl     0x100545a0
10054595:	mov    esi,edx
10054597:	sub    esi,edi
10054599:	mov    edi,DWORD PTR [esp+0x2c]
1005459d:	mov    esi,DWORD PTR [edi+esi*4]
100545a0:	movzx  edi,WORD PTR [ebx+edx*4]
100545a4:	movzx  edi,di
100545a7:	add    ecx,esi
100545a9:	imul   ecx,edi
100545ac:	add    DWORD PTR [eax+0x16a8],ecx
100545b2:	test   ebp,ebp
100545b4:	je     0x100545c6
100545b6:	movzx  edx,WORD PTR [ebp+edx*4+0x2]
100545bb:	add    edx,esi
100545bd:	imul   edx,edi
100545c0:	add    DWORD PTR [eax+0x16ac],edx
100545c6:	mov    edi,DWORD PTR [esp+0x10]
100545ca:	add    DWORD PTR [esp+0x14],0x4
100545cf:	sub    DWORD PTR [esp+0x20],0x1
100545d4:	jne    0x10054555
100545da:	mov    ebp,DWORD PTR [esp+0x18]
100545de:	test   ebp,ebp
100545e0:	je     0x100546bf
100545e6:	mov    ecx,DWORD PTR [esp+0x1c]
100545ea:	lea    edx,[ecx-0x1]
100545ed:	mov    DWORD PTR [esp+0x2c],edx
100545f1:	lea    esi,[eax+ecx*2+0xb3c]
100545f8:	jmp    0x10054600
100545fa:	lea    ebx,[ebx+0x0]
10054600:	mov    ecx,DWORD PTR [esp+0x2c]
10054604:	cmp    WORD PTR [eax+ecx*2+0xb3c],0x0
1005460d:	lea    edx,[eax+ecx*2+0xb3c]
10054614:	jne    0x10054622
10054616:	sub    edx,0x2
10054619:	sub    ecx,0x1
1005461c:	cmp    WORD PTR [edx],0x0
10054620:	je     0x10054616
10054622:	add    WORD PTR [eax+ecx*2+0xb3c],0xffff
1005462c:	add    WORD PTR [eax+ecx*2+0xb3e],0x2
10054635:	add    WORD PTR [esi],0xffff
1005463a:	sub    ebp,0x2
1005463d:	test   ebp,ebp
1005463f:	jg     0x10054600
10054641:	mov    edx,DWORD PTR [esp+0x1c]
10054645:	test   edx,edx
10054647:	je     0x100546bf
10054649:	mov    DWORD PTR [esp+0x20],esi
1005464d:	lea    ecx,[ecx+0x0]
10054650:	movzx  esi,WORD PTR [esi]
10054653:	test   esi,esi
10054655:	mov    DWORD PTR [esp+0x1c],esi
10054659:	je     0x100546ad
1005465b:	lea    ebp,[eax+edi*4+0xb5c]
10054662:	mov    ecx,DWORD PTR [ebp-0x4]
10054665:	sub    DWORD PTR [esp+0x10],0x1
1005466a:	sub    ebp,0x4
1005466d:	cmp    ecx,DWORD PTR [esp+0x24]
10054671:	mov    DWORD PTR [esp+0x2c],ebp
10054675:	jg     0x100546a5
10054677:	movzx  edi,WORD PTR [ebx+ecx*4+0x2]
1005467c:	cmp    edi,edx
1005467e:	lea    esi,[ebx+ecx*4+0x2]
10054682:	je     0x1005469c
10054684:	movzx  ecx,WORD PTR [ebx+ecx*4]
10054688:	mov    ebp,edx
1005468a:	sub    ebp,edi
1005468c:	imul   ebp,ecx
1005468f:	add    DWORD PTR [eax+0x16a8],ebp
10054695:	mov    ebp,DWORD PTR [esp+0x2c]
10054699:	mov    WORD PTR [esi],dx
1005469c:	sub    DWORD PTR [esp+0x1c],0x1
100546a1:	mov    esi,DWORD PTR [esp+0x1c]
100546a5:	test   esi,esi
100546a7:	jne    0x10054662
100546a9:	mov    edi,DWORD PTR [esp+0x10]
100546ad:	mov    esi,DWORD PTR [esp+0x20]
100546b1:	sub    edx,0x1
100546b4:	sub    esi,0x2
100546b7:	test   edx,edx
100546b9:	mov    DWORD PTR [esp+0x20],esi
100546bd:	jne    0x10054650
100546bf:	pop    edi
100546c0:	pop    esi
100546c1:	pop    ebp
100546c2:	pop    ebx
100546c3:	add    esp,0x20
100546c6:	ret    
100546c7:	int3   
100546c8:	int3   
100546c9:	int3   
100546ca:	int3   
100546cb:	int3   
100546cc:	int3   
100546cd:	int3   
100546ce:	int3   
100546cf:	int3   
100546d0:	sub    esp,0xc
100546d3:	push   ebx
100546d4:	push   ebp
100546d5:	mov    ebp,DWORD PTR [esp+0x18]
100546d9:	push   esi
100546da:	push   edi
100546db:	movzx  edi,WORD PTR [eax+0x2]
100546df:	xor    edx,edx
100546e1:	test   edi,edi
100546e3:	mov    ebx,ecx
100546e5:	mov    DWORD PTR [esp+0x14],0xffffffff
100546ed:	mov    ecx,0x7
100546f2:	mov    esi,0x4
100546f7:	jne    0x10054703
100546f9:	mov    ecx,0x8a
100546fe:	mov    esi,0x3
10054703:	test   ebx,ebx
10054705:	mov    WORD PTR [eax+ebx*4+0x6],0xffff
1005470c:	jl     0x100547b5
10054712:	add    eax,0x6
10054715:	add    ebx,0x1
10054718:	mov    DWORD PTR [esp+0x18],ebx
1005471c:	mov    DWORD PTR [esp+0x10],eax
10054720:	mov    ebx,0x1
10054725:	mov    eax,edi
10054727:	mov    edi,DWORD PTR [esp+0x10]
1005472b:	movzx  edi,WORD PTR [edi]
1005472e:	add    edx,ebx
10054730:	cmp    edx,ecx
10054732:	jge    0x10054738
10054734:	cmp    eax,edi
10054736:	je     0x100547a6
10054738:	cmp    edx,esi
1005473a:	jge    0x10054746
1005473c:	add    WORD PTR [ebp+eax*4+0xa7c],dx
10054744:	jmp    0x10054776
10054746:	test   eax,eax
10054748:	je     0x10054761
1005474a:	cmp    eax,DWORD PTR [esp+0x14]
1005474e:	je     0x10054758
10054750:	add    WORD PTR [ebp+eax*4+0xa7c],bx
10054758:	add    WORD PTR [ebp+0xabc],bx
1005475f:	jmp    0x10054776
10054761:	cmp    edx,0xa
10054764:	jg     0x1005476f
10054766:	add    WORD PTR [ebp+0xac0],bx
1005476d:	jmp    0x10054776
1005476f:	add    WORD PTR [ebp+0xac4],bx
10054776:	xor    edx,edx
10054778:	test   edi,edi
1005477a:	mov    DWORD PTR [esp+0x14],eax
1005477e:	jne    0x1005478c
10054780:	mov    ecx,0x8a
10054785:	mov    esi,0x3
1005478a:	jmp    0x100547a6
1005478c:	cmp    eax,edi
1005478e:	jne    0x1005479c
10054790:	mov    ecx,0x6
10054795:	mov    esi,0x3
1005479a:	jmp    0x100547a6
1005479c:	mov    ecx,0x7
100547a1:	mov    esi,0x4
100547a6:	add    DWORD PTR [esp+0x10],0x4
100547ab:	sub    DWORD PTR [esp+0x18],ebx
100547af:	jne    0x10054725
100547b5:	pop    edi
100547b6:	pop    esi
100547b7:	pop    ebp
100547b8:	pop    ebx
100547b9:	add    esp,0xc
100547bc:	ret    
100547bd:	int3   
100547be:	int3   
100547bf:	int3   
100547c0:	sub    esp,0x18
100547c3:	push   ebx
100547c4:	push   ebp
100547c5:	movzx  ebp,WORD PTR [edx+0x2]
100547c9:	push   esi
100547ca:	xor    esi,esi
100547cc:	test   ebp,ebp
100547ce:	push   edi
100547cf:	mov    ebx,ecx
100547d1:	mov    DWORD PTR [esp+0x1c],0xffffffff
100547d9:	mov    DWORD PTR [esp+0x14],ebp
100547dd:	mov    ecx,0x7
100547e2:	mov    edi,0x4
100547e7:	jne    0x100547f3
100547e9:	mov    ecx,0x8a
100547ee:	mov    edi,0x3
100547f3:	test   ebx,ebx
100547f5:	jl     0x10054cc9
100547fb:	add    edx,0x6
100547fe:	add    ebx,0x1
10054801:	mov    DWORD PTR [esp+0x18],edx
10054805:	mov    DWORD PTR [esp+0x20],ebx
10054809:	mov    ebp,0x1
1005480e:	mov    edi,edi
10054810:	mov    ebx,DWORD PTR [esp+0x18]
10054814:	movzx  ebx,WORD PTR [ebx]
10054817:	mov    edx,DWORD PTR [esp+0x14]
1005481b:	add    esi,ebp
1005481d:	cmp    esi,ecx
1005481f:	mov    DWORD PTR [esp+0x24],edx
10054823:	mov    DWORD PTR [esp+0x14],ebx
10054827:	mov    DWORD PTR [esp+0x10],esi
1005482b:	jge    0x10054835
1005482d:	cmp    edx,ebx
1005482f:	je     0x10054cba
10054835:	cmp    esi,edi
10054837:	jge    0x100548df
1005483d:	lea    ecx,[ecx+0x0]
10054840:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
10054848:	mov    ecx,DWORD PTR [eax+0x16bc]
1005484e:	mov    ebx,0x10
10054853:	sub    ebx,edi
10054855:	cmp    ecx,ebx
10054857:	jle    0x100548b4
10054859:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
10054861:	mov    edx,esi
10054863:	shl    edx,cl
10054865:	mov    ecx,DWORD PTR [eax+0x8]
10054868:	or     WORD PTR [eax+0x16b8],dx
1005486f:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054876:	mov    edx,DWORD PTR [eax+0x14]
10054879:	mov    BYTE PTR [ecx+edx*1],bl
1005487c:	add    DWORD PTR [eax+0x14],ebp
1005487f:	mov    ecx,DWORD PTR [eax+0x14]
10054882:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054889:	mov    edx,DWORD PTR [eax+0x8]
1005488c:	mov    BYTE PTR [ecx+edx*1],bl
1005488f:	mov    edx,DWORD PTR [eax+0x16bc]
10054895:	add    DWORD PTR [eax+0x14],ebp
10054898:	mov    cl,0x10
1005489a:	sub    cl,dl
1005489c:	shr    si,cl
1005489f:	lea    ecx,[edx+edi*1-0x10]
100548a3:	mov    edx,DWORD PTR [esp+0x24]
100548a7:	mov    WORD PTR [eax+0x16b8],si
100548ae:	mov    esi,DWORD PTR [esp+0x10]
100548b2:	jmp    0x100548c8
100548b4:	mov    bx,WORD PTR [eax+edx*4+0xa7c]
100548bc:	shl    bx,cl
100548bf:	or     WORD PTR [eax+0x16b8],bx
100548c6:	add    ecx,edi
100548c8:	sub    esi,ebp
100548ca:	mov    DWORD PTR [eax+0x16bc],ecx
100548d0:	mov    DWORD PTR [esp+0x10],esi
100548d4:	jne    0x10054840
100548da:	jmp    0x10054c86
100548df:	test   edx,edx
100548e1:	je     0x10054a8c
100548e7:	cmp    edx,DWORD PTR [esp+0x1c]
100548eb:	je     0x1005498d
100548f1:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
100548f9:	mov    ecx,DWORD PTR [eax+0x16bc]
100548ff:	mov    ebx,0x10
10054904:	sub    ebx,edi
10054906:	cmp    ecx,ebx
10054908:	mov    DWORD PTR [esp+0x1c],edi
1005490c:	jle    0x10054969
1005490e:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
10054916:	mov    edi,esi
10054918:	shl    edi,cl
1005491a:	mov    ecx,DWORD PTR [eax+0x8]
1005491d:	or     WORD PTR [eax+0x16b8],di
10054924:	movzx  ebx,BYTE PTR [eax+0x16b8]
1005492b:	mov    edi,DWORD PTR [eax+0x14]
1005492e:	mov    BYTE PTR [ecx+edi*1],bl
10054931:	add    DWORD PTR [eax+0x14],ebp
10054934:	movzx  ebx,BYTE PTR [eax+0x16b9]
1005493b:	mov    ecx,DWORD PTR [eax+0x8]
1005493e:	mov    edi,DWORD PTR [eax+0x14]
10054941:	mov    BYTE PTR [edi+ecx*1],bl
10054944:	mov    ebx,DWORD PTR [eax+0x16bc]
1005494a:	add    DWORD PTR [eax+0x14],ebp
1005494d:	mov    cl,0x10
1005494f:	sub    cl,bl
10054951:	shr    si,cl
10054954:	mov    ecx,DWORD PTR [esp+0x1c]
10054958:	lea    ecx,[ebx+ecx*1-0x10]
1005495c:	mov    WORD PTR [eax+0x16b8],si
10054963:	mov    esi,DWORD PTR [esp+0x10]
10054967:	jmp    0x10054981
10054969:	mov    di,WORD PTR [eax+edx*4+0xa7c]
10054971:	shl    di,cl
10054974:	or     WORD PTR [eax+0x16b8],di
1005497b:	mov    edi,DWORD PTR [esp+0x1c]
1005497f:	add    ecx,edi
10054981:	sub    esi,ebp
10054983:	mov    DWORD PTR [eax+0x16bc],ecx
10054989:	mov    DWORD PTR [esp+0x10],esi
1005498d:	movzx  edi,WORD PTR [eax+0xabe]
10054994:	mov    ecx,DWORD PTR [eax+0x16bc]
1005499a:	mov    ebx,0x10
1005499f:	sub    ebx,edi
100549a1:	cmp    ecx,ebx
100549a3:	mov    DWORD PTR [esp+0x1c],edi
100549a7:	jle    0x10054a03
100549a9:	movzx  esi,WORD PTR [eax+0xabc]
100549b0:	mov    edi,esi
100549b2:	shl    edi,cl
100549b4:	mov    ecx,DWORD PTR [eax+0x8]
100549b7:	or     WORD PTR [eax+0x16b8],di
100549be:	movzx  ebx,BYTE PTR [eax+0x16b8]
100549c5:	mov    edi,DWORD PTR [eax+0x14]
100549c8:	mov    BYTE PTR [ecx+edi*1],bl
100549cb:	add    DWORD PTR [eax+0x14],ebp
100549ce:	movzx  ebx,BYTE PTR [eax+0x16b9]
100549d5:	mov    ecx,DWORD PTR [eax+0x8]
100549d8:	mov    edi,DWORD PTR [eax+0x14]
100549db:	mov    BYTE PTR [edi+ecx*1],bl
100549de:	mov    ebx,DWORD PTR [eax+0x16bc]
100549e4:	add    DWORD PTR [eax+0x14],ebp
100549e7:	mov    cl,0x10
100549e9:	sub    cl,bl
100549eb:	shr    si,cl
100549ee:	mov    ecx,DWORD PTR [esp+0x1c]
100549f2:	lea    ecx,[ebx+ecx*1-0x10]
100549f6:	mov    WORD PTR [eax+0x16b8],si
100549fd:	mov    esi,DWORD PTR [esp+0x10]
10054a01:	jmp    0x10054a1a
10054a03:	mov    di,WORD PTR [eax+0xabc]
10054a0a:	shl    di,cl
10054a0d:	or     WORD PTR [eax+0x16b8],di
10054a14:	mov    edi,DWORD PTR [esp+0x1c]
10054a18:	add    ecx,edi
10054a1a:	add    esi,0xfffffffd
10054a1d:	cmp    ecx,0xe
10054a20:	mov    DWORD PTR [eax+0x16bc],ecx
10054a26:	jle    0x10054a7b
10054a28:	mov    edi,esi
10054a2a:	shl    edi,cl
10054a2c:	mov    ecx,DWORD PTR [eax+0x8]
10054a2f:	or     WORD PTR [eax+0x16b8],di
10054a36:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054a3d:	mov    edi,DWORD PTR [eax+0x14]
10054a40:	mov    BYTE PTR [ecx+edi*1],bl
10054a43:	add    DWORD PTR [eax+0x14],ebp
10054a46:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054a4d:	mov    edi,DWORD PTR [eax+0x14]
10054a50:	mov    ecx,DWORD PTR [eax+0x8]
10054a53:	mov    BYTE PTR [edi+ecx*1],bl
10054a56:	mov    ebx,DWORD PTR [eax+0x16bc]
10054a5c:	add    DWORD PTR [eax+0x14],ebp
10054a5f:	mov    cl,0x10
10054a61:	sub    cl,bl
10054a63:	shr    si,cl
10054a66:	add    ebx,0xfffffff2
10054a69:	mov    DWORD PTR [eax+0x16bc],ebx
10054a6f:	mov    WORD PTR [eax+0x16b8],si
10054a76:	jmp    0x10054c86
10054a7b:	shl    esi,cl
10054a7d:	or     WORD PTR [eax+0x16b8],si
10054a84:	add    ecx,0x2
10054a87:	jmp    0x10054c80
10054a8c:	cmp    esi,0xa
10054a8f:	mov    ecx,DWORD PTR [eax+0x16bc]
10054a95:	mov    ebx,0x10
10054a9a:	jg     0x10054b94
10054aa0:	movzx  edi,WORD PTR [eax+0xac2]
10054aa7:	sub    ebx,edi
10054aa9:	cmp    ecx,ebx
10054aab:	mov    DWORD PTR [esp+0x1c],edi
10054aaf:	jle    0x10054b0b
10054ab1:	movzx  esi,WORD PTR [eax+0xac0]
10054ab8:	mov    edi,esi
10054aba:	shl    edi,cl
10054abc:	mov    ecx,DWORD PTR [eax+0x8]
10054abf:	or     WORD PTR [eax+0x16b8],di
10054ac6:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054acd:	mov    edi,DWORD PTR [eax+0x14]
10054ad0:	mov    BYTE PTR [ecx+edi*1],bl
10054ad3:	add    DWORD PTR [eax+0x14],ebp
10054ad6:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054add:	mov    ecx,DWORD PTR [eax+0x8]
10054ae0:	mov    edi,DWORD PTR [eax+0x14]
10054ae3:	mov    BYTE PTR [edi+ecx*1],bl
10054ae6:	mov    ebx,DWORD PTR [eax+0x16bc]
10054aec:	add    DWORD PTR [eax+0x14],ebp
10054aef:	mov    cl,0x10
10054af1:	sub    cl,bl
10054af3:	shr    si,cl
10054af6:	mov    ecx,DWORD PTR [esp+0x1c]
10054afa:	lea    ecx,[ebx+ecx*1-0x10]
10054afe:	mov    WORD PTR [eax+0x16b8],si
10054b05:	mov    esi,DWORD PTR [esp+0x10]
10054b09:	jmp    0x10054b22
10054b0b:	mov    di,WORD PTR [eax+0xac0]
10054b12:	shl    di,cl
10054b15:	or     WORD PTR [eax+0x16b8],di
10054b1c:	mov    edi,DWORD PTR [esp+0x1c]
10054b20:	add    ecx,edi
10054b22:	add    esi,0xfffffffd
10054b25:	cmp    ecx,0xd
10054b28:	mov    DWORD PTR [eax+0x16bc],ecx
10054b2e:	jle    0x10054b83
10054b30:	mov    edi,esi
10054b32:	shl    edi,cl
10054b34:	mov    ecx,DWORD PTR [eax+0x8]
10054b37:	or     WORD PTR [eax+0x16b8],di
10054b3e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054b45:	mov    edi,DWORD PTR [eax+0x14]
10054b48:	mov    BYTE PTR [ecx+edi*1],bl
10054b4b:	add    DWORD PTR [eax+0x14],ebp
10054b4e:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054b55:	mov    edi,DWORD PTR [eax+0x14]
10054b58:	mov    ecx,DWORD PTR [eax+0x8]
10054b5b:	mov    BYTE PTR [edi+ecx*1],bl
10054b5e:	mov    ebx,DWORD PTR [eax+0x16bc]
10054b64:	add    DWORD PTR [eax+0x14],ebp
10054b67:	mov    cl,0x10
10054b69:	sub    cl,bl
10054b6b:	shr    si,cl
10054b6e:	add    ebx,0xfffffff3
10054b71:	mov    DWORD PTR [eax+0x16bc],ebx
10054b77:	mov    WORD PTR [eax+0x16b8],si
10054b7e:	jmp    0x10054c86
10054b83:	shl    esi,cl
10054b85:	or     WORD PTR [eax+0x16b8],si
10054b8c:	add    ecx,0x3
10054b8f:	jmp    0x10054c80
10054b94:	movzx  edi,WORD PTR [eax+0xac6]
10054b9b:	sub    ebx,edi
10054b9d:	cmp    ecx,ebx
10054b9f:	mov    DWORD PTR [esp+0x1c],edi
10054ba3:	jle    0x10054bff
10054ba5:	movzx  esi,WORD PTR [eax+0xac4]
10054bac:	mov    edi,esi
10054bae:	shl    edi,cl
10054bb0:	mov    ecx,DWORD PTR [eax+0x8]
10054bb3:	or     WORD PTR [eax+0x16b8],di
10054bba:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054bc1:	mov    edi,DWORD PTR [eax+0x14]
10054bc4:	mov    BYTE PTR [ecx+edi*1],bl
10054bc7:	add    DWORD PTR [eax+0x14],ebp
10054bca:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054bd1:	mov    ecx,DWORD PTR [eax+0x8]
10054bd4:	mov    edi,DWORD PTR [eax+0x14]
10054bd7:	mov    BYTE PTR [edi+ecx*1],bl
10054bda:	mov    ebx,DWORD PTR [eax+0x16bc]
10054be0:	add    DWORD PTR [eax+0x14],ebp
10054be3:	mov    cl,0x10
10054be5:	sub    cl,bl
10054be7:	shr    si,cl
10054bea:	mov    ecx,DWORD PTR [esp+0x1c]
10054bee:	lea    ecx,[ebx+ecx*1-0x10]
10054bf2:	mov    WORD PTR [eax+0x16b8],si
10054bf9:	mov    esi,DWORD PTR [esp+0x10]
10054bfd:	jmp    0x10054c16
10054bff:	mov    di,WORD PTR [eax+0xac4]
10054c06:	shl    di,cl
10054c09:	or     WORD PTR [eax+0x16b8],di
10054c10:	mov    edi,DWORD PTR [esp+0x1c]
10054c14:	add    ecx,edi
10054c16:	add    esi,0xfffffff5
10054c19:	cmp    ecx,0x9
10054c1c:	mov    DWORD PTR [eax+0x16bc],ecx
10054c22:	jle    0x10054c74
10054c24:	mov    edi,esi
10054c26:	shl    edi,cl
10054c28:	mov    ecx,DWORD PTR [eax+0x8]
10054c2b:	or     WORD PTR [eax+0x16b8],di
10054c32:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054c39:	mov    edi,DWORD PTR [eax+0x14]
10054c3c:	mov    BYTE PTR [ecx+edi*1],bl
10054c3f:	add    DWORD PTR [eax+0x14],ebp
10054c42:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054c49:	mov    edi,DWORD PTR [eax+0x14]
10054c4c:	mov    ecx,DWORD PTR [eax+0x8]
10054c4f:	mov    BYTE PTR [edi+ecx*1],bl
10054c52:	mov    ebx,DWORD PTR [eax+0x16bc]
10054c58:	add    DWORD PTR [eax+0x14],ebp
10054c5b:	mov    cl,0x10
10054c5d:	sub    cl,bl
10054c5f:	shr    si,cl
10054c62:	add    ebx,0xfffffff7
10054c65:	mov    DWORD PTR [eax+0x16bc],ebx
10054c6b:	mov    WORD PTR [eax+0x16b8],si
10054c72:	jmp    0x10054c86
10054c74:	shl    esi,cl
10054c76:	or     WORD PTR [eax+0x16b8],si
10054c7d:	add    ecx,0x7
10054c80:	mov    DWORD PTR [eax+0x16bc],ecx
10054c86:	mov    ecx,DWORD PTR [esp+0x14]
10054c8a:	xor    esi,esi
10054c8c:	test   ecx,ecx
10054c8e:	mov    DWORD PTR [esp+0x1c],edx
10054c92:	jne    0x10054ca0
10054c94:	mov    ecx,0x8a
10054c99:	mov    edi,0x3
10054c9e:	jmp    0x10054cba
10054ca0:	cmp    edx,ecx
10054ca2:	jne    0x10054cb0
10054ca4:	mov    ecx,0x6
10054ca9:	mov    edi,0x3
10054cae:	jmp    0x10054cba
10054cb0:	mov    ecx,0x7
10054cb5:	mov    edi,0x4
10054cba:	add    DWORD PTR [esp+0x18],0x4
10054cbf:	sub    DWORD PTR [esp+0x20],ebp
10054cc3:	jne    0x10054810
10054cc9:	pop    edi
10054cca:	pop    esi
10054ccb:	pop    ebp
10054ccc:	pop    ebx
10054ccd:	add    esp,0x18
10054cd0:	ret    
10054cd1:	int3   
10054cd2:	int3   
10054cd3:	int3   
10054cd4:	int3   
10054cd5:	int3   
10054cd6:	int3   
10054cd7:	int3   
10054cd8:	int3   
10054cd9:	int3   
10054cda:	int3   
10054cdb:	int3   
10054cdc:	int3   
10054cdd:	int3   
10054cde:	int3   
10054cdf:	int3   
10054ce0:	push   ecx
10054ce1:	mov    ecx,DWORD PTR [eax+0x16bc]
10054ce7:	cmp    ecx,0xb
10054cea:	push   ebx
10054ceb:	mov    ebx,DWORD PTR [esp+0x14]
10054cef:	push   ebp
10054cf0:	push   esi
10054cf1:	push   edi
10054cf2:	mov    ebp,0x1
10054cf7:	jle    0x10054d57
10054cf9:	mov    esi,DWORD PTR [esp+0x18]
10054cfd:	add    esi,0xfffffeff
10054d03:	mov    edx,esi
10054d05:	shl    edx,cl
10054d07:	mov    ecx,DWORD PTR [eax+0x14]
10054d0a:	or     WORD PTR [eax+0x16b8],dx
10054d11:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054d18:	mov    edx,DWORD PTR [eax+0x8]
10054d1b:	mov    BYTE PTR [ecx+edx*1],bl
10054d1e:	add    DWORD PTR [eax+0x14],ebp
10054d21:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054d28:	mov    ecx,DWORD PTR [eax+0x14]
10054d2b:	mov    edx,DWORD PTR [eax+0x8]
10054d2e:	mov    BYTE PTR [ecx+edx*1],bl
10054d31:	mov    edx,DWORD PTR [eax+0x16bc]
10054d37:	add    DWORD PTR [eax+0x14],ebp
10054d3a:	mov    ebx,DWORD PTR [esp+0x20]
10054d3e:	mov    cl,0x10
10054d40:	sub    cl,dl
10054d42:	shr    si,cl
10054d45:	add    edx,0xfffffff5
10054d48:	mov    DWORD PTR [eax+0x16bc],edx
10054d4e:	mov    WORD PTR [eax+0x16b8],si
10054d55:	jmp    0x10054d73
10054d57:	mov    edx,DWORD PTR [esp+0x18]
10054d5b:	add    edx,0xfffffeff
10054d61:	shl    edx,cl
10054d63:	or     WORD PTR [eax+0x16b8],dx
10054d6a:	add    ecx,0x5
10054d6d:	mov    DWORD PTR [eax+0x16bc],ecx
10054d73:	mov    ecx,DWORD PTR [eax+0x16bc]
10054d79:	cmp    ecx,0xb
10054d7c:	jle    0x10054ddd
10054d7e:	mov    esi,DWORD PTR [esp+0x1c]
10054d82:	add    esi,0xffffffff
10054d85:	mov    edx,esi
10054d87:	shl    edx,cl
10054d89:	mov    ecx,DWORD PTR [eax+0x14]
10054d8c:	mov    DWORD PTR [esp+0x10],ebx
10054d90:	or     WORD PTR [eax+0x16b8],dx
10054d97:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054d9e:	mov    edx,DWORD PTR [eax+0x8]
10054da1:	mov    BYTE PTR [ecx+edx*1],bl
10054da4:	add    DWORD PTR [eax+0x14],ebp
10054da7:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054dae:	mov    ecx,DWORD PTR [eax+0x14]
10054db1:	mov    edx,DWORD PTR [eax+0x8]
10054db4:	mov    BYTE PTR [ecx+edx*1],bl
10054db7:	mov    edx,DWORD PTR [eax+0x16bc]
10054dbd:	add    DWORD PTR [eax+0x14],ebp
10054dc0:	mov    ebx,DWORD PTR [esp+0x10]
10054dc4:	mov    cl,0x10
10054dc6:	sub    cl,dl
10054dc8:	shr    si,cl
10054dcb:	add    edx,0xfffffff5
10054dce:	mov    DWORD PTR [eax+0x16bc],edx
10054dd4:	mov    WORD PTR [eax+0x16b8],si
10054ddb:	jmp    0x10054df6
10054ddd:	mov    edx,DWORD PTR [esp+0x1c]
10054de1:	add    edx,0xffffffff
10054de4:	shl    edx,cl
10054de6:	or     WORD PTR [eax+0x16b8],dx
10054ded:	add    ecx,0x5
10054df0:	mov    DWORD PTR [eax+0x16bc],ecx
10054df6:	mov    ecx,DWORD PTR [eax+0x16bc]
10054dfc:	cmp    ecx,0xc
10054dff:	jle    0x10054e5c
10054e01:	lea    esi,[ebx-0x4]
10054e04:	mov    edx,esi
10054e06:	shl    edx,cl
10054e08:	mov    ecx,DWORD PTR [eax+0x14]
10054e0b:	mov    DWORD PTR [esp+0x10],ebx
10054e0f:	or     WORD PTR [eax+0x16b8],dx
10054e16:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054e1d:	mov    edx,DWORD PTR [eax+0x8]
10054e20:	mov    BYTE PTR [ecx+edx*1],bl
10054e23:	add    DWORD PTR [eax+0x14],ebp
10054e26:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054e2d:	mov    ecx,DWORD PTR [eax+0x14]
10054e30:	mov    edx,DWORD PTR [eax+0x8]
10054e33:	mov    BYTE PTR [ecx+edx*1],bl
10054e36:	mov    edx,DWORD PTR [eax+0x16bc]
10054e3c:	add    DWORD PTR [eax+0x14],ebp
10054e3f:	mov    ebx,DWORD PTR [esp+0x10]
10054e43:	mov    cl,0x10
10054e45:	sub    cl,dl
10054e47:	shr    si,cl
10054e4a:	add    edx,0xfffffff4
10054e4d:	mov    DWORD PTR [eax+0x16bc],edx
10054e53:	mov    WORD PTR [eax+0x16b8],si
10054e5a:	jmp    0x10054e71
10054e5c:	lea    edx,[ebx-0x4]
10054e5f:	shl    edx,cl
10054e61:	or     WORD PTR [eax+0x16b8],dx
10054e68:	add    ecx,0x4
10054e6b:	mov    DWORD PTR [eax+0x16bc],ecx
10054e71:	xor    edi,edi
10054e73:	test   ebx,ebx
10054e75:	jle    0x10054f13
10054e7b:	jmp    0x10054e80
10054e7d:	lea    ecx,[ecx+0x0]
10054e80:	mov    ecx,DWORD PTR [eax+0x16bc]
10054e86:	cmp    ecx,0xd
10054e89:	movzx  edx,BYTE PTR [edi+0x10068abc]
10054e90:	jle    0x10054eee
10054e92:	movzx  esi,WORD PTR [eax+edx*4+0xa7e]
10054e9a:	mov    edx,esi
10054e9c:	shl    edx,cl
10054e9e:	mov    ecx,DWORD PTR [eax+0x14]
10054ea1:	or     WORD PTR [eax+0x16b8],dx
10054ea8:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054eaf:	mov    edx,DWORD PTR [eax+0x8]
10054eb2:	mov    BYTE PTR [ecx+edx*1],bl
10054eb5:	add    DWORD PTR [eax+0x14],ebp
10054eb8:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054ebf:	mov    ecx,DWORD PTR [eax+0x14]
10054ec2:	mov    edx,DWORD PTR [eax+0x8]
10054ec5:	mov    BYTE PTR [ecx+edx*1],bl
10054ec8:	mov    edx,DWORD PTR [eax+0x16bc]
10054ece:	add    DWORD PTR [eax+0x14],ebp
10054ed1:	mov    ebx,DWORD PTR [esp+0x20]
10054ed5:	mov    cl,0x10
10054ed7:	sub    cl,dl
10054ed9:	shr    si,cl
10054edc:	add    edx,0xfffffff3
10054edf:	mov    DWORD PTR [eax+0x16bc],edx
10054ee5:	mov    WORD PTR [eax+0x16b8],si
10054eec:	jmp    0x10054f09
10054eee:	mov    dx,WORD PTR [eax+edx*4+0xa7e]
10054ef6:	shl    dx,cl
10054ef9:	or     WORD PTR [eax+0x16b8],dx
10054f00:	add    ecx,0x3
10054f03:	mov    DWORD PTR [eax+0x16bc],ecx
10054f09:	add    edi,ebp
10054f0b:	cmp    edi,ebx
10054f0d:	jl     0x10054e80
10054f13:	mov    ecx,DWORD PTR [esp+0x18]
10054f17:	add    ecx,0xffffffff
10054f1a:	lea    edx,[eax+0x94]
10054f20:	call   0x100547c0
10054f25:	mov    ecx,DWORD PTR [esp+0x1c]
10054f29:	pop    edi
10054f2a:	pop    esi
10054f2b:	pop    ebp
10054f2c:	add    ecx,0xffffffff
10054f2f:	lea    edx,[eax+0x988]
10054f35:	pop    ebx
10054f36:	add    esp,0x4
10054f39:	jmp    0x100547c0
10054f3e:	int3   
10054f3f:	int3   
10054f40:	sub    esp,0xc
10054f43:	push   ebx
10054f44:	mov    ebx,DWORD PTR [esp+0x14]
10054f48:	push   ebp
10054f49:	xor    ecx,ecx
10054f4b:	cmp    DWORD PTR [eax+0x16a0],ecx
10054f51:	push   esi
10054f52:	push   edi
10054f53:	je     0x10055292
10054f59:	lea    esp,[esp+0x0]
10054f60:	mov    edx,DWORD PTR [eax+0x16a4]
10054f66:	movzx  ebp,WORD PTR [edx+ecx*2]
10054f6a:	mov    edx,DWORD PTR [eax+0x1698]
10054f70:	movzx  esi,BYTE PTR [ecx+edx*1]
10054f74:	add    ecx,0x1
10054f77:	test   ebp,ebp
10054f79:	mov    DWORD PTR [esp+0x18],ecx
10054f7d:	mov    ecx,DWORD PTR [eax+0x16bc]
10054f83:	jne    0x1005500a
10054f89:	movzx  edi,WORD PTR [ebx+esi*4+0x2]
10054f8e:	mov    edx,0x10
10054f93:	sub    edx,edi
10054f95:	cmp    ecx,edx
10054f97:	jle    0x10054ff5
10054f99:	movzx  esi,WORD PTR [ebx+esi*4]
10054f9d:	mov    edx,esi
10054f9f:	shl    edx,cl
10054fa1:	mov    ecx,DWORD PTR [eax+0x8]
10054fa4:	mov    DWORD PTR [esp+0x10],ebx
10054fa8:	or     WORD PTR [eax+0x16b8],dx
10054faf:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054fb6:	mov    edx,DWORD PTR [eax+0x14]
10054fb9:	mov    BYTE PTR [ecx+edx*1],bl
10054fbc:	add    DWORD PTR [eax+0x14],0x1
10054fc0:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054fc7:	mov    ecx,DWORD PTR [eax+0x14]
10054fca:	mov    edx,DWORD PTR [eax+0x8]
10054fcd:	mov    BYTE PTR [ecx+edx*1],bl
10054fd0:	mov    edx,DWORD PTR [eax+0x16bc]
10054fd6:	add    DWORD PTR [eax+0x14],0x1
10054fda:	mov    ebx,DWORD PTR [esp+0x10]
10054fde:	mov    cl,0x10
10054fe0:	sub    cl,dl
10054fe2:	shr    si,cl
10054fe5:	lea    ecx,[edx+edi*1-0x10]
10054fe9:	mov    WORD PTR [eax+0x16b8],si
10054ff0:	jmp    0x1005527c
10054ff5:	mov    dx,WORD PTR [ebx+esi*4]
10054ff9:	shl    dx,cl
10054ffc:	or     WORD PTR [eax+0x16b8],dx
10055003:	add    ecx,edi
10055005:	jmp    0x1005527c
1005500a:	movzx  edx,BYTE PTR [esi+0x10069290]
10055011:	movzx  edi,WORD PTR [ebx+edx*4+0x406]
10055019:	mov    ebx,0x10
1005501e:	sub    ebx,edi
10055020:	cmp    ecx,ebx
10055022:	mov    DWORD PTR [esp+0x10],edi
10055026:	mov    edi,DWORD PTR [esp+0x20]
1005502a:	mov    DWORD PTR [esp+0x14],edx
1005502e:	jle    0x10055093
10055030:	movzx  edi,WORD PTR [edi+edx*4+0x404]
10055038:	mov    edx,edi
1005503a:	shl    edx,cl
1005503c:	mov    ecx,DWORD PTR [eax+0x8]
1005503f:	or     WORD PTR [eax+0x16b8],dx
10055046:	movzx  ebx,BYTE PTR [eax+0x16b8]
1005504d:	mov    edx,DWORD PTR [eax+0x14]
10055050:	mov    BYTE PTR [ecx+edx*1],bl
10055053:	add    DWORD PTR [eax+0x14],0x1
10055057:	mov    ecx,DWORD PTR [eax+0x14]
1005505a:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055061:	mov    edx,DWORD PTR [eax+0x8]
10055064:	mov    BYTE PTR [ecx+edx*1],bl
10055067:	mov    edx,DWORD PTR [eax+0x16bc]
1005506d:	add    DWORD PTR [eax+0x14],0x1
10055071:	mov    cl,0x10
10055073:	sub    cl,dl
10055075:	shr    di,cl
10055078:	mov    ecx,DWORD PTR [esp+0x10]
1005507c:	lea    edx,[edx+ecx*1-0x10]
10055080:	mov    DWORD PTR [eax+0x16bc],edx
10055086:	mov    edx,DWORD PTR [esp+0x14]
1005508a:	mov    WORD PTR [eax+0x16b8],di
10055091:	jmp    0x100550b1
10055093:	mov    di,WORD PTR [edi+edx*4+0x404]
1005509b:	shl    di,cl
1005509e:	or     WORD PTR [eax+0x16b8],di
100550a5:	mov    edi,DWORD PTR [esp+0x10]
100550a9:	add    ecx,edi
100550ab:	mov    DWORD PTR [eax+0x16bc],ecx
100550b1:	mov    edi,DWORD PTR [edx*4+0x10068a48]
100550b8:	test   edi,edi
100550ba:	mov    ebx,DWORD PTR [esp+0x20]
100550be:	je     0x1005513a
100550c0:	sub    esi,DWORD PTR [edx*4+0x10069390]
100550c7:	mov    ecx,DWORD PTR [eax+0x16bc]
100550cd:	mov    edx,0x10
100550d2:	sub    edx,edi
100550d4:	cmp    ecx,edx
100550d6:	jle    0x10055129
100550d8:	mov    edx,esi
100550da:	shl    edx,cl
100550dc:	mov    ecx,DWORD PTR [eax+0x8]
100550df:	or     WORD PTR [eax+0x16b8],dx
100550e6:	movzx  ebx,BYTE PTR [eax+0x16b8]
100550ed:	mov    edx,DWORD PTR [eax+0x14]
100550f0:	mov    BYTE PTR [ecx+edx*1],bl
100550f3:	add    DWORD PTR [eax+0x14],0x1
100550f7:	movzx  ebx,BYTE PTR [eax+0x16b9]
100550fe:	mov    ecx,DWORD PTR [eax+0x14]
10055101:	mov    edx,DWORD PTR [eax+0x8]
10055104:	mov    BYTE PTR [ecx+edx*1],bl
10055107:	mov    edx,DWORD PTR [eax+0x16bc]
1005510d:	add    DWORD PTR [eax+0x14],0x1
10055111:	mov    ebx,DWORD PTR [esp+0x20]
10055115:	mov    cl,0x10
10055117:	sub    cl,dl
10055119:	shr    si,cl
1005511c:	lea    ecx,[edx+edi*1-0x10]
10055120:	mov    WORD PTR [eax+0x16b8],si
10055127:	jmp    0x10055134
10055129:	shl    esi,cl
1005512b:	or     WORD PTR [eax+0x16b8],si
10055132:	add    ecx,edi
10055134:	mov    DWORD PTR [eax+0x16bc],ecx
1005513a:	sub    ebp,0x1
1005513d:	cmp    ebp,0x100
10055143:	jae    0x1005514e
10055145:	movzx  edi,BYTE PTR [ebp+0x10069090]
1005514c:	jmp    0x1005515a
1005514e:	mov    edx,ebp
10055150:	shr    edx,0x7
10055153:	movzx  edi,BYTE PTR [edx+0x10069190]
1005515a:	mov    ecx,DWORD PTR [esp+0x24]
1005515e:	movzx  edx,WORD PTR [ecx+edi*4+0x2]
10055163:	mov    ecx,DWORD PTR [eax+0x16bc]
10055169:	mov    esi,0x10
1005516e:	sub    esi,edx
10055170:	cmp    ecx,esi
10055172:	mov    DWORD PTR [esp+0x14],edx
10055176:	jle    0x100551db
10055178:	mov    edx,DWORD PTR [esp+0x24]
1005517c:	movzx  esi,WORD PTR [edx+edi*4]
10055180:	mov    edx,esi
10055182:	shl    edx,cl
10055184:	mov    ecx,DWORD PTR [eax+0x8]
10055187:	or     WORD PTR [eax+0x16b8],dx
1005518e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055195:	mov    edx,DWORD PTR [eax+0x14]
10055198:	mov    BYTE PTR [ecx+edx*1],bl
1005519b:	add    DWORD PTR [eax+0x14],0x1
1005519f:	movzx  ebx,BYTE PTR [eax+0x16b9]
100551a6:	mov    ecx,DWORD PTR [eax+0x14]
100551a9:	mov    edx,DWORD PTR [eax+0x8]
100551ac:	mov    BYTE PTR [ecx+edx*1],bl
100551af:	mov    edx,DWORD PTR [eax+0x16bc]
100551b5:	add    DWORD PTR [eax+0x14],0x1
100551b9:	mov    ebx,DWORD PTR [esp+0x20]
100551bd:	mov    cl,0x10
100551bf:	sub    cl,dl
100551c1:	shr    si,cl
100551c4:	mov    ecx,DWORD PTR [esp+0x14]
100551c8:	lea    edx,[edx+ecx*1-0x10]
100551cc:	mov    DWORD PTR [eax+0x16bc],edx
100551d2:	mov    WORD PTR [eax+0x16b8],si
100551d9:	jmp    0x100551f5
100551db:	mov    esi,DWORD PTR [esp+0x24]
100551df:	mov    si,WORD PTR [esi+edi*4]
100551e3:	shl    si,cl
100551e6:	or     WORD PTR [eax+0x16b8],si
100551ed:	add    ecx,edx
100551ef:	mov    DWORD PTR [eax+0x16bc],ecx
100551f5:	mov    esi,DWORD PTR [edi*4+0x10068ad0]
100551fc:	test   esi,esi
100551fe:	je     0x10055282
10055204:	mov    ecx,DWORD PTR [eax+0x16bc]
1005520a:	sub    ebp,DWORD PTR [edi*4+0x10069408]
10055211:	mov    edx,0x10
10055216:	sub    edx,esi
10055218:	cmp    ecx,edx
1005521a:	jle    0x10055271
1005521c:	mov    edx,ebp
1005521e:	shl    edx,cl
10055220:	mov    ecx,DWORD PTR [eax+0x8]
10055223:	mov    DWORD PTR [esp+0x14],ebx
10055227:	or     WORD PTR [eax+0x16b8],dx
1005522e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055235:	mov    edx,DWORD PTR [eax+0x14]
10055238:	mov    BYTE PTR [ecx+edx*1],bl
1005523b:	add    DWORD PTR [eax+0x14],0x1
1005523f:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055246:	mov    ecx,DWORD PTR [eax+0x14]
10055249:	mov    edx,DWORD PTR [eax+0x8]
1005524c:	mov    BYTE PTR [ecx+edx*1],bl
1005524f:	mov    edx,DWORD PTR [eax+0x16bc]
10055255:	add    DWORD PTR [eax+0x14],0x1
10055259:	mov    ebx,DWORD PTR [esp+0x14]
1005525d:	mov    cl,0x10
1005525f:	sub    cl,dl
10055261:	shr    bp,cl
10055264:	lea    ecx,[edx+esi*1-0x10]
10055268:	mov    WORD PTR [eax+0x16b8],bp
1005526f:	jmp    0x1005527c
10055271:	shl    ebp,cl
10055273:	or     WORD PTR [eax+0x16b8],bp
1005527a:	add    ecx,esi
1005527c:	mov    DWORD PTR [eax+0x16bc],ecx
10055282:	mov    ecx,DWORD PTR [esp+0x18]
10055286:	cmp    ecx,DWORD PTR [eax+0x16a0]
1005528c:	jb     0x10054f60
10055292:	movzx  edi,WORD PTR [ebx+0x402]
10055299:	mov    ecx,DWORD PTR [eax+0x16bc]
1005529f:	mov    edx,0x10
100552a4:	sub    edx,edi
100552a6:	cmp    ecx,edx
100552a8:	jle    0x1005531d
100552aa:	movzx  esi,WORD PTR [ebx+0x400]
100552b1:	mov    edx,esi
100552b3:	shl    edx,cl
100552b5:	mov    ecx,DWORD PTR [eax+0x8]
100552b8:	mov    DWORD PTR [esp+0x20],ebx
100552bc:	or     WORD PTR [eax+0x16b8],dx
100552c3:	mov    edx,DWORD PTR [eax+0x14]
100552c6:	mov    bl,BYTE PTR [eax+0x16b8]
100552cc:	mov    BYTE PTR [ecx+edx*1],bl
100552cf:	add    DWORD PTR [eax+0x14],0x1
100552d3:	mov    ebp,DWORD PTR [eax+0x14]
100552d6:	mov    ecx,DWORD PTR [eax+0x8]
100552d9:	mov    dl,BYTE PTR [eax+0x16b9]
100552df:	mov    ebx,DWORD PTR [esp+0x20]
100552e3:	mov    BYTE PTR [ecx+ebp*1],dl
100552e6:	mov    edx,DWORD PTR [eax+0x16bc]
100552ec:	add    DWORD PTR [eax+0x14],0x1
100552f0:	mov    cl,0x10
100552f2:	sub    cl,dl
100552f4:	shr    si,cl
100552f7:	lea    ecx,[edx+edi*1-0x10]
100552fb:	pop    edi
100552fc:	mov    DWORD PTR [eax+0x16bc],ecx
10055302:	mov    WORD PTR [eax+0x16b8],si
10055309:	movzx  edx,WORD PTR [ebx+0x402]
10055310:	pop    esi
10055311:	pop    ebp
10055312:	mov    DWORD PTR [eax+0x16b4],edx
10055318:	pop    ebx
10055319:	add    esp,0xc
1005531c:	ret    
1005531d:	mov    dx,WORD PTR [ebx+0x400]
10055324:	shl    dx,cl
10055327:	or     WORD PTR [eax+0x16b8],dx
1005532e:	add    ecx,edi
10055330:	pop    edi
10055331:	mov    DWORD PTR [eax+0x16bc],ecx
10055337:	movzx  ecx,WORD PTR [ebx+0x402]
1005533e:	pop    esi
1005533f:	pop    ebp
10055340:	mov    DWORD PTR [eax+0x16b4],ecx
10055346:	pop    ebx
10055347:	add    esp,0xc
1005534a:	ret    
1005534b:	int3   
1005534c:	int3   
1005534d:	int3   
1005534e:	int3   
1005534f:	int3   
10055350:	xor    eax,eax
10055352:	lea    ecx,[edx+0x94]
10055358:	cmp    WORD PTR [ecx],0x0
1005535c:	jne    0x10055369
1005535e:	add    eax,0x1
10055361:	add    ecx,0x4
10055364:	cmp    eax,0x9
10055367:	jl     0x10055358
10055369:	cmp    eax,0x9
1005536c:	jne    0x1005540d
10055372:	mov    eax,0xe
10055377:	lea    ecx,[edx+0xd0]
1005537d:	lea    ecx,[ecx+0x0]
10055380:	cmp    WORD PTR [ecx-0x4],0x0
10055385:	jne    0x1005540d
1005538b:	cmp    WORD PTR [ecx],0x0
1005538f:	jne    0x100553c6
10055391:	cmp    WORD PTR [ecx+0x4],0x0
10055396:	jne    0x100553d7
10055398:	cmp    WORD PTR [ecx+0x8],0x0
1005539d:	jne    0x100553e8
1005539f:	cmp    WORD PTR [ecx+0xc],0x0
100553a4:	jne    0x100553f9
100553a6:	cmp    WORD PTR [ecx+0x10],0x0
100553ab:	jne    0x1005540a
100553ad:	add    eax,0x6
100553b0:	add    ecx,0x18
100553b3:	cmp    eax,0x20
100553b6:	jl     0x10055380
100553b8:	mov    edx,DWORD PTR [edx]
100553ba:	xor    ecx,ecx
100553bc:	cmp    eax,0x20
100553bf:	sete   cl
100553c2:	mov    DWORD PTR [edx+0x2c],ecx
100553c5:	ret    
100553c6:	mov    edx,DWORD PTR [edx]
100553c8:	xor    ecx,ecx
100553ca:	add    eax,0x1
100553cd:	cmp    eax,0x20
100553d0:	sete   cl
100553d3:	mov    DWORD PTR [edx+0x2c],ecx
100553d6:	ret    
100553d7:	mov    edx,DWORD PTR [edx]
100553d9:	xor    ecx,ecx
100553db:	add    eax,0x2
100553de:	cmp    eax,0x20
100553e1:	sete   cl
100553e4:	mov    DWORD PTR [edx+0x2c],ecx
100553e7:	ret    
100553e8:	mov    edx,DWORD PTR [edx]
100553ea:	xor    ecx,ecx
100553ec:	add    eax,0x3
100553ef:	cmp    eax,0x20
100553f2:	sete   cl
100553f5:	mov    DWORD PTR [edx+0x2c],ecx
100553f8:	ret    
100553f9:	mov    edx,DWORD PTR [edx]
100553fb:	xor    ecx,ecx
100553fd:	add    eax,0x4
10055400:	cmp    eax,0x20
10055403:	sete   cl
10055406:	mov    DWORD PTR [edx+0x2c],ecx
10055409:	ret    
1005540a:	add    eax,0x5
1005540d:	mov    edx,DWORD PTR [edx]
1005540f:	xor    ecx,ecx
10055411:	cmp    eax,0x20
10055414:	sete   cl
10055417:	mov    DWORD PTR [edx+0x2c],ecx
1005541a:	ret    
1005541b:	int3   
1005541c:	int3   
1005541d:	int3   
1005541e:	int3   
1005541f:	int3   
10055420:	xor    eax,eax
10055422:	push   esi
10055423:	mov    esi,ecx
10055425:	and    esi,0x1
10055428:	or     eax,esi
1005542a:	sub    edx,0x1
1005542d:	shr    ecx,1
1005542f:	add    eax,eax
10055431:	test   edx,edx
10055433:	jg     0x10055423
10055435:	shr    eax,1
10055437:	pop    esi
10055438:	ret    
10055439:	int3   
1005543a:	int3   
1005543b:	int3   
1005543c:	int3   
1005543d:	int3   
1005543e:	int3   
1005543f:	int3   
10055440:	mov    ecx,DWORD PTR [eax+0x16bc]
10055446:	cmp    ecx,0x10
10055449:	push   ebx
1005544a:	jne    0x10055485
1005544c:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055453:	mov    edx,DWORD PTR [eax+0x14]
10055456:	mov    ecx,DWORD PTR [eax+0x8]
10055459:	mov    BYTE PTR [ecx+edx*1],bl
1005545c:	add    DWORD PTR [eax+0x14],0x1
10055460:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055467:	mov    ecx,DWORD PTR [eax+0x14]
1005546a:	mov    edx,DWORD PTR [eax+0x8]
1005546d:	mov    BYTE PTR [ecx+edx*1],bl
10055470:	add    DWORD PTR [eax+0x14],0x1
10055474:	xor    ecx,ecx
10055476:	mov    DWORD PTR [eax+0x16bc],ecx
1005547c:	mov    WORD PTR [eax+0x16b8],cx
10055483:	pop    ebx
10055484:	ret    
10055485:	cmp    ecx,0x8
10055488:	jl     0x100554b3
1005548a:	mov    ecx,DWORD PTR [eax+0x8]
1005548d:	mov    edx,DWORD PTR [eax+0x14]
10055490:	mov    bl,BYTE PTR [eax+0x16b8]
10055496:	mov    BYTE PTR [ecx+edx*1],bl
10055499:	movzx  cx,BYTE PTR [eax+0x16b9]
100554a1:	add    DWORD PTR [eax+0x14],0x1
100554a5:	add    DWORD PTR [eax+0x16bc],0xfffffff8
100554ac:	mov    WORD PTR [eax+0x16b8],cx
100554b3:	pop    ebx
100554b4:	ret    
100554b5:	int3   
100554b6:	int3   
100554b7:	int3   
100554b8:	int3   
100554b9:	int3   
100554ba:	int3   
100554bb:	int3   
100554bc:	int3   
100554bd:	int3   
100554be:	int3   
100554bf:	int3   
100554c0:	mov    edx,DWORD PTR [eax+0x16bc]
100554c6:	cmp    edx,0x8
100554c9:	push   ebx
100554ca:	push   esi
100554cb:	jle    0x1005550a
100554cd:	movzx  ebx,BYTE PTR [eax+0x16b8]
100554d4:	mov    edx,DWORD PTR [eax+0x14]
100554d7:	mov    ecx,DWORD PTR [eax+0x8]
100554da:	mov    BYTE PTR [ecx+edx*1],bl
100554dd:	movzx  ebx,BYTE PTR [eax+0x16b9]
100554e4:	mov    edx,DWORD PTR [eax+0x8]
100554e7:	mov    esi,0x1
100554ec:	add    DWORD PTR [eax+0x14],esi
100554ef:	mov    ecx,DWORD PTR [eax+0x14]
100554f2:	mov    BYTE PTR [ecx+edx*1],bl
100554f5:	add    DWORD PTR [eax+0x14],esi
100554f8:	xor    ecx,ecx
100554fa:	pop    esi
100554fb:	mov    WORD PTR [eax+0x16b8],cx
10055502:	mov    DWORD PTR [eax+0x16bc],ecx
10055508:	pop    ebx
10055509:	ret    
1005550a:	xor    ecx,ecx
1005550c:	cmp    edx,ecx
1005550e:	jle    0x10055523
10055510:	mov    esi,DWORD PTR [eax+0x14]
10055513:	mov    edx,DWORD PTR [eax+0x8]
10055516:	mov    bl,BYTE PTR [eax+0x16b8]
1005551c:	mov    BYTE PTR [edx+esi*1],bl
1005551f:	add    DWORD PTR [eax+0x14],0x1
10055523:	pop    esi
10055524:	mov    WORD PTR [eax+0x16b8],cx
1005552b:	mov    DWORD PTR [eax+0x16bc],ecx
10055531:	pop    ebx
10055532:	ret    
10055533:	int3   
10055534:	int3   
10055535:	int3   
10055536:	int3   
10055537:	int3   
10055538:	int3   
10055539:	int3   
1005553a:	int3   
1005553b:	int3   
1005553c:	int3   
1005553d:	int3   
1005553e:	int3   
1005553f:	int3   
10055540:	push   ebx
10055541:	push   esi
10055542:	push   edi
10055543:	mov    ebx,ecx
10055545:	mov    esi,edx
10055547:	call   0x100554c0
1005554c:	cmp    DWORD PTR [esp+0x10],0x0
10055551:	mov    DWORD PTR [eax+0x16b4],0x8
1005555b:	mov    edi,0x1
10055560:	je     0x1005559c
10055562:	mov    ecx,DWORD PTR [eax+0x14]
10055565:	mov    edx,DWORD PTR [eax+0x8]
10055568:	mov    BYTE PTR [ecx+edx*1],bl
1005556b:	add    DWORD PTR [eax+0x14],edi
1005556e:	mov    ecx,DWORD PTR [eax+0x14]
10055571:	mov    edx,DWORD PTR [eax+0x8]
10055574:	mov    BYTE PTR [ecx+edx*1],bh
10055577:	add    DWORD PTR [eax+0x14],edi
1005557a:	mov    edx,DWORD PTR [eax+0x8]
1005557d:	push   ebp
1005557e:	mov    ebp,DWORD PTR [eax+0x14]
10055581:	mov    cl,bl
10055583:	not    cl
10055585:	mov    BYTE PTR [edx+ebp*1],cl
10055588:	add    DWORD PTR [eax+0x14],edi
1005558b:	mov    ebp,DWORD PTR [eax+0x14]
1005558e:	mov    edx,DWORD PTR [eax+0x8]
10055591:	mov    ecx,ebx
10055593:	not    ecx
10055595:	mov    BYTE PTR [edx+ebp*1],ch
10055598:	add    DWORD PTR [eax+0x14],edi
1005559b:	pop    ebp
1005559c:	test   ebx,ebx
1005559e:	je     0x100555be
100555a0:	mov    ecx,DWORD PTR [eax+0x14]
100555a3:	mov    edx,DWORD PTR [eax+0x8]
100555a6:	sub    ebx,edi
100555a8:	mov    DWORD PTR [esp+0x10],ebx
100555ac:	mov    bl,BYTE PTR [esi]
100555ae:	mov    BYTE PTR [ecx+edx*1],bl
100555b1:	mov    ebx,DWORD PTR [esp+0x10]
100555b5:	add    DWORD PTR [eax+0x14],edi
100555b8:	add    esi,edi
100555ba:	test   ebx,ebx
100555bc:	jne    0x100555a0
100555be:	pop    edi
100555bf:	pop    esi
100555c0:	pop    ebx
100555c1:	ret    
100555c2:	int3   
100555c3:	int3   
100555c4:	int3   
100555c5:	int3   
100555c6:	int3   
100555c7:	int3   
100555c8:	int3   
100555c9:	int3   
100555ca:	int3   
100555cb:	int3   
100555cc:	int3   
100555cd:	int3   
100555ce:	int3   
100555cf:	int3   
100555d0:	mov    edx,DWORD PTR [esp+0x4]
100555d4:	lea    eax,[edx+0x94]
100555da:	mov    DWORD PTR [edx+0xb18],eax
100555e0:	lea    eax,[edx+0xa7c]
100555e6:	mov    DWORD PTR [edx+0xb30],eax
100555ec:	xor    eax,eax
100555ee:	lea    ecx,[edx+0x988]
100555f4:	mov    DWORD PTR [edx+0xb20],0x1007efb0
100555fe:	mov    DWORD PTR [edx+0xb24],ecx
10055604:	mov    DWORD PTR [edx+0xb2c],0x1007efc4
1005560e:	mov    DWORD PTR [edx+0xb38],0x1007efd8
10055618:	mov    WORD PTR [edx+0x16b8],ax
1005561f:	mov    DWORD PTR [edx+0x16bc],eax
10055625:	mov    DWORD PTR [edx+0x16b4],0x8
1005562f:	jmp    0x10054370
10055634:	int3   
10055635:	int3   
10055636:	int3   
10055637:	int3   
10055638:	int3   
10055639:	int3   
1005563a:	int3   
1005563b:	int3   
1005563c:	int3   
1005563d:	int3   
1005563e:	int3   
1005563f:	int3   
10055640:	sub    esp,0x24
10055643:	mov    eax,ds:0x1007e030
10055648:	xor    eax,esp
1005564a:	mov    DWORD PTR [esp+0x20],eax
1005564e:	push   esi
1005564f:	lea    esi,[esp+0x6]
10055653:	xor    ecx,ecx
10055655:	mov    eax,0x1
1005565a:	sub    edx,esi
1005565c:	lea    esp,[esp+0x0]
10055660:	lea    esi,[edx+eax*2]
10055663:	mov    si,WORD PTR [esp+esi*1+0x4]
10055668:	add    si,cx
1005566b:	add    si,si
1005566e:	movzx  ecx,si
10055671:	mov    WORD PTR [esp+eax*2+0x4],cx
10055676:	add    eax,0x1
10055679:	cmp    eax,0xf
1005567c:	jle    0x10055660
1005567e:	xor    esi,esi
10055680:	test   ebx,ebx
10055682:	jl     0x100556ad
10055684:	movzx  edx,WORD PTR [edi+esi*4+0x2]
10055689:	test   edx,edx
1005568b:	je     0x100556a6
1005568d:	movzx  eax,WORD PTR [esp+edx*2+0x4]
10055692:	movzx  ecx,ax
10055695:	add    eax,0x1
10055698:	mov    WORD PTR [esp+edx*2+0x4],ax
1005569d:	call   0x10055420
100556a2:	mov    WORD PTR [edi+esi*4],ax
100556a6:	add    esi,0x1
100556a9:	cmp    esi,ebx
100556ab:	jle    0x10055684
100556ad:	mov    ecx,DWORD PTR [esp+0x24]
100556b1:	pop    esi
100556b2:	xor    ecx,esp
100556b4:	call   0x10042e97
100556b9:	add    esp,0x24
100556bc:	ret    
100556bd:	int3   
100556be:	int3   
100556bf:	int3   
100556c0:	sub    esp,0x8
100556c3:	mov    eax,DWORD PTR [esp+0xc]
100556c7:	push   ebx
100556c8:	push   ebp
100556c9:	push   edi
100556ca:	mov    edi,DWORD PTR [eax]
100556cc:	mov    eax,DWORD PTR [eax+0x8]
100556cf:	mov    ecx,DWORD PTR [eax+0xc]
100556d2:	mov    ebp,DWORD PTR [eax]
100556d4:	xor    edx,edx
100556d6:	or     ebx,0xffffffff
100556d9:	xor    eax,eax
100556db:	cmp    ecx,edx
100556dd:	mov    DWORD PTR [esp+0x10],ecx
100556e1:	mov    DWORD PTR [esp+0xc],ebx
100556e5:	mov    DWORD PTR [esi+0x1450],edx
100556eb:	mov    DWORD PTR [esi+0x1454],0x23d
100556f5:	jle    0x1005572e
100556f7:	cmp    WORD PTR [edi+eax*4],dx
100556fb:	je     0x10055720
100556fd:	add    DWORD PTR [esi+0x1450],0x1
10055704:	mov    ecx,DWORD PTR [esi+0x1450]
1005570a:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
10055711:	mov    DWORD PTR [esp+0xc],eax
10055715:	mov    BYTE PTR [eax+esi*1+0x1458],dl
1005571c:	mov    ebx,eax
1005571e:	jmp    0x10055725
10055720:	mov    WORD PTR [edi+eax*4+0x2],dx
10055725:	add    eax,0x1
10055728:	cmp    eax,DWORD PTR [esp+0x10]
1005572c:	jl     0x100556f7
1005572e:	cmp    DWORD PTR [esi+0x1450],0x2
10055735:	jge    0x10055789
10055737:	cmp    ebx,0x2
1005573a:	jge    0x10055743
1005573c:	add    ebx,0x1
1005573f:	mov    eax,ebx
10055741:	jmp    0x10055745
10055743:	xor    eax,eax
10055745:	add    DWORD PTR [esi+0x1450],0x1
1005574c:	mov    ecx,DWORD PTR [esi+0x1450]
10055752:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
10055759:	mov    WORD PTR [edi+eax*4],0x1
1005575f:	mov    BYTE PTR [esi+eax*1+0x1458],dl
10055766:	add    DWORD PTR [esi+0x16a8],0xffffffff
1005576d:	cmp    ebp,edx
1005576f:	je     0x1005577c
10055771:	movzx  eax,WORD PTR [ebp+eax*4+0x2]
10055776:	sub    DWORD PTR [esi+0x16ac],eax
1005577c:	cmp    DWORD PTR [esi+0x1450],0x2
10055783:	jl     0x10055737
10055785:	mov    DWORD PTR [esp+0xc],ebx
10055789:	mov    ecx,DWORD PTR [esp+0x18]
1005578d:	mov    DWORD PTR [ecx+0x4],ebx
10055790:	mov    eax,DWORD PTR [esi+0x1450]
10055796:	cdq    
10055797:	sub    eax,edx
10055799:	mov    ebp,eax
1005579b:	sar    ebp,1
1005579d:	cmp    ebp,0x1
100557a0:	jl     0x100557b5
100557a2:	push   ebp
100557a3:	mov    eax,esi
100557a5:	call   0x100543e0
100557aa:	sub    ebp,0x1
100557ad:	add    esp,0x4
100557b0:	cmp    ebp,0x1
100557b3:	jge    0x100557a2
100557b5:	mov    ebx,DWORD PTR [esp+0x10]
100557b9:	lea    esp,[esp+0x0]
100557c0:	mov    eax,DWORD PTR [esi+0x1450]
100557c6:	mov    edx,DWORD PTR [esi+eax*4+0xb5c]
100557cd:	mov    ebp,DWORD PTR [esi+0xb60]
100557d3:	add    eax,0xffffffff
100557d6:	mov    DWORD PTR [esi+0x1450],eax
100557dc:	push   0x1
100557de:	mov    eax,esi
100557e0:	mov    DWORD PTR [esi+0xb60],edx
100557e6:	call   0x100543e0
100557eb:	mov    eax,DWORD PTR [esi+0xb60]
100557f1:	or     edx,0xffffffff
100557f4:	add    DWORD PTR [esi+0x1454],edx
100557fa:	mov    ecx,DWORD PTR [esi+0x1454]
10055800:	mov    DWORD PTR [esi+ecx*4+0xb5c],ebp
10055807:	add    DWORD PTR [esi+0x1454],edx
1005580d:	mov    ecx,DWORD PTR [esi+0x1454]
10055813:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
1005581a:	mov    cx,WORD PTR [edi+eax*4]
1005581e:	add    cx,WORD PTR [edi+ebp*4]
10055822:	add    esp,0x4
10055825:	mov    WORD PTR [edi+ebx*4],cx
10055829:	mov    cl,BYTE PTR [esi+eax*1+0x1458]
10055830:	mov    dl,BYTE PTR [esi+ebp*1+0x1458]
10055837:	cmp    dl,cl
10055839:	jb     0x10055840
1005583b:	movzx  ecx,dl
1005583e:	jmp    0x10055843
10055840:	movzx  ecx,cl
10055843:	add    cl,0x1
10055846:	mov    BYTE PTR [esi+ebx*1+0x1458],cl
1005584d:	movzx  ecx,bx
10055850:	mov    WORD PTR [edi+eax*4+0x2],cx
10055855:	mov    WORD PTR [edi+ebp*4+0x2],cx
1005585a:	mov    DWORD PTR [esi+0xb60],ebx
10055860:	push   0x1
10055862:	mov    eax,esi
10055864:	add    ebx,0x1
10055867:	call   0x100543e0
1005586c:	add    esp,0x4
1005586f:	cmp    DWORD PTR [esi+0x1450],0x2
10055876:	jge    0x100557c0
1005587c:	add    DWORD PTR [esi+0x1454],0xffffffff
10055883:	mov    eax,DWORD PTR [esi+0x1454]
10055889:	mov    edx,DWORD PTR [esi+0xb60]
1005588f:	mov    ecx,DWORD PTR [esp+0x18]
10055893:	mov    DWORD PTR [esi+eax*4+0xb5c],edx
1005589a:	mov    eax,esi
1005589c:	call   0x100544b0
100558a1:	mov    ebx,DWORD PTR [esp+0xc]
100558a5:	lea    edx,[esi+0xb3c]
100558ab:	call   0x10055640
100558b0:	pop    edi
100558b1:	pop    ebp
100558b2:	pop    ebx
100558b3:	add    esp,0x8
100558b6:	ret    
100558b7:	int3   
100558b8:	int3   
100558b9:	int3   
100558ba:	int3   
100558bb:	int3   
100558bc:	int3   
100558bd:	int3   
100558be:	int3   
100558bf:	int3   
100558c0:	push   esi
100558c1:	mov    esi,eax
100558c3:	mov    ecx,DWORD PTR [esi+0xb1c]
100558c9:	lea    eax,[esi+0x94]
100558cf:	push   esi
100558d0:	call   0x100546d0
100558d5:	mov    ecx,DWORD PTR [esi+0xb28]
100558db:	lea    eax,[esi+0x988]
100558e1:	push   esi
100558e2:	call   0x100546d0
100558e7:	lea    eax,[esi+0xb30]
100558ed:	push   eax
100558ee:	call   0x100556c0
100558f3:	add    esp,0xc
100558f6:	mov    eax,0x12
100558fb:	jmp    0x10055900
100558fd:	lea    ecx,[ecx+0x0]
10055900:	movzx  ecx,BYTE PTR [eax+0x10068abc]
10055907:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
10055910:	jne    0x1005597d
10055912:	movzx  edx,BYTE PTR [eax+0x10068abb]
10055919:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
10055922:	jne    0x1005595c
10055924:	movzx  ecx,BYTE PTR [eax+0x10068aba]
1005592b:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
10055934:	jne    0x1005596b
10055936:	movzx  edx,BYTE PTR [eax+0x10068ab9]
1005593d:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
10055946:	jne    0x1005597a
10055948:	sub    eax,0x4
1005594b:	cmp    eax,0x3
1005594e:	jge    0x10055900
10055950:	lea    ecx,[eax+eax*2+0x11]
10055954:	add    DWORD PTR [esi+0x16a8],ecx
1005595a:	pop    esi
1005595b:	ret    
1005595c:	sub    eax,0x1
1005595f:	lea    ecx,[eax+eax*2+0x11]
10055963:	add    DWORD PTR [esi+0x16a8],ecx
10055969:	pop    esi
1005596a:	ret    
1005596b:	sub    eax,0x2
1005596e:	lea    ecx,[eax+eax*2+0x11]
10055972:	add    DWORD PTR [esi+0x16a8],ecx
10055978:	pop    esi
10055979:	ret    
1005597a:	sub    eax,0x3
1005597d:	lea    ecx,[eax+eax*2+0x11]
10055981:	add    DWORD PTR [esi+0x16a8],ecx
10055987:	pop    esi
10055988:	ret    
10055989:	int3   
1005598a:	int3   
1005598b:	int3   
1005598c:	int3   
1005598d:	int3   
1005598e:	int3   
1005598f:	int3   
10055990:	mov    eax,DWORD PTR [esp+0x4]
10055994:	mov    ecx,DWORD PTR [eax+0x16bc]
1005599a:	cmp    ecx,0xd
1005599d:	jle    0x10055a08
1005599f:	push   ebx
100559a0:	push   esi
100559a1:	mov    esi,DWORD PTR [esp+0x18]
100559a5:	mov    edx,esi
100559a7:	shl    edx,cl
100559a9:	mov    ecx,DWORD PTR [eax+0x8]
100559ac:	or     WORD PTR [eax+0x16b8],dx
100559b3:	movzx  ebx,BYTE PTR [eax+0x16b8]
100559ba:	mov    edx,DWORD PTR [eax+0x14]
100559bd:	mov    BYTE PTR [ecx+edx*1],bl
100559c0:	movzx  ebx,BYTE PTR [eax+0x16b9]
100559c7:	add    DWORD PTR [eax+0x14],0x1
100559cb:	mov    ecx,DWORD PTR [eax+0x14]
100559ce:	mov    edx,DWORD PTR [eax+0x8]
100559d1:	mov    BYTE PTR [ecx+edx*1],bl
100559d4:	mov    edx,DWORD PTR [eax+0x16bc]
100559da:	add    DWORD PTR [eax+0x14],0x1
100559de:	mov    cl,0x10
100559e0:	sub    cl,dl
100559e2:	shr    si,cl
100559e5:	mov    ecx,DWORD PTR [esp+0x14]
100559e9:	add    edx,0xfffffff3
100559ec:	mov    DWORD PTR [eax+0x16bc],edx
100559f2:	mov    edx,DWORD PTR [esp+0x10]
100559f6:	mov    WORD PTR [eax+0x16b8],si
100559fd:	pop    esi
100559fe:	pop    ebx
100559ff:	push   0x1
10055a01:	call   0x10055540
10055a06:	pop    ecx
10055a07:	ret    
10055a08:	mov    edx,DWORD PTR [esp+0x10]
10055a0c:	shl    edx,cl
10055a0e:	add    ecx,0x3
10055a11:	mov    DWORD PTR [eax+0x16bc],ecx
10055a17:	mov    ecx,DWORD PTR [esp+0xc]
10055a1b:	or     WORD PTR [eax+0x16b8],dx
10055a22:	mov    edx,DWORD PTR [esp+0x8]
10055a26:	push   0x1
10055a28:	call   0x10055540
10055a2d:	pop    ecx
10055a2e:	ret    
10055a2f:	int3   
10055a30:	mov    eax,DWORD PTR [esp+0x4]
10055a34:	mov    ecx,DWORD PTR [eax+0x16bc]
10055a3a:	mov    edx,0x2
10055a3f:	shl    edx,cl
10055a41:	push   ebx
10055a42:	push   esi
10055a43:	push   edi
10055a44:	or     WORD PTR [eax+0x16b8],dx
10055a4b:	cmp    ecx,0xd
10055a4e:	mov    esi,0x1
10055a53:	jle    0x10055a9f
10055a55:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055a5c:	mov    edx,DWORD PTR [eax+0x14]
10055a5f:	mov    ecx,DWORD PTR [eax+0x8]
10055a62:	mov    BYTE PTR [ecx+edx*1],bl
10055a65:	add    DWORD PTR [eax+0x14],esi
10055a68:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055a6f:	mov    ecx,DWORD PTR [eax+0x14]
10055a72:	mov    edx,DWORD PTR [eax+0x8]
10055a75:	mov    BYTE PTR [ecx+edx*1],bl
10055a78:	mov    edx,DWORD PTR [eax+0x16bc]
10055a7e:	add    DWORD PTR [eax+0x14],esi
10055a81:	mov    cl,0x10
10055a83:	sub    cl,dl
10055a85:	mov    edi,0x2
10055a8a:	shr    di,cl
10055a8d:	add    edx,0xfffffff3
10055a90:	mov    DWORD PTR [eax+0x16bc],edx
10055a96:	mov    WORD PTR [eax+0x16b8],di
10055a9d:	jmp    0x10055aa8
10055a9f:	add    ecx,0x3
10055aa2:	mov    DWORD PTR [eax+0x16bc],ecx
10055aa8:	mov    ecx,DWORD PTR [eax+0x16bc]
10055aae:	xor    edx,edx
10055ab0:	shl    edx,cl
10055ab2:	or     WORD PTR [eax+0x16b8],dx
10055ab9:	cmp    ecx,0x9
10055abc:	jle    0x10055b05
10055abe:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055ac5:	mov    edx,DWORD PTR [eax+0x14]
10055ac8:	mov    ecx,DWORD PTR [eax+0x8]
10055acb:	mov    BYTE PTR [ecx+edx*1],bl
10055ace:	add    DWORD PTR [eax+0x14],esi
10055ad1:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055ad8:	mov    ecx,DWORD PTR [eax+0x14]
10055adb:	mov    edx,DWORD PTR [eax+0x8]
10055ade:	mov    BYTE PTR [ecx+edx*1],bl
10055ae1:	mov    edx,DWORD PTR [eax+0x16bc]
10055ae7:	add    DWORD PTR [eax+0x14],esi
10055aea:	mov    cl,0x10
10055aec:	sub    cl,dl
10055aee:	xor    edi,edi
10055af0:	shr    di,cl
10055af3:	add    edx,0xfffffff7
10055af6:	mov    DWORD PTR [eax+0x16bc],edx
10055afc:	mov    WORD PTR [eax+0x16b8],di
10055b03:	jmp    0x10055b0e
10055b05:	add    ecx,0x7
10055b08:	mov    DWORD PTR [eax+0x16bc],ecx
10055b0e:	call   0x10055440
10055b13:	mov    ecx,DWORD PTR [eax+0x16bc]
10055b19:	mov    edx,DWORD PTR [eax+0x16b4]
10055b1f:	sub    edx,ecx
10055b21:	add    edx,0xb
10055b24:	cmp    edx,0x9
10055b27:	jge    0x10055c0f
10055b2d:	mov    edx,0x2
10055b32:	shl    edx,cl
10055b34:	or     WORD PTR [eax+0x16b8],dx
10055b3b:	cmp    ecx,0xd
10055b3e:	jle    0x10055b8a
10055b40:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055b47:	mov    edx,DWORD PTR [eax+0x14]
10055b4a:	mov    ecx,DWORD PTR [eax+0x8]
10055b4d:	mov    BYTE PTR [ecx+edx*1],bl
10055b50:	add    DWORD PTR [eax+0x14],esi
10055b53:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055b5a:	mov    ecx,DWORD PTR [eax+0x14]
10055b5d:	mov    edx,DWORD PTR [eax+0x8]
10055b60:	mov    BYTE PTR [ecx+edx*1],bl
10055b63:	mov    edx,DWORD PTR [eax+0x16bc]
10055b69:	add    DWORD PTR [eax+0x14],esi
10055b6c:	mov    cl,0x10
10055b6e:	sub    cl,dl
10055b70:	mov    edi,0x2
10055b75:	shr    di,cl
10055b78:	add    edx,0xfffffff3
10055b7b:	mov    DWORD PTR [eax+0x16bc],edx
10055b81:	mov    WORD PTR [eax+0x16b8],di
10055b88:	jmp    0x10055b93
10055b8a:	add    ecx,0x3
10055b8d:	mov    DWORD PTR [eax+0x16bc],ecx
10055b93:	mov    ecx,DWORD PTR [eax+0x16bc]
10055b99:	xor    edx,edx
10055b9b:	shl    edx,cl
10055b9d:	or     WORD PTR [eax+0x16b8],dx
10055ba4:	cmp    ecx,0x9
10055ba7:	jle    0x10055c01
10055ba9:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055bb0:	mov    edx,DWORD PTR [eax+0x14]
10055bb3:	mov    ecx,DWORD PTR [eax+0x8]
10055bb6:	mov    BYTE PTR [ecx+edx*1],bl
10055bb9:	add    DWORD PTR [eax+0x14],esi
10055bbc:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055bc3:	mov    ecx,DWORD PTR [eax+0x14]
10055bc6:	mov    edx,DWORD PTR [eax+0x8]
10055bc9:	mov    BYTE PTR [ecx+edx*1],bl
10055bcc:	mov    edx,DWORD PTR [eax+0x16bc]
10055bd2:	add    DWORD PTR [eax+0x14],esi
10055bd5:	mov    cl,0x10
10055bd7:	sub    cl,dl
10055bd9:	xor    esi,esi
10055bdb:	shr    si,cl
10055bde:	add    edx,0xfffffff7
10055be1:	mov    DWORD PTR [eax+0x16bc],edx
10055be7:	mov    WORD PTR [eax+0x16b8],si
10055bee:	call   0x10055440
10055bf3:	pop    edi
10055bf4:	pop    esi
10055bf5:	mov    DWORD PTR [eax+0x16b4],0x7
10055bff:	pop    ebx
10055c00:	ret    
10055c01:	add    ecx,0x7
10055c04:	mov    DWORD PTR [eax+0x16bc],ecx
10055c0a:	call   0x10055440
10055c0f:	pop    edi
10055c10:	pop    esi
10055c11:	mov    DWORD PTR [eax+0x16b4],0x7
10055c1b:	pop    ebx
10055c1c:	ret    
10055c1d:	int3   
10055c1e:	int3   
10055c1f:	int3   
10055c20:	push   ecx
10055c21:	push   ebx
10055c22:	mov    ebx,DWORD PTR [esp+0x14]
10055c26:	push   esi
10055c27:	mov    esi,DWORD PTR [esp+0x10]
10055c2b:	cmp    DWORD PTR [esi+0x84],0x0
10055c32:	push   edi
10055c33:	mov    DWORD PTR [esp+0xc],0x0
10055c3b:	jle    0x10055c94
10055c3d:	test   ebx,ebx
10055c3f:	jbe    0x10055c50
10055c41:	mov    eax,DWORD PTR [esi]
10055c43:	cmp    DWORD PTR [eax+0x2c],0x2
10055c47:	jne    0x10055c50
10055c49:	mov    edx,esi
10055c4b:	call   0x10055350
10055c50:	lea    ecx,[esi+0xb18]
10055c56:	push   ecx
10055c57:	call   0x100556c0
10055c5c:	lea    edx,[esi+0xb24]
10055c62:	push   edx
10055c63:	call   0x100556c0
10055c68:	add    esp,0x8
10055c6b:	mov    eax,esi
10055c6d:	call   0x100558c0
10055c72:	mov    edx,DWORD PTR [esi+0x16a8]
10055c78:	mov    ecx,DWORD PTR [esi+0x16ac]
10055c7e:	add    edx,0xa
10055c81:	add    ecx,0xa
10055c84:	shr    edx,0x3
10055c87:	shr    ecx,0x3
10055c8a:	cmp    ecx,edx
10055c8c:	mov    DWORD PTR [esp+0xc],eax
10055c90:	ja     0x10055c99
10055c92:	jmp    0x10055c97
10055c94:	lea    ecx,[ebx+0x5]
10055c97:	mov    edx,ecx
10055c99:	lea    eax,[ebx+0x4]
10055c9c:	cmp    eax,edx
10055c9e:	ja     0x10055cbd
10055ca0:	mov    eax,DWORD PTR [esp+0x18]
10055ca4:	test   eax,eax
10055ca6:	je     0x10055cbd
10055ca8:	mov    edi,DWORD PTR [esp+0x20]
10055cac:	push   edi
10055cad:	push   ebx
10055cae:	push   eax
10055caf:	push   esi
10055cb0:	call   0x10055990
10055cb5:	add    esp,0x10
10055cb8:	jmp    0x10055e12
10055cbd:	cmp    DWORD PTR [esi+0x88],0x4
10055cc4:	je     0x10055d88
10055cca:	cmp    ecx,edx
10055ccc:	je     0x10055d88
10055cd2:	mov    ecx,DWORD PTR [esi+0x16bc]
10055cd8:	cmp    ecx,0xd
10055cdb:	mov    edi,DWORD PTR [esp+0x20]
10055cdf:	lea    edx,[edi+0x4]
10055ce2:	jle    0x10055d36
10055ce4:	mov    eax,edx
10055ce6:	shl    eax,cl
10055ce8:	mov    ecx,DWORD PTR [esi+0x8]
10055ceb:	or     WORD PTR [esi+0x16b8],ax
10055cf2:	movzx  ebx,BYTE PTR [esi+0x16b8]
10055cf9:	mov    eax,DWORD PTR [esi+0x14]
10055cfc:	mov    BYTE PTR [ecx+eax*1],bl
10055cff:	add    DWORD PTR [esi+0x14],0x1
10055d03:	movzx  ebx,BYTE PTR [esi+0x16b9]
10055d0a:	mov    ecx,DWORD PTR [esi+0x14]
10055d0d:	mov    eax,DWORD PTR [esi+0x8]
10055d10:	mov    BYTE PTR [ecx+eax*1],bl
10055d13:	mov    ebx,DWORD PTR [esi+0x16bc]
10055d19:	add    DWORD PTR [esi+0x14],0x1
10055d1d:	mov    cl,0x10
10055d1f:	sub    cl,bl
10055d21:	shr    dx,cl
10055d24:	add    ebx,0xfffffff3
10055d27:	mov    DWORD PTR [esi+0x16bc],ebx
10055d2d:	mov    WORD PTR [esi+0x16b8],dx
10055d34:	jmp    0x10055d48
10055d36:	shl    edx,cl
10055d38:	or     WORD PTR [esi+0x16b8],dx
10055d3f:	add    ecx,0x3
10055d42:	mov    DWORD PTR [esi+0x16bc],ecx
10055d48:	mov    eax,DWORD PTR [esp+0xc]
10055d4c:	mov    ecx,DWORD PTR [esi+0xb28]
10055d52:	mov    edx,DWORD PTR [esi+0xb1c]
10055d58:	add    eax,0x1
10055d5b:	push   eax
10055d5c:	add    ecx,0x1
10055d5f:	push   ecx
10055d60:	add    edx,0x1
10055d63:	push   edx
10055d64:	mov    eax,esi
10055d66:	call   0x10054ce0
10055d6b:	lea    eax,[esi+0x988]
10055d71:	push   eax
10055d72:	lea    ecx,[esi+0x94]
10055d78:	push   ecx
10055d79:	mov    eax,esi
10055d7b:	call   0x10054f40
10055d80:	add    esp,0x14
10055d83:	jmp    0x10055e12
10055d88:	mov    ecx,DWORD PTR [esi+0x16bc]
10055d8e:	cmp    ecx,0xd
10055d91:	mov    edi,DWORD PTR [esp+0x20]
10055d95:	lea    eax,[edi+0x2]
10055d98:	jle    0x10055dec
10055d9a:	mov    edx,eax
10055d9c:	shl    edx,cl
10055d9e:	mov    ecx,DWORD PTR [esi+0x8]
10055da1:	or     WORD PTR [esi+0x16b8],dx
10055da8:	movzx  ebx,BYTE PTR [esi+0x16b8]
10055daf:	mov    edx,DWORD PTR [esi+0x14]
10055db2:	mov    BYTE PTR [ecx+edx*1],bl
10055db5:	add    DWORD PTR [esi+0x14],0x1
10055db9:	movzx  ebx,BYTE PTR [esi+0x16b9]
10055dc0:	mov    ecx,DWORD PTR [esi+0x14]
10055dc3:	mov    edx,DWORD PTR [esi+0x8]
10055dc6:	mov    BYTE PTR [ecx+edx*1],bl
10055dc9:	mov    edx,DWORD PTR [esi+0x16bc]
10055dcf:	add    DWORD PTR [esi+0x14],0x1
10055dd3:	mov    cl,0x10
10055dd5:	sub    cl,dl
10055dd7:	shr    ax,cl
10055dda:	add    edx,0xfffffff3
10055ddd:	mov    DWORD PTR [esi+0x16bc],edx
10055de3:	mov    WORD PTR [esi+0x16b8],ax
10055dea:	jmp    0x10055dfe
10055dec:	shl    eax,cl
10055dee:	or     WORD PTR [esi+0x16b8],ax
10055df5:	add    ecx,0x3
10055df8:	mov    DWORD PTR [esi+0x16bc],ecx
10055dfe:	push   0x10069018
10055e03:	push   0x10068b98
10055e08:	mov    eax,esi
10055e0a:	call   0x10054f40
10055e0f:	add    esp,0x8
10055e12:	mov    edx,esi
10055e14:	call   0x10054370
10055e19:	test   edi,edi
10055e1b:	pop    edi
10055e1c:	je     0x10055e2a
10055e1e:	mov    eax,esi
10055e20:	pop    esi
10055e21:	pop    ebx
10055e22:	add    esp,0x4
10055e25:	jmp    0x100554c0
10055e2a:	pop    esi
10055e2b:	pop    ebx
10055e2c:	pop    ecx
10055e2d:	ret    
10055e2e:	int3   
10055e2f:	int3   
10055e30:	push   esi
10055e31:	mov    esi,edx
10055e33:	test   esi,esi
10055e35:	not    eax
10055e37:	je     0x10055e62
10055e39:	lea    esp,[esp+0x0]
10055e40:	test   cl,0x3
10055e43:	je     0x10055e62
10055e45:	movzx  edx,BYTE PTR [ecx]
10055e48:	xor    edx,eax
10055e4a:	and    edx,0xff
10055e50:	shr    eax,0x8
10055e53:	xor    eax,DWORD PTR [edx*4+0x10069480]
10055e5a:	add    ecx,0x1
10055e5d:	sub    esi,0x1
10055e60:	jne    0x10055e40
10055e62:	cmp    esi,0x20
10055e65:	push   ebx
10055e66:	push   edi
10055e67:	jb     0x1005604c
10055e6d:	mov    edi,esi
10055e6f:	shr    edi,0x5
10055e72:	xor    eax,DWORD PTR [ecx]
10055e74:	add    ecx,0x4
10055e77:	mov    edx,eax
10055e79:	shr    edx,0x10
10055e7c:	movzx  ebx,ah
10055e7f:	and    edx,0xff
10055e85:	mov    edx,DWORD PTR [edx*4+0x10069880]
10055e8c:	xor    edx,DWORD PTR [ebx*4+0x10069c80]
10055e93:	mov    ebx,eax
10055e95:	and    eax,0xff
10055e9a:	shr    ebx,0x18
10055e9d:	xor    edx,DWORD PTR [ebx*4+0x10069480]
10055ea4:	add    ecx,0x4
10055ea7:	xor    edx,DWORD PTR [eax*4+0x1006a080]
10055eae:	add    ecx,0x4
10055eb1:	xor    edx,DWORD PTR [ecx-0x8]
10055eb4:	add    ecx,0x4
10055eb7:	mov    eax,edx
10055eb9:	shr    eax,0x10
10055ebc:	and    eax,0xff
10055ec1:	mov    eax,DWORD PTR [eax*4+0x10069880]
10055ec8:	movzx  ebx,dh
10055ecb:	xor    eax,DWORD PTR [ebx*4+0x10069c80]
10055ed2:	mov    ebx,edx
10055ed4:	and    edx,0xff
10055eda:	shr    ebx,0x18
10055edd:	xor    eax,DWORD PTR [ebx*4+0x10069480]
10055ee4:	add    ecx,0x4
10055ee7:	xor    eax,DWORD PTR [edx*4+0x1006a080]
10055eee:	add    ecx,0x4
10055ef1:	xor    eax,DWORD PTR [ecx-0x10]
10055ef4:	mov    edx,eax
10055ef6:	shr    edx,0x10
10055ef9:	movzx  ebx,ah
10055efc:	and    edx,0xff
10055f02:	mov    edx,DWORD PTR [edx*4+0x10069880]
10055f09:	xor    edx,DWORD PTR [ebx*4+0x10069c80]
10055f10:	mov    ebx,eax
10055f12:	and    eax,0xff
10055f17:	shr    ebx,0x18
10055f1a:	xor    edx,DWORD PTR [ebx*4+0x10069480]
10055f21:	xor    edx,DWORD PTR [eax*4+0x1006a080]
10055f28:	xor    edx,DWORD PTR [ecx-0xc]
10055f2b:	mov    eax,edx
10055f2d:	shr    eax,0x10
10055f30:	and    eax,0xff
10055f35:	mov    eax,DWORD PTR [eax*4+0x10069880]
10055f3c:	movzx  ebx,dh
10055f3f:	xor    eax,DWORD PTR [ebx*4+0x10069c80]
10055f46:	mov    ebx,edx
10055f48:	and    edx,0xff
10055f4e:	shr    ebx,0x18
10055f51:	xor    eax,DWORD PTR [ebx*4+0x10069480]
10055f58:	xor    eax,DWORD PTR [edx*4+0x1006a080]
10055f5f:	xor    eax,DWORD PTR [ecx-0x8]
10055f62:	mov    edx,eax
10055f64:	shr    edx,0x10
10055f67:	movzx  ebx,ah
10055f6a:	and    edx,0xff
10055f70:	mov    edx,DWORD PTR [edx*4+0x10069880]
10055f77:	xor    edx,DWORD PTR [ebx*4+0x10069c80]
10055f7e:	mov    ebx,eax
10055f80:	and    eax,0xff
10055f85:	shr    ebx,0x18
10055f88:	xor    edx,DWORD PTR [ebx*4+0x10069480]
10055f8f:	xor    edx,DWORD PTR [eax*4+0x1006a080]
10055f96:	xor    edx,DWORD PTR [ecx-0x4]
10055f99:	mov    eax,edx
10055f9b:	shr    eax,0x10
10055f9e:	and    eax,0xff
10055fa3:	mov    eax,DWORD PTR [eax*4+0x10069880]
10055faa:	movzx  ebx,dh
10055fad:	xor    eax,DWORD PTR [ebx*4+0x10069c80]
10055fb4:	mov    ebx,edx
10055fb6:	shr    ebx,0x18
10055fb9:	xor    eax,DWORD PTR [ebx*4+0x10069480]
10055fc0:	and    edx,0xff
10055fc6:	xor    eax,DWORD PTR [edx*4+0x1006a080]
10055fcd:	xor    eax,DWORD PTR [ecx]
10055fcf:	add    ecx,0x4
10055fd2:	mov    edx,eax
10055fd4:	shr    edx,0x10
10055fd7:	movzx  ebx,ah
10055fda:	and    edx,0xff
10055fe0:	mov    edx,DWORD PTR [edx*4+0x10069880]
10055fe7:	xor    edx,DWORD PTR [ebx*4+0x10069c80]
10055fee:	mov    ebx,eax
10055ff0:	and    eax,0xff
10055ff5:	shr    ebx,0x18
10055ff8:	xor    edx,DWORD PTR [ebx*4+0x10069480]
10055fff:	add    ecx,0x4
10056002:	xor    edx,DWORD PTR [eax*4+0x1006a080]
10056009:	sub    esi,0x20
1005600c:	xor    edx,DWORD PTR [ecx-0x4]
1005600f:	mov    eax,edx
10056011:	shr    eax,0x10
10056014:	and    eax,0xff
10056019:	mov    eax,DWORD PTR [eax*4+0x10069880]
10056020:	movzx  ebx,dh
10056023:	xor    eax,DWORD PTR [ebx*4+0x10069c80]
1005602a:	mov    ebx,edx
1005602c:	shr    ebx,0x18
1005602f:	xor    eax,DWORD PTR [ebx*4+0x10069480]
10056036:	and    edx,0xff
1005603c:	xor    eax,DWORD PTR [edx*4+0x1006a080]
10056043:	sub    edi,0x1
10056046:	jne    0x10055e72
1005604c:	cmp    esi,0x4
1005604f:	jb     0x10056099
10056051:	mov    edx,esi
10056053:	shr    edx,0x2
10056056:	xor    eax,DWORD PTR [ecx]
10056058:	add    ecx,0x4
1005605b:	mov    edi,eax
1005605d:	shr    edi,0x10
10056060:	and    edi,0xff
10056066:	mov    edi,DWORD PTR [edi*4+0x10069880]
1005606d:	movzx  ebx,ah
10056070:	xor    edi,DWORD PTR [ebx*4+0x10069c80]
10056077:	mov    ebx,eax
10056079:	shr    ebx,0x18
1005607c:	xor    edi,DWORD PTR [ebx*4+0x10069480]
10056083:	and    eax,0xff
10056088:	xor    edi,DWORD PTR [eax*4+0x1006a080]
1005608f:	sub    esi,0x4
10056092:	sub    edx,0x1
10056095:	mov    eax,edi
10056097:	jne    0x10056056
10056099:	test   esi,esi
1005609b:	pop    edi
1005609c:	pop    ebx
1005609d:	je     0x100560bd
1005609f:	nop
100560a0:	movzx  edx,BYTE PTR [ecx]
100560a3:	xor    edx,eax
100560a5:	and    edx,0xff
100560ab:	shr    eax,0x8
100560ae:	xor    eax,DWORD PTR [edx*4+0x10069480]
100560b5:	add    ecx,0x1
100560b8:	sub    esi,0x1
100560bb:	jne    0x100560a0
100560bd:	not    eax
100560bf:	pop    esi
100560c0:	ret    
100560c1:	int3   
100560c2:	int3   
100560c3:	int3   
100560c4:	int3   
100560c5:	int3   
100560c6:	int3   
100560c7:	int3   
100560c8:	int3   
100560c9:	int3   
100560ca:	int3   
100560cb:	int3   
100560cc:	int3   
100560cd:	int3   
100560ce:	int3   
100560cf:	int3   
100560d0:	mov    ecx,DWORD PTR [esp+0x8]
100560d4:	test   ecx,ecx
100560d6:	jne    0x100560db
100560d8:	xor    eax,eax
100560da:	ret    
100560db:	mov    edx,DWORD PTR [esp+0xc]
100560df:	mov    eax,DWORD PTR [esp+0x4]
100560e3:	jmp    0x10055e30
100560e8:	int3   
100560e9:	int3   
100560ea:	int3   
100560eb:	int3   
100560ec:	int3   
100560ed:	int3   
100560ee:	int3   
100560ef:	int3   
100560f0:	mov    eax,DWORD PTR [esp+0x8]
100560f4:	imul   eax,DWORD PTR [esp+0xc]
100560f9:	push   eax
100560fa:	call   0x10044f8d
100560ff:	add    esp,0x4
10056102:	ret    
10056103:	int3   
10056104:	int3   
10056105:	int3   
10056106:	int3   
10056107:	int3   
10056108:	int3   
10056109:	int3   
1005610a:	int3   
1005610b:	int3   
1005610c:	int3   
1005610d:	int3   
1005610e:	int3   
1005610f:	int3   
10056110:	mov    eax,DWORD PTR [esp+0x8]
10056114:	push   eax
10056115:	call   0x10043508
1005611a:	pop    ecx
1005611b:	ret    
1005611c:	int3   
1005611d:	int3   
1005611e:	int3   
1005611f:	int3   
10056120:	sub    esp,0x3c
10056123:	push   ebx
10056124:	push   ebp
10056125:	push   esi
10056126:	push   edi
10056127:	mov    ecx,DWORD PTR [esp+0x50]
1005612b:	mov    eax,DWORD PTR [ecx+0x1c]
1005612e:	mov    edx,DWORD PTR [ecx+0x4]
10056131:	mov    ebx,DWORD PTR [eax+0x38]
10056134:	mov    ebp,DWORD PTR [ecx]
10056136:	sub    ebp,0x1
10056139:	lea    edx,[edx+ebp*1-0x5]
1005613d:	mov    DWORD PTR [esp+0x14],edx
10056141:	mov    esi,DWORD PTR [ecx+0xc]
10056144:	mov    ecx,DWORD PTR [ecx+0x10]
10056147:	mov    edx,ecx
10056149:	sub    edx,DWORD PTR [esp+0x54]
1005614d:	sub    esi,0x1
10056150:	add    edx,esi
10056152:	lea    ecx,[ecx+esi*1-0x101]
10056159:	mov    DWORD PTR [esp+0x38],edx
1005615d:	mov    edx,DWORD PTR [eax+0x28]
10056160:	mov    DWORD PTR [esp+0x2c],ecx
10056164:	mov    ecx,DWORD PTR [eax+0x2c]
10056167:	mov    DWORD PTR [esp+0x28],edx
1005616b:	mov    edx,DWORD PTR [eax+0x30]
1005616e:	mov    DWORD PTR [esp+0x3c],ecx
10056172:	mov    ecx,DWORD PTR [eax+0x34]
10056175:	mov    DWORD PTR [esp+0x44],edx
10056179:	mov    edx,DWORD PTR [eax+0x4c]
1005617c:	mov    DWORD PTR [esp+0x40],ecx
10056180:	mov    ecx,DWORD PTR [eax+0x50]
10056183:	mov    DWORD PTR [esp+0x20],edx
10056187:	mov    DWORD PTR [esp+0x24],ecx
1005618b:	mov    ecx,DWORD PTR [eax+0x54]
1005618e:	mov    edx,0x1
10056193:	shl    edx,cl
10056195:	mov    ecx,DWORD PTR [eax+0x58]
10056198:	mov    DWORD PTR [esp+0x18],eax
1005619c:	mov    edi,DWORD PTR [eax+0x3c]
1005619f:	mov    DWORD PTR [esp+0x54],0x1
100561a7:	mov    eax,DWORD PTR [esp+0x54]
100561ab:	shl    eax,cl
100561ad:	sub    edx,0x1
100561b0:	mov    DWORD PTR [esp+0x10],ebp
100561b4:	mov    DWORD PTR [esp+0x48],edx
100561b8:	sub    eax,0x1
100561bb:	mov    DWORD PTR [esp+0x30],eax
100561bf:	nop
100561c0:	cmp    edi,0xf
100561c3:	jae    0x100561e9
100561c5:	movzx  eax,BYTE PTR [ebp+0x1]
100561c9:	add    ebp,0x1
100561cc:	mov    ecx,edi
100561ce:	shl    eax,cl
100561d0:	add    ebp,0x1
100561d3:	add    edi,0x8
100561d6:	mov    ecx,edi
100561d8:	add    ebx,eax
100561da:	movzx  eax,BYTE PTR [ebp+0x0]
100561de:	shl    eax,cl
100561e0:	mov    DWORD PTR [esp+0x10],ebp
100561e4:	add    ebx,eax
100561e6:	add    edi,0x8
100561e9:	mov    ecx,DWORD PTR [esp+0x20]
100561ed:	and    edx,ebx
100561ef:	mov    eax,DWORD PTR [ecx+edx*4]
100561f2:	mov    edx,eax
100561f4:	shr    edx,0x8
100561f7:	movzx  ecx,dl
100561fa:	movzx  edx,al
100561fd:	shr    ebx,cl
100561ff:	sub    edi,ecx
10056201:	test   edx,edx
10056203:	je     0x10056248
10056205:	test   dl,0x10
10056208:	jne    0x10056255
1005620a:	test   dl,0x40
1005620d:	jne    0x1005655a
10056213:	mov    ecx,0x1
10056218:	mov    DWORD PTR [esp+0x54],ecx
1005621c:	mov    ecx,edx
1005621e:	mov    edx,DWORD PTR [esp+0x54]
10056222:	shl    edx,cl
10056224:	shr    eax,0x10
10056227:	sub    edx,0x1
1005622a:	and    edx,ebx
1005622c:	add    edx,eax
1005622e:	mov    eax,DWORD PTR [esp+0x20]
10056232:	mov    eax,DWORD PTR [eax+edx*4]
10056235:	mov    ecx,eax
10056237:	shr    ecx,0x8
1005623a:	movzx  ecx,cl
1005623d:	movzx  edx,al
10056240:	shr    ebx,cl
10056242:	sub    edi,ecx
10056244:	test   edx,edx
10056246:	jne    0x10056205
10056248:	add    esi,0x1
1005624b:	shr    eax,0x10
1005624e:	mov    BYTE PTR [esi],al
10056250:	jmp    0x100564b5
10056255:	shr    eax,0x10
10056258:	and    edx,0xf
1005625b:	mov    DWORD PTR [esp+0x54],eax
1005625f:	je     0x1005628f
10056261:	cmp    edi,edx
10056263:	jae    0x10056279
10056265:	movzx  eax,BYTE PTR [ebp+0x1]
10056269:	add    ebp,0x1
1005626c:	mov    ecx,edi
1005626e:	shl    eax,cl
10056270:	mov    DWORD PTR [esp+0x10],ebp
10056274:	add    ebx,eax
10056276:	add    edi,0x8
10056279:	mov    ecx,edx
1005627b:	mov    eax,0x1
10056280:	shl    eax,cl
10056282:	sub    eax,0x1
10056285:	and    eax,ebx
10056287:	add    DWORD PTR [esp+0x54],eax
1005628b:	shr    ebx,cl
1005628d:	sub    edi,edx
1005628f:	cmp    edi,0xf
10056292:	jae    0x100562b8
10056294:	movzx  edx,BYTE PTR [ebp+0x1]
10056298:	add    ebp,0x1
1005629b:	movzx  eax,BYTE PTR [ebp+0x1]
1005629f:	mov    ecx,edi
100562a1:	add    ebp,0x1
100562a4:	shl    edx,cl
100562a6:	add    edi,0x8
100562a9:	mov    ecx,edi
100562ab:	shl    eax,cl
100562ad:	add    ebx,edx
100562af:	mov    DWORD PTR [esp+0x10],ebp
100562b3:	add    ebx,eax
100562b5:	add    edi,0x8
100562b8:	mov    ecx,DWORD PTR [esp+0x30]
100562bc:	mov    edx,DWORD PTR [esp+0x24]
100562c0:	and    ecx,ebx
100562c2:	mov    edx,DWORD PTR [edx+ecx*4]
100562c5:	mov    eax,edx
100562c7:	shr    eax,0x8
100562ca:	movzx  ecx,al
100562cd:	movzx  eax,dl
100562d0:	shr    ebx,cl
100562d2:	sub    edi,ecx
100562d4:	test   al,0x10
100562d6:	mov    DWORD PTR [esp+0x1c],edx
100562da:	jne    0x1005631b
100562dc:	lea    esp,[esp+0x0]
100562e0:	test   al,0x40
100562e2:	jne    0x1005654d
100562e8:	mov    ecx,eax
100562ea:	movzx  eax,WORD PTR [esp+0x1e]
100562ef:	mov    edx,0x1
100562f4:	shl    edx,cl
100562f6:	mov    ecx,DWORD PTR [esp+0x24]
100562fa:	sub    edx,0x1
100562fd:	and    edx,ebx
100562ff:	add    edx,eax
10056301:	mov    edx,DWORD PTR [ecx+edx*4]
10056304:	mov    eax,edx
10056306:	shr    eax,0x8
10056309:	movzx  ecx,al
1005630c:	movzx  eax,dl
1005630f:	shr    ebx,cl
10056311:	sub    edi,ecx
10056313:	test   al,0x10
10056315:	mov    DWORD PTR [esp+0x1c],edx
10056319:	je     0x100562e0
1005631b:	shr    edx,0x10
1005631e:	and    eax,0xf
10056321:	cmp    edi,eax
10056323:	mov    DWORD PTR [esp+0x1c],edx
10056327:	jae    0x10056355
10056329:	movzx  edx,BYTE PTR [ebp+0x1]
1005632d:	add    ebp,0x1
10056330:	mov    ecx,edi
10056332:	shl    edx,cl
10056334:	add    edi,0x8
10056337:	mov    DWORD PTR [esp+0x10],ebp
1005633b:	add    ebx,edx
1005633d:	cmp    edi,eax
1005633f:	jae    0x10056355
10056341:	movzx  edx,BYTE PTR [ebp+0x1]
10056345:	add    ebp,0x1
10056348:	mov    ecx,edi
1005634a:	shl    edx,cl
1005634c:	mov    DWORD PTR [esp+0x10],ebp
10056350:	add    ebx,edx
10056352:	add    edi,0x8
10056355:	mov    ecx,0x1
1005635a:	mov    edx,ecx
1005635c:	mov    ecx,eax
1005635e:	shl    edx,cl
10056360:	sub    edi,eax
10056362:	sub    edx,0x1
10056365:	and    edx,ebx
10056367:	mov    ecx,edx
10056369:	mov    edx,DWORD PTR [esp+0x1c]
1005636d:	add    edx,ecx
1005636f:	mov    ecx,eax
10056371:	mov    eax,esi
10056373:	sub    eax,DWORD PTR [esp+0x38]
10056377:	shr    ebx,cl
10056379:	cmp    edx,eax
1005637b:	mov    DWORD PTR [esp+0x1c],edx
1005637f:	jbe    0x100564d4
10056385:	mov    ebp,edx
10056387:	sub    ebp,eax
10056389:	cmp    ebp,DWORD PTR [esp+0x3c]
1005638d:	ja     0x10056532
10056393:	mov    ecx,DWORD PTR [esp+0x40]
10056397:	mov    eax,DWORD PTR [esp+0x44]
1005639b:	add    ecx,0xffffffff
1005639e:	test   eax,eax
100563a0:	mov    DWORD PTR [esp+0x34],ecx
100563a4:	jne    0x100563d2
100563a6:	mov    eax,DWORD PTR [esp+0x28]
100563aa:	sub    eax,ebp
100563ac:	add    ecx,eax
100563ae:	cmp    ebp,DWORD PTR [esp+0x54]
100563b2:	jae    0x1005644a
100563b8:	sub    DWORD PTR [esp+0x54],ebp
100563bc:	lea    esp,[esp+0x0]
100563c0:	mov    al,BYTE PTR [ecx+0x1]
100563c3:	add    ecx,0x1
100563c6:	add    esi,0x1
100563c9:	sub    ebp,0x1
100563cc:	mov    BYTE PTR [esi],al
100563ce:	jne    0x100563c0
100563d0:	jmp    0x10056446
100563d2:	cmp    eax,ebp
100563d4:	jae    0x10056428
100563d6:	mov    edx,eax
100563d8:	sub    edx,ebp
100563da:	add    edx,DWORD PTR [esp+0x28]
100563de:	sub    ebp,eax
100563e0:	add    ecx,edx
100563e2:	cmp    ebp,DWORD PTR [esp+0x54]
100563e6:	jae    0x1005644a
100563e8:	sub    DWORD PTR [esp+0x54],ebp
100563ec:	lea    esp,[esp+0x0]
100563f0:	mov    dl,BYTE PTR [ecx+0x1]
100563f3:	add    ecx,0x1
100563f6:	add    esi,0x1
100563f9:	sub    ebp,0x1
100563fc:	mov    BYTE PTR [esi],dl
100563fe:	jne    0x100563f0
10056400:	cmp    eax,DWORD PTR [esp+0x54]
10056404:	mov    ecx,DWORD PTR [esp+0x34]
10056408:	jae    0x1005644a
1005640a:	sub    DWORD PTR [esp+0x54],eax
1005640e:	mov    ebp,eax
10056410:	mov    al,BYTE PTR [ecx+0x1]
10056413:	add    ecx,0x1
10056416:	add    esi,0x1
10056419:	sub    ebp,0x1
1005641c:	mov    BYTE PTR [esi],al
1005641e:	jne    0x10056410
10056420:	mov    ecx,esi
10056422:	sub    ecx,DWORD PTR [esp+0x1c]
10056426:	jmp    0x1005644a
10056428:	sub    eax,ebp
1005642a:	add    ecx,eax
1005642c:	cmp    ebp,DWORD PTR [esp+0x54]
10056430:	jae    0x1005644a
10056432:	sub    DWORD PTR [esp+0x54],ebp
10056436:	mov    al,BYTE PTR [ecx+0x1]
10056439:	add    ecx,0x1
1005643c:	add    esi,0x1
1005643f:	sub    ebp,0x1
10056442:	mov    BYTE PTR [esi],al
10056444:	jne    0x10056436
10056446:	mov    ecx,esi
10056448:	sub    ecx,edx
1005644a:	mov    eax,DWORD PTR [esp+0x54]
1005644e:	cmp    eax,0x2
10056451:	jbe    0x10056491
10056453:	lea    edx,[eax-0x3]
10056456:	mov    eax,0xaaaaaaab
1005645b:	mul    edx
1005645d:	mov    ebp,edx
1005645f:	shr    ebp,1
10056461:	add    ebp,0x1
10056464:	movzx  eax,BYTE PTR [ecx+0x1]
10056468:	sub    DWORD PTR [esp+0x54],0x3
1005646d:	add    ecx,0x1
10056470:	add    esi,0x1
10056473:	mov    BYTE PTR [esi],al
10056475:	mov    dl,BYTE PTR [ecx+0x1]
10056478:	add    ecx,0x1
1005647b:	add    esi,0x1
1005647e:	mov    BYTE PTR [esi],dl
10056480:	movzx  eax,BYTE PTR [ecx+0x1]
10056484:	add    ecx,0x1
10056487:	add    esi,0x1
1005648a:	sub    ebp,0x1
1005648d:	mov    BYTE PTR [esi],al
1005648f:	jne    0x10056464
10056491:	mov    ebp,DWORD PTR [esp+0x54]
10056495:	test   ebp,ebp
10056497:	je     0x100564b1
10056499:	mov    dl,BYTE PTR [ecx+0x1]
1005649c:	add    ecx,0x1
1005649f:	add    esi,0x1
100564a2:	cmp    ebp,0x1
100564a5:	mov    BYTE PTR [esi],dl
100564a7:	jbe    0x100564b1
100564a9:	mov    al,BYTE PTR [ecx+0x1]
100564ac:	add    esi,0x1
100564af:	mov    BYTE PTR [esi],al
100564b1:	mov    ebp,DWORD PTR [esp+0x10]
100564b5:	mov    edx,DWORD PTR [esp+0x14]
100564b9:	cmp    ebp,edx
100564bb:	jae    0x10056584
100564c1:	cmp    esi,DWORD PTR [esp+0x2c]
100564c5:	jae    0x10056584
100564cb:	mov    edx,DWORD PTR [esp+0x48]
100564cf:	jmp    0x100561c0
100564d4:	mov    eax,esi
100564d6:	sub    eax,edx
100564d8:	jmp    0x100564e0
100564da:	lea    ebx,[ebx+0x0]
100564e0:	movzx  ecx,BYTE PTR [eax+0x1]
100564e4:	add    eax,0x1
100564e7:	mov    BYTE PTR [esi+0x1],cl
100564ea:	mov    dl,BYTE PTR [eax+0x1]
100564ed:	add    esi,0x1
100564f0:	add    eax,0x1
100564f3:	add    esi,0x1
100564f6:	mov    BYTE PTR [esi],dl
100564f8:	movzx  ecx,BYTE PTR [eax+0x1]
100564fc:	add    eax,0x1
100564ff:	add    esi,0x1
10056502:	mov    BYTE PTR [esi],cl
10056504:	mov    ecx,DWORD PTR [esp+0x54]
10056508:	sub    ecx,0x3
1005650b:	cmp    ecx,0x2
1005650e:	mov    DWORD PTR [esp+0x54],ecx
10056512:	ja     0x100564e0
10056514:	test   ecx,ecx
10056516:	je     0x100564b5
10056518:	mov    dl,BYTE PTR [eax+0x1]
1005651b:	add    eax,0x1
1005651e:	add    esi,0x1
10056521:	cmp    ecx,0x1
10056524:	mov    BYTE PTR [esi],dl
10056526:	jbe    0x100564b5
10056528:	mov    al,BYTE PTR [eax+0x1]
1005652b:	add    esi,0x1
1005652e:	mov    BYTE PTR [esi],al
10056530:	jmp    0x100564b5
10056532:	mov    ecx,DWORD PTR [esp+0x50]
10056536:	mov    edx,DWORD PTR [esp+0x18]
1005653a:	mov    ebp,DWORD PTR [esp+0x10]
1005653e:	mov    DWORD PTR [ecx+0x18],0x100688b8
10056545:	mov    DWORD PTR [edx],0x1b
1005654b:	jmp    0x10056580
1005654d:	mov    eax,DWORD PTR [esp+0x50]
10056551:	mov    DWORD PTR [eax+0x18],0x100688d8
10056558:	jmp    0x10056576
1005655a:	test   dl,0x20
1005655d:	je     0x1005656b
1005655f:	mov    edx,DWORD PTR [esp+0x18]
10056563:	mov    DWORD PTR [edx],0xb
10056569:	jmp    0x10056580
1005656b:	mov    eax,DWORD PTR [esp+0x50]
1005656f:	mov    DWORD PTR [eax+0x18],0x100688f0
10056576:	mov    ecx,DWORD PTR [esp+0x18]
1005657a:	mov    DWORD PTR [ecx],0x1b
10056580:	mov    edx,DWORD PTR [esp+0x14]
10056584:	mov    eax,edi
10056586:	shr    eax,0x3
10056589:	sub    ebp,eax
1005658b:	add    eax,eax
1005658d:	add    eax,eax
1005658f:	add    eax,eax
10056591:	sub    edi,eax
10056593:	mov    ecx,edi
10056595:	mov    eax,0x1
1005659a:	shl    eax,cl
1005659c:	mov    ecx,DWORD PTR [esp+0x50]
100565a0:	sub    edx,ebp
100565a2:	add    edx,0x5
100565a5:	sub    eax,0x1
100565a8:	and    ebx,eax
100565aa:	lea    eax,[ebp+0x1]
100565ad:	mov    DWORD PTR [ecx],eax
100565af:	lea    eax,[esi+0x1]
100565b2:	mov    DWORD PTR [ecx+0xc],eax
100565b5:	mov    eax,DWORD PTR [esp+0x2c]
100565b9:	sub    eax,esi
100565bb:	add    eax,0x101
100565c0:	mov    DWORD PTR [ecx+0x10],eax
100565c3:	mov    eax,DWORD PTR [esp+0x18]
100565c7:	mov    DWORD PTR [ecx+0x4],edx
100565ca:	mov    DWORD PTR [eax+0x3c],edi
100565cd:	pop    edi
100565ce:	pop    esi
100565cf:	pop    ebp
100565d0:	mov    DWORD PTR [eax+0x38],ebx
100565d3:	pop    ebx
100565d4:	add    esp,0x3c
100565d7:	ret    
100565d8:	int3   
100565d9:	int3   
100565da:	int3   
100565db:	int3   
100565dc:	int3   
100565dd:	int3   
100565de:	int3   
100565df:	int3   
100565e0:	sub    esp,0x8c
100565e6:	mov    eax,ds:0x1007e030
100565eb:	xor    eax,esp
100565ed:	mov    DWORD PTR [esp+0x88],eax
100565f4:	mov    eax,DWORD PTR [esp+0xa4]
100565fb:	mov    edx,DWORD PTR [esp+0xa0]
10056602:	push   ebx
10056603:	mov    ebx,DWORD PTR [esp+0xa0]
1005660a:	push   ebp
1005660b:	mov    ebp,DWORD PTR [esp+0x9c]
10056612:	push   esi
10056613:	mov    esi,DWORD PTR [esp+0xa4]
1005661a:	mov    DWORD PTR [esp+0x18],eax
1005661e:	xor    eax,eax
10056620:	test   esi,esi
10056622:	mov    DWORD PTR [esp+0x50],ebp
10056626:	mov    DWORD PTR [esp+0x38],ebx
1005662a:	mov    DWORD PTR [esp+0x48],edx
1005662e:	mov    DWORD PTR [esp+0x54],eax
10056632:	mov    DWORD PTR [esp+0x58],eax
10056636:	mov    DWORD PTR [esp+0x5c],eax
1005663a:	mov    DWORD PTR [esp+0x60],eax
1005663e:	mov    DWORD PTR [esp+0x64],eax
10056642:	mov    DWORD PTR [esp+0x68],eax
10056646:	mov    DWORD PTR [esp+0x6c],eax
1005664a:	mov    DWORD PTR [esp+0x70],eax
1005664e:	jbe    0x10056666
10056650:	movzx  ecx,WORD PTR [ebp+eax*2+0x0]
10056655:	add    WORD PTR [esp+ecx*2+0x54],0x1
1005665b:	lea    ecx,[esp+ecx*2+0x54]
1005665f:	add    eax,0x1
10056662:	cmp    eax,esi
10056664:	jb     0x10056650
10056666:	mov    eax,DWORD PTR [edx]
10056668:	mov    DWORD PTR [esp+0x10],eax
1005666c:	mov    ecx,0xf
10056671:	cmp    WORD PTR [esp+ecx*2+0x54],0x0
10056677:	jne    0x10056681
10056679:	sub    ecx,0x1
1005667c:	cmp    ecx,0x1
1005667f:	jae    0x10056671
10056681:	cmp    eax,ecx
10056683:	mov    DWORD PTR [esp+0x1c],ecx
10056687:	jbe    0x1005668f
10056689:	mov    DWORD PTR [esp+0x10],ecx
1005668d:	mov    eax,ecx
1005668f:	test   ecx,ecx
10056691:	jne    0x100566d4
10056693:	mov    WORD PTR [esp+0xe],cx
10056698:	mov    ecx,DWORD PTR [ebx]
1005669a:	mov    BYTE PTR [esp+0xc],0x40
1005669f:	mov    BYTE PTR [esp+0xd],0x1
100566a4:	mov    eax,DWORD PTR [esp+0xc]
100566a8:	mov    DWORD PTR [ecx],eax
100566aa:	add    DWORD PTR [ebx],0x4
100566ad:	mov    ecx,DWORD PTR [ebx]
100566af:	pop    esi
100566b0:	mov    DWORD PTR [ecx],eax
100566b2:	add    DWORD PTR [ebx],0x4
100566b5:	pop    ebp
100566b6:	mov    DWORD PTR [edx],0x1
100566bc:	xor    eax,eax
100566be:	pop    ebx
100566bf:	mov    ecx,DWORD PTR [esp+0x88]
100566c6:	xor    ecx,esp
100566c8:	call   0x10042e97
100566cd:	add    esp,0x8c
100566d3:	ret    
100566d4:	mov    esi,0x1
100566d9:	lea    esp,[esp+0x0]
100566e0:	cmp    WORD PTR [esp+esi*2+0x54],0x0
100566e6:	jne    0x10056724
100566e8:	cmp    WORD PTR [esp+esi*2+0x56],0x0
100566ee:	jne    0x10056712
100566f0:	cmp    WORD PTR [esp+esi*2+0x58],0x0
100566f6:	jne    0x10056717
100566f8:	cmp    WORD PTR [esp+esi*2+0x5a],0x0
100566fe:	jne    0x1005671c
10056700:	cmp    WORD PTR [esp+esi*2+0x5c],0x0
10056706:	jne    0x10056721
10056708:	add    esi,0x5
1005670b:	cmp    esi,0xf
1005670e:	jbe    0x100566e0
10056710:	jmp    0x10056724
10056712:	add    esi,0x1
10056715:	jmp    0x10056724
10056717:	add    esi,0x2
1005671a:	jmp    0x10056724
1005671c:	add    esi,0x3
1005671f:	jmp    0x10056724
10056721:	add    esi,0x4
10056724:	cmp    eax,esi
10056726:	jae    0x1005672c
10056728:	mov    DWORD PTR [esp+0x10],esi
1005672c:	mov    edx,0x1
10056731:	mov    eax,edx
10056733:	push   edi
10056734:	movzx  edi,WORD PTR [esp+eax*2+0x58]
10056739:	add    edx,edx
1005673b:	sub    edx,edi
1005673d:	js     0x1005675b
1005673f:	add    eax,0x1
10056742:	cmp    eax,0xf
10056745:	jbe    0x10056734
10056747:	test   edx,edx
10056749:	mov    edi,DWORD PTR [esp+0xa0]
10056750:	jle    0x10056763
10056752:	test   edi,edi
10056754:	je     0x1005675b
10056756:	cmp    ecx,0x1
10056759:	je     0x10056763
1005675b:	or     eax,0xffffffff
1005675e:	jmp    0x10056ab5
10056763:	mov    WORD PTR [esp+0x7a],0x0
1005676a:	mov    eax,0x2
1005676f:	nop
10056770:	mov    cx,WORD PTR [esp+eax*1+0x78]
10056775:	add    cx,WORD PTR [esp+eax*1+0x58]
1005677a:	add    eax,0x2
1005677d:	cmp    eax,0x1e
10056780:	mov    WORD PTR [esp+eax*1+0x78],cx
10056785:	jb     0x10056770
10056787:	mov    ecx,DWORD PTR [esp+0x1c]
1005678b:	xor    eax,eax
1005678d:	cmp    DWORD PTR [esp+0xa8],eax
10056794:	jbe    0x100567c7
10056796:	cmp    WORD PTR [ebp+eax*2+0x0],0x0
1005679c:	je     0x100567bb
1005679e:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
100567a3:	movzx  edx,WORD PTR [esp+edx*2+0x78]
100567a8:	mov    WORD PTR [ecx+edx*2],ax
100567ac:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
100567b1:	add    WORD PTR [esp+edx*2+0x78],0x1
100567b7:	lea    edx,[esp+edx*2+0x78]
100567bb:	add    eax,0x1
100567be:	cmp    eax,DWORD PTR [esp+0xa8]
100567c5:	jb     0x10056796
100567c7:	mov    eax,edi
100567c9:	sub    eax,0x0
100567cc:	mov    edx,0xffffffff
100567d1:	je     0x10056814
100567d3:	sub    eax,0x1
100567d6:	je     0x100567ee
100567d8:	mov    DWORD PTR [esp+0x2c],0x1006b5d8
100567e0:	mov    DWORD PTR [esp+0x38],0x1006b618
100567e8:	mov    DWORD PTR [esp+0x30],edx
100567ec:	jmp    0x10056824
100567ee:	mov    eax,0x1006b558
100567f3:	sub    eax,0x202
100567f8:	mov    DWORD PTR [esp+0x2c],eax
100567fc:	mov    eax,0x1006b598
10056801:	sub    eax,0x202
10056806:	mov    DWORD PTR [esp+0x38],eax
1005680a:	mov    DWORD PTR [esp+0x30],0x100
10056812:	jmp    0x10056824
10056814:	mov    DWORD PTR [esp+0x38],ecx
10056818:	mov    DWORD PTR [esp+0x2c],ecx
1005681c:	mov    DWORD PTR [esp+0x30],0x13
10056824:	mov    eax,DWORD PTR [ebx]
10056826:	mov    ecx,DWORD PTR [esp+0x14]
1005682a:	mov    DWORD PTR [esp+0x24],eax
1005682e:	mov    eax,0x1
10056833:	shl    eax,cl
10056835:	xor    ebp,ebp
10056837:	xor    ebx,ebx
10056839:	cmp    edi,0x1
1005683c:	lea    ecx,[eax-0x1]
1005683f:	mov    DWORD PTR [esp+0x18],esi
10056843:	mov    DWORD PTR [esp+0x34],edx
10056847:	mov    DWORD PTR [esp+0x44],eax
1005684b:	mov    DWORD PTR [esp+0x28],eax
1005684f:	mov    DWORD PTR [esp+0x40],ecx
10056853:	jne    0x10056860
10056855:	cmp    eax,0x5b0
1005685a:	jae    0x10056ab0
10056860:	mov    edx,DWORD PTR [esp+0x1c]
10056864:	mov    DWORD PTR [esp+0x1c],edx
10056868:	jmp    0x10056870
1005686a:	lea    ebx,[ebx+0x0]
10056870:	mov    al,BYTE PTR [esp+0x18]
10056874:	mov    esi,DWORD PTR [esp+0x1c]
10056878:	mov    edx,DWORD PTR [esp+0x30]
1005687c:	sub    al,bl
1005687e:	mov    BYTE PTR [esp+0x11],al
10056882:	movzx  eax,WORD PTR [esi]
10056885:	movzx  ecx,ax
10056888:	cmp    ecx,edx
1005688a:	jge    0x10056898
1005688c:	mov    BYTE PTR [esp+0x10],0x0
10056891:	mov    WORD PTR [esp+0x12],ax
10056896:	jmp    0x100568c5
10056898:	jle    0x100568b9
1005689a:	movzx  eax,WORD PTR [esi]
1005689d:	mov    ecx,DWORD PTR [esp+0x38]
100568a1:	add    eax,eax
100568a3:	mov    dl,BYTE PTR [eax+ecx*1]
100568a6:	mov    ecx,DWORD PTR [esp+0x2c]
100568aa:	mov    BYTE PTR [esp+0x10],dl
100568ae:	mov    dx,WORD PTR [eax+ecx*1]
100568b2:	mov    WORD PTR [esp+0x12],dx
100568b7:	jmp    0x100568c5
100568b9:	mov    BYTE PTR [esp+0x10],0x60
100568be:	mov    WORD PTR [esp+0x12],0x0
100568c5:	mov    ecx,DWORD PTR [esp+0x18]
100568c9:	mov    eax,DWORD PTR [esp+0x44]
100568cd:	sub    ecx,ebx
100568cf:	mov    edx,0x1
100568d4:	shl    edx,cl
100568d6:	mov    ecx,ebx
100568d8:	mov    edi,ebp
100568da:	shr    edi,cl
100568dc:	mov    ecx,DWORD PTR [esp+0x24]
100568e0:	mov    DWORD PTR [esp+0x50],eax
100568e4:	lea    esi,[edx*4+0x0]
100568eb:	add    edi,eax
100568ed:	lea    ecx,[ecx+edi*4]
100568f0:	mov    edi,DWORD PTR [esp+0x10]
100568f4:	sub    eax,edx
100568f6:	sub    ecx,esi
100568f8:	test   eax,eax
100568fa:	mov    DWORD PTR [ecx],edi
100568fc:	jne    0x100568f4
100568fe:	mov    edx,DWORD PTR [esp+0x18]
10056902:	lea    ecx,[edx-0x1]
10056905:	mov    eax,0x1
1005690a:	shl    eax,cl
1005690c:	test   ebp,eax
1005690e:	je     0x10056916
10056910:	shr    eax,1
10056912:	test   ebp,eax
10056914:	jne    0x10056910
10056916:	test   eax,eax
10056918:	je     0x10056925
1005691a:	lea    ecx,[eax-0x1]
1005691d:	and    ecx,ebp
1005691f:	add    ecx,eax
10056921:	mov    ebp,ecx
10056923:	jmp    0x10056927
10056925:	xor    ebp,ebp
10056927:	add    WORD PTR [esp+edx*2+0x58],0xffff
1005692e:	movzx  eax,WORD PTR [esp+edx*2+0x58]
10056933:	add    DWORD PTR [esp+0x1c],0x2
10056938:	test   ax,ax
1005693b:	jne    0x1005695a
1005693d:	cmp    edx,DWORD PTR [esp+0x20]
10056941:	je     0x10056a23
10056947:	mov    edx,DWORD PTR [esp+0x1c]
1005694b:	movzx  eax,WORD PTR [edx]
1005694e:	mov    ecx,DWORD PTR [esp+0x54]
10056952:	movzx  edx,WORD PTR [ecx+eax*2]
10056956:	mov    DWORD PTR [esp+0x18],edx
1005695a:	cmp    edx,DWORD PTR [esp+0x14]
1005695e:	jbe    0x10056870
10056964:	mov    esi,DWORD PTR [esp+0x40]
10056968:	and    esi,ebp
1005696a:	cmp    esi,DWORD PTR [esp+0x34]
1005696e:	mov    DWORD PTR [esp+0x48],esi
10056972:	je     0x10056870
10056978:	test   ebx,ebx
1005697a:	jne    0x10056980
1005697c:	mov    ebx,DWORD PTR [esp+0x14]
10056980:	mov    eax,DWORD PTR [esp+0x24]
10056984:	mov    ecx,DWORD PTR [esp+0x50]
10056988:	lea    edx,[eax+ecx*4]
1005698b:	mov    ecx,DWORD PTR [esp+0x18]
1005698f:	sub    ecx,ebx
10056991:	mov    DWORD PTR [esp+0x24],edx
10056995:	mov    eax,0x1
1005699a:	lea    edx,[ebx+ecx*1]
1005699d:	shl    eax,cl
1005699f:	cmp    edx,DWORD PTR [esp+0x20]
100569a3:	jae    0x100569ce
100569a5:	lea    esi,[esp+edx*2+0x58]
100569a9:	lea    esp,[esp+0x0]
100569b0:	movzx  edi,WORD PTR [esi]
100569b3:	sub    eax,edi
100569b5:	test   eax,eax
100569b7:	jle    0x100569ca
100569b9:	add    edx,0x1
100569bc:	add    ecx,0x1
100569bf:	add    esi,0x2
100569c2:	add    eax,eax
100569c4:	cmp    edx,DWORD PTR [esp+0x20]
100569c8:	jb     0x100569b0
100569ca:	mov    esi,DWORD PTR [esp+0x48]
100569ce:	mov    eax,0x1
100569d3:	shl    eax,cl
100569d5:	add    DWORD PTR [esp+0x28],eax
100569d9:	cmp    DWORD PTR [esp+0xa0],0x1
100569e1:	mov    DWORD PTR [esp+0x44],eax
100569e5:	jne    0x100569f5
100569e7:	cmp    DWORD PTR [esp+0x28],0x5b0
100569ef:	jae    0x10056ab0
100569f5:	mov    edx,esi
100569f7:	mov    esi,DWORD PTR [esp+0x3c]
100569fb:	mov    eax,DWORD PTR [esi]
100569fd:	mov    BYTE PTR [eax+edx*4],cl
10056a00:	mov    ecx,DWORD PTR [esi]
10056a02:	mov    al,BYTE PTR [esp+0x14]
10056a06:	mov    BYTE PTR [ecx+edx*4+0x1],al
10056a0a:	mov    eax,DWORD PTR [esi]
10056a0c:	mov    ecx,DWORD PTR [esp+0x24]
10056a10:	sub    ecx,eax
10056a12:	sar    ecx,0x2
10056a15:	mov    DWORD PTR [esp+0x34],edx
10056a19:	mov    WORD PTR [eax+edx*4+0x2],cx
10056a1e:	jmp    0x10056870
10056a23:	mov    edi,DWORD PTR [esp+0x3c]
10056a27:	mov    al,dl
10056a29:	sub    al,bl
10056a2b:	test   ebp,ebp
10056a2d:	mov    BYTE PTR [esp+0x10],0x40
10056a32:	mov    BYTE PTR [esp+0x11],al
10056a36:	mov    WORD PTR [esp+0x12],0x0
10056a3d:	je     0x10056a95
10056a3f:	mov    esi,DWORD PTR [esp+0x24]
10056a43:	test   ebx,ebx
10056a45:	je     0x10056a65
10056a47:	mov    ecx,DWORD PTR [esp+0x40]
10056a4b:	and    ecx,ebp
10056a4d:	cmp    ecx,DWORD PTR [esp+0x34]
10056a51:	je     0x10056a65
10056a53:	mov    eax,DWORD PTR [esp+0x14]
10056a57:	mov    esi,DWORD PTR [edi]
10056a59:	xor    ebx,ebx
10056a5b:	mov    DWORD PTR [esp+0x18],eax
10056a5f:	mov    BYTE PTR [esp+0x11],al
10056a63:	mov    edx,eax
10056a65:	mov    ecx,ebx
10056a67:	mov    eax,ebp
10056a69:	shr    eax,cl
10056a6b:	mov    ecx,DWORD PTR [esp+0x10]
10056a6f:	mov    DWORD PTR [esi+eax*4],ecx
10056a72:	lea    ecx,[edx-0x1]
10056a75:	mov    eax,0x1
10056a7a:	shl    eax,cl
10056a7c:	test   ebp,eax
10056a7e:	je     0x10056a86
10056a80:	shr    eax,1
10056a82:	test   ebp,eax
10056a84:	jne    0x10056a80
10056a86:	test   eax,eax
10056a88:	je     0x10056a95
10056a8a:	lea    ecx,[eax-0x1]
10056a8d:	and    ecx,ebp
10056a8f:	add    ecx,eax
10056a91:	mov    ebp,ecx
10056a93:	jne    0x10056a43
10056a95:	mov    edx,DWORD PTR [esp+0x28]
10056a99:	mov    ecx,DWORD PTR [esp+0x4c]
10056a9d:	lea    eax,[edx*4+0x0]
10056aa4:	add    DWORD PTR [edi],eax
10056aa6:	mov    edx,DWORD PTR [esp+0x14]
10056aaa:	mov    DWORD PTR [ecx],edx
10056aac:	xor    eax,eax
10056aae:	jmp    0x10056ab5
10056ab0:	mov    eax,0x1
10056ab5:	mov    ecx,DWORD PTR [esp+0x98]
10056abc:	pop    edi
10056abd:	pop    esi
10056abe:	pop    ebp
10056abf:	pop    ebx
10056ac0:	xor    ecx,esp
10056ac2:	call   0x10042e97
10056ac7:	add    esp,0x8c
10056acd:	ret    
10056ace:	jmp    DWORD PTR ds:0x10066404
10056ad4:	jmp    DWORD PTR ds:0x10066218
10056ada:	jmp    DWORD PTR ds:0x10066278
10056ae0:	push   ebp
10056ae1:	mov    ebp,esp
10056ae3:	sub    esp,0xc
10056ae6:	mov    eax,ds:0x1007e030
10056aeb:	xor    eax,ebp
10056aed:	mov    DWORD PTR [ebp-0x4],eax
10056af0:	push   esi
10056af1:	xor    esi,esi
10056af3:	call   DWORD PTR ds:0x1006606c
10056af9:	push   0x7
10056afb:	lea    ecx,[ebp-0xc]
10056afe:	push   ecx
10056aff:	push   0x1004
10056b04:	push   eax
10056b05:	call   DWORD PTR ds:0x1006623c
10056b0b:	test   eax,eax
10056b0d:	je     0x10056b2e
10056b0f:	mov    cl,BYTE PTR [ebp-0xc]
10056b12:	test   cl,cl
10056b14:	lea    eax,[ebp-0xc]
10056b17:	je     0x10056b2e
10056b19:	imul   esi,esi,0xa
10056b1c:	movsx  ecx,cl
10056b1f:	inc    eax
10056b20:	lea    esi,[esi+ecx*1-0x30]
10056b24:	mov    cl,BYTE PTR [eax]
10056b26:	test   cl,cl
10056b28:	jne    0x10056b19
10056b2a:	test   esi,esi
10056b2c:	jne    0x10056b36
10056b2e:	call   DWORD PTR ds:0x100661e0
10056b34:	mov    esi,eax
10056b36:	mov    ecx,DWORD PTR [ebp-0x4]
10056b39:	mov    eax,esi
10056b3b:	xor    ecx,ebp
10056b3d:	pop    esi
10056b3e:	call   0x10042e97
10056b43:	leave  
10056b44:	ret    
10056b45:	push   0x3
10056b47:	pop    eax
10056b48:	ret    
10056b49:	push   ebp
10056b4a:	mov    ebp,esp
10056b4c:	sub    esp,0x98
10056b52:	mov    eax,ds:0x1007e030
10056b57:	xor    eax,ebp
10056b59:	mov    DWORD PTR [ebp-0x4],eax
10056b5c:	lea    eax,[ebp-0x98]
10056b62:	push   eax
10056b63:	mov    DWORD PTR [ebp-0x98],0x94
10056b6d:	call   DWORD PTR ds:0x100661a8
10056b73:	cmp    DWORD PTR [ebp-0x88],0x2
10056b7a:	jne    0x10056b8a
10056b7c:	cmp    DWORD PTR [ebp-0x94],0x5
10056b83:	mov    eax,0x10056b45
10056b88:	jae    0x10056b8f
10056b8a:	mov    eax,0x10056ae0
10056b8f:	push   eax
10056b90:	push   0x1007efec
10056b95:	call   DWORD PTR ds:0x1006621c
10056b9b:	call   DWORD PTR ds:0x1007efec
10056ba1:	mov    ecx,DWORD PTR [ebp-0x4]
10056ba4:	xor    ecx,ebp
10056ba6:	call   0x10042e97
10056bab:	leave  
10056bac:	ret    
10056bad:	push   esi
10056bae:	mov    esi,ecx
10056bb0:	mov    eax,DWORD PTR [esi]
10056bb2:	test   eax,eax
10056bb4:	je     0x10056bc0
10056bb6:	push   eax
10056bb7:	call   0x10043508
10056bbc:	and    DWORD PTR [esi],0x0
10056bbf:	pop    ecx
10056bc0:	and    DWORD PTR [esi+0x4],0x0
10056bc4:	and    DWORD PTR [esi+0x8],0x0
10056bc8:	pop    esi
10056bc9:	ret    
10056bca:	mov    eax,DWORD PTR [esp+0x4]
10056bce:	test   eax,eax
10056bd0:	jne    0x10056bd9
10056bd2:	mov    eax,0x80070057
10056bd7:	jmp    0x10056bea
10056bd9:	cmp    DWORD PTR [eax],0x2c
10056bdc:	jne    0x10056bd2
10056bde:	and    DWORD PTR [eax+0x1c],0x0
10056be2:	lea    ecx,[eax+0x4]
10056be5:	call   0x1001436b
10056bea:	ret    0x4
10056bed:	mov    eax,DWORD PTR [esp+0x4]
10056bf1:	test   eax,eax
10056bf3:	jl     0x10056c02
10056bf5:	cmp    eax,DWORD PTR [ecx+0x4]
10056bf8:	jge    0x10056c02
10056bfa:	mov    ecx,DWORD PTR [ecx]
10056bfc:	lea    eax,[ecx+eax*2]
10056bff:	ret    0x4
10056c02:	push   0x0
10056c04:	push   0x0
10056c06:	push   0x1
10056c08:	push   0xc000008c
10056c0d:	call   DWORD PTR ds:0x10066128
10056c13:	int3   
10056c14:	mov    eax,DWORD PTR [esp+0x4]
10056c18:	test   eax,eax
10056c1a:	jl     0x10056c29
10056c1c:	cmp    eax,DWORD PTR [ecx+0x4]
10056c1f:	jge    0x10056c29
10056c21:	mov    ecx,DWORD PTR [ecx]
10056c23:	lea    eax,[ecx+eax*4]
10056c26:	ret    0x4
10056c29:	push   0x0
10056c2b:	push   0x0
10056c2d:	push   0x1
10056c2f:	push   0xc000008c
10056c34:	call   DWORD PTR ds:0x10066128
10056c3a:	int3   
10056c3b:	push   esi
10056c3c:	mov    esi,ecx
10056c3e:	lea    ecx,[esi+0x4]
10056c41:	call   0x10014357
10056c46:	xor    eax,eax
10056c48:	mov    DWORD PTR [esi+0x20],eax
10056c4b:	mov    DWORD PTR [esi+0x24],eax
10056c4e:	mov    DWORD PTR [esi+0x28],eax
10056c51:	mov    eax,esi
10056c53:	pop    esi
10056c54:	ret    
10056c55:	push   esi
10056c56:	mov    esi,DWORD PTR [esp+0x8]
10056c5a:	test   esi,esi
10056c5c:	jne    0x10056c65
10056c5e:	mov    eax,0x80070057
10056c63:	jmp    0x10056cb1
10056c65:	mov    eax,DWORD PTR [esi]
10056c67:	test   eax,eax
10056c69:	je     0x10056caf
10056c6b:	cmp    eax,0x2c
10056c6e:	jne    0x10056c5e
10056c70:	push   edi
10056c71:	xor    edi,edi
10056c73:	cmp    DWORD PTR [esi+0x24],edi
10056c76:	jle    0x10056c99
10056c78:	push   ebx
10056c79:	lea    ebx,[esi+0x20]
10056c7c:	push   edi
10056c7d:	mov    ecx,ebx
10056c7f:	call   0x10056bed
10056c84:	movzx  eax,WORD PTR [eax]
10056c87:	push   DWORD PTR [esp+0x14]
10056c8b:	push   eax
10056c8c:	call   DWORD PTR ds:0x10066368
10056c92:	inc    edi
10056c93:	cmp    edi,DWORD PTR [esi+0x24]
10056c96:	jl     0x10056c7c
10056c98:	pop    ebx
10056c99:	lea    ecx,[esi+0x20]
10056c9c:	call   0x10056bad
10056ca1:	lea    eax,[esi+0x4]
10056ca4:	push   eax
10056ca5:	call   DWORD PTR ds:0x10066138
10056cab:	and    DWORD PTR [esi],0x0
10056cae:	pop    edi
10056caf:	xor    eax,eax
10056cb1:	pop    esi
10056cb2:	ret    0x8
10056cb5:	push   esi
10056cb6:	mov    esi,ecx
10056cb8:	lea    ecx,[esi+0x18]
10056cbb:	call   0x10014357
10056cc0:	xor    eax,eax
10056cc2:	mov    DWORD PTR [esi+0x30],eax
10056cc5:	mov    DWORD PTR [esi+0x34],eax
10056cc8:	mov    DWORD PTR [esi+0x38],eax
10056ccb:	mov    eax,esi
10056ccd:	pop    esi
10056cce:	ret    
10056ccf:	push   esi
10056cd0:	mov    esi,ecx
10056cd2:	lea    eax,[esi+0x18]
10056cd5:	push   eax
10056cd6:	call   DWORD PTR ds:0x10066138
10056cdc:	lea    ecx,[esi+0x30]
10056cdf:	pop    esi
10056ce0:	jmp    0x10056bad
10056ce5:	push   ebp
10056ce6:	mov    ebp,esp
10056ce8:	push   ecx
10056ce9:	push   ecx
10056cea:	push   esi
10056ceb:	mov    esi,ecx
10056ced:	lea    eax,[esi+0x18]
10056cf0:	push   eax
10056cf1:	mov    DWORD PTR [ebp-0x8],eax
10056cf4:	call   DWORD PTR ds:0x100660f0
10056cfa:	mov    eax,DWORD PTR [esi+0x34]
10056cfd:	mov    ecx,DWORD PTR [ebp+0x8]
10056d00:	cmp    ecx,eax
10056d02:	mov    BYTE PTR [ebp-0x4],0x1
10056d06:	jg     0x10056d2c
10056d08:	test   ecx,ecx
10056d0a:	jl     0x10056d2c
10056d0c:	cmp    ecx,eax
10056d0e:	jne    0x10056d1f
10056d10:	mov    esi,DWORD PTR [esi+0x8]
10056d13:	lea    ecx,[ebp-0x8]
10056d16:	call   0x10010c9f
10056d1b:	mov    eax,esi
10056d1d:	jmp    0x10056d36
10056d1f:	push   ecx
10056d20:	lea    ecx,[esi+0x30]
10056d23:	call   0x10056c14
10056d28:	mov    esi,DWORD PTR [eax]
10056d2a:	jmp    0x10056d13
10056d2c:	lea    ecx,[ebp-0x8]
10056d2f:	call   0x10010c9f
10056d34:	xor    eax,eax
10056d36:	pop    esi
10056d37:	leave  
10056d38:	ret    0x4
10056d3b:	push   esi
10056d3c:	mov    esi,ecx
10056d3e:	call   0x10056c3b
10056d43:	push   esi
10056d44:	mov    DWORD PTR [esi],0x2c
10056d4a:	call   0x10056bca
10056d4f:	test   eax,eax
10056d51:	jge    0x10056d5d
10056d53:	mov    BYTE PTR ds:0x10080c00,0x1
10056d5a:	and    DWORD PTR [esi],0x0
10056d5d:	mov    eax,esi
10056d5f:	pop    esi
10056d60:	ret    
10056d61:	push   ebp
10056d62:	lea    ebp,[esp-0x78]
10056d66:	sub    esp,0x98
10056d6c:	mov    eax,ds:0x1007e030
10056d71:	xor    eax,ebp
10056d73:	mov    DWORD PTR [ebp+0x74],eax
10056d76:	push   esi
10056d77:	mov    esi,ecx
10056d79:	call   0x10056cb5
10056d7e:	mov    eax,0x10000000
10056d83:	push   0x94
10056d88:	mov    DWORD PTR [esi+0x8],eax
10056d8b:	mov    DWORD PTR [esi+0x4],eax
10056d8e:	lea    eax,[ebp-0x20]
10056d91:	push   0x0
10056d93:	push   eax
10056d94:	mov    DWORD PTR [esi],0x3c
10056d9a:	mov    BYTE PTR [esi+0xc],0x0
10056d9e:	call   0x10045c00
10056da3:	add    esp,0xc
10056da6:	lea    eax,[ebp-0x20]
10056da9:	push   eax
10056daa:	mov    DWORD PTR [ebp-0x20],0x94
10056db1:	call   DWORD PTR ds:0x100661a8
10056db7:	cmp    DWORD PTR [ebp-0x10],0x2
10056dbb:	jne    0x10056dc5
10056dbd:	cmp    DWORD PTR [ebp-0x1c],0x5
10056dc1:	jb     0x10056ddd
10056dc3:	jmp    0x10056dd9
10056dc5:	cmp    DWORD PTR [ebp-0x10],0x1
10056dc9:	jne    0x10056ddd
10056dcb:	cmp    DWORD PTR [ebp-0x1c],0x4
10056dcf:	ja     0x10056dd9
10056dd1:	jne    0x10056ddd
10056dd3:	cmp    DWORD PTR [ebp-0x18],0x0
10056dd7:	jbe    0x10056ddd
10056dd9:	mov    BYTE PTR [esi+0xc],0x1
10056ddd:	lea    ecx,[esi+0x18]
10056de0:	mov    DWORD PTR [esi+0x10],0x800
10056de7:	mov    DWORD PTR [esi+0x14],0x1006b8e8
10056dee:	call   0x1001436b
10056df3:	test   eax,eax
10056df5:	jge    0x10056dfe
10056df7:	mov    BYTE PTR ds:0x10080c00,0x1
10056dfe:	mov    ecx,DWORD PTR [ebp+0x74]
10056e01:	mov    eax,esi
10056e03:	xor    ecx,ebp
10056e05:	pop    esi
10056e06:	call   0x10042e97
10056e0b:	add    ebp,0x78
10056e0e:	leave  
10056e0f:	ret    
10056e10:	push   esi
10056e11:	push   DWORD PTR ds:0x10080a04
10056e17:	mov    esi,ecx
10056e19:	push   esi
10056e1a:	call   0x10056c55
10056e1f:	lea    ecx,[esi+0x20]
10056e22:	pop    esi
10056e23:	jmp    0x10056bad
10056e28:	cmp    BYTE PTR [ecx+0x8],0x0
10056e2c:	mov    DWORD PTR [ecx],0x1006b8f8
10056e32:	je     0x10056e42
10056e34:	mov    ecx,DWORD PTR [ecx+0x4]
10056e37:	test   ecx,ecx
10056e39:	je     0x10056e42
10056e3b:	push   ecx
10056e3c:	call   DWORD PTR ds:0x100661c8
10056e42:	ret    
10056e43:	push   DWORD PTR [esp+0x4]
10056e47:	push   0x0
10056e49:	push   DWORD PTR [ecx+0x4]
10056e4c:	call   DWORD PTR ds:0x1006618c
10056e52:	ret    0x4
10056e55:	cmp    DWORD PTR [esp+0x4],0x0
10056e5a:	je     0x10056e6b
10056e5c:	push   DWORD PTR [esp+0x4]
10056e60:	push   0x0
10056e62:	push   DWORD PTR [ecx+0x4]
10056e65:	call   DWORD PTR ds:0x10066188
10056e6b:	ret    0x4
10056e6e:	push   ebp
10056e6f:	mov    ebp,esp
10056e71:	xor    eax,eax
10056e73:	cmp    DWORD PTR [ebp+0x8],eax
10056e76:	jne    0x10056e81
10056e78:	push   DWORD PTR [ebp+0xc]
10056e7b:	mov    eax,DWORD PTR [ecx]
10056e7d:	call   DWORD PTR [eax]
10056e7f:	jmp    0x10056ea2
10056e81:	cmp    DWORD PTR [ebp+0xc],eax
10056e84:	jne    0x10056e92
10056e86:	push   DWORD PTR [ebp+0x8]
10056e89:	mov    eax,DWORD PTR [ecx]
10056e8b:	call   DWORD PTR [eax+0x4]
10056e8e:	xor    eax,eax
10056e90:	jmp    0x10056ea2
10056e92:	push   DWORD PTR [ebp+0xc]
10056e95:	push   DWORD PTR [ebp+0x8]
10056e98:	push   eax
10056e99:	push   DWORD PTR [ecx+0x4]
10056e9c:	call   DWORD PTR ds:0x100661a0
10056ea2:	pop    ebp
10056ea3:	ret    0x8
10056ea6:	push   DWORD PTR [esp+0x4]
10056eaa:	push   0x0
10056eac:	push   DWORD PTR [ecx+0x4]
10056eaf:	call   DWORD PTR ds:0x100661c0
10056eb5:	ret    0x4
10056eb8:	push   esi
10056eb9:	mov    esi,ecx
10056ebb:	call   0x10056e28
10056ec0:	test   BYTE PTR [esp+0x8],0x1
10056ec5:	je     0x10056ece
10056ec7:	push   esi
10056ec8:	call   0x10042e92
10056ecd:	pop    ecx
10056ece:	mov    eax,esi
10056ed0:	pop    esi
10056ed1:	ret    0x4
10056ed4:	mov    eax,ecx
10056ed6:	mov    ecx,DWORD PTR [esp+0x4]
10056eda:	mov    DWORD PTR [eax+0x4],ecx
10056edd:	mov    DWORD PTR [eax],0x1006b90c
10056ee3:	xor    ecx,ecx
10056ee5:	mov    DWORD PTR [eax+0x14],0x2
10056eec:	mov    DWORD PTR [eax+0xc],ecx
10056eef:	mov    DWORD PTR [eax+0x10],ecx
10056ef2:	mov    WORD PTR [eax+0x18],cx
10056ef6:	mov    WORD PTR [eax+0x1a],cx
10056efa:	mov    DWORD PTR [eax+0x8],eax
10056efd:	ret    0x4
10056f00:	mov    ecx,DWORD PTR [ecx+0x4]
10056f03:	mov    eax,DWORD PTR [ecx]
10056f05:	jmp    DWORD PTR [eax+0x4]
10056f08:	xor    edx,edx
10056f0a:	lea    eax,[ecx+0x14]
10056f0d:	inc    edx
10056f0e:	lock xadd DWORD PTR [eax],edx
10056f12:	lea    eax,[ecx+0x8]
10056f15:	ret    
10056f16:	mov    eax,ecx
10056f18:	ret    
10056f19:	test   BYTE PTR [esp+0x4],0x1
10056f1e:	push   esi
10056f1f:	mov    esi,ecx
10056f21:	mov    DWORD PTR [esi],0x1006b90c
10056f27:	je     0x10056f30
10056f29:	push   esi
10056f2a:	call   0x10042e92
10056f2f:	pop    ecx
10056f30:	mov    eax,esi
10056f32:	pop    esi
10056f33:	ret    0x4
10056f36:	mov    eax,DWORD PTR [esp+0x8]
10056f3a:	mov    ecx,DWORD PTR [esp+0xc]
10056f3e:	or     edx,0xffffffff
10056f41:	sub    edx,eax
10056f43:	cmp    edx,ecx
10056f45:	jae    0x10056f4d
10056f47:	mov    eax,0x80070057
10056f4c:	ret    
10056f4d:	add    eax,ecx
10056f4f:	mov    ecx,DWORD PTR [esp+0x4]
10056f53:	mov    DWORD PTR [ecx],eax
10056f55:	xor    eax,eax
10056f57:	ret    
10056f58:	push   ebp
10056f59:	mov    ebp,esp
10056f5b:	push   esi
10056f5c:	mov    esi,DWORD PTR [ebp+0x8]
10056f5f:	push   edi
10056f60:	push   DWORD PTR [ebp+0xc]
10056f63:	add    esi,0x8
10056f66:	and    esi,0xfffffff8
10056f69:	lea    eax,[ebp+0x8]
10056f6c:	push   esi
10056f6d:	push   eax
10056f6e:	mov    edi,ecx
10056f70:	call   0x100142ec
10056f75:	add    esp,0xc
10056f78:	test   eax,eax
10056f7a:	jl     0x10056fb2
10056f7c:	push   DWORD PTR [ebp+0x8]
10056f7f:	lea    eax,[ebp+0x8]
10056f82:	push   0x10
10056f84:	push   eax
10056f85:	call   0x10056f36
10056f8a:	add    esp,0xc
10056f8d:	test   eax,eax
10056f8f:	jl     0x10056fb2
10056f91:	mov    ecx,DWORD PTR [edi+0x4]
10056f94:	push   DWORD PTR [ebp+0x8]
10056f97:	mov    eax,DWORD PTR [ecx]
10056f99:	call   DWORD PTR [eax]
10056f9b:	test   eax,eax
10056f9d:	je     0x10056fb2
10056f9f:	dec    esi
10056fa0:	and    DWORD PTR [eax+0x4],0x0
10056fa4:	mov    DWORD PTR [eax],edi
10056fa6:	mov    DWORD PTR [eax+0xc],0x1
10056fad:	mov    DWORD PTR [eax+0x8],esi
10056fb0:	jmp    0x10056fb4
10056fb2:	xor    eax,eax
10056fb4:	pop    edi
10056fb5:	pop    esi
10056fb6:	pop    ebp
10056fb7:	ret    0x8
10056fba:	push   ebp
10056fbb:	mov    ebp,esp
10056fbd:	push   esi
10056fbe:	mov    esi,DWORD PTR [ebp+0xc]
10056fc1:	push   edi
10056fc2:	push   DWORD PTR [ebp+0x10]
10056fc5:	add    esi,0x8
10056fc8:	and    esi,0xfffffff8
10056fcb:	lea    eax,[ebp+0xc]
10056fce:	push   esi
10056fcf:	push   eax
10056fd0:	mov    edi,ecx
10056fd2:	call   0x100142ec
10056fd7:	add    esp,0xc
10056fda:	test   eax,eax
10056fdc:	jl     0x1005700b
10056fde:	push   DWORD PTR [ebp+0xc]
10056fe1:	lea    eax,[ebp+0xc]
10056fe4:	push   0x10
10056fe6:	push   eax
10056fe7:	call   0x10007619
10056fec:	add    esp,0xc
10056fef:	test   eax,eax
10056ff1:	jl     0x1005700b
10056ff3:	push   DWORD PTR [ebp+0xc]
10056ff6:	mov    ecx,DWORD PTR [edi+0x4]
10056ff9:	push   DWORD PTR [ebp+0x8]
10056ffc:	mov    eax,DWORD PTR [ecx]
10056ffe:	call   DWORD PTR [eax+0x8]
10057001:	test   eax,eax
10057003:	je     0x1005700b
10057005:	dec    esi
10057006:	mov    DWORD PTR [eax+0x8],esi
10057009:	jmp    0x1005700d
1005700b:	xor    eax,eax
1005700d:	pop    edi
1005700e:	pop    esi
1005700f:	pop    ebp
10057010:	ret    0xc
10057013:	mov    eax,ds:0x10080a90
10057018:	cmp    eax,0x1
1005701b:	push   DWORD PTR [esp+0x4]
1005701f:	jne    0x10057031
10057021:	push   0x0
10057023:	call   DWORD PTR ds:0x100661ac
10057029:	push   eax
1005702a:	call   DWORD PTR ds:0x10066188
10057030:	ret    
10057031:	push   eax
10057032:	call   DWORD PTR ds:0x10080a94
10057038:	ret    
10057039:	push   ebx
1005703a:	push   0xc
1005703c:	call   DWORD PTR ds:0x1006605c
10057042:	test   eax,eax
10057044:	jne    0x1005704e
10057046:	inc    eax
10057047:	mov    ds:0x10080a90,eax
1005704c:	pop    ebx
1005704d:	ret    
1005704e:	push   ebp
1005704f:	push   esi
10057050:	push   edi
10057051:	push   0x1006f83c
10057056:	call   DWORD PTR ds:0x10066220
1005705c:	mov    edi,eax
1005705e:	xor    ebp,ebp
10057060:	cmp    edi,ebp
10057062:	je     0x10057084
10057064:	mov    esi,DWORD PTR ds:0x1006612c
1005706a:	push   0x1006b940
1005706f:	push   edi
10057070:	call   esi
10057072:	push   0x1006b924
10057077:	push   edi
10057078:	mov    ds:0x10080a94,eax
1005707d:	call   esi
1005707f:	mov    ds:0x10080a98,eax
10057084:	cmp    DWORD PTR ds:0x10080a94,ebp
1005708a:	je     0x100570e7
1005708c:	cmp    DWORD PTR ds:0x10080a98,ebp
10057092:	je     0x100570e7
10057094:	mov    eax,fs:0x18
1005709a:	mov    esi,DWORD PTR [eax+0x30]
1005709d:	add    esi,0x34
100570a0:	mov    eax,DWORD PTR [esi]
100570a2:	cmp    eax,ebp
100570a4:	jne    0x100570dd
100570a6:	mov    ebx,DWORD PTR ds:0x100661ac
100570ac:	push   0x8
100570ae:	push   ebp
100570af:	call   ebx
100570b1:	push   eax
100570b2:	call   DWORD PTR ds:0x1006618c
100570b8:	mov    edi,eax
100570ba:	cmp    edi,ebp
100570bc:	je     0x100570e7
100570be:	push   ebp
100570bf:	push   edi
100570c0:	push   esi
100570c1:	mov    DWORD PTR [edi],ebp
100570c3:	mov    DWORD PTR [edi+0x4],ebp
100570c6:	call   DWORD PTR ds:0x100660e0
100570cc:	test   eax,eax
100570ce:	je     0x100570db
100570d0:	push   edi
100570d1:	push   ebp
100570d2:	call   ebx
100570d4:	push   eax
100570d5:	call   DWORD PTR ds:0x10066188
100570db:	mov    eax,DWORD PTR [esi]
100570dd:	mov    ds:0x10080a90,eax
100570e2:	xor    eax,eax
100570e4:	inc    eax
100570e5:	jmp    0x100570e9
100570e7:	xor    eax,eax
100570e9:	pop    edi
100570ea:	pop    esi
100570eb:	pop    ebp
100570ec:	pop    ebx
100570ed:	ret    
100570ee:	push   DWORD PTR [esp+0x4]
100570f2:	call   0x10057013
100570f7:	pop    ecx
100570f8:	ret    0x4
100570fb:	cmp    DWORD PTR ds:0x10080a90,0x0
10057102:	push   esi
10057103:	jne    0x1005710e
10057105:	call   0x10057039
1005710a:	test   eax,eax
1005710c:	je     0x10057151
1005710e:	mov    eax,ds:0x10080a90
10057113:	cmp    eax,0x1
10057116:	jne    0x1005712f
10057118:	push   0xd
1005711a:	push   0x0
1005711c:	call   DWORD PTR ds:0x100661ac
10057122:	push   eax
10057123:	call   DWORD PTR ds:0x1006618c
10057129:	test   eax,eax
1005712b:	je     0x10057151
1005712d:	pop    esi
1005712e:	ret    
1005712f:	push   eax
10057130:	call   DWORD PTR ds:0x10080a98
10057136:	test   eax,eax
10057138:	jne    0x10057199
1005713a:	push   0x40
1005713c:	mov    eax,0x1000
10057141:	push   eax
10057142:	push   eax
10057143:	push   0x0
10057145:	call   DWORD PTR ds:0x10066194
1005714b:	mov    esi,eax
1005714d:	test   esi,esi
1005714f:	jne    0x10057155
10057151:	xor    eax,eax
10057153:	pop    esi
10057154:	ret    
10057155:	mov    eax,DWORD PTR [esi]
10057157:	push   edi
10057158:	push   DWORD PTR ds:0x10080a90
1005715e:	call   DWORD PTR ds:0x10080a98
10057164:	mov    edi,eax
10057166:	test   edi,edi
10057168:	je     0x1005717c
1005716a:	push   0x8000
1005716f:	push   0x0
10057171:	push   esi
10057172:	call   DWORD PTR ds:0x100661d0
10057178:	mov    eax,edi
1005717a:	jmp    0x10057198
1005717c:	lea    edi,[esi+0xff0]
10057182:	push   esi
10057183:	push   DWORD PTR ds:0x10080a90
10057189:	call   DWORD PTR ds:0x10080a94
1005718f:	add    esi,0x10
10057192:	cmp    esi,edi
10057194:	jb     0x10057182
10057196:	mov    eax,esi
10057198:	pop    edi
10057199:	pop    esi
1005719a:	ret    
1005719b:	jmp    0x100570fb
100571a0:	push   0x44
100571a2:	mov    eax,0x1006071f
100571a7:	call   0x10059a35
100571ac:	push   0x1006b980
100571b1:	lea    ecx,[ebp-0x28]
100571b4:	call   0x100011cd
100571b9:	and    DWORD PTR [ebp-0x4],0x0
100571bd:	lea    eax,[ebp-0x28]
100571c0:	push   eax
100571c1:	lea    ecx,[ebp-0x50]
100571c4:	call   0x10001077
100571c9:	push   0x10074da0
100571ce:	lea    eax,[ebp-0x50]
100571d1:	push   eax
100571d2:	mov    DWORD PTR [ebp-0x50],0x1006b96c
100571d9:	call   0x100479b4
100571de:	int3   
100571df:	push   0x44
100571e1:	mov    eax,0x1006071f
100571e6:	call   0x10059a35
100571eb:	push   0x1006b990
100571f0:	lea    ecx,[ebp-0x28]
100571f3:	call   0x100011cd
100571f8:	and    DWORD PTR [ebp-0x4],0x0
100571fc:	lea    eax,[ebp-0x28]
100571ff:	push   eax
10057200:	lea    ecx,[ebp-0x50]
10057203:	call   0x10001077
10057208:	push   0x10074cc0
1005720d:	lea    eax,[ebp-0x50]
10057210:	push   eax
10057211:	mov    DWORD PTR [ebp-0x50],0x1006b978
10057218:	call   0x100479b4
1005721d:	int3   
1005721e:	int3   
1005721f:	int3   
10057220:	push   ebp
10057221:	mov    ebp,esp
10057223:	sub    esp,0x34
10057226:	push   0x1
10057228:	mov    eax,DWORD PTR [ebp+0x8]
1005722b:	push   eax
1005722c:	call   0x10057a60
10057231:	mov    DWORD PTR [ebp+0x8],eax
10057234:	push   0x0
10057236:	mov    ecx,DWORD PTR [ebp+0xc]
10057239:	push   ecx
1005723a:	call   0x10057a60
1005723f:	mov    DWORD PTR [ebp+0xc],eax
10057242:	mov    edx,DWORD PTR [ebp+0x8]
10057245:	movzx  eax,BYTE PTR [edx+0x1f]
10057249:	mov    DWORD PTR [ebp-0xc],eax
1005724c:	cmp    DWORD PTR [ebp-0xc],0x0
10057250:	je     0x10057258
10057252:	cmp    DWORD PTR [ebp-0xc],0x1f
10057256:	jl     0x10057267
10057258:	push   0x6
1005725a:	call   DWORD PTR ds:0x1006615c
10057260:	xor    eax,eax
10057262:	jmp    0x10057378
10057267:	mov    ecx,DWORD PTR [ebp+0x8]
1005726a:	add    ecx,DWORD PTR [ebp-0xc]
1005726d:	movzx  edx,BYTE PTR [ecx]
10057270:	cmp    edx,0xe9
10057276:	je     0x10057287
10057278:	push   0x6
1005727a:	call   DWORD PTR ds:0x1006615c
10057280:	xor    eax,eax
10057282:	jmp    0x10057378
10057287:	mov    eax,DWORD PTR [ebp+0x8]
1005728a:	add    eax,DWORD PTR [ebp-0xc]
1005728d:	mov    ecx,DWORD PTR [eax+0x1]
10057290:	mov    DWORD PTR [ebp-0x20],ecx
10057293:	mov    edx,DWORD PTR [ebp+0x8]
10057296:	add    edx,DWORD PTR [ebp-0xc]
10057299:	mov    eax,DWORD PTR [ebp-0x20]
1005729c:	lea    ecx,[edx+eax*1+0x5]
100572a0:	sub    ecx,DWORD PTR [ebp-0xc]
100572a3:	mov    DWORD PTR [ebp-0x8],ecx
100572a6:	mov    edx,DWORD PTR [ebp-0x8]
100572a9:	movzx  eax,BYTE PTR [edx]
100572ac:	cmp    eax,0xe9
100572b1:	je     0x100572c2
100572b3:	push   0x9
100572b5:	call   DWORD PTR ds:0x1006615c
100572bb:	xor    eax,eax
100572bd:	jmp    0x10057378
100572c2:	mov    ecx,DWORD PTR [ebp-0x8]
100572c5:	mov    edx,DWORD PTR [ecx+0x1]
100572c8:	mov    DWORD PTR [ebp-0x20],edx
100572cb:	mov    eax,DWORD PTR [ebp-0x20]
100572ce:	mov    ecx,DWORD PTR [ebp-0x8]
100572d1:	lea    edx,[ecx+eax*1+0x5]
100572d5:	mov    DWORD PTR [ebp-0x28],edx
100572d8:	mov    eax,DWORD PTR [ebp-0x28]
100572db:	cmp    eax,DWORD PTR [ebp+0xc]
100572de:	je     0x100572ef
100572e0:	push   0xc
100572e2:	call   DWORD PTR ds:0x1006615c
100572e8:	xor    eax,eax
100572ea:	jmp    0x10057378
100572ef:	mov    ecx,DWORD PTR [ebp-0xc]
100572f2:	push   ecx
100572f3:	mov    edx,DWORD PTR [ebp-0x8]
100572f6:	push   edx
100572f7:	lea    ecx,[ebp-0x1c]
100572fa:	call   0x10057380
100572ff:	mov    eax,DWORD PTR [ebp+0x8]
10057302:	mov    DWORD PTR [ebp-0x4],eax
10057305:	mov    ecx,DWORD PTR [ebp-0x8]
10057308:	mov    DWORD PTR [ebp-0x24],ecx
1005730b:	mov    DWORD PTR [ebp-0x2c],0x0
10057312:	jmp    0x1005731d
10057314:	mov    edx,DWORD PTR [ebp-0x8]
10057317:	add    edx,DWORD PTR [ebp-0x2c]
1005731a:	mov    DWORD PTR [ebp-0x24],edx
1005731d:	mov    eax,DWORD PTR [ebp-0x2c]
10057320:	cmp    eax,DWORD PTR [ebp-0xc]
10057323:	jge    0x10057342
10057325:	push   0x0
10057327:	mov    ecx,DWORD PTR [ebp-0x4]
1005732a:	push   ecx
1005732b:	mov    edx,DWORD PTR [ebp-0x24]
1005732e:	push   edx
1005732f:	call   0x10057c70
10057334:	mov    DWORD PTR [ebp-0x4],eax
10057337:	mov    eax,DWORD PTR [ebp-0x4]
1005733a:	sub    eax,DWORD PTR [ebp+0x8]
1005733d:	mov    DWORD PTR [ebp-0x2c],eax
10057340:	jmp    0x10057314
10057342:	mov    ecx,DWORD PTR [ebp-0x2c]
10057345:	cmp    ecx,DWORD PTR [ebp-0xc]
10057348:	je     0x10057366
1005734a:	push   0xd
1005734c:	call   DWORD PTR ds:0x1006615c
10057352:	mov    DWORD PTR [ebp-0x30],0x0
10057359:	lea    ecx,[ebp-0x1c]
1005735c:	call   0x10057400
10057361:	mov    eax,DWORD PTR [ebp-0x30]
10057364:	jmp    0x10057378
10057366:	mov    DWORD PTR [ebp-0x34],0x1
1005736d:	lea    ecx,[ebp-0x1c]
10057370:	call   0x10057400
10057375:	mov    eax,DWORD PTR [ebp-0x34]
10057378:	mov    esp,ebp
1005737a:	pop    ebp
1005737b:	ret    0x8
1005737e:	int3   
1005737f:	int3   
10057380:	push   ebp
10057381:	mov    ebp,esp
10057383:	push   ecx
10057384:	mov    DWORD PTR [ebp-0x4],ecx
10057387:	mov    eax,DWORD PTR [ebp-0x4]
1005738a:	mov    ecx,DWORD PTR [ebp+0x8]
1005738d:	mov    DWORD PTR [eax+0x4],ecx
10057390:	mov    edx,DWORD PTR [ebp-0x4]
10057393:	mov    eax,DWORD PTR [ebp+0xc]
10057396:	mov    DWORD PTR [edx+0x8],eax
10057399:	mov    ecx,DWORD PTR [ebp-0x4]
1005739c:	mov    DWORD PTR [ecx+0xc],0x0
100573a3:	call   DWORD PTR ds:0x10066108
100573a9:	mov    edx,DWORD PTR [ebp-0x4]
100573ac:	mov    DWORD PTR [edx],eax
100573ae:	mov    eax,DWORD PTR [ebp-0x4]
100573b1:	cmp    DWORD PTR [eax+0x4],0x0
100573b5:	je     0x100573f1
100573b7:	mov    ecx,DWORD PTR [ebp-0x4]
100573ba:	cmp    DWORD PTR [ecx+0x8],0x0
100573be:	je     0x100573f1
100573c0:	mov    edx,DWORD PTR [ebp+0xc]
100573c3:	push   edx
100573c4:	mov    eax,DWORD PTR [ebp+0x8]
100573c7:	push   eax
100573c8:	mov    ecx,DWORD PTR [ebp-0x4]
100573cb:	mov    edx,DWORD PTR [ecx]
100573cd:	push   edx
100573ce:	call   DWORD PTR ds:0x10066158
100573d4:	test   eax,eax
100573d6:	jne    0x100573da
100573d8:	jmp    0x100573f1
100573da:	mov    eax,DWORD PTR [ebp-0x4]
100573dd:	add    eax,0xc
100573e0:	push   eax
100573e1:	push   0x40
100573e3:	mov    ecx,DWORD PTR [ebp+0xc]
100573e6:	push   ecx
100573e7:	mov    edx,DWORD PTR [ebp+0x8]
100573ea:	push   edx
100573eb:	call   DWORD PTR ds:0x10066190
100573f1:	mov    eax,DWORD PTR [ebp-0x4]
100573f4:	mov    esp,ebp
100573f6:	pop    ebp
100573f7:	ret    0x8
100573fa:	int3   
100573fb:	int3   
100573fc:	int3   
100573fd:	int3   
100573fe:	int3   
100573ff:	int3   
10057400:	push   ebp
10057401:	mov    ebp,esp
10057403:	sub    esp,0x8
10057406:	mov    DWORD PTR [ebp-0x8],ecx
10057409:	mov    eax,DWORD PTR [ebp-0x8]
1005740c:	cmp    DWORD PTR [eax+0xc],0x0
10057410:	je     0x1005746a
10057412:	mov    ecx,DWORD PTR [ebp-0x8]
10057415:	cmp    DWORD PTR [ecx+0x4],0x0
10057419:	je     0x1005746a
1005741b:	mov    edx,DWORD PTR [ebp-0x8]
1005741e:	cmp    DWORD PTR [edx+0x8],0x0
10057422:	je     0x1005746a
10057424:	mov    DWORD PTR [ebp-0x4],0x0
1005742b:	mov    eax,DWORD PTR [ebp-0x8]
1005742e:	mov    ecx,DWORD PTR [eax+0x8]
10057431:	push   ecx
10057432:	mov    edx,DWORD PTR [ebp-0x8]
10057435:	mov    eax,DWORD PTR [edx+0x4]
10057438:	push   eax
10057439:	mov    ecx,DWORD PTR [ebp-0x8]
1005743c:	mov    edx,DWORD PTR [ecx]
1005743e:	push   edx
1005743f:	call   DWORD PTR ds:0x10066158
10057445:	test   eax,eax
10057447:	jne    0x1005744b
10057449:	jmp    0x1005746a
1005744b:	lea    eax,[ebp-0x4]
1005744e:	push   eax
1005744f:	mov    ecx,DWORD PTR [ebp-0x8]
10057452:	mov    edx,DWORD PTR [ecx+0xc]
10057455:	push   edx
10057456:	mov    eax,DWORD PTR [ebp-0x8]
10057459:	mov    ecx,DWORD PTR [eax+0x8]
1005745c:	push   ecx
1005745d:	mov    edx,DWORD PTR [ebp-0x8]
10057460:	mov    eax,DWORD PTR [edx+0x4]
10057463:	push   eax
10057464:	call   DWORD PTR ds:0x10066190
1005746a:	mov    esp,ebp
1005746c:	pop    ebp
1005746d:	ret    
1005746e:	int3   
1005746f:	int3   
10057470:	push   ebp
10057471:	mov    ebp,esp
10057473:	sub    esp,0xc
10057476:	push   0x20
10057478:	call   0x1004349e
1005747d:	add    esp,0x4
10057480:	mov    DWORD PTR [ebp-0x8],eax
10057483:	mov    eax,DWORD PTR [ebp-0x8]
10057486:	mov    DWORD PTR [ebp-0x4],eax
10057489:	cmp    DWORD PTR [ebp-0x4],0x0
1005748d:	jne    0x10057493
1005748f:	xor    eax,eax
10057491:	jmp    0x100574e0
10057493:	push   0x0
10057495:	mov    ecx,DWORD PTR [ebp+0x8]
10057498:	push   ecx
10057499:	call   0x10057a60
1005749e:	mov    DWORD PTR [ebp+0x8],eax
100574a1:	push   0x0
100574a3:	mov    edx,DWORD PTR [ebp+0xc]
100574a6:	push   edx
100574a7:	call   0x10057a60
100574ac:	mov    DWORD PTR [ebp+0xc],eax
100574af:	mov    eax,DWORD PTR [ebp+0xc]
100574b2:	push   eax
100574b3:	mov    ecx,DWORD PTR [ebp-0x4]
100574b6:	push   ecx
100574b7:	mov    edx,DWORD PTR [ebp+0x8]
100574ba:	push   edx
100574bb:	call   0x100574f0
100574c0:	add    esp,0xc
100574c3:	test   eax,eax
100574c5:	je     0x100574cc
100574c7:	mov    eax,DWORD PTR [ebp-0x4]
100574ca:	jmp    0x100574e0
100574cc:	mov    eax,DWORD PTR [ebp-0x4]
100574cf:	mov    DWORD PTR [ebp-0xc],eax
100574d2:	mov    ecx,DWORD PTR [ebp-0xc]
100574d5:	push   ecx
100574d6:	call   0x10042e92
100574db:	add    esp,0x4
100574de:	xor    eax,eax
100574e0:	mov    esp,ebp
100574e2:	pop    ebp
100574e3:	ret    0x8
100574e6:	int3   
100574e7:	int3   
100574e8:	int3   
100574e9:	int3   
100574ea:	int3   
100574eb:	int3   
100574ec:	int3   
100574ed:	int3   
100574ee:	int3   
100574ef:	int3   
100574f0:	push   ebp
100574f1:	mov    ebp,esp
100574f3:	sub    esp,0x54
100574f6:	mov    eax,DWORD PTR [ebp+0x8]
100574f9:	mov    DWORD PTR [ebp-0x18],eax
100574fc:	mov    DWORD PTR [ebp-0x30],0x0
10057503:	cmp    DWORD PTR [ebp-0x30],0x5
10057507:	jge    0x100575d6
1005750d:	mov    ecx,DWORD PTR [ebp-0x18]
10057510:	mov    DWORD PTR [ebp-0x38],ecx
10057513:	mov    edx,DWORD PTR [ebp-0x38]
10057516:	mov    al,BYTE PTR [edx]
10057518:	mov    BYTE PTR [ebp-0x31],al
1005751b:	push   0x0
1005751d:	mov    ecx,DWORD PTR [ebp-0x18]
10057520:	push   ecx
10057521:	push   0x0
10057523:	call   0x10057c70
10057528:	mov    DWORD PTR [ebp-0x18],eax
1005752b:	mov    edx,DWORD PTR [ebp-0x18]
1005752e:	sub    edx,DWORD PTR [ebp+0x8]
10057531:	mov    DWORD PTR [ebp-0x30],edx
10057534:	movzx  eax,BYTE PTR [ebp-0x31]
10057538:	cmp    eax,0xe9
1005753d:	je     0x10057562
1005753f:	movzx  ecx,BYTE PTR [ebp-0x31]
10057543:	cmp    ecx,0xe0
10057549:	je     0x10057562
1005754b:	movzx  edx,BYTE PTR [ebp-0x31]
1005754f:	cmp    edx,0xc2
10057555:	je     0x10057562
10057557:	movzx  eax,BYTE PTR [ebp-0x31]
1005755b:	cmp    eax,0xc3
10057560:	jne    0x10057564
10057562:	jmp    0x100575d6
10057564:	movzx  ecx,BYTE PTR [ebp-0x31]
10057568:	cmp    ecx,0xff
1005756e:	jne    0x1005757e
10057570:	mov    edx,DWORD PTR [ebp-0x38]
10057573:	movzx  eax,BYTE PTR [edx+0x1]
10057577:	cmp    eax,0x25
1005757a:	jne    0x1005757e
1005757c:	jmp    0x100575d6
1005757e:	movzx  ecx,BYTE PTR [ebp-0x31]
10057582:	cmp    ecx,0x26
10057585:	je     0x100575b4
10057587:	movzx  edx,BYTE PTR [ebp-0x31]
1005758b:	cmp    edx,0x2e
1005758e:	je     0x100575b4
10057590:	movzx  eax,BYTE PTR [ebp-0x31]
10057594:	cmp    eax,0x36
10057597:	je     0x100575b4
10057599:	movzx  ecx,BYTE PTR [ebp-0x31]
1005759d:	cmp    ecx,0x3e
100575a0:	je     0x100575b4
100575a2:	movzx  edx,BYTE PTR [ebp-0x31]
100575a6:	cmp    edx,0x64
100575a9:	je     0x100575b4
100575ab:	movzx  eax,BYTE PTR [ebp-0x31]
100575af:	cmp    eax,0x65
100575b2:	jne    0x100575d1
100575b4:	mov    ecx,DWORD PTR [ebp-0x38]
100575b7:	movzx  edx,BYTE PTR [ecx+0x1]
100575bb:	cmp    edx,0xff
100575c1:	jne    0x100575d1
100575c3:	mov    eax,DWORD PTR [ebp-0x38]
100575c6:	movzx  ecx,BYTE PTR [eax+0x2]
100575ca:	cmp    ecx,0x25
100575cd:	jne    0x100575d1
100575cf:	jmp    0x100575d6
100575d1:	jmp    0x10057503
100575d6:	cmp    DWORD PTR [ebp-0x30],0x5
100575da:	jge    0x100575e3
100575dc:	xor    eax,eax
100575de:	jmp    0x1005775a
100575e3:	cmp    DWORD PTR [ebp-0x30],0x1a
100575e7:	jle    0x100575f0
100575e9:	xor    eax,eax
100575eb:	jmp    0x1005775a
100575f0:	push   0x20
100575f2:	mov    edx,DWORD PTR [ebp+0xc]
100575f5:	push   edx
100575f6:	lea    ecx,[ebp-0x28]
100575f9:	call   0x10057380
100575fe:	mov    eax,DWORD PTR [ebp-0x30]
10057601:	push   eax
10057602:	mov    ecx,DWORD PTR [ebp+0x8]
10057605:	push   ecx
10057606:	lea    ecx,[ebp-0x14]
10057609:	call   0x10057380
1005760e:	push   0x40
10057610:	lea    ecx,[ebp-0x28]
10057613:	call   0x10057760
10057618:	test   eax,eax
1005761a:	jne    0x1005763b
1005761c:	mov    DWORD PTR [ebp-0x40],0x0
10057623:	lea    ecx,[ebp-0x14]
10057626:	call   0x10057400
1005762b:	lea    ecx,[ebp-0x28]
1005762e:	call   0x10057400
10057633:	mov    eax,DWORD PTR [ebp-0x40]
10057636:	jmp    0x1005775a
1005763b:	lea    ecx,[ebp-0x14]
1005763e:	call   0x100577a0
10057643:	test   eax,eax
10057645:	jne    0x10057666
10057647:	mov    DWORD PTR [ebp-0x44],0x0
1005764e:	lea    ecx,[ebp-0x14]
10057651:	call   0x10057400
10057656:	lea    ecx,[ebp-0x28]
10057659:	call   0x10057400
1005765e:	mov    eax,DWORD PTR [ebp-0x44]
10057661:	jmp    0x1005775a
10057666:	mov    edx,DWORD PTR [ebp+0x8]
10057669:	mov    DWORD PTR [ebp-0x4],edx
1005766c:	mov    eax,DWORD PTR [ebp+0xc]
1005766f:	mov    DWORD PTR [ebp-0x2c],eax
10057672:	mov    DWORD PTR [ebp-0x3c],0x0
10057679:	mov    ecx,DWORD PTR [ebp-0x3c]
1005767c:	cmp    ecx,DWORD PTR [ebp-0x30]
1005767f:	jge    0x100576a7
10057681:	push   0x0
10057683:	mov    edx,DWORD PTR [ebp-0x4]
10057686:	push   edx
10057687:	mov    eax,DWORD PTR [ebp-0x2c]
1005768a:	push   eax
1005768b:	call   0x10057c70
10057690:	mov    DWORD PTR [ebp-0x4],eax
10057693:	mov    ecx,DWORD PTR [ebp-0x4]
10057696:	sub    ecx,DWORD PTR [ebp+0x8]
10057699:	mov    DWORD PTR [ebp-0x3c],ecx
1005769c:	mov    edx,DWORD PTR [ebp+0xc]
1005769f:	add    edx,DWORD PTR [ebp-0x3c]
100576a2:	mov    DWORD PTR [ebp-0x2c],edx
100576a5:	jmp    0x10057679
100576a7:	mov    eax,DWORD PTR [ebp-0x3c]
100576aa:	cmp    eax,DWORD PTR [ebp-0x30]
100576ad:	je     0x100576ce
100576af:	mov    DWORD PTR [ebp-0x48],0x0
100576b6:	lea    ecx,[ebp-0x14]
100576b9:	call   0x10057400
100576be:	lea    ecx,[ebp-0x28]
100576c1:	call   0x10057400
100576c6:	mov    eax,DWORD PTR [ebp-0x48]
100576c9:	jmp    0x1005775a
100576ce:	push   0x5
100576d0:	mov    ecx,DWORD PTR [ebp+0x8]
100576d3:	add    ecx,DWORD PTR [ebp-0x30]
100576d6:	push   ecx
100576d7:	mov    edx,DWORD PTR [ebp-0x2c]
100576da:	push   edx
100576db:	call   0x100577e0
100576e0:	add    esp,0xc
100576e3:	test   eax,eax
100576e5:	jne    0x10057703
100576e7:	mov    DWORD PTR [ebp-0x4c],0x0
100576ee:	lea    ecx,[ebp-0x14]
100576f1:	call   0x10057400
100576f6:	lea    ecx,[ebp-0x28]
100576f9:	call   0x10057400
100576fe:	mov    eax,DWORD PTR [ebp-0x4c]
10057701:	jmp    0x1005775a
10057703:	mov    eax,DWORD PTR [ebp+0xc]
10057706:	mov    cl,BYTE PTR [ebp-0x30]
10057709:	mov    BYTE PTR [eax+0x1f],cl
1005770c:	mov    edx,DWORD PTR [ebp-0x30]
1005770f:	push   edx
10057710:	mov    eax,DWORD PTR [ebp+0x10]
10057713:	push   eax
10057714:	mov    ecx,DWORD PTR [ebp+0x8]
10057717:	push   ecx
10057718:	call   0x100577e0
1005771d:	add    esp,0xc
10057720:	test   eax,eax
10057722:	jne    0x10057740
10057724:	mov    DWORD PTR [ebp-0x50],0x0
1005772b:	lea    ecx,[ebp-0x14]
1005772e:	call   0x10057400
10057733:	lea    ecx,[ebp-0x28]
10057736:	call   0x10057400
1005773b:	mov    eax,DWORD PTR [ebp-0x50]
1005773e:	jmp    0x1005775a
10057740:	mov    DWORD PTR [ebp-0x54],0x1
10057747:	lea    ecx,[ebp-0x14]
1005774a:	call   0x10057400
1005774f:	lea    ecx,[ebp-0x28]
10057752:	call   0x10057400
10057757:	mov    eax,DWORD PTR [ebp-0x54]
1005775a:	mov    esp,ebp
1005775c:	pop    ebp
1005775d:	ret    
1005775e:	int3   
1005775f:	int3   
10057760:	push   ebp
10057761:	mov    ebp,esp
10057763:	push   ecx
10057764:	mov    DWORD PTR [ebp-0x4],ecx
10057767:	mov    eax,DWORD PTR [ebp-0x4]
1005776a:	cmp    DWORD PTR [eax+0xc],0x0
1005776e:	je     0x10057792
10057770:	mov    ecx,DWORD PTR [ebp-0x4]
10057773:	cmp    DWORD PTR [ecx+0x4],0x0
10057777:	je     0x10057792
10057779:	mov    edx,DWORD PTR [ebp-0x4]
1005777c:	cmp    DWORD PTR [edx+0x8],0x0
10057780:	je     0x10057792
10057782:	mov    eax,DWORD PTR [ebp-0x4]
10057785:	mov    ecx,DWORD PTR [ebp+0x8]
10057788:	mov    DWORD PTR [eax+0xc],ecx
1005778b:	mov    eax,0x1
10057790:	jmp    0x10057794
10057792:	xor    eax,eax
10057794:	mov    esp,ebp
10057796:	pop    ebp
10057797:	ret    0x4
1005779a:	int3   
1005779b:	int3   
1005779c:	int3   
1005779d:	int3   
1005779e:	int3   
1005779f:	int3   
100577a0:	push   ebp
100577a1:	mov    ebp,esp
100577a3:	sub    esp,0x8
100577a6:	mov    DWORD PTR [ebp-0x4],ecx
100577a9:	mov    eax,DWORD PTR [ebp-0x4]
100577ac:	cmp    DWORD PTR [eax+0x4],0x0
100577b0:	je     0x100577cd
100577b2:	mov    ecx,DWORD PTR [ebp-0x4]
100577b5:	cmp    DWORD PTR [ecx+0x8],0x0
100577b9:	je     0x100577cd
100577bb:	mov    edx,DWORD PTR [ebp-0x4]
100577be:	cmp    DWORD PTR [edx+0xc],0x0
100577c2:	je     0x100577cd
100577c4:	mov    DWORD PTR [ebp-0x8],0x1
100577cb:	jmp    0x100577d4
100577cd:	mov    DWORD PTR [ebp-0x8],0x0
100577d4:	mov    eax,DWORD PTR [ebp-0x8]
100577d7:	mov    esp,ebp
100577d9:	pop    ebp
100577da:	ret    
100577db:	int3   
100577dc:	int3   
100577dd:	int3   
100577de:	int3   
100577df:	int3   
100577e0:	push   ebp
100577e1:	mov    ebp,esp
100577e3:	cmp    DWORD PTR [ebp+0x10],0x5
100577e7:	jge    0x100577ed
100577e9:	xor    eax,eax
100577eb:	jmp    0x10057832
100577ed:	push   0x0
100577ef:	mov    eax,DWORD PTR [ebp+0xc]
100577f2:	push   eax
100577f3:	mov    ecx,DWORD PTR [ebp+0x8]
100577f6:	push   ecx
100577f7:	call   0x10057840
100577fc:	add    esp,0xc
100577ff:	mov    DWORD PTR [ebp+0x8],eax
10057802:	mov    edx,DWORD PTR [ebp+0x10]
10057805:	sub    edx,0x5
10057808:	mov    DWORD PTR [ebp+0x10],edx
1005780b:	jmp    0x10057816
1005780d:	mov    eax,DWORD PTR [ebp+0x10]
10057810:	sub    eax,0x1
10057813:	mov    DWORD PTR [ebp+0x10],eax
10057816:	cmp    DWORD PTR [ebp+0x10],0x0
1005781a:	jle    0x1005782d
1005781c:	mov    ecx,DWORD PTR [ebp+0x8]
1005781f:	push   ecx
10057820:	call   0x10057880
10057825:	add    esp,0x4
10057828:	mov    DWORD PTR [ebp+0x8],eax
1005782b:	jmp    0x1005780d
1005782d:	mov    eax,0x1
10057832:	pop    ebp
10057833:	ret    
10057834:	int3   
10057835:	int3   
10057836:	int3   
10057837:	int3   
10057838:	int3   
10057839:	int3   
1005783a:	int3   
1005783b:	int3   
1005783c:	int3   
1005783d:	int3   
1005783e:	int3   
1005783f:	int3   
10057840:	push   ebp
10057841:	mov    ebp,esp
10057843:	cmp    DWORD PTR [ebp+0x10],0x0
10057847:	jne    0x1005784f
10057849:	mov    eax,DWORD PTR [ebp+0x8]
1005784c:	mov    DWORD PTR [ebp+0x10],eax
1005784f:	mov    ecx,DWORD PTR [ebp+0x8]
10057852:	mov    BYTE PTR [ecx],0xe9
10057855:	mov    edx,DWORD PTR [ebp+0x8]
10057858:	add    edx,0x1
1005785b:	mov    DWORD PTR [ebp+0x8],edx
1005785e:	mov    eax,DWORD PTR [ebp+0x10]
10057861:	add    eax,0x5
10057864:	mov    ecx,DWORD PTR [ebp+0xc]
10057867:	sub    ecx,eax
10057869:	mov    edx,DWORD PTR [ebp+0x8]
1005786c:	mov    DWORD PTR [edx],ecx
1005786e:	mov    eax,DWORD PTR [ebp+0x8]
10057871:	add    eax,0x4
10057874:	mov    DWORD PTR [ebp+0x8],eax
10057877:	mov    eax,DWORD PTR [ebp+0x8]
1005787a:	pop    ebp
1005787b:	ret    
1005787c:	int3   
1005787d:	int3   
1005787e:	int3   
1005787f:	int3   
10057880:	push   ebp
10057881:	mov    ebp,esp
10057883:	mov    eax,DWORD PTR [ebp+0x8]
10057886:	mov    BYTE PTR [eax],0xcc
10057889:	mov    ecx,DWORD PTR [ebp+0x8]
1005788c:	add    ecx,0x1
1005788f:	mov    DWORD PTR [ebp+0x8],ecx
10057892:	mov    eax,DWORD PTR [ebp+0x8]
10057895:	pop    ebp
10057896:	ret    
10057897:	int3   
10057898:	int3   
10057899:	int3   
1005789a:	int3   
1005789b:	int3   
1005789c:	int3   
1005789d:	int3   
1005789e:	int3   
1005789f:	int3   
100578a0:	push   ebp
100578a1:	mov    ebp,esp
100578a3:	sub    esp,0xc
100578a6:	cmp    DWORD PTR ds:0x10080ac4,0x0
100578ad:	je     0x100578b9
100578af:	mov    eax,ds:0x10080ac4
100578b4:	jmp    0x10057a56
100578b9:	mov    DWORD PTR ds:0x10080ac4,0x10080a9c
100578c3:	push   0x28
100578c5:	push   0x0
100578c7:	push   0x10080a9c
100578cc:	call   0x10045c00
100578d1:	add    esp,0xc
100578d4:	call   DWORD PTR ds:0x10066108
100578da:	mov    ds:0x10080a9c,eax
100578df:	push   0x1007eff4
100578e4:	call   DWORD PTR ds:0x10066220
100578ea:	mov    ds:0x10080aa0,eax
100578ef:	cmp    DWORD PTR ds:0x10080aa0,0x0
100578f6:	jne    0x100578ff
100578f8:	xor    eax,eax
100578fa:	jmp    0x10057a56
100578ff:	push   0x1007f004
10057904:	mov    eax,ds:0x10080aa0
10057909:	push   eax
1005790a:	call   DWORD PTR ds:0x1006612c
10057910:	mov    ds:0x10080aa4,eax
10057915:	push   0x1007f01c
1005791a:	mov    ecx,DWORD PTR ds:0x10080aa0
10057920:	push   ecx
10057921:	call   DWORD PTR ds:0x1006612c
10057927:	mov    ds:0x10080aa8,eax
1005792c:	push   0x1007f02c
10057931:	mov    edx,DWORD PTR ds:0x10080aa0
10057937:	push   edx
10057938:	call   DWORD PTR ds:0x1006612c
1005793e:	mov    ds:0x10080aac,eax
10057943:	push   0x1007f03c
10057948:	mov    eax,ds:0x10080aa0
1005794d:	push   eax
1005794e:	call   DWORD PTR ds:0x1006612c
10057954:	mov    ds:0x10080ab0,eax
10057959:	push   0x1007f04c
1005795e:	mov    ecx,DWORD PTR ds:0x10080aa0
10057964:	push   ecx
10057965:	call   DWORD PTR ds:0x1006612c
1005796b:	mov    ds:0x10080ab4,eax
10057970:	push   0x1007f05c
10057975:	mov    edx,DWORD PTR ds:0x10080aa0
1005797b:	push   edx
1005797c:	call   DWORD PTR ds:0x1006612c
10057982:	mov    ds:0x10080ab8,eax
10057987:	push   0x1007f070
1005798c:	mov    eax,ds:0x10080aa0
10057991:	push   eax
10057992:	call   DWORD PTR ds:0x1006612c
10057998:	mov    ds:0x10080abc,eax
1005799d:	push   0x1007f084
100579a2:	mov    ecx,DWORD PTR ds:0x10080aa0
100579a8:	push   ecx
100579a9:	call   DWORD PTR ds:0x1006612c
100579af:	mov    ds:0x10080ac0,eax
100579b4:	push   0x8
100579b6:	push   0x0
100579b8:	lea    edx,[ebp-0x8]
100579bb:	push   edx
100579bc:	call   0x10045c00
100579c1:	add    esp,0xc
100579c4:	mov    WORD PTR [ebp-0x8],0x9
100579ca:	cmp    DWORD PTR ds:0x10080aa4,0x0
100579d1:	je     0x100579dd
100579d3:	lea    eax,[ebp-0x8]
100579d6:	push   eax
100579d7:	call   DWORD PTR ds:0x10080aa4
100579dd:	cmp    DWORD PTR ds:0x10080aa4,0x0
100579e4:	je     0x100579ef
100579e6:	movzx  ecx,WORD PTR [ebp-0x8]
100579ea:	cmp    ecx,0x9
100579ed:	jge    0x10057a0a
100579ef:	mov    edx,DWORD PTR ds:0x10080aa0
100579f5:	push   edx
100579f6:	call   DWORD PTR ds:0x100660fc
100579fc:	mov    DWORD PTR ds:0x10080aa0,0x0
10057a06:	xor    eax,eax
10057a08:	jmp    0x10057a56
10057a0a:	cmp    DWORD PTR ds:0x10080aa8,0x0
10057a11:	je     0x10057a23
10057a13:	push   0x0
10057a15:	push   0x0
10057a17:	mov    eax,ds:0x10080a9c
10057a1c:	push   eax
10057a1d:	call   DWORD PTR ds:0x10080aa8
10057a23:	cmp    DWORD PTR ds:0x10080ab0,0x0
10057a2a:	je     0x10057a51
10057a2c:	cmp    DWORD PTR ds:0x10080aac,0x0
10057a33:	je     0x10057a51
10057a35:	call   DWORD PTR ds:0x10080ab0
10057a3b:	mov    DWORD PTR [ebp-0xc],eax
10057a3e:	mov    ecx,DWORD PTR [ebp-0xc]
10057a41:	and    ecx,0x7
10057a44:	mov    DWORD PTR [ebp-0xc],ecx
10057a47:	mov    edx,DWORD PTR [ebp-0xc]
10057a4a:	push   edx
10057a4b:	call   DWORD PTR ds:0x10080aac
10057a51:	mov    eax,ds:0x10080ac4
10057a56:	mov    esp,ebp
10057a58:	pop    ebp
10057a59:	ret    
10057a5a:	int3   
10057a5b:	int3   
10057a5c:	int3   
10057a5d:	int3   
10057a5e:	int3   
10057a5f:	int3   
10057a60:	push   ebp
10057a61:	mov    ebp,esp
10057a63:	cmp    DWORD PTR [ebp+0x8],0x0
10057a67:	jne    0x10057a6d
10057a69:	xor    eax,eax
10057a6b:	jmp    0x10057ac0
10057a6d:	mov    eax,DWORD PTR [ebp+0x8]
10057a70:	movzx  ecx,BYTE PTR [eax]
10057a73:	cmp    ecx,0xff
10057a79:	jne    0x10057a9a
10057a7b:	mov    edx,DWORD PTR [ebp+0x8]
10057a7e:	movzx  eax,BYTE PTR [edx+0x1]
10057a82:	cmp    eax,0x25
10057a85:	jne    0x10057a9a
10057a87:	mov    ecx,DWORD PTR [ebp+0x8]
10057a8a:	mov    edx,DWORD PTR [ecx+0x2]
10057a8d:	mov    DWORD PTR [ebp+0x8],edx
10057a90:	mov    eax,DWORD PTR [ebp+0x8]
10057a93:	mov    ecx,DWORD PTR [eax]
10057a95:	mov    DWORD PTR [ebp+0x8],ecx
10057a98:	jmp    0x10057abd
10057a9a:	mov    edx,DWORD PTR [ebp+0x8]
10057a9d:	movzx  eax,BYTE PTR [edx]
10057aa0:	cmp    eax,0xe9
10057aa5:	jne    0x10057abd
10057aa7:	cmp    DWORD PTR [ebp+0xc],0x0
10057aab:	je     0x10057abd
10057aad:	mov    ecx,DWORD PTR [ebp+0x8]
10057ab0:	mov    edx,DWORD PTR [ecx+0x1]
10057ab3:	mov    eax,DWORD PTR [ebp+0x8]
10057ab6:	lea    ecx,[eax+edx*1+0x5]
10057aba:	mov    DWORD PTR [ebp+0x8],ecx
10057abd:	mov    eax,DWORD PTR [ebp+0x8]
10057ac0:	pop    ebp
10057ac1:	ret    0x8
10057ac4:	int3   
10057ac5:	int3   
10057ac6:	int3   
10057ac7:	int3   
10057ac8:	int3   
10057ac9:	int3   
10057aca:	int3   
10057acb:	int3   
10057acc:	int3   
10057acd:	int3   
10057ace:	int3   
10057acf:	int3   
10057ad0:	push   ebp
10057ad1:	mov    ebp,esp
10057ad3:	sub    esp,0x668
10057ad9:	mov    eax,DWORD PTR [ebp+0x8]
10057adc:	push   eax
10057add:	call   DWORD PTR ds:0x10066220
10057ae3:	mov    DWORD PTR [ebp-0x668],eax
10057ae9:	cmp    DWORD PTR [ebp-0x668],0x0
10057af0:	jne    0x10057af9
10057af2:	xor    eax,eax
10057af4:	jmp    0x10057c5c
10057af9:	mov    ecx,DWORD PTR [ebp+0xc]
10057afc:	push   ecx
10057afd:	mov    edx,DWORD PTR [ebp-0x668]
10057b03:	push   edx
10057b04:	call   DWORD PTR ds:0x1006612c
10057b0a:	mov    DWORD PTR [ebp-0x664],eax
10057b10:	cmp    DWORD PTR [ebp-0x664],0x0
10057b17:	je     0x10057b24
10057b19:	mov    eax,DWORD PTR [ebp-0x664]
10057b1f:	jmp    0x10057c5c
10057b24:	call   0x100578a0
10057b29:	mov    DWORD PTR [ebp-0x21c],eax
10057b2f:	cmp    DWORD PTR [ebp-0x21c],0x0
10057b36:	je     0x10057b5c
10057b38:	mov    eax,DWORD PTR [ebp-0x21c]
10057b3e:	cmp    DWORD PTR [eax+0x18],0x0
10057b42:	je     0x10057b5c
10057b44:	mov    ecx,DWORD PTR [ebp-0x21c]
10057b4a:	cmp    DWORD PTR [ecx+0x1c],0x0
10057b4e:	je     0x10057b5c
10057b50:	mov    edx,DWORD PTR [ebp-0x21c]
10057b56:	cmp    DWORD PTR [edx+0x20],0x0
10057b5a:	jne    0x10057b63
10057b5c:	xor    eax,eax
10057b5e:	jmp    0x10057c5c
10057b63:	push   0x0
10057b65:	mov    eax,DWORD PTR [ebp-0x668]
10057b6b:	push   eax
10057b6c:	push   0x0
10057b6e:	mov    ecx,DWORD PTR [ebp+0x8]
10057b71:	push   ecx
10057b72:	push   0x0
10057b74:	mov    edx,DWORD PTR [ebp-0x21c]
10057b7a:	mov    eax,DWORD PTR [edx]
10057b7c:	push   eax
10057b7d:	mov    ecx,DWORD PTR [ebp-0x21c]
10057b83:	call   DWORD PTR [ecx+0x18]
10057b86:	push   0x23c
10057b8b:	push   0x0
10057b8d:	lea    edx,[ebp-0x460]
10057b93:	push   edx
10057b94:	call   0x10045c00
10057b99:	add    esp,0xc
10057b9c:	lea    eax,[ebp-0x460]
10057ba2:	push   eax
10057ba3:	mov    ecx,DWORD PTR [ebp-0x668]
10057ba9:	push   ecx
10057baa:	mov    edx,DWORD PTR [ebp-0x21c]
10057bb0:	mov    eax,DWORD PTR [edx]
10057bb2:	push   eax
10057bb3:	mov    ecx,DWORD PTR [ebp-0x21c]
10057bb9:	call   DWORD PTR [ecx+0x1c]
10057bbc:	test   eax,eax
10057bbe:	jne    0x10057bc7
10057bc0:	xor    eax,eax
10057bc2:	jmp    0x10057c5c
10057bc7:	lea    edx,[ebp-0x444]
10057bcd:	push   edx
10057bce:	lea    eax,[ebp-0x660]
10057bd4:	push   eax
10057bd5:	call   0x10046440
10057bda:	add    esp,0x8
10057bdd:	push   0x1007f090
10057be2:	lea    ecx,[ebp-0x660]
10057be8:	push   ecx
10057be9:	call   0x10046450
10057bee:	add    esp,0x8
10057bf1:	mov    edx,DWORD PTR [ebp+0xc]
10057bf4:	push   edx
10057bf5:	lea    eax,[ebp-0x660]
10057bfb:	push   eax
10057bfc:	call   0x10046450
10057c01:	add    esp,0x8
10057c04:	push   0x218
10057c09:	push   0x0
10057c0b:	lea    ecx,[ebp-0x218]
10057c11:	push   ecx
10057c12:	call   0x10045c00
10057c17:	add    esp,0xc
10057c1a:	mov    DWORD PTR [ebp-0x218],0x18
10057c24:	mov    DWORD PTR [ebp-0x208],0x80
10057c2e:	lea    edx,[ebp-0x218]
10057c34:	push   edx
10057c35:	lea    eax,[ebp-0x660]
10057c3b:	push   eax
10057c3c:	mov    ecx,DWORD PTR [ebp-0x21c]
10057c42:	mov    edx,DWORD PTR [ecx]
10057c44:	push   edx
10057c45:	mov    eax,DWORD PTR [ebp-0x21c]
10057c4b:	call   DWORD PTR [eax+0x20]
10057c4e:	test   eax,eax
10057c50:	jne    0x10057c56
10057c52:	xor    eax,eax
10057c54:	jmp    0x10057c5c
10057c56:	mov    eax,DWORD PTR [ebp-0x214]
10057c5c:	mov    esp,ebp
10057c5e:	pop    ebp
10057c5f:	ret    0x8
10057c62:	int3   
10057c63:	int3   
10057c64:	int3   
10057c65:	int3   
10057c66:	int3   
10057c67:	int3   
10057c68:	int3   
10057c69:	int3   
10057c6a:	int3   
10057c6b:	int3   
10057c6c:	int3   
10057c6d:	int3   
10057c6e:	int3   
10057c6f:	int3   
10057c70:	push   ebp
10057c71:	mov    ebp,esp
10057c73:	sub    esp,0x58
10057c76:	push   0x0
10057c78:	mov    eax,DWORD PTR [ebp+0x10]
10057c7b:	push   eax
10057c7c:	lea    ecx,[ebp-0x58]
10057c7f:	call   0x10057ca0
10057c84:	mov    ecx,DWORD PTR [ebp+0xc]
10057c87:	push   ecx
10057c88:	mov    edx,DWORD PTR [ebp+0x8]
10057c8b:	push   edx
10057c8c:	lea    ecx,[ebp-0x58]
10057c8f:	call   0x10057da0
10057c94:	mov    esp,ebp
10057c96:	pop    ebp
10057c97:	ret    0xc
10057c9a:	int3   
10057c9b:	int3   
10057c9c:	int3   
10057c9d:	int3   
10057c9e:	int3   
10057c9f:	int3   
10057ca0:	push   ebp
10057ca1:	mov    ebp,esp
10057ca3:	sub    esp,0xc
10057ca6:	mov    DWORD PTR [ebp-0x4],ecx
10057ca9:	mov    ecx,DWORD PTR [ebp-0x4]
10057cac:	call   0x10057d40
10057cb1:	mov    ecx,DWORD PTR [ebp-0x4]
10057cb4:	call   0x10057d80
10057cb9:	cmp    DWORD PTR [ebp+0x8],0x0
10057cbd:	je     0x10057cc7
10057cbf:	mov    eax,DWORD PTR [ebp+0x8]
10057cc2:	mov    DWORD PTR [ebp-0x8],eax
10057cc5:	jmp    0x10057cd0
10057cc7:	mov    ecx,DWORD PTR [ebp-0x4]
10057cca:	add    ecx,0x14
10057ccd:	mov    DWORD PTR [ebp-0x8],ecx
10057cd0:	mov    edx,DWORD PTR [ebp-0x4]
10057cd3:	mov    eax,DWORD PTR [ebp-0x8]
10057cd6:	mov    DWORD PTR [edx+0x8],eax
10057cd9:	cmp    DWORD PTR [ebp+0xc],0x0
10057cdd:	je     0x10057ce7
10057cdf:	mov    ecx,DWORD PTR [ebp+0xc]
10057ce2:	mov    DWORD PTR [ebp-0xc],ecx
10057ce5:	jmp    0x10057cf0
10057ce7:	mov    edx,DWORD PTR [ebp-0x4]
10057cea:	add    edx,0x10
10057ced:	mov    DWORD PTR [ebp-0xc],edx
10057cf0:	mov    eax,DWORD PTR [ebp-0x4]
10057cf3:	mov    ecx,DWORD PTR [ebp-0xc]
10057cf6:	mov    DWORD PTR [eax+0xc],ecx
10057cf9:	mov    edx,DWORD PTR [ebp-0x4]
10057cfc:	mov    eax,DWORD PTR [edx+0x8]
10057cff:	mov    DWORD PTR [eax],0x0
10057d05:	mov    ecx,DWORD PTR [ebp-0x4]
10057d08:	mov    edx,DWORD PTR [ecx+0xc]
10057d0b:	mov    DWORD PTR [edx],0x0
10057d11:	mov    eax,DWORD PTR [ebp-0x4]
10057d14:	mov    esp,ebp
10057d16:	pop    ebp
10057d17:	ret    0x8
10057d1a:	int3   
10057d1b:	int3   
10057d1c:	int3   
10057d1d:	int3   
10057d1e:	int3   
10057d1f:	int3   
10057d20:	push   ebp
10057d21:	mov    ebp,esp
10057d23:	push   ecx
10057d24:	mov    DWORD PTR [ebp-0x4],ecx
10057d27:	mov    eax,DWORD PTR [ebp-0x4]
10057d2a:	mov    DWORD PTR [eax],0x1
10057d30:	mov    esp,ebp
10057d32:	pop    ebp
10057d33:	ret    
10057d34:	int3   
10057d35:	int3   
10057d36:	int3   
10057d37:	int3   
10057d38:	int3   
10057d39:	int3   
10057d3a:	int3   
10057d3b:	int3   
10057d3c:	int3   
10057d3d:	int3   
10057d3e:	int3   
10057d3f:	int3   
10057d40:	push   ebp
10057d41:	mov    ebp,esp
10057d43:	push   ecx
10057d44:	mov    DWORD PTR [ebp-0x4],ecx
10057d47:	mov    eax,DWORD PTR [ebp-0x4]
10057d4a:	mov    DWORD PTR [eax],0x0
10057d50:	mov    esp,ebp
10057d52:	pop    ebp
10057d53:	ret    
10057d54:	int3   
10057d55:	int3   
10057d56:	int3   
10057d57:	int3   
10057d58:	int3   
10057d59:	int3   
10057d5a:	int3   
10057d5b:	int3   
10057d5c:	int3   
10057d5d:	int3   
10057d5e:	int3   
10057d5f:	int3   
10057d60:	push   ebp
10057d61:	mov    ebp,esp
10057d63:	push   ecx
10057d64:	mov    DWORD PTR [ebp-0x4],ecx
10057d67:	mov    eax,DWORD PTR [ebp-0x4]
10057d6a:	mov    DWORD PTR [eax+0x4],0x1
10057d71:	mov    esp,ebp
10057d73:	pop    ebp
10057d74:	ret    
10057d75:	int3   
10057d76:	int3   
10057d77:	int3   
10057d78:	int3   
10057d79:	int3   
10057d7a:	int3   
10057d7b:	int3   
10057d7c:	int3   
10057d7d:	int3   
10057d7e:	int3   
10057d7f:	int3   
10057d80:	push   ebp
10057d81:	mov    ebp,esp
10057d83:	push   ecx
10057d84:	mov    DWORD PTR [ebp-0x4],ecx
10057d87:	mov    eax,DWORD PTR [ebp-0x4]
10057d8a:	mov    DWORD PTR [eax+0x4],0x0
10057d91:	mov    esp,ebp
10057d93:	pop    ebp
10057d94:	ret    
10057d95:	int3   
10057d96:	int3   
10057d97:	int3   
10057d98:	int3   
10057d99:	int3   
10057d9a:	int3   
10057d9b:	int3   
10057d9c:	int3   
10057d9d:	int3   
10057d9e:	int3   
10057d9f:	int3   
10057da0:	push   ebp
10057da1:	mov    ebp,esp
10057da3:	sub    esp,0x8
10057da6:	mov    DWORD PTR [ebp-0x8],ecx
10057da9:	cmp    DWORD PTR [ebp+0x8],0x0
10057dad:	jne    0x10057db8
10057daf:	mov    eax,DWORD PTR [ebp-0x8]
10057db2:	add    eax,0x18
10057db5:	mov    DWORD PTR [ebp+0x8],eax
10057db8:	cmp    DWORD PTR [ebp+0xc],0x0
10057dbc:	jne    0x10057dca
10057dbe:	push   0xd
10057dc0:	call   DWORD PTR ds:0x1006615c
10057dc6:	xor    eax,eax
10057dc8:	jmp    0x10057def
10057dca:	mov    ecx,DWORD PTR [ebp+0xc]
10057dcd:	movzx  edx,BYTE PTR [ecx]
10057dd0:	lea    eax,[edx*8+0x1006baa8]
10057dd7:	mov    DWORD PTR [ebp-0x4],eax
10057dda:	mov    ecx,DWORD PTR [ebp+0xc]
10057ddd:	push   ecx
10057dde:	mov    edx,DWORD PTR [ebp+0x8]
10057de1:	push   edx
10057de2:	mov    eax,DWORD PTR [ebp-0x4]
10057de5:	push   eax
10057de6:	mov    edx,DWORD PTR [ebp-0x4]
10057de9:	mov    ecx,DWORD PTR [ebp-0x8]
10057dec:	call   DWORD PTR [edx+0x4]
10057def:	mov    esp,ebp
10057df1:	pop    ebp
10057df2:	ret    0x8
10057df5:	int3   
10057df6:	int3   
10057df7:	int3   
10057df8:	int3   
10057df9:	int3   
10057dfa:	int3   
10057dfb:	int3   
10057dfc:	int3   
10057dfd:	int3   
10057dfe:	int3   
10057dff:	int3   
10057e00:	push   ebp
10057e01:	mov    ebp,esp
10057e03:	sub    esp,0x1c
10057e06:	mov    DWORD PTR [ebp-0x10],ecx
10057e09:	mov    eax,DWORD PTR [ebp+0x8]
10057e0c:	mov    ecx,DWORD PTR [eax]
10057e0e:	shr    ecx,0x14
10057e11:	and    ecx,0xf
10057e14:	and    ecx,0x2
10057e17:	test   ecx,ecx
10057e19:	je     0x10057e4a
10057e1b:	mov    edx,DWORD PTR [ebp-0x10]
10057e1e:	cmp    DWORD PTR [edx+0x4],0x0
10057e22:	je     0x10057e34
10057e24:	mov    eax,DWORD PTR [ebp+0x8]
10057e27:	mov    ecx,DWORD PTR [eax]
10057e29:	shr    ecx,0xb
10057e2c:	and    ecx,0x7
10057e2f:	mov    DWORD PTR [ebp-0x14],ecx
10057e32:	jmp    0x10057e42
10057e34:	mov    edx,DWORD PTR [ebp+0x8]
10057e37:	mov    eax,DWORD PTR [edx]
10057e39:	shr    eax,0x8
10057e3c:	and    eax,0x7
10057e3f:	mov    DWORD PTR [ebp-0x14],eax
10057e42:	mov    ecx,DWORD PTR [ebp-0x14]
10057e45:	mov    DWORD PTR [ebp-0x18],ecx
10057e48:	jmp    0x10057e76
10057e4a:	mov    edx,DWORD PTR [ebp-0x10]
10057e4d:	cmp    DWORD PTR [edx],0x0
10057e50:	je     0x10057e62
10057e52:	mov    eax,DWORD PTR [ebp+0x8]
10057e55:	mov    ecx,DWORD PTR [eax]
10057e57:	shr    ecx,0xb
10057e5a:	and    ecx,0x7
10057e5d:	mov    DWORD PTR [ebp-0x1c],ecx
10057e60:	jmp    0x10057e70
10057e62:	mov    edx,DWORD PTR [ebp+0x8]
10057e65:	mov    eax,DWORD PTR [edx]
10057e67:	shr    eax,0x8
10057e6a:	and    eax,0x7
10057e6d:	mov    DWORD PTR [ebp-0x1c],eax
10057e70:	mov    ecx,DWORD PTR [ebp-0x1c]
10057e73:	mov    DWORD PTR [ebp-0x18],ecx
10057e76:	mov    edx,DWORD PTR [ebp-0x18]
10057e79:	mov    DWORD PTR [ebp-0x8],edx
10057e7c:	mov    eax,DWORD PTR [ebp-0x8]
10057e7f:	mov    DWORD PTR [ebp-0x4],eax
10057e82:	mov    ecx,DWORD PTR [ebp+0x8]
10057e85:	mov    edx,DWORD PTR [ecx]
10057e87:	shr    edx,0xe
10057e8a:	and    edx,0x7
10057e8d:	test   edx,edx
10057e8f:	jbe    0x10057f3e
10057e95:	mov    eax,DWORD PTR [ebp+0x8]
10057e98:	mov    ecx,DWORD PTR [eax]
10057e9a:	shr    ecx,0xe
10057e9d:	and    ecx,0x7
10057ea0:	mov    edx,DWORD PTR [ebp+0x10]
10057ea3:	mov    al,BYTE PTR [edx+ecx*1]
10057ea6:	mov    BYTE PTR [ebp-0x9],al
10057ea9:	movzx  ecx,BYTE PTR [ebp-0x9]
10057ead:	mov    dl,BYTE PTR [ecx+0x1006b9a8]
10057eb3:	mov    BYTE PTR [ebp-0xa],dl
10057eb6:	movzx  eax,BYTE PTR [ebp-0xa]
10057eba:	and    eax,0x10
10057ebd:	test   eax,eax
10057ebf:	je     0x10057f2f
10057ec1:	mov    ecx,DWORD PTR [ebp+0x8]
10057ec4:	mov    edx,DWORD PTR [ecx]
10057ec6:	shr    edx,0xe
10057ec9:	and    edx,0x7
10057ecc:	mov    eax,DWORD PTR [ebp+0x10]
10057ecf:	mov    cl,BYTE PTR [eax+edx*1+0x1]
10057ed3:	mov    BYTE PTR [ebp-0xb],cl
10057ed6:	movzx  edx,BYTE PTR [ebp-0xb]
10057eda:	and    edx,0x7
10057edd:	cmp    edx,0x5
10057ee0:	jne    0x10057f2f
10057ee2:	movzx  eax,BYTE PTR [ebp-0x9]
10057ee6:	and    eax,0xc0
10057eeb:	test   eax,eax
10057eed:	jne    0x10057efa
10057eef:	mov    ecx,DWORD PTR [ebp-0x4]
10057ef2:	add    ecx,0x4
10057ef5:	mov    DWORD PTR [ebp-0x4],ecx
10057ef8:	jmp    0x10057f2f
10057efa:	movzx  edx,BYTE PTR [ebp-0x9]
10057efe:	and    edx,0xc0
10057f04:	cmp    edx,0x40
10057f07:	jne    0x10057f14
10057f09:	mov    eax,DWORD PTR [ebp-0x4]
10057f0c:	add    eax,0x1
10057f0f:	mov    DWORD PTR [ebp-0x4],eax
10057f12:	jmp    0x10057f2f
10057f14:	movzx  ecx,BYTE PTR [ebp-0x9]
10057f18:	and    ecx,0xc0
10057f1e:	cmp    ecx,0x80
10057f24:	jne    0x10057f2f
10057f26:	mov    edx,DWORD PTR [ebp-0x4]
10057f29:	add    edx,0x4
10057f2c:	mov    DWORD PTR [ebp-0x4],edx
10057f2f:	movzx  eax,BYTE PTR [ebp-0xa]
10057f33:	and    eax,0xf
10057f36:	mov    ecx,DWORD PTR [ebp-0x4]
10057f39:	add    ecx,eax
10057f3b:	mov    DWORD PTR [ebp-0x4],ecx
10057f3e:	mov    edx,DWORD PTR [ebp-0x4]
10057f41:	push   edx
10057f42:	mov    eax,DWORD PTR [ebp+0x10]
10057f45:	push   eax
10057f46:	mov    ecx,DWORD PTR [ebp+0xc]
10057f49:	push   ecx
10057f4a:	call   0x10045180
10057f4f:	add    esp,0xc
10057f52:	mov    edx,DWORD PTR [ebp+0x8]
10057f55:	mov    eax,DWORD PTR [edx]
10057f57:	shl    eax,0xc
10057f5a:	sar    eax,0x1d
10057f5d:	test   eax,eax
10057f5f:	je     0x10057f89
10057f61:	mov    ecx,DWORD PTR [ebp+0x8]
10057f64:	mov    edx,DWORD PTR [ecx]
10057f66:	shl    edx,0xc
10057f69:	sar    edx,0x1d
10057f6c:	push   edx
10057f6d:	mov    eax,DWORD PTR [ebp-0x8]
10057f70:	push   eax
10057f71:	mov    ecx,DWORD PTR [ebp+0x10]
10057f74:	push   ecx
10057f75:	mov    edx,DWORD PTR [ebp+0xc]
10057f78:	push   edx
10057f79:	mov    ecx,DWORD PTR [ebp-0x10]
10057f7c:	call   0x10058030
10057f81:	mov    ecx,DWORD PTR [ebp-0x10]
10057f84:	mov    edx,DWORD PTR [ecx+0x8]
10057f87:	mov    DWORD PTR [edx],eax
10057f89:	mov    eax,DWORD PTR [ebp+0x8]
10057f8c:	mov    ecx,DWORD PTR [eax]
10057f8e:	shr    ecx,0x14
10057f91:	and    ecx,0xf
10057f94:	and    ecx,0x4
10057f97:	test   ecx,ecx
10057f99:	je     0x10057fad
10057f9b:	mov    edx,DWORD PTR [ebp-0x10]
10057f9e:	mov    eax,DWORD PTR [edx+0xc]
10057fa1:	mov    ecx,DWORD PTR [eax]
10057fa3:	neg    ecx
10057fa5:	mov    edx,DWORD PTR [ebp-0x10]
10057fa8:	mov    eax,DWORD PTR [edx+0xc]
10057fab:	mov    DWORD PTR [eax],ecx
10057fad:	mov    ecx,DWORD PTR [ebp+0x8]
10057fb0:	mov    edx,DWORD PTR [ecx]
10057fb2:	shr    edx,0x14
10057fb5:	and    edx,0xf
10057fb8:	and    edx,0x1
10057fbb:	test   edx,edx
10057fbd:	je     0x10057fcb
10057fbf:	mov    eax,DWORD PTR [ebp-0x10]
10057fc2:	mov    ecx,DWORD PTR [eax+0x8]
10057fc5:	mov    DWORD PTR [ecx],0xffffffff
10057fcb:	mov    eax,DWORD PTR [ebp+0x10]
10057fce:	add    eax,DWORD PTR [ebp-0x4]
10057fd1:	mov    esp,ebp
10057fd3:	pop    ebp
10057fd4:	ret    0xc
10057fd7:	int3   
10057fd8:	int3   
10057fd9:	int3   
10057fda:	int3   
10057fdb:	int3   
10057fdc:	int3   
10057fdd:	int3   
10057fde:	int3   
10057fdf:	int3   
10057fe0:	push   ebp
10057fe1:	mov    ebp,esp
10057fe3:	push   ecx
10057fe4:	mov    DWORD PTR [ebp-0x4],ecx
10057fe7:	mov    eax,DWORD PTR [ebp+0x10]
10057fea:	push   eax
10057feb:	mov    ecx,DWORD PTR [ebp+0xc]
10057fee:	push   ecx
10057fef:	mov    edx,DWORD PTR [ebp+0x8]
10057ff2:	push   edx
10057ff3:	mov    ecx,DWORD PTR [ebp-0x4]
10057ff6:	call   0x10057e00
10057ffb:	mov    eax,DWORD PTR [ebp+0x10]
10057ffe:	movzx  ecx,BYTE PTR [eax+0x1]
10058002:	lea    edx,[ecx*8+0x1006baa8]
10058009:	mov    DWORD PTR [ebp+0x8],edx
1005800c:	mov    eax,DWORD PTR [ebp+0x10]
1005800f:	add    eax,0x1
10058012:	push   eax
10058013:	mov    ecx,DWORD PTR [ebp+0xc]
10058016:	add    ecx,0x1
10058019:	push   ecx
1005801a:	mov    edx,DWORD PTR [ebp+0x8]
1005801d:	push   edx
1005801e:	mov    eax,DWORD PTR [ebp+0x8]
10058021:	mov    ecx,DWORD PTR [ebp-0x4]
10058024:	call   DWORD PTR [eax+0x4]
10058027:	mov    esp,ebp
10058029:	pop    ebp
1005802a:	ret    0xc
1005802d:	int3   
1005802e:	int3   
1005802f:	int3   
10058030:	push   ebp
10058031:	mov    ebp,esp
10058033:	sub    esp,0x20
10058036:	mov    DWORD PTR [ebp-0x18],ecx
10058039:	mov    eax,DWORD PTR [ebp+0x10]
1005803c:	sub    eax,DWORD PTR [ebp+0x14]
1005803f:	mov    DWORD PTR [ebp-0x10],eax
10058042:	mov    DWORD PTR [ebp-0x4],0x0
10058049:	mov    ecx,DWORD PTR [ebp+0x8]
1005804c:	add    ecx,DWORD PTR [ebp+0x14]
1005804f:	mov    DWORD PTR [ebp-0x14],ecx
10058052:	mov    DWORD PTR [ebp-0xc],0x0
10058059:	mov    edx,DWORD PTR [ebp-0x10]
1005805c:	mov    DWORD PTR [ebp-0x1c],edx
1005805f:	cmp    DWORD PTR [ebp-0x1c],0x1
10058063:	je     0x10058073
10058065:	cmp    DWORD PTR [ebp-0x1c],0x2
10058069:	je     0x1005808a
1005806b:	cmp    DWORD PTR [ebp-0x1c],0x4
1005806f:	je     0x100580a1
10058071:	jmp    0x100580b5
10058073:	mov    eax,DWORD PTR [ebp-0x14]
10058076:	movsx  ecx,BYTE PTR [eax]
10058079:	mov    DWORD PTR [ebp-0xc],ecx
1005807c:	mov    edx,DWORD PTR [ebp-0x18]
1005807f:	mov    eax,DWORD PTR [edx+0xc]
10058082:	mov    DWORD PTR [eax],0x3
10058088:	jmp    0x100580b5
1005808a:	mov    ecx,DWORD PTR [ebp-0x14]
1005808d:	movsx  edx,WORD PTR [ecx]
10058090:	mov    DWORD PTR [ebp-0xc],edx
10058093:	mov    eax,DWORD PTR [ebp-0x18]
10058096:	mov    ecx,DWORD PTR [eax+0xc]
10058099:	mov    DWORD PTR [ecx],0x2
1005809f:	jmp    0x100580b5
100580a1:	mov    edx,DWORD PTR [ebp-0x14]
100580a4:	mov    eax,DWORD PTR [edx]
100580a6:	mov    DWORD PTR [ebp-0xc],eax
100580a9:	mov    ecx,DWORD PTR [ebp-0x18]
100580ac:	mov    edx,DWORD PTR [ecx+0xc]
100580af:	mov    DWORD PTR [edx],0x0
100580b5:	mov    eax,DWORD PTR [ebp+0xc]
100580b8:	add    eax,DWORD PTR [ebp+0x10]
100580bb:	add    eax,DWORD PTR [ebp-0xc]
100580be:	mov    DWORD PTR [ebp-0x4],eax
100580c1:	mov    ecx,DWORD PTR [ebp+0x8]
100580c4:	sub    ecx,DWORD PTR [ebp+0xc]
100580c7:	mov    edx,DWORD PTR [ebp-0xc]
100580ca:	sub    edx,ecx
100580cc:	mov    DWORD PTR [ebp-0x8],edx
100580cf:	mov    eax,DWORD PTR [ebp-0x10]
100580d2:	mov    DWORD PTR [ebp-0x20],eax
100580d5:	cmp    DWORD PTR [ebp-0x20],0x1
100580d9:	je     0x100580e9
100580db:	cmp    DWORD PTR [ebp-0x20],0x2
100580df:	je     0x100580f3
100580e1:	cmp    DWORD PTR [ebp-0x20],0x4
100580e5:	je     0x100580ff
100580e7:	jmp    0x10058107
100580e9:	mov    ecx,DWORD PTR [ebp-0x14]
100580ec:	mov    dl,BYTE PTR [ebp-0x8]
100580ef:	mov    BYTE PTR [ecx],dl
100580f1:	jmp    0x10058107
100580f3:	mov    eax,DWORD PTR [ebp-0x14]
100580f6:	mov    cx,WORD PTR [ebp-0x8]
100580fa:	mov    WORD PTR [eax],cx
100580fd:	jmp    0x10058107
100580ff:	mov    edx,DWORD PTR [ebp-0x14]
10058102:	mov    eax,DWORD PTR [ebp-0x8]
10058105:	mov    DWORD PTR [edx],eax
10058107:	mov    eax,DWORD PTR [ebp-0x4]
1005810a:	mov    esp,ebp
1005810c:	pop    ebp
1005810d:	ret    0x10
10058110:	push   ebp
10058111:	mov    ebp,esp
10058113:	push   ecx
10058114:	mov    DWORD PTR [ebp-0x4],ecx
10058117:	mov    eax,DWORD PTR [ebp+0x10]
1005811a:	add    eax,0x1
1005811d:	mov    esp,ebp
1005811f:	pop    ebp
10058120:	ret    0xc
10058123:	int3   
10058124:	int3   
10058125:	int3   
10058126:	int3   
10058127:	int3   
10058128:	int3   
10058129:	int3   
1005812a:	int3   
1005812b:	int3   
1005812c:	int3   
1005812d:	int3   
1005812e:	int3   
1005812f:	int3   
10058130:	push   ebp
10058131:	mov    ebp,esp
10058133:	push   ecx
10058134:	mov    DWORD PTR [ebp-0x4],ecx
10058137:	mov    eax,DWORD PTR [ebp+0x10]
1005813a:	push   eax
1005813b:	mov    ecx,DWORD PTR [ebp+0xc]
1005813e:	push   ecx
1005813f:	mov    edx,DWORD PTR [ebp+0x8]
10058142:	push   edx
10058143:	mov    ecx,DWORD PTR [ebp-0x4]
10058146:	call   0x10057e00
1005814b:	mov    eax,DWORD PTR [ebp+0x10]
1005814e:	movzx  ecx,BYTE PTR [eax+0x1]
10058152:	lea    edx,[ecx*8+0x1006c2b0]
10058159:	mov    DWORD PTR [ebp+0x8],edx
1005815c:	mov    eax,DWORD PTR [ebp+0x10]
1005815f:	add    eax,0x1
10058162:	push   eax
10058163:	mov    ecx,DWORD PTR [ebp+0xc]
10058166:	add    ecx,0x1
10058169:	push   ecx
1005816a:	mov    edx,DWORD PTR [ebp+0x8]
1005816d:	push   edx
1005816e:	mov    eax,DWORD PTR [ebp+0x8]
10058171:	mov    ecx,DWORD PTR [ebp-0x4]
10058174:	call   DWORD PTR [eax+0x4]
10058177:	mov    esp,ebp
10058179:	pop    ebp
1005817a:	ret    0xc
1005817d:	int3   
1005817e:	int3   
1005817f:	int3   
10058180:	push   ebp
10058181:	mov    ebp,esp
10058183:	push   ecx
10058184:	mov    DWORD PTR [ebp-0x4],ecx
10058187:	mov    ecx,DWORD PTR [ebp-0x4]
1005818a:	call   0x10057d20
1005818f:	mov    eax,DWORD PTR [ebp+0x10]
10058192:	push   eax
10058193:	mov    ecx,DWORD PTR [ebp+0xc]
10058196:	push   ecx
10058197:	mov    edx,DWORD PTR [ebp+0x8]
1005819a:	push   edx
1005819b:	mov    ecx,DWORD PTR [ebp-0x4]
1005819e:	call   0x10057fe0
100581a3:	mov    esp,ebp
100581a5:	pop    ebp
100581a6:	ret    0xc
100581a9:	int3   
100581aa:	int3   
100581ab:	int3   
100581ac:	int3   
100581ad:	int3   
100581ae:	int3   
100581af:	int3   
100581b0:	push   ebp
100581b1:	mov    ebp,esp
100581b3:	push   ecx
100581b4:	mov    DWORD PTR [ebp-0x4],ecx
100581b7:	mov    ecx,DWORD PTR [ebp-0x4]
100581ba:	call   0x10057d60
100581bf:	mov    eax,DWORD PTR [ebp+0x10]
100581c2:	push   eax
100581c3:	mov    ecx,DWORD PTR [ebp+0xc]
100581c6:	push   ecx
100581c7:	mov    edx,DWORD PTR [ebp+0x8]
100581ca:	push   edx
100581cb:	mov    ecx,DWORD PTR [ebp-0x4]
100581ce:	call   0x10057fe0
100581d3:	mov    esp,ebp
100581d5:	pop    ebp
100581d6:	ret    0xc
100581d9:	int3   
100581da:	int3   
100581db:	int3   
100581dc:	int3   
100581dd:	int3   
100581de:	int3   
100581df:	int3   
100581e0:	push   ebp
100581e1:	mov    ebp,esp
100581e3:	sub    esp,0x14
100581e6:	mov    DWORD PTR [ebp-0x14],ecx
100581e9:	mov    eax,DWORD PTR [ebp+0x10]
100581ec:	movzx  ecx,BYTE PTR [eax+0x1]
100581f0:	and    ecx,0x38
100581f3:	test   ecx,ecx
100581f5:	jne    0x10058219
100581f7:	mov    DWORD PTR [ebp-0x10],0x5bf6
100581fe:	mov    DWORD PTR [ebp-0xc],0x10057e00
10058205:	mov    edx,DWORD PTR [ebp+0x10]
10058208:	push   edx
10058209:	mov    eax,DWORD PTR [ebp+0xc]
1005820c:	push   eax
1005820d:	lea    ecx,[ebp-0x10]
10058210:	push   ecx
10058211:	mov    ecx,DWORD PTR [ebp-0x14]
10058214:	call   DWORD PTR [ebp-0xc]
10058217:	jmp    0x10058239
10058219:	mov    DWORD PTR [ebp-0x8],0x52f6
10058220:	mov    DWORD PTR [ebp-0x4],0x10057e00
10058227:	mov    edx,DWORD PTR [ebp+0x10]
1005822a:	push   edx
1005822b:	mov    eax,DWORD PTR [ebp+0xc]
1005822e:	push   eax
1005822f:	lea    ecx,[ebp-0x8]
10058232:	push   ecx
10058233:	mov    ecx,DWORD PTR [ebp-0x14]
10058236:	call   DWORD PTR [ebp-0x4]
10058239:	mov    esp,ebp
1005823b:	pop    ebp
1005823c:	ret    0xc
1005823f:	int3   
10058240:	push   ebp
10058241:	mov    ebp,esp
10058243:	sub    esp,0x14
10058246:	mov    DWORD PTR [ebp-0x14],ecx
10058249:	mov    eax,DWORD PTR [ebp+0x10]
1005824c:	movzx  ecx,BYTE PTR [eax+0x1]
10058250:	and    ecx,0x38
10058253:	test   ecx,ecx
10058255:	jne    0x10058279
10058257:	mov    DWORD PTR [ebp-0x10],0x66f7
1005825e:	mov    DWORD PTR [ebp-0xc],0x10057e00
10058265:	mov    edx,DWORD PTR [ebp+0x10]
10058268:	push   edx
10058269:	mov    eax,DWORD PTR [ebp+0xc]
1005826c:	push   eax
1005826d:	lea    ecx,[ebp-0x10]
10058270:	push   ecx
10058271:	mov    ecx,DWORD PTR [ebp-0x14]
10058274:	call   DWORD PTR [ebp-0xc]
10058277:	jmp    0x10058299
10058279:	mov    DWORD PTR [ebp-0x8],0x52f7
10058280:	mov    DWORD PTR [ebp-0x4],0x10057e00
10058287:	mov    edx,DWORD PTR [ebp+0x10]
1005828a:	push   edx
1005828b:	mov    eax,DWORD PTR [ebp+0xc]
1005828e:	push   eax
1005828f:	lea    ecx,[ebp-0x8]
10058292:	push   ecx
10058293:	mov    ecx,DWORD PTR [ebp-0x14]
10058296:	call   DWORD PTR [ebp-0x4]
10058299:	mov    esp,ebp
1005829b:	pop    ebp
1005829c:	ret    0xc
1005829f:	int3   
100582a0:	push   ebp
100582a1:	mov    ebp,esp
100582a3:	sub    esp,0x10
100582a6:	mov    DWORD PTR [ebp-0x10],ecx
100582a9:	mov    eax,DWORD PTR [ebp+0x10]
100582ac:	movzx  ecx,BYTE PTR [eax+0x1]
100582b0:	cmp    ecx,0x15
100582b3:	je     0x100582c1
100582b5:	mov    edx,DWORD PTR [ebp+0x10]
100582b8:	movzx  eax,BYTE PTR [edx+0x1]
100582bc:	cmp    eax,0x25
100582bf:	jne    0x100582d9
100582c1:	mov    ecx,DWORD PTR [ebp+0x10]
100582c4:	mov    edx,DWORD PTR [ecx+0x2]
100582c7:	mov    DWORD PTR [ebp-0xc],edx
100582ca:	mov    eax,DWORD PTR [ebp-0x10]
100582cd:	mov    ecx,DWORD PTR [eax+0x8]
100582d0:	mov    edx,DWORD PTR [ebp-0xc]
100582d3:	mov    eax,DWORD PTR [edx]
100582d5:	mov    DWORD PTR [ecx],eax
100582d7:	jmp    0x10058321
100582d9:	mov    ecx,DWORD PTR [ebp+0x10]
100582dc:	movzx  edx,BYTE PTR [ecx+0x1]
100582e0:	and    edx,0x38
100582e3:	cmp    edx,0x10
100582e6:	je     0x10058315
100582e8:	mov    eax,DWORD PTR [ebp+0x10]
100582eb:	movzx  ecx,BYTE PTR [eax+0x1]
100582ef:	and    ecx,0x38
100582f2:	cmp    ecx,0x18
100582f5:	je     0x10058315
100582f7:	mov    edx,DWORD PTR [ebp+0x10]
100582fa:	movzx  eax,BYTE PTR [edx+0x1]
100582fe:	and    eax,0x38
10058301:	cmp    eax,0x20
10058304:	je     0x10058315
10058306:	mov    ecx,DWORD PTR [ebp+0x10]
10058309:	movzx  edx,BYTE PTR [ecx+0x1]
1005830d:	and    edx,0x38
10058310:	cmp    edx,0x28
10058313:	jne    0x10058321
10058315:	mov    eax,DWORD PTR [ebp-0x10]
10058318:	mov    ecx,DWORD PTR [eax+0x8]
1005831b:	mov    DWORD PTR [ecx],0xffffffff
10058321:	mov    DWORD PTR [ebp-0x8],0x52ff
10058328:	mov    DWORD PTR [ebp-0x4],0x10057e00
1005832f:	mov    edx,DWORD PTR [ebp+0x10]
10058332:	push   edx
10058333:	mov    eax,DWORD PTR [ebp+0xc]
10058336:	push   eax
10058337:	lea    ecx,[ebp-0x8]
1005833a:	push   ecx
1005833b:	mov    ecx,DWORD PTR [ebp-0x10]
1005833e:	call   DWORD PTR [ebp-0x4]
10058341:	mov    esp,ebp
10058343:	pop    ebp
10058344:	ret    0xc
10058347:	mov    eax,DWORD PTR [esp+0x4]
1005834b:	mov    dx,WORD PTR [esp+0x8]
10058350:	jmp    0x10058359
10058352:	cmp    cx,dx
10058355:	je     0x10058368
10058357:	inc    eax
10058358:	inc    eax
10058359:	movzx  ecx,WORD PTR [eax]
1005835c:	test   cx,cx
1005835f:	jne    0x10058352
10058361:	cmp    WORD PTR [eax],dx
10058364:	je     0x10058368
10058366:	xor    eax,eax
10058368:	ret    
10058369:	push   ebp
1005836a:	mov    ebp,esp
1005836c:	sub    esp,0x14
1005836f:	push   ebx
10058370:	push   esi
10058371:	push   edi
10058372:	mov    edi,DWORD PTR [ebp+0x8]
10058375:	xor    ebx,ebx
10058377:	cmp    edi,ebx
10058379:	je     0x1005839c
1005837b:	cmp    DWORD PTR [ebp+0xc],ebx
1005837e:	jbe    0x100583a1
10058380:	cmp    edi,ebx
10058382:	je     0x10058440
10058388:	push   DWORD PTR [ebp+0xc]
1005838b:	push   edi
1005838c:	call   0x1005087e
10058391:	cmp    eax,DWORD PTR [ebp+0xc]
10058394:	pop    ecx
10058395:	pop    ecx
10058396:	jb     0x100583bf
10058398:	mov    BYTE PTR [edi],bl
1005839a:	jmp    0x100583a1
1005839c:	cmp    DWORD PTR [ebp+0xc],ebx
1005839f:	je     0x10058380
100583a1:	call   0x10046b55
100583a6:	push   0x16
100583a8:	pop    esi
100583a9:	push   ebx
100583aa:	push   ebx
100583ab:	push   ebx
100583ac:	push   ebx
100583ad:	push   ebx
100583ae:	mov    DWORD PTR [eax],esi
100583b0:	call   0x1004338c
100583b5:	add    esp,0x14
100583b8:	mov    eax,esi
100583ba:	jmp    0x10058442
100583bf:	push   DWORD PTR [ebp+0x10]
100583c2:	lea    ecx,[ebp-0x14]
100583c5:	call   0x100454e5
100583ca:	mov    esi,edi
100583cc:	cmp    BYTE PTR [esi],bl
100583ce:	je     0x10058432
100583d0:	mov    cl,BYTE PTR [edi]
100583d2:	mov    edx,DWORD PTR [ebp-0x10]
100583d5:	movzx  eax,cl
100583d8:	add    eax,edx
100583da:	mov    dl,BYTE PTR [eax+0x1d]
100583dd:	test   dl,0x4
100583e0:	je     0x1005841b
100583e2:	mov    eax,DWORD PTR [ebp-0x10]
100583e5:	push   0x1
100583e7:	push   DWORD PTR [eax+0x4]
100583ea:	lea    ecx,[ebp-0x4]
100583ed:	push   0x2
100583ef:	push   ecx
100583f0:	push   0x2
100583f2:	push   edi
100583f3:	push   0x100
100583f8:	push   DWORD PTR [eax+0xc]
100583fb:	lea    eax,[ebp-0x14]
100583fe:	push   eax
100583ff:	call   0x1004b27c
10058404:	add    esp,0x24
10058407:	cmp    eax,ebx
10058409:	je     0x10058447
1005840b:	mov    ecx,DWORD PTR [ebp-0x4]
1005840e:	mov    BYTE PTR [esi],cl
10058410:	inc    esi
10058411:	inc    edi
10058412:	cmp    eax,0x1
10058415:	jle    0x1005842d
10058417:	mov    BYTE PTR [esi],ch
10058419:	jmp    0x1005842c
1005841b:	test   dl,0x10
1005841e:	je     0x10058428
10058420:	mov    al,BYTE PTR [eax+0x11d]
10058426:	jmp    0x1005842a
10058428:	mov    al,cl
1005842a:	mov    BYTE PTR [esi],al
1005842c:	inc    esi
1005842d:	inc    edi
1005842e:	cmp    BYTE PTR [edi],bl
10058430:	jne    0x100583d0
10058432:	cmp    BYTE PTR [ebp-0x8],bl
10058435:	mov    BYTE PTR [esi],bl
10058437:	je     0x10058440
10058439:	mov    eax,DWORD PTR [ebp-0xc]
1005843c:	and    DWORD PTR [eax+0x70],0xfffffffd
10058440:	xor    eax,eax
10058442:	pop    edi
10058443:	pop    esi
10058444:	pop    ebx
10058445:	leave  
10058446:	ret    
10058447:	call   0x10046b55
1005844c:	mov    DWORD PTR [eax],0x2a
10058452:	mov    eax,DWORD PTR [ebp+0x8]
10058455:	mov    BYTE PTR [eax],bl
10058457:	call   0x10046b55
1005845c:	cmp    BYTE PTR [ebp-0x8],bl
1005845f:	mov    eax,DWORD PTR [eax]
10058461:	je     0x10058442
10058463:	mov    ecx,DWORD PTR [ebp-0xc]
10058466:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005846a:	jmp    0x10058442
1005846c:	push   0x0
1005846e:	push   DWORD PTR [esp+0xc]
10058472:	push   DWORD PTR [esp+0xc]
10058476:	call   0x10058369
1005847b:	add    esp,0xc
1005847e:	ret    
1005847f:	push   ebp
10058480:	mov    ebp,esp
10058482:	sub    esp,0x20
10058485:	push   ebx
10058486:	xor    ebx,ebx
10058488:	cmp    DWORD PTR [ebp+0xc],ebx
1005848b:	jne    0x100584aa
1005848d:	call   0x10046b55
10058492:	push   ebx
10058493:	push   ebx
10058494:	push   ebx
10058495:	push   ebx
10058496:	push   ebx
10058497:	mov    DWORD PTR [eax],0x16
1005849d:	call   0x1004338c
100584a2:	add    esp,0x14
100584a5:	or     eax,0xffffffff
100584a8:	jmp    0x100584f7
100584aa:	mov    eax,DWORD PTR [ebp+0x8]
100584ad:	cmp    eax,ebx
100584af:	je     0x1005848d
100584b1:	push   esi
100584b2:	mov    DWORD PTR [ebp-0x18],eax
100584b5:	mov    DWORD PTR [ebp-0x20],eax
100584b8:	lea    eax,[ebp+0x10]
100584bb:	push   eax
100584bc:	push   ebx
100584bd:	push   DWORD PTR [ebp+0xc]
100584c0:	lea    eax,[ebp-0x20]
100584c3:	push   eax
100584c4:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
100584cb:	mov    DWORD PTR [ebp-0x14],0x42
100584d2:	call   0x1004d3c1
100584d7:	add    esp,0x10
100584da:	dec    DWORD PTR [ebp-0x1c]
100584dd:	mov    esi,eax
100584df:	js     0x100584e8
100584e1:	mov    eax,DWORD PTR [ebp-0x20]
100584e4:	mov    BYTE PTR [eax],bl
100584e6:	jmp    0x100584f4
100584e8:	lea    eax,[ebp-0x20]
100584eb:	push   eax
100584ec:	push   ebx
100584ed:	call   0x100487cd
100584f2:	pop    ecx
100584f3:	pop    ecx
100584f4:	mov    eax,esi
100584f6:	pop    esi
100584f7:	pop    ebx
100584f8:	leave  
100584f9:	ret    
100584fa:	push   ebp
100584fb:	mov    ebp,esp
100584fd:	sub    esp,0x1c
10058500:	mov    edx,DWORD PTR [ebp+0x10]
10058503:	push   esi
10058504:	mov    esi,DWORD PTR [ebp+0x8]
10058507:	push   0xfffffffe
10058509:	pop    eax
1005850a:	cmp    esi,eax
1005850c:	mov    DWORD PTR [ebp-0x14],eax
1005850f:	mov    DWORD PTR [ebp-0x1c],edx
10058512:	jne    0x1005852f
10058514:	call   0x10046b68
10058519:	and    DWORD PTR [eax],0x0
1005851c:	call   0x10046b55
10058521:	mov    DWORD PTR [eax],0x9
10058527:	or     eax,0xffffffff
1005852a:	jmp    0x10058a99
1005852f:	push   edi
10058530:	xor    edi,edi
10058532:	cmp    esi,edi
10058534:	jl     0x1005853e
10058536:	cmp    esi,DWORD PTR ds:0x10082464
1005853c:	jb     0x10058565
1005853e:	call   0x10046b68
10058543:	mov    DWORD PTR [eax],edi
10058545:	call   0x10046b55
1005854a:	push   edi
1005854b:	push   edi
1005854c:	push   edi
1005854d:	push   edi
1005854e:	push   edi
1005854f:	mov    DWORD PTR [eax],0x9
10058555:	call   0x1004338c
1005855a:	add    esp,0x14
1005855d:	or     eax,0xffffffff
10058560:	jmp    0x10058a98
10058565:	mov    eax,esi
10058567:	and    esi,0x1f
1005856a:	imul   esi,esi,0x28
1005856d:	sar    eax,0x5
10058570:	push   ebx
10058571:	lea    ebx,[eax*4+0x10082480]
10058578:	mov    eax,DWORD PTR [ebx]
1005857a:	add    eax,esi
1005857c:	mov    cl,BYTE PTR [eax+0x4]
1005857f:	test   cl,0x1
10058582:	jne    0x1005859b
10058584:	call   0x10046b68
10058589:	mov    DWORD PTR [eax],edi
1005858b:	call   0x10046b55
10058590:	mov    DWORD PTR [eax],0x9
10058596:	jmp    0x100586e2
1005859b:	cmp    edx,edi
1005859d:	mov    DWORD PTR [ebp-0x10],edi
100585a0:	je     0x10058a95
100585a6:	test   cl,0x2
100585a9:	jne    0x10058a95
100585af:	mov    ecx,DWORD PTR [ebp+0xc]
100585b2:	cmp    ecx,edi
100585b4:	je     0x100586d0
100585ba:	mov    al,BYTE PTR [eax+0x24]
100585bd:	add    al,al
100585bf:	sar    al,1
100585c1:	mov    BYTE PTR [ebp-0x2],al
100585c4:	movsx  eax,al
100585c7:	dec    eax
100585c8:	je     0x100586c8
100585ce:	dec    eax
100585cf:	jne    0x100585e3
100585d1:	mov    eax,edx
100585d3:	not    eax
100585d5:	test   al,0x1
100585d7:	je     0x100586d0
100585dd:	and    edx,0xfffffffe
100585e0:	mov    DWORD PTR [ebp+0x10],edx
100585e3:	mov    DWORD PTR [ebp-0xc],ecx
100585e6:	mov    ecx,DWORD PTR [ebx]
100585e8:	mov    eax,DWORD PTR [ebp-0xc]
100585eb:	lea    edi,[esi+ecx*1]
100585ee:	test   BYTE PTR [edi+0x4],0x48
100585f2:	je     0x1005866a
100585f4:	mov    cl,BYTE PTR [edi+0x5]
100585f7:	cmp    cl,0xa
100585fa:	je     0x1005866a
100585fc:	xor    edx,edx
100585fe:	cmp    DWORD PTR [ebp+0x10],edx
10058601:	je     0x1005866a
10058603:	mov    BYTE PTR [eax],cl
10058605:	mov    ecx,DWORD PTR [ebx]
10058607:	inc    eax
10058608:	dec    DWORD PTR [ebp+0x10]
1005860b:	cmp    BYTE PTR [ebp-0x2],dl
1005860e:	mov    DWORD PTR [ebp-0x10],0x1
10058615:	mov    BYTE PTR [esi+ecx*1+0x5],0xa
1005861a:	je     0x1005866a
1005861c:	mov    ecx,DWORD PTR [ebx]
1005861e:	mov    cl,BYTE PTR [esi+ecx*1+0x25]
10058622:	cmp    cl,0xa
10058625:	je     0x1005866a
10058627:	cmp    DWORD PTR [ebp+0x10],edx
1005862a:	je     0x1005866a
1005862c:	mov    BYTE PTR [eax],cl
1005862e:	mov    ecx,DWORD PTR [ebx]
10058630:	inc    eax
10058631:	dec    DWORD PTR [ebp+0x10]
10058634:	cmp    BYTE PTR [ebp-0x2],0x1
10058638:	mov    DWORD PTR [ebp-0x10],0x2
1005863f:	mov    BYTE PTR [esi+ecx*1+0x25],0xa
10058644:	jne    0x1005866a
10058646:	mov    ecx,DWORD PTR [ebx]
10058648:	mov    cl,BYTE PTR [esi+ecx*1+0x26]
1005864c:	cmp    cl,0xa
1005864f:	je     0x1005866a
10058651:	cmp    DWORD PTR [ebp+0x10],edx
10058654:	je     0x1005866a
10058656:	mov    BYTE PTR [eax],cl
10058658:	mov    ecx,DWORD PTR [ebx]
1005865a:	inc    eax
1005865b:	dec    DWORD PTR [ebp+0x10]
1005865e:	mov    DWORD PTR [ebp-0x10],0x3
10058665:	mov    BYTE PTR [esi+ecx*1+0x26],0xa
1005866a:	push   0x0
1005866c:	lea    ecx,[ebp-0x18]
1005866f:	push   ecx
10058670:	push   DWORD PTR [ebp+0x10]
10058673:	push   eax
10058674:	mov    eax,DWORD PTR [ebx]
10058676:	push   DWORD PTR [esi+eax*1]
10058679:	call   DWORD PTR ds:0x100660d4
1005867f:	test   eax,eax
10058681:	je     0x10058a5f
10058687:	mov    edi,DWORD PTR [ebp-0x18]
1005868a:	test   edi,edi
1005868c:	jl     0x10058a5f
10058692:	cmp    edi,DWORD PTR [ebp+0x10]
10058695:	ja     0x10058a5f
1005869b:	mov    eax,DWORD PTR [ebx]
1005869d:	add    DWORD PTR [ebp-0x10],edi
100586a0:	lea    eax,[esi+eax*1+0x4]
100586a4:	test   BYTE PTR [eax],0x80
100586a7:	je     0x100588ff
100586ad:	cmp    BYTE PTR [ebp-0x2],0x2
100586b1:	je     0x10058929
100586b7:	test   edi,edi
100586b9:	je     0x10058734
100586bb:	mov    ecx,DWORD PTR [ebp-0xc]
100586be:	cmp    BYTE PTR [ecx],0xa
100586c1:	jne    0x10058734
100586c3:	or     BYTE PTR [eax],0x4
100586c6:	jmp    0x10058737
100586c8:	mov    eax,edx
100586ca:	not    eax
100586cc:	test   al,0x1
100586ce:	jne    0x100586f1
100586d0:	call   0x10046b68
100586d5:	mov    DWORD PTR [eax],edi
100586d7:	call   0x10046b55
100586dc:	mov    DWORD PTR [eax],0x16
100586e2:	push   edi
100586e3:	push   edi
100586e4:	push   edi
100586e5:	push   edi
100586e6:	push   edi
100586e7:	call   0x1004338c
100586ec:	add    esp,0x14
100586ef:	jmp    0x1005872c
100586f1:	mov    eax,edx
100586f3:	push   0x4
100586f5:	pop    ecx
100586f6:	shr    eax,1
100586f8:	cmp    eax,ecx
100586fa:	mov    DWORD PTR [ebp+0x10],ecx
100586fd:	jb     0x10058702
100586ff:	mov    DWORD PTR [ebp+0x10],eax
10058702:	push   DWORD PTR [ebp+0x10]
10058705:	call   0x10047422
1005870a:	cmp    eax,edi
1005870c:	pop    ecx
1005870d:	mov    DWORD PTR [ebp-0xc],eax
10058710:	jne    0x100585e6
10058716:	call   0x10046b55
1005871b:	mov    DWORD PTR [eax],0xc
10058721:	call   0x10046b68
10058726:	mov    DWORD PTR [eax],0x8
1005872c:	or     eax,0xffffffff
1005872f:	jmp    0x10058a97
10058734:	and    BYTE PTR [eax],0xfb
10058737:	mov    edi,DWORD PTR [ebp-0xc]
1005873a:	mov    eax,DWORD PTR [ebp-0x10]
1005873d:	add    eax,edi
1005873f:	cmp    edi,eax
10058741:	mov    DWORD PTR [ebp+0x10],edi
10058744:	mov    DWORD PTR [ebp-0x10],eax
10058747:	jae    0x1005881d
1005874d:	mov    ecx,DWORD PTR [ebp+0x10]
10058750:	mov    al,BYTE PTR [ecx]
10058752:	cmp    al,0x1a
10058754:	je     0x10058808
1005875a:	cmp    al,0xd
1005875c:	je     0x1005876a
1005875e:	mov    BYTE PTR [edi],al
10058760:	inc    edi
10058761:	inc    ecx
10058762:	mov    DWORD PTR [ebp+0x10],ecx
10058765:	jmp    0x100587fa
1005876a:	mov    eax,DWORD PTR [ebp-0x10]
1005876d:	dec    eax
1005876e:	cmp    ecx,eax
10058770:	jae    0x10058789
10058772:	lea    eax,[ecx+0x1]
10058775:	cmp    BYTE PTR [eax],0xa
10058778:	jne    0x10058784
1005877a:	inc    ecx
1005877b:	inc    ecx
1005877c:	mov    DWORD PTR [ebp+0x10],ecx
1005877f:	mov    BYTE PTR [edi],0xa
10058782:	jmp    0x100587f9
10058784:	mov    DWORD PTR [ebp+0x10],eax
10058787:	jmp    0x100587f6
10058789:	inc    DWORD PTR [ebp+0x10]
1005878c:	push   0x0
1005878e:	lea    eax,[ebp-0x18]
10058791:	push   eax
10058792:	push   0x1
10058794:	lea    eax,[ebp-0x1]
10058797:	push   eax
10058798:	mov    eax,DWORD PTR [ebx]
1005879a:	push   DWORD PTR [esi+eax*1]
1005879d:	call   DWORD PTR ds:0x100660d4
100587a3:	test   eax,eax
100587a5:	jne    0x100587b1
100587a7:	call   DWORD PTR ds:0x100660cc
100587ad:	test   eax,eax
100587af:	jne    0x100587f6
100587b1:	cmp    DWORD PTR [ebp-0x18],0x0
100587b5:	je     0x100587f6
100587b7:	mov    eax,DWORD PTR [ebx]
100587b9:	test   BYTE PTR [esi+eax*1+0x4],0x48
100587be:	je     0x100587d4
100587c0:	cmp    BYTE PTR [ebp-0x1],0xa
100587c4:	je     0x1005877f
100587c6:	mov    BYTE PTR [edi],0xd
100587c9:	mov    eax,DWORD PTR [ebx]
100587cb:	mov    cl,BYTE PTR [ebp-0x1]
100587ce:	mov    BYTE PTR [esi+eax*1+0x5],cl
100587d2:	jmp    0x100587f9
100587d4:	cmp    edi,DWORD PTR [ebp-0xc]
100587d7:	jne    0x100587df
100587d9:	cmp    BYTE PTR [ebp-0x1],0xa
100587dd:	je     0x1005877f
100587df:	push   0x1
100587e1:	push   0xffffffff
100587e3:	push   0xffffffff
100587e5:	push   DWORD PTR [ebp+0x8]
100587e8:	call   0x1004c711
100587ed:	add    esp,0x10
100587f0:	cmp    BYTE PTR [ebp-0x1],0xa
100587f4:	je     0x100587fa
100587f6:	mov    BYTE PTR [edi],0xd
100587f9:	inc    edi
100587fa:	mov    eax,DWORD PTR [ebp-0x10]
100587fd:	cmp    DWORD PTR [ebp+0x10],eax
10058800:	jb     0x1005874d
10058806:	jmp    0x1005881d
10058808:	mov    eax,DWORD PTR [ebx]
1005880a:	lea    eax,[esi+eax*1+0x4]
1005880e:	test   BYTE PTR [eax],0x40
10058811:	jne    0x10058818
10058813:	or     BYTE PTR [eax],0x2
10058816:	jmp    0x1005881d
10058818:	mov    al,BYTE PTR [ecx]
1005881a:	mov    BYTE PTR [edi],al
1005881c:	inc    edi
1005881d:	mov    eax,edi
1005881f:	sub    eax,DWORD PTR [ebp-0xc]
10058822:	cmp    BYTE PTR [ebp-0x2],0x1
10058826:	mov    DWORD PTR [ebp-0x10],eax
10058829:	jne    0x100588ff
1005882f:	test   eax,eax
10058831:	je     0x100588ff
10058837:	dec    edi
10058838:	mov    cl,BYTE PTR [edi]
1005883a:	test   cl,cl
1005883c:	js     0x10058844
1005883e:	inc    edi
1005883f:	jmp    0x100588ca
10058844:	xor    eax,eax
10058846:	inc    eax
10058847:	movzx  ecx,cl
1005884a:	jmp    0x1005885b
1005884c:	cmp    eax,0x4
1005884f:	jg     0x10058864
10058851:	cmp    edi,DWORD PTR [ebp-0xc]
10058854:	jb     0x10058864
10058856:	dec    edi
10058857:	movzx  ecx,BYTE PTR [edi]
1005885a:	inc    eax
1005885b:	cmp    BYTE PTR [ecx+0x1007f0a0],0x0
10058862:	je     0x1005884c
10058864:	mov    dl,BYTE PTR [edi]
10058866:	movzx  ecx,dl
10058869:	movsx  ecx,BYTE PTR [ecx+0x1007f0a0]
10058870:	test   ecx,ecx
10058872:	jne    0x10058881
10058874:	call   0x10046b55
10058879:	mov    DWORD PTR [eax],0x2a
1005887f:	jmp    0x100588fb
10058881:	inc    ecx
10058882:	cmp    ecx,eax
10058884:	jne    0x1005888a
10058886:	add    edi,eax
10058888:	jmp    0x100588ca
1005888a:	mov    ecx,DWORD PTR [ebx]
1005888c:	add    ecx,esi
1005888e:	test   BYTE PTR [ecx+0x4],0x48
10058892:	je     0x100588b8
10058894:	inc    edi
10058895:	cmp    eax,0x2
10058898:	mov    BYTE PTR [ecx+0x5],dl
1005889b:	jl     0x100588a6
1005889d:	mov    dl,BYTE PTR [edi]
1005889f:	mov    ecx,DWORD PTR [ebx]
100588a1:	mov    BYTE PTR [esi+ecx*1+0x25],dl
100588a5:	inc    edi
100588a6:	cmp    eax,0x3
100588a9:	jne    0x100588b4
100588ab:	mov    dl,BYTE PTR [edi]
100588ad:	mov    ecx,DWORD PTR [ebx]
100588af:	mov    BYTE PTR [esi+ecx*1+0x26],dl
100588b3:	inc    edi
100588b4:	sub    edi,eax
100588b6:	jmp    0x100588ca
100588b8:	neg    eax
100588ba:	cdq    
100588bb:	push   0x1
100588bd:	push   edx
100588be:	push   eax
100588bf:	push   DWORD PTR [ebp+0x8]
100588c2:	call   0x1004c711
100588c7:	add    esp,0x10
100588ca:	mov    eax,DWORD PTR [ebp-0x1c]
100588cd:	sub    edi,DWORD PTR [ebp-0xc]
100588d0:	shr    eax,1
100588d2:	push   eax
100588d3:	push   DWORD PTR [ebp+0xc]
100588d6:	push   edi
100588d7:	push   DWORD PTR [ebp-0xc]
100588da:	push   0x0
100588dc:	push   0xfde9
100588e1:	call   DWORD PTR ds:0x1006608c
100588e7:	test   eax,eax
100588e9:	mov    DWORD PTR [ebp-0x10],eax
100588ec:	jne    0x10058922
100588ee:	call   DWORD PTR ds:0x100660cc
100588f4:	push   eax
100588f5:	call   0x10046b7b
100588fa:	pop    ecx
100588fb:	or     DWORD PTR [ebp-0x14],0xffffffff
100588ff:	mov    eax,DWORD PTR [ebp-0xc]
10058902:	cmp    eax,DWORD PTR [ebp+0xc]
10058905:	je     0x1005890e
10058907:	push   eax
10058908:	call   0x10043508
1005890d:	pop    ecx
1005890e:	mov    eax,DWORD PTR [ebp-0x14]
10058911:	cmp    eax,0xfffffffe
10058914:	jne    0x10058a97
1005891a:	mov    eax,DWORD PTR [ebp-0x10]
1005891d:	jmp    0x10058a97
10058922:	add    eax,eax
10058924:	mov    DWORD PTR [ebp-0x10],eax
10058927:	jmp    0x100588ff
10058929:	test   edi,edi
1005892b:	je     0x1005893b
1005892d:	mov    ecx,DWORD PTR [ebp-0xc]
10058930:	cmp    WORD PTR [ecx],0xa
10058934:	jne    0x1005893b
10058936:	or     BYTE PTR [eax],0x4
10058939:	jmp    0x1005893e
1005893b:	and    BYTE PTR [eax],0xfb
1005893e:	mov    edi,DWORD PTR [ebp-0xc]
10058941:	mov    eax,DWORD PTR [ebp-0x10]
10058944:	add    eax,edi
10058946:	cmp    edi,eax
10058948:	mov    DWORD PTR [ebp+0x10],edi
1005894b:	mov    DWORD PTR [ebp-0x10],eax
1005894e:	jae    0x10058a54
10058954:	mov    eax,DWORD PTR [ebp+0x10]
10058957:	movzx  ecx,WORD PTR [eax]
1005895a:	cmp    cx,0x1a
1005895e:	je     0x10058a3c
10058964:	cmp    cx,0xd
10058968:	je     0x10058979
1005896a:	mov    WORD PTR [edi],cx
1005896d:	inc    edi
1005896e:	inc    edi
1005896f:	inc    eax
10058970:	inc    eax
10058971:	mov    DWORD PTR [ebp+0x10],eax
10058974:	jmp    0x10058a2e
10058979:	mov    ecx,DWORD PTR [ebp-0x10]
1005897c:	add    ecx,0xfffffffe
1005897f:	cmp    eax,ecx
10058981:	jae    0x100589a4
10058983:	lea    ecx,[eax+0x2]
10058986:	cmp    WORD PTR [ecx],0xa
1005898a:	jne    0x1005899c
1005898c:	add    eax,0x4
1005898f:	mov    DWORD PTR [ebp+0x10],eax
10058992:	mov    WORD PTR [edi],0xa
10058997:	jmp    0x10058a2c
1005899c:	mov    DWORD PTR [ebp+0x10],ecx
1005899f:	jmp    0x10058a27
100589a4:	add    DWORD PTR [ebp+0x10],0x2
100589a8:	push   0x0
100589aa:	lea    eax,[ebp-0x18]
100589ad:	push   eax
100589ae:	push   0x2
100589b0:	lea    eax,[ebp-0x8]
100589b3:	push   eax
100589b4:	mov    eax,DWORD PTR [ebx]
100589b6:	push   DWORD PTR [esi+eax*1]
100589b9:	call   DWORD PTR ds:0x100660d4
100589bf:	test   eax,eax
100589c1:	jne    0x100589cd
100589c3:	call   DWORD PTR ds:0x100660cc
100589c9:	test   eax,eax
100589cb:	jne    0x10058a27
100589cd:	cmp    DWORD PTR [ebp-0x18],0x0
100589d1:	je     0x10058a27
100589d3:	mov    eax,DWORD PTR [ebx]
100589d5:	test   BYTE PTR [esi+eax*1+0x4],0x48
100589da:	je     0x10058a03
100589dc:	cmp    WORD PTR [ebp-0x8],0xa
100589e1:	je     0x10058992
100589e3:	mov    WORD PTR [edi],0xd
100589e8:	mov    eax,DWORD PTR [ebx]
100589ea:	mov    cl,BYTE PTR [ebp-0x8]
100589ed:	mov    BYTE PTR [esi+eax*1+0x5],cl
100589f1:	mov    eax,DWORD PTR [ebx]
100589f3:	mov    cl,BYTE PTR [ebp-0x7]
100589f6:	mov    BYTE PTR [esi+eax*1+0x25],cl
100589fa:	mov    eax,DWORD PTR [ebx]
100589fc:	mov    BYTE PTR [esi+eax*1+0x26],0xa
10058a01:	jmp    0x10058a2c
10058a03:	cmp    edi,DWORD PTR [ebp-0xc]
10058a06:	jne    0x10058a0f
10058a08:	cmp    WORD PTR [ebp-0x8],0xa
10058a0d:	je     0x10058992
10058a0f:	push   0x1
10058a11:	push   0xffffffff
10058a13:	push   0xfffffffe
10058a15:	push   DWORD PTR [ebp+0x8]
10058a18:	call   0x1004c711
10058a1d:	add    esp,0x10
10058a20:	cmp    WORD PTR [ebp-0x8],0xa
10058a25:	je     0x10058a2e
10058a27:	mov    WORD PTR [edi],0xd
10058a2c:	inc    edi
10058a2d:	inc    edi
10058a2e:	mov    eax,DWORD PTR [ebp-0x10]
10058a31:	cmp    DWORD PTR [ebp+0x10],eax
10058a34:	jb     0x10058954
10058a3a:	jmp    0x10058a54
10058a3c:	mov    ecx,DWORD PTR [ebx]
10058a3e:	lea    esi,[esi+ecx*1+0x4]
10058a42:	test   BYTE PTR [esi],0x40
10058a45:	jne    0x10058a4c
10058a47:	or     BYTE PTR [esi],0x2
10058a4a:	jmp    0x10058a54
10058a4c:	mov    ax,WORD PTR [eax]
10058a4f:	mov    WORD PTR [edi],ax
10058a52:	inc    edi
10058a53:	inc    edi
10058a54:	sub    edi,DWORD PTR [ebp-0xc]
10058a57:	mov    DWORD PTR [ebp-0x10],edi
10058a5a:	jmp    0x100588ff
10058a5f:	call   DWORD PTR ds:0x100660cc
10058a65:	push   0x5
10058a67:	pop    esi
10058a68:	cmp    eax,esi
10058a6a:	jne    0x10058a83
10058a6c:	call   0x10046b55
10058a71:	mov    DWORD PTR [eax],0x9
10058a77:	call   0x10046b68
10058a7c:	mov    DWORD PTR [eax],esi
10058a7e:	jmp    0x100588fb
10058a83:	cmp    eax,0x6d
10058a86:	jne    0x100588f4
10058a8c:	and    DWORD PTR [ebp-0x14],0x0
10058a90:	jmp    0x100588ff
10058a95:	xor    eax,eax
10058a97:	pop    ebx
10058a98:	pop    edi
10058a99:	pop    esi
10058a9a:	leave  
10058a9b:	ret    
10058a9c:	push   0x10
10058a9e:	push   0x10074a20
10058aa3:	call   0x10046c94
10058aa8:	mov    eax,DWORD PTR [ebp+0x8]
10058aab:	cmp    eax,0xfffffffe
10058aae:	jne    0x10058acb
10058ab0:	call   0x10046b68
10058ab5:	and    DWORD PTR [eax],0x0
10058ab8:	call   0x10046b55
10058abd:	mov    DWORD PTR [eax],0x9
10058ac3:	or     eax,0xffffffff
10058ac6:	jmp    0x10058b68
10058acb:	xor    edi,edi
10058acd:	cmp    eax,edi
10058acf:	jl     0x10058ad9
10058ad1:	cmp    eax,DWORD PTR ds:0x10082464
10058ad7:	jb     0x10058afa
10058ad9:	call   0x10046b68
10058ade:	mov    DWORD PTR [eax],edi
10058ae0:	call   0x10046b55
10058ae5:	mov    DWORD PTR [eax],0x9
10058aeb:	push   edi
10058aec:	push   edi
10058aed:	push   edi
10058aee:	push   edi
10058aef:	push   edi
10058af0:	call   0x1004338c
10058af5:	add    esp,0x14
10058af8:	jmp    0x10058ac3
10058afa:	mov    ecx,eax
10058afc:	sar    ecx,0x5
10058aff:	lea    ebx,[ecx*4+0x10082480]
10058b06:	mov    esi,eax
10058b08:	and    esi,0x1f
10058b0b:	imul   esi,esi,0x28
10058b0e:	mov    ecx,DWORD PTR [ebx]
10058b10:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
10058b15:	and    ecx,0x1
10058b18:	je     0x10058ad9
10058b1a:	push   eax
10058b1b:	call   0x1004f9d0
10058b20:	pop    ecx
10058b21:	mov    DWORD PTR [ebp-0x4],edi
10058b24:	mov    eax,DWORD PTR [ebx]
10058b26:	test   BYTE PTR [eax+esi*1+0x4],0x1
10058b2b:	je     0x10058b43
10058b2d:	push   DWORD PTR [ebp+0x10]
10058b30:	push   DWORD PTR [ebp+0xc]
10058b33:	push   DWORD PTR [ebp+0x8]
10058b36:	call   0x100584fa
10058b3b:	add    esp,0xc
10058b3e:	mov    DWORD PTR [ebp-0x1c],eax
10058b41:	jmp    0x10058b59
10058b43:	call   0x10046b55
10058b48:	mov    DWORD PTR [eax],0x9
10058b4e:	call   0x10046b68
10058b53:	mov    DWORD PTR [eax],edi
10058b55:	or     DWORD PTR [ebp-0x1c],0xffffffff
10058b59:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10058b60:	call   0x10058b6e
10058b65:	mov    eax,DWORD PTR [ebp-0x1c]
10058b68:	call   0x10046cd9
10058b6d:	ret    
10058b6e:	push   DWORD PTR [ebp+0x8]
10058b71:	call   0x1004fa70
10058b76:	pop    ecx
10058b77:	ret    
10058b78:	push   0xc
10058b7a:	push   0x10074a40
10058b7f:	call   0x10046c94
10058b84:	xor    ebx,ebx
10058b86:	mov    DWORD PTR [ebp-0x1c],ebx
10058b89:	xor    eax,eax
10058b8b:	mov    edi,DWORD PTR [ebp+0x8]
10058b8e:	cmp    edi,ebx
10058b90:	setne  al
10058b93:	cmp    eax,ebx
10058b95:	jne    0x10058bb3
10058b97:	call   0x10046b55
10058b9c:	mov    DWORD PTR [eax],0x16
10058ba2:	push   ebx
10058ba3:	push   ebx
10058ba4:	push   ebx
10058ba5:	push   ebx
10058ba6:	push   ebx
10058ba7:	call   0x1004338c
10058bac:	add    esp,0x14
10058baf:	xor    eax,eax
10058bb1:	jmp    0x10058c2c
10058bb3:	xor    eax,eax
10058bb5:	mov    esi,DWORD PTR [ebp+0xc]
10058bb8:	cmp    esi,ebx
10058bba:	setne  al
10058bbd:	cmp    eax,ebx
10058bbf:	je     0x10058b97
10058bc1:	xor    eax,eax
10058bc3:	cmp    BYTE PTR [esi],bl
10058bc5:	setne  al
10058bc8:	cmp    eax,ebx
10058bca:	je     0x10058b97
10058bcc:	call   0x1005a62b
10058bd1:	mov    DWORD PTR [ebp+0x8],eax
10058bd4:	cmp    eax,ebx
10058bd6:	jne    0x10058be5
10058bd8:	call   0x10046b55
10058bdd:	mov    DWORD PTR [eax],0x18
10058be3:	jmp    0x10058baf
10058be5:	mov    DWORD PTR [ebp-0x4],ebx
10058be8:	cmp    BYTE PTR [edi],bl
10058bea:	jne    0x10058c0c
10058bec:	call   0x10046b55
10058bf1:	mov    DWORD PTR [eax],0x16
10058bf7:	push   0xfffffffe
10058bf9:	lea    eax,[ebp-0x10]
10058bfc:	push   eax
10058bfd:	push   0x1007e030
10058c02:	call   0x1004c11c
10058c07:	add    esp,0xc
10058c0a:	jmp    0x10058baf
10058c0c:	push   eax
10058c0d:	push   DWORD PTR [ebp+0x10]
10058c10:	push   esi
10058c11:	push   edi
10058c12:	call   0x1005a389
10058c17:	add    esp,0x10
10058c1a:	mov    DWORD PTR [ebp-0x1c],eax
10058c1d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10058c24:	call   0x10058c32
10058c29:	mov    eax,DWORD PTR [ebp-0x1c]
10058c2c:	call   0x10046cd9
10058c31:	ret    
10058c32:	push   DWORD PTR [ebp+0x8]
10058c35:	call   0x1004d11a
10058c3a:	pop    ecx
10058c3b:	ret    
10058c3c:	push   0x40
10058c3e:	push   DWORD PTR [esp+0xc]
10058c42:	push   DWORD PTR [esp+0xc]
10058c46:	call   0x10058b78
10058c4b:	add    esp,0xc
10058c4e:	ret    
10058c4f:	push   ebp
10058c50:	mov    ebp,esp
10058c52:	sub    esp,0x18
10058c55:	push   ebx
10058c56:	push   DWORD PTR [ebp+0xc]
10058c59:	lea    ecx,[ebp-0x18]
10058c5c:	call   0x100454e5
10058c61:	mov    ebx,DWORD PTR [ebp+0x8]
10058c64:	cmp    ebx,0x100
10058c6a:	jae    0x10058cc0
10058c6c:	mov    ecx,DWORD PTR [ebp-0x18]
10058c6f:	cmp    DWORD PTR [ecx+0xac],0x1
10058c76:	jle    0x10058c8c
10058c78:	lea    eax,[ebp-0x18]
10058c7b:	push   eax
10058c7c:	push   0x2
10058c7e:	push   ebx
10058c7f:	call   0x1004b303
10058c84:	mov    ecx,DWORD PTR [ebp-0x18]
10058c87:	add    esp,0xc
10058c8a:	jmp    0x10058c99
10058c8c:	mov    eax,DWORD PTR [ecx+0xc8]
10058c92:	movzx  eax,BYTE PTR [eax+ebx*2]
10058c96:	and    eax,0x2
10058c99:	test   eax,eax
10058c9b:	je     0x10058cac
10058c9d:	mov    eax,DWORD PTR [ecx+0xd0]
10058ca3:	movzx  eax,BYTE PTR [eax+ebx*1]
10058ca7:	jmp    0x10058d57
10058cac:	cmp    BYTE PTR [ebp-0xc],0x0
10058cb0:	je     0x10058cb9
10058cb2:	mov    eax,DWORD PTR [ebp-0x10]
10058cb5:	and    DWORD PTR [eax+0x70],0xfffffffd
10058cb9:	mov    eax,ebx
10058cbb:	jmp    0x10058d64
10058cc0:	mov    eax,DWORD PTR [ebp-0x18]
10058cc3:	cmp    DWORD PTR [eax+0xac],0x1
10058cca:	jle    0x10058cfd
10058ccc:	mov    DWORD PTR [ebp+0x8],ebx
10058ccf:	sar    DWORD PTR [ebp+0x8],0x8
10058cd3:	lea    eax,[ebp-0x18]
10058cd6:	push   eax
10058cd7:	mov    eax,DWORD PTR [ebp+0x8]
10058cda:	and    eax,0xff
10058cdf:	push   eax
10058ce0:	call   0x1004b2bf
10058ce5:	test   eax,eax
10058ce7:	pop    ecx
10058ce8:	pop    ecx
10058ce9:	je     0x10058cfd
10058ceb:	mov    al,BYTE PTR [ebp+0x8]
10058cee:	push   0x2
10058cf0:	mov    BYTE PTR [ebp-0x4],al
10058cf3:	mov    BYTE PTR [ebp-0x3],bl
10058cf6:	mov    BYTE PTR [ebp-0x2],0x0
10058cfa:	pop    ecx
10058cfb:	jmp    0x10058d12
10058cfd:	call   0x10046b55
10058d02:	mov    DWORD PTR [eax],0x2a
10058d08:	xor    ecx,ecx
10058d0a:	mov    BYTE PTR [ebp-0x4],bl
10058d0d:	mov    BYTE PTR [ebp-0x3],0x0
10058d11:	inc    ecx
10058d12:	mov    eax,DWORD PTR [ebp-0x18]
10058d15:	push   0x1
10058d17:	push   DWORD PTR [eax+0x4]
10058d1a:	lea    edx,[ebp-0x8]
10058d1d:	push   0x3
10058d1f:	push   edx
10058d20:	push   ecx
10058d21:	lea    ecx,[ebp-0x4]
10058d24:	push   ecx
10058d25:	push   0x200
10058d2a:	push   DWORD PTR [eax+0x14]
10058d2d:	lea    eax,[ebp-0x18]
10058d30:	push   eax
10058d31:	call   0x1004b27c
10058d36:	add    esp,0x24
10058d39:	test   eax,eax
10058d3b:	je     0x10058cac
10058d41:	cmp    eax,0x1
10058d44:	jne    0x10058d4c
10058d46:	movzx  eax,BYTE PTR [ebp-0x8]
10058d4a:	jmp    0x10058d57
10058d4c:	movzx  ecx,BYTE PTR [ebp-0x7]
10058d50:	xor    eax,eax
10058d52:	mov    ah,BYTE PTR [ebp-0x8]
10058d55:	or     eax,ecx
10058d57:	cmp    BYTE PTR [ebp-0xc],0x0
10058d5b:	je     0x10058d64
10058d5d:	mov    ecx,DWORD PTR [ebp-0x10]
10058d60:	and    DWORD PTR [ecx+0x70],0xfffffffd
10058d64:	pop    ebx
10058d65:	leave  
10058d66:	ret    
10058d67:	cmp    DWORD PTR ds:0x100802c8,0x0
10058d6e:	jne    0x10058d80
10058d70:	mov    eax,DWORD PTR [esp+0x4]
10058d74:	lea    ecx,[eax-0x61]
10058d77:	cmp    ecx,0x19
10058d7a:	ja     0x10058d8d
10058d7c:	add    eax,0xffffffe0
10058d7f:	ret    
10058d80:	push   0x0
10058d82:	push   DWORD PTR [esp+0x8]
10058d86:	call   0x10058c4f
10058d8b:	pop    ecx
10058d8c:	pop    ecx
10058d8d:	ret    
10058d8e:	push   esi
10058d8f:	mov    esi,DWORD PTR [esp+0x8]
10058d93:	push   esi
10058d94:	call   0x1004f95f
10058d99:	cmp    eax,0xffffffff
10058d9c:	pop    ecx
10058d9d:	jne    0x10058daf
10058d9f:	call   0x10046b55
10058da4:	mov    DWORD PTR [eax],0x9
10058daa:	or     eax,0xffffffff
10058dad:	pop    esi
10058dae:	ret    
10058daf:	push   edi
10058db0:	push   DWORD PTR [esp+0x14]
10058db4:	push   0x0
10058db6:	push   DWORD PTR [esp+0x18]
10058dba:	push   eax
10058dbb:	call   DWORD PTR ds:0x10066224
10058dc1:	mov    edi,eax
10058dc3:	cmp    edi,0xffffffff
10058dc6:	jne    0x10058dd0
10058dc8:	call   DWORD PTR ds:0x100660cc
10058dce:	jmp    0x10058dd2
10058dd0:	xor    eax,eax
10058dd2:	test   eax,eax
10058dd4:	je     0x10058de2
10058dd6:	push   eax
10058dd7:	call   0x10046b7b
10058ddc:	pop    ecx
10058ddd:	or     eax,0xffffffff
10058de0:	jmp    0x10058dfd
10058de2:	mov    eax,esi
10058de4:	and    esi,0x1f
10058de7:	imul   esi,esi,0x28
10058dea:	sar    eax,0x5
10058ded:	mov    eax,DWORD PTR [eax*4+0x10082480]
10058df4:	lea    eax,[eax+esi*1+0x4]
10058df8:	and    BYTE PTR [eax],0xfd
10058dfb:	mov    eax,edi
10058dfd:	pop    edi
10058dfe:	pop    esi
10058dff:	ret    
10058e00:	push   ebp
10058e01:	mov    ebp,esp
10058e03:	sub    esp,0x14
10058e06:	push   ebx
10058e07:	push   DWORD PTR [ebp+0x10]
10058e0a:	lea    ecx,[ebp-0x14]
10058e0d:	call   0x100454e5
10058e12:	xor    ebx,ebx
10058e14:	cmp    DWORD PTR [ebp+0x8],ebx
10058e17:	jne    0x10058e47
10058e19:	call   0x10046b55
10058e1e:	push   ebx
10058e1f:	push   ebx
10058e20:	push   ebx
10058e21:	push   ebx
10058e22:	push   ebx
10058e23:	mov    DWORD PTR [eax],0x16
10058e29:	call   0x1004338c
10058e2e:	add    esp,0x14
10058e31:	cmp    BYTE PTR [ebp-0x8],bl
10058e34:	je     0x10058e3d
10058e36:	mov    eax,DWORD PTR [ebp-0xc]
10058e39:	and    DWORD PTR [eax+0x70],0xfffffffd
10058e3d:	mov    eax,0x7fffffff
10058e42:	jmp    0x10058f05
10058e47:	push   esi
10058e48:	mov    esi,DWORD PTR [ebp+0xc]
10058e4b:	cmp    esi,ebx
10058e4d:	jne    0x10058e7d
10058e4f:	call   0x10046b55
10058e54:	push   ebx
10058e55:	push   ebx
10058e56:	push   ebx
10058e57:	push   ebx
10058e58:	push   ebx
10058e59:	mov    DWORD PTR [eax],0x16
10058e5f:	call   0x1004338c
10058e64:	add    esp,0x14
10058e67:	cmp    BYTE PTR [ebp-0x8],bl
10058e6a:	je     0x10058e73
10058e6c:	mov    eax,DWORD PTR [ebp-0xc]
10058e6f:	and    DWORD PTR [eax+0x70],0xfffffffd
10058e73:	mov    eax,0x7fffffff
10058e78:	jmp    0x10058f04
10058e7d:	push   edi
10058e7e:	mov    edi,DWORD PTR [ebp-0x10]
10058e81:	cmp    DWORD PTR [edi+0x8],ebx
10058e84:	jne    0x10058e93
10058e86:	push   esi
10058e87:	push   DWORD PTR [ebp+0x8]
10058e8a:	call   0x10047900
10058e8f:	pop    ecx
10058e90:	pop    ecx
10058e91:	jmp    0x10058f0e
10058e93:	mov    eax,DWORD PTR [ebp+0x8]
10058e96:	movzx  cx,BYTE PTR [eax]
10058e9a:	movzx  ecx,cx
10058e9d:	movzx  edx,cl
10058ea0:	inc    eax
10058ea1:	test   BYTE PTR [edx+edi*1+0x1d],0x4
10058ea6:	mov    DWORD PTR [ebp+0x8],eax
10058ea9:	je     0x10058ec1
10058eab:	mov    al,BYTE PTR [eax]
10058ead:	cmp    al,bl
10058eaf:	jne    0x10058eb5
10058eb1:	xor    ecx,ecx
10058eb3:	jmp    0x10058ec1
10058eb5:	xor    edx,edx
10058eb7:	inc    DWORD PTR [ebp+0x8]
10058eba:	mov    dh,cl
10058ebc:	mov    dl,al
10058ebe:	movzx  ecx,dx
10058ec1:	movzx  ax,BYTE PTR [esi]
10058ec5:	movzx  eax,ax
10058ec8:	movzx  edx,al
10058ecb:	inc    esi
10058ecc:	test   BYTE PTR [edx+edi*1+0x1d],0x4
10058ed1:	je     0x10058eeb
10058ed3:	mov    dl,BYTE PTR [esi]
10058ed5:	cmp    dl,bl
10058ed7:	mov    BYTE PTR [ebp-0x1],dl
10058eda:	jne    0x10058ee0
10058edc:	xor    eax,eax
10058ede:	jmp    0x10058eeb
10058ee0:	xor    edx,edx
10058ee2:	mov    dh,al
10058ee4:	inc    esi
10058ee5:	mov    dl,BYTE PTR [ebp-0x1]
10058ee8:	movzx  eax,dx
10058eeb:	cmp    ax,cx
10058eee:	jne    0x10058f08
10058ef0:	cmp    cx,bx
10058ef3:	jne    0x10058e93
10058ef5:	cmp    BYTE PTR [ebp-0x8],bl
10058ef8:	je     0x10058f01
10058efa:	mov    eax,DWORD PTR [ebp-0xc]
10058efd:	and    DWORD PTR [eax+0x70],0xfffffffd
10058f01:	xor    eax,eax
10058f03:	pop    edi
10058f04:	pop    esi
10058f05:	pop    ebx
10058f06:	leave  
10058f07:	ret    
10058f08:	sbb    eax,eax
10058f0a:	and    eax,0x2
10058f0d:	dec    eax
10058f0e:	cmp    BYTE PTR [ebp-0x8],bl
10058f11:	je     0x10058f03
10058f13:	mov    ecx,DWORD PTR [ebp-0xc]
10058f16:	and    DWORD PTR [ecx+0x70],0xfffffffd
10058f1a:	jmp    0x10058f03
10058f1c:	push   0x0
10058f1e:	push   DWORD PTR [esp+0xc]
10058f22:	push   DWORD PTR [esp+0xc]
10058f26:	call   0x10058e00
10058f2b:	add    esp,0xc
10058f2e:	ret    
10058f2f:	push   ebp
10058f30:	mov    ebp,esp
10058f32:	sub    esp,0x20
10058f35:	push   ebx
10058f36:	xor    ebx,ebx
10058f38:	cmp    DWORD PTR [ebp+0x14],ebx
10058f3b:	jne    0x10058f5d
10058f3d:	call   0x10046b55
10058f42:	push   ebx
10058f43:	push   ebx
10058f44:	push   ebx
10058f45:	push   ebx
10058f46:	push   ebx
10058f47:	mov    DWORD PTR [eax],0x16
10058f4d:	call   0x1004338c
10058f52:	add    esp,0x14
10058f55:	or     eax,0xffffffff
10058f58:	jmp    0x10058ff6
10058f5d:	push   esi
10058f5e:	mov    esi,DWORD PTR [ebp+0xc]
10058f61:	push   edi
10058f62:	mov    edi,DWORD PTR [ebp+0x10]
10058f65:	cmp    edi,ebx
10058f67:	je     0x10058f8a
10058f69:	cmp    esi,ebx
10058f6b:	jne    0x10058f8a
10058f6d:	call   0x10046b55
10058f72:	push   ebx
10058f73:	push   ebx
10058f74:	push   ebx
10058f75:	push   ebx
10058f76:	push   ebx
10058f77:	mov    DWORD PTR [eax],0x16
10058f7d:	call   0x1004338c
10058f82:	add    esp,0x14
10058f85:	or     eax,0xffffffff
10058f88:	jmp    0x10058ff4
10058f8a:	mov    eax,0x7fffffff
10058f8f:	cmp    edi,eax
10058f91:	mov    DWORD PTR [ebp-0x1c],eax
10058f94:	ja     0x10058f99
10058f96:	mov    DWORD PTR [ebp-0x1c],edi
10058f99:	push   DWORD PTR [ebp+0x1c]
10058f9c:	lea    eax,[ebp-0x20]
10058f9f:	push   DWORD PTR [ebp+0x18]
10058fa2:	mov    DWORD PTR [ebp-0x14],0x42
10058fa9:	push   DWORD PTR [ebp+0x14]
10058fac:	mov    DWORD PTR [ebp-0x18],esi
10058faf:	push   eax
10058fb0:	mov    DWORD PTR [ebp-0x20],esi
10058fb3:	call   DWORD PTR [ebp+0x8]
10058fb6:	add    esp,0x10
10058fb9:	cmp    esi,ebx
10058fbb:	mov    DWORD PTR [ebp+0x14],eax
10058fbe:	je     0x10058ff4
10058fc0:	cmp    eax,ebx
10058fc2:	jl     0x10058fe6
10058fc4:	dec    DWORD PTR [ebp-0x1c]
10058fc7:	js     0x10058fd0
10058fc9:	mov    eax,DWORD PTR [ebp-0x20]
10058fcc:	mov    BYTE PTR [eax],bl
10058fce:	jmp    0x10058fe1
10058fd0:	lea    eax,[ebp-0x20]
10058fd3:	push   eax
10058fd4:	push   ebx
10058fd5:	call   0x100487cd
10058fda:	cmp    eax,0xffffffff
10058fdd:	pop    ecx
10058fde:	pop    ecx
10058fdf:	je     0x10058fe6
10058fe1:	mov    eax,DWORD PTR [ebp+0x14]
10058fe4:	jmp    0x10058ff4
10058fe6:	xor    eax,eax
10058fe8:	cmp    DWORD PTR [ebp-0x1c],ebx
10058feb:	mov    BYTE PTR [esi+edi*1-0x1],bl
10058fef:	setge  al
10058ff2:	dec    eax
10058ff3:	dec    eax
10058ff4:	pop    edi
10058ff5:	pop    esi
10058ff6:	pop    ebx
10058ff7:	leave  
10058ff8:	ret    
10058ff9:	push   ebp
10058ffa:	mov    ebp,esp
10058ffc:	push   ebx
10058ffd:	xor    ebx,ebx
10058fff:	cmp    DWORD PTR [ebp+0x10],ebx
10059002:	jne    0x10059021
10059004:	call   0x10046b55
10059009:	push   ebx
1005900a:	push   ebx
1005900b:	push   ebx
1005900c:	push   ebx
1005900d:	push   ebx
1005900e:	mov    DWORD PTR [eax],0x16
10059014:	call   0x1004338c
10059019:	add    esp,0x14
1005901c:	or     eax,0xffffffff
1005901f:	jmp    0x1005907c
10059021:	push   esi
10059022:	mov    esi,DWORD PTR [ebp+0x8]
10059025:	cmp    esi,ebx
10059027:	je     0x1005902e
10059029:	cmp    DWORD PTR [ebp+0xc],ebx
1005902c:	ja     0x1005903b
1005902e:	call   0x10046b55
10059033:	mov    DWORD PTR [eax],0x16
10059039:	jmp    0x1005906b
1005903b:	push   DWORD PTR [ebp+0x18]
1005903e:	push   DWORD PTR [ebp+0x14]
10059041:	push   DWORD PTR [ebp+0x10]
10059044:	push   DWORD PTR [ebp+0xc]
10059047:	push   esi
10059048:	push   0x1004def0
1005904d:	call   0x10058f2f
10059052:	add    esp,0x18
10059055:	cmp    eax,ebx
10059057:	jge    0x1005905b
10059059:	mov    BYTE PTR [esi],bl
1005905b:	cmp    eax,0xfffffffe
1005905e:	jne    0x1005907b
10059060:	call   0x10046b55
10059065:	mov    DWORD PTR [eax],0x22
1005906b:	push   ebx
1005906c:	push   ebx
1005906d:	push   ebx
1005906e:	push   ebx
1005906f:	push   ebx
10059070:	call   0x1004338c
10059075:	add    esp,0x14
10059078:	or     eax,0xffffffff
1005907b:	pop    esi
1005907c:	pop    ebx
1005907d:	pop    ebp
1005907e:	ret    
1005907f:	push   DWORD PTR [esp+0x10]
10059083:	push   0x0
10059085:	push   DWORD PTR [esp+0x14]
10059089:	push   DWORD PTR [esp+0x14]
1005908d:	push   DWORD PTR [esp+0x14]
10059091:	call   0x10058ff9
10059096:	add    esp,0x14
10059099:	ret    
1005909a:	push   ebx
1005909b:	push   esi
1005909c:	mov    esi,DWORD PTR [esp+0xc]
100590a0:	xor    ebx,ebx
100590a2:	cmp    esi,ebx
100590a4:	jne    0x100590c2
100590a6:	call   0x10046b55
100590ab:	push   ebx
100590ac:	push   ebx
100590ad:	push   ebx
100590ae:	push   ebx
100590af:	push   ebx
100590b0:	mov    DWORD PTR [eax],0x16
100590b6:	call   0x1004338c
100590bb:	add    esp,0x14
100590be:	xor    eax,eax
100590c0:	jmp    0x100590d8
100590c2:	movzx  eax,BYTE PTR [esi]
100590c5:	push   eax
100590c6:	call   0x1004f700
100590cb:	inc    esi
100590cc:	test   eax,eax
100590ce:	pop    ecx
100590cf:	je     0x100590d6
100590d1:	cmp    BYTE PTR [esi],bl
100590d3:	je     0x100590d6
100590d5:	inc    esi
100590d6:	mov    eax,esi
100590d8:	pop    esi
100590d9:	pop    ebx
100590da:	ret    
100590db:	push   ebp
100590dc:	mov    ebp,esp
100590de:	sub    esp,0x20
100590e1:	push   esi
100590e2:	xor    esi,esi
100590e4:	cmp    DWORD PTR [ebp+0xc],esi
100590e7:	jne    0x10059106
100590e9:	call   0x10046b55
100590ee:	push   esi
100590ef:	push   esi
100590f0:	push   esi
100590f1:	push   esi
100590f2:	push   esi
100590f3:	mov    DWORD PTR [eax],0x16
100590f9:	call   0x1004338c
100590fe:	add    esp,0x14
10059101:	or     eax,0xffffffff
10059104:	jmp    0x1005912d
10059106:	push   DWORD PTR [ebp+0x14]
10059109:	lea    eax,[ebp-0x20]
1005910c:	push   DWORD PTR [ebp+0x10]
1005910f:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
10059116:	push   DWORD PTR [ebp+0xc]
10059119:	mov    DWORD PTR [ebp-0x14],0x42
10059120:	push   eax
10059121:	mov    DWORD PTR [ebp-0x18],esi
10059124:	mov    DWORD PTR [ebp-0x20],esi
10059127:	call   DWORD PTR [ebp+0x8]
1005912a:	add    esp,0x10
1005912d:	pop    esi
1005912e:	leave  
1005912f:	ret    
10059130:	push   DWORD PTR [esp+0x8]
10059134:	push   0x0
10059136:	push   DWORD PTR [esp+0xc]
1005913a:	push   0x1004d3c1
1005913f:	call   0x100590db
10059144:	add    esp,0x10
10059147:	ret    
10059148:	push   ebp
10059149:	mov    ebp,esp
1005914b:	push   ecx
1005914c:	push   ebx
1005914d:	mov    eax,DWORD PTR [ebp+0xc]
10059150:	add    eax,0xc
10059153:	mov    DWORD PTR [ebp-0x4],eax
10059156:	mov    ebx,DWORD PTR fs:0x0
1005915d:	mov    eax,DWORD PTR [ebx]
1005915f:	mov    fs:0x0,eax
10059165:	mov    eax,DWORD PTR [ebp+0x8]
10059168:	mov    ebx,DWORD PTR [ebp+0xc]
1005916b:	mov    ebp,DWORD PTR [ebp-0x4]
1005916e:	mov    esp,DWORD PTR [ebx-0x4]
10059171:	jmp    eax
10059173:	pop    ebx
10059174:	leave  
10059175:	ret    0x8
10059178:	pop    eax
10059179:	pop    ecx
1005917a:	xchg   DWORD PTR [esp],eax
1005917d:	jmp    eax
1005917f:	push   ebp
10059180:	mov    ebp,esp
10059182:	push   ecx
10059183:	push   ecx
10059184:	push   ebx
10059185:	push   esi
10059186:	push   edi
10059187:	mov    esi,DWORD PTR fs:0x0
1005918e:	mov    DWORD PTR [ebp-0x4],esi
10059191:	mov    DWORD PTR [ebp-0x8],0x100591a8
10059198:	push   0x0
1005919a:	push   DWORD PTR [ebp+0xc]
1005919d:	push   DWORD PTR [ebp-0x8]
100591a0:	push   DWORD PTR [ebp+0x8]
100591a3:	call   0x10056ad4
100591a8:	mov    eax,DWORD PTR [ebp+0xc]
100591ab:	mov    eax,DWORD PTR [eax+0x4]
100591ae:	and    eax,0xfffffffd
100591b1:	mov    ecx,DWORD PTR [ebp+0xc]
100591b4:	mov    DWORD PTR [ecx+0x4],eax
100591b7:	mov    edi,DWORD PTR fs:0x0
100591be:	mov    ebx,DWORD PTR [ebp-0x4]
100591c1:	mov    DWORD PTR [ebx],edi
100591c3:	mov    DWORD PTR fs:0x0,ebx
100591ca:	pop    edi
100591cb:	pop    esi
100591cc:	pop    ebx
100591cd:	leave  
100591ce:	ret    0x8
100591d1:	push   ebp
100591d2:	mov    ebp,esp
100591d4:	sub    esp,0x8
100591d7:	push   ebx
100591d8:	push   esi
100591d9:	push   edi
100591da:	cld    
100591db:	mov    DWORD PTR [ebp-0x4],eax
100591de:	xor    eax,eax
100591e0:	push   eax
100591e1:	push   eax
100591e2:	push   eax
100591e3:	push   DWORD PTR [ebp-0x4]
100591e6:	push   DWORD PTR [ebp+0x14]
100591e9:	push   DWORD PTR [ebp+0x10]
100591ec:	push   DWORD PTR [ebp+0xc]
100591ef:	push   DWORD PTR [ebp+0x8]
100591f2:	call   0x1005b2f7
100591f7:	add    esp,0x20
100591fa:	mov    DWORD PTR [ebp-0x8],eax
100591fd:	pop    edi
100591fe:	pop    esi
100591ff:	pop    ebx
10059200:	mov    eax,DWORD PTR [ebp-0x8]
10059203:	mov    esp,ebp
10059205:	pop    ebp
10059206:	ret    
10059207:	push   esi
10059208:	cld    
10059209:	mov    esi,DWORD PTR [esp+0xc]
1005920d:	mov    ecx,DWORD PTR [esi+0x8]
10059210:	xor    ecx,esi
10059212:	call   0x10042e97
10059217:	push   0x0
10059219:	push   esi
1005921a:	push   DWORD PTR [esi+0x14]
1005921d:	push   DWORD PTR [esi+0xc]
10059220:	push   0x0
10059222:	push   DWORD PTR [esp+0x24]
10059226:	push   DWORD PTR [esi+0x10]
10059229:	push   DWORD PTR [esp+0x24]
1005922d:	call   0x1005b2f7
10059232:	add    esp,0x20
10059235:	pop    esi
10059236:	ret    
10059237:	push   ebp
10059238:	mov    ebp,esp
1005923a:	sub    esp,0x38
1005923d:	push   ebx
1005923e:	cmp    DWORD PTR [ebp+0x8],0x123
10059245:	jne    0x10059259
10059247:	mov    eax,0x100592e0
1005924c:	mov    ecx,DWORD PTR [ebp+0xc]
1005924f:	mov    DWORD PTR [ecx],eax
10059251:	xor    eax,eax
10059253:	inc    eax
10059254:	jmp    0x10059309
10059259:	and    DWORD PTR [ebp-0x28],0x0
1005925d:	mov    DWORD PTR [ebp-0x24],0x1005930c
10059264:	mov    eax,ds:0x1007e030
10059269:	lea    ecx,[ebp-0x28]
1005926c:	xor    eax,ecx
1005926e:	mov    DWORD PTR [ebp-0x20],eax
10059271:	mov    eax,DWORD PTR [ebp+0x18]
10059274:	mov    DWORD PTR [ebp-0x1c],eax
10059277:	mov    eax,DWORD PTR [ebp+0xc]
1005927a:	mov    DWORD PTR [ebp-0x18],eax
1005927d:	mov    eax,DWORD PTR [ebp+0x1c]
10059280:	mov    DWORD PTR [ebp-0x14],eax
10059283:	mov    eax,DWORD PTR [ebp+0x20]
10059286:	mov    DWORD PTR [ebp-0x10],eax
10059289:	and    DWORD PTR [ebp-0xc],0x0
1005928d:	and    DWORD PTR [ebp-0x8],0x0
10059291:	and    DWORD PTR [ebp-0x4],0x0
10059295:	mov    DWORD PTR [ebp-0xc],esp
10059298:	mov    DWORD PTR [ebp-0x8],ebp
1005929b:	mov    eax,fs:0x0
100592a1:	mov    DWORD PTR [ebp-0x28],eax
100592a4:	lea    eax,[ebp-0x28]
100592a7:	mov    fs:0x0,eax
100592ad:	mov    DWORD PTR [ebp-0x38],0x1
100592b4:	mov    eax,DWORD PTR [ebp+0x8]
100592b7:	mov    DWORD PTR [ebp-0x34],eax
100592ba:	mov    eax,DWORD PTR [ebp+0x10]
100592bd:	mov    DWORD PTR [ebp-0x30],eax
100592c0:	call   0x100470fc
100592c5:	mov    eax,DWORD PTR [eax+0x80]
100592cb:	mov    DWORD PTR [ebp-0x2c],eax
100592ce:	lea    eax,[ebp-0x34]
100592d1:	push   eax
100592d2:	mov    eax,DWORD PTR [ebp+0x8]
100592d5:	push   DWORD PTR [eax]
100592d7:	call   DWORD PTR [ebp-0x2c]
100592da:	pop    ecx
100592db:	pop    ecx
100592dc:	and    DWORD PTR [ebp-0x38],0x0
100592e0:	cmp    DWORD PTR [ebp-0x4],0x0
100592e4:	je     0x100592fd
100592e6:	mov    ebx,DWORD PTR fs:0x0
100592ed:	mov    eax,DWORD PTR [ebx]
100592ef:	mov    ebx,DWORD PTR [ebp-0x28]
100592f2:	mov    DWORD PTR [ebx],eax
100592f4:	mov    DWORD PTR fs:0x0,ebx
100592fb:	jmp    0x10059306
100592fd:	mov    eax,DWORD PTR [ebp-0x28]
10059300:	mov    fs:0x0,eax
10059306:	mov    eax,DWORD PTR [ebp-0x38]
10059309:	pop    ebx
1005930a:	leave  
1005930b:	ret    
1005930c:	push   ebp
1005930d:	mov    ebp,esp
1005930f:	push   ecx
10059310:	push   ebx
10059311:	cld    
10059312:	mov    eax,DWORD PTR [ebp+0xc]
10059315:	mov    ecx,DWORD PTR [eax+0x8]
10059318:	xor    ecx,DWORD PTR [ebp+0xc]
1005931b:	call   0x10042e97
10059320:	mov    eax,DWORD PTR [ebp+0x8]
10059323:	mov    eax,DWORD PTR [eax+0x4]
10059326:	and    eax,0x66
10059329:	je     0x1005933c
1005932b:	mov    eax,DWORD PTR [ebp+0xc]
1005932e:	mov    DWORD PTR [eax+0x24],0x1
10059335:	xor    eax,eax
10059337:	inc    eax
10059338:	jmp    0x100593a6
1005933a:	jmp    0x100593a6
1005933c:	push   0x1
1005933e:	mov    eax,DWORD PTR [ebp+0xc]
10059341:	push   DWORD PTR [eax+0x18]
10059344:	mov    eax,DWORD PTR [ebp+0xc]
10059347:	push   DWORD PTR [eax+0x14]
1005934a:	mov    eax,DWORD PTR [ebp+0xc]
1005934d:	push   DWORD PTR [eax+0xc]
10059350:	push   0x0
10059352:	push   DWORD PTR [ebp+0x10]
10059355:	mov    eax,DWORD PTR [ebp+0xc]
10059358:	push   DWORD PTR [eax+0x10]
1005935b:	push   DWORD PTR [ebp+0x8]
1005935e:	call   0x1005b2f7
10059363:	add    esp,0x20
10059366:	mov    eax,DWORD PTR [ebp+0xc]
10059369:	cmp    DWORD PTR [eax+0x24],0x0
1005936d:	jne    0x1005937a
1005936f:	push   DWORD PTR [ebp+0x8]
10059372:	push   DWORD PTR [ebp+0xc]
10059375:	call   0x1005917f
1005937a:	push   0x0
1005937c:	push   0x0
1005937e:	push   0x0
10059380:	push   0x0
10059382:	push   0x0
10059384:	lea    eax,[ebp-0x4]
10059387:	push   eax
10059388:	push   0x123
1005938d:	call   0x10059237
10059392:	add    esp,0x1c
10059395:	mov    eax,DWORD PTR [ebp-0x4]
10059398:	mov    ebx,DWORD PTR [ebp+0xc]
1005939b:	mov    esp,DWORD PTR [ebx+0x1c]
1005939e:	mov    ebp,DWORD PTR [ebx+0x20]
100593a1:	jmp    eax
100593a3:	xor    eax,eax
100593a5:	inc    eax
100593a6:	pop    ebx
100593a7:	leave  
100593a8:	ret    
100593a9:	push   ebp
100593aa:	mov    ebp,esp
100593ac:	push   ecx
100593ad:	push   ebx
100593ae:	push   esi
100593af:	push   edi
100593b0:	mov    edi,DWORD PTR [ebp+0x8]
100593b3:	mov    eax,DWORD PTR [edi+0x10]
100593b6:	mov    esi,DWORD PTR [edi+0xc]
100593b9:	mov    DWORD PTR [ebp-0x4],eax
100593bc:	mov    ebx,esi
100593be:	jmp    0x100593ed
100593c0:	cmp    esi,0xffffffff
100593c3:	jne    0x100593ca
100593c5:	call   0x10046c4a
100593ca:	mov    ecx,DWORD PTR [ebp-0x4]
100593cd:	dec    esi
100593ce:	mov    eax,esi
100593d0:	imul   eax,eax,0x14
100593d3:	add    eax,ecx
100593d5:	mov    ecx,DWORD PTR [ebp+0x10]
100593d8:	cmp    DWORD PTR [eax+0x4],ecx
100593db:	jge    0x100593e2
100593dd:	cmp    ecx,DWORD PTR [eax+0x8]
100593e0:	jle    0x100593e7
100593e2:	cmp    esi,0xffffffff
100593e5:	jne    0x100593f0
100593e7:	dec    DWORD PTR [ebp+0xc]
100593ea:	mov    ebx,DWORD PTR [ebp+0x8]
100593ed:	mov    DWORD PTR [ebp+0x8],esi
100593f0:	cmp    DWORD PTR [ebp+0xc],0x0
100593f4:	jge    0x100593c0
100593f6:	mov    eax,DWORD PTR [ebp+0x14]
100593f9:	inc    esi
100593fa:	mov    DWORD PTR [eax],esi
100593fc:	mov    eax,DWORD PTR [ebp+0x18]
100593ff:	mov    DWORD PTR [eax],ebx
10059401:	cmp    ebx,DWORD PTR [edi+0xc]
10059404:	ja     0x1005940a
10059406:	cmp    esi,ebx
10059408:	jbe    0x1005940f
1005940a:	call   0x10046c4a
1005940f:	mov    eax,esi
10059411:	imul   eax,eax,0x14
10059414:	add    eax,DWORD PTR [ebp-0x4]
10059417:	pop    edi
10059418:	pop    esi
10059419:	pop    ebx
1005941a:	leave  
1005941b:	ret    
1005941c:	mov    eax,DWORD PTR [esp+0x8]
10059420:	push   esi
10059421:	mov    esi,DWORD PTR [esp+0x8]
10059425:	mov    DWORD PTR [esi],eax
10059427:	call   0x100470fc
1005942c:	mov    eax,DWORD PTR [eax+0x98]
10059432:	mov    DWORD PTR [esi+0x4],eax
10059435:	call   0x100470fc
1005943a:	mov    DWORD PTR [eax+0x98],esi
10059440:	mov    eax,esi
10059442:	pop    esi
10059443:	ret    
10059444:	call   0x100470fc
10059449:	mov    eax,DWORD PTR [eax+0x98]
1005944f:	jmp    0x1005945c
10059451:	mov    ecx,DWORD PTR [eax]
10059453:	cmp    ecx,DWORD PTR [esp+0x4]
10059457:	je     0x10059462
10059459:	mov    eax,DWORD PTR [eax+0x4]
1005945c:	test   eax,eax
1005945e:	jne    0x10059451
10059460:	inc    eax
10059461:	ret    
10059462:	xor    eax,eax
10059464:	ret    
10059465:	push   esi
10059466:	call   0x100470fc
1005946b:	mov    esi,DWORD PTR [esp+0x8]
1005946f:	cmp    esi,DWORD PTR [eax+0x98]
10059475:	jne    0x10059487
10059477:	call   0x100470fc
1005947c:	mov    ecx,DWORD PTR [esi+0x4]
1005947f:	mov    DWORD PTR [eax+0x98],ecx
10059485:	pop    esi
10059486:	ret    
10059487:	call   0x100470fc
1005948c:	mov    eax,DWORD PTR [eax+0x98]
10059492:	jmp    0x1005949d
10059494:	mov    ecx,DWORD PTR [eax+0x4]
10059497:	cmp    esi,ecx
10059499:	je     0x100594a9
1005949b:	mov    eax,ecx
1005949d:	cmp    DWORD PTR [eax+0x4],0x0
100594a1:	jne    0x10059494
100594a3:	pop    esi
100594a4:	jmp    0x10046c4a
100594a9:	mov    ecx,DWORD PTR [esi+0x4]
100594ac:	mov    DWORD PTR [eax+0x4],ecx
100594af:	pop    esi
100594b0:	ret    
100594b1:	push   ebp
100594b2:	mov    ebp,esp
100594b4:	sub    esp,0x18
100594b7:	mov    eax,ds:0x1007e030
100594bc:	and    DWORD PTR [ebp-0x18],0x0
100594c0:	lea    ecx,[ebp-0x18]
100594c3:	xor    eax,ecx
100594c5:	mov    ecx,DWORD PTR [ebp+0x8]
100594c8:	mov    DWORD PTR [ebp-0x10],eax
100594cb:	mov    eax,DWORD PTR [ebp+0xc]
100594ce:	mov    DWORD PTR [ebp-0xc],eax
100594d1:	mov    eax,DWORD PTR [ebp+0x14]
100594d4:	inc    eax
100594d5:	mov    DWORD PTR [ebp-0x14],0x10059207
100594dc:	mov    DWORD PTR [ebp-0x8],ecx
100594df:	mov    DWORD PTR [ebp-0x4],eax
100594e2:	mov    eax,fs:0x0
100594e8:	mov    DWORD PTR [ebp-0x18],eax
100594eb:	lea    eax,[ebp-0x18]
100594ee:	mov    fs:0x0,eax
100594f4:	push   DWORD PTR [ebp+0x18]
100594f7:	push   ecx
100594f8:	push   DWORD PTR [ebp+0x10]
100594fb:	call   0x1005b3e0
10059500:	mov    ecx,eax
10059502:	mov    eax,DWORD PTR [ebp-0x18]
10059505:	mov    fs:0x0,eax
1005950b:	mov    eax,ecx
1005950d:	leave  
1005950e:	ret    
1005950f:	ret    
10059510:	mov    eax,0x1005beb9
10059515:	mov    ds:0x1007ea80,eax
1005951a:	mov    DWORD PTR ds:0x1007ea84,0x1005b5b5
10059524:	mov    DWORD PTR ds:0x1007ea88,0x1005b573
1005952e:	mov    DWORD PTR ds:0x1007ea8c,0x1005b5a7
10059538:	mov    DWORD PTR ds:0x1007ea90,0x1005b51d
10059542:	mov    ds:0x1007ea94,eax
10059547:	mov    DWORD PTR ds:0x1007ea98,0x1005be33
10059551:	mov    DWORD PTR ds:0x1007ea9c,0x1005b533
1005955b:	mov    DWORD PTR ds:0x1007eaa0,0x1005b49d
10059565:	mov    DWORD PTR ds:0x1007eaa4,0x1005b42c
1005956f:	ret    
10059570:	call   0x10059510
10059575:	call   0x1005bf3f
1005957a:	cmp    DWORD PTR [esp+0x4],0x0
1005957f:	mov    ds:0x10080acc,eax
10059584:	je     0x1005958b
10059586:	call   0x1005beda
1005958b:	fnclex 
1005958d:	ret    
1005958e:	push   0x18
10059590:	push   0x10074a60
10059595:	call   0x10046c94
1005959a:	mov    eax,DWORD PTR [ebp+0x8]
1005959d:	mov    DWORD PTR [ebp-0x1c],eax
100595a0:	mov    DWORD PTR [ebp-0x20],eax
100595a3:	xor    ebx,ebx
100595a5:	cmp    eax,ebx
100595a7:	jne    0x100595cd
100595a9:	cmp    DWORD PTR [ebp+0xc],ebx
100595ac:	je     0x100595cd
100595ae:	call   0x10046b55
100595b3:	mov    DWORD PTR [eax],0x16
100595b9:	push   ebx
100595ba:	push   ebx
100595bb:	push   ebx
100595bc:	push   ebx
100595bd:	push   ebx
100595be:	call   0x1004338c
100595c3:	add    esp,0x14
100595c6:	xor    eax,eax
100595c8:	jmp    0x10059704
100595cd:	xor    eax,eax
100595cf:	cmp    DWORD PTR [ebp+0xc],ebx
100595d2:	setge  al
100595d5:	cmp    eax,ebx
100595d7:	je     0x100595ae
100595d9:	xor    eax,eax
100595db:	mov    esi,DWORD PTR [ebp+0x10]
100595de:	cmp    esi,ebx
100595e0:	setne  al
100595e3:	cmp    eax,ebx
100595e5:	je     0x100595ae
100595e7:	cmp    DWORD PTR [ebp+0xc],ebx
100595ea:	je     0x100595c6
100595ec:	mov    edi,esi
100595ee:	mov    DWORD PTR [ebp-0x24],edi
100595f1:	push   esi
100595f2:	call   0x1004d0c8
100595f7:	pop    ecx
100595f8:	mov    DWORD PTR [ebp-0x4],ebx
100595fb:	test   BYTE PTR [esi+0xc],0x40
100595ff:	jne    0x100596af
10059605:	push   esi
10059606:	call   0x1004d16c
1005960b:	pop    ecx
1005960c:	cmp    eax,0xffffffff
1005960f:	je     0x10059641
10059611:	push   esi
10059612:	call   0x1004d16c
10059617:	pop    ecx
10059618:	cmp    eax,0xfffffffe
1005961b:	je     0x10059641
1005961d:	push   esi
1005961e:	call   0x1004d16c
10059623:	sar    eax,0x5
10059626:	lea    edi,[eax*4+0x10082480]
1005962d:	push   esi
1005962e:	call   0x1004d16c
10059633:	pop    ecx
10059634:	pop    ecx
10059635:	and    eax,0x1f
10059638:	imul   eax,eax,0x28
1005963b:	add    eax,DWORD PTR [edi]
1005963d:	mov    edi,esi
1005963f:	jmp    0x10059646
10059641:	mov    eax,0x1007e9d0
10059646:	test   BYTE PTR [eax+0x24],0x7f
1005964a:	jne    0x10059694
1005964c:	push   esi
1005964d:	call   0x1004d16c
10059652:	pop    ecx
10059653:	cmp    eax,0xffffffff
10059656:	je     0x10059689
10059658:	push   esi
10059659:	call   0x1004d16c
1005965e:	pop    ecx
1005965f:	cmp    eax,0xfffffffe
10059662:	je     0x10059689
10059664:	push   esi
10059665:	call   0x1004d16c
1005966a:	sar    eax,0x5
1005966d:	lea    edi,[eax*4+0x10082480]
10059674:	push   esi
10059675:	call   0x1004d16c
1005967a:	pop    ecx
1005967b:	pop    ecx
1005967c:	and    eax,0x1f
1005967f:	imul   eax,eax,0x28
10059682:	add    eax,DWORD PTR [edi]
10059684:	mov    edi,DWORD PTR [ebp-0x24]
10059687:	jmp    0x1005968e
10059689:	mov    eax,0x1007e9d0
1005968e:	test   BYTE PTR [eax+0x24],0x80
10059692:	je     0x100596af
10059694:	call   0x10046b55
10059699:	mov    DWORD PTR [eax],0x16
1005969f:	push   ebx
100596a0:	push   ebx
100596a1:	push   ebx
100596a2:	push   ebx
100596a3:	push   ebx
100596a4:	call   0x1004338c
100596a9:	add    esp,0x14
100596ac:	mov    DWORD PTR [ebp-0x20],ebx
100596af:	cmp    DWORD PTR [ebp-0x20],ebx
100596b2:	je     0x100596f5
100596b4:	dec    DWORD PTR [ebp+0xc]
100596b7:	je     0x100596f0
100596b9:	dec    DWORD PTR [edi+0x4]
100596bc:	js     0x100596c8
100596be:	mov    ecx,DWORD PTR [edi]
100596c0:	movzx  eax,BYTE PTR [ecx]
100596c3:	inc    ecx
100596c4:	mov    DWORD PTR [edi],ecx
100596c6:	jmp    0x100596cf
100596c8:	push   edi
100596c9:	call   0x1005bf68
100596ce:	pop    ecx
100596cf:	mov    DWORD PTR [ebp-0x28],eax
100596d2:	cmp    eax,0xffffffff
100596d5:	jne    0x100596e4
100596d7:	mov    eax,DWORD PTR [ebp-0x1c]
100596da:	cmp    eax,DWORD PTR [ebp+0x8]
100596dd:	jne    0x100596f3
100596df:	mov    DWORD PTR [ebp-0x20],ebx
100596e2:	jmp    0x100596f5
100596e4:	mov    ecx,DWORD PTR [ebp-0x1c]
100596e7:	mov    BYTE PTR [ecx],al
100596e9:	inc    DWORD PTR [ebp-0x1c]
100596ec:	cmp    al,0xa
100596ee:	jne    0x100596b4
100596f0:	mov    eax,DWORD PTR [ebp-0x1c]
100596f3:	mov    BYTE PTR [eax],bl
100596f5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100596fc:	call   0x1005970d
10059701:	mov    eax,DWORD PTR [ebp-0x20]
10059704:	call   0x10046cd9
10059709:	ret    
1005970a:	mov    edi,DWORD PTR [ebp-0x24]
1005970d:	push   edi
1005970e:	call   0x1004d11a
10059713:	pop    ecx
10059714:	ret    
10059715:	push   ebp
10059716:	mov    ebp,esp
10059718:	sub    esp,0x20
1005971b:	push   ebx
1005971c:	xor    ebx,ebx
1005971e:	cmp    DWORD PTR [ebp+0x10],ebx
10059721:	jne    0x10059740
10059723:	call   0x10046b55
10059728:	push   ebx
10059729:	push   ebx
1005972a:	push   ebx
1005972b:	push   ebx
1005972c:	push   ebx
1005972d:	mov    DWORD PTR [eax],0x16
10059733:	call   0x1004338c
10059738:	add    esp,0x14
1005973b:	or     eax,0xffffffff
1005973e:	jmp    0x100597bf
10059740:	mov    ecx,DWORD PTR [ebp+0xc]
10059743:	cmp    ecx,ebx
10059745:	push   esi
10059746:	mov    esi,DWORD PTR [ebp+0x8]
10059749:	je     0x1005976c
1005974b:	cmp    esi,ebx
1005974d:	jne    0x1005976c
1005974f:	call   0x10046b55
10059754:	push   ebx
10059755:	push   ebx
10059756:	push   ebx
10059757:	push   ebx
10059758:	push   ebx
10059759:	mov    DWORD PTR [eax],0x16
1005975f:	call   0x1004338c
10059764:	add    esp,0x14
10059767:	or     eax,0xffffffff
1005976a:	jmp    0x100597be
1005976c:	mov    eax,0x7fffffff
10059771:	cmp    ecx,eax
10059773:	mov    DWORD PTR [ebp-0x1c],eax
10059776:	ja     0x1005977b
10059778:	mov    DWORD PTR [ebp-0x1c],ecx
1005977b:	push   edi
1005977c:	lea    eax,[ebp+0x14]
1005977f:	push   eax
10059780:	push   ebx
10059781:	push   DWORD PTR [ebp+0x10]
10059784:	lea    eax,[ebp-0x20]
10059787:	push   eax
10059788:	mov    DWORD PTR [ebp-0x14],0x42
1005978f:	mov    DWORD PTR [ebp-0x18],esi
10059792:	mov    DWORD PTR [ebp-0x20],esi
10059795:	call   0x1004d3c1
1005979a:	add    esp,0x10
1005979d:	cmp    esi,ebx
1005979f:	mov    edi,eax
100597a1:	je     0x100597bd
100597a3:	dec    DWORD PTR [ebp-0x1c]
100597a6:	js     0x100597af
100597a8:	mov    eax,DWORD PTR [ebp-0x20]
100597ab:	mov    BYTE PTR [eax],bl
100597ad:	jmp    0x100597bb
100597af:	lea    eax,[ebp-0x20]
100597b2:	push   eax
100597b3:	push   ebx
100597b4:	call   0x100487cd
100597b9:	pop    ecx
100597ba:	pop    ecx
100597bb:	mov    eax,edi
100597bd:	pop    edi
100597be:	pop    esi
100597bf:	pop    ebx
100597c0:	leave  
100597c1:	ret    
100597c2:	int3   
100597c3:	int3   
100597c4:	int3   
100597c5:	int3   
100597c6:	int3   
100597c7:	int3   
100597c8:	int3   
100597c9:	int3   
100597ca:	int3   
100597cb:	int3   
100597cc:	int3   
100597cd:	int3   
100597ce:	int3   
100597cf:	int3   
100597d0:	mov    ecx,DWORD PTR [esp+0xc]
100597d4:	push   edi
100597d5:	test   ecx,ecx
100597d7:	je     0x1005986f
100597dd:	push   esi
100597de:	push   ebx
100597df:	mov    ebx,ecx
100597e1:	mov    esi,DWORD PTR [esp+0x14]
100597e5:	test   esi,0x3
100597eb:	mov    edi,DWORD PTR [esp+0x10]
100597ef:	jne    0x100597fc
100597f1:	shr    ecx,0x2
100597f4:	jne    0x1005987f
100597fa:	jmp    0x10059823
100597fc:	mov    al,BYTE PTR [esi]
100597fe:	add    esi,0x1
10059801:	mov    BYTE PTR [edi],al
10059803:	add    edi,0x1
10059806:	sub    ecx,0x1
10059809:	je     0x10059836
1005980b:	test   al,al
1005980d:	je     0x1005983e
1005980f:	test   esi,0x3
10059815:	jne    0x100597fc
10059817:	mov    ebx,ecx
10059819:	shr    ecx,0x2
1005981c:	jne    0x1005987f
1005981e:	and    ebx,0x3
10059821:	je     0x10059836
10059823:	mov    al,BYTE PTR [esi]
10059825:	add    esi,0x1
10059828:	mov    BYTE PTR [edi],al
1005982a:	add    edi,0x1
1005982d:	test   al,al
1005982f:	je     0x10059868
10059831:	sub    ebx,0x1
10059834:	jne    0x10059823
10059836:	mov    eax,DWORD PTR [esp+0x10]
1005983a:	pop    ebx
1005983b:	pop    esi
1005983c:	pop    edi
1005983d:	ret    
1005983e:	test   edi,0x3
10059844:	je     0x1005985c
10059846:	mov    BYTE PTR [edi],al
10059848:	add    edi,0x1
1005984b:	sub    ecx,0x1
1005984e:	je     0x100598ec
10059854:	test   edi,0x3
1005985a:	jne    0x10059846
1005985c:	mov    ebx,ecx
1005985e:	shr    ecx,0x2
10059861:	jne    0x100598d7
10059863:	mov    BYTE PTR [edi],al
10059865:	add    edi,0x1
10059868:	sub    ebx,0x1
1005986b:	jne    0x10059863
1005986d:	pop    ebx
1005986e:	pop    esi
1005986f:	mov    eax,DWORD PTR [esp+0x8]
10059873:	pop    edi
10059874:	ret    
10059875:	mov    DWORD PTR [edi],edx
10059877:	add    edi,0x4
1005987a:	sub    ecx,0x1
1005987d:	je     0x1005981e
1005987f:	mov    edx,0x7efefeff
10059884:	mov    eax,DWORD PTR [esi]
10059886:	add    edx,eax
10059888:	xor    eax,0xffffffff
1005988b:	xor    eax,edx
1005988d:	mov    edx,DWORD PTR [esi]
1005988f:	add    esi,0x4
10059892:	test   eax,0x81010100
10059897:	je     0x10059875
10059899:	test   dl,dl
1005989b:	je     0x100598c9
1005989d:	test   dh,dh
1005989f:	je     0x100598bf
100598a1:	test   edx,0xff0000
100598a7:	je     0x100598b5
100598a9:	test   edx,0xff000000
100598af:	jne    0x10059875
100598b1:	mov    DWORD PTR [edi],edx
100598b3:	jmp    0x100598cd
100598b5:	and    edx,0xffff
100598bb:	mov    DWORD PTR [edi],edx
100598bd:	jmp    0x100598cd
100598bf:	and    edx,0xff
100598c5:	mov    DWORD PTR [edi],edx
100598c7:	jmp    0x100598cd
100598c9:	xor    edx,edx
100598cb:	mov    DWORD PTR [edi],edx
100598cd:	add    edi,0x4
100598d0:	xor    eax,eax
100598d2:	sub    ecx,0x1
100598d5:	je     0x100598e3
100598d7:	xor    eax,eax
100598d9:	mov    DWORD PTR [edi],eax
100598db:	add    edi,0x4
100598de:	sub    ecx,0x1
100598e1:	jne    0x100598d9
100598e3:	and    ebx,0x3
100598e6:	jne    0x10059863
100598ec:	mov    eax,DWORD PTR [esp+0x10]
100598f0:	pop    ebx
100598f1:	pop    esi
100598f2:	pop    edi
100598f3:	ret    
100598f4:	int3   
100598f5:	int3   
100598f6:	int3   
100598f7:	int3   
100598f8:	int3   
100598f9:	int3   
100598fa:	int3   
100598fb:	int3   
100598fc:	int3   
100598fd:	int3   
100598fe:	int3   
100598ff:	int3   
10059900:	push   ebp
10059901:	mov    ebp,esp
10059903:	push   edi
10059904:	mov    edi,DWORD PTR [ebp+0x8]
10059907:	xor    eax,eax
10059909:	or     ecx,0xffffffff
1005990c:	repnz scas al,BYTE PTR es:[edi]
1005990e:	add    ecx,0x1
10059911:	neg    ecx
10059913:	sub    edi,0x1
10059916:	mov    al,BYTE PTR [ebp+0xc]
10059919:	std    
1005991a:	repnz scas al,BYTE PTR es:[edi]
1005991c:	add    edi,0x1
1005991f:	cmp    BYTE PTR [edi],al
10059921:	je     0x10059927
10059923:	xor    eax,eax
10059925:	jmp    0x10059929
10059927:	mov    eax,edi
10059929:	cld    
1005992a:	pop    edi
1005992b:	leave  
1005992c:	ret    
1005992d:	push   ebp
1005992e:	mov    ebp,esp
10059930:	push   ecx
10059931:	push   ecx
10059932:	mov    eax,DWORD PTR [ebp+0xc]
10059935:	push   ebx
10059936:	xor    ebx,ebx
10059938:	cmp    eax,ebx
1005993a:	push   esi
1005993b:	push   edi
1005993c:	je     0x10059a23
10059942:	cmp    BYTE PTR [eax],bl
10059944:	je     0x10059a23
1005994a:	cmp    DWORD PTR [ebp+0x8],ebx
1005994d:	mov    esi,DWORD PTR ds:0x10066058
10059953:	jne    0x100599b0
10059955:	push   ebx
10059956:	push   ebx
10059957:	push   ebx
10059958:	push   eax
10059959:	call   esi
1005995b:	cmp    eax,ebx
1005995d:	jne    0x10059972
1005995f:	call   DWORD PTR ds:0x100660cc
10059965:	push   eax
10059966:	call   0x10046b7b
1005996b:	xor    eax,eax
1005996d:	jmp    0x10059a2f
10059972:	mov    edi,DWORD PTR [ebp+0x10]
10059975:	cmp    edi,eax
10059977:	ja     0x1005997b
10059979:	mov    edi,eax
1005997b:	cmp    edi,0xffffffff
1005997e:	jbe    0x10059992
10059980:	call   0x10046b55
10059985:	mov    DWORD PTR [eax],0x16
1005998b:	xor    eax,eax
1005998d:	jmp    0x10059a30
10059992:	push   0x1
10059994:	push   edi
10059995:	call   0x100436b4
1005999a:	cmp    eax,ebx
1005999c:	pop    ecx
1005999d:	pop    ecx
1005999e:	mov    DWORD PTR [ebp-0x4],eax
100599a1:	jne    0x100599d7
100599a3:	call   0x10046b55
100599a8:	mov    DWORD PTR [eax],0xc
100599ae:	jmp    0x1005998b
100599b0:	mov    edi,DWORD PTR [ebp+0x10]
100599b3:	cmp    edi,ebx
100599b5:	ja     0x100599d1
100599b7:	call   0x10046b55
100599bc:	push   ebx
100599bd:	push   ebx
100599be:	push   ebx
100599bf:	push   ebx
100599c0:	push   ebx
100599c1:	mov    DWORD PTR [eax],0x16
100599c7:	call   0x1004338c
100599cc:	add    esp,0x14
100599cf:	jmp    0x1005998b
100599d1:	mov    eax,DWORD PTR [ebp+0x8]
100599d4:	mov    DWORD PTR [ebp-0x4],eax
100599d7:	lea    eax,[ebp-0x8]
100599da:	push   eax
100599db:	push   DWORD PTR [ebp-0x4]
100599de:	push   edi
100599df:	push   DWORD PTR [ebp+0xc]
100599e2:	call   esi
100599e4:	cmp    eax,edi
100599e6:	jb     0x10059a03
100599e8:	cmp    DWORD PTR [ebp+0x8],ebx
100599eb:	jne    0x100599f6
100599ed:	push   DWORD PTR [ebp-0x4]
100599f0:	call   0x10043508
100599f5:	pop    ecx
100599f6:	call   0x10046b55
100599fb:	mov    DWORD PTR [eax],0x22
10059a01:	jmp    0x1005998b
10059a03:	cmp    eax,ebx
10059a05:	jne    0x10059a1e
10059a07:	cmp    DWORD PTR [ebp+0x8],ebx
10059a0a:	jne    0x1005995f
10059a10:	push   DWORD PTR [ebp-0x4]
10059a13:	call   0x10043508
10059a18:	pop    ecx
10059a19:	jmp    0x1005995f
10059a1e:	mov    eax,DWORD PTR [ebp-0x4]
10059a21:	jmp    0x10059a30
10059a23:	push   DWORD PTR [ebp+0x10]
10059a26:	push   DWORD PTR [ebp+0x8]
10059a29:	call   0x1005c1f4
10059a2e:	pop    ecx
10059a2f:	pop    ecx
10059a30:	pop    edi
10059a31:	pop    esi
10059a32:	pop    ebx
10059a33:	leave  
10059a34:	ret    
10059a35:	push   eax
10059a36:	push   DWORD PTR fs:0x0
10059a3d:	lea    eax,[esp+0xc]
10059a41:	sub    esp,DWORD PTR [esp+0xc]
10059a45:	push   ebx
10059a46:	push   esi
10059a47:	push   edi
10059a48:	mov    DWORD PTR [eax],ebp
10059a4a:	mov    ebp,eax
10059a4c:	mov    eax,ds:0x1007e030
10059a51:	xor    eax,ebp
10059a53:	push   eax
10059a54:	push   DWORD PTR [ebp-0x4]
10059a57:	mov    DWORD PTR [ebp-0x4],0xffffffff
10059a5e:	lea    eax,[ebp-0xc]
10059a61:	mov    fs:0x0,eax
10059a67:	ret    
10059a68:	push   eax
10059a69:	push   DWORD PTR fs:0x0
10059a70:	lea    eax,[esp+0xc]
10059a74:	sub    esp,DWORD PTR [esp+0xc]
10059a78:	push   ebx
10059a79:	push   esi
10059a7a:	push   edi
10059a7b:	mov    DWORD PTR [eax],ebp
10059a7d:	mov    ebp,eax
10059a7f:	mov    eax,ds:0x1007e030
10059a84:	xor    eax,ebp
10059a86:	push   eax
10059a87:	mov    DWORD PTR [ebp-0x10],esp
10059a8a:	push   DWORD PTR [ebp-0x4]
10059a8d:	mov    DWORD PTR [ebp-0x4],0xffffffff
10059a94:	lea    eax,[ebp-0xc]
10059a97:	mov    fs:0x0,eax
10059a9d:	ret    
10059a9e:	push   eax
10059a9f:	push   DWORD PTR fs:0x0
10059aa6:	lea    eax,[esp+0xc]
10059aaa:	sub    esp,DWORD PTR [esp+0xc]
10059aae:	push   ebx
10059aaf:	push   esi
10059ab0:	push   edi
10059ab1:	mov    DWORD PTR [eax],ebp
10059ab3:	mov    ebp,eax
10059ab5:	mov    eax,ds:0x1007e030
10059aba:	xor    eax,ebp
10059abc:	push   eax
10059abd:	mov    DWORD PTR [ebp-0x10],eax
10059ac0:	push   DWORD PTR [ebp-0x4]
10059ac3:	mov    DWORD PTR [ebp-0x4],0xffffffff
10059aca:	lea    eax,[ebp-0xc]
10059acd:	mov    fs:0x0,eax
10059ad3:	ret    
10059ad4:	push   eax
10059ad5:	push   DWORD PTR fs:0x0
10059adc:	lea    eax,[esp+0xc]
10059ae0:	sub    esp,DWORD PTR [esp+0xc]
10059ae4:	push   ebx
10059ae5:	push   esi
10059ae6:	push   edi
10059ae7:	mov    DWORD PTR [eax],ebp
10059ae9:	mov    ebp,eax
10059aeb:	mov    eax,ds:0x1007e030
10059af0:	xor    eax,ebp
10059af2:	push   eax
10059af3:	mov    DWORD PTR [ebp-0x14],eax
10059af6:	mov    DWORD PTR [ebp-0x10],esp
10059af9:	push   DWORD PTR [ebp-0x4]
10059afc:	mov    DWORD PTR [ebp-0x4],0xffffffff
10059b03:	lea    eax,[ebp-0xc]
10059b06:	mov    fs:0x0,eax
10059b0c:	ret    
10059b0d:	mov    ecx,DWORD PTR [ebp-0xc]
10059b10:	mov    DWORD PTR fs:0x0,ecx
10059b17:	pop    ecx
10059b18:	pop    edi
10059b19:	pop    edi
10059b1a:	pop    esi
10059b1b:	pop    ebx
10059b1c:	mov    esp,ebp
10059b1e:	pop    ebp
10059b1f:	push   ecx
10059b20:	ret    
10059b21:	mov    ecx,DWORD PTR [ebp-0x10]
10059b24:	xor    ecx,ebp
10059b26:	call   0x10042e97
10059b2b:	jmp    0x10059b0d
10059b30:	mov    ecx,DWORD PTR [ebp-0x14]
10059b33:	xor    ecx,ebp
10059b35:	call   0x10042e97
10059b3a:	jmp    0x10059b0d
10059b3f:	int3   
10059b40:	push   esi
10059b41:	inc    ebx
10059b42:	xor    dh,BYTE PTR [eax]
10059b44:	pop    eax
10059b45:	inc    ebx
10059b46:	xor    BYTE PTR [eax],dh
10059b48:	push   ebp
10059b49:	mov    ebp,esp
10059b4b:	sub    esp,0x8
10059b4e:	push   ebx
10059b4f:	push   esi
10059b50:	push   edi
10059b51:	push   ebp
10059b52:	cld    
10059b53:	mov    ebx,DWORD PTR [ebp+0xc]
10059b56:	mov    eax,DWORD PTR [ebp+0x8]
10059b59:	test   DWORD PTR [eax+0x4],0x6
10059b60:	jne    0x10059c29
10059b66:	mov    DWORD PTR [ebp-0x8],eax
10059b69:	mov    eax,DWORD PTR [ebp+0x10]
10059b6c:	mov    DWORD PTR [ebp-0x4],eax
10059b6f:	lea    eax,[ebp-0x8]
10059b72:	mov    DWORD PTR [ebx-0x4],eax
10059b75:	mov    esi,DWORD PTR [ebx+0xc]
10059b78:	mov    edi,DWORD PTR [ebx+0x8]
10059b7b:	push   ebx
10059b7c:	call   0x1005c630
10059b81:	add    esp,0x4
10059b84:	or     eax,eax
10059b86:	jle    0x10059c1b
10059b8c:	cmp    esi,0xffffffff
10059b8f:	je     0x10059c22
10059b95:	lea    ecx,[esi+esi*2]
10059b98:	mov    eax,DWORD PTR [edi+ecx*4+0x4]
10059b9c:	or     eax,eax
10059b9e:	je     0x10059c06
10059ba0:	push   esi
10059ba1:	push   ebp
10059ba2:	lea    ebp,[ebx+0x10]
10059ba5:	xor    ebx,ebx
10059ba7:	xor    ecx,ecx
10059ba9:	xor    edx,edx
10059bab:	xor    esi,esi
10059bad:	xor    edi,edi
10059baf:	call   eax
10059bb1:	pop    ebp
10059bb2:	pop    esi
10059bb3:	mov    ebx,DWORD PTR [ebp+0xc]
10059bb6:	or     eax,eax
10059bb8:	je     0x10059c06
10059bba:	js     0x10059c14
10059bbc:	push   0x1
10059bbe:	push   DWORD PTR [ebp+0x8]
10059bc1:	call   0x1005c533
10059bc6:	add    esp,0x8
10059bc9:	mov    edi,DWORD PTR [ebx+0x8]
10059bcc:	push   ebx
10059bcd:	call   0x1004f714
10059bd2:	add    esp,0x4
10059bd5:	lea    ebp,[ebx+0x10]
10059bd8:	push   esi
10059bd9:	push   ebx
10059bda:	call   0x1004f779
10059bdf:	add    esp,0x8
10059be2:	lea    ecx,[esi+esi*2]
10059be5:	push   0x1
10059be7:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
10059beb:	call   0x1004f829
10059bf0:	mov    eax,DWORD PTR [edi+ecx*4]
10059bf3:	mov    DWORD PTR [ebx+0xc],eax
10059bf6:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
10059bfa:	xor    ebx,ebx
10059bfc:	xor    ecx,ecx
10059bfe:	xor    edx,edx
10059c00:	xor    esi,esi
10059c02:	xor    edi,edi
10059c04:	call   eax
10059c06:	mov    edi,DWORD PTR [ebx+0x8]
10059c09:	lea    ecx,[esi+esi*2]
10059c0c:	mov    esi,DWORD PTR [edi+ecx*4]
10059c0f:	jmp    0x10059b8c
10059c14:	mov    eax,0x0
10059c19:	jmp    0x10059c3e
10059c1b:	mov    eax,DWORD PTR [ebp+0x8]
10059c1e:	or     DWORD PTR [eax+0x4],0x8
10059c22:	mov    eax,0x1
10059c27:	jmp    0x10059c3e
10059c29:	push   ebp
10059c2a:	lea    ebp,[ebx+0x10]
10059c2d:	push   0xffffffff
10059c2f:	push   ebx
10059c30:	call   0x1004f779
10059c35:	add    esp,0x8
10059c38:	pop    ebp
10059c39:	mov    eax,0x1
10059c3e:	pop    ebp
10059c3f:	pop    edi
10059c40:	pop    esi
10059c41:	pop    ebx
10059c42:	mov    esp,ebp
10059c44:	pop    ebp
10059c45:	ret    
10059c46:	push   ebp
10059c47:	mov    ecx,DWORD PTR [esp+0x8]
10059c4b:	mov    ebp,DWORD PTR [ecx]
10059c4d:	mov    eax,DWORD PTR [ecx+0x1c]
10059c50:	push   eax
10059c51:	mov    eax,DWORD PTR [ecx+0x18]
10059c54:	push   eax
10059c55:	call   0x1004f779
10059c5a:	add    esp,0x8
10059c5d:	pop    ebp
10059c5e:	ret    0x4
10059c61:	push   ebp
10059c62:	mov    ebp,esp
10059c64:	sub    esp,0x28
10059c67:	push   ebx
10059c68:	push   esi
10059c69:	xor    ebx,ebx
10059c6b:	test   BYTE PTR [ebp+0x10],0x80
10059c6f:	push   edi
10059c70:	push   0x10
10059c72:	mov    esi,eax
10059c74:	mov    DWORD PTR [ebp-0x14],ebx
10059c77:	mov    DWORD PTR [ebp-0x18],ebx
10059c7a:	mov    BYTE PTR [ebp-0x2],bl
10059c7d:	mov    DWORD PTR [ebp-0x28],0xc
10059c84:	mov    DWORD PTR [ebp-0x24],ebx
10059c87:	pop    edi
10059c88:	je     0x10059c93
10059c8a:	mov    DWORD PTR [ebp-0x20],ebx
10059c8d:	mov    BYTE PTR [ebp-0x1],0x10
10059c91:	jmp    0x10059c9d
10059c93:	mov    DWORD PTR [ebp-0x20],0x1
10059c9a:	mov    BYTE PTR [ebp-0x1],bl
10059c9d:	lea    eax,[ebp-0x14]
10059ca0:	push   eax
10059ca1:	call   0x1005cc42
10059ca6:	test   eax,eax
10059ca8:	pop    ecx
10059ca9:	je     0x10059cb8
10059cab:	push   ebx
10059cac:	push   ebx
10059cad:	push   ebx
10059cae:	push   ebx
10059caf:	push   ebx
10059cb0:	call   0x10043290
10059cb5:	add    esp,0x14
10059cb8:	lea    eax,[ebp-0x18]
10059cbb:	push   eax
10059cbc:	call   0x10047641
10059cc1:	test   eax,eax
10059cc3:	pop    ecx
10059cc4:	je     0x10059cd3
10059cc6:	push   ebx
10059cc7:	push   ebx
10059cc8:	push   ebx
10059cc9:	push   ebx
10059cca:	push   ebx
10059ccb:	call   0x10043290
10059cd0:	add    esp,0x14
10059cd3:	mov    eax,0x8000
10059cd8:	test   DWORD PTR [ebp+0x10],eax
10059cdb:	jne    0x10059cef
10059cdd:	test   DWORD PTR [ebp+0x10],0x74000
10059ce4:	jne    0x10059ceb
10059ce6:	cmp    DWORD PTR [ebp-0x14],eax
10059ce9:	je     0x10059cef
10059ceb:	or     BYTE PTR [ebp-0x1],0x80
10059cef:	mov    eax,DWORD PTR [ebp+0x10]
10059cf2:	push   0x3
10059cf4:	pop    edx
10059cf5:	and    eax,edx
10059cf7:	sub    eax,ebx
10059cf9:	mov    ecx,0x80000000
10059cfe:	je     0x10059d3e
10059d00:	dec    eax
10059d01:	je     0x10059d35
10059d03:	dec    eax
10059d04:	je     0x10059d2c
10059d06:	call   0x10046b68
10059d0b:	mov    DWORD PTR [eax],ebx
10059d0d:	or     DWORD PTR [esi],0xffffffff
10059d10:	call   0x10046b55
10059d15:	push   0x16
10059d17:	pop    esi
10059d18:	push   ebx
10059d19:	push   ebx
10059d1a:	push   ebx
10059d1b:	push   ebx
10059d1c:	push   ebx
10059d1d:	mov    DWORD PTR [eax],esi
10059d1f:	call   0x1004338c
10059d24:	add    esp,0x14
10059d27:	jmp    0x1005a1bb
10059d2c:	mov    DWORD PTR [ebp-0xc],0xc0000000
10059d33:	jmp    0x10059d41
10059d35:	mov    DWORD PTR [ebp-0xc],0x40000000
10059d3c:	jmp    0x10059d41
10059d3e:	mov    DWORD PTR [ebp-0xc],ecx
10059d41:	mov    eax,DWORD PTR [ebp+0x14]
10059d44:	sub    eax,edi
10059d46:	je     0x10059d7d
10059d48:	sub    eax,edi
10059d4a:	je     0x10059d74
10059d4c:	sub    eax,edi
10059d4e:	je     0x10059d6b
10059d50:	sub    eax,edi
10059d52:	je     0x10059d66
10059d54:	sub    eax,0x40
10059d57:	jne    0x10059d06
10059d59:	xor    eax,eax
10059d5b:	cmp    DWORD PTR [ebp-0xc],ecx
10059d5e:	sete   al
10059d61:	mov    DWORD PTR [ebp-0x8],eax
10059d64:	jmp    0x10059d80
10059d66:	mov    DWORD PTR [ebp-0x8],edx
10059d69:	jmp    0x10059d80
10059d6b:	mov    DWORD PTR [ebp-0x8],0x2
10059d72:	jmp    0x10059d80
10059d74:	mov    DWORD PTR [ebp-0x8],0x1
10059d7b:	jmp    0x10059d80
10059d7d:	mov    DWORD PTR [ebp-0x8],ebx
10059d80:	mov    eax,DWORD PTR [ebp+0x10]
10059d83:	mov    edx,0x700
10059d88:	and    eax,edx
10059d8a:	mov    ecx,0x400
10059d8f:	cmp    eax,ecx
10059d91:	jg     0x10059dd1
10059d93:	je     0x10059dc8
10059d95:	cmp    eax,ebx
10059d97:	je     0x10059dc8
10059d99:	cmp    eax,0x100
10059d9e:	je     0x10059dbf
10059da0:	cmp    eax,0x200
10059da5:	je     0x10059e43
10059dab:	cmp    eax,0x300
10059db0:	jne    0x10059d06
10059db6:	mov    DWORD PTR [ebp-0x10],0x2
10059dbd:	jmp    0x10059dee
10059dbf:	mov    DWORD PTR [ebp-0x10],0x4
10059dc6:	jmp    0x10059dee
10059dc8:	mov    DWORD PTR [ebp-0x10],0x3
10059dcf:	jmp    0x10059dee
10059dd1:	cmp    eax,0x500
10059dd6:	je     0x10059de7
10059dd8:	cmp    eax,0x600
10059ddd:	je     0x10059e43
10059ddf:	cmp    eax,edx
10059de1:	jne    0x10059d06
10059de7:	mov    DWORD PTR [ebp-0x10],0x1
10059dee:	mov    ecx,DWORD PTR [ebp+0x10]
10059df1:	mov    eax,0x100
10059df6:	test   eax,ecx
10059df8:	mov    edi,0x80
10059dfd:	je     0x10059e11
10059dff:	mov    edx,DWORD PTR ds:0x1007fde4
10059e05:	not    edx
10059e07:	and    edx,DWORD PTR [ebp+0x18]
10059e0a:	test   dl,dl
10059e0c:	js     0x10059e11
10059e0e:	xor    edi,edi
10059e10:	inc    edi
10059e11:	test   cl,0x40
10059e14:	je     0x10059e2d
10059e16:	or     DWORD PTR [ebp-0xc],0x10000
10059e1d:	or     edi,0x4000000
10059e23:	cmp    DWORD PTR [ebp-0x18],0x2
10059e27:	jne    0x10059e2d
10059e29:	or     DWORD PTR [ebp-0x8],0x4
10059e2d:	test   cx,0x1000
10059e32:	je     0x10059e36
10059e34:	or     edi,eax
10059e36:	test   cl,0x20
10059e39:	je     0x10059e4c
10059e3b:	or     edi,0x8000000
10059e41:	jmp    0x10059e57
10059e43:	mov    DWORD PTR [ebp-0x10],0x5
10059e4a:	jmp    0x10059dee
10059e4c:	test   cl,0x10
10059e4f:	je     0x10059e57
10059e51:	or     edi,0x10000000
10059e57:	call   0x1004fa92
10059e5c:	cmp    eax,0xffffffff
10059e5f:	mov    DWORD PTR [esi],eax
10059e61:	jne    0x10059e7a
10059e63:	call   0x10046b68
10059e68:	mov    DWORD PTR [eax],ebx
10059e6a:	or     DWORD PTR [esi],0xffffffff
10059e6d:	call   0x10046b55
10059e72:	mov    DWORD PTR [eax],0x18
10059e78:	jmp    0x10059eca
10059e7a:	mov    eax,DWORD PTR [ebp+0x8]
10059e7d:	push   ebx
10059e7e:	push   edi
10059e7f:	push   DWORD PTR [ebp-0x10]
10059e82:	mov    DWORD PTR [eax],0x1
10059e88:	lea    eax,[ebp-0x28]
10059e8b:	push   eax
10059e8c:	push   DWORD PTR [ebp-0x8]
10059e8f:	push   DWORD PTR [ebp-0xc]
10059e92:	push   DWORD PTR [ebp+0xc]
10059e95:	call   DWORD PTR ds:0x10066254
10059e9b:	mov    edi,eax
10059e9d:	cmp    edi,0xffffffff
10059ea0:	jne    0x10059ed6
10059ea2:	mov    esi,DWORD PTR [esi]
10059ea4:	mov    eax,esi
10059ea6:	and    esi,0x1f
10059ea9:	imul   esi,esi,0x28
10059eac:	sar    eax,0x5
10059eaf:	mov    eax,DWORD PTR [eax*4+0x10082480]
10059eb6:	lea    eax,[eax+esi*1+0x4]
10059eba:	and    BYTE PTR [eax],0xfe
10059ebd:	call   DWORD PTR ds:0x100660cc
10059ec3:	push   eax
10059ec4:	call   0x10046b7b
10059ec9:	pop    ecx
10059eca:	call   0x10046b55
10059ecf:	mov    eax,DWORD PTR [eax]
10059ed1:	jmp    0x1005a29a
10059ed6:	push   edi
10059ed7:	call   DWORD PTR ds:0x100661f4
10059edd:	cmp    eax,ebx
10059edf:	jne    0x10059f05
10059ee1:	mov    esi,DWORD PTR [esi]
10059ee3:	mov    eax,esi
10059ee5:	and    esi,0x1f
10059ee8:	imul   esi,esi,0x28
10059eeb:	sar    eax,0x5
10059eee:	mov    eax,DWORD PTR [eax*4+0x10082480]
10059ef5:	lea    eax,[eax+esi*1+0x4]
10059ef9:	and    BYTE PTR [eax],0xfe
10059efc:	push   edi
10059efd:	call   DWORD PTR ds:0x10066070
10059f03:	jmp    0x10059ebd
10059f05:	cmp    eax,0x2
10059f08:	jne    0x10059f10
10059f0a:	or     BYTE PTR [ebp-0x1],0x40
10059f0e:	jmp    0x10059f19
10059f10:	cmp    eax,0x3
10059f13:	jne    0x10059f19
10059f15:	or     BYTE PTR [ebp-0x1],0x8
10059f19:	push   edi
10059f1a:	push   DWORD PTR [esi]
10059f1c:	call   0x1004f861
10059f21:	mov    eax,DWORD PTR [esi]
10059f23:	mov    edx,eax
10059f25:	and    eax,0x1f
10059f28:	imul   eax,eax,0x28
10059f2b:	sar    edx,0x5
10059f2e:	mov    edx,DWORD PTR [edx*4+0x10082480]
10059f35:	pop    ecx
10059f36:	pop    ecx
10059f37:	mov    cl,BYTE PTR [ebp-0x1]
10059f3a:	or     cl,0x1
10059f3d:	mov    BYTE PTR [edx+eax*1+0x4],cl
10059f41:	mov    eax,DWORD PTR [esi]
10059f43:	mov    edx,eax
10059f45:	and    eax,0x1f
10059f48:	imul   eax,eax,0x28
10059f4b:	sar    edx,0x5
10059f4e:	mov    edx,DWORD PTR [edx*4+0x10082480]
10059f55:	lea    eax,[edx+eax*1+0x24]
10059f59:	and    BYTE PTR [eax],0x80
10059f5c:	mov    BYTE PTR [ebp-0x3],cl
10059f5f:	and    BYTE PTR [ebp-0x3],0x48
10059f63:	mov    BYTE PTR [ebp-0x1],cl
10059f66:	jne    0x10059fec
10059f6c:	test   cl,0x80
10059f6f:	je     0x1005a226
10059f75:	test   BYTE PTR [ebp+0x10],0x2
10059f79:	je     0x10059fec
10059f7b:	push   0x2
10059f7d:	or     edi,0xffffffff
10059f80:	push   edi
10059f81:	push   DWORD PTR [esi]
10059f83:	call   0x10058d8e
10059f88:	add    esp,0xc
10059f8b:	cmp    eax,edi
10059f8d:	mov    DWORD PTR [ebp-0x8],eax
10059f90:	jne    0x10059fab
10059f92:	call   0x10046b68
10059f97:	cmp    DWORD PTR [eax],0x83
10059f9d:	je     0x10059fec
10059f9f:	push   DWORD PTR [esi]
10059fa1:	call   0x100506f1
10059fa6:	jmp    0x10059ec9
10059fab:	push   0x1
10059fad:	lea    eax,[ebp-0x4]
10059fb0:	push   eax
10059fb1:	push   DWORD PTR [esi]
10059fb3:	mov    BYTE PTR [ebp-0x4],bl
10059fb6:	call   0x100584fa
10059fbb:	add    esp,0xc
10059fbe:	test   eax,eax
10059fc0:	jne    0x10059fdc
10059fc2:	cmp    BYTE PTR [ebp-0x4],0x1a
10059fc6:	jne    0x10059fdc
10059fc8:	mov    eax,DWORD PTR [ebp-0x8]
10059fcb:	cdq    
10059fcc:	push   edx
10059fcd:	push   eax
10059fce:	push   DWORD PTR [esi]
10059fd0:	call   0x1005c9d2
10059fd5:	add    esp,0xc
10059fd8:	cmp    eax,edi
10059fda:	je     0x10059f9f
10059fdc:	push   ebx
10059fdd:	push   ebx
10059fde:	push   DWORD PTR [esi]
10059fe0:	call   0x10058d8e
10059fe5:	add    esp,0xc
10059fe8:	cmp    eax,edi
10059fea:	je     0x10059f9f
10059fec:	test   BYTE PTR [ebp-0x1],0x80
10059ff0:	je     0x1005a226
10059ff6:	mov    ecx,0x74000
10059ffb:	test   DWORD PTR [ebp+0x10],ecx
10059ffe:	mov    edi,0x4000
1005a003:	jne    0x1005a014
1005a005:	mov    eax,DWORD PTR [ebp-0x14]
1005a008:	and    eax,ecx
1005a00a:	jne    0x1005a011
1005a00c:	or     DWORD PTR [ebp+0x10],edi
1005a00f:	jmp    0x1005a014
1005a011:	or     DWORD PTR [ebp+0x10],eax
1005a014:	mov    eax,DWORD PTR [ebp+0x10]
1005a017:	and    eax,ecx
1005a019:	cmp    eax,edi
1005a01b:	je     0x1005a061
1005a01d:	cmp    eax,0x10000
1005a022:	je     0x1005a04d
1005a024:	cmp    eax,0x14000
1005a029:	je     0x1005a04d
1005a02b:	cmp    eax,0x20000
1005a030:	je     0x1005a05b
1005a032:	cmp    eax,0x24000
1005a037:	je     0x1005a05b
1005a039:	cmp    eax,0x40000
1005a03e:	je     0x1005a047
1005a040:	cmp    eax,0x44000
1005a045:	jne    0x1005a064
1005a047:	mov    BYTE PTR [ebp-0x2],0x1
1005a04b:	jmp    0x1005a064
1005a04d:	mov    ecx,DWORD PTR [ebp+0x10]
1005a050:	mov    eax,0x301
1005a055:	and    ecx,eax
1005a057:	cmp    ecx,eax
1005a059:	jne    0x1005a064
1005a05b:	mov    BYTE PTR [ebp-0x2],0x2
1005a05f:	jmp    0x1005a064
1005a061:	mov    BYTE PTR [ebp-0x2],bl
1005a064:	test   DWORD PTR [ebp+0x10],0x70000
1005a06b:	je     0x1005a226
1005a071:	test   BYTE PTR [ebp-0x1],0x40
1005a075:	mov    DWORD PTR [ebp-0x8],ebx
1005a078:	jne    0x1005a226
1005a07e:	mov    eax,DWORD PTR [ebp-0xc]
1005a081:	mov    ecx,0xc0000000
1005a086:	and    eax,ecx
1005a088:	cmp    eax,0x40000000
1005a08d:	je     0x1005a14a
1005a093:	cmp    eax,0x80000000
1005a098:	je     0x1005a111
1005a09a:	cmp    eax,ecx
1005a09c:	jne    0x1005a226
1005a0a2:	mov    eax,DWORD PTR [ebp-0x10]
1005a0a5:	cmp    eax,ebx
1005a0a7:	jbe    0x1005a226
1005a0ad:	cmp    eax,0x2
1005a0b0:	jbe    0x1005a0c0
1005a0b2:	cmp    eax,0x4
1005a0b5:	jbe    0x1005a0e7
1005a0b7:	cmp    eax,0x5
1005a0ba:	jne    0x1005a226
1005a0c0:	movsx  eax,BYTE PTR [ebp-0x2]
1005a0c4:	xor    edi,edi
1005a0c6:	dec    eax
1005a0c7:	je     0x1005a1f3
1005a0cd:	dec    eax
1005a0ce:	jne    0x1005a226
1005a0d4:	mov    DWORD PTR [ebp-0x8],0xfeff
1005a0db:	mov    DWORD PTR [ebp-0x10],0x2
1005a0e2:	jmp    0x1005a201
1005a0e7:	push   0x2
1005a0e9:	push   ebx
1005a0ea:	push   ebx
1005a0eb:	push   DWORD PTR [esi]
1005a0ed:	call   0x1004c711
1005a0f2:	add    esp,0x10
1005a0f5:	or     eax,edx
1005a0f7:	je     0x1005a0c0
1005a0f9:	push   ebx
1005a0fa:	push   ebx
1005a0fb:	push   ebx
1005a0fc:	push   DWORD PTR [esi]
1005a0fe:	call   0x1004c711
1005a103:	and    eax,edx
1005a105:	add    esp,0x10
1005a108:	cmp    eax,0xffffffff
1005a10b:	je     0x10059f9f
1005a111:	push   0x3
1005a113:	lea    eax,[ebp-0x8]
1005a116:	push   eax
1005a117:	push   DWORD PTR [esi]
1005a119:	call   0x100584fa
1005a11e:	add    esp,0xc
1005a121:	cmp    eax,0xffffffff
1005a124:	je     0x10059f9f
1005a12a:	cmp    eax,0x2
1005a12d:	je     0x1005a19a
1005a12f:	cmp    eax,0x3
1005a132:	jne    0x1005a1e5
1005a138:	cmp    DWORD PTR [ebp-0x8],0xbfbbef
1005a13f:	jne    0x1005a19a
1005a141:	mov    BYTE PTR [ebp-0x2],0x1
1005a145:	jmp    0x1005a226
1005a14a:	mov    eax,DWORD PTR [ebp-0x10]
1005a14d:	cmp    eax,ebx
1005a14f:	jbe    0x1005a226
1005a155:	cmp    eax,0x2
1005a158:	jbe    0x1005a0c0
1005a15e:	cmp    eax,0x4
1005a161:	ja     0x1005a0b7
1005a167:	push   0x2
1005a169:	push   ebx
1005a16a:	push   ebx
1005a16b:	push   DWORD PTR [esi]
1005a16d:	call   0x1004c711
1005a172:	add    esp,0x10
1005a175:	or     eax,edx
1005a177:	je     0x1005a0c0
1005a17d:	push   ebx
1005a17e:	push   ebx
1005a17f:	push   ebx
1005a180:	push   DWORD PTR [esi]
1005a182:	call   0x1004c711
1005a187:	add    esp,0x10
1005a18a:	and    eax,edx
1005a18c:	cmp    eax,0xffffffff
1005a18f:	jne    0x1005a226
1005a195:	jmp    0x10059f9f
1005a19a:	mov    eax,DWORD PTR [ebp-0x8]
1005a19d:	and    eax,0xffff
1005a1a2:	cmp    eax,0xfffe
1005a1a7:	jne    0x1005a1c2
1005a1a9:	push   DWORD PTR [esi]
1005a1ab:	call   0x100506f1
1005a1b0:	pop    ecx
1005a1b1:	call   0x10046b55
1005a1b6:	push   0x16
1005a1b8:	pop    esi
1005a1b9:	mov    DWORD PTR [eax],esi
1005a1bb:	mov    eax,esi
1005a1bd:	jmp    0x1005a29a
1005a1c2:	cmp    eax,0xfeff
1005a1c7:	jne    0x1005a1e5
1005a1c9:	push   ebx
1005a1ca:	push   0x2
1005a1cc:	push   DWORD PTR [esi]
1005a1ce:	call   0x10058d8e
1005a1d3:	add    esp,0xc
1005a1d6:	cmp    eax,0xffffffff
1005a1d9:	je     0x10059f9f
1005a1df:	mov    BYTE PTR [ebp-0x2],0x2
1005a1e3:	jmp    0x1005a226
1005a1e5:	push   ebx
1005a1e6:	push   ebx
1005a1e7:	push   DWORD PTR [esi]
1005a1e9:	call   0x10058d8e
1005a1ee:	add    esp,0xc
1005a1f1:	jmp    0x1005a18c
1005a1f3:	mov    DWORD PTR [ebp-0x8],0xbfbbef
1005a1fa:	mov    DWORD PTR [ebp-0x10],0x3
1005a201:	mov    eax,DWORD PTR [ebp-0x10]
1005a204:	sub    eax,edi
1005a206:	push   eax
1005a207:	lea    eax,[ebp+edi*1-0x8]
1005a20b:	push   eax
1005a20c:	push   DWORD PTR [esi]
1005a20e:	call   0x1004ce73
1005a213:	add    esp,0xc
1005a216:	cmp    eax,0xffffffff
1005a219:	je     0x10059f9f
1005a21f:	add    edi,eax
1005a221:	cmp    DWORD PTR [ebp-0x10],edi
1005a224:	jg     0x1005a201
1005a226:	mov    eax,DWORD PTR [esi]
1005a228:	mov    ecx,eax
1005a22a:	and    eax,0x1f
1005a22d:	imul   eax,eax,0x28
1005a230:	sar    ecx,0x5
1005a233:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1005a23a:	lea    eax,[ecx+eax*1+0x24]
1005a23e:	mov    cl,BYTE PTR [eax]
1005a240:	xor    cl,BYTE PTR [ebp-0x2]
1005a243:	and    cl,0x7f
1005a246:	xor    BYTE PTR [eax],cl
1005a248:	mov    eax,DWORD PTR [esi]
1005a24a:	mov    ecx,eax
1005a24c:	and    eax,0x1f
1005a24f:	imul   eax,eax,0x28
1005a252:	sar    ecx,0x5
1005a255:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1005a25c:	lea    eax,[ecx+eax*1+0x24]
1005a260:	mov    ecx,DWORD PTR [ebp+0x10]
1005a263:	mov    dl,BYTE PTR [eax]
1005a265:	shr    ecx,0x10
1005a268:	shl    cl,0x7
1005a26b:	and    dl,0x7f
1005a26e:	or     cl,dl
1005a270:	cmp    BYTE PTR [ebp-0x3],bl
1005a273:	mov    BYTE PTR [eax],cl
1005a275:	jne    0x1005a298
1005a277:	test   BYTE PTR [ebp+0x10],0x8
1005a27b:	je     0x1005a298
1005a27d:	mov    esi,DWORD PTR [esi]
1005a27f:	mov    eax,esi
1005a281:	and    esi,0x1f
1005a284:	imul   esi,esi,0x28
1005a287:	sar    eax,0x5
1005a28a:	mov    eax,DWORD PTR [eax*4+0x10082480]
1005a291:	lea    eax,[eax+esi*1+0x4]
1005a295:	or     BYTE PTR [eax],0x20
1005a298:	mov    eax,ebx
1005a29a:	pop    edi
1005a29b:	pop    esi
1005a29c:	pop    ebx
1005a29d:	leave  
1005a29e:	ret    
1005a29f:	push   0x14
1005a2a1:	push   0x10074a80
1005a2a6:	call   0x10046c94
1005a2ab:	xor    esi,esi
1005a2ad:	mov    DWORD PTR [ebp-0x1c],esi
1005a2b0:	xor    eax,eax
1005a2b2:	mov    edi,DWORD PTR [ebp+0x18]
1005a2b5:	cmp    edi,esi
1005a2b7:	setne  al
1005a2ba:	cmp    eax,esi
1005a2bc:	jne    0x1005a2d9
1005a2be:	call   0x10046b55
1005a2c3:	push   0x16
1005a2c5:	pop    edi
1005a2c6:	mov    DWORD PTR [eax],edi
1005a2c8:	push   esi
1005a2c9:	push   esi
1005a2ca:	push   esi
1005a2cb:	push   esi
1005a2cc:	push   esi
1005a2cd:	call   0x1004338c
1005a2d2:	add    esp,0x14
1005a2d5:	mov    eax,edi
1005a2d7:	jmp    0x1005a332
1005a2d9:	or     DWORD PTR [edi],0xffffffff
1005a2dc:	xor    eax,eax
1005a2de:	cmp    DWORD PTR [ebp+0x8],esi
1005a2e1:	setne  al
1005a2e4:	cmp    eax,esi
1005a2e6:	je     0x1005a2be
1005a2e8:	cmp    DWORD PTR [ebp+0x1c],esi
1005a2eb:	je     0x1005a2fc
1005a2ed:	mov    eax,DWORD PTR [ebp+0x14]
1005a2f0:	and    eax,0xfffffe7f
1005a2f5:	neg    eax
1005a2f7:	sbb    eax,eax
1005a2f9:	inc    eax
1005a2fa:	je     0x1005a2be
1005a2fc:	mov    DWORD PTR [ebp-0x4],esi
1005a2ff:	push   DWORD PTR [ebp+0x14]
1005a302:	push   DWORD PTR [ebp+0x10]
1005a305:	push   DWORD PTR [ebp+0xc]
1005a308:	push   DWORD PTR [ebp+0x8]
1005a30b:	lea    eax,[ebp-0x1c]
1005a30e:	push   eax
1005a30f:	mov    eax,edi
1005a311:	call   0x10059c61
1005a316:	add    esp,0x14
1005a319:	mov    DWORD PTR [ebp-0x20],eax
1005a31c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005a323:	call   0x1005a33d
1005a328:	mov    eax,DWORD PTR [ebp-0x20]
1005a32b:	cmp    eax,esi
1005a32d:	je     0x1005a332
1005a32f:	or     DWORD PTR [edi],0xffffffff
1005a332:	call   0x10046cd9
1005a337:	ret    
1005a338:	xor    esi,esi
1005a33a:	mov    edi,DWORD PTR [ebp+0x18]
1005a33d:	cmp    DWORD PTR [ebp-0x1c],esi
1005a340:	je     0x1005a36a
1005a342:	cmp    DWORD PTR [ebp-0x20],esi
1005a345:	je     0x1005a362
1005a347:	mov    eax,DWORD PTR [edi]
1005a349:	mov    ecx,eax
1005a34b:	sar    ecx,0x5
1005a34e:	and    eax,0x1f
1005a351:	imul   eax,eax,0x28
1005a354:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1005a35b:	lea    eax,[ecx+eax*1+0x4]
1005a35f:	and    BYTE PTR [eax],0xfe
1005a362:	push   DWORD PTR [edi]
1005a364:	call   0x1004fa70
1005a369:	pop    ecx
1005a36a:	ret    
1005a36b:	push   ebp
1005a36c:	mov    ebp,esp
1005a36e:	push   0x1
1005a370:	push   DWORD PTR [ebp+0x8]
1005a373:	push   DWORD PTR [ebp+0x18]
1005a376:	push   DWORD PTR [ebp+0x14]
1005a379:	push   DWORD PTR [ebp+0x10]
1005a37c:	push   DWORD PTR [ebp+0xc]
1005a37f:	call   0x1005a29f
1005a384:	add    esp,0x18
1005a387:	pop    ebp
1005a388:	ret    
1005a389:	push   ebp
1005a38a:	mov    ebp,esp
1005a38c:	sub    esp,0x10
1005a38f:	mov    eax,ds:0x10080bf4
1005a394:	push   ebx
1005a395:	xor    ebx,ebx
1005a397:	push   esi
1005a398:	mov    esi,DWORD PTR [ebp+0xc]
1005a39b:	mov    DWORD PTR [ebp-0x4],eax
1005a39e:	mov    DWORD PTR [ebp-0xc],ebx
1005a3a1:	mov    DWORD PTR [ebp-0x8],ebx
1005a3a4:	mov    DWORD PTR [ebp-0x10],ebx
1005a3a7:	jmp    0x1005a3aa
1005a3a9:	inc    esi
1005a3aa:	cmp    BYTE PTR [esi],0x20
1005a3ad:	je     0x1005a3a9
1005a3af:	mov    al,BYTE PTR [esi]
1005a3b1:	cmp    al,0x61
1005a3b3:	je     0x1005a3ee
1005a3b5:	cmp    al,0x72
1005a3b7:	je     0x1005a3e5
1005a3b9:	cmp    al,0x77
1005a3bb:	je     0x1005a3dc
1005a3bd:	call   0x10046b55
1005a3c2:	push   ebx
1005a3c3:	push   ebx
1005a3c4:	push   ebx
1005a3c5:	push   ebx
1005a3c6:	push   ebx
1005a3c7:	mov    DWORD PTR [eax],0x16
1005a3cd:	call   0x1004338c
1005a3d2:	add    esp,0x14
1005a3d5:	xor    eax,eax
1005a3d7:	jmp    0x1005a627
1005a3dc:	mov    DWORD PTR [ebp+0xc],0x301
1005a3e3:	jmp    0x1005a3f5
1005a3e5:	or     DWORD PTR [ebp-0x4],0x1
1005a3e9:	mov    DWORD PTR [ebp+0xc],ebx
1005a3ec:	jmp    0x1005a3f9
1005a3ee:	mov    DWORD PTR [ebp+0xc],0x109
1005a3f5:	or     DWORD PTR [ebp-0x4],0x2
1005a3f9:	xor    ecx,ecx
1005a3fb:	inc    ecx
1005a3fc:	inc    esi
1005a3fd:	mov    al,BYTE PTR [esi]
1005a3ff:	cmp    al,bl
1005a401:	push   edi
1005a402:	je     0x1005a5c1
1005a408:	mov    edx,0x80
1005a40d:	mov    edi,0x4000
1005a412:	cmp    ecx,ebx
1005a414:	je     0x1005a545
1005a41a:	movsx  eax,al
1005a41d:	cmp    eax,0x53
1005a420:	jg     0x1005a4c8
1005a426:	je     0x1005a4b6
1005a42c:	sub    eax,0x20
1005a42f:	je     0x1005a53a
1005a435:	sub    eax,0xb
1005a438:	je     0x1005a490
1005a43a:	dec    eax
1005a43b:	je     0x1005a484
1005a43d:	sub    eax,0x18
1005a440:	je     0x1005a471
1005a442:	sub    eax,0xa
1005a445:	je     0x1005a469
1005a447:	sub    eax,0x4
1005a44a:	jne    0x1005a5ca
1005a450:	cmp    DWORD PTR [ebp-0x8],ebx
1005a453:	jne    0x1005a52f
1005a459:	or     DWORD PTR [ebp+0xc],0x10
1005a45d:	mov    DWORD PTR [ebp-0x8],0x1
1005a464:	jmp    0x1005a53a
1005a469:	or     DWORD PTR [ebp+0xc],edx
1005a46c:	jmp    0x1005a53a
1005a471:	test   BYTE PTR [ebp+0xc],0x40
1005a475:	jne    0x1005a52f
1005a47b:	or     DWORD PTR [ebp+0xc],0x40
1005a47f:	jmp    0x1005a53a
1005a484:	mov    DWORD PTR [ebp-0x10],0x1
1005a48b:	jmp    0x1005a52f
1005a490:	test   BYTE PTR [ebp+0xc],0x2
1005a494:	jne    0x1005a52f
1005a49a:	mov    eax,DWORD PTR [ebp+0xc]
1005a49d:	and    eax,0xfffffffe
1005a4a0:	or     eax,0x2
1005a4a3:	mov    DWORD PTR [ebp+0xc],eax
1005a4a6:	mov    eax,DWORD PTR [ebp-0x4]
1005a4a9:	and    eax,0xfffffffc
1005a4ac:	or     eax,edx
1005a4ae:	mov    DWORD PTR [ebp-0x4],eax
1005a4b1:	jmp    0x1005a53a
1005a4b6:	cmp    DWORD PTR [ebp-0x8],ebx
1005a4b9:	jne    0x1005a52f
1005a4bb:	or     DWORD PTR [ebp+0xc],0x20
1005a4bf:	mov    DWORD PTR [ebp-0x8],0x1
1005a4c6:	jmp    0x1005a53a
1005a4c8:	sub    eax,0x54
1005a4cb:	je     0x1005a527
1005a4cd:	sub    eax,0xe
1005a4d0:	je     0x1005a516
1005a4d2:	dec    eax
1005a4d3:	je     0x1005a505
1005a4d5:	sub    eax,0xb
1005a4d8:	je     0x1005a4f0
1005a4da:	sub    eax,0x6
1005a4dd:	jne    0x1005a5ca
1005a4e3:	test   WORD PTR [ebp+0xc],0xc000
1005a4e9:	jne    0x1005a52f
1005a4eb:	or     DWORD PTR [ebp+0xc],edi
1005a4ee:	jmp    0x1005a53a
1005a4f0:	cmp    DWORD PTR [ebp-0xc],ebx
1005a4f3:	jne    0x1005a52f
1005a4f5:	and    DWORD PTR [ebp-0x4],0xffffbfff
1005a4fc:	mov    DWORD PTR [ebp-0xc],0x1
1005a503:	jmp    0x1005a53a
1005a505:	cmp    DWORD PTR [ebp-0xc],ebx
1005a508:	jne    0x1005a52f
1005a50a:	or     DWORD PTR [ebp-0x4],edi
1005a50d:	mov    DWORD PTR [ebp-0xc],0x1
1005a514:	jmp    0x1005a53a
1005a516:	test   WORD PTR [ebp+0xc],0xc000
1005a51c:	jne    0x1005a52f
1005a51e:	or     DWORD PTR [ebp+0xc],0x8000
1005a525:	jmp    0x1005a53a
1005a527:	test   WORD PTR [ebp+0xc],0x1000
1005a52d:	je     0x1005a533
1005a52f:	xor    ecx,ecx
1005a531:	jmp    0x1005a53a
1005a533:	or     DWORD PTR [ebp+0xc],0x1000
1005a53a:	inc    esi
1005a53b:	mov    al,BYTE PTR [esi]
1005a53d:	cmp    al,bl
1005a53f:	jne    0x1005a412
1005a545:	cmp    DWORD PTR [ebp-0x10],ebx
1005a548:	je     0x1005a5c1
1005a54a:	jmp    0x1005a54d
1005a54c:	inc    esi
1005a54d:	cmp    BYTE PTR [esi],0x20
1005a550:	je     0x1005a54c
1005a552:	push   0x4
1005a554:	push   esi
1005a555:	push   0x1006cac4
1005a55a:	call   0x1005cddf
1005a55f:	add    esp,0xc
1005a562:	test   eax,eax
1005a564:	jne    0x1005a5ca
1005a566:	add    esi,0x4
1005a569:	push   0x1006cacc
1005a56e:	push   esi
1005a56f:	call   0x1005c45a
1005a574:	test   eax,eax
1005a576:	pop    ecx
1005a577:	pop    ecx
1005a578:	jne    0x1005a586
1005a57a:	add    esi,0x5
1005a57d:	or     DWORD PTR [ebp+0xc],0x40000
1005a584:	jmp    0x1005a5c1
1005a586:	push   0x1006cad4
1005a58b:	push   esi
1005a58c:	call   0x1005c45a
1005a591:	test   eax,eax
1005a593:	pop    ecx
1005a594:	pop    ecx
1005a595:	jne    0x1005a5a3
1005a597:	add    esi,0x8
1005a59a:	or     DWORD PTR [ebp+0xc],0x20000
1005a5a1:	jmp    0x1005a5c1
1005a5a3:	push   0x1006cae0
1005a5a8:	push   esi
1005a5a9:	call   0x1005c45a
1005a5ae:	test   eax,eax
1005a5b0:	pop    ecx
1005a5b1:	pop    ecx
1005a5b2:	jne    0x1005a5ca
1005a5b4:	add    esi,0x7
1005a5b7:	or     DWORD PTR [ebp+0xc],0x10000
1005a5be:	jmp    0x1005a5c1
1005a5c0:	inc    esi
1005a5c1:	cmp    BYTE PTR [esi],0x20
1005a5c4:	je     0x1005a5c0
1005a5c6:	cmp    BYTE PTR [esi],bl
1005a5c8:	je     0x1005a5e4
1005a5ca:	call   0x10046b55
1005a5cf:	push   ebx
1005a5d0:	push   ebx
1005a5d1:	push   ebx
1005a5d2:	push   ebx
1005a5d3:	push   ebx
1005a5d4:	mov    DWORD PTR [eax],0x16
1005a5da:	call   0x1004338c
1005a5df:	add    esp,0x14
1005a5e2:	jmp    0x1005a602
1005a5e4:	push   0x180
1005a5e9:	push   DWORD PTR [ebp+0x10]
1005a5ec:	lea    eax,[ebp-0x10]
1005a5ef:	push   DWORD PTR [ebp+0xc]
1005a5f2:	push   DWORD PTR [ebp+0x8]
1005a5f5:	push   eax
1005a5f6:	call   0x1005a36b
1005a5fb:	add    esp,0x14
1005a5fe:	test   eax,eax
1005a600:	je     0x1005a606
1005a602:	xor    eax,eax
1005a604:	jmp    0x1005a626
1005a606:	mov    eax,DWORD PTR [ebp+0x14]
1005a609:	inc    DWORD PTR ds:0x1008046c
1005a60f:	mov    ecx,DWORD PTR [ebp-0x4]
1005a612:	mov    DWORD PTR [eax+0xc],ecx
1005a615:	mov    ecx,DWORD PTR [ebp-0x10]
1005a618:	mov    DWORD PTR [eax+0x4],ebx
1005a61b:	mov    DWORD PTR [eax],ebx
1005a61d:	mov    DWORD PTR [eax+0x8],ebx
1005a620:	mov    DWORD PTR [eax+0x1c],ebx
1005a623:	mov    DWORD PTR [eax+0x10],ecx
1005a626:	pop    edi
1005a627:	pop    esi
1005a628:	pop    ebx
1005a629:	leave  
1005a62a:	ret    
1005a62b:	push   0x10
1005a62d:	push   0x10074aa0
1005a632:	call   0x10046c94
1005a637:	xor    ebx,ebx
1005a639:	xor    edi,edi
1005a63b:	mov    DWORD PTR [ebp-0x1c],edi
1005a63e:	push   0x1
1005a640:	call   0x10047c9d
1005a645:	pop    ecx
1005a646:	mov    DWORD PTR [ebp-0x4],ebx
1005a649:	xor    esi,esi
1005a64b:	mov    DWORD PTR [ebp-0x20],esi
1005a64e:	cmp    esi,DWORD PTR ds:0x10082460
1005a654:	jge    0x1005a71b
1005a65a:	mov    eax,ds:0x10081440
1005a65f:	lea    eax,[eax+esi*4]
1005a662:	cmp    DWORD PTR [eax],ebx
1005a664:	je     0x1005a6b6
1005a666:	mov    eax,DWORD PTR [eax]
1005a668:	test   BYTE PTR [eax+0xc],0x83
1005a66c:	jne    0x1005a6af
1005a66e:	lea    eax,[esi-0x3]
1005a671:	cmp    eax,0x10
1005a674:	ja     0x1005a688
1005a676:	lea    eax,[esi+0x10]
1005a679:	push   eax
1005a67a:	call   0x10047bda
1005a67f:	pop    ecx
1005a680:	test   eax,eax
1005a682:	je     0x1005a71b
1005a688:	mov    eax,ds:0x10081440
1005a68d:	push   DWORD PTR [eax+esi*4]
1005a690:	push   esi
1005a691:	call   0x1004d0f7
1005a696:	pop    ecx
1005a697:	pop    ecx
1005a698:	mov    eax,ds:0x10081440
1005a69d:	mov    eax,DWORD PTR [eax+esi*4]
1005a6a0:	test   BYTE PTR [eax+0xc],0x83
1005a6a4:	je     0x1005a6b2
1005a6a6:	push   eax
1005a6a7:	push   esi
1005a6a8:	call   0x1004d149
1005a6ad:	pop    ecx
1005a6ae:	pop    ecx
1005a6af:	inc    esi
1005a6b0:	jmp    0x1005a64b
1005a6b2:	mov    edi,eax
1005a6b4:	jmp    0x1005a718
1005a6b6:	shl    esi,0x2
1005a6b9:	push   0x38
1005a6bb:	call   0x10047422
1005a6c0:	pop    ecx
1005a6c1:	mov    ecx,DWORD PTR ds:0x10081440
1005a6c7:	mov    DWORD PTR [esi+ecx*1],eax
1005a6ca:	mov    eax,ds:0x10081440
1005a6cf:	add    eax,esi
1005a6d1:	cmp    DWORD PTR [eax],ebx
1005a6d3:	je     0x1005a71b
1005a6d5:	push   0xfa0
1005a6da:	mov    eax,DWORD PTR [eax]
1005a6dc:	add    eax,0x20
1005a6df:	push   eax
1005a6e0:	call   0x1004c59b
1005a6e5:	pop    ecx
1005a6e6:	pop    ecx
1005a6e7:	test   eax,eax
1005a6e9:	mov    eax,ds:0x10081440
1005a6ee:	jne    0x1005a703
1005a6f0:	push   DWORD PTR [esi+eax*1]
1005a6f3:	call   0x10043508
1005a6f8:	pop    ecx
1005a6f9:	mov    eax,ds:0x10081440
1005a6fe:	mov    DWORD PTR [esi+eax*1],ebx
1005a701:	jmp    0x1005a71b
1005a703:	mov    eax,DWORD PTR [esi+eax*1]
1005a706:	add    eax,0x20
1005a709:	push   eax
1005a70a:	call   DWORD PTR ds:0x100660f0
1005a710:	mov    eax,ds:0x10081440
1005a715:	mov    edi,DWORD PTR [esi+eax*1]
1005a718:	mov    DWORD PTR [ebp-0x1c],edi
1005a71b:	cmp    edi,ebx
1005a71d:	je     0x1005a731
1005a71f:	mov    DWORD PTR [edi+0x4],ebx
1005a722:	mov    DWORD PTR [edi+0xc],ebx
1005a725:	mov    DWORD PTR [edi+0x8],ebx
1005a728:	mov    DWORD PTR [edi],ebx
1005a72a:	mov    DWORD PTR [edi+0x1c],ebx
1005a72d:	or     DWORD PTR [edi+0x10],0xffffffff
1005a731:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005a738:	call   0x1005a748
1005a73d:	mov    eax,edi
1005a73f:	call   0x10046cd9
1005a744:	ret    
1005a745:	mov    edi,DWORD PTR [ebp-0x1c]
1005a748:	push   0x1
1005a74a:	call   0x10047bc5
1005a74f:	pop    ecx
1005a750:	ret    
1005a751:	mov    DWORD PTR [ecx],0x1006caf0
1005a757:	jmp    0x10042fd0
1005a75c:	push   esi
1005a75d:	mov    esi,ecx
1005a75f:	mov    DWORD PTR [esi],0x1006caf0
1005a765:	call   0x10042fd0
1005a76a:	test   BYTE PTR [esp+0x8],0x1
1005a76f:	je     0x1005a778
1005a771:	push   esi
1005a772:	call   0x10042e92
1005a777:	pop    ecx
1005a778:	mov    eax,esi
1005a77a:	pop    esi
1005a77b:	ret    0x4
1005a77e:	push   esi
1005a77f:	push   edi
1005a780:	mov    edi,DWORD PTR [esp+0xc]
1005a784:	mov    eax,DWORD PTR [edi+0x4]
1005a787:	test   eax,eax
1005a789:	je     0x1005a7d4
1005a78b:	lea    edx,[eax+0x8]
1005a78e:	cmp    BYTE PTR [edx],0x0
1005a791:	je     0x1005a7d4
1005a793:	mov    esi,DWORD PTR [esp+0x10]
1005a797:	mov    ecx,DWORD PTR [esi+0x4]
1005a79a:	cmp    eax,ecx
1005a79c:	je     0x1005a7b2
1005a79e:	add    ecx,0x8
1005a7a1:	push   ecx
1005a7a2:	push   edx
1005a7a3:	call   0x10047900
1005a7a8:	test   eax,eax
1005a7aa:	pop    ecx
1005a7ab:	pop    ecx
1005a7ac:	je     0x1005a7b2
1005a7ae:	xor    eax,eax
1005a7b0:	jmp    0x1005a7d7
1005a7b2:	test   BYTE PTR [esi],0x2
1005a7b5:	je     0x1005a7bc
1005a7b7:	test   BYTE PTR [edi],0x8
1005a7ba:	je     0x1005a7ae
1005a7bc:	mov    eax,DWORD PTR [esp+0x14]
1005a7c0:	mov    eax,DWORD PTR [eax]
1005a7c2:	test   al,0x1
1005a7c4:	je     0x1005a7cb
1005a7c6:	test   BYTE PTR [edi],0x1
1005a7c9:	je     0x1005a7ae
1005a7cb:	test   al,0x2
1005a7cd:	je     0x1005a7d4
1005a7cf:	test   BYTE PTR [edi],0x2
1005a7d2:	je     0x1005a7ae
1005a7d4:	xor    eax,eax
1005a7d6:	inc    eax
1005a7d7:	pop    edi
1005a7d8:	pop    esi
1005a7d9:	ret    
1005a7da:	mov    eax,DWORD PTR [esp+0x4]
1005a7de:	mov    eax,DWORD PTR [eax]
1005a7e0:	mov    eax,DWORD PTR [eax]
1005a7e2:	cmp    eax,0xe0434f4d
1005a7e7:	je     0x1005a801
1005a7e9:	cmp    eax,0xe06d7363
1005a7ee:	jne    0x1005a81b
1005a7f0:	call   0x100470fc
1005a7f5:	and    DWORD PTR [eax+0x90],0x0
1005a7fc:	jmp    0x10046bfe
1005a801:	call   0x100470fc
1005a806:	cmp    DWORD PTR [eax+0x90],0x0
1005a80d:	jle    0x1005a81b
1005a80f:	call   0x100470fc
1005a814:	add    eax,0x90
1005a819:	dec    DWORD PTR [eax]
1005a81b:	xor    eax,eax
1005a81d:	ret    
1005a81e:	push   0x10
1005a820:	push   0x10074ac0
1005a825:	call   0x10046c94
1005a82a:	mov    edi,DWORD PTR [ebp+0x10]
1005a82d:	mov    ebx,DWORD PTR [ebp+0x8]
1005a830:	cmp    DWORD PTR [edi+0x4],0x80
1005a837:	jg     0x1005a83f
1005a839:	movsx  esi,BYTE PTR [ebx+0x8]
1005a83d:	jmp    0x1005a842
1005a83f:	mov    esi,DWORD PTR [ebx+0x8]
1005a842:	mov    DWORD PTR [ebp-0x1c],esi
1005a845:	call   0x100470fc
1005a84a:	add    eax,0x90
1005a84f:	inc    DWORD PTR [eax]
1005a851:	and    DWORD PTR [ebp-0x4],0x0
1005a855:	cmp    esi,DWORD PTR [ebp+0x14]
1005a858:	je     0x1005a8bf
1005a85a:	cmp    esi,0xffffffff
1005a85d:	jle    0x1005a864
1005a85f:	cmp    esi,DWORD PTR [edi+0x4]
1005a862:	jl     0x1005a869
1005a864:	call   0x10046c4a
1005a869:	mov    eax,esi
1005a86b:	shl    eax,0x3
1005a86e:	mov    ecx,DWORD PTR [edi+0x8]
1005a871:	add    ecx,eax
1005a873:	mov    esi,DWORD PTR [ecx]
1005a875:	mov    DWORD PTR [ebp-0x20],esi
1005a878:	mov    DWORD PTR [ebp-0x4],0x1
1005a87f:	cmp    DWORD PTR [ecx+0x4],0x0
1005a883:	je     0x1005a89a
1005a885:	mov    DWORD PTR [ebx+0x8],esi
1005a888:	push   0x103
1005a88d:	push   ebx
1005a88e:	mov    ecx,DWORD PTR [edi+0x8]
1005a891:	push   DWORD PTR [ecx+eax*1+0x4]
1005a895:	call   0x1005b3e0
1005a89a:	and    DWORD PTR [ebp-0x4],0x0
1005a89e:	jmp    0x1005a8ba
1005a8a0:	push   DWORD PTR [ebp-0x14]
1005a8a3:	call   0x1005a7da
1005a8a8:	pop    ecx
1005a8a9:	ret    
1005a8aa:	mov    esp,DWORD PTR [ebp-0x18]
1005a8ad:	and    DWORD PTR [ebp-0x4],0x0
1005a8b1:	mov    edi,DWORD PTR [ebp+0x10]
1005a8b4:	mov    ebx,DWORD PTR [ebp+0x8]
1005a8b7:	mov    esi,DWORD PTR [ebp-0x20]
1005a8ba:	mov    DWORD PTR [ebp-0x1c],esi
1005a8bd:	jmp    0x1005a855
1005a8bf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005a8c6:	call   0x1005a8e4
1005a8cb:	cmp    esi,DWORD PTR [ebp+0x14]
1005a8ce:	je     0x1005a8d5
1005a8d0:	call   0x10046c4a
1005a8d5:	mov    DWORD PTR [ebx+0x8],esi
1005a8d8:	call   0x10046cd9
1005a8dd:	ret    
1005a8de:	mov    ebx,DWORD PTR [ebp+0x8]
1005a8e1:	mov    esi,DWORD PTR [ebp-0x1c]
1005a8e4:	call   0x100470fc
1005a8e9:	cmp    DWORD PTR [eax+0x90],0x0
1005a8f0:	jle    0x1005a8fe
1005a8f2:	call   0x100470fc
1005a8f7:	add    eax,0x90
1005a8fc:	dec    DWORD PTR [eax]
1005a8fe:	ret    
1005a8ff:	mov    eax,DWORD PTR [eax]
1005a901:	cmp    DWORD PTR [eax],0xe06d7363
1005a907:	jne    0x1005a941
1005a909:	cmp    DWORD PTR [eax+0x10],0x3
1005a90d:	jne    0x1005a941
1005a90f:	mov    ecx,DWORD PTR [eax+0x14]
1005a912:	cmp    ecx,0x19930520
1005a918:	je     0x1005a92a
1005a91a:	cmp    ecx,0x19930521
1005a920:	je     0x1005a92a
1005a922:	cmp    ecx,0x19930522
1005a928:	jne    0x1005a941
1005a92a:	cmp    DWORD PTR [eax+0x1c],0x0
1005a92e:	jne    0x1005a941
1005a930:	call   0x100470fc
1005a935:	xor    ecx,ecx
1005a937:	inc    ecx
1005a938:	mov    DWORD PTR [eax+0x20c],ecx
1005a93e:	mov    eax,ecx
1005a940:	ret    
1005a941:	xor    eax,eax
1005a943:	ret    
1005a944:	push   0x8
1005a946:	push   0x10074ae8
1005a94b:	call   0x10046c94
1005a950:	mov    ecx,DWORD PTR [ebp+0x8]
1005a953:	test   ecx,ecx
1005a955:	je     0x1005a981
1005a957:	cmp    DWORD PTR [ecx],0xe06d7363
1005a95d:	jne    0x1005a981
1005a95f:	mov    eax,DWORD PTR [ecx+0x1c]
1005a962:	test   eax,eax
1005a964:	je     0x1005a981
1005a966:	mov    eax,DWORD PTR [eax+0x4]
1005a969:	test   eax,eax
1005a96b:	je     0x1005a981
1005a96d:	and    DWORD PTR [ebp-0x4],0x0
1005a971:	push   eax
1005a972:	push   DWORD PTR [ecx+0x18]
1005a975:	call   0x10059178
1005a97a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005a981:	call   0x10046cd9
1005a986:	ret    
1005a987:	xor    eax,eax
1005a989:	cmp    BYTE PTR [ebp+0xc],al
1005a98c:	setne  al
1005a98f:	ret    
1005a990:	mov    esp,DWORD PTR [ebp-0x18]
1005a993:	jmp    0x10046bfe
1005a998:	mov    ecx,DWORD PTR [esp+0x8]
1005a99c:	mov    eax,DWORD PTR [ecx]
1005a99e:	push   esi
1005a99f:	mov    esi,DWORD PTR [esp+0x8]
1005a9a3:	add    eax,esi
1005a9a5:	cmp    DWORD PTR [ecx+0x4],0x0
1005a9a9:	jl     0x1005a9bb
1005a9ab:	mov    edx,DWORD PTR [ecx+0x4]
1005a9ae:	mov    ecx,DWORD PTR [ecx+0x8]
1005a9b1:	mov    esi,DWORD PTR [edx+esi*1]
1005a9b4:	mov    ecx,DWORD PTR [esi+ecx*1]
1005a9b7:	add    ecx,edx
1005a9b9:	add    eax,ecx
1005a9bb:	pop    esi
1005a9bc:	ret    
1005a9bd:	push   ebp
1005a9be:	mov    ebp,esp
1005a9c0:	sub    esp,0xc
1005a9c3:	test   edi,edi
1005a9c5:	jne    0x1005a9d1
1005a9c7:	call   0x10046c4a
1005a9cc:	jmp    0x10046bfe
1005a9d1:	and    DWORD PTR [ebp-0x8],0x0
1005a9d5:	cmp    DWORD PTR [edi],0x0
1005a9d8:	mov    BYTE PTR [ebp-0x1],0x0
1005a9dc:	jle    0x1005aa31
1005a9de:	push   ebx
1005a9df:	push   esi
1005a9e0:	mov    eax,DWORD PTR [ebp+0x8]
1005a9e3:	mov    eax,DWORD PTR [eax+0x1c]
1005a9e6:	mov    eax,DWORD PTR [eax+0xc]
1005a9e9:	mov    ebx,DWORD PTR [eax]
1005a9eb:	test   ebx,ebx
1005a9ed:	lea    esi,[eax+0x4]
1005a9f0:	jle    0x1005aa25
1005a9f2:	mov    eax,DWORD PTR [ebp-0x8]
1005a9f5:	shl    eax,0x4
1005a9f8:	mov    DWORD PTR [ebp-0xc],eax
1005a9fb:	mov    ecx,DWORD PTR [ebp+0x8]
1005a9fe:	push   DWORD PTR [ecx+0x1c]
1005aa01:	mov    eax,DWORD PTR [esi]
1005aa03:	push   eax
1005aa04:	mov    eax,DWORD PTR [edi+0x4]
1005aa07:	add    eax,DWORD PTR [ebp-0xc]
1005aa0a:	push   eax
1005aa0b:	call   0x1005a77e
1005aa10:	add    esp,0xc
1005aa13:	test   eax,eax
1005aa15:	jne    0x1005aa21
1005aa17:	dec    ebx
1005aa18:	add    esi,0x4
1005aa1b:	test   ebx,ebx
1005aa1d:	jg     0x1005a9fb
1005aa1f:	jmp    0x1005aa25
1005aa21:	mov    BYTE PTR [ebp-0x1],0x1
1005aa25:	inc    DWORD PTR [ebp-0x8]
1005aa28:	mov    eax,DWORD PTR [ebp-0x8]
1005aa2b:	cmp    eax,DWORD PTR [edi]
1005aa2d:	jl     0x1005a9e0
1005aa2f:	pop    esi
1005aa30:	pop    ebx
1005aa31:	mov    al,BYTE PTR [ebp-0x1]
1005aa34:	leave  
1005aa35:	ret    
1005aa36:	push   0x4
1005aa38:	mov    eax,0x1005f58b
1005aa3d:	call   0x10059a68
1005aa42:	call   0x100470fc
1005aa47:	cmp    DWORD PTR [eax+0x94],0x0
1005aa4e:	je     0x1005aa55
1005aa50:	call   0x10046c4a
1005aa55:	and    DWORD PTR [ebp-0x4],0x0
1005aa59:	call   0x10046c37
1005aa5e:	or     DWORD PTR [ebp-0x4],0xffffffff
1005aa62:	jmp    0x10046bfe
1005aa67:	call   0x100470fc
1005aa6c:	mov    ecx,DWORD PTR [ebp+0x8]
1005aa6f:	push   0x0
1005aa71:	push   0x0
1005aa73:	mov    DWORD PTR [eax+0x94],ecx
1005aa79:	call   0x100479b4
1005aa7e:	int3   
1005aa7f:	push   0x2c
1005aa81:	push   0x10074b60
1005aa86:	call   0x10046c94
1005aa8b:	mov    ebx,ecx
1005aa8d:	mov    edi,DWORD PTR [ebp+0xc]
1005aa90:	mov    esi,DWORD PTR [ebp+0x8]
1005aa93:	mov    DWORD PTR [ebp-0x1c],ebx
1005aa96:	and    DWORD PTR [ebp-0x34],0x0
1005aa9a:	mov    eax,DWORD PTR [edi-0x4]
1005aa9d:	mov    DWORD PTR [ebp-0x24],eax
1005aaa0:	push   DWORD PTR [esi+0x18]
1005aaa3:	lea    eax,[ebp-0x3c]
1005aaa6:	push   eax
1005aaa7:	call   0x1005941c
1005aaac:	pop    ecx
1005aaad:	pop    ecx
1005aaae:	mov    DWORD PTR [ebp-0x28],eax
1005aab1:	call   0x100470fc
1005aab6:	mov    eax,DWORD PTR [eax+0x88]
1005aabc:	mov    DWORD PTR [ebp-0x2c],eax
1005aabf:	call   0x100470fc
1005aac4:	mov    eax,DWORD PTR [eax+0x8c]
1005aaca:	mov    DWORD PTR [ebp-0x30],eax
1005aacd:	call   0x100470fc
1005aad2:	mov    DWORD PTR [eax+0x88],esi
1005aad8:	call   0x100470fc
1005aadd:	mov    ecx,DWORD PTR [ebp+0x10]
1005aae0:	mov    DWORD PTR [eax+0x8c],ecx
1005aae6:	and    DWORD PTR [ebp-0x4],0x0
1005aaea:	xor    eax,eax
1005aaec:	inc    eax
1005aaed:	mov    DWORD PTR [ebp+0x10],eax
1005aaf0:	mov    DWORD PTR [ebp-0x4],eax
1005aaf3:	push   DWORD PTR [ebp+0x1c]
1005aaf6:	push   DWORD PTR [ebp+0x18]
1005aaf9:	push   ebx
1005aafa:	push   DWORD PTR [ebp+0x14]
1005aafd:	push   edi
1005aafe:	call   0x100594b1
1005ab03:	add    esp,0x14
1005ab06:	mov    DWORD PTR [ebp-0x1c],eax
1005ab09:	and    DWORD PTR [ebp-0x4],0x0
1005ab0d:	jmp    0x1005ab7e
1005ab0f:	mov    eax,DWORD PTR [ebp-0x14]
1005ab12:	call   0x1005a8ff
1005ab17:	ret    
1005ab18:	mov    esp,DWORD PTR [ebp-0x18]
1005ab1b:	call   0x100470fc
1005ab20:	and    DWORD PTR [eax+0x20c],0x0
1005ab27:	mov    esi,DWORD PTR [ebp+0x14]
1005ab2a:	mov    edi,DWORD PTR [ebp+0xc]
1005ab2d:	cmp    DWORD PTR [esi+0x4],0x80
1005ab34:	jg     0x1005ab3c
1005ab36:	movsx  ecx,BYTE PTR [edi+0x8]
1005ab3a:	jmp    0x1005ab3f
1005ab3c:	mov    ecx,DWORD PTR [edi+0x8]
1005ab3f:	mov    ebx,DWORD PTR [esi+0x10]
1005ab42:	and    DWORD PTR [ebp-0x20],0x0
1005ab46:	mov    eax,DWORD PTR [ebp-0x20]
1005ab49:	cmp    eax,DWORD PTR [esi+0xc]
1005ab4c:	jae    0x1005ab66
1005ab4e:	imul   eax,eax,0x14
1005ab51:	add    eax,ebx
1005ab53:	mov    edx,DWORD PTR [eax+0x4]
1005ab56:	cmp    ecx,edx
1005ab58:	jle    0x1005ab9a
1005ab5a:	cmp    ecx,DWORD PTR [eax+0x8]
1005ab5d:	jg     0x1005ab9a
1005ab5f:	mov    eax,DWORD PTR [esi+0x8]
1005ab62:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1005ab66:	push   ecx
1005ab67:	push   esi
1005ab68:	push   0x0
1005ab6a:	push   edi
1005ab6b:	call   0x1005a81e
1005ab70:	add    esp,0x10
1005ab73:	and    DWORD PTR [ebp-0x1c],0x0
1005ab77:	and    DWORD PTR [ebp-0x4],0x0
1005ab7b:	mov    esi,DWORD PTR [ebp+0x8]
1005ab7e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005ab85:	mov    DWORD PTR [ebp+0x10],0x0
1005ab8c:	call   0x1005aba5
1005ab91:	mov    eax,DWORD PTR [ebp-0x1c]
1005ab94:	call   0x10046cd9
1005ab99:	ret    
1005ab9a:	inc    DWORD PTR [ebp-0x20]
1005ab9d:	jmp    0x1005ab46
1005ab9f:	mov    edi,DWORD PTR [ebp+0xc]
1005aba2:	mov    esi,DWORD PTR [ebp+0x8]
1005aba5:	mov    eax,DWORD PTR [ebp-0x24]
1005aba8:	mov    DWORD PTR [edi-0x4],eax
1005abab:	push   DWORD PTR [ebp-0x28]
1005abae:	call   0x10059465
1005abb3:	pop    ecx
1005abb4:	call   0x100470fc
1005abb9:	mov    ecx,DWORD PTR [ebp-0x2c]
1005abbc:	mov    DWORD PTR [eax+0x88],ecx
1005abc2:	call   0x100470fc
1005abc7:	mov    ecx,DWORD PTR [ebp-0x30]
1005abca:	mov    DWORD PTR [eax+0x8c],ecx
1005abd0:	cmp    DWORD PTR [esi],0xe06d7363
1005abd6:	jne    0x1005ac1a
1005abd8:	cmp    DWORD PTR [esi+0x10],0x3
1005abdc:	jne    0x1005ac1a
1005abde:	mov    eax,DWORD PTR [esi+0x14]
1005abe1:	cmp    eax,0x19930520
1005abe6:	je     0x1005abf6
1005abe8:	cmp    eax,0x19930521
1005abed:	je     0x1005abf6
1005abef:	cmp    eax,0x19930522
1005abf4:	jne    0x1005ac1a
1005abf6:	cmp    DWORD PTR [ebp-0x34],0x0
1005abfa:	jne    0x1005ac1a
1005abfc:	cmp    DWORD PTR [ebp-0x1c],0x0
1005ac00:	je     0x1005ac1a
1005ac02:	push   DWORD PTR [esi+0x18]
1005ac05:	call   0x10059444
1005ac0a:	pop    ecx
1005ac0b:	test   eax,eax
1005ac0d:	je     0x1005ac1a
1005ac0f:	push   DWORD PTR [ebp+0x10]
1005ac12:	push   esi
1005ac13:	call   0x1005a944
1005ac18:	pop    ecx
1005ac19:	pop    ecx
1005ac1a:	ret    
1005ac1b:	push   0xc
1005ac1d:	push   0x10074b88
1005ac22:	call   0x10046c94
1005ac27:	xor    edx,edx
1005ac29:	mov    DWORD PTR [ebp-0x1c],edx
1005ac2c:	mov    eax,DWORD PTR [ebp+0x10]
1005ac2f:	mov    ecx,DWORD PTR [eax+0x4]
1005ac32:	cmp    ecx,edx
1005ac34:	je     0x1005ad92
1005ac3a:	cmp    BYTE PTR [ecx+0x8],dl
1005ac3d:	je     0x1005ad92
1005ac43:	mov    ecx,DWORD PTR [eax+0x8]
1005ac46:	cmp    ecx,edx
1005ac48:	jne    0x1005ac56
1005ac4a:	test   DWORD PTR [eax],0x80000000
1005ac50:	je     0x1005ad92
1005ac56:	mov    eax,DWORD PTR [eax]
1005ac58:	mov    esi,DWORD PTR [ebp+0xc]
1005ac5b:	test   eax,eax
1005ac5d:	js     0x1005ac63
1005ac5f:	lea    esi,[ecx+esi*1+0xc]
1005ac63:	mov    DWORD PTR [ebp-0x4],edx
1005ac66:	xor    ebx,ebx
1005ac68:	inc    ebx
1005ac69:	push   ebx
1005ac6a:	test   al,0x8
1005ac6c:	je     0x1005acaf
1005ac6e:	mov    edi,DWORD PTR [ebp+0x8]
1005ac71:	push   DWORD PTR [edi+0x18]
1005ac74:	call   0x1004f854
1005ac79:	pop    ecx
1005ac7a:	pop    ecx
1005ac7b:	test   eax,eax
1005ac7d:	je     0x1005ad75
1005ac83:	push   ebx
1005ac84:	push   esi
1005ac85:	call   0x1004f854
1005ac8a:	pop    ecx
1005ac8b:	pop    ecx
1005ac8c:	test   eax,eax
1005ac8e:	je     0x1005ad75
1005ac94:	mov    eax,DWORD PTR [edi+0x18]
1005ac97:	mov    DWORD PTR [esi],eax
1005ac99:	mov    ecx,DWORD PTR [ebp+0x14]
1005ac9c:	add    ecx,0x8
1005ac9f:	push   ecx
1005aca0:	push   eax
1005aca1:	call   0x1005a998
1005aca6:	pop    ecx
1005aca7:	pop    ecx
1005aca8:	mov    DWORD PTR [esi],eax
1005acaa:	jmp    0x1005ad7a
1005acaf:	mov    edi,DWORD PTR [ebp+0x14]
1005acb2:	mov    eax,DWORD PTR [ebp+0x8]
1005acb5:	push   DWORD PTR [eax+0x18]
1005acb8:	test   BYTE PTR [edi],bl
1005acba:	je     0x1005ad04
1005acbc:	call   0x1004f854
1005acc1:	pop    ecx
1005acc2:	pop    ecx
1005acc3:	test   eax,eax
1005acc5:	je     0x1005ad75
1005accb:	push   ebx
1005accc:	push   esi
1005accd:	call   0x1004f854
1005acd2:	pop    ecx
1005acd3:	pop    ecx
1005acd4:	test   eax,eax
1005acd6:	je     0x1005ad75
1005acdc:	push   DWORD PTR [edi+0x14]
1005acdf:	mov    eax,DWORD PTR [ebp+0x8]
1005ace2:	push   DWORD PTR [eax+0x18]
1005ace5:	push   esi
1005ace6:	call   0x100456c0
1005aceb:	add    esp,0xc
1005acee:	cmp    DWORD PTR [edi+0x14],0x4
1005acf2:	jne    0x1005ad7a
1005acf8:	mov    eax,DWORD PTR [esi]
1005acfa:	test   eax,eax
1005acfc:	je     0x1005ad7a
1005acfe:	add    edi,0x8
1005ad01:	push   edi
1005ad02:	jmp    0x1005aca0
1005ad04:	cmp    DWORD PTR [edi+0x18],edx
1005ad07:	jne    0x1005ad41
1005ad09:	call   0x1004f854
1005ad0e:	pop    ecx
1005ad0f:	pop    ecx
1005ad10:	test   eax,eax
1005ad12:	je     0x1005ad75
1005ad14:	push   ebx
1005ad15:	push   esi
1005ad16:	call   0x1004f854
1005ad1b:	pop    ecx
1005ad1c:	pop    ecx
1005ad1d:	test   eax,eax
1005ad1f:	je     0x1005ad75
1005ad21:	push   DWORD PTR [edi+0x14]
1005ad24:	add    edi,0x8
1005ad27:	push   edi
1005ad28:	mov    eax,DWORD PTR [ebp+0x8]
1005ad2b:	push   DWORD PTR [eax+0x18]
1005ad2e:	call   0x1005a998
1005ad33:	pop    ecx
1005ad34:	pop    ecx
1005ad35:	push   eax
1005ad36:	push   esi
1005ad37:	call   0x100456c0
1005ad3c:	add    esp,0xc
1005ad3f:	jmp    0x1005ad7a
1005ad41:	call   0x1004f854
1005ad46:	pop    ecx
1005ad47:	pop    ecx
1005ad48:	test   eax,eax
1005ad4a:	je     0x1005ad75
1005ad4c:	push   ebx
1005ad4d:	push   esi
1005ad4e:	call   0x1004f854
1005ad53:	pop    ecx
1005ad54:	pop    ecx
1005ad55:	test   eax,eax
1005ad57:	je     0x1005ad75
1005ad59:	push   DWORD PTR [edi+0x18]
1005ad5c:	call   0x1004f854
1005ad61:	pop    ecx
1005ad62:	test   eax,eax
1005ad64:	je     0x1005ad75
1005ad66:	test   BYTE PTR [edi],0x4
1005ad69:	push   0x0
1005ad6b:	pop    eax
1005ad6c:	setne  al
1005ad6f:	inc    eax
1005ad70:	mov    DWORD PTR [ebp-0x1c],eax
1005ad73:	jmp    0x1005ad7a
1005ad75:	call   0x10046c4a
1005ad7a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005ad81:	mov    eax,DWORD PTR [ebp-0x1c]
1005ad84:	jmp    0x1005ad94
1005ad86:	xor    eax,eax
1005ad88:	inc    eax
1005ad89:	ret    
1005ad8a:	mov    esp,DWORD PTR [ebp-0x18]
1005ad8d:	jmp    0x10046bfe
1005ad92:	xor    eax,eax
1005ad94:	call   0x10046cd9
1005ad99:	ret    
1005ad9a:	push   0x8
1005ad9c:	push   0x10074ba8
1005ada1:	call   0x10046c94
1005ada6:	mov    eax,DWORD PTR [ebp+0x10]
1005ada9:	test   DWORD PTR [eax],0x80000000
1005adaf:	je     0x1005adb6
1005adb1:	mov    ebx,DWORD PTR [ebp+0xc]
1005adb4:	jmp    0x1005adc0
1005adb6:	mov    ecx,DWORD PTR [eax+0x8]
1005adb9:	mov    edx,DWORD PTR [ebp+0xc]
1005adbc:	lea    ebx,[ecx+edx*1+0xc]
1005adc0:	and    DWORD PTR [ebp-0x4],0x0
1005adc4:	mov    esi,DWORD PTR [ebp+0x14]
1005adc7:	push   esi
1005adc8:	push   eax
1005adc9:	push   DWORD PTR [ebp+0xc]
1005adcc:	mov    edi,DWORD PTR [ebp+0x8]
1005adcf:	push   edi
1005add0:	call   0x1005ac1b
1005add5:	add    esp,0x10
1005add8:	dec    eax
1005add9:	je     0x1005adfa
1005addb:	dec    eax
1005addc:	jne    0x1005ae12
1005adde:	push   0x1
1005ade0:	lea    eax,[esi+0x8]
1005ade3:	push   eax
1005ade4:	push   DWORD PTR [edi+0x18]
1005ade7:	call   0x1005a998
1005adec:	pop    ecx
1005aded:	pop    ecx
1005adee:	push   eax
1005adef:	push   DWORD PTR [esi+0x18]
1005adf2:	push   ebx
1005adf3:	call   0x10059178
1005adf8:	jmp    0x1005ae12
1005adfa:	lea    eax,[esi+0x8]
1005adfd:	push   eax
1005adfe:	push   DWORD PTR [edi+0x18]
1005ae01:	call   0x1005a998
1005ae06:	pop    ecx
1005ae07:	pop    ecx
1005ae08:	push   eax
1005ae09:	push   DWORD PTR [esi+0x18]
1005ae0c:	push   ebx
1005ae0d:	call   0x10059178
1005ae12:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005ae19:	call   0x10046cd9
1005ae1e:	ret    
1005ae1f:	xor    eax,eax
1005ae21:	inc    eax
1005ae22:	ret    
1005ae23:	mov    esp,DWORD PTR [ebp-0x18]
1005ae26:	jmp    0x10046bfe
1005ae2b:	push   ebp
1005ae2c:	mov    ebp,esp
1005ae2e:	cmp    DWORD PTR [ebp+0x18],0x0
1005ae32:	je     0x1005ae44
1005ae34:	push   DWORD PTR [ebp+0x18]
1005ae37:	push   ebx
1005ae38:	push   esi
1005ae39:	push   DWORD PTR [ebp+0x8]
1005ae3c:	call   0x1005ad9a
1005ae41:	add    esp,0x10
1005ae44:	cmp    DWORD PTR [ebp+0x20],0x0
1005ae48:	push   DWORD PTR [ebp+0x8]
1005ae4b:	jne    0x1005ae50
1005ae4d:	push   esi
1005ae4e:	jmp    0x1005ae53
1005ae50:	push   DWORD PTR [ebp+0x20]
1005ae53:	call   0x1005917f
1005ae58:	push   DWORD PTR [edi]
1005ae5a:	push   DWORD PTR [ebp+0x14]
1005ae5d:	push   DWORD PTR [ebp+0x10]
1005ae60:	push   esi
1005ae61:	call   0x1005a81e
1005ae66:	mov    eax,DWORD PTR [edi+0x4]
1005ae69:	push   0x100
1005ae6e:	push   DWORD PTR [ebp+0x1c]
1005ae71:	inc    eax
1005ae72:	push   DWORD PTR [ebp+0x14]
1005ae75:	mov    DWORD PTR [esi+0x8],eax
1005ae78:	push   DWORD PTR [ebp+0xc]
1005ae7b:	mov    ecx,DWORD PTR [ebx+0xc]
1005ae7e:	push   esi
1005ae7f:	push   DWORD PTR [ebp+0x8]
1005ae82:	call   0x1005aa7f
1005ae87:	add    esp,0x28
1005ae8a:	test   eax,eax
1005ae8c:	je     0x1005ae95
1005ae8e:	push   esi
1005ae8f:	push   eax
1005ae90:	call   0x10059148
1005ae95:	pop    ebp
1005ae96:	ret    
1005ae97:	push   ebp
1005ae98:	mov    ebp,esp
1005ae9a:	push   ecx
1005ae9b:	push   ecx
1005ae9c:	push   esi
1005ae9d:	mov    esi,DWORD PTR [ebp+0x8]
1005aea0:	cmp    DWORD PTR [esi],0x80000003
1005aea6:	je     0x1005af86
1005aeac:	push   edi
1005aead:	call   0x100470fc
1005aeb2:	cmp    DWORD PTR [eax+0x80],0x0
1005aeb9:	je     0x1005aefa
1005aebb:	call   0x100470fc
1005aec0:	lea    edi,[eax+0x80]
1005aec6:	call   0x10046ee9
1005aecb:	cmp    DWORD PTR [edi],eax
1005aecd:	je     0x1005aefa
1005aecf:	cmp    DWORD PTR [esi],0xe0434f4d
1005aed5:	je     0x1005aefa
1005aed7:	push   DWORD PTR [ebp+0x24]
1005aeda:	push   DWORD PTR [ebp+0x20]
1005aedd:	push   DWORD PTR [ebp+0x18]
1005aee0:	push   DWORD PTR [ebp+0x14]
1005aee3:	push   DWORD PTR [ebp+0x10]
1005aee6:	push   DWORD PTR [ebp+0xc]
1005aee9:	push   esi
1005aeea:	call   0x10059237
1005aeef:	add    esp,0x1c
1005aef2:	test   eax,eax
1005aef4:	jne    0x1005af85
1005aefa:	mov    edi,DWORD PTR [ebp+0x18]
1005aefd:	cmp    DWORD PTR [edi+0xc],0x0
1005af01:	jne    0x1005af08
1005af03:	call   0x10046c4a
1005af08:	mov    esi,DWORD PTR [ebp+0x1c]
1005af0b:	lea    eax,[ebp-0x8]
1005af0e:	push   eax
1005af0f:	lea    eax,[ebp-0x4]
1005af12:	push   eax
1005af13:	push   esi
1005af14:	push   DWORD PTR [ebp+0x20]
1005af17:	push   edi
1005af18:	call   0x100593a9
1005af1d:	mov    edi,eax
1005af1f:	mov    eax,DWORD PTR [ebp-0x4]
1005af22:	add    esp,0x14
1005af25:	cmp    eax,DWORD PTR [ebp-0x8]
1005af28:	jae    0x1005af85
1005af2a:	push   ebx
1005af2b:	cmp    esi,DWORD PTR [edi]
1005af2d:	jl     0x1005af76
1005af2f:	cmp    esi,DWORD PTR [edi+0x4]
1005af32:	jg     0x1005af76
1005af34:	mov    eax,DWORD PTR [edi+0xc]
1005af37:	mov    ecx,DWORD PTR [edi+0x10]
1005af3a:	shl    eax,0x4
1005af3d:	add    eax,ecx
1005af3f:	mov    ecx,DWORD PTR [eax-0xc]
1005af42:	test   ecx,ecx
1005af44:	je     0x1005af4c
1005af46:	cmp    BYTE PTR [ecx+0x8],0x0
1005af4a:	jne    0x1005af76
1005af4c:	lea    ebx,[eax-0x10]
1005af4f:	test   BYTE PTR [ebx],0x40
1005af52:	jne    0x1005af76
1005af54:	push   DWORD PTR [ebp+0x24]
1005af57:	mov    esi,DWORD PTR [ebp+0xc]
1005af5a:	push   DWORD PTR [ebp+0x20]
1005af5d:	push   0x0
1005af5f:	push   DWORD PTR [ebp+0x18]
1005af62:	push   DWORD PTR [ebp+0x14]
1005af65:	push   DWORD PTR [ebp+0x10]
1005af68:	push   DWORD PTR [ebp+0x8]
1005af6b:	call   0x1005ae2b
1005af70:	mov    esi,DWORD PTR [ebp+0x1c]
1005af73:	add    esp,0x1c
1005af76:	inc    DWORD PTR [ebp-0x4]
1005af79:	mov    eax,DWORD PTR [ebp-0x4]
1005af7c:	add    edi,0x14
1005af7f:	cmp    eax,DWORD PTR [ebp-0x8]
1005af82:	jb     0x1005af2b
1005af84:	pop    ebx
1005af85:	pop    edi
1005af86:	pop    esi
1005af87:	leave  
1005af88:	ret    
1005af89:	push   ebp
1005af8a:	mov    ebp,esp
1005af8c:	sub    esp,0x2c
1005af8f:	mov    ecx,DWORD PTR [ebp+0xc]
1005af92:	push   ebx
1005af93:	mov    ebx,DWORD PTR [ebp+0x18]
1005af96:	mov    eax,DWORD PTR [ebx+0x4]
1005af99:	cmp    eax,0x80
1005af9e:	push   esi
1005af9f:	push   edi
1005afa0:	mov    BYTE PTR [ebp-0x1],0x0
1005afa4:	jg     0x1005afac
1005afa6:	movsx  ecx,BYTE PTR [ecx+0x8]
1005afaa:	jmp    0x1005afaf
1005afac:	mov    ecx,DWORD PTR [ecx+0x8]
1005afaf:	cmp    ecx,0xffffffff
1005afb2:	mov    DWORD PTR [ebp-0x8],ecx
1005afb5:	jl     0x1005afbb
1005afb7:	cmp    ecx,eax
1005afb9:	jl     0x1005afc0
1005afbb:	call   0x10046c4a
1005afc0:	mov    esi,DWORD PTR [ebp+0x8]
1005afc3:	mov    edi,0xe06d7363
1005afc8:	cmp    DWORD PTR [esi],edi
1005afca:	jne    0x1005b29b
1005afd0:	cmp    DWORD PTR [esi+0x10],0x3
1005afd4:	mov    ebx,0x19930520
1005afd9:	jne    0x1005b108
1005afdf:	mov    eax,DWORD PTR [esi+0x14]
1005afe2:	cmp    eax,ebx
1005afe4:	je     0x1005aff8
1005afe6:	cmp    eax,0x19930521
1005afeb:	je     0x1005aff8
1005afed:	cmp    eax,0x19930522
1005aff2:	jne    0x1005b108
1005aff8:	cmp    DWORD PTR [esi+0x1c],0x0
1005affc:	jne    0x1005b108
1005b002:	call   0x100470fc
1005b007:	cmp    DWORD PTR [eax+0x88],0x0
1005b00e:	je     0x1005b2da
1005b014:	call   0x100470fc
1005b019:	mov    esi,DWORD PTR [eax+0x88]
1005b01f:	mov    DWORD PTR [ebp+0x8],esi
1005b022:	call   0x100470fc
1005b027:	mov    eax,DWORD PTR [eax+0x8c]
1005b02d:	push   0x1
1005b02f:	push   esi
1005b030:	mov    DWORD PTR [ebp+0x10],eax
1005b033:	call   0x1004f854
1005b038:	test   eax,eax
1005b03a:	pop    ecx
1005b03b:	pop    ecx
1005b03c:	jne    0x1005b043
1005b03e:	call   0x10046c4a
1005b043:	cmp    DWORD PTR [esi],edi
1005b045:	jne    0x1005b06d
1005b047:	cmp    DWORD PTR [esi+0x10],0x3
1005b04b:	jne    0x1005b06d
1005b04d:	mov    eax,DWORD PTR [esi+0x14]
1005b050:	cmp    eax,ebx
1005b052:	je     0x1005b062
1005b054:	cmp    eax,0x19930521
1005b059:	je     0x1005b062
1005b05b:	cmp    eax,0x19930522
1005b060:	jne    0x1005b06d
1005b062:	cmp    DWORD PTR [esi+0x1c],0x0
1005b066:	jne    0x1005b06d
1005b068:	call   0x10046c4a
1005b06d:	call   0x100470fc
1005b072:	cmp    DWORD PTR [eax+0x94],0x0
1005b079:	je     0x1005b108
1005b07f:	call   0x100470fc
1005b084:	mov    edi,DWORD PTR [eax+0x94]
1005b08a:	call   0x100470fc
1005b08f:	push   DWORD PTR [ebp+0x8]
1005b092:	xor    esi,esi
1005b094:	mov    DWORD PTR [eax+0x94],esi
1005b09a:	call   0x1005a9bd
1005b09f:	test   al,al
1005b0a1:	pop    ecx
1005b0a2:	jne    0x1005b100
1005b0a4:	xor    ebx,ebx
1005b0a6:	cmp    DWORD PTR [edi],ebx
1005b0a8:	jle    0x1005b0c7
1005b0aa:	mov    eax,DWORD PTR [edi+0x4]
1005b0ad:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
1005b0b1:	push   0x1007f1b8
1005b0b6:	call   0x1004346a
1005b0bb:	test   al,al
1005b0bd:	jne    0x1005b0cc
1005b0bf:	inc    esi
1005b0c0:	add    ebx,0x10
1005b0c3:	cmp    esi,DWORD PTR [edi]
1005b0c5:	jl     0x1005b0aa
1005b0c7:	jmp    0x10046bfe
1005b0cc:	push   0x1
1005b0ce:	push   DWORD PTR [ebp+0x8]
1005b0d1:	call   0x1005a944
1005b0d6:	pop    ecx
1005b0d7:	pop    ecx
1005b0d8:	lea    eax,[ebp+0x8]
1005b0db:	push   eax
1005b0dc:	lea    ecx,[ebp-0x2c]
1005b0df:	mov    DWORD PTR [ebp+0x8],0x1006caf8
1005b0e6:	call   0x10042f12
1005b0eb:	push   0x10074bc4
1005b0f0:	lea    eax,[ebp-0x2c]
1005b0f3:	push   eax
1005b0f4:	mov    DWORD PTR [ebp-0x2c],0x1006caf0
1005b0fb:	call   0x100479b4
1005b100:	mov    esi,DWORD PTR [ebp+0x8]
1005b103:	mov    edi,0xe06d7363
1005b108:	cmp    DWORD PTR [esi],edi
1005b10a:	jne    0x1005b298
1005b110:	cmp    DWORD PTR [esi+0x10],0x3
1005b114:	jne    0x1005b298
1005b11a:	mov    eax,DWORD PTR [esi+0x14]
1005b11d:	cmp    eax,ebx
1005b11f:	je     0x1005b133
1005b121:	cmp    eax,0x19930521
1005b126:	je     0x1005b133
1005b128:	cmp    eax,0x19930522
1005b12d:	jne    0x1005b298
1005b133:	mov    edi,DWORD PTR [ebp+0x18]
1005b136:	cmp    DWORD PTR [edi+0xc],0x0
1005b13a:	jbe    0x1005b1ff
1005b140:	lea    eax,[ebp-0x1c]
1005b143:	push   eax
1005b144:	lea    eax,[ebp-0x10]
1005b147:	push   eax
1005b148:	push   DWORD PTR [ebp-0x8]
1005b14b:	push   DWORD PTR [ebp+0x20]
1005b14e:	push   edi
1005b14f:	call   0x100593a9
1005b154:	add    esp,0x14
1005b157:	mov    edi,eax
1005b159:	mov    eax,DWORD PTR [ebp-0x10]
1005b15c:	cmp    eax,DWORD PTR [ebp-0x1c]
1005b15f:	jae    0x1005b1fc
1005b165:	mov    eax,DWORD PTR [ebp-0x8]
1005b168:	cmp    DWORD PTR [edi],eax
1005b16a:	jg     0x1005b1f1
1005b170:	cmp    eax,DWORD PTR [edi+0x4]
1005b173:	jg     0x1005b1f1
1005b175:	mov    eax,DWORD PTR [edi+0x10]
1005b178:	mov    DWORD PTR [ebp-0xc],eax
1005b17b:	mov    eax,DWORD PTR [edi+0xc]
1005b17e:	test   eax,eax
1005b180:	mov    DWORD PTR [ebp-0x18],eax
1005b183:	jle    0x1005b1f1
1005b185:	mov    eax,DWORD PTR [esi+0x1c]
1005b188:	mov    eax,DWORD PTR [eax+0xc]
1005b18b:	lea    ebx,[eax+0x4]
1005b18e:	mov    eax,DWORD PTR [eax]
1005b190:	test   eax,eax
1005b192:	mov    DWORD PTR [ebp-0x14],eax
1005b195:	jle    0x1005b1ba
1005b197:	push   DWORD PTR [esi+0x1c]
1005b19a:	mov    eax,DWORD PTR [ebx]
1005b19c:	push   eax
1005b19d:	push   DWORD PTR [ebp-0xc]
1005b1a0:	mov    DWORD PTR [ebp-0x20],eax
1005b1a3:	call   0x1005a77e
1005b1a8:	add    esp,0xc
1005b1ab:	test   eax,eax
1005b1ad:	jne    0x1005b1c9
1005b1af:	dec    DWORD PTR [ebp-0x14]
1005b1b2:	add    ebx,0x4
1005b1b5:	cmp    DWORD PTR [ebp-0x14],eax
1005b1b8:	jg     0x1005b197
1005b1ba:	dec    DWORD PTR [ebp-0x18]
1005b1bd:	add    DWORD PTR [ebp-0xc],0x10
1005b1c1:	cmp    DWORD PTR [ebp-0x18],0x0
1005b1c5:	jg     0x1005b185
1005b1c7:	jmp    0x1005b1f1
1005b1c9:	push   DWORD PTR [ebp+0x24]
1005b1cc:	mov    ebx,DWORD PTR [ebp-0xc]
1005b1cf:	push   DWORD PTR [ebp+0x20]
1005b1d2:	mov    BYTE PTR [ebp-0x1],0x1
1005b1d6:	push   DWORD PTR [ebp-0x20]
1005b1d9:	push   DWORD PTR [ebp+0x18]
1005b1dc:	push   DWORD PTR [ebp+0x14]
1005b1df:	push   DWORD PTR [ebp+0x10]
1005b1e2:	push   esi
1005b1e3:	mov    esi,DWORD PTR [ebp+0xc]
1005b1e6:	call   0x1005ae2b
1005b1eb:	mov    esi,DWORD PTR [ebp+0x8]
1005b1ee:	add    esp,0x1c
1005b1f1:	inc    DWORD PTR [ebp-0x10]
1005b1f4:	add    edi,0x14
1005b1f7:	jmp    0x1005b159
1005b1fc:	mov    edi,DWORD PTR [ebp+0x18]
1005b1ff:	cmp    BYTE PTR [ebp+0x1c],0x0
1005b203:	je     0x1005b20f
1005b205:	push   0x1
1005b207:	push   esi
1005b208:	call   0x1005a944
1005b20d:	pop    ecx
1005b20e:	pop    ecx
1005b20f:	cmp    BYTE PTR [ebp-0x1],0x0
1005b213:	jne    0x1005b2c7
1005b219:	mov    eax,DWORD PTR [edi]
1005b21b:	and    eax,0x1fffffff
1005b220:	cmp    eax,0x19930521
1005b225:	jb     0x1005b2c7
1005b22b:	mov    edi,DWORD PTR [edi+0x1c]
1005b22e:	test   edi,edi
1005b230:	je     0x1005b2c7
1005b236:	push   esi
1005b237:	call   0x1005a9bd
1005b23c:	test   al,al
1005b23e:	pop    ecx
1005b23f:	jne    0x1005b2c7
1005b245:	call   0x100470fc
1005b24a:	call   0x100470fc
1005b24f:	call   0x100470fc
1005b254:	mov    DWORD PTR [eax+0x88],esi
1005b25a:	call   0x100470fc
1005b25f:	cmp    DWORD PTR [ebp+0x24],0x0
1005b263:	mov    ecx,DWORD PTR [ebp+0x10]
1005b266:	mov    DWORD PTR [eax+0x8c],ecx
1005b26c:	push   esi
1005b26d:	jne    0x1005b274
1005b26f:	push   DWORD PTR [ebp+0xc]
1005b272:	jmp    0x1005b277
1005b274:	push   DWORD PTR [ebp+0x24]
1005b277:	call   0x1005917f
1005b27c:	mov    esi,DWORD PTR [ebp+0x18]
1005b27f:	push   0xffffffff
1005b281:	push   esi
1005b282:	push   DWORD PTR [ebp+0x14]
1005b285:	push   DWORD PTR [ebp+0xc]
1005b288:	call   0x1005a81e
1005b28d:	add    esp,0x10
1005b290:	push   DWORD PTR [esi+0x1c]
1005b293:	call   0x1005aa36
1005b298:	mov    ebx,DWORD PTR [ebp+0x18]
1005b29b:	cmp    DWORD PTR [ebx+0xc],0x0
1005b29f:	jbe    0x1005b2c7
1005b2a1:	cmp    BYTE PTR [ebp+0x1c],0x0
1005b2a5:	jne    0x1005b0c7
1005b2ab:	push   DWORD PTR [ebp+0x24]
1005b2ae:	push   DWORD PTR [ebp+0x20]
1005b2b1:	push   DWORD PTR [ebp-0x8]
1005b2b4:	push   ebx
1005b2b5:	push   DWORD PTR [ebp+0x14]
1005b2b8:	push   DWORD PTR [ebp+0x10]
1005b2bb:	push   DWORD PTR [ebp+0xc]
1005b2be:	push   esi
1005b2bf:	call   0x1005ae97
1005b2c4:	add    esp,0x20
1005b2c7:	call   0x100470fc
1005b2cc:	cmp    DWORD PTR [eax+0x94],0x0
1005b2d3:	je     0x1005b2da
1005b2d5:	call   0x10046c4a
1005b2da:	pop    edi
1005b2db:	pop    esi
1005b2dc:	pop    ebx
1005b2dd:	leave  
1005b2de:	ret    
1005b2df:	push   esi
1005b2e0:	push   DWORD PTR [esp+0x8]
1005b2e4:	mov    esi,ecx
1005b2e6:	call   0x10042f78
1005b2eb:	mov    DWORD PTR [esi],0x1006caf0
1005b2f1:	mov    eax,esi
1005b2f3:	pop    esi
1005b2f4:	ret    0x4
1005b2f7:	push   ebp
1005b2f8:	mov    ebp,esp
1005b2fa:	push   ebx
1005b2fb:	push   esi
1005b2fc:	push   edi
1005b2fd:	call   0x100470fc
1005b302:	cmp    DWORD PTR [eax+0x20c],0x0
1005b309:	mov    eax,DWORD PTR [ebp+0x18]
1005b30c:	mov    ecx,DWORD PTR [ebp+0x8]
1005b30f:	mov    edi,0xe06d7363
1005b314:	mov    esi,0x1fffffff
1005b319:	mov    ebx,0x19930522
1005b31e:	jne    0x1005b340
1005b320:	mov    edx,DWORD PTR [ecx]
1005b322:	cmp    edx,edi
1005b324:	je     0x1005b340
1005b326:	cmp    edx,0x80000026
1005b32c:	je     0x1005b340
1005b32e:	mov    edx,DWORD PTR [eax]
1005b330:	and    edx,esi
1005b332:	cmp    edx,ebx
1005b334:	jb     0x1005b340
1005b336:	test   BYTE PTR [eax+0x20],0x1
1005b33a:	jne    0x1005b3d3
1005b340:	test   BYTE PTR [ecx+0x4],0x66
1005b344:	je     0x1005b369
1005b346:	cmp    DWORD PTR [eax+0x4],0x0
1005b34a:	je     0x1005b3d3
1005b350:	cmp    DWORD PTR [ebp+0x1c],0x0
1005b354:	jne    0x1005b3d3
1005b356:	push   0xffffffff
1005b358:	push   eax
1005b359:	push   DWORD PTR [ebp+0x14]
1005b35c:	push   DWORD PTR [ebp+0xc]
1005b35f:	call   0x1005a81e
1005b364:	add    esp,0x10
1005b367:	jmp    0x1005b3d3
1005b369:	cmp    DWORD PTR [eax+0xc],0x0
1005b36d:	jne    0x1005b381
1005b36f:	mov    edx,DWORD PTR [eax]
1005b371:	and    edx,esi
1005b373:	cmp    edx,0x19930521
1005b379:	jb     0x1005b3d3
1005b37b:	cmp    DWORD PTR [eax+0x1c],0x0
1005b37f:	je     0x1005b3d3
1005b381:	cmp    DWORD PTR [ecx],edi
1005b383:	jne    0x1005b3b7
1005b385:	cmp    DWORD PTR [ecx+0x10],0x3
1005b389:	jb     0x1005b3b7
1005b38b:	cmp    DWORD PTR [ecx+0x14],ebx
1005b38e:	jbe    0x1005b3b7
1005b390:	mov    edx,DWORD PTR [ecx+0x1c]
1005b393:	mov    edx,DWORD PTR [edx+0x8]
1005b396:	test   edx,edx
1005b398:	je     0x1005b3b7
1005b39a:	movzx  esi,BYTE PTR [ebp+0x24]
1005b39e:	push   esi
1005b39f:	push   DWORD PTR [ebp+0x20]
1005b3a2:	push   DWORD PTR [ebp+0x1c]
1005b3a5:	push   eax
1005b3a6:	push   DWORD PTR [ebp+0x14]
1005b3a9:	push   DWORD PTR [ebp+0x10]
1005b3ac:	push   DWORD PTR [ebp+0xc]
1005b3af:	push   ecx
1005b3b0:	call   edx
1005b3b2:	add    esp,0x20
1005b3b5:	jmp    0x1005b3d6
1005b3b7:	push   DWORD PTR [ebp+0x20]
1005b3ba:	push   DWORD PTR [ebp+0x1c]
1005b3bd:	push   DWORD PTR [ebp+0x24]
1005b3c0:	push   eax
1005b3c1:	push   DWORD PTR [ebp+0x14]
1005b3c4:	push   DWORD PTR [ebp+0x10]
1005b3c7:	push   DWORD PTR [ebp+0xc]
1005b3ca:	push   ecx
1005b3cb:	call   0x1005af89
1005b3d0:	add    esp,0x20
1005b3d3:	xor    eax,eax
1005b3d5:	inc    eax
1005b3d6:	pop    edi
1005b3d7:	pop    esi
1005b3d8:	pop    ebx
1005b3d9:	pop    ebp
1005b3da:	ret    
1005b3db:	int3   
1005b3dc:	int3   
1005b3dd:	int3   
1005b3de:	int3   
1005b3df:	int3   
1005b3e0:	push   ebp
1005b3e1:	mov    ebp,esp
1005b3e3:	sub    esp,0x4
1005b3e6:	push   ebx
1005b3e7:	push   ecx
1005b3e8:	mov    eax,DWORD PTR [ebp+0xc]
1005b3eb:	add    eax,0xc
1005b3ee:	mov    DWORD PTR [ebp-0x4],eax
1005b3f1:	mov    eax,DWORD PTR [ebp+0x8]
1005b3f4:	push   ebp
1005b3f5:	push   DWORD PTR [ebp+0x10]
1005b3f8:	mov    ecx,DWORD PTR [ebp+0x10]
1005b3fb:	mov    ebp,DWORD PTR [ebp-0x4]
1005b3fe:	call   0x1004f820
1005b403:	push   esi
1005b404:	push   edi
1005b405:	call   eax
1005b407:	pop    edi
1005b408:	pop    esi
1005b409:	mov    ebx,ebp
1005b40b:	pop    ebp
1005b40c:	mov    ecx,DWORD PTR [ebp+0x10]
1005b40f:	push   ebp
1005b410:	mov    ebp,ebx
1005b412:	cmp    ecx,0x100
1005b418:	jne    0x1005b41f
1005b41a:	mov    ecx,0x2
1005b41f:	push   ecx
1005b420:	call   0x1004f820
1005b425:	pop    ebp
1005b426:	pop    ecx
1005b427:	pop    ebx
1005b428:	leave  
1005b429:	ret    0xc
1005b42c:	push   ebp
1005b42d:	mov    ebp,esp
1005b42f:	sub    esp,0x10
1005b432:	push   esi
1005b433:	push   DWORD PTR [ebp+0xc]
1005b436:	lea    ecx,[ebp-0x10]
1005b439:	call   0x100454e5
1005b43e:	mov    esi,DWORD PTR [ebp+0x8]
1005b441:	movsx  eax,BYTE PTR [esi]
1005b444:	push   eax
1005b445:	call   0x10045dd1
1005b44a:	cmp    eax,0x65
1005b44d:	jmp    0x1005b45b
1005b44f:	inc    esi
1005b450:	movzx  eax,BYTE PTR [esi]
1005b453:	push   eax
1005b454:	call   0x1004f25f
1005b459:	test   eax,eax
1005b45b:	pop    ecx
1005b45c:	jne    0x1005b44f
1005b45e:	movsx  eax,BYTE PTR [esi]
1005b461:	push   eax
1005b462:	call   0x10045dd1
1005b467:	cmp    eax,0x78
1005b46a:	pop    ecx
1005b46b:	jne    0x1005b46f
1005b46d:	inc    esi
1005b46e:	inc    esi
1005b46f:	mov    ecx,DWORD PTR [ebp-0x10]
1005b472:	mov    ecx,DWORD PTR [ecx+0xbc]
1005b478:	mov    ecx,DWORD PTR [ecx]
1005b47a:	mov    al,BYTE PTR [esi]
1005b47c:	mov    cl,BYTE PTR [ecx]
1005b47e:	mov    BYTE PTR [esi],cl
1005b480:	inc    esi
1005b481:	mov    cl,BYTE PTR [esi]
1005b483:	mov    BYTE PTR [esi],al
1005b485:	mov    al,cl
1005b487:	mov    cl,BYTE PTR [esi]
1005b489:	inc    esi
1005b48a:	test   cl,cl
1005b48c:	jne    0x1005b481
1005b48e:	cmp    BYTE PTR [ebp-0x4],cl
1005b491:	pop    esi
1005b492:	je     0x1005b49b
1005b494:	mov    eax,DWORD PTR [ebp-0x8]
1005b497:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b49b:	leave  
1005b49c:	ret    
1005b49d:	push   ebp
1005b49e:	mov    ebp,esp
1005b4a0:	sub    esp,0x10
1005b4a3:	push   esi
1005b4a4:	push   DWORD PTR [ebp+0xc]
1005b4a7:	lea    ecx,[ebp-0x10]
1005b4aa:	call   0x100454e5
1005b4af:	mov    eax,DWORD PTR [ebp+0x8]
1005b4b2:	mov    cl,BYTE PTR [eax]
1005b4b4:	test   cl,cl
1005b4b6:	mov    esi,DWORD PTR [ebp-0x10]
1005b4b9:	je     0x1005b4d0
1005b4bb:	mov    edx,DWORD PTR [esi+0xbc]
1005b4c1:	mov    edx,DWORD PTR [edx]
1005b4c3:	mov    dl,BYTE PTR [edx]
1005b4c5:	cmp    cl,dl
1005b4c7:	je     0x1005b4d0
1005b4c9:	inc    eax
1005b4ca:	mov    cl,BYTE PTR [eax]
1005b4cc:	test   cl,cl
1005b4ce:	jne    0x1005b4c5
1005b4d0:	mov    cl,BYTE PTR [eax]
1005b4d2:	inc    eax
1005b4d3:	test   cl,cl
1005b4d5:	je     0x1005b50d
1005b4d7:	jmp    0x1005b4e4
1005b4d9:	cmp    cl,0x65
1005b4dc:	je     0x1005b4ea
1005b4de:	cmp    cl,0x45
1005b4e1:	je     0x1005b4ea
1005b4e3:	inc    eax
1005b4e4:	mov    cl,BYTE PTR [eax]
1005b4e6:	test   cl,cl
1005b4e8:	jne    0x1005b4d9
1005b4ea:	mov    edx,eax
1005b4ec:	dec    eax
1005b4ed:	cmp    BYTE PTR [eax],0x30
1005b4f0:	je     0x1005b4ec
1005b4f2:	mov    ecx,DWORD PTR [esi+0xbc]
1005b4f8:	mov    ecx,DWORD PTR [ecx]
1005b4fa:	push   ebx
1005b4fb:	mov    bl,BYTE PTR [eax]
1005b4fd:	cmp    bl,BYTE PTR [ecx]
1005b4ff:	pop    ebx
1005b500:	jne    0x1005b503
1005b502:	dec    eax
1005b503:	mov    cl,BYTE PTR [edx]
1005b505:	inc    eax
1005b506:	inc    edx
1005b507:	test   cl,cl
1005b509:	mov    BYTE PTR [eax],cl
1005b50b:	jne    0x1005b503
1005b50d:	cmp    BYTE PTR [ebp-0x4],0x0
1005b511:	pop    esi
1005b512:	je     0x1005b51b
1005b514:	mov    eax,DWORD PTR [ebp-0x8]
1005b517:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b51b:	leave  
1005b51c:	ret    
1005b51d:	fldz   
1005b51f:	mov    eax,DWORD PTR [esp+0x4]
1005b523:	fcomp  QWORD PTR [eax]
1005b525:	fnstsw ax
1005b527:	test   ah,0x41
1005b52a:	jp     0x1005b530
1005b52c:	xor    eax,eax
1005b52e:	inc    eax
1005b52f:	ret    
1005b530:	xor    eax,eax
1005b532:	ret    
1005b533:	push   ebp
1005b534:	mov    ebp,esp
1005b536:	push   ecx
1005b537:	push   ecx
1005b538:	cmp    DWORD PTR [ebp+0x8],0x0
1005b53c:	push   DWORD PTR [ebp+0x14]
1005b53f:	push   DWORD PTR [ebp+0x10]
1005b542:	je     0x1005b55d
1005b544:	lea    eax,[ebp-0x8]
1005b547:	push   eax
1005b548:	call   0x1005cdf6
1005b54d:	mov    ecx,DWORD PTR [ebp-0x8]
1005b550:	mov    eax,DWORD PTR [ebp+0xc]
1005b553:	mov    DWORD PTR [eax],ecx
1005b555:	mov    ecx,DWORD PTR [ebp-0x4]
1005b558:	mov    DWORD PTR [eax+0x4],ecx
1005b55b:	jmp    0x1005b56e
1005b55d:	lea    eax,[ebp+0x8]
1005b560:	push   eax
1005b561:	call   0x1005ce9c
1005b566:	mov    eax,DWORD PTR [ebp+0xc]
1005b569:	mov    ecx,DWORD PTR [ebp+0x8]
1005b56c:	mov    DWORD PTR [eax],ecx
1005b56e:	add    esp,0xc
1005b571:	leave  
1005b572:	ret    
1005b573:	push   0x0
1005b575:	push   DWORD PTR [esp+0x10]
1005b579:	push   DWORD PTR [esp+0x10]
1005b57d:	push   DWORD PTR [esp+0x10]
1005b581:	call   0x1005b533
1005b586:	add    esp,0x10
1005b589:	ret    
1005b58a:	test   edi,edi
1005b58c:	push   esi
1005b58d:	mov    esi,eax
1005b58f:	je     0x1005b5a5
1005b591:	push   esi
1005b592:	call   0x10043010
1005b597:	inc    eax
1005b598:	push   eax
1005b599:	push   esi
1005b59a:	add    esi,edi
1005b59c:	push   esi
1005b59d:	call   0x100456c0
1005b5a2:	add    esp,0x10
1005b5a5:	pop    esi
1005b5a6:	ret    
1005b5a7:	push   0x0
1005b5a9:	push   DWORD PTR [esp+0x8]
1005b5ad:	call   0x1005b42c
1005b5b2:	pop    ecx
1005b5b3:	pop    ecx
1005b5b4:	ret    
1005b5b5:	push   0x0
1005b5b7:	push   DWORD PTR [esp+0x8]
1005b5bb:	call   0x1005b49d
1005b5c0:	pop    ecx
1005b5c1:	pop    ecx
1005b5c2:	ret    
1005b5c3:	push   ebp
1005b5c4:	mov    ebp,esp
1005b5c6:	sub    esp,0x10
1005b5c9:	push   ebx
1005b5ca:	push   esi
1005b5cb:	push   edi
1005b5cc:	push   DWORD PTR [ebp+0x1c]
1005b5cf:	lea    ecx,[ebp-0x10]
1005b5d2:	mov    ebx,eax
1005b5d4:	call   0x100454e5
1005b5d9:	xor    esi,esi
1005b5db:	cmp    ebx,esi
1005b5dd:	jne    0x1005b60a
1005b5df:	call   0x10046b55
1005b5e4:	push   0x16
1005b5e6:	pop    edi
1005b5e7:	push   esi
1005b5e8:	push   esi
1005b5e9:	push   esi
1005b5ea:	push   esi
1005b5eb:	push   esi
1005b5ec:	mov    DWORD PTR [eax],edi
1005b5ee:	call   0x1004338c
1005b5f3:	add    esp,0x14
1005b5f6:	cmp    BYTE PTR [ebp-0x4],0x0
1005b5fa:	je     0x1005b603
1005b5fc:	mov    eax,DWORD PTR [ebp-0x8]
1005b5ff:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b603:	mov    eax,edi
1005b605:	jmp    0x1005b72b
1005b60a:	cmp    DWORD PTR [ebp+0x8],esi
1005b60d:	jbe    0x1005b5df
1005b60f:	cmp    DWORD PTR [ebp+0xc],esi
1005b612:	jle    0x1005b619
1005b614:	mov    eax,DWORD PTR [ebp+0xc]
1005b617:	jmp    0x1005b61b
1005b619:	xor    eax,eax
1005b61b:	add    eax,0x9
1005b61e:	cmp    DWORD PTR [ebp+0x8],eax
1005b621:	ja     0x1005b62c
1005b623:	call   0x10046b55
1005b628:	push   0x22
1005b62a:	jmp    0x1005b5e6
1005b62c:	cmp    BYTE PTR [ebp+0x18],0x0
1005b630:	je     0x1005b650
1005b632:	mov    edx,DWORD PTR [ebp+0x14]
1005b635:	xor    eax,eax
1005b637:	cmp    DWORD PTR [ebp+0xc],esi
1005b63a:	setg   al
1005b63d:	xor    ecx,ecx
1005b63f:	cmp    DWORD PTR [edx],0x2d
1005b642:	sete   cl
1005b645:	mov    edi,eax
1005b647:	add    ecx,ebx
1005b649:	mov    eax,ecx
1005b64b:	call   0x1005b58a
1005b650:	mov    edi,DWORD PTR [ebp+0x14]
1005b653:	cmp    DWORD PTR [edi],0x2d
1005b656:	mov    esi,ebx
1005b658:	jne    0x1005b660
1005b65a:	mov    BYTE PTR [ebx],0x2d
1005b65d:	lea    esi,[ebx+0x1]
1005b660:	cmp    DWORD PTR [ebp+0xc],0x0
1005b664:	jle    0x1005b67e
1005b666:	lea    eax,[esi+0x1]
1005b669:	mov    cl,BYTE PTR [eax]
1005b66b:	mov    BYTE PTR [esi],cl
1005b66d:	mov    esi,eax
1005b66f:	mov    eax,DWORD PTR [ebp-0x10]
1005b672:	mov    eax,DWORD PTR [eax+0xbc]
1005b678:	mov    eax,DWORD PTR [eax]
1005b67a:	mov    al,BYTE PTR [eax]
1005b67c:	mov    BYTE PTR [esi],al
1005b67e:	xor    eax,eax
1005b680:	cmp    BYTE PTR [ebp+0x18],al
1005b683:	sete   al
1005b686:	add    eax,DWORD PTR [ebp+0xc]
1005b689:	add    esi,eax
1005b68b:	cmp    DWORD PTR [ebp+0x8],0xffffffff
1005b68f:	jne    0x1005b696
1005b691:	or     ebx,0xffffffff
1005b694:	jmp    0x1005b69b
1005b696:	sub    ebx,esi
1005b698:	add    ebx,DWORD PTR [ebp+0x8]
1005b69b:	push   0x1006cb08
1005b6a0:	push   ebx
1005b6a1:	push   esi
1005b6a2:	call   0x10046b99
1005b6a7:	add    esp,0xc
1005b6aa:	xor    ebx,ebx
1005b6ac:	test   eax,eax
1005b6ae:	je     0x1005b6bd
1005b6b0:	push   ebx
1005b6b1:	push   ebx
1005b6b2:	push   ebx
1005b6b3:	push   ebx
1005b6b4:	push   ebx
1005b6b5:	call   0x10043290
1005b6ba:	add    esp,0x14
1005b6bd:	cmp    DWORD PTR [ebp+0x10],ebx
1005b6c0:	lea    ecx,[esi+0x2]
1005b6c3:	je     0x1005b6c8
1005b6c5:	mov    BYTE PTR [esi],0x45
1005b6c8:	mov    eax,DWORD PTR [edi+0xc]
1005b6cb:	inc    esi
1005b6cc:	cmp    BYTE PTR [eax],0x30
1005b6cf:	je     0x1005b6ff
1005b6d1:	mov    eax,DWORD PTR [edi+0x4]
1005b6d4:	dec    eax
1005b6d5:	jns    0x1005b6dc
1005b6d7:	neg    eax
1005b6d9:	mov    BYTE PTR [esi],0x2d
1005b6dc:	inc    esi
1005b6dd:	cmp    eax,0x64
1005b6e0:	jl     0x1005b6ec
1005b6e2:	cdq    
1005b6e3:	push   0x64
1005b6e5:	pop    edi
1005b6e6:	idiv   edi
1005b6e8:	add    BYTE PTR [esi],al
1005b6ea:	mov    eax,edx
1005b6ec:	inc    esi
1005b6ed:	cmp    eax,0xa
1005b6f0:	jl     0x1005b6fc
1005b6f2:	cdq    
1005b6f3:	push   0xa
1005b6f5:	pop    edi
1005b6f6:	idiv   edi
1005b6f8:	add    BYTE PTR [esi],al
1005b6fa:	mov    eax,edx
1005b6fc:	add    BYTE PTR [esi+0x1],al
1005b6ff:	test   BYTE PTR ds:0x10080bf8,0x1
1005b706:	je     0x1005b71c
1005b708:	cmp    BYTE PTR [ecx],0x30
1005b70b:	jne    0x1005b71c
1005b70d:	push   0x3
1005b70f:	lea    eax,[ecx+0x1]
1005b712:	push   eax
1005b713:	push   ecx
1005b714:	call   0x100456c0
1005b719:	add    esp,0xc
1005b71c:	cmp    BYTE PTR [ebp-0x4],0x0
1005b720:	je     0x1005b729
1005b722:	mov    eax,DWORD PTR [ebp-0x8]
1005b725:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b729:	xor    eax,eax
1005b72b:	pop    edi
1005b72c:	pop    esi
1005b72d:	pop    ebx
1005b72e:	leave  
1005b72f:	ret    
1005b730:	push   ebp
1005b731:	mov    ebp,esp
1005b733:	sub    esp,0x2c
1005b736:	mov    eax,ds:0x1007e030
1005b73b:	xor    eax,ebp
1005b73d:	mov    DWORD PTR [ebp-0x4],eax
1005b740:	mov    eax,DWORD PTR [ebp+0x8]
1005b743:	push   ebx
1005b744:	push   esi
1005b745:	push   edi
1005b746:	mov    edi,DWORD PTR [ebp+0xc]
1005b749:	push   0x16
1005b74b:	pop    esi
1005b74c:	push   esi
1005b74d:	lea    ecx,[ebp-0x1c]
1005b750:	push   ecx
1005b751:	lea    ecx,[ebp-0x2c]
1005b754:	push   ecx
1005b755:	push   DWORD PTR [eax+0x4]
1005b758:	push   DWORD PTR [eax]
1005b75a:	call   0x1005d0ba
1005b75f:	xor    ebx,ebx
1005b761:	add    esp,0x14
1005b764:	cmp    edi,ebx
1005b766:	jne    0x1005b780
1005b768:	call   0x10046b55
1005b76d:	push   ebx
1005b76e:	push   ebx
1005b76f:	push   ebx
1005b770:	push   ebx
1005b771:	push   ebx
1005b772:	mov    DWORD PTR [eax],esi
1005b774:	call   0x1004338c
1005b779:	add    esp,0x14
1005b77c:	mov    eax,esi
1005b77e:	jmp    0x1005b7ef
1005b780:	mov    eax,DWORD PTR [ebp+0x10]
1005b783:	cmp    eax,ebx
1005b785:	jbe    0x1005b768
1005b787:	cmp    eax,0xffffffff
1005b78a:	mov    esi,DWORD PTR [ebp+0x14]
1005b78d:	jne    0x1005b794
1005b78f:	or     eax,0xffffffff
1005b792:	jmp    0x1005b7a8
1005b794:	xor    ecx,ecx
1005b796:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005b79a:	sete   cl
1005b79d:	sub    eax,ecx
1005b79f:	xor    ecx,ecx
1005b7a1:	cmp    esi,ebx
1005b7a3:	setg   cl
1005b7a6:	sub    eax,ecx
1005b7a8:	lea    ecx,[ebp-0x2c]
1005b7ab:	push   ecx
1005b7ac:	lea    ecx,[esi+0x1]
1005b7af:	push   ecx
1005b7b0:	push   eax
1005b7b1:	xor    eax,eax
1005b7b3:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005b7b7:	sete   al
1005b7ba:	xor    ecx,ecx
1005b7bc:	cmp    esi,ebx
1005b7be:	setg   cl
1005b7c1:	add    eax,edi
1005b7c3:	add    ecx,eax
1005b7c5:	push   ecx
1005b7c6:	call   0x1005cf42
1005b7cb:	add    esp,0x10
1005b7ce:	cmp    eax,ebx
1005b7d0:	je     0x1005b7d6
1005b7d2:	mov    BYTE PTR [edi],bl
1005b7d4:	jmp    0x1005b7ef
1005b7d6:	push   DWORD PTR [ebp+0x1c]
1005b7d9:	lea    eax,[ebp-0x2c]
1005b7dc:	push   ebx
1005b7dd:	push   eax
1005b7de:	push   DWORD PTR [ebp+0x18]
1005b7e1:	mov    eax,edi
1005b7e3:	push   esi
1005b7e4:	push   DWORD PTR [ebp+0x10]
1005b7e7:	call   0x1005b5c3
1005b7ec:	add    esp,0x18
1005b7ef:	mov    ecx,DWORD PTR [ebp-0x4]
1005b7f2:	pop    edi
1005b7f3:	pop    esi
1005b7f4:	xor    ecx,ebp
1005b7f6:	pop    ebx
1005b7f7:	call   0x10042e97
1005b7fc:	leave  
1005b7fd:	ret    
1005b7fe:	push   ebp
1005b7ff:	mov    ebp,esp
1005b801:	push   0x0
1005b803:	push   DWORD PTR [ebp+0x18]
1005b806:	push   DWORD PTR [ebp+0x14]
1005b809:	push   DWORD PTR [ebp+0x10]
1005b80c:	push   DWORD PTR [ebp+0xc]
1005b80f:	push   DWORD PTR [ebp+0x8]
1005b812:	call   0x1005b730
1005b817:	add    esp,0x18
1005b81a:	pop    ebp
1005b81b:	ret    
1005b81c:	push   ebp
1005b81d:	mov    ebp,esp
1005b81f:	sub    esp,0x24
1005b822:	push   esi
1005b823:	push   edi
1005b824:	push   DWORD PTR [ebp+0x1c]
1005b827:	lea    ecx,[ebp-0x24]
1005b82a:	mov    DWORD PTR [ebp-0x14],0x3ff
1005b831:	xor    edi,edi
1005b833:	mov    DWORD PTR [ebp-0x4],0x30
1005b83a:	call   0x100454e5
1005b83f:	cmp    DWORD PTR [ebp+0x14],edi
1005b842:	jge    0x1005b847
1005b844:	mov    DWORD PTR [ebp+0x14],edi
1005b847:	mov    esi,DWORD PTR [ebp+0xc]
1005b84a:	cmp    esi,edi
1005b84c:	jne    0x1005b879
1005b84e:	call   0x10046b55
1005b853:	push   0x16
1005b855:	pop    esi
1005b856:	push   edi
1005b857:	push   edi
1005b858:	push   edi
1005b859:	push   edi
1005b85a:	push   edi
1005b85b:	mov    DWORD PTR [eax],esi
1005b85d:	call   0x1004338c
1005b862:	add    esp,0x14
1005b865:	cmp    BYTE PTR [ebp-0x18],0x0
1005b869:	je     0x1005b872
1005b86b:	mov    eax,DWORD PTR [ebp-0x1c]
1005b86e:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b872:	mov    eax,esi
1005b874:	jmp    0x1005bb89
1005b879:	cmp    DWORD PTR [ebp+0x10],edi
1005b87c:	jbe    0x1005b84e
1005b87e:	mov    eax,DWORD PTR [ebp+0x14]
1005b881:	add    eax,0xb
1005b884:	cmp    DWORD PTR [ebp+0x10],eax
1005b887:	mov    BYTE PTR [esi],0x0
1005b88a:	ja     0x1005b895
1005b88c:	call   0x10046b55
1005b891:	push   0x22
1005b893:	jmp    0x1005b855
1005b895:	mov    edi,DWORD PTR [ebp+0x8]
1005b898:	mov    eax,DWORD PTR [edi]
1005b89a:	mov    DWORD PTR [ebp-0xc],eax
1005b89d:	mov    eax,DWORD PTR [edi+0x4]
1005b8a0:	mov    ecx,eax
1005b8a2:	shr    ecx,0x14
1005b8a5:	mov    edx,0x7ff
1005b8aa:	push   ebx
1005b8ab:	and    ecx,edx
1005b8ad:	xor    ebx,ebx
1005b8af:	cmp    ecx,edx
1005b8b1:	jne    0x1005b947
1005b8b7:	test   ebx,ebx
1005b8b9:	jne    0x1005b947
1005b8bf:	mov    eax,DWORD PTR [ebp+0x10]
1005b8c2:	cmp    eax,0xffffffff
1005b8c5:	jne    0x1005b8cb
1005b8c7:	or     eax,eax
1005b8c9:	jmp    0x1005b8ce
1005b8cb:	add    eax,0xfffffffe
1005b8ce:	push   0x0
1005b8d0:	push   DWORD PTR [ebp+0x14]
1005b8d3:	lea    ebx,[esi+0x2]
1005b8d6:	push   eax
1005b8d7:	push   ebx
1005b8d8:	push   edi
1005b8d9:	call   0x1005b7fe
1005b8de:	add    esp,0x14
1005b8e1:	test   eax,eax
1005b8e3:	je     0x1005b8fe
1005b8e5:	cmp    BYTE PTR [ebp-0x18],0x0
1005b8e9:	mov    BYTE PTR [esi],0x0
1005b8ec:	je     0x1005bb88
1005b8f2:	mov    ecx,DWORD PTR [ebp-0x1c]
1005b8f5:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005b8f9:	jmp    0x1005bb88
1005b8fe:	cmp    BYTE PTR [ebx],0x2d
1005b901:	jne    0x1005b907
1005b903:	mov    BYTE PTR [esi],0x2d
1005b906:	inc    esi
1005b907:	mov    BYTE PTR [esi],0x30
1005b90a:	inc    esi
1005b90b:	cmp    DWORD PTR [ebp+0x18],0x0
1005b90f:	push   0x65
1005b911:	sete   al
1005b914:	dec    al
1005b916:	and    al,0xe0
1005b918:	add    al,0x78
1005b91a:	mov    BYTE PTR [esi],al
1005b91c:	inc    esi
1005b91d:	push   esi
1005b91e:	call   0x10059900
1005b923:	test   eax,eax
1005b925:	pop    ecx
1005b926:	pop    ecx
1005b927:	je     0x1005bb79
1005b92d:	cmp    DWORD PTR [ebp+0x18],0x0
1005b931:	sete   cl
1005b934:	dec    cl
1005b936:	and    cl,0xe0
1005b939:	add    cl,0x70
1005b93c:	mov    BYTE PTR [eax],cl
1005b93e:	mov    BYTE PTR [eax+0x3],0x0
1005b942:	jmp    0x1005bb79
1005b947:	and    eax,0x80000000
1005b94c:	xor    ecx,ecx
1005b94e:	or     ecx,eax
1005b950:	je     0x1005b956
1005b952:	mov    BYTE PTR [esi],0x2d
1005b955:	inc    esi
1005b956:	mov    ebx,DWORD PTR [ebp+0x18]
1005b959:	mov    BYTE PTR [esi],0x30
1005b95c:	inc    esi
1005b95d:	test   ebx,ebx
1005b95f:	sete   al
1005b962:	dec    al
1005b964:	and    al,0xe0
1005b966:	add    al,0x78
1005b968:	mov    BYTE PTR [esi],al
1005b96a:	mov    ecx,DWORD PTR [edi+0x4]
1005b96d:	inc    esi
1005b96e:	neg    ebx
1005b970:	sbb    ebx,ebx
1005b972:	and    ebx,0xffffffe0
1005b975:	and    ecx,0x7ff00000
1005b97b:	xor    eax,eax
1005b97d:	add    ebx,0x27
1005b980:	xor    edx,edx
1005b982:	or     eax,ecx
1005b984:	jne    0x1005b9a7
1005b986:	mov    BYTE PTR [esi],0x30
1005b989:	mov    ecx,DWORD PTR [edi+0x4]
1005b98c:	mov    eax,DWORD PTR [edi]
1005b98e:	and    ecx,0xfffff
1005b994:	inc    esi
1005b995:	or     eax,ecx
1005b997:	jne    0x1005b99e
1005b999:	mov    DWORD PTR [ebp-0x14],edx
1005b99c:	jmp    0x1005b9ab
1005b99e:	mov    DWORD PTR [ebp-0x14],0x3fe
1005b9a5:	jmp    0x1005b9ab
1005b9a7:	mov    BYTE PTR [esi],0x31
1005b9aa:	inc    esi
1005b9ab:	mov    eax,esi
1005b9ad:	inc    esi
1005b9ae:	cmp    DWORD PTR [ebp+0x14],edx
1005b9b1:	mov    DWORD PTR [ebp+0xc],eax
1005b9b4:	jne    0x1005b9ba
1005b9b6:	mov    BYTE PTR [eax],dl
1005b9b8:	jmp    0x1005b9c9
1005b9ba:	mov    ecx,DWORD PTR [ebp-0x24]
1005b9bd:	mov    ecx,DWORD PTR [ecx+0xbc]
1005b9c3:	mov    ecx,DWORD PTR [ecx]
1005b9c5:	mov    cl,BYTE PTR [ecx]
1005b9c7:	mov    BYTE PTR [eax],cl
1005b9c9:	mov    ecx,DWORD PTR [edi+0x4]
1005b9cc:	mov    eax,DWORD PTR [edi]
1005b9ce:	and    ecx,0xfffff
1005b9d4:	mov    DWORD PTR [ebp-0x8],ecx
1005b9d7:	ja     0x1005b9e1
1005b9d9:	cmp    eax,edx
1005b9db:	jbe    0x1005ba96
1005b9e1:	mov    DWORD PTR [ebp-0xc],edx
1005b9e4:	mov    DWORD PTR [ebp-0x8],0xf0000
1005b9eb:	cmp    DWORD PTR [ebp+0x14],0x0
1005b9ef:	jle    0x1005ba3e
1005b9f1:	mov    edx,DWORD PTR [edi+0x4]
1005b9f4:	and    edx,DWORD PTR [ebp-0x8]
1005b9f7:	mov    eax,DWORD PTR [edi]
1005b9f9:	movsx  ecx,WORD PTR [ebp-0x4]
1005b9fd:	and    eax,DWORD PTR [ebp-0xc]
1005ba00:	and    edx,0xfffff
1005ba06:	call   0x1005d230
1005ba0b:	add    ax,0x30
1005ba0f:	movzx  eax,ax
1005ba12:	cmp    ax,0x39
1005ba16:	jbe    0x1005ba1a
1005ba18:	add    eax,ebx
1005ba1a:	mov    ecx,DWORD PTR [ebp-0x8]
1005ba1d:	sub    DWORD PTR [ebp-0x4],0x4
1005ba21:	mov    BYTE PTR [esi],al
1005ba23:	mov    eax,DWORD PTR [ebp-0xc]
1005ba26:	shrd   eax,ecx,0x4
1005ba2a:	shr    ecx,0x4
1005ba2d:	inc    esi
1005ba2e:	dec    DWORD PTR [ebp+0x14]
1005ba31:	cmp    WORD PTR [ebp-0x4],0x0
1005ba36:	mov    DWORD PTR [ebp-0xc],eax
1005ba39:	mov    DWORD PTR [ebp-0x8],ecx
1005ba3c:	jge    0x1005b9eb
1005ba3e:	cmp    WORD PTR [ebp-0x4],0x0
1005ba43:	jl     0x1005ba96
1005ba45:	mov    edx,DWORD PTR [edi+0x4]
1005ba48:	and    edx,DWORD PTR [ebp-0x8]
1005ba4b:	mov    eax,DWORD PTR [edi]
1005ba4d:	movsx  ecx,WORD PTR [ebp-0x4]
1005ba51:	and    eax,DWORD PTR [ebp-0xc]
1005ba54:	and    edx,0xfffff
1005ba5a:	call   0x1005d230
1005ba5f:	cmp    ax,0x8
1005ba63:	jbe    0x1005ba96
1005ba65:	lea    eax,[esi-0x1]
1005ba68:	mov    cl,BYTE PTR [eax]
1005ba6a:	cmp    cl,0x66
1005ba6d:	je     0x1005ba74
1005ba6f:	cmp    cl,0x46
1005ba72:	jne    0x1005ba7a
1005ba74:	mov    BYTE PTR [eax],0x30
1005ba77:	dec    eax
1005ba78:	jmp    0x1005ba68
1005ba7a:	cmp    eax,DWORD PTR [ebp+0xc]
1005ba7d:	je     0x1005ba93
1005ba7f:	mov    cl,BYTE PTR [eax]
1005ba81:	cmp    cl,0x39
1005ba84:	jne    0x1005ba8d
1005ba86:	add    bl,0x3a
1005ba89:	mov    BYTE PTR [eax],bl
1005ba8b:	jmp    0x1005ba96
1005ba8d:	inc    cl
1005ba8f:	mov    BYTE PTR [eax],cl
1005ba91:	jmp    0x1005ba96
1005ba93:	inc    BYTE PTR [eax-0x1]
1005ba96:	cmp    DWORD PTR [ebp+0x14],0x0
1005ba9a:	jle    0x1005baad
1005ba9c:	push   DWORD PTR [ebp+0x14]
1005ba9f:	push   0x30
1005baa1:	push   esi
1005baa2:	call   0x10045c00
1005baa7:	add    esp,0xc
1005baaa:	add    esi,DWORD PTR [ebp+0x14]
1005baad:	mov    eax,DWORD PTR [ebp+0xc]
1005bab0:	cmp    BYTE PTR [eax],0x0
1005bab3:	jne    0x1005bab7
1005bab5:	mov    esi,eax
1005bab7:	cmp    DWORD PTR [ebp+0x18],0x0
1005babb:	mov    cl,0x34
1005babd:	sete   al
1005bac0:	dec    al
1005bac2:	and    al,0xe0
1005bac4:	add    al,0x70
1005bac6:	mov    BYTE PTR [esi],al
1005bac8:	mov    eax,DWORD PTR [edi]
1005baca:	mov    edx,DWORD PTR [edi+0x4]
1005bacd:	inc    esi
1005bace:	call   0x1005d230
1005bad3:	xor    ebx,ebx
1005bad5:	and    eax,0x7ff
1005bada:	and    edx,ebx
1005badc:	sub    eax,DWORD PTR [ebp-0x14]
1005badf:	push   ebx
1005bae0:	pop    ecx
1005bae1:	sbb    edx,ecx
1005bae3:	js     0x1005baf1
1005bae5:	jg     0x1005baeb
1005bae7:	cmp    eax,ebx
1005bae9:	jb     0x1005baf1
1005baeb:	mov    BYTE PTR [esi],0x2b
1005baee:	inc    esi
1005baef:	jmp    0x1005bafb
1005baf1:	mov    BYTE PTR [esi],0x2d
1005baf4:	inc    esi
1005baf5:	neg    eax
1005baf7:	adc    edx,ebx
1005baf9:	neg    edx
1005bafb:	cmp    edx,ebx
1005bafd:	mov    edi,esi
1005baff:	mov    BYTE PTR [esi],0x30
1005bb02:	jl     0x1005bb28
1005bb04:	mov    ecx,0x3e8
1005bb09:	jg     0x1005bb0f
1005bb0b:	cmp    eax,ecx
1005bb0d:	jb     0x1005bb28
1005bb0f:	push   ebx
1005bb10:	push   ecx
1005bb11:	push   edx
1005bb12:	push   eax
1005bb13:	call   0x1005d150
1005bb18:	add    al,0x30
1005bb1a:	mov    BYTE PTR [esi],al
1005bb1c:	inc    esi
1005bb1d:	cmp    esi,edi
1005bb1f:	mov    DWORD PTR [ebp-0x10],edx
1005bb22:	mov    eax,ecx
1005bb24:	mov    edx,ebx
1005bb26:	jne    0x1005bb33
1005bb28:	test   edx,edx
1005bb2a:	jl     0x1005bb4a
1005bb2c:	jg     0x1005bb33
1005bb2e:	cmp    eax,0x64
1005bb31:	jb     0x1005bb4a
1005bb33:	push   0x0
1005bb35:	push   0x64
1005bb37:	push   edx
1005bb38:	push   eax
1005bb39:	call   0x1005d150
1005bb3e:	add    al,0x30
1005bb40:	mov    BYTE PTR [esi],al
1005bb42:	mov    DWORD PTR [ebp-0x10],edx
1005bb45:	inc    esi
1005bb46:	mov    eax,ecx
1005bb48:	mov    edx,ebx
1005bb4a:	cmp    esi,edi
1005bb4c:	jne    0x1005bb59
1005bb4e:	test   edx,edx
1005bb50:	jl     0x1005bb71
1005bb52:	jg     0x1005bb59
1005bb54:	cmp    eax,0xa
1005bb57:	jb     0x1005bb71
1005bb59:	push   0x0
1005bb5b:	push   0xa
1005bb5d:	push   edx
1005bb5e:	push   eax
1005bb5f:	call   0x1005d150
1005bb64:	add    al,0x30
1005bb66:	mov    BYTE PTR [esi],al
1005bb68:	mov    DWORD PTR [ebp-0x10],edx
1005bb6b:	inc    esi
1005bb6c:	mov    eax,ecx
1005bb6e:	mov    DWORD PTR [ebp-0x10],ebx
1005bb71:	add    al,0x30
1005bb73:	mov    BYTE PTR [esi],al
1005bb75:	mov    BYTE PTR [esi+0x1],0x0
1005bb79:	cmp    BYTE PTR [ebp-0x18],0x0
1005bb7d:	je     0x1005bb86
1005bb7f:	mov    eax,DWORD PTR [ebp-0x1c]
1005bb82:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bb86:	xor    eax,eax
1005bb88:	pop    ebx
1005bb89:	pop    edi
1005bb8a:	pop    esi
1005bb8b:	leave  
1005bb8c:	ret    
1005bb8d:	push   ebp
1005bb8e:	mov    ebp,esp
1005bb90:	sub    esp,0x10
1005bb93:	push   ebx
1005bb94:	push   esi
1005bb95:	push   edi
1005bb96:	push   DWORD PTR [ebp+0x14]
1005bb99:	mov    ebx,eax
1005bb9b:	mov    esi,DWORD PTR [ebx+0x4]
1005bb9e:	mov    edi,ecx
1005bba0:	lea    ecx,[ebp-0x10]
1005bba3:	dec    esi
1005bba4:	call   0x100454e5
1005bba9:	test   edi,edi
1005bbab:	jne    0x1005bbda
1005bbad:	call   0x10046b55
1005bbb2:	push   0x16
1005bbb4:	pop    esi
1005bbb5:	mov    DWORD PTR [eax],esi
1005bbb7:	xor    eax,eax
1005bbb9:	push   eax
1005bbba:	push   eax
1005bbbb:	push   eax
1005bbbc:	push   eax
1005bbbd:	push   eax
1005bbbe:	call   0x1004338c
1005bbc3:	add    esp,0x14
1005bbc6:	cmp    BYTE PTR [ebp-0x4],0x0
1005bbca:	je     0x1005bbd3
1005bbcc:	mov    eax,DWORD PTR [ebp-0x8]
1005bbcf:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bbd3:	mov    eax,esi
1005bbd5:	jmp    0x1005bc7d
1005bbda:	cmp    DWORD PTR [ebp+0x8],0x0
1005bbde:	jbe    0x1005bbad
1005bbe0:	cmp    BYTE PTR [ebp+0x10],0x0
1005bbe4:	je     0x1005bbfe
1005bbe6:	cmp    esi,DWORD PTR [ebp+0xc]
1005bbe9:	jne    0x1005bbfe
1005bbeb:	xor    eax,eax
1005bbed:	cmp    DWORD PTR [ebx],0x2d
1005bbf0:	sete   al
1005bbf3:	add    eax,esi
1005bbf5:	add    eax,edi
1005bbf7:	mov    BYTE PTR [eax],0x30
1005bbfa:	mov    BYTE PTR [eax+0x1],0x0
1005bbfe:	cmp    DWORD PTR [ebx],0x2d
1005bc01:	mov    esi,edi
1005bc03:	jne    0x1005bc0b
1005bc05:	mov    BYTE PTR [edi],0x2d
1005bc08:	lea    esi,[edi+0x1]
1005bc0b:	mov    eax,DWORD PTR [ebx+0x4]
1005bc0e:	xor    edi,edi
1005bc10:	inc    edi
1005bc11:	test   eax,eax
1005bc13:	jg     0x1005bc22
1005bc15:	mov    eax,esi
1005bc17:	call   0x1005b58a
1005bc1c:	mov    BYTE PTR [esi],0x30
1005bc1f:	inc    esi
1005bc20:	jmp    0x1005bc24
1005bc22:	add    esi,eax
1005bc24:	cmp    DWORD PTR [ebp+0xc],0x0
1005bc28:	jle    0x1005bc6e
1005bc2a:	mov    eax,esi
1005bc2c:	call   0x1005b58a
1005bc31:	mov    eax,DWORD PTR [ebp-0x10]
1005bc34:	mov    eax,DWORD PTR [eax+0xbc]
1005bc3a:	mov    eax,DWORD PTR [eax]
1005bc3c:	mov    al,BYTE PTR [eax]
1005bc3e:	mov    BYTE PTR [esi],al
1005bc40:	mov    ebx,DWORD PTR [ebx+0x4]
1005bc43:	inc    esi
1005bc44:	test   ebx,ebx
1005bc46:	jge    0x1005bc6e
1005bc48:	neg    ebx
1005bc4a:	cmp    BYTE PTR [ebp+0x10],0x0
1005bc4e:	jne    0x1005bc55
1005bc50:	cmp    DWORD PTR [ebp+0xc],ebx
1005bc53:	jl     0x1005bc58
1005bc55:	mov    DWORD PTR [ebp+0xc],ebx
1005bc58:	mov    edi,DWORD PTR [ebp+0xc]
1005bc5b:	mov    eax,esi
1005bc5d:	call   0x1005b58a
1005bc62:	push   edi
1005bc63:	push   0x30
1005bc65:	push   esi
1005bc66:	call   0x10045c00
1005bc6b:	add    esp,0xc
1005bc6e:	cmp    BYTE PTR [ebp-0x4],0x0
1005bc72:	je     0x1005bc7b
1005bc74:	mov    eax,DWORD PTR [ebp-0x8]
1005bc77:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bc7b:	xor    eax,eax
1005bc7d:	pop    edi
1005bc7e:	pop    esi
1005bc7f:	pop    ebx
1005bc80:	leave  
1005bc81:	ret    
1005bc82:	push   ebp
1005bc83:	mov    ebp,esp
1005bc85:	sub    esp,0x2c
1005bc88:	mov    eax,ds:0x1007e030
1005bc8d:	xor    eax,ebp
1005bc8f:	mov    DWORD PTR [ebp-0x4],eax
1005bc92:	mov    eax,DWORD PTR [ebp+0x8]
1005bc95:	push   ebx
1005bc96:	push   esi
1005bc97:	push   edi
1005bc98:	mov    edi,DWORD PTR [ebp+0xc]
1005bc9b:	push   0x16
1005bc9d:	pop    esi
1005bc9e:	push   esi
1005bc9f:	lea    ecx,[ebp-0x1c]
1005bca2:	push   ecx
1005bca3:	lea    ecx,[ebp-0x2c]
1005bca6:	push   ecx
1005bca7:	push   DWORD PTR [eax+0x4]
1005bcaa:	push   DWORD PTR [eax]
1005bcac:	call   0x1005d0ba
1005bcb1:	xor    ebx,ebx
1005bcb3:	add    esp,0x14
1005bcb6:	cmp    edi,ebx
1005bcb8:	jne    0x1005bcd2
1005bcba:	call   0x10046b55
1005bcbf:	push   ebx
1005bcc0:	push   ebx
1005bcc1:	push   ebx
1005bcc2:	push   ebx
1005bcc3:	push   ebx
1005bcc4:	mov    DWORD PTR [eax],esi
1005bcc6:	call   0x1004338c
1005bccb:	add    esp,0x14
1005bcce:	mov    eax,esi
1005bcd0:	jmp    0x1005bd2c
1005bcd2:	mov    eax,DWORD PTR [ebp+0x10]
1005bcd5:	cmp    eax,ebx
1005bcd7:	jbe    0x1005bcba
1005bcd9:	cmp    eax,0xffffffff
1005bcdc:	jne    0x1005bce2
1005bcde:	or     eax,eax
1005bce0:	jmp    0x1005bced
1005bce2:	xor    ecx,ecx
1005bce4:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005bce8:	sete   cl
1005bceb:	sub    eax,ecx
1005bced:	mov    esi,DWORD PTR [ebp+0x14]
1005bcf0:	lea    ecx,[ebp-0x2c]
1005bcf3:	push   ecx
1005bcf4:	mov    ecx,DWORD PTR [ebp-0x28]
1005bcf7:	add    ecx,esi
1005bcf9:	push   ecx
1005bcfa:	push   eax
1005bcfb:	xor    eax,eax
1005bcfd:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005bd01:	sete   al
1005bd04:	add    eax,edi
1005bd06:	push   eax
1005bd07:	call   0x1005cf42
1005bd0c:	add    esp,0x10
1005bd0f:	cmp    eax,ebx
1005bd11:	je     0x1005bd17
1005bd13:	mov    BYTE PTR [edi],bl
1005bd15:	jmp    0x1005bd2c
1005bd17:	push   DWORD PTR [ebp+0x18]
1005bd1a:	lea    eax,[ebp-0x2c]
1005bd1d:	push   ebx
1005bd1e:	push   esi
1005bd1f:	push   DWORD PTR [ebp+0x10]
1005bd22:	mov    ecx,edi
1005bd24:	call   0x1005bb8d
1005bd29:	add    esp,0x10
1005bd2c:	mov    ecx,DWORD PTR [ebp-0x4]
1005bd2f:	pop    edi
1005bd30:	pop    esi
1005bd31:	xor    ecx,ebp
1005bd33:	pop    ebx
1005bd34:	call   0x10042e97
1005bd39:	leave  
1005bd3a:	ret    
1005bd3b:	push   ebp
1005bd3c:	mov    ebp,esp
1005bd3e:	sub    esp,0x30
1005bd41:	mov    eax,ds:0x1007e030
1005bd46:	xor    eax,ebp
1005bd48:	mov    DWORD PTR [ebp-0x4],eax
1005bd4b:	mov    eax,DWORD PTR [ebp+0x8]
1005bd4e:	push   ebx
1005bd4f:	push   esi
1005bd50:	mov    esi,DWORD PTR [ebp+0xc]
1005bd53:	push   edi
1005bd54:	push   0x16
1005bd56:	pop    edi
1005bd57:	push   edi
1005bd58:	lea    ecx,[ebp-0x1c]
1005bd5b:	push   ecx
1005bd5c:	lea    ecx,[ebp-0x30]
1005bd5f:	push   ecx
1005bd60:	push   DWORD PTR [eax+0x4]
1005bd63:	push   DWORD PTR [eax]
1005bd65:	call   0x1005d0ba
1005bd6a:	xor    ebx,ebx
1005bd6c:	add    esp,0x14
1005bd6f:	cmp    esi,ebx
1005bd71:	jne    0x1005bd8e
1005bd73:	call   0x10046b55
1005bd78:	push   ebx
1005bd79:	push   ebx
1005bd7a:	push   ebx
1005bd7b:	push   ebx
1005bd7c:	push   ebx
1005bd7d:	mov    DWORD PTR [eax],edi
1005bd7f:	call   0x1004338c
1005bd84:	add    esp,0x14
1005bd87:	mov    eax,edi
1005bd89:	jmp    0x1005be24
1005bd8e:	mov    ecx,DWORD PTR [ebp+0x10]
1005bd91:	cmp    ecx,ebx
1005bd93:	jbe    0x1005bd73
1005bd95:	mov    eax,DWORD PTR [ebp-0x2c]
1005bd98:	dec    eax
1005bd99:	mov    DWORD PTR [ebp-0x20],eax
1005bd9c:	xor    eax,eax
1005bd9e:	cmp    DWORD PTR [ebp-0x30],0x2d
1005bda2:	sete   al
1005bda5:	cmp    ecx,0xffffffff
1005bda8:	lea    edi,[eax+esi*1]
1005bdab:	jne    0x1005bdb1
1005bdad:	or     ecx,ecx
1005bdaf:	jmp    0x1005bdb3
1005bdb1:	sub    ecx,eax
1005bdb3:	lea    eax,[ebp-0x30]
1005bdb6:	push   eax
1005bdb7:	push   DWORD PTR [ebp+0x14]
1005bdba:	push   ecx
1005bdbb:	push   edi
1005bdbc:	call   0x1005cf42
1005bdc1:	add    esp,0x10
1005bdc4:	cmp    eax,ebx
1005bdc6:	je     0x1005bdcc
1005bdc8:	mov    BYTE PTR [esi],bl
1005bdca:	jmp    0x1005be24
1005bdcc:	mov    eax,DWORD PTR [ebp-0x2c]
1005bdcf:	dec    eax
1005bdd0:	cmp    DWORD PTR [ebp-0x20],eax
1005bdd3:	setl   cl
1005bdd6:	cmp    eax,0xfffffffc
1005bdd9:	jl     0x1005be08
1005bddb:	cmp    eax,DWORD PTR [ebp+0x14]
1005bdde:	jge    0x1005be08
1005bde0:	cmp    cl,bl
1005bde2:	je     0x1005bdee
1005bde4:	mov    al,BYTE PTR [edi]
1005bde6:	inc    edi
1005bde7:	test   al,al
1005bde9:	jne    0x1005bde4
1005bdeb:	mov    BYTE PTR [edi-0x2],bl
1005bdee:	push   DWORD PTR [ebp+0x1c]
1005bdf1:	lea    eax,[ebp-0x30]
1005bdf4:	push   0x1
1005bdf6:	push   DWORD PTR [ebp+0x14]
1005bdf9:	mov    ecx,esi
1005bdfb:	push   DWORD PTR [ebp+0x10]
1005bdfe:	call   0x1005bb8d
1005be03:	add    esp,0x10
1005be06:	jmp    0x1005be24
1005be08:	push   DWORD PTR [ebp+0x1c]
1005be0b:	lea    eax,[ebp-0x30]
1005be0e:	push   0x1
1005be10:	push   eax
1005be11:	push   DWORD PTR [ebp+0x18]
1005be14:	mov    eax,esi
1005be16:	push   DWORD PTR [ebp+0x14]
1005be19:	push   DWORD PTR [ebp+0x10]
1005be1c:	call   0x1005b5c3
1005be21:	add    esp,0x18
1005be24:	mov    ecx,DWORD PTR [ebp-0x4]
1005be27:	pop    edi
1005be28:	pop    esi
1005be29:	xor    ecx,ebp
1005be2b:	pop    ebx
1005be2c:	call   0x10042e97
1005be31:	leave  
1005be32:	ret    
1005be33:	push   ebp
1005be34:	mov    ebp,esp
1005be36:	mov    eax,DWORD PTR [ebp+0x14]
1005be39:	cmp    eax,0x65
1005be3c:	je     0x1005be9d
1005be3e:	cmp    eax,0x45
1005be41:	je     0x1005be9d
1005be43:	cmp    eax,0x66
1005be46:	jne    0x1005be61
1005be48:	push   DWORD PTR [ebp+0x20]
1005be4b:	push   DWORD PTR [ebp+0x18]
1005be4e:	push   DWORD PTR [ebp+0x10]
1005be51:	push   DWORD PTR [ebp+0xc]
1005be54:	push   DWORD PTR [ebp+0x8]
1005be57:	call   0x1005bc82
1005be5c:	add    esp,0x14
1005be5f:	pop    ebp
1005be60:	ret    
1005be61:	cmp    eax,0x61
1005be64:	je     0x1005be84
1005be66:	cmp    eax,0x41
1005be69:	je     0x1005be84
1005be6b:	push   DWORD PTR [ebp+0x20]
1005be6e:	push   DWORD PTR [ebp+0x1c]
1005be71:	push   DWORD PTR [ebp+0x18]
1005be74:	push   DWORD PTR [ebp+0x10]
1005be77:	push   DWORD PTR [ebp+0xc]
1005be7a:	push   DWORD PTR [ebp+0x8]
1005be7d:	call   0x1005bd3b
1005be82:	jmp    0x1005beb4
1005be84:	push   DWORD PTR [ebp+0x20]
1005be87:	push   DWORD PTR [ebp+0x1c]
1005be8a:	push   DWORD PTR [ebp+0x18]
1005be8d:	push   DWORD PTR [ebp+0x10]
1005be90:	push   DWORD PTR [ebp+0xc]
1005be93:	push   DWORD PTR [ebp+0x8]
1005be96:	call   0x1005b81c
1005be9b:	jmp    0x1005beb4
1005be9d:	push   DWORD PTR [ebp+0x20]
1005bea0:	push   DWORD PTR [ebp+0x1c]
1005bea3:	push   DWORD PTR [ebp+0x18]
1005bea6:	push   DWORD PTR [ebp+0x10]
1005bea9:	push   DWORD PTR [ebp+0xc]
1005beac:	push   DWORD PTR [ebp+0x8]
1005beaf:	call   0x1005b730
1005beb4:	add    esp,0x18
1005beb7:	pop    ebp
1005beb8:	ret    
1005beb9:	push   ebp
1005beba:	mov    ebp,esp
1005bebc:	push   0x0
1005bebe:	push   DWORD PTR [ebp+0x1c]
1005bec1:	push   DWORD PTR [ebp+0x18]
1005bec4:	push   DWORD PTR [ebp+0x14]
1005bec7:	push   DWORD PTR [ebp+0x10]
1005beca:	push   DWORD PTR [ebp+0xc]
1005becd:	push   DWORD PTR [ebp+0x8]
1005bed0:	call   0x1005be33
1005bed5:	add    esp,0x1c
1005bed8:	pop    ebp
1005bed9:	ret    
1005beda:	push   esi
1005bedb:	push   0x30000
1005bee0:	push   0x10000
1005bee5:	xor    esi,esi
1005bee7:	push   esi
1005bee8:	call   0x1005d24f
1005beed:	add    esp,0xc
1005bef0:	test   eax,eax
1005bef2:	je     0x1005bf01
1005bef4:	push   esi
1005bef5:	push   esi
1005bef6:	push   esi
1005bef7:	push   esi
1005bef8:	push   esi
1005bef9:	call   0x10043290
1005befe:	add    esp,0x14
1005bf01:	pop    esi
1005bf02:	ret    
1005bf03:	push   ebp
1005bf04:	mov    ebp,esp
1005bf06:	sub    esp,0x18
1005bf09:	fld    QWORD PTR ds:0x1006cb18
1005bf0f:	fstp   QWORD PTR [ebp-0x10]
1005bf12:	fld    QWORD PTR ds:0x1006cb10
1005bf18:	fstp   QWORD PTR [ebp-0x18]
1005bf1b:	fld    QWORD PTR [ebp-0x18]
1005bf1e:	fdiv   QWORD PTR [ebp-0x10]
1005bf21:	fmul   QWORD PTR [ebp-0x10]
1005bf24:	fsubr  QWORD PTR [ebp-0x18]
1005bf27:	fstp   QWORD PTR [ebp-0x8]
1005bf2a:	fld1   
1005bf2c:	fcomp  QWORD PTR [ebp-0x8]
1005bf2f:	fnstsw ax
1005bf31:	test   ah,0x5
1005bf34:	jp     0x1005bf3b
1005bf36:	xor    eax,eax
1005bf38:	inc    eax
1005bf39:	leave  
1005bf3a:	ret    
1005bf3b:	xor    eax,eax
1005bf3d:	leave  
1005bf3e:	ret    
1005bf3f:	push   0x1006cb3c
1005bf44:	call   DWORD PTR ds:0x10066198
1005bf4a:	test   eax,eax
1005bf4c:	je     0x1005bf63
1005bf4e:	push   0x1006cb20
1005bf53:	push   eax
1005bf54:	call   DWORD PTR ds:0x1006612c
1005bf5a:	test   eax,eax
1005bf5c:	je     0x1005bf63
1005bf5e:	push   0x0
1005bf60:	call   eax
1005bf62:	ret    
1005bf63:	jmp    0x1005bf03
1005bf68:	push   esi
1005bf69:	mov    esi,DWORD PTR [esp+0x8]
1005bf6d:	push   edi
1005bf6e:	xor    edi,edi
1005bf70:	cmp    esi,edi
1005bf72:	jne    0x1005bf91
1005bf74:	call   0x10046b55
1005bf79:	push   edi
1005bf7a:	push   edi
1005bf7b:	push   edi
1005bf7c:	push   edi
1005bf7d:	push   edi
1005bf7e:	mov    DWORD PTR [eax],0x16
1005bf84:	call   0x1004338c
1005bf89:	add    esp,0x14
1005bf8c:	jmp    0x1005c082
1005bf91:	mov    eax,DWORD PTR [esi+0xc]
1005bf94:	test   al,0x83
1005bf96:	je     0x1005c082
1005bf9c:	test   al,0x40
1005bf9e:	jne    0x1005c082
1005bfa4:	test   al,0x2
1005bfa6:	je     0x1005bfb3
1005bfa8:	or     eax,0x20
1005bfab:	mov    DWORD PTR [esi+0xc],eax
1005bfae:	jmp    0x1005c082
1005bfb3:	or     eax,0x1
1005bfb6:	test   ax,0x10c
1005bfba:	mov    DWORD PTR [esi+0xc],eax
1005bfbd:	jne    0x1005bfc8
1005bfbf:	push   esi
1005bfc0:	call   0x1004cf4f
1005bfc5:	pop    ecx
1005bfc6:	jmp    0x1005bfcd
1005bfc8:	mov    eax,DWORD PTR [esi+0x8]
1005bfcb:	mov    DWORD PTR [esi],eax
1005bfcd:	push   DWORD PTR [esi+0x18]
1005bfd0:	push   DWORD PTR [esi+0x8]
1005bfd3:	push   esi
1005bfd4:	call   0x1004d16c
1005bfd9:	pop    ecx
1005bfda:	push   eax
1005bfdb:	call   0x10058a9c
1005bfe0:	add    esp,0xc
1005bfe3:	cmp    eax,edi
1005bfe5:	mov    DWORD PTR [esi+0x4],eax
1005bfe8:	je     0x1005c072
1005bfee:	cmp    eax,0xffffffff
1005bff1:	je     0x1005c072
1005bff3:	test   BYTE PTR [esi+0xc],0x82
1005bff7:	jne    0x1005c048
1005bff9:	push   esi
1005bffa:	call   0x1004d16c
1005bfff:	cmp    eax,0xffffffff
1005c002:	pop    ecx
1005c003:	je     0x1005c033
1005c005:	push   esi
1005c006:	call   0x1004d16c
1005c00b:	cmp    eax,0xfffffffe
1005c00e:	pop    ecx
1005c00f:	je     0x1005c033
1005c011:	push   esi
1005c012:	call   0x1004d16c
1005c017:	sar    eax,0x5
1005c01a:	push   esi
1005c01b:	lea    edi,[eax*4+0x10082480]
1005c022:	call   0x1004d16c
1005c027:	and    eax,0x1f
1005c02a:	imul   eax,eax,0x28
1005c02d:	add    eax,DWORD PTR [edi]
1005c02f:	pop    ecx
1005c030:	pop    ecx
1005c031:	jmp    0x1005c038
1005c033:	mov    eax,0x1007e9d0
1005c038:	mov    al,BYTE PTR [eax+0x4]
1005c03b:	and    al,0x82
1005c03d:	cmp    al,0x82
1005c03f:	jne    0x1005c048
1005c041:	or     DWORD PTR [esi+0xc],0x2000
1005c048:	cmp    DWORD PTR [esi+0x18],0x200
1005c04f:	jne    0x1005c065
1005c051:	mov    eax,DWORD PTR [esi+0xc]
1005c054:	test   al,0x8
1005c056:	je     0x1005c065
1005c058:	test   ax,0x400
1005c05c:	jne    0x1005c065
1005c05e:	mov    DWORD PTR [esi+0x18],0x1000
1005c065:	mov    ecx,DWORD PTR [esi]
1005c067:	dec    DWORD PTR [esi+0x4]
1005c06a:	movzx  eax,BYTE PTR [ecx]
1005c06d:	inc    ecx
1005c06e:	mov    DWORD PTR [esi],ecx
1005c070:	jmp    0x1005c085
1005c072:	neg    eax
1005c074:	sbb    eax,eax
1005c076:	and    eax,0x10
1005c079:	add    eax,0x10
1005c07c:	or     DWORD PTR [esi+0xc],eax
1005c07f:	mov    DWORD PTR [esi+0x4],edi
1005c082:	or     eax,0xffffffff
1005c085:	pop    edi
1005c086:	pop    esi
1005c087:	ret    
1005c088:	push   ebp
1005c089:	mov    ebp,esp
1005c08b:	mov    eax,DWORD PTR [ebp+0x8]
1005c08e:	test   eax,eax
1005c090:	jne    0x1005c097
1005c092:	xor    eax,eax
1005c094:	inc    eax
1005c095:	pop    ebp
1005c096:	ret    
1005c097:	add    al,0x40
1005c099:	mov    BYTE PTR [ebp+0x8],al
1005c09c:	lea    eax,[ebp+0x8]
1005c09f:	push   eax
1005c0a0:	mov    BYTE PTR [ebp+0x9],0x3a
1005c0a4:	mov    BYTE PTR [ebp+0xa],0x5c
1005c0a8:	mov    BYTE PTR [ebp+0xb],0x0
1005c0ac:	call   DWORD PTR ds:0x10066054
1005c0b2:	test   eax,eax
1005c0b4:	je     0x1005c0bb
1005c0b6:	cmp    eax,0x1
1005c0b9:	jne    0x1005c092
1005c0bb:	xor    eax,eax
1005c0bd:	pop    ebp
1005c0be:	ret    
1005c0bf:	push   ebp
1005c0c0:	mov    ebp,esp
1005c0c2:	push   ecx
1005c0c3:	push   ecx
1005c0c4:	push   ebx
1005c0c5:	xor    ebx,ebx
1005c0c7:	cmp    DWORD PTR [ebp+0x8],ebx
1005c0ca:	je     0x1005c103
1005c0cc:	push   DWORD PTR [ebp+0x8]
1005c0cf:	call   0x1005c088
1005c0d4:	test   eax,eax
1005c0d6:	pop    ecx
1005c0d7:	jne    0x1005c10a
1005c0d9:	call   0x10046b68
1005c0de:	mov    DWORD PTR [eax],0xf
1005c0e4:	call   0x10046b55
1005c0e9:	push   ebx
1005c0ea:	push   ebx
1005c0eb:	push   ebx
1005c0ec:	push   ebx
1005c0ed:	push   ebx
1005c0ee:	mov    DWORD PTR [eax],0xd
1005c0f4:	call   0x1004338c
1005c0f9:	add    esp,0x14
1005c0fc:	xor    eax,eax
1005c0fe:	jmp    0x1005c1f1
1005c103:	call   0x1005c46d
1005c108:	jmp    0x1005c10d
1005c10a:	mov    eax,DWORD PTR [ebp+0x8]
1005c10d:	push   edi
1005c10e:	mov    edi,DWORD PTR [ebp+0xc]
1005c111:	cmp    edi,ebx
1005c113:	je     0x1005c142
1005c115:	mov    ecx,DWORD PTR [ebp+0x10]
1005c118:	cmp    ecx,ebx
1005c11a:	jg     0x1005c13b
1005c11c:	call   0x10046b55
1005c121:	push   ebx
1005c122:	push   ebx
1005c123:	push   ebx
1005c124:	push   ebx
1005c125:	push   ebx
1005c126:	mov    DWORD PTR [eax],0x16
1005c12c:	call   0x1004338c
1005c131:	add    esp,0x14
1005c134:	xor    eax,eax
1005c136:	jmp    0x1005c1f0
1005c13b:	mov    DWORD PTR [ebp+0x8],ecx
1005c13e:	mov    BYTE PTR [edi],bl
1005c140:	jmp    0x1005c145
1005c142:	mov    DWORD PTR [ebp+0x8],ebx
1005c145:	cmp    eax,ebx
1005c147:	je     0x1005c15b
1005c149:	add    al,0x40
1005c14b:	mov    BYTE PTR [ebp-0x4],al
1005c14e:	mov    BYTE PTR [ebp-0x3],0x3a
1005c152:	mov    BYTE PTR [ebp-0x2],0x2e
1005c156:	mov    BYTE PTR [ebp-0x1],bl
1005c159:	jmp    0x1005c162
1005c15b:	mov    BYTE PTR [ebp-0x4],0x2e
1005c15f:	mov    BYTE PTR [ebp-0x3],bl
1005c162:	push   esi
1005c163:	mov    esi,DWORD PTR ds:0x10066058
1005c169:	lea    eax,[ebp-0x8]
1005c16c:	push   eax
1005c16d:	push   edi
1005c16e:	push   DWORD PTR [ebp+0x8]
1005c171:	lea    eax,[ebp-0x4]
1005c174:	push   eax
1005c175:	call   esi
1005c177:	cmp    eax,ebx
1005c179:	je     0x1005c1e0
1005c17b:	cmp    edi,ebx
1005c17d:	je     0x1005c193
1005c17f:	cmp    eax,DWORD PTR [ebp+0x8]
1005c182:	jl     0x1005c1dc
1005c184:	call   0x10046b55
1005c189:	mov    DWORD PTR [eax],0x22
1005c18f:	mov    BYTE PTR [edi],bl
1005c191:	jmp    0x1005c1ed
1005c193:	cmp    eax,DWORD PTR [ebp+0x10]
1005c196:	jle    0x1005c19b
1005c198:	mov    DWORD PTR [ebp+0x10],eax
1005c19b:	push   0x1
1005c19d:	push   DWORD PTR [ebp+0x10]
1005c1a0:	call   0x100436b4
1005c1a5:	mov    edi,eax
1005c1a7:	cmp    edi,ebx
1005c1a9:	pop    ecx
1005c1aa:	pop    ecx
1005c1ab:	jne    0x1005c1c5
1005c1ad:	call   0x10046b55
1005c1b2:	mov    DWORD PTR [eax],0xc
1005c1b8:	call   0x10046b68
1005c1bd:	mov    DWORD PTR [eax],0x8
1005c1c3:	jmp    0x1005c1ed
1005c1c5:	lea    eax,[ebp-0x8]
1005c1c8:	push   eax
1005c1c9:	push   edi
1005c1ca:	push   DWORD PTR [ebp+0x10]
1005c1cd:	lea    eax,[ebp-0x4]
1005c1d0:	push   eax
1005c1d1:	call   esi
1005c1d3:	cmp    eax,ebx
1005c1d5:	je     0x1005c1e0
1005c1d7:	cmp    eax,DWORD PTR [ebp+0x10]
1005c1da:	jge    0x1005c1e0
1005c1dc:	mov    eax,edi
1005c1de:	jmp    0x1005c1ef
1005c1e0:	call   DWORD PTR ds:0x100660cc
1005c1e6:	push   eax
1005c1e7:	call   0x10046b7b
1005c1ec:	pop    ecx
1005c1ed:	xor    eax,eax
1005c1ef:	pop    esi
1005c1f0:	pop    edi
1005c1f1:	pop    ebx
1005c1f2:	leave  
1005c1f3:	ret    
1005c1f4:	push   0xc
1005c1f6:	push   0x10074c00
1005c1fb:	call   0x10046c94
1005c200:	push   0x7
1005c202:	call   0x10047c9d
1005c207:	pop    ecx
1005c208:	and    DWORD PTR [ebp-0x4],0x0
1005c20c:	push   DWORD PTR [ebp+0xc]
1005c20f:	push   DWORD PTR [ebp+0x8]
1005c212:	push   0x0
1005c214:	call   0x1005c0bf
1005c219:	add    esp,0xc
1005c21c:	mov    DWORD PTR [ebp-0x1c],eax
1005c21f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005c226:	call   0x1005c234
1005c22b:	mov    eax,DWORD PTR [ebp-0x1c]
1005c22e:	call   0x10046cd9
1005c233:	ret    
1005c234:	push   0x7
1005c236:	call   0x10047bc5
1005c23b:	pop    ecx
1005c23c:	ret    
1005c23d:	int3   
1005c23e:	int3   
1005c23f:	int3   
1005c240:	push   ebp
1005c241:	mov    ebp,esp
1005c243:	sub    esp,0x14
1005c246:	push   esi
1005c247:	push   DWORD PTR [ebp+0x10]
1005c24a:	lea    ecx,[ebp-0x14]
1005c24d:	call   0x100454e5
1005c252:	mov    edx,DWORD PTR [ebp+0x8]
1005c255:	xor    esi,esi
1005c257:	cmp    edx,esi
1005c259:	jne    0x1005c28a
1005c25b:	call   0x10046b55
1005c260:	push   esi
1005c261:	push   esi
1005c262:	push   esi
1005c263:	push   esi
1005c264:	push   esi
1005c265:	mov    DWORD PTR [eax],0x16
1005c26b:	call   0x1004338c
1005c270:	add    esp,0x14
1005c273:	cmp    BYTE PTR [ebp-0x8],0x0
1005c277:	je     0x1005c280
1005c279:	mov    eax,DWORD PTR [ebp-0xc]
1005c27c:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c280:	mov    eax,0x7fffffff
1005c285:	jmp    0x1005c457
1005c28a:	push   ebx
1005c28b:	mov    ebx,DWORD PTR [ebp+0xc]
1005c28e:	cmp    ebx,esi
1005c290:	jne    0x1005c2c1
1005c292:	call   0x10046b55
1005c297:	push   esi
1005c298:	push   esi
1005c299:	push   esi
1005c29a:	push   esi
1005c29b:	push   esi
1005c29c:	mov    DWORD PTR [eax],0x16
1005c2a2:	call   0x1004338c
1005c2a7:	add    esp,0x14
1005c2aa:	cmp    BYTE PTR [ebp-0x8],0x0
1005c2ae:	je     0x1005c2b7
1005c2b0:	mov    eax,DWORD PTR [ebp-0xc]
1005c2b3:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c2b7:	mov    eax,0x7fffffff
1005c2bc:	jmp    0x1005c456
1005c2c1:	mov    eax,DWORD PTR [ebp-0x10]
1005c2c4:	cmp    DWORD PTR [eax+0x8],esi
1005c2c7:	jne    0x1005c2ed
1005c2c9:	lea    eax,[ebp-0x14]
1005c2cc:	push   eax
1005c2cd:	push   ebx
1005c2ce:	push   edx
1005c2cf:	call   0x1004559c
1005c2d4:	add    esp,0xc
1005c2d7:	cmp    BYTE PTR [ebp-0x8],0x0
1005c2db:	je     0x1005c456
1005c2e1:	mov    ecx,DWORD PTR [ebp-0xc]
1005c2e4:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005c2e8:	jmp    0x1005c456
1005c2ed:	push   edi
1005c2ee:	mov    edi,0x200
1005c2f3:	movzx  cx,BYTE PTR [edx]
1005c2f7:	movzx  ecx,cx
1005c2fa:	movzx  esi,cl
1005c2fd:	inc    edx
1005c2fe:	test   BYTE PTR [esi+eax*1+0x1d],0x4
1005c303:	mov    DWORD PTR [ebp+0x8],edx
1005c306:	je     0x1005c361
1005c308:	cmp    BYTE PTR [edx],0x0
1005c30b:	jne    0x1005c311
1005c30d:	xor    esi,esi
1005c30f:	jmp    0x1005c37d
1005c311:	push   0x1
1005c313:	push   DWORD PTR [eax+0x4]
1005c316:	lea    ecx,[ebp-0x4]
1005c319:	push   0x2
1005c31b:	push   ecx
1005c31c:	push   0x2
1005c31e:	dec    edx
1005c31f:	push   edx
1005c320:	push   edi
1005c321:	push   DWORD PTR [eax+0xc]
1005c324:	lea    eax,[ebp-0x14]
1005c327:	push   eax
1005c328:	call   0x1004b27c
1005c32d:	add    esp,0x24
1005c330:	cmp    eax,0x1
1005c333:	jne    0x1005c33c
1005c335:	movzx  ax,BYTE PTR [ebp-0x4]
1005c33a:	jmp    0x1005c356
1005c33c:	cmp    eax,0x2
1005c33f:	jne    0x1005c412
1005c345:	movzx  ax,BYTE PTR [ebp-0x4]
1005c34a:	movzx  cx,BYTE PTR [ebp-0x3]
1005c34f:	shl    ax,0x8
1005c353:	add    ax,cx
1005c356:	inc    DWORD PTR [ebp+0x8]
1005c359:	movzx  esi,ax
1005c35c:	mov    eax,DWORD PTR [ebp-0x10]
1005c35f:	jmp    0x1005c37d
1005c361:	movzx  edx,cx
1005c364:	lea    ecx,[edx+eax*1]
1005c367:	test   BYTE PTR [ecx+0x1d],0x10
1005c36b:	je     0x1005c37a
1005c36d:	movzx  cx,BYTE PTR [ecx+0x11d]
1005c375:	movzx  esi,cx
1005c378:	jmp    0x1005c37d
1005c37a:	movzx  esi,dx
1005c37d:	movzx  cx,BYTE PTR [ebx]
1005c381:	movzx  ecx,cx
1005c384:	movzx  edx,cl
1005c387:	inc    ebx
1005c388:	test   BYTE PTR [edx+eax*1+0x1d],0x4
1005c38d:	je     0x1005c3e4
1005c38f:	cmp    BYTE PTR [ebx],0x0
1005c392:	jne    0x1005c398
1005c394:	xor    ecx,ecx
1005c396:	jmp    0x1005c400
1005c398:	push   0x1
1005c39a:	push   DWORD PTR [eax+0x4]
1005c39d:	lea    ecx,[ebp-0x4]
1005c3a0:	push   0x2
1005c3a2:	push   ecx
1005c3a3:	push   0x2
1005c3a5:	lea    ecx,[ebx-0x1]
1005c3a8:	push   ecx
1005c3a9:	push   edi
1005c3aa:	push   DWORD PTR [eax+0xc]
1005c3ad:	lea    eax,[ebp-0x14]
1005c3b0:	push   eax
1005c3b1:	call   0x1004b27c
1005c3b6:	add    esp,0x24
1005c3b9:	cmp    eax,0x1
1005c3bc:	jne    0x1005c3c5
1005c3be:	movzx  ax,BYTE PTR [ebp-0x4]
1005c3c3:	jmp    0x1005c3db
1005c3c5:	cmp    eax,0x2
1005c3c8:	jne    0x1005c412
1005c3ca:	movzx  ax,BYTE PTR [ebp-0x4]
1005c3cf:	movzx  cx,BYTE PTR [ebp-0x3]
1005c3d4:	shl    ax,0x8
1005c3d8:	add    ax,cx
1005c3db:	movzx  ecx,ax
1005c3de:	mov    eax,DWORD PTR [ebp-0x10]
1005c3e1:	inc    ebx
1005c3e2:	jmp    0x1005c400
1005c3e4:	movzx  edx,cx
1005c3e7:	lea    ecx,[edx+eax*1]
1005c3ea:	test   BYTE PTR [ecx+0x1d],0x10
1005c3ee:	je     0x1005c3fd
1005c3f0:	movzx  cx,BYTE PTR [ecx+0x11d]
1005c3f8:	movzx  ecx,cx
1005c3fb:	jmp    0x1005c400
1005c3fd:	movzx  ecx,dx
1005c400:	cmp    cx,si
1005c403:	jne    0x1005c431
1005c405:	test   si,si
1005c408:	je     0x1005c446
1005c40a:	mov    edx,DWORD PTR [ebp+0x8]
1005c40d:	jmp    0x1005c2f3
1005c412:	call   0x10046b55
1005c417:	mov    DWORD PTR [eax],0x16
1005c41d:	cmp    BYTE PTR [ebp-0x8],0x0
1005c421:	je     0x1005c42a
1005c423:	mov    eax,DWORD PTR [ebp-0xc]
1005c426:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c42a:	mov    eax,0x7fffffff
1005c42f:	jmp    0x1005c455
1005c431:	sbb    eax,eax
1005c433:	and    eax,0x2
1005c436:	dec    eax
1005c437:	cmp    BYTE PTR [ebp-0x8],0x0
1005c43b:	je     0x1005c455
1005c43d:	mov    ecx,DWORD PTR [ebp-0xc]
1005c440:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005c444:	jmp    0x1005c455
1005c446:	cmp    BYTE PTR [ebp-0x8],0x0
1005c44a:	je     0x1005c453
1005c44c:	mov    eax,DWORD PTR [ebp-0xc]
1005c44f:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c453:	xor    eax,eax
1005c455:	pop    edi
1005c456:	pop    ebx
1005c457:	pop    esi
1005c458:	leave  
1005c459:	ret    
1005c45a:	push   0x0
1005c45c:	push   DWORD PTR [esp+0xc]
1005c460:	push   DWORD PTR [esp+0xc]
1005c464:	call   0x1005c240
1005c469:	add    esp,0xc
1005c46c:	ret    
1005c46d:	push   ebp
1005c46e:	lea    ebp,[esp-0x94]
1005c475:	sub    esp,0x114
1005c47b:	mov    eax,ds:0x1007e030
1005c480:	xor    eax,ebp
1005c482:	mov    DWORD PTR [ebp+0x90],eax
1005c488:	and    DWORD PTR [ebp-0x7c],0x0
1005c48c:	push   ebx
1005c48d:	push   esi
1005c48e:	push   edi
1005c48f:	mov    edi,DWORD PTR ds:0x10066064
1005c495:	lea    ebx,[ebp-0x78]
1005c498:	mov    eax,ebx
1005c49a:	push   eax
1005c49b:	push   0x105
1005c4a0:	call   edi
1005c4a2:	mov    esi,eax
1005c4a4:	cmp    esi,0x104
1005c4aa:	jle    0x1005c4e4
1005c4ac:	lea    eax,[esi+0x1]
1005c4af:	push   0x1
1005c4b1:	push   eax
1005c4b2:	mov    DWORD PTR [ebp-0x80],eax
1005c4b5:	call   0x10047462
1005c4ba:	mov    ebx,eax
1005c4bc:	test   ebx,ebx
1005c4be:	pop    ecx
1005c4bf:	pop    ecx
1005c4c0:	jne    0x1005c4d1
1005c4c2:	call   0x10046b55
1005c4c7:	mov    DWORD PTR [eax],0xc
1005c4cd:	xor    esi,esi
1005c4cf:	jmp    0x1005c4e4
1005c4d1:	test   esi,esi
1005c4d3:	mov    DWORD PTR [ebp-0x7c],0x1
1005c4da:	je     0x1005c4e4
1005c4dc:	push   ebx
1005c4dd:	push   DWORD PTR [ebp-0x80]
1005c4e0:	call   edi
1005c4e2:	mov    esi,eax
1005c4e4:	xor    edi,edi
1005c4e6:	test   esi,esi
1005c4e8:	je     0x1005c501
1005c4ea:	cmp    BYTE PTR [ebx+0x1],0x3a
1005c4ee:	jne    0x1005c50c
1005c4f0:	movzx  eax,BYTE PTR [ebx]
1005c4f3:	push   eax
1005c4f4:	call   0x10058d67
1005c4f9:	mov    edi,eax
1005c4fb:	pop    ecx
1005c4fc:	sub    edi,0x40
1005c4ff:	jmp    0x1005c50c
1005c501:	call   0x10046b55
1005c506:	mov    DWORD PTR [eax],0xc
1005c50c:	cmp    DWORD PTR [ebp-0x7c],0x0
1005c510:	je     0x1005c519
1005c512:	push   ebx
1005c513:	call   0x10043508
1005c518:	pop    ecx
1005c519:	mov    ecx,DWORD PTR [ebp+0x90]
1005c51f:	mov    eax,edi
1005c521:	pop    edi
1005c522:	pop    esi
1005c523:	xor    ecx,ebp
1005c525:	pop    ebx
1005c526:	call   0x10042e97
1005c52b:	add    ebp,0x94
1005c531:	leave  
1005c532:	ret    
1005c533:	push   esi
1005c534:	mov    esi,DWORD PTR [esp+0x8]
1005c538:	cmp    DWORD PTR [esi],0xe06d7363
1005c53e:	jne    0x1005c565
1005c540:	cmp    DWORD PTR ds:0x1006cae8,0x0
1005c547:	je     0x1005c565
1005c549:	push   0x1006cae8
1005c54e:	call   0x1004c2e2
1005c553:	test   eax,eax
1005c555:	pop    ecx
1005c556:	je     0x1005c565
1005c558:	push   DWORD PTR [esp+0xc]
1005c55c:	push   esi
1005c55d:	call   DWORD PTR ds:0x1006cae8
1005c563:	pop    ecx
1005c564:	pop    ecx
1005c565:	pop    esi
1005c566:	ret    
1005c567:	int3   
1005c568:	int3   
1005c569:	int3   
1005c56a:	int3   
1005c56b:	int3   
1005c56c:	int3   
1005c56d:	int3   
1005c56e:	int3   
1005c56f:	int3   
1005c570:	push   ebx
1005c571:	push   ebp
1005c572:	mov    ebp,DWORD PTR [esp+0xc]
1005c576:	xor    eax,eax
1005c578:	or     edx,0xffffffff
1005c57b:	cmp    ecx,0xffffffff
1005c57e:	push   esi
1005c57f:	je     0x1005c612
1005c585:	lea    ecx,[ecx+ecx*2]
1005c588:	mov    esi,DWORD PTR [ebp+ecx*4+0x8]
1005c58c:	lea    ebx,[ebp+ecx*4+0x0]
1005c590:	sub    esi,edi
1005c592:	and    esi,0xfffff000
1005c598:	cmp    esi,edx
1005c59a:	je     0x1005c5c9
1005c59c:	test   eax,eax
1005c59e:	je     0x1005c5b0
1005c5a0:	mov    ecx,DWORD PTR [eax+0xc]
1005c5a3:	cmp    esi,ecx
1005c5a5:	jb     0x1005c5b0
1005c5a7:	mov    edx,DWORD PTR [eax+0x8]
1005c5aa:	add    edx,ecx
1005c5ac:	cmp    esi,edx
1005c5ae:	jb     0x1005c5c7
1005c5b0:	push   esi
1005c5b1:	push   edi
1005c5b2:	call   0x1004c2a0
1005c5b7:	add    esp,0x8
1005c5ba:	test   eax,eax
1005c5bc:	je     0x1005c61b
1005c5be:	test   DWORD PTR [eax+0x24],0x20000000
1005c5c5:	je     0x1005c61b
1005c5c7:	mov    edx,esi
1005c5c9:	mov    ecx,DWORD PTR [ebx+0x4]
1005c5cc:	test   ecx,ecx
1005c5ce:	je     0x1005c607
1005c5d0:	sub    ecx,edi
1005c5d2:	and    ecx,0xfffff000
1005c5d8:	mov    esi,ecx
1005c5da:	cmp    esi,edx
1005c5dc:	je     0x1005c607
1005c5de:	mov    ecx,DWORD PTR [eax+0xc]
1005c5e1:	cmp    esi,ecx
1005c5e3:	jb     0x1005c5ee
1005c5e5:	mov    edx,DWORD PTR [eax+0x8]
1005c5e8:	add    edx,ecx
1005c5ea:	cmp    esi,edx
1005c5ec:	jb     0x1005c605
1005c5ee:	push   esi
1005c5ef:	push   edi
1005c5f0:	call   0x1004c2a0
1005c5f5:	add    esp,0x8
1005c5f8:	test   eax,eax
1005c5fa:	je     0x1005c61b
1005c5fc:	test   DWORD PTR [eax+0x24],0x20000000
1005c603:	je     0x1005c61b
1005c605:	mov    edx,esi
1005c607:	mov    ecx,DWORD PTR [ebx]
1005c609:	cmp    ecx,0xffffffff
1005c60c:	jne    0x1005c585
1005c612:	pop    esi
1005c613:	pop    ebp
1005c614:	mov    eax,0x1
1005c619:	pop    ebx
1005c61a:	ret    
1005c61b:	pop    esi
1005c61c:	pop    ebp
1005c61d:	xor    eax,eax
1005c61f:	pop    ebx
1005c620:	ret    
1005c621:	int3   
1005c622:	int3   
1005c623:	int3   
1005c624:	int3   
1005c625:	int3   
1005c626:	int3   
1005c627:	int3   
1005c628:	int3   
1005c629:	int3   
1005c62a:	int3   
1005c62b:	int3   
1005c62c:	int3   
1005c62d:	int3   
1005c62e:	int3   
1005c62f:	int3   
1005c630:	push   ebp
1005c631:	mov    ebp,esp
1005c633:	push   0xfffffffe
1005c635:	push   0x10074c20
1005c63a:	push   0x10046cf0
1005c63f:	mov    eax,fs:0x0
1005c645:	push   eax
1005c646:	sub    esp,0x30
1005c649:	push   ebx
1005c64a:	push   esi
1005c64b:	push   edi
1005c64c:	mov    eax,ds:0x1007e030
1005c651:	xor    DWORD PTR [ebp-0x8],eax
1005c654:	xor    eax,ebp
1005c656:	push   eax
1005c657:	lea    eax,[ebp-0x10]
1005c65a:	mov    fs:0x0,eax
1005c660:	mov    DWORD PTR [ebp-0x18],esp
1005c663:	mov    esi,DWORD PTR [ebp+0x8]
1005c666:	mov    edx,DWORD PTR [esi+0x8]
1005c669:	mov    DWORD PTR [ebp-0x1c],edx
1005c66c:	test   dl,0x3
1005c66f:	je     0x1005c685
1005c671:	xor    eax,eax
1005c673:	mov    ecx,DWORD PTR [ebp-0x10]
1005c676:	mov    DWORD PTR fs:0x0,ecx
1005c67d:	pop    ecx
1005c67e:	pop    edi
1005c67f:	pop    esi
1005c680:	pop    ebx
1005c681:	mov    esp,ebp
1005c683:	pop    ebp
1005c684:	ret    
1005c685:	mov    eax,fs:0x18
1005c68b:	mov    ecx,DWORD PTR [eax+0x8]
1005c68e:	mov    DWORD PTR [ebp-0x20],ecx
1005c691:	cmp    edx,ecx
1005c693:	jb     0x1005c69a
1005c695:	cmp    edx,DWORD PTR [eax+0x4]
1005c698:	jb     0x1005c671
1005c69a:	mov    edi,DWORD PTR [esi+0xc]
1005c69d:	mov    DWORD PTR [ebp-0x24],edi
1005c6a0:	cmp    edi,0xffffffff
1005c6a3:	je     0x1005c9bb
1005c6a9:	xor    ebx,ebx
1005c6ab:	xor    eax,eax
1005c6ad:	mov    ecx,edx
1005c6af:	nop
1005c6b0:	mov    esi,DWORD PTR [ecx]
1005c6b2:	cmp    esi,0xffffffff
1005c6b5:	je     0x1005c6bb
1005c6b7:	cmp    esi,eax
1005c6b9:	jae    0x1005c671
1005c6bb:	cmp    DWORD PTR [ecx+0x4],0x0
1005c6bf:	je     0x1005c6c6
1005c6c1:	mov    ebx,0x1
1005c6c6:	add    eax,0x1
1005c6c9:	add    ecx,0xc
1005c6cc:	cmp    eax,edi
1005c6ce:	jbe    0x1005c6b0
1005c6d0:	test   ebx,ebx
1005c6d2:	je     0x1005c6e3
1005c6d4:	mov    ecx,DWORD PTR [ebp+0x8]
1005c6d7:	mov    eax,DWORD PTR [ecx-0x8]
1005c6da:	cmp    eax,DWORD PTR [ebp-0x20]
1005c6dd:	jb     0x1005c671
1005c6df:	cmp    eax,ecx
1005c6e1:	jae    0x1005c671
1005c6e3:	mov    eax,edx
1005c6e5:	and    eax,0xfffff000
1005c6ea:	mov    DWORD PTR [ebp-0x20],eax
1005c6ed:	xor    esi,esi
1005c6ef:	mov    eax,ds:0x10080ad0
1005c6f4:	cmp    esi,eax
1005c6f6:	jge    0x1005c83d
1005c6fc:	mov    ebx,DWORD PTR [esi*8+0x10080ad8]
1005c703:	mov    edi,DWORD PTR [esi*8+0x10080adc]
1005c70a:	cmp    ebx,DWORD PTR [ebp-0x20]
1005c70d:	jne    0x1005c891
1005c713:	mov    DWORD PTR [ebp-0x4],0x0
1005c71a:	push   edi
1005c71b:	call   0x1004c270
1005c720:	add    esp,0x4
1005c723:	test   eax,eax
1005c725:	je     0x1005c833
1005c72b:	mov    eax,DWORD PTR [ebp-0x1c]
1005c72e:	push   eax
1005c72f:	mov    ecx,DWORD PTR [ebp-0x24]
1005c732:	call   0x1005c570
1005c737:	add    esp,0x4
1005c73a:	test   eax,eax
1005c73c:	je     0x1005c833
1005c742:	mov    ecx,DWORD PTR [ebp+0x8]
1005c745:	mov    edx,DWORD PTR [ecx+0x4]
1005c748:	sub    edx,edi
1005c74a:	push   edx
1005c74b:	push   edi
1005c74c:	call   0x1004c2a0
1005c751:	add    esp,0x8
1005c754:	test   eax,eax
1005c756:	je     0x1005c833
1005c75c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005c763:	test   esi,esi
1005c765:	jle    0x1005c9bb
1005c76b:	mov    eax,0x1
1005c770:	mov    ecx,0x10080b58
1005c775:	xchg   DWORD PTR [ecx],eax
1005c777:	test   eax,eax
1005c779:	jne    0x1005c9bb
1005c77f:	mov    eax,DWORD PTR [ebp-0x20]
1005c782:	cmp    DWORD PTR [esi*8+0x10080ad8],eax
1005c789:	je     0x1005c7d3
1005c78b:	mov    ecx,DWORD PTR ds:0x10080ad0
1005c791:	lea    esi,[ecx-0x1]
1005c794:	test   esi,esi
1005c796:	jl     0x1005c7c2
1005c798:	jmp    0x1005c7a0
1005c79a:	lea    ebx,[ebx+0x0]
1005c7a0:	cmp    DWORD PTR [esi*8+0x10080ad8],eax
1005c7a7:	je     0x1005c7b0
1005c7a9:	sub    esi,0x1
1005c7ac:	jns    0x1005c7a0
1005c7ae:	jmp    0x1005c7be
1005c7b0:	mov    ebx,DWORD PTR [esi*8+0x10080ad8]
1005c7b7:	mov    edi,DWORD PTR [esi*8+0x10080adc]
1005c7be:	test   esi,esi
1005c7c0:	jge    0x1005c7d5
1005c7c2:	cmp    ecx,0x10
1005c7c5:	jge    0x1005c7d0
1005c7c7:	add    ecx,0x1
1005c7ca:	mov    DWORD PTR ds:0x10080ad0,ecx
1005c7d0:	lea    esi,[ecx-0x1]
1005c7d3:	test   esi,esi
1005c7d5:	jle    0x1005c9b2
1005c7db:	xor    eax,eax
1005c7dd:	test   esi,esi
1005c7df:	jl     0x1005c9b2
1005c7e5:	jmp    0x1005c7f0
1005c7e7:	lea    esp,[esp+0x0]
1005c7ee:	mov    edi,edi
1005c7f0:	mov    ecx,DWORD PTR [eax*8+0x10080ad8]
1005c7f7:	mov    edx,DWORD PTR [eax*8+0x10080adc]
1005c7fe:	mov    DWORD PTR [eax*8+0x10080ad8],ebx
1005c805:	mov    DWORD PTR [eax*8+0x10080adc],edi
1005c80c:	mov    ebx,ecx
1005c80e:	mov    edi,edx
1005c810:	add    eax,0x1
1005c813:	cmp    eax,esi
1005c815:	jle    0x1005c7f0
1005c817:	jmp    0x1005c9b2
1005c81c:	mov    ecx,DWORD PTR [ebp-0x14]
1005c81f:	mov    edx,DWORD PTR [ecx]
1005c821:	mov    eax,DWORD PTR [edx]
1005c823:	xor    ecx,ecx
1005c825:	cmp    eax,0xc0000005
1005c82a:	sete   cl
1005c82d:	mov    eax,ecx
1005c82f:	ret    
1005c830:	mov    esp,DWORD PTR [ebp-0x18]
1005c833:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005c83a:	mov    edx,DWORD PTR [ebp-0x1c]
1005c83d:	push   0x1c
1005c83f:	lea    eax,[ebp-0x40]
1005c842:	push   eax
1005c843:	push   edx
1005c844:	call   DWORD PTR ds:0x100660f4
1005c84a:	test   eax,eax
1005c84c:	je     0x1005c9bb
1005c852:	mov    eax,DWORD PTR [ebp-0x28]
1005c855:	cmp    eax,0x1000000
1005c85a:	je     0x1005c8c0
1005c85c:	cmp    eax,0x20000
1005c861:	jne    0x1005c8ab
1005c863:	cmp    DWORD PTR ds:0x10080ad4,0x0
1005c86a:	jne    0x1005c8a2
1005c86c:	mov    DWORD PTR ds:0x10080b60,0x94
1005c876:	push   0x10080b60
1005c87b:	call   DWORD PTR ds:0x100661a8
1005c881:	test   eax,eax
1005c883:	je     0x1005c899
1005c885:	mov    DWORD PTR ds:0x10080ad4,0x1
1005c88f:	jmp    0x1005c8a2
1005c891:	add    esi,0x1
1005c894:	jmp    0x1005c6f4
1005c899:	cmp    DWORD PTR ds:0x10080ad4,0x0
1005c8a0:	je     0x1005c8c0
1005c8a2:	cmp    DWORD PTR ds:0x10080b70,0x1
1005c8a9:	je     0x1005c8c0
1005c8ab:	or     eax,0xffffffff
1005c8ae:	mov    ecx,DWORD PTR [ebp-0x10]
1005c8b1:	mov    DWORD PTR fs:0x0,ecx
1005c8b8:	pop    ecx
1005c8b9:	pop    edi
1005c8ba:	pop    esi
1005c8bb:	pop    ebx
1005c8bc:	mov    esp,ebp
1005c8be:	pop    ebp
1005c8bf:	ret    
1005c8c0:	mov    edi,DWORD PTR [ebp-0x3c]
1005c8c3:	push   edi
1005c8c4:	call   0x1004c270
1005c8c9:	add    esp,0x4
1005c8cc:	test   eax,eax
1005c8ce:	je     0x1005c8ab
1005c8d0:	test   BYTE PTR [ebp-0x2c],0xcc
1005c8d4:	je     0x1005c8fa
1005c8d6:	mov    ecx,DWORD PTR [ebp-0x1c]
1005c8d9:	sub    ecx,edi
1005c8db:	push   ecx
1005c8dc:	push   edi
1005c8dd:	call   0x1004c2a0
1005c8e2:	add    esp,0x8
1005c8e5:	test   eax,eax
1005c8e7:	je     0x1005c671
1005c8ed:	test   DWORD PTR [eax+0x24],0x80000000
1005c8f4:	jne    0x1005c671
1005c8fa:	mov    edx,DWORD PTR [ebp-0x1c]
1005c8fd:	push   edx
1005c8fe:	mov    ecx,DWORD PTR [ebp-0x24]
1005c901:	call   0x1005c570
1005c906:	add    esp,0x4
1005c909:	test   eax,eax
1005c90b:	je     0x1005c671
1005c911:	mov    eax,DWORD PTR [ebp+0x8]
1005c914:	mov    ecx,DWORD PTR [eax+0x4]
1005c917:	sub    ecx,edi
1005c919:	push   ecx
1005c91a:	push   edi
1005c91b:	call   0x1004c2a0
1005c920:	add    esp,0x8
1005c923:	test   eax,eax
1005c925:	je     0x1005c671
1005c92b:	mov    edx,0x1
1005c930:	mov    eax,0x10080b58
1005c935:	xchg   DWORD PTR [eax],edx
1005c937:	test   edx,edx
1005c939:	jne    0x1005c9bb
1005c93f:	mov    esi,DWORD PTR ds:0x10080ad0
1005c945:	mov    eax,esi
1005c947:	mov    ecx,DWORD PTR [ebp-0x20]
1005c94a:	test   esi,esi
1005c94c:	jle    0x1005c963
1005c94e:	lea    edx,[esi*8+0x10080ad0]
1005c955:	cmp    DWORD PTR [edx],ecx
1005c957:	je     0x1005c963
1005c959:	sub    eax,0x1
1005c95c:	sub    edx,0x8
1005c95f:	test   eax,eax
1005c961:	jg     0x1005c955
1005c963:	test   eax,eax
1005c965:	jne    0x1005c9a8
1005c967:	cmp    esi,0xf
1005c96a:	jle    0x1005c971
1005c96c:	mov    esi,0xf
1005c971:	mov    edx,DWORD PTR [ebp-0x3c]
1005c974:	test   esi,esi
1005c976:	jl     0x1005c996
1005c978:	mov    eax,0x10080ad8
1005c97d:	lea    ebx,[esi+0x1]
1005c980:	mov    esi,DWORD PTR [eax]
1005c982:	mov    edi,DWORD PTR [eax+0x4]
1005c985:	mov    DWORD PTR [eax],ecx
1005c987:	mov    DWORD PTR [eax+0x4],edx
1005c98a:	mov    ecx,esi
1005c98c:	mov    edx,edi
1005c98e:	add    eax,0x8
1005c991:	sub    ebx,0x1
1005c994:	jne    0x1005c980
1005c996:	cmp    DWORD PTR ds:0x10080ad0,0x10
1005c99d:	jge    0x1005c9b2
1005c99f:	add    DWORD PTR ds:0x10080ad0,0x1
1005c9a6:	jmp    0x1005c9b2
1005c9a8:	mov    ecx,DWORD PTR [ebp-0x3c]
1005c9ab:	mov    DWORD PTR [eax*8+0x10080ad4],ecx
1005c9b2:	mov    eax,0x10080b58
1005c9b7:	xor    edx,edx
1005c9b9:	xchg   DWORD PTR [eax],edx
1005c9bb:	mov    eax,0x1
1005c9c0:	mov    ecx,DWORD PTR [ebp-0x10]
1005c9c3:	mov    DWORD PTR fs:0x0,ecx
1005c9ca:	pop    ecx
1005c9cb:	pop    edi
1005c9cc:	pop    esi
1005c9cd:	pop    ebx
1005c9ce:	mov    esp,ebp
1005c9d0:	pop    ebp
1005c9d1:	ret    
1005c9d2:	push   ebp
1005c9d3:	mov    ebp,esp
1005c9d5:	sub    esp,0x18
1005c9d8:	push   ebx
1005c9d9:	push   esi
1005c9da:	push   edi
1005c9db:	xor    ebx,ebx
1005c9dd:	push   0x1
1005c9df:	push   ebx
1005c9e0:	push   ebx
1005c9e1:	push   DWORD PTR [ebp+0x8]
1005c9e4:	mov    DWORD PTR [ebp-0x10],ebx
1005c9e7:	mov    DWORD PTR [ebp-0xc],ebx
1005c9ea:	call   0x1004c711
1005c9ef:	mov    DWORD PTR [ebp-0x18],eax
1005c9f2:	and    eax,edx
1005c9f4:	add    esp,0x10
1005c9f7:	cmp    eax,0xffffffff
1005c9fa:	mov    DWORD PTR [ebp-0x14],edx
1005c9fd:	je     0x1005ca58
1005c9ff:	push   0x2
1005ca01:	push   ebx
1005ca02:	push   ebx
1005ca03:	push   DWORD PTR [ebp+0x8]
1005ca06:	call   0x1004c711
1005ca0b:	mov    ecx,eax
1005ca0d:	and    ecx,edx
1005ca0f:	add    esp,0x10
1005ca12:	cmp    ecx,0xffffffff
1005ca15:	je     0x1005ca58
1005ca17:	mov    esi,DWORD PTR [ebp+0xc]
1005ca1a:	mov    edi,DWORD PTR [ebp+0x10]
1005ca1d:	sub    esi,eax
1005ca1f:	sbb    edi,edx
1005ca21:	js     0x1005caed
1005ca27:	jg     0x1005ca31
1005ca29:	cmp    esi,ebx
1005ca2b:	jbe    0x1005caed
1005ca31:	mov    ebx,0x1000
1005ca36:	push   ebx
1005ca37:	push   0x8
1005ca39:	call   DWORD PTR ds:0x100661ac
1005ca3f:	push   eax
1005ca40:	call   DWORD PTR ds:0x1006618c
1005ca46:	test   eax,eax
1005ca48:	mov    DWORD PTR [ebp-0x4],eax
1005ca4b:	jne    0x1005ca64
1005ca4d:	call   0x10046b55
1005ca52:	mov    DWORD PTR [eax],0xc
1005ca58:	call   0x10046b55
1005ca5d:	mov    eax,DWORD PTR [eax]
1005ca5f:	pop    edi
1005ca60:	pop    esi
1005ca61:	pop    ebx
1005ca62:	leave  
1005ca63:	ret    
1005ca64:	push   0x8000
1005ca69:	push   DWORD PTR [ebp+0x8]
1005ca6c:	call   0x1005cb86
1005ca71:	pop    ecx
1005ca72:	pop    ecx
1005ca73:	mov    DWORD PTR [ebp-0x8],eax
1005ca76:	test   edi,edi
1005ca78:	jl     0x1005ca84
1005ca7a:	jg     0x1005ca80
1005ca7c:	cmp    esi,ebx
1005ca7e:	jb     0x1005ca84
1005ca80:	mov    eax,ebx
1005ca82:	jmp    0x1005ca86
1005ca84:	mov    eax,esi
1005ca86:	push   eax
1005ca87:	push   DWORD PTR [ebp-0x4]
1005ca8a:	push   DWORD PTR [ebp+0x8]
1005ca8d:	call   0x1004c8ad
1005ca92:	add    esp,0xc
1005ca95:	cmp    eax,0xffffffff
1005ca98:	je     0x1005cad0
1005ca9a:	cdq    
1005ca9b:	sub    esi,eax
1005ca9d:	sbb    edi,edx
1005ca9f:	js     0x1005caa7
1005caa1:	jg     0x1005ca76
1005caa3:	test   esi,esi
1005caa5:	ja     0x1005ca76
1005caa7:	mov    esi,DWORD PTR [ebp-0x10]
1005caaa:	push   DWORD PTR [ebp-0x8]
1005caad:	push   DWORD PTR [ebp+0x8]
1005cab0:	call   0x1005cb86
1005cab5:	pop    ecx
1005cab6:	pop    ecx
1005cab7:	push   DWORD PTR [ebp-0x4]
1005caba:	push   0x0
1005cabc:	call   DWORD PTR ds:0x100661ac
1005cac2:	push   eax
1005cac3:	call   DWORD PTR ds:0x10066188
1005cac9:	xor    ebx,ebx
1005cacb:	jmp    0x1005cb56
1005cad0:	call   0x10046b68
1005cad5:	cmp    DWORD PTR [eax],0x5
1005cad8:	jne    0x1005cae5
1005cada:	call   0x10046b55
1005cadf:	mov    DWORD PTR [eax],0xd
1005cae5:	or     esi,0xffffffff
1005cae8:	mov    DWORD PTR [ebp-0xc],esi
1005caeb:	jmp    0x1005caaa
1005caed:	cmp    edi,ebx
1005caef:	jg     0x1005cb62
1005caf1:	jl     0x1005caf7
1005caf3:	cmp    esi,ebx
1005caf5:	jae    0x1005cb62
1005caf7:	push   ebx
1005caf8:	push   DWORD PTR [ebp+0x10]
1005cafb:	push   DWORD PTR [ebp+0xc]
1005cafe:	push   DWORD PTR [ebp+0x8]
1005cb01:	call   0x1004c711
1005cb06:	and    eax,edx
1005cb08:	add    esp,0x10
1005cb0b:	cmp    eax,0xffffffff
1005cb0e:	je     0x1005ca58
1005cb14:	push   DWORD PTR [ebp+0x8]
1005cb17:	call   0x1004f95f
1005cb1c:	pop    ecx
1005cb1d:	push   eax
1005cb1e:	call   DWORD PTR ds:0x10066068
1005cb24:	neg    eax
1005cb26:	sbb    eax,eax
1005cb28:	neg    eax
1005cb2a:	dec    eax
1005cb2b:	cdq    
1005cb2c:	mov    DWORD PTR [ebp-0x10],eax
1005cb2f:	and    eax,edx
1005cb31:	cmp    eax,0xffffffff
1005cb34:	mov    DWORD PTR [ebp-0xc],edx
1005cb37:	jne    0x1005cb62
1005cb39:	call   0x10046b55
1005cb3e:	mov    DWORD PTR [eax],0xd
1005cb44:	call   0x10046b68
1005cb49:	mov    esi,eax
1005cb4b:	call   DWORD PTR ds:0x100660cc
1005cb51:	mov    DWORD PTR [esi],eax
1005cb53:	mov    esi,DWORD PTR [ebp-0x10]
1005cb56:	and    esi,DWORD PTR [ebp-0xc]
1005cb59:	cmp    esi,0xffffffff
1005cb5c:	je     0x1005ca58
1005cb62:	push   ebx
1005cb63:	push   DWORD PTR [ebp-0x14]
1005cb66:	push   DWORD PTR [ebp-0x18]
1005cb69:	push   DWORD PTR [ebp+0x8]
1005cb6c:	call   0x1004c711
1005cb71:	and    eax,edx
1005cb73:	add    esp,0x10
1005cb76:	cmp    eax,0xffffffff
1005cb79:	je     0x1005ca58
1005cb7f:	xor    eax,eax
1005cb81:	jmp    0x1005ca5f
1005cb86:	push   ebp
1005cb87:	mov    ebp,esp
1005cb89:	mov    edx,DWORD PTR [ebp+0x8]
1005cb8c:	mov    eax,edx
1005cb8e:	sar    eax,0x5
1005cb91:	and    edx,0x1f
1005cb94:	imul   edx,edx,0x28
1005cb97:	push   ebx
1005cb98:	mov    ebx,DWORD PTR [ebp+0xc]
1005cb9b:	push   esi
1005cb9c:	lea    esi,[eax*4+0x10082480]
1005cba3:	mov    eax,DWORD PTR [esi]
1005cba5:	lea    ecx,[eax+edx*1]
1005cba8:	movzx  eax,BYTE PTR [ecx+0x4]
1005cbac:	and    eax,0x80
1005cbb1:	mov    DWORD PTR [ebp+0x8],eax
1005cbb4:	mov    al,BYTE PTR [ecx+0x24]
1005cbb7:	add    al,al
1005cbb9:	movsx  eax,al
1005cbbc:	push   edi
1005cbbd:	mov    edi,0x4000
1005cbc2:	sar    eax,1
1005cbc4:	cmp    ebx,edi
1005cbc6:	je     0x1005cc18
1005cbc8:	cmp    ebx,0x8000
1005cbce:	je     0x1005cc12
1005cbd0:	cmp    ebx,0x10000
1005cbd6:	je     0x1005cbfe
1005cbd8:	cmp    ebx,0x20000
1005cbde:	je     0x1005cbfe
1005cbe0:	cmp    ebx,0x40000
1005cbe6:	jne    0x1005cc25
1005cbe8:	or     BYTE PTR [ecx+0x4],0x80
1005cbec:	mov    ecx,DWORD PTR [esi]
1005cbee:	lea    ecx,[ecx+edx*1+0x24]
1005cbf2:	mov    dl,BYTE PTR [ecx]
1005cbf4:	and    dl,0x81
1005cbf7:	or     dl,0x1
1005cbfa:	mov    BYTE PTR [ecx],dl
1005cbfc:	jmp    0x1005cc25
1005cbfe:	or     BYTE PTR [ecx+0x4],0x80
1005cc02:	mov    ecx,DWORD PTR [esi]
1005cc04:	lea    ecx,[ecx+edx*1+0x24]
1005cc08:	mov    dl,BYTE PTR [ecx]
1005cc0a:	and    dl,0x82
1005cc0d:	or     dl,0x2
1005cc10:	jmp    0x1005cbfa
1005cc12:	and    BYTE PTR [ecx+0x4],0x7f
1005cc16:	jmp    0x1005cc25
1005cc18:	or     BYTE PTR [ecx+0x4],0x80
1005cc1c:	mov    ecx,DWORD PTR [esi]
1005cc1e:	lea    ecx,[ecx+edx*1+0x24]
1005cc22:	and    BYTE PTR [ecx],0x80
1005cc25:	cmp    DWORD PTR [ebp+0x8],0x0
1005cc29:	jne    0x1005cc32
1005cc2b:	mov    eax,0x8000
1005cc30:	jmp    0x1005cc3d
1005cc32:	neg    eax
1005cc34:	sbb    eax,eax
1005cc36:	and    eax,0xc000
1005cc3b:	add    eax,edi
1005cc3d:	pop    edi
1005cc3e:	pop    esi
1005cc3f:	pop    ebx
1005cc40:	pop    ebp
1005cc41:	ret    
1005cc42:	mov    eax,DWORD PTR [esp+0x4]
1005cc46:	push   esi
1005cc47:	xor    esi,esi
1005cc49:	cmp    eax,esi
1005cc4b:	jne    0x1005cc6a
1005cc4d:	call   0x10046b55
1005cc52:	push   esi
1005cc53:	push   esi
1005cc54:	push   esi
1005cc55:	push   esi
1005cc56:	push   esi
1005cc57:	mov    DWORD PTR [eax],0x16
1005cc5d:	call   0x1004338c
1005cc62:	add    esp,0x14
1005cc65:	push   0x16
1005cc67:	pop    eax
1005cc68:	pop    esi
1005cc69:	ret    
1005cc6a:	mov    ecx,DWORD PTR ds:0x10080bfc
1005cc70:	mov    DWORD PTR [eax],ecx
1005cc72:	xor    eax,eax
1005cc74:	pop    esi
1005cc75:	ret    
1005cc76:	push   ebp
1005cc77:	mov    ebp,esp
1005cc79:	sub    esp,0x10
1005cc7c:	push   ebx
1005cc7d:	xor    ebx,ebx
1005cc7f:	cmp    DWORD PTR [ebp+0x10],ebx
1005cc82:	jne    0x1005cc8b
1005cc84:	xor    eax,eax
1005cc86:	jmp    0x1005cdc8
1005cc8b:	push   edi
1005cc8c:	push   DWORD PTR [ebp+0x14]
1005cc8f:	lea    ecx,[ebp-0x10]
1005cc92:	call   0x100454e5
1005cc97:	mov    edi,DWORD PTR [ebp-0xc]
1005cc9a:	cmp    DWORD PTR [edi+0x8],ebx
1005cc9d:	jne    0x1005ccc5
1005cc9f:	push   DWORD PTR [ebp+0x10]
1005cca2:	push   DWORD PTR [ebp+0xc]
1005cca5:	push   DWORD PTR [ebp+0x8]
1005cca8:	call   0x1004f106
1005ccad:	add    esp,0xc
1005ccb0:	cmp    BYTE PTR [ebp-0x4],bl
1005ccb3:	je     0x1005cdc7
1005ccb9:	mov    ecx,DWORD PTR [ebp-0x8]
1005ccbc:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005ccc0:	jmp    0x1005cdc7
1005ccc5:	cmp    DWORD PTR [ebp+0x8],ebx
1005ccc8:	jne    0x1005ccf8
1005ccca:	call   0x10046b55
1005cccf:	push   ebx
1005ccd0:	push   ebx
1005ccd1:	push   ebx
1005ccd2:	push   ebx
1005ccd3:	push   ebx
1005ccd4:	mov    DWORD PTR [eax],0x16
1005ccda:	call   0x1004338c
1005ccdf:	add    esp,0x14
1005cce2:	cmp    BYTE PTR [ebp-0x4],bl
1005cce5:	je     0x1005ccee
1005cce7:	mov    eax,DWORD PTR [ebp-0x8]
1005ccea:	and    DWORD PTR [eax+0x70],0xfffffffd
1005ccee:	mov    eax,0x7fffffff
1005ccf3:	jmp    0x1005cdc7
1005ccf8:	push   esi
1005ccf9:	mov    esi,DWORD PTR [ebp+0xc]
1005ccfc:	cmp    esi,ebx
1005ccfe:	jne    0x1005cd2e
1005cd00:	call   0x10046b55
1005cd05:	push   ebx
1005cd06:	push   ebx
1005cd07:	push   ebx
1005cd08:	push   ebx
1005cd09:	push   ebx
1005cd0a:	mov    DWORD PTR [eax],0x16
1005cd10:	call   0x1004338c
1005cd15:	add    esp,0x14
1005cd18:	cmp    BYTE PTR [ebp-0x4],bl
1005cd1b:	je     0x1005cd24
1005cd1d:	mov    eax,DWORD PTR [ebp-0x8]
1005cd20:	and    DWORD PTR [eax+0x70],0xfffffffd
1005cd24:	mov    eax,0x7fffffff
1005cd29:	jmp    0x1005cdc6
1005cd2e:	mov    eax,DWORD PTR [ebp+0x8]
1005cd31:	movzx  cx,BYTE PTR [eax]
1005cd35:	dec    DWORD PTR [ebp+0x10]
1005cd38:	movzx  ecx,cx
1005cd3b:	movzx  edx,cl
1005cd3e:	inc    eax
1005cd3f:	test   BYTE PTR [edx+edi*1+0x1d],0x4
1005cd44:	mov    DWORD PTR [ebp+0x8],eax
1005cd47:	je     0x1005cd75
1005cd49:	cmp    DWORD PTR [ebp+0x10],ebx
1005cd4c:	jne    0x1005cd5f
1005cd4e:	movzx  eax,BYTE PTR [esi]
1005cd51:	xor    ecx,ecx
1005cd53:	test   BYTE PTR [eax+edi*1+0x1d],0x4
1005cd58:	jne    0x1005cdb8
1005cd5a:	movzx  eax,ax
1005cd5d:	jmp    0x1005cda5
1005cd5f:	mov    al,BYTE PTR [eax]
1005cd61:	cmp    al,bl
1005cd63:	jne    0x1005cd69
1005cd65:	xor    ecx,ecx
1005cd67:	jmp    0x1005cd75
1005cd69:	xor    edx,edx
1005cd6b:	inc    DWORD PTR [ebp+0x8]
1005cd6e:	mov    dh,cl
1005cd70:	mov    dl,al
1005cd72:	movzx  ecx,dx
1005cd75:	movzx  ax,BYTE PTR [esi]
1005cd79:	movzx  eax,ax
1005cd7c:	movzx  edx,al
1005cd7f:	inc    esi
1005cd80:	test   BYTE PTR [edx+edi*1+0x1d],0x4
1005cd85:	je     0x1005cda5
1005cd87:	cmp    DWORD PTR [ebp+0x10],ebx
1005cd8a:	jne    0x1005cd90
1005cd8c:	xor    eax,eax
1005cd8e:	jmp    0x1005cda5
1005cd90:	mov    dl,BYTE PTR [esi]
1005cd92:	dec    DWORD PTR [ebp+0x10]
1005cd95:	cmp    dl,bl
1005cd97:	je     0x1005cd8c
1005cd99:	xor    ebx,ebx
1005cd9b:	mov    bh,al
1005cd9d:	inc    esi
1005cd9e:	mov    bl,dl
1005cda0:	movzx  eax,bx
1005cda3:	xor    ebx,ebx
1005cda5:	cmp    ax,cx
1005cda8:	jne    0x1005cdcb
1005cdaa:	cmp    cx,bx
1005cdad:	je     0x1005cdb8
1005cdaf:	cmp    DWORD PTR [ebp+0x10],ebx
1005cdb2:	jne    0x1005cd2e
1005cdb8:	cmp    BYTE PTR [ebp-0x4],bl
1005cdbb:	je     0x1005cdc4
1005cdbd:	mov    eax,DWORD PTR [ebp-0x8]
1005cdc0:	and    DWORD PTR [eax+0x70],0xfffffffd
1005cdc4:	xor    eax,eax
1005cdc6:	pop    esi
1005cdc7:	pop    edi
1005cdc8:	pop    ebx
1005cdc9:	leave  
1005cdca:	ret    
1005cdcb:	sbb    eax,eax
1005cdcd:	and    eax,0x2
1005cdd0:	dec    eax
1005cdd1:	cmp    BYTE PTR [ebp-0x4],bl
1005cdd4:	je     0x1005cdc6
1005cdd6:	mov    ecx,DWORD PTR [ebp-0x8]
1005cdd9:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005cddd:	jmp    0x1005cdc6
1005cddf:	push   0x0
1005cde1:	push   DWORD PTR [esp+0x10]
1005cde5:	push   DWORD PTR [esp+0x10]
1005cde9:	push   DWORD PTR [esp+0x10]
1005cded:	call   0x1005cc76
1005cdf2:	add    esp,0x10
1005cdf5:	ret    
1005cdf6:	push   ebp
1005cdf7:	mov    ebp,esp
1005cdf9:	sub    esp,0x28
1005cdfc:	mov    eax,ds:0x1007e030
1005ce01:	xor    eax,ebp
1005ce03:	mov    DWORD PTR [ebp-0x4],eax
1005ce06:	push   ebx
1005ce07:	push   esi
1005ce08:	mov    esi,DWORD PTR [ebp+0x8]
1005ce0b:	push   edi
1005ce0c:	push   DWORD PTR [ebp+0x10]
1005ce0f:	mov    edi,DWORD PTR [ebp+0xc]
1005ce12:	lea    ecx,[ebp-0x24]
1005ce15:	call   0x100454e5
1005ce1a:	lea    eax,[ebp-0x24]
1005ce1d:	push   eax
1005ce1e:	xor    ebx,ebx
1005ce20:	push   ebx
1005ce21:	push   ebx
1005ce22:	push   ebx
1005ce23:	push   ebx
1005ce24:	push   edi
1005ce25:	lea    eax,[ebp-0x28]
1005ce28:	push   eax
1005ce29:	lea    eax,[ebp-0x10]
1005ce2c:	push   eax
1005ce2d:	call   0x1005dd3d
1005ce32:	mov    DWORD PTR [ebp-0x14],eax
1005ce35:	lea    eax,[ebp-0x10]
1005ce38:	push   esi
1005ce39:	push   eax
1005ce3a:	call   0x1005d2b9
1005ce3f:	add    esp,0x28
1005ce42:	test   BYTE PTR [ebp-0x14],0x3
1005ce46:	jne    0x1005ce73
1005ce48:	cmp    eax,0x1
1005ce4b:	jne    0x1005ce5e
1005ce4d:	cmp    BYTE PTR [ebp-0x18],bl
1005ce50:	je     0x1005ce59
1005ce52:	mov    eax,DWORD PTR [ebp-0x1c]
1005ce55:	and    DWORD PTR [eax+0x70],0xfffffffd
1005ce59:	push   0x3
1005ce5b:	pop    eax
1005ce5c:	jmp    0x1005ce8d
1005ce5e:	cmp    eax,0x2
1005ce61:	jne    0x1005ce7f
1005ce63:	cmp    BYTE PTR [ebp-0x18],bl
1005ce66:	je     0x1005ce6f
1005ce68:	mov    eax,DWORD PTR [ebp-0x1c]
1005ce6b:	and    DWORD PTR [eax+0x70],0xfffffffd
1005ce6f:	push   0x4
1005ce71:	jmp    0x1005ce5b
1005ce73:	test   BYTE PTR [ebp-0x14],0x1
1005ce77:	jne    0x1005ce63
1005ce79:	test   BYTE PTR [ebp-0x14],0x2
1005ce7d:	jne    0x1005ce4d
1005ce7f:	cmp    BYTE PTR [ebp-0x18],bl
1005ce82:	je     0x1005ce8b
1005ce84:	mov    eax,DWORD PTR [ebp-0x1c]
1005ce87:	and    DWORD PTR [eax+0x70],0xfffffffd
1005ce8b:	xor    eax,eax
1005ce8d:	mov    ecx,DWORD PTR [ebp-0x4]
1005ce90:	pop    edi
1005ce91:	pop    esi
1005ce92:	xor    ecx,ebp
1005ce94:	pop    ebx
1005ce95:	call   0x10042e97
1005ce9a:	leave  
1005ce9b:	ret    
1005ce9c:	push   ebp
1005ce9d:	mov    ebp,esp
1005ce9f:	sub    esp,0x28
1005cea2:	mov    eax,ds:0x1007e030
1005cea7:	xor    eax,ebp
1005cea9:	mov    DWORD PTR [ebp-0x4],eax
1005ceac:	push   ebx
1005cead:	push   esi
1005ceae:	mov    esi,DWORD PTR [ebp+0x8]
1005ceb1:	push   edi
1005ceb2:	push   DWORD PTR [ebp+0x10]
1005ceb5:	mov    edi,DWORD PTR [ebp+0xc]
1005ceb8:	lea    ecx,[ebp-0x24]
1005cebb:	call   0x100454e5
1005cec0:	lea    eax,[ebp-0x24]
1005cec3:	push   eax
1005cec4:	xor    ebx,ebx
1005cec6:	push   ebx
1005cec7:	push   ebx
1005cec8:	push   ebx
1005cec9:	push   ebx
1005ceca:	push   edi
1005cecb:	lea    eax,[ebp-0x28]
1005cece:	push   eax
1005cecf:	lea    eax,[ebp-0x10]
1005ced2:	push   eax
1005ced3:	call   0x1005dd3d
1005ced8:	mov    DWORD PTR [ebp-0x14],eax
1005cedb:	lea    eax,[ebp-0x10]
1005cede:	push   esi
1005cedf:	push   eax
1005cee0:	call   0x1005d7fb
1005cee5:	add    esp,0x28
1005cee8:	test   BYTE PTR [ebp-0x14],0x3
1005ceec:	jne    0x1005cf19
1005ceee:	cmp    eax,0x1
1005cef1:	jne    0x1005cf04
1005cef3:	cmp    BYTE PTR [ebp-0x18],bl
1005cef6:	je     0x1005ceff
1005cef8:	mov    eax,DWORD PTR [ebp-0x1c]
1005cefb:	and    DWORD PTR [eax+0x70],0xfffffffd
1005ceff:	push   0x3
1005cf01:	pop    eax
1005cf02:	jmp    0x1005cf33
1005cf04:	cmp    eax,0x2
1005cf07:	jne    0x1005cf25
1005cf09:	cmp    BYTE PTR [ebp-0x18],bl
1005cf0c:	je     0x1005cf15
1005cf0e:	mov    eax,DWORD PTR [ebp-0x1c]
1005cf11:	and    DWORD PTR [eax+0x70],0xfffffffd
1005cf15:	push   0x4
1005cf17:	jmp    0x1005cf01
1005cf19:	test   BYTE PTR [ebp-0x14],0x1
1005cf1d:	jne    0x1005cf09
1005cf1f:	test   BYTE PTR [ebp-0x14],0x2
1005cf23:	jne    0x1005cef3
1005cf25:	cmp    BYTE PTR [ebp-0x18],bl
1005cf28:	je     0x1005cf31
1005cf2a:	mov    eax,DWORD PTR [ebp-0x1c]
1005cf2d:	and    DWORD PTR [eax+0x70],0xfffffffd
1005cf31:	xor    eax,eax
1005cf33:	mov    ecx,DWORD PTR [ebp-0x4]
1005cf36:	pop    edi
1005cf37:	pop    esi
1005cf38:	xor    ecx,ebp
1005cf3a:	pop    ebx
1005cf3b:	call   0x10042e97
1005cf40:	leave  
1005cf41:	ret    
1005cf42:	push   ebp
1005cf43:	mov    ebp,esp
1005cf45:	mov    ecx,DWORD PTR [ebp+0x14]
1005cf48:	push   ebx
1005cf49:	push   esi
1005cf4a:	mov    esi,DWORD PTR [ebp+0x8]
1005cf4d:	xor    ebx,ebx
1005cf4f:	cmp    esi,ebx
1005cf51:	push   edi
1005cf52:	mov    edi,DWORD PTR [ecx+0xc]
1005cf55:	jne    0x1005cf75
1005cf57:	call   0x10046b55
1005cf5c:	push   0x16
1005cf5e:	pop    esi
1005cf5f:	mov    DWORD PTR [eax],esi
1005cf61:	push   ebx
1005cf62:	push   ebx
1005cf63:	push   ebx
1005cf64:	push   ebx
1005cf65:	push   ebx
1005cf66:	call   0x1004338c
1005cf6b:	add    esp,0x14
1005cf6e:	mov    eax,esi
1005cf70:	jmp    0x1005cffa
1005cf75:	cmp    DWORD PTR [ebp+0xc],ebx
1005cf78:	jbe    0x1005cf57
1005cf7a:	mov    edx,DWORD PTR [ebp+0x10]
1005cf7d:	cmp    edx,ebx
1005cf7f:	mov    BYTE PTR [esi],bl
1005cf81:	jle    0x1005cf87
1005cf83:	mov    eax,edx
1005cf85:	jmp    0x1005cf89
1005cf87:	xor    eax,eax
1005cf89:	inc    eax
1005cf8a:	cmp    DWORD PTR [ebp+0xc],eax
1005cf8d:	ja     0x1005cf9d
1005cf8f:	call   0x10046b55
1005cf94:	push   0x22
1005cf96:	pop    ecx
1005cf97:	mov    DWORD PTR [eax],ecx
1005cf99:	mov    esi,ecx
1005cf9b:	jmp    0x1005cf61
1005cf9d:	cmp    edx,ebx
1005cf9f:	mov    BYTE PTR [esi],0x30
1005cfa2:	lea    eax,[esi+0x1]
1005cfa5:	jle    0x1005cfc1
1005cfa7:	mov    cl,BYTE PTR [edi]
1005cfa9:	cmp    cl,bl
1005cfab:	je     0x1005cfb3
1005cfad:	movsx  ecx,cl
1005cfb0:	inc    edi
1005cfb1:	jmp    0x1005cfb6
1005cfb3:	push   0x30
1005cfb5:	pop    ecx
1005cfb6:	mov    BYTE PTR [eax],cl
1005cfb8:	inc    eax
1005cfb9:	dec    edx
1005cfba:	cmp    edx,ebx
1005cfbc:	jg     0x1005cfa7
1005cfbe:	mov    ecx,DWORD PTR [ebp+0x14]
1005cfc1:	cmp    edx,ebx
1005cfc3:	mov    BYTE PTR [eax],bl
1005cfc5:	jl     0x1005cfd9
1005cfc7:	cmp    BYTE PTR [edi],0x35
1005cfca:	jl     0x1005cfd9
1005cfcc:	jmp    0x1005cfd1
1005cfce:	mov    BYTE PTR [eax],0x30
1005cfd1:	dec    eax
1005cfd2:	cmp    BYTE PTR [eax],0x39
1005cfd5:	je     0x1005cfce
1005cfd7:	inc    BYTE PTR [eax]
1005cfd9:	cmp    BYTE PTR [esi],0x31
1005cfdc:	jne    0x1005cfe3
1005cfde:	inc    DWORD PTR [ecx+0x4]
1005cfe1:	jmp    0x1005cff8
1005cfe3:	lea    edi,[esi+0x1]
1005cfe6:	push   edi
1005cfe7:	call   0x10043010
1005cfec:	inc    eax
1005cfed:	push   eax
1005cfee:	push   edi
1005cfef:	push   esi
1005cff0:	call   0x100456c0
1005cff5:	add    esp,0x10
1005cff8:	xor    eax,eax
1005cffa:	pop    edi
1005cffb:	pop    esi
1005cffc:	pop    ebx
1005cffd:	pop    ebp
1005cffe:	ret    
1005cfff:	push   ebp
1005d000:	mov    ebp,esp
1005d002:	push   ecx
1005d003:	mov    edx,DWORD PTR [ebp+0xc]
1005d006:	movzx  eax,WORD PTR [edx+0x6]
1005d00a:	push   ebx
1005d00b:	mov    ecx,eax
1005d00d:	push   esi
1005d00e:	push   edi
1005d00f:	shr    ecx,0x4
1005d012:	and    eax,0x8000
1005d017:	mov    edi,0x7ff
1005d01c:	and    ecx,edi
1005d01e:	mov    DWORD PTR [ebp+0xc],eax
1005d021:	mov    eax,DWORD PTR [edx+0x4]
1005d024:	mov    edx,DWORD PTR [edx]
1005d026:	movzx  ebx,cx
1005d029:	mov    esi,0x80000000
1005d02e:	and    eax,0xfffff
1005d033:	test   ebx,ebx
1005d035:	mov    DWORD PTR [ebp-0x4],esi
1005d038:	je     0x1005d04d
1005d03a:	cmp    ebx,edi
1005d03c:	je     0x1005d046
1005d03e:	add    ecx,0x3c00
1005d044:	jmp    0x1005d06e
1005d046:	mov    edi,0x7fff
1005d04b:	jmp    0x1005d071
1005d04d:	xor    ebx,ebx
1005d04f:	cmp    eax,ebx
1005d051:	jne    0x1005d065
1005d053:	cmp    edx,ebx
1005d055:	jne    0x1005d065
1005d057:	mov    eax,DWORD PTR [ebp+0x8]
1005d05a:	mov    cx,WORD PTR [ebp+0xc]
1005d05e:	mov    DWORD PTR [eax+0x4],ebx
1005d061:	mov    DWORD PTR [eax],ebx
1005d063:	jmp    0x1005d0b1
1005d065:	add    ecx,0x3c01
1005d06b:	mov    DWORD PTR [ebp-0x4],ebx
1005d06e:	movzx  edi,cx
1005d071:	mov    ecx,edx
1005d073:	shr    ecx,0x15
1005d076:	shl    eax,0xb
1005d079:	or     ecx,eax
1005d07b:	or     ecx,DWORD PTR [ebp-0x4]
1005d07e:	mov    eax,DWORD PTR [ebp+0x8]
1005d081:	shl    edx,0xb
1005d084:	test   esi,ecx
1005d086:	mov    DWORD PTR [eax+0x4],ecx
1005d089:	mov    DWORD PTR [eax],edx
1005d08b:	jne    0x1005d0ac
1005d08d:	mov    ecx,DWORD PTR [eax]
1005d08f:	mov    edx,DWORD PTR [eax+0x4]
1005d092:	mov    ebx,ecx
1005d094:	add    edx,edx
1005d096:	shr    ebx,0x1f
1005d099:	or     edx,ebx
1005d09b:	add    ecx,ecx
1005d09d:	add    edi,0xffff
1005d0a3:	test   esi,edx
1005d0a5:	mov    DWORD PTR [eax+0x4],edx
1005d0a8:	mov    DWORD PTR [eax],ecx
1005d0aa:	je     0x1005d08d
1005d0ac:	mov    ecx,DWORD PTR [ebp+0xc]
1005d0af:	or     ecx,edi
1005d0b1:	pop    edi
1005d0b2:	pop    esi
1005d0b3:	mov    WORD PTR [eax+0x8],cx
1005d0b7:	pop    ebx
1005d0b8:	leave  
1005d0b9:	ret    
1005d0ba:	push   ebp
1005d0bb:	mov    ebp,esp
1005d0bd:	sub    esp,0x30
1005d0c0:	mov    eax,ds:0x1007e030
1005d0c5:	xor    eax,ebp
1005d0c7:	mov    DWORD PTR [ebp-0x4],eax
1005d0ca:	mov    eax,DWORD PTR [ebp+0x14]
1005d0cd:	push   ebx
1005d0ce:	mov    ebx,DWORD PTR [ebp+0x10]
1005d0d1:	push   esi
1005d0d2:	mov    DWORD PTR [ebp-0x30],eax
1005d0d5:	push   edi
1005d0d6:	lea    eax,[ebp+0x8]
1005d0d9:	push   eax
1005d0da:	lea    eax,[ebp-0x10]
1005d0dd:	push   eax
1005d0de:	call   0x1005cfff
1005d0e3:	pop    ecx
1005d0e4:	pop    ecx
1005d0e5:	lea    eax,[ebp-0x2c]
1005d0e8:	push   eax
1005d0e9:	push   0x0
1005d0eb:	push   0x11
1005d0ed:	sub    esp,0xc
1005d0f0:	lea    esi,[ebp-0x10]
1005d0f3:	mov    edi,esp
1005d0f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d0f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d0f7:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
1005d0f9:	call   0x1005e401
1005d0fe:	mov    esi,DWORD PTR [ebp-0x30]
1005d101:	mov    DWORD PTR [ebx+0x8],eax
1005d104:	movsx  eax,BYTE PTR [ebp-0x2a]
1005d108:	mov    DWORD PTR [ebx],eax
1005d10a:	movsx  eax,WORD PTR [ebp-0x2c]
1005d10e:	mov    DWORD PTR [ebx+0x4],eax
1005d111:	lea    eax,[ebp-0x28]
1005d114:	push   eax
1005d115:	push   DWORD PTR [ebp+0x18]
1005d118:	push   esi
1005d119:	call   0x10046b99
1005d11e:	add    esp,0x24
1005d121:	test   eax,eax
1005d123:	je     0x1005d134
1005d125:	xor    eax,eax
1005d127:	push   eax
1005d128:	push   eax
1005d129:	push   eax
1005d12a:	push   eax
1005d12b:	push   eax
1005d12c:	call   0x10043290
1005d131:	add    esp,0x14
1005d134:	mov    ecx,DWORD PTR [ebp-0x4]
1005d137:	pop    edi
1005d138:	mov    DWORD PTR [ebx+0xc],esi
1005d13b:	pop    esi
1005d13c:	mov    eax,ebx
1005d13e:	xor    ecx,ebp
1005d140:	pop    ebx
1005d141:	call   0x10042e97
1005d146:	leave  
1005d147:	ret    
1005d148:	int3   
1005d149:	int3   
1005d14a:	int3   
1005d14b:	int3   
1005d14c:	int3   
1005d14d:	int3   
1005d14e:	int3   
1005d14f:	int3   
1005d150:	push   edi
1005d151:	push   esi
1005d152:	push   ebp
1005d153:	xor    edi,edi
1005d155:	xor    ebp,ebp
1005d157:	mov    eax,DWORD PTR [esp+0x14]
1005d15b:	or     eax,eax
1005d15d:	jge    0x1005d174
1005d15f:	inc    edi
1005d160:	inc    ebp
1005d161:	mov    edx,DWORD PTR [esp+0x10]
1005d165:	neg    eax
1005d167:	neg    edx
1005d169:	sbb    eax,0x0
1005d16c:	mov    DWORD PTR [esp+0x14],eax
1005d170:	mov    DWORD PTR [esp+0x10],edx
1005d174:	mov    eax,DWORD PTR [esp+0x1c]
1005d178:	or     eax,eax
1005d17a:	jge    0x1005d190
1005d17c:	inc    edi
1005d17d:	mov    edx,DWORD PTR [esp+0x18]
1005d181:	neg    eax
1005d183:	neg    edx
1005d185:	sbb    eax,0x0
1005d188:	mov    DWORD PTR [esp+0x1c],eax
1005d18c:	mov    DWORD PTR [esp+0x18],edx
1005d190:	or     eax,eax
1005d192:	jne    0x1005d1bc
1005d194:	mov    ecx,DWORD PTR [esp+0x18]
1005d198:	mov    eax,DWORD PTR [esp+0x14]
1005d19c:	xor    edx,edx
1005d19e:	div    ecx
1005d1a0:	mov    ebx,eax
1005d1a2:	mov    eax,DWORD PTR [esp+0x10]
1005d1a6:	div    ecx
1005d1a8:	mov    esi,eax
1005d1aa:	mov    eax,ebx
1005d1ac:	mul    DWORD PTR [esp+0x18]
1005d1b0:	mov    ecx,eax
1005d1b2:	mov    eax,esi
1005d1b4:	mul    DWORD PTR [esp+0x18]
1005d1b8:	add    edx,ecx
1005d1ba:	jmp    0x1005d203
1005d1bc:	mov    ebx,eax
1005d1be:	mov    ecx,DWORD PTR [esp+0x18]
1005d1c2:	mov    edx,DWORD PTR [esp+0x14]
1005d1c6:	mov    eax,DWORD PTR [esp+0x10]
1005d1ca:	shr    ebx,1
1005d1cc:	rcr    ecx,1
1005d1ce:	shr    edx,1
1005d1d0:	rcr    eax,1
1005d1d2:	or     ebx,ebx
1005d1d4:	jne    0x1005d1ca
1005d1d6:	div    ecx
1005d1d8:	mov    esi,eax
1005d1da:	mul    DWORD PTR [esp+0x1c]
1005d1de:	mov    ecx,eax
1005d1e0:	mov    eax,DWORD PTR [esp+0x18]
1005d1e4:	mul    esi
1005d1e6:	add    edx,ecx
1005d1e8:	jb     0x1005d1f8
1005d1ea:	cmp    edx,DWORD PTR [esp+0x14]
1005d1ee:	ja     0x1005d1f8
1005d1f0:	jb     0x1005d201
1005d1f2:	cmp    eax,DWORD PTR [esp+0x10]
1005d1f6:	jbe    0x1005d201
1005d1f8:	dec    esi
1005d1f9:	sub    eax,DWORD PTR [esp+0x18]
1005d1fd:	sbb    edx,DWORD PTR [esp+0x1c]
1005d201:	xor    ebx,ebx
1005d203:	sub    eax,DWORD PTR [esp+0x10]
1005d207:	sbb    edx,DWORD PTR [esp+0x14]
1005d20b:	dec    ebp
1005d20c:	jns    0x1005d215
1005d20e:	neg    edx
1005d210:	neg    eax
1005d212:	sbb    edx,0x0
1005d215:	mov    ecx,edx
1005d217:	mov    edx,ebx
1005d219:	mov    ebx,ecx
1005d21b:	mov    ecx,eax
1005d21d:	mov    eax,esi
1005d21f:	dec    edi
1005d220:	jne    0x1005d229
1005d222:	neg    edx
1005d224:	neg    eax
1005d226:	sbb    edx,0x0
1005d229:	pop    ebp
1005d22a:	pop    esi
1005d22b:	pop    edi
1005d22c:	ret    0x10
1005d22f:	int3   
1005d230:	cmp    cl,0x40
1005d233:	jae    0x1005d24a
1005d235:	cmp    cl,0x20
1005d238:	jae    0x1005d240
1005d23a:	shrd   eax,edx,cl
1005d23d:	shr    edx,cl
1005d23f:	ret    
1005d240:	mov    eax,edx
1005d242:	xor    edx,edx
1005d244:	and    cl,0x1f
1005d247:	shr    eax,cl
1005d249:	ret    
1005d24a:	xor    eax,eax
1005d24c:	xor    edx,edx
1005d24e:	ret    
1005d24f:	push   ebp
1005d250:	mov    ebp,esp
1005d252:	mov    eax,DWORD PTR [ebp+0x10]
1005d255:	mov    ecx,DWORD PTR [ebp+0xc]
1005d258:	and    eax,0xfff7ffff
1005d25d:	and    ecx,eax
1005d25f:	test   ecx,0xfcf0fce0
1005d265:	push   esi
1005d266:	je     0x1005d299
1005d268:	push   edi
1005d269:	mov    edi,DWORD PTR [ebp+0x8]
1005d26c:	xor    esi,esi
1005d26e:	cmp    edi,esi
1005d270:	je     0x1005d27d
1005d272:	push   esi
1005d273:	push   esi
1005d274:	call   0x1005edf7
1005d279:	pop    ecx
1005d27a:	pop    ecx
1005d27b:	mov    DWORD PTR [edi],eax
1005d27d:	call   0x10046b55
1005d282:	push   0x16
1005d284:	pop    edi
1005d285:	push   esi
1005d286:	push   esi
1005d287:	push   esi
1005d288:	push   esi
1005d289:	push   esi
1005d28a:	mov    DWORD PTR [eax],edi
1005d28c:	call   0x1004338c
1005d291:	add    esp,0x14
1005d294:	mov    eax,edi
1005d296:	pop    edi
1005d297:	jmp    0x1005d2b6
1005d299:	mov    esi,DWORD PTR [ebp+0x8]
1005d29c:	test   esi,esi
1005d29e:	push   eax
1005d29f:	push   DWORD PTR [ebp+0xc]
1005d2a2:	je     0x1005d2ad
1005d2a4:	call   0x1005edf7
1005d2a9:	mov    DWORD PTR [esi],eax
1005d2ab:	jmp    0x1005d2b2
1005d2ad:	call   0x1005edf7
1005d2b2:	pop    ecx
1005d2b3:	pop    ecx
1005d2b4:	xor    eax,eax
1005d2b6:	pop    esi
1005d2b7:	pop    ebp
1005d2b8:	ret    
1005d2b9:	push   ebp
1005d2ba:	mov    ebp,esp
1005d2bc:	sub    esp,0x2c
1005d2bf:	mov    eax,DWORD PTR [ebp+0x8]
1005d2c2:	movzx  ecx,WORD PTR [eax+0xa]
1005d2c6:	push   ebx
1005d2c7:	mov    ebx,ecx
1005d2c9:	and    ecx,0x8000
1005d2cf:	mov    DWORD PTR [ebp-0x14],ecx
1005d2d2:	mov    ecx,DWORD PTR [eax+0x6]
1005d2d5:	mov    DWORD PTR [ebp-0x20],ecx
1005d2d8:	mov    ecx,DWORD PTR [eax+0x2]
1005d2db:	movzx  eax,WORD PTR [eax]
1005d2de:	and    ebx,0x7fff
1005d2e4:	sub    ebx,0x3fff
1005d2ea:	shl    eax,0x10
1005d2ed:	cmp    ebx,0xffffc001
1005d2f3:	push   edi
1005d2f4:	mov    DWORD PTR [ebp-0x1c],ecx
1005d2f7:	mov    DWORD PTR [ebp-0x18],eax
1005d2fa:	jne    0x1005d323
1005d2fc:	xor    ebx,ebx
1005d2fe:	xor    eax,eax
1005d300:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
1005d304:	jne    0x1005d313
1005d306:	inc    eax
1005d307:	cmp    eax,0x3
1005d30a:	jl     0x1005d300
1005d30c:	xor    eax,eax
1005d30e:	jmp    0x1005d7b8
1005d313:	xor    eax,eax
1005d315:	lea    edi,[ebp-0x20]
1005d318:	stos   DWORD PTR es:[edi],eax
1005d319:	stos   DWORD PTR es:[edi],eax
1005d31a:	push   0x2
1005d31c:	stos   DWORD PTR es:[edi],eax
1005d31d:	pop    eax
1005d31e:	jmp    0x1005d7b8
1005d323:	and    DWORD PTR [ebp+0x8],0x0
1005d327:	push   esi
1005d328:	lea    esi,[ebp-0x20]
1005d32b:	lea    edi,[ebp-0x2c]
1005d32e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d32f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d331:	mov    esi,DWORD PTR ds:0x1007f1f8
1005d337:	dec    esi
1005d338:	lea    ecx,[esi+0x1]
1005d33b:	mov    eax,ecx
1005d33d:	cdq    
1005d33e:	and    edx,0x1f
1005d341:	add    eax,edx
1005d343:	sar    eax,0x5
1005d346:	mov    edx,ecx
1005d348:	and    edx,0x8000001f
1005d34e:	mov    DWORD PTR [ebp-0x10],ebx
1005d351:	mov    DWORD PTR [ebp-0xc],eax
1005d354:	jns    0x1005d35b
1005d356:	dec    edx
1005d357:	or     edx,0xffffffe0
1005d35a:	inc    edx
1005d35b:	lea    edi,[ebp+eax*4-0x20]
1005d35f:	push   0x1f
1005d361:	xor    eax,eax
1005d363:	pop    ecx
1005d364:	sub    ecx,edx
1005d366:	inc    eax
1005d367:	shl    eax,cl
1005d369:	mov    DWORD PTR [ebp-0x8],ecx
1005d36c:	test   DWORD PTR [edi],eax
1005d36e:	je     0x1005d401
1005d374:	mov    eax,DWORD PTR [ebp-0xc]
1005d377:	or     edx,0xffffffff
1005d37a:	shl    edx,cl
1005d37c:	not    edx
1005d37e:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005d382:	jmp    0x1005d389
1005d384:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005d389:	jne    0x1005d393
1005d38b:	inc    eax
1005d38c:	cmp    eax,0x3
1005d38f:	jl     0x1005d384
1005d391:	jmp    0x1005d401
1005d393:	mov    eax,esi
1005d395:	cdq    
1005d396:	push   0x1f
1005d398:	pop    ecx
1005d399:	and    edx,ecx
1005d39b:	add    eax,edx
1005d39d:	sar    eax,0x5
1005d3a0:	and    esi,0x8000001f
1005d3a6:	jns    0x1005d3ad
1005d3a8:	dec    esi
1005d3a9:	or     esi,0xffffffe0
1005d3ac:	inc    esi
1005d3ad:	and    DWORD PTR [ebp-0x4],0x0
1005d3b1:	sub    ecx,esi
1005d3b3:	xor    edx,edx
1005d3b5:	inc    edx
1005d3b6:	shl    edx,cl
1005d3b8:	lea    ecx,[ebp+eax*4-0x20]
1005d3bc:	mov    esi,DWORD PTR [ecx]
1005d3be:	add    esi,edx
1005d3c0:	mov    DWORD PTR [ebp+0x8],esi
1005d3c3:	mov    esi,DWORD PTR [ecx]
1005d3c5:	cmp    DWORD PTR [ebp+0x8],esi
1005d3c8:	jb     0x1005d3ec
1005d3ca:	cmp    DWORD PTR [ebp+0x8],edx
1005d3cd:	jmp    0x1005d3ea
1005d3cf:	test   ecx,ecx
1005d3d1:	je     0x1005d3fe
1005d3d3:	and    DWORD PTR [ebp-0x4],0x0
1005d3d7:	lea    ecx,[ebp+eax*4-0x20]
1005d3db:	mov    edx,DWORD PTR [ecx]
1005d3dd:	lea    esi,[edx+0x1]
1005d3e0:	cmp    esi,edx
1005d3e2:	mov    DWORD PTR [ebp+0x8],esi
1005d3e5:	jb     0x1005d3ec
1005d3e7:	cmp    esi,0x1
1005d3ea:	jae    0x1005d3f3
1005d3ec:	mov    DWORD PTR [ebp-0x4],0x1
1005d3f3:	dec    eax
1005d3f4:	mov    edx,DWORD PTR [ebp+0x8]
1005d3f7:	mov    DWORD PTR [ecx],edx
1005d3f9:	mov    ecx,DWORD PTR [ebp-0x4]
1005d3fc:	jns    0x1005d3cf
1005d3fe:	mov    DWORD PTR [ebp+0x8],ecx
1005d401:	mov    ecx,DWORD PTR [ebp-0x8]
1005d404:	or     eax,0xffffffff
1005d407:	shl    eax,cl
1005d409:	and    DWORD PTR [edi],eax
1005d40b:	mov    eax,DWORD PTR [ebp-0xc]
1005d40e:	inc    eax
1005d40f:	cmp    eax,0x3
1005d412:	jge    0x1005d421
1005d414:	push   0x3
1005d416:	pop    ecx
1005d417:	lea    edi,[ebp+eax*4-0x20]
1005d41b:	sub    ecx,eax
1005d41d:	xor    eax,eax
1005d41f:	rep stos DWORD PTR es:[edi],eax
1005d421:	cmp    DWORD PTR [ebp+0x8],0x0
1005d425:	je     0x1005d428
1005d427:	inc    ebx
1005d428:	mov    eax,ds:0x1007f1f4
1005d42d:	mov    ecx,eax
1005d42f:	sub    ecx,DWORD PTR ds:0x1007f1f8
1005d435:	cmp    ebx,ecx
1005d437:	jge    0x1005d446
1005d439:	xor    eax,eax
1005d43b:	lea    edi,[ebp-0x20]
1005d43e:	stos   DWORD PTR es:[edi],eax
1005d43f:	stos   DWORD PTR es:[edi],eax
1005d440:	stos   DWORD PTR es:[edi],eax
1005d441:	jmp    0x1005d653
1005d446:	cmp    ebx,eax
1005d448:	jg     0x1005d65d
1005d44e:	sub    eax,DWORD PTR [ebp-0x10]
1005d451:	lea    esi,[ebp-0x2c]
1005d454:	mov    ecx,eax
1005d456:	lea    edi,[ebp-0x20]
1005d459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d45a:	cdq    
1005d45b:	and    edx,0x1f
1005d45e:	add    eax,edx
1005d460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d461:	mov    edx,ecx
1005d463:	sar    eax,0x5
1005d466:	and    edx,0x8000001f
1005d46c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d46d:	jns    0x1005d474
1005d46f:	dec    edx
1005d470:	or     edx,0xffffffe0
1005d473:	inc    edx
1005d474:	and    DWORD PTR [ebp-0xc],0x0
1005d478:	and    DWORD PTR [ebp+0x8],0x0
1005d47c:	or     edi,0xffffffff
1005d47f:	mov    ecx,edx
1005d481:	shl    edi,cl
1005d483:	mov    DWORD PTR [ebp-0x4],0x20
1005d48a:	sub    DWORD PTR [ebp-0x4],edx
1005d48d:	not    edi
1005d48f:	mov    ebx,DWORD PTR [ebp+0x8]
1005d492:	lea    ebx,[ebp+ebx*4-0x20]
1005d496:	mov    esi,DWORD PTR [ebx]
1005d498:	mov    ecx,esi
1005d49a:	and    ecx,edi
1005d49c:	mov    DWORD PTR [ebp-0x10],ecx
1005d49f:	mov    ecx,edx
1005d4a1:	shr    esi,cl
1005d4a3:	mov    ecx,DWORD PTR [ebp-0x4]
1005d4a6:	or     esi,DWORD PTR [ebp-0xc]
1005d4a9:	mov    DWORD PTR [ebx],esi
1005d4ab:	mov    esi,DWORD PTR [ebp-0x10]
1005d4ae:	shl    esi,cl
1005d4b0:	inc    DWORD PTR [ebp+0x8]
1005d4b3:	cmp    DWORD PTR [ebp+0x8],0x3
1005d4b7:	mov    DWORD PTR [ebp-0xc],esi
1005d4ba:	jl     0x1005d48f
1005d4bc:	mov    esi,eax
1005d4be:	push   0x2
1005d4c0:	shl    esi,0x2
1005d4c3:	lea    ecx,[ebp-0x18]
1005d4c6:	pop    edx
1005d4c7:	sub    ecx,esi
1005d4c9:	cmp    edx,eax
1005d4cb:	jl     0x1005d4d5
1005d4cd:	mov    esi,DWORD PTR [ecx]
1005d4cf:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005d4d3:	jmp    0x1005d4da
1005d4d5:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005d4da:	dec    edx
1005d4db:	sub    ecx,0x4
1005d4de:	test   edx,edx
1005d4e0:	jge    0x1005d4c9
1005d4e2:	mov    esi,DWORD PTR ds:0x1007f1f8
1005d4e8:	dec    esi
1005d4e9:	lea    ecx,[esi+0x1]
1005d4ec:	mov    eax,ecx
1005d4ee:	cdq    
1005d4ef:	and    edx,0x1f
1005d4f2:	add    eax,edx
1005d4f4:	sar    eax,0x5
1005d4f7:	mov    edx,ecx
1005d4f9:	and    edx,0x8000001f
1005d4ff:	mov    DWORD PTR [ebp-0xc],eax
1005d502:	jns    0x1005d509
1005d504:	dec    edx
1005d505:	or     edx,0xffffffe0
1005d508:	inc    edx
1005d509:	push   0x1f
1005d50b:	pop    ecx
1005d50c:	sub    ecx,edx
1005d50e:	xor    edx,edx
1005d510:	inc    edx
1005d511:	shl    edx,cl
1005d513:	lea    ebx,[ebp+eax*4-0x20]
1005d517:	mov    DWORD PTR [ebp-0x10],ecx
1005d51a:	test   DWORD PTR [ebx],edx
1005d51c:	je     0x1005d5a4
1005d522:	or     edx,0xffffffff
1005d525:	shl    edx,cl
1005d527:	not    edx
1005d529:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005d52d:	jmp    0x1005d534
1005d52f:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005d534:	jne    0x1005d53e
1005d536:	inc    eax
1005d537:	cmp    eax,0x3
1005d53a:	jl     0x1005d52f
1005d53c:	jmp    0x1005d5a4
1005d53e:	mov    eax,esi
1005d540:	cdq    
1005d541:	push   0x1f
1005d543:	pop    ecx
1005d544:	and    edx,ecx
1005d546:	add    eax,edx
1005d548:	sar    eax,0x5
1005d54b:	and    esi,0x8000001f
1005d551:	jns    0x1005d558
1005d553:	dec    esi
1005d554:	or     esi,0xffffffe0
1005d557:	inc    esi
1005d558:	and    DWORD PTR [ebp+0x8],0x0
1005d55c:	xor    edx,edx
1005d55e:	sub    ecx,esi
1005d560:	inc    edx
1005d561:	shl    edx,cl
1005d563:	lea    ecx,[ebp+eax*4-0x20]
1005d567:	mov    esi,DWORD PTR [ecx]
1005d569:	lea    edi,[esi+edx*1]
1005d56c:	cmp    edi,esi
1005d56e:	jb     0x1005d574
1005d570:	cmp    edi,edx
1005d572:	jae    0x1005d57b
1005d574:	mov    DWORD PTR [ebp+0x8],0x1
1005d57b:	mov    DWORD PTR [ecx],edi
1005d57d:	mov    ecx,DWORD PTR [ebp+0x8]
1005d580:	jmp    0x1005d5a1
1005d582:	test   ecx,ecx
1005d584:	je     0x1005d5a4
1005d586:	lea    ecx,[ebp+eax*4-0x20]
1005d58a:	mov    edx,DWORD PTR [ecx]
1005d58c:	lea    esi,[edx+0x1]
1005d58f:	xor    edi,edi
1005d591:	cmp    esi,edx
1005d593:	jb     0x1005d59a
1005d595:	cmp    esi,0x1
1005d598:	jae    0x1005d59d
1005d59a:	xor    edi,edi
1005d59c:	inc    edi
1005d59d:	mov    DWORD PTR [ecx],esi
1005d59f:	mov    ecx,edi
1005d5a1:	dec    eax
1005d5a2:	jns    0x1005d582
1005d5a4:	mov    ecx,DWORD PTR [ebp-0x10]
1005d5a7:	or     eax,0xffffffff
1005d5aa:	shl    eax,cl
1005d5ac:	and    DWORD PTR [ebx],eax
1005d5ae:	mov    eax,DWORD PTR [ebp-0xc]
1005d5b1:	inc    eax
1005d5b2:	cmp    eax,0x3
1005d5b5:	jge    0x1005d5c4
1005d5b7:	push   0x3
1005d5b9:	pop    ecx
1005d5ba:	lea    edi,[ebp+eax*4-0x20]
1005d5be:	sub    ecx,eax
1005d5c0:	xor    eax,eax
1005d5c2:	rep stos DWORD PTR es:[edi],eax
1005d5c4:	mov    ecx,DWORD PTR ds:0x1007f1fc
1005d5ca:	inc    ecx
1005d5cb:	mov    eax,ecx
1005d5cd:	cdq    
1005d5ce:	and    edx,0x1f
1005d5d1:	add    eax,edx
1005d5d3:	mov    edx,ecx
1005d5d5:	sar    eax,0x5
1005d5d8:	and    edx,0x8000001f
1005d5de:	jns    0x1005d5e5
1005d5e0:	dec    edx
1005d5e1:	or     edx,0xffffffe0
1005d5e4:	inc    edx
1005d5e5:	and    DWORD PTR [ebp-0xc],0x0
1005d5e9:	and    DWORD PTR [ebp+0x8],0x0
1005d5ed:	or     edi,0xffffffff
1005d5f0:	mov    ecx,edx
1005d5f2:	shl    edi,cl
1005d5f4:	mov    DWORD PTR [ebp-0x4],0x20
1005d5fb:	sub    DWORD PTR [ebp-0x4],edx
1005d5fe:	not    edi
1005d600:	mov    ebx,DWORD PTR [ebp+0x8]
1005d603:	lea    ebx,[ebp+ebx*4-0x20]
1005d607:	mov    esi,DWORD PTR [ebx]
1005d609:	mov    ecx,esi
1005d60b:	and    ecx,edi
1005d60d:	mov    DWORD PTR [ebp-0x10],ecx
1005d610:	mov    ecx,edx
1005d612:	shr    esi,cl
1005d614:	mov    ecx,DWORD PTR [ebp-0x4]
1005d617:	or     esi,DWORD PTR [ebp-0xc]
1005d61a:	mov    DWORD PTR [ebx],esi
1005d61c:	mov    esi,DWORD PTR [ebp-0x10]
1005d61f:	shl    esi,cl
1005d621:	inc    DWORD PTR [ebp+0x8]
1005d624:	cmp    DWORD PTR [ebp+0x8],0x3
1005d628:	mov    DWORD PTR [ebp-0xc],esi
1005d62b:	jl     0x1005d600
1005d62d:	mov    esi,eax
1005d62f:	push   0x2
1005d631:	shl    esi,0x2
1005d634:	lea    ecx,[ebp-0x18]
1005d637:	pop    edx
1005d638:	sub    ecx,esi
1005d63a:	cmp    edx,eax
1005d63c:	jl     0x1005d646
1005d63e:	mov    esi,DWORD PTR [ecx]
1005d640:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005d644:	jmp    0x1005d64b
1005d646:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005d64b:	dec    edx
1005d64c:	sub    ecx,0x4
1005d64f:	test   edx,edx
1005d651:	jge    0x1005d63a
1005d653:	push   0x2
1005d655:	xor    ebx,ebx
1005d657:	pop    eax
1005d658:	jmp    0x1005d7b7
1005d65d:	cmp    ebx,DWORD PTR ds:0x1007f1f0
1005d663:	mov    ecx,DWORD PTR ds:0x1007f1fc
1005d669:	jl     0x1005d71c
1005d66f:	xor    eax,eax
1005d671:	lea    edi,[ebp-0x20]
1005d674:	stos   DWORD PTR es:[edi],eax
1005d675:	stos   DWORD PTR es:[edi],eax
1005d676:	stos   DWORD PTR es:[edi],eax
1005d677:	or     DWORD PTR [ebp-0x20],0x80000000
1005d67e:	mov    eax,ecx
1005d680:	cdq    
1005d681:	and    edx,0x1f
1005d684:	add    eax,edx
1005d686:	mov    edx,ecx
1005d688:	sar    eax,0x5
1005d68b:	and    edx,0x8000001f
1005d691:	jns    0x1005d698
1005d693:	dec    edx
1005d694:	or     edx,0xffffffe0
1005d697:	inc    edx
1005d698:	and    DWORD PTR [ebp-0xc],0x0
1005d69c:	and    DWORD PTR [ebp+0x8],0x0
1005d6a0:	or     edi,0xffffffff
1005d6a3:	mov    ecx,edx
1005d6a5:	shl    edi,cl
1005d6a7:	mov    DWORD PTR [ebp-0x4],0x20
1005d6ae:	sub    DWORD PTR [ebp-0x4],edx
1005d6b1:	not    edi
1005d6b3:	mov    ebx,DWORD PTR [ebp+0x8]
1005d6b6:	lea    ebx,[ebp+ebx*4-0x20]
1005d6ba:	mov    esi,DWORD PTR [ebx]
1005d6bc:	mov    ecx,esi
1005d6be:	and    ecx,edi
1005d6c0:	mov    DWORD PTR [ebp-0x10],ecx
1005d6c3:	mov    ecx,edx
1005d6c5:	shr    esi,cl
1005d6c7:	mov    ecx,DWORD PTR [ebp-0x4]
1005d6ca:	or     esi,DWORD PTR [ebp-0xc]
1005d6cd:	mov    DWORD PTR [ebx],esi
1005d6cf:	mov    esi,DWORD PTR [ebp-0x10]
1005d6d2:	shl    esi,cl
1005d6d4:	inc    DWORD PTR [ebp+0x8]
1005d6d7:	cmp    DWORD PTR [ebp+0x8],0x3
1005d6db:	mov    DWORD PTR [ebp-0xc],esi
1005d6de:	jl     0x1005d6b3
1005d6e0:	mov    esi,eax
1005d6e2:	push   0x2
1005d6e4:	shl    esi,0x2
1005d6e7:	lea    ecx,[ebp-0x18]
1005d6ea:	pop    edx
1005d6eb:	sub    ecx,esi
1005d6ed:	cmp    edx,eax
1005d6ef:	jl     0x1005d6f9
1005d6f1:	mov    esi,DWORD PTR [ecx]
1005d6f3:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005d6f7:	jmp    0x1005d6fe
1005d6f9:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005d6fe:	dec    edx
1005d6ff:	sub    ecx,0x4
1005d702:	test   edx,edx
1005d704:	jge    0x1005d6ed
1005d706:	mov    eax,ds:0x1007f1f0
1005d70b:	mov    ecx,DWORD PTR ds:0x1007f204
1005d711:	lea    ebx,[ecx+eax*1]
1005d714:	xor    eax,eax
1005d716:	inc    eax
1005d717:	jmp    0x1005d7b7
1005d71c:	mov    eax,ds:0x1007f204
1005d721:	and    DWORD PTR [ebp-0x20],0x7fffffff
1005d728:	add    ebx,eax
1005d72a:	mov    eax,ecx
1005d72c:	cdq    
1005d72d:	and    edx,0x1f
1005d730:	add    eax,edx
1005d732:	mov    edx,ecx
1005d734:	sar    eax,0x5
1005d737:	and    edx,0x8000001f
1005d73d:	jns    0x1005d744
1005d73f:	dec    edx
1005d740:	or     edx,0xffffffe0
1005d743:	inc    edx
1005d744:	and    DWORD PTR [ebp-0xc],0x0
1005d748:	and    DWORD PTR [ebp+0x8],0x0
1005d74c:	or     esi,0xffffffff
1005d74f:	mov    ecx,edx
1005d751:	shl    esi,cl
1005d753:	mov    DWORD PTR [ebp-0x4],0x20
1005d75a:	sub    DWORD PTR [ebp-0x4],edx
1005d75d:	not    esi
1005d75f:	mov    ecx,DWORD PTR [ebp+0x8]
1005d762:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
1005d766:	mov    ecx,edi
1005d768:	and    ecx,esi
1005d76a:	mov    DWORD PTR [ebp-0x10],ecx
1005d76d:	mov    ecx,edx
1005d76f:	shr    edi,cl
1005d771:	mov    ecx,DWORD PTR [ebp+0x8]
1005d774:	or     edi,DWORD PTR [ebp-0xc]
1005d777:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
1005d77b:	mov    edi,DWORD PTR [ebp-0x10]
1005d77e:	mov    ecx,DWORD PTR [ebp-0x4]
1005d781:	shl    edi,cl
1005d783:	inc    DWORD PTR [ebp+0x8]
1005d786:	cmp    DWORD PTR [ebp+0x8],0x3
1005d78a:	mov    DWORD PTR [ebp-0xc],edi
1005d78d:	jl     0x1005d75f
1005d78f:	mov    esi,eax
1005d791:	push   0x2
1005d793:	shl    esi,0x2
1005d796:	lea    ecx,[ebp-0x18]
1005d799:	pop    edx
1005d79a:	sub    ecx,esi
1005d79c:	cmp    edx,eax
1005d79e:	jl     0x1005d7a8
1005d7a0:	mov    esi,DWORD PTR [ecx]
1005d7a2:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005d7a6:	jmp    0x1005d7ad
1005d7a8:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005d7ad:	dec    edx
1005d7ae:	sub    ecx,0x4
1005d7b1:	test   edx,edx
1005d7b3:	jge    0x1005d79c
1005d7b5:	xor    eax,eax
1005d7b7:	pop    esi
1005d7b8:	push   0x1f
1005d7ba:	pop    ecx
1005d7bb:	sub    ecx,DWORD PTR ds:0x1007f1fc
1005d7c1:	shl    ebx,cl
1005d7c3:	mov    ecx,DWORD PTR [ebp-0x14]
1005d7c6:	neg    ecx
1005d7c8:	sbb    ecx,ecx
1005d7ca:	and    ecx,0x80000000
1005d7d0:	or     ebx,ecx
1005d7d2:	mov    ecx,DWORD PTR ds:0x1007f200
1005d7d8:	or     ebx,DWORD PTR [ebp-0x20]
1005d7db:	cmp    ecx,0x40
1005d7de:	jne    0x1005d7ed
1005d7e0:	mov    ecx,DWORD PTR [ebp+0xc]
1005d7e3:	mov    edx,DWORD PTR [ebp-0x1c]
1005d7e6:	mov    DWORD PTR [ecx+0x4],ebx
1005d7e9:	mov    DWORD PTR [ecx],edx
1005d7eb:	jmp    0x1005d7f7
1005d7ed:	cmp    ecx,0x20
1005d7f0:	jne    0x1005d7f7
1005d7f2:	mov    ecx,DWORD PTR [ebp+0xc]
1005d7f5:	mov    DWORD PTR [ecx],ebx
1005d7f7:	pop    edi
1005d7f8:	pop    ebx
1005d7f9:	leave  
1005d7fa:	ret    
1005d7fb:	push   ebp
1005d7fc:	mov    ebp,esp
1005d7fe:	sub    esp,0x2c
1005d801:	mov    eax,DWORD PTR [ebp+0x8]
1005d804:	movzx  ecx,WORD PTR [eax+0xa]
1005d808:	push   ebx
1005d809:	mov    ebx,ecx
1005d80b:	and    ecx,0x8000
1005d811:	mov    DWORD PTR [ebp-0x14],ecx
1005d814:	mov    ecx,DWORD PTR [eax+0x6]
1005d817:	mov    DWORD PTR [ebp-0x20],ecx
1005d81a:	mov    ecx,DWORD PTR [eax+0x2]
1005d81d:	movzx  eax,WORD PTR [eax]
1005d820:	and    ebx,0x7fff
1005d826:	sub    ebx,0x3fff
1005d82c:	shl    eax,0x10
1005d82f:	cmp    ebx,0xffffc001
1005d835:	push   edi
1005d836:	mov    DWORD PTR [ebp-0x1c],ecx
1005d839:	mov    DWORD PTR [ebp-0x18],eax
1005d83c:	jne    0x1005d865
1005d83e:	xor    ebx,ebx
1005d840:	xor    eax,eax
1005d842:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
1005d846:	jne    0x1005d855
1005d848:	inc    eax
1005d849:	cmp    eax,0x3
1005d84c:	jl     0x1005d842
1005d84e:	xor    eax,eax
1005d850:	jmp    0x1005dcfa
1005d855:	xor    eax,eax
1005d857:	lea    edi,[ebp-0x20]
1005d85a:	stos   DWORD PTR es:[edi],eax
1005d85b:	stos   DWORD PTR es:[edi],eax
1005d85c:	push   0x2
1005d85e:	stos   DWORD PTR es:[edi],eax
1005d85f:	pop    eax
1005d860:	jmp    0x1005dcfa
1005d865:	and    DWORD PTR [ebp+0x8],0x0
1005d869:	push   esi
1005d86a:	lea    esi,[ebp-0x20]
1005d86d:	lea    edi,[ebp-0x2c]
1005d870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d873:	mov    esi,DWORD PTR ds:0x1007f210
1005d879:	dec    esi
1005d87a:	lea    ecx,[esi+0x1]
1005d87d:	mov    eax,ecx
1005d87f:	cdq    
1005d880:	and    edx,0x1f
1005d883:	add    eax,edx
1005d885:	sar    eax,0x5
1005d888:	mov    edx,ecx
1005d88a:	and    edx,0x8000001f
1005d890:	mov    DWORD PTR [ebp-0x10],ebx
1005d893:	mov    DWORD PTR [ebp-0xc],eax
1005d896:	jns    0x1005d89d
1005d898:	dec    edx
1005d899:	or     edx,0xffffffe0
1005d89c:	inc    edx
1005d89d:	lea    edi,[ebp+eax*4-0x20]
1005d8a1:	push   0x1f
1005d8a3:	xor    eax,eax
1005d8a5:	pop    ecx
1005d8a6:	sub    ecx,edx
1005d8a8:	inc    eax
1005d8a9:	shl    eax,cl
1005d8ab:	mov    DWORD PTR [ebp-0x8],ecx
1005d8ae:	test   DWORD PTR [edi],eax
1005d8b0:	je     0x1005d943
1005d8b6:	mov    eax,DWORD PTR [ebp-0xc]
1005d8b9:	or     edx,0xffffffff
1005d8bc:	shl    edx,cl
1005d8be:	not    edx
1005d8c0:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005d8c4:	jmp    0x1005d8cb
1005d8c6:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005d8cb:	jne    0x1005d8d5
1005d8cd:	inc    eax
1005d8ce:	cmp    eax,0x3
1005d8d1:	jl     0x1005d8c6
1005d8d3:	jmp    0x1005d943
1005d8d5:	mov    eax,esi
1005d8d7:	cdq    
1005d8d8:	push   0x1f
1005d8da:	pop    ecx
1005d8db:	and    edx,ecx
1005d8dd:	add    eax,edx
1005d8df:	sar    eax,0x5
1005d8e2:	and    esi,0x8000001f
1005d8e8:	jns    0x1005d8ef
1005d8ea:	dec    esi
1005d8eb:	or     esi,0xffffffe0
1005d8ee:	inc    esi
1005d8ef:	and    DWORD PTR [ebp-0x4],0x0
1005d8f3:	sub    ecx,esi
1005d8f5:	xor    edx,edx
1005d8f7:	inc    edx
1005d8f8:	shl    edx,cl
1005d8fa:	lea    ecx,[ebp+eax*4-0x20]
1005d8fe:	mov    esi,DWORD PTR [ecx]
1005d900:	add    esi,edx
1005d902:	mov    DWORD PTR [ebp+0x8],esi
1005d905:	mov    esi,DWORD PTR [ecx]
1005d907:	cmp    DWORD PTR [ebp+0x8],esi
1005d90a:	jb     0x1005d92e
1005d90c:	cmp    DWORD PTR [ebp+0x8],edx
1005d90f:	jmp    0x1005d92c
1005d911:	test   ecx,ecx
1005d913:	je     0x1005d940
1005d915:	and    DWORD PTR [ebp-0x4],0x0
1005d919:	lea    ecx,[ebp+eax*4-0x20]
1005d91d:	mov    edx,DWORD PTR [ecx]
1005d91f:	lea    esi,[edx+0x1]
1005d922:	cmp    esi,edx
1005d924:	mov    DWORD PTR [ebp+0x8],esi
1005d927:	jb     0x1005d92e
1005d929:	cmp    esi,0x1
1005d92c:	jae    0x1005d935
1005d92e:	mov    DWORD PTR [ebp-0x4],0x1
1005d935:	dec    eax
1005d936:	mov    edx,DWORD PTR [ebp+0x8]
1005d939:	mov    DWORD PTR [ecx],edx
1005d93b:	mov    ecx,DWORD PTR [ebp-0x4]
1005d93e:	jns    0x1005d911
1005d940:	mov    DWORD PTR [ebp+0x8],ecx
1005d943:	mov    ecx,DWORD PTR [ebp-0x8]
1005d946:	or     eax,0xffffffff
1005d949:	shl    eax,cl
1005d94b:	and    DWORD PTR [edi],eax
1005d94d:	mov    eax,DWORD PTR [ebp-0xc]
1005d950:	inc    eax
1005d951:	cmp    eax,0x3
1005d954:	jge    0x1005d963
1005d956:	push   0x3
1005d958:	pop    ecx
1005d959:	lea    edi,[ebp+eax*4-0x20]
1005d95d:	sub    ecx,eax
1005d95f:	xor    eax,eax
1005d961:	rep stos DWORD PTR es:[edi],eax
1005d963:	cmp    DWORD PTR [ebp+0x8],0x0
1005d967:	je     0x1005d96a
1005d969:	inc    ebx
1005d96a:	mov    eax,ds:0x1007f20c
1005d96f:	mov    ecx,eax
1005d971:	sub    ecx,DWORD PTR ds:0x1007f210
1005d977:	cmp    ebx,ecx
1005d979:	jge    0x1005d988
1005d97b:	xor    eax,eax
1005d97d:	lea    edi,[ebp-0x20]
1005d980:	stos   DWORD PTR es:[edi],eax
1005d981:	stos   DWORD PTR es:[edi],eax
1005d982:	stos   DWORD PTR es:[edi],eax
1005d983:	jmp    0x1005db95
1005d988:	cmp    ebx,eax
1005d98a:	jg     0x1005db9f
1005d990:	sub    eax,DWORD PTR [ebp-0x10]
1005d993:	lea    esi,[ebp-0x2c]
1005d996:	mov    ecx,eax
1005d998:	lea    edi,[ebp-0x20]
1005d99b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d99c:	cdq    
1005d99d:	and    edx,0x1f
1005d9a0:	add    eax,edx
1005d9a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d9a3:	mov    edx,ecx
1005d9a5:	sar    eax,0x5
1005d9a8:	and    edx,0x8000001f
1005d9ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d9af:	jns    0x1005d9b6
1005d9b1:	dec    edx
1005d9b2:	or     edx,0xffffffe0
1005d9b5:	inc    edx
1005d9b6:	and    DWORD PTR [ebp-0xc],0x0
1005d9ba:	and    DWORD PTR [ebp+0x8],0x0
1005d9be:	or     edi,0xffffffff
1005d9c1:	mov    ecx,edx
1005d9c3:	shl    edi,cl
1005d9c5:	mov    DWORD PTR [ebp-0x4],0x20
1005d9cc:	sub    DWORD PTR [ebp-0x4],edx
1005d9cf:	not    edi
1005d9d1:	mov    ebx,DWORD PTR [ebp+0x8]
1005d9d4:	lea    ebx,[ebp+ebx*4-0x20]
1005d9d8:	mov    esi,DWORD PTR [ebx]
1005d9da:	mov    ecx,esi
1005d9dc:	and    ecx,edi
1005d9de:	mov    DWORD PTR [ebp-0x10],ecx
1005d9e1:	mov    ecx,edx
1005d9e3:	shr    esi,cl
1005d9e5:	mov    ecx,DWORD PTR [ebp-0x4]
1005d9e8:	or     esi,DWORD PTR [ebp-0xc]
1005d9eb:	mov    DWORD PTR [ebx],esi
1005d9ed:	mov    esi,DWORD PTR [ebp-0x10]
1005d9f0:	shl    esi,cl
1005d9f2:	inc    DWORD PTR [ebp+0x8]
1005d9f5:	cmp    DWORD PTR [ebp+0x8],0x3
1005d9f9:	mov    DWORD PTR [ebp-0xc],esi
1005d9fc:	jl     0x1005d9d1
1005d9fe:	mov    esi,eax
1005da00:	push   0x2
1005da02:	shl    esi,0x2
1005da05:	lea    ecx,[ebp-0x18]
1005da08:	pop    edx
1005da09:	sub    ecx,esi
1005da0b:	cmp    edx,eax
1005da0d:	jl     0x1005da17
1005da0f:	mov    esi,DWORD PTR [ecx]
1005da11:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005da15:	jmp    0x1005da1c
1005da17:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005da1c:	dec    edx
1005da1d:	sub    ecx,0x4
1005da20:	test   edx,edx
1005da22:	jge    0x1005da0b
1005da24:	mov    esi,DWORD PTR ds:0x1007f210
1005da2a:	dec    esi
1005da2b:	lea    ecx,[esi+0x1]
1005da2e:	mov    eax,ecx
1005da30:	cdq    
1005da31:	and    edx,0x1f
1005da34:	add    eax,edx
1005da36:	sar    eax,0x5
1005da39:	mov    edx,ecx
1005da3b:	and    edx,0x8000001f
1005da41:	mov    DWORD PTR [ebp-0xc],eax
1005da44:	jns    0x1005da4b
1005da46:	dec    edx
1005da47:	or     edx,0xffffffe0
1005da4a:	inc    edx
1005da4b:	push   0x1f
1005da4d:	pop    ecx
1005da4e:	sub    ecx,edx
1005da50:	xor    edx,edx
1005da52:	inc    edx
1005da53:	shl    edx,cl
1005da55:	lea    ebx,[ebp+eax*4-0x20]
1005da59:	mov    DWORD PTR [ebp-0x10],ecx
1005da5c:	test   DWORD PTR [ebx],edx
1005da5e:	je     0x1005dae6
1005da64:	or     edx,0xffffffff
1005da67:	shl    edx,cl
1005da69:	not    edx
1005da6b:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005da6f:	jmp    0x1005da76
1005da71:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005da76:	jne    0x1005da80
1005da78:	inc    eax
1005da79:	cmp    eax,0x3
1005da7c:	jl     0x1005da71
1005da7e:	jmp    0x1005dae6
1005da80:	mov    eax,esi
1005da82:	cdq    
1005da83:	push   0x1f
1005da85:	pop    ecx
1005da86:	and    edx,ecx
1005da88:	add    eax,edx
1005da8a:	sar    eax,0x5
1005da8d:	and    esi,0x8000001f
1005da93:	jns    0x1005da9a
1005da95:	dec    esi
1005da96:	or     esi,0xffffffe0
1005da99:	inc    esi
1005da9a:	and    DWORD PTR [ebp+0x8],0x0
1005da9e:	xor    edx,edx
1005daa0:	sub    ecx,esi
1005daa2:	inc    edx
1005daa3:	shl    edx,cl
1005daa5:	lea    ecx,[ebp+eax*4-0x20]
1005daa9:	mov    esi,DWORD PTR [ecx]
1005daab:	lea    edi,[esi+edx*1]
1005daae:	cmp    edi,esi
1005dab0:	jb     0x1005dab6
1005dab2:	cmp    edi,edx
1005dab4:	jae    0x1005dabd
1005dab6:	mov    DWORD PTR [ebp+0x8],0x1
1005dabd:	mov    DWORD PTR [ecx],edi
1005dabf:	mov    ecx,DWORD PTR [ebp+0x8]
1005dac2:	jmp    0x1005dae3
1005dac4:	test   ecx,ecx
1005dac6:	je     0x1005dae6
1005dac8:	lea    ecx,[ebp+eax*4-0x20]
1005dacc:	mov    edx,DWORD PTR [ecx]
1005dace:	lea    esi,[edx+0x1]
1005dad1:	xor    edi,edi
1005dad3:	cmp    esi,edx
1005dad5:	jb     0x1005dadc
1005dad7:	cmp    esi,0x1
1005dada:	jae    0x1005dadf
1005dadc:	xor    edi,edi
1005dade:	inc    edi
1005dadf:	mov    DWORD PTR [ecx],esi
1005dae1:	mov    ecx,edi
1005dae3:	dec    eax
1005dae4:	jns    0x1005dac4
1005dae6:	mov    ecx,DWORD PTR [ebp-0x10]
1005dae9:	or     eax,0xffffffff
1005daec:	shl    eax,cl
1005daee:	and    DWORD PTR [ebx],eax
1005daf0:	mov    eax,DWORD PTR [ebp-0xc]
1005daf3:	inc    eax
1005daf4:	cmp    eax,0x3
1005daf7:	jge    0x1005db06
1005daf9:	push   0x3
1005dafb:	pop    ecx
1005dafc:	lea    edi,[ebp+eax*4-0x20]
1005db00:	sub    ecx,eax
1005db02:	xor    eax,eax
1005db04:	rep stos DWORD PTR es:[edi],eax
1005db06:	mov    ecx,DWORD PTR ds:0x1007f214
1005db0c:	inc    ecx
1005db0d:	mov    eax,ecx
1005db0f:	cdq    
1005db10:	and    edx,0x1f
1005db13:	add    eax,edx
1005db15:	mov    edx,ecx
1005db17:	sar    eax,0x5
1005db1a:	and    edx,0x8000001f
1005db20:	jns    0x1005db27
1005db22:	dec    edx
1005db23:	or     edx,0xffffffe0
1005db26:	inc    edx
1005db27:	and    DWORD PTR [ebp-0xc],0x0
1005db2b:	and    DWORD PTR [ebp+0x8],0x0
1005db2f:	or     edi,0xffffffff
1005db32:	mov    ecx,edx
1005db34:	shl    edi,cl
1005db36:	mov    DWORD PTR [ebp-0x4],0x20
1005db3d:	sub    DWORD PTR [ebp-0x4],edx
1005db40:	not    edi
1005db42:	mov    ebx,DWORD PTR [ebp+0x8]
1005db45:	lea    ebx,[ebp+ebx*4-0x20]
1005db49:	mov    esi,DWORD PTR [ebx]
1005db4b:	mov    ecx,esi
1005db4d:	and    ecx,edi
1005db4f:	mov    DWORD PTR [ebp-0x10],ecx
1005db52:	mov    ecx,edx
1005db54:	shr    esi,cl
1005db56:	mov    ecx,DWORD PTR [ebp-0x4]
1005db59:	or     esi,DWORD PTR [ebp-0xc]
1005db5c:	mov    DWORD PTR [ebx],esi
1005db5e:	mov    esi,DWORD PTR [ebp-0x10]
1005db61:	shl    esi,cl
1005db63:	inc    DWORD PTR [ebp+0x8]
1005db66:	cmp    DWORD PTR [ebp+0x8],0x3
1005db6a:	mov    DWORD PTR [ebp-0xc],esi
1005db6d:	jl     0x1005db42
1005db6f:	mov    esi,eax
1005db71:	push   0x2
1005db73:	shl    esi,0x2
1005db76:	lea    ecx,[ebp-0x18]
1005db79:	pop    edx
1005db7a:	sub    ecx,esi
1005db7c:	cmp    edx,eax
1005db7e:	jl     0x1005db88
1005db80:	mov    esi,DWORD PTR [ecx]
1005db82:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005db86:	jmp    0x1005db8d
1005db88:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005db8d:	dec    edx
1005db8e:	sub    ecx,0x4
1005db91:	test   edx,edx
1005db93:	jge    0x1005db7c
1005db95:	push   0x2
1005db97:	xor    ebx,ebx
1005db99:	pop    eax
1005db9a:	jmp    0x1005dcf9
1005db9f:	cmp    ebx,DWORD PTR ds:0x1007f208
1005dba5:	mov    ecx,DWORD PTR ds:0x1007f214
1005dbab:	jl     0x1005dc5e
1005dbb1:	xor    eax,eax
1005dbb3:	lea    edi,[ebp-0x20]
1005dbb6:	stos   DWORD PTR es:[edi],eax
1005dbb7:	stos   DWORD PTR es:[edi],eax
1005dbb8:	stos   DWORD PTR es:[edi],eax
1005dbb9:	or     DWORD PTR [ebp-0x20],0x80000000
1005dbc0:	mov    eax,ecx
1005dbc2:	cdq    
1005dbc3:	and    edx,0x1f
1005dbc6:	add    eax,edx
1005dbc8:	mov    edx,ecx
1005dbca:	sar    eax,0x5
1005dbcd:	and    edx,0x8000001f
1005dbd3:	jns    0x1005dbda
1005dbd5:	dec    edx
1005dbd6:	or     edx,0xffffffe0
1005dbd9:	inc    edx
1005dbda:	and    DWORD PTR [ebp-0xc],0x0
1005dbde:	and    DWORD PTR [ebp+0x8],0x0
1005dbe2:	or     edi,0xffffffff
1005dbe5:	mov    ecx,edx
1005dbe7:	shl    edi,cl
1005dbe9:	mov    DWORD PTR [ebp-0x4],0x20
1005dbf0:	sub    DWORD PTR [ebp-0x4],edx
1005dbf3:	not    edi
1005dbf5:	mov    ebx,DWORD PTR [ebp+0x8]
1005dbf8:	lea    ebx,[ebp+ebx*4-0x20]
1005dbfc:	mov    esi,DWORD PTR [ebx]
1005dbfe:	mov    ecx,esi
1005dc00:	and    ecx,edi
1005dc02:	mov    DWORD PTR [ebp-0x10],ecx
1005dc05:	mov    ecx,edx
1005dc07:	shr    esi,cl
1005dc09:	mov    ecx,DWORD PTR [ebp-0x4]
1005dc0c:	or     esi,DWORD PTR [ebp-0xc]
1005dc0f:	mov    DWORD PTR [ebx],esi
1005dc11:	mov    esi,DWORD PTR [ebp-0x10]
1005dc14:	shl    esi,cl
1005dc16:	inc    DWORD PTR [ebp+0x8]
1005dc19:	cmp    DWORD PTR [ebp+0x8],0x3
1005dc1d:	mov    DWORD PTR [ebp-0xc],esi
1005dc20:	jl     0x1005dbf5
1005dc22:	mov    esi,eax
1005dc24:	push   0x2
1005dc26:	shl    esi,0x2
1005dc29:	lea    ecx,[ebp-0x18]
1005dc2c:	pop    edx
1005dc2d:	sub    ecx,esi
1005dc2f:	cmp    edx,eax
1005dc31:	jl     0x1005dc3b
1005dc33:	mov    esi,DWORD PTR [ecx]
1005dc35:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005dc39:	jmp    0x1005dc40
1005dc3b:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005dc40:	dec    edx
1005dc41:	sub    ecx,0x4
1005dc44:	test   edx,edx
1005dc46:	jge    0x1005dc2f
1005dc48:	mov    eax,ds:0x1007f208
1005dc4d:	mov    ecx,DWORD PTR ds:0x1007f21c
1005dc53:	lea    ebx,[ecx+eax*1]
1005dc56:	xor    eax,eax
1005dc58:	inc    eax
1005dc59:	jmp    0x1005dcf9
1005dc5e:	mov    eax,ds:0x1007f21c
1005dc63:	and    DWORD PTR [ebp-0x20],0x7fffffff
1005dc6a:	add    ebx,eax
1005dc6c:	mov    eax,ecx
1005dc6e:	cdq    
1005dc6f:	and    edx,0x1f
1005dc72:	add    eax,edx
1005dc74:	mov    edx,ecx
1005dc76:	sar    eax,0x5
1005dc79:	and    edx,0x8000001f
1005dc7f:	jns    0x1005dc86
1005dc81:	dec    edx
1005dc82:	or     edx,0xffffffe0
1005dc85:	inc    edx
1005dc86:	and    DWORD PTR [ebp-0xc],0x0
1005dc8a:	and    DWORD PTR [ebp+0x8],0x0
1005dc8e:	or     esi,0xffffffff
1005dc91:	mov    ecx,edx
1005dc93:	shl    esi,cl
1005dc95:	mov    DWORD PTR [ebp-0x4],0x20
1005dc9c:	sub    DWORD PTR [ebp-0x4],edx
1005dc9f:	not    esi
1005dca1:	mov    ecx,DWORD PTR [ebp+0x8]
1005dca4:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
1005dca8:	mov    ecx,edi
1005dcaa:	and    ecx,esi
1005dcac:	mov    DWORD PTR [ebp-0x10],ecx
1005dcaf:	mov    ecx,edx
1005dcb1:	shr    edi,cl
1005dcb3:	mov    ecx,DWORD PTR [ebp+0x8]
1005dcb6:	or     edi,DWORD PTR [ebp-0xc]
1005dcb9:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
1005dcbd:	mov    edi,DWORD PTR [ebp-0x10]
1005dcc0:	mov    ecx,DWORD PTR [ebp-0x4]
1005dcc3:	shl    edi,cl
1005dcc5:	inc    DWORD PTR [ebp+0x8]
1005dcc8:	cmp    DWORD PTR [ebp+0x8],0x3
1005dccc:	mov    DWORD PTR [ebp-0xc],edi
1005dccf:	jl     0x1005dca1
1005dcd1:	mov    esi,eax
1005dcd3:	push   0x2
1005dcd5:	shl    esi,0x2
1005dcd8:	lea    ecx,[ebp-0x18]
1005dcdb:	pop    edx
1005dcdc:	sub    ecx,esi
1005dcde:	cmp    edx,eax
1005dce0:	jl     0x1005dcea
1005dce2:	mov    esi,DWORD PTR [ecx]
1005dce4:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005dce8:	jmp    0x1005dcef
1005dcea:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005dcef:	dec    edx
1005dcf0:	sub    ecx,0x4
1005dcf3:	test   edx,edx
1005dcf5:	jge    0x1005dcde
1005dcf7:	xor    eax,eax
1005dcf9:	pop    esi
1005dcfa:	push   0x1f
1005dcfc:	pop    ecx
1005dcfd:	sub    ecx,DWORD PTR ds:0x1007f214
1005dd03:	shl    ebx,cl
1005dd05:	mov    ecx,DWORD PTR [ebp-0x14]
1005dd08:	neg    ecx
1005dd0a:	sbb    ecx,ecx
1005dd0c:	and    ecx,0x80000000
1005dd12:	or     ebx,ecx
1005dd14:	mov    ecx,DWORD PTR ds:0x1007f218
1005dd1a:	or     ebx,DWORD PTR [ebp-0x20]
1005dd1d:	cmp    ecx,0x40
1005dd20:	jne    0x1005dd2f
1005dd22:	mov    ecx,DWORD PTR [ebp+0xc]
1005dd25:	mov    edx,DWORD PTR [ebp-0x1c]
1005dd28:	mov    DWORD PTR [ecx+0x4],ebx
1005dd2b:	mov    DWORD PTR [ecx],edx
1005dd2d:	jmp    0x1005dd39
1005dd2f:	cmp    ecx,0x20
1005dd32:	jne    0x1005dd39
1005dd34:	mov    ecx,DWORD PTR [ebp+0xc]
1005dd37:	mov    DWORD PTR [ecx],ebx
1005dd39:	pop    edi
1005dd3a:	pop    ebx
1005dd3b:	leave  
1005dd3c:	ret    
1005dd3d:	push   ebp
1005dd3e:	mov    ebp,esp
1005dd40:	sub    esp,0x7c
1005dd43:	mov    eax,ds:0x1007e030
1005dd48:	xor    eax,ebp
1005dd4a:	mov    DWORD PTR [ebp-0x4],eax
1005dd4d:	mov    eax,DWORD PTR [ebp+0x8]
1005dd50:	push   ebx
1005dd51:	xor    ebx,ebx
1005dd53:	push   esi
1005dd54:	xor    esi,esi
1005dd56:	mov    DWORD PTR [ebp-0x7c],eax
1005dd59:	mov    eax,DWORD PTR [ebp+0xc]
1005dd5c:	inc    esi
1005dd5d:	xor    ecx,ecx
1005dd5f:	cmp    DWORD PTR [ebp+0x24],ebx
1005dd62:	push   edi
1005dd63:	mov    DWORD PTR [ebp-0x70],eax
1005dd66:	lea    edi,[ebp-0x20]
1005dd69:	mov    DWORD PTR [ebp-0x74],ebx
1005dd6c:	mov    DWORD PTR [ebp-0x68],esi
1005dd6f:	mov    DWORD PTR [ebp-0x4c],ebx
1005dd72:	mov    DWORD PTR [ebp-0x58],ebx
1005dd75:	mov    DWORD PTR [ebp-0x5c],ebx
1005dd78:	mov    DWORD PTR [ebp-0x60],ebx
1005dd7b:	mov    DWORD PTR [ebp-0x64],ebx
1005dd7e:	mov    DWORD PTR [ebp-0x50],ebx
1005dd81:	mov    DWORD PTR [ebp-0x6c],ebx
1005dd84:	jne    0x1005dda5
1005dd86:	call   0x10046b55
1005dd8b:	push   ebx
1005dd8c:	push   ebx
1005dd8d:	push   ebx
1005dd8e:	push   ebx
1005dd8f:	push   ebx
1005dd90:	mov    DWORD PTR [eax],0x16
1005dd96:	call   0x1004338c
1005dd9b:	add    esp,0x14
1005dd9e:	xor    eax,eax
1005dda0:	jmp    0x1005e3bf
1005dda5:	mov    edx,DWORD PTR [ebp+0x10]
1005dda8:	mov    DWORD PTR [ebp-0x54],edx
1005ddab:	mov    al,BYTE PTR [edx]
1005ddad:	cmp    al,0x20
1005ddaf:	je     0x1005ddbd
1005ddb1:	cmp    al,0x9
1005ddb3:	je     0x1005ddbd
1005ddb5:	cmp    al,0xa
1005ddb7:	je     0x1005ddbd
1005ddb9:	cmp    al,0xd
1005ddbb:	jne    0x1005ddc0
1005ddbd:	inc    edx
1005ddbe:	jmp    0x1005ddab
1005ddc0:	mov    bl,0x30
1005ddc2:	mov    al,BYTE PTR [edx]
1005ddc4:	inc    edx
1005ddc5:	cmp    ecx,0xb
1005ddc8:	ja     0x1005dffd
1005ddce:	jmp    DWORD PTR [ecx*4+0x1005e3d1]
1005ddd5:	mov    cl,al
1005ddd7:	sub    cl,0x31
1005ddda:	cmp    cl,0x8
1005dddd:	ja     0x1005dde5
1005dddf:	push   0x3
1005dde1:	pop    ecx
1005dde2:	dec    edx
1005dde3:	jmp    0x1005ddc2
1005dde5:	mov    ecx,DWORD PTR [ebp+0x24]
1005dde8:	mov    ecx,DWORD PTR [ecx]
1005ddea:	mov    ecx,DWORD PTR [ecx+0xbc]
1005ddf0:	mov    ecx,DWORD PTR [ecx]
1005ddf2:	cmp    al,BYTE PTR [ecx]
1005ddf4:	jne    0x1005ddfb
1005ddf6:	push   0x5
1005ddf8:	pop    ecx
1005ddf9:	jmp    0x1005ddc2
1005ddfb:	movsx  eax,al
1005ddfe:	sub    eax,0x2b
1005de01:	je     0x1005de20
1005de03:	dec    eax
1005de04:	dec    eax
1005de05:	je     0x1005de14
1005de07:	sub    eax,0x3
1005de0a:	jne    0x1005df9b
1005de10:	mov    ecx,esi
1005de12:	jmp    0x1005ddc2
1005de14:	push   0x2
1005de16:	pop    ecx
1005de17:	mov    DWORD PTR [ebp-0x74],0x8000
1005de1e:	jmp    0x1005ddc2
1005de20:	and    DWORD PTR [ebp-0x74],0x0
1005de24:	push   0x2
1005de26:	pop    ecx
1005de27:	jmp    0x1005ddc2
1005de29:	mov    cl,al
1005de2b:	sub    cl,0x31
1005de2e:	cmp    cl,0x8
1005de31:	mov    DWORD PTR [ebp-0x58],esi
1005de34:	jbe    0x1005dddf
1005de36:	mov    ecx,DWORD PTR [ebp+0x24]
1005de39:	mov    ecx,DWORD PTR [ecx]
1005de3b:	mov    ecx,DWORD PTR [ecx+0xbc]
1005de41:	mov    ecx,DWORD PTR [ecx]
1005de43:	cmp    al,BYTE PTR [ecx]
1005de45:	jne    0x1005de4b
1005de47:	push   0x4
1005de49:	jmp    0x1005ddf8
1005de4b:	cmp    al,0x2b
1005de4d:	je     0x1005de77
1005de4f:	cmp    al,0x2d
1005de51:	je     0x1005de77
1005de53:	cmp    al,bl
1005de55:	je     0x1005de10
1005de57:	cmp    al,0x43
1005de59:	jle    0x1005df9b
1005de5f:	cmp    al,0x45
1005de61:	jle    0x1005de73
1005de63:	cmp    al,0x63
1005de65:	jle    0x1005df9b
1005de6b:	cmp    al,0x65
1005de6d:	jg     0x1005df9b
1005de73:	push   0x6
1005de75:	jmp    0x1005ddf8
1005de77:	dec    edx
1005de78:	push   0xb
1005de7a:	jmp    0x1005ddf8
1005de7f:	mov    cl,al
1005de81:	sub    cl,0x31
1005de84:	cmp    cl,0x8
1005de87:	jbe    0x1005dddf
1005de8d:	mov    ecx,DWORD PTR [ebp+0x24]
1005de90:	mov    ecx,DWORD PTR [ecx]
1005de92:	mov    ecx,DWORD PTR [ecx+0xbc]
1005de98:	mov    ecx,DWORD PTR [ecx]
1005de9a:	cmp    al,BYTE PTR [ecx]
1005de9c:	je     0x1005ddf6
1005dea2:	cmp    al,bl
1005dea4:	je     0x1005de10
1005deaa:	mov    edx,DWORD PTR [ebp-0x54]
1005dead:	jmp    0x1005dfc6
1005deb2:	mov    DWORD PTR [ebp-0x58],esi
1005deb5:	jmp    0x1005ded1
1005deb7:	cmp    al,0x39
1005deb9:	jg     0x1005ded5
1005debb:	cmp    DWORD PTR [ebp-0x4c],0x19
1005debf:	jae    0x1005decb
1005dec1:	inc    DWORD PTR [ebp-0x4c]
1005dec4:	sub    al,bl
1005dec6:	mov    BYTE PTR [edi],al
1005dec8:	inc    edi
1005dec9:	jmp    0x1005dece
1005decb:	inc    DWORD PTR [ebp-0x50]
1005dece:	mov    al,BYTE PTR [edx]
1005ded0:	inc    edx
1005ded1:	cmp    al,bl
1005ded3:	jge    0x1005deb7
1005ded5:	mov    ecx,DWORD PTR [ebp+0x24]
1005ded8:	mov    ecx,DWORD PTR [ecx]
1005deda:	mov    ecx,DWORD PTR [ecx+0xbc]
1005dee0:	mov    ecx,DWORD PTR [ecx]
1005dee2:	cmp    al,BYTE PTR [ecx]
1005dee4:	je     0x1005de47
1005deea:	cmp    al,0x2b
1005deec:	je     0x1005de77
1005deee:	cmp    al,0x2d
1005def0:	je     0x1005de77
1005def2:	jmp    0x1005de57
1005def7:	cmp    DWORD PTR [ebp-0x4c],0x0
1005defb:	mov    DWORD PTR [ebp-0x58],esi
1005defe:	mov    DWORD PTR [ebp-0x5c],esi
1005df01:	jne    0x1005df29
1005df03:	jmp    0x1005df0b
1005df05:	dec    DWORD PTR [ebp-0x50]
1005df08:	mov    al,BYTE PTR [edx]
1005df0a:	inc    edx
1005df0b:	cmp    al,bl
1005df0d:	je     0x1005df05
1005df0f:	jmp    0x1005df29
1005df11:	cmp    al,0x39
1005df13:	jg     0x1005deea
1005df15:	cmp    DWORD PTR [ebp-0x4c],0x19
1005df19:	jae    0x1005df26
1005df1b:	inc    DWORD PTR [ebp-0x4c]
1005df1e:	sub    al,bl
1005df20:	mov    BYTE PTR [edi],al
1005df22:	inc    edi
1005df23:	dec    DWORD PTR [ebp-0x50]
1005df26:	mov    al,BYTE PTR [edx]
1005df28:	inc    edx
1005df29:	cmp    al,bl
1005df2b:	jge    0x1005df11
1005df2d:	jmp    0x1005deea
1005df2f:	sub    al,bl
1005df31:	cmp    al,0x9
1005df33:	mov    DWORD PTR [ebp-0x5c],esi
1005df36:	ja     0x1005deaa
1005df3c:	push   0x4
1005df3e:	jmp    0x1005dde1
1005df43:	lea    ecx,[edx-0x2]
1005df46:	mov    DWORD PTR [ebp-0x54],ecx
1005df49:	mov    cl,al
1005df4b:	sub    cl,0x31
1005df4e:	cmp    cl,0x8
1005df51:	ja     0x1005df5a
1005df53:	push   0x9
1005df55:	jmp    0x1005dde1
1005df5a:	movsx  eax,al
1005df5d:	sub    eax,0x2b
1005df60:	je     0x1005df82
1005df62:	dec    eax
1005df63:	dec    eax
1005df64:	je     0x1005df76
1005df66:	sub    eax,0x3
1005df69:	jne    0x1005deaa
1005df6f:	push   0x8
1005df71:	jmp    0x1005ddf8
1005df76:	or     DWORD PTR [ebp-0x68],0xffffffff
1005df7a:	push   0x7
1005df7c:	pop    ecx
1005df7d:	jmp    0x1005ddc2
1005df82:	push   0x7
1005df84:	jmp    0x1005ddf8
1005df89:	mov    DWORD PTR [ebp-0x60],esi
1005df8c:	jmp    0x1005df91
1005df8e:	mov    al,BYTE PTR [edx]
1005df90:	inc    edx
1005df91:	cmp    al,bl
1005df93:	je     0x1005df8e
1005df95:	sub    al,0x31
1005df97:	cmp    al,0x8
1005df99:	jbe    0x1005df53
1005df9b:	dec    edx
1005df9c:	jmp    0x1005dfc6
1005df9e:	mov    cl,al
1005dfa0:	sub    cl,0x31
1005dfa3:	cmp    cl,0x8
1005dfa6:	jbe    0x1005df53
1005dfa8:	cmp    al,bl
1005dfaa:	jmp    0x1005df69
1005dfac:	cmp    DWORD PTR [ebp+0x20],0x0
1005dfb0:	je     0x1005dff9
1005dfb2:	movsx  eax,al
1005dfb5:	sub    eax,0x2b
1005dfb8:	lea    ecx,[edx-0x1]
1005dfbb:	mov    DWORD PTR [ebp-0x54],ecx
1005dfbe:	je     0x1005df82
1005dfc0:	dec    eax
1005dfc1:	dec    eax
1005dfc2:	je     0x1005df76
1005dfc4:	mov    edx,ecx
1005dfc6:	cmp    DWORD PTR [ebp-0x58],0x0
1005dfca:	mov    eax,DWORD PTR [ebp-0x70]
1005dfcd:	mov    DWORD PTR [eax],edx
1005dfcf:	je     0x1005e37a
1005dfd5:	push   0x18
1005dfd7:	pop    eax
1005dfd8:	cmp    DWORD PTR [ebp-0x4c],eax
1005dfdb:	jbe    0x1005dfed
1005dfdd:	cmp    BYTE PTR [ebp-0x9],0x5
1005dfe1:	jl     0x1005dfe6
1005dfe3:	inc    BYTE PTR [ebp-0x9]
1005dfe6:	dec    edi
1005dfe7:	inc    DWORD PTR [ebp-0x50]
1005dfea:	mov    DWORD PTR [ebp-0x4c],eax
1005dfed:	cmp    DWORD PTR [ebp-0x4c],0x0
1005dff1:	jbe    0x1005e3a1
1005dff7:	jmp    0x1005e052
1005dff9:	push   0xa
1005dffb:	pop    ecx
1005dffc:	dec    edx
1005dffd:	cmp    ecx,0xa
1005e000:	jne    0x1005ddc2
1005e006:	jmp    0x1005dfc6
1005e008:	mov    DWORD PTR [ebp-0x60],esi
1005e00b:	xor    ecx,ecx
1005e00d:	jmp    0x1005e028
1005e00f:	cmp    al,0x39
1005e011:	jg     0x1005e033
1005e013:	imul   ecx,ecx,0xa
1005e016:	movsx  esi,al
1005e019:	lea    ecx,[ecx+esi*1-0x30]
1005e01d:	cmp    ecx,0x1450
1005e023:	jg     0x1005e02e
1005e025:	mov    al,BYTE PTR [edx]
1005e027:	inc    edx
1005e028:	cmp    al,bl
1005e02a:	jge    0x1005e00f
1005e02c:	jmp    0x1005e033
1005e02e:	mov    ecx,0x1451
1005e033:	mov    DWORD PTR [ebp-0x64],ecx
1005e036:	jmp    0x1005e043
1005e038:	cmp    al,0x39
1005e03a:	jg     0x1005df9b
1005e040:	mov    al,BYTE PTR [edx]
1005e042:	inc    edx
1005e043:	cmp    al,bl
1005e045:	jge    0x1005e038
1005e047:	jmp    0x1005df9b
1005e04c:	dec    DWORD PTR [ebp-0x4c]
1005e04f:	inc    DWORD PTR [ebp-0x50]
1005e052:	dec    edi
1005e053:	cmp    BYTE PTR [edi],0x0
1005e056:	je     0x1005e04c
1005e058:	lea    eax,[ebp-0x3c]
1005e05b:	push   eax
1005e05c:	push   DWORD PTR [ebp-0x4c]
1005e05f:	lea    eax,[ebp-0x20]
1005e062:	push   eax
1005e063:	call   0x1005f0fa
1005e068:	mov    eax,DWORD PTR [ebp-0x64]
1005e06b:	xor    ecx,ecx
1005e06d:	add    esp,0xc
1005e070:	cmp    DWORD PTR [ebp-0x68],ecx
1005e073:	jge    0x1005e077
1005e075:	neg    eax
1005e077:	add    eax,DWORD PTR [ebp-0x50]
1005e07a:	cmp    DWORD PTR [ebp-0x60],ecx
1005e07d:	jne    0x1005e082
1005e07f:	add    eax,DWORD PTR [ebp+0x18]
1005e082:	cmp    DWORD PTR [ebp-0x5c],ecx
1005e085:	jne    0x1005e08a
1005e087:	sub    eax,DWORD PTR [ebp+0x1c]
1005e08a:	cmp    eax,0x1450
1005e08f:	jg     0x1005e383
1005e095:	cmp    eax,0xffffebb0
1005e09a:	jl     0x1005e39a
1005e0a0:	mov    esi,0x1007f220
1005e0a5:	sub    esi,0x60
1005e0a8:	cmp    eax,ecx
1005e0aa:	mov    DWORD PTR [ebp-0x54],eax
1005e0ad:	je     0x1005e368
1005e0b3:	jge    0x1005e0c2
1005e0b5:	neg    eax
1005e0b7:	mov    esi,0x1007f380
1005e0bc:	mov    DWORD PTR [ebp-0x54],eax
1005e0bf:	sub    esi,0x60
1005e0c2:	cmp    DWORD PTR [ebp+0x14],ecx
1005e0c5:	jne    0x1005e0cb
1005e0c7:	mov    WORD PTR [ebp-0x3c],cx
1005e0cb:	cmp    DWORD PTR [ebp-0x54],ecx
1005e0ce:	je     0x1005e368
1005e0d4:	mov    eax,DWORD PTR [ebp-0x54]
1005e0d7:	sar    DWORD PTR [ebp-0x54],0x3
1005e0db:	add    esi,0x54
1005e0de:	and    eax,0x7
1005e0e1:	test   eax,eax
1005e0e3:	mov    DWORD PTR [ebp-0x4c],esi
1005e0e6:	je     0x1005e35e
1005e0ec:	imul   eax,eax,0xc
1005e0ef:	add    eax,esi
1005e0f1:	mov    ebx,eax
1005e0f3:	cmp    WORD PTR [ebx],0x8000
1005e0f8:	mov    DWORD PTR [ebp-0x70],ebx
1005e0fb:	jb     0x1005e111
1005e0fd:	mov    esi,ebx
1005e0ff:	lea    edi,[ebp-0x48]
1005e102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e105:	dec    DWORD PTR [ebp-0x46]
1005e108:	mov    esi,DWORD PTR [ebp-0x4c]
1005e10b:	lea    ebx,[ebp-0x48]
1005e10e:	mov    DWORD PTR [ebp-0x70],ebx
1005e111:	movzx  edx,WORD PTR [ebx+0xa]
1005e115:	mov    ecx,DWORD PTR [ebp-0x32]
1005e118:	xor    eax,eax
1005e11a:	mov    DWORD PTR [ebp-0x50],eax
1005e11d:	mov    DWORD PTR [ebp-0x2c],eax
1005e120:	mov    DWORD PTR [ebp-0x28],eax
1005e123:	mov    DWORD PTR [ebp-0x24],eax
1005e126:	mov    eax,edx
1005e128:	mov    edi,0x7fff
1005e12d:	xor    eax,ecx
1005e12f:	and    ecx,edi
1005e131:	and    edx,edi
1005e133:	and    eax,0x8000
1005e138:	cmp    cx,0x7fff
1005e13d:	lea    edi,[edx+ecx*1]
1005e140:	movzx  edi,di
1005e143:	jae    0x1005e344
1005e149:	cmp    dx,0x7fff
1005e14e:	jae    0x1005e344
1005e154:	cmp    di,0xbffd
1005e159:	ja     0x1005e344
1005e15f:	cmp    di,0x3fbf
1005e164:	ja     0x1005e173
1005e166:	xor    eax,eax
1005e168:	mov    DWORD PTR [ebp-0x38],eax
1005e16b:	mov    DWORD PTR [ebp-0x3c],eax
1005e16e:	jmp    0x1005e35b
1005e173:	test   cx,cx
1005e176:	jne    0x1005e197
1005e178:	inc    edi
1005e179:	test   DWORD PTR [ebp-0x34],0x7fffffff
1005e180:	jne    0x1005e197
1005e182:	cmp    DWORD PTR [ebp-0x38],0x0
1005e186:	jne    0x1005e197
1005e188:	cmp    DWORD PTR [ebp-0x3c],0x0
1005e18c:	jne    0x1005e197
1005e18e:	and    WORD PTR [ebp-0x32],cx
1005e192:	jmp    0x1005e35e
1005e197:	xor    ecx,ecx
1005e199:	cmp    dx,cx
1005e19c:	jne    0x1005e1bf
1005e19e:	inc    edi
1005e19f:	test   DWORD PTR [ebx+0x8],0x7fffffff
1005e1a6:	jne    0x1005e1bf
1005e1a8:	cmp    DWORD PTR [ebx+0x4],ecx
1005e1ab:	jne    0x1005e1bf
1005e1ad:	cmp    DWORD PTR [ebx],ecx
1005e1af:	jne    0x1005e1bf
1005e1b1:	mov    DWORD PTR [ebp-0x34],ecx
1005e1b4:	mov    DWORD PTR [ebp-0x38],ecx
1005e1b7:	mov    DWORD PTR [ebp-0x3c],ecx
1005e1ba:	jmp    0x1005e35e
1005e1bf:	and    DWORD PTR [ebp-0x68],ecx
1005e1c2:	lea    esi,[ebp-0x28]
1005e1c5:	mov    DWORD PTR [ebp-0x58],0x5
1005e1cc:	mov    ecx,DWORD PTR [ebp-0x68]
1005e1cf:	mov    edx,DWORD PTR [ebp-0x58]
1005e1d2:	add    ecx,ecx
1005e1d4:	test   edx,edx
1005e1d6:	mov    DWORD PTR [ebp-0x64],edx
1005e1d9:	jle    0x1005e230
1005e1db:	lea    ecx,[ebp+ecx*1-0x3c]
1005e1df:	add    ebx,0x8
1005e1e2:	mov    DWORD PTR [ebp-0x5c],ecx
1005e1e5:	mov    DWORD PTR [ebp-0x60],ebx
1005e1e8:	mov    ecx,DWORD PTR [ebp-0x60]
1005e1eb:	mov    edx,DWORD PTR [ebp-0x5c]
1005e1ee:	movzx  edx,WORD PTR [edx]
1005e1f1:	movzx  ecx,WORD PTR [ecx]
1005e1f4:	and    DWORD PTR [ebp-0x78],0x0
1005e1f8:	imul   ecx,edx
1005e1fb:	mov    edx,DWORD PTR [esi-0x4]
1005e1fe:	lea    ebx,[edx+ecx*1]
1005e201:	cmp    ebx,edx
1005e203:	jb     0x1005e209
1005e205:	cmp    ebx,ecx
1005e207:	jae    0x1005e210
1005e209:	mov    DWORD PTR [ebp-0x78],0x1
1005e210:	cmp    DWORD PTR [ebp-0x78],0x0
1005e214:	mov    DWORD PTR [esi-0x4],ebx
1005e217:	je     0x1005e21c
1005e219:	inc    WORD PTR [esi]
1005e21c:	add    DWORD PTR [ebp-0x5c],0x2
1005e220:	sub    DWORD PTR [ebp-0x60],0x2
1005e224:	dec    DWORD PTR [ebp-0x64]
1005e227:	cmp    DWORD PTR [ebp-0x64],0x0
1005e22b:	jg     0x1005e1e8
1005e22d:	mov    ebx,DWORD PTR [ebp-0x70]
1005e230:	inc    esi
1005e231:	inc    esi
1005e232:	inc    DWORD PTR [ebp-0x68]
1005e235:	dec    DWORD PTR [ebp-0x58]
1005e238:	cmp    DWORD PTR [ebp-0x58],0x0
1005e23c:	jg     0x1005e1cc
1005e23e:	add    edi,0xc002
1005e244:	test   di,di
1005e247:	jle    0x1005e284
1005e249:	test   DWORD PTR [ebp-0x24],0x80000000
1005e250:	jne    0x1005e27f
1005e252:	mov    esi,DWORD PTR [ebp-0x28]
1005e255:	mov    ecx,DWORD PTR [ebp-0x2c]
1005e258:	shl    DWORD PTR [ebp-0x2c],1
1005e25b:	shr    ecx,0x1f
1005e25e:	mov    edx,esi
1005e260:	add    esi,esi
1005e262:	or     esi,ecx
1005e264:	mov    ecx,DWORD PTR [ebp-0x24]
1005e267:	shr    edx,0x1f
1005e26a:	add    ecx,ecx
1005e26c:	or     ecx,edx
1005e26e:	add    edi,0xffff
1005e274:	test   di,di
1005e277:	mov    DWORD PTR [ebp-0x28],esi
1005e27a:	mov    DWORD PTR [ebp-0x24],ecx
1005e27d:	jg     0x1005e249
1005e27f:	test   di,di
1005e282:	jg     0x1005e2d2
1005e284:	add    edi,0xffff
1005e28a:	test   di,di
1005e28d:	jge    0x1005e2d2
1005e28f:	mov    ecx,edi
1005e291:	neg    ecx
1005e293:	movzx  esi,cx
1005e296:	add    edi,esi
1005e298:	test   BYTE PTR [ebp-0x2c],0x1
1005e29c:	je     0x1005e2a1
1005e29e:	inc    DWORD PTR [ebp-0x50]
1005e2a1:	mov    ecx,DWORD PTR [ebp-0x24]
1005e2a4:	mov    ebx,DWORD PTR [ebp-0x28]
1005e2a7:	mov    edx,DWORD PTR [ebp-0x28]
1005e2aa:	shr    DWORD PTR [ebp-0x24],1
1005e2ad:	shl    ecx,0x1f
1005e2b0:	shr    ebx,1
1005e2b2:	or     ebx,ecx
1005e2b4:	mov    ecx,DWORD PTR [ebp-0x2c]
1005e2b7:	shl    edx,0x1f
1005e2ba:	shr    ecx,1
1005e2bc:	or     ecx,edx
1005e2be:	dec    esi
1005e2bf:	mov    DWORD PTR [ebp-0x28],ebx
1005e2c2:	mov    DWORD PTR [ebp-0x2c],ecx
1005e2c5:	jne    0x1005e298
1005e2c7:	cmp    DWORD PTR [ebp-0x50],0x0
1005e2cb:	je     0x1005e2d2
1005e2cd:	or     WORD PTR [ebp-0x2c],0x1
1005e2d2:	cmp    WORD PTR [ebp-0x2c],0x8000
1005e2d8:	ja     0x1005e2eb
1005e2da:	mov    ecx,DWORD PTR [ebp-0x2c]
1005e2dd:	and    ecx,0x1ffff
1005e2e3:	cmp    ecx,0x18000
1005e2e9:	jne    0x1005e31e
1005e2eb:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
1005e2ef:	jne    0x1005e31b
1005e2f1:	and    DWORD PTR [ebp-0x2a],0x0
1005e2f5:	cmp    DWORD PTR [ebp-0x26],0xffffffff
1005e2f9:	jne    0x1005e316
1005e2fb:	and    DWORD PTR [ebp-0x26],0x0
1005e2ff:	cmp    WORD PTR [ebp-0x22],0xffff
1005e305:	jne    0x1005e310
1005e307:	mov    WORD PTR [ebp-0x22],0x8000
1005e30d:	inc    edi
1005e30e:	jmp    0x1005e31e
1005e310:	inc    WORD PTR [ebp-0x22]
1005e314:	jmp    0x1005e31e
1005e316:	inc    DWORD PTR [ebp-0x26]
1005e319:	jmp    0x1005e31e
1005e31b:	inc    DWORD PTR [ebp-0x2a]
1005e31e:	cmp    di,0x7fff
1005e323:	mov    esi,DWORD PTR [ebp-0x4c]
1005e326:	jae    0x1005e344
1005e328:	mov    cx,WORD PTR [ebp-0x2a]
1005e32c:	mov    WORD PTR [ebp-0x3c],cx
1005e330:	mov    ecx,DWORD PTR [ebp-0x28]
1005e333:	mov    DWORD PTR [ebp-0x3a],ecx
1005e336:	mov    ecx,DWORD PTR [ebp-0x24]
1005e339:	or     edi,eax
1005e33b:	mov    DWORD PTR [ebp-0x36],ecx
1005e33e:	mov    WORD PTR [ebp-0x32],di
1005e342:	jmp    0x1005e35e
1005e344:	neg    ax
1005e347:	sbb    eax,eax
1005e349:	and    DWORD PTR [ebp-0x38],0x0
1005e34d:	and    eax,0x80000000
1005e352:	add    eax,0x7fff8000
1005e357:	and    DWORD PTR [ebp-0x3c],0x0
1005e35b:	mov    DWORD PTR [ebp-0x34],eax
1005e35e:	cmp    DWORD PTR [ebp-0x54],0x0
1005e362:	jne    0x1005e0d4
1005e368:	mov    eax,DWORD PTR [ebp-0x34]
1005e36b:	movzx  ecx,WORD PTR [ebp-0x3c]
1005e36f:	mov    esi,DWORD PTR [ebp-0x3a]
1005e372:	mov    edx,DWORD PTR [ebp-0x36]
1005e375:	shr    eax,0x10
1005e378:	jmp    0x1005e3a9
1005e37a:	mov    DWORD PTR [ebp-0x6c],0x4
1005e381:	jmp    0x1005e3a1
1005e383:	xor    esi,esi
1005e385:	mov    eax,0x7fff
1005e38a:	mov    edx,0x80000000
1005e38f:	xor    ecx,ecx
1005e391:	mov    DWORD PTR [ebp-0x6c],0x2
1005e398:	jmp    0x1005e3a9
1005e39a:	mov    DWORD PTR [ebp-0x6c],0x1
1005e3a1:	xor    ecx,ecx
1005e3a3:	xor    eax,eax
1005e3a5:	xor    edx,edx
1005e3a7:	xor    esi,esi
1005e3a9:	mov    edi,DWORD PTR [ebp-0x7c]
1005e3ac:	or     eax,DWORD PTR [ebp-0x74]
1005e3af:	mov    WORD PTR [edi],cx
1005e3b2:	mov    WORD PTR [edi+0xa],ax
1005e3b6:	mov    eax,DWORD PTR [ebp-0x6c]
1005e3b9:	mov    DWORD PTR [edi+0x2],esi
1005e3bc:	mov    DWORD PTR [edi+0x6],edx
1005e3bf:	mov    ecx,DWORD PTR [ebp-0x4]
1005e3c2:	pop    edi
1005e3c3:	pop    esi
1005e3c4:	xor    ecx,ebp
1005e3c6:	pop    ebx
1005e3c7:	call   0x10042e97
1005e3cc:	leave  
1005e3cd:	ret    
1005e3ce:	lea    ecx,[ecx+0x0]
1005e3d1:	aad    0xdd
1005e3d3:	add    eax,0x5de2910
1005e3d8:	adc    BYTE PTR [edi-0x22],bh
1005e3db:	add    eax,0x5deb210
1005e3e0:	adc    bh,dh
1005e3e2:	fiadd  WORD PTR ds:0x5df2f10
1005e3e8:	adc    BYTE PTR [ebx-0x21],al
1005e3eb:	add    eax,0x5df9e10
1005e3f0:	adc    BYTE PTR [ecx+0x81005df],cl
1005e3f6:	loopne 0x1005e3fd
1005e3f8:	adc    ch,bh
1005e3fa:	fild   WORD PTR ds:0x5dfac10
1005e400:	adc    BYTE PTR [ebp-0x75],dl
1005e403:	in     al,dx
1005e404:	sub    esp,0x74
1005e407:	mov    eax,ds:0x1007e030
1005e40c:	xor    eax,ebp
1005e40e:	mov    DWORD PTR [ebp-0x4],eax
1005e411:	push   ebx
1005e412:	mov    ebx,DWORD PTR [ebp+0x1c]
1005e415:	push   esi
1005e416:	push   edi
1005e417:	lea    esi,[ebp+0x8]
1005e41a:	lea    edi,[ebp-0x10]
1005e41d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e41e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e41f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
1005e421:	mov    edx,DWORD PTR [ebp-0x8]
1005e424:	mov    ecx,edx
1005e426:	mov    eax,0x8000
1005e42b:	and    ecx,eax
1005e42d:	and    edx,0x7fff
1005e433:	test   cx,cx
1005e436:	mov    DWORD PTR [ebp-0x60],ebx
1005e439:	mov    BYTE PTR [ebp-0x30],0xcc
1005e43d:	mov    BYTE PTR [ebp-0x2f],0xcc
1005e441:	mov    BYTE PTR [ebp-0x2e],0xcc
1005e445:	mov    BYTE PTR [ebp-0x2d],0xcc
1005e449:	mov    BYTE PTR [ebp-0x2c],0xcc
1005e44d:	mov    BYTE PTR [ebp-0x2b],0xcc
1005e451:	mov    BYTE PTR [ebp-0x2a],0xcc
1005e455:	mov    BYTE PTR [ebp-0x29],0xcc
1005e459:	mov    BYTE PTR [ebp-0x28],0xcc
1005e45d:	mov    BYTE PTR [ebp-0x27],0xcc
1005e461:	mov    BYTE PTR [ebp-0x26],0xfb
1005e465:	mov    BYTE PTR [ebp-0x25],0x3f
1005e469:	mov    DWORD PTR [ebp-0x74],0x1
1005e470:	mov    DWORD PTR [ebp-0x6c],ecx
1005e473:	je     0x1005e47b
1005e475:	mov    BYTE PTR [ebx+0x2],0x2d
1005e479:	jmp    0x1005e47f
1005e47b:	mov    BYTE PTR [ebx+0x2],0x20
1005e47f:	test   dx,dx
1005e482:	mov    esi,DWORD PTR [ebp-0xc]
1005e485:	mov    edi,DWORD PTR [ebp-0x10]
1005e488:	jne    0x1005e4b8
1005e48a:	test   esi,esi
1005e48c:	jne    0x1005e4b8
1005e48e:	test   edi,edi
1005e490:	jne    0x1005e4b8
1005e492:	and    WORD PTR [ebx],di
1005e495:	cmp    cx,ax
1005e498:	setne  al
1005e49b:	dec    al
1005e49d:	and    al,0xd
1005e49f:	add    al,0x20
1005e4a1:	mov    BYTE PTR [ebx+0x2],al
1005e4a4:	mov    BYTE PTR [ebx+0x3],0x1
1005e4a8:	mov    BYTE PTR [ebx+0x4],0x30
1005e4ac:	mov    BYTE PTR [ebx+0x5],0x0
1005e4b0:	xor    eax,eax
1005e4b2:	inc    eax
1005e4b3:	jmp    0x1005ec81
1005e4b8:	cmp    dx,0x7fff
1005e4bd:	jne    0x1005e561
1005e4c3:	mov    eax,0x80000000
1005e4c8:	cmp    esi,eax
1005e4ca:	mov    WORD PTR [ebx],0x1
1005e4cf:	jne    0x1005e4d5
1005e4d1:	test   edi,edi
1005e4d3:	je     0x1005e4e4
1005e4d5:	test   esi,0x40000000
1005e4db:	jne    0x1005e4e4
1005e4dd:	push   0x1006cb60
1005e4e2:	jmp    0x1005e535
1005e4e4:	test   cx,cx
1005e4e7:	je     0x1005e4fc
1005e4e9:	cmp    esi,0xc0000000
1005e4ef:	jne    0x1005e4fc
1005e4f1:	test   edi,edi
1005e4f3:	jne    0x1005e530
1005e4f5:	push   0x1006cb58
1005e4fa:	jmp    0x1005e509
1005e4fc:	cmp    esi,eax
1005e4fe:	jne    0x1005e530
1005e500:	test   edi,edi
1005e502:	jne    0x1005e530
1005e504:	push   0x1006cb50
1005e509:	lea    eax,[ebx+0x4]
1005e50c:	push   0x16
1005e50e:	push   eax
1005e50f:	call   0x10046b99
1005e514:	add    esp,0xc
1005e517:	xor    esi,esi
1005e519:	test   eax,eax
1005e51b:	je     0x1005e52a
1005e51d:	push   esi
1005e51e:	push   esi
1005e51f:	push   esi
1005e520:	push   esi
1005e521:	push   esi
1005e522:	call   0x10043290
1005e527:	add    esp,0x14
1005e52a:	mov    BYTE PTR [ebx+0x3],0x5
1005e52e:	jmp    0x1005e55a
1005e530:	push   0x1006cb48
1005e535:	lea    eax,[ebx+0x4]
1005e538:	push   0x16
1005e53a:	push   eax
1005e53b:	call   0x10046b99
1005e540:	add    esp,0xc
1005e543:	xor    esi,esi
1005e545:	test   eax,eax
1005e547:	je     0x1005e556
1005e549:	push   esi
1005e54a:	push   esi
1005e54b:	push   esi
1005e54c:	push   esi
1005e54d:	push   esi
1005e54e:	call   0x10043290
1005e553:	add    esp,0x14
1005e556:	mov    BYTE PTR [ebx+0x3],0x6
1005e55a:	xor    eax,eax
1005e55c:	jmp    0x1005ec81
1005e561:	movzx  ecx,dx
1005e564:	mov    ebx,ecx
1005e566:	imul   ecx,ecx,0x4d10
1005e56c:	shr    ebx,0x8
1005e56f:	mov    eax,esi
1005e571:	shr    eax,0x18
1005e574:	lea    eax,[ebx+eax*2]
1005e577:	imul   eax,eax,0x4d
1005e57a:	lea    eax,[eax+ecx*1-0x134312f4]
1005e581:	sar    eax,0x10
1005e584:	movzx  ecx,ax
1005e587:	movsx  ebx,cx
1005e58a:	mov    DWORD PTR [ebp-0x4c],ecx
1005e58d:	xor    eax,eax
1005e58f:	mov    ecx,0x1007f220
1005e594:	neg    ebx
1005e596:	sub    ecx,0x60
1005e599:	cmp    ebx,eax
1005e59b:	mov    WORD PTR [ebp-0x16],dx
1005e59f:	mov    DWORD PTR [ebp-0x1a],esi
1005e5a2:	mov    DWORD PTR [ebp-0x1e],edi
1005e5a5:	mov    WORD PTR [ebp-0x20],ax
1005e5a9:	mov    DWORD PTR [ebp-0x68],ecx
1005e5ac:	je     0x1005e860
1005e5b2:	jge    0x1005e5c1
1005e5b4:	mov    ecx,0x1007f380
1005e5b9:	neg    ebx
1005e5bb:	sub    ecx,0x60
1005e5be:	mov    DWORD PTR [ebp-0x68],ecx
1005e5c1:	cmp    ebx,eax
1005e5c3:	je     0x1005e860
1005e5c9:	add    DWORD PTR [ebp-0x68],0x54
1005e5cd:	mov    ecx,ebx
1005e5cf:	and    ecx,0x7
1005e5d2:	sar    ebx,0x3
1005e5d5:	test   ecx,ecx
1005e5d7:	je     0x1005e856
1005e5dd:	imul   ecx,ecx,0xc
1005e5e0:	add    ecx,DWORD PTR [ebp-0x68]
1005e5e3:	cmp    WORD PTR [ecx],0x8000
1005e5e8:	mov    DWORD PTR [ebp-0x64],ecx
1005e5eb:	jb     0x1005e600
1005e5ed:	mov    esi,ecx
1005e5ef:	lea    edi,[ebp-0x3c]
1005e5f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e5f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e5f4:	lea    eax,[ebp-0x3c]
1005e5f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e5f8:	dec    DWORD PTR [ebp-0x3a]
1005e5fb:	mov    DWORD PTR [ebp-0x64],eax
1005e5fe:	mov    ecx,eax
1005e600:	movzx  edi,WORD PTR [ecx+0xa]
1005e604:	mov    edx,DWORD PTR [ebp-0x16]
1005e607:	xor    eax,eax
1005e609:	mov    ecx,edi
1005e60b:	mov    esi,0x7fff
1005e610:	xor    ecx,edx
1005e612:	and    edx,esi
1005e614:	and    edi,esi
1005e616:	mov    DWORD PTR [ebp-0x48],eax
1005e619:	mov    DWORD PTR [ebp-0x10],eax
1005e61c:	mov    DWORD PTR [ebp-0xc],eax
1005e61f:	mov    DWORD PTR [ebp-0x8],eax
1005e622:	and    ecx,0x8000
1005e628:	cmp    dx,si
1005e62b:	lea    eax,[edi+edx*1]
1005e62e:	movzx  eax,ax
1005e631:	jae    0x1005e83a
1005e637:	cmp    di,si
1005e63a:	jae    0x1005e83a
1005e640:	cmp    ax,0xbffd
1005e644:	ja     0x1005e83a
1005e64a:	cmp    ax,0x3fbf
1005e64e:	ja     0x1005e660
1005e650:	xor    eax,eax
1005e652:	mov    DWORD PTR [ebp-0x18],eax
1005e655:	mov    DWORD PTR [ebp-0x1c],eax
1005e658:	mov    DWORD PTR [ebp-0x20],eax
1005e65b:	jmp    0x1005e856
1005e660:	xor    esi,esi
1005e662:	cmp    dx,si
1005e665:	jne    0x1005e684
1005e667:	inc    eax
1005e668:	test   DWORD PTR [ebp-0x18],0x7fffffff
1005e66f:	jne    0x1005e684
1005e671:	cmp    DWORD PTR [ebp-0x1c],esi
1005e674:	jne    0x1005e684
1005e676:	cmp    DWORD PTR [ebp-0x20],esi
1005e679:	jne    0x1005e684
1005e67b:	mov    WORD PTR [ebp-0x16],si
1005e67f:	jmp    0x1005e856
1005e684:	cmp    di,si
1005e687:	jne    0x1005e6ad
1005e689:	mov    edx,DWORD PTR [ebp-0x64]
1005e68c:	inc    eax
1005e68d:	test   DWORD PTR [edx+0x8],0x7fffffff
1005e694:	jne    0x1005e6ad
1005e696:	cmp    DWORD PTR [edx+0x4],esi
1005e699:	jne    0x1005e6ad
1005e69b:	cmp    DWORD PTR [edx],esi
1005e69d:	jne    0x1005e6ad
1005e69f:	mov    DWORD PTR [ebp-0x18],esi
1005e6a2:	mov    DWORD PTR [ebp-0x1c],esi
1005e6a5:	mov    DWORD PTR [ebp-0x20],esi
1005e6a8:	jmp    0x1005e856
1005e6ad:	lea    edi,[ebp-0xc]
1005e6b0:	mov    DWORD PTR [ebp-0x5c],esi
1005e6b3:	mov    DWORD PTR [ebp-0x44],edi
1005e6b6:	mov    DWORD PTR [ebp-0x40],0x5
1005e6bd:	mov    edx,DWORD PTR [ebp-0x5c]
1005e6c0:	mov    esi,DWORD PTR [ebp-0x40]
1005e6c3:	add    edx,edx
1005e6c5:	test   esi,esi
1005e6c7:	mov    DWORD PTR [ebp-0x50],esi
1005e6ca:	jle    0x1005e724
1005e6cc:	lea    edx,[ebp+edx*1-0x20]
1005e6d0:	mov    DWORD PTR [ebp-0x58],edx
1005e6d3:	mov    edx,DWORD PTR [ebp-0x64]
1005e6d6:	add    edx,0x8
1005e6d9:	mov    DWORD PTR [ebp-0x54],edx
1005e6dc:	mov    edx,DWORD PTR [ebp-0x58]
1005e6df:	mov    esi,DWORD PTR [ebp-0x54]
1005e6e2:	movzx  esi,WORD PTR [esi]
1005e6e5:	movzx  edx,WORD PTR [edx]
1005e6e8:	mov    edi,DWORD PTR [edi-0x4]
1005e6eb:	imul   edx,esi
1005e6ee:	and    DWORD PTR [ebp-0x70],0x0
1005e6f2:	lea    esi,[edi+edx*1]
1005e6f5:	cmp    esi,edi
1005e6f7:	jb     0x1005e6fd
1005e6f9:	cmp    esi,edx
1005e6fb:	jae    0x1005e704
1005e6fd:	mov    DWORD PTR [ebp-0x70],0x1
1005e704:	cmp    DWORD PTR [ebp-0x70],0x0
1005e708:	mov    edi,DWORD PTR [ebp-0x44]
1005e70b:	mov    DWORD PTR [edi-0x4],esi
1005e70e:	je     0x1005e713
1005e710:	inc    WORD PTR [edi]
1005e713:	add    DWORD PTR [ebp-0x58],0x2
1005e717:	sub    DWORD PTR [ebp-0x54],0x2
1005e71b:	dec    DWORD PTR [ebp-0x50]
1005e71e:	cmp    DWORD PTR [ebp-0x50],0x0
1005e722:	jg     0x1005e6dc
1005e724:	inc    edi
1005e725:	inc    edi
1005e726:	inc    DWORD PTR [ebp-0x5c]
1005e729:	dec    DWORD PTR [ebp-0x40]
1005e72c:	cmp    DWORD PTR [ebp-0x40],0x0
1005e730:	mov    DWORD PTR [ebp-0x44],edi
1005e733:	jg     0x1005e6bd
1005e735:	add    eax,0xc002
1005e73a:	test   ax,ax
1005e73d:	jle    0x1005e77a
1005e73f:	test   DWORD PTR [ebp-0x8],0x80000000
1005e746:	jne    0x1005e775
1005e748:	mov    edx,DWORD PTR [ebp-0x10]
1005e74b:	mov    edi,DWORD PTR [ebp-0xc]
1005e74e:	mov    esi,DWORD PTR [ebp-0xc]
1005e751:	shl    DWORD PTR [ebp-0x10],1
1005e754:	shr    edx,0x1f
1005e757:	add    edi,edi
1005e759:	or     edi,edx
1005e75b:	mov    edx,DWORD PTR [ebp-0x8]
1005e75e:	shr    esi,0x1f
1005e761:	add    edx,edx
1005e763:	or     edx,esi
1005e765:	add    eax,0xffff
1005e76a:	test   ax,ax
1005e76d:	mov    DWORD PTR [ebp-0xc],edi
1005e770:	mov    DWORD PTR [ebp-0x8],edx
1005e773:	jg     0x1005e73f
1005e775:	test   ax,ax
1005e778:	jg     0x1005e7cc
1005e77a:	add    eax,0xffff
1005e77f:	test   ax,ax
1005e782:	jge    0x1005e7cc
1005e784:	mov    edx,eax
1005e786:	neg    edx
1005e788:	movzx  edx,dx
1005e78b:	mov    DWORD PTR [ebp-0x44],edx
1005e78e:	add    eax,edx
1005e790:	test   BYTE PTR [ebp-0x10],0x1
1005e794:	je     0x1005e799
1005e796:	inc    DWORD PTR [ebp-0x48]
1005e799:	mov    edx,DWORD PTR [ebp-0x8]
1005e79c:	mov    edi,DWORD PTR [ebp-0xc]
1005e79f:	mov    esi,DWORD PTR [ebp-0xc]
1005e7a2:	shr    DWORD PTR [ebp-0x8],1
1005e7a5:	shl    edx,0x1f
1005e7a8:	shr    edi,1
1005e7aa:	or     edi,edx
1005e7ac:	mov    edx,DWORD PTR [ebp-0x10]
1005e7af:	shl    esi,0x1f
1005e7b2:	shr    edx,1
1005e7b4:	or     edx,esi
1005e7b6:	dec    DWORD PTR [ebp-0x44]
1005e7b9:	mov    DWORD PTR [ebp-0xc],edi
1005e7bc:	mov    DWORD PTR [ebp-0x10],edx
1005e7bf:	jne    0x1005e790
1005e7c1:	cmp    DWORD PTR [ebp-0x48],0x0
1005e7c5:	je     0x1005e7cc
1005e7c7:	or     WORD PTR [ebp-0x10],0x1
1005e7cc:	cmp    WORD PTR [ebp-0x10],0x8000
1005e7d2:	ja     0x1005e7e5
1005e7d4:	mov    edx,DWORD PTR [ebp-0x10]
1005e7d7:	and    edx,0x1ffff
1005e7dd:	cmp    edx,0x18000
1005e7e3:	jne    0x1005e818
1005e7e5:	cmp    DWORD PTR [ebp-0xe],0xffffffff
1005e7e9:	jne    0x1005e815
1005e7eb:	and    DWORD PTR [ebp-0xe],0x0
1005e7ef:	cmp    DWORD PTR [ebp-0xa],0xffffffff
1005e7f3:	jne    0x1005e810
1005e7f5:	and    DWORD PTR [ebp-0xa],0x0
1005e7f9:	cmp    WORD PTR [ebp-0x6],0xffff
1005e7ff:	jne    0x1005e80a
1005e801:	mov    WORD PTR [ebp-0x6],0x8000
1005e807:	inc    eax
1005e808:	jmp    0x1005e818
1005e80a:	inc    WORD PTR [ebp-0x6]
1005e80e:	jmp    0x1005e818
1005e810:	inc    DWORD PTR [ebp-0xa]
1005e813:	jmp    0x1005e818
1005e815:	inc    DWORD PTR [ebp-0xe]
1005e818:	cmp    ax,0x7fff
1005e81c:	jae    0x1005e83a
1005e81e:	mov    dx,WORD PTR [ebp-0xe]
1005e822:	mov    WORD PTR [ebp-0x20],dx
1005e826:	mov    edx,DWORD PTR [ebp-0xc]
1005e829:	mov    DWORD PTR [ebp-0x1e],edx
1005e82c:	mov    edx,DWORD PTR [ebp-0x8]
1005e82f:	or     eax,ecx
1005e831:	mov    DWORD PTR [ebp-0x1a],edx
1005e834:	mov    WORD PTR [ebp-0x16],ax
1005e838:	jmp    0x1005e856
1005e83a:	neg    cx
1005e83d:	sbb    ecx,ecx
1005e83f:	and    DWORD PTR [ebp-0x1c],0x0
1005e843:	and    ecx,0x80000000
1005e849:	add    ecx,0x7fff8000
1005e84f:	and    DWORD PTR [ebp-0x20],0x0
1005e853:	mov    DWORD PTR [ebp-0x18],ecx
1005e856:	test   ebx,ebx
1005e858:	jne    0x1005e5c9
1005e85e:	xor    eax,eax
1005e860:	mov    ecx,DWORD PTR [ebp-0x18]
1005e863:	shr    ecx,0x10
1005e866:	cmp    cx,0x3fff
1005e86b:	mov    ebx,0x7fff
1005e870:	jb     0x1005eac0
1005e876:	mov    esi,DWORD PTR [ebp-0x26]
1005e879:	inc    DWORD PTR [ebp-0x4c]
1005e87c:	movzx  edx,cx
1005e87f:	mov    ecx,esi
1005e881:	xor    ecx,edx
1005e883:	and    edx,ebx
1005e885:	and    esi,ebx
1005e887:	and    ecx,0x8000
1005e88d:	cmp    dx,bx
1005e890:	lea    edi,[esi+edx*1]
1005e893:	mov    DWORD PTR [ebp-0x58],eax
1005e896:	mov    DWORD PTR [ebp-0x10],eax
1005e899:	mov    DWORD PTR [ebp-0xc],eax
1005e89c:	mov    DWORD PTR [ebp-0x8],eax
1005e89f:	movzx  edi,di
1005e8a2:	jae    0x1005eaa6
1005e8a8:	cmp    si,bx
1005e8ab:	jae    0x1005eaa6
1005e8b1:	cmp    di,0xbffd
1005e8b6:	ja     0x1005eaa6
1005e8bc:	cmp    di,0x3fbf
1005e8c1:	ja     0x1005e8cb
1005e8c3:	mov    DWORD PTR [ebp-0x18],eax
1005e8c6:	jmp    0x1005eaba
1005e8cb:	cmp    dx,ax
1005e8ce:	jne    0x1005e8ed
1005e8d0:	inc    edi
1005e8d1:	test   DWORD PTR [ebp-0x18],0x7fffffff
1005e8d8:	jne    0x1005e8ed
1005e8da:	cmp    DWORD PTR [ebp-0x1c],eax
1005e8dd:	jne    0x1005e8ed
1005e8df:	cmp    DWORD PTR [ebp-0x20],eax
1005e8e2:	jne    0x1005e8ed
1005e8e4:	mov    WORD PTR [ebp-0x16],ax
1005e8e8:	jmp    0x1005eac0
1005e8ed:	cmp    si,ax
1005e8f0:	jne    0x1005e906
1005e8f2:	inc    edi
1005e8f3:	test   DWORD PTR [ebp-0x28],0x7fffffff
1005e8fa:	jne    0x1005e906
1005e8fc:	cmp    DWORD PTR [ebp-0x2c],eax
1005e8ff:	jne    0x1005e906
1005e901:	cmp    DWORD PTR [ebp-0x30],eax
1005e904:	je     0x1005e8c3
1005e906:	and    DWORD PTR [ebp-0x54],0x0
1005e90a:	lea    eax,[ebp-0xc]
1005e90d:	mov    DWORD PTR [ebp-0x40],0x5
1005e914:	mov    edx,DWORD PTR [ebp-0x54]
1005e917:	mov    esi,DWORD PTR [ebp-0x40]
1005e91a:	add    edx,edx
1005e91c:	test   esi,esi
1005e91e:	mov    DWORD PTR [ebp-0x50],esi
1005e921:	jle    0x1005e975
1005e923:	lea    esi,[ebp-0x28]
1005e926:	lea    edx,[ebp+edx*1-0x20]
1005e92a:	mov    DWORD PTR [ebp-0x5c],esi
1005e92d:	mov    DWORD PTR [ebp-0x48],edx
1005e930:	mov    edx,DWORD PTR [ebp-0x5c]
1005e933:	mov    esi,DWORD PTR [ebp-0x48]
1005e936:	movzx  esi,WORD PTR [esi]
1005e939:	movzx  edx,WORD PTR [edx]
1005e93c:	and    DWORD PTR [ebp-0x44],0x0
1005e940:	imul   edx,esi
1005e943:	mov    esi,DWORD PTR [eax-0x4]
1005e946:	lea    ebx,[esi+edx*1]
1005e949:	cmp    ebx,esi
1005e94b:	jb     0x1005e951
1005e94d:	cmp    ebx,edx
1005e94f:	jae    0x1005e958
1005e951:	mov    DWORD PTR [ebp-0x44],0x1
1005e958:	cmp    DWORD PTR [ebp-0x44],0x0
1005e95c:	mov    DWORD PTR [eax-0x4],ebx
1005e95f:	je     0x1005e964
1005e961:	inc    WORD PTR [eax]
1005e964:	add    DWORD PTR [ebp-0x48],0x2
1005e968:	sub    DWORD PTR [ebp-0x5c],0x2
1005e96c:	dec    DWORD PTR [ebp-0x50]
1005e96f:	cmp    DWORD PTR [ebp-0x50],0x0
1005e973:	jg     0x1005e930
1005e975:	inc    eax
1005e976:	inc    eax
1005e977:	inc    DWORD PTR [ebp-0x54]
1005e97a:	dec    DWORD PTR [ebp-0x40]
1005e97d:	cmp    DWORD PTR [ebp-0x40],0x0
1005e981:	jg     0x1005e914
1005e983:	add    edi,0xc002
1005e989:	xor    eax,eax
1005e98b:	cmp    di,ax
1005e98e:	jle    0x1005e9cc
1005e990:	test   DWORD PTR [ebp-0x8],0x80000000
1005e997:	jne    0x1005e9c7
1005e999:	mov    edx,DWORD PTR [ebp-0x10]
1005e99c:	mov    ebx,DWORD PTR [ebp-0xc]
1005e99f:	mov    esi,DWORD PTR [ebp-0xc]
1005e9a2:	shl    DWORD PTR [ebp-0x10],1
1005e9a5:	shr    edx,0x1f
1005e9a8:	add    ebx,ebx
1005e9aa:	or     ebx,edx
1005e9ac:	mov    edx,DWORD PTR [ebp-0x8]
1005e9af:	shr    esi,0x1f
1005e9b2:	add    edx,edx
1005e9b4:	or     edx,esi
1005e9b6:	add    edi,0xffff
1005e9bc:	cmp    di,ax
1005e9bf:	mov    DWORD PTR [ebp-0xc],ebx
1005e9c2:	mov    DWORD PTR [ebp-0x8],edx
1005e9c5:	jg     0x1005e990
1005e9c7:	cmp    di,ax
1005e9ca:	jg     0x1005ea1b
1005e9cc:	add    edi,0xffff
1005e9d2:	cmp    di,ax
1005e9d5:	jge    0x1005ea1b
1005e9d7:	mov    eax,edi
1005e9d9:	neg    eax
1005e9db:	movzx  eax,ax
1005e9de:	add    edi,eax
1005e9e0:	test   BYTE PTR [ebp-0x10],0x1
1005e9e4:	je     0x1005e9e9
1005e9e6:	inc    DWORD PTR [ebp-0x58]
1005e9e9:	mov    edx,DWORD PTR [ebp-0x8]
1005e9ec:	mov    ebx,DWORD PTR [ebp-0xc]
1005e9ef:	mov    esi,DWORD PTR [ebp-0xc]
1005e9f2:	shr    DWORD PTR [ebp-0x8],1
1005e9f5:	shl    edx,0x1f
1005e9f8:	shr    ebx,1
1005e9fa:	or     ebx,edx
1005e9fc:	mov    edx,DWORD PTR [ebp-0x10]
1005e9ff:	shl    esi,0x1f
1005ea02:	shr    edx,1
1005ea04:	or     edx,esi
1005ea06:	dec    eax
1005ea07:	mov    DWORD PTR [ebp-0xc],ebx
1005ea0a:	mov    DWORD PTR [ebp-0x10],edx
1005ea0d:	jne    0x1005e9e0
1005ea0f:	xor    eax,eax
1005ea11:	cmp    DWORD PTR [ebp-0x58],eax
1005ea14:	je     0x1005ea1b
1005ea16:	or     WORD PTR [ebp-0x10],0x1
1005ea1b:	cmp    WORD PTR [ebp-0x10],0x8000
1005ea21:	ja     0x1005ea34
1005ea23:	mov    edx,DWORD PTR [ebp-0x10]
1005ea26:	and    edx,0x1ffff
1005ea2c:	cmp    edx,0x18000
1005ea32:	jne    0x1005ea65
1005ea34:	cmp    DWORD PTR [ebp-0xe],0xffffffff
1005ea38:	jne    0x1005ea62
1005ea3a:	cmp    DWORD PTR [ebp-0xa],0xffffffff
1005ea3e:	mov    DWORD PTR [ebp-0xe],eax
1005ea41:	jne    0x1005ea5d
1005ea43:	cmp    WORD PTR [ebp-0x6],0xffff
1005ea49:	mov    DWORD PTR [ebp-0xa],eax
1005ea4c:	jne    0x1005ea57
1005ea4e:	mov    WORD PTR [ebp-0x6],0x8000
1005ea54:	inc    edi
1005ea55:	jmp    0x1005ea65
1005ea57:	inc    WORD PTR [ebp-0x6]
1005ea5b:	jmp    0x1005ea65
1005ea5d:	inc    DWORD PTR [ebp-0xa]
1005ea60:	jmp    0x1005ea65
1005ea62:	inc    DWORD PTR [ebp-0xe]
1005ea65:	cmp    di,0x7fff
1005ea6a:	jb     0x1005ea8a
1005ea6c:	neg    cx
1005ea6f:	mov    DWORD PTR [ebp-0x1c],eax
1005ea72:	mov    DWORD PTR [ebp-0x20],eax
1005ea75:	sbb    ecx,ecx
1005ea77:	and    ecx,0x80000000
1005ea7d:	add    ecx,0x7fff8000
1005ea83:	mov    DWORD PTR [ebp-0x18],ecx
1005ea86:	xor    eax,eax
1005ea88:	jmp    0x1005eac0
1005ea8a:	mov    ax,WORD PTR [ebp-0xe]
1005ea8e:	mov    WORD PTR [ebp-0x20],ax
1005ea92:	mov    eax,DWORD PTR [ebp-0xc]
1005ea95:	mov    DWORD PTR [ebp-0x1e],eax
1005ea98:	mov    eax,DWORD PTR [ebp-0x8]
1005ea9b:	or     edi,ecx
1005ea9d:	mov    DWORD PTR [ebp-0x1a],eax
1005eaa0:	mov    WORD PTR [ebp-0x16],di
1005eaa4:	jmp    0x1005ea86
1005eaa6:	neg    cx
1005eaa9:	sbb    ecx,ecx
1005eaab:	and    ecx,0x80000000
1005eab1:	add    ecx,0x7fff8000
1005eab7:	mov    DWORD PTR [ebp-0x18],ecx
1005eaba:	mov    DWORD PTR [ebp-0x1c],eax
1005eabd:	mov    DWORD PTR [ebp-0x20],eax
1005eac0:	test   BYTE PTR [ebp+0x18],0x1
1005eac4:	mov    edx,DWORD PTR [ebp-0x60]
1005eac7:	mov    ecx,DWORD PTR [ebp-0x4c]
1005eaca:	mov    WORD PTR [edx],cx
1005eacd:	je     0x1005eb01
1005eacf:	movsx  ecx,cx
1005ead2:	add    DWORD PTR [ebp+0x14],ecx
1005ead5:	cmp    DWORD PTR [ebp+0x14],eax
1005ead8:	jg     0x1005eb01
1005eada:	and    WORD PTR [edx],0x0
1005eade:	cmp    WORD PTR [ebp-0x6c],0x8000
1005eae4:	mov    BYTE PTR [edx+0x3],0x1
1005eae8:	setne  al
1005eaeb:	dec    al
1005eaed:	and    al,0xd
1005eaef:	add    al,0x20
1005eaf1:	mov    BYTE PTR [edx+0x2],al
1005eaf4:	mov    BYTE PTR [edx+0x4],0x30
1005eaf8:	mov    BYTE PTR [edx+0x5],0x0
1005eafc:	jmp    0x1005e4b0
1005eb01:	push   0x15
1005eb03:	pop    ecx
1005eb04:	cmp    DWORD PTR [ebp+0x14],ecx
1005eb07:	jle    0x1005eb0c
1005eb09:	mov    DWORD PTR [ebp+0x14],ecx
1005eb0c:	mov    esi,DWORD PTR [ebp-0x18]
1005eb0f:	shr    esi,0x10
1005eb12:	push   0x8
1005eb14:	sub    esi,0x3ffe
1005eb1a:	mov    WORD PTR [ebp-0x16],ax
1005eb1e:	pop    ebx
1005eb1f:	mov    eax,DWORD PTR [ebp-0x20]
1005eb22:	mov    edi,DWORD PTR [ebp-0x1c]
1005eb25:	mov    ecx,DWORD PTR [ebp-0x1c]
1005eb28:	shl    DWORD PTR [ebp-0x20],1
1005eb2b:	shr    eax,0x1f
1005eb2e:	add    edi,edi
1005eb30:	or     edi,eax
1005eb32:	mov    eax,DWORD PTR [ebp-0x18]
1005eb35:	shr    ecx,0x1f
1005eb38:	add    eax,eax
1005eb3a:	or     eax,ecx
1005eb3c:	dec    ebx
1005eb3d:	mov    DWORD PTR [ebp-0x1c],edi
1005eb40:	mov    DWORD PTR [ebp-0x18],eax
1005eb43:	jne    0x1005eb1f
1005eb45:	test   esi,esi
1005eb47:	jge    0x1005eb7b
1005eb49:	neg    esi
1005eb4b:	and    esi,0xff
1005eb51:	jle    0x1005eb7b
1005eb53:	mov    eax,DWORD PTR [ebp-0x18]
1005eb56:	mov    edi,DWORD PTR [ebp-0x1c]
1005eb59:	mov    ecx,DWORD PTR [ebp-0x1c]
1005eb5c:	shr    DWORD PTR [ebp-0x18],1
1005eb5f:	shl    eax,0x1f
1005eb62:	shr    edi,1
1005eb64:	or     edi,eax
1005eb66:	mov    eax,DWORD PTR [ebp-0x20]
1005eb69:	shl    ecx,0x1f
1005eb6c:	shr    eax,1
1005eb6e:	or     eax,ecx
1005eb70:	dec    esi
1005eb71:	test   esi,esi
1005eb73:	mov    DWORD PTR [ebp-0x1c],edi
1005eb76:	mov    DWORD PTR [ebp-0x20],eax
1005eb79:	jg     0x1005eb53
1005eb7b:	mov    eax,DWORD PTR [ebp+0x14]
1005eb7e:	inc    eax
1005eb7f:	test   eax,eax
1005eb81:	lea    ebx,[edx+0x4]
1005eb84:	mov    DWORD PTR [ebp-0x40],ebx
1005eb87:	mov    DWORD PTR [ebp-0x4c],eax
1005eb8a:	jle    0x1005ec45
1005eb90:	mov    edx,DWORD PTR [ebp-0x20]
1005eb93:	mov    eax,DWORD PTR [ebp-0x1c]
1005eb96:	lea    esi,[ebp-0x20]
1005eb99:	lea    edi,[ebp-0x3c]
1005eb9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005eb9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005eb9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005eb9f:	shl    DWORD PTR [ebp-0x20],1
1005eba2:	mov    edi,DWORD PTR [ebp-0x20]
1005eba5:	shl    DWORD PTR [ebp-0x20],1
1005eba8:	shr    edx,0x1f
1005ebab:	lea    ecx,[eax+eax*1]
1005ebae:	or     ecx,edx
1005ebb0:	mov    edx,DWORD PTR [ebp-0x18]
1005ebb3:	mov    esi,eax
1005ebb5:	shr    esi,0x1f
1005ebb8:	add    edx,edx
1005ebba:	or     edx,esi
1005ebbc:	mov    eax,ecx
1005ebbe:	lea    esi,[ecx+ecx*1]
1005ebc1:	shr    eax,0x1f
1005ebc4:	lea    ecx,[edx+edx*1]
1005ebc7:	mov    edx,DWORD PTR [ebp-0x3c]
1005ebca:	shr    edi,0x1f
1005ebcd:	or     ecx,eax
1005ebcf:	mov    eax,DWORD PTR [ebp-0x20]
1005ebd2:	or     esi,edi
1005ebd4:	lea    edi,[edx+eax*1]
1005ebd7:	cmp    edi,eax
1005ebd9:	jb     0x1005ebdf
1005ebdb:	cmp    edi,edx
1005ebdd:	jae    0x1005ebf7
1005ebdf:	lea    eax,[esi+0x1]
1005ebe2:	xor    edx,edx
1005ebe4:	cmp    eax,esi
1005ebe6:	jb     0x1005ebed
1005ebe8:	cmp    eax,0x1
1005ebeb:	jae    0x1005ebf0
1005ebed:	xor    edx,edx
1005ebef:	inc    edx
1005ebf0:	test   edx,edx
1005ebf2:	mov    esi,eax
1005ebf4:	je     0x1005ebf7
1005ebf6:	inc    ecx
1005ebf7:	mov    eax,DWORD PTR [ebp-0x38]
1005ebfa:	lea    edx,[eax+esi*1]
1005ebfd:	cmp    edx,esi
1005ebff:	mov    DWORD PTR [ebp-0x44],edx
1005ec02:	jb     0x1005ec08
1005ec04:	cmp    edx,eax
1005ec06:	jae    0x1005ec09
1005ec08:	inc    ecx
1005ec09:	add    ecx,DWORD PTR [ebp-0x34]
1005ec0c:	shr    edx,0x1f
1005ec0f:	add    ecx,ecx
1005ec11:	or     ecx,edx
1005ec13:	lea    esi,[edi+edi*1]
1005ec16:	mov    DWORD PTR [ebp-0x20],esi
1005ec19:	mov    esi,DWORD PTR [ebp-0x44]
1005ec1c:	mov    DWORD PTR [ebp-0x18],ecx
1005ec1f:	shr    ecx,0x18
1005ec22:	add    esi,esi
1005ec24:	add    cl,0x30
1005ec27:	mov    eax,edi
1005ec29:	shr    eax,0x1f
1005ec2c:	or     esi,eax
1005ec2e:	mov    BYTE PTR [ebx],cl
1005ec30:	inc    ebx
1005ec31:	dec    DWORD PTR [ebp-0x4c]
1005ec34:	cmp    DWORD PTR [ebp-0x4c],0x0
1005ec38:	mov    DWORD PTR [ebp-0x1c],esi
1005ec3b:	mov    BYTE PTR [ebp-0x15],0x0
1005ec3f:	jg     0x1005eb90
1005ec45:	dec    ebx
1005ec46:	mov    al,BYTE PTR [ebx]
1005ec48:	dec    ebx
1005ec49:	cmp    al,0x35
1005ec4b:	jge    0x1005ec5b
1005ec4d:	mov    ecx,DWORD PTR [ebp-0x40]
1005ec50:	jmp    0x1005ec96
1005ec52:	cmp    BYTE PTR [ebx],0x39
1005ec55:	jne    0x1005ec60
1005ec57:	mov    BYTE PTR [ebx],0x30
1005ec5a:	dec    ebx
1005ec5b:	cmp    ebx,DWORD PTR [ebp-0x40]
1005ec5e:	jae    0x1005ec52
1005ec60:	cmp    ebx,DWORD PTR [ebp-0x40]
1005ec63:	mov    eax,DWORD PTR [ebp-0x60]
1005ec66:	jae    0x1005ec6c
1005ec68:	inc    ebx
1005ec69:	inc    WORD PTR [eax]
1005ec6c:	inc    BYTE PTR [ebx]
1005ec6e:	sub    bl,al
1005ec70:	sub    bl,0x3
1005ec73:	movsx  ecx,bl
1005ec76:	mov    BYTE PTR [eax+0x3],bl
1005ec79:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
1005ec7e:	mov    eax,DWORD PTR [ebp-0x74]
1005ec81:	mov    ecx,DWORD PTR [ebp-0x4]
1005ec84:	pop    edi
1005ec85:	pop    esi
1005ec86:	xor    ecx,ebp
1005ec88:	pop    ebx
1005ec89:	call   0x10042e97
1005ec8e:	leave  
1005ec8f:	ret    
1005ec90:	cmp    BYTE PTR [ebx],0x30
1005ec93:	jne    0x1005ec9a
1005ec95:	dec    ebx
1005ec96:	cmp    ebx,ecx
1005ec98:	jae    0x1005ec90
1005ec9a:	cmp    ebx,ecx
1005ec9c:	mov    eax,DWORD PTR [ebp-0x60]
1005ec9f:	jae    0x1005ec6e
1005eca1:	and    WORD PTR [eax],0x0
1005eca5:	cmp    WORD PTR [ebp-0x6c],0x8000
1005ecab:	mov    BYTE PTR [eax+0x3],0x1
1005ecaf:	setne  dl
1005ecb2:	dec    dl
1005ecb4:	and    dl,0xd
1005ecb7:	add    dl,0x20
1005ecba:	mov    BYTE PTR [eax+0x2],dl
1005ecbd:	mov    BYTE PTR [ecx],0x30
1005ecc0:	mov    BYTE PTR [eax+0x5],0x0
1005ecc4:	jmp    0x1005e4b0
1005ecc9:	xor    eax,eax
1005eccb:	test   bl,0x10
1005ecce:	je     0x1005ecd1
1005ecd0:	inc    eax
1005ecd1:	test   bl,0x8
1005ecd4:	je     0x1005ecd9
1005ecd6:	or     eax,0x4
1005ecd9:	test   bl,0x4
1005ecdc:	je     0x1005ece1
1005ecde:	or     eax,0x8
1005ece1:	test   bl,0x2
1005ece4:	je     0x1005ece9
1005ece6:	or     eax,0x10
1005ece9:	test   bl,0x1
1005ecec:	je     0x1005ecf1
1005ecee:	or     eax,0x20
1005ecf1:	test   ebx,0x80000
1005ecf7:	je     0x1005ecfc
1005ecf9:	or     eax,0x2
1005ecfc:	mov    ecx,ebx
1005ecfe:	mov    edx,0x300
1005ed03:	and    ecx,edx
1005ed05:	push   esi
1005ed06:	mov    esi,0x200
1005ed0b:	je     0x1005ed30
1005ed0d:	cmp    ecx,0x100
1005ed13:	je     0x1005ed2b
1005ed15:	cmp    ecx,esi
1005ed17:	je     0x1005ed24
1005ed19:	cmp    ecx,edx
1005ed1b:	jne    0x1005ed30
1005ed1d:	or     eax,0xc00
1005ed22:	jmp    0x1005ed30
1005ed24:	or     eax,0x800
1005ed29:	jmp    0x1005ed30
1005ed2b:	or     eax,0x400
1005ed30:	mov    ecx,ebx
1005ed32:	and    ecx,0x30000
1005ed38:	je     0x1005ed46
1005ed3a:	cmp    ecx,0x10000
1005ed40:	jne    0x1005ed48
1005ed42:	or     eax,esi
1005ed44:	jmp    0x1005ed48
1005ed46:	or     eax,edx
1005ed48:	test   ebx,0x40000
1005ed4e:	pop    esi
1005ed4f:	je     0x1005ed56
1005ed51:	or     eax,0x1000
1005ed56:	ret    
1005ed57:	xor    eax,eax
1005ed59:	test   dl,0x10
1005ed5c:	je     0x1005ed63
1005ed5e:	mov    eax,0x80
1005ed63:	test   dl,0x8
1005ed66:	push   ebx
1005ed67:	push   esi
1005ed68:	push   edi
1005ed69:	mov    ebx,0x200
1005ed6e:	je     0x1005ed72
1005ed70:	or     eax,ebx
1005ed72:	test   dl,0x4
1005ed75:	je     0x1005ed7c
1005ed77:	or     eax,0x400
1005ed7c:	test   dl,0x2
1005ed7f:	je     0x1005ed86
1005ed81:	or     eax,0x800
1005ed86:	test   dl,0x1
1005ed89:	je     0x1005ed90
1005ed8b:	or     eax,0x1000
1005ed90:	test   edx,0x80000
1005ed96:	mov    edi,0x100
1005ed9b:	je     0x1005ed9f
1005ed9d:	or     eax,edi
1005ed9f:	mov    ecx,edx
1005eda1:	mov    esi,0x300
1005eda6:	and    ecx,esi
1005eda8:	je     0x1005edc9
1005edaa:	cmp    ecx,edi
1005edac:	je     0x1005edc4
1005edae:	cmp    ecx,ebx
1005edb0:	je     0x1005edbd
1005edb2:	cmp    ecx,esi
1005edb4:	jne    0x1005edc9
1005edb6:	or     eax,0x6000
1005edbb:	jmp    0x1005edc9
1005edbd:	or     eax,0x4000
1005edc2:	jmp    0x1005edc9
1005edc4:	or     eax,0x2000
1005edc9:	mov    ecx,0x3000000
1005edce:	pop    edi
1005edcf:	and    edx,ecx
1005edd1:	cmp    edx,0x1000000
1005edd7:	pop    esi
1005edd8:	pop    ebx
1005edd9:	je     0x1005edf1
1005eddb:	cmp    edx,0x2000000
1005ede1:	je     0x1005eded
1005ede3:	cmp    edx,ecx
1005ede5:	jne    0x1005edf6
1005ede7:	or     eax,0x8000
1005edec:	ret    
1005eded:	or     eax,0x40
1005edf0:	ret    
1005edf1:	or     eax,0x8040
1005edf6:	ret    
1005edf7:	sub    esp,0x10
1005edfa:	push   ebx
1005edfb:	push   ebp
1005edfc:	push   esi
1005edfd:	push   edi
1005edfe:	fstcw  WORD PTR [esp+0x14]
1005ee03:	mov    ebx,DWORD PTR [esp+0x14]
1005ee07:	xor    edx,edx
1005ee09:	test   bl,0x1
1005ee0c:	je     0x1005ee11
1005ee0e:	push   0x10
1005ee10:	pop    edx
1005ee11:	test   bl,0x4
1005ee14:	je     0x1005ee19
1005ee16:	or     edx,0x8
1005ee19:	test   bl,0x8
1005ee1c:	je     0x1005ee21
1005ee1e:	or     edx,0x4
1005ee21:	test   bl,0x10
1005ee24:	je     0x1005ee29
1005ee26:	or     edx,0x2
1005ee29:	test   bl,0x20
1005ee2c:	je     0x1005ee31
1005ee2e:	or     edx,0x1
1005ee31:	test   bl,0x2
1005ee34:	je     0x1005ee3c
1005ee36:	or     edx,0x80000
1005ee3c:	movzx  ecx,bx
1005ee3f:	mov    eax,ecx
1005ee41:	mov    edi,0xc00
1005ee46:	and    eax,edi
1005ee48:	mov    ebp,0x300
1005ee4d:	mov    esi,0x200
1005ee52:	je     0x1005ee74
1005ee54:	cmp    eax,0x400
1005ee59:	je     0x1005ee6e
1005ee5b:	cmp    eax,0x800
1005ee60:	je     0x1005ee6a
1005ee62:	cmp    eax,edi
1005ee64:	jne    0x1005ee74
1005ee66:	or     edx,ebp
1005ee68:	jmp    0x1005ee74
1005ee6a:	or     edx,esi
1005ee6c:	jmp    0x1005ee74
1005ee6e:	or     edx,0x100
1005ee74:	and    ecx,ebp
1005ee76:	je     0x1005ee84
1005ee78:	cmp    ecx,esi
1005ee7a:	jne    0x1005ee8a
1005ee7c:	or     edx,0x10000
1005ee82:	jmp    0x1005ee8a
1005ee84:	or     edx,0x20000
1005ee8a:	test   bx,0x1000
1005ee8f:	je     0x1005ee97
1005ee91:	or     edx,0x40000
1005ee97:	mov    esi,DWORD PTR [esp+0x28]
1005ee9b:	mov    ecx,DWORD PTR [esp+0x24]
1005ee9f:	mov    eax,esi
1005eea1:	not    eax
1005eea3:	and    eax,edx
1005eea5:	and    ecx,esi
1005eea7:	or     eax,ecx
1005eea9:	cmp    eax,edx
1005eeab:	mov    DWORD PTR [esp+0x1c],eax
1005eeaf:	je     0x1005ef5f
1005eeb5:	mov    ebx,eax
1005eeb7:	call   0x1005ecc9
1005eebc:	movzx  eax,ax
1005eebf:	mov    DWORD PTR [esp+0x10],eax
1005eec3:	fldcw  WORD PTR [esp+0x10]
1005eec7:	fstcw  WORD PTR [esp+0x10]
1005eecc:	mov    ebx,DWORD PTR [esp+0x10]
1005eed0:	xor    edx,edx
1005eed2:	test   bl,0x1
1005eed5:	je     0x1005eeda
1005eed7:	push   0x10
1005eed9:	pop    edx
1005eeda:	test   bl,0x4
1005eedd:	je     0x1005eee2
1005eedf:	or     edx,0x8
1005eee2:	test   bl,0x8
1005eee5:	je     0x1005eeea
1005eee7:	or     edx,0x4
1005eeea:	test   bl,0x10
1005eeed:	je     0x1005eef2
1005eeef:	or     edx,0x2
1005eef2:	test   bl,0x20
1005eef5:	je     0x1005eefa
1005eef7:	or     edx,0x1
1005eefa:	test   bl,0x2
1005eefd:	je     0x1005ef05
1005eeff:	or     edx,0x80000
1005ef05:	movzx  ecx,bx
1005ef08:	mov    eax,ecx
1005ef0a:	and    eax,edi
1005ef0c:	je     0x1005ef32
1005ef0e:	cmp    eax,0x400
1005ef13:	je     0x1005ef2c
1005ef15:	cmp    eax,0x800
1005ef1a:	je     0x1005ef24
1005ef1c:	cmp    eax,edi
1005ef1e:	jne    0x1005ef32
1005ef20:	or     edx,ebp
1005ef22:	jmp    0x1005ef32
1005ef24:	or     edx,0x200
1005ef2a:	jmp    0x1005ef32
1005ef2c:	or     edx,0x100
1005ef32:	and    ecx,ebp
1005ef34:	je     0x1005ef46
1005ef36:	cmp    ecx,0x200
1005ef3c:	jne    0x1005ef4c
1005ef3e:	or     edx,0x10000
1005ef44:	jmp    0x1005ef4c
1005ef46:	or     edx,0x20000
1005ef4c:	test   bx,0x1000
1005ef51:	je     0x1005ef59
1005ef53:	or     edx,0x40000
1005ef59:	mov    eax,edx
1005ef5b:	mov    DWORD PTR [esp+0x1c],edx
1005ef5f:	cmp    DWORD PTR ds:0x10082584,0x0
1005ef66:	je     0x1005f0f2
1005ef6c:	and    esi,0x308031f
1005ef72:	mov    edi,esi
1005ef74:	stmxcsr DWORD PTR [esp+0x18]
1005ef79:	mov    eax,DWORD PTR [esp+0x18]
1005ef7d:	xor    esi,esi
1005ef7f:	test   al,al
1005ef81:	jns    0x1005ef86
1005ef83:	push   0x10
1005ef85:	pop    esi
1005ef86:	test   ax,0x200
1005ef8a:	je     0x1005ef8f
1005ef8c:	or     esi,0x8
1005ef8f:	test   ax,0x400
1005ef93:	je     0x1005ef98
1005ef95:	or     esi,0x4
1005ef98:	test   ax,0x800
1005ef9c:	je     0x1005efa1
1005ef9e:	or     esi,0x2
1005efa1:	test   ax,0x1000
1005efa5:	je     0x1005efaa
1005efa7:	or     esi,0x1
1005efaa:	test   ax,0x100
1005efae:	je     0x1005efb6
1005efb0:	or     esi,0x80000
1005efb6:	mov    ecx,eax
1005efb8:	mov    ebp,0x6000
1005efbd:	and    ecx,ebp
1005efbf:	je     0x1005efeb
1005efc1:	cmp    ecx,0x2000
1005efc7:	je     0x1005efe5
1005efc9:	cmp    ecx,0x4000
1005efcf:	je     0x1005efdd
1005efd1:	cmp    ecx,ebp
1005efd3:	jne    0x1005efeb
1005efd5:	or     esi,0x300
1005efdb:	jmp    0x1005efeb
1005efdd:	or     esi,0x200
1005efe3:	jmp    0x1005efeb
1005efe5:	or     esi,0x100
1005efeb:	mov    ebx,0x8040
1005eff0:	and    eax,ebx
1005eff2:	sub    eax,0x40
1005eff5:	je     0x1005f013
1005eff7:	sub    eax,0x7fc0
1005effc:	je     0x1005f00b
1005effe:	sub    eax,0x40
1005f001:	jne    0x1005f019
1005f003:	or     esi,0x1000000
1005f009:	jmp    0x1005f019
1005f00b:	or     esi,0x3000000
1005f011:	jmp    0x1005f019
1005f013:	or     esi,0x2000000
1005f019:	mov    edx,edi
1005f01b:	and    edi,DWORD PTR [esp+0x24]
1005f01f:	not    edx
1005f021:	and    edx,esi
1005f023:	or     edx,edi
1005f025:	cmp    edx,esi
1005f027:	jne    0x1005f030
1005f029:	mov    eax,esi
1005f02b:	jmp    0x1005f0db
1005f030:	call   0x1005ed57
1005f035:	push   eax
1005f036:	mov    DWORD PTR [esp+0x2c],eax
1005f03a:	call   0x1005f2c6
1005f03f:	pop    ecx
1005f040:	stmxcsr DWORD PTR [esp+0x28]
1005f045:	mov    eax,DWORD PTR [esp+0x28]
1005f049:	xor    edx,edx
1005f04b:	test   al,al
1005f04d:	jns    0x1005f052
1005f04f:	push   0x10
1005f051:	pop    edx
1005f052:	mov    edi,0x200
1005f057:	test   edi,eax
1005f059:	je     0x1005f05e
1005f05b:	or     edx,0x8
1005f05e:	test   ax,0x400
1005f062:	je     0x1005f067
1005f064:	or     edx,0x4
1005f067:	test   ax,0x800
1005f06b:	je     0x1005f070
1005f06d:	or     edx,0x2
1005f070:	test   ax,0x1000
1005f074:	je     0x1005f079
1005f076:	or     edx,0x1
1005f079:	mov    esi,0x100
1005f07e:	test   esi,eax
1005f080:	je     0x1005f088
1005f082:	or     edx,0x80000
1005f088:	mov    ecx,eax
1005f08a:	and    ecx,ebp
1005f08c:	je     0x1005f0b0
1005f08e:	cmp    ecx,0x2000
1005f094:	je     0x1005f0ae
1005f096:	cmp    ecx,0x4000
1005f09c:	je     0x1005f0aa
1005f09e:	cmp    ecx,ebp
1005f0a0:	jne    0x1005f0b0
1005f0a2:	or     edx,0x300
1005f0a8:	jmp    0x1005f0b0
1005f0aa:	or     edx,edi
1005f0ac:	jmp    0x1005f0b0
1005f0ae:	or     edx,esi
1005f0b0:	and    eax,ebx
1005f0b2:	sub    eax,0x40
1005f0b5:	je     0x1005f0d3
1005f0b7:	sub    eax,0x7fc0
1005f0bc:	je     0x1005f0cb
1005f0be:	sub    eax,0x40
1005f0c1:	jne    0x1005f0d9
1005f0c3:	or     edx,0x1000000
1005f0c9:	jmp    0x1005f0d9
1005f0cb:	or     edx,0x3000000
1005f0d1:	jmp    0x1005f0d9
1005f0d3:	or     edx,0x2000000
1005f0d9:	mov    eax,edx
1005f0db:	mov    ecx,DWORD PTR [esp+0x1c]
1005f0df:	mov    edx,eax
1005f0e1:	xor    edx,ecx
1005f0e3:	or     eax,ecx
1005f0e5:	test   edx,0x8031f
1005f0eb:	je     0x1005f0f2
1005f0ed:	or     eax,0x80000000
1005f0f2:	pop    edi
1005f0f3:	pop    esi
1005f0f4:	pop    ebp
1005f0f5:	pop    ebx
1005f0f6:	add    esp,0x10
1005f0f9:	ret    
1005f0fa:	push   ebp
1005f0fb:	mov    ebp,esp
1005f0fd:	sub    esp,0x18
1005f100:	mov    eax,ds:0x1007e030
1005f105:	xor    eax,ebp
1005f107:	mov    DWORD PTR [ebp-0x4],eax
1005f10a:	mov    eax,DWORD PTR [ebp+0x10]
1005f10d:	push   ebx
1005f10e:	push   esi
1005f10f:	xor    esi,esi
1005f111:	cmp    DWORD PTR [ebp+0xc],esi
1005f114:	push   edi
1005f115:	mov    DWORD PTR [ebp-0x18],0x404e
1005f11c:	mov    DWORD PTR [eax],esi
1005f11e:	mov    DWORD PTR [eax+0x4],esi
1005f121:	mov    DWORD PTR [eax+0x8],esi
1005f124:	jbe    0x1005f270
1005f12a:	mov    edx,DWORD PTR [eax]
1005f12c:	mov    ebx,DWORD PTR [eax+0x4]
1005f12f:	mov    esi,eax
1005f131:	lea    edi,[ebp-0x10]
1005f134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005f135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005f136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005f137:	mov    ecx,edx
1005f139:	shr    ecx,0x1f
1005f13c:	lea    edi,[edx+edx*1]
1005f13f:	lea    edx,[ebx+ebx*1]
1005f142:	or     edx,ecx
1005f144:	mov    ecx,DWORD PTR [eax+0x8]
1005f147:	mov    esi,ebx
1005f149:	shr    esi,0x1f
1005f14c:	add    ecx,ecx
1005f14e:	or     ecx,esi
1005f150:	mov    DWORD PTR [ebp-0x14],edi
1005f153:	mov    esi,edi
1005f155:	and    DWORD PTR [ebp-0x14],0x0
1005f159:	mov    ebx,edx
1005f15b:	shr    ebx,0x1f
1005f15e:	add    ecx,ecx
1005f160:	shr    edi,0x1f
1005f163:	or     ecx,ebx
1005f165:	mov    ebx,DWORD PTR [ebp-0x10]
1005f168:	add    esi,esi
1005f16a:	add    edx,edx
1005f16c:	or     edx,edi
1005f16e:	lea    edi,[esi+ebx*1]
1005f171:	cmp    edi,esi
1005f173:	mov    DWORD PTR [eax],esi
1005f175:	mov    DWORD PTR [eax+0x4],edx
1005f178:	mov    DWORD PTR [eax+0x8],ecx
1005f17b:	jb     0x1005f181
1005f17d:	cmp    edi,ebx
1005f17f:	jae    0x1005f188
1005f181:	mov    DWORD PTR [ebp-0x14],0x1
1005f188:	xor    ebx,ebx
1005f18a:	cmp    DWORD PTR [ebp-0x14],ebx
1005f18d:	mov    DWORD PTR [eax],edi
1005f18f:	je     0x1005f1ab
1005f191:	lea    esi,[edx+0x1]
1005f194:	cmp    esi,edx
1005f196:	jb     0x1005f19d
1005f198:	cmp    esi,0x1
1005f19b:	jae    0x1005f1a0
1005f19d:	xor    ebx,ebx
1005f19f:	inc    ebx
1005f1a0:	test   ebx,ebx
1005f1a2:	mov    DWORD PTR [eax+0x4],esi
1005f1a5:	je     0x1005f1ab
1005f1a7:	inc    ecx
1005f1a8:	mov    DWORD PTR [eax+0x8],ecx
1005f1ab:	mov    ecx,DWORD PTR [eax+0x4]
1005f1ae:	mov    edx,DWORD PTR [ebp-0xc]
1005f1b1:	lea    ebx,[ecx+edx*1]
1005f1b4:	xor    esi,esi
1005f1b6:	cmp    ebx,ecx
1005f1b8:	jb     0x1005f1be
1005f1ba:	cmp    ebx,edx
1005f1bc:	jae    0x1005f1c1
1005f1be:	xor    esi,esi
1005f1c0:	inc    esi
1005f1c1:	test   esi,esi
1005f1c3:	mov    DWORD PTR [eax+0x4],ebx
1005f1c6:	je     0x1005f1cb
1005f1c8:	inc    DWORD PTR [eax+0x8]
1005f1cb:	mov    ecx,DWORD PTR [ebp-0x8]
1005f1ce:	add    DWORD PTR [eax+0x8],ecx
1005f1d1:	and    DWORD PTR [ebp-0x14],0x0
1005f1d5:	lea    ecx,[edi+edi*1]
1005f1d8:	mov    edx,edi
1005f1da:	shr    edx,0x1f
1005f1dd:	lea    edi,[ebx+ebx*1]
1005f1e0:	or     edi,edx
1005f1e2:	mov    edx,DWORD PTR [eax+0x8]
1005f1e5:	mov    esi,ebx
1005f1e7:	shr    esi,0x1f
1005f1ea:	lea    ebx,[edx+edx*1]
1005f1ed:	mov    edx,DWORD PTR [ebp+0x8]
1005f1f0:	or     ebx,esi
1005f1f2:	mov    DWORD PTR [eax],ecx
1005f1f4:	mov    DWORD PTR [eax+0x4],edi
1005f1f7:	mov    DWORD PTR [eax+0x8],ebx
1005f1fa:	movsx  edx,BYTE PTR [edx]
1005f1fd:	lea    esi,[ecx+edx*1]
1005f200:	cmp    esi,ecx
1005f202:	mov    DWORD PTR [ebp-0x10],edx
1005f205:	jb     0x1005f20b
1005f207:	cmp    esi,edx
1005f209:	jae    0x1005f212
1005f20b:	mov    DWORD PTR [ebp-0x14],0x1
1005f212:	cmp    DWORD PTR [ebp-0x14],0x0
1005f216:	mov    DWORD PTR [eax],esi
1005f218:	je     0x1005f236
1005f21a:	lea    ecx,[edi+0x1]
1005f21d:	xor    edx,edx
1005f21f:	cmp    ecx,edi
1005f221:	jb     0x1005f228
1005f223:	cmp    ecx,0x1
1005f226:	jae    0x1005f22b
1005f228:	xor    edx,edx
1005f22a:	inc    edx
1005f22b:	test   edx,edx
1005f22d:	mov    DWORD PTR [eax+0x4],ecx
1005f230:	je     0x1005f236
1005f232:	inc    ebx
1005f233:	mov    DWORD PTR [eax+0x8],ebx
1005f236:	dec    DWORD PTR [ebp+0xc]
1005f239:	inc    DWORD PTR [ebp+0x8]
1005f23c:	cmp    DWORD PTR [ebp+0xc],0x0
1005f240:	ja     0x1005f12a
1005f246:	xor    esi,esi
1005f248:	jmp    0x1005f270
1005f24a:	mov    ecx,DWORD PTR [eax+0x4]
1005f24d:	mov    edx,ecx
1005f24f:	shr    edx,0x10
1005f252:	mov    DWORD PTR [eax+0x8],edx
1005f255:	mov    edx,DWORD PTR [eax]
1005f257:	mov    edi,edx
1005f259:	shl    ecx,0x10
1005f25c:	shr    edi,0x10
1005f25f:	or     ecx,edi
1005f261:	shl    edx,0x10
1005f264:	add    DWORD PTR [ebp-0x18],0xfff0
1005f26b:	mov    DWORD PTR [eax+0x4],ecx
1005f26e:	mov    DWORD PTR [eax],edx
1005f270:	cmp    DWORD PTR [eax+0x8],esi
1005f273:	je     0x1005f24a
1005f275:	mov    ebx,0x8000
1005f27a:	test   DWORD PTR [eax+0x8],ebx
1005f27d:	jne    0x1005f2af
1005f27f:	mov    esi,DWORD PTR [eax]
1005f281:	mov    edi,DWORD PTR [eax+0x4]
1005f284:	add    DWORD PTR [ebp-0x18],0xffff
1005f28b:	mov    ecx,esi
1005f28d:	add    esi,esi
1005f28f:	shr    ecx,0x1f
1005f292:	mov    DWORD PTR [eax],esi
1005f294:	lea    esi,[edi+edi*1]
1005f297:	or     esi,ecx
1005f299:	mov    ecx,DWORD PTR [eax+0x8]
1005f29c:	mov    edx,edi
1005f29e:	shr    edx,0x1f
1005f2a1:	add    ecx,ecx
1005f2a3:	or     ecx,edx
1005f2a5:	test   ebx,ecx
1005f2a7:	mov    DWORD PTR [eax+0x4],esi
1005f2aa:	mov    DWORD PTR [eax+0x8],ecx
1005f2ad:	je     0x1005f27f
1005f2af:	mov    cx,WORD PTR [ebp-0x18]
1005f2b3:	mov    WORD PTR [eax+0xa],cx
1005f2b7:	mov    ecx,DWORD PTR [ebp-0x4]
1005f2ba:	pop    edi
1005f2bb:	pop    esi
1005f2bc:	xor    ecx,ebp
1005f2be:	pop    ebx
1005f2bf:	call   0x10042e97
1005f2c4:	leave  
1005f2c5:	ret    
1005f2c6:	push   0x8
1005f2c8:	push   0x10074c40
1005f2cd:	call   0x10046c94
1005f2d2:	xor    eax,eax
1005f2d4:	cmp    DWORD PTR ds:0x10082584,eax
1005f2da:	je     0x1005f332
1005f2dc:	test   BYTE PTR [ebp+0x8],0x40
1005f2e0:	je     0x1005f32a
1005f2e2:	cmp    DWORD PTR ds:0x1007f4f4,eax
1005f2e8:	je     0x1005f32a
1005f2ea:	mov    DWORD PTR [ebp-0x4],eax
1005f2ed:	ldmxcsr DWORD PTR [ebp+0x8]
1005f2f1:	jmp    0x1005f321
1005f2f3:	mov    eax,DWORD PTR [ebp-0x14]
1005f2f6:	mov    eax,DWORD PTR [eax]
1005f2f8:	mov    eax,DWORD PTR [eax]
1005f2fa:	cmp    eax,0xc0000005
1005f2ff:	je     0x1005f30b
1005f301:	cmp    eax,0xc000001d
1005f306:	je     0x1005f30b
1005f308:	xor    eax,eax
1005f30a:	ret    
1005f30b:	xor    eax,eax
1005f30d:	inc    eax
1005f30e:	ret    
1005f30f:	mov    esp,DWORD PTR [ebp-0x18]
1005f312:	and    DWORD PTR ds:0x1007f4f4,0x0
1005f319:	and    DWORD PTR [ebp+0x8],0xffffffbf
1005f31d:	ldmxcsr DWORD PTR [ebp+0x8]
1005f321:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005f328:	jmp    0x1005f332
1005f32a:	and    DWORD PTR [ebp+0x8],0xffffffbf
1005f32e:	ldmxcsr DWORD PTR [ebp+0x8]
1005f332:	call   0x10046cd9
1005f337:	ret    
1005f338:	int3   
1005f339:	int3   
1005f33a:	int3   
1005f33b:	int3   
1005f33c:	int3   
1005f33d:	int3   
1005f33e:	int3   
1005f33f:	int3   
1005f340:	push   edi
1005f341:	push   esi
1005f342:	push   ebx
1005f343:	xor    edi,edi
1005f345:	mov    eax,DWORD PTR [esp+0x14]
1005f349:	or     eax,eax
1005f34b:	jge    0x1005f361
1005f34d:	inc    edi
1005f34e:	mov    edx,DWORD PTR [esp+0x10]
1005f352:	neg    eax
1005f354:	neg    edx
1005f356:	sbb    eax,0x0
1005f359:	mov    DWORD PTR [esp+0x14],eax
1005f35d:	mov    DWORD PTR [esp+0x10],edx
1005f361:	mov    eax,DWORD PTR [esp+0x1c]
1005f365:	or     eax,eax
1005f367:	jge    0x1005f37d
1005f369:	inc    edi
1005f36a:	mov    edx,DWORD PTR [esp+0x18]
1005f36e:	neg    eax
1005f370:	neg    edx
1005f372:	sbb    eax,0x0
1005f375:	mov    DWORD PTR [esp+0x1c],eax
1005f379:	mov    DWORD PTR [esp+0x18],edx
1005f37d:	or     eax,eax
1005f37f:	jne    0x1005f399
1005f381:	mov    ecx,DWORD PTR [esp+0x18]
1005f385:	mov    eax,DWORD PTR [esp+0x14]
1005f389:	xor    edx,edx
1005f38b:	div    ecx
1005f38d:	mov    ebx,eax
1005f38f:	mov    eax,DWORD PTR [esp+0x10]
1005f393:	div    ecx
1005f395:	mov    edx,ebx
1005f397:	jmp    0x1005f3da
1005f399:	mov    ebx,eax
1005f39b:	mov    ecx,DWORD PTR [esp+0x18]
1005f39f:	mov    edx,DWORD PTR [esp+0x14]
1005f3a3:	mov    eax,DWORD PTR [esp+0x10]
1005f3a7:	shr    ebx,1
1005f3a9:	rcr    ecx,1
1005f3ab:	shr    edx,1
1005f3ad:	rcr    eax,1
1005f3af:	or     ebx,ebx
1005f3b1:	jne    0x1005f3a7
1005f3b3:	div    ecx
1005f3b5:	mov    esi,eax
1005f3b7:	mul    DWORD PTR [esp+0x1c]
1005f3bb:	mov    ecx,eax
1005f3bd:	mov    eax,DWORD PTR [esp+0x18]
1005f3c1:	mul    esi
1005f3c3:	add    edx,ecx
1005f3c5:	jb     0x1005f3d5
1005f3c7:	cmp    edx,DWORD PTR [esp+0x14]
1005f3cb:	ja     0x1005f3d5
1005f3cd:	jb     0x1005f3d6
1005f3cf:	cmp    eax,DWORD PTR [esp+0x10]
1005f3d3:	jbe    0x1005f3d6
1005f3d5:	dec    esi
1005f3d6:	xor    edx,edx
1005f3d8:	mov    eax,esi
1005f3da:	dec    edi
1005f3db:	jne    0x1005f3e4
1005f3dd:	neg    edx
1005f3df:	neg    eax
1005f3e1:	sbb    edx,0x0
1005f3e4:	pop    ebx
1005f3e5:	pop    esi
1005f3e6:	pop    edi
1005f3e7:	ret    0x10
1005f3ea:	int3   
1005f3eb:	int3   
1005f3ec:	push   0x10046cf0
1005f3f1:	push   DWORD PTR fs:0x0
1005f3f8:	mov    eax,DWORD PTR [esp+0x10]
1005f3fc:	mov    DWORD PTR [esp+0x10],ebp
1005f400:	lea    ebp,[esp+0x10]
1005f404:	sub    esp,eax
1005f406:	push   ebx
1005f407:	push   esi
1005f408:	push   edi
1005f409:	mov    eax,ds:0x1007e030
1005f40e:	xor    DWORD PTR [ebp-0x4],eax
1005f411:	xor    eax,ebp
1005f413:	mov    DWORD PTR [ebp-0x1c],eax
1005f416:	push   eax
1005f417:	mov    DWORD PTR [ebp-0x18],esp
1005f41a:	push   DWORD PTR [ebp-0x8]
1005f41d:	mov    eax,DWORD PTR [ebp-0x4]
1005f420:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005f427:	mov    DWORD PTR [ebp-0x8],eax
1005f42a:	lea    eax,[ebp-0x10]
1005f42d:	mov    fs:0x0,eax
1005f433:	ret    
1005f434:	mov    ecx,DWORD PTR [ebp-0x1c]
1005f437:	xor    ecx,ebp
1005f439:	call   0x10042e97
1005f43e:	jmp    0x10046cd9
1005f443:	int3   
1005f444:	int3   
1005f445:	int3   
1005f446:	int3   
1005f447:	int3   
1005f448:	int3   
1005f449:	int3   
1005f44a:	int3   
1005f44b:	int3   
1005f44c:	int3   
1005f44d:	int3   
1005f44e:	int3   
1005f44f:	int3   
1005f450:	cmp    DWORD PTR ds:0x10082584,0x0
1005f457:	je     0x1005f486
1005f459:	push   ebp
1005f45a:	mov    ebp,esp
1005f45c:	sub    esp,0x8
1005f45f:	and    esp,0xfffffff8
1005f462:	fstp   QWORD PTR [esp]
1005f465:	cvttsd2si eax,QWORD PTR [esp]
1005f46a:	leave  
1005f46b:	ret    
1005f46c:	cmp    DWORD PTR ds:0x10082584,0x0
1005f473:	je     0x1005f486
1005f475:	sub    esp,0x4
1005f478:	fnstcw WORD PTR [esp]
1005f47b:	pop    eax
1005f47c:	and    ax,0x7f
1005f480:	cmp    ax,0x7f
1005f484:	je     0x1005f459
1005f486:	push   ebp
1005f487:	mov    ebp,esp
1005f489:	sub    esp,0x20
1005f48c:	and    esp,0xfffffff0
1005f48f:	fld    st(0)
1005f491:	fst    DWORD PTR [esp+0x18]
1005f495:	fistp  QWORD PTR [esp+0x10]
1005f499:	fild   QWORD PTR [esp+0x10]
1005f49d:	mov    edx,DWORD PTR [esp+0x18]
1005f4a1:	mov    eax,DWORD PTR [esp+0x10]
1005f4a5:	test   eax,eax
1005f4a7:	je     0x1005f4e5
1005f4a9:	fsubp  st(1),st
1005f4ab:	test   edx,edx
1005f4ad:	jns    0x1005f4cd
1005f4af:	fstp   DWORD PTR [esp]
1005f4b2:	mov    ecx,DWORD PTR [esp]
1005f4b5:	xor    ecx,0x80000000
1005f4bb:	add    ecx,0x7fffffff
1005f4c1:	adc    eax,0x0
1005f4c4:	mov    edx,DWORD PTR [esp+0x14]
1005f4c8:	adc    edx,0x0
1005f4cb:	jmp    0x1005f4f9
1005f4cd:	fstp   DWORD PTR [esp]
1005f4d0:	mov    ecx,DWORD PTR [esp]
1005f4d3:	add    ecx,0x7fffffff
1005f4d9:	sbb    eax,0x0
1005f4dc:	mov    edx,DWORD PTR [esp+0x14]
1005f4e0:	sbb    edx,0x0
1005f4e3:	jmp    0x1005f4f9
1005f4e5:	mov    edx,DWORD PTR [esp+0x14]
1005f4e9:	test   edx,0x7fffffff
1005f4ef:	jne    0x1005f4a9
1005f4f1:	fstp   DWORD PTR [esp+0x18]
1005f4f5:	fstp   DWORD PTR [esp+0x18]
1005f4f9:	leave  
1005f4fa:	ret    
1005f4fb:	int3   
1005f4fc:	int3   
1005f4fd:	int3   
1005f4fe:	int3   
1005f4ff:	int3   
1005f500:	push   ebx
1005f501:	push   esi
1005f502:	mov    eax,DWORD PTR [esp+0x18]
1005f506:	or     eax,eax
1005f508:	jne    0x1005f522
1005f50a:	mov    ecx,DWORD PTR [esp+0x14]
1005f50e:	mov    eax,DWORD PTR [esp+0x10]
1005f512:	xor    edx,edx
1005f514:	div    ecx
1005f516:	mov    ebx,eax
1005f518:	mov    eax,DWORD PTR [esp+0xc]
1005f51c:	div    ecx
1005f51e:	mov    edx,ebx
1005f520:	jmp    0x1005f563
1005f522:	mov    ecx,eax
1005f524:	mov    ebx,DWORD PTR [esp+0x14]
1005f528:	mov    edx,DWORD PTR [esp+0x10]
1005f52c:	mov    eax,DWORD PTR [esp+0xc]
1005f530:	shr    ecx,1
1005f532:	rcr    ebx,1
1005f534:	shr    edx,1
1005f536:	rcr    eax,1
1005f538:	or     ecx,ecx
1005f53a:	jne    0x1005f530
1005f53c:	div    ebx
1005f53e:	mov    esi,eax
1005f540:	mul    DWORD PTR [esp+0x18]
1005f544:	mov    ecx,eax
1005f546:	mov    eax,DWORD PTR [esp+0x14]
1005f54a:	mul    esi
1005f54c:	add    edx,ecx
1005f54e:	jb     0x1005f55e
1005f550:	cmp    edx,DWORD PTR [esp+0x10]
1005f554:	ja     0x1005f55e
1005f556:	jb     0x1005f55f
1005f558:	cmp    eax,DWORD PTR [esp+0xc]
1005f55c:	jbe    0x1005f55f
1005f55e:	dec    esi
1005f55f:	xor    edx,edx
1005f561:	mov    eax,esi
1005f563:	pop    esi
1005f564:	pop    ebx
1005f565:	ret    0x10
1005f568:	int3   
1005f569:	int3   
1005f56a:	int3   
1005f56b:	int3   
1005f56c:	int3   
1005f56d:	int3   
1005f56e:	int3   
1005f56f:	int3   
1005f570:	mov    edx,DWORD PTR [esp+0x8]
1005f574:	lea    eax,[edx+0xc]
1005f577:	mov    ecx,DWORD PTR [edx-0x14]
1005f57a:	xor    ecx,eax
1005f57c:	call   0x10042e97
1005f581:	mov    eax,0x100749c8
1005f586:	jmp    0x100591d1
1005f58b:	mov    edx,DWORD PTR [esp+0x8]
1005f58f:	lea    eax,[edx+0xc]
1005f592:	mov    ecx,DWORD PTR [edx-0x14]
1005f595:	xor    ecx,eax
1005f597:	call   0x10042e97
1005f59c:	mov    eax,0x10074b38
1005f5a1:	jmp    0x100591d1
1005f5a6:	mov    ecx,DWORD PTR [ebp-0x10]
1005f5a9:	jmp    0x1002af47
1005f5ae:	mov    edx,DWORD PTR [esp+0x8]
1005f5b2:	lea    eax,[edx+0xc]
1005f5b5:	mov    ecx,DWORD PTR [edx-0x14]
1005f5b8:	xor    ecx,eax
1005f5ba:	call   0x10042e97
1005f5bf:	mov    eax,0x10074e44
1005f5c4:	jmp    0x100591d1
1005f5c9:	mov    eax,DWORD PTR [ebp-0x10]
1005f5cc:	add    eax,0x4
1005f5cf:	jmp    0x100231e9
1005f5d4:	mov    edx,DWORD PTR [esp+0x8]
1005f5d8:	lea    eax,[edx+0xc]
1005f5db:	mov    ecx,DWORD PTR [edx-0x14]
1005f5de:	xor    ecx,eax
1005f5e0:	call   0x10042e97
1005f5e5:	mov    eax,0x10074e70
1005f5ea:	jmp    0x100591d1
1005f5ef:	lea    eax,[ebp+0x10]
1005f5f2:	jmp    0x100231e9
1005f5f7:	mov    edx,DWORD PTR [esp+0x8]
1005f5fb:	lea    eax,[edx+0xc]
1005f5fe:	mov    ecx,DWORD PTR [edx-0x10]
1005f601:	xor    ecx,eax
1005f603:	call   0x10042e97
1005f608:	mov    eax,0x10074e9c
1005f60d:	jmp    0x100591d1
1005f612:	lea    eax,[ebp+0x8]
1005f615:	jmp    0x100231e9
1005f61a:	mov    edx,DWORD PTR [esp+0x8]
1005f61e:	lea    eax,[edx+0xc]
1005f621:	mov    ecx,DWORD PTR [edx-0x10]
1005f624:	xor    ecx,eax
1005f626:	call   0x10042e97
1005f62b:	mov    eax,0x10074ec8
1005f630:	jmp    0x100591d1
1005f635:	lea    eax,[ebp-0x28]
1005f638:	jmp    0x100231e9
1005f63d:	mov    edx,DWORD PTR [esp+0x8]
1005f641:	lea    eax,[edx+0xc]
1005f644:	mov    ecx,DWORD PTR [edx-0x30]
1005f647:	xor    ecx,eax
1005f649:	call   0x10042e97
1005f64e:	mov    ecx,DWORD PTR [edx-0x4]
1005f651:	xor    ecx,eax
1005f653:	call   0x10042e97
1005f658:	mov    eax,0x10074ef4
1005f65d:	jmp    0x100591d1
1005f662:	push   DWORD PTR [ebp-0x10]
1005f665:	call   0x10042e92
1005f66a:	pop    ecx
1005f66b:	ret    
1005f66c:	mov    edx,DWORD PTR [esp+0x8]
1005f670:	lea    eax,[edx+0xc]
1005f673:	mov    ecx,DWORD PTR [edx-0x14]
1005f676:	xor    ecx,eax
1005f678:	call   0x10042e97
1005f67d:	mov    eax,0x10074f20
1005f682:	jmp    0x100591d1
1005f687:	int3   
1005f688:	int3   
1005f689:	int3   
1005f68a:	int3   
1005f68b:	int3   
1005f68c:	int3   
1005f68d:	int3   
1005f68e:	int3   
1005f68f:	int3   
1005f690:	lea    eax,[ebp-0x10]
1005f693:	jmp    0x10011e27
1005f698:	mov    edx,DWORD PTR [esp+0x8]
1005f69c:	lea    eax,[edx-0x1c]
1005f69f:	mov    ecx,DWORD PTR [edx-0x20]
1005f6a2:	xor    ecx,eax
1005f6a4:	call   0x10042e97
1005f6a9:	mov    eax,0x10074f4c
1005f6ae:	jmp    0x100591d1
1005f6b3:	int3   
1005f6b4:	int3   
1005f6b5:	int3   
1005f6b6:	int3   
1005f6b7:	int3   
1005f6b8:	int3   
1005f6b9:	int3   
1005f6ba:	int3   
1005f6bb:	int3   
1005f6bc:	int3   
1005f6bd:	int3   
1005f6be:	int3   
1005f6bf:	int3   
1005f6c0:	lea    ecx,[ebp-0x20]
1005f6c3:	jmp    0x1001b3fd
1005f6c8:	mov    edx,DWORD PTR [esp+0x8]
1005f6cc:	lea    eax,[edx-0x14]
1005f6cf:	mov    ecx,DWORD PTR [edx-0x18]
1005f6d2:	xor    ecx,eax
1005f6d4:	call   0x10042e97
1005f6d9:	mov    eax,0x10074f78
1005f6de:	jmp    0x100591d1
1005f6e3:	int3   
1005f6e4:	int3   
1005f6e5:	int3   
1005f6e6:	int3   
1005f6e7:	int3   
1005f6e8:	int3   
1005f6e9:	int3   
1005f6ea:	int3   
1005f6eb:	int3   
1005f6ec:	int3   
1005f6ed:	int3   
1005f6ee:	int3   
1005f6ef:	int3   
1005f6f0:	mov    eax,DWORD PTR [ebp-0x10]
1005f6f3:	and    eax,0x1
1005f6f6:	je     0x1005f708
1005f6fc:	and    DWORD PTR [ebp-0x10],0xfffffffe
1005f700:	mov    edi,DWORD PTR [ebp+0x8]
1005f703:	jmp    0x1000250a
1005f708:	ret    
1005f709:	mov    edx,DWORD PTR [esp+0x8]
1005f70d:	lea    eax,[edx-0x8]
1005f710:	mov    ecx,DWORD PTR [edx-0xc]
1005f713:	xor    ecx,eax
1005f715:	call   0x10042e97
1005f71a:	mov    eax,0x10074fa4
1005f71f:	jmp    0x100591d1
1005f724:	int3   
1005f725:	int3   
1005f726:	int3   
1005f727:	int3   
1005f728:	int3   
1005f729:	int3   
1005f72a:	int3   
1005f72b:	int3   
1005f72c:	int3   
1005f72d:	int3   
1005f72e:	int3   
1005f72f:	int3   
1005f730:	lea    eax,[ebp-0x54]
1005f733:	jmp    0x10011e27
1005f738:	lea    eax,[ebp-0x4c]
1005f73b:	jmp    0x10011e27
1005f740:	mov    edx,DWORD PTR [esp+0x8]
1005f744:	lea    eax,[edx-0x58]
1005f747:	mov    ecx,DWORD PTR [edx-0x5c]
1005f74a:	xor    ecx,eax
1005f74c:	call   0x10042e97
1005f751:	mov    eax,0x10074fd8
1005f756:	jmp    0x100591d1
1005f75b:	int3   
1005f75c:	int3   
1005f75d:	int3   
1005f75e:	int3   
1005f75f:	int3   
1005f760:	lea    eax,[ebp-0x50]
1005f763:	jmp    0x10011e27
1005f768:	lea    eax,[ebp-0x4c]
1005f76b:	jmp    0x10011e27
1005f770:	mov    edx,DWORD PTR [esp+0x8]
1005f774:	lea    eax,[edx-0x5c]
1005f777:	mov    ecx,DWORD PTR [edx-0x60]
1005f77a:	xor    ecx,eax
1005f77c:	call   0x10042e97
1005f781:	mov    eax,0x1007500c
1005f786:	jmp    0x100591d1
1005f78b:	mov    ecx,DWORD PTR [ebp+0x8]
1005f78e:	jmp    0x1002af47
1005f793:	mov    eax,DWORD PTR [ebp+0x8]
1005f796:	add    eax,0x4
1005f799:	jmp    0x1002d13e
1005f79e:	mov    edx,DWORD PTR [esp+0x8]
1005f7a2:	lea    eax,[edx+0xc]
1005f7a5:	mov    ecx,DWORD PTR [edx-0x10]
1005f7a8:	xor    ecx,eax
1005f7aa:	call   0x10042e97
1005f7af:	mov    eax,0x10075040
1005f7b4:	jmp    0x100591d1
1005f7b9:	lea    ecx,[ebp-0x20]
1005f7bc:	jmp    0x1001b3fd
1005f7c1:	mov    edx,DWORD PTR [esp+0x8]
1005f7c5:	lea    eax,[edx+0xc]
1005f7c8:	mov    ecx,DWORD PTR [edx-0x24]
1005f7cb:	xor    ecx,eax
1005f7cd:	call   0x10042e97
1005f7d2:	mov    eax,0x1007506c
1005f7d7:	jmp    0x100591d1
1005f7dc:	mov    edx,DWORD PTR [esp+0x8]
1005f7e0:	lea    eax,[edx+0xc]
1005f7e3:	mov    ecx,DWORD PTR [edx-0x14]
1005f7e6:	xor    ecx,eax
1005f7e8:	call   0x10042e97
1005f7ed:	mov    eax,0x100750c4
1005f7f2:	jmp    0x100591d1
1005f7f7:	mov    edx,DWORD PTR [esp+0x8]
1005f7fb:	lea    eax,[edx+0xc]
1005f7fe:	mov    ecx,DWORD PTR [edx-0x1c]
1005f801:	xor    ecx,eax
1005f803:	call   0x10042e97
1005f808:	mov    eax,0x1007511c
1005f80d:	jmp    0x100591d1
1005f812:	lea    eax,[ebp-0x10]
1005f815:	jmp    0x100231e9
1005f81a:	mov    edx,DWORD PTR [esp+0x8]
1005f81e:	lea    eax,[edx+0xc]
1005f821:	mov    ecx,DWORD PTR [edx-0x14]
1005f824:	xor    ecx,eax
1005f826:	call   0x10042e97
1005f82b:	mov    eax,0x10075148
1005f830:	jmp    0x100591d1
1005f835:	push   DWORD PTR [ebp-0x20]
1005f838:	call   0x100433c0
1005f83d:	pop    ecx
1005f83e:	ret    
1005f83f:	lea    eax,[ebp-0x14]
1005f842:	jmp    0x10001000
1005f847:	mov    edx,DWORD PTR [esp+0x8]
1005f84b:	lea    eax,[edx+0xc]
1005f84e:	mov    ecx,DWORD PTR [edx-0x28]
1005f851:	xor    ecx,eax
1005f853:	call   0x10042e97
1005f858:	mov    eax,0x100751b0
1005f85d:	jmp    0x100591d1
1005f862:	lea    eax,[ebp-0x10]
1005f865:	jmp    0x10011e27
1005f86a:	mov    edx,DWORD PTR [esp+0x8]
1005f86e:	lea    eax,[edx+0xc]
1005f871:	mov    ecx,DWORD PTR [edx-0x18]
1005f874:	xor    ecx,eax
1005f876:	call   0x10042e97
1005f87b:	mov    eax,0x100751fc
1005f880:	jmp    0x100591d1
1005f885:	push   DWORD PTR [ebp-0x14]
1005f888:	call   0x100433c0
1005f88d:	pop    ecx
1005f88e:	ret    
1005f88f:	lea    eax,[ebp+0x8]
1005f892:	jmp    0x10001000
1005f897:	mov    edx,DWORD PTR [esp+0x8]
1005f89b:	lea    eax,[edx+0xc]
1005f89e:	mov    ecx,DWORD PTR [edx-0x24]
1005f8a1:	xor    ecx,eax
1005f8a3:	call   0x10042e97
1005f8a8:	mov    eax,0x10075264
1005f8ad:	jmp    0x100591d1
1005f8b2:	mov    edx,DWORD PTR [esp+0x8]
1005f8b6:	lea    eax,[edx+0xc]
1005f8b9:	mov    ecx,DWORD PTR [edx-0x1c]
1005f8bc:	xor    ecx,eax
1005f8be:	call   0x10042e97
1005f8c3:	mov    eax,0x100752bc
1005f8c8:	jmp    0x100591d1
1005f8cd:	mov    eax,DWORD PTR [ebp-0x10]
1005f8d0:	and    eax,0x1
1005f8d3:	je     0x1005f8e5
1005f8d9:	and    DWORD PTR [ebp-0x10],0xfffffffe
1005f8dd:	mov    edi,DWORD PTR [ebp+0x8]
1005f8e0:	jmp    0x1000250a
1005f8e5:	ret    
1005f8e6:	mov    edx,DWORD PTR [esp+0x8]
1005f8ea:	lea    eax,[edx+0xc]
1005f8ed:	mov    ecx,DWORD PTR [edx-0x14]
1005f8f0:	xor    ecx,eax
1005f8f2:	call   0x10042e97
1005f8f7:	mov    eax,0x100752e8
1005f8fc:	jmp    0x100591d1
1005f901:	mov    edx,DWORD PTR [esp+0x8]
1005f905:	lea    eax,[edx+0xc]
1005f908:	mov    ecx,DWORD PTR [edx-0x1c]
1005f90b:	xor    ecx,eax
1005f90d:	call   0x10042e97
1005f912:	mov    eax,0x10075374
1005f917:	jmp    0x100591d1
1005f91c:	mov    ecx,DWORD PTR [ebp-0x10]
1005f91f:	jmp    0x10042fd0
1005f924:	mov    edx,DWORD PTR [esp+0x8]
1005f928:	lea    eax,[edx+0xc]
1005f92b:	mov    ecx,DWORD PTR [edx-0x14]
1005f92e:	xor    ecx,eax
1005f930:	call   0x10042e97
1005f935:	mov    eax,0x100753a0
1005f93a:	jmp    0x100591d1
1005f93f:	jmp    0x10002080
1005f944:	mov    edx,DWORD PTR [esp+0x8]
1005f948:	lea    eax,[edx+0xc]
1005f94b:	mov    ecx,DWORD PTR [edx-0x10]
1005f94e:	xor    ecx,eax
1005f950:	call   0x10042e97
1005f955:	mov    eax,0x100753cc
1005f95a:	jmp    0x100591d1
1005f95f:	mov    edx,DWORD PTR [esp+0x8]
1005f963:	lea    eax,[edx+0xc]
1005f966:	mov    ecx,DWORD PTR [edx-0x18]
1005f969:	xor    ecx,eax
1005f96b:	call   0x10042e97
1005f970:	mov    eax,0x10075424
1005f975:	jmp    0x100591d1
1005f97a:	mov    edx,DWORD PTR [esp+0x8]
1005f97e:	lea    eax,[edx+0xc]
1005f981:	mov    ecx,DWORD PTR [edx-0x1c]
1005f984:	xor    ecx,eax
1005f986:	call   0x10042e97
1005f98b:	mov    eax,0x1007547c
1005f990:	jmp    0x100591d1
1005f995:	mov    edx,DWORD PTR [esp+0x8]
1005f999:	lea    eax,[edx+0xc]
1005f99c:	mov    ecx,DWORD PTR [edx-0x1c]
1005f99f:	xor    ecx,eax
1005f9a1:	call   0x10042e97
1005f9a6:	mov    eax,0x100754d4
1005f9ab:	jmp    0x100591d1
1005f9b0:	mov    edx,DWORD PTR [esp+0x8]
1005f9b4:	lea    eax,[edx+0xc]
1005f9b7:	mov    ecx,DWORD PTR [edx-0x1c]
1005f9ba:	xor    ecx,eax
1005f9bc:	call   0x10042e97
1005f9c1:	mov    eax,0x1007552c
1005f9c6:	jmp    0x100591d1
1005f9cb:	mov    ecx,DWORD PTR [ebp+0x8]
1005f9ce:	jmp    0x10007f41
1005f9d3:	mov    ecx,DWORD PTR [ebp+0x8]
1005f9d6:	add    ecx,0x1c
1005f9d9:	jmp    0x10007f41
1005f9de:	mov    edx,DWORD PTR [esp+0x8]
1005f9e2:	lea    eax,[edx+0xc]
1005f9e5:	mov    ecx,DWORD PTR [edx-0x10]
1005f9e8:	xor    ecx,eax
1005f9ea:	call   0x10042e97
1005f9ef:	mov    eax,0x10075560
1005f9f4:	jmp    0x100591d1
1005f9f9:	mov    edx,DWORD PTR [esp+0x8]
1005f9fd:	lea    eax,[edx+0xc]
1005fa00:	mov    ecx,DWORD PTR [edx-0x1c]
1005fa03:	xor    ecx,eax
1005fa05:	call   0x10042e97
1005fa0a:	mov    eax,0x100755b8
1005fa0f:	jmp    0x100591d1
1005fa14:	mov    edx,DWORD PTR [esp+0x8]
1005fa18:	lea    eax,[edx+0xc]
1005fa1b:	mov    ecx,DWORD PTR [edx-0x1c]
1005fa1e:	xor    ecx,eax
1005fa20:	call   0x10042e97
1005fa25:	mov    eax,0x10075610
1005fa2a:	jmp    0x100591d1
1005fa2f:	lea    esi,[ebp-0x18]
1005fa32:	jmp    0x100075ee
1005fa37:	mov    edx,DWORD PTR [esp+0x8]
1005fa3b:	lea    eax,[edx+0xc]
1005fa3e:	mov    ecx,DWORD PTR [edx-0x20]
1005fa41:	xor    ecx,eax
1005fa43:	call   0x10042e97
1005fa48:	mov    ecx,DWORD PTR [edx-0x8]
1005fa4b:	xor    ecx,eax
1005fa4d:	call   0x10042e97
1005fa52:	mov    eax,0x10075670
1005fa57:	jmp    0x100591d1
1005fa5c:	mov    edx,DWORD PTR [esp+0x8]
1005fa60:	lea    eax,[edx+0xc]
1005fa63:	mov    ecx,DWORD PTR [edx-0x1c]
1005fa66:	xor    ecx,eax
1005fa68:	call   0x10042e97
1005fa6d:	mov    eax,0x100756c8
1005fa72:	jmp    0x100591d1
1005fa77:	mov    edx,DWORD PTR [esp+0x8]
1005fa7b:	lea    eax,[edx+0xc]
1005fa7e:	mov    ecx,DWORD PTR [edx-0x1c]
1005fa81:	xor    ecx,eax
1005fa83:	call   0x10042e97
1005fa88:	mov    eax,0x10075720
1005fa8d:	jmp    0x100591d1
1005fa92:	lea    eax,[ebp-0x18]
1005fa95:	jmp    0x100231e9
1005fa9a:	lea    eax,[ebp+0xc]
1005fa9d:	jmp    0x100231e9
1005faa2:	lea    eax,[ebp-0x18]
1005faa5:	jmp    0x100231e9
1005faaa:	lea    eax,[ebp+0xc]
1005faad:	jmp    0x100231e9
1005fab2:	lea    eax,[ebp-0x14]
1005fab5:	jmp    0x100231e9
1005faba:	lea    eax,[ebp+0x10]
1005fabd:	jmp    0x100231e9
1005fac2:	lea    eax,[ebp-0x1c]
1005fac5:	jmp    0x100231e9
1005faca:	mov    edx,DWORD PTR [esp+0x8]
1005face:	lea    eax,[edx+0xc]
1005fad1:	mov    ecx,DWORD PTR [edx-0x28]
1005fad4:	xor    ecx,eax
1005fad6:	call   0x10042e97
1005fadb:	mov    eax,0x1007577c
1005fae0:	jmp    0x100591d1
1005fae5:	lea    eax,[ebp+0x8]
1005fae8:	jmp    0x10001000
1005faed:	mov    edx,DWORD PTR [esp+0x8]
1005faf1:	lea    eax,[edx+0xc]
1005faf4:	mov    ecx,DWORD PTR [edx-0x14]
1005faf7:	xor    ecx,eax
1005faf9:	call   0x10042e97
1005fafe:	mov    eax,0x100757a8
1005fb03:	jmp    0x100591d1
1005fb08:	lea    eax,[ebp-0x10]
1005fb0b:	jmp    0x10001000
1005fb10:	mov    edx,DWORD PTR [esp+0x8]
1005fb14:	lea    eax,[edx+0xc]
1005fb17:	mov    ecx,DWORD PTR [edx-0x28]
1005fb1a:	xor    ecx,eax
1005fb1c:	call   0x10042e97
1005fb21:	mov    ecx,DWORD PTR [edx+0x3f4]
1005fb27:	xor    ecx,eax
1005fb29:	call   0x10042e97
1005fb2e:	mov    eax,0x100757d4
1005fb33:	jmp    0x100591d1
1005fb38:	lea    ecx,[ebp-0x24]
1005fb3b:	jmp    0x10010c9f
1005fb40:	lea    eax,[ebp-0x10]
1005fb43:	jmp    0x100231e9
1005fb48:	lea    eax,[ebp-0x18]
1005fb4b:	jmp    0x100231e9
1005fb50:	lea    eax,[ebp-0x1c]
1005fb53:	jmp    0x100231e9
1005fb58:	mov    edx,DWORD PTR [esp+0x8]
1005fb5c:	lea    eax,[edx+0xc]
1005fb5f:	mov    ecx,DWORD PTR [edx-0x28]
1005fb62:	xor    ecx,eax
1005fb64:	call   0x10042e97
1005fb69:	mov    ecx,DWORD PTR [edx+0x214]
1005fb6f:	xor    ecx,eax
1005fb71:	call   0x10042e97
1005fb76:	mov    eax,0x10075818
1005fb7b:	jmp    0x100591d1
1005fb80:	jmp    0x10002080
1005fb85:	mov    edx,DWORD PTR [esp+0x8]
1005fb89:	lea    eax,[edx+0xc]
1005fb8c:	mov    ecx,DWORD PTR [edx-0x18]
1005fb8f:	xor    ecx,eax
1005fb91:	call   0x10042e97
1005fb96:	mov    eax,0x10075878
1005fb9b:	jmp    0x100591d1
1005fba0:	jmp    0x10002080
1005fba5:	mov    edx,DWORD PTR [esp+0x8]
1005fba9:	lea    eax,[edx+0xc]
1005fbac:	mov    ecx,DWORD PTR [edx-0x18]
1005fbaf:	xor    ecx,eax
1005fbb1:	call   0x10042e97
1005fbb6:	mov    eax,0x100758d8
1005fbbb:	jmp    0x100591d1
1005fbc0:	lea    ecx,[ebp-0x10]
1005fbc3:	jmp    0x10015ddd
1005fbc8:	mov    edx,DWORD PTR [esp+0x8]
1005fbcc:	lea    eax,[edx+0xc]
1005fbcf:	mov    ecx,DWORD PTR [edx-0x14]
1005fbd2:	xor    ecx,eax
1005fbd4:	call   0x10042e97
1005fbd9:	mov    eax,0x10075904
1005fbde:	jmp    0x100591d1
1005fbe3:	lea    eax,[ebp+0x0]
1005fbe6:	jmp    0x100177f1
1005fbeb:	lea    eax,[ebp+0x0]
1005fbee:	jmp    0x100177f1
1005fbf3:	mov    edx,DWORD PTR [esp+0x8]
1005fbf7:	lea    eax,[edx+0xc]
1005fbfa:	mov    ecx,DWORD PTR [edx-0x2c]
1005fbfd:	xor    ecx,eax
1005fbff:	call   0x10042e97
1005fc04:	mov    ecx,DWORD PTR [edx+0x2110]
1005fc0a:	xor    ecx,eax
1005fc0c:	call   0x10042e97
1005fc11:	mov    eax,0x100759a0
1005fc16:	jmp    0x100591d1
1005fc1b:	mov    ecx,DWORD PTR [ebp+0x8]
1005fc1e:	jmp    0x10007f41
1005fc23:	mov    ecx,DWORD PTR [ebp+0x8]
1005fc26:	add    ecx,0x1c
1005fc29:	jmp    0x10007f41
1005fc2e:	mov    ecx,DWORD PTR [ebp+0x8]
1005fc31:	add    ecx,0x38
1005fc34:	jmp    0x10007f41
1005fc39:	mov    ecx,DWORD PTR [ebp+0x8]
1005fc3c:	add    ecx,0x54
1005fc3f:	jmp    0x10007f41
1005fc44:	mov    edx,DWORD PTR [esp+0x8]
1005fc48:	lea    eax,[edx+0xc]
1005fc4b:	mov    ecx,DWORD PTR [edx-0x10]
1005fc4e:	xor    ecx,eax
1005fc50:	call   0x10042e97
1005fc55:	mov    eax,0x100759e4
1005fc5a:	jmp    0x100591d1
1005fc5f:	mov    edx,DWORD PTR [esp+0x8]
1005fc63:	lea    eax,[edx+0xc]
1005fc66:	mov    ecx,DWORD PTR [edx-0x1c]
1005fc69:	xor    ecx,eax
1005fc6b:	call   0x10042e97
1005fc70:	mov    eax,0x10075a3c
1005fc75:	jmp    0x100591d1
1005fc7a:	mov    edx,DWORD PTR [esp+0x8]
1005fc7e:	lea    eax,[edx+0xc]
1005fc81:	mov    ecx,DWORD PTR [edx-0x18]
1005fc84:	xor    ecx,eax
1005fc86:	call   0x10042e97
1005fc8b:	mov    eax,0x10075a94
1005fc90:	jmp    0x100591d1
1005fc95:	mov    eax,DWORD PTR [ebp+0x8]
1005fc98:	jmp    0x10011e27
1005fc9d:	mov    edx,DWORD PTR [esp+0x8]
1005fca1:	lea    eax,[edx+0xc]
1005fca4:	mov    ecx,DWORD PTR [edx-0x10]
1005fca7:	xor    ecx,eax
1005fca9:	call   0x10042e97
1005fcae:	mov    eax,0x10075ac0
1005fcb3:	jmp    0x100591d1
1005fcb8:	mov    edx,DWORD PTR [esp+0x8]
1005fcbc:	lea    eax,[edx+0xc]
1005fcbf:	mov    ecx,DWORD PTR [edx-0x18]
1005fcc2:	xor    ecx,eax
1005fcc4:	call   0x10042e97
1005fcc9:	mov    eax,0x10075b4c
1005fcce:	jmp    0x100591d1
1005fcd3:	jmp    0x10002080
1005fcd8:	mov    edx,DWORD PTR [esp+0x8]
1005fcdc:	lea    eax,[edx+0xc]
1005fcdf:	mov    ecx,DWORD PTR [edx-0x18]
1005fce2:	xor    ecx,eax
1005fce4:	call   0x10042e97
1005fce9:	mov    eax,0x10075bac
1005fcee:	jmp    0x100591d1
1005fcf3:	lea    esi,[ebp+0x8]
1005fcf6:	jmp    0x100209ae
1005fcfb:	mov    edx,DWORD PTR [esp+0x8]
1005fcff:	lea    eax,[edx+0xc]
1005fd02:	mov    ecx,DWORD PTR [edx-0x14]
1005fd05:	xor    ecx,eax
1005fd07:	call   0x10042e97
1005fd0c:	mov    eax,0x10075bd8
1005fd11:	jmp    0x100591d1
1005fd16:	lea    ecx,[ebp+0x8]
1005fd19:	jmp    0x10007f41
1005fd1e:	mov    edx,DWORD PTR [esp+0x8]
1005fd22:	lea    eax,[edx+0xc]
1005fd25:	mov    ecx,DWORD PTR [edx-0x14]
1005fd28:	xor    ecx,eax
1005fd2a:	call   0x10042e97
1005fd2f:	mov    eax,0x10075c04
1005fd34:	jmp    0x100591d1
1005fd39:	mov    eax,DWORD PTR [ebp-0x10]
1005fd3c:	and    eax,0x1
1005fd3f:	je     0x1005fd51
1005fd45:	and    DWORD PTR [ebp-0x10],0xfffffffe
1005fd49:	mov    eax,DWORD PTR [ebp+0x8]
1005fd4c:	jmp    0x1000216c
1005fd51:	ret    
1005fd52:	mov    edx,DWORD PTR [esp+0x8]
1005fd56:	lea    eax,[edx+0xc]
1005fd59:	mov    ecx,DWORD PTR [edx-0x1c]
1005fd5c:	xor    ecx,eax
1005fd5e:	call   0x10042e97
1005fd63:	mov    eax,0x10075c30
1005fd68:	jmp    0x100591d1
1005fd6d:	lea    ecx,[ebp+0x8]
1005fd70:	jmp    0x10007f41
1005fd75:	mov    ecx,DWORD PTR [ebp-0x10]
1005fd78:	jmp    0x10007f41
1005fd7d:	mov    edx,DWORD PTR [esp+0x8]
1005fd81:	lea    eax,[edx+0xc]
1005fd84:	mov    ecx,DWORD PTR [edx-0x14]
1005fd87:	xor    ecx,eax
1005fd89:	call   0x10042e97
1005fd8e:	mov    eax,0x10075c64
1005fd93:	jmp    0x100591d1
1005fd98:	mov    ecx,DWORD PTR [ebp+0x8]
1005fd9b:	jmp    0x10007f41
1005fda0:	mov    ecx,DWORD PTR [ebp+0x8]
1005fda3:	add    ecx,0x1c
1005fda6:	jmp    0x10007f41
1005fdab:	mov    ecx,DWORD PTR [ebp+0x8]
1005fdae:	add    ecx,0x38
1005fdb1:	jmp    0x10007f41
1005fdb6:	mov    edx,DWORD PTR [esp+0x8]
1005fdba:	lea    eax,[edx+0xc]
1005fdbd:	mov    ecx,DWORD PTR [edx-0x10]
1005fdc0:	xor    ecx,eax
1005fdc2:	call   0x10042e97
1005fdc7:	mov    eax,0x10075ca0
1005fdcc:	jmp    0x100591d1
1005fdd1:	mov    ecx,DWORD PTR [ebp+0x8]
1005fdd4:	jmp    0x10042fd0
1005fdd9:	mov    edx,DWORD PTR [esp+0x8]
1005fddd:	lea    eax,[edx+0xc]
1005fde0:	mov    ecx,DWORD PTR [edx-0x10]
1005fde3:	xor    ecx,eax
1005fde5:	call   0x10042e97
1005fdea:	mov    eax,0x10075ccc
1005fdef:	jmp    0x100591d1
1005fdf4:	int3   
1005fdf5:	int3   
1005fdf6:	int3   
1005fdf7:	int3   
1005fdf8:	int3   
1005fdf9:	int3   
1005fdfa:	int3   
1005fdfb:	int3   
1005fdfc:	int3   
1005fdfd:	int3   
1005fdfe:	int3   
1005fdff:	int3   
1005fe00:	mov    ecx,DWORD PTR [ebp+0x4]
1005fe03:	jmp    0x10007f41
1005fe08:	mov    edx,DWORD PTR [esp+0x8]
1005fe0c:	lea    eax,[edx-0x4]
1005fe0f:	mov    ecx,DWORD PTR [edx-0x8]
1005fe12:	xor    ecx,eax
1005fe14:	call   0x10042e97
1005fe19:	mov    eax,0x10075cf8
1005fe1e:	jmp    0x100591d1
1005fe23:	int3   
1005fe24:	int3   
1005fe25:	int3   
1005fe26:	int3   
1005fe27:	int3   
1005fe28:	int3   
1005fe29:	int3   
1005fe2a:	int3   
1005fe2b:	int3   
1005fe2c:	int3   
1005fe2d:	int3   
1005fe2e:	int3   
1005fe2f:	int3   
1005fe30:	lea    eax,[ebp-0x34]
1005fe33:	jmp    0x10011e27
1005fe38:	mov    edx,DWORD PTR [esp+0x8]
1005fe3c:	lea    eax,[edx-0x38]
1005fe3f:	mov    ecx,DWORD PTR [edx-0x3c]
1005fe42:	xor    ecx,eax
1005fe44:	call   0x10042e97
1005fe49:	add    eax,0xc
1005fe4c:	mov    ecx,DWORD PTR [edx-0x8]
1005fe4f:	xor    ecx,eax
1005fe51:	call   0x10042e97
1005fe56:	mov    eax,0x10075d24
1005fe5b:	jmp    0x100591d1
1005fe60:	mov    ecx,DWORD PTR [ebp-0x10]
1005fe63:	jmp    0x10042fd0
1005fe68:	mov    edx,DWORD PTR [esp+0x8]
1005fe6c:	lea    eax,[edx-0xc]
1005fe6f:	mov    ecx,DWORD PTR [edx-0x10]
1005fe72:	xor    ecx,eax
1005fe74:	call   0x10042e97
1005fe79:	mov    eax,0x10075d50
1005fe7e:	jmp    0x100591d1
1005fe83:	int3   
1005fe84:	int3   
1005fe85:	int3   
1005fe86:	int3   
1005fe87:	int3   
1005fe88:	int3   
1005fe89:	int3   
1005fe8a:	int3   
1005fe8b:	int3   
1005fe8c:	int3   
1005fe8d:	int3   
1005fe8e:	int3   
1005fe8f:	int3   
1005fe90:	lea    ecx,[ebp-0x28]
1005fe93:	jmp    0x10007f41
1005fe98:	mov    edx,DWORD PTR [esp+0x8]
1005fe9c:	lea    eax,[edx-0x28]
1005fe9f:	mov    ecx,DWORD PTR [edx-0x2c]
1005fea2:	xor    ecx,eax
1005fea4:	call   0x10042e97
1005fea9:	mov    eax,0x10075d7c
1005feae:	jmp    0x100591d1
1005feb3:	int3   
1005feb4:	int3   
1005feb5:	int3   
1005feb6:	int3   
1005feb7:	int3   
1005feb8:	int3   
1005feb9:	int3   
1005feba:	int3   
1005febb:	int3   
1005febc:	int3   
1005febd:	int3   
1005febe:	int3   
1005febf:	int3   
1005fec0:	lea    eax,[ebp-0x4c]
1005fec3:	jmp    0x10034380
1005fec8:	mov    edx,DWORD PTR [esp+0x8]
1005fecc:	lea    eax,[edx-0x50]
1005fecf:	mov    ecx,DWORD PTR [edx-0x54]
1005fed2:	xor    ecx,eax
1005fed4:	call   0x10042e97
1005fed9:	mov    eax,0x10075da8
1005fede:	jmp    0x100591d1
1005fee3:	int3   
1005fee4:	int3   
1005fee5:	int3   
1005fee6:	int3   
1005fee7:	int3   
1005fee8:	int3   
1005fee9:	int3   
1005feea:	int3   
1005feeb:	int3   
1005feec:	int3   
1005feed:	int3   
1005feee:	int3   
1005feef:	int3   
1005fef0:	mov    eax,DWORD PTR [ebp-0x14]
1005fef3:	and    eax,0x1
1005fef6:	je     0x1005ff08
1005fefc:	and    DWORD PTR [ebp-0x14],0xfffffffe
1005ff00:	mov    ecx,DWORD PTR [ebp-0x10]
1005ff03:	jmp    0x10007f41
1005ff08:	ret    
1005ff09:	mov    edx,DWORD PTR [esp+0x8]
1005ff0d:	lea    eax,[edx-0x18]
1005ff10:	mov    ecx,DWORD PTR [edx-0x1c]
1005ff13:	xor    ecx,eax
1005ff15:	call   0x10042e97
1005ff1a:	mov    eax,0x10075dd4
1005ff1f:	jmp    0x100591d1
1005ff24:	mov    edx,DWORD PTR [esp+0x8]
1005ff28:	lea    eax,[edx+0xc]
1005ff2b:	mov    ecx,DWORD PTR [edx-0x18]
1005ff2e:	xor    ecx,eax
1005ff30:	call   0x10042e97
1005ff35:	mov    eax,0x10075e2c
1005ff3a:	jmp    0x100591d1
1005ff3f:	mov    eax,DWORD PTR [ebp+0x8]
1005ff42:	jmp    0x10001000
1005ff47:	mov    edx,DWORD PTR [esp+0x8]
1005ff4b:	lea    eax,[edx+0xc]
1005ff4e:	mov    ecx,DWORD PTR [edx-0x10]
1005ff51:	xor    ecx,eax
1005ff53:	call   0x10042e97
1005ff58:	mov    eax,0x10075e58
1005ff5d:	jmp    0x100591d1
1005ff62:	jmp    0x10002080
1005ff67:	mov    edx,DWORD PTR [esp+0x8]
1005ff6b:	lea    eax,[edx+0xc]
1005ff6e:	mov    ecx,DWORD PTR [edx-0x18]
1005ff71:	xor    ecx,eax
1005ff73:	call   0x10042e97
1005ff78:	mov    eax,0x10075eb8
1005ff7d:	jmp    0x100591d1
1005ff82:	lea    ecx,[ebp-0x20]
1005ff85:	jmp    0x1001b3fd
1005ff8a:	mov    edx,DWORD PTR [esp+0x8]
1005ff8e:	lea    eax,[edx+0xc]
1005ff91:	mov    ecx,DWORD PTR [edx-0x24]
1005ff94:	xor    ecx,eax
1005ff96:	call   0x10042e97
1005ff9b:	mov    eax,0x10075f4c
1005ffa0:	jmp    0x100591d1
1005ffa5:	lea    ecx,[ebp-0x2c]
1005ffa8:	jmp    0x10007f41
1005ffad:	mov    edx,DWORD PTR [esp+0x8]
1005ffb1:	lea    eax,[edx+0xc]
1005ffb4:	mov    ecx,DWORD PTR [edx-0x30]
1005ffb7:	xor    ecx,eax
1005ffb9:	call   0x10042e97
1005ffbe:	mov    eax,0x10075f78
1005ffc3:	jmp    0x100591d1
1005ffc8:	lea    ecx,[ebp-0x38]
1005ffcb:	jmp    0x1001b3fd
1005ffd0:	lea    eax,[ebp-0x28]
1005ffd3:	jmp    0x10001000
1005ffd8:	lea    esi,[ebp-0x28]
1005ffdb:	jmp    0x1002d98c
1005ffe0:	mov    edx,DWORD PTR [esp+0x8]
1005ffe4:	lea    eax,[edx-0x4c]
1005ffe7:	mov    ecx,DWORD PTR [edx-0x50]
1005ffea:	xor    ecx,eax
1005ffec:	call   0x10042e97
1005fff1:	mov    eax,0x10075fb4
1005fff6:	jmp    0x100591d1
1005fffb:	mov    eax,DWORD PTR [ebp+0x8]
1005fffe:	jmp    0x100231e9
10060003:	mov    edx,DWORD PTR [esp+0x8]
10060007:	lea    eax,[edx+0xc]
1006000a:	mov    ecx,DWORD PTR [edx-0x10]
1006000d:	xor    ecx,eax
1006000f:	call   0x10042e97
10060014:	mov    eax,0x10075fe0
10060019:	jmp    0x100591d1
1006001e:	lea    ecx,[ebp+0xc]
10060021:	jmp    0x1001b3fd
10060026:	lea    eax,[ebp-0x18]
10060029:	jmp    0x10001000
1006002e:	lea    eax,[ebp-0x14]
10060031:	jmp    0x10001000
10060036:	mov    edx,DWORD PTR [esp+0x8]
1006003a:	lea    eax,[edx+0xc]
1006003d:	mov    ecx,DWORD PTR [edx-0x1c]
10060040:	xor    ecx,eax
10060042:	call   0x10042e97
10060047:	mov    ecx,DWORD PTR [edx-0x4]
1006004a:	xor    ecx,eax
1006004c:	call   0x10042e97
10060051:	mov    eax,0x1007601c
10060056:	jmp    0x100591d1
1006005b:	lea    eax,[ebp-0x18]
1006005e:	jmp    0x10009c34
10060063:	lea    eax,[ebp-0x14]
10060066:	jmp    0x10039e40
1006006b:	mov    edx,DWORD PTR [esp+0x8]
1006006f:	lea    eax,[edx+0xc]
10060072:	mov    ecx,DWORD PTR [edx-0x1c]
10060075:	xor    ecx,eax
10060077:	call   0x10042e97
1006007c:	mov    eax,0x10076050
10060081:	jmp    0x100591d1
10060086:	mov    eax,DWORD PTR [ebp-0x10]
10060089:	and    eax,0x1
1006008c:	je     0x1006009e
10060092:	and    DWORD PTR [ebp-0x10],0xfffffffe
10060096:	lea    eax,[ebp+0x8]
10060099:	jmp    0x100231e9
1006009e:	ret    
1006009f:	mov    edx,DWORD PTR [esp+0x8]
100600a3:	lea    eax,[edx+0xc]
100600a6:	mov    ecx,DWORD PTR [edx-0x18]
100600a9:	xor    ecx,eax
100600ab:	call   0x10042e97
100600b0:	mov    eax,0x1007607c
100600b5:	jmp    0x100591d1
100600ba:	mov    edx,DWORD PTR [esp+0x8]
100600be:	lea    eax,[edx+0xc]
100600c1:	mov    ecx,DWORD PTR [edx-0x1c]
100600c4:	xor    ecx,eax
100600c6:	call   0x10042e97
100600cb:	mov    eax,0x100760d4
100600d0:	jmp    0x100591d1
100600d5:	mov    edx,DWORD PTR [esp+0x8]
100600d9:	lea    eax,[edx+0xc]
100600dc:	mov    ecx,DWORD PTR [edx-0x1c]
100600df:	xor    ecx,eax
100600e1:	call   0x10042e97
100600e6:	mov    eax,0x1007612c
100600eb:	jmp    0x100591d1
100600f0:	jmp    0x10002080
100600f5:	mov    edx,DWORD PTR [esp+0x8]
100600f9:	lea    eax,[edx+0xc]
100600fc:	mov    ecx,DWORD PTR [edx-0x18]
100600ff:	xor    ecx,eax
10060101:	call   0x10042e97
10060106:	mov    eax,0x1007618c
1006010b:	jmp    0x100591d1
10060110:	mov    eax,DWORD PTR [ebp-0x10]
10060113:	add    eax,0x8
10060116:	jmp    0x10020f54
1006011b:	mov    edx,DWORD PTR [esp+0x8]
1006011f:	lea    eax,[edx+0xc]
10060122:	mov    ecx,DWORD PTR [edx-0x14]
10060125:	xor    ecx,eax
10060127:	call   0x10042e97
1006012c:	mov    eax,0x100761b8
10060131:	jmp    0x100591d1
10060136:	mov    eax,DWORD PTR [ebp+0x8]
10060139:	add    eax,0x8
1006013c:	jmp    0x10020f54
10060141:	mov    edx,DWORD PTR [esp+0x8]
10060145:	lea    eax,[edx+0xc]
10060148:	mov    ecx,DWORD PTR [edx-0x10]
1006014b:	xor    ecx,eax
1006014d:	call   0x10042e97
10060152:	mov    eax,0x100761e4
10060157:	jmp    0x100591d1
1006015c:	push   DWORD PTR [ebp-0x18]
1006015f:	call   0x10042e92
10060164:	pop    ecx
10060165:	ret    
10060166:	mov    edx,DWORD PTR [esp+0x8]
1006016a:	lea    eax,[edx+0xc]
1006016d:	mov    ecx,DWORD PTR [edx-0x20]
10060170:	xor    ecx,eax
10060172:	call   0x10042e97
10060177:	mov    eax,0x10076244
1006017c:	jmp    0x100591d1
10060181:	lea    esi,[ebp-0x28]
10060184:	jmp    0x100200d3
10060189:	lea    eax,[ebp-0x14]
1006018c:	jmp    0x100231e9
10060191:	lea    eax,[ebp-0x20]
10060194:	jmp    0x10001000
10060199:	lea    esi,[ebp-0x2c]
1006019c:	jmp    0x100075ee
100601a1:	lea    eax,[ebp-0x1c]
100601a4:	jmp    0x100231e9
100601a9:	mov    edx,DWORD PTR [esp+0x8]
100601ad:	lea    eax,[edx+0xc]
100601b0:	mov    ecx,DWORD PTR [edx-0x30]
100601b3:	xor    ecx,eax
100601b5:	call   0x10042e97
100601ba:	mov    ecx,DWORD PTR [edx-0x4]
100601bd:	xor    ecx,eax
100601bf:	call   0x10042e97
100601c4:	mov    eax,0x10076290
100601c9:	jmp    0x100591d1
100601ce:	lea    esi,[ebp-0x24]
100601d1:	jmp    0x100200d3
100601d6:	lea    eax,[ebp-0x14]
100601d9:	jmp    0x100231e9
100601de:	lea    esi,[ebp-0x28]
100601e1:	jmp    0x100075ee
100601e6:	lea    eax,[ebp-0x18]
100601e9:	jmp    0x100231e9
100601ee:	mov    edx,DWORD PTR [esp+0x8]
100601f2:	lea    eax,[edx+0xc]
100601f5:	mov    ecx,DWORD PTR [edx-0x2c]
100601f8:	xor    ecx,eax
100601fa:	call   0x10042e97
100601ff:	mov    ecx,DWORD PTR [edx-0x4]
10060202:	xor    ecx,eax
10060204:	call   0x10042e97
10060209:	mov    eax,0x100762d4
1006020e:	jmp    0x100591d1
10060213:	lea    eax,[ebp+0x8]
10060216:	jmp    0x10001000
1006021b:	lea    eax,[ebp+0x10]
1006021e:	jmp    0x10001000
10060223:	mov    edx,DWORD PTR [esp+0x8]
10060227:	lea    eax,[edx+0xc]
1006022a:	mov    ecx,DWORD PTR [edx-0x14]
1006022d:	xor    ecx,eax
1006022f:	call   0x10042e97
10060234:	mov    eax,0x10076308
10060239:	jmp    0x100591d1
1006023e:	lea    eax,[ebp-0x40]
10060241:	jmp    0x100231e9
10060246:	lea    eax,[ebp-0x3c]
10060249:	jmp    0x100231e9
1006024e:	lea    eax,[ebp-0x44]
10060251:	jmp    0x100231e9
10060256:	lea    eax,[ebp-0x44]
10060259:	jmp    0x100231e9
1006025e:	lea    ecx,[ebp-0x20]
10060261:	jmp    0x1001b3fd
10060266:	lea    ecx,[ebp-0x30]
10060269:	jmp    0x1001b3fd
1006026e:	mov    edx,DWORD PTR [esp+0x8]
10060272:	lea    eax,[edx-0x4c]
10060275:	mov    ecx,DWORD PTR [edx-0x50]
10060278:	xor    ecx,eax
1006027a:	call   0x10042e97
1006027f:	mov    eax,0x1007635c
10060284:	jmp    0x100591d1
10060289:	lea    esi,[ebp-0x78]
1006028c:	jmp    0x1001a514
10060291:	mov    edx,DWORD PTR [esp+0x8]
10060295:	lea    eax,[edx+0xc]
10060298:	mov    ecx,DWORD PTR [edx-0x8c]
1006029e:	xor    ecx,eax
100602a0:	call   0x10042e97
100602a5:	mov    ecx,DWORD PTR [edx-0x4]
100602a8:	xor    ecx,eax
100602aa:	call   0x10042e97
100602af:	mov    eax,0x10076388
100602b4:	jmp    0x100591d1
100602b9:	mov    edx,DWORD PTR [esp+0x8]
100602bd:	lea    eax,[edx+0xc]
100602c0:	mov    ecx,DWORD PTR [edx-0x20]
100602c3:	xor    ecx,eax
100602c5:	call   0x10042e97
100602ca:	mov    eax,0x100763e0
100602cf:	jmp    0x100591d1
100602d4:	mov    edx,DWORD PTR [esp+0x8]
100602d8:	lea    eax,[edx+0xc]
100602db:	mov    ecx,DWORD PTR [edx-0x18]
100602de:	xor    ecx,eax
100602e0:	call   0x10042e97
100602e5:	mov    eax,0x10076438
100602ea:	jmp    0x100591d1
100602ef:	lea    esi,[ebp-0x444]
100602f5:	jmp    0x1001451f
100602fa:	lea    esi,[ebp-0x440]
10060300:	jmp    0x1001451f
10060305:	mov    edx,DWORD PTR [esp+0x8]
10060309:	lea    eax,[edx-0x444]
1006030f:	mov    ecx,DWORD PTR [edx-0x448]
10060315:	xor    ecx,eax
10060317:	call   0x10042e97
1006031c:	add    eax,0xc
1006031f:	mov    ecx,DWORD PTR [edx-0x8]
10060322:	xor    ecx,eax
10060324:	call   0x10042e97
10060329:	mov    eax,0x1007646c
1006032e:	jmp    0x100591d1
10060333:	lea    esi,[ebp-0x2c]
10060336:	jmp    0x100177e5
1006033b:	lea    esi,[ebp-0x28]
1006033e:	jmp    0x100177e5
10060343:	mov    edx,DWORD PTR [esp+0x8]
10060347:	lea    eax,[edx+0xc]
1006034a:	mov    ecx,DWORD PTR [edx-0x30]
1006034d:	xor    ecx,eax
1006034f:	call   0x10042e97
10060354:	mov    eax,0x10076508
10060359:	jmp    0x100591d1
1006035e:	lea    esi,[ebp-0x9c]
10060364:	jmp    0x1000bbfd
10060369:	mov    edx,DWORD PTR [esp+0x8]
1006036d:	lea    eax,[edx+0xc]
10060370:	mov    ecx,DWORD PTR [edx-0xa4]
10060376:	xor    ecx,eax
10060378:	call   0x10042e97
1006037d:	mov    ecx,DWORD PTR [edx-0x4]
10060380:	xor    ecx,eax
10060382:	call   0x10042e97
10060387:	mov    eax,0x10076534
1006038c:	jmp    0x100591d1
10060391:	mov    ecx,DWORD PTR [ebp+0x8]
10060394:	jmp    0x10007f41
10060399:	mov    ecx,DWORD PTR [ebp+0x8]
1006039c:	add    ecx,0x1c
1006039f:	jmp    0x10007f41
100603a4:	mov    ecx,DWORD PTR [ebp+0x8]
100603a7:	add    ecx,0x38
100603aa:	jmp    0x10007f41
100603af:	mov    ecx,DWORD PTR [ebp+0x8]
100603b2:	add    ecx,0x54
100603b5:	jmp    0x10007f41
100603ba:	mov    ecx,DWORD PTR [ebp+0x8]
100603bd:	add    ecx,0x70
100603c0:	jmp    0x10007f41
100603c5:	mov    edx,DWORD PTR [esp+0x8]
100603c9:	lea    eax,[edx+0xc]
100603cc:	mov    ecx,DWORD PTR [edx-0x10]
100603cf:	xor    ecx,eax
100603d1:	call   0x10042e97
100603d6:	mov    eax,0x10076580
100603db:	jmp    0x100591d1
100603e0:	lea    esi,[ebp-0x20]
100603e3:	jmp    0x1000cdca
100603e8:	mov    edx,DWORD PTR [esp+0x8]
100603ec:	lea    eax,[edx+0xc]
100603ef:	mov    ecx,DWORD PTR [edx-0x24]
100603f2:	xor    ecx,eax
100603f4:	call   0x10042e97
100603f9:	mov    eax,0x100765ac
100603fe:	jmp    0x100591d1
10060403:	lea    ecx,[ebp-0x28]
10060406:	jmp    0x10007f41
1006040b:	mov    edx,DWORD PTR [esp+0x8]
1006040f:	lea    eax,[edx+0xc]
10060412:	mov    ecx,DWORD PTR [edx-0x2c]
10060415:	xor    ecx,eax
10060417:	call   0x10042e97
1006041c:	mov    eax,0x100765d8
10060421:	jmp    0x100591d1
10060426:	mov    edx,DWORD PTR [esp+0x8]
1006042a:	lea    eax,[edx+0xc]
1006042d:	mov    ecx,DWORD PTR [edx-0x18]
10060430:	xor    ecx,eax
10060432:	call   0x10042e97
10060437:	mov    eax,0x10076630
1006043c:	jmp    0x100591d1
10060441:	lea    ecx,[ebp-0x30]
10060444:	jmp    0x10007f41
10060449:	mov    edx,DWORD PTR [esp+0x8]
1006044d:	lea    eax,[edx+0xc]
10060450:	mov    ecx,DWORD PTR [edx-0x3c]
10060453:	xor    ecx,eax
10060455:	call   0x10042e97
1006045a:	mov    ecx,DWORD PTR [edx-0x8]
1006045d:	xor    ecx,eax
1006045f:	call   0x10042e97
10060464:	mov    eax,0x10076690
10060469:	jmp    0x100591d1
1006046e:	mov    edx,DWORD PTR [esp+0x8]
10060472:	lea    eax,[edx+0xc]
10060475:	mov    ecx,DWORD PTR [edx-0x34]
10060478:	xor    ecx,eax
1006047a:	call   0x10042e97
1006047f:	mov    eax,0x1007671c
10060484:	jmp    0x100591d1
10060489:	mov    edx,DWORD PTR [esp+0x8]
1006048d:	lea    eax,[edx+0xc]
10060490:	mov    ecx,DWORD PTR [edx-0x20]
10060493:	xor    ecx,eax
10060495:	call   0x10042e97
1006049a:	mov    eax,0x10076774
1006049f:	jmp    0x100591d1
100604a4:	lea    ecx,[ebp-0x44]
100604a7:	jmp    0x10007f41
100604ac:	lea    ecx,[ebp-0x28]
100604af:	jmp    0x10007f41
100604b4:	lea    ecx,[ebp-0x28]
100604b7:	jmp    0x10007f41
100604bc:	lea    ecx,[ebp-0x44]
100604bf:	jmp    0x10007f41
100604c4:	lea    ecx,[ebp-0x7c]
100604c7:	jmp    0x10007f41
100604cc:	lea    ecx,[ebp-0x60]
100604cf:	jmp    0x10007f41
100604d4:	mov    edx,DWORD PTR [esp+0x8]
100604d8:	lea    eax,[edx+0xc]
100604db:	mov    ecx,DWORD PTR [edx-0x84]
100604e1:	xor    ecx,eax
100604e3:	call   0x10042e97
100604e8:	mov    eax,0x100767c8
100604ed:	jmp    0x100591d1
100604f2:	mov    eax,DWORD PTR [ebp+0x8]
100604f5:	jmp    0x10009809
100604fa:	mov    esi,DWORD PTR [ebp+0x8]
100604fd:	add    esi,0x4
10060500:	jmp    0x1000cdca
10060505:	mov    edx,DWORD PTR [esp+0x8]
10060509:	lea    eax,[edx+0xc]
1006050c:	mov    ecx,DWORD PTR [edx-0x10]
1006050f:	xor    ecx,eax
10060511:	call   0x10042e97
10060516:	mov    eax,0x100767fc
1006051b:	jmp    0x100591d1
10060520:	lea    esi,[ebp-0x14]
10060523:	jmp    0x100075ee
10060528:	mov    edx,DWORD PTR [esp+0x8]
1006052c:	lea    eax,[edx+0xc]
1006052f:	mov    ecx,DWORD PTR [edx-0x30]
10060532:	xor    ecx,eax
10060534:	call   0x10042e97
10060539:	mov    ecx,DWORD PTR [edx-0x4]
1006053c:	xor    ecx,eax
1006053e:	call   0x10042e97
10060543:	mov    eax,0x10076828
10060548:	jmp    0x100591d1
1006054d:	mov    edx,DWORD PTR [esp+0x8]
10060551:	lea    eax,[edx+0xc]
10060554:	mov    ecx,DWORD PTR [edx-0x18]
10060557:	xor    ecx,eax
10060559:	call   0x10042e97
1006055e:	mov    eax,0x10076880
10060563:	jmp    0x100591d1
10060568:	mov    esi,DWORD PTR [ebp+0x8]
1006056b:	jmp    0x100209ae
10060570:	mov    edx,DWORD PTR [esp+0x8]
10060574:	lea    eax,[edx+0xc]
10060577:	mov    ecx,DWORD PTR [edx-0x10]
1006057a:	xor    ecx,eax
1006057c:	call   0x10042e97
10060581:	mov    eax,0x100768ac
10060586:	jmp    0x100591d1
1006058b:	jmp    0x10002080
10060590:	mov    edx,DWORD PTR [esp+0x8]
10060594:	lea    eax,[edx+0xc]
10060597:	mov    ecx,DWORD PTR [edx-0x18]
1006059a:	xor    ecx,eax
1006059c:	call   0x10042e97
100605a1:	mov    eax,0x1007690c
100605a6:	jmp    0x100591d1
100605ab:	lea    ecx,[ebp-0x2c]
100605ae:	jmp    0x10007f41
100605b3:	mov    edx,DWORD PTR [esp+0x8]
100605b7:	lea    eax,[edx+0xc]
100605ba:	mov    ecx,DWORD PTR [edx-0x58]
100605bd:	xor    ecx,eax
100605bf:	call   0x10042e97
100605c4:	mov    eax,0x10076938
100605c9:	jmp    0x100591d1
100605ce:	lea    esi,[ebp-0x38]
100605d1:	jmp    0x100209ae
100605d6:	lea    esi,[ebp-0x70]
100605d9:	jmp    0x100209ae
100605de:	lea    edi,[ebp-0x70]
100605e1:	jmp    0x10004c66
100605e6:	mov    edx,DWORD PTR [esp+0x8]
100605ea:	lea    eax,[edx+0xc]
100605ed:	mov    ecx,DWORD PTR [edx-0x74]
100605f0:	xor    ecx,eax
100605f2:	call   0x10042e97
100605f7:	mov    eax,0x10076974
100605fc:	jmp    0x100591d1
10060601:	lea    ecx,[ebp-0x38]
10060604:	jmp    0x10007f41
10060609:	lea    ecx,[ebp-0x70]
1006060c:	jmp    0x10007f41
10060611:	lea    esi,[ebp-0x70]
10060614:	jmp    0x10004c4e
10060619:	mov    edx,DWORD PTR [esp+0x8]
1006061d:	lea    eax,[edx+0xc]
10060620:	mov    ecx,DWORD PTR [edx-0x74]
10060623:	xor    ecx,eax
10060625:	call   0x10042e97
1006062a:	mov    eax,0x100769b0
1006062f:	jmp    0x100591d1
10060634:	mov    eax,ds:0x10080c1c
10060639:	and    eax,0xfffffffe
1006063c:	mov    ds:0x10080c1c,eax
10060641:	ret    
10060642:	mov    edx,DWORD PTR [esp+0x8]
10060646:	lea    eax,[edx+0xc]
10060649:	mov    ecx,DWORD PTR [edx-0x10]
1006064c:	xor    ecx,eax
1006064e:	call   0x10042e97
10060653:	mov    eax,0x100769dc
10060658:	jmp    0x100591d1
1006065d:	mov    eax,ds:0x10080c38
10060662:	and    eax,0xfffffffe
10060665:	mov    ds:0x10080c38,eax
1006066a:	ret    
1006066b:	mov    edx,DWORD PTR [esp+0x8]
1006066f:	lea    eax,[edx+0xc]
10060672:	mov    ecx,DWORD PTR [edx-0x10]
10060675:	xor    ecx,eax
10060677:	call   0x10042e97
1006067c:	mov    eax,0x10076a08
10060681:	jmp    0x100591d1
10060686:	lea    esi,[ebp-0x4c]
10060689:	jmp    0x100209ae
1006068e:	lea    esi,[ebp-0x30]
10060691:	jmp    0x100209ae
10060696:	lea    ecx,[ebp-0x30]
10060699:	jmp    0x10007f41
1006069e:	mov    edx,DWORD PTR [esp+0x8]
100606a2:	lea    eax,[edx-0x84]
100606a8:	mov    ecx,DWORD PTR [edx-0x88]
100606ae:	xor    ecx,eax
100606b0:	call   0x10042e97
100606b5:	add    eax,0xc
100606b8:	mov    ecx,DWORD PTR [edx-0x8]
100606bb:	xor    ecx,eax
100606bd:	call   0x10042e97
100606c2:	mov    eax,0x10076a44
100606c7:	jmp    0x100591d1
100606cc:	lea    eax,[ebp-0x10]
100606cf:	jmp    0x1000216c
100606d4:	lea    eax,[ebp-0x14]
100606d7:	jmp    0x1000216c
100606dc:	lea    edi,[ebp-0x1c]
100606df:	jmp    0x1000250a
100606e4:	lea    edi,[ebp-0x20]
100606e7:	jmp    0x1000250a
100606ec:	lea    eax,[ebp-0x18]
100606ef:	jmp    0x1000216c
100606f4:	lea    esi,[ebp-0x1c]
100606f7:	jmp    0x10004634
100606fc:	mov    edx,DWORD PTR [esp+0x8]
10060700:	lea    eax,[edx+0xc]
10060703:	mov    ecx,DWORD PTR [edx-0x28]
10060706:	xor    ecx,eax
10060708:	call   0x10042e97
1006070d:	mov    eax,0x10076aa8
10060712:	jmp    0x100591d1
10060717:	lea    ecx,[ebp-0x28]
1006071a:	jmp    0x10007f41
1006071f:	mov    edx,DWORD PTR [esp+0x8]
10060723:	lea    eax,[edx+0xc]
10060726:	mov    ecx,DWORD PTR [edx-0x54]
10060729:	xor    ecx,eax
1006072b:	call   0x10042e97
10060730:	mov    eax,0x10076ad4
10060735:	jmp    0x100591d1
1006073a:	int3   
1006073b:	int3   
1006073c:	int3   
1006073d:	int3   
1006073e:	int3   
1006073f:	int3   
10060740:	lea    ecx,[ebp-0x2c]
10060743:	jmp    0x10007f41
10060748:	mov    eax,DWORD PTR [ebp-0x34]
1006074b:	push   eax
1006074c:	call   0x10042e92
10060751:	pop    ecx
10060752:	ret    
10060753:	mov    edx,DWORD PTR [esp+0x8]
10060757:	lea    eax,[edx-0x38]
1006075a:	mov    ecx,DWORD PTR [edx-0x3c]
1006075d:	xor    ecx,eax
1006075f:	call   0x10042e97
10060764:	add    eax,0xc
10060767:	mov    ecx,DWORD PTR [edx-0x4]
1006076a:	xor    ecx,eax
1006076c:	call   0x10042e97
10060771:	mov    eax,0x10076b08
10060776:	jmp    0x100591d1
1006077b:	int3   
1006077c:	int3   
1006077d:	int3   
1006077e:	int3   
1006077f:	int3   
10060780:	lea    eax,[ebp+0xc]
10060783:	jmp    0x10037250
10060788:	mov    edx,DWORD PTR [esp+0x8]
1006078c:	lea    eax,[edx-0x14]
1006078f:	mov    ecx,DWORD PTR [edx-0x18]
10060792:	xor    ecx,eax
10060794:	call   0x10042e97
10060799:	mov    eax,0x10076b34
1006079e:	jmp    0x100591d1
100607a3:	int3   
100607a4:	int3   
100607a5:	int3   
100607a6:	int3   
100607a7:	int3   
100607a8:	int3   
100607a9:	int3   
100607aa:	int3   
100607ab:	int3   
100607ac:	int3   
100607ad:	int3   
100607ae:	int3   
100607af:	int3   
100607b0:	lea    esi,[ebp-0x14]
100607b3:	jmp    0x100075ee
100607b8:	mov    eax,DWORD PTR [ebp-0x1c]
100607bb:	and    eax,0x1
100607be:	je     0x100607d0
100607c4:	and    DWORD PTR [ebp-0x1c],0xfffffffe
100607c8:	lea    ecx,[ebp-0x58]
100607cb:	jmp    0x10007f41
100607d0:	ret    
100607d1:	mov    eax,DWORD PTR [ebp-0x1c]
100607d4:	and    eax,0x2
100607d7:	je     0x100607e9
100607dd:	and    DWORD PTR [ebp-0x1c],0xfffffffd
100607e1:	lea    ecx,[ebp-0x3c]
100607e4:	jmp    0x10007f41
100607e9:	ret    
100607ea:	mov    edx,DWORD PTR [esp+0x8]
100607ee:	lea    eax,[edx+0xc]
100607f1:	mov    ecx,DWORD PTR [edx-0x5c]
100607f4:	xor    ecx,eax
100607f6:	call   0x10042e97
100607fb:	mov    ecx,DWORD PTR [edx-0x4]
100607fe:	xor    ecx,eax
10060800:	call   0x10042e97
10060805:	mov    eax,0x10076b70
1006080a:	jmp    0x100591d1
1006080f:	int3   
10060810:	lea    esi,[ebp+0x0]
10060813:	jmp    0x1000bc65
10060818:	lea    eax,[ebp-0x10]
1006081b:	jmp    0x10011e27
10060820:	mov    edx,DWORD PTR [esp+0x8]
10060824:	lea    eax,[edx+0xc]
10060827:	mov    ecx,DWORD PTR [edx-0x60]
1006082a:	xor    ecx,eax
1006082c:	call   0x10042e97
10060831:	mov    ecx,DWORD PTR [edx+0xa0]
10060837:	xor    ecx,eax
10060839:	call   0x10042e97
1006083e:	mov    eax,0x10076ba4
10060843:	jmp    0x100591d1
10060848:	int3   
10060849:	int3   
1006084a:	int3   
1006084b:	int3   
1006084c:	int3   
1006084d:	int3   
1006084e:	int3   
1006084f:	int3   
10060850:	lea    eax,[ebp-0x60]
10060853:	jmp    0x10011e27
10060858:	lea    esi,[ebp-0x3c]
1006085b:	jmp    0x100344f0
10060860:	lea    esi,[ebp-0x38]
10060863:	jmp    0x100344f0
10060868:	lea    esi,[ebp-0x3c]
1006086b:	jmp    0x100344f0
10060870:	lea    eax,[ebp-0x44]
10060873:	jmp    0x10011e27
10060878:	mov    edx,DWORD PTR [esp+0x8]
1006087c:	lea    eax,[edx+0xc]
1006087f:	mov    ecx,DWORD PTR [edx-0x64]
10060882:	xor    ecx,eax
10060884:	call   0x10042e97
10060889:	mov    ecx,DWORD PTR [edx-0x4]
1006088c:	xor    ecx,eax
1006088e:	call   0x10042e97
10060893:	mov    eax,0x10076bf0
10060898:	jmp    0x100591d1
1006089d:	int3   
1006089e:	int3   
1006089f:	int3   
100608a0:	lea    eax,[ebp-0xa0]
100608a6:	jmp    0x10034380
100608ab:	lea    eax,[ebp-0x98]
100608b1:	jmp    0x10034380
100608b6:	lea    ecx,[ebp-0x4c]
100608b9:	jmp    0x10007f41
100608be:	lea    eax,[ebp-0x9c]
100608c4:	jmp    0x10034380
100608c9:	lea    eax,[ebp-0x94]
100608cf:	jmp    0x10034380
100608d4:	lea    eax,[ebp-0xa4]
100608da:	jmp    0x10034380
100608df:	lea    eax,[ebp-0x90]
100608e5:	jmp    0x10034380
100608ea:	lea    eax,[ebp-0x90]
100608f0:	jmp    0x10034380
100608f5:	mov    edx,DWORD PTR [esp+0x8]
100608f9:	lea    eax,[edx-0xb0]
100608ff:	mov    ecx,DWORD PTR [edx-0xb4]
10060905:	xor    ecx,eax
10060907:	call   0x10042e97
1006090c:	add    eax,0x10
1006090f:	mov    ecx,DWORD PTR [edx-0x4]
10060912:	xor    ecx,eax
10060914:	call   0x10042e97
10060919:	mov    eax,0x10076c58
1006091e:	jmp    0x100591d1
10060923:	mov    edx,DWORD PTR [esp+0x8]
10060927:	lea    eax,[edx+0xc]
1006092a:	mov    ecx,DWORD PTR [edx-0x1c]
1006092d:	xor    ecx,eax
1006092f:	call   0x10042e97
10060934:	mov    eax,0x10076cb0
10060939:	jmp    0x100591d1
1006093e:	mov    edx,DWORD PTR [esp+0x8]
10060942:	lea    eax,[edx+0xc]
10060945:	mov    ecx,DWORD PTR [edx-0x1c]
10060948:	xor    ecx,eax
1006094a:	call   0x10042e97
1006094f:	mov    eax,0x10076d08
10060954:	jmp    0x100591d1
10060959:	mov    eax,DWORD PTR [ebp-0x30]
1006095c:	and    eax,0x1
1006095f:	je     0x10060971
10060965:	and    DWORD PTR [ebp-0x30],0xfffffffe
10060969:	mov    ecx,DWORD PTR [ebp-0x28]
1006096c:	jmp    0x10007f41
10060971:	ret    
10060972:	lea    ecx,[ebp-0x40]
10060975:	jmp    0x1001b3fd
1006097a:	lea    ecx,[ebp-0x50]
1006097d:	jmp    0x1001b3fd
10060982:	lea    eax,[ebp-0x18]
10060985:	jmp    0x100231e9
1006098a:	lea    edi,[ebp-0x20]
1006098d:	jmp    0x1000250a
10060992:	mov    edx,DWORD PTR [esp+0x8]
10060996:	lea    eax,[edx+0xc]
10060999:	mov    ecx,DWORD PTR [edx-0x54]
1006099c:	xor    ecx,eax
1006099e:	call   0x10042e97
100609a3:	mov    ecx,DWORD PTR [edx+0x40c]
100609a9:	xor    ecx,eax
100609ab:	call   0x10042e97
100609b0:	mov    eax,0x10076d54
100609b5:	jmp    0x100591d1
100609ba:	lea    ecx,[ebp-0x20]
100609bd:	jmp    0x1001b3fd
100609c2:	lea    eax,[ebp-0x38]
100609c5:	jmp    0x10001000
100609ca:	lea    ecx,[ebp-0x38]
100609cd:	jmp    0x1001b3fd
100609d2:	mov    edx,DWORD PTR [esp+0x8]
100609d6:	lea    eax,[edx-0x3c]
100609d9:	mov    ecx,DWORD PTR [edx-0x40]
100609dc:	xor    ecx,eax
100609de:	call   0x10042e97
100609e3:	mov    eax,0x10076d90
100609e8:	jmp    0x100591d1
100609ed:	mov    ecx,DWORD PTR [ebp+0x8]
100609f0:	jmp    0x10007f41
100609f5:	lea    ecx,[ebp-0x28]
100609f8:	jmp    0x10007f41
100609fd:	mov    edx,DWORD PTR [esp+0x8]
10060a01:	lea    eax,[edx+0xc]
10060a04:	mov    ecx,DWORD PTR [edx-0x30]
10060a07:	xor    ecx,eax
10060a09:	call   0x10042e97
10060a0e:	mov    eax,0x10076dc4
10060a13:	jmp    0x100591d1
10060a18:	mov    edx,DWORD PTR [esp+0x8]
10060a1c:	lea    eax,[edx+0xc]
10060a1f:	mov    ecx,DWORD PTR [edx-0x28]
10060a22:	xor    ecx,eax
10060a24:	call   0x10042e97
10060a29:	mov    eax,0x10076e1c
10060a2e:	jmp    0x100591d1
10060a33:	mov    edx,DWORD PTR [esp+0x8]
10060a37:	lea    eax,[edx+0xc]
10060a3a:	mov    ecx,DWORD PTR [edx-0x28]
10060a3d:	xor    ecx,eax
10060a3f:	call   0x10042e97
10060a44:	mov    eax,0x10076e74
10060a49:	jmp    0x100591d1
10060a4e:	mov    edx,DWORD PTR [esp+0x8]
10060a52:	lea    eax,[edx+0xc]
10060a55:	mov    ecx,DWORD PTR [edx-0x28]
10060a58:	xor    ecx,eax
10060a5a:	call   0x10042e97
10060a5f:	mov    eax,0x10076ecc
10060a64:	jmp    0x100591d1
10060a69:	mov    edx,DWORD PTR [esp+0x8]
10060a6d:	lea    eax,[edx+0xc]
10060a70:	mov    ecx,DWORD PTR [edx-0x28]
10060a73:	xor    ecx,eax
10060a75:	call   0x10042e97
10060a7a:	mov    eax,0x10076f24
10060a7f:	jmp    0x100591d1
10060a84:	lea    eax,[ebp-0x28]
10060a87:	jmp    0x10026bed
10060a8c:	lea    eax,[ebp-0x28]
10060a8f:	jmp    0x10026bed
10060a94:	lea    eax,[ebp-0x28]
10060a97:	jmp    0x10026bed
10060a9c:	push   DWORD PTR [ebp-0x30]
10060a9f:	call   0x10042e92
10060aa4:	pop    ecx
10060aa5:	ret    
10060aa6:	lea    eax,[ebp-0x1c]
10060aa9:	jmp    0x10026bed
10060aae:	mov    edx,DWORD PTR [esp+0x8]
10060ab2:	lea    eax,[edx-0x34]
10060ab5:	mov    ecx,DWORD PTR [edx-0x38]
10060ab8:	xor    ecx,eax
10060aba:	call   0x10042e97
10060abf:	mov    eax,0x10076f70
10060ac4:	jmp    0x100591d1
10060ac9:	mov    eax,DWORD PTR [ebp-0x10]
10060acc:	add    eax,0x8
10060acf:	jmp    0x100231e9
10060ad4:	mov    eax,DWORD PTR [ebp-0x10]
10060ad7:	add    eax,0xc
10060ada:	jmp    0x100231e9
10060adf:	mov    eax,DWORD PTR [ebp-0x10]
10060ae2:	add    eax,0x10
10060ae5:	jmp    0x1002438b
10060aea:	mov    edx,DWORD PTR [esp+0x8]
10060aee:	lea    eax,[edx+0xc]
10060af1:	mov    ecx,DWORD PTR [edx-0x14]
10060af4:	xor    ecx,eax
10060af6:	call   0x10042e97
10060afb:	mov    eax,0x10076fac
10060b00:	jmp    0x100591d1
10060b05:	lea    eax,[ebp-0x4c]
10060b08:	jmp    0x10024229
10060b0d:	lea    eax,[ebp-0x54]
10060b10:	jmp    0x100231e9
10060b15:	lea    edi,[ebp-0x50]
10060b18:	jmp    0x1000250a
10060b1d:	mov    edx,DWORD PTR [esp+0x8]
10060b21:	lea    eax,[edx-0x54]
10060b24:	mov    ecx,DWORD PTR [edx-0x58]
10060b27:	xor    ecx,eax
10060b29:	call   0x10042e97
10060b2e:	mov    eax,0x10076fe8
10060b33:	jmp    0x100591d1
10060b38:	mov    eax,DWORD PTR [ebp-0x10]
10060b3b:	add    eax,0x8
10060b3e:	jmp    0x100231e9
10060b43:	mov    eax,DWORD PTR [ebp-0x10]
10060b46:	add    eax,0xc
10060b49:	jmp    0x100231e9
10060b4e:	mov    edx,DWORD PTR [esp+0x8]
10060b52:	lea    eax,[edx+0xc]
10060b55:	mov    ecx,DWORD PTR [edx-0x14]
10060b58:	xor    ecx,eax
10060b5a:	call   0x10042e97
10060b5f:	mov    eax,0x1007701c
10060b64:	jmp    0x100591d1
10060b69:	mov    edx,DWORD PTR [esp+0x8]
10060b6d:	lea    eax,[edx+0xc]
10060b70:	mov    ecx,DWORD PTR [edx-0x1c]
10060b73:	xor    ecx,eax
10060b75:	call   0x10042e97
10060b7a:	mov    eax,0x10077074
10060b7f:	jmp    0x100591d1
10060b84:	lea    esi,[ebp-0x30]
10060b87:	jmp    0x100209ae
10060b8c:	lea    esi,[ebp-0x5c]
10060b8f:	jmp    0x100209ae
10060b94:	mov    edx,DWORD PTR [esp+0x8]
10060b98:	lea    eax,[edx-0x6c]
10060b9b:	mov    ecx,DWORD PTR [edx-0x70]
10060b9e:	xor    ecx,eax
10060ba0:	call   0x10042e97
10060ba5:	add    eax,0xc
10060ba8:	mov    ecx,DWORD PTR [edx-0x8]
10060bab:	xor    ecx,eax
10060bad:	call   0x10042e97
10060bb2:	mov    eax,0x100770a8
10060bb7:	jmp    0x100591d1
10060bbc:	lea    esi,[ebp-0x40]
10060bbf:	jmp    0x100209ae
10060bc4:	lea    esi,[ebp-0x6c]
10060bc7:	jmp    0x100209ae
10060bcc:	mov    edx,DWORD PTR [esp+0x8]
10060bd0:	lea    eax,[edx-0x7c]
10060bd3:	mov    ecx,DWORD PTR [edx-0x80]
10060bd6:	xor    ecx,eax
10060bd8:	call   0x10042e97
10060bdd:	add    eax,0xc
10060be0:	mov    ecx,DWORD PTR [edx-0x8]
10060be3:	xor    ecx,eax
10060be5:	call   0x10042e97
10060bea:	mov    eax,0x100770dc
10060bef:	jmp    0x100591d1
10060bf4:	mov    edx,DWORD PTR [esp+0x8]
10060bf8:	lea    eax,[edx+0xc]
10060bfb:	mov    ecx,DWORD PTR [edx-0x24]
10060bfe:	xor    ecx,eax
10060c00:	call   0x10042e97
10060c05:	mov    eax,0x10077134
10060c0a:	jmp    0x100591d1
10060c0f:	mov    edx,DWORD PTR [esp+0x8]
10060c13:	lea    eax,[edx+0xc]
10060c16:	mov    ecx,DWORD PTR [edx-0x14]
10060c19:	xor    ecx,eax
10060c1b:	call   0x10042e97
10060c20:	mov    eax,0x1007718c
10060c25:	jmp    0x100591d1
10060c2a:	lea    eax,[ebp-0x1c]
10060c2d:	jmp    0x1001aec2
10060c32:	mov    edx,DWORD PTR [esp+0x8]
10060c36:	lea    eax,[edx+0xc]
10060c39:	mov    ecx,DWORD PTR [edx-0x24]
10060c3c:	xor    ecx,eax
10060c3e:	call   0x10042e97
10060c43:	mov    eax,0x100771b8
10060c48:	jmp    0x100591d1
10060c4d:	lea    ecx,[ebp+0x24]
10060c50:	jmp    0x10001f38
10060c55:	lea    ecx,[ebp+0x8]
10060c58:	jmp    0x10007f41
10060c5d:	mov    ecx,DWORD PTR [ebp-0x10]
10060c60:	jmp    0x10007f41
10060c65:	mov    edx,DWORD PTR [esp+0x8]
10060c69:	lea    eax,[edx+0xc]
10060c6c:	mov    ecx,DWORD PTR [edx-0x18]
10060c6f:	xor    ecx,eax
10060c71:	call   0x10042e97
10060c76:	mov    eax,0x100771f4
10060c7b:	jmp    0x100591d1
10060c80:	jmp    0x10002080
10060c85:	mov    edx,DWORD PTR [esp+0x8]
10060c89:	lea    eax,[edx+0xc]
10060c8c:	mov    ecx,DWORD PTR [edx-0x18]
10060c8f:	xor    ecx,eax
10060c91:	call   0x10042e97
10060c96:	mov    eax,0x10077254
10060c9b:	jmp    0x100591d1
10060ca0:	mov    edx,DWORD PTR [esp+0x8]
10060ca4:	lea    eax,[edx+0xc]
10060ca7:	mov    ecx,DWORD PTR [edx-0x24]
10060caa:	xor    ecx,eax
10060cac:	call   0x10042e97
10060cb1:	mov    eax,0x100772ac
10060cb6:	jmp    0x100591d1
10060cbb:	mov    edx,DWORD PTR [esp+0x8]
10060cbf:	lea    eax,[edx+0xc]
10060cc2:	mov    ecx,DWORD PTR [edx-0x18]
10060cc5:	xor    ecx,eax
10060cc7:	call   0x10042e97
10060ccc:	mov    eax,0x10077304
10060cd1:	jmp    0x100591d1
10060cd6:	lea    eax,[ebp-0x1c]
10060cd9:	jmp    0x100194c1
10060cde:	mov    edx,DWORD PTR [esp+0x8]
10060ce2:	lea    eax,[edx-0x1c]
10060ce5:	mov    ecx,DWORD PTR [edx-0x20]
10060ce8:	xor    ecx,eax
10060cea:	call   0x10042e97
10060cef:	mov    eax,0x10077330
10060cf4:	jmp    0x100591d1
10060cf9:	mov    edx,DWORD PTR [esp+0x8]
10060cfd:	lea    eax,[edx+0xc]
10060d00:	mov    ecx,DWORD PTR [edx-0x18]
10060d03:	xor    ecx,eax
10060d05:	call   0x10042e97
10060d0a:	mov    eax,0x10077388
10060d0f:	jmp    0x100591d1
10060d14:	lea    esi,[ebp-0x10]
10060d17:	jmp    0x100075ee
10060d1c:	mov    edx,DWORD PTR [esp+0x8]
10060d20:	lea    eax,[edx+0xc]
10060d23:	mov    ecx,DWORD PTR [edx-0x14]
10060d26:	xor    ecx,eax
10060d28:	call   0x10042e97
10060d2d:	mov    eax,0x100773b4
10060d32:	jmp    0x100591d1
10060d37:	lea    esi,[ebp+0x24]
10060d3a:	jmp    0x100131d9
10060d3f:	lea    ecx,[ebp+0x8]
10060d42:	jmp    0x10007f41
10060d47:	mov    ecx,DWORD PTR [ebp-0x10]
10060d4a:	jmp    0x10007f41
10060d4f:	mov    edx,DWORD PTR [esp+0x8]
10060d53:	lea    eax,[edx+0xc]
10060d56:	mov    ecx,DWORD PTR [edx-0x18]
10060d59:	xor    ecx,eax
10060d5b:	call   0x10042e97
10060d60:	mov    eax,0x100773f0
10060d65:	jmp    0x100591d1
10060d6a:	jmp    0x10002080
10060d6f:	mov    edx,DWORD PTR [esp+0x8]
10060d73:	lea    eax,[edx+0xc]
10060d76:	mov    ecx,DWORD PTR [edx-0x18]
10060d79:	xor    ecx,eax
10060d7b:	call   0x10042e97
10060d80:	mov    eax,0x10077450
10060d85:	jmp    0x100591d1
10060d8a:	lea    ecx,[ebp-0x30]
10060d8d:	jmp    0x10007f41
10060d92:	mov    edx,DWORD PTR [esp+0x8]
10060d96:	lea    eax,[edx+0xc]
10060d99:	mov    ecx,DWORD PTR [edx-0x5c]
10060d9c:	xor    ecx,eax
10060d9e:	call   0x10042e97
10060da3:	mov    eax,0x1007747c
10060da8:	jmp    0x100591d1
10060dad:	lea    edi,[ebp+0x8]
10060db0:	jmp    0x1000250a
10060db5:	lea    ecx,[ebp-0x28]
10060db8:	jmp    0x10007f41
10060dbd:	mov    edx,DWORD PTR [esp+0x8]
10060dc1:	lea    eax,[edx+0xc]
10060dc4:	mov    ecx,DWORD PTR [edx-0x2c]
10060dc7:	xor    ecx,eax
10060dc9:	call   0x10042e97
10060dce:	mov    eax,0x100774b0
10060dd3:	jmp    0x100591d1
10060dd8:	lea    ecx,[ebp-0x34]
10060ddb:	jmp    0x10007f41
10060de0:	lea    esi,[ebp-0x28]
10060de3:	jmp    0x1000cdca
10060de8:	lea    ecx,[ebp-0x50]
10060deb:	jmp    0x10007f41
10060df0:	mov    edx,DWORD PTR [esp+0x8]
10060df4:	lea    eax,[edx+0xc]
10060df7:	mov    ecx,DWORD PTR [edx-0x54]
10060dfa:	xor    ecx,eax
10060dfc:	call   0x10042e97
10060e01:	mov    eax,0x100774ec
10060e06:	jmp    0x100591d1
10060e0b:	lea    ecx,[ebp-0x30]
10060e0e:	jmp    0x10007f41
10060e13:	mov    edx,DWORD PTR [esp+0x8]
10060e17:	lea    eax,[edx+0xc]
10060e1a:	mov    ecx,DWORD PTR [edx-0x40]
10060e1d:	xor    ecx,eax
10060e1f:	call   0x10042e97
10060e24:	mov    ecx,DWORD PTR [edx-0x8]
10060e27:	xor    ecx,eax
10060e29:	call   0x10042e97
10060e2e:	mov    eax,0x10077580
10060e33:	jmp    0x100591d1
10060e38:	mov    edx,DWORD PTR [esp+0x8]
10060e3c:	lea    eax,[edx+0xc]
10060e3f:	mov    ecx,DWORD PTR [edx-0x20]
10060e42:	xor    ecx,eax
10060e44:	call   0x10042e97
10060e49:	mov    eax,0x100775d8
10060e4e:	jmp    0x100591d1
10060e53:	mov    eax,DWORD PTR [ebp-0x14]
10060e56:	and    eax,0x1
10060e59:	je     0x10060e6b
10060e5f:	and    DWORD PTR [ebp-0x14],0xfffffffe
10060e63:	mov    esi,DWORD PTR [ebp+0x8]
10060e66:	jmp    0x100045e4
10060e6b:	ret    
10060e6c:	lea    ecx,[ebp-0x50]
10060e6f:	jmp    0x10007f41
10060e74:	lea    ecx,[ebp-0x34]
10060e77:	jmp    0x10007f41
10060e7c:	mov    edx,DWORD PTR [esp+0x8]
10060e80:	lea    eax,[edx+0xc]
10060e83:	mov    ecx,DWORD PTR [edx-0x54]
10060e86:	xor    ecx,eax
10060e88:	call   0x10042e97
10060e8d:	mov    eax,0x10077614
10060e92:	jmp    0x100591d1
10060e97:	push   DWORD PTR [ebp-0x14]
10060e9a:	call   0x10042e92
10060e9f:	pop    ecx
10060ea0:	ret    
10060ea1:	mov    eax,DWORD PTR [ebp-0x10]
10060ea4:	and    eax,0x1
10060ea7:	je     0x10060eb9
10060ead:	and    DWORD PTR [ebp-0x10],0xfffffffe
10060eb1:	mov    eax,DWORD PTR [ebp+0x8]
10060eb4:	jmp    0x10009c34
10060eb9:	ret    
10060eba:	push   DWORD PTR [ebp-0x14]
10060ebd:	call   0x10042e92
10060ec2:	pop    ecx
10060ec3:	ret    
10060ec4:	mov    edx,DWORD PTR [esp+0x8]
10060ec8:	lea    eax,[edx+0xc]
10060ecb:	mov    ecx,DWORD PTR [edx-0x18]
10060ece:	xor    ecx,eax
10060ed0:	call   0x10042e97
10060ed5:	mov    eax,0x10077650
10060eda:	jmp    0x100591d1
10060edf:	lea    eax,[ebp-0x10]
10060ee2:	jmp    0x10009c34
10060ee7:	mov    edx,DWORD PTR [esp+0x8]
10060eeb:	lea    eax,[edx+0xc]
10060eee:	mov    ecx,DWORD PTR [edx-0x18]
10060ef1:	xor    ecx,eax
10060ef3:	call   0x10042e97
10060ef8:	mov    eax,0x1007767c
10060efd:	jmp    0x100591d1
10060f02:	lea    edi,[ebp+0xc]
10060f05:	jmp    0x1000250a
10060f0a:	lea    ecx,[ebp-0x28]
10060f0d:	jmp    0x10007f41
10060f12:	lea    ecx,[ebp-0x44]
10060f15:	jmp    0x10007f41
10060f1a:	mov    edx,DWORD PTR [esp+0x8]
10060f1e:	lea    eax,[edx+0xc]
10060f21:	mov    ecx,DWORD PTR [edx-0x48]
10060f24:	xor    ecx,eax
10060f26:	call   0x10042e97
10060f2b:	mov    eax,0x100776b8
10060f30:	jmp    0x100591d1
10060f35:	lea    esi,[ebp+0x24]
10060f38:	jmp    0x1000cdca
10060f3d:	lea    ecx,[ebp+0x8]
10060f40:	jmp    0x10007f41
10060f45:	mov    ecx,DWORD PTR [ebp-0x10]
10060f48:	jmp    0x10007f41
10060f4d:	mov    edx,DWORD PTR [esp+0x8]
10060f51:	lea    eax,[edx+0xc]
10060f54:	mov    ecx,DWORD PTR [edx-0x18]
10060f57:	xor    ecx,eax
10060f59:	call   0x10042e97
10060f5e:	mov    eax,0x100776f4
10060f63:	jmp    0x100591d1
10060f68:	jmp    0x10002080
10060f6d:	mov    edx,DWORD PTR [esp+0x8]
10060f71:	lea    eax,[edx+0xc]
10060f74:	mov    ecx,DWORD PTR [edx-0x1c]
10060f77:	xor    ecx,eax
10060f79:	call   0x10042e97
10060f7e:	mov    eax,0x10077754
10060f83:	jmp    0x100591d1
10060f88:	mov    esi,DWORD PTR [ebp+0x8]
10060f8b:	jmp    0x10004634
10060f90:	mov    esi,DWORD PTR [ebp+0x8]
10060f93:	add    esi,0x4
10060f96:	jmp    0x1000c8ff
10060f9b:	mov    esi,DWORD PTR [ebp+0x8]
10060f9e:	add    esi,0x8
10060fa1:	jmp    0x1000c910
10060fa6:	mov    eax,DWORD PTR [ebp+0x8]
10060fa9:	add    eax,0xc
10060fac:	jmp    0x10025dcf
10060fb1:	mov    edx,DWORD PTR [esp+0x8]
10060fb5:	lea    eax,[edx+0xc]
10060fb8:	mov    ecx,DWORD PTR [edx-0x10]
10060fbb:	xor    ecx,eax
10060fbd:	call   0x10042e97
10060fc2:	mov    eax,0x10077798
10060fc7:	jmp    0x100591d1
10060fcc:	mov    eax,DWORD PTR [ebp-0x58]
10060fcf:	and    eax,0x1
10060fd2:	je     0x10060fe4
10060fd8:	and    DWORD PTR [ebp-0x58],0xfffffffe
10060fdc:	mov    ecx,DWORD PTR [ebp-0x5c]
10060fdf:	jmp    0x10007f41
10060fe4:	ret    
10060fe5:	mov    edx,DWORD PTR [esp+0x8]
10060fe9:	lea    eax,[edx+0xc]
10060fec:	mov    ecx,DWORD PTR [edx-0x60]
10060fef:	xor    ecx,eax
10060ff1:	call   0x10042e97
10060ff6:	mov    ecx,DWORD PTR [edx-0x4]
10060ff9:	xor    ecx,eax
10060ffb:	call   0x10042e97
10061000:	mov    eax,0x100777c4
10061005:	jmp    0x100591d1
1006100a:	lea    esi,[ebp-0x18]
1006100d:	jmp    0x1000a986
10061012:	mov    edx,DWORD PTR [esp+0x8]
10061016:	lea    eax,[edx+0xc]
10061019:	mov    ecx,DWORD PTR [edx-0x15c]
1006101f:	xor    ecx,eax
10061021:	call   0x10042e97
10061026:	mov    eax,0x100777f0
1006102b:	jmp    0x100591d1
10061030:	jmp    0x10037970
10061035:	mov    edx,DWORD PTR [esp+0x8]
10061039:	lea    eax,[edx-0x14]
1006103c:	mov    ecx,DWORD PTR [edx-0x18]
1006103f:	xor    ecx,eax
10061041:	call   0x10042e97
10061046:	mov    eax,0x1007781c
1006104b:	jmp    0x100591d1
10061050:	mov    eax,DWORD PTR [ebp-0x68]
10061053:	and    eax,0x1
10061056:	je     0x10061068
1006105c:	and    DWORD PTR [ebp-0x68],0xfffffffe
10061060:	lea    ecx,[ebp-0x4c]
10061063:	jmp    0x10007f41
10061068:	ret    
10061069:	lea    esi,[ebp-0x68]
1006106c:	jmp    0x1000a986
10061071:	lea    ecx,[ebp-0x4c]
10061074:	jmp    0x10007f41
10061079:	lea    ecx,[ebp-0x30]
1006107c:	jmp    0x10007f41
10061081:	mov    edx,DWORD PTR [esp+0x8]
10061085:	lea    eax,[edx-0x6c]
10061088:	mov    ecx,DWORD PTR [edx-0x70]
1006108b:	xor    ecx,eax
1006108d:	call   0x10042e97
10061092:	add    eax,0xc
10061095:	mov    ecx,DWORD PTR [edx-0x8]
10061098:	xor    ecx,eax
1006109a:	call   0x10042e97
1006109f:	mov    eax,0x10077868
100610a4:	jmp    0x100591d1
100610a9:	mov    eax,DWORD PTR [ebp-0xc8]
100610af:	and    eax,0x1
100610b2:	je     0x100610ca
100610b8:	and    DWORD PTR [ebp-0xc8],0xfffffffe
100610bf:	lea    ecx,[ebp-0xc0]
100610c5:	jmp    0x10007f41
100610ca:	ret    
100610cb:	lea    esi,[ebp-0xc8]
100610d1:	jmp    0x1000a986
100610d6:	lea    ecx,[ebp-0x88]
100610dc:	jmp    0x10007f41
100610e1:	lea    ecx,[ebp-0x30]
100610e4:	jmp    0x10007f41
100610e9:	lea    esi,[ebp-0xa0]
100610ef:	jmp    0x1000cdca
100610f4:	mov    esi,DWORD PTR [ebp-0xc4]
100610fa:	jmp    0x1000cdca
100610ff:	lea    edi,[ebp-0x5c]
10061102:	jmp    0x1000c6bf
10061107:	lea    ecx,[ebp-0x88]
1006110d:	jmp    0x10007f41
10061112:	lea    edi,[ebp-0x88]
10061118:	jmp    0x1000c6bf
1006111d:	mov    edx,DWORD PTR [esp+0x8]
10061121:	lea    eax,[edx-0xcc]
10061127:	mov    ecx,DWORD PTR [edx-0xd0]
1006112d:	xor    ecx,eax
1006112f:	call   0x10042e97
10061134:	add    eax,0xc
10061137:	mov    ecx,DWORD PTR [edx-0x8]
1006113a:	xor    ecx,eax
1006113c:	call   0x10042e97
10061141:	mov    eax,0x100778e0
10061146:	jmp    0x100591d1
1006114b:	mov    esi,DWORD PTR [ebp-0x10]
1006114e:	jmp    0x10004634
10061153:	mov    esi,DWORD PTR [ebp-0x10]
10061156:	add    esi,0x4
10061159:	jmp    0x10004634
1006115e:	mov    edx,DWORD PTR [esp+0x8]
10061162:	lea    eax,[edx+0xc]
10061165:	mov    ecx,DWORD PTR [edx-0x14]
10061168:	xor    ecx,eax
1006116a:	call   0x10042e97
1006116f:	mov    eax,0x10077914
10061174:	jmp    0x100591d1
10061179:	lea    ecx,[ebp-0x38]
1006117c:	jmp    0x10007f41
10061181:	mov    edx,DWORD PTR [esp+0x8]
10061185:	lea    eax,[edx+0xc]
10061188:	mov    ecx,DWORD PTR [edx-0x44]
1006118b:	xor    ecx,eax
1006118d:	call   0x10042e97
10061192:	mov    ecx,DWORD PTR [edx-0x8]
10061195:	xor    ecx,eax
10061197:	call   0x10042e97
1006119c:	mov    eax,0x100779a8
100611a1:	jmp    0x100591d1
100611a6:	mov    edx,DWORD PTR [esp+0x8]
100611aa:	lea    eax,[edx+0xc]
100611ad:	mov    ecx,DWORD PTR [edx-0x20]
100611b0:	xor    ecx,eax
100611b2:	call   0x10042e97
100611b7:	mov    eax,0x10077a00
100611bc:	jmp    0x100591d1
100611c1:	lea    esi,[ebp-0x18]
100611c4:	jmp    0x100075ee
100611c9:	mov    edx,DWORD PTR [esp+0x8]
100611cd:	lea    eax,[edx+0xc]
100611d0:	mov    ecx,DWORD PTR [edx-0x1c]
100611d3:	xor    ecx,eax
100611d5:	call   0x10042e97
100611da:	mov    eax,0x10077a2c
100611df:	jmp    0x100591d1
100611e4:	lea    ecx,[ebp-0x4c]
100611e7:	jmp    0x10007f41
100611ec:	lea    ecx,[ebp-0x30]
100611ef:	jmp    0x10007f41
100611f4:	lea    ecx,[ebp-0x30]
100611f7:	jmp    0x10007f41
100611fc:	mov    edx,DWORD PTR [esp+0x8]
10061200:	lea    eax,[edx-0x84]
10061206:	mov    ecx,DWORD PTR [edx-0x88]
1006120c:	xor    ecx,eax
1006120e:	call   0x10042e97
10061213:	add    eax,0xc
10061216:	mov    ecx,DWORD PTR [edx-0x8]
10061219:	xor    ecx,eax
1006121b:	call   0x10042e97
10061220:	mov    eax,0x10077a68
10061225:	jmp    0x100591d1
1006122a:	int3   
1006122b:	int3   
1006122c:	int3   
1006122d:	int3   
1006122e:	int3   
1006122f:	int3   
10061230:	mov    eax,DWORD PTR [ebp-0x24]
10061233:	and    eax,0x1
10061236:	je     0x10061248
1006123c:	and    DWORD PTR [ebp-0x24],0xfffffffe
10061240:	mov    ecx,DWORD PTR [ebp-0x20]
10061243:	jmp    0x10007f41
10061248:	ret    
10061249:	mov    edx,DWORD PTR [esp+0x8]
1006124d:	lea    eax,[edx-0x20]
10061250:	mov    ecx,DWORD PTR [edx-0x24]
10061253:	xor    ecx,eax
10061255:	call   0x10042e97
1006125a:	add    eax,0x8
1006125d:	mov    ecx,DWORD PTR [edx-0x4]
10061260:	xor    ecx,eax
10061262:	call   0x10042e97
10061267:	mov    eax,0x10077a94
1006126c:	jmp    0x100591d1
10061271:	int3   
10061272:	int3   
10061273:	int3   
10061274:	int3   
10061275:	int3   
10061276:	int3   
10061277:	int3   
10061278:	int3   
10061279:	int3   
1006127a:	int3   
1006127b:	int3   
1006127c:	int3   
1006127d:	int3   
1006127e:	int3   
1006127f:	int3   
10061280:	lea    edi,[ebp-0x3c]
10061283:	jmp    0x1000250a
10061288:	lea    edi,[ebp-0x44]
1006128b:	jmp    0x1000250a
10061290:	lea    edi,[ebp-0x38]
10061293:	jmp    0x1000250a
10061298:	lea    edi,[ebp-0x44]
1006129b:	jmp    0x1000250a
100612a0:	lea    edi,[ebp-0x48]
100612a3:	jmp    0x1000250a
100612a8:	lea    ecx,[ebp-0x20]
100612ab:	jmp    0x1001b3fd
100612b0:	mov    edx,DWORD PTR [esp+0x8]
100612b4:	lea    eax,[edx-0x5c]
100612b7:	mov    ecx,DWORD PTR [edx-0x60]
100612ba:	xor    ecx,eax
100612bc:	call   0x10042e97
100612c1:	mov    eax,0x10077ae8
100612c6:	jmp    0x100591d1
100612cb:	int3   
100612cc:	int3   
100612cd:	int3   
100612ce:	int3   
100612cf:	int3   
100612d0:	lea    eax,[ebp-0x14]
100612d3:	jmp    0x1000216c
100612d8:	lea    ecx,[ebp-0x30]
100612db:	jmp    0x10007f41
100612e0:	mov    edx,DWORD PTR [esp+0x8]
100612e4:	lea    eax,[edx+0xc]
100612e7:	mov    ecx,DWORD PTR [edx-0x48]
100612ea:	xor    ecx,eax
100612ec:	call   0x10042e97
100612f1:	mov    ecx,DWORD PTR [edx+0x195c]
100612f7:	xor    ecx,eax
100612f9:	call   0x10042e97
100612fe:	mov    eax,0x10077b1c
10061303:	jmp    0x100591d1
10061308:	int3   
10061309:	int3   
1006130a:	int3   
1006130b:	int3   
1006130c:	int3   
1006130d:	int3   
1006130e:	int3   
1006130f:	int3   
10061310:	lea    esi,[ebp-0x30]
10061313:	jmp    0x1001451f
10061318:	lea    eax,[ebp-0x40]
1006131b:	jmp    0x1000216c
10061320:	lea    eax,[ebp-0x2c]
10061323:	jmp    0x1000216c
10061328:	lea    eax,[ebp-0x3c]
1006132b:	jmp    0x1000216c
10061330:	lea    esi,[ebp-0x28]
10061333:	jmp    0x100066f3
10061338:	mov    eax,DWORD PTR [ebp+0x4]
1006133b:	jmp    0x1000216c
10061340:	mov    edx,DWORD PTR [esp+0x8]
10061344:	lea    eax,[edx-0x44]
10061347:	mov    ecx,DWORD PTR [edx-0x48]
1006134a:	xor    ecx,eax
1006134c:	call   0x10042e97
10061351:	mov    eax,0x10077b70
10061356:	jmp    0x100591d1
1006135b:	int3   
1006135c:	int3   
1006135d:	int3   
1006135e:	int3   
1006135f:	int3   
10061360:	lea    ecx,[ebp-0x28]
10061363:	jmp    0x10007f41
10061368:	mov    ecx,DWORD PTR [ebp+0x4]
1006136b:	jmp    0x10042fd0
10061370:	mov    edx,DWORD PTR [esp+0x8]
10061374:	lea    eax,[edx-0x28]
10061377:	mov    ecx,DWORD PTR [edx-0x2c]
1006137a:	xor    ecx,eax
1006137c:	call   0x10042e97
10061381:	mov    eax,0x10077ba4
10061386:	jmp    0x100591d1
1006138b:	int3   
1006138c:	int3   
1006138d:	int3   
1006138e:	int3   
1006138f:	int3   
10061390:	lea    ecx,[ebp-0x17c]
10061396:	jmp    0x10007f41
1006139b:	lea    ecx,[ebp-0x160]
100613a1:	jmp    0x10042fd0
100613a6:	lea    eax,[ebp-0x1a0]
100613ac:	jmp    0x10011e27
100613b1:	lea    ecx,[ebp-0x198]
100613b7:	jmp    0x10007f41
100613bc:	lea    ecx,[ebp-0x138]
100613c2:	jmp    0x10042fd0
100613c7:	mov    edx,DWORD PTR [esp+0x8]
100613cb:	lea    eax,[edx-0x1a4]
100613d1:	mov    ecx,DWORD PTR [edx-0x1a8]
100613d7:	xor    ecx,eax
100613d9:	call   0x10042e97
100613de:	add    eax,0xc
100613e1:	mov    ecx,DWORD PTR [edx-0x4]
100613e4:	xor    ecx,eax
100613e6:	call   0x10042e97
100613eb:	mov    eax,0x10077bf0
100613f0:	jmp    0x100591d1
100613f5:	int3   
100613f6:	int3   
100613f7:	int3   
100613f8:	int3   
100613f9:	int3   
100613fa:	int3   
100613fb:	int3   
100613fc:	int3   
100613fd:	int3   
100613fe:	int3   
100613ff:	int3   
10061400:	lea    eax,[ebp-0x58]
10061403:	jmp    0x10011e27
10061408:	lea    eax,[ebp-0x64]
1006140b:	jmp    0x10037250
10061410:	lea    ecx,[ebp-0x54]
10061413:	jmp    0x10007f41
10061418:	lea    ecx,[ebp-0x38]
1006141b:	jmp    0x10042fd0
10061420:	lea    ecx,[ebp-0x54]
10061423:	jmp    0x10007f41
10061428:	lea    ecx,[ebp-0x38]
1006142b:	jmp    0x10042fd0
10061430:	lea    ecx,[ebp-0x54]
10061433:	jmp    0x10007f41
10061438:	mov    edx,DWORD PTR [esp+0x8]
1006143c:	lea    eax,[edx-0x64]
1006143f:	mov    ecx,DWORD PTR [edx-0x68]
10061442:	xor    ecx,eax
10061444:	call   0x10042e97
10061449:	mov    eax,0x10077c4c
1006144e:	jmp    0x100591d1
10061453:	int3   
10061454:	int3   
10061455:	int3   
10061456:	int3   
10061457:	int3   
10061458:	int3   
10061459:	int3   
1006145a:	int3   
1006145b:	int3   
1006145c:	int3   
1006145d:	int3   
1006145e:	int3   
1006145f:	int3   
10061460:	lea    eax,[ebp-0x5c]
10061463:	jmp    0x10037250
10061468:	lea    ecx,[ebp-0x54]
1006146b:	jmp    0x10007f41
10061470:	lea    ecx,[ebp-0x38]
10061473:	jmp    0x10042fd0
10061478:	mov    edx,DWORD PTR [esp+0x8]
1006147c:	lea    eax,[edx-0x5c]
1006147f:	mov    ecx,DWORD PTR [edx-0x60]
10061482:	xor    ecx,eax
10061484:	call   0x10042e97
10061489:	mov    eax,0x10077c88
1006148e:	jmp    0x100591d1
10061493:	int3   
10061494:	int3   
10061495:	int3   
10061496:	int3   
10061497:	int3   
10061498:	int3   
10061499:	int3   
1006149a:	int3   
1006149b:	int3   
1006149c:	int3   
1006149d:	int3   
1006149e:	int3   
1006149f:	int3   
100614a0:	lea    ecx,[ebp-0x140]
100614a6:	jmp    0x10007f41
100614ab:	lea    ecx,[ebp-0x194]
100614b1:	jmp    0x10042fd0
100614b6:	lea    ecx,[ebp-0x140]
100614bc:	jmp    0x10007f41
100614c1:	lea    ecx,[ebp-0x140]
100614c7:	jmp    0x10007f41
100614cc:	lea    ecx,[ebp-0x140]
100614d2:	jmp    0x10007f41
100614d7:	lea    ecx,[ebp-0x16c]
100614dd:	jmp    0x10007f41
100614e2:	mov    edx,DWORD PTR [esp+0x8]
100614e6:	lea    eax,[edx+0xc]
100614e9:	mov    ecx,DWORD PTR [edx-0x19c]
100614ef:	xor    ecx,eax
100614f1:	call   0x10042e97
100614f6:	mov    ecx,DWORD PTR [edx-0x4]
100614f9:	xor    ecx,eax
100614fb:	call   0x10042e97
10061500:	mov    eax,0x10077cdc
10061505:	jmp    0x100591d1
1006150a:	int3   
1006150b:	int3   
1006150c:	int3   
1006150d:	int3   
1006150e:	int3   
1006150f:	int3   
10061510:	lea    ecx,[ebp-0x2c]
10061513:	jmp    0x10007f41
10061518:	lea    ecx,[ebp-0x64]
1006151b:	jmp    0x10007f41
10061520:	lea    ecx,[ebp-0x80]
10061523:	jmp    0x10007f41
10061528:	lea    ecx,[ebp-0x48]
1006152b:	jmp    0x10007f41
10061530:	mov    edx,DWORD PTR [esp+0x8]
10061534:	lea    eax,[edx-0x80]
10061537:	mov    ecx,DWORD PTR [edx-0x84]
1006153d:	xor    ecx,eax
1006153f:	call   0x10042e97
10061544:	add    eax,0xc
10061547:	mov    ecx,DWORD PTR [edx-0x4]
1006154a:	xor    ecx,eax
1006154c:	call   0x10042e97
10061551:	mov    eax,0x10077d20
10061556:	jmp    0x100591d1
1006155b:	int3   
1006155c:	int3   
1006155d:	int3   
1006155e:	int3   
1006155f:	int3   
10061560:	lea    eax,[ebp-0x10]
10061563:	jmp    0x10011e27
10061568:	mov    edx,DWORD PTR [esp+0x8]
1006156c:	lea    eax,[edx-0x10]
1006156f:	mov    ecx,DWORD PTR [edx-0x14]
10061572:	xor    ecx,eax
10061574:	call   0x10042e97
10061579:	mov    eax,0x10077d4c
1006157e:	jmp    0x100591d1
10061583:	int3   
10061584:	int3   
10061585:	int3   
10061586:	int3   
10061587:	int3   
10061588:	int3   
10061589:	int3   
1006158a:	int3   
1006158b:	int3   
1006158c:	int3   
1006158d:	int3   
1006158e:	int3   
1006158f:	int3   
10061590:	lea    ecx,[ebp-0x54]
10061593:	jmp    0x10007f41
10061598:	lea    ecx,[ebp-0x38]
1006159b:	jmp    0x10042fd0
100615a0:	mov    edx,DWORD PTR [esp+0x8]
100615a4:	lea    eax,[edx-0x5c]
100615a7:	mov    ecx,DWORD PTR [edx-0x60]
100615aa:	xor    ecx,eax
100615ac:	call   0x10042e97
100615b1:	mov    eax,0x10077d80
100615b6:	jmp    0x100591d1
100615bb:	int3   
100615bc:	int3   
100615bd:	int3   
100615be:	int3   
100615bf:	int3   
100615c0:	lea    ecx,[ebp-0x54]
100615c3:	jmp    0x10007f41
100615c8:	lea    ecx,[ebp-0x38]
100615cb:	jmp    0x10042fd0
100615d0:	mov    edx,DWORD PTR [esp+0x8]
100615d4:	lea    eax,[edx-0x58]
100615d7:	mov    ecx,DWORD PTR [edx-0x5c]
100615da:	xor    ecx,eax
100615dc:	call   0x10042e97
100615e1:	mov    eax,0x10077db4
100615e6:	jmp    0x100591d1
100615eb:	int3   
100615ec:	int3   
100615ed:	int3   
100615ee:	int3   
100615ef:	int3   
100615f0:	lea    ecx,[ebp-0x50]
100615f3:	jmp    0x10007f41
100615f8:	lea    ecx,[ebp-0x34]
100615fb:	jmp    0x10042fd0
10061600:	mov    edx,DWORD PTR [esp+0x8]
10061604:	lea    eax,[edx-0x54]
10061607:	mov    ecx,DWORD PTR [edx-0x58]
1006160a:	xor    ecx,eax
1006160c:	call   0x10042e97
10061611:	mov    eax,0x10077de8
10061616:	jmp    0x100591d1
1006161b:	int3   
1006161c:	int3   
1006161d:	int3   
1006161e:	int3   
1006161f:	int3   
10061620:	lea    ecx,[ebp-0x54]
10061623:	jmp    0x10007f41
10061628:	lea    ecx,[ebp-0x38]
1006162b:	jmp    0x10042fd0
10061630:	mov    edx,DWORD PTR [esp+0x8]
10061634:	lea    eax,[edx-0x6c]
10061637:	mov    ecx,DWORD PTR [edx-0x70]
1006163a:	xor    ecx,eax
1006163c:	call   0x10042e97
10061641:	mov    eax,0x10077e1c
10061646:	jmp    0x100591d1
1006164b:	int3   
1006164c:	int3   
1006164d:	int3   
1006164e:	int3   
1006164f:	int3   
10061650:	lea    eax,[ebp-0x5c]
10061653:	jmp    0x10037250
10061658:	lea    ecx,[ebp-0x54]
1006165b:	jmp    0x10007f41
10061660:	lea    ecx,[ebp-0x38]
10061663:	jmp    0x10042fd0
10061668:	lea    ecx,[ebp-0x54]
1006166b:	jmp    0x10007f41
10061670:	lea    ecx,[ebp-0x38]
10061673:	jmp    0x10042fd0
10061678:	mov    edx,DWORD PTR [esp+0x8]
1006167c:	lea    eax,[edx-0x5c]
1006167f:	mov    ecx,DWORD PTR [edx-0x60]
10061682:	xor    ecx,eax
10061684:	call   0x10042e97
10061689:	mov    eax,0x10077e68
1006168e:	jmp    0x100591d1
10061693:	int3   
10061694:	int3   
10061695:	int3   
10061696:	int3   
10061697:	int3   
10061698:	int3   
10061699:	int3   
1006169a:	int3   
1006169b:	int3   
1006169c:	int3   
1006169d:	int3   
1006169e:	int3   
1006169f:	int3   
100616a0:	lea    eax,[ebp-0x5c]
100616a3:	jmp    0x10037250
100616a8:	lea    ecx,[ebp-0x54]
100616ab:	jmp    0x10007f41
100616b0:	lea    ecx,[ebp-0x38]
100616b3:	jmp    0x10042fd0
100616b8:	mov    edx,DWORD PTR [esp+0x8]
100616bc:	lea    eax,[edx-0x64]
100616bf:	mov    ecx,DWORD PTR [edx-0x68]
100616c2:	xor    ecx,eax
100616c4:	call   0x10042e97
100616c9:	mov    eax,0x10077ea4
100616ce:	jmp    0x100591d1
100616d3:	int3   
100616d4:	int3   
100616d5:	int3   
100616d6:	int3   
100616d7:	int3   
100616d8:	int3   
100616d9:	int3   
100616da:	int3   
100616db:	int3   
100616dc:	int3   
100616dd:	int3   
100616de:	int3   
100616df:	int3   
100616e0:	lea    eax,[ebp-0x5c]
100616e3:	jmp    0x10037250
100616e8:	lea    ecx,[ebp-0x54]
100616eb:	jmp    0x10007f41
100616f0:	lea    ecx,[ebp-0x38]
100616f3:	jmp    0x10042fd0
100616f8:	lea    ecx,[ebp-0x54]
100616fb:	jmp    0x10007f41
10061700:	lea    ecx,[ebp-0x38]
10061703:	jmp    0x10042fd0
10061708:	lea    ecx,[ebp-0x54]
1006170b:	jmp    0x10007f41
10061710:	lea    ecx,[ebp-0x54]
10061713:	jmp    0x10007f41
10061718:	lea    ecx,[ebp-0x54]
1006171b:	jmp    0x10007f41
10061720:	mov    edx,DWORD PTR [esp+0x8]
10061724:	lea    eax,[edx-0x60]
10061727:	mov    ecx,DWORD PTR [edx-0x64]
1006172a:	xor    ecx,eax
1006172c:	call   0x10042e97
10061731:	mov    eax,0x10077f08
10061736:	jmp    0x100591d1
1006173b:	int3   
1006173c:	int3   
1006173d:	int3   
1006173e:	int3   
1006173f:	int3   
10061740:	lea    eax,[ebp-0x58]
10061743:	jmp    0x10037250
10061748:	lea    ecx,[ebp-0x50]
1006174b:	jmp    0x10007f41
10061750:	lea    ecx,[ebp-0x34]
10061753:	jmp    0x10042fd0
10061758:	mov    edx,DWORD PTR [esp+0x8]
1006175c:	lea    eax,[edx-0x5c]
1006175f:	mov    ecx,DWORD PTR [edx-0x60]
10061762:	xor    ecx,eax
10061764:	call   0x10042e97
10061769:	mov    eax,0x10077f44
1006176e:	jmp    0x100591d1
10061773:	int3   
10061774:	int3   
10061775:	int3   
10061776:	int3   
10061777:	int3   
10061778:	int3   
10061779:	int3   
1006177a:	int3   
1006177b:	int3   
1006177c:	int3   
1006177d:	int3   
1006177e:	int3   
1006177f:	int3   
10061780:	lea    ecx,[ebp-0x864]
10061786:	jmp    0x10007f41
1006178b:	lea    ecx,[ebp-0x848]
10061791:	jmp    0x10042fd0
10061796:	mov    edx,DWORD PTR [esp+0x8]
1006179a:	lea    eax,[edx-0x8a4]
100617a0:	mov    ecx,DWORD PTR [edx-0x8a8]
100617a6:	xor    ecx,eax
100617a8:	call   0x10042e97
100617ad:	add    eax,0xc
100617b0:	mov    ecx,DWORD PTR [edx-0x8]
100617b3:	xor    ecx,eax
100617b5:	call   0x10042e97
100617ba:	mov    eax,0x10077f78
100617bf:	jmp    0x100591d1
100617c4:	int3   
100617c5:	int3   
100617c6:	int3   
100617c7:	int3   
100617c8:	int3   
100617c9:	int3   
100617ca:	int3   
100617cb:	int3   
100617cc:	int3   
100617cd:	int3   
100617ce:	int3   
100617cf:	int3   
100617d0:	lea    ecx,[ebp-0x4c]
100617d3:	jmp    0x10007f41
100617d8:	lea    ecx,[ebp-0x30]
100617db:	jmp    0x10007f41
100617e0:	mov    edx,DWORD PTR [esp+0x8]
100617e4:	lea    eax,[edx+0xc]
100617e7:	mov    ecx,DWORD PTR [edx-0xac]
100617ed:	xor    ecx,eax
100617ef:	call   0x10042e97
100617f4:	mov    ecx,DWORD PTR [edx-0x8]
100617f7:	xor    ecx,eax
100617f9:	call   0x10042e97
100617fe:	mov    eax,0x10077fe0
10061803:	jmp    0x100591d1
10061808:	int3   
10061809:	int3   
1006180a:	int3   
1006180b:	int3   
1006180c:	int3   
1006180d:	int3   
1006180e:	int3   
1006180f:	int3   
10061810:	mov    eax,DWORD PTR [ebp-0x14]
10061813:	and    eax,0x1
10061816:	je     0x10061828
1006181c:	and    DWORD PTR [ebp-0x14],0xfffffffe
10061820:	mov    ecx,DWORD PTR [ebp-0x10]
10061823:	jmp    0x10007f41
10061828:	ret    
10061829:	mov    edx,DWORD PTR [esp+0x8]
1006182d:	lea    eax,[edx-0x28]
10061830:	mov    ecx,DWORD PTR [edx-0x2c]
10061833:	xor    ecx,eax
10061835:	call   0x10042e97
1006183a:	mov    eax,0x1007800c
1006183f:	jmp    0x100591d1
10061844:	int3   
10061845:	int3   
10061846:	int3   
10061847:	int3   
10061848:	int3   
10061849:	int3   
1006184a:	int3   
1006184b:	int3   
1006184c:	int3   
1006184d:	int3   
1006184e:	int3   
1006184f:	int3   
10061850:	mov    eax,DWORD PTR [ebp-0x58]
10061853:	and    eax,0x1
10061856:	je     0x10061868
1006185c:	and    DWORD PTR [ebp-0x58],0xfffffffe
10061860:	mov    eax,DWORD PTR [ebp+0x4]
10061863:	jmp    0x1000216c
10061868:	ret    
10061869:	lea    ecx,[ebp-0x54]
1006186c:	jmp    0x10007f41
10061871:	lea    ecx,[ebp-0x38]
10061874:	jmp    0x10042fd0
10061879:	mov    edx,DWORD PTR [esp+0x8]
1006187d:	lea    eax,[edx-0x58]
10061880:	mov    ecx,DWORD PTR [edx-0x5c]
10061883:	xor    ecx,eax
10061885:	call   0x10042e97
1006188a:	mov    eax,0x10078048
1006188f:	jmp    0x100591d1
10061894:	int3   
10061895:	int3   
10061896:	int3   
10061897:	int3   
10061898:	int3   
10061899:	int3   
1006189a:	int3   
1006189b:	int3   
1006189c:	int3   
1006189d:	int3   
1006189e:	int3   
1006189f:	int3   
100618a0:	mov    eax,DWORD PTR [ebp-0x54]
100618a3:	and    eax,0x1
100618a6:	je     0x100618b8
100618ac:	and    DWORD PTR [ebp-0x54],0xfffffffe
100618b0:	mov    ecx,DWORD PTR [ebp-0x58]
100618b3:	jmp    0x10007f41
100618b8:	ret    
100618b9:	lea    esi,[ebp-0x68]
100618bc:	jmp    0x100045e4
100618c1:	lea    ecx,[ebp-0x48]
100618c4:	jmp    0x10007f41
100618c9:	lea    ecx,[ebp-0x2c]
100618cc:	jmp    0x10007f41
100618d1:	lea    ecx,[ebp-0x2c]
100618d4:	jmp    0x10007f41
100618d9:	lea    ecx,[ebp-0x48]
100618dc:	jmp    0x10007f41
100618e1:	mov    edx,DWORD PTR [esp+0x8]
100618e5:	lea    eax,[edx-0x74]
100618e8:	mov    ecx,DWORD PTR [edx-0x78]
100618eb:	xor    ecx,eax
100618ed:	call   0x10042e97
100618f2:	add    eax,0x10
100618f5:	mov    ecx,DWORD PTR [edx-0x4]
100618f8:	xor    ecx,eax
100618fa:	call   0x10042e97
100618ff:	mov    eax,0x1007809c
10061904:	jmp    0x100591d1
10061909:	mov    edx,DWORD PTR [esp+0x8]
1006190d:	lea    eax,[edx+0xc]
10061910:	mov    ecx,DWORD PTR [edx-0x1c]
10061913:	xor    ecx,eax
10061915:	call   0x10042e97
1006191a:	mov    eax,0x100780f4
1006191f:	jmp    0x100591d1
10061924:	mov    edx,DWORD PTR [esp+0x8]
10061928:	lea    eax,[edx+0xc]
1006192b:	mov    ecx,DWORD PTR [edx-0x1c]
1006192e:	xor    ecx,eax
10061930:	call   0x10042e97
10061935:	mov    eax,0x1007814c
1006193a:	jmp    0x100591d1
1006193f:	mov    eax,DWORD PTR [ebp+0x8]
10061942:	add    eax,0x10
10061945:	jmp    0x1002bd21
1006194a:	mov    eax,DWORD PTR [ebp+0x8]
1006194d:	add    eax,0x20
10061950:	jmp    0x1002bd21
10061955:	mov    edx,DWORD PTR [esp+0x8]
10061959:	lea    eax,[edx+0xc]
1006195c:	mov    ecx,DWORD PTR [edx-0x10]
1006195f:	xor    ecx,eax
10061961:	call   0x10042e97
10061966:	mov    eax,0x10078180
1006196b:	jmp    0x100591d1
10061970:	mov    eax,DWORD PTR [ebp-0x1fc]
10061976:	and    eax,0x1
10061979:	je     0x10061991
1006197f:	and    DWORD PTR [ebp-0x1fc],0xfffffffe
10061986:	lea    ecx,[ebp-0x198]
1006198c:	jmp    0x10007f41
10061991:	ret    
10061992:	mov    eax,DWORD PTR [ebp-0x1fc]
10061998:	and    eax,0x2
1006199b:	je     0x100619b3
100619a1:	and    DWORD PTR [ebp-0x1fc],0xfffffffd
100619a8:	lea    ecx,[ebp-0x160]
100619ae:	jmp    0x10007f41
100619b3:	ret    
100619b4:	mov    eax,DWORD PTR [ebp-0x1fc]
100619ba:	and    eax,0x4
100619bd:	je     0x100619d5
100619c3:	and    DWORD PTR [ebp-0x1fc],0xfffffffb
100619ca:	lea    ecx,[ebp-0x17c]
100619d0:	jmp    0x10007f41
100619d5:	ret    
100619d6:	mov    eax,DWORD PTR [ebp-0x1fc]
100619dc:	and    eax,0x8
100619df:	je     0x100619f7
100619e5:	and    DWORD PTR [ebp-0x1fc],0xfffffff7
100619ec:	lea    ecx,[ebp-0x128]
100619f2:	jmp    0x10007f41
100619f7:	ret    
100619f8:	lea    ecx,[ebp-0x1ec]
100619fe:	jmp    0x10007f41
10061a03:	lea    ecx,[ebp-0x1b4]
10061a09:	jmp    0x10007f41
10061a0e:	lea    ecx,[ebp-0x1d0]
10061a14:	jmp    0x10007f41
10061a19:	lea    ecx,[ebp-0xd4]
10061a1f:	jmp    0x10007f41
10061a24:	lea    ecx,[ebp-0x10c]
10061a2a:	jmp    0x10007f41
10061a2f:	lea    ecx,[ebp-0x144]
10061a35:	jmp    0x10007f41
10061a3a:	lea    ecx,[ebp-0xf0]
10061a40:	jmp    0x10007f41
10061a45:	lea    ecx,[ebp-0xb8]
10061a4b:	jmp    0x10007f41
10061a50:	lea    esi,[ebp-0x9c]
10061a56:	jmp    0x1000bbfd
10061a5b:	mov    edx,DWORD PTR [esp+0x8]
10061a5f:	lea    eax,[edx-0x1fc]
10061a65:	mov    ecx,DWORD PTR [edx-0x200]
10061a6b:	xor    ecx,eax
10061a6d:	call   0x10042e97
10061a72:	mov    eax,0x10078210
10061a77:	jmp    0x100591d1
10061a7c:	lea    ecx,[ebp-0x48]
10061a7f:	jmp    0x10007f41
10061a84:	lea    ecx,[ebp-0x2c]
10061a87:	jmp    0x10007f41
10061a8c:	mov    edx,DWORD PTR [esp+0x8]
10061a90:	lea    eax,[edx-0x44]
10061a93:	mov    ecx,DWORD PTR [edx-0x48]
10061a96:	xor    ecx,eax
10061a98:	call   0x10042e97
10061a9d:	mov    eax,0x10078244
10061aa2:	jmp    0x100591d1
10061aa7:	mov    esi,DWORD PTR [ebp+0x8]
10061aaa:	add    esi,0x4
10061aad:	jmp    0x10024c3a
10061ab2:	mov    esi,DWORD PTR [ebp+0x8]
10061ab5:	add    esi,0x18
10061ab8:	jmp    0x10024c3a
10061abd:	mov    eax,DWORD PTR [ebp+0x8]
10061ac0:	add    eax,0x2c
10061ac3:	jmp    0x100231e9
10061ac8:	mov    eax,DWORD PTR [ebp+0x8]
10061acb:	add    eax,0x30
10061ace:	jmp    0x10025dcf
10061ad3:	mov    eax,DWORD PTR [ebp+0x8]
10061ad6:	add    eax,0x34
10061ad9:	jmp    0x1000c921
10061ade:	mov    edx,DWORD PTR [esp+0x8]
10061ae2:	lea    eax,[edx+0xc]
10061ae5:	mov    ecx,DWORD PTR [edx-0x10]
10061ae8:	xor    ecx,eax
10061aea:	call   0x10042e97
10061aef:	mov    eax,0x10078290
10061af4:	jmp    0x100591d1
10061af9:	mov    edx,DWORD PTR [esp+0x8]
10061afd:	lea    eax,[edx+0xc]
10061b00:	mov    ecx,DWORD PTR [edx-0x1c]
10061b03:	xor    ecx,eax
10061b05:	call   0x10042e97
10061b0a:	mov    eax,0x100782e8
10061b0f:	jmp    0x100591d1
10061b14:	lea    esi,[ebp-0x2c]
10061b17:	jmp    0x100209ae
10061b1c:	mov    edx,DWORD PTR [esp+0x8]
10061b20:	lea    eax,[edx+0xc]
10061b23:	mov    ecx,DWORD PTR [edx-0x44]
10061b26:	xor    ecx,eax
10061b28:	call   0x10042e97
10061b2d:	mov    ecx,DWORD PTR [edx-0x4]
10061b30:	xor    ecx,eax
10061b32:	call   0x10042e97
10061b37:	mov    eax,0x10078314
10061b3c:	jmp    0x100591d1
10061b41:	lea    eax,[ebp-0x18]
10061b44:	jmp    0x10034d30
10061b49:	lea    ecx,[ebp-0x38]
10061b4c:	jmp    0x10007f41
10061b51:	lea    ecx,[ebp-0x54]
10061b54:	jmp    0x10007f41
10061b59:	lea    edi,[ebp-0x1c]
10061b5c:	jmp    0x1000250a
10061b61:	mov    edx,DWORD PTR [esp+0x8]
10061b65:	lea    eax,[edx+0xc]
10061b68:	mov    ecx,DWORD PTR [edx-0x58]
10061b6b:	xor    ecx,eax
10061b6d:	call   0x10042e97
10061b72:	mov    ecx,DWORD PTR [edx-0x8]
10061b75:	xor    ecx,eax
10061b77:	call   0x10042e97
10061b7c:	mov    eax,0x1007838c
10061b81:	jmp    0x100591d1
10061b86:	lea    eax,[ebp-0x54]
10061b89:	jmp    0x10034d30
10061b8e:	lea    ecx,[ebp-0x4c]
10061b91:	jmp    0x10007f41
10061b96:	lea    ecx,[ebp-0x30]
10061b99:	jmp    0x10007f41
10061b9e:	mov    edx,DWORD PTR [esp+0x8]
10061ba2:	lea    eax,[edx+0xc]
10061ba5:	mov    ecx,DWORD PTR [edx-0x58]
10061ba8:	xor    ecx,eax
10061baa:	call   0x10042e97
10061baf:	mov    ecx,DWORD PTR [edx-0x8]
10061bb2:	xor    ecx,eax
10061bb4:	call   0x10042e97
10061bb9:	mov    eax,0x100783fc
10061bbe:	jmp    0x100591d1
10061bc3:	lea    eax,[ebp-0x14]
10061bc6:	jmp    0x100231e9
10061bcb:	lea    eax,[ebp-0x2c]
10061bce:	jmp    0x100231e9
10061bd3:	lea    eax,[ebp-0x24]
10061bd6:	jmp    0x100231e9
10061bdb:	lea    eax,[ebp-0x28]
10061bde:	jmp    0x100231e9
10061be3:	lea    eax,[ebp-0x20]
10061be6:	jmp    0x100231e9
10061beb:	mov    edx,DWORD PTR [esp+0x8]
10061bef:	lea    eax,[edx-0x2c]
10061bf2:	mov    ecx,DWORD PTR [edx-0x30]
10061bf5:	xor    ecx,eax
10061bf7:	call   0x10042e97
10061bfc:	mov    eax,0x10078448
10061c01:	jmp    0x100591d1
10061c06:	lea    eax,[ebp-0x2c]
10061c09:	jmp    0x10034d30
10061c0e:	lea    ecx,[ebp-0x9c]
10061c14:	jmp    0x10007f41
10061c19:	lea    ecx,[ebp-0x80]
10061c1c:	jmp    0x10007f41
10061c21:	lea    esi,[ebp-0x9c]
10061c27:	jmp    0x1001a514
10061c2c:	lea    eax,[ebp-0x28]
10061c2f:	jmp    0x1001aec2
10061c34:	lea    esi,[ebp-0x1c]
10061c37:	jmp    0x1001af2b
10061c3c:	lea    ecx,[ebp-0xe0]
10061c42:	jmp    0x10007f41
10061c47:	mov    edx,DWORD PTR [esp+0x8]
10061c4b:	lea    eax,[edx+0xc]
10061c4e:	mov    ecx,DWORD PTR [edx-0xe4]
10061c54:	xor    ecx,eax
10061c56:	call   0x10042e97
10061c5b:	mov    eax,0x100784dc
10061c60:	jmp    0x100591d1
10061c65:	lea    eax,[ebp-0x38]
10061c68:	jmp    0x10001239
10061c6d:	mov    edx,DWORD PTR [esp+0x8]
10061c71:	lea    eax,[edx+0xc]
10061c74:	mov    ecx,DWORD PTR [edx-0x48]
10061c77:	xor    ecx,eax
10061c79:	call   0x10042e97
10061c7e:	mov    eax,0x10078510
10061c83:	jmp    0x100591d1
10061c88:	lea    ecx,[ebp-0x7c]
10061c8b:	jmp    0x10007f41
10061c90:	lea    ecx,[ebp-0x3c]
10061c93:	jmp    0x10001f38
10061c98:	mov    ecx,DWORD PTR [ebp-0x54]
10061c9b:	jmp    0x10001f38
10061ca0:	lea    esi,[ebp-0xfc]
10061ca6:	jmp    0x10001f20
10061cab:	lea    ecx,[ebp-0xbc]
10061cb1:	jmp    0x10007f41
10061cb6:	lea    esi,[ebp-0xbc]
10061cbc:	jmp    0x10001f20
10061cc1:	mov    edx,DWORD PTR [esp+0x8]
10061cc5:	lea    eax,[edx+0xc]
10061cc8:	mov    ecx,DWORD PTR [edx-0x100]
10061cce:	xor    ecx,eax
10061cd0:	call   0x10042e97
10061cd5:	mov    ecx,DWORD PTR [edx-0x8]
10061cd8:	xor    ecx,eax
10061cda:	call   0x10042e97
10061cdf:	mov    eax,0x1007859c
10061ce4:	jmp    0x100591d1
10061ce9:	lea    ecx,[ebp-0x4c]
10061cec:	jmp    0x10007f41
10061cf1:	lea    ecx,[ebp-0x30]
10061cf4:	jmp    0x10007f41
10061cf9:	lea    ecx,[ebp-0x6c]
10061cfc:	jmp    0x10001f38
10061d01:	mov    edx,DWORD PTR [esp+0x8]
10061d05:	lea    eax,[edx-0x64]
10061d08:	mov    ecx,DWORD PTR [edx-0x68]
10061d0b:	xor    ecx,eax
10061d0d:	call   0x10042e97
10061d12:	add    eax,0x4
10061d15:	mov    ecx,DWORD PTR [edx-0x8]
10061d18:	xor    ecx,eax
10061d1a:	call   0x10042e97
10061d1f:	mov    eax,0x100785e0
10061d24:	jmp    0x100591d1
10061d29:	mov    eax,DWORD PTR [ebp+0x8]
10061d2c:	jmp    0x10001234
10061d31:	mov    edx,DWORD PTR [esp+0x8]
10061d35:	lea    eax,[edx+0xc]
10061d38:	mov    ecx,DWORD PTR [edx-0x10]
10061d3b:	xor    ecx,eax
10061d3d:	call   0x10042e97
10061d42:	mov    eax,0x1007860c
10061d47:	jmp    0x100591d1
10061d4c:	lea    eax,[ebp-0x14]
10061d4f:	jmp    0x10011e27
10061d54:	lea    eax,[ebp-0x18]
10061d57:	jmp    0x10034d30
10061d5c:	mov    edx,DWORD PTR [esp+0x8]
10061d60:	lea    eax,[edx-0xc]
10061d63:	mov    ecx,DWORD PTR [edx-0x10]
10061d66:	xor    ecx,eax
10061d68:	call   0x10042e97
10061d6d:	mov    eax,0x10078640
10061d72:	jmp    0x100591d1
10061d77:	mov    eax,DWORD PTR [ebp-0x10]
10061d7a:	and    eax,0x1
10061d7d:	je     0x10061d8f
10061d83:	and    DWORD PTR [ebp-0x10],0xfffffffe
10061d87:	mov    esi,DWORD PTR [ebp+0x8]
10061d8a:	jmp    0x100041bb
10061d8f:	ret    
10061d90:	lea    ecx,[ebp-0x34]
10061d93:	jmp    0x10007f41
10061d98:	lea    ecx,[ebp-0x34]
10061d9b:	jmp    0x10007f41
10061da0:	lea    ecx,[ebp-0x34]
10061da3:	jmp    0x10007f41
10061da8:	lea    ecx,[ebp-0x34]
10061dab:	jmp    0x10007f41
10061db0:	lea    ecx,[ebp-0x34]
10061db3:	jmp    0x10007f41
10061db8:	lea    ecx,[ebp-0x34]
10061dbb:	jmp    0x10007f41
10061dc0:	lea    ecx,[ebp-0x34]
10061dc3:	jmp    0x10007f41
10061dc8:	mov    edx,DWORD PTR [esp+0x8]
10061dcc:	lea    eax,[edx+0xc]
10061dcf:	mov    ecx,DWORD PTR [edx-0x38]
10061dd2:	xor    ecx,eax
10061dd4:	call   0x10042e97
10061dd9:	mov    eax,0x100786a8
10061dde:	jmp    0x100591d1
10061de3:	lea    eax,[ebp-0x60]
10061de6:	jmp    0x10014891
10061deb:	lea    esi,[ebp-0x6c]
10061dee:	jmp    0x100075ee
10061df3:	mov    edx,DWORD PTR [esp+0x8]
10061df7:	lea    eax,[edx+0xc]
10061dfa:	mov    ecx,DWORD PTR [edx-0x70]
10061dfd:	xor    ecx,eax
10061dff:	call   0x10042e97
10061e04:	mov    ecx,DWORD PTR [edx-0x4]
10061e07:	xor    ecx,eax
10061e09:	call   0x10042e97
10061e0e:	mov    eax,0x100786dc
10061e13:	jmp    0x100591d1
10061e18:	lea    ecx,[ebp+0x8]
10061e1b:	jmp    0x10007f41
10061e20:	mov    edx,DWORD PTR [esp+0x8]
10061e24:	lea    eax,[edx+0xc]
10061e27:	mov    ecx,DWORD PTR [edx-0x44]
10061e2a:	xor    ecx,eax
10061e2c:	call   0x10042e97
10061e31:	mov    eax,0x10078708
10061e36:	jmp    0x100591d1
10061e3b:	lea    eax,[ebp-0x28]
10061e3e:	jmp    0x10001239
10061e43:	mov    edx,DWORD PTR [esp+0x8]
10061e47:	lea    eax,[edx-0x4c]
10061e4a:	mov    ecx,DWORD PTR [edx-0x50]
10061e4d:	xor    ecx,eax
10061e4f:	call   0x10042e97
10061e54:	mov    eax,0x1007873c
10061e59:	jmp    0x100591d1
10061e5e:	lea    esi,[ebp-0xac]
10061e64:	jmp    0x100131d9
10061e69:	mov    esi,DWORD PTR [ebp-0xc0]
10061e6f:	jmp    0x100131d9
10061e74:	lea    edi,[ebp-0x234]
10061e7a:	jmp    0x10013260
10061e7f:	lea    ecx,[ebp-0x184]
10061e85:	jmp    0x10007f41
10061e8a:	lea    edi,[ebp-0x184]
10061e90:	jmp    0x10013260
10061e95:	mov    edx,DWORD PTR [esp+0x8]
10061e99:	lea    eax,[edx+0xc]
10061e9c:	mov    ecx,DWORD PTR [edx-0x238]
10061ea2:	xor    ecx,eax
10061ea4:	call   0x10042e97
10061ea9:	mov    ecx,DWORD PTR [edx-0x8]
10061eac:	xor    ecx,eax
10061eae:	call   0x10042e97
10061eb3:	mov    eax,0x100787bc
10061eb8:	jmp    0x100591d1
10061ebd:	jmp    0x100131d4
10061ec2:	mov    edx,DWORD PTR [esp+0x8]
10061ec6:	lea    eax,[edx+0xc]
10061ec9:	mov    ecx,DWORD PTR [edx-0x10]
10061ecc:	xor    ecx,eax
10061ece:	call   0x10042e97
10061ed3:	mov    eax,0x100787e8
10061ed8:	jmp    0x100591d1
10061edd:	lea    esi,[ebp-0x1c]
10061ee0:	jmp    0x100045e4
10061ee5:	mov    edx,DWORD PTR [esp+0x8]
10061ee9:	lea    eax,[edx+0xc]
10061eec:	mov    ecx,DWORD PTR [edx-0x20]
10061eef:	xor    ecx,eax
10061ef1:	call   0x10042e97
10061ef6:	mov    eax,0x10078814
10061efb:	jmp    0x100591d1
10061f00:	lea    ecx,[ebp-0x2c]
10061f03:	jmp    0x10007f41
10061f08:	lea    ecx,[ebp-0x48]
10061f0b:	jmp    0x10007f41
10061f10:	lea    eax,[ebp+0x10]
10061f13:	jmp    0x10011e27
10061f18:	mov    edx,DWORD PTR [esp+0x8]
10061f1c:	lea    eax,[edx+0xc]
10061f1f:	mov    ecx,DWORD PTR [edx-0x4c]
10061f22:	xor    ecx,eax
10061f24:	call   0x10042e97
10061f29:	mov    eax,0x10078850
10061f2e:	jmp    0x100591d1
10061f33:	lea    ecx,[ebp-0x28]
10061f36:	jmp    0x10007f41
10061f3b:	lea    ecx,[ebp-0x44]
10061f3e:	jmp    0x10007f41
10061f43:	mov    edx,DWORD PTR [esp+0x8]
10061f47:	lea    eax,[edx+0xc]
10061f4a:	mov    ecx,DWORD PTR [edx-0x4c]
10061f4d:	xor    ecx,eax
10061f4f:	call   0x10042e97
10061f54:	mov    eax,0x10078884
10061f59:	jmp    0x100591d1
10061f5e:	lea    ecx,[ebp-0x2c]
10061f61:	jmp    0x10007f41
10061f66:	mov    edx,DWORD PTR [esp+0x8]
10061f6a:	lea    eax,[edx+0xc]
10061f6d:	mov    ecx,DWORD PTR [edx-0x44]
10061f70:	xor    ecx,eax
10061f72:	call   0x10042e97
10061f77:	mov    ecx,DWORD PTR [edx-0x4]
10061f7a:	xor    ecx,eax
10061f7c:	call   0x10042e97
10061f81:	mov    eax,0x100788b0
10061f86:	jmp    0x100591d1
10061f8b:	mov    edx,DWORD PTR [esp+0x8]
10061f8f:	lea    eax,[edx+0xc]
10061f92:	mov    ecx,DWORD PTR [edx-0x18]
10061f95:	xor    ecx,eax
10061f97:	call   0x10042e97
10061f9c:	mov    eax,0x10078908
10061fa1:	jmp    0x100591d1
10061fa6:	lea    ecx,[ebp-0x4c]
10061fa9:	jmp    0x10007f41
10061fae:	lea    ecx,[ebp-0x2c]
10061fb1:	jmp    0x10007f41
10061fb6:	mov    edx,DWORD PTR [esp+0x8]
10061fba:	lea    eax,[edx+0xc]
10061fbd:	mov    ecx,DWORD PTR [edx-0x50]
10061fc0:	xor    ecx,eax
10061fc2:	call   0x10042e97
10061fc7:	mov    ecx,DWORD PTR [edx-0x4]
10061fca:	xor    ecx,eax
10061fcc:	call   0x10042e97
10061fd1:	mov    eax,0x1007893c
10061fd6:	jmp    0x100591d1
10061fdb:	push   DWORD PTR [ebp-0x14]
10061fde:	call   0x10042e92
10061fe3:	pop    ecx
10061fe4:	ret    
10061fe5:	mov    edx,DWORD PTR [esp+0x8]
10061fe9:	lea    eax,[edx+0xc]
10061fec:	mov    ecx,DWORD PTR [edx-0x18]
10061fef:	xor    ecx,eax
10061ff1:	call   0x10042e97
10061ff6:	mov    ecx,DWORD PTR [edx+0x1000c]
10061ffc:	xor    ecx,eax
10061ffe:	call   0x10042e97
10062003:	mov    eax,0x10078968
10062008:	jmp    0x100591d1
1006200d:	lea    ecx,[ebp-0x2c]
10062010:	jmp    0x10007f41
10062015:	mov    edx,DWORD PTR [esp+0x8]
10062019:	lea    eax,[edx+0xc]
1006201c:	mov    ecx,DWORD PTR [edx-0x38]
1006201f:	xor    ecx,eax
10062021:	call   0x10042e97
10062026:	mov    ecx,DWORD PTR [edx-0x4]
10062029:	xor    ecx,eax
1006202b:	call   0x10042e97
10062030:	mov    eax,0x10078994
10062035:	jmp    0x100591d1
1006203a:	mov    eax,DWORD PTR [ebp-0x14]
1006203d:	and    eax,0x1
10062040:	je     0x10062052
10062046:	and    DWORD PTR [ebp-0x14],0xfffffffe
1006204a:	lea    ecx,[ebp-0x30]
1006204d:	jmp    0x10007f41
10062052:	ret    
10062053:	lea    esi,[ebp-0x14]
10062056:	jmp    0x1000a986
1006205b:	lea    ecx,[ebp-0x4c]
1006205e:	jmp    0x10007f41
10062063:	mov    edx,DWORD PTR [esp+0x8]
10062067:	lea    eax,[edx+0xc]
1006206a:	mov    ecx,DWORD PTR [edx-0x50]
1006206d:	xor    ecx,eax
1006206f:	call   0x10042e97
10062074:	mov    eax,0x100789d0
10062079:	jmp    0x100591d1
1006207e:	lea    ecx,[ebp-0x80]
10062081:	jmp    0x10007f41
10062086:	lea    ecx,[ebp-0x80]
10062089:	jmp    0x10007f41
1006208e:	lea    ecx,[ebp-0x48]
10062091:	jmp    0x10007f41
10062096:	lea    ecx,[ebp-0x64]
10062099:	jmp    0x10007f41
1006209e:	lea    ecx,[ebp-0x2c]
100620a1:	jmp    0x10007f41
100620a6:	mov    edx,DWORD PTR [esp+0x8]
100620aa:	lea    eax,[edx-0x84]
100620b0:	mov    ecx,DWORD PTR [edx-0x88]
100620b6:	xor    ecx,eax
100620b8:	call   0x10042e97
100620bd:	mov    eax,0x10078a1c
100620c2:	jmp    0x100591d1
100620c7:	lea    esi,[ebp+0x24]
100620ca:	jmp    0x100041bb
100620cf:	lea    ecx,[ebp+0x8]
100620d2:	jmp    0x10007f41
100620d7:	mov    ecx,DWORD PTR [ebp-0x10]
100620da:	jmp    0x10007f41
100620df:	mov    edx,DWORD PTR [esp+0x8]
100620e3:	lea    eax,[edx+0xc]
100620e6:	mov    ecx,DWORD PTR [edx-0x18]
100620e9:	xor    ecx,eax
100620eb:	call   0x10042e97
100620f0:	mov    eax,0x10078a58
100620f5:	jmp    0x100591d1
100620fa:	mov    ecx,DWORD PTR [ebp+0x8]
100620fd:	jmp    0x10007f41
10062102:	mov    edx,DWORD PTR [esp+0x8]
10062106:	lea    eax,[edx+0xc]
10062109:	mov    ecx,DWORD PTR [edx-0x10]
1006210c:	xor    ecx,eax
1006210e:	call   0x10042e97
10062113:	mov    eax,0x10078a84
10062118:	jmp    0x100591d1
1006211d:	jmp    0x10002080
10062122:	mov    edx,DWORD PTR [esp+0x8]
10062126:	lea    eax,[edx+0xc]
10062129:	mov    ecx,DWORD PTR [edx-0x1c]
1006212c:	xor    ecx,eax
1006212e:	call   0x10042e97
10062133:	mov    eax,0x10078ae4
10062138:	jmp    0x100591d1
1006213d:	lea    eax,[ebp-0x14]
10062140:	jmp    0x10009c34
10062145:	mov    edx,DWORD PTR [esp+0x8]
10062149:	lea    eax,[edx+0xc]
1006214c:	mov    ecx,DWORD PTR [edx-0x1c]
1006214f:	xor    ecx,eax
10062151:	call   0x10042e97
10062156:	mov    eax,0x10078b10
1006215b:	jmp    0x100591d1
10062160:	mov    eax,DWORD PTR [ebp-0xcc]
10062166:	and    eax,0x1
10062169:	je     0x10062181
1006216f:	and    DWORD PTR [ebp-0xcc],0xfffffffe
10062176:	lea    ecx,[ebp-0xa0]
1006217c:	jmp    0x10007f41
10062181:	ret    
10062182:	mov    eax,DWORD PTR [ebp-0xcc]
10062188:	and    eax,0x2
1006218b:	je     0x100621a3
10062191:	and    DWORD PTR [ebp-0xcc],0xfffffffd
10062198:	lea    ecx,[ebp-0xbc]
1006219e:	jmp    0x10007f41
100621a3:	ret    
100621a4:	lea    ecx,[ebp-0x30]
100621a7:	jmp    0x10007f41
100621ac:	lea    ecx,[ebp-0x4c]
100621af:	jmp    0x10007f41
100621b4:	lea    ecx,[ebp-0xbc]
100621ba:	jmp    0x10007f41
100621bf:	lea    ecx,[ebp-0x84]
100621c5:	jmp    0x10007f41
100621ca:	lea    ecx,[ebp-0xa0]
100621d0:	jmp    0x10007f41
100621d5:	lea    ecx,[ebp-0x68]
100621d8:	jmp    0x10007f41
100621dd:	lea    ecx,[ebp-0x84]
100621e3:	jmp    0x10007f41
100621e8:	mov    edx,DWORD PTR [esp+0x8]
100621ec:	lea    eax,[edx-0xcc]
100621f2:	mov    ecx,DWORD PTR [edx-0xd0]
100621f8:	xor    ecx,eax
100621fa:	call   0x10042e97
100621ff:	add    eax,0xc
10062202:	mov    ecx,DWORD PTR [edx-0x8]
10062205:	xor    ecx,eax
10062207:	call   0x10042e97
1006220c:	mov    eax,0x10078b90
10062211:	jmp    0x100591d1
10062216:	lea    ecx,[ebp-0x48]
10062219:	jmp    0x10007f41
1006221e:	lea    ecx,[ebp-0x2c]
10062221:	jmp    0x10007f41
10062226:	mov    edx,DWORD PTR [esp+0x8]
1006222a:	lea    eax,[edx+0xc]
1006222d:	mov    ecx,DWORD PTR [edx-0x4c]
10062230:	xor    ecx,eax
10062232:	call   0x10042e97
10062237:	mov    eax,0x10078bc4
1006223c:	jmp    0x100591d1
10062241:	lea    ecx,[ebp-0x30]
10062244:	jmp    0x10007f41
10062249:	mov    edx,DWORD PTR [esp+0x8]
1006224d:	lea    eax,[edx-0x44]
10062250:	mov    ecx,DWORD PTR [edx-0x48]
10062253:	xor    ecx,eax
10062255:	call   0x10042e97
1006225a:	add    eax,0xc
1006225d:	mov    ecx,DWORD PTR [edx-0x8]
10062260:	xor    ecx,eax
10062262:	call   0x10042e97
10062267:	mov    eax,0x10078bf0
1006226c:	jmp    0x100591d1
10062271:	lea    ecx,[ebp-0x50]
10062274:	jmp    0x10007f41
10062279:	lea    eax,[ebp-0xd8]
1006227f:	jmp    0x10011e27
10062284:	lea    ecx,[ebp-0x34]
10062287:	jmp    0x10007f41
1006228c:	lea    esi,[ebp-0xb8]
10062292:	jmp    0x100041bb
10062297:	mov    esi,DWORD PTR [ebp-0xc8]
1006229d:	jmp    0x100041bb
100622a2:	lea    edi,[ebp-0x7c]
100622a5:	jmp    0x10007f4b
100622aa:	lea    edi,[ebp-0xa8]
100622b0:	jmp    0x10007f4b
100622b5:	mov    edx,DWORD PTR [esp+0x8]
100622b9:	lea    eax,[edx-0xdc]
100622bf:	mov    ecx,DWORD PTR [edx-0xe0]
100622c5:	xor    ecx,eax
100622c7:	call   0x10042e97
100622cc:	add    eax,0xc
100622cf:	mov    ecx,DWORD PTR [edx-0x8]
100622d2:	xor    ecx,eax
100622d4:	call   0x10042e97
100622d9:	mov    eax,0x10078c4c
100622de:	jmp    0x100591d1
100622e3:	lea    eax,[ebp+0xc]
100622e6:	jmp    0x10011e27
100622eb:	lea    ecx,[ebp-0x30]
100622ee:	jmp    0x10007f41
100622f3:	mov    esi,DWORD PTR [ebp-0x50]
100622f6:	jmp    0x100041bb
100622fb:	lea    edi,[ebp-0xa8]
10062301:	jmp    0x10007f4b
10062306:	lea    edi,[ebp-0x7c]
10062309:	jmp    0x10007f4b
1006230e:	mov    edx,DWORD PTR [esp+0x8]
10062312:	lea    eax,[edx+0xc]
10062315:	mov    ecx,DWORD PTR [edx-0xac]
1006231b:	xor    ecx,eax
1006231d:	call   0x10042e97
10062322:	mov    ecx,DWORD PTR [edx-0x4]
10062325:	xor    ecx,eax
10062327:	call   0x10042e97
1006232c:	mov    eax,0x10078c98
10062331:	jmp    0x100591d1
10062336:	lea    ecx,[ebp-0x30]
10062339:	jmp    0x10007f41
1006233e:	mov    edx,DWORD PTR [esp+0x8]
10062342:	lea    eax,[edx+0xc]
10062345:	mov    ecx,DWORD PTR [edx-0x4c]
10062348:	xor    ecx,eax
1006234a:	call   0x10042e97
1006234f:	mov    ecx,DWORD PTR [edx-0x4]
10062352:	xor    ecx,eax
10062354:	call   0x10042e97
10062359:	mov    eax,0x10078cc4
1006235e:	jmp    0x100591d1
10062363:	lea    eax,[ebp-0x14]
10062366:	jmp    0x10011e27
1006236b:	mov    edx,DWORD PTR [esp+0x8]
1006236f:	lea    eax,[edx+0xc]
10062372:	mov    ecx,DWORD PTR [edx-0x2c]
10062375:	xor    ecx,eax
10062377:	call   0x10042e97
1006237c:	mov    eax,0x10078cf0
10062381:	jmp    0x100591d1
10062386:	lea    ecx,[ebp-0x68]
10062389:	jmp    0x10006d1d
1006238e:	lea    ecx,[ebp-0x30]
10062391:	jmp    0x100070b3
10062396:	lea    ecx,[ebp-0x40]
10062399:	jmp    0x10006d1d
1006239e:	lea    ecx,[ebp-0x2c]
100623a1:	jmp    0x10007f41
100623a6:	lea    ecx,[ebp-0x84]
100623ac:	jmp    0x10007f41
100623b1:	lea    ecx,[ebp-0x58]
100623b4:	jmp    0x10006d1d
100623b9:	lea    ecx,[ebp-0x84]
100623bf:	jmp    0x10007f41
100623c4:	mov    edx,DWORD PTR [esp+0x8]
100623c8:	lea    eax,[edx+0xc]
100623cb:	mov    ecx,DWORD PTR [edx-0x88]
100623d1:	xor    ecx,eax
100623d3:	call   0x10042e97
100623d8:	mov    ecx,DWORD PTR [edx-0x4]
100623db:	xor    ecx,eax
100623dd:	call   0x10042e97
100623e2:	mov    eax,0x10078d4c
100623e7:	jmp    0x100591d1
100623ec:	mov    eax,DWORD PTR [ebp+0x8]
100623ef:	jmp    0x1000216c
100623f4:	mov    edx,DWORD PTR [esp+0x8]
100623f8:	lea    eax,[edx+0xc]
100623fb:	mov    ecx,DWORD PTR [edx-0x10]
100623fe:	xor    ecx,eax
10062400:	call   0x10042e97
10062405:	mov    eax,0x10078d78
1006240a:	jmp    0x100591d1
1006240f:	lea    eax,[ebp-0x10]
10062412:	jmp    0x1000216c
10062417:	mov    edx,DWORD PTR [esp+0x8]
1006241b:	lea    eax,[edx+0xc]
1006241e:	mov    ecx,DWORD PTR [edx-0x14]
10062421:	xor    ecx,eax
10062423:	call   0x10042e97
10062428:	mov    eax,0x10078da4
1006242d:	jmp    0x100591d1
10062432:	lea    eax,[ebp-0x1c]
10062435:	jmp    0x10034d30
1006243a:	mov    edx,DWORD PTR [esp+0x8]
1006243e:	lea    eax,[edx-0x14]
10062441:	mov    ecx,DWORD PTR [edx-0x18]
10062444:	xor    ecx,eax
10062446:	call   0x10042e97
1006244b:	mov    eax,0x10078dd0
10062450:	jmp    0x100591d1
10062455:	push   DWORD PTR [ebp-0x14]
10062458:	call   0x10042e92
1006245d:	pop    ecx
1006245e:	ret    
1006245f:	lea    eax,[ebp-0x14]
10062462:	jmp    0x100041a3
10062467:	mov    edx,DWORD PTR [esp+0x8]
1006246b:	lea    eax,[edx+0xc]
1006246e:	mov    ecx,DWORD PTR [edx-0x18]
10062471:	xor    ecx,eax
10062473:	call   0x10042e97
10062478:	mov    eax,0x10078e04
1006247d:	jmp    0x100591d1
10062482:	int3   
10062483:	int3   
10062484:	int3   
10062485:	int3   
10062486:	int3   
10062487:	int3   
10062488:	int3   
10062489:	int3   
1006248a:	int3   
1006248b:	int3   
1006248c:	int3   
1006248d:	int3   
1006248e:	int3   
1006248f:	int3   
10062490:	lea    eax,[ebp-0x14]
10062493:	jmp    0x10011e27
10062498:	lea    eax,[ebp-0x10]
1006249b:	jmp    0x10011e27
100624a0:	mov    edx,DWORD PTR [esp+0x8]
100624a4:	lea    eax,[edx-0x20]
100624a7:	mov    ecx,DWORD PTR [edx-0x24]
100624aa:	xor    ecx,eax
100624ac:	call   0x10042e97
100624b1:	mov    eax,0x10078e38
100624b6:	jmp    0x100591d1
100624bb:	int3   
100624bc:	int3   
100624bd:	int3   
100624be:	int3   
100624bf:	int3   
100624c0:	mov    eax,DWORD PTR [ebp-0x18]
100624c3:	push   eax
100624c4:	call   0x10042e92
100624c9:	pop    ecx
100624ca:	ret    
100624cb:	lea    edi,[ebp-0x28]
100624ce:	jmp    0x1000250a
100624d3:	mov    eax,DWORD PTR [ebp-0x18]
100624d6:	push   eax
100624d7:	call   0x10042e92
100624dc:	pop    ecx
100624dd:	ret    
100624de:	lea    edi,[ebp-0x18]
100624e1:	jmp    0x1000250a
100624e6:	lea    edi,[ebp-0x14]
100624e9:	jmp    0x1000250a
100624ee:	mov    edx,DWORD PTR [esp+0x8]
100624f2:	lea    eax,[edx+0xc]
100624f5:	mov    ecx,DWORD PTR [edx-0x2c]
100624f8:	xor    ecx,eax
100624fa:	call   0x10042e97
100624ff:	mov    ecx,DWORD PTR [edx-0x4]
10062502:	xor    ecx,eax
10062504:	call   0x10042e97
10062509:	mov    eax,0x10078e94
1006250e:	jmp    0x100591d1
10062513:	int3   
10062514:	int3   
10062515:	int3   
10062516:	int3   
10062517:	int3   
10062518:	int3   
10062519:	int3   
1006251a:	int3   
1006251b:	int3   
1006251c:	int3   
1006251d:	int3   
1006251e:	int3   
1006251f:	int3   
10062520:	lea    eax,[ebp-0x14]
10062523:	jmp    0x10034380
10062528:	lea    eax,[ebp-0x24]
1006252b:	jmp    0x10034d30
10062530:	lea    eax,[ebp-0x1c]
10062533:	jmp    0x10034380
10062538:	mov    edx,DWORD PTR [esp+0x8]
1006253c:	lea    eax,[edx+0xc]
1006253f:	mov    ecx,DWORD PTR [edx-0x2c]
10062542:	xor    ecx,eax
10062544:	call   0x10042e97
10062549:	mov    eax,0x10078f04
1006254e:	jmp    0x100591d1
10062553:	int3   
10062554:	int3   
10062555:	int3   
10062556:	int3   
10062557:	int3   
10062558:	int3   
10062559:	int3   
1006255a:	int3   
1006255b:	int3   
1006255c:	int3   
1006255d:	int3   
1006255e:	int3   
1006255f:	int3   
10062560:	mov    edx,DWORD PTR [esp+0x8]
10062564:	lea    eax,[edx+0xc]
10062567:	mov    ecx,DWORD PTR [edx-0x20]
1006256a:	xor    ecx,eax
1006256c:	call   0x10042e97
10062571:	mov    eax,0x10078f5c
10062576:	jmp    0x100591d1
1006257b:	int3   
1006257c:	int3   
1006257d:	int3   
1006257e:	int3   
1006257f:	int3   
10062580:	lea    ecx,[ebp-0x40]
10062583:	jmp    0x10037940
10062588:	mov    edx,DWORD PTR [esp+0x8]
1006258c:	lea    eax,[edx-0x44]
1006258f:	mov    ecx,DWORD PTR [edx-0x48]
10062592:	xor    ecx,eax
10062594:	call   0x10042e97
10062599:	mov    eax,0x10078f88
1006259e:	jmp    0x100591d1
100625a3:	int3   
100625a4:	int3   
100625a5:	int3   
100625a6:	int3   
100625a7:	int3   
100625a8:	int3   
100625a9:	int3   
100625aa:	int3   
100625ab:	int3   
100625ac:	int3   
100625ad:	int3   
100625ae:	int3   
100625af:	int3   
100625b0:	lea    ecx,[ebp-0x14]
100625b3:	jmp    0x10037940
100625b8:	mov    eax,DWORD PTR [ebp-0x1c]
100625bb:	and    eax,0x1
100625be:	je     0x100625d0
100625c4:	and    DWORD PTR [ebp-0x1c],0xfffffffe
100625c8:	mov    ecx,DWORD PTR [ebp-0x18]
100625cb:	jmp    0x10007f41
100625d0:	ret    
100625d1:	mov    edx,DWORD PTR [esp+0x8]
100625d5:	lea    eax,[edx-0x1c]
100625d8:	mov    ecx,DWORD PTR [edx-0x20]
100625db:	xor    ecx,eax
100625dd:	call   0x10042e97
100625e2:	mov    eax,0x10078fbc
100625e7:	jmp    0x100591d1
100625ec:	int3   
100625ed:	int3   
100625ee:	int3   
100625ef:	int3   
100625f0:	lea    eax,[ebp-0x1c]
100625f3:	jmp    0x10011e27
100625f8:	lea    ecx,[ebp-0x44]
100625fb:	jmp    0x10007f41
10062600:	mov    edx,DWORD PTR [esp+0x8]
10062604:	lea    eax,[edx+0xc]
10062607:	mov    ecx,DWORD PTR [edx-0x48]
1006260a:	xor    ecx,eax
1006260c:	call   0x10042e97
10062611:	mov    eax,0x10079024
10062616:	jmp    0x100591d1
1006261b:	int3   
1006261c:	int3   
1006261d:	int3   
1006261e:	int3   
1006261f:	int3   
10062620:	lea    ecx,[ebp-0x54]
10062623:	jmp    0x10007f41
10062628:	lea    ecx,[ebp-0x38]
1006262b:	jmp    0x10042fd0
10062630:	lea    eax,[ebp-0x58]
10062633:	jmp    0x10011e27
10062638:	mov    edx,DWORD PTR [esp+0x8]
1006263c:	lea    eax,[edx-0x5c]
1006263f:	mov    ecx,DWORD PTR [edx-0x60]
10062642:	xor    ecx,eax
10062644:	call   0x10042e97
10062649:	mov    eax,0x10079060
1006264e:	jmp    0x100591d1
10062653:	int3   
10062654:	int3   
10062655:	int3   
10062656:	int3   
10062657:	int3   
10062658:	int3   
10062659:	int3   
1006265a:	int3   
1006265b:	int3   
1006265c:	int3   
1006265d:	int3   
1006265e:	int3   
1006265f:	int3   
10062660:	mov    eax,DWORD PTR [ebp-0x58]
10062663:	and    eax,0x1
10062666:	je     0x10062678
1006266c:	and    DWORD PTR [ebp-0x58],0xfffffffe
10062670:	mov    eax,DWORD PTR [ebp+0x4]
10062673:	jmp    0x1000216c
10062678:	ret    
10062679:	lea    ecx,[ebp-0x54]
1006267c:	jmp    0x10007f41
10062681:	lea    ecx,[ebp-0x38]
10062684:	jmp    0x10042fd0
10062689:	mov    edx,DWORD PTR [esp+0x8]
1006268d:	lea    eax,[edx-0x60]
10062690:	mov    ecx,DWORD PTR [edx-0x64]
10062693:	xor    ecx,eax
10062695:	call   0x10042e97
1006269a:	mov    eax,0x1007909c
1006269f:	jmp    0x100591d1
100626a4:	int3   
100626a5:	int3   
100626a6:	int3   
100626a7:	int3   
100626a8:	int3   
100626a9:	int3   
100626aa:	int3   
100626ab:	int3   
100626ac:	int3   
100626ad:	int3   
100626ae:	int3   
100626af:	int3   
100626b0:	mov    eax,DWORD PTR [ebp-0x14]
100626b3:	and    eax,0x1
100626b6:	je     0x100626c8
100626bc:	and    DWORD PTR [ebp-0x14],0xfffffffe
100626c0:	mov    ecx,DWORD PTR [ebp-0x10]
100626c3:	jmp    0x10007f41
100626c8:	ret    
100626c9:	lea    ecx,[ebp-0x30]
100626cc:	jmp    0x10007f41
100626d1:	lea    ecx,[ebp-0x30]
100626d4:	jmp    0x10007f41
100626d9:	lea    ecx,[ebp-0x30]
100626dc:	jmp    0x10007f41
100626e1:	lea    ecx,[ebp-0x30]
100626e4:	jmp    0x10007f41
100626e9:	lea    ecx,[ebp-0x30]
100626ec:	jmp    0x10007f41
100626f1:	lea    ecx,[ebp-0x30]
100626f4:	jmp    0x10007f41
100626f9:	mov    edx,DWORD PTR [esp+0x8]
100626fd:	lea    eax,[edx-0x34]
10062700:	mov    ecx,DWORD PTR [edx-0x38]
10062703:	xor    ecx,eax
10062705:	call   0x10042e97
1006270a:	mov    eax,0x100790f8
1006270f:	jmp    0x100591d1
10062714:	lea    ecx,[ebp-0x64]
10062717:	jmp    0x10007f41
1006271c:	lea    ecx,[ebp-0x2c]
1006271f:	jmp    0x10007f41
10062724:	lea    esi,[ebp-0x90]
1006272a:	jmp    0x100045e4
1006272f:	lea    ecx,[ebp-0x80]
10062732:	jmp    0x10007f41
10062737:	lea    ecx,[ebp-0x48]
1006273a:	jmp    0x10007f41
1006273f:	lea    ecx,[ebp-0x80]
10062742:	jmp    0x10007f41
10062747:	mov    edx,DWORD PTR [esp+0x8]
1006274b:	lea    eax,[edx-0x94]
10062751:	mov    ecx,DWORD PTR [edx-0x98]
10062757:	xor    ecx,eax
10062759:	call   0x10042e97
1006275e:	mov    eax,0x10079160
10062763:	jmp    0x100591d1
10062768:	lea    ecx,[ebp-0x64]
1006276b:	jmp    0x10007f41
10062770:	lea    ecx,[ebp-0x2c]
10062773:	jmp    0x10007f41
10062778:	lea    ecx,[ebp-0x48]
1006277b:	jmp    0x10007f41
10062780:	mov    edx,DWORD PTR [esp+0x8]
10062784:	lea    eax,[edx-0x64]
10062787:	mov    ecx,DWORD PTR [edx-0x68]
1006278a:	xor    ecx,eax
1006278c:	call   0x10042e97
10062791:	mov    eax,0x1007919c
10062796:	jmp    0x100591d1
1006279b:	lea    eax,[ebp-0x24]
1006279e:	jmp    0x10039e40
100627a3:	push   DWORD PTR [ebp-0x1c]
100627a6:	call   0x10042e92
100627ab:	pop    ecx
100627ac:	ret    
100627ad:	mov    eax,DWORD PTR [ebp-0x10]
100627b0:	and    eax,0x1
100627b3:	je     0x100627c5
100627b9:	and    DWORD PTR [ebp-0x10],0xfffffffe
100627bd:	lea    ecx,[ebp-0x44]
100627c0:	jmp    0x10007f41
100627c5:	ret    
100627c6:	mov    eax,DWORD PTR [ebp-0x10]
100627c9:	and    eax,0x2
100627cc:	je     0x100627de
100627d2:	and    DWORD PTR [ebp-0x10],0xfffffffd
100627d6:	lea    ecx,[ebp-0x7c]
100627d9:	jmp    0x10007f41
100627de:	ret    
100627df:	mov    eax,DWORD PTR [ebp-0x10]
100627e2:	and    eax,0x4
100627e5:	je     0x100627f7
100627eb:	and    DWORD PTR [ebp-0x10],0xfffffffb
100627ef:	lea    ecx,[ebp-0x60]
100627f2:	jmp    0x10007f41
100627f7:	ret    
100627f8:	mov    eax,DWORD PTR [ebp-0x10]
100627fb:	and    eax,0x8
100627fe:	je     0x10062813
10062804:	and    DWORD PTR [ebp-0x10],0xfffffff7
10062808:	lea    ecx,[ebp-0x98]
1006280e:	jmp    0x10007f41
10062813:	ret    
10062814:	lea    ecx,[ebp-0x44]
10062817:	jmp    0x10007f41
1006281c:	lea    ecx,[ebp-0x98]
10062822:	jmp    0x10007f41
10062827:	lea    ecx,[ebp-0x60]
1006282a:	jmp    0x10007f41
1006282f:	lea    ecx,[ebp-0x7c]
10062832:	jmp    0x10007f41
10062837:	mov    edx,DWORD PTR [esp+0x8]
1006283b:	lea    eax,[edx+0xc]
1006283e:	mov    ecx,DWORD PTR [edx-0xb8]
10062844:	xor    ecx,eax
10062846:	call   0x10042e97
1006284b:	mov    eax,0x10079230
10062850:	jmp    0x100591d1
10062855:	lea    ecx,[ebp-0xbc]
1006285b:	jmp    0x10007f41
10062860:	lea    eax,[ebp-0xdc]
10062866:	jmp    0x100231e9
1006286b:	lea    eax,[ebp-0xe0]
10062871:	jmp    0x100231e9
10062876:	lea    ecx,[ebp-0xbc]
1006287c:	jmp    0x10007f41
10062881:	lea    ecx,[ebp-0xbc]
10062887:	jmp    0x10007f41
1006288c:	lea    ecx,[ebp-0x30]
1006288f:	jmp    0x10007f41
10062894:	lea    eax,[ebp-0xa0]
1006289a:	jmp    0x10011e27
1006289f:	lea    ecx,[ebp-0xbc]
100628a5:	jmp    0x10007f41
100628aa:	lea    ecx,[ebp-0xbc]
100628b0:	jmp    0x10007f41
100628b5:	lea    ecx,[ebp-0xbc]
100628bb:	jmp    0x10007f41
100628c0:	lea    ecx,[ebp-0xbc]
100628c6:	jmp    0x10007f41
100628cb:	lea    edi,[ebp-0xe4]
100628d1:	jmp    0x1000250a
100628d6:	lea    ecx,[ebp-0x74]
100628d9:	jmp    0x10007f41
100628de:	mov    edx,DWORD PTR [esp+0x8]
100628e2:	lea    eax,[edx-0xe4]
100628e8:	mov    ecx,DWORD PTR [edx-0xe8]
100628ee:	xor    ecx,eax
100628f0:	call   0x10042e97
100628f5:	add    eax,0xc
100628f8:	mov    ecx,DWORD PTR [edx-0x8]
100628fb:	xor    ecx,eax
100628fd:	call   0x10042e97
10062902:	mov    eax,0x100792c0
10062907:	jmp    0x100591d1
1006290c:	lea    ecx,[ebp-0x28]
1006290f:	jmp    0x1001b3fd
10062914:	lea    ecx,[ebp-0x38]
10062917:	jmp    0x1001b3fd
1006291c:	mov    edx,DWORD PTR [esp+0x8]
10062920:	lea    eax,[edx+0xc]
10062923:	mov    ecx,DWORD PTR [edx-0x3c]
10062926:	xor    ecx,eax
10062928:	call   0x10042e97
1006292d:	mov    eax,0x10079328
10062932:	jmp    0x100591d1
10062937:	lea    eax,[ebp-0x18]
1006293a:	jmp    0x100231e9
1006293f:	lea    ecx,[ebp-0x60]
10062942:	jmp    0x1001b3fd
10062947:	lea    ecx,[ebp-0x50]
1006294a:	jmp    0x1001b3fd
1006294f:	lea    ecx,[ebp-0x70]
10062952:	jmp    0x1001b3fd
10062957:	lea    edi,[ebp+0x10]
1006295a:	jmp    0x1000250a
1006295f:	lea    ecx,[ebp-0x80]
10062962:	jmp    0x1001b3fd
10062967:	lea    ecx,[ebp-0x40]
1006296a:	jmp    0x1001b3fd
1006296f:	lea    ecx,[ebp-0x30]
10062972:	jmp    0x1001b3fd
10062977:	lea    edi,[ebp+0x10]
1006297a:	jmp    0x1000250a
1006297f:	mov    edx,DWORD PTR [esp+0x8]
10062983:	lea    eax,[edx+0xc]
10062986:	mov    ecx,DWORD PTR [edx-0xb4]
1006298c:	xor    ecx,eax
1006298e:	call   0x10042e97
10062993:	mov    eax,0x10079408
10062998:	jmp    0x100591d1
1006299d:	lea    eax,[ebp-0x18]
100629a0:	jmp    0x100231e9
100629a5:	lea    eax,[ebp-0x28]
100629a8:	jmp    0x1000421f
100629ad:	lea    eax,[ebp-0x28]
100629b0:	jmp    0x10024229
100629b5:	lea    esi,[ebp-0x1c]
100629b8:	jmp    0x10004634
100629bd:	mov    edx,DWORD PTR [esp+0x8]
100629c1:	lea    eax,[edx+0xc]
100629c4:	mov    ecx,DWORD PTR [edx-0x60]
100629c7:	xor    ecx,eax
100629c9:	call   0x10042e97
100629ce:	mov    eax,0x10079480
100629d3:	jmp    0x100591d1
100629d8:	lea    eax,[ebp-0x30]
100629db:	jmp    0x1000421f
100629e0:	lea    ecx,[ebp+0x54]
100629e3:	jmp    0x10007f41
100629e8:	lea    ecx,[ebp+0x1c]
100629eb:	jmp    0x10007f41
100629f0:	lea    ecx,[ebp+0x0]
100629f3:	jmp    0x10007f41
100629f8:	lea    ecx,[ebp+0x38]
100629fb:	jmp    0x10007f41
10062a00:	lea    esi,[ebp-0xf0]
10062a06:	jmp    0x100033ac
10062a0b:	lea    ecx,[ebp-0x68]
10062a0e:	jmp    0x10007f41
10062a13:	lea    ecx,[ebp-0x4c]
10062a16:	jmp    0x10007f41
10062a1b:	mov    edx,DWORD PTR [esp+0x8]
10062a1f:	lea    eax,[edx+0xc]
10062a22:	mov    ecx,DWORD PTR [edx-0xf4]
10062a28:	xor    ecx,eax
10062a2a:	call   0x10042e97
10062a2f:	mov    ecx,DWORD PTR [edx+0x7c]
10062a32:	xor    ecx,eax
10062a34:	call   0x10042e97
10062a39:	mov    eax,0x1007952c
10062a3e:	jmp    0x100591d1
10062a43:	mov    edx,DWORD PTR [esp+0x8]
10062a47:	lea    eax,[edx+0xc]
10062a4a:	mov    ecx,DWORD PTR [edx-0x20]
10062a4d:	xor    ecx,eax
10062a4f:	call   0x10042e97
10062a54:	mov    eax,0x10079584
10062a59:	jmp    0x100591d1
10062a5e:	lea    ecx,[ebp-0x6c]
10062a61:	jmp    0x10007f41
10062a66:	lea    ecx,[ebp-0x34]
10062a69:	jmp    0x10001f38
10062a6e:	lea    ecx,[ebp-0x50]
10062a71:	jmp    0x10007f41
10062a76:	lea    ecx,[ebp-0x88]
10062a7c:	jmp    0x10007f41
10062a81:	lea    ecx,[ebp-0x88]
10062a87:	jmp    0x10007f41
10062a8c:	mov    edx,DWORD PTR [esp+0x8]
10062a90:	lea    eax,[edx-0x9c]
10062a96:	mov    ecx,DWORD PTR [edx-0xa0]
10062a9c:	xor    ecx,eax
10062a9e:	call   0x10042e97
10062aa3:	add    eax,0xc
10062aa6:	mov    ecx,DWORD PTR [edx-0x8]
10062aa9:	xor    ecx,eax
10062aab:	call   0x10042e97
10062ab0:	mov    eax,0x100795d8
10062ab5:	jmp    0x100591d1
10062aba:	push   DWORD PTR [ebp-0x14]
10062abd:	call   0x10042e92
10062ac2:	pop    ecx
10062ac3:	ret    
10062ac4:	mov    edx,DWORD PTR [esp+0x8]
10062ac8:	lea    eax,[edx+0xc]
10062acb:	mov    ecx,DWORD PTR [edx-0x18]
10062ace:	xor    ecx,eax
10062ad0:	call   0x10042e97
10062ad5:	mov    eax,0x10079638
10062ada:	jmp    0x100591d1
10062adf:	lea    esi,[ebp-0x28]
10062ae2:	jmp    0x100075ee
10062ae7:	lea    eax,[ebp+0x0]
10062aea:	jmp    0x100177f1
10062aef:	mov    edx,DWORD PTR [esp+0x8]
10062af3:	lea    eax,[edx+0xc]
10062af6:	mov    ecx,DWORD PTR [edx-0x2c]
10062af9:	xor    ecx,eax
10062afb:	call   0x10042e97
10062b00:	mov    ecx,DWORD PTR [edx+0x410]
10062b06:	xor    ecx,eax
10062b08:	call   0x10042e97
10062b0d:	mov    eax,0x100796a0
10062b12:	jmp    0x100591d1
10062b17:	mov    edx,DWORD PTR [esp+0x8]
10062b1b:	lea    eax,[edx+0xc]
10062b1e:	mov    ecx,DWORD PTR [edx-0x20]
10062b21:	xor    ecx,eax
10062b23:	call   0x10042e97
10062b28:	mov    eax,0x100796f8
10062b2d:	jmp    0x100591d1
10062b32:	lea    ecx,[ebp-0x110]
10062b38:	jmp    0x10007f41
10062b3d:	lea    ecx,[ebp-0x60]
10062b40:	jmp    0x10007f41
10062b45:	lea    esi,[ebp-0xec]
10062b4b:	jmp    0x100033ac
10062b50:	lea    ecx,[ebp-0x44]
10062b53:	jmp    0x10007f41
10062b58:	mov    edx,DWORD PTR [esp+0x8]
10062b5c:	lea    eax,[edx+0xc]
10062b5f:	mov    ecx,DWORD PTR [edx-0x114]
10062b65:	xor    ecx,eax
10062b67:	call   0x10042e97
10062b6c:	mov    ecx,DWORD PTR [edx-0x4]
10062b6f:	xor    ecx,eax
10062b71:	call   0x10042e97
10062b76:	mov    eax,0x10079744
10062b7b:	jmp    0x100591d1
10062b80:	lea    ecx,[ebp-0x44]
10062b83:	jmp    0x10007f41
10062b88:	lea    ecx,[ebp-0x28]
10062b8b:	jmp    0x10007f41
10062b90:	mov    edx,DWORD PTR [esp+0x8]
10062b94:	lea    eax,[edx+0xc]
10062b97:	mov    ecx,DWORD PTR [edx-0x48]
10062b9a:	xor    ecx,eax
10062b9c:	call   0x10042e97
10062ba1:	mov    eax,0x10079778
10062ba6:	jmp    0x100591d1
10062bab:	mov    edx,DWORD PTR [esp+0x8]
10062baf:	lea    eax,[edx+0xc]
10062bb2:	mov    ecx,DWORD PTR [edx-0x1c]
10062bb5:	xor    ecx,eax
10062bb7:	call   0x10042e97
10062bbc:	mov    eax,0x100797d0
10062bc1:	jmp    0x100591d1
10062bc6:	lea    eax,[ebp-0x58]
10062bc9:	jmp    0x100231e9
10062bce:	lea    edi,[ebp-0x5c]
10062bd1:	jmp    0x1000250a
10062bd6:	lea    ecx,[ebp-0x30]
10062bd9:	jmp    0x10007f41
10062bde:	lea    ecx,[ebp-0x50]
10062be1:	jmp    0x10001f38
10062be6:	lea    edi,[ebp-0x54]
10062be9:	jmp    0x1000250a
10062bee:	lea    ecx,[ebp-0x98]
10062bf4:	jmp    0x10007f41
10062bf9:	lea    edi,[ebp-0x54]
10062bfc:	jmp    0x1000250a
10062c01:	mov    edx,DWORD PTR [esp+0x8]
10062c05:	lea    eax,[edx+0xc]
10062c08:	mov    ecx,DWORD PTR [edx-0x9c]
10062c0e:	xor    ecx,eax
10062c10:	call   0x10042e97
10062c15:	mov    ecx,DWORD PTR [edx-0x8]
10062c18:	xor    ecx,eax
10062c1a:	call   0x10042e97
10062c1f:	mov    eax,0x1007986c
10062c24:	jmp    0x100591d1
10062c29:	lea    esi,[ebp-0x24]
10062c2c:	jmp    0x1000cdca
10062c31:	lea    ecx,[ebp-0x40]
10062c34:	jmp    0x10007f41
10062c39:	mov    edx,DWORD PTR [esp+0x8]
10062c3d:	lea    eax,[edx+0xc]
10062c40:	mov    ecx,DWORD PTR [edx-0x44]
10062c43:	xor    ecx,eax
10062c45:	call   0x10042e97
10062c4a:	mov    eax,0x100798a0
10062c4f:	jmp    0x100591d1
10062c54:	lea    eax,[ebp-0x18]
10062c57:	jmp    0x10011e27
10062c5c:	mov    edx,DWORD PTR [esp+0x8]
10062c60:	lea    eax,[edx+0xc]
10062c63:	mov    ecx,DWORD PTR [edx-0x24]
10062c66:	xor    ecx,eax
10062c68:	call   0x10042e97
10062c6d:	mov    eax,0x100798cc
10062c72:	jmp    0x100591d1
10062c77:	lea    esi,[ebp-0x28]
10062c7a:	jmp    0x100045e4
10062c7f:	mov    edx,DWORD PTR [esp+0x8]
10062c83:	lea    eax,[edx+0xc]
10062c86:	mov    ecx,DWORD PTR [edx-0x2c]
10062c89:	xor    ecx,eax
10062c8b:	call   0x10042e97
10062c90:	mov    eax,0x10079934
10062c95:	jmp    0x100591d1
10062c9a:	lea    esi,[ebp-0x24]
10062c9d:	jmp    0x100045e4
10062ca2:	mov    edx,DWORD PTR [esp+0x8]
10062ca6:	lea    eax,[edx+0xc]
10062ca9:	mov    ecx,DWORD PTR [edx-0x28]
10062cac:	xor    ecx,eax
10062cae:	call   0x10042e97
10062cb3:	mov    eax,0x100799c8
10062cb8:	jmp    0x100591d1
10062cbd:	mov    eax,DWORD PTR [ebp-0x10]
10062cc0:	and    eax,0x1
10062cc3:	je     0x10062cd5
10062cc9:	and    DWORD PTR [ebp-0x10],0xfffffffe
10062ccd:	mov    esi,DWORD PTR [ebp+0x8]
10062cd0:	jmp    0x1000c938
10062cd5:	ret    
10062cd6:	lea    ecx,[ebp-0x40]
10062cd9:	jmp    0x10007f41
10062cde:	lea    esi,[ebp-0x24]
10062ce1:	jmp    0x100045e4
10062ce6:	mov    edx,DWORD PTR [esp+0x8]
10062cea:	lea    eax,[edx+0xc]
10062ced:	mov    ecx,DWORD PTR [edx-0x44]
10062cf0:	xor    ecx,eax
10062cf2:	call   0x10042e97
10062cf7:	mov    eax,0x10079a04
10062cfc:	jmp    0x100591d1
10062d01:	lea    edi,[ebp+0xc]
10062d04:	jmp    0x1000250a
10062d09:	lea    edi,[ebp+0x8]
10062d0c:	jmp    0x1000250a
10062d11:	lea    ecx,[ebp-0x44]
10062d14:	jmp    0x10007f41
10062d19:	lea    ecx,[ebp-0x28]
10062d1c:	jmp    0x10007f41
10062d21:	mov    edx,DWORD PTR [esp+0x8]
10062d25:	lea    eax,[edx+0xc]
10062d28:	mov    ecx,DWORD PTR [edx-0x48]
10062d2b:	xor    ecx,eax
10062d2d:	call   0x10042e97
10062d32:	mov    eax,0x10079a48
10062d37:	jmp    0x100591d1
10062d3c:	lea    ecx,[ebp-0x180]
10062d42:	jmp    0x10007f41
10062d47:	lea    esi,[ebp-0xc0]
10062d4d:	jmp    0x1000bbfd
10062d52:	lea    ecx,[ebp-0x180]
10062d58:	jmp    0x10007f41
10062d5d:	lea    ecx,[ebp-0x180]
10062d63:	jmp    0x10007f41
10062d68:	lea    ecx,[ebp-0x180]
10062d6e:	jmp    0x10007f41
10062d73:	lea    ecx,[ebp-0x180]
10062d79:	jmp    0x10007f41
10062d7e:	lea    esi,[ebp-0x158]
10062d84:	jmp    0x1000bc65
10062d89:	lea    ecx,[ebp-0x2c]
10062d8c:	jmp    0x10007f41
10062d91:	lea    ecx,[ebp-0x180]
10062d97:	jmp    0x10007f41
10062d9c:	lea    ecx,[ebp-0x1b8]
10062da2:	jmp    0x10007f41
10062da7:	lea    ecx,[ebp-0x1f0]
10062dad:	jmp    0x10007f41
10062db2:	lea    ecx,[ebp-0x20c]
10062db8:	jmp    0x10007f41
10062dbd:	lea    ecx,[ebp-0x1d4]
10062dc3:	jmp    0x10007f41
10062dc8:	lea    ecx,[ebp-0x19c]
10062dce:	jmp    0x10007f41
10062dd3:	lea    ecx,[ebp-0x180]
10062dd9:	jmp    0x10007f41
10062dde:	lea    ecx,[ebp-0x180]
10062de4:	jmp    0x10007f41
10062de9:	lea    ecx,[ebp-0x180]
10062def:	jmp    0x10007f41
10062df4:	lea    ecx,[ebp-0x2c]
10062df7:	jmp    0x10007f41
10062dfc:	lea    ecx,[ebp-0x19c]
10062e02:	jmp    0x10007f41
10062e07:	lea    ecx,[ebp-0x19c]
10062e0d:	jmp    0x10007f41
10062e12:	lea    ecx,[ebp-0x1b8]
10062e18:	jmp    0x10007f41
10062e1d:	mov    edx,DWORD PTR [esp+0x8]
10062e21:	lea    eax,[edx+0xc]
10062e24:	mov    ecx,DWORD PTR [edx-0x210]
10062e2a:	xor    ecx,eax
10062e2c:	call   0x10042e97
10062e31:	mov    ecx,DWORD PTR [edx-0x4]
10062e34:	xor    ecx,eax
10062e36:	call   0x10042e97
10062e3b:	mov    eax,0x10079b20
10062e40:	jmp    0x100591d1
10062e45:	mov    eax,DWORD PTR [ebp-0x14]
10062e48:	and    eax,0x1
10062e4b:	je     0x10062e5d
10062e51:	and    DWORD PTR [ebp-0x14],0xfffffffe
10062e55:	lea    ecx,[ebp-0x30]
10062e58:	jmp    0x10007f41
10062e5d:	ret    
10062e5e:	mov    eax,DWORD PTR [ebp-0x14]
10062e61:	and    eax,0x2
10062e64:	je     0x10062e76
10062e6a:	and    DWORD PTR [ebp-0x14],0xfffffffd
10062e6e:	lea    ecx,[ebp-0x30]
10062e71:	jmp    0x10007f41
10062e76:	ret    
10062e77:	mov    eax,DWORD PTR [ebp-0x14]
10062e7a:	and    eax,0x4
10062e7d:	je     0x10062e8f
10062e83:	and    DWORD PTR [ebp-0x14],0xfffffffb
10062e87:	lea    ecx,[ebp-0x30]
10062e8a:	jmp    0x10007f41
10062e8f:	ret    
10062e90:	mov    eax,DWORD PTR [ebp-0x14]
10062e93:	and    eax,0x8
10062e96:	je     0x10062ea8
10062e9c:	and    DWORD PTR [ebp-0x14],0xfffffff7
10062ea0:	lea    ecx,[ebp-0x4c]
10062ea3:	jmp    0x10007f41
10062ea8:	ret    
10062ea9:	mov    edx,DWORD PTR [esp+0x8]
10062ead:	lea    eax,[edx+0xc]
10062eb0:	mov    ecx,DWORD PTR [edx-0x50]
10062eb3:	xor    ecx,eax
10062eb5:	call   0x10042e97
10062eba:	mov    eax,0x10079b64
10062ebf:	jmp    0x100591d1
10062ec4:	mov    eax,DWORD PTR [ebp-0x14]
10062ec7:	and    eax,0x1
10062eca:	je     0x10062edc
10062ed0:	and    DWORD PTR [ebp-0x14],0xfffffffe
10062ed4:	lea    ecx,[ebp-0x30]
10062ed7:	jmp    0x10007f41
10062edc:	ret    
10062edd:	mov    eax,DWORD PTR [ebp-0x14]
10062ee0:	and    eax,0x2
10062ee3:	je     0x10062ef5
10062ee9:	and    DWORD PTR [ebp-0x14],0xfffffffd
10062eed:	lea    ecx,[ebp-0x30]
10062ef0:	jmp    0x10007f41
10062ef5:	ret    
10062ef6:	mov    eax,DWORD PTR [ebp-0x14]
10062ef9:	and    eax,0x4
10062efc:	je     0x10062f0e
10062f02:	and    DWORD PTR [ebp-0x14],0xfffffffb
10062f06:	lea    ecx,[ebp-0x4c]
10062f09:	jmp    0x10007f41
10062f0e:	ret    
10062f0f:	mov    edx,DWORD PTR [esp+0x8]
10062f13:	lea    eax,[edx+0xc]
10062f16:	mov    ecx,DWORD PTR [edx-0x54]
10062f19:	xor    ecx,eax
10062f1b:	call   0x10042e97
10062f20:	mov    eax,0x10079ba0
10062f25:	jmp    0x100591d1
10062f2a:	lea    eax,[ebp-0x48]
10062f2d:	push   eax
10062f2e:	call   0x10006d10
10062f33:	ret    
10062f34:	lea    ecx,[ebp-0x80]
10062f37:	jmp    0x10007f41
10062f3c:	lea    ecx,[ebp-0x30]
10062f3f:	jmp    0x10001f38
10062f44:	mov    edx,DWORD PTR [esp+0x8]
10062f48:	lea    eax,[edx+0xc]
10062f4b:	mov    ecx,DWORD PTR [edx-0x84]
10062f51:	xor    ecx,eax
10062f53:	call   0x10042e97
10062f58:	mov    ecx,DWORD PTR [edx-0x4]
10062f5b:	xor    ecx,eax
10062f5d:	call   0x10042e97
10062f62:	mov    eax,0x10079be4
10062f67:	jmp    0x100591d1
10062f6c:	lea    eax,[ebp-0x14]
10062f6f:	jmp    0x1000216c
10062f74:	lea    eax,[ebp-0x18]
10062f77:	jmp    0x1000216c
10062f7c:	lea    eax,[ebp-0x1c]
10062f7f:	jmp    0x1000216c
10062f84:	lea    eax,[ebp-0x1c]
10062f87:	jmp    0x10034d30
10062f8c:	mov    edx,DWORD PTR [esp+0x8]
10062f90:	lea    eax,[edx-0x1c]
10062f93:	mov    ecx,DWORD PTR [edx-0x20]
10062f96:	xor    ecx,eax
10062f98:	call   0x10042e97
10062f9d:	mov    eax,0x10079c28
10062fa2:	jmp    0x100591d1
10062fa7:	lea    eax,[ebp-0x78]
10062faa:	jmp    0x1000216c
10062faf:	lea    eax,[ebp-0x6c]
10062fb2:	jmp    0x1000216c
10062fb7:	lea    eax,[ebp-0x70]
10062fba:	jmp    0x1000216c
10062fbf:	lea    eax,[ebp-0x74]
10062fc2:	jmp    0x10034d30
10062fc7:	mov    edx,DWORD PTR [esp+0x8]
10062fcb:	lea    eax,[edx-0x7c]
10062fce:	mov    ecx,DWORD PTR [edx-0x80]
10062fd1:	xor    ecx,eax
10062fd3:	call   0x10042e97
10062fd8:	mov    eax,0x10079c6c
10062fdd:	jmp    0x100591d1
10062fe2:	lea    eax,[ebp-0x18]
10062fe5:	jmp    0x1000216c
10062fea:	lea    eax,[ebp-0x14]
10062fed:	jmp    0x1000216c
10062ff2:	lea    eax,[ebp-0x10]
10062ff5:	jmp    0x1000216c
10062ffa:	lea    eax,[ebp-0x10]
10062ffd:	jmp    0x10034d30
10063002:	mov    edx,DWORD PTR [esp+0x8]
10063006:	lea    eax,[edx+0xc]
10063009:	mov    ecx,DWORD PTR [edx-0x1c]
1006300c:	xor    ecx,eax
1006300e:	call   0x10042e97
10063013:	mov    eax,0x10079cb0
10063018:	jmp    0x100591d1
1006301d:	lea    ecx,[ebp-0x2c]
10063020:	jmp    0x10007f41
10063025:	push   DWORD PTR [ebp-0x30]
10063028:	call   0x10042e92
1006302d:	pop    ecx
1006302e:	ret    
1006302f:	lea    eax,[ebp-0x48]
10063032:	jmp    0x1000461e
10063037:	lea    ecx,[ebp-0x64]
1006303a:	jmp    0x10007f41
1006303f:	mov    edx,DWORD PTR [esp+0x8]
10063043:	lea    eax,[edx+0xc]
10063046:	mov    ecx,DWORD PTR [edx-0x68]
10063049:	xor    ecx,eax
1006304b:	call   0x10042e97
10063050:	mov    ecx,DWORD PTR [edx-0x4]
10063053:	xor    ecx,eax
10063055:	call   0x10042e97
1006305a:	mov    eax,0x10079cf4
1006305f:	jmp    0x100591d1
10063064:	lea    ecx,[ebp-0x3c]
10063067:	jmp    0x10037940
1006306c:	lea    eax,[ebp-0x30]
1006306f:	jmp    0x10011e27
10063074:	mov    edx,DWORD PTR [esp+0x8]
10063078:	lea    eax,[edx+0xc]
1006307b:	mov    ecx,DWORD PTR [edx-0x40]
1006307e:	xor    ecx,eax
10063080:	call   0x10042e97
10063085:	mov    ecx,DWORD PTR [edx-0x4]
10063088:	xor    ecx,eax
1006308a:	call   0x10042e97
1006308f:	mov    eax,0x10079d28
10063094:	jmp    0x100591d1
10063099:	lea    ecx,[ebp-0x3c]
1006309c:	jmp    0x10037940
100630a1:	lea    ecx,[ebp-0x2c]
100630a4:	jmp    0x10007f41
100630a9:	lea    ecx,[ebp-0x58]
100630ac:	jmp    0x10007f41
100630b1:	lea    ecx,[ebp-0x58]
100630b4:	jmp    0x10007f41
100630b9:	lea    eax,[ebp-0x30]
100630bc:	jmp    0x10011e27
100630c1:	mov    edx,DWORD PTR [esp+0x8]
100630c5:	lea    eax,[edx+0xc]
100630c8:	mov    ecx,DWORD PTR [edx-0x60]
100630cb:	xor    ecx,eax
100630cd:	call   0x10042e97
100630d2:	mov    ecx,DWORD PTR [edx-0x4]
100630d5:	xor    ecx,eax
100630d7:	call   0x10042e97
100630dc:	mov    eax,0x10079d74
100630e1:	jmp    0x100591d1
100630e6:	lea    ecx,[ebp-0xc0]
100630ec:	jmp    0x10007f41
100630f1:	lea    ecx,[ebp-0x30]
100630f4:	jmp    0x10007f41
100630f9:	lea    ecx,[ebp-0x4c]
100630fc:	jmp    0x10007f41
10063101:	lea    ecx,[ebp-0x68]
10063104:	jmp    0x10007f41
10063109:	lea    ecx,[ebp-0x84]
1006310f:	jmp    0x10007f41
10063114:	lea    ecx,[ebp-0xc0]
1006311a:	jmp    0x10007f41
1006311f:	lea    ecx,[ebp-0xc0]
10063125:	jmp    0x10007f41
1006312a:	lea    esi,[ebp-0x14c]
10063130:	jmp    0x100033ac
10063135:	mov    edx,DWORD PTR [esp+0x8]
10063139:	lea    eax,[edx+0xc]
1006313c:	mov    ecx,DWORD PTR [edx-0x150]
10063142:	xor    ecx,eax
10063144:	call   0x10042e97
10063149:	mov    ecx,DWORD PTR [edx-0x4]
1006314c:	xor    ecx,eax
1006314e:	call   0x10042e97
10063153:	mov    eax,0x10079de0
10063158:	jmp    0x100591d1
1006315d:	lea    ecx,[ebp-0x34]
10063160:	jmp    0x10001f38
10063165:	mov    edx,DWORD PTR [esp+0x8]
10063169:	lea    eax,[edx+0xc]
1006316c:	mov    ecx,DWORD PTR [edx-0x38]
1006316f:	xor    ecx,eax
10063171:	call   0x10042e97
10063176:	mov    ecx,DWORD PTR [edx-0x4]
10063179:	xor    ecx,eax
1006317b:	call   0x10042e97
10063180:	mov    eax,0x10079e0c
10063185:	jmp    0x100591d1
1006318a:	int3   
1006318b:	int3   
1006318c:	int3   
1006318d:	int3   
1006318e:	int3   
1006318f:	int3   
10063190:	lea    eax,[ebp-0x2c]
10063193:	jmp    0x10011e27
10063198:	lea    eax,[ebp-0x28]
1006319b:	jmp    0x10011e27
100631a0:	mov    edx,DWORD PTR [esp+0x8]
100631a4:	lea    eax,[edx-0x40]
100631a7:	mov    ecx,DWORD PTR [edx-0x44]
100631aa:	xor    ecx,eax
100631ac:	call   0x10042e97
100631b1:	add    eax,0x10
100631b4:	mov    ecx,DWORD PTR [edx-0x8]
100631b7:	xor    ecx,eax
100631b9:	call   0x10042e97
100631be:	mov    eax,0x10079e40
100631c3:	jmp    0x100591d1
100631c8:	int3   
100631c9:	int3   
100631ca:	int3   
100631cb:	int3   
100631cc:	int3   
100631cd:	int3   
100631ce:	int3   
100631cf:	int3   
100631d0:	lea    ecx,[ebp-0x40]
100631d3:	jmp    0x10037940
100631d8:	mov    edx,DWORD PTR [esp+0x8]
100631dc:	lea    eax,[edx-0x3c]
100631df:	mov    ecx,DWORD PTR [edx-0x40]
100631e2:	xor    ecx,eax
100631e4:	call   0x10042e97
100631e9:	mov    eax,0x10079e6c
100631ee:	jmp    0x100591d1
100631f3:	int3   
100631f4:	int3   
100631f5:	int3   
100631f6:	int3   
100631f7:	int3   
100631f8:	int3   
100631f9:	int3   
100631fa:	int3   
100631fb:	int3   
100631fc:	int3   
100631fd:	int3   
100631fe:	int3   
100631ff:	int3   
10063200:	lea    eax,[ebp-0x7c]
10063203:	jmp    0x1000216c
10063208:	lea    ecx,[ebp-0xa8]
1006320e:	jmp    0x10007f41
10063213:	lea    ecx,[ebp-0x140]
10063219:	jmp    0x10007f41
1006321e:	lea    ecx,[ebp-0x124]
10063224:	jmp    0x10007f41
10063229:	lea    ecx,[ebp-0x108]
1006322f:	jmp    0x10007f41
10063234:	lea    ecx,[ebp-0xec]
1006323a:	jmp    0x10007f41
1006323f:	lea    ecx,[ebp-0xd0]
10063245:	jmp    0x10042fd0
1006324a:	mov    edx,DWORD PTR [esp+0x8]
1006324e:	lea    eax,[edx+0xc]
10063251:	mov    ecx,DWORD PTR [edx-0x144]
10063257:	xor    ecx,eax
10063259:	call   0x10042e97
1006325e:	mov    ecx,DWORD PTR [edx-0x4]
10063261:	xor    ecx,eax
10063263:	call   0x10042e97
10063268:	mov    eax,0x10079ec8
1006326d:	jmp    0x100591d1
10063272:	int3   
10063273:	int3   
10063274:	int3   
10063275:	int3   
10063276:	int3   
10063277:	int3   
10063278:	int3   
10063279:	int3   
1006327a:	int3   
1006327b:	int3   
1006327c:	int3   
1006327d:	int3   
1006327e:	int3   
1006327f:	int3   
10063280:	lea    eax,[ebp+0x4]
10063283:	jmp    0x1000216c
10063288:	lea    eax,[ebp+0x4]
1006328b:	jmp    0x1000216c
10063290:	mov    edx,DWORD PTR [esp+0x8]
10063294:	lea    eax,[edx-0x8]
10063297:	mov    ecx,DWORD PTR [edx-0xc]
1006329a:	xor    ecx,eax
1006329c:	call   0x10042e97
100632a1:	mov    eax,0x10079efc
100632a6:	jmp    0x100591d1
100632ab:	lea    ecx,[ebp-0x58]
100632ae:	jmp    0x10007f41
100632b3:	lea    ecx,[ebp+0x54]
100632b6:	jmp    0x10007f41
100632bb:	lea    ecx,[ebp+0x1c]
100632be:	jmp    0x10007f41
100632c3:	lea    eax,[ebp-0x3c]
100632c6:	jmp    0x10011e27
100632cb:	lea    eax,[ebp-0x1c]
100632ce:	jmp    0x10011e27
100632d3:	lea    ecx,[ebp+0x38]
100632d6:	jmp    0x10007f41
100632db:	lea    ecx,[ebp+0x0]
100632de:	jmp    0x10007f41
100632e3:	lea    ecx,[ebp-0x74]
100632e6:	jmp    0x10007f41
100632eb:	mov    edx,DWORD PTR [esp+0x8]
100632ef:	lea    eax,[edx+0xc]
100632f2:	mov    ecx,DWORD PTR [edx-0x78]
100632f5:	xor    ecx,eax
100632f7:	call   0x10042e97
100632fc:	mov    ecx,DWORD PTR [edx+0x7c]
100632ff:	xor    ecx,eax
10063301:	call   0x10042e97
10063306:	mov    eax,0x10079f9c
1006330b:	jmp    0x100591d1
10063310:	lea    ecx,[ebp-0x50]
10063313:	jmp    0x10007f41
10063318:	lea    ecx,[ebp-0x88]
1006331e:	jmp    0x10007f41
10063323:	lea    ecx,[ebp-0x6c]
10063326:	jmp    0x10007f41
1006332b:	lea    ecx,[ebp-0x34]
1006332e:	jmp    0x10001f38
10063333:	lea    ecx,[ebp-0x50]
10063336:	jmp    0x10007f41
1006333b:	lea    ecx,[ebp-0xfc]
10063341:	jmp    0x10007f41
10063346:	lea    ecx,[ebp-0xfc]
1006334c:	jmp    0x10007f41
10063351:	push   DWORD PTR [ebp-0x110]
10063357:	call   0x10042e92
1006335c:	pop    ecx
1006335d:	ret    
1006335e:	lea    eax,[ebp-0xe0]
10063364:	jmp    0x1000461e
10063369:	lea    ecx,[ebp-0xfc]
1006336f:	jmp    0x10007f41
10063374:	lea    ecx,[ebp-0xdc]
1006337a:	jmp    0x10007f41
1006337f:	lea    ecx,[ebp-0xc0]
10063385:	jmp    0x10007f41
1006338a:	lea    ecx,[ebp-0xa4]
10063390:	jmp    0x10007f41
10063395:	lea    ecx,[ebp-0x50]
10063398:	jmp    0x10007f41
1006339d:	lea    ecx,[ebp-0xdc]
100633a3:	jmp    0x10007f41
100633a8:	mov    edx,DWORD PTR [esp+0x8]
100633ac:	lea    eax,[edx-0x114]
100633b2:	mov    ecx,DWORD PTR [edx-0x118]
100633b8:	xor    ecx,eax
100633ba:	call   0x10042e97
100633bf:	add    eax,0xc
100633c2:	mov    ecx,DWORD PTR [edx-0x8]
100633c5:	xor    ecx,eax
100633c7:	call   0x10042e97
100633cc:	mov    eax,0x1007a040
100633d1:	jmp    0x100591d1
100633d6:	lea    ecx,[ebp-0xc0]
100633dc:	jmp    0x10007f41
100633e1:	lea    ecx,[ebp-0x34]
100633e4:	jmp    0x10001f38
100633e9:	lea    ecx,[ebp-0x114]
100633ef:	jmp    0x10007f41
100633f4:	lea    ecx,[ebp-0xf8]
100633fa:	jmp    0x10007f41
100633ff:	lea    ecx,[ebp-0xdc]
10063405:	jmp    0x10007f41
1006340a:	lea    ecx,[ebp-0x50]
1006340d:	jmp    0x10007f41
10063412:	lea    ecx,[ebp-0x6c]
10063415:	jmp    0x10007f41
1006341a:	mov    edx,DWORD PTR [esp+0x8]
1006341e:	lea    eax,[edx-0x11c]
10063424:	mov    ecx,DWORD PTR [edx-0x120]
1006342a:	xor    ecx,eax
1006342c:	call   0x10042e97
10063431:	add    eax,0xc
10063434:	mov    ecx,DWORD PTR [edx-0x8]
10063437:	xor    ecx,eax
10063439:	call   0x10042e97
1006343e:	mov    eax,0x1007a0a8
10063443:	jmp    0x100591d1
10063448:	lea    ecx,[ebp-0x2c]
1006344b:	jmp    0x10007f41
10063450:	mov    edx,DWORD PTR [esp+0x8]
10063454:	lea    eax,[edx-0x24]
10063457:	mov    ecx,DWORD PTR [edx-0x28]
1006345a:	xor    ecx,eax
1006345c:	call   0x10042e97
10063461:	mov    eax,0x1007a0d4
10063466:	jmp    0x100591d1
1006346b:	lea    ecx,[ebp-0x30]
1006346e:	jmp    0x10007f41
10063473:	mov    edx,DWORD PTR [esp+0x8]
10063477:	lea    eax,[edx-0x34]
1006347a:	mov    ecx,DWORD PTR [edx-0x38]
1006347d:	xor    ecx,eax
1006347f:	call   0x10042e97
10063484:	add    eax,0x8
10063487:	mov    ecx,DWORD PTR [edx-0x8]
1006348a:	xor    ecx,eax
1006348c:	call   0x10042e97
10063491:	mov    eax,0x1007a100
10063496:	jmp    0x100591d1
1006349b:	lea    ecx,[ebp-0x4c]
1006349e:	jmp    0x10007f41
100634a3:	lea    ecx,[ebp-0x30]
100634a6:	jmp    0x10007f41
100634ab:	lea    ecx,[ebp-0x68]
100634ae:	jmp    0x10007f41
100634b3:	mov    edx,DWORD PTR [esp+0x8]
100634b7:	lea    eax,[edx-0x6c]
100634ba:	mov    ecx,DWORD PTR [edx-0x70]
100634bd:	xor    ecx,eax
100634bf:	call   0x10042e97
100634c4:	add    eax,0xc
100634c7:	mov    ecx,DWORD PTR [edx-0x8]
100634ca:	xor    ecx,eax
100634cc:	call   0x10042e97
100634d1:	mov    eax,0x1007a144
100634d6:	jmp    0x100591d1
100634db:	jmp    0x10037970
100634e0:	mov    edx,DWORD PTR [esp+0x8]
100634e4:	lea    eax,[edx+0xc]
100634e7:	mov    ecx,DWORD PTR [edx-0x10]
100634ea:	xor    ecx,eax
100634ec:	call   0x10042e97
100634f1:	mov    eax,0x1007a170
100634f6:	jmp    0x100591d1
100634fb:	lea    ecx,[ebp-0x30]
100634fe:	jmp    0x10007f41
10063503:	mov    edx,DWORD PTR [esp+0x8]
10063507:	lea    eax,[edx+0xc]
1006350a:	mov    ecx,DWORD PTR [edx-0x5c]
1006350d:	xor    ecx,eax
1006350f:	call   0x10042e97
10063514:	mov    eax,0x1007a1d0
10063519:	jmp    0x100591d1
1006351e:	lea    eax,[ebp+0x8]
10063521:	jmp    0x1001aec2
10063526:	mov    eax,DWORD PTR [ebp-0xac]
1006352c:	and    eax,0x1
1006352f:	je     0x10063547
10063535:	and    DWORD PTR [ebp-0xac],0xfffffffe
1006353c:	mov    ecx,DWORD PTR [ebp-0xa4]
10063542:	jmp    0x10007f41
10063547:	ret    
10063548:	lea    ecx,[ebp-0x94]
1006354e:	jmp    0x10007f41
10063553:	lea    ecx,[ebp-0xd0]
10063559:	jmp    0x10007f41
1006355e:	lea    ecx,[ebp-0xd0]
10063564:	jmp    0x10007f41
10063569:	lea    ecx,[ebp-0xd0]
1006356f:	jmp    0x10007f41
10063574:	mov    edx,DWORD PTR [esp+0x8]
10063578:	lea    eax,[edx+0xc]
1006357b:	mov    ecx,DWORD PTR [edx-0xd4]
10063581:	xor    ecx,eax
10063583:	call   0x10042e97
10063588:	mov    ecx,DWORD PTR [edx-0x4]
1006358b:	xor    ecx,eax
1006358d:	call   0x10042e97
10063592:	mov    eax,0x1007a224
10063597:	jmp    0x100591d1
1006359c:	lea    ecx,[ebp-0x1034]
100635a2:	jmp    0x10007f41
100635a7:	lea    esi,[ebp-0x1050]
100635ad:	jmp    0x1000c938
100635b2:	lea    esi,[ebp-0x1064]
100635b8:	jmp    0x1000c938
100635bd:	mov    edx,DWORD PTR [esp+0x8]
100635c1:	lea    eax,[edx+0xc]
100635c4:	mov    ecx,DWORD PTR [edx-0x106c]
100635ca:	xor    ecx,eax
100635cc:	call   0x10042e97
100635d1:	mov    ecx,DWORD PTR [edx-0x8]
100635d4:	xor    ecx,eax
100635d6:	call   0x10042e97
100635db:	mov    eax,0x1007a2c8
100635e0:	jmp    0x100591d1
100635e5:	lea    ecx,[ebp-0x84]
100635eb:	jmp    0x10007f41
100635f0:	lea    ecx,[ebp-0x30]
100635f3:	jmp    0x10007f41
100635f8:	lea    ecx,[ebp-0x68]
100635fb:	jmp    0x10007f41
10063600:	lea    ecx,[ebp-0x4c]
10063603:	jmp    0x10007f41
10063608:	mov    edx,DWORD PTR [esp+0x8]
1006360c:	lea    eax,[edx-0x8c]
10063612:	mov    ecx,DWORD PTR [edx-0x90]
10063618:	xor    ecx,eax
1006361a:	call   0x10042e97
1006361f:	add    eax,0x8
10063622:	mov    ecx,DWORD PTR [edx-0x8]
10063625:	xor    ecx,eax
10063627:	call   0x10042e97
1006362c:	mov    eax,0x1007a314
10063631:	jmp    0x100591d1
10063636:	mov    eax,DWORD PTR [ebp+0x8]
10063639:	jmp    0x10009be6
1006363e:	mov    eax,DWORD PTR [ebp+0x8]
10063641:	add    eax,0x4
10063644:	jmp    0x10009be6
10063649:	mov    eax,DWORD PTR [ebp+0x8]
1006364c:	add    eax,0x8
1006364f:	jmp    0x10009be6
10063654:	mov    ebx,DWORD PTR [ebp+0x8]
10063657:	add    ebx,0x18
1006365a:	jmp    0x10007a3d
1006365f:	mov    eax,DWORD PTR [ebp+0x8]
10063662:	add    eax,0x30
10063665:	jmp    0x10009c34
1006366a:	mov    edx,DWORD PTR [esp+0x8]
1006366e:	lea    eax,[edx+0xc]
10063671:	mov    ecx,DWORD PTR [edx-0x10]
10063674:	xor    ecx,eax
10063676:	call   0x10042e97
1006367b:	mov    eax,0x1007a360
10063680:	jmp    0x100591d1
10063685:	mov    eax,DWORD PTR [ebp+0x8]
10063688:	jmp    0x10009be6
1006368d:	mov    eax,DWORD PTR [ebp+0x8]
10063690:	add    eax,0x4
10063693:	jmp    0x10009be6
10063698:	mov    eax,DWORD PTR [ebp+0x8]
1006369b:	add    eax,0x8
1006369e:	jmp    0x10009be6
100636a3:	mov    eax,DWORD PTR [ebp+0x8]
100636a6:	add    eax,0xc
100636a9:	jmp    0x10009be6
100636ae:	mov    edx,DWORD PTR [esp+0x8]
100636b2:	lea    eax,[edx+0xc]
100636b5:	mov    ecx,DWORD PTR [edx-0x10]
100636b8:	xor    ecx,eax
100636ba:	call   0x10042e97
100636bf:	mov    eax,0x1007a3a4
100636c4:	jmp    0x100591d1
100636c9:	mov    eax,DWORD PTR [ebp+0x8]
100636cc:	jmp    0x10009be6
100636d1:	mov    eax,DWORD PTR [ebp+0x8]
100636d4:	add    eax,0x4
100636d7:	jmp    0x10009be6
100636dc:	mov    eax,DWORD PTR [ebp+0x8]
100636df:	add    eax,0x8
100636e2:	jmp    0x10009be6
100636e7:	mov    edx,DWORD PTR [esp+0x8]
100636eb:	lea    eax,[edx+0xc]
100636ee:	mov    ecx,DWORD PTR [edx-0x10]
100636f1:	xor    ecx,eax
100636f3:	call   0x10042e97
100636f8:	mov    eax,0x1007a3e0
100636fd:	jmp    0x100591d1
10063702:	lea    ecx,[ebp-0x34]
10063705:	jmp    0x100070b3
1006370a:	mov    edx,DWORD PTR [esp+0x8]
1006370e:	lea    eax,[edx+0xc]
10063711:	mov    ecx,DWORD PTR [edx-0x40]
10063714:	xor    ecx,eax
10063716:	call   0x10042e97
1006371b:	mov    ecx,DWORD PTR [edx-0x4]
1006371e:	xor    ecx,eax
10063720:	call   0x10042e97
10063725:	mov    eax,0x1007a40c
1006372a:	jmp    0x100591d1
1006372f:	lea    ecx,[ebp-0x30]
10063732:	jmp    0x10007f41
10063737:	mov    edx,DWORD PTR [esp+0x8]
1006373b:	lea    eax,[edx+0xc]
1006373e:	mov    ecx,DWORD PTR [edx-0x34]
10063741:	xor    ecx,eax
10063743:	call   0x10042e97
10063748:	mov    ecx,DWORD PTR [edx-0x8]
1006374b:	xor    ecx,eax
1006374d:	call   0x10042e97
10063752:	mov    eax,0x1007a46c
10063757:	jmp    0x100591d1
1006375c:	int3   
1006375d:	int3   
1006375e:	int3   
1006375f:	int3   
10063760:	lea    ecx,[ebp-0x2c]
10063763:	jmp    0x10007f41
10063768:	mov    eax,DWORD PTR [ebp-0x30]
1006376b:	jmp    0x1000216c
10063770:	mov    eax,DWORD PTR [ebp-0x34]
10063773:	and    eax,0x1
10063776:	je     0x10063788
1006377c:	and    DWORD PTR [ebp-0x34],0xfffffffe
10063780:	mov    eax,DWORD PTR [ebp-0x30]
10063783:	jmp    0x1000216c
10063788:	ret    
10063789:	mov    edx,DWORD PTR [esp+0x8]
1006378d:	lea    eax,[edx-0x34]
10063790:	mov    ecx,DWORD PTR [edx-0x38]
10063793:	xor    ecx,eax
10063795:	call   0x10042e97
1006379a:	add    eax,0xc
1006379d:	mov    ecx,DWORD PTR [edx-0x4]
100637a0:	xor    ecx,eax
100637a2:	call   0x10042e97
100637a7:	mov    eax,0x1007a4a8
100637ac:	jmp    0x100591d1
100637b1:	int3   
100637b2:	int3   
100637b3:	int3   
100637b4:	int3   
100637b5:	int3   
100637b6:	int3   
100637b7:	int3   
100637b8:	int3   
100637b9:	int3   
100637ba:	int3   
100637bb:	int3   
100637bc:	int3   
100637bd:	int3   
100637be:	int3   
100637bf:	int3   
100637c0:	lea    ecx,[ebp-0xa4]
100637c6:	jmp    0x10007f41
100637cb:	lea    ecx,[ebp-0x88]
100637d1:	jmp    0x10007f41
100637d6:	lea    eax,[ebp-0xb8]
100637dc:	jmp    0x10034d30
100637e1:	lea    ecx,[ebp-0x34]
100637e4:	jmp    0x10007f41
100637e9:	lea    ecx,[ebp-0x50]
100637ec:	jmp    0x10007f41
100637f1:	lea    ecx,[ebp-0x6c]
100637f4:	jmp    0x10007f41
100637f9:	lea    ecx,[ebp-0x50]
100637fc:	jmp    0x10007f41
10063801:	lea    ecx,[ebp-0x34]
10063804:	jmp    0x10007f41
10063809:	lea    ecx,[ebp-0xd8]
1006380f:	jmp    0x10007f41
10063814:	lea    ecx,[ebp-0x50]
10063817:	jmp    0x10007f41
1006381c:	lea    ecx,[ebp-0x34]
1006381f:	jmp    0x10007f41
10063824:	lea    ecx,[ebp-0xd8]
1006382a:	jmp    0x10007f41
1006382f:	lea    ecx,[ebp-0x34]
10063832:	jmp    0x10007f41
10063837:	lea    ecx,[ebp-0xd8]
1006383d:	jmp    0x10007f41
10063842:	lea    ecx,[ebp-0x50]
10063845:	jmp    0x10007f41
1006384a:	lea    ecx,[ebp-0x34]
1006384d:	jmp    0x10007f41
10063852:	lea    ecx,[ebp-0xd8]
10063858:	jmp    0x10007f41
1006385d:	lea    ecx,[ebp-0x34]
10063860:	jmp    0x10007f41
10063865:	lea    ecx,[ebp-0xd8]
1006386b:	jmp    0x10007f41
10063870:	lea    ecx,[ebp-0x34]
10063873:	jmp    0x10007f41
10063878:	mov    edx,DWORD PTR [esp+0x8]
1006387c:	lea    eax,[edx+0xc]
1006387f:	mov    ecx,DWORD PTR [edx-0xe0]
10063885:	xor    ecx,eax
10063887:	call   0x10042e97
1006388c:	mov    ecx,DWORD PTR [edx-0xc]
1006388f:	xor    ecx,eax
10063891:	call   0x10042e97
10063896:	mov    eax,0x1007a5a4
1006389b:	jmp    0x100591d1
100638a0:	lea    ecx,[ebp-0x74]
100638a3:	jmp    0x10007f41
100638a8:	lea    ecx,[ebp-0x48]
100638ab:	jmp    0x10007f41
100638b0:	lea    ecx,[ebp-0xc8]
100638b6:	jmp    0x10007f41
100638bb:	lea    ecx,[ebp-0x2c]
100638be:	jmp    0x10007f41
100638c3:	lea    ecx,[ebp-0xac]
100638c9:	jmp    0x10007f41
100638ce:	lea    ecx,[ebp-0x74]
100638d1:	jmp    0x10007f41
100638d6:	lea    ecx,[ebp-0x90]
100638dc:	jmp    0x10007f41
100638e1:	lea    ecx,[ebp-0x90]
100638e7:	jmp    0x10007f41
100638ec:	mov    edx,DWORD PTR [esp+0x8]
100638f0:	lea    eax,[edx+0xc]
100638f3:	mov    ecx,DWORD PTR [edx-0xcc]
100638f9:	xor    ecx,eax
100638fb:	call   0x10042e97
10063900:	mov    ecx,DWORD PTR [edx-0x4]
10063903:	xor    ecx,eax
10063905:	call   0x10042e97
1006390a:	mov    eax,0x1007a618
1006390f:	jmp    0x100591d1
10063914:	lea    eax,[ebp-0x10]
10063917:	jmp    0x10039e40
1006391c:	mov    edx,DWORD PTR [esp+0x8]
10063920:	lea    eax,[edx+0xc]
10063923:	mov    ecx,DWORD PTR [edx-0x14]
10063926:	xor    ecx,eax
10063928:	call   0x10042e97
1006392d:	mov    eax,0x1007a644
10063932:	jmp    0x100591d1
10063937:	lea    eax,[ebp-0x10]
1006393a:	jmp    0x10009c34
1006393f:	mov    edx,DWORD PTR [esp+0x8]
10063943:	lea    eax,[edx+0xc]
10063946:	mov    ecx,DWORD PTR [edx-0x14]
10063949:	xor    ecx,eax
1006394b:	call   0x10042e97
10063950:	mov    eax,0x1007a670
10063955:	jmp    0x100591d1
1006395a:	push   DWORD PTR [ebp-0x14]
1006395d:	call   0x10042e92
10063962:	pop    ecx
10063963:	ret    
10063964:	lea    eax,[ebp-0x14]
10063967:	jmp    0x10009e23
1006396c:	lea    eax,[ebp-0x10]
1006396f:	jmp    0x10009c34
10063974:	mov    edx,DWORD PTR [esp+0x8]
10063978:	lea    eax,[edx+0xc]
1006397b:	mov    ecx,DWORD PTR [edx-0x18]
1006397e:	xor    ecx,eax
10063980:	call   0x10042e97
10063985:	mov    eax,0x1007a6ac
1006398a:	jmp    0x100591d1
1006398f:	lea    eax,[ebp-0x80]
10063992:	jmp    0x100231e9
10063997:	lea    eax,[ebp+0x14]
1006399a:	jmp    0x100231e9
1006399f:	lea    ecx,[ebp-0x5c]
100639a2:	jmp    0x1001b3fd
100639a7:	lea    ecx,[ebp-0x3c]
100639aa:	jmp    0x1001b3fd
100639af:	lea    ecx,[ebp-0x6c]
100639b2:	jmp    0x1001b3fd
100639b7:	lea    ecx,[ebp-0x2c]
100639ba:	jmp    0x1001b3fd
100639bf:	lea    edi,[ebp+0x10]
100639c2:	jmp    0x1000250a
100639c7:	lea    ecx,[ebp-0x7c]
100639ca:	jmp    0x1001b3fd
100639cf:	lea    ecx,[ebp-0x4c]
100639d2:	jmp    0x1001b3fd
100639d7:	mov    edx,DWORD PTR [esp+0x8]
100639db:	lea    eax,[edx+0xc]
100639de:	mov    ecx,DWORD PTR [edx-0xe8]
100639e4:	xor    ecx,eax
100639e6:	call   0x10042e97
100639eb:	mov    eax,0x1007a754
100639f0:	jmp    0x100591d1
100639f5:	lea    eax,[ebp-0x40]
100639f8:	jmp    0x10034d30
100639fd:	lea    eax,[ebp-0x64]
10063a00:	jmp    0x10011e27
10063a05:	lea    eax,[ebp-0x5c]
10063a08:	jmp    0x10011e27
10063a0d:	lea    esi,[ebp-0x54]
10063a10:	jmp    0x100041bb
10063a15:	mov    edx,DWORD PTR [esp+0x8]
10063a19:	lea    eax,[edx+0xc]
10063a1c:	mov    ecx,DWORD PTR [edx-0x68]
10063a1f:	xor    ecx,eax
10063a21:	call   0x10042e97
10063a26:	mov    ecx,DWORD PTR [edx-0x8]
10063a29:	xor    ecx,eax
10063a2b:	call   0x10042e97
10063a30:	mov    eax,0x1007a7cc
10063a35:	jmp    0x100591d1
10063a3a:	lea    eax,[ebp-0x54]
10063a3d:	jmp    0x10011e27
10063a42:	lea    eax,[ebp-0x60]
10063a45:	jmp    0x10011e27
10063a4a:	lea    eax,[ebp-0x58]
10063a4d:	jmp    0x10034d30
10063a52:	lea    esi,[ebp-0x98]
10063a58:	jmp    0x100041bb
10063a5d:	lea    ecx,[ebp-0x50]
10063a60:	jmp    0x10007f41
10063a65:	lea    ecx,[ebp-0xb8]
10063a6b:	jmp    0x10007f41
10063a70:	lea    esi,[ebp-0x24]
10063a73:	jmp    0x100041bb
10063a78:	lea    eax,[ebp-0x80]
10063a7b:	jmp    0x1001805a
10063a80:	lea    ecx,[ebp-0x50]
10063a83:	jmp    0x10007f41
10063a88:	mov    edx,DWORD PTR [esp+0x8]
10063a8c:	lea    eax,[edx+0xc]
10063a8f:	mov    ecx,DWORD PTR [edx-0xbc]
10063a95:	xor    ecx,eax
10063a97:	call   0x10042e97
10063a9c:	mov    ecx,DWORD PTR [edx-0x8]
10063a9f:	xor    ecx,eax
10063aa1:	call   0x10042e97
10063aa6:	mov    eax,0x1007a86c
10063aab:	jmp    0x100591d1
10063ab0:	lea    esi,[ebp-0x20]
10063ab3:	jmp    0x100041bb
10063ab8:	mov    edx,DWORD PTR [esp+0x8]
10063abc:	lea    eax,[edx-0x1c]
10063abf:	mov    ecx,DWORD PTR [edx-0x20]
10063ac2:	xor    ecx,eax
10063ac4:	call   0x10042e97
10063ac9:	mov    eax,0x1007a898
10063ace:	jmp    0x100591d1
10063ad3:	lea    eax,[ebp-0x14]
10063ad6:	jmp    0x10011e27
10063adb:	mov    eax,DWORD PTR [ebp-0x48]
10063ade:	and    eax,0x1
10063ae1:	je     0x10063af3
10063ae7:	and    DWORD PTR [ebp-0x48],0xfffffffe
10063aeb:	mov    ecx,DWORD PTR [ebp-0x18]
10063aee:	jmp    0x10007f41
10063af3:	ret    
10063af4:	lea    eax,[ebp-0x1c]
10063af7:	jmp    0x10034d30
10063afc:	lea    ecx,[ebp-0x40]
10063aff:	jmp    0x10007f41
10063b04:	lea    esi,[ebp-0x34]
10063b07:	jmp    0x100041bb
10063b0c:	mov    edx,DWORD PTR [esp+0x8]
10063b10:	lea    eax,[edx+0xc]
10063b13:	mov    ecx,DWORD PTR [edx-0x4c]
10063b16:	xor    ecx,eax
10063b18:	call   0x10042e97
10063b1d:	mov    eax,0x1007a8f4
10063b22:	jmp    0x100591d1
10063b27:	lea    eax,[ebp-0x28]
10063b2a:	jmp    0x100231e9
10063b2f:	mov    edx,DWORD PTR [esp+0x8]
10063b33:	lea    eax,[edx-0x24]
10063b36:	mov    ecx,DWORD PTR [edx-0x28]
10063b39:	xor    ecx,eax
10063b3b:	call   0x10042e97
10063b40:	add    eax,0x4
10063b43:	mov    ecx,DWORD PTR [edx-0x8]
10063b46:	xor    ecx,eax
10063b48:	call   0x10042e97
10063b4d:	mov    eax,0x1007a920
10063b52:	jmp    0x100591d1
10063b57:	lea    eax,[ebp-0x18]
10063b5a:	jmp    0x10011e27
10063b5f:	mov    edx,DWORD PTR [esp+0x8]
10063b63:	lea    eax,[edx+0xc]
10063b66:	mov    ecx,DWORD PTR [edx-0x1c]
10063b69:	xor    ecx,eax
10063b6b:	call   0x10042e97
10063b70:	mov    eax,0x1007a94c
10063b75:	jmp    0x100591d1
10063b7a:	lea    ecx,[ebp-0x2c]
10063b7d:	jmp    0x10007f41
10063b82:	lea    ecx,[ebp-0x70]
10063b85:	jmp    0x10007f41
10063b8a:	mov    edx,DWORD PTR [esp+0x8]
10063b8e:	lea    eax,[edx+0xc]
10063b91:	mov    ecx,DWORD PTR [edx-0x90]
10063b97:	xor    ecx,eax
10063b99:	call   0x10042e97
10063b9e:	mov    ecx,DWORD PTR [edx-0x4]
10063ba1:	xor    ecx,eax
10063ba3:	call   0x10042e97
10063ba8:	mov    eax,0x1007a980
10063bad:	jmp    0x100591d1
10063bb2:	push   DWORD PTR [ebp-0x34]
10063bb5:	call   0x10042e92
10063bba:	pop    ecx
10063bbb:	ret    
10063bbc:	lea    eax,[ebp-0x34]
10063bbf:	jmp    0x10009e32
10063bc4:	lea    ecx,[ebp-0x2c]
10063bc7:	jmp    0x10007f41
10063bcc:	push   DWORD PTR [ebp-0x40]
10063bcf:	call   0x10042e92
10063bd4:	pop    ecx
10063bd5:	ret    
10063bd6:	push   DWORD PTR [ebp-0x40]
10063bd9:	call   0x10042e92
10063bde:	pop    ecx
10063bdf:	ret    
10063be0:	push   DWORD PTR [ebp-0x40]
10063be3:	call   0x10042e92
10063be8:	pop    ecx
10063be9:	ret    
10063bea:	push   DWORD PTR [ebp-0x40]
10063bed:	call   0x10042e92
10063bf2:	pop    ecx
10063bf3:	ret    
10063bf4:	lea    eax,[ebp-0x38]
10063bf7:	jmp    0x10009c34
10063bfc:	mov    edx,DWORD PTR [esp+0x8]
10063c00:	lea    eax,[edx+0xc]
10063c03:	mov    ecx,DWORD PTR [edx-0x4c]
10063c06:	xor    ecx,eax
10063c08:	call   0x10042e97
10063c0d:	mov    ecx,DWORD PTR [edx-0x4]
10063c10:	xor    ecx,eax
10063c12:	call   0x10042e97
10063c17:	mov    eax,0x1007aa10
10063c1c:	jmp    0x100591d1
10063c21:	push   DWORD PTR [ebp-0x30]
10063c24:	call   0x10042e92
10063c29:	pop    ecx
10063c2a:	ret    
10063c2b:	lea    eax,[ebp-0x40]
10063c2e:	jmp    0x10009e23
10063c33:	lea    ecx,[ebp-0x2c]
10063c36:	jmp    0x10007f41
10063c3b:	push   DWORD PTR [ebp-0x38]
10063c3e:	call   0x10042e92
10063c43:	pop    ecx
10063c44:	ret    
10063c45:	push   DWORD PTR [ebp-0x38]
10063c48:	call   0x10042e92
10063c4d:	pop    ecx
10063c4e:	ret    
10063c4f:	push   DWORD PTR [ebp-0x38]
10063c52:	call   0x10042e92
10063c57:	pop    ecx
10063c58:	ret    
10063c59:	push   DWORD PTR [ebp-0x38]
10063c5c:	call   0x10042e92
10063c61:	pop    ecx
10063c62:	ret    
10063c63:	lea    eax,[ebp-0x34]
10063c66:	jmp    0x10009c34
10063c6b:	mov    edx,DWORD PTR [esp+0x8]
10063c6f:	lea    eax,[edx+0xc]
10063c72:	mov    ecx,DWORD PTR [edx-0x44]
10063c75:	xor    ecx,eax
10063c77:	call   0x10042e97
10063c7c:	mov    ecx,DWORD PTR [edx-0x4]
10063c7f:	xor    ecx,eax
10063c81:	call   0x10042e97
10063c86:	mov    eax,0x1007aa78
10063c8b:	jmp    0x100591d1
10063c90:	push   DWORD PTR [ebp-0x10]
10063c93:	call   0x10042e92
10063c98:	pop    ecx
10063c99:	ret    
10063c9a:	lea    eax,[ebp-0x10]
10063c9d:	jmp    0x10009e32
10063ca2:	mov    edx,DWORD PTR [esp+0x8]
10063ca6:	lea    eax,[edx+0xc]
10063ca9:	mov    ecx,DWORD PTR [edx-0x18]
10063cac:	xor    ecx,eax
10063cae:	call   0x10042e97
10063cb3:	mov    eax,0x1007aaac
10063cb8:	jmp    0x100591d1
10063cbd:	push   DWORD PTR [ebp-0x10]
10063cc0:	call   0x10042e92
10063cc5:	pop    ecx
10063cc6:	ret    
10063cc7:	lea    eax,[ebp-0x14]
10063cca:	jmp    0x10009e23
10063ccf:	mov    edx,DWORD PTR [esp+0x8]
10063cd3:	lea    eax,[edx+0xc]
10063cd6:	mov    ecx,DWORD PTR [edx-0x18]
10063cd9:	xor    ecx,eax
10063cdb:	call   0x10042e97
10063ce0:	mov    eax,0x1007aae0
10063ce5:	jmp    0x100591d1
10063cea:	lea    ecx,[ebp-0x10]
10063ced:	jmp    0x100070b3
10063cf2:	mov    edx,DWORD PTR [esp+0x8]
10063cf6:	lea    eax,[edx+0xc]
10063cf9:	mov    ecx,DWORD PTR [edx-0x14]
10063cfc:	xor    ecx,eax
10063cfe:	call   0x10042e97
10063d03:	mov    eax,0x1007ab0c
10063d08:	jmp    0x100591d1
10063d0d:	lea    eax,[ebp-0x21c]
10063d13:	jmp    0x1000216c
10063d18:	lea    ecx,[ebp-0x260]
10063d1e:	jmp    0x10007f41
10063d23:	lea    esi,[ebp-0x220]
10063d29:	jmp    0x100066f3
10063d2e:	lea    eax,[ebp-0x230]
10063d34:	jmp    0x10011e27
10063d39:	mov    edx,DWORD PTR [esp+0x8]
10063d3d:	lea    eax,[edx+0xc]
10063d40:	mov    ecx,DWORD PTR [edx-0x264]
10063d46:	xor    ecx,eax
10063d48:	call   0x10042e97
10063d4d:	mov    ecx,DWORD PTR [edx-0x4]
10063d50:	xor    ecx,eax
10063d52:	call   0x10042e97
10063d57:	mov    eax,0x1007ab50
10063d5c:	jmp    0x100591d1
10063d61:	lea    esi,[ebp-0x64]
10063d64:	jmp    0x100041bb
10063d69:	lea    ecx,[ebp-0x30]
10063d6c:	jmp    0x10007f41
10063d71:	lea    ecx,[ebp-0x4c]
10063d74:	jmp    0x10007f41
10063d79:	lea    ecx,[ebp-0x88]
10063d7f:	jmp    0x10007f41
10063d84:	mov    edx,DWORD PTR [esp+0x8]
10063d88:	lea    eax,[edx+0xc]
10063d8b:	mov    ecx,DWORD PTR [edx-0x8c]
10063d91:	xor    ecx,eax
10063d93:	call   0x10042e97
10063d98:	mov    ecx,DWORD PTR [edx-0x4]
10063d9b:	xor    ecx,eax
10063d9d:	call   0x10042e97
10063da2:	mov    eax,0x1007ab94
10063da7:	jmp    0x100591d1
10063dac:	int3   
10063dad:	int3   
10063dae:	int3   
10063daf:	int3   
10063db0:	lea    ecx,[ebp-0x1ac]
10063db6:	jmp    0x10007f41
10063dbb:	lea    ecx,[ebp-0x1c8]
10063dc1:	jmp    0x10007f41
10063dc6:	lea    ecx,[ebp-0x1e4]
10063dcc:	jmp    0x10007f41
10063dd1:	lea    ecx,[ebp-0x158]
10063dd7:	jmp    0x10007f41
10063ddc:	lea    ecx,[ebp-0x174]
10063de2:	jmp    0x10007f41
10063de7:	lea    ecx,[ebp-0x30]
10063dea:	jmp    0x10007f41
10063def:	lea    ecx,[ebp-0x4c]
10063df2:	jmp    0x10007f41
10063df7:	lea    ecx,[ebp-0x104]
10063dfd:	jmp    0x10007f41
10063e02:	lea    ecx,[ebp-0x190]
10063e08:	jmp    0x10007f41
10063e0d:	lea    eax,[ebp-0x1fc]
10063e13:	jmp    0x10011e27
10063e18:	lea    ecx,[ebp-0x190]
10063e1e:	jmp    0x10007f41
10063e23:	lea    ecx,[ebp-0x1c8]
10063e29:	jmp    0x10007f41
10063e2e:	lea    esi,[ebp-0xe8]
10063e34:	jmp    0x1000bc65
10063e39:	lea    ecx,[ebp-0x174]
10063e3f:	jmp    0x10007f41
10063e44:	lea    ecx,[ebp-0x190]
10063e4a:	jmp    0x10007f41
10063e4f:	lea    ecx,[ebp-0x13c]
10063e55:	jmp    0x10007f41
10063e5a:	lea    ecx,[ebp-0x158]
10063e60:	jmp    0x10007f41
10063e65:	lea    ecx,[ebp-0x1c8]
10063e6b:	jmp    0x10007f41
10063e70:	lea    ecx,[ebp-0x1e4]
10063e76:	jmp    0x10007f41
10063e7b:	lea    ecx,[ebp-0x1ac]
10063e81:	jmp    0x10007f41
10063e86:	lea    ecx,[ebp-0x120]
10063e8c:	jmp    0x10007f41
10063e91:	lea    ecx,[ebp-0x13c]
10063e97:	jmp    0x10007f41
10063e9c:	mov    edx,DWORD PTR [esp+0x8]
10063ea0:	lea    eax,[edx-0x1fc]
10063ea6:	mov    ecx,DWORD PTR [edx-0x200]
10063eac:	xor    ecx,eax
10063eae:	call   0x10042e97
10063eb3:	add    eax,0xc
10063eb6:	mov    ecx,DWORD PTR [edx-0x8]
10063eb9:	xor    ecx,eax
10063ebb:	call   0x10042e97
10063ec0:	mov    eax,0x1007ac90
10063ec5:	jmp    0x100591d1
10063eca:	int3   
10063ecb:	int3   
10063ecc:	int3   
10063ecd:	int3   
10063ece:	int3   
10063ecf:	int3   
10063ed0:	lea    eax,[ebp-0x14]
10063ed3:	jmp    0x10011e27
10063ed8:	lea    eax,[ebp-0x10]
10063edb:	jmp    0x10011e27
10063ee0:	mov    edx,DWORD PTR [esp+0x8]
10063ee4:	lea    eax,[edx-0x28]
10063ee7:	mov    ecx,DWORD PTR [edx-0x2c]
10063eea:	xor    ecx,eax
10063eec:	call   0x10042e97
10063ef1:	mov    eax,0x1007acc4
10063ef6:	jmp    0x100591d1
10063efb:	int3   
10063efc:	int3   
10063efd:	int3   
10063efe:	int3   
10063eff:	int3   
10063f00:	lea    ecx,[ebp-0x28]
10063f03:	jmp    0x10007f41
10063f08:	mov    edx,DWORD PTR [esp+0x8]
10063f0c:	lea    eax,[edx-0x24]
10063f0f:	mov    ecx,DWORD PTR [edx-0x28]
10063f12:	xor    ecx,eax
10063f14:	call   0x10042e97
10063f19:	mov    eax,0x1007acf0
10063f1e:	jmp    0x100591d1
10063f23:	lea    eax,[ebp+0x4]
10063f26:	jmp    0x10009e23
10063f2b:	lea    eax,[ebp+0x8]
10063f2e:	jmp    0x10009e32
10063f33:	lea    ecx,[ebp+0x44]
10063f36:	jmp    0x10007f41
10063f3b:	lea    ecx,[ebp-0x44]
10063f3e:	jmp    0x10007f41
10063f43:	lea    ecx,[ebp-0x60]
10063f46:	jmp    0x10007f41
10063f4b:	lea    ecx,[ebp-0x28]
10063f4e:	jmp    0x10007f41
10063f53:	lea    ecx,[ebp+0xc]
10063f56:	jmp    0x10007f41
10063f5b:	mov    edx,DWORD PTR [esp+0x8]
10063f5f:	lea    eax,[edx+0xc]
10063f62:	mov    ecx,DWORD PTR [edx-0x64]
10063f65:	xor    ecx,eax
10063f67:	call   0x10042e97
10063f6c:	mov    ecx,DWORD PTR [edx+0x6c]
10063f6f:	xor    ecx,eax
10063f71:	call   0x10042e97
10063f76:	mov    eax,0x1007ad68
10063f7b:	jmp    0x100591d1
10063f80:	lea    ecx,[ebp-0x4a4]
10063f86:	jmp    0x10007f41
10063f8b:	lea    ecx,[ebp-0x530]
10063f91:	jmp    0x10007f41
10063f96:	lea    ecx,[ebp-0x4dc]
10063f9c:	jmp    0x10007f41
10063fa1:	lea    ecx,[ebp-0x4f8]
10063fa7:	jmp    0x10007f41
10063fac:	lea    ecx,[ebp-0x434]
10063fb2:	jmp    0x10007f41
10063fb7:	lea    ecx,[ebp-0x450]
10063fbd:	jmp    0x10007f41
10063fc2:	lea    ecx,[ebp-0x488]
10063fc8:	jmp    0x10007f41
10063fcd:	lea    ecx,[ebp-0x5a8]
10063fd3:	jmp    0x1001b3fd
10063fd8:	lea    ecx,[ebp-0x598]
10063fde:	jmp    0x1001b3fd
10063fe3:	lea    eax,[ebp-0x5d4]
10063fe9:	jmp    0x100231e9
10063fee:	lea    edi,[ebp-0x5c4]
10063ff4:	jmp    0x1000250a
10063ff9:	lea    ecx,[ebp-0x46c]
10063fff:	jmp    0x10007f41
10064004:	lea    ecx,[ebp-0x54c]
1006400a:	jmp    0x10007f41
1006400f:	lea    ecx,[ebp-0x584]
10064015:	jmp    0x10007f41
1006401a:	lea    ecx,[ebp-0x514]
10064020:	jmp    0x10007f41
10064025:	lea    ecx,[ebp-0x568]
1006402b:	jmp    0x10007f41
10064030:	lea    eax,[ebp-0x5d0]
10064036:	jmp    0x10009e23
1006403b:	lea    eax,[ebp-0x5c8]
10064041:	jmp    0x10009e32
10064046:	mov    edx,DWORD PTR [esp+0x8]
1006404a:	lea    eax,[edx-0x5e4]
10064050:	mov    ecx,DWORD PTR [edx-0x5e8]
10064056:	xor    ecx,eax
10064058:	call   0x10042e97
1006405d:	add    eax,0xc
10064060:	mov    ecx,DWORD PTR [edx-0x8]
10064063:	xor    ecx,eax
10064065:	call   0x10042e97
1006406a:	mov    eax,0x1007ae38
1006406f:	jmp    0x100591d1
10064074:	lea    ecx,[ebp-0x220]
1006407a:	jmp    0x10007f41
1006407f:	lea    ecx,[ebp-0x27c]
10064085:	jmp    0x10007f41
1006408a:	lea    ecx,[ebp-0x27c]
10064090:	jmp    0x10007f41
10064095:	lea    ecx,[ebp-0x258]
1006409b:	jmp    0x10007f41
100640a0:	lea    ecx,[ebp-0x220]
100640a6:	jmp    0x10007f41
100640ab:	lea    ecx,[ebp-0x27c]
100640b1:	jmp    0x10007f41
100640b6:	lea    esi,[ebp-0x140]
100640bc:	jmp    0x1000bbfd
100640c1:	lea    ecx,[ebp-0x27c]
100640c7:	jmp    0x10007f41
100640cc:	lea    ecx,[ebp-0x27c]
100640d2:	jmp    0x10007f41
100640d7:	lea    ecx,[ebp-0x27c]
100640dd:	jmp    0x10007f41
100640e2:	lea    ecx,[ebp-0x27c]
100640e8:	jmp    0x10007f41
100640ed:	lea    ecx,[ebp-0x27c]
100640f3:	jmp    0x10007f41
100640f8:	lea    ecx,[ebp-0x178]
100640fe:	jmp    0x10007f41
10064103:	lea    ecx,[ebp-0x258]
10064109:	jmp    0x10007f41
1006410e:	lea    ecx,[ebp-0x258]
10064114:	jmp    0x10007f41
10064119:	lea    ecx,[ebp-0x23c]
1006411f:	jmp    0x10007f41
10064124:	lea    esi,[ebp-0xb0]
1006412a:	jmp    0x1000bc65
1006412f:	lea    ecx,[ebp-0x15c]
10064135:	jmp    0x10007f41
1006413a:	lea    ecx,[ebp-0x23c]
10064140:	jmp    0x10007f41
10064145:	lea    ecx,[ebp-0x194]
1006414b:	jmp    0x10007f41
10064150:	lea    ecx,[ebp-0x1cc]
10064156:	jmp    0x10007f41
1006415b:	lea    ecx,[ebp-0x1e8]
10064161:	jmp    0x10007f41
10064166:	lea    ecx,[ebp-0x204]
1006416c:	jmp    0x10007f41
10064171:	lea    ecx,[ebp-0x1b0]
10064177:	jmp    0x10007f41
1006417c:	mov    edx,DWORD PTR [esp+0x8]
10064180:	lea    eax,[edx-0x28c]
10064186:	mov    ecx,DWORD PTR [edx-0x290]
1006418c:	xor    ecx,eax
1006418e:	call   0x10042e97
10064193:	add    eax,0xc
10064196:	mov    ecx,DWORD PTR [edx-0x8]
10064199:	xor    ecx,eax
1006419b:	call   0x10042e97
100641a0:	mov    eax,0x1007af28
100641a5:	jmp    0x100591d1
100641aa:	lea    ecx,[ebp-0x68]
100641ad:	jmp    0x10007f41
100641b2:	lea    ecx,[ebp-0x30]
100641b5:	jmp    0x10007f41
100641ba:	lea    ecx,[ebp-0x4c]
100641bd:	jmp    0x10007f41
100641c2:	lea    ecx,[ebp-0xa0]
100641c8:	jmp    0x10007f41
100641cd:	lea    ecx,[ebp-0x84]
100641d3:	jmp    0x10007f41
100641d8:	lea    ecx,[ebp-0x68]
100641db:	jmp    0x10007f41
100641e0:	lea    ecx,[ebp-0xa0]
100641e6:	jmp    0x10007f41
100641eb:	lea    ecx,[ebp-0x84]
100641f1:	jmp    0x10007f41
100641f6:	lea    ecx,[ebp-0xa0]
100641fc:	jmp    0x10007f41
10064201:	mov    edx,DWORD PTR [esp+0x8]
10064205:	lea    eax,[edx-0xa4]
1006420b:	mov    ecx,DWORD PTR [edx-0xa8]
10064211:	xor    ecx,eax
10064213:	call   0x10042e97
10064218:	add    eax,0xc
1006421b:	mov    ecx,DWORD PTR [edx-0x8]
1006421e:	xor    ecx,eax
10064220:	call   0x10042e97
10064225:	mov    eax,0x1007afa0
1006422a:	jmp    0x100591d1
1006422f:	lea    ecx,[ebp-0x84]
10064235:	jmp    0x10007f41
1006423a:	lea    ecx,[ebp-0x30]
1006423d:	jmp    0x10007f41
10064242:	lea    ecx,[ebp-0xa0]
10064248:	jmp    0x10007f41
1006424d:	lea    ecx,[ebp-0xa0]
10064253:	jmp    0x10007f41
10064258:	lea    ecx,[ebp-0x68]
1006425b:	jmp    0x10007f41
10064260:	lea    ecx,[ebp-0x4c]
10064263:	jmp    0x10007f41
10064268:	mov    edx,DWORD PTR [esp+0x8]
1006426c:	lea    eax,[edx-0xac]
10064272:	mov    ecx,DWORD PTR [edx-0xb0]
10064278:	xor    ecx,eax
1006427a:	call   0x10042e97
1006427f:	add    eax,0xc
10064282:	mov    ecx,DWORD PTR [edx-0x8]
10064285:	xor    ecx,eax
10064287:	call   0x10042e97
1006428c:	mov    eax,0x1007affc
10064291:	jmp    0x100591d1
10064296:	lea    eax,[ebp-0x1c]
10064299:	jmp    0x10009e32
1006429e:	lea    eax,[ebp-0x18]
100642a1:	jmp    0x10009e32
100642a6:	mov    edx,DWORD PTR [esp+0x8]
100642aa:	lea    eax,[edx+0xc]
100642ad:	mov    ecx,DWORD PTR [edx-0x44]
100642b0:	xor    ecx,eax
100642b2:	call   0x10042e97
100642b7:	mov    eax,0x1007b030
100642bc:	jmp    0x100591d1
100642c1:	lea    eax,[ebp-0x18]
100642c4:	jmp    0x10009e32
100642c9:	lea    eax,[ebp-0x14]
100642cc:	jmp    0x10009e32
100642d1:	mov    edx,DWORD PTR [esp+0x8]
100642d5:	lea    eax,[edx+0xc]
100642d8:	mov    ecx,DWORD PTR [edx-0x40]
100642db:	xor    ecx,eax
100642dd:	call   0x10042e97
100642e2:	mov    eax,0x1007b064
100642e7:	jmp    0x100591d1
100642ec:	lea    eax,[ebp-0x20]
100642ef:	jmp    0x10009e23
100642f4:	lea    eax,[ebp-0x14]
100642f7:	jmp    0x10009e23
100642fc:	lea    eax,[ebp-0x1c]
100642ff:	jmp    0x10009e32
10064304:	lea    eax,[ebp-0x18]
10064307:	jmp    0x10009c34
1006430c:	lea    esi,[ebp-0x40]
1006430f:	jmp    0x100261d4
10064314:	mov    edx,DWORD PTR [esp+0x8]
10064318:	lea    eax,[edx+0xc]
1006431b:	mov    ecx,DWORD PTR [edx-0x44]
1006431e:	xor    ecx,eax
10064320:	call   0x10042e97
10064325:	mov    eax,0x1007b0b0
1006432a:	jmp    0x100591d1
1006432f:	lea    eax,[ebp-0x14]
10064332:	jmp    0x10025dcf
10064337:	mov    edx,DWORD PTR [esp+0x8]
1006433b:	lea    eax,[edx+0xc]
1006433e:	mov    ecx,DWORD PTR [edx-0x18]
10064341:	xor    ecx,eax
10064343:	call   0x10042e97
10064348:	mov    eax,0x1007b110
1006434d:	jmp    0x100591d1
10064352:	mov    eax,DWORD PTR [ebp-0x14]
10064355:	and    eax,0x1
10064358:	je     0x1006436a
1006435e:	and    DWORD PTR [ebp-0x14],0xfffffffe
10064362:	lea    eax,[ebp+0x18]
10064365:	jmp    0x10034d30
1006436a:	ret    
1006436b:	mov    edx,DWORD PTR [esp+0x8]
1006436f:	lea    eax,[edx+0xc]
10064372:	mov    ecx,DWORD PTR [edx-0x20]
10064375:	xor    ecx,eax
10064377:	call   0x10042e97
1006437c:	mov    eax,0x1007b180
10064381:	jmp    0x100591d1
10064386:	lea    ecx,[ebp-0x10]
10064389:	jmp    0x10015ddd
1006438e:	mov    edx,DWORD PTR [esp+0x8]
10064392:	lea    eax,[edx+0xc]
10064395:	mov    ecx,DWORD PTR [edx-0x24]
10064398:	xor    ecx,eax
1006439a:	call   0x10042e97
1006439f:	mov    eax,0x1007b1ac
100643a4:	jmp    0x100591d1
100643a9:	lea    ecx,[ebp-0x18]
100643ac:	jmp    0x10010c9f
100643b1:	lea    eax,[ebp-0x24]
100643b4:	jmp    0x100231e9
100643b9:	lea    eax,[ebp-0x28]
100643bc:	jmp    0x100231e9
100643c1:	lea    eax,[ebp-0x20]
100643c4:	jmp    0x100231e9
100643c9:	mov    edx,DWORD PTR [esp+0x8]
100643cd:	lea    eax,[edx-0x2c]
100643d0:	mov    ecx,DWORD PTR [edx-0x30]
100643d3:	xor    ecx,eax
100643d5:	call   0x10042e97
100643da:	mov    eax,0x1007b1f0
100643df:	jmp    0x100591d1
100643e4:	lea    ecx,[ebp-0x2c]
100643e7:	jmp    0x10007f41
100643ec:	mov    edx,DWORD PTR [esp+0x8]
100643f0:	lea    eax,[edx+0xc]
100643f3:	mov    ecx,DWORD PTR [edx-0x3c]
100643f6:	xor    ecx,eax
100643f8:	call   0x10042e97
100643fd:	mov    ecx,DWORD PTR [edx-0x4]
10064400:	xor    ecx,eax
10064402:	call   0x10042e97
10064407:	mov    eax,0x1007b21c
1006440c:	jmp    0x100591d1
10064411:	lea    ecx,[ebp-0x30]
10064414:	jmp    0x10007f41
10064419:	mov    edx,DWORD PTR [esp+0x8]
1006441d:	lea    eax,[edx+0xc]
10064420:	mov    ecx,DWORD PTR [edx-0x34]
10064423:	xor    ecx,eax
10064425:	call   0x10042e97
1006442a:	mov    eax,0x1007b248
1006442f:	jmp    0x100591d1
10064434:	lea    ecx,[ebp-0x2c]
10064437:	jmp    0x10007f41
1006443c:	push   DWORD PTR [ebp-0x34]
1006443f:	call   0x10042e92
10064444:	pop    ecx
10064445:	ret    
10064446:	mov    edx,DWORD PTR [esp+0x8]
1006444a:	lea    eax,[edx+0xc]
1006444d:	mov    ecx,DWORD PTR [edx-0x40]
10064450:	xor    ecx,eax
10064452:	call   0x10042e97
10064457:	mov    ecx,DWORD PTR [edx-0x4]
1006445a:	xor    ecx,eax
1006445c:	call   0x10042e97
10064461:	mov    eax,0x1007b27c
10064466:	jmp    0x100591d1
1006446b:	lea    ecx,[ebp-0x30]
1006446e:	jmp    0x10007f41
10064473:	lea    ecx,[ebp-0x4c]
10064476:	jmp    0x10007f41
1006447b:	lea    eax,[ebp-0x5c]
1006447e:	jmp    0x10011e27
10064483:	mov    edx,DWORD PTR [esp+0x8]
10064487:	lea    eax,[edx-0x64]
1006448a:	mov    ecx,DWORD PTR [edx-0x68]
1006448d:	xor    ecx,eax
1006448f:	call   0x10042e97
10064494:	add    eax,0xc
10064497:	mov    ecx,DWORD PTR [edx-0x8]
1006449a:	xor    ecx,eax
1006449c:	call   0x10042e97
100644a1:	mov    eax,0x1007b2b8
100644a6:	jmp    0x100591d1
100644ab:	lea    ecx,[ebp-0x2c]
100644ae:	jmp    0x10007f41
100644b3:	push   DWORD PTR [ebp-0x4c]
100644b6:	call   0x10042e92
100644bb:	pop    ecx
100644bc:	ret    
100644bd:	lea    ecx,[ebp-0x48]
100644c0:	jmp    0x10007f41
100644c5:	push   DWORD PTR [ebp-0x54]
100644c8:	call   0x10042e92
100644cd:	pop    ecx
100644ce:	ret    
100644cf:	mov    edx,DWORD PTR [esp+0x8]
100644d3:	lea    eax,[edx+0xc]
100644d6:	mov    ecx,DWORD PTR [edx-0x5c]
100644d9:	xor    ecx,eax
100644db:	call   0x10042e97
100644e0:	mov    ecx,DWORD PTR [edx-0x4]
100644e3:	xor    ecx,eax
100644e5:	call   0x10042e97
100644ea:	mov    eax,0x1007b2fc
100644ef:	jmp    0x100591d1
100644f4:	lea    ecx,[ebp-0x30]
100644f7:	jmp    0x10007f41
100644fc:	lea    ecx,[ebp-0xa0]
10064502:	jmp    0x10007f41
10064507:	lea    ecx,[ebp-0xbc]
1006450d:	jmp    0x10007f41
10064512:	lea    ecx,[ebp-0xbc]
10064518:	jmp    0x10007f41
1006451d:	mov    eax,DWORD PTR [ebp-0xcc]
10064523:	and    eax,0x1
10064526:	je     0x1006453e
1006452c:	and    DWORD PTR [ebp-0xcc],0xfffffffe
10064533:	lea    ecx,[ebp-0xa0]
10064539:	jmp    0x10007f41
1006453e:	ret    
1006453f:	mov    eax,DWORD PTR [ebp-0xcc]
10064545:	and    eax,0x2
10064548:	je     0x1006455d
1006454e:	and    DWORD PTR [ebp-0xcc],0xfffffffd
10064555:	lea    ecx,[ebp-0x68]
10064558:	jmp    0x10007f41
1006455d:	ret    
1006455e:	mov    eax,DWORD PTR [ebp-0xcc]
10064564:	and    eax,0x4
10064567:	je     0x1006457f
1006456d:	and    DWORD PTR [ebp-0xcc],0xfffffffb
10064574:	lea    ecx,[ebp-0xbc]
1006457a:	jmp    0x10007f41
1006457f:	ret    
10064580:	mov    eax,DWORD PTR [ebp-0xcc]
10064586:	and    eax,0x8
10064589:	je     0x1006459e
1006458f:	and    DWORD PTR [ebp-0xcc],0xfffffff7
10064596:	lea    ecx,[ebp-0x4c]
10064599:	jmp    0x10007f41
1006459e:	ret    
1006459f:	mov    eax,DWORD PTR [ebp-0xcc]
100645a5:	and    eax,0x10
100645a8:	je     0x100645c0
100645ae:	and    DWORD PTR [ebp-0xcc],0xffffffef
100645b5:	lea    ecx,[ebp-0x84]
100645bb:	jmp    0x10007f41
100645c0:	ret    
100645c1:	push   DWORD PTR [ebp-0xc4]
100645c7:	call   0x10042e92
100645cc:	pop    ecx
100645cd:	ret    
100645ce:	mov    edx,DWORD PTR [esp+0x8]
100645d2:	lea    eax,[edx-0xd4]
100645d8:	mov    ecx,DWORD PTR [edx-0xd8]
100645de:	xor    ecx,eax
100645e0:	call   0x10042e97
100645e5:	add    eax,0xc
100645e8:	mov    ecx,DWORD PTR [edx-0x8]
100645eb:	xor    ecx,eax
100645ed:	call   0x10042e97
100645f2:	mov    eax,0x1007b370
100645f7:	jmp    0x100591d1
100645fc:	lea    eax,[ebp-0x18]
100645ff:	jmp    0x10009be6
10064604:	lea    eax,[ebp-0x14]
10064607:	jmp    0x10009be6
1006460c:	lea    eax,[ebp-0x10]
1006460f:	jmp    0x10009be6
10064614:	mov    edx,DWORD PTR [esp+0x8]
10064618:	lea    eax,[edx+0xc]
1006461b:	mov    ecx,DWORD PTR [edx-0x1c]
1006461e:	xor    ecx,eax
10064620:	call   0x10042e97
10064625:	mov    eax,0x1007b3ac
1006462a:	jmp    0x100591d1
1006462f:	lea    ecx,[ebp-0x2c]
10064632:	jmp    0x10007f41
10064637:	push   DWORD PTR [ebp-0x50]
1006463a:	call   0x10042e92
1006463f:	pop    ecx
10064640:	ret    
10064641:	lea    ecx,[ebp-0x48]
10064644:	jmp    0x10007f41
10064649:	push   DWORD PTR [ebp-0x50]
1006464c:	call   0x10042e92
10064651:	pop    ecx
10064652:	ret    
10064653:	mov    edx,DWORD PTR [esp+0x8]
10064657:	lea    eax,[edx+0xc]
1006465a:	mov    ecx,DWORD PTR [edx-0x60]
1006465d:	xor    ecx,eax
1006465f:	call   0x10042e97
10064664:	mov    ecx,DWORD PTR [edx-0x4]
10064667:	xor    ecx,eax
10064669:	call   0x10042e97
1006466e:	mov    eax,0x1007b3f0
10064673:	jmp    0x100591d1
10064678:	lea    eax,[ebp-0x10]
1006467b:	jmp    0x10009be6
10064680:	lea    eax,[ebp-0x14]
10064683:	jmp    0x10009be6
10064688:	lea    eax,[ebp-0x18]
1006468b:	jmp    0x10009be6
10064690:	mov    edx,DWORD PTR [esp+0x8]
10064694:	lea    eax,[edx+0xc]
10064697:	mov    ecx,DWORD PTR [edx-0x20]
1006469a:	xor    ecx,eax
1006469c:	call   0x10042e97
100646a1:	mov    eax,0x1007b42c
100646a6:	jmp    0x100591d1
100646ab:	lea    eax,[ebp-0x14]
100646ae:	jmp    0x10011e27
100646b3:	lea    eax,[ebp-0x5c]
100646b6:	push   eax
100646b7:	call   0x10009f12
100646bc:	ret    
100646bd:	mov    eax,DWORD PTR [ebp-0x18]
100646c0:	and    eax,0x1
100646c3:	je     0x100646d5
100646c9:	and    DWORD PTR [ebp-0x18],0xfffffffe
100646cd:	mov    eax,DWORD PTR [ebp+0xc]
100646d0:	jmp    0x10011e27
100646d5:	ret    
100646d6:	mov    edx,DWORD PTR [esp+0x8]
100646da:	lea    eax,[edx+0xc]
100646dd:	mov    ecx,DWORD PTR [edx-0x60]
100646e0:	xor    ecx,eax
100646e2:	call   0x10042e97
100646e7:	mov    eax,0x1007b468
100646ec:	jmp    0x100591d1
100646f1:	lea    ecx,[ebp-0x64]
100646f4:	jmp    0x10007f41
100646f9:	lea    ecx,[ebp-0x48]
100646fc:	jmp    0x10007f41
10064701:	lea    ecx,[ebp-0x80]
10064704:	jmp    0x10007f41
10064709:	lea    ecx,[ebp-0x2c]
1006470c:	jmp    0x10007f41
10064711:	lea    esi,[ebp-0x98]
10064717:	jmp    0x1000c938
1006471c:	mov    edx,DWORD PTR [esp+0x8]
10064720:	lea    eax,[edx-0x9c]
10064726:	mov    ecx,DWORD PTR [edx-0xa0]
1006472c:	xor    ecx,eax
1006472e:	call   0x10042e97
10064733:	mov    eax,0x1007b4b4
10064738:	jmp    0x100591d1
1006473d:	lea    eax,[ebp+0xc]
10064740:	jmp    0x10011e27
10064745:	mov    eax,DWORD PTR [ebp-0x10]
10064748:	and    eax,0x1
1006474b:	je     0x1006475d
10064751:	and    DWORD PTR [ebp-0x10],0xfffffffe
10064755:	mov    eax,DWORD PTR [ebp+0x8]
10064758:	jmp    0x10011e27
1006475d:	ret    
1006475e:	lea    eax,[ebp+0x10]
10064761:	jmp    0x10009e23
10064766:	mov    edx,DWORD PTR [esp+0x8]
1006476a:	lea    eax,[edx+0xc]
1006476d:	mov    ecx,DWORD PTR [edx-0x14]
10064770:	xor    ecx,eax
10064772:	call   0x10042e97
10064777:	mov    eax,0x1007b4f0
1006477c:	jmp    0x100591d1
10064781:	lea    eax,[ebp-0x14]
10064784:	jmp    0x10009c34
10064789:	lea    eax,[ebp-0x18]
1006478c:	jmp    0x10009c34
10064791:	lea    eax,[ebp-0x14]
10064794:	jmp    0x10009c34
10064799:	mov    edx,DWORD PTR [esp+0x8]
1006479d:	lea    eax,[edx+0xc]
100647a0:	mov    ecx,DWORD PTR [edx-0x20]
100647a3:	xor    ecx,eax
100647a5:	call   0x10042e97
100647aa:	mov    eax,0x1007b52c
100647af:	jmp    0x100591d1
100647b4:	lea    eax,[ebp+0x10]
100647b7:	jmp    0x10009e32
100647bc:	lea    eax,[ebp-0x1c]
100647bf:	jmp    0x10025dcf
100647c4:	lea    eax,[ebp+0x8]
100647c7:	jmp    0x10009e23
100647cc:	mov    edx,DWORD PTR [esp+0x8]
100647d0:	lea    eax,[edx+0xc]
100647d3:	mov    ecx,DWORD PTR [edx-0x20]
100647d6:	xor    ecx,eax
100647d8:	call   0x10042e97
100647dd:	mov    eax,0x1007b59c
100647e2:	jmp    0x100591d1
100647e7:	lea    eax,[ebp-0x14]
100647ea:	jmp    0x1000cf14
100647ef:	lea    esi,[ebp-0x10]
100647f2:	jmp    0x1000a986
100647f7:	lea    eax,[ebp-0x1c]
100647fa:	jmp    0x10011e27
100647ff:	mov    eax,DWORD PTR [ebp-0x18]
10064802:	and    eax,0x1
10064805:	je     0x10064817
1006480b:	and    DWORD PTR [ebp-0x18],0xfffffffe
1006480f:	mov    eax,DWORD PTR [ebp+0x8]
10064812:	jmp    0x10011e27
10064817:	ret    
10064818:	mov    edx,DWORD PTR [esp+0x8]
1006481c:	lea    eax,[edx+0xc]
1006481f:	mov    ecx,DWORD PTR [edx-0x20]
10064822:	xor    ecx,eax
10064824:	call   0x10042e97
10064829:	mov    eax,0x1007b5e0
1006482e:	jmp    0x100591d1
10064833:	lea    eax,[ebp-0x10]
10064836:	jmp    0x10011e27
1006483b:	lea    ecx,[ebp-0x38]
1006483e:	jmp    0x10007f41
10064843:	mov    edx,DWORD PTR [esp+0x8]
10064847:	lea    eax,[edx+0xc]
1006484a:	mov    ecx,DWORD PTR [edx-0x3c]
1006484d:	xor    ecx,eax
1006484f:	call   0x10042e97
10064854:	mov    eax,0x1007b614
10064859:	jmp    0x100591d1
1006485e:	jmp    0x10037970
10064863:	lea    eax,[ebp-0x14]
10064866:	jmp    0x10034d30
1006486b:	lea    ecx,[ebp+0x70]
1006486e:	jmp    0x10007f41
10064873:	lea    ecx,[ebp-0x5c]
10064876:	jmp    0x10007f41
1006487b:	lea    ecx,[ebp-0x94]
10064881:	jmp    0x10007f41
10064886:	lea    ecx,[ebp+0x1c]
10064889:	jmp    0x10007f41
1006488e:	lea    ecx,[ebp+0x0]
10064891:	jmp    0x10007f41
10064896:	lea    ecx,[ebp+0x38]
10064899:	jmp    0x10007f41
1006489e:	lea    ecx,[ebp-0x78]
100648a1:	jmp    0x10007f41
100648a6:	lea    ecx,[ebp-0x94]
100648ac:	jmp    0x10007f41
100648b1:	lea    ecx,[ebp-0x5c]
100648b4:	jmp    0x10007f41
100648b9:	lea    ecx,[ebp-0x94]
100648bf:	jmp    0x10007f41
100648c4:	lea    ecx,[ebp-0x5c]
100648c7:	jmp    0x10007f41
100648cc:	lea    ecx,[ebp-0x78]
100648cf:	jmp    0x10007f41
100648d4:	lea    eax,[ebp-0x14]
100648d7:	jmp    0x1000216c
100648dc:	lea    esi,[ebp-0x40]
100648df:	jmp    0x100045e4
100648e4:	lea    ecx,[ebp-0x5c]
100648e7:	jmp    0x10007f41
100648ec:	lea    ecx,[ebp-0x78]
100648ef:	jmp    0x10007f41
100648f4:	lea    ecx,[ebp-0xb0]
100648fa:	jmp    0x10007f41
100648ff:	lea    ecx,[ebp-0x94]
10064905:	jmp    0x10007f41
1006490a:	lea    ecx,[ebp-0x5c]
1006490d:	jmp    0x10007f41
10064912:	lea    ecx,[ebp-0x78]
10064915:	jmp    0x10007f41
1006491a:	lea    eax,[ebp-0x14]
1006491d:	jmp    0x1000216c
10064922:	lea    ecx,[ebp-0x78]
10064925:	jmp    0x10007f41
1006492a:	lea    ecx,[ebp-0xb0]
10064930:	jmp    0x10007f41
10064935:	lea    ecx,[ebp+0x54]
10064938:	jmp    0x10007f41
1006493d:	lea    ecx,[ebp-0x94]
10064943:	jmp    0x10007f41
10064948:	lea    eax,[ebp-0x1c]
1006494b:	jmp    0x10011e27
10064950:	lea    ecx,[ebp-0xb0]
10064956:	jmp    0x10007f41
1006495b:	lea    ecx,[ebp-0x78]
1006495e:	jmp    0x10007f41
10064963:	lea    ecx,[ebp-0x5c]
10064966:	jmp    0x10007f41
1006496b:	lea    eax,[ebp-0x14]
1006496e:	jmp    0x1000421f
10064973:	mov    edx,DWORD PTR [esp+0x8]
10064977:	lea    eax,[edx+0xc]
1006497a:	mov    ecx,DWORD PTR [edx-0xb4]
10064980:	xor    ecx,eax
10064982:	call   0x10042e97
10064987:	mov    ecx,DWORD PTR [edx+0x98]
1006498d:	xor    ecx,eax
1006498f:	call   0x10042e97
10064994:	mov    eax,0x1007b784
10064999:	jmp    0x100591d1
1006499e:	lea    esi,[ebp-0x1c]
100649a1:	jmp    0x1002bbc7
100649a6:	lea    eax,[ebp-0x20]
100649a9:	jmp    0x100231e9
100649ae:	lea    ecx,[ebp+0xa8]
100649b4:	jmp    0x10007f41
100649b9:	lea    ecx,[ebp+0x8c]
100649bf:	jmp    0x10007f41
100649c4:	lea    eax,[ebp-0x74]
100649c7:	jmp    0x100194c1
100649cc:	lea    ecx,[ebp-0xb0]
100649d2:	jmp    0x10007f41
100649d7:	lea    ecx,[ebp+0x70]
100649da:	jmp    0x10007f41
100649df:	lea    ecx,[ebp+0x54]
100649e2:	jmp    0x10007f41
100649e7:	lea    ecx,[ebp+0x54]
100649ea:	jmp    0x10007f41
100649ef:	lea    eax,[ebp-0x28]
100649f2:	jmp    0x1000216c
100649f7:	lea    ecx,[ebp-0xb0]
100649fd:	jmp    0x10007f41
10064a02:	lea    ecx,[ebp-0x120]
10064a08:	jmp    0x10007f41
10064a0d:	lea    ecx,[ebp-0x104]
10064a13:	jmp    0x10007f41
10064a18:	lea    ecx,[ebp-0x13c]
10064a1e:	jmp    0x10007f41
10064a23:	lea    ecx,[ebp-0x174]
10064a29:	jmp    0x10007f41
10064a2e:	lea    ecx,[ebp-0xe8]
10064a34:	jmp    0x10007f41
10064a39:	lea    ecx,[ebp-0x190]
10064a3f:	jmp    0x10007f41
10064a44:	lea    eax,[ebp-0x54]
10064a47:	jmp    0x10011e27
10064a4c:	lea    ecx,[ebp+0x70]
10064a4f:	jmp    0x10007f41
10064a54:	lea    eax,[ebp-0x24]
10064a57:	jmp    0x100231e9
10064a5c:	lea    ecx,[ebp-0x158]
10064a62:	jmp    0x10007f41
10064a67:	lea    edi,[ebp-0x5c]
10064a6a:	jmp    0x1000250a
10064a6f:	lea    ecx,[ebp-0xcc]
10064a75:	jmp    0x10007f41
10064a7a:	lea    edi,[ebp-0x48]
10064a7d:	jmp    0x1000250a
10064a82:	lea    ecx,[ebp+0x1c]
10064a85:	jmp    0x10007f41
10064a8a:	lea    ecx,[ebp+0x54]
10064a8d:	jmp    0x10007f41
10064a92:	lea    edi,[ebp-0x60]
10064a95:	jmp    0x1000250a
10064a9a:	lea    ecx,[ebp-0xcc]
10064aa0:	jmp    0x10007f41
10064aa5:	lea    edi,[ebp-0x44]
10064aa8:	jmp    0x1000250a
10064aad:	lea    ecx,[ebp+0x0]
10064ab0:	jmp    0x10007f41
10064ab5:	lea    edi,[ebp-0x4c]
10064ab8:	jmp    0x1000250a
10064abd:	lea    ecx,[ebp+0x38]
10064ac0:	jmp    0x10007f41
10064ac5:	lea    eax,[ebp-0x2c]
10064ac8:	jmp    0x100231e9
10064acd:	lea    ecx,[ebp-0x94]
10064ad3:	jmp    0x1001b3fd
10064ad8:	lea    ecx,[ebp-0x78]
10064adb:	jmp    0x1001b3fd
10064ae0:	lea    eax,[ebp-0x2c]
10064ae3:	jmp    0x1000216c
10064ae8:	mov    edx,DWORD PTR [esp+0x8]
10064aec:	lea    eax,[edx+0xc]
10064aef:	mov    ecx,DWORD PTR [edx-0x194]
10064af5:	xor    ecx,eax
10064af7:	call   0x10042e97
10064afc:	mov    ecx,DWORD PTR [edx+0xd0]
10064b02:	xor    ecx,eax
10064b04:	call   0x10042e97
10064b09:	mov    eax,0x1007b954
10064b0e:	jmp    0x100591d1
10064b13:	lea    ecx,[ebp-0xb8]
10064b19:	jmp    0x10007f41
10064b1e:	lea    ecx,[ebp-0x9c]
10064b24:	jmp    0x10007f41
10064b29:	lea    ecx,[ebp-0xf0]
10064b2f:	jmp    0x10007f41
10064b34:	lea    ecx,[ebp-0xf0]
10064b3a:	jmp    0x10007f41
10064b3f:	lea    ecx,[ebp-0xf0]
10064b45:	jmp    0x10007f41
10064b4a:	lea    ecx,[ebp-0xf0]
10064b50:	jmp    0x10007f41
10064b55:	lea    ecx,[ebp-0xf0]
10064b5b:	jmp    0x10007f41
10064b60:	lea    ecx,[ebp-0xf0]
10064b66:	jmp    0x10007f41
10064b6b:	lea    ecx,[ebp-0xf0]
10064b71:	jmp    0x10007f41
10064b76:	lea    ecx,[ebp-0x144]
10064b7c:	jmp    0x10007f41
10064b81:	lea    eax,[ebp-0x128]
10064b87:	jmp    0x10011e27
10064b8c:	lea    ecx,[ebp-0x124]
10064b92:	jmp    0x10007f41
10064b97:	lea    ecx,[ebp-0x124]
10064b9d:	jmp    0x10007f41
10064ba2:	lea    ecx,[ebp-0x124]
10064ba8:	jmp    0x10007f41
10064bad:	mov    edx,DWORD PTR [esp+0x8]
10064bb1:	lea    eax,[edx+0xc]
10064bb4:	mov    ecx,DWORD PTR [edx-0x148]
10064bba:	xor    ecx,eax
10064bbc:	call   0x10042e97
10064bc1:	mov    ecx,DWORD PTR [edx-0x8]
10064bc4:	xor    ecx,eax
10064bc6:	call   0x10042e97
10064bcb:	mov    eax,0x1007ba2c
10064bd0:	jmp    0x100591d1
10064bd5:	lea    ecx,[ebp+0xb0]
10064bdb:	jmp    0x10007f41
10064be0:	lea    ecx,[ebp-0x48]
10064be3:	jmp    0x10007f41
10064be8:	lea    eax,[ebp-0x1c]
10064beb:	jmp    0x10011e27
10064bf0:	lea    ecx,[ebp+0x94]
10064bf6:	jmp    0x10007f41
10064bfb:	lea    edi,[ebp-0x14]
10064bfe:	jmp    0x1000250a
10064c03:	lea    edi,[ebp-0x14]
10064c06:	jmp    0x1000250a
10064c0b:	lea    esi,[ebp+0x0]
10064c0e:	jmp    0x1000bc65
10064c13:	lea    ecx,[ebp+0xb0]
10064c19:	jmp    0x10007f41
10064c1e:	lea    ecx,[ebp+0x94]
10064c24:	jmp    0x10007f41
10064c29:	lea    eax,[ebp-0x1c]
10064c2c:	jmp    0x10011e27
10064c31:	lea    ecx,[ebp+0xb0]
10064c37:	jmp    0x10007f41
10064c3c:	lea    edi,[ebp-0x18]
10064c3f:	jmp    0x1000250a
10064c44:	lea    edi,[ebp-0x18]
10064c47:	jmp    0x1000250a
10064c4c:	mov    edx,DWORD PTR [esp+0x8]
10064c50:	lea    eax,[edx+0xc]
10064c53:	mov    ecx,DWORD PTR [edx-0x4c]
10064c56:	xor    ecx,eax
10064c58:	call   0x10042e97
10064c5d:	mov    ecx,DWORD PTR [edx+0xd8]
10064c63:	xor    ecx,eax
10064c65:	call   0x10042e97
10064c6a:	mov    eax,0x1007bafc
10064c6f:	jmp    0x100591d1
10064c74:	lea    eax,[ebp-0x40]
10064c77:	jmp    0x1001afcc
10064c7c:	lea    ecx,[ebp-0x30]
10064c7f:	jmp    0x10007f41
10064c84:	lea    ecx,[ebp-0x78]
10064c87:	jmp    0x10007f41
10064c8c:	lea    ecx,[ebp-0x5c]
10064c8f:	jmp    0x10007f41
10064c94:	lea    eax,[ebp-0x34]
10064c97:	jmp    0x10011e27
10064c9c:	mov    edx,DWORD PTR [esp+0x8]
10064ca0:	lea    eax,[edx+0xc]
10064ca3:	mov    ecx,DWORD PTR [edx-0x80]
10064ca6:	xor    ecx,eax
10064ca8:	call   0x10042e97
10064cad:	mov    ecx,DWORD PTR [edx-0x8]
10064cb0:	xor    ecx,eax
10064cb2:	call   0x10042e97
10064cb7:	mov    eax,0x1007bb8c
10064cbc:	jmp    0x100591d1
10064cc1:	lea    eax,[ebp-0x18]
10064cc4:	jmp    0x1000421f
10064cc9:	mov    edx,DWORD PTR [esp+0x8]
10064ccd:	lea    eax,[edx+0xc]
10064cd0:	mov    ecx,DWORD PTR [edx-0x1c]
10064cd3:	xor    ecx,eax
10064cd5:	call   0x10042e97
10064cda:	mov    eax,0x1007bbec
10064cdf:	jmp    0x100591d1
10064ce4:	lea    eax,[ebp-0x14]
10064ce7:	jmp    0x100231e9
10064cec:	lea    esi,[ebp-0x1c]
10064cef:	jmp    0x1002bbc7
10064cf4:	mov    edx,DWORD PTR [esp+0x8]
10064cf8:	lea    eax,[edx+0xc]
10064cfb:	mov    ecx,DWORD PTR [edx-0x20]
10064cfe:	xor    ecx,eax
10064d00:	call   0x10042e97
10064d05:	mov    eax,0x1007bc54
10064d0a:	jmp    0x100591d1
10064d0f:	lea    eax,[ebp-0x14]
10064d12:	jmp    0x100231e9
10064d17:	lea    esi,[ebp-0x1c]
10064d1a:	jmp    0x1002bbc7
10064d1f:	mov    edx,DWORD PTR [esp+0x8]
10064d23:	lea    eax,[edx+0xc]
10064d26:	mov    ecx,DWORD PTR [edx-0x20]
10064d29:	xor    ecx,eax
10064d2b:	call   0x10042e97
10064d30:	mov    eax,0x1007bcbc
10064d35:	jmp    0x100591d1
10064d3a:	lea    eax,[ebp-0x34]
10064d3d:	jmp    0x10024aab
10064d42:	lea    eax,[ebp-0x2c]
10064d45:	jmp    0x1000db6f
10064d4a:	push   DWORD PTR [ebp-0x40]
10064d4d:	call   0x10042e92
10064d52:	pop    ecx
10064d53:	ret    
10064d54:	lea    eax,[ebp-0x40]
10064d57:	jmp    0x10009e32
10064d5c:	lea    eax,[ebp-0x3c]
10064d5f:	jmp    0x10009c34
10064d64:	lea    eax,[ebp-0x38]
10064d67:	jmp    0x10009c34
10064d6c:	mov    edx,DWORD PTR [esp+0x8]
10064d70:	lea    eax,[edx-0x54]
10064d73:	mov    ecx,DWORD PTR [edx-0x58]
10064d76:	xor    ecx,eax
10064d78:	call   0x10042e97
10064d7d:	mov    eax,0x1007bd10
10064d82:	jmp    0x100591d1
10064d87:	lea    eax,[ebp-0x14]
10064d8a:	jmp    0x10009c34
10064d8f:	mov    edx,DWORD PTR [esp+0x8]
10064d93:	lea    eax,[edx+0xc]
10064d96:	mov    ecx,DWORD PTR [edx-0x18]
10064d99:	xor    ecx,eax
10064d9b:	call   0x10042e97
10064da0:	mov    eax,0x1007bd70
10064da5:	jmp    0x100591d1
10064daa:	lea    eax,[ebp+0x8]
10064dad:	jmp    0x1001aec2
10064db2:	lea    eax,[ebp-0x10]
10064db5:	jmp    0x10034d30
10064dba:	lea    ecx,[ebp-0x30]
10064dbd:	jmp    0x10007f41
10064dc2:	mov    edx,DWORD PTR [esp+0x8]
10064dc6:	lea    eax,[edx+0xc]
10064dc9:	mov    ecx,DWORD PTR [edx-0x38]
10064dcc:	xor    ecx,eax
10064dce:	call   0x10042e97
10064dd3:	mov    eax,0x1007bdac
10064dd8:	jmp    0x100591d1
10064ddd:	lea    ecx,[ebp-0x30]
10064de0:	jmp    0x10007f41
10064de5:	lea    eax,[ebp-0x54]
10064de8:	jmp    0x1000461e
10064ded:	lea    ecx,[ebp-0x4c]
10064df0:	jmp    0x10007f41
10064df5:	lea    eax,[ebp-0x50]
10064df8:	jmp    0x10034d30
10064dfd:	push   DWORD PTR [ebp-0x58]
10064e00:	call   0x10042e92
10064e05:	pop    ecx
10064e06:	ret    
10064e07:	lea    esi,[ebp-0x6c]
10064e0a:	jmp    0x1002b296
10064e0f:	lea    eax,[ebp-0x64]
10064e12:	jmp    0x1000216c
10064e17:	push   DWORD PTR [ebp-0x50]
10064e1a:	call   0x10042e92
10064e1f:	pop    ecx
10064e20:	ret    
10064e21:	lea    eax,[ebp-0x78]
10064e24:	jmp    0x1002d961
10064e29:	lea    esi,[ebp-0x50]
10064e2c:	jmp    0x10004634
10064e31:	lea    esi,[ebp-0x60]
10064e34:	jmp    0x10004634
10064e39:	mov    edx,DWORD PTR [esp+0x8]
10064e3d:	lea    eax,[edx+0xc]
10064e40:	mov    ecx,DWORD PTR [edx-0x7c]
10064e43:	xor    ecx,eax
10064e45:	call   0x10042e97
10064e4a:	mov    ecx,DWORD PTR [edx-0x8]
10064e4d:	xor    ecx,eax
10064e4f:	call   0x10042e97
10064e54:	mov    eax,0x1007be6c
10064e59:	jmp    0x100591d1
10064e5e:	lea    ecx,[ebp-0xbc]
10064e64:	jmp    0x10007f41
10064e69:	lea    ecx,[ebp-0x68]
10064e6c:	jmp    0x10007f41
10064e71:	lea    ecx,[ebp-0x30]
10064e74:	jmp    0x10007f41
10064e79:	lea    ecx,[ebp-0xa0]
10064e7f:	jmp    0x10007f41
10064e84:	lea    ecx,[ebp-0x84]
10064e8a:	jmp    0x10007f41
10064e8f:	lea    ecx,[ebp-0x4c]
10064e92:	jmp    0x10007f41
10064e97:	lea    ecx,[ebp-0xf4]
10064e9d:	jmp    0x10007f41
10064ea2:	lea    ecx,[ebp-0x114]
10064ea8:	jmp    0x10007f41
10064ead:	lea    ecx,[ebp-0xa0]
10064eb3:	jmp    0x10007f41
10064eb8:	lea    ecx,[ebp-0x4c]
10064ebb:	jmp    0x10007f41
10064ec0:	lea    ecx,[ebp-0x84]
10064ec6:	jmp    0x10007f41
10064ecb:	lea    ecx,[ebp-0x114]
10064ed1:	jmp    0x10007f41
10064ed6:	lea    ecx,[ebp-0xf4]
10064edc:	jmp    0x10007f41
10064ee1:	lea    ecx,[ebp-0xd8]
10064ee7:	jmp    0x10007f41
10064eec:	push   DWORD PTR [ebp-0x118]
10064ef2:	call   0x10042e92
10064ef7:	pop    ecx
10064ef8:	ret    
10064ef9:	lea    ecx,[ebp-0x114]
10064eff:	jmp    0x10007f41
10064f04:	lea    ecx,[ebp-0xa0]
10064f0a:	jmp    0x10007f41
10064f0f:	lea    ecx,[ebp-0xf4]
10064f15:	jmp    0x10007f41
10064f1a:	lea    ecx,[ebp-0x114]
10064f20:	jmp    0x10007f41
10064f25:	lea    ecx,[ebp-0x114]
10064f2b:	jmp    0x10007f41
10064f30:	lea    ecx,[ebp-0xa0]
10064f36:	jmp    0x10007f41
10064f3b:	lea    ecx,[ebp-0xf4]
10064f41:	jmp    0x10007f41
10064f46:	lea    ecx,[ebp-0x114]
10064f4c:	jmp    0x10007f41
10064f51:	lea    ecx,[ebp-0xf4]
10064f57:	jmp    0x10007f41
10064f5c:	lea    ecx,[ebp-0x114]
10064f62:	jmp    0x10007f41
10064f67:	lea    ecx,[ebp-0x114]
10064f6d:	jmp    0x10007f41
10064f72:	lea    ecx,[ebp-0x114]
10064f78:	jmp    0x10007f41
10064f7d:	mov    edx,DWORD PTR [esp+0x8]
10064f81:	lea    eax,[edx-0x12c]
10064f87:	mov    ecx,DWORD PTR [edx-0x130]
10064f8d:	xor    ecx,eax
10064f8f:	call   0x10042e97
10064f94:	add    eax,0xc
10064f97:	mov    ecx,DWORD PTR [edx-0x8]
10064f9a:	xor    ecx,eax
10064f9c:	call   0x10042e97
10064fa1:	mov    eax,0x1007bf70
10064fa6:	jmp    0x100591d1
10064fab:	lea    ecx,[ebp+0x88]
10064fb1:	jmp    0x10007f41
10064fb6:	lea    eax,[ebp-0x1c]
10064fb9:	jmp    0x1000421f
10064fbe:	lea    esi,[ebp+0x0]
10064fc1:	jmp    0x100033ac
10064fc6:	mov    edx,DWORD PTR [esp+0x8]
10064fca:	lea    eax,[edx+0xc]
10064fcd:	mov    ecx,DWORD PTR [edx-0x34]
10064fd0:	xor    ecx,eax
10064fd2:	call   0x10042e97
10064fd7:	mov    ecx,DWORD PTR [edx+0xb0]
10064fdd:	xor    ecx,eax
10064fdf:	call   0x10042e97
10064fe4:	mov    eax,0x1007bfe0
10064fe9:	jmp    0x100591d1
10064fee:	jmp    0x10037970
10064ff3:	lea    ecx,[ebp-0x14]
10064ff6:	jmp    0x10015ddd
10064ffb:	mov    edx,DWORD PTR [esp+0x8]
10064fff:	lea    eax,[edx+0xc]
10065002:	mov    ecx,DWORD PTR [edx-0x18]
10065005:	xor    ecx,eax
10065007:	call   0x10042e97
1006500c:	mov    eax,0x1007c048
10065011:	jmp    0x100591d1
10065016:	lea    eax,[ebp-0x2c]
10065019:	jmp    0x1000db6f
1006501e:	push   DWORD PTR [ebp-0x38]
10065021:	call   0x10042e92
10065026:	pop    ecx
10065027:	ret    
10065028:	lea    eax,[ebp-0x34]
1006502b:	jmp    0x10009e23
10065030:	lea    eax,[ebp-0x40]
10065033:	jmp    0x10009c34
10065038:	lea    eax,[ebp-0x30]
1006503b:	jmp    0x10039e40
10065040:	mov    edx,DWORD PTR [esp+0x8]
10065044:	lea    eax,[edx-0x4c]
10065047:	mov    ecx,DWORD PTR [edx-0x50]
1006504a:	xor    ecx,eax
1006504c:	call   0x10042e97
10065051:	mov    eax,0x1007c094
10065056:	jmp    0x100591d1
1006505b:	jmp    0x10037970
10065060:	lea    ecx,[ebp-0x14]
10065063:	jmp    0x10015ddd
10065068:	mov    edx,DWORD PTR [esp+0x8]
1006506c:	lea    eax,[edx+0xc]
1006506f:	mov    ecx,DWORD PTR [edx-0x18]
10065072:	xor    ecx,eax
10065074:	call   0x10042e97
10065079:	mov    eax,0x1007c0fc
1006507e:	jmp    0x100591d1
10065083:	lea    ecx,[ebp-0xa88]
10065089:	jmp    0x10015ddd
1006508e:	push   0x10015ddd
10065093:	push   0x40
10065095:	push   0x4
10065097:	lea    eax,[ebp-0x210]
1006509d:	push   eax
1006509e:	call   0x100430f9
100650a3:	ret    
100650a4:	push   0x10015ddd
100650a9:	push   0x40
100650ab:	push   0x4
100650ad:	lea    eax,[ebp-0x310]
100650b3:	push   eax
100650b4:	call   0x100430f9
100650b9:	ret    
100650ba:	push   0x10015ddd
100650bf:	push   0x40
100650c1:	push   0x4
100650c3:	lea    eax,[ebp-0x110]
100650c9:	push   eax
100650ca:	call   0x100430f9
100650cf:	ret    
100650d0:	lea    ecx,[ebp-0xa8c]
100650d6:	jmp    0x10015ddd
100650db:	mov    edx,DWORD PTR [esp+0x8]
100650df:	lea    eax,[edx-0xa94]
100650e5:	mov    ecx,DWORD PTR [edx-0xa98]
100650eb:	xor    ecx,eax
100650ed:	call   0x10042e97
100650f2:	mov    eax,0x1007c148
100650f7:	jmp    0x100591d1
100650fc:	lea    ecx,[ebp+0xc]
100650ff:	jmp    0x10015ddd
10065104:	mov    edx,DWORD PTR [esp+0x8]
10065108:	lea    eax,[edx+0xc]
1006510b:	mov    ecx,DWORD PTR [edx-0x14]
1006510e:	xor    ecx,eax
10065110:	call   0x10042e97
10065115:	mov    eax,0x1007c174
1006511a:	jmp    0x100591d1
1006511f:	mov    eax,0x10080f30
10065124:	jmp    0x1001aec2
10065129:	mov    edx,DWORD PTR [esp+0x8]
1006512d:	lea    eax,[edx+0xc]
10065130:	mov    ecx,DWORD PTR [edx-0x10]
10065133:	xor    ecx,eax
10065135:	call   0x10042e97
1006513a:	mov    eax,0x1007c1bc
1006513f:	jmp    0x100591d1
10065144:	mov    esi,0x10080da4
10065149:	jmp    0x10004634
1006514e:	mov    esi,0x10080da8
10065153:	jmp    0x10004634
10065158:	mov    edx,DWORD PTR [esp+0x8]
1006515c:	lea    eax,[edx+0xc]
1006515f:	mov    ecx,DWORD PTR [edx-0x10]
10065162:	xor    ecx,eax
10065164:	call   0x10042e97
10065169:	mov    eax,0x1007c1f0
1006516e:	jmp    0x100591d1
10065173:	int3   
10065174:	int3   
10065175:	int3   
10065176:	int3   
10065177:	int3   
10065178:	int3   
10065179:	int3   
1006517a:	int3   
1006517b:	int3   
1006517c:	int3   
1006517d:	int3   
1006517e:	int3   
1006517f:	int3   
10065180:	push   0x32
10065182:	push   0xa
10065184:	push   0x10080d54
10065189:	call   0x1001974b
1006518e:	push   0x100656e0
10065193:	call   0x10043274
10065198:	pop    ecx
10065199:	ret    
1006519a:	xor    eax,eax
1006519c:	push   eax
1006519d:	push   eax
1006519e:	push   eax
1006519f:	call   DWORD PTR ds:0x10066074
100651a5:	mov    ds:0x10080d78,eax
100651aa:	ret    
100651ab:	push   0x100656eb
100651b0:	call   0x10043274
100651b5:	pop    ecx
100651b6:	ret    
100651b7:	push   0x24e0b33c
100651bc:	push   0x273e92c0
100651c1:	push   0x1006d044
100651c6:	call   0x10004246
100651cb:	pop    ecx
100651cc:	pop    ecx
100651cd:	push   eax
100651ce:	call   0x10004246
100651d3:	push   eax
100651d4:	push   0xd
100651d6:	push   0x1006d06c
100651db:	call   0x10004258
100651e0:	add    esp,0x14
100651e3:	mov    ds:0x10080d8c,eax
100651e8:	ret    
100651e9:	push   0x48568dac
100651ee:	push   0x1006d07c
100651f3:	call   0x10004246
100651f8:	push   eax
100651f9:	push   0x10
100651fb:	push   0x1006d0a8
10065200:	call   0x10004258
10065205:	add    esp,0x14
10065208:	mov    ds:0x10080d90,eax
1006520d:	ret    
1006520e:	push   0x55344ad2
10065213:	push   0x2c322184
10065218:	push   0x1006d0bc
1006521d:	call   0x10004246
10065222:	pop    ecx
10065223:	pop    ecx
10065224:	push   eax
10065225:	call   0x10004246
1006522a:	push   eax
1006522b:	push   0x11
1006522d:	push   0x1006d0f0
10065232:	call   0x10004258
10065237:	add    esp,0x14
1006523a:	mov    ds:0x10080d88,eax
1006523f:	ret    
10065240:	push   0x383d10e8
10065245:	push   0x1006d104
1006524a:	call   0x10004246
1006524f:	push   eax
10065250:	push   0x11
10065252:	push   0x1006d13c
10065257:	call   0x10004258
1006525c:	add    esp,0x14
1006525f:	mov    ds:0x10080d84,eax
10065264:	ret    
10065265:	call   0x1000bca1
1006526a:	push   0x10065706
1006526f:	call   0x10043274
10065274:	pop    ecx
10065275:	ret    
10065276:	push   0x6aa3a29a
1006527b:	push   0x1006dc7c
10065280:	call   0x10004246
10065285:	push   eax
10065286:	push   0x2
10065288:	push   0x1006dcb0
1006528d:	call   0x10004258
10065292:	add    esp,0x14
10065295:	mov    ds:0x10081438,eax
1006529a:	ret    
1006529b:	push   0x1006e198
100652a0:	push   0x1
100652a2:	push   0x1006d47c
100652a7:	call   0x10004258
100652ac:	add    esp,0xc
100652af:	mov    ds:0x1008143c,eax
100652b4:	ret    
100652b5:	push   0x1006e218
100652ba:	push   0x10
100652bc:	push   0x1006e24c
100652c1:	call   0x10004258
100652c6:	add    esp,0xc
100652c9:	mov    ds:0x10080dc0,eax
100652ce:	ret    
100652cf:	push   0x22349bf8
100652d4:	push   0x5bd1499a
100652d9:	push   0x19e2f978
100652de:	push   0x721f6440
100652e3:	push   0x1006e260
100652e8:	call   0x10004246
100652ed:	pop    ecx
100652ee:	pop    ecx
100652ef:	push   eax
100652f0:	call   0x10004246
100652f5:	pop    ecx
100652f6:	pop    ecx
100652f7:	push   eax
100652f8:	call   0x10004246
100652fd:	pop    ecx
100652fe:	pop    ecx
100652ff:	push   eax
10065300:	call   0x10004246
10065305:	push   eax
10065306:	push   0x10
10065308:	push   0x1006e284
1006530d:	call   0x10004258
10065312:	add    esp,0x14
10065315:	mov    ds:0x10080dbc,eax
1006531a:	ret    
1006531b:	push   0x536a21e
10065320:	push   0x1006e298
10065325:	call   0x10004246
1006532a:	push   eax
1006532b:	push   0x10
1006532d:	push   0x1006e2c0
10065332:	call   0x10004258
10065337:	add    esp,0x14
1006533a:	mov    ds:0x10080db8,eax
1006533f:	ret    
10065340:	push   edi
10065341:	mov    edi,0x10080dc8
10065346:	call   0x10012a34
1006534b:	push   0x10065764
10065350:	call   0x10043274
10065355:	pop    ecx
10065356:	pop    edi
10065357:	ret    
10065358:	xor    eax,eax
1006535a:	push   eax
1006535b:	push   eax
1006535c:	push   eax
1006535d:	call   DWORD PTR ds:0x10066074
10065363:	mov    ds:0x10080dc4,eax
10065368:	ret    
10065369:	call   0x10012dfb
1006536e:	push   0x10065771
10065373:	call   0x10043274
10065378:	pop    ecx
10065379:	ret    
1006537a:	call   0x10017fbe
1006537f:	mov    ds:0x10080e7c,eax
10065384:	mov    BYTE PTR [eax+0x15],0x1
10065388:	mov    eax,ds:0x10080e7c
1006538d:	mov    DWORD PTR [eax+0x4],eax
10065390:	mov    eax,ds:0x10080e7c
10065395:	mov    DWORD PTR [eax],eax
10065397:	mov    eax,ds:0x10080e7c
1006539c:	mov    DWORD PTR [eax+0x8],eax
1006539f:	and    DWORD PTR ds:0x10080e80,0x0
100653a6:	push   0x10065776
100653ab:	call   0x10043274
100653b0:	pop    ecx
100653b1:	ret    
100653b2:	push   esi
100653b3:	mov    esi,0x10080e98
100653b8:	push   edi
100653b9:	mov    ecx,esi
100653bb:	call   0x10014357
100653c0:	xor    eax,eax
100653c2:	mov    edi,0x10080e88
100653c7:	mov    ecx,esi
100653c9:	mov    ds:0x10080e8c,eax
100653ce:	mov    ds:0x10080e94,eax
100653d3:	mov    ds:0x10080e90,eax
100653d8:	mov    DWORD PTR ds:0x10080c04,edi
100653de:	mov    ds:0x10080eb0,eax
100653e3:	call   0x1001436b
100653e8:	test   eax,eax
100653ea:	jge    0x100653f5
100653ec:	mov    BYTE PTR ds:0x10080c00,0x1
100653f3:	jmp    0x100653ff
100653f5:	mov    DWORD PTR ds:0x10080e8c,0x24
100653ff:	push   0x1006577b
10065404:	mov    DWORD PTR ds:0x10080e88,0x1006fc74
1006540e:	mov    DWORD PTR ds:0x10080c18,edi
10065414:	call   0x10043274
10065419:	pop    ecx
1006541a:	pop    edi
1006541b:	pop    esi
1006541c:	ret    
1006541d:	xor    eax,eax
1006541f:	push   eax
10065420:	push   eax
10065421:	push   eax
10065422:	call   DWORD PTR ds:0x10066074
10065428:	mov    ds:0x10080ec8,eax
1006542d:	ret    
1006542e:	push   0x1006578f
10065433:	call   0x10043274
10065438:	pop    ecx
10065439:	ret    
1006543a:	call   0x100192cb
1006543f:	mov    ds:0x10080ed0,eax
10065444:	mov    BYTE PTR [eax+0x29],0x1
10065448:	mov    eax,ds:0x10080ed0
1006544d:	mov    DWORD PTR [eax+0x4],eax
10065450:	mov    eax,ds:0x10080ed0
10065455:	mov    DWORD PTR [eax],eax
10065457:	mov    eax,ds:0x10080ed0
1006545c:	mov    DWORD PTR [eax+0x8],eax
1006545f:	and    DWORD PTR ds:0x10080ed4,0x0
10065466:	push   0x1006579c
1006546b:	call   0x10043274
10065470:	pop    ecx
10065471:	ret    
10065472:	call   0x1001957f
10065477:	mov    ds:0x10080edc,eax
1006547c:	xor    eax,eax
1006547e:	push   eax
1006547f:	push   eax
10065480:	push   eax
10065481:	mov    ds:0x10080ee0,eax
10065486:	call   DWORD PTR ds:0x10066074
1006548c:	push   0x100657a6
10065491:	mov    ds:0x10080ee4,eax
10065496:	call   0x10043274
1006549b:	pop    ecx
1006549c:	ret    
1006549d:	push   0x32
1006549f:	push   0xa
100654a1:	push   0x10080ee8
100654a6:	call   0x1001974b
100654ab:	push   0x100657c6
100654b0:	call   0x10043274
100654b5:	pop    ecx
100654b6:	ret    
100654b7:	push   0xfa
100654bc:	push   0x32
100654be:	push   0x10080f0c
100654c3:	call   0x1001974b
100654c8:	push   0x100657d1
100654cd:	call   0x10043274
100654d2:	pop    ecx
100654d3:	ret    
100654d4:	push   0x0
100654d6:	mov    eax,0x10065129
100654db:	call   0x10059a35
100654e0:	call   0x1001b04b
100654e5:	xor    esi,esi
100654e7:	mov    ds:0x10080f34,eax
100654ec:	mov    DWORD PTR ds:0x10080f38,esi
100654f2:	mov    DWORD PTR [esp+0x18],esi
100654f6:	call   0x1001b063
100654fb:	push   esi
100654fc:	push   esi
100654fd:	push   esi
100654fe:	mov    ds:0x10080f40,eax
10065503:	mov    DWORD PTR ds:0x10080f44,esi
10065509:	mov    DWORD PTR ds:0x10080f4c,esi
1006550f:	call   DWORD PTR ds:0x10066074
10065515:	push   0x100657dc
1006551a:	mov    ds:0x10080f48,eax
1006551f:	call   0x10043274
10065524:	pop    ecx
10065525:	call   0x10059b0d
1006552a:	ret    
1006552b:	call   0x100218ca
10065530:	mov    ds:0x10080f58,eax
10065535:	mov    BYTE PTR [eax+0x21],0x1
10065539:	mov    eax,ds:0x10080f58
1006553e:	mov    DWORD PTR [eax+0x4],eax
10065541:	mov    eax,ds:0x10080f58
10065546:	mov    DWORD PTR [eax],eax
10065548:	mov    eax,ds:0x10080f58
1006554d:	mov    DWORD PTR [eax+0x8],eax
10065550:	and    DWORD PTR ds:0x10080f5c,0x0
10065557:	push   0x100657f2
1006555c:	call   0x10043274
10065561:	pop    ecx
10065562:	ret    
10065563:	xor    eax,eax
10065565:	push   eax
10065566:	push   eax
10065567:	push   eax
10065568:	call   DWORD PTR ds:0x10066074
1006556e:	mov    ds:0x10080f50,eax
10065573:	ret    
10065574:	xor    eax,eax
10065576:	push   eax
10065577:	push   eax
10065578:	push   eax
10065579:	call   DWORD PTR ds:0x10066074
1006557f:	mov    ds:0x10080f60,eax
10065584:	ret    
10065585:	xor    eax,eax
10065587:	push   eax
10065588:	push   eax
10065589:	push   eax
1006558a:	push   eax
1006558b:	call   DWORD PTR ds:0x10066130
10065591:	mov    ds:0x10080f6c,eax
10065596:	ret    
10065597:	xor    eax,eax
10065599:	push   eax
1006559a:	push   eax
1006559b:	push   eax
1006559c:	push   eax
1006559d:	call   DWORD PTR ds:0x10066130
100655a3:	mov    ds:0x10080f64,eax
100655a8:	ret    
100655a9:	xor    eax,eax
100655ab:	push   eax
100655ac:	push   eax
100655ad:	push   eax
100655ae:	push   eax
100655af:	call   DWORD PTR ds:0x10066130
100655b5:	mov    ds:0x10080f68,eax
100655ba:	ret    
100655bb:	call   0x1001b07b
100655c0:	and    DWORD PTR ds:0x10080f90,0x0
100655c7:	push   0x1006581e
100655cc:	mov    ds:0x10080f8c,eax
100655d1:	call   0x10043274
100655d6:	pop    ecx
100655d7:	ret    
100655d8:	call   0x1001b07b
100655dd:	and    DWORD PTR ds:0x10080f84,0x0
100655e4:	push   0x1006583e
100655e9:	mov    ds:0x10080f80,eax
100655ee:	call   0x10043274
100655f3:	pop    ecx
100655f4:	ret    
100655f5:	call   0x1001b07b
100655fa:	and    DWORD PTR ds:0x10080f9c,0x0
10065601:	push   0x1006585e
10065606:	mov    ds:0x10080f98,eax
1006560b:	call   0x10043274
10065610:	pop    ecx
10065611:	ret    
10065612:	call   0x1001b07b
10065617:	and    DWORD PTR ds:0x10080f78,0x0
1006561e:	push   0x1006587e
10065623:	mov    ds:0x10080f74,eax
10065628:	call   0x10043274
1006562d:	pop    ecx
1006562e:	ret    
1006562f:	int3   
10065630:	push   0x0
10065632:	push   0x0
10065634:	push   0x1
10065636:	push   0x0
10065638:	call   DWORD PTR ds:0x10066130
1006563e:	mov    ds:0x10080fa0,eax
10065643:	ret    
10065644:	int3   
10065645:	int3   
10065646:	int3   
10065647:	int3   
10065648:	int3   
10065649:	int3   
1006564a:	int3   
1006564b:	int3   
1006564c:	int3   
1006564d:	int3   
1006564e:	int3   
1006564f:	int3   
10065650:	push   0x100658a0
10065655:	call   0x10043274
1006565a:	pop    ecx
1006565b:	ret    
1006565c:	int3   
1006565d:	int3   
1006565e:	int3   
1006565f:	int3   
10065660:	push   0x100658f0
10065665:	call   0x10043274
1006566a:	pop    ecx
1006566b:	ret    
1006566c:	mov    ecx,0x10080a00
10065671:	call   0x10056d61
10065676:	push   0x100658fc
1006567b:	call   0x10043274
10065680:	pop    ecx
10065681:	ret    
10065682:	mov    ecx,0x10080a3c
10065687:	call   0x10056d3b
1006568c:	push   0x10065906
10065691:	call   0x10043274
10065696:	pop    ecx
10065697:	ret    
10065698:	call   DWORD PTR ds:0x100661ac
1006569e:	push   0x10065910
100656a3:	mov    DWORD PTR ds:0x10080a68,0x1006b8f8
100656ad:	mov    ds:0x10080a6c,eax
100656b2:	mov    BYTE PTR ds:0x10080a70,0x0
100656b9:	call   0x10043274
100656be:	pop    ecx
100656bf:	ret    
100656c0:	push   0x10080a68
100656c5:	mov    ecx,0x10080a74
100656ca:	call   0x10056ed4
100656cf:	push   0x1006591a
100656d4:	call   0x10043274
100656d9:	pop    ecx
100656da:	ret    
100656db:	int3   
100656dc:	int3   
100656dd:	int3   
100656de:	int3   
100656df:	int3   
100656e0:	push   0x10080d54
100656e5:	call   0x100011fd
100656ea:	ret    
100656eb:	ret    
100656ec:	jmp    0x10005210
100656f1:	jmp    0x10004ebd
100656f6:	mov    eax,ds:0x10081428
100656fb:	test   eax,eax
100656fd:	je     0x10065705
100656ff:	mov    ecx,DWORD PTR [eax]
10065701:	push   eax
10065702:	call   DWORD PTR [ecx+0x8]
10065705:	ret    
10065706:	push   0x0
10065708:	mov    eax,0x10065158
1006570d:	call   0x10059a35
10065712:	push   0xffffffff
10065714:	mov    DWORD PTR [esp+0x1c],0x1
1006571c:	push   DWORD PTR ds:0x10080da8
10065722:	call   DWORD PTR ds:0x10066084
10065728:	mov    eax,0x10080dac
1006572d:	call   0x1000d214
10065732:	mov    eax,ds:0x10080da8
10065737:	test   eax,eax
10065739:	mov    esi,DWORD PTR ds:0x10066070
1006573f:	je     0x10065744
10065741:	push   eax
10065742:	call   esi
10065744:	mov    eax,ds:0x10080da4
10065749:	and    DWORD PTR ds:0x10080da8,0x0
10065750:	test   eax,eax
10065752:	je     0x10065757
10065754:	push   eax
10065755:	call   esi
10065757:	and    DWORD PTR ds:0x10080da4,0x0
1006575e:	call   0x10059b0d
10065763:	ret    
10065764:	push   esi
10065765:	mov    esi,0x10080dc8
1006576a:	call   0x1000bbfd
1006576f:	pop    esi
10065770:	ret    
10065771:	jmp    0x10012e72
10065776:	jmp    0x100177fe
1006577b:	mov    DWORD PTR ds:0x10080e88,0x1006fc74
10065785:	mov    ecx,0x10080e88
1006578a:	jmp    0x100143c5
1006578f:	push   esi
10065790:	mov    esi,0x10080eb8
10065795:	call   0x10004743
1006579a:	pop    esi
1006579b:	ret    
1006579c:	mov    eax,0x10080ecc
100657a1:	jmp    0x10018eed
100657a6:	push   esi
100657a7:	mov    esi,0x10080ed8
100657ac:	call   0x100194d8
100657b1:	push   DWORD PTR ds:0x10080edc
100657b7:	call   0x10042e92
100657bc:	and    DWORD PTR ds:0x10080edc,0x0
100657c3:	pop    ecx
100657c4:	pop    esi
100657c5:	ret    
100657c6:	push   0x10080ee8
100657cb:	call   0x100011fd
100657d0:	ret    
100657d1:	push   0x10080f0c
100657d6:	call   0x100011fd
100657db:	ret    
100657dc:	push   esi
100657dd:	mov    esi,0x10080f3c
100657e2:	call   0x1001af2b
100657e7:	mov    eax,0x10080f30
100657ec:	pop    esi
100657ed:	jmp    0x1001aec2
100657f2:	jmp    0x1002056e
100657f7:	mov    eax,ds:0x1008142c
100657fc:	test   eax,eax
100657fe:	push   esi
100657ff:	mov    esi,eax
10065801:	je     0x1006581c
10065803:	push   0x100228f3
10065808:	push   0x2
1006580a:	push   0x14
1006580c:	add    eax,0x4
1006580f:	push   eax
10065810:	call   0x100430f9
10065815:	push   esi
10065816:	call   0x10042e92
1006581b:	pop    ecx
1006581c:	pop    esi
1006581d:	ret    
1006581e:	push   esi
1006581f:	mov    esi,0x10080f88
10065824:	call   0x10026ca5
10065829:	push   DWORD PTR ds:0x10080f8c
1006582f:	call   0x10042e92
10065834:	and    DWORD PTR ds:0x10080f8c,0x0
1006583b:	pop    ecx
1006583c:	pop    esi
1006583d:	ret    
1006583e:	push   esi
1006583f:	mov    esi,0x10080f7c
10065844:	call   0x10026ca5
10065849:	push   DWORD PTR ds:0x10080f80
1006584f:	call   0x10042e92
10065854:	and    DWORD PTR ds:0x10080f80,0x0
1006585b:	pop    ecx
1006585c:	pop    esi
1006585d:	ret    
1006585e:	push   esi
1006585f:	mov    esi,0x10080f94
10065864:	call   0x10026ca5
10065869:	push   DWORD PTR ds:0x10080f98
1006586f:	call   0x10042e92
10065874:	and    DWORD PTR ds:0x10080f98,0x0
1006587b:	pop    ecx
1006587c:	pop    esi
1006587d:	ret    
1006587e:	push   esi
1006587f:	mov    esi,0x10080f70
10065884:	call   0x10026ca5
10065889:	push   DWORD PTR ds:0x10080f74
1006588f:	call   0x10042e92
10065894:	and    DWORD PTR ds:0x10080f74,0x0
1006589b:	pop    ecx
1006589c:	pop    esi
1006589d:	ret    
1006589e:	int3   
1006589f:	int3   
100658a0:	cmp    DWORD PTR ds:0x1007f71c,0x10
100658a7:	jb     0x100658b7
100658a9:	mov    eax,ds:0x1007f708
100658ae:	push   eax
100658af:	call   0x10042e92
100658b4:	add    esp,0x4
100658b7:	xor    eax,eax
100658b9:	mov    DWORD PTR ds:0x1007f71c,0xf
100658c3:	mov    ds:0x1007f718,eax
100658c8:	mov    ds:0x1007f708,al
100658cd:	ret    
100658ce:	mov    DWORD PTR ds:0x1007fa84,0x100665c8
100658d8:	mov    ecx,0x1007fa84
100658dd:	jmp    0x10042fd0
100658e2:	int3   
100658e3:	int3   
100658e4:	int3   
100658e5:	int3   
100658e6:	int3   
100658e7:	int3   
100658e8:	int3   
100658e9:	int3   
100658ea:	int3   
100658eb:	int3   
100658ec:	int3   
100658ed:	int3   
100658ee:	int3   
100658ef:	int3   
100658f0:	push   0x1007ef80
100658f5:	call   DWORD PTR ds:0x10066294
100658fb:	ret    
100658fc:	mov    ecx,0x10080a00
10065901:	jmp    0x10056ccf
10065906:	mov    ecx,0x10080a3c
1006590b:	jmp    0x10056e10
10065910:	mov    ecx,0x10080a68
10065915:	jmp    0x10056e28
1006591a:	mov    DWORD PTR ds:0x10080a74,0x1006b90c
10065924:	ret    
